
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//preloadable_libintl.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001d00 <.init>:
    1d00:	stp	x29, x30, [sp, #-16]!
    1d04:	mov	x29, sp
    1d08:	bl	2230 <libintl_ngettext@plt+0x10>
    1d0c:	ldp	x29, x30, [sp], #16
    1d10:	ret

Disassembly of section .plt:

0000000000001d20 <memcpy@plt-0x20>:
    1d20:	stp	x16, x30, [sp, #-16]!
    1d24:	adrp	x16, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    1d28:	ldr	x17, [x16, #4088]
    1d2c:	add	x16, x16, #0xff8
    1d30:	br	x17
    1d34:	nop
    1d38:	nop
    1d3c:	nop

0000000000001d40 <memcpy@plt>:
    1d40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16]
    1d48:	add	x16, x16, #0x0
    1d4c:	br	x17

0000000000001d50 <libintl_dngettext@plt>:
    1d50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #8]
    1d58:	add	x16, x16, #0x8
    1d5c:	br	x17

0000000000001d60 <pthread_rwlockattr_init@plt>:
    1d60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #16]
    1d68:	add	x16, x16, #0x10
    1d6c:	br	x17

0000000000001d70 <getcwd@plt>:
    1d70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #24]
    1d78:	add	x16, x16, #0x18
    1d7c:	br	x17

0000000000001d80 <strtoul@plt>:
    1d80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #32]
    1d88:	add	x16, x16, #0x20
    1d8c:	br	x17

0000000000001d90 <strlen@plt>:
    1d90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #40]
    1d98:	add	x16, x16, #0x28
    1d9c:	br	x17

0000000000001da0 <raise@plt>:
    1da0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #48]
    1da8:	add	x16, x16, #0x30
    1dac:	br	x17

0000000000001db0 <pthread_mutexattr_settype@plt>:
    1db0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #56]
    1db8:	add	x16, x16, #0x38
    1dbc:	br	x17

0000000000001dc0 <pthread_rwlock_rdlock@plt>:
    1dc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #64]
    1dc8:	add	x16, x16, #0x40
    1dcc:	br	x17

0000000000001dd0 <getegid@plt>:
    1dd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #72]
    1dd8:	add	x16, x16, #0x48
    1ddc:	br	x17

0000000000001de0 <geteuid@plt>:
    1de0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #80]
    1de8:	add	x16, x16, #0x50
    1dec:	br	x17

0000000000001df0 <pthread_rwlock_init@plt>:
    1df0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #88]
    1df8:	add	x16, x16, #0x58
    1dfc:	br	x17

0000000000001e00 <pthread_rwlockattr_setkind_np@plt>:
    1e00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #96]
    1e08:	add	x16, x16, #0x60
    1e0c:	br	x17

0000000000001e10 <fgets_unlocked@plt>:
    1e10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #104]
    1e18:	add	x16, x16, #0x68
    1e1c:	br	x17

0000000000001e20 <__cxa_finalize@plt>:
    1e20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #112]
    1e28:	add	x16, x16, #0x70
    1e2c:	br	x17

0000000000001e30 <getuid@plt>:
    1e30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #120]
    1e38:	add	x16, x16, #0x78
    1e3c:	br	x17

0000000000001e40 <putc@plt>:
    1e40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #128]
    1e48:	add	x16, x16, #0x80
    1e4c:	br	x17

0000000000001e50 <qsort@plt>:
    1e50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #136]
    1e58:	add	x16, x16, #0x88
    1e5c:	br	x17

0000000000001e60 <libintl_textdomain@plt>:
    1e60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #144]
    1e68:	add	x16, x16, #0x90
    1e6c:	br	x17

0000000000001e70 <libintl_dcgettext@plt>:
    1e70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #152]
    1e78:	add	x16, x16, #0x98
    1e7c:	br	x17

0000000000001e80 <__ctype_tolower_loc@plt>:
    1e80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #160]
    1e88:	add	x16, x16, #0xa0
    1e8c:	br	x17

0000000000001e90 <tfind@plt>:
    1e90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #168]
    1e98:	add	x16, x16, #0xa8
    1e9c:	br	x17

0000000000001ea0 <stpcpy@plt>:
    1ea0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #176]
    1ea8:	add	x16, x16, #0xb0
    1eac:	br	x17

0000000000001eb0 <fclose@plt>:
    1eb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #184]
    1eb8:	add	x16, x16, #0xb8
    1ebc:	br	x17

0000000000001ec0 <nl_langinfo@plt>:
    1ec0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #192]
    1ec8:	add	x16, x16, #0xc0
    1ecc:	br	x17

0000000000001ed0 <fopen@plt>:
    1ed0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #200]
    1ed8:	add	x16, x16, #0xc8
    1edc:	br	x17

0000000000001ee0 <malloc@plt>:
    1ee0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #208]
    1ee8:	add	x16, x16, #0xd0
    1eec:	br	x17

0000000000001ef0 <pthread_rwlock_destroy@plt>:
    1ef0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #216]
    1ef8:	add	x16, x16, #0xd8
    1efc:	br	x17

0000000000001f00 <open@plt>:
    1f00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #224]
    1f08:	add	x16, x16, #0xe0
    1f0c:	br	x17

0000000000001f10 <strncmp@plt>:
    1f10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #232]
    1f18:	add	x16, x16, #0xe8
    1f1c:	br	x17

0000000000001f20 <_nl_expand_alias@plt>:
    1f20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #240]
    1f28:	add	x16, x16, #0xf0
    1f2c:	br	x17

0000000000001f30 <libintl_dcngettext@plt>:
    1f30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #248]
    1f38:	add	x16, x16, #0xf8
    1f3c:	br	x17

0000000000001f40 <tsearch@plt>:
    1f40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #256]
    1f48:	add	x16, x16, #0x100
    1f4c:	br	x17

0000000000001f50 <libintl_bind_textdomain_codeset@plt>:
    1f50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #264]
    1f58:	add	x16, x16, #0x108
    1f5c:	br	x17

0000000000001f60 <libintl_bindtextdomain@plt>:
    1f60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #272]
    1f68:	add	x16, x16, #0x110
    1f6c:	br	x17

0000000000001f70 <calloc@plt>:
    1f70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #280]
    1f78:	add	x16, x16, #0x118
    1f7c:	br	x17

0000000000001f80 <argz_stringify@plt>:
    1f80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #288]
    1f88:	add	x16, x16, #0x120
    1f8c:	br	x17

0000000000001f90 <bsearch@plt>:
    1f90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #296]
    1f98:	add	x16, x16, #0x128
    1f9c:	br	x17

0000000000001fa0 <strcasecmp@plt>:
    1fa0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #304]
    1fa8:	add	x16, x16, #0x130
    1fac:	br	x17

0000000000001fb0 <realloc@plt>:
    1fb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #312]
    1fb8:	add	x16, x16, #0x138
    1fbc:	br	x17

0000000000001fc0 <strdup@plt>:
    1fc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #320]
    1fc8:	add	x16, x16, #0x140
    1fcc:	br	x17

0000000000001fd0 <pthread_mutex_init@plt>:
    1fd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #328]
    1fd8:	add	x16, x16, #0x148
    1fdc:	br	x17

0000000000001fe0 <close@plt>:
    1fe0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #336]
    1fe8:	add	x16, x16, #0x150
    1fec:	br	x17

0000000000001ff0 <__gmon_start__@plt>:
    1ff0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #344]
    1ff8:	add	x16, x16, #0x158
    1ffc:	br	x17

0000000000002000 <abort@plt>:
    2000:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #352]
    2008:	add	x16, x16, #0x160
    200c:	br	x17

0000000000002010 <pthread_rwlock_wrlock@plt>:
    2010:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #360]
    2018:	add	x16, x16, #0x168
    201c:	br	x17

0000000000002020 <dcgettext@plt>:
    2020:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2024:	ldr	x17, [x16, #368]
    2028:	add	x16, x16, #0x170
    202c:	br	x17

0000000000002030 <argz_next@plt>:
    2030:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2034:	ldr	x17, [x16, #376]
    2038:	add	x16, x16, #0x178
    203c:	br	x17

0000000000002040 <argz_count@plt>:
    2040:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2044:	ldr	x17, [x16, #384]
    2048:	add	x16, x16, #0x180
    204c:	br	x17

0000000000002050 <strcmp@plt>:
    2050:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2054:	ldr	x17, [x16, #392]
    2058:	add	x16, x16, #0x188
    205c:	br	x17

0000000000002060 <iconv@plt>:
    2060:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2064:	ldr	x17, [x16, #400]
    2068:	add	x16, x16, #0x190
    206c:	br	x17

0000000000002070 <__ctype_b_loc@plt>:
    2070:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2074:	ldr	x17, [x16, #408]
    2078:	add	x16, x16, #0x198
    207c:	br	x17

0000000000002080 <mmap@plt>:
    2080:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2084:	ldr	x17, [x16, #416]
    2088:	add	x16, x16, #0x1a0
    208c:	br	x17

0000000000002090 <uselocale@plt>:
    2090:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2094:	ldr	x17, [x16, #424]
    2098:	add	x16, x16, #0x1a8
    209c:	br	x17

00000000000020a0 <free@plt>:
    20a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16, #432]
    20a8:	add	x16, x16, #0x1b0
    20ac:	br	x17

00000000000020b0 <getgid@plt>:
    20b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #440]
    20b8:	add	x16, x16, #0x1b8
    20bc:	br	x17

00000000000020c0 <pthread_rwlock_unlock@plt>:
    20c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #448]
    20c8:	add	x16, x16, #0x1c0
    20cc:	br	x17

00000000000020d0 <libintl_dgettext@plt>:
    20d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #456]
    20d8:	add	x16, x16, #0x1c8
    20dc:	br	x17

00000000000020e0 <strchr@plt>:
    20e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16, #464]
    20e8:	add	x16, x16, #0x1d0
    20ec:	br	x17

00000000000020f0 <feof_unlocked@plt>:
    20f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #472]
    20f8:	add	x16, x16, #0x1d8
    20fc:	br	x17

0000000000002100 <fwrite@plt>:
    2100:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #480]
    2108:	add	x16, x16, #0x1e0
    210c:	br	x17

0000000000002110 <munmap@plt>:
    2110:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #488]
    2118:	add	x16, x16, #0x1e8
    211c:	br	x17

0000000000002120 <strcpy@plt>:
    2120:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #496]
    2128:	add	x16, x16, #0x1f0
    212c:	br	x17

0000000000002130 <iconv_open@plt>:
    2130:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #504]
    2138:	add	x16, x16, #0x1f8
    213c:	br	x17

0000000000002140 <read@plt>:
    2140:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #512]
    2148:	add	x16, x16, #0x200
    214c:	br	x17

0000000000002150 <pthread_mutexattr_init@plt>:
    2150:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #520]
    2158:	add	x16, x16, #0x208
    215c:	br	x17

0000000000002160 <__fxstat@plt>:
    2160:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #528]
    2168:	add	x16, x16, #0x210
    216c:	br	x17

0000000000002170 <pthread_mutexattr_destroy@plt>:
    2170:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #536]
    2178:	add	x16, x16, #0x218
    217c:	br	x17

0000000000002180 <strstr@plt>:
    2180:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #544]
    2188:	add	x16, x16, #0x220
    218c:	br	x17

0000000000002190 <pthread_rwlockattr_destroy@plt>:
    2190:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #552]
    2198:	add	x16, x16, #0x228
    219c:	br	x17

00000000000021a0 <__fsetlocking@plt>:
    21a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #560]
    21a8:	add	x16, x16, #0x230
    21ac:	br	x17

00000000000021b0 <strcspn@plt>:
    21b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21b4:	ldr	x17, [x16, #568]
    21b8:	add	x16, x16, #0x238
    21bc:	br	x17

00000000000021c0 <__errno_location@plt>:
    21c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21c4:	ldr	x17, [x16, #576]
    21c8:	add	x16, x16, #0x240
    21cc:	br	x17

00000000000021d0 <getenv@plt>:
    21d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21d4:	ldr	x17, [x16, #584]
    21d8:	add	x16, x16, #0x248
    21dc:	br	x17

00000000000021e0 <pthread_mutex_lock@plt>:
    21e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21e4:	ldr	x17, [x16, #592]
    21e8:	add	x16, x16, #0x250
    21ec:	br	x17

00000000000021f0 <pthread_mutex_unlock@plt>:
    21f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    21f4:	ldr	x17, [x16, #600]
    21f8:	add	x16, x16, #0x258
    21fc:	br	x17

0000000000002200 <libintl_gettext@plt>:
    2200:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16, #608]
    2208:	add	x16, x16, #0x260
    220c:	br	x17

0000000000002210 <setlocale@plt>:
    2210:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #616]
    2218:	add	x16, x16, #0x268
    221c:	br	x17

0000000000002220 <libintl_ngettext@plt>:
    2220:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #624]
    2228:	add	x16, x16, #0x270
    222c:	br	x17

Disassembly of section .text:

0000000000002230 <libintl_bindtextdomain@@Base-0xd4>:
    2230:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    2234:	ldr	x0, [x0, #4016]
    2238:	cbz	x0, 2240 <libintl_ngettext@plt+0x20>
    223c:	b	1ff0 <__gmon_start__@plt>
    2240:	ret
    2244:	nop
    2248:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    224c:	add	x0, x0, #0x368
    2250:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    2254:	add	x1, x1, #0x368
    2258:	cmp	x1, x0
    225c:	b.eq	2274 <libintl_ngettext@plt+0x54>  // b.none
    2260:	adrp	x1, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    2264:	ldr	x1, [x1, #3984]
    2268:	cbz	x1, 2274 <libintl_ngettext@plt+0x54>
    226c:	mov	x16, x1
    2270:	br	x16
    2274:	ret
    2278:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    227c:	add	x0, x0, #0x368
    2280:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    2284:	add	x1, x1, #0x368
    2288:	sub	x1, x1, x0
    228c:	lsr	x2, x1, #63
    2290:	add	x1, x2, x1, asr #3
    2294:	cmp	xzr, x1, asr #1
    2298:	asr	x1, x1, #1
    229c:	b.eq	22b4 <libintl_ngettext@plt+0x94>  // b.none
    22a0:	adrp	x2, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    22a4:	ldr	x2, [x2, #4056]
    22a8:	cbz	x2, 22b4 <libintl_ngettext@plt+0x94>
    22ac:	mov	x16, x2
    22b0:	br	x16
    22b4:	ret
    22b8:	stp	x29, x30, [sp, #-32]!
    22bc:	mov	x29, sp
    22c0:	str	x19, [sp, #16]
    22c4:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    22c8:	ldrb	w0, [x19, #872]
    22cc:	cbnz	w0, 22f4 <libintl_ngettext@plt+0xd4>
    22d0:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    22d4:	ldr	x0, [x0, #3992]
    22d8:	cbz	x0, 22e8 <libintl_ngettext@plt+0xc8>
    22dc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    22e0:	ldr	x0, [x0, #632]
    22e4:	bl	1e20 <__cxa_finalize@plt>
    22e8:	bl	2248 <libintl_ngettext@plt+0x28>
    22ec:	mov	w0, #0x1                   	// #1
    22f0:	strb	w0, [x19, #872]
    22f4:	ldr	x19, [sp, #16]
    22f8:	ldp	x29, x30, [sp], #32
    22fc:	ret
    2300:	b	2278 <libintl_ngettext@plt+0x58>

0000000000002304 <libintl_bindtextdomain@@Base>:
    2304:	sub	sp, sp, #0x20
    2308:	str	x1, [sp, #8]
    230c:	add	x1, sp, #0x8
    2310:	mov	x2, xzr
    2314:	stp	x29, x30, [sp, #16]
    2318:	add	x29, sp, #0x10
    231c:	bl	2330 <libintl_bindtextdomain@@Base+0x2c>
    2320:	ldr	x0, [sp, #8]
    2324:	ldp	x29, x30, [sp, #16]
    2328:	add	sp, sp, #0x20
    232c:	ret
    2330:	stp	x29, x30, [sp, #-80]!
    2334:	stp	x20, x19, [sp, #64]
    2338:	mov	x19, x2
    233c:	mov	x20, x1
    2340:	stp	x26, x25, [sp, #16]
    2344:	stp	x24, x23, [sp, #32]
    2348:	stp	x22, x21, [sp, #48]
    234c:	mov	x29, sp
    2350:	cbz	x0, 240c <libintl_bindtextdomain@@Base+0x108>
    2354:	ldrb	w8, [x0]
    2358:	mov	x21, x0
    235c:	cbz	w8, 240c <libintl_bindtextdomain@@Base+0x108>
    2360:	adrp	x25, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    2364:	ldr	x25, [x25, #4064]
    2368:	cbz	x25, 237c <libintl_bindtextdomain@@Base+0x78>
    236c:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    2370:	ldr	x0, [x0, #4048]
    2374:	bl	2010 <pthread_rwlock_wrlock@plt>
    2378:	cbnz	w0, 26a4 <libintl_bindtextdomain@@Base+0x3a0>
    237c:	adrp	x26, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    2380:	ldr	x26, [x26, #4000]
    2384:	ldr	x22, [x26]
    2388:	cbz	x22, 23bc <libintl_bindtextdomain@@Base+0xb8>
    238c:	add	x1, x22, #0x18
    2390:	mov	x0, x21
    2394:	bl	2050 <strcmp@plt>
    2398:	cmp	w0, #0x0
    239c:	cset	w8, eq  // eq = none
    23a0:	cset	w9, lt  // lt = tstop
    23a4:	csel	x10, xzr, x22, lt  // lt = tstop
    23a8:	csel	x24, x22, x10, eq  // eq = none
    23ac:	cmp	w9, w8
    23b0:	b.ne	23c0 <libintl_bindtextdomain@@Base+0xbc>  // b.any
    23b4:	ldr	x22, [x24]
    23b8:	cbnz	x22, 238c <libintl_bindtextdomain@@Base+0x88>
    23bc:	mov	x24, xzr
    23c0:	cbz	x24, 2420 <libintl_bindtextdomain@@Base+0x11c>
    23c4:	cbz	x20, 24a8 <libintl_bindtextdomain@@Base+0x1a4>
    23c8:	ldr	x22, [x20]
    23cc:	ldr	x21, [x24, #8]
    23d0:	cbz	x22, 2504 <libintl_bindtextdomain@@Base+0x200>
    23d4:	mov	x0, x22
    23d8:	mov	x1, x21
    23dc:	bl	2050 <strcmp@plt>
    23e0:	cbz	w0, 2558 <libintl_bindtextdomain@@Base+0x254>
    23e4:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    23e8:	ldr	x23, [x23, #4040]
    23ec:	mov	x0, x22
    23f0:	mov	x1, x23
    23f4:	bl	2050 <strcmp@plt>
    23f8:	cbz	w0, 24e4 <libintl_bindtextdomain@@Base+0x1e0>
    23fc:	mov	x0, x22
    2400:	bl	1fc0 <strdup@plt>
    2404:	mov	x21, x0
    2408:	b	24e8 <libintl_bindtextdomain@@Base+0x1e4>
    240c:	cbz	x20, 2414 <libintl_bindtextdomain@@Base+0x110>
    2410:	str	xzr, [x20]
    2414:	cbz	x19, 2628 <libintl_bindtextdomain@@Base+0x324>
    2418:	str	xzr, [x19]
    241c:	b	2628 <libintl_bindtextdomain@@Base+0x324>
    2420:	cbz	x20, 242c <libintl_bindtextdomain@@Base+0x128>
    2424:	ldr	x8, [x20]
    2428:	cbnz	x8, 2438 <libintl_bindtextdomain@@Base+0x134>
    242c:	cbz	x19, 24b4 <libintl_bindtextdomain@@Base+0x1b0>
    2430:	ldr	x8, [x19]
    2434:	cbz	x8, 24b4 <libintl_bindtextdomain@@Base+0x1b0>
    2438:	mov	x0, x21
    243c:	bl	1d90 <strlen@plt>
    2440:	mov	x23, x0
    2444:	add	x0, x0, #0x19
    2448:	bl	1ee0 <malloc@plt>
    244c:	cbz	x0, 25e8 <libintl_bindtextdomain@@Base+0x2e4>
    2450:	mov	x22, x0
    2454:	add	x2, x23, #0x1
    2458:	add	x0, x0, #0x18
    245c:	mov	x1, x21
    2460:	bl	1d40 <memcpy@plt>
    2464:	cbz	x20, 24d4 <libintl_bindtextdomain@@Base+0x1d0>
    2468:	ldr	x24, [x20]
    246c:	cbz	x24, 2568 <libintl_bindtextdomain@@Base+0x264>
    2470:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    2474:	ldr	x23, [x23, #4040]
    2478:	mov	x0, x24
    247c:	mov	x1, x23
    2480:	bl	2050 <strcmp@plt>
    2484:	cbz	w0, 2570 <libintl_bindtextdomain@@Base+0x26c>
    2488:	mov	x0, x24
    248c:	bl	1fc0 <strdup@plt>
    2490:	cmp	x0, #0x0
    2494:	cset	w8, eq  // eq = none
    2498:	csel	x23, x24, x0, eq  // eq = none
    249c:	cbnz	x0, 2570 <libintl_bindtextdomain@@Base+0x26c>
    24a0:	lsl	w8, w8, #3
    24a4:	b	257c <libintl_bindtextdomain@@Base+0x278>
    24a8:	mov	w22, wzr
    24ac:	cbnz	x19, 250c <libintl_bindtextdomain@@Base+0x208>
    24b0:	b	25fc <libintl_bindtextdomain@@Base+0x2f8>
    24b4:	cbz	x20, 24c4 <libintl_bindtextdomain@@Base+0x1c0>
    24b8:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    24bc:	ldr	x8, [x8, #4040]
    24c0:	str	x8, [x20]
    24c4:	cbnz	x19, 25f4 <libintl_bindtextdomain@@Base+0x2f0>
    24c8:	mov	w22, wzr
    24cc:	cbnz	w22, 2600 <libintl_bindtextdomain@@Base+0x2fc>
    24d0:	b	2614 <libintl_bindtextdomain@@Base+0x310>
    24d4:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    24d8:	ldr	x8, [x8, #4040]
    24dc:	str	x8, [x22, #8]
    24e0:	b	2580 <libintl_bindtextdomain@@Base+0x27c>
    24e4:	mov	x21, x23
    24e8:	cbz	x21, 2558 <libintl_bindtextdomain@@Base+0x254>
    24ec:	ldr	x0, [x24, #8]
    24f0:	cmp	x0, x23
    24f4:	b.eq	24fc <libintl_bindtextdomain@@Base+0x1f8>  // b.none
    24f8:	bl	20a0 <free@plt>
    24fc:	mov	w22, #0x1                   	// #1
    2500:	str	x21, [x24, #8]
    2504:	str	x21, [x20]
    2508:	cbz	x19, 25fc <libintl_bindtextdomain@@Base+0x2f8>
    250c:	ldr	x21, [x19]
    2510:	ldr	x20, [x24, #16]
    2514:	cbz	x21, 254c <libintl_bindtextdomain@@Base+0x248>
    2518:	cbz	x20, 252c <libintl_bindtextdomain@@Base+0x228>
    251c:	mov	x0, x21
    2520:	mov	x1, x20
    2524:	bl	2050 <strcmp@plt>
    2528:	cbz	w0, 254c <libintl_bindtextdomain@@Base+0x248>
    252c:	mov	x0, x21
    2530:	bl	1fc0 <strdup@plt>
    2534:	mov	x20, x0
    2538:	cbz	x0, 254c <libintl_bindtextdomain@@Base+0x248>
    253c:	ldr	x0, [x24, #16]
    2540:	bl	20a0 <free@plt>
    2544:	mov	w22, #0x1                   	// #1
    2548:	str	x20, [x24, #16]
    254c:	str	x20, [x19]
    2550:	cbnz	w22, 2600 <libintl_bindtextdomain@@Base+0x2fc>
    2554:	b	2614 <libintl_bindtextdomain@@Base+0x310>
    2558:	mov	w22, wzr
    255c:	str	x21, [x20]
    2560:	cbnz	x19, 250c <libintl_bindtextdomain@@Base+0x208>
    2564:	b	25fc <libintl_bindtextdomain@@Base+0x2f8>
    2568:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    256c:	ldr	x23, [x23, #4040]
    2570:	mov	w8, wzr
    2574:	str	x23, [x20]
    2578:	str	x23, [x22, #8]
    257c:	cbnz	w8, 25e0 <libintl_bindtextdomain@@Base+0x2dc>
    2580:	cbz	x19, 25ac <libintl_bindtextdomain@@Base+0x2a8>
    2584:	ldr	x23, [x19]
    2588:	cbz	x23, 25b4 <libintl_bindtextdomain@@Base+0x2b0>
    258c:	mov	x0, x23
    2590:	bl	1fc0 <strdup@plt>
    2594:	cmp	x0, #0x0
    2598:	mov	w8, #0x9                   	// #9
    259c:	csel	w8, w8, wzr, eq  // eq = none
    25a0:	csel	x9, x23, x0, eq  // eq = none
    25a4:	cbnz	x0, 25b8 <libintl_bindtextdomain@@Base+0x2b4>
    25a8:	b	25c4 <libintl_bindtextdomain@@Base+0x2c0>
    25ac:	str	xzr, [x22, #16]
    25b0:	b	2640 <libintl_bindtextdomain@@Base+0x33c>
    25b4:	mov	x9, xzr
    25b8:	mov	w8, wzr
    25bc:	str	x9, [x19]
    25c0:	str	x9, [x22, #16]
    25c4:	cbz	w8, 2640 <libintl_bindtextdomain@@Base+0x33c>
    25c8:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    25cc:	ldr	x0, [x22, #8]
    25d0:	ldr	x8, [x8, #4040]
    25d4:	cmp	x0, x8
    25d8:	b.eq	25e0 <libintl_bindtextdomain@@Base+0x2dc>  // b.none
    25dc:	bl	20a0 <free@plt>
    25e0:	mov	x0, x22
    25e4:	bl	20a0 <free@plt>
    25e8:	cbz	x20, 25f0 <libintl_bindtextdomain@@Base+0x2ec>
    25ec:	str	xzr, [x20]
    25f0:	cbz	x19, 24c8 <libintl_bindtextdomain@@Base+0x1c4>
    25f4:	mov	w22, wzr
    25f8:	str	xzr, [x19]
    25fc:	cbz	w22, 2614 <libintl_bindtextdomain@@Base+0x310>
    2600:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    2604:	ldr	x8, [x8, #4032]
    2608:	ldr	w9, [x8]
    260c:	add	w9, w9, #0x1
    2610:	str	w9, [x8]
    2614:	cbz	x25, 2628 <libintl_bindtextdomain@@Base+0x324>
    2618:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    261c:	ldr	x0, [x0, #4048]
    2620:	bl	20c0 <pthread_rwlock_unlock@plt>
    2624:	cbnz	w0, 26a4 <libintl_bindtextdomain@@Base+0x3a0>
    2628:	ldp	x20, x19, [sp, #64]
    262c:	ldp	x22, x21, [sp, #48]
    2630:	ldp	x24, x23, [sp, #32]
    2634:	ldp	x26, x25, [sp, #16]
    2638:	ldp	x29, x30, [sp], #80
    263c:	ret
    2640:	ldr	x19, [x26]
    2644:	cbz	x19, 2658 <libintl_bindtextdomain@@Base+0x354>
    2648:	add	x1, x19, #0x18
    264c:	mov	x0, x21
    2650:	bl	2050 <strcmp@plt>
    2654:	tbz	w0, #31, 2670 <libintl_bindtextdomain@@Base+0x36c>
    2658:	ldr	x8, [x26]
    265c:	str	x22, [x26]
    2660:	str	x8, [x22]
    2664:	mov	w22, #0x1                   	// #1
    2668:	cbnz	w22, 2600 <libintl_bindtextdomain@@Base+0x2fc>
    266c:	b	2614 <libintl_bindtextdomain@@Base+0x310>
    2670:	mov	x20, x19
    2674:	ldr	x19, [x19]
    2678:	cbz	x19, 2690 <libintl_bindtextdomain@@Base+0x38c>
    267c:	add	x1, x19, #0x18
    2680:	mov	x0, x21
    2684:	bl	2050 <strcmp@plt>
    2688:	cmp	w0, #0x0
    268c:	b.gt	2670 <libintl_bindtextdomain@@Base+0x36c>
    2690:	str	x19, [x22]
    2694:	str	x22, [x20]
    2698:	mov	w22, #0x1                   	// #1
    269c:	cbnz	w22, 2600 <libintl_bindtextdomain@@Base+0x2fc>
    26a0:	b	2614 <libintl_bindtextdomain@@Base+0x310>
    26a4:	bl	2000 <abort@plt>

00000000000026a8 <libintl_bind_textdomain_codeset@@Base>:
    26a8:	sub	sp, sp, #0x20
    26ac:	str	x1, [sp, #8]
    26b0:	add	x2, sp, #0x8
    26b4:	mov	x1, xzr
    26b8:	stp	x29, x30, [sp, #16]
    26bc:	add	x29, sp, #0x10
    26c0:	bl	2330 <libintl_bindtextdomain@@Base+0x2c>
    26c4:	ldr	x0, [sp, #8]
    26c8:	ldp	x29, x30, [sp, #16]
    26cc:	add	sp, sp, #0x20
    26d0:	ret

00000000000026d4 <libintl_dcgettext@@Base>:
    26d4:	stp	x29, x30, [sp, #-16]!
    26d8:	mov	w5, w2
    26dc:	mov	x2, xzr
    26e0:	mov	w3, wzr
    26e4:	mov	x4, xzr
    26e8:	mov	x29, sp
    26ec:	bl	49e8 <libintl_textdomain@@Base+0x81c>
    26f0:	ldp	x29, x30, [sp], #16
    26f4:	ret

00000000000026f8 <libintl_dgettext@@Base>:
    26f8:	stp	x29, x30, [sp, #-16]!
    26fc:	mov	w2, #0x5                   	// #5
    2700:	mov	x29, sp
    2704:	bl	1e70 <libintl_dcgettext@plt>
    2708:	ldp	x29, x30, [sp], #16
    270c:	ret

0000000000002710 <libintl_gettext@@Base>:
    2710:	stp	x29, x30, [sp, #-16]!
    2714:	mov	x1, x0
    2718:	mov	w2, #0x5                   	// #5
    271c:	mov	x0, xzr
    2720:	mov	x29, sp
    2724:	bl	1e70 <libintl_dcgettext@plt>
    2728:	ldp	x29, x30, [sp], #16
    272c:	ret
    2730:	sub	sp, sp, #0x90
    2734:	stp	x29, x30, [sp, #64]
    2738:	stp	x26, x25, [sp, #80]
    273c:	stp	x24, x23, [sp, #96]
    2740:	stp	x22, x21, [sp, #112]
    2744:	stp	x20, x19, [sp, #128]
    2748:	adrp	x26, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    274c:	ldr	x26, [x26, #4064]
    2750:	mov	x19, x3
    2754:	mov	x22, x2
    2758:	mov	x20, x1
    275c:	mov	x23, x0
    2760:	add	x29, sp, #0x40
    2764:	cbz	x26, 27e4 <libintl_gettext@@Base+0xd4>
    2768:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    276c:	add	x0, x0, #0x280
    2770:	bl	1dc0 <pthread_rwlock_rdlock@plt>
    2774:	cbnz	w0, 29b8 <libintl_gettext@@Base+0x2a8>
    2778:	mov	x0, x23
    277c:	bl	1d90 <strlen@plt>
    2780:	add	x2, x0, #0x1
    2784:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    2788:	add	x0, x0, #0x370
    278c:	mov	x1, x23
    2790:	mov	w3, wzr
    2794:	mov	x4, x20
    2798:	mov	x5, xzr
    279c:	mov	x6, xzr
    27a0:	mov	x7, xzr
    27a4:	str	wzr, [sp, #16]
    27a8:	stp	xzr, x22, [sp]
    27ac:	bl	42d4 <libintl_textdomain@@Base+0x108>
    27b0:	mov	x21, x0
    27b4:	cbz	x26, 27c8 <libintl_gettext@@Base+0xb8>
    27b8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    27bc:	add	x0, x0, #0x280
    27c0:	bl	20c0 <pthread_rwlock_unlock@plt>
    27c4:	cbnz	w0, 29b8 <libintl_gettext@@Base+0x2a8>
    27c8:	cbz	x21, 2824 <libintl_gettext@@Base+0x114>
    27cc:	ldr	w8, [x21, #8]
    27d0:	cmp	w8, #0x0
    27d4:	b.le	2910 <libintl_gettext@@Base+0x200>
    27d8:	ldr	x8, [x21, #16]
    27dc:	cbnz	x8, 2960 <libintl_gettext@@Base+0x250>
    27e0:	b	2924 <libintl_gettext@@Base+0x214>
    27e4:	mov	x0, x23
    27e8:	bl	1d90 <strlen@plt>
    27ec:	add	x2, x0, #0x1
    27f0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    27f4:	add	x0, x0, #0x370
    27f8:	mov	x1, x23
    27fc:	mov	w3, wzr
    2800:	mov	x4, x20
    2804:	mov	x5, xzr
    2808:	mov	x6, xzr
    280c:	mov	x7, xzr
    2810:	str	wzr, [sp, #16]
    2814:	stp	xzr, x22, [sp]
    2818:	bl	42d4 <libintl_textdomain@@Base+0x108>
    281c:	mov	x21, x0
    2820:	cbnz	x21, 27cc <libintl_gettext@@Base+0xbc>
    2824:	mov	x0, x20
    2828:	bl	1f20 <_nl_expand_alias@plt>
    282c:	mov	x24, x0
    2830:	cbz	x0, 2844 <libintl_gettext@@Base+0x134>
    2834:	mov	x0, x24
    2838:	bl	1fc0 <strdup@plt>
    283c:	mov	x20, x0
    2840:	cbz	x0, 295c <libintl_gettext@@Base+0x24c>
    2844:	sub	x1, x29, #0x8
    2848:	sub	x2, x29, #0x10
    284c:	sub	x3, x29, #0x18
    2850:	add	x4, sp, #0x20
    2854:	add	x5, sp, #0x18
    2858:	mov	x0, x20
    285c:	bl	4804 <libintl_textdomain@@Base+0x638>
    2860:	cmn	w0, #0x1
    2864:	b.eq	295c <libintl_gettext@@Base+0x24c>  // b.none
    2868:	mov	w25, w0
    286c:	cbz	x26, 2880 <libintl_gettext@@Base+0x170>
    2870:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    2874:	add	x0, x0, #0x280
    2878:	bl	2010 <pthread_rwlock_wrlock@plt>
    287c:	cbnz	w0, 29b8 <libintl_gettext@@Base+0x2a8>
    2880:	mov	x0, x23
    2884:	bl	1d90 <strlen@plt>
    2888:	ldp	x8, x4, [x29, #-16]
    288c:	ldur	x5, [x29, #-24]
    2890:	ldp	x7, x6, [sp, #24]
    2894:	add	x2, x0, #0x1
    2898:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    289c:	mov	w9, #0x1                   	// #1
    28a0:	add	x0, x0, #0x370
    28a4:	mov	x1, x23
    28a8:	mov	w3, w25
    28ac:	str	w9, [sp, #16]
    28b0:	stp	x8, x22, [sp]
    28b4:	bl	42d4 <libintl_textdomain@@Base+0x108>
    28b8:	mov	x21, x0
    28bc:	cbz	x26, 28d0 <libintl_gettext@@Base+0x1c0>
    28c0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    28c4:	add	x0, x0, #0x280
    28c8:	bl	20c0 <pthread_rwlock_unlock@plt>
    28cc:	cbnz	w0, 29b8 <libintl_gettext@@Base+0x2a8>
    28d0:	cbz	x21, 2900 <libintl_gettext@@Base+0x1f0>
    28d4:	ldr	w8, [x21, #8]
    28d8:	cmp	w8, #0x0
    28dc:	b.gt	28ec <libintl_gettext@@Base+0x1dc>
    28e0:	mov	x0, x21
    28e4:	mov	x1, x19
    28e8:	bl	2a00 <libintl_gettext@@Base+0x2f0>
    28ec:	ldr	x8, [x21, #16]
    28f0:	cbz	x8, 2980 <libintl_gettext@@Base+0x270>
    28f4:	cbz	x24, 2900 <libintl_gettext@@Base+0x1f0>
    28f8:	mov	x0, x20
    28fc:	bl	20a0 <free@plt>
    2900:	tbz	w25, #0, 2960 <libintl_gettext@@Base+0x250>
    2904:	ldr	x0, [sp, #24]
    2908:	bl	20a0 <free@plt>
    290c:	b	2960 <libintl_gettext@@Base+0x250>
    2910:	mov	x0, x21
    2914:	mov	x1, x19
    2918:	bl	2a00 <libintl_gettext@@Base+0x2f0>
    291c:	ldr	x8, [x21, #16]
    2920:	cbnz	x8, 2960 <libintl_gettext@@Base+0x250>
    2924:	ldr	x0, [x21, #32]
    2928:	cbz	x0, 2960 <libintl_gettext@@Base+0x250>
    292c:	add	x20, x21, #0x28
    2930:	ldr	w8, [x0, #8]
    2934:	cmp	w8, #0x0
    2938:	b.gt	2944 <libintl_gettext@@Base+0x234>
    293c:	mov	x1, x19
    2940:	bl	2a00 <libintl_gettext@@Base+0x2f0>
    2944:	ldur	x8, [x20, #-8]
    2948:	ldr	x8, [x8, #16]
    294c:	cbnz	x8, 2960 <libintl_gettext@@Base+0x250>
    2950:	ldr	x0, [x20], #8
    2954:	cbnz	x0, 2930 <libintl_gettext@@Base+0x220>
    2958:	b	2960 <libintl_gettext@@Base+0x250>
    295c:	mov	x21, xzr
    2960:	mov	x0, x21
    2964:	ldp	x20, x19, [sp, #128]
    2968:	ldp	x22, x21, [sp, #112]
    296c:	ldp	x24, x23, [sp, #96]
    2970:	ldp	x26, x25, [sp, #80]
    2974:	ldp	x29, x30, [sp, #64]
    2978:	add	sp, sp, #0x90
    297c:	ret
    2980:	ldr	x0, [x21, #32]
    2984:	cbz	x0, 28f4 <libintl_gettext@@Base+0x1e4>
    2988:	add	x22, x21, #0x28
    298c:	ldr	w8, [x0, #8]
    2990:	cmp	w8, #0x0
    2994:	b.gt	29a0 <libintl_gettext@@Base+0x290>
    2998:	mov	x1, x19
    299c:	bl	2a00 <libintl_gettext@@Base+0x2f0>
    29a0:	ldur	x8, [x22, #-8]
    29a4:	ldr	x8, [x8, #16]
    29a8:	cbnz	x8, 28f4 <libintl_gettext@@Base+0x1e4>
    29ac:	ldr	x0, [x22], #8
    29b0:	cbnz	x0, 298c <libintl_gettext@@Base+0x27c>
    29b4:	b	28f4 <libintl_gettext@@Base+0x1e4>
    29b8:	bl	2000 <abort@plt>
    29bc:	ldrb	w9, [x0]
    29c0:	cbz	w9, 29f8 <libintl_gettext@@Base+0x2e8>
    29c4:	mov	x8, x0
    29c8:	mov	x0, xzr
    29cc:	add	x8, x8, #0x1
    29d0:	lsl	x10, x0, #4
    29d4:	add	x10, x10, w9, uxtb
    29d8:	ldrb	w9, [x8], #1
    29dc:	and	x11, x10, #0xf0000000
    29e0:	and	x12, x10, #0xffffffff0fffffff
    29e4:	eor	x11, x12, x11, lsr #24
    29e8:	tst	x10, #0xf0000000
    29ec:	csel	x0, x10, x11, eq  // eq = none
    29f0:	cbnz	w9, 29d0 <libintl_gettext@@Base+0x2c0>
    29f4:	ret
    29f8:	mov	x0, xzr
    29fc:	ret
    2a00:	stp	x29, x30, [sp, #-96]!
    2a04:	stp	x28, x27, [sp, #16]
    2a08:	stp	x26, x25, [sp, #32]
    2a0c:	stp	x24, x23, [sp, #48]
    2a10:	stp	x22, x21, [sp, #64]
    2a14:	stp	x20, x19, [sp, #80]
    2a18:	mov	x29, sp
    2a1c:	sub	sp, sp, #0x130
    2a20:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    2a24:	ldr	x22, [x22, #4064]
    2a28:	mov	x21, x1
    2a2c:	mov	x23, x0
    2a30:	cbz	x22, 2a44 <libintl_gettext@@Base+0x334>
    2a34:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    2a38:	add	x0, x0, #0x2b8
    2a3c:	bl	21e0 <pthread_mutex_lock@plt>
    2a40:	cbnz	w0, 3578 <libintl_gettext@@Base+0xe68>
    2a44:	ldr	w8, [x23, #8]
    2a48:	cbz	w8, 2a54 <libintl_gettext@@Base+0x344>
    2a4c:	cbnz	x22, 3524 <libintl_gettext@@Base+0xe14>
    2a50:	b	3534 <libintl_gettext@@Base+0xe24>
    2a54:	ldr	x0, [x23]
    2a58:	mov	w26, #0xffffffff            	// #-1
    2a5c:	str	w26, [x23, #8]
    2a60:	str	xzr, [x23, #16]
    2a64:	cbz	x0, 3508 <libintl_gettext@@Base+0xdf8>
    2a68:	mov	w1, wzr
    2a6c:	bl	1f00 <open@plt>
    2a70:	mov	w26, w0
    2a74:	cmn	w0, #0x1
    2a78:	b.eq	3508 <libintl_gettext@@Base+0xdf8>  // b.none
    2a7c:	sub	x1, x29, #0x88
    2a80:	mov	w0, w26
    2a84:	bl	71a8 <bind_textdomain_codeset@@Base+0x14>
    2a88:	cbnz	w0, 3508 <libintl_gettext@@Base+0xdf8>
    2a8c:	ldur	x19, [x29, #-88]
    2a90:	cmp	x19, #0x30
    2a94:	b.cc	3508 <libintl_gettext@@Base+0xdf8>  // b.lo, b.ul, b.last
    2a98:	mov	w2, #0x1                   	// #1
    2a9c:	mov	w3, #0x2                   	// #2
    2aa0:	mov	x0, xzr
    2aa4:	mov	x1, x19
    2aa8:	mov	w4, w26
    2aac:	mov	x5, xzr
    2ab0:	bl	2080 <mmap@plt>
    2ab4:	cmn	x0, #0x1
    2ab8:	stur	x0, [x29, #-160]
    2abc:	b.eq	3560 <libintl_gettext@@Base+0xe50>  // b.none
    2ac0:	mov	w0, w26
    2ac4:	bl	1fe0 <close@plt>
    2ac8:	mov	w26, #0xffffffff            	// #-1
    2acc:	mov	w20, #0x1                   	// #1
    2ad0:	ldur	x8, [x29, #-160]
    2ad4:	cmn	x8, #0x1
    2ad8:	b.eq	2c3c <libintl_gettext@@Base+0x52c>  // b.none
    2adc:	ldur	x8, [x29, #-160]
    2ae0:	mov	w9, #0x12de                	// #4830
    2ae4:	movk	w9, #0x9504, lsl #16
    2ae8:	ldr	w8, [x8]
    2aec:	cmp	w8, w9
    2af0:	b.eq	2b04 <libintl_gettext@@Base+0x3f4>  // b.none
    2af4:	mov	w9, #0x495                 	// #1173
    2af8:	movk	w9, #0xde12, lsl #16
    2afc:	cmp	w8, w9
    2b00:	b.ne	2c28 <libintl_gettext@@Base+0x518>  // b.any
    2b04:	mov	w0, #0xc8                  	// #200
    2b08:	bl	1ee0 <malloc@plt>
    2b0c:	cbz	x0, 2c28 <libintl_gettext@@Base+0x518>
    2b10:	ldur	x9, [x29, #-160]
    2b14:	str	x0, [x23, #16]
    2b18:	str	w20, [x0, #8]
    2b1c:	str	x19, [x0, #16]
    2b20:	str	x9, [x0]
    2b24:	stur	x19, [x29, #-256]
    2b28:	ldr	w19, [x9]
    2b2c:	mov	w8, #0x12de                	// #4830
    2b30:	movk	w8, #0x9504, lsl #16
    2b34:	stur	w20, [x29, #-244]
    2b38:	cmp	w19, w8
    2b3c:	cset	w20, ne  // ne = any
    2b40:	str	w20, [x0, #24]
    2b44:	str	xzr, [x0, #32]
    2b48:	ldr	w25, [x9, #4]!
    2b4c:	mov	x24, x0
    2b50:	stur	x9, [x29, #-200]
    2b54:	b.eq	2b64 <libintl_gettext@@Base+0x454>  // b.none
    2b58:	mov	w0, w25
    2b5c:	bl	357c <libintl_gettext@@Base+0xe6c>
    2b60:	mov	w25, w0
    2b64:	asr	w8, w25, #16
    2b68:	cmp	w8, #0x1
    2b6c:	b.hi	348c <libintl_gettext@@Base+0xd7c>  // b.pmore
    2b70:	sub	x8, x29, #0x10
    2b74:	stur	x21, [x8, #-256]
    2b78:	ldur	x8, [x29, #-160]
    2b7c:	mov	w21, #0x12de                	// #4830
    2b80:	movk	w21, #0x9504, lsl #16
    2b84:	cmp	w19, w21
    2b88:	ldr	w0, [x8, #8]
    2b8c:	b.eq	2b94 <libintl_gettext@@Base+0x484>  // b.none
    2b90:	bl	357c <libintl_gettext@@Base+0xe6c>
    2b94:	ldur	x8, [x29, #-160]
    2b98:	str	w0, [x24, #40]
    2b9c:	cmp	w19, w21
    2ba0:	ldr	w0, [x8, #12]
    2ba4:	b.eq	2bac <libintl_gettext@@Base+0x49c>  // b.none
    2ba8:	bl	357c <libintl_gettext@@Base+0xe6c>
    2bac:	ldur	x9, [x29, #-160]
    2bb0:	mov	w21, #0x12de                	// #4830
    2bb4:	movk	w21, #0x9504, lsl #16
    2bb8:	cmp	w19, w21
    2bbc:	add	x8, x9, w0, uxtw
    2bc0:	str	x8, [x24, #48]
    2bc4:	ldr	w0, [x9, #16]
    2bc8:	b.eq	2bd0 <libintl_gettext@@Base+0x4c0>  // b.none
    2bcc:	bl	357c <libintl_gettext@@Base+0xe6c>
    2bd0:	ldur	x9, [x29, #-160]
    2bd4:	cmp	w19, w21
    2bd8:	add	x8, x9, w0, uxtw
    2bdc:	str	x8, [x24, #56]
    2be0:	ldr	w0, [x9, #20]
    2be4:	b.eq	2bec <libintl_gettext@@Base+0x4dc>  // b.none
    2be8:	bl	357c <libintl_gettext@@Base+0xe6c>
    2bec:	sub	x8, x29, #0x10
    2bf0:	ldur	x21, [x8, #-256]
    2bf4:	cmp	w0, #0x3
    2bf8:	str	w0, [x24, #88]
    2bfc:	b.cc	2cec <libintl_gettext@@Base+0x5dc>  // b.lo, b.ul, b.last
    2c00:	ldur	x8, [x29, #-160]
    2c04:	ldr	w0, [x8, #24]
    2c08:	mov	w8, #0x12de                	// #4830
    2c0c:	movk	w8, #0x9504, lsl #16
    2c10:	cmp	w19, w8
    2c14:	b.eq	2c1c <libintl_gettext@@Base+0x50c>  // b.none
    2c18:	bl	357c <libintl_gettext@@Base+0xe6c>
    2c1c:	ldur	x8, [x29, #-160]
    2c20:	add	x8, x8, w0, uxtw
    2c24:	b	2cf0 <libintl_gettext@@Base+0x5e0>
    2c28:	cbz	w20, 2cc0 <libintl_gettext@@Base+0x5b0>
    2c2c:	ldur	x0, [x29, #-160]
    2c30:	mov	x1, x19
    2c34:	bl	2110 <munmap@plt>
    2c38:	b	3508 <libintl_gettext@@Base+0xdf8>
    2c3c:	mov	x0, x19
    2c40:	bl	1ee0 <malloc@plt>
    2c44:	stur	x0, [x29, #-160]
    2c48:	cbz	x0, 2ccc <libintl_gettext@@Base+0x5bc>
    2c4c:	mov	x24, x0
    2c50:	mov	x25, x19
    2c54:	b	2c5c <libintl_gettext@@Base+0x54c>
    2c58:	cbz	x25, 2cd4 <libintl_gettext@@Base+0x5c4>
    2c5c:	mov	w0, w26
    2c60:	mov	x1, x24
    2c64:	mov	x2, x25
    2c68:	bl	2140 <read@plt>
    2c6c:	cmp	x0, #0x0
    2c70:	b.le	2c84 <libintl_gettext@@Base+0x574>
    2c74:	mov	w8, wzr
    2c78:	add	x24, x24, x0
    2c7c:	sub	x25, x25, x0
    2c80:	b	2cb0 <libintl_gettext@@Base+0x5a0>
    2c84:	cmn	x0, #0x1
    2c88:	b.ne	2ca4 <libintl_gettext@@Base+0x594>  // b.any
    2c8c:	bl	21c0 <__errno_location@plt>
    2c90:	ldr	w8, [x0]
    2c94:	cmp	w8, #0x4
    2c98:	b.ne	2ca4 <libintl_gettext@@Base+0x594>  // b.any
    2c9c:	mov	w8, #0x7                   	// #7
    2ca0:	b	2cb0 <libintl_gettext@@Base+0x5a0>
    2ca4:	ldur	x0, [x29, #-160]
    2ca8:	bl	20a0 <free@plt>
    2cac:	mov	w8, #0x5                   	// #5
    2cb0:	cmp	w8, #0x7
    2cb4:	b.eq	2c58 <libintl_gettext@@Base+0x548>  // b.none
    2cb8:	cbz	w8, 2c58 <libintl_gettext@@Base+0x548>
    2cbc:	b	2ce4 <libintl_gettext@@Base+0x5d4>
    2cc0:	ldur	x0, [x29, #-160]
    2cc4:	bl	20a0 <free@plt>
    2cc8:	b	3508 <libintl_gettext@@Base+0xdf8>
    2ccc:	mov	w8, #0x5                   	// #5
    2cd0:	b	2ce4 <libintl_gettext@@Base+0x5d4>
    2cd4:	mov	w0, w26
    2cd8:	bl	1fe0 <close@plt>
    2cdc:	mov	w8, wzr
    2ce0:	mov	w26, #0xffffffff            	// #-1
    2ce4:	cbnz	w8, 3508 <libintl_gettext@@Base+0xdf8>
    2ce8:	b	2adc <libintl_gettext@@Base+0x3cc>
    2cec:	mov	x8, xzr
    2cf0:	tst	w25, #0xffff
    2cf4:	str	x8, [x24, #96]
    2cf8:	str	w20, [x24, #104]
    2cfc:	b.eq	2e3c <libintl_gettext@@Base+0x72c>  // b.none
    2d00:	cbz	x8, 2e48 <libintl_gettext@@Base+0x738>
    2d04:	sub	x8, x29, #0x18
    2d08:	stur	w26, [x8, #-256]
    2d0c:	ldur	x8, [x29, #-160]
    2d10:	ldr	w26, [x8, #36]
    2d14:	mov	w8, #0x12de                	// #4830
    2d18:	movk	w8, #0x9504, lsl #16
    2d1c:	cmp	w19, w8
    2d20:	b.eq	2d30 <libintl_gettext@@Base+0x620>  // b.none
    2d24:	mov	w0, w26
    2d28:	bl	357c <libintl_gettext@@Base+0xe6c>
    2d2c:	mov	w26, w0
    2d30:	cbz	w26, 3338 <libintl_gettext@@Base+0xc28>
    2d34:	ldur	x8, [x29, #-160]
    2d38:	mov	w20, #0x12de                	// #4830
    2d3c:	movk	w20, #0x9504, lsl #16
    2d40:	cmp	w19, w20
    2d44:	ldr	w25, [x8, #28]
    2d48:	b.eq	2d58 <libintl_gettext@@Base+0x648>  // b.none
    2d4c:	mov	w0, w25
    2d50:	bl	357c <libintl_gettext@@Base+0xe6c>
    2d54:	mov	w25, w0
    2d58:	ldur	x8, [x29, #-160]
    2d5c:	cmp	w19, w20
    2d60:	ldr	w0, [x8, #32]
    2d64:	b.eq	2d6c <libintl_gettext@@Base+0x65c>  // b.none
    2d68:	bl	357c <libintl_gettext@@Base+0xe6c>
    2d6c:	mov	w19, w25
    2d70:	lsl	x9, x19, #3
    2d74:	sub	x8, x29, #0x20
    2d78:	add	x9, x9, #0xf
    2d7c:	stur	x23, [x8, #-256]
    2d80:	mov	x8, sp
    2d84:	and	x9, x9, #0xffffffff0
    2d88:	sub	x21, x8, x9
    2d8c:	mov	sp, x21
    2d90:	ldr	w8, [x24, #24]
    2d94:	cmp	w8, #0x0
    2d98:	cset	w22, eq  // eq = none
    2d9c:	cbz	w25, 2e50 <libintl_gettext@@Base+0x740>
    2da0:	ldur	x9, [x29, #-160]
    2da4:	mov	w8, w0
    2da8:	mov	x23, x21
    2dac:	add	x8, x8, x9
    2db0:	add	x20, x8, #0x4
    2db4:	b	2ddc <libintl_gettext@@Base+0x6cc>
    2db8:	mov	w8, #0xa                   	// #10
    2dbc:	cbnz	w8, 3460 <libintl_gettext@@Base+0xd50>
    2dc0:	ldr	w8, [x24, #24]
    2dc4:	add	x23, x23, #0x8
    2dc8:	add	x20, x20, #0x8
    2dcc:	cmp	w8, #0x0
    2dd0:	cset	w22, eq  // eq = none
    2dd4:	subs	x19, x19, #0x1
    2dd8:	b.eq	2e50 <libintl_gettext@@Base+0x740>  // b.none
    2ddc:	ldr	w27, [x20]
    2de0:	tbz	w22, #0, 2df4 <libintl_gettext@@Base+0x6e4>
    2de4:	ldur	w0, [x20, #-4]
    2de8:	tbz	w22, #0, 2e08 <libintl_gettext@@Base+0x6f8>
    2dec:	cbnz	w0, 2e10 <libintl_gettext@@Base+0x700>
    2df0:	b	2db8 <libintl_gettext@@Base+0x6a8>
    2df4:	mov	w0, w27
    2df8:	bl	357c <libintl_gettext@@Base+0xe6c>
    2dfc:	mov	w27, w0
    2e00:	ldur	w0, [x20, #-4]
    2e04:	tbnz	w22, #0, 2dec <libintl_gettext@@Base+0x6dc>
    2e08:	bl	357c <libintl_gettext@@Base+0xe6c>
    2e0c:	cbz	w0, 2db8 <libintl_gettext@@Base+0x6a8>
    2e10:	ldur	x8, [x29, #-160]
    2e14:	sub	w9, w0, #0x1
    2e18:	add	x8, x8, w27, uxtw
    2e1c:	ldrb	w9, [x8, w9, uxtw]
    2e20:	cbnz	w9, 2db8 <libintl_gettext@@Base+0x6a8>
    2e24:	mov	x0, x8
    2e28:	bl	3584 <libintl_gettext@@Base+0xe74>
    2e2c:	mov	w8, wzr
    2e30:	str	x0, [x23]
    2e34:	cbz	wzr, 2dc0 <libintl_gettext@@Base+0x6b0>
    2e38:	b	3460 <libintl_gettext@@Base+0xd50>
    2e3c:	str	wzr, [x24, #64]
    2e40:	stp	xzr, xzr, [x24, #72]
    2e44:	b	34ac <libintl_gettext@@Base+0xd9c>
    2e48:	mov	w8, #0xa                   	// #10
    2e4c:	b	3488 <libintl_gettext@@Base+0xd78>
    2e50:	ldur	x19, [x29, #-160]
    2e54:	ldr	w8, [x19, #40]
    2e58:	tbnz	w22, #0, 2e68 <libintl_gettext@@Base+0x758>
    2e5c:	mov	w0, w8
    2e60:	bl	357c <libintl_gettext@@Base+0xe6c>
    2e64:	mov	w8, w0
    2e68:	ldr	w0, [x19, #44]
    2e6c:	add	x8, x19, w8, uxtw
    2e70:	stur	x8, [x29, #-176]
    2e74:	tbnz	w22, #0, 2e7c <libintl_gettext@@Base+0x76c>
    2e78:	bl	357c <libintl_gettext@@Base+0xe6c>
    2e7c:	sub	x8, x29, #0x4
    2e80:	stur	wzr, [x8, #-256]
    2e84:	ldr	w8, [x24, #88]
    2e88:	add	x9, x19, w0, uxtw
    2e8c:	stur	x9, [x29, #-168]
    2e90:	mov	w9, w26
    2e94:	lsl	x8, x8, #2
    2e98:	stur	xzr, [x29, #-184]
    2e9c:	stur	x9, [x29, #-240]
    2ea0:	stur	x8, [x29, #-208]
    2ea4:	stur	x8, [x29, #-192]
    2ea8:	mov	x28, xzr
    2eac:	mov	w26, #0x1                   	// #1
    2eb0:	tbz	w22, #0, 2ec0 <libintl_gettext@@Base+0x7b0>
    2eb4:	cbz	x28, 2edc <libintl_gettext@@Base+0x7cc>
    2eb8:	ldur	x8, [x29, #-168]
    2ebc:	b	2ee0 <libintl_gettext@@Base+0x7d0>
    2ec0:	ldp	x8, x9, [x29, #-176]
    2ec4:	cmp	x28, #0x0
    2ec8:	csel	x8, x8, x9, eq  // eq = none
    2ecc:	ldur	x9, [x29, #-184]
    2ed0:	ldr	w0, [x8, x9, lsl #2]
    2ed4:	bl	357c <libintl_gettext@@Base+0xe6c>
    2ed8:	b	2ee8 <libintl_gettext@@Base+0x7d8>
    2edc:	ldur	x8, [x29, #-176]
    2ee0:	ldur	x9, [x29, #-184]
    2ee4:	ldr	w0, [x8, x9, lsl #2]
    2ee8:	add	x20, x19, w0, uxtw
    2eec:	ldr	w0, [x20]
    2ef0:	tbnz	w22, #0, 2ef8 <libintl_gettext@@Base+0x7e8>
    2ef4:	bl	357c <libintl_gettext@@Base+0xe6c>
    2ef8:	ldr	w8, [x20, #8]
    2efc:	add	x19, x19, w0, uxtw
    2f00:	add	x23, x20, #0x4
    2f04:	tbnz	w22, #0, 2f14 <libintl_gettext@@Base+0x804>
    2f08:	mov	w0, w8
    2f0c:	bl	357c <libintl_gettext@@Base+0xe6c>
    2f10:	mov	w8, w0
    2f14:	cmn	w8, #0x1
    2f18:	b.eq	2fb0 <libintl_gettext@@Base+0x8a0>  // b.none
    2f1c:	mov	x20, xzr
    2f20:	ldr	w8, [x23]
    2f24:	tbnz	w22, #0, 2f34 <libintl_gettext@@Base+0x824>
    2f28:	mov	w0, w8
    2f2c:	bl	357c <libintl_gettext@@Base+0xe6c>
    2f30:	mov	w8, w0
    2f34:	ldr	w0, [x23, #4]
    2f38:	mov	w27, w8
    2f3c:	add	x20, x20, x27
    2f40:	tbnz	w22, #0, 2f48 <libintl_gettext@@Base+0x838>
    2f44:	bl	357c <libintl_gettext@@Base+0xe6c>
    2f48:	cmn	w0, #0x1
    2f4c:	b.eq	2f7c <libintl_gettext@@Base+0x86c>  // b.none
    2f50:	cmp	w0, w25
    2f54:	add	x19, x19, x27
    2f58:	b.cs	2f88 <libintl_gettext@@Base+0x878>  // b.hs, b.nlast
    2f5c:	ldr	x0, [x21, w0, uxtw #3]
    2f60:	cmp	x0, #0x0
    2f64:	csel	w26, wzr, w26, eq  // eq = none
    2f68:	bl	1d90 <strlen@plt>
    2f6c:	mov	w8, wzr
    2f70:	add	x20, x0, x20
    2f74:	cbz	w8, 2f90 <libintl_gettext@@Base+0x880>
    2f78:	b	2fa0 <libintl_gettext@@Base+0x890>
    2f7c:	mov	w8, #0x14                  	// #20
    2f80:	cbz	w8, 2f90 <libintl_gettext@@Base+0x880>
    2f84:	b	2fa0 <libintl_gettext@@Base+0x890>
    2f88:	mov	w8, #0xa                   	// #10
    2f8c:	cbnz	w8, 2fa0 <libintl_gettext@@Base+0x890>
    2f90:	add	x23, x23, #0x8
    2f94:	ldr	w8, [x23]
    2f98:	tbz	w22, #0, 2f28 <libintl_gettext@@Base+0x818>
    2f9c:	b	2f34 <libintl_gettext@@Base+0x824>
    2fa0:	cmp	w8, #0x14
    2fa4:	b.eq	2fb4 <libintl_gettext@@Base+0x8a4>  // b.none
    2fa8:	ldur	x19, [x29, #-160]
    2fac:	b	2ff4 <libintl_gettext@@Base+0x8e4>
    2fb0:	mov	x20, xzr
    2fb4:	ldr	w0, [x23]
    2fb8:	tbnz	w22, #0, 2fc0 <libintl_gettext@@Base+0x8b0>
    2fbc:	bl	357c <libintl_gettext@@Base+0xe6c>
    2fc0:	cbz	w0, 3008 <libintl_gettext@@Base+0x8f8>
    2fc4:	sub	w8, w0, #0x1
    2fc8:	ldrb	w8, [x19, w8, uxtw]
    2fcc:	cmp	w8, #0x0
    2fd0:	mov	w8, #0xa                   	// #10
    2fd4:	csel	w8, wzr, w8, eq  // eq = none
    2fd8:	ldur	x19, [x29, #-160]
    2fdc:	cbnz	w8, 2ff4 <libintl_gettext@@Base+0x8e4>
    2fe0:	sub	x8, x29, #0x98
    2fe4:	str	x20, [x8, x28, lsl #3]
    2fe8:	cmp	w26, #0x0
    2fec:	mov	w8, #0x11                  	// #17
    2ff0:	csel	w8, w8, wzr, eq  // eq = none
    2ff4:	cbnz	w8, 3018 <libintl_gettext@@Base+0x908>
    2ff8:	add	x28, x28, #0x1
    2ffc:	cmp	x28, #0x2
    3000:	b.ne	2eb0 <libintl_gettext@@Base+0x7a0>  // b.any
    3004:	b	3020 <libintl_gettext@@Base+0x910>
    3008:	mov	w8, #0xa                   	// #10
    300c:	ldur	x19, [x29, #-160]
    3010:	cbnz	w8, 2ff4 <libintl_gettext@@Base+0x8e4>
    3014:	b	2fe0 <libintl_gettext@@Base+0x8d0>
    3018:	cmp	w8, #0x11
    301c:	b.ne	3050 <libintl_gettext@@Base+0x940>  // b.any
    3020:	mov	w8, wzr
    3024:	cbz	w26, 3050 <libintl_gettext@@Base+0x940>
    3028:	sub	x11, x29, #0x4
    302c:	ldur	w11, [x11, #-256]
    3030:	sub	x12, x29, #0x4
    3034:	ldp	x9, x10, [x29, #-152]
    3038:	add	w11, w11, #0x1
    303c:	stur	w11, [x12, #-256]
    3040:	ldur	x11, [x29, #-192]
    3044:	add	x9, x9, x11
    3048:	add	x9, x9, x10
    304c:	stur	x9, [x29, #-192]
    3050:	cbnz	w8, 3460 <libintl_gettext@@Base+0xd50>
    3054:	ldur	x9, [x29, #-184]
    3058:	ldur	x8, [x29, #-240]
    305c:	ldur	x19, [x29, #-160]
    3060:	add	x9, x9, #0x1
    3064:	cmp	x9, x8
    3068:	stur	x9, [x29, #-184]
    306c:	b.cc	2ea8 <libintl_gettext@@Base+0x798>  // b.lo, b.ul, b.last
    3070:	sub	x8, x29, #0x4
    3074:	ldur	w20, [x8, #-256]
    3078:	cbz	w20, 3454 <libintl_gettext@@Base+0xd44>
    307c:	ldur	x9, [x29, #-192]
    3080:	lsl	w8, w20, #1
    3084:	add	x0, x9, w8, uxtw #4
    3088:	bl	1ee0 <malloc@plt>
    308c:	cbz	x0, 3554 <libintl_gettext@@Base+0xe44>
    3090:	sub	x8, x29, #0x14
    3094:	stur	wzr, [x8, #-256]
    3098:	mov	w8, w20
    309c:	sub	x9, x29, #0x28
    30a0:	stur	x8, [x9, #-256]
    30a4:	lsl	x8, x8, #4
    30a8:	add	x9, x0, x8
    30ac:	stp	x9, x0, [x29, #-224]
    30b0:	add	x8, x9, x8
    30b4:	sub	x9, x29, #0x30
    30b8:	stur	x8, [x9, #-256]
    30bc:	ldur	x9, [x29, #-208]
    30c0:	mov	x25, xzr
    30c4:	str	x0, [x24, #32]
    30c8:	add	x26, x8, x9
    30cc:	add	x8, x19, #0x8
    30d0:	stur	x8, [x29, #-232]
    30d4:	b	30fc <libintl_gettext@@Base+0x9ec>
    30d8:	sub	x8, x29, #0x14
    30dc:	ldur	w8, [x8, #-256]
    30e0:	sub	x9, x29, #0x14
    30e4:	add	w8, w8, #0x1
    30e8:	stur	w8, [x9, #-256]
    30ec:	ldur	x8, [x29, #-240]
    30f0:	add	x25, x25, #0x1
    30f4:	cmp	x25, x8
    30f8:	b.cs	334c <libintl_gettext@@Base+0xc3c>  // b.hs, b.nlast
    30fc:	ldr	w19, [x24, #24]
    3100:	mov	w8, wzr
    3104:	mov	w20, #0x1                   	// #1
    3108:	mov	w22, w8
    310c:	cbz	w19, 3128 <libintl_gettext@@Base+0xa18>
    3110:	ldp	x8, x9, [x29, #-176]
    3114:	cmp	w22, #0x0
    3118:	csel	x8, x8, x9, eq  // eq = none
    311c:	ldr	w0, [x8, x25, lsl #2]
    3120:	bl	357c <libintl_gettext@@Base+0xe6c>
    3124:	b	313c <libintl_gettext@@Base+0xa2c>
    3128:	cbz	w22, 3134 <libintl_gettext@@Base+0xa24>
    312c:	ldur	x8, [x29, #-168]
    3130:	b	3138 <libintl_gettext@@Base+0xa28>
    3134:	ldur	x8, [x29, #-176]
    3138:	ldr	w0, [x8, x25, lsl #2]
    313c:	ldur	x8, [x29, #-200]
    3140:	mov	w23, w0
    3144:	add	x8, x8, x23
    3148:	ldr	w0, [x8, #4]
    314c:	cbz	w19, 3154 <libintl_gettext@@Base+0xa44>
    3150:	bl	357c <libintl_gettext@@Base+0xe6c>
    3154:	cmn	w0, #0x1
    3158:	b.eq	31a0 <libintl_gettext@@Base+0xa90>  // b.none
    315c:	ldur	x8, [x29, #-232]
    3160:	add	x23, x8, x23
    3164:	b	3174 <libintl_gettext@@Base+0xa64>
    3168:	mov	w8, wzr
    316c:	add	x23, x23, #0x8
    3170:	tbz	w8, #0, 31a0 <libintl_gettext@@Base+0xa90>
    3174:	ldr	w0, [x23]
    3178:	cbz	w19, 3180 <libintl_gettext@@Base+0xa70>
    317c:	bl	357c <libintl_gettext@@Base+0xe6c>
    3180:	cmn	w0, #0x1
    3184:	b.eq	3168 <libintl_gettext@@Base+0xa58>  // b.none
    3188:	ldr	x8, [x21, w0, uxtw #3]
    318c:	cmp	x8, #0x0
    3190:	cset	w8, ne  // ne = any
    3194:	csel	w20, wzr, w20, eq  // eq = none
    3198:	add	x23, x23, #0x8
    319c:	tbnz	w8, #0, 3174 <libintl_gettext@@Base+0xa64>
    31a0:	cbz	w20, 31ac <libintl_gettext@@Base+0xa9c>
    31a4:	add	w8, w22, #0x1
    31a8:	cbz	w22, 3108 <libintl_gettext@@Base+0x9f8>
    31ac:	cbz	w20, 30ec <libintl_gettext@@Base+0x9dc>
    31b0:	sub	x8, x29, #0x14
    31b4:	ldur	w8, [x8, #-256]
    31b8:	mov	w19, wzr
    31bc:	stur	x25, [x29, #-208]
    31c0:	mov	w8, w8
    31c4:	stur	x8, [x29, #-184]
    31c8:	b	31ec <libintl_gettext@@Base+0xadc>
    31cc:	ldr	x8, [x20]
    31d0:	ldur	x9, [x29, #-192]
    31d4:	ldur	x25, [x29, #-208]
    31d8:	sub	x8, x26, x8
    31dc:	str	x8, [x9]
    31e0:	add	w19, w19, #0x1
    31e4:	cmp	w19, #0x2
    31e8:	b.eq	30d8 <libintl_gettext@@Base+0x9c8>  // b.none
    31ec:	ldr	w20, [x24, #24]
    31f0:	cbz	w20, 320c <libintl_gettext@@Base+0xafc>
    31f4:	ldp	x8, x9, [x29, #-176]
    31f8:	cmp	w19, #0x0
    31fc:	csel	x8, x8, x9, eq  // eq = none
    3200:	ldr	w0, [x8, x25, lsl #2]
    3204:	bl	357c <libintl_gettext@@Base+0xe6c>
    3208:	b	3220 <libintl_gettext@@Base+0xb10>
    320c:	cbz	w19, 3218 <libintl_gettext@@Base+0xb08>
    3210:	ldur	x8, [x29, #-168]
    3214:	b	321c <libintl_gettext@@Base+0xb0c>
    3218:	ldur	x8, [x29, #-176]
    321c:	ldr	w0, [x8, x25, lsl #2]
    3220:	ldur	x8, [x29, #-160]
    3224:	add	x25, x8, w0, uxtw
    3228:	ldr	w0, [x25]
    322c:	cbz	w20, 3234 <libintl_gettext@@Base+0xb24>
    3230:	bl	357c <libintl_gettext@@Base+0xe6c>
    3234:	ldur	x8, [x29, #-160]
    3238:	cmp	w19, #0x0
    323c:	add	x27, x8, w0, uxtw
    3240:	ldp	x9, x8, [x29, #-224]
    3244:	ldr	w0, [x25, #8]
    3248:	csel	x22, x8, x9, eq  // eq = none
    324c:	ldur	x8, [x29, #-184]
    3250:	add	x8, x22, x8, lsl #4
    3254:	stur	x8, [x29, #-192]
    3258:	cbz	w20, 3260 <libintl_gettext@@Base+0xb50>
    325c:	bl	357c <libintl_gettext@@Base+0xe6c>
    3260:	cmn	w0, #0x1
    3264:	add	x25, x25, #0x4
    3268:	b.eq	3310 <libintl_gettext@@Base+0xc00>  // b.none
    326c:	ldur	x8, [x29, #-184]
    3270:	add	x20, x22, x8, lsl #4
    3274:	str	x26, [x20, #8]!
    3278:	b	3288 <libintl_gettext@@Base+0xb78>
    327c:	mov	w8, wzr
    3280:	add	x25, x25, #0x8
    3284:	tbz	w8, #0, 31cc <libintl_gettext@@Base+0xabc>
    3288:	ldr	w23, [x24, #24]
    328c:	ldr	w22, [x25]
    3290:	cbz	w23, 32a0 <libintl_gettext@@Base+0xb90>
    3294:	mov	w0, w22
    3298:	bl	357c <libintl_gettext@@Base+0xe6c>
    329c:	mov	w22, w0
    32a0:	ldr	w28, [x25, #4]
    32a4:	cbz	w23, 32b4 <libintl_gettext@@Base+0xba4>
    32a8:	mov	w0, w28
    32ac:	bl	357c <libintl_gettext@@Base+0xe6c>
    32b0:	mov	w28, w0
    32b4:	cbz	w22, 32d4 <libintl_gettext@@Base+0xbc4>
    32b8:	mov	w22, w22
    32bc:	mov	x0, x26
    32c0:	mov	x1, x27
    32c4:	mov	x2, x22
    32c8:	bl	1d40 <memcpy@plt>
    32cc:	add	x26, x26, x22
    32d0:	add	x27, x27, x22
    32d4:	cmn	w28, #0x1
    32d8:	b.eq	327c <libintl_gettext@@Base+0xb6c>  // b.none
    32dc:	ldr	x22, [x21, w28, uxtw #3]
    32e0:	mov	x0, x22
    32e4:	bl	1d90 <strlen@plt>
    32e8:	mov	x28, x0
    32ec:	mov	x0, x26
    32f0:	mov	x1, x22
    32f4:	mov	x2, x28
    32f8:	bl	1d40 <memcpy@plt>
    32fc:	add	x26, x26, x28
    3300:	mov	w8, #0x1                   	// #1
    3304:	add	x25, x25, #0x8
    3308:	tbnz	w8, #0, 3288 <libintl_gettext@@Base+0xb78>
    330c:	b	31cc <libintl_gettext@@Base+0xabc>
    3310:	ldr	w0, [x25]
    3314:	cbz	w20, 331c <libintl_gettext@@Base+0xc0c>
    3318:	bl	357c <libintl_gettext@@Base+0xe6c>
    331c:	ldp	x10, x9, [x29, #-192]
    3320:	ldur	x25, [x29, #-208]
    3324:	mov	w8, w0
    3328:	add	x9, x22, x9, lsl #4
    332c:	str	x8, [x10]
    3330:	str	x27, [x9, #8]
    3334:	b	31e0 <libintl_gettext@@Base+0xad0>
    3338:	sub	x8, x29, #0x18
    333c:	ldur	w26, [x8, #-256]
    3340:	str	wzr, [x24, #64]
    3344:	stp	xzr, xzr, [x24, #72]
    3348:	b	3484 <libintl_gettext@@Base+0xd74>
    334c:	sub	x8, x29, #0x4
    3350:	sub	x9, x29, #0x14
    3354:	ldur	w8, [x8, #-256]
    3358:	ldur	w9, [x9, #-256]
    335c:	cmp	w9, w8
    3360:	b.ne	3578 <libintl_gettext@@Base+0xe68>  // b.any
    3364:	sub	x9, x29, #0x30
    3368:	ldr	w8, [x24, #88]
    336c:	ldur	x23, [x29, #-216]
    3370:	ldur	x25, [x9, #-256]
    3374:	cbz	w8, 33ac <libintl_gettext@@Base+0xc9c>
    3378:	ldr	w19, [x24, #104]
    337c:	ldr	x20, [x24, #96]
    3380:	ldr	w21, [x24, #88]
    3384:	mov	x22, xzr
    3388:	b	339c <libintl_gettext@@Base+0xc8c>
    338c:	str	w0, [x25, x22, lsl #2]
    3390:	add	x22, x22, #0x1
    3394:	cmp	x22, x21
    3398:	b.cs	33ac <libintl_gettext@@Base+0xc9c>  // b.hs, b.nlast
    339c:	ldr	w0, [x20, x22, lsl #2]
    33a0:	cbz	w19, 338c <libintl_gettext@@Base+0xc7c>
    33a4:	bl	357c <libintl_gettext@@Base+0xe6c>
    33a8:	b	338c <libintl_gettext@@Base+0xc7c>
    33ac:	sub	x8, x29, #0x28
    33b0:	ldur	x20, [x8, #-256]
    33b4:	mov	x19, xzr
    33b8:	b	33d4 <libintl_gettext@@Base+0xcc4>
    33bc:	ldr	w8, [x24, #40]
    33c0:	add	x19, x19, #0x1
    33c4:	cmp	x19, x20
    33c8:	add	w8, w8, w19
    33cc:	str	w8, [x9]
    33d0:	b.cs	342c <libintl_gettext@@Base+0xd1c>  // b.hs, b.nlast
    33d4:	add	x8, x23, x19, lsl #4
    33d8:	ldr	x0, [x8, #8]
    33dc:	bl	29bc <libintl_gettext@@Base+0x2ac>
    33e0:	ldr	w10, [x24, #88]
    33e4:	udiv	w8, w0, w10
    33e8:	msub	w8, w8, w10, w0
    33ec:	add	x9, x25, w8, uxtw #2
    33f0:	ldr	w11, [x9]
    33f4:	cbz	w11, 33bc <libintl_gettext@@Base+0xcac>
    33f8:	sub	w9, w10, #0x2
    33fc:	udiv	w11, w0, w9
    3400:	msub	w9, w11, w9, w0
    3404:	add	w9, w9, #0x1
    3408:	sub	w10, w10, w9
    340c:	neg	w11, w10
    3410:	cmp	w8, w10
    3414:	csel	w12, w9, w11, cc  // cc = lo, ul, last
    3418:	add	w8, w12, w8
    341c:	ldr	w12, [x25, w8, uxtw #2]
    3420:	cbnz	w12, 3410 <libintl_gettext@@Base+0xd00>
    3424:	add	x9, x25, w8, uxtw #2
    3428:	b	33bc <libintl_gettext@@Base+0xcac>
    342c:	sub	x9, x29, #0x4
    3430:	ldur	w9, [x9, #-256]
    3434:	mov	w8, wzr
    3438:	str	x25, [x24, #96]
    343c:	str	wzr, [x24, #104]
    3440:	str	w9, [x24, #64]
    3444:	ldur	x9, [x29, #-224]
    3448:	stp	x23, x9, [x24, #72]
    344c:	cbnz	wzr, 3460 <libintl_gettext@@Base+0xd50>
    3450:	b	345c <libintl_gettext@@Base+0xd4c>
    3454:	str	wzr, [x24, #64]
    3458:	stp	xzr, xzr, [x24, #72]
    345c:	mov	w8, wzr
    3460:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    3464:	sub	x9, x29, #0x20
    3468:	ldr	x22, [x22, #4064]
    346c:	ldur	x23, [x9, #-256]
    3470:	sub	x9, x29, #0x18
    3474:	ldur	w26, [x9, #-256]
    3478:	sub	x9, x29, #0x10
    347c:	ldur	x21, [x9, #-256]
    3480:	cbnz	w8, 3488 <libintl_gettext@@Base+0xd78>
    3484:	mov	w8, wzr
    3488:	cbz	w8, 34ac <libintl_gettext@@Base+0xd9c>
    348c:	ldr	x0, [x24, #32]
    3490:	bl	20a0 <free@plt>
    3494:	ldur	w8, [x29, #-244]
    3498:	cbz	w8, 34f4 <libintl_gettext@@Base+0xde4>
    349c:	ldur	x0, [x29, #-160]
    34a0:	ldur	x1, [x29, #-256]
    34a4:	bl	2110 <munmap@plt>
    34a8:	b	34fc <libintl_gettext@@Base+0xdec>
    34ac:	stp	xzr, xzr, [x24, #112]
    34b0:	cbz	x22, 34c0 <libintl_gettext@@Base+0xdb0>
    34b4:	add	x0, x24, #0x80
    34b8:	bl	67b4 <libintl_ngettext@@Base+0x9a4>
    34bc:	cbnz	w0, 3578 <libintl_gettext@@Base+0xe68>
    34c0:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    34c4:	add	x2, x2, #0x49f
    34c8:	sub	x4, x29, #0x98
    34cc:	mov	x0, x23
    34d0:	mov	x1, x21
    34d4:	mov	w3, wzr
    34d8:	bl	5304 <libintl_textdomain@@Base+0x1138>
    34dc:	cmn	x0, #0x1
    34e0:	b.eq	3568 <libintl_gettext@@Base+0xe58>  // b.none
    34e4:	add	x1, x24, #0xb8
    34e8:	add	x2, x24, #0xc0
    34ec:	bl	6664 <libintl_ngettext@@Base+0x854>
    34f0:	b	3508 <libintl_gettext@@Base+0xdf8>
    34f4:	ldur	x0, [x29, #-160]
    34f8:	bl	20a0 <free@plt>
    34fc:	mov	x0, x24
    3500:	bl	20a0 <free@plt>
    3504:	str	xzr, [x23, #16]
    3508:	cmn	w26, #0x1
    350c:	b.eq	3518 <libintl_gettext@@Base+0xe08>  // b.none
    3510:	mov	w0, w26
    3514:	bl	1fe0 <close@plt>
    3518:	mov	w8, #0x1                   	// #1
    351c:	str	w8, [x23, #8]
    3520:	cbz	x22, 3534 <libintl_gettext@@Base+0xe24>
    3524:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3528:	add	x0, x0, #0x2b8
    352c:	bl	21f0 <pthread_mutex_unlock@plt>
    3530:	cbnz	w0, 3578 <libintl_gettext@@Base+0xe68>
    3534:	mov	sp, x29
    3538:	ldp	x20, x19, [sp, #80]
    353c:	ldp	x22, x21, [sp, #64]
    3540:	ldp	x24, x23, [sp, #48]
    3544:	ldp	x26, x25, [sp, #32]
    3548:	ldp	x28, x27, [sp, #16]
    354c:	ldp	x29, x30, [sp], #96
    3550:	ret
    3554:	mov	w8, #0xa                   	// #10
    3558:	cbnz	w8, 3460 <libintl_gettext@@Base+0xd50>
    355c:	b	345c <libintl_gettext@@Base+0xd4c>
    3560:	mov	w20, wzr
    3564:	b	2ad0 <libintl_gettext@@Base+0x3c0>
    3568:	cbz	x22, 348c <libintl_gettext@@Base+0xd7c>
    356c:	add	x0, x24, #0x80
    3570:	bl	1ef0 <pthread_rwlock_destroy@plt>
    3574:	cbz	w0, 348c <libintl_gettext@@Base+0xd7c>
    3578:	bl	2000 <abort@plt>
    357c:	rev	w0, w0
    3580:	ret
    3584:	stp	x29, x30, [sp, #-16]!
    3588:	ldrb	w9, [x0]
    358c:	mov	x29, sp
    3590:	cmp	w9, #0x49
    3594:	b.eq	39a0 <libintl_gettext@@Base+0x1290>  // b.none
    3598:	cmp	w9, #0x50
    359c:	b.ne	39a8 <libintl_gettext@@Base+0x1298>  // b.any
    35a0:	ldrb	w8, [x0, #1]
    35a4:	cmp	w8, #0x52
    35a8:	b.ne	3998 <libintl_gettext@@Base+0x1288>  // b.any
    35ac:	ldrb	w8, [x0, #2]
    35b0:	cmp	w8, #0x49
    35b4:	b.ne	3998 <libintl_gettext@@Base+0x1288>  // b.any
    35b8:	ldrb	w8, [x0, #3]
    35bc:	sub	w8, w8, #0x58
    35c0:	cmp	w8, #0x20
    35c4:	b.hi	3998 <libintl_gettext@@Base+0x1288>  // b.pmore
    35c8:	mov	x11, #0x1001                	// #4097
    35cc:	mov	w10, #0x1                   	// #1
    35d0:	movk	x11, #0x2082, lsl #16
    35d4:	lsl	x10, x10, x8
    35d8:	movk	x11, #0x1, lsl #32
    35dc:	tst	x10, x11
    35e0:	b.eq	3998 <libintl_gettext@@Base+0x1288>  // b.none
    35e4:	ldrb	w10, [x0, #4]
    35e8:	sub	w11, w10, #0x31
    35ec:	cmp	w11, #0x1f
    35f0:	b.hi	3998 <libintl_gettext@@Base+0x1288>  // b.pmore
    35f4:	adrp	x12, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    35f8:	add	x12, x12, #0x1c8
    35fc:	adr	x13, 360c <libintl_gettext@@Base+0xefc>
    3600:	ldrb	w14, [x12, x11]
    3604:	add	x13, x13, x14, lsl #2
    3608:	br	x13
    360c:	ldrb	w11, [x0, #5]
    3610:	cmp	w11, #0x36
    3614:	b.ne	3620 <libintl_gettext@@Base+0xf10>  // b.any
    3618:	ldrb	w11, [x0, #6]
    361c:	cbz	w11, 37d4 <libintl_gettext@@Base+0x10c4>
    3620:	sub	w11, w10, #0x33
    3624:	cmp	w11, #0x1d
    3628:	b.hi	3998 <libintl_gettext@@Base+0x1288>  // b.pmore
    362c:	adrp	x12, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3630:	add	x12, x12, #0x208
    3634:	adr	x13, 366c <libintl_gettext@@Base+0xf5c>
    3638:	ldrb	w14, [x12, x11]
    363c:	add	x13, x13, x14, lsl #2
    3640:	br	x13
    3644:	ldrb	w12, [x0, #5]
    3648:	cbz	w12, 375c <libintl_gettext@@Base+0x104c>
    364c:	cmp	w11, #0x1f
    3650:	b.hi	3998 <libintl_gettext@@Base+0x1288>  // b.pmore
    3654:	adrp	x12, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3658:	add	x12, x12, #0x1e8
    365c:	adr	x13, 360c <libintl_gettext@@Base+0xefc>
    3660:	ldrb	w14, [x12, x11]
    3664:	add	x13, x13, x14, lsl #2
    3668:	br	x13
    366c:	ldrb	w11, [x0, #5]
    3670:	cmp	w11, #0x32
    3674:	b.ne	3680 <libintl_gettext@@Base+0xf70>  // b.any
    3678:	ldrb	w11, [x0, #6]
    367c:	cbz	w11, 37ac <libintl_gettext@@Base+0x109c>
    3680:	sub	w11, w10, #0x36
    3684:	cmp	w11, #0x1a
    3688:	b.hi	3998 <libintl_gettext@@Base+0x1288>  // b.pmore
    368c:	adrp	x12, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3690:	add	x12, x12, #0x226
    3694:	adr	x13, 36a4 <libintl_gettext@@Base+0xf94>
    3698:	ldrb	w14, [x12, x11]
    369c:	add	x13, x13, x14, lsl #2
    36a0:	br	x13
    36a4:	ldrb	w11, [x0, #5]
    36a8:	cmp	w11, #0x34
    36ac:	b.ne	36b8 <libintl_gettext@@Base+0xfa8>  // b.any
    36b0:	ldrb	w11, [x0, #6]
    36b4:	cbz	w11, 3784 <libintl_gettext@@Base+0x1074>
    36b8:	sub	w11, w10, #0x46
    36bc:	cmp	w11, #0xa
    36c0:	b.hi	3998 <libintl_gettext@@Base+0x1288>  // b.pmore
    36c4:	adrp	x12, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    36c8:	add	x12, x12, #0x241
    36cc:	adr	x13, 36dc <libintl_gettext@@Base+0xfcc>
    36d0:	ldrb	w14, [x12, x11]
    36d4:	add	x13, x13, x14, lsl #2
    36d8:	br	x13
    36dc:	ldrb	w11, [x0, #5]
    36e0:	cmp	w11, #0x45
    36e4:	b.ne	3860 <libintl_gettext@@Base+0x1150>  // b.any
    36e8:	ldrb	w11, [x0, #6]
    36ec:	cmp	w11, #0x41
    36f0:	b.ne	3860 <libintl_gettext@@Base+0x1150>  // b.any
    36f4:	ldrb	w11, [x0, #7]
    36f8:	cmp	w11, #0x53
    36fc:	b.ne	3860 <libintl_gettext@@Base+0x1150>  // b.any
    3700:	ldrb	w11, [x0, #8]
    3704:	cmp	w11, #0x54
    3708:	b.ne	3860 <libintl_gettext@@Base+0x1150>  // b.any
    370c:	ldrb	w11, [x0, #9]
    3710:	sub	w12, w11, #0x31
    3714:	cmp	w12, #0x7
    3718:	b.hi	3860 <libintl_gettext@@Base+0x1150>  // b.pmore
    371c:	adrp	x13, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3720:	add	x13, x13, #0x24c
    3724:	adr	x14, 3734 <libintl_gettext@@Base+0x1024>
    3728:	ldrb	w15, [x13, x12]
    372c:	add	x14, x14, x15, lsl #2
    3730:	br	x14
    3734:	ldrb	w12, [x0, #10]
    3738:	cmp	w12, #0x36
    373c:	b.ne	3748 <libintl_gettext@@Base+0x1038>  // b.any
    3740:	ldrb	w12, [x0, #11]
    3744:	cbz	w12, 3b7c <libintl_gettext@@Base+0x146c>
    3748:	cmp	w11, #0x36
    374c:	b.eq	384c <libintl_gettext@@Base+0x113c>  // b.none
    3750:	cmp	w11, #0x33
    3754:	b.eq	3830 <libintl_gettext@@Base+0x1120>  // b.none
    3758:	b	3860 <libintl_gettext@@Base+0x1150>
    375c:	cmp	w8, #0x20
    3760:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    3764:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3768:	add	x9, x9, #0x409
    376c:	adr	x10, 37fc <libintl_gettext@@Base+0x10ec>
    3770:	ldrb	w11, [x9, x8]
    3774:	add	x10, x10, x11, lsl #2
    3778:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    377c:	add	x0, x0, #0x786
    3780:	br	x10
    3784:	cmp	w8, #0x20
    3788:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    378c:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3790:	add	x9, x9, #0x3a6
    3794:	adr	x10, 39ac <libintl_gettext@@Base+0x129c>
    3798:	ldrb	w11, [x9, x8]
    379c:	add	x10, x10, x11, lsl #2
    37a0:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    37a4:	add	x0, x0, #0x42a
    37a8:	br	x10
    37ac:	cmp	w8, #0x20
    37b0:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    37b4:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    37b8:	add	x9, x9, #0x3c7
    37bc:	adr	x10, 37fc <libintl_gettext@@Base+0x10ec>
    37c0:	ldrb	w11, [x9, x8]
    37c4:	add	x10, x10, x11, lsl #2
    37c8:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    37cc:	add	x0, x0, #0x786
    37d0:	br	x10
    37d4:	cmp	w8, #0x20
    37d8:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    37dc:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    37e0:	add	x9, x9, #0x3e8
    37e4:	adr	x10, 37fc <libintl_gettext@@Base+0x10ec>
    37e8:	ldrb	w11, [x9, x8]
    37ec:	add	x10, x10, x11, lsl #2
    37f0:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    37f4:	add	x0, x0, #0x786
    37f8:	br	x10
    37fc:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3800:	add	x0, x0, #0x478
    3804:	ldp	x29, x30, [sp], #16
    3808:	ret
    380c:	ldrb	w12, [x0, #10]
    3810:	cbz	w12, 3b2c <libintl_gettext@@Base+0x141c>
    3814:	cmp	w11, #0x36
    3818:	b.eq	384c <libintl_gettext@@Base+0x113c>  // b.none
    381c:	cmp	w11, #0x33
    3820:	b.eq	3830 <libintl_gettext@@Base+0x1120>  // b.none
    3824:	cmp	w11, #0x31
    3828:	b.eq	3734 <libintl_gettext@@Base+0x1024>  // b.none
    382c:	b	3860 <libintl_gettext@@Base+0x1150>
    3830:	ldrb	w12, [x0, #10]
    3834:	cmp	w12, #0x32
    3838:	b.ne	3844 <libintl_gettext@@Base+0x1134>  // b.any
    383c:	ldrb	w12, [x0, #11]
    3840:	cbz	w12, 3b54 <libintl_gettext@@Base+0x1444>
    3844:	cmp	w11, #0x36
    3848:	b.ne	3860 <libintl_gettext@@Base+0x1150>  // b.any
    384c:	ldrb	w11, [x0, #10]
    3850:	cmp	w11, #0x34
    3854:	b.ne	3860 <libintl_gettext@@Base+0x1150>  // b.any
    3858:	ldrb	w11, [x0, #11]
    385c:	cbz	w11, 3ac4 <libintl_gettext@@Base+0x13b4>
    3860:	cmp	w10, #0x50
    3864:	b.eq	3978 <libintl_gettext@@Base+0x1268>  // b.none
    3868:	cmp	w10, #0x4d
    386c:	b.eq	3950 <libintl_gettext@@Base+0x1240>  // b.none
    3870:	cmp	w10, #0x46
    3874:	b.ne	3998 <libintl_gettext@@Base+0x1288>  // b.any
    3878:	ldrb	w11, [x0, #5]
    387c:	cmp	w11, #0x41
    3880:	b.ne	3940 <libintl_gettext@@Base+0x1230>  // b.any
    3884:	ldrb	w11, [x0, #6]
    3888:	cmp	w11, #0x53
    388c:	b.ne	3940 <libintl_gettext@@Base+0x1230>  // b.any
    3890:	ldrb	w11, [x0, #7]
    3894:	cmp	w11, #0x54
    3898:	b.ne	3940 <libintl_gettext@@Base+0x1230>  // b.any
    389c:	ldrb	w11, [x0, #8]
    38a0:	sub	w12, w11, #0x31
    38a4:	cmp	w12, #0x7
    38a8:	b.hi	3940 <libintl_gettext@@Base+0x1230>  // b.pmore
    38ac:	adrp	x13, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    38b0:	add	x13, x13, #0x2d8
    38b4:	adr	x14, 38c4 <libintl_gettext@@Base+0x11b4>
    38b8:	ldrb	w15, [x13, x12]
    38bc:	add	x14, x14, x15, lsl #2
    38c0:	br	x14
    38c4:	ldrb	w12, [x0, #9]
    38c8:	cmp	w12, #0x36
    38cc:	b.ne	38d8 <libintl_gettext@@Base+0x11c8>  // b.any
    38d0:	ldrb	w12, [x0, #10]
    38d4:	cbz	w12, 3a9c <libintl_gettext@@Base+0x138c>
    38d8:	cmp	w11, #0x36
    38dc:	b.eq	392c <libintl_gettext@@Base+0x121c>  // b.none
    38e0:	cmp	w11, #0x33
    38e4:	b.eq	3910 <libintl_gettext@@Base+0x1200>  // b.none
    38e8:	b	3940 <libintl_gettext@@Base+0x1230>
    38ec:	ldrb	w12, [x0, #9]
    38f0:	cbz	w12, 3a4c <libintl_gettext@@Base+0x133c>
    38f4:	cmp	w11, #0x36
    38f8:	b.eq	392c <libintl_gettext@@Base+0x121c>  // b.none
    38fc:	cmp	w11, #0x33
    3900:	b.eq	3910 <libintl_gettext@@Base+0x1200>  // b.none
    3904:	cmp	w11, #0x31
    3908:	b.eq	38c4 <libintl_gettext@@Base+0x11b4>  // b.none
    390c:	b	3940 <libintl_gettext@@Base+0x1230>
    3910:	ldrb	w12, [x0, #9]
    3914:	cmp	w12, #0x32
    3918:	b.ne	3924 <libintl_gettext@@Base+0x1214>  // b.any
    391c:	ldrb	w12, [x0, #10]
    3920:	cbz	w12, 3a74 <libintl_gettext@@Base+0x1364>
    3924:	cmp	w11, #0x36
    3928:	b.ne	3940 <libintl_gettext@@Base+0x1230>  // b.any
    392c:	ldrb	w11, [x0, #9]
    3930:	cmp	w11, #0x34
    3934:	b.ne	3940 <libintl_gettext@@Base+0x1230>  // b.any
    3938:	ldrb	w11, [x0, #10]
    393c:	cbz	w11, 3a24 <libintl_gettext@@Base+0x1314>
    3940:	cmp	w10, #0x50
    3944:	b.eq	3978 <libintl_gettext@@Base+0x1268>  // b.none
    3948:	cmp	w10, #0x4d
    394c:	b.ne	3998 <libintl_gettext@@Base+0x1288>  // b.any
    3950:	ldrb	w11, [x0, #5]
    3954:	cmp	w11, #0x41
    3958:	b.ne	3970 <libintl_gettext@@Base+0x1260>  // b.any
    395c:	ldrb	w11, [x0, #6]
    3960:	cmp	w11, #0x58
    3964:	b.ne	3970 <libintl_gettext@@Base+0x1260>  // b.any
    3968:	ldrb	w11, [x0, #7]
    396c:	cbz	w11, 39ec <libintl_gettext@@Base+0x12dc>
    3970:	cmp	w10, #0x50
    3974:	b.ne	3998 <libintl_gettext@@Base+0x1288>  // b.any
    3978:	ldrb	w10, [x0, #5]
    397c:	cmp	w10, #0x54
    3980:	b.ne	3998 <libintl_gettext@@Base+0x1288>  // b.any
    3984:	ldrb	w10, [x0, #6]
    3988:	cmp	w10, #0x52
    398c:	b.ne	3998 <libintl_gettext@@Base+0x1288>  // b.any
    3990:	ldrb	w10, [x0, #7]
    3994:	cbz	w10, 39c4 <libintl_gettext@@Base+0x12b4>
    3998:	cmp	w9, #0x49
    399c:	b.ne	39a8 <libintl_gettext@@Base+0x1298>  // b.any
    39a0:	ldrb	w8, [x0, #1]
    39a4:	cbz	w8, 39b4 <libintl_gettext@@Base+0x12a4>
    39a8:	mov	x0, xzr
    39ac:	ldp	x29, x30, [sp], #16
    39b0:	ret
    39b4:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    39b8:	add	x0, x0, #0x7de
    39bc:	ldp	x29, x30, [sp], #16
    39c0:	ret
    39c4:	cmp	w8, #0x20
    39c8:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    39cc:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    39d0:	add	x9, x9, #0x364
    39d4:	adr	x10, 39ac <libintl_gettext@@Base+0x129c>
    39d8:	ldrb	w11, [x9, x8]
    39dc:	add	x10, x10, x11, lsl #2
    39e0:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    39e4:	add	x0, x0, #0x42a
    39e8:	br	x10
    39ec:	cmp	w8, #0x20
    39f0:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    39f4:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    39f8:	add	x9, x9, #0x385
    39fc:	adr	x10, 39ac <libintl_gettext@@Base+0x129c>
    3a00:	ldrb	w11, [x9, x8]
    3a04:	add	x10, x10, x11, lsl #2
    3a08:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3a0c:	add	x0, x0, #0x42a
    3a10:	br	x10
    3a14:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3a18:	add	x0, x0, #0x439
    3a1c:	ldp	x29, x30, [sp], #16
    3a20:	ret
    3a24:	cmp	w8, #0x20
    3a28:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    3a2c:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3a30:	add	x9, x9, #0x2e0
    3a34:	adr	x10, 39ac <libintl_gettext@@Base+0x129c>
    3a38:	ldrb	w11, [x9, x8]
    3a3c:	add	x10, x10, x11, lsl #2
    3a40:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3a44:	add	x0, x0, #0x42a
    3a48:	br	x10
    3a4c:	cmp	w8, #0x20
    3a50:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    3a54:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3a58:	add	x9, x9, #0x343
    3a5c:	adr	x10, 37fc <libintl_gettext@@Base+0x10ec>
    3a60:	ldrb	w11, [x9, x8]
    3a64:	add	x10, x10, x11, lsl #2
    3a68:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3a6c:	add	x0, x0, #0x786
    3a70:	br	x10
    3a74:	cmp	w8, #0x20
    3a78:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    3a7c:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3a80:	add	x9, x9, #0x301
    3a84:	adr	x10, 39ac <libintl_gettext@@Base+0x129c>
    3a88:	ldrb	w11, [x9, x8]
    3a8c:	add	x10, x10, x11, lsl #2
    3a90:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3a94:	add	x0, x0, #0x42a
    3a98:	br	x10
    3a9c:	cmp	w8, #0x20
    3aa0:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    3aa4:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3aa8:	add	x9, x9, #0x322
    3aac:	adr	x10, 39ac <libintl_gettext@@Base+0x129c>
    3ab0:	ldrb	w11, [x9, x8]
    3ab4:	add	x10, x10, x11, lsl #2
    3ab8:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3abc:	add	x0, x0, #0x42a
    3ac0:	br	x10
    3ac4:	cmp	w8, #0x20
    3ac8:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    3acc:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3ad0:	add	x9, x9, #0x254
    3ad4:	adr	x10, 39ac <libintl_gettext@@Base+0x129c>
    3ad8:	ldrb	w11, [x9, x8]
    3adc:	add	x10, x10, x11, lsl #2
    3ae0:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3ae4:	add	x0, x0, #0x42a
    3ae8:	br	x10
    3aec:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3af0:	add	x0, x0, #0x42d
    3af4:	ldp	x29, x30, [sp], #16
    3af8:	ret
    3afc:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3b00:	add	x0, x0, #0x430
    3b04:	ldp	x29, x30, [sp], #16
    3b08:	ret
    3b0c:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3b10:	add	x0, x0, #0x433
    3b14:	ldp	x29, x30, [sp], #16
    3b18:	ret
    3b1c:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3b20:	add	x0, x0, #0x436
    3b24:	ldp	x29, x30, [sp], #16
    3b28:	ret
    3b2c:	cmp	w8, #0x20
    3b30:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    3b34:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3b38:	add	x9, x9, #0x2b7
    3b3c:	adr	x10, 37fc <libintl_gettext@@Base+0x10ec>
    3b40:	ldrb	w11, [x9, x8]
    3b44:	add	x10, x10, x11, lsl #2
    3b48:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3b4c:	add	x0, x0, #0x786
    3b50:	br	x10
    3b54:	cmp	w8, #0x20
    3b58:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    3b5c:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3b60:	add	x9, x9, #0x275
    3b64:	adr	x10, 37fc <libintl_gettext@@Base+0x10ec>
    3b68:	ldrb	w11, [x9, x8]
    3b6c:	add	x10, x10, x11, lsl #2
    3b70:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3b74:	add	x0, x0, #0x786
    3b78:	br	x10
    3b7c:	cmp	w8, #0x20
    3b80:	b.hi	3be4 <libintl_gettext@@Base+0x14d4>  // b.pmore
    3b84:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3b88:	add	x9, x9, #0x296
    3b8c:	adr	x10, 37fc <libintl_gettext@@Base+0x10ec>
    3b90:	ldrb	w11, [x9, x8]
    3b94:	add	x10, x10, x11, lsl #2
    3b98:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3b9c:	add	x0, x0, #0x786
    3ba0:	br	x10
    3ba4:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3ba8:	add	x0, x0, #0x42e
    3bac:	ldp	x29, x30, [sp], #16
    3bb0:	ret
    3bb4:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3bb8:	add	x0, x0, #0x431
    3bbc:	ldp	x29, x30, [sp], #16
    3bc0:	ret
    3bc4:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3bc8:	add	x0, x0, #0x437
    3bcc:	ldp	x29, x30, [sp], #16
    3bd0:	ret
    3bd4:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3bd8:	add	x0, x0, #0x434
    3bdc:	ldp	x29, x30, [sp], #16
    3be0:	ret
    3be4:	bl	2000 <abort@plt>

0000000000003be8 <_nl_expand_alias@@Base>:
    3be8:	sub	sp, sp, #0x60
    3bec:	stp	x29, x30, [sp, #16]
    3bf0:	stp	x26, x25, [sp, #32]
    3bf4:	stp	x24, x23, [sp, #48]
    3bf8:	stp	x22, x21, [sp, #64]
    3bfc:	stp	x20, x19, [sp, #80]
    3c00:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    3c04:	ldr	x23, [x23, #4064]
    3c08:	mov	x19, x0
    3c0c:	add	x29, sp, #0x10
    3c10:	cbz	x23, 3c24 <_nl_expand_alias@@Base+0x3c>
    3c14:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3c18:	add	x0, x0, #0x380
    3c1c:	bl	21e0 <pthread_mutex_lock@plt>
    3c20:	cbnz	w0, 3d50 <_nl_expand_alias@@Base+0x168>
    3c24:	adrp	x24, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3c28:	ldr	x8, [x24, #888]
    3c2c:	cbnz	x8, 3c3c <_nl_expand_alias@@Base+0x54>
    3c30:	adrp	x8, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3c34:	add	x8, x8, #0x49f
    3c38:	str	x8, [x24, #888]
    3c3c:	adrp	x21, 3000 <libintl_gettext@@Base+0x8f0>
    3c40:	mov	x20, xzr
    3c44:	adrp	x25, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3c48:	adrp	x26, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3c4c:	add	x21, x21, #0xd54
    3c50:	ldr	x2, [x25, #944]
    3c54:	str	x19, [sp]
    3c58:	cbz	x2, 3c84 <_nl_expand_alias@@Base+0x9c>
    3c5c:	ldr	x1, [x26, #952]
    3c60:	mov	x0, sp
    3c64:	mov	w3, #0x10                  	// #16
    3c68:	mov	x4, x21
    3c6c:	bl	1f90 <bsearch@plt>
    3c70:	cbz	x0, 3c8c <_nl_expand_alias@@Base+0xa4>
    3c74:	ldr	x20, [x0, #8]
    3c78:	mov	w8, wzr
    3c7c:	cbnz	w8, 3d18 <_nl_expand_alias@@Base+0x130>
    3c80:	b	3d1c <_nl_expand_alias@@Base+0x134>
    3c84:	mov	x0, xzr
    3c88:	cbnz	x0, 3c74 <_nl_expand_alias@@Base+0x8c>
    3c8c:	ldr	x8, [x24, #888]
    3c90:	ldrb	w8, [x8]
    3c94:	cbz	w8, 3d0c <_nl_expand_alias@@Base+0x124>
    3c98:	ldr	x0, [x24, #888]
    3c9c:	ldrb	w8, [x0]
    3ca0:	cmp	w8, #0x3a
    3ca4:	b.ne	3cb8 <_nl_expand_alias@@Base+0xd0>  // b.any
    3ca8:	ldrb	w8, [x0, #1]!
    3cac:	cmp	w8, #0x3a
    3cb0:	b.eq	3ca8 <_nl_expand_alias@@Base+0xc0>  // b.none
    3cb4:	str	x0, [x24, #888]
    3cb8:	ldr	x8, [x24, #888]
    3cbc:	ldrb	w9, [x8]
    3cc0:	cbz	w9, 3cd8 <_nl_expand_alias@@Base+0xf0>
    3cc4:	cmp	w9, #0x3a
    3cc8:	b.eq	3cd8 <_nl_expand_alias@@Base+0xf0>  // b.none
    3ccc:	add	x8, x8, #0x1
    3cd0:	str	x8, [x24, #888]
    3cd4:	b	3cb8 <_nl_expand_alias@@Base+0xd0>
    3cd8:	cmp	x0, x8
    3cdc:	b.cs	3cf4 <_nl_expand_alias@@Base+0x10c>  // b.hs, b.nlast
    3ce0:	sub	w1, w8, w0
    3ce4:	bl	3d70 <_nl_expand_alias@@Base+0x188>
    3ce8:	mov	x22, x0
    3cec:	cbz	x22, 3cfc <_nl_expand_alias@@Base+0x114>
    3cf0:	b	3d10 <_nl_expand_alias@@Base+0x128>
    3cf4:	mov	x22, xzr
    3cf8:	cbnz	x22, 3d10 <_nl_expand_alias@@Base+0x128>
    3cfc:	ldr	x8, [x24, #888]
    3d00:	ldrb	w8, [x8]
    3d04:	cbnz	w8, 3c98 <_nl_expand_alias@@Base+0xb0>
    3d08:	b	3d10 <_nl_expand_alias@@Base+0x128>
    3d0c:	mov	x22, xzr
    3d10:	mov	w8, #0x1                   	// #1
    3d14:	cbz	w8, 3d1c <_nl_expand_alias@@Base+0x134>
    3d18:	cbnz	x22, 3c50 <_nl_expand_alias@@Base+0x68>
    3d1c:	cbz	x23, 3d30 <_nl_expand_alias@@Base+0x148>
    3d20:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3d24:	add	x0, x0, #0x380
    3d28:	bl	21f0 <pthread_mutex_unlock@plt>
    3d2c:	cbnz	w0, 3d50 <_nl_expand_alias@@Base+0x168>
    3d30:	mov	x0, x20
    3d34:	ldp	x20, x19, [sp, #80]
    3d38:	ldp	x22, x21, [sp, #64]
    3d3c:	ldp	x24, x23, [sp, #48]
    3d40:	ldp	x26, x25, [sp, #32]
    3d44:	ldp	x29, x30, [sp, #16]
    3d48:	add	sp, sp, #0x60
    3d4c:	ret
    3d50:	bl	2000 <abort@plt>
    3d54:	stp	x29, x30, [sp, #-16]!
    3d58:	ldr	x0, [x0]
    3d5c:	ldr	x1, [x1]
    3d60:	mov	x29, sp
    3d64:	bl	1fa0 <strcasecmp@plt>
    3d68:	ldp	x29, x30, [sp], #16
    3d6c:	ret
    3d70:	stp	x29, x30, [sp, #-96]!
    3d74:	stp	x28, x27, [sp, #16]
    3d78:	stp	x26, x25, [sp, #32]
    3d7c:	stp	x24, x23, [sp, #48]
    3d80:	stp	x22, x21, [sp, #64]
    3d84:	stp	x20, x19, [sp, #80]
    3d88:	mov	x29, sp
    3d8c:	sub	sp, sp, #0x1d0
    3d90:	sxtw	x20, w1
    3d94:	add	x9, x20, #0x1d
    3d98:	and	x9, x9, #0xfffffffffffffff0
    3d9c:	mov	x10, sp
    3da0:	sub	x21, x10, x9
    3da4:	mov	x19, sp
    3da8:	mov	x8, x0
    3dac:	mov	sp, x21
    3db0:	mov	x0, x21
    3db4:	mov	x1, x8
    3db8:	mov	x2, x20
    3dbc:	bl	1d40 <memcpy@plt>
    3dc0:	adrp	x8, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3dc4:	add	x8, x8, #0x43c
    3dc8:	ldr	x9, [x8]
    3dcc:	ldur	x8, [x8, #6]
    3dd0:	add	x10, x21, x20
    3dd4:	sub	x1, x29, #0x10
    3dd8:	mov	x0, x21
    3ddc:	str	x9, [x10]
    3de0:	stur	x8, [x10, #6]
    3de4:	bl	6a64 <libintl_set_relocation_prefix@@Base+0x1b4>
    3de8:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    3dec:	add	x1, x1, #0x775
    3df0:	bl	1ed0 <fopen@plt>
    3df4:	ldur	x8, [x29, #-16]
    3df8:	mov	x21, x0
    3dfc:	mov	x0, x8
    3e00:	bl	20a0 <free@plt>
    3e04:	cbz	x21, 4100 <_nl_expand_alias@@Base+0x518>
    3e08:	mov	w1, #0x2                   	// #2
    3e0c:	mov	x0, x21
    3e10:	bl	21a0 <__fsetlocking@plt>
    3e14:	add	x8, x19, #0x30
    3e18:	mov	x20, xzr
    3e1c:	adrp	x25, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3e20:	adrp	x28, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3e24:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3e28:	sub	x22, x8, #0x1
    3e2c:	orr	x24, x8, #0x1
    3e30:	str	x22, [x19, #16]
    3e34:	str	x24, [x19, #32]
    3e38:	b	3e50 <_nl_expand_alias@@Base+0x268>
    3e3c:	ldr	x24, [x19, #32]
    3e40:	ldr	x8, [x19, #40]
    3e44:	cbz	x8, 3f24 <_nl_expand_alias@@Base+0x33c>
    3e48:	mov	w8, wzr
    3e4c:	cbnz	w8, 4108 <_nl_expand_alias@@Base+0x520>
    3e50:	mov	x0, x21
    3e54:	bl	20f0 <feof_unlocked@plt>
    3e58:	cbnz	w0, 4118 <_nl_expand_alias@@Base+0x530>
    3e5c:	add	x0, x19, #0x30
    3e60:	mov	w1, #0x190                 	// #400
    3e64:	mov	x2, x21
    3e68:	bl	1e10 <fgets_unlocked@plt>
    3e6c:	cbz	x0, 3f4c <_nl_expand_alias@@Base+0x364>
    3e70:	add	x0, x19, #0x30
    3e74:	mov	w1, #0xa                   	// #10
    3e78:	bl	20e0 <strchr@plt>
    3e7c:	str	x0, [x19, #40]
    3e80:	bl	2070 <__ctype_b_loc@plt>
    3e84:	ldr	x8, [x0]
    3e88:	mov	x10, x24
    3e8c:	mov	x23, x22
    3e90:	ldrb	w11, [x23, #1]!
    3e94:	mov	x9, x10
    3e98:	add	x10, x10, #0x1
    3e9c:	ldrh	w12, [x8, x11, lsl #1]
    3ea0:	tbnz	w12, #13, 3e90 <_nl_expand_alias@@Base+0x2a8>
    3ea4:	cbz	w11, 3e40 <_nl_expand_alias@@Base+0x258>
    3ea8:	cmp	w11, #0x23
    3eac:	b.eq	3e40 <_nl_expand_alias@@Base+0x258>  // b.none
    3eb0:	ldrb	w11, [x9]
    3eb4:	mov	x10, x9
    3eb8:	cbz	x11, 3ed4 <_nl_expand_alias@@Base+0x2ec>
    3ebc:	ldrh	w12, [x8, x11, lsl #1]
    3ec0:	add	x9, x10, #0x1
    3ec4:	tbz	w12, #13, 3eb0 <_nl_expand_alias@@Base+0x2c8>
    3ec8:	cbz	w11, 3ed4 <_nl_expand_alias@@Base+0x2ec>
    3ecc:	mov	x10, x9
    3ed0:	sturb	wzr, [x9, #-1]
    3ed4:	ldr	x8, [x0]
    3ed8:	sub	x24, x10, #0x1
    3edc:	add	x10, x10, #0x1
    3ee0:	ldrb	w11, [x24, #1]!
    3ee4:	mov	x9, x10
    3ee8:	add	x10, x10, #0x1
    3eec:	ldrh	w12, [x8, x11, lsl #1]
    3ef0:	tbnz	w12, #13, 3ee0 <_nl_expand_alias@@Base+0x2f8>
    3ef4:	cbz	w11, 3e3c <_nl_expand_alias@@Base+0x254>
    3ef8:	ldrb	w10, [x9]
    3efc:	cbz	x10, 3f58 <_nl_expand_alias@@Base+0x370>
    3f00:	ldrh	w11, [x8, x10, lsl #1]
    3f04:	add	x9, x9, #0x1
    3f08:	tbz	w11, #13, 3ef8 <_nl_expand_alias@@Base+0x310>
    3f0c:	cbz	w10, 3f58 <_nl_expand_alias@@Base+0x370>
    3f10:	cmp	w10, #0xa
    3f14:	b.ne	3f54 <_nl_expand_alias@@Base+0x36c>  // b.any
    3f18:	mov	w8, #0xa00                 	// #2560
    3f1c:	sturh	w8, [x9, #-1]
    3f20:	b	3f58 <_nl_expand_alias@@Base+0x370>
    3f24:	add	x0, x19, #0x30
    3f28:	mov	w1, #0x190                 	// #400
    3f2c:	mov	x2, x21
    3f30:	bl	1e10 <fgets_unlocked@plt>
    3f34:	cbz	x0, 3e48 <_nl_expand_alias@@Base+0x260>
    3f38:	add	x0, x19, #0x30
    3f3c:	mov	w1, #0xa                   	// #10
    3f40:	bl	20e0 <strchr@plt>
    3f44:	cbz	x0, 3f24 <_nl_expand_alias@@Base+0x33c>
    3f48:	b	3e48 <_nl_expand_alias@@Base+0x260>
    3f4c:	mov	w8, #0x3                   	// #3
    3f50:	b	3e4c <_nl_expand_alias@@Base+0x264>
    3f54:	sturb	wzr, [x9, #-1]
    3f58:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3f5c:	ldr	x8, [x25, #944]
    3f60:	ldr	x9, [x9, #960]
    3f64:	cmp	x8, x9
    3f68:	b.cc	3f74 <_nl_expand_alias@@Base+0x38c>  // b.lo, b.ul, b.last
    3f6c:	bl	4168 <_nl_expand_alias@@Base+0x580>
    3f70:	cbnz	w0, 40ac <_nl_expand_alias@@Base+0x4c4>
    3f74:	mov	x0, x23
    3f78:	bl	1d90 <strlen@plt>
    3f7c:	add	x22, x0, #0x1
    3f80:	mov	x0, x24
    3f84:	bl	1d90 <strlen@plt>
    3f88:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3f8c:	ldr	x10, [x8, #968]
    3f90:	ldr	x8, [x28, #976]
    3f94:	add	x9, x0, #0x1
    3f98:	str	x9, [x19, #24]
    3f9c:	add	x9, x9, x22
    3fa0:	add	x10, x9, x10
    3fa4:	mov	x26, x22
    3fa8:	cmp	x10, x8
    3fac:	b.ls	4014 <_nl_expand_alias@@Base+0x42c>  // b.plast
    3fb0:	ldr	x0, [x27, #984]
    3fb4:	cmp	x9, #0x400
    3fb8:	mov	w10, #0x400                 	// #1024
    3fbc:	csel	x9, x9, x10, hi  // hi = pmore
    3fc0:	add	x22, x9, x8
    3fc4:	mov	x1, x22
    3fc8:	bl	1fb0 <realloc@plt>
    3fcc:	cbz	x0, 3ff8 <_nl_expand_alias@@Base+0x410>
    3fd0:	ldr	x8, [x27, #984]
    3fd4:	cmp	x8, x0
    3fd8:	b.eq	3fe4 <_nl_expand_alias@@Base+0x3fc>  // b.none
    3fdc:	ldr	x8, [x25, #944]
    3fe0:	cbnz	x8, 40bc <_nl_expand_alias@@Base+0x4d4>
    3fe4:	mov	w8, wzr
    3fe8:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    3fec:	str	x0, [x9, #984]
    3ff0:	str	x22, [x28, #976]
    3ff4:	b	3ffc <_nl_expand_alias@@Base+0x414>
    3ff8:	mov	w8, #0xc                   	// #12
    3ffc:	ldr	x22, [x19, #16]
    4000:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4004:	cbz	w8, 4014 <_nl_expand_alias@@Base+0x42c>
    4008:	ldr	x24, [x19, #32]
    400c:	cbnz	w8, 3e4c <_nl_expand_alias@@Base+0x264>
    4010:	b	3e40 <_nl_expand_alias@@Base+0x258>
    4014:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4018:	ldr	x28, [x27, #984]
    401c:	str	x20, [x19, #8]
    4020:	ldr	x20, [x8, #968]
    4024:	mov	x1, x23
    4028:	mov	x2, x26
    402c:	add	x27, x28, x20
    4030:	mov	x0, x27
    4034:	bl	1d40 <memcpy@plt>
    4038:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    403c:	ldr	x8, [x8, #952]
    4040:	mov	x22, x25
    4044:	ldr	x25, [x25, #944]
    4048:	mov	x1, x24
    404c:	ldr	x24, [x19, #24]
    4050:	add	x20, x20, x26
    4054:	add	x26, x8, x25, lsl #4
    4058:	add	x23, x28, x20
    405c:	str	x27, [x26]
    4060:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4064:	mov	x0, x23
    4068:	mov	x2, x24
    406c:	str	x20, [x27, #968]
    4070:	adrp	x28, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4074:	bl	1d40 <memcpy@plt>
    4078:	str	x23, [x26, #8]
    407c:	add	x9, x20, x24
    4080:	add	x10, x25, #0x1
    4084:	mov	x25, x22
    4088:	ldp	x20, x22, [x19, #8]
    408c:	mov	w8, wzr
    4090:	str	x9, [x27, #968]
    4094:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4098:	add	x20, x20, #0x1
    409c:	str	x10, [x25, #944]
    40a0:	ldr	x24, [x19, #32]
    40a4:	cbnz	w8, 3e4c <_nl_expand_alias@@Base+0x264>
    40a8:	b	3e40 <_nl_expand_alias@@Base+0x258>
    40ac:	mov	w8, #0xc                   	// #12
    40b0:	ldr	x24, [x19, #32]
    40b4:	cbnz	w8, 3e4c <_nl_expand_alias@@Base+0x264>
    40b8:	b	3e40 <_nl_expand_alias@@Base+0x258>
    40bc:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    40c0:	ldr	x10, [x9, #984]
    40c4:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    40c8:	ldr	x11, [x9, #952]
    40cc:	ldr	x9, [x25, #944]
    40d0:	mov	x8, xzr
    40d4:	sub	x10, x0, x10
    40d8:	add	x11, x11, #0x8
    40dc:	ldp	x12, x13, [x11, #-8]
    40e0:	add	x8, x8, #0x1
    40e4:	cmp	x8, x9
    40e8:	add	x12, x12, x10
    40ec:	add	x13, x13, x10
    40f0:	stp	x12, x13, [x11, #-8]
    40f4:	add	x11, x11, #0x10
    40f8:	b.cc	40dc <_nl_expand_alias@@Base+0x4f4>  // b.lo, b.ul, b.last
    40fc:	b	3fe4 <_nl_expand_alias@@Base+0x3fc>
    4100:	mov	x20, xzr
    4104:	b	4144 <_nl_expand_alias@@Base+0x55c>
    4108:	cmp	w8, #0xc
    410c:	b.eq	4118 <_nl_expand_alias@@Base+0x530>  // b.none
    4110:	cmp	w8, #0x3
    4114:	b.ne	4144 <_nl_expand_alias@@Base+0x55c>  // b.any
    4118:	mov	x0, x21
    411c:	bl	1eb0 <fclose@plt>
    4120:	cbz	x20, 4144 <_nl_expand_alias@@Base+0x55c>
    4124:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4128:	ldr	x0, [x8, #952]
    412c:	ldr	x1, [x25, #944]
    4130:	adrp	x3, 3000 <libintl_gettext@@Base+0x8f0>
    4134:	add	x3, x3, #0xd54
    4138:	mov	w2, #0x10                  	// #16
    413c:	bl	1e50 <qsort@plt>
    4140:	b	4144 <_nl_expand_alias@@Base+0x55c>
    4144:	mov	x0, x20
    4148:	mov	sp, x29
    414c:	ldp	x20, x19, [sp, #80]
    4150:	ldp	x22, x21, [sp, #64]
    4154:	ldp	x24, x23, [sp, #48]
    4158:	ldp	x26, x25, [sp, #32]
    415c:	ldp	x28, x27, [sp, #16]
    4160:	ldp	x29, x30, [sp], #96
    4164:	ret
    4168:	stp	x29, x30, [sp, #-48]!
    416c:	stp	x20, x19, [sp, #32]
    4170:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4174:	ldr	x8, [x19, #960]
    4178:	adrp	x20, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    417c:	ldr	x0, [x20, #952]
    4180:	str	x21, [sp, #16]
    4184:	lsl	x9, x8, #1
    4188:	cmp	x8, #0x0
    418c:	mov	w8, #0x64                  	// #100
    4190:	csel	x21, x8, x9, eq  // eq = none
    4194:	lsl	x1, x21, #4
    4198:	mov	x29, sp
    419c:	bl	1fb0 <realloc@plt>
    41a0:	cbz	x0, 41b8 <_nl_expand_alias@@Base+0x5d0>
    41a4:	mov	x8, x0
    41a8:	mov	w0, wzr
    41ac:	str	x8, [x20, #952]
    41b0:	str	x21, [x19, #960]
    41b4:	b	41bc <_nl_expand_alias@@Base+0x5d4>
    41b8:	mov	w0, #0xffffffff            	// #-1
    41bc:	ldp	x20, x19, [sp, #32]
    41c0:	ldr	x21, [sp, #16]
    41c4:	ldp	x29, x30, [sp], #48
    41c8:	ret

00000000000041cc <libintl_textdomain@@Base>:
    41cc:	stp	x29, x30, [sp, #-64]!
    41d0:	stp	x24, x23, [sp, #16]
    41d4:	stp	x22, x21, [sp, #32]
    41d8:	stp	x20, x19, [sp, #48]
    41dc:	mov	x29, sp
    41e0:	cbz	x0, 42b0 <libintl_textdomain@@Base+0xe4>
    41e4:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    41e8:	ldr	x22, [x22, #4064]
    41ec:	mov	x21, x0
    41f0:	cbz	x22, 4204 <libintl_textdomain@@Base+0x38>
    41f4:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    41f8:	ldr	x0, [x0, #4048]
    41fc:	bl	2010 <pthread_rwlock_wrlock@plt>
    4200:	cbnz	w0, 42ac <libintl_textdomain@@Base+0xe0>
    4204:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    4208:	ldr	x24, [x24, #4008]
    420c:	adrp	x23, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    4210:	ldrb	w8, [x21]
    4214:	ldr	x19, [x24]
    4218:	ldr	x23, [x23, #4024]
    421c:	cbz	w8, 4260 <libintl_textdomain@@Base+0x94>
    4220:	adrp	x1, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    4224:	ldr	x1, [x1, #4024]
    4228:	mov	x0, x21
    422c:	bl	2050 <strcmp@plt>
    4230:	cbz	w0, 4260 <libintl_textdomain@@Base+0x94>
    4234:	mov	x0, x21
    4238:	mov	x1, x19
    423c:	bl	2050 <strcmp@plt>
    4240:	mov	x20, x19
    4244:	cbz	w0, 4268 <libintl_textdomain@@Base+0x9c>
    4248:	mov	x0, x21
    424c:	bl	1fc0 <strdup@plt>
    4250:	mov	x20, x0
    4254:	cbz	x0, 4268 <libintl_textdomain@@Base+0x9c>
    4258:	str	x20, [x24]
    425c:	b	4268 <libintl_textdomain@@Base+0x9c>
    4260:	str	x23, [x24]
    4264:	mov	x20, x23
    4268:	cbz	x20, 4298 <libintl_textdomain@@Base+0xcc>
    426c:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    4270:	ldr	x8, [x8, #4032]
    4274:	cmp	x19, x23
    4278:	ldr	w9, [x8]
    427c:	add	w9, w9, #0x1
    4280:	str	w9, [x8]
    4284:	b.eq	4298 <libintl_textdomain@@Base+0xcc>  // b.none
    4288:	cmp	x19, x20
    428c:	b.eq	4298 <libintl_textdomain@@Base+0xcc>  // b.none
    4290:	mov	x0, x19
    4294:	bl	20a0 <free@plt>
    4298:	cbz	x22, 42bc <libintl_textdomain@@Base+0xf0>
    429c:	adrp	x0, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    42a0:	ldr	x0, [x0, #4048]
    42a4:	bl	20c0 <pthread_rwlock_unlock@plt>
    42a8:	cbz	w0, 42bc <libintl_textdomain@@Base+0xf0>
    42ac:	bl	2000 <abort@plt>
    42b0:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    42b4:	ldr	x8, [x8, #4008]
    42b8:	ldr	x20, [x8]
    42bc:	mov	x0, x20
    42c0:	ldp	x20, x19, [sp, #48]
    42c4:	ldp	x22, x21, [sp, #32]
    42c8:	ldp	x24, x23, [sp, #16]
    42cc:	ldp	x29, x30, [sp], #64
    42d0:	ret
    42d4:	sub	sp, sp, #0xd0
    42d8:	stp	x29, x30, [sp, #112]
    42dc:	stp	x28, x27, [sp, #128]
    42e0:	stp	x26, x25, [sp, #144]
    42e4:	stp	x24, x23, [sp, #160]
    42e8:	stp	x22, x21, [sp, #176]
    42ec:	stp	x20, x19, [sp, #192]
    42f0:	ldrb	w8, [x4]
    42f4:	add	x29, sp, #0x70
    42f8:	mov	x22, x0
    42fc:	mov	x0, x4
    4300:	cmp	w8, #0x2f
    4304:	csel	x8, xzr, x2, eq  // eq = none
    4308:	mov	x28, x7
    430c:	mov	x27, x6
    4310:	mov	x25, x5
    4314:	mov	x26, x4
    4318:	mov	w23, w3
    431c:	stur	x1, [x29, #-8]
    4320:	stur	x8, [x29, #-48]
    4324:	bl	1d90 <strlen@plt>
    4328:	mov	x19, x0
    432c:	mov	x20, xzr
    4330:	tbz	w23, #2, 4340 <libintl_textdomain@@Base+0x174>
    4334:	mov	x0, x25
    4338:	bl	1d90 <strlen@plt>
    433c:	add	x20, x0, #0x1
    4340:	tbz	w23, #1, 4360 <libintl_textdomain@@Base+0x194>
    4344:	mov	x0, x27
    4348:	bl	1d90 <strlen@plt>
    434c:	add	x21, x0, #0x1
    4350:	str	x22, [sp, #40]
    4354:	tbnz	w23, #0, 436c <libintl_textdomain@@Base+0x1a0>
    4358:	mov	x22, xzr
    435c:	b	4378 <libintl_textdomain@@Base+0x1ac>
    4360:	mov	x21, xzr
    4364:	str	x22, [sp, #40]
    4368:	tbz	w23, #0, 4358 <libintl_textdomain@@Base+0x18c>
    436c:	mov	x0, x28
    4370:	bl	1d90 <strlen@plt>
    4374:	add	x22, x0, #0x1
    4378:	ldp	x0, x8, [x29, #96]
    437c:	mov	w24, w23
    4380:	str	x8, [sp, #48]
    4384:	str	x0, [sp, #32]
    4388:	tbz	w23, #3, 439c <libintl_textdomain@@Base+0x1d0>
    438c:	bl	1d90 <strlen@plt>
    4390:	ldr	x8, [sp, #48]
    4394:	add	x23, x0, #0x1
    4398:	b	43a0 <libintl_textdomain@@Base+0x1d4>
    439c:	mov	x23, xzr
    43a0:	mov	x0, x8
    43a4:	bl	1d90 <strlen@plt>
    43a8:	ldur	x9, [x29, #-48]
    43ac:	add	x8, x19, x9
    43b0:	add	x8, x8, x20
    43b4:	add	x8, x8, x21
    43b8:	add	x8, x8, x22
    43bc:	add	x8, x8, x23
    43c0:	add	x8, x8, x0
    43c4:	add	x0, x8, #0x2
    43c8:	mov	x19, x9
    43cc:	bl	1ee0 <malloc@plt>
    43d0:	cbz	x0, 44fc <libintl_textdomain@@Base+0x330>
    43d4:	mov	x23, x0
    43d8:	cbz	x19, 4408 <libintl_textdomain@@Base+0x23c>
    43dc:	ldur	x1, [x29, #-8]
    43e0:	mov	x0, x23
    43e4:	mov	x2, x19
    43e8:	bl	1d40 <memcpy@plt>
    43ec:	mov	w2, #0x3a                  	// #58
    43f0:	mov	x0, x23
    43f4:	mov	x1, x19
    43f8:	bl	1f80 <argz_stringify@plt>
    43fc:	add	x0, x23, x19
    4400:	mov	w8, #0x2f                  	// #47
    4404:	sturb	w8, [x0, #-1]
    4408:	mov	x1, x26
    440c:	bl	1ea0 <stpcpy@plt>
    4410:	ldp	x19, x20, [sp, #32]
    4414:	tbz	w24, #2, 44dc <libintl_textdomain@@Base+0x310>
    4418:	mov	w8, #0x5f                  	// #95
    441c:	strb	w8, [x0], #1
    4420:	mov	x1, x25
    4424:	bl	1ea0 <stpcpy@plt>
    4428:	mov	x22, x28
    442c:	tbnz	w24, #1, 44e4 <libintl_textdomain@@Base+0x318>
    4430:	tbz	w24, #0, 4444 <libintl_textdomain@@Base+0x278>
    4434:	mov	w8, #0x2e                  	// #46
    4438:	strb	w8, [x0], #1
    443c:	mov	x1, x22
    4440:	bl	1ea0 <stpcpy@plt>
    4444:	stp	x25, x27, [x29, #-24]
    4448:	stur	x26, [x29, #-32]
    444c:	tbz	w24, #3, 4460 <libintl_textdomain@@Base+0x294>
    4450:	mov	w8, #0x40                  	// #64
    4454:	strb	w8, [x0], #1
    4458:	mov	x1, x19
    445c:	bl	1ea0 <stpcpy@plt>
    4460:	ldr	x1, [sp, #48]
    4464:	ldr	w19, [x29, #112]
    4468:	mov	w8, #0x2f                  	// #47
    446c:	strb	w8, [x0], #1
    4470:	bl	1ea0 <stpcpy@plt>
    4474:	ldr	x28, [x20]
    4478:	cbnz	x28, 4488 <libintl_textdomain@@Base+0x2bc>
    447c:	b	44bc <libintl_textdomain@@Base+0x2f0>
    4480:	ldr	x28, [x28, #24]
    4484:	cbz	x28, 44bc <libintl_textdomain@@Base+0x2f0>
    4488:	ldr	x0, [x28]
    448c:	cbz	x0, 4480 <libintl_textdomain@@Base+0x2b4>
    4490:	mov	x1, x23
    4494:	bl	2050 <strcmp@plt>
    4498:	cmp	w0, #0x0
    449c:	add	x8, x28, #0x18
    44a0:	cset	w9, eq  // eq = none
    44a4:	cset	w10, lt  // lt = tstop
    44a8:	csel	x11, xzr, x28, lt  // lt = tstop
    44ac:	csel	x20, x8, x20, gt
    44b0:	csel	x28, x28, x11, eq  // eq = none
    44b4:	cmp	w10, w9
    44b8:	b.eq	4480 <libintl_textdomain@@Base+0x2b4>  // b.none
    44bc:	cbz	w19, 4680 <libintl_textdomain@@Base+0x4b4>
    44c0:	cbnz	x28, 4680 <libintl_textdomain@@Base+0x4b4>
    44c4:	ldur	x1, [x29, #-48]
    44c8:	cbz	x1, 4504 <libintl_textdomain@@Base+0x338>
    44cc:	ldur	x0, [x29, #-8]
    44d0:	bl	2040 <argz_count@plt>
    44d4:	mov	x19, x0
    44d8:	b	4508 <libintl_textdomain@@Base+0x33c>
    44dc:	mov	x22, x28
    44e0:	tbz	w24, #1, 4430 <libintl_textdomain@@Base+0x264>
    44e4:	mov	w8, #0x2e                  	// #46
    44e8:	strb	w8, [x0], #1
    44ec:	mov	x1, x27
    44f0:	bl	1ea0 <stpcpy@plt>
    44f4:	tbnz	w24, #0, 4434 <libintl_textdomain@@Base+0x268>
    44f8:	b	4444 <libintl_textdomain@@Base+0x278>
    44fc:	mov	x28, xzr
    4500:	b	4698 <libintl_textdomain@@Base+0x4cc>
    4504:	mov	w19, #0x1                   	// #1
    4508:	mov	w0, w24
    450c:	bl	46bc <libintl_textdomain@@Base+0x4f0>
    4510:	lsl	x8, x19, x0
    4514:	cmp	x19, #0x1
    4518:	cinc	x8, x8, hi  // hi = pmore
    451c:	lsl	x8, x8, #3
    4520:	add	x0, x8, #0x28
    4524:	bl	1ee0 <malloc@plt>
    4528:	mov	x28, x0
    452c:	cbz	x0, 4680 <libintl_textdomain@@Base+0x4b4>
    4530:	cmp	x19, #0x2
    4534:	mov	w8, #0x3                   	// #3
    4538:	cset	w9, cc  // cc = lo, ul, last
    453c:	cmp	x19, #0x1
    4540:	cset	w10, hi  // hi = pmore
    4544:	bics	wzr, w8, w24
    4548:	cset	w8, eq  // eq = none
    454c:	orr	w8, w8, w10
    4550:	str	x23, [x28]
    4554:	str	xzr, [x28, #16]
    4558:	str	w8, [x28, #8]
    455c:	ldr	x8, [x20]
    4560:	str	x19, [sp, #24]
    4564:	subs	w19, w24, w9
    4568:	str	x8, [x28, #24]
    456c:	str	x28, [x20]
    4570:	b.mi	468c <libintl_textdomain@@Base+0x4c0>  // b.first
    4574:	mvn	w8, w24
    4578:	ldp	x27, x26, [sp, #40]
    457c:	ldur	x25, [x29, #-48]
    4580:	ldr	x24, [sp, #32]
    4584:	stur	x22, [x29, #-40]
    4588:	mov	x22, xzr
    458c:	add	x21, x28, #0x20
    4590:	mov	w9, #0x1                   	// #1
    4594:	stur	w8, [x29, #-52]
    4598:	b	45b4 <libintl_textdomain@@Base+0x3e8>
    459c:	mov	x23, x22
    45a0:	cmp	w19, #0x0
    45a4:	sub	w19, w19, #0x1
    45a8:	mov	x22, x23
    45ac:	mov	w9, #0x1                   	// #1
    45b0:	b.le	4690 <libintl_textdomain@@Base+0x4c4>
    45b4:	ldur	w8, [x29, #-52]
    45b8:	tst	w19, w8
    45bc:	b.ne	459c <libintl_textdomain@@Base+0x3d0>  // b.any
    45c0:	and	w8, w19, #0x3
    45c4:	cmp	w8, #0x3
    45c8:	b.eq	459c <libintl_textdomain@@Base+0x3d0>  // b.none
    45cc:	ldr	x8, [sp, #24]
    45d0:	cmp	x8, #0x2
    45d4:	b.cc	464c <libintl_textdomain@@Base+0x480>  // b.lo, b.ul, b.last
    45d8:	ldur	x0, [x29, #-8]
    45dc:	ldur	x1, [x29, #-48]
    45e0:	mov	x2, xzr
    45e4:	bl	2030 <argz_next@plt>
    45e8:	cbz	x0, 459c <libintl_textdomain@@Base+0x3d0>
    45ec:	mov	x20, x0
    45f0:	mov	x0, x20
    45f4:	bl	1d90 <strlen@plt>
    45f8:	ldp	x4, x5, [x29, #-32]
    45fc:	ldur	x6, [x29, #-16]
    4600:	ldur	x7, [x29, #-40]
    4604:	add	x2, x0, #0x1
    4608:	mov	w8, #0x1                   	// #1
    460c:	mov	x0, x27
    4610:	mov	x1, x20
    4614:	mov	w3, w19
    4618:	str	w8, [sp, #16]
    461c:	stp	x24, x26, [sp]
    4620:	bl	42d4 <libintl_textdomain@@Base+0x108>
    4624:	str	x0, [x21, x22, lsl #3]
    4628:	ldur	x0, [x29, #-8]
    462c:	mov	x1, x25
    4630:	mov	x2, x20
    4634:	add	x23, x22, #0x1
    4638:	bl	2030 <argz_next@plt>
    463c:	mov	x20, x0
    4640:	mov	x22, x23
    4644:	cbnz	x0, 45f0 <libintl_textdomain@@Base+0x424>
    4648:	b	45a0 <libintl_textdomain@@Base+0x3d4>
    464c:	ldp	x0, x8, [sp, #40]
    4650:	ldp	x6, x1, [x29, #-16]
    4654:	ldp	x2, x7, [x29, #-48]
    4658:	ldp	x4, x5, [x29, #-32]
    465c:	str	x8, [sp, #8]
    4660:	ldr	x8, [sp, #32]
    4664:	mov	w3, w19
    4668:	str	w9, [sp, #16]
    466c:	str	x8, [sp]
    4670:	bl	42d4 <libintl_textdomain@@Base+0x108>
    4674:	add	x23, x22, #0x1
    4678:	str	x0, [x21, x22, lsl #3]
    467c:	b	45a0 <libintl_textdomain@@Base+0x3d4>
    4680:	mov	x0, x23
    4684:	bl	20a0 <free@plt>
    4688:	b	4698 <libintl_textdomain@@Base+0x4cc>
    468c:	mov	x23, xzr
    4690:	add	x8, x28, x23, lsl #3
    4694:	str	xzr, [x8, #32]
    4698:	mov	x0, x28
    469c:	ldp	x20, x19, [sp, #192]
    46a0:	ldp	x22, x21, [sp, #176]
    46a4:	ldp	x24, x23, [sp, #160]
    46a8:	ldp	x26, x25, [sp, #144]
    46ac:	ldp	x28, x27, [sp, #128]
    46b0:	ldp	x29, x30, [sp, #112]
    46b4:	add	sp, sp, #0xd0
    46b8:	ret
    46bc:	mov	w8, #0xffffd555            	// #-10923
    46c0:	mov	w9, #0x5555                	// #21845
    46c4:	and	w8, w8, w0, asr #1
    46c8:	and	w9, w0, w9
    46cc:	mov	w10, #0xfffff333            	// #-3277
    46d0:	add	w8, w8, w9
    46d4:	mov	w9, #0x3333                	// #13107
    46d8:	and	w10, w10, w8, asr #2
    46dc:	and	w8, w8, w9
    46e0:	add	w8, w10, w8
    46e4:	add	w8, w8, w8, lsr #4
    46e8:	mov	w9, #0xf0f                 	// #3855
    46ec:	and	w8, w8, w9
    46f0:	add	w8, w8, w8, lsr #8
    46f4:	and	w0, w8, #0x1f
    46f8:	ret
    46fc:	stp	x29, x30, [sp, #-64]!
    4700:	stp	x20, x19, [sp, #48]
    4704:	mov	x19, x1
    4708:	mov	x20, x0
    470c:	stp	x24, x23, [sp, #16]
    4710:	stp	x22, x21, [sp, #32]
    4714:	mov	x29, sp
    4718:	cbz	x1, 4768 <libintl_textdomain@@Base+0x59c>
    471c:	bl	2070 <__ctype_b_loc@plt>
    4720:	ldr	x10, [x0]
    4724:	mov	x8, xzr
    4728:	mov	w9, #0x1                   	// #1
    472c:	mov	w11, #0x408                 	// #1032
    4730:	mov	x12, x20
    4734:	mov	x13, x19
    4738:	ldrb	w14, [x12], #1
    473c:	ldrh	w14, [x10, x14, lsl #1]
    4740:	bics	wzr, w11, w14
    4744:	ubfx	x14, x14, #3, #1
    4748:	csel	w9, wzr, w9, eq  // eq = none
    474c:	subs	x13, x13, #0x1
    4750:	add	x8, x8, x14
    4754:	b.ne	4738 <libintl_textdomain@@Base+0x56c>  // b.any
    4758:	cmp	w9, #0x0
    475c:	cset	w22, ne  // ne = any
    4760:	add	x8, x8, #0x1
    4764:	b	4770 <libintl_textdomain@@Base+0x5a4>
    4768:	mov	w22, #0x1                   	// #1
    476c:	mov	w8, #0x1                   	// #1
    4770:	cmp	w22, #0x0
    4774:	mov	w9, #0x3                   	// #3
    4778:	csel	x9, x9, xzr, ne  // ne = any
    477c:	add	x0, x8, x9
    4780:	bl	1ee0 <malloc@plt>
    4784:	mov	x21, x0
    4788:	cbz	x0, 47ec <libintl_textdomain@@Base+0x620>
    478c:	mov	x23, x21
    4790:	cbz	w22, 47a4 <libintl_textdomain@@Base+0x5d8>
    4794:	mov	w8, #0x7369                	// #29545
    4798:	movk	w8, #0x6f, lsl #16
    479c:	mov	x23, x21
    47a0:	str	w8, [x23], #3
    47a4:	cbz	x19, 47e8 <libintl_textdomain@@Base+0x61c>
    47a8:	bl	2070 <__ctype_b_loc@plt>
    47ac:	mov	x22, x0
    47b0:	b	47d0 <libintl_textdomain@@Base+0x604>
    47b4:	bl	1e80 <__ctype_tolower_loc@plt>
    47b8:	ldr	x8, [x0]
    47bc:	ldr	w24, [x8, x24, lsl #2]
    47c0:	strb	w24, [x23], #1
    47c4:	subs	x19, x19, #0x1
    47c8:	add	x20, x20, #0x1
    47cc:	b.eq	47e8 <libintl_textdomain@@Base+0x61c>  // b.none
    47d0:	ldr	x8, [x22]
    47d4:	ldrb	w24, [x20]
    47d8:	ldrh	w8, [x8, x24, lsl #1]
    47dc:	tbnz	w8, #10, 47b4 <libintl_textdomain@@Base+0x5e8>
    47e0:	tbnz	w8, #11, 47c0 <libintl_textdomain@@Base+0x5f4>
    47e4:	b	47c4 <libintl_textdomain@@Base+0x5f8>
    47e8:	strb	wzr, [x23]
    47ec:	mov	x0, x21
    47f0:	ldp	x20, x19, [sp, #48]
    47f4:	ldp	x22, x21, [sp, #32]
    47f8:	ldp	x24, x23, [sp, #16]
    47fc:	ldp	x29, x30, [sp], #64
    4800:	ret
    4804:	stp	x29, x30, [sp, #-80]!
    4808:	stp	x26, x25, [sp, #16]
    480c:	stp	x24, x23, [sp, #32]
    4810:	stp	x22, x21, [sp, #48]
    4814:	stp	x20, x19, [sp, #64]
    4818:	mov	x29, sp
    481c:	mov	x24, x5
    4820:	mov	x19, x4
    4824:	mov	x20, x3
    4828:	mov	x21, x2
    482c:	mov	x25, x0
    4830:	str	xzr, [x2]
    4834:	str	xzr, [x3]
    4838:	str	xzr, [x4]
    483c:	str	xzr, [x5]
    4840:	str	x0, [x1]
    4844:	bl	49ac <libintl_textdomain@@Base+0x7e0>
    4848:	cmp	x0, x25
    484c:	b.eq	4894 <libintl_textdomain@@Base+0x6c8>  // b.none
    4850:	ldrb	w8, [x0]
    4854:	mov	x22, x0
    4858:	cmp	w8, #0x5f
    485c:	b.ne	48a8 <libintl_textdomain@@Base+0x6dc>  // b.any
    4860:	strb	wzr, [x22], #1
    4864:	str	x22, [x20]
    4868:	ldrb	w8, [x22]
    486c:	cbz	w8, 488c <libintl_textdomain@@Base+0x6c0>
    4870:	cmp	w8, #0x2e
    4874:	b.eq	488c <libintl_textdomain@@Base+0x6c0>  // b.none
    4878:	cmp	w8, #0x40
    487c:	b.eq	488c <libintl_textdomain@@Base+0x6c0>  // b.none
    4880:	add	x22, x22, #0x1
    4884:	ldrb	w8, [x22]
    4888:	cbnz	w8, 4870 <libintl_textdomain@@Base+0x6a4>
    488c:	mov	w26, #0x4                   	// #4
    4890:	b	48ac <libintl_textdomain@@Base+0x6e0>
    4894:	mov	x0, x25
    4898:	bl	1d90 <strlen@plt>
    489c:	mov	w23, wzr
    48a0:	add	x22, x25, x0
    48a4:	b	4938 <libintl_textdomain@@Base+0x76c>
    48a8:	mov	w26, wzr
    48ac:	ldrb	w8, [x22]
    48b0:	cmp	w8, #0x2e
    48b4:	b.ne	48e0 <libintl_textdomain@@Base+0x714>  // b.any
    48b8:	mov	x0, x22
    48bc:	mov	x1, xzr
    48c0:	strb	wzr, [x0], #1
    48c4:	str	x0, [x19]
    48c8:	ldrb	w8, [x0, x1]
    48cc:	orr	w8, w8, #0x40
    48d0:	cmp	w8, #0x40
    48d4:	b.eq	48e8 <libintl_textdomain@@Base+0x71c>  // b.none
    48d8:	add	x1, x1, #0x1
    48dc:	b	48c8 <libintl_textdomain@@Base+0x6fc>
    48e0:	mov	w23, w26
    48e4:	b	4938 <libintl_textdomain@@Base+0x76c>
    48e8:	add	x8, x22, x1
    48ec:	add	x22, x8, #0x1
    48f0:	orr	w23, w26, #0x2
    48f4:	cbz	x1, 4938 <libintl_textdomain@@Base+0x76c>
    48f8:	ldrb	w8, [x0]
    48fc:	cbz	w8, 4938 <libintl_textdomain@@Base+0x76c>
    4900:	bl	46fc <libintl_textdomain@@Base+0x530>
    4904:	str	x0, [x24]
    4908:	cbz	x0, 4928 <libintl_textdomain@@Base+0x75c>
    490c:	mov	x25, x0
    4910:	ldr	x0, [x19]
    4914:	mov	x1, x25
    4918:	bl	2050 <strcmp@plt>
    491c:	cbz	w0, 4930 <libintl_textdomain@@Base+0x764>
    4920:	orr	w23, w26, #0x3
    4924:	b	4938 <libintl_textdomain@@Base+0x76c>
    4928:	mov	w23, #0xffffffff            	// #-1
    492c:	b	4990 <libintl_textdomain@@Base+0x7c4>
    4930:	mov	x0, x25
    4934:	bl	20a0 <free@plt>
    4938:	ldrb	w8, [x22]
    493c:	cmp	w8, #0x40
    4940:	b.ne	495c <libintl_textdomain@@Base+0x790>  // b.any
    4944:	strb	wzr, [x22], #1
    4948:	str	x22, [x21]
    494c:	ldrb	w8, [x22]
    4950:	orr	w9, w23, #0x8
    4954:	cmp	w8, #0x0
    4958:	csel	w23, w23, w9, eq  // eq = none
    495c:	ldr	x8, [x20]
    4960:	cbz	x8, 4974 <libintl_textdomain@@Base+0x7a8>
    4964:	ldrb	w8, [x8]
    4968:	and	w9, w23, #0xfffffffb
    496c:	cmp	w8, #0x0
    4970:	csel	w23, w9, w23, eq  // eq = none
    4974:	ldr	x8, [x19]
    4978:	cbz	x8, 4990 <libintl_textdomain@@Base+0x7c4>
    497c:	ldrb	w8, [x8]
    4980:	and	w9, w23, #0xfffffffd
    4984:	cmp	w8, #0x0
    4988:	csel	w0, w9, w23, eq  // eq = none
    498c:	b	4994 <libintl_textdomain@@Base+0x7c8>
    4990:	mov	w0, w23
    4994:	ldp	x20, x19, [sp, #64]
    4998:	ldp	x22, x21, [sp, #48]
    499c:	ldp	x24, x23, [sp, #32]
    49a0:	ldp	x26, x25, [sp, #16]
    49a4:	ldp	x29, x30, [sp], #80
    49a8:	ret
    49ac:	mov	x9, #0x1                   	// #1
    49b0:	movk	x9, #0x4, lsl #16
    49b4:	mov	w8, #0x1                   	// #1
    49b8:	movk	x9, #0x2, lsl #48
    49bc:	ldrb	w10, [x0]
    49c0:	sub	w11, w10, #0x2e
    49c4:	cmp	w11, #0x31
    49c8:	b.hi	49d8 <libintl_textdomain@@Base+0x80c>  // b.pmore
    49cc:	lsl	x11, x8, x11
    49d0:	tst	x11, x9
    49d4:	b.ne	49e4 <libintl_textdomain@@Base+0x818>  // b.any
    49d8:	cbz	w10, 49e4 <libintl_textdomain@@Base+0x818>
    49dc:	add	x0, x0, #0x1
    49e0:	b	49bc <libintl_textdomain@@Base+0x7f0>
    49e4:	ret
    49e8:	stp	x29, x30, [sp, #-96]!
    49ec:	stp	x28, x27, [sp, #16]
    49f0:	stp	x26, x25, [sp, #32]
    49f4:	stp	x24, x23, [sp, #48]
    49f8:	stp	x22, x21, [sp, #64]
    49fc:	stp	x20, x19, [sp, #80]
    4a00:	mov	x29, sp
    4a04:	sub	sp, sp, #0x90
    4a08:	cbz	x1, 4b00 <libintl_textdomain@@Base+0x934>
    4a0c:	mov	w28, w5
    4a10:	mov	x23, x4
    4a14:	mov	w26, w3
    4a18:	mov	x22, x1
    4a1c:	mov	x19, x0
    4a20:	stur	x2, [x29, #-104]
    4a24:	bl	21c0 <__errno_location@plt>
    4a28:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    4a2c:	ldr	w21, [x0]
    4a30:	ldr	x24, [x24, #4064]
    4a34:	mov	x27, x0
    4a38:	cbz	x24, 4a4c <libintl_textdomain@@Base+0x880>
    4a3c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4a40:	add	x0, x0, #0x2f0
    4a44:	bl	1dc0 <pthread_rwlock_rdlock@plt>
    4a48:	cbnz	w0, 5154 <libintl_textdomain@@Base+0xf88>
    4a4c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4a50:	ldr	x8, [x8, #744]
    4a54:	cmp	x19, #0x0
    4a58:	mov	w0, w28
    4a5c:	stur	xzr, [x29, #-40]
    4a60:	csel	x25, x8, x19, eq  // eq = none
    4a64:	stur	x22, [x29, #-16]
    4a68:	stur	x25, [x29, #-72]
    4a6c:	stur	w28, [x29, #-64]
    4a70:	bl	5158 <libintl_textdomain@@Base+0xf8c>
    4a74:	mov	x20, x0
    4a78:	mov	w0, w28
    4a7c:	mov	x1, x20
    4a80:	bl	6a9c <libintl_set_relocation_prefix@@Base+0x1ec>
    4a84:	adrp	x8, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    4a88:	add	x8, x8, #0x49f
    4a8c:	cmp	x0, #0x0
    4a90:	csel	x19, x8, x0, eq  // eq = none
    4a94:	stur	x19, [x29, #-56]
    4a98:	cbz	x24, 4b08 <libintl_textdomain@@Base+0x93c>
    4a9c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4aa0:	add	x0, x0, #0x328
    4aa4:	bl	1dc0 <pthread_rwlock_rdlock@plt>
    4aa8:	cbnz	w0, 5154 <libintl_textdomain@@Base+0xf88>
    4aac:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4ab0:	adrp	x2, 5000 <libintl_textdomain@@Base+0xe34>
    4ab4:	add	x1, x1, #0x3e0
    4ab8:	add	x2, x2, #0x17c
    4abc:	sub	x0, x29, #0x48
    4ac0:	bl	1e90 <tfind@plt>
    4ac4:	cbz	x24, 4af8 <libintl_textdomain@@Base+0x92c>
    4ac8:	mov	x24, x22
    4acc:	mov	w22, w26
    4ad0:	mov	x26, x0
    4ad4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4ad8:	add	x0, x0, #0x328
    4adc:	bl	20c0 <pthread_rwlock_unlock@plt>
    4ae0:	cbnz	w0, 5154 <libintl_textdomain@@Base+0xf88>
    4ae4:	mov	x0, x26
    4ae8:	mov	w26, w22
    4aec:	mov	x22, x24
    4af0:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    4af4:	ldr	x24, [x24, #4064]
    4af8:	cbnz	x0, 4b24 <libintl_textdomain@@Base+0x958>
    4afc:	b	4b60 <libintl_textdomain@@Base+0x994>
    4b00:	mov	x26, xzr
    4b04:	b	5130 <libintl_textdomain@@Base+0xf64>
    4b08:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4b0c:	adrp	x2, 5000 <libintl_textdomain@@Base+0xe34>
    4b10:	add	x1, x1, #0x3e0
    4b14:	add	x2, x2, #0x17c
    4b18:	sub	x0, x29, #0x48
    4b1c:	bl	1e90 <tfind@plt>
    4b20:	cbz	x0, 4b60 <libintl_textdomain@@Base+0x994>
    4b24:	adrp	x9, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    4b28:	ldr	x8, [x0]
    4b2c:	ldr	x9, [x9, #4032]
    4b30:	ldr	w10, [x8, #24]
    4b34:	ldr	w9, [x9]
    4b38:	cmp	w10, w9
    4b3c:	b.ne	4b60 <libintl_textdomain@@Base+0x994>  // b.any
    4b40:	cbz	w26, 5054 <libintl_textdomain@@Base+0xe88>
    4b44:	ldp	x0, x2, [x8, #32]
    4b48:	ldr	x3, [x8, #48]
    4b4c:	mov	x1, x23
    4b50:	bl	51fc <libintl_textdomain@@Base+0x1030>
    4b54:	mov	x26, x0
    4b58:	cbnz	x24, 505c <libintl_textdomain@@Base+0xe90>
    4b5c:	b	506c <libintl_textdomain@@Base+0xea0>
    4b60:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4b64:	ldr	w8, [x8, #1000]
    4b68:	stp	x19, x0, [x29, #-128]
    4b6c:	cbnz	w8, 4bac <libintl_textdomain@@Base+0x9e0>
    4b70:	bl	1e30 <getuid@plt>
    4b74:	mov	w19, w0
    4b78:	bl	1de0 <geteuid@plt>
    4b7c:	cmp	w19, w0
    4b80:	b.ne	4ba0 <libintl_textdomain@@Base+0x9d4>  // b.any
    4b84:	bl	20b0 <getgid@plt>
    4b88:	mov	w19, w0
    4b8c:	bl	1dd0 <getegid@plt>
    4b90:	cmp	w19, w0
    4b94:	mov	w8, #0xffffffff            	// #-1
    4b98:	cneg	w8, w8, ne  // ne = any
    4b9c:	b	4ba4 <libintl_textdomain@@Base+0x9d8>
    4ba0:	mov	w8, #0x1                   	// #1
    4ba4:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4ba8:	str	w8, [x9, #1000]
    4bac:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4bb0:	ldr	x19, [x8, #3296]
    4bb4:	stur	w28, [x29, #-84]
    4bb8:	stur	w21, [x29, #-92]
    4bbc:	cbz	x19, 4bf0 <libintl_textdomain@@Base+0xa24>
    4bc0:	add	x1, x19, #0x18
    4bc4:	mov	x0, x25
    4bc8:	bl	2050 <strcmp@plt>
    4bcc:	cmp	w0, #0x0
    4bd0:	cset	w8, eq  // eq = none
    4bd4:	cset	w9, lt  // lt = tstop
    4bd8:	csel	x10, xzr, x19, lt  // lt = tstop
    4bdc:	csel	x28, x19, x10, eq  // eq = none
    4be0:	cmp	w9, w8
    4be4:	b.ne	4bf4 <libintl_textdomain@@Base+0xa28>  // b.any
    4be8:	ldr	x19, [x28]
    4bec:	cbnz	x19, 4bc0 <libintl_textdomain@@Base+0x9f4>
    4bf0:	mov	x28, xzr
    4bf4:	stur	x27, [x29, #-80]
    4bf8:	stur	x23, [x29, #-112]
    4bfc:	stur	w26, [x29, #-88]
    4c00:	cbz	x28, 4cd8 <libintl_textdomain@@Base+0xb0c>
    4c04:	ldr	x24, [x28, #8]
    4c08:	ldrb	w8, [x24]
    4c0c:	cmp	w8, #0x2f
    4c10:	b.eq	4ce0 <libintl_textdomain@@Base+0xb14>  // b.none
    4c14:	mov	x0, x24
    4c18:	bl	1d90 <strlen@plt>
    4c1c:	mov	w8, #0x1012                	// #4114
    4c20:	add	x8, x0, x8
    4c24:	and	x8, x8, #0xfffffffffffffff0
    4c28:	mov	x9, sp
    4c2c:	mov	x21, x0
    4c30:	sub	x19, x9, x8
    4c34:	mov	sp, x19
    4c38:	mov	w1, #0x1002                	// #4098
    4c3c:	mov	x0, x19
    4c40:	str	wzr, [x27]
    4c44:	bl	1d70 <getcwd@plt>
    4c48:	cbnz	x0, 4ca4 <libintl_textdomain@@Base+0xad8>
    4c4c:	ldr	w8, [x27]
    4c50:	cmp	w8, #0x22
    4c54:	b.ne	4ca0 <libintl_textdomain@@Base+0xad4>  // b.any
    4c58:	add	x23, x21, #0x1
    4c5c:	mov	w21, #0x1002                	// #4098
    4c60:	add	x8, x21, x21, lsr #1
    4c64:	add	x21, x8, #0x20
    4c68:	add	x8, x23, x21
    4c6c:	add	x8, x8, #0xf
    4c70:	and	x8, x8, #0xfffffffffffffff0
    4c74:	mov	x9, sp
    4c78:	sub	x19, x9, x8
    4c7c:	mov	sp, x19
    4c80:	mov	x0, x19
    4c84:	mov	x1, x21
    4c88:	str	wzr, [x27]
    4c8c:	bl	1d70 <getcwd@plt>
    4c90:	cbnz	x0, 4ca4 <libintl_textdomain@@Base+0xad8>
    4c94:	ldr	w8, [x27]
    4c98:	cmp	w8, #0x22
    4c9c:	b.eq	4c60 <libintl_textdomain@@Base+0xa94>  // b.none
    4ca0:	cbz	x0, 50b0 <libintl_textdomain@@Base+0xee4>
    4ca4:	mov	x0, x19
    4ca8:	bl	1d90 <strlen@plt>
    4cac:	add	x0, x19, x0
    4cb0:	mov	w8, #0x2f                  	// #47
    4cb4:	strh	w8, [x0], #1
    4cb8:	mov	x1, x24
    4cbc:	bl	1ea0 <stpcpy@plt>
    4cc0:	mov	w8, wzr
    4cc4:	mov	x24, x19
    4cc8:	cmp	w8, #0xf
    4ccc:	b.eq	50bc <libintl_textdomain@@Base+0xef0>  // b.none
    4cd0:	cbz	w8, 4ce0 <libintl_textdomain@@Base+0xb14>
    4cd4:	b	5130 <libintl_textdomain@@Base+0xf64>
    4cd8:	adrp	x24, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    4cdc:	add	x24, x24, #0x462
    4ce0:	ldur	w0, [x29, #-84]
    4ce4:	mov	x1, x20
    4ce8:	bl	5270 <libintl_textdomain@@Base+0x10a4>
    4cec:	mov	x19, x0
    4cf0:	mov	x0, x25
    4cf4:	bl	1d90 <strlen@plt>
    4cf8:	mov	x21, x0
    4cfc:	mov	x0, x20
    4d00:	bl	1d90 <strlen@plt>
    4d04:	add	x8, x21, x0
    4d08:	add	x8, x8, #0x14
    4d0c:	and	x8, x8, #0xfffffffffffffff0
    4d10:	mov	x9, sp
    4d14:	sub	x27, x9, x8
    4d18:	mov	sp, x27
    4d1c:	mov	x0, x27
    4d20:	mov	x1, x20
    4d24:	bl	1ea0 <stpcpy@plt>
    4d28:	mov	x20, x0
    4d2c:	mov	w8, #0x2f                  	// #47
    4d30:	strh	w8, [x20], #1
    4d34:	mov	x0, x20
    4d38:	mov	x1, x25
    4d3c:	mov	x2, x21
    4d40:	bl	1d40 <memcpy@plt>
    4d44:	mov	w8, #0x6d2e                	// #27950
    4d48:	movk	w8, #0x6f, lsl #16
    4d4c:	mov	x0, x19
    4d50:	stur	x21, [x29, #-136]
    4d54:	str	w8, [x20, x21]
    4d58:	bl	1d90 <strlen@plt>
    4d5c:	add	x8, x0, #0x10
    4d60:	and	x8, x8, #0xfffffffffffffff0
    4d64:	mov	x9, sp
    4d68:	sub	x23, x9, x8
    4d6c:	mov	sp, x23
    4d70:	mov	w21, #0x43                  	// #67
    4d74:	b	4d7c <libintl_textdomain@@Base+0xbb0>
    4d78:	add	x19, x19, #0x1
    4d7c:	ldrb	w8, [x19]
    4d80:	cbz	w8, 4ddc <libintl_textdomain@@Base+0xc10>
    4d84:	cmp	w8, #0x3a
    4d88:	b.eq	4d78 <libintl_textdomain@@Base+0xbac>  // b.none
    4d8c:	mov	x8, xzr
    4d90:	ldrb	w9, [x19, x8]
    4d94:	cbz	w9, 4db0 <libintl_textdomain@@Base+0xbe4>
    4d98:	cmp	w9, #0x3a
    4d9c:	b.eq	4db0 <libintl_textdomain@@Base+0xbe4>  // b.none
    4da0:	strb	w9, [x23, x8]
    4da4:	add	x8, x8, #0x1
    4da8:	ldrb	w9, [x19, x8]
    4dac:	cbnz	w9, 4d98 <libintl_textdomain@@Base+0xbcc>
    4db0:	adrp	x9, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4db4:	ldr	w9, [x9, #1000]
    4db8:	add	x19, x19, x8
    4dbc:	strb	wzr, [x23, x8]
    4dc0:	cmp	w9, #0x1
    4dc4:	b.ne	4de0 <libintl_textdomain@@Base+0xc14>  // b.any
    4dc8:	mov	w1, #0x2f                  	// #47
    4dcc:	mov	x0, x23
    4dd0:	bl	20e0 <strchr@plt>
    4dd4:	cbnz	x0, 4d7c <libintl_textdomain@@Base+0xbb0>
    4dd8:	b	4de0 <libintl_textdomain@@Base+0xc14>
    4ddc:	strh	w21, [x23]
    4de0:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    4de4:	mov	x0, x23
    4de8:	add	x1, x1, #0x4d4
    4dec:	bl	2050 <strcmp@plt>
    4df0:	cbz	w0, 50bc <libintl_textdomain@@Base+0xef0>
    4df4:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    4df8:	mov	x0, x23
    4dfc:	add	x1, x1, #0x474
    4e00:	bl	2050 <strcmp@plt>
    4e04:	cbz	w0, 50bc <libintl_textdomain@@Base+0xef0>
    4e08:	mov	x0, x24
    4e0c:	mov	x1, x23
    4e10:	mov	x2, x27
    4e14:	mov	x3, x28
    4e18:	bl	2730 <libintl_gettext@@Base+0x20>
    4e1c:	cbz	x0, 4d7c <libintl_textdomain@@Base+0xbb0>
    4e20:	sub	x4, x29, #0x8
    4e24:	mov	w3, #0x1                   	// #1
    4e28:	mov	x1, x28
    4e2c:	mov	x2, x22
    4e30:	mov	x20, x0
    4e34:	bl	5304 <libintl_textdomain@@Base+0x1138>
    4e38:	cbz	x0, 4e44 <libintl_textdomain@@Base+0xc78>
    4e3c:	mov	x26, x0
    4e40:	b	4eb0 <libintl_textdomain@@Base+0xce4>
    4e44:	ldr	x0, [x20, #32]
    4e48:	cbz	x0, 4ea4 <libintl_textdomain@@Base+0xcd8>
    4e4c:	add	x21, x20, #0x28
    4e50:	sub	x4, x29, #0x8
    4e54:	mov	w3, #0x1                   	// #1
    4e58:	mov	x1, x28
    4e5c:	mov	x2, x22
    4e60:	bl	5304 <libintl_textdomain@@Base+0x1138>
    4e64:	cbnz	x0, 4e84 <libintl_textdomain@@Base+0xcb8>
    4e68:	ldr	x0, [x21], #8
    4e6c:	cbnz	x0, 4e50 <libintl_textdomain@@Base+0xc84>
    4e70:	mov	w8, wzr
    4e74:	mov	x26, xzr
    4e78:	mov	w21, #0x43                  	// #67
    4e7c:	cbz	w8, 4eb0 <libintl_textdomain@@Base+0xce4>
    4e80:	b	4ec4 <libintl_textdomain@@Base+0xcf8>
    4e84:	mov	x26, x0
    4e88:	cmn	x0, #0x1
    4e8c:	b.eq	4eb8 <libintl_textdomain@@Base+0xcec>  // b.none
    4e90:	ldur	x20, [x21, #-8]
    4e94:	mov	w8, wzr
    4e98:	mov	w21, #0x43                  	// #67
    4e9c:	cbz	w8, 4eb0 <libintl_textdomain@@Base+0xce4>
    4ea0:	b	4ec4 <libintl_textdomain@@Base+0xcf8>
    4ea4:	mov	w8, wzr
    4ea8:	mov	x26, xzr
    4eac:	cbnz	w8, 4ec4 <libintl_textdomain@@Base+0xcf8>
    4eb0:	cbnz	x26, 4ed0 <libintl_textdomain@@Base+0xd04>
    4eb4:	b	4d7c <libintl_textdomain@@Base+0xbb0>
    4eb8:	mov	w8, #0xf                   	// #15
    4ebc:	mov	w21, #0x43                  	// #67
    4ec0:	cbz	w8, 4eb0 <libintl_textdomain@@Base+0xce4>
    4ec4:	cmp	w8, #0xf
    4ec8:	b.eq	50bc <libintl_textdomain@@Base+0xef0>  // b.none
    4ecc:	b	5130 <libintl_textdomain@@Base+0xf64>
    4ed0:	cmn	x26, #0x1
    4ed4:	b.eq	50bc <libintl_textdomain@@Base+0xef0>  // b.none
    4ed8:	ldur	x10, [x29, #-120]
    4edc:	cbz	x10, 4f58 <libintl_textdomain@@Base+0xd8c>
    4ee0:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    4ee4:	ldr	x8, [x8, #4032]
    4ee8:	ldr	x9, [x10]
    4eec:	ldur	x27, [x29, #-80]
    4ef0:	ldur	w28, [x29, #-92]
    4ef4:	ldr	w8, [x8]
    4ef8:	str	x20, [x9, #32]
    4efc:	str	w8, [x9, #24]
    4f00:	ldr	x8, [x10]
    4f04:	str	x26, [x8, #40]
    4f08:	ldur	x8, [x29, #-8]
    4f0c:	ldr	x9, [x10]
    4f10:	str	x8, [x9, #48]
    4f14:	str	w28, [x27]
    4f18:	adrp	x19, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    4f1c:	ldur	w8, [x29, #-88]
    4f20:	ldr	x19, [x19, #4064]
    4f24:	cbz	w8, 4f40 <libintl_textdomain@@Base+0xd74>
    4f28:	ldur	x3, [x29, #-8]
    4f2c:	ldur	x1, [x29, #-112]
    4f30:	mov	x0, x20
    4f34:	mov	x2, x26
    4f38:	bl	51fc <libintl_textdomain@@Base+0x1030>
    4f3c:	mov	x26, x0
    4f40:	cbz	x19, 5130 <libintl_textdomain@@Base+0xf64>
    4f44:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    4f48:	add	x0, x0, #0x2f0
    4f4c:	bl	20c0 <pthread_rwlock_unlock@plt>
    4f50:	cbz	w0, 5130 <libintl_textdomain@@Base+0xf64>
    4f54:	b	5154 <libintl_textdomain@@Base+0xf88>
    4f58:	mov	x0, x22
    4f5c:	bl	1d90 <strlen@plt>
    4f60:	ldur	x21, [x29, #-128]
    4f64:	mov	x23, x0
    4f68:	mov	x0, x21
    4f6c:	bl	1d90 <strlen@plt>
    4f70:	ldur	x24, [x29, #-136]
    4f74:	add	x8, x24, x23
    4f78:	add	x8, x8, x0
    4f7c:	add	x0, x8, #0x3b
    4f80:	bl	1ee0 <malloc@plt>
    4f84:	ldur	x27, [x29, #-80]
    4f88:	ldur	w28, [x29, #-92]
    4f8c:	cbz	x0, 4f14 <libintl_textdomain@@Base+0xd48>
    4f90:	add	x23, x23, #0x1
    4f94:	mov	x27, x24
    4f98:	add	x24, x0, #0x38
    4f9c:	mov	x19, x0
    4fa0:	mov	x0, x24
    4fa4:	mov	x1, x22
    4fa8:	mov	x2, x23
    4fac:	bl	1d40 <memcpy@plt>
    4fb0:	add	x22, x24, x23
    4fb4:	add	x2, x27, #0x1
    4fb8:	mov	x0, x22
    4fbc:	mov	x1, x25
    4fc0:	bl	1d40 <memcpy@plt>
    4fc4:	add	x8, x22, x27
    4fc8:	add	x0, x8, #0x1
    4fcc:	mov	x1, x21
    4fd0:	bl	2120 <strcpy@plt>
    4fd4:	ldur	w8, [x29, #-84]
    4fd8:	str	x22, [x19]
    4fdc:	str	x0, [x19, #16]
    4fe0:	adrp	x22, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    4fe4:	str	w8, [x19, #8]
    4fe8:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    4fec:	ldr	x8, [x8, #4032]
    4ff0:	ldur	x9, [x29, #-8]
    4ff4:	stp	x20, x26, [x19, #32]
    4ff8:	ldr	w8, [x8]
    4ffc:	str	x9, [x19, #48]
    5000:	str	w8, [x19, #24]
    5004:	ldr	x22, [x22, #4064]
    5008:	cbz	x22, 5074 <libintl_textdomain@@Base+0xea8>
    500c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5010:	add	x0, x0, #0x328
    5014:	bl	2010 <pthread_rwlock_wrlock@plt>
    5018:	cbnz	w0, 5154 <libintl_textdomain@@Base+0xf88>
    501c:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5020:	adrp	x2, 5000 <libintl_textdomain@@Base+0xe34>
    5024:	add	x1, x1, #0x3e0
    5028:	add	x2, x2, #0x17c
    502c:	mov	x0, x19
    5030:	bl	1f40 <tsearch@plt>
    5034:	ldur	x27, [x29, #-80]
    5038:	mov	x21, x0
    503c:	cbz	x22, 5094 <libintl_textdomain@@Base+0xec8>
    5040:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5044:	add	x0, x0, #0x328
    5048:	bl	20c0 <pthread_rwlock_unlock@plt>
    504c:	cbz	w0, 5094 <libintl_textdomain@@Base+0xec8>
    5050:	b	5154 <libintl_textdomain@@Base+0xf88>
    5054:	ldr	x26, [x8, #40]
    5058:	cbz	x24, 506c <libintl_textdomain@@Base+0xea0>
    505c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5060:	add	x0, x0, #0x2f0
    5064:	bl	20c0 <pthread_rwlock_unlock@plt>
    5068:	cbnz	w0, 5154 <libintl_textdomain@@Base+0xf88>
    506c:	str	w21, [x27]
    5070:	b	5130 <libintl_textdomain@@Base+0xf64>
    5074:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5078:	adrp	x2, 5000 <libintl_textdomain@@Base+0xe34>
    507c:	add	x1, x1, #0x3e0
    5080:	add	x2, x2, #0x17c
    5084:	mov	x0, x19
    5088:	bl	1f40 <tsearch@plt>
    508c:	ldur	x27, [x29, #-80]
    5090:	mov	x21, x0
    5094:	cbz	x21, 50a4 <libintl_textdomain@@Base+0xed8>
    5098:	ldr	x8, [x21]
    509c:	cmp	x8, x19
    50a0:	b.eq	4f14 <libintl_textdomain@@Base+0xd48>  // b.none
    50a4:	mov	x0, x19
    50a8:	bl	20a0 <free@plt>
    50ac:	b	4f14 <libintl_textdomain@@Base+0xd48>
    50b0:	mov	w8, #0xf                   	// #15
    50b4:	cmp	w8, #0xf
    50b8:	b.ne	4cd0 <libintl_textdomain@@Base+0xb04>  // b.any
    50bc:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    50c0:	ldr	x8, [x8, #4064]
    50c4:	cbz	x8, 50d8 <libintl_textdomain@@Base+0xf0c>
    50c8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    50cc:	add	x0, x0, #0x2f0
    50d0:	bl	20c0 <pthread_rwlock_unlock@plt>
    50d4:	cbnz	w0, 5154 <libintl_textdomain@@Base+0xf88>
    50d8:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    50dc:	ldr	w8, [x8, #1000]
    50e0:	ldur	x19, [x29, #-80]
    50e4:	ldp	w20, w23, [x29, #-92]
    50e8:	ldp	x21, x24, [x29, #-112]
    50ec:	cmp	w8, #0x1
    50f0:	b.eq	5120 <libintl_textdomain@@Base+0xf54>  // b.none
    50f4:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    50f8:	add	x0, x0, #0x47a
    50fc:	bl	21d0 <getenv@plt>
    5100:	cbz	x0, 5120 <libintl_textdomain@@Base+0xf54>
    5104:	ldrb	w8, [x0]
    5108:	cbz	w8, 5120 <libintl_textdomain@@Base+0xf54>
    510c:	mov	x1, x25
    5110:	mov	x2, x22
    5114:	mov	x3, x24
    5118:	mov	w4, w23
    511c:	bl	6d30 <libintl_set_relocation_prefix@@Base+0x480>
    5120:	cmp	x21, #0x1
    5124:	ccmp	w23, #0x0, #0x4, ne  // ne = any
    5128:	str	w20, [x19]
    512c:	csel	x26, x22, x24, eq  // eq = none
    5130:	mov	x0, x26
    5134:	mov	sp, x29
    5138:	ldp	x20, x19, [sp, #80]
    513c:	ldp	x22, x21, [sp, #64]
    5140:	ldp	x24, x23, [sp, #48]
    5144:	ldp	x26, x25, [sp, #32]
    5148:	ldp	x28, x27, [sp, #16]
    514c:	ldp	x29, x30, [sp], #96
    5150:	ret
    5154:	bl	2000 <abort@plt>
    5158:	cmp	w0, #0x6
    515c:	b.hi	5170 <libintl_textdomain@@Base+0xfa4>  // b.pmore
    5160:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    5164:	add	x8, x8, #0xd50
    5168:	ldr	x0, [x8, w0, sxtw #3]
    516c:	ret
    5170:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    5174:	add	x0, x0, #0x4f1
    5178:	ret
    517c:	stp	x29, x30, [sp, #-32]!
    5180:	stp	x20, x19, [sp, #16]
    5184:	ldr	x8, [x0, #32]
    5188:	mov	x19, x1
    518c:	mov	x20, x0
    5190:	add	x0, x0, #0x38
    5194:	mov	x29, sp
    5198:	cbnz	x8, 51a0 <libintl_textdomain@@Base+0xfd4>
    519c:	ldr	x0, [x0]
    51a0:	ldr	x8, [x19, #32]
    51a4:	add	x1, x19, #0x38
    51a8:	cbz	x8, 51b8 <libintl_textdomain@@Base+0xfec>
    51ac:	bl	2050 <strcmp@plt>
    51b0:	cbnz	w0, 51f0 <libintl_textdomain@@Base+0x1024>
    51b4:	b	51c4 <libintl_textdomain@@Base+0xff8>
    51b8:	ldr	x1, [x1]
    51bc:	bl	2050 <strcmp@plt>
    51c0:	cbnz	w0, 51f0 <libintl_textdomain@@Base+0x1024>
    51c4:	ldr	x0, [x20]
    51c8:	ldr	x1, [x19]
    51cc:	bl	2050 <strcmp@plt>
    51d0:	cbnz	w0, 51f0 <libintl_textdomain@@Base+0x1024>
    51d4:	ldr	x0, [x20, #16]
    51d8:	ldr	x1, [x19, #16]
    51dc:	bl	2050 <strcmp@plt>
    51e0:	cbnz	w0, 51f0 <libintl_textdomain@@Base+0x1024>
    51e4:	ldr	w8, [x20, #8]
    51e8:	ldr	w9, [x19, #8]
    51ec:	sub	w0, w8, w9
    51f0:	ldp	x20, x19, [sp, #16]
    51f4:	ldp	x29, x30, [sp], #32
    51f8:	ret
    51fc:	stp	x29, x30, [sp, #-48]!
    5200:	stp	x22, x21, [sp, #16]
    5204:	stp	x20, x19, [sp, #32]
    5208:	ldr	x21, [x0, #16]
    520c:	mov	x29, sp
    5210:	mov	x20, x3
    5214:	mov	x19, x2
    5218:	ldr	x0, [x21, #184]
    521c:	bl	5ba0 <libintl_textdomain@@Base+0x19d4>
    5220:	ldr	x8, [x21, #192]
    5224:	add	x21, x19, x20
    5228:	mov	x20, x19
    522c:	cmp	x0, x8
    5230:	csel	x8, x0, xzr, cc  // cc = lo, ul, last
    5234:	add	x22, x8, #0x1
    5238:	subs	x22, x22, #0x1
    523c:	b.eq	525c <libintl_textdomain@@Base+0x1090>  // b.none
    5240:	mov	x0, x20
    5244:	bl	1d90 <strlen@plt>
    5248:	add	x8, x20, x0
    524c:	add	x20, x8, #0x1
    5250:	cmp	x20, x21
    5254:	b.cc	5238 <libintl_textdomain@@Base+0x106c>  // b.lo, b.ul, b.last
    5258:	mov	x20, x19
    525c:	mov	x0, x20
    5260:	ldp	x20, x19, [sp, #32]
    5264:	ldp	x22, x21, [sp, #16]
    5268:	ldp	x29, x30, [sp], #48
    526c:	ret
    5270:	stp	x29, x30, [sp, #-48]!
    5274:	str	x21, [sp, #16]
    5278:	stp	x20, x19, [sp, #32]
    527c:	mov	x29, sp
    5280:	mov	x20, x1
    5284:	mov	w21, w0
    5288:	bl	6a9c <libintl_set_relocation_prefix@@Base+0x1ec>
    528c:	cbnz	x0, 52a0 <libintl_textdomain@@Base+0x10d4>
    5290:	mov	w0, w21
    5294:	mov	x1, x20
    5298:	bl	6c3c <libintl_set_relocation_prefix@@Base+0x38c>
    529c:	cbz	x0, 52f4 <libintl_textdomain@@Base+0x1128>
    52a0:	mov	x19, x0
    52a4:	mov	w20, wzr
    52a8:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    52ac:	add	x1, x1, #0x4d4
    52b0:	mov	x0, x19
    52b4:	bl	2050 <strcmp@plt>
    52b8:	cbz	w0, 52e0 <libintl_textdomain@@Base+0x1114>
    52bc:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    52c0:	add	x0, x0, #0x4f8
    52c4:	bl	21d0 <getenv@plt>
    52c8:	cbz	x0, 52d4 <libintl_textdomain@@Base+0x1108>
    52cc:	ldrb	w8, [x0]
    52d0:	cbnz	w8, 52e4 <libintl_textdomain@@Base+0x1118>
    52d4:	cbz	w20, 52e0 <libintl_textdomain@@Base+0x1114>
    52d8:	bl	6a94 <libintl_set_relocation_prefix@@Base+0x1e4>
    52dc:	cbnz	x0, 52e4 <libintl_textdomain@@Base+0x1118>
    52e0:	mov	x0, x19
    52e4:	ldp	x20, x19, [sp, #32]
    52e8:	ldr	x21, [sp, #16]
    52ec:	ldp	x29, x30, [sp], #48
    52f0:	ret
    52f4:	mov	w20, #0x1                   	// #1
    52f8:	bl	6cb8 <libintl_set_relocation_prefix@@Base+0x408>
    52fc:	mov	x19, x0
    5300:	b	52a8 <libintl_textdomain@@Base+0x10dc>
    5304:	stp	x29, x30, [sp, #-96]!
    5308:	stp	x28, x27, [sp, #16]
    530c:	stp	x26, x25, [sp, #32]
    5310:	stp	x24, x23, [sp, #48]
    5314:	stp	x22, x21, [sp, #64]
    5318:	stp	x20, x19, [sp, #80]
    531c:	mov	x29, sp
    5320:	sub	sp, sp, #0x70
    5324:	ldr	w8, [x0, #8]
    5328:	mov	x25, x4
    532c:	mov	w21, w3
    5330:	mov	x19, x0
    5334:	cmp	w8, #0x0
    5338:	mov	x20, x1
    533c:	stur	x2, [x29, #-40]
    5340:	b.le	5350 <libintl_textdomain@@Base+0x1184>
    5344:	ldr	x28, [x19, #16]
    5348:	cbnz	x28, 5364 <libintl_textdomain@@Base+0x1198>
    534c:	b	5684 <libintl_textdomain@@Base+0x14b8>
    5350:	mov	x0, x19
    5354:	mov	x1, x20
    5358:	bl	2a00 <libintl_gettext@@Base+0x2f0>
    535c:	ldr	x28, [x19, #16]
    5360:	cbz	x28, 5684 <libintl_textdomain@@Base+0x14b8>
    5364:	ldr	x8, [x28, #96]
    5368:	ldr	w22, [x28, #40]
    536c:	stur	w21, [x29, #-92]
    5370:	stur	x20, [x29, #-88]
    5374:	stur	x19, [x29, #-104]
    5378:	stur	x22, [x29, #-72]
    537c:	cbz	x8, 54c4 <libintl_textdomain@@Base+0x12f8>
    5380:	ldur	x19, [x29, #-40]
    5384:	stur	x25, [x29, #-112]
    5388:	mov	x0, x19
    538c:	bl	1d90 <strlen@plt>
    5390:	mov	x20, x0
    5394:	mov	x0, x19
    5398:	bl	29bc <libintl_gettext@@Base+0x2ac>
    539c:	ldr	w8, [x28, #88]
    53a0:	ldr	w19, [x28, #104]
    53a4:	ldr	x26, [x28, #96]
    53a8:	udiv	w9, w0, w8
    53ac:	sub	w10, w8, #0x2
    53b0:	msub	w21, w9, w8, w0
    53b4:	udiv	w9, w0, w10
    53b8:	msub	w9, w9, w10, w0
    53bc:	add	w9, w9, #0x1
    53c0:	sub	w25, w8, w9
    53c4:	and	x10, x20, #0xffffffff
    53c8:	neg	w8, w25
    53cc:	stp	x10, x20, [x29, #-64]
    53d0:	stp	w8, w9, [x29, #-48]
    53d4:	b	53f0 <libintl_textdomain@@Base+0x1224>
    53d8:	ldp	w10, w9, [x29, #-48]
    53dc:	cmp	w21, w25
    53e0:	mov	w8, wzr
    53e4:	csel	w9, w9, w10, cc  // cc = lo, ul, last
    53e8:	add	w21, w9, w21
    53ec:	cbnz	w8, 54b0 <libintl_textdomain@@Base+0x12e4>
    53f0:	ldr	w0, [x26, w21, uxtw #2]
    53f4:	cbz	w19, 53fc <libintl_textdomain@@Base+0x1230>
    53f8:	bl	5af4 <libintl_textdomain@@Base+0x1928>
    53fc:	cbz	w0, 5468 <libintl_textdomain@@Base+0x129c>
    5400:	sub	w24, w0, #0x1
    5404:	cmp	w24, w22
    5408:	b.cs	5470 <libintl_textdomain@@Base+0x12a4>  // b.hs, b.nlast
    540c:	ldr	x23, [x28, #48]
    5410:	mov	w27, w24
    5414:	lsl	x8, x27, #3
    5418:	ldr	w20, [x28, #24]
    541c:	ldr	w0, [x23, x8]
    5420:	cbz	w20, 5428 <libintl_textdomain@@Base+0x125c>
    5424:	bl	5af4 <libintl_textdomain@@Base+0x1928>
    5428:	ldur	x8, [x29, #-56]
    542c:	cmp	w0, w8
    5430:	b.cc	53d8 <libintl_textdomain@@Base+0x120c>  // b.lo, b.ul, b.last
    5434:	add	x8, x23, x27, lsl #3
    5438:	mov	x22, x28
    543c:	ldr	x28, [x28]
    5440:	ldr	w0, [x8, #4]
    5444:	cbz	w20, 544c <libintl_textdomain@@Base+0x1280>
    5448:	bl	5af4 <libintl_textdomain@@Base+0x1928>
    544c:	add	x1, x28, w0, uxtw
    5450:	ldur	x0, [x29, #-40]
    5454:	bl	2050 <strcmp@plt>
    5458:	mov	x28, x22
    545c:	ldur	x22, [x29, #-72]
    5460:	cbnz	w0, 53d8 <libintl_textdomain@@Base+0x120c>
    5464:	b	54a0 <libintl_textdomain@@Base+0x12d4>
    5468:	mov	w8, #0x1                   	// #1
    546c:	b	53ec <libintl_textdomain@@Base+0x1220>
    5470:	ldr	x8, [x28, #72]
    5474:	sub	w9, w24, w22
    5478:	lsl	x10, x9, #4
    547c:	ldur	x11, [x29, #-64]
    5480:	ldr	x10, [x8, x10]
    5484:	cmp	x10, x11
    5488:	b.ls	53d8 <libintl_textdomain@@Base+0x120c>  // b.plast
    548c:	add	x8, x8, x9, lsl #4
    5490:	ldr	x1, [x8, #8]
    5494:	ldur	x0, [x29, #-40]
    5498:	bl	2050 <strcmp@plt>
    549c:	cbnz	w0, 53d8 <libintl_textdomain@@Base+0x120c>
    54a0:	mov	w8, w24
    54a4:	stur	x8, [x29, #-80]
    54a8:	mov	w8, #0x4                   	// #4
    54ac:	b	53ec <libintl_textdomain@@Base+0x1220>
    54b0:	cmp	w8, #0x4
    54b4:	b.ne	5684 <libintl_textdomain@@Base+0x14b8>  // b.any
    54b8:	ldur	x25, [x29, #-112]
    54bc:	ldur	x23, [x29, #-80]
    54c0:	b	5534 <libintl_textdomain@@Base+0x1368>
    54c4:	cbz	w22, 5678 <libintl_textdomain@@Base+0x14ac>
    54c8:	ldr	x20, [x28]
    54cc:	ldr	w21, [x28, #24]
    54d0:	mov	x24, x22
    54d4:	ldr	x22, [x28, #48]
    54d8:	mov	x19, xzr
    54dc:	add	x8, x19, x24
    54e0:	lsr	x23, x8, #1
    54e4:	add	x8, x22, x23, lsl #3
    54e8:	ldr	w0, [x8, #4]
    54ec:	cbz	w21, 54f4 <libintl_textdomain@@Base+0x1328>
    54f0:	bl	5af4 <libintl_textdomain@@Base+0x1928>
    54f4:	add	x1, x20, w0, uxtw
    54f8:	ldur	x0, [x29, #-40]
    54fc:	bl	2050 <strcmp@plt>
    5500:	cmp	w0, #0x0
    5504:	cset	w8, eq  // eq = none
    5508:	lsl	w8, w8, #2
    550c:	csel	x24, x23, x24, lt  // lt = tstop
    5510:	csel	w8, wzr, w8, lt  // lt = tstop
    5514:	csinc	x19, x19, x23, le
    5518:	cbnz	w8, 5528 <libintl_textdomain@@Base+0x135c>
    551c:	cmp	x19, x24
    5520:	b.cc	54dc <libintl_textdomain@@Base+0x1310>  // b.lo, b.ul, b.last
    5524:	mov	w8, #0x1                   	// #1
    5528:	ldur	x22, [x29, #-72]
    552c:	cmp	w8, #0x4
    5530:	b.ne	5684 <libintl_textdomain@@Base+0x14b8>  // b.any
    5534:	subs	x8, x23, x22
    5538:	stur	x23, [x29, #-80]
    553c:	b.cs	558c <libintl_textdomain@@Base+0x13c0>  // b.hs, b.nlast
    5540:	ldr	x21, [x28, #56]
    5544:	ldr	x20, [x28]
    5548:	ldr	w19, [x28, #24]
    554c:	ldur	x22, [x29, #-88]
    5550:	add	x8, x21, x23, lsl #3
    5554:	ldr	w0, [x8, #4]
    5558:	cbz	w19, 5560 <libintl_textdomain@@Base+0x1394>
    555c:	bl	5af4 <libintl_textdomain@@Base+0x1928>
    5560:	lsl	x8, x23, #3
    5564:	ldr	w8, [x21, x8]
    5568:	add	x26, x20, w0, uxtw
    556c:	cbz	w19, 557c <libintl_textdomain@@Base+0x13b0>
    5570:	mov	w0, w8
    5574:	bl	5af4 <libintl_textdomain@@Base+0x1928>
    5578:	mov	w8, w0
    557c:	add	w19, w8, #0x1
    5580:	ldur	w8, [x29, #-92]
    5584:	cbnz	w8, 55a4 <libintl_textdomain@@Base+0x13d8>
    5588:	b	566c <libintl_textdomain@@Base+0x14a0>
    558c:	ldr	x9, [x28, #80]
    5590:	ldur	x22, [x29, #-88]
    5594:	add	x8, x9, x8, lsl #4
    5598:	ldp	x19, x26, [x8]
    559c:	ldur	w8, [x29, #-92]
    55a0:	cbz	w8, 566c <libintl_textdomain@@Base+0x14a0>
    55a4:	mov	x0, x22
    55a8:	bl	5afc <libintl_textdomain@@Base+0x1930>
    55ac:	adrp	x27, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    55b0:	ldr	x27, [x27, #4064]
    55b4:	mov	x22, x0
    55b8:	cbz	x27, 55c8 <libintl_textdomain@@Base+0x13fc>
    55bc:	add	x0, x28, #0x80
    55c0:	bl	1dc0 <pthread_rwlock_rdlock@plt>
    55c4:	cbnz	w0, 5af0 <libintl_textdomain@@Base+0x1924>
    55c8:	ldr	x8, [x28, #120]
    55cc:	add	x20, x8, #0x1
    55d0:	add	x8, x8, x8, lsl #1
    55d4:	lsl	x8, x8, #3
    55d8:	sub	x20, x20, #0x1
    55dc:	cbz	x20, 560c <libintl_textdomain@@Base+0x1440>
    55e0:	ldr	x21, [x28, #112]
    55e4:	mov	x1, x22
    55e8:	sub	x23, x8, #0x18
    55ec:	add	x9, x21, x8
    55f0:	ldur	x0, [x9, #-24]
    55f4:	bl	2050 <strcmp@plt>
    55f8:	mov	x8, x23
    55fc:	cbnz	w0, 55d8 <libintl_textdomain@@Base+0x140c>
    5600:	add	x24, x21, x23
    5604:	cbnz	x27, 5614 <libintl_textdomain@@Base+0x1448>
    5608:	b	5620 <libintl_textdomain@@Base+0x1454>
    560c:	mov	x24, xzr
    5610:	cbz	x27, 5620 <libintl_textdomain@@Base+0x1454>
    5614:	add	x0, x28, #0x80
    5618:	bl	20c0 <pthread_rwlock_unlock@plt>
    561c:	cbnz	w0, 5af0 <libintl_textdomain@@Base+0x1924>
    5620:	cbz	x24, 56ac <libintl_textdomain@@Base+0x14e0>
    5624:	mov	x20, xzr
    5628:	ldr	x8, [x24, #8]
    562c:	cmn	x8, #0x1
    5630:	b.eq	5664 <libintl_textdomain@@Base+0x1498>  // b.none
    5634:	ldr	x8, [x24, #16]
    5638:	cbz	x8, 5a40 <libintl_textdomain@@Base+0x1874>
    563c:	ldr	x8, [x24, #16]
    5640:	cmn	x8, #0x1
    5644:	b.eq	5a84 <libintl_textdomain@@Base+0x18b8>  // b.none
    5648:	ldur	x9, [x29, #-80]
    564c:	ldr	x8, [x8, x9, lsl #3]
    5650:	cbz	x8, 5700 <libintl_textdomain@@Base+0x1534>
    5654:	ldur	x19, [x29, #-80]
    5658:	ldr	x8, [x24, #16]
    565c:	ldr	x26, [x8, x19, lsl #3]
    5660:	ldr	x19, [x26], #8
    5664:	mov	w8, wzr
    5668:	cbnz	w8, 5688 <libintl_textdomain@@Base+0x14bc>
    566c:	str	x19, [x25]
    5670:	mov	x20, x26
    5674:	b	5688 <libintl_textdomain@@Base+0x14bc>
    5678:	mov	w8, #0x1                   	// #1
    567c:	cmp	w8, #0x4
    5680:	b.eq	5534 <libintl_textdomain@@Base+0x1368>  // b.none
    5684:	mov	x20, xzr
    5688:	mov	x0, x20
    568c:	mov	sp, x29
    5690:	ldp	x20, x19, [sp, #80]
    5694:	ldp	x22, x21, [sp, #64]
    5698:	ldp	x24, x23, [sp, #48]
    569c:	ldp	x26, x25, [sp, #32]
    56a0:	ldp	x28, x27, [sp, #16]
    56a4:	ldp	x29, x30, [sp], #96
    56a8:	ret
    56ac:	cbz	x27, 56bc <libintl_textdomain@@Base+0x14f0>
    56b0:	add	x0, x28, #0x80
    56b4:	bl	2010 <pthread_rwlock_wrlock@plt>
    56b8:	cbnz	w0, 5af0 <libintl_textdomain@@Base+0x1924>
    56bc:	ldr	x23, [x28, #120]
    56c0:	add	x8, x23, x23, lsl #1
    56c4:	add	x20, x23, #0x1
    56c8:	lsl	x8, x8, #3
    56cc:	sub	x20, x20, #0x1
    56d0:	cbz	x20, 589c <libintl_textdomain@@Base+0x16d0>
    56d4:	ldr	x21, [x28, #112]
    56d8:	mov	x1, x22
    56dc:	sub	x24, x8, #0x18
    56e0:	add	x9, x21, x8
    56e4:	ldur	x0, [x9, #-24]
    56e8:	bl	2050 <strcmp@plt>
    56ec:	mov	x8, x24
    56f0:	cbnz	w0, 56cc <libintl_textdomain@@Base+0x1500>
    56f4:	mov	x20, xzr
    56f8:	add	x24, x21, x24
    56fc:	b	5a2c <libintl_textdomain@@Base+0x1860>
    5700:	cbz	x27, 5714 <libintl_textdomain@@Base+0x1548>
    5704:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5708:	add	x0, x0, #0x3f0
    570c:	bl	21e0 <pthread_mutex_lock@plt>
    5710:	cbnz	w0, 5af0 <libintl_textdomain@@Base+0x1924>
    5714:	adrp	x23, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5718:	ldr	x8, [x23, #1056]
    571c:	mov	w22, wzr
    5720:	mov	x21, xzr
    5724:	adrp	x27, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5728:	add	x28, x8, #0x8
    572c:	b	5760 <libintl_textdomain@@Base+0x1594>
    5730:	stur	x8, [x29, #-32]
    5734:	ldr	x0, [x24, #8]
    5738:	sub	x1, x29, #0x8
    573c:	sub	x2, x29, #0x10
    5740:	sub	x3, x29, #0x18
    5744:	sub	x4, x29, #0x20
    5748:	bl	2060 <iconv@plt>
    574c:	cmn	x0, #0x1
    5750:	b.eq	57f8 <libintl_textdomain@@Base+0x162c>  // b.none
    5754:	ldur	x28, [x29, #-24]
    5758:	mov	w8, #0x1f                  	// #31
    575c:	cbnz	w8, 5830 <libintl_textdomain@@Base+0x1664>
    5760:	ldr	x8, [x27, #1064]
    5764:	stp	x19, x26, [x29, #-16]
    5768:	stur	x28, [x29, #-24]
    576c:	subs	x8, x8, #0x8
    5770:	b.cs	5730 <libintl_textdomain@@Base+0x1564>  // b.hs, b.nlast
    5774:	cmp	w22, #0x1
    5778:	b.lt	57b0 <libintl_textdomain@@Base+0x15e4>  // b.tstop
    577c:	add	w22, w22, #0x1
    5780:	mov	w8, #0xff0                 	// #4080
    5784:	mul	w8, w22, w8
    5788:	sxtw	x1, w8
    578c:	mov	x0, x21
    5790:	str	x1, [x27, #1064]
    5794:	bl	1fb0 <realloc@plt>
    5798:	cbz	x0, 57c8 <libintl_textdomain@@Base+0x15fc>
    579c:	mov	w8, wzr
    57a0:	add	x28, x0, #0x8
    57a4:	mov	x21, x0
    57a8:	str	x0, [x23, #1056]
    57ac:	b	575c <libintl_textdomain@@Base+0x1590>
    57b0:	mov	w8, #0xff0                 	// #4080
    57b4:	mov	w0, #0xff0                 	// #4080
    57b8:	str	x8, [x27, #1064]
    57bc:	bl	1ee0 <malloc@plt>
    57c0:	mov	w22, #0x1                   	// #1
    57c4:	cbnz	x0, 579c <libintl_textdomain@@Base+0x15d0>
    57c8:	str	xzr, [x23, #1056]
    57cc:	str	xzr, [x27, #1064]
    57d0:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    57d4:	ldr	x8, [x8, #4064]
    57d8:	cbz	x8, 57ec <libintl_textdomain@@Base+0x1620>
    57dc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    57e0:	add	x0, x0, #0x3f0
    57e4:	bl	21f0 <pthread_mutex_unlock@plt>
    57e8:	cbnz	w0, 5af0 <libintl_textdomain@@Base+0x1924>
    57ec:	mov	x20, #0xffffffffffffffff    	// #-1
    57f0:	mov	w8, #0x1                   	// #1
    57f4:	b	575c <libintl_textdomain@@Base+0x1590>
    57f8:	bl	21c0 <__errno_location@plt>
    57fc:	ldr	w8, [x0]
    5800:	cmp	w8, #0x7
    5804:	b.eq	5774 <libintl_textdomain@@Base+0x15a8>  // b.none
    5808:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    580c:	ldr	x8, [x8, #4064]
    5810:	cbz	x8, 5824 <libintl_textdomain@@Base+0x1658>
    5814:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5818:	add	x0, x0, #0x3f0
    581c:	bl	21f0 <pthread_mutex_unlock@plt>
    5820:	cbnz	w0, 5af0 <libintl_textdomain@@Base+0x1924>
    5824:	mov	x20, xzr
    5828:	mov	w8, #0x1                   	// #1
    582c:	b	575c <libintl_textdomain@@Base+0x1590>
    5830:	cmp	w8, #0x1f
    5834:	b.ne	5668 <libintl_textdomain@@Base+0x149c>  // b.any
    5838:	ldr	x8, [x23, #1056]
    583c:	ldur	x19, [x29, #-80]
    5840:	sub	x9, x28, x8
    5844:	sub	x9, x9, #0x8
    5848:	str	x9, [x8]
    584c:	ldr	x8, [x23, #1056]
    5850:	ldr	x9, [x24, #16]
    5854:	str	x8, [x9, x19, lsl #3]
    5858:	ldr	x8, [x23, #1056]
    585c:	ldr	x9, [x27, #1064]
    5860:	sub	x8, x8, x28
    5864:	add	x8, x9, x8
    5868:	and	x9, x8, #0x7
    586c:	and	x8, x8, #0xfffffffffffffff8
    5870:	add	x9, x28, x9
    5874:	str	x9, [x23, #1056]
    5878:	str	x8, [x27, #1064]
    587c:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    5880:	ldr	x8, [x8, #4064]
    5884:	cbz	x8, 5658 <libintl_textdomain@@Base+0x148c>
    5888:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    588c:	add	x0, x0, #0x3f0
    5890:	bl	21f0 <pthread_mutex_unlock@plt>
    5894:	cbz	w0, 5658 <libintl_textdomain@@Base+0x148c>
    5898:	b	5af0 <libintl_textdomain@@Base+0x1924>
    589c:	ldr	x0, [x28, #112]
    58a0:	cbz	x0, 58b8 <libintl_textdomain@@Base+0x16ec>
    58a4:	mov	w8, #0x18                  	// #24
    58a8:	orr	x9, xzr, #0x18
    58ac:	madd	x1, x23, x8, x9
    58b0:	bl	1fb0 <realloc@plt>
    58b4:	b	58c8 <libintl_textdomain@@Base+0x16fc>
    58b8:	mov	w8, #0x18                  	// #24
    58bc:	orr	x9, xzr, #0x18
    58c0:	madd	x0, x23, x8, x9
    58c4:	bl	1ee0 <malloc@plt>
    58c8:	mov	x21, x0
    58cc:	stur	x25, [x29, #-112]
    58d0:	cbz	x0, 5a90 <libintl_textdomain@@Base+0x18c4>
    58d4:	mov	x0, x22
    58d8:	str	x21, [x28, #112]
    58dc:	bl	1fc0 <strdup@plt>
    58e0:	cbz	x0, 5a90 <libintl_textdomain@@Base+0x18c4>
    58e4:	mov	w8, #0x18                  	// #24
    58e8:	madd	x24, x23, x8, x21
    58ec:	mov	x22, x0
    58f0:	str	x0, [x24]
    58f4:	ldur	x0, [x29, #-104]
    58f8:	ldur	x1, [x29, #-88]
    58fc:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    5900:	mov	x8, #0xffffffffffffffff    	// #-1
    5904:	mov	x25, x24
    5908:	add	x2, x2, #0x49f
    590c:	sub	x4, x29, #0x8
    5910:	mov	w3, wzr
    5914:	str	x8, [x25, #8]!
    5918:	bl	5304 <libintl_textdomain@@Base+0x1138>
    591c:	cbz	x0, 59fc <libintl_textdomain@@Base+0x1830>
    5920:	cmn	x0, #0x1
    5924:	b.eq	5ac4 <libintl_textdomain@@Base+0x18f8>  // b.none
    5928:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    592c:	add	x1, x1, #0x493
    5930:	bl	2180 <strstr@plt>
    5934:	cbz	x0, 59fc <libintl_textdomain@@Base+0x1830>
    5938:	stur	x21, [x29, #-40]
    593c:	add	x21, x0, #0x8
    5940:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    5944:	add	x1, x1, #0x49c
    5948:	mov	x0, x21
    594c:	bl	21b0 <strcspn@plt>
    5950:	add	x8, x0, #0x10
    5954:	and	x8, x8, #0xfffffffffffffff0
    5958:	mov	x9, sp
    595c:	sub	x20, x9, x8
    5960:	mov	x27, x0
    5964:	mov	sp, x20
    5968:	mov	x0, x20
    596c:	mov	x1, x21
    5970:	mov	x2, x27
    5974:	bl	1d40 <memcpy@plt>
    5978:	mov	w1, #0x2f                  	// #47
    597c:	mov	x0, x22
    5980:	strb	wzr, [x20, x27]
    5984:	bl	20e0 <strchr@plt>
    5988:	cbnz	x0, 59e8 <libintl_textdomain@@Base+0x181c>
    598c:	mov	x0, x22
    5990:	bl	1d90 <strlen@plt>
    5994:	add	x9, x0, #0x1a
    5998:	mov	x8, sp
    599c:	and	x9, x9, #0xfffffffffffffff0
    59a0:	mov	x27, x20
    59a4:	sub	x20, x8, x9
    59a8:	mov	x21, x0
    59ac:	mov	sp, x20
    59b0:	mov	x0, x20
    59b4:	mov	x1, x22
    59b8:	mov	x2, x21
    59bc:	bl	1d40 <memcpy@plt>
    59c0:	adrp	x8, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    59c4:	add	x8, x8, #0x4a0
    59c8:	ldr	x8, [x8]
    59cc:	mov	w10, #0x494c                	// #18764
    59d0:	add	x9, x20, x21
    59d4:	movk	w10, #0x54, lsl #16
    59d8:	mov	x22, x20
    59dc:	mov	x20, x27
    59e0:	stur	w10, [x9, #7]
    59e4:	str	x8, [x9]
    59e8:	mov	x0, x22
    59ec:	mov	x1, x20
    59f0:	bl	2130 <iconv_open@plt>
    59f4:	ldur	x21, [x29, #-40]
    59f8:	str	x0, [x25]
    59fc:	mov	w9, #0x18                  	// #24
    5a00:	madd	x9, x23, x9, x21
    5a04:	str	xzr, [x9, #16]
    5a08:	ldr	x9, [x28, #120]
    5a0c:	mov	w8, wzr
    5a10:	mov	x20, xzr
    5a14:	add	x9, x9, #0x1
    5a18:	str	x9, [x28, #120]
    5a1c:	adrp	x27, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    5a20:	ldur	x25, [x29, #-112]
    5a24:	ldr	x27, [x27, #4064]
    5a28:	cbnz	w8, 5668 <libintl_textdomain@@Base+0x149c>
    5a2c:	cbz	x27, 5628 <libintl_textdomain@@Base+0x145c>
    5a30:	add	x0, x28, #0x80
    5a34:	bl	20c0 <pthread_rwlock_unlock@plt>
    5a38:	cbz	w0, 5628 <libintl_textdomain@@Base+0x145c>
    5a3c:	b	5af0 <libintl_textdomain@@Base+0x1924>
    5a40:	mov	x21, x25
    5a44:	cbz	x27, 5a58 <libintl_textdomain@@Base+0x188c>
    5a48:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5a4c:	add	x0, x0, #0x3f0
    5a50:	bl	21e0 <pthread_mutex_lock@plt>
    5a54:	cbnz	w0, 5af0 <libintl_textdomain@@Base+0x1924>
    5a58:	ldr	x8, [x24, #16]
    5a5c:	cbz	x8, 5a98 <libintl_textdomain@@Base+0x18cc>
    5a60:	adrp	x27, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    5a64:	ldr	x27, [x27, #4064]
    5a68:	mov	x25, x21
    5a6c:	cbz	x27, 563c <libintl_textdomain@@Base+0x1470>
    5a70:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5a74:	add	x0, x0, #0x3f0
    5a78:	bl	21f0 <pthread_mutex_unlock@plt>
    5a7c:	cbz	w0, 563c <libintl_textdomain@@Base+0x1470>
    5a80:	b	5af0 <libintl_textdomain@@Base+0x1924>
    5a84:	mov	x20, #0xffffffffffffffff    	// #-1
    5a88:	mov	w8, #0x1                   	// #1
    5a8c:	b	5668 <libintl_textdomain@@Base+0x149c>
    5a90:	mov	x24, xzr
    5a94:	b	5acc <libintl_textdomain@@Base+0x1900>
    5a98:	ldr	w8, [x28, #64]
    5a9c:	ldur	x9, [x29, #-72]
    5aa0:	mov	w1, #0x8                   	// #8
    5aa4:	add	w0, w8, w9
    5aa8:	bl	1f70 <calloc@plt>
    5aac:	mov	x25, x21
    5ab0:	str	x0, [x24, #16]
    5ab4:	cbnz	x0, 5714 <libintl_textdomain@@Base+0x1548>
    5ab8:	mov	x8, #0xffffffffffffffff    	// #-1
    5abc:	str	x8, [x24, #16]
    5ac0:	b	5a60 <libintl_textdomain@@Base+0x1894>
    5ac4:	mov	x0, x22
    5ac8:	bl	20a0 <free@plt>
    5acc:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    5ad0:	ldr	x8, [x8, #4064]
    5ad4:	cbz	x8, 5ae4 <libintl_textdomain@@Base+0x1918>
    5ad8:	add	x0, x28, #0x80
    5adc:	bl	20c0 <pthread_rwlock_unlock@plt>
    5ae0:	cbnz	w0, 5af0 <libintl_textdomain@@Base+0x1924>
    5ae4:	mov	x20, #0xffffffffffffffff    	// #-1
    5ae8:	mov	w8, #0x1                   	// #1
    5aec:	b	5a1c <libintl_textdomain@@Base+0x1850>
    5af0:	bl	2000 <abort@plt>
    5af4:	rev	w0, w0
    5af8:	ret
    5afc:	stp	x29, x30, [sp, #-64]!
    5b00:	str	x23, [sp, #16]
    5b04:	stp	x22, x21, [sp, #32]
    5b08:	stp	x20, x19, [sp, #48]
    5b0c:	mov	x29, sp
    5b10:	cbz	x0, 5b1c <libintl_textdomain@@Base+0x1950>
    5b14:	ldr	x0, [x0, #16]
    5b18:	cbnz	x0, 5b8c <libintl_textdomain@@Base+0x19c0>
    5b1c:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5b20:	ldrb	w8, [x22, #1080]
    5b24:	adrp	x23, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    5b28:	tbnz	w8, #0, 5b80 <libintl_textdomain@@Base+0x19b4>
    5b2c:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    5b30:	add	x0, x0, #0x501
    5b34:	bl	21d0 <getenv@plt>
    5b38:	cbz	x0, 5b78 <libintl_textdomain@@Base+0x19ac>
    5b3c:	ldrb	w8, [x0]
    5b40:	mov	x19, x0
    5b44:	cbz	w8, 5b78 <libintl_textdomain@@Base+0x19ac>
    5b48:	mov	x0, x19
    5b4c:	bl	1d90 <strlen@plt>
    5b50:	add	x20, x0, #0x1
    5b54:	mov	x0, x20
    5b58:	bl	1ee0 <malloc@plt>
    5b5c:	mov	x21, x0
    5b60:	cbz	x0, 5b74 <libintl_textdomain@@Base+0x19a8>
    5b64:	mov	x0, x21
    5b68:	mov	x1, x19
    5b6c:	mov	x2, x20
    5b70:	bl	1d40 <memcpy@plt>
    5b74:	str	x21, [x23, #1072]
    5b78:	mov	w8, #0x1                   	// #1
    5b7c:	strb	w8, [x22, #1080]
    5b80:	ldr	x0, [x23, #1072]
    5b84:	cbnz	x0, 5b8c <libintl_textdomain@@Base+0x19c0>
    5b88:	bl	6778 <libintl_ngettext@@Base+0x968>
    5b8c:	ldp	x20, x19, [sp, #48]
    5b90:	ldp	x22, x21, [sp, #32]
    5b94:	ldr	x23, [sp, #16]
    5b98:	ldp	x29, x30, [sp], #64
    5b9c:	ret
    5ba0:	stp	x29, x30, [sp, #-48]!
    5ba4:	stp	x20, x19, [sp, #32]
    5ba8:	ldr	w8, [x0]
    5bac:	str	x21, [sp, #16]
    5bb0:	mov	x29, sp
    5bb4:	cmp	w8, #0x3
    5bb8:	b.hi	5cec <libintl_textdomain@@Base+0x1b20>  // b.pmore
    5bbc:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    5bc0:	add	x9, x9, #0x44a
    5bc4:	adr	x10, 5bdc <libintl_textdomain@@Base+0x1a10>
    5bc8:	ldrb	w11, [x9, x8]
    5bcc:	add	x10, x10, x11, lsl #2
    5bd0:	mov	x20, x0
    5bd4:	mov	x19, x1
    5bd8:	br	x10
    5bdc:	ldr	w8, [x20, #4]
    5be0:	cbz	w8, 5cf0 <libintl_textdomain@@Base+0x1b24>
    5be4:	cmp	w8, #0x1
    5be8:	b.ne	5cec <libintl_textdomain@@Base+0x1b20>  // b.any
    5bec:	ldr	x19, [x20, #8]
    5bf0:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5bf4:	ldr	x0, [x20, #8]
    5bf8:	mov	x1, x19
    5bfc:	bl	5ba0 <libintl_textdomain@@Base+0x19d4>
    5c00:	cmp	x0, #0x0
    5c04:	cset	w19, eq  // eq = none
    5c08:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5c0c:	ldr	x0, [x20, #8]
    5c10:	mov	x1, x19
    5c14:	bl	5ba0 <libintl_textdomain@@Base+0x19d4>
    5c18:	ldr	w8, [x20, #4]
    5c1c:	mov	x21, x0
    5c20:	cmp	w8, #0xe
    5c24:	b.eq	5c74 <libintl_textdomain@@Base+0x1aa8>  // b.none
    5c28:	cmp	w8, #0xf
    5c2c:	b.ne	5c98 <libintl_textdomain@@Base+0x1acc>  // b.any
    5c30:	cbz	x21, 5c78 <libintl_textdomain@@Base+0x1aac>
    5c34:	mov	w8, #0x1                   	// #1
    5c38:	mov	w19, #0x1                   	// #1
    5c3c:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5c40:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5c44:	ldr	x0, [x20, #8]!
    5c48:	mov	x1, x19
    5c4c:	bl	5ba0 <libintl_textdomain@@Base+0x19d4>
    5c50:	cmp	x0, #0x0
    5c54:	mov	w8, #0x8                   	// #8
    5c58:	mov	w9, #0x10                  	// #16
    5c5c:	csel	x8, x9, x8, eq  // eq = none
    5c60:	ldr	x0, [x20, x8]
    5c64:	mov	x1, x19
    5c68:	bl	5ba0 <libintl_textdomain@@Base+0x19d4>
    5c6c:	mov	x19, x0
    5c70:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5c74:	cbz	x21, 5ce0 <libintl_textdomain@@Base+0x1b14>
    5c78:	ldr	x0, [x20, #16]
    5c7c:	mov	x1, x19
    5c80:	bl	5ba0 <libintl_textdomain@@Base+0x19d4>
    5c84:	cmp	x0, #0x0
    5c88:	cset	w19, ne  // ne = any
    5c8c:	mov	w8, #0x1                   	// #1
    5c90:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5c94:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5c98:	ldr	x0, [x20, #16]
    5c9c:	mov	x1, x19
    5ca0:	bl	5ba0 <libintl_textdomain@@Base+0x19d4>
    5ca4:	ldr	w8, [x20, #4]
    5ca8:	sub	w8, w8, #0x3
    5cac:	cmp	w8, #0xa
    5cb0:	b.hi	5d04 <libintl_textdomain@@Base+0x1b38>  // b.pmore
    5cb4:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    5cb8:	add	x9, x9, #0x44e
    5cbc:	adr	x10, 5cd0 <libintl_textdomain@@Base+0x1b04>
    5cc0:	ldrb	w11, [x9, x8]
    5cc4:	add	x10, x10, x11, lsl #2
    5cc8:	mov	x19, x0
    5ccc:	br	x10
    5cd0:	mul	x19, x19, x21
    5cd4:	mov	w8, #0x1                   	// #1
    5cd8:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5cdc:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5ce0:	mov	x19, xzr
    5ce4:	mov	w8, #0x1                   	// #1
    5ce8:	tbnz	w8, #0, 5cf0 <libintl_textdomain@@Base+0x1b24>
    5cec:	mov	x19, xzr
    5cf0:	mov	x0, x19
    5cf4:	ldp	x20, x19, [sp, #32]
    5cf8:	ldr	x21, [sp, #16]
    5cfc:	ldp	x29, x30, [sp], #48
    5d00:	ret
    5d04:	mov	w8, wzr
    5d08:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5d0c:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5d10:	cbnz	x19, 5d1c <libintl_textdomain@@Base+0x1b50>
    5d14:	mov	w0, #0x8                   	// #8
    5d18:	bl	1da0 <raise@plt>
    5d1c:	udiv	x19, x21, x19
    5d20:	mov	w8, #0x1                   	// #1
    5d24:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5d28:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5d2c:	cbnz	x19, 5d38 <libintl_textdomain@@Base+0x1b6c>
    5d30:	mov	w0, #0x8                   	// #8
    5d34:	bl	1da0 <raise@plt>
    5d38:	udiv	x8, x21, x19
    5d3c:	msub	x19, x8, x19, x21
    5d40:	mov	w8, #0x1                   	// #1
    5d44:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5d48:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5d4c:	add	x19, x19, x21
    5d50:	mov	w8, #0x1                   	// #1
    5d54:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5d58:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5d5c:	sub	x19, x21, x19
    5d60:	mov	w8, #0x1                   	// #1
    5d64:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5d68:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5d6c:	cmp	x21, x19
    5d70:	cset	w19, cc  // cc = lo, ul, last
    5d74:	mov	w8, #0x1                   	// #1
    5d78:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5d7c:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5d80:	cmp	x21, x19
    5d84:	cset	w19, hi  // hi = pmore
    5d88:	mov	w8, #0x1                   	// #1
    5d8c:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5d90:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5d94:	cmp	x21, x19
    5d98:	cset	w19, ls  // ls = plast
    5d9c:	mov	w8, #0x1                   	// #1
    5da0:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5da4:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5da8:	cmp	x21, x19
    5dac:	cset	w19, cs  // cs = hs, nlast
    5db0:	mov	w8, #0x1                   	// #1
    5db4:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5db8:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5dbc:	cmp	x21, x19
    5dc0:	cset	w19, eq  // eq = none
    5dc4:	mov	w8, #0x1                   	// #1
    5dc8:	tbz	w8, #0, 5cec <libintl_textdomain@@Base+0x1b20>
    5dcc:	b	5cf0 <libintl_textdomain@@Base+0x1b24>
    5dd0:	cmp	x21, x19
    5dd4:	b	5c88 <libintl_textdomain@@Base+0x1abc>

0000000000005dd8 <libintl_dcngettext@@Base>:
    5dd8:	stp	x29, x30, [sp, #-16]!
    5ddc:	mov	w5, w4
    5de0:	mov	x4, x3
    5de4:	mov	w3, #0x1                   	// #1
    5de8:	mov	x29, sp
    5dec:	bl	49e8 <libintl_textdomain@@Base+0x81c>
    5df0:	ldp	x29, x30, [sp], #16
    5df4:	ret

0000000000005df8 <libintl_dngettext@@Base>:
    5df8:	stp	x29, x30, [sp, #-16]!
    5dfc:	mov	w4, #0x5                   	// #5
    5e00:	mov	x29, sp
    5e04:	bl	1f30 <libintl_dcngettext@plt>
    5e08:	ldp	x29, x30, [sp], #16
    5e0c:	ret

0000000000005e10 <libintl_ngettext@@Base>:
    5e10:	stp	x29, x30, [sp, #-16]!
    5e14:	mov	x3, x2
    5e18:	mov	x2, x1
    5e1c:	mov	x1, x0
    5e20:	mov	w4, #0x5                   	// #5
    5e24:	mov	x0, xzr
    5e28:	mov	x29, sp
    5e2c:	bl	1f30 <libintl_dcngettext@plt>
    5e30:	ldp	x29, x30, [sp], #16
    5e34:	ret
    5e38:	stp	x29, x30, [sp, #-96]!
    5e3c:	stp	x28, x27, [sp, #16]
    5e40:	stp	x26, x25, [sp, #32]
    5e44:	stp	x24, x23, [sp, #48]
    5e48:	stp	x22, x21, [sp, #64]
    5e4c:	stp	x20, x19, [sp, #80]
    5e50:	mov	x29, sp
    5e54:	sub	sp, sp, #0x810
    5e58:	mov	w27, #0x28c                 	// #652
    5e5c:	add	x8, sp, #0x30
    5e60:	adrp	x26, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    5e64:	mov	w25, #0x160                 	// #352
    5e68:	mov	x22, x0
    5e6c:	str	wzr, [sp, #44]
    5e70:	mov	w21, wzr
    5e74:	movk	w27, #0x102, lsl #16
    5e78:	stur	xzr, [x29, #-16]
    5e7c:	mov	w12, #0xfffffffe            	// #-2
    5e80:	str	x8, [sp, #32]
    5e84:	mov	w28, #0xc8                  	// #200
    5e88:	add	x26, x26, #0x58f
    5e8c:	movk	w25, #0x4bc, lsl #16
    5e90:	add	x20, sp, #0x670
    5e94:	add	x23, sp, #0x30
    5e98:	add	x19, sp, #0x670
    5e9c:	add	x8, x19, x28, lsl #1
    5ea0:	sub	x8, x8, #0x2
    5ea4:	cmp	x8, x20
    5ea8:	strh	w21, [x20]
    5eac:	b.hi	5f94 <libintl_ngettext@@Base+0x184>  // b.pmore
    5eb0:	lsr	x8, x28, #4
    5eb4:	cmp	x8, #0x270
    5eb8:	b.ls	5ec4 <libintl_ngettext@@Base+0xb4>  // b.plast
    5ebc:	mov	w8, #0x4                   	// #4
    5ec0:	b	5f90 <libintl_ngettext@@Base+0x180>
    5ec4:	sub	x8, x20, x19
    5ec8:	ubfx	x10, x28, #3, #60
    5ecc:	lsl	x9, x28, #1
    5ed0:	asr	x24, x8, #1
    5ed4:	cmp	x10, #0x271
    5ed8:	mov	w8, #0x2710                	// #10000
    5edc:	csel	x28, x9, x8, cc  // cc = lo, ul, last
    5ee0:	mov	w8, #0xa                   	// #10
    5ee4:	orr	x9, xzr, #0x7
    5ee8:	madd	x0, x28, x8, x9
    5eec:	str	w12, [sp, #28]
    5ef0:	bl	1ee0 <malloc@plt>
    5ef4:	cbz	x0, 6168 <libintl_ngettext@@Base+0x358>
    5ef8:	str	x22, [sp, #16]
    5efc:	add	x22, x24, #0x1
    5f00:	lsl	x2, x22, #1
    5f04:	mov	x1, x19
    5f08:	mov	x25, x0
    5f0c:	bl	1d40 <memcpy@plt>
    5f10:	lsl	x8, x28, #1
    5f14:	add	x8, x8, #0x7
    5f18:	ldr	x1, [sp, #32]
    5f1c:	and	x8, x8, #0xfffffffffffffff8
    5f20:	add	x26, x25, x8
    5f24:	lsl	x2, x22, #3
    5f28:	mov	x0, x26
    5f2c:	str	x28, [sp, #8]
    5f30:	bl	1d40 <memcpy@plt>
    5f34:	add	x8, sp, #0x670
    5f38:	cmp	x19, x8
    5f3c:	b.eq	5f48 <libintl_ngettext@@Base+0x138>  // b.none
    5f40:	mov	x0, x19
    5f44:	bl	20a0 <free@plt>
    5f48:	ldp	x28, x22, [sp, #8]
    5f4c:	ldr	w12, [sp, #28]
    5f50:	str	x26, [sp, #32]
    5f54:	mov	x19, x25
    5f58:	adrp	x26, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    5f5c:	mov	w25, #0x160                 	// #352
    5f60:	mov	w8, wzr
    5f64:	add	x26, x26, #0x58f
    5f68:	movk	w25, #0x4bc, lsl #16
    5f6c:	cbnz	w8, 5f90 <libintl_ngettext@@Base+0x180>
    5f70:	ldr	x8, [sp, #32]
    5f74:	add	x20, x19, x24, lsl #1
    5f78:	add	x23, x8, x24, lsl #3
    5f7c:	add	x8, x19, x28, lsl #1
    5f80:	sub	x8, x8, #0x2
    5f84:	cmp	x8, x20
    5f88:	mov	w8, #0x9                   	// #9
    5f8c:	csel	w8, wzr, w8, hi  // hi = pmore
    5f90:	cbnz	w8, 62ac <libintl_ngettext@@Base+0x49c>
    5f94:	cmp	w21, #0x9
    5f98:	b.eq	62a4 <libintl_ngettext@@Base+0x494>  // b.none
    5f9c:	lsr	x8, x27, x21
    5fa0:	sxtw	x24, w21
    5fa4:	tbnz	w8, #0, 6034 <libintl_ngettext@@Base+0x224>
    5fa8:	cmn	w12, #0x2
    5fac:	b.ne	5fc0 <libintl_ngettext@@Base+0x1b0>  // b.any
    5fb0:	sub	x0, x29, #0x10
    5fb4:	mov	x1, x22
    5fb8:	bl	631c <libintl_ngettext@@Base+0x50c>
    5fbc:	mov	w12, w0
    5fc0:	ldrsb	x8, [x26, x24]
    5fc4:	cmp	w12, #0x1
    5fc8:	b.lt	5fe4 <libintl_ngettext@@Base+0x1d4>  // b.tstop
    5fcc:	cmp	w12, #0x106
    5fd0:	b.hi	5ff0 <libintl_ngettext@@Base+0x1e0>  // b.pmore
    5fd4:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    5fd8:	add	x9, x9, #0x5aa
    5fdc:	ldrb	w9, [x9, w12, sxtw]
    5fe0:	b	5ff4 <libintl_ngettext@@Base+0x1e4>
    5fe4:	mov	w9, wzr
    5fe8:	mov	w12, wzr
    5fec:	b	5ff4 <libintl_ngettext@@Base+0x1e4>
    5ff0:	mov	w9, #0x2                   	// #2
    5ff4:	add	x8, x9, x8
    5ff8:	cmp	w8, #0x36
    5ffc:	b.hi	6034 <libintl_ngettext@@Base+0x224>  // b.pmore
    6000:	adrp	x10, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6004:	add	x10, x10, #0x6b1
    6008:	ldrsb	w10, [x10, x8]
    600c:	cmp	w9, w10
    6010:	b.ne	6034 <libintl_ngettext@@Base+0x224>  // b.any
    6014:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6018:	add	x9, x9, #0x6e8
    601c:	ldrb	w21, [x9, x8]
    6020:	orr	x8, x8, #0x1
    6024:	cmp	x8, #0x25
    6028:	b.ne	6180 <libintl_ngettext@@Base+0x370>  // b.any
    602c:	neg	w8, w21
    6030:	b	6050 <libintl_ngettext@@Base+0x240>
    6034:	mov	w8, #0xfd33                	// #64819
    6038:	movk	w8, #0x205, lsl #16
    603c:	lsr	x8, x8, x24
    6040:	tbnz	w8, #0, 6108 <libintl_ngettext@@Base+0x2f8>
    6044:	adrp	x8, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6048:	add	x8, x8, #0x71f
    604c:	ldrb	w8, [x8, x24]
    6050:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6054:	sxtw	x25, w8
    6058:	add	x9, x9, #0x73a
    605c:	ldrb	w21, [x9, x25]
    6060:	mov	w9, #0x1                   	// #1
    6064:	sub	w8, w8, #0x2
    6068:	cmp	w8, #0xb
    606c:	sub	x9, x9, x21
    6070:	ldr	x0, [x23, x9, lsl #3]
    6074:	b.hi	60a8 <libintl_ngettext@@Base+0x298>  // b.pmore
    6078:	adrp	x11, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    607c:	add	x11, x11, #0x510
    6080:	adr	x9, 6090 <libintl_ngettext@@Base+0x280>
    6084:	ldrb	w10, [x11, x8]
    6088:	add	x9, x9, x10, lsl #2
    608c:	br	x9
    6090:	ldur	w0, [x23, #-8]
    6094:	ldur	x1, [x23, #-16]
    6098:	ldr	x2, [x23]
    609c:	mov	w24, w12
    60a0:	bl	64c8 <libintl_ngettext@@Base+0x6b8>
    60a4:	mov	w12, w24
    60a8:	adrp	x8, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    60ac:	add	x8, x8, #0x748
    60b0:	ldrb	w8, [x8, x25]
    60b4:	sub	x23, x23, x21, lsl #3
    60b8:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    60bc:	sub	x20, x20, x21, lsl #1
    60c0:	str	x0, [x23, #8]!
    60c4:	sub	x8, x8, #0x10
    60c8:	add	x9, x9, #0x756
    60cc:	ldrsb	x9, [x9, x8]
    60d0:	ldrsh	x10, [x20]
    60d4:	add	x9, x10, x9
    60d8:	cmp	w9, #0x36
    60dc:	b.hi	613c <libintl_ngettext@@Base+0x32c>  // b.pmore
    60e0:	adrp	x11, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    60e4:	add	x11, x11, #0x6b1
    60e8:	ldrsb	w11, [x11, x9]
    60ec:	and	w10, w10, #0xffff
    60f0:	cmp	w10, w11, uxth
    60f4:	b.ne	613c <libintl_ngettext@@Base+0x32c>  // b.any
    60f8:	adrp	x8, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    60fc:	add	x8, x8, #0x6e8
    6100:	ldrb	w21, [x8, x9]
    6104:	b	6148 <libintl_ngettext@@Base+0x338>
    6108:	ldr	w8, [sp, #44]
    610c:	cmp	w8, #0x3
    6110:	b.eq	6158 <libintl_ngettext@@Base+0x348>  // b.none
    6114:	cbnz	w8, 61a8 <libintl_ngettext@@Base+0x398>
    6118:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    611c:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6120:	mov	w2, #0x5                   	// #5
    6124:	add	x0, x0, #0x75c
    6128:	add	x1, x1, #0x76a
    612c:	mov	w24, w12
    6130:	bl	2020 <dcgettext@plt>
    6134:	mov	w12, w24
    6138:	b	61a8 <libintl_ngettext@@Base+0x398>
    613c:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6140:	add	x9, x9, #0x759
    6144:	ldrsb	w21, [x9, x8]
    6148:	mov	w25, #0x160                 	// #352
    614c:	movk	w25, #0x4bc, lsl #16
    6150:	add	x20, x20, #0x2
    6154:	b	5e9c <libintl_ngettext@@Base+0x8c>
    6158:	cmp	w12, #0x0
    615c:	b.le	61a4 <libintl_ngettext@@Base+0x394>
    6160:	mov	w12, #0xfffffffe            	// #-2
    6164:	b	61a8 <libintl_ngettext@@Base+0x398>
    6168:	ldr	w12, [sp, #28]
    616c:	mov	w25, #0x160                 	// #352
    6170:	mov	w8, #0x4                   	// #4
    6174:	movk	w25, #0x4bc, lsl #16
    6178:	cbnz	w8, 5f90 <libintl_ngettext@@Base+0x180>
    617c:	b	5f70 <libintl_ngettext@@Base+0x160>
    6180:	ldr	w10, [sp, #44]
    6184:	ldur	x8, [x29, #-16]
    6188:	mov	w12, #0xfffffffe            	// #-2
    618c:	sub	w9, w10, #0x1
    6190:	cmp	w10, #0x0
    6194:	csel	w9, wzr, w9, eq  // eq = none
    6198:	str	x8, [x23, #8]!
    619c:	str	w9, [sp, #44]
    61a0:	b	6150 <libintl_ngettext@@Base+0x340>
    61a4:	cbz	w12, 62bc <libintl_ngettext@@Base+0x4ac>
    61a8:	add	x23, x23, #0x8
    61ac:	lsr	x8, x27, x21
    61b0:	tbnz	w8, #0, 61d8 <libintl_ngettext@@Base+0x3c8>
    61b4:	sxtw	x8, w21
    61b8:	lsr	x9, x25, x8
    61bc:	tbz	w9, #0, 61d8 <libintl_ngettext@@Base+0x3c8>
    61c0:	ldrsb	x8, [x26, x8]
    61c4:	adds	x8, x8, #0x1
    61c8:	b.ne	61d8 <libintl_ngettext@@Base+0x3c8>  // b.any
    61cc:	orr	x9, x8, #0x1
    61d0:	cmp	x9, #0x25
    61d4:	b.ne	61f4 <libintl_ngettext@@Base+0x3e4>  // b.any
    61d8:	cmp	x19, x20
    61dc:	b.eq	62bc <libintl_ngettext@@Base+0x4ac>  // b.none
    61e0:	ldrsh	w21, [x20, #-2]!
    61e4:	sub	x23, x23, #0x8
    61e8:	lsr	x8, x27, x21
    61ec:	tbz	w8, #0, 61b4 <libintl_ngettext@@Base+0x3a4>
    61f0:	b	61d8 <libintl_ngettext@@Base+0x3c8>
    61f4:	adrp	x10, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    61f8:	ldur	x9, [x29, #-16]
    61fc:	add	x10, x10, #0x6e8
    6200:	ldrb	w21, [x10, x8]
    6204:	mov	w8, #0x3                   	// #3
    6208:	str	x9, [x23]
    620c:	str	w8, [sp, #44]
    6210:	b	6150 <libintl_ngettext@@Base+0x340>
    6214:	ldr	x8, [x23]
    6218:	cbz	x8, 62bc <libintl_ngettext@@Base+0x4ac>
    621c:	str	x8, [x22, #8]
    6220:	b	60a8 <libintl_ngettext@@Base+0x298>
    6224:	ldur	x0, [x23, #-32]
    6228:	ldur	x1, [x23, #-16]
    622c:	ldr	x2, [x23]
    6230:	mov	w24, w12
    6234:	bl	6498 <libintl_ngettext@@Base+0x688>
    6238:	b	60a4 <libintl_ngettext@@Base+0x294>
    623c:	ldur	x1, [x23, #-16]
    6240:	ldr	x2, [x23]
    6244:	mov	w0, #0xf                   	// #15
    6248:	b	609c <libintl_ngettext@@Base+0x28c>
    624c:	ldur	x1, [x23, #-16]
    6250:	ldr	x2, [x23]
    6254:	mov	w0, #0xe                   	// #14
    6258:	b	609c <libintl_ngettext@@Base+0x28c>
    625c:	ldr	x0, [x23]
    6260:	mov	w24, w12
    6264:	bl	64f8 <libintl_ngettext@@Base+0x6e8>
    6268:	b	60a4 <libintl_ngettext@@Base+0x294>
    626c:	mov	w0, wzr
    6270:	mov	w24, w12
    6274:	bl	6524 <libintl_ngettext@@Base+0x714>
    6278:	b	60a4 <libintl_ngettext@@Base+0x294>
    627c:	mov	w0, #0x1                   	// #1
    6280:	mov	w24, w12
    6284:	bl	6524 <libintl_ngettext@@Base+0x714>
    6288:	cbz	x0, 60a4 <libintl_ngettext@@Base+0x294>
    628c:	ldr	x8, [x23]
    6290:	mov	w12, w24
    6294:	str	x8, [x0, #8]
    6298:	b	60a8 <libintl_ngettext@@Base+0x298>
    629c:	ldur	x0, [x23, #-8]
    62a0:	b	60a8 <libintl_ngettext@@Base+0x298>
    62a4:	mov	w20, wzr
    62a8:	b	62c0 <libintl_ngettext@@Base+0x4b0>
    62ac:	cmp	w8, #0x4
    62b0:	b.eq	62f8 <libintl_ngettext@@Base+0x4e8>  // b.none
    62b4:	cmp	w8, #0x9
    62b8:	b.ne	6318 <libintl_ngettext@@Base+0x508>  // b.any
    62bc:	mov	w20, #0x1                   	// #1
    62c0:	add	x8, sp, #0x670
    62c4:	cmp	x19, x8
    62c8:	b.eq	62d4 <libintl_ngettext@@Base+0x4c4>  // b.none
    62cc:	mov	x0, x19
    62d0:	bl	20a0 <free@plt>
    62d4:	mov	w0, w20
    62d8:	add	sp, sp, #0x810
    62dc:	ldp	x20, x19, [sp, #80]
    62e0:	ldp	x22, x21, [sp, #64]
    62e4:	ldp	x24, x23, [sp, #48]
    62e8:	ldp	x26, x25, [sp, #32]
    62ec:	ldp	x28, x27, [sp, #16]
    62f0:	ldp	x29, x30, [sp], #96
    62f4:	ret
    62f8:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    62fc:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6300:	add	x0, x0, #0x75c
    6304:	add	x1, x1, #0x777
    6308:	mov	w2, #0x5                   	// #5
    630c:	bl	2020 <dcgettext@plt>
    6310:	mov	w20, #0x2                   	// #2
    6314:	b	62c0 <libintl_ngettext@@Base+0x4b0>
    6318:	b	62d4 <libintl_ngettext@@Base+0x4c4>
    631c:	ldr	x9, [x1]
    6320:	mov	x8, x0
    6324:	add	x9, x9, #0x1
    6328:	ldurb	w0, [x9, #-1]
    632c:	cmp	w0, #0x9
    6330:	b.eq	6324 <libintl_ngettext@@Base+0x514>  // b.none
    6334:	cmp	w0, #0x20
    6338:	b.eq	6324 <libintl_ngettext@@Base+0x514>  // b.none
    633c:	cbnz	w0, 634c <libintl_ngettext@@Base+0x53c>
    6340:	sub	x9, x9, #0x1
    6344:	str	x9, [x1]
    6348:	ret
    634c:	sub	w10, w0, #0xa
    6350:	cmp	w10, #0x72
    6354:	b.hi	6458 <libintl_ngettext@@Base+0x648>  // b.pmore
    6358:	adrp	x11, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    635c:	add	x11, x11, #0x51c
    6360:	adr	x12, 6344 <libintl_ngettext@@Base+0x534>
    6364:	ldrb	w13, [x11, x10]
    6368:	add	x12, x12, x13, lsl #2
    636c:	br	x12
    6370:	ldrb	w10, [x9]
    6374:	sub	x12, x0, #0x30
    6378:	sub	w11, w10, #0x30
    637c:	cmp	w11, #0x9
    6380:	b.hi	63a4 <libintl_ngettext@@Base+0x594>  // b.pmore
    6384:	mov	w11, #0xa                   	// #10
    6388:	mul	x12, x12, x11
    638c:	add	x12, x12, w10, uxtb
    6390:	ldrb	w10, [x9, #1]!
    6394:	sub	x12, x12, #0x30
    6398:	sub	w13, w10, #0x30
    639c:	cmp	w13, #0xa
    63a0:	b.cc	6388 <libintl_ngettext@@Base+0x578>  // b.lo, b.ul, b.last
    63a4:	mov	w0, #0x106                 	// #262
    63a8:	str	x12, [x8]
    63ac:	str	x9, [x1]
    63b0:	ret
    63b4:	mov	w0, wzr
    63b8:	b	6340 <libintl_ngettext@@Base+0x530>
    63bc:	mov	x8, x9
    63c0:	ldrb	w10, [x8], #1
    63c4:	mov	w11, #0x100                 	// #256
    63c8:	cmp	w10, w0
    63cc:	csel	x9, x8, x9, eq  // eq = none
    63d0:	csel	w0, w0, w11, eq  // eq = none
    63d4:	str	x9, [x1]
    63d8:	ret
    63dc:	ldrb	w10, [x9]
    63e0:	cmp	w10, #0x3d
    63e4:	b.ne	6344 <libintl_ngettext@@Base+0x534>  // b.any
    63e8:	add	x9, x9, #0x1
    63ec:	mov	w10, #0xd                   	// #13
    63f0:	b	6450 <libintl_ngettext@@Base+0x640>
    63f4:	mov	w10, #0x5                   	// #5
    63f8:	b	641c <libintl_ngettext@@Base+0x60c>
    63fc:	mov	w10, #0x3                   	// #3
    6400:	b	641c <libintl_ngettext@@Base+0x60c>
    6404:	mov	w10, #0x6                   	// #6
    6408:	b	6410 <libintl_ngettext@@Base+0x600>
    640c:	mov	w10, #0x7                   	// #7
    6410:	mov	w0, #0x104                 	// #260
    6414:	b	648c <libintl_ngettext@@Base+0x67c>
    6418:	mov	w10, #0x4                   	// #4
    641c:	mov	w0, #0x105                 	// #261
    6420:	b	648c <libintl_ngettext@@Base+0x67c>
    6424:	ldrb	w10, [x9]
    6428:	cmp	w10, #0x3d
    642c:	b.ne	647c <libintl_ngettext@@Base+0x66c>  // b.any
    6430:	add	x9, x9, #0x1
    6434:	mov	w10, #0xa                   	// #10
    6438:	b	6488 <libintl_ngettext@@Base+0x678>
    643c:	ldrb	w10, [x9]
    6440:	cmp	w10, #0x3d
    6444:	b.ne	6458 <libintl_ngettext@@Base+0x648>  // b.any
    6448:	add	x9, x9, #0x1
    644c:	mov	w10, #0xc                   	// #12
    6450:	mov	w0, #0x102                 	// #258
    6454:	b	648c <libintl_ngettext@@Base+0x67c>
    6458:	mov	w0, #0x100                 	// #256
    645c:	str	x9, [x1]
    6460:	ret
    6464:	ldrb	w10, [x9]
    6468:	cmp	w10, #0x3d
    646c:	b.ne	6484 <libintl_ngettext@@Base+0x674>  // b.any
    6470:	add	x9, x9, #0x1
    6474:	mov	w10, #0xb                   	// #11
    6478:	b	6488 <libintl_ngettext@@Base+0x678>
    647c:	mov	w10, #0x8                   	// #8
    6480:	b	6488 <libintl_ngettext@@Base+0x678>
    6484:	mov	w10, #0x9                   	// #9
    6488:	mov	w0, #0x103                 	// #259
    648c:	str	w10, [x8]
    6490:	str	x9, [x1]
    6494:	ret
    6498:	sub	sp, sp, #0x30
    649c:	stp	x0, x1, [sp, #8]
    64a0:	str	x2, [sp, #24]
    64a4:	add	x2, sp, #0x8
    64a8:	mov	w0, #0x3                   	// #3
    64ac:	mov	w1, #0x10                  	// #16
    64b0:	stp	x29, x30, [sp, #32]
    64b4:	add	x29, sp, #0x20
    64b8:	bl	65a0 <libintl_ngettext@@Base+0x790>
    64bc:	ldp	x29, x30, [sp, #32]
    64c0:	add	sp, sp, #0x30
    64c4:	ret
    64c8:	sub	sp, sp, #0x20
    64cc:	mov	w8, w0
    64d0:	stp	x1, x2, [sp]
    64d4:	mov	x2, sp
    64d8:	mov	w0, #0x2                   	// #2
    64dc:	mov	w1, w8
    64e0:	stp	x29, x30, [sp, #16]
    64e4:	add	x29, sp, #0x10
    64e8:	bl	65a0 <libintl_ngettext@@Base+0x790>
    64ec:	ldp	x29, x30, [sp, #16]
    64f0:	add	sp, sp, #0x20
    64f4:	ret
    64f8:	sub	sp, sp, #0x20
    64fc:	str	x0, [sp, #8]
    6500:	add	x2, sp, #0x8
    6504:	mov	w0, #0x1                   	// #1
    6508:	mov	w1, #0x2                   	// #2
    650c:	stp	x29, x30, [sp, #16]
    6510:	add	x29, sp, #0x10
    6514:	bl	65a0 <libintl_ngettext@@Base+0x790>
    6518:	ldp	x29, x30, [sp, #16]
    651c:	add	sp, sp, #0x20
    6520:	ret
    6524:	stp	x29, x30, [sp, #-16]!
    6528:	mov	w1, w0
    652c:	mov	w0, wzr
    6530:	mov	x2, xzr
    6534:	mov	x29, sp
    6538:	bl	65a0 <libintl_ngettext@@Base+0x790>
    653c:	ldp	x29, x30, [sp], #16
    6540:	ret
    6544:	cbz	x0, 659c <libintl_ngettext@@Base+0x78c>
    6548:	stp	x29, x30, [sp, #-32]!
    654c:	ldr	w8, [x0]
    6550:	str	x19, [sp, #16]
    6554:	mov	x19, x0
    6558:	mov	x29, sp
    655c:	cmp	w8, #0x1
    6560:	b.eq	6584 <libintl_ngettext@@Base+0x774>  // b.none
    6564:	cmp	w8, #0x2
    6568:	b.eq	657c <libintl_ngettext@@Base+0x76c>  // b.none
    656c:	cmp	w8, #0x3
    6570:	b.ne	658c <libintl_ngettext@@Base+0x77c>  // b.any
    6574:	ldr	x0, [x19, #24]
    6578:	bl	6544 <libintl_ngettext@@Base+0x734>
    657c:	ldr	x0, [x19, #16]
    6580:	bl	6544 <libintl_ngettext@@Base+0x734>
    6584:	ldr	x0, [x19, #8]
    6588:	bl	6544 <libintl_ngettext@@Base+0x734>
    658c:	mov	x0, x19
    6590:	bl	20a0 <free@plt>
    6594:	ldr	x19, [sp, #16]
    6598:	ldp	x29, x30, [sp], #32
    659c:	ret
    65a0:	stp	x29, x30, [sp, #-48]!
    65a4:	stp	x22, x21, [sp, #16]
    65a8:	stp	x20, x19, [sp, #32]
    65ac:	mov	x19, x2
    65b0:	mov	w20, w0
    65b4:	cmp	w0, #0x1
    65b8:	mov	w22, w1
    65bc:	mov	x29, sp
    65c0:	b.lt	65e0 <libintl_ngettext@@Base+0x7d0>  // b.tstop
    65c4:	sxtw	x8, w20
    65c8:	sub	x9, x19, #0x8
    65cc:	ldr	x10, [x9, x8, lsl #3]
    65d0:	cbz	x10, 6624 <libintl_ngettext@@Base+0x814>
    65d4:	sub	x8, x8, #0x1
    65d8:	cmp	x8, #0x1
    65dc:	b.ge	65cc <libintl_ngettext@@Base+0x7bc>  // b.tcont
    65e0:	mov	w0, #0x20                  	// #32
    65e4:	bl	1ee0 <malloc@plt>
    65e8:	cbz	x0, 6624 <libintl_ngettext@@Base+0x814>
    65ec:	mov	x21, x0
    65f0:	subs	w8, w20, #0x1
    65f4:	stp	w20, w22, [x0]
    65f8:	b.lt	6650 <libintl_ngettext@@Base+0x840>  // b.tstop
    65fc:	sxtw	x9, w20
    6600:	mvn	x10, x8
    6604:	mov	w11, w20
    6608:	sub	x8, x9, x8
    660c:	add	x9, x10, x9
    6610:	add	x0, x21, x8, lsl #3
    6614:	add	x1, x19, x9, lsl #3
    6618:	lsl	x2, x11, #3
    661c:	bl	1d40 <memcpy@plt>
    6620:	b	6650 <libintl_ngettext@@Base+0x840>
    6624:	cmp	w20, #0x1
    6628:	b.lt	664c <libintl_ngettext@@Base+0x83c>  // b.tstop
    662c:	sxtw	x8, w20
    6630:	sub	x19, x19, #0x8
    6634:	ldr	x0, [x19, x8, lsl #3]
    6638:	sub	x20, x8, #0x1
    663c:	bl	6544 <libintl_ngettext@@Base+0x734>
    6640:	cmp	x20, #0x0
    6644:	mov	x8, x20
    6648:	b.gt	6634 <libintl_ngettext@@Base+0x824>
    664c:	mov	x21, xzr
    6650:	mov	x0, x21
    6654:	ldp	x20, x19, [sp, #32]
    6658:	ldp	x22, x21, [sp, #16]
    665c:	ldp	x29, x30, [sp], #48
    6660:	ret
    6664:	sub	sp, sp, #0x50
    6668:	stp	x20, x19, [sp, #64]
    666c:	mov	x19, x2
    6670:	mov	x20, x1
    6674:	stp	x29, x30, [sp, #16]
    6678:	str	x23, [sp, #32]
    667c:	stp	x22, x21, [sp, #48]
    6680:	add	x29, sp, #0x10
    6684:	cbz	x0, 6738 <libintl_ngettext@@Base+0x928>
    6688:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    668c:	add	x1, x1, #0x7c8
    6690:	mov	x22, x0
    6694:	bl	2180 <strstr@plt>
    6698:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    669c:	mov	x21, x0
    66a0:	add	x1, x1, #0x7d0
    66a4:	mov	x0, x22
    66a8:	bl	2180 <strstr@plt>
    66ac:	mov	w8, #0x2                   	// #2
    66b0:	cbz	x21, 6734 <libintl_ngettext@@Base+0x924>
    66b4:	mov	x22, x0
    66b8:	cbz	x0, 6734 <libintl_ngettext@@Base+0x924>
    66bc:	ldrb	w23, [x22, #9]!
    66c0:	cbz	w23, 66e0 <libintl_ngettext@@Base+0x8d0>
    66c4:	bl	2070 <__ctype_b_loc@plt>
    66c8:	ldr	x8, [x0]
    66cc:	and	x9, x23, #0xff
    66d0:	ldrh	w9, [x8, x9, lsl #1]
    66d4:	tbz	w9, #13, 66e0 <libintl_ngettext@@Base+0x8d0>
    66d8:	ldrb	w23, [x22, #1]!
    66dc:	cbnz	w23, 66cc <libintl_ngettext@@Base+0x8bc>
    66e0:	sub	w8, w23, #0x30
    66e4:	and	w8, w8, #0xff
    66e8:	cmp	w8, #0x9
    66ec:	b.hi	6724 <libintl_ngettext@@Base+0x914>  // b.pmore
    66f0:	add	x1, x29, #0x18
    66f4:	mov	w2, #0xa                   	// #10
    66f8:	mov	x0, x22
    66fc:	bl	1d80 <strtoul@plt>
    6700:	ldr	x8, [x29, #24]
    6704:	cmp	x22, x8
    6708:	b.eq	6730 <libintl_ngettext@@Base+0x920>  // b.none
    670c:	str	x0, [x19]
    6710:	add	x8, x21, #0x7
    6714:	mov	x0, sp
    6718:	str	x8, [sp]
    671c:	bl	5e38 <libintl_ngettext@@Base+0x28>
    6720:	cbz	w0, 6764 <libintl_ngettext@@Base+0x954>
    6724:	mov	w8, #0x2                   	// #2
    6728:	cbnz	w8, 6738 <libintl_ngettext@@Base+0x928>
    672c:	b	674c <libintl_ngettext@@Base+0x93c>
    6730:	mov	w8, #0x2                   	// #2
    6734:	cbz	w8, 674c <libintl_ngettext@@Base+0x93c>
    6738:	adrp	x8, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    673c:	add	x8, x8, #0xd88
    6740:	mov	w9, #0x2                   	// #2
    6744:	str	x8, [x20]
    6748:	str	x9, [x19]
    674c:	ldp	x20, x19, [sp, #64]
    6750:	ldp	x22, x21, [sp, #48]
    6754:	ldr	x23, [sp, #32]
    6758:	ldp	x29, x30, [sp, #16]
    675c:	add	sp, sp, #0x50
    6760:	ret
    6764:	ldr	x9, [sp, #8]
    6768:	mov	w8, wzr
    676c:	str	x9, [x20]
    6770:	cbnz	w8, 6738 <libintl_ngettext@@Base+0x928>
    6774:	b	674c <libintl_ngettext@@Base+0x93c>
    6778:	stp	x29, x30, [sp, #-16]!
    677c:	mov	w0, #0xe                   	// #14
    6780:	mov	x29, sp
    6784:	bl	1ec0 <nl_langinfo@plt>
    6788:	adrp	x8, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    678c:	add	x8, x8, #0x49f
    6790:	cmp	x0, #0x0
    6794:	csel	x8, x8, x0, eq  // eq = none
    6798:	ldrb	w9, [x8]
    679c:	adrp	x10, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    67a0:	add	x10, x10, #0x7da
    67a4:	cmp	w9, #0x0
    67a8:	csel	x0, x10, x8, eq  // eq = none
    67ac:	ldp	x29, x30, [sp], #16
    67b0:	ret
    67b4:	sub	sp, sp, #0x30
    67b8:	stp	x20, x19, [sp, #32]
    67bc:	mov	x19, x0
    67c0:	add	x0, sp, #0x8
    67c4:	stp	x29, x30, [sp, #16]
    67c8:	add	x29, sp, #0x10
    67cc:	bl	1d60 <pthread_rwlockattr_init@plt>
    67d0:	mov	w20, w0
    67d4:	cbnz	w0, 6804 <libintl_ngettext@@Base+0x9f4>
    67d8:	add	x0, sp, #0x8
    67dc:	mov	w1, #0x2                   	// #2
    67e0:	bl	1e00 <pthread_rwlockattr_setkind_np@plt>
    67e4:	mov	w20, w0
    67e8:	cbnz	w0, 67fc <libintl_ngettext@@Base+0x9ec>
    67ec:	add	x1, sp, #0x8
    67f0:	mov	x0, x19
    67f4:	bl	1df0 <pthread_rwlock_init@plt>
    67f8:	mov	w20, w0
    67fc:	add	x0, sp, #0x8
    6800:	bl	2190 <pthread_rwlockattr_destroy@plt>
    6804:	mov	w0, w20
    6808:	ldp	x20, x19, [sp, #32]
    680c:	ldp	x29, x30, [sp, #16]
    6810:	add	sp, sp, #0x30
    6814:	ret
    6818:	sub	sp, sp, #0x30
    681c:	stp	x20, x19, [sp, #32]
    6820:	mov	x19, x0
    6824:	add	x0, sp, #0x8
    6828:	stp	x29, x30, [sp, #16]
    682c:	add	x29, sp, #0x10
    6830:	bl	2150 <pthread_mutexattr_init@plt>
    6834:	mov	w20, w0
    6838:	cbnz	w0, 687c <libintl_ngettext@@Base+0xa6c>
    683c:	add	x0, sp, #0x8
    6840:	mov	w1, #0x1                   	// #1
    6844:	bl	1db0 <pthread_mutexattr_settype@plt>
    6848:	cbz	w0, 685c <libintl_ngettext@@Base+0xa4c>
    684c:	mov	w20, w0
    6850:	add	x0, sp, #0x8
    6854:	bl	2170 <pthread_mutexattr_destroy@plt>
    6858:	b	687c <libintl_ngettext@@Base+0xa6c>
    685c:	add	x1, sp, #0x8
    6860:	mov	x0, x19
    6864:	bl	1fd0 <pthread_mutex_init@plt>
    6868:	mov	w19, w0
    686c:	add	x0, sp, #0x8
    6870:	bl	2170 <pthread_mutexattr_destroy@plt>
    6874:	cmp	w19, #0x0
    6878:	csel	w20, w0, w19, eq  // eq = none
    687c:	mov	w0, w20
    6880:	ldp	x20, x19, [sp, #32]
    6884:	ldp	x29, x30, [sp, #16]
    6888:	add	sp, sp, #0x30
    688c:	ret
    6890:	ldrb	w8, [x0]
    6894:	cbz	w8, 68a0 <libintl_ngettext@@Base+0xa90>
    6898:	mov	w0, wzr
    689c:	ret
    68a0:	mov	w8, #0xff                  	// #255
    68a4:	strb	w8, [x0]
    68a8:	mov	w0, #0x1                   	// #1
    68ac:	ret

00000000000068b0 <libintl_set_relocation_prefix@@Base>:
    68b0:	stp	x29, x30, [sp, #-16]!
    68b4:	mov	x29, sp
    68b8:	bl	68c4 <libintl_set_relocation_prefix@@Base+0x14>
    68bc:	ldp	x29, x30, [sp], #16
    68c0:	ret
    68c4:	stp	x29, x30, [sp, #-64]!
    68c8:	str	x23, [sp, #16]
    68cc:	stp	x22, x21, [sp, #32]
    68d0:	stp	x20, x19, [sp, #48]
    68d4:	mov	x29, sp
    68d8:	cbz	x0, 6960 <libintl_set_relocation_prefix@@Base+0xb0>
    68dc:	mov	x19, x1
    68e0:	cbz	x1, 6960 <libintl_set_relocation_prefix@@Base+0xb0>
    68e4:	mov	x1, x19
    68e8:	mov	x20, x0
    68ec:	bl	2050 <strcmp@plt>
    68f0:	cbz	w0, 6960 <libintl_set_relocation_prefix@@Base+0xb0>
    68f4:	mov	x0, x20
    68f8:	bl	1d90 <strlen@plt>
    68fc:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6900:	mov	x22, x0
    6904:	str	x0, [x8, #1104]
    6908:	mov	x0, x19
    690c:	bl	1d90 <strlen@plt>
    6910:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6914:	add	x22, x22, #0x1
    6918:	str	x0, [x8, #1112]
    691c:	add	x8, x0, x22
    6920:	mov	x21, x0
    6924:	add	x0, x8, #0x1
    6928:	bl	1ee0 <malloc@plt>
    692c:	cbz	x0, 6960 <libintl_set_relocation_prefix@@Base+0xb0>
    6930:	mov	x1, x20
    6934:	mov	x2, x22
    6938:	mov	x23, x0
    693c:	bl	1d40 <memcpy@plt>
    6940:	add	x20, x23, x22
    6944:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6948:	add	x2, x21, #0x1
    694c:	mov	x0, x20
    6950:	mov	x1, x19
    6954:	str	x23, [x8, #1088]
    6958:	bl	1d40 <memcpy@plt>
    695c:	b	696c <libintl_set_relocation_prefix@@Base+0xbc>
    6960:	mov	x20, xzr
    6964:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6968:	str	xzr, [x8, #1088]
    696c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6970:	str	x20, [x8, #1096]
    6974:	ldp	x20, x19, [sp, #48]
    6978:	ldp	x22, x21, [sp, #32]
    697c:	ldr	x23, [sp, #16]
    6980:	ldp	x29, x30, [sp], #64
    6984:	ret
    6988:	stp	x29, x30, [sp, #-64]!
    698c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6990:	ldr	x1, [x8, #1088]
    6994:	stp	x20, x19, [sp, #48]
    6998:	mov	x19, x0
    699c:	str	x23, [sp, #16]
    69a0:	stp	x22, x21, [sp, #32]
    69a4:	mov	x29, sp
    69a8:	cbz	x1, 69d0 <libintl_set_relocation_prefix@@Base+0x120>
    69ac:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    69b0:	ldr	x20, [x8, #1096]
    69b4:	cbz	x20, 69d0 <libintl_set_relocation_prefix@@Base+0x120>
    69b8:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    69bc:	ldr	x21, [x8, #1104]
    69c0:	mov	x0, x19
    69c4:	mov	x2, x21
    69c8:	bl	1f10 <strncmp@plt>
    69cc:	cbz	w0, 69e8 <libintl_set_relocation_prefix@@Base+0x138>
    69d0:	mov	x0, x19
    69d4:	ldp	x20, x19, [sp, #48]
    69d8:	ldp	x22, x21, [sp, #32]
    69dc:	ldr	x23, [sp, #16]
    69e0:	ldp	x29, x30, [sp], #64
    69e4:	ret
    69e8:	add	x21, x19, x21
    69ec:	ldrb	w8, [x21]
    69f0:	cmp	w8, #0x2f
    69f4:	b.eq	6a20 <libintl_set_relocation_prefix@@Base+0x170>  // b.none
    69f8:	cbnz	w8, 69d0 <libintl_set_relocation_prefix@@Base+0x120>
    69fc:	mov	x0, x20
    6a00:	bl	1d90 <strlen@plt>
    6a04:	add	x0, x0, #0x1
    6a08:	bl	1ee0 <malloc@plt>
    6a0c:	cbz	x0, 69d0 <libintl_set_relocation_prefix@@Base+0x120>
    6a10:	mov	x1, x20
    6a14:	bl	2120 <strcpy@plt>
    6a18:	mov	x19, x0
    6a1c:	b	69d0 <libintl_set_relocation_prefix@@Base+0x120>
    6a20:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6a24:	ldr	x22, [x8, #1112]
    6a28:	mov	x0, x21
    6a2c:	bl	1d90 <strlen@plt>
    6a30:	add	x8, x22, x0
    6a34:	add	x0, x8, #0x1
    6a38:	bl	1ee0 <malloc@plt>
    6a3c:	cbz	x0, 69d0 <libintl_set_relocation_prefix@@Base+0x120>
    6a40:	mov	x1, x20
    6a44:	mov	x2, x22
    6a48:	mov	x23, x0
    6a4c:	bl	1d40 <memcpy@plt>
    6a50:	add	x0, x23, x22
    6a54:	mov	x1, x21
    6a58:	bl	2120 <strcpy@plt>
    6a5c:	mov	x19, x23
    6a60:	b	69d0 <libintl_set_relocation_prefix@@Base+0x120>
    6a64:	stp	x29, x30, [sp, #-32]!
    6a68:	stp	x20, x19, [sp, #16]
    6a6c:	mov	x29, sp
    6a70:	mov	x19, x1
    6a74:	mov	x20, x0
    6a78:	bl	6988 <libintl_set_relocation_prefix@@Base+0xd8>
    6a7c:	cmp	x0, x20
    6a80:	csel	x8, xzr, x0, eq  // eq = none
    6a84:	str	x8, [x19]
    6a88:	ldp	x20, x19, [sp, #16]
    6a8c:	ldp	x29, x30, [sp], #32
    6a90:	ret
    6a94:	mov	x0, xzr
    6a98:	ret
    6a9c:	stp	x29, x30, [sp, #-32]!
    6aa0:	stp	x20, x19, [sp, #16]
    6aa4:	mov	w19, w0
    6aa8:	mov	x0, xzr
    6aac:	mov	x29, sp
    6ab0:	bl	2090 <uselocale@plt>
    6ab4:	cmn	x0, #0x1
    6ab8:	b.eq	6ae0 <libintl_set_relocation_prefix@@Base+0x230>  // b.none
    6abc:	mov	x20, x0
    6ac0:	mov	w0, #0xffff                	// #65535
    6ac4:	bfi	w0, w19, #16, #16
    6ac8:	bl	1ec0 <nl_langinfo@plt>
    6acc:	ldrb	w8, [x0]
    6ad0:	cbnz	w8, 6ae4 <libintl_set_relocation_prefix@@Base+0x234>
    6ad4:	add	x8, x20, w19, sxtw #3
    6ad8:	ldr	x0, [x8, #128]
    6adc:	b	6ae4 <libintl_set_relocation_prefix@@Base+0x234>
    6ae0:	mov	x0, xzr
    6ae4:	ldp	x20, x19, [sp, #16]
    6ae8:	ldp	x29, x30, [sp], #32
    6aec:	ret
    6af0:	stp	x29, x30, [sp, #-16]!
    6af4:	mov	x29, sp
    6af8:	bl	6a9c <libintl_set_relocation_prefix@@Base+0x1ec>
    6afc:	cbz	x0, 6b04 <libintl_set_relocation_prefix@@Base+0x254>
    6b00:	bl	6b0c <libintl_set_relocation_prefix@@Base+0x25c>
    6b04:	ldp	x29, x30, [sp], #16
    6b08:	ret
    6b0c:	stp	x29, x30, [sp, #-64]!
    6b10:	stp	x24, x23, [sp, #16]
    6b14:	stp	x22, x21, [sp, #32]
    6b18:	stp	x20, x19, [sp, #48]
    6b1c:	mov	x29, sp
    6b20:	mov	x19, x0
    6b24:	bl	6d00 <libintl_set_relocation_prefix@@Base+0x450>
    6b28:	mov	x8, #0xff00ff00ff00ff00    	// #-71777214294589696
    6b2c:	movk	x8, #0xff01
    6b30:	umulh	x8, x0, x8
    6b34:	lsr	x8, x8, #8
    6b38:	add	x8, x8, x8, lsl #8
    6b3c:	adrp	x22, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6b40:	sub	x23, x0, x8
    6b44:	add	x22, x22, #0x460
    6b48:	ldr	x21, [x22, x23, lsl #3]
    6b4c:	cbz	x21, 6b6c <libintl_set_relocation_prefix@@Base+0x2bc>
    6b50:	add	x20, x21, #0x8
    6b54:	mov	x0, x20
    6b58:	mov	x1, x19
    6b5c:	bl	2050 <strcmp@plt>
    6b60:	cbz	w0, 6c20 <libintl_set_relocation_prefix@@Base+0x370>
    6b64:	ldr	x21, [x21]
    6b68:	cbnz	x21, 6b50 <libintl_set_relocation_prefix@@Base+0x2a0>
    6b6c:	mov	x0, x19
    6b70:	bl	1d90 <strlen@plt>
    6b74:	add	x8, x0, #0x10
    6b78:	mov	x21, x0
    6b7c:	and	x0, x8, #0xfffffffffffffff8
    6b80:	bl	1ee0 <malloc@plt>
    6b84:	cbz	x0, 6bf4 <libintl_set_relocation_prefix@@Base+0x344>
    6b88:	mov	x20, x0
    6b8c:	add	x2, x21, #0x1
    6b90:	add	x0, x0, #0x8
    6b94:	mov	x1, x19
    6b98:	bl	1d40 <memcpy@plt>
    6b9c:	adrp	x21, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    6ba0:	ldr	x21, [x21, #4064]
    6ba4:	cbz	x21, 6bb8 <libintl_set_relocation_prefix@@Base+0x308>
    6ba8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6bac:	add	x0, x0, #0xc68
    6bb0:	bl	21e0 <pthread_mutex_lock@plt>
    6bb4:	cbnz	w0, 6c38 <libintl_set_relocation_prefix@@Base+0x388>
    6bb8:	ldr	x24, [x22, x23, lsl #3]
    6bbc:	cbz	x24, 6bd8 <libintl_set_relocation_prefix@@Base+0x328>
    6bc0:	add	x0, x24, #0x8
    6bc4:	mov	x1, x19
    6bc8:	bl	2050 <strcmp@plt>
    6bcc:	cbz	w0, 6c00 <libintl_set_relocation_prefix@@Base+0x350>
    6bd0:	ldr	x24, [x24]
    6bd4:	cbnz	x24, 6bc0 <libintl_set_relocation_prefix@@Base+0x310>
    6bd8:	lsl	x8, x23, #3
    6bdc:	ldr	x9, [x22, x8]
    6be0:	mov	x24, x20
    6be4:	str	x9, [x20]
    6be8:	str	x20, [x22, x8]
    6bec:	cbnz	x21, 6c0c <libintl_set_relocation_prefix@@Base+0x35c>
    6bf0:	b	6c1c <libintl_set_relocation_prefix@@Base+0x36c>
    6bf4:	adrp	x20, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6bf8:	add	x20, x20, #0x4d4
    6bfc:	b	6c20 <libintl_set_relocation_prefix@@Base+0x370>
    6c00:	mov	x0, x20
    6c04:	bl	20a0 <free@plt>
    6c08:	cbz	x21, 6c1c <libintl_set_relocation_prefix@@Base+0x36c>
    6c0c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6c10:	add	x0, x0, #0xc68
    6c14:	bl	21f0 <pthread_mutex_unlock@plt>
    6c18:	cbnz	w0, 6c38 <libintl_set_relocation_prefix@@Base+0x388>
    6c1c:	add	x20, x24, #0x8
    6c20:	mov	x0, x20
    6c24:	ldp	x20, x19, [sp, #48]
    6c28:	ldp	x22, x21, [sp, #32]
    6c2c:	ldp	x24, x23, [sp, #16]
    6c30:	ldp	x29, x30, [sp], #64
    6c34:	ret
    6c38:	bl	2000 <abort@plt>
    6c3c:	stp	x29, x30, [sp, #-16]!
    6c40:	mov	x1, xzr
    6c44:	mov	x29, sp
    6c48:	bl	2210 <setlocale@plt>
    6c4c:	ldp	x29, x30, [sp], #16
    6c50:	ret
    6c54:	stp	x29, x30, [sp, #-32]!
    6c58:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6c5c:	add	x0, x0, #0x4ea
    6c60:	str	x19, [sp, #16]
    6c64:	mov	x29, sp
    6c68:	mov	x19, x1
    6c6c:	bl	21d0 <getenv@plt>
    6c70:	cbz	x0, 6c7c <libintl_set_relocation_prefix@@Base+0x3cc>
    6c74:	ldrb	w8, [x0]
    6c78:	cbnz	w8, 6cac <libintl_set_relocation_prefix@@Base+0x3fc>
    6c7c:	mov	x0, x19
    6c80:	bl	21d0 <getenv@plt>
    6c84:	cbz	x0, 6c90 <libintl_set_relocation_prefix@@Base+0x3e0>
    6c88:	ldrb	w8, [x0]
    6c8c:	cbnz	w8, 6cac <libintl_set_relocation_prefix@@Base+0x3fc>
    6c90:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6c94:	add	x0, x0, #0x7e0
    6c98:	bl	21d0 <getenv@plt>
    6c9c:	cbz	x0, 6ca8 <libintl_set_relocation_prefix@@Base+0x3f8>
    6ca0:	ldrb	w8, [x0]
    6ca4:	cbnz	w8, 6cac <libintl_set_relocation_prefix@@Base+0x3fc>
    6ca8:	mov	x0, xzr
    6cac:	ldr	x19, [sp, #16]
    6cb0:	ldp	x29, x30, [sp], #32
    6cb4:	ret
    6cb8:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6cbc:	add	x0, x0, #0x4d4
    6cc0:	ret
    6cc4:	stp	x29, x30, [sp, #-32]!
    6cc8:	str	x19, [sp, #16]
    6ccc:	mov	x29, sp
    6cd0:	mov	w19, w0
    6cd4:	bl	6af0 <libintl_set_relocation_prefix@@Base+0x240>
    6cd8:	cbnz	x0, 6cf4 <libintl_set_relocation_prefix@@Base+0x444>
    6cdc:	mov	w0, w19
    6ce0:	bl	6c3c <libintl_set_relocation_prefix@@Base+0x38c>
    6ce4:	adrp	x8, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6ce8:	add	x8, x8, #0x4d4
    6cec:	cmp	x0, #0x0
    6cf0:	csel	x0, x8, x0, eq  // eq = none
    6cf4:	ldr	x19, [sp, #16]
    6cf8:	ldp	x29, x30, [sp], #32
    6cfc:	ret
    6d00:	ldrb	w9, [x0]
    6d04:	cbz	w9, 6d28 <libintl_set_relocation_prefix@@Base+0x478>
    6d08:	mov	x8, x0
    6d0c:	mov	x0, xzr
    6d10:	add	x8, x8, #0x1
    6d14:	ror	x10, x0, #55
    6d18:	add	x0, x10, w9, uxtb
    6d1c:	ldrb	w9, [x8], #1
    6d20:	cbnz	w9, 6d14 <libintl_set_relocation_prefix@@Base+0x464>
    6d24:	ret
    6d28:	mov	x0, xzr
    6d2c:	ret
    6d30:	stp	x29, x30, [sp, #-64]!
    6d34:	stp	x24, x23, [sp, #16]
    6d38:	stp	x22, x21, [sp, #32]
    6d3c:	stp	x20, x19, [sp, #48]
    6d40:	adrp	x24, 17000 <bind_textdomain_codeset@@Base+0xfe6c>
    6d44:	ldr	x24, [x24, #4064]
    6d48:	mov	w19, w4
    6d4c:	mov	x20, x3
    6d50:	mov	x21, x2
    6d54:	mov	x22, x1
    6d58:	mov	x23, x0
    6d5c:	mov	x29, sp
    6d60:	cbz	x24, 6da4 <libintl_set_relocation_prefix@@Base+0x4f4>
    6d64:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6d68:	add	x0, x0, #0xc98
    6d6c:	bl	21e0 <pthread_mutex_lock@plt>
    6d70:	cbnz	w0, 6da0 <libintl_set_relocation_prefix@@Base+0x4f0>
    6d74:	mov	x0, x23
    6d78:	mov	x1, x22
    6d7c:	mov	x2, x21
    6d80:	mov	x3, x20
    6d84:	mov	w4, w19
    6d88:	bl	6dd0 <libintl_set_relocation_prefix@@Base+0x520>
    6d8c:	cbz	x24, 6dbc <libintl_set_relocation_prefix@@Base+0x50c>
    6d90:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6d94:	add	x0, x0, #0xc98
    6d98:	bl	21f0 <pthread_mutex_unlock@plt>
    6d9c:	cbz	w0, 6dbc <libintl_set_relocation_prefix@@Base+0x50c>
    6da0:	bl	2000 <abort@plt>
    6da4:	mov	x0, x23
    6da8:	mov	x1, x22
    6dac:	mov	x2, x21
    6db0:	mov	x3, x20
    6db4:	mov	w4, w19
    6db8:	bl	6dd0 <libintl_set_relocation_prefix@@Base+0x520>
    6dbc:	ldp	x20, x19, [sp, #48]
    6dc0:	ldp	x22, x21, [sp, #32]
    6dc4:	ldp	x24, x23, [sp, #16]
    6dc8:	ldp	x29, x30, [sp], #64
    6dcc:	ret
    6dd0:	stp	x29, x30, [sp, #-80]!
    6dd4:	str	x25, [sp, #16]
    6dd8:	adrp	x25, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6ddc:	stp	x24, x23, [sp, #32]
    6de0:	ldr	x24, [x25, #3272]
    6de4:	stp	x22, x21, [sp, #48]
    6de8:	stp	x20, x19, [sp, #64]
    6dec:	mov	w20, w4
    6df0:	mov	x19, x3
    6df4:	mov	x21, x2
    6df8:	mov	x23, x1
    6dfc:	mov	x22, x0
    6e00:	mov	x29, sp
    6e04:	cbz	x24, 6e3c <libintl_set_relocation_prefix@@Base+0x58c>
    6e08:	mov	x0, x22
    6e0c:	mov	x1, x24
    6e10:	bl	2050 <strcmp@plt>
    6e14:	cbz	w0, 6e78 <libintl_set_relocation_prefix@@Base+0x5c8>
    6e18:	cbz	x24, 6e3c <libintl_set_relocation_prefix@@Base+0x58c>
    6e1c:	adrp	x24, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6e20:	ldr	x0, [x24, #3280]
    6e24:	cbz	x0, 6e30 <libintl_set_relocation_prefix@@Base+0x580>
    6e28:	bl	1eb0 <fclose@plt>
    6e2c:	str	xzr, [x24, #3280]
    6e30:	ldr	x0, [x25, #3272]
    6e34:	bl	20a0 <free@plt>
    6e38:	str	xzr, [x25, #3272]
    6e3c:	mov	x0, x22
    6e40:	bl	1d90 <strlen@plt>
    6e44:	add	x0, x0, #0x1
    6e48:	bl	1ee0 <malloc@plt>
    6e4c:	str	x0, [x25, #3272]
    6e50:	cbz	x0, 6f88 <libintl_set_relocation_prefix@@Base+0x6d8>
    6e54:	mov	x1, x22
    6e58:	bl	2120 <strcpy@plt>
    6e5c:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6e60:	add	x1, x1, #0x7e5
    6e64:	mov	x0, x22
    6e68:	bl	1ed0 <fopen@plt>
    6e6c:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6e70:	str	x0, [x8, #3280]
    6e74:	cbz	x0, 6f88 <libintl_set_relocation_prefix@@Base+0x6d8>
    6e78:	adrp	x8, 18000 <bind_textdomain_codeset@@Base+0x10e6c>
    6e7c:	ldr	x22, [x8, #3280]
    6e80:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6e84:	add	x0, x0, #0x7e7
    6e88:	mov	w1, #0x7                   	// #7
    6e8c:	mov	w2, #0x1                   	// #1
    6e90:	mov	x3, x22
    6e94:	bl	2100 <fwrite@plt>
    6e98:	mov	x0, x23
    6e9c:	bl	1d90 <strlen@plt>
    6ea0:	add	x2, x23, x0
    6ea4:	mov	x0, x22
    6ea8:	mov	x1, x23
    6eac:	bl	6fa0 <libintl_set_relocation_prefix@@Base+0x6f0>
    6eb0:	mov	w1, #0x4                   	// #4
    6eb4:	mov	x0, x21
    6eb8:	bl	20e0 <strchr@plt>
    6ebc:	cbz	x0, 6ef0 <libintl_set_relocation_prefix@@Base+0x640>
    6ec0:	mov	x23, x0
    6ec4:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6ec8:	add	x0, x0, #0x7ef
    6ecc:	mov	w1, #0x9                   	// #9
    6ed0:	mov	w2, #0x1                   	// #1
    6ed4:	mov	x3, x22
    6ed8:	bl	2100 <fwrite@plt>
    6edc:	mov	x0, x22
    6ee0:	mov	x1, x21
    6ee4:	mov	x2, x23
    6ee8:	bl	6fa0 <libintl_set_relocation_prefix@@Base+0x6f0>
    6eec:	add	x21, x23, #0x1
    6ef0:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6ef4:	add	x0, x0, #0x7f9
    6ef8:	mov	w1, #0x7                   	// #7
    6efc:	mov	w2, #0x1                   	// #1
    6f00:	mov	x3, x22
    6f04:	bl	2100 <fwrite@plt>
    6f08:	mov	x0, x21
    6f0c:	bl	1d90 <strlen@plt>
    6f10:	add	x2, x21, x0
    6f14:	mov	x0, x22
    6f18:	mov	x1, x21
    6f1c:	bl	6fa0 <libintl_set_relocation_prefix@@Base+0x6f0>
    6f20:	cbz	w20, 6f64 <libintl_set_relocation_prefix@@Base+0x6b4>
    6f24:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6f28:	add	x0, x0, #0x801
    6f2c:	mov	w1, #0xe                   	// #14
    6f30:	mov	w2, #0x1                   	// #1
    6f34:	mov	x3, x22
    6f38:	bl	2100 <fwrite@plt>
    6f3c:	mov	x0, x19
    6f40:	bl	1d90 <strlen@plt>
    6f44:	add	x2, x19, x0
    6f48:	mov	x0, x22
    6f4c:	mov	x1, x19
    6f50:	bl	6fa0 <libintl_set_relocation_prefix@@Base+0x6f0>
    6f54:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6f58:	add	x0, x0, #0x810
    6f5c:	mov	w1, #0xe                   	// #14
    6f60:	b	6f70 <libintl_set_relocation_prefix@@Base+0x6c0>
    6f64:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6f68:	add	x0, x0, #0x81f
    6f6c:	mov	w1, #0xb                   	// #11
    6f70:	mov	w2, #0x1                   	// #1
    6f74:	mov	x3, x22
    6f78:	bl	2100 <fwrite@plt>
    6f7c:	mov	w0, #0xa                   	// #10
    6f80:	mov	x1, x22
    6f84:	bl	1e40 <putc@plt>
    6f88:	ldp	x20, x19, [sp, #64]
    6f8c:	ldp	x22, x21, [sp, #48]
    6f90:	ldp	x24, x23, [sp, #32]
    6f94:	ldr	x25, [sp, #16]
    6f98:	ldp	x29, x30, [sp], #80
    6f9c:	ret
    6fa0:	stp	x29, x30, [sp, #-64]!
    6fa4:	stp	x20, x19, [sp, #48]
    6fa8:	mov	x19, x0
    6fac:	stp	x22, x21, [sp, #32]
    6fb0:	mov	x21, x1
    6fb4:	mov	w0, #0x22                  	// #34
    6fb8:	mov	x1, x19
    6fbc:	stp	x24, x23, [sp, #16]
    6fc0:	mov	x29, sp
    6fc4:	mov	x20, x2
    6fc8:	bl	1e40 <putc@plt>
    6fcc:	cmp	x21, x20
    6fd0:	b.eq	7060 <libintl_set_relocation_prefix@@Base+0x7b0>  // b.none
    6fd4:	adrp	x22, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6fd8:	adrp	x23, 7000 <libintl_set_relocation_prefix@@Base+0x750>
    6fdc:	sub	x24, x20, #0x1
    6fe0:	add	x22, x22, #0x82b
    6fe4:	add	x23, x23, #0x82f
    6fe8:	b	7010 <libintl_set_relocation_prefix@@Base+0x760>
    6fec:	mov	w0, #0x5c                  	// #92
    6ff0:	mov	x1, x19
    6ff4:	bl	1e40 <putc@plt>
    6ff8:	ldrb	w0, [x21]
    6ffc:	mov	x1, x19
    7000:	bl	1e40 <putc@plt>
    7004:	add	x21, x21, #0x1
    7008:	cmp	x20, x21
    700c:	b.eq	7060 <libintl_set_relocation_prefix@@Base+0x7b0>  // b.none
    7010:	ldrb	w8, [x21]
    7014:	cmp	w8, #0x5c
    7018:	b.eq	6fec <libintl_set_relocation_prefix@@Base+0x73c>  // b.none
    701c:	cmp	w8, #0x22
    7020:	b.eq	6fec <libintl_set_relocation_prefix@@Base+0x73c>  // b.none
    7024:	cmp	w8, #0xa
    7028:	b.ne	6ff8 <libintl_set_relocation_prefix@@Base+0x748>  // b.any
    702c:	mov	w1, #0x3                   	// #3
    7030:	mov	w2, #0x1                   	// #1
    7034:	mov	x0, x22
    7038:	mov	x3, x19
    703c:	bl	2100 <fwrite@plt>
    7040:	cmp	x24, x21
    7044:	b.eq	706c <libintl_set_relocation_prefix@@Base+0x7bc>  // b.none
    7048:	mov	w1, #0x2                   	// #2
    704c:	mov	w2, #0x1                   	// #1
    7050:	mov	x0, x23
    7054:	mov	x3, x19
    7058:	bl	2100 <fwrite@plt>
    705c:	b	7004 <libintl_set_relocation_prefix@@Base+0x754>
    7060:	mov	w0, #0x22                  	// #34
    7064:	mov	x1, x19
    7068:	bl	1e40 <putc@plt>
    706c:	ldp	x20, x19, [sp, #48]
    7070:	ldp	x22, x21, [sp, #32]
    7074:	ldp	x24, x23, [sp, #16]
    7078:	ldp	x29, x30, [sp], #64
    707c:	ret
    7080:	adds	x8, x0, x1
    7084:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
    7088:	ret
    708c:	stp	x29, x30, [sp, #-32]!
    7090:	str	x19, [sp, #16]
    7094:	mov	x29, sp
    7098:	mov	x19, x2
    709c:	bl	7080 <libintl_set_relocation_prefix@@Base+0x7d0>
    70a0:	mov	x1, x19
    70a4:	bl	7080 <libintl_set_relocation_prefix@@Base+0x7d0>
    70a8:	ldr	x19, [sp, #16]
    70ac:	ldp	x29, x30, [sp], #32
    70b0:	ret
    70b4:	stp	x29, x30, [sp, #-32]!
    70b8:	stp	x20, x19, [sp, #16]
    70bc:	mov	x29, sp
    70c0:	mov	x19, x3
    70c4:	mov	x20, x2
    70c8:	bl	7080 <libintl_set_relocation_prefix@@Base+0x7d0>
    70cc:	mov	x1, x20
    70d0:	bl	7080 <libintl_set_relocation_prefix@@Base+0x7d0>
    70d4:	mov	x1, x19
    70d8:	bl	7080 <libintl_set_relocation_prefix@@Base+0x7d0>
    70dc:	ldp	x20, x19, [sp, #16]
    70e0:	ldp	x29, x30, [sp], #32
    70e4:	ret
    70e8:	cmp	x0, x1
    70ec:	csel	x0, x1, x0, cc  // cc = lo, ul, last
    70f0:	ret

00000000000070f4 <gettext@@Base>:
    70f4:	stp	x29, x30, [sp, #-16]!
    70f8:	mov	x29, sp
    70fc:	bl	2200 <libintl_gettext@plt>
    7100:	ldp	x29, x30, [sp], #16
    7104:	ret

0000000000007108 <dgettext@@Base>:
    7108:	stp	x29, x30, [sp, #-16]!
    710c:	mov	x29, sp
    7110:	bl	20d0 <libintl_dgettext@plt>
    7114:	ldp	x29, x30, [sp], #16
    7118:	ret

000000000000711c <dcgettext@@Base>:
    711c:	stp	x29, x30, [sp, #-16]!
    7120:	mov	x29, sp
    7124:	bl	1e70 <libintl_dcgettext@plt>
    7128:	ldp	x29, x30, [sp], #16
    712c:	ret

0000000000007130 <ngettext@@Base>:
    7130:	stp	x29, x30, [sp, #-16]!
    7134:	mov	x29, sp
    7138:	bl	2220 <libintl_ngettext@plt>
    713c:	ldp	x29, x30, [sp], #16
    7140:	ret

0000000000007144 <dngettext@@Base>:
    7144:	stp	x29, x30, [sp, #-16]!
    7148:	mov	x29, sp
    714c:	bl	1d50 <libintl_dngettext@plt>
    7150:	ldp	x29, x30, [sp], #16
    7154:	ret

0000000000007158 <dcngettext@@Base>:
    7158:	stp	x29, x30, [sp, #-16]!
    715c:	mov	x29, sp
    7160:	bl	1f30 <libintl_dcngettext@plt>
    7164:	ldp	x29, x30, [sp], #16
    7168:	ret

000000000000716c <textdomain@@Base>:
    716c:	stp	x29, x30, [sp, #-16]!
    7170:	mov	x29, sp
    7174:	bl	1e60 <libintl_textdomain@plt>
    7178:	ldp	x29, x30, [sp], #16
    717c:	ret

0000000000007180 <bindtextdomain@@Base>:
    7180:	stp	x29, x30, [sp, #-16]!
    7184:	mov	x29, sp
    7188:	bl	1f60 <libintl_bindtextdomain@plt>
    718c:	ldp	x29, x30, [sp], #16
    7190:	ret

0000000000007194 <bind_textdomain_codeset@@Base>:
    7194:	stp	x29, x30, [sp, #-16]!
    7198:	mov	x29, sp
    719c:	bl	1f50 <libintl_bind_textdomain_codeset@plt>
    71a0:	ldp	x29, x30, [sp], #16
    71a4:	ret
    71a8:	mov	x2, x1
    71ac:	mov	w1, w0
    71b0:	mov	w0, #0x0                   	// #0
    71b4:	b	2160 <__fxstat@plt>

Disassembly of section .fini:

00000000000071b8 <.fini>:
    71b8:	stp	x29, x30, [sp, #-16]!
    71bc:	mov	x29, sp
    71c0:	ldp	x29, x30, [sp], #16
    71c4:	ret
