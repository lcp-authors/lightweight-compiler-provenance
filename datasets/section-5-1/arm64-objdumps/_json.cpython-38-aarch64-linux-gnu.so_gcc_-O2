
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_json.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001d58 <.init>:
    1d58:	stp	x29, x30, [sp, #-16]!
    1d5c:	mov	x29, sp
    1d60:	bl	20e0 <PySequence_Fast@plt+0x10>
    1d64:	ldp	x29, x30, [sp], #16
    1d68:	ret

Disassembly of section .plt:

0000000000001d70 <PyMapping_Items@plt-0x20>:
    1d70:	stp	x16, x30, [sp, #-16]!
    1d74:	adrp	x16, 17000 <PyInit__json@@Base+0x10918>
    1d78:	ldr	x17, [x16, #4088]
    1d7c:	add	x16, x16, #0xff8
    1d80:	br	x17
    1d84:	nop
    1d88:	nop
    1d8c:	nop

0000000000001d90 <PyMapping_Items@plt>:
    1d90:	adrp	x16, 18000 <PyMapping_Items>
    1d94:	ldr	x17, [x16]
    1d98:	add	x16, x16, #0x0
    1d9c:	br	x17

0000000000001da0 <PyList_New@plt>:
    1da0:	adrp	x16, 18000 <PyMapping_Items>
    1da4:	ldr	x17, [x16, #8]
    1da8:	add	x16, x16, #0x8
    1dac:	br	x17

0000000000001db0 <_PyUnicode_Ready@plt>:
    1db0:	adrp	x16, 18000 <PyMapping_Items>
    1db4:	ldr	x17, [x16, #16]
    1db8:	add	x16, x16, #0x10
    1dbc:	br	x17

0000000000001dc0 <PyArg_ParseTupleAndKeywords@plt>:
    1dc0:	adrp	x16, 18000 <PyMapping_Items>
    1dc4:	ldr	x17, [x16, #24]
    1dc8:	add	x16, x16, #0x18
    1dcc:	br	x17

0000000000001dd0 <PyObject_GetAttrString@plt>:
    1dd0:	adrp	x16, 18000 <PyMapping_Items>
    1dd4:	ldr	x17, [x16, #32]
    1dd8:	add	x16, x16, #0x20
    1ddc:	br	x17

0000000000001de0 <__cxa_finalize@plt>:
    1de0:	adrp	x16, 18000 <PyMapping_Items>
    1de4:	ldr	x17, [x16, #40]
    1de8:	add	x16, x16, #0x28
    1dec:	br	x17

0000000000001df0 <_PyAccu_Init@plt>:
    1df0:	adrp	x16, 18000 <PyMapping_Items>
    1df4:	ldr	x17, [x16, #48]
    1df8:	add	x16, x16, #0x30
    1dfc:	br	x17

0000000000001e00 <PyUnicode_Join@plt>:
    1e00:	adrp	x16, 18000 <PyMapping_Items>
    1e04:	ldr	x17, [x16, #56]
    1e08:	add	x16, x16, #0x38
    1e0c:	br	x17

0000000000001e10 <PyDict_Contains@plt>:
    1e10:	adrp	x16, 18000 <PyMapping_Items>
    1e14:	ldr	x17, [x16, #64]
    1e18:	add	x16, x16, #0x40
    1e1c:	br	x17

0000000000001e20 <PyBytes_FromStringAndSize@plt>:
    1e20:	adrp	x16, 18000 <PyMapping_Items>
    1e24:	ldr	x17, [x16, #72]
    1e28:	add	x16, x16, #0x48
    1e2c:	br	x17

0000000000001e30 <_Py_Dealloc@plt>:
    1e30:	adrp	x16, 18000 <PyMapping_Items>
    1e34:	ldr	x17, [x16, #80]
    1e38:	add	x16, x16, #0x50
    1e3c:	br	x17

0000000000001e40 <PyErr_SetObject@plt>:
    1e40:	adrp	x16, 18000 <PyMapping_Items>
    1e44:	ldr	x17, [x16, #88]
    1e48:	add	x16, x16, #0x58
    1e4c:	br	x17

0000000000001e50 <PyIter_Next@plt>:
    1e50:	adrp	x16, 18000 <PyMapping_Items>
    1e54:	ldr	x17, [x16, #96]
    1e58:	add	x16, x16, #0x60
    1e5c:	br	x17

0000000000001e60 <PyErr_SetString@plt>:
    1e60:	adrp	x16, 18000 <PyMapping_Items>
    1e64:	ldr	x17, [x16, #104]
    1e68:	add	x16, x16, #0x68
    1e6c:	br	x17

0000000000001e70 <_PyAccu_Accumulate@plt>:
    1e70:	adrp	x16, 18000 <PyMapping_Items>
    1e74:	ldr	x17, [x16, #112]
    1e78:	add	x16, x16, #0x70
    1e7c:	br	x17

0000000000001e80 <PyLong_FromSsize_t@plt>:
    1e80:	adrp	x16, 18000 <PyMapping_Items>
    1e84:	ldr	x17, [x16, #120]
    1e88:	add	x16, x16, #0x78
    1e8c:	br	x17

0000000000001e90 <PyType_Ready@plt>:
    1e90:	adrp	x16, 18000 <PyMapping_Items>
    1e94:	ldr	x17, [x16, #128]
    1e98:	add	x16, x16, #0x80
    1e9c:	br	x17

0000000000001ea0 <PyLong_FromVoidPtr@plt>:
    1ea0:	adrp	x16, 18000 <PyMapping_Items>
    1ea4:	ldr	x17, [x16, #136]
    1ea8:	add	x16, x16, #0x88
    1eac:	br	x17

0000000000001eb0 <PyList_Append@plt>:
    1eb0:	adrp	x16, 18000 <PyMapping_Items>
    1eb4:	ldr	x17, [x16, #144]
    1eb8:	add	x16, x16, #0x90
    1ebc:	br	x17

0000000000001ec0 <_Py_CheckRecursiveCall@plt>:
    1ec0:	adrp	x16, 18000 <PyMapping_Items>
    1ec4:	ldr	x17, [x16, #152]
    1ec8:	add	x16, x16, #0x98
    1ecc:	br	x17

0000000000001ed0 <PyDict_Clear@plt>:
    1ed0:	adrp	x16, 18000 <PyMapping_Items>
    1ed4:	ldr	x17, [x16, #160]
    1ed8:	add	x16, x16, #0xa0
    1edc:	br	x17

0000000000001ee0 <_PyAccu_Destroy@plt>:
    1ee0:	adrp	x16, 18000 <PyMapping_Items>
    1ee4:	ldr	x17, [x16, #168]
    1ee8:	add	x16, x16, #0xa8
    1eec:	br	x17

0000000000001ef0 <__gmon_start__@plt>:
    1ef0:	adrp	x16, 18000 <PyMapping_Items>
    1ef4:	ldr	x17, [x16, #176]
    1ef8:	add	x16, x16, #0xb0
    1efc:	br	x17

0000000000001f00 <PyObject_CallFunction@plt>:
    1f00:	adrp	x16, 18000 <PyMapping_Items>
    1f04:	ldr	x17, [x16, #184]
    1f08:	add	x16, x16, #0xb8
    1f0c:	br	x17

0000000000001f10 <PyTuple_New@plt>:
    1f10:	adrp	x16, 18000 <PyMapping_Items>
    1f14:	ldr	x17, [x16, #192]
    1f18:	add	x16, x16, #0xc0
    1f1c:	br	x17

0000000000001f20 <PyThreadState_Get@plt>:
    1f20:	adrp	x16, 18000 <PyMapping_Items>
    1f24:	ldr	x17, [x16, #200]
    1f28:	add	x16, x16, #0xc8
    1f2c:	br	x17

0000000000001f30 <PyDict_DelItem@plt>:
    1f30:	adrp	x16, 18000 <PyMapping_Items>
    1f34:	ldr	x17, [x16, #208]
    1f38:	add	x16, x16, #0xd0
    1f3c:	br	x17

0000000000001f40 <PyErr_Occurred@plt>:
    1f40:	adrp	x16, 18000 <PyMapping_Items>
    1f44:	ldr	x17, [x16, #216]
    1f48:	add	x16, x16, #0xd8
    1f4c:	br	x17

0000000000001f50 <PyModule_Create2@plt>:
    1f50:	adrp	x16, 18000 <PyMapping_Items>
    1f54:	ldr	x17, [x16, #224]
    1f58:	add	x16, x16, #0xe0
    1f5c:	br	x17

0000000000001f60 <PyImport_ImportModule@plt>:
    1f60:	adrp	x16, 18000 <PyMapping_Items>
    1f64:	ldr	x17, [x16, #232]
    1f68:	add	x16, x16, #0xe8
    1f6c:	br	x17

0000000000001f70 <PyObject_CallFunctionObjArgs@plt>:
    1f70:	adrp	x16, 18000 <PyMapping_Items>
    1f74:	ldr	x17, [x16, #240]
    1f78:	add	x16, x16, #0xf0
    1f7c:	br	x17

0000000000001f80 <PyList_Sort@plt>:
    1f80:	adrp	x16, 18000 <PyMapping_Items>
    1f84:	ldr	x17, [x16, #248]
    1f88:	add	x16, x16, #0xf8
    1f8c:	br	x17

0000000000001f90 <PyObject_IsTrue@plt>:
    1f90:	adrp	x16, 18000 <PyMapping_Items>
    1f94:	ldr	x17, [x16, #256]
    1f98:	add	x16, x16, #0x100
    1f9c:	br	x17

0000000000001fa0 <PyArg_ParseTuple@plt>:
    1fa0:	adrp	x16, 18000 <PyMapping_Items>
    1fa4:	ldr	x17, [x16, #264]
    1fa8:	add	x16, x16, #0x108
    1fac:	br	x17

0000000000001fb0 <PyUnicode_FromKindAndData@plt>:
    1fb0:	adrp	x16, 18000 <PyMapping_Items>
    1fb4:	ldr	x17, [x16, #272]
    1fb8:	add	x16, x16, #0x110
    1fbc:	br	x17

0000000000001fc0 <PyCFunction_GetFunction@plt>:
    1fc0:	adrp	x16, 18000 <PyMapping_Items>
    1fc4:	ldr	x17, [x16, #280]
    1fc8:	add	x16, x16, #0x118
    1fcc:	br	x17

0000000000001fd0 <PyDict_New@plt>:
    1fd0:	adrp	x16, 18000 <PyMapping_Items>
    1fd4:	ldr	x17, [x16, #288]
    1fd8:	add	x16, x16, #0x120
    1fdc:	br	x17

0000000000001fe0 <PyUnicode_FromString@plt>:
    1fe0:	adrp	x16, 18000 <PyMapping_Items>
    1fe4:	ldr	x17, [x16, #296]
    1fe8:	add	x16, x16, #0x128
    1fec:	br	x17

0000000000001ff0 <PyObject_GetIter@plt>:
    1ff0:	adrp	x16, 18000 <PyMapping_Items>
    1ff4:	ldr	x17, [x16, #304]
    1ff8:	add	x16, x16, #0x130
    1ffc:	br	x17

0000000000002000 <PyUnicode_InternFromString@plt>:
    2000:	adrp	x16, 18000 <PyMapping_Items>
    2004:	ldr	x17, [x16, #312]
    2008:	add	x16, x16, #0x138
    200c:	br	x17

0000000000002010 <PyModule_AddObject@plt>:
    2010:	adrp	x16, 18000 <PyMapping_Items>
    2014:	ldr	x17, [x16, #320]
    2018:	add	x16, x16, #0x140
    201c:	br	x17

0000000000002020 <PyDict_SetItem@plt>:
    2020:	adrp	x16, 18000 <PyMapping_Items>
    2024:	ldr	x17, [x16, #328]
    2028:	add	x16, x16, #0x148
    202c:	br	x17

0000000000002030 <PyType_IsSubtype@plt>:
    2030:	adrp	x16, 18000 <PyMapping_Items>
    2034:	ldr	x17, [x16, #336]
    2038:	add	x16, x16, #0x150
    203c:	br	x17

0000000000002040 <PyErr_Format@plt>:
    2040:	adrp	x16, 18000 <PyMapping_Items>
    2044:	ldr	x17, [x16, #344]
    2048:	add	x16, x16, #0x158
    204c:	br	x17

0000000000002050 <PyUnicode_FromStringAndSize@plt>:
    2050:	adrp	x16, 18000 <PyMapping_Items>
    2054:	ldr	x17, [x16, #352]
    2058:	add	x16, x16, #0x160
    205c:	br	x17

0000000000002060 <PyLong_FromString@plt>:
    2060:	adrp	x16, 18000 <PyMapping_Items>
    2064:	ldr	x17, [x16, #360]
    2068:	add	x16, x16, #0x168
    206c:	br	x17

0000000000002070 <_PyAccu_FinishAsList@plt>:
    2070:	adrp	x16, 18000 <PyMapping_Items>
    2074:	ldr	x17, [x16, #368]
    2078:	add	x16, x16, #0x170
    207c:	br	x17

0000000000002080 <PyUnicode_New@plt>:
    2080:	adrp	x16, 18000 <PyMapping_Items>
    2084:	ldr	x17, [x16, #376]
    2088:	add	x16, x16, #0x178
    208c:	br	x17

0000000000002090 <PyTuple_Pack@plt>:
    2090:	adrp	x16, 18000 <PyMapping_Items>
    2094:	ldr	x17, [x16, #384]
    2098:	add	x16, x16, #0x180
    209c:	br	x17

00000000000020a0 <PyObject_GC_UnTrack@plt>:
    20a0:	adrp	x16, 18000 <PyMapping_Items>
    20a4:	ldr	x17, [x16, #392]
    20a8:	add	x16, x16, #0x188
    20ac:	br	x17

00000000000020b0 <PyDict_GetItemWithError@plt>:
    20b0:	adrp	x16, 18000 <PyMapping_Items>
    20b4:	ldr	x17, [x16, #400]
    20b8:	add	x16, x16, #0x190
    20bc:	br	x17

00000000000020c0 <PyFloat_FromString@plt>:
    20c0:	adrp	x16, 18000 <PyMapping_Items>
    20c4:	ldr	x17, [x16, #408]
    20c8:	add	x16, x16, #0x198
    20cc:	br	x17

00000000000020d0 <PySequence_Fast@plt>:
    20d0:	adrp	x16, 18000 <PyMapping_Items>
    20d4:	ldr	x17, [x16, #416]
    20d8:	add	x16, x16, #0x1a0
    20dc:	br	x17

Disassembly of section .text:

00000000000020e0 <PyInit__json@@Base-0x4608>:
    20e0:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    20e4:	ldr	x0, [x0, #4000]
    20e8:	cbz	x0, 20f0 <PySequence_Fast@plt+0x20>
    20ec:	b	1ef0 <__gmon_start__@plt>
    20f0:	ret
    20f4:	nop
    20f8:	adrp	x0, 18000 <PyInit__json@@Base+0x11918>
    20fc:	add	x0, x0, #0x8e8
    2100:	adrp	x1, 18000 <PyInit__json@@Base+0x11918>
    2104:	add	x1, x1, #0x8e8
    2108:	cmp	x1, x0
    210c:	b.eq	2124 <PySequence_Fast@plt+0x54>  // b.none
    2110:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    2114:	ldr	x1, [x1, #3944]
    2118:	cbz	x1, 2124 <PySequence_Fast@plt+0x54>
    211c:	mov	x16, x1
    2120:	br	x16
    2124:	ret
    2128:	adrp	x0, 18000 <PyInit__json@@Base+0x11918>
    212c:	add	x0, x0, #0x8e8
    2130:	adrp	x1, 18000 <PyInit__json@@Base+0x11918>
    2134:	add	x1, x1, #0x8e8
    2138:	sub	x1, x1, x0
    213c:	lsr	x2, x1, #63
    2140:	add	x1, x2, x1, asr #3
    2144:	cmp	xzr, x1, asr #1
    2148:	asr	x1, x1, #1
    214c:	b.eq	2164 <PySequence_Fast@plt+0x94>  // b.none
    2150:	adrp	x2, 17000 <PyInit__json@@Base+0x10918>
    2154:	ldr	x2, [x2, #4056]
    2158:	cbz	x2, 2164 <PySequence_Fast@plt+0x94>
    215c:	mov	x16, x2
    2160:	br	x16
    2164:	ret
    2168:	stp	x29, x30, [sp, #-32]!
    216c:	mov	x29, sp
    2170:	str	x19, [sp, #16]
    2174:	adrp	x19, 18000 <PyInit__json@@Base+0x11918>
    2178:	ldrb	w0, [x19, #2280]
    217c:	cbnz	w0, 21a4 <PySequence_Fast@plt+0xd4>
    2180:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    2184:	ldr	x0, [x0, #3960]
    2188:	cbz	x0, 2198 <PySequence_Fast@plt+0xc8>
    218c:	adrp	x0, 18000 <PyInit__json@@Base+0x11918>
    2190:	ldr	x0, [x0, #424]
    2194:	bl	1de0 <__cxa_finalize@plt>
    2198:	bl	20f8 <PySequence_Fast@plt+0x28>
    219c:	mov	w0, #0x1                   	// #1
    21a0:	strb	w0, [x19, #2280]
    21a4:	ldr	x19, [sp, #16]
    21a8:	ldp	x29, x30, [sp], #32
    21ac:	ret
    21b0:	b	2128 <PySequence_Fast@plt+0x58>
    21b4:	nop
    21b8:	sub	sp, sp, #0x90
    21bc:	add	x3, sp, #0x5c
    21c0:	add	x4, sp, #0x58
    21c4:	add	x5, sp, #0x54
    21c8:	add	x6, sp, #0x88
    21cc:	stp	x29, x30, [sp, #48]
    21d0:	add	x29, sp, #0x30
    21d4:	add	x7, sp, #0x80
    21d8:	stp	x7, x6, [sp]
    21dc:	add	x7, sp, #0x78
    21e0:	add	x6, sp, #0x70
    21e4:	stp	x5, x4, [sp, #16]
    21e8:	add	x5, sp, #0x68
    21ec:	add	x4, sp, #0x60
    21f0:	str	x3, [sp, #32]
    21f4:	adrp	x3, 18000 <PyInit__json@@Base+0x11918>
    21f8:	add	x3, x3, #0x1b0
    21fc:	str	x19, [sp, #64]
    2200:	mov	x19, x0
    2204:	mov	x0, x1
    2208:	mov	x1, x2
    220c:	adrp	x2, 6000 <PySequence_Fast@plt+0x3f30>
    2210:	add	x2, x2, #0x820
    2214:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    2218:	cbz	w0, 22f4 <PySequence_Fast@plt+0x224>
    221c:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    2220:	ldr	x1, [sp, #96]
    2224:	ldr	x0, [x0, #4016]
    2228:	cmp	x1, x0
    222c:	b.eq	223c <PySequence_Fast@plt+0x16c>  // b.none
    2230:	ldr	x0, [x1, #8]
    2234:	ldr	x1, [x0, #168]
    2238:	tbz	w1, #29, 2344 <PySequence_Fast@plt+0x274>
    223c:	ldr	x2, [x19, #304]
    2240:	mov	x0, x19
    2244:	mov	x1, #0x0                   	// #0
    2248:	blr	x2
    224c:	mov	x19, x0
    2250:	cbz	x0, 22f4 <PySequence_Fast@plt+0x224>
    2254:	ldp	w2, w1, [sp, #84]
    2258:	strb	w2, [x0, #64]
    225c:	strb	w1, [x0, #65]
    2260:	adrp	x6, 17000 <PyInit__json@@Base+0x10918>
    2264:	ldp	x0, x3, [sp, #112]
    2268:	ldr	x6, [x6, #4064]
    226c:	ldr	w8, [sp, #92]
    2270:	ldp	x5, x4, [sp, #96]
    2274:	ldr	x7, [x0, #8]
    2278:	stp	x5, x4, [x19, #16]
    227c:	ldp	x2, x1, [sp, #128]
    2280:	stp	x0, x3, [x19, #32]
    2284:	cmp	x7, x6
    2288:	stp	x2, x1, [x19, #48]
    228c:	str	w8, [x19, #68]
    2290:	str	xzr, [x19, #72]
    2294:	b.eq	230c <PySequence_Fast@plt+0x23c>  // b.none
    2298:	ldr	x6, [x5]
    229c:	add	x6, x6, #0x1
    22a0:	str	x6, [x5]
    22a4:	ldr	x5, [x4]
    22a8:	add	x5, x5, #0x1
    22ac:	str	x5, [x4]
    22b0:	ldr	x4, [x0]
    22b4:	add	x4, x4, #0x1
    22b8:	str	x4, [x0]
    22bc:	ldr	x0, [x3]
    22c0:	add	x0, x0, #0x1
    22c4:	str	x0, [x3]
    22c8:	ldr	x0, [x2]
    22cc:	add	x0, x0, #0x1
    22d0:	str	x0, [x2]
    22d4:	ldr	x0, [x1]
    22d8:	add	x0, x0, #0x1
    22dc:	str	x0, [x1]
    22e0:	mov	x0, x19
    22e4:	ldp	x29, x30, [sp, #48]
    22e8:	ldr	x19, [sp, #64]
    22ec:	add	sp, sp, #0x90
    22f0:	ret
    22f4:	mov	x19, #0x0                   	// #0
    22f8:	mov	x0, x19
    22fc:	ldp	x29, x30, [sp, #48]
    2300:	ldr	x19, [sp, #64]
    2304:	add	sp, sp, #0x90
    2308:	ret
    230c:	bl	1fc0 <PyCFunction_GetFunction@plt>
    2310:	adrp	x1, 2000 <PyUnicode_InternFromString@plt>
    2314:	add	x1, x1, #0xad0
    2318:	cmp	x0, x1
    231c:	adrp	x1, 2000 <PyUnicode_InternFromString@plt>
    2320:	add	x1, x1, #0x368
    2324:	ccmp	x0, x1, #0x4, ne  // ne = any
    2328:	ldr	x5, [x19, #16]
    232c:	b.ne	2334 <PySequence_Fast@plt+0x264>  // b.any
    2330:	str	x0, [x19, #72]
    2334:	ldp	x4, x0, [x19, #24]
    2338:	ldp	x3, x2, [x19, #40]
    233c:	ldr	x1, [x19, #56]
    2340:	b	2298 <PySequence_Fast@plt+0x1c8>
    2344:	adrp	x3, 17000 <PyInit__json@@Base+0x10918>
    2348:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    234c:	ldr	x2, [x0, #24]
    2350:	add	x1, x1, #0x838
    2354:	ldr	x3, [x3, #3976]
    2358:	mov	x19, #0x0                   	// #0
    235c:	ldr	x0, [x3]
    2360:	bl	2040 <PyErr_Format@plt>
    2364:	b	22e0 <PySequence_Fast@plt+0x210>
    2368:	stp	x29, x30, [sp, #-48]!
    236c:	mov	x29, sp
    2370:	ldr	x0, [x1, #8]
    2374:	stp	x19, x20, [sp, #16]
    2378:	mov	x20, x1
    237c:	ldr	x1, [x0, #168]
    2380:	tbz	w1, #28, 2620 <PySequence_Fast@plt+0x550>
    2384:	ldrb	w0, [x20, #32]
    2388:	tbz	w0, #7, 246c <PySequence_Fast@plt+0x39c>
    238c:	str	x21, [sp, #32]
    2390:	and	w2, w0, #0x20
    2394:	ldr	x21, [x20, #16]
    2398:	tbnz	w0, #6, 2490 <PySequence_Fast@plt+0x3c0>
    239c:	and	w0, w0, #0x1c
    23a0:	mov	w1, #0xff                  	// #255
    23a4:	cmp	w0, #0x4
    23a8:	b.eq	23bc <PySequence_Fast@plt+0x2ec>  // b.none
    23ac:	cmp	w0, #0x8
    23b0:	mov	w1, #0x10ffff              	// #1114111
    23b4:	mov	w0, #0xffff                	// #65535
    23b8:	csel	w1, w1, w0, ne  // ne = any
    23bc:	add	x19, x20, #0x48
    23c0:	cbz	w2, 2498 <PySequence_Fast@plt+0x3c8>
    23c4:	ldrb	w6, [x20, #32]
    23c8:	cmp	x21, #0x0
    23cc:	mov	x0, #0x2                   	// #2
    23d0:	ubfx	x6, x6, #2, #3
    23d4:	b.le	24fc <PySequence_Fast@plt+0x42c>
    23d8:	mov	x5, #0xfffffffffffffffd    	// #-3
    23dc:	mov	x9, #0xfffffffffffffff9    	// #-7
    23e0:	mov	x7, x0
    23e4:	mov	x3, #0x0                   	// #0
    23e8:	movk	x5, #0x7fff, lsl #48
    23ec:	mov	x11, #0x7ffffffffffffffe    	// #9223372036854775806
    23f0:	mov	x10, #0x1                   	// #1
    23f4:	movk	x9, #0x7fff, lsl #48
    23f8:	mov	x8, #0x6                   	// #6
    23fc:	b	2428 <PySequence_Fast@plt+0x358>
    2400:	cmp	w2, #0x8
    2404:	csel	x4, x9, x5, cc  // cc = lo, ul, last
    2408:	csel	x2, x8, x7, cc  // cc = lo, ul, last
    240c:	cmp	x4, x0
    2410:	b.lt	24b4 <PySequence_Fast@plt+0x3e4>  // b.tstop
    2414:	nop
    2418:	add	x3, x3, #0x1
    241c:	add	x0, x0, x2
    2420:	cmp	x3, x21
    2424:	b.eq	24fc <PySequence_Fast@plt+0x42c>  // b.none
    2428:	cmp	w6, #0x1
    242c:	b.eq	24f4 <PySequence_Fast@plt+0x424>  // b.none
    2430:	cmp	w6, #0x2
    2434:	b.eq	24ec <PySequence_Fast@plt+0x41c>  // b.none
    2438:	ldr	w2, [x19, x3, lsl #2]
    243c:	cmp	w2, #0x22
    2440:	b.eq	24e0 <PySequence_Fast@plt+0x410>  // b.none
    2444:	b.hi	24a0 <PySequence_Fast@plt+0x3d0>  // b.pmore
    2448:	cmp	w2, #0xa
    244c:	b.ls	2400 <PySequence_Fast@plt+0x330>  // b.plast
    2450:	sub	w4, w2, #0xc
    2454:	cmp	w4, #0x1
    2458:	b.ls	24e0 <PySequence_Fast@plt+0x410>  // b.plast
    245c:	cmp	w2, #0x20
    2460:	csel	x4, x9, x11, cc  // cc = lo, ul, last
    2464:	csel	x2, x8, x10, cc  // cc = lo, ul, last
    2468:	b	240c <PySequence_Fast@plt+0x33c>
    246c:	mov	x0, x20
    2470:	bl	1db0 <_PyUnicode_Ready@plt>
    2474:	cmn	w0, #0x1
    2478:	b.eq	263c <PySequence_Fast@plt+0x56c>  // b.none
    247c:	ldrb	w0, [x20, #32]
    2480:	str	x21, [sp, #32]
    2484:	and	w2, w0, #0x20
    2488:	ldr	x21, [x20, #16]
    248c:	tbz	w0, #6, 239c <PySequence_Fast@plt+0x2cc>
    2490:	mov	w1, #0x7f                  	// #127
    2494:	cbnz	w2, 264c <PySequence_Fast@plt+0x57c>
    2498:	ldr	x19, [x20, #72]
    249c:	b	23c4 <PySequence_Fast@plt+0x2f4>
    24a0:	cmp	w2, #0x5c
    24a4:	csel	x4, x11, x5, ne  // ne = any
    24a8:	csel	x2, x10, x7, ne  // ne = any
    24ac:	cmp	x4, x0
    24b0:	b.ge	2418 <PySequence_Fast@plt+0x348>  // b.tcont
    24b4:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    24b8:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    24bc:	add	x1, x1, #0x878
    24c0:	ldr	x0, [x0, #4008]
    24c4:	ldr	x0, [x0]
    24c8:	bl	1e60 <PyErr_SetString@plt>
    24cc:	ldr	x21, [sp, #32]
    24d0:	mov	x0, #0x0                   	// #0
    24d4:	ldp	x19, x20, [sp, #16]
    24d8:	ldp	x29, x30, [sp], #48
    24dc:	ret
    24e0:	mov	x4, x5
    24e4:	mov	x2, #0x2                   	// #2
    24e8:	b	240c <PySequence_Fast@plt+0x33c>
    24ec:	ldrh	w2, [x19, x3, lsl #1]
    24f0:	b	243c <PySequence_Fast@plt+0x36c>
    24f4:	ldrb	w2, [x19, x3]
    24f8:	b	243c <PySequence_Fast@plt+0x36c>
    24fc:	bl	2080 <PyUnicode_New@plt>
    2500:	cbz	x0, 2ab4 <PySequence_Fast@plt+0x9e4>
    2504:	ldrb	w1, [x0, #32]
    2508:	ldrb	w2, [x0, #32]
    250c:	ubfx	x1, x1, #2, #3
    2510:	and	w3, w2, #0x20
    2514:	cmp	w1, #0x1
    2518:	b.eq	27b0 <PySequence_Fast@plt+0x6e0>  // b.none
    251c:	cmp	w1, #0x2
    2520:	b.eq	2658 <PySequence_Fast@plt+0x588>  // b.none
    2524:	cbz	w3, 2950 <PySequence_Fast@plt+0x880>
    2528:	tst	x2, #0x40
    252c:	add	x4, x0, #0x30
    2530:	add	x1, x0, #0x48
    2534:	csel	x4, x1, x4, eq  // eq = none
    2538:	mov	w1, #0x22                  	// #34
    253c:	str	w1, [x4]
    2540:	cmp	x21, #0x0
    2544:	b.le	2ac0 <PySequence_Fast@plt+0x9f0>
    2548:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    254c:	add	x21, x19, x21, lsl #2
    2550:	mov	x3, #0x1                   	// #1
    2554:	mov	w9, #0x5c                  	// #92
    2558:	ldr	x1, [x1, #4048]
    255c:	mov	w16, #0x66                  	// #102
    2560:	mov	w17, #0x75                  	// #117
    2564:	mov	w15, #0x30                  	// #48
    2568:	mov	w14, #0x72                  	// #114
    256c:	mov	w12, #0x74                  	// #116
    2570:	mov	w11, #0x6e                  	// #110
    2574:	mov	w10, #0x62                  	// #98
    2578:	ldr	x13, [x1]
    257c:	b	25b4 <PySequence_Fast@plt+0x4e4>
    2580:	cmp	w1, #0x9
    2584:	b.eq	2768 <PySequence_Fast@plt+0x698>  // b.none
    2588:	cmp	w1, #0xa
    258c:	b.ne	2728 <PySequence_Fast@plt+0x658>  // b.any
    2590:	add	x2, x2, #0x8
    2594:	str	w9, [x6]
    2598:	add	x3, x3, #0x2
    259c:	str	w11, [x5]
    25a0:	add	x5, x4, x2
    25a4:	nop
    25a8:	add	x19, x19, #0x4
    25ac:	cmp	x21, x19
    25b0:	b.eq	2608 <PySequence_Fast@plt+0x538>  // b.none
    25b4:	lsl	x2, x3, #2
    25b8:	ldr	w1, [x19]
    25bc:	add	x7, x2, #0x4
    25c0:	add	x6, x4, x2
    25c4:	add	x5, x4, x7
    25c8:	add	x8, x3, #0x1
    25cc:	cmp	w1, #0xc
    25d0:	b.eq	2780 <PySequence_Fast@plt+0x6b0>  // b.none
    25d4:	b.ls	2580 <PySequence_Fast@plt+0x4b0>  // b.plast
    25d8:	cmp	w1, #0x22
    25dc:	b.eq	2798 <PySequence_Fast@plt+0x6c8>  // b.none
    25e0:	cmp	w1, #0x5c
    25e4:	b.ne	2748 <PySequence_Fast@plt+0x678>  // b.any
    25e8:	str	w1, [x6]
    25ec:	add	x2, x2, #0x8
    25f0:	str	w1, [x5]
    25f4:	add	x19, x19, #0x4
    25f8:	add	x3, x3, #0x2
    25fc:	add	x5, x4, x2
    2600:	cmp	x21, x19
    2604:	b.ne	25b4 <PySequence_Fast@plt+0x4e4>  // b.any
    2608:	mov	w1, #0x22                  	// #34
    260c:	ldr	x21, [sp, #32]
    2610:	str	w1, [x5]
    2614:	ldp	x19, x20, [sp, #16]
    2618:	ldp	x29, x30, [sp], #48
    261c:	ret
    2620:	adrp	x3, 17000 <PyInit__json@@Base+0x10918>
    2624:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    2628:	ldr	x2, [x0, #24]
    262c:	add	x1, x1, #0x898
    2630:	ldr	x3, [x3, #3976]
    2634:	ldr	x0, [x3]
    2638:	bl	2040 <PyErr_Format@plt>
    263c:	mov	x0, #0x0                   	// #0
    2640:	ldp	x19, x20, [sp, #16]
    2644:	ldp	x29, x30, [sp], #48
    2648:	ret
    264c:	add	x19, x20, #0x30
    2650:	mov	w1, #0x7f                  	// #127
    2654:	b	23c4 <PySequence_Fast@plt+0x2f4>
    2658:	cbnz	w3, 29b4 <PySequence_Fast@plt+0x8e4>
    265c:	ldr	x4, [x0, #72]
    2660:	mov	w1, #0x22                  	// #34
    2664:	strh	w1, [x4]
    2668:	cmp	x21, #0x0
    266c:	b.le	2a50 <PySequence_Fast@plt+0x980>
    2670:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    2674:	add	x21, x19, x21, lsl #1
    2678:	mov	x3, #0x1                   	// #1
    267c:	mov	w9, #0x5c                  	// #92
    2680:	ldr	x1, [x1, #4048]
    2684:	mov	w16, #0x66                  	// #102
    2688:	mov	w17, #0x75                  	// #117
    268c:	mov	w15, #0x30                  	// #48
    2690:	mov	w14, #0x72                  	// #114
    2694:	mov	w12, #0x74                  	// #116
    2698:	mov	w11, #0x6e                  	// #110
    269c:	mov	w10, #0x62                  	// #98
    26a0:	ldr	x13, [x1]
    26a4:	b	26dc <PySequence_Fast@plt+0x60c>
    26a8:	cmp	w1, #0x9
    26ac:	b.eq	2a08 <PySequence_Fast@plt+0x938>  // b.none
    26b0:	cmp	w1, #0xa
    26b4:	b.ne	29c8 <PySequence_Fast@plt+0x8f8>  // b.any
    26b8:	add	x2, x2, #0x4
    26bc:	strh	w9, [x8]
    26c0:	add	x3, x3, #0x2
    26c4:	strh	w11, [x5]
    26c8:	add	x5, x4, x2
    26cc:	nop
    26d0:	add	x19, x19, #0x2
    26d4:	cmp	x21, x19
    26d8:	b.eq	2a58 <PySequence_Fast@plt+0x988>  // b.none
    26dc:	lsl	x2, x3, #1
    26e0:	ldrh	w1, [x19]
    26e4:	add	x6, x2, #0x2
    26e8:	add	x8, x4, x2
    26ec:	add	x5, x4, x6
    26f0:	cmp	w1, #0xc
    26f4:	add	x7, x3, #0x1
    26f8:	b.eq	2a20 <PySequence_Fast@plt+0x950>  // b.none
    26fc:	b.ls	26a8 <PySequence_Fast@plt+0x5d8>  // b.plast
    2700:	cmp	w1, #0x22
    2704:	b.eq	2a38 <PySequence_Fast@plt+0x968>  // b.none
    2708:	cmp	w1, #0x5c
    270c:	b.ne	29e8 <PySequence_Fast@plt+0x918>  // b.any
    2710:	add	x2, x2, #0x4
    2714:	strh	w1, [x8]
    2718:	add	x3, x3, #0x2
    271c:	strh	w1, [x5]
    2720:	add	x5, x4, x2
    2724:	b	26d0 <PySequence_Fast@plt+0x600>
    2728:	cmp	w1, #0x8
    272c:	b.ne	2908 <PySequence_Fast@plt+0x838>  // b.any
    2730:	add	x2, x2, #0x8
    2734:	str	w9, [x6]
    2738:	add	x3, x3, #0x2
    273c:	str	w10, [x5]
    2740:	add	x5, x4, x2
    2744:	b	25a8 <PySequence_Fast@plt+0x4d8>
    2748:	cmp	w1, #0xd
    274c:	b.ne	293c <PySequence_Fast@plt+0x86c>  // b.any
    2750:	add	x2, x2, #0x8
    2754:	str	w9, [x6]
    2758:	add	x3, x3, #0x2
    275c:	str	w14, [x5]
    2760:	add	x5, x4, x2
    2764:	b	25a8 <PySequence_Fast@plt+0x4d8>
    2768:	add	x2, x2, #0x8
    276c:	str	w9, [x6]
    2770:	add	x3, x3, #0x2
    2774:	str	w12, [x5]
    2778:	add	x5, x4, x2
    277c:	b	25a8 <PySequence_Fast@plt+0x4d8>
    2780:	add	x2, x2, #0x8
    2784:	str	w9, [x4, x3, lsl #2]
    2788:	add	x5, x4, x2
    278c:	add	x3, x3, #0x2
    2790:	str	w16, [x4, x7]
    2794:	b	25a8 <PySequence_Fast@plt+0x4d8>
    2798:	add	x2, x2, #0x8
    279c:	str	w9, [x6]
    27a0:	add	x3, x3, #0x2
    27a4:	str	w1, [x5]
    27a8:	add	x5, x4, x2
    27ac:	b	25a8 <PySequence_Fast@plt+0x4d8>
    27b0:	cbz	w3, 29ac <PySequence_Fast@plt+0x8dc>
    27b4:	tst	x2, #0x40
    27b8:	add	x3, x0, #0x30
    27bc:	add	x1, x0, #0x48
    27c0:	csel	x3, x1, x3, eq  // eq = none
    27c4:	mov	w1, #0x22                  	// #34
    27c8:	strb	w1, [x3]
    27cc:	cmp	x21, #0x0
    27d0:	b.le	2ac8 <PySequence_Fast@plt+0x9f8>
    27d4:	adrp	x8, 17000 <PyInit__json@@Base+0x10918>
    27d8:	add	x21, x19, x21
    27dc:	mov	x2, #0x1                   	// #1
    27e0:	mov	w7, #0x5c                  	// #92
    27e4:	ldr	x8, [x8, #4048]
    27e8:	mov	w14, #0x66                  	// #102
    27ec:	mov	w15, #0x75                  	// #117
    27f0:	mov	w13, #0x30                  	// #48
    27f4:	mov	w12, #0x72                  	// #114
    27f8:	mov	w11, #0x74                  	// #116
    27fc:	mov	w10, #0x6e                  	// #110
    2800:	mov	w9, #0x62                  	// #98
    2804:	b	2834 <PySequence_Fast@plt+0x764>
    2808:	cmp	w1, #0x9
    280c:	b.eq	28e0 <PySequence_Fast@plt+0x810>  // b.none
    2810:	cmp	w1, #0xa
    2814:	b.ne	2894 <PySequence_Fast@plt+0x7c4>  // b.any
    2818:	add	x2, x2, #0x2
    281c:	strb	w7, [x6]
    2820:	strb	w10, [x4]
    2824:	add	x4, x3, x2
    2828:	add	x19, x19, #0x1
    282c:	cmp	x21, x19
    2830:	b.eq	287c <PySequence_Fast@plt+0x7ac>  // b.none
    2834:	ldrb	w1, [x19]
    2838:	add	x5, x2, #0x1
    283c:	add	x4, x3, x5
    2840:	add	x6, x3, x2
    2844:	cmp	w1, #0xc
    2848:	b.eq	28cc <PySequence_Fast@plt+0x7fc>  // b.none
    284c:	b.ls	2808 <PySequence_Fast@plt+0x738>  // b.plast
    2850:	cmp	w1, #0x22
    2854:	b.eq	28f4 <PySequence_Fast@plt+0x824>  // b.none
    2858:	cmp	w1, #0x5c
    285c:	b.ne	28b0 <PySequence_Fast@plt+0x7e0>  // b.any
    2860:	strb	w1, [x6]
    2864:	add	x2, x2, #0x2
    2868:	strb	w1, [x4]
    286c:	add	x19, x19, #0x1
    2870:	add	x4, x3, x2
    2874:	cmp	x21, x19
    2878:	b.ne	2834 <PySequence_Fast@plt+0x764>  // b.any
    287c:	mov	w1, #0x22                  	// #34
    2880:	strb	w1, [x4]
    2884:	ldp	x19, x20, [sp, #16]
    2888:	ldr	x21, [sp, #32]
    288c:	ldp	x29, x30, [sp], #48
    2890:	ret
    2894:	cmp	w1, #0x8
    2898:	b.ne	296c <PySequence_Fast@plt+0x89c>  // b.any
    289c:	add	x2, x2, #0x2
    28a0:	strb	w7, [x6]
    28a4:	strb	w9, [x4]
    28a8:	add	x4, x3, x2
    28ac:	b	2828 <PySequence_Fast@plt+0x758>
    28b0:	cmp	w1, #0xd
    28b4:	b.ne	2958 <PySequence_Fast@plt+0x888>  // b.any
    28b8:	add	x2, x2, #0x2
    28bc:	strb	w7, [x6]
    28c0:	strb	w12, [x4]
    28c4:	add	x4, x3, x2
    28c8:	b	2828 <PySequence_Fast@plt+0x758>
    28cc:	strb	w7, [x3, x2]
    28d0:	add	x2, x2, #0x2
    28d4:	add	x4, x3, x2
    28d8:	strb	w14, [x3, x5]
    28dc:	b	2828 <PySequence_Fast@plt+0x758>
    28e0:	add	x2, x2, #0x2
    28e4:	strb	w7, [x6]
    28e8:	strb	w11, [x4]
    28ec:	add	x4, x3, x2
    28f0:	b	2828 <PySequence_Fast@plt+0x758>
    28f4:	add	x2, x2, #0x2
    28f8:	strb	w7, [x6]
    28fc:	strb	w1, [x4]
    2900:	add	x4, x3, x2
    2904:	b	2828 <PySequence_Fast@plt+0x758>
    2908:	str	w9, [x6]
    290c:	lsr	w7, w1, #4
    2910:	str	w17, [x5]
    2914:	add	x2, x2, #0x18
    2918:	stp	w15, w15, [x6, #8]
    291c:	and	w1, w1, #0xf
    2920:	add	x5, x4, x2
    2924:	add	x3, x3, #0x6
    2928:	ldrb	w2, [x13, w7, uxtw]
    292c:	str	w2, [x6, #16]
    2930:	ldrb	w1, [x13, w1, uxtw]
    2934:	str	w1, [x6, #20]
    2938:	b	25a8 <PySequence_Fast@plt+0x4d8>
    293c:	cmp	w1, #0x1f
    2940:	b.ls	2908 <PySequence_Fast@plt+0x838>  // b.plast
    2944:	mov	x3, x8
    2948:	str	w1, [x6]
    294c:	b	25a8 <PySequence_Fast@plt+0x4d8>
    2950:	ldr	x4, [x0, #72]
    2954:	b	2538 <PySequence_Fast@plt+0x468>
    2958:	cmp	w1, #0x1f
    295c:	b.ls	296c <PySequence_Fast@plt+0x89c>  // b.plast
    2960:	mov	x2, x5
    2964:	strb	w1, [x6]
    2968:	b	2828 <PySequence_Fast@plt+0x758>
    296c:	strb	w7, [x6]
    2970:	lsr	w17, w1, #4
    2974:	strb	w15, [x4]
    2978:	and	x1, x1, #0xf
    297c:	strb	w13, [x6, #2]
    2980:	add	x5, x2, #0x5
    2984:	strb	w13, [x6, #3]
    2988:	add	x2, x2, #0x6
    298c:	add	x4, x3, x2
    2990:	ldr	x16, [x8]
    2994:	ldrb	w16, [x16, w17, uxtw]
    2998:	strb	w16, [x6, #4]
    299c:	ldr	x6, [x8]
    29a0:	ldrb	w1, [x6, x1]
    29a4:	strb	w1, [x3, x5]
    29a8:	b	2828 <PySequence_Fast@plt+0x758>
    29ac:	ldr	x3, [x0, #72]
    29b0:	b	27c4 <PySequence_Fast@plt+0x6f4>
    29b4:	tst	x2, #0x40
    29b8:	add	x4, x0, #0x30
    29bc:	add	x1, x0, #0x48
    29c0:	csel	x4, x1, x4, eq  // eq = none
    29c4:	b	2660 <PySequence_Fast@plt+0x590>
    29c8:	cmp	w1, #0x8
    29cc:	b.ne	2a68 <PySequence_Fast@plt+0x998>  // b.any
    29d0:	add	x2, x2, #0x4
    29d4:	strh	w9, [x8]
    29d8:	add	x3, x3, #0x2
    29dc:	strh	w10, [x5]
    29e0:	add	x5, x4, x2
    29e4:	b	26d0 <PySequence_Fast@plt+0x600>
    29e8:	cmp	w1, #0xd
    29ec:	b.ne	2aa0 <PySequence_Fast@plt+0x9d0>  // b.any
    29f0:	add	x2, x2, #0x4
    29f4:	strh	w9, [x8]
    29f8:	add	x3, x3, #0x2
    29fc:	strh	w14, [x5]
    2a00:	add	x5, x4, x2
    2a04:	b	26d0 <PySequence_Fast@plt+0x600>
    2a08:	add	x2, x2, #0x4
    2a0c:	strh	w9, [x8]
    2a10:	add	x3, x3, #0x2
    2a14:	strh	w12, [x5]
    2a18:	add	x5, x4, x2
    2a1c:	b	26d0 <PySequence_Fast@plt+0x600>
    2a20:	add	x5, x2, #0x4
    2a24:	strh	w9, [x4, x2]
    2a28:	add	x5, x4, x5
    2a2c:	add	x3, x3, #0x2
    2a30:	strh	w16, [x4, x6]
    2a34:	b	26d0 <PySequence_Fast@plt+0x600>
    2a38:	add	x2, x2, #0x4
    2a3c:	strh	w9, [x8]
    2a40:	add	x3, x3, #0x2
    2a44:	strh	w1, [x5]
    2a48:	add	x5, x4, x2
    2a4c:	b	26d0 <PySequence_Fast@plt+0x600>
    2a50:	add	x5, x4, #0x2
    2a54:	nop
    2a58:	mov	w1, #0x22                  	// #34
    2a5c:	strh	w1, [x5]
    2a60:	ldr	x21, [sp, #32]
    2a64:	b	24d4 <PySequence_Fast@plt+0x404>
    2a68:	strh	w9, [x8]
    2a6c:	lsr	w6, w1, #4
    2a70:	strh	w17, [x5]
    2a74:	add	x2, x2, #0xc
    2a78:	strh	w15, [x8, #4]
    2a7c:	and	x1, x1, #0xf
    2a80:	strh	w15, [x8, #6]
    2a84:	add	x5, x4, x2
    2a88:	add	x3, x3, #0x6
    2a8c:	ldrb	w2, [x13, w6, uxtw]
    2a90:	strh	w2, [x8, #8]
    2a94:	ldrb	w1, [x13, x1]
    2a98:	strh	w1, [x8, #10]
    2a9c:	b	26d0 <PySequence_Fast@plt+0x600>
    2aa0:	cmp	w1, #0x1f
    2aa4:	b.ls	2a68 <PySequence_Fast@plt+0x998>  // b.plast
    2aa8:	mov	x3, x7
    2aac:	strh	w1, [x8]
    2ab0:	b	26d0 <PySequence_Fast@plt+0x600>
    2ab4:	mov	x0, #0x0                   	// #0
    2ab8:	ldr	x21, [sp, #32]
    2abc:	b	2640 <PySequence_Fast@plt+0x570>
    2ac0:	add	x5, x4, #0x4
    2ac4:	b	2608 <PySequence_Fast@plt+0x538>
    2ac8:	add	x4, x3, #0x1
    2acc:	b	287c <PySequence_Fast@plt+0x7ac>
    2ad0:	stp	x29, x30, [sp, #-96]!
    2ad4:	mov	x29, sp
    2ad8:	ldr	x0, [x1, #8]
    2adc:	stp	x19, x20, [sp, #16]
    2ae0:	mov	x19, x1
    2ae4:	ldr	x1, [x0, #168]
    2ae8:	tbz	w1, #28, 2d9c <PySequence_Fast@plt+0xccc>
    2aec:	ldrb	w0, [x19, #32]
    2af0:	tbz	w0, #7, 2c10 <PySequence_Fast@plt+0xb40>
    2af4:	stp	x21, x22, [sp, #32]
    2af8:	ldr	x21, [x19, #16]
    2afc:	tbz	w0, #5, 2c30 <PySequence_Fast@plt+0xb60>
    2b00:	tst	x0, #0x40
    2b04:	add	x20, x19, #0x30
    2b08:	add	x0, x19, #0x48
    2b0c:	csel	x20, x0, x20, eq  // eq = none
    2b10:	ldrb	w19, [x19, #32]
    2b14:	cmp	x21, #0x0
    2b18:	mov	x0, #0x2                   	// #2
    2b1c:	ubfx	x19, x19, #2, #3
    2b20:	b.le	2c78 <PySequence_Fast@plt+0xba8>
    2b24:	mov	x4, #0xfffffffffffffffd    	// #-3
    2b28:	mov	x10, #0xfffffffffffffff3    	// #-13
    2b2c:	mov	x6, #0xfffffffffffffff9    	// #-7
    2b30:	mov	x8, x0
    2b34:	mov	x2, #0x0                   	// #0
    2b38:	mov	w12, #0x22                  	// #34
    2b3c:	mov	w11, #0x5e                  	// #94
    2b40:	movk	x4, #0x7fff, lsl #48
    2b44:	mov	w7, #0xffff                	// #65535
    2b48:	movk	x10, #0x7fff, lsl #48
    2b4c:	movk	x6, #0x7fff, lsl #48
    2b50:	mov	x9, #0xc                   	// #12
    2b54:	mov	x5, #0x6                   	// #6
    2b58:	b	2bb4 <PySequence_Fast@plt+0xae4>
    2b5c:	cmp	w19, #0x2
    2b60:	b.eq	2c70 <PySequence_Fast@plt+0xba0>  // b.none
    2b64:	ldr	w1, [x20, x2, lsl #2]
    2b68:	cmp	w1, #0x5c
    2b6c:	sub	w3, w1, #0x20
    2b70:	ccmp	w1, w12, #0x4, ne  // ne = any
    2b74:	ccmp	w3, w11, #0x2, ne  // ne = any
    2b78:	b.ls	2bd4 <PySequence_Fast@plt+0xb04>  // b.plast
    2b7c:	cmp	w1, #0x22
    2b80:	b.eq	2c64 <PySequence_Fast@plt+0xb94>  // b.none
    2b84:	b.hi	2c4c <PySequence_Fast@plt+0xb7c>  // b.pmore
    2b88:	cmp	w1, #0xa
    2b8c:	b.hi	2c38 <PySequence_Fast@plt+0xb68>  // b.pmore
    2b90:	cmp	w1, #0x8
    2b94:	csel	x3, x6, x4, cc  // cc = lo, ul, last
    2b98:	csel	x1, x5, x8, cc  // cc = lo, ul, last
    2b9c:	cmp	x0, x3
    2ba0:	b.gt	2be4 <PySequence_Fast@plt+0xb14>
    2ba4:	add	x2, x2, #0x1
    2ba8:	add	x0, x0, x1
    2bac:	cmp	x21, x2
    2bb0:	b.eq	2c78 <PySequence_Fast@plt+0xba8>  // b.none
    2bb4:	cmp	w19, #0x1
    2bb8:	b.ne	2b5c <PySequence_Fast@plt+0xa8c>  // b.any
    2bbc:	ldrb	w1, [x20, x2]
    2bc0:	cmp	w1, #0x5c
    2bc4:	sub	w3, w1, #0x20
    2bc8:	ccmp	w1, w12, #0x4, ne  // ne = any
    2bcc:	ccmp	w3, w11, #0x2, ne  // ne = any
    2bd0:	b.hi	2b7c <PySequence_Fast@plt+0xaac>  // b.pmore
    2bd4:	mov	x3, #0x7ffffffffffffffe    	// #9223372036854775806
    2bd8:	mov	x1, #0x1                   	// #1
    2bdc:	cmp	x0, x3
    2be0:	b.le	2ba4 <PySequence_Fast@plt+0xad4>
    2be4:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    2be8:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    2bec:	add	x1, x1, #0x878
    2bf0:	ldr	x0, [x0, #4008]
    2bf4:	ldr	x0, [x0]
    2bf8:	bl	1e60 <PyErr_SetString@plt>
    2bfc:	mov	x0, #0x0                   	// #0
    2c00:	ldp	x19, x20, [sp, #16]
    2c04:	ldp	x21, x22, [sp, #32]
    2c08:	ldp	x29, x30, [sp], #96
    2c0c:	ret
    2c10:	mov	x0, x19
    2c14:	bl	1db0 <_PyUnicode_Ready@plt>
    2c18:	cmn	w0, #0x1
    2c1c:	b.eq	2db8 <PySequence_Fast@plt+0xce8>  // b.none
    2c20:	ldrb	w0, [x19, #32]
    2c24:	stp	x21, x22, [sp, #32]
    2c28:	ldr	x21, [x19, #16]
    2c2c:	tbnz	w0, #5, 2b00 <PySequence_Fast@plt+0xa30>
    2c30:	ldr	x20, [x19, #72]
    2c34:	b	2b10 <PySequence_Fast@plt+0xa40>
    2c38:	sub	w1, w1, #0xc
    2c3c:	cmp	w1, #0x2
    2c40:	csel	x3, x4, x6, cc  // cc = lo, ul, last
    2c44:	csel	x1, x8, x5, cc  // cc = lo, ul, last
    2c48:	b	2b9c <PySequence_Fast@plt+0xacc>
    2c4c:	cmp	w1, #0x5c
    2c50:	b.eq	2c64 <PySequence_Fast@plt+0xb94>  // b.none
    2c54:	cmp	w1, w7
    2c58:	csel	x3, x10, x6, hi  // hi = pmore
    2c5c:	csel	x1, x9, x5, hi  // hi = pmore
    2c60:	b	2b9c <PySequence_Fast@plt+0xacc>
    2c64:	mov	x3, x4
    2c68:	mov	x1, #0x2                   	// #2
    2c6c:	b	2b9c <PySequence_Fast@plt+0xacc>
    2c70:	ldrh	w1, [x20, x2, lsl #1]
    2c74:	b	2b68 <PySequence_Fast@plt+0xa98>
    2c78:	mov	w1, #0x7f                  	// #127
    2c7c:	bl	2080 <PyUnicode_New@plt>
    2c80:	cbz	x0, 2f2c <PySequence_Fast@plt+0xe5c>
    2c84:	ldrb	w1, [x0, #32]
    2c88:	tbnz	w1, #5, 2dc8 <PySequence_Fast@plt+0xcf8>
    2c8c:	ldr	x3, [x0, #72]
    2c90:	mov	w1, #0x22                  	// #34
    2c94:	strb	w1, [x3]
    2c98:	cmp	x21, #0x0
    2c9c:	b.le	2f24 <PySequence_Fast@plt+0xe54>
    2ca0:	adrp	x12, 17000 <PyInit__json@@Base+0x10918>
    2ca4:	mov	x2, #0x1                   	// #1
    2ca8:	mov	x4, #0x0                   	// #0
    2cac:	mov	w11, #0x22                  	// #34
    2cb0:	ldr	x13, [x12, #4048]
    2cb4:	mov	w10, #0x5e                  	// #94
    2cb8:	mov	w8, #0x5c                  	// #92
    2cbc:	mov	w30, #0x66                  	// #102
    2cc0:	mov	w14, #0x75                  	// #117
    2cc4:	mov	w22, #0xdc00                	// #56320
    2cc8:	mov	w18, #0x72                  	// #114
    2ccc:	mov	w17, #0x74                  	// #116
    2cd0:	mov	w16, #0x6e                  	// #110
    2cd4:	mov	w15, #0x62                  	// #98
    2cd8:	stp	x23, x24, [sp, #48]
    2cdc:	mov	w24, #0xffff                	// #65535
    2ce0:	mov	w23, #0xd7c0                	// #55232
    2ce4:	stp	x25, x26, [sp, #64]
    2ce8:	str	x27, [sp, #80]
    2cec:	b	2d2c <PySequence_Fast@plt+0xc5c>
    2cf0:	strb	w8, [x3, x2]
    2cf4:	cmp	w1, #0xc
    2cf8:	b.eq	2e5c <PySequence_Fast@plt+0xd8c>  // b.none
    2cfc:	b.hi	2dfc <PySequence_Fast@plt+0xd2c>  // b.pmore
    2d00:	cmp	w1, #0x9
    2d04:	b.eq	2e4c <PySequence_Fast@plt+0xd7c>  // b.none
    2d08:	cmp	w1, #0xa
    2d0c:	b.ne	2de4 <PySequence_Fast@plt+0xd14>  // b.any
    2d10:	add	x2, x2, #0x2
    2d14:	strb	w16, [x5]
    2d18:	add	x5, x3, x2
    2d1c:	nop
    2d20:	add	x4, x4, #0x1
    2d24:	cmp	x21, x4
    2d28:	b.eq	2d78 <PySequence_Fast@plt+0xca8>  // b.none
    2d2c:	cmp	w19, #0x1
    2d30:	b.eq	2ddc <PySequence_Fast@plt+0xd0c>  // b.none
    2d34:	cmp	w19, #0x2
    2d38:	b.eq	2e34 <PySequence_Fast@plt+0xd64>  // b.none
    2d3c:	ldr	w1, [x20, x4, lsl #2]
    2d40:	cmp	w1, #0x5c
    2d44:	add	x7, x2, #0x1
    2d48:	sub	w6, w1, #0x20
    2d4c:	ccmp	w1, w11, #0x4, ne  // ne = any
    2d50:	add	x5, x3, x7
    2d54:	ccmp	w6, w10, #0x2, ne  // ne = any
    2d58:	add	x9, x3, x2
    2d5c:	mov	x6, x5
    2d60:	b.hi	2cf0 <PySequence_Fast@plt+0xc20>  // b.pmore
    2d64:	strb	w1, [x3, x2]
    2d68:	add	x4, x4, #0x1
    2d6c:	mov	x2, x7
    2d70:	cmp	x21, x4
    2d74:	b.ne	2d2c <PySequence_Fast@plt+0xc5c>  // b.any
    2d78:	ldp	x23, x24, [sp, #48]
    2d7c:	ldp	x25, x26, [sp, #64]
    2d80:	ldr	x27, [sp, #80]
    2d84:	mov	w1, #0x22                  	// #34
    2d88:	strb	w1, [x5]
    2d8c:	ldp	x19, x20, [sp, #16]
    2d90:	ldp	x21, x22, [sp, #32]
    2d94:	ldp	x29, x30, [sp], #96
    2d98:	ret
    2d9c:	adrp	x3, 17000 <PyInit__json@@Base+0x10918>
    2da0:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    2da4:	ldr	x2, [x0, #24]
    2da8:	add	x1, x1, #0x898
    2dac:	ldr	x3, [x3, #3976]
    2db0:	ldr	x0, [x3]
    2db4:	bl	2040 <PyErr_Format@plt>
    2db8:	mov	x0, #0x0                   	// #0
    2dbc:	ldp	x19, x20, [sp, #16]
    2dc0:	ldp	x29, x30, [sp], #96
    2dc4:	ret
    2dc8:	tst	x1, #0x40
    2dcc:	add	x3, x0, #0x30
    2dd0:	add	x1, x0, #0x48
    2dd4:	csel	x3, x1, x3, eq  // eq = none
    2dd8:	b	2c90 <PySequence_Fast@plt+0xbc0>
    2ddc:	ldrb	w1, [x20, x4]
    2de0:	b	2d40 <PySequence_Fast@plt+0xc70>
    2de4:	cmp	w1, #0x8
    2de8:	b.ne	2ed0 <PySequence_Fast@plt+0xe00>  // b.any
    2dec:	add	x2, x2, #0x2
    2df0:	strb	w15, [x5]
    2df4:	add	x5, x3, x2
    2df8:	b	2d20 <PySequence_Fast@plt+0xc50>
    2dfc:	cmp	w1, #0x22
    2e00:	b.eq	2e3c <PySequence_Fast@plt+0xd6c>  // b.none
    2e04:	cmp	w1, #0x5c
    2e08:	b.ne	2e1c <PySequence_Fast@plt+0xd4c>  // b.any
    2e0c:	add	x2, x2, #0x2
    2e10:	strb	w8, [x5]
    2e14:	add	x5, x3, x2
    2e18:	b	2d20 <PySequence_Fast@plt+0xc50>
    2e1c:	cmp	w1, #0xd
    2e20:	b.ne	2e6c <PySequence_Fast@plt+0xd9c>  // b.any
    2e24:	add	x2, x2, #0x2
    2e28:	strb	w18, [x5]
    2e2c:	add	x5, x3, x2
    2e30:	b	2d20 <PySequence_Fast@plt+0xc50>
    2e34:	ldrh	w1, [x20, x4, lsl #1]
    2e38:	b	2d40 <PySequence_Fast@plt+0xc70>
    2e3c:	add	x2, x2, #0x2
    2e40:	strb	w1, [x5]
    2e44:	add	x5, x3, x2
    2e48:	b	2d20 <PySequence_Fast@plt+0xc50>
    2e4c:	add	x2, x2, #0x2
    2e50:	strb	w17, [x5]
    2e54:	add	x5, x3, x2
    2e58:	b	2d20 <PySequence_Fast@plt+0xc50>
    2e5c:	add	x2, x2, #0x2
    2e60:	strb	w30, [x5]
    2e64:	add	x5, x3, x2
    2e68:	b	2d20 <PySequence_Fast@plt+0xc50>
    2e6c:	cmp	w1, w24
    2e70:	b.ls	2ed0 <PySequence_Fast@plt+0xe00>  // b.plast
    2e74:	strb	w14, [x5]
    2e78:	add	w5, w23, w1, lsr #10
    2e7c:	add	x7, x2, #0x7
    2e80:	and	w1, w1, #0x3ff
    2e84:	ldr	x2, [x13]
    2e88:	ubfx	x6, x5, #12, #4
    2e8c:	ubfx	x26, x5, #8, #4
    2e90:	ubfx	x25, x5, #4, #4
    2e94:	and	w5, w5, #0xf
    2e98:	add	w1, w1, w22
    2e9c:	ldrb	w2, [x2, w6, uxtw]
    2ea0:	add	x6, x3, x7
    2ea4:	strb	w2, [x9, #2]
    2ea8:	ldr	x2, [x13]
    2eac:	ldrb	w2, [x2, w26, uxtw]
    2eb0:	strb	w2, [x9, #3]
    2eb4:	ldr	x2, [x13]
    2eb8:	ldrb	w2, [x2, w25, uxtw]
    2ebc:	strb	w2, [x9, #4]
    2ec0:	ldr	x2, [x13]
    2ec4:	ldrb	w2, [x2, w5, uxtw]
    2ec8:	strb	w2, [x9, #5]
    2ecc:	strb	w8, [x9, #6]
    2ed0:	ldr	x9, [x12, #4048]
    2ed4:	strb	w14, [x6]
    2ed8:	lsr	w27, w1, #12
    2edc:	add	x2, x7, #0x5
    2ee0:	ubfx	x26, x1, #8, #4
    2ee4:	ubfx	x25, x1, #4, #4
    2ee8:	ldr	x5, [x9]
    2eec:	and	w1, w1, #0xf
    2ef0:	ldrb	w5, [x5, w27, uxtw]
    2ef4:	strb	w5, [x6, #1]
    2ef8:	add	x5, x3, x2
    2efc:	ldr	x7, [x9]
    2f00:	ldrb	w7, [x7, w26, uxtw]
    2f04:	strb	w7, [x6, #2]
    2f08:	ldr	x7, [x9]
    2f0c:	ldrb	w7, [x7, w25, uxtw]
    2f10:	strb	w7, [x6, #3]
    2f14:	ldr	x7, [x9]
    2f18:	ldrb	w1, [x7, w1, uxtw]
    2f1c:	strb	w1, [x6, #4]
    2f20:	b	2d20 <PySequence_Fast@plt+0xc50>
    2f24:	add	x5, x3, #0x1
    2f28:	b	2d84 <PySequence_Fast@plt+0xcb4>
    2f2c:	mov	x0, #0x0                   	// #0
    2f30:	ldp	x21, x22, [sp, #32]
    2f34:	b	2dbc <PySequence_Fast@plt+0xcec>
    2f38:	stp	x29, x30, [sp, #-32]!
    2f3c:	mov	x29, sp
    2f40:	str	x19, [sp, #16]
    2f44:	mov	x19, x0
    2f48:	ldr	x0, [x0, #16]
    2f4c:	cbz	x0, 2f64 <PySequence_Fast@plt+0xe94>
    2f50:	ldr	x1, [x0]
    2f54:	str	xzr, [x19, #16]
    2f58:	sub	x1, x1, #0x1
    2f5c:	str	x1, [x0]
    2f60:	cbz	x1, 3034 <PySequence_Fast@plt+0xf64>
    2f64:	ldr	x0, [x19, #24]
    2f68:	cbz	x0, 2f80 <PySequence_Fast@plt+0xeb0>
    2f6c:	ldr	x1, [x0]
    2f70:	str	xzr, [x19, #24]
    2f74:	sub	x1, x1, #0x1
    2f78:	str	x1, [x0]
    2f7c:	cbz	x1, 302c <PySequence_Fast@plt+0xf5c>
    2f80:	ldr	x0, [x19, #32]
    2f84:	cbz	x0, 2f9c <PySequence_Fast@plt+0xecc>
    2f88:	ldr	x1, [x0]
    2f8c:	str	xzr, [x19, #32]
    2f90:	sub	x1, x1, #0x1
    2f94:	str	x1, [x0]
    2f98:	cbz	x1, 3024 <PySequence_Fast@plt+0xf54>
    2f9c:	ldr	x0, [x19, #40]
    2fa0:	cbz	x0, 2fb8 <PySequence_Fast@plt+0xee8>
    2fa4:	ldr	x1, [x0]
    2fa8:	str	xzr, [x19, #40]
    2fac:	sub	x1, x1, #0x1
    2fb0:	str	x1, [x0]
    2fb4:	cbz	x1, 301c <PySequence_Fast@plt+0xf4c>
    2fb8:	ldr	x0, [x19, #48]
    2fbc:	cbz	x0, 2fd4 <PySequence_Fast@plt+0xf04>
    2fc0:	ldr	x1, [x0]
    2fc4:	str	xzr, [x19, #48]
    2fc8:	sub	x1, x1, #0x1
    2fcc:	str	x1, [x0]
    2fd0:	cbz	x1, 3014 <PySequence_Fast@plt+0xf44>
    2fd4:	ldr	x0, [x19, #56]
    2fd8:	cbz	x0, 2ff0 <PySequence_Fast@plt+0xf20>
    2fdc:	ldr	x1, [x0]
    2fe0:	str	xzr, [x19, #56]
    2fe4:	sub	x1, x1, #0x1
    2fe8:	str	x1, [x0]
    2fec:	cbz	x1, 3000 <PySequence_Fast@plt+0xf30>
    2ff0:	mov	w0, #0x0                   	// #0
    2ff4:	ldr	x19, [sp, #16]
    2ff8:	ldp	x29, x30, [sp], #32
    2ffc:	ret
    3000:	bl	1e30 <_Py_Dealloc@plt>
    3004:	mov	w0, #0x0                   	// #0
    3008:	ldr	x19, [sp, #16]
    300c:	ldp	x29, x30, [sp], #32
    3010:	ret
    3014:	bl	1e30 <_Py_Dealloc@plt>
    3018:	b	2fd4 <PySequence_Fast@plt+0xf04>
    301c:	bl	1e30 <_Py_Dealloc@plt>
    3020:	b	2fb8 <PySequence_Fast@plt+0xee8>
    3024:	bl	1e30 <_Py_Dealloc@plt>
    3028:	b	2f9c <PySequence_Fast@plt+0xecc>
    302c:	bl	1e30 <_Py_Dealloc@plt>
    3030:	b	2f80 <PySequence_Fast@plt+0xeb0>
    3034:	bl	1e30 <_Py_Dealloc@plt>
    3038:	b	2f64 <PySequence_Fast@plt+0xe94>
    303c:	nop
    3040:	stp	x29, x30, [sp, #-32]!
    3044:	mov	x29, sp
    3048:	str	x19, [sp, #16]
    304c:	mov	x19, x0
    3050:	bl	20a0 <PyObject_GC_UnTrack@plt>
    3054:	mov	x0, x19
    3058:	bl	2f38 <PySequence_Fast@plt+0xe68>
    305c:	ldr	x1, [x19, #8]
    3060:	mov	x0, x19
    3064:	ldr	x19, [sp, #16]
    3068:	ldp	x29, x30, [sp], #32
    306c:	ldr	x1, [x1, #320]
    3070:	mov	x16, x1
    3074:	br	x16
    3078:	stp	x29, x30, [sp, #-32]!
    307c:	mov	x29, sp
    3080:	stp	x19, x20, [sp, #16]
    3084:	mov	x19, x1
    3088:	bl	1e70 <_PyAccu_Accumulate@plt>
    308c:	mov	w20, w0
    3090:	ldr	x1, [x19]
    3094:	sub	x1, x1, #0x1
    3098:	str	x1, [x19]
    309c:	cbz	x1, 30b0 <PySequence_Fast@plt+0xfe0>
    30a0:	mov	w0, w20
    30a4:	ldp	x19, x20, [sp, #16]
    30a8:	ldp	x29, x30, [sp], #32
    30ac:	ret
    30b0:	mov	x0, x19
    30b4:	bl	1e30 <_Py_Dealloc@plt>
    30b8:	mov	w0, w20
    30bc:	ldp	x19, x20, [sp, #16]
    30c0:	ldp	x29, x30, [sp], #32
    30c4:	ret
    30c8:	stp	x29, x30, [sp, #-48]!
    30cc:	adrp	x3, 18000 <PyInit__json@@Base+0x11918>
    30d0:	add	x3, x3, #0x1b0
    30d4:	mov	x29, sp
    30d8:	add	x3, x3, #0x50
    30dc:	add	x4, sp, #0x28
    30e0:	stp	x19, x20, [sp, #16]
    30e4:	mov	x19, x0
    30e8:	mov	x0, x1
    30ec:	mov	x1, x2
    30f0:	adrp	x2, 6000 <PySequence_Fast@plt+0x3f30>
    30f4:	add	x2, x2, #0x8c8
    30f8:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    30fc:	cbz	w0, 31e8 <PySequence_Fast@plt+0x1118>
    3100:	ldr	x2, [x19, #304]
    3104:	mov	x0, x19
    3108:	mov	x1, #0x0                   	// #0
    310c:	blr	x2
    3110:	mov	x19, x0
    3114:	cbz	x0, 31e8 <PySequence_Fast@plt+0x1118>
    3118:	bl	1fd0 <PyDict_New@plt>
    311c:	str	x0, [x19, #64]
    3120:	cbz	x0, 31d8 <PySequence_Fast@plt+0x1108>
    3124:	ldr	x0, [sp, #40]
    3128:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    312c:	add	x1, x1, #0x8d8
    3130:	bl	1dd0 <PyObject_GetAttrString@plt>
    3134:	mov	x20, x0
    3138:	cbz	x0, 31d8 <PySequence_Fast@plt+0x1108>
    313c:	bl	1f90 <PyObject_IsTrue@plt>
    3140:	strb	w0, [x19, #16]
    3144:	ldr	x0, [x20]
    3148:	sub	x0, x0, #0x1
    314c:	str	x0, [x20]
    3150:	cbz	x0, 3218 <PySequence_Fast@plt+0x1148>
    3154:	ldrsb	w0, [x19, #16]
    3158:	tbnz	w0, #31, 31d8 <PySequence_Fast@plt+0x1108>
    315c:	ldr	x0, [sp, #40]
    3160:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3164:	add	x1, x1, #0x8e0
    3168:	bl	1dd0 <PyObject_GetAttrString@plt>
    316c:	str	x0, [x19, #24]
    3170:	cbz	x0, 31d8 <PySequence_Fast@plt+0x1108>
    3174:	ldr	x0, [sp, #40]
    3178:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    317c:	add	x1, x1, #0x8f0
    3180:	bl	1dd0 <PyObject_GetAttrString@plt>
    3184:	str	x0, [x19, #32]
    3188:	cbz	x0, 31d8 <PySequence_Fast@plt+0x1108>
    318c:	ldr	x0, [sp, #40]
    3190:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3194:	add	x1, x1, #0x908
    3198:	bl	1dd0 <PyObject_GetAttrString@plt>
    319c:	str	x0, [x19, #40]
    31a0:	cbz	x0, 31d8 <PySequence_Fast@plt+0x1108>
    31a4:	ldr	x0, [sp, #40]
    31a8:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    31ac:	add	x1, x1, #0x918
    31b0:	bl	1dd0 <PyObject_GetAttrString@plt>
    31b4:	str	x0, [x19, #48]
    31b8:	cbz	x0, 31d8 <PySequence_Fast@plt+0x1108>
    31bc:	ldr	x0, [sp, #40]
    31c0:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    31c4:	add	x1, x1, #0x928
    31c8:	bl	1dd0 <PyObject_GetAttrString@plt>
    31cc:	str	x0, [x19, #56]
    31d0:	cbnz	x0, 31ec <PySequence_Fast@plt+0x111c>
    31d4:	nop
    31d8:	ldr	x0, [x19]
    31dc:	sub	x0, x0, #0x1
    31e0:	str	x0, [x19]
    31e4:	cbz	x0, 31fc <PySequence_Fast@plt+0x112c>
    31e8:	mov	x19, #0x0                   	// #0
    31ec:	mov	x0, x19
    31f0:	ldp	x19, x20, [sp, #16]
    31f4:	ldp	x29, x30, [sp], #48
    31f8:	ret
    31fc:	mov	x0, x19
    3200:	mov	x19, #0x0                   	// #0
    3204:	bl	1e30 <_Py_Dealloc@plt>
    3208:	mov	x0, x19
    320c:	ldp	x19, x20, [sp, #16]
    3210:	ldp	x29, x30, [sp], #48
    3214:	ret
    3218:	mov	x0, x20
    321c:	bl	1e30 <_Py_Dealloc@plt>
    3220:	b	3154 <PySequence_Fast@plt+0x1084>
    3224:	nop
    3228:	stp	x29, x30, [sp, #-32]!
    322c:	mov	x29, sp
    3230:	str	x19, [sp, #16]
    3234:	mov	x19, x0
    3238:	ldr	x0, [x0, #24]
    323c:	cbz	x0, 3254 <PySequence_Fast@plt+0x1184>
    3240:	ldr	x1, [x0]
    3244:	str	xzr, [x19, #24]
    3248:	sub	x1, x1, #0x1
    324c:	str	x1, [x0]
    3250:	cbz	x1, 3324 <PySequence_Fast@plt+0x1254>
    3254:	ldr	x0, [x19, #32]
    3258:	cbz	x0, 3270 <PySequence_Fast@plt+0x11a0>
    325c:	ldr	x1, [x0]
    3260:	str	xzr, [x19, #32]
    3264:	sub	x1, x1, #0x1
    3268:	str	x1, [x0]
    326c:	cbz	x1, 331c <PySequence_Fast@plt+0x124c>
    3270:	ldr	x0, [x19, #40]
    3274:	cbz	x0, 328c <PySequence_Fast@plt+0x11bc>
    3278:	ldr	x1, [x0]
    327c:	str	xzr, [x19, #40]
    3280:	sub	x1, x1, #0x1
    3284:	str	x1, [x0]
    3288:	cbz	x1, 3314 <PySequence_Fast@plt+0x1244>
    328c:	ldr	x0, [x19, #48]
    3290:	cbz	x0, 32a8 <PySequence_Fast@plt+0x11d8>
    3294:	ldr	x1, [x0]
    3298:	str	xzr, [x19, #48]
    329c:	sub	x1, x1, #0x1
    32a0:	str	x1, [x0]
    32a4:	cbz	x1, 330c <PySequence_Fast@plt+0x123c>
    32a8:	ldr	x0, [x19, #56]
    32ac:	cbz	x0, 32c4 <PySequence_Fast@plt+0x11f4>
    32b0:	ldr	x1, [x0]
    32b4:	str	xzr, [x19, #56]
    32b8:	sub	x1, x1, #0x1
    32bc:	str	x1, [x0]
    32c0:	cbz	x1, 3304 <PySequence_Fast@plt+0x1234>
    32c4:	ldr	x0, [x19, #64]
    32c8:	cbz	x0, 32e0 <PySequence_Fast@plt+0x1210>
    32cc:	ldr	x1, [x0]
    32d0:	str	xzr, [x19, #64]
    32d4:	sub	x1, x1, #0x1
    32d8:	str	x1, [x0]
    32dc:	cbz	x1, 32f0 <PySequence_Fast@plt+0x1220>
    32e0:	mov	w0, #0x0                   	// #0
    32e4:	ldr	x19, [sp, #16]
    32e8:	ldp	x29, x30, [sp], #32
    32ec:	ret
    32f0:	bl	1e30 <_Py_Dealloc@plt>
    32f4:	mov	w0, #0x0                   	// #0
    32f8:	ldr	x19, [sp, #16]
    32fc:	ldp	x29, x30, [sp], #32
    3300:	ret
    3304:	bl	1e30 <_Py_Dealloc@plt>
    3308:	b	32c4 <PySequence_Fast@plt+0x11f4>
    330c:	bl	1e30 <_Py_Dealloc@plt>
    3310:	b	32a8 <PySequence_Fast@plt+0x11d8>
    3314:	bl	1e30 <_Py_Dealloc@plt>
    3318:	b	328c <PySequence_Fast@plt+0x11bc>
    331c:	bl	1e30 <_Py_Dealloc@plt>
    3320:	b	3270 <PySequence_Fast@plt+0x11a0>
    3324:	bl	1e30 <_Py_Dealloc@plt>
    3328:	b	3254 <PySequence_Fast@plt+0x1184>
    332c:	nop
    3330:	stp	x29, x30, [sp, #-32]!
    3334:	mov	x29, sp
    3338:	str	x19, [sp, #16]
    333c:	mov	x19, x0
    3340:	bl	20a0 <PyObject_GC_UnTrack@plt>
    3344:	mov	x0, x19
    3348:	bl	3228 <PySequence_Fast@plt+0x1158>
    334c:	ldr	x1, [x19, #8]
    3350:	mov	x0, x19
    3354:	ldr	x19, [sp, #16]
    3358:	ldp	x29, x30, [sp], #32
    335c:	ldr	x1, [x1, #320]
    3360:	mov	x16, x1
    3364:	br	x16
    3368:	stp	x29, x30, [sp, #-32]!
    336c:	mov	x29, sp
    3370:	bl	1e80 <PyLong_FromSsize_t@plt>
    3374:	cbz	x0, 33a8 <PySequence_Fast@plt+0x12d8>
    3378:	str	x19, [sp, #16]
    337c:	mov	x19, x0
    3380:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    3384:	mov	x1, x19
    3388:	ldr	x0, [x0, #4040]
    338c:	ldr	x0, [x0]
    3390:	bl	1e40 <PyErr_SetObject@plt>
    3394:	ldr	x0, [x19]
    3398:	sub	x0, x0, #0x1
    339c:	str	x0, [x19]
    33a0:	cbz	x0, 33b0 <PySequence_Fast@plt+0x12e0>
    33a4:	ldr	x19, [sp, #16]
    33a8:	ldp	x29, x30, [sp], #32
    33ac:	ret
    33b0:	mov	x0, x19
    33b4:	ldr	x19, [sp, #16]
    33b8:	ldp	x29, x30, [sp], #32
    33bc:	b	1e30 <_Py_Dealloc@plt>
    33c0:	stp	x29, x30, [sp, #-64]!
    33c4:	mov	x29, sp
    33c8:	stp	x21, x22, [sp, #32]
    33cc:	adrp	x21, 18000 <PyInit__json@@Base+0x11918>
    33d0:	mov	x22, x2
    33d4:	ldr	x5, [x21, #2288]
    33d8:	stp	x19, x20, [sp, #16]
    33dc:	mov	x19, x0
    33e0:	mov	x20, x1
    33e4:	cbz	x5, 3438 <PySequence_Fast@plt+0x1368>
    33e8:	mov	x2, x19
    33ec:	mov	x4, x22
    33f0:	mov	x3, x20
    33f4:	mov	x0, x5
    33f8:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    33fc:	add	x1, x1, #0x958
    3400:	bl	1f00 <PyObject_CallFunction@plt>
    3404:	mov	x19, x0
    3408:	cbz	x0, 3428 <PySequence_Fast@plt+0x1358>
    340c:	ldr	x0, [x21, #2288]
    3410:	mov	x1, x19
    3414:	bl	1e40 <PyErr_SetObject@plt>
    3418:	ldr	x0, [x19]
    341c:	sub	x0, x0, #0x1
    3420:	str	x0, [x19]
    3424:	cbz	x0, 3480 <PySequence_Fast@plt+0x13b0>
    3428:	ldp	x19, x20, [sp, #16]
    342c:	ldp	x21, x22, [sp, #32]
    3430:	ldp	x29, x30, [sp], #64
    3434:	ret
    3438:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    343c:	add	x0, x0, #0x938
    3440:	str	x23, [sp, #48]
    3444:	bl	1f60 <PyImport_ImportModule@plt>
    3448:	mov	x23, x0
    344c:	cbz	x0, 34a4 <PySequence_Fast@plt+0x13d4>
    3450:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3454:	add	x1, x1, #0x948
    3458:	bl	1dd0 <PyObject_GetAttrString@plt>
    345c:	mov	x5, x0
    3460:	ldr	x1, [x23]
    3464:	str	x0, [x21, #2288]
    3468:	sub	x0, x1, #0x1
    346c:	str	x0, [x23]
    3470:	cbz	x0, 3494 <PySequence_Fast@plt+0x13c4>
    3474:	ldr	x23, [sp, #48]
    3478:	cbnz	x5, 33e8 <PySequence_Fast@plt+0x1318>
    347c:	b	3428 <PySequence_Fast@plt+0x1358>
    3480:	mov	x0, x19
    3484:	ldp	x19, x20, [sp, #16]
    3488:	ldp	x21, x22, [sp, #32]
    348c:	ldp	x29, x30, [sp], #64
    3490:	b	1e30 <_Py_Dealloc@plt>
    3494:	mov	x0, x23
    3498:	bl	1e30 <_Py_Dealloc@plt>
    349c:	ldr	x5, [x21, #2288]
    34a0:	b	3474 <PySequence_Fast@plt+0x13a4>
    34a4:	ldr	x23, [sp, #48]
    34a8:	b	3428 <PySequence_Fast@plt+0x1358>
    34ac:	nop
    34b0:	stp	x29, x30, [sp, #-144]!
    34b4:	mov	x29, sp
    34b8:	stp	x21, x22, [sp, #32]
    34bc:	mov	x22, x1
    34c0:	ldrb	w1, [x0, #32]
    34c4:	stp	x23, x24, [sp, #48]
    34c8:	mov	w23, w2
    34cc:	sub	x2, x22, #0x1
    34d0:	stp	x27, x28, [sp, #80]
    34d4:	mov	x21, x0
    34d8:	str	x3, [sp, #96]
    34dc:	str	x2, [sp, #120]
    34e0:	tbz	w1, #7, 37f4 <PySequence_Fast@plt+0x1724>
    34e4:	stp	x19, x20, [sp, #16]
    34e8:	stp	x25, x26, [sp, #64]
    34ec:	ldr	x24, [x21, #16]
    34f0:	tbnz	w1, #5, 36d4 <PySequence_Fast@plt+0x1604>
    34f4:	ldrb	w20, [x21, #32]
    34f8:	cmp	x22, #0x0
    34fc:	ccmp	x22, x24, #0x0, ge  // ge = tcont
    3500:	mov	x27, #0x0                   	// #0
    3504:	mov	x26, #0x0                   	// #0
    3508:	ubfx	x20, x20, #2, #3
    350c:	ldr	x28, [x21, #72]
    3510:	b.gt	3700 <PySequence_Fast@plt+0x1630>
    3514:	and	x0, x20, #0xff
    3518:	mov	w25, #0x5c                  	// #92
    351c:	str	x0, [sp, #112]
    3520:	add	x0, sp, #0x8c
    3524:	str	x0, [sp, #104]
    3528:	str	wzr, [sp, #140]
    352c:	cmp	x22, x24
    3530:	b.ge	3a84 <PySequence_Fast@plt+0x19b4>  // b.tcont
    3534:	mov	x19, x22
    3538:	b	3570 <PySequence_Fast@plt+0x14a0>
    353c:	cmp	w20, #0x2
    3540:	b.eq	3744 <PySequence_Fast@plt+0x1674>  // b.none
    3544:	ldr	w4, [x28, x19, lsl #2]
    3548:	str	w4, [sp, #140]
    354c:	cmp	w4, #0x22
    3550:	ccmp	w4, w25, #0x4, ne  // ne = any
    3554:	b.eq	358c <PySequence_Fast@plt+0x14bc>  // b.none
    3558:	cmp	w23, #0x0
    355c:	ccmp	w4, #0x1f, #0x2, ne  // ne = any
    3560:	b.ls	37a0 <PySequence_Fast@plt+0x16d0>  // b.plast
    3564:	add	x19, x19, #0x1
    3568:	cmp	x24, x19
    356c:	b.eq	3a84 <PySequence_Fast@plt+0x19b4>  // b.none
    3570:	cmp	w20, #0x1
    3574:	b.ne	353c <PySequence_Fast@plt+0x146c>  // b.any
    3578:	ldrb	w4, [x28, x19]
    357c:	str	w4, [sp, #140]
    3580:	cmp	w4, #0x22
    3584:	ccmp	w4, w25, #0x4, ne  // ne = any
    3588:	b.ne	3558 <PySequence_Fast@plt+0x1488>  // b.any
    358c:	cmp	w4, #0x22
    3590:	ccmp	w4, w25, #0x4, ne  // ne = any
    3594:	b.ne	3a84 <PySequence_Fast@plt+0x19b4>  // b.any
    3598:	cmp	x22, x19
    359c:	b.eq	35e8 <PySequence_Fast@plt+0x1518>  // b.none
    35a0:	cbz	x27, 35c8 <PySequence_Fast@plt+0x14f8>
    35a4:	cbz	x26, 3940 <PySequence_Fast@plt+0x1870>
    35a8:	mov	x1, x27
    35ac:	mov	x0, x26
    35b0:	bl	1eb0 <PyList_Append@plt>
    35b4:	cbnz	w0, 3a9c <PySequence_Fast@plt+0x19cc>
    35b8:	ldr	x0, [x27]
    35bc:	sub	x0, x0, #0x1
    35c0:	str	x0, [x27]
    35c4:	cbz	x0, 3934 <PySequence_Fast@plt+0x1864>
    35c8:	ldr	x0, [sp, #112]
    35cc:	sub	x2, x19, x22
    35d0:	madd	x1, x0, x22, x28
    35d4:	mov	w0, w20
    35d8:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    35dc:	mov	x27, x0
    35e0:	cbz	x0, 3688 <PySequence_Fast@plt+0x15b8>
    35e4:	ldr	w4, [sp, #140]
    35e8:	cmp	w4, #0x22
    35ec:	add	x2, x19, #0x1
    35f0:	b.eq	3abc <PySequence_Fast@plt+0x19ec>  // b.none
    35f4:	cmp	x24, x2
    35f8:	b.eq	3a84 <PySequence_Fast@plt+0x19b4>  // b.none
    35fc:	cmp	w20, #0x1
    3600:	b.eq	3810 <PySequence_Fast@plt+0x1740>  // b.none
    3604:	cmp	w20, #0x2
    3608:	b.eq	38d4 <PySequence_Fast@plt+0x1804>  // b.none
    360c:	ldr	w1, [x28, x2, lsl #2]
    3610:	str	w1, [sp, #140]
    3614:	cmp	w1, #0x75
    3618:	add	x22, x19, #0x2
    361c:	b.eq	3824 <PySequence_Fast@plt+0x1754>  // b.none
    3620:	cmp	w1, #0x6e
    3624:	b.eq	3954 <PySequence_Fast@plt+0x1884>  // b.none
    3628:	b.hi	3784 <PySequence_Fast@plt+0x16b4>  // b.pmore
    362c:	cmp	w1, #0x62
    3630:	b.eq	3960 <PySequence_Fast@plt+0x1890>  // b.none
    3634:	b.ls	374c <PySequence_Fast@plt+0x167c>  // b.plast
    3638:	cmp	w1, #0x66
    363c:	b.ne	3768 <PySequence_Fast@plt+0x1698>  // b.any
    3640:	mov	w0, #0xc                   	// #12
    3644:	str	w0, [sp, #140]
    3648:	cbz	x27, 3670 <PySequence_Fast@plt+0x15a0>
    364c:	cbz	x26, 38dc <PySequence_Fast@plt+0x180c>
    3650:	mov	x1, x27
    3654:	mov	x0, x26
    3658:	bl	1eb0 <PyList_Append@plt>
    365c:	cbnz	w0, 3a9c <PySequence_Fast@plt+0x19cc>
    3660:	ldr	x0, [x27]
    3664:	sub	x0, x0, #0x1
    3668:	str	x0, [x27]
    366c:	cbz	x0, 38c8 <PySequence_Fast@plt+0x17f8>
    3670:	ldr	x1, [sp, #104]
    3674:	mov	x2, #0x1                   	// #1
    3678:	mov	w0, #0x4                   	// #4
    367c:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    3680:	mov	x27, x0
    3684:	cbnz	x0, 3528 <PySequence_Fast@plt+0x1458>
    3688:	ldr	x1, [sp, #96]
    368c:	mov	x0, #0xffffffffffffffff    	// #-1
    3690:	str	x0, [x1]
    3694:	cbz	x26, 37e8 <PySequence_Fast@plt+0x1718>
    3698:	ldr	x0, [x26]
    369c:	sub	x0, x0, #0x1
    36a0:	str	x0, [x26]
    36a4:	cbnz	x0, 37e8 <PySequence_Fast@plt+0x1718>
    36a8:	mov	x0, x26
    36ac:	bl	1e30 <_Py_Dealloc@plt>
    36b0:	ldp	x19, x20, [sp, #16]
    36b4:	ldp	x25, x26, [sp, #64]
    36b8:	mov	x27, #0x0                   	// #0
    36bc:	mov	x0, x27
    36c0:	ldp	x21, x22, [sp, #32]
    36c4:	ldp	x23, x24, [sp, #48]
    36c8:	ldp	x27, x28, [sp, #80]
    36cc:	ldp	x29, x30, [sp], #144
    36d0:	ret
    36d4:	ldrb	w20, [x21, #32]
    36d8:	tst	x1, #0x40
    36dc:	add	x28, x21, #0x30
    36e0:	add	x1, x21, #0x48
    36e4:	csel	x28, x1, x28, eq  // eq = none
    36e8:	cmp	x22, #0x0
    36ec:	ccmp	x22, x24, #0x0, ge  // ge = tcont
    36f0:	ubfx	x20, x20, #2, #3
    36f4:	mov	x27, #0x0                   	// #0
    36f8:	mov	x26, #0x0                   	// #0
    36fc:	b.le	3514 <PySequence_Fast@plt+0x1444>
    3700:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    3704:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3708:	add	x1, x1, #0x960
    370c:	ldr	x0, [x0, #3968]
    3710:	ldr	x0, [x0]
    3714:	bl	1e60 <PyErr_SetString@plt>
    3718:	ldr	x1, [sp, #96]
    371c:	mov	x0, #0xffffffffffffffff    	// #-1
    3720:	ldp	x19, x20, [sp, #16]
    3724:	ldp	x25, x26, [sp, #64]
    3728:	str	x0, [x1]
    372c:	mov	x0, x27
    3730:	ldp	x21, x22, [sp, #32]
    3734:	ldp	x23, x24, [sp, #48]
    3738:	ldp	x27, x28, [sp, #80]
    373c:	ldp	x29, x30, [sp], #144
    3740:	ret
    3744:	ldrh	w4, [x28, x19, lsl #1]
    3748:	b	3548 <PySequence_Fast@plt+0x1478>
    374c:	cmp	w1, #0x2f
    3750:	b.eq	3648 <PySequence_Fast@plt+0x1578>  // b.none
    3754:	cmp	w1, #0x5c
    3758:	b.eq	3648 <PySequence_Fast@plt+0x1578>  // b.none
    375c:	cmp	w1, #0x22
    3760:	b.eq	3648 <PySequence_Fast@plt+0x1578>  // b.none
    3764:	nop
    3768:	mov	x2, x19
    376c:	mov	x1, x21
    3770:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3774:	add	x0, x0, #0x9b8
    3778:	str	wzr, [sp, #140]
    377c:	bl	33c0 <PySequence_Fast@plt+0x12f0>
    3780:	b	37b4 <PySequence_Fast@plt+0x16e4>
    3784:	cmp	w1, #0x72
    3788:	b.eq	396c <PySequence_Fast@plt+0x189c>  // b.none
    378c:	cmp	w1, #0x74
    3790:	b.ne	3768 <PySequence_Fast@plt+0x1698>  // b.any
    3794:	mov	w0, #0x9                   	// #9
    3798:	str	w0, [sp, #140]
    379c:	b	3648 <PySequence_Fast@plt+0x1578>
    37a0:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    37a4:	mov	x2, x19
    37a8:	mov	x1, x21
    37ac:	add	x0, x0, #0x978
    37b0:	bl	33c0 <PySequence_Fast@plt+0x12f0>
    37b4:	ldr	x1, [sp, #96]
    37b8:	mov	x0, #0xffffffffffffffff    	// #-1
    37bc:	str	x0, [x1]
    37c0:	cbz	x26, 37d4 <PySequence_Fast@plt+0x1704>
    37c4:	ldr	x0, [x26]
    37c8:	sub	x0, x0, #0x1
    37cc:	str	x0, [x26]
    37d0:	cbz	x0, 3928 <PySequence_Fast@plt+0x1858>
    37d4:	cbz	x27, 37e8 <PySequence_Fast@plt+0x1718>
    37d8:	ldr	x0, [x27]
    37dc:	sub	x0, x0, #0x1
    37e0:	str	x0, [x27]
    37e4:	cbz	x0, 38fc <PySequence_Fast@plt+0x182c>
    37e8:	ldp	x19, x20, [sp, #16]
    37ec:	ldp	x25, x26, [sp, #64]
    37f0:	b	36b8 <PySequence_Fast@plt+0x15e8>
    37f4:	bl	1db0 <_PyUnicode_Ready@plt>
    37f8:	cmn	w0, #0x1
    37fc:	b.eq	36b8 <PySequence_Fast@plt+0x15e8>  // b.none
    3800:	ldrb	w1, [x21, #32]
    3804:	stp	x19, x20, [sp, #16]
    3808:	stp	x25, x26, [sp, #64]
    380c:	b	34ec <PySequence_Fast@plt+0x141c>
    3810:	ldrb	w1, [x28, x2]
    3814:	add	x22, x19, #0x2
    3818:	str	w1, [sp, #140]
    381c:	cmp	w1, #0x75
    3820:	b.ne	3620 <PySequence_Fast@plt+0x1550>  // b.any
    3824:	str	wzr, [sp, #140]
    3828:	add	x11, x19, #0x6
    382c:	cmp	x24, x11
    3830:	b.le	3980 <PySequence_Fast@plt+0x18b0>
    3834:	cmp	x22, x11
    3838:	mov	w1, #0x0                   	// #0
    383c:	b.ge	39ac <PySequence_Fast@plt+0x18dc>  // b.tcont
    3840:	cmp	w20, #0x1
    3844:	b.eq	3898 <PySequence_Fast@plt+0x17c8>  // b.none
    3848:	cmp	w20, #0x2
    384c:	b.eq	39a4 <PySequence_Fast@plt+0x18d4>  // b.none
    3850:	ldr	w0, [x28, x22, lsl #2]
    3854:	lsl	w10, w1, #4
    3858:	str	w10, [sp, #140]
    385c:	cmp	w0, #0x46
    3860:	b.hi	38ac <PySequence_Fast@plt+0x17dc>  // b.pmore
    3864:	cmp	w0, #0x40
    3868:	b.hi	3994 <PySequence_Fast@plt+0x18c4>  // b.pmore
    386c:	sub	w0, w0, #0x30
    3870:	cmp	w0, #0x9
    3874:	b.hi	3980 <PySequence_Fast@plt+0x18b0>  // b.pmore
    3878:	orr	w1, w10, w0
    387c:	str	w1, [sp, #140]
    3880:	add	x0, x22, #0x1
    3884:	cmp	x11, x0
    3888:	b.eq	39b4 <PySequence_Fast@plt+0x18e4>  // b.none
    388c:	mov	x22, x0
    3890:	cmp	w20, #0x1
    3894:	b.ne	3848 <PySequence_Fast@plt+0x1778>  // b.any
    3898:	ldrb	w0, [x28, x22]
    389c:	lsl	w10, w1, #4
    38a0:	str	w10, [sp, #140]
    38a4:	cmp	w0, #0x46
    38a8:	b.ls	3864 <PySequence_Fast@plt+0x1794>  // b.plast
    38ac:	sub	w1, w0, #0x61
    38b0:	cmp	w1, #0x5
    38b4:	b.hi	3980 <PySequence_Fast@plt+0x18b0>  // b.pmore
    38b8:	sub	w4, w0, #0x57
    38bc:	orr	w1, w4, w10
    38c0:	str	w1, [sp, #140]
    38c4:	b	3880 <PySequence_Fast@plt+0x17b0>
    38c8:	mov	x0, x27
    38cc:	bl	1e30 <_Py_Dealloc@plt>
    38d0:	b	3670 <PySequence_Fast@plt+0x15a0>
    38d4:	ldrh	w1, [x28, x2, lsl #1]
    38d8:	b	3610 <PySequence_Fast@plt+0x1540>
    38dc:	mov	x0, #0x0                   	// #0
    38e0:	bl	1da0 <PyList_New@plt>
    38e4:	mov	x26, x0
    38e8:	cbnz	x0, 3650 <PySequence_Fast@plt+0x1580>
    38ec:	ldr	x1, [sp, #96]
    38f0:	mov	x0, #0xffffffffffffffff    	// #-1
    38f4:	str	x0, [x1]
    38f8:	b	37d8 <PySequence_Fast@plt+0x1708>
    38fc:	mov	x0, x27
    3900:	mov	x27, #0x0                   	// #0
    3904:	bl	1e30 <_Py_Dealloc@plt>
    3908:	mov	x0, x27
    390c:	ldp	x19, x20, [sp, #16]
    3910:	ldp	x21, x22, [sp, #32]
    3914:	ldp	x23, x24, [sp, #48]
    3918:	ldp	x25, x26, [sp, #64]
    391c:	ldp	x27, x28, [sp, #80]
    3920:	ldp	x29, x30, [sp], #144
    3924:	ret
    3928:	mov	x0, x26
    392c:	bl	1e30 <_Py_Dealloc@plt>
    3930:	b	37d4 <PySequence_Fast@plt+0x1704>
    3934:	mov	x0, x27
    3938:	bl	1e30 <_Py_Dealloc@plt>
    393c:	b	35c8 <PySequence_Fast@plt+0x14f8>
    3940:	mov	x0, #0x0                   	// #0
    3944:	bl	1da0 <PyList_New@plt>
    3948:	mov	x26, x0
    394c:	cbnz	x0, 35a8 <PySequence_Fast@plt+0x14d8>
    3950:	b	38ec <PySequence_Fast@plt+0x181c>
    3954:	mov	w0, #0xa                   	// #10
    3958:	str	w0, [sp, #140]
    395c:	b	3648 <PySequence_Fast@plt+0x1578>
    3960:	mov	w0, #0x8                   	// #8
    3964:	str	w0, [sp, #140]
    3968:	b	3648 <PySequence_Fast@plt+0x1578>
    396c:	mov	w0, #0xd                   	// #13
    3970:	str	w0, [sp, #140]
    3974:	b	3648 <PySequence_Fast@plt+0x1578>
    3978:	add	x2, x19, #0x7
    397c:	nop
    3980:	mov	x1, x21
    3984:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3988:	add	x0, x0, #0x9c8
    398c:	bl	33c0 <PySequence_Fast@plt+0x12f0>
    3990:	b	37b4 <PySequence_Fast@plt+0x16e4>
    3994:	sub	w1, w0, #0x37
    3998:	orr	w1, w1, w10
    399c:	str	w1, [sp, #140]
    39a0:	b	3880 <PySequence_Fast@plt+0x17b0>
    39a4:	ldrh	w0, [x28, x22, lsl #1]
    39a8:	b	3854 <PySequence_Fast@plt+0x1784>
    39ac:	mov	x22, x11
    39b0:	b	3648 <PySequence_Fast@plt+0x1578>
    39b4:	mov	w2, #0xffff2800            	// #-55296
    39b8:	add	w0, w1, w2
    39bc:	cmp	w0, #0x3ff
    39c0:	b.hi	39ac <PySequence_Fast@plt+0x18dc>  // b.pmore
    39c4:	add	x12, x19, #0xc
    39c8:	cmp	x12, x24
    39cc:	b.ge	39ac <PySequence_Fast@plt+0x18dc>  // b.tcont
    39d0:	cmp	w20, #0x1
    39d4:	add	x0, x22, #0x2
    39d8:	b.eq	3bc4 <PySequence_Fast@plt+0x1af4>  // b.none
    39dc:	cmp	w20, #0x2
    39e0:	b.eq	3be4 <PySequence_Fast@plt+0x1b14>  // b.none
    39e4:	ldr	w2, [x28, x11, lsl #2]
    39e8:	cmp	w2, #0x5c
    39ec:	b.ne	39ac <PySequence_Fast@plt+0x18dc>  // b.any
    39f0:	ldr	w0, [x28, x0, lsl #2]
    39f4:	add	x10, x22, #0x3
    39f8:	cmp	w0, #0x75
    39fc:	cset	w0, eq  // eq = none
    3a00:	mov	x22, x11
    3a04:	cbz	w0, 3648 <PySequence_Fast@plt+0x1578>
    3a08:	cmp	x12, x10
    3a0c:	b.le	3648 <PySequence_Fast@plt+0x1578>
    3a10:	mov	w2, #0x0                   	// #0
    3a14:	cmp	w20, #0x1
    3a18:	b.eq	3c38 <PySequence_Fast@plt+0x1b68>  // b.none
    3a1c:	cmp	w20, #0x2
    3a20:	b.eq	3c60 <PySequence_Fast@plt+0x1b90>  // b.none
    3a24:	ldr	w0, [x28, x10, lsl #2]
    3a28:	lsl	w8, w2, #4
    3a2c:	cmp	w0, #0x46
    3a30:	b.hi	3b50 <PySequence_Fast@plt+0x1a80>  // b.pmore
    3a34:	cmp	w0, #0x40
    3a38:	b.hi	3c54 <PySequence_Fast@plt+0x1b84>  // b.pmore
    3a3c:	sub	w0, w0, #0x30
    3a40:	cmp	w0, #0x9
    3a44:	b.hi	3978 <PySequence_Fast@plt+0x18a8>  // b.pmore
    3a48:	orr	w2, w8, w0
    3a4c:	add	x10, x10, #0x1
    3a50:	cmp	x12, x10
    3a54:	b.gt	3a14 <PySequence_Fast@plt+0x1944>
    3a58:	mov	w0, #0xffff2400            	// #-56320
    3a5c:	add	w0, w2, w0
    3a60:	cmp	w0, #0x3ff
    3a64:	b.hi	39ac <PySequence_Fast@plt+0x18dc>  // b.pmore
    3a68:	ubfiz	w0, w1, #10, #10
    3a6c:	and	w2, w2, #0x3ff
    3a70:	orr	w0, w0, w2
    3a74:	mov	x22, x12
    3a78:	add	w0, w0, #0x10, lsl #12
    3a7c:	str	w0, [sp, #140]
    3a80:	b	3648 <PySequence_Fast@plt+0x1578>
    3a84:	ldr	x2, [sp, #120]
    3a88:	mov	x1, x21
    3a8c:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3a90:	add	x0, x0, #0x998
    3a94:	bl	33c0 <PySequence_Fast@plt+0x12f0>
    3a98:	b	37b4 <PySequence_Fast@plt+0x16e4>
    3a9c:	ldr	x0, [x27]
    3aa0:	sub	x0, x0, #0x1
    3aa4:	str	x0, [x27]
    3aa8:	cbz	x0, 3b38 <PySequence_Fast@plt+0x1a68>
    3aac:	ldr	x1, [sp, #96]
    3ab0:	mov	x0, #0xffffffffffffffff    	// #-1
    3ab4:	str	x0, [x1]
    3ab8:	b	3698 <PySequence_Fast@plt+0x15c8>
    3abc:	cbz	x26, 3b68 <PySequence_Fast@plt+0x1a98>
    3ac0:	cbz	x27, 3aec <PySequence_Fast@plt+0x1a1c>
    3ac4:	mov	x1, x27
    3ac8:	mov	x0, x26
    3acc:	str	x2, [sp, #104]
    3ad0:	bl	1eb0 <PyList_Append@plt>
    3ad4:	ldr	x2, [sp, #104]
    3ad8:	cbnz	w0, 3b8c <PySequence_Fast@plt+0x1abc>
    3adc:	ldr	x0, [x27]
    3ae0:	sub	x0, x0, #0x1
    3ae4:	str	x0, [x27]
    3ae8:	cbz	x0, 3c40 <PySequence_Fast@plt+0x1b70>
    3aec:	adrp	x19, 18000 <PyInit__json@@Base+0x11918>
    3af0:	add	x19, x19, #0x8f0
    3af4:	ldr	x0, [x19, #8]
    3af8:	cbz	x0, 3c04 <PySequence_Fast@plt+0x1b34>
    3afc:	mov	x1, x26
    3b00:	str	x2, [sp, #104]
    3b04:	bl	1e00 <PyUnicode_Join@plt>
    3b08:	mov	x27, x0
    3b0c:	cbz	x0, 3ba4 <PySequence_Fast@plt+0x1ad4>
    3b10:	ldr	x0, [x26]
    3b14:	ldr	x2, [sp, #104]
    3b18:	sub	x0, x0, #0x1
    3b1c:	str	x0, [x26]
    3b20:	cbz	x0, 3c28 <PySequence_Fast@plt+0x1b58>
    3b24:	ldr	x0, [sp, #96]
    3b28:	ldp	x19, x20, [sp, #16]
    3b2c:	ldp	x25, x26, [sp, #64]
    3b30:	str	x2, [x0]
    3b34:	b	36bc <PySequence_Fast@plt+0x15ec>
    3b38:	mov	x0, x27
    3b3c:	bl	1e30 <_Py_Dealloc@plt>
    3b40:	ldr	x1, [sp, #96]
    3b44:	mov	x0, #0xffffffffffffffff    	// #-1
    3b48:	str	x0, [x1]
    3b4c:	b	3698 <PySequence_Fast@plt+0x15c8>
    3b50:	sub	w2, w0, #0x61
    3b54:	cmp	w2, #0x5
    3b58:	b.hi	3978 <PySequence_Fast@plt+0x18a8>  // b.pmore
    3b5c:	sub	w4, w0, #0x57
    3b60:	orr	w2, w4, w8
    3b64:	b	3a4c <PySequence_Fast@plt+0x197c>
    3b68:	cbnz	x27, 3b24 <PySequence_Fast@plt+0x1a54>
    3b6c:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3b70:	mov	x1, #0x0                   	// #0
    3b74:	add	x0, x0, #0xd68
    3b78:	str	x2, [sp, #104]
    3b7c:	bl	2050 <PyUnicode_FromStringAndSize@plt>
    3b80:	mov	x27, x0
    3b84:	ldr	x2, [sp, #104]
    3b88:	b	3b24 <PySequence_Fast@plt+0x1a54>
    3b8c:	ldr	x0, [x27]
    3b90:	sub	x0, x0, #0x1
    3b94:	str	x0, [x27]
    3b98:	cbnz	x0, 3ba4 <PySequence_Fast@plt+0x1ad4>
    3b9c:	mov	x0, x27
    3ba0:	bl	1e30 <_Py_Dealloc@plt>
    3ba4:	ldr	x1, [sp, #96]
    3ba8:	mov	x0, #0xffffffffffffffff    	// #-1
    3bac:	str	x0, [x1]
    3bb0:	ldr	x0, [x26]
    3bb4:	sub	x0, x0, #0x1
    3bb8:	str	x0, [x26]
    3bbc:	cbnz	x0, 37e8 <PySequence_Fast@plt+0x1718>
    3bc0:	b	36a8 <PySequence_Fast@plt+0x15d8>
    3bc4:	ldrb	w2, [x28, x11]
    3bc8:	cmp	w2, #0x5c
    3bcc:	b.ne	39ac <PySequence_Fast@plt+0x18dc>  // b.any
    3bd0:	ldrb	w0, [x28, x0]
    3bd4:	add	x10, x22, #0x3
    3bd8:	cmp	w0, #0x75
    3bdc:	cset	w0, eq  // eq = none
    3be0:	b	3a00 <PySequence_Fast@plt+0x1930>
    3be4:	ldrh	w2, [x28, x11, lsl #1]
    3be8:	cmp	w2, #0x5c
    3bec:	b.ne	39ac <PySequence_Fast@plt+0x18dc>  // b.any
    3bf0:	ldrh	w0, [x28, x0, lsl #1]
    3bf4:	add	x10, x22, #0x3
    3bf8:	cmp	w0, #0x75
    3bfc:	cset	w0, eq  // eq = none
    3c00:	b	3a00 <PySequence_Fast@plt+0x1930>
    3c04:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3c08:	mov	x1, #0x0                   	// #0
    3c0c:	add	x0, x0, #0xd68
    3c10:	str	x2, [sp, #104]
    3c14:	bl	2050 <PyUnicode_FromStringAndSize@plt>
    3c18:	str	x0, [x19, #8]
    3c1c:	ldr	x2, [sp, #104]
    3c20:	cbnz	x0, 3afc <PySequence_Fast@plt+0x1a2c>
    3c24:	b	3ba4 <PySequence_Fast@plt+0x1ad4>
    3c28:	mov	x0, x26
    3c2c:	bl	1e30 <_Py_Dealloc@plt>
    3c30:	ldr	x2, [sp, #104]
    3c34:	b	3b24 <PySequence_Fast@plt+0x1a54>
    3c38:	ldrb	w0, [x28, x10]
    3c3c:	b	3a28 <PySequence_Fast@plt+0x1958>
    3c40:	mov	x0, x27
    3c44:	str	x2, [sp, #104]
    3c48:	bl	1e30 <_Py_Dealloc@plt>
    3c4c:	ldr	x2, [sp, #104]
    3c50:	b	3aec <PySequence_Fast@plt+0x1a1c>
    3c54:	sub	w2, w0, #0x37
    3c58:	orr	w2, w2, w8
    3c5c:	b	3a4c <PySequence_Fast@plt+0x197c>
    3c60:	ldrh	w0, [x28, x10, lsl #1]
    3c64:	b	3a28 <PySequence_Fast@plt+0x1958>
    3c68:	stp	x29, x30, [sp, #-48]!
    3c6c:	mov	x29, sp
    3c70:	stp	x19, x20, [sp, #16]
    3c74:	mov	x19, x0
    3c78:	mov	x20, x1
    3c7c:	ldr	x0, [x0, #24]
    3c80:	str	x21, [sp, #32]
    3c84:	mov	x21, x2
    3c88:	cbz	x0, 3c98 <PySequence_Fast@plt+0x1bc8>
    3c8c:	mov	x1, x2
    3c90:	blr	x20
    3c94:	cbnz	w0, 3cf4 <PySequence_Fast@plt+0x1c24>
    3c98:	ldr	x0, [x19, #32]
    3c9c:	cbz	x0, 3cac <PySequence_Fast@plt+0x1bdc>
    3ca0:	mov	x1, x21
    3ca4:	blr	x20
    3ca8:	cbnz	w0, 3cf4 <PySequence_Fast@plt+0x1c24>
    3cac:	ldr	x0, [x19, #40]
    3cb0:	cbz	x0, 3cc0 <PySequence_Fast@plt+0x1bf0>
    3cb4:	mov	x1, x21
    3cb8:	blr	x20
    3cbc:	cbnz	w0, 3cf4 <PySequence_Fast@plt+0x1c24>
    3cc0:	ldr	x0, [x19, #48]
    3cc4:	cbz	x0, 3cd4 <PySequence_Fast@plt+0x1c04>
    3cc8:	mov	x1, x21
    3ccc:	blr	x20
    3cd0:	cbnz	w0, 3cf4 <PySequence_Fast@plt+0x1c24>
    3cd4:	ldr	x0, [x19, #56]
    3cd8:	cbz	x0, 3cf4 <PySequence_Fast@plt+0x1c24>
    3cdc:	mov	x1, x21
    3ce0:	mov	x16, x20
    3ce4:	ldp	x19, x20, [sp, #16]
    3ce8:	ldr	x21, [sp, #32]
    3cec:	ldp	x29, x30, [sp], #48
    3cf0:	br	x16
    3cf4:	ldp	x19, x20, [sp, #16]
    3cf8:	ldr	x21, [sp, #32]
    3cfc:	ldp	x29, x30, [sp], #48
    3d00:	ret
    3d04:	nop
    3d08:	stp	x29, x30, [sp, #-48]!
    3d0c:	mov	x29, sp
    3d10:	stp	x19, x20, [sp, #16]
    3d14:	mov	x19, x0
    3d18:	mov	x20, x1
    3d1c:	ldr	x0, [x0, #16]
    3d20:	str	x21, [sp, #32]
    3d24:	mov	x21, x2
    3d28:	cbz	x0, 3d38 <PySequence_Fast@plt+0x1c68>
    3d2c:	mov	x1, x2
    3d30:	blr	x20
    3d34:	cbnz	w0, 3da8 <PySequence_Fast@plt+0x1cd8>
    3d38:	ldr	x0, [x19, #24]
    3d3c:	cbz	x0, 3d4c <PySequence_Fast@plt+0x1c7c>
    3d40:	mov	x1, x21
    3d44:	blr	x20
    3d48:	cbnz	w0, 3da8 <PySequence_Fast@plt+0x1cd8>
    3d4c:	ldr	x0, [x19, #32]
    3d50:	cbz	x0, 3d60 <PySequence_Fast@plt+0x1c90>
    3d54:	mov	x1, x21
    3d58:	blr	x20
    3d5c:	cbnz	w0, 3da8 <PySequence_Fast@plt+0x1cd8>
    3d60:	ldr	x0, [x19, #40]
    3d64:	cbz	x0, 3d74 <PySequence_Fast@plt+0x1ca4>
    3d68:	mov	x1, x21
    3d6c:	blr	x20
    3d70:	cbnz	w0, 3da8 <PySequence_Fast@plt+0x1cd8>
    3d74:	ldr	x0, [x19, #48]
    3d78:	cbz	x0, 3d88 <PySequence_Fast@plt+0x1cb8>
    3d7c:	mov	x1, x21
    3d80:	blr	x20
    3d84:	cbnz	w0, 3da8 <PySequence_Fast@plt+0x1cd8>
    3d88:	ldr	x0, [x19, #56]
    3d8c:	cbz	x0, 3da8 <PySequence_Fast@plt+0x1cd8>
    3d90:	mov	x1, x21
    3d94:	mov	x16, x20
    3d98:	ldp	x19, x20, [sp, #16]
    3d9c:	ldr	x21, [sp, #32]
    3da0:	ldp	x29, x30, [sp], #48
    3da4:	br	x16
    3da8:	ldp	x19, x20, [sp, #16]
    3dac:	ldr	x21, [sp, #32]
    3db0:	ldp	x29, x30, [sp], #48
    3db4:	ret
    3db8:	stp	x29, x30, [sp, #-32]!
    3dbc:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    3dc0:	mov	x29, sp
    3dc4:	ldr	x1, [x1, #4016]
    3dc8:	cmp	x0, x1
    3dcc:	b.eq	3e40 <PySequence_Fast@plt+0x1d70>  // b.none
    3dd0:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    3dd4:	ldr	x1, [x1, #4024]
    3dd8:	cmp	x0, x1
    3ddc:	b.eq	3e78 <PySequence_Fast@plt+0x1da8>  // b.none
    3de0:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    3de4:	ldr	x1, [x1, #3992]
    3de8:	cmp	x0, x1
    3dec:	b.ne	3e1c <PySequence_Fast@plt+0x1d4c>  // b.any
    3df0:	str	x19, [sp, #16]
    3df4:	adrp	x19, 18000 <PyInit__json@@Base+0x11918>
    3df8:	add	x19, x19, #0x8f0
    3dfc:	ldr	x0, [x19, #32]
    3e00:	cbz	x0, 3ea4 <PySequence_Fast@plt+0x1dd4>
    3e04:	ldr	x1, [x0]
    3e08:	ldr	x19, [sp, #16]
    3e0c:	add	x1, x1, #0x1
    3e10:	str	x1, [x0]
    3e14:	ldp	x29, x30, [sp], #32
    3e18:	ret
    3e1c:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    3e20:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3e24:	add	x1, x1, #0x9f8
    3e28:	ldr	x0, [x0, #3968]
    3e2c:	ldr	x0, [x0]
    3e30:	bl	1e60 <PyErr_SetString@plt>
    3e34:	mov	x0, #0x0                   	// #0
    3e38:	ldp	x29, x30, [sp], #32
    3e3c:	ret
    3e40:	str	x19, [sp, #16]
    3e44:	adrp	x19, 18000 <PyInit__json@@Base+0x11918>
    3e48:	add	x19, x19, #0x8f0
    3e4c:	ldr	x0, [x19, #16]
    3e50:	cbnz	x0, 3e04 <PySequence_Fast@plt+0x1d34>
    3e54:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3e58:	add	x0, x0, #0x9e0
    3e5c:	bl	2000 <PyUnicode_InternFromString@plt>
    3e60:	str	x0, [x19, #16]
    3e64:	cbnz	x0, 3e04 <PySequence_Fast@plt+0x1d34>
    3e68:	mov	x0, #0x0                   	// #0
    3e6c:	ldr	x19, [sp, #16]
    3e70:	ldp	x29, x30, [sp], #32
    3e74:	ret
    3e78:	str	x19, [sp, #16]
    3e7c:	adrp	x19, 18000 <PyInit__json@@Base+0x11918>
    3e80:	add	x19, x19, #0x8f0
    3e84:	ldr	x0, [x19, #24]
    3e88:	cbnz	x0, 3e04 <PySequence_Fast@plt+0x1d34>
    3e8c:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3e90:	add	x0, x0, #0x9e8
    3e94:	bl	2000 <PyUnicode_InternFromString@plt>
    3e98:	str	x0, [x19, #24]
    3e9c:	cbz	x0, 3e68 <PySequence_Fast@plt+0x1d98>
    3ea0:	b	3e04 <PySequence_Fast@plt+0x1d34>
    3ea4:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3ea8:	add	x0, x0, #0x9f0
    3eac:	bl	2000 <PyUnicode_InternFromString@plt>
    3eb0:	str	x0, [x19, #32]
    3eb4:	cbz	x0, 3e68 <PySequence_Fast@plt+0x1d98>
    3eb8:	b	3e04 <PySequence_Fast@plt+0x1d34>
    3ebc:	nop
    3ec0:	ldr	d1, [x1, #16]
    3ec4:	mov	x2, #0x7fefffffffffffff    	// #9218868437227405311
    3ec8:	fmov	d0, x2
    3ecc:	fabs	d2, d1
    3ed0:	fcmp	d2, d0
    3ed4:	b.ls	3ef8 <PySequence_Fast@plt+0x1e28>  // b.plast
    3ed8:	ldr	w0, [x0]
    3edc:	cbz	w0, 3f28 <PySequence_Fast@plt+0x1e58>
    3ee0:	fcmpe	d1, #0.0
    3ee4:	b.gt	3f1c <PySequence_Fast@plt+0x1e4c>
    3ee8:	b.mi	3f10 <PySequence_Fast@plt+0x1e40>  // b.first
    3eec:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3ef0:	add	x0, x0, #0xa60
    3ef4:	b	1fe0 <PyUnicode_FromString@plt>
    3ef8:	adrp	x2, 17000 <PyInit__json@@Base+0x10918>
    3efc:	mov	x0, x1
    3f00:	ldr	x1, [x2, #3952]
    3f04:	ldr	x1, [x1, #88]
    3f08:	mov	x16, x1
    3f0c:	br	x16
    3f10:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3f14:	add	x0, x0, #0xa50
    3f18:	b	1fe0 <PyUnicode_FromString@plt>
    3f1c:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3f20:	add	x0, x0, #0xa40
    3f24:	b	1fe0 <PyUnicode_FromString@plt>
    3f28:	stp	x29, x30, [sp, #-16]!
    3f2c:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    3f30:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3f34:	mov	x29, sp
    3f38:	ldr	x0, [x0, #3968]
    3f3c:	add	x1, x1, #0xa08
    3f40:	ldr	x0, [x0]
    3f44:	bl	1e60 <PyErr_SetString@plt>
    3f48:	mov	x0, #0x0                   	// #0
    3f4c:	ldp	x29, x30, [sp], #16
    3f50:	ret
    3f54:	nop
    3f58:	stp	x29, x30, [sp, #-32]!
    3f5c:	mov	x2, #0x0                   	// #0
    3f60:	mov	x29, sp
    3f64:	str	x19, [sp, #16]
    3f68:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    3f6c:	cbz	x0, 3fbc <PySequence_Fast@plt+0x1eec>
    3f70:	mov	x19, x0
    3f74:	ldr	x0, [x0, #8]
    3f78:	ldr	x1, [x0, #168]
    3f7c:	tbz	w1, #28, 3f90 <PySequence_Fast@plt+0x1ec0>
    3f80:	mov	x0, x19
    3f84:	ldr	x19, [sp, #16]
    3f88:	ldp	x29, x30, [sp], #32
    3f8c:	ret
    3f90:	adrp	x3, 17000 <PyInit__json@@Base+0x10918>
    3f94:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3f98:	ldr	x2, [x0, #24]
    3f9c:	add	x1, x1, #0xa68
    3fa0:	ldr	x3, [x3, #3976]
    3fa4:	ldr	x0, [x3]
    3fa8:	bl	2040 <PyErr_Format@plt>
    3fac:	ldr	x0, [x19]
    3fb0:	sub	x0, x0, #0x1
    3fb4:	str	x0, [x19]
    3fb8:	cbz	x0, 3fd0 <PySequence_Fast@plt+0x1f00>
    3fbc:	mov	x19, #0x0                   	// #0
    3fc0:	mov	x0, x19
    3fc4:	ldr	x19, [sp, #16]
    3fc8:	ldp	x29, x30, [sp], #32
    3fcc:	ret
    3fd0:	mov	x0, x19
    3fd4:	mov	x19, #0x0                   	// #0
    3fd8:	bl	1e30 <_Py_Dealloc@plt>
    3fdc:	b	3f80 <PySequence_Fast@plt+0x1eb0>
    3fe0:	stp	x29, x30, [sp, #-144]!
    3fe4:	mov	x29, sp
    3fe8:	stp	x27, x28, [sp, #80]
    3fec:	adrp	x28, 17000 <PyInit__json@@Base+0x10918>
    3ff0:	adrp	x27, 17000 <PyInit__json@@Base+0x10918>
    3ff4:	ldr	x4, [x28, #4024]
    3ff8:	stp	x23, x24, [sp, #48]
    3ffc:	adrp	x23, 17000 <PyInit__json@@Base+0x10918>
    4000:	stp	x19, x20, [sp, #16]
    4004:	cmp	x2, x4
    4008:	mov	x19, x2
    400c:	ldr	x20, [x23, #4016]
    4010:	mov	x24, x1
    4014:	ldr	x2, [x27, #3992]
    4018:	ccmp	x19, x20, #0x4, ne  // ne = any
    401c:	ccmp	x19, x2, #0x4, ne  // ne = any
    4020:	b.ne	404c <PySequence_Fast@plt+0x1f7c>  // b.any
    4024:	mov	x0, x19
    4028:	bl	3db8 <PySequence_Fast@plt+0x1ce8>
    402c:	mov	x1, x0
    4030:	mov	x0, x24
    4034:	cbz	x1, 427c <PySequence_Fast@plt+0x21ac>
    4038:	ldp	x19, x20, [sp, #16]
    403c:	ldp	x23, x24, [sp, #48]
    4040:	ldp	x27, x28, [sp, #80]
    4044:	ldp	x29, x30, [sp], #144
    4048:	b	3078 <PySequence_Fast@plt+0xfa8>
    404c:	stp	x25, x26, [sp, #64]
    4050:	mov	x25, x0
    4054:	ldr	x0, [x19, #8]
    4058:	ldr	x1, [x0, #168]
    405c:	tbz	w1, #28, 4098 <PySequence_Fast@plt+0x1fc8>
    4060:	ldr	x2, [x25, #72]
    4064:	cbz	x2, 4228 <PySequence_Fast@plt+0x2158>
    4068:	mov	x1, x19
    406c:	mov	x0, #0x0                   	// #0
    4070:	blr	x2
    4074:	mov	x1, x0
    4078:	cbz	x1, 4280 <PySequence_Fast@plt+0x21b0>
    407c:	ldp	x25, x26, [sp, #64]
    4080:	mov	x0, x24
    4084:	ldp	x19, x20, [sp, #16]
    4088:	ldp	x23, x24, [sp, #48]
    408c:	ldp	x27, x28, [sp, #80]
    4090:	ldp	x29, x30, [sp], #144
    4094:	b	3078 <PySequence_Fast@plt+0xfa8>
    4098:	tbnz	w1, #24, 420c <PySequence_Fast@plt+0x213c>
    409c:	stp	x21, x22, [sp, #32]
    40a0:	adrp	x22, 17000 <PyInit__json@@Base+0x10918>
    40a4:	ldr	x1, [x22, #3952]
    40a8:	cmp	x0, x1
    40ac:	b.eq	423c <PySequence_Fast@plt+0x216c>  // b.none
    40b0:	mov	x21, x3
    40b4:	bl	2030 <PyType_IsSubtype@plt>
    40b8:	mov	w26, w0
    40bc:	cbnz	w0, 423c <PySequence_Fast@plt+0x216c>
    40c0:	ldr	x0, [x19, #8]
    40c4:	ldr	x0, [x0, #168]
    40c8:	tst	x0, #0x6000000
    40cc:	b.ne	4288 <PySequence_Fast@plt+0x21b8>  // b.any
    40d0:	tbnz	w0, #29, 43d0 <PySequence_Fast@plt+0x2300>
    40d4:	ldr	x0, [x25, #16]
    40d8:	cmp	x0, x20
    40dc:	b.eq	4510 <PySequence_Fast@plt+0x2440>  // b.none
    40e0:	mov	x0, x19
    40e4:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    40e8:	mov	x20, x0
    40ec:	cbz	x0, 46bc <PySequence_Fast@plt+0x25ec>
    40f0:	mov	x1, x0
    40f4:	ldr	x0, [x25, #16]
    40f8:	bl	1e10 <PyDict_Contains@plt>
    40fc:	cbnz	w0, 49e0 <PySequence_Fast@plt+0x2910>
    4100:	ldr	x0, [x25, #16]
    4104:	mov	x2, x19
    4108:	mov	x1, x20
    410c:	bl	2020 <PyDict_SetItem@plt>
    4110:	cbnz	w0, 4a00 <PySequence_Fast@plt+0x2930>
    4114:	ldr	x0, [x25, #24]
    4118:	mov	x1, x19
    411c:	mov	x2, #0x0                   	// #0
    4120:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    4124:	mov	x19, x0
    4128:	cbz	x0, 4a00 <PySequence_Fast@plt+0x2930>
    412c:	bl	1f20 <PyThreadState_Get@plt>
    4130:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    4134:	str	x1, [sp, #96]
    4138:	ldr	x2, [x1, #3984]
    413c:	ldr	w1, [x0, #32]
    4140:	add	w1, w1, #0x1
    4144:	str	w1, [x0, #32]
    4148:	ldr	w0, [x2]
    414c:	cmp	w1, w0
    4150:	b.le	4164 <PySequence_Fast@plt+0x2094>
    4154:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    4158:	add	x0, x0, #0xa98
    415c:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    4160:	cbnz	w0, 46a0 <PySequence_Fast@plt+0x25d0>
    4164:	mov	x3, x21
    4168:	mov	x1, x24
    416c:	mov	x2, x19
    4170:	mov	x0, x25
    4174:	bl	3fe0 <PySequence_Fast@plt+0x1f10>
    4178:	mov	w26, w0
    417c:	bl	1f20 <PyThreadState_Get@plt>
    4180:	ldr	w2, [x0, #32]
    4184:	ldr	x1, [sp, #96]
    4188:	sub	w2, w2, #0x1
    418c:	str	w2, [x0, #32]
    4190:	ldr	x23, [x1, #3984]
    4194:	ldr	w1, [x23]
    4198:	cmp	w1, #0xc9
    419c:	sub	w3, w1, #0x32
    41a0:	asr	w1, w1, #2
    41a4:	add	w1, w1, w1, lsl #1
    41a8:	csel	w1, w1, w3, lt  // lt = tstop
    41ac:	cmp	w2, w1
    41b0:	b.lt	4504 <PySequence_Fast@plt+0x2434>  // b.tstop
    41b4:	ldr	x0, [x19]
    41b8:	sub	x0, x0, #0x1
    41bc:	str	x0, [x19]
    41c0:	cbz	x0, 4260 <PySequence_Fast@plt+0x2190>
    41c4:	cbnz	w26, 46b8 <PySequence_Fast@plt+0x25e8>
    41c8:	cbz	x20, 41ec <PySequence_Fast@plt+0x211c>
    41cc:	ldr	x0, [x25, #16]
    41d0:	mov	x1, x20
    41d4:	bl	1f30 <PyDict_DelItem@plt>
    41d8:	cbnz	w0, 4a00 <PySequence_Fast@plt+0x2930>
    41dc:	ldr	x0, [x20]
    41e0:	sub	x0, x0, #0x1
    41e4:	str	x0, [x20]
    41e8:	cbz	x0, 426c <PySequence_Fast@plt+0x219c>
    41ec:	ldp	x21, x22, [sp, #32]
    41f0:	mov	w0, w26
    41f4:	ldp	x19, x20, [sp, #16]
    41f8:	ldp	x23, x24, [sp, #48]
    41fc:	ldp	x25, x26, [sp, #64]
    4200:	ldp	x27, x28, [sp, #80]
    4204:	ldp	x29, x30, [sp], #144
    4208:	ret
    420c:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    4210:	mov	x0, x19
    4214:	ldr	x1, [x1, #4032]
    4218:	ldr	x1, [x1, #88]
    421c:	blr	x1
    4220:	mov	x1, x0
    4224:	b	4078 <PySequence_Fast@plt+0x1fa8>
    4228:	ldr	x0, [x25, #32]
    422c:	mov	x1, x19
    4230:	bl	3f58 <PySequence_Fast@plt+0x1e88>
    4234:	mov	x1, x0
    4238:	b	4078 <PySequence_Fast@plt+0x1fa8>
    423c:	mov	x1, x19
    4240:	add	x0, x25, #0x44
    4244:	bl	3ec0 <PySequence_Fast@plt+0x1df0>
    4248:	mov	x1, x0
    424c:	cbz	x0, 46bc <PySequence_Fast@plt+0x25ec>
    4250:	mov	x0, x24
    4254:	ldp	x21, x22, [sp, #32]
    4258:	ldp	x25, x26, [sp, #64]
    425c:	b	4084 <PySequence_Fast@plt+0x1fb4>
    4260:	mov	x0, x19
    4264:	bl	1e30 <_Py_Dealloc@plt>
    4268:	b	41c4 <PySequence_Fast@plt+0x20f4>
    426c:	mov	x0, x20
    4270:	bl	1e30 <_Py_Dealloc@plt>
    4274:	ldp	x21, x22, [sp, #32]
    4278:	b	41f0 <PySequence_Fast@plt+0x2120>
    427c:	stp	x25, x26, [sp, #64]
    4280:	mov	w26, #0xffffffff            	// #-1
    4284:	b	41f0 <PySequence_Fast@plt+0x2120>
    4288:	bl	1f20 <PyThreadState_Get@plt>
    428c:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    4290:	str	x1, [sp, #96]
    4294:	ldr	x2, [x1, #3984]
    4298:	ldr	w1, [x0, #32]
    429c:	add	w1, w1, #0x1
    42a0:	str	w1, [x0, #32]
    42a4:	ldr	w0, [x2]
    42a8:	cmp	w1, w0
    42ac:	b.le	42c0 <PySequence_Fast@plt+0x21f0>
    42b0:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    42b4:	add	x0, x0, #0xa98
    42b8:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    42bc:	cbnz	w0, 46bc <PySequence_Fast@plt+0x25ec>
    42c0:	adrp	x0, 18000 <PyInit__json@@Base+0x11918>
    42c4:	str	x0, [sp, #104]
    42c8:	add	x0, x0, #0x8f0
    42cc:	ldr	x1, [x0, #40]
    42d0:	cbz	x1, 44a8 <PySequence_Fast@plt+0x23d8>
    42d4:	ldr	x1, [x0, #48]
    42d8:	cbz	x1, 44a8 <PySequence_Fast@plt+0x23d8>
    42dc:	ldr	x0, [x0, #56]
    42e0:	cbz	x0, 44a8 <PySequence_Fast@plt+0x23d8>
    42e4:	mov	x0, x19
    42e8:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    42ec:	add	x1, x1, #0xab8
    42f0:	bl	20d0 <PySequence_Fast@plt>
    42f4:	mov	x20, x0
    42f8:	cbz	x0, 4374 <PySequence_Fast@plt+0x22a4>
    42fc:	ldr	x1, [x0, #16]
    4300:	cbz	x1, 458c <PySequence_Fast@plt+0x24bc>
    4304:	ldr	x0, [x23, #4016]
    4308:	ldr	x1, [x25, #16]
    430c:	cmp	x1, x0
    4310:	b.eq	45b8 <PySequence_Fast@plt+0x24e8>  // b.none
    4314:	mov	x0, x19
    4318:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    431c:	mov	x22, x0
    4320:	cbz	x0, 4364 <PySequence_Fast@plt+0x2294>
    4324:	mov	x1, x0
    4328:	ldr	x0, [x25, #16]
    432c:	bl	1e10 <PyDict_Contains@plt>
    4330:	cbz	w0, 46c8 <PySequence_Fast@plt+0x25f8>
    4334:	cmn	w0, #0x1
    4338:	b.eq	4354 <PySequence_Fast@plt+0x2284>  // b.none
    433c:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    4340:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    4344:	add	x1, x1, #0xaf8
    4348:	ldr	x0, [x0, #3968]
    434c:	ldr	x0, [x0]
    4350:	bl	1e60 <PyErr_SetString@plt>
    4354:	ldr	x0, [x22]
    4358:	sub	x0, x0, #0x1
    435c:	str	x0, [x22]
    4360:	cbz	x0, 4990 <PySequence_Fast@plt+0x28c0>
    4364:	ldr	x0, [x20]
    4368:	sub	x0, x0, #0x1
    436c:	str	x0, [x20]
    4370:	cbz	x0, 43c0 <PySequence_Fast@plt+0x22f0>
    4374:	mov	w26, #0xffffffff            	// #-1
    4378:	bl	1f20 <PyThreadState_Get@plt>
    437c:	ldr	w2, [x0, #32]
    4380:	ldr	x1, [sp, #96]
    4384:	sub	w2, w2, #0x1
    4388:	ldr	x23, [x1, #3984]
    438c:	ldr	w1, [x23]
    4390:	str	w2, [x0, #32]
    4394:	cmp	w1, #0xc9
    4398:	sub	w3, w1, #0x32
    439c:	asr	w1, w1, #2
    43a0:	add	w1, w1, w1, lsl #1
    43a4:	csel	w0, w1, w3, lt  // lt = tstop
    43a8:	cmp	w2, w0
    43ac:	b.ge	41ec <PySequence_Fast@plt+0x211c>  // b.tcont
    43b0:	bl	1f20 <PyThreadState_Get@plt>
    43b4:	strb	wzr, [x0, #36]
    43b8:	ldp	x21, x22, [sp, #32]
    43bc:	b	41f0 <PySequence_Fast@plt+0x2120>
    43c0:	mov	w26, #0xffffffff            	// #-1
    43c4:	mov	x0, x20
    43c8:	bl	1e30 <_Py_Dealloc@plt>
    43cc:	b	4378 <PySequence_Fast@plt+0x22a8>
    43d0:	bl	1f20 <PyThreadState_Get@plt>
    43d4:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    43d8:	str	x1, [sp, #96]
    43dc:	ldr	x2, [x1, #3984]
    43e0:	ldr	w1, [x0, #32]
    43e4:	add	w1, w1, #0x1
    43e8:	str	w1, [x0, #32]
    43ec:	ldr	w0, [x2]
    43f0:	cmp	w1, w0
    43f4:	b.le	4408 <PySequence_Fast@plt+0x2338>
    43f8:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    43fc:	add	x0, x0, #0xa98
    4400:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    4404:	cbnz	w0, 46bc <PySequence_Fast@plt+0x25ec>
    4408:	adrp	x0, 18000 <PyInit__json@@Base+0x11918>
    440c:	str	x0, [sp, #104]
    4410:	add	x0, x0, #0x8f0
    4414:	ldr	x1, [x0, #64]
    4418:	cbz	x1, 4530 <PySequence_Fast@plt+0x2460>
    441c:	ldr	x1, [x0, #72]
    4420:	cbz	x1, 4530 <PySequence_Fast@plt+0x2460>
    4424:	ldr	x0, [x0, #80]
    4428:	cbz	x0, 4530 <PySequence_Fast@plt+0x2460>
    442c:	ldr	x0, [x19, #16]
    4430:	cbz	x0, 499c <PySequence_Fast@plt+0x28cc>
    4434:	ldr	x0, [x23, #4016]
    4438:	ldr	x1, [x25, #16]
    443c:	cmp	x1, x0
    4440:	b.eq	46f8 <PySequence_Fast@plt+0x2628>  // b.none
    4444:	mov	x0, x19
    4448:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    444c:	str	x0, [sp, #120]
    4450:	mov	x1, x0
    4454:	cbz	x0, 4374 <PySequence_Fast@plt+0x22a4>
    4458:	ldr	x0, [x25, #16]
    445c:	bl	1e10 <PyDict_Contains@plt>
    4460:	cbz	w0, 49b8 <PySequence_Fast@plt+0x28e8>
    4464:	cmn	w0, #0x1
    4468:	b.eq	4484 <PySequence_Fast@plt+0x23b4>  // b.none
    446c:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    4470:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    4474:	add	x1, x1, #0xaf8
    4478:	ldr	x0, [x0, #3968]
    447c:	ldr	x0, [x0]
    4480:	bl	1e60 <PyErr_SetString@plt>
    4484:	ldr	x1, [sp, #120]
    4488:	ldr	x0, [x1]
    448c:	sub	x0, x0, #0x1
    4490:	str	x0, [x1]
    4494:	cbnz	x0, 4374 <PySequence_Fast@plt+0x22a4>
    4498:	mov	x0, x1
    449c:	mov	w26, #0xffffffff            	// #-1
    44a0:	bl	1e30 <_Py_Dealloc@plt>
    44a4:	b	4378 <PySequence_Fast@plt+0x22a8>
    44a8:	ldr	x0, [sp, #104]
    44ac:	add	x20, x0, #0x8f0
    44b0:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    44b4:	add	x0, x0, #0xae0
    44b8:	bl	2000 <PyUnicode_InternFromString@plt>
    44bc:	mov	x1, x0
    44c0:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    44c4:	add	x0, x0, #0xae8
    44c8:	str	x1, [x20, #40]
    44cc:	bl	2000 <PyUnicode_InternFromString@plt>
    44d0:	mov	x1, x0
    44d4:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    44d8:	add	x0, x0, #0xaf0
    44dc:	str	x1, [x20, #48]
    44e0:	bl	2000 <PyUnicode_InternFromString@plt>
    44e4:	str	x0, [x20, #56]
    44e8:	ldr	x1, [x20, #40]
    44ec:	cbz	x1, 4374 <PySequence_Fast@plt+0x22a4>
    44f0:	ldr	x1, [x20, #48]
    44f4:	cmp	x1, #0x0
    44f8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    44fc:	b.ne	42e4 <PySequence_Fast@plt+0x2214>  // b.any
    4500:	b	4374 <PySequence_Fast@plt+0x22a4>
    4504:	bl	1f20 <PyThreadState_Get@plt>
    4508:	strb	wzr, [x0, #36]
    450c:	b	41b4 <PySequence_Fast@plt+0x20e4>
    4510:	ldr	x0, [x25, #24]
    4514:	mov	x1, x19
    4518:	mov	x2, #0x0                   	// #0
    451c:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    4520:	mov	x19, x0
    4524:	cbz	x0, 46bc <PySequence_Fast@plt+0x25ec>
    4528:	mov	x20, #0x0                   	// #0
    452c:	b	412c <PySequence_Fast@plt+0x205c>
    4530:	ldr	x0, [sp, #104]
    4534:	add	x20, x0, #0x8f0
    4538:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    453c:	add	x0, x0, #0xb18
    4540:	bl	2000 <PyUnicode_InternFromString@plt>
    4544:	mov	x1, x0
    4548:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    454c:	add	x0, x0, #0xb20
    4550:	str	x1, [x20, #64]
    4554:	bl	2000 <PyUnicode_InternFromString@plt>
    4558:	mov	x1, x0
    455c:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    4560:	add	x0, x0, #0xb28
    4564:	str	x1, [x20, #72]
    4568:	bl	2000 <PyUnicode_InternFromString@plt>
    456c:	str	x0, [x20, #80]
    4570:	ldr	x1, [x20, #64]
    4574:	cbz	x1, 4374 <PySequence_Fast@plt+0x22a4>
    4578:	ldr	x1, [x20, #72]
    457c:	cmp	x1, #0x0
    4580:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    4584:	b.ne	442c <PySequence_Fast@plt+0x235c>  // b.any
    4588:	b	4374 <PySequence_Fast@plt+0x22a4>
    458c:	ldr	x1, [x0]
    4590:	sub	x1, x1, #0x1
    4594:	str	x1, [x0]
    4598:	cbz	x1, 49d0 <PySequence_Fast@plt+0x2900>
    459c:	ldr	x0, [sp, #104]
    45a0:	add	x1, x0, #0x8f0
    45a4:	mov	x0, x24
    45a8:	ldr	x1, [x1, #56]
    45ac:	bl	1e70 <_PyAccu_Accumulate@plt>
    45b0:	mov	w26, w0
    45b4:	b	4378 <PySequence_Fast@plt+0x22a8>
    45b8:	ldr	x0, [sp, #104]
    45bc:	mov	x22, #0x0                   	// #0
    45c0:	add	x1, x0, #0x8f0
    45c4:	mov	x0, x24
    45c8:	ldr	x1, [x1, #40]
    45cc:	bl	1e70 <_PyAccu_Accumulate@plt>
    45d0:	cbnz	w0, 4364 <PySequence_Fast@plt+0x2294>
    45d4:	ldr	x6, [x23, #4016]
    45d8:	ldr	x1, [x25, #40]
    45dc:	ldr	x0, [x20, #16]
    45e0:	cmp	x1, x6
    45e4:	cinc	x21, x21, ne  // ne = any
    45e8:	cmp	x0, #0x0
    45ec:	b.le	4648 <PySequence_Fast@plt+0x2578>
    45f0:	add	x23, x20, #0x18
    45f4:	mov	x19, #0x0                   	// #0
    45f8:	ldr	x0, [x20, #8]
    45fc:	ldr	x0, [x0, #168]
    4600:	tbz	w0, #25, 4698 <PySequence_Fast@plt+0x25c8>
    4604:	ldr	x0, [x20, #24]
    4608:	ldr	x27, [x0, x19, lsl #3]
    460c:	cbz	x19, 4620 <PySequence_Fast@plt+0x2550>
    4610:	ldr	x1, [x25, #56]
    4614:	mov	x0, x24
    4618:	bl	1e70 <_PyAccu_Accumulate@plt>
    461c:	cbnz	w0, 49d8 <PySequence_Fast@plt+0x2908>
    4620:	add	x19, x19, #0x1
    4624:	mov	x3, x21
    4628:	mov	x1, x24
    462c:	mov	x0, x25
    4630:	mov	x2, x27
    4634:	bl	3fe0 <PySequence_Fast@plt+0x1f10>
    4638:	cbnz	w0, 49d8 <PySequence_Fast@plt+0x2908>
    463c:	ldr	x0, [x20, #16]
    4640:	cmp	x19, x0
    4644:	b.lt	45f8 <PySequence_Fast@plt+0x2528>  // b.tstop
    4648:	cbz	x22, 466c <PySequence_Fast@plt+0x259c>
    464c:	ldr	x0, [x25, #16]
    4650:	mov	x1, x22
    4654:	bl	1f30 <PyDict_DelItem@plt>
    4658:	cbnz	w0, 4354 <PySequence_Fast@plt+0x2284>
    465c:	ldr	x0, [x22]
    4660:	sub	x0, x0, #0x1
    4664:	str	x0, [x22]
    4668:	cbz	x0, 4aa8 <PySequence_Fast@plt+0x29d8>
    466c:	ldr	x0, [sp, #104]
    4670:	add	x1, x0, #0x8f0
    4674:	mov	x0, x24
    4678:	ldr	x1, [x1, #48]
    467c:	bl	1e70 <_PyAccu_Accumulate@plt>
    4680:	cbnz	w0, 4364 <PySequence_Fast@plt+0x2294>
    4684:	ldr	x0, [x20]
    4688:	sub	x0, x0, #0x1
    468c:	str	x0, [x20]
    4690:	cbnz	x0, 4378 <PySequence_Fast@plt+0x22a8>
    4694:	b	43c4 <PySequence_Fast@plt+0x22f4>
    4698:	ldr	x27, [x23, x19, lsl #3]
    469c:	b	460c <PySequence_Fast@plt+0x253c>
    46a0:	ldr	x0, [x19]
    46a4:	sub	x0, x0, #0x1
    46a8:	str	x0, [x19]
    46ac:	cbnz	x0, 46b8 <PySequence_Fast@plt+0x25e8>
    46b0:	mov	x0, x19
    46b4:	bl	1e30 <_Py_Dealloc@plt>
    46b8:	cbnz	x20, 4a00 <PySequence_Fast@plt+0x2930>
    46bc:	mov	w26, #0xffffffff            	// #-1
    46c0:	ldp	x21, x22, [sp, #32]
    46c4:	b	41f0 <PySequence_Fast@plt+0x2120>
    46c8:	ldr	x0, [x25, #16]
    46cc:	mov	x2, x19
    46d0:	mov	x1, x22
    46d4:	bl	2020 <PyDict_SetItem@plt>
    46d8:	cbnz	w0, 4354 <PySequence_Fast@plt+0x2284>
    46dc:	ldr	x0, [sp, #104]
    46e0:	add	x1, x0, #0x8f0
    46e4:	mov	x0, x24
    46e8:	ldr	x1, [x1, #40]
    46ec:	bl	1e70 <_PyAccu_Accumulate@plt>
    46f0:	cbz	w0, 45d4 <PySequence_Fast@plt+0x2504>
    46f4:	b	4354 <PySequence_Fast@plt+0x2284>
    46f8:	str	xzr, [sp, #120]
    46fc:	ldr	x0, [sp, #104]
    4700:	add	x1, x0, #0x8f0
    4704:	mov	x0, x24
    4708:	ldr	x1, [x1, #64]
    470c:	bl	1e70 <_PyAccu_Accumulate@plt>
    4710:	cbnz	w0, 48e4 <PySequence_Fast@plt+0x2814>
    4714:	ldr	x1, [x23, #4016]
    4718:	mov	x0, x19
    471c:	ldr	x2, [x25, #40]
    4720:	cmp	x2, x1
    4724:	cinc	x21, x21, ne  // ne = any
    4728:	bl	1d90 <PyMapping_Items@plt>
    472c:	mov	x19, x0
    4730:	cbz	x0, 48e4 <PySequence_Fast@plt+0x2814>
    4734:	ldrb	w1, [x25, #64]
    4738:	cbz	w1, 4744 <PySequence_Fast@plt+0x2674>
    473c:	bl	1f80 <PyList_Sort@plt>
    4740:	tbnz	w0, #31, 4a70 <PySequence_Fast@plt+0x29a0>
    4744:	mov	x0, x19
    4748:	bl	1ff0 <PyObject_GetIter@plt>
    474c:	ldr	x1, [x19]
    4750:	mov	x26, x0
    4754:	sub	x0, x1, #0x1
    4758:	str	x0, [x19]
    475c:	cbz	x0, 4874 <PySequence_Fast@plt+0x27a4>
    4760:	cbz	x26, 48e4 <PySequence_Fast@plt+0x2814>
    4764:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    4768:	str	xzr, [sp, #112]
    476c:	ldr	x1, [x27, #3992]
    4770:	ldr	x22, [x22, #3952]
    4774:	ldr	x27, [x28, #4024]
    4778:	ldr	x0, [x0, #4032]
    477c:	stp	x1, x0, [sp, #128]
    4780:	mov	x0, x26
    4784:	bl	1e50 <PyIter_Next@plt>
    4788:	mov	x19, x0
    478c:	cbz	x0, 48c4 <PySequence_Fast@plt+0x27f4>
    4790:	ldr	x0, [x19, #8]
    4794:	ldr	x0, [x0, #168]
    4798:	tbz	w0, #26, 4a50 <PySequence_Fast@plt+0x2980>
    479c:	ldr	x0, [x19, #16]
    47a0:	cmp	x0, #0x2
    47a4:	b.ne	4a50 <PySequence_Fast@plt+0x2980>  // b.any
    47a8:	ldr	x20, [x19, #24]
    47ac:	ldr	x0, [x20, #8]
    47b0:	ldr	x1, [x0, #168]
    47b4:	tbz	w1, #28, 4880 <PySequence_Fast@plt+0x27b0>
    47b8:	ldr	x0, [x20]
    47bc:	add	x0, x0, #0x1
    47c0:	str	x0, [x20]
    47c4:	ldr	x0, [sp, #112]
    47c8:	cbnz	x0, 48f0 <PySequence_Fast@plt+0x2820>
    47cc:	ldr	x2, [x25, #72]
    47d0:	cbz	x2, 497c <PySequence_Fast@plt+0x28ac>
    47d4:	mov	x1, x20
    47d8:	mov	x0, #0x0                   	// #0
    47dc:	blr	x2
    47e0:	mov	x28, x0
    47e4:	ldr	x0, [x20]
    47e8:	sub	x0, x0, #0x1
    47ec:	str	x0, [x20]
    47f0:	cbz	x0, 4868 <PySequence_Fast@plt+0x2798>
    47f4:	cbz	x28, 48bc <PySequence_Fast@plt+0x27ec>
    47f8:	mov	x1, x28
    47fc:	mov	x0, x24
    4800:	bl	1e70 <_PyAccu_Accumulate@plt>
    4804:	cbnz	w0, 4ab4 <PySequence_Fast@plt+0x29e4>
    4808:	ldr	x0, [x28]
    480c:	sub	x0, x0, #0x1
    4810:	str	x0, [x28]
    4814:	cbz	x0, 4970 <PySequence_Fast@plt+0x28a0>
    4818:	ldr	x1, [x25, #48]
    481c:	mov	x0, x24
    4820:	bl	1e70 <_PyAccu_Accumulate@plt>
    4824:	cbnz	w0, 48bc <PySequence_Fast@plt+0x27ec>
    4828:	ldr	x2, [x19, #32]
    482c:	mov	x3, x21
    4830:	mov	x1, x24
    4834:	mov	x0, x25
    4838:	bl	3fe0 <PySequence_Fast@plt+0x1f10>
    483c:	cbnz	w0, 48bc <PySequence_Fast@plt+0x27ec>
    4840:	ldr	x0, [x19]
    4844:	ldr	x1, [sp, #112]
    4848:	sub	x0, x0, #0x1
    484c:	str	x0, [x19]
    4850:	add	x1, x1, #0x1
    4854:	str	x1, [sp, #112]
    4858:	cbnz	x0, 4780 <PySequence_Fast@plt+0x26b0>
    485c:	mov	x0, x19
    4860:	bl	1e30 <_Py_Dealloc@plt>
    4864:	b	4780 <PySequence_Fast@plt+0x26b0>
    4868:	mov	x0, x20
    486c:	bl	1e30 <_Py_Dealloc@plt>
    4870:	b	47f4 <PySequence_Fast@plt+0x2724>
    4874:	mov	x0, x19
    4878:	bl	1e30 <_Py_Dealloc@plt>
    487c:	b	4760 <PySequence_Fast@plt+0x2690>
    4880:	cmp	x0, x22
    4884:	b.eq	4954 <PySequence_Fast@plt+0x2884>  // b.none
    4888:	mov	x1, x22
    488c:	bl	2030 <PyType_IsSubtype@plt>
    4890:	cbnz	w0, 4954 <PySequence_Fast@plt+0x2884>
    4894:	ldr	x1, [sp, #128]
    4898:	ldr	x0, [x23, #4016]
    489c:	cmp	x20, x1
    48a0:	ccmp	x20, x27, #0x4, ne  // ne = any
    48a4:	ccmp	x20, x0, #0x4, ne  // ne = any
    48a8:	b.ne	4a24 <PySequence_Fast@plt+0x2954>  // b.any
    48ac:	mov	x0, x20
    48b0:	bl	3db8 <PySequence_Fast@plt+0x1ce8>
    48b4:	mov	x20, x0
    48b8:	cbnz	x0, 47c4 <PySequence_Fast@plt+0x26f4>
    48bc:	mov	x20, #0x0                   	// #0
    48c0:	b	4900 <PySequence_Fast@plt+0x2830>
    48c4:	bl	1f40 <PyErr_Occurred@plt>
    48c8:	cbz	x0, 4af8 <PySequence_Fast@plt+0x2a28>
    48cc:	ldr	x0, [x26]
    48d0:	sub	x0, x0, #0x1
    48d4:	str	x0, [x26]
    48d8:	cbnz	x0, 48e4 <PySequence_Fast@plt+0x2814>
    48dc:	mov	x0, x26
    48e0:	bl	1e30 <_Py_Dealloc@plt>
    48e4:	ldr	x0, [sp, #120]
    48e8:	cbnz	x0, 4484 <PySequence_Fast@plt+0x23b4>
    48ec:	b	4374 <PySequence_Fast@plt+0x22a4>
    48f0:	ldr	x1, [x25, #56]
    48f4:	mov	x0, x24
    48f8:	bl	1e70 <_PyAccu_Accumulate@plt>
    48fc:	cbz	w0, 47cc <PySequence_Fast@plt+0x26fc>
    4900:	ldr	x0, [x26]
    4904:	sub	x0, x0, #0x1
    4908:	str	x0, [x26]
    490c:	cbnz	x0, 4918 <PySequence_Fast@plt+0x2848>
    4910:	mov	x0, x26
    4914:	bl	1e30 <_Py_Dealloc@plt>
    4918:	ldr	x0, [x19]
    491c:	sub	x0, x0, #0x1
    4920:	str	x0, [x19]
    4924:	cbz	x0, 4948 <PySequence_Fast@plt+0x2878>
    4928:	cbz	x20, 48e4 <PySequence_Fast@plt+0x2814>
    492c:	ldr	x0, [x20]
    4930:	sub	x0, x0, #0x1
    4934:	str	x0, [x20]
    4938:	cbnz	x0, 48e4 <PySequence_Fast@plt+0x2814>
    493c:	mov	x0, x20
    4940:	bl	1e30 <_Py_Dealloc@plt>
    4944:	b	48e4 <PySequence_Fast@plt+0x2814>
    4948:	mov	x0, x19
    494c:	bl	1e30 <_Py_Dealloc@plt>
    4950:	b	4928 <PySequence_Fast@plt+0x2858>
    4954:	mov	x1, x20
    4958:	add	x0, x25, #0x44
    495c:	bl	3ec0 <PySequence_Fast@plt+0x1df0>
    4960:	mov	x20, x0
    4964:	cbnz	x0, 47c4 <PySequence_Fast@plt+0x26f4>
    4968:	mov	x20, #0x0                   	// #0
    496c:	b	4900 <PySequence_Fast@plt+0x2830>
    4970:	mov	x0, x28
    4974:	bl	1e30 <_Py_Dealloc@plt>
    4978:	b	4818 <PySequence_Fast@plt+0x2748>
    497c:	ldr	x0, [x25, #32]
    4980:	mov	x1, x20
    4984:	bl	3f58 <PySequence_Fast@plt+0x1e88>
    4988:	mov	x28, x0
    498c:	b	47e4 <PySequence_Fast@plt+0x2714>
    4990:	mov	x0, x22
    4994:	bl	1e30 <_Py_Dealloc@plt>
    4998:	b	4364 <PySequence_Fast@plt+0x2294>
    499c:	ldr	x0, [sp, #104]
    49a0:	add	x1, x0, #0x8f0
    49a4:	mov	x0, x24
    49a8:	ldr	x1, [x1, #80]
    49ac:	bl	1e70 <_PyAccu_Accumulate@plt>
    49b0:	mov	w26, w0
    49b4:	b	4378 <PySequence_Fast@plt+0x22a8>
    49b8:	ldr	x0, [x25, #16]
    49bc:	mov	x2, x19
    49c0:	ldr	x1, [sp, #120]
    49c4:	bl	2020 <PyDict_SetItem@plt>
    49c8:	cbz	w0, 46fc <PySequence_Fast@plt+0x262c>
    49cc:	b	4484 <PySequence_Fast@plt+0x23b4>
    49d0:	bl	1e30 <_Py_Dealloc@plt>
    49d4:	b	459c <PySequence_Fast@plt+0x24cc>
    49d8:	cbnz	x22, 4354 <PySequence_Fast@plt+0x2284>
    49dc:	b	4364 <PySequence_Fast@plt+0x2294>
    49e0:	cmn	w0, #0x1
    49e4:	b.eq	4a00 <PySequence_Fast@plt+0x2930>  // b.none
    49e8:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    49ec:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    49f0:	add	x1, x1, #0xaf8
    49f4:	ldr	x0, [x0, #3968]
    49f8:	ldr	x0, [x0]
    49fc:	bl	1e60 <PyErr_SetString@plt>
    4a00:	ldr	x0, [x20]
    4a04:	sub	x0, x0, #0x1
    4a08:	str	x0, [x20]
    4a0c:	cbnz	x0, 46bc <PySequence_Fast@plt+0x25ec>
    4a10:	mov	x0, x20
    4a14:	mov	w26, #0xffffffff            	// #-1
    4a18:	bl	1e30 <_Py_Dealloc@plt>
    4a1c:	ldp	x21, x22, [sp, #32]
    4a20:	b	41f0 <PySequence_Fast@plt+0x2120>
    4a24:	ldr	x2, [x20, #8]
    4a28:	ldr	x0, [x2, #168]
    4a2c:	tbz	w0, #24, 4a8c <PySequence_Fast@plt+0x29bc>
    4a30:	ldr	x0, [sp, #136]
    4a34:	ldr	x1, [x0, #88]
    4a38:	mov	x0, x20
    4a3c:	blr	x1
    4a40:	mov	x20, x0
    4a44:	cbnz	x0, 47c4 <PySequence_Fast@plt+0x26f4>
    4a48:	mov	x20, #0x0                   	// #0
    4a4c:	b	4900 <PySequence_Fast@plt+0x2830>
    4a50:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    4a54:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    4a58:	mov	x20, #0x0                   	// #0
    4a5c:	add	x1, x1, #0xb30
    4a60:	ldr	x0, [x0, #3968]
    4a64:	ldr	x0, [x0]
    4a68:	bl	1e60 <PyErr_SetString@plt>
    4a6c:	b	4900 <PySequence_Fast@plt+0x2830>
    4a70:	ldr	x0, [x19]
    4a74:	sub	x0, x0, #0x1
    4a78:	str	x0, [x19]
    4a7c:	cbnz	x0, 48e4 <PySequence_Fast@plt+0x2814>
    4a80:	mov	x0, x19
    4a84:	bl	1e30 <_Py_Dealloc@plt>
    4a88:	b	48e4 <PySequence_Fast@plt+0x2814>
    4a8c:	ldrb	w0, [x25, #65]
    4a90:	cbz	w0, 4ad4 <PySequence_Fast@plt+0x2a04>
    4a94:	ldr	x0, [x19]
    4a98:	sub	x0, x0, #0x1
    4a9c:	str	x0, [x19]
    4aa0:	cbnz	x0, 4780 <PySequence_Fast@plt+0x26b0>
    4aa4:	b	485c <PySequence_Fast@plt+0x278c>
    4aa8:	mov	x0, x22
    4aac:	bl	1e30 <_Py_Dealloc@plt>
    4ab0:	b	466c <PySequence_Fast@plt+0x259c>
    4ab4:	ldr	x0, [x28]
    4ab8:	sub	x0, x0, #0x1
    4abc:	str	x0, [x28]
    4ac0:	cbnz	x0, 48bc <PySequence_Fast@plt+0x27ec>
    4ac4:	mov	x0, x28
    4ac8:	mov	x20, #0x0                   	// #0
    4acc:	bl	1e30 <_Py_Dealloc@plt>
    4ad0:	b	4900 <PySequence_Fast@plt+0x2830>
    4ad4:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    4ad8:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    4adc:	ldr	x2, [x2, #24]
    4ae0:	add	x1, x1, #0xb50
    4ae4:	ldr	x0, [x0, #3976]
    4ae8:	mov	x20, #0x0                   	// #0
    4aec:	ldr	x0, [x0]
    4af0:	bl	2040 <PyErr_Format@plt>
    4af4:	b	4900 <PySequence_Fast@plt+0x2830>
    4af8:	ldr	x0, [x26]
    4afc:	sub	x0, x0, #0x1
    4b00:	str	x0, [x26]
    4b04:	cbz	x0, 4b50 <PySequence_Fast@plt+0x2a80>
    4b08:	ldr	x19, [sp, #120]
    4b0c:	mov	x1, x19
    4b10:	cbz	x19, 4b30 <PySequence_Fast@plt+0x2a60>
    4b14:	ldr	x0, [x25, #16]
    4b18:	bl	1f30 <PyDict_DelItem@plt>
    4b1c:	cbnz	w0, 4484 <PySequence_Fast@plt+0x23b4>
    4b20:	ldr	x0, [x19]
    4b24:	sub	x0, x0, #0x1
    4b28:	str	x0, [x19]
    4b2c:	cbz	x0, 4b5c <PySequence_Fast@plt+0x2a8c>
    4b30:	ldr	x0, [sp, #104]
    4b34:	add	x1, x0, #0x8f0
    4b38:	mov	x0, x24
    4b3c:	ldr	x1, [x1, #72]
    4b40:	bl	1e70 <_PyAccu_Accumulate@plt>
    4b44:	mov	w26, w0
    4b48:	cbz	w0, 4378 <PySequence_Fast@plt+0x22a8>
    4b4c:	b	4374 <PySequence_Fast@plt+0x22a4>
    4b50:	mov	x0, x26
    4b54:	bl	1e30 <_Py_Dealloc@plt>
    4b58:	b	4b08 <PySequence_Fast@plt+0x2a38>
    4b5c:	ldr	x0, [sp, #120]
    4b60:	bl	1e30 <_Py_Dealloc@plt>
    4b64:	b	4b30 <PySequence_Fast@plt+0x2a60>
    4b68:	stp	x29, x30, [sp, #-64]!
    4b6c:	adrp	x3, 18000 <PyInit__json@@Base+0x11918>
    4b70:	add	x3, x3, #0x1b0
    4b74:	mov	x29, sp
    4b78:	add	x3, x3, #0x60
    4b7c:	add	x5, sp, #0x28
    4b80:	add	x4, sp, #0x20
    4b84:	stp	x19, x20, [sp, #16]
    4b88:	mov	x19, x0
    4b8c:	mov	x0, x1
    4b90:	mov	x1, x2
    4b94:	adrp	x2, 6000 <PySequence_Fast@plt+0x3f30>
    4b98:	add	x2, x2, #0xb88
    4b9c:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    4ba0:	cbz	w0, 4be4 <PySequence_Fast@plt+0x2b14>
    4ba4:	add	x20, sp, #0x30
    4ba8:	mov	x0, x20
    4bac:	bl	1df0 <_PyAccu_Init@plt>
    4bb0:	cbnz	w0, 4be4 <PySequence_Fast@plt+0x2b14>
    4bb4:	ldp	x2, x3, [sp, #32]
    4bb8:	mov	x0, x19
    4bbc:	mov	x1, x20
    4bc0:	bl	3fe0 <PySequence_Fast@plt+0x1f10>
    4bc4:	cbnz	w0, 4bdc <PySequence_Fast@plt+0x2b0c>
    4bc8:	mov	x0, x20
    4bcc:	bl	2070 <_PyAccu_FinishAsList@plt>
    4bd0:	ldp	x19, x20, [sp, #16]
    4bd4:	ldp	x29, x30, [sp], #64
    4bd8:	ret
    4bdc:	mov	x0, x20
    4be0:	bl	1ee0 <_PyAccu_Destroy@plt>
    4be4:	mov	x0, #0x0                   	// #0
    4be8:	ldp	x19, x20, [sp, #16]
    4bec:	ldp	x29, x30, [sp], #64
    4bf0:	ret
    4bf4:	nop
    4bf8:	stp	x29, x30, [sp, #-48]!
    4bfc:	mov	x29, sp
    4c00:	stp	x19, x20, [sp, #16]
    4c04:	mov	x20, x0
    4c08:	mov	x0, x1
    4c0c:	stp	x21, x22, [sp, #32]
    4c10:	mov	x21, x2
    4c14:	mov	x22, x3
    4c18:	bl	2000 <PyUnicode_InternFromString@plt>
    4c1c:	cbz	x0, 4c74 <PySequence_Fast@plt+0x2ba4>
    4c20:	mov	x19, x0
    4c24:	mov	x1, x0
    4c28:	ldr	x0, [x20]
    4c2c:	mov	x2, #0x0                   	// #0
    4c30:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    4c34:	mov	x20, x0
    4c38:	ldr	x1, [x19]
    4c3c:	ldr	x2, [x19, #16]
    4c40:	sub	x1, x1, #0x1
    4c44:	str	x1, [x19]
    4c48:	add	x21, x21, x2
    4c4c:	cbz	x1, 4c68 <PySequence_Fast@plt+0x2b98>
    4c50:	str	x21, [x22]
    4c54:	mov	x0, x20
    4c58:	ldp	x19, x20, [sp, #16]
    4c5c:	ldp	x21, x22, [sp, #32]
    4c60:	ldp	x29, x30, [sp], #48
    4c64:	ret
    4c68:	mov	x0, x19
    4c6c:	bl	1e30 <_Py_Dealloc@plt>
    4c70:	b	4c50 <PySequence_Fast@plt+0x2b80>
    4c74:	mov	x20, #0x0                   	// #0
    4c78:	mov	x0, x20
    4c7c:	ldp	x19, x20, [sp, #16]
    4c80:	ldp	x21, x22, [sp, #32]
    4c84:	ldp	x29, x30, [sp], #48
    4c88:	ret
    4c8c:	nop
    4c90:	stp	x29, x30, [sp, #-144]!
    4c94:	mov	x29, sp
    4c98:	stp	x19, x20, [sp, #16]
    4c9c:	mov	x19, x2
    4ca0:	ldrb	w2, [x1, #32]
    4ca4:	stp	x21, x22, [sp, #32]
    4ca8:	mov	x20, x1
    4cac:	mov	x21, x0
    4cb0:	stp	x23, x24, [sp, #48]
    4cb4:	mov	x23, x3
    4cb8:	tbz	w2, #7, 5224 <PySequence_Fast@plt+0x3154>
    4cbc:	and	w4, w2, #0x20
    4cc0:	tbnz	w2, #5, 4d78 <PySequence_Fast@plt+0x2ca8>
    4cc4:	ldr	x3, [x20, #72]
    4cc8:	ldrb	w22, [x20, #32]
    4ccc:	ldr	x1, [x20, #16]
    4cd0:	ubfx	x22, x22, #2, #3
    4cd4:	tbnz	x19, #63, 58b4 <PySequence_Fast@plt+0x37e4>
    4cd8:	cmp	x1, x19
    4cdc:	b.le	53d4 <PySequence_Fast@plt+0x3304>
    4ce0:	cmp	w22, #0x1
    4ce4:	b.eq	523c <PySequence_Fast@plt+0x316c>  // b.none
    4ce8:	cmp	w22, #0x2
    4cec:	b.eq	53b0 <PySequence_Fast@plt+0x32e0>  // b.none
    4cf0:	ldr	w0, [x3, x19, lsl #2]
    4cf4:	cmp	w0, #0x5b
    4cf8:	b.eq	55f0 <PySequence_Fast@plt+0x3520>  // b.none
    4cfc:	b.hi	5074 <PySequence_Fast@plt+0x2fa4>  // b.pmore
    4d00:	cmp	w0, #0x49
    4d04:	b.eq	5550 <PySequence_Fast@plt+0x3480>  // b.none
    4d08:	b.ls	4fb8 <PySequence_Fast@plt+0x2ee8>  // b.plast
    4d0c:	cmp	w0, #0x4e
    4d10:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    4d14:	add	x0, x19, #0x2
    4d18:	cmp	x0, x1
    4d1c:	b.ge	4da8 <PySequence_Fast@plt+0x2cd8>  // b.tcont
    4d20:	cmp	w22, #0x1
    4d24:	add	x0, x19, #0x1
    4d28:	b.eq	60b0 <PySequence_Fast@plt+0x3fe0>  // b.none
    4d2c:	cmp	w22, #0x2
    4d30:	b.eq	6358 <PySequence_Fast@plt+0x4288>  // b.none
    4d34:	ldr	w5, [x3, x0, lsl #2]
    4d38:	lsl	x0, x0, #2
    4d3c:	cmp	w5, #0x61
    4d40:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    4d44:	add	x0, x3, x0
    4d48:	ldr	w0, [x0, #4]
    4d4c:	cmp	w0, #0x4e
    4d50:	cset	w0, eq  // eq = none
    4d54:	cbz	w0, 4da8 <PySequence_Fast@plt+0x2cd8>
    4d58:	mov	x3, x23
    4d5c:	mov	x2, x19
    4d60:	add	x0, x21, #0x38
    4d64:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    4d68:	add	x1, x1, #0xa60
    4d6c:	bl	4bf8 <PySequence_Fast@plt+0x2b28>
    4d70:	mov	x22, x0
    4d74:	b	4eac <PySequence_Fast@plt+0x2ddc>
    4d78:	tst	x2, #0x40
    4d7c:	add	x3, x20, #0x30
    4d80:	add	x0, x20, #0x48
    4d84:	csel	x3, x0, x3, eq  // eq = none
    4d88:	b	4cc8 <PySequence_Fast@plt+0x2bf8>
    4d8c:	cmp	w0, #0x66
    4d90:	b.eq	57a4 <PySequence_Fast@plt+0x36d4>  // b.none
    4d94:	cmp	w0, #0x6e
    4d98:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    4d9c:	add	x0, x19, #0x3
    4da0:	cmp	x0, x1
    4da4:	b.lt	58d4 <PySequence_Fast@plt+0x3804>  // b.tstop
    4da8:	tbz	w2, #7, 5288 <PySequence_Fast@plt+0x31b8>
    4dac:	stp	x25, x26, [sp, #64]
    4db0:	stp	x27, x28, [sp, #80]
    4db4:	cbz	w4, 5244 <PySequence_Fast@plt+0x3174>
    4db8:	tst	x2, #0x40
    4dbc:	add	x0, x20, #0x30
    4dc0:	add	x20, x20, #0x48
    4dc4:	sub	x1, x1, #0x1
    4dc8:	csel	x20, x20, x0, eq  // eq = none
    4dcc:	cmp	w22, #0x1
    4dd0:	b.eq	5254 <PySequence_Fast@plt+0x3184>  // b.none
    4dd4:	cmp	w22, #0x2
    4dd8:	b.eq	4ec4 <PySequence_Fast@plt+0x2df4>  // b.none
    4ddc:	ldr	w0, [x20, x19, lsl #2]
    4de0:	mov	x24, x19
    4de4:	cmp	w0, #0x2d
    4de8:	b.ne	4dfc <PySequence_Fast@plt+0x2d2c>  // b.any
    4dec:	add	x24, x19, #0x1
    4df0:	cmp	x24, x1
    4df4:	b.gt	53cc <PySequence_Fast@plt+0x32fc>
    4df8:	ldr	w0, [x20, x24, lsl #2]
    4dfc:	sub	w2, w0, #0x31
    4e00:	cmp	w2, #0x8
    4e04:	b.hi	4ef4 <PySequence_Fast@plt+0x2e24>  // b.pmore
    4e08:	add	x24, x24, #0x1
    4e0c:	cmp	x1, x24
    4e10:	b.lt	4e40 <PySequence_Fast@plt+0x2d70>  // b.tstop
    4e14:	cmp	w22, #0x1
    4e18:	b.eq	518c <PySequence_Fast@plt+0x30bc>  // b.none
    4e1c:	cmp	w22, #0x2
    4e20:	b.eq	51ac <PySequence_Fast@plt+0x30dc>  // b.none
    4e24:	ldr	w0, [x20, x24, lsl #2]
    4e28:	cmp	w0, #0x2f
    4e2c:	b.ls	4e38 <PySequence_Fast@plt+0x2d68>  // b.plast
    4e30:	cmp	w0, #0x39
    4e34:	b.ls	4e08 <PySequence_Fast@plt+0x2d38>  // b.plast
    4e38:	cmp	x1, x24
    4e3c:	b.gt	4f20 <PySequence_Fast@plt+0x2e50>
    4e40:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    4e44:	sub	x25, x24, x19
    4e48:	ldr	x26, [x21, #48]
    4e4c:	mov	w27, #0x0                   	// #0
    4e50:	ldr	x0, [x0, #4032]
    4e54:	cmp	x26, x0
    4e58:	b.eq	5308 <PySequence_Fast@plt+0x3238>  // b.none
    4e5c:	cbz	x26, 5308 <PySequence_Fast@plt+0x3238>
    4e60:	and	x1, x22, #0xff
    4e64:	mov	x2, x25
    4e68:	mov	w0, w22
    4e6c:	madd	x1, x1, x19, x20
    4e70:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    4e74:	mov	x21, x0
    4e78:	cbz	x0, 54b8 <PySequence_Fast@plt+0x33e8>
    4e7c:	mov	x0, x26
    4e80:	mov	x1, x21
    4e84:	mov	x2, #0x0                   	// #0
    4e88:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    4e8c:	mov	x22, x0
    4e90:	ldr	x0, [x21]
    4e94:	sub	x0, x0, #0x1
    4e98:	str	x0, [x21]
    4e9c:	cbz	x0, 5398 <PySequence_Fast@plt+0x32c8>
    4ea0:	ldp	x25, x26, [sp, #64]
    4ea4:	ldp	x27, x28, [sp, #80]
    4ea8:	str	x24, [x23]
    4eac:	mov	x0, x22
    4eb0:	ldp	x19, x20, [sp, #16]
    4eb4:	ldp	x21, x22, [sp, #32]
    4eb8:	ldp	x23, x24, [sp, #48]
    4ebc:	ldp	x29, x30, [sp], #144
    4ec0:	ret
    4ec4:	ldrh	w0, [x20, x19, lsl #1]
    4ec8:	mov	x24, x19
    4ecc:	cmp	w0, #0x2d
    4ed0:	b.ne	4ee4 <PySequence_Fast@plt+0x2e14>  // b.any
    4ed4:	add	x24, x19, #0x1
    4ed8:	cmp	x24, x1
    4edc:	b.gt	53cc <PySequence_Fast@plt+0x32fc>
    4ee0:	ldrh	w0, [x20, x24, lsl #1]
    4ee4:	sub	w2, w0, #0x31
    4ee8:	and	w2, w2, #0xffff
    4eec:	cmp	w2, #0x8
    4ef0:	b.ls	4e08 <PySequence_Fast@plt+0x2d38>  // b.plast
    4ef4:	cmp	w0, #0x30
    4ef8:	cset	w0, eq  // eq = none
    4efc:	cbz	w0, 53cc <PySequence_Fast@plt+0x32fc>
    4f00:	add	x24, x24, #0x1
    4f04:	cmp	x1, x24
    4f08:	b.le	4e40 <PySequence_Fast@plt+0x2d70>
    4f0c:	cmp	w22, #0x1
    4f10:	b.eq	5824 <PySequence_Fast@plt+0x3754>  // b.none
    4f14:	cmp	w22, #0x2
    4f18:	b.eq	5bb4 <PySequence_Fast@plt+0x3ae4>  // b.none
    4f1c:	ldr	w0, [x20, x24, lsl #2]
    4f20:	cmp	w0, #0x2e
    4f24:	mov	w4, #0x0                   	// #0
    4f28:	b.ne	53f8 <PySequence_Fast@plt+0x3328>  // b.any
    4f2c:	add	x0, x24, #0x1
    4f30:	ldr	w0, [x20, x0, lsl #2]
    4f34:	cmp	w0, #0x2f
    4f38:	b.hi	5844 <PySequence_Fast@plt+0x3774>  // b.pmore
    4f3c:	cmp	w22, #0x1
    4f40:	mov	w4, #0x0                   	// #0
    4f44:	b.ne	53f8 <PySequence_Fast@plt+0x3328>  // b.any
    4f48:	ldrb	w2, [x20, x24]
    4f4c:	cmp	w2, #0x65
    4f50:	b.eq	4f5c <PySequence_Fast@plt+0x2e8c>  // b.none
    4f54:	cmp	w2, #0x45
    4f58:	b.ne	52e8 <PySequence_Fast@plt+0x3218>  // b.any
    4f5c:	add	x0, x24, #0x1
    4f60:	cmp	x1, x0
    4f64:	b.le	4f80 <PySequence_Fast@plt+0x2eb0>
    4f68:	ldrb	w2, [x20, x0]
    4f6c:	mov	w3, #0xfd                  	// #253
    4f70:	sub	w2, w2, #0x2b
    4f74:	tst	w2, w3
    4f78:	b.ne	4f88 <PySequence_Fast@plt+0x2eb8>  // b.any
    4f7c:	add	x0, x24, #0x2
    4f80:	cmp	x1, x0
    4f84:	b.lt	52b4 <PySequence_Fast@plt+0x31e4>  // b.tstop
    4f88:	cmp	w22, #0x1
    4f8c:	b.eq	5468 <PySequence_Fast@plt+0x3398>  // b.none
    4f90:	cmp	w22, #0x2
    4f94:	b.eq	5498 <PySequence_Fast@plt+0x33c8>  // b.none
    4f98:	ldr	w2, [x20, x0, lsl #2]
    4f9c:	lsl	x3, x0, #2
    4fa0:	cmp	w2, #0x2f
    4fa4:	b.ls	5430 <PySequence_Fast@plt+0x3360>  // b.plast
    4fa8:	cmp	w2, #0x39
    4fac:	b.hi	5430 <PySequence_Fast@plt+0x3360>  // b.pmore
    4fb0:	add	x0, x0, #0x1
    4fb4:	b	4f80 <PySequence_Fast@plt+0x2eb0>
    4fb8:	cmp	w0, #0x22
    4fbc:	b.eq	5788 <PySequence_Fast@plt+0x36b8>  // b.none
    4fc0:	cmp	w0, #0x2d
    4fc4:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    4fc8:	add	x0, x19, #0x8
    4fcc:	cmp	x0, x1
    4fd0:	b.ge	4da8 <PySequence_Fast@plt+0x2cd8>  // b.tcont
    4fd4:	cmp	w22, #0x1
    4fd8:	add	x0, x19, #0x1
    4fdc:	b.eq	6158 <PySequence_Fast@plt+0x4088>  // b.none
    4fe0:	cmp	w22, #0x2
    4fe4:	b.eq	6280 <PySequence_Fast@plt+0x41b0>  // b.none
    4fe8:	ldr	w5, [x3, x0, lsl #2]
    4fec:	lsl	x0, x0, #2
    4ff0:	cmp	w5, #0x49
    4ff4:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    4ff8:	add	x3, x3, x0
    4ffc:	ldr	w0, [x3, #4]
    5000:	cmp	w0, #0x6e
    5004:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    5008:	ldr	w0, [x3, #8]
    500c:	cmp	w0, #0x66
    5010:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    5014:	ldr	w0, [x3, #12]
    5018:	cmp	w0, #0x69
    501c:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    5020:	ldr	w0, [x3, #16]
    5024:	cmp	w0, #0x6e
    5028:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    502c:	ldr	w0, [x3, #20]
    5030:	cmp	w0, #0x69
    5034:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    5038:	ldr	w0, [x3, #24]
    503c:	cmp	w0, #0x74
    5040:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    5044:	ldr	w0, [x3, #28]
    5048:	cmp	w0, #0x79
    504c:	cset	w0, eq  // eq = none
    5050:	cbz	w0, 4da8 <PySequence_Fast@plt+0x2cd8>
    5054:	mov	x3, x23
    5058:	mov	x2, x19
    505c:	add	x0, x21, #0x38
    5060:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    5064:	add	x1, x1, #0xa50
    5068:	bl	4bf8 <PySequence_Fast@plt+0x2b28>
    506c:	mov	x22, x0
    5070:	b	4eac <PySequence_Fast@plt+0x2ddc>
    5074:	cmp	w0, #0x74
    5078:	b.eq	54dc <PySequence_Fast@plt+0x340c>  // b.none
    507c:	b.ls	4d8c <PySequence_Fast@plt+0x2cbc>  // b.plast
    5080:	cmp	w0, #0x7b
    5084:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    5088:	bl	1f20 <PyThreadState_Get@plt>
    508c:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    5090:	str	x1, [sp, #112]
    5094:	ldr	x2, [x1, #3984]
    5098:	ldr	w1, [x0, #32]
    509c:	add	w1, w1, #0x1
    50a0:	str	w1, [x0, #32]
    50a4:	ldr	w0, [x2]
    50a8:	cmp	w1, w0
    50ac:	b.le	50c0 <PySequence_Fast@plt+0x2ff0>
    50b0:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    50b4:	add	x0, x0, #0xbb0
    50b8:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    50bc:	cbnz	w0, 54c0 <PySequence_Fast@plt+0x33f0>
    50c0:	ldrb	w0, [x20, #32]
    50c4:	add	x19, x19, #0x1
    50c8:	ldr	x1, [x21, #32]
    50cc:	str	x1, [sp, #104]
    50d0:	tbz	w0, #7, 5950 <PySequence_Fast@plt+0x3880>
    50d4:	stp	x25, x26, [sp, #64]
    50d8:	tbz	w0, #5, 5bcc <PySequence_Fast@plt+0x3afc>
    50dc:	tst	x0, #0x40
    50e0:	add	x4, x20, #0x30
    50e4:	add	x0, x20, #0x48
    50e8:	csel	x26, x0, x4, eq  // eq = none
    50ec:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    50f0:	ldrb	w5, [x20, #32]
    50f4:	ldr	x6, [x20, #16]
    50f8:	ldr	x0, [x0, #4016]
    50fc:	ubfx	x24, x5, #2, #3
    5100:	ldr	x1, [sp, #104]
    5104:	sub	x25, x6, #0x1
    5108:	cmp	x1, x0
    510c:	b.eq	6080 <PySequence_Fast@plt+0x3fb0>  // b.none
    5110:	mov	x0, #0x0                   	// #0
    5114:	bl	1da0 <PyList_New@plt>
    5118:	mov	x22, x0
    511c:	cbz	x22, 59e0 <PySequence_Fast@plt+0x3910>
    5120:	cmp	x19, x25
    5124:	b.gt	59bc <PySequence_Fast@plt+0x38ec>
    5128:	stp	x27, x28, [sp, #80]
    512c:	b	5164 <PySequence_Fast@plt+0x3094>
    5130:	cmp	w24, #0x2
    5134:	b.eq	596c <PySequence_Fast@plt+0x389c>  // b.none
    5138:	ldr	w0, [x26, x19, lsl #2]
    513c:	cmp	w0, #0x20
    5140:	b.eq	5158 <PySequence_Fast@plt+0x3088>  // b.none
    5144:	sub	w1, w0, #0x9
    5148:	cmp	w1, #0x1
    514c:	b.ls	5158 <PySequence_Fast@plt+0x3088>  // b.plast
    5150:	cmp	w0, #0xd
    5154:	b.ne	5bd4 <PySequence_Fast@plt+0x3b04>  // b.any
    5158:	add	x19, x19, #0x1
    515c:	cmp	x25, x19
    5160:	b.lt	59b8 <PySequence_Fast@plt+0x38e8>  // b.tstop
    5164:	cmp	w24, #0x1
    5168:	b.ne	5130 <PySequence_Fast@plt+0x3060>  // b.any
    516c:	ldrb	w0, [x26, x19]
    5170:	cmp	w0, #0x20
    5174:	b.eq	5158 <PySequence_Fast@plt+0x3088>  // b.none
    5178:	sub	w1, w0, #0x9
    517c:	and	w1, w1, #0xff
    5180:	cmp	w1, #0x1
    5184:	b.hi	5150 <PySequence_Fast@plt+0x3080>  // b.pmore
    5188:	b	5158 <PySequence_Fast@plt+0x3088>
    518c:	ldrb	w2, [x20, x24]
    5190:	sub	w0, w2, #0x30
    5194:	and	w0, w0, #0xff
    5198:	cmp	w0, #0x9
    519c:	b.ls	4e08 <PySequence_Fast@plt+0x2d38>  // b.plast
    51a0:	cmp	x1, x24
    51a4:	b.le	4e40 <PySequence_Fast@plt+0x2d70>
    51a8:	b	5828 <PySequence_Fast@plt+0x3758>
    51ac:	ldrh	w0, [x20, x24, lsl #1]
    51b0:	cmp	w0, #0x2f
    51b4:	b.ls	51c0 <PySequence_Fast@plt+0x30f0>  // b.plast
    51b8:	cmp	w0, #0x39
    51bc:	b.ls	4e08 <PySequence_Fast@plt+0x2d38>  // b.plast
    51c0:	cmp	x1, x24
    51c4:	b.le	4e40 <PySequence_Fast@plt+0x2d70>
    51c8:	cmp	w0, #0x2e
    51cc:	b.ne	51e8 <PySequence_Fast@plt+0x3118>  // b.any
    51d0:	add	x0, x24, #0x1
    51d4:	ldrh	w0, [x20, x0, lsl #1]
    51d8:	cmp	w0, #0x2f
    51dc:	b.ls	51e8 <PySequence_Fast@plt+0x3118>  // b.plast
    51e0:	cmp	w0, #0x39
    51e4:	b.ls	5850 <PySequence_Fast@plt+0x3780>  // b.plast
    51e8:	mov	w4, #0x0                   	// #0
    51ec:	ldrh	w0, [x20, x24, lsl #1]
    51f0:	and	w0, w0, #0xffffffdf
    51f4:	and	w0, w0, #0xffff
    51f8:	cmp	w0, #0x45
    51fc:	b.ne	4e40 <PySequence_Fast@plt+0x2d70>  // b.any
    5200:	add	x0, x24, #0x1
    5204:	cmp	x0, x1
    5208:	b.ge	4f80 <PySequence_Fast@plt+0x2eb0>  // b.tcont
    520c:	ldrh	w2, [x20, x0, lsl #1]
    5210:	mov	w3, #0xfffd                	// #65533
    5214:	sub	w2, w2, #0x2b
    5218:	tst	w2, w3
    521c:	b.ne	4f88 <PySequence_Fast@plt+0x2eb8>  // b.any
    5220:	b	4f7c <PySequence_Fast@plt+0x2eac>
    5224:	mov	x0, x1
    5228:	bl	1db0 <_PyUnicode_Ready@plt>
    522c:	cmn	w0, #0x1
    5230:	b.eq	54c0 <PySequence_Fast@plt+0x33f0>  // b.none
    5234:	ldrb	w2, [x20, #32]
    5238:	b	4cbc <PySequence_Fast@plt+0x2bec>
    523c:	ldrb	w0, [x3, x19]
    5240:	b	4cf4 <PySequence_Fast@plt+0x2c24>
    5244:	sub	x1, x1, #0x1
    5248:	cmp	w22, #0x1
    524c:	ldr	x20, [x20, #72]
    5250:	b.ne	4dd4 <PySequence_Fast@plt+0x2d04>  // b.any
    5254:	ldrb	w0, [x20, x19]
    5258:	mov	x24, x19
    525c:	cmp	w0, #0x2d
    5260:	b.ne	5274 <PySequence_Fast@plt+0x31a4>  // b.any
    5264:	add	x24, x19, #0x1
    5268:	cmp	x1, x24
    526c:	b.lt	53cc <PySequence_Fast@plt+0x32fc>  // b.tstop
    5270:	ldrb	w0, [x20, x24]
    5274:	sub	w2, w0, #0x31
    5278:	and	w2, w2, #0xff
    527c:	cmp	w2, #0x8
    5280:	b.ls	4e08 <PySequence_Fast@plt+0x2d38>  // b.plast
    5284:	b	4ef4 <PySequence_Fast@plt+0x2e24>
    5288:	mov	x0, x20
    528c:	bl	1db0 <_PyUnicode_Ready@plt>
    5290:	cmn	w0, #0x1
    5294:	b.eq	54c0 <PySequence_Fast@plt+0x33f0>  // b.none
    5298:	ldrb	w2, [x20, #32]
    529c:	stp	x25, x26, [sp, #64]
    52a0:	and	w4, w2, #0x20
    52a4:	ubfx	x22, x2, #2, #3
    52a8:	stp	x27, x28, [sp, #80]
    52ac:	ldr	x1, [x20, #16]
    52b0:	b	4db4 <PySequence_Fast@plt+0x2ce4>
    52b4:	cmp	w22, #0x1
    52b8:	b.eq	547c <PySequence_Fast@plt+0x33ac>  // b.none
    52bc:	lsl	x3, x0, #2
    52c0:	cmp	w22, #0x2
    52c4:	b.ne	5430 <PySequence_Fast@plt+0x3360>  // b.any
    52c8:	lsl	x3, x0, #1
    52cc:	add	x3, x20, x3
    52d0:	ldurh	w1, [x3, #-2]
    52d4:	sub	w1, w1, #0x30
    52d8:	and	w1, w1, #0xffff
    52dc:	cmp	w1, #0x9
    52e0:	b.ls	5444 <PySequence_Fast@plt+0x3374>  // b.plast
    52e4:	nop
    52e8:	cbz	w4, 4e40 <PySequence_Fast@plt+0x2d70>
    52ec:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    52f0:	sub	x25, x24, x19
    52f4:	ldr	x26, [x21, #40]
    52f8:	mov	w27, #0x1                   	// #1
    52fc:	ldr	x0, [x0, #3952]
    5300:	cmp	x26, x0
    5304:	b.ne	4e5c <PySequence_Fast@plt+0x2d8c>  // b.any
    5308:	mov	x1, x25
    530c:	mov	x0, #0x0                   	// #0
    5310:	bl	1e20 <PyBytes_FromStringAndSize@plt>
    5314:	mov	x21, x0
    5318:	cbz	x0, 54b8 <PySequence_Fast@plt+0x33e8>
    531c:	cmp	x25, #0x0
    5320:	add	x0, x0, #0x20
    5324:	b.le	5378 <PySequence_Fast@plt+0x32a8>
    5328:	add	x5, x20, x19, lsl #2
    532c:	add	x1, x20, x19, lsl #1
    5330:	mov	x3, #0x0                   	// #0
    5334:	add	x19, x20, x19
    5338:	b	535c <PySequence_Fast@plt+0x328c>
    533c:	cmp	w22, #0x2
    5340:	b.eq	53a4 <PySequence_Fast@plt+0x32d4>  // b.none
    5344:	ldr	w4, [x5, x3, lsl #2]
    5348:	and	w4, w4, #0xff
    534c:	strb	w4, [x0, x3]
    5350:	add	x3, x3, #0x1
    5354:	cmp	x3, x25
    5358:	b.eq	5378 <PySequence_Fast@plt+0x32a8>  // b.none
    535c:	cmp	w22, #0x1
    5360:	b.ne	533c <PySequence_Fast@plt+0x326c>  // b.any
    5364:	ldrb	w4, [x19, x3]
    5368:	strb	w4, [x0, x3]
    536c:	add	x3, x3, #0x1
    5370:	cmp	x3, x25
    5374:	b.ne	535c <PySequence_Fast@plt+0x328c>  // b.any
    5378:	cbz	w27, 53b8 <PySequence_Fast@plt+0x32e8>
    537c:	mov	x0, x21
    5380:	bl	20c0 <PyFloat_FromString@plt>
    5384:	mov	x22, x0
    5388:	ldr	x0, [x21]
    538c:	sub	x0, x0, #0x1
    5390:	str	x0, [x21]
    5394:	cbnz	x0, 4ea0 <PySequence_Fast@plt+0x2dd0>
    5398:	mov	x0, x21
    539c:	bl	1e30 <_Py_Dealloc@plt>
    53a0:	b	4ea0 <PySequence_Fast@plt+0x2dd0>
    53a4:	ldrh	w4, [x1, x3, lsl #1]
    53a8:	and	w4, w4, #0xff
    53ac:	b	534c <PySequence_Fast@plt+0x327c>
    53b0:	ldrh	w0, [x3, x19, lsl #1]
    53b4:	b	4cf4 <PySequence_Fast@plt+0x2c24>
    53b8:	mov	w2, #0xa                   	// #10
    53bc:	mov	x1, #0x0                   	// #0
    53c0:	bl	2060 <PyLong_FromString@plt>
    53c4:	mov	x22, x0
    53c8:	b	4e90 <PySequence_Fast@plt+0x2dc0>
    53cc:	ldp	x25, x26, [sp, #64]
    53d0:	ldp	x27, x28, [sp, #80]
    53d4:	mov	x0, x19
    53d8:	mov	x22, #0x0                   	// #0
    53dc:	bl	3368 <PySequence_Fast@plt+0x1298>
    53e0:	mov	x0, x22
    53e4:	ldp	x19, x20, [sp, #16]
    53e8:	ldp	x21, x22, [sp, #32]
    53ec:	ldp	x23, x24, [sp, #48]
    53f0:	ldp	x29, x30, [sp], #144
    53f4:	ret
    53f8:	cmp	w22, #0x2
    53fc:	b.eq	51ec <PySequence_Fast@plt+0x311c>  // b.none
    5400:	ldr	w0, [x20, x24, lsl #2]
    5404:	and	w0, w0, #0xffffffdf
    5408:	cmp	w0, #0x45
    540c:	b.ne	4e40 <PySequence_Fast@plt+0x2d70>  // b.any
    5410:	add	x0, x24, #0x1
    5414:	cmp	x0, x1
    5418:	b.ge	4f80 <PySequence_Fast@plt+0x2eb0>  // b.tcont
    541c:	ldr	w2, [x20, x0, lsl #2]
    5420:	sub	w2, w2, #0x2b
    5424:	tst	w2, #0xfffffffd
    5428:	b.ne	4f88 <PySequence_Fast@plt+0x2eb8>  // b.any
    542c:	b	4f7c <PySequence_Fast@plt+0x2eac>
    5430:	add	x3, x20, x3
    5434:	ldur	w1, [x3, #-4]
    5438:	sub	w1, w1, #0x30
    543c:	cmp	w1, #0x9
    5440:	b.hi	52e8 <PySequence_Fast@plt+0x3218>  // b.pmore
    5444:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    5448:	sub	x25, x0, x19
    544c:	mov	x24, x0
    5450:	mov	w27, #0x1                   	// #1
    5454:	ldr	x0, [x1, #3952]
    5458:	ldr	x26, [x21, #40]
    545c:	cmp	x26, x0
    5460:	b.ne	4e5c <PySequence_Fast@plt+0x2d8c>  // b.any
    5464:	b	5308 <PySequence_Fast@plt+0x3238>
    5468:	ldrb	w2, [x20, x0]
    546c:	sub	w2, w2, #0x30
    5470:	and	w2, w2, #0xff
    5474:	cmp	w2, #0x9
    5478:	b.ls	4fb0 <PySequence_Fast@plt+0x2ee0>  // b.plast
    547c:	add	x1, x20, x0
    5480:	ldurb	w1, [x1, #-1]
    5484:	sub	w1, w1, #0x30
    5488:	and	w1, w1, #0xff
    548c:	cmp	w1, #0x9
    5490:	b.ls	5444 <PySequence_Fast@plt+0x3374>  // b.plast
    5494:	b	52e8 <PySequence_Fast@plt+0x3218>
    5498:	ldrh	w2, [x20, x0, lsl #1]
    549c:	lsl	x3, x0, #1
    54a0:	cmp	w2, #0x2f
    54a4:	b.ls	52cc <PySequence_Fast@plt+0x31fc>  // b.plast
    54a8:	cmp	w2, #0x39
    54ac:	b.hi	52cc <PySequence_Fast@plt+0x31fc>  // b.pmore
    54b0:	add	x0, x0, #0x1
    54b4:	b	4f80 <PySequence_Fast@plt+0x2eb0>
    54b8:	ldp	x25, x26, [sp, #64]
    54bc:	ldp	x27, x28, [sp, #80]
    54c0:	mov	x22, #0x0                   	// #0
    54c4:	mov	x0, x22
    54c8:	ldp	x19, x20, [sp, #16]
    54cc:	ldp	x21, x22, [sp, #32]
    54d0:	ldp	x23, x24, [sp, #48]
    54d4:	ldp	x29, x30, [sp], #144
    54d8:	ret
    54dc:	add	x0, x19, #0x3
    54e0:	cmp	x0, x1
    54e4:	b.ge	4da8 <PySequence_Fast@plt+0x2cd8>  // b.tcont
    54e8:	cmp	w22, #0x1
    54ec:	add	x0, x19, #0x1
    54f0:	b.eq	61c0 <PySequence_Fast@plt+0x40f0>  // b.none
    54f4:	cmp	w22, #0x2
    54f8:	b.eq	62ec <PySequence_Fast@plt+0x421c>  // b.none
    54fc:	ldr	w5, [x3, x0, lsl #2]
    5500:	lsl	x0, x0, #2
    5504:	cmp	w5, #0x72
    5508:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    550c:	add	x0, x3, x0
    5510:	ldr	w3, [x0, #4]
    5514:	cmp	w3, #0x75
    5518:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    551c:	ldr	w0, [x0, #8]
    5520:	cmp	w0, #0x65
    5524:	cset	w0, eq  // eq = none
    5528:	cbz	w0, 4da8 <PySequence_Fast@plt+0x2cd8>
    552c:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    5530:	add	x19, x19, #0x4
    5534:	str	x19, [x23]
    5538:	ldr	x0, [x0, #4024]
    553c:	mov	x22, x0
    5540:	ldr	x1, [x0]
    5544:	add	x1, x1, #0x1
    5548:	str	x1, [x0]
    554c:	b	4eac <PySequence_Fast@plt+0x2ddc>
    5550:	add	x0, x19, #0x7
    5554:	cmp	x0, x1
    5558:	b.ge	4da8 <PySequence_Fast@plt+0x2cd8>  // b.tcont
    555c:	cmp	w22, #0x1
    5560:	add	x0, x19, #0x1
    5564:	b.eq	60fc <PySequence_Fast@plt+0x402c>  // b.none
    5568:	cmp	w22, #0x2
    556c:	b.eq	63ac <PySequence_Fast@plt+0x42dc>  // b.none
    5570:	ldr	w5, [x3, x0, lsl #2]
    5574:	lsl	x0, x0, #2
    5578:	cmp	w5, #0x6e
    557c:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    5580:	add	x3, x3, x0
    5584:	ldr	w0, [x3, #4]
    5588:	cmp	w0, #0x66
    558c:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    5590:	ldr	w0, [x3, #8]
    5594:	cmp	w0, #0x69
    5598:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    559c:	ldr	w0, [x3, #12]
    55a0:	cmp	w0, #0x6e
    55a4:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    55a8:	ldr	w0, [x3, #16]
    55ac:	cmp	w0, #0x69
    55b0:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    55b4:	ldr	w0, [x3, #20]
    55b8:	cmp	w0, #0x74
    55bc:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    55c0:	ldr	w0, [x3, #24]
    55c4:	cmp	w0, #0x79
    55c8:	cset	w0, eq  // eq = none
    55cc:	cbz	w0, 4da8 <PySequence_Fast@plt+0x2cd8>
    55d0:	mov	x3, x23
    55d4:	mov	x2, x19
    55d8:	add	x0, x21, #0x38
    55dc:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    55e0:	add	x1, x1, #0xa40
    55e4:	bl	4bf8 <PySequence_Fast@plt+0x2b28>
    55e8:	mov	x22, x0
    55ec:	b	4eac <PySequence_Fast@plt+0x2ddc>
    55f0:	bl	1f20 <PyThreadState_Get@plt>
    55f4:	adrp	x1, 17000 <PyInit__json@@Base+0x10918>
    55f8:	str	x1, [sp, #112]
    55fc:	ldr	x2, [x1, #3984]
    5600:	ldr	w1, [x0, #32]
    5604:	add	w1, w1, #0x1
    5608:	str	w1, [x0, #32]
    560c:	ldr	w0, [x2]
    5610:	cmp	w1, w0
    5614:	b.le	5628 <PySequence_Fast@plt+0x3558>
    5618:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    561c:	add	x0, x0, #0xc50
    5620:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    5624:	cbnz	w0, 54c0 <PySequence_Fast@plt+0x33f0>
    5628:	ldrsb	w0, [x20, #32]
    562c:	add	x2, x19, #0x1
    5630:	tbnz	w0, #31, 564c <PySequence_Fast@plt+0x357c>
    5634:	mov	x0, x20
    5638:	str	x2, [sp, #96]
    563c:	bl	1db0 <_PyUnicode_Ready@plt>
    5640:	cmn	w0, #0x1
    5644:	ldr	x2, [sp, #96]
    5648:	b.eq	5740 <PySequence_Fast@plt+0x3670>  // b.none
    564c:	mov	x0, #0x0                   	// #0
    5650:	str	x2, [sp, #96]
    5654:	bl	1da0 <PyList_New@plt>
    5658:	mov	x22, x0
    565c:	ldr	x2, [sp, #96]
    5660:	cbz	x0, 5740 <PySequence_Fast@plt+0x3670>
    5664:	ldrb	w0, [x20, #32]
    5668:	stp	x25, x26, [sp, #64]
    566c:	stp	x27, x28, [sp, #80]
    5670:	tbnz	w0, #5, 593c <PySequence_Fast@plt+0x386c>
    5674:	ldr	x19, [x20, #72]
    5678:	ldr	x28, [x20, #16]
    567c:	ldrb	w25, [x20, #32]
    5680:	sub	x28, x28, #0x1
    5684:	cmp	x2, x28
    5688:	ubfx	x25, x25, #2, #3
    568c:	b.le	56c8 <PySequence_Fast@plt+0x35f8>
    5690:	b	5a2c <PySequence_Fast@plt+0x395c>
    5694:	cmp	w25, #0x2
    5698:	b.eq	598c <PySequence_Fast@plt+0x38bc>  // b.none
    569c:	ldr	w0, [x19, x2, lsl #2]
    56a0:	cmp	w0, #0x20
    56a4:	b.eq	56bc <PySequence_Fast@plt+0x35ec>  // b.none
    56a8:	sub	w1, w0, #0x9
    56ac:	cmp	w1, #0x1
    56b0:	b.ls	56bc <PySequence_Fast@plt+0x35ec>  // b.plast
    56b4:	cmp	w0, #0xd
    56b8:	b.ne	6048 <PySequence_Fast@plt+0x3f78>  // b.any
    56bc:	add	x2, x2, #0x1
    56c0:	cmp	x28, x2
    56c4:	b.lt	5a2c <PySequence_Fast@plt+0x395c>  // b.tstop
    56c8:	cmp	w25, #0x1
    56cc:	b.ne	5694 <PySequence_Fast@plt+0x35c4>  // b.any
    56d0:	ldrb	w0, [x19, x2]
    56d4:	cmp	w0, #0x20
    56d8:	b.eq	56bc <PySequence_Fast@plt+0x35ec>  // b.none
    56dc:	sub	w1, w0, #0x9
    56e0:	and	w1, w1, #0xff
    56e4:	cmp	w1, #0x1
    56e8:	b.hi	56b4 <PySequence_Fast@plt+0x35e4>  // b.pmore
    56ec:	b	56bc <PySequence_Fast@plt+0x35ec>
    56f0:	cmp	w0, #0x5d
    56f4:	cset	w0, eq  // eq = none
    56f8:	cmp	w25, #0x1
    56fc:	cbnz	w0, 64b0 <PySequence_Fast@plt+0x43e0>
    5700:	b.eq	5ae4 <PySequence_Fast@plt+0x3a14>  // b.none
    5704:	cmp	w25, #0x2
    5708:	b.eq	5ba4 <PySequence_Fast@plt+0x3ad4>  // b.none
    570c:	ldr	w0, [x19, x2, lsl #2]
    5710:	cmp	w0, #0x2c
    5714:	b.eq	5af0 <PySequence_Fast@plt+0x3a20>  // b.none
    5718:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    571c:	mov	x1, x20
    5720:	add	x0, x0, #0xc38
    5724:	bl	33c0 <PySequence_Fast@plt+0x12f0>
    5728:	ldr	x0, [x22]
    572c:	sub	x0, x0, #0x1
    5730:	str	x0, [x22]
    5734:	cbz	x0, 608c <PySequence_Fast@plt+0x3fbc>
    5738:	ldp	x25, x26, [sp, #64]
    573c:	ldp	x27, x28, [sp, #80]
    5740:	mov	x22, #0x0                   	// #0
    5744:	bl	1f20 <PyThreadState_Get@plt>
    5748:	ldr	w2, [x0, #32]
    574c:	ldr	x1, [sp, #112]
    5750:	sub	w2, w2, #0x1
    5754:	ldr	x24, [x1, #3984]
    5758:	ldr	w1, [x24]
    575c:	str	w2, [x0, #32]
    5760:	cmp	w1, #0xc9
    5764:	sub	w3, w1, #0x32
    5768:	asr	w1, w1, #2
    576c:	add	w1, w1, w1, lsl #1
    5770:	csel	w1, w1, w3, lt  // lt = tstop
    5774:	cmp	w2, w1
    5778:	b.ge	4eac <PySequence_Fast@plt+0x2ddc>  // b.tcont
    577c:	bl	1f20 <PyThreadState_Get@plt>
    5780:	strb	wzr, [x0, #36]
    5784:	b	4eac <PySequence_Fast@plt+0x2ddc>
    5788:	ldrsb	w2, [x21, #16]
    578c:	mov	x3, x23
    5790:	add	x1, x19, #0x1
    5794:	mov	x0, x20
    5798:	bl	34b0 <PySequence_Fast@plt+0x13e0>
    579c:	mov	x22, x0
    57a0:	b	4eac <PySequence_Fast@plt+0x2ddc>
    57a4:	add	x0, x19, #0x4
    57a8:	cmp	x0, x1
    57ac:	b.ge	4da8 <PySequence_Fast@plt+0x2cd8>  // b.tcont
    57b0:	cmp	w22, #0x1
    57b4:	add	x0, x19, #0x1
    57b8:	b.eq	61ec <PySequence_Fast@plt+0x411c>  // b.none
    57bc:	cmp	w22, #0x2
    57c0:	b.eq	631c <PySequence_Fast@plt+0x424c>  // b.none
    57c4:	ldr	w5, [x3, x0, lsl #2]
    57c8:	lsl	x0, x0, #2
    57cc:	cmp	w5, #0x61
    57d0:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    57d4:	add	x0, x3, x0
    57d8:	ldr	w3, [x0, #4]
    57dc:	cmp	w3, #0x6c
    57e0:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    57e4:	ldr	w3, [x0, #8]
    57e8:	cmp	w3, #0x73
    57ec:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    57f0:	ldr	w0, [x0, #12]
    57f4:	cmp	w0, #0x65
    57f8:	cset	w0, eq  // eq = none
    57fc:	cbz	w0, 4da8 <PySequence_Fast@plt+0x2cd8>
    5800:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    5804:	add	x19, x19, #0x5
    5808:	str	x19, [x23]
    580c:	ldr	x0, [x0, #3992]
    5810:	mov	x22, x0
    5814:	ldr	x1, [x0]
    5818:	add	x1, x1, #0x1
    581c:	str	x1, [x0]
    5820:	b	4eac <PySequence_Fast@plt+0x2ddc>
    5824:	ldrb	w2, [x20, x24]
    5828:	cmp	w2, #0x2e
    582c:	mov	w4, #0x0                   	// #0
    5830:	b.ne	4f4c <PySequence_Fast@plt+0x2e7c>  // b.any
    5834:	add	x0, x20, x24
    5838:	ldrb	w0, [x0, #1]
    583c:	cmp	w0, #0x2f
    5840:	b.ls	4e40 <PySequence_Fast@plt+0x2d70>  // b.plast
    5844:	cmp	w0, #0x39
    5848:	cset	w0, ls  // ls = plast
    584c:	cbz	w0, 4f3c <PySequence_Fast@plt+0x2e6c>
    5850:	add	x24, x24, #0x2
    5854:	cmp	x1, x24
    5858:	b.ge	5888 <PySequence_Fast@plt+0x37b8>  // b.tcont
    585c:	b	52ec <PySequence_Fast@plt+0x321c>
    5860:	cmp	w22, #0x2
    5864:	b.eq	59fc <PySequence_Fast@plt+0x392c>  // b.none
    5868:	ldr	w0, [x20, x24, lsl #2]
    586c:	cmp	w0, #0x2f
    5870:	b.ls	640c <PySequence_Fast@plt+0x433c>  // b.plast
    5874:	cmp	w0, #0x39
    5878:	b.hi	640c <PySequence_Fast@plt+0x433c>  // b.pmore
    587c:	add	x24, x24, #0x1
    5880:	cmp	x1, x24
    5884:	b.lt	52ec <PySequence_Fast@plt+0x321c>  // b.tstop
    5888:	cmp	w22, #0x1
    588c:	b.ne	5860 <PySequence_Fast@plt+0x3790>  // b.any
    5890:	ldrb	w2, [x20, x24]
    5894:	sub	w0, w2, #0x30
    5898:	and	w0, w0, #0xff
    589c:	cmp	w0, #0x9
    58a0:	b.ls	587c <PySequence_Fast@plt+0x37ac>  // b.plast
    58a4:	cmp	x1, x24
    58a8:	mov	w4, w22
    58ac:	b.gt	4f4c <PySequence_Fast@plt+0x2e7c>
    58b0:	b	52ec <PySequence_Fast@plt+0x321c>
    58b4:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    58b8:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    58bc:	mov	x22, #0x0                   	// #0
    58c0:	add	x1, x1, #0xb98
    58c4:	ldr	x0, [x0, #3968]
    58c8:	ldr	x0, [x0]
    58cc:	bl	1e60 <PyErr_SetString@plt>
    58d0:	b	4eac <PySequence_Fast@plt+0x2ddc>
    58d4:	cmp	w22, #0x1
    58d8:	add	x0, x19, #0x1
    58dc:	b.eq	60d0 <PySequence_Fast@plt+0x4000>  // b.none
    58e0:	cmp	w22, #0x2
    58e4:	b.eq	637c <PySequence_Fast@plt+0x42ac>  // b.none
    58e8:	ldr	w5, [x3, x0, lsl #2]
    58ec:	lsl	x0, x0, #2
    58f0:	cmp	w5, #0x75
    58f4:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    58f8:	add	x0, x3, x0
    58fc:	ldr	w3, [x0, #4]
    5900:	cmp	w3, #0x6c
    5904:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    5908:	ldr	w0, [x0, #8]
    590c:	cmp	w0, #0x6c
    5910:	cset	w0, eq  // eq = none
    5914:	cbz	w0, 4da8 <PySequence_Fast@plt+0x2cd8>
    5918:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    591c:	add	x19, x19, #0x4
    5920:	str	x19, [x23]
    5924:	ldr	x0, [x0, #4016]
    5928:	mov	x22, x0
    592c:	ldr	x1, [x0]
    5930:	add	x1, x1, #0x1
    5934:	str	x1, [x0]
    5938:	b	4eac <PySequence_Fast@plt+0x2ddc>
    593c:	tst	x0, #0x40
    5940:	add	x19, x20, #0x30
    5944:	add	x0, x20, #0x48
    5948:	csel	x19, x0, x19, eq  // eq = none
    594c:	b	5678 <PySequence_Fast@plt+0x35a8>
    5950:	mov	x0, x20
    5954:	bl	1db0 <_PyUnicode_Ready@plt>
    5958:	cmn	w0, #0x1
    595c:	b.eq	5740 <PySequence_Fast@plt+0x3670>  // b.none
    5960:	ldrb	w0, [x20, #32]
    5964:	stp	x25, x26, [sp, #64]
    5968:	b	50d8 <PySequence_Fast@plt+0x3008>
    596c:	ldrh	w0, [x26, x19, lsl #1]
    5970:	cmp	w0, #0x20
    5974:	b.eq	5158 <PySequence_Fast@plt+0x3088>  // b.none
    5978:	sub	w1, w0, #0x9
    597c:	and	w1, w1, #0xffff
    5980:	cmp	w1, #0x1
    5984:	b.hi	5150 <PySequence_Fast@plt+0x3080>  // b.pmore
    5988:	b	5158 <PySequence_Fast@plt+0x3088>
    598c:	ldrh	w0, [x19, x2, lsl #1]
    5990:	cmp	w0, #0x20
    5994:	b.eq	56bc <PySequence_Fast@plt+0x35ec>  // b.none
    5998:	sub	w1, w0, #0x9
    599c:	and	w1, w1, #0xffff
    59a0:	cmp	w1, #0x1
    59a4:	b.hi	56b4 <PySequence_Fast@plt+0x35e4>  // b.pmore
    59a8:	b	56bc <PySequence_Fast@plt+0x35ec>
    59ac:	ldrh	w0, [x26, x19, lsl #1]
    59b0:	cmp	w0, #0x22
    59b4:	b.eq	5c14 <PySequence_Fast@plt+0x3b44>  // b.none
    59b8:	ldp	x27, x28, [sp, #80]
    59bc:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    59c0:	mov	x2, x19
    59c4:	mov	x1, x20
    59c8:	add	x0, x0, #0xbe8
    59cc:	bl	33c0 <PySequence_Fast@plt+0x12f0>
    59d0:	ldr	x0, [x22]
    59d4:	sub	x0, x0, #0x1
    59d8:	str	x0, [x22]
    59dc:	cbz	x0, 59e8 <PySequence_Fast@plt+0x3918>
    59e0:	ldp	x25, x26, [sp, #64]
    59e4:	b	5740 <PySequence_Fast@plt+0x3670>
    59e8:	mov	x0, x22
    59ec:	mov	x22, #0x0                   	// #0
    59f0:	bl	1e30 <_Py_Dealloc@plt>
    59f4:	ldp	x25, x26, [sp, #64]
    59f8:	b	5744 <PySequence_Fast@plt+0x3674>
    59fc:	ldrh	w0, [x20, x24, lsl #1]
    5a00:	cmp	w0, #0x2f
    5a04:	b.ls	5a10 <PySequence_Fast@plt+0x3940>  // b.plast
    5a08:	cmp	w0, #0x39
    5a0c:	b.ls	587c <PySequence_Fast@plt+0x37ac>  // b.plast
    5a10:	cmp	x1, x24
    5a14:	b.le	52ec <PySequence_Fast@plt+0x321c>
    5a18:	and	w0, w0, #0xffffffdf
    5a1c:	cmp	w0, #0x45
    5a20:	b.ne	52ec <PySequence_Fast@plt+0x321c>  // b.any
    5a24:	mov	w4, #0x1                   	// #1
    5a28:	b	5200 <PySequence_Fast@plt+0x3130>
    5a2c:	add	x27, sp, #0x88
    5a30:	mov	x3, x27
    5a34:	mov	x1, x20
    5a38:	mov	x0, x21
    5a3c:	bl	4c90 <PySequence_Fast@plt+0x2bc0>
    5a40:	mov	x26, x0
    5a44:	cbz	x0, 5728 <PySequence_Fast@plt+0x3658>
    5a48:	mov	x1, x0
    5a4c:	mov	x0, x22
    5a50:	bl	1eb0 <PyList_Append@plt>
    5a54:	cmn	w0, #0x1
    5a58:	ldr	x0, [x26]
    5a5c:	sub	x0, x0, #0x1
    5a60:	str	x0, [x26]
    5a64:	b.eq	5bbc <PySequence_Fast@plt+0x3aec>  // b.none
    5a68:	cbz	x0, 5b98 <PySequence_Fast@plt+0x3ac8>
    5a6c:	ldr	x2, [sp, #136]
    5a70:	cmp	x28, x2
    5a74:	b.ge	5ab0 <PySequence_Fast@plt+0x39e0>  // b.tcont
    5a78:	b	5718 <PySequence_Fast@plt+0x3648>
    5a7c:	cmp	w25, #0x2
    5a80:	b.eq	5b30 <PySequence_Fast@plt+0x3a60>  // b.none
    5a84:	ldr	w0, [x19, x2, lsl #2]
    5a88:	cmp	w0, #0x20
    5a8c:	b.eq	5aa4 <PySequence_Fast@plt+0x39d4>  // b.none
    5a90:	sub	w1, w0, #0x9
    5a94:	cmp	w1, #0x1
    5a98:	b.ls	5aa4 <PySequence_Fast@plt+0x39d4>  // b.plast
    5a9c:	cmp	w0, #0xd
    5aa0:	b.ne	56f0 <PySequence_Fast@plt+0x3620>  // b.any
    5aa4:	add	x2, x2, #0x1
    5aa8:	cmp	x28, x2
    5aac:	b.lt	5718 <PySequence_Fast@plt+0x3648>  // b.tstop
    5ab0:	cmp	w25, #0x1
    5ab4:	b.ne	5a7c <PySequence_Fast@plt+0x39ac>  // b.any
    5ab8:	ldrb	w0, [x19, x2]
    5abc:	cmp	w0, #0x20
    5ac0:	b.eq	5aa4 <PySequence_Fast@plt+0x39d4>  // b.none
    5ac4:	sub	w1, w0, #0x9
    5ac8:	and	w1, w1, #0xff
    5acc:	cmp	w1, #0x1
    5ad0:	b.ls	5aa4 <PySequence_Fast@plt+0x39d4>  // b.plast
    5ad4:	cmp	w0, #0xd
    5ad8:	b.eq	5aa4 <PySequence_Fast@plt+0x39d4>  // b.none
    5adc:	cmp	w0, #0x5d
    5ae0:	b.eq	64e0 <PySequence_Fast@plt+0x4410>  // b.none
    5ae4:	ldrb	w0, [x19, x2]
    5ae8:	cmp	w0, #0x2c
    5aec:	b.ne	5718 <PySequence_Fast@plt+0x3648>  // b.any
    5af0:	add	x2, x2, #0x1
    5af4:	cmp	x28, x2
    5af8:	b.lt	5a30 <PySequence_Fast@plt+0x3960>  // b.tstop
    5afc:	cmp	w25, #0x1
    5b00:	b.eq	5b78 <PySequence_Fast@plt+0x3aa8>  // b.none
    5b04:	cmp	w25, #0x2
    5b08:	b.eq	5b50 <PySequence_Fast@plt+0x3a80>  // b.none
    5b0c:	ldr	w0, [x19, x2, lsl #2]
    5b10:	cmp	w0, #0x20
    5b14:	b.eq	5af0 <PySequence_Fast@plt+0x3a20>  // b.none
    5b18:	sub	w1, w0, #0x9
    5b1c:	cmp	w1, #0x1
    5b20:	b.ls	5af0 <PySequence_Fast@plt+0x3a20>  // b.plast
    5b24:	cmp	w0, #0xd
    5b28:	b.eq	5af0 <PySequence_Fast@plt+0x3a20>  // b.none
    5b2c:	b	5a30 <PySequence_Fast@plt+0x3960>
    5b30:	ldrh	w0, [x19, x2, lsl #1]
    5b34:	cmp	w0, #0x20
    5b38:	b.eq	5aa4 <PySequence_Fast@plt+0x39d4>  // b.none
    5b3c:	sub	w1, w0, #0x9
    5b40:	and	w1, w1, #0xffff
    5b44:	cmp	w1, #0x1
    5b48:	b.hi	5a9c <PySequence_Fast@plt+0x39cc>  // b.pmore
    5b4c:	b	5aa4 <PySequence_Fast@plt+0x39d4>
    5b50:	ldrh	w1, [x19, x2, lsl #1]
    5b54:	cmp	w1, #0x20
    5b58:	b.eq	5af0 <PySequence_Fast@plt+0x3a20>  // b.none
    5b5c:	sub	w0, w1, #0x9
    5b60:	and	w0, w0, #0xffff
    5b64:	cmp	w0, #0x1
    5b68:	b.ls	5af0 <PySequence_Fast@plt+0x3a20>  // b.plast
    5b6c:	cmp	w1, #0xd
    5b70:	b.eq	5af0 <PySequence_Fast@plt+0x3a20>  // b.none
    5b74:	b	5a30 <PySequence_Fast@plt+0x3960>
    5b78:	ldrb	w0, [x19, x2]
    5b7c:	cmp	w0, #0x20
    5b80:	b.eq	5af0 <PySequence_Fast@plt+0x3a20>  // b.none
    5b84:	sub	w1, w0, #0x9
    5b88:	and	w1, w1, #0xff
    5b8c:	cmp	w1, #0x1
    5b90:	b.hi	5b24 <PySequence_Fast@plt+0x3a54>  // b.pmore
    5b94:	b	5af0 <PySequence_Fast@plt+0x3a20>
    5b98:	mov	x0, x26
    5b9c:	bl	1e30 <_Py_Dealloc@plt>
    5ba0:	b	5a6c <PySequence_Fast@plt+0x399c>
    5ba4:	ldrh	w0, [x19, x2, lsl #1]
    5ba8:	cmp	w0, #0x2c
    5bac:	b.eq	5af0 <PySequence_Fast@plt+0x3a20>  // b.none
    5bb0:	b	5718 <PySequence_Fast@plt+0x3648>
    5bb4:	ldrh	w0, [x20, x24, lsl #1]
    5bb8:	b	51c8 <PySequence_Fast@plt+0x30f8>
    5bbc:	cbnz	x0, 5728 <PySequence_Fast@plt+0x3658>
    5bc0:	mov	x0, x26
    5bc4:	bl	1e30 <_Py_Dealloc@plt>
    5bc8:	b	5728 <PySequence_Fast@plt+0x3658>
    5bcc:	ldr	x26, [x20, #72]
    5bd0:	b	50ec <PySequence_Fast@plt+0x301c>
    5bd4:	cmp	w0, #0x7d
    5bd8:	b.eq	6224 <PySequence_Fast@plt+0x4154>  // b.none
    5bdc:	cmp	x25, x19
    5be0:	b.lt	59b8 <PySequence_Fast@plt+0x38e8>  // b.tstop
    5be4:	add	x0, sp, #0x88
    5be8:	str	x0, [sp, #96]
    5bec:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    5bf0:	ldr	x0, [x0, #4016]
    5bf4:	str	x0, [sp, #120]
    5bf8:	cmp	w24, #0x1
    5bfc:	b.eq	5eb4 <PySequence_Fast@plt+0x3de4>  // b.none
    5c00:	cmp	w24, #0x2
    5c04:	b.eq	59ac <PySequence_Fast@plt+0x38dc>  // b.none
    5c08:	ldr	w0, [x26, x19, lsl #2]
    5c0c:	cmp	w0, #0x22
    5c10:	b.ne	59b8 <PySequence_Fast@plt+0x38e8>  // b.any
    5c14:	ldrsb	w2, [x21, #16]
    5c18:	add	x1, x19, #0x1
    5c1c:	ldr	x3, [sp, #96]
    5c20:	mov	x0, x20
    5c24:	bl	34b0 <PySequence_Fast@plt+0x13e0>
    5c28:	mov	x28, x0
    5c2c:	cbz	x0, 6040 <PySequence_Fast@plt+0x3f70>
    5c30:	mov	x1, x0
    5c34:	ldr	x0, [x21, #64]
    5c38:	bl	20b0 <PyDict_GetItemWithError@plt>
    5c3c:	mov	x19, x0
    5c40:	cbz	x0, 5fc0 <PySequence_Fast@plt+0x3ef0>
    5c44:	ldr	x0, [x0]
    5c48:	add	x0, x0, #0x1
    5c4c:	str	x0, [x19]
    5c50:	ldr	x0, [x28]
    5c54:	sub	x0, x0, #0x1
    5c58:	str	x0, [x28]
    5c5c:	cbz	x0, 5efc <PySequence_Fast@plt+0x3e2c>
    5c60:	ldr	x2, [sp, #136]
    5c64:	cmp	x25, x2
    5c68:	b.ge	5ca4 <PySequence_Fast@plt+0x3bd4>  // b.tcont
    5c6c:	b	6020 <PySequence_Fast@plt+0x3f50>
    5c70:	cmp	w24, #0x2
    5c74:	b.eq	5e54 <PySequence_Fast@plt+0x3d84>  // b.none
    5c78:	ldr	w1, [x26, x2, lsl #2]
    5c7c:	cmp	w1, #0x20
    5c80:	b.eq	5c98 <PySequence_Fast@plt+0x3bc8>  // b.none
    5c84:	sub	w0, w1, #0x9
    5c88:	cmp	w0, #0x1
    5c8c:	b.ls	5c98 <PySequence_Fast@plt+0x3bc8>  // b.plast
    5c90:	cmp	w1, #0xd
    5c94:	b.ne	600c <PySequence_Fast@plt+0x3f3c>  // b.any
    5c98:	add	x2, x2, #0x1
    5c9c:	cmp	x25, x2
    5ca0:	b.lt	6020 <PySequence_Fast@plt+0x3f50>  // b.tstop
    5ca4:	cmp	w24, #0x1
    5ca8:	b.ne	5c70 <PySequence_Fast@plt+0x3ba0>  // b.any
    5cac:	ldrb	w0, [x26, x2]
    5cb0:	cmp	w0, #0x20
    5cb4:	b.eq	5c98 <PySequence_Fast@plt+0x3bc8>  // b.none
    5cb8:	sub	w1, w0, #0x9
    5cbc:	and	w1, w1, #0xff
    5cc0:	cmp	w1, #0x1
    5cc4:	b.ls	5c98 <PySequence_Fast@plt+0x3bc8>  // b.plast
    5cc8:	cmp	w0, #0xd
    5ccc:	b.eq	5c98 <PySequence_Fast@plt+0x3bc8>  // b.none
    5cd0:	cmp	x25, x2
    5cd4:	b.lt	6020 <PySequence_Fast@plt+0x3f50>  // b.tstop
    5cd8:	cmp	w0, #0x3a
    5cdc:	b.ne	6020 <PySequence_Fast@plt+0x3f50>  // b.any
    5ce0:	add	x2, x2, #0x1
    5ce4:	cmp	x25, x2
    5ce8:	b.lt	5d1c <PySequence_Fast@plt+0x3c4c>  // b.tstop
    5cec:	cmp	w24, #0x1
    5cf0:	b.eq	5e94 <PySequence_Fast@plt+0x3dc4>  // b.none
    5cf4:	cmp	w24, #0x2
    5cf8:	b.eq	5e74 <PySequence_Fast@plt+0x3da4>  // b.none
    5cfc:	ldr	w0, [x26, x2, lsl #2]
    5d00:	cmp	w0, #0x20
    5d04:	b.eq	5ce0 <PySequence_Fast@plt+0x3c10>  // b.none
    5d08:	sub	w1, w0, #0x9
    5d0c:	cmp	w1, #0x1
    5d10:	b.ls	5ce0 <PySequence_Fast@plt+0x3c10>  // b.plast
    5d14:	cmp	w0, #0xd
    5d18:	b.eq	5ce0 <PySequence_Fast@plt+0x3c10>  // b.none
    5d1c:	ldr	x3, [sp, #96]
    5d20:	mov	x1, x20
    5d24:	mov	x0, x21
    5d28:	bl	4c90 <PySequence_Fast@plt+0x2bc0>
    5d2c:	mov	x28, x0
    5d30:	cbz	x0, 5fe0 <PySequence_Fast@plt+0x3f10>
    5d34:	mov	x2, x0
    5d38:	ldr	x0, [sp, #104]
    5d3c:	ldr	x1, [sp, #120]
    5d40:	cmp	x0, x1
    5d44:	mov	x1, x19
    5d48:	b.eq	5ec4 <PySequence_Fast@plt+0x3df4>  // b.none
    5d4c:	mov	x0, #0x2                   	// #2
    5d50:	bl	2090 <PyTuple_Pack@plt>
    5d54:	mov	x27, x0
    5d58:	cbz	x0, 6464 <PySequence_Fast@plt+0x4394>
    5d5c:	ldr	x0, [x19]
    5d60:	sub	x0, x0, #0x1
    5d64:	str	x0, [x19]
    5d68:	cbz	x0, 6000 <PySequence_Fast@plt+0x3f30>
    5d6c:	ldr	x0, [x28]
    5d70:	sub	x0, x0, #0x1
    5d74:	str	x0, [x28]
    5d78:	cbz	x0, 5fa8 <PySequence_Fast@plt+0x3ed8>
    5d7c:	mov	x1, x27
    5d80:	mov	x0, x22
    5d84:	bl	1eb0 <PyList_Append@plt>
    5d88:	cmn	w0, #0x1
    5d8c:	ldr	x0, [x27]
    5d90:	sub	x0, x0, #0x1
    5d94:	str	x0, [x27]
    5d98:	b.eq	649c <PySequence_Fast@plt+0x43cc>  // b.none
    5d9c:	cbz	x0, 5fb4 <PySequence_Fast@plt+0x3ee4>
    5da0:	ldr	x19, [sp, #136]
    5da4:	cmp	x25, x19
    5da8:	b.ge	5de4 <PySequence_Fast@plt+0x3d14>  // b.tcont
    5dac:	b	5e18 <PySequence_Fast@plt+0x3d48>
    5db0:	cmp	w24, #0x2
    5db4:	b.eq	5e34 <PySequence_Fast@plt+0x3d64>  // b.none
    5db8:	ldr	w0, [x26, x19, lsl #2]
    5dbc:	cmp	w0, #0x20
    5dc0:	b.eq	5dd8 <PySequence_Fast@plt+0x3d08>  // b.none
    5dc4:	sub	w1, w0, #0x9
    5dc8:	cmp	w1, #0x1
    5dcc:	b.ls	5dd8 <PySequence_Fast@plt+0x3d08>  // b.plast
    5dd0:	cmp	w0, #0xd
    5dd4:	b.ne	6064 <PySequence_Fast@plt+0x3f94>  // b.any
    5dd8:	add	x19, x19, #0x1
    5ddc:	cmp	x25, x19
    5de0:	b.lt	5e18 <PySequence_Fast@plt+0x3d48>  // b.tstop
    5de4:	cmp	w24, #0x1
    5de8:	b.ne	5db0 <PySequence_Fast@plt+0x3ce0>  // b.any
    5dec:	ldrb	w1, [x26, x19]
    5df0:	cmp	w1, #0x20
    5df4:	b.eq	5dd8 <PySequence_Fast@plt+0x3d08>  // b.none
    5df8:	sub	w0, w1, #0x9
    5dfc:	and	w0, w0, #0xff
    5e00:	cmp	w0, #0x1
    5e04:	b.ls	5dd8 <PySequence_Fast@plt+0x3d08>  // b.plast
    5e08:	cmp	w1, #0xd
    5e0c:	b.eq	5dd8 <PySequence_Fast@plt+0x3d08>  // b.none
    5e10:	cmp	x25, x19
    5e14:	b.ge	5f08 <PySequence_Fast@plt+0x3e38>  // b.tcont
    5e18:	mov	x2, x19
    5e1c:	mov	x1, x20
    5e20:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    5e24:	add	x0, x0, #0xc38
    5e28:	bl	33c0 <PySequence_Fast@plt+0x12f0>
    5e2c:	ldp	x27, x28, [sp, #80]
    5e30:	b	59d0 <PySequence_Fast@plt+0x3900>
    5e34:	ldrh	w1, [x26, x19, lsl #1]
    5e38:	cmp	w1, #0x20
    5e3c:	b.eq	5dd8 <PySequence_Fast@plt+0x3d08>  // b.none
    5e40:	sub	w0, w1, #0x9
    5e44:	and	w0, w0, #0xffff
    5e48:	cmp	w0, #0x1
    5e4c:	b.hi	5e08 <PySequence_Fast@plt+0x3d38>  // b.pmore
    5e50:	b	5dd8 <PySequence_Fast@plt+0x3d08>
    5e54:	ldrh	w0, [x26, x2, lsl #1]
    5e58:	cmp	w0, #0x20
    5e5c:	b.eq	5c98 <PySequence_Fast@plt+0x3bc8>  // b.none
    5e60:	sub	w1, w0, #0x9
    5e64:	and	w1, w1, #0xffff
    5e68:	cmp	w1, #0x1
    5e6c:	b.hi	5cc8 <PySequence_Fast@plt+0x3bf8>  // b.pmore
    5e70:	b	5c98 <PySequence_Fast@plt+0x3bc8>
    5e74:	ldrh	w0, [x26, x2, lsl #1]
    5e78:	cmp	w0, #0x20
    5e7c:	b.eq	5ce0 <PySequence_Fast@plt+0x3c10>  // b.none
    5e80:	sub	w1, w0, #0x9
    5e84:	and	w1, w1, #0xffff
    5e88:	cmp	w1, #0x1
    5e8c:	b.hi	5d14 <PySequence_Fast@plt+0x3c44>  // b.pmore
    5e90:	b	5ce0 <PySequence_Fast@plt+0x3c10>
    5e94:	ldrb	w0, [x26, x2]
    5e98:	cmp	w0, #0x20
    5e9c:	b.eq	5ce0 <PySequence_Fast@plt+0x3c10>  // b.none
    5ea0:	sub	w1, w0, #0x9
    5ea4:	and	w1, w1, #0xff
    5ea8:	cmp	w1, #0x1
    5eac:	b.hi	5d14 <PySequence_Fast@plt+0x3c44>  // b.pmore
    5eb0:	b	5ce0 <PySequence_Fast@plt+0x3c10>
    5eb4:	ldrb	w0, [x26, x19]
    5eb8:	cmp	w0, #0x22
    5ebc:	b.eq	5c14 <PySequence_Fast@plt+0x3b44>  // b.none
    5ec0:	b	59b8 <PySequence_Fast@plt+0x38e8>
    5ec4:	mov	x0, x22
    5ec8:	bl	2020 <PyDict_SetItem@plt>
    5ecc:	tbnz	w0, #31, 6464 <PySequence_Fast@plt+0x4394>
    5ed0:	ldr	x0, [x19]
    5ed4:	sub	x0, x0, #0x1
    5ed8:	str	x0, [x19]
    5edc:	cbz	x0, 60a4 <PySequence_Fast@plt+0x3fd4>
    5ee0:	ldr	x0, [x28]
    5ee4:	sub	x0, x0, #0x1
    5ee8:	str	x0, [x28]
    5eec:	cbnz	x0, 5da0 <PySequence_Fast@plt+0x3cd0>
    5ef0:	mov	x0, x28
    5ef4:	bl	1e30 <_Py_Dealloc@plt>
    5ef8:	b	5da0 <PySequence_Fast@plt+0x3cd0>
    5efc:	mov	x0, x28
    5f00:	bl	1e30 <_Py_Dealloc@plt>
    5f04:	b	5c60 <PySequence_Fast@plt+0x3b90>
    5f08:	cmp	w1, #0x7d
    5f0c:	b.eq	6224 <PySequence_Fast@plt+0x4154>  // b.none
    5f10:	cmp	w1, #0x2c
    5f14:	b.ne	5e18 <PySequence_Fast@plt+0x3d48>  // b.any
    5f18:	add	x19, x19, #0x1
    5f1c:	cmp	x25, x19
    5f20:	b.lt	59b8 <PySequence_Fast@plt+0x38e8>  // b.tstop
    5f24:	cmp	w24, #0x1
    5f28:	b.eq	5f88 <PySequence_Fast@plt+0x3eb8>  // b.none
    5f2c:	cmp	w24, #0x2
    5f30:	b.eq	5f60 <PySequence_Fast@plt+0x3e90>  // b.none
    5f34:	ldr	w0, [x26, x19, lsl #2]
    5f38:	cmp	w0, #0x20
    5f3c:	b.eq	5f18 <PySequence_Fast@plt+0x3e48>  // b.none
    5f40:	sub	w1, w0, #0x9
    5f44:	cmp	w1, #0x1
    5f48:	b.ls	5f18 <PySequence_Fast@plt+0x3e48>  // b.plast
    5f4c:	cmp	w0, #0xd
    5f50:	b.eq	5f18 <PySequence_Fast@plt+0x3e48>  // b.none
    5f54:	cmp	x25, x19
    5f58:	b.ge	5bf8 <PySequence_Fast@plt+0x3b28>  // b.tcont
    5f5c:	b	59b8 <PySequence_Fast@plt+0x38e8>
    5f60:	ldrh	w1, [x26, x19, lsl #1]
    5f64:	cmp	w1, #0x20
    5f68:	b.eq	5f18 <PySequence_Fast@plt+0x3e48>  // b.none
    5f6c:	sub	w0, w1, #0x9
    5f70:	and	w0, w0, #0xffff
    5f74:	cmp	w0, #0x1
    5f78:	b.ls	5f18 <PySequence_Fast@plt+0x3e48>  // b.plast
    5f7c:	cmp	w1, #0xd
    5f80:	b.eq	5f18 <PySequence_Fast@plt+0x3e48>  // b.none
    5f84:	b	5f54 <PySequence_Fast@plt+0x3e84>
    5f88:	ldrb	w1, [x26, x19]
    5f8c:	cmp	w1, #0x20
    5f90:	b.eq	5f18 <PySequence_Fast@plt+0x3e48>  // b.none
    5f94:	sub	w0, w1, #0x9
    5f98:	and	w0, w0, #0xff
    5f9c:	cmp	w0, #0x1
    5fa0:	b.hi	5f7c <PySequence_Fast@plt+0x3eac>  // b.pmore
    5fa4:	b	5f18 <PySequence_Fast@plt+0x3e48>
    5fa8:	mov	x0, x28
    5fac:	bl	1e30 <_Py_Dealloc@plt>
    5fb0:	b	5d7c <PySequence_Fast@plt+0x3cac>
    5fb4:	mov	x0, x27
    5fb8:	bl	1e30 <_Py_Dealloc@plt>
    5fbc:	b	5da0 <PySequence_Fast@plt+0x3cd0>
    5fc0:	bl	1f40 <PyErr_Occurred@plt>
    5fc4:	cbnz	x0, 6500 <PySequence_Fast@plt+0x4430>
    5fc8:	ldr	x0, [x21, #64]
    5fcc:	mov	x2, x28
    5fd0:	mov	x1, x28
    5fd4:	mov	x19, x28
    5fd8:	bl	2020 <PyDict_SetItem@plt>
    5fdc:	tbz	w0, #31, 5c60 <PySequence_Fast@plt+0x3b90>
    5fe0:	ldr	x0, [x19]
    5fe4:	sub	x0, x0, #0x1
    5fe8:	str	x0, [x19]
    5fec:	cbnz	x0, 6040 <PySequence_Fast@plt+0x3f70>
    5ff0:	mov	x0, x19
    5ff4:	bl	1e30 <_Py_Dealloc@plt>
    5ff8:	ldp	x27, x28, [sp, #80]
    5ffc:	b	59d0 <PySequence_Fast@plt+0x3900>
    6000:	mov	x0, x19
    6004:	bl	1e30 <_Py_Dealloc@plt>
    6008:	b	5d6c <PySequence_Fast@plt+0x3c9c>
    600c:	cmp	x25, x2
    6010:	b.lt	6020 <PySequence_Fast@plt+0x3f50>  // b.tstop
    6014:	cmp	w1, #0x3a
    6018:	b.eq	5ce0 <PySequence_Fast@plt+0x3c10>  // b.none
    601c:	nop
    6020:	mov	x1, x20
    6024:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    6028:	add	x0, x0, #0xc20
    602c:	bl	33c0 <PySequence_Fast@plt+0x12f0>
    6030:	ldr	x0, [x19]
    6034:	sub	x0, x0, #0x1
    6038:	str	x0, [x19]
    603c:	cbz	x0, 5ff0 <PySequence_Fast@plt+0x3f20>
    6040:	ldp	x27, x28, [sp, #80]
    6044:	b	59d0 <PySequence_Fast@plt+0x3900>
    6048:	cmp	w0, #0x5d
    604c:	b.ne	5a2c <PySequence_Fast@plt+0x395c>  // b.any
    6050:	add	x2, x2, #0x1
    6054:	ldp	x25, x26, [sp, #64]
    6058:	ldp	x27, x28, [sp, #80]
    605c:	str	x2, [x23]
    6060:	b	5744 <PySequence_Fast@plt+0x3674>
    6064:	cmp	x25, x19
    6068:	b.lt	5e18 <PySequence_Fast@plt+0x3d48>  // b.tstop
    606c:	cmp	w0, #0x7d
    6070:	b.eq	6224 <PySequence_Fast@plt+0x4154>  // b.none
    6074:	cmp	w0, #0x2c
    6078:	b.eq	5f18 <PySequence_Fast@plt+0x3e48>  // b.none
    607c:	b	5e18 <PySequence_Fast@plt+0x3d48>
    6080:	bl	1fd0 <PyDict_New@plt>
    6084:	mov	x22, x0
    6088:	b	511c <PySequence_Fast@plt+0x304c>
    608c:	mov	x0, x22
    6090:	mov	x22, #0x0                   	// #0
    6094:	bl	1e30 <_Py_Dealloc@plt>
    6098:	ldp	x25, x26, [sp, #64]
    609c:	ldp	x27, x28, [sp, #80]
    60a0:	b	5744 <PySequence_Fast@plt+0x3674>
    60a4:	mov	x0, x19
    60a8:	bl	1e30 <_Py_Dealloc@plt>
    60ac:	b	5ee0 <PySequence_Fast@plt+0x3e10>
    60b0:	ldrb	w0, [x3, x0]
    60b4:	cmp	w0, #0x61
    60b8:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    60bc:	add	x3, x3, x19
    60c0:	ldrb	w0, [x3, #2]
    60c4:	cmp	w0, #0x4e
    60c8:	cset	w0, eq  // eq = none
    60cc:	b	4d54 <PySequence_Fast@plt+0x2c84>
    60d0:	ldrb	w0, [x3, x0]
    60d4:	cmp	w0, #0x75
    60d8:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    60dc:	add	x3, x3, x19
    60e0:	ldrb	w0, [x3, #2]
    60e4:	cmp	w0, #0x6c
    60e8:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    60ec:	ldrb	w0, [x3, #3]
    60f0:	cmp	w0, #0x6c
    60f4:	cset	w0, eq  // eq = none
    60f8:	b	5914 <PySequence_Fast@plt+0x3844>
    60fc:	ldrb	w0, [x3, x0]
    6100:	cmp	w0, #0x6e
    6104:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6108:	add	x3, x3, x19
    610c:	ldrb	w0, [x3, #2]
    6110:	cmp	w0, #0x66
    6114:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6118:	ldrb	w0, [x3, #3]
    611c:	cmp	w0, #0x69
    6120:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6124:	ldrb	w0, [x3, #4]
    6128:	cmp	w0, #0x6e
    612c:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6130:	ldrb	w0, [x3, #5]
    6134:	cmp	w0, #0x69
    6138:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    613c:	ldrb	w0, [x3, #6]
    6140:	cmp	w0, #0x74
    6144:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6148:	ldrb	w0, [x3, #7]
    614c:	cmp	w0, #0x79
    6150:	cset	w0, eq  // eq = none
    6154:	b	55cc <PySequence_Fast@plt+0x34fc>
    6158:	ldrb	w0, [x3, x0]
    615c:	cmp	w0, #0x49
    6160:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6164:	add	x3, x3, x19
    6168:	ldrb	w0, [x3, #2]
    616c:	cmp	w0, #0x6e
    6170:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6174:	ldrb	w0, [x3, #3]
    6178:	cmp	w0, #0x66
    617c:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6180:	ldrb	w0, [x3, #4]
    6184:	cmp	w0, #0x69
    6188:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    618c:	ldrb	w0, [x3, #5]
    6190:	cmp	w0, #0x6e
    6194:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6198:	ldrb	w0, [x3, #6]
    619c:	cmp	w0, #0x69
    61a0:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    61a4:	ldrb	w0, [x3, #7]
    61a8:	cmp	w0, #0x74
    61ac:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    61b0:	ldrb	w0, [x3, #8]
    61b4:	cmp	w0, #0x79
    61b8:	cset	w0, eq  // eq = none
    61bc:	b	5050 <PySequence_Fast@plt+0x2f80>
    61c0:	ldrb	w0, [x3, x0]
    61c4:	cmp	w0, #0x72
    61c8:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    61cc:	add	x3, x3, x19
    61d0:	ldrb	w0, [x3, #2]
    61d4:	cmp	w0, #0x75
    61d8:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    61dc:	ldrb	w0, [x3, #3]
    61e0:	cmp	w0, #0x65
    61e4:	cset	w0, eq  // eq = none
    61e8:	b	5528 <PySequence_Fast@plt+0x3458>
    61ec:	ldrb	w0, [x3, x0]
    61f0:	cmp	w0, #0x61
    61f4:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    61f8:	add	x3, x3, x19
    61fc:	ldrb	w0, [x3, #2]
    6200:	cmp	w0, #0x6c
    6204:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6208:	ldrb	w0, [x3, #3]
    620c:	cmp	w0, #0x73
    6210:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6214:	ldrb	w0, [x3, #4]
    6218:	cmp	w0, #0x65
    621c:	cset	w0, eq  // eq = none
    6220:	b	57fc <PySequence_Fast@plt+0x372c>
    6224:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    6228:	add	x19, x19, #0x1
    622c:	str	x19, [x23]
    6230:	ldr	x28, [x0, #4016]
    6234:	ldr	x0, [sp, #104]
    6238:	cmp	x0, x28
    623c:	b.ne	6428 <PySequence_Fast@plt+0x4358>  // b.any
    6240:	ldr	x0, [x21, #24]
    6244:	ldr	x1, [sp, #104]
    6248:	cmp	x0, x1
    624c:	b.eq	6098 <PySequence_Fast@plt+0x3fc8>  // b.none
    6250:	mov	x1, x22
    6254:	mov	x2, #0x0                   	// #0
    6258:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    625c:	mov	x2, x0
    6260:	ldr	x1, [x22]
    6264:	sub	x0, x1, #0x1
    6268:	str	x0, [x22]
    626c:	cbz	x0, 644c <PySequence_Fast@plt+0x437c>
    6270:	mov	x22, x2
    6274:	ldp	x25, x26, [sp, #64]
    6278:	ldp	x27, x28, [sp, #80]
    627c:	b	5744 <PySequence_Fast@plt+0x3674>
    6280:	lsl	x0, x0, #1
    6284:	ldrh	w5, [x3, x0]
    6288:	cmp	w5, #0x49
    628c:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6290:	add	x3, x3, x0
    6294:	ldrh	w0, [x3, #2]
    6298:	cmp	w0, #0x6e
    629c:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    62a0:	ldrh	w0, [x3, #4]
    62a4:	cmp	w0, #0x66
    62a8:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    62ac:	ldrh	w0, [x3, #6]
    62b0:	cmp	w0, #0x69
    62b4:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    62b8:	ldrh	w0, [x3, #8]
    62bc:	cmp	w0, #0x6e
    62c0:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    62c4:	ldrh	w0, [x3, #10]
    62c8:	cmp	w0, #0x69
    62cc:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    62d0:	ldrh	w0, [x3, #12]
    62d4:	cmp	w0, #0x74
    62d8:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    62dc:	ldrh	w0, [x3, #14]
    62e0:	cmp	w0, #0x79
    62e4:	cset	w0, eq  // eq = none
    62e8:	b	5050 <PySequence_Fast@plt+0x2f80>
    62ec:	lsl	x0, x0, #1
    62f0:	ldrh	w5, [x3, x0]
    62f4:	cmp	w5, #0x72
    62f8:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    62fc:	add	x0, x3, x0
    6300:	ldrh	w3, [x0, #2]
    6304:	cmp	w3, #0x75
    6308:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    630c:	ldrh	w0, [x0, #4]
    6310:	cmp	w0, #0x65
    6314:	cset	w0, eq  // eq = none
    6318:	b	5528 <PySequence_Fast@plt+0x3458>
    631c:	lsl	x0, x0, #1
    6320:	ldrh	w5, [x3, x0]
    6324:	cmp	w5, #0x61
    6328:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    632c:	add	x0, x3, x0
    6330:	ldrh	w3, [x0, #2]
    6334:	cmp	w3, #0x6c
    6338:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    633c:	ldrh	w3, [x0, #4]
    6340:	cmp	w3, #0x73
    6344:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6348:	ldrh	w0, [x0, #6]
    634c:	cmp	w0, #0x65
    6350:	cset	w0, eq  // eq = none
    6354:	b	57fc <PySequence_Fast@plt+0x372c>
    6358:	lsl	x0, x0, #1
    635c:	ldrh	w5, [x3, x0]
    6360:	cmp	w5, #0x61
    6364:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    6368:	add	x0, x3, x0
    636c:	ldrh	w0, [x0, #2]
    6370:	cmp	w0, #0x4e
    6374:	cset	w0, eq  // eq = none
    6378:	b	4d54 <PySequence_Fast@plt+0x2c84>
    637c:	lsl	x0, x0, #1
    6380:	ldrh	w5, [x3, x0]
    6384:	cmp	w5, #0x75
    6388:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    638c:	add	x0, x3, x0
    6390:	ldrh	w3, [x0, #2]
    6394:	cmp	w3, #0x6c
    6398:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    639c:	ldrh	w0, [x0, #4]
    63a0:	cmp	w0, #0x6c
    63a4:	cset	w0, eq  // eq = none
    63a8:	b	5914 <PySequence_Fast@plt+0x3844>
    63ac:	lsl	x0, x0, #1
    63b0:	ldrh	w5, [x3, x0]
    63b4:	cmp	w5, #0x6e
    63b8:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    63bc:	add	x0, x3, x0
    63c0:	ldrh	w3, [x0, #2]
    63c4:	cmp	w3, #0x66
    63c8:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    63cc:	ldrh	w3, [x0, #4]
    63d0:	cmp	w3, #0x69
    63d4:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    63d8:	ldrh	w3, [x0, #6]
    63dc:	cmp	w3, #0x6e
    63e0:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    63e4:	ldrh	w3, [x0, #8]
    63e8:	cmp	w3, #0x69
    63ec:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    63f0:	ldrh	w3, [x0, #10]
    63f4:	cmp	w3, #0x74
    63f8:	b.ne	4da8 <PySequence_Fast@plt+0x2cd8>  // b.any
    63fc:	ldrh	w0, [x0, #12]
    6400:	cmp	w0, #0x79
    6404:	cset	w0, eq  // eq = none
    6408:	b	55cc <PySequence_Fast@plt+0x34fc>
    640c:	cmp	x1, x24
    6410:	b.le	52ec <PySequence_Fast@plt+0x321c>
    6414:	and	w0, w0, #0xffffffdf
    6418:	cmp	w0, #0x45
    641c:	b.ne	52ec <PySequence_Fast@plt+0x321c>  // b.any
    6420:	mov	w4, #0x1                   	// #1
    6424:	b	5410 <PySequence_Fast@plt+0x3340>
    6428:	ldr	x0, [x21, #32]
    642c:	mov	x1, x22
    6430:	mov	x2, #0x0                   	// #0
    6434:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    6438:	mov	x2, x0
    643c:	ldr	x1, [x22]
    6440:	sub	x1, x1, #0x1
    6444:	str	x1, [x22]
    6448:	cbnz	x1, 6270 <PySequence_Fast@plt+0x41a0>
    644c:	mov	x0, x22
    6450:	mov	x22, x2
    6454:	bl	1e30 <_Py_Dealloc@plt>
    6458:	ldp	x25, x26, [sp, #64]
    645c:	ldp	x27, x28, [sp, #80]
    6460:	b	5744 <PySequence_Fast@plt+0x3674>
    6464:	ldr	x0, [x19]
    6468:	sub	x0, x0, #0x1
    646c:	str	x0, [x19]
    6470:	cbnz	x0, 647c <PySequence_Fast@plt+0x43ac>
    6474:	mov	x0, x19
    6478:	bl	1e30 <_Py_Dealloc@plt>
    647c:	ldr	x0, [x28]
    6480:	sub	x0, x0, #0x1
    6484:	str	x0, [x28]
    6488:	cbnz	x0, 6040 <PySequence_Fast@plt+0x3f70>
    648c:	mov	x0, x28
    6490:	bl	1e30 <_Py_Dealloc@plt>
    6494:	ldp	x27, x28, [sp, #80]
    6498:	b	59d0 <PySequence_Fast@plt+0x3900>
    649c:	cbnz	x0, 6040 <PySequence_Fast@plt+0x3f70>
    64a0:	mov	x0, x27
    64a4:	bl	1e30 <_Py_Dealloc@plt>
    64a8:	ldp	x27, x28, [sp, #80]
    64ac:	b	59d0 <PySequence_Fast@plt+0x3900>
    64b0:	b.eq	64e0 <PySequence_Fast@plt+0x4410>  // b.none
    64b4:	cmp	w25, #0x2
    64b8:	b.eq	64f0 <PySequence_Fast@plt+0x4420>  // b.none
    64bc:	ldr	w0, [x19, x2, lsl #2]
    64c0:	cmp	w0, #0x5d
    64c4:	b.eq	6050 <PySequence_Fast@plt+0x3f80>  // b.none
    64c8:	mov	x2, x28
    64cc:	mov	x1, x20
    64d0:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    64d4:	add	x0, x0, #0xc88
    64d8:	bl	33c0 <PySequence_Fast@plt+0x12f0>
    64dc:	b	5728 <PySequence_Fast@plt+0x3658>
    64e0:	ldrb	w0, [x19, x2]
    64e4:	cmp	w0, #0x5d
    64e8:	b.ne	64c8 <PySequence_Fast@plt+0x43f8>  // b.any
    64ec:	b	6050 <PySequence_Fast@plt+0x3f80>
    64f0:	ldrh	w0, [x19, x2, lsl #1]
    64f4:	cmp	w0, #0x5d
    64f8:	b.ne	64c8 <PySequence_Fast@plt+0x43f8>  // b.any
    64fc:	b	6050 <PySequence_Fast@plt+0x3f80>
    6500:	mov	x19, x28
    6504:	b	5fe0 <PySequence_Fast@plt+0x3f10>
    6508:	stp	x29, x30, [sp, #-32]!
    650c:	mov	x29, sp
    6510:	stp	x19, x20, [sp, #16]
    6514:	mov	x19, x0
    6518:	cbz	x0, 6578 <PySequence_Fast@plt+0x44a8>
    651c:	mov	x0, x1
    6520:	bl	1e80 <PyLong_FromSsize_t@plt>
    6524:	mov	x20, x0
    6528:	cbz	x0, 6560 <PySequence_Fast@plt+0x4490>
    652c:	mov	x0, #0x2                   	// #2
    6530:	bl	1f10 <PyTuple_New@plt>
    6534:	cbz	x0, 6548 <PySequence_Fast@plt+0x4478>
    6538:	stp	x19, x20, [x0, #24]
    653c:	ldp	x19, x20, [sp, #16]
    6540:	ldp	x29, x30, [sp], #32
    6544:	ret
    6548:	ldr	x0, [x20]
    654c:	sub	x0, x0, #0x1
    6550:	str	x0, [x20]
    6554:	cbnz	x0, 6560 <PySequence_Fast@plt+0x4490>
    6558:	mov	x0, x20
    655c:	bl	1e30 <_Py_Dealloc@plt>
    6560:	ldr	x0, [x19]
    6564:	sub	x0, x0, #0x1
    6568:	str	x0, [x19]
    656c:	cbnz	x0, 6578 <PySequence_Fast@plt+0x44a8>
    6570:	mov	x0, x19
    6574:	bl	1e30 <_Py_Dealloc@plt>
    6578:	mov	x0, #0x0                   	// #0
    657c:	ldp	x19, x20, [sp, #16]
    6580:	ldp	x29, x30, [sp], #32
    6584:	ret
    6588:	stp	x29, x30, [sp, #-64]!
    658c:	mov	x6, #0xffffffffffffffff    	// #-1
    6590:	adrp	x3, 18000 <PyInit__json@@Base+0x11918>
    6594:	mov	x29, sp
    6598:	add	x3, x3, #0x1b0
    659c:	add	x3, x3, #0x78
    65a0:	add	x5, sp, #0x30
    65a4:	add	x4, sp, #0x28
    65a8:	str	x19, [sp, #16]
    65ac:	mov	x19, x0
    65b0:	mov	x0, x1
    65b4:	mov	x1, x2
    65b8:	adrp	x2, 6000 <PySequence_Fast@plt+0x3f30>
    65bc:	add	x2, x2, #0xc98
    65c0:	str	x6, [sp, #56]
    65c4:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    65c8:	cbz	w0, 6634 <PySequence_Fast@plt+0x4564>
    65cc:	ldr	x1, [sp, #40]
    65d0:	ldr	x0, [x1, #8]
    65d4:	ldr	x2, [x0, #168]
    65d8:	tbz	w2, #28, 6618 <PySequence_Fast@plt+0x4548>
    65dc:	ldr	x2, [sp, #48]
    65e0:	mov	x0, x19
    65e4:	add	x3, sp, #0x38
    65e8:	bl	4c90 <PySequence_Fast@plt+0x2bc0>
    65ec:	mov	x1, x0
    65f0:	ldr	x0, [x19, #64]
    65f4:	mov	x19, x1
    65f8:	bl	1ed0 <PyDict_Clear@plt>
    65fc:	cbz	x19, 6634 <PySequence_Fast@plt+0x4564>
    6600:	ldr	x1, [sp, #56]
    6604:	mov	x0, x19
    6608:	bl	6508 <PySequence_Fast@plt+0x4438>
    660c:	ldr	x19, [sp, #16]
    6610:	ldp	x29, x30, [sp], #64
    6614:	ret
    6618:	adrp	x3, 17000 <PyInit__json@@Base+0x10918>
    661c:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    6620:	ldr	x2, [x0, #24]
    6624:	add	x1, x1, #0x898
    6628:	ldr	x3, [x3, #3976]
    662c:	ldr	x0, [x3]
    6630:	bl	2040 <PyErr_Format@plt>
    6634:	mov	x0, #0x0                   	// #0
    6638:	ldr	x19, [sp, #16]
    663c:	ldp	x29, x30, [sp], #64
    6640:	ret
    6644:	nop
    6648:	stp	x29, x30, [sp, #-48]!
    664c:	mov	x5, #0xffffffffffffffff    	// #-1
    6650:	mov	w6, #0x1                   	// #1
    6654:	mov	x29, sp
    6658:	mov	x0, x1
    665c:	add	x4, sp, #0x14
    6660:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    6664:	add	x3, sp, #0x20
    6668:	add	x1, x1, #0xca8
    666c:	add	x2, sp, #0x18
    6670:	str	w6, [sp, #20]
    6674:	str	x5, [sp, #40]
    6678:	bl	1fa0 <PyArg_ParseTuple@plt>
    667c:	cbz	w0, 66b0 <PySequence_Fast@plt+0x45e0>
    6680:	ldr	x0, [sp, #24]
    6684:	ldr	x2, [x0, #8]
    6688:	ldr	x1, [x2, #168]
    668c:	tbz	w1, #28, 66bc <PySequence_Fast@plt+0x45ec>
    6690:	ldr	w2, [sp, #20]
    6694:	add	x3, sp, #0x28
    6698:	ldr	x1, [sp, #32]
    669c:	bl	34b0 <PySequence_Fast@plt+0x13e0>
    66a0:	ldr	x1, [sp, #40]
    66a4:	bl	6508 <PySequence_Fast@plt+0x4438>
    66a8:	ldp	x29, x30, [sp], #48
    66ac:	ret
    66b0:	mov	x0, #0x0                   	// #0
    66b4:	ldp	x29, x30, [sp], #48
    66b8:	ret
    66bc:	adrp	x0, 17000 <PyInit__json@@Base+0x10918>
    66c0:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    66c4:	ldr	x2, [x2, #24]
    66c8:	add	x1, x1, #0x898
    66cc:	ldr	x0, [x0, #3976]
    66d0:	ldr	x0, [x0]
    66d4:	bl	2040 <PyErr_Format@plt>
    66d8:	mov	x0, #0x0                   	// #0
    66dc:	ldp	x29, x30, [sp], #48
    66e0:	ret
    66e4:	nop

00000000000066e8 <PyInit__json@@Base>:
    66e8:	stp	x29, x30, [sp, #-48]!
    66ec:	mov	w1, #0x3f5                 	// #1013
    66f0:	mov	x29, sp
    66f4:	stp	x19, x20, [sp, #16]
    66f8:	adrp	x20, 18000 <PyInit__json@@Base+0x11918>
    66fc:	add	x20, x20, #0x1b0
    6700:	add	x0, x20, #0x90
    6704:	bl	1f50 <PyModule_Create2@plt>
    6708:	cbz	x0, 67bc <PyInit__json@@Base+0xd4>
    670c:	stp	x21, x22, [sp, #32]
    6710:	add	x21, x20, #0xf8
    6714:	mov	x19, x0
    6718:	mov	x0, x21
    671c:	bl	1e90 <PyType_Ready@plt>
    6720:	tbnz	w0, #31, 67a8 <PyInit__json@@Base+0xc0>
    6724:	add	x22, x20, #0x298
    6728:	mov	x0, x22
    672c:	bl	1e90 <PyType_Ready@plt>
    6730:	tbnz	w0, #31, 67a8 <PyInit__json@@Base+0xc0>
    6734:	ldr	x3, [x20, #248]
    6738:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    673c:	mov	x2, x21
    6740:	add	x1, x1, #0xcb8
    6744:	add	x3, x3, #0x1
    6748:	mov	x0, x19
    674c:	str	x3, [x20, #248]
    6750:	bl	2010 <PyModule_AddObject@plt>
    6754:	tbnz	w0, #31, 67f0 <PyInit__json@@Base+0x108>
    6758:	ldr	x3, [x20, #664]
    675c:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    6760:	mov	x2, x22
    6764:	add	x1, x1, #0xcc8
    6768:	add	x3, x3, #0x1
    676c:	mov	x0, x19
    6770:	str	x3, [x20, #664]
    6774:	bl	2010 <PyModule_AddObject@plt>
    6778:	tbnz	w0, #31, 6790 <PyInit__json@@Base+0xa8>
    677c:	mov	x0, x19
    6780:	ldp	x19, x20, [sp, #16]
    6784:	ldp	x21, x22, [sp, #32]
    6788:	ldp	x29, x30, [sp], #48
    678c:	ret
    6790:	ldr	x0, [x20, #664]
    6794:	sub	x0, x0, #0x1
    6798:	str	x0, [x20, #664]
    679c:	cbnz	x0, 67a8 <PyInit__json@@Base+0xc0>
    67a0:	mov	x0, x22
    67a4:	bl	1e30 <_Py_Dealloc@plt>
    67a8:	ldr	x0, [x19]
    67ac:	sub	x0, x0, #0x1
    67b0:	str	x0, [x19]
    67b4:	cbz	x0, 67d0 <PyInit__json@@Base+0xe8>
    67b8:	ldp	x21, x22, [sp, #32]
    67bc:	mov	x19, #0x0                   	// #0
    67c0:	mov	x0, x19
    67c4:	ldp	x19, x20, [sp, #16]
    67c8:	ldp	x29, x30, [sp], #48
    67cc:	ret
    67d0:	mov	x0, x19
    67d4:	mov	x19, #0x0                   	// #0
    67d8:	bl	1e30 <_Py_Dealloc@plt>
    67dc:	mov	x0, x19
    67e0:	ldp	x19, x20, [sp, #16]
    67e4:	ldp	x21, x22, [sp, #32]
    67e8:	ldp	x29, x30, [sp], #48
    67ec:	ret
    67f0:	ldr	x0, [x20, #248]
    67f4:	sub	x0, x0, #0x1
    67f8:	str	x0, [x20, #248]
    67fc:	cbnz	x0, 67a8 <PyInit__json@@Base+0xc0>
    6800:	mov	x0, x21
    6804:	bl	1e30 <_Py_Dealloc@plt>
    6808:	b	67a8 <PyInit__json@@Base+0xc0>

Disassembly of section .fini:

000000000000680c <.fini>:
    680c:	stp	x29, x30, [sp, #-16]!
    6810:	mov	x29, sp
    6814:	ldp	x29, x30, [sp], #16
    6818:	ret
