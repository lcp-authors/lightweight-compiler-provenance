
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix3.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xa00>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	nop
  20:	stp	x29, x30, [sp, #-144]!
  24:	mov	x29, sp
  28:	stp	x27, x28, [sp, #80]
  2c:	mov	x28, x0
  30:	ldr	w0, [x0, #40]
  34:	str	x4, [sp, #104]
  38:	cmp	x0, x3
  3c:	b.cc	310 <grub_mod_init-0x6f0>  // b.lo, b.ul, b.last
  40:	ldr	x4, [sp, #104]
  44:	stp	x23, x24, [sp, #48]
  48:	mov	x23, x2
  4c:	add	x2, x3, x4
  50:	stp	x21, x22, [sp, #32]
  54:	cmp	x0, x2
  58:	mov	x22, x1
  5c:	sub	x1, x0, x3
  60:	csel	x1, x1, x4, cc  // cc = lo, ul, last
  64:	str	x1, [sp, #104]
  68:	mov	x0, #0x0                   	// #0
  6c:	cbz	x1, 2dc <grub_mod_init-0x724>
  70:	add	x0, x1, x3
  74:	stp	x25, x26, [sp, #64]
  78:	sub	x21, x0, #0x1
  7c:	ldr	x1, [x28, #128]
  80:	ubfx	x21, x21, #9, #32
  84:	str	x0, [sp, #112]
  88:	udiv	x21, x21, x1
  8c:	lsl	x26, x1, #9
  90:	udiv	x7, x3, x26
  94:	add	w25, w21, #0x1
  98:	msub	x0, x7, x26, x3
  9c:	stp	w21, w7, [sp, #96]
  a0:	str	x0, [sp, #120]
  a4:	cmp	w25, w7
  a8:	b.ls	2f4 <grub_mod_init-0x70c>  // b.plast
  ac:	adrp	x0, 0 <grub_mod_init-0xa00>
  b0:	stp	x19, x20, [sp, #16]
  b4:	add	x19, x7, #0xe
  b8:	ldr	x27, [x0]
  bc:	mov	x24, x5
  c0:	mov	w20, w7
  c4:	add	x19, x28, x19, lsl #2
  c8:	b	190 <grub_mod_init-0x870>
  cc:	ldr	w8, [x28, #96]
  d0:	sub	w21, w20, #0x7
  d4:	cmp	w8, w21
  d8:	b.hi	280 <grub_mod_init-0x780>  // b.pmore
  dc:	umull	x3, w8, w8
  e0:	sub	w4, w21, w8
  e4:	mov	w0, w8
  e8:	sub	w21, w21, w8
  ec:	cmp	x4, x3
  f0:	b.cc	2a4 <grub_mod_init-0x75c>  // b.lo, b.ul, b.last
  f4:	msub	w21, w8, w8, w21
  f8:	mul	x0, x0, x3
  fc:	cmp	x0, w21, uxtw
 100:	b.hi	1f8 <grub_mod_init-0x808>  // b.pmore
 104:	adrp	x0, 0 <grub_mod_init-0xa00>
 108:	ldr	x1, [x0]
 10c:	mov	w0, #0xb                   	// #11
 110:	bl	0 <grub_error>
 114:	mov	w0, #0x0                   	// #0
 118:	ldr	w1, [x27]
 11c:	cbnz	w1, 1a8 <grub_mod_init-0x858>
 120:	ldr	w1, [sp, #96]
 124:	mov	x3, x26
 128:	ldr	x8, [x28, #128]
 12c:	cmp	w1, w20
 130:	b.eq	1d8 <grub_mod_init-0x828>  // b.none
 134:	ldr	w1, [sp, #100]
 138:	mov	x21, #0x0                   	// #0
 13c:	cmp	w1, w20
 140:	b.eq	1c8 <grub_mod_init-0x838>  // b.none
 144:	mov	w1, w0
 148:	mov	x4, x24
 14c:	ldr	x0, [x28, #112]
 150:	mov	x2, x21
 154:	mul	x1, x1, x8
 158:	stp	x22, x23, [x0, #48]
 15c:	bl	0 <grub_disk_read>
 160:	ldr	x1, [x28, #112]
 164:	ldr	w0, [x27]
 168:	str	xzr, [x1, #48]
 16c:	cbnz	w0, 1a8 <grub_mod_init-0x858>
 170:	ldr	x1, [x28, #128]
 174:	add	w20, w20, #0x1
 178:	cmp	w25, w20
 17c:	add	x19, x19, #0x4
 180:	lsl	x26, x1, #9
 184:	sub	x2, x26, x21
 188:	add	x24, x24, x2
 18c:	b.ls	2f0 <grub_mod_init-0x710>  // b.plast
 190:	cmp	w20, #0x6
 194:	b.hi	cc <grub_mod_init-0x934>  // b.pmore
 198:	ldr	w1, [x27]
 19c:	ldr	w0, [x19]
 1a0:	cbz	w1, 120 <grub_mod_init-0x8e0>
 1a4:	nop
 1a8:	ldp	x19, x20, [sp, #16]
 1ac:	mov	x0, #0xffffffffffffffff    	// #-1
 1b0:	ldp	x21, x22, [sp, #32]
 1b4:	ldp	x23, x24, [sp, #48]
 1b8:	ldp	x25, x26, [sp, #64]
 1bc:	ldp	x27, x28, [sp, #80]
 1c0:	ldp	x29, x30, [sp], #144
 1c4:	ret
 1c8:	ldr	x1, [sp, #120]
 1cc:	sub	x3, x3, x1
 1d0:	mov	x21, x1
 1d4:	b	144 <grub_mod_init-0x8bc>
 1d8:	ldr	x2, [sp, #112]
 1dc:	lsl	x1, x8, #9
 1e0:	and	x2, x2, #0xffffffff
 1e4:	udiv	x3, x2, x1
 1e8:	msub	x3, x3, x1, x2
 1ec:	cmp	x3, #0x0
 1f0:	csel	x3, x3, x1, ne  // ne = any
 1f4:	b	134 <grub_mod_init-0x8cc>
 1f8:	udiv	w2, w21, w8
 1fc:	ldr	w3, [x28, #92]
 200:	ldr	x0, [x28, #112]
 204:	add	x4, sp, #0x8c
 208:	udiv	w2, w2, w8
 20c:	mul	x1, x3, x1
 210:	mov	x3, #0x4                   	// #4
 214:	lsl	x2, x2, #2
 218:	bl	0 <grub_disk_read>
 21c:	ldr	w8, [x28, #96]
 220:	add	x4, sp, #0x8c
 224:	ldr	w1, [sp, #140]
 228:	mov	x3, #0x4                   	// #4
 22c:	ldr	x0, [x28, #128]
 230:	udiv	w12, w21, w8
 234:	mul	x1, x1, x0
 238:	ldr	x0, [x28, #112]
 23c:	udiv	w2, w12, w8
 240:	msub	w2, w2, w8, w12
 244:	lsl	x2, x2, #2
 248:	bl	0 <grub_disk_read>
 24c:	ldr	w8, [x28, #96]
 250:	add	x4, sp, #0x8c
 254:	ldr	w1, [sp, #140]
 258:	mov	x3, #0x4                   	// #4
 25c:	ldr	x0, [x28, #128]
 260:	mul	x1, x1, x0
 264:	udiv	w2, w21, w8
 268:	ldr	x0, [x28, #112]
 26c:	msub	w2, w2, w8, w21
 270:	lsl	x2, x2, #2
 274:	bl	0 <grub_disk_read>
 278:	ldr	w0, [sp, #140]
 27c:	b	118 <grub_mod_init-0x8e8>
 280:	ldr	w8, [x28, #84]
 284:	ubfiz	x2, x21, #2, #32
 288:	ldr	x0, [x28, #112]
 28c:	add	x4, sp, #0x8c
 290:	mov	x3, #0x4                   	// #4
 294:	mul	x1, x8, x1
 298:	bl	0 <grub_disk_read>
 29c:	ldr	w0, [sp, #140]
 2a0:	b	118 <grub_mod_init-0x8e8>
 2a4:	ldr	w12, [x28, #88]
 2a8:	add	x4, sp, #0x8c
 2ac:	udiv	w2, w21, w8
 2b0:	mov	x3, #0x4                   	// #4
 2b4:	ldr	x0, [x28, #112]
 2b8:	mul	x1, x12, x1
 2bc:	lsl	x2, x2, #2
 2c0:	bl	0 <grub_disk_read>
 2c4:	ldr	w8, [x28, #96]
 2c8:	add	x4, sp, #0x8c
 2cc:	ldr	w1, [sp, #140]
 2d0:	mov	x3, #0x4                   	// #4
 2d4:	ldr	x0, [x28, #128]
 2d8:	b	260 <grub_mod_init-0x7a0>
 2dc:	ldp	x21, x22, [sp, #32]
 2e0:	ldp	x23, x24, [sp, #48]
 2e4:	ldp	x27, x28, [sp, #80]
 2e8:	ldp	x29, x30, [sp], #144
 2ec:	ret
 2f0:	ldp	x19, x20, [sp, #16]
 2f4:	ldp	x21, x22, [sp, #32]
 2f8:	ldp	x23, x24, [sp, #48]
 2fc:	ldp	x25, x26, [sp, #64]
 300:	ldp	x27, x28, [sp, #80]
 304:	ldr	x0, [sp, #104]
 308:	ldp	x29, x30, [sp], #144
 30c:	ret
 310:	adrp	x1, 0 <grub_mod_init-0xa00>
 314:	mov	w0, #0xb                   	// #11
 318:	ldr	x1, [x1]
 31c:	bl	0 <grub_error>
 320:	mov	x0, #0xffffffffffffffff    	// #-1
 324:	b	1bc <grub_mod_init-0x844>
	...
 340:	mov	x6, x0
 344:	mov	x5, x1
 348:	ldr	x3, [x0, #24]
 34c:	mov	x4, x2
 350:	ldp	x0, x1, [x0, #80]
 354:	ldr	x2, [x6, #96]
 358:	b	20 <grub_mod_init-0x9e0>
 35c:	nop
 360:	stp	x29, x30, [sp, #-16]!
 364:	sub	w2, w1, #0x1
 368:	add	x4, x0, #0x20
 36c:	mov	x29, sp
 370:	ldrh	w5, [x0, #6]
 374:	lsr	w6, w2, #3
 378:	ldrh	w7, [x0, #8]
 37c:	ubfiz	x2, x2, #6, #3
 380:	add	w5, w5, #0x2
 384:	str	w1, [x0, #100]
 388:	add	w5, w5, w7
 38c:	mov	x3, #0x40                  	// #64
 390:	ldr	x1, [x0, #128]
 394:	sxtw	x5, w5
 398:	ldr	x0, [x0, #112]
 39c:	madd	x1, x5, x1, x6
 3a0:	bl	0 <grub_disk_read>
 3a4:	mov	w0, #0x0                   	// #0
 3a8:	ldp	x29, x30, [sp], #16
 3ac:	ret
 3b0:	stp	x29, x30, [sp, #-32]!
 3b4:	mov	x29, sp
 3b8:	stp	x19, x20, [sp, #16]
 3bc:	mov	x20, x0
 3c0:	mov	x0, #0x88                  	// #136
 3c4:	bl	0 <grub_malloc>
 3c8:	mov	x19, x0
 3cc:	cbz	x0, 47c <grub_mod_init-0x584>
 3d0:	mov	x4, x0
 3d4:	mov	x3, #0x20                  	// #32
 3d8:	mov	x0, x20
 3dc:	mov	x2, #0x0                   	// #0
 3e0:	mov	x1, #0x2                   	// #2
 3e4:	bl	0 <grub_disk_read>
 3e8:	adrp	x0, 0 <grub_mod_init-0xa00>
 3ec:	ldr	x0, [x0]
 3f0:	ldr	w0, [x0]
 3f4:	cbnz	w0, 460 <grub_mod_init-0x5a0>
 3f8:	ldrh	w1, [x19, #24]
 3fc:	mov	w0, #0x4d5a                	// #19802
 400:	cmp	w1, w0
 404:	b.ne	460 <grub_mod_init-0x5a0>  // b.any
 408:	ldrh	w1, [x19, #12]
 40c:	mov	w0, #0x3c                  	// #60
 410:	str	w0, [x19, #120]
 414:	cmp	w1, #0x13
 418:	b.hi	460 <grub_mod_init-0x5a0>  // b.pmore
 41c:	ldrh	w0, [x19, #28]
 420:	mov	w2, #0xffff                	// #65535
 424:	str	wzr, [x19, #104]
 428:	str	x20, [x19, #112]
 42c:	cmp	w0, w2
 430:	b.eq	48c <grub_mod_init-0x574>  // b.none
 434:	and	w2, w0, #0xfffffdff
 438:	cbz	w2, 460 <grub_mod_init-0x5a0>
 43c:	tst	x0, #0x1ff
 440:	b.ne	460 <grub_mod_init-0x5a0>  // b.any
 444:	ubfx	x0, x0, #9, #7
 448:	add	w1, w1, #0x9
 44c:	str	x0, [x19, #128]
 450:	lsl	x0, x0, x1
 454:	lsr	x0, x0, #2
 458:	str	w0, [x19, #96]
 45c:	cbnz	w0, 47c <grub_mod_init-0x584>
 460:	mov	x0, x19
 464:	bl	0 <grub_free>
 468:	adrp	x1, 0 <grub_mod_init-0xa00>
 46c:	mov	w0, #0x9                   	// #9
 470:	mov	x19, #0x0                   	// #0
 474:	ldr	x1, [x1]
 478:	bl	0 <grub_error>
 47c:	mov	x0, x19
 480:	ldp	x19, x20, [sp, #16]
 484:	ldp	x29, x30, [sp], #32
 488:	ret
 48c:	add	w1, w1, #0x9
 490:	mov	x0, #0x2                   	// #2
 494:	str	x0, [x19, #128]
 498:	lsl	x1, x0, x1
 49c:	mov	x0, x19
 4a0:	lsr	x1, x1, #2
 4a4:	str	w1, [x19, #96]
 4a8:	ldp	x19, x20, [sp, #16]
 4ac:	ldp	x29, x30, [sp], #32
 4b0:	ret
 4b4:	nop
	...
 4c8:	stp	x29, x30, [sp, #-176]!
 4cc:	mov	x29, sp
 4d0:	stp	x19, x20, [sp, #16]
 4d4:	mov	x19, x0
 4d8:	stp	x21, x22, [sp, #32]
 4dc:	mov	x22, x1
 4e0:	add	x21, sp, #0x70
 4e4:	stp	x25, x26, [sp, #64]
 4e8:	mov	x25, x1
 4ec:	mov	w26, #0xffffa000            	// #-24576
 4f0:	stp	x23, x24, [sp, #48]
 4f4:	str	x27, [sp, #80]
 4f8:	ldrb	w0, [x22]
 4fc:	cmp	w0, #0x2f
 500:	b.ne	514 <grub_mod_init-0x4ec>  // b.any
 504:	nop
 508:	ldrb	w0, [x22, #1]!
 50c:	cmp	w0, #0x2f
 510:	b.eq	508 <grub_mod_init-0x4f8>  // b.none
 514:	cbz	w0, 708 <grub_mod_init-0x2f8>
 518:	ldrh	w0, [x19, #32]
 51c:	tbz	w0, #14, 6f4 <grub_mod_init-0x30c>
 520:	ldrb	w0, [x22]
 524:	mov	x24, x22
 528:	cmp	w0, #0x2f
 52c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 530:	b.eq	548 <grub_mod_init-0x4b8>  // b.none
 534:	nop
 538:	ldrb	w0, [x24, #1]!
 53c:	cmp	w0, #0x2f
 540:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 544:	b.ne	538 <grub_mod_init-0x4c8>  // b.any
 548:	ldr	w0, [x19, #40]
 54c:	cbz	w0, 600 <grub_mod_init-0x400>
 550:	sub	x27, x24, x22
 554:	mov	w20, #0x0                   	// #0
 558:	b	5b4 <grub_mod_init-0x44c>
 55c:	ldrsw	x4, [x19, #120]
 560:	add	x3, x23, #0x4
 564:	mov	x5, x21
 568:	mov	x0, x19
 56c:	mov	x2, #0x0                   	// #0
 570:	mov	x1, #0x0                   	// #0
 574:	bl	20 <grub_mod_init-0x9e0>
 578:	tbnz	x0, #63, 5d8 <grub_mod_init-0x428>
 57c:	ldr	w3, [x19, #120]
 580:	mov	x2, x27
 584:	mov	x1, x21
 588:	mov	x0, x22
 58c:	add	w4, w3, #0x4
 590:	add	w20, w20, w4
 594:	strb	wzr, [x21, w3, sxtw]
 598:	bl	0 <grub_strncmp>
 59c:	cbnz	w0, 5a8 <grub_mod_init-0x458>
 5a0:	ldrb	w0, [x21, x27]
 5a4:	cbz	w0, 63c <grub_mod_init-0x3c4>
 5a8:	ldr	w0, [x19, #40]
 5ac:	cmp	w0, w20
 5b0:	b.ls	600 <grub_mod_init-0x400>  // b.plast
 5b4:	mov	w23, w20
 5b8:	add	x5, sp, #0x6c
 5bc:	mov	x3, x23
 5c0:	mov	x0, x19
 5c4:	mov	x4, #0x4                   	// #4
 5c8:	mov	x2, #0x0                   	// #0
 5cc:	mov	x1, #0x0                   	// #0
 5d0:	bl	20 <grub_mod_init-0x9e0>
 5d4:	tbz	x0, #63, 55c <grub_mod_init-0x4a4>
 5d8:	adrp	x0, 0 <grub_mod_init-0xa00>
 5dc:	ldr	x0, [x0]
 5e0:	ldr	w0, [x0]
 5e4:	ldp	x19, x20, [sp, #16]
 5e8:	ldp	x21, x22, [sp, #32]
 5ec:	ldp	x23, x24, [sp, #48]
 5f0:	ldp	x25, x26, [sp, #64]
 5f4:	ldr	x27, [sp, #80]
 5f8:	ldp	x29, x30, [sp], #176
 5fc:	ret
 600:	adrp	x1, 0 <grub_mod_init-0xa00>
 604:	mov	x2, x25
 608:	mov	w0, #0x5                   	// #5
 60c:	ldr	x1, [x1]
 610:	bl	0 <grub_error>
 614:	adrp	x0, 0 <grub_mod_init-0xa00>
 618:	ldp	x19, x20, [sp, #16]
 61c:	ldr	x0, [x0]
 620:	ldp	x21, x22, [sp, #32]
 624:	ldr	w0, [x0]
 628:	ldp	x23, x24, [sp, #48]
 62c:	ldp	x25, x26, [sp, #64]
 630:	ldr	x27, [sp, #80]
 634:	ldp	x29, x30, [sp], #176
 638:	ret
 63c:	ldr	w1, [sp, #108]
 640:	mov	x0, x19
 644:	ldr	w20, [x19, #100]
 648:	bl	360 <grub_mod_init-0x6a0>
 64c:	ldrh	w0, [x19, #32]
 650:	and	w0, w0, w26
 654:	and	w0, w0, #0xffff
 658:	cmp	w0, #0xa, lsl #12
 65c:	b.eq	668 <grub_mod_init-0x398>  // b.none
 660:	mov	x22, x24
 664:	b	4f8 <grub_mod_init-0x508>
 668:	ldr	w0, [x19, #104]
 66c:	ldr	w23, [x19, #40]
 670:	add	w0, w0, #0x1
 674:	str	w0, [x19, #104]
 678:	cmp	w0, #0x8
 67c:	b.gt	710 <grub_mod_init-0x2f0>
 680:	mov	w27, w23
 684:	add	x0, x27, #0x1
 688:	bl	0 <grub_malloc>
 68c:	mov	x22, x0
 690:	cbz	x0, 6dc <grub_mod_init-0x324>
 694:	mov	x5, x0
 698:	mov	x4, x27
 69c:	mov	x0, x19
 6a0:	mov	x3, #0x0                   	// #0
 6a4:	mov	x2, #0x0                   	// #0
 6a8:	mov	x1, #0x0                   	// #0
 6ac:	bl	20 <grub_mod_init-0x9e0>
 6b0:	tbnz	x0, #63, 6dc <grub_mod_init-0x324>
 6b4:	strb	wzr, [x22, w23, uxtw]
 6b8:	mov	x0, x19
 6bc:	ldrb	w1, [x22]
 6c0:	cmp	w1, #0x2f
 6c4:	csinc	w1, w20, wzr, ne  // ne = any
 6c8:	bl	360 <grub_mod_init-0x6a0>
 6cc:	cbnz	w0, 6dc <grub_mod_init-0x324>
 6d0:	mov	x1, x22
 6d4:	mov	x0, x19
 6d8:	bl	4c8 <grub_mod_init-0x538>
 6dc:	adrp	x0, 0 <grub_mod_init-0xa00>
 6e0:	ldr	x0, [x0]
 6e4:	ldr	w0, [x0]
 6e8:	cbnz	w0, 5e4 <grub_mod_init-0x41c>
 6ec:	mov	x22, x24
 6f0:	b	4f8 <grub_mod_init-0x508>
 6f4:	adrp	x1, 0 <grub_mod_init-0xa00>
 6f8:	mov	w0, #0x4                   	// #4
 6fc:	ldr	x1, [x1]
 700:	bl	0 <grub_error>
 704:	b	5e4 <grub_mod_init-0x41c>
 708:	mov	w0, #0x0                   	// #0
 70c:	b	5e4 <grub_mod_init-0x41c>
 710:	adrp	x1, 0 <grub_mod_init-0xa00>
 714:	mov	w0, #0x19                  	// #25
 718:	ldr	x1, [x1]
 71c:	bl	0 <grub_error>
 720:	b	6dc <grub_mod_init-0x324>
 724:	nop
	...
 748:	stp	x29, x30, [sp, #-176]!
 74c:	mov	x29, sp
 750:	ldr	x0, [x0]
 754:	stp	x19, x20, [sp, #16]
 758:	mov	x20, x1
 75c:	stp	x21, x22, [sp, #32]
 760:	mov	x22, x2
 764:	stp	x23, x24, [sp, #48]
 768:	mov	x23, x3
 76c:	bl	3b0 <grub_mod_init-0x650>
 770:	cbz	x0, 8c4 <grub_mod_init-0x13c>
 774:	mov	x19, x0
 778:	mov	w1, #0x1                   	// #1
 77c:	stp	x25, x26, [sp, #64]
 780:	bl	360 <grub_mod_init-0x6a0>
 784:	adrp	x0, 0 <grub_mod_init-0xa00>
 788:	ldr	x25, [x0]
 78c:	ldr	w0, [x25]
 790:	cbz	w0, 7b8 <grub_mod_init-0x248>
 794:	mov	x0, x19
 798:	bl	0 <grub_free>
 79c:	ldr	w0, [x25]
 7a0:	ldp	x19, x20, [sp, #16]
 7a4:	ldp	x21, x22, [sp, #32]
 7a8:	ldp	x23, x24, [sp, #48]
 7ac:	ldp	x25, x26, [sp, #64]
 7b0:	ldp	x29, x30, [sp], #176
 7b4:	ret
 7b8:	mov	x1, x20
 7bc:	mov	x0, x19
 7c0:	bl	4c8 <grub_mod_init-0x538>
 7c4:	ldr	w20, [x25]
 7c8:	cbnz	w20, 794 <grub_mod_init-0x26c>
 7cc:	ldrh	w0, [x19, #32]
 7d0:	tbz	w0, #14, 8e4 <grub_mod_init-0x11c>
 7d4:	ldr	w0, [x19, #40]
 7d8:	cbz	w0, 794 <grub_mod_init-0x26c>
 7dc:	add	x21, sp, #0x70
 7e0:	b	7f4 <grub_mod_init-0x20c>
 7e4:	add	w20, w20, w3
 7e8:	ldr	w0, [x19, #40]
 7ec:	cmp	w20, w0
 7f0:	b.cs	794 <grub_mod_init-0x26c>  // b.hs, b.nlast
 7f4:	mov	x2, #0x10                  	// #16
 7f8:	mov	w1, #0x0                   	// #0
 7fc:	ldr	w24, [x19, #100]
 800:	add	x0, sp, #0x60
 804:	mov	w26, w20
 808:	bl	0 <grub_memset>
 80c:	mov	x3, x26
 810:	add	x5, sp, #0x5c
 814:	mov	x0, x19
 818:	mov	x4, #0x4                   	// #4
 81c:	mov	x2, #0x0                   	// #0
 820:	mov	x1, #0x0                   	// #0
 824:	bl	20 <grub_mod_init-0x9e0>
 828:	tbnz	x0, #63, 79c <grub_mod_init-0x264>
 82c:	ldrsw	x4, [x19, #120]
 830:	mov	x1, #0x0                   	// #0
 834:	add	x3, x26, #0x4
 838:	mov	x5, x21
 83c:	mov	x0, x19
 840:	mov	x2, #0x0                   	// #0
 844:	bl	20 <grub_mod_init-0x9e0>
 848:	mov	x1, x0
 84c:	mov	x0, x19
 850:	tbnz	x1, #63, 79c <grub_mod_init-0x264>
 854:	ldr	w2, [x19, #120]
 858:	ldr	w1, [sp, #92]
 85c:	add	w3, w2, #0x4
 860:	strb	wzr, [x21, w2, sxtw]
 864:	cbz	w1, 7e4 <grub_mod_init-0x21c>
 868:	bl	360 <grub_mod_init-0x6a0>
 86c:	ldrh	w4, [x19, #32]
 870:	mov	x2, x23
 874:	ldrb	w3, [sp, #96]
 878:	add	x1, sp, #0x60
 87c:	ldr	w5, [x19, #48]
 880:	mov	x0, x21
 884:	ubfx	x4, x4, #14, #1
 888:	and	w3, w3, #0xfffffffc
 88c:	orr	w4, w4, #0x2
 890:	str	w5, [sp, #100]
 894:	orr	w4, w4, w3
 898:	strb	w4, [sp, #96]
 89c:	blr	x22
 8a0:	mov	w2, w0
 8a4:	mov	w1, w24
 8a8:	mov	x0, x19
 8ac:	cbnz	w2, 794 <grub_mod_init-0x26c>
 8b0:	bl	360 <grub_mod_init-0x6a0>
 8b4:	ldr	w0, [x19, #120]
 8b8:	add	w0, w0, #0x4
 8bc:	add	w20, w20, w0
 8c0:	b	7e8 <grub_mod_init-0x218>
 8c4:	adrp	x0, 0 <grub_mod_init-0xa00>
 8c8:	ldp	x19, x20, [sp, #16]
 8cc:	ldr	x0, [x0]
 8d0:	ldp	x21, x22, [sp, #32]
 8d4:	ldr	w0, [x0]
 8d8:	ldp	x23, x24, [sp, #48]
 8dc:	ldp	x29, x30, [sp], #176
 8e0:	ret
 8e4:	adrp	x1, 0 <grub_mod_init-0xa00>
 8e8:	mov	w0, #0x4                   	// #4
 8ec:	ldr	x1, [x1]
 8f0:	bl	0 <grub_error>
 8f4:	b	794 <grub_mod_init-0x26c>
	...
 908:	stp	x29, x30, [sp, #-48]!
 90c:	mov	x29, sp
 910:	stp	x21, x22, [sp, #32]
 914:	mov	x21, x0
 918:	ldr	x0, [x0, #8]
 91c:	stp	x19, x20, [sp, #16]
 920:	mov	x20, x1
 924:	ldr	x0, [x0]
 928:	bl	3b0 <grub_mod_init-0x650>
 92c:	cbz	x0, 984 <grub_mod_init-0x7c>
 930:	mov	x19, x0
 934:	mov	w1, #0x1                   	// #1
 938:	bl	360 <grub_mod_init-0x6a0>
 93c:	adrp	x0, 0 <grub_mod_init-0xa00>
 940:	ldr	x22, [x0]
 944:	ldr	w0, [x22]
 948:	cbnz	w0, 9a0 <grub_mod_init-0x60>
 94c:	cbz	x20, 95c <grub_mod_init-0xa4>
 950:	ldrb	w0, [x20]
 954:	cmp	w0, #0x2f
 958:	b.eq	9bc <grub_mod_init-0x44>  // b.none
 95c:	adrp	x1, 0 <grub_mod_init-0xa00>
 960:	mov	x2, x20
 964:	mov	w0, #0x7                   	// #7
 968:	ldr	x1, [x1]
 96c:	bl	0 <grub_error>
 970:	ldr	w0, [x22]
 974:	ldp	x19, x20, [sp, #16]
 978:	ldp	x21, x22, [sp, #32]
 97c:	ldp	x29, x30, [sp], #48
 980:	ret
 984:	adrp	x0, 0 <grub_mod_init-0xa00>
 988:	ldp	x19, x20, [sp, #16]
 98c:	ldr	x0, [x0]
 990:	ldp	x21, x22, [sp, #32]
 994:	ldr	w0, [x0]
 998:	ldp	x29, x30, [sp], #48
 99c:	ret
 9a0:	mov	x0, x19
 9a4:	bl	0 <grub_free>
 9a8:	ldr	w0, [x22]
 9ac:	ldp	x19, x20, [sp, #16]
 9b0:	ldp	x21, x22, [sp, #32]
 9b4:	ldp	x29, x30, [sp], #48
 9b8:	ret
 9bc:	mov	x1, x20
 9c0:	mov	x0, x19
 9c4:	bl	4c8 <grub_mod_init-0x538>
 9c8:	ldr	w0, [x22]
 9cc:	cbnz	w0, 9a0 <grub_mod_init-0x60>
 9d0:	ldr	w1, [x19, #40]
 9d4:	str	x1, [x21, #64]
 9d8:	str	x19, [x21, #80]
 9dc:	ldp	x19, x20, [sp, #16]
 9e0:	ldp	x21, x22, [sp, #32]
 9e4:	ldp	x29, x30, [sp], #48
 9e8:	ret
 9ec:	nop
	...

0000000000000a00 <grub_mod_init>:
 a00:	adrp	x1, 0 <grub_mod_init-0xa00>
 a04:	adrp	x0, 0 <grub_mod_init-0xa00>
 a08:	ldr	x1, [x1]
 a0c:	ldr	x0, [x0]
 a10:	b	0 <grub_list_push>
 a14:	nop
	...

0000000000000a28 <grub_mod_fini>:
 a28:	adrp	x0, 0 <grub_mod_init-0xa00>
 a2c:	ldr	x0, [x0]
 a30:	b	0 <grub_list_remove>
 a34:	nop
	...
