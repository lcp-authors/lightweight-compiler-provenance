
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//offsetio.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_file_offset_close-0x98>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #80]
  14:	ldr	x0, [x0]
  18:	cbz	x0, 20 <grub_file_offset_close-0x78>
  1c:	bl	0 <grub_file_close>
  20:	str	xzr, [x19, #8]
  24:	mov	w0, #0x0                   	// #0
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	nop
  38:	stp	x29, x30, [sp, #-48]!
  3c:	mov	x29, sp
  40:	stp	x19, x20, [sp, #16]
  44:	mov	x19, x1
  48:	mov	x20, x2
  4c:	ldr	x1, [x0, #24]
  50:	str	x21, [sp, #32]
  54:	ldr	x21, [x0, #80]
  58:	ldp	x0, x2, [x21]
  5c:	add	x1, x2, x1
  60:	bl	0 <grub_file_seek>
  64:	cmn	x0, #0x1
  68:	b.eq	88 <grub_file_offset_close-0x10>  // b.none
  6c:	mov	x2, x20
  70:	mov	x1, x19
  74:	ldr	x0, [x21]
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldr	x21, [sp, #32]
  80:	ldp	x29, x30, [sp], #48
  84:	b	0 <grub_file_read>
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

0000000000000098 <grub_file_offset_close>:
  98:	ldr	x1, [x0, #80]
  9c:	str	xzr, [x1]
  a0:	b	0 <grub_file_close>
  a4:	nop

00000000000000a8 <grub_file_offset_open>:
  a8:	stp	x29, x30, [sp, #-80]!
  ac:	mov	x29, sp
  b0:	stp	x19, x20, [sp, #16]
  b4:	stp	x21, x22, [sp, #32]
  b8:	mov	x21, x0
  bc:	mov	x0, #0x68                  	// #104
  c0:	stp	x23, x24, [sp, #48]
  c4:	mov	w23, w1
  c8:	stp	x25, x26, [sp, #64]
  cc:	mov	x25, x2
  d0:	mov	x26, x3
  d4:	bl	0 <grub_zalloc>
  d8:	mov	x19, x0
  dc:	mov	x0, #0x10                  	// #16
  e0:	bl	0 <grub_zalloc>
  e4:	cmp	x19, #0x0
  e8:	mov	x22, x0
  ec:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  f0:	b.eq	1b0 <grub_file_offset_open+0x108>  // b.none
  f4:	adrp	x1, 0 <grub_file_offset_close-0x98>
  f8:	adrp	x0, 0 <grub_file_offset_close-0x98>
  fc:	mov	x20, #0x2                   	// #2
 100:	ldr	x24, [x1]
 104:	ldr	x0, [x0]
 108:	ldr	x1, [x21, #8]
 10c:	stp	x21, x25, [x22]
 110:	stp	x1, x0, [x19, #8]
 114:	str	x26, [x19, #64]
 118:	str	x22, [x19, #80]
 11c:	ldr	x2, [x24, x20, lsl #3]
 120:	mov	w1, w23
 124:	mov	x0, x19
 128:	cbz	x2, 164 <grub_file_offset_open+0xbc>
 12c:	blr	x2
 130:	cmp	x0, #0x0
 134:	cset	w1, ne  // ne = any
 138:	cmp	w20, #0x3
 13c:	mov	x21, x0
 140:	cset	w0, ls  // ls = plast
 144:	add	x20, x20, #0x1
 148:	tst	w1, w0
 14c:	b.eq	190 <grub_file_offset_open+0xe8>  // b.none
 150:	ldr	x2, [x24, x20, lsl #3]
 154:	mov	x19, x21
 158:	mov	w1, w23
 15c:	mov	x0, x19
 160:	cbnz	x2, 12c <grub_file_offset_open+0x84>
 164:	cmp	w20, #0x3
 168:	add	x20, x20, #0x1
 16c:	b.ls	11c <grub_file_offset_open+0x74>  // b.plast
 170:	mov	x21, x19
 174:	mov	x0, x21
 178:	ldp	x19, x20, [sp, #16]
 17c:	ldp	x21, x22, [sp, #32]
 180:	ldp	x23, x24, [sp, #48]
 184:	ldp	x25, x26, [sp, #64]
 188:	ldp	x29, x30, [sp], #80
 18c:	ret
 190:	cbz	x21, 1c8 <grub_file_offset_open+0x120>
 194:	mov	x0, x21
 198:	ldp	x19, x20, [sp, #16]
 19c:	ldp	x21, x22, [sp, #32]
 1a0:	ldp	x23, x24, [sp, #48]
 1a4:	ldp	x25, x26, [sp, #64]
 1a8:	ldp	x29, x30, [sp], #80
 1ac:	ret
 1b0:	mov	x0, x19
 1b4:	bl	0 <grub_free>
 1b8:	mov	x0, x22
 1bc:	mov	x21, #0x0                   	// #0
 1c0:	bl	0 <grub_free>
 1c4:	b	194 <grub_file_offset_open+0xec>
 1c8:	str	xzr, [x22]
 1cc:	mov	x0, x19
 1d0:	bl	0 <grub_file_close>
 1d4:	b	194 <grub_file_offset_open+0xec>
	...
