
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//select.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001e98 <.init>:
    1e98:	stp	x29, x30, [sp, #-16]!
    1e9c:	mov	x29, sp
    1ea0:	bl	2240 <PySequence_Fast@plt+0x10>
    1ea4:	ldp	x29, x30, [sp], #16
    1ea8:	ret

Disassembly of section .plt:

0000000000001eb0 <PyList_New@plt-0x20>:
    1eb0:	stp	x16, x30, [sp, #-16]!
    1eb4:	adrp	x16, 16000 <PyInit_select@@Base+0x11ef8>
    1eb8:	ldr	x17, [x16, #4088]
    1ebc:	add	x16, x16, #0xff8
    1ec0:	br	x17
    1ec4:	nop
    1ec8:	nop
    1ecc:	nop

0000000000001ed0 <PyList_New@plt>:
    1ed0:	adrp	x16, 17000 <PyList_New>
    1ed4:	ldr	x17, [x16]
    1ed8:	add	x16, x16, #0x0
    1edc:	br	x17

0000000000001ee0 <PyModule_AddIntConstant@plt>:
    1ee0:	adrp	x16, 17000 <PyList_New>
    1ee4:	ldr	x17, [x16, #8]
    1ee8:	add	x16, x16, #0x8
    1eec:	br	x17

0000000000001ef0 <_PyTime_FromMillisecondsObject@plt>:
    1ef0:	adrp	x16, 17000 <PyList_New>
    1ef4:	ldr	x17, [x16, #16]
    1ef8:	add	x16, x16, #0x10
    1efc:	br	x17

0000000000001f00 <PyEval_RestoreThread@plt>:
    1f00:	adrp	x16, 17000 <PyList_New>
    1f04:	ldr	x17, [x16, #24]
    1f08:	add	x16, x16, #0x18
    1f0c:	br	x17

0000000000001f10 <PyMem_Free@plt>:
    1f10:	adrp	x16, 17000 <PyList_New>
    1f14:	ldr	x17, [x16, #32]
    1f18:	add	x16, x16, #0x20
    1f1c:	br	x17

0000000000001f20 <PyErr_SetFromErrno@plt>:
    1f20:	adrp	x16, 17000 <PyList_New>
    1f24:	ldr	x17, [x16, #40]
    1f28:	add	x16, x16, #0x28
    1f2c:	br	x17

0000000000001f30 <__cxa_finalize@plt>:
    1f30:	adrp	x16, 17000 <PyList_New>
    1f34:	ldr	x17, [x16, #48]
    1f38:	add	x16, x16, #0x30
    1f3c:	br	x17

0000000000001f40 <_Py_Dealloc@plt>:
    1f40:	adrp	x16, 17000 <PyList_New>
    1f44:	ldr	x17, [x16, #56]
    1f48:	add	x16, x16, #0x38
    1f4c:	br	x17

0000000000001f50 <PyErr_NoMemory@plt>:
    1f50:	adrp	x16, 17000 <PyList_New>
    1f54:	ldr	x17, [x16, #64]
    1f58:	add	x16, x16, #0x40
    1f5c:	br	x17

0000000000001f60 <_PyArg_UnpackKeywords@plt>:
    1f60:	adrp	x16, 17000 <PyList_New>
    1f64:	ldr	x17, [x16, #72]
    1f68:	add	x16, x16, #0x48
    1f6c:	br	x17

0000000000001f70 <PyErr_SetString@plt>:
    1f70:	adrp	x16, 17000 <PyList_New>
    1f74:	ldr	x17, [x16, #80]
    1f78:	add	x16, x16, #0x50
    1f7c:	br	x17

0000000000001f80 <poll@plt>:
    1f80:	adrp	x16, 17000 <PyList_New>
    1f84:	ldr	x17, [x16, #88]
    1f88:	add	x16, x16, #0x58
    1f8c:	br	x17

0000000000001f90 <PyMem_Realloc@plt>:
    1f90:	adrp	x16, 17000 <PyList_New>
    1f94:	ldr	x17, [x16, #96]
    1f98:	add	x16, x16, #0x60
    1f9c:	br	x17

0000000000001fa0 <PyErr_ExceptionMatches@plt>:
    1fa0:	adrp	x16, 17000 <PyList_New>
    1fa4:	ldr	x17, [x16, #104]
    1fa8:	add	x16, x16, #0x68
    1fac:	br	x17

0000000000001fb0 <_PyTime_FromSecondsObject@plt>:
    1fb0:	adrp	x16, 17000 <PyList_New>
    1fb4:	ldr	x17, [x16, #112]
    1fb8:	add	x16, x16, #0x70
    1fbc:	br	x17

0000000000001fc0 <PyObject_Free@plt>:
    1fc0:	adrp	x16, 17000 <PyList_New>
    1fc4:	ldr	x17, [x16, #120]
    1fc8:	add	x16, x16, #0x78
    1fcc:	br	x17

0000000000001fd0 <_PyTime_AsMilliseconds@plt>:
    1fd0:	adrp	x16, 17000 <PyList_New>
    1fd4:	ldr	x17, [x16, #128]
    1fd8:	add	x16, x16, #0x80
    1fdc:	br	x17

0000000000001fe0 <PyType_Ready@plt>:
    1fe0:	adrp	x16, 17000 <PyList_New>
    1fe4:	ldr	x17, [x16, #136]
    1fe8:	add	x16, x16, #0x88
    1fec:	br	x17

0000000000001ff0 <PyLong_FromLong@plt>:
    1ff0:	adrp	x16, 17000 <PyList_New>
    1ff4:	ldr	x17, [x16, #144]
    1ff8:	add	x16, x16, #0x90
    1ffc:	br	x17

0000000000002000 <epoll_wait@plt>:
    2000:	adrp	x16, 17000 <PyList_New>
    2004:	ldr	x17, [x16, #152]
    2008:	add	x16, x16, #0x98
    200c:	br	x17

0000000000002010 <close@plt>:
    2010:	adrp	x16, 17000 <PyList_New>
    2014:	ldr	x17, [x16, #160]
    2018:	add	x16, x16, #0xa0
    201c:	br	x17

0000000000002020 <PyLong_AsUnsignedLongMask@plt>:
    2020:	adrp	x16, 17000 <PyList_New>
    2024:	ldr	x17, [x16, #168]
    2028:	add	x16, x16, #0xa8
    202c:	br	x17

0000000000002030 <__gmon_start__@plt>:
    2030:	adrp	x16, 17000 <PyList_New>
    2034:	ldr	x17, [x16, #176]
    2038:	add	x16, x16, #0xb0
    203c:	br	x17

0000000000002040 <PyTuple_New@plt>:
    2040:	adrp	x16, 17000 <PyList_New>
    2044:	ldr	x17, [x16, #184]
    2048:	add	x16, x16, #0xb8
    204c:	br	x17

0000000000002050 <_PyArg_CheckPositional@plt>:
    2050:	adrp	x16, 17000 <PyList_New>
    2054:	ldr	x17, [x16, #192]
    2058:	add	x16, x16, #0xc0
    205c:	br	x17

0000000000002060 <PyDict_DelItem@plt>:
    2060:	adrp	x16, 17000 <PyList_New>
    2064:	ldr	x17, [x16, #200]
    2068:	add	x16, x16, #0xc8
    206c:	br	x17

0000000000002070 <Py_BuildValue@plt>:
    2070:	adrp	x16, 17000 <PyList_New>
    2074:	ldr	x17, [x16, #208]
    2078:	add	x16, x16, #0xd0
    207c:	br	x17

0000000000002080 <PyErr_Occurred@plt>:
    2080:	adrp	x16, 17000 <PyList_New>
    2084:	ldr	x17, [x16, #216]
    2088:	add	x16, x16, #0xd8
    208c:	br	x17

0000000000002090 <PyModule_Create2@plt>:
    2090:	adrp	x16, 17000 <PyList_New>
    2094:	ldr	x17, [x16, #224]
    2098:	add	x16, x16, #0xe0
    209c:	br	x17

00000000000020a0 <PyLong_AsLong@plt>:
    20a0:	adrp	x16, 17000 <PyList_New>
    20a4:	ldr	x17, [x16, #232]
    20a8:	add	x16, x16, #0xe8
    20ac:	br	x17

00000000000020b0 <_PyTime_AsTimeval_noraise@plt>:
    20b0:	adrp	x16, 17000 <PyList_New>
    20b4:	ldr	x17, [x16, #240]
    20b8:	add	x16, x16, #0xf0
    20bc:	br	x17

00000000000020c0 <PyList_SetItem@plt>:
    20c0:	adrp	x16, 17000 <PyList_New>
    20c4:	ldr	x17, [x16, #248]
    20c8:	add	x16, x16, #0xf8
    20cc:	br	x17

00000000000020d0 <epoll_create1@plt>:
    20d0:	adrp	x16, 17000 <PyList_New>
    20d4:	ldr	x17, [x16, #256]
    20d8:	add	x16, x16, #0x100
    20dc:	br	x17

00000000000020e0 <_PyObject_CallMethodId@plt>:
    20e0:	adrp	x16, 17000 <PyList_New>
    20e4:	ldr	x17, [x16, #264]
    20e8:	add	x16, x16, #0x108
    20ec:	br	x17

00000000000020f0 <_PyLong_UnsignedShort_Converter@plt>:
    20f0:	adrp	x16, 17000 <PyList_New>
    20f4:	ldr	x17, [x16, #272]
    20f8:	add	x16, x16, #0x110
    20fc:	br	x17

0000000000002100 <PyDict_New@plt>:
    2100:	adrp	x16, 17000 <PyList_New>
    2104:	ldr	x17, [x16, #280]
    2108:	add	x16, x16, #0x118
    210c:	br	x17

0000000000002110 <PyDict_Next@plt>:
    2110:	adrp	x16, 17000 <PyList_New>
    2114:	ldr	x17, [x16, #288]
    2118:	add	x16, x16, #0x120
    211c:	br	x17

0000000000002120 <epoll_ctl@plt>:
    2120:	adrp	x16, 17000 <PyList_New>
    2124:	ldr	x17, [x16, #296]
    2128:	add	x16, x16, #0x128
    212c:	br	x17

0000000000002130 <_PyObject_New@plt>:
    2130:	adrp	x16, 17000 <PyList_New>
    2134:	ldr	x17, [x16, #304]
    2138:	add	x16, x16, #0x130
    213c:	br	x17

0000000000002140 <PyEval_SaveThread@plt>:
    2140:	adrp	x16, 17000 <PyList_New>
    2144:	ldr	x17, [x16, #312]
    2148:	add	x16, x16, #0x138
    214c:	br	x17

0000000000002150 <PyModule_AddObject@plt>:
    2150:	adrp	x16, 17000 <PyList_New>
    2154:	ldr	x17, [x16, #320]
    2158:	add	x16, x16, #0x140
    215c:	br	x17

0000000000002160 <PyDict_SetItem@plt>:
    2160:	adrp	x16, 17000 <PyList_New>
    2164:	ldr	x17, [x16, #328]
    2168:	add	x16, x16, #0x148
    216c:	br	x17

0000000000002170 <select@plt>:
    2170:	adrp	x16, 17000 <PyList_New>
    2174:	ldr	x17, [x16, #336]
    2178:	add	x16, x16, #0x150
    217c:	br	x17

0000000000002180 <PyObject_AsFileDescriptor@plt>:
    2180:	adrp	x16, 17000 <PyList_New>
    2184:	ldr	x17, [x16, #344]
    2188:	add	x16, x16, #0x158
    218c:	br	x17

0000000000002190 <_PyTime_AsTimeval@plt>:
    2190:	adrp	x16, 17000 <PyList_New>
    2194:	ldr	x17, [x16, #352]
    2198:	add	x16, x16, #0x160
    219c:	br	x17

00000000000021a0 <PyErr_CheckSignals@plt>:
    21a0:	adrp	x16, 17000 <PyList_New>
    21a4:	ldr	x17, [x16, #360]
    21a8:	add	x16, x16, #0x168
    21ac:	br	x17

00000000000021b0 <PyType_IsSubtype@plt>:
    21b0:	adrp	x16, 17000 <PyList_New>
    21b4:	ldr	x17, [x16, #368]
    21b8:	add	x16, x16, #0x170
    21bc:	br	x17

00000000000021c0 <PyErr_Format@plt>:
    21c0:	adrp	x16, 17000 <PyList_New>
    21c4:	ldr	x17, [x16, #376]
    21c8:	add	x16, x16, #0x178
    21cc:	br	x17

00000000000021d0 <__errno_location@plt>:
    21d0:	adrp	x16, 17000 <PyList_New>
    21d4:	ldr	x17, [x16, #384]
    21d8:	add	x16, x16, #0x180
    21dc:	br	x17

00000000000021e0 <_PyLong_AsInt@plt>:
    21e0:	adrp	x16, 17000 <PyList_New>
    21e4:	ldr	x17, [x16, #392]
    21e8:	add	x16, x16, #0x188
    21ec:	br	x17

00000000000021f0 <PyMem_Malloc@plt>:
    21f0:	adrp	x16, 17000 <PyList_New>
    21f4:	ldr	x17, [x16, #400]
    21f8:	add	x16, x16, #0x190
    21fc:	br	x17

0000000000002200 <_PyTime_GetMonotonicClock@plt>:
    2200:	adrp	x16, 17000 <PyList_New>
    2204:	ldr	x17, [x16, #408]
    2208:	add	x16, x16, #0x198
    220c:	br	x17

0000000000002210 <PyTuple_Pack@plt>:
    2210:	adrp	x16, 17000 <PyList_New>
    2214:	ldr	x17, [x16, #416]
    2218:	add	x16, x16, #0x1a0
    221c:	br	x17

0000000000002220 <PyDict_GetItemWithError@plt>:
    2220:	adrp	x16, 17000 <PyList_New>
    2224:	ldr	x17, [x16, #424]
    2228:	add	x16, x16, #0x1a8
    222c:	br	x17

0000000000002230 <PySequence_Fast@plt>:
    2230:	adrp	x16, 17000 <PyList_New>
    2234:	ldr	x17, [x16, #432]
    2238:	add	x16, x16, #0x1b0
    223c:	br	x17

Disassembly of section .text:

0000000000002240 <PyInit_select@@Base-0x1ec8>:
    2240:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2244:	ldr	x0, [x0, #4024]
    2248:	cbz	x0, 2250 <PySequence_Fast@plt+0x20>
    224c:	b	2030 <__gmon_start__@plt>
    2250:	ret
    2254:	nop
    2258:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    225c:	add	x0, x0, #0x950
    2260:	adrp	x1, 17000 <PyInit_select@@Base+0x12ef8>
    2264:	add	x1, x1, #0x950
    2268:	cmp	x1, x0
    226c:	b.eq	2284 <PySequence_Fast@plt+0x54>  // b.none
    2270:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    2274:	ldr	x1, [x1, #3960]
    2278:	cbz	x1, 2284 <PySequence_Fast@plt+0x54>
    227c:	mov	x16, x1
    2280:	br	x16
    2284:	ret
    2288:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    228c:	add	x0, x0, #0x950
    2290:	adrp	x1, 17000 <PyInit_select@@Base+0x12ef8>
    2294:	add	x1, x1, #0x950
    2298:	sub	x1, x1, x0
    229c:	lsr	x2, x1, #63
    22a0:	add	x1, x2, x1, asr #3
    22a4:	cmp	xzr, x1, asr #1
    22a8:	asr	x1, x1, #1
    22ac:	b.eq	22c4 <PySequence_Fast@plt+0x94>  // b.none
    22b0:	adrp	x2, 16000 <PyInit_select@@Base+0x11ef8>
    22b4:	ldr	x2, [x2, #4064]
    22b8:	cbz	x2, 22c4 <PySequence_Fast@plt+0x94>
    22bc:	mov	x16, x2
    22c0:	br	x16
    22c4:	ret
    22c8:	stp	x29, x30, [sp, #-32]!
    22cc:	mov	x29, sp
    22d0:	str	x19, [sp, #16]
    22d4:	adrp	x19, 17000 <PyInit_select@@Base+0x12ef8>
    22d8:	ldrb	w0, [x19, #2384]
    22dc:	cbnz	w0, 2304 <PySequence_Fast@plt+0xd4>
    22e0:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    22e4:	ldr	x0, [x0, #3976]
    22e8:	cbz	x0, 22f8 <PySequence_Fast@plt+0xc8>
    22ec:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    22f0:	ldr	x0, [x0, #440]
    22f4:	bl	1f30 <__cxa_finalize@plt>
    22f8:	bl	2258 <PySequence_Fast@plt+0x28>
    22fc:	mov	w0, #0x1                   	// #1
    2300:	strb	w0, [x19, #2384]
    2304:	ldr	x19, [sp, #16]
    2308:	ldp	x29, x30, [sp], #32
    230c:	ret
    2310:	b	2288 <PySequence_Fast@plt+0x58>
    2314:	nop
    2318:	stp	x29, x30, [sp, #-48]!
    231c:	mov	x1, #0x4010                	// #16400
    2320:	mov	x29, sp
    2324:	stp	x19, x20, [sp, #16]
    2328:	mov	x19, x0
    232c:	add	x20, x0, x1
    2330:	str	x21, [sp, #32]
    2334:	mov	x21, x0
    2338:	b	2348 <PySequence_Fast@plt+0x118>
    233c:	add	x19, x19, #0x10
    2340:	cmp	x19, x20
    2344:	b.eq	237c <PySequence_Fast@plt+0x14c>  // b.none
    2348:	ldr	w1, [x19, #12]
    234c:	tbnz	w1, #31, 237c <PySequence_Fast@plt+0x14c>
    2350:	ldr	x0, [x19]
    2354:	cbz	x0, 233c <PySequence_Fast@plt+0x10c>
    2358:	ldr	x1, [x0]
    235c:	str	xzr, [x19]
    2360:	sub	x1, x1, #0x1
    2364:	str	x1, [x0]
    2368:	cbnz	x1, 233c <PySequence_Fast@plt+0x10c>
    236c:	add	x19, x19, #0x10
    2370:	bl	1f40 <_Py_Dealloc@plt>
    2374:	cmp	x19, x20
    2378:	b.ne	2348 <PySequence_Fast@plt+0x118>  // b.any
    237c:	mov	w0, #0xffffffff            	// #-1
    2380:	ldp	x19, x20, [sp, #16]
    2384:	str	w0, [x21, #12]
    2388:	ldr	x21, [sp, #32]
    238c:	ldp	x29, x30, [sp], #48
    2390:	ret
    2394:	nop
    2398:	stp	x29, x30, [sp, #-32]!
    239c:	cmp	x2, #0x3
    23a0:	mov	x29, sp
    23a4:	str	x19, [sp, #16]
    23a8:	mov	x19, x0
    23ac:	b.ls	23cc <PySequence_Fast@plt+0x19c>  // b.plast
    23b0:	mov	x1, x2
    23b4:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    23b8:	mov	x3, #0x3                   	// #3
    23bc:	add	x0, x0, #0x410
    23c0:	mov	x2, #0x0                   	// #0
    23c4:	bl	2050 <_PyArg_CheckPositional@plt>
    23c8:	cbz	w0, 23e8 <PySequence_Fast@plt+0x1b8>
    23cc:	mov	x0, x19
    23d0:	adrp	x1, 17000 <PyInit_select@@Base+0x12ef8>
    23d4:	ldr	x19, [sp, #16]
    23d8:	add	x1, x1, #0x360
    23dc:	ldp	x29, x30, [sp], #32
    23e0:	mov	x2, #0x0                   	// #0
    23e4:	b	20e0 <_PyObject_CallMethodId@plt>
    23e8:	mov	x0, #0x0                   	// #0
    23ec:	ldr	x19, [sp, #16]
    23f0:	ldp	x29, x30, [sp], #32
    23f4:	ret
    23f8:	stp	x29, x30, [sp, #-64]!
    23fc:	mov	x29, sp
    2400:	tbnz	w0, #31, 24ec <PySequence_Fast@plt+0x2bc>
    2404:	stp	x19, x20, [sp, #16]
    2408:	cmp	w1, #0x2
    240c:	mov	w19, w0
    2410:	str	x21, [sp, #32]
    2414:	mov	w20, w1
    2418:	mov	w21, w2
    241c:	b.ne	2484 <PySequence_Fast@plt+0x254>  // b.any
    2420:	bl	2140 <PyEval_SaveThread@plt>
    2424:	mov	w1, w20
    2428:	mov	w2, w21
    242c:	add	x3, sp, #0x30
    2430:	mov	x20, x0
    2434:	mov	w0, w19
    2438:	bl	2120 <epoll_ctl@plt>
    243c:	mov	w19, w0
    2440:	bl	21d0 <__errno_location@plt>
    2444:	ldr	w1, [x0]
    2448:	cmp	w1, #0x9
    244c:	b.eq	24dc <PySequence_Fast@plt+0x2ac>  // b.none
    2450:	mov	x0, x20
    2454:	bl	1f00 <PyEval_RestoreThread@plt>
    2458:	tbnz	w19, #31, 24b8 <PySequence_Fast@plt+0x288>
    245c:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    2460:	ldp	x19, x20, [sp, #16]
    2464:	ldr	x1, [x1, #4048]
    2468:	ldr	x21, [sp, #32]
    246c:	mov	x0, x1
    2470:	ldr	x2, [x1]
    2474:	add	x2, x2, #0x1
    2478:	str	x2, [x1]
    247c:	ldp	x29, x30, [sp], #64
    2480:	ret
    2484:	str	w3, [sp, #48]
    2488:	str	w2, [sp, #56]
    248c:	bl	2140 <PyEval_SaveThread@plt>
    2490:	mov	w1, w20
    2494:	mov	w2, w21
    2498:	add	x3, sp, #0x30
    249c:	mov	x20, x0
    24a0:	mov	w0, w19
    24a4:	bl	2120 <epoll_ctl@plt>
    24a8:	mov	w19, w0
    24ac:	mov	x0, x20
    24b0:	bl	1f00 <PyEval_RestoreThread@plt>
    24b4:	b	2458 <PySequence_Fast@plt+0x228>
    24b8:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    24bc:	ldr	x0, [x0, #4008]
    24c0:	ldr	x0, [x0]
    24c4:	bl	1f20 <PyErr_SetFromErrno@plt>
    24c8:	mov	x0, #0x0                   	// #0
    24cc:	ldp	x19, x20, [sp, #16]
    24d0:	ldr	x21, [sp, #32]
    24d4:	ldp	x29, x30, [sp], #64
    24d8:	ret
    24dc:	str	wzr, [x0]
    24e0:	mov	x0, x20
    24e4:	bl	1f00 <PyEval_RestoreThread@plt>
    24e8:	b	245c <PySequence_Fast@plt+0x22c>
    24ec:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    24f0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    24f4:	add	x1, x1, #0x420
    24f8:	ldr	x0, [x0, #3992]
    24fc:	ldr	x0, [x0]
    2500:	bl	1f70 <PyErr_SetString@plt>
    2504:	mov	x0, #0x0                   	// #0
    2508:	b	247c <PySequence_Fast@plt+0x24c>
    250c:	nop
    2510:	sub	sp, sp, #0x40
    2514:	cmp	x3, #0x0
    2518:	ccmp	x2, #0x1, #0x0, eq  // eq = none
    251c:	stp	x29, x30, [sp, #16]
    2520:	add	x29, sp, #0x10
    2524:	str	x19, [sp, #32]
    2528:	mov	x19, x0
    252c:	mov	x0, x1
    2530:	b.ne	256c <PySequence_Fast@plt+0x33c>  // b.any
    2534:	cbz	x1, 256c <PySequence_Fast@plt+0x33c>
    2538:	ldr	x0, [x0]
    253c:	bl	2180 <PyObject_AsFileDescriptor@plt>
    2540:	mov	w2, w0
    2544:	cmn	w0, #0x1
    2548:	b.eq	259c <PySequence_Fast@plt+0x36c>  // b.none
    254c:	ldr	w0, [x19, #16]
    2550:	mov	w3, #0x0                   	// #0
    2554:	mov	w1, #0x2                   	// #2
    2558:	bl	23f8 <PySequence_Fast@plt+0x1c8>
    255c:	ldp	x29, x30, [sp, #16]
    2560:	ldr	x19, [sp, #32]
    2564:	add	sp, sp, #0x40
    2568:	ret
    256c:	add	x1, sp, #0x38
    2570:	str	x1, [sp]
    2574:	adrp	x4, 17000 <PyInit_select@@Base+0x12ef8>
    2578:	add	x4, x4, #0x360
    257c:	mov	x1, x2
    2580:	mov	w6, #0x1                   	// #1
    2584:	add	x4, x4, #0x18
    2588:	mov	w5, w6
    258c:	mov	w7, #0x0                   	// #0
    2590:	mov	x2, #0x0                   	// #0
    2594:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    2598:	cbnz	x0, 2538 <PySequence_Fast@plt+0x308>
    259c:	mov	x0, #0x0                   	// #0
    25a0:	ldp	x29, x30, [sp, #16]
    25a4:	ldr	x19, [sp, #32]
    25a8:	add	sp, sp, #0x40
    25ac:	ret
    25b0:	sub	sp, sp, #0x60
    25b4:	stp	x29, x30, [sp, #16]
    25b8:	add	x29, sp, #0x10
    25bc:	stp	x19, x20, [sp, #32]
    25c0:	mov	x19, x1
    25c4:	mov	x1, x2
    25c8:	stp	x21, x22, [sp, #48]
    25cc:	mov	x21, x0
    25d0:	cbz	x3, 2684 <PySequence_Fast@plt+0x454>
    25d4:	ldr	x22, [x3, #16]
    25d8:	add	x22, x2, x22
    25dc:	add	x0, sp, #0x50
    25e0:	str	x0, [sp]
    25e4:	adrp	x4, 17000 <PyInit_select@@Base+0x12ef8>
    25e8:	add	x4, x4, #0x360
    25ec:	mov	x0, x19
    25f0:	add	x4, x4, #0x58
    25f4:	mov	w7, #0x0                   	// #0
    25f8:	mov	w6, #0x2                   	// #2
    25fc:	mov	w5, #0x1                   	// #1
    2600:	mov	x2, #0x0                   	// #0
    2604:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    2608:	mov	x19, x0
    260c:	cbz	x0, 26b4 <PySequence_Fast@plt+0x484>
    2610:	ldr	x0, [x19]
    2614:	bl	2180 <PyObject_AsFileDescriptor@plt>
    2618:	mov	w20, w0
    261c:	cmn	w0, #0x1
    2620:	b.eq	26b4 <PySequence_Fast@plt+0x484>  // b.none
    2624:	cmp	x22, #0x1
    2628:	b.eq	26cc <PySequence_Fast@plt+0x49c>  // b.none
    262c:	ldr	x0, [x19, #8]
    2630:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    2634:	ldr	x1, [x1, #3968]
    2638:	ldr	x0, [x0, #8]
    263c:	cmp	x0, x1
    2640:	b.eq	269c <PySequence_Fast@plt+0x46c>  // b.none
    2644:	bl	21b0 <PyType_IsSubtype@plt>
    2648:	cbnz	w0, 269c <PySequence_Fast@plt+0x46c>
    264c:	ldr	x0, [x19, #8]
    2650:	bl	2020 <PyLong_AsUnsignedLongMask@plt>
    2654:	cmn	w0, #0x1
    2658:	mov	w3, w0
    265c:	b.eq	26d4 <PySequence_Fast@plt+0x4a4>  // b.none
    2660:	ldr	w0, [x21, #16]
    2664:	mov	w2, w20
    2668:	mov	w1, #0x1                   	// #1
    266c:	bl	23f8 <PySequence_Fast@plt+0x1c8>
    2670:	ldp	x29, x30, [sp, #16]
    2674:	ldp	x19, x20, [sp, #32]
    2678:	ldp	x21, x22, [sp, #48]
    267c:	add	sp, sp, #0x60
    2680:	ret
    2684:	sub	x0, x2, #0x1
    2688:	mov	x22, x2
    268c:	cmp	x0, #0x1
    2690:	b.hi	25dc <PySequence_Fast@plt+0x3ac>  // b.pmore
    2694:	cbnz	x19, 2610 <PySequence_Fast@plt+0x3e0>
    2698:	b	25dc <PySequence_Fast@plt+0x3ac>
    269c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    26a0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    26a4:	add	x1, x1, #0x448
    26a8:	ldr	x0, [x0, #4000]
    26ac:	ldr	x0, [x0]
    26b0:	bl	1f70 <PyErr_SetString@plt>
    26b4:	mov	x0, #0x0                   	// #0
    26b8:	ldp	x29, x30, [sp, #16]
    26bc:	ldp	x19, x20, [sp, #32]
    26c0:	ldp	x21, x22, [sp, #48]
    26c4:	add	sp, sp, #0x60
    26c8:	ret
    26cc:	mov	w3, #0x7                   	// #7
    26d0:	b	2660 <PySequence_Fast@plt+0x430>
    26d4:	str	w0, [sp, #76]
    26d8:	bl	2080 <PyErr_Occurred@plt>
    26dc:	ldr	w3, [sp, #76]
    26e0:	cbz	x0, 2660 <PySequence_Fast@plt+0x430>
    26e4:	b	26b4 <PySequence_Fast@plt+0x484>
    26e8:	sub	sp, sp, #0x50
    26ec:	cmp	x3, #0x0
    26f0:	ccmp	x2, #0x2, #0x0, eq  // eq = none
    26f4:	stp	x29, x30, [sp, #16]
    26f8:	add	x29, sp, #0x10
    26fc:	stp	x19, x20, [sp, #32]
    2700:	mov	x19, x1
    2704:	str	x21, [sp, #48]
    2708:	mov	x21, x0
    270c:	b.ne	2784 <PySequence_Fast@plt+0x554>  // b.any
    2710:	cbz	x1, 2784 <PySequence_Fast@plt+0x554>
    2714:	ldr	x0, [x19]
    2718:	bl	2180 <PyObject_AsFileDescriptor@plt>
    271c:	mov	w20, w0
    2720:	cmn	w0, #0x1
    2724:	b.eq	27bc <PySequence_Fast@plt+0x58c>  // b.none
    2728:	ldr	x0, [x19, #8]
    272c:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    2730:	ldr	x1, [x1, #3968]
    2734:	ldr	x0, [x0, #8]
    2738:	cmp	x0, x1
    273c:	b.eq	27d4 <PySequence_Fast@plt+0x5a4>  // b.none
    2740:	bl	21b0 <PyType_IsSubtype@plt>
    2744:	cbnz	w0, 27d4 <PySequence_Fast@plt+0x5a4>
    2748:	ldr	x0, [x19, #8]
    274c:	bl	2020 <PyLong_AsUnsignedLongMask@plt>
    2750:	mov	x19, x0
    2754:	cmn	w0, #0x1
    2758:	b.eq	27f0 <PySequence_Fast@plt+0x5c0>  // b.none
    275c:	ldr	w0, [x21, #16]
    2760:	mov	w3, w19
    2764:	mov	w2, w20
    2768:	mov	w1, #0x3                   	// #3
    276c:	bl	23f8 <PySequence_Fast@plt+0x1c8>
    2770:	ldp	x29, x30, [sp, #16]
    2774:	ldp	x19, x20, [sp, #32]
    2778:	ldr	x21, [sp, #48]
    277c:	add	sp, sp, #0x50
    2780:	ret
    2784:	add	x0, sp, #0x40
    2788:	str	x0, [sp]
    278c:	adrp	x4, 17000 <PyInit_select@@Base+0x12ef8>
    2790:	add	x4, x4, #0x360
    2794:	mov	x1, x2
    2798:	mov	x0, x19
    279c:	mov	w6, #0x2                   	// #2
    27a0:	add	x4, x4, #0x98
    27a4:	mov	w5, w6
    27a8:	mov	w7, #0x0                   	// #0
    27ac:	mov	x2, #0x0                   	// #0
    27b0:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    27b4:	mov	x19, x0
    27b8:	cbnz	x0, 2714 <PySequence_Fast@plt+0x4e4>
    27bc:	mov	x0, #0x0                   	// #0
    27c0:	ldp	x29, x30, [sp, #16]
    27c4:	ldp	x19, x20, [sp, #32]
    27c8:	ldr	x21, [sp, #48]
    27cc:	add	sp, sp, #0x50
    27d0:	ret
    27d4:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    27d8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    27dc:	add	x1, x1, #0x448
    27e0:	ldr	x0, [x0, #4000]
    27e4:	ldr	x0, [x0]
    27e8:	bl	1f70 <PyErr_SetString@plt>
    27ec:	b	27bc <PySequence_Fast@plt+0x58c>
    27f0:	bl	2080 <PyErr_Occurred@plt>
    27f4:	cbz	x0, 275c <PySequence_Fast@plt+0x52c>
    27f8:	b	27bc <PySequence_Fast@plt+0x58c>
    27fc:	nop
    2800:	stp	x29, x30, [sp, #-112]!
    2804:	cmp	x2, #0x1
    2808:	mov	x29, sp
    280c:	stp	x19, x20, [sp, #16]
    2810:	mov	x20, x2
    2814:	mov	x19, x0
    2818:	stp	x21, x22, [sp, #32]
    281c:	mov	x21, x1
    2820:	stp	x23, x24, [sp, #48]
    2824:	b.hi	29d4 <PySequence_Fast@plt+0x7a4>  // b.pmore
    2828:	cmp	x20, #0x0
    282c:	b.le	2aa8 <PySequence_Fast@plt+0x878>
    2830:	adrp	x2, 16000 <PyInit_select@@Base+0x11ef8>
    2834:	mov	x20, #0xffffffffffffffff    	// #-1
    2838:	ldr	x1, [x21]
    283c:	str	x20, [sp, #80]
    2840:	ldr	x2, [x2, #4048]
    2844:	cmp	x1, x2
    2848:	b.eq	2abc <PySequence_Fast@plt+0x88c>  // b.none
    284c:	add	x0, sp, #0x50
    2850:	mov	w2, #0x3                   	// #3
    2854:	bl	1ef0 <_PyTime_FromMillisecondsObject@plt>
    2858:	tbnz	w0, #31, 2b88 <PySequence_Fast@plt+0x958>
    285c:	ldr	x0, [sp, #80]
    2860:	mov	w1, #0x3                   	// #3
    2864:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    2868:	mov	x20, x0
    286c:	mov	x0, #0x80000000            	// #2147483648
    2870:	add	x0, x20, x0
    2874:	mov	x1, #0xffffffff            	// #4294967295
    2878:	cmp	x0, x1
    287c:	b.hi	2bd0 <PySequence_Fast@plt+0x9a0>  // b.pmore
    2880:	ldr	x0, [sp, #80]
    2884:	mov	x24, #0x0                   	// #0
    2888:	tbnz	x0, #63, 2898 <PySequence_Fast@plt+0x668>
    288c:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    2890:	ldr	x1, [sp, #80]
    2894:	add	x24, x0, x1
    2898:	cmp	x20, #0x0
    289c:	csinv	x20, x20, xzr, ge  // ge = tcont
    28a0:	ldr	w22, [x19, #40]
    28a4:	cbnz	w22, 2b68 <PySequence_Fast@plt+0x938>
    28a8:	ldr	w0, [x19, #24]
    28ac:	stp	x25, x26, [sp, #64]
    28b0:	cbz	w0, 2a6c <PySequence_Fast@plt+0x83c>
    28b4:	mov	w0, #0x1                   	// #1
    28b8:	str	w0, [x19, #40]
    28bc:	bl	21d0 <__errno_location@plt>
    28c0:	mov	x25, x0
    28c4:	b	28d8 <PySequence_Fast@plt+0x6a8>
    28c8:	bl	21a0 <PyErr_CheckSignals@plt>
    28cc:	cbnz	w0, 2a3c <PySequence_Fast@plt+0x80c>
    28d0:	ldr	x0, [sp, #80]
    28d4:	tbz	x0, #63, 2a4c <PySequence_Fast@plt+0x81c>
    28d8:	bl	2140 <PyEval_SaveThread@plt>
    28dc:	mov	x23, x0
    28e0:	ldr	x0, [x19, #32]
    28e4:	str	wzr, [x25]
    28e8:	mov	w2, w20
    28ec:	ldrsw	x1, [x19, #28]
    28f0:	bl	1f80 <poll@plt>
    28f4:	mov	w21, w0
    28f8:	mov	x0, x23
    28fc:	bl	1f00 <PyEval_RestoreThread@plt>
    2900:	ldr	w0, [x25]
    2904:	cmp	w0, #0x4
    2908:	b.eq	28c8 <PySequence_Fast@plt+0x698>  // b.none
    290c:	str	wzr, [x19, #40]
    2910:	tbnz	w21, #31, 2bb4 <PySequence_Fast@plt+0x984>
    2914:	sxtw	x0, w21
    2918:	bl	1ed0 <PyList_New@plt>
    291c:	mov	x24, x0
    2920:	cbz	x0, 2a34 <PySequence_Fast@plt+0x804>
    2924:	cbz	w21, 29b8 <PySequence_Fast@plt+0x788>
    2928:	sub	w21, w21, #0x1
    292c:	mov	x25, #0x0                   	// #0
    2930:	add	x21, x21, #0x1
    2934:	lsl	x21, x21, #3
    2938:	ldr	x0, [x19, #32]
    293c:	sbfiz	x23, x22, #3, #32
    2940:	add	x1, x0, x23
    2944:	ldrsh	w1, [x1, #6]
    2948:	cbnz	w1, 2964 <PySequence_Fast@plt+0x734>
    294c:	nop
    2950:	add	w22, w22, #0x1
    2954:	sbfiz	x23, x22, #3, #32
    2958:	add	x1, x0, x23
    295c:	ldrsh	w1, [x1, #6]
    2960:	cbz	w1, 2950 <PySequence_Fast@plt+0x720>
    2964:	mov	x0, #0x2                   	// #2
    2968:	bl	2040 <PyTuple_New@plt>
    296c:	mov	x20, x0
    2970:	cbz	x0, 2a24 <PySequence_Fast@plt+0x7f4>
    2974:	ldr	x0, [x19, #32]
    2978:	ldrsw	x0, [x0, x23]
    297c:	bl	1ff0 <PyLong_FromLong@plt>
    2980:	cbz	x0, 2a0c <PySequence_Fast@plt+0x7dc>
    2984:	ldr	x1, [x19, #32]
    2988:	str	x0, [x20, #24]
    298c:	add	x23, x1, x23
    2990:	ldrh	w0, [x23, #6]
    2994:	bl	1ff0 <PyLong_FromLong@plt>
    2998:	cbz	x0, 2a0c <PySequence_Fast@plt+0x7dc>
    299c:	ldr	x1, [x24, #24]
    29a0:	str	x0, [x20, #32]
    29a4:	add	w22, w22, #0x1
    29a8:	str	x20, [x1, x25]
    29ac:	add	x25, x25, #0x8
    29b0:	cmp	x21, x25
    29b4:	b.ne	2938 <PySequence_Fast@plt+0x708>  // b.any
    29b8:	mov	x0, x24
    29bc:	ldp	x19, x20, [sp, #16]
    29c0:	ldp	x21, x22, [sp, #32]
    29c4:	ldp	x23, x24, [sp, #48]
    29c8:	ldp	x25, x26, [sp, #64]
    29cc:	ldp	x29, x30, [sp], #112
    29d0:	ret
    29d4:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    29d8:	mov	x1, x20
    29dc:	add	x0, x0, #0x840
    29e0:	mov	x3, #0x1                   	// #1
    29e4:	mov	x2, #0x0                   	// #0
    29e8:	bl	2050 <_PyArg_CheckPositional@plt>
    29ec:	cbnz	w0, 2828 <PySequence_Fast@plt+0x5f8>
    29f0:	mov	x24, #0x0                   	// #0
    29f4:	mov	x0, x24
    29f8:	ldp	x19, x20, [sp, #16]
    29fc:	ldp	x21, x22, [sp, #32]
    2a00:	ldp	x23, x24, [sp, #48]
    2a04:	ldp	x29, x30, [sp], #112
    2a08:	ret
    2a0c:	ldr	x0, [x20]
    2a10:	sub	x0, x0, #0x1
    2a14:	str	x0, [x20]
    2a18:	cbnz	x0, 2a24 <PySequence_Fast@plt+0x7f4>
    2a1c:	mov	x0, x20
    2a20:	bl	1f40 <_Py_Dealloc@plt>
    2a24:	ldr	x0, [x24]
    2a28:	sub	x0, x0, #0x1
    2a2c:	str	x0, [x24]
    2a30:	cbz	x0, 2ac4 <PySequence_Fast@plt+0x894>
    2a34:	ldp	x25, x26, [sp, #64]
    2a38:	b	29f0 <PySequence_Fast@plt+0x7c0>
    2a3c:	str	wzr, [x19, #40]
    2a40:	tbz	w21, #31, 2914 <PySequence_Fast@plt+0x6e4>
    2a44:	ldp	x25, x26, [sp, #64]
    2a48:	b	29f0 <PySequence_Fast@plt+0x7c0>
    2a4c:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    2a50:	sub	x0, x24, x0
    2a54:	str	x0, [sp, #80]
    2a58:	tbnz	x0, #63, 2bf0 <PySequence_Fast@plt+0x9c0>
    2a5c:	mov	w1, #0x1                   	// #1
    2a60:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    2a64:	mov	x20, x0
    2a68:	b	28d8 <PySequence_Fast@plt+0x6a8>
    2a6c:	ldr	x0, [x19, #16]
    2a70:	ldr	x21, [x19, #32]
    2a74:	ldr	x1, [x0, #16]
    2a78:	str	w1, [x19, #28]
    2a7c:	tbz	w1, #31, 2aec <PySequence_Fast@plt+0x8bc>
    2a80:	str	x21, [x19, #32]
    2a84:	mov	x24, #0x0                   	// #0
    2a88:	bl	1f50 <PyErr_NoMemory@plt>
    2a8c:	mov	x0, x24
    2a90:	ldp	x19, x20, [sp, #16]
    2a94:	ldp	x21, x22, [sp, #32]
    2a98:	ldp	x23, x24, [sp, #48]
    2a9c:	ldp	x25, x26, [sp, #64]
    2aa0:	ldp	x29, x30, [sp], #112
    2aa4:	ret
    2aa8:	mov	x0, #0xffffffffffffffff    	// #-1
    2aac:	mov	x24, #0x0                   	// #0
    2ab0:	mov	x20, x0
    2ab4:	str	x0, [sp, #80]
    2ab8:	b	28a0 <PySequence_Fast@plt+0x670>
    2abc:	mov	x24, #0x0                   	// #0
    2ac0:	b	28a0 <PySequence_Fast@plt+0x670>
    2ac4:	mov	x0, x24
    2ac8:	mov	x24, #0x0                   	// #0
    2acc:	bl	1f40 <_Py_Dealloc@plt>
    2ad0:	mov	x0, x24
    2ad4:	ldp	x19, x20, [sp, #16]
    2ad8:	ldp	x21, x22, [sp, #32]
    2adc:	ldp	x23, x24, [sp, #48]
    2ae0:	ldp	x25, x26, [sp, #64]
    2ae4:	ldp	x29, x30, [sp], #112
    2ae8:	ret
    2aec:	sbfiz	x1, x1, #3, #32
    2af0:	mov	x0, x21
    2af4:	bl	1f90 <PyMem_Realloc@plt>
    2af8:	str	x0, [x19, #32]
    2afc:	cbz	x0, 2a80 <PySequence_Fast@plt+0x850>
    2b00:	add	x26, sp, #0x68
    2b04:	add	x25, sp, #0x60
    2b08:	add	x23, sp, #0x58
    2b0c:	mov	x21, #0x0                   	// #0
    2b10:	str	xzr, [sp, #88]
    2b14:	b	2b44 <PySequence_Fast@plt+0x914>
    2b18:	ldr	x0, [sp, #96]
    2b1c:	bl	20a0 <PyLong_AsLong@plt>
    2b20:	mov	x2, x0
    2b24:	ldr	x1, [x19, #32]
    2b28:	ldr	x0, [sp, #104]
    2b2c:	str	w2, [x1, x21]
    2b30:	bl	20a0 <PyLong_AsLong@plt>
    2b34:	ldr	x1, [x19, #32]
    2b38:	add	x1, x1, x21
    2b3c:	add	x21, x21, #0x8
    2b40:	strh	w0, [x1, #4]
    2b44:	ldr	x0, [x19, #16]
    2b48:	mov	x3, x26
    2b4c:	mov	x2, x25
    2b50:	mov	x1, x23
    2b54:	bl	2110 <PyDict_Next@plt>
    2b58:	cbnz	w0, 2b18 <PySequence_Fast@plt+0x8e8>
    2b5c:	mov	w0, #0x1                   	// #1
    2b60:	str	w0, [x19, #24]
    2b64:	b	28b4 <PySequence_Fast@plt+0x684>
    2b68:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2b6c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2b70:	mov	x24, #0x0                   	// #0
    2b74:	add	x1, x1, #0x4b0
    2b78:	ldr	x0, [x0, #3984]
    2b7c:	ldr	x0, [x0]
    2b80:	bl	1f70 <PyErr_SetString@plt>
    2b84:	b	29f4 <PySequence_Fast@plt+0x7c4>
    2b88:	adrp	x19, 16000 <PyInit_select@@Base+0x11ef8>
    2b8c:	ldr	x19, [x19, #4000]
    2b90:	ldr	x0, [x19]
    2b94:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    2b98:	cbz	w0, 29f0 <PySequence_Fast@plt+0x7c0>
    2b9c:	ldr	x0, [x19]
    2ba0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2ba4:	mov	x24, #0x0                   	// #0
    2ba8:	add	x1, x1, #0x470
    2bac:	bl	1f70 <PyErr_SetString@plt>
    2bb0:	b	29f4 <PySequence_Fast@plt+0x7c4>
    2bb4:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2bb8:	mov	x24, #0x0                   	// #0
    2bbc:	ldr	x0, [x0, #4008]
    2bc0:	ldr	x0, [x0]
    2bc4:	bl	1f20 <PyErr_SetFromErrno@plt>
    2bc8:	ldp	x25, x26, [sp, #64]
    2bcc:	b	29f4 <PySequence_Fast@plt+0x7c4>
    2bd0:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2bd4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2bd8:	mov	x24, #0x0                   	// #0
    2bdc:	add	x1, x1, #0x498
    2be0:	ldr	x0, [x0, #4032]
    2be4:	ldr	x0, [x0]
    2be8:	bl	1f70 <PyErr_SetString@plt>
    2bec:	b	29f4 <PySequence_Fast@plt+0x7c4>
    2bf0:	str	wzr, [x19, #40]
    2bf4:	mov	x0, #0x0                   	// #0
    2bf8:	bl	1ed0 <PyList_New@plt>
    2bfc:	mov	x24, x0
    2c00:	ldp	x25, x26, [sp, #64]
    2c04:	b	29f4 <PySequence_Fast@plt+0x7c4>
    2c08:	stp	x29, x30, [sp, #-32]!
    2c0c:	mov	x29, sp
    2c10:	str	x19, [sp, #16]
    2c14:	mov	x19, x0
    2c18:	ldr	x0, [x0, #32]
    2c1c:	cbz	x0, 2c24 <PySequence_Fast@plt+0x9f4>
    2c20:	bl	1f10 <PyMem_Free@plt>
    2c24:	ldr	x0, [x19, #16]
    2c28:	cbz	x0, 2c3c <PySequence_Fast@plt+0xa0c>
    2c2c:	ldr	x1, [x0]
    2c30:	sub	x1, x1, #0x1
    2c34:	str	x1, [x0]
    2c38:	cbz	x1, 2c4c <PySequence_Fast@plt+0xa1c>
    2c3c:	mov	x0, x19
    2c40:	ldr	x19, [sp, #16]
    2c44:	ldp	x29, x30, [sp], #32
    2c48:	b	1fc0 <PyObject_Free@plt>
    2c4c:	bl	1f40 <_Py_Dealloc@plt>
    2c50:	mov	x0, x19
    2c54:	ldr	x19, [sp, #16]
    2c58:	ldp	x29, x30, [sp], #32
    2c5c:	b	1fc0 <PyObject_Free@plt>
    2c60:	stp	x29, x30, [sp, #-32]!
    2c64:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    2c68:	add	x0, x0, #0x360
    2c6c:	mov	x29, sp
    2c70:	add	x0, x0, #0xd8
    2c74:	str	x19, [sp, #16]
    2c78:	bl	2130 <_PyObject_New@plt>
    2c7c:	cbz	x0, 2cbc <PySequence_Fast@plt+0xa8c>
    2c80:	mov	x19, x0
    2c84:	str	wzr, [x0, #24]
    2c88:	str	xzr, [x0, #32]
    2c8c:	str	wzr, [x0, #40]
    2c90:	bl	2100 <PyDict_New@plt>
    2c94:	str	x0, [x19, #16]
    2c98:	cbz	x0, 2cac <PySequence_Fast@plt+0xa7c>
    2c9c:	mov	x0, x19
    2ca0:	ldr	x19, [sp, #16]
    2ca4:	ldp	x29, x30, [sp], #32
    2ca8:	ret
    2cac:	ldr	x0, [x19]
    2cb0:	sub	x0, x0, #0x1
    2cb4:	str	x0, [x19]
    2cb8:	cbz	x0, 2cd0 <PySequence_Fast@plt+0xaa0>
    2cbc:	mov	x19, #0x0                   	// #0
    2cc0:	mov	x0, x19
    2cc4:	ldr	x19, [sp, #16]
    2cc8:	ldp	x29, x30, [sp], #32
    2ccc:	ret
    2cd0:	mov	x0, x19
    2cd4:	mov	x19, #0x0                   	// #0
    2cd8:	bl	1f40 <_Py_Dealloc@plt>
    2cdc:	b	2c9c <PySequence_Fast@plt+0xa6c>
    2ce0:	stp	x29, x30, [sp, #-96]!
    2ce4:	mov	x29, sp
    2ce8:	stp	x19, x20, [sp, #16]
    2cec:	mov	x19, x2
    2cf0:	mov	x2, x1
    2cf4:	stp	x25, x26, [sp, #64]
    2cf8:	str	x27, [sp, #80]
    2cfc:	mov	x27, x1
    2d00:	add	x1, x1, #0x80
    2d04:	str	xzr, [x19]
    2d08:	str	xzr, [x2], #8
    2d0c:	cmp	x2, x1
    2d10:	b.ne	2d08 <PySequence_Fast@plt+0xad8>  // b.any
    2d14:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2d18:	add	x1, x1, #0x4d0
    2d1c:	bl	2230 <PySequence_Fast@plt>
    2d20:	mov	x25, x0
    2d24:	cbz	x0, 2e00 <PySequence_Fast@plt+0xbd0>
    2d28:	ldr	x0, [x0, #16]
    2d2c:	cmp	x0, #0x0
    2d30:	b.le	2ecc <PySequence_Fast@plt+0xc9c>
    2d34:	mov	w26, #0xffffffff            	// #-1
    2d38:	stp	x21, x22, [sp, #32]
    2d3c:	mov	x21, #0x0                   	// #0
    2d40:	mov	x22, #0x1                   	// #1
    2d44:	stp	x23, x24, [sp, #48]
    2d48:	add	x24, x25, #0x18
    2d4c:	mov	w23, w26
    2d50:	b	2dcc <PySequence_Fast@plt+0xb9c>
    2d54:	ldr	x0, [x25, #24]
    2d58:	ldr	x20, [x0, x21, lsl #3]
    2d5c:	mov	x0, x20
    2d60:	cbz	x20, 2de8 <PySequence_Fast@plt+0xbb8>
    2d64:	ldr	x2, [x20]
    2d68:	add	x2, x2, #0x1
    2d6c:	str	x2, [x20]
    2d70:	bl	2180 <PyObject_AsFileDescriptor@plt>
    2d74:	cmn	w0, #0x1
    2d78:	b.eq	2e34 <PySequence_Fast@plt+0xc04>  // b.none
    2d7c:	asr	w2, w0, #6
    2d80:	cmp	w0, #0x3ff
    2d84:	lsl	x1, x22, x0
    2d88:	b.hi	2e1c <PySequence_Fast@plt+0xbec>  // b.pmore
    2d8c:	sxtw	x2, w2
    2d90:	cmp	w26, w0
    2d94:	csel	w26, w26, w0, ge  // ge = tcont
    2d98:	cmp	x21, #0x400
    2d9c:	add	x21, x21, #0x1
    2da0:	ldr	x3, [x27, x2, lsl #3]
    2da4:	orr	x3, x3, x1
    2da8:	str	x3, [x27, x2, lsl #3]
    2dac:	b.eq	2eb0 <PySequence_Fast@plt+0xc80>  // b.none
    2db0:	ldr	x1, [x25, #16]
    2db4:	str	x20, [x19]
    2db8:	stp	w0, wzr, [x19, #8]
    2dbc:	add	x19, x19, #0x10
    2dc0:	str	w23, [x19, #12]
    2dc4:	cmp	x1, x21
    2dc8:	b.le	2e88 <PySequence_Fast@plt+0xc58>
    2dcc:	ldr	x0, [x25, #8]
    2dd0:	ldr	x0, [x0, #168]
    2dd4:	tbnz	w0, #25, 2d54 <PySequence_Fast@plt+0xb24>
    2dd8:	ldr	x20, [x24, x21, lsl #3]
    2ddc:	mov	x0, x20
    2de0:	cbnz	x20, 2d64 <PySequence_Fast@plt+0xb34>
    2de4:	nop
    2de8:	ldr	x0, [x25]
    2dec:	sub	x0, x0, #0x1
    2df0:	str	x0, [x25]
    2df4:	cbz	x0, 2e5c <PySequence_Fast@plt+0xc2c>
    2df8:	ldp	x21, x22, [sp, #32]
    2dfc:	ldp	x23, x24, [sp, #48]
    2e00:	mov	w26, #0xffffffff            	// #-1
    2e04:	mov	w0, w26
    2e08:	ldp	x19, x20, [sp, #16]
    2e0c:	ldp	x25, x26, [sp, #64]
    2e10:	ldr	x27, [sp, #80]
    2e14:	ldp	x29, x30, [sp], #96
    2e18:	ret
    2e1c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2e20:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2e24:	add	x1, x1, #0x4f0
    2e28:	ldr	x0, [x0, #3992]
    2e2c:	ldr	x0, [x0]
    2e30:	bl	1f70 <PyErr_SetString@plt>
    2e34:	ldr	x0, [x20]
    2e38:	sub	x0, x0, #0x1
    2e3c:	str	x0, [x20]
    2e40:	cbnz	x0, 2de8 <PySequence_Fast@plt+0xbb8>
    2e44:	mov	x0, x20
    2e48:	bl	1f40 <_Py_Dealloc@plt>
    2e4c:	ldr	x0, [x25]
    2e50:	sub	x0, x0, #0x1
    2e54:	str	x0, [x25]
    2e58:	cbnz	x0, 2df8 <PySequence_Fast@plt+0xbc8>
    2e5c:	mov	x0, x25
    2e60:	mov	w26, #0xffffffff            	// #-1
    2e64:	bl	1f40 <_Py_Dealloc@plt>
    2e68:	mov	w0, w26
    2e6c:	ldp	x19, x20, [sp, #16]
    2e70:	ldp	x21, x22, [sp, #32]
    2e74:	ldp	x23, x24, [sp, #48]
    2e78:	ldp	x25, x26, [sp, #64]
    2e7c:	ldr	x27, [sp, #80]
    2e80:	ldp	x29, x30, [sp], #96
    2e84:	ret
    2e88:	ldp	x21, x22, [sp, #32]
    2e8c:	add	w26, w26, #0x1
    2e90:	ldp	x23, x24, [sp, #48]
    2e94:	ldr	x0, [x25]
    2e98:	sub	x0, x0, #0x1
    2e9c:	str	x0, [x25]
    2ea0:	cbnz	x0, 2e04 <PySequence_Fast@plt+0xbd4>
    2ea4:	mov	x0, x25
    2ea8:	bl	1f40 <_Py_Dealloc@plt>
    2eac:	b	2e04 <PySequence_Fast@plt+0xbd4>
    2eb0:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2eb4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2eb8:	add	x1, x1, #0x518
    2ebc:	ldr	x0, [x0, #3992]
    2ec0:	ldr	x0, [x0]
    2ec4:	bl	1f70 <PyErr_SetString@plt>
    2ec8:	b	2e34 <PySequence_Fast@plt+0xc04>
    2ecc:	mov	w26, #0x0                   	// #0
    2ed0:	b	2e94 <PySequence_Fast@plt+0xc64>
    2ed4:	nop
    2ed8:	stp	x29, x30, [sp, #-64]!
    2edc:	mov	x29, sp
    2ee0:	stp	x21, x22, [sp, #32]
    2ee4:	mov	x21, x0
    2ee8:	ldr	w0, [x1, #12]
    2eec:	stp	x19, x20, [sp, #16]
    2ef0:	mov	x20, x1
    2ef4:	stp	x23, x24, [sp, #48]
    2ef8:	tbnz	w0, #31, 301c <PySequence_Fast@plt+0xdec>
    2efc:	mov	x5, x1
    2f00:	mov	w0, #0x0                   	// #0
    2f04:	mov	w1, #0x0                   	// #0
    2f08:	mov	x6, #0x1                   	// #1
    2f0c:	nop
    2f10:	ldr	w2, [x5, #8]
    2f14:	add	w1, w1, #0x1
    2f18:	cmp	w2, #0x0
    2f1c:	add	w4, w2, #0x3f
    2f20:	csel	w4, w4, w2, lt  // lt = tstop
    2f24:	add	x5, x20, w1, sxtw #4
    2f28:	negs	w3, w2
    2f2c:	and	w2, w2, #0x3f
    2f30:	asr	w4, w4, #6
    2f34:	and	w3, w3, #0x3f
    2f38:	csneg	w2, w2, w3, mi  // mi = first
    2f3c:	ldr	w3, [x5, #12]
    2f40:	ldr	x4, [x21, w4, sxtw #3]
    2f44:	lsl	x2, x6, x2
    2f48:	tst	x2, x4
    2f4c:	cinc	w0, w0, ne  // ne = any
    2f50:	tbz	w3, #31, 2f10 <PySequence_Fast@plt+0xce0>
    2f54:	sxtw	x0, w0
    2f58:	bl	1ed0 <PyList_New@plt>
    2f5c:	mov	x24, x0
    2f60:	cbz	x0, 2ff0 <PySequence_Fast@plt+0xdc0>
    2f64:	ldr	w0, [x20, #12]
    2f68:	tbnz	w0, #31, 2ff4 <PySequence_Fast@plt+0xdc4>
    2f6c:	mov	x5, x20
    2f70:	mov	w19, #0x0                   	// #0
    2f74:	mov	w23, #0x0                   	// #0
    2f78:	mov	x22, #0x1                   	// #1
    2f7c:	b	2f8c <PySequence_Fast@plt+0xd5c>
    2f80:	add	x5, x20, w19, sxtw #4
    2f84:	ldr	w1, [x5, #12]
    2f88:	tbnz	w1, #31, 2ff4 <PySequence_Fast@plt+0xdc4>
    2f8c:	ldr	w2, [x5, #8]
    2f90:	add	w19, w19, #0x1
    2f94:	cmp	w2, #0x0
    2f98:	add	w4, w2, #0x3f
    2f9c:	csel	w4, w4, w2, lt  // lt = tstop
    2fa0:	negs	w3, w2
    2fa4:	and	w3, w3, #0x3f
    2fa8:	and	w2, w2, #0x3f
    2fac:	asr	w4, w4, #6
    2fb0:	csneg	w2, w2, w3, mi  // mi = first
    2fb4:	lsl	x2, x22, x2
    2fb8:	ldr	x1, [x21, w4, sxtw #3]
    2fbc:	tst	x2, x1
    2fc0:	b.eq	2f80 <PySequence_Fast@plt+0xd50>  // b.none
    2fc4:	ldr	x2, [x5]
    2fc8:	str	xzr, [x5]
    2fcc:	sxtw	x1, w23
    2fd0:	mov	x0, x24
    2fd4:	add	w23, w23, #0x1
    2fd8:	bl	20c0 <PyList_SetItem@plt>
    2fdc:	tbz	w0, #31, 2f80 <PySequence_Fast@plt+0xd50>
    2fe0:	ldr	x0, [x24]
    2fe4:	sub	x0, x0, #0x1
    2fe8:	str	x0, [x24]
    2fec:	cbz	x0, 300c <PySequence_Fast@plt+0xddc>
    2ff0:	mov	x24, #0x0                   	// #0
    2ff4:	mov	x0, x24
    2ff8:	ldp	x19, x20, [sp, #16]
    2ffc:	ldp	x21, x22, [sp, #32]
    3000:	ldp	x23, x24, [sp, #48]
    3004:	ldp	x29, x30, [sp], #64
    3008:	ret
    300c:	mov	x0, x24
    3010:	mov	x24, #0x0                   	// #0
    3014:	bl	1f40 <_Py_Dealloc@plt>
    3018:	b	2ff4 <PySequence_Fast@plt+0xdc4>
    301c:	mov	x0, #0x0                   	// #0
    3020:	b	2f58 <PySequence_Fast@plt+0xd28>
    3024:	nop
    3028:	ldr	w0, [x0, #16]
    302c:	tbnz	w0, #31, 304c <PySequence_Fast@plt+0xe1c>
    3030:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    3034:	ldr	x1, [x1, #4016]
    3038:	mov	x0, x1
    303c:	ldr	x2, [x1]
    3040:	add	x2, x2, #0x1
    3044:	str	x2, [x1]
    3048:	ret
    304c:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    3050:	ldr	x1, [x1, #4056]
    3054:	mov	x0, x1
    3058:	ldr	x2, [x1]
    305c:	add	x2, x2, #0x1
    3060:	str	x2, [x1]
    3064:	ret
    3068:	mov	x1, x0
    306c:	ldr	w0, [x0, #16]
    3070:	tbnz	w0, #31, 3088 <PySequence_Fast@plt+0xe58>
    3074:	ldr	x2, [x1]
    3078:	mov	x0, x1
    307c:	add	x2, x2, #0x1
    3080:	str	x2, [x1]
    3084:	ret
    3088:	stp	x29, x30, [sp, #-16]!
    308c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3090:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3094:	mov	x29, sp
    3098:	ldr	x0, [x0, #3992]
    309c:	add	x1, x1, #0x420
    30a0:	ldr	x0, [x0]
    30a4:	bl	1f70 <PyErr_SetString@plt>
    30a8:	mov	x0, #0x0                   	// #0
    30ac:	ldp	x29, x30, [sp], #16
    30b0:	ret
    30b4:	nop
    30b8:	stp	x29, x30, [sp, #-32]!
    30bc:	mov	x29, sp
    30c0:	ldr	x2, [x0, #304]
    30c4:	stp	x19, x20, [sp, #16]
    30c8:	mov	w20, w1
    30cc:	mov	x1, #0x0                   	// #0
    30d0:	blr	x2
    30d4:	mov	x19, x0
    30d8:	cbz	x0, 30ec <PySequence_Fast@plt+0xebc>
    30dc:	cmn	w20, #0x1
    30e0:	b.eq	30fc <PySequence_Fast@plt+0xecc>  // b.none
    30e4:	str	w20, [x0, #16]
    30e8:	tbnz	w20, #31, 3120 <PySequence_Fast@plt+0xef0>
    30ec:	mov	x0, x19
    30f0:	ldp	x19, x20, [sp, #16]
    30f4:	ldp	x29, x30, [sp], #32
    30f8:	ret
    30fc:	bl	2140 <PyEval_SaveThread@plt>
    3100:	mov	x20, x0
    3104:	mov	w0, #0x80000               	// #524288
    3108:	bl	20d0 <epoll_create1@plt>
    310c:	str	w0, [x19, #16]
    3110:	mov	x0, x20
    3114:	bl	1f00 <PyEval_RestoreThread@plt>
    3118:	ldr	w20, [x19, #16]
    311c:	tbz	w20, #31, 30ec <PySequence_Fast@plt+0xebc>
    3120:	ldr	x0, [x19]
    3124:	sub	x0, x0, #0x1
    3128:	str	x0, [x19]
    312c:	cbz	x0, 3154 <PySequence_Fast@plt+0xf24>
    3130:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3134:	mov	x19, #0x0                   	// #0
    3138:	ldr	x0, [x0, #4008]
    313c:	ldr	x0, [x0]
    3140:	bl	1f20 <PyErr_SetFromErrno@plt>
    3144:	mov	x0, x19
    3148:	ldp	x19, x20, [sp, #16]
    314c:	ldp	x29, x30, [sp], #32
    3150:	ret
    3154:	mov	x0, x19
    3158:	bl	1f40 <_Py_Dealloc@plt>
    315c:	b	3130 <PySequence_Fast@plt+0xf00>
    3160:	sub	sp, sp, #0x60
    3164:	stp	x29, x30, [sp, #16]
    3168:	add	x29, sp, #0x10
    316c:	stp	x19, x20, [sp, #32]
    3170:	add	x19, x1, #0x18
    3174:	stp	x21, x22, [sp, #48]
    3178:	mov	x21, x0
    317c:	ldr	x1, [x1, #16]
    3180:	cbz	x2, 3270 <PySequence_Fast@plt+0x1040>
    3184:	ldr	x20, [x2, #16]
    3188:	add	x20, x1, x20
    318c:	add	x0, sp, #0x50
    3190:	str	x0, [sp]
    3194:	adrp	x4, 17000 <PyInit_select@@Base+0x12ef8>
    3198:	add	x4, x4, #0x360
    319c:	mov	x0, x19
    31a0:	add	x4, x4, #0x278
    31a4:	mov	w7, #0x0                   	// #0
    31a8:	mov	w6, #0x2                   	// #2
    31ac:	mov	w5, #0x0                   	// #0
    31b0:	mov	x3, #0x0                   	// #0
    31b4:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    31b8:	mov	x19, x0
    31bc:	cbz	x0, 32cc <PySequence_Fast@plt+0x109c>
    31c0:	cbz	x20, 3250 <PySequence_Fast@plt+0x1020>
    31c4:	ldr	x0, [x19]
    31c8:	str	x23, [sp, #64]
    31cc:	cbz	x0, 32b4 <PySequence_Fast@plt+0x1084>
    31d0:	adrp	x22, 16000 <PyInit_select@@Base+0x11ef8>
    31d4:	ldr	x0, [x0, #8]
    31d8:	ldr	x1, [x22, #3968]
    31dc:	cmp	x0, x1
    31e0:	b.eq	3280 <PySequence_Fast@plt+0x1050>  // b.none
    31e4:	bl	21b0 <PyType_IsSubtype@plt>
    31e8:	cbnz	w0, 3280 <PySequence_Fast@plt+0x1050>
    31ec:	ldr	x0, [x19]
    31f0:	bl	21e0 <_PyLong_AsInt@plt>
    31f4:	mov	w23, w0
    31f8:	cmn	w0, #0x1
    31fc:	b.eq	32c0 <PySequence_Fast@plt+0x1090>  // b.none
    3200:	cmp	x20, #0x1
    3204:	b.eq	3344 <PySequence_Fast@plt+0x1114>  // b.none
    3208:	ldr	x0, [x19, #8]
    320c:	ldr	x1, [x22, #3968]
    3210:	ldr	x0, [x0, #8]
    3214:	cmp	x0, x1
    3218:	b.eq	3280 <PySequence_Fast@plt+0x1050>  // b.none
    321c:	bl	21b0 <PyType_IsSubtype@plt>
    3220:	cbnz	w0, 3280 <PySequence_Fast@plt+0x1050>
    3224:	ldr	x0, [x19, #8]
    3228:	bl	21e0 <_PyLong_AsInt@plt>
    322c:	cmn	w0, #0x1
    3230:	b.eq	3308 <PySequence_Fast@plt+0x10d8>  // b.none
    3234:	cmn	w23, #0x1
    3238:	b.eq	3244 <PySequence_Fast@plt+0x1014>  // b.none
    323c:	cmp	w23, #0x0
    3240:	b.le	3320 <PySequence_Fast@plt+0x10f0>
    3244:	tst	w0, #0xfff7ffff
    3248:	b.ne	32e4 <PySequence_Fast@plt+0x10b4>  // b.any
    324c:	ldr	x23, [sp, #64]
    3250:	mov	x0, x21
    3254:	mov	w1, #0xffffffff            	// #-1
    3258:	bl	30b8 <PySequence_Fast@plt+0xe88>
    325c:	ldp	x29, x30, [sp, #16]
    3260:	ldp	x19, x20, [sp, #32]
    3264:	ldp	x21, x22, [sp, #48]
    3268:	add	sp, sp, #0x60
    326c:	ret
    3270:	mov	x20, x1
    3274:	cmp	x1, #0x2
    3278:	b.ls	31c0 <PySequence_Fast@plt+0xf90>  // b.plast
    327c:	b	318c <PySequence_Fast@plt+0xf5c>
    3280:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3284:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3288:	add	x1, x1, #0x448
    328c:	ldr	x0, [x0, #4000]
    3290:	ldr	x0, [x0]
    3294:	bl	1f70 <PyErr_SetString@plt>
    3298:	mov	x0, #0x0                   	// #0
    329c:	ldp	x29, x30, [sp, #16]
    32a0:	ldp	x19, x20, [sp, #32]
    32a4:	ldp	x21, x22, [sp, #48]
    32a8:	ldr	x23, [sp, #64]
    32ac:	add	sp, sp, #0x60
    32b0:	ret
    32b4:	mov	w23, #0xffffffff            	// #-1
    32b8:	adrp	x22, 16000 <PyInit_select@@Base+0x11ef8>
    32bc:	b	3208 <PySequence_Fast@plt+0xfd8>
    32c0:	bl	2080 <PyErr_Occurred@plt>
    32c4:	cbz	x0, 3354 <PySequence_Fast@plt+0x1124>
    32c8:	ldr	x23, [sp, #64]
    32cc:	mov	x0, #0x0                   	// #0
    32d0:	ldp	x29, x30, [sp, #16]
    32d4:	ldp	x19, x20, [sp, #32]
    32d8:	ldp	x21, x22, [sp, #48]
    32dc:	add	sp, sp, #0x60
    32e0:	ret
    32e4:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    32e8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    32ec:	add	x1, x1, #0x558
    32f0:	ldr	x0, [x0, #4008]
    32f4:	ldr	x0, [x0]
    32f8:	bl	1f70 <PyErr_SetString@plt>
    32fc:	mov	x0, #0x0                   	// #0
    3300:	ldr	x23, [sp, #64]
    3304:	b	325c <PySequence_Fast@plt+0x102c>
    3308:	bl	2080 <PyErr_Occurred@plt>
    330c:	cbnz	x0, 32c8 <PySequence_Fast@plt+0x1098>
    3310:	cmn	w23, #0x1
    3314:	b.eq	32e4 <PySequence_Fast@plt+0x10b4>  // b.none
    3318:	cmp	w23, #0x0
    331c:	b.gt	32e4 <PySequence_Fast@plt+0x10b4>
    3320:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3324:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3328:	add	x1, x1, #0x540
    332c:	ldr	x0, [x0, #3992]
    3330:	ldr	x0, [x0]
    3334:	bl	1f70 <PyErr_SetString@plt>
    3338:	mov	x0, #0x0                   	// #0
    333c:	ldr	x23, [sp, #64]
    3340:	b	325c <PySequence_Fast@plt+0x102c>
    3344:	cmp	w0, #0x0
    3348:	b.le	3320 <PySequence_Fast@plt+0x10f0>
    334c:	ldr	x23, [sp, #64]
    3350:	b	3250 <PySequence_Fast@plt+0x1020>
    3354:	cmp	x20, #0x1
    3358:	b.ne	3208 <PySequence_Fast@plt+0xfd8>  // b.any
    335c:	ldr	x23, [sp, #64]
    3360:	b	3250 <PySequence_Fast@plt+0x1020>
    3364:	nop
    3368:	stp	x29, x30, [sp, #-32]!
    336c:	adrp	x2, 16000 <PyInit_select@@Base+0x11ef8>
    3370:	mov	x29, sp
    3374:	stp	x19, x20, [sp, #16]
    3378:	mov	x19, x1
    337c:	mov	x20, x0
    3380:	ldr	x1, [x2, #3968]
    3384:	ldr	x0, [x19, #8]
    3388:	cmp	x0, x1
    338c:	b.eq	33d8 <PySequence_Fast@plt+0x11a8>  // b.none
    3390:	bl	21b0 <PyType_IsSubtype@plt>
    3394:	cbnz	w0, 33d8 <PySequence_Fast@plt+0x11a8>
    3398:	mov	x0, x19
    339c:	bl	21e0 <_PyLong_AsInt@plt>
    33a0:	mov	w19, w0
    33a4:	cmn	w0, #0x1
    33a8:	b.eq	33c0 <PySequence_Fast@plt+0x1190>  // b.none
    33ac:	mov	w1, w19
    33b0:	mov	x0, x20
    33b4:	ldp	x19, x20, [sp, #16]
    33b8:	ldp	x29, x30, [sp], #32
    33bc:	b	30b8 <PySequence_Fast@plt+0xe88>
    33c0:	bl	2080 <PyErr_Occurred@plt>
    33c4:	cbz	x0, 33ac <PySequence_Fast@plt+0x117c>
    33c8:	mov	x0, #0x0                   	// #0
    33cc:	ldp	x19, x20, [sp, #16]
    33d0:	ldp	x29, x30, [sp], #32
    33d4:	ret
    33d8:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    33dc:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    33e0:	add	x1, x1, #0x448
    33e4:	ldr	x0, [x0, #4000]
    33e8:	ldr	x0, [x0]
    33ec:	bl	1f70 <PyErr_SetString@plt>
    33f0:	mov	x0, #0x0                   	// #0
    33f4:	ldp	x19, x20, [sp, #16]
    33f8:	ldp	x29, x30, [sp], #32
    33fc:	ret
    3400:	sub	sp, sp, #0x90
    3404:	stp	x29, x30, [sp, #16]
    3408:	add	x29, sp, #0x10
    340c:	stp	x19, x20, [sp, #32]
    3410:	mov	x19, x1
    3414:	mov	x20, x0
    3418:	stp	x21, x22, [sp, #48]
    341c:	mov	x1, x2
    3420:	mov	x2, x3
    3424:	stp	x23, x24, [sp, #64]
    3428:	cbz	x3, 3634 <PySequence_Fast@plt+0x1404>
    342c:	ldr	x21, [x3, #16]
    3430:	add	x21, x1, x21
    3434:	add	x0, sp, #0x80
    3438:	str	x0, [sp]
    343c:	adrp	x4, 17000 <PyInit_select@@Base+0x12ef8>
    3440:	add	x4, x4, #0x360
    3444:	mov	x3, x2
    3448:	mov	x0, x19
    344c:	add	x4, x4, #0x2b8
    3450:	mov	w7, #0x0                   	// #0
    3454:	mov	w6, #0x2                   	// #2
    3458:	mov	w5, #0x0                   	// #0
    345c:	mov	x2, #0x0                   	// #0
    3460:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    3464:	mov	x19, x0
    3468:	cbz	x0, 36a8 <PySequence_Fast@plt+0x1478>
    346c:	cbz	x21, 364c <PySequence_Fast@plt+0x141c>
    3470:	ldr	x22, [x19]
    3474:	cbz	x22, 3688 <PySequence_Fast@plt+0x1458>
    3478:	cmp	x21, #0x1
    347c:	b.eq	3718 <PySequence_Fast@plt+0x14e8>  // b.none
    3480:	ldr	x0, [x19, #8]
    3484:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    3488:	ldr	x1, [x1, #3968]
    348c:	ldr	x0, [x0, #8]
    3490:	cmp	x0, x1
    3494:	b.eq	36e0 <PySequence_Fast@plt+0x14b0>  // b.none
    3498:	bl	21b0 <PyType_IsSubtype@plt>
    349c:	cbnz	w0, 36e0 <PySequence_Fast@plt+0x14b0>
    34a0:	ldr	x0, [x19, #8]
    34a4:	bl	21e0 <_PyLong_AsInt@plt>
    34a8:	mov	w24, w0
    34ac:	cmn	w0, #0x1
    34b0:	b.eq	3720 <PySequence_Fast@plt+0x14f0>  // b.none
    34b4:	ldr	w0, [x20, #16]
    34b8:	mov	x19, #0xffffffffffffffff    	// #-1
    34bc:	str	x19, [sp, #120]
    34c0:	tbnz	w0, #31, 3740 <PySequence_Fast@plt+0x1510>
    34c4:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    34c8:	ldr	x0, [x0, #4048]
    34cc:	cmp	x22, x0
    34d0:	b.eq	37d0 <PySequence_Fast@plt+0x15a0>  // b.none
    34d4:	mov	x1, x22
    34d8:	add	x0, sp, #0x78
    34dc:	mov	w2, #0x3                   	// #3
    34e0:	bl	1fb0 <_PyTime_FromSecondsObject@plt>
    34e4:	tbnz	w0, #31, 3760 <PySequence_Fast@plt+0x1530>
    34e8:	ldr	x0, [sp, #120]
    34ec:	mov	w1, #0x1                   	// #1
    34f0:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    34f4:	mov	x1, #0x80000000            	// #2147483648
    34f8:	add	x1, x0, x1
    34fc:	mov	x2, #0xffffffff            	// #4294967295
    3500:	cmp	x1, x2
    3504:	b.hi	37b0 <PySequence_Fast@plt+0x1580>  // b.pmore
    3508:	ldr	x1, [sp, #120]
    350c:	cmp	x0, #0x0
    3510:	csel	x19, x0, x19, ge  // ge = tcont
    3514:	mov	x21, #0x0                   	// #0
    3518:	tbz	x1, #63, 3694 <PySequence_Fast@plt+0x1464>
    351c:	cmn	w24, #0x1
    3520:	b.eq	365c <PySequence_Fast@plt+0x142c>  // b.none
    3524:	cmp	w24, #0x0
    3528:	b.le	378c <PySequence_Fast@plt+0x155c>
    352c:	sbfiz	x0, x24, #4, #32
    3530:	bl	21f0 <PyMem_Malloc@plt>
    3534:	mov	x23, x0
    3538:	cbz	x0, 36a4 <PySequence_Fast@plt+0x1474>
    353c:	stp	x25, x26, [sp, #80]
    3540:	bl	21d0 <__errno_location@plt>
    3544:	mov	x25, x0
    3548:	b	355c <PySequence_Fast@plt+0x132c>
    354c:	bl	21a0 <PyErr_CheckSignals@plt>
    3550:	cbnz	w0, 3608 <PySequence_Fast@plt+0x13d8>
    3554:	ldr	x0, [sp, #120]
    3558:	tbz	x0, #63, 3668 <PySequence_Fast@plt+0x1438>
    355c:	bl	2140 <PyEval_SaveThread@plt>
    3560:	str	wzr, [x25]
    3564:	mov	x22, x0
    3568:	mov	x1, x23
    356c:	ldr	w0, [x20, #16]
    3570:	mov	w3, w19
    3574:	mov	w2, w24
    3578:	bl	2000 <epoll_wait@plt>
    357c:	mov	w26, w0
    3580:	mov	x0, x22
    3584:	bl	1f00 <PyEval_RestoreThread@plt>
    3588:	ldr	w1, [x25]
    358c:	cmp	w1, #0x4
    3590:	b.eq	354c <PySequence_Fast@plt+0x131c>  // b.none
    3594:	tbnz	w26, #31, 36c8 <PySequence_Fast@plt+0x1498>
    3598:	sxtw	x0, w26
    359c:	bl	1ed0 <PyList_New@plt>
    35a0:	mov	x21, x0
    35a4:	cbz	x0, 3608 <PySequence_Fast@plt+0x13d8>
    35a8:	cbz	w26, 360c <PySequence_Fast@plt+0x13dc>
    35ac:	sub	w22, w26, #0x1
    35b0:	adrp	x24, 4000 <PySequence_Fast@plt+0x1dd0>
    35b4:	add	x22, x22, #0x1
    35b8:	add	x24, x24, #0x598
    35bc:	add	x20, x23, #0x8
    35c0:	mov	x19, #0x0                   	// #0
    35c4:	lsl	x22, x22, #3
    35c8:	b	35e0 <PySequence_Fast@plt+0x13b0>
    35cc:	ldr	x1, [x21, #24]
    35d0:	str	x0, [x1, x19]
    35d4:	add	x19, x19, #0x8
    35d8:	cmp	x22, x19
    35dc:	b.eq	360c <PySequence_Fast@plt+0x13dc>  // b.none
    35e0:	ldur	w2, [x20, #-8]
    35e4:	mov	x0, x24
    35e8:	ldr	w1, [x20]
    35ec:	add	x20, x20, #0x10
    35f0:	bl	2070 <Py_BuildValue@plt>
    35f4:	cbnz	x0, 35cc <PySequence_Fast@plt+0x139c>
    35f8:	ldr	x0, [x21]
    35fc:	sub	x0, x0, #0x1
    3600:	str	x0, [x21]
    3604:	cbz	x0, 3730 <PySequence_Fast@plt+0x1500>
    3608:	mov	x21, #0x0                   	// #0
    360c:	mov	x0, x23
    3610:	bl	1f10 <PyMem_Free@plt>
    3614:	ldp	x25, x26, [sp, #80]
    3618:	mov	x0, x21
    361c:	ldp	x29, x30, [sp, #16]
    3620:	ldp	x19, x20, [sp, #32]
    3624:	ldp	x21, x22, [sp, #48]
    3628:	ldp	x23, x24, [sp, #64]
    362c:	add	sp, sp, #0x90
    3630:	ret
    3634:	tbnz	x1, #63, 37ec <PySequence_Fast@plt+0x15bc>
    3638:	cmp	x19, #0x0
    363c:	mov	x21, x1
    3640:	ccmp	x1, #0x2, #0x0, ne  // ne = any
    3644:	b.gt	3434 <PySequence_Fast@plt+0x1204>
    3648:	cbnz	x21, 3470 <PySequence_Fast@plt+0x1240>
    364c:	ldr	w0, [x20, #16]
    3650:	mov	x19, #0xffffffffffffffff    	// #-1
    3654:	str	x19, [sp, #120]
    3658:	tbnz	w0, #31, 3740 <PySequence_Fast@plt+0x1510>
    365c:	mov	x0, #0x3ff0                	// #16368
    3660:	mov	w24, #0x3ff                 	// #1023
    3664:	b	3530 <PySequence_Fast@plt+0x1300>
    3668:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    366c:	sub	x0, x21, x0
    3670:	str	x0, [sp, #120]
    3674:	tbnz	x0, #63, 37d8 <PySequence_Fast@plt+0x15a8>
    3678:	mov	w1, #0x1                   	// #1
    367c:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    3680:	mov	x19, x0
    3684:	b	355c <PySequence_Fast@plt+0x132c>
    3688:	adrp	x22, 16000 <PyInit_select@@Base+0x11ef8>
    368c:	ldr	x22, [x22, #4048]
    3690:	b	3480 <PySequence_Fast@plt+0x1250>
    3694:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    3698:	ldr	x1, [sp, #120]
    369c:	add	x21, x0, x1
    36a0:	b	351c <PySequence_Fast@plt+0x12ec>
    36a4:	bl	1f50 <PyErr_NoMemory@plt>
    36a8:	mov	x21, #0x0                   	// #0
    36ac:	mov	x0, x21
    36b0:	ldp	x29, x30, [sp, #16]
    36b4:	ldp	x19, x20, [sp, #32]
    36b8:	ldp	x21, x22, [sp, #48]
    36bc:	ldp	x23, x24, [sp, #64]
    36c0:	add	sp, sp, #0x90
    36c4:	ret
    36c8:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    36cc:	mov	x21, #0x0                   	// #0
    36d0:	ldr	x0, [x0, #4008]
    36d4:	ldr	x0, [x0]
    36d8:	bl	1f20 <PyErr_SetFromErrno@plt>
    36dc:	b	360c <PySequence_Fast@plt+0x13dc>
    36e0:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    36e4:	mov	x21, #0x0                   	// #0
    36e8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    36ec:	add	x1, x1, #0x448
    36f0:	ldr	x0, [x0, #4000]
    36f4:	ldr	x0, [x0]
    36f8:	bl	1f70 <PyErr_SetString@plt>
    36fc:	mov	x0, x21
    3700:	ldp	x29, x30, [sp, #16]
    3704:	ldp	x19, x20, [sp, #32]
    3708:	ldp	x21, x22, [sp, #48]
    370c:	ldp	x23, x24, [sp, #64]
    3710:	add	sp, sp, #0x90
    3714:	ret
    3718:	mov	w24, #0xffffffff            	// #-1
    371c:	b	34b4 <PySequence_Fast@plt+0x1284>
    3720:	bl	2080 <PyErr_Occurred@plt>
    3724:	cbz	x0, 34b4 <PySequence_Fast@plt+0x1284>
    3728:	mov	x21, #0x0                   	// #0
    372c:	b	36ac <PySequence_Fast@plt+0x147c>
    3730:	mov	x0, x21
    3734:	mov	x21, #0x0                   	// #0
    3738:	bl	1f40 <_Py_Dealloc@plt>
    373c:	b	360c <PySequence_Fast@plt+0x13dc>
    3740:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3744:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3748:	mov	x21, #0x0                   	// #0
    374c:	add	x1, x1, #0x420
    3750:	ldr	x0, [x0, #3992]
    3754:	ldr	x0, [x0]
    3758:	bl	1f70 <PyErr_SetString@plt>
    375c:	b	3618 <PySequence_Fast@plt+0x13e8>
    3760:	adrp	x19, 16000 <PyInit_select@@Base+0x11ef8>
    3764:	mov	x21, #0x0                   	// #0
    3768:	ldr	x19, [x19, #4000]
    376c:	ldr	x0, [x19]
    3770:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    3774:	cbz	w0, 3618 <PySequence_Fast@plt+0x13e8>
    3778:	ldr	x0, [x19]
    377c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3780:	add	x1, x1, #0x470
    3784:	bl	1f70 <PyErr_SetString@plt>
    3788:	b	3618 <PySequence_Fast@plt+0x13e8>
    378c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3790:	mov	w2, w24
    3794:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3798:	mov	x21, #0x0                   	// #0
    379c:	ldr	x0, [x0, #3992]
    37a0:	add	x1, x1, #0x568
    37a4:	ldr	x0, [x0]
    37a8:	bl	21c0 <PyErr_Format@plt>
    37ac:	b	3618 <PySequence_Fast@plt+0x13e8>
    37b0:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    37b4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    37b8:	mov	x21, #0x0                   	// #0
    37bc:	add	x1, x1, #0x498
    37c0:	ldr	x0, [x0, #4032]
    37c4:	ldr	x0, [x0]
    37c8:	bl	1f70 <PyErr_SetString@plt>
    37cc:	b	3618 <PySequence_Fast@plt+0x13e8>
    37d0:	mov	x21, #0x0                   	// #0
    37d4:	b	351c <PySequence_Fast@plt+0x12ec>
    37d8:	mov	x0, #0x0                   	// #0
    37dc:	bl	1ed0 <PyList_New@plt>
    37e0:	mov	x21, x0
    37e4:	cbnz	x0, 360c <PySequence_Fast@plt+0x13dc>
    37e8:	b	3608 <PySequence_Fast@plt+0x13d8>
    37ec:	add	x0, sp, #0x80
    37f0:	str	x0, [sp]
    37f4:	adrp	x4, 17000 <PyInit_select@@Base+0x12ef8>
    37f8:	add	x4, x4, #0x360
    37fc:	mov	x0, x19
    3800:	add	x4, x4, #0x2b8
    3804:	mov	w7, #0x0                   	// #0
    3808:	mov	w6, #0x2                   	// #2
    380c:	mov	w5, #0x0                   	// #0
    3810:	mov	x2, #0x0                   	// #0
    3814:	str	x1, [sp, #104]
    3818:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    381c:	mov	x19, x0
    3820:	cbz	x0, 36a8 <PySequence_Fast@plt+0x1478>
    3824:	ldr	x1, [sp, #104]
    3828:	mov	x21, x1
    382c:	b	3470 <PySequence_Fast@plt+0x1240>
    3830:	ldr	w0, [x0, #16]
    3834:	tbnz	w0, #31, 3840 <PySequence_Fast@plt+0x1610>
    3838:	sxtw	x0, w0
    383c:	b	1ff0 <PyLong_FromLong@plt>
    3840:	stp	x29, x30, [sp, #-16]!
    3844:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3848:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    384c:	mov	x29, sp
    3850:	ldr	x0, [x0, #3992]
    3854:	add	x1, x1, #0x420
    3858:	ldr	x0, [x0]
    385c:	bl	1f70 <PyErr_SetString@plt>
    3860:	mov	x0, #0x0                   	// #0
    3864:	ldp	x29, x30, [sp], #16
    3868:	ret
    386c:	nop
    3870:	stp	x29, x30, [sp, #-48]!
    3874:	mov	x29, sp
    3878:	stp	x19, x20, [sp, #16]
    387c:	mov	w20, #0x0                   	// #0
    3880:	ldr	w19, [x0]
    3884:	tbz	w19, #31, 3898 <PySequence_Fast@plt+0x1668>
    3888:	mov	w0, w20
    388c:	ldp	x19, x20, [sp, #16]
    3890:	ldp	x29, x30, [sp], #48
    3894:	ret
    3898:	str	x21, [sp, #32]
    389c:	mov	w1, #0xffffffff            	// #-1
    38a0:	str	w1, [x0]
    38a4:	mov	w20, #0x0                   	// #0
    38a8:	bl	2140 <PyEval_SaveThread@plt>
    38ac:	mov	x21, x0
    38b0:	mov	w0, w19
    38b4:	bl	2010 <close@plt>
    38b8:	tbz	w0, #31, 38c4 <PySequence_Fast@plt+0x1694>
    38bc:	bl	21d0 <__errno_location@plt>
    38c0:	ldr	w20, [x0]
    38c4:	mov	x0, x21
    38c8:	bl	1f00 <PyEval_RestoreThread@plt>
    38cc:	mov	w0, w20
    38d0:	ldp	x19, x20, [sp, #16]
    38d4:	ldr	x21, [sp, #32]
    38d8:	ldp	x29, x30, [sp], #48
    38dc:	ret
    38e0:	stp	x29, x30, [sp, #-32]!
    38e4:	mov	x29, sp
    38e8:	stp	x19, x20, [sp, #16]
    38ec:	mov	x20, x0
    38f0:	bl	21d0 <__errno_location@plt>
    38f4:	mov	x19, x0
    38f8:	add	x0, x20, #0x10
    38fc:	bl	3870 <PySequence_Fast@plt+0x1640>
    3900:	str	w0, [x19]
    3904:	tbnz	w0, #31, 392c <PySequence_Fast@plt+0x16fc>
    3908:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    390c:	ldr	x1, [x1, #4048]
    3910:	mov	x0, x1
    3914:	ldr	x2, [x1]
    3918:	add	x2, x2, #0x1
    391c:	str	x2, [x1]
    3920:	ldp	x19, x20, [sp, #16]
    3924:	ldp	x29, x30, [sp], #32
    3928:	ret
    392c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3930:	ldr	x0, [x0, #4008]
    3934:	ldr	x0, [x0]
    3938:	bl	1f20 <PyErr_SetFromErrno@plt>
    393c:	mov	x0, #0x0                   	// #0
    3940:	b	3920 <PySequence_Fast@plt+0x16f0>
    3944:	nop
    3948:	stp	x29, x30, [sp, #-32]!
    394c:	mov	x29, sp
    3950:	str	x19, [sp, #16]
    3954:	mov	x19, x0
    3958:	add	x0, x0, #0x10
    395c:	bl	3870 <PySequence_Fast@plt+0x1640>
    3960:	mov	x0, x19
    3964:	ldr	x1, [x19, #8]
    3968:	ldr	x19, [sp, #16]
    396c:	ldp	x29, x30, [sp], #32
    3970:	ldr	x1, [x1, #320]
    3974:	mov	x16, x1
    3978:	br	x16
    397c:	nop
    3980:	stp	x29, x30, [sp, #-32]!
    3984:	mov	x29, sp
    3988:	stp	x19, x20, [sp, #16]
    398c:	mov	x20, x0
    3990:	mov	x0, x1
    3994:	bl	2180 <PyObject_AsFileDescriptor@plt>
    3998:	cmn	w0, #0x1
    399c:	b.eq	3a08 <PySequence_Fast@plt+0x17d8>  // b.none
    39a0:	sxtw	x0, w0
    39a4:	bl	1ff0 <PyLong_FromLong@plt>
    39a8:	mov	x19, x0
    39ac:	cbz	x0, 3a08 <PySequence_Fast@plt+0x17d8>
    39b0:	mov	x1, x0
    39b4:	ldr	x0, [x20, #16]
    39b8:	bl	2060 <PyDict_DelItem@plt>
    39bc:	cmn	w0, #0x1
    39c0:	ldr	x0, [x19]
    39c4:	sub	x0, x0, #0x1
    39c8:	str	x0, [x19]
    39cc:	b.eq	39fc <PySequence_Fast@plt+0x17cc>  // b.none
    39d0:	cbz	x0, 3a18 <PySequence_Fast@plt+0x17e8>
    39d4:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    39d8:	str	wzr, [x20, #24]
    39dc:	ldp	x19, x20, [sp, #16]
    39e0:	ldr	x1, [x1, #4048]
    39e4:	mov	x0, x1
    39e8:	ldr	x2, [x1]
    39ec:	add	x2, x2, #0x1
    39f0:	str	x2, [x1]
    39f4:	ldp	x29, x30, [sp], #32
    39f8:	ret
    39fc:	cbnz	x0, 3a08 <PySequence_Fast@plt+0x17d8>
    3a00:	mov	x0, x19
    3a04:	bl	1f40 <_Py_Dealloc@plt>
    3a08:	mov	x0, #0x0                   	// #0
    3a0c:	ldp	x19, x20, [sp, #16]
    3a10:	ldp	x29, x30, [sp], #32
    3a14:	ret
    3a18:	mov	x0, x19
    3a1c:	bl	1f40 <_Py_Dealloc@plt>
    3a20:	b	39d4 <PySequence_Fast@plt+0x17a4>
    3a24:	nop
    3a28:	stp	x29, x30, [sp, #-64]!
    3a2c:	cmp	x2, #0x2
    3a30:	mov	x29, sp
    3a34:	stp	x19, x20, [sp, #16]
    3a38:	mov	x19, x1
    3a3c:	stp	x21, x22, [sp, #32]
    3a40:	mov	x21, x0
    3a44:	b.eq	3a64 <PySequence_Fast@plt+0x1834>  // b.none
    3a48:	mov	x1, x2
    3a4c:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    3a50:	mov	x3, #0x2                   	// #2
    3a54:	add	x0, x0, #0x5a0
    3a58:	mov	x2, x3
    3a5c:	bl	2050 <_PyArg_CheckPositional@plt>
    3a60:	cbz	w0, 3b60 <PySequence_Fast@plt+0x1930>
    3a64:	ldr	x0, [x19]
    3a68:	bl	2180 <PyObject_AsFileDescriptor@plt>
    3a6c:	mov	w20, w0
    3a70:	cmn	w0, #0x1
    3a74:	b.eq	3b60 <PySequence_Fast@plt+0x1930>  // b.none
    3a78:	ldr	x0, [x19, #8]
    3a7c:	add	x1, sp, #0x3e
    3a80:	bl	20f0 <_PyLong_UnsignedShort_Converter@plt>
    3a84:	cbz	w0, 3b60 <PySequence_Fast@plt+0x1930>
    3a88:	sxtw	x0, w20
    3a8c:	ldrh	w22, [sp, #62]
    3a90:	bl	1ff0 <PyLong_FromLong@plt>
    3a94:	mov	x20, x0
    3a98:	cbz	x0, 3b60 <PySequence_Fast@plt+0x1930>
    3a9c:	mov	x1, x0
    3aa0:	ldr	x0, [x21, #16]
    3aa4:	bl	2220 <PyDict_GetItemWithError@plt>
    3aa8:	mov	x19, x0
    3aac:	cbz	x0, 3b28 <PySequence_Fast@plt+0x18f8>
    3ab0:	and	x0, x22, #0xffff
    3ab4:	bl	1ff0 <PyLong_FromLong@plt>
    3ab8:	mov	x19, x0
    3abc:	cbz	x0, 3b50 <PySequence_Fast@plt+0x1920>
    3ac0:	mov	x2, x0
    3ac4:	mov	x1, x20
    3ac8:	ldr	x0, [x21, #16]
    3acc:	bl	2160 <PyDict_SetItem@plt>
    3ad0:	mov	w22, w0
    3ad4:	ldr	x1, [x20]
    3ad8:	sub	x1, x1, #0x1
    3adc:	str	x1, [x20]
    3ae0:	cbz	x1, 3b84 <PySequence_Fast@plt+0x1954>
    3ae4:	ldr	x1, [x19]
    3ae8:	sub	x1, x1, #0x1
    3aec:	str	x1, [x19]
    3af0:	cbz	x1, 3b78 <PySequence_Fast@plt+0x1948>
    3af4:	tbnz	w22, #31, 3b60 <PySequence_Fast@plt+0x1930>
    3af8:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3afc:	str	wzr, [x21, #24]
    3b00:	ldp	x21, x22, [sp, #32]
    3b04:	ldr	x0, [x0, #4048]
    3b08:	mov	x19, x0
    3b0c:	ldr	x1, [x0]
    3b10:	add	x1, x1, #0x1
    3b14:	str	x1, [x0]
    3b18:	mov	x0, x19
    3b1c:	ldp	x19, x20, [sp, #16]
    3b20:	ldp	x29, x30, [sp], #64
    3b24:	ret
    3b28:	bl	2080 <PyErr_Occurred@plt>
    3b2c:	cbnz	x0, 3b50 <PySequence_Fast@plt+0x1920>
    3b30:	bl	21d0 <__errno_location@plt>
    3b34:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    3b38:	mov	w2, #0x2                   	// #2
    3b3c:	str	w2, [x0]
    3b40:	ldr	x1, [x1, #4008]
    3b44:	ldr	x0, [x1]
    3b48:	bl	1f20 <PyErr_SetFromErrno@plt>
    3b4c:	nop
    3b50:	ldr	x0, [x20]
    3b54:	sub	x0, x0, #0x1
    3b58:	str	x0, [x20]
    3b5c:	cbz	x0, 3b90 <PySequence_Fast@plt+0x1960>
    3b60:	mov	x19, #0x0                   	// #0
    3b64:	mov	x0, x19
    3b68:	ldp	x19, x20, [sp, #16]
    3b6c:	ldp	x21, x22, [sp, #32]
    3b70:	ldp	x29, x30, [sp], #64
    3b74:	ret
    3b78:	mov	x0, x19
    3b7c:	bl	1f40 <_Py_Dealloc@plt>
    3b80:	b	3af4 <PySequence_Fast@plt+0x18c4>
    3b84:	mov	x0, x20
    3b88:	bl	1f40 <_Py_Dealloc@plt>
    3b8c:	b	3ae4 <PySequence_Fast@plt+0x18b4>
    3b90:	mov	x0, x20
    3b94:	bl	1f40 <_Py_Dealloc@plt>
    3b98:	b	3b64 <PySequence_Fast@plt+0x1934>
    3b9c:	nop
    3ba0:	stp	x29, x30, [sp, #-64]!
    3ba4:	mov	w3, #0x7                   	// #7
    3ba8:	mov	x29, sp
    3bac:	stp	x19, x20, [sp, #16]
    3bb0:	mov	x19, x2
    3bb4:	sub	x2, x2, #0x1
    3bb8:	stp	x21, x22, [sp, #32]
    3bbc:	mov	x20, x1
    3bc0:	mov	x22, x0
    3bc4:	strh	w3, [sp, #62]
    3bc8:	cmp	x2, #0x1
    3bcc:	b.ls	3bec <PySequence_Fast@plt+0x19bc>  // b.plast
    3bd0:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    3bd4:	mov	x1, x19
    3bd8:	add	x0, x0, #0x5a8
    3bdc:	mov	x3, #0x2                   	// #2
    3be0:	mov	x2, #0x1                   	// #1
    3be4:	bl	2050 <_PyArg_CheckPositional@plt>
    3be8:	cbz	w0, 3cb8 <PySequence_Fast@plt+0x1a88>
    3bec:	ldr	x0, [x20]
    3bf0:	bl	2180 <PyObject_AsFileDescriptor@plt>
    3bf4:	mov	w21, w0
    3bf8:	cmn	w0, #0x1
    3bfc:	b.eq	3cb8 <PySequence_Fast@plt+0x1a88>  // b.none
    3c00:	cmp	x19, #0x1
    3c04:	b.le	3c18 <PySequence_Fast@plt+0x19e8>
    3c08:	ldr	x0, [x20, #8]
    3c0c:	add	x1, sp, #0x3e
    3c10:	bl	20f0 <_PyLong_UnsignedShort_Converter@plt>
    3c14:	cbz	w0, 3cb8 <PySequence_Fast@plt+0x1a88>
    3c18:	ldrh	w19, [sp, #62]
    3c1c:	sxtw	x0, w21
    3c20:	bl	1ff0 <PyLong_FromLong@plt>
    3c24:	mov	x20, x0
    3c28:	cbz	x0, 3cb8 <PySequence_Fast@plt+0x1a88>
    3c2c:	and	x0, x19, #0xffff
    3c30:	bl	1ff0 <PyLong_FromLong@plt>
    3c34:	mov	x19, x0
    3c38:	cbz	x0, 3ca4 <PySequence_Fast@plt+0x1a74>
    3c3c:	mov	x2, x0
    3c40:	mov	x1, x20
    3c44:	ldr	x0, [x22, #16]
    3c48:	bl	2160 <PyDict_SetItem@plt>
    3c4c:	mov	w21, w0
    3c50:	ldr	x1, [x20]
    3c54:	sub	x1, x1, #0x1
    3c58:	str	x1, [x20]
    3c5c:	cbz	x1, 3cdc <PySequence_Fast@plt+0x1aac>
    3c60:	ldr	x1, [x19]
    3c64:	sub	x1, x1, #0x1
    3c68:	str	x1, [x19]
    3c6c:	cbz	x1, 3cd0 <PySequence_Fast@plt+0x1aa0>
    3c70:	tbnz	w21, #31, 3cb8 <PySequence_Fast@plt+0x1a88>
    3c74:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3c78:	str	wzr, [x22, #24]
    3c7c:	ldp	x21, x22, [sp, #32]
    3c80:	ldr	x0, [x0, #4048]
    3c84:	mov	x19, x0
    3c88:	ldr	x1, [x0]
    3c8c:	add	x1, x1, #0x1
    3c90:	str	x1, [x0]
    3c94:	mov	x0, x19
    3c98:	ldp	x19, x20, [sp, #16]
    3c9c:	ldp	x29, x30, [sp], #64
    3ca0:	ret
    3ca4:	ldr	x0, [x20]
    3ca8:	sub	x0, x0, #0x1
    3cac:	str	x0, [x20]
    3cb0:	cbz	x0, 3ce8 <PySequence_Fast@plt+0x1ab8>
    3cb4:	nop
    3cb8:	mov	x19, #0x0                   	// #0
    3cbc:	mov	x0, x19
    3cc0:	ldp	x19, x20, [sp, #16]
    3cc4:	ldp	x21, x22, [sp, #32]
    3cc8:	ldp	x29, x30, [sp], #64
    3ccc:	ret
    3cd0:	mov	x0, x19
    3cd4:	bl	1f40 <_Py_Dealloc@plt>
    3cd8:	b	3c70 <PySequence_Fast@plt+0x1a40>
    3cdc:	mov	x0, x20
    3ce0:	bl	1f40 <_Py_Dealloc@plt>
    3ce4:	b	3c60 <PySequence_Fast@plt+0x1a30>
    3ce8:	mov	x0, x20
    3cec:	bl	1f40 <_Py_Dealloc@plt>
    3cf0:	b	3cbc <PySequence_Fast@plt+0x1a8c>
    3cf4:	nop
    3cf8:	mov	x12, #0xc250                	// #49744
    3cfc:	sub	sp, sp, x12
    3d00:	adrp	x4, 16000 <PyInit_select@@Base+0x11ef8>
    3d04:	stp	x29, x30, [sp]
    3d08:	mov	x29, sp
    3d0c:	ldr	x4, [x4, #4048]
    3d10:	stp	x19, x20, [sp, #16]
    3d14:	mov	x19, x0
    3d18:	stp	x21, x22, [sp, #32]
    3d1c:	cmp	x3, x4
    3d20:	mov	x21, x2
    3d24:	stp	x23, x24, [sp, #48]
    3d28:	mov	x23, x1
    3d2c:	b.eq	3f64 <PySequence_Fast@plt+0x1d34>  // b.none
    3d30:	mov	x1, x3
    3d34:	add	x0, sp, #0x88
    3d38:	mov	w2, #0x3                   	// #3
    3d3c:	bl	1fb0 <_PyTime_FromSecondsObject@plt>
    3d40:	tbnz	w0, #31, 3f74 <PySequence_Fast@plt+0x1d44>
    3d44:	ldr	x0, [sp, #136]
    3d48:	add	x20, sp, #0x90
    3d4c:	mov	x1, x20
    3d50:	mov	w2, #0x3                   	// #3
    3d54:	bl	2190 <_PyTime_AsTimeval@plt>
    3d58:	cmn	w0, #0x1
    3d5c:	b.eq	3f88 <PySequence_Fast@plt+0x1d58>  // b.none
    3d60:	ldr	x0, [sp, #144]
    3d64:	tbnz	x0, #63, 4020 <PySequence_Fast@plt+0x1df0>
    3d68:	stp	x25, x26, [sp, #64]
    3d6c:	stp	x27, x28, [sp, #80]
    3d70:	mov	x4, #0x4020                	// #16416
    3d74:	add	x4, sp, x4
    3d78:	mov	w3, #0xffffffff            	// #-1
    3d7c:	mov	x6, #0x8020                	// #32800
    3d80:	mov	x5, #0x4230                	// #16944
    3d84:	add	x26, sp, #0x220
    3d88:	add	x22, sp, #0xa0
    3d8c:	str	w3, [x4, #540]
    3d90:	add	x4, sp, x6
    3d94:	mov	x0, x19
    3d98:	mov	x2, x26
    3d9c:	mov	x1, x22
    3da0:	add	x27, sp, x5
    3da4:	str	w3, [x4, #556]
    3da8:	str	w3, [sp, #556]
    3dac:	bl	2ce0 <PySequence_Fast@plt+0xab0>
    3db0:	mov	w19, w0
    3db4:	tbnz	w0, #31, 3f14 <PySequence_Fast@plt+0x1ce4>
    3db8:	add	x24, sp, #0x120
    3dbc:	mov	x0, x23
    3dc0:	mov	x2, x27
    3dc4:	mov	x1, x24
    3dc8:	bl	2ce0 <PySequence_Fast@plt+0xab0>
    3dcc:	mov	w23, w0
    3dd0:	tbnz	w0, #31, 3f14 <PySequence_Fast@plt+0x1ce4>
    3dd4:	add	x25, sp, #0x1a0
    3dd8:	mov	x0, #0x8240                	// #33344
    3ddc:	add	x0, sp, x0
    3de0:	mov	x1, x25
    3de4:	mov	x2, x0
    3de8:	mov	x0, x21
    3dec:	str	x2, [sp, #104]
    3df0:	bl	2ce0 <PySequence_Fast@plt+0xab0>
    3df4:	tbnz	w0, #31, 3f20 <PySequence_Fast@plt+0x1cf0>
    3df8:	cmp	w19, w23
    3dfc:	str	xzr, [sp, #112]
    3e00:	csel	w19, w19, w23, ge  // ge = tcont
    3e04:	cmp	w0, w19
    3e08:	csel	w23, w0, w19, ge  // ge = tcont
    3e0c:	cbz	x20, 3e20 <PySequence_Fast@plt+0x1bf0>
    3e10:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    3e14:	ldr	x1, [sp, #136]
    3e18:	add	x0, x0, x1
    3e1c:	str	x0, [sp, #112]
    3e20:	bl	21d0 <__errno_location@plt>
    3e24:	mov	x21, x0
    3e28:	add	x0, sp, #0x90
    3e2c:	str	x0, [sp, #120]
    3e30:	b	3e40 <PySequence_Fast@plt+0x1c10>
    3e34:	bl	21a0 <PyErr_CheckSignals@plt>
    3e38:	cbnz	w0, 3f20 <PySequence_Fast@plt+0x1cf0>
    3e3c:	cbnz	x20, 3fac <PySequence_Fast@plt+0x1d7c>
    3e40:	bl	2140 <PyEval_SaveThread@plt>
    3e44:	str	wzr, [x21]
    3e48:	mov	x4, x20
    3e4c:	mov	x3, x25
    3e50:	mov	x2, x24
    3e54:	mov	x1, x22
    3e58:	mov	x28, x0
    3e5c:	mov	w0, w23
    3e60:	bl	2170 <select@plt>
    3e64:	mov	w19, w0
    3e68:	mov	x0, x28
    3e6c:	bl	1f00 <PyEval_RestoreThread@plt>
    3e70:	ldr	w0, [x21]
    3e74:	cmp	w0, #0x4
    3e78:	b.eq	3e34 <PySequence_Fast@plt+0x1c04>  // b.none
    3e7c:	tbnz	w19, #31, 4008 <PySequence_Fast@plt+0x1dd8>
    3e80:	mov	x0, x22
    3e84:	mov	x1, x26
    3e88:	bl	2ed8 <PySequence_Fast@plt+0xca8>
    3e8c:	mov	x22, x0
    3e90:	mov	x1, x27
    3e94:	mov	x0, x24
    3e98:	bl	2ed8 <PySequence_Fast@plt+0xca8>
    3e9c:	mov	x21, x0
    3ea0:	ldr	x1, [sp, #104]
    3ea4:	mov	x0, x25
    3ea8:	mov	x19, #0x0                   	// #0
    3eac:	bl	2ed8 <PySequence_Fast@plt+0xca8>
    3eb0:	mov	x20, x0
    3eb4:	bl	2080 <PyErr_Occurred@plt>
    3eb8:	cbz	x0, 3fe8 <PySequence_Fast@plt+0x1db8>
    3ebc:	cbz	x22, 3ed8 <PySequence_Fast@plt+0x1ca8>
    3ec0:	ldr	x0, [x22]
    3ec4:	sub	x0, x0, #0x1
    3ec8:	str	x0, [x22]
    3ecc:	cbnz	x0, 3ed8 <PySequence_Fast@plt+0x1ca8>
    3ed0:	mov	x0, x22
    3ed4:	bl	1f40 <_Py_Dealloc@plt>
    3ed8:	cbz	x21, 3ef4 <PySequence_Fast@plt+0x1cc4>
    3edc:	ldr	x0, [x21]
    3ee0:	sub	x0, x0, #0x1
    3ee4:	str	x0, [x21]
    3ee8:	cbnz	x0, 3ef4 <PySequence_Fast@plt+0x1cc4>
    3eec:	mov	x0, x21
    3ef0:	bl	1f40 <_Py_Dealloc@plt>
    3ef4:	cbz	x20, 3f24 <PySequence_Fast@plt+0x1cf4>
    3ef8:	ldr	x0, [x20]
    3efc:	sub	x0, x0, #0x1
    3f00:	str	x0, [x20]
    3f04:	cbnz	x0, 3f24 <PySequence_Fast@plt+0x1cf4>
    3f08:	mov	x0, x20
    3f0c:	bl	1f40 <_Py_Dealloc@plt>
    3f10:	b	3f24 <PySequence_Fast@plt+0x1cf4>
    3f14:	mov	x1, #0x8240                	// #33344
    3f18:	add	x0, sp, x1
    3f1c:	str	x0, [sp, #104]
    3f20:	mov	x19, #0x0                   	// #0
    3f24:	mov	x0, x26
    3f28:	bl	2318 <PySequence_Fast@plt+0xe8>
    3f2c:	mov	x0, x27
    3f30:	bl	2318 <PySequence_Fast@plt+0xe8>
    3f34:	ldr	x0, [sp, #104]
    3f38:	bl	2318 <PySequence_Fast@plt+0xe8>
    3f3c:	ldp	x25, x26, [sp, #64]
    3f40:	ldp	x27, x28, [sp, #80]
    3f44:	mov	x0, x19
    3f48:	mov	x12, #0xc250                	// #49744
    3f4c:	ldp	x29, x30, [sp]
    3f50:	ldp	x19, x20, [sp, #16]
    3f54:	ldp	x21, x22, [sp, #32]
    3f58:	ldp	x23, x24, [sp, #48]
    3f5c:	add	sp, sp, x12
    3f60:	ret
    3f64:	mov	x20, #0x0                   	// #0
    3f68:	stp	x25, x26, [sp, #64]
    3f6c:	stp	x27, x28, [sp, #80]
    3f70:	b	3d70 <PySequence_Fast@plt+0x1b40>
    3f74:	adrp	x19, 16000 <PyInit_select@@Base+0x11ef8>
    3f78:	ldr	x19, [x19, #4000]
    3f7c:	ldr	x0, [x19]
    3f80:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    3f84:	cbnz	w0, 3fd0 <PySequence_Fast@plt+0x1da0>
    3f88:	mov	x19, #0x0                   	// #0
    3f8c:	mov	x12, #0xc250                	// #49744
    3f90:	mov	x0, x19
    3f94:	ldp	x29, x30, [sp]
    3f98:	ldp	x19, x20, [sp, #16]
    3f9c:	ldp	x21, x22, [sp, #32]
    3fa0:	ldp	x23, x24, [sp, #48]
    3fa4:	add	sp, sp, x12
    3fa8:	ret
    3fac:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    3fb0:	ldr	x1, [sp, #112]
    3fb4:	sub	x0, x1, x0
    3fb8:	str	x0, [sp, #136]
    3fbc:	ldr	x1, [sp, #120]
    3fc0:	tbnz	x0, #63, 4040 <PySequence_Fast@plt+0x1e10>
    3fc4:	mov	w2, #0x1                   	// #1
    3fc8:	bl	20b0 <_PyTime_AsTimeval_noraise@plt>
    3fcc:	b	3e40 <PySequence_Fast@plt+0x1c10>
    3fd0:	ldr	x0, [x19]
    3fd4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3fd8:	mov	x19, #0x0                   	// #0
    3fdc:	add	x1, x1, #0x5b8
    3fe0:	bl	1f70 <PyErr_SetString@plt>
    3fe4:	b	3f44 <PySequence_Fast@plt+0x1d14>
    3fe8:	mov	x3, x20
    3fec:	mov	x2, x21
    3ff0:	mov	x1, x22
    3ff4:	mov	x0, #0x3                   	// #3
    3ff8:	bl	2210 <PyTuple_Pack@plt>
    3ffc:	mov	x19, x0
    4000:	cbnz	x22, 3ec0 <PySequence_Fast@plt+0x1c90>
    4004:	b	3ed8 <PySequence_Fast@plt+0x1ca8>
    4008:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    400c:	mov	x19, #0x0                   	// #0
    4010:	ldr	x0, [x0, #4008]
    4014:	ldr	x0, [x0]
    4018:	bl	1f20 <PyErr_SetFromErrno@plt>
    401c:	b	3f24 <PySequence_Fast@plt+0x1cf4>
    4020:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    4024:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4028:	mov	x19, #0x0                   	// #0
    402c:	add	x1, x1, #0x5d8
    4030:	ldr	x0, [x0, #3992]
    4034:	ldr	x0, [x0]
    4038:	bl	1f70 <PyErr_SetString@plt>
    403c:	b	3f44 <PySequence_Fast@plt+0x1d14>
    4040:	mov	x0, x22
    4044:	add	x1, x22, #0x80
    4048:	str	xzr, [x0], #8
    404c:	cmp	x1, x0
    4050:	b.ne	4048 <PySequence_Fast@plt+0x1e18>  // b.any
    4054:	mov	x0, x24
    4058:	add	x1, x24, #0x80
    405c:	nop
    4060:	str	xzr, [x0], #8
    4064:	cmp	x1, x0
    4068:	b.ne	4060 <PySequence_Fast@plt+0x1e30>  // b.any
    406c:	mov	x0, x25
    4070:	add	x1, x25, #0x80
    4074:	nop
    4078:	str	xzr, [x0], #8
    407c:	cmp	x0, x1
    4080:	b.ne	4078 <PySequence_Fast@plt+0x1e48>  // b.any
    4084:	b	3e80 <PySequence_Fast@plt+0x1c50>
    4088:	stp	x29, x30, [sp, #-32]!
    408c:	sub	x0, x2, #0x3
    4090:	cmp	x0, #0x1
    4094:	mov	x29, sp
    4098:	stp	x19, x20, [sp, #16]
    409c:	mov	x20, x2
    40a0:	mov	x19, x1
    40a4:	b.hi	40c8 <PySequence_Fast@plt+0x1e98>  // b.pmore
    40a8:	cmp	x20, #0x3
    40ac:	ldp	x0, x1, [x19]
    40b0:	ldr	x2, [x19, #16]
    40b4:	b.le	40f4 <PySequence_Fast@plt+0x1ec4>
    40b8:	ldr	x3, [x19, #24]
    40bc:	ldp	x19, x20, [sp, #16]
    40c0:	ldp	x29, x30, [sp], #32
    40c4:	b	3cf8 <PySequence_Fast@plt+0x1ac8>
    40c8:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    40cc:	mov	x1, x20
    40d0:	add	x0, x0, #0x5f8
    40d4:	mov	x3, #0x4                   	// #4
    40d8:	mov	x2, #0x3                   	// #3
    40dc:	bl	2050 <_PyArg_CheckPositional@plt>
    40e0:	cbnz	w0, 40a8 <PySequence_Fast@plt+0x1e78>
    40e4:	mov	x0, #0x0                   	// #0
    40e8:	ldp	x19, x20, [sp, #16]
    40ec:	ldp	x29, x30, [sp], #32
    40f0:	ret
    40f4:	adrp	x3, 16000 <PyInit_select@@Base+0x11ef8>
    40f8:	ldp	x19, x20, [sp, #16]
    40fc:	ldp	x29, x30, [sp], #32
    4100:	ldr	x3, [x3, #4048]
    4104:	b	3cf8 <PySequence_Fast@plt+0x1ac8>

0000000000004108 <PyInit_select@@Base>:
    4108:	stp	x29, x30, [sp, #-48]!
    410c:	mov	w1, #0x3f5                 	// #1013
    4110:	mov	x29, sp
    4114:	stp	x19, x20, [sp, #16]
    4118:	adrp	x20, 17000 <PyInit_select@@Base+0x12ef8>
    411c:	add	x20, x20, #0x360
    4120:	add	x0, x20, #0x2f8
    4124:	bl	2090 <PyModule_Create2@plt>
    4128:	cbz	x0, 43ec <PyInit_select@@Base+0x2e4>
    412c:	adrp	x2, 16000 <PyInit_select@@Base+0x11ef8>
    4130:	mov	x19, x0
    4134:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4138:	add	x1, x1, #0x600
    413c:	ldr	x2, [x2, #4008]
    4140:	ldr	x2, [x2]
    4144:	ldr	x3, [x2]
    4148:	add	x3, x3, #0x1
    414c:	str	x3, [x2]
    4150:	bl	2150 <PyModule_AddObject@plt>
    4154:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4158:	add	x1, x1, #0x608
    415c:	mov	x2, #0x1000                	// #4096
    4160:	mov	x0, x19
    4164:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4168:	add	x0, x20, #0xd8
    416c:	bl	1fe0 <PyType_Ready@plt>
    4170:	tbnz	w0, #31, 43ec <PyInit_select@@Base+0x2e4>
    4174:	mov	x2, #0x1                   	// #1
    4178:	mov	x0, x19
    417c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4180:	add	x1, x1, #0x618
    4184:	str	x21, [sp, #32]
    4188:	bl	1ee0 <PyModule_AddIntConstant@plt>
    418c:	mov	x2, #0x2                   	// #2
    4190:	mov	x0, x19
    4194:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4198:	add	x1, x1, #0x620
    419c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    41a0:	adrp	x21, 17000 <PyInit_select@@Base+0x12ef8>
    41a4:	mov	x2, #0x4                   	// #4
    41a8:	mov	x0, x19
    41ac:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    41b0:	add	x1, x1, #0x628
    41b4:	bl	1ee0 <PyModule_AddIntConstant@plt>
    41b8:	add	x20, x21, #0x1c0
    41bc:	mov	x2, #0x8                   	// #8
    41c0:	mov	x0, x19
    41c4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    41c8:	add	x1, x1, #0x630
    41cc:	bl	1ee0 <PyModule_AddIntConstant@plt>
    41d0:	mov	x2, #0x10                  	// #16
    41d4:	mov	x0, x19
    41d8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    41dc:	add	x1, x1, #0x638
    41e0:	bl	1ee0 <PyModule_AddIntConstant@plt>
    41e4:	mov	x2, #0x20                  	// #32
    41e8:	mov	x0, x19
    41ec:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    41f0:	add	x1, x1, #0x640
    41f4:	bl	1ee0 <PyModule_AddIntConstant@plt>
    41f8:	mov	x2, #0x40                  	// #64
    41fc:	mov	x0, x19
    4200:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4204:	add	x1, x1, #0x650
    4208:	bl	1ee0 <PyModule_AddIntConstant@plt>
    420c:	mov	x2, #0x80                  	// #128
    4210:	mov	x0, x19
    4214:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4218:	add	x1, x1, #0x660
    421c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4220:	mov	x2, #0x100                 	// #256
    4224:	mov	x0, x19
    4228:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    422c:	add	x1, x1, #0x670
    4230:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4234:	mov	x2, #0x200                 	// #512
    4238:	mov	x0, x19
    423c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4240:	add	x1, x1, #0x680
    4244:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4248:	mov	x2, #0x400                 	// #1024
    424c:	mov	x0, x19
    4250:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4254:	add	x1, x1, #0x690
    4258:	bl	1ee0 <PyModule_AddIntConstant@plt>
    425c:	mov	x0, x19
    4260:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4264:	mov	x2, #0x2000                	// #8192
    4268:	add	x1, x1, #0x698
    426c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4270:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    4274:	mov	x0, x20
    4278:	ldr	x1, [x1, #4040]
    427c:	str	x1, [x20, #8]
    4280:	bl	1fe0 <PyType_Ready@plt>
    4284:	tbnz	w0, #31, 43e8 <PyInit_select@@Base+0x2e0>
    4288:	ldr	x3, [x21, #448]
    428c:	mov	x2, x20
    4290:	mov	x0, x19
    4294:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4298:	add	x3, x3, #0x1
    429c:	add	x1, x1, #0x6a8
    42a0:	str	x3, [x21, #448]
    42a4:	bl	2150 <PyModule_AddObject@plt>
    42a8:	mov	x0, x19
    42ac:	mov	x2, #0x1                   	// #1
    42b0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    42b4:	add	x1, x1, #0x6b0
    42b8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    42bc:	mov	x0, x19
    42c0:	mov	x2, #0x4                   	// #4
    42c4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    42c8:	add	x1, x1, #0x6b8
    42cc:	bl	1ee0 <PyModule_AddIntConstant@plt>
    42d0:	mov	x0, x19
    42d4:	mov	x2, #0x2                   	// #2
    42d8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    42dc:	add	x1, x1, #0x6c8
    42e0:	bl	1ee0 <PyModule_AddIntConstant@plt>
    42e4:	mov	x0, x19
    42e8:	mov	x2, #0x8                   	// #8
    42ec:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    42f0:	add	x1, x1, #0x6d8
    42f4:	bl	1ee0 <PyModule_AddIntConstant@plt>
    42f8:	mov	x0, x19
    42fc:	mov	x2, #0x10                  	// #16
    4300:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4304:	add	x1, x1, #0x6e8
    4308:	bl	1ee0 <PyModule_AddIntConstant@plt>
    430c:	mov	x0, x19
    4310:	mov	x2, #0x2000                	// #8192
    4314:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4318:	add	x1, x1, #0x6f8
    431c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4320:	mov	x0, x19
    4324:	mov	x2, #0x80000000            	// #2147483648
    4328:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    432c:	add	x1, x1, #0x708
    4330:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4334:	mov	x0, x19
    4338:	mov	x2, #0x40000000            	// #1073741824
    433c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4340:	add	x1, x1, #0x710
    4344:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4348:	mov	x0, x19
    434c:	mov	x2, #0x10000000            	// #268435456
    4350:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4354:	add	x1, x1, #0x720
    4358:	bl	1ee0 <PyModule_AddIntConstant@plt>
    435c:	mov	x0, x19
    4360:	mov	x2, #0x40                  	// #64
    4364:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4368:	add	x1, x1, #0x730
    436c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4370:	mov	x0, x19
    4374:	mov	x2, #0x80                  	// #128
    4378:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    437c:	add	x1, x1, #0x740
    4380:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4384:	mov	x0, x19
    4388:	mov	x2, #0x100                 	// #256
    438c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4390:	add	x1, x1, #0x750
    4394:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4398:	mov	x0, x19
    439c:	mov	x2, #0x200                 	// #512
    43a0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    43a4:	add	x1, x1, #0x760
    43a8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43ac:	mov	x0, x19
    43b0:	mov	x2, #0x400                 	// #1024
    43b4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    43b8:	add	x1, x1, #0x770
    43bc:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43c0:	mov	x0, x19
    43c4:	mov	x2, #0x80000               	// #524288
    43c8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    43cc:	add	x1, x1, #0x780
    43d0:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43d4:	mov	x0, x19
    43d8:	ldp	x19, x20, [sp, #16]
    43dc:	ldr	x21, [sp, #32]
    43e0:	ldp	x29, x30, [sp], #48
    43e4:	ret
    43e8:	ldr	x21, [sp, #32]
    43ec:	mov	x19, #0x0                   	// #0
    43f0:	mov	x0, x19
    43f4:	ldp	x19, x20, [sp, #16]
    43f8:	ldp	x29, x30, [sp], #48
    43fc:	ret

Disassembly of section .fini:

0000000000004400 <.fini>:
    4400:	stp	x29, x30, [sp, #-16]!
    4404:	mov	x29, sp
    4408:	ldp	x29, x30, [sp], #16
    440c:	ret
