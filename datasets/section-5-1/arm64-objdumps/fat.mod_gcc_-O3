
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fat.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x17a0>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	ldr	x19, [x0, #80]
      10:	ldr	x0, [x19, #8]
      14:	bl	0 <grub_free>
      18:	mov	x0, x19
      1c:	bl	0 <grub_free>
      20:	adrp	x0, 0 <grub_mod_init-0x17a0>
      24:	ldr	x0, [x0]
      28:	ldr	x0, [x0]
      2c:	bl	0 <grub_dl_unref>
      30:	adrp	x0, 0 <grub_mod_init-0x17a0>
      34:	ldr	x19, [sp, #16]
      38:	ldr	x0, [x0]
      3c:	ldp	x29, x30, [sp], #32
      40:	ldr	w0, [x0]
      44:	ret
	...
      58:	stp	x29, x30, [sp, #-144]!
      5c:	mov	x29, sp
      60:	ldr	w8, [x1, #24]
      64:	stp	x23, x24, [sp, #48]
      68:	mov	x24, x5
      6c:	cmn	w8, #0x1
      70:	stp	x25, x26, [sp, #64]
      74:	stp	x27, x28, [sp, #80]
      78:	mov	x28, x1
      7c:	mov	x27, x6
      80:	stp	x2, x3, [sp, #104]
      84:	mov	x2, x4
      88:	ldr	x1, [x1, #8]
      8c:	b.eq	288 <grub_mod_init-0x1518>  // b.none
      90:	stp	x19, x20, [sp, #16]
      94:	mov	x19, x0
      98:	ldr	w0, [x1, #32]
      9c:	ldr	w3, [x28, #28]
      a0:	mov	x26, #0xffffffffffffffff    	// #-1
      a4:	add	w0, w0, #0x9
      a8:	lsr	x4, x4, x0
      ac:	mov	w20, w4
      b0:	lsl	x26, x26, x0
      b4:	cmp	w3, w4
      b8:	bic	x26, x2, x26
      bc:	b.hi	1c8 <grub_mod_init-0x15d8>  // b.pmore
      c0:	cbz	x24, 30c <grub_mod_init-0x1494>
      c4:	mov	w2, #0x1                   	// #1
      c8:	mov	x25, #0x0                   	// #0
      cc:	lsl	w0, w2, w0
      d0:	adrp	x23, 0 <grub_mod_init-0x17a0>
      d4:	sxtw	x0, w0
      d8:	stp	x21, x22, [sp, #32]
      dc:	adrp	x22, 0 <grub_mod_init-0x17a0>
      e0:	str	x0, [sp, #120]
      e4:	ldr	w0, [x28, #32]
      e8:	cmp	w3, w20
      ec:	adrp	x21, 0 <grub_mod_init-0x17a0>
      f0:	b.cc	158 <grub_mod_init-0x1648>  // b.lo, b.ul, b.last
      f4:	b	20c <grub_mod_init-0x1594>
      f8:	cmp	w4, #0x10
      fc:	b.ne	108 <grub_mod_init-0x1698>  // b.any
     100:	and	w5, w5, #0xffff
     104:	str	w5, [sp, #140]
     108:	ldr	x2, [x22]
     10c:	mov	w1, #0x228                 	// #552
     110:	ldr	x0, [x21]
     114:	ldr	x3, [x23]
     118:	bl	0 <grub_real_dprintf>
     11c:	ldr	x1, [x28, #8]
     120:	ldr	w0, [sp, #140]
     124:	ldr	w2, [x1, #36]
     128:	cmp	w2, w0
     12c:	b.ls	2b8 <grub_mod_init-0x14e8>  // b.plast
     130:	cmp	w0, #0x1
     134:	b.ls	1d4 <grub_mod_init-0x15cc>  // b.plast
     138:	ldr	w2, [x1, #44]
     13c:	cmp	w0, w2
     140:	b.cs	1d4 <grub_mod_init-0x15cc>  // b.hs, b.nlast
     144:	ldr	w2, [x28, #28]
     148:	add	w2, w2, #0x1
     14c:	stp	w2, w0, [x28, #28]
     150:	cmp	w2, w20
     154:	b.cs	20c <grub_mod_init-0x1594>  // b.hs, b.nlast
     158:	ldr	w3, [x1, #16]
     15c:	lsl	w2, w0, #1
     160:	cmp	w3, #0x10
     164:	b.eq	178 <grub_mod_init-0x1628>  // b.none
     168:	lsl	w2, w0, #2
     16c:	cmp	w3, #0x20
     170:	add	w0, w0, w0, lsr #1
     174:	csel	x2, x0, x2, ne  // ne = any
     178:	add	w3, w3, #0x7
     17c:	ldr	w1, [x1, #8]
     180:	add	x4, sp, #0x8c
     184:	mov	x0, x19
     188:	asr	w3, w3, #3
     18c:	sxtw	x3, w3
     190:	bl	0 <grub_disk_read>
     194:	cbnz	w0, 2d8 <grub_mod_init-0x14c8>
     198:	ldr	x0, [x28, #8]
     19c:	ldr	w5, [sp, #140]
     1a0:	ldr	w4, [x0, #16]
     1a4:	cmp	w4, #0xc
     1a8:	b.ne	f8 <grub_mod_init-0x16a8>  // b.any
     1ac:	ldr	w1, [x28, #32]
     1b0:	lsr	w0, w5, #4
     1b4:	tst	x1, #0x1
     1b8:	csel	w5, w0, w5, ne  // ne = any
     1bc:	and	w5, w5, #0xfff
     1c0:	str	w5, [sp, #140]
     1c4:	b	108 <grub_mod_init-0x1698>
     1c8:	mov	w3, #0x0                   	// #0
     1cc:	stp	wzr, w8, [x28, #28]
     1d0:	b	c0 <grub_mod_init-0x16e0>
     1d4:	adrp	x1, 0 <grub_mod_init-0x17a0>
     1d8:	mov	w2, w0
     1dc:	mov	w0, #0x9                   	// #9
     1e0:	mov	x25, #0xffffffffffffffff    	// #-1
     1e4:	ldr	x1, [x1]
     1e8:	bl	0 <grub_error>
     1ec:	ldp	x19, x20, [sp, #16]
     1f0:	ldp	x21, x22, [sp, #32]
     1f4:	mov	x0, x25
     1f8:	ldp	x23, x24, [sp, #48]
     1fc:	ldp	x25, x26, [sp, #64]
     200:	ldp	x27, x28, [sp, #80]
     204:	ldp	x29, x30, [sp], #144
     208:	ret
     20c:	ldr	x2, [sp, #120]
     210:	sub	w0, w0, #0x2
     214:	ldr	x3, [sp, #104]
     218:	sub	x21, x2, x26
     21c:	ldr	w2, [x1, #32]
     220:	cmp	x21, x24
     224:	ldr	w1, [x1, #40]
     228:	csel	x21, x21, x24, ls  // ls = plast
     22c:	mov	x4, x27
     230:	lsl	w0, w0, w2
     234:	add	w1, w0, w1
     238:	ldr	x2, [sp, #112]
     23c:	stp	x3, x2, [x19, #48]
     240:	mov	x0, x19
     244:	mov	x2, x26
     248:	mov	x3, x21
     24c:	bl	0 <grub_disk_read>
     250:	str	xzr, [x19, #48]
     254:	adrp	x0, 0 <grub_mod_init-0x17a0>
     258:	ldr	x0, [x0]
     25c:	ldr	w0, [x0]
     260:	cbnz	w0, 2fc <grub_mod_init-0x14a4>
     264:	add	x27, x27, x21
     268:	add	x25, x25, x21
     26c:	add	w20, w20, #0x1
     270:	subs	x24, x24, x21
     274:	b.eq	2b8 <grub_mod_init-0x14e8>  // b.none
     278:	ldr	w3, [x28, #28]
     27c:	mov	x26, #0x0                   	// #0
     280:	ldr	x1, [x28, #8]
     284:	b	e4 <grub_mod_init-0x16bc>
     288:	ldr	w25, [x1, #28]
     28c:	mov	x4, x6
     290:	ldr	w1, [x1, #24]
     294:	lsl	w25, w25, #9
     298:	sub	x25, x25, x2
     29c:	cmp	x5, x25
     2a0:	csel	x25, x5, x25, ls  // ls = plast
     2a4:	mov	x3, x25
     2a8:	bl	0 <grub_disk_read>
     2ac:	cbz	w0, 1f4 <grub_mod_init-0x15ac>
     2b0:	mov	x25, #0xffffffffffffffff    	// #-1
     2b4:	b	1f4 <grub_mod_init-0x15ac>
     2b8:	mov	x0, x25
     2bc:	ldp	x19, x20, [sp, #16]
     2c0:	ldp	x21, x22, [sp, #32]
     2c4:	ldp	x23, x24, [sp, #48]
     2c8:	ldp	x25, x26, [sp, #64]
     2cc:	ldp	x27, x28, [sp, #80]
     2d0:	ldp	x29, x30, [sp], #144
     2d4:	ret
     2d8:	mov	x25, #0xffffffffffffffff    	// #-1
     2dc:	mov	x0, x25
     2e0:	ldp	x19, x20, [sp, #16]
     2e4:	ldp	x21, x22, [sp, #32]
     2e8:	ldp	x23, x24, [sp, #48]
     2ec:	ldp	x25, x26, [sp, #64]
     2f0:	ldp	x27, x28, [sp, #80]
     2f4:	ldp	x29, x30, [sp], #144
     2f8:	ret
     2fc:	mov	x25, #0xffffffffffffffff    	// #-1
     300:	ldp	x19, x20, [sp, #16]
     304:	ldp	x21, x22, [sp, #32]
     308:	b	1f4 <grub_mod_init-0x15ac>
     30c:	mov	x25, #0x0                   	// #0
     310:	ldp	x19, x20, [sp, #16]
     314:	b	1f4 <grub_mod_init-0x15ac>
	...
     340:	mov	x3, x0
     344:	mov	x6, x1
     348:	ldr	x0, [x0, #8]
     34c:	mov	x5, x2
     350:	ldp	x1, x2, [x3, #80]
     354:	ldr	x0, [x0]
     358:	ldr	x4, [x3, #24]
     35c:	ldr	x3, [x3, #96]
     360:	b	58 <grub_mod_init-0x1748>
     364:	nop
     368:	stp	x29, x30, [sp, #-96]!
     36c:	mov	x29, sp
     370:	stp	x19, x20, [sp, #16]
     374:	mov	x19, x1
     378:	stp	x21, x22, [sp, #32]
     37c:	mov	w21, #0xffffffff            	// #-1
     380:	mov	w22, w21
     384:	mov	w20, w21
     388:	stp	x23, x24, [sp, #48]
     38c:	add	x24, x1, #0xe
     390:	stp	x25, x26, [sp, #64]
     394:	mov	x26, x0
     398:	add	x25, x1, #0x1
     39c:	mov	w23, #0xd                   	// #13
     3a0:	ldr	x4, [x19, #48]
     3a4:	mov	x6, x19
     3a8:	ldr	x0, [x26]
     3ac:	add	x4, x4, #0x20
     3b0:	str	x4, [x19, #48]
     3b4:	mov	x1, x26
     3b8:	mov	x5, #0x20                  	// #32
     3bc:	mov	x3, #0x0                   	// #0
     3c0:	mov	x2, #0x0                   	// #0
     3c4:	bl	58 <grub_mod_init-0x1748>
     3c8:	cmp	x0, #0x20
     3cc:	b.ne	a40 <grub_mod_init-0xd60>  // b.any
     3d0:	ldrb	w9, [x19]
     3d4:	cbz	w9, a40 <grub_mod_init-0xd60>
     3d8:	ldrb	w10, [x19, #11]
     3dc:	cmp	w10, #0xf
     3e0:	b.eq	78c <grub_mod_init-0x1014>  // b.none
     3e4:	cmp	w9, #0xe5
     3e8:	b.eq	3a0 <grub_mod_init-0x1400>  // b.none
     3ec:	tst	w10, #0xc0
     3f0:	b.ne	3a0 <grub_mod_init-0x1400>  // b.any
     3f4:	cmp	w9, #0x5
     3f8:	b.ne	408 <grub_mod_init-0x1398>  // b.any
     3fc:	mov	w0, #0xffffffe5            	// #-27
     400:	mov	w9, #0xe5                  	// #229
     404:	strb	w0, [x19]
     408:	cmp	w22, #0x0
     40c:	ccmn	w20, #0x1, #0x4, eq  // eq = none
     410:	ldr	x8, [x19, #32]
     414:	b.eq	4e8 <grub_mod_init-0x12b8>  // b.none
     418:	ldrb	w0, [x19]
     41c:	ldrb	w1, [x19, #1]
     420:	ldrb	w6, [x19, #2]
     424:	lsl	w2, w0, #7
     428:	ldrb	w5, [x19, #3]
     42c:	orr	w0, w2, w0, lsr #1
     430:	ldrb	w4, [x19, #4]
     434:	add	w0, w0, w1
     438:	ldrb	w3, [x19, #5]
     43c:	ldrb	w2, [x19, #6]
     440:	ubfx	x1, x0, #1, #7
     444:	ubfiz	w7, w0, #7, #1
     448:	orr	w7, w7, w1
     44c:	ldrb	w1, [x19, #7]
     450:	add	w7, w7, w6
     454:	ldrb	w0, [x19, #8]
     458:	ldrb	w11, [x19, #9]
     45c:	ubfx	x12, x7, #1, #7
     460:	ubfiz	w6, w7, #7, #1
     464:	orr	w6, w6, w12
     468:	ldrb	w7, [x19, #10]
     46c:	add	w6, w6, w5
     470:	ubfx	x12, x6, #1, #7
     474:	ubfiz	w5, w6, #7, #1
     478:	orr	w5, w5, w12
     47c:	add	w5, w5, w4
     480:	ubfx	x6, x5, #1, #7
     484:	ubfiz	w4, w5, #7, #1
     488:	orr	w4, w4, w6
     48c:	add	w4, w4, w3
     490:	ubfx	x5, x4, #1, #7
     494:	ubfiz	w3, w4, #7, #1
     498:	orr	w3, w3, w5
     49c:	add	w3, w3, w2
     4a0:	ubfx	x4, x3, #1, #7
     4a4:	ubfiz	w2, w3, #7, #1
     4a8:	orr	w2, w2, w4
     4ac:	add	w2, w2, w1
     4b0:	ubfx	x3, x2, #1, #7
     4b4:	ubfiz	w1, w2, #7, #1
     4b8:	orr	w1, w1, w3
     4bc:	add	w1, w1, w0
     4c0:	ubfx	x2, x1, #1, #7
     4c4:	ubfiz	w0, w1, #7, #1
     4c8:	orr	w0, w0, w2
     4cc:	add	w0, w0, w11
     4d0:	ubfx	x1, x0, #1, #7
     4d4:	ubfiz	w0, w0, #7, #1
     4d8:	orr	w0, w0, w1
     4dc:	add	w0, w0, w7
     4e0:	cmp	w20, w0, uxtb
     4e4:	b.eq	970 <grub_mod_init-0xe30>  // b.none
     4e8:	tbnz	w10, #3, 7b8 <grub_mod_init-0xfe8>
     4ec:	mov	x2, x8
     4f0:	sub	w1, w9, #0x41
     4f4:	add	w0, w9, #0x20
     4f8:	cmp	w1, #0x1a
     4fc:	and	w0, w0, #0xff
     500:	csel	w9, w0, w9, cc  // cc = lo, ul, last
     504:	strb	w9, [x2], #1
     508:	ldrb	w0, [x19, #1]
     50c:	cbz	w0, c00 <grub_mod_init-0xba0>
     510:	sub	w2, w0, #0x41
     514:	add	w1, w0, #0x20
     518:	and	w1, w1, #0xff
     51c:	cmp	w2, #0x1a
     520:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     524:	strb	w0, [x8, #1]
     528:	add	x1, x8, #0x2
     52c:	ldrb	w0, [x19, #2]
     530:	cbz	w0, c64 <grub_mod_init-0xb3c>
     534:	sub	w2, w0, #0x41
     538:	add	w1, w0, #0x20
     53c:	and	w1, w1, #0xff
     540:	cmp	w2, #0x1a
     544:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     548:	strb	w0, [x8, #2]
     54c:	add	x1, x8, #0x3
     550:	ldrb	w0, [x19, #3]
     554:	cbz	w0, c98 <grub_mod_init-0xb08>
     558:	sub	w2, w0, #0x41
     55c:	add	w1, w0, #0x20
     560:	and	w1, w1, #0xff
     564:	cmp	w2, #0x1a
     568:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     56c:	strb	w0, [x8, #3]
     570:	add	x1, x8, #0x4
     574:	ldrb	w0, [x19, #4]
     578:	cbz	w0, ccc <grub_mod_init-0xad4>
     57c:	sub	w2, w0, #0x41
     580:	add	w1, w0, #0x20
     584:	and	w1, w1, #0xff
     588:	cmp	w2, #0x1a
     58c:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     590:	strb	w0, [x8, #4]
     594:	add	x1, x8, #0x5
     598:	ldrb	w0, [x19, #5]
     59c:	cbz	w0, ce4 <grub_mod_init-0xabc>
     5a0:	sub	w2, w0, #0x41
     5a4:	add	w1, w0, #0x20
     5a8:	cmp	w2, #0x1a
     5ac:	and	w1, w1, #0xff
     5b0:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     5b4:	strb	w0, [x8, #5]
     5b8:	add	x2, x8, #0x6
     5bc:	ldrb	w0, [x19, #6]
     5c0:	mov	x1, x2
     5c4:	cbz	w0, d14 <grub_mod_init-0xa8c>
     5c8:	sub	w3, w0, #0x41
     5cc:	add	w1, w0, #0x20
     5d0:	cmp	w3, #0x1a
     5d4:	and	w1, w1, #0xff
     5d8:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     5dc:	strb	w0, [x8, #6]
     5e0:	add	x3, x8, #0x7
     5e4:	ldrb	w0, [x19, #7]
     5e8:	mov	x1, x3
     5ec:	cbz	w0, a20 <grub_mod_init-0xd80>
     5f0:	sub	w4, w0, #0x41
     5f4:	add	w1, w0, #0x20
     5f8:	cmp	w4, #0x1a
     5fc:	and	w1, w1, #0xff
     600:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     604:	strb	w0, [x8, #7]
     608:	add	x8, x8, #0x8
     60c:	ldrb	w0, [x19, #7]
     610:	cmp	w0, #0x20
     614:	b.ne	a38 <grub_mod_init-0xd68>  // b.any
     618:	ldrb	w1, [x19, #6]
     61c:	mov	x8, x2
     620:	mov	w0, #0x6                   	// #6
     624:	cmp	w1, #0x20
     628:	b.ne	a30 <grub_mod_init-0xd70>  // b.any
     62c:	sub	w1, w0, #0x1
     630:	ldrb	w2, [x19, w1, uxtw]
     634:	cmp	w2, #0x20
     638:	b.ne	ab4 <grub_mod_init-0xcec>  // b.any
     63c:	sub	x2, x8, #0x1
     640:	cbz	w1, d04 <grub_mod_init-0xa9c>
     644:	sub	w3, w0, #0x2
     648:	ldrb	w4, [x19, w3, uxtw]
     64c:	cmp	w4, #0x20
     650:	b.ne	bf4 <grub_mod_init-0xbac>  // b.any
     654:	sub	x4, x8, #0x2
     658:	cbz	w3, d40 <grub_mod_init-0xa60>
     65c:	sub	w1, w0, #0x3
     660:	ldrb	w2, [x19, w1, uxtw]
     664:	cmp	w2, #0x20
     668:	b.ne	aac <grub_mod_init-0xcf4>  // b.any
     66c:	sub	x2, x8, #0x3
     670:	cbz	w1, bd4 <grub_mod_init-0xbcc>
     674:	sub	w3, w0, #0x4
     678:	ldrb	w4, [x19, w3, uxtw]
     67c:	cmp	w4, #0x20
     680:	b.ne	bf4 <grub_mod_init-0xbac>  // b.any
     684:	sub	x1, x8, #0x4
     688:	cbz	w3, d58 <grub_mod_init-0xa48>
     68c:	sub	w0, w0, #0x5
     690:	ldrb	w2, [x19, w0, uxtw]
     694:	cmp	w2, #0x20
     698:	b.ne	ac4 <grub_mod_init-0xcdc>  // b.any
     69c:	sub	x2, x8, #0x5
     6a0:	cbz	w0, d60 <grub_mod_init-0xa40>
     6a4:	ldrb	w0, [x19]
     6a8:	cmp	w0, #0x20
     6ac:	b.ne	da0 <grub_mod_init-0xa00>  // b.any
     6b0:	sub	x8, x8, #0x6
     6b4:	ldrb	w0, [x8]
     6b8:	cmp	w0, #0x2e
     6bc:	b.eq	be0 <grub_mod_init-0xbc0>  // b.none
     6c0:	mov	w0, #0x2e                  	// #46
     6c4:	strb	w0, [x8]
     6c8:	ldrb	w0, [x19, #8]
     6cc:	cbz	w0, 768 <grub_mod_init-0x1038>
     6d0:	sub	w3, w0, #0x41
     6d4:	add	w1, w0, #0x20
     6d8:	cmp	w3, #0x1a
     6dc:	and	w1, w1, #0xff
     6e0:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     6e4:	strb	w0, [x2]
     6e8:	add	x8, x2, #0x1
     6ec:	ldrb	w0, [x19, #9]
     6f0:	mov	x4, x8
     6f4:	cbz	w0, c28 <grub_mod_init-0xb78>
     6f8:	sub	w3, w0, #0x41
     6fc:	add	w1, w0, #0x20
     700:	cmp	w3, #0x1a
     704:	and	w1, w1, #0xff
     708:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     70c:	strb	w0, [x2, #1]
     710:	add	x8, x2, #0x2
     714:	ldrb	w0, [x19, #10]
     718:	mov	x3, x8
     71c:	cbz	w0, c54 <grub_mod_init-0xb4c>
     720:	sub	w5, w0, #0x41
     724:	add	w1, w0, #0x20
     728:	cmp	w5, #0x1a
     72c:	and	w1, w1, #0xff
     730:	csel	w0, w1, w0, cc  // cc = lo, ul, last
     734:	strb	w0, [x2, #2]
     738:	add	x8, x2, #0x3
     73c:	ldrb	w0, [x19, #10]
     740:	cmp	w0, #0x20
     744:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     748:	ldrb	w0, [x19, #9]
     74c:	mov	x8, x3
     750:	cmp	w0, #0x20
     754:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     758:	ldrb	w0, [x19, #8]
     75c:	mov	x8, x4
     760:	cmp	w0, #0x20
     764:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     768:	sub	x8, x2, #0x1
     76c:	strb	wzr, [x8]
     770:	mov	w0, #0x0                   	// #0
     774:	ldp	x19, x20, [sp, #16]
     778:	ldp	x21, x22, [sp, #32]
     77c:	ldp	x23, x24, [sp, #48]
     780:	ldp	x25, x26, [sp, #64]
     784:	ldp	x29, x30, [sp], #96
     788:	ret
     78c:	tbz	w9, #6, 7a8 <grub_mod_init-0xff8>
     790:	ldrb	w20, [x19, #13]
     794:	ands	w22, w9, #0x3f
     798:	b.ne	b04 <grub_mod_init-0xc9c>  // b.any
     79c:	mov	w21, #0x0                   	// #0
     7a0:	mov	w20, #0xffffffff            	// #-1
     7a4:	b	3a0 <grub_mod_init-0x1400>
     7a8:	cmp	w9, w22
     7ac:	b.eq	95c <grub_mod_init-0xe44>  // b.none
     7b0:	mov	w20, #0xffffffff            	// #-1
     7b4:	b	3a0 <grub_mod_init-0x1400>
     7b8:	ldrb	w0, [x19]
     7bc:	cbz	w0, 76c <grub_mod_init-0x1034>
     7c0:	mov	x1, x8
     7c4:	strb	w0, [x1], #1
     7c8:	ldrb	w0, [x19, #1]
     7cc:	cbz	w0, c3c <grub_mod_init-0xb64>
     7d0:	strb	w0, [x8, #1]
     7d4:	add	x1, x8, #0x2
     7d8:	ldrb	w0, [x19, #2]
     7dc:	cbz	w0, c4c <grub_mod_init-0xb54>
     7e0:	strb	w0, [x8, #2]
     7e4:	add	x1, x8, #0x3
     7e8:	ldrb	w0, [x19, #3]
     7ec:	cbz	w0, cb4 <grub_mod_init-0xaec>
     7f0:	strb	w0, [x8, #3]
     7f4:	add	x1, x8, #0x4
     7f8:	ldrb	w0, [x19, #4]
     7fc:	cbz	w0, cc4 <grub_mod_init-0xadc>
     800:	strb	w0, [x8, #4]
     804:	add	x1, x8, #0x5
     808:	ldrb	w0, [x19, #5]
     80c:	cbz	w0, cfc <grub_mod_init-0xaa4>
     810:	strb	w0, [x8, #5]
     814:	add	x1, x8, #0x6
     818:	ldrb	w0, [x19, #6]
     81c:	cbz	w0, d30 <grub_mod_init-0xa70>
     820:	strb	w0, [x8, #6]
     824:	add	x1, x8, #0x7
     828:	ldrb	w0, [x19, #7]
     82c:	cbz	w0, d38 <grub_mod_init-0xa68>
     830:	strb	w0, [x8, #7]
     834:	add	x1, x8, #0x8
     838:	ldrb	w0, [x19, #8]
     83c:	cbz	w0, d48 <grub_mod_init-0xa58>
     840:	strb	w0, [x8, #8]
     844:	add	x1, x8, #0x9
     848:	mov	x2, x1
     84c:	ldrb	w0, [x19, #9]
     850:	cbz	w0, d50 <grub_mod_init-0xa50>
     854:	strb	w0, [x8, #9]
     858:	add	x1, x8, #0xa
     85c:	ldrb	w0, [x19, #10]
     860:	cbz	w0, b98 <grub_mod_init-0xc08>
     864:	strb	w0, [x8, #10]
     868:	add	x8, x8, #0xb
     86c:	ldrb	w0, [x19, #10]
     870:	cmp	w0, #0x20
     874:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     878:	ldrb	w3, [x19, #9]
     87c:	mov	w0, #0x9                   	// #9
     880:	cmp	w3, #0x20
     884:	b.ne	cbc <grub_mod_init-0xae4>  // b.any
     888:	sub	w1, w0, #0x1
     88c:	ldrb	w3, [x19, w1, uxtw]
     890:	cmp	w3, #0x20
     894:	b.ne	bcc <grub_mod_init-0xbd4>  // b.any
     898:	sub	x8, x2, #0x1
     89c:	cbz	w1, 76c <grub_mod_init-0x1034>
     8a0:	sub	w1, w0, #0x2
     8a4:	ldrb	w3, [x19, w1, uxtw]
     8a8:	cmp	w3, #0x20
     8ac:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     8b0:	sub	x8, x2, #0x2
     8b4:	cbz	w1, 76c <grub_mod_init-0x1034>
     8b8:	sub	w1, w0, #0x3
     8bc:	ldrb	w3, [x19, w1, uxtw]
     8c0:	cmp	w3, #0x20
     8c4:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     8c8:	sub	x8, x2, #0x3
     8cc:	cbz	w1, 76c <grub_mod_init-0x1034>
     8d0:	sub	w1, w0, #0x4
     8d4:	ldrb	w3, [x19, w1, uxtw]
     8d8:	cmp	w3, #0x20
     8dc:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     8e0:	sub	x8, x2, #0x4
     8e4:	cbz	w1, 76c <grub_mod_init-0x1034>
     8e8:	sub	w1, w0, #0x5
     8ec:	ldrb	w3, [x19, w1, uxtw]
     8f0:	cmp	w3, #0x20
     8f4:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     8f8:	sub	x8, x2, #0x5
     8fc:	cbz	w1, 76c <grub_mod_init-0x1034>
     900:	sub	w1, w0, #0x6
     904:	ldrb	w3, [x19, w1, uxtw]
     908:	cmp	w3, #0x20
     90c:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     910:	sub	x8, x2, #0x6
     914:	cbz	w1, 76c <grub_mod_init-0x1034>
     918:	sub	w1, w0, #0x7
     91c:	ldrb	w3, [x19, w1, uxtw]
     920:	cmp	w3, #0x20
     924:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     928:	sub	x8, x2, #0x7
     92c:	cbz	w1, 76c <grub_mod_init-0x1034>
     930:	sub	w0, w0, #0x8
     934:	ldrb	w1, [x19, w0, uxtw]
     938:	cmp	w1, #0x20
     93c:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     940:	sub	x8, x2, #0x8
     944:	cbz	w0, 76c <grub_mod_init-0x1034>
     948:	ldrb	w0, [x19]
     94c:	sub	x2, x2, #0x9
     950:	cmp	w0, #0x20
     954:	csel	x8, x2, x8, eq  // eq = none
     958:	b	76c <grub_mod_init-0x1034>
     95c:	ldrb	w0, [x19, #13]
     960:	cmp	w0, w20
     964:	b.ne	7b0 <grub_mod_init-0xff0>  // b.any
     968:	str	x27, [sp, #80]
     96c:	b	b0c <grub_mod_init-0xc94>
     970:	mov	w0, #0xd                   	// #13
     974:	ldr	x5, [x19, #40]
     978:	mul	w21, w21, w0
     97c:	sxtw	x3, w21
     980:	sub	x3, x3, #0x1
     984:	cbz	w21, 76c <grub_mod_init-0x1034>
     988:	mov	w4, #0x0                   	// #0
     98c:	mov	w9, #0xffff2800            	// #-55296
     990:	mov	w7, #0xffff2400            	// #-56320
     994:	mov	w10, #0x3f                  	// #63
     998:	mov	w11, #0x2400                	// #9216
     99c:	b	a00 <grub_mod_init-0xda0>
     9a0:	add	w2, w0, w7
     9a4:	cmp	w2, #0x3ff
     9a8:	b.hi	aa0 <grub_mod_init-0xd00>  // b.pmore
     9ac:	add	w2, w4, w9
     9b0:	mov	x5, x1
     9b4:	add	x8, x8, #0x4
     9b8:	mov	w4, #0x0                   	// #0
     9bc:	add	w0, w0, w2, lsl #10
     9c0:	add	w0, w0, w11
     9c4:	and	w1, w0, #0x3f
     9c8:	lsr	w6, w0, #18
     9cc:	ubfx	x2, x0, #12, #6
     9d0:	ubfx	x0, x0, #6, #6
     9d4:	orr	w6, w6, #0xfffffff0
     9d8:	orr	w2, w2, #0xffffff80
     9dc:	orr	w0, w0, #0xffffff80
     9e0:	orr	w1, w1, #0xffffff80
     9e4:	sturb	w6, [x8, #-4]
     9e8:	sturb	w2, [x8, #-3]
     9ec:	sturb	w0, [x8, #-2]
     9f0:	sturb	w1, [x8, #-1]
     9f4:	sub	x3, x3, #0x1
     9f8:	cmn	x3, #0x1
     9fc:	b.eq	76c <grub_mod_init-0x1034>  // b.none
     a00:	mov	x1, x5
     a04:	ldrh	w0, [x1], #2
     a08:	cbnz	w4, 9a0 <grub_mod_init-0xe00>
     a0c:	cmp	w0, #0x7f
     a10:	b.hi	a70 <grub_mod_init-0xd30>  // b.pmore
     a14:	mov	x5, x1
     a18:	strb	w0, [x8], #1
     a1c:	b	9f4 <grub_mod_init-0xdac>
     a20:	ldrb	w0, [x19, #6]
     a24:	mov	w4, #0x6                   	// #6
     a28:	cmp	w0, #0x20
     a2c:	b.eq	c78 <grub_mod_init-0xb28>  // b.none
     a30:	mov	x8, x3
     a34:	nop
     a38:	add	x2, x8, #0x1
     a3c:	b	6c0 <grub_mod_init-0x10e0>
     a40:	adrp	x0, 0 <grub_mod_init-0x17a0>
     a44:	mov	w1, #0x2c                  	// #44
     a48:	ldp	x19, x20, [sp, #16]
     a4c:	ldr	x0, [x0]
     a50:	ldp	x21, x22, [sp, #32]
     a54:	ldr	w0, [x0]
     a58:	ldp	x23, x24, [sp, #48]
     a5c:	cmp	w0, #0x0
     a60:	csel	w0, w0, w1, ne  // ne = any
     a64:	ldp	x25, x26, [sp, #64]
     a68:	ldp	x29, x30, [sp], #96
     a6c:	ret
     a70:	cmp	w0, #0x7ff
     a74:	b.hi	ae0 <grub_mod_init-0xcc0>  // b.pmore
     a78:	mov	x2, x8
     a7c:	lsr	w6, w0, #6
     a80:	orr	w6, w6, #0xffffffc0
     a84:	and	w0, w0, #0x3f
     a88:	orr	w0, w0, #0xffffff80
     a8c:	mov	x5, x1
     a90:	strb	w6, [x2], #2
     a94:	strb	w0, [x8, #1]
     a98:	mov	x8, x2
     a9c:	b	9f4 <grub_mod_init-0xdac>
     aa0:	mov	w4, #0x0                   	// #0
     aa4:	strb	w10, [x8], #1
     aa8:	b	9f4 <grub_mod_init-0xdac>
     aac:	mov	w0, w3
     ab0:	mov	x8, x4
     ab4:	cmp	w0, #0x2
     ab8:	b.hi	a38 <grub_mod_init-0xd68>  // b.pmore
     abc:	mov	x1, x8
     ac0:	mov	w3, w0
     ac4:	ldrb	w0, [x1]
     ac8:	cmp	w0, #0x2e
     acc:	b.ne	c1c <grub_mod_init-0xb84>  // b.any
     ad0:	cmp	w3, #0x2
     ad4:	b.eq	d84 <grub_mod_init-0xa1c>  // b.none
     ad8:	mov	x2, x1
     adc:	b	6c8 <grub_mod_init-0x10d8>
     ae0:	add	w2, w0, w9
     ae4:	cmp	w2, #0x3ff
     ae8:	b.ls	be8 <grub_mod_init-0xbb8>  // b.plast
     aec:	add	w2, w0, w7
     af0:	cmp	w2, #0x3ff
     af4:	b.hi	b68 <grub_mod_init-0xc38>  // b.pmore
     af8:	mov	x5, x1
     afc:	strb	w10, [x8], #1
     b00:	b	9f4 <grub_mod_init-0xdac>
     b04:	mov	w21, w22
     b08:	str	x27, [sp, #80]
     b0c:	sub	w22, w22, #0x1
     b10:	mov	x1, x25
     b14:	ldr	x3, [x19, #40]
     b18:	mov	x2, #0xa                   	// #10
     b1c:	mul	w0, w22, w23
     b20:	sxtw	x27, w0
     b24:	add	x0, x3, w0, sxtw #1
     b28:	bl	0 <grub_memmove>
     b2c:	add	x27, x27, #0x5
     b30:	ldr	x0, [x19, #40]
     b34:	lsl	x27, x27, #1
     b38:	mov	x1, x24
     b3c:	mov	x2, #0xc                   	// #12
     b40:	add	x0, x0, x27
     b44:	bl	0 <grub_memmove>
     b48:	ldr	x0, [x19, #40]
     b4c:	add	x27, x27, #0xc
     b50:	add	x1, x19, #0x1c
     b54:	mov	x2, #0x4                   	// #4
     b58:	add	x0, x0, x27
     b5c:	bl	0 <grub_memmove>
     b60:	ldr	x27, [sp, #80]
     b64:	b	3a0 <grub_mod_init-0x1400>
     b68:	lsr	w6, w0, #12
     b6c:	ubfx	x2, x0, #6, #6
     b70:	and	w0, w0, #0x3f
     b74:	mov	x5, x1
     b78:	orr	w6, w6, #0xffffffe0
     b7c:	orr	w1, w2, #0xffffff80
     b80:	orr	w0, w0, #0xffffff80
     b84:	add	x8, x8, #0x3
     b88:	sturb	w6, [x8, #-3]
     b8c:	sturb	w1, [x8, #-2]
     b90:	sturb	w0, [x8, #-1]
     b94:	b	9f4 <grub_mod_init-0xdac>
     b98:	mov	w0, #0xa                   	// #10
     b9c:	nop
     ba0:	sub	w0, w0, #0x1
     ba4:	ldrb	w2, [x19, w0, uxtw]
     ba8:	cmp	w2, #0x20
     bac:	b.ne	cbc <grub_mod_init-0xae4>  // b.any
     bb0:	sub	w0, w0, #0x1
     bb4:	sub	x8, x1, #0x1
     bb8:	ldrb	w1, [x19, w0, uxtw]
     bbc:	cmp	w1, #0x20
     bc0:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     bc4:	sub	x2, x8, #0x1
     bc8:	cbnz	w0, 888 <grub_mod_init-0xf18>
     bcc:	mov	x8, x2
     bd0:	b	76c <grub_mod_init-0x1034>
     bd4:	mov	x8, x2
     bd8:	mov	x2, x4
     bdc:	b	6b4 <grub_mod_init-0x10ec>
     be0:	mov	x2, x8
     be4:	b	6c8 <grub_mod_init-0x10d8>
     be8:	mov	w4, w0
     bec:	mov	x5, x1
     bf0:	b	9f4 <grub_mod_init-0xdac>
     bf4:	mov	w0, w1
     bf8:	mov	x8, x2
     bfc:	b	ab4 <grub_mod_init-0xcec>
     c00:	ldrb	w0, [x19]
     c04:	cmp	w0, #0x20
     c08:	b.eq	6b4 <grub_mod_init-0x10ec>  // b.none
     c0c:	ldrb	w0, [x8, #1]
     c10:	mov	x1, x2
     c14:	cmp	w0, #0x2e
     c18:	b.eq	6c8 <grub_mod_init-0x10d8>  // b.none
     c1c:	add	x2, x1, #0x1
     c20:	mov	x8, x1
     c24:	b	6c0 <grub_mod_init-0x10e0>
     c28:	ldrb	w0, [x19, #8]
     c2c:	cmp	w0, #0x20
     c30:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     c34:	sub	x8, x2, #0x1
     c38:	b	76c <grub_mod_init-0x1034>
     c3c:	ldrb	w0, [x19]
     c40:	cmp	w0, #0x20
     c44:	csel	x8, x8, x1, eq  // eq = none
     c48:	b	76c <grub_mod_init-0x1034>
     c4c:	mov	w0, #0x2                   	// #2
     c50:	b	ba0 <grub_mod_init-0xc00>
     c54:	ldrb	w0, [x19, #9]
     c58:	cmp	w0, #0x20
     c5c:	b.ne	76c <grub_mod_init-0x1034>  // b.any
     c60:	b	758 <grub_mod_init-0x1048>
     c64:	ldrb	w0, [x19, #1]
     c68:	mov	w4, #0x1                   	// #1
     c6c:	cmp	w0, #0x20
     c70:	b.ne	d78 <grub_mod_init-0xa28>  // b.any
     c74:	nop
     c78:	sub	w0, w4, #0x1
     c7c:	sub	x2, x1, #0x1
     c80:	ldrb	w3, [x19, w0, uxtw]
     c84:	cmp	w3, #0x20
     c88:	b.ne	d6c <grub_mod_init-0xa34>  // b.any
     c8c:	sub	x8, x1, #0x2
     c90:	cbnz	w0, 62c <grub_mod_init-0x1174>
     c94:	b	6b4 <grub_mod_init-0x10ec>
     c98:	ldrb	w0, [x19, #2]
     c9c:	mov	w4, #0x2                   	// #2
     ca0:	cmp	w0, #0x20
     ca4:	b.eq	c78 <grub_mod_init-0xb28>  // b.none
     ca8:	mov	x8, x1
     cac:	add	x2, x8, #0x1
     cb0:	b	6c0 <grub_mod_init-0x10e0>
     cb4:	mov	w0, #0x3                   	// #3
     cb8:	b	ba0 <grub_mod_init-0xc00>
     cbc:	mov	x8, x1
     cc0:	b	76c <grub_mod_init-0x1034>
     cc4:	mov	w0, #0x4                   	// #4
     cc8:	b	ba0 <grub_mod_init-0xc00>
     ccc:	ldrb	w0, [x19, #3]
     cd0:	mov	w4, #0x3                   	// #3
     cd4:	cmp	w0, #0x20
     cd8:	b.eq	c78 <grub_mod_init-0xb28>  // b.none
     cdc:	mov	x8, x1
     ce0:	b	cac <grub_mod_init-0xaf4>
     ce4:	ldrb	w0, [x19, #4]
     ce8:	mov	w4, #0x4                   	// #4
     cec:	cmp	w0, #0x20
     cf0:	b.eq	c78 <grub_mod_init-0xb28>  // b.none
     cf4:	mov	x8, x1
     cf8:	b	cac <grub_mod_init-0xaf4>
     cfc:	mov	w0, #0x5                   	// #5
     d00:	b	ba0 <grub_mod_init-0xc00>
     d04:	mov	x0, x8
     d08:	mov	x8, x2
     d0c:	mov	x2, x0
     d10:	b	6b4 <grub_mod_init-0x10ec>
     d14:	ldrb	w0, [x19, #5]
     d18:	mov	x8, x2
     d1c:	mov	w4, #0x5                   	// #5
     d20:	cmp	w0, #0x20
     d24:	b.eq	c78 <grub_mod_init-0xb28>  // b.none
     d28:	add	x2, x8, #0x1
     d2c:	b	6c0 <grub_mod_init-0x10e0>
     d30:	mov	w0, #0x6                   	// #6
     d34:	b	ba0 <grub_mod_init-0xc00>
     d38:	mov	w0, #0x7                   	// #7
     d3c:	b	ba0 <grub_mod_init-0xc00>
     d40:	mov	x8, x4
     d44:	b	6b4 <grub_mod_init-0x10ec>
     d48:	mov	w0, #0x8                   	// #8
     d4c:	b	ba0 <grub_mod_init-0xc00>
     d50:	mov	w0, #0x9                   	// #9
     d54:	b	ba0 <grub_mod_init-0xc00>
     d58:	mov	x8, x1
     d5c:	b	6b4 <grub_mod_init-0x10ec>
     d60:	mov	x8, x2
     d64:	mov	x2, x1
     d68:	b	6b4 <grub_mod_init-0x10ec>
     d6c:	mov	w0, w4
     d70:	mov	x8, x2
     d74:	b	ab4 <grub_mod_init-0xcec>
     d78:	ldrb	w0, [x8, #2]
     d7c:	cmp	w0, #0x2e
     d80:	b.ne	c1c <grub_mod_init-0xb84>  // b.any
     d84:	ldrb	w0, [x1, #1]
     d88:	mov	x2, x1
     d8c:	cmp	w0, #0x2e
     d90:	b.eq	6c8 <grub_mod_init-0x10d8>  // b.none
     d94:	add	x2, x1, #0x1
     d98:	mov	x8, x1
     d9c:	b	6c0 <grub_mod_init-0x10e0>
     da0:	ldurb	w0, [x8, #-5]
     da4:	cmp	w0, #0x2e
     da8:	b.eq	6c8 <grub_mod_init-0x10d8>  // b.none
     dac:	mov	x1, x2
     db0:	b	c1c <grub_mod_init-0xb84>
     db4:	nop
	...
     dc0:	stp	x29, x30, [sp, #-144]!
     dc4:	mov	x29, sp
     dc8:	stp	x19, x20, [sp, #16]
     dcc:	cbz	x0, fbc <grub_mod_init-0x7e4>
     dd0:	mov	x20, x0
     dd4:	mov	x0, #0x34                  	// #52
     dd8:	bl	0 <grub_malloc>
     ddc:	mov	x19, x0
     de0:	cbz	x0, fbc <grub_mod_init-0x7e4>
     de4:	add	x4, sp, #0x30
     de8:	mov	x0, x20
     dec:	mov	x3, #0x5a                  	// #90
     df0:	mov	x2, #0x0                   	// #0
     df4:	mov	x1, #0x0                   	// #0
     df8:	bl	0 <grub_disk_read>
     dfc:	cbnz	w0, f90 <grub_mod_init-0x810>
     e00:	ldurh	w2, [sp, #59]
     e04:	mov	w1, w2
     e08:	cbz	w2, 1078 <grub_mod_init-0x728>
     e0c:	tbnz	w2, #0, 100c <grub_mod_init-0x794>
     e10:	mov	w5, #0x0                   	// #0
     e14:	nop
     e18:	mov	w4, w5
     e1c:	lsr	w1, w1, #1
     e20:	add	w5, w5, #0x1
     e24:	tbz	w1, #0, e18 <grub_mod_init-0x988>
     e28:	cmp	w1, #0x1
     e2c:	b.ne	1078 <grub_mod_init-0x728>  // b.any
     e30:	sub	w4, w4, #0x8
     e34:	cmp	w4, #0x6
     e38:	b.hi	1068 <grub_mod_init-0x738>  // b.pmore
     e3c:	str	w4, [x19]
     e40:	ldrb	w1, [sp, #61]
     e44:	cbz	w1, 1094 <grub_mod_init-0x70c>
     e48:	tbnz	w1, #0, 101c <grub_mod_init-0x784>
     e4c:	mov	w3, #0x0                   	// #0
     e50:	lsr	w1, w1, #1
     e54:	add	w3, w3, #0x1
     e58:	tbz	w1, #0, e50 <grub_mod_init-0x950>
     e5c:	cmp	w1, #0x1
     e60:	b.ne	1094 <grub_mod_init-0x70c>  // b.any
     e64:	str	w3, [x19, #32]
     e68:	cmp	w3, #0x19
     e6c:	b.gt	f90 <grub_mod_init-0x810>
     e70:	add	w3, w4, w3
     e74:	ldrh	w1, [sp, #62]
     e78:	str	w3, [x19, #32]
     e7c:	lsl	w1, w1, w4
     e80:	str	w1, [x19, #8]
     e84:	cbz	w1, f90 <grub_mod_init-0x810>
     e88:	ldrh	w8, [sp, #70]
     e8c:	cbnz	w8, fc4 <grub_mod_init-0x7dc>
     e90:	ldr	w6, [sp, #84]
     e94:	lsl	w6, w6, w4
     e98:	str	w6, [x19, #12]
     e9c:	cbz	w6, f90 <grub_mod_init-0x810>
     ea0:	ldurh	w0, [sp, #67]
     ea4:	cbz	w0, fd4 <grub_mod_init-0x7cc>
     ea8:	lsl	w0, w0, w4
     eac:	str	w0, [x19, #4]
     eb0:	ldrb	w9, [sp, #64]
     eb4:	cbz	w9, f90 <grub_mod_init-0x810>
     eb8:	ldurh	w11, [sp, #65]
     ebc:	and	x2, x2, #0xffff
     ec0:	sub	x2, x2, #0x1
     ec4:	mov	w10, #0x20                  	// #32
     ec8:	madd	w7, w9, w6, w1
     ecc:	umaddl	x2, w10, w11, x2
     ed0:	lsr	x2, x2, x5
     ed4:	lsl	x2, x2, x4
     ed8:	add	w5, w7, w2
     edc:	sub	w4, w0, w5
     ee0:	stp	w7, w2, [x19, #24]
     ee4:	lsr	w3, w4, w3
     ee8:	add	w3, w3, #0x2
     eec:	stp	w5, w3, [x19, #40]
     ef0:	cmp	w3, #0x2
     ef4:	b.ls	f90 <grub_mod_init-0x810>  // b.plast
     ef8:	cbnz	w8, fe8 <grub_mod_init-0x7b8>
     efc:	ldrh	w2, [sp, #88]
     f00:	mov	w3, #0xffffff8             	// #268435448
     f04:	ldr	w4, [sp, #92]
     f08:	stp	w10, w4, [x19, #16]
     f0c:	str	w3, [x19, #36]
     f10:	tbnz	w2, #7, 102c <grub_mod_init-0x774>
     f14:	ldrh	w2, [sp, #90]
     f18:	orr	w11, w2, w11
     f1c:	cbnz	w11, f90 <grub_mod_init-0x810>
     f20:	cmp	w0, w1
     f24:	b.ls	f90 <grub_mod_init-0x810>  // b.plast
     f28:	mov	x0, x20
     f2c:	add	x4, sp, #0x2c
     f30:	mov	x3, #0x4                   	// #4
     f34:	mov	x2, #0x0                   	// #0
     f38:	bl	0 <grub_disk_read>
     f3c:	cbnz	w0, f90 <grub_mod_init-0x810>
     f40:	ldr	w1, [x19, #16]
     f44:	ldr	w0, [sp, #44]
     f48:	cmp	w1, #0x20
     f4c:	b.eq	1058 <grub_mod_init-0x748>  // b.none
     f50:	cmp	w1, #0x10
     f54:	b.eq	1084 <grub_mod_init-0x71c>  // b.none
     f58:	and	w0, w0, #0xfff
     f5c:	mov	w3, #0xf00                 	// #3840
     f60:	str	w0, [sp, #44]
     f64:	ldrh	w2, [sp, #70]
     f68:	cbz	w2, 1070 <grub_mod_init-0x730>
     f6c:	ldur	w2, [sp, #87]
     f70:	ldrb	w1, [sp, #69]
     f74:	orr	w0, w0, #0x8
     f78:	str	w2, [x19, #48]
     f7c:	orr	w1, w1, w3
     f80:	orr	w1, w1, #0x8
     f84:	cmp	w0, w1
     f88:	b.eq	fac <grub_mod_init-0x7f4>  // b.none
     f8c:	nop
     f90:	mov	x0, x19
     f94:	bl	0 <grub_free>
     f98:	adrp	x1, 0 <grub_mod_init-0x17a0>
     f9c:	mov	w0, #0x9                   	// #9
     fa0:	mov	x19, #0x0                   	// #0
     fa4:	ldr	x1, [x1]
     fa8:	bl	0 <grub_error>
     fac:	mov	x0, x19
     fb0:	ldp	x19, x20, [sp, #16]
     fb4:	ldp	x29, x30, [sp], #144
     fb8:	ret
     fbc:	mov	x19, #0x0                   	// #0
     fc0:	b	f90 <grub_mod_init-0x810>
     fc4:	ldurh	w0, [sp, #67]
     fc8:	lsl	w6, w8, w4
     fcc:	str	w6, [x19, #12]
     fd0:	cbnz	w0, ea8 <grub_mod_init-0x8f8>
     fd4:	ldr	w0, [sp, #80]
     fd8:	lsl	w0, w0, w4
     fdc:	str	w0, [x19, #4]
     fe0:	cbnz	w0, eb0 <grub_mod_init-0x8f0>
     fe4:	b	f90 <grub_mod_init-0x810>
     fe8:	mov	w2, #0xffffffff            	// #-1
     fec:	str	w2, [x19, #20]
     ff0:	cmp	w3, #0xff7
     ff4:	b.hi	1044 <grub_mod_init-0x75c>  // b.pmore
     ff8:	mov	w3, #0xc                   	// #12
     ffc:	mov	w2, #0xff8                 	// #4088
    1000:	str	w3, [x19, #16]
    1004:	str	w2, [x19, #36]
    1008:	b	f20 <grub_mod_init-0x880>
    100c:	cmp	w2, #0x1
    1010:	b.ne	1078 <grub_mod_init-0x728>  // b.any
    1014:	str	wzr, [x19]
    1018:	b	f90 <grub_mod_init-0x810>
    101c:	cmp	w1, #0x1
    1020:	b.ne	1094 <grub_mod_init-0x70c>  // b.any
    1024:	mov	w3, w4
    1028:	b	e74 <grub_mod_init-0x92c>
    102c:	and	w2, w2, #0xf
    1030:	cmp	w9, w2
    1034:	b.cc	f90 <grub_mod_init-0x810>  // b.lo, b.ul, b.last
    1038:	madd	w1, w2, w6, w1
    103c:	str	w1, [x19, #8]
    1040:	b	f14 <grub_mod_init-0x88c>
    1044:	mov	w3, #0x10                  	// #16
    1048:	mov	w2, #0xfff8                	// #65528
    104c:	str	w3, [x19, #16]
    1050:	str	w2, [x19, #36]
    1054:	b	f20 <grub_mod_init-0x880>
    1058:	and	w0, w0, #0xfffffff
    105c:	mov	w3, #0xfffff00             	// #268435200
    1060:	str	w0, [sp, #44]
    1064:	b	f64 <grub_mod_init-0x83c>
    1068:	str	w5, [x19]
    106c:	b	f90 <grub_mod_init-0x810>
    1070:	ldur	w2, [sp, #115]
    1074:	b	f70 <grub_mod_init-0x830>
    1078:	mov	w0, #0xffffffff            	// #-1
    107c:	str	w0, [x19]
    1080:	b	f90 <grub_mod_init-0x810>
    1084:	and	w0, w0, #0xffff
    1088:	mov	w3, #0xff00                	// #65280
    108c:	str	w0, [sp, #44]
    1090:	b	f64 <grub_mod_init-0x83c>
    1094:	mov	w0, #0xffffffff            	// #-1
    1098:	str	w0, [x19, #32]
    109c:	b	f90 <grub_mod_init-0x810>
	...
    10a8:	stp	x29, x30, [sp, #-48]!
    10ac:	adrp	x2, 0 <grub_mod_init-0x17a0>
    10b0:	mov	x29, sp
    10b4:	stp	x19, x20, [sp, #16]
    10b8:	mov	x20, x1
    10bc:	ldr	x19, [x0]
    10c0:	str	x21, [sp, #32]
    10c4:	ldr	x21, [x2]
    10c8:	ldr	x0, [x21]
    10cc:	bl	0 <grub_dl_ref>
    10d0:	mov	x0, x19
    10d4:	bl	dc0 <grub_mod_init-0x9e0>
    10d8:	mov	x19, x0
    10dc:	cbz	x0, 1160 <grub_mod_init-0x640>
    10e0:	adrp	x0, 0 <grub_mod_init-0x17a0>
    10e4:	ldr	w1, [x19, #48]
    10e8:	ldr	x0, [x0]
    10ec:	and	w2, w1, #0xffff
    10f0:	lsr	w1, w1, #16
    10f4:	bl	0 <grub_xasprintf>
    10f8:	str	x0, [x20]
    10fc:	cbz	x0, 1120 <grub_mod_init-0x680>
    1100:	ldrb	w1, [x0]
    1104:	cbz	w1, 1120 <grub_mod_init-0x680>
    1108:	sub	w2, w1, #0x61
    110c:	cmp	w2, #0x19
    1110:	b.ls	114c <grub_mod_init-0x654>  // b.plast
    1114:	strb	w1, [x0]
    1118:	ldrb	w1, [x0, #1]!
    111c:	cbnz	w1, 1108 <grub_mod_init-0x698>
    1120:	ldr	x0, [x21]
    1124:	bl	0 <grub_dl_unref>
    1128:	mov	x0, x19
    112c:	bl	0 <grub_free>
    1130:	adrp	x0, 0 <grub_mod_init-0x17a0>
    1134:	ldp	x19, x20, [sp, #16]
    1138:	ldr	x0, [x0]
    113c:	ldr	x21, [sp, #32]
    1140:	ldr	w0, [x0]
    1144:	ldp	x29, x30, [sp], #48
    1148:	ret
    114c:	sub	w1, w1, #0x20
    1150:	strb	w1, [x0]
    1154:	ldrb	w1, [x0, #1]!
    1158:	cbnz	w1, 1108 <grub_mod_init-0x698>
    115c:	b	1120 <grub_mod_init-0x680>
    1160:	str	xzr, [x20]
    1164:	b	1120 <grub_mod_init-0x680>
	...
    1180:	stp	x29, x30, [sp, #-112]!
    1184:	adrp	x2, 0 <grub_mod_init-0x17a0>
    1188:	mov	x29, sp
    118c:	stp	x23, x24, [sp, #48]
    1190:	add	x24, sp, #0x48
    1194:	ldr	x23, [x2]
    1198:	stp	x21, x22, [sp, #32]
    119c:	mov	x21, x1
    11a0:	ldr	x1, [x0, #8]
    11a4:	stp	x19, x20, [sp, #16]
    11a8:	mov	x20, x0
    11ac:	ldr	x0, [x23]
    11b0:	ldr	x22, [x1]
    11b4:	str	xzr, [sp, #64]
    11b8:	bl	0 <grub_dl_ref>
    11bc:	mov	x0, x22
    11c0:	bl	dc0 <grub_mod_init-0x9e0>
    11c4:	mov	x19, x0
    11c8:	cbz	x0, 1234 <grub_mod_init-0x56c>
    11cc:	adrp	x1, 0 <grub_mod_init-0x17a0>
    11d0:	ldr	w7, [x19, #20]
    11d4:	mov	w8, #0x10                  	// #16
    11d8:	mov	x6, #0xffffffff            	// #4294967295
    11dc:	ldr	x3, [x1]
    11e0:	add	x24, sp, #0x48
    11e4:	mov	x0, x21
    11e8:	mov	x1, x24
    11ec:	add	x2, sp, #0x40
    11f0:	mov	w5, #0x1                   	// #1
    11f4:	mov	x4, #0x0                   	// #0
    11f8:	stp	x22, x19, [sp, #72]
    11fc:	strb	w8, [sp, #88]
    1200:	stp	wzr, w7, [sp, #92]
    1204:	stur	x6, [sp, #100]
    1208:	bl	0 <grub_fshelp_find_file_lookup>
    120c:	cbnz	w0, 1234 <grub_mod_init-0x56c>
    1210:	ldr	x1, [sp, #64]
    1214:	str	x1, [x20, #80]
    1218:	ldp	x21, x22, [sp, #32]
    121c:	ldr	w1, [x1, #20]
    1220:	str	x1, [x20, #64]
    1224:	ldp	x19, x20, [sp, #16]
    1228:	ldp	x23, x24, [sp, #48]
    122c:	ldp	x29, x30, [sp], #112
    1230:	ret
    1234:	ldr	x0, [sp, #64]
    1238:	cmp	x0, x24
    123c:	b.eq	1244 <grub_mod_init-0x55c>  // b.none
    1240:	bl	0 <grub_free>
    1244:	mov	x0, x19
    1248:	bl	0 <grub_free>
    124c:	ldr	x0, [x23]
    1250:	bl	0 <grub_dl_unref>
    1254:	adrp	x0, 0 <grub_mod_init-0x17a0>
    1258:	ldp	x19, x20, [sp, #16]
    125c:	ldr	x0, [x0]
    1260:	ldp	x21, x22, [sp, #32]
    1264:	ldr	w0, [x0]
    1268:	ldp	x23, x24, [sp, #48]
    126c:	ldp	x29, x30, [sp], #112
    1270:	ret
    1274:	nop
	...
    1290:	stp	x29, x30, [sp, #-208]!
    1294:	adrp	x4, 0 <grub_mod_init-0x17a0>
    1298:	mov	x29, sp
    129c:	stp	x21, x22, [sp, #32]
    12a0:	mov	x21, x2
    12a4:	ldr	x22, [x4]
    12a8:	str	x25, [sp, #64]
    12ac:	ldr	x25, [x0]
    12b0:	stp	x19, x20, [sp, #16]
    12b4:	mov	x20, x3
    12b8:	ldr	x0, [x22]
    12bc:	stp	x23, x24, [sp, #48]
    12c0:	mov	x24, x1
    12c4:	str	xzr, [sp, #88]
    12c8:	bl	0 <grub_dl_ref>
    12cc:	mov	x0, x25
    12d0:	bl	dc0 <grub_mod_init-0x9e0>
    12d4:	mov	x19, x0
    12d8:	cbz	x0, 1414 <grub_mod_init-0x38c>
    12dc:	adrp	x1, 0 <grub_mod_init-0x17a0>
    12e0:	ldr	w7, [x19, #20]
    12e4:	mov	w8, #0x10                  	// #16
    12e8:	mov	x6, #0xffffffff            	// #4294967295
    12ec:	ldr	x3, [x1]
    12f0:	add	x23, sp, #0x70
    12f4:	mov	x0, x24
    12f8:	mov	x1, x23
    12fc:	add	x2, sp, #0x58
    1300:	mov	w5, #0x2                   	// #2
    1304:	mov	x4, #0x0                   	// #0
    1308:	stp	x25, x19, [sp, #112]
    130c:	strb	w8, [sp, #128]
    1310:	stp	wzr, w7, [sp, #132]
    1314:	stur	x6, [sp, #140]
    1318:	bl	0 <grub_fshelp_find_file_lookup>
    131c:	cbz	w0, 1364 <grub_mod_init-0x43c>
    1320:	adrp	x0, 0 <grub_mod_init-0x17a0>
    1324:	ldr	x25, [x0]
    1328:	ldr	x0, [sp, #88]
    132c:	cmp	x0, x23
    1330:	b.eq	1338 <grub_mod_init-0x468>  // b.none
    1334:	bl	0 <grub_free>
    1338:	mov	x0, x19
    133c:	bl	0 <grub_free>
    1340:	ldr	x0, [x22]
    1344:	bl	0 <grub_dl_unref>
    1348:	ldr	w0, [x25]
    134c:	ldp	x19, x20, [sp, #16]
    1350:	ldp	x21, x22, [sp, #32]
    1354:	ldp	x23, x24, [sp, #48]
    1358:	ldr	x25, [sp, #64]
    135c:	ldp	x29, x30, [sp], #208
    1360:	ret
    1364:	mov	x1, #0xffffffffffffffe0    	// #-32
    1368:	mov	x0, #0xd01                 	// #3329
    136c:	str	x1, [sp, #200]
    1370:	bl	0 <grub_malloc>
    1374:	mov	x1, x0
    1378:	mov	x0, #0x680                 	// #1664
    137c:	str	x1, [sp, #184]
    1380:	bl	0 <grub_malloc>
    1384:	str	x0, [sp, #192]
    1388:	ldr	x2, [sp, #184]
    138c:	cmp	x0, #0x0
    1390:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    1394:	b.eq	1424 <grub_mod_init-0x37c>  // b.none
    1398:	adrp	x0, 0 <grub_mod_init-0x17a0>
    139c:	ldr	x25, [x0]
    13a0:	mov	w24, #0xfffffffa            	// #-6
    13a4:	nop
    13a8:	ldr	x0, [sp, #88]
    13ac:	add	x1, sp, #0x98
    13b0:	bl	368 <grub_mod_init-0x1438>
    13b4:	mov	w3, w0
    13b8:	mov	x2, #0x10                  	// #16
    13bc:	add	x0, sp, #0x60
    13c0:	mov	w1, #0x0                   	// #0
    13c4:	cbnz	w3, 1400 <grub_mod_init-0x3a0>
    13c8:	bl	0 <grub_memset>
    13cc:	ldrb	w3, [sp, #163]
    13d0:	mov	x2, x20
    13d4:	ldrb	w0, [sp, #96]
    13d8:	add	x1, sp, #0x60
    13dc:	ubfx	x4, x3, #4, #1
    13e0:	and	w0, w0, w24
    13e4:	orr	w4, w4, #0x4
    13e8:	orr	w4, w4, w0
    13ec:	strb	w4, [sp, #96]
    13f0:	tbnz	w3, #3, 13a8 <grub_mod_init-0x3f8>
    13f4:	ldr	x0, [sp, #184]
    13f8:	blr	x21
    13fc:	cbz	w0, 13a8 <grub_mod_init-0x3f8>
    1400:	ldr	x0, [sp, #184]
    1404:	bl	0 <grub_free>
    1408:	ldr	x0, [sp, #192]
    140c:	bl	0 <grub_free>
    1410:	b	1328 <grub_mod_init-0x478>
    1414:	adrp	x0, 0 <grub_mod_init-0x17a0>
    1418:	add	x23, sp, #0x70
    141c:	ldr	x25, [x0]
    1420:	b	1328 <grub_mod_init-0x478>
    1424:	mov	x0, x2
    1428:	bl	0 <grub_free>
    142c:	ldr	x0, [sp, #192]
    1430:	bl	0 <grub_free>
    1434:	adrp	x0, 0 <grub_mod_init-0x17a0>
    1438:	ldr	x25, [x0]
    143c:	ldr	w0, [x25]
    1440:	cbnz	w0, 1328 <grub_mod_init-0x478>
    1444:	b	13a0 <grub_mod_init-0x400>
	...
    1460:	stp	x29, x30, [sp, #-128]!
    1464:	mov	x29, sp
    1468:	stp	x21, x22, [sp, #32]
    146c:	mov	x21, x1
    1470:	mov	x1, #0xffffffffffffffe0    	// #-32
    1474:	mov	x22, x2
    1478:	stp	x19, x20, [sp, #16]
    147c:	mov	x20, x0
    1480:	mov	x0, #0xd01                 	// #3329
    1484:	str	x23, [sp, #48]
    1488:	mov	x23, x3
    148c:	str	x1, [sp, #120]
    1490:	bl	0 <grub_malloc>
    1494:	mov	x1, x0
    1498:	mov	x0, #0x680                 	// #1664
    149c:	str	x1, [sp, #104]
    14a0:	bl	0 <grub_malloc>
    14a4:	str	x0, [sp, #112]
    14a8:	ldr	x2, [sp, #104]
    14ac:	cmp	x0, #0x0
    14b0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    14b4:	b.eq	1604 <grub_mod_init-0x19c>  // b.none
    14b8:	add	x1, sp, #0x48
    14bc:	mov	x0, x20
    14c0:	bl	368 <grub_mod_init-0x1438>
    14c4:	mov	w19, w0
    14c8:	cbnz	w0, 15d4 <grub_mod_init-0x1cc>
    14cc:	ldrb	w0, [sp, #83]
    14d0:	tbnz	w0, #3, 14b8 <grub_mod_init-0x2e8>
    14d4:	ldrb	w5, [x21]
    14d8:	mov	x3, x21
    14dc:	ldr	x0, [sp, #104]
    14e0:	cbnz	w5, 14f0 <grub_mod_init-0x2b0>
    14e4:	b	15c4 <grub_mod_init-0x1dc>
    14e8:	ldrb	w5, [x3, #1]!
    14ec:	cbz	w5, 15c4 <grub_mod_init-0x1dc>
    14f0:	ldrb	w4, [x0]
    14f4:	sub	w7, w5, #0x41
    14f8:	cmp	w7, #0x1a
    14fc:	add	w1, w5, #0x20
    1500:	sub	w2, w4, #0x41
    1504:	csel	w8, w1, w5, cc  // cc = lo, ul, last
    1508:	add	x0, x0, #0x1
    150c:	add	w6, w4, #0x20
    1510:	cmp	w2, #0x1a
    1514:	cbz	w4, 14b8 <grub_mod_init-0x2e8>
    1518:	csel	w6, w6, w4, cc  // cc = lo, ul, last
    151c:	cmp	w6, w8
    1520:	b.eq	14e8 <grub_mod_init-0x2b8>  // b.none
    1524:	cmp	w7, #0x1a
    1528:	csel	w5, w1, w5, cc  // cc = lo, ul, last
    152c:	cmp	w2, #0x1a
    1530:	add	w0, w4, #0x20
    1534:	csel	w4, w0, w4, cc  // cc = lo, ul, last
    1538:	cmp	w5, w4
    153c:	b.ne	14b8 <grub_mod_init-0x2e8>  // b.any
    1540:	mov	x0, #0x28                  	// #40
    1544:	bl	0 <grub_malloc>
    1548:	str	x0, [x22]
    154c:	mov	x1, x0
    1550:	cbz	x0, 163c <grub_mod_init-0x164>
    1554:	ldrb	w2, [sp, #83]
    1558:	strb	w2, [x0, #16]
    155c:	ldrh	w3, [sp, #98]
    1560:	ldrh	w0, [sp, #92]
    1564:	ldr	w4, [sp, #100]
    1568:	orr	w0, w3, w0, lsl #16
    156c:	ldr	x3, [x20, #8]
    1570:	stp	w4, w0, [x1, #20]
    1574:	cbnz	w0, 1580 <grub_mod_init-0x220>
    1578:	ldr	w0, [x3, #20]
    157c:	str	w0, [x1, #24]
    1580:	ubfx	x2, x2, #4, #1
    1584:	mov	w4, #0xffffffff            	// #-1
    1588:	ldr	x5, [x20]
    158c:	add	w2, w2, #0x1
    1590:	ldr	x0, [sp, #104]
    1594:	stp	x5, x3, [x1]
    1598:	str	w4, [x1, #28]
    159c:	str	w2, [x23]
    15a0:	bl	0 <grub_free>
    15a4:	ldr	x0, [sp, #112]
    15a8:	bl	0 <grub_free>
    15ac:	mov	w0, w19
    15b0:	ldp	x19, x20, [sp, #16]
    15b4:	ldp	x21, x22, [sp, #32]
    15b8:	ldr	x23, [sp, #48]
    15bc:	ldp	x29, x30, [sp], #128
    15c0:	ret
    15c4:	ldrb	w4, [x0]
    15c8:	mov	w5, #0x0                   	// #0
    15cc:	sub	w2, w4, #0x41
    15d0:	b	152c <grub_mod_init-0x274>
    15d4:	ldr	x0, [sp, #104]
    15d8:	bl	0 <grub_free>
    15dc:	ldr	x0, [sp, #112]
    15e0:	bl	0 <grub_free>
    15e4:	cmp	w19, #0x2c
    15e8:	csel	w19, w19, wzr, ne  // ne = any
    15ec:	mov	w0, w19
    15f0:	ldp	x19, x20, [sp, #16]
    15f4:	ldp	x21, x22, [sp, #32]
    15f8:	ldr	x23, [sp, #48]
    15fc:	ldp	x29, x30, [sp], #128
    1600:	ret
    1604:	mov	x0, x2
    1608:	bl	0 <grub_free>
    160c:	ldr	x0, [sp, #112]
    1610:	bl	0 <grub_free>
    1614:	adrp	x0, 0 <grub_mod_init-0x17a0>
    1618:	ldr	x0, [x0]
    161c:	ldr	w19, [x0]
    1620:	cbz	w19, 14b8 <grub_mod_init-0x2e8>
    1624:	mov	w0, w19
    1628:	ldp	x19, x20, [sp, #16]
    162c:	ldp	x21, x22, [sp, #32]
    1630:	ldr	x23, [sp, #48]
    1634:	ldp	x29, x30, [sp], #128
    1638:	ret
    163c:	adrp	x0, 0 <grub_mod_init-0x17a0>
    1640:	ldr	x0, [x0]
    1644:	ldr	w19, [x0]
    1648:	b	15ec <grub_mod_init-0x1b4>
    164c:	nop
	...
    1658:	stp	x29, x30, [sp, #-144]!
    165c:	adrp	x2, 0 <grub_mod_init-0x17a0>
    1660:	mov	x29, sp
    1664:	stp	x19, x20, [sp, #16]
    1668:	mov	x19, x1
    166c:	ldr	x20, [x2]
    1670:	str	x21, [sp, #32]
    1674:	ldr	x21, [x0]
    1678:	mov	w2, #0x10                  	// #16
    167c:	ldr	x0, [x20]
    1680:	str	xzr, [x1]
    1684:	mov	w1, #0xffffffff            	// #-1
    1688:	stp	xzr, xzr, [sp, #56]
    168c:	stp	xzr, xzr, [sp, #72]
    1690:	str	x21, [sp, #48]
    1694:	strb	w2, [sp, #64]
    1698:	str	w1, [sp, #76]
    169c:	bl	0 <grub_dl_ref>
    16a0:	mov	x0, x21
    16a4:	bl	dc0 <grub_mod_init-0x9e0>
    16a8:	str	x0, [sp, #56]
    16ac:	cbz	x0, 174c <grub_mod_init-0x54>
    16b0:	ldr	w2, [x0, #20]
    16b4:	mov	x1, #0xffffffffffffffe0    	// #-32
    16b8:	mov	x0, #0xd01                 	// #3329
    16bc:	str	w2, [sp, #72]
    16c0:	str	x1, [sp, #136]
    16c4:	bl	0 <grub_malloc>
    16c8:	mov	x1, x0
    16cc:	mov	x0, #0x680                 	// #1664
    16d0:	str	x1, [sp, #120]
    16d4:	bl	0 <grub_malloc>
    16d8:	str	x0, [sp, #128]
    16dc:	ldr	x2, [sp, #120]
    16e0:	cmp	x0, #0x0
    16e4:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    16e8:	b.eq	1768 <grub_mod_init-0x38>  // b.none
    16ec:	adrp	x0, 0 <grub_mod_init-0x17a0>
    16f0:	ldr	x21, [x0]
    16f4:	b	1708 <grub_mod_init-0x98>
    16f8:	ldrb	w0, [sp, #99]
    16fc:	and	w0, w0, #0xffffffdf
    1700:	cmp	w0, #0x8
    1704:	b.eq	1758 <grub_mod_init-0x48>  // b.none
    1708:	add	x1, sp, #0x58
    170c:	add	x0, sp, #0x30
    1710:	bl	368 <grub_mod_init-0x1438>
    1714:	cbz	w0, 16f8 <grub_mod_init-0xa8>
    1718:	ldr	x0, [sp, #120]
    171c:	bl	0 <grub_free>
    1720:	ldr	x0, [sp, #128]
    1724:	bl	0 <grub_free>
    1728:	ldr	x0, [x20]
    172c:	bl	0 <grub_dl_unref>
    1730:	ldr	x0, [sp, #56]
    1734:	bl	0 <grub_free>
    1738:	ldr	w0, [x21]
    173c:	ldp	x19, x20, [sp, #16]
    1740:	ldr	x21, [sp, #32]
    1744:	ldp	x29, x30, [sp], #144
    1748:	ret
    174c:	adrp	x0, 0 <grub_mod_init-0x17a0>
    1750:	ldr	x21, [x0]
    1754:	b	1728 <grub_mod_init-0x78>
    1758:	ldr	x0, [sp, #120]
    175c:	bl	0 <grub_strdup>
    1760:	str	x0, [x19]
    1764:	b	1718 <grub_mod_init-0x88>
    1768:	mov	x0, x2
    176c:	bl	0 <grub_free>
    1770:	ldr	x0, [sp, #128]
    1774:	bl	0 <grub_free>
    1778:	adrp	x0, 0 <grub_mod_init-0x17a0>
    177c:	ldr	x21, [x0]
    1780:	ldr	w0, [x21]
    1784:	cbnz	w0, 1728 <grub_mod_init-0x78>
    1788:	b	1708 <grub_mod_init-0x98>
    178c:	nop
	...

00000000000017a0 <grub_mod_init>:
    17a0:	stp	x29, x30, [sp, #-32]!
    17a4:	adrp	x2, 0 <grub_mod_init-0x17a0>
    17a8:	adrp	x1, 0 <grub_mod_init-0x17a0>
    17ac:	mov	x29, sp
    17b0:	ldr	x1, [x1]
    17b4:	str	x19, [sp, #16]
    17b8:	mov	x19, x0
    17bc:	ldr	x0, [x2]
    17c0:	bl	0 <grub_list_push>
    17c4:	adrp	x0, 0 <grub_mod_init-0x17a0>
    17c8:	ldr	x0, [x0]
    17cc:	str	x19, [x0]
    17d0:	ldr	x19, [sp, #16]
    17d4:	ldp	x29, x30, [sp], #32
    17d8:	ret
    17dc:	nop
	...

00000000000017f8 <grub_mod_fini>:
    17f8:	adrp	x0, 0 <grub_mod_init-0x17a0>
    17fc:	ldr	x0, [x0]
    1800:	b	0 <grub_list_remove>
    1804:	nop
	...
