
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//disk.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_disk_write-0x388>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x2, [sp, #24]
  18:	ldr	x1, [sp, #32]
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <grub_memmove>
  24:	ldp	x29, x30, [sp], #48
  28:	ret
  2c:	stp	x29, x30, [sp, #-80]!
  30:	mov	x29, sp
  34:	str	x0, [sp, #40]
  38:	str	x1, [sp, #32]
  3c:	str	x2, [sp, #24]
  40:	str	x3, [sp, #16]
  44:	ldr	x0, [sp, #32]
  48:	ldr	x1, [x0]
  4c:	ldr	x0, [sp, #24]
  50:	ldr	x0, [x0]
  54:	lsr	x0, x0, #9
  58:	add	x1, x1, x0
  5c:	ldr	x0, [sp, #32]
  60:	str	x1, [x0]
  64:	ldr	x0, [sp, #24]
  68:	ldr	x0, [x0]
  6c:	and	x1, x0, #0x1ff
  70:	ldr	x0, [sp, #24]
  74:	str	x1, [x0]
  78:	ldr	x0, [sp, #40]
  7c:	ldr	x0, [x0, #40]
  80:	str	x0, [sp, #72]
  84:	b	120 <grub_disk_write-0x268>
  88:	ldr	x0, [sp, #72]
  8c:	ldr	x0, [x0, #8]
  90:	str	x0, [sp, #56]
  94:	ldr	x0, [sp, #72]
  98:	ldr	x0, [x0, #16]
  9c:	str	x0, [sp, #48]
  a0:	ldr	x0, [sp, #32]
  a4:	ldr	x0, [x0]
  a8:	ldr	x1, [sp, #48]
  ac:	cmp	x1, x0
  b0:	b.ls	e4 <grub_disk_write-0x2a4>  // b.plast
  b4:	ldr	x0, [sp, #32]
  b8:	ldr	x0, [x0]
  bc:	ldr	x1, [sp, #48]
  c0:	sub	x1, x1, x0
  c4:	ldr	x0, [sp, #24]
  c8:	ldr	x2, [x0]
  cc:	ldr	x0, [sp, #16]
  d0:	add	x0, x2, x0
  d4:	add	x0, x0, #0x1ff
  d8:	lsr	x0, x0, #9
  dc:	cmp	x1, x0
  e0:	b.cs	fc <grub_disk_write-0x28c>  // b.hs, b.nlast
  e4:	adrp	x0, 0 <grub_disk_write-0x388>
  e8:	add	x0, x0, #0x0
  ec:	ldr	x1, [x0]
  f0:	mov	w0, #0xb                   	// #11
  f4:	bl	0 <grub_error>
  f8:	b	1cc <grub_disk_write-0x1bc>
  fc:	ldr	x0, [sp, #32]
 100:	ldr	x1, [x0]
 104:	ldr	x0, [sp, #56]
 108:	add	x1, x1, x0
 10c:	ldr	x0, [sp, #32]
 110:	str	x1, [x0]
 114:	ldr	x0, [sp, #72]
 118:	ldr	x0, [x0, #40]
 11c:	str	x0, [sp, #72]
 120:	ldr	x0, [sp, #72]
 124:	cmp	x0, #0x0
 128:	b.ne	88 <grub_disk_write-0x300>  // b.any
 12c:	ldr	x0, [sp, #40]
 130:	ldr	x1, [x0, #16]
 134:	ldr	x0, [sp, #40]
 138:	ldr	w0, [x0, #24]
 13c:	sub	w0, w0, #0x9
 140:	lsl	x0, x1, x0
 144:	str	x0, [sp, #64]
 148:	ldr	x1, [sp, #64]
 14c:	mov	x0, #0x8000000000000       	// #2251799813685248
 150:	cmp	x1, x0
 154:	b.ls	160 <grub_disk_write-0x228>  // b.plast
 158:	mov	x0, #0x8000000000000       	// #2251799813685248
 15c:	str	x0, [sp, #64]
 160:	ldr	x0, [sp, #32]
 164:	ldr	x0, [x0]
 168:	ldr	x1, [sp, #64]
 16c:	cmp	x1, x0
 170:	b.ls	1a4 <grub_disk_write-0x1e4>  // b.plast
 174:	ldr	x0, [sp, #24]
 178:	ldr	x1, [x0]
 17c:	ldr	x0, [sp, #16]
 180:	add	x0, x1, x0
 184:	add	x0, x0, #0x1ff
 188:	lsr	x1, x0, #9
 18c:	ldr	x0, [sp, #32]
 190:	ldr	x0, [x0]
 194:	ldr	x2, [sp, #64]
 198:	sub	x0, x2, x0
 19c:	cmp	x1, x0
 1a0:	b.ls	1c8 <grub_disk_write-0x1c0>  // b.plast
 1a4:	ldr	x0, [sp, #40]
 1a8:	ldr	x0, [x0]
 1ac:	mov	x2, x0
 1b0:	adrp	x0, 0 <grub_disk_write-0x388>
 1b4:	add	x0, x0, #0x0
 1b8:	ldr	x1, [x0]
 1bc:	mov	w0, #0xb                   	// #11
 1c0:	bl	0 <grub_error>
 1c4:	b	1cc <grub_disk_write-0x1bc>
 1c8:	mov	w0, #0x0                   	// #0
 1cc:	ldp	x29, x30, [sp], #80
 1d0:	ret
 1d4:	nop
	...
 1e8:	sub	sp, sp, #0x10
 1ec:	str	x0, [sp, #8]
 1f0:	str	x1, [sp]
 1f4:	ldr	x0, [sp, #8]
 1f8:	ldr	w0, [x0, #24]
 1fc:	sub	w0, w0, #0x9
 200:	ldr	x1, [sp]
 204:	lsr	x0, x1, x0
 208:	add	sp, sp, #0x10
 20c:	ret
 210:	sub	sp, sp, #0x20
 214:	str	x0, [sp, #24]
 218:	str	x1, [sp, #16]
 21c:	str	x2, [sp, #8]
 220:	ldr	x1, [sp, #24]
 224:	mov	x0, x1
 228:	lsl	x0, x0, #19
 22c:	sub	x1, x0, x1
 230:	ldr	x2, [sp, #16]
 234:	mov	x0, #0xc57b                	// #50555
 238:	movk	x0, #0x27, lsl #16
 23c:	mul	x0, x2, x0
 240:	add	x1, x1, x0
 244:	ldr	x0, [sp, #8]
 248:	lsr	x0, x0, #6
 24c:	mov	w0, w0
 250:	add	x2, x1, x0
 254:	mov	x0, #0xedb3                	// #60851
 258:	movk	x0, #0x513c, lsl #16
 25c:	movk	x0, #0x906c, lsl #32
 260:	movk	x0, #0xc0, lsl #48
 264:	umulh	x0, x2, x0
 268:	sub	x1, x2, x0
 26c:	lsr	x1, x1, #1
 270:	add	x0, x0, x1
 274:	lsr	x1, x0, #9
 278:	mov	x0, x1
 27c:	lsl	x0, x0, #8
 280:	sub	x0, x0, x1
 284:	lsl	x0, x0, #2
 288:	add	x0, x0, x1
 28c:	sub	x1, x2, x0
 290:	mov	w0, w1
 294:	add	sp, sp, #0x20
 298:	ret
 29c:	stp	x29, x30, [sp, #-64]!
 2a0:	mov	x29, sp
 2a4:	str	x0, [sp, #40]
 2a8:	str	x1, [sp, #32]
 2ac:	str	x2, [sp, #24]
 2b0:	ldr	x0, [sp, #24]
 2b4:	and	x0, x0, #0xffffffffffffffc0
 2b8:	str	x0, [sp, #24]
 2bc:	ldr	x2, [sp, #24]
 2c0:	ldr	x1, [sp, #32]
 2c4:	ldr	x0, [sp, #40]
 2c8:	bl	210 <grub_disk_write-0x178>
 2cc:	str	w0, [sp, #60]
 2d0:	ldr	w1, [sp, #60]
 2d4:	mov	x0, x1
 2d8:	lsl	x0, x0, #2
 2dc:	add	x0, x0, x1
 2e0:	lsl	x0, x0, #3
 2e4:	mov	x1, x0
 2e8:	adrp	x0, 0 <grub_disk_write-0x388>
 2ec:	add	x0, x0, #0x0
 2f0:	ldr	x0, [x0]
 2f4:	add	x0, x1, x0
 2f8:	str	x0, [sp, #48]
 2fc:	ldr	x0, [sp, #48]
 300:	ldr	w0, [x0]
 304:	mov	w0, w0
 308:	ldr	x1, [sp, #40]
 30c:	cmp	x1, x0
 310:	b.ne	374 <grub_disk_write-0x14>  // b.any
 314:	ldr	x0, [sp, #48]
 318:	ldr	x0, [x0, #8]
 31c:	ldr	x1, [sp, #32]
 320:	cmp	x1, x0
 324:	b.ne	374 <grub_disk_write-0x14>  // b.any
 328:	ldr	x0, [sp, #48]
 32c:	ldr	x0, [x0, #16]
 330:	ldr	x1, [sp, #24]
 334:	cmp	x1, x0
 338:	b.ne	374 <grub_disk_write-0x14>  // b.any
 33c:	ldr	x0, [sp, #48]
 340:	ldr	x0, [x0, #24]
 344:	cmp	x0, #0x0
 348:	b.eq	374 <grub_disk_write-0x14>  // b.none
 34c:	ldr	x0, [sp, #48]
 350:	mov	w1, #0x1                   	// #1
 354:	str	w1, [x0, #32]
 358:	ldr	x0, [sp, #48]
 35c:	ldr	x0, [x0, #24]
 360:	bl	0 <grub_free>
 364:	ldr	x0, [sp, #48]
 368:	str	xzr, [x0, #24]
 36c:	ldr	x0, [sp, #48]
 370:	str	wzr, [x0, #32]
 374:	nop
 378:	ldp	x29, x30, [sp], #64
 37c:	ret
	...

0000000000000388 <grub_disk_write>:
 388:	stp	x29, x30, [sp, #-144]!
 38c:	mov	x29, sp
 390:	str	x19, [sp, #16]
 394:	str	x0, [sp, #72]
 398:	str	x1, [sp, #64]
 39c:	str	x2, [sp, #56]
 3a0:	str	x3, [sp, #48]
 3a4:	str	x4, [sp, #40]
 3a8:	ldr	x0, [sp, #72]
 3ac:	ldr	x0, [x0]
 3b0:	mov	x4, x0
 3b4:	adrp	x0, 0 <grub_disk_write-0x388>
 3b8:	add	x0, x0, #0x0
 3bc:	ldr	x3, [x0]
 3c0:	adrp	x0, 0 <grub_disk_write-0x388>
 3c4:	add	x0, x0, #0x0
 3c8:	ldr	x2, [x0]
 3cc:	mov	w1, #0x3d                  	// #61
 3d0:	adrp	x0, 0 <grub_disk_write-0x388>
 3d4:	add	x0, x0, #0x0
 3d8:	ldr	x0, [x0]
 3dc:	bl	0 <grub_real_dprintf>
 3e0:	add	x1, sp, #0x38
 3e4:	add	x0, sp, #0x40
 3e8:	ldr	x3, [sp, #48]
 3ec:	mov	x2, x1
 3f0:	mov	x1, x0
 3f4:	ldr	x0, [sp, #72]
 3f8:	bl	2c <grub_disk_write-0x35c>
 3fc:	cmp	w0, #0x0
 400:	b.eq	40c <grub_disk_write+0x84>  // b.none
 404:	mov	w0, #0xffffffff            	// #-1
 408:	b	7bc <grub_disk_write+0x434>
 40c:	ldr	x0, [sp, #72]
 410:	ldr	w0, [x0, #24]
 414:	sub	w0, w0, #0x9
 418:	mov	x1, #0x1                   	// #1
 41c:	lsl	x0, x1, x0
 420:	neg	x1, x0
 424:	ldr	x0, [sp, #64]
 428:	and	x0, x1, x0
 42c:	str	x0, [sp, #112]
 430:	ldr	x0, [sp, #64]
 434:	mov	w1, w0
 438:	ldr	x0, [sp, #112]
 43c:	sub	w0, w1, w0
 440:	lsl	w0, w0, #9
 444:	ldr	x1, [sp, #56]
 448:	add	w0, w0, w1
 44c:	str	w0, [sp, #140]
 450:	ldr	x0, [sp, #112]
 454:	str	x0, [sp, #64]
 458:	b	798 <grub_disk_write+0x410>
 45c:	ldr	w0, [sp, #140]
 460:	cmp	w0, #0x0
 464:	b.ne	494 <grub_disk_write+0x10c>  // b.any
 468:	ldr	x0, [sp, #72]
 46c:	ldr	w0, [x0, #24]
 470:	mov	w1, #0x1                   	// #1
 474:	lsl	w0, w1, w0
 478:	mov	w0, w0
 47c:	ldr	x1, [sp, #48]
 480:	cmp	x1, x0
 484:	b.cs	654 <grub_disk_write+0x2cc>  // b.hs, b.nlast
 488:	ldr	x0, [sp, #48]
 48c:	cmp	x0, #0x0
 490:	b.eq	654 <grub_disk_write+0x2cc>  // b.none
 494:	ldr	x0, [sp, #72]
 498:	ldr	w0, [x0, #24]
 49c:	mov	w1, #0x1                   	// #1
 4a0:	lsl	w0, w1, w0
 4a4:	mov	w0, w0
 4a8:	bl	0 <grub_malloc>
 4ac:	str	x0, [sp, #96]
 4b0:	ldr	x0, [sp, #96]
 4b4:	cmp	x0, #0x0
 4b8:	b.ne	4d0 <grub_disk_write+0x148>  // b.any
 4bc:	adrp	x0, 0 <grub_disk_write-0x388>
 4c0:	add	x0, x0, #0x0
 4c4:	ldr	x0, [x0]
 4c8:	ldr	w0, [x0]
 4cc:	b	7bc <grub_disk_write+0x434>
 4d0:	ldr	x0, [sp, #72]
 4d4:	ldr	x0, [x0, #40]
 4d8:	str	x0, [sp, #88]
 4dc:	ldr	x0, [sp, #72]
 4e0:	str	xzr, [x0, #40]
 4e4:	ldr	x5, [sp, #64]
 4e8:	ldr	x0, [sp, #72]
 4ec:	ldr	w0, [x0, #24]
 4f0:	mov	w1, #0x1                   	// #1
 4f4:	lsl	w0, w1, w0
 4f8:	mov	w0, w0
 4fc:	ldr	x4, [sp, #96]
 500:	mov	x3, x0
 504:	mov	x2, #0x0                   	// #0
 508:	mov	x1, x5
 50c:	ldr	x0, [sp, #72]
 510:	bl	0 <grub_disk_read>
 514:	cmp	w0, #0x0
 518:	b.eq	534 <grub_disk_write+0x1ac>  // b.none
 51c:	ldr	x0, [sp, #72]
 520:	ldr	x1, [sp, #88]
 524:	str	x1, [x0, #40]
 528:	ldr	x0, [sp, #96]
 52c:	bl	0 <grub_free>
 530:	b	7ac <grub_disk_write+0x424>
 534:	ldr	x0, [sp, #72]
 538:	ldr	x1, [sp, #88]
 53c:	str	x1, [x0, #40]
 540:	ldr	x0, [sp, #72]
 544:	ldr	w0, [x0, #24]
 548:	mov	w1, #0x1                   	// #1
 54c:	lsl	w1, w1, w0
 550:	ldr	w0, [sp, #140]
 554:	sub	w0, w1, w0
 558:	mov	w0, w0
 55c:	str	x0, [sp, #128]
 560:	ldr	x1, [sp, #128]
 564:	ldr	x0, [sp, #48]
 568:	cmp	x1, x0
 56c:	b.ls	578 <grub_disk_write+0x1f0>  // b.plast
 570:	ldr	x0, [sp, #48]
 574:	str	x0, [sp, #128]
 578:	ldr	w0, [sp, #140]
 57c:	ldr	x1, [sp, #96]
 580:	add	x0, x1, x0
 584:	ldr	x2, [sp, #128]
 588:	ldr	x1, [sp, #40]
 58c:	bl	0 <grub_disk_write-0x388>
 590:	ldr	x0, [sp, #72]
 594:	ldr	x0, [x0, #8]
 598:	ldr	w0, [x0, #8]
 59c:	mov	w3, w0
 5a0:	ldr	x0, [sp, #72]
 5a4:	ldr	x0, [x0, #32]
 5a8:	ldr	x1, [sp, #64]
 5ac:	mov	x2, x1
 5b0:	mov	x1, x0
 5b4:	mov	x0, x3
 5b8:	bl	29c <grub_disk_write-0xec>
 5bc:	ldr	x0, [sp, #72]
 5c0:	ldr	x0, [x0, #8]
 5c4:	ldr	x19, [x0, #48]
 5c8:	ldr	x0, [sp, #64]
 5cc:	mov	x1, x0
 5d0:	ldr	x0, [sp, #72]
 5d4:	bl	1e8 <grub_disk_write-0x1a0>
 5d8:	ldr	x3, [sp, #96]
 5dc:	mov	x2, #0x1                   	// #1
 5e0:	mov	x1, x0
 5e4:	ldr	x0, [sp, #72]
 5e8:	blr	x19
 5ec:	cmp	w0, #0x0
 5f0:	b.eq	600 <grub_disk_write+0x278>  // b.none
 5f4:	ldr	x0, [sp, #96]
 5f8:	bl	0 <grub_free>
 5fc:	b	7ac <grub_disk_write+0x424>
 600:	ldr	x0, [sp, #96]
 604:	bl	0 <grub_free>
 608:	ldr	x0, [sp, #72]
 60c:	ldr	w0, [x0, #24]
 610:	sub	w0, w0, #0x9
 614:	mov	w1, #0x1                   	// #1
 618:	lsl	w0, w1, w0
 61c:	mov	w1, w0
 620:	ldr	x0, [sp, #64]
 624:	add	x0, x1, x0
 628:	str	x0, [sp, #64]
 62c:	ldr	x1, [sp, #40]
 630:	ldr	x0, [sp, #128]
 634:	add	x0, x1, x0
 638:	str	x0, [sp, #40]
 63c:	ldr	x1, [sp, #48]
 640:	ldr	x0, [sp, #128]
 644:	sub	x0, x1, x0
 648:	str	x0, [sp, #48]
 64c:	str	wzr, [sp, #140]
 650:	b	798 <grub_disk_write+0x410>
 654:	ldr	x0, [sp, #72]
 658:	ldr	w0, [x0, #24]
 65c:	mov	x1, #0x1                   	// #1
 660:	lsl	x0, x1, x0
 664:	neg	x0, x0
 668:	ldr	x1, [sp, #48]
 66c:	and	x0, x1, x0
 670:	str	x0, [sp, #104]
 674:	ldr	x0, [sp, #72]
 678:	ldr	w0, [x0, #24]
 67c:	ldr	x1, [sp, #48]
 680:	lsr	x0, x1, x0
 684:	str	x0, [sp, #120]
 688:	ldr	x0, [sp, #72]
 68c:	ldr	w1, [x0, #28]
 690:	ldr	x0, [sp, #72]
 694:	ldr	w0, [x0, #24]
 698:	mov	w2, #0xf                   	// #15
 69c:	sub	w0, w2, w0
 6a0:	lsl	w0, w1, w0
 6a4:	mov	w0, w0
 6a8:	ldr	x1, [sp, #120]
 6ac:	cmp	x1, x0
 6b0:	b.ls	6d8 <grub_disk_write+0x350>  // b.plast
 6b4:	ldr	x0, [sp, #72]
 6b8:	ldr	w1, [x0, #28]
 6bc:	ldr	x0, [sp, #72]
 6c0:	ldr	w0, [x0, #24]
 6c4:	mov	w2, #0xf                   	// #15
 6c8:	sub	w0, w2, w0
 6cc:	lsl	w0, w1, w0
 6d0:	mov	w0, w0
 6d4:	str	x0, [sp, #120]
 6d8:	ldr	x0, [sp, #72]
 6dc:	ldr	x0, [x0, #8]
 6e0:	ldr	x19, [x0, #48]
 6e4:	ldr	x0, [sp, #64]
 6e8:	mov	x1, x0
 6ec:	ldr	x0, [sp, #72]
 6f0:	bl	1e8 <grub_disk_write-0x1a0>
 6f4:	ldr	x3, [sp, #40]
 6f8:	ldr	x2, [sp, #120]
 6fc:	mov	x1, x0
 700:	ldr	x0, [sp, #72]
 704:	blr	x19
 708:	cmp	w0, #0x0
 70c:	b.ne	7a8 <grub_disk_write+0x420>  // b.any
 710:	b	764 <grub_disk_write+0x3dc>
 714:	ldr	x0, [sp, #72]
 718:	ldr	x0, [x0, #8]
 71c:	ldr	w0, [x0, #8]
 720:	mov	w3, w0
 724:	ldr	x0, [sp, #72]
 728:	ldr	x0, [x0, #32]
 72c:	ldr	x1, [sp, #64]
 730:	mov	x2, x1
 734:	mov	x1, x0
 738:	mov	x0, x3
 73c:	bl	29c <grub_disk_write-0xec>
 740:	ldr	x0, [sp, #72]
 744:	ldr	w0, [x0, #24]
 748:	sub	w0, w0, #0x9
 74c:	mov	w1, #0x1                   	// #1
 750:	lsl	w0, w1, w0
 754:	mov	w1, w0
 758:	ldr	x0, [sp, #64]
 75c:	add	x0, x1, x0
 760:	str	x0, [sp, #64]
 764:	ldr	x0, [sp, #120]
 768:	sub	x1, x0, #0x1
 76c:	str	x1, [sp, #120]
 770:	cmp	x0, #0x0
 774:	b.ne	714 <grub_disk_write+0x38c>  // b.any
 778:	ldr	x1, [sp, #40]
 77c:	ldr	x0, [sp, #104]
 780:	add	x0, x1, x0
 784:	str	x0, [sp, #40]
 788:	ldr	x1, [sp, #48]
 78c:	ldr	x0, [sp, #104]
 790:	sub	x0, x1, x0
 794:	str	x0, [sp, #48]
 798:	ldr	x0, [sp, #48]
 79c:	cmp	x0, #0x0
 7a0:	b.ne	45c <grub_disk_write+0xd4>  // b.any
 7a4:	b	7ac <grub_disk_write+0x424>
 7a8:	nop
 7ac:	adrp	x0, 0 <grub_disk_write-0x388>
 7b0:	add	x0, x0, #0x0
 7b4:	ldr	x0, [x0]
 7b8:	ldr	w0, [x0]
 7bc:	ldr	x19, [sp, #16]
 7c0:	ldp	x29, x30, [sp], #144
 7c4:	ret
	...

00000000000007e8 <grub_mod_init>:
 7e8:	sub	sp, sp, #0x10
 7ec:	str	x0, [sp, #8]
 7f0:	adrp	x0, 0 <grub_disk_write-0x388>
 7f4:	add	x0, x0, #0x0
 7f8:	ldr	x0, [x0]
 7fc:	adrp	x1, 0 <grub_disk_write-0x388>
 800:	add	x1, x1, #0x0
 804:	ldr	x1, [x1]
 808:	str	x1, [x0]
 80c:	nop
 810:	add	sp, sp, #0x10
 814:	ret
	...

0000000000000828 <grub_mod_fini>:
 828:	adrp	x0, 0 <grub_disk_write-0x388>
 82c:	add	x0, x0, #0x0
 830:	ldr	x0, [x0]
 834:	str	xzr, [x0]
 838:	nop
 83c:	ret
	...
