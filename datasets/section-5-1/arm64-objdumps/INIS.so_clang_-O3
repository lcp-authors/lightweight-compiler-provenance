
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//INIS.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 11000 <gconv@@Base+0x10720>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xf8>:
     760:	adrp	x0, 11000 <gconv@@Base+0x10720>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 12000 <gconv@@Base+0x11720>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 12000 <gconv@@Base+0x11720>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 11000 <gconv@@Base+0x10720>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 12000 <gconv@@Base+0x11720>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 12000 <gconv@@Base+0x11720>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 11000 <gconv@@Base+0x10720>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 12000 <gconv@@Base+0x11720>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 11000 <gconv@@Base+0x10720>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 12000 <gconv@@Base+0x11720>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	x2, x1, #0xff
     83c:	adrp	x0, 1000 <gconv@@Base+0x720>
     840:	add	x0, x0, #0x710
     844:	tst	w1, #0xff
     848:	ldr	w0, [x0, x2, lsl #2]
     84c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     850:	csinv	w0, w0, wzr, ne  // ne = any
     854:	ret

0000000000000858 <gconv_init@@Base>:
     858:	stp	x29, x30, [sp, #-32]!
     85c:	mov	x29, sp
     860:	stp	x19, x20, [sp, #16]
     864:	mov	x19, x0
     868:	adrp	x20, 1000 <gconv@@Base+0x720>
     86c:	ldr	x0, [x0, #24]
     870:	add	x20, x20, #0x588
     874:	mov	x1, x20
     878:	bl	730 <strcmp@plt>
     87c:	cbnz	w0, 8b0 <gconv_init@@Base+0x58>
     880:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     884:	mov	x2, #0x100000001           	// #4294967297
     888:	add	x0, x0, #0x838
     88c:	mov	x1, #0x400000004           	// #17179869188
     890:	str	x0, [x19, #48]
     894:	stp	x2, x1, [x19, #72]
     898:	str	xzr, [x19, #96]
     89c:	mov	w0, #0x0                   	// #0
     8a0:	str	wzr, [x19, #88]
     8a4:	ldp	x19, x20, [sp, #16]
     8a8:	ldp	x29, x30, [sp], #32
     8ac:	ret
     8b0:	ldr	x0, [x19, #32]
     8b4:	mov	x1, x20
     8b8:	bl	730 <strcmp@plt>
     8bc:	cbnz	w0, 8d8 <gconv_init@@Base+0x80>
     8c0:	mov	x0, #0xffffffffffffffff    	// #-1
     8c4:	mov	x2, #0x400000004           	// #17179869188
     8c8:	mov	x1, #0x100000001           	// #4294967297
     8cc:	stp	x2, x1, [x19, #72]
     8d0:	str	x0, [x19, #96]
     8d4:	b	89c <gconv_init@@Base+0x44>
     8d8:	mov	w0, #0x1                   	// #1
     8dc:	b	8a4 <gconv_init@@Base+0x4c>

00000000000008e0 <gconv@@Base>:
     8e0:	stp	x29, x30, [sp, #-240]!
     8e4:	mov	x8, x0
     8e8:	mov	x18, x4
     8ec:	mov	x29, sp
     8f0:	stp	x19, x20, [sp, #16]
     8f4:	mov	x20, x1
     8f8:	adrp	x1, 11000 <gconv@@Base+0x10720>
     8fc:	stp	x23, x24, [sp, #48]
     900:	mov	x19, x3
     904:	ldr	w15, [x20, #16]
     908:	ldr	x1, [x1, #4056]
     90c:	stp	x25, x26, [sp, #64]
     910:	mov	x24, #0x0                   	// #0
     914:	ldr	x0, [x1]
     918:	str	x0, [sp, #232]
     91c:	mov	x0, #0x0                   	// #0
     920:	add	x1, x8, #0x68
     924:	add	x0, x20, #0x30
     928:	stp	x27, x28, [sp, #80]
     92c:	mov	x26, x2
     930:	stp	x1, x0, [sp, #144]
     934:	mov	x27, x5
     938:	str	w7, [sp, #168]
     93c:	tbnz	w15, #0, 95c <gconv@@Base+0x7c>
     940:	ldr	x0, [x8, #104]
     944:	ldr	x24, [x8, #144]
     948:	cbz	x0, 95c <gconv@@Base+0x7c>
     94c:	adrp	x0, 11000 <gconv@@Base+0x10720>
     950:	ldr	x0, [x0, #4040]
     954:	ldr	x0, [x0]
     958:	eor	x24, x24, x0
     95c:	cbnz	w6, f98 <gconv@@Base+0x6b8>
     960:	cmp	x18, #0x0
     964:	add	x23, sp, #0xc0
     968:	csel	x1, x20, x18, eq  // eq = none
     96c:	cmp	x27, #0x0
     970:	csel	x2, x23, xzr, ne  // ne = any
     974:	stp	x21, x22, [sp, #32]
     978:	mov	x23, #0x0                   	// #0
     97c:	ldr	x28, [x1]
     980:	str	x2, [sp, #136]
     984:	ldr	w2, [sp, #168]
     988:	ldr	x0, [x8, #96]
     98c:	cmp	w2, #0x0
     990:	cset	w1, ne  // ne = any
     994:	str	w1, [sp, #172]
     998:	str	xzr, [sp, #192]
     99c:	cmp	x0, #0x0
     9a0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     9a4:	ldr	x21, [x26]
     9a8:	ldr	x22, [x20, #8]
     9ac:	b.ne	d1c <gconv@@Base+0x43c>  // b.any
     9b0:	adrp	x12, 1000 <gconv@@Base+0x720>
     9b4:	add	x12, x12, #0x710
     9b8:	add	x1, x12, #0x400
     9bc:	str	x1, [sp, #96]
     9c0:	add	x1, sp, #0xd8
     9c4:	mov	x2, x20
     9c8:	str	x1, [sp, #160]
     9cc:	mov	x1, x27
     9d0:	mov	w7, w15
     9d4:	mov	x20, x22
     9d8:	mov	x27, x21
     9dc:	mov	x15, x12
     9e0:	mov	x21, x28
     9e4:	mov	x22, x2
     9e8:	mov	x28, x26
     9ec:	mov	x26, x23
     9f0:	mov	x23, x1
     9f4:	stp	x8, x18, [sp, #120]
     9f8:	cbz	x23, a04 <gconv@@Base+0x124>
     9fc:	ldr	x1, [x23]
     a00:	add	x26, x26, x1
     a04:	cbz	x0, b58 <gconv@@Base+0x278>
     a08:	stp	x27, x21, [sp, #208]
     a0c:	mov	x25, x21
     a10:	cmp	x19, x27
     a14:	b.eq	1038 <gconv@@Base+0x758>  // b.none
     a18:	mov	x0, x27
     a1c:	add	x3, sp, #0xd0
     a20:	mov	w9, #0x4                   	// #4
     a24:	add	x6, x0, #0x4
     a28:	cmp	x19, x6
     a2c:	b.cc	c20 <gconv@@Base+0x340>  // b.lo, b.ul, b.last
     a30:	cmp	x20, x25
     a34:	b.ls	c2c <gconv@@Base+0x34c>  // b.plast
     a38:	ldr	w2, [x0]
     a3c:	mov	w5, #0xfffe                	// #65534
     a40:	cmp	w2, w5
     a44:	b.hi	b2c <gconv@@Base+0x24c>  // b.pmore
     a48:	cmp	w2, #0x7f
     a4c:	b.ls	a58 <gconv@@Base+0x178>  // b.plast
     a50:	cmp	w2, w5
     a54:	b.ls	b38 <gconv@@Base+0x258>  // b.plast
     a58:	ldr	x0, [sp, #96]
     a5c:	ldrb	w5, [x0, w2, uxtw]
     a60:	cmp	w5, #0x0
     a64:	ccmp	w2, #0x0, #0x4, eq  // eq = none
     a68:	b.ne	b38 <gconv@@Base+0x258>  // b.any
     a6c:	add	x2, x25, #0x1
     a70:	str	x2, [sp, #216]
     a74:	strb	w5, [x25]
     a78:	ldp	x0, x25, [sp, #208]
     a7c:	add	x0, x0, #0x4
     a80:	str	x0, [sp, #208]
     a84:	cmp	x19, x0
     a88:	b.ne	a24 <gconv@@Base+0x144>  // b.any
     a8c:	nop
     a90:	str	x0, [x28]
     a94:	ldr	x0, [sp, #128]
     a98:	cbnz	x0, bcc <gconv@@Base+0x2ec>
     a9c:	ldp	w1, w0, [x22, #16]
     aa0:	add	w0, w0, #0x1
     aa4:	str	w0, [x22, #20]
     aa8:	tbnz	w1, #0, ca8 <gconv@@Base+0x3c8>
     aac:	cmp	x21, x25
     ab0:	b.cs	d0c <gconv@@Base+0x42c>  // b.hs, b.nlast
     ab4:	ldr	x1, [x22]
     ab8:	mov	x0, x24
     abc:	str	x15, [sp, #104]
     ac0:	str	w9, [sp, #112]
     ac4:	str	x1, [sp, #200]
     ac8:	bl	740 <_dl_mcount_wrapper_check@plt>
     acc:	ldp	x0, x1, [sp, #144]
     ad0:	mov	x5, x23
     ad4:	ldr	w7, [sp, #168]
     ad8:	mov	x3, x25
     adc:	add	x2, sp, #0xc8
     ae0:	mov	w6, #0x0                   	// #0
     ae4:	mov	x4, #0x0                   	// #0
     ae8:	blr	x24
     aec:	mov	w7, w0
     af0:	ldr	w9, [sp, #112]
     af4:	cmp	w0, #0x4
     af8:	ldr	x15, [sp, #104]
     afc:	b.eq	c08 <gconv@@Base+0x328>  // b.none
     b00:	ldr	x9, [sp, #200]
     b04:	cmp	x9, x25
     b08:	b.ne	e54 <gconv@@Base+0x574>  // b.any
     b0c:	ldr	x0, [sp, #120]
     b10:	ldr	x0, [x0, #96]
     b14:	cbnz	w7, fe4 <gconv@@Base+0x704>
     b18:	ldr	w7, [x22, #16]
     b1c:	ldr	x21, [x22]
     b20:	ldr	x27, [x28]
     b24:	ldr	x26, [sp, #192]
     b28:	b	9f8 <gconv@@Base+0x118>
     b2c:	mov	w0, #0x1c00                	// #7168
     b30:	cmp	w0, w2, lsr #7
     b34:	b.eq	f78 <gconv@@Base+0x698>  // b.none
     b38:	ldr	x0, [sp, #136]
     b3c:	cbz	x0, 1210 <gconv@@Base+0x930>
     b40:	ldr	w0, [x22, #16]
     b44:	tbnz	w0, #3, c38 <gconv@@Base+0x358>
     b48:	ldr	x0, [sp, #208]
     b4c:	tbnz	w7, #1, c88 <gconv@@Base+0x3a8>
     b50:	mov	w9, #0x6                   	// #6
     b54:	b	a90 <gconv@@Base+0x1b0>
     b58:	cmp	x19, x27
     b5c:	b.eq	11fc <gconv@@Base+0x91c>  // b.none
     b60:	add	x1, x21, #0x4
     b64:	cmp	x1, x20
     b68:	b.hi	f84 <gconv@@Base+0x6a4>  // b.pmore
     b6c:	and	w7, w7, #0x2
     b70:	mov	x0, x27
     b74:	mov	x25, x21
     b78:	mov	w9, #0x4                   	// #4
     b7c:	nop
     b80:	ldrb	w3, [x0]
     b84:	mov	x2, x0
     b88:	ldr	w4, [x15, w3, sxtw #2]
     b8c:	cmp	w4, #0x0
     b90:	ccmp	w3, #0x0, #0x4, eq  // eq = none
     b94:	b.ne	ce8 <gconv@@Base+0x408>  // b.any
     b98:	add	x0, x0, #0x1
     b9c:	str	w4, [x25]
     ba0:	mov	x2, x0
     ba4:	mov	x25, x1
     ba8:	cmp	x19, x0
     bac:	b.eq	bc0 <gconv@@Base+0x2e0>  // b.none
     bb0:	add	x1, x25, #0x4
     bb4:	cmp	x20, x1
     bb8:	b.cs	b80 <gconv@@Base+0x2a0>  // b.hs, b.nlast
     bbc:	mov	w9, #0x5                   	// #5
     bc0:	str	x2, [x28]
     bc4:	ldr	x0, [sp, #128]
     bc8:	cbz	x0, a9c <gconv@@Base+0x1bc>
     bcc:	ldp	x21, x22, [sp, #32]
     bd0:	str	x25, [x0]
     bd4:	adrp	x0, 11000 <gconv@@Base+0x10720>
     bd8:	ldr	x0, [x0, #4056]
     bdc:	ldr	x1, [sp, #232]
     be0:	ldr	x0, [x0]
     be4:	eor	x0, x1, x0
     be8:	cbnz	x0, 152c <gconv@@Base+0xc4c>
     bec:	mov	w0, w9
     bf0:	ldp	x19, x20, [sp, #16]
     bf4:	ldp	x23, x24, [sp, #48]
     bf8:	ldp	x25, x26, [sp, #64]
     bfc:	ldp	x27, x28, [sp, #80]
     c00:	ldp	x29, x30, [sp], #240
     c04:	ret
     c08:	cmp	w9, #0x5
     c0c:	b.eq	d00 <gconv@@Base+0x420>  // b.none
     c10:	ldr	x0, [sp, #120]
     c14:	mov	w7, w9
     c18:	ldr	x0, [x0, #96]
     c1c:	b	b14 <gconv@@Base+0x234>
     c20:	mov	w9, #0x7                   	// #7
     c24:	ldr	x0, [sp, #208]
     c28:	b	a90 <gconv@@Base+0x1b0>
     c2c:	mov	w9, #0x5                   	// #5
     c30:	ldr	x0, [sp, #208]
     c34:	b	a90 <gconv@@Base+0x1b0>
     c38:	ldr	x2, [x28]
     c3c:	mov	x4, x19
     c40:	ldr	x0, [sp, #120]
     c44:	mov	x1, x22
     c48:	ldr	x6, [sp, #136]
     c4c:	str	x3, [sp, #104]
     c50:	ldr	x5, [sp, #160]
     c54:	str	w7, [sp, #112]
     c58:	str	x15, [sp, #176]
     c5c:	bl	700 <__gconv_transliterate@plt>
     c60:	mov	w9, w0
     c64:	ldr	w7, [sp, #112]
     c68:	cmp	w0, #0x6
     c6c:	ldr	x3, [sp, #104]
     c70:	ldr	x15, [sp, #176]
     c74:	b.eq	f54 <gconv@@Base+0x674>  // b.none
     c78:	cmp	w0, #0x5
     c7c:	ldp	x0, x25, [sp, #208]
     c80:	b.ne	a84 <gconv@@Base+0x1a4>  // b.any
     c84:	b	a90 <gconv@@Base+0x1b0>
     c88:	ldr	x2, [sp, #136]
     c8c:	add	x0, x0, #0x4
     c90:	mov	w9, #0x6                   	// #6
     c94:	str	x0, [sp, #208]
     c98:	ldr	x1, [x2]
     c9c:	add	x1, x1, #0x1
     ca0:	str	x1, [x2]
     ca4:	b	a84 <gconv@@Base+0x1a4>
     ca8:	ldr	x8, [sp, #120]
     cac:	mov	x20, x22
     cb0:	ldr	x1, [x23]
     cb4:	mov	x26, x28
     cb8:	ldr	x2, [sp, #192]
     cbc:	ldr	x0, [x8, #96]
     cc0:	str	x25, [x22]
     cc4:	add	x1, x1, x2
     cc8:	str	x1, [x23]
     ccc:	cmp	x0, #0x0
     cd0:	ldr	w0, [sp, #172]
     cd4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     cd8:	ccmp	w9, #0x7, #0x0, ne  // ne = any
     cdc:	b.eq	1108 <gconv@@Base+0x828>  // b.none
     ce0:	ldp	x21, x22, [sp, #32]
     ce4:	b	bd4 <gconv@@Base+0x2f4>
     ce8:	ldr	x3, [sp, #136]
     cec:	cbz	x3, cf4 <gconv@@Base+0x414>
     cf0:	cbnz	w7, f5c <gconv@@Base+0x67c>
     cf4:	mov	w9, #0x6                   	// #6
     cf8:	str	x2, [x28]
     cfc:	b	bc4 <gconv@@Base+0x2e4>
     d00:	ldr	x0, [sp, #120]
     d04:	ldr	x0, [x0, #96]
     d08:	b	b18 <gconv@@Base+0x238>
     d0c:	ldr	x0, [sp, #120]
     d10:	mov	w7, w9
     d14:	ldr	x0, [x0, #96]
     d18:	b	b14 <gconv@@Base+0x234>
     d1c:	ldr	x7, [x20, #32]
     d20:	ldr	w3, [x7]
     d24:	ands	w4, w3, #0x7
     d28:	b.eq	9b0 <gconv@@Base+0xd0>  // b.none
     d2c:	cbnz	x18, 150c <gconv@@Base+0xc2c>
     d30:	stp	x21, x28, [sp, #208]
     d34:	cmp	w4, #0x4
     d38:	b.hi	1534 <gconv@@Base+0xc54>  // b.pmore
     d3c:	mov	w25, w4
     d40:	cbz	w4, 1268 <gconv@@Base+0x988>
     d44:	add	x6, x7, #0x3
     d48:	add	x12, sp, #0xe0
     d4c:	mov	x0, #0x1                   	// #1
     d50:	add	x1, x12, x0
     d54:	ldrb	w5, [x6, x0]
     d58:	cmp	x0, x25
     d5c:	add	x0, x0, #0x1
     d60:	sturb	w5, [x1, #-1]
     d64:	b.ne	d50 <gconv@@Base+0x470>  // b.any
     d68:	mov	x0, #0x4                   	// #4
     d6c:	sub	x0, x0, x25
     d70:	add	x0, x21, x0
     d74:	cmp	x19, x0
     d78:	b.cc	12e8 <gconv@@Base+0xa08>  // b.lo, b.ul, b.last
     d7c:	add	x0, x21, #0x1
     d80:	add	x12, sp, #0xe0
     d84:	cmp	x28, x22
     d88:	b.cs	125c <gconv@@Base+0x97c>  // b.hs, b.nlast
     d8c:	add	x25, x25, #0x1
     d90:	str	x0, [sp, #208]
     d94:	add	x1, x12, x25
     d98:	cmp	x25, #0x3
     d9c:	ldurb	w2, [x0, #-1]
     da0:	ccmp	x19, x0, #0x0, ls  // ls = plast
     da4:	add	x0, x0, #0x1
     da8:	sturb	w2, [x1, #-1]
     dac:	b.hi	d8c <gconv@@Base+0x4ac>  // b.pmore
     db0:	ldr	w0, [sp, #224]
     db4:	mov	w1, #0xfffe                	// #65534
     db8:	str	x12, [sp, #208]
     dbc:	cmp	w0, w1
     dc0:	b.hi	12cc <gconv@@Base+0x9ec>  // b.pmore
     dc4:	cmp	w0, #0x7f
     dc8:	b.ls	dd4 <gconv@@Base+0x4f4>  // b.plast
     dcc:	cmp	w0, w1
     dd0:	b.ls	128c <gconv@@Base+0x9ac>  // b.plast
     dd4:	adrp	x1, 1000 <gconv@@Base+0x720>
     dd8:	add	x1, x1, #0x710
     ddc:	add	x1, x1, #0x400
     de0:	ldrb	w1, [x1, w0, uxtw]
     de4:	cmp	w1, #0x0
     de8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
     dec:	b.ne	128c <gconv@@Base+0x9ac>  // b.any
     df0:	add	x0, x28, #0x1
     df4:	str	x0, [sp, #216]
     df8:	strb	w1, [x28]
     dfc:	ldr	x0, [sp, #208]
     e00:	add	x0, x0, #0x4
     e04:	str	x0, [sp, #208]
     e08:	cmp	x0, x12
     e0c:	b.eq	1278 <gconv@@Base+0x998>  // b.none
     e10:	ldr	w3, [x7]
     e14:	sub	x12, x0, x12
     e18:	and	w4, w3, #0x7
     e1c:	mov	w4, w4
     e20:	cmp	x4, x12
     e24:	b.ge	1554 <gconv@@Base+0xc74>  // b.tcont
     e28:	ldr	x21, [x26]
     e2c:	sub	x12, x12, x4
     e30:	ldr	w15, [x20, #16]
     e34:	and	w3, w3, #0xfffffff8
     e38:	add	x21, x21, x12
     e3c:	str	x21, [x26]
     e40:	ldr	x23, [sp, #192]
     e44:	ldr	x0, [x8, #96]
     e48:	ldr	x28, [sp, #216]
     e4c:	str	w3, [x7]
     e50:	b	9b0 <gconv@@Base+0xd0>
     e54:	mov	x0, #0x0                   	// #0
     e58:	cbz	x23, e60 <gconv@@Base+0x580>
     e5c:	ldr	x0, [x23]
     e60:	ldr	x1, [sp, #192]
     e64:	add	x0, x0, x1
     e68:	cmp	x0, x26
     e6c:	b.eq	1044 <gconv@@Base+0x764>  // b.none
     e70:	ldr	x0, [sp, #120]
     e74:	ldr	w25, [x22, #16]
     e78:	str	x27, [x28]
     e7c:	ldr	x0, [x0, #96]
     e80:	cbz	x0, 115c <gconv@@Base+0x87c>
     e84:	stp	x27, x21, [sp, #208]
     e88:	cmp	x19, x27
     e8c:	b.eq	1444 <gconv@@Base+0xb64>  // b.none
     e90:	add	x26, sp, #0xd0
     e94:	stp	x20, x23, [sp, #104]
     e98:	mov	x23, x22
     e9c:	ldr	x22, [sp, #136]
     ea0:	mov	x0, x21
     ea4:	mov	x3, x26
     ea8:	mov	x20, x9
     eac:	mov	x26, x24
     eb0:	mov	x24, x21
     eb4:	mov	w21, w7
     eb8:	mov	x2, #0x4                   	// #4
     ebc:	add	x8, x27, #0x4
     ec0:	cmp	x19, x8
     ec4:	b.cc	11cc <gconv@@Base+0x8ec>  // b.lo, b.ul, b.last
     ec8:	cmp	x20, x0
     ecc:	b.ls	1234 <gconv@@Base+0x954>  // b.plast
     ed0:	ldr	w5, [x27]
     ed4:	mov	w10, #0xfffe                	// #65534
     ed8:	cmp	w5, w10
     edc:	b.hi	121c <gconv@@Base+0x93c>  // b.pmore
     ee0:	cmp	w5, #0x7f
     ee4:	b.ls	ef0 <gconv@@Base+0x610>  // b.plast
     ee8:	cmp	w5, w10
     eec:	b.ls	ff4 <gconv@@Base+0x714>  // b.plast
     ef0:	ldr	x1, [sp, #96]
     ef4:	ldrb	w1, [x1, w5, uxtw]
     ef8:	cmp	w1, #0x0
     efc:	ccmp	w5, #0x0, #0x4, eq  // eq = none
     f00:	b.ne	ff4 <gconv@@Base+0x714>  // b.any
     f04:	add	x4, x0, #0x1
     f08:	str	x4, [sp, #216]
     f0c:	strb	w1, [x0]
     f10:	ldp	x27, x0, [sp, #208]
     f14:	add	x27, x27, #0x4
     f18:	str	x27, [sp, #208]
     f1c:	cmp	x19, x27
     f20:	b.ne	ebc <gconv@@Base+0x5dc>  // b.any
     f24:	mov	x22, x23
     f28:	mov	w7, w21
     f2c:	ldp	x20, x23, [sp, #104]
     f30:	mov	x21, x24
     f34:	ldr	x9, [sp, #200]
     f38:	mov	x24, x26
     f3c:	str	x19, [x28]
     f40:	cmp	x0, x9
     f44:	b.ne	11dc <gconv@@Base+0x8fc>  // b.any
     f48:	cmp	x2, #0x5
     f4c:	b.eq	10e8 <gconv@@Base+0x808>  // b.none
     f50:	b	1018 <gconv@@Base+0x738>
     f54:	ldr	x25, [sp, #216]
     f58:	b	b48 <gconv@@Base+0x268>
     f5c:	ldr	x1, [x3]
     f60:	add	x0, x0, #0x1
     f64:	mov	x2, x0
     f68:	mov	w9, #0x6                   	// #6
     f6c:	add	x1, x1, #0x1
     f70:	str	x1, [x3]
     f74:	b	ba8 <gconv@@Base+0x2c8>
     f78:	mov	x0, x6
     f7c:	str	x6, [sp, #208]
     f80:	b	a84 <gconv@@Base+0x1a4>
     f84:	mov	x2, x27
     f88:	mov	x25, x21
     f8c:	mov	w9, #0x5                   	// #5
     f90:	str	x2, [x28]
     f94:	b	bc4 <gconv@@Base+0x2e4>
     f98:	cbnz	x18, 1458 <gconv@@Base+0xb78>
     f9c:	ldr	x0, [x20, #32]
     fa0:	mov	w9, #0x0                   	// #0
     fa4:	str	xzr, [x0]
     fa8:	ldr	w0, [x20, #16]
     fac:	tbnz	w0, #0, bd4 <gconv@@Base+0x2f4>
     fb0:	mov	x0, x24
     fb4:	str	w6, [sp, #96]
     fb8:	bl	740 <_dl_mcount_wrapper_check@plt>
     fbc:	ldp	x0, x1, [sp, #144]
     fc0:	mov	x5, x27
     fc4:	ldr	w6, [sp, #96]
     fc8:	mov	x4, #0x0                   	// #0
     fcc:	ldr	w7, [sp, #168]
     fd0:	mov	x3, #0x0                   	// #0
     fd4:	mov	x2, #0x0                   	// #0
     fd8:	blr	x24
     fdc:	mov	w9, w0
     fe0:	b	bd4 <gconv@@Base+0x2f4>
     fe4:	mov	x20, x22
     fe8:	mov	x26, x28
     fec:	mov	w9, w7
     ff0:	b	ccc <gconv@@Base+0x3ec>
     ff4:	cbz	x22, 11cc <gconv@@Base+0x8ec>
     ff8:	ldr	w1, [x23, #16]
     ffc:	tbnz	w1, #3, 1088 <gconv@@Base+0x7a8>
    1000:	ldr	x10, [sp, #208]
    1004:	tbnz	w25, #1, 106c <gconv@@Base+0x78c>
    1008:	ldr	x1, [sp, #200]
    100c:	str	x10, [x28]
    1010:	cmp	x1, x0
    1014:	b.ne	11dc <gconv@@Base+0x8fc>  // b.any
    1018:	adrp	x3, 1000 <gconv@@Base+0x720>
    101c:	adrp	x1, 1000 <gconv@@Base+0x720>
    1020:	adrp	x0, 1000 <gconv@@Base+0x720>
    1024:	add	x3, x3, #0x708
    1028:	add	x1, x1, #0x590
    102c:	add	x0, x0, #0x6c0
    1030:	mov	w2, #0x2eb                 	// #747
    1034:	bl	750 <__assert_fail@plt>
    1038:	mov	x0, x19
    103c:	mov	w9, #0x4                   	// #4
    1040:	b	a90 <gconv@@Base+0x1b0>
    1044:	ldr	x0, [sp, #120]
    1048:	sub	x9, x25, x9
    104c:	ldr	x1, [x28]
    1050:	ldr	x0, [x0, #96]
    1054:	cbz	x0, 1348 <gconv@@Base+0xa68>
    1058:	ldr	x0, [sp, #120]
    105c:	sub	x9, x1, x9, lsl #2
    1060:	str	x9, [x28]
    1064:	ldr	x0, [x0, #96]
    1068:	b	b14 <gconv@@Base+0x234>
    106c:	ldr	x1, [x22]
    1070:	add	x27, x10, #0x4
    1074:	mov	x2, #0x6                   	// #6
    1078:	str	x27, [sp, #208]
    107c:	add	x1, x1, #0x1
    1080:	str	x1, [x22]
    1084:	b	f1c <gconv@@Base+0x63c>
    1088:	ldr	x2, [x28]
    108c:	mov	x6, x22
    1090:	ldr	x0, [sp, #120]
    1094:	mov	x4, x19
    1098:	ldr	x5, [sp, #160]
    109c:	mov	x1, x23
    10a0:	stp	x3, x15, [sp, #176]
    10a4:	bl	700 <__gconv_transliterate@plt>
    10a8:	sxtw	x2, w0
    10ac:	cmp	w2, #0x6
    10b0:	ldp	x3, x15, [sp, #176]
    10b4:	b.eq	1450 <gconv@@Base+0xb70>  // b.none
    10b8:	cmp	w2, #0x5
    10bc:	ldp	x27, x0, [sp, #208]
    10c0:	b.ne	f1c <gconv@@Base+0x63c>  // b.any
    10c4:	ldr	x1, [sp, #200]
    10c8:	str	x27, [x28]
    10cc:	mov	w7, w21
    10d0:	mov	x22, x23
    10d4:	mov	x21, x24
    10d8:	cmp	x1, x0
    10dc:	mov	x24, x26
    10e0:	ldp	x20, x23, [sp, #104]
    10e4:	b.ne	11dc <gconv@@Base+0x8fc>  // b.any
    10e8:	cmp	x0, x21
    10ec:	ldr	x0, [sp, #120]
    10f0:	ldr	x0, [x0, #96]
    10f4:	b.ne	b14 <gconv@@Base+0x234>  // b.any
    10f8:	ldr	w1, [x22, #20]
    10fc:	sub	w1, w1, #0x1
    1100:	str	w1, [x22, #20]
    1104:	b	b14 <gconv@@Base+0x234>
    1108:	ldr	x0, [x26]
    110c:	sub	x1, x19, x0
    1110:	cmp	x1, #0x3
    1114:	b.gt	1484 <gconv@@Base+0xba4>
    1118:	ldr	x2, [x20, #32]
    111c:	cmp	x0, x19
    1120:	add	x0, x0, #0x1
    1124:	add	x3, x2, #0x4
    1128:	b.cs	147c <gconv@@Base+0xb9c>  // b.hs, b.nlast
    112c:	str	x0, [x26]
    1130:	cmp	x19, x0
    1134:	add	x0, x0, #0x1
    1138:	ldurb	w4, [x0, #-2]
    113c:	strb	w4, [x3], #1
    1140:	b.ne	112c <gconv@@Base+0x84c>  // b.any
    1144:	ldr	w0, [x2]
    1148:	ldp	x21, x22, [sp, #32]
    114c:	and	w0, w0, #0xfffffff8
    1150:	orr	w0, w0, w1
    1154:	str	w0, [x2]
    1158:	b	bd4 <gconv@@Base+0x2f4>
    115c:	cmp	x19, x27
    1160:	b.eq	1444 <gconv@@Base+0xb64>  // b.none
    1164:	add	x3, x21, #0x4
    1168:	cmp	x9, x3
    116c:	b.cc	1360 <gconv@@Base+0xa80>  // b.lo, b.ul, b.last
    1170:	ldr	x8, [sp, #136]
    1174:	and	w25, w25, #0x2
    1178:	mov	x0, x21
    117c:	mov	x4, x27
    1180:	mov	x2, #0x4                   	// #4
    1184:	ldrb	w6, [x4]
    1188:	mov	x1, x4
    118c:	ldr	w5, [x15, w6, sxtw #2]
    1190:	cmp	w5, #0x0
    1194:	ccmp	w6, #0x0, #0x4, eq  // eq = none
    1198:	b.ne	1324 <gconv@@Base+0xa44>  // b.any
    119c:	add	x4, x4, #0x1
    11a0:	str	w5, [x0]
    11a4:	mov	x1, x4
    11a8:	mov	x0, x3
    11ac:	cmp	x19, x4
    11b0:	b.eq	11c4 <gconv@@Base+0x8e4>  // b.none
    11b4:	add	x3, x0, #0x4
    11b8:	cmp	x9, x3
    11bc:	b.cs	1184 <gconv@@Base+0x8a4>  // b.hs, b.nlast
    11c0:	mov	x2, #0x5                   	// #5
    11c4:	str	x1, [x28]
    11c8:	b	f40 <gconv@@Base+0x660>
    11cc:	ldp	x1, x2, [sp, #200]
    11d0:	str	x2, [x28]
    11d4:	cmp	x1, x0
    11d8:	b.eq	1018 <gconv@@Base+0x738>  // b.none
    11dc:	adrp	x3, 1000 <gconv@@Base+0x720>
    11e0:	adrp	x1, 1000 <gconv@@Base+0x720>
    11e4:	adrp	x0, 1000 <gconv@@Base+0x720>
    11e8:	add	x3, x3, #0x708
    11ec:	add	x1, x1, #0x590
    11f0:	add	x0, x0, #0x6a8
    11f4:	mov	w2, #0x2ea                 	// #746
    11f8:	bl	750 <__assert_fail@plt>
    11fc:	mov	x2, x19
    1200:	mov	x25, x21
    1204:	mov	w9, #0x4                   	// #4
    1208:	str	x2, [x28]
    120c:	b	bc4 <gconv@@Base+0x2e4>
    1210:	mov	w9, #0x6                   	// #6
    1214:	ldr	x0, [sp, #208]
    1218:	b	a90 <gconv@@Base+0x1b0>
    121c:	mov	w1, #0x1c00                	// #7168
    1220:	cmp	w1, w5, lsr #7
    1224:	b.ne	ff4 <gconv@@Base+0x714>  // b.any
    1228:	mov	x27, x8
    122c:	str	x8, [sp, #208]
    1230:	b	f1c <gconv@@Base+0x63c>
    1234:	ldp	x1, x2, [sp, #200]
    1238:	str	x2, [x28]
    123c:	mov	w7, w21
    1240:	mov	x22, x23
    1244:	mov	x21, x24
    1248:	mov	x24, x26
    124c:	ldp	x20, x23, [sp, #104]
    1250:	cmp	x1, x0
    1254:	b.eq	10e8 <gconv@@Base+0x808>  // b.none
    1258:	b	11dc <gconv@@Base+0x8fc>
    125c:	mov	w9, #0x5                   	// #5
    1260:	ldp	x21, x22, [sp, #32]
    1264:	b	bd4 <gconv@@Base+0x2f4>
    1268:	mov	x0, #0x4                   	// #4
    126c:	mov	x25, #0x0                   	// #0
    1270:	b	d70 <gconv@@Base+0x490>
    1274:	cbnz	w9, ce0 <gconv@@Base+0x400>
    1278:	ldr	w15, [x20, #16]
    127c:	ldr	x21, [x26]
    1280:	ldr	x0, [x8, #96]
    1284:	ldr	x23, [sp, #192]
    1288:	b	9b0 <gconv@@Base+0xd0>
    128c:	ldr	x0, [sp, #136]
    1290:	cbz	x0, 12c0 <gconv@@Base+0x9e0>
    1294:	tbnz	w15, #3, 1378 <gconv@@Base+0xa98>
    1298:	tbz	w15, #1, 12c0 <gconv@@Base+0x9e0>
    129c:	mov	x0, x12
    12a0:	ldr	x2, [sp, #136]
    12a4:	add	x0, x0, #0x4
    12a8:	str	x0, [sp, #208]
    12ac:	ldr	x1, [x2]
    12b0:	add	x1, x1, #0x1
    12b4:	str	x1, [x2]
    12b8:	cmp	x0, x12
    12bc:	b.ne	e10 <gconv@@Base+0x530>  // b.any
    12c0:	mov	w9, #0x6                   	// #6
    12c4:	ldp	x21, x22, [sp, #32]
    12c8:	b	bd4 <gconv@@Base+0x2f4>
    12cc:	mov	w1, #0x1c00                	// #7168
    12d0:	cmp	w1, w0, lsr #7
    12d4:	b.ne	128c <gconv@@Base+0x9ac>  // b.any
    12d8:	add	x0, x12, #0x4
    12dc:	mov	x12, #0x4                   	// #4
    12e0:	str	x0, [sp, #208]
    12e4:	b	e1c <gconv@@Base+0x53c>
    12e8:	str	x19, [x26]
    12ec:	cmp	x21, x19
    12f0:	b.cs	1318 <gconv@@Base+0xa38>  // b.hs, b.nlast
    12f4:	add	x21, x21, #0x1
    12f8:	add	x7, x7, x25
    12fc:	str	x21, [sp, #208]
    1300:	cmp	x19, x21
    1304:	add	x7, x7, #0x1
    1308:	add	x21, x21, #0x1
    130c:	ldurb	w0, [x21, #-2]
    1310:	strb	w0, [x7, #3]
    1314:	b.ne	12fc <gconv@@Base+0xa1c>  // b.any
    1318:	mov	w9, #0x7                   	// #7
    131c:	ldp	x21, x22, [sp, #32]
    1320:	b	bd4 <gconv@@Base+0x2f4>
    1324:	cbz	x8, 136c <gconv@@Base+0xa8c>
    1328:	cbz	w25, 136c <gconv@@Base+0xa8c>
    132c:	ldr	x3, [x8]
    1330:	add	x4, x4, #0x1
    1334:	mov	x1, x4
    1338:	mov	x2, #0x6                   	// #6
    133c:	add	x3, x3, #0x1
    1340:	str	x3, [x8]
    1344:	b	11ac <gconv@@Base+0x8cc>
    1348:	add	x0, x9, #0x3
    134c:	cmp	x9, #0x0
    1350:	csel	x9, x0, x9, lt  // lt = tstop
    1354:	sub	x0, x1, x9, asr #2
    1358:	str	x0, [x28]
    135c:	b	b0c <gconv@@Base+0x22c>
    1360:	cmp	x9, x21
    1364:	b.eq	10f8 <gconv@@Base+0x818>  // b.none
    1368:	b	11dc <gconv@@Base+0x8fc>
    136c:	mov	x2, #0x6                   	// #6
    1370:	str	x1, [x28]
    1374:	b	f40 <gconv@@Base+0x660>
    1378:	add	x23, x12, x25
    137c:	mov	x6, x0
    1380:	mov	x2, x21
    1384:	mov	x0, x8
    1388:	mov	x4, x23
    138c:	add	x5, sp, #0xd8
    1390:	add	x3, sp, #0xd0
    1394:	mov	x1, x20
    1398:	stp	x8, x12, [sp, #96]
    139c:	str	x7, [sp, #112]
    13a0:	str	w15, [sp, #120]
    13a4:	str	x18, [sp, #128]
    13a8:	bl	700 <__gconv_transliterate@plt>
    13ac:	ldr	w15, [sp, #120]
    13b0:	mov	w9, w0
    13b4:	cmp	w0, #0x6
    13b8:	ldp	x8, x12, [sp, #96]
    13bc:	ldr	x7, [sp, #112]
    13c0:	ldr	x18, [sp, #128]
    13c4:	ldr	x0, [sp, #208]
    13c8:	b.eq	14a4 <gconv@@Base+0xbc4>  // b.none
    13cc:	cmp	x0, x12
    13d0:	b.ne	e10 <gconv@@Base+0x530>  // b.any
    13d4:	cmp	w9, #0x7
    13d8:	b.ne	1274 <gconv@@Base+0x994>  // b.any
    13dc:	add	x0, x12, #0x4
    13e0:	cmp	x23, x0
    13e4:	b.eq	14ec <gconv@@Base+0xc0c>  // b.none
    13e8:	ldr	w0, [x7]
    13ec:	ldr	x1, [x26]
    13f0:	and	x2, x0, #0x7
    13f4:	sub	x2, x25, x2
    13f8:	and	w0, w0, #0xfffffff8
    13fc:	add	x1, x1, x2
    1400:	str	x1, [x26]
    1404:	cmp	x25, w0, sxtw
    1408:	b.le	14cc <gconv@@Base+0xbec>
    140c:	cmp	x25, #0x4
    1410:	b.hi	14ac <gconv@@Base+0xbcc>  // b.pmore
    1414:	orr	w0, w0, w25
    1418:	str	w0, [x7]
    141c:	cmp	x23, x12
    1420:	b.ls	1318 <gconv@@Base+0xa38>  // b.plast
    1424:	add	x7, x7, #0x4
    1428:	add	x12, x12, #0x1
    142c:	str	x12, [sp, #208]
    1430:	cmp	x23, x12
    1434:	ldurb	w0, [x12, #-1]
    1438:	strb	w0, [x7], #1
    143c:	b.ne	1428 <gconv@@Base+0xb48>  // b.any
    1440:	b	1318 <gconv@@Base+0xa38>
    1444:	cmp	x9, x21
    1448:	b.eq	1018 <gconv@@Base+0x738>  // b.none
    144c:	b	11dc <gconv@@Base+0x8fc>
    1450:	ldr	x0, [sp, #216]
    1454:	b	1000 <gconv@@Base+0x720>
    1458:	adrp	x3, 1000 <gconv@@Base+0x720>
    145c:	adrp	x1, 1000 <gconv@@Base+0x720>
    1460:	adrp	x0, 1000 <gconv@@Base+0x720>
    1464:	add	x3, x3, #0x708
    1468:	add	x1, x1, #0x590
    146c:	add	x0, x0, #0x5a8
    1470:	mov	w2, #0x1a4                 	// #420
    1474:	stp	x21, x22, [sp, #32]
    1478:	bl	750 <__assert_fail@plt>
    147c:	mov	w1, #0x0                   	// #0
    1480:	b	1144 <gconv@@Base+0x864>
    1484:	adrp	x3, 1000 <gconv@@Base+0x720>
    1488:	adrp	x1, 1000 <gconv@@Base+0x720>
    148c:	adrp	x0, 1000 <gconv@@Base+0x720>
    1490:	add	x3, x3, #0x708
    1494:	add	x1, x1, #0x590
    1498:	add	x0, x0, #0x6e0
    149c:	mov	w2, #0x31e                 	// #798
    14a0:	bl	750 <__assert_fail@plt>
    14a4:	tbz	w15, #1, 12b8 <gconv@@Base+0x9d8>
    14a8:	b	12a0 <gconv@@Base+0x9c0>
    14ac:	adrp	x3, 1000 <gconv@@Base+0x720>
    14b0:	adrp	x1, 1000 <gconv@@Base+0x720>
    14b4:	adrp	x0, 1000 <gconv@@Base+0x720>
    14b8:	add	x3, x3, #0x6f8
    14bc:	add	x1, x1, #0x5c0
    14c0:	add	x0, x0, #0x678
    14c4:	mov	w2, #0x1e6                 	// #486
    14c8:	bl	750 <__assert_fail@plt>
    14cc:	adrp	x3, 1000 <gconv@@Base+0x720>
    14d0:	adrp	x1, 1000 <gconv@@Base+0x720>
    14d4:	adrp	x0, 1000 <gconv@@Base+0x720>
    14d8:	add	x3, x3, #0x6f8
    14dc:	add	x1, x1, #0x5c0
    14e0:	add	x0, x0, #0x650
    14e4:	mov	w2, #0x1e5                 	// #485
    14e8:	bl	750 <__assert_fail@plt>
    14ec:	adrp	x3, 1000 <gconv@@Base+0x720>
    14f0:	adrp	x1, 1000 <gconv@@Base+0x720>
    14f4:	adrp	x0, 1000 <gconv@@Base+0x720>
    14f8:	add	x3, x3, #0x6f8
    14fc:	add	x1, x1, #0x5c0
    1500:	add	x0, x0, #0x628
    1504:	mov	w2, #0x1db                 	// #475
    1508:	bl	750 <__assert_fail@plt>
    150c:	adrp	x3, 1000 <gconv@@Base+0x720>
    1510:	adrp	x1, 1000 <gconv@@Base+0x720>
    1514:	adrp	x0, 1000 <gconv@@Base+0x720>
    1518:	add	x3, x3, #0x708
    151c:	add	x1, x1, #0x590
    1520:	add	x0, x0, #0x5a8
    1524:	mov	w2, #0x234                 	// #564
    1528:	bl	750 <__assert_fail@plt>
    152c:	stp	x21, x22, [sp, #32]
    1530:	bl	710 <__stack_chk_fail@plt>
    1534:	adrp	x3, 1000 <gconv@@Base+0x720>
    1538:	adrp	x1, 1000 <gconv@@Base+0x720>
    153c:	adrp	x0, 1000 <gconv@@Base+0x720>
    1540:	add	x3, x3, #0x6f8
    1544:	add	x1, x1, #0x5c0
    1548:	add	x0, x0, #0x5d0
    154c:	mov	w2, #0x18b                 	// #395
    1550:	bl	750 <__assert_fail@plt>
    1554:	adrp	x3, 1000 <gconv@@Base+0x720>
    1558:	adrp	x1, 1000 <gconv@@Base+0x720>
    155c:	adrp	x0, 1000 <gconv@@Base+0x720>
    1560:	add	x3, x3, #0x6f8
    1564:	add	x1, x1, #0x5c0
    1568:	add	x0, x0, #0x600
    156c:	mov	w2, #0x1c9                 	// #457
    1570:	bl	750 <__assert_fail@plt>

Disassembly of section .fini:

0000000000001574 <.fini>:
    1574:	stp	x29, x30, [sp, #-16]!
    1578:	mov	x29, sp
    157c:	ldp	x29, x30, [sp], #16
    1580:	ret
