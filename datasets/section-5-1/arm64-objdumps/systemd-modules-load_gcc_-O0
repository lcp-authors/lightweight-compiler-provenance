
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-modules-load_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401170 <_init>:
  401170:	stp	x29, x30, [sp, #-16]!
  401174:	mov	x29, sp
  401178:	bl	401450 <call_weak_fn>
  40117c:	ldp	x29, x30, [sp], #16
  401180:	ret

Disassembly of section .plt:

0000000000401190 <.plt>:
  401190:	stp	x16, x30, [sp, #-16]!
  401194:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401198:	ldr	x17, [x16, #3776]
  40119c:	add	x16, x16, #0xec0
  4011a0:	br	x17
  4011a4:	nop
  4011a8:	nop
  4011ac:	nop

00000000004011b0 <safe_fclose@plt>:
  4011b0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4011b4:	ldr	x17, [x16, #3784]
  4011b8:	add	x16, x16, #0xec8
  4011bc:	br	x17

00000000004011c0 <read_line_full@plt>:
  4011c0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4011c4:	ldr	x17, [x16, #3792]
  4011c8:	add	x16, x16, #0xed0
  4011cc:	br	x17

00000000004011d0 <__libc_start_main@plt>:
  4011d0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4011d4:	ldr	x17, [x16, #3800]
  4011d8:	add	x16, x16, #0xed8
  4011dc:	br	x17

00000000004011e0 <strv_extend_strv@plt>:
  4011e0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4011e4:	ldr	x17, [x16, #3808]
  4011e8:	add	x16, x16, #0xee0
  4011ec:	br	x17

00000000004011f0 <__gmon_start__@plt>:
  4011f0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4011f4:	ldr	x17, [x16, #3816]
  4011f8:	add	x16, x16, #0xee8
  4011fc:	br	x17

0000000000401200 <polkit_agent_close@plt>:
  401200:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401204:	ldr	x17, [x16, #3824]
  401208:	add	x16, x16, #0xef0
  40120c:	br	x17

0000000000401210 <strv_split_full@plt>:
  401210:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401214:	ldr	x17, [x16, #3832]
  401218:	add	x16, x16, #0xef8
  40121c:	br	x17

0000000000401220 <proc_cmdline_key_streq@plt>:
  401220:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401224:	ldr	x17, [x16, #3840]
  401228:	add	x16, x16, #0xf00
  40122c:	br	x17

0000000000401230 <kmod_new@plt>:
  401230:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401234:	ldr	x17, [x16, #3848]
  401238:	add	x16, x16, #0xf08
  40123c:	br	x17

0000000000401240 <kmod_set_log_fn@plt>:
  401240:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401244:	ldr	x17, [x16, #3856]
  401248:	add	x16, x16, #0xf10
  40124c:	br	x17

0000000000401250 <log_setup_service@plt>:
  401250:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401254:	ldr	x17, [x16, #3864]
  401258:	add	x16, x16, #0xf18
  40125c:	br	x17

0000000000401260 <log_assert_failed_realm@plt>:
  401260:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401264:	ldr	x17, [x16, #3872]
  401268:	add	x16, x16, #0xf20
  40126c:	br	x17

0000000000401270 <getopt_long@plt>:
  401270:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401274:	ldr	x17, [x16, #3880]
  401278:	add	x16, x16, #0xf28
  40127c:	br	x17

0000000000401280 <log_assert_failed_unreachable_realm@plt>:
  401280:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401284:	ldr	x17, [x16, #3888]
  401288:	add	x16, x16, #0xf30
  40128c:	br	x17

0000000000401290 <umask@plt>:
  401290:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401294:	ldr	x17, [x16, #3896]
  401298:	add	x16, x16, #0xf38
  40129c:	br	x17

00000000004012a0 <abort@plt>:
  4012a0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4012a4:	ldr	x17, [x16, #3904]
  4012a8:	add	x16, x16, #0xf40
  4012ac:	br	x17

00000000004012b0 <kmod_unref@plt>:
  4012b0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4012b4:	ldr	x17, [x16, #3912]
  4012b8:	add	x16, x16, #0xf48
  4012bc:	br	x17

00000000004012c0 <strv_free@plt>:
  4012c0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4012c4:	ldr	x17, [x16, #3920]
  4012c8:	add	x16, x16, #0xf50
  4012cc:	br	x17

00000000004012d0 <module_load_and_warn@plt>:
  4012d0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4012d4:	ldr	x17, [x16, #3928]
  4012d8:	add	x16, x16, #0xf58
  4012dc:	br	x17

00000000004012e0 <terminal_urlify_man@plt>:
  4012e0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4012e4:	ldr	x17, [x16, #3936]
  4012e8:	add	x16, x16, #0xf60
  4012ec:	br	x17

00000000004012f0 <__stack_chk_fail@plt>:
  4012f0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4012f4:	ldr	x17, [x16, #3944]
  4012f8:	add	x16, x16, #0xf68
  4012fc:	br	x17

0000000000401300 <conf_files_list_nulstr@plt>:
  401300:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401304:	ldr	x17, [x16, #3952]
  401308:	add	x16, x16, #0xf70
  40130c:	br	x17

0000000000401310 <ask_password_agent_close@plt>:
  401310:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401314:	ldr	x17, [x16, #3960]
  401318:	add	x16, x16, #0xf78
  40131c:	br	x17

0000000000401320 <version@plt>:
  401320:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401324:	ldr	x17, [x16, #3968]
  401328:	add	x16, x16, #0xf80
  40132c:	br	x17

0000000000401330 <pager_close@plt>:
  401330:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401334:	ldr	x17, [x16, #3976]
  401338:	add	x16, x16, #0xf88
  40133c:	br	x17

0000000000401340 <log_internal_realm@plt>:
  401340:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401344:	ldr	x17, [x16, #3984]
  401348:	add	x16, x16, #0xf90
  40134c:	br	x17

0000000000401350 <strchr@plt>:
  401350:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401354:	ldr	x17, [x16, #3992]
  401358:	add	x16, x16, #0xf98
  40135c:	br	x17

0000000000401360 <proc_cmdline_parse@plt>:
  401360:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401364:	ldr	x17, [x16, #4000]
  401368:	add	x16, x16, #0xfa0
  40136c:	br	x17

0000000000401370 <log_internalv_realm@plt>:
  401370:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401374:	ldr	x17, [x16, #4008]
  401378:	add	x16, x16, #0xfa8
  40137c:	br	x17

0000000000401380 <strstrip@plt>:
  401380:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401384:	ldr	x17, [x16, #4016]
  401388:	add	x16, x16, #0xfb0
  40138c:	br	x17

0000000000401390 <free@plt>:
  401390:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  401394:	ldr	x17, [x16, #4024]
  401398:	add	x16, x16, #0xfb8
  40139c:	br	x17

00000000004013a0 <search_and_fopen_nulstr@plt>:
  4013a0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4013a4:	ldr	x17, [x16, #4032]
  4013a8:	add	x16, x16, #0xfc0
  4013ac:	br	x17

00000000004013b0 <mac_selinux_finish@plt>:
  4013b0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4013b4:	ldr	x17, [x16, #4040]
  4013b8:	add	x16, x16, #0xfc8
  4013bc:	br	x17

00000000004013c0 <printf@plt>:
  4013c0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4013c4:	ldr	x17, [x16, #4048]
  4013c8:	add	x16, x16, #0xfd0
  4013cc:	br	x17

00000000004013d0 <kmod_load_resources@plt>:
  4013d0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4013d4:	ldr	x17, [x16, #4056]
  4013d8:	add	x16, x16, #0xfd8
  4013dc:	br	x17

00000000004013e0 <log_oom_internal@plt>:
  4013e0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4013e4:	ldr	x17, [x16, #4064]
  4013e8:	add	x16, x16, #0xfe0
  4013ec:	br	x17

00000000004013f0 <log_get_max_level_realm@plt>:
  4013f0:	adrp	x16, 413000 <__FRAME_END__+0x10150>
  4013f4:	ldr	x17, [x16, #4072]
  4013f8:	add	x16, x16, #0xfe8
  4013fc:	br	x17

Disassembly of section .text:

0000000000401400 <_start>:
  401400:	mov	x29, #0x0                   	// #0
  401404:	mov	x30, #0x0                   	// #0
  401408:	mov	x5, x0
  40140c:	ldr	x1, [sp]
  401410:	add	x2, sp, #0x8
  401414:	mov	x6, sp
  401418:	movz	x0, #0x0, lsl #48
  40141c:	movk	x0, #0x0, lsl #32
  401420:	movk	x0, #0x40, lsl #16
  401424:	movk	x0, #0x2530
  401428:	movz	x3, #0x0, lsl #48
  40142c:	movk	x3, #0x0, lsl #32
  401430:	movk	x3, #0x40, lsl #16
  401434:	movk	x3, #0x2580
  401438:	movz	x4, #0x0, lsl #48
  40143c:	movk	x4, #0x0, lsl #32
  401440:	movk	x4, #0x40, lsl #16
  401444:	movk	x4, #0x2600
  401448:	bl	4011d0 <__libc_start_main@plt>
  40144c:	bl	4012a0 <abort@plt>

0000000000401450 <call_weak_fn>:
  401450:	adrp	x0, 413000 <__FRAME_END__+0x10150>
  401454:	ldr	x0, [x0, #4088]
  401458:	cbz	x0, 401460 <call_weak_fn+0x10>
  40145c:	b	4011f0 <__gmon_start__@plt>
  401460:	ret

0000000000401464 <deregister_tm_clones>:
  401464:	stp	x29, x30, [sp, #-32]!
  401468:	mov	x29, sp
  40146c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401470:	add	x0, x0, #0x0
  401474:	str	x0, [sp, #24]
  401478:	ldr	x0, [sp, #24]
  40147c:	str	x0, [sp, #24]
  401480:	ldr	x1, [sp, #24]
  401484:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401488:	add	x0, x0, #0x0
  40148c:	cmp	x1, x0
  401490:	b.eq	4014cc <deregister_tm_clones+0x68>  // b.none
  401494:	adrp	x0, 402000 <parse_argv+0x88>
  401498:	add	x0, x0, #0x618
  40149c:	ldr	x0, [x0]
  4014a0:	str	x0, [sp, #16]
  4014a4:	ldr	x0, [sp, #16]
  4014a8:	str	x0, [sp, #16]
  4014ac:	ldr	x0, [sp, #16]
  4014b0:	cmp	x0, #0x0
  4014b4:	b.eq	4014d0 <deregister_tm_clones+0x6c>  // b.none
  4014b8:	ldr	x1, [sp, #16]
  4014bc:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4014c0:	add	x0, x0, #0x0
  4014c4:	blr	x1
  4014c8:	b	4014d0 <deregister_tm_clones+0x6c>
  4014cc:	nop
  4014d0:	ldp	x29, x30, [sp], #32
  4014d4:	ret

00000000004014d8 <register_tm_clones>:
  4014d8:	stp	x29, x30, [sp, #-48]!
  4014dc:	mov	x29, sp
  4014e0:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4014e4:	add	x0, x0, #0x0
  4014e8:	str	x0, [sp, #40]
  4014ec:	ldr	x0, [sp, #40]
  4014f0:	str	x0, [sp, #40]
  4014f4:	ldr	x1, [sp, #40]
  4014f8:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4014fc:	add	x0, x0, #0x0
  401500:	sub	x0, x1, x0
  401504:	asr	x0, x0, #3
  401508:	lsr	x1, x0, #63
  40150c:	add	x0, x1, x0
  401510:	asr	x0, x0, #1
  401514:	str	x0, [sp, #32]
  401518:	ldr	x0, [sp, #32]
  40151c:	cmp	x0, #0x0
  401520:	b.eq	401560 <register_tm_clones+0x88>  // b.none
  401524:	adrp	x0, 402000 <parse_argv+0x88>
  401528:	add	x0, x0, #0x620
  40152c:	ldr	x0, [x0]
  401530:	str	x0, [sp, #24]
  401534:	ldr	x0, [sp, #24]
  401538:	str	x0, [sp, #24]
  40153c:	ldr	x0, [sp, #24]
  401540:	cmp	x0, #0x0
  401544:	b.eq	401564 <register_tm_clones+0x8c>  // b.none
  401548:	ldr	x2, [sp, #24]
  40154c:	ldr	x1, [sp, #32]
  401550:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401554:	add	x0, x0, #0x0
  401558:	blr	x2
  40155c:	b	401564 <register_tm_clones+0x8c>
  401560:	nop
  401564:	ldp	x29, x30, [sp], #48
  401568:	ret

000000000040156c <__do_global_dtors_aux>:
  40156c:	stp	x29, x30, [sp, #-16]!
  401570:	mov	x29, sp
  401574:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401578:	add	x0, x0, #0x18
  40157c:	ldrb	w0, [x0]
  401580:	and	x0, x0, #0xff
  401584:	cmp	x0, #0x0
  401588:	b.ne	4015a4 <__do_global_dtors_aux+0x38>  // b.any
  40158c:	bl	401464 <deregister_tm_clones>
  401590:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401594:	add	x0, x0, #0x18
  401598:	mov	w1, #0x1                   	// #1
  40159c:	strb	w1, [x0]
  4015a0:	b	4015a8 <__do_global_dtors_aux+0x3c>
  4015a4:	nop
  4015a8:	ldp	x29, x30, [sp], #16
  4015ac:	ret

00000000004015b0 <frame_dummy>:
  4015b0:	stp	x29, x30, [sp, #-16]!
  4015b4:	mov	x29, sp
  4015b8:	bl	4014d8 <register_tm_clones>
  4015bc:	nop
  4015c0:	ldp	x29, x30, [sp], #16
  4015c4:	ret

00000000004015c8 <ALIGN_TO>:
  4015c8:	sub	sp, sp, #0x10
  4015cc:	str	x0, [sp, #8]
  4015d0:	str	x1, [sp]
  4015d4:	ldr	x1, [sp, #8]
  4015d8:	ldr	x0, [sp]
  4015dc:	add	x0, x1, x0
  4015e0:	sub	x1, x0, #0x1
  4015e4:	ldr	x0, [sp]
  4015e8:	neg	x0, x0
  4015ec:	and	x0, x1, x0
  4015f0:	add	sp, sp, #0x10
  4015f4:	ret

00000000004015f8 <fclosep>:
  4015f8:	stp	x29, x30, [sp, #-32]!
  4015fc:	mov	x29, sp
  401600:	str	x0, [sp, #24]
  401604:	ldr	x0, [sp, #24]
  401608:	ldr	x0, [x0]
  40160c:	bl	4011b0 <safe_fclose@plt>
  401610:	nop
  401614:	ldp	x29, x30, [sp], #32
  401618:	ret

000000000040161c <read_line>:
  40161c:	stp	x29, x30, [sp, #-48]!
  401620:	mov	x29, sp
  401624:	str	x0, [sp, #40]
  401628:	str	x1, [sp, #32]
  40162c:	str	x2, [sp, #24]
  401630:	ldr	x3, [sp, #24]
  401634:	mov	w2, #0x0                   	// #0
  401638:	ldr	x1, [sp, #32]
  40163c:	ldr	x0, [sp, #40]
  401640:	bl	4011c0 <read_line_full@plt>
  401644:	ldp	x29, x30, [sp], #48
  401648:	ret

000000000040164c <freep>:
  40164c:	stp	x29, x30, [sp, #-32]!
  401650:	mov	x29, sp
  401654:	str	x0, [sp, #24]
  401658:	ldr	x0, [sp, #24]
  40165c:	ldr	x0, [x0]
  401660:	bl	401390 <free@plt>
  401664:	nop
  401668:	ldp	x29, x30, [sp], #32
  40166c:	ret

0000000000401670 <save_argc_argv>:
  401670:	sub	sp, sp, #0x10
  401674:	str	w0, [sp, #12]
  401678:	str	x1, [sp]
  40167c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401680:	add	x0, x0, #0x14
  401684:	ldr	w1, [sp, #12]
  401688:	str	w1, [x0]
  40168c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401690:	add	x0, x0, #0x0
  401694:	ldr	x1, [sp]
  401698:	str	x1, [x0]
  40169c:	nop
  4016a0:	add	sp, sp, #0x10
  4016a4:	ret

00000000004016a8 <isempty>:
  4016a8:	sub	sp, sp, #0x10
  4016ac:	str	x0, [sp, #8]
  4016b0:	ldr	x0, [sp, #8]
  4016b4:	cmp	x0, #0x0
  4016b8:	b.eq	4016cc <isempty+0x24>  // b.none
  4016bc:	ldr	x0, [sp, #8]
  4016c0:	ldrb	w0, [x0]
  4016c4:	cmp	w0, #0x0
  4016c8:	b.ne	4016d4 <isempty+0x2c>  // b.any
  4016cc:	mov	w0, #0x1                   	// #1
  4016d0:	b	4016d8 <isempty+0x30>
  4016d4:	mov	w0, #0x0                   	// #0
  4016d8:	and	w0, w0, #0x1
  4016dc:	and	w0, w0, #0xff
  4016e0:	add	sp, sp, #0x10
  4016e4:	ret

00000000004016e8 <static_destruct>:
  4016e8:	stp	x29, x30, [sp, #-32]!
  4016ec:	mov	x29, sp
  4016f0:	adrp	x0, 402000 <parse_argv+0x88>
  4016f4:	add	x0, x0, #0x900
  4016f8:	ldr	x0, [x0]
  4016fc:	cmp	x0, #0x0
  401700:	b.eq	401764 <static_destruct+0x7c>  // b.none
  401704:	adrp	x0, 402000 <parse_argv+0x88>
  401708:	add	x0, x0, #0x900
  40170c:	ldr	x0, [x0]
  401710:	mov	x1, #0x8                   	// #8
  401714:	bl	4015c8 <ALIGN_TO>
  401718:	str	x0, [sp, #24]
  40171c:	b	401748 <static_destruct+0x60>
  401720:	ldr	x0, [sp, #24]
  401724:	ldr	x1, [x0, #8]
  401728:	ldr	x0, [sp, #24]
  40172c:	ldr	x0, [x0]
  401730:	blr	x1
  401734:	ldr	x0, [sp, #24]
  401738:	add	x0, x0, #0x10
  40173c:	mov	x1, #0x8                   	// #8
  401740:	bl	4015c8 <ALIGN_TO>
  401744:	str	x0, [sp, #24]
  401748:	ldr	x1, [sp, #24]
  40174c:	adrp	x0, 402000 <parse_argv+0x88>
  401750:	add	x0, x0, #0x908
  401754:	ldr	x0, [x0]
  401758:	cmp	x1, x0
  40175c:	b.cc	401720 <static_destruct+0x38>  // b.lo, b.ul, b.last
  401760:	b	401768 <static_destruct+0x80>
  401764:	nop
  401768:	ldp	x29, x30, [sp], #32
  40176c:	ret

0000000000401770 <kmod_unrefp>:
  401770:	stp	x29, x30, [sp, #-32]!
  401774:	mov	x29, sp
  401778:	str	x0, [sp, #24]
  40177c:	ldr	x0, [sp, #24]
  401780:	ldr	x0, [x0]
  401784:	cmp	x0, #0x0
  401788:	b.eq	401798 <kmod_unrefp+0x28>  // b.none
  40178c:	ldr	x0, [sp, #24]
  401790:	ldr	x0, [x0]
  401794:	bl	4012b0 <kmod_unref@plt>
  401798:	nop
  40179c:	ldp	x29, x30, [sp], #32
  4017a0:	ret

00000000004017a4 <proc_cmdline_value_missing>:
  4017a4:	stp	x29, x30, [sp, #-48]!
  4017a8:	mov	x29, sp
  4017ac:	str	x0, [sp, #24]
  4017b0:	str	x1, [sp, #16]
  4017b4:	ldr	x0, [sp, #16]
  4017b8:	cmp	x0, #0x0
  4017bc:	b.ne	401840 <proc_cmdline_value_missing+0x9c>  // b.any
  4017c0:	mov	w0, #0x4                   	// #4
  4017c4:	str	w0, [sp, #36]
  4017c8:	str	wzr, [sp, #40]
  4017cc:	str	wzr, [sp, #44]
  4017d0:	ldr	w0, [sp, #44]
  4017d4:	bl	4013f0 <log_get_max_level_realm@plt>
  4017d8:	mov	w1, w0
  4017dc:	ldr	w0, [sp, #36]
  4017e0:	and	w0, w0, #0x7
  4017e4:	cmp	w1, w0
  4017e8:	b.lt	401830 <proc_cmdline_value_missing+0x8c>  // b.tstop
  4017ec:	ldr	w0, [sp, #44]
  4017f0:	lsl	w1, w0, #10
  4017f4:	ldr	w0, [sp, #36]
  4017f8:	orr	w7, w1, w0
  4017fc:	adrp	x0, 402000 <parse_argv+0x88>
  401800:	add	x1, x0, #0x62b
  401804:	ldr	x6, [sp, #24]
  401808:	adrp	x0, 402000 <parse_argv+0x88>
  40180c:	add	x5, x0, #0x648
  401810:	adrp	x0, 402000 <parse_argv+0x88>
  401814:	add	x4, x0, #0x998
  401818:	mov	w3, #0x21                  	// #33
  40181c:	mov	x2, x1
  401820:	ldr	w1, [sp, #40]
  401824:	mov	w0, w7
  401828:	bl	401340 <log_internal_realm@plt>
  40182c:	b	401838 <proc_cmdline_value_missing+0x94>
  401830:	ldr	w0, [sp, #40]
  401834:	cmp	w0, #0x0
  401838:	mov	w0, #0x1                   	// #1
  40183c:	b	401844 <proc_cmdline_value_missing+0xa0>
  401840:	mov	w0, #0x0                   	// #0
  401844:	ldp	x29, x30, [sp], #48
  401848:	ret

000000000040184c <strv_freep>:
  40184c:	stp	x29, x30, [sp, #-32]!
  401850:	mov	x29, sp
  401854:	str	x0, [sp, #24]
  401858:	ldr	x0, [sp, #24]
  40185c:	ldr	x0, [x0]
  401860:	cmp	x0, #0x0
  401864:	b.eq	401874 <strv_freep+0x28>  // b.none
  401868:	ldr	x0, [sp, #24]
  40186c:	ldr	x0, [x0]
  401870:	bl	4012c0 <strv_free@plt>
  401874:	nop
  401878:	ldp	x29, x30, [sp], #32
  40187c:	ret

0000000000401880 <strv_split>:
  401880:	stp	x29, x30, [sp, #-32]!
  401884:	mov	x29, sp
  401888:	str	x0, [sp, #24]
  40188c:	str	x1, [sp, #16]
  401890:	mov	w2, #0x0                   	// #0
  401894:	ldr	x1, [sp, #16]
  401898:	ldr	x0, [sp, #24]
  40189c:	bl	401210 <strv_split_full@plt>
  4018a0:	ldp	x29, x30, [sp], #32
  4018a4:	ret

00000000004018a8 <__unique_prefix_static_destructor_wrapper0>:
  4018a8:	stp	x29, x30, [sp, #-48]!
  4018ac:	mov	x29, sp
  4018b0:	str	x0, [sp, #24]
  4018b4:	ldr	x0, [sp, #24]
  4018b8:	str	x0, [sp, #40]
  4018bc:	ldr	x0, [sp, #40]
  4018c0:	bl	40184c <strv_freep>
  4018c4:	nop
  4018c8:	ldp	x29, x30, [sp], #48
  4018cc:	ret

00000000004018d0 <systemd_kmod_log>:
  4018d0:	stp	x29, x30, [sp, #-112]!
  4018d4:	mov	x29, sp
  4018d8:	str	x19, [sp, #16]
  4018dc:	str	x0, [sp, #104]
  4018e0:	str	w1, [sp, #100]
  4018e4:	str	x2, [sp, #88]
  4018e8:	str	w3, [sp, #96]
  4018ec:	str	x4, [sp, #80]
  4018f0:	str	x5, [sp, #72]
  4018f4:	mov	x19, x6
  4018f8:	add	x2, sp, #0x20
  4018fc:	mov	x3, x19
  401900:	ldp	x0, x1, [x3]
  401904:	stp	x0, x1, [x2]
  401908:	ldp	x0, x1, [x3, #16]
  40190c:	stp	x0, x1, [x2, #16]
  401910:	add	x0, sp, #0x20
  401914:	mov	x6, x0
  401918:	ldr	x5, [sp, #72]
  40191c:	ldr	x4, [sp, #80]
  401920:	ldr	w3, [sp, #96]
  401924:	ldr	x2, [sp, #88]
  401928:	mov	w1, #0x0                   	// #0
  40192c:	ldr	w0, [sp, #100]
  401930:	bl	401370 <log_internalv_realm@plt>
  401934:	nop
  401938:	ldr	x19, [sp, #16]
  40193c:	ldp	x29, x30, [sp], #112
  401940:	ret

0000000000401944 <add_modules>:
  401944:	stp	x29, x30, [sp, #-64]!
  401948:	mov	x29, sp
  40194c:	str	x19, [sp, #16]
  401950:	str	x0, [sp, #40]
  401954:	adrp	x0, 413000 <__FRAME_END__+0x10150>
  401958:	add	x0, x0, #0xc68
  40195c:	ldr	x1, [x0]
  401960:	str	x1, [sp, #56]
  401964:	mov	x1, #0x0                   	// #0
  401968:	str	xzr, [sp, #48]
  40196c:	adrp	x0, 402000 <parse_argv+0x88>
  401970:	add	x1, x0, #0x688
  401974:	ldr	x0, [sp, #40]
  401978:	bl	401880 <strv_split>
  40197c:	str	x0, [sp, #48]
  401980:	ldr	x0, [sp, #48]
  401984:	cmp	x0, #0x0
  401988:	b.ne	4019b0 <add_modules+0x6c>  // b.any
  40198c:	adrp	x0, 402000 <parse_argv+0x88>
  401990:	add	x1, x0, #0x693
  401994:	adrp	x0, 402000 <parse_argv+0x88>
  401998:	add	x3, x0, #0x988
  40199c:	mov	w2, #0x27                  	// #39
  4019a0:	mov	w0, #0x0                   	// #0
  4019a4:	bl	4013e0 <log_oom_internal@plt>
  4019a8:	mov	w19, w0
  4019ac:	b	4019f8 <add_modules+0xb4>
  4019b0:	ldr	x0, [sp, #48]
  4019b4:	mov	w2, #0x1                   	// #1
  4019b8:	mov	x1, x0
  4019bc:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4019c0:	add	x0, x0, #0x20
  4019c4:	bl	4011e0 <strv_extend_strv@plt>
  4019c8:	cmp	w0, #0x0
  4019cc:	b.ge	4019f4 <add_modules+0xb0>  // b.tcont
  4019d0:	adrp	x0, 402000 <parse_argv+0x88>
  4019d4:	add	x1, x0, #0x693
  4019d8:	adrp	x0, 402000 <parse_argv+0x88>
  4019dc:	add	x3, x0, #0x988
  4019e0:	mov	w2, #0x2a                  	// #42
  4019e4:	mov	w0, #0x0                   	// #0
  4019e8:	bl	4013e0 <log_oom_internal@plt>
  4019ec:	mov	w19, w0
  4019f0:	b	4019f8 <add_modules+0xb4>
  4019f4:	mov	w19, #0x0                   	// #0
  4019f8:	add	x0, sp, #0x30
  4019fc:	bl	40184c <strv_freep>
  401a00:	mov	w1, w19
  401a04:	adrp	x0, 413000 <__FRAME_END__+0x10150>
  401a08:	add	x0, x0, #0xc68
  401a0c:	ldr	x2, [sp, #56]
  401a10:	ldr	x0, [x0]
  401a14:	eor	x0, x2, x0
  401a18:	cmp	x0, #0x0
  401a1c:	b.eq	401a24 <add_modules+0xe0>  // b.none
  401a20:	bl	4012f0 <__stack_chk_fail@plt>
  401a24:	mov	w0, w1
  401a28:	ldr	x19, [sp, #16]
  401a2c:	ldp	x29, x30, [sp], #64
  401a30:	ret

0000000000401a34 <parse_proc_cmdline_item>:
  401a34:	stp	x29, x30, [sp, #-64]!
  401a38:	mov	x29, sp
  401a3c:	str	x0, [sp, #40]
  401a40:	str	x1, [sp, #32]
  401a44:	str	x2, [sp, #24]
  401a48:	adrp	x0, 402000 <parse_argv+0x88>
  401a4c:	add	x1, x0, #0x6b8
  401a50:	ldr	x0, [sp, #40]
  401a54:	bl	401220 <proc_cmdline_key_streq@plt>
  401a58:	and	w0, w0, #0xff
  401a5c:	cmp	w0, #0x0
  401a60:	b.eq	401aa4 <parse_proc_cmdline_item+0x70>  // b.none
  401a64:	ldr	x1, [sp, #32]
  401a68:	ldr	x0, [sp, #40]
  401a6c:	bl	4017a4 <proc_cmdline_value_missing>
  401a70:	and	w0, w0, #0xff
  401a74:	cmp	w0, #0x0
  401a78:	b.eq	401a84 <parse_proc_cmdline_item+0x50>  // b.none
  401a7c:	mov	w0, #0x0                   	// #0
  401a80:	b	401aa8 <parse_proc_cmdline_item+0x74>
  401a84:	ldr	x0, [sp, #32]
  401a88:	bl	401944 <add_modules>
  401a8c:	str	w0, [sp, #60]
  401a90:	ldr	w0, [sp, #60]
  401a94:	cmp	w0, #0x0
  401a98:	b.ge	401aa4 <parse_proc_cmdline_item+0x70>  // b.tcont
  401a9c:	ldr	w0, [sp, #60]
  401aa0:	b	401aa8 <parse_proc_cmdline_item+0x74>
  401aa4:	mov	w0, #0x0                   	// #0
  401aa8:	ldp	x29, x30, [sp], #64
  401aac:	ret

0000000000401ab0 <apply_file>:
  401ab0:	stp	x29, x30, [sp, #-144]!
  401ab4:	mov	x29, sp
  401ab8:	stp	x19, x20, [sp, #16]
  401abc:	str	x0, [sp, #56]
  401ac0:	str	x1, [sp, #48]
  401ac4:	strb	w2, [sp, #47]
  401ac8:	adrp	x0, 413000 <__FRAME_END__+0x10150>
  401acc:	add	x0, x0, #0xc68
  401ad0:	ldr	x1, [x0]
  401ad4:	str	x1, [sp, #136]
  401ad8:	mov	x1, #0x0                   	// #0
  401adc:	str	xzr, [sp, #112]
  401ae0:	ldr	x0, [sp, #56]
  401ae4:	cmp	x0, #0x0
  401ae8:	cset	w0, eq  // eq = none
  401aec:	and	w0, w0, #0xff
  401af0:	and	x0, x0, #0xff
  401af4:	cmp	x0, #0x0
  401af8:	b.eq	401b24 <apply_file+0x74>  // b.none
  401afc:	adrp	x0, 402000 <parse_argv+0x88>
  401b00:	add	x1, x0, #0x693
  401b04:	adrp	x0, 402000 <parse_argv+0x88>
  401b08:	add	x4, x0, #0x9b8
  401b0c:	mov	w3, #0x43                  	// #67
  401b10:	mov	x2, x1
  401b14:	adrp	x0, 402000 <parse_argv+0x88>
  401b18:	add	x1, x0, #0x6c8
  401b1c:	mov	w0, #0x0                   	// #0
  401b20:	bl	401260 <log_assert_failed_realm@plt>
  401b24:	ldr	x0, [sp, #48]
  401b28:	cmp	x0, #0x0
  401b2c:	cset	w0, eq  // eq = none
  401b30:	and	w0, w0, #0xff
  401b34:	and	x0, x0, #0xff
  401b38:	cmp	x0, #0x0
  401b3c:	b.eq	401b68 <apply_file+0xb8>  // b.none
  401b40:	adrp	x0, 402000 <parse_argv+0x88>
  401b44:	add	x1, x0, #0x693
  401b48:	adrp	x0, 402000 <parse_argv+0x88>
  401b4c:	add	x4, x0, #0x9b8
  401b50:	mov	w3, #0x44                  	// #68
  401b54:	mov	x2, x1
  401b58:	adrp	x0, 402000 <parse_argv+0x88>
  401b5c:	add	x1, x0, #0x6d0
  401b60:	mov	w0, #0x0                   	// #0
  401b64:	bl	401260 <log_assert_failed_realm@plt>
  401b68:	add	x0, sp, #0x70
  401b6c:	mov	x4, x0
  401b70:	adrp	x0, 402000 <parse_argv+0x88>
  401b74:	add	x3, x0, #0x910
  401b78:	mov	x2, #0x0                   	// #0
  401b7c:	adrp	x0, 402000 <parse_argv+0x88>
  401b80:	add	x1, x0, #0x6d8
  401b84:	ldr	x0, [sp, #48]
  401b88:	bl	4013a0 <search_and_fopen_nulstr@plt>
  401b8c:	str	w0, [sp, #68]
  401b90:	ldr	w0, [sp, #68]
  401b94:	cmp	w0, #0x0
  401b98:	b.ge	401c4c <apply_file+0x19c>  // b.tcont
  401b9c:	ldrb	w0, [sp, #47]
  401ba0:	cmp	w0, #0x0
  401ba4:	b.eq	401bbc <apply_file+0x10c>  // b.none
  401ba8:	ldr	w0, [sp, #68]
  401bac:	cmn	w0, #0x2
  401bb0:	b.ne	401bbc <apply_file+0x10c>  // b.any
  401bb4:	mov	w20, #0x0                   	// #0
  401bb8:	b	401e64 <apply_file+0x3b4>
  401bbc:	mov	w0, #0x3                   	// #3
  401bc0:	str	w0, [sp, #100]
  401bc4:	ldr	w0, [sp, #68]
  401bc8:	str	w0, [sp, #104]
  401bcc:	str	wzr, [sp, #108]
  401bd0:	ldr	w0, [sp, #108]
  401bd4:	bl	4013f0 <log_get_max_level_realm@plt>
  401bd8:	mov	w1, w0
  401bdc:	ldr	w0, [sp, #100]
  401be0:	and	w0, w0, #0x7
  401be4:	cmp	w1, w0
  401be8:	b.lt	401c34 <apply_file+0x184>  // b.tstop
  401bec:	ldr	w0, [sp, #108]
  401bf0:	lsl	w1, w0, #10
  401bf4:	ldr	w0, [sp, #100]
  401bf8:	orr	w7, w1, w0
  401bfc:	adrp	x0, 402000 <parse_argv+0x88>
  401c00:	add	x1, x0, #0x693
  401c04:	ldr	x6, [sp, #48]
  401c08:	adrp	x0, 402000 <parse_argv+0x88>
  401c0c:	add	x5, x0, #0x6e0
  401c10:	adrp	x0, 402000 <parse_argv+0x88>
  401c14:	add	x4, x0, #0x9c8
  401c18:	mov	w3, #0x4b                  	// #75
  401c1c:	mov	x2, x1
  401c20:	ldr	w1, [sp, #104]
  401c24:	mov	w0, w7
  401c28:	bl	401340 <log_internal_realm@plt>
  401c2c:	mov	w20, w0
  401c30:	b	401e64 <apply_file+0x3b4>
  401c34:	ldr	w0, [sp, #104]
  401c38:	cmp	w0, #0x0
  401c3c:	cneg	w0, w0, lt  // lt = tstop
  401c40:	and	w0, w0, #0xff
  401c44:	neg	w20, w0
  401c48:	b	401e64 <apply_file+0x3b4>
  401c4c:	mov	w0, #0x7                   	// #7
  401c50:	str	w0, [sp, #72]
  401c54:	str	wzr, [sp, #76]
  401c58:	str	wzr, [sp, #80]
  401c5c:	ldr	w0, [sp, #80]
  401c60:	bl	4013f0 <log_get_max_level_realm@plt>
  401c64:	mov	w1, w0
  401c68:	ldr	w0, [sp, #72]
  401c6c:	and	w0, w0, #0x7
  401c70:	cmp	w1, w0
  401c74:	b.lt	401cbc <apply_file+0x20c>  // b.tstop
  401c78:	ldr	w0, [sp, #80]
  401c7c:	lsl	w1, w0, #10
  401c80:	ldr	w0, [sp, #72]
  401c84:	orr	w7, w1, w0
  401c88:	adrp	x0, 402000 <parse_argv+0x88>
  401c8c:	add	x1, x0, #0x693
  401c90:	ldr	x6, [sp, #48]
  401c94:	adrp	x0, 402000 <parse_argv+0x88>
  401c98:	add	x5, x0, #0x6f8
  401c9c:	adrp	x0, 402000 <parse_argv+0x88>
  401ca0:	add	x4, x0, #0x9c8
  401ca4:	mov	w3, #0x4e                  	// #78
  401ca8:	mov	x2, x1
  401cac:	ldr	w1, [sp, #76]
  401cb0:	mov	w0, w7
  401cb4:	bl	401340 <log_internal_realm@plt>
  401cb8:	b	401cc4 <apply_file+0x214>
  401cbc:	ldr	w0, [sp, #76]
  401cc0:	cmp	w0, #0x0
  401cc4:	str	xzr, [sp, #120]
  401cc8:	ldr	x0, [sp, #112]
  401ccc:	add	x1, sp, #0x78
  401cd0:	mov	x2, x1
  401cd4:	mov	x1, #0x100000              	// #1048576
  401cd8:	bl	40161c <read_line>
  401cdc:	str	w0, [sp, #84]
  401ce0:	ldr	w0, [sp, #84]
  401ce4:	cmp	w0, #0x0
  401ce8:	b.ge	401d80 <apply_file+0x2d0>  // b.tcont
  401cec:	mov	w0, #0x3                   	// #3
  401cf0:	str	w0, [sp, #88]
  401cf4:	ldr	w0, [sp, #84]
  401cf8:	str	w0, [sp, #92]
  401cfc:	str	wzr, [sp, #96]
  401d00:	ldr	w0, [sp, #96]
  401d04:	bl	4013f0 <log_get_max_level_realm@plt>
  401d08:	mov	w1, w0
  401d0c:	ldr	w0, [sp, #88]
  401d10:	and	w0, w0, #0x7
  401d14:	cmp	w1, w0
  401d18:	b.lt	401d64 <apply_file+0x2b4>  // b.tstop
  401d1c:	ldr	w0, [sp, #96]
  401d20:	lsl	w1, w0, #10
  401d24:	ldr	w0, [sp, #88]
  401d28:	orr	w7, w1, w0
  401d2c:	adrp	x0, 402000 <parse_argv+0x88>
  401d30:	add	x1, x0, #0x693
  401d34:	ldr	x6, [sp, #48]
  401d38:	adrp	x0, 402000 <parse_argv+0x88>
  401d3c:	add	x5, x0, #0x708
  401d40:	adrp	x0, 402000 <parse_argv+0x88>
  401d44:	add	x4, x0, #0x9c8
  401d48:	mov	w3, #0x56                  	// #86
  401d4c:	mov	x2, x1
  401d50:	ldr	w1, [sp, #92]
  401d54:	mov	w0, w7
  401d58:	bl	401340 <log_internal_realm@plt>
  401d5c:	mov	w20, w0
  401d60:	b	401d78 <apply_file+0x2c8>
  401d64:	ldr	w0, [sp, #92]
  401d68:	cmp	w0, #0x0
  401d6c:	cneg	w0, w0, lt  // lt = tstop
  401d70:	and	w0, w0, #0xff
  401d74:	neg	w20, w0
  401d78:	mov	w19, #0x0                   	// #0
  401d7c:	b	401e30 <apply_file+0x380>
  401d80:	ldr	w0, [sp, #84]
  401d84:	cmp	w0, #0x0
  401d88:	b.ne	401d94 <apply_file+0x2e4>  // b.any
  401d8c:	mov	w19, #0x1                   	// #1
  401d90:	b	401e30 <apply_file+0x380>
  401d94:	ldr	x0, [sp, #120]
  401d98:	bl	401380 <strstrip@plt>
  401d9c:	str	x0, [sp, #128]
  401da0:	ldr	x0, [sp, #128]
  401da4:	bl	4016a8 <isempty>
  401da8:	and	w0, w0, #0xff
  401dac:	cmp	w0, #0x0
  401db0:	b.eq	401dbc <apply_file+0x30c>  // b.none
  401db4:	mov	w19, #0x2                   	// #2
  401db8:	b	401e30 <apply_file+0x380>
  401dbc:	ldr	x0, [sp, #128]
  401dc0:	ldrb	w0, [x0]
  401dc4:	mov	w1, w0
  401dc8:	adrp	x0, 402000 <parse_argv+0x88>
  401dcc:	add	x0, x0, #0x728
  401dd0:	bl	401350 <strchr@plt>
  401dd4:	cmp	x0, #0x0
  401dd8:	b.eq	401de4 <apply_file+0x334>  // b.none
  401ddc:	mov	w19, #0x2                   	// #2
  401de0:	b	401e30 <apply_file+0x380>
  401de4:	mov	w2, #0x1                   	// #1
  401de8:	ldr	x1, [sp, #128]
  401dec:	ldr	x0, [sp, #56]
  401df0:	bl	4012d0 <module_load_and_warn@plt>
  401df4:	str	w0, [sp, #84]
  401df8:	ldr	w0, [sp, #84]
  401dfc:	cmn	w0, #0x2
  401e00:	b.ne	401e0c <apply_file+0x35c>  // b.any
  401e04:	mov	w19, #0x2                   	// #2
  401e08:	b	401e30 <apply_file+0x380>
  401e0c:	ldr	w0, [sp, #84]
  401e10:	cmp	w0, #0x0
  401e14:	b.ge	401e2c <apply_file+0x37c>  // b.tcont
  401e18:	ldr	w0, [sp, #68]
  401e1c:	cmp	w0, #0x0
  401e20:	b.lt	401e2c <apply_file+0x37c>  // b.tstop
  401e24:	ldr	w0, [sp, #84]
  401e28:	str	w0, [sp, #68]
  401e2c:	mov	w19, #0x3                   	// #3
  401e30:	add	x0, sp, #0x78
  401e34:	bl	40164c <freep>
  401e38:	cmp	w19, #0x3
  401e3c:	b.eq	401e60 <apply_file+0x3b0>  // b.none
  401e40:	cmp	w19, #0x3
  401e44:	b.gt	401cc4 <apply_file+0x214>
  401e48:	cmp	w19, #0x0
  401e4c:	b.eq	401e64 <apply_file+0x3b4>  // b.none
  401e50:	cmp	w19, #0x1
  401e54:	b.ne	401e60 <apply_file+0x3b0>  // b.any
  401e58:	ldr	w20, [sp, #68]
  401e5c:	b	401e64 <apply_file+0x3b4>
  401e60:	b	401cc4 <apply_file+0x214>
  401e64:	add	x0, sp, #0x70
  401e68:	bl	4015f8 <fclosep>
  401e6c:	mov	w1, w20
  401e70:	adrp	x0, 413000 <__FRAME_END__+0x10150>
  401e74:	add	x0, x0, #0xc68
  401e78:	ldr	x2, [sp, #136]
  401e7c:	ldr	x0, [x0]
  401e80:	eor	x0, x2, x0
  401e84:	cmp	x0, #0x0
  401e88:	b.eq	401e90 <apply_file+0x3e0>  // b.none
  401e8c:	bl	4012f0 <__stack_chk_fail@plt>
  401e90:	mov	w0, w1
  401e94:	ldp	x19, x20, [sp, #16]
  401e98:	ldp	x29, x30, [sp], #144
  401e9c:	ret

0000000000401ea0 <help>:
  401ea0:	stp	x29, x30, [sp, #-64]!
  401ea4:	mov	x29, sp
  401ea8:	str	x19, [sp, #16]
  401eac:	adrp	x0, 413000 <__FRAME_END__+0x10150>
  401eb0:	add	x0, x0, #0xc68
  401eb4:	ldr	x1, [x0]
  401eb8:	str	x1, [sp, #56]
  401ebc:	mov	x1, #0x0                   	// #0
  401ec0:	str	xzr, [sp, #48]
  401ec4:	add	x0, sp, #0x30
  401ec8:	mov	x2, x0
  401ecc:	adrp	x0, 402000 <parse_argv+0x88>
  401ed0:	add	x1, x0, #0x730
  401ed4:	adrp	x0, 402000 <parse_argv+0x88>
  401ed8:	add	x0, x0, #0x738
  401edc:	bl	4012e0 <terminal_urlify_man@plt>
  401ee0:	str	w0, [sp, #44]
  401ee4:	ldr	w0, [sp, #44]
  401ee8:	cmp	w0, #0x0
  401eec:	b.ge	401f14 <help+0x74>  // b.tcont
  401ef0:	adrp	x0, 402000 <parse_argv+0x88>
  401ef4:	add	x1, x0, #0x693
  401ef8:	adrp	x0, 402000 <parse_argv+0x88>
  401efc:	add	x3, x0, #0x9d8
  401f00:	mov	w2, #0x70                  	// #112
  401f04:	mov	w0, #0x0                   	// #0
  401f08:	bl	4013e0 <log_oom_internal@plt>
  401f0c:	mov	w19, w0
  401f10:	b	401f3c <help+0x9c>
  401f14:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401f18:	add	x0, x0, #0x8
  401f1c:	ldr	x0, [x0]
  401f20:	ldr	x1, [sp, #48]
  401f24:	mov	x2, x1
  401f28:	mov	x1, x0
  401f2c:	adrp	x0, 402000 <parse_argv+0x88>
  401f30:	add	x0, x0, #0x758
  401f34:	bl	4013c0 <printf@plt>
  401f38:	mov	w19, #0x0                   	// #0
  401f3c:	add	x0, sp, #0x30
  401f40:	bl	40164c <freep>
  401f44:	mov	w1, w19
  401f48:	adrp	x0, 413000 <__FRAME_END__+0x10150>
  401f4c:	add	x0, x0, #0xc68
  401f50:	ldr	x2, [sp, #56]
  401f54:	ldr	x0, [x0]
  401f58:	eor	x0, x2, x0
  401f5c:	cmp	x0, #0x0
  401f60:	b.eq	401f68 <help+0xc8>  // b.none
  401f64:	bl	4012f0 <__stack_chk_fail@plt>
  401f68:	mov	w0, w1
  401f6c:	ldr	x19, [sp, #16]
  401f70:	ldp	x29, x30, [sp], #64
  401f74:	ret

0000000000401f78 <parse_argv>:
  401f78:	stp	x29, x30, [sp, #-48]!
  401f7c:	mov	x29, sp
  401f80:	str	w0, [sp, #28]
  401f84:	str	x1, [sp, #16]
  401f88:	ldr	w0, [sp, #28]
  401f8c:	lsr	w0, w0, #31
  401f90:	and	w0, w0, #0xff
  401f94:	and	x0, x0, #0xff
  401f98:	cmp	x0, #0x0
  401f9c:	b.eq	401fc8 <parse_argv+0x50>  // b.none
  401fa0:	adrp	x0, 402000 <parse_argv+0x88>
  401fa4:	add	x1, x0, #0x693
  401fa8:	adrp	x0, 402000 <parse_argv+0x88>
  401fac:	add	x4, x0, #0x9e0
  401fb0:	mov	w3, #0x8b                  	// #139
  401fb4:	mov	x2, x1
  401fb8:	adrp	x0, 402000 <parse_argv+0x88>
  401fbc:	add	x1, x0, #0x820
  401fc0:	mov	w0, #0x0                   	// #0
  401fc4:	bl	401260 <log_assert_failed_realm@plt>
  401fc8:	ldr	x0, [sp, #16]
  401fcc:	cmp	x0, #0x0
  401fd0:	cset	w0, eq  // eq = none
  401fd4:	and	w0, w0, #0xff
  401fd8:	and	x0, x0, #0xff
  401fdc:	cmp	x0, #0x0
  401fe0:	b.eq	40207c <parse_argv+0x104>  // b.none
  401fe4:	adrp	x0, 402000 <parse_argv+0x88>
  401fe8:	add	x1, x0, #0x693
  401fec:	adrp	x0, 402000 <parse_argv+0x88>
  401ff0:	add	x4, x0, #0x9e0
  401ff4:	mov	w3, #0x8c                  	// #140
  401ff8:	mov	x2, x1
  401ffc:	adrp	x0, 402000 <parse_argv+0x88>
  402000:	add	x1, x0, #0x830
  402004:	mov	w0, #0x0                   	// #0
  402008:	bl	401260 <log_assert_failed_realm@plt>
  40200c:	ldr	w0, [sp, #44]
  402010:	cmp	w0, #0x100
  402014:	b.eq	402044 <parse_argv+0xcc>  // b.none
  402018:	ldr	w0, [sp, #44]
  40201c:	cmp	w0, #0x100
  402020:	b.gt	402054 <parse_argv+0xdc>
  402024:	ldr	w0, [sp, #44]
  402028:	cmp	w0, #0x3f
  40202c:	b.eq	40204c <parse_argv+0xd4>  // b.none
  402030:	ldr	w0, [sp, #44]
  402034:	cmp	w0, #0x68
  402038:	b.ne	402054 <parse_argv+0xdc>  // b.any
  40203c:	bl	401ea0 <help>
  402040:	b	4020b4 <parse_argv+0x13c>
  402044:	bl	401320 <version@plt>
  402048:	b	4020b4 <parse_argv+0x13c>
  40204c:	mov	w0, #0xffffffea            	// #-22
  402050:	b	4020b4 <parse_argv+0x13c>
  402054:	adrp	x0, 402000 <parse_argv+0x88>
  402058:	add	x1, x0, #0x693
  40205c:	adrp	x0, 402000 <parse_argv+0x88>
  402060:	add	x4, x0, #0x9e0
  402064:	mov	w3, #0x9b                  	// #155
  402068:	mov	x2, x1
  40206c:	adrp	x0, 402000 <parse_argv+0x88>
  402070:	add	x1, x0, #0x838
  402074:	mov	w0, #0x0                   	// #0
  402078:	bl	401280 <log_assert_failed_unreachable_realm@plt>
  40207c:	nop
  402080:	mov	x4, #0x0                   	// #0
  402084:	adrp	x0, 402000 <parse_argv+0x88>
  402088:	add	x3, x0, #0x9f0
  40208c:	adrp	x0, 402000 <parse_argv+0x88>
  402090:	add	x2, x0, #0x850
  402094:	ldr	x1, [sp, #16]
  402098:	ldr	w0, [sp, #28]
  40209c:	bl	401270 <getopt_long@plt>
  4020a0:	str	w0, [sp, #44]
  4020a4:	ldr	w0, [sp, #44]
  4020a8:	cmp	w0, #0x0
  4020ac:	b.ge	40200c <parse_argv+0x94>  // b.tcont
  4020b0:	mov	w0, #0x1                   	// #1
  4020b4:	ldp	x29, x30, [sp], #48
  4020b8:	ret

00000000004020bc <run>:
  4020bc:	stp	x29, x30, [sp, #-144]!
  4020c0:	mov	x29, sp
  4020c4:	stp	x19, x20, [sp, #16]
  4020c8:	str	w0, [sp, #44]
  4020cc:	str	x1, [sp, #32]
  4020d0:	adrp	x0, 413000 <__FRAME_END__+0x10150>
  4020d4:	add	x0, x0, #0xc68
  4020d8:	ldr	x1, [x0]
  4020dc:	str	x1, [sp, #136]
  4020e0:	mov	x1, #0x0                   	// #0
  4020e4:	str	xzr, [sp, #104]
  4020e8:	ldr	x1, [sp, #32]
  4020ec:	ldr	w0, [sp, #44]
  4020f0:	bl	401f78 <parse_argv>
  4020f4:	str	w0, [sp, #56]
  4020f8:	ldr	w0, [sp, #56]
  4020fc:	cmp	w0, #0x0
  402100:	b.gt	40210c <run+0x50>
  402104:	ldr	w19, [sp, #56]
  402108:	b	4024f4 <run+0x438>
  40210c:	bl	401250 <log_setup_service@plt>
  402110:	mov	w0, #0x12                  	// #18
  402114:	bl	401290 <umask@plt>
  402118:	mov	w2, #0x1                   	// #1
  40211c:	mov	x1, #0x0                   	// #0
  402120:	adrp	x0, 401000 <_init-0x170>
  402124:	add	x0, x0, #0xa34
  402128:	bl	401360 <proc_cmdline_parse@plt>
  40212c:	str	w0, [sp, #56]
  402130:	ldr	w0, [sp, #56]
  402134:	cmp	w0, #0x0
  402138:	b.ge	4021b4 <run+0xf8>  // b.tcont
  40213c:	mov	w0, #0x4                   	// #4
  402140:	str	w0, [sp, #64]
  402144:	ldr	w0, [sp, #56]
  402148:	str	w0, [sp, #68]
  40214c:	str	wzr, [sp, #72]
  402150:	ldr	w0, [sp, #72]
  402154:	bl	4013f0 <log_get_max_level_realm@plt>
  402158:	mov	w1, w0
  40215c:	ldr	w0, [sp, #64]
  402160:	and	w0, w0, #0x7
  402164:	cmp	w1, w0
  402168:	b.lt	4021ac <run+0xf0>  // b.tstop
  40216c:	ldr	w0, [sp, #72]
  402170:	lsl	w1, w0, #10
  402174:	ldr	w0, [sp, #64]
  402178:	orr	w6, w1, w0
  40217c:	adrp	x0, 402000 <parse_argv+0x88>
  402180:	add	x1, x0, #0x693
  402184:	adrp	x0, 402000 <parse_argv+0x88>
  402188:	add	x5, x0, #0x858
  40218c:	adrp	x0, 402000 <parse_argv+0x88>
  402190:	add	x4, x0, #0xa50
  402194:	mov	w3, #0xaf                  	// #175
  402198:	mov	x2, x1
  40219c:	ldr	w1, [sp, #68]
  4021a0:	mov	w0, w6
  4021a4:	bl	401340 <log_internal_realm@plt>
  4021a8:	b	4021b4 <run+0xf8>
  4021ac:	ldr	w0, [sp, #68]
  4021b0:	cmp	w0, #0x0
  4021b4:	mov	x1, #0x0                   	// #0
  4021b8:	mov	x0, #0x0                   	// #0
  4021bc:	bl	401230 <kmod_new@plt>
  4021c0:	str	x0, [sp, #104]
  4021c4:	ldr	x0, [sp, #104]
  4021c8:	cmp	x0, #0x0
  4021cc:	b.ne	40224c <run+0x190>  // b.any
  4021d0:	mov	w0, #0x3                   	// #3
  4021d4:	str	w0, [sp, #92]
  4021d8:	str	wzr, [sp, #96]
  4021dc:	str	wzr, [sp, #100]
  4021e0:	ldr	w0, [sp, #100]
  4021e4:	bl	4013f0 <log_get_max_level_realm@plt>
  4021e8:	mov	w1, w0
  4021ec:	ldr	w0, [sp, #92]
  4021f0:	and	w0, w0, #0x7
  4021f4:	cmp	w1, w0
  4021f8:	b.lt	40223c <run+0x180>  // b.tstop
  4021fc:	ldr	w0, [sp, #100]
  402200:	lsl	w1, w0, #10
  402204:	ldr	w0, [sp, #92]
  402208:	orr	w6, w1, w0
  40220c:	adrp	x0, 402000 <parse_argv+0x88>
  402210:	add	x1, x0, #0x693
  402214:	adrp	x0, 402000 <parse_argv+0x88>
  402218:	add	x5, x0, #0x890
  40221c:	adrp	x0, 402000 <parse_argv+0x88>
  402220:	add	x4, x0, #0xa50
  402224:	mov	w3, #0xb3                  	// #179
  402228:	mov	x2, x1
  40222c:	ldr	w1, [sp, #96]
  402230:	mov	w0, w6
  402234:	bl	401340 <log_internal_realm@plt>
  402238:	b	402244 <run+0x188>
  40223c:	ldr	w0, [sp, #96]
  402240:	cmp	w0, #0x0
  402244:	mov	w19, #0xfffffff4            	// #-12
  402248:	b	4024f4 <run+0x438>
  40224c:	ldr	x0, [sp, #104]
  402250:	bl	4013d0 <kmod_load_resources@plt>
  402254:	ldr	x3, [sp, #104]
  402258:	mov	x2, #0x0                   	// #0
  40225c:	adrp	x0, 401000 <_init-0x170>
  402260:	add	x1, x0, #0x8d0
  402264:	mov	x0, x3
  402268:	bl	401240 <kmod_set_log_fn@plt>
  40226c:	str	wzr, [sp, #56]
  402270:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  402274:	add	x0, x0, #0x10
  402278:	ldr	w0, [x0]
  40227c:	ldr	w1, [sp, #44]
  402280:	cmp	w1, w0
  402284:	b.le	402308 <run+0x24c>
  402288:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  40228c:	add	x0, x0, #0x10
  402290:	ldr	w0, [x0]
  402294:	str	w0, [sp, #60]
  402298:	b	4022f4 <run+0x238>
  40229c:	ldr	x3, [sp, #104]
  4022a0:	ldrsw	x0, [sp, #60]
  4022a4:	lsl	x0, x0, #3
  4022a8:	ldr	x1, [sp, #32]
  4022ac:	add	x0, x1, x0
  4022b0:	ldr	x0, [x0]
  4022b4:	mov	w2, #0x0                   	// #0
  4022b8:	mov	x1, x0
  4022bc:	mov	x0, x3
  4022c0:	bl	401ab0 <apply_file>
  4022c4:	str	w0, [sp, #76]
  4022c8:	ldr	w0, [sp, #76]
  4022cc:	cmp	w0, #0x0
  4022d0:	b.ge	4022e8 <run+0x22c>  // b.tcont
  4022d4:	ldr	w0, [sp, #56]
  4022d8:	cmp	w0, #0x0
  4022dc:	b.ne	4022e8 <run+0x22c>  // b.any
  4022e0:	ldr	w0, [sp, #76]
  4022e4:	str	w0, [sp, #56]
  4022e8:	ldr	w0, [sp, #60]
  4022ec:	add	w0, w0, #0x1
  4022f0:	str	w0, [sp, #60]
  4022f4:	ldr	w1, [sp, #60]
  4022f8:	ldr	w0, [sp, #44]
  4022fc:	cmp	w1, w0
  402300:	b.lt	40229c <run+0x1e0>  // b.tstop
  402304:	b	4024f0 <run+0x434>
  402308:	str	xzr, [sp, #112]
  40230c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  402310:	add	x0, x0, #0x20
  402314:	ldr	x0, [x0]
  402318:	str	x0, [sp, #128]
  40231c:	b	402380 <run+0x2c4>
  402320:	ldr	x3, [sp, #104]
  402324:	ldr	x0, [sp, #128]
  402328:	ldr	x0, [x0]
  40232c:	mov	w2, #0x1                   	// #1
  402330:	mov	x1, x0
  402334:	mov	x0, x3
  402338:	bl	4012d0 <module_load_and_warn@plt>
  40233c:	str	w0, [sp, #76]
  402340:	ldr	w0, [sp, #76]
  402344:	cmn	w0, #0x2
  402348:	b.eq	402370 <run+0x2b4>  // b.none
  40234c:	ldr	w0, [sp, #76]
  402350:	cmp	w0, #0x0
  402354:	b.ge	402374 <run+0x2b8>  // b.tcont
  402358:	ldr	w0, [sp, #56]
  40235c:	cmp	w0, #0x0
  402360:	b.ne	402374 <run+0x2b8>  // b.any
  402364:	ldr	w0, [sp, #76]
  402368:	str	w0, [sp, #56]
  40236c:	b	402374 <run+0x2b8>
  402370:	nop
  402374:	ldr	x0, [sp, #128]
  402378:	add	x0, x0, #0x8
  40237c:	str	x0, [sp, #128]
  402380:	ldr	x0, [sp, #128]
  402384:	cmp	x0, #0x0
  402388:	b.eq	40239c <run+0x2e0>  // b.none
  40238c:	ldr	x0, [sp, #128]
  402390:	ldr	x0, [x0]
  402394:	cmp	x0, #0x0
  402398:	b.ne	402320 <run+0x264>  // b.any
  40239c:	add	x5, sp, #0x70
  4023a0:	adrp	x0, 402000 <parse_argv+0x88>
  4023a4:	add	x4, x0, #0x910
  4023a8:	mov	w3, #0x0                   	// #0
  4023ac:	mov	x2, #0x0                   	// #0
  4023b0:	adrp	x0, 402000 <parse_argv+0x88>
  4023b4:	add	x1, x0, #0x8b8
  4023b8:	mov	x0, x5
  4023bc:	bl	401300 <conf_files_list_nulstr@plt>
  4023c0:	str	w0, [sp, #76]
  4023c4:	ldr	w0, [sp, #76]
  4023c8:	cmp	w0, #0x0
  4023cc:	b.ge	402468 <run+0x3ac>  // b.tcont
  4023d0:	mov	w0, #0x3                   	// #3
  4023d4:	str	w0, [sp, #80]
  4023d8:	ldr	w0, [sp, #76]
  4023dc:	str	w0, [sp, #84]
  4023e0:	str	wzr, [sp, #88]
  4023e4:	ldr	w0, [sp, #88]
  4023e8:	bl	4013f0 <log_get_max_level_realm@plt>
  4023ec:	mov	w1, w0
  4023f0:	ldr	w0, [sp, #80]
  4023f4:	and	w0, w0, #0x7
  4023f8:	cmp	w1, w0
  4023fc:	b.lt	402440 <run+0x384>  // b.tstop
  402400:	ldr	w0, [sp, #88]
  402404:	lsl	w1, w0, #10
  402408:	ldr	w0, [sp, #80]
  40240c:	orr	w6, w1, w0
  402410:	adrp	x0, 402000 <parse_argv+0x88>
  402414:	add	x1, x0, #0x693
  402418:	adrp	x0, 402000 <parse_argv+0x88>
  40241c:	add	x5, x0, #0x8c0
  402420:	adrp	x0, 402000 <parse_argv+0x88>
  402424:	add	x4, x0, #0xa50
  402428:	mov	w3, #0xd3                  	// #211
  40242c:	mov	x2, x1
  402430:	ldr	w1, [sp, #84]
  402434:	mov	w0, w6
  402438:	bl	401340 <log_internal_realm@plt>
  40243c:	b	402448 <run+0x38c>
  402440:	ldr	w0, [sp, #84]
  402444:	cmp	w0, #0x0
  402448:	ldr	w0, [sp, #56]
  40244c:	cmp	w0, #0x0
  402450:	b.ne	40245c <run+0x3a0>  // b.any
  402454:	ldr	w0, [sp, #76]
  402458:	str	w0, [sp, #56]
  40245c:	ldr	w19, [sp, #56]
  402460:	mov	w20, #0x0                   	// #0
  402464:	b	4024e0 <run+0x424>
  402468:	ldr	x0, [sp, #112]
  40246c:	str	x0, [sp, #120]
  402470:	b	4024c0 <run+0x404>
  402474:	ldr	x3, [sp, #104]
  402478:	ldr	x0, [sp, #120]
  40247c:	ldr	x0, [x0]
  402480:	mov	w2, #0x1                   	// #1
  402484:	mov	x1, x0
  402488:	mov	x0, x3
  40248c:	bl	401ab0 <apply_file>
  402490:	str	w0, [sp, #76]
  402494:	ldr	w0, [sp, #76]
  402498:	cmp	w0, #0x0
  40249c:	b.ge	4024b4 <run+0x3f8>  // b.tcont
  4024a0:	ldr	w0, [sp, #56]
  4024a4:	cmp	w0, #0x0
  4024a8:	b.ne	4024b4 <run+0x3f8>  // b.any
  4024ac:	ldr	w0, [sp, #76]
  4024b0:	str	w0, [sp, #56]
  4024b4:	ldr	x0, [sp, #120]
  4024b8:	add	x0, x0, #0x8
  4024bc:	str	x0, [sp, #120]
  4024c0:	ldr	x0, [sp, #120]
  4024c4:	cmp	x0, #0x0
  4024c8:	b.eq	4024dc <run+0x420>  // b.none
  4024cc:	ldr	x0, [sp, #120]
  4024d0:	ldr	x0, [x0]
  4024d4:	cmp	x0, #0x0
  4024d8:	b.ne	402474 <run+0x3b8>  // b.any
  4024dc:	mov	w20, #0x1                   	// #1
  4024e0:	add	x0, sp, #0x70
  4024e4:	bl	40184c <strv_freep>
  4024e8:	cmp	w20, #0x1
  4024ec:	b.ne	4024f4 <run+0x438>  // b.any
  4024f0:	ldr	w19, [sp, #56]
  4024f4:	add	x0, sp, #0x68
  4024f8:	bl	401770 <kmod_unrefp>
  4024fc:	mov	w1, w19
  402500:	adrp	x0, 413000 <__FRAME_END__+0x10150>
  402504:	add	x0, x0, #0xc68
  402508:	ldr	x2, [sp, #136]
  40250c:	ldr	x0, [x0]
  402510:	eor	x0, x2, x0
  402514:	cmp	x0, #0x0
  402518:	b.eq	402520 <run+0x464>  // b.none
  40251c:	bl	4012f0 <__stack_chk_fail@plt>
  402520:	mov	w0, w1
  402524:	ldp	x19, x20, [sp, #16]
  402528:	ldp	x29, x30, [sp], #144
  40252c:	ret

0000000000402530 <main>:
  402530:	stp	x29, x30, [sp, #-48]!
  402534:	mov	x29, sp
  402538:	str	w0, [sp, #28]
  40253c:	str	x1, [sp, #16]
  402540:	ldr	x1, [sp, #16]
  402544:	ldr	w0, [sp, #28]
  402548:	bl	401670 <save_argc_argv>
  40254c:	ldr	x1, [sp, #16]
  402550:	ldr	w0, [sp, #28]
  402554:	bl	4020bc <run>
  402558:	str	w0, [sp, #44]
  40255c:	bl	401310 <ask_password_agent_close@plt>
  402560:	bl	401200 <polkit_agent_close@plt>
  402564:	bl	401330 <pager_close@plt>
  402568:	bl	4013b0 <mac_selinux_finish@plt>
  40256c:	bl	4016e8 <static_destruct>
  402570:	ldr	w0, [sp, #44]
  402574:	lsr	w0, w0, #31
  402578:	ldp	x29, x30, [sp], #48
  40257c:	ret

0000000000402580 <__libc_csu_init>:
  402580:	stp	x29, x30, [sp, #-64]!
  402584:	mov	x29, sp
  402588:	stp	x19, x20, [sp, #16]
  40258c:	adrp	x20, 413000 <__FRAME_END__+0x10150>
  402590:	add	x20, x20, #0xc60
  402594:	stp	x21, x22, [sp, #32]
  402598:	adrp	x21, 413000 <__FRAME_END__+0x10150>
  40259c:	add	x21, x21, #0xc58
  4025a0:	sub	x20, x20, x21
  4025a4:	mov	w22, w0
  4025a8:	stp	x23, x24, [sp, #48]
  4025ac:	mov	x23, x1
  4025b0:	mov	x24, x2
  4025b4:	bl	401170 <_init>
  4025b8:	cmp	xzr, x20, asr #3
  4025bc:	b.eq	4025e8 <__libc_csu_init+0x68>  // b.none
  4025c0:	asr	x20, x20, #3
  4025c4:	mov	x19, #0x0                   	// #0
  4025c8:	ldr	x3, [x21, x19, lsl #3]
  4025cc:	mov	x2, x24
  4025d0:	add	x19, x19, #0x1
  4025d4:	mov	x1, x23
  4025d8:	mov	w0, w22
  4025dc:	blr	x3
  4025e0:	cmp	x20, x19
  4025e4:	b.ne	4025c8 <__libc_csu_init+0x48>  // b.any
  4025e8:	ldp	x19, x20, [sp, #16]
  4025ec:	ldp	x21, x22, [sp, #32]
  4025f0:	ldp	x23, x24, [sp, #48]
  4025f4:	ldp	x29, x30, [sp], #64
  4025f8:	ret
  4025fc:	nop

0000000000402600 <__libc_csu_fini>:
  402600:	ret

Disassembly of section .fini:

0000000000402604 <_fini>:
  402604:	stp	x29, x30, [sp, #-16]!
  402608:	mov	x29, sp
  40260c:	ldp	x29, x30, [sp], #16
  402610:	ret
