
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//chain.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1530>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	x0, [x0, #64]
      10:	add	sp, sp, #0x10
      14:	ret
      18:	stp	x29, x30, [sp, #-48]!
      1c:	mov	x29, sp
      20:	str	x0, [sp, #40]
      24:	str	x1, [sp, #32]
      28:	str	x2, [sp, #24]
      2c:	ldr	x2, [sp, #24]
      30:	ldr	x1, [sp, #32]
      34:	ldr	x0, [sp, #40]
      38:	bl	0 <grub_memmove>
      3c:	ldp	x29, x30, [sp], #48
      40:	ret
      44:	sub	sp, sp, #0x20
      48:	strb	w0, [sp, #31]
      4c:	str	x1, [sp, #16]
      50:	str	x2, [sp, #8]
      54:	ldr	x0, [sp, #8]
      58:	ldr	w0, [x0]
      5c:	cmp	w0, #0x0
      60:	b.eq	128 <grub_mod_init-0x1408>  // b.none
      64:	ldrb	w0, [sp, #31]
      68:	and	w0, w0, #0xc0
      6c:	cmp	w0, #0x80
      70:	b.eq	84 <grub_mod_init-0x14ac>  // b.none
      74:	ldr	x0, [sp, #8]
      78:	str	wzr, [x0]
      7c:	mov	w0, #0x0                   	// #0
      80:	b	210 <grub_mod_init-0x1320>
      84:	ldr	x0, [sp, #16]
      88:	ldr	w0, [x0]
      8c:	lsl	w1, w0, #6
      90:	ldr	x0, [sp, #16]
      94:	str	w1, [x0]
      98:	ldr	x0, [sp, #16]
      9c:	ldr	w1, [x0]
      a0:	ldrb	w0, [sp, #31]
      a4:	and	w0, w0, #0x3f
      a8:	orr	w1, w1, w0
      ac:	ldr	x0, [sp, #16]
      b0:	str	w1, [x0]
      b4:	ldr	x0, [sp, #8]
      b8:	ldr	w0, [x0]
      bc:	sub	w1, w0, #0x1
      c0:	ldr	x0, [sp, #8]
      c4:	str	w1, [x0]
      c8:	ldr	x0, [sp, #8]
      cc:	ldr	w0, [x0]
      d0:	cmp	w0, #0x1
      d4:	b.ne	e8 <grub_mod_init-0x1448>  // b.any
      d8:	ldr	x0, [sp, #16]
      dc:	ldr	w0, [x0]
      e0:	cmp	w0, #0x1f
      e4:	b.ls	108 <grub_mod_init-0x1428>  // b.plast
      e8:	ldr	x0, [sp, #8]
      ec:	ldr	w0, [x0]
      f0:	cmp	w0, #0x2
      f4:	b.ne	120 <grub_mod_init-0x1410>  // b.any
      f8:	ldr	x0, [sp, #16]
      fc:	ldr	w0, [x0]
     100:	cmp	w0, #0xf
     104:	b.hi	120 <grub_mod_init-0x1410>  // b.pmore
     108:	ldr	x0, [sp, #16]
     10c:	str	wzr, [x0]
     110:	ldr	x0, [sp, #8]
     114:	str	wzr, [x0]
     118:	mov	w0, #0x0                   	// #0
     11c:	b	210 <grub_mod_init-0x1320>
     120:	mov	w0, #0x1                   	// #1
     124:	b	210 <grub_mod_init-0x1320>
     128:	ldrsb	w0, [sp, #31]
     12c:	cmp	w0, #0x0
     130:	b.lt	148 <grub_mod_init-0x13e8>  // b.tstop
     134:	ldrb	w1, [sp, #31]
     138:	ldr	x0, [sp, #16]
     13c:	str	w1, [x0]
     140:	mov	w0, #0x1                   	// #1
     144:	b	210 <grub_mod_init-0x1320>
     148:	ldrb	w0, [sp, #31]
     14c:	and	w0, w0, #0xe0
     150:	cmp	w0, #0xc0
     154:	b.ne	1a4 <grub_mod_init-0x138c>  // b.any
     158:	ldr	x0, [sp, #8]
     15c:	mov	w1, #0x1                   	// #1
     160:	str	w1, [x0]
     164:	ldrb	w0, [sp, #31]
     168:	and	w1, w0, #0x1f
     16c:	ldr	x0, [sp, #16]
     170:	str	w1, [x0]
     174:	ldr	x0, [sp, #16]
     178:	ldr	w0, [x0]
     17c:	cmp	w0, #0x1
     180:	b.hi	19c <grub_mod_init-0x1394>  // b.pmore
     184:	ldr	x0, [sp, #8]
     188:	str	wzr, [x0]
     18c:	ldr	x0, [sp, #16]
     190:	str	wzr, [x0]
     194:	mov	w0, #0x0                   	// #0
     198:	b	210 <grub_mod_init-0x1320>
     19c:	mov	w0, #0x1                   	// #1
     1a0:	b	210 <grub_mod_init-0x1320>
     1a4:	ldrb	w0, [sp, #31]
     1a8:	and	w0, w0, #0xf0
     1ac:	cmp	w0, #0xe0
     1b0:	b.ne	1d8 <grub_mod_init-0x1358>  // b.any
     1b4:	ldr	x0, [sp, #8]
     1b8:	mov	w1, #0x2                   	// #2
     1bc:	str	w1, [x0]
     1c0:	ldrb	w0, [sp, #31]
     1c4:	and	w1, w0, #0xf
     1c8:	ldr	x0, [sp, #16]
     1cc:	str	w1, [x0]
     1d0:	mov	w0, #0x1                   	// #1
     1d4:	b	210 <grub_mod_init-0x1320>
     1d8:	ldrb	w0, [sp, #31]
     1dc:	and	w0, w0, #0xf8
     1e0:	cmp	w0, #0xf0
     1e4:	b.ne	20c <grub_mod_init-0x1324>  // b.any
     1e8:	ldr	x0, [sp, #8]
     1ec:	mov	w1, #0x3                   	// #3
     1f0:	str	w1, [x0]
     1f4:	ldrb	w0, [sp, #31]
     1f8:	and	w1, w0, #0x7
     1fc:	ldr	x0, [sp, #16]
     200:	str	w1, [x0]
     204:	mov	w0, #0x1                   	// #1
     208:	b	210 <grub_mod_init-0x1320>
     20c:	mov	w0, #0x0                   	// #0
     210:	add	sp, sp, #0x20
     214:	ret
     218:	stp	x29, x30, [sp, #-96]!
     21c:	mov	x29, sp
     220:	str	x0, [sp, #56]
     224:	str	x1, [sp, #48]
     228:	str	x2, [sp, #40]
     22c:	str	x3, [sp, #32]
     230:	str	x4, [sp, #24]
     234:	ldr	x0, [sp, #56]
     238:	str	x0, [sp, #88]
     23c:	str	wzr, [sp, #80]
     240:	str	wzr, [sp, #76]
     244:	ldr	x0, [sp, #24]
     248:	cmp	x0, #0x0
     24c:	b.eq	3b0 <grub_mod_init-0x1180>  // b.none
     250:	ldr	x0, [sp, #24]
     254:	ldr	x1, [sp, #40]
     258:	str	x1, [x0]
     25c:	b	3b0 <grub_mod_init-0x1180>
     260:	ldr	w0, [sp, #80]
     264:	str	w0, [sp, #84]
     268:	ldr	x0, [sp, #32]
     26c:	cmn	x0, #0x1
     270:	b.eq	280 <grub_mod_init-0x12b0>  // b.none
     274:	ldr	x0, [sp, #32]
     278:	sub	x0, x0, #0x1
     27c:	str	x0, [sp, #32]
     280:	ldr	x0, [sp, #40]
     284:	add	x1, x0, #0x1
     288:	str	x1, [sp, #40]
     28c:	ldrb	w3, [x0]
     290:	add	x1, sp, #0x50
     294:	add	x0, sp, #0x4c
     298:	mov	x2, x1
     29c:	mov	x1, x0
     2a0:	mov	w0, w3
     2a4:	bl	44 <grub_mod_init-0x14ec>
     2a8:	cmp	w0, #0x0
     2ac:	b.ne	2d4 <grub_mod_init-0x125c>  // b.any
     2b0:	mov	w0, #0x3f                  	// #63
     2b4:	str	w0, [sp, #76]
     2b8:	str	wzr, [sp, #80]
     2bc:	ldr	w0, [sp, #84]
     2c0:	cmp	w0, #0x0
     2c4:	b.eq	2d4 <grub_mod_init-0x125c>  // b.none
     2c8:	ldr	x0, [sp, #40]
     2cc:	sub	x0, x0, #0x1
     2d0:	str	x0, [sp, #40]
     2d4:	ldr	w0, [sp, #80]
     2d8:	cmp	w0, #0x0
     2dc:	b.eq	2e4 <grub_mod_init-0x124c>  // b.none
     2e0:	b	3b0 <grub_mod_init-0x1180>
     2e4:	ldr	w0, [sp, #76]
     2e8:	cmp	w0, #0x0
     2ec:	b.eq	3cc <grub_mod_init-0x1164>  // b.none
     2f0:	ldr	x0, [sp, #48]
     2f4:	cmp	x0, #0x1
     2f8:	b.hi	30c <grub_mod_init-0x1224>  // b.pmore
     2fc:	ldr	w1, [sp, #76]
     300:	mov	w0, #0xffff                	// #65535
     304:	cmp	w1, w0
     308:	b.hi	3d4 <grub_mod_init-0x115c>  // b.pmore
     30c:	ldr	w1, [sp, #76]
     310:	mov	w0, #0xffff                	// #65535
     314:	cmp	w1, w0
     318:	b.ls	38c <grub_mod_init-0x11a4>  // b.plast
     31c:	ldr	w0, [sp, #76]
     320:	sub	w0, w0, #0x10, lsl #12
     324:	lsr	w0, w0, #10
     328:	and	w0, w0, #0xffff
     32c:	and	w0, w0, #0x3ff
     330:	and	w2, w0, #0xffff
     334:	ldr	x0, [sp, #88]
     338:	add	x1, x0, #0x2
     33c:	str	x1, [sp, #88]
     340:	mov	w1, #0xffffd800            	// #-10240
     344:	orr	w1, w2, w1
     348:	and	w1, w1, #0xffff
     34c:	strh	w1, [x0]
     350:	ldr	w0, [sp, #76]
     354:	and	w0, w0, #0xffff
     358:	and	w0, w0, #0x3ff
     35c:	and	w2, w0, #0xffff
     360:	ldr	x0, [sp, #88]
     364:	add	x1, x0, #0x2
     368:	str	x1, [sp, #88]
     36c:	mov	w1, #0xffffdc00            	// #-9216
     370:	orr	w1, w2, w1
     374:	and	w1, w1, #0xffff
     378:	strh	w1, [x0]
     37c:	ldr	x0, [sp, #48]
     380:	sub	x0, x0, #0x2
     384:	str	x0, [sp, #48]
     388:	b	3b0 <grub_mod_init-0x1180>
     38c:	ldr	w2, [sp, #76]
     390:	ldr	x0, [sp, #88]
     394:	add	x1, x0, #0x2
     398:	str	x1, [sp, #88]
     39c:	and	w1, w2, #0xffff
     3a0:	strh	w1, [x0]
     3a4:	ldr	x0, [sp, #48]
     3a8:	sub	x0, x0, #0x1
     3ac:	str	x0, [sp, #48]
     3b0:	ldr	x0, [sp, #32]
     3b4:	cmp	x0, #0x0
     3b8:	b.eq	3d8 <grub_mod_init-0x1158>  // b.none
     3bc:	ldr	x0, [sp, #48]
     3c0:	cmp	x0, #0x0
     3c4:	b.ne	260 <grub_mod_init-0x12d0>  // b.any
     3c8:	b	3d8 <grub_mod_init-0x1158>
     3cc:	nop
     3d0:	b	3d8 <grub_mod_init-0x1158>
     3d4:	nop
     3d8:	ldr	x0, [sp, #24]
     3dc:	cmp	x0, #0x0
     3e0:	b.eq	3f0 <grub_mod_init-0x1140>  // b.none
     3e4:	ldr	x0, [sp, #24]
     3e8:	ldr	x1, [sp, #40]
     3ec:	str	x1, [x0]
     3f0:	ldr	x1, [sp, #88]
     3f4:	ldr	x0, [sp, #56]
     3f8:	sub	x0, x1, x0
     3fc:	asr	x0, x0, #1
     400:	ldp	x29, x30, [sp], #96
     404:	ret
     408:	sub	sp, sp, #0x30
     40c:	str	x0, [sp, #24]
     410:	str	x1, [sp, #16]
     414:	str	x2, [sp, #8]
     418:	str	wzr, [sp, #44]
     41c:	b	76c <grub_mod_init-0xdc4>
     420:	ldr	x0, [sp, #16]
     424:	add	x1, x0, #0x2
     428:	str	x1, [sp, #16]
     42c:	ldrh	w0, [x0]
     430:	str	w0, [sp, #40]
     434:	ldr	w0, [sp, #44]
     438:	cmp	w0, #0x0
     43c:	b.eq	554 <grub_mod_init-0xfdc>  // b.none
     440:	ldr	w1, [sp, #40]
     444:	mov	w0, #0xdbff                	// #56319
     448:	cmp	w1, w0
     44c:	b.ls	52c <grub_mod_init-0x1004>  // b.plast
     450:	ldr	w1, [sp, #40]
     454:	mov	w0, #0xdfff                	// #57343
     458:	cmp	w1, w0
     45c:	b.hi	52c <grub_mod_init-0x1004>  // b.pmore
     460:	ldr	w1, [sp, #44]
     464:	mov	w0, #0xffff2800            	// #-55296
     468:	add	w0, w1, w0
     46c:	lsl	w1, w0, #10
     470:	ldr	w0, [sp, #40]
     474:	add	w1, w1, w0
     478:	mov	w0, #0x2400                	// #9216
     47c:	add	w0, w1, w0
     480:	str	w0, [sp, #40]
     484:	ldr	w0, [sp, #40]
     488:	lsr	w0, w0, #18
     48c:	and	w1, w0, #0xff
     490:	ldr	x0, [sp, #24]
     494:	add	x2, x0, #0x1
     498:	str	x2, [sp, #24]
     49c:	orr	w1, w1, #0xfffffff0
     4a0:	and	w1, w1, #0xff
     4a4:	strb	w1, [x0]
     4a8:	ldr	w0, [sp, #40]
     4ac:	lsr	w0, w0, #12
     4b0:	and	w0, w0, #0xff
     4b4:	and	w0, w0, #0x3f
     4b8:	and	w1, w0, #0xff
     4bc:	ldr	x0, [sp, #24]
     4c0:	add	x2, x0, #0x1
     4c4:	str	x2, [sp, #24]
     4c8:	orr	w1, w1, #0xffffff80
     4cc:	and	w1, w1, #0xff
     4d0:	strb	w1, [x0]
     4d4:	ldr	w0, [sp, #40]
     4d8:	lsr	w0, w0, #6
     4dc:	and	w0, w0, #0xff
     4e0:	and	w0, w0, #0x3f
     4e4:	and	w1, w0, #0xff
     4e8:	ldr	x0, [sp, #24]
     4ec:	add	x2, x0, #0x1
     4f0:	str	x2, [sp, #24]
     4f4:	orr	w1, w1, #0xffffff80
     4f8:	and	w1, w1, #0xff
     4fc:	strb	w1, [x0]
     500:	ldr	w0, [sp, #40]
     504:	and	w0, w0, #0xff
     508:	and	w0, w0, #0x3f
     50c:	and	w1, w0, #0xff
     510:	ldr	x0, [sp, #24]
     514:	add	x2, x0, #0x1
     518:	str	x2, [sp, #24]
     51c:	orr	w1, w1, #0xffffff80
     520:	and	w1, w1, #0xff
     524:	strb	w1, [x0]
     528:	b	54c <grub_mod_init-0xfe4>
     52c:	ldr	x0, [sp, #24]
     530:	add	x1, x0, #0x1
     534:	str	x1, [sp, #24]
     538:	mov	w1, #0x3f                  	// #63
     53c:	strb	w1, [x0]
     540:	ldr	x0, [sp, #16]
     544:	sub	x0, x0, #0x2
     548:	str	x0, [sp, #16]
     54c:	str	wzr, [sp, #44]
     550:	b	76c <grub_mod_init-0xdc4>
     554:	ldr	w0, [sp, #40]
     558:	cmp	w0, #0x7f
     55c:	b.hi	57c <grub_mod_init-0xfb4>  // b.pmore
     560:	ldr	x0, [sp, #24]
     564:	add	x1, x0, #0x1
     568:	str	x1, [sp, #24]
     56c:	ldr	w1, [sp, #40]
     570:	and	w1, w1, #0xff
     574:	strb	w1, [x0]
     578:	b	76c <grub_mod_init-0xdc4>
     57c:	ldr	w0, [sp, #40]
     580:	cmp	w0, #0x7ff
     584:	b.hi	5d8 <grub_mod_init-0xf58>  // b.pmore
     588:	ldr	w0, [sp, #40]
     58c:	lsr	w0, w0, #6
     590:	and	w1, w0, #0xff
     594:	ldr	x0, [sp, #24]
     598:	add	x2, x0, #0x1
     59c:	str	x2, [sp, #24]
     5a0:	orr	w1, w1, #0xffffffc0
     5a4:	and	w1, w1, #0xff
     5a8:	strb	w1, [x0]
     5ac:	ldr	w0, [sp, #40]
     5b0:	and	w0, w0, #0xff
     5b4:	and	w0, w0, #0x3f
     5b8:	and	w1, w0, #0xff
     5bc:	ldr	x0, [sp, #24]
     5c0:	add	x2, x0, #0x1
     5c4:	str	x2, [sp, #24]
     5c8:	orr	w1, w1, #0xffffff80
     5cc:	and	w1, w1, #0xff
     5d0:	strb	w1, [x0]
     5d4:	b	76c <grub_mod_init-0xdc4>
     5d8:	ldr	w1, [sp, #40]
     5dc:	mov	w0, #0xd7ff                	// #55295
     5e0:	cmp	w1, w0
     5e4:	b.ls	604 <grub_mod_init-0xf2c>  // b.plast
     5e8:	ldr	w1, [sp, #40]
     5ec:	mov	w0, #0xdbff                	// #56319
     5f0:	cmp	w1, w0
     5f4:	b.hi	604 <grub_mod_init-0xf2c>  // b.pmore
     5f8:	ldr	w0, [sp, #40]
     5fc:	str	w0, [sp, #44]
     600:	b	76c <grub_mod_init-0xdc4>
     604:	ldr	w1, [sp, #40]
     608:	mov	w0, #0xdbff                	// #56319
     60c:	cmp	w1, w0
     610:	b.ls	63c <grub_mod_init-0xef4>  // b.plast
     614:	ldr	w1, [sp, #40]
     618:	mov	w0, #0xdfff                	// #57343
     61c:	cmp	w1, w0
     620:	b.hi	63c <grub_mod_init-0xef4>  // b.pmore
     624:	ldr	x0, [sp, #24]
     628:	add	x1, x0, #0x1
     62c:	str	x1, [sp, #24]
     630:	mov	w1, #0x3f                  	// #63
     634:	strb	w1, [x0]
     638:	b	76c <grub_mod_init-0xdc4>
     63c:	ldr	w1, [sp, #40]
     640:	mov	w0, #0xffff                	// #65535
     644:	cmp	w1, w0
     648:	b.hi	6c8 <grub_mod_init-0xe68>  // b.pmore
     64c:	ldr	w0, [sp, #40]
     650:	lsr	w0, w0, #12
     654:	and	w1, w0, #0xff
     658:	ldr	x0, [sp, #24]
     65c:	add	x2, x0, #0x1
     660:	str	x2, [sp, #24]
     664:	orr	w1, w1, #0xffffffe0
     668:	and	w1, w1, #0xff
     66c:	strb	w1, [x0]
     670:	ldr	w0, [sp, #40]
     674:	lsr	w0, w0, #6
     678:	and	w0, w0, #0xff
     67c:	and	w0, w0, #0x3f
     680:	and	w1, w0, #0xff
     684:	ldr	x0, [sp, #24]
     688:	add	x2, x0, #0x1
     68c:	str	x2, [sp, #24]
     690:	orr	w1, w1, #0xffffff80
     694:	and	w1, w1, #0xff
     698:	strb	w1, [x0]
     69c:	ldr	w0, [sp, #40]
     6a0:	and	w0, w0, #0xff
     6a4:	and	w0, w0, #0x3f
     6a8:	and	w1, w0, #0xff
     6ac:	ldr	x0, [sp, #24]
     6b0:	add	x2, x0, #0x1
     6b4:	str	x2, [sp, #24]
     6b8:	orr	w1, w1, #0xffffff80
     6bc:	and	w1, w1, #0xff
     6c0:	strb	w1, [x0]
     6c4:	b	76c <grub_mod_init-0xdc4>
     6c8:	ldr	w0, [sp, #40]
     6cc:	lsr	w0, w0, #18
     6d0:	and	w1, w0, #0xff
     6d4:	ldr	x0, [sp, #24]
     6d8:	add	x2, x0, #0x1
     6dc:	str	x2, [sp, #24]
     6e0:	orr	w1, w1, #0xfffffff0
     6e4:	and	w1, w1, #0xff
     6e8:	strb	w1, [x0]
     6ec:	ldr	w0, [sp, #40]
     6f0:	lsr	w0, w0, #12
     6f4:	and	w0, w0, #0xff
     6f8:	and	w0, w0, #0x3f
     6fc:	and	w1, w0, #0xff
     700:	ldr	x0, [sp, #24]
     704:	add	x2, x0, #0x1
     708:	str	x2, [sp, #24]
     70c:	orr	w1, w1, #0xffffff80
     710:	and	w1, w1, #0xff
     714:	strb	w1, [x0]
     718:	ldr	w0, [sp, #40]
     71c:	lsr	w0, w0, #6
     720:	and	w0, w0, #0xff
     724:	and	w0, w0, #0x3f
     728:	and	w1, w0, #0xff
     72c:	ldr	x0, [sp, #24]
     730:	add	x2, x0, #0x1
     734:	str	x2, [sp, #24]
     738:	orr	w1, w1, #0xffffff80
     73c:	and	w1, w1, #0xff
     740:	strb	w1, [x0]
     744:	ldr	w0, [sp, #40]
     748:	and	w0, w0, #0xff
     74c:	and	w0, w0, #0x3f
     750:	and	w1, w0, #0xff
     754:	ldr	x0, [sp, #24]
     758:	add	x2, x0, #0x1
     75c:	str	x2, [sp, #24]
     760:	orr	w1, w1, #0xffffff80
     764:	and	w1, w1, #0xff
     768:	strb	w1, [x0]
     76c:	ldr	x0, [sp, #8]
     770:	sub	x1, x0, #0x1
     774:	str	x1, [sp, #8]
     778:	cmp	x0, #0x0
     77c:	b.ne	420 <grub_mod_init-0x1110>  // b.any
     780:	ldr	x0, [sp, #24]
     784:	add	sp, sp, #0x30
     788:	ret
     78c:	stp	x29, x30, [sp, #-48]!
     790:	mov	x29, sp
     794:	str	x0, [sp, #40]
     798:	str	x1, [sp, #32]
     79c:	str	x2, [sp, #24]
     7a0:	str	x3, [sp, #16]
     7a4:	mov	w4, #0x0                   	// #0
     7a8:	ldr	x3, [sp, #16]
     7ac:	ldr	x2, [sp, #24]
     7b0:	ldr	x1, [sp, #32]
     7b4:	ldr	x0, [sp, #40]
     7b8:	bl	0 <grub_register_command_prio>
     7bc:	ldp	x29, x30, [sp], #48
     7c0:	ret
     7c4:	stp	x29, x30, [sp, #-32]!
     7c8:	mov	x29, sp
     7cc:	adrp	x0, 0 <grub_mod_init-0x1530>
     7d0:	add	x0, x0, #0x0
     7d4:	ldr	x0, [x0]
     7d8:	ldr	x0, [x0]
     7dc:	ldr	x0, [x0, #96]
     7e0:	str	x0, [sp, #24]
     7e4:	ldr	x0, [sp, #24]
     7e8:	ldr	x1, [x0, #224]
     7ec:	adrp	x0, 0 <grub_mod_init-0x1530>
     7f0:	add	x0, x0, #0x0
     7f4:	ldr	x0, [x0]
     7f8:	ldr	x0, [x0]
     7fc:	blr	x1
     800:	ldr	x0, [sp, #24]
     804:	ldr	x2, [x0, #48]
     808:	adrp	x0, 0 <grub_mod_init-0x1530>
     80c:	add	x0, x0, #0x0
     810:	ldr	x0, [x0]
     814:	ldr	x3, [x0]
     818:	adrp	x0, 0 <grub_mod_init-0x1530>
     81c:	add	x0, x0, #0x0
     820:	ldr	x0, [x0]
     824:	ldr	x0, [x0]
     828:	mov	x1, x0
     82c:	mov	x0, x3
     830:	blr	x2
     834:	adrp	x0, 0 <grub_mod_init-0x1530>
     838:	add	x0, x0, #0x0
     83c:	ldr	x0, [x0]
     840:	ldr	x0, [x0]
     844:	bl	0 <grub_free>
     848:	adrp	x0, 0 <grub_mod_init-0x1530>
     84c:	add	x0, x0, #0x0
     850:	ldr	x0, [x0]
     854:	ldr	x0, [x0]
     858:	bl	0 <grub_free>
     85c:	adrp	x0, 0 <grub_mod_init-0x1530>
     860:	add	x0, x0, #0x0
     864:	ldr	x0, [x0]
     868:	str	xzr, [x0]
     86c:	adrp	x0, 0 <grub_mod_init-0x1530>
     870:	add	x0, x0, #0x0
     874:	ldr	x0, [x0]
     878:	str	xzr, [x0]
     87c:	adrp	x0, 0 <grub_mod_init-0x1530>
     880:	add	x0, x0, #0x0
     884:	ldr	x0, [x0]
     888:	ldr	x0, [x0]
     88c:	bl	0 <grub_dl_unref>
     890:	mov	w0, #0x0                   	// #0
     894:	ldp	x29, x30, [sp], #32
     898:	ret
     89c:	nop
	...
     8d8:	stp	x29, x30, [sp, #-64]!
     8dc:	mov	x29, sp
     8e0:	str	xzr, [sp, #24]
     8e4:	adrp	x0, 0 <grub_mod_init-0x1530>
     8e8:	add	x0, x0, #0x0
     8ec:	ldr	x0, [x0]
     8f0:	ldr	x0, [x0]
     8f4:	ldr	x0, [x0, #96]
     8f8:	str	x0, [sp, #56]
     8fc:	ldr	x0, [sp, #56]
     900:	ldr	x3, [x0, #208]
     904:	adrp	x0, 0 <grub_mod_init-0x1530>
     908:	add	x0, x0, #0x0
     90c:	ldr	x0, [x0]
     910:	ldr	x0, [x0]
     914:	add	x2, sp, #0x18
     918:	add	x1, sp, #0x20
     91c:	blr	x3
     920:	str	x0, [sp, #48]
     924:	ldr	x0, [sp, #48]
     928:	cmp	x0, #0x0
     92c:	b.eq	9a4 <grub_mod_init-0xb8c>  // b.none
     930:	ldr	x0, [sp, #24]
     934:	cmp	x0, #0x0
     938:	b.eq	990 <grub_mod_init-0xba0>  // b.none
     93c:	ldr	x0, [sp, #32]
     940:	lsl	x0, x0, #2
     944:	add	x0, x0, #0x1
     948:	bl	0 <grub_malloc>
     94c:	str	x0, [sp, #40]
     950:	ldr	x0, [sp, #40]
     954:	cmp	x0, #0x0
     958:	b.eq	9a4 <grub_mod_init-0xb8c>  // b.none
     95c:	ldr	x0, [sp, #24]
     960:	ldr	x1, [sp, #32]
     964:	mov	x2, x1
     968:	mov	x1, x0
     96c:	ldr	x0, [sp, #40]
     970:	bl	408 <grub_mod_init-0x1128>
     974:	strb	wzr, [x0]
     978:	ldr	x1, [sp, #40]
     97c:	mov	w0, #0x15                  	// #21
     980:	bl	0 <grub_error>
     984:	ldr	x0, [sp, #40]
     988:	bl	0 <grub_free>
     98c:	b	9a4 <grub_mod_init-0xb8c>
     990:	adrp	x0, 0 <grub_mod_init-0x1530>
     994:	add	x0, x0, #0x0
     998:	ldr	x1, [x0]
     99c:	mov	w0, #0x15                  	// #21
     9a0:	bl	0 <grub_error>
     9a4:	ldr	x0, [sp, #24]
     9a8:	cmp	x0, #0x0
     9ac:	b.eq	9c0 <grub_mod_init-0xb70>  // b.none
     9b0:	ldr	x0, [sp, #56]
     9b4:	ldr	x1, [x0, #72]
     9b8:	ldr	x0, [sp, #24]
     9bc:	blr	x1
     9c0:	bl	0 <grub_loader_unset>
     9c4:	adrp	x0, 0 <grub_mod_init-0x1530>
     9c8:	add	x0, x0, #0x0
     9cc:	ldr	x0, [x0]
     9d0:	ldr	w0, [x0]
     9d4:	ldp	x29, x30, [sp], #64
     9d8:	ret
     9dc:	nop
	...
     a00:	stp	x29, x30, [sp, #-80]!
     a04:	mov	x29, sp
     a08:	str	x0, [sp, #40]
     a0c:	str	x1, [sp, #32]
     a10:	strh	w2, [sp, #30]
     a14:	ldr	x0, [sp, #40]
     a18:	mov	w1, #0x4                   	// #4
     a1c:	strb	w1, [x0]
     a20:	ldr	x0, [sp, #40]
     a24:	mov	w1, #0x4                   	// #4
     a28:	strb	w1, [x0, #1]
     a2c:	ldrh	w0, [sp, #30]
     a30:	lsl	x0, x0, #1
     a34:	bl	0 <grub_malloc>
     a38:	str	x0, [sp, #64]
     a3c:	ldr	x0, [sp, #64]
     a40:	cmp	x0, #0x0
     a44:	b.eq	b24 <grub_mod_init-0xa0c>  // b.none
     a48:	ldrh	w0, [sp, #30]
     a4c:	ldrh	w1, [sp, #30]
     a50:	mov	x4, #0x0                   	// #0
     a54:	mov	x3, x1
     a58:	ldr	x2, [sp, #32]
     a5c:	mov	x1, x0
     a60:	ldr	x0, [sp, #64]
     a64:	bl	218 <grub_mod_init-0x1318>
     a68:	strh	w0, [sp, #62]
     a6c:	ldr	x0, [sp, #64]
     a70:	str	x0, [sp, #72]
     a74:	b	aa0 <grub_mod_init-0xa90>
     a78:	ldr	x0, [sp, #72]
     a7c:	ldrh	w0, [x0]
     a80:	cmp	w0, #0x2f
     a84:	b.ne	a94 <grub_mod_init-0xa9c>  // b.any
     a88:	ldr	x0, [sp, #72]
     a8c:	mov	w1, #0x5c                  	// #92
     a90:	strh	w1, [x0]
     a94:	ldr	x0, [sp, #72]
     a98:	add	x0, x0, #0x2
     a9c:	str	x0, [sp, #72]
     aa0:	ldrh	w0, [sp, #62]
     aa4:	lsl	x0, x0, #1
     aa8:	ldr	x1, [sp, #64]
     aac:	add	x0, x1, x0
     ab0:	ldr	x1, [sp, #72]
     ab4:	cmp	x1, x0
     ab8:	b.cc	a78 <grub_mod_init-0xab8>  // b.lo, b.ul, b.last
     abc:	ldr	x0, [sp, #40]
     ac0:	add	x3, x0, #0x4
     ac4:	ldrh	w0, [sp, #62]
     ac8:	lsl	x0, x0, #1
     acc:	mov	x2, x0
     ad0:	ldr	x1, [sp, #64]
     ad4:	mov	x0, x3
     ad8:	bl	18 <grub_mod_init-0x1518>
     adc:	ldrh	w0, [sp, #62]
     ae0:	add	w1, w0, #0x1
     ae4:	strh	w1, [sp, #62]
     ae8:	ldr	x1, [sp, #40]
     aec:	sxtw	x0, w0
     af0:	lsl	x0, x0, #1
     af4:	add	x0, x1, x0
     af8:	strh	wzr, [x0, #4]
     afc:	ldrh	w0, [sp, #62]
     b00:	add	w0, w0, #0x2
     b04:	and	w0, w0, #0xffff
     b08:	ubfiz	w0, w0, #1, #15
     b0c:	and	w1, w0, #0xffff
     b10:	ldr	x0, [sp, #40]
     b14:	strh	w1, [x0, #2]
     b18:	ldr	x0, [sp, #64]
     b1c:	bl	0 <grub_free>
     b20:	b	b28 <grub_mod_init-0xa08>
     b24:	nop
     b28:	ldp	x29, x30, [sp], #80
     b2c:	ret
     b30:	stp	x29, x30, [sp, #-80]!
     b34:	mov	x29, sp
     b38:	str	x19, [sp, #16]
     b3c:	str	x0, [sp, #40]
     b40:	str	x1, [sp, #32]
     b44:	mov	w1, #0x29                  	// #41
     b48:	ldr	x0, [sp, #32]
     b4c:	bl	0 <grub_strchr>
     b50:	str	x0, [sp, #72]
     b54:	ldr	x0, [sp, #72]
     b58:	cmp	x0, #0x0
     b5c:	b.ne	b6c <grub_mod_init-0x9c4>  // b.any
     b60:	ldr	x0, [sp, #32]
     b64:	str	x0, [sp, #72]
     b68:	b	b78 <grub_mod_init-0x9b8>
     b6c:	ldr	x0, [sp, #72]
     b70:	add	x0, x0, #0x1
     b74:	str	x0, [sp, #72]
     b78:	mov	w1, #0x2f                  	// #47
     b7c:	ldr	x0, [sp, #72]
     b80:	bl	0 <grub_strrchr>
     b84:	str	x0, [sp, #48]
     b88:	ldr	x0, [sp, #48]
     b8c:	cmp	x0, #0x0
     b90:	b.ne	bb0 <grub_mod_init-0x980>  // b.any
     b94:	adrp	x0, 0 <grub_mod_init-0x1530>
     b98:	add	x0, x0, #0x0
     b9c:	ldr	x1, [x0]
     ba0:	mov	w0, #0x7                   	// #7
     ba4:	bl	0 <grub_error>
     ba8:	mov	x0, #0x0                   	// #0
     bac:	b	d60 <grub_mod_init-0x7d0>
     bb0:	str	xzr, [sp, #64]
     bb4:	ldr	x0, [sp, #40]
     bb8:	str	x0, [sp, #56]
     bbc:	ldr	x0, [sp, #56]
     bc0:	ldrh	w0, [x0, #2]
     bc4:	and	x0, x0, #0xffff
     bc8:	ldr	x1, [sp, #64]
     bcc:	add	x0, x1, x0
     bd0:	str	x0, [sp, #64]
     bd4:	ldr	x0, [sp, #56]
     bd8:	ldrb	w0, [x0]
     bdc:	and	w0, w0, #0x7f
     be0:	cmp	w0, #0x7f
     be4:	b.ne	bf8 <grub_mod_init-0x938>  // b.any
     be8:	ldr	x0, [sp, #56]
     bec:	ldrb	w0, [x0, #1]
     bf0:	cmp	w0, #0xff
     bf4:	b.eq	c14 <grub_mod_init-0x91c>  // b.none
     bf8:	ldr	x0, [sp, #56]
     bfc:	ldrh	w0, [x0, #2]
     c00:	and	x0, x0, #0xffff
     c04:	ldr	x1, [sp, #56]
     c08:	add	x0, x1, x0
     c0c:	str	x0, [sp, #56]
     c10:	b	bbc <grub_mod_init-0x974>
     c14:	nop
     c18:	ldr	x0, [sp, #72]
     c1c:	bl	0 <grub_strlen>
     c20:	add	x0, x0, #0x2
     c24:	lsl	x1, x0, #1
     c28:	ldr	x0, [sp, #64]
     c2c:	add	x0, x1, x0
     c30:	add	x0, x0, #0x8
     c34:	bl	0 <grub_malloc>
     c38:	mov	x1, x0
     c3c:	adrp	x0, 0 <grub_mod_init-0x1530>
     c40:	add	x0, x0, #0x0
     c44:	ldr	x0, [x0]
     c48:	str	x1, [x0]
     c4c:	adrp	x0, 0 <grub_mod_init-0x1530>
     c50:	add	x0, x0, #0x0
     c54:	ldr	x0, [x0]
     c58:	ldr	x0, [x0]
     c5c:	cmp	x0, #0x0
     c60:	b.ne	c6c <grub_mod_init-0x8c4>  // b.any
     c64:	mov	x0, #0x0                   	// #0
     c68:	b	d60 <grub_mod_init-0x7d0>
     c6c:	adrp	x0, 0 <grub_mod_init-0x1530>
     c70:	add	x0, x0, #0x0
     c74:	ldr	x0, [x0]
     c78:	ldr	x0, [x0]
     c7c:	ldr	x2, [sp, #64]
     c80:	ldr	x1, [sp, #40]
     c84:	bl	18 <grub_mod_init-0x1518>
     c88:	adrp	x0, 0 <grub_mod_init-0x1530>
     c8c:	add	x0, x0, #0x0
     c90:	ldr	x0, [x0]
     c94:	ldr	x0, [x0]
     c98:	ldr	x2, [sp, #56]
     c9c:	ldr	x1, [sp, #40]
     ca0:	sub	x1, x2, x1
     ca4:	add	x0, x0, x1
     ca8:	str	x0, [sp, #56]
     cac:	ldr	x0, [sp, #56]
     cb0:	bl	0 <grub_efi_print_device_path>
     cb4:	ldr	x1, [sp, #48]
     cb8:	ldr	x0, [sp, #72]
     cbc:	sub	x0, x1, x0
     cc0:	and	w0, w0, #0xffff
     cc4:	mov	w2, w0
     cc8:	ldr	x1, [sp, #72]
     ccc:	ldr	x0, [sp, #56]
     cd0:	bl	a00 <grub_mod_init-0xb30>
     cd4:	ldr	x0, [sp, #56]
     cd8:	ldrh	w0, [x0, #2]
     cdc:	and	x0, x0, #0xffff
     ce0:	ldr	x1, [sp, #56]
     ce4:	add	x0, x1, x0
     ce8:	str	x0, [sp, #56]
     cec:	ldr	x0, [sp, #48]
     cf0:	add	x19, x0, #0x1
     cf4:	ldr	x0, [sp, #48]
     cf8:	add	x0, x0, #0x1
     cfc:	bl	0 <grub_strlen>
     d00:	and	w0, w0, #0xffff
     d04:	mov	w2, w0
     d08:	mov	x1, x19
     d0c:	ldr	x0, [sp, #56]
     d10:	bl	a00 <grub_mod_init-0xb30>
     d14:	ldr	x0, [sp, #56]
     d18:	ldrh	w0, [x0, #2]
     d1c:	and	x0, x0, #0xffff
     d20:	ldr	x1, [sp, #56]
     d24:	add	x0, x1, x0
     d28:	str	x0, [sp, #56]
     d2c:	ldr	x0, [sp, #56]
     d30:	mov	w1, #0x7f                  	// #127
     d34:	strb	w1, [x0]
     d38:	ldr	x0, [sp, #56]
     d3c:	mov	w1, #0xffffffff            	// #-1
     d40:	strb	w1, [x0, #1]
     d44:	ldr	x0, [sp, #56]
     d48:	mov	w1, #0x4                   	// #4
     d4c:	strh	w1, [x0, #2]
     d50:	adrp	x0, 0 <grub_mod_init-0x1530>
     d54:	add	x0, x0, #0x0
     d58:	ldr	x0, [x0]
     d5c:	ldr	x0, [x0]
     d60:	ldr	x19, [sp, #16]
     d64:	ldp	x29, x30, [sp], #80
     d68:	ret
     d6c:	nop
	...
     d80:	stp	x29, x30, [sp, #-272]!
     d84:	mov	x29, sp
     d88:	str	x0, [sp, #72]
     d8c:	str	w1, [sp, #68]
     d90:	str	x2, [sp, #56]
     d94:	str	xzr, [sp, #216]
     d98:	str	xzr, [sp, #264]
     d9c:	str	xzr, [sp, #256]
     da0:	str	xzr, [sp, #208]
     da4:	str	xzr, [sp, #248]
     da8:	ldr	w0, [sp, #68]
     dac:	cmp	w0, #0x0
     db0:	b.ne	dcc <grub_mod_init-0x764>  // b.any
     db4:	adrp	x0, 0 <grub_mod_init-0x1530>
     db8:	add	x0, x0, #0x0
     dbc:	ldr	x1, [x0]
     dc0:	mov	w0, #0x12                  	// #18
     dc4:	bl	0 <grub_error>
     dc8:	b	1474 <grub_mod_init-0xbc>
     dcc:	ldr	x0, [sp, #56]
     dd0:	ldr	x0, [x0]
     dd4:	str	x0, [sp, #200]
     dd8:	adrp	x0, 0 <grub_mod_init-0x1530>
     ddc:	add	x0, x0, #0x0
     de0:	ldr	x0, [x0]
     de4:	ldr	x0, [x0]
     de8:	bl	0 <grub_dl_ref>
     dec:	adrp	x0, 0 <grub_mod_init-0x1530>
     df0:	add	x0, x0, #0x0
     df4:	ldr	x0, [x0]
     df8:	str	xzr, [x0]
     dfc:	adrp	x0, 0 <grub_mod_init-0x1530>
     e00:	add	x0, x0, #0x0
     e04:	ldr	x0, [x0]
     e08:	str	xzr, [x0]
     e0c:	adrp	x0, 0 <grub_mod_init-0x1530>
     e10:	add	x0, x0, #0x0
     e14:	ldr	x0, [x0]
     e18:	str	xzr, [x0]
     e1c:	adrp	x0, 0 <grub_mod_init-0x1530>
     e20:	add	x0, x0, #0x0
     e24:	ldr	x0, [x0]
     e28:	ldr	x0, [x0]
     e2c:	ldr	x0, [x0, #96]
     e30:	str	x0, [sp, #192]
     e34:	mov	w1, #0x1d                  	// #29
     e38:	ldr	x0, [sp, #200]
     e3c:	bl	0 <grub_file_open>
     e40:	str	x0, [sp, #216]
     e44:	ldr	x0, [sp, #216]
     e48:	cmp	x0, #0x0
     e4c:	b.eq	1394 <grub_mod_init-0x19c>  // b.none
     e50:	mov	x0, #0x0                   	// #0
     e54:	bl	0 <grub_device_open>
     e58:	str	x0, [sp, #264]
     e5c:	ldr	x0, [sp, #264]
     e60:	cmp	x0, #0x0
     e64:	b.eq	139c <grub_mod_init-0x194>  // b.none
     e68:	ldr	x0, [sp, #264]
     e6c:	ldr	x0, [x0]
     e70:	cmp	x0, #0x0
     e74:	b.eq	e8c <grub_mod_init-0x6a4>  // b.none
     e78:	ldr	x0, [sp, #264]
     e7c:	ldr	x0, [x0]
     e80:	bl	0 <grub_efidisk_get_device_handle>
     e84:	str	x0, [sp, #248]
     e88:	b	f1c <grub_mod_init-0x614>
     e8c:	ldr	x0, [sp, #264]
     e90:	ldr	x0, [x0, #8]
     e94:	cmp	x0, #0x0
     e98:	b.eq	f1c <grub_mod_init-0x614>  // b.none
     e9c:	ldr	x0, [sp, #264]
     ea0:	ldr	x0, [x0, #8]
     ea4:	ldr	x0, [x0]
     ea8:	cmp	x0, #0x0
     eac:	b.eq	f1c <grub_mod_init-0x614>  // b.none
     eb0:	ldr	x0, [sp, #264]
     eb4:	ldr	x0, [x0, #8]
     eb8:	ldr	x0, [x0]
     ebc:	add	x1, sp, #0x58
     ec0:	bl	0 <grub_net_resolve_address>
     ec4:	str	w0, [sp, #188]
     ec8:	ldr	w0, [sp, #188]
     ecc:	cmp	w0, #0x0
     ed0:	b.ne	13a4 <grub_mod_init-0x18c>  // b.any
     ed4:	add	x2, sp, #0x10
     ed8:	add	x3, sp, #0x58
     edc:	ldp	x0, x1, [x3]
     ee0:	stp	x0, x1, [x2]
     ee4:	ldp	x0, x1, [x3, #16]
     ee8:	stp	x0, x1, [x2, #16]
     eec:	add	x2, sp, #0x98
     ef0:	add	x1, sp, #0x78
     ef4:	add	x0, sp, #0x10
     ef8:	bl	0 <grub_net_route_address>
     efc:	str	w0, [sp, #188]
     f00:	ldr	w0, [sp, #188]
     f04:	cmp	w0, #0x0
     f08:	b.ne	13ac <grub_mod_init-0x184>  // b.any
     f0c:	ldr	x0, [sp, #152]
     f10:	ldr	x0, [x0, #24]
     f14:	bl	0 <grub_efinet_get_device_handle>
     f18:	str	x0, [sp, #248]
     f1c:	ldr	x0, [sp, #248]
     f20:	cmp	x0, #0x0
     f24:	b.eq	f34 <grub_mod_init-0x5fc>  // b.none
     f28:	ldr	x0, [sp, #248]
     f2c:	bl	0 <grub_efi_get_device_path>
     f30:	str	x0, [sp, #256]
     f34:	ldr	x0, [sp, #256]
     f38:	cmp	x0, #0x0
     f3c:	b.ne	f58 <grub_mod_init-0x5d8>  // b.any
     f40:	adrp	x0, 0 <grub_mod_init-0x1530>
     f44:	add	x0, x0, #0x0
     f48:	ldr	x1, [x0]
     f4c:	mov	w0, #0xd                   	// #13
     f50:	bl	0 <grub_error>
     f54:	b	13c8 <grub_mod_init-0x168>
     f58:	ldr	x1, [sp, #200]
     f5c:	ldr	x0, [sp, #256]
     f60:	bl	b30 <grub_mod_init-0xa00>
     f64:	mov	x1, x0
     f68:	adrp	x0, 0 <grub_mod_init-0x1530>
     f6c:	add	x0, x0, #0x0
     f70:	ldr	x0, [x0]
     f74:	str	x1, [x0]
     f78:	adrp	x0, 0 <grub_mod_init-0x1530>
     f7c:	add	x0, x0, #0x0
     f80:	ldr	x0, [x0]
     f84:	ldr	x0, [x0]
     f88:	cmp	x0, #0x0
     f8c:	b.eq	13b4 <grub_mod_init-0x17c>  // b.none
     f90:	adrp	x0, 0 <grub_mod_init-0x1530>
     f94:	add	x0, x0, #0x0
     f98:	ldr	x0, [x0]
     f9c:	bl	0 <grub_printf>
     fa0:	adrp	x0, 0 <grub_mod_init-0x1530>
     fa4:	add	x0, x0, #0x0
     fa8:	ldr	x0, [x0]
     fac:	ldr	x0, [x0]
     fb0:	bl	0 <grub_efi_print_device_path>
     fb4:	ldr	x0, [sp, #216]
     fb8:	bl	0 <grub_mod_init-0x1530>
     fbc:	str	x0, [sp, #176]
     fc0:	ldr	x0, [sp, #176]
     fc4:	cmp	x0, #0x0
     fc8:	b.ne	fe8 <grub_mod_init-0x548>  // b.any
     fcc:	ldr	x2, [sp, #200]
     fd0:	adrp	x0, 0 <grub_mod_init-0x1530>
     fd4:	add	x0, x0, #0x0
     fd8:	ldr	x1, [x0]
     fdc:	mov	w0, #0x15                  	// #21
     fe0:	bl	0 <grub_error>
     fe4:	b	13c8 <grub_mod_init-0x168>
     fe8:	ldr	x0, [sp, #176]
     fec:	add	x0, x0, #0xfff
     ff0:	lsr	x1, x0, #12
     ff4:	adrp	x0, 0 <grub_mod_init-0x1530>
     ff8:	add	x0, x0, #0x0
     ffc:	ldr	x0, [x0]
    1000:	str	x1, [x0]
    1004:	ldr	x0, [sp, #192]
    1008:	ldr	x4, [x0, #40]
    100c:	adrp	x0, 0 <grub_mod_init-0x1530>
    1010:	add	x0, x0, #0x0
    1014:	ldr	x0, [x0]
    1018:	ldr	x1, [x0]
    101c:	adrp	x0, 0 <grub_mod_init-0x1530>
    1020:	add	x0, x0, #0x0
    1024:	ldr	x3, [x0]
    1028:	mov	x2, x1
    102c:	mov	w1, #0x1                   	// #1
    1030:	mov	w0, #0x0                   	// #0
    1034:	blr	x4
    1038:	str	x0, [sp, #168]
    103c:	ldr	x0, [sp, #168]
    1040:	cmp	x0, #0x0
    1044:	b.eq	10a0 <grub_mod_init-0x490>  // b.none
    1048:	adrp	x0, 0 <grub_mod_init-0x1530>
    104c:	add	x0, x0, #0x0
    1050:	ldr	x0, [x0]
    1054:	ldr	x0, [x0]
    1058:	mov	w4, w0
    105c:	adrp	x0, 0 <grub_mod_init-0x1530>
    1060:	add	x0, x0, #0x0
    1064:	ldr	x3, [x0]
    1068:	adrp	x0, 0 <grub_mod_init-0x1530>
    106c:	add	x0, x0, #0x0
    1070:	ldr	x2, [x0]
    1074:	mov	w1, #0x11f                 	// #287
    1078:	adrp	x0, 0 <grub_mod_init-0x1530>
    107c:	add	x0, x0, #0x0
    1080:	ldr	x0, [x0]
    1084:	bl	0 <grub_real_dprintf>
    1088:	adrp	x0, 0 <grub_mod_init-0x1530>
    108c:	add	x0, x0, #0x0
    1090:	ldr	x1, [x0]
    1094:	mov	w0, #0x3                   	// #3
    1098:	bl	0 <grub_error>
    109c:	b	13c8 <grub_mod_init-0x168>
    10a0:	adrp	x0, 0 <grub_mod_init-0x1530>
    10a4:	add	x0, x0, #0x0
    10a8:	ldr	x0, [x0]
    10ac:	ldr	x0, [x0]
    10b0:	str	x0, [sp, #208]
    10b4:	ldr	x0, [sp, #176]
    10b8:	mov	x2, x0
    10bc:	ldr	x1, [sp, #208]
    10c0:	ldr	x0, [sp, #216]
    10c4:	bl	0 <grub_file_read>
    10c8:	mov	x1, x0
    10cc:	ldr	x0, [sp, #176]
    10d0:	cmp	x0, x1
    10d4:	b.eq	110c <grub_mod_init-0x424>  // b.none
    10d8:	adrp	x0, 0 <grub_mod_init-0x1530>
    10dc:	add	x0, x0, #0x0
    10e0:	ldr	x0, [x0]
    10e4:	ldr	w0, [x0]
    10e8:	cmp	w0, #0x0
    10ec:	b.ne	13bc <grub_mod_init-0x174>  // b.any
    10f0:	ldr	x2, [sp, #200]
    10f4:	adrp	x0, 0 <grub_mod_init-0x1530>
    10f8:	add	x0, x0, #0x0
    10fc:	ldr	x1, [x0]
    1100:	mov	w0, #0x15                  	// #21
    1104:	bl	0 <grub_error>
    1108:	b	13bc <grub_mod_init-0x174>
    110c:	ldr	x0, [sp, #192]
    1110:	ldr	x6, [x0, #200]
    1114:	adrp	x0, 0 <grub_mod_init-0x1530>
    1118:	add	x0, x0, #0x0
    111c:	ldr	x0, [x0]
    1120:	ldr	x1, [x0]
    1124:	adrp	x0, 0 <grub_mod_init-0x1530>
    1128:	add	x0, x0, #0x0
    112c:	ldr	x0, [x0]
    1130:	ldr	x2, [x0]
    1134:	ldr	x3, [sp, #176]
    1138:	adrp	x0, 0 <grub_mod_init-0x1530>
    113c:	add	x0, x0, #0x0
    1140:	ldr	x5, [x0]
    1144:	mov	x4, x3
    1148:	ldr	x3, [sp, #208]
    114c:	mov	w0, #0x0                   	// #0
    1150:	blr	x6
    1154:	str	x0, [sp, #168]
    1158:	ldr	x0, [sp, #168]
    115c:	cmp	x0, #0x0
    1160:	b.eq	11a8 <grub_mod_init-0x388>  // b.none
    1164:	ldr	x1, [sp, #168]
    1168:	mov	x0, #0x9                   	// #9
    116c:	movk	x0, #0x8000, lsl #48
    1170:	cmp	x1, x0
    1174:	b.ne	1190 <grub_mod_init-0x3a0>  // b.any
    1178:	adrp	x0, 0 <grub_mod_init-0x1530>
    117c:	add	x0, x0, #0x0
    1180:	ldr	x1, [x0]
    1184:	mov	w0, #0x3                   	// #3
    1188:	bl	0 <grub_error>
    118c:	b	13c8 <grub_mod_init-0x168>
    1190:	adrp	x0, 0 <grub_mod_init-0x1530>
    1194:	add	x0, x0, #0x0
    1198:	ldr	x1, [x0]
    119c:	mov	w0, #0x15                  	// #21
    11a0:	bl	0 <grub_error>
    11a4:	b	13c8 <grub_mod_init-0x168>
    11a8:	adrp	x0, 0 <grub_mod_init-0x1530>
    11ac:	add	x0, x0, #0x0
    11b0:	ldr	x0, [x0]
    11b4:	ldr	x0, [x0]
    11b8:	bl	0 <grub_efi_get_loaded_image>
    11bc:	str	x0, [sp, #160]
    11c0:	ldr	x0, [sp, #160]
    11c4:	cmp	x0, #0x0
    11c8:	b.ne	11e4 <grub_mod_init-0x34c>  // b.any
    11cc:	adrp	x0, 0 <grub_mod_init-0x1530>
    11d0:	add	x0, x0, #0x0
    11d4:	ldr	x1, [x0]
    11d8:	mov	w0, #0x15                  	// #21
    11dc:	bl	0 <grub_error>
    11e0:	b	13c8 <grub_mod_init-0x168>
    11e4:	ldr	x0, [sp, #160]
    11e8:	ldr	x1, [sp, #248]
    11ec:	str	x1, [x0, #24]
    11f0:	ldr	w0, [sp, #68]
    11f4:	cmp	w0, #0x1
    11f8:	b.le	135c <grub_mod_init-0x1d4>
    11fc:	mov	w0, #0x1                   	// #1
    1200:	str	w0, [sp, #244]
    1204:	str	wzr, [sp, #240]
    1208:	b	1244 <grub_mod_init-0x2ec>
    120c:	ldrsw	x0, [sp, #244]
    1210:	lsl	x0, x0, #3
    1214:	ldr	x1, [sp, #56]
    1218:	add	x0, x1, x0
    121c:	ldr	x0, [x0]
    1220:	bl	0 <grub_strlen>
    1224:	add	x0, x0, #0x1
    1228:	mov	w1, w0
    122c:	ldr	w0, [sp, #240]
    1230:	add	w0, w1, w0
    1234:	str	w0, [sp, #240]
    1238:	ldr	w0, [sp, #244]
    123c:	add	w0, w0, #0x1
    1240:	str	w0, [sp, #244]
    1244:	ldr	w1, [sp, #244]
    1248:	ldr	w0, [sp, #68]
    124c:	cmp	w1, w0
    1250:	b.lt	120c <grub_mod_init-0x324>  // b.tstop
    1254:	ldrsw	x0, [sp, #240]
    1258:	lsl	w0, w0, #1
    125c:	str	w0, [sp, #240]
    1260:	ldrsw	x0, [sp, #240]
    1264:	bl	0 <grub_malloc>
    1268:	str	x0, [sp, #232]
    126c:	adrp	x0, 0 <grub_mod_init-0x1530>
    1270:	add	x0, x0, #0x0
    1274:	ldr	x0, [x0]
    1278:	ldr	x1, [sp, #232]
    127c:	str	x1, [x0]
    1280:	adrp	x0, 0 <grub_mod_init-0x1530>
    1284:	add	x0, x0, #0x0
    1288:	ldr	x0, [x0]
    128c:	ldr	x0, [x0]
    1290:	cmp	x0, #0x0
    1294:	b.eq	13c4 <grub_mod_init-0x16c>  // b.none
    1298:	mov	w0, #0x1                   	// #1
    129c:	str	w0, [sp, #244]
    12a0:	b	1314 <grub_mod_init-0x21c>
    12a4:	ldrsw	x0, [sp, #244]
    12a8:	lsl	x0, x0, #3
    12ac:	ldr	x1, [sp, #56]
    12b0:	add	x0, x1, x0
    12b4:	ldr	x0, [x0]
    12b8:	str	x0, [sp, #224]
    12bc:	b	12e4 <grub_mod_init-0x24c>
    12c0:	ldr	x0, [sp, #224]
    12c4:	add	x1, x0, #0x1
    12c8:	str	x1, [sp, #224]
    12cc:	ldrb	w2, [x0]
    12d0:	ldr	x0, [sp, #232]
    12d4:	add	x1, x0, #0x2
    12d8:	str	x1, [sp, #232]
    12dc:	and	w1, w2, #0xffff
    12e0:	strh	w1, [x0]
    12e4:	ldr	x0, [sp, #224]
    12e8:	ldrb	w0, [x0]
    12ec:	cmp	w0, #0x0
    12f0:	b.ne	12c0 <grub_mod_init-0x270>  // b.any
    12f4:	ldr	x0, [sp, #232]
    12f8:	add	x1, x0, #0x2
    12fc:	str	x1, [sp, #232]
    1300:	mov	w1, #0x20                  	// #32
    1304:	strh	w1, [x0]
    1308:	ldr	w0, [sp, #244]
    130c:	add	w0, w0, #0x1
    1310:	str	w0, [sp, #244]
    1314:	ldr	w1, [sp, #244]
    1318:	ldr	w0, [sp, #68]
    131c:	cmp	w1, w0
    1320:	b.lt	12a4 <grub_mod_init-0x28c>  // b.tstop
    1324:	ldr	x0, [sp, #232]
    1328:	sub	x0, x0, #0x2
    132c:	str	x0, [sp, #232]
    1330:	ldr	x0, [sp, #232]
    1334:	strh	wzr, [x0]
    1338:	adrp	x0, 0 <grub_mod_init-0x1530>
    133c:	add	x0, x0, #0x0
    1340:	ldr	x0, [x0]
    1344:	ldr	x1, [x0]
    1348:	ldr	x0, [sp, #160]
    134c:	str	x1, [x0, #56]
    1350:	ldr	w1, [sp, #240]
    1354:	ldr	x0, [sp, #160]
    1358:	str	w1, [x0, #48]
    135c:	ldr	x0, [sp, #216]
    1360:	bl	0 <grub_file_close>
    1364:	ldr	x0, [sp, #264]
    1368:	bl	0 <grub_device_close>
    136c:	mov	w2, #0x0                   	// #0
    1370:	adrp	x0, 0 <grub_mod_init-0x1530>
    1374:	add	x0, x0, #0x0
    1378:	ldr	x1, [x0]
    137c:	adrp	x0, 0 <grub_mod_init-0x1530>
    1380:	add	x0, x0, #0x0
    1384:	ldr	x0, [x0]
    1388:	bl	0 <grub_loader_set>
    138c:	mov	w0, #0x0                   	// #0
    1390:	b	1474 <grub_mod_init-0xbc>
    1394:	nop
    1398:	b	13c8 <grub_mod_init-0x168>
    139c:	nop
    13a0:	b	13c8 <grub_mod_init-0x168>
    13a4:	nop
    13a8:	b	13c8 <grub_mod_init-0x168>
    13ac:	nop
    13b0:	b	13c8 <grub_mod_init-0x168>
    13b4:	nop
    13b8:	b	13c8 <grub_mod_init-0x168>
    13bc:	nop
    13c0:	b	13c8 <grub_mod_init-0x168>
    13c4:	nop
    13c8:	ldr	x0, [sp, #264]
    13cc:	cmp	x0, #0x0
    13d0:	b.eq	13dc <grub_mod_init-0x154>  // b.none
    13d4:	ldr	x0, [sp, #264]
    13d8:	bl	0 <grub_device_close>
    13dc:	ldr	x0, [sp, #216]
    13e0:	cmp	x0, #0x0
    13e4:	b.eq	13f0 <grub_mod_init-0x140>  // b.none
    13e8:	ldr	x0, [sp, #216]
    13ec:	bl	0 <grub_file_close>
    13f0:	adrp	x0, 0 <grub_mod_init-0x1530>
    13f4:	add	x0, x0, #0x0
    13f8:	ldr	x0, [x0]
    13fc:	ldr	x0, [x0]
    1400:	bl	0 <grub_free>
    1404:	adrp	x0, 0 <grub_mod_init-0x1530>
    1408:	add	x0, x0, #0x0
    140c:	ldr	x0, [x0]
    1410:	ldr	x0, [x0]
    1414:	cmp	x0, #0x0
    1418:	b.eq	1450 <grub_mod_init-0xe0>  // b.none
    141c:	ldr	x0, [sp, #192]
    1420:	ldr	x2, [x0, #48]
    1424:	adrp	x0, 0 <grub_mod_init-0x1530>
    1428:	add	x0, x0, #0x0
    142c:	ldr	x0, [x0]
    1430:	ldr	x3, [x0]
    1434:	adrp	x0, 0 <grub_mod_init-0x1530>
    1438:	add	x0, x0, #0x0
    143c:	ldr	x0, [x0]
    1440:	ldr	x0, [x0]
    1444:	mov	x1, x0
    1448:	mov	x0, x3
    144c:	blr	x2
    1450:	adrp	x0, 0 <grub_mod_init-0x1530>
    1454:	add	x0, x0, #0x0
    1458:	ldr	x0, [x0]
    145c:	ldr	x0, [x0]
    1460:	bl	0 <grub_dl_unref>
    1464:	adrp	x0, 0 <grub_mod_init-0x1530>
    1468:	add	x0, x0, #0x0
    146c:	ldr	x0, [x0]
    1470:	ldr	w0, [x0]
    1474:	ldp	x29, x30, [sp], #272
    1478:	ret
    147c:	nop
	...

0000000000001530 <grub_mod_init>:
    1530:	stp	x29, x30, [sp, #-32]!
    1534:	mov	x29, sp
    1538:	str	x0, [sp, #24]
    153c:	adrp	x0, 0 <grub_mod_init-0x1530>
    1540:	add	x0, x0, #0x0
    1544:	ldr	x3, [x0]
    1548:	mov	x2, #0x0                   	// #0
    154c:	adrp	x0, 0 <grub_mod_init-0x1530>
    1550:	add	x0, x0, #0x0
    1554:	ldr	x1, [x0]
    1558:	adrp	x0, 0 <grub_mod_init-0x1530>
    155c:	add	x0, x0, #0x0
    1560:	ldr	x0, [x0]
    1564:	bl	78c <grub_mod_init-0xda4>
    1568:	mov	x1, x0
    156c:	adrp	x0, 0 <grub_mod_init-0x1530>
    1570:	add	x0, x0, #0x0
    1574:	ldr	x0, [x0]
    1578:	str	x1, [x0]
    157c:	adrp	x0, 0 <grub_mod_init-0x1530>
    1580:	add	x0, x0, #0x0
    1584:	ldr	x0, [x0]
    1588:	ldr	x1, [sp, #24]
    158c:	str	x1, [x0]
    1590:	nop
    1594:	ldp	x29, x30, [sp], #32
    1598:	ret
    159c:	nop
	...

00000000000015c8 <grub_mod_fini>:
    15c8:	stp	x29, x30, [sp, #-16]!
    15cc:	mov	x29, sp
    15d0:	adrp	x0, 0 <grub_mod_init-0x1530>
    15d4:	add	x0, x0, #0x0
    15d8:	ldr	x0, [x0]
    15dc:	ldr	x0, [x0]
    15e0:	bl	0 <grub_unregister_command>
    15e4:	nop
    15e8:	ldp	x29, x30, [sp], #16
    15ec:	ret
	...
