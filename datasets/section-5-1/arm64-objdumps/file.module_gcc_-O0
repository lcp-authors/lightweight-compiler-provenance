
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//file.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_file_size>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	x0, [x0, #64]
      10:	add	sp, sp, #0x10
      14:	ret

0000000000000018 <grub_cmd_file>:
      18:	sub	sp, sp, #0x330
      1c:	stp	x29, x30, [sp]
      20:	mov	x29, sp
      24:	str	x0, [sp, #40]
      28:	str	w1, [sp, #36]
      2c:	str	x2, [sp, #24]
      30:	str	xzr, [sp, #744]
      34:	str	xzr, [sp, #808]
      38:	mov	w0, #0xffffffff            	// #-1
      3c:	str	w0, [sp, #804]
      40:	str	wzr, [sp, #796]
      44:	str	xzr, [sp, #784]
      48:	ldr	w0, [sp, #36]
      4c:	cmp	w0, #0x0
      50:	b.ne	6c <grub_cmd_file+0x54>  // b.any
      54:	adrp	x0, 0 <grub_file_size>
      58:	add	x0, x0, #0x0
      5c:	ldr	x1, [x0]
      60:	mov	w0, #0x12                  	// #18
      64:	bl	0 <grub_error>
      68:	b	fa0 <grub_cmd_file+0xf88>
      6c:	str	wzr, [sp, #800]
      70:	b	d0 <grub_cmd_file+0xb8>
      74:	ldr	x0, [sp, #40]
      78:	ldr	x1, [x0, #8]
      7c:	ldrsw	x0, [sp, #800]
      80:	lsl	x0, x0, #4
      84:	add	x0, x1, x0
      88:	ldr	w0, [x0]
      8c:	cmp	w0, #0x0
      90:	b.eq	c4 <grub_cmd_file+0xac>  // b.none
      94:	ldr	w0, [sp, #804]
      98:	cmn	w0, #0x1
      9c:	b.ne	ac <grub_cmd_file+0x94>  // b.any
      a0:	ldr	w0, [sp, #800]
      a4:	str	w0, [sp, #804]
      a8:	b	c4 <grub_cmd_file+0xac>
      ac:	adrp	x0, 0 <grub_file_size>
      b0:	add	x0, x0, #0x0
      b4:	ldr	x1, [x0]
      b8:	mov	w0, #0x12                  	// #18
      bc:	bl	0 <grub_error>
      c0:	b	fa0 <grub_cmd_file+0xf88>
      c4:	ldr	w0, [sp, #800]
      c8:	add	w0, w0, #0x1
      cc:	str	w0, [sp, #800]
      d0:	ldr	w0, [sp, #800]
      d4:	cmp	w0, #0x1e
      d8:	b.le	74 <grub_cmd_file+0x5c>
      dc:	ldr	w0, [sp, #804]
      e0:	cmn	w0, #0x1
      e4:	b.ne	100 <grub_cmd_file+0xe8>  // b.any
      e8:	adrp	x0, 0 <grub_file_size>
      ec:	add	x0, x0, #0x0
      f0:	ldr	x1, [x0]
      f4:	mov	w0, #0x12                  	// #18
      f8:	bl	0 <grub_error>
      fc:	b	fa0 <grub_cmd_file+0xf88>
     100:	ldr	x0, [sp, #24]
     104:	ldr	x0, [x0]
     108:	mov	w1, #0x12                  	// #18
     10c:	bl	0 <grub_file_open>
     110:	str	x0, [sp, #744]
     114:	ldr	x0, [sp, #744]
     118:	cmp	x0, #0x0
     11c:	b.ne	134 <grub_cmd_file+0x11c>  // b.any
     120:	adrp	x0, 0 <grub_file_size>
     124:	add	x0, x0, #0x0
     128:	ldr	x0, [x0]
     12c:	ldr	w0, [x0]
     130:	b	fa0 <grub_cmd_file+0xf88>
     134:	ldr	w0, [sp, #804]
     138:	cmp	w0, #0x1e
     13c:	b.hi	efc <grub_cmd_file+0xee4>  // b.pmore
     140:	adrp	x1, 0 <grub_file_size>
     144:	add	x1, x1, #0x0
     148:	ldr	x1, [x1]
     14c:	ldr	w0, [x1, w0, uxtw #2]
     150:	adr	x1, 15c <grub_cmd_file+0x144>
     154:	add	x0, x1, w0, sxtw #2
     158:	br	x0
     15c:	ldr	x0, [sp, #744]
     160:	bl	0 <grub_file_size>
     164:	cmp	x0, #0x200
     168:	b.ne	d50 <grub_cmd_file+0xd38>  // b.any
     16c:	mov	x1, #0x1fe                 	// #510
     170:	ldr	x0, [sp, #744]
     174:	bl	0 <grub_file_seek>
     178:	cmn	x0, #0x1
     17c:	b.eq	d58 <grub_cmd_file+0xd40>  // b.none
     180:	add	x0, sp, #0x2c2
     184:	mov	x2, #0x2                   	// #2
     188:	mov	x1, x0
     18c:	ldr	x0, [sp, #744]
     190:	bl	0 <grub_file_read>
     194:	cmp	x0, #0x2
     198:	b.ne	d60 <grub_cmd_file+0xd48>  // b.any
     19c:	ldrh	w1, [sp, #706]
     1a0:	mov	w0, #0xaa55                	// #43605
     1a4:	cmp	w1, w0
     1a8:	b.ne	d68 <grub_cmd_file+0xd50>  // b.any
     1ac:	mov	w0, #0x1                   	// #1
     1b0:	str	w0, [sp, #796]
     1b4:	b	efc <grub_cmd_file+0xee4>
     1b8:	add	x0, sp, #0x30
     1bc:	mov	x2, #0x40                  	// #64
     1c0:	mov	x1, x0
     1c4:	ldr	x0, [sp, #744]
     1c8:	bl	0 <grub_file_read>
     1cc:	cmp	x0, #0x40
     1d0:	b.ne	d70 <grub_cmd_file+0xd58>  // b.any
     1d4:	ldrb	w0, [sp, #48]
     1d8:	cmp	w0, #0x7f
     1dc:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     1e0:	ldrb	w0, [sp, #49]
     1e4:	cmp	w0, #0x45
     1e8:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     1ec:	ldrb	w0, [sp, #50]
     1f0:	cmp	w0, #0x4c
     1f4:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     1f8:	ldrb	w0, [sp, #51]
     1fc:	cmp	w0, #0x46
     200:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     204:	ldrb	w0, [sp, #54]
     208:	cmp	w0, #0x1
     20c:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     210:	ldr	w0, [sp, #68]
     214:	cmp	w0, #0x1
     218:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     21c:	ldrb	w0, [sp, #52]
     220:	cmp	w0, #0x2
     224:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     228:	ldrb	w0, [sp, #53]
     22c:	cmp	w0, #0x1
     230:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     234:	ldrh	w0, [sp, #66]
     238:	cmp	w0, #0x32
     23c:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     240:	mov	w0, #0x1                   	// #1
     244:	str	w0, [sp, #796]
     248:	b	efc <grub_cmd_file+0xee4>
     24c:	add	x0, sp, #0x30
     250:	mov	x2, #0x40                  	// #64
     254:	mov	x1, x0
     258:	ldr	x0, [sp, #744]
     25c:	bl	0 <grub_file_read>
     260:	cmp	x0, #0x40
     264:	b.ne	d78 <grub_cmd_file+0xd60>  // b.any
     268:	ldrb	w0, [sp, #48]
     26c:	cmp	w0, #0x7f
     270:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     274:	ldrb	w0, [sp, #49]
     278:	cmp	w0, #0x45
     27c:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     280:	ldrb	w0, [sp, #50]
     284:	cmp	w0, #0x4c
     288:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     28c:	ldrb	w0, [sp, #51]
     290:	cmp	w0, #0x46
     294:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     298:	ldrb	w0, [sp, #54]
     29c:	cmp	w0, #0x1
     2a0:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     2a4:	ldr	w0, [sp, #68]
     2a8:	cmp	w0, #0x1
     2ac:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     2b0:	ldrb	w0, [sp, #52]
     2b4:	cmp	w0, #0x2
     2b8:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     2bc:	ldrb	w0, [sp, #53]
     2c0:	cmp	w0, #0x2
     2c4:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     2c8:	ldrh	w0, [sp, #66]
     2cc:	cmp	w0, #0x2b
     2d0:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     2d4:	ldrh	w0, [sp, #64]
     2d8:	cmp	w0, #0x200
     2dc:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     2e0:	mov	w0, #0x1                   	// #1
     2e4:	str	w0, [sp, #796]
     2e8:	b	efc <grub_cmd_file+0xee4>
     2ec:	add	x0, sp, #0x30
     2f0:	mov	x2, #0x34                  	// #52
     2f4:	mov	x1, x0
     2f8:	ldr	x0, [sp, #744]
     2fc:	bl	0 <grub_file_read>
     300:	cmp	x0, #0x34
     304:	b.ne	d80 <grub_cmd_file+0xd68>  // b.any
     308:	ldrb	w0, [sp, #48]
     30c:	cmp	w0, #0x7f
     310:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     314:	ldrb	w0, [sp, #49]
     318:	cmp	w0, #0x45
     31c:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     320:	ldrb	w0, [sp, #50]
     324:	cmp	w0, #0x4c
     328:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     32c:	ldrb	w0, [sp, #51]
     330:	cmp	w0, #0x46
     334:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     338:	ldrb	w0, [sp, #54]
     33c:	cmp	w0, #0x1
     340:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     344:	ldr	w0, [sp, #68]
     348:	cmp	w0, #0x1
     34c:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     350:	ldrb	w0, [sp, #53]
     354:	cmp	w0, #0x2
     358:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     35c:	ldrh	w0, [sp, #66]
     360:	cmp	w0, #0x14
     364:	b.eq	374 <grub_cmd_file+0x35c>  // b.none
     368:	ldrh	w0, [sp, #66]
     36c:	cmp	w0, #0x15
     370:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     374:	ldrh	w0, [sp, #64]
     378:	cmp	w0, #0x200
     37c:	b.eq	38c <grub_cmd_file+0x374>  // b.none
     380:	ldrh	w0, [sp, #64]
     384:	cmp	w0, #0x300
     388:	b.ne	d88 <grub_cmd_file+0xd70>  // b.any
     38c:	mov	w0, #0x1                   	// #1
     390:	str	w0, [sp, #796]
     394:	b	efc <grub_cmd_file+0xee4>
     398:	add	x0, sp, #0x30
     39c:	mov	x2, #0x34                  	// #52
     3a0:	mov	x1, x0
     3a4:	ldr	x0, [sp, #744]
     3a8:	bl	0 <grub_file_read>
     3ac:	cmp	x0, #0x34
     3b0:	b.ne	d90 <grub_cmd_file+0xd78>  // b.any
     3b4:	ldrb	w0, [sp, #48]
     3b8:	cmp	w0, #0x7f
     3bc:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     3c0:	ldrb	w0, [sp, #49]
     3c4:	cmp	w0, #0x45
     3c8:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     3cc:	ldrb	w0, [sp, #50]
     3d0:	cmp	w0, #0x4c
     3d4:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     3d8:	ldrb	w0, [sp, #51]
     3dc:	cmp	w0, #0x46
     3e0:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     3e4:	ldrb	w0, [sp, #54]
     3e8:	cmp	w0, #0x1
     3ec:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     3f0:	ldr	w0, [sp, #68]
     3f4:	cmp	w0, #0x1
     3f8:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     3fc:	ldrb	w0, [sp, #53]
     400:	cmp	w0, #0x2
     404:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     408:	ldrh	w0, [sp, #66]
     40c:	cmp	w0, #0x800
     410:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     414:	ldrh	w0, [sp, #64]
     418:	cmp	w0, #0x200
     41c:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     420:	mov	w0, #0x1                   	// #1
     424:	str	w0, [sp, #796]
     428:	b	efc <grub_cmd_file+0xee4>
     42c:	ldr	x0, [sp, #744]
     430:	ldr	x0, [x0]
     434:	mov	x1, x0
     438:	ldr	x0, [sp, #744]
     43c:	bl	0 <grub_elf_file>
     440:	str	x0, [sp, #808]
     444:	ldr	x0, [sp, #808]
     448:	ldrh	w0, [x0, #24]
     44c:	cmp	w0, #0x2
     450:	b.ne	d98 <grub_cmd_file+0xd80>  // b.any
     454:	ldr	x0, [sp, #808]
     458:	ldrb	w0, [x0, #13]
     45c:	cmp	w0, #0x1
     460:	b.ne	d98 <grub_cmd_file+0xd80>  // b.any
     464:	ldr	x0, [sp, #808]
     468:	bl	0 <grub_elf_is_elf32>
     46c:	str	w0, [sp, #740]
     470:	ldr	x0, [sp, #808]
     474:	bl	0 <grub_elf_is_elf64>
     478:	str	w0, [sp, #736]
     47c:	ldr	w0, [sp, #740]
     480:	cmp	w0, #0x0
     484:	b.ne	494 <grub_cmd_file+0x47c>  // b.any
     488:	ldr	w0, [sp, #736]
     48c:	cmp	w0, #0x0
     490:	b.eq	da0 <grub_cmd_file+0xd88>  // b.none
     494:	ldr	w0, [sp, #740]
     498:	cmp	w0, #0x0
     49c:	b.ne	4ac <grub_cmd_file+0x494>  // b.any
     4a0:	ldr	w0, [sp, #804]
     4a4:	cmp	w0, #0x12
     4a8:	b.eq	da8 <grub_cmd_file+0xd90>  // b.none
     4ac:	ldr	w0, [sp, #736]
     4b0:	cmp	w0, #0x0
     4b4:	b.ne	4c4 <grub_cmd_file+0x4ac>  // b.any
     4b8:	ldr	w0, [sp, #804]
     4bc:	cmp	w0, #0x13
     4c0:	b.eq	db0 <grub_cmd_file+0xd98>  // b.none
     4c4:	ldr	w0, [sp, #736]
     4c8:	cmp	w0, #0x0
     4cc:	b.eq	4dc <grub_cmd_file+0x4c4>  // b.none
     4d0:	ldr	x0, [sp, #808]
     4d4:	bl	12e8 <grub_file_check_netbsd64>
     4d8:	str	w0, [sp, #796]
     4dc:	ldr	w0, [sp, #740]
     4e0:	cmp	w0, #0x0
     4e4:	b.eq	db8 <grub_cmd_file+0xda0>  // b.none
     4e8:	ldr	x0, [sp, #808]
     4ec:	bl	10c0 <grub_file_check_netbsd32>
     4f0:	str	w0, [sp, #796]
     4f4:	b	db8 <grub_cmd_file+0xda0>
     4f8:	add	x0, sp, #0x30
     4fc:	mov	x2, #0x34                  	// #52
     500:	mov	x1, x0
     504:	ldr	x0, [sp, #744]
     508:	bl	0 <grub_file_read>
     50c:	cmp	x0, #0x34
     510:	b.ne	dc0 <grub_cmd_file+0xda8>  // b.any
     514:	ldrb	w0, [sp, #48]
     518:	cmp	w0, #0x7f
     51c:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     520:	ldrb	w0, [sp, #49]
     524:	cmp	w0, #0x45
     528:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     52c:	ldrb	w0, [sp, #50]
     530:	cmp	w0, #0x4c
     534:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     538:	ldrb	w0, [sp, #51]
     53c:	cmp	w0, #0x46
     540:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     544:	ldrb	w0, [sp, #54]
     548:	cmp	w0, #0x1
     54c:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     550:	ldr	w0, [sp, #68]
     554:	cmp	w0, #0x1
     558:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     55c:	ldrh	w0, [sp, #64]
     560:	cmp	w0, #0x2
     564:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     568:	ldrb	w0, [sp, #53]
     56c:	cmp	w0, #0x1
     570:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     574:	ldrb	w0, [sp, #55]
     578:	cmp	w0, #0x9
     57c:	b.ne	dc8 <grub_cmd_file+0xdb0>  // b.any
     580:	ldrh	w0, [sp, #66]
     584:	cmp	w0, #0x3
     588:	b.ne	5a0 <grub_cmd_file+0x588>  // b.any
     58c:	ldrb	w0, [sp, #52]
     590:	cmp	w0, #0x1
     594:	b.ne	5a0 <grub_cmd_file+0x588>  // b.any
     598:	mov	w0, #0x1                   	// #1
     59c:	b	5a4 <grub_cmd_file+0x58c>
     5a0:	mov	w0, #0x0                   	// #0
     5a4:	str	w0, [sp, #732]
     5a8:	ldrh	w0, [sp, #66]
     5ac:	cmp	w0, #0x3e
     5b0:	b.ne	5c8 <grub_cmd_file+0x5b0>  // b.any
     5b4:	ldrb	w0, [sp, #52]
     5b8:	cmp	w0, #0x2
     5bc:	b.ne	5c8 <grub_cmd_file+0x5b0>  // b.any
     5c0:	mov	w0, #0x1                   	// #1
     5c4:	b	5cc <grub_cmd_file+0x5b4>
     5c8:	mov	w0, #0x0                   	// #0
     5cc:	str	w0, [sp, #728]
     5d0:	ldr	w0, [sp, #732]
     5d4:	cmp	w0, #0x0
     5d8:	b.ne	5e8 <grub_cmd_file+0x5d0>  // b.any
     5dc:	ldr	w0, [sp, #728]
     5e0:	cmp	w0, #0x0
     5e4:	b.eq	dd0 <grub_cmd_file+0xdb8>  // b.none
     5e8:	ldr	w0, [sp, #732]
     5ec:	cmp	w0, #0x0
     5f0:	b.ne	60c <grub_cmd_file+0x5f4>  // b.any
     5f4:	ldr	w0, [sp, #804]
     5f8:	cmp	w0, #0xf
     5fc:	b.eq	efc <grub_cmd_file+0xee4>  // b.none
     600:	ldr	w0, [sp, #804]
     604:	cmp	w0, #0x12
     608:	b.eq	efc <grub_cmd_file+0xee4>  // b.none
     60c:	ldr	w0, [sp, #728]
     610:	cmp	w0, #0x0
     614:	b.ne	630 <grub_cmd_file+0x618>  // b.any
     618:	ldr	w0, [sp, #804]
     61c:	cmp	w0, #0x10
     620:	b.eq	efc <grub_cmd_file+0xee4>  // b.none
     624:	ldr	w0, [sp, #804]
     628:	cmp	w0, #0x13
     62c:	b.eq	efc <grub_cmd_file+0xee4>  // b.none
     630:	mov	w0, #0x1                   	// #1
     634:	str	w0, [sp, #796]
     638:	b	efc <grub_cmd_file+0xee4>
     63c:	add	x0, sp, #0x30
     640:	mov	x2, #0x34                  	// #52
     644:	mov	x1, x0
     648:	ldr	x0, [sp, #744]
     64c:	bl	0 <grub_file_read>
     650:	cmp	x0, #0x34
     654:	b.ne	dd8 <grub_cmd_file+0xdc0>  // b.any
     658:	ldrb	w0, [sp, #48]
     65c:	cmp	w0, #0x7f
     660:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     664:	ldrb	w0, [sp, #49]
     668:	cmp	w0, #0x45
     66c:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     670:	ldrb	w0, [sp, #50]
     674:	cmp	w0, #0x4c
     678:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     67c:	ldrb	w0, [sp, #51]
     680:	cmp	w0, #0x46
     684:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     688:	ldrb	w0, [sp, #54]
     68c:	cmp	w0, #0x1
     690:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     694:	ldr	w0, [sp, #68]
     698:	cmp	w0, #0x1
     69c:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     6a0:	ldrh	w0, [sp, #66]
     6a4:	cmp	w0, #0x8
     6a8:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     6ac:	ldrh	w0, [sp, #64]
     6b0:	cmp	w0, #0x2
     6b4:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     6b8:	mov	w0, #0x1                   	// #1
     6bc:	str	w0, [sp, #796]
     6c0:	b	efc <grub_cmd_file+0xee4>
     6c4:	add	x0, sp, #0x30
     6c8:	mov	x2, #0x44                  	// #68
     6cc:	mov	x1, x0
     6d0:	ldr	x0, [sp, #744]
     6d4:	bl	0 <grub_file_read>
     6d8:	cmp	x0, #0x44
     6dc:	b.ne	de0 <grub_cmd_file+0xdc8>  // b.any
     6e0:	ldr	w1, [sp, #48]
     6e4:	mov	w0, #0x6                   	// #6
     6e8:	movk	w0, #0xea00, lsl #16
     6ec:	cmp	w1, w0
     6f0:	b.ne	700 <grub_cmd_file+0x6e8>  // b.any
     6f4:	mov	w0, #0x1                   	// #1
     6f8:	str	w0, [sp, #796]
     6fc:	b	efc <grub_cmd_file+0xee4>
     700:	ldr	w1, [sp, #84]
     704:	mov	w0, #0x2818                	// #10264
     708:	movk	w0, #0x16f, lsl #16
     70c:	cmp	w1, w0
     710:	b.ne	de8 <grub_cmd_file+0xdd0>  // b.any
     714:	mov	w0, #0x1                   	// #1
     718:	str	w0, [sp, #796]
     71c:	b	efc <grub_cmd_file+0xee4>
     720:	add	x0, sp, #0x30
     724:	mov	x2, #0x40                  	// #64
     728:	mov	x1, x0
     72c:	ldr	x0, [sp, #744]
     730:	bl	0 <grub_file_read>
     734:	cmp	x0, #0x40
     738:	b.ne	df0 <grub_cmd_file+0xdd8>  // b.any
     73c:	ldr	w1, [sp, #104]
     740:	mov	w0, #0x5241                	// #21057
     744:	movk	w0, #0x644d, lsl #16
     748:	cmp	w1, w0
     74c:	b.ne	df8 <grub_cmd_file+0xde0>  // b.any
     750:	mov	w0, #0x1                   	// #1
     754:	str	w0, [sp, #796]
     758:	b	efc <grub_cmd_file+0xee4>
     75c:	ldr	x0, [sp, #744]
     760:	bl	1508 <grub_xen_file>
     764:	str	x0, [sp, #808]
     768:	ldr	x0, [sp, #808]
     76c:	cmp	x0, #0x0
     770:	b.eq	e00 <grub_cmd_file+0xde8>  // b.none
     774:	add	x0, sp, #0x30
     778:	mov	x1, x0
     77c:	ldr	x0, [sp, #808]
     780:	bl	17e8 <grub_xen_get_info>
     784:	str	w0, [sp, #708]
     788:	ldr	w0, [sp, #708]
     78c:	cmp	w0, #0x0
     790:	b.ne	e08 <grub_cmd_file+0xdf0>  // b.any
     794:	ldr	w0, [sp, #804]
     798:	cmp	w0, #0x2
     79c:	b.ne	7a8 <grub_cmd_file+0x790>  // b.any
     7a0:	mov	w0, #0x1                   	// #1
     7a4:	str	w0, [sp, #796]
     7a8:	ldr	w0, [sp, #804]
     7ac:	cmp	w0, #0x0
     7b0:	b.ne	7dc <grub_cmd_file+0x7c4>  // b.any
     7b4:	ldr	w0, [sp, #128]
     7b8:	cmp	w0, #0x2
     7bc:	b.eq	7cc <grub_cmd_file+0x7b4>  // b.none
     7c0:	ldr	w0, [sp, #128]
     7c4:	cmp	w0, #0x3
     7c8:	b.ne	7d4 <grub_cmd_file+0x7bc>  // b.any
     7cc:	mov	w0, #0x1                   	// #1
     7d0:	b	7d8 <grub_cmd_file+0x7c0>
     7d4:	mov	w0, #0x0                   	// #0
     7d8:	str	w0, [sp, #796]
     7dc:	ldr	w0, [sp, #804]
     7e0:	cmp	w0, #0x1
     7e4:	b.ne	e10 <grub_cmd_file+0xdf8>  // b.any
     7e8:	ldr	w0, [sp, #128]
     7ec:	cmp	w0, #0x4
     7f0:	cset	w0, eq  // eq = none
     7f4:	and	w0, w0, #0xff
     7f8:	str	w0, [sp, #796]
     7fc:	b	e10 <grub_cmd_file+0xdf8>
     800:	ldr	w0, [sp, #804]
     804:	cmp	w0, #0x4
     808:	b.ne	82c <grub_cmd_file+0x814>  // b.any
     80c:	mov	x0, #0x8000                	// #32768
     810:	str	x0, [sp, #776]
     814:	mov	w0, #0x50d6                	// #20694
     818:	movk	w0, #0xe852, lsl #16
     81c:	str	w0, [sp, #764]
     820:	mov	x0, #0x2                   	// #2
     824:	str	x0, [sp, #752]
     828:	b	848 <grub_cmd_file+0x830>
     82c:	mov	x0, #0x2000                	// #8192
     830:	str	x0, [sp, #776]
     834:	mov	w0, #0xb002                	// #45058
     838:	movk	w0, #0x1bad, lsl #16
     83c:	str	w0, [sp, #764]
     840:	mov	x0, #0x1                   	// #1
     844:	str	x0, [sp, #752]
     848:	ldr	x0, [sp, #776]
     84c:	bl	0 <grub_malloc>
     850:	str	x0, [sp, #720]
     854:	ldr	x0, [sp, #720]
     858:	cmp	x0, #0x0
     85c:	b.eq	e18 <grub_cmd_file+0xe00>  // b.none
     860:	ldr	x2, [sp, #776]
     864:	ldr	x1, [sp, #720]
     868:	ldr	x0, [sp, #744]
     86c:	bl	0 <grub_file_read>
     870:	str	x0, [sp, #712]
     874:	ldr	x0, [sp, #712]
     878:	cmp	x0, #0x1f
     87c:	b.gt	88c <grub_cmd_file+0x874>
     880:	ldr	x0, [sp, #720]
     884:	bl	0 <grub_free>
     888:	b	efc <grub_cmd_file+0xee4>
     88c:	ldr	x0, [sp, #720]
     890:	str	x0, [sp, #768]
     894:	b	920 <grub_cmd_file+0x908>
     898:	ldr	x0, [sp, #768]
     89c:	ldr	w0, [x0]
     8a0:	ldr	w1, [sp, #764]
     8a4:	cmp	w1, w0
     8a8:	b.ne	90c <grub_cmd_file+0x8f4>  // b.any
     8ac:	ldr	x0, [sp, #768]
     8b0:	ldr	w1, [x0]
     8b4:	ldr	x0, [sp, #768]
     8b8:	add	x0, x0, #0x4
     8bc:	ldr	w0, [x0]
     8c0:	add	w1, w1, w0
     8c4:	ldr	x0, [sp, #768]
     8c8:	add	x0, x0, #0x8
     8cc:	ldr	w0, [x0]
     8d0:	add	w1, w1, w0
     8d4:	ldr	w0, [sp, #804]
     8d8:	cmp	w0, #0x4
     8dc:	b.ne	8f0 <grub_cmd_file+0x8d8>  // b.any
     8e0:	ldr	x0, [sp, #768]
     8e4:	add	x0, x0, #0xc
     8e8:	ldr	w0, [x0]
     8ec:	b	8f4 <grub_cmd_file+0x8dc>
     8f0:	mov	w0, #0x0                   	// #0
     8f4:	add	w0, w0, w1
     8f8:	cmp	w0, #0x0
     8fc:	b.ne	90c <grub_cmd_file+0x8f4>  // b.any
     900:	mov	w0, #0x1                   	// #1
     904:	str	w0, [sp, #796]
     908:	b	954 <grub_cmd_file+0x93c>
     90c:	ldr	x0, [sp, #752]
     910:	lsl	x0, x0, #2
     914:	ldr	x1, [sp, #768]
     918:	add	x0, x1, x0
     91c:	str	x0, [sp, #768]
     920:	ldr	w0, [sp, #804]
     924:	cmp	w0, #0x4
     928:	b.ne	934 <grub_cmd_file+0x91c>  // b.any
     92c:	mov	x0, #0xfffffffffffffff0    	// #-16
     930:	b	938 <grub_cmd_file+0x920>
     934:	mov	x0, #0xfffffffffffffff4    	// #-12
     938:	ldr	x1, [sp, #712]
     93c:	add	x0, x0, x1
     940:	ldr	x1, [sp, #720]
     944:	add	x0, x1, x0
     948:	ldr	x1, [sp, #768]
     94c:	cmp	x1, x0
     950:	b.ls	898 <grub_cmd_file+0x880>  // b.plast
     954:	ldr	x0, [sp, #720]
     958:	bl	0 <grub_free>
     95c:	b	efc <grub_cmd_file+0xee4>
     960:	add	x0, sp, #0x30
     964:	mov	x2, #0x268                 	// #616
     968:	mov	x1, x0
     96c:	ldr	x0, [sp, #744]
     970:	bl	0 <grub_file_read>
     974:	cmp	x0, #0x268
     978:	b.ne	e20 <grub_cmd_file+0xe08>  // b.any
     97c:	ldrh	w1, [sp, #558]
     980:	mov	w0, #0xaa55                	// #43605
     984:	cmp	w1, w0
     988:	b.ne	e28 <grub_cmd_file+0xe10>  // b.any
     98c:	ldrb	w0, [sp, #545]
     990:	cmp	w0, #0x40
     994:	b.hi	e30 <grub_cmd_file+0xe18>  // b.pmore
     998:	add	x0, sp, #0x200
     99c:	ldur	w1, [x0, #50]
     9a0:	mov	w0, #0x6448                	// #25672
     9a4:	movk	w0, #0x5372, lsl #16
     9a8:	cmp	w1, w0
     9ac:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     9b0:	ldrh	w0, [sp, #566]
     9b4:	cmp	w0, #0x1ff
     9b8:	b.ls	efc <grub_cmd_file+0xee4>  // b.plast
     9bc:	ldr	w0, [sp, #804]
     9c0:	cmp	w0, #0xc
     9c4:	b.ne	9d4 <grub_cmd_file+0x9bc>  // b.any
     9c8:	mov	w0, #0x1                   	// #1
     9cc:	str	w0, [sp, #796]
     9d0:	b	efc <grub_cmd_file+0xee4>
     9d4:	add	x0, sp, #0x200
     9d8:	ldur	w1, [x0, #50]
     9dc:	mov	w0, #0x6448                	// #25672
     9e0:	movk	w0, #0x5372, lsl #16
     9e4:	cmp	w1, w0
     9e8:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     9ec:	ldrh	w0, [sp, #566]
     9f0:	cmp	w0, #0x202
     9f4:	b.ls	efc <grub_cmd_file+0xee4>  // b.plast
     9f8:	ldrb	w0, [sp, #577]
     9fc:	and	w0, w0, #0x1
     a00:	cmp	w0, #0x0
     a04:	b.eq	e38 <grub_cmd_file+0xe20>  // b.none
     a08:	mov	w0, #0x1                   	// #1
     a0c:	str	w0, [sp, #796]
     a10:	b	efc <grub_cmd_file+0xee4>
     a14:	add	x0, sp, #0x2b8
     a18:	mov	x2, #0x4                   	// #4
     a1c:	mov	x1, x0
     a20:	ldr	x0, [sp, #744]
     a24:	bl	0 <grub_file_read>
     a28:	cmp	x0, #0x4
     a2c:	b.ne	e40 <grub_cmd_file+0xe28>  // b.any
     a30:	add	x0, sp, #0x2b8
     a34:	mov	x2, #0x4                   	// #4
     a38:	mov	x1, x0
     a3c:	adrp	x0, 0 <grub_file_size>
     a40:	add	x0, x0, #0x0
     a44:	ldr	x0, [x0]
     a48:	bl	0 <grub_memcmp>
     a4c:	cmp	w0, #0x0
     a50:	b.eq	a78 <grub_cmd_file+0xa60>  // b.none
     a54:	add	x0, sp, #0x2b8
     a58:	mov	x2, #0x4                   	// #4
     a5c:	mov	x1, x0
     a60:	adrp	x0, 0 <grub_file_size>
     a64:	add	x0, x0, #0x0
     a68:	ldr	x0, [x0]
     a6c:	bl	0 <grub_memcmp>
     a70:	cmp	w0, #0x0
     a74:	b.ne	e48 <grub_cmd_file+0xe30>  // b.any
     a78:	mov	w0, #0x1                   	// #1
     a7c:	str	w0, [sp, #796]
     a80:	b	e48 <grub_cmd_file+0xe30>
     a84:	ldr	x0, [sp, #24]
     a88:	ldr	x3, [x0]
     a8c:	ldr	w0, [sp, #804]
     a90:	cmp	w0, #0x1b
     a94:	cset	w0, eq  // eq = none
     a98:	and	w0, w0, #0xff
     a9c:	mov	w2, w0
     aa0:	mov	w1, #0x12                  	// #18
     aa4:	mov	x0, x3
     aa8:	bl	0 <grub_macho_open>
     aac:	str	x0, [sp, #784]
     ab0:	ldr	x0, [sp, #784]
     ab4:	cmp	x0, #0x0
     ab8:	b.eq	e50 <grub_cmd_file+0xe38>  // b.none
     abc:	mov	w0, #0x1                   	// #1
     ac0:	str	w0, [sp, #796]
     ac4:	b	efc <grub_cmd_file+0xee4>
     ac8:	add	x0, sp, #0x30
     acc:	mov	x2, #0x1e0                 	// #480
     ad0:	mov	x1, x0
     ad4:	ldr	x0, [sp, #744]
     ad8:	bl	0 <grub_file_read>
     adc:	cmp	x0, #0x1e0
     ae0:	b.ne	e58 <grub_cmd_file+0xe40>  // b.any
     ae4:	ldr	w1, [sp, #124]
     ae8:	mov	w0, #0x6d65                	// #28005
     aec:	movk	w0, #0x7369, lsl #16
     af0:	cmp	w1, w0
     af4:	b.ne	e60 <grub_cmd_file+0xe48>  // b.any
     af8:	mov	w0, #0x1                   	// #1
     afc:	str	w0, [sp, #796]
     b00:	b	efc <grub_cmd_file+0xee4>
     b04:	add	x0, sp, #0x2b0
     b08:	mov	x2, #0x2                   	// #2
     b0c:	mov	x1, x0
     b10:	ldr	x0, [sp, #744]
     b14:	bl	0 <grub_file_read>
     b18:	cmp	x0, #0x2
     b1c:	b.ne	e68 <grub_cmd_file+0xe50>  // b.any
     b20:	ldrb	w0, [sp, #688]
     b24:	cmp	w0, #0x4d
     b28:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     b2c:	ldrb	w0, [sp, #689]
     b30:	cmp	w0, #0x5a
     b34:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     b38:	mov	x1, #0x3c                  	// #60
     b3c:	ldr	x0, [sp, #744]
     b40:	bl	0 <grub_file_seek>
     b44:	cmn	x0, #0x1
     b48:	b.eq	e70 <grub_cmd_file+0xe58>  // b.none
     b4c:	add	x0, sp, #0x2ac
     b50:	mov	x2, #0x4                   	// #4
     b54:	mov	x1, x0
     b58:	ldr	x0, [sp, #744]
     b5c:	bl	0 <grub_file_read>
     b60:	cmp	x0, #0x4
     b64:	b.ne	e78 <grub_cmd_file+0xe60>  // b.any
     b68:	ldr	w0, [sp, #684]
     b6c:	mov	w0, w0
     b70:	mov	x1, x0
     b74:	ldr	x0, [sp, #744]
     b78:	bl	0 <grub_file_seek>
     b7c:	cmn	x0, #0x1
     b80:	b.eq	e80 <grub_cmd_file+0xe68>  // b.none
     b84:	add	x0, sp, #0x2b0
     b88:	mov	x2, #0x4                   	// #4
     b8c:	mov	x1, x0
     b90:	ldr	x0, [sp, #744]
     b94:	bl	0 <grub_file_read>
     b98:	cmp	x0, #0x4
     b9c:	b.ne	e88 <grub_cmd_file+0xe70>  // b.any
     ba0:	ldrb	w0, [sp, #688]
     ba4:	cmp	w0, #0x50
     ba8:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     bac:	ldrb	w0, [sp, #689]
     bb0:	cmp	w0, #0x45
     bb4:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     bb8:	ldrb	w0, [sp, #690]
     bbc:	cmp	w0, #0x0
     bc0:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     bc4:	ldrb	w0, [sp, #691]
     bc8:	cmp	w0, #0x0
     bcc:	b.ne	efc <grub_cmd_file+0xee4>  // b.any
     bd0:	add	x0, sp, #0x298
     bd4:	mov	x2, #0x14                  	// #20
     bd8:	mov	x1, x0
     bdc:	ldr	x0, [sp, #744]
     be0:	bl	0 <grub_file_read>
     be4:	cmp	x0, #0x14
     be8:	b.ne	e90 <grub_cmd_file+0xe78>  // b.any
     bec:	ldr	w0, [sp, #804]
     bf0:	cmp	w0, #0x14
     bf4:	b.ne	c04 <grub_cmd_file+0xbec>  // b.any
     bf8:	ldrh	w0, [sp, #664]
     bfc:	cmp	w0, #0x14c
     c00:	b.ne	e98 <grub_cmd_file+0xe80>  // b.any
     c04:	ldr	w0, [sp, #804]
     c08:	cmp	w0, #0x15
     c0c:	b.ne	c20 <grub_cmd_file+0xc08>  // b.any
     c10:	ldrh	w1, [sp, #664]
     c14:	mov	w0, #0x8664                	// #34404
     c18:	cmp	w1, w0
     c1c:	b.ne	ea0 <grub_cmd_file+0xe88>  // b.any
     c20:	ldr	w0, [sp, #804]
     c24:	cmp	w0, #0x16
     c28:	b.ne	c38 <grub_cmd_file+0xc20>  // b.any
     c2c:	ldrh	w0, [sp, #664]
     c30:	cmp	w0, #0x200
     c34:	b.ne	ea8 <grub_cmd_file+0xe90>  // b.any
     c38:	ldr	w0, [sp, #804]
     c3c:	cmp	w0, #0x17
     c40:	b.ne	c54 <grub_cmd_file+0xc3c>  // b.any
     c44:	ldrh	w1, [sp, #664]
     c48:	mov	w0, #0xaa64                	// #43620
     c4c:	cmp	w1, w0
     c50:	b.ne	eb0 <grub_cmd_file+0xe98>  // b.any
     c54:	ldr	w0, [sp, #804]
     c58:	cmp	w0, #0x18
     c5c:	b.ne	c6c <grub_cmd_file+0xc54>  // b.any
     c60:	ldrh	w0, [sp, #664]
     c64:	cmp	w0, #0x1c2
     c68:	b.ne	eb8 <grub_cmd_file+0xea0>  // b.any
     c6c:	ldr	w0, [sp, #804]
     c70:	cmp	w0, #0x19
     c74:	b.ne	c88 <grub_cmd_file+0xc70>  // b.any
     c78:	ldrh	w1, [sp, #664]
     c7c:	mov	w0, #0x5064                	// #20580
     c80:	cmp	w1, w0
     c84:	b.ne	ec0 <grub_cmd_file+0xea8>  // b.any
     c88:	ldr	w0, [sp, #804]
     c8c:	cmp	w0, #0x16
     c90:	b.eq	cb8 <grub_cmd_file+0xca0>  // b.none
     c94:	ldr	w0, [sp, #804]
     c98:	cmp	w0, #0x15
     c9c:	b.eq	cb8 <grub_cmd_file+0xca0>  // b.none
     ca0:	ldr	w0, [sp, #804]
     ca4:	cmp	w0, #0x17
     ca8:	b.eq	cb8 <grub_cmd_file+0xca0>  // b.none
     cac:	ldr	w0, [sp, #804]
     cb0:	cmp	w0, #0x19
     cb4:	b.ne	cf8 <grub_cmd_file+0xce0>  // b.any
     cb8:	add	x0, sp, #0x30
     cbc:	mov	x2, #0xf0                  	// #240
     cc0:	mov	x1, x0
     cc4:	ldr	x0, [sp, #744]
     cc8:	bl	0 <grub_file_read>
     ccc:	cmp	x0, #0xf0
     cd0:	b.ne	ec8 <grub_cmd_file+0xeb0>  // b.any
     cd4:	ldrh	w0, [sp, #48]
     cd8:	cmp	w0, #0x20b
     cdc:	b.ne	ed0 <grub_cmd_file+0xeb8>  // b.any
     ce0:	ldrh	w0, [sp, #116]
     ce4:	cmp	w0, #0xa
     ce8:	b.ne	ed8 <grub_cmd_file+0xec0>  // b.any
     cec:	mov	w0, #0x1                   	// #1
     cf0:	str	w0, [sp, #796]
     cf4:	b	efc <grub_cmd_file+0xee4>
     cf8:	ldr	w0, [sp, #804]
     cfc:	cmp	w0, #0x14
     d00:	b.eq	d10 <grub_cmd_file+0xcf8>  // b.none
     d04:	ldr	w0, [sp, #804]
     d08:	cmp	w0, #0x18
     d0c:	b.ne	ee0 <grub_cmd_file+0xec8>  // b.any
     d10:	add	x0, sp, #0x30
     d14:	mov	x2, #0xe0                  	// #224
     d18:	mov	x1, x0
     d1c:	ldr	x0, [sp, #744]
     d20:	bl	0 <grub_file_read>
     d24:	cmp	x0, #0xe0
     d28:	b.ne	ee8 <grub_cmd_file+0xed0>  // b.any
     d2c:	ldrh	w0, [sp, #48]
     d30:	cmp	w0, #0x10b
     d34:	b.ne	ef0 <grub_cmd_file+0xed8>  // b.any
     d38:	ldrh	w0, [sp, #116]
     d3c:	cmp	w0, #0xa
     d40:	b.ne	ef8 <grub_cmd_file+0xee0>  // b.any
     d44:	mov	w0, #0x1                   	// #1
     d48:	str	w0, [sp, #796]
     d4c:	b	efc <grub_cmd_file+0xee4>
     d50:	nop
     d54:	b	efc <grub_cmd_file+0xee4>
     d58:	nop
     d5c:	b	efc <grub_cmd_file+0xee4>
     d60:	nop
     d64:	b	efc <grub_cmd_file+0xee4>
     d68:	nop
     d6c:	b	efc <grub_cmd_file+0xee4>
     d70:	nop
     d74:	b	efc <grub_cmd_file+0xee4>
     d78:	nop
     d7c:	b	efc <grub_cmd_file+0xee4>
     d80:	nop
     d84:	b	efc <grub_cmd_file+0xee4>
     d88:	nop
     d8c:	b	efc <grub_cmd_file+0xee4>
     d90:	nop
     d94:	b	efc <grub_cmd_file+0xee4>
     d98:	nop
     d9c:	b	efc <grub_cmd_file+0xee4>
     da0:	nop
     da4:	b	efc <grub_cmd_file+0xee4>
     da8:	nop
     dac:	b	efc <grub_cmd_file+0xee4>
     db0:	nop
     db4:	b	efc <grub_cmd_file+0xee4>
     db8:	nop
     dbc:	b	efc <grub_cmd_file+0xee4>
     dc0:	nop
     dc4:	b	efc <grub_cmd_file+0xee4>
     dc8:	nop
     dcc:	b	efc <grub_cmd_file+0xee4>
     dd0:	nop
     dd4:	b	efc <grub_cmd_file+0xee4>
     dd8:	nop
     ddc:	b	efc <grub_cmd_file+0xee4>
     de0:	nop
     de4:	b	efc <grub_cmd_file+0xee4>
     de8:	nop
     dec:	b	efc <grub_cmd_file+0xee4>
     df0:	nop
     df4:	b	efc <grub_cmd_file+0xee4>
     df8:	nop
     dfc:	b	efc <grub_cmd_file+0xee4>
     e00:	nop
     e04:	b	efc <grub_cmd_file+0xee4>
     e08:	nop
     e0c:	b	efc <grub_cmd_file+0xee4>
     e10:	nop
     e14:	b	efc <grub_cmd_file+0xee4>
     e18:	nop
     e1c:	b	efc <grub_cmd_file+0xee4>
     e20:	nop
     e24:	b	efc <grub_cmd_file+0xee4>
     e28:	nop
     e2c:	b	efc <grub_cmd_file+0xee4>
     e30:	nop
     e34:	b	efc <grub_cmd_file+0xee4>
     e38:	nop
     e3c:	b	efc <grub_cmd_file+0xee4>
     e40:	nop
     e44:	b	efc <grub_cmd_file+0xee4>
     e48:	nop
     e4c:	b	efc <grub_cmd_file+0xee4>
     e50:	nop
     e54:	b	efc <grub_cmd_file+0xee4>
     e58:	nop
     e5c:	b	efc <grub_cmd_file+0xee4>
     e60:	nop
     e64:	b	efc <grub_cmd_file+0xee4>
     e68:	nop
     e6c:	b	efc <grub_cmd_file+0xee4>
     e70:	nop
     e74:	b	efc <grub_cmd_file+0xee4>
     e78:	nop
     e7c:	b	efc <grub_cmd_file+0xee4>
     e80:	nop
     e84:	b	efc <grub_cmd_file+0xee4>
     e88:	nop
     e8c:	b	efc <grub_cmd_file+0xee4>
     e90:	nop
     e94:	b	efc <grub_cmd_file+0xee4>
     e98:	nop
     e9c:	b	efc <grub_cmd_file+0xee4>
     ea0:	nop
     ea4:	b	efc <grub_cmd_file+0xee4>
     ea8:	nop
     eac:	b	efc <grub_cmd_file+0xee4>
     eb0:	nop
     eb4:	b	efc <grub_cmd_file+0xee4>
     eb8:	nop
     ebc:	b	efc <grub_cmd_file+0xee4>
     ec0:	nop
     ec4:	b	efc <grub_cmd_file+0xee4>
     ec8:	nop
     ecc:	b	efc <grub_cmd_file+0xee4>
     ed0:	nop
     ed4:	b	efc <grub_cmd_file+0xee4>
     ed8:	nop
     edc:	b	efc <grub_cmd_file+0xee4>
     ee0:	nop
     ee4:	b	efc <grub_cmd_file+0xee4>
     ee8:	nop
     eec:	b	efc <grub_cmd_file+0xee4>
     ef0:	nop
     ef4:	b	efc <grub_cmd_file+0xee4>
     ef8:	nop
     efc:	ldr	x0, [sp, #808]
     f00:	cmp	x0, #0x0
     f04:	b.eq	f14 <grub_cmd_file+0xefc>  // b.none
     f08:	ldr	x0, [sp, #808]
     f0c:	bl	0 <grub_elf_close>
     f10:	b	f40 <grub_cmd_file+0xf28>
     f14:	ldr	x0, [sp, #784]
     f18:	cmp	x0, #0x0
     f1c:	b.eq	f2c <grub_cmd_file+0xf14>  // b.none
     f20:	ldr	x0, [sp, #784]
     f24:	bl	0 <grub_macho_close>
     f28:	b	f40 <grub_cmd_file+0xf28>
     f2c:	ldr	x0, [sp, #744]
     f30:	cmp	x0, #0x0
     f34:	b.eq	f40 <grub_cmd_file+0xf28>  // b.none
     f38:	ldr	x0, [sp, #744]
     f3c:	bl	0 <grub_file_close>
     f40:	ldr	w0, [sp, #796]
     f44:	cmp	w0, #0x0
     f48:	b.ne	f90 <grub_cmd_file+0xf78>  // b.any
     f4c:	adrp	x0, 0 <grub_file_size>
     f50:	add	x0, x0, #0x0
     f54:	ldr	x0, [x0]
     f58:	ldr	w0, [x0]
     f5c:	cmp	w0, #0x15
     f60:	b.eq	f7c <grub_cmd_file+0xf64>  // b.none
     f64:	adrp	x0, 0 <grub_file_size>
     f68:	add	x0, x0, #0x0
     f6c:	ldr	x0, [x0]
     f70:	ldr	w0, [x0]
     f74:	cmp	w0, #0x0
     f78:	b.ne	f90 <grub_cmd_file+0xf78>  // b.any
     f7c:	adrp	x0, 0 <grub_file_size>
     f80:	add	x0, x0, #0x0
     f84:	ldr	x1, [x0]
     f88:	mov	w0, #0x1                   	// #1
     f8c:	bl	0 <grub_error>
     f90:	adrp	x0, 0 <grub_file_size>
     f94:	add	x0, x0, #0x0
     f98:	ldr	x0, [x0]
     f9c:	ldr	w0, [x0]
     fa0:	ldp	x29, x30, [sp]
     fa4:	add	sp, sp, #0x330
     fa8:	ret
     fac:	nop
	...

0000000000000ff0 <grub_mod_init>:
     ff0:	stp	x29, x30, [sp, #-32]!
     ff4:	mov	x29, sp
     ff8:	str	x0, [sp, #24]
     ffc:	adrp	x0, 0 <grub_file_size>
    1000:	add	x0, x0, #0x0
    1004:	ldr	x5, [x0]
    1008:	adrp	x0, 0 <grub_file_size>
    100c:	add	x0, x0, #0x0
    1010:	ldr	x4, [x0]
    1014:	adrp	x0, 0 <grub_file_size>
    1018:	add	x0, x0, #0x0
    101c:	ldr	x3, [x0]
    1020:	mov	w2, #0x0                   	// #0
    1024:	adrp	x0, 0 <grub_file_size>
    1028:	add	x0, x0, #0x0
    102c:	ldr	x1, [x0]
    1030:	adrp	x0, 0 <grub_file_size>
    1034:	add	x0, x0, #0x0
    1038:	ldr	x0, [x0]
    103c:	bl	0 <grub_register_extcmd>
    1040:	mov	x1, x0
    1044:	adrp	x0, 0 <grub_file_size>
    1048:	add	x0, x0, #0x0
    104c:	ldr	x0, [x0]
    1050:	str	x1, [x0]
    1054:	nop
    1058:	ldp	x29, x30, [sp], #32
    105c:	ret
	...

0000000000001090 <grub_mod_fini>:
    1090:	stp	x29, x30, [sp, #-16]!
    1094:	mov	x29, sp
    1098:	adrp	x0, 0 <grub_file_size>
    109c:	add	x0, x0, #0x0
    10a0:	ldr	x0, [x0]
    10a4:	ldr	x0, [x0]
    10a8:	bl	0 <grub_unregister_extcmd>
    10ac:	nop
    10b0:	ldp	x29, x30, [sp], #16
    10b4:	ret
	...

00000000000010c0 <grub_file_check_netbsd32>:
    10c0:	stp	x29, x30, [sp, #-112]!
    10c4:	mov	x29, sp
    10c8:	str	x0, [sp, #24]
    10cc:	ldr	x0, [sp, #24]
    10d0:	ldrh	w0, [x0, #56]
    10d4:	and	x0, x0, #0xffff
    10d8:	str	x0, [sp, #96]
    10dc:	ldr	x0, [sp, #24]
    10e0:	ldrh	w0, [x0, #54]
    10e4:	and	x0, x0, #0xffff
    10e8:	str	x0, [sp, #88]
    10ec:	ldr	x1, [sp, #96]
    10f0:	ldr	x0, [sp, #88]
    10f4:	mul	x0, x1, x0
    10f8:	str	x0, [sp, #80]
    10fc:	ldr	x0, [sp, #96]
    1100:	cmp	x0, #0x0
    1104:	b.eq	1114 <grub_file_check_netbsd32+0x54>  // b.none
    1108:	ldr	x0, [sp, #88]
    110c:	cmp	x0, #0x0
    1110:	b.ne	111c <grub_file_check_netbsd32+0x5c>  // b.any
    1114:	mov	w0, #0x0                   	// #0
    1118:	b	12d0 <grub_file_check_netbsd32+0x210>
    111c:	ldr	x0, [sp, #80]
    1120:	bl	0 <grub_malloc>
    1124:	str	x0, [sp, #72]
    1128:	ldr	x0, [sp, #72]
    112c:	cmp	x0, #0x0
    1130:	b.ne	113c <grub_file_check_netbsd32+0x7c>  // b.any
    1134:	mov	w0, #0x0                   	// #0
    1138:	b	12d0 <grub_file_check_netbsd32+0x210>
    113c:	ldr	x0, [sp, #24]
    1140:	ldr	x2, [x0]
    1144:	ldr	x0, [sp, #24]
    1148:	ldr	w0, [x0, #40]
    114c:	mov	w0, w0
    1150:	mov	x1, x0
    1154:	mov	x0, x2
    1158:	bl	0 <grub_file_seek>
    115c:	cmn	x0, #0x1
    1160:	b.eq	12b0 <grub_file_check_netbsd32+0x1f0>  // b.none
    1164:	ldr	x0, [sp, #24]
    1168:	ldr	x0, [x0]
    116c:	ldr	x2, [sp, #80]
    1170:	ldr	x1, [sp, #72]
    1174:	bl	0 <grub_file_read>
    1178:	mov	x1, x0
    117c:	ldr	x0, [sp, #80]
    1180:	cmp	x1, x0
    1184:	b.ne	12b8 <grub_file_check_netbsd32+0x1f8>  // b.any
    1188:	ldr	x0, [sp, #24]
    118c:	ldrh	w0, [x0, #58]
    1190:	and	x1, x0, #0xffff
    1194:	ldr	x0, [sp, #88]
    1198:	mul	x0, x1, x0
    119c:	ldr	x1, [sp, #72]
    11a0:	add	x0, x1, x0
    11a4:	str	x0, [sp, #104]
    11a8:	ldr	x0, [sp, #104]
    11ac:	ldr	w0, [x0, #16]
    11b0:	mov	w0, w0
    11b4:	str	x0, [sp, #64]
    11b8:	ldr	x0, [sp, #72]
    11bc:	str	x0, [sp, #104]
    11c0:	b	128c <grub_file_check_netbsd32+0x1cc>
    11c4:	add	x0, sp, #0x28
    11c8:	mov	x2, #0x13                  	// #19
    11cc:	mov	w1, #0x0                   	// #0
    11d0:	bl	0 <grub_memset>
    11d4:	ldr	x0, [sp, #24]
    11d8:	ldr	x2, [x0]
    11dc:	ldr	x0, [sp, #104]
    11e0:	ldr	w0, [x0]
    11e4:	mov	w1, w0
    11e8:	ldr	x0, [sp, #64]
    11ec:	add	x0, x1, x0
    11f0:	mov	x1, x0
    11f4:	mov	x0, x2
    11f8:	bl	0 <grub_file_seek>
    11fc:	cmn	x0, #0x1
    1200:	b.eq	12c0 <grub_file_check_netbsd32+0x200>  // b.none
    1204:	ldr	x0, [sp, #24]
    1208:	ldr	x0, [x0]
    120c:	add	x1, sp, #0x28
    1210:	mov	x2, #0x13                  	// #19
    1214:	bl	0 <grub_file_read>
    1218:	cmp	x0, #0x13
    121c:	b.eq	123c <grub_file_check_netbsd32+0x17c>  // b.none
    1220:	adrp	x0, 0 <grub_file_size>
    1224:	add	x0, x0, #0x0
    1228:	ldr	x0, [x0]
    122c:	ldr	w0, [x0]
    1230:	cmp	w0, #0x0
    1234:	b.eq	1270 <grub_file_check_netbsd32+0x1b0>  // b.none
    1238:	b	12c4 <grub_file_check_netbsd32+0x204>
    123c:	add	x3, sp, #0x28
    1240:	mov	x2, #0x13                  	// #19
    1244:	adrp	x0, 0 <grub_file_size>
    1248:	add	x0, x0, #0x0
    124c:	ldr	x1, [x0]
    1250:	mov	x0, x3
    1254:	bl	0 <grub_memcmp>
    1258:	cmp	w0, #0x0
    125c:	b.ne	1278 <grub_file_check_netbsd32+0x1b8>  // b.any
    1260:	ldr	x0, [sp, #72]
    1264:	bl	0 <grub_free>
    1268:	mov	w0, #0x1                   	// #1
    126c:	b	12d0 <grub_file_check_netbsd32+0x210>
    1270:	nop
    1274:	b	127c <grub_file_check_netbsd32+0x1bc>
    1278:	nop
    127c:	ldr	x1, [sp, #104]
    1280:	ldr	x0, [sp, #88]
    1284:	add	x0, x1, x0
    1288:	str	x0, [sp, #104]
    128c:	ldr	x1, [sp, #96]
    1290:	ldr	x0, [sp, #88]
    1294:	mul	x0, x1, x0
    1298:	ldr	x1, [sp, #72]
    129c:	add	x0, x1, x0
    12a0:	ldr	x1, [sp, #104]
    12a4:	cmp	x1, x0
    12a8:	b.cc	11c4 <grub_file_check_netbsd32+0x104>  // b.lo, b.ul, b.last
    12ac:	b	12c4 <grub_file_check_netbsd32+0x204>
    12b0:	nop
    12b4:	b	12c4 <grub_file_check_netbsd32+0x204>
    12b8:	nop
    12bc:	b	12c4 <grub_file_check_netbsd32+0x204>
    12c0:	nop
    12c4:	ldr	x0, [sp, #72]
    12c8:	bl	0 <grub_free>
    12cc:	mov	w0, #0x0                   	// #0
    12d0:	ldp	x29, x30, [sp], #112
    12d4:	ret
	...

00000000000012e8 <grub_file_check_netbsd64>:
    12e8:	stp	x29, x30, [sp, #-112]!
    12ec:	mov	x29, sp
    12f0:	str	x0, [sp, #24]
    12f4:	ldr	x0, [sp, #24]
    12f8:	ldrh	w0, [x0, #68]
    12fc:	and	x0, x0, #0xffff
    1300:	str	x0, [sp, #96]
    1304:	ldr	x0, [sp, #24]
    1308:	ldrh	w0, [x0, #66]
    130c:	and	x0, x0, #0xffff
    1310:	str	x0, [sp, #88]
    1314:	ldr	x1, [sp, #96]
    1318:	ldr	x0, [sp, #88]
    131c:	mul	x0, x1, x0
    1320:	str	x0, [sp, #80]
    1324:	ldr	x0, [sp, #96]
    1328:	cmp	x0, #0x0
    132c:	b.eq	133c <grub_file_check_netbsd64+0x54>  // b.none
    1330:	ldr	x0, [sp, #88]
    1334:	cmp	x0, #0x0
    1338:	b.ne	1344 <grub_file_check_netbsd64+0x5c>  // b.any
    133c:	mov	w0, #0x0                   	// #0
    1340:	b	14f0 <grub_file_check_netbsd64+0x208>
    1344:	ldr	x0, [sp, #80]
    1348:	bl	0 <grub_malloc>
    134c:	str	x0, [sp, #72]
    1350:	ldr	x0, [sp, #72]
    1354:	cmp	x0, #0x0
    1358:	b.ne	1364 <grub_file_check_netbsd64+0x7c>  // b.any
    135c:	mov	w0, #0x0                   	// #0
    1360:	b	14f0 <grub_file_check_netbsd64+0x208>
    1364:	ldr	x0, [sp, #24]
    1368:	ldr	x2, [x0]
    136c:	ldr	x0, [sp, #24]
    1370:	ldr	x0, [x0, #48]
    1374:	mov	x1, x0
    1378:	mov	x0, x2
    137c:	bl	0 <grub_file_seek>
    1380:	cmn	x0, #0x1
    1384:	b.eq	14d0 <grub_file_check_netbsd64+0x1e8>  // b.none
    1388:	ldr	x0, [sp, #24]
    138c:	ldr	x0, [x0]
    1390:	ldr	x2, [sp, #80]
    1394:	ldr	x1, [sp, #72]
    1398:	bl	0 <grub_file_read>
    139c:	mov	x1, x0
    13a0:	ldr	x0, [sp, #80]
    13a4:	cmp	x1, x0
    13a8:	b.ne	14d8 <grub_file_check_netbsd64+0x1f0>  // b.any
    13ac:	ldr	x0, [sp, #24]
    13b0:	ldrh	w0, [x0, #70]
    13b4:	and	x1, x0, #0xffff
    13b8:	ldr	x0, [sp, #88]
    13bc:	mul	x0, x1, x0
    13c0:	ldr	x1, [sp, #72]
    13c4:	add	x0, x1, x0
    13c8:	str	x0, [sp, #104]
    13cc:	ldr	x0, [sp, #104]
    13d0:	ldr	x0, [x0, #24]
    13d4:	str	x0, [sp, #64]
    13d8:	ldr	x0, [sp, #72]
    13dc:	str	x0, [sp, #104]
    13e0:	b	14ac <grub_file_check_netbsd64+0x1c4>
    13e4:	add	x0, sp, #0x28
    13e8:	mov	x2, #0x13                  	// #19
    13ec:	mov	w1, #0x0                   	// #0
    13f0:	bl	0 <grub_memset>
    13f4:	ldr	x0, [sp, #24]
    13f8:	ldr	x2, [x0]
    13fc:	ldr	x0, [sp, #104]
    1400:	ldr	w0, [x0]
    1404:	mov	w1, w0
    1408:	ldr	x0, [sp, #64]
    140c:	add	x0, x1, x0
    1410:	mov	x1, x0
    1414:	mov	x0, x2
    1418:	bl	0 <grub_file_seek>
    141c:	cmn	x0, #0x1
    1420:	b.eq	14e0 <grub_file_check_netbsd64+0x1f8>  // b.none
    1424:	ldr	x0, [sp, #24]
    1428:	ldr	x0, [x0]
    142c:	add	x1, sp, #0x28
    1430:	mov	x2, #0x13                  	// #19
    1434:	bl	0 <grub_file_read>
    1438:	cmp	x0, #0x13
    143c:	b.eq	145c <grub_file_check_netbsd64+0x174>  // b.none
    1440:	adrp	x0, 0 <grub_file_size>
    1444:	add	x0, x0, #0x0
    1448:	ldr	x0, [x0]
    144c:	ldr	w0, [x0]
    1450:	cmp	w0, #0x0
    1454:	b.eq	1490 <grub_file_check_netbsd64+0x1a8>  // b.none
    1458:	b	14e4 <grub_file_check_netbsd64+0x1fc>
    145c:	add	x3, sp, #0x28
    1460:	mov	x2, #0x13                  	// #19
    1464:	adrp	x0, 0 <grub_file_size>
    1468:	add	x0, x0, #0x0
    146c:	ldr	x1, [x0]
    1470:	mov	x0, x3
    1474:	bl	0 <grub_memcmp>
    1478:	cmp	w0, #0x0
    147c:	b.ne	1498 <grub_file_check_netbsd64+0x1b0>  // b.any
    1480:	ldr	x0, [sp, #72]
    1484:	bl	0 <grub_free>
    1488:	mov	w0, #0x1                   	// #1
    148c:	b	14f0 <grub_file_check_netbsd64+0x208>
    1490:	nop
    1494:	b	149c <grub_file_check_netbsd64+0x1b4>
    1498:	nop
    149c:	ldr	x1, [sp, #104]
    14a0:	ldr	x0, [sp, #88]
    14a4:	add	x0, x1, x0
    14a8:	str	x0, [sp, #104]
    14ac:	ldr	x1, [sp, #96]
    14b0:	ldr	x0, [sp, #88]
    14b4:	mul	x0, x1, x0
    14b8:	ldr	x1, [sp, #72]
    14bc:	add	x0, x1, x0
    14c0:	ldr	x1, [sp, #104]
    14c4:	cmp	x1, x0
    14c8:	b.cc	13e4 <grub_file_check_netbsd64+0xfc>  // b.lo, b.ul, b.last
    14cc:	b	14e4 <grub_file_check_netbsd64+0x1fc>
    14d0:	nop
    14d4:	b	14e4 <grub_file_check_netbsd64+0x1fc>
    14d8:	nop
    14dc:	b	14e4 <grub_file_check_netbsd64+0x1fc>
    14e0:	nop
    14e4:	ldr	x0, [sp, #72]
    14e8:	bl	0 <grub_free>
    14ec:	mov	w0, #0x0                   	// #0
    14f0:	ldp	x29, x30, [sp], #112
    14f4:	ret
	...

0000000000001508 <grub_xen_file>:
    1508:	sub	sp, sp, #0x2b0
    150c:	stp	x29, x30, [sp]
    1510:	mov	x29, sp
    1514:	str	x0, [sp, #24]
    1518:	ldr	x0, [sp, #24]
    151c:	ldr	x0, [x0]
    1520:	mov	x1, x0
    1524:	ldr	x0, [sp, #24]
    1528:	bl	0 <grub_elf_file>
    152c:	str	x0, [sp, #672]
    1530:	ldr	x0, [sp, #672]
    1534:	cmp	x0, #0x0
    1538:	b.eq	1544 <grub_xen_file+0x3c>  // b.none
    153c:	ldr	x0, [sp, #672]
    1540:	b	1790 <grub_xen_file+0x288>
    1544:	adrp	x0, 0 <grub_file_size>
    1548:	add	x0, x0, #0x0
    154c:	ldr	x0, [x0]
    1550:	str	wzr, [x0]
    1554:	mov	x1, #0x0                   	// #0
    1558:	ldr	x0, [sp, #24]
    155c:	bl	0 <grub_file_seek>
    1560:	cmn	x0, #0x1
    1564:	b.eq	175c <grub_xen_file+0x254>  // b.none
    1568:	add	x0, sp, #0x28
    156c:	mov	x2, #0x268                 	// #616
    1570:	mov	x1, x0
    1574:	ldr	x0, [sp, #24]
    1578:	bl	0 <grub_file_read>
    157c:	cmp	x0, #0x268
    1580:	b.ne	1764 <grub_xen_file+0x25c>  // b.any
    1584:	ldrh	w1, [sp, #550]
    1588:	mov	w0, #0xaa55                	// #43605
    158c:	cmp	w1, w0
    1590:	b.ne	15b8 <grub_xen_file+0xb0>  // b.any
    1594:	add	x0, sp, #0x200
    1598:	ldur	w1, [x0, #42]
    159c:	mov	w0, #0x6448                	// #25672
    15a0:	movk	w0, #0x5372, lsl #16
    15a4:	cmp	w1, w0
    15a8:	b.ne	15b8 <grub_xen_file+0xb0>  // b.any
    15ac:	ldrh	w0, [sp, #558]
    15b0:	cmp	w0, #0x207
    15b4:	b.hi	15d4 <grub_xen_file+0xcc>  // b.pmore
    15b8:	adrp	x0, 0 <grub_file_size>
    15bc:	add	x0, x0, #0x0
    15c0:	ldr	x1, [x0]
    15c4:	mov	w0, #0x15                  	// #21
    15c8:	bl	0 <grub_error>
    15cc:	mov	x0, #0x0                   	// #0
    15d0:	b	1790 <grub_xen_file+0x288>
    15d4:	ldr	w0, [sp, #628]
    15d8:	str	w0, [sp, #684]
    15dc:	ldrb	w0, [sp, #537]
    15e0:	add	w0, w0, #0x1
    15e4:	lsl	w0, w0, #9
    15e8:	mov	w1, w0
    15ec:	ldr	w0, [sp, #624]
    15f0:	add	w0, w1, w0
    15f4:	str	w0, [sp, #668]
    15f8:	ldr	w0, [sp, #684]
    15fc:	cmp	w0, #0x5
    1600:	b.hi	1620 <grub_xen_file+0x118>  // b.pmore
    1604:	adrp	x0, 0 <grub_file_size>
    1608:	add	x0, x0, #0x0
    160c:	ldr	x1, [x0]
    1610:	mov	w0, #0x15                  	// #21
    1614:	bl	0 <grub_error>
    1618:	mov	x0, #0x0                   	// #0
    161c:	b	1790 <grub_xen_file+0x288>
    1620:	ldr	w0, [sp, #668]
    1624:	ldr	w1, [sp, #628]
    1628:	mov	w1, w1
    162c:	mov	x5, x1
    1630:	mov	x4, x0
    1634:	adrp	x0, 0 <grub_file_size>
    1638:	add	x0, x0, #0x0
    163c:	ldr	x3, [x0]
    1640:	adrp	x0, 0 <grub_file_size>
    1644:	add	x0, x0, #0x0
    1648:	ldr	x2, [x0]
    164c:	mov	w1, #0x3f                  	// #63
    1650:	adrp	x0, 0 <grub_file_size>
    1654:	add	x0, x0, #0x0
    1658:	ldr	x0, [x0]
    165c:	bl	0 <grub_real_dprintf>
    1660:	ldr	w0, [sp, #668]
    1664:	mov	x1, x0
    1668:	ldr	x0, [sp, #24]
    166c:	bl	0 <grub_file_seek>
    1670:	add	x0, sp, #0x20
    1674:	mov	x2, #0x6                   	// #6
    1678:	mov	x1, x0
    167c:	ldr	x0, [sp, #24]
    1680:	bl	0 <grub_file_read>
    1684:	cmp	x0, #0x6
    1688:	b.eq	16c8 <grub_xen_file+0x1c0>  // b.none
    168c:	adrp	x0, 0 <grub_file_size>
    1690:	add	x0, x0, #0x0
    1694:	ldr	x0, [x0]
    1698:	ldr	w0, [x0]
    169c:	cmp	w0, #0x0
    16a0:	b.ne	176c <grub_xen_file+0x264>  // b.any
    16a4:	ldr	x0, [sp, #24]
    16a8:	ldr	x0, [x0]
    16ac:	mov	x2, x0
    16b0:	adrp	x0, 0 <grub_file_size>
    16b4:	add	x0, x0, #0x0
    16b8:	ldr	x1, [x0]
    16bc:	mov	w0, #0x15                  	// #21
    16c0:	bl	0 <grub_error>
    16c4:	b	176c <grub_xen_file+0x264>
    16c8:	add	x3, sp, #0x20
    16cc:	mov	x2, #0x6                   	// #6
    16d0:	adrp	x0, 0 <grub_file_size>
    16d4:	add	x0, x0, #0x0
    16d8:	ldr	x1, [x0]
    16dc:	mov	x0, x3
    16e0:	bl	0 <grub_memcmp>
    16e4:	cmp	w0, #0x0
    16e8:	b.ne	16f8 <grub_xen_file+0x1f0>  // b.any
    16ec:	ldr	w0, [sp, #684]
    16f0:	sub	w0, w0, #0x4
    16f4:	str	w0, [sp, #684]
    16f8:	ldr	w0, [sp, #668]
    16fc:	ldr	w1, [sp, #684]
    1700:	mov	x3, x1
    1704:	mov	x2, x0
    1708:	mov	w1, #0x3                   	// #3
    170c:	ldr	x0, [sp, #24]
    1710:	bl	0 <grub_file_offset_open>
    1714:	str	x0, [sp, #656]
    1718:	ldr	x0, [sp, #656]
    171c:	cmp	x0, #0x0
    1720:	b.eq	1774 <grub_xen_file+0x26c>  // b.none
    1724:	ldr	x0, [sp, #24]
    1728:	ldr	x0, [x0]
    172c:	mov	x1, x0
    1730:	ldr	x0, [sp, #656]
    1734:	bl	0 <grub_elf_file>
    1738:	str	x0, [sp, #672]
    173c:	ldr	x0, [sp, #672]
    1740:	cmp	x0, #0x0
    1744:	b.eq	1750 <grub_xen_file+0x248>  // b.none
    1748:	ldr	x0, [sp, #672]
    174c:	b	1790 <grub_xen_file+0x288>
    1750:	ldr	x0, [sp, #656]
    1754:	bl	0 <grub_file_offset_close>
    1758:	b	1778 <grub_xen_file+0x270>
    175c:	nop
    1760:	b	1778 <grub_xen_file+0x270>
    1764:	nop
    1768:	b	1778 <grub_xen_file+0x270>
    176c:	nop
    1770:	b	1778 <grub_xen_file+0x270>
    1774:	nop
    1778:	adrp	x0, 0 <grub_file_size>
    177c:	add	x0, x0, #0x0
    1780:	ldr	x1, [x0]
    1784:	mov	w0, #0x15                  	// #21
    1788:	bl	0 <grub_error>
    178c:	mov	x0, #0x0                   	// #0
    1790:	ldp	x29, x30, [sp]
    1794:	add	sp, sp, #0x2b0
    1798:	ret
    179c:	nop
	...

00000000000017e8 <grub_xen_get_info>:
    17e8:	stp	x29, x30, [sp, #-32]!
    17ec:	mov	x29, sp
    17f0:	str	x0, [sp, #24]
    17f4:	str	x1, [sp, #16]
    17f8:	mov	x2, #0x58                  	// #88
    17fc:	mov	w1, #0x0                   	// #0
    1800:	ldr	x0, [sp, #16]
    1804:	bl	0 <grub_memset>
    1808:	ldr	x0, [sp, #24]
    180c:	bl	0 <grub_elf_is_elf64>
    1810:	cmp	w0, #0x0
    1814:	b.eq	1854 <grub_xen_get_info+0x6c>  // b.none
    1818:	ldr	x0, [sp, #24]
    181c:	ldrh	w0, [x0, #26]
    1820:	cmp	w0, #0x3e
    1824:	b.ne	1854 <grub_xen_get_info+0x6c>  // b.any
    1828:	ldr	x0, [sp, #24]
    182c:	ldrb	w0, [x0, #13]
    1830:	cmp	w0, #0x1
    1834:	b.ne	1854 <grub_xen_get_info+0x6c>  // b.any
    1838:	ldr	x0, [sp, #16]
    183c:	mov	w1, #0x4                   	// #4
    1840:	str	w1, [x0, #80]
    1844:	ldr	x1, [sp, #16]
    1848:	ldr	x0, [sp, #24]
    184c:	bl	39c8 <grub_xen_get_info64>
    1850:	b	18b4 <grub_xen_get_info+0xcc>
    1854:	ldr	x0, [sp, #24]
    1858:	bl	0 <grub_elf_is_elf32>
    185c:	cmp	w0, #0x0
    1860:	b.eq	18a0 <grub_xen_get_info+0xb8>  // b.none
    1864:	ldr	x0, [sp, #24]
    1868:	ldrh	w0, [x0, #26]
    186c:	cmp	w0, #0x3
    1870:	b.ne	18a0 <grub_xen_get_info+0xb8>  // b.any
    1874:	ldr	x0, [sp, #24]
    1878:	ldrb	w0, [x0, #13]
    187c:	cmp	w0, #0x1
    1880:	b.ne	18a0 <grub_xen_get_info+0xb8>  // b.any
    1884:	ldr	x0, [sp, #16]
    1888:	mov	w1, #0x1                   	// #1
    188c:	str	w1, [x0, #80]
    1890:	ldr	x1, [sp, #16]
    1894:	ldr	x0, [sp, #24]
    1898:	bl	26b0 <grub_xen_get_info32>
    189c:	b	18b4 <grub_xen_get_info+0xcc>
    18a0:	adrp	x0, 0 <grub_file_size>
    18a4:	add	x0, x0, #0x0
    18a8:	ldr	x1, [x0]
    18ac:	mov	w0, #0x15                  	// #21
    18b0:	bl	0 <grub_error>
    18b4:	ldp	x29, x30, [sp], #32
    18b8:	ret
    18bc:	nop
	...

00000000000018c8 <parse_xen_guest>:
    18c8:	stp	x29, x30, [sp, #-80]!
    18cc:	mov	x29, sp
    18d0:	str	x0, [sp, #40]
    18d4:	str	x1, [sp, #32]
    18d8:	str	x2, [sp, #24]
    18dc:	str	x3, [sp, #16]
    18e0:	str	wzr, [sp, #76]
    18e4:	adrp	x0, 0 <grub_file_size>
    18e8:	add	x0, x0, #0x0
    18ec:	ldr	x0, [x0]
    18f0:	str	wzr, [x0]
    18f4:	ldr	x0, [sp, #40]
    18f8:	ldr	x0, [x0]
    18fc:	ldr	x1, [sp, #24]
    1900:	bl	0 <grub_file_seek>
    1904:	cmn	x0, #0x1
    1908:	b.ne	1920 <parse_xen_guest+0x58>  // b.any
    190c:	adrp	x0, 0 <grub_file_size>
    1910:	add	x0, x0, #0x0
    1914:	ldr	x0, [x0]
    1918:	ldr	w0, [x0]
    191c:	b	1f58 <parse_xen_guest+0x690>
    1920:	ldr	x0, [sp, #16]
    1924:	bl	0 <grub_malloc>
    1928:	str	x0, [sp, #64]
    192c:	ldr	x0, [sp, #64]
    1930:	cmp	x0, #0x0
    1934:	b.ne	194c <parse_xen_guest+0x84>  // b.any
    1938:	adrp	x0, 0 <grub_file_size>
    193c:	add	x0, x0, #0x0
    1940:	ldr	x0, [x0]
    1944:	ldr	w0, [x0]
    1948:	b	1f58 <parse_xen_guest+0x690>
    194c:	ldr	x0, [sp, #40]
    1950:	ldr	x0, [x0]
    1954:	ldr	x2, [sp, #16]
    1958:	ldr	x1, [sp, #64]
    195c:	bl	0 <grub_file_read>
    1960:	mov	x1, x0
    1964:	ldr	x0, [sp, #16]
    1968:	cmp	x1, x0
    196c:	b.eq	19b8 <parse_xen_guest+0xf0>  // b.none
    1970:	adrp	x0, 0 <grub_file_size>
    1974:	add	x0, x0, #0x0
    1978:	ldr	x0, [x0]
    197c:	ldr	w0, [x0]
    1980:	cmp	w0, #0x0
    1984:	b.ne	1f2c <parse_xen_guest+0x664>  // b.any
    1988:	ldr	x0, [sp, #64]
    198c:	bl	0 <grub_free>
    1990:	ldr	x0, [sp, #40]
    1994:	ldr	x0, [x0]
    1998:	ldr	x0, [x0]
    199c:	mov	x2, x0
    19a0:	adrp	x0, 0 <grub_file_size>
    19a4:	add	x0, x0, #0x0
    19a8:	ldr	x1, [x0]
    19ac:	mov	w0, #0x15                  	// #21
    19b0:	bl	0 <grub_error>
    19b4:	b	1f58 <parse_xen_guest+0x690>
    19b8:	ldr	x0, [sp, #32]
    19bc:	mov	w1, #0x1                   	// #1
    19c0:	str	w1, [x0, #64]
    19c4:	ldr	x0, [sp, #64]
    19c8:	str	x0, [sp, #56]
    19cc:	b	1eb8 <parse_xen_guest+0x5f0>
    19d0:	ldr	x3, [sp, #56]
    19d4:	mov	x2, #0x7                   	// #7
    19d8:	adrp	x0, 0 <grub_file_size>
    19dc:	add	x0, x0, #0x0
    19e0:	ldr	x1, [x0]
    19e4:	mov	x0, x3
    19e8:	bl	0 <grub_strncmp>
    19ec:	cmp	w0, #0x0
    19f0:	b.ne	1a34 <parse_xen_guest+0x16c>  // b.any
    19f4:	ldr	x0, [sp, #32]
    19f8:	ldr	w0, [x0, #80]
    19fc:	cmp	w0, #0x1
    1a00:	b.eq	1a24 <parse_xen_guest+0x15c>  // b.none
    1a04:	ldr	x0, [sp, #32]
    1a08:	ldr	w0, [x0, #80]
    1a0c:	cmp	w0, #0x2
    1a10:	b.eq	1a24 <parse_xen_guest+0x15c>  // b.none
    1a14:	ldr	x0, [sp, #32]
    1a18:	ldr	w0, [x0, #80]
    1a1c:	cmp	w0, #0x3
    1a20:	b.ne	1e44 <parse_xen_guest+0x57c>  // b.any
    1a24:	ldr	x0, [sp, #32]
    1a28:	mov	w1, #0x1                   	// #1
    1a2c:	str	w1, [x0, #80]
    1a30:	b	1e90 <parse_xen_guest+0x5c8>
    1a34:	ldr	x3, [sp, #56]
    1a38:	mov	x2, #0x8                   	// #8
    1a3c:	adrp	x0, 0 <grub_file_size>
    1a40:	add	x0, x0, #0x0
    1a44:	ldr	x1, [x0]
    1a48:	mov	x0, x3
    1a4c:	bl	0 <grub_strncmp>
    1a50:	cmp	w0, #0x0
    1a54:	b.ne	1a98 <parse_xen_guest+0x1d0>  // b.any
    1a58:	ldr	x0, [sp, #32]
    1a5c:	ldr	w0, [x0, #80]
    1a60:	cmp	w0, #0x1
    1a64:	b.eq	1a88 <parse_xen_guest+0x1c0>  // b.none
    1a68:	ldr	x0, [sp, #32]
    1a6c:	ldr	w0, [x0, #80]
    1a70:	cmp	w0, #0x2
    1a74:	b.eq	1a88 <parse_xen_guest+0x1c0>  // b.none
    1a78:	ldr	x0, [sp, #32]
    1a7c:	ldr	w0, [x0, #80]
    1a80:	cmp	w0, #0x3
    1a84:	b.ne	1e4c <parse_xen_guest+0x584>  // b.any
    1a88:	ldr	x0, [sp, #32]
    1a8c:	mov	w1, #0x2                   	// #2
    1a90:	str	w1, [x0, #80]
    1a94:	b	1e90 <parse_xen_guest+0x5c8>
    1a98:	ldr	x3, [sp, #56]
    1a9c:	mov	x2, #0x16                  	// #22
    1aa0:	adrp	x0, 0 <grub_file_size>
    1aa4:	add	x0, x0, #0x0
    1aa8:	ldr	x1, [x0]
    1aac:	mov	x0, x3
    1ab0:	bl	0 <grub_strncmp>
    1ab4:	cmp	w0, #0x0
    1ab8:	b.ne	1b08 <parse_xen_guest+0x240>  // b.any
    1abc:	ldr	x0, [sp, #32]
    1ac0:	ldr	w0, [x0, #80]
    1ac4:	cmp	w0, #0x1
    1ac8:	b.eq	1aec <parse_xen_guest+0x224>  // b.none
    1acc:	ldr	x0, [sp, #32]
    1ad0:	ldr	w0, [x0, #80]
    1ad4:	cmp	w0, #0x2
    1ad8:	b.eq	1aec <parse_xen_guest+0x224>  // b.none
    1adc:	ldr	x0, [sp, #32]
    1ae0:	ldr	w0, [x0, #80]
    1ae4:	cmp	w0, #0x3
    1ae8:	b.ne	1e54 <parse_xen_guest+0x58c>  // b.any
    1aec:	ldr	x0, [sp, #32]
    1af0:	mov	w1, #0x2                   	// #2
    1af4:	str	w1, [x0, #80]
    1af8:	ldr	x0, [sp, #32]
    1afc:	mov	w1, #0x1                   	// #1
    1b00:	str	w1, [x0, #72]
    1b04:	b	1e90 <parse_xen_guest+0x5c8>
    1b08:	ldr	x3, [sp, #56]
    1b0c:	mov	x2, #0xc                   	// #12
    1b10:	adrp	x0, 0 <grub_file_size>
    1b14:	add	x0, x0, #0x0
    1b18:	ldr	x1, [x0]
    1b1c:	mov	x0, x3
    1b20:	bl	0 <grub_strncmp>
    1b24:	cmp	w0, #0x0
    1b28:	b.ne	1b6c <parse_xen_guest+0x2a4>  // b.any
    1b2c:	ldr	x0, [sp, #32]
    1b30:	ldr	w0, [x0, #80]
    1b34:	cmp	w0, #0x1
    1b38:	b.eq	1b5c <parse_xen_guest+0x294>  // b.none
    1b3c:	ldr	x0, [sp, #32]
    1b40:	ldr	w0, [x0, #80]
    1b44:	cmp	w0, #0x2
    1b48:	b.eq	1b5c <parse_xen_guest+0x294>  // b.none
    1b4c:	ldr	x0, [sp, #32]
    1b50:	ldr	w0, [x0, #80]
    1b54:	cmp	w0, #0x3
    1b58:	b.ne	1e5c <parse_xen_guest+0x594>  // b.any
    1b5c:	ldr	x0, [sp, #32]
    1b60:	mov	w1, #0x3                   	// #3
    1b64:	str	w1, [x0, #80]
    1b68:	b	1e90 <parse_xen_guest+0x5c8>
    1b6c:	ldr	x3, [sp, #56]
    1b70:	mov	x2, #0x1a                  	// #26
    1b74:	adrp	x0, 0 <grub_file_size>
    1b78:	add	x0, x0, #0x0
    1b7c:	ldr	x1, [x0]
    1b80:	mov	x0, x3
    1b84:	bl	0 <grub_strncmp>
    1b88:	cmp	w0, #0x0
    1b8c:	b.ne	1bdc <parse_xen_guest+0x314>  // b.any
    1b90:	ldr	x0, [sp, #32]
    1b94:	ldr	w0, [x0, #80]
    1b98:	cmp	w0, #0x1
    1b9c:	b.eq	1bc0 <parse_xen_guest+0x2f8>  // b.none
    1ba0:	ldr	x0, [sp, #32]
    1ba4:	ldr	w0, [x0, #80]
    1ba8:	cmp	w0, #0x2
    1bac:	b.eq	1bc0 <parse_xen_guest+0x2f8>  // b.none
    1bb0:	ldr	x0, [sp, #32]
    1bb4:	ldr	w0, [x0, #80]
    1bb8:	cmp	w0, #0x3
    1bbc:	b.ne	1e64 <parse_xen_guest+0x59c>  // b.any
    1bc0:	ldr	x0, [sp, #32]
    1bc4:	mov	w1, #0x3                   	// #3
    1bc8:	str	w1, [x0, #80]
    1bcc:	ldr	x0, [sp, #32]
    1bd0:	mov	w1, #0x1                   	// #1
    1bd4:	str	w1, [x0, #72]
    1bd8:	b	1e90 <parse_xen_guest+0x5c8>
    1bdc:	ldr	x3, [sp, #56]
    1be0:	mov	x2, #0x10                  	// #16
    1be4:	adrp	x0, 0 <grub_file_size>
    1be8:	add	x0, x0, #0x0
    1bec:	ldr	x1, [x0]
    1bf0:	mov	x0, x3
    1bf4:	bl	0 <grub_strncmp>
    1bf8:	cmp	w0, #0x0
    1bfc:	b.ne	1c40 <parse_xen_guest+0x378>  // b.any
    1c00:	ldr	x0, [sp, #32]
    1c04:	ldr	w0, [x0, #80]
    1c08:	cmp	w0, #0x1
    1c0c:	b.eq	1c30 <parse_xen_guest+0x368>  // b.none
    1c10:	ldr	x0, [sp, #32]
    1c14:	ldr	w0, [x0, #80]
    1c18:	cmp	w0, #0x2
    1c1c:	b.eq	1c30 <parse_xen_guest+0x368>  // b.none
    1c20:	ldr	x0, [sp, #32]
    1c24:	ldr	w0, [x0, #80]
    1c28:	cmp	w0, #0x3
    1c2c:	b.ne	1e6c <parse_xen_guest+0x5a4>  // b.any
    1c30:	ldr	x0, [sp, #32]
    1c34:	mov	w1, #0x3                   	// #3
    1c38:	str	w1, [x0, #80]
    1c3c:	b	1e90 <parse_xen_guest+0x5c8>
    1c40:	ldr	x3, [sp, #56]
    1c44:	mov	x2, #0x1e                  	// #30
    1c48:	adrp	x0, 0 <grub_file_size>
    1c4c:	add	x0, x0, #0x0
    1c50:	ldr	x1, [x0]
    1c54:	mov	x0, x3
    1c58:	bl	0 <grub_strncmp>
    1c5c:	cmp	w0, #0x0
    1c60:	b.ne	1cb0 <parse_xen_guest+0x3e8>  // b.any
    1c64:	ldr	x0, [sp, #32]
    1c68:	ldr	w0, [x0, #80]
    1c6c:	cmp	w0, #0x1
    1c70:	b.eq	1c94 <parse_xen_guest+0x3cc>  // b.none
    1c74:	ldr	x0, [sp, #32]
    1c78:	ldr	w0, [x0, #80]
    1c7c:	cmp	w0, #0x2
    1c80:	b.eq	1c94 <parse_xen_guest+0x3cc>  // b.none
    1c84:	ldr	x0, [sp, #32]
    1c88:	ldr	w0, [x0, #80]
    1c8c:	cmp	w0, #0x3
    1c90:	b.ne	1e74 <parse_xen_guest+0x5ac>  // b.any
    1c94:	ldr	x0, [sp, #32]
    1c98:	mov	w1, #0x3                   	// #3
    1c9c:	str	w1, [x0, #80]
    1ca0:	ldr	x0, [sp, #32]
    1ca4:	mov	w1, #0x1                   	// #1
    1ca8:	str	w1, [x0, #72]
    1cac:	b	1e90 <parse_xen_guest+0x5c8>
    1cb0:	ldr	x3, [sp, #56]
    1cb4:	mov	x2, #0xa                   	// #10
    1cb8:	adrp	x0, 0 <grub_file_size>
    1cbc:	add	x0, x0, #0x0
    1cc0:	ldr	x1, [x0]
    1cc4:	mov	x0, x3
    1cc8:	bl	0 <grub_strncmp>
    1ccc:	cmp	w0, #0x0
    1cd0:	b.ne	1d10 <parse_xen_guest+0x448>  // b.any
    1cd4:	ldr	x0, [sp, #56]
    1cd8:	add	x0, x0, #0xa
    1cdc:	add	x1, sp, #0x38
    1ce0:	mov	w2, #0x10                  	// #16
    1ce4:	bl	0 <grub_strtoull>
    1ce8:	mov	x1, x0
    1cec:	ldr	x0, [sp, #32]
    1cf0:	str	x1, [x0, #16]
    1cf4:	adrp	x0, 0 <grub_file_size>
    1cf8:	add	x0, x0, #0x0
    1cfc:	ldr	x0, [x0]
    1d00:	ldr	w0, [x0]
    1d04:	cmp	w0, #0x0
    1d08:	b.eq	1e7c <parse_xen_guest+0x5b4>  // b.none
    1d0c:	b	1f40 <parse_xen_guest+0x678>
    1d10:	ldr	x3, [sp, #56]
    1d14:	mov	x2, #0xb                   	// #11
    1d18:	adrp	x0, 0 <grub_file_size>
    1d1c:	add	x0, x0, #0x0
    1d20:	ldr	x1, [x0]
    1d24:	mov	x0, x3
    1d28:	bl	0 <grub_strncmp>
    1d2c:	cmp	w0, #0x0
    1d30:	b.ne	1d70 <parse_xen_guest+0x4a8>  // b.any
    1d34:	ldr	x0, [sp, #56]
    1d38:	add	x0, x0, #0xb
    1d3c:	add	x1, sp, #0x38
    1d40:	mov	w2, #0x10                  	// #16
    1d44:	bl	0 <grub_strtoull>
    1d48:	mov	x1, x0
    1d4c:	ldr	x0, [sp, #32]
    1d50:	str	x1, [x0, #24]
    1d54:	adrp	x0, 0 <grub_file_size>
    1d58:	add	x0, x0, #0x0
    1d5c:	ldr	x0, [x0]
    1d60:	ldr	w0, [x0]
    1d64:	cmp	w0, #0x0
    1d68:	b.eq	1e84 <parse_xen_guest+0x5bc>  // b.none
    1d6c:	b	1f40 <parse_xen_guest+0x678>
    1d70:	ldr	x3, [sp, #56]
    1d74:	mov	x2, #0xf                   	// #15
    1d78:	adrp	x0, 0 <grub_file_size>
    1d7c:	add	x0, x0, #0x0
    1d80:	ldr	x1, [x0]
    1d84:	mov	x0, x3
    1d88:	bl	0 <grub_strncmp>
    1d8c:	cmp	w0, #0x0
    1d90:	b.ne	1ddc <parse_xen_guest+0x514>  // b.any
    1d94:	ldr	x0, [sp, #56]
    1d98:	add	x0, x0, #0xf
    1d9c:	add	x1, sp, #0x38
    1da0:	mov	w2, #0x10                  	// #16
    1da4:	bl	0 <grub_strtoull>
    1da8:	mov	x1, x0
    1dac:	ldr	x0, [sp, #32]
    1db0:	str	x1, [x0, #32]
    1db4:	ldr	x0, [sp, #32]
    1db8:	mov	w1, #0x1                   	// #1
    1dbc:	str	w1, [x0, #56]
    1dc0:	adrp	x0, 0 <grub_file_size>
    1dc4:	add	x0, x0, #0x0
    1dc8:	ldr	x0, [x0]
    1dcc:	ldr	w0, [x0]
    1dd0:	cmp	w0, #0x0
    1dd4:	b.eq	1e8c <parse_xen_guest+0x5c4>  // b.none
    1dd8:	b	1f40 <parse_xen_guest+0x678>
    1ddc:	ldr	x3, [sp, #56]
    1de0:	mov	x2, #0x11                  	// #17
    1de4:	adrp	x0, 0 <grub_file_size>
    1de8:	add	x0, x0, #0x0
    1dec:	ldr	x1, [x0]
    1df0:	mov	x0, x3
    1df4:	bl	0 <grub_strncmp>
    1df8:	cmp	w0, #0x0
    1dfc:	b.ne	1e90 <parse_xen_guest+0x5c8>  // b.any
    1e00:	ldr	x0, [sp, #56]
    1e04:	add	x0, x0, #0x11
    1e08:	add	x1, sp, #0x38
    1e0c:	mov	w2, #0x10                  	// #16
    1e10:	bl	0 <grub_strtoull>
    1e14:	mov	x1, x0
    1e18:	ldr	x0, [sp, #32]
    1e1c:	str	x1, [x0, #40]
    1e20:	mov	w0, #0x1                   	// #1
    1e24:	str	w0, [sp, #76]
    1e28:	adrp	x0, 0 <grub_file_size>
    1e2c:	add	x0, x0, #0x0
    1e30:	ldr	x0, [x0]
    1e34:	ldr	w0, [x0]
    1e38:	cmp	w0, #0x0
    1e3c:	b.ne	1f34 <parse_xen_guest+0x66c>  // b.any
    1e40:	b	1e90 <parse_xen_guest+0x5c8>
    1e44:	nop
    1e48:	b	1e90 <parse_xen_guest+0x5c8>
    1e4c:	nop
    1e50:	b	1e90 <parse_xen_guest+0x5c8>
    1e54:	nop
    1e58:	b	1e90 <parse_xen_guest+0x5c8>
    1e5c:	nop
    1e60:	b	1e90 <parse_xen_guest+0x5c8>
    1e64:	nop
    1e68:	b	1e90 <parse_xen_guest+0x5c8>
    1e6c:	nop
    1e70:	b	1e90 <parse_xen_guest+0x5c8>
    1e74:	nop
    1e78:	b	1e90 <parse_xen_guest+0x5c8>
    1e7c:	nop
    1e80:	b	1e90 <parse_xen_guest+0x5c8>
    1e84:	nop
    1e88:	b	1e90 <parse_xen_guest+0x5c8>
    1e8c:	nop
    1e90:	ldr	x0, [sp, #56]
    1e94:	mov	w1, #0x2c                  	// #44
    1e98:	bl	0 <grub_strchr>
    1e9c:	str	x0, [sp, #56]
    1ea0:	ldr	x0, [sp, #56]
    1ea4:	cmp	x0, #0x0
    1ea8:	b.eq	1eb8 <parse_xen_guest+0x5f0>  // b.none
    1eac:	ldr	x0, [sp, #56]
    1eb0:	add	x0, x0, #0x1
    1eb4:	str	x0, [sp, #56]
    1eb8:	ldr	x0, [sp, #56]
    1ebc:	cmp	x0, #0x0
    1ec0:	b.eq	1edc <parse_xen_guest+0x614>  // b.none
    1ec4:	ldr	x1, [sp, #56]
    1ec8:	ldr	x0, [sp, #64]
    1ecc:	sub	x1, x1, x0
    1ed0:	ldr	x0, [sp, #16]
    1ed4:	cmp	x1, x0
    1ed8:	b.lt	19d0 <parse_xen_guest+0x108>  // b.tstop
    1edc:	ldr	x0, [sp, #32]
    1ee0:	ldr	w0, [x0, #56]
    1ee4:	cmp	w0, #0x0
    1ee8:	b.eq	1f0c <parse_xen_guest+0x644>  // b.none
    1eec:	ldr	x0, [sp, #32]
    1ef0:	ldr	x0, [x0, #32]
    1ef4:	lsl	x1, x0, #12
    1ef8:	ldr	x0, [sp, #32]
    1efc:	ldr	x0, [x0, #16]
    1f00:	add	x1, x1, x0
    1f04:	ldr	x0, [sp, #32]
    1f08:	str	x1, [x0, #32]
    1f0c:	ldr	w0, [sp, #76]
    1f10:	cmp	w0, #0x0
    1f14:	b.ne	1f3c <parse_xen_guest+0x674>  // b.any
    1f18:	ldr	x0, [sp, #32]
    1f1c:	ldr	x1, [x0, #16]
    1f20:	ldr	x0, [sp, #32]
    1f24:	str	x1, [x0, #40]
    1f28:	b	1f40 <parse_xen_guest+0x678>
    1f2c:	nop
    1f30:	b	1f40 <parse_xen_guest+0x678>
    1f34:	nop
    1f38:	b	1f40 <parse_xen_guest+0x678>
    1f3c:	nop
    1f40:	ldr	x0, [sp, #64]
    1f44:	bl	0 <grub_free>
    1f48:	adrp	x0, 0 <grub_file_size>
    1f4c:	add	x0, x0, #0x0
    1f50:	ldr	x0, [x0]
    1f54:	ldr	w0, [x0]
    1f58:	ldp	x29, x30, [sp], #80
    1f5c:	ret
	...

0000000000001fc8 <parse_note>:
    1fc8:	stp	x29, x30, [sp, #-96]!
    1fcc:	mov	x29, sp
    1fd0:	str	x0, [sp, #40]
    1fd4:	str	x1, [sp, #32]
    1fd8:	str	x2, [sp, #24]
    1fdc:	str	x3, [sp, #16]
    1fe0:	ldr	x0, [sp, #40]
    1fe4:	ldr	x0, [x0]
    1fe8:	ldr	x1, [sp, #24]
    1fec:	bl	0 <grub_file_seek>
    1ff0:	cmn	x0, #0x1
    1ff4:	b.ne	200c <parse_note+0x44>  // b.any
    1ff8:	adrp	x0, 0 <grub_file_size>
    1ffc:	add	x0, x0, #0x0
    2000:	ldr	x0, [x0]
    2004:	ldr	w0, [x0]
    2008:	b	2628 <parse_note+0x660>
    200c:	ldr	x0, [sp, #16]
    2010:	bl	0 <grub_malloc>
    2014:	str	x0, [sp, #80]
    2018:	ldr	x0, [sp, #80]
    201c:	cmp	x0, #0x0
    2020:	b.ne	2038 <parse_note+0x70>  // b.any
    2024:	adrp	x0, 0 <grub_file_size>
    2028:	add	x0, x0, #0x0
    202c:	ldr	x0, [x0]
    2030:	ldr	w0, [x0]
    2034:	b	2628 <parse_note+0x660>
    2038:	ldr	x0, [sp, #40]
    203c:	ldr	x0, [x0]
    2040:	ldr	x2, [sp, #16]
    2044:	ldr	x1, [sp, #80]
    2048:	bl	0 <grub_file_read>
    204c:	mov	x1, x0
    2050:	ldr	x0, [sp, #16]
    2054:	cmp	x1, x0
    2058:	b.eq	20b0 <parse_note+0xe8>  // b.none
    205c:	adrp	x0, 0 <grub_file_size>
    2060:	add	x0, x0, #0x0
    2064:	ldr	x0, [x0]
    2068:	ldr	w0, [x0]
    206c:	cmp	w0, #0x0
    2070:	b.eq	2088 <parse_note+0xc0>  // b.none
    2074:	adrp	x0, 0 <grub_file_size>
    2078:	add	x0, x0, #0x0
    207c:	ldr	x0, [x0]
    2080:	ldr	w0, [x0]
    2084:	b	2628 <parse_note+0x660>
    2088:	ldr	x0, [sp, #40]
    208c:	ldr	x0, [x0]
    2090:	ldr	x0, [x0]
    2094:	mov	x2, x0
    2098:	adrp	x0, 0 <grub_file_size>
    209c:	add	x0, x0, #0x0
    20a0:	ldr	x1, [x0]
    20a4:	mov	w0, #0x15                  	// #21
    20a8:	bl	0 <grub_error>
    20ac:	b	2628 <parse_note+0x660>
    20b0:	ldr	x0, [sp, #80]
    20b4:	str	x0, [sp, #88]
    20b8:	b	2600 <parse_note+0x638>
    20bc:	ldr	x0, [sp, #88]
    20c0:	str	x0, [sp, #72]
    20c4:	ldr	x0, [sp, #88]
    20c8:	add	x0, x0, #0xc
    20cc:	str	x0, [sp, #88]
    20d0:	ldr	x0, [sp, #88]
    20d4:	str	x0, [sp, #64]
    20d8:	ldr	x0, [sp, #72]
    20dc:	ldr	w0, [x0]
    20e0:	str	w0, [sp, #60]
    20e4:	ldr	x0, [sp, #72]
    20e8:	ldr	w0, [x0, #4]
    20ec:	str	w0, [sp, #56]
    20f0:	ldr	w0, [sp, #60]
    20f4:	add	w0, w0, #0x3
    20f8:	lsr	w0, w0, #2
    20fc:	mov	w0, w0
    2100:	lsl	x0, x0, #2
    2104:	ldr	x1, [sp, #88]
    2108:	add	x0, x1, x0
    210c:	str	x0, [sp, #88]
    2110:	ldr	x0, [sp, #88]
    2114:	str	x0, [sp, #48]
    2118:	ldr	x0, [sp, #72]
    211c:	ldr	w0, [x0, #4]
    2120:	add	w0, w0, #0x3
    2124:	lsr	w0, w0, #2
    2128:	mov	w0, w0
    212c:	lsl	x0, x0, #2
    2130:	ldr	x1, [sp, #88]
    2134:	add	x0, x1, x0
    2138:	str	x0, [sp, #88]
    213c:	ldr	w0, [sp, #60]
    2140:	cmp	w0, #0x2
    2144:	b.ls	2600 <parse_note+0x638>  // b.plast
    2148:	ldr	w0, [sp, #60]
    214c:	cmp	w0, #0x3
    2150:	b.ne	215c <parse_note+0x194>  // b.any
    2154:	mov	x0, #0x3                   	// #3
    2158:	b	2160 <parse_note+0x198>
    215c:	mov	x0, #0x4                   	// #4
    2160:	mov	x2, x0
    2164:	adrp	x0, 0 <grub_file_size>
    2168:	add	x0, x0, #0x0
    216c:	ldr	x1, [x0]
    2170:	ldr	x0, [sp, #64]
    2174:	bl	0 <grub_memcmp>
    2178:	cmp	w0, #0x0
    217c:	b.eq	2184 <parse_note+0x1bc>  // b.none
    2180:	b	2600 <parse_note+0x638>
    2184:	ldr	x0, [sp, #32]
    2188:	mov	w1, #0x1                   	// #1
    218c:	str	w1, [x0, #60]
    2190:	ldr	x0, [sp, #72]
    2194:	ldr	w0, [x0, #8]
    2198:	cmp	w0, #0x10
    219c:	b.eq	25a0 <parse_note+0x5d8>  // b.none
    21a0:	cmp	w0, #0x10
    21a4:	b.hi	25c4 <parse_note+0x5fc>  // b.pmore
    21a8:	cmp	w0, #0xf
    21ac:	b.eq	257c <parse_note+0x5b4>  // b.none
    21b0:	cmp	w0, #0xf
    21b4:	b.hi	25c4 <parse_note+0x5fc>  // b.pmore
    21b8:	cmp	w0, #0x9
    21bc:	b.eq	23a0 <parse_note+0x3d8>  // b.none
    21c0:	cmp	w0, #0x9
    21c4:	b.hi	25c4 <parse_note+0x5fc>  // b.pmore
    21c8:	cmp	w0, #0x8
    21cc:	b.eq	2344 <parse_note+0x37c>  // b.none
    21d0:	cmp	w0, #0x8
    21d4:	b.hi	25c4 <parse_note+0x5fc>  // b.pmore
    21d8:	cmp	w0, #0x7
    21dc:	b.eq	2310 <parse_note+0x348>  // b.none
    21e0:	cmp	w0, #0x7
    21e4:	b.hi	25c4 <parse_note+0x5fc>  // b.pmore
    21e8:	cmp	w0, #0x6
    21ec:	b.eq	22dc <parse_note+0x314>  // b.none
    21f0:	cmp	w0, #0x6
    21f4:	b.hi	25c4 <parse_note+0x5fc>  // b.pmore
    21f8:	cmp	w0, #0x5
    21fc:	b.eq	22a8 <parse_note+0x2e0>  // b.none
    2200:	cmp	w0, #0x5
    2204:	b.hi	25c4 <parse_note+0x5fc>  // b.pmore
    2208:	cmp	w0, #0x4
    220c:	b.eq	2290 <parse_note+0x2c8>  // b.none
    2210:	cmp	w0, #0x4
    2214:	b.hi	25c4 <parse_note+0x5fc>  // b.pmore
    2218:	cmp	w0, #0x3
    221c:	b.eq	2278 <parse_note+0x2b0>  // b.none
    2220:	cmp	w0, #0x3
    2224:	b.hi	25c4 <parse_note+0x5fc>  // b.pmore
    2228:	cmp	w0, #0x1
    222c:	b.eq	223c <parse_note+0x274>  // b.none
    2230:	cmp	w0, #0x2
    2234:	b.eq	2254 <parse_note+0x28c>  // b.none
    2238:	b	25c4 <parse_note+0x5fc>
    223c:	ldr	x0, [sp, #48]
    2240:	ldr	w0, [x0]
    2244:	mov	w1, w0
    2248:	ldr	x0, [sp, #32]
    224c:	str	x1, [x0, #24]
    2250:	b	2600 <parse_note+0x638>
    2254:	ldr	x0, [sp, #48]
    2258:	ldr	w0, [x0]
    225c:	mov	w1, w0
    2260:	ldr	x0, [sp, #32]
    2264:	str	x1, [x0, #32]
    2268:	ldr	x0, [sp, #32]
    226c:	mov	w1, #0x1                   	// #1
    2270:	str	w1, [x0, #56]
    2274:	b	2600 <parse_note+0x638>
    2278:	ldr	x0, [sp, #48]
    227c:	ldr	w0, [x0]
    2280:	mov	w1, w0
    2284:	ldr	x0, [sp, #32]
    2288:	str	x1, [x0, #16]
    228c:	b	2600 <parse_note+0x638>
    2290:	ldr	x0, [sp, #48]
    2294:	ldr	w0, [x0]
    2298:	mov	w1, w0
    229c:	ldr	x0, [sp, #32]
    22a0:	str	x1, [x0, #40]
    22a4:	b	2600 <parse_note+0x638>
    22a8:	ldr	x4, [sp, #48]
    22ac:	adrp	x0, 0 <grub_file_size>
    22b0:	add	x0, x0, #0x0
    22b4:	ldr	x3, [x0]
    22b8:	adrp	x0, 0 <grub_file_size>
    22bc:	add	x0, x0, #0x0
    22c0:	ldr	x2, [x0]
    22c4:	mov	w1, #0xdd                  	// #221
    22c8:	adrp	x0, 0 <grub_file_size>
    22cc:	add	x0, x0, #0x0
    22d0:	ldr	x0, [x0]
    22d4:	bl	0 <grub_real_dprintf>
    22d8:	b	2600 <parse_note+0x638>
    22dc:	ldr	x4, [sp, #48]
    22e0:	adrp	x0, 0 <grub_file_size>
    22e4:	add	x0, x0, #0x0
    22e8:	ldr	x3, [x0]
    22ec:	adrp	x0, 0 <grub_file_size>
    22f0:	add	x0, x0, #0x0
    22f4:	ldr	x2, [x0]
    22f8:	mov	w1, #0xe0                  	// #224
    22fc:	adrp	x0, 0 <grub_file_size>
    2300:	add	x0, x0, #0x0
    2304:	ldr	x0, [x0]
    2308:	bl	0 <grub_real_dprintf>
    230c:	b	2600 <parse_note+0x638>
    2310:	ldr	x4, [sp, #48]
    2314:	adrp	x0, 0 <grub_file_size>
    2318:	add	x0, x0, #0x0
    231c:	ldr	x3, [x0]
    2320:	adrp	x0, 0 <grub_file_size>
    2324:	add	x0, x0, #0x0
    2328:	ldr	x2, [x0]
    232c:	mov	w1, #0xe3                  	// #227
    2330:	adrp	x0, 0 <grub_file_size>
    2334:	add	x0, x0, #0x0
    2338:	ldr	x0, [x0]
    233c:	bl	0 <grub_real_dprintf>
    2340:	b	2600 <parse_note+0x638>
    2344:	ldr	w0, [sp, #56]
    2348:	cmp	w0, #0x6
    234c:	b.ls	2388 <parse_note+0x3c0>  // b.plast
    2350:	ldr	w0, [sp, #56]
    2354:	cmp	w0, #0x7
    2358:	b.ne	2364 <parse_note+0x39c>  // b.any
    235c:	mov	x0, #0x7                   	// #7
    2360:	b	2368 <parse_note+0x3a0>
    2364:	mov	x0, #0x8                   	// #8
    2368:	mov	x2, x0
    236c:	adrp	x0, 0 <grub_file_size>
    2370:	add	x0, x0, #0x0
    2374:	ldr	x1, [x0]
    2378:	ldr	x0, [sp, #48]
    237c:	bl	0 <grub_memcmp>
    2380:	cmp	w0, #0x0
    2384:	b.eq	2600 <parse_note+0x638>  // b.none
    2388:	adrp	x0, 0 <grub_file_size>
    238c:	add	x0, x0, #0x0
    2390:	ldr	x1, [x0]
    2394:	mov	w0, #0x15                  	// #21
    2398:	bl	0 <grub_error>
    239c:	b	2628 <parse_note+0x660>
    23a0:	ldr	x0, [sp, #32]
    23a4:	ldr	w0, [x0, #80]
    23a8:	ldr	w6, [sp, #56]
    23ac:	mov	w5, w0
    23b0:	ldr	x4, [sp, #48]
    23b4:	adrp	x0, 0 <grub_file_size>
    23b8:	add	x0, x0, #0x0
    23bc:	ldr	x3, [x0]
    23c0:	adrp	x0, 0 <grub_file_size>
    23c4:	add	x0, x0, #0x0
    23c8:	ldr	x2, [x0]
    23cc:	mov	w1, #0xec                  	// #236
    23d0:	adrp	x0, 0 <grub_file_size>
    23d4:	add	x0, x0, #0x0
    23d8:	ldr	x0, [x0]
    23dc:	bl	0 <grub_real_dprintf>
    23e0:	ldr	x0, [sp, #32]
    23e4:	ldr	w0, [x0, #80]
    23e8:	cmp	w0, #0x1
    23ec:	b.eq	2414 <parse_note+0x44c>  // b.none
    23f0:	ldr	x0, [sp, #32]
    23f4:	ldr	w0, [x0, #80]
    23f8:	cmp	w0, #0x2
    23fc:	b.eq	2414 <parse_note+0x44c>  // b.none
    2400:	ldr	x0, [sp, #32]
    2404:	ldr	w0, [x0, #80]
    2408:	cmp	w0, #0x3
    240c:	b.eq	2414 <parse_note+0x44c>  // b.none
    2410:	b	2600 <parse_note+0x638>
    2414:	ldr	w0, [sp, #56]
    2418:	cmp	w0, #0x2
    241c:	b.ls	2470 <parse_note+0x4a8>  // b.plast
    2420:	ldr	w0, [sp, #56]
    2424:	cmp	w0, #0x3
    2428:	b.ne	2434 <parse_note+0x46c>  // b.any
    242c:	mov	x0, #0x3                   	// #3
    2430:	b	2438 <parse_note+0x470>
    2434:	mov	x0, #0x4                   	// #4
    2438:	mov	x2, x0
    243c:	adrp	x0, 0 <grub_file_size>
    2440:	add	x0, x0, #0x0
    2444:	ldr	x1, [x0]
    2448:	ldr	x0, [sp, #48]
    244c:	bl	0 <grub_memcmp>
    2450:	cmp	w0, #0x0
    2454:	b.ne	2470 <parse_note+0x4a8>  // b.any
    2458:	ldr	x0, [sp, #32]
    245c:	mov	w1, #0x1                   	// #1
    2460:	str	w1, [x0, #72]
    2464:	ldr	x0, [sp, #32]
    2468:	mov	w1, #0x2                   	// #2
    246c:	str	w1, [x0, #80]
    2470:	ldr	w0, [sp, #56]
    2474:	cmp	w0, #0x6
    2478:	b.ls	24cc <parse_note+0x504>  // b.plast
    247c:	ldr	w0, [sp, #56]
    2480:	cmp	w0, #0x7
    2484:	b.ne	2490 <parse_note+0x4c8>  // b.any
    2488:	mov	x0, #0x7                   	// #7
    248c:	b	2494 <parse_note+0x4cc>
    2490:	mov	x0, #0x8                   	// #8
    2494:	mov	x2, x0
    2498:	adrp	x0, 0 <grub_file_size>
    249c:	add	x0, x0, #0x0
    24a0:	ldr	x1, [x0]
    24a4:	ldr	x0, [sp, #48]
    24a8:	bl	0 <grub_memcmp>
    24ac:	cmp	w0, #0x0
    24b0:	b.ne	24cc <parse_note+0x504>  // b.any
    24b4:	ldr	x0, [sp, #32]
    24b8:	mov	w1, #0x1                   	// #1
    24bc:	str	w1, [x0, #72]
    24c0:	ldr	x0, [sp, #32]
    24c4:	mov	w1, #0x3                   	// #3
    24c8:	str	w1, [x0, #80]
    24cc:	ldr	w0, [sp, #56]
    24d0:	cmp	w0, #0xa
    24d4:	b.ls	2528 <parse_note+0x560>  // b.plast
    24d8:	ldr	w0, [sp, #56]
    24dc:	cmp	w0, #0xb
    24e0:	b.ne	24ec <parse_note+0x524>  // b.any
    24e4:	mov	x0, #0xb                   	// #11
    24e8:	b	24f0 <parse_note+0x528>
    24ec:	mov	x0, #0xc                   	// #12
    24f0:	mov	x2, x0
    24f4:	adrp	x0, 0 <grub_file_size>
    24f8:	add	x0, x0, #0x0
    24fc:	ldr	x1, [x0]
    2500:	ldr	x0, [sp, #48]
    2504:	bl	0 <grub_memcmp>
    2508:	cmp	w0, #0x0
    250c:	b.ne	2528 <parse_note+0x560>  // b.any
    2510:	ldr	x0, [sp, #32]
    2514:	mov	w1, #0x1                   	// #1
    2518:	str	w1, [x0, #72]
    251c:	ldr	x0, [sp, #32]
    2520:	mov	w1, #0x3                   	// #3
    2524:	str	w1, [x0, #80]
    2528:	ldr	w0, [sp, #56]
    252c:	cmp	w0, #0x1
    2530:	b.ls	2600 <parse_note+0x638>  // b.plast
    2534:	ldr	w0, [sp, #56]
    2538:	cmp	w0, #0x2
    253c:	b.ne	2548 <parse_note+0x580>  // b.any
    2540:	mov	x0, #0x2                   	// #2
    2544:	b	254c <parse_note+0x584>
    2548:	mov	x0, #0x3                   	// #3
    254c:	mov	x2, x0
    2550:	adrp	x0, 0 <grub_file_size>
    2554:	add	x0, x0, #0x0
    2558:	ldr	x1, [x0]
    255c:	ldr	x0, [sp, #48]
    2560:	bl	0 <grub_memcmp>
    2564:	cmp	w0, #0x0
    2568:	b.ne	2600 <parse_note+0x638>  // b.any
    256c:	ldr	x0, [sp, #32]
    2570:	mov	w1, #0x1                   	// #1
    2574:	str	w1, [x0, #80]
    2578:	b	2600 <parse_note+0x638>
    257c:	ldr	x0, [sp, #48]
    2580:	ldr	w0, [x0]
    2584:	mov	w1, w0
    2588:	ldr	x0, [sp, #32]
    258c:	str	x1, [x0, #48]
    2590:	ldr	x0, [sp, #32]
    2594:	mov	w1, #0x1                   	// #1
    2598:	str	w1, [x0, #68]
    259c:	b	2600 <parse_note+0x638>
    25a0:	ldr	x0, [sp, #48]
    25a4:	ldr	w0, [x0]
    25a8:	cmp	w0, #0x0
    25ac:	cset	w0, ne  // ne = any
    25b0:	and	w0, w0, #0xff
    25b4:	mov	w1, w0
    25b8:	ldr	x0, [sp, #32]
    25bc:	str	w1, [x0, #76]
    25c0:	b	2600 <parse_note+0x638>
    25c4:	ldr	x0, [sp, #72]
    25c8:	ldr	w0, [x0, #8]
    25cc:	mov	w4, w0
    25d0:	adrp	x0, 0 <grub_file_size>
    25d4:	add	x0, x0, #0x0
    25d8:	ldr	x3, [x0]
    25dc:	adrp	x0, 0 <grub_file_size>
    25e0:	add	x0, x0, #0x0
    25e4:	ldr	x2, [x0]
    25e8:	mov	w1, #0x110                 	// #272
    25ec:	adrp	x0, 0 <grub_file_size>
    25f0:	add	x0, x0, #0x0
    25f4:	ldr	x0, [x0]
    25f8:	bl	0 <grub_real_dprintf>
    25fc:	nop
    2600:	ldr	x1, [sp, #88]
    2604:	ldr	x0, [sp, #80]
    2608:	sub	x0, x1, x0
    260c:	asr	x0, x0, #2
    2610:	mov	x1, x0
    2614:	ldr	x0, [sp, #16]
    2618:	lsr	x0, x0, #2
    261c:	cmp	x1, x0
    2620:	b.lt	20bc <parse_note+0xf4>  // b.tstop
    2624:	mov	w0, #0x0                   	// #0
    2628:	ldp	x29, x30, [sp], #96
    262c:	ret
	...

00000000000026b0 <grub_xen_get_info32>:
    26b0:	stp	x29, x30, [sp, #-128]!
    26b4:	mov	x29, sp
    26b8:	str	x0, [sp, #24]
    26bc:	str	x1, [sp, #16]
    26c0:	ldr	x0, [sp, #24]
    26c4:	ldrh	w0, [x0, #56]
    26c8:	and	x0, x0, #0xffff
    26cc:	str	x0, [sp, #96]
    26d0:	ldr	x0, [sp, #24]
    26d4:	ldrh	w0, [x0, #54]
    26d8:	and	x0, x0, #0xffff
    26dc:	str	x0, [sp, #88]
    26e0:	ldr	x1, [sp, #96]
    26e4:	ldr	x0, [sp, #88]
    26e8:	mul	x0, x1, x0
    26ec:	str	x0, [sp, #80]
    26f0:	ldr	x0, [sp, #16]
    26f4:	str	xzr, [x0, #8]
    26f8:	ldr	x0, [sp, #16]
    26fc:	mov	x1, #0xffffffffffffffff    	// #-1
    2700:	str	x1, [x0]
    2704:	ldr	x0, [sp, #24]
    2708:	ldr	w0, [x0, #32]
    270c:	mov	w1, w0
    2710:	ldr	x0, [sp, #16]
    2714:	str	x1, [x0, #24]
    2718:	ldr	x0, [sp, #24]
    271c:	bl	0 <grub_elf32_load_phdrs>
    2720:	ldr	x0, [sp, #24]
    2724:	ldr	x0, [x0, #72]
    2728:	str	x0, [sp, #104]
    272c:	b	2814 <grub_xen_get_info32+0x164>
    2730:	ldr	x0, [sp, #104]
    2734:	ldr	w0, [x0]
    2738:	cmp	w0, #0x4
    273c:	b.ne	2784 <grub_xen_get_info32+0xd4>  // b.any
    2740:	ldr	x0, [sp, #104]
    2744:	ldr	w0, [x0, #4]
    2748:	mov	w1, w0
    274c:	ldr	x0, [sp, #104]
    2750:	ldr	w0, [x0, #16]
    2754:	mov	w0, w0
    2758:	mov	x3, x0
    275c:	mov	x2, x1
    2760:	ldr	x1, [sp, #16]
    2764:	ldr	x0, [sp, #24]
    2768:	bl	1fc8 <parse_note>
    276c:	str	w0, [sp, #116]
    2770:	ldr	w0, [sp, #116]
    2774:	cmp	w0, #0x0
    2778:	b.eq	2784 <grub_xen_get_info32+0xd4>  // b.none
    277c:	ldr	w0, [sp, #116]
    2780:	b	2bbc <grub_xen_get_info32+0x50c>
    2784:	ldr	x0, [sp, #104]
    2788:	ldr	w0, [x0]
    278c:	cmp	w0, #0x1
    2790:	b.ne	2804 <grub_xen_get_info32+0x154>  // b.any
    2794:	ldr	x0, [sp, #104]
    2798:	ldr	w0, [x0, #12]
    279c:	str	w0, [sp, #76]
    27a0:	ldr	w1, [sp, #76]
    27a4:	ldr	x0, [sp, #16]
    27a8:	ldr	x0, [x0]
    27ac:	cmp	x1, x0
    27b0:	b.cs	27c0 <grub_xen_get_info32+0x110>  // b.hs, b.nlast
    27b4:	ldr	w1, [sp, #76]
    27b8:	ldr	x0, [sp, #16]
    27bc:	str	x1, [x0]
    27c0:	ldr	x0, [sp, #104]
    27c4:	ldr	w1, [x0, #20]
    27c8:	ldr	w0, [sp, #76]
    27cc:	add	w0, w1, w0
    27d0:	mov	w1, w0
    27d4:	ldr	x0, [sp, #16]
    27d8:	ldr	x0, [x0, #8]
    27dc:	cmp	x1, x0
    27e0:	b.ls	2808 <grub_xen_get_info32+0x158>  // b.plast
    27e4:	ldr	x0, [sp, #104]
    27e8:	ldr	w1, [x0, #20]
    27ec:	ldr	w0, [sp, #76]
    27f0:	add	w0, w1, w0
    27f4:	mov	w1, w0
    27f8:	ldr	x0, [sp, #16]
    27fc:	str	x1, [x0, #8]
    2800:	b	2808 <grub_xen_get_info32+0x158>
    2804:	nop
    2808:	ldr	x0, [sp, #104]
    280c:	add	x0, x0, #0x20
    2810:	str	x0, [sp, #104]
    2814:	ldr	x0, [sp, #104]
    2818:	cmp	x0, #0x0
    281c:	b.eq	2848 <grub_xen_get_info32+0x198>  // b.none
    2820:	ldr	x0, [sp, #24]
    2824:	ldr	x1, [x0, #72]
    2828:	ldr	x0, [sp, #24]
    282c:	ldrh	w0, [x0, #52]
    2830:	and	x0, x0, #0xffff
    2834:	lsl	x0, x0, #5
    2838:	add	x0, x1, x0
    283c:	ldr	x1, [sp, #104]
    2840:	cmp	x1, x0
    2844:	b.cc	2730 <grub_xen_get_info32+0x80>  // b.lo, b.ul, b.last
    2848:	ldr	x0, [sp, #16]
    284c:	ldr	w0, [x0, #60]
    2850:	cmp	w0, #0x0
    2854:	b.eq	2860 <grub_xen_get_info32+0x1b0>  // b.none
    2858:	mov	w0, #0x0                   	// #0
    285c:	b	2bbc <grub_xen_get_info32+0x50c>
    2860:	ldr	x0, [sp, #96]
    2864:	cmp	x0, #0x0
    2868:	b.eq	2878 <grub_xen_get_info32+0x1c8>  // b.none
    286c:	ldr	x0, [sp, #88]
    2870:	cmp	x0, #0x0
    2874:	b.ne	2890 <grub_xen_get_info32+0x1e0>  // b.any
    2878:	adrp	x0, 0 <grub_file_size>
    287c:	add	x0, x0, #0x0
    2880:	ldr	x1, [x0]
    2884:	mov	w0, #0x15                  	// #21
    2888:	bl	0 <grub_error>
    288c:	b	2bbc <grub_xen_get_info32+0x50c>
    2890:	ldr	x0, [sp, #80]
    2894:	bl	0 <grub_malloc>
    2898:	str	x0, [sp, #64]
    289c:	ldr	x0, [sp, #64]
    28a0:	cmp	x0, #0x0
    28a4:	b.ne	28bc <grub_xen_get_info32+0x20c>  // b.any
    28a8:	adrp	x0, 0 <grub_file_size>
    28ac:	add	x0, x0, #0x0
    28b0:	ldr	x0, [x0]
    28b4:	ldr	w0, [x0]
    28b8:	b	2bbc <grub_xen_get_info32+0x50c>
    28bc:	ldr	x0, [sp, #24]
    28c0:	ldr	x2, [x0]
    28c4:	ldr	x0, [sp, #24]
    28c8:	ldr	w0, [x0, #40]
    28cc:	mov	w0, w0
    28d0:	mov	x1, x0
    28d4:	mov	x0, x2
    28d8:	bl	0 <grub_file_seek>
    28dc:	cmn	x0, #0x1
    28e0:	b.ne	28fc <grub_xen_get_info32+0x24c>  // b.any
    28e4:	adrp	x0, 0 <grub_file_size>
    28e8:	add	x0, x0, #0x0
    28ec:	ldr	x0, [x0]
    28f0:	ldr	w0, [x0]
    28f4:	str	w0, [sp, #116]
    28f8:	b	2bb0 <grub_xen_get_info32+0x500>
    28fc:	ldr	x0, [sp, #24]
    2900:	ldr	x0, [x0]
    2904:	ldr	x2, [sp, #80]
    2908:	ldr	x1, [sp, #64]
    290c:	bl	0 <grub_file_read>
    2910:	mov	x1, x0
    2914:	ldr	x0, [sp, #80]
    2918:	cmp	x1, x0
    291c:	b.eq	297c <grub_xen_get_info32+0x2cc>  // b.none
    2920:	adrp	x0, 0 <grub_file_size>
    2924:	add	x0, x0, #0x0
    2928:	ldr	x0, [x0]
    292c:	ldr	w0, [x0]
    2930:	cmp	w0, #0x0
    2934:	b.eq	2950 <grub_xen_get_info32+0x2a0>  // b.none
    2938:	adrp	x0, 0 <grub_file_size>
    293c:	add	x0, x0, #0x0
    2940:	ldr	x0, [x0]
    2944:	ldr	w0, [x0]
    2948:	str	w0, [sp, #116]
    294c:	b	2bb0 <grub_xen_get_info32+0x500>
    2950:	ldr	x0, [sp, #24]
    2954:	ldr	x0, [x0]
    2958:	ldr	x0, [x0]
    295c:	mov	x2, x0
    2960:	adrp	x0, 0 <grub_file_size>
    2964:	add	x0, x0, #0x0
    2968:	ldr	x1, [x0]
    296c:	mov	w0, #0x15                  	// #21
    2970:	bl	0 <grub_error>
    2974:	str	w0, [sp, #116]
    2978:	b	2bb0 <grub_xen_get_info32+0x500>
    297c:	ldr	x0, [sp, #24]
    2980:	ldrh	w0, [x0, #58]
    2984:	and	x1, x0, #0xffff
    2988:	ldr	x0, [sp, #88]
    298c:	mul	x0, x1, x0
    2990:	ldr	x1, [sp, #64]
    2994:	add	x0, x1, x0
    2998:	str	x0, [sp, #120]
    299c:	ldr	x0, [sp, #120]
    29a0:	ldr	w0, [x0, #16]
    29a4:	mov	w0, w0
    29a8:	str	x0, [sp, #56]
    29ac:	ldr	x0, [sp, #64]
    29b0:	str	x0, [sp, #120]
    29b4:	b	2a14 <grub_xen_get_info32+0x364>
    29b8:	ldr	x0, [sp, #120]
    29bc:	ldr	w0, [x0, #4]
    29c0:	cmp	w0, #0x7
    29c4:	b.ne	2a04 <grub_xen_get_info32+0x354>  // b.any
    29c8:	ldr	x0, [sp, #120]
    29cc:	ldr	w0, [x0, #16]
    29d0:	mov	w1, w0
    29d4:	ldr	x0, [sp, #120]
    29d8:	ldr	w0, [x0, #20]
    29dc:	mov	w0, w0
    29e0:	mov	x3, x0
    29e4:	mov	x2, x1
    29e8:	ldr	x1, [sp, #16]
    29ec:	ldr	x0, [sp, #24]
    29f0:	bl	1fc8 <parse_note>
    29f4:	str	w0, [sp, #116]
    29f8:	ldr	w0, [sp, #116]
    29fc:	cmp	w0, #0x0
    2a00:	b.ne	2bac <grub_xen_get_info32+0x4fc>  // b.any
    2a04:	ldr	x1, [sp, #120]
    2a08:	ldr	x0, [sp, #88]
    2a0c:	add	x0, x1, x0
    2a10:	str	x0, [sp, #120]
    2a14:	ldr	x1, [sp, #96]
    2a18:	ldr	x0, [sp, #88]
    2a1c:	mul	x0, x1, x0
    2a20:	ldr	x1, [sp, #64]
    2a24:	add	x0, x1, x0
    2a28:	ldr	x1, [sp, #120]
    2a2c:	cmp	x1, x0
    2a30:	b.cc	29b8 <grub_xen_get_info32+0x308>  // b.lo, b.ul, b.last
    2a34:	ldr	x0, [sp, #16]
    2a38:	ldr	w0, [x0, #60]
    2a3c:	cmp	w0, #0x0
    2a40:	b.eq	2a4c <grub_xen_get_info32+0x39c>  // b.none
    2a44:	str	wzr, [sp, #116]
    2a48:	b	2bb0 <grub_xen_get_info32+0x500>
    2a4c:	ldr	x0, [sp, #64]
    2a50:	str	x0, [sp, #120]
    2a54:	b	2b70 <grub_xen_get_info32+0x4c0>
    2a58:	add	x0, sp, #0x28
    2a5c:	mov	x2, #0xc                   	// #12
    2a60:	mov	w1, #0x0                   	// #0
    2a64:	bl	0 <grub_memset>
    2a68:	ldr	x0, [sp, #24]
    2a6c:	ldr	x2, [x0]
    2a70:	ldr	x0, [sp, #120]
    2a74:	ldr	w0, [x0]
    2a78:	mov	w1, w0
    2a7c:	ldr	x0, [sp, #56]
    2a80:	add	x0, x1, x0
    2a84:	mov	x1, x0
    2a88:	mov	x0, x2
    2a8c:	bl	0 <grub_file_seek>
    2a90:	cmn	x0, #0x1
    2a94:	b.ne	2ab0 <grub_xen_get_info32+0x400>  // b.any
    2a98:	adrp	x0, 0 <grub_file_size>
    2a9c:	add	x0, x0, #0x0
    2aa0:	ldr	x0, [x0]
    2aa4:	ldr	w0, [x0]
    2aa8:	str	w0, [sp, #116]
    2aac:	b	2bb0 <grub_xen_get_info32+0x500>
    2ab0:	ldr	x0, [sp, #24]
    2ab4:	ldr	x0, [x0]
    2ab8:	add	x1, sp, #0x28
    2abc:	mov	x2, #0xc                   	// #12
    2ac0:	bl	0 <grub_file_read>
    2ac4:	cmp	x0, #0xc
    2ac8:	b.eq	2afc <grub_xen_get_info32+0x44c>  // b.none
    2acc:	adrp	x0, 0 <grub_file_size>
    2ad0:	add	x0, x0, #0x0
    2ad4:	ldr	x0, [x0]
    2ad8:	ldr	w0, [x0]
    2adc:	cmp	w0, #0x0
    2ae0:	b.eq	2b54 <grub_xen_get_info32+0x4a4>  // b.none
    2ae4:	adrp	x0, 0 <grub_file_size>
    2ae8:	add	x0, x0, #0x0
    2aec:	ldr	x0, [x0]
    2af0:	ldr	w0, [x0]
    2af4:	str	w0, [sp, #116]
    2af8:	b	2bb0 <grub_xen_get_info32+0x500>
    2afc:	add	x3, sp, #0x28
    2b00:	mov	x2, #0xc                   	// #12
    2b04:	adrp	x0, 0 <grub_file_size>
    2b08:	add	x0, x0, #0x0
    2b0c:	ldr	x1, [x0]
    2b10:	mov	x0, x3
    2b14:	bl	0 <grub_memcmp>
    2b18:	cmp	w0, #0x0
    2b1c:	b.ne	2b5c <grub_xen_get_info32+0x4ac>  // b.any
    2b20:	ldr	x0, [sp, #120]
    2b24:	ldr	w0, [x0, #16]
    2b28:	mov	w1, w0
    2b2c:	ldr	x0, [sp, #120]
    2b30:	ldr	w0, [x0, #20]
    2b34:	mov	w0, w0
    2b38:	mov	x3, x0
    2b3c:	mov	x2, x1
    2b40:	ldr	x1, [sp, #16]
    2b44:	ldr	x0, [sp, #24]
    2b48:	bl	18c8 <parse_xen_guest>
    2b4c:	str	w0, [sp, #116]
    2b50:	b	2bb0 <grub_xen_get_info32+0x500>
    2b54:	nop
    2b58:	b	2b60 <grub_xen_get_info32+0x4b0>
    2b5c:	nop
    2b60:	ldr	x1, [sp, #120]
    2b64:	ldr	x0, [sp, #88]
    2b68:	add	x0, x1, x0
    2b6c:	str	x0, [sp, #120]
    2b70:	ldr	x1, [sp, #96]
    2b74:	ldr	x0, [sp, #88]
    2b78:	mul	x0, x1, x0
    2b7c:	ldr	x1, [sp, #64]
    2b80:	add	x0, x1, x0
    2b84:	ldr	x1, [sp, #120]
    2b88:	cmp	x1, x0
    2b8c:	b.cc	2a58 <grub_xen_get_info32+0x3a8>  // b.lo, b.ul, b.last
    2b90:	adrp	x0, 0 <grub_file_size>
    2b94:	add	x0, x0, #0x0
    2b98:	ldr	x1, [x0]
    2b9c:	mov	w0, #0x15                  	// #21
    2ba0:	bl	0 <grub_error>
    2ba4:	str	w0, [sp, #116]
    2ba8:	b	2bb0 <grub_xen_get_info32+0x500>
    2bac:	nop
    2bb0:	ldr	x0, [sp, #64]
    2bb4:	bl	0 <grub_free>
    2bb8:	ldr	w0, [sp, #116]
    2bbc:	ldp	x29, x30, [sp], #128
    2bc0:	ret
    2bc4:	nop
	...

0000000000002bf0 <parse_xen_guest>:
    2bf0:	stp	x29, x30, [sp, #-80]!
    2bf4:	mov	x29, sp
    2bf8:	str	x0, [sp, #40]
    2bfc:	str	x1, [sp, #32]
    2c00:	str	x2, [sp, #24]
    2c04:	str	x3, [sp, #16]
    2c08:	str	wzr, [sp, #76]
    2c0c:	adrp	x0, 0 <grub_file_size>
    2c10:	add	x0, x0, #0x0
    2c14:	ldr	x0, [x0]
    2c18:	str	wzr, [x0]
    2c1c:	ldr	x0, [sp, #40]
    2c20:	ldr	x0, [x0]
    2c24:	ldr	x1, [sp, #24]
    2c28:	bl	0 <grub_file_seek>
    2c2c:	cmn	x0, #0x1
    2c30:	b.ne	2c48 <parse_xen_guest+0x58>  // b.any
    2c34:	adrp	x0, 0 <grub_file_size>
    2c38:	add	x0, x0, #0x0
    2c3c:	ldr	x0, [x0]
    2c40:	ldr	w0, [x0]
    2c44:	b	3280 <parse_xen_guest+0x690>
    2c48:	ldr	x0, [sp, #16]
    2c4c:	bl	0 <grub_malloc>
    2c50:	str	x0, [sp, #64]
    2c54:	ldr	x0, [sp, #64]
    2c58:	cmp	x0, #0x0
    2c5c:	b.ne	2c74 <parse_xen_guest+0x84>  // b.any
    2c60:	adrp	x0, 0 <grub_file_size>
    2c64:	add	x0, x0, #0x0
    2c68:	ldr	x0, [x0]
    2c6c:	ldr	w0, [x0]
    2c70:	b	3280 <parse_xen_guest+0x690>
    2c74:	ldr	x0, [sp, #40]
    2c78:	ldr	x0, [x0]
    2c7c:	ldr	x2, [sp, #16]
    2c80:	ldr	x1, [sp, #64]
    2c84:	bl	0 <grub_file_read>
    2c88:	mov	x1, x0
    2c8c:	ldr	x0, [sp, #16]
    2c90:	cmp	x1, x0
    2c94:	b.eq	2ce0 <parse_xen_guest+0xf0>  // b.none
    2c98:	adrp	x0, 0 <grub_file_size>
    2c9c:	add	x0, x0, #0x0
    2ca0:	ldr	x0, [x0]
    2ca4:	ldr	w0, [x0]
    2ca8:	cmp	w0, #0x0
    2cac:	b.ne	3254 <parse_xen_guest+0x664>  // b.any
    2cb0:	ldr	x0, [sp, #64]
    2cb4:	bl	0 <grub_free>
    2cb8:	ldr	x0, [sp, #40]
    2cbc:	ldr	x0, [x0]
    2cc0:	ldr	x0, [x0]
    2cc4:	mov	x2, x0
    2cc8:	adrp	x0, 0 <grub_file_size>
    2ccc:	add	x0, x0, #0x0
    2cd0:	ldr	x1, [x0]
    2cd4:	mov	w0, #0x15                  	// #21
    2cd8:	bl	0 <grub_error>
    2cdc:	b	3280 <parse_xen_guest+0x690>
    2ce0:	ldr	x0, [sp, #32]
    2ce4:	mov	w1, #0x1                   	// #1
    2ce8:	str	w1, [x0, #64]
    2cec:	ldr	x0, [sp, #64]
    2cf0:	str	x0, [sp, #56]
    2cf4:	b	31e0 <parse_xen_guest+0x5f0>
    2cf8:	ldr	x3, [sp, #56]
    2cfc:	mov	x2, #0x7                   	// #7
    2d00:	adrp	x0, 0 <grub_file_size>
    2d04:	add	x0, x0, #0x0
    2d08:	ldr	x1, [x0]
    2d0c:	mov	x0, x3
    2d10:	bl	0 <grub_strncmp>
    2d14:	cmp	w0, #0x0
    2d18:	b.ne	2d5c <parse_xen_guest+0x16c>  // b.any
    2d1c:	ldr	x0, [sp, #32]
    2d20:	ldr	w0, [x0, #80]
    2d24:	cmp	w0, #0x1
    2d28:	b.eq	2d4c <parse_xen_guest+0x15c>  // b.none
    2d2c:	ldr	x0, [sp, #32]
    2d30:	ldr	w0, [x0, #80]
    2d34:	cmp	w0, #0x2
    2d38:	b.eq	2d4c <parse_xen_guest+0x15c>  // b.none
    2d3c:	ldr	x0, [sp, #32]
    2d40:	ldr	w0, [x0, #80]
    2d44:	cmp	w0, #0x3
    2d48:	b.ne	316c <parse_xen_guest+0x57c>  // b.any
    2d4c:	ldr	x0, [sp, #32]
    2d50:	mov	w1, #0x1                   	// #1
    2d54:	str	w1, [x0, #80]
    2d58:	b	31b8 <parse_xen_guest+0x5c8>
    2d5c:	ldr	x3, [sp, #56]
    2d60:	mov	x2, #0x8                   	// #8
    2d64:	adrp	x0, 0 <grub_file_size>
    2d68:	add	x0, x0, #0x0
    2d6c:	ldr	x1, [x0]
    2d70:	mov	x0, x3
    2d74:	bl	0 <grub_strncmp>
    2d78:	cmp	w0, #0x0
    2d7c:	b.ne	2dc0 <parse_xen_guest+0x1d0>  // b.any
    2d80:	ldr	x0, [sp, #32]
    2d84:	ldr	w0, [x0, #80]
    2d88:	cmp	w0, #0x1
    2d8c:	b.eq	2db0 <parse_xen_guest+0x1c0>  // b.none
    2d90:	ldr	x0, [sp, #32]
    2d94:	ldr	w0, [x0, #80]
    2d98:	cmp	w0, #0x2
    2d9c:	b.eq	2db0 <parse_xen_guest+0x1c0>  // b.none
    2da0:	ldr	x0, [sp, #32]
    2da4:	ldr	w0, [x0, #80]
    2da8:	cmp	w0, #0x3
    2dac:	b.ne	3174 <parse_xen_guest+0x584>  // b.any
    2db0:	ldr	x0, [sp, #32]
    2db4:	mov	w1, #0x2                   	// #2
    2db8:	str	w1, [x0, #80]
    2dbc:	b	31b8 <parse_xen_guest+0x5c8>
    2dc0:	ldr	x3, [sp, #56]
    2dc4:	mov	x2, #0x16                  	// #22
    2dc8:	adrp	x0, 0 <grub_file_size>
    2dcc:	add	x0, x0, #0x0
    2dd0:	ldr	x1, [x0]
    2dd4:	mov	x0, x3
    2dd8:	bl	0 <grub_strncmp>
    2ddc:	cmp	w0, #0x0
    2de0:	b.ne	2e30 <parse_xen_guest+0x240>  // b.any
    2de4:	ldr	x0, [sp, #32]
    2de8:	ldr	w0, [x0, #80]
    2dec:	cmp	w0, #0x1
    2df0:	b.eq	2e14 <parse_xen_guest+0x224>  // b.none
    2df4:	ldr	x0, [sp, #32]
    2df8:	ldr	w0, [x0, #80]
    2dfc:	cmp	w0, #0x2
    2e00:	b.eq	2e14 <parse_xen_guest+0x224>  // b.none
    2e04:	ldr	x0, [sp, #32]
    2e08:	ldr	w0, [x0, #80]
    2e0c:	cmp	w0, #0x3
    2e10:	b.ne	317c <parse_xen_guest+0x58c>  // b.any
    2e14:	ldr	x0, [sp, #32]
    2e18:	mov	w1, #0x2                   	// #2
    2e1c:	str	w1, [x0, #80]
    2e20:	ldr	x0, [sp, #32]
    2e24:	mov	w1, #0x1                   	// #1
    2e28:	str	w1, [x0, #72]
    2e2c:	b	31b8 <parse_xen_guest+0x5c8>
    2e30:	ldr	x3, [sp, #56]
    2e34:	mov	x2, #0xc                   	// #12
    2e38:	adrp	x0, 0 <grub_file_size>
    2e3c:	add	x0, x0, #0x0
    2e40:	ldr	x1, [x0]
    2e44:	mov	x0, x3
    2e48:	bl	0 <grub_strncmp>
    2e4c:	cmp	w0, #0x0
    2e50:	b.ne	2e94 <parse_xen_guest+0x2a4>  // b.any
    2e54:	ldr	x0, [sp, #32]
    2e58:	ldr	w0, [x0, #80]
    2e5c:	cmp	w0, #0x1
    2e60:	b.eq	2e84 <parse_xen_guest+0x294>  // b.none
    2e64:	ldr	x0, [sp, #32]
    2e68:	ldr	w0, [x0, #80]
    2e6c:	cmp	w0, #0x2
    2e70:	b.eq	2e84 <parse_xen_guest+0x294>  // b.none
    2e74:	ldr	x0, [sp, #32]
    2e78:	ldr	w0, [x0, #80]
    2e7c:	cmp	w0, #0x3
    2e80:	b.ne	3184 <parse_xen_guest+0x594>  // b.any
    2e84:	ldr	x0, [sp, #32]
    2e88:	mov	w1, #0x3                   	// #3
    2e8c:	str	w1, [x0, #80]
    2e90:	b	31b8 <parse_xen_guest+0x5c8>
    2e94:	ldr	x3, [sp, #56]
    2e98:	mov	x2, #0x1a                  	// #26
    2e9c:	adrp	x0, 0 <grub_file_size>
    2ea0:	add	x0, x0, #0x0
    2ea4:	ldr	x1, [x0]
    2ea8:	mov	x0, x3
    2eac:	bl	0 <grub_strncmp>
    2eb0:	cmp	w0, #0x0
    2eb4:	b.ne	2f04 <parse_xen_guest+0x314>  // b.any
    2eb8:	ldr	x0, [sp, #32]
    2ebc:	ldr	w0, [x0, #80]
    2ec0:	cmp	w0, #0x1
    2ec4:	b.eq	2ee8 <parse_xen_guest+0x2f8>  // b.none
    2ec8:	ldr	x0, [sp, #32]
    2ecc:	ldr	w0, [x0, #80]
    2ed0:	cmp	w0, #0x2
    2ed4:	b.eq	2ee8 <parse_xen_guest+0x2f8>  // b.none
    2ed8:	ldr	x0, [sp, #32]
    2edc:	ldr	w0, [x0, #80]
    2ee0:	cmp	w0, #0x3
    2ee4:	b.ne	318c <parse_xen_guest+0x59c>  // b.any
    2ee8:	ldr	x0, [sp, #32]
    2eec:	mov	w1, #0x3                   	// #3
    2ef0:	str	w1, [x0, #80]
    2ef4:	ldr	x0, [sp, #32]
    2ef8:	mov	w1, #0x1                   	// #1
    2efc:	str	w1, [x0, #72]
    2f00:	b	31b8 <parse_xen_guest+0x5c8>
    2f04:	ldr	x3, [sp, #56]
    2f08:	mov	x2, #0x10                  	// #16
    2f0c:	adrp	x0, 0 <grub_file_size>
    2f10:	add	x0, x0, #0x0
    2f14:	ldr	x1, [x0]
    2f18:	mov	x0, x3
    2f1c:	bl	0 <grub_strncmp>
    2f20:	cmp	w0, #0x0
    2f24:	b.ne	2f68 <parse_xen_guest+0x378>  // b.any
    2f28:	ldr	x0, [sp, #32]
    2f2c:	ldr	w0, [x0, #80]
    2f30:	cmp	w0, #0x1
    2f34:	b.eq	2f58 <parse_xen_guest+0x368>  // b.none
    2f38:	ldr	x0, [sp, #32]
    2f3c:	ldr	w0, [x0, #80]
    2f40:	cmp	w0, #0x2
    2f44:	b.eq	2f58 <parse_xen_guest+0x368>  // b.none
    2f48:	ldr	x0, [sp, #32]
    2f4c:	ldr	w0, [x0, #80]
    2f50:	cmp	w0, #0x3
    2f54:	b.ne	3194 <parse_xen_guest+0x5a4>  // b.any
    2f58:	ldr	x0, [sp, #32]
    2f5c:	mov	w1, #0x3                   	// #3
    2f60:	str	w1, [x0, #80]
    2f64:	b	31b8 <parse_xen_guest+0x5c8>
    2f68:	ldr	x3, [sp, #56]
    2f6c:	mov	x2, #0x1e                  	// #30
    2f70:	adrp	x0, 0 <grub_file_size>
    2f74:	add	x0, x0, #0x0
    2f78:	ldr	x1, [x0]
    2f7c:	mov	x0, x3
    2f80:	bl	0 <grub_strncmp>
    2f84:	cmp	w0, #0x0
    2f88:	b.ne	2fd8 <parse_xen_guest+0x3e8>  // b.any
    2f8c:	ldr	x0, [sp, #32]
    2f90:	ldr	w0, [x0, #80]
    2f94:	cmp	w0, #0x1
    2f98:	b.eq	2fbc <parse_xen_guest+0x3cc>  // b.none
    2f9c:	ldr	x0, [sp, #32]
    2fa0:	ldr	w0, [x0, #80]
    2fa4:	cmp	w0, #0x2
    2fa8:	b.eq	2fbc <parse_xen_guest+0x3cc>  // b.none
    2fac:	ldr	x0, [sp, #32]
    2fb0:	ldr	w0, [x0, #80]
    2fb4:	cmp	w0, #0x3
    2fb8:	b.ne	319c <parse_xen_guest+0x5ac>  // b.any
    2fbc:	ldr	x0, [sp, #32]
    2fc0:	mov	w1, #0x3                   	// #3
    2fc4:	str	w1, [x0, #80]
    2fc8:	ldr	x0, [sp, #32]
    2fcc:	mov	w1, #0x1                   	// #1
    2fd0:	str	w1, [x0, #72]
    2fd4:	b	31b8 <parse_xen_guest+0x5c8>
    2fd8:	ldr	x3, [sp, #56]
    2fdc:	mov	x2, #0xa                   	// #10
    2fe0:	adrp	x0, 0 <grub_file_size>
    2fe4:	add	x0, x0, #0x0
    2fe8:	ldr	x1, [x0]
    2fec:	mov	x0, x3
    2ff0:	bl	0 <grub_strncmp>
    2ff4:	cmp	w0, #0x0
    2ff8:	b.ne	3038 <parse_xen_guest+0x448>  // b.any
    2ffc:	ldr	x0, [sp, #56]
    3000:	add	x0, x0, #0xa
    3004:	add	x1, sp, #0x38
    3008:	mov	w2, #0x10                  	// #16
    300c:	bl	0 <grub_strtoull>
    3010:	mov	x1, x0
    3014:	ldr	x0, [sp, #32]
    3018:	str	x1, [x0, #16]
    301c:	adrp	x0, 0 <grub_file_size>
    3020:	add	x0, x0, #0x0
    3024:	ldr	x0, [x0]
    3028:	ldr	w0, [x0]
    302c:	cmp	w0, #0x0
    3030:	b.eq	31a4 <parse_xen_guest+0x5b4>  // b.none
    3034:	b	3268 <parse_xen_guest+0x678>
    3038:	ldr	x3, [sp, #56]
    303c:	mov	x2, #0xb                   	// #11
    3040:	adrp	x0, 0 <grub_file_size>
    3044:	add	x0, x0, #0x0
    3048:	ldr	x1, [x0]
    304c:	mov	x0, x3
    3050:	bl	0 <grub_strncmp>
    3054:	cmp	w0, #0x0
    3058:	b.ne	3098 <parse_xen_guest+0x4a8>  // b.any
    305c:	ldr	x0, [sp, #56]
    3060:	add	x0, x0, #0xb
    3064:	add	x1, sp, #0x38
    3068:	mov	w2, #0x10                  	// #16
    306c:	bl	0 <grub_strtoull>
    3070:	mov	x1, x0
    3074:	ldr	x0, [sp, #32]
    3078:	str	x1, [x0, #24]
    307c:	adrp	x0, 0 <grub_file_size>
    3080:	add	x0, x0, #0x0
    3084:	ldr	x0, [x0]
    3088:	ldr	w0, [x0]
    308c:	cmp	w0, #0x0
    3090:	b.eq	31ac <parse_xen_guest+0x5bc>  // b.none
    3094:	b	3268 <parse_xen_guest+0x678>
    3098:	ldr	x3, [sp, #56]
    309c:	mov	x2, #0xf                   	// #15
    30a0:	adrp	x0, 0 <grub_file_size>
    30a4:	add	x0, x0, #0x0
    30a8:	ldr	x1, [x0]
    30ac:	mov	x0, x3
    30b0:	bl	0 <grub_strncmp>
    30b4:	cmp	w0, #0x0
    30b8:	b.ne	3104 <parse_xen_guest+0x514>  // b.any
    30bc:	ldr	x0, [sp, #56]
    30c0:	add	x0, x0, #0xf
    30c4:	add	x1, sp, #0x38
    30c8:	mov	w2, #0x10                  	// #16
    30cc:	bl	0 <grub_strtoull>
    30d0:	mov	x1, x0
    30d4:	ldr	x0, [sp, #32]
    30d8:	str	x1, [x0, #32]
    30dc:	ldr	x0, [sp, #32]
    30e0:	mov	w1, #0x1                   	// #1
    30e4:	str	w1, [x0, #56]
    30e8:	adrp	x0, 0 <grub_file_size>
    30ec:	add	x0, x0, #0x0
    30f0:	ldr	x0, [x0]
    30f4:	ldr	w0, [x0]
    30f8:	cmp	w0, #0x0
    30fc:	b.eq	31b4 <parse_xen_guest+0x5c4>  // b.none
    3100:	b	3268 <parse_xen_guest+0x678>
    3104:	ldr	x3, [sp, #56]
    3108:	mov	x2, #0x11                  	// #17
    310c:	adrp	x0, 0 <grub_file_size>
    3110:	add	x0, x0, #0x0
    3114:	ldr	x1, [x0]
    3118:	mov	x0, x3
    311c:	bl	0 <grub_strncmp>
    3120:	cmp	w0, #0x0
    3124:	b.ne	31b8 <parse_xen_guest+0x5c8>  // b.any
    3128:	ldr	x0, [sp, #56]
    312c:	add	x0, x0, #0x11
    3130:	add	x1, sp, #0x38
    3134:	mov	w2, #0x10                  	// #16
    3138:	bl	0 <grub_strtoull>
    313c:	mov	x1, x0
    3140:	ldr	x0, [sp, #32]
    3144:	str	x1, [x0, #40]
    3148:	mov	w0, #0x1                   	// #1
    314c:	str	w0, [sp, #76]
    3150:	adrp	x0, 0 <grub_file_size>
    3154:	add	x0, x0, #0x0
    3158:	ldr	x0, [x0]
    315c:	ldr	w0, [x0]
    3160:	cmp	w0, #0x0
    3164:	b.ne	325c <parse_xen_guest+0x66c>  // b.any
    3168:	b	31b8 <parse_xen_guest+0x5c8>
    316c:	nop
    3170:	b	31b8 <parse_xen_guest+0x5c8>
    3174:	nop
    3178:	b	31b8 <parse_xen_guest+0x5c8>
    317c:	nop
    3180:	b	31b8 <parse_xen_guest+0x5c8>
    3184:	nop
    3188:	b	31b8 <parse_xen_guest+0x5c8>
    318c:	nop
    3190:	b	31b8 <parse_xen_guest+0x5c8>
    3194:	nop
    3198:	b	31b8 <parse_xen_guest+0x5c8>
    319c:	nop
    31a0:	b	31b8 <parse_xen_guest+0x5c8>
    31a4:	nop
    31a8:	b	31b8 <parse_xen_guest+0x5c8>
    31ac:	nop
    31b0:	b	31b8 <parse_xen_guest+0x5c8>
    31b4:	nop
    31b8:	ldr	x0, [sp, #56]
    31bc:	mov	w1, #0x2c                  	// #44
    31c0:	bl	0 <grub_strchr>
    31c4:	str	x0, [sp, #56]
    31c8:	ldr	x0, [sp, #56]
    31cc:	cmp	x0, #0x0
    31d0:	b.eq	31e0 <parse_xen_guest+0x5f0>  // b.none
    31d4:	ldr	x0, [sp, #56]
    31d8:	add	x0, x0, #0x1
    31dc:	str	x0, [sp, #56]
    31e0:	ldr	x0, [sp, #56]
    31e4:	cmp	x0, #0x0
    31e8:	b.eq	3204 <parse_xen_guest+0x614>  // b.none
    31ec:	ldr	x1, [sp, #56]
    31f0:	ldr	x0, [sp, #64]
    31f4:	sub	x1, x1, x0
    31f8:	ldr	x0, [sp, #16]
    31fc:	cmp	x1, x0
    3200:	b.lt	2cf8 <parse_xen_guest+0x108>  // b.tstop
    3204:	ldr	x0, [sp, #32]
    3208:	ldr	w0, [x0, #56]
    320c:	cmp	w0, #0x0
    3210:	b.eq	3234 <parse_xen_guest+0x644>  // b.none
    3214:	ldr	x0, [sp, #32]
    3218:	ldr	x0, [x0, #32]
    321c:	lsl	x1, x0, #12
    3220:	ldr	x0, [sp, #32]
    3224:	ldr	x0, [x0, #16]
    3228:	add	x1, x1, x0
    322c:	ldr	x0, [sp, #32]
    3230:	str	x1, [x0, #32]
    3234:	ldr	w0, [sp, #76]
    3238:	cmp	w0, #0x0
    323c:	b.ne	3264 <parse_xen_guest+0x674>  // b.any
    3240:	ldr	x0, [sp, #32]
    3244:	ldr	x1, [x0, #16]
    3248:	ldr	x0, [sp, #32]
    324c:	str	x1, [x0, #40]
    3250:	b	3268 <parse_xen_guest+0x678>
    3254:	nop
    3258:	b	3268 <parse_xen_guest+0x678>
    325c:	nop
    3260:	b	3268 <parse_xen_guest+0x678>
    3264:	nop
    3268:	ldr	x0, [sp, #64]
    326c:	bl	0 <grub_free>
    3270:	adrp	x0, 0 <grub_file_size>
    3274:	add	x0, x0, #0x0
    3278:	ldr	x0, [x0]
    327c:	ldr	w0, [x0]
    3280:	ldp	x29, x30, [sp], #80
    3284:	ret
	...

00000000000032f0 <parse_note>:
    32f0:	stp	x29, x30, [sp, #-96]!
    32f4:	mov	x29, sp
    32f8:	str	x0, [sp, #40]
    32fc:	str	x1, [sp, #32]
    3300:	str	x2, [sp, #24]
    3304:	str	x3, [sp, #16]
    3308:	ldr	x0, [sp, #40]
    330c:	ldr	x0, [x0]
    3310:	ldr	x1, [sp, #24]
    3314:	bl	0 <grub_file_seek>
    3318:	cmn	x0, #0x1
    331c:	b.ne	3334 <parse_note+0x44>  // b.any
    3320:	adrp	x0, 0 <grub_file_size>
    3324:	add	x0, x0, #0x0
    3328:	ldr	x0, [x0]
    332c:	ldr	w0, [x0]
    3330:	b	393c <parse_note+0x64c>
    3334:	ldr	x0, [sp, #16]
    3338:	bl	0 <grub_malloc>
    333c:	str	x0, [sp, #80]
    3340:	ldr	x0, [sp, #80]
    3344:	cmp	x0, #0x0
    3348:	b.ne	3360 <parse_note+0x70>  // b.any
    334c:	adrp	x0, 0 <grub_file_size>
    3350:	add	x0, x0, #0x0
    3354:	ldr	x0, [x0]
    3358:	ldr	w0, [x0]
    335c:	b	393c <parse_note+0x64c>
    3360:	ldr	x0, [sp, #40]
    3364:	ldr	x0, [x0]
    3368:	ldr	x2, [sp, #16]
    336c:	ldr	x1, [sp, #80]
    3370:	bl	0 <grub_file_read>
    3374:	mov	x1, x0
    3378:	ldr	x0, [sp, #16]
    337c:	cmp	x1, x0
    3380:	b.eq	33d8 <parse_note+0xe8>  // b.none
    3384:	adrp	x0, 0 <grub_file_size>
    3388:	add	x0, x0, #0x0
    338c:	ldr	x0, [x0]
    3390:	ldr	w0, [x0]
    3394:	cmp	w0, #0x0
    3398:	b.eq	33b0 <parse_note+0xc0>  // b.none
    339c:	adrp	x0, 0 <grub_file_size>
    33a0:	add	x0, x0, #0x0
    33a4:	ldr	x0, [x0]
    33a8:	ldr	w0, [x0]
    33ac:	b	393c <parse_note+0x64c>
    33b0:	ldr	x0, [sp, #40]
    33b4:	ldr	x0, [x0]
    33b8:	ldr	x0, [x0]
    33bc:	mov	x2, x0
    33c0:	adrp	x0, 0 <grub_file_size>
    33c4:	add	x0, x0, #0x0
    33c8:	ldr	x1, [x0]
    33cc:	mov	w0, #0x15                  	// #21
    33d0:	bl	0 <grub_error>
    33d4:	b	393c <parse_note+0x64c>
    33d8:	ldr	x0, [sp, #80]
    33dc:	str	x0, [sp, #88]
    33e0:	b	3914 <parse_note+0x624>
    33e4:	ldr	x0, [sp, #88]
    33e8:	str	x0, [sp, #72]
    33ec:	ldr	x0, [sp, #88]
    33f0:	add	x0, x0, #0xc
    33f4:	str	x0, [sp, #88]
    33f8:	ldr	x0, [sp, #88]
    33fc:	str	x0, [sp, #64]
    3400:	ldr	x0, [sp, #72]
    3404:	ldr	w0, [x0]
    3408:	str	w0, [sp, #60]
    340c:	ldr	x0, [sp, #72]
    3410:	ldr	w0, [x0, #4]
    3414:	str	w0, [sp, #56]
    3418:	ldr	w0, [sp, #60]
    341c:	add	w0, w0, #0x3
    3420:	lsr	w0, w0, #2
    3424:	mov	w0, w0
    3428:	lsl	x0, x0, #2
    342c:	ldr	x1, [sp, #88]
    3430:	add	x0, x1, x0
    3434:	str	x0, [sp, #88]
    3438:	ldr	x0, [sp, #88]
    343c:	str	x0, [sp, #48]
    3440:	ldr	x0, [sp, #72]
    3444:	ldr	w0, [x0, #4]
    3448:	add	w0, w0, #0x3
    344c:	lsr	w0, w0, #2
    3450:	mov	w0, w0
    3454:	lsl	x0, x0, #2
    3458:	ldr	x1, [sp, #88]
    345c:	add	x0, x1, x0
    3460:	str	x0, [sp, #88]
    3464:	ldr	w0, [sp, #60]
    3468:	cmp	w0, #0x2
    346c:	b.ls	3914 <parse_note+0x624>  // b.plast
    3470:	ldr	w0, [sp, #60]
    3474:	cmp	w0, #0x3
    3478:	b.ne	3484 <parse_note+0x194>  // b.any
    347c:	mov	x0, #0x3                   	// #3
    3480:	b	3488 <parse_note+0x198>
    3484:	mov	x0, #0x4                   	// #4
    3488:	mov	x2, x0
    348c:	adrp	x0, 0 <grub_file_size>
    3490:	add	x0, x0, #0x0
    3494:	ldr	x1, [x0]
    3498:	ldr	x0, [sp, #64]
    349c:	bl	0 <grub_memcmp>
    34a0:	cmp	w0, #0x0
    34a4:	b.eq	34ac <parse_note+0x1bc>  // b.none
    34a8:	b	3914 <parse_note+0x624>
    34ac:	ldr	x0, [sp, #32]
    34b0:	mov	w1, #0x1                   	// #1
    34b4:	str	w1, [x0, #60]
    34b8:	ldr	x0, [sp, #72]
    34bc:	ldr	w0, [x0, #8]
    34c0:	cmp	w0, #0x10
    34c4:	b.eq	38b4 <parse_note+0x5c4>  // b.none
    34c8:	cmp	w0, #0x10
    34cc:	b.hi	38d8 <parse_note+0x5e8>  // b.pmore
    34d0:	cmp	w0, #0xf
    34d4:	b.eq	3894 <parse_note+0x5a4>  // b.none
    34d8:	cmp	w0, #0xf
    34dc:	b.hi	38d8 <parse_note+0x5e8>  // b.pmore
    34e0:	cmp	w0, #0x9
    34e4:	b.eq	36b8 <parse_note+0x3c8>  // b.none
    34e8:	cmp	w0, #0x9
    34ec:	b.hi	38d8 <parse_note+0x5e8>  // b.pmore
    34f0:	cmp	w0, #0x8
    34f4:	b.eq	365c <parse_note+0x36c>  // b.none
    34f8:	cmp	w0, #0x8
    34fc:	b.hi	38d8 <parse_note+0x5e8>  // b.pmore
    3500:	cmp	w0, #0x7
    3504:	b.eq	3628 <parse_note+0x338>  // b.none
    3508:	cmp	w0, #0x7
    350c:	b.hi	38d8 <parse_note+0x5e8>  // b.pmore
    3510:	cmp	w0, #0x6
    3514:	b.eq	35f4 <parse_note+0x304>  // b.none
    3518:	cmp	w0, #0x6
    351c:	b.hi	38d8 <parse_note+0x5e8>  // b.pmore
    3520:	cmp	w0, #0x5
    3524:	b.eq	35c0 <parse_note+0x2d0>  // b.none
    3528:	cmp	w0, #0x5
    352c:	b.hi	38d8 <parse_note+0x5e8>  // b.pmore
    3530:	cmp	w0, #0x4
    3534:	b.eq	35ac <parse_note+0x2bc>  // b.none
    3538:	cmp	w0, #0x4
    353c:	b.hi	38d8 <parse_note+0x5e8>  // b.pmore
    3540:	cmp	w0, #0x3
    3544:	b.eq	3598 <parse_note+0x2a8>  // b.none
    3548:	cmp	w0, #0x3
    354c:	b.hi	38d8 <parse_note+0x5e8>  // b.pmore
    3550:	cmp	w0, #0x1
    3554:	b.eq	3564 <parse_note+0x274>  // b.none
    3558:	cmp	w0, #0x2
    355c:	b.eq	3578 <parse_note+0x288>  // b.none
    3560:	b	38d8 <parse_note+0x5e8>
    3564:	ldr	x0, [sp, #48]
    3568:	ldr	x1, [x0]
    356c:	ldr	x0, [sp, #32]
    3570:	str	x1, [x0, #24]
    3574:	b	3914 <parse_note+0x624>
    3578:	ldr	x0, [sp, #48]
    357c:	ldr	x1, [x0]
    3580:	ldr	x0, [sp, #32]
    3584:	str	x1, [x0, #32]
    3588:	ldr	x0, [sp, #32]
    358c:	mov	w1, #0x1                   	// #1
    3590:	str	w1, [x0, #56]
    3594:	b	3914 <parse_note+0x624>
    3598:	ldr	x0, [sp, #48]
    359c:	ldr	x1, [x0]
    35a0:	ldr	x0, [sp, #32]
    35a4:	str	x1, [x0, #16]
    35a8:	b	3914 <parse_note+0x624>
    35ac:	ldr	x0, [sp, #48]
    35b0:	ldr	x1, [x0]
    35b4:	ldr	x0, [sp, #32]
    35b8:	str	x1, [x0, #40]
    35bc:	b	3914 <parse_note+0x624>
    35c0:	ldr	x4, [sp, #48]
    35c4:	adrp	x0, 0 <grub_file_size>
    35c8:	add	x0, x0, #0x0
    35cc:	ldr	x3, [x0]
    35d0:	adrp	x0, 0 <grub_file_size>
    35d4:	add	x0, x0, #0x0
    35d8:	ldr	x2, [x0]
    35dc:	mov	w1, #0xdd                  	// #221
    35e0:	adrp	x0, 0 <grub_file_size>
    35e4:	add	x0, x0, #0x0
    35e8:	ldr	x0, [x0]
    35ec:	bl	0 <grub_real_dprintf>
    35f0:	b	3914 <parse_note+0x624>
    35f4:	ldr	x4, [sp, #48]
    35f8:	adrp	x0, 0 <grub_file_size>
    35fc:	add	x0, x0, #0x0
    3600:	ldr	x3, [x0]
    3604:	adrp	x0, 0 <grub_file_size>
    3608:	add	x0, x0, #0x0
    360c:	ldr	x2, [x0]
    3610:	mov	w1, #0xe0                  	// #224
    3614:	adrp	x0, 0 <grub_file_size>
    3618:	add	x0, x0, #0x0
    361c:	ldr	x0, [x0]
    3620:	bl	0 <grub_real_dprintf>
    3624:	b	3914 <parse_note+0x624>
    3628:	ldr	x4, [sp, #48]
    362c:	adrp	x0, 0 <grub_file_size>
    3630:	add	x0, x0, #0x0
    3634:	ldr	x3, [x0]
    3638:	adrp	x0, 0 <grub_file_size>
    363c:	add	x0, x0, #0x0
    3640:	ldr	x2, [x0]
    3644:	mov	w1, #0xe3                  	// #227
    3648:	adrp	x0, 0 <grub_file_size>
    364c:	add	x0, x0, #0x0
    3650:	ldr	x0, [x0]
    3654:	bl	0 <grub_real_dprintf>
    3658:	b	3914 <parse_note+0x624>
    365c:	ldr	w0, [sp, #56]
    3660:	cmp	w0, #0x6
    3664:	b.ls	36a0 <parse_note+0x3b0>  // b.plast
    3668:	ldr	w0, [sp, #56]
    366c:	cmp	w0, #0x7
    3670:	b.ne	367c <parse_note+0x38c>  // b.any
    3674:	mov	x0, #0x7                   	// #7
    3678:	b	3680 <parse_note+0x390>
    367c:	mov	x0, #0x8                   	// #8
    3680:	mov	x2, x0
    3684:	adrp	x0, 0 <grub_file_size>
    3688:	add	x0, x0, #0x0
    368c:	ldr	x1, [x0]
    3690:	ldr	x0, [sp, #48]
    3694:	bl	0 <grub_memcmp>
    3698:	cmp	w0, #0x0
    369c:	b.eq	3914 <parse_note+0x624>  // b.none
    36a0:	adrp	x0, 0 <grub_file_size>
    36a4:	add	x0, x0, #0x0
    36a8:	ldr	x1, [x0]
    36ac:	mov	w0, #0x15                  	// #21
    36b0:	bl	0 <grub_error>
    36b4:	b	393c <parse_note+0x64c>
    36b8:	ldr	x0, [sp, #32]
    36bc:	ldr	w0, [x0, #80]
    36c0:	ldr	w6, [sp, #56]
    36c4:	mov	w5, w0
    36c8:	ldr	x4, [sp, #48]
    36cc:	adrp	x0, 0 <grub_file_size>
    36d0:	add	x0, x0, #0x0
    36d4:	ldr	x3, [x0]
    36d8:	adrp	x0, 0 <grub_file_size>
    36dc:	add	x0, x0, #0x0
    36e0:	ldr	x2, [x0]
    36e4:	mov	w1, #0xec                  	// #236
    36e8:	adrp	x0, 0 <grub_file_size>
    36ec:	add	x0, x0, #0x0
    36f0:	ldr	x0, [x0]
    36f4:	bl	0 <grub_real_dprintf>
    36f8:	ldr	x0, [sp, #32]
    36fc:	ldr	w0, [x0, #80]
    3700:	cmp	w0, #0x1
    3704:	b.eq	372c <parse_note+0x43c>  // b.none
    3708:	ldr	x0, [sp, #32]
    370c:	ldr	w0, [x0, #80]
    3710:	cmp	w0, #0x2
    3714:	b.eq	372c <parse_note+0x43c>  // b.none
    3718:	ldr	x0, [sp, #32]
    371c:	ldr	w0, [x0, #80]
    3720:	cmp	w0, #0x3
    3724:	b.eq	372c <parse_note+0x43c>  // b.none
    3728:	b	3914 <parse_note+0x624>
    372c:	ldr	w0, [sp, #56]
    3730:	cmp	w0, #0x2
    3734:	b.ls	3788 <parse_note+0x498>  // b.plast
    3738:	ldr	w0, [sp, #56]
    373c:	cmp	w0, #0x3
    3740:	b.ne	374c <parse_note+0x45c>  // b.any
    3744:	mov	x0, #0x3                   	// #3
    3748:	b	3750 <parse_note+0x460>
    374c:	mov	x0, #0x4                   	// #4
    3750:	mov	x2, x0
    3754:	adrp	x0, 0 <grub_file_size>
    3758:	add	x0, x0, #0x0
    375c:	ldr	x1, [x0]
    3760:	ldr	x0, [sp, #48]
    3764:	bl	0 <grub_memcmp>
    3768:	cmp	w0, #0x0
    376c:	b.ne	3788 <parse_note+0x498>  // b.any
    3770:	ldr	x0, [sp, #32]
    3774:	mov	w1, #0x1                   	// #1
    3778:	str	w1, [x0, #72]
    377c:	ldr	x0, [sp, #32]
    3780:	mov	w1, #0x2                   	// #2
    3784:	str	w1, [x0, #80]
    3788:	ldr	w0, [sp, #56]
    378c:	cmp	w0, #0x6
    3790:	b.ls	37e4 <parse_note+0x4f4>  // b.plast
    3794:	ldr	w0, [sp, #56]
    3798:	cmp	w0, #0x7
    379c:	b.ne	37a8 <parse_note+0x4b8>  // b.any
    37a0:	mov	x0, #0x7                   	// #7
    37a4:	b	37ac <parse_note+0x4bc>
    37a8:	mov	x0, #0x8                   	// #8
    37ac:	mov	x2, x0
    37b0:	adrp	x0, 0 <grub_file_size>
    37b4:	add	x0, x0, #0x0
    37b8:	ldr	x1, [x0]
    37bc:	ldr	x0, [sp, #48]
    37c0:	bl	0 <grub_memcmp>
    37c4:	cmp	w0, #0x0
    37c8:	b.ne	37e4 <parse_note+0x4f4>  // b.any
    37cc:	ldr	x0, [sp, #32]
    37d0:	mov	w1, #0x1                   	// #1
    37d4:	str	w1, [x0, #72]
    37d8:	ldr	x0, [sp, #32]
    37dc:	mov	w1, #0x3                   	// #3
    37e0:	str	w1, [x0, #80]
    37e4:	ldr	w0, [sp, #56]
    37e8:	cmp	w0, #0xa
    37ec:	b.ls	3840 <parse_note+0x550>  // b.plast
    37f0:	ldr	w0, [sp, #56]
    37f4:	cmp	w0, #0xb
    37f8:	b.ne	3804 <parse_note+0x514>  // b.any
    37fc:	mov	x0, #0xb                   	// #11
    3800:	b	3808 <parse_note+0x518>
    3804:	mov	x0, #0xc                   	// #12
    3808:	mov	x2, x0
    380c:	adrp	x0, 0 <grub_file_size>
    3810:	add	x0, x0, #0x0
    3814:	ldr	x1, [x0]
    3818:	ldr	x0, [sp, #48]
    381c:	bl	0 <grub_memcmp>
    3820:	cmp	w0, #0x0
    3824:	b.ne	3840 <parse_note+0x550>  // b.any
    3828:	ldr	x0, [sp, #32]
    382c:	mov	w1, #0x1                   	// #1
    3830:	str	w1, [x0, #72]
    3834:	ldr	x0, [sp, #32]
    3838:	mov	w1, #0x3                   	// #3
    383c:	str	w1, [x0, #80]
    3840:	ldr	w0, [sp, #56]
    3844:	cmp	w0, #0x1
    3848:	b.ls	3914 <parse_note+0x624>  // b.plast
    384c:	ldr	w0, [sp, #56]
    3850:	cmp	w0, #0x2
    3854:	b.ne	3860 <parse_note+0x570>  // b.any
    3858:	mov	x0, #0x2                   	// #2
    385c:	b	3864 <parse_note+0x574>
    3860:	mov	x0, #0x3                   	// #3
    3864:	mov	x2, x0
    3868:	adrp	x0, 0 <grub_file_size>
    386c:	add	x0, x0, #0x0
    3870:	ldr	x1, [x0]
    3874:	ldr	x0, [sp, #48]
    3878:	bl	0 <grub_memcmp>
    387c:	cmp	w0, #0x0
    3880:	b.ne	3914 <parse_note+0x624>  // b.any
    3884:	ldr	x0, [sp, #32]
    3888:	mov	w1, #0x1                   	// #1
    388c:	str	w1, [x0, #80]
    3890:	b	3914 <parse_note+0x624>
    3894:	ldr	x0, [sp, #48]
    3898:	ldr	x1, [x0]
    389c:	ldr	x0, [sp, #32]
    38a0:	str	x1, [x0, #48]
    38a4:	ldr	x0, [sp, #32]
    38a8:	mov	w1, #0x1                   	// #1
    38ac:	str	w1, [x0, #68]
    38b0:	b	3914 <parse_note+0x624>
    38b4:	ldr	x0, [sp, #48]
    38b8:	ldr	w0, [x0]
    38bc:	cmp	w0, #0x0
    38c0:	cset	w0, ne  // ne = any
    38c4:	and	w0, w0, #0xff
    38c8:	mov	w1, w0
    38cc:	ldr	x0, [sp, #32]
    38d0:	str	w1, [x0, #76]
    38d4:	b	3914 <parse_note+0x624>
    38d8:	ldr	x0, [sp, #72]
    38dc:	ldr	w0, [x0, #8]
    38e0:	mov	w4, w0
    38e4:	adrp	x0, 0 <grub_file_size>
    38e8:	add	x0, x0, #0x0
    38ec:	ldr	x3, [x0]
    38f0:	adrp	x0, 0 <grub_file_size>
    38f4:	add	x0, x0, #0x0
    38f8:	ldr	x2, [x0]
    38fc:	mov	w1, #0x110                 	// #272
    3900:	adrp	x0, 0 <grub_file_size>
    3904:	add	x0, x0, #0x0
    3908:	ldr	x0, [x0]
    390c:	bl	0 <grub_real_dprintf>
    3910:	nop
    3914:	ldr	x1, [sp, #88]
    3918:	ldr	x0, [sp, #80]
    391c:	sub	x0, x1, x0
    3920:	asr	x0, x0, #2
    3924:	mov	x1, x0
    3928:	ldr	x0, [sp, #16]
    392c:	lsr	x0, x0, #2
    3930:	cmp	x1, x0
    3934:	b.lt	33e4 <parse_note+0xf4>  // b.tstop
    3938:	mov	w0, #0x0                   	// #0
    393c:	ldp	x29, x30, [sp], #96
    3940:	ret
    3944:	nop
	...

00000000000039c8 <grub_xen_get_info64>:
    39c8:	stp	x29, x30, [sp, #-128]!
    39cc:	mov	x29, sp
    39d0:	str	x0, [sp, #24]
    39d4:	str	x1, [sp, #16]
    39d8:	ldr	x0, [sp, #24]
    39dc:	ldrh	w0, [x0, #68]
    39e0:	and	x0, x0, #0xffff
    39e4:	str	x0, [sp, #96]
    39e8:	ldr	x0, [sp, #24]
    39ec:	ldrh	w0, [x0, #66]
    39f0:	and	x0, x0, #0xffff
    39f4:	str	x0, [sp, #88]
    39f8:	ldr	x1, [sp, #96]
    39fc:	ldr	x0, [sp, #88]
    3a00:	mul	x0, x1, x0
    3a04:	str	x0, [sp, #80]
    3a08:	ldr	x0, [sp, #16]
    3a0c:	str	xzr, [x0, #8]
    3a10:	ldr	x0, [sp, #16]
    3a14:	mov	x1, #0xffffffffffffffff    	// #-1
    3a18:	str	x1, [x0]
    3a1c:	ldr	x0, [sp, #24]
    3a20:	ldr	x1, [x0, #32]
    3a24:	ldr	x0, [sp, #16]
    3a28:	str	x1, [x0, #24]
    3a2c:	ldr	x0, [sp, #24]
    3a30:	bl	0 <grub_elf64_load_phdrs>
    3a34:	ldr	x0, [sp, #24]
    3a38:	ldr	x0, [x0, #72]
    3a3c:	str	x0, [sp, #104]
    3a40:	b	3b18 <grub_xen_get_info64+0x150>
    3a44:	ldr	x0, [sp, #104]
    3a48:	ldr	w0, [x0]
    3a4c:	cmp	w0, #0x4
    3a50:	b.ne	3a90 <grub_xen_get_info64+0xc8>  // b.any
    3a54:	ldr	x0, [sp, #104]
    3a58:	ldr	x1, [x0, #8]
    3a5c:	ldr	x0, [sp, #104]
    3a60:	ldr	x0, [x0, #32]
    3a64:	mov	x3, x0
    3a68:	mov	x2, x1
    3a6c:	ldr	x1, [sp, #16]
    3a70:	ldr	x0, [sp, #24]
    3a74:	bl	32f0 <parse_note>
    3a78:	str	w0, [sp, #116]
    3a7c:	ldr	w0, [sp, #116]
    3a80:	cmp	w0, #0x0
    3a84:	b.eq	3a90 <grub_xen_get_info64+0xc8>  // b.none
    3a88:	ldr	w0, [sp, #116]
    3a8c:	b	3eb4 <grub_xen_get_info64+0x4ec>
    3a90:	ldr	x0, [sp, #104]
    3a94:	ldr	w0, [x0]
    3a98:	cmp	w0, #0x1
    3a9c:	b.ne	3b08 <grub_xen_get_info64+0x140>  // b.any
    3aa0:	ldr	x0, [sp, #104]
    3aa4:	ldr	x0, [x0, #24]
    3aa8:	str	x0, [sp, #72]
    3aac:	ldr	x0, [sp, #16]
    3ab0:	ldr	x0, [x0]
    3ab4:	ldr	x1, [sp, #72]
    3ab8:	cmp	x1, x0
    3abc:	b.cs	3acc <grub_xen_get_info64+0x104>  // b.hs, b.nlast
    3ac0:	ldr	x0, [sp, #16]
    3ac4:	ldr	x1, [sp, #72]
    3ac8:	str	x1, [x0]
    3acc:	ldr	x0, [sp, #104]
    3ad0:	ldr	x1, [x0, #40]
    3ad4:	ldr	x0, [sp, #72]
    3ad8:	add	x1, x1, x0
    3adc:	ldr	x0, [sp, #16]
    3ae0:	ldr	x0, [x0, #8]
    3ae4:	cmp	x1, x0
    3ae8:	b.ls	3b0c <grub_xen_get_info64+0x144>  // b.plast
    3aec:	ldr	x0, [sp, #104]
    3af0:	ldr	x1, [x0, #40]
    3af4:	ldr	x0, [sp, #72]
    3af8:	add	x1, x1, x0
    3afc:	ldr	x0, [sp, #16]
    3b00:	str	x1, [x0, #8]
    3b04:	b	3b0c <grub_xen_get_info64+0x144>
    3b08:	nop
    3b0c:	ldr	x0, [sp, #104]
    3b10:	add	x0, x0, #0x38
    3b14:	str	x0, [sp, #104]
    3b18:	ldr	x0, [sp, #104]
    3b1c:	cmp	x0, #0x0
    3b20:	b.eq	3b58 <grub_xen_get_info64+0x190>  // b.none
    3b24:	ldr	x0, [sp, #24]
    3b28:	ldr	x2, [x0, #72]
    3b2c:	ldr	x0, [sp, #24]
    3b30:	ldrh	w0, [x0, #64]
    3b34:	and	x1, x0, #0xffff
    3b38:	mov	x0, x1
    3b3c:	lsl	x0, x0, #3
    3b40:	sub	x0, x0, x1
    3b44:	lsl	x0, x0, #3
    3b48:	add	x0, x2, x0
    3b4c:	ldr	x1, [sp, #104]
    3b50:	cmp	x1, x0
    3b54:	b.cc	3a44 <grub_xen_get_info64+0x7c>  // b.lo, b.ul, b.last
    3b58:	ldr	x0, [sp, #16]
    3b5c:	ldr	w0, [x0, #60]
    3b60:	cmp	w0, #0x0
    3b64:	b.eq	3b70 <grub_xen_get_info64+0x1a8>  // b.none
    3b68:	mov	w0, #0x0                   	// #0
    3b6c:	b	3eb4 <grub_xen_get_info64+0x4ec>
    3b70:	ldr	x0, [sp, #96]
    3b74:	cmp	x0, #0x0
    3b78:	b.eq	3b88 <grub_xen_get_info64+0x1c0>  // b.none
    3b7c:	ldr	x0, [sp, #88]
    3b80:	cmp	x0, #0x0
    3b84:	b.ne	3ba0 <grub_xen_get_info64+0x1d8>  // b.any
    3b88:	adrp	x0, 0 <grub_file_size>
    3b8c:	add	x0, x0, #0x0
    3b90:	ldr	x1, [x0]
    3b94:	mov	w0, #0x15                  	// #21
    3b98:	bl	0 <grub_error>
    3b9c:	b	3eb4 <grub_xen_get_info64+0x4ec>
    3ba0:	ldr	x0, [sp, #80]
    3ba4:	bl	0 <grub_malloc>
    3ba8:	str	x0, [sp, #64]
    3bac:	ldr	x0, [sp, #64]
    3bb0:	cmp	x0, #0x0
    3bb4:	b.ne	3bcc <grub_xen_get_info64+0x204>  // b.any
    3bb8:	adrp	x0, 0 <grub_file_size>
    3bbc:	add	x0, x0, #0x0
    3bc0:	ldr	x0, [x0]
    3bc4:	ldr	w0, [x0]
    3bc8:	b	3eb4 <grub_xen_get_info64+0x4ec>
    3bcc:	ldr	x0, [sp, #24]
    3bd0:	ldr	x2, [x0]
    3bd4:	ldr	x0, [sp, #24]
    3bd8:	ldr	x0, [x0, #48]
    3bdc:	mov	x1, x0
    3be0:	mov	x0, x2
    3be4:	bl	0 <grub_file_seek>
    3be8:	cmn	x0, #0x1
    3bec:	b.ne	3c08 <grub_xen_get_info64+0x240>  // b.any
    3bf0:	adrp	x0, 0 <grub_file_size>
    3bf4:	add	x0, x0, #0x0
    3bf8:	ldr	x0, [x0]
    3bfc:	ldr	w0, [x0]
    3c00:	str	w0, [sp, #116]
    3c04:	b	3ea8 <grub_xen_get_info64+0x4e0>
    3c08:	ldr	x0, [sp, #24]
    3c0c:	ldr	x0, [x0]
    3c10:	ldr	x2, [sp, #80]
    3c14:	ldr	x1, [sp, #64]
    3c18:	bl	0 <grub_file_read>
    3c1c:	mov	x1, x0
    3c20:	ldr	x0, [sp, #80]
    3c24:	cmp	x1, x0
    3c28:	b.eq	3c88 <grub_xen_get_info64+0x2c0>  // b.none
    3c2c:	adrp	x0, 0 <grub_file_size>
    3c30:	add	x0, x0, #0x0
    3c34:	ldr	x0, [x0]
    3c38:	ldr	w0, [x0]
    3c3c:	cmp	w0, #0x0
    3c40:	b.eq	3c5c <grub_xen_get_info64+0x294>  // b.none
    3c44:	adrp	x0, 0 <grub_file_size>
    3c48:	add	x0, x0, #0x0
    3c4c:	ldr	x0, [x0]
    3c50:	ldr	w0, [x0]
    3c54:	str	w0, [sp, #116]
    3c58:	b	3ea8 <grub_xen_get_info64+0x4e0>
    3c5c:	ldr	x0, [sp, #24]
    3c60:	ldr	x0, [x0]
    3c64:	ldr	x0, [x0]
    3c68:	mov	x2, x0
    3c6c:	adrp	x0, 0 <grub_file_size>
    3c70:	add	x0, x0, #0x0
    3c74:	ldr	x1, [x0]
    3c78:	mov	w0, #0x15                  	// #21
    3c7c:	bl	0 <grub_error>
    3c80:	str	w0, [sp, #116]
    3c84:	b	3ea8 <grub_xen_get_info64+0x4e0>
    3c88:	ldr	x0, [sp, #24]
    3c8c:	ldrh	w0, [x0, #70]
    3c90:	and	x1, x0, #0xffff
    3c94:	ldr	x0, [sp, #88]
    3c98:	mul	x0, x1, x0
    3c9c:	ldr	x1, [sp, #64]
    3ca0:	add	x0, x1, x0
    3ca4:	str	x0, [sp, #120]
    3ca8:	ldr	x0, [sp, #120]
    3cac:	ldr	x0, [x0, #24]
    3cb0:	str	x0, [sp, #56]
    3cb4:	ldr	x0, [sp, #64]
    3cb8:	str	x0, [sp, #120]
    3cbc:	b	3d14 <grub_xen_get_info64+0x34c>
    3cc0:	ldr	x0, [sp, #120]
    3cc4:	ldr	w0, [x0, #4]
    3cc8:	cmp	w0, #0x7
    3ccc:	b.ne	3d04 <grub_xen_get_info64+0x33c>  // b.any
    3cd0:	ldr	x0, [sp, #120]
    3cd4:	ldr	x1, [x0, #24]
    3cd8:	ldr	x0, [sp, #120]
    3cdc:	ldr	x0, [x0, #32]
    3ce0:	mov	x3, x0
    3ce4:	mov	x2, x1
    3ce8:	ldr	x1, [sp, #16]
    3cec:	ldr	x0, [sp, #24]
    3cf0:	bl	32f0 <parse_note>
    3cf4:	str	w0, [sp, #116]
    3cf8:	ldr	w0, [sp, #116]
    3cfc:	cmp	w0, #0x0
    3d00:	b.ne	3ea4 <grub_xen_get_info64+0x4dc>  // b.any
    3d04:	ldr	x1, [sp, #120]
    3d08:	ldr	x0, [sp, #88]
    3d0c:	add	x0, x1, x0
    3d10:	str	x0, [sp, #120]
    3d14:	ldr	x1, [sp, #96]
    3d18:	ldr	x0, [sp, #88]
    3d1c:	mul	x0, x1, x0
    3d20:	ldr	x1, [sp, #64]
    3d24:	add	x0, x1, x0
    3d28:	ldr	x1, [sp, #120]
    3d2c:	cmp	x1, x0
    3d30:	b.cc	3cc0 <grub_xen_get_info64+0x2f8>  // b.lo, b.ul, b.last
    3d34:	ldr	x0, [sp, #16]
    3d38:	ldr	w0, [x0, #60]
    3d3c:	cmp	w0, #0x0
    3d40:	b.eq	3d4c <grub_xen_get_info64+0x384>  // b.none
    3d44:	str	wzr, [sp, #116]
    3d48:	b	3ea8 <grub_xen_get_info64+0x4e0>
    3d4c:	ldr	x0, [sp, #64]
    3d50:	str	x0, [sp, #120]
    3d54:	b	3e68 <grub_xen_get_info64+0x4a0>
    3d58:	add	x0, sp, #0x28
    3d5c:	mov	x2, #0xc                   	// #12
    3d60:	mov	w1, #0x0                   	// #0
    3d64:	bl	0 <grub_memset>
    3d68:	ldr	x0, [sp, #24]
    3d6c:	ldr	x2, [x0]
    3d70:	ldr	x0, [sp, #120]
    3d74:	ldr	w0, [x0]
    3d78:	mov	w1, w0
    3d7c:	ldr	x0, [sp, #56]
    3d80:	add	x0, x1, x0
    3d84:	mov	x1, x0
    3d88:	mov	x0, x2
    3d8c:	bl	0 <grub_file_seek>
    3d90:	cmn	x0, #0x1
    3d94:	b.ne	3db0 <grub_xen_get_info64+0x3e8>  // b.any
    3d98:	adrp	x0, 0 <grub_file_size>
    3d9c:	add	x0, x0, #0x0
    3da0:	ldr	x0, [x0]
    3da4:	ldr	w0, [x0]
    3da8:	str	w0, [sp, #116]
    3dac:	b	3ea8 <grub_xen_get_info64+0x4e0>
    3db0:	ldr	x0, [sp, #24]
    3db4:	ldr	x0, [x0]
    3db8:	add	x1, sp, #0x28
    3dbc:	mov	x2, #0xc                   	// #12
    3dc0:	bl	0 <grub_file_read>
    3dc4:	cmp	x0, #0xc
    3dc8:	b.eq	3dfc <grub_xen_get_info64+0x434>  // b.none
    3dcc:	adrp	x0, 0 <grub_file_size>
    3dd0:	add	x0, x0, #0x0
    3dd4:	ldr	x0, [x0]
    3dd8:	ldr	w0, [x0]
    3ddc:	cmp	w0, #0x0
    3de0:	b.eq	3e4c <grub_xen_get_info64+0x484>  // b.none
    3de4:	adrp	x0, 0 <grub_file_size>
    3de8:	add	x0, x0, #0x0
    3dec:	ldr	x0, [x0]
    3df0:	ldr	w0, [x0]
    3df4:	str	w0, [sp, #116]
    3df8:	b	3ea8 <grub_xen_get_info64+0x4e0>
    3dfc:	add	x3, sp, #0x28
    3e00:	mov	x2, #0xc                   	// #12
    3e04:	adrp	x0, 0 <grub_file_size>
    3e08:	add	x0, x0, #0x0
    3e0c:	ldr	x1, [x0]
    3e10:	mov	x0, x3
    3e14:	bl	0 <grub_memcmp>
    3e18:	cmp	w0, #0x0
    3e1c:	b.ne	3e54 <grub_xen_get_info64+0x48c>  // b.any
    3e20:	ldr	x0, [sp, #120]
    3e24:	ldr	x1, [x0, #24]
    3e28:	ldr	x0, [sp, #120]
    3e2c:	ldr	x0, [x0, #32]
    3e30:	mov	x3, x0
    3e34:	mov	x2, x1
    3e38:	ldr	x1, [sp, #16]
    3e3c:	ldr	x0, [sp, #24]
    3e40:	bl	2bf0 <parse_xen_guest>
    3e44:	str	w0, [sp, #116]
    3e48:	b	3ea8 <grub_xen_get_info64+0x4e0>
    3e4c:	nop
    3e50:	b	3e58 <grub_xen_get_info64+0x490>
    3e54:	nop
    3e58:	ldr	x1, [sp, #120]
    3e5c:	ldr	x0, [sp, #88]
    3e60:	add	x0, x1, x0
    3e64:	str	x0, [sp, #120]
    3e68:	ldr	x1, [sp, #96]
    3e6c:	ldr	x0, [sp, #88]
    3e70:	mul	x0, x1, x0
    3e74:	ldr	x1, [sp, #64]
    3e78:	add	x0, x1, x0
    3e7c:	ldr	x1, [sp, #120]
    3e80:	cmp	x1, x0
    3e84:	b.cc	3d58 <grub_xen_get_info64+0x390>  // b.lo, b.ul, b.last
    3e88:	adrp	x0, 0 <grub_file_size>
    3e8c:	add	x0, x0, #0x0
    3e90:	ldr	x1, [x0]
    3e94:	mov	w0, #0x15                  	// #21
    3e98:	bl	0 <grub_error>
    3e9c:	str	w0, [sp, #116]
    3ea0:	b	3ea8 <grub_xen_get_info64+0x4e0>
    3ea4:	nop
    3ea8:	ldr	x0, [sp, #64]
    3eac:	bl	0 <grub_free>
    3eb0:	ldr	w0, [sp, #116]
    3eb4:	ldp	x29, x30, [sp], #128
    3eb8:	ret
    3ebc:	nop
	...
