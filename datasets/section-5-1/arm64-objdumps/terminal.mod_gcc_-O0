
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//terminal.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xe68>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	str	x3, [sp, #16]
  18:	mov	w4, #0x0                   	// #0
  1c:	ldr	x3, [sp, #16]
  20:	ldr	x2, [sp, #24]
  24:	ldr	x1, [sp, #32]
  28:	ldr	x0, [sp, #40]
  2c:	bl	0 <grub_register_command_prio>
  30:	ldp	x29, x30, [sp], #48
  34:	ret
  38:	stp	x29, x30, [sp, #-144]!
  3c:	mov	x29, sp
  40:	stp	x19, x20, [sp, #16]
  44:	str	w0, [sp, #92]
  48:	str	x1, [sp, #80]
  4c:	str	x2, [sp, #72]
  50:	str	x3, [sp, #64]
  54:	str	x4, [sp, #56]
  58:	str	x5, [sp, #48]
  5c:	str	x6, [sp, #40]
  60:	ldr	w0, [sp, #92]
  64:	cmp	w0, #0x0
  68:	b.ne	304 <grub_mod_init-0xb64>  // b.any
  6c:	ldr	x0, [sp, #48]
  70:	bl	0 <grub_puts_>
  74:	ldr	x0, [sp, #72]
  78:	ldr	x0, [x0]
  7c:	str	x0, [sp, #128]
  80:	b	ac <grub_mod_init-0xdbc>
  84:	ldr	x0, [sp, #128]
  88:	ldr	x0, [x0, #16]
  8c:	mov	x1, x0
  90:	adrp	x0, 0 <grub_mod_init-0xe68>
  94:	add	x0, x0, #0x0
  98:	ldr	x0, [x0]
  9c:	bl	0 <grub_printf>
  a0:	ldr	x0, [sp, #128]
  a4:	ldr	x0, [x0]
  a8:	str	x0, [sp, #128]
  ac:	ldr	x0, [sp, #128]
  b0:	cmp	x0, #0x0
  b4:	b.ne	84 <grub_mod_init-0xde4>  // b.any
  b8:	adrp	x0, 0 <grub_mod_init-0xe68>
  bc:	add	x0, x0, #0x0
  c0:	ldr	x0, [x0]
  c4:	bl	0 <grub_printf>
  c8:	ldr	x0, [sp, #40]
  cc:	bl	0 <grub_puts_>
  d0:	ldr	x0, [sp, #64]
  d4:	ldr	x0, [x0]
  d8:	str	x0, [sp, #128]
  dc:	b	108 <grub_mod_init-0xd60>
  e0:	ldr	x0, [sp, #128]
  e4:	ldr	x0, [x0, #16]
  e8:	mov	x1, x0
  ec:	adrp	x0, 0 <grub_mod_init-0xe68>
  f0:	add	x0, x0, #0x0
  f4:	ldr	x0, [x0]
  f8:	bl	0 <grub_printf>
  fc:	ldr	x0, [sp, #128]
 100:	ldr	x0, [x0]
 104:	str	x0, [sp, #128]
 108:	ldr	x0, [sp, #128]
 10c:	cmp	x0, #0x0
 110:	b.ne	e0 <grub_mod_init-0xd88>  // b.any
 114:	ldr	x0, [sp, #56]
 118:	str	x0, [sp, #120]
 11c:	b	2e0 <grub_mod_init-0xb88>
 120:	ldr	x0, [sp, #64]
 124:	ldr	x0, [x0]
 128:	str	x0, [sp, #128]
 12c:	b	1d4 <grub_mod_init-0xc94>
 130:	ldr	x0, [sp, #128]
 134:	ldr	x2, [x0, #16]
 138:	ldr	x0, [sp, #120]
 13c:	ldr	x0, [x0, #8]
 140:	mov	x1, x0
 144:	mov	x0, x2
 148:	bl	0 <grub_strcmp>
 14c:	cmp	w0, #0x0
 150:	b.eq	1e0 <grub_mod_init-0xc88>  // b.none
 154:	ldr	x0, [sp, #120]
 158:	ldr	x0, [x0, #8]
 15c:	ldrb	w0, [x0]
 160:	cmp	w0, #0x0
 164:	b.eq	1c8 <grub_mod_init-0xca0>  // b.none
 168:	ldr	x0, [sp, #120]
 16c:	ldr	x19, [x0, #8]
 170:	ldr	x0, [sp, #120]
 174:	ldr	x0, [x0, #8]
 178:	bl	0 <grub_strlen>
 17c:	sub	x0, x0, #0x1
 180:	add	x0, x19, x0
 184:	ldrb	w0, [x0]
 188:	cmp	w0, #0x2a
 18c:	b.ne	1c8 <grub_mod_init-0xca0>  // b.any
 190:	ldr	x0, [sp, #128]
 194:	ldr	x19, [x0, #16]
 198:	ldr	x0, [sp, #120]
 19c:	ldr	x20, [x0, #8]
 1a0:	ldr	x0, [sp, #120]
 1a4:	ldr	x0, [x0, #8]
 1a8:	bl	0 <grub_strlen>
 1ac:	sub	x0, x0, #0x1
 1b0:	mov	x2, x0
 1b4:	mov	x1, x20
 1b8:	mov	x0, x19
 1bc:	bl	0 <grub_memcmp>
 1c0:	cmp	w0, #0x0
 1c4:	b.eq	1e0 <grub_mod_init-0xc88>  // b.none
 1c8:	ldr	x0, [sp, #128]
 1cc:	ldr	x0, [x0]
 1d0:	str	x0, [sp, #128]
 1d4:	ldr	x0, [sp, #128]
 1d8:	cmp	x0, #0x0
 1dc:	b.ne	130 <grub_mod_init-0xd38>  // b.any
 1e0:	ldr	x0, [sp, #128]
 1e4:	cmp	x0, #0x0
 1e8:	b.ne	2ac <grub_mod_init-0xbbc>  // b.any
 1ec:	ldr	x0, [sp, #72]
 1f0:	ldr	x0, [x0]
 1f4:	str	x0, [sp, #128]
 1f8:	b	2a0 <grub_mod_init-0xbc8>
 1fc:	ldr	x0, [sp, #128]
 200:	ldr	x2, [x0, #16]
 204:	ldr	x0, [sp, #120]
 208:	ldr	x0, [x0, #8]
 20c:	mov	x1, x0
 210:	mov	x0, x2
 214:	bl	0 <grub_strcmp>
 218:	cmp	w0, #0x0
 21c:	b.eq	2ac <grub_mod_init-0xbbc>  // b.none
 220:	ldr	x0, [sp, #120]
 224:	ldr	x0, [x0, #8]
 228:	ldrb	w0, [x0]
 22c:	cmp	w0, #0x0
 230:	b.eq	294 <grub_mod_init-0xbd4>  // b.none
 234:	ldr	x0, [sp, #120]
 238:	ldr	x19, [x0, #8]
 23c:	ldr	x0, [sp, #120]
 240:	ldr	x0, [x0, #8]
 244:	bl	0 <grub_strlen>
 248:	sub	x0, x0, #0x1
 24c:	add	x0, x19, x0
 250:	ldrb	w0, [x0]
 254:	cmp	w0, #0x2a
 258:	b.ne	294 <grub_mod_init-0xbd4>  // b.any
 25c:	ldr	x0, [sp, #128]
 260:	ldr	x19, [x0, #16]
 264:	ldr	x0, [sp, #120]
 268:	ldr	x20, [x0, #8]
 26c:	ldr	x0, [sp, #120]
 270:	ldr	x0, [x0, #8]
 274:	bl	0 <grub_strlen>
 278:	sub	x0, x0, #0x1
 27c:	mov	x2, x0
 280:	mov	x1, x20
 284:	mov	x0, x19
 288:	bl	0 <grub_memcmp>
 28c:	cmp	w0, #0x0
 290:	b.eq	2ac <grub_mod_init-0xbbc>  // b.none
 294:	ldr	x0, [sp, #128]
 298:	ldr	x0, [x0]
 29c:	str	x0, [sp, #128]
 2a0:	ldr	x0, [sp, #128]
 2a4:	cmp	x0, #0x0
 2a8:	b.ne	1fc <grub_mod_init-0xc6c>  // b.any
 2ac:	ldr	x0, [sp, #128]
 2b0:	cmp	x0, #0x0
 2b4:	b.ne	2d4 <grub_mod_init-0xb94>  // b.any
 2b8:	ldr	x0, [sp, #120]
 2bc:	ldr	x0, [x0, #8]
 2c0:	mov	x1, x0
 2c4:	adrp	x0, 0 <grub_mod_init-0xe68>
 2c8:	add	x0, x0, #0x0
 2cc:	ldr	x0, [x0]
 2d0:	bl	0 <grub_printf>
 2d4:	ldr	x0, [sp, #120]
 2d8:	ldr	x0, [x0]
 2dc:	str	x0, [sp, #120]
 2e0:	ldr	x0, [sp, #120]
 2e4:	cmp	x0, #0x0
 2e8:	b.ne	120 <grub_mod_init-0xd48>  // b.any
 2ec:	adrp	x0, 0 <grub_mod_init-0xe68>
 2f0:	add	x0, x0, #0x0
 2f4:	ldr	x0, [x0]
 2f8:	bl	0 <grub_printf>
 2fc:	mov	w0, #0x0                   	// #0
 300:	b	ccc <grub_mod_init-0x19c>
 304:	str	wzr, [sp, #140]
 308:	ldr	x0, [sp, #80]
 30c:	ldr	x2, [x0]
 310:	adrp	x0, 0 <grub_mod_init-0xe68>
 314:	add	x0, x0, #0x0
 318:	ldr	x1, [x0]
 31c:	mov	x0, x2
 320:	bl	0 <grub_strcmp>
 324:	cmp	w0, #0x0
 328:	b.eq	350 <grub_mod_init-0xb18>  // b.none
 32c:	ldr	x0, [sp, #80]
 330:	ldr	x2, [x0]
 334:	adrp	x0, 0 <grub_mod_init-0xe68>
 338:	add	x0, x0, #0x0
 33c:	ldr	x1, [x0]
 340:	mov	x0, x2
 344:	bl	0 <grub_strcmp>
 348:	cmp	w0, #0x0
 34c:	b.ne	35c <grub_mod_init-0xb0c>  // b.any
 350:	ldr	w0, [sp, #140]
 354:	add	w0, w0, #0x1
 358:	str	w0, [sp, #140]
 35c:	ldr	w1, [sp, #140]
 360:	ldr	w0, [sp, #92]
 364:	cmp	w1, w0
 368:	b.ne	75c <grub_mod_init-0x70c>  // b.any
 36c:	adrp	x0, 0 <grub_mod_init-0xe68>
 370:	add	x0, x0, #0x0
 374:	ldr	x1, [x0]
 378:	mov	w0, #0x12                  	// #18
 37c:	bl	0 <grub_error>
 380:	b	ccc <grub_mod_init-0x19c>
 384:	str	wzr, [sp, #116]
 388:	ldr	x0, [sp, #64]
 38c:	ldr	x0, [x0]
 390:	str	x0, [sp, #128]
 394:	b	428 <grub_mod_init-0xa40>
 398:	ldrsw	x0, [sp, #140]
 39c:	lsl	x0, x0, #3
 3a0:	ldr	x1, [sp, #80]
 3a4:	add	x0, x1, x0
 3a8:	ldr	x2, [x0]
 3ac:	ldr	x0, [sp, #128]
 3b0:	ldr	x0, [x0, #16]
 3b4:	mov	x1, x0
 3b8:	mov	x0, x2
 3bc:	bl	0 <grub_strcmp>
 3c0:	cmp	w0, #0x0
 3c4:	b.eq	434 <grub_mod_init-0xa34>  // b.none
 3c8:	ldrsw	x0, [sp, #140]
 3cc:	lsl	x0, x0, #3
 3d0:	ldr	x1, [sp, #80]
 3d4:	add	x0, x1, x0
 3d8:	ldr	x2, [x0]
 3dc:	adrp	x0, 0 <grub_mod_init-0xe68>
 3e0:	add	x0, x0, #0x0
 3e4:	ldr	x1, [x0]
 3e8:	mov	x0, x2
 3ec:	bl	0 <grub_strcmp>
 3f0:	cmp	w0, #0x0
 3f4:	b.ne	41c <grub_mod_init-0xa4c>  // b.any
 3f8:	ldr	x0, [sp, #128]
 3fc:	ldr	x0, [x0, #16]
 400:	mov	x1, x0
 404:	adrp	x0, 0 <grub_mod_init-0xe68>
 408:	add	x0, x0, #0x0
 40c:	ldr	x0, [x0]
 410:	bl	0 <grub_strcmp>
 414:	cmp	w0, #0x0
 418:	b.eq	434 <grub_mod_init-0xa34>  // b.none
 41c:	ldr	x0, [sp, #128]
 420:	ldr	x0, [x0]
 424:	str	x0, [sp, #128]
 428:	ldr	x0, [sp, #128]
 42c:	cmp	x0, #0x0
 430:	b.ne	398 <grub_mod_init-0xad0>  // b.any
 434:	ldr	x0, [sp, #128]
 438:	cmp	x0, #0x0
 43c:	b.ne	4ec <grub_mod_init-0x97c>  // b.any
 440:	ldr	x0, [sp, #72]
 444:	ldr	x0, [x0]
 448:	str	x0, [sp, #128]
 44c:	b	4e0 <grub_mod_init-0x988>
 450:	ldrsw	x0, [sp, #140]
 454:	lsl	x0, x0, #3
 458:	ldr	x1, [sp, #80]
 45c:	add	x0, x1, x0
 460:	ldr	x2, [x0]
 464:	ldr	x0, [sp, #128]
 468:	ldr	x0, [x0, #16]
 46c:	mov	x1, x0
 470:	mov	x0, x2
 474:	bl	0 <grub_strcmp>
 478:	cmp	w0, #0x0
 47c:	b.eq	4ec <grub_mod_init-0x97c>  // b.none
 480:	ldrsw	x0, [sp, #140]
 484:	lsl	x0, x0, #3
 488:	ldr	x1, [sp, #80]
 48c:	add	x0, x1, x0
 490:	ldr	x2, [x0]
 494:	adrp	x0, 0 <grub_mod_init-0xe68>
 498:	add	x0, x0, #0x0
 49c:	ldr	x1, [x0]
 4a0:	mov	x0, x2
 4a4:	bl	0 <grub_strcmp>
 4a8:	cmp	w0, #0x0
 4ac:	b.ne	4d4 <grub_mod_init-0x994>  // b.any
 4b0:	ldr	x0, [sp, #128]
 4b4:	ldr	x0, [x0, #16]
 4b8:	mov	x1, x0
 4bc:	adrp	x0, 0 <grub_mod_init-0xe68>
 4c0:	add	x0, x0, #0x0
 4c4:	ldr	x0, [x0]
 4c8:	bl	0 <grub_strcmp>
 4cc:	cmp	w0, #0x0
 4d0:	b.eq	4ec <grub_mod_init-0x97c>  // b.none
 4d4:	ldr	x0, [sp, #128]
 4d8:	ldr	x0, [x0]
 4dc:	str	x0, [sp, #128]
 4e0:	ldr	x0, [sp, #128]
 4e4:	cmp	x0, #0x0
 4e8:	b.ne	450 <grub_mod_init-0xa18>  // b.any
 4ec:	ldr	x0, [sp, #128]
 4f0:	cmp	x0, #0x0
 4f4:	b.ne	74c <grub_mod_init-0x71c>  // b.any
 4f8:	ldr	w0, [sp, #116]
 4fc:	cmp	w0, #0x0
 500:	b.eq	534 <grub_mod_init-0x934>  // b.none
 504:	ldrsw	x0, [sp, #140]
 508:	lsl	x0, x0, #3
 50c:	ldr	x1, [sp, #80]
 510:	add	x0, x1, x0
 514:	ldr	x0, [x0]
 518:	mov	x2, x0
 51c:	adrp	x0, 0 <grub_mod_init-0xe68>
 520:	add	x0, x0, #0x0
 524:	ldr	x1, [x0]
 528:	mov	w0, #0x12                  	// #18
 52c:	bl	0 <grub_error>
 530:	b	ccc <grub_mod_init-0x19c>
 534:	ldr	x0, [sp, #56]
 538:	str	x0, [sp, #120]
 53c:	b	688 <grub_mod_init-0x7e0>
 540:	ldrsw	x0, [sp, #140]
 544:	lsl	x0, x0, #3
 548:	ldr	x1, [sp, #80]
 54c:	add	x0, x1, x0
 550:	ldr	x2, [x0]
 554:	ldr	x0, [sp, #120]
 558:	ldr	x0, [x0, #8]
 55c:	mov	x1, x0
 560:	mov	x0, x2
 564:	bl	0 <grub_strcmp>
 568:	cmp	w0, #0x0
 56c:	b.eq	644 <grub_mod_init-0x824>  // b.none
 570:	ldrsw	x0, [sp, #140]
 574:	lsl	x0, x0, #3
 578:	ldr	x1, [sp, #80]
 57c:	add	x0, x1, x0
 580:	ldr	x2, [x0]
 584:	adrp	x0, 0 <grub_mod_init-0xe68>
 588:	add	x0, x0, #0x0
 58c:	ldr	x1, [x0]
 590:	mov	x0, x2
 594:	bl	0 <grub_strcmp>
 598:	cmp	w0, #0x0
 59c:	b.ne	5c4 <grub_mod_init-0x8a4>  // b.any
 5a0:	ldr	x0, [sp, #120]
 5a4:	ldr	x0, [x0, #8]
 5a8:	mov	x1, x0
 5ac:	adrp	x0, 0 <grub_mod_init-0xe68>
 5b0:	add	x0, x0, #0x0
 5b4:	ldr	x0, [x0]
 5b8:	bl	0 <grub_strcmp>
 5bc:	cmp	w0, #0x0
 5c0:	b.eq	644 <grub_mod_init-0x824>  // b.none
 5c4:	ldr	x0, [sp, #120]
 5c8:	ldr	x0, [x0, #8]
 5cc:	ldrb	w0, [x0]
 5d0:	cmp	w0, #0x0
 5d4:	b.eq	67c <grub_mod_init-0x7ec>  // b.none
 5d8:	ldr	x0, [sp, #120]
 5dc:	ldr	x19, [x0, #8]
 5e0:	ldr	x0, [sp, #120]
 5e4:	ldr	x0, [x0, #8]
 5e8:	bl	0 <grub_strlen>
 5ec:	sub	x0, x0, #0x1
 5f0:	add	x0, x19, x0
 5f4:	ldrb	w0, [x0]
 5f8:	cmp	w0, #0x2a
 5fc:	b.ne	67c <grub_mod_init-0x7ec>  // b.any
 600:	ldrsw	x0, [sp, #140]
 604:	lsl	x0, x0, #3
 608:	ldr	x1, [sp, #80]
 60c:	add	x0, x1, x0
 610:	ldr	x19, [x0]
 614:	ldr	x0, [sp, #120]
 618:	ldr	x20, [x0, #8]
 61c:	ldr	x0, [sp, #120]
 620:	ldr	x0, [x0, #8]
 624:	bl	0 <grub_strlen>
 628:	sub	x0, x0, #0x1
 62c:	mov	x2, x0
 630:	mov	x1, x20
 634:	mov	x0, x19
 638:	bl	0 <grub_memcmp>
 63c:	cmp	w0, #0x0
 640:	b.ne	67c <grub_mod_init-0x7ec>  // b.any
 644:	ldr	x0, [sp, #120]
 648:	ldr	x0, [x0, #16]
 64c:	bl	0 <grub_dl_load>
 650:	str	x0, [sp, #96]
 654:	ldr	x0, [sp, #96]
 658:	cmp	x0, #0x0
 65c:	b.eq	668 <grub_mod_init-0x800>  // b.none
 660:	ldr	x0, [sp, #96]
 664:	bl	0 <grub_dl_ref>
 668:	adrp	x0, 0 <grub_mod_init-0xe68>
 66c:	add	x0, x0, #0x0
 670:	ldr	x0, [x0]
 674:	str	wzr, [x0]
 678:	b	694 <grub_mod_init-0x7d4>
 67c:	ldr	x0, [sp, #120]
 680:	ldr	x0, [x0]
 684:	str	x0, [sp, #120]
 688:	ldr	x0, [sp, #120]
 68c:	cmp	x0, #0x0
 690:	b.ne	540 <grub_mod_init-0x928>  // b.any
 694:	ldrsw	x0, [sp, #140]
 698:	lsl	x0, x0, #3
 69c:	ldr	x1, [sp, #80]
 6a0:	add	x0, x1, x0
 6a4:	ldr	x3, [x0]
 6a8:	mov	x2, #0xa                   	// #10
 6ac:	adrp	x0, 0 <grub_mod_init-0xe68>
 6b0:	add	x0, x0, #0x0
 6b4:	ldr	x1, [x0]
 6b8:	mov	x0, x3
 6bc:	bl	0 <grub_memcmp>
 6c0:	cmp	w0, #0x0
 6c4:	b.ne	704 <grub_mod_init-0x764>  // b.any
 6c8:	adrp	x0, 0 <grub_mod_init-0xe68>
 6cc:	add	x0, x0, #0x0
 6d0:	ldr	x0, [x0]
 6d4:	ldr	x0, [x0]
 6d8:	cmp	x0, #0x0
 6dc:	b.eq	704 <grub_mod_init-0x764>  // b.none
 6e0:	adrp	x0, 0 <grub_mod_init-0xe68>
 6e4:	add	x0, x0, #0x0
 6e8:	ldr	x0, [x0]
 6ec:	ldr	x1, [x0]
 6f0:	mov	w0, #0x1                   	// #1
 6f4:	blr	x1
 6f8:	mov	w0, #0x1                   	// #1
 6fc:	str	w0, [sp, #116]
 700:	b	748 <grub_mod_init-0x720>
 704:	ldr	x0, [sp, #120]
 708:	cmp	x0, #0x0
 70c:	b.ne	740 <grub_mod_init-0x728>  // b.any
 710:	ldrsw	x0, [sp, #140]
 714:	lsl	x0, x0, #3
 718:	ldr	x1, [sp, #80]
 71c:	add	x0, x1, x0
 720:	ldr	x0, [x0]
 724:	mov	x2, x0
 728:	adrp	x0, 0 <grub_mod_init-0xe68>
 72c:	add	x0, x0, #0x0
 730:	ldr	x1, [x0]
 734:	mov	w0, #0x12                  	// #18
 738:	bl	0 <grub_error>
 73c:	b	ccc <grub_mod_init-0x19c>
 740:	mov	w0, #0x1                   	// #1
 744:	str	w0, [sp, #116]
 748:	b	388 <grub_mod_init-0xae0>
 74c:	nop
 750:	ldr	w0, [sp, #140]
 754:	add	w0, w0, #0x1
 758:	str	w0, [sp, #140]
 75c:	ldr	w1, [sp, #140]
 760:	ldr	w0, [sp, #92]
 764:	cmp	w1, w0
 768:	b.lt	384 <grub_mod_init-0xae4>  // b.tstop
 76c:	ldr	x0, [sp, #80]
 770:	ldr	x2, [x0]
 774:	adrp	x0, 0 <grub_mod_init-0xe68>
 778:	add	x0, x0, #0x0
 77c:	ldr	x1, [x0]
 780:	mov	x0, x2
 784:	bl	0 <grub_strcmp>
 788:	cmp	w0, #0x0
 78c:	b.ne	8c8 <grub_mod_init-0x5a0>  // b.any
 790:	mov	w0, #0x1                   	// #1
 794:	str	w0, [sp, #140]
 798:	b	8b0 <grub_mod_init-0x5b8>
 79c:	ldr	x0, [sp, #64]
 7a0:	ldr	x0, [x0]
 7a4:	str	x0, [sp, #128]
 7a8:	b	83c <grub_mod_init-0x62c>
 7ac:	ldrsw	x0, [sp, #140]
 7b0:	lsl	x0, x0, #3
 7b4:	ldr	x1, [sp, #80]
 7b8:	add	x0, x1, x0
 7bc:	ldr	x2, [x0]
 7c0:	ldr	x0, [sp, #128]
 7c4:	ldr	x0, [x0, #16]
 7c8:	mov	x1, x0
 7cc:	mov	x0, x2
 7d0:	bl	0 <grub_strcmp>
 7d4:	cmp	w0, #0x0
 7d8:	b.eq	848 <grub_mod_init-0x620>  // b.none
 7dc:	ldrsw	x0, [sp, #140]
 7e0:	lsl	x0, x0, #3
 7e4:	ldr	x1, [sp, #80]
 7e8:	add	x0, x1, x0
 7ec:	ldr	x2, [x0]
 7f0:	adrp	x0, 0 <grub_mod_init-0xe68>
 7f4:	add	x0, x0, #0x0
 7f8:	ldr	x1, [x0]
 7fc:	mov	x0, x2
 800:	bl	0 <grub_strcmp>
 804:	cmp	w0, #0x0
 808:	b.ne	830 <grub_mod_init-0x638>  // b.any
 80c:	ldr	x0, [sp, #128]
 810:	ldr	x0, [x0, #16]
 814:	mov	x1, x0
 818:	adrp	x0, 0 <grub_mod_init-0xe68>
 81c:	add	x0, x0, #0x0
 820:	ldr	x0, [x0]
 824:	bl	0 <grub_strcmp>
 828:	cmp	w0, #0x0
 82c:	b.eq	848 <grub_mod_init-0x620>  // b.none
 830:	ldr	x0, [sp, #128]
 834:	ldr	x0, [x0]
 838:	str	x0, [sp, #128]
 83c:	ldr	x0, [sp, #128]
 840:	cmp	x0, #0x0
 844:	b.ne	7ac <grub_mod_init-0x6bc>  // b.any
 848:	ldr	x0, [sp, #128]
 84c:	cmp	x0, #0x0
 850:	b.eq	8a4 <grub_mod_init-0x5c4>  // b.none
 854:	ldr	x0, [sp, #128]
 858:	ldr	x0, [x0, #24]
 85c:	cmp	x0, #0x0
 860:	b.eq	890 <grub_mod_init-0x5d8>  // b.none
 864:	ldr	x0, [sp, #128]
 868:	ldr	x1, [x0, #24]
 86c:	ldr	x0, [sp, #128]
 870:	blr	x1
 874:	cmp	w0, #0x0
 878:	b.eq	890 <grub_mod_init-0x5d8>  // b.none
 87c:	adrp	x0, 0 <grub_mod_init-0xe68>
 880:	add	x0, x0, #0x0
 884:	ldr	x0, [x0]
 888:	ldr	w0, [x0]
 88c:	b	ccc <grub_mod_init-0x19c>
 890:	ldr	x0, [sp, #128]
 894:	bl	0 <grub_list_remove>
 898:	ldr	x1, [sp, #128]
 89c:	ldr	x0, [sp, #72]
 8a0:	bl	0 <grub_list_push>
 8a4:	ldr	w0, [sp, #140]
 8a8:	add	w0, w0, #0x1
 8ac:	str	w0, [sp, #140]
 8b0:	ldr	w1, [sp, #140]
 8b4:	ldr	w0, [sp, #92]
 8b8:	cmp	w1, w0
 8bc:	b.lt	79c <grub_mod_init-0x6cc>  // b.tstop
 8c0:	mov	w0, #0x0                   	// #0
 8c4:	b	ccc <grub_mod_init-0x19c>
 8c8:	ldr	x0, [sp, #80]
 8cc:	ldr	x2, [x0]
 8d0:	adrp	x0, 0 <grub_mod_init-0xe68>
 8d4:	add	x0, x0, #0x0
 8d8:	ldr	x1, [x0]
 8dc:	mov	x0, x2
 8e0:	bl	0 <grub_strcmp>
 8e4:	cmp	w0, #0x0
 8e8:	b.ne	a44 <grub_mod_init-0x424>  // b.any
 8ec:	mov	w0, #0x1                   	// #1
 8f0:	str	w0, [sp, #140]
 8f4:	b	a2c <grub_mod_init-0x43c>
 8f8:	ldr	x0, [sp, #72]
 8fc:	ldr	x0, [x0]
 900:	str	x0, [sp, #128]
 904:	b	998 <grub_mod_init-0x4d0>
 908:	ldrsw	x0, [sp, #140]
 90c:	lsl	x0, x0, #3
 910:	ldr	x1, [sp, #80]
 914:	add	x0, x1, x0
 918:	ldr	x2, [x0]
 91c:	ldr	x0, [sp, #128]
 920:	ldr	x0, [x0, #16]
 924:	mov	x1, x0
 928:	mov	x0, x2
 92c:	bl	0 <grub_strcmp>
 930:	cmp	w0, #0x0
 934:	b.eq	9a4 <grub_mod_init-0x4c4>  // b.none
 938:	ldrsw	x0, [sp, #140]
 93c:	lsl	x0, x0, #3
 940:	ldr	x1, [sp, #80]
 944:	add	x0, x1, x0
 948:	ldr	x2, [x0]
 94c:	adrp	x0, 0 <grub_mod_init-0xe68>
 950:	add	x0, x0, #0x0
 954:	ldr	x1, [x0]
 958:	mov	x0, x2
 95c:	bl	0 <grub_strcmp>
 960:	cmp	w0, #0x0
 964:	b.ne	98c <grub_mod_init-0x4dc>  // b.any
 968:	ldr	x0, [sp, #128]
 96c:	ldr	x0, [x0, #16]
 970:	mov	x1, x0
 974:	adrp	x0, 0 <grub_mod_init-0xe68>
 978:	add	x0, x0, #0x0
 97c:	ldr	x0, [x0]
 980:	bl	0 <grub_strcmp>
 984:	cmp	w0, #0x0
 988:	b.eq	9a4 <grub_mod_init-0x4c4>  // b.none
 98c:	ldr	x0, [sp, #128]
 990:	ldr	x0, [x0]
 994:	str	x0, [sp, #128]
 998:	ldr	x0, [sp, #128]
 99c:	cmp	x0, #0x0
 9a0:	b.ne	908 <grub_mod_init-0x560>  // b.any
 9a4:	ldr	x0, [sp, #128]
 9a8:	cmp	x0, #0x0
 9ac:	b.eq	a20 <grub_mod_init-0x448>  // b.none
 9b0:	ldr	x0, [sp, #128]
 9b4:	ldr	x0, [x0]
 9b8:	cmp	x0, #0x0
 9bc:	b.ne	9ec <grub_mod_init-0x47c>  // b.any
 9c0:	ldr	x0, [sp, #72]
 9c4:	ldr	x0, [x0]
 9c8:	ldr	x1, [sp, #128]
 9cc:	cmp	x1, x0
 9d0:	b.ne	9ec <grub_mod_init-0x47c>  // b.any
 9d4:	adrp	x0, 0 <grub_mod_init-0xe68>
 9d8:	add	x0, x0, #0x0
 9dc:	ldr	x1, [x0]
 9e0:	mov	w0, #0x12                  	// #18
 9e4:	bl	0 <grub_error>
 9e8:	b	ccc <grub_mod_init-0x19c>
 9ec:	ldr	x0, [sp, #128]
 9f0:	bl	0 <grub_list_remove>
 9f4:	ldr	x0, [sp, #128]
 9f8:	ldr	x0, [x0, #32]
 9fc:	cmp	x0, #0x0
 a00:	b.eq	a14 <grub_mod_init-0x454>  // b.none
 a04:	ldr	x0, [sp, #128]
 a08:	ldr	x1, [x0, #32]
 a0c:	ldr	x0, [sp, #128]
 a10:	blr	x1
 a14:	ldr	x1, [sp, #128]
 a18:	ldr	x0, [sp, #64]
 a1c:	bl	0 <grub_list_push>
 a20:	ldr	w0, [sp, #140]
 a24:	add	w0, w0, #0x1
 a28:	str	w0, [sp, #140]
 a2c:	ldr	w1, [sp, #140]
 a30:	ldr	w0, [sp, #92]
 a34:	cmp	w1, w0
 a38:	b.lt	8f8 <grub_mod_init-0x570>  // b.tstop
 a3c:	mov	w0, #0x0                   	// #0
 a40:	b	ccc <grub_mod_init-0x19c>
 a44:	str	wzr, [sp, #140]
 a48:	b	b60 <grub_mod_init-0x308>
 a4c:	ldr	x0, [sp, #64]
 a50:	ldr	x0, [x0]
 a54:	str	x0, [sp, #128]
 a58:	b	aec <grub_mod_init-0x37c>
 a5c:	ldrsw	x0, [sp, #140]
 a60:	lsl	x0, x0, #3
 a64:	ldr	x1, [sp, #80]
 a68:	add	x0, x1, x0
 a6c:	ldr	x2, [x0]
 a70:	ldr	x0, [sp, #128]
 a74:	ldr	x0, [x0, #16]
 a78:	mov	x1, x0
 a7c:	mov	x0, x2
 a80:	bl	0 <grub_strcmp>
 a84:	cmp	w0, #0x0
 a88:	b.eq	af8 <grub_mod_init-0x370>  // b.none
 a8c:	ldrsw	x0, [sp, #140]
 a90:	lsl	x0, x0, #3
 a94:	ldr	x1, [sp, #80]
 a98:	add	x0, x1, x0
 a9c:	ldr	x2, [x0]
 aa0:	adrp	x0, 0 <grub_mod_init-0xe68>
 aa4:	add	x0, x0, #0x0
 aa8:	ldr	x1, [x0]
 aac:	mov	x0, x2
 ab0:	bl	0 <grub_strcmp>
 ab4:	cmp	w0, #0x0
 ab8:	b.ne	ae0 <grub_mod_init-0x388>  // b.any
 abc:	ldr	x0, [sp, #128]
 ac0:	ldr	x0, [x0, #16]
 ac4:	mov	x1, x0
 ac8:	adrp	x0, 0 <grub_mod_init-0xe68>
 acc:	add	x0, x0, #0x0
 ad0:	ldr	x0, [x0]
 ad4:	bl	0 <grub_strcmp>
 ad8:	cmp	w0, #0x0
 adc:	b.eq	af8 <grub_mod_init-0x370>  // b.none
 ae0:	ldr	x0, [sp, #128]
 ae4:	ldr	x0, [x0]
 ae8:	str	x0, [sp, #128]
 aec:	ldr	x0, [sp, #128]
 af0:	cmp	x0, #0x0
 af4:	b.ne	a5c <grub_mod_init-0x40c>  // b.any
 af8:	ldr	x0, [sp, #128]
 afc:	cmp	x0, #0x0
 b00:	b.eq	b54 <grub_mod_init-0x314>  // b.none
 b04:	ldr	x0, [sp, #128]
 b08:	ldr	x0, [x0, #24]
 b0c:	cmp	x0, #0x0
 b10:	b.eq	b40 <grub_mod_init-0x328>  // b.none
 b14:	ldr	x0, [sp, #128]
 b18:	ldr	x1, [x0, #24]
 b1c:	ldr	x0, [sp, #128]
 b20:	blr	x1
 b24:	cmp	w0, #0x0
 b28:	b.eq	b40 <grub_mod_init-0x328>  // b.none
 b2c:	adrp	x0, 0 <grub_mod_init-0xe68>
 b30:	add	x0, x0, #0x0
 b34:	ldr	x0, [x0]
 b38:	ldr	w0, [x0]
 b3c:	b	ccc <grub_mod_init-0x19c>
 b40:	ldr	x0, [sp, #128]
 b44:	bl	0 <grub_list_remove>
 b48:	ldr	x1, [sp, #128]
 b4c:	ldr	x0, [sp, #72]
 b50:	bl	0 <grub_list_push>
 b54:	ldr	w0, [sp, #140]
 b58:	add	w0, w0, #0x1
 b5c:	str	w0, [sp, #140]
 b60:	ldr	w1, [sp, #140]
 b64:	ldr	w0, [sp, #92]
 b68:	cmp	w1, w0
 b6c:	b.lt	a4c <grub_mod_init-0x41c>  // b.tstop
 b70:	ldr	x0, [sp, #72]
 b74:	ldr	x0, [x0]
 b78:	str	x0, [sp, #128]
 b7c:	b	cbc <grub_mod_init-0x1ac>
 b80:	ldr	x0, [sp, #128]
 b84:	ldr	x0, [x0]
 b88:	str	x0, [sp, #104]
 b8c:	str	wzr, [sp, #140]
 b90:	b	c24 <grub_mod_init-0x244>
 b94:	ldrsw	x0, [sp, #140]
 b98:	lsl	x0, x0, #3
 b9c:	ldr	x1, [sp, #80]
 ba0:	add	x0, x1, x0
 ba4:	ldr	x2, [x0]
 ba8:	ldr	x0, [sp, #128]
 bac:	ldr	x0, [x0, #16]
 bb0:	mov	x1, x0
 bb4:	mov	x0, x2
 bb8:	bl	0 <grub_strcmp>
 bbc:	cmp	w0, #0x0
 bc0:	b.eq	c34 <grub_mod_init-0x234>  // b.none
 bc4:	ldrsw	x0, [sp, #140]
 bc8:	lsl	x0, x0, #3
 bcc:	ldr	x1, [sp, #80]
 bd0:	add	x0, x1, x0
 bd4:	ldr	x2, [x0]
 bd8:	adrp	x0, 0 <grub_mod_init-0xe68>
 bdc:	add	x0, x0, #0x0
 be0:	ldr	x1, [x0]
 be4:	mov	x0, x2
 be8:	bl	0 <grub_strcmp>
 bec:	cmp	w0, #0x0
 bf0:	b.ne	c18 <grub_mod_init-0x250>  // b.any
 bf4:	ldr	x0, [sp, #128]
 bf8:	ldr	x0, [x0, #16]
 bfc:	mov	x1, x0
 c00:	adrp	x0, 0 <grub_mod_init-0xe68>
 c04:	add	x0, x0, #0x0
 c08:	ldr	x0, [x0]
 c0c:	bl	0 <grub_strcmp>
 c10:	cmp	w0, #0x0
 c14:	b.eq	c34 <grub_mod_init-0x234>  // b.none
 c18:	ldr	w0, [sp, #140]
 c1c:	add	w0, w0, #0x1
 c20:	str	w0, [sp, #140]
 c24:	ldr	w1, [sp, #140]
 c28:	ldr	w0, [sp, #92]
 c2c:	cmp	w1, w0
 c30:	b.lt	b94 <grub_mod_init-0x2d4>  // b.tstop
 c34:	ldr	w1, [sp, #140]
 c38:	ldr	w0, [sp, #92]
 c3c:	cmp	w1, w0
 c40:	b.ne	cb4 <grub_mod_init-0x1b4>  // b.any
 c44:	ldr	x0, [sp, #128]
 c48:	ldr	x0, [x0]
 c4c:	cmp	x0, #0x0
 c50:	b.ne	c80 <grub_mod_init-0x1e8>  // b.any
 c54:	ldr	x0, [sp, #72]
 c58:	ldr	x0, [x0]
 c5c:	ldr	x1, [sp, #128]
 c60:	cmp	x1, x0
 c64:	b.ne	c80 <grub_mod_init-0x1e8>  // b.any
 c68:	adrp	x0, 0 <grub_mod_init-0xe68>
 c6c:	add	x0, x0, #0x0
 c70:	ldr	x1, [x0]
 c74:	mov	w0, #0x12                  	// #18
 c78:	bl	0 <grub_error>
 c7c:	b	ccc <grub_mod_init-0x19c>
 c80:	ldr	x0, [sp, #128]
 c84:	bl	0 <grub_list_remove>
 c88:	ldr	x0, [sp, #128]
 c8c:	ldr	x0, [x0, #32]
 c90:	cmp	x0, #0x0
 c94:	b.eq	ca8 <grub_mod_init-0x1c0>  // b.none
 c98:	ldr	x0, [sp, #128]
 c9c:	ldr	x1, [x0, #32]
 ca0:	ldr	x0, [sp, #128]
 ca4:	blr	x1
 ca8:	ldr	x1, [sp, #128]
 cac:	ldr	x0, [sp, #64]
 cb0:	bl	0 <grub_list_push>
 cb4:	ldr	x0, [sp, #104]
 cb8:	str	x0, [sp, #128]
 cbc:	ldr	x0, [sp, #128]
 cc0:	cmp	x0, #0x0
 cc4:	b.ne	b80 <grub_mod_init-0x2e8>  // b.any
 cc8:	mov	w0, #0x0                   	// #0
 ccc:	ldp	x19, x20, [sp, #16]
 cd0:	ldp	x29, x30, [sp], #144
 cd4:	ret
	...
 d38:	stp	x29, x30, [sp, #-48]!
 d3c:	mov	x29, sp
 d40:	str	x0, [sp, #40]
 d44:	str	w1, [sp, #36]
 d48:	str	x2, [sp, #24]
 d4c:	adrp	x0, 0 <grub_mod_init-0xe68>
 d50:	add	x0, x0, #0x0
 d54:	ldr	x0, [x0]
 d58:	ldr	x1, [x0]
 d5c:	adrp	x0, 0 <grub_mod_init-0xe68>
 d60:	add	x0, x0, #0x0
 d64:	ldr	x6, [x0]
 d68:	adrp	x0, 0 <grub_mod_init-0xe68>
 d6c:	add	x0, x0, #0x0
 d70:	ldr	x5, [x0]
 d74:	mov	x4, x1
 d78:	adrp	x0, 0 <grub_mod_init-0xe68>
 d7c:	add	x0, x0, #0x0
 d80:	ldr	x3, [x0]
 d84:	adrp	x0, 0 <grub_mod_init-0xe68>
 d88:	add	x0, x0, #0x0
 d8c:	ldr	x2, [x0]
 d90:	ldr	x1, [sp, #24]
 d94:	ldr	w0, [sp, #36]
 d98:	bl	38 <grub_mod_init-0xe30>
 d9c:	ldp	x29, x30, [sp], #48
 da0:	ret
 da4:	nop
	...
 dd0:	stp	x29, x30, [sp, #-48]!
 dd4:	mov	x29, sp
 dd8:	str	x0, [sp, #40]
 ddc:	str	w1, [sp, #36]
 de0:	str	x2, [sp, #24]
 de4:	adrp	x0, 0 <grub_mod_init-0xe68>
 de8:	add	x0, x0, #0x0
 dec:	ldr	x0, [x0]
 df0:	ldr	x1, [x0]
 df4:	adrp	x0, 0 <grub_mod_init-0xe68>
 df8:	add	x0, x0, #0x0
 dfc:	ldr	x6, [x0]
 e00:	adrp	x0, 0 <grub_mod_init-0xe68>
 e04:	add	x0, x0, #0x0
 e08:	ldr	x5, [x0]
 e0c:	mov	x4, x1
 e10:	adrp	x0, 0 <grub_mod_init-0xe68>
 e14:	add	x0, x0, #0x0
 e18:	ldr	x3, [x0]
 e1c:	adrp	x0, 0 <grub_mod_init-0xe68>
 e20:	add	x0, x0, #0x0
 e24:	ldr	x2, [x0]
 e28:	ldr	x1, [sp, #24]
 e2c:	ldr	w0, [sp, #36]
 e30:	bl	38 <grub_mod_init-0xe30>
 e34:	ldp	x29, x30, [sp], #48
 e38:	ret
 e3c:	nop
	...

0000000000000e68 <grub_mod_init>:
 e68:	stp	x29, x30, [sp, #-32]!
 e6c:	mov	x29, sp
 e70:	str	x0, [sp, #24]
 e74:	adrp	x0, 0 <grub_mod_init-0xe68>
 e78:	add	x0, x0, #0x0
 e7c:	ldr	x3, [x0]
 e80:	adrp	x0, 0 <grub_mod_init-0xe68>
 e84:	add	x0, x0, #0x0
 e88:	ldr	x2, [x0]
 e8c:	adrp	x0, 0 <grub_mod_init-0xe68>
 e90:	add	x0, x0, #0x0
 e94:	ldr	x1, [x0]
 e98:	adrp	x0, 0 <grub_mod_init-0xe68>
 e9c:	add	x0, x0, #0x0
 ea0:	ldr	x0, [x0]
 ea4:	bl	0 <grub_mod_init-0xe68>
 ea8:	mov	x1, x0
 eac:	adrp	x0, 0 <grub_mod_init-0xe68>
 eb0:	add	x0, x0, #0x0
 eb4:	ldr	x0, [x0]
 eb8:	str	x1, [x0]
 ebc:	adrp	x0, 0 <grub_mod_init-0xe68>
 ec0:	add	x0, x0, #0x0
 ec4:	ldr	x3, [x0]
 ec8:	adrp	x0, 0 <grub_mod_init-0xe68>
 ecc:	add	x0, x0, #0x0
 ed0:	ldr	x2, [x0]
 ed4:	adrp	x0, 0 <grub_mod_init-0xe68>
 ed8:	add	x0, x0, #0x0
 edc:	ldr	x1, [x0]
 ee0:	adrp	x0, 0 <grub_mod_init-0xe68>
 ee4:	add	x0, x0, #0x0
 ee8:	ldr	x0, [x0]
 eec:	bl	0 <grub_mod_init-0xe68>
 ef0:	mov	x1, x0
 ef4:	adrp	x0, 0 <grub_mod_init-0xe68>
 ef8:	add	x0, x0, #0x0
 efc:	ldr	x0, [x0]
 f00:	str	x1, [x0]
 f04:	nop
 f08:	ldp	x29, x30, [sp], #32
 f0c:	ret
	...

0000000000000f58 <grub_mod_fini>:
 f58:	stp	x29, x30, [sp, #-16]!
 f5c:	mov	x29, sp
 f60:	adrp	x0, 0 <grub_mod_init-0xe68>
 f64:	add	x0, x0, #0x0
 f68:	ldr	x0, [x0]
 f6c:	ldr	x0, [x0]
 f70:	bl	0 <grub_unregister_command>
 f74:	adrp	x0, 0 <grub_mod_init-0xe68>
 f78:	add	x0, x0, #0x0
 f7c:	ldr	x0, [x0]
 f80:	ldr	x0, [x0]
 f84:	bl	0 <grub_unregister_command>
 f88:	nop
 f8c:	ldp	x29, x30, [sp], #16
 f90:	ret
 f94:	nop
	...
