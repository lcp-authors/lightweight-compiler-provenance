
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ISO8859-1.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 11000 <gconv@@Base+0x10738>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xe0>:
     760:	adrp	x0, 11000 <gconv@@Base+0x10738>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 12000 <gconv@@Base+0x11738>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 12000 <gconv@@Base+0x11738>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 11000 <gconv@@Base+0x10738>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 12000 <gconv@@Base+0x11738>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 12000 <gconv@@Base+0x11738>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 11000 <gconv@@Base+0x10738>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 12000 <gconv@@Base+0x11738>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 11000 <gconv@@Base+0x10738>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 12000 <gconv@@Base+0x11738>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	w0, w1, #0xff
     83c:	ret

0000000000000840 <gconv_init@@Base>:
     840:	stp	x29, x30, [sp, #-32]!
     844:	mov	x29, sp
     848:	stp	x19, x20, [sp, #16]
     84c:	mov	x19, x0
     850:	adrp	x20, 1000 <gconv@@Base+0x738>
     854:	ldr	x0, [x0, #24]
     858:	add	x20, x20, #0x3b0
     85c:	mov	x1, x20
     860:	bl	730 <strcmp@plt>
     864:	cbnz	w0, 898 <gconv_init@@Base+0x58>
     868:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     86c:	mov	x2, #0x100000001           	// #4294967297
     870:	add	x0, x0, #0x838
     874:	mov	x1, #0x400000004           	// #17179869188
     878:	str	x0, [x19, #48]
     87c:	stp	x2, x1, [x19, #72]
     880:	str	xzr, [x19, #96]
     884:	mov	w0, #0x0                   	// #0
     888:	str	wzr, [x19, #88]
     88c:	ldp	x19, x20, [sp, #16]
     890:	ldp	x29, x30, [sp], #32
     894:	ret
     898:	ldr	x0, [x19, #32]
     89c:	mov	x1, x20
     8a0:	bl	730 <strcmp@plt>
     8a4:	cbnz	w0, 8c0 <gconv_init@@Base+0x80>
     8a8:	mov	x0, #0xffffffffffffffff    	// #-1
     8ac:	mov	x2, #0x400000004           	// #17179869188
     8b0:	mov	x1, #0x100000001           	// #4294967297
     8b4:	stp	x2, x1, [x19, #72]
     8b8:	str	x0, [x19, #96]
     8bc:	b	884 <gconv_init@@Base+0x44>
     8c0:	mov	w0, #0x1                   	// #1
     8c4:	b	88c <gconv_init@@Base+0x4c>

00000000000008c8 <gconv@@Base>:
     8c8:	stp	x29, x30, [sp, #-240]!
     8cc:	mov	x14, x0
     8d0:	mov	x11, x2
     8d4:	mov	x29, sp
     8d8:	stp	x21, x22, [sp, #32]
     8dc:	mov	x21, x1
     8e0:	adrp	x1, 11000 <gconv@@Base+0x10738>
     8e4:	stp	x27, x28, [sp, #80]
     8e8:	mov	x15, x4
     8ec:	ldr	w28, [x21, #16]
     8f0:	ldr	x1, [x1, #4056]
     8f4:	stp	x19, x20, [sp, #16]
     8f8:	mov	x20, x3
     8fc:	ldr	x0, [x1]
     900:	str	x0, [sp, #232]
     904:	mov	x0, #0x0                   	// #0
     908:	add	x1, x14, #0x68
     90c:	add	x0, x21, #0x30
     910:	stp	x23, x24, [sp, #48]
     914:	mov	w24, w7
     918:	stp	x25, x26, [sp, #64]
     91c:	mov	x23, #0x0                   	// #0
     920:	mov	x26, x5
     924:	stp	x1, x0, [sp, #128]
     928:	tbnz	w28, #0, 948 <gconv@@Base+0x80>
     92c:	ldr	x0, [x14, #104]
     930:	ldr	x23, [x14, #144]
     934:	cbz	x0, 948 <gconv@@Base+0x80>
     938:	adrp	x0, 11000 <gconv@@Base+0x10738>
     93c:	ldr	x0, [x0, #4040]
     940:	ldr	x0, [x0]
     944:	eor	x23, x23, x0
     948:	cbnz	w6, ec8 <gconv@@Base+0x600>
     94c:	cmp	x15, #0x0
     950:	add	x1, sp, #0xc0
     954:	csel	x2, x21, x15, eq  // eq = none
     958:	cmp	x26, #0x0
     95c:	ldr	x0, [x14, #96]
     960:	csel	x1, x1, xzr, ne  // ne = any
     964:	cmp	w24, #0x0
     968:	mov	x13, #0x0                   	// #0
     96c:	ldr	x9, [x2]
     970:	str	x1, [sp, #160]
     974:	cset	w1, ne  // ne = any
     978:	str	w1, [sp, #184]
     97c:	str	xzr, [sp, #192]
     980:	cmp	x0, #0x0
     984:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     988:	ldr	x22, [x11]
     98c:	ldr	x27, [x21, #8]
     990:	b.ne	c70 <gconv@@Base+0x3a8>  // b.any
     994:	add	x28, sp, #0xc8
     998:	add	x1, sp, #0xd8
     99c:	mov	x25, x21
     9a0:	mov	x21, x9
     9a4:	str	w24, [sp, #144]
     9a8:	mov	x24, x22
     9ac:	mov	x22, x11
     9b0:	str	x28, [sp, #152]
     9b4:	mov	x28, x13
     9b8:	stp	x15, x14, [sp, #112]
     9bc:	str	x1, [sp, #168]
     9c0:	add	x1, sp, #0xd0
     9c4:	str	x1, [sp, #176]
     9c8:	cbz	x26, 9d4 <gconv@@Base+0x10c>
     9cc:	ldr	x1, [x26]
     9d0:	add	x28, x28, x1
     9d4:	cbz	x0, ad0 <gconv@@Base+0x208>
     9d8:	stp	x24, x21, [sp, #208]
     9dc:	cmp	x20, x24
     9e0:	ldr	w7, [x25, #16]
     9e4:	b.eq	f24 <gconv@@Base+0x65c>  // b.none
     9e8:	and	w7, w7, #0x2
     9ec:	mov	x19, x21
     9f0:	mov	x0, x24
     9f4:	mov	w15, #0x4                   	// #4
     9f8:	mov	w18, #0x1c00                	// #7168
     9fc:	add	x3, x0, #0x4
     a00:	cmp	x20, x3
     a04:	b.cc	b58 <gconv@@Base+0x290>  // b.lo, b.ul, b.last
     a08:	cmp	x27, x19
     a0c:	b.ls	b64 <gconv@@Base+0x29c>  // b.plast
     a10:	ldr	w2, [x0]
     a14:	cmp	w2, #0xff
     a18:	b.hi	b88 <gconv@@Base+0x2c0>  // b.pmore
     a1c:	add	x3, x19, #0x1
     a20:	str	x3, [sp, #216]
     a24:	strb	w2, [x19]
     a28:	ldp	x0, x19, [sp, #208]
     a2c:	add	x0, x0, #0x4
     a30:	str	x0, [sp, #208]
     a34:	cmp	x20, x0
     a38:	b.ne	9fc <gconv@@Base+0x134>  // b.any
     a3c:	nop
     a40:	str	x0, [x22]
     a44:	ldr	x0, [sp, #112]
     a48:	cbnz	x0, b18 <gconv@@Base+0x250>
     a4c:	ldp	w1, w0, [x25, #16]
     a50:	add	w0, w0, #0x1
     a54:	str	w0, [x25, #20]
     a58:	tbnz	w1, #0, bc4 <gconv@@Base+0x2fc>
     a5c:	cmp	x21, x19
     a60:	b.cs	c60 <gconv@@Base+0x398>  // b.hs, b.nlast
     a64:	ldr	x1, [x25]
     a68:	mov	x0, x23
     a6c:	str	w15, [sp, #104]
     a70:	str	x1, [sp, #200]
     a74:	bl	740 <_dl_mcount_wrapper_check@plt>
     a78:	ldp	x0, x1, [sp, #128]
     a7c:	mov	x5, x26
     a80:	ldr	w7, [sp, #144]
     a84:	mov	x3, x19
     a88:	ldr	x2, [sp, #152]
     a8c:	mov	w6, #0x0                   	// #0
     a90:	mov	x4, #0x0                   	// #0
     a94:	blr	x23
     a98:	mov	w7, w0
     a9c:	ldr	w15, [sp, #104]
     aa0:	cmp	w0, #0x4
     aa4:	b.eq	b70 <gconv@@Base+0x2a8>  // b.none
     aa8:	ldr	x15, [sp, #200]
     aac:	cmp	x15, x19
     ab0:	b.ne	dc0 <gconv@@Base+0x4f8>  // b.any
     ab4:	ldr	x0, [sp, #120]
     ab8:	ldr	x0, [x0, #96]
     abc:	cbnz	w7, f14 <gconv@@Base+0x64c>
     ac0:	ldr	x24, [x22]
     ac4:	ldr	x21, [x25]
     ac8:	ldr	x28, [sp, #192]
     acc:	b	9c8 <gconv@@Base+0x100>
     ad0:	cmp	x20, x24
     ad4:	b.eq	bb0 <gconv@@Base+0x2e8>  // b.none
     ad8:	add	x0, x21, #0x4
     adc:	mov	x1, x24
     ae0:	cmp	x27, x0
     ae4:	b.cc	eb8 <gconv@@Base+0x5f0>  // b.lo, b.ul, b.last
     ae8:	ldrb	w2, [x1], #1
     aec:	mov	x19, x0
     af0:	stur	w2, [x0, #-4]
     af4:	cmp	x20, x1
     af8:	b.eq	bb8 <gconv@@Base+0x2f0>  // b.none
     afc:	add	x0, x19, #0x4
     b00:	cmp	x27, x0
     b04:	b.cs	ae8 <gconv@@Base+0x220>  // b.hs, b.nlast
     b08:	mov	w15, #0x5                   	// #5
     b0c:	str	x1, [x22]
     b10:	ldr	x0, [sp, #112]
     b14:	cbz	x0, a4c <gconv@@Base+0x184>
     b18:	mov	w25, w15
     b1c:	str	x19, [x0]
     b20:	adrp	x0, 11000 <gconv@@Base+0x10738>
     b24:	ldr	x0, [x0, #4056]
     b28:	ldr	x1, [sp, #232]
     b2c:	ldr	x0, [x0]
     b30:	eor	x0, x1, x0
     b34:	cbnz	x0, 12f8 <gconv@@Base+0xa30>
     b38:	mov	w0, w25
     b3c:	ldp	x19, x20, [sp, #16]
     b40:	ldp	x21, x22, [sp, #32]
     b44:	ldp	x23, x24, [sp, #48]
     b48:	ldp	x25, x26, [sp, #64]
     b4c:	ldp	x27, x28, [sp, #80]
     b50:	ldp	x29, x30, [sp], #240
     b54:	ret
     b58:	mov	w15, #0x7                   	// #7
     b5c:	ldr	x0, [sp, #208]
     b60:	b	a40 <gconv@@Base+0x178>
     b64:	mov	w15, #0x5                   	// #5
     b68:	ldr	x0, [sp, #208]
     b6c:	b	a40 <gconv@@Base+0x178>
     b70:	cmp	w15, #0x5
     b74:	b.eq	c54 <gconv@@Base+0x38c>  // b.none
     b78:	ldr	x0, [sp, #120]
     b7c:	mov	w7, w15
     b80:	ldr	x0, [x0, #96]
     b84:	b	abc <gconv@@Base+0x1f4>
     b88:	cmp	w18, w2, lsr #7
     b8c:	b.eq	e84 <gconv@@Base+0x5bc>  // b.none
     b90:	ldr	x0, [sp, #160]
     b94:	cbz	x0, 1088 <gconv@@Base+0x7c0>
     b98:	ldr	w0, [x25, #16]
     b9c:	tbnz	w0, #3, d7c <gconv@@Base+0x4b4>
     ba0:	ldr	x0, [sp, #208]
     ba4:	cbnz	w7, e90 <gconv@@Base+0x5c8>
     ba8:	mov	w15, #0x6                   	// #6
     bac:	b	a40 <gconv@@Base+0x178>
     bb0:	mov	x1, x20
     bb4:	mov	x19, x21
     bb8:	mov	w15, #0x4                   	// #4
     bbc:	str	x1, [x22]
     bc0:	b	b10 <gconv@@Base+0x248>
     bc4:	ldr	x14, [sp, #120]
     bc8:	mov	x21, x25
     bcc:	ldr	x1, [x26]
     bd0:	mov	w25, w15
     bd4:	ldr	x2, [sp, #192]
     bd8:	mov	x11, x22
     bdc:	ldr	x0, [x14, #96]
     be0:	str	x19, [x21]
     be4:	add	x1, x1, x2
     be8:	str	x1, [x26]
     bec:	cmp	x0, #0x0
     bf0:	ldr	w0, [sp, #184]
     bf4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     bf8:	ccmp	w25, #0x7, #0x0, ne  // ne = any
     bfc:	b.ne	b20 <gconv@@Base+0x258>  // b.any
     c00:	ldr	x3, [x11]
     c04:	sub	x0, x20, x3
     c08:	cmp	x0, #0x3
     c0c:	b.gt	12b8 <gconv@@Base+0x9f0>
     c10:	ldr	x4, [x21, #32]
     c14:	cmp	x3, x20
     c18:	mov	x0, x3
     c1c:	add	x1, x4, #0x4
     c20:	b.cs	1288 <gconv@@Base+0x9c0>  // b.hs, b.nlast
     c24:	add	x0, x0, #0x1
     c28:	str	x0, [x11]
     c2c:	cmp	x0, x20
     c30:	ldurb	w2, [x0, #-1]
     c34:	strb	w2, [x1], #1
     c38:	b.ne	c24 <gconv@@Base+0x35c>  // b.any
     c3c:	sub	w0, w0, w3
     c40:	ldr	w1, [x4]
     c44:	and	w1, w1, #0xfffffff8
     c48:	orr	w0, w1, w0
     c4c:	str	w0, [x4]
     c50:	b	b20 <gconv@@Base+0x258>
     c54:	ldr	x0, [sp, #120]
     c58:	ldr	x0, [x0, #96]
     c5c:	b	ac0 <gconv@@Base+0x1f8>
     c60:	ldr	x0, [sp, #120]
     c64:	mov	w7, w15
     c68:	ldr	x0, [x0, #96]
     c6c:	b	abc <gconv@@Base+0x1f4>
     c70:	ldr	x7, [x21, #32]
     c74:	ldr	w3, [x7]
     c78:	ands	w5, w3, #0x7
     c7c:	b.eq	994 <gconv@@Base+0xcc>  // b.none
     c80:	cbnz	x15, 1298 <gconv@@Base+0x9d0>
     c84:	stp	x22, x9, [sp, #208]
     c88:	cmp	w5, #0x4
     c8c:	b.hi	12fc <gconv@@Base+0xa34>  // b.pmore
     c90:	mov	w19, w5
     c94:	cbz	w5, 1030 <gconv@@Base+0x768>
     c98:	add	x6, x7, #0x3
     c9c:	add	x13, sp, #0xe0
     ca0:	mov	x0, #0x1                   	// #1
     ca4:	nop
     ca8:	add	x1, x13, x0
     cac:	ldrb	w4, [x6, x0]
     cb0:	cmp	x19, x0
     cb4:	add	x0, x0, #0x1
     cb8:	sturb	w4, [x1, #-1]
     cbc:	b.ne	ca8 <gconv@@Base+0x3e0>  // b.any
     cc0:	mov	x0, #0x4                   	// #4
     cc4:	sub	x0, x0, x19
     cc8:	add	x0, x22, x0
     ccc:	cmp	x20, x0
     cd0:	b.cc	1050 <gconv@@Base+0x788>  // b.lo, b.ul, b.last
     cd4:	cmp	x9, x27
     cd8:	mov	w25, #0x5                   	// #5
     cdc:	b.cs	b20 <gconv@@Base+0x258>  // b.hs, b.nlast
     ce0:	add	x0, x22, #0x1
     ce4:	add	x13, sp, #0xe0
     ce8:	add	x19, x19, #0x1
     cec:	str	x0, [sp, #208]
     cf0:	add	x4, x13, x19
     cf4:	cmp	x19, #0x3
     cf8:	ldurb	w1, [x0, #-1]
     cfc:	ccmp	x20, x0, #0x0, ls  // ls = plast
     d00:	add	x0, x0, #0x1
     d04:	sturb	w1, [x4, #-1]
     d08:	b.hi	ce8 <gconv@@Base+0x420>  // b.pmore
     d0c:	ldr	w0, [sp, #224]
     d10:	str	x13, [sp, #208]
     d14:	cmp	w0, #0xff
     d18:	b.hi	10b8 <gconv@@Base+0x7f0>  // b.pmore
     d1c:	add	x1, x9, #0x1
     d20:	str	x1, [sp, #216]
     d24:	strb	w0, [x9]
     d28:	ldr	x0, [sp, #208]
     d2c:	add	x0, x0, #0x4
     d30:	str	x0, [sp, #208]
     d34:	cmp	x0, x13
     d38:	b.eq	1040 <gconv@@Base+0x778>  // b.none
     d3c:	ldr	w3, [x7]
     d40:	sub	x13, x0, x13
     d44:	and	w5, w3, #0x7
     d48:	mov	w0, w5
     d4c:	cmp	x0, x13
     d50:	b.ge	131c <gconv@@Base+0xa54>  // b.tcont
     d54:	ldr	x22, [x11]
     d58:	sub	x0, x13, x0
     d5c:	and	w3, w3, #0xfffffff8
     d60:	add	x22, x22, x0
     d64:	str	x22, [x11]
     d68:	ldr	x13, [sp, #192]
     d6c:	ldr	x0, [x14, #96]
     d70:	ldr	x9, [sp, #216]
     d74:	str	w3, [x7]
     d78:	b	994 <gconv@@Base+0xcc>
     d7c:	ldp	x6, x5, [sp, #160]
     d80:	mov	x4, x20
     d84:	ldr	x2, [x22]
     d88:	mov	x1, x25
     d8c:	ldr	x0, [sp, #120]
     d90:	str	w7, [sp, #104]
     d94:	ldr	x3, [sp, #176]
     d98:	bl	700 <__gconv_transliterate@plt>
     d9c:	mov	w15, w0
     da0:	ldr	w7, [sp, #104]
     da4:	cmp	w0, #0x6
     da8:	mov	w18, #0x1c00                	// #7168
     dac:	b.eq	eb0 <gconv@@Base+0x5e8>  // b.none
     db0:	cmp	w0, #0x5
     db4:	ldp	x0, x19, [sp, #208]
     db8:	b.ne	a34 <gconv@@Base+0x16c>  // b.any
     dbc:	b	a40 <gconv@@Base+0x178>
     dc0:	mov	x0, #0x0                   	// #0
     dc4:	cbz	x26, dcc <gconv@@Base+0x504>
     dc8:	ldr	x0, [x26]
     dcc:	ldr	x1, [sp, #192]
     dd0:	add	x0, x0, x1
     dd4:	cmp	x0, x28
     dd8:	b.eq	f34 <gconv@@Base+0x66c>  // b.none
     ddc:	ldr	x0, [sp, #120]
     de0:	str	x24, [x22]
     de4:	ldr	x0, [x0, #96]
     de8:	cbz	x0, f5c <gconv@@Base+0x694>
     dec:	stp	x24, x21, [sp, #208]
     df0:	cmp	x20, x24
     df4:	ldr	w19, [x25, #16]
     df8:	b.eq	1188 <gconv@@Base+0x8c0>  // b.none
     dfc:	and	w19, w19, #0x2
     e00:	mov	x0, x21
     e04:	mov	x3, #0x4                   	// #4
     e08:	mov	w28, #0x1c00                	// #7168
     e0c:	add	x5, x24, #0x4
     e10:	cmp	x20, x5
     e14:	b.cc	f9c <gconv@@Base+0x6d4>  // b.lo, b.ul, b.last
     e18:	cmp	x15, x0
     e1c:	b.ls	fcc <gconv@@Base+0x704>  // b.plast
     e20:	ldr	w2, [x24]
     e24:	cmp	w2, #0xff
     e28:	b.hi	ffc <gconv@@Base+0x734>  // b.pmore
     e2c:	add	x4, x0, #0x1
     e30:	str	x4, [sp, #216]
     e34:	strb	w2, [x0]
     e38:	ldp	x24, x0, [sp, #208]
     e3c:	add	x24, x24, #0x4
     e40:	str	x24, [sp, #208]
     e44:	cmp	x20, x24
     e48:	b.ne	e0c <gconv@@Base+0x544>  // b.any
     e4c:	ldr	x15, [sp, #200]
     e50:	str	x20, [x22]
     e54:	cmp	x15, x0
     e58:	b.ne	fdc <gconv@@Base+0x714>  // b.any
     e5c:	cmp	x3, #0x5
     e60:	b.ne	fac <gconv@@Base+0x6e4>  // b.any
     e64:	cmp	x21, x0
     e68:	ldr	x0, [sp, #120]
     e6c:	ldr	x0, [x0, #96]
     e70:	b.ne	abc <gconv@@Base+0x1f4>  // b.any
     e74:	ldr	w1, [x25, #20]
     e78:	sub	w1, w1, #0x1
     e7c:	str	w1, [x25, #20]
     e80:	b	abc <gconv@@Base+0x1f4>
     e84:	mov	x0, x3
     e88:	str	x3, [sp, #208]
     e8c:	b	a34 <gconv@@Base+0x16c>
     e90:	ldr	x2, [sp, #160]
     e94:	add	x0, x0, #0x4
     e98:	mov	w15, #0x6                   	// #6
     e9c:	str	x0, [sp, #208]
     ea0:	ldr	x1, [x2]
     ea4:	add	x1, x1, #0x1
     ea8:	str	x1, [x2]
     eac:	b	a34 <gconv@@Base+0x16c>
     eb0:	ldr	x19, [sp, #216]
     eb4:	b	ba0 <gconv@@Base+0x2d8>
     eb8:	mov	x19, x21
     ebc:	mov	w15, #0x5                   	// #5
     ec0:	str	x1, [x22]
     ec4:	b	b10 <gconv@@Base+0x248>
     ec8:	cbnz	x15, 12d8 <gconv@@Base+0xa10>
     ecc:	ldr	x0, [x21, #32]
     ed0:	mov	w25, #0x0                   	// #0
     ed4:	str	xzr, [x0]
     ed8:	ldr	w0, [x21, #16]
     edc:	tbnz	w0, #0, b20 <gconv@@Base+0x258>
     ee0:	mov	x0, x23
     ee4:	str	w6, [sp, #104]
     ee8:	bl	740 <_dl_mcount_wrapper_check@plt>
     eec:	ldp	x0, x1, [sp, #128]
     ef0:	mov	w7, w24
     ef4:	ldr	w6, [sp, #104]
     ef8:	mov	x5, x26
     efc:	mov	x4, #0x0                   	// #0
     f00:	mov	x3, #0x0                   	// #0
     f04:	mov	x2, #0x0                   	// #0
     f08:	blr	x23
     f0c:	mov	w25, w0
     f10:	b	b20 <gconv@@Base+0x258>
     f14:	mov	x21, x25
     f18:	mov	x11, x22
     f1c:	mov	w25, w7
     f20:	b	bec <gconv@@Base+0x324>
     f24:	mov	x19, x21
     f28:	mov	x0, x20
     f2c:	mov	w15, #0x4                   	// #4
     f30:	b	a40 <gconv@@Base+0x178>
     f34:	ldr	x0, [sp, #120]
     f38:	sub	x15, x19, x15
     f3c:	ldr	x1, [x0, #96]
     f40:	ldr	x0, [x22]
     f44:	cbz	x1, 10a0 <gconv@@Base+0x7d8>
     f48:	sub	x15, x0, x15, lsl #2
     f4c:	str	x15, [x22]
     f50:	ldr	x0, [sp, #120]
     f54:	ldr	x0, [x0, #96]
     f58:	b	abc <gconv@@Base+0x1f4>
     f5c:	cmp	x20, x24
     f60:	b.eq	1188 <gconv@@Base+0x8c0>  // b.none
     f64:	add	x1, x21, #0x4
     f68:	cmp	x15, x1
     f6c:	b.cc	1194 <gconv@@Base+0x8cc>  // b.lo, b.ul, b.last
     f70:	ldrb	w2, [x24], #1
     f74:	mov	x0, x1
     f78:	stur	w2, [x1, #-4]
     f7c:	cmp	x20, x24
     f80:	b.eq	1094 <gconv@@Base+0x7cc>  // b.none
     f84:	add	x1, x0, #0x4
     f88:	cmp	x15, x1
     f8c:	b.cs	f70 <gconv@@Base+0x6a8>  // b.hs, b.nlast
     f90:	mov	x3, #0x5                   	// #5
     f94:	str	x24, [x22]
     f98:	b	e54 <gconv@@Base+0x58c>
     f9c:	ldp	x1, x2, [sp, #200]
     fa0:	str	x2, [x22]
     fa4:	cmp	x0, x1
     fa8:	b.ne	fdc <gconv@@Base+0x714>  // b.any
     fac:	adrp	x3, 1000 <gconv@@Base+0x738>
     fb0:	adrp	x1, 1000 <gconv@@Base+0x738>
     fb4:	adrp	x0, 1000 <gconv@@Base+0x738>
     fb8:	add	x3, x3, #0x540
     fbc:	add	x1, x1, #0x3c0
     fc0:	add	x0, x0, #0x4f0
     fc4:	mov	w2, #0x2eb                 	// #747
     fc8:	bl	750 <__assert_fail@plt>
     fcc:	ldp	x1, x2, [sp, #200]
     fd0:	str	x2, [x22]
     fd4:	cmp	x0, x1
     fd8:	b.eq	e64 <gconv@@Base+0x59c>  // b.none
     fdc:	adrp	x3, 1000 <gconv@@Base+0x738>
     fe0:	adrp	x1, 1000 <gconv@@Base+0x738>
     fe4:	adrp	x0, 1000 <gconv@@Base+0x738>
     fe8:	add	x3, x3, #0x540
     fec:	add	x1, x1, #0x3c0
     ff0:	add	x0, x0, #0x4d8
     ff4:	mov	w2, #0x2ea                 	// #746
     ff8:	bl	750 <__assert_fail@plt>
     ffc:	cmp	w28, w2, lsr #7
    1000:	b.eq	117c <gconv@@Base+0x8b4>  // b.none
    1004:	ldr	x1, [sp, #160]
    1008:	cbz	x1, f9c <gconv@@Base+0x6d4>
    100c:	ldr	w1, [x25, #16]
    1010:	tbnz	w1, #3, 1104 <gconv@@Base+0x83c>
    1014:	ldr	x12, [sp, #208]
    1018:	cbnz	w19, 115c <gconv@@Base+0x894>
    101c:	ldr	x1, [sp, #200]
    1020:	str	x12, [x22]
    1024:	cmp	x0, x1
    1028:	b.eq	fac <gconv@@Base+0x6e4>  // b.none
    102c:	b	fdc <gconv@@Base+0x714>
    1030:	mov	x0, #0x4                   	// #4
    1034:	mov	x19, #0x0                   	// #0
    1038:	b	cc8 <gconv@@Base+0x400>
    103c:	cbnz	w25, b20 <gconv@@Base+0x258>
    1040:	ldr	x22, [x11]
    1044:	ldr	x0, [x14, #96]
    1048:	ldr	x13, [sp, #192]
    104c:	b	994 <gconv@@Base+0xcc>
    1050:	str	x20, [x11]
    1054:	cmp	x22, x20
    1058:	b.cs	1080 <gconv@@Base+0x7b8>  // b.hs, b.nlast
    105c:	add	x22, x22, #0x1
    1060:	add	x7, x7, x19
    1064:	str	x22, [sp, #208]
    1068:	cmp	x20, x22
    106c:	add	x7, x7, #0x1
    1070:	add	x22, x22, #0x1
    1074:	ldurb	w0, [x22, #-2]
    1078:	strb	w0, [x7, #3]
    107c:	b.ne	1064 <gconv@@Base+0x79c>  // b.any
    1080:	mov	w25, #0x7                   	// #7
    1084:	b	b20 <gconv@@Base+0x258>
    1088:	mov	w15, #0x6                   	// #6
    108c:	ldr	x0, [sp, #208]
    1090:	b	a40 <gconv@@Base+0x178>
    1094:	mov	x3, #0x4                   	// #4
    1098:	str	x24, [x22]
    109c:	b	e54 <gconv@@Base+0x58c>
    10a0:	cmp	x15, #0x0
    10a4:	add	x1, x15, #0x3
    10a8:	csel	x15, x1, x15, lt  // lt = tstop
    10ac:	sub	x0, x0, x15, asr #2
    10b0:	str	x0, [x22]
    10b4:	b	ab4 <gconv@@Base+0x1ec>
    10b8:	mov	w1, #0x1c00                	// #7168
    10bc:	cmp	w1, w0, lsr #7
    10c0:	b.eq	11a8 <gconv@@Base+0x8e0>  // b.none
    10c4:	ldr	x0, [sp, #160]
    10c8:	cbz	x0, 10fc <gconv@@Base+0x834>
    10cc:	tbnz	w28, #3, 11b8 <gconv@@Base+0x8f0>
    10d0:	mov	x0, x13
    10d4:	mov	w25, #0x6                   	// #6
    10d8:	tbz	w28, #1, b20 <gconv@@Base+0x258>
    10dc:	ldr	x2, [sp, #160]
    10e0:	add	x0, x0, #0x4
    10e4:	str	x0, [sp, #208]
    10e8:	ldr	x1, [x2]
    10ec:	add	x1, x1, #0x1
    10f0:	str	x1, [x2]
    10f4:	cmp	x0, x13
    10f8:	b.ne	d3c <gconv@@Base+0x474>  // b.any
    10fc:	mov	w25, #0x6                   	// #6
    1100:	b	b20 <gconv@@Base+0x258>
    1104:	ldp	x6, x5, [sp, #160]
    1108:	mov	x4, x20
    110c:	ldr	x2, [x22]
    1110:	mov	x1, x25
    1114:	ldr	x0, [sp, #120]
    1118:	str	x15, [sp, #104]
    111c:	ldr	x3, [sp, #176]
    1120:	str	w7, [sp, #188]
    1124:	bl	700 <__gconv_transliterate@plt>
    1128:	sxtw	x3, w0
    112c:	ldr	w7, [sp, #188]
    1130:	cmp	w3, #0x6
    1134:	ldr	x15, [sp, #104]
    1138:	b.eq	11a0 <gconv@@Base+0x8d8>  // b.none
    113c:	cmp	w3, #0x5
    1140:	ldp	x24, x0, [sp, #208]
    1144:	b.ne	e44 <gconv@@Base+0x57c>  // b.any
    1148:	ldr	x1, [sp, #200]
    114c:	str	x24, [x22]
    1150:	cmp	x0, x1
    1154:	b.eq	e64 <gconv@@Base+0x59c>  // b.none
    1158:	b	fdc <gconv@@Base+0x714>
    115c:	ldr	x1, [sp, #160]
    1160:	add	x24, x12, #0x4
    1164:	mov	x3, #0x6                   	// #6
    1168:	str	x24, [sp, #208]
    116c:	ldr	x2, [x1]
    1170:	add	x2, x2, #0x1
    1174:	str	x2, [x1]
    1178:	b	e44 <gconv@@Base+0x57c>
    117c:	mov	x24, x5
    1180:	str	x5, [sp, #208]
    1184:	b	e44 <gconv@@Base+0x57c>
    1188:	cmp	x15, x21
    118c:	b.eq	fac <gconv@@Base+0x6e4>  // b.none
    1190:	b	fdc <gconv@@Base+0x714>
    1194:	cmp	x15, x21
    1198:	b.eq	e74 <gconv@@Base+0x5ac>  // b.none
    119c:	b	fdc <gconv@@Base+0x714>
    11a0:	ldr	x0, [sp, #216]
    11a4:	b	1014 <gconv@@Base+0x74c>
    11a8:	add	x0, x13, #0x4
    11ac:	mov	x13, #0x4                   	// #4
    11b0:	str	x0, [sp, #208]
    11b4:	b	d48 <gconv@@Base+0x480>
    11b8:	mov	x6, x0
    11bc:	mov	x2, x22
    11c0:	mov	x0, x14
    11c4:	add	x5, sp, #0xd8
    11c8:	add	x3, sp, #0xd0
    11cc:	mov	x1, x21
    11d0:	stp	x14, x4, [sp, #104]
    11d4:	str	x7, [sp, #120]
    11d8:	stp	x9, x11, [sp, #144]
    11dc:	stp	x15, x13, [sp, #168]
    11e0:	bl	700 <__gconv_transliterate@plt>
    11e4:	mov	w25, w0
    11e8:	cmp	w0, #0x6
    11ec:	ldr	x14, [sp, #104]
    11f0:	ldr	x7, [sp, #120]
    11f4:	ldr	x11, [sp, #152]
    11f8:	ldp	x15, x13, [sp, #168]
    11fc:	ldr	x0, [sp, #208]
    1200:	b.eq	1290 <gconv@@Base+0x9c8>  // b.none
    1204:	cmp	x0, x13
    1208:	ldr	x4, [sp, #112]
    120c:	ldr	x9, [sp, #144]
    1210:	b.ne	d3c <gconv@@Base+0x474>  // b.any
    1214:	cmp	w25, #0x7
    1218:	b.ne	103c <gconv@@Base+0x774>  // b.any
    121c:	add	x0, x13, #0x4
    1220:	cmp	x4, x0
    1224:	b.eq	137c <gconv@@Base+0xab4>  // b.none
    1228:	ldr	w0, [x7]
    122c:	ldr	x1, [x11]
    1230:	and	x2, x0, #0x7
    1234:	sub	x2, x19, x2
    1238:	and	w0, w0, #0xfffffff8
    123c:	add	x1, x1, x2
    1240:	str	x1, [x11]
    1244:	cmp	x19, w0, sxtw
    1248:	b.le	135c <gconv@@Base+0xa94>
    124c:	cmp	x19, #0x4
    1250:	b.hi	133c <gconv@@Base+0xa74>  // b.pmore
    1254:	orr	w0, w0, w19
    1258:	str	w0, [x7]
    125c:	cmp	x4, x13
    1260:	b.ls	1080 <gconv@@Base+0x7b8>  // b.plast
    1264:	add	x7, x7, #0x4
    1268:	add	x13, x13, #0x1
    126c:	str	x13, [sp, #208]
    1270:	cmp	x4, x13
    1274:	ldurb	w0, [x13, #-1]
    1278:	strb	w0, [x7], #1
    127c:	b.ne	1268 <gconv@@Base+0x9a0>  // b.any
    1280:	mov	w25, #0x7                   	// #7
    1284:	b	b20 <gconv@@Base+0x258>
    1288:	mov	w0, #0x0                   	// #0
    128c:	b	c40 <gconv@@Base+0x378>
    1290:	tbz	w28, #1, 10f4 <gconv@@Base+0x82c>
    1294:	b	10dc <gconv@@Base+0x814>
    1298:	adrp	x3, 1000 <gconv@@Base+0x738>
    129c:	adrp	x1, 1000 <gconv@@Base+0x738>
    12a0:	adrp	x0, 1000 <gconv@@Base+0x738>
    12a4:	add	x3, x3, #0x540
    12a8:	add	x1, x1, #0x3c0
    12ac:	add	x0, x0, #0x3d8
    12b0:	mov	w2, #0x234                 	// #564
    12b4:	bl	750 <__assert_fail@plt>
    12b8:	adrp	x3, 1000 <gconv@@Base+0x738>
    12bc:	adrp	x1, 1000 <gconv@@Base+0x738>
    12c0:	adrp	x0, 1000 <gconv@@Base+0x738>
    12c4:	add	x3, x3, #0x540
    12c8:	add	x1, x1, #0x3c0
    12cc:	add	x0, x0, #0x510
    12d0:	mov	w2, #0x31e                 	// #798
    12d4:	bl	750 <__assert_fail@plt>
    12d8:	adrp	x3, 1000 <gconv@@Base+0x738>
    12dc:	adrp	x1, 1000 <gconv@@Base+0x738>
    12e0:	adrp	x0, 1000 <gconv@@Base+0x738>
    12e4:	add	x3, x3, #0x540
    12e8:	add	x1, x1, #0x3c0
    12ec:	add	x0, x0, #0x3d8
    12f0:	mov	w2, #0x1a4                 	// #420
    12f4:	bl	750 <__assert_fail@plt>
    12f8:	bl	710 <__stack_chk_fail@plt>
    12fc:	adrp	x3, 1000 <gconv@@Base+0x738>
    1300:	adrp	x1, 1000 <gconv@@Base+0x738>
    1304:	adrp	x0, 1000 <gconv@@Base+0x738>
    1308:	add	x3, x3, #0x528
    130c:	add	x1, x1, #0x3f0
    1310:	add	x0, x0, #0x400
    1314:	mov	w2, #0x18b                 	// #395
    1318:	bl	750 <__assert_fail@plt>
    131c:	adrp	x3, 1000 <gconv@@Base+0x738>
    1320:	adrp	x1, 1000 <gconv@@Base+0x738>
    1324:	adrp	x0, 1000 <gconv@@Base+0x738>
    1328:	add	x3, x3, #0x528
    132c:	add	x1, x1, #0x3f0
    1330:	add	x0, x0, #0x430
    1334:	mov	w2, #0x1c9                 	// #457
    1338:	bl	750 <__assert_fail@plt>
    133c:	adrp	x3, 1000 <gconv@@Base+0x738>
    1340:	adrp	x1, 1000 <gconv@@Base+0x738>
    1344:	adrp	x0, 1000 <gconv@@Base+0x738>
    1348:	add	x3, x3, #0x528
    134c:	add	x1, x1, #0x3f0
    1350:	add	x0, x0, #0x4a8
    1354:	mov	w2, #0x1e6                 	// #486
    1358:	bl	750 <__assert_fail@plt>
    135c:	adrp	x3, 1000 <gconv@@Base+0x738>
    1360:	adrp	x1, 1000 <gconv@@Base+0x738>
    1364:	adrp	x0, 1000 <gconv@@Base+0x738>
    1368:	add	x3, x3, #0x528
    136c:	add	x1, x1, #0x3f0
    1370:	add	x0, x0, #0x480
    1374:	mov	w2, #0x1e5                 	// #485
    1378:	bl	750 <__assert_fail@plt>
    137c:	adrp	x3, 1000 <gconv@@Base+0x738>
    1380:	adrp	x1, 1000 <gconv@@Base+0x738>
    1384:	adrp	x0, 1000 <gconv@@Base+0x738>
    1388:	add	x3, x3, #0x528
    138c:	add	x1, x1, #0x3f0
    1390:	add	x0, x0, #0x458
    1394:	mov	w2, #0x1db                 	// #475
    1398:	bl	750 <__assert_fail@plt>

Disassembly of section .fini:

000000000000139c <.fini>:
    139c:	stp	x29, x30, [sp, #-16]!
    13a0:	mov	x29, sp
    13a4:	ldp	x29, x30, [sp], #16
    13a8:	ret
