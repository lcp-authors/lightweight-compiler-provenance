
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//SHIFT_JISX0213.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000840 <.init>:
 840:	stp	x29, x30, [sp, #-16]!
 844:	mov	x29, sp
 848:	bl	8f0 <__assert_fail@plt+0x10>
 84c:	ldp	x29, x30, [sp], #16
 850:	ret

Disassembly of section .plt:

0000000000000860 <__cxa_finalize@plt-0x20>:
 860:	stp	x16, x30, [sp, #-16]!
 864:	adrp	x16, 12000 <gconv@@Base+0x11558>
 868:	ldr	x17, [x16, #4088]
 86c:	add	x16, x16, #0xff8
 870:	br	x17
 874:	nop
 878:	nop
 87c:	nop

0000000000000880 <__cxa_finalize@plt>:
 880:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 884:	ldr	x17, [x16]
 888:	add	x16, x16, #0x0
 88c:	br	x17

0000000000000890 <__gconv_transliterate@plt>:
 890:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 894:	ldr	x17, [x16, #8]
 898:	add	x16, x16, #0x8
 89c:	br	x17

00000000000008a0 <__stack_chk_fail@plt>:
 8a0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #16]
 8a8:	add	x16, x16, #0x10
 8ac:	br	x17

00000000000008b0 <__gmon_start__@plt>:
 8b0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #24]
 8b8:	add	x16, x16, #0x18
 8bc:	br	x17

00000000000008c0 <strcmp@plt>:
 8c0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #32]
 8c8:	add	x16, x16, #0x20
 8cc:	br	x17

00000000000008d0 <_dl_mcount_wrapper_check@plt>:
 8d0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #40]
 8d8:	add	x16, x16, #0x28
 8dc:	br	x17

00000000000008e0 <__assert_fail@plt>:
 8e0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #48]
 8e8:	add	x16, x16, #0x30
 8ec:	br	x17

Disassembly of section .text:

00000000000008f0 <gconv_init@@Base-0x120>:
     8f0:	adrp	x0, 12000 <gconv@@Base+0x11558>
     8f4:	ldr	x0, [x0, #4024]
     8f8:	cbz	x0, 900 <__assert_fail@plt+0x20>
     8fc:	b	8b0 <__gmon_start__@plt>
     900:	ret
     904:	nop
     908:	adrp	x0, 13000 <gconv@@Base+0x12558>
     90c:	add	x0, x0, #0x40
     910:	adrp	x1, 13000 <gconv@@Base+0x12558>
     914:	add	x1, x1, #0x40
     918:	cmp	x1, x0
     91c:	b.eq	934 <__assert_fail@plt+0x54>  // b.none
     920:	adrp	x1, 12000 <gconv@@Base+0x11558>
     924:	ldr	x1, [x1, #3984]
     928:	cbz	x1, 934 <__assert_fail@plt+0x54>
     92c:	mov	x16, x1
     930:	br	x16
     934:	ret
     938:	adrp	x0, 13000 <gconv@@Base+0x12558>
     93c:	add	x0, x0, #0x40
     940:	adrp	x1, 13000 <gconv@@Base+0x12558>
     944:	add	x1, x1, #0x40
     948:	sub	x1, x1, x0
     94c:	lsr	x2, x1, #63
     950:	add	x1, x2, x1, asr #3
     954:	cmp	xzr, x1, asr #1
     958:	asr	x1, x1, #1
     95c:	b.eq	974 <__assert_fail@plt+0x94>  // b.none
     960:	adrp	x2, 12000 <gconv@@Base+0x11558>
     964:	ldr	x2, [x2, #4056]
     968:	cbz	x2, 974 <__assert_fail@plt+0x94>
     96c:	mov	x16, x2
     970:	br	x16
     974:	ret
     978:	stp	x29, x30, [sp, #-32]!
     97c:	mov	x29, sp
     980:	str	x19, [sp, #16]
     984:	adrp	x19, 13000 <gconv@@Base+0x12558>
     988:	ldrb	w0, [x19, #64]
     98c:	cbnz	w0, 9b4 <__assert_fail@plt+0xd4>
     990:	adrp	x0, 12000 <gconv@@Base+0x11558>
     994:	ldr	x0, [x0, #3992]
     998:	cbz	x0, 9a8 <__assert_fail@plt+0xc8>
     99c:	adrp	x0, 13000 <gconv@@Base+0x12558>
     9a0:	ldr	x0, [x0, #56]
     9a4:	bl	880 <__cxa_finalize@plt>
     9a8:	bl	908 <__assert_fail@plt+0x28>
     9ac:	mov	w0, #0x1                   	// #1
     9b0:	strb	w0, [x19, #64]
     9b4:	ldr	x19, [sp, #16]
     9b8:	ldp	x29, x30, [sp], #32
     9bc:	ret
     9c0:	b	938 <__assert_fail@plt+0x58>
     9c4:	nop
     9c8:	tst	w1, #0x80
     9cc:	and	w1, w1, #0xff
     9d0:	b.ne	9ec <__assert_fail@plt+0x10c>  // b.any
     9d4:	cmp	w1, #0x5c
     9d8:	b.eq	a08 <__assert_fail@plt+0x128>  // b.none
     9dc:	cmp	w1, #0x7e
     9e0:	mov	w0, #0x203e                	// #8254
     9e4:	csel	w0, w1, w0, ne  // ne = any
     9e8:	ret
     9ec:	add	w0, w1, #0x5f
     9f0:	mov	w2, #0xfec0                	// #65216
     9f4:	and	w0, w0, #0xff
     9f8:	add	w1, w1, w2
     9fc:	cmp	w0, #0x3f
     a00:	csinv	w0, w1, wzr, cc  // cc = lo, ul, last
     a04:	ret
     a08:	mov	w0, #0xa5                  	// #165
     a0c:	ret

0000000000000a10 <gconv_init@@Base>:
     a10:	stp	x29, x30, [sp, #-32]!
     a14:	mov	x29, sp
     a18:	stp	x19, x20, [sp, #16]
     a1c:	mov	x19, x0
     a20:	adrp	x20, 2000 <gconv@@Base+0x1558>
     a24:	ldr	x0, [x0, #24]
     a28:	add	x20, x20, #0x6e8
     a2c:	mov	x1, x20
     a30:	bl	8c0 <strcmp@plt>
     a34:	cbnz	w0, a74 <gconv_init@@Base+0x64>
     a38:	mov	x2, #0x1                   	// #1
     a3c:	mov	x1, #0x4                   	// #4
     a40:	adrp	x0, 0 <__cxa_finalize@plt-0x880>
     a44:	movk	x2, #0x2, lsl #32
     a48:	add	x0, x0, #0x9c8
     a4c:	movk	x1, #0x8, lsl #32
     a50:	str	x0, [x19, #48]
     a54:	stp	x2, x1, [x19, #72]
     a58:	str	xzr, [x19, #96]
     a5c:	mov	w1, #0x1                   	// #1
     a60:	mov	w0, #0x0                   	// #0
     a64:	str	w1, [x19, #88]
     a68:	ldp	x19, x20, [sp, #16]
     a6c:	ldp	x29, x30, [sp], #32
     a70:	ret
     a74:	ldr	x0, [x19, #32]
     a78:	mov	x1, x20
     a7c:	bl	8c0 <strcmp@plt>
     a80:	cbnz	w0, aa0 <gconv_init@@Base+0x90>
     a84:	mov	x1, #0x1                   	// #1
     a88:	mov	x0, #0xffffffffffffffff    	// #-1
     a8c:	mov	x2, #0x400000004           	// #17179869188
     a90:	movk	x1, #0x2, lsl #32
     a94:	stp	x2, x1, [x19, #72]
     a98:	str	x0, [x19, #96]
     a9c:	b	a5c <gconv_init@@Base+0x4c>
     aa0:	mov	w0, #0x1                   	// #1
     aa4:	b	a68 <gconv_init@@Base+0x58>

0000000000000aa8 <gconv@@Base>:
     aa8:	stp	x29, x30, [sp, #-256]!
     aac:	mov	x18, x0
     ab0:	mov	x29, sp
     ab4:	stp	x21, x22, [sp, #32]
     ab8:	mov	x21, x1
     abc:	adrp	x1, 12000 <gconv@@Base+0x11558>
     ac0:	stp	x19, x20, [sp, #16]
     ac4:	mov	x20, x3
     ac8:	ldr	w19, [x21, #16]
     acc:	ldr	x1, [x1, #4032]
     ad0:	stp	x25, x26, [sp, #64]
     ad4:	mov	w10, w19
     ad8:	ldr	x0, [x1]
     adc:	str	x0, [sp, #248]
     ae0:	mov	x0, #0x0                   	// #0
     ae4:	stp	x27, x28, [sp, #80]
     ae8:	add	x0, x21, #0x30
     aec:	mov	x28, x2
     af0:	add	x2, x18, #0x68
     af4:	str	x4, [sp, #104]
     af8:	and	w1, w19, #0x1
     afc:	str	w7, [sp, #132]
     b00:	mov	x26, #0x0                   	// #0
     b04:	str	x5, [sp, #136]
     b08:	stp	x2, x0, [sp, #152]
     b0c:	tbnz	w19, #0, b2c <gconv@@Base+0x84>
     b10:	ldr	x0, [x18, #104]
     b14:	ldr	x26, [x18, #144]
     b18:	cbz	x0, b2c <gconv@@Base+0x84>
     b1c:	adrp	x0, 12000 <gconv@@Base+0x11558>
     b20:	ldr	x0, [x0, #4008]
     b24:	ldr	x0, [x0]
     b28:	eor	x26, x26, x0
     b2c:	cbnz	w6, 16bc <gconv@@Base+0xc14>
     b30:	ldr	x1, [sp, #104]
     b34:	stp	x23, x24, [sp, #48]
     b38:	add	x0, sp, #0xc0
     b3c:	ldr	x2, [sp, #136]
     b40:	cmp	x1, #0x0
     b44:	ldr	x23, [x21, #32]
     b48:	csel	x1, x21, x1, eq  // eq = none
     b4c:	cmp	x2, #0x0
     b50:	csel	x0, x0, xzr, ne  // ne = any
     b54:	ldr	x27, [x1]
     b58:	str	x0, [sp, #168]
     b5c:	ldr	w0, [x23]
     b60:	str	w0, [sp, #112]
     b64:	ldr	w0, [sp, #132]
     b68:	ldr	x2, [x28]
     b6c:	str	xzr, [sp, #192]
     b70:	ldr	x25, [x21, #8]
     b74:	mov	x24, x2
     b78:	cbz	w0, d08 <gconv@@Base+0x260>
     b7c:	ldr	w0, [sp, #112]
     b80:	ands	w1, w0, #0x7
     b84:	b.eq	d08 <gconv@@Base+0x260>  // b.none
     b88:	ldr	x0, [sp, #104]
     b8c:	cbnz	x0, 2398 <gconv@@Base+0x18f0>
     b90:	ldr	x0, [x18, #96]
     b94:	mov	w4, w1
     b98:	cbz	x0, 14cc <gconv@@Base+0xa24>
     b9c:	stp	x2, x27, [sp, #224]
     ba0:	cmp	w1, #0x4
     ba4:	b.hi	25d0 <gconv@@Base+0x1b28>  // b.pmore
     ba8:	mov	w24, w1
     bac:	cbz	w1, 1bfc <gconv@@Base+0x1154>
     bb0:	add	x22, sp, #0xf0
     bb4:	add	x5, x23, #0x3
     bb8:	mov	x0, #0x1                   	// #1
     bbc:	nop
     bc0:	add	x1, x22, x0
     bc4:	ldrb	w4, [x5, x0]
     bc8:	cmp	x24, x0
     bcc:	add	x0, x0, #0x1
     bd0:	sturb	w4, [x1, #-1]
     bd4:	b.ne	bc0 <gconv@@Base+0x118>  // b.any
     bd8:	mov	x0, #0x4                   	// #4
     bdc:	sub	x0, x0, x24
     be0:	add	x0, x2, x0
     be4:	cmp	x20, x0
     be8:	b.cc	1d50 <gconv@@Base+0x12a8>  // b.lo, b.ul, b.last
     bec:	add	x0, x2, #0x1
     bf0:	add	x22, sp, #0xf0
     bf4:	cmp	x27, x25
     bf8:	b.cs	19a8 <gconv@@Base+0xf00>  // b.hs, b.nlast
     bfc:	add	x24, x24, #0x1
     c00:	str	x0, [sp, #224]
     c04:	add	x1, x22, x24
     c08:	cmp	x24, #0x3
     c0c:	ldurb	w3, [x0, #-1]
     c10:	ccmp	x20, x0, #0x0, ls  // ls = plast
     c14:	add	x0, x0, #0x1
     c18:	sturb	w3, [x1, #-1]
     c1c:	b.hi	bfc <gconv@@Base+0x154>  // b.pmore
     c20:	ldr	w1, [x23]
     c24:	str	x22, [sp, #224]
     c28:	ldr	w0, [sp, #240]
     c2c:	cmp	wzr, w1, asr #3
     c30:	asr	w5, w1, #3
     c34:	b.eq	18f8 <gconv@@Base+0xe50>  // b.none
     c38:	cmp	w0, #0x2e5
     c3c:	and	w3, w5, #0xffff
     c40:	b.eq	1a94 <gconv@@Base+0xfec>  // b.none
     c44:	cmp	w0, #0x2e9
     c48:	b.eq	1da4 <gconv@@Base+0x12fc>  // b.none
     c4c:	cmp	w0, #0x300
     c50:	b.eq	1f9c <gconv@@Base+0x14f4>  // b.none
     c54:	cmp	w0, #0x301
     c58:	b.eq	20b4 <gconv@@Base+0x160c>  // b.none
     c5c:	mov	w1, #0x309a                	// #12442
     c60:	cmp	w0, w1
     c64:	b.ne	1c28 <gconv@@Base+0x1180>  // b.any
     c68:	mov	w1, #0x82a9                	// #33449
     c6c:	mov	w2, #0xe                   	// #14
     c70:	mov	w0, #0xb                   	// #11
     c74:	adrp	x4, 2000 <gconv@@Base+0x1558>
     c78:	add	w2, w2, w0
     c7c:	add	x4, x4, #0x8e0
     c80:	b	c98 <gconv@@Base+0x1f0>
     c84:	add	w0, w0, #0x1
     c88:	cmp	w0, w2
     c8c:	b.eq	1c28 <gconv@@Base+0x1180>  // b.none
     c90:	ubfiz	x1, x0, #2, #32
     c94:	ldrh	w1, [x4, x1]
     c98:	cmp	w3, w1
     c9c:	b.ne	c84 <gconv@@Base+0x1dc>  // b.any
     ca0:	add	x2, x27, #0x1
     ca4:	cmp	x25, x2
     ca8:	b.ls	19a8 <gconv@@Base+0xf00>  // b.plast
     cac:	adrp	x1, 2000 <gconv@@Base+0x1558>
     cb0:	add	x1, x1, #0x8e0
     cb4:	add	x0, x1, w0, uxtw #2
     cb8:	str	x2, [sp, #232]
     cbc:	mov	x24, #0x0                   	// #0
     cc0:	ldrh	w1, [x0, #2]
     cc4:	lsr	w0, w1, #8
     cc8:	strb	w0, [x27]
     ccc:	ldr	x0, [sp, #232]
     cd0:	add	x2, x0, #0x1
     cd4:	str	x2, [sp, #232]
     cd8:	strb	w1, [x0]
     cdc:	ldr	x0, [sp, #224]
     ce0:	str	wzr, [x23]
     ce4:	add	x0, x0, #0x4
     ce8:	str	x0, [sp, #224]
     cec:	subs	x22, x0, x22
     cf0:	b.ne	1954 <gconv@@Base+0xeac>  // b.any
     cf4:	ldr	w10, [x21, #16]
     cf8:	ldr	x24, [x28]
     cfc:	ldr	w0, [x23]
     d00:	str	w0, [sp, #112]
     d04:	nop
     d08:	ldr	x0, [x18, #96]
     d0c:	str	x18, [sp, #144]
     d10:	mov	x2, x21
     d14:	mov	x1, x20
     d18:	adrp	x22, 2000 <gconv@@Base+0x1558>
     d1c:	add	x22, x22, #0x8e0
     d20:	mov	x21, x27
     d24:	mov	x20, x25
     d28:	mov	x9, x22
     d2c:	mov	x25, x28
     d30:	mov	x27, x2
     d34:	mov	x28, x1
     d38:	cbz	x0, e88 <gconv@@Base+0x3e0>
     d3c:	nop
     d40:	stp	x24, x21, [sp, #208]
     d44:	mov	x19, x21
     d48:	cmp	x28, x24
     d4c:	b.eq	17bc <gconv@@Base+0xd14>  // b.none
     d50:	mov	x0, x24
     d54:	add	x5, sp, #0xd8
     d58:	mov	w22, #0x4                   	// #4
     d5c:	add	x1, x0, #0x4
     d60:	cmp	x28, x1
     d64:	b.cc	1000 <gconv@@Base+0x558>  // b.lo, b.ul, b.last
     d68:	cmp	x20, x19
     d6c:	b.ls	f8c <gconv@@Base+0x4e4>  // b.plast
     d70:	ldr	w2, [x23]
     d74:	ldr	w0, [x0]
     d78:	cmp	wzr, w2, asr #3
     d7c:	asr	w3, w2, #3
     d80:	b.eq	f30 <gconv@@Base+0x488>  // b.none
     d84:	cmp	w0, #0x2e5
     d88:	and	w1, w3, #0xffff
     d8c:	b.eq	10dc <gconv@@Base+0x634>  // b.none
     d90:	cmp	w0, #0x2e9
     d94:	b.eq	1150 <gconv@@Base+0x6a8>  // b.none
     d98:	cmp	w0, #0x300
     d9c:	b.eq	1188 <gconv@@Base+0x6e0>  // b.none
     da0:	cmp	w0, #0x301
     da4:	b.eq	13dc <gconv@@Base+0x934>  // b.none
     da8:	mov	w2, #0x309a                	// #12442
     dac:	cmp	w0, w2
     db0:	b.eq	1160 <gconv@@Base+0x6b8>  // b.none
     db4:	add	x0, x19, #0x1
     db8:	cmp	x20, x0
     dbc:	b.ls	f8c <gconv@@Base+0x4e4>  // b.plast
     dc0:	str	x0, [sp, #216]
     dc4:	lsr	w1, w1, #8
     dc8:	strb	w1, [x19]
     dcc:	ldr	x0, [sp, #216]
     dd0:	add	x1, x0, #0x1
     dd4:	str	x1, [sp, #216]
     dd8:	strb	w3, [x0]
     ddc:	ldp	x0, x19, [sp, #208]
     de0:	str	wzr, [x23]
     de4:	cmp	x28, x0
     de8:	b.ne	d5c <gconv@@Base+0x2b4>  // b.any
     dec:	nop
     df0:	str	x0, [x25]
     df4:	ldr	x0, [sp, #104]
     df8:	cbnz	x0, fc0 <gconv@@Base+0x518>
     dfc:	ldp	w1, w0, [x27, #16]
     e00:	add	w0, w0, #0x1
     e04:	str	w0, [x27, #20]
     e08:	tbnz	w1, #0, 13ec <gconv@@Base+0x944>
     e0c:	cmp	x21, x19
     e10:	b.cs	142c <gconv@@Base+0x984>  // b.hs, b.nlast
     e14:	ldr	x1, [x27]
     e18:	mov	x0, x26
     e1c:	str	x9, [sp, #120]
     e20:	str	x1, [sp, #200]
     e24:	bl	8d0 <_dl_mcount_wrapper_check@plt>
     e28:	ldp	x0, x1, [sp, #152]
     e2c:	mov	x3, x19
     e30:	ldr	w7, [sp, #132]
     e34:	add	x2, sp, #0xc8
     e38:	ldr	x5, [sp, #136]
     e3c:	mov	w6, #0x0                   	// #0
     e40:	mov	x4, #0x0                   	// #0
     e44:	blr	x26
     e48:	mov	w7, w0
     e4c:	cmp	w0, #0x4
     e50:	ldr	x9, [sp, #120]
     e54:	b.eq	10b8 <gconv@@Base+0x610>  // b.none
     e58:	ldr	x8, [sp, #200]
     e5c:	cmp	x8, x19
     e60:	b.ne	1220 <gconv@@Base+0x778>  // b.any
     e64:	cbnz	w7, 17a8 <gconv@@Base+0xd00>
     e68:	ldr	w0, [x23]
     e6c:	str	w0, [sp, #112]
     e70:	ldr	x0, [sp, #144]
     e74:	ldr	w10, [x27, #16]
     e78:	ldr	x24, [x25]
     e7c:	ldr	x0, [x0, #96]
     e80:	ldr	x21, [x27]
     e84:	cbnz	x0, d40 <gconv@@Base+0x298>
     e88:	cmp	x28, x24
     e8c:	b.eq	1c84 <gconv@@Base+0x11dc>  // b.none
     e90:	add	x2, x21, #0x4
     e94:	cmp	x20, x2
     e98:	b.cc	165c <gconv@@Base+0xbb4>  // b.lo, b.ul, b.last
     e9c:	adrp	x0, 12000 <gconv@@Base+0x11558>
     ea0:	adrp	x4, 12000 <gconv@@Base+0x11558>
     ea4:	adrp	x1, 12000 <gconv@@Base+0x11558>
     ea8:	and	w3, w10, #0x2
     eac:	ldr	x15, [x0, #4040]
     eb0:	mov	x19, x21
     eb4:	ldr	x13, [x4, #4064]
     eb8:	mov	w22, #0x4                   	// #4
     ebc:	ldr	w0, [sp, #112]
     ec0:	mov	w16, #0x7f                  	// #127
     ec4:	ldr	x14, [x1, #4016]
     ec8:	mov	x1, x24
     ecc:	mov	w12, #0xfffd                	// #65533
     ed0:	mov	w11, #0x5e                  	// #94
     ed4:	mov	w8, #0x5f                  	// #95
     ed8:	mov	w7, #0xfec0                	// #65216
     edc:	mov	w5, #0x203e                	// #8254
     ee0:	cmp	wzr, w0, asr #3
     ee4:	asr	w0, w0, #3
     ee8:	b.ne	f0c <gconv@@Base+0x464>  // b.any
     eec:	ldrb	w0, [x1]
     ef0:	cmp	w0, #0x7f
     ef4:	b.hi	f98 <gconv@@Base+0x4f0>  // b.pmore
     ef8:	cmp	w0, #0x5c
     efc:	b.eq	1434 <gconv@@Base+0x98c>  // b.none
     f00:	cmp	w0, #0x7e
     f04:	csel	w0, w0, w5, ne  // ne = any
     f08:	add	x1, x1, #0x1
     f0c:	str	w0, [x19]
     f10:	mov	x19, x2
     f14:	cmp	x28, x1
     f18:	b.eq	fb0 <gconv@@Base+0x508>  // b.none
     f1c:	add	x2, x19, #0x4
     f20:	cmp	x20, x2
     f24:	b.cc	13d0 <gconv@@Base+0x928>  // b.lo, b.ul, b.last
     f28:	ldr	w0, [x23]
     f2c:	b	ee0 <gconv@@Base+0x438>
     f30:	cmp	w0, #0x7f
     f34:	b.hi	f54 <gconv@@Base+0x4ac>  // b.pmore
     f38:	add	x1, x19, #0x1
     f3c:	str	x1, [sp, #216]
     f40:	strb	w0, [x19]
     f44:	ldp	x0, x19, [sp, #208]
     f48:	add	x0, x0, #0x4
     f4c:	str	x0, [sp, #208]
     f50:	b	de4 <gconv@@Base+0x33c>
     f54:	cmp	w0, #0xa5
     f58:	b.eq	10c8 <gconv@@Base+0x620>  // b.none
     f5c:	mov	w2, #0x203e                	// #8254
     f60:	cmp	w0, w2
     f64:	b.eq	1198 <gconv@@Base+0x6f0>  // b.none
     f68:	mov	w2, #0xffff009f            	// #-65377
     f6c:	add	w2, w0, w2
     f70:	cmp	w2, #0x3e
     f74:	b.hi	11ac <gconv@@Base+0x704>  // b.pmore
     f78:	add	x1, x19, #0x1
     f7c:	str	x1, [sp, #216]
     f80:	add	w0, w0, #0x40
     f84:	strb	w0, [x19]
     f88:	b	f44 <gconv@@Base+0x49c>
     f8c:	mov	w22, #0x5                   	// #5
     f90:	ldr	x0, [sp, #208]
     f94:	b	df0 <gconv@@Base+0x348>
     f98:	sub	w4, w0, #0xa1
     f9c:	cmp	w4, #0x3e
     fa0:	b.hi	100c <gconv@@Base+0x564>  // b.pmore
     fa4:	add	w0, w0, w7
     fa8:	b	f08 <gconv@@Base+0x460>
     fac:	mov	w22, #0x7                   	// #7
     fb0:	str	x1, [x25]
     fb4:	nop
     fb8:	ldr	x0, [sp, #104]
     fbc:	cbz	x0, dfc <gconv@@Base+0x354>
     fc0:	mov	w8, w22
     fc4:	ldp	x23, x24, [sp, #48]
     fc8:	str	x19, [x0]
     fcc:	adrp	x0, 12000 <gconv@@Base+0x11558>
     fd0:	ldr	x0, [x0, #4032]
     fd4:	ldr	x1, [sp, #248]
     fd8:	ldr	x0, [x0]
     fdc:	eor	x0, x1, x0
     fe0:	cbnz	x0, 23b8 <gconv@@Base+0x1910>
     fe4:	mov	w0, w8
     fe8:	ldp	x19, x20, [sp, #16]
     fec:	ldp	x21, x22, [sp, #32]
     ff0:	ldp	x25, x26, [sp, #64]
     ff4:	ldp	x27, x28, [sp, #80]
     ff8:	ldp	x29, x30, [sp], #256
     ffc:	ret
    1000:	mov	w22, #0x7                   	// #7
    1004:	ldr	x0, [sp, #208]
    1008:	b	df0 <gconv@@Base+0x348>
    100c:	sub	w6, w0, #0xe0
    1010:	sub	w4, w0, #0x81
    1014:	cmp	w6, #0x1c
    1018:	ccmp	w4, #0x1e, #0x0, hi  // hi = pmore
    101c:	b.hi	1170 <gconv@@Base+0x6c8>  // b.pmore
    1020:	add	x10, x1, #0x1
    1024:	cmp	x28, x10
    1028:	b.ls	fac <gconv@@Base+0x504>  // b.plast
    102c:	ldrb	w6, [x1, #1]
    1030:	sub	w17, w6, #0x40
    1034:	and	w18, w17, #0xff
    1038:	cmp	w18, #0xbc
    103c:	ccmp	w6, w16, #0x4, ls  // ls = plast
    1040:	b.eq	139c <gconv@@Base+0x8f4>  // b.none
    1044:	cmp	w0, #0xdf
    1048:	sub	w0, w0, #0xc1
    104c:	csel	w4, w0, w4, hi  // hi = pmore
    1050:	mov	w0, w17
    1054:	cmp	w6, #0x7f
    1058:	lsl	w4, w4, #1
    105c:	b.ls	1074 <gconv@@Base+0x5cc>  // b.plast
    1060:	sub	w0, w6, #0x41
    1064:	cmp	w0, #0x5d
    1068:	b.ls	1074 <gconv@@Base+0x5cc>  // b.plast
    106c:	sub	w0, w6, #0x9f
    1070:	add	w4, w4, #0x1
    1074:	cmp	w4, #0x5d
    1078:	b.ls	137c <gconv@@Base+0x8d4>  // b.plast
    107c:	cmp	w4, #0x66
    1080:	b.ls	1464 <gconv@@Base+0x9bc>  // b.plast
    1084:	add	w17, w4, #0xe6
    1088:	cmp	w17, #0x5d
    108c:	mul	w6, w17, w11
    1090:	b.ls	1380 <gconv@@Base+0x8d8>  // b.plast
    1094:	sub	w4, w17, #0x10b
    1098:	cmp	w4, #0x3
    109c:	b.ls	1a88 <gconv@@Base+0xfe0>  // b.plast
    10a0:	sub	w4, w17, #0x14d
    10a4:	cmp	w4, #0x10
    10a8:	b.hi	139c <gconv@@Base+0x8f4>  // b.pmore
    10ac:	sub	w6, w17, #0xe6
    10b0:	mul	w6, w6, w11
    10b4:	b	1380 <gconv@@Base+0x8d8>
    10b8:	mov	w7, w22
    10bc:	cmp	w22, #0x5
    10c0:	b.ne	e64 <gconv@@Base+0x3bc>  // b.any
    10c4:	b	e68 <gconv@@Base+0x3c0>
    10c8:	add	x0, x19, #0x1
    10cc:	str	x0, [sp, #216]
    10d0:	mov	w0, #0x5c                  	// #92
    10d4:	strb	w0, [x19]
    10d8:	b	f44 <gconv@@Base+0x49c>
    10dc:	mov	w2, #0x8684                	// #34436
    10e0:	mov	w4, #0x1                   	// #1
    10e4:	mov	w0, #0x0                   	// #0
    10e8:	add	w4, w4, w0
    10ec:	b	1104 <gconv@@Base+0x65c>
    10f0:	add	w0, w0, #0x1
    10f4:	cmp	w0, w4
    10f8:	b.eq	db4 <gconv@@Base+0x30c>  // b.none
    10fc:	ubfiz	x2, x0, #2, #32
    1100:	ldrh	w2, [x9, x2]
    1104:	cmp	w1, w2
    1108:	b.ne	10f0 <gconv@@Base+0x648>  // b.any
    110c:	add	x1, x19, #0x1
    1110:	cmp	x20, x1
    1114:	b.ls	f8c <gconv@@Base+0x4e4>  // b.plast
    1118:	add	x0, x9, w0, uxtw #2
    111c:	str	x1, [sp, #216]
    1120:	ldrh	w1, [x0, #2]
    1124:	lsr	w0, w1, #8
    1128:	strb	w0, [x19]
    112c:	ldr	x0, [sp, #216]
    1130:	add	x2, x0, #0x1
    1134:	str	x2, [sp, #216]
    1138:	strb	w1, [x0]
    113c:	ldp	x0, x19, [sp, #208]
    1140:	str	wzr, [x23]
    1144:	add	x0, x0, #0x4
    1148:	str	x0, [sp, #208]
    114c:	b	de4 <gconv@@Base+0x33c>
    1150:	mov	w4, #0x1                   	// #1
    1154:	mov	w2, #0x8680                	// #34432
    1158:	mov	w0, w4
    115c:	b	10e8 <gconv@@Base+0x640>
    1160:	mov	w2, #0x82a9                	// #33449
    1164:	mov	w4, #0xe                   	// #14
    1168:	mov	w0, #0xb                   	// #11
    116c:	b	10e8 <gconv@@Base+0x640>
    1170:	ldr	x2, [sp, #168]
    1174:	cbz	x2, 117c <gconv@@Base+0x6d4>
    1178:	cbnz	w3, 11d4 <gconv@@Base+0x72c>
    117c:	mov	w22, #0x6                   	// #6
    1180:	str	x1, [x25]
    1184:	b	fb8 <gconv@@Base+0x510>
    1188:	mov	w2, #0x857b                	// #34171
    118c:	mov	w4, #0x5                   	// #5
    1190:	mov	w0, #0x2                   	// #2
    1194:	b	10e8 <gconv@@Base+0x640>
    1198:	add	x0, x19, #0x1
    119c:	str	x0, [sp, #216]
    11a0:	mov	w0, #0x7e                  	// #126
    11a4:	strb	w0, [x19]
    11a8:	b	f44 <gconv@@Base+0x49c>
    11ac:	mov	w2, #0xa6bf                	// #42687
    11b0:	movk	w2, #0x2, lsl #16
    11b4:	cmp	w0, w2
    11b8:	b.ls	11ec <gconv@@Base+0x744>  // b.plast
    11bc:	mov	w2, #0x1c00                	// #7168
    11c0:	cmp	w2, w0, lsr #7
    11c4:	b.ne	1200 <gconv@@Base+0x758>  // b.any
    11c8:	mov	x0, x1
    11cc:	str	x1, [sp, #208]
    11d0:	b	de4 <gconv@@Base+0x33c>
    11d4:	ldr	x0, [x2]
    11d8:	add	x1, x1, #0x1
    11dc:	mov	w22, #0x6                   	// #6
    11e0:	add	x0, x0, #0x1
    11e4:	str	x0, [x2]
    11e8:	b	f14 <gconv@@Base+0x46c>
    11ec:	adrp	x2, 12000 <gconv@@Base+0x11558>
    11f0:	lsr	w3, w0, #6
    11f4:	ldr	x2, [x2, #4000]
    11f8:	ldrsh	w2, [x2, x3, lsl #1]
    11fc:	tbz	w2, #31, 12f4 <gconv@@Base+0x84c>
    1200:	ldr	x0, [sp, #168]
    1204:	cbz	x0, 1b38 <gconv@@Base+0x1090>
    1208:	ldr	w0, [x27, #16]
    120c:	tbnz	w0, #3, 173c <gconv@@Base+0xc94>
    1210:	ldr	x0, [sp, #208]
    1214:	tbnz	w10, #1, 19b4 <gconv@@Base+0xf0c>
    1218:	mov	w22, #0x6                   	// #6
    121c:	b	df0 <gconv@@Base+0x348>
    1220:	ldr	w0, [sp, #112]
    1224:	str	x24, [x25]
    1228:	str	w0, [x23]
    122c:	ldr	x0, [sp, #144]
    1230:	ldr	x0, [x0, #96]
    1234:	cbz	x0, 1590 <gconv@@Base+0xae8>
    1238:	stp	x24, x21, [sp, #224]
    123c:	cmp	x28, x24
    1240:	ldr	w19, [x27, #16]
    1244:	b.eq	20e4 <gconv@@Base+0x163c>  // b.none
    1248:	mov	x30, x21
    124c:	add	x22, sp, #0xe8
    1250:	mov	w4, #0x4                   	// #4
    1254:	add	x3, x24, #0x4
    1258:	cmp	x28, x3
    125c:	b.cc	17f4 <gconv@@Base+0xd4c>  // b.lo, b.ul, b.last
    1260:	cmp	x8, x30
    1264:	b.ls	17c8 <gconv@@Base+0xd20>  // b.plast
    1268:	ldr	w0, [x23]
    126c:	ldr	w2, [x24]
    1270:	cmp	wzr, w0, asr #3
    1274:	asr	w1, w0, #3
    1278:	b.eq	1638 <gconv@@Base+0xb90>  // b.none
    127c:	cmp	w2, #0x2e5
    1280:	and	w3, w1, #0xffff
    1284:	b.eq	1b88 <gconv@@Base+0x10e0>  // b.none
    1288:	cmp	w2, #0x2e9
    128c:	b.eq	1c18 <gconv@@Base+0x1170>  // b.none
    1290:	cmp	w2, #0x300
    1294:	b.eq	1c74 <gconv@@Base+0x11cc>  // b.none
    1298:	cmp	w2, #0x301
    129c:	b.eq	1d18 <gconv@@Base+0x1270>  // b.none
    12a0:	mov	w0, #0x309a                	// #12442
    12a4:	cmp	w2, w0
    12a8:	b.eq	1c08 <gconv@@Base+0x1160>  // b.none
    12ac:	add	x0, x30, #0x1
    12b0:	cmp	x8, x0
    12b4:	b.ls	1d8c <gconv@@Base+0x12e4>  // b.plast
    12b8:	str	x0, [sp, #232]
    12bc:	lsr	w3, w3, #8
    12c0:	strb	w3, [x30]
    12c4:	ldr	x0, [sp, #232]
    12c8:	add	x2, x0, #0x1
    12cc:	str	x2, [sp, #232]
    12d0:	strb	w1, [x0]
    12d4:	ldp	x24, x30, [sp, #224]
    12d8:	str	wzr, [x23]
    12dc:	cmp	x28, x24
    12e0:	b.ne	1254 <gconv@@Base+0x7ac>  // b.any
    12e4:	sxtw	x0, w4
    12e8:	str	x28, [x25]
    12ec:	ldr	x8, [sp, #200]
    12f0:	b	1994 <gconv@@Base+0xeec>
    12f4:	adrp	x3, 12000 <gconv@@Base+0x11558>
    12f8:	and	w0, w0, #0x3f
    12fc:	ldr	x3, [x3, #4048]
    1300:	add	w0, w0, w2, lsl #6
    1304:	ldrh	w3, [x3, x0, lsl #1]
    1308:	cbz	w3, 1200 <gconv@@Base+0x758>
    130c:	lsr	w4, w3, #8
    1310:	and	w2, w3, #0x7f
    1314:	sub	w0, w4, #0x21
    1318:	cmp	w0, #0x5d
    131c:	b.ls	132c <gconv@@Base+0x884>  // b.plast
    1320:	cmp	w0, #0xcc
    1324:	b.ls	178c <gconv@@Base+0xce4>  // b.plast
    1328:	sub	w0, w4, #0x87
    132c:	tst	x0, #0x1
    1330:	sub	w4, w2, #0x21
    1334:	lsr	w0, w0, #1
    1338:	add	w2, w2, #0x3d
    133c:	csel	w2, w2, w4, ne  // ne = any
    1340:	cmp	w0, #0x1e
    1344:	add	w4, w0, #0x81
    1348:	add	w0, w0, #0xc1
    134c:	csel	w0, w0, w4, hi  // hi = pmore
    1350:	cmp	w2, #0x3e
    1354:	cinc	w2, w2, hi  // hi = pmore
    1358:	add	w2, w2, #0x40
    135c:	tbz	w3, #7, 143c <gconv@@Base+0x994>
    1360:	tbnz	w3, #15, 25e0 <gconv@@Base+0x1b38>
    1364:	orr	w2, w2, w0, lsl #8
    1368:	mov	x0, x1
    136c:	lsl	w2, w2, #3
    1370:	str	w2, [x23]
    1374:	str	x1, [sp, #208]
    1378:	b	de4 <gconv@@Base+0x33c>
    137c:	mul	w6, w4, w11
    1380:	add	w0, w0, w6
    1384:	ldrh	w0, [x15, x0, lsl #1]
    1388:	ubfx	x4, x0, #8, #8
    138c:	ldr	w4, [x14, x4, lsl #2]
    1390:	adds	w0, w4, w0, uxtb
    1394:	ccmp	w0, w12, #0x4, ne  // ne = any
    1398:	b.ne	1490 <gconv@@Base+0x9e8>  // b.any
    139c:	ldr	x0, [sp, #168]
    13a0:	cbz	x0, 117c <gconv@@Base+0x6d4>
    13a4:	cbz	w3, 117c <gconv@@Base+0x6d4>
    13a8:	mov	x1, x0
    13ac:	add	x2, x19, #0x4
    13b0:	ldr	x0, [x0]
    13b4:	cmp	x20, x2
    13b8:	mov	w22, #0x6                   	// #6
    13bc:	add	x0, x0, #0x1
    13c0:	str	x0, [x1]
    13c4:	mov	x1, x10
    13c8:	b.cs	f28 <gconv@@Base+0x480>  // b.hs, b.nlast
    13cc:	nop
    13d0:	mov	w22, #0x5                   	// #5
    13d4:	str	x1, [x25]
    13d8:	b	fb8 <gconv@@Base+0x510>
    13dc:	mov	w2, #0x8657                	// #34391
    13e0:	mov	w4, #0x4                   	// #4
    13e4:	mov	w0, #0x7                   	// #7
    13e8:	b	10e8 <gconv@@Base+0x640>
    13ec:	ldr	x2, [sp, #136]
    13f0:	mov	x20, x28
    13f4:	ldr	x1, [sp, #192]
    13f8:	mov	w8, w22
    13fc:	ldr	x0, [x2]
    1400:	mov	x21, x27
    1404:	mov	x28, x25
    1408:	str	x19, [x27]
    140c:	add	x0, x0, x1
    1410:	str	x0, [x2]
    1414:	ldr	w0, [sp, #132]
    1418:	cmp	w0, #0x0
    141c:	ccmp	w8, #0x7, #0x0, ne  // ne = any
    1420:	b.eq	1aa4 <gconv@@Base+0xffc>  // b.none
    1424:	ldp	x23, x24, [sp, #48]
    1428:	b	fcc <gconv@@Base+0x524>
    142c:	mov	w7, w22
    1430:	b	e64 <gconv@@Base+0x3bc>
    1434:	mov	w0, #0xa5                  	// #165
    1438:	b	f08 <gconv@@Base+0x460>
    143c:	add	x1, x19, #0x1
    1440:	cmp	x20, x1
    1444:	b.ls	f8c <gconv@@Base+0x4e4>  // b.plast
    1448:	str	x1, [sp, #216]
    144c:	strb	w0, [x19]
    1450:	ldr	x0, [sp, #216]
    1454:	add	x1, x0, #0x1
    1458:	str	x1, [sp, #216]
    145c:	strb	w2, [x0]
    1460:	b	f44 <gconv@@Base+0x49c>
    1464:	cmp	w4, #0x62
    1468:	ccmp	w4, w8, #0x4, ls  // ls = plast
    146c:	b.eq	1720 <gconv@@Base+0xc78>  // b.none
    1470:	cmp	w4, #0x5e
    1474:	add	w17, w4, #0xa2
    1478:	mov	w6, #0x2284                	// #8836
    147c:	b.eq	1380 <gconv@@Base+0x8d8>  // b.none
    1480:	sub	w4, w4, #0x60
    1484:	cmp	w4, #0x2
    1488:	b.ls	1730 <gconv@@Base+0xc88>  // b.plast
    148c:	b	1094 <gconv@@Base+0x5ec>
    1490:	add	x1, x1, #0x2
    1494:	cmp	w0, #0x7f
    1498:	b.hi	f0c <gconv@@Base+0x464>  // b.pmore
    149c:	sub	w0, w0, #0x1
    14a0:	mov	x4, x19
    14a4:	lsl	x0, x0, #2
    14a8:	add	x6, x13, x0
    14ac:	ldrh	w0, [x13, x0]
    14b0:	str	w0, [x4], #8
    14b4:	ldrh	w0, [x6, #2]
    14b8:	cmp	x20, x4
    14bc:	b.cc	1d38 <gconv@@Base+0x1290>  // b.lo, b.ul, b.last
    14c0:	str	w0, [x19, #4]
    14c4:	mov	x19, x4
    14c8:	b	f14 <gconv@@Base+0x46c>
    14cc:	cmp	w1, #0x4
    14d0:	b.hi	23c0 <gconv@@Base+0x1918>  // b.pmore
    14d4:	add	x7, x27, #0x4
    14d8:	cbz	w1, 1a4c <gconv@@Base+0xfa4>
    14dc:	ldrb	w3, [x23, #4]
    14e0:	ldr	w5, [sp, #112]
    14e4:	strb	w3, [sp, #240]
    14e8:	mov	x3, #0x1                   	// #1
    14ec:	tst	w5, #0x6
    14f0:	b.eq	1500 <gconv@@Base+0xa58>  // b.none
    14f4:	ldrb	w5, [x23, #5]
    14f8:	mov	x3, #0x2                   	// #2
    14fc:	strb	w5, [sp, #241]
    1500:	cmp	x25, x7
    1504:	b.cc	19a8 <gconv@@Base+0xf00>  // b.lo, b.ul, b.last
    1508:	add	x22, sp, #0xf0
    150c:	ldrb	w6, [x2]
    1510:	add	x5, x3, #0x1
    1514:	strb	w6, [x22, x3]
    1518:	ldr	w3, [sp, #112]
    151c:	cmp	wzr, w3, asr #3
    1520:	asr	w3, w3, #3
    1524:	b.ne	20f4 <gconv@@Base+0x164c>  // b.any
    1528:	ldrb	w3, [sp, #240]
    152c:	cmp	w3, #0x7f
    1530:	b.hi	1cfc <gconv@@Base+0x1254>  // b.pmore
    1534:	cmp	w3, #0x5c
    1538:	b.eq	21bc <gconv@@Base+0x1714>  // b.none
    153c:	cmp	w3, #0x7e
    1540:	mov	w1, #0x203e                	// #8254
    1544:	csel	w3, w3, w1, ne  // ne = any
    1548:	mov	x0, #0x1                   	// #1
    154c:	str	w3, [x27]
    1550:	mov	x27, x7
    1554:	ldr	w1, [x23]
    1558:	str	w1, [sp, #112]
    155c:	and	w4, w1, #0x7
    1560:	cmp	x4, x0
    1564:	b.ge	2358 <gconv@@Base+0x18b0>  // b.tcont
    1568:	sub	x0, x0, x4
    156c:	ldr	w10, [x21, #16]
    1570:	ldr	w1, [sp, #112]
    1574:	add	x24, x2, x0
    1578:	str	x24, [x28]
    157c:	and	w1, w1, #0xfffffff8
    1580:	str	w1, [sp, #112]
    1584:	ldr	x0, [x18, #96]
    1588:	str	w1, [x23]
    158c:	b	d0c <gconv@@Base+0x264>
    1590:	ldr	w3, [x27, #16]
    1594:	cmp	x28, x24
    1598:	b.eq	20e4 <gconv@@Base+0x163c>  // b.none
    159c:	add	x1, x21, #0x4
    15a0:	mov	x30, x21
    15a4:	cmp	x8, x1
    15a8:	mov	x0, #0x4                   	// #4
    15ac:	b.cc	207c <gconv@@Base+0x15d4>  // b.lo, b.ul, b.last
    15b0:	adrp	x2, 12000 <gconv@@Base+0x11558>
    15b4:	adrp	x4, 12000 <gconv@@Base+0x11558>
    15b8:	adrp	x19, 12000 <gconv@@Base+0x11558>
    15bc:	and	w3, w3, #0x2
    15c0:	ldr	x14, [x2, #4016]
    15c4:	mov	w15, #0x7f                  	// #127
    15c8:	ldr	x18, [x4, #4040]
    15cc:	mov	w13, #0xfffd                	// #65533
    15d0:	ldr	x19, [x19, #4064]
    15d4:	mov	w5, #0x5e                  	// #94
    15d8:	ldr	w2, [sp, #112]
    15dc:	mov	w11, #0xfec0                	// #65216
    15e0:	ldr	x6, [sp, #168]
    15e4:	mov	w10, #0x203e                	// #8254
    15e8:	cmp	wzr, w2, asr #3
    15ec:	asr	w2, w2, #3
    15f0:	b.ne	1614 <gconv@@Base+0xb6c>  // b.any
    15f4:	ldrb	w2, [x24]
    15f8:	cmp	w2, #0x7f
    15fc:	b.hi	1670 <gconv@@Base+0xbc8>  // b.pmore
    1600:	cmp	w2, #0x5c
    1604:	b.eq	1eac <gconv@@Base+0x1404>  // b.none
    1608:	cmp	w2, #0x7e
    160c:	csel	w2, w2, w10, ne  // ne = any
    1610:	add	x24, x24, #0x1
    1614:	str	w2, [x30]
    1618:	mov	x30, x1
    161c:	cmp	x28, x24
    1620:	b.eq	1990 <gconv@@Base+0xee8>  // b.none
    1624:	add	x1, x30, #0x4
    1628:	cmp	x8, x1
    162c:	b.cc	198c <gconv@@Base+0xee4>  // b.lo, b.ul, b.last
    1630:	ldr	w2, [x23]
    1634:	b	15e8 <gconv@@Base+0xb40>
    1638:	cmp	w2, #0x7f
    163c:	b.hi	1684 <gconv@@Base+0xbdc>  // b.pmore
    1640:	add	x0, x30, #0x1
    1644:	str	x0, [sp, #232]
    1648:	strb	w2, [x30]
    164c:	ldp	x24, x30, [sp, #224]
    1650:	add	x24, x24, #0x4
    1654:	str	x24, [sp, #224]
    1658:	b	12dc <gconv@@Base+0x834>
    165c:	mov	x1, x24
    1660:	mov	x19, x21
    1664:	mov	w22, #0x5                   	// #5
    1668:	str	x1, [x25]
    166c:	b	fb8 <gconv@@Base+0x510>
    1670:	sub	w4, w2, #0xa1
    1674:	cmp	w4, #0x3e
    1678:	b.hi	1828 <gconv@@Base+0xd80>  // b.pmore
    167c:	add	w2, w2, w11
    1680:	b	1610 <gconv@@Base+0xb68>
    1684:	cmp	w2, #0xa5
    1688:	b.eq	1b74 <gconv@@Base+0x10cc>  // b.none
    168c:	mov	w0, #0x203e                	// #8254
    1690:	cmp	w2, w0
    1694:	b.eq	1a04 <gconv@@Base+0xf5c>  // b.none
    1698:	mov	w0, #0xffff009f            	// #-65377
    169c:	add	w0, w2, w0
    16a0:	cmp	w0, #0x3e
    16a4:	b.hi	1c98 <gconv@@Base+0x11f0>  // b.pmore
    16a8:	add	x0, x30, #0x1
    16ac:	str	x0, [sp, #232]
    16b0:	add	w2, w2, #0x40
    16b4:	strb	w2, [x30]
    16b8:	b	164c <gconv@@Base+0xba4>
    16bc:	ldr	x0, [sp, #104]
    16c0:	cbnz	x0, 23e0 <gconv@@Base+0x1938>
    16c4:	cmp	w6, #0x1
    16c8:	ldr	x20, [x21, #32]
    16cc:	b.ne	1b44 <gconv@@Base+0x109c>  // b.any
    16d0:	ldr	w22, [x20]
    16d4:	ldr	x2, [x21]
    16d8:	cbz	w22, 1a18 <gconv@@Base+0xf70>
    16dc:	ldr	x1, [x18, #96]
    16e0:	ldr	x0, [x21, #8]
    16e4:	cbz	x1, 1fc0 <gconv@@Base+0x1518>
    16e8:	add	x19, x2, #0x2
    16ec:	cmp	x0, x19
    16f0:	b.cc	2108 <gconv@@Base+0x1660>  // b.lo, b.ul, b.last
    16f4:	asr	w0, w22, #3
    16f8:	rev16	w0, w0
    16fc:	strh	w0, [x2]
    1700:	ldr	x0, [x21, #32]
    1704:	str	wzr, [x0]
    1708:	ldr	w0, [x21, #16]
    170c:	tbz	w0, #0, 1db4 <gconv@@Base+0x130c>
    1710:	mov	x2, x19
    1714:	mov	w8, #0x0                   	// #0
    1718:	str	x2, [x21]
    171c:	b	fcc <gconv@@Base+0x524>
    1720:	sub	w6, w4, #0x5a
    1724:	add	w17, w4, #0xa8
    1728:	cmp	w6, #0x2
    172c:	b.hi	1d28 <gconv@@Base+0x1280>  // b.pmore
    1730:	sub	w6, w17, #0xa3
    1734:	mul	w6, w6, w11
    1738:	b	1380 <gconv@@Base+0x8d8>
    173c:	ldr	x2, [x25]
    1740:	mov	x4, x28
    1744:	ldr	x0, [sp, #144]
    1748:	add	x3, sp, #0xd0
    174c:	ldr	x6, [sp, #168]
    1750:	mov	x1, x27
    1754:	str	x5, [sp, #120]
    1758:	str	w10, [sp, #176]
    175c:	str	x9, [sp, #184]
    1760:	bl	890 <__gconv_transliterate@plt>
    1764:	ldr	w10, [sp, #176]
    1768:	mov	w22, w0
    176c:	cmp	w0, #0x6
    1770:	ldr	x5, [sp, #120]
    1774:	ldr	x9, [sp, #184]
    1778:	b.eq	1a80 <gconv@@Base+0xfd8>  // b.none
    177c:	cmp	w0, #0x5
    1780:	ldp	x0, x19, [sp, #208]
    1784:	b.ne	de4 <gconv@@Base+0x33c>  // b.any
    1788:	b	df0 <gconv@@Base+0x348>
    178c:	cmp	w0, #0x8a
    1790:	mov	w6, #0x87                  	// #135
    1794:	ccmp	w0, w6, #0x4, ls  // ls = plast
    1798:	sub	w0, w4, #0x49
    179c:	sub	w4, w4, #0x43
    17a0:	csel	w0, w4, w0, ne  // ne = any
    17a4:	b	132c <gconv@@Base+0x884>
    17a8:	mov	x20, x28
    17ac:	mov	x21, x27
    17b0:	mov	x28, x25
    17b4:	mov	w8, w7
    17b8:	b	1414 <gconv@@Base+0x96c>
    17bc:	mov	x0, x28
    17c0:	mov	w22, #0x4                   	// #4
    17c4:	b	df0 <gconv@@Base+0x348>
    17c8:	ldr	x0, [sp, #200]
    17cc:	ldr	x1, [sp, #224]
    17d0:	str	x1, [x25]
    17d4:	cmp	x30, x0
    17d8:	b.ne	1cdc <gconv@@Base+0x1234>  // b.any
    17dc:	cmp	x30, x21
    17e0:	b.ne	e64 <gconv@@Base+0x3bc>  // b.any
    17e4:	ldr	w0, [x27, #20]
    17e8:	sub	w0, w0, #0x1
    17ec:	str	w0, [x27, #20]
    17f0:	b	e64 <gconv@@Base+0x3bc>
    17f4:	ldr	x0, [sp, #200]
    17f8:	ldr	x1, [sp, #224]
    17fc:	str	x1, [x25]
    1800:	cmp	x30, x0
    1804:	b.ne	1cdc <gconv@@Base+0x1234>  // b.any
    1808:	adrp	x3, 2000 <gconv@@Base+0x1558>
    180c:	adrp	x1, 2000 <gconv@@Base+0x1558>
    1810:	adrp	x0, 2000 <gconv@@Base+0x1558>
    1814:	add	x3, x3, #0x8d8
    1818:	add	x1, x1, #0x700
    181c:	add	x0, x0, #0x848
    1820:	mov	w2, #0x2eb                 	// #747
    1824:	bl	8e0 <__assert_fail@plt>
    1828:	sub	w16, w2, #0xe0
    182c:	sub	w4, w2, #0x81
    1830:	cmp	w16, #0x1c
    1834:	ccmp	w4, #0x1e, #0x0, hi  // hi = pmore
    1838:	b.hi	19e4 <gconv@@Base+0xf3c>  // b.pmore
    183c:	add	x22, x24, #0x1
    1840:	cmp	x28, x22
    1844:	b.ls	22f4 <gconv@@Base+0x184c>  // b.plast
    1848:	ldrb	w17, [x24, #1]
    184c:	sub	w16, w17, #0x40
    1850:	and	w12, w16, #0xff
    1854:	cmp	w12, #0xbc
    1858:	ccmp	w17, w15, #0x4, ls  // ls = plast
    185c:	b.eq	18d8 <gconv@@Base+0xe30>  // b.none
    1860:	cmp	w2, #0xdf
    1864:	sub	w2, w2, #0xc1
    1868:	csel	w4, w2, w4, hi  // hi = pmore
    186c:	cmp	w17, #0x7f
    1870:	lsl	w4, w4, #1
    1874:	b.ls	188c <gconv@@Base+0xde4>  // b.plast
    1878:	sub	w16, w17, #0x41
    187c:	cmp	w16, #0x5d
    1880:	b.ls	188c <gconv@@Base+0xde4>  // b.plast
    1884:	sub	w16, w17, #0x9f
    1888:	add	w4, w4, #0x1
    188c:	cmp	w4, #0x5d
    1890:	b.ls	1e08 <gconv@@Base+0x1360>  // b.plast
    1894:	cmp	w4, #0x66
    1898:	b.ls	1fdc <gconv@@Base+0x1534>  // b.plast
    189c:	add	w2, w4, #0xe6
    18a0:	cmp	w2, #0x5d
    18a4:	b.ls	200c <gconv@@Base+0x1564>  // b.plast
    18a8:	sub	w4, w2, #0x10b
    18ac:	cmp	w4, #0x3
    18b0:	b.hi	2688 <gconv@@Base+0x1be0>  // b.pmore
    18b4:	sub	w2, w2, #0xa8
    18b8:	mul	w17, w2, w5
    18bc:	add	w16, w16, w17
    18c0:	ldrh	w2, [x18, x16, lsl #1]
    18c4:	ubfx	x4, x2, #8, #8
    18c8:	ldr	w4, [x14, x4, lsl #2]
    18cc:	adds	w2, w4, w2, uxtb
    18d0:	ccmp	w2, w13, #0x4, ne  // ne = any
    18d4:	b.ne	1afc <gconv@@Base+0x1054>  // b.any
    18d8:	cbz	x6, 1c6c <gconv@@Base+0x11c4>
    18dc:	cbz	w3, 1c6c <gconv@@Base+0x11c4>
    18e0:	ldr	x0, [x6]
    18e4:	mov	x24, x22
    18e8:	add	x0, x0, #0x1
    18ec:	str	x0, [x6]
    18f0:	mov	x0, #0x6                   	// #6
    18f4:	b	1624 <gconv@@Base+0xb7c>
    18f8:	cmp	w0, #0x7f
    18fc:	b.ls	19d4 <gconv@@Base+0xf2c>  // b.plast
    1900:	cmp	w0, #0xa5
    1904:	b.eq	1fac <gconv@@Base+0x1504>  // b.none
    1908:	mov	w3, #0x203e                	// #8254
    190c:	cmp	w0, w3
    1910:	b.eq	2014 <gconv@@Base+0x156c>  // b.none
    1914:	mov	w3, #0xffff009f            	// #-65377
    1918:	add	w3, w0, w3
    191c:	cmp	w3, #0x3e
    1920:	b.hi	2028 <gconv@@Base+0x1580>  // b.pmore
    1924:	add	x1, x27, #0x1
    1928:	str	x1, [sp, #232]
    192c:	add	w0, w0, #0x40
    1930:	strb	w0, [x27]
    1934:	ldr	x0, [sp, #224]
    1938:	add	x0, x0, #0x4
    193c:	str	x0, [sp, #224]
    1940:	cmp	x0, x22
    1944:	b.eq	cf4 <gconv@@Base+0x24c>  // b.none
    1948:	ldr	w6, [x23]
    194c:	sub	x22, x0, x22
    1950:	and	x24, x6, #0x7
    1954:	cmp	x22, x24
    1958:	b.le	2600 <gconv@@Base+0x1b58>
    195c:	ldr	w19, [x21, #16]
    1960:	ldr	x2, [x28]
    1964:	sub	x22, x22, x24
    1968:	add	x24, x2, x22
    196c:	str	x24, [x28]
    1970:	and	w6, w6, #0xfffffff8
    1974:	mov	w10, w19
    1978:	str	w6, [sp, #112]
    197c:	ldr	x0, [x18, #96]
    1980:	ldr	x27, [sp, #232]
    1984:	str	w6, [x23]
    1988:	b	d0c <gconv@@Base+0x264>
    198c:	mov	x0, #0x5                   	// #5
    1990:	str	x24, [x25]
    1994:	cmp	x30, x8
    1998:	b.ne	1cdc <gconv@@Base+0x1234>  // b.any
    199c:	cmp	x0, #0x5
    19a0:	b.eq	17dc <gconv@@Base+0xd34>  // b.none
    19a4:	b	1808 <gconv@@Base+0xd60>
    19a8:	mov	w8, #0x5                   	// #5
    19ac:	ldp	x23, x24, [sp, #48]
    19b0:	b	fcc <gconv@@Base+0x524>
    19b4:	ldr	x2, [sp, #168]
    19b8:	add	x0, x0, #0x4
    19bc:	mov	w22, #0x6                   	// #6
    19c0:	str	x0, [sp, #208]
    19c4:	ldr	x1, [x2]
    19c8:	add	x1, x1, #0x1
    19cc:	str	x1, [x2]
    19d0:	b	de4 <gconv@@Base+0x33c>
    19d4:	add	x1, x27, #0x1
    19d8:	str	x1, [sp, #232]
    19dc:	strb	w0, [x27]
    19e0:	b	1934 <gconv@@Base+0xe8c>
    19e4:	cbz	x6, 1c6c <gconv@@Base+0x11c4>
    19e8:	cbz	w3, 1c6c <gconv@@Base+0x11c4>
    19ec:	ldr	x1, [x6]
    19f0:	add	x24, x24, #0x1
    19f4:	mov	x0, #0x6                   	// #6
    19f8:	add	x1, x1, #0x1
    19fc:	str	x1, [x6]
    1a00:	b	161c <gconv@@Base+0xb74>
    1a04:	add	x0, x30, #0x1
    1a08:	str	x0, [sp, #232]
    1a0c:	mov	w0, #0x7e                  	// #126
    1a10:	strb	w0, [x30]
    1a14:	b	164c <gconv@@Base+0xba4>
    1a18:	cbnz	w1, 1714 <gconv@@Base+0xc6c>
    1a1c:	mov	x0, x26
    1a20:	bl	8d0 <_dl_mcount_wrapper_check@plt>
    1a24:	ldp	x0, x1, [sp, #152]
    1a28:	mov	w6, #0x1                   	// #1
    1a2c:	ldr	w7, [sp, #132]
    1a30:	ldr	x5, [sp, #136]
    1a34:	mov	x4, #0x0                   	// #0
    1a38:	mov	x3, #0x0                   	// #0
    1a3c:	mov	x2, #0x0                   	// #0
    1a40:	blr	x26
    1a44:	mov	w8, w0
    1a48:	b	fcc <gconv@@Base+0x524>
    1a4c:	cmp	x25, x7
    1a50:	b.cc	19a8 <gconv@@Base+0xf00>  // b.lo, b.ul, b.last
    1a54:	mov	x6, x2
    1a58:	add	x22, sp, #0xf0
    1a5c:	mov	x3, #0x0                   	// #0
    1a60:	ldrb	w8, [x6], #1
    1a64:	add	x5, x3, #0x1
    1a68:	strb	w8, [x22, x3]
    1a6c:	cmp	x5, #0x1
    1a70:	ccmp	x20, x6, #0x0, ls  // ls = plast
    1a74:	mov	x3, #0x1                   	// #1
    1a78:	b.hi	1a60 <gconv@@Base+0xfb8>  // b.pmore
    1a7c:	b	1518 <gconv@@Base+0xa70>
    1a80:	ldr	x19, [sp, #216]
    1a84:	b	1210 <gconv@@Base+0x768>
    1a88:	sub	w6, w17, #0xa8
    1a8c:	mul	w6, w6, w11
    1a90:	b	1380 <gconv@@Base+0x8d8>
    1a94:	mov	w1, #0x8684                	// #34436
    1a98:	mov	w2, #0x1                   	// #1
    1a9c:	mov	w0, #0x0                   	// #0
    1aa0:	b	c74 <gconv@@Base+0x1cc>
    1aa4:	ldr	x1, [x28]
    1aa8:	sub	x0, x20, x1
    1aac:	cmp	x0, #0x3
    1ab0:	b.gt	2338 <gconv@@Base+0x1890>
    1ab4:	ldr	x3, [x21, #32]
    1ab8:	cmp	x1, x20
    1abc:	mov	x0, x1
    1ac0:	add	x2, x3, #0x4
    1ac4:	b.cs	22ec <gconv@@Base+0x1844>  // b.hs, b.nlast
    1ac8:	add	x0, x0, #0x1
    1acc:	str	x0, [x28]
    1ad0:	cmp	x0, x20
    1ad4:	ldurb	w4, [x0, #-1]
    1ad8:	strb	w4, [x2], #1
    1adc:	b.ne	1ac8 <gconv@@Base+0x1020>  // b.any
    1ae0:	sub	w0, w0, w1
    1ae4:	ldr	w1, [x3]
    1ae8:	ldp	x23, x24, [sp, #48]
    1aec:	and	w1, w1, #0xfffffff8
    1af0:	orr	w0, w1, w0
    1af4:	str	w0, [x3]
    1af8:	b	fcc <gconv@@Base+0x524>
    1afc:	add	x24, x24, #0x2
    1b00:	cmp	w2, #0x7f
    1b04:	b.hi	1614 <gconv@@Base+0xb6c>  // b.pmore
    1b08:	sub	w2, w2, #0x1
    1b0c:	mov	x16, x30
    1b10:	lsl	x2, x2, #2
    1b14:	add	x4, x19, x2
    1b18:	ldrh	w2, [x19, x2]
    1b1c:	str	w2, [x16], #8
    1b20:	ldrh	w4, [x4, #2]
    1b24:	cmp	x8, x16
    1b28:	b.cc	258c <gconv@@Base+0x1ae4>  // b.lo, b.ul, b.last
    1b2c:	str	w4, [x30, #4]
    1b30:	mov	x30, x16
    1b34:	b	161c <gconv@@Base+0xb74>
    1b38:	mov	w22, #0x6                   	// #6
    1b3c:	ldr	x0, [sp, #208]
    1b40:	b	df0 <gconv@@Base+0x348>
    1b44:	str	xzr, [x20]
    1b48:	mov	w8, #0x0                   	// #0
    1b4c:	ldr	w0, [x21, #16]
    1b50:	tbnz	w0, #0, fcc <gconv@@Base+0x524>
    1b54:	mov	x0, x26
    1b58:	str	w6, [sp, #104]
    1b5c:	bl	8d0 <_dl_mcount_wrapper_check@plt>
    1b60:	ldr	w6, [sp, #104]
    1b64:	ldr	w7, [sp, #132]
    1b68:	ldr	x5, [sp, #136]
    1b6c:	ldp	x0, x1, [sp, #152]
    1b70:	b	1a34 <gconv@@Base+0xf8c>
    1b74:	add	x0, x30, #0x1
    1b78:	str	x0, [sp, #232]
    1b7c:	mov	w0, #0x5c                  	// #92
    1b80:	strb	w0, [x30]
    1b84:	b	164c <gconv@@Base+0xba4>
    1b88:	mov	w0, #0x0                   	// #0
    1b8c:	mov	w2, #0x8684                	// #34436
    1b90:	mov	w5, #0x1                   	// #1
    1b94:	add	w5, w5, w0
    1b98:	b	1bb0 <gconv@@Base+0x1108>
    1b9c:	add	w0, w0, #0x1
    1ba0:	cmp	w0, w5
    1ba4:	b.eq	12ac <gconv@@Base+0x804>  // b.none
    1ba8:	ubfiz	x2, x0, #2, #32
    1bac:	ldrh	w2, [x9, x2]
    1bb0:	cmp	w3, w2
    1bb4:	b.ne	1b9c <gconv@@Base+0x10f4>  // b.any
    1bb8:	add	x1, x30, #0x1
    1bbc:	cmp	x8, x1
    1bc0:	b.ls	17c8 <gconv@@Base+0xd20>  // b.plast
    1bc4:	add	x0, x9, w0, uxtw #2
    1bc8:	str	x1, [sp, #232]
    1bcc:	ldrh	w1, [x0, #2]
    1bd0:	lsr	w0, w1, #8
    1bd4:	strb	w0, [x30]
    1bd8:	ldr	x0, [sp, #232]
    1bdc:	add	x2, x0, #0x1
    1be0:	str	x2, [sp, #232]
    1be4:	strb	w1, [x0]
    1be8:	ldp	x24, x30, [sp, #224]
    1bec:	str	wzr, [x23]
    1bf0:	add	x24, x24, #0x4
    1bf4:	str	x24, [sp, #224]
    1bf8:	b	12dc <gconv@@Base+0x834>
    1bfc:	mov	x0, #0x4                   	// #4
    1c00:	mov	x24, #0x0                   	// #0
    1c04:	b	be0 <gconv@@Base+0x138>
    1c08:	mov	w2, #0x82a9                	// #33449
    1c0c:	mov	w5, #0xe                   	// #14
    1c10:	mov	w0, #0xb                   	// #11
    1c14:	b	1b94 <gconv@@Base+0x10ec>
    1c18:	mov	w5, #0x1                   	// #1
    1c1c:	mov	w2, #0x8680                	// #34432
    1c20:	mov	w0, w5
    1c24:	b	1b94 <gconv@@Base+0x10ec>
    1c28:	add	x0, x27, #0x1
    1c2c:	cmp	x25, x0
    1c30:	b.ls	19a8 <gconv@@Base+0xf00>  // b.plast
    1c34:	str	x0, [sp, #232]
    1c38:	lsr	w3, w3, #8
    1c3c:	strb	w3, [x27]
    1c40:	ldr	x0, [sp, #232]
    1c44:	add	x1, x0, #0x1
    1c48:	str	x1, [sp, #232]
    1c4c:	strb	w5, [x0]
    1c50:	ldr	x0, [sp, #224]
    1c54:	str	wzr, [x23]
    1c58:	cmp	x0, x22
    1c5c:	b.eq	2110 <gconv@@Base+0x1668>  // b.none
    1c60:	sub	x22, x0, x22
    1c64:	mov	x24, #0x0                   	// #0
    1c68:	b	1954 <gconv@@Base+0xeac>
    1c6c:	mov	x0, #0x6                   	// #6
    1c70:	b	1990 <gconv@@Base+0xee8>
    1c74:	mov	w2, #0x857b                	// #34171
    1c78:	mov	w5, #0x5                   	// #5
    1c7c:	mov	w0, #0x2                   	// #2
    1c80:	b	1b94 <gconv@@Base+0x10ec>
    1c84:	mov	x1, x28
    1c88:	mov	x19, x21
    1c8c:	mov	w22, #0x4                   	// #4
    1c90:	str	x1, [x25]
    1c94:	b	fb8 <gconv@@Base+0x510>
    1c98:	mov	w0, #0xa6bf                	// #42687
    1c9c:	movk	w0, #0x2, lsl #16
    1ca0:	cmp	w2, w0
    1ca4:	b.ls	1e10 <gconv@@Base+0x1368>  // b.plast
    1ca8:	mov	w0, #0x1c00                	// #7168
    1cac:	cmp	w0, w2, lsr #7
    1cb0:	b.eq	22e0 <gconv@@Base+0x1838>  // b.none
    1cb4:	ldr	x0, [sp, #168]
    1cb8:	cbz	x0, 17f4 <gconv@@Base+0xd4c>
    1cbc:	ldr	w0, [x27, #16]
    1cc0:	tbnz	w0, #3, 227c <gconv@@Base+0x17d4>
    1cc4:	ldr	x14, [sp, #224]
    1cc8:	tbnz	w19, #1, 225c <gconv@@Base+0x17b4>
    1ccc:	ldr	x0, [sp, #200]
    1cd0:	str	x14, [x25]
    1cd4:	cmp	x0, x30
    1cd8:	b.eq	1808 <gconv@@Base+0xd60>  // b.none
    1cdc:	adrp	x3, 2000 <gconv@@Base+0x1558>
    1ce0:	adrp	x1, 2000 <gconv@@Base+0x1558>
    1ce4:	adrp	x0, 2000 <gconv@@Base+0x1558>
    1ce8:	add	x3, x3, #0x8d8
    1cec:	add	x1, x1, #0x700
    1cf0:	add	x0, x0, #0x830
    1cf4:	mov	w2, #0x2ea                 	// #746
    1cf8:	bl	8e0 <__assert_fail@plt>
    1cfc:	sub	w0, w3, #0xa1
    1d00:	cmp	w0, #0x3e
    1d04:	b.hi	1eb4 <gconv@@Base+0x140c>  // b.pmore
    1d08:	mov	w4, #0xfec0                	// #65216
    1d0c:	mov	x0, #0x1                   	// #1
    1d10:	add	w3, w3, w4
    1d14:	b	154c <gconv@@Base+0xaa4>
    1d18:	mov	w2, #0x8657                	// #34391
    1d1c:	mov	w5, #0x4                   	// #4
    1d20:	mov	w0, #0x7                   	// #7
    1d24:	b	1b94 <gconv@@Base+0x10ec>
    1d28:	cmp	w4, #0x5f
    1d2c:	mov	w6, #0x23fc                	// #9212
    1d30:	b.eq	1380 <gconv@@Base+0x8d8>  // b.none
    1d34:	b	1094 <gconv@@Base+0x5ec>
    1d38:	lsl	w0, w0, #3
    1d3c:	str	w0, [x23]
    1d40:	mov	x19, x2
    1d44:	mov	w22, #0x5                   	// #5
    1d48:	str	x1, [x25]
    1d4c:	b	fb8 <gconv@@Base+0x510>
    1d50:	str	x20, [x28]
    1d54:	cmp	x2, x20
    1d58:	b.cs	1d80 <gconv@@Base+0x12d8>  // b.hs, b.nlast
    1d5c:	add	x2, x2, #0x1
    1d60:	add	x23, x23, x24
    1d64:	str	x2, [sp, #224]
    1d68:	cmp	x20, x2
    1d6c:	add	x23, x23, #0x1
    1d70:	add	x2, x2, #0x1
    1d74:	ldurb	w0, [x2, #-2]
    1d78:	strb	w0, [x23, #3]
    1d7c:	b.ne	1d64 <gconv@@Base+0x12bc>  // b.any
    1d80:	mov	w8, #0x7                   	// #7
    1d84:	ldp	x23, x24, [sp, #48]
    1d88:	b	fcc <gconv@@Base+0x524>
    1d8c:	ldr	x0, [sp, #200]
    1d90:	ldr	x1, [sp, #224]
    1d94:	str	x1, [x25]
    1d98:	cmp	x0, x30
    1d9c:	b.eq	17dc <gconv@@Base+0xd34>  // b.none
    1da0:	b	1cdc <gconv@@Base+0x1234>
    1da4:	mov	w2, #0x1                   	// #1
    1da8:	mov	w1, #0x8680                	// #34432
    1dac:	mov	w0, w2
    1db0:	b	c74 <gconv@@Base+0x1cc>
    1db4:	cmp	x2, x19
    1db8:	b.cs	1a1c <gconv@@Base+0xf74>  // b.hs, b.nlast
    1dbc:	mov	x0, x26
    1dc0:	str	x2, [sp, #232]
    1dc4:	bl	8d0 <_dl_mcount_wrapper_check@plt>
    1dc8:	ldp	x0, x1, [sp, #152]
    1dcc:	mov	x3, x19
    1dd0:	ldr	w7, [sp, #132]
    1dd4:	add	x2, sp, #0xe8
    1dd8:	ldr	x5, [sp, #136]
    1ddc:	mov	w6, #0x0                   	// #0
    1de0:	mov	x4, #0x0                   	// #0
    1de4:	blr	x26
    1de8:	mov	w8, w0
    1dec:	cmp	w0, #0x4
    1df0:	b.eq	1a1c <gconv@@Base+0xf74>  // b.none
    1df4:	ldr	x0, [sp, #232]
    1df8:	cmp	x0, x19
    1dfc:	b.ne	26a0 <gconv@@Base+0x1bf8>  // b.any
    1e00:	cbnz	w8, fcc <gconv@@Base+0x524>
    1e04:	b	1a1c <gconv@@Base+0xf74>
    1e08:	mul	w17, w4, w5
    1e0c:	b	18bc <gconv@@Base+0xe14>
    1e10:	adrp	x0, 12000 <gconv@@Base+0x11558>
    1e14:	lsr	w1, w2, #6
    1e18:	ldr	x0, [x0, #4000]
    1e1c:	ldrsh	w0, [x0, x1, lsl #1]
    1e20:	tbnz	w0, #31, 1cb4 <gconv@@Base+0x120c>
    1e24:	adrp	x1, 12000 <gconv@@Base+0x11558>
    1e28:	and	w2, w2, #0x3f
    1e2c:	ldr	x1, [x1, #4048]
    1e30:	add	w0, w2, w0, lsl #6
    1e34:	ldrh	w5, [x1, x0, lsl #1]
    1e38:	cbz	w5, 1cb4 <gconv@@Base+0x120c>
    1e3c:	lsr	w2, w5, #8
    1e40:	and	w1, w5, #0x7f
    1e44:	sub	w0, w2, #0x21
    1e48:	cmp	w0, #0x5d
    1e4c:	b.ls	1e5c <gconv@@Base+0x13b4>  // b.plast
    1e50:	cmp	w0, #0xcc
    1e54:	b.ls	22fc <gconv@@Base+0x1854>  // b.plast
    1e58:	sub	w0, w2, #0x87
    1e5c:	tst	x0, #0x1
    1e60:	sub	w2, w1, #0x21
    1e64:	lsr	w0, w0, #1
    1e68:	add	w1, w1, #0x3d
    1e6c:	csel	w1, w1, w2, ne  // ne = any
    1e70:	cmp	w0, #0x1e
    1e74:	add	w2, w0, #0x81
    1e78:	add	w0, w0, #0xc1
    1e7c:	csel	w0, w0, w2, hi  // hi = pmore
    1e80:	cmp	w1, #0x3e
    1e84:	cinc	w1, w1, hi  // hi = pmore
    1e88:	add	w1, w1, #0x40
    1e8c:	tbz	w5, #7, 208c <gconv@@Base+0x15e4>
    1e90:	tbnz	w5, #15, 25e0 <gconv@@Base+0x1b38>
    1e94:	orr	w0, w1, w0, lsl #8
    1e98:	mov	x24, x3
    1e9c:	lsl	w0, w0, #3
    1ea0:	str	w0, [x23]
    1ea4:	str	x3, [sp, #224]
    1ea8:	b	12dc <gconv@@Base+0x834>
    1eac:	mov	w2, #0xa5                  	// #165
    1eb0:	b	1610 <gconv@@Base+0xb68>
    1eb4:	sub	w6, w3, #0xe0
    1eb8:	sub	w0, w3, #0x81
    1ebc:	cmp	w6, #0x1c
    1ec0:	ccmp	w0, #0x1e, #0x0, hi  // hi = pmore
    1ec4:	b.hi	1f84 <gconv@@Base+0x14dc>  // b.pmore
    1ec8:	add	x6, x22, x5
    1ecc:	add	x8, x22, #0x1
    1ed0:	cmp	x6, x8
    1ed4:	b.ls	21f0 <gconv@@Base+0x1748>  // b.plast
    1ed8:	ldrb	w1, [sp, #241]
    1edc:	mov	w6, #0x7f                  	// #127
    1ee0:	sub	w5, w1, #0x40
    1ee4:	and	w8, w5, #0xff
    1ee8:	cmp	w8, #0xbc
    1eec:	ccmp	w1, w6, #0x4, ls  // ls = plast
    1ef0:	b.eq	1f84 <gconv@@Base+0x14dc>  // b.none
    1ef4:	cmp	w3, #0xdf
    1ef8:	sub	w3, w3, #0xc1
    1efc:	csel	w0, w3, w0, hi  // hi = pmore
    1f00:	mov	w6, w5
    1f04:	cmp	w1, #0x7f
    1f08:	lsl	w0, w0, #1
    1f0c:	b.ls	1f24 <gconv@@Base+0x147c>  // b.plast
    1f10:	sub	w6, w1, #0x41
    1f14:	cmp	w6, #0x5d
    1f18:	b.ls	1f24 <gconv@@Base+0x147c>  // b.plast
    1f1c:	sub	w6, w1, #0x9f
    1f20:	add	w0, w0, #0x1
    1f24:	cmp	w0, #0x5d
    1f28:	b.ls	1f50 <gconv@@Base+0x14a8>  // b.plast
    1f2c:	cmp	w0, #0x66
    1f30:	b.ls	2658 <gconv@@Base+0x1bb0>  // b.plast
    1f34:	add	w0, w0, #0xe6
    1f38:	cmp	w0, #0x5d
    1f3c:	b.ls	1f50 <gconv@@Base+0x14a8>  // b.plast
    1f40:	sub	w1, w0, #0x10b
    1f44:	cmp	w1, #0x3
    1f48:	b.hi	2644 <gconv@@Base+0x1b9c>  // b.pmore
    1f4c:	sub	w0, w0, #0xa8
    1f50:	adrp	x3, 12000 <gconv@@Base+0x11558>
    1f54:	mov	w5, #0x5e                  	// #94
    1f58:	adrp	x1, 12000 <gconv@@Base+0x11558>
    1f5c:	madd	w5, w0, w5, w6
    1f60:	ldr	x3, [x3, #4040]
    1f64:	ldr	x0, [x1, #4016]
    1f68:	mov	w1, #0xfffd                	// #65533
    1f6c:	ldrh	w3, [x3, x5, lsl #1]
    1f70:	ubfx	x5, x3, #8, #8
    1f74:	ldr	w0, [x0, x5, lsl #2]
    1f78:	adds	w3, w0, w3, uxtb
    1f7c:	ccmp	w3, w1, #0x4, ne  // ne = any
    1f80:	b.ne	24b4 <gconv@@Base+0x1a0c>  // b.any
    1f84:	ldr	x0, [sp, #168]
    1f88:	cbz	x0, 1f90 <gconv@@Base+0x14e8>
    1f8c:	tbnz	w19, #1, 2244 <gconv@@Base+0x179c>
    1f90:	mov	w8, #0x6                   	// #6
    1f94:	ldp	x23, x24, [sp, #48]
    1f98:	b	fcc <gconv@@Base+0x524>
    1f9c:	mov	w1, #0x857b                	// #34171
    1fa0:	mov	w2, #0x5                   	// #5
    1fa4:	mov	w0, #0x2                   	// #2
    1fa8:	b	c74 <gconv@@Base+0x1cc>
    1fac:	add	x0, x27, #0x1
    1fb0:	str	x0, [sp, #232]
    1fb4:	mov	w0, #0x5c                  	// #92
    1fb8:	strb	w0, [x27]
    1fbc:	b	1934 <gconv@@Base+0xe8c>
    1fc0:	add	x19, x2, #0x4
    1fc4:	cmp	x19, x0
    1fc8:	b.hi	2108 <gconv@@Base+0x1660>  // b.pmore
    1fcc:	asr	w0, w22, #3
    1fd0:	str	w0, [x2]
    1fd4:	str	wzr, [x20]
    1fd8:	b	1708 <gconv@@Base+0xc60>
    1fdc:	cmp	w4, #0x62
    1fe0:	mov	w2, #0x5f                  	// #95
    1fe4:	ccmp	w4, w2, #0x4, ls  // ls = plast
    1fe8:	b.eq	20c4 <gconv@@Base+0x161c>  // b.none
    1fec:	cmp	w4, #0x5e
    1ff0:	add	w2, w4, #0xa2
    1ff4:	mov	w17, #0x2284                	// #8836
    1ff8:	b.eq	18bc <gconv@@Base+0xe14>  // b.none
    1ffc:	sub	w4, w4, #0x60
    2000:	cmp	w4, #0x2
    2004:	b.hi	18a8 <gconv@@Base+0xe00>  // b.pmore
    2008:	sub	w2, w2, #0xa3
    200c:	mul	w17, w2, w5
    2010:	b	18bc <gconv@@Base+0xe14>
    2014:	add	x0, x27, #0x1
    2018:	str	x0, [sp, #232]
    201c:	mov	w0, #0x7e                  	// #126
    2020:	strb	w0, [x27]
    2024:	b	1934 <gconv@@Base+0xe8c>
    2028:	mov	w3, #0xa6bf                	// #42687
    202c:	movk	w3, #0x2, lsl #16
    2030:	cmp	w0, w3
    2034:	b.ls	2124 <gconv@@Base+0x167c>  // b.plast
    2038:	mov	w3, #0x1c00                	// #7168
    203c:	cmp	w3, w0, lsr #7
    2040:	b.eq	2610 <gconv@@Base+0x1b68>  // b.none
    2044:	ldr	x0, [sp, #168]
    2048:	cbz	x0, 1f90 <gconv@@Base+0x14e8>
    204c:	tbnz	w19, #3, 2404 <gconv@@Base+0x195c>
    2050:	tbz	w19, #1, 1f90 <gconv@@Base+0x14e8>
    2054:	ldr	x2, [sp, #168]
    2058:	ldr	x0, [sp, #224]
    205c:	ldr	x1, [x2]
    2060:	add	x0, x0, #0x4
    2064:	str	x0, [sp, #224]
    2068:	add	x1, x1, #0x1
    206c:	str	x1, [x2]
    2070:	cmp	x0, x22
    2074:	b.ne	1948 <gconv@@Base+0xea0>  // b.any
    2078:	b	1f90 <gconv@@Base+0x14e8>
    207c:	str	x24, [x25]
    2080:	cmp	x8, x21
    2084:	b.eq	17e4 <gconv@@Base+0xd3c>  // b.none
    2088:	b	1cdc <gconv@@Base+0x1234>
    208c:	add	x2, x30, #0x1
    2090:	cmp	x8, x2
    2094:	b.ls	17c8 <gconv@@Base+0xd20>  // b.plast
    2098:	str	x2, [sp, #232]
    209c:	strb	w0, [x30]
    20a0:	ldr	x0, [sp, #232]
    20a4:	add	x2, x0, #0x1
    20a8:	str	x2, [sp, #232]
    20ac:	strb	w1, [x0]
    20b0:	b	164c <gconv@@Base+0xba4>
    20b4:	mov	w1, #0x8657                	// #34391
    20b8:	mov	w2, #0x4                   	// #4
    20bc:	mov	w0, #0x7                   	// #7
    20c0:	b	c74 <gconv@@Base+0x1cc>
    20c4:	sub	w17, w4, #0x5a
    20c8:	add	w2, w4, #0xa8
    20cc:	cmp	w17, #0x2
    20d0:	b.ls	2008 <gconv@@Base+0x1560>  // b.plast
    20d4:	cmp	w4, #0x5f
    20d8:	mov	w17, #0x23fc                	// #9212
    20dc:	b.eq	18bc <gconv@@Base+0xe14>  // b.none
    20e0:	b	18a8 <gconv@@Base+0xe00>
    20e4:	str	x28, [x25]
    20e8:	cmp	x8, x21
    20ec:	b.eq	1808 <gconv@@Base+0xd60>  // b.none
    20f0:	b	1cdc <gconv@@Base+0x1234>
    20f4:	str	w3, [x27]
    20f8:	ldr	w1, [x23]
    20fc:	ldr	w10, [x21, #16]
    2100:	str	w1, [sp, #112]
    2104:	b	d0c <gconv@@Base+0x264>
    2108:	mov	w8, #0x5                   	// #5
    210c:	b	fcc <gconv@@Base+0x524>
    2110:	ldr	w10, [x21, #16]
    2114:	str	wzr, [sp, #112]
    2118:	ldr	x24, [x28]
    211c:	ldr	x0, [x18, #96]
    2120:	b	d0c <gconv@@Base+0x264>
    2124:	adrp	x1, 12000 <gconv@@Base+0x11558>
    2128:	lsr	w3, w0, #6
    212c:	ldr	x1, [x1, #4000]
    2130:	ldrsh	w1, [x1, x3, lsl #1]
    2134:	tbnz	w1, #31, 2044 <gconv@@Base+0x159c>
    2138:	adrp	x3, 12000 <gconv@@Base+0x11558>
    213c:	and	w0, w0, #0x3f
    2140:	ldr	x3, [x3, #4048]
    2144:	add	w1, w0, w1, lsl #6
    2148:	ldrh	w3, [x3, x1, lsl #1]
    214c:	cbz	w3, 2044 <gconv@@Base+0x159c>
    2150:	lsr	w4, w3, #8
    2154:	and	w1, w3, #0x7f
    2158:	sub	w0, w4, #0x21
    215c:	cmp	w0, #0x5d
    2160:	b.ls	2170 <gconv@@Base+0x16c8>  // b.plast
    2164:	cmp	w0, #0xcc
    2168:	b.ls	2628 <gconv@@Base+0x1b80>  // b.plast
    216c:	sub	w0, w4, #0x87
    2170:	tst	x0, #0x1
    2174:	sub	w4, w1, #0x21
    2178:	lsr	w0, w0, #1
    217c:	add	w1, w1, #0x3d
    2180:	csel	w1, w1, w4, ne  // ne = any
    2184:	cmp	w0, #0x1e
    2188:	add	w4, w0, #0x81
    218c:	add	w0, w0, #0xc1
    2190:	csel	w0, w0, w4, hi  // hi = pmore
    2194:	cmp	w1, #0x3e
    2198:	cinc	w1, w1, hi  // hi = pmore
    219c:	add	w6, w1, #0x40
    21a0:	tbz	w3, #7, 21c8 <gconv@@Base+0x1720>
    21a4:	tbnz	w3, #15, 2378 <gconv@@Base+0x18d0>
    21a8:	orr	w0, w6, w0, lsl #8
    21ac:	mov	x24, #0x0                   	// #0
    21b0:	mov	x22, #0x4                   	// #4
    21b4:	lsl	w6, w0, #3
    21b8:	b	1964 <gconv@@Base+0xebc>
    21bc:	mov	x0, #0x1                   	// #1
    21c0:	mov	w3, #0xa5                  	// #165
    21c4:	b	154c <gconv@@Base+0xaa4>
    21c8:	add	x1, x27, #0x1
    21cc:	cmp	x25, x1
    21d0:	b.ls	19a8 <gconv@@Base+0xf00>  // b.plast
    21d4:	str	x1, [sp, #232]
    21d8:	strb	w0, [x27]
    21dc:	ldr	x0, [sp, #232]
    21e0:	add	x1, x0, #0x1
    21e4:	str	x1, [sp, #232]
    21e8:	strb	w6, [x0]
    21ec:	b	1934 <gconv@@Base+0xe8c>
    21f0:	add	x0, x22, #0x2
    21f4:	cmp	x6, x0
    21f8:	b.eq	25c0 <gconv@@Base+0x1b18>  // b.none
    21fc:	mov	w0, w1
    2200:	ldr	w1, [sp, #112]
    2204:	sub	x0, x5, x0
    2208:	add	x0, x2, x0
    220c:	and	w9, w1, #0xfffffff8
    2210:	str	x0, [x28]
    2214:	cmp	x5, w9, sxtw
    2218:	b.le	25b0 <gconv@@Base+0x1b08>
    221c:	cmp	x5, #0x4
    2220:	b.hi	2318 <gconv@@Base+0x1870>  // b.pmore
    2224:	orr	w9, w9, w5
    2228:	str	w9, [x23]
    222c:	cmp	x6, x22
    2230:	b.ls	1d80 <gconv@@Base+0x12d8>  // b.plast
    2234:	mov	w8, #0x7                   	// #7
    2238:	strb	w3, [x23, #4]
    223c:	ldp	x23, x24, [sp, #48]
    2240:	b	fcc <gconv@@Base+0x524>
    2244:	mov	x3, x0
    2248:	mov	x0, #0x1                   	// #1
    224c:	ldr	x1, [x3]
    2250:	add	x1, x1, x0
    2254:	str	x1, [x3]
    2258:	b	1560 <gconv@@Base+0xab8>
    225c:	ldr	x1, [sp, #168]
    2260:	add	x24, x14, #0x4
    2264:	mov	w4, #0x6                   	// #6
    2268:	str	x24, [sp, #224]
    226c:	ldr	x0, [x1]
    2270:	add	x0, x0, #0x1
    2274:	str	x0, [x1]
    2278:	b	12dc <gconv@@Base+0x834>
    227c:	ldr	x2, [x25]
    2280:	mov	x4, x28
    2284:	ldr	x0, [sp, #144]
    2288:	mov	x5, x22
    228c:	ldr	x6, [sp, #168]
    2290:	add	x3, sp, #0xe0
    2294:	mov	x1, x27
    2298:	str	x8, [sp, #112]
    229c:	str	w7, [sp, #120]
    22a0:	str	x9, [sp, #176]
    22a4:	bl	890 <__gconv_transliterate@plt>
    22a8:	ldr	w7, [sp, #120]
    22ac:	mov	w4, w0
    22b0:	cmp	w0, #0x6
    22b4:	ldr	x8, [sp, #112]
    22b8:	ldr	x9, [sp, #176]
    22bc:	b.eq	25a8 <gconv@@Base+0x1b00>  // b.none
    22c0:	cmp	w0, #0x5
    22c4:	ldp	x24, x30, [sp, #224]
    22c8:	b.ne	12dc <gconv@@Base+0x834>  // b.any
    22cc:	ldr	x0, [sp, #200]
    22d0:	str	x24, [x25]
    22d4:	cmp	x0, x30
    22d8:	b.eq	17dc <gconv@@Base+0xd34>  // b.none
    22dc:	b	1cdc <gconv@@Base+0x1234>
    22e0:	mov	x24, x3
    22e4:	str	x3, [sp, #224]
    22e8:	b	12dc <gconv@@Base+0x834>
    22ec:	mov	w0, #0x0                   	// #0
    22f0:	b	1ae4 <gconv@@Base+0x103c>
    22f4:	mov	x0, #0x7                   	// #7
    22f8:	b	1990 <gconv@@Base+0xee8>
    22fc:	cmp	w0, #0x8a
    2300:	mov	w6, #0x87                  	// #135
    2304:	ccmp	w0, w6, #0x4, ls  // ls = plast
    2308:	sub	w0, w2, #0x49
    230c:	sub	w2, w2, #0x43
    2310:	csel	w0, w2, w0, ne  // ne = any
    2314:	b	1e5c <gconv@@Base+0x13b4>
    2318:	adrp	x3, 2000 <gconv@@Base+0x1558>
    231c:	add	x3, x3, #0x8b8
    2320:	adrp	x1, 2000 <gconv@@Base+0x1558>
    2324:	adrp	x0, 2000 <gconv@@Base+0x1558>
    2328:	add	x1, x1, #0x730
    232c:	add	x0, x0, #0x7e8
    2330:	mov	w2, #0x1e6                 	// #486
    2334:	bl	8e0 <__assert_fail@plt>
    2338:	adrp	x3, 2000 <gconv@@Base+0x1558>
    233c:	adrp	x1, 2000 <gconv@@Base+0x1558>
    2340:	adrp	x0, 2000 <gconv@@Base+0x1558>
    2344:	add	x3, x3, #0x8d8
    2348:	add	x1, x1, #0x700
    234c:	add	x0, x0, #0x868
    2350:	mov	w2, #0x31e                 	// #798
    2354:	bl	8e0 <__assert_fail@plt>
    2358:	adrp	x3, 2000 <gconv@@Base+0x1558>
    235c:	add	x3, x3, #0x8b8
    2360:	adrp	x1, 2000 <gconv@@Base+0x1558>
    2364:	adrp	x0, 2000 <gconv@@Base+0x1558>
    2368:	add	x1, x1, #0x730
    236c:	add	x0, x0, #0x770
    2370:	mov	w2, #0x1c9                 	// #457
    2374:	bl	8e0 <__assert_fail@plt>
    2378:	adrp	x3, 2000 <gconv@@Base+0x1558>
    237c:	adrp	x1, 2000 <gconv@@Base+0x1558>
    2380:	adrp	x0, 2000 <gconv@@Base+0x1558>
    2384:	add	x3, x3, #0x898
    2388:	add	x1, x1, #0x730
    238c:	add	x0, x0, #0x818
    2390:	mov	w2, #0x1be                 	// #446
    2394:	bl	8e0 <__assert_fail@plt>
    2398:	adrp	x3, 2000 <gconv@@Base+0x1558>
    239c:	adrp	x1, 2000 <gconv@@Base+0x1558>
    23a0:	adrp	x0, 2000 <gconv@@Base+0x1558>
    23a4:	add	x3, x3, #0x8d8
    23a8:	add	x1, x1, #0x700
    23ac:	add	x0, x0, #0x718
    23b0:	mov	w2, #0x234                 	// #564
    23b4:	bl	8e0 <__assert_fail@plt>
    23b8:	stp	x23, x24, [sp, #48]
    23bc:	bl	8a0 <__stack_chk_fail@plt>
    23c0:	adrp	x3, 2000 <gconv@@Base+0x1558>
    23c4:	add	x3, x3, #0x8b8
    23c8:	adrp	x1, 2000 <gconv@@Base+0x1558>
    23cc:	adrp	x0, 2000 <gconv@@Base+0x1558>
    23d0:	add	x1, x1, #0x730
    23d4:	add	x0, x0, #0x740
    23d8:	mov	w2, #0x18b                 	// #395
    23dc:	bl	8e0 <__assert_fail@plt>
    23e0:	adrp	x3, 2000 <gconv@@Base+0x1558>
    23e4:	adrp	x1, 2000 <gconv@@Base+0x1558>
    23e8:	adrp	x0, 2000 <gconv@@Base+0x1558>
    23ec:	add	x3, x3, #0x8d8
    23f0:	add	x1, x1, #0x700
    23f4:	add	x0, x0, #0x718
    23f8:	mov	w2, #0x1a4                 	// #420
    23fc:	stp	x23, x24, [sp, #48]
    2400:	bl	8e0 <__assert_fail@plt>
    2404:	add	x4, x22, x24
    2408:	mov	x6, x0
    240c:	add	x5, sp, #0xe8
    2410:	mov	x0, x18
    2414:	add	x3, sp, #0xe0
    2418:	mov	x1, x21
    241c:	stp	x18, x4, [sp, #112]
    2420:	bl	890 <__gconv_transliterate@plt>
    2424:	mov	w8, w0
    2428:	cmp	w0, #0x6
    242c:	ldr	x18, [sp, #112]
    2430:	b.eq	2580 <gconv@@Base+0x1ad8>  // b.none
    2434:	ldr	x0, [sp, #224]
    2438:	ldr	x4, [sp, #120]
    243c:	cmp	x0, x22
    2440:	b.ne	1948 <gconv@@Base+0xea0>  // b.any
    2444:	cmp	w8, #0x7
    2448:	b.ne	2574 <gconv@@Base+0x1acc>  // b.any
    244c:	add	x0, x22, #0x4
    2450:	cmp	x4, x0
    2454:	b.eq	2554 <gconv@@Base+0x1aac>  // b.none
    2458:	ldr	w0, [x23]
    245c:	ldr	x1, [x28]
    2460:	and	x2, x0, #0x7
    2464:	sub	x2, x24, x2
    2468:	and	w0, w0, #0xfffffff8
    246c:	add	x1, x1, x2
    2470:	str	x1, [x28]
    2474:	cmp	x24, w0, sxtw
    2478:	b.le	2534 <gconv@@Base+0x1a8c>
    247c:	cmp	x24, #0x4
    2480:	b.hi	2500 <gconv@@Base+0x1a58>  // b.pmore
    2484:	orr	w0, w0, w24
    2488:	str	w0, [x23]
    248c:	cmp	x4, x22
    2490:	b.ls	1d80 <gconv@@Base+0x12d8>  // b.plast
    2494:	add	x23, x23, #0x4
    2498:	add	x22, x22, #0x1
    249c:	str	x22, [sp, #224]
    24a0:	cmp	x4, x22
    24a4:	ldurb	w0, [x22, #-1]
    24a8:	strb	w0, [x23], #1
    24ac:	b.ne	2498 <gconv@@Base+0x19f0>  // b.any
    24b0:	b	1d80 <gconv@@Base+0x12d8>
    24b4:	cmp	w3, #0x7f
    24b8:	b.hi	252c <gconv@@Base+0x1a84>  // b.pmore
    24bc:	adrp	x0, 12000 <gconv@@Base+0x11558>
    24c0:	sub	w3, w3, #0x1
    24c4:	mov	x1, x27
    24c8:	ldr	x0, [x0, #4064]
    24cc:	lsl	x4, x3, #2
    24d0:	add	x3, x0, x3, lsl #2
    24d4:	ldrh	w0, [x0, x4]
    24d8:	str	w0, [x1], #8
    24dc:	ldrh	w9, [x3, #2]
    24e0:	cmp	x25, x1
    24e4:	b.cs	2510 <gconv@@Base+0x1a68>  // b.hs, b.nlast
    24e8:	lsl	w0, w9, #3
    24ec:	mov	x27, x7
    24f0:	mov	x4, #0x0                   	// #0
    24f4:	str	w0, [sp, #112]
    24f8:	mov	x0, #0x2                   	// #2
    24fc:	b	1568 <gconv@@Base+0xac0>
    2500:	adrp	x3, 2000 <gconv@@Base+0x1558>
    2504:	adrp	x1, 2000 <gconv@@Base+0x1558>
    2508:	add	x3, x3, #0x898
    250c:	b	2324 <gconv@@Base+0x187c>
    2510:	str	w9, [x27, #4]
    2514:	mov	x27, x1
    2518:	mov	x0, #0x2                   	// #2
    251c:	ldr	w1, [x23]
    2520:	str	w1, [sp, #112]
    2524:	and	w4, w1, #0x7
    2528:	b	1560 <gconv@@Base+0xab8>
    252c:	mov	x0, #0x2                   	// #2
    2530:	b	154c <gconv@@Base+0xaa4>
    2534:	adrp	x3, 2000 <gconv@@Base+0x1558>
    2538:	add	x3, x3, #0x898
    253c:	adrp	x1, 2000 <gconv@@Base+0x1558>
    2540:	adrp	x0, 2000 <gconv@@Base+0x1558>
    2544:	add	x1, x1, #0x730
    2548:	add	x0, x0, #0x7c0
    254c:	mov	w2, #0x1e5                 	// #485
    2550:	bl	8e0 <__assert_fail@plt>
    2554:	adrp	x3, 2000 <gconv@@Base+0x1558>
    2558:	add	x3, x3, #0x898
    255c:	adrp	x1, 2000 <gconv@@Base+0x1558>
    2560:	adrp	x0, 2000 <gconv@@Base+0x1558>
    2564:	add	x1, x1, #0x730
    2568:	add	x0, x0, #0x798
    256c:	mov	w2, #0x1db                 	// #475
    2570:	bl	8e0 <__assert_fail@plt>
    2574:	cbz	w8, cf4 <gconv@@Base+0x24c>
    2578:	ldp	x23, x24, [sp, #48]
    257c:	b	fcc <gconv@@Base+0x524>
    2580:	tbnz	w19, #1, 2054 <gconv@@Base+0x15ac>
    2584:	ldr	x0, [sp, #224]
    2588:	b	2070 <gconv@@Base+0x15c8>
    258c:	lsl	w4, w4, #3
    2590:	str	w4, [x23]
    2594:	str	x24, [x25]
    2598:	cmp	x8, x1
    259c:	b.ne	1cdc <gconv@@Base+0x1234>  // b.any
    25a0:	mov	x30, x8
    25a4:	b	17dc <gconv@@Base+0xd34>
    25a8:	ldr	x30, [sp, #232]
    25ac:	b	1cc4 <gconv@@Base+0x121c>
    25b0:	adrp	x3, 2000 <gconv@@Base+0x1558>
    25b4:	adrp	x1, 2000 <gconv@@Base+0x1558>
    25b8:	add	x3, x3, #0x8b8
    25bc:	b	2540 <gconv@@Base+0x1a98>
    25c0:	adrp	x3, 2000 <gconv@@Base+0x1558>
    25c4:	adrp	x1, 2000 <gconv@@Base+0x1558>
    25c8:	add	x3, x3, #0x8b8
    25cc:	b	2560 <gconv@@Base+0x1ab8>
    25d0:	adrp	x3, 2000 <gconv@@Base+0x1558>
    25d4:	adrp	x1, 2000 <gconv@@Base+0x1558>
    25d8:	add	x3, x3, #0x898
    25dc:	b	23cc <gconv@@Base+0x1924>
    25e0:	adrp	x3, 2000 <gconv@@Base+0x1558>
    25e4:	adrp	x1, 2000 <gconv@@Base+0x1558>
    25e8:	adrp	x0, 2000 <gconv@@Base+0x1558>
    25ec:	add	x3, x3, #0x880
    25f0:	add	x1, x1, #0x730
    25f4:	add	x0, x0, #0x818
    25f8:	mov	w2, #0x150                 	// #336
    25fc:	bl	8e0 <__assert_fail@plt>
    2600:	adrp	x3, 2000 <gconv@@Base+0x1558>
    2604:	adrp	x1, 2000 <gconv@@Base+0x1558>
    2608:	add	x3, x3, #0x898
    260c:	b	2364 <gconv@@Base+0x18bc>
    2610:	add	x0, x22, #0x4
    2614:	mov	w24, w1
    2618:	mov	w6, w1
    261c:	mov	x22, #0x4                   	// #4
    2620:	str	x0, [sp, #224]
    2624:	b	1954 <gconv@@Base+0xeac>
    2628:	cmp	w0, #0x8a
    262c:	mov	w5, #0x87                  	// #135
    2630:	ccmp	w0, w5, #0x4, ls  // ls = plast
    2634:	sub	w0, w4, #0x49
    2638:	sub	w4, w4, #0x43
    263c:	csel	w0, w4, w0, ne  // ne = any
    2640:	b	2170 <gconv@@Base+0x16c8>
    2644:	sub	w1, w0, #0x14d
    2648:	cmp	w1, #0x10
    264c:	b.hi	1f84 <gconv@@Base+0x14dc>  // b.pmore
    2650:	sub	w0, w0, #0xe6
    2654:	b	1f50 <gconv@@Base+0x14a8>
    2658:	cmp	w0, #0x62
    265c:	mov	w1, #0x5f                  	// #95
    2660:	ccmp	w0, w1, #0x4, ls  // ls = plast
    2664:	b.eq	26ac <gconv@@Base+0x1c04>  // b.none
    2668:	cmp	w0, #0x5e
    266c:	add	w1, w0, #0xa2
    2670:	b.eq	1f50 <gconv@@Base+0x14a8>  // b.none
    2674:	sub	w0, w0, #0x60
    2678:	cmp	w0, #0x2
    267c:	b.hi	26cc <gconv@@Base+0x1c24>  // b.pmore
    2680:	sub	w0, w1, #0xa3
    2684:	b	1f50 <gconv@@Base+0x14a8>
    2688:	sub	w4, w2, #0x14d
    268c:	cmp	w4, #0x10
    2690:	b.hi	18d8 <gconv@@Base+0xe30>  // b.pmore
    2694:	sub	w2, w2, #0xe6
    2698:	mul	w17, w2, w5
    269c:	b	18bc <gconv@@Base+0xe14>
    26a0:	str	w22, [x20]
    26a4:	cbnz	w8, fcc <gconv@@Base+0x524>
    26a8:	b	1a1c <gconv@@Base+0xf74>
    26ac:	sub	w3, w0, #0x5a
    26b0:	add	w1, w0, #0xa8
    26b4:	cmp	w3, #0x2
    26b8:	b.ls	2680 <gconv@@Base+0x1bd8>  // b.plast
    26bc:	cmp	w0, #0x5f
    26c0:	b.ne	26cc <gconv@@Base+0x1c24>  // b.any
    26c4:	mov	w0, #0x62                  	// #98
    26c8:	b	1f50 <gconv@@Base+0x14a8>
    26cc:	mov	w0, w1
    26d0:	b	1f40 <gconv@@Base+0x1498>

Disassembly of section .fini:

00000000000026d4 <.fini>:
    26d4:	stp	x29, x30, [sp, #-16]!
    26d8:	mov	x29, sp
    26dc:	ldp	x29, x30, [sp], #16
    26e0:	ret
