
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fdflags_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b68 <_init>:
 b68:	stp	x29, x30, [sp, #-16]!
 b6c:	mov	x29, sp
 b70:	bl	ca0 <call_weak_fn>
 b74:	ldp	x29, x30, [sp], #16
 b78:	ret

Disassembly of section .plt:

0000000000000b80 <.plt>:
 b80:	stp	x16, x30, [sp, #-16]!
 b84:	adrp	x16, 11000 <__FRAME_END__+0xf564>
 b88:	ldr	x17, [x16, #4088]
 b8c:	add	x16, x16, #0xff8
 b90:	br	x17
 b94:	nop
 b98:	nop
 b9c:	nop

0000000000000ba0 <strtok@plt>:
 ba0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 ba4:	ldr	x17, [x16]
 ba8:	add	x16, x16, #0x0
 bac:	br	x17

0000000000000bb0 <builtin_error@plt>:
 bb0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bb4:	ldr	x17, [x16, #8]
 bb8:	add	x16, x16, #0x8
 bbc:	br	x17

0000000000000bc0 <__cxa_finalize@plt>:
 bc0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bc4:	ldr	x17, [x16, #16]
 bc8:	add	x16, x16, #0x10
 bcc:	br	x17

0000000000000bd0 <builtin_help@plt>:
 bd0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bd4:	ldr	x17, [x16, #24]
 bd8:	add	x16, x16, #0x18
 bdc:	br	x17

0000000000000be0 <builtin_usage@plt>:
 be0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 be4:	ldr	x17, [x16, #32]
 be8:	add	x16, x16, #0x20
 bec:	br	x17

0000000000000bf0 <strerror@plt>:
 bf0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bf4:	ldr	x17, [x16, #40]
 bf8:	add	x16, x16, #0x28
 bfc:	br	x17

0000000000000c00 <__gmon_start__@plt>:
 c00:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c04:	ldr	x17, [x16, #48]
 c08:	add	x16, x16, #0x30
 c0c:	br	x17

0000000000000c10 <strcmp@plt>:
 c10:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c14:	ldr	x17, [x16, #56]
 c18:	add	x16, x16, #0x38
 c1c:	br	x17

0000000000000c20 <internal_getopt@plt>:
 c20:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c24:	ldr	x17, [x16, #64]
 c28:	add	x16, x16, #0x40
 c2c:	br	x17

0000000000000c30 <reset_internal_getopt@plt>:
 c30:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c34:	ldr	x17, [x16, #72]
 c38:	add	x16, x16, #0x48
 c3c:	br	x17

0000000000000c40 <fcntl@plt>:
 c40:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c44:	ldr	x17, [x16, #80]
 c48:	add	x16, x16, #0x50
 c4c:	br	x17

0000000000000c50 <legal_number@plt>:
 c50:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c54:	ldr	x17, [x16, #88]
 c58:	add	x16, x16, #0x58
 c5c:	br	x17

0000000000000c60 <printf@plt>:
 c60:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c64:	ldr	x17, [x16, #96]
 c68:	add	x16, x16, #0x60
 c6c:	br	x17

0000000000000c70 <__errno_location@plt>:
 c70:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c74:	ldr	x17, [x16, #104]
 c78:	add	x16, x16, #0x68
 c7c:	br	x17

0000000000000c80 <putchar@plt>:
 c80:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c84:	ldr	x17, [x16, #112]
 c88:	add	x16, x16, #0x70
 c8c:	br	x17

0000000000000c90 <getdtablesize@plt>:
 c90:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c94:	ldr	x17, [x16, #120]
 c98:	add	x16, x16, #0x78
 c9c:	br	x17

Disassembly of section .text:

0000000000000ca0 <call_weak_fn>:
     ca0:	adrp	x0, 11000 <__FRAME_END__+0xf564>
     ca4:	ldr	x0, [x0, #4040]
     ca8:	cbz	x0, cb0 <call_weak_fn+0x10>
     cac:	b	c00 <__gmon_start__@plt>
     cb0:	ret
     cb4:	nop

0000000000000cb8 <deregister_tm_clones>:
     cb8:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     cbc:	add	x0, x0, #0x128
     cc0:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     cc4:	add	x1, x1, #0x128
     cc8:	cmp	x1, x0
     ccc:	b.eq	ce4 <deregister_tm_clones+0x2c>  // b.none
     cd0:	adrp	x1, 11000 <__FRAME_END__+0xf564>
     cd4:	ldr	x1, [x1, #4024]
     cd8:	cbz	x1, ce4 <deregister_tm_clones+0x2c>
     cdc:	mov	x16, x1
     ce0:	br	x16
     ce4:	ret

0000000000000ce8 <register_tm_clones>:
     ce8:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     cec:	add	x0, x0, #0x128
     cf0:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     cf4:	add	x1, x1, #0x128
     cf8:	sub	x1, x1, x0
     cfc:	lsr	x2, x1, #63
     d00:	add	x1, x2, x1, asr #3
     d04:	cmp	xzr, x1, asr #1
     d08:	asr	x1, x1, #1
     d0c:	b.eq	d24 <register_tm_clones+0x3c>  // b.none
     d10:	adrp	x2, 11000 <__FRAME_END__+0xf564>
     d14:	ldr	x2, [x2, #4064]
     d18:	cbz	x2, d24 <register_tm_clones+0x3c>
     d1c:	mov	x16, x2
     d20:	br	x16
     d24:	ret

0000000000000d28 <__do_global_dtors_aux>:
     d28:	stp	x29, x30, [sp, #-32]!
     d2c:	mov	x29, sp
     d30:	str	x19, [sp, #16]
     d34:	adrp	x19, 12000 <strtok@GLIBC_2.17>
     d38:	ldrb	w0, [x19, #296]
     d3c:	cbnz	w0, d64 <__do_global_dtors_aux+0x3c>
     d40:	adrp	x0, 11000 <__FRAME_END__+0xf564>
     d44:	ldr	x0, [x0, #4032]
     d48:	cbz	x0, d58 <__do_global_dtors_aux+0x30>
     d4c:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d50:	ldr	x0, [x0, #128]
     d54:	bl	bc0 <__cxa_finalize@plt>
     d58:	bl	cb8 <deregister_tm_clones>
     d5c:	mov	w0, #0x1                   	// #1
     d60:	strb	w0, [x19, #296]
     d64:	ldr	x19, [sp, #16]
     d68:	ldp	x29, x30, [sp], #32
     d6c:	ret

0000000000000d70 <frame_dummy>:
     d70:	b	ce8 <register_tm_clones>

0000000000000d74 <fdflags_builtin>:
     d74:	sub	sp, sp, #0x60
     d78:	stp	x29, x30, [sp, #80]
     d7c:	add	x29, sp, #0x50
     d80:	stur	x0, [x29, #-16]
     d84:	stur	wzr, [x29, #-36]
     d88:	str	wzr, [sp, #40]
     d8c:	bl	c30 <reset_internal_getopt@plt>
     d90:	ldur	x0, [x29, #-16]
     d94:	adrp	x1, 1000 <printone+0x58>
     d98:	add	x1, x1, #0x64c
     d9c:	bl	c20 <internal_getopt@plt>
     da0:	stur	w0, [x29, #-20]
     da4:	mov	w8, #0xffffffff            	// #-1
     da8:	cmp	w0, w8
     dac:	b.eq	e34 <fdflags_builtin+0xc0>  // b.none
     db0:	ldur	w8, [x29, #-20]
     db4:	mov	w9, #0xffffff9d            	// #-99
     db8:	cmp	w8, w9
     dbc:	str	w8, [sp, #12]
     dc0:	b.eq	e10 <fdflags_builtin+0x9c>  // b.none
     dc4:	b	dc8 <fdflags_builtin+0x54>
     dc8:	ldr	w8, [sp, #12]
     dcc:	cmp	w8, #0x73
     dd0:	b.eq	de8 <fdflags_builtin+0x74>  // b.none
     dd4:	b	dd8 <fdflags_builtin+0x64>
     dd8:	ldr	w8, [sp, #12]
     ddc:	cmp	w8, #0x76
     de0:	b.eq	e04 <fdflags_builtin+0x90>  // b.none
     de4:	b	e20 <fdflags_builtin+0xac>
     de8:	mov	w8, #0x1                   	// #1
     dec:	str	w8, [sp, #40]
     df0:	adrp	x9, 11000 <__FRAME_END__+0xf564>
     df4:	ldr	x9, [x9, #4048]
     df8:	ldr	x9, [x9]
     dfc:	str	x9, [sp, #32]
     e00:	b	e30 <fdflags_builtin+0xbc>
     e04:	mov	w8, #0x1                   	// #1
     e08:	stur	w8, [x29, #-36]
     e0c:	b	e30 <fdflags_builtin+0xbc>
     e10:	bl	bd0 <builtin_help@plt>
     e14:	mov	w8, #0x102                 	// #258
     e18:	stur	w8, [x29, #-4]
     e1c:	b	f98 <fdflags_builtin+0x224>
     e20:	bl	be0 <builtin_usage@plt>
     e24:	mov	w8, #0x102                 	// #258
     e28:	stur	w8, [x29, #-4]
     e2c:	b	f98 <fdflags_builtin+0x224>
     e30:	b	d90 <fdflags_builtin+0x1c>
     e34:	adrp	x8, 11000 <__FRAME_END__+0xf564>
     e38:	ldr	x8, [x8, #4056]
     e3c:	ldr	x8, [x8]
     e40:	stur	x8, [x29, #-16]
     e44:	ldur	x8, [x29, #-16]
     e48:	cbnz	x8, e5c <fdflags_builtin+0xe8>
     e4c:	ldr	w8, [sp, #40]
     e50:	cbz	w8, e5c <fdflags_builtin+0xe8>
     e54:	stur	wzr, [x29, #-4]
     e58:	b	f98 <fdflags_builtin+0x224>
     e5c:	ldur	x8, [x29, #-16]
     e60:	cbnz	x8, eec <fdflags_builtin+0x178>
     e64:	bl	12d0 <getmaxfd>
     e68:	stur	w0, [x29, #-24]
     e6c:	ldur	w8, [x29, #-24]
     e70:	cmp	w8, #0x0
     e74:	cset	w8, ge  // ge = tcont
     e78:	tbnz	w8, #0, eac <fdflags_builtin+0x138>
     e7c:	bl	c70 <__errno_location@plt>
     e80:	ldr	w0, [x0]
     e84:	bl	bf0 <strerror@plt>
     e88:	adrp	x8, 1000 <printone+0x58>
     e8c:	add	x8, x8, #0x650
     e90:	str	x0, [sp]
     e94:	mov	x0, x8
     e98:	ldr	x1, [sp]
     e9c:	bl	bb0 <builtin_error@plt>
     ea0:	mov	w9, #0x1                   	// #1
     ea4:	stur	w9, [x29, #-4]
     ea8:	b	f98 <fdflags_builtin+0x224>
     eac:	stur	wzr, [x29, #-28]
     eb0:	ldur	w8, [x29, #-28]
     eb4:	ldur	w9, [x29, #-24]
     eb8:	cmp	w8, w9
     ebc:	b.ge	ee4 <fdflags_builtin+0x170>  // b.tcont
     ec0:	ldur	w0, [x29, #-28]
     ec4:	ldur	w2, [x29, #-36]
     ec8:	mov	w8, wzr
     ecc:	mov	w1, w8
     ed0:	bl	fa8 <printone>
     ed4:	ldur	w8, [x29, #-28]
     ed8:	add	w8, w8, #0x1
     edc:	stur	w8, [x29, #-28]
     ee0:	b	eb0 <fdflags_builtin+0x13c>
     ee4:	stur	wzr, [x29, #-4]
     ee8:	b	f98 <fdflags_builtin+0x224>
     eec:	stur	wzr, [x29, #-20]
     ef0:	ldur	x8, [x29, #-16]
     ef4:	str	x8, [sp, #24]
     ef8:	ldr	x8, [sp, #24]
     efc:	cbz	x8, f90 <fdflags_builtin+0x21c>
     f00:	ldr	x8, [sp, #24]
     f04:	ldr	x8, [x8, #8]
     f08:	ldr	x0, [x8]
     f0c:	add	x1, sp, #0x10
     f10:	bl	c50 <legal_number@plt>
     f14:	cbz	w0, f28 <fdflags_builtin+0x1b4>
     f18:	ldr	x8, [sp, #16]
     f1c:	cmp	x8, #0x0
     f20:	cset	w9, ge  // ge = tcont
     f24:	tbnz	w9, #0, f4c <fdflags_builtin+0x1d8>
     f28:	ldr	x8, [sp, #24]
     f2c:	ldr	x8, [x8, #8]
     f30:	ldr	x1, [x8]
     f34:	adrp	x0, 1000 <printone+0x58>
     f38:	add	x0, x0, #0x665
     f3c:	bl	bb0 <builtin_error@plt>
     f40:	mov	w9, #0x1                   	// #1
     f44:	stur	w9, [x29, #-20]
     f48:	b	f80 <fdflags_builtin+0x20c>
     f4c:	ldr	x8, [sp, #16]
     f50:	stur	w8, [x29, #-32]
     f54:	ldr	w8, [sp, #40]
     f58:	cbz	w8, f70 <fdflags_builtin+0x1fc>
     f5c:	ldur	w0, [x29, #-32]
     f60:	ldr	x1, [sp, #32]
     f64:	ldur	w2, [x29, #-36]
     f68:	bl	1124 <setone>
     f6c:	b	f80 <fdflags_builtin+0x20c>
     f70:	ldur	w0, [x29, #-32]
     f74:	ldur	w2, [x29, #-36]
     f78:	mov	w1, #0x1                   	// #1
     f7c:	bl	fa8 <printone>
     f80:	ldr	x8, [sp, #24]
     f84:	ldr	x8, [x8]
     f88:	str	x8, [sp, #24]
     f8c:	b	ef8 <fdflags_builtin+0x184>
     f90:	ldur	w8, [x29, #-20]
     f94:	stur	w8, [x29, #-4]
     f98:	ldur	w0, [x29, #-4]
     f9c:	ldp	x29, x30, [sp, #80]
     fa0:	add	sp, sp, #0x60
     fa4:	ret

0000000000000fa8 <printone>:
     fa8:	sub	sp, sp, #0x40
     fac:	stp	x29, x30, [sp, #48]
     fb0:	add	x29, sp, #0x30
     fb4:	mov	w8, #0xffffffff            	// #-1
     fb8:	adrp	x9, 11000 <__FRAME_END__+0xf564>
     fbc:	add	x9, x9, #0xd30
     fc0:	stur	w0, [x29, #-4]
     fc4:	stur	w1, [x29, #-8]
     fc8:	stur	w2, [x29, #-12]
     fcc:	ldur	w0, [x29, #-4]
     fd0:	ldur	w1, [x29, #-8]
     fd4:	str	w8, [sp, #20]
     fd8:	str	x9, [sp, #8]
     fdc:	bl	1358 <getflags>
     fe0:	stur	w0, [x29, #-16]
     fe4:	ldr	w8, [sp, #20]
     fe8:	cmp	w0, w8
     fec:	b.ne	ff4 <printone+0x4c>  // b.any
     ff0:	b	1118 <printone+0x170>
     ff4:	ldur	w1, [x29, #-4]
     ff8:	adrp	x0, 1000 <printone+0x58>
     ffc:	add	x0, x0, #0x91b
    1000:	bl	c60 <printf@plt>
    1004:	str	xzr, [sp, #24]
    1008:	ldr	x8, [sp, #24]
    100c:	cmp	x8, #0xa
    1010:	b.cs	110c <printone+0x164>  // b.hs, b.nlast
    1014:	ldur	w8, [x29, #-16]
    1018:	ldr	x9, [sp, #24]
    101c:	mov	x10, #0x10                  	// #16
    1020:	mul	x9, x10, x9
    1024:	ldr	x10, [sp, #8]
    1028:	add	x9, x10, x9
    102c:	ldr	w11, [x9, #8]
    1030:	and	w8, w8, w11
    1034:	cbz	w8, 10a4 <printone+0xfc>
    1038:	ldur	w8, [x29, #-12]
    103c:	adrp	x9, 1000 <printone+0x58>
    1040:	add	x9, x9, #0x92b
    1044:	adrp	x10, 1000 <printone+0x58>
    1048:	add	x10, x10, #0x924
    104c:	cmp	w8, #0x0
    1050:	csel	x1, x10, x9, ne  // ne = any
    1054:	ldr	x9, [sp, #24]
    1058:	mov	x10, #0x10                  	// #16
    105c:	mul	x9, x10, x9
    1060:	ldr	x11, [sp, #8]
    1064:	add	x9, x11, x9
    1068:	ldr	x2, [x9]
    106c:	adrp	x0, 1000 <printone+0x58>
    1070:	add	x0, x0, #0x91f
    1074:	str	x10, [sp]
    1078:	bl	c60 <printf@plt>
    107c:	ldr	x9, [sp, #24]
    1080:	ldr	x10, [sp]
    1084:	mul	x9, x10, x9
    1088:	ldr	x11, [sp, #8]
    108c:	add	x9, x11, x9
    1090:	ldr	w8, [x9, #8]
    1094:	ldur	w12, [x29, #-16]
    1098:	bic	w8, w12, w8
    109c:	stur	w8, [x29, #-16]
    10a0:	b	10d8 <printone+0x130>
    10a4:	ldur	w8, [x29, #-12]
    10a8:	cbz	w8, 10d4 <printone+0x12c>
    10ac:	ldr	x8, [sp, #24]
    10b0:	mov	x9, #0x10                  	// #16
    10b4:	mul	x8, x9, x8
    10b8:	ldr	x9, [sp, #8]
    10bc:	add	x8, x9, x8
    10c0:	ldr	x1, [x8]
    10c4:	adrp	x0, 1000 <printone+0x58>
    10c8:	add	x0, x0, #0x926
    10cc:	bl	c60 <printf@plt>
    10d0:	b	10d8 <printone+0x130>
    10d4:	b	10fc <printone+0x154>
    10d8:	ldur	w8, [x29, #-16]
    10dc:	cbnz	w8, 10f4 <printone+0x14c>
    10e0:	ldur	w8, [x29, #-12]
    10e4:	cbz	w8, 10fc <printone+0x154>
    10e8:	ldr	x8, [sp, #24]
    10ec:	cmp	x8, #0x9
    10f0:	b.eq	10fc <printone+0x154>  // b.none
    10f4:	mov	w0, #0x2c                  	// #44
    10f8:	bl	c80 <putchar@plt>
    10fc:	ldr	x8, [sp, #24]
    1100:	add	x8, x8, #0x1
    1104:	str	x8, [sp, #24]
    1108:	b	1008 <printone+0x60>
    110c:	adrp	x0, 1000 <printone+0x58>
    1110:	add	x0, x0, #0x92a
    1114:	bl	c60 <printf@plt>
    1118:	ldp	x29, x30, [sp, #48]
    111c:	add	sp, sp, #0x40
    1120:	ret

0000000000001124 <setone>:
    1124:	sub	sp, sp, #0x60
    1128:	stp	x29, x30, [sp, #80]
    112c:	add	x29, sp, #0x50
    1130:	mov	w8, #0x1                   	// #1
    1134:	mov	w9, #0xffffffff            	// #-1
    1138:	stur	w0, [x29, #-4]
    113c:	stur	x1, [x29, #-16]
    1140:	stur	w2, [x29, #-20]
    1144:	ldur	w0, [x29, #-4]
    1148:	mov	w1, w8
    114c:	str	w9, [sp, #36]
    1150:	bl	1358 <getflags>
    1154:	stur	w0, [x29, #-24]
    1158:	ldur	w8, [x29, #-24]
    115c:	ldr	w9, [sp, #36]
    1160:	cmp	w8, w9
    1164:	b.ne	116c <setone+0x48>  // b.any
    1168:	b	12c4 <setone+0x1a0>
    116c:	ldur	x0, [x29, #-16]
    1170:	sub	x1, x29, #0x20
    1174:	sub	x2, x29, #0x24
    1178:	bl	14d0 <parseflags>
    117c:	mov	w8, #0xffffffff            	// #-1
    1180:	str	w8, [sp, #40]
    1184:	ldur	w8, [x29, #-32]
    1188:	and	w8, w8, #0x80000
    118c:	cbz	w8, 11a4 <setone+0x80>
    1190:	ldur	w8, [x29, #-24]
    1194:	and	w8, w8, #0x80000
    1198:	cbnz	w8, 11a4 <setone+0x80>
    119c:	mov	w8, #0x1                   	// #1
    11a0:	str	w8, [sp, #40]
    11a4:	ldur	w8, [x29, #-36]
    11a8:	and	w8, w8, #0x80000
    11ac:	cbz	w8, 11c0 <setone+0x9c>
    11b0:	ldur	w8, [x29, #-24]
    11b4:	and	w8, w8, #0x80000
    11b8:	cbz	w8, 11c0 <setone+0x9c>
    11bc:	str	wzr, [sp, #40]
    11c0:	ldr	w8, [sp, #40]
    11c4:	mov	w9, #0xffffffff            	// #-1
    11c8:	cmp	w8, w9
    11cc:	b.eq	121c <setone+0xf8>  // b.none
    11d0:	ldur	w0, [x29, #-4]
    11d4:	ldr	w2, [sp, #40]
    11d8:	mov	w1, #0x2                   	// #2
    11dc:	bl	c40 <fcntl@plt>
    11e0:	mov	w8, #0xffffffff            	// #-1
    11e4:	cmp	w0, w8
    11e8:	b.ne	121c <setone+0xf8>  // b.any
    11ec:	ldur	w1, [x29, #-4]
    11f0:	str	w1, [sp, #32]
    11f4:	bl	c70 <__errno_location@plt>
    11f8:	ldr	w0, [x0]
    11fc:	bl	bf0 <strerror@plt>
    1200:	adrp	x8, 1000 <printone+0x58>
    1204:	add	x8, x8, #0x9a8
    1208:	str	x0, [sp, #24]
    120c:	mov	x0, x8
    1210:	ldr	w1, [sp, #32]
    1214:	ldr	x2, [sp, #24]
    1218:	bl	bb0 <builtin_error@plt>
    121c:	ldur	w8, [x29, #-32]
    1220:	and	w8, w8, #0xfff7ffff
    1224:	stur	w8, [x29, #-32]
    1228:	ldur	w8, [x29, #-36]
    122c:	and	w8, w8, #0xfff7ffff
    1230:	stur	w8, [x29, #-36]
    1234:	ldur	w8, [x29, #-24]
    1238:	and	w8, w8, #0xfff7ffff
    123c:	stur	w8, [x29, #-24]
    1240:	ldur	w8, [x29, #-24]
    1244:	stur	w8, [x29, #-28]
    1248:	ldur	w8, [x29, #-32]
    124c:	ldur	w9, [x29, #-28]
    1250:	orr	w8, w9, w8
    1254:	stur	w8, [x29, #-28]
    1258:	ldur	w8, [x29, #-36]
    125c:	ldur	w9, [x29, #-28]
    1260:	bic	w8, w9, w8
    1264:	stur	w8, [x29, #-28]
    1268:	ldur	w8, [x29, #-28]
    126c:	ldur	w9, [x29, #-24]
    1270:	cmp	w8, w9
    1274:	b.eq	12c4 <setone+0x1a0>  // b.none
    1278:	ldur	w0, [x29, #-4]
    127c:	ldur	w2, [x29, #-28]
    1280:	mov	w1, #0x4                   	// #4
    1284:	bl	c40 <fcntl@plt>
    1288:	mov	w8, #0xffffffff            	// #-1
    128c:	cmp	w0, w8
    1290:	b.ne	12c4 <setone+0x1a0>  // b.any
    1294:	ldur	w1, [x29, #-4]
    1298:	str	w1, [sp, #20]
    129c:	bl	c70 <__errno_location@plt>
    12a0:	ldr	w0, [x0]
    12a4:	bl	bf0 <strerror@plt>
    12a8:	adrp	x8, 1000 <printone+0x58>
    12ac:	add	x8, x8, #0x9c7
    12b0:	str	x0, [sp, #8]
    12b4:	mov	x0, x8
    12b8:	ldr	w1, [sp, #20]
    12bc:	ldr	x2, [sp, #8]
    12c0:	bl	bb0 <builtin_error@plt>
    12c4:	ldp	x29, x30, [sp, #80]
    12c8:	add	sp, sp, #0x60
    12cc:	ret

00000000000012d0 <getmaxfd>:
    12d0:	sub	sp, sp, #0x20
    12d4:	stp	x29, x30, [sp, #16]
    12d8:	add	x29, sp, #0x10
    12dc:	bl	c90 <getdtablesize@plt>
    12e0:	stur	w0, [x29, #-4]
    12e4:	ldur	w8, [x29, #-4]
    12e8:	cmp	w8, #0x0
    12ec:	cset	w8, gt
    12f0:	tbnz	w8, #0, 12fc <getmaxfd+0x2c>
    12f4:	mov	w8, #0x100                 	// #256
    12f8:	stur	w8, [x29, #-4]
    12fc:	ldur	w8, [x29, #-4]
    1300:	subs	w8, w8, #0x1
    1304:	stur	w8, [x29, #-4]
    1308:	ldur	w8, [x29, #-4]
    130c:	cmp	w8, #0x0
    1310:	cset	w8, le
    1314:	tbnz	w8, #0, 1348 <getmaxfd+0x78>
    1318:	ldur	w0, [x29, #-4]
    131c:	mov	w1, #0x1                   	// #1
    1320:	add	x2, sp, #0x8
    1324:	bl	c40 <fcntl@plt>
    1328:	mov	w8, #0xffffffff            	// #-1
    132c:	cmp	w0, w8
    1330:	b.eq	1338 <getmaxfd+0x68>  // b.none
    1334:	b	1348 <getmaxfd+0x78>
    1338:	ldur	w8, [x29, #-4]
    133c:	subs	w8, w8, #0x1
    1340:	stur	w8, [x29, #-4]
    1344:	b	1308 <getmaxfd+0x38>
    1348:	ldur	w0, [x29, #-4]
    134c:	ldp	x29, x30, [sp, #16]
    1350:	add	sp, sp, #0x20
    1354:	ret

0000000000001358 <getflags>:
    1358:	sub	sp, sp, #0x50
    135c:	stp	x29, x30, [sp, #64]
    1360:	add	x29, sp, #0x40
    1364:	mov	w8, #0x1                   	// #1
    1368:	mov	w9, #0xffffffff            	// #-1
    136c:	stur	w0, [x29, #-8]
    1370:	stur	w1, [x29, #-12]
    1374:	ldur	w0, [x29, #-8]
    1378:	mov	w1, w8
    137c:	stur	w9, [x29, #-28]
    1380:	bl	c40 <fcntl@plt>
    1384:	stur	w0, [x29, #-16]
    1388:	ldur	w8, [x29, #-28]
    138c:	cmp	w0, w8
    1390:	b.ne	13d8 <getflags+0x80>  // b.any
    1394:	ldur	w8, [x29, #-12]
    1398:	cbz	w8, 13cc <getflags+0x74>
    139c:	ldur	w1, [x29, #-8]
    13a0:	str	w1, [sp, #32]
    13a4:	bl	c70 <__errno_location@plt>
    13a8:	ldr	w0, [x0]
    13ac:	bl	bf0 <strerror@plt>
    13b0:	adrp	x8, 1000 <printone+0x58>
    13b4:	add	x8, x8, #0x92c
    13b8:	str	x0, [sp, #24]
    13bc:	mov	x0, x8
    13c0:	ldr	w1, [sp, #32]
    13c4:	ldr	x2, [sp, #24]
    13c8:	bl	bb0 <builtin_error@plt>
    13cc:	mov	w8, #0xffffffff            	// #-1
    13d0:	stur	w8, [x29, #-4]
    13d4:	b	1464 <getflags+0x10c>
    13d8:	ldur	w0, [x29, #-8]
    13dc:	mov	w1, #0x3                   	// #3
    13e0:	bl	c40 <fcntl@plt>
    13e4:	stur	w0, [x29, #-20]
    13e8:	mov	w8, #0xffffffff            	// #-1
    13ec:	cmp	w0, w8
    13f0:	b.ne	1438 <getflags+0xe0>  // b.any
    13f4:	ldur	w8, [x29, #-12]
    13f8:	cbz	w8, 142c <getflags+0xd4>
    13fc:	ldur	w1, [x29, #-8]
    1400:	str	w1, [sp, #20]
    1404:	bl	c70 <__errno_location@plt>
    1408:	ldr	w0, [x0]
    140c:	bl	bf0 <strerror@plt>
    1410:	adrp	x8, 1000 <printone+0x58>
    1414:	add	x8, x8, #0x94b
    1418:	str	x0, [sp, #8]
    141c:	mov	x0, x8
    1420:	ldr	w1, [sp, #20]
    1424:	ldr	x2, [sp, #8]
    1428:	bl	bb0 <builtin_error@plt>
    142c:	mov	w8, #0xffffffff            	// #-1
    1430:	stur	w8, [x29, #-4]
    1434:	b	1464 <getflags+0x10c>
    1438:	ldur	w8, [x29, #-16]
    143c:	cbz	w8, 144c <getflags+0xf4>
    1440:	ldur	w8, [x29, #-20]
    1444:	orr	w8, w8, #0x80000
    1448:	stur	w8, [x29, #-20]
    144c:	ldur	w8, [x29, #-20]
    1450:	str	w8, [sp, #4]
    1454:	bl	1474 <getallflags>
    1458:	ldr	w8, [sp, #4]
    145c:	and	w9, w8, w0
    1460:	stur	w9, [x29, #-4]
    1464:	ldur	w0, [x29, #-4]
    1468:	ldp	x29, x30, [sp, #64]
    146c:	add	sp, sp, #0x50
    1470:	ret

0000000000001474 <getallflags>:
    1474:	sub	sp, sp, #0x10
    1478:	str	wzr, [sp, #8]
    147c:	str	wzr, [sp, #12]
    1480:	ldrsw	x8, [sp, #12]
    1484:	cmp	x8, #0xa
    1488:	b.cs	14c4 <getallflags+0x50>  // b.hs, b.nlast
    148c:	ldrsw	x8, [sp, #12]
    1490:	mov	x9, #0x10                  	// #16
    1494:	mul	x8, x9, x8
    1498:	adrp	x9, 11000 <__FRAME_END__+0xf564>
    149c:	add	x9, x9, #0xd30
    14a0:	add	x8, x9, x8
    14a4:	ldr	w10, [x8, #8]
    14a8:	ldr	w11, [sp, #8]
    14ac:	orr	w10, w11, w10
    14b0:	str	w10, [sp, #8]
    14b4:	ldr	w8, [sp, #12]
    14b8:	add	w8, w8, #0x1
    14bc:	str	w8, [sp, #12]
    14c0:	b	1480 <getallflags+0xc>
    14c4:	ldr	w0, [sp, #8]
    14c8:	add	sp, sp, #0x10
    14cc:	ret

00000000000014d0 <parseflags>:
    14d0:	sub	sp, sp, #0x50
    14d4:	stp	x29, x30, [sp, #64]
    14d8:	add	x29, sp, #0x40
    14dc:	adrp	x8, 1000 <printone+0x58>
    14e0:	add	x8, x8, #0x72e
    14e4:	stur	x0, [x29, #-8]
    14e8:	stur	x1, [x29, #-16]
    14ec:	stur	x2, [x29, #-24]
    14f0:	stur	wzr, [x29, #-28]
    14f4:	ldur	x9, [x29, #-24]
    14f8:	str	wzr, [x9]
    14fc:	ldur	x9, [x29, #-16]
    1500:	str	wzr, [x9]
    1504:	ldur	x0, [x29, #-8]
    1508:	mov	x1, x8
    150c:	bl	ba0 <strtok@plt>
    1510:	stur	x0, [x29, #-8]
    1514:	ldur	x8, [x29, #-8]
    1518:	cbz	x8, 162c <parseflags+0x15c>
    151c:	ldur	x8, [x29, #-8]
    1520:	ldrb	w9, [x8]
    1524:	cmp	w9, #0x2b
    1528:	str	w9, [sp, #12]
    152c:	b.eq	1544 <parseflags+0x74>  // b.none
    1530:	b	1534 <parseflags+0x64>
    1534:	ldr	w8, [sp, #12]
    1538:	cmp	w8, #0x2d
    153c:	b.eq	155c <parseflags+0x8c>  // b.none
    1540:	b	1574 <parseflags+0xa4>
    1544:	ldur	x8, [x29, #-16]
    1548:	str	x8, [sp, #24]
    154c:	ldur	x8, [x29, #-8]
    1550:	add	x8, x8, #0x1
    1554:	stur	x8, [x29, #-8]
    1558:	b	157c <parseflags+0xac>
    155c:	ldur	x8, [x29, #-24]
    1560:	str	x8, [sp, #24]
    1564:	ldur	x8, [x29, #-8]
    1568:	add	x8, x8, #0x1
    156c:	stur	x8, [x29, #-8]
    1570:	b	157c <parseflags+0xac>
    1574:	sub	x8, x29, #0x1c
    1578:	str	x8, [sp, #24]
    157c:	str	xzr, [sp, #16]
    1580:	ldr	x8, [sp, #16]
    1584:	cmp	x8, #0xa
    1588:	b.cs	15f4 <parseflags+0x124>  // b.hs, b.nlast
    158c:	ldur	x0, [x29, #-8]
    1590:	ldr	x8, [sp, #16]
    1594:	mov	x9, #0x10                  	// #16
    1598:	mul	x8, x9, x8
    159c:	adrp	x9, 11000 <__FRAME_END__+0xf564>
    15a0:	add	x9, x9, #0xd30
    15a4:	add	x8, x9, x8
    15a8:	ldr	x1, [x8]
    15ac:	bl	c10 <strcmp@plt>
    15b0:	cbnz	w0, 15e4 <parseflags+0x114>
    15b4:	ldr	x8, [sp, #16]
    15b8:	mov	x9, #0x10                  	// #16
    15bc:	mul	x8, x9, x8
    15c0:	adrp	x9, 11000 <__FRAME_END__+0xf564>
    15c4:	add	x9, x9, #0xd30
    15c8:	add	x8, x9, x8
    15cc:	ldr	w10, [x8, #8]
    15d0:	ldr	x8, [sp, #24]
    15d4:	ldr	w11, [x8]
    15d8:	orr	w10, w11, w10
    15dc:	str	w10, [x8]
    15e0:	b	15f4 <parseflags+0x124>
    15e4:	ldr	x8, [sp, #16]
    15e8:	add	x8, x8, #0x1
    15ec:	str	x8, [sp, #16]
    15f0:	b	1580 <parseflags+0xb0>
    15f4:	ldr	x8, [sp, #16]
    15f8:	cmp	x8, #0xa
    15fc:	b.ne	1610 <parseflags+0x140>  // b.any
    1600:	ldur	x1, [x29, #-8]
    1604:	adrp	x0, 1000 <printone+0x58>
    1608:	add	x0, x0, #0x9e5
    160c:	bl	bb0 <builtin_error@plt>
    1610:	mov	x8, xzr
    1614:	mov	x0, x8
    1618:	adrp	x1, 1000 <printone+0x58>
    161c:	add	x1, x1, #0x72e
    1620:	bl	ba0 <strtok@plt>
    1624:	stur	x0, [x29, #-8]
    1628:	b	1514 <parseflags+0x44>
    162c:	ldur	w0, [x29, #-28]
    1630:	ldp	x29, x30, [sp, #64]
    1634:	add	sp, sp, #0x50
    1638:	ret

Disassembly of section .fini:

000000000000163c <_fini>:
    163c:	stp	x29, x30, [sp, #-16]!
    1640:	mov	x29, sp
    1644:	ldp	x29, x30, [sp], #16
    1648:	ret
