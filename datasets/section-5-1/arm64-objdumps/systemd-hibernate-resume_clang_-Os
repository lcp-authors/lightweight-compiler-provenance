
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-hibernate-resume_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004008e0 <_init>:
  4008e0:	stp	x29, x30, [sp, #-16]!
  4008e4:	mov	x29, sp
  4008e8:	bl	400a68 <call_weak_fn>
  4008ec:	ldp	x29, x30, [sp], #16
  4008f0:	ret

Disassembly of section .plt:

00000000004008f8 <__libc_start_main@plt-0x20>:
  4008f8:	stp	x16, x30, [sp, #-16]!
  4008fc:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  400900:	ldr	x17, [x16, #3960]
  400904:	add	x16, x16, #0xf78
  400908:	br	x17
  40090c:	nop
  400910:	nop
  400914:	nop

0000000000400918 <__libc_start_main@plt>:
  400918:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  40091c:	ldr	x17, [x16, #3968]
  400920:	add	x16, x16, #0xf80
  400924:	br	x17

0000000000400928 <abort@plt>:
  400928:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  40092c:	ldr	x17, [x16, #3976]
  400930:	add	x16, x16, #0xf88
  400934:	br	x17

0000000000400938 <__gmon_start__@plt>:
  400938:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  40093c:	ldr	x17, [x16, #3984]
  400940:	add	x16, x16, #0xf90
  400944:	br	x17

0000000000400948 <log_setup_service@plt>:
  400948:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  40094c:	ldr	x17, [x16, #3992]
  400950:	add	x16, x16, #0xf98
  400954:	br	x17

0000000000400958 <umask@plt>:
  400958:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  40095c:	ldr	x17, [x16, #4000]
  400960:	add	x16, x16, #0xfa0
  400964:	br	x17

0000000000400968 <in_initrd@plt>:
  400968:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  40096c:	ldr	x17, [x16, #4008]
  400970:	add	x16, x16, #0xfa8
  400974:	br	x17

0000000000400978 <gnu_dev_major@plt>:
  400978:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  40097c:	ldr	x17, [x16, #4016]
  400980:	add	x16, x16, #0xfb0
  400984:	br	x17

0000000000400988 <gnu_dev_minor@plt>:
  400988:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  40098c:	ldr	x17, [x16, #4024]
  400990:	add	x16, x16, #0xfb8
  400994:	br	x17

0000000000400998 <asprintf@plt>:
  400998:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  40099c:	ldr	x17, [x16, #4032]
  4009a0:	add	x16, x16, #0xfc0
  4009a4:	br	x17

00000000004009a8 <write_string_file_ts@plt>:
  4009a8:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  4009ac:	ldr	x17, [x16, #4040]
  4009b0:	add	x16, x16, #0xfc8
  4009b4:	br	x17

00000000004009b8 <log_get_max_level_realm@plt>:
  4009b8:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  4009bc:	ldr	x17, [x16, #4048]
  4009c0:	add	x16, x16, #0xfd0
  4009c4:	br	x17

00000000004009c8 <log_internal_realm@plt>:
  4009c8:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  4009cc:	ldr	x17, [x16, #4056]
  4009d0:	add	x16, x16, #0xfd8
  4009d4:	br	x17

00000000004009d8 <__errno_location@plt>:
  4009d8:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  4009dc:	ldr	x17, [x16, #4064]
  4009e0:	add	x16, x16, #0xfe0
  4009e4:	br	x17

00000000004009e8 <log_oom_internal@plt>:
  4009e8:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  4009ec:	ldr	x17, [x16, #4072]
  4009f0:	add	x16, x16, #0xfe8
  4009f4:	br	x17

00000000004009f8 <free@plt>:
  4009f8:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  4009fc:	ldr	x17, [x16, #4080]
  400a00:	add	x16, x16, #0xff0
  400a04:	br	x17

0000000000400a08 <__xstat64@plt>:
  400a08:	adrp	x16, 41f000 <__FRAME_END__+0x1dfd8>
  400a0c:	ldr	x17, [x16, #4088]
  400a10:	add	x16, x16, #0xff8
  400a14:	br	x17

Disassembly of section .text:

0000000000400a18 <_start>:
  400a18:	mov	x29, #0x0                   	// #0
  400a1c:	mov	x30, #0x0                   	// #0
  400a20:	mov	x5, x0
  400a24:	ldr	x1, [sp]
  400a28:	add	x2, sp, #0x8
  400a2c:	mov	x6, sp
  400a30:	movz	x0, #0x0, lsl #48
  400a34:	movk	x0, #0x0, lsl #32
  400a38:	movk	x0, #0x40, lsl #16
  400a3c:	movk	x0, #0xb44
  400a40:	movz	x3, #0x0, lsl #48
  400a44:	movk	x3, #0x0, lsl #32
  400a48:	movk	x3, #0x40, lsl #16
  400a4c:	movk	x3, #0xd70
  400a50:	movz	x4, #0x0, lsl #48
  400a54:	movk	x4, #0x0, lsl #32
  400a58:	movk	x4, #0x40, lsl #16
  400a5c:	movk	x4, #0xdf0
  400a60:	bl	400918 <__libc_start_main@plt>
  400a64:	bl	400928 <abort@plt>

0000000000400a68 <call_weak_fn>:
  400a68:	adrp	x0, 41f000 <__FRAME_END__+0x1dfd8>
  400a6c:	ldr	x0, [x0, #3936]
  400a70:	cbz	x0, 400a78 <call_weak_fn+0x10>
  400a74:	b	400938 <__gmon_start__@plt>
  400a78:	ret

0000000000400a7c <deregister_tm_clones>:
  400a7c:	adrp	x0, 420000 <completed.8445>
  400a80:	add	x1, x0, #0x0
  400a84:	adrp	x0, 420000 <completed.8445>
  400a88:	add	x0, x0, #0x0
  400a8c:	cmp	x1, x0
  400a90:	b.eq	400abc <deregister_tm_clones+0x40>  // b.none
  400a94:	sub	sp, sp, #0x10
  400a98:	adrp	x1, 400000 <_init-0x8e0>
  400a9c:	ldr	x1, [x1, #3608]
  400aa0:	str	x1, [sp, #8]
  400aa4:	cbz	x1, 400ab4 <deregister_tm_clones+0x38>
  400aa8:	mov	x16, x1
  400aac:	add	sp, sp, #0x10
  400ab0:	br	x16
  400ab4:	add	sp, sp, #0x10
  400ab8:	ret
  400abc:	ret

0000000000400ac0 <register_tm_clones>:
  400ac0:	adrp	x0, 420000 <completed.8445>
  400ac4:	add	x1, x0, #0x0
  400ac8:	adrp	x0, 420000 <completed.8445>
  400acc:	add	x0, x0, #0x0
  400ad0:	sub	x1, x1, x0
  400ad4:	mov	x2, #0x2                   	// #2
  400ad8:	asr	x1, x1, #3
  400adc:	sdiv	x1, x1, x2
  400ae0:	cbz	x1, 400b0c <register_tm_clones+0x4c>
  400ae4:	sub	sp, sp, #0x10
  400ae8:	adrp	x2, 400000 <_init-0x8e0>
  400aec:	ldr	x2, [x2, #3616]
  400af0:	str	x2, [sp, #8]
  400af4:	cbz	x2, 400b04 <register_tm_clones+0x44>
  400af8:	mov	x16, x2
  400afc:	add	sp, sp, #0x10
  400b00:	br	x16
  400b04:	add	sp, sp, #0x10
  400b08:	ret
  400b0c:	ret

0000000000400b10 <__do_global_dtors_aux>:
  400b10:	stp	x29, x30, [sp, #-32]!
  400b14:	mov	x29, sp
  400b18:	str	x19, [sp, #16]
  400b1c:	adrp	x19, 420000 <completed.8445>
  400b20:	ldrb	w0, [x19]
  400b24:	cbnz	w0, 400b34 <__do_global_dtors_aux+0x24>
  400b28:	bl	400a7c <deregister_tm_clones>
  400b2c:	mov	w0, #0x1                   	// #1
  400b30:	strb	w0, [x19]
  400b34:	ldr	x19, [sp, #16]
  400b38:	ldp	x29, x30, [sp], #32
  400b3c:	ret

0000000000400b40 <frame_dummy>:
  400b40:	b	400ac0 <register_tm_clones>

0000000000400b44 <main>:
  400b44:	sub	sp, sp, #0xb0
  400b48:	stp	x29, x30, [sp, #128]
  400b4c:	add	x29, sp, #0x80
  400b50:	cmp	w0, #0x2
  400b54:	str	x21, [sp, #144]
  400b58:	stp	x20, x19, [sp, #160]
  400b5c:	str	xzr, [x29, #24]
  400b60:	b.ne	400c3c <main+0xf8>  // b.any
  400b64:	mov	x19, x1
  400b68:	bl	400948 <log_setup_service@plt>
  400b6c:	mov	w0, #0x12                  	// #18
  400b70:	bl	400958 <umask@plt>
  400b74:	bl	400968 <in_initrd@plt>
  400b78:	tbz	w0, #0, 400c34 <main+0xf0>
  400b7c:	ldr	x19, [x19, #8]
  400b80:	mov	x1, sp
  400b84:	mov	x0, x19
  400b88:	bl	400df8 <stat64>
  400b8c:	tbnz	w0, #31, 400c78 <main+0x134>
  400b90:	ldr	w8, [sp, #16]
  400b94:	and	w8, w8, #0xf000
  400b98:	cmp	w8, #0x6, lsl #12
  400b9c:	b.ne	400cb4 <main+0x170>  // b.any
  400ba0:	ldr	x20, [sp, #32]
  400ba4:	mov	x0, x20
  400ba8:	bl	400978 <gnu_dev_major@plt>
  400bac:	mov	w21, w0
  400bb0:	mov	x0, x20
  400bb4:	bl	400988 <gnu_dev_minor@plt>
  400bb8:	adrp	x1, 400000 <_init-0x8e0>
  400bbc:	mov	w3, w0
  400bc0:	add	x1, x1, #0xebd
  400bc4:	add	x0, x29, #0x18
  400bc8:	mov	w2, w21
  400bcc:	bl	400998 <asprintf@plt>
  400bd0:	tbnz	w0, #31, 400cf4 <main+0x1b0>
  400bd4:	ldr	x1, [x29, #24]
  400bd8:	adrp	x0, 400000 <_init-0x8e0>
  400bdc:	add	x0, x0, #0xec3
  400be0:	mov	w2, #0x20                  	// #32
  400be4:	mov	x3, xzr
  400be8:	bl	4009a8 <write_string_file_ts@plt>
  400bec:	mov	w20, w0
  400bf0:	mov	w0, wzr
  400bf4:	bl	4009b8 <log_get_max_level_realm@plt>
  400bf8:	tbnz	w20, #31, 400d14 <main+0x1d0>
  400bfc:	cmp	w0, #0x6
  400c00:	b.lt	400c34 <main+0xf0>  // b.tstop
  400c04:	ldr	x7, [x29, #24]
  400c08:	adrp	x2, 400000 <_init-0x8e0>
  400c0c:	adrp	x4, 400000 <_init-0x8e0>
  400c10:	adrp	x5, 400000 <_init-0x8e0>
  400c14:	add	x2, x2, #0xe2b
  400c18:	add	x4, x4, #0xe53
  400c1c:	add	x5, x5, #0xf03
  400c20:	mov	w0, #0x6                   	// #6
  400c24:	mov	w3, #0x3d                  	// #61
  400c28:	mov	w1, wzr
  400c2c:	mov	x6, x19
  400c30:	bl	4009c8 <log_internal_realm@plt>
  400c34:	mov	w19, wzr
  400c38:	b	400d4c <main+0x208>
  400c3c:	mov	w0, wzr
  400c40:	bl	4009b8 <log_get_max_level_realm@plt>
  400c44:	cmp	w0, #0x3
  400c48:	b.lt	400d48 <main+0x204>  // b.tstop
  400c4c:	adrp	x2, 400000 <_init-0x8e0>
  400c50:	adrp	x4, 400000 <_init-0x8e0>
  400c54:	adrp	x5, 400000 <_init-0x8e0>
  400c58:	add	x2, x2, #0xe2b
  400c5c:	add	x4, x4, #0xe53
  400c60:	add	x5, x5, #0xe58
  400c64:	mov	w0, #0x3                   	// #3
  400c68:	mov	w3, #0x13                  	// #19
  400c6c:	mov	w1, wzr
  400c70:	bl	4009c8 <log_internal_realm@plt>
  400c74:	b	400d48 <main+0x204>
  400c78:	mov	w0, wzr
  400c7c:	bl	4009b8 <log_get_max_level_realm@plt>
  400c80:	cmp	w0, #0x3
  400c84:	b.lt	400d48 <main+0x204>  // b.tstop
  400c88:	bl	4009d8 <__errno_location@plt>
  400c8c:	ldr	w1, [x0]
  400c90:	adrp	x2, 400000 <_init-0x8e0>
  400c94:	adrp	x4, 400000 <_init-0x8e0>
  400c98:	adrp	x5, 400000 <_init-0x8e0>
  400c9c:	add	x2, x2, #0xe2b
  400ca0:	add	x4, x4, #0xe53
  400ca4:	add	x5, x5, #0xe7b
  400ca8:	mov	w0, #0x3                   	// #3
  400cac:	mov	w3, #0x22                  	// #34
  400cb0:	b	400ce8 <main+0x1a4>
  400cb4:	mov	w0, wzr
  400cb8:	bl	4009b8 <log_get_max_level_realm@plt>
  400cbc:	cmp	w0, #0x3
  400cc0:	b.lt	400d48 <main+0x204>  // b.tstop
  400cc4:	adrp	x2, 400000 <_init-0x8e0>
  400cc8:	adrp	x4, 400000 <_init-0x8e0>
  400ccc:	adrp	x5, 400000 <_init-0x8e0>
  400cd0:	add	x2, x2, #0xe2b
  400cd4:	add	x4, x4, #0xe53
  400cd8:	add	x5, x5, #0xe93
  400cdc:	mov	w0, #0x3                   	// #3
  400ce0:	mov	w3, #0x27                  	// #39
  400ce4:	mov	w1, wzr
  400ce8:	mov	x6, x19
  400cec:	bl	4009c8 <log_internal_realm@plt>
  400cf0:	b	400d48 <main+0x204>
  400cf4:	adrp	x1, 400000 <_init-0x8e0>
  400cf8:	adrp	x3, 400000 <_init-0x8e0>
  400cfc:	add	x1, x1, #0xe2b
  400d00:	add	x3, x3, #0xe53
  400d04:	mov	w2, #0x2c                  	// #44
  400d08:	mov	w0, wzr
  400d0c:	bl	4009e8 <log_oom_internal@plt>
  400d10:	b	400d48 <main+0x204>
  400d14:	cmp	w0, #0x3
  400d18:	b.lt	400d48 <main+0x204>  // b.tstop
  400d1c:	ldr	x6, [x29, #24]
  400d20:	adrp	x2, 400000 <_init-0x8e0>
  400d24:	adrp	x4, 400000 <_init-0x8e0>
  400d28:	adrp	x5, 400000 <_init-0x8e0>
  400d2c:	add	x2, x2, #0xe2b
  400d30:	add	x4, x4, #0xe53
  400d34:	add	x5, x5, #0xed5
  400d38:	mov	w0, #0x3                   	// #3
  400d3c:	mov	w3, #0x32                  	// #50
  400d40:	mov	w1, w20
  400d44:	b	400cec <main+0x1a8>
  400d48:	mov	w19, #0x1                   	// #1
  400d4c:	ldr	x0, [x29, #24]
  400d50:	bl	4009f8 <free@plt>
  400d54:	mov	w0, w19
  400d58:	ldp	x20, x19, [sp, #160]
  400d5c:	ldr	x21, [sp, #144]
  400d60:	ldp	x29, x30, [sp, #128]
  400d64:	add	sp, sp, #0xb0
  400d68:	ret
  400d6c:	udf	#0

0000000000400d70 <__libc_csu_init>:
  400d70:	stp	x29, x30, [sp, #-64]!
  400d74:	mov	x29, sp
  400d78:	stp	x19, x20, [sp, #16]
  400d7c:	adrp	x20, 41f000 <__FRAME_END__+0x1dfd8>
  400d80:	add	x20, x20, #0xd38
  400d84:	stp	x21, x22, [sp, #32]
  400d88:	adrp	x21, 41f000 <__FRAME_END__+0x1dfd8>
  400d8c:	add	x21, x21, #0xd30
  400d90:	sub	x20, x20, x21
  400d94:	mov	w22, w0
  400d98:	stp	x23, x24, [sp, #48]
  400d9c:	mov	x23, x1
  400da0:	mov	x24, x2
  400da4:	bl	4008e0 <_init>
  400da8:	cmp	xzr, x20, asr #3
  400dac:	b.eq	400dd8 <__libc_csu_init+0x68>  // b.none
  400db0:	asr	x20, x20, #3
  400db4:	mov	x19, #0x0                   	// #0
  400db8:	ldr	x3, [x21, x19, lsl #3]
  400dbc:	mov	x2, x24
  400dc0:	add	x19, x19, #0x1
  400dc4:	mov	x1, x23
  400dc8:	mov	w0, w22
  400dcc:	blr	x3
  400dd0:	cmp	x20, x19
  400dd4:	b.ne	400db8 <__libc_csu_init+0x48>  // b.any
  400dd8:	ldp	x19, x20, [sp, #16]
  400ddc:	ldp	x21, x22, [sp, #32]
  400de0:	ldp	x23, x24, [sp, #48]
  400de4:	ldp	x29, x30, [sp], #64
  400de8:	ret
  400dec:	nop

0000000000400df0 <__libc_csu_fini>:
  400df0:	ret
  400df4:	udf	#0

0000000000400df8 <stat64>:
  400df8:	mov	x2, x1
  400dfc:	mov	x1, x0
  400e00:	mov	w0, #0x0                   	// #0
  400e04:	b	400a08 <__xstat64@plt>

Disassembly of section .fini:

0000000000400e08 <_fini>:
  400e08:	stp	x29, x30, [sp, #-16]!
  400e0c:	mov	x29, sp
  400e10:	ldp	x29, x30, [sp], #16
  400e14:	ret
