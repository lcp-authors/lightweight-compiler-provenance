
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//regexp.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x260>:
       0:	stp	x29, x30, [sp, #-160]!
       4:	cmp	w1, #0x2
       8:	mov	x29, sp
       c:	stp	x19, x20, [sp, #16]
      10:	stp	x21, x22, [sp, #32]
      14:	stp	x23, x24, [sp, #48]
      18:	stp	x25, x26, [sp, #64]
      1c:	b.eq	50 <grub_mod_init-0x210>  // b.none
      20:	adrp	x0, 0 <grub_mod_init-0x260>
      24:	ldr	x1, [x0]
      28:	mov	w0, #0x12                  	// #18
      2c:	bl	0 <grub_error>
      30:	mov	w19, w0
      34:	mov	w0, w19
      38:	ldp	x19, x20, [sp, #16]
      3c:	ldp	x21, x22, [sp, #32]
      40:	ldp	x23, x24, [sp, #48]
      44:	ldp	x25, x26, [sp, #64]
      48:	ldp	x29, x30, [sp], #160
      4c:	ret
      50:	mov	x21, x2
      54:	mov	x22, x0
      58:	mov	w2, #0x1                   	// #1
      5c:	add	x0, sp, #0x60
      60:	ldr	x1, [x21]
      64:	bl	b970 <regcomp>
      68:	mov	w19, w0
      6c:	cbnz	w0, 1cc <grub_mod_init-0x94>
      70:	ldr	x0, [sp, #144]
      74:	add	x0, x0, #0x1
      78:	lsl	x0, x0, #3
      7c:	bl	0 <grub_zalloc>
      80:	mov	x20, x0
      84:	cbz	x0, 1d0 <grub_mod_init-0x90>
      88:	ldr	x1, [x21, #8]
      8c:	mov	x3, x0
      90:	ldr	x2, [sp, #144]
      94:	add	x0, sp, #0x60
      98:	mov	w4, #0x0                   	// #0
      9c:	add	x2, x2, #0x1
      a0:	bl	bb4c <regexec>
      a4:	mov	w19, w0
      a8:	cbnz	w0, 1d0 <grub_mod_init-0x90>
      ac:	ldr	x0, [x22, #8]
      b0:	ldr	x24, [sp, #144]
      b4:	ldr	x25, [x0, #8]
      b8:	add	x24, x24, #0x1
      bc:	ldr	x21, [x21, #8]
      c0:	mov	x23, x25
      c4:	cbz	x25, d0 <grub_mod_init-0x190>
      c8:	ldr	x0, [x23]
      cc:	cbnz	x0, d8 <grub_mod_init-0x188>
      d0:	mov	w19, #0x0                   	// #0
      d4:	b	134 <grub_mod_init-0x12c>
      d8:	mov	w1, #0x3a                  	// #58
      dc:	bl	0 <grub_strchr>
      e0:	mov	x19, x0
      e4:	cbnz	x0, 148 <grub_mod_init-0x118>
      e8:	cmp	x24, #0x1
      ec:	ldr	x0, [x23]
      f0:	b.ls	100 <grub_mod_init-0x160>  // b.plast
      f4:	ldr	w1, [x20, #8]
      f8:	cmn	w1, #0x1
      fc:	b.ne	10c <grub_mod_init-0x154>  // b.any
     100:	bl	0 <grub_env_unset>
     104:	add	x23, x23, #0x8
     108:	b	c4 <grub_mod_init-0x19c>
     10c:	ldrsw	x1, [x20, #12]
     110:	ldrb	w22, [x21, x1]
     114:	strb	wzr, [x21, x1]
     118:	ldrsw	x1, [x20, #8]
     11c:	add	x1, x21, x1
     120:	bl	0 <grub_env_set>
     124:	mov	w19, w0
     128:	ldrsw	x0, [x20, #12]
     12c:	strb	w22, [x21, x0]
     130:	cbz	w19, 104 <grub_mod_init-0x15c>
     134:	add	x0, sp, #0x60
     138:	bl	bb08 <regfree>
     13c:	mov	x0, x20
     140:	bl	0 <grub_free>
     144:	b	34 <grub_mod_init-0x22c>
     148:	ldr	x0, [x23]
     14c:	add	x1, sp, #0x58
     150:	mov	w2, #0xa                   	// #10
     154:	bl	0 <grub_strtoul>
     158:	mov	x1, x0
     15c:	ldr	x0, [sp, #88]
     160:	cmp	x19, x0
     164:	b.eq	184 <grub_mod_init-0xdc>  // b.none
     168:	adrp	x0, 0 <grub_mod_init-0x260>
     16c:	ldr	x2, [x23]
     170:	ldr	x1, [x0]
     174:	mov	w0, #0x12                  	// #18
     178:	bl	0 <grub_error>
     17c:	mov	w19, w0
     180:	b	134 <grub_mod_init-0x12c>
     184:	add	x0, x19, #0x1
     188:	cmp	x24, x1
     18c:	b.ls	100 <grub_mod_init-0x160>  // b.plast
     190:	lsl	x2, x1, #3
     194:	add	x22, x20, x1, lsl #3
     198:	ldr	w1, [x20, x2]
     19c:	cmn	w1, #0x1
     1a0:	b.eq	100 <grub_mod_init-0x160>  // b.none
     1a4:	ldrsw	x1, [x22, #4]
     1a8:	ldrb	w26, [x21, x1]
     1ac:	strb	wzr, [x21, x1]
     1b0:	ldrsw	x1, [x20, x2]
     1b4:	add	x1, x21, x1
     1b8:	bl	0 <grub_env_set>
     1bc:	mov	w19, w0
     1c0:	ldrsw	x0, [x22, #4]
     1c4:	strb	w26, [x21, x0]
     1c8:	b	130 <grub_mod_init-0x130>
     1cc:	mov	x20, #0x0                   	// #0
     1d0:	mov	x0, x20
     1d4:	bl	0 <grub_free>
     1d8:	add	x1, sp, #0x60
     1dc:	mov	x3, #0x0                   	// #0
     1e0:	mov	x2, #0x0                   	// #0
     1e4:	mov	w0, w19
     1e8:	bl	ba70 <regerror>
     1ec:	mov	x21, x0
     1f0:	bl	0 <grub_malloc>
     1f4:	mov	x20, x0
     1f8:	cbnz	x0, 214 <grub_mod_init-0x4c>
     1fc:	add	x0, sp, #0x60
     200:	bl	bb08 <regfree>
     204:	adrp	x0, 0 <grub_mod_init-0x260>
     208:	ldr	x0, [x0]
     20c:	ldr	w19, [x0]
     210:	b	34 <grub_mod_init-0x22c>
     214:	mov	x2, x0
     218:	add	x1, sp, #0x60
     21c:	mov	x3, x21
     220:	mov	w0, w19
     224:	bl	ba70 <regerror>
     228:	adrp	x0, 0 <grub_mod_init-0x260>
     22c:	mov	x2, x20
     230:	ldr	x1, [x0]
     234:	mov	w0, #0x1                   	// #1
     238:	b	178 <grub_mod_init-0xe8>
     23c:	nop
	...

0000000000000260 <grub_mod_init>:
     260:	stp	x29, x30, [sp, #-16]!
     264:	adrp	x0, 0 <grub_mod_init-0x260>
     268:	mov	w2, #0x0                   	// #0
     26c:	mov	x29, sp
     270:	ldr	x5, [x0]
     274:	adrp	x0, 0 <grub_mod_init-0x260>
     278:	ldr	x4, [x0]
     27c:	adrp	x0, 0 <grub_mod_init-0x260>
     280:	ldr	x3, [x0]
     284:	adrp	x0, 0 <grub_mod_init-0x260>
     288:	ldr	x1, [x0]
     28c:	adrp	x0, 0 <grub_mod_init-0x260>
     290:	ldr	x0, [x0]
     294:	bl	0 <grub_register_extcmd>
     298:	adrp	x1, 0 <grub_mod_init-0x260>
     29c:	ldr	x1, [x1]
     2a0:	str	x0, [x1]
     2a4:	adrp	x0, 0 <grub_mod_init-0x260>
     2a8:	adrp	x1, 0 <grub_mod_init-0x260>
     2ac:	ldr	x0, [x0]
     2b0:	ldr	x1, [x1]
     2b4:	str	x1, [x0]
     2b8:	ldp	x29, x30, [sp], #16
     2bc:	ret
	...

0000000000000300 <grub_mod_fini>:
     300:	stp	x29, x30, [sp, #-16]!
     304:	adrp	x0, 0 <grub_mod_init-0x260>
     308:	mov	x29, sp
     30c:	ldr	x0, [x0]
     310:	ldr	x0, [x0]
     314:	bl	0 <grub_unregister_extcmd>
     318:	adrp	x0, 0 <grub_mod_init-0x260>
     31c:	ldr	x0, [x0]
     320:	str	xzr, [x0]
     324:	ldp	x29, x30, [sp], #16
     328:	ret
     32c:	nop
	...
     340:	cmp	x1, x2
     344:	b.cc	350 <grub_mod_fini+0x50>  // b.lo, b.ul, b.last
     348:	strb	wzr, [x0]
     34c:	ret
     350:	mov	x3, x1
     354:	ldrb	w4, [x3], #1
     358:	cmp	w4, #0x5c
     35c:	b.ne	380 <grub_mod_fini+0x80>  // b.any
     360:	cmp	x3, x2
     364:	b.cs	348 <grub_mod_fini+0x48>  // b.hs, b.nlast
     368:	ldrb	w3, [x1, #1]
     36c:	strb	w3, [x0]
     370:	add	x3, x1, #0x2
     374:	add	x0, x0, #0x1
     378:	mov	x1, x3
     37c:	b	340 <grub_mod_fini+0x40>
     380:	strb	w4, [x0]
     384:	b	374 <grub_mod_fini+0x74>
     388:	stp	x29, x30, [sp, #-64]!
     38c:	mov	x29, sp
     390:	stp	x19, x20, [sp, #16]
     394:	mov	x19, x1
     398:	ldr	w1, [x1, #8]
     39c:	stp	x21, x22, [sp, #32]
     3a0:	mov	x20, x0
     3a4:	str	x23, [sp, #48]
     3a8:	cbnz	w1, 3cc <grub_mod_fini+0xcc>
     3ac:	adrp	x0, 0 <grub_mod_init-0x260>
     3b0:	mov	x1, x20
     3b4:	ldr	x0, [x0]
     3b8:	bl	0 <grub_xasprintf>
     3bc:	mov	x21, x0
     3c0:	cbnz	x0, 3e0 <grub_mod_fini+0xe0>
     3c4:	mov	w20, #0x1                   	// #1
     3c8:	b	48c <grub_mod_fini+0x18c>
     3cc:	mov	w1, #0x2c                  	// #44
     3d0:	bl	0 <grub_strchr>
     3d4:	cbz	x0, 3ac <grub_mod_fini+0xac>
     3d8:	mov	w20, #0x0                   	// #0
     3dc:	b	48c <grub_mod_fini+0x18c>
     3e0:	mov	x4, x0
     3e4:	adrp	x23, 0 <grub_mod_init-0x260>
     3e8:	adrp	x0, 0 <grub_mod_init-0x260>
     3ec:	adrp	x22, 0 <grub_mod_init-0x260>
     3f0:	ldr	x2, [x23]
     3f4:	mov	w1, #0xee                  	// #238
     3f8:	ldr	x3, [x0]
     3fc:	ldr	x0, [x22]
     400:	bl	0 <grub_real_dprintf>
     404:	ldr	x0, [x19]
     408:	mov	x1, x21
     40c:	mov	w4, #0x0                   	// #0
     410:	mov	x3, #0x0                   	// #0
     414:	mov	x2, #0x0                   	// #0
     418:	bl	bb4c <regexec>
     41c:	mov	w20, w0
     420:	cbz	w0, 448 <grub_mod_fini+0x148>
     424:	adrp	x0, 0 <grub_mod_init-0x260>
     428:	mov	w1, #0xf1                  	// #241
     42c:	ldr	x2, [x23]
     430:	ldr	x3, [x0]
     434:	ldr	x0, [x22]
     438:	bl	0 <grub_real_dprintf>
     43c:	mov	x0, x21
     440:	bl	0 <grub_free>
     444:	b	3d8 <grub_mod_fini+0xd8>
     448:	ldr	w1, [x19, #12]
     44c:	ldr	x0, [x19, #16]
     450:	add	w1, w1, #0x2
     454:	sbfiz	x1, x1, #3, #32
     458:	bl	0 <grub_realloc>
     45c:	cbnz	x0, 46c <grub_mod_fini+0x16c>
     460:	mov	x0, x21
     464:	bl	0 <grub_free>
     468:	b	3c4 <grub_mod_fini+0xc4>
     46c:	ldr	w1, [x19, #12]
     470:	str	x0, [x19, #16]
     474:	add	w2, w1, #0x1
     478:	str	w2, [x19, #12]
     47c:	sbfiz	x1, x1, #3, #32
     480:	str	x21, [x0, x1]
     484:	add	x0, x0, x1
     488:	str	xzr, [x0, #8]
     48c:	mov	w0, w20
     490:	ldp	x19, x20, [sp, #16]
     494:	ldp	x21, x22, [sp, #32]
     498:	ldr	x23, [sp, #48]
     49c:	ldp	x29, x30, [sp], #64
     4a0:	ret
     4a4:	nop
	...
     4d0:	stp	x29, x30, [sp, #-112]!
     4d4:	mov	x29, sp
     4d8:	stp	x19, x20, [sp, #16]
     4dc:	mov	x20, x1
     4e0:	stp	x21, x22, [sp, #32]
     4e4:	mov	x21, x2
     4e8:	mov	x22, x0
     4ec:	stp	x23, x24, [sp, #48]
     4f0:	stp	x25, x26, [sp, #64]
     4f4:	str	x3, [sp, #80]
     4f8:	stp	xzr, xzr, [sp, #88]
     4fc:	str	xzr, [sp, #104]
     500:	bl	0 <grub_error_push>
     504:	mov	x0, x22
     508:	bl	0 <grub_strlen>
     50c:	add	x1, x21, w0, uxtw
     510:	mov	w24, w0
     514:	sub	x1, x1, x20
     518:	add	w0, w1, #0x1
     51c:	bl	0 <grub_malloc>
     520:	mov	x19, x0
     524:	cbnz	x0, 574 <grub_mod_fini+0x274>
     528:	mov	x20, #0x0                   	// #0
     52c:	str	xzr, [sp, #104]
     530:	ldr	x0, [sp, #104]
     534:	mov	x21, #0x0                   	// #0
     538:	bl	0 <grub_free>
     53c:	ldr	x0, [sp, #88]
     540:	cbz	x0, 550 <grub_mod_fini+0x250>
     544:	ldr	x1, [x0, x21]
     548:	add	x21, x21, #0x8
     54c:	cbnz	x1, 674 <grub_mod_fini+0x374>
     550:	bl	0 <grub_free>
     554:	cbz	x20, 560 <grub_mod_fini+0x260>
     558:	mov	x0, x20
     55c:	bl	0 <grub_device_close>
     560:	mov	x0, x19
     564:	bl	0 <grub_free>
     568:	bl	0 <grub_error_pop>
     56c:	mov	x0, #0x0                   	// #0
     570:	b	624 <grub_mod_fini+0x324>
     574:	adrp	x26, 0 <grub_mod_init-0x260>
     578:	mov	x1, x22
     57c:	bl	0 <grub_strcpy>
     580:	add	x22, x19, w24, uxtw
     584:	cmp	x21, x20
     588:	b.ls	598 <grub_mod_fini+0x298>  // b.plast
     58c:	mov	x25, x20
     590:	ldrb	w23, [x25], #1
     594:	cbnz	w23, 63c <grub_mod_fini+0x33c>
     598:	strb	wzr, [x22]
     59c:	mov	x0, x19
     5a0:	str	x19, [sp, #104]
     5a4:	bl	0 <grub_file_get_device_name>
     5a8:	mov	x19, x0
     5ac:	bl	0 <grub_device_open>
     5b0:	mov	x20, x0
     5b4:	cbz	x0, 530 <grub_mod_fini+0x230>
     5b8:	bl	0 <grub_fs_probe>
     5bc:	mov	x21, x0
     5c0:	cbz	x0, 530 <grub_mod_fini+0x230>
     5c4:	ldr	x0, [sp, #104]
     5c8:	ldrb	w1, [x0]
     5cc:	cmp	w1, #0x28
     5d0:	b.ne	5e4 <grub_mod_fini+0x2e4>  // b.any
     5d4:	mov	w1, #0x29                  	// #41
     5d8:	bl	0 <grub_strchr>
     5dc:	cbz	x0, 530 <grub_mod_fini+0x230>
     5e0:	add	x0, x0, #0x1
     5e4:	adrp	x1, 0 <grub_mod_init-0x260>
     5e8:	add	x3, sp, #0x50
     5ec:	ldr	x4, [x21, #24]
     5f0:	ldr	x2, [x1]
     5f4:	mov	x1, x0
     5f8:	mov	x0, x20
     5fc:	blr	x4
     600:	cbnz	w0, 530 <grub_mod_fini+0x230>
     604:	ldr	x0, [sp, #104]
     608:	bl	0 <grub_free>
     60c:	mov	x0, x20
     610:	bl	0 <grub_device_close>
     614:	mov	x0, x19
     618:	bl	0 <grub_free>
     61c:	bl	0 <grub_error_pop>
     620:	ldr	x0, [sp, #88]
     624:	ldp	x19, x20, [sp, #16]
     628:	ldp	x21, x22, [sp, #32]
     62c:	ldp	x23, x24, [sp, #48]
     630:	ldp	x25, x26, [sp, #64]
     634:	ldp	x29, x30, [sp], #112
     638:	ret
     63c:	add	w24, w24, #0x1
     640:	cmp	w23, #0x5c
     644:	b.ne	668 <grub_mod_fini+0x368>  // b.any
     648:	ldrb	w1, [x20, #1]
     64c:	ldr	x0, [x26]
     650:	bl	0 <grub_strchr>
     654:	cbz	x0, 668 <grub_mod_fini+0x368>
     658:	ldrb	w0, [x20, #1]
     65c:	add	x20, x20, #0x2
     660:	strb	w0, [x22]
     664:	b	580 <grub_mod_fini+0x280>
     668:	mov	x20, x25
     66c:	strb	w23, [x22]
     670:	b	580 <grub_mod_fini+0x280>
     674:	mov	x0, x1
     678:	bl	0 <grub_free>
     67c:	b	53c <grub_mod_fini+0x23c>
	...
     690:	stp	x29, x30, [sp, #-240]!
     694:	mov	x29, sp
     698:	stp	x19, x20, [sp, #16]
     69c:	mov	x20, x0
     6a0:	stp	x21, x22, [sp, #32]
     6a4:	stp	x23, x24, [sp, #48]
     6a8:	stp	x25, x26, [sp, #64]
     6ac:	stp	x27, x28, [sp, #80]
     6b0:	str	xzr, [x1]
     6b4:	str	x1, [sp, #120]
     6b8:	ldrb	w0, [x0]
     6bc:	and	w1, w0, #0xfffffffd
     6c0:	cmp	w1, #0x28
     6c4:	mov	w1, #0x2f                  	// #47
     6c8:	ccmp	w0, w1, #0x4, ne  // ne = any
     6cc:	b.ne	a6c <grub_mod_fini+0x76c>  // b.any
     6d0:	add	x26, sp, #0xb0
     6d4:	mov	x19, #0x0                   	// #0
     6d8:	str	wzr, [sp, #108]
     6dc:	ldrb	w0, [x20]
     6e0:	cbz	w0, a64 <grub_mod_fini+0x764>
     6e4:	mov	x23, x20
     6e8:	mov	x21, x20
     6ec:	mov	w0, #0x0                   	// #0
     6f0:	mov	w2, #0x3f                  	// #63
     6f4:	b	710 <grub_mod_fini+0x410>
     6f8:	cmp	w1, #0x5c
     6fc:	b.ne	79c <grub_mod_fini+0x49c>  // b.any
     700:	ldrb	w3, [x21, #1]
     704:	cbz	w3, 7a8 <grub_mod_fini+0x4a8>
     708:	add	x21, x21, #0x1
     70c:	add	x21, x21, #0x1
     710:	ldrb	w1, [x21]
     714:	cbnz	w1, 6f8 <grub_mod_fini+0x3f8>
     718:	cbnz	w0, 7d0 <grub_mod_fini+0x4d0>
     71c:	adrp	x0, 0 <grub_mod_init-0x260>
     720:	adrp	x28, 0 <grub_mod_init-0x260>
     724:	mov	w1, #0x1fd                 	// #509
     728:	ldr	x3, [x0]
     72c:	adrp	x0, 0 <grub_mod_init-0x260>
     730:	ldr	x2, [x0]
     734:	ldr	x0, [x28]
     738:	bl	0 <grub_real_dprintf>
     73c:	cbnz	x19, a88 <grub_mod_fini+0x788>
     740:	mov	x0, #0x10                  	// #16
     744:	bl	0 <grub_malloc>
     748:	mov	x19, x0
     74c:	cbz	x0, 880 <grub_mod_fini+0x580>
     750:	sub	x0, x21, x20
     754:	add	x0, x0, #0x1
     758:	bl	0 <grub_malloc>
     75c:	str	x0, [x19]
     760:	cbz	x0, 880 <grub_mod_fini+0x580>
     764:	mov	x2, x21
     768:	mov	x1, x20
     76c:	bl	340 <grub_mod_fini+0x40>
     770:	str	xzr, [x19, #8]
     774:	adrp	x0, 0 <grub_mod_init-0x260>
     778:	mov	w1, #0x238                 	// #568
     77c:	ldr	x4, [x19]
     780:	ldr	x3, [x0]
     784:	adrp	x0, 0 <grub_mod_init-0x260>
     788:	ldr	x2, [x0]
     78c:	ldr	x0, [x28]
     790:	bl	0 <grub_real_dprintf>
     794:	mov	x20, x21
     798:	b	6dc <grub_mod_fini+0x3dc>
     79c:	cmp	w1, #0x2a
     7a0:	ccmp	w1, w2, #0x4, ne  // ne = any
     7a4:	b.eq	8c8 <grub_mod_fini+0x5c8>  // b.none
     7a8:	cmp	w1, #0x2f
     7ac:	eor	w1, w0, #0x1
     7b0:	cset	w3, eq  // eq = none
     7b4:	csel	w1, w1, wzr, eq  // eq = none
     7b8:	cbz	w1, 7c8 <grub_mod_fini+0x4c8>
     7bc:	add	x23, x21, #0x1
     7c0:	mov	w0, #0x0                   	// #0
     7c4:	b	70c <grub_mod_fini+0x40c>
     7c8:	tst	w3, w0
     7cc:	b.eq	70c <grub_mod_fini+0x40c>  // b.none
     7d0:	cmp	x21, x23
     7d4:	b.eq	71c <grub_mod_fini+0x41c>  // b.none
     7d8:	sub	x0, x21, x23
     7dc:	lsl	w0, w0, #1
     7e0:	add	w0, w0, #0x3
     7e4:	bl	0 <grub_malloc>
     7e8:	mov	x22, x0
     7ec:	cbz	x0, 880 <grub_mod_fini+0x580>
     7f0:	mov	x4, x23
     7f4:	mov	w0, #0x5e                  	// #94
     7f8:	mov	w1, #0x1                   	// #1
     7fc:	mov	w8, #0x5c                  	// #92
     800:	mov	x10, #0x1                   	// #1
     804:	mov	w9, #0x2e                  	// #46
     808:	adrp	x11, 0 <grub_mod_init-0x260>
     80c:	mov	w12, #0x2a                  	// #42
     810:	strb	w0, [x22]
     814:	add	w2, w1, #0x1
     818:	sxtw	x5, w1
     81c:	add	x3, x22, w1, sxtw
     820:	cmp	x21, x4
     824:	sxtw	x7, w2
     828:	add	x0, x22, w2, sxtw
     82c:	b.hi	aa4 <grub_mod_fini+0x7a4>  // b.pmore
     830:	mov	w1, #0x24                  	// #36
     834:	strb	w1, [x3]
     838:	strb	wzr, [x0]
     83c:	adrp	x0, 0 <grub_mod_init-0x260>
     840:	mov	x4, x22
     844:	mov	w1, #0xa4                  	// #164
     848:	ldr	x3, [x0]
     84c:	adrp	x0, 0 <grub_mod_init-0x260>
     850:	ldr	x2, [x0]
     854:	adrp	x0, 0 <grub_mod_init-0x260>
     858:	ldr	x0, [x0]
     85c:	bl	0 <grub_real_dprintf>
     860:	mov	w2, #0xb24d                	// #45645
     864:	mov	x1, x22
     868:	mov	x0, x26
     86c:	movk	w2, #0x23, lsl #16
     870:	bl	b970 <regcomp>
     874:	cbz	w0, b60 <grub_mod_fini+0x860>
     878:	mov	x0, x22
     87c:	bl	0 <grub_free>
     880:	mov	w20, #0x0                   	// #0
     884:	cbz	x19, 890 <grub_mod_fini+0x590>
     888:	ldr	x0, [x19, w20, uxtw #3]
     88c:	cbnz	x0, ce0 <grub_mod_fini+0x9e0>
     890:	mov	x0, x19
     894:	bl	0 <grub_free>
     898:	add	x0, sp, #0xb0
     89c:	bl	bb08 <regfree>
     8a0:	adrp	x0, 0 <grub_mod_init-0x260>
     8a4:	ldr	x0, [x0]
     8a8:	ldr	w0, [x0]
     8ac:	ldp	x19, x20, [sp, #16]
     8b0:	ldp	x21, x22, [sp, #32]
     8b4:	ldp	x23, x24, [sp, #48]
     8b8:	ldp	x25, x26, [sp, #64]
     8bc:	ldp	x27, x28, [sp, #80]
     8c0:	ldp	x29, x30, [sp], #240
     8c4:	ret
     8c8:	mov	w0, #0x1                   	// #1
     8cc:	b	70c <grub_mod_fini+0x40c>
     8d0:	mov	x0, x24
     8d4:	bl	0 <grub_strlen>
     8d8:	mov	x25, x0
     8dc:	ldr	x0, [sp, #128]
     8e0:	add	x0, x0, x25
     8e4:	add	x0, x0, #0x1
     8e8:	bl	0 <grub_malloc>
     8ec:	mov	x22, x0
     8f0:	cbz	x0, 880 <grub_mod_fini+0x580>
     8f4:	mov	x2, x25
     8f8:	mov	x1, x24
     8fc:	bl	0 <grub_memmove>
     900:	add	x0, x22, x25
     904:	mov	x2, x21
     908:	mov	x1, x20
     90c:	bl	340 <grub_mod_fini+0x40>
     910:	ldr	w0, [sp, #108]
     914:	cbnz	w0, 92c <grub_mod_fini+0x62c>
     918:	mov	x0, x24
     91c:	bl	0 <grub_free>
     920:	str	x22, [x19, w23, sxtw #3]
     924:	add	w23, w23, #0x1
     928:	b	a3c <grub_mod_fini+0x73c>
     92c:	mov	x0, x22
     930:	mov	w1, #0x2f                  	// #47
     934:	bl	0 <grub_strrchr>
     938:	mov	x25, x0
     93c:	cbz	x0, 918 <grub_mod_fini+0x618>
     940:	mov	x27, x0
     944:	mov	x0, x22
     948:	strb	wzr, [x27], #1
     94c:	str	wzr, [sp, #160]
     950:	str	x27, [sp, #152]
     954:	bl	0 <grub_file_get_device_name>
     958:	bl	0 <grub_device_open>
     95c:	str	x0, [sp, #112]
     960:	cbz	x0, 9e4 <grub_mod_fini+0x6e4>
     964:	bl	0 <grub_fs_probe>
     968:	mov	x2, x0
     96c:	cbz	x0, 9e4 <grub_mod_fini+0x6e4>
     970:	ldrb	w0, [x22]
     974:	cmp	w0, #0x28
     978:	b.ne	a74 <grub_mod_fini+0x774>  // b.any
     97c:	mov	x0, x22
     980:	mov	w1, #0x29                  	// #41
     984:	str	x2, [sp, #136]
     988:	bl	0 <grub_strchr>
     98c:	cbz	x0, 9e4 <grub_mod_fini+0x6e4>
     990:	ldr	x2, [sp, #136]
     994:	add	x1, x0, #0x1
     998:	ldrb	w0, [x1]
     99c:	ldr	x4, [x2, #24]
     9a0:	cbnz	w0, 9ac <grub_mod_fini+0x6ac>
     9a4:	adrp	x0, 0 <grub_mod_init-0x260>
     9a8:	ldr	x1, [x0]
     9ac:	adrp	x0, 0 <grub_mod_init-0x260>
     9b0:	add	x3, sp, #0x98
     9b4:	ldr	x2, [x0]
     9b8:	ldr	x0, [sp, #112]
     9bc:	blr	x4
     9c0:	adrp	x0, 0 <grub_mod_init-0x260>
     9c4:	add	x0, x0, #0x0
     9c8:	ldr	x0, [x0]
     9cc:	ldr	w0, [x0]
     9d0:	cbnz	w0, 9e4 <grub_mod_fini+0x6e4>
     9d4:	ldrb	w0, [x25, #1]
     9d8:	cbnz	w0, 9e4 <grub_mod_fini+0x6e4>
     9dc:	mov	w0, #0x1                   	// #1
     9e0:	str	w0, [sp, #160]
     9e4:	adrp	x0, 0 <grub_mod_init-0x260>
     9e8:	add	x0, x0, #0x0
     9ec:	ldr	x0, [x0]
     9f0:	str	wzr, [x0]
     9f4:	ldr	w0, [sp, #160]
     9f8:	cbnz	w0, a7c <grub_mod_fini+0x77c>
     9fc:	adrp	x0, 0 <grub_mod_init-0x260>
     a00:	mov	x5, x22
     a04:	mov	x4, x27
     a08:	mov	w1, #0x226                 	// #550
     a0c:	ldr	x3, [x0]
     a10:	adrp	x0, 0 <grub_mod_init-0x260>
     a14:	add	x0, x0, #0x0
     a18:	ldr	x2, [x0]
     a1c:	adrp	x0, 0 <grub_mod_init-0x260>
     a20:	add	x0, x0, #0x0
     a24:	ldr	x0, [x0]
     a28:	bl	0 <grub_real_dprintf>
     a2c:	mov	x0, x24
     a30:	bl	0 <grub_free>
     a34:	mov	x0, x22
     a38:	bl	0 <grub_free>
     a3c:	ldr	w0, [sp, #104]
     a40:	add	w0, w0, #0x1
     a44:	str	w0, [sp, #104]
     a48:	ldr	w0, [sp, #104]
     a4c:	ldr	x24, [x19, w0, uxtw #3]
     a50:	cbnz	x24, 8d0 <grub_mod_fini+0x5d0>
     a54:	cbnz	w23, a9c <grub_mod_fini+0x79c>
     a58:	mov	x0, x19
     a5c:	mov	x19, #0x0                   	// #0
     a60:	bl	0 <grub_free>
     a64:	ldr	x0, [sp, #120]
     a68:	str	x19, [x0]
     a6c:	mov	w0, #0x0                   	// #0
     a70:	b	8ac <grub_mod_fini+0x5ac>
     a74:	mov	x1, x22
     a78:	b	998 <grub_mod_fini+0x698>
     a7c:	mov	w0, #0x2f                  	// #47
     a80:	strb	w0, [x25]
     a84:	b	918 <grub_mod_fini+0x618>
     a88:	sub	x0, x21, x20
     a8c:	mov	w23, #0x0                   	// #0
     a90:	str	wzr, [sp, #104]
     a94:	str	x0, [sp, #128]
     a98:	b	a48 <grub_mod_fini+0x748>
     a9c:	str	xzr, [x19, w23, sxtw #3]
     aa0:	b	774 <grub_mod_fini+0x474>
     aa4:	mov	x6, x4
     aa8:	ldrb	w3, [x6], #1
     aac:	cmp	w3, #0x2e
     ab0:	b.hi	b20 <grub_mod_fini+0x820>  // b.pmore
     ab4:	cmp	w3, #0x27
     ab8:	b.ls	b30 <grub_mod_fini+0x830>  // b.plast
     abc:	sub	w0, w3, #0x28
     ac0:	cmp	w0, #0x6
     ac4:	b.hi	b30 <grub_mod_fini+0x830>  // b.pmore
     ac8:	ldr	x4, [x11]
     acc:	ldrb	w0, [x4, w0, uxtw]
     ad0:	adr	x4, adc <grub_mod_fini+0x7dc>
     ad4:	add	x0, x4, w0, sxtb #2
     ad8:	br	x0
     adc:	mov	x13, #0x2                   	// #2
     ae0:	lsl	x0, x10, x0
     ae4:	movk	x13, #0x5000, lsl #16
     ae8:	movk	x13, #0x7000, lsl #48
     aec:	tst	x0, x13
     af0:	b.ne	b38 <grub_mod_fini+0x838>  // b.any
     af4:	tbnz	w0, #0, b58 <grub_mod_fini+0x858>
     af8:	tbz	w0, #29, b30 <grub_mod_fini+0x830>
     afc:	strb	w8, [x22, x5]
     b00:	ldrb	w0, [x4, #1]
     b04:	cbz	w0, b14 <grub_mod_fini+0x814>
     b08:	add	x6, x4, #0x2
     b0c:	add	w2, w1, #0x2
     b10:	strb	w0, [x22, x7]
     b14:	mov	w1, w2
     b18:	mov	x4, x6
     b1c:	b	814 <grub_mod_fini+0x514>
     b20:	sub	w0, w3, #0x3f
     b24:	and	w0, w0, #0xff
     b28:	cmp	w0, #0x3e
     b2c:	b.ls	adc <grub_mod_fini+0x7dc>  // b.plast
     b30:	strb	w3, [x22, x5]
     b34:	b	b14 <grub_mod_fini+0x814>
     b38:	strb	w8, [x22, x5]
     b3c:	add	w2, w1, #0x2
     b40:	strb	w3, [x22, x7]
     b44:	b	b14 <grub_mod_fini+0x814>
     b48:	strb	w9, [x22, x5]
     b4c:	add	w2, w1, #0x2
     b50:	strb	w12, [x22, x7]
     b54:	b	b14 <grub_mod_fini+0x814>
     b58:	strb	w9, [x22, x5]
     b5c:	b	b14 <grub_mod_fini+0x814>
     b60:	mov	x0, x22
     b64:	bl	0 <grub_free>
     b68:	cbnz	x19, cd4 <grub_mod_fini+0x9d4>
     b6c:	cmp	x20, x23
     b70:	b.ne	be8 <grub_mod_fini+0x8e8>  // b.any
     b74:	ldrb	w0, [x20]
     b78:	add	x1, sp, #0x98
     b7c:	str	x26, [sp, #152]
     b80:	cmp	w0, #0x28
     b84:	str	xzr, [sp, #168]
     b88:	cset	w0, ne  // ne = any
     b8c:	stp	w0, wzr, [sp, #160]
     b90:	adrp	x0, 0 <grub_mod_init-0x260>
     b94:	ldr	x0, [x0]
     b98:	bl	0 <grub_device_iterate>
     b9c:	cbnz	w0, be0 <grub_mod_fini+0x8e0>
     ba0:	ldr	x19, [sp, #168]
     ba4:	mov	x0, x26
     ba8:	bl	bb08 <regfree>
     bac:	cbz	x19, a64 <grub_mod_fini+0x764>
     bb0:	mov	w0, #0x1                   	// #1
     bb4:	str	w0, [sp, #108]
     bb8:	b	794 <grub_mod_fini+0x494>
     bbc:	mov	x0, x1
     bc0:	bl	0 <grub_free>
     bc4:	ldr	x0, [sp, #168]
     bc8:	cbz	x0, bd8 <grub_mod_fini+0x8d8>
     bcc:	ldr	x1, [x0, x20]
     bd0:	add	x20, x20, #0x8
     bd4:	cbnz	x1, bbc <grub_mod_fini+0x8bc>
     bd8:	bl	0 <grub_free>
     bdc:	b	ba4 <grub_mod_fini+0x8a4>
     be0:	mov	x20, #0x0                   	// #0
     be4:	b	bc4 <grub_mod_fini+0x8c4>
     be8:	adrp	x0, 0 <grub_mod_init-0x260>
     bec:	mov	x3, x26
     bf0:	mov	x2, x23
     bf4:	mov	x1, x20
     bf8:	ldr	x0, [x0]
     bfc:	bl	4d0 <grub_mod_fini+0x1d0>
     c00:	mov	x19, x0
     c04:	b	ba4 <grub_mod_fini+0x8a4>
     c08:	mov	x3, x26
     c0c:	mov	x2, x23
     c10:	mov	x1, x20
     c14:	bl	4d0 <grub_mod_fini+0x1d0>
     c18:	mov	x22, x0
     c1c:	ldr	x0, [x19, x27]
     c20:	bl	0 <grub_free>
     c24:	cbz	x22, c98 <grub_mod_fini+0x998>
     c28:	cbz	x24, ccc <grub_mod_fini+0x9cc>
     c2c:	sub	x2, x24, #0x8
     c30:	mov	x0, #0x0                   	// #0
     c34:	mov	w27, w0
     c38:	add	x0, x0, #0x1
     c3c:	ldr	x1, [x2, x0, lsl #3]
     c40:	cbnz	x1, c34 <grub_mod_fini+0x934>
     c44:	sub	x3, x22, #0x8
     c48:	mov	x0, #0x0                   	// #0
     c4c:	mov	w1, w0
     c50:	add	x0, x0, #0x1
     c54:	ldr	x2, [x3, x0, lsl #3]
     c58:	cbnz	x2, c4c <grub_mod_fini+0x94c>
     c5c:	add	w1, w27, w1
     c60:	mov	x0, x24
     c64:	add	w1, w1, #0x1
     c68:	sbfiz	x1, x1, #3, #32
     c6c:	bl	0 <grub_realloc>
     c70:	mov	x28, x0
     c74:	cbz	x0, cb8 <grub_mod_fini+0x9b8>
     c78:	add	x1, x0, w27, sxtw #3
     c7c:	mov	x2, x22
     c80:	ldr	x0, [x2], #8
     c84:	cbnz	x0, cc4 <grub_mod_fini+0x9c4>
     c88:	str	xzr, [x1]
     c8c:	mov	x0, x22
     c90:	mov	x24, x28
     c94:	bl	0 <grub_free>
     c98:	add	w25, w25, #0x1
     c9c:	ubfiz	x27, x25, #3, #32
     ca0:	ldr	x0, [x19, x27]
     ca4:	cbnz	x0, c08 <grub_mod_fini+0x908>
     ca8:	mov	x0, x19
     cac:	mov	x19, x24
     cb0:	bl	0 <grub_free>
     cb4:	b	ba4 <grub_mod_fini+0x8a4>
     cb8:	mov	x0, x24
     cbc:	bl	0 <grub_free>
     cc0:	b	878 <grub_mod_fini+0x578>
     cc4:	str	x0, [x1], #8
     cc8:	b	c80 <grub_mod_fini+0x980>
     ccc:	mov	x24, x22
     cd0:	b	c98 <grub_mod_fini+0x998>
     cd4:	mov	x24, #0x0                   	// #0
     cd8:	mov	w25, #0x0                   	// #0
     cdc:	b	c9c <grub_mod_fini+0x99c>
     ce0:	add	w20, w20, #0x1
     ce4:	bl	0 <grub_free>
     ce8:	b	884 <grub_mod_fini+0x584>
     cec:	nop
	...
     d50:	stp	x29, x30, [sp, #-64]!
     d54:	mov	x1, x0
     d58:	mov	x29, sp
     d5c:	stp	x21, x22, [sp, #32]
     d60:	mov	x21, x0
     d64:	adrp	x0, 0 <grub_mod_init-0x260>
     d68:	stp	x19, x20, [sp, #16]
     d6c:	mov	x19, x2
     d70:	ldr	x0, [x0]
     d74:	str	x23, [sp, #48]
     d78:	bl	0 <grub_strcmp>
     d7c:	cbnz	w0, d9c <grub_mod_fini+0xa9c>
     d80:	mov	w20, #0x0                   	// #0
     d84:	mov	w0, w20
     d88:	ldp	x19, x20, [sp, #16]
     d8c:	ldp	x21, x22, [sp, #32]
     d90:	ldr	x23, [sp, #48]
     d94:	ldp	x29, x30, [sp], #64
     d98:	ret
     d9c:	adrp	x0, 0 <grub_mod_init-0x260>
     da0:	mov	x1, x21
     da4:	ldr	x0, [x0]
     da8:	bl	0 <grub_strcmp>
     dac:	cbz	w0, d80 <grub_mod_fini+0xa80>
     db0:	adrp	x0, 0 <grub_mod_init-0x260>
     db4:	adrp	x23, 0 <grub_mod_init-0x260>
     db8:	adrp	x22, 0 <grub_mod_init-0x260>
     dbc:	mov	x4, x21
     dc0:	ldr	x3, [x0]
     dc4:	mov	w1, #0x134                 	// #308
     dc8:	ldr	x2, [x23]
     dcc:	ldr	x0, [x22]
     dd0:	ldr	x5, [x19, #24]
     dd4:	bl	0 <grub_real_dprintf>
     dd8:	ldr	x0, [x19]
     ddc:	mov	x1, x21
     de0:	mov	w4, #0x0                   	// #0
     de4:	mov	x3, #0x0                   	// #0
     de8:	mov	x2, #0x0                   	// #0
     dec:	bl	bb4c <regexec>
     df0:	mov	w20, w0
     df4:	cbnz	w0, d80 <grub_mod_fini+0xa80>
     df8:	adrp	x0, 0 <grub_mod_init-0x260>
     dfc:	mov	w1, #0x138                 	// #312
     e00:	ldr	x2, [x23]
     e04:	ldr	x3, [x0]
     e08:	ldr	x0, [x22]
     e0c:	bl	0 <grub_real_dprintf>
     e10:	adrp	x0, 0 <grub_mod_init-0x260>
     e14:	mov	x2, x21
     e18:	ldr	x1, [x19, #24]
     e1c:	ldr	x0, [x0]
     e20:	bl	0 <grub_xasprintf>
     e24:	mov	x21, x0
     e28:	cbz	x0, e4c <grub_mod_fini+0xb4c>
     e2c:	ldr	w1, [x19, #16]
     e30:	ldr	x0, [x19, #8]
     e34:	add	w1, w1, #0x2
     e38:	lsl	x1, x1, #3
     e3c:	bl	0 <grub_realloc>
     e40:	cbnz	x0, e54 <grub_mod_fini+0xb54>
     e44:	mov	x0, x21
     e48:	bl	0 <grub_free>
     e4c:	mov	w20, #0x1                   	// #1
     e50:	b	d84 <grub_mod_fini+0xa84>
     e54:	ldr	w2, [x19, #16]
     e58:	str	x0, [x19, #8]
     e5c:	add	w1, w2, #0x1
     e60:	str	w1, [x19, #16]
     e64:	str	x21, [x0, w2, uxtw #3]
     e68:	str	xzr, [x0, w1, uxtw #3]
     e6c:	b	d84 <grub_mod_fini+0xa84>
	...
     ea8:	stp	x29, x30, [sp, #-32]!
     eac:	mov	x3, x1
     eb0:	mov	x29, sp
     eb4:	ldr	x1, [x2]
     eb8:	str	x19, [sp, #16]
     ebc:	mov	x19, x2
     ec0:	ldrb	w2, [x1]
     ec4:	cbnz	w2, edc <grub_mod_fini+0xbdc>
     ec8:	mov	w0, #0x1                   	// #1
     ecc:	str	w0, [x19, #8]
     ed0:	ldr	x19, [sp, #16]
     ed4:	ldp	x29, x30, [sp], #32
     ed8:	ret
     edc:	ldrb	w2, [x3]
     ee0:	tbnz	w2, #2, ef0 <grub_mod_fini+0xbf0>
     ee4:	bl	0 <grub_strcmp>
     ee8:	cbnz	w0, f5c <grub_mod_fini+0xc5c>
     eec:	b	ec8 <grub_mod_fini+0xbc8>
     ef0:	mov	x5, x0
     ef4:	mov	x2, #0x0                   	// #0
     ef8:	ldrb	w3, [x5, x2]
     efc:	ldrb	w4, [x1, x2]
     f00:	sub	w6, w3, #0x41
     f04:	sub	w0, w4, #0x41
     f08:	cbz	w3, f3c <grub_mod_fini+0xc3c>
     f0c:	mov	w7, w3
     f10:	cbz	w4, f3c <grub_mod_fini+0xc3c>
     f14:	cmp	w6, #0x19
     f18:	b.hi	f20 <grub_mod_fini+0xc20>  // b.pmore
     f1c:	add	w7, w3, #0x20
     f20:	mov	w8, w4
     f24:	cmp	w0, #0x19
     f28:	b.hi	f30 <grub_mod_fini+0xc30>  // b.pmore
     f2c:	add	w8, w4, #0x20
     f30:	add	x2, x2, #0x1
     f34:	cmp	w8, w7
     f38:	b.eq	ef8 <grub_mod_fini+0xbf8>  // b.none
     f3c:	cmp	w6, #0x19
     f40:	b.hi	f48 <grub_mod_fini+0xc48>  // b.pmore
     f44:	add	w3, w3, #0x20
     f48:	cmp	w0, #0x19
     f4c:	b.hi	f54 <grub_mod_fini+0xc54>  // b.pmore
     f50:	add	w4, w4, #0x20
     f54:	cmp	w4, w3
     f58:	b.eq	ec8 <grub_mod_fini+0xbc8>  // b.none
     f5c:	mov	w0, #0x0                   	// #0
     f60:	b	ed0 <grub_mod_fini+0xbd0>
     f64:	nop
     f68:	sub	w1, w0, #0x30
     f6c:	cmp	w1, #0x9
     f70:	b.ls	f88 <grub_mod_fini+0xc88>  // b.plast
     f74:	and	w0, w0, #0xffffffdf
     f78:	sub	w0, w0, #0x41
     f7c:	cmp	w0, #0x5
     f80:	cset	w0, ls  // ls = plast
     f84:	ret
     f88:	mov	w0, #0x1                   	// #1
     f8c:	b	f84 <grub_mod_fini+0xc84>
     f90:	cbz	x1, fc0 <grub_mod_fini+0xcc0>
     f94:	cbz	x0, f9c <grub_mod_fini+0xc9c>
     f98:	str	wzr, [x0]
     f9c:	mov	x5, x1
     fa0:	add	x2, x1, x2
     fa4:	mov	w8, #0x3                   	// #3
     fa8:	mov	w9, #0x2                   	// #2
     fac:	mov	w10, #0x1                   	// #1
     fb0:	cmp	x5, x2
     fb4:	b.cc	fd4 <grub_mod_fini+0xcd4>  // b.lo, b.ul, b.last
     fb8:	mov	x0, #0xfffffffffffffffe    	// #-2
     fbc:	b	10b8 <grub_mod_fini+0xdb8>
     fc0:	adrp	x1, 0 <grub_mod_init-0x260>
     fc4:	mov	x0, #0x0                   	// #0
     fc8:	mov	x2, #0x1                   	// #1
     fcc:	ldr	x1, [x1]
     fd0:	b	f9c <grub_mod_fini+0xc9c>
     fd4:	ldr	w6, [x3, #4]
     fd8:	ldrb	w4, [x5]
     fdc:	cbz	w6, 1034 <grub_mod_fini+0xd34>
     fe0:	and	w7, w4, #0xc0
     fe4:	cmp	w7, #0x80
     fe8:	b.eq	ff8 <grub_mod_fini+0xcf8>  // b.none
     fec:	str	wzr, [x3, #4]
     ff0:	mov	x0, #0xffffffffffffffff    	// #-1
     ff4:	b	10b8 <grub_mod_fini+0xdb8>
     ff8:	ldr	w7, [x3]
     ffc:	and	w4, w4, #0x3f
    1000:	sub	w6, w6, #0x1
    1004:	cmp	w6, #0x1
    1008:	orr	w4, w4, w7, lsl #6
    100c:	stp	w4, w6, [x3]
    1010:	b.ne	1024 <grub_mod_fini+0xd24>  // b.any
    1014:	cmp	w4, #0x1f
    1018:	b.hi	105c <grub_mod_fini+0xd5c>  // b.pmore
    101c:	str	xzr, [x3]
    1020:	b	ff0 <grub_mod_fini+0xcf0>
    1024:	cmp	w6, #0x2
    1028:	b.ne	105c <grub_mod_fini+0xd5c>  // b.any
    102c:	cmp	w4, #0xf
    1030:	b	1018 <grub_mod_fini+0xd18>
    1034:	tbnz	w4, #7, 1040 <grub_mod_fini+0xd40>
    1038:	str	w4, [x3]
    103c:	b	105c <grub_mod_fini+0xd5c>
    1040:	and	w6, w4, #0xe0
    1044:	cmp	w6, #0xc0
    1048:	b.ne	106c <grub_mod_fini+0xd6c>  // b.any
    104c:	and	w6, w4, #0x1f
    1050:	stp	w6, w10, [x3]
    1054:	tst	w4, #0x1e
    1058:	b.eq	101c <grub_mod_fini+0xd1c>  // b.none
    105c:	ldr	w4, [x3, #4]
    1060:	cbz	w4, 109c <grub_mod_fini+0xd9c>
    1064:	add	x5, x5, #0x1
    1068:	b	fb0 <grub_mod_fini+0xcb0>
    106c:	and	w6, w4, #0xf0
    1070:	cmp	w6, #0xe0
    1074:	b.ne	1084 <grub_mod_fini+0xd84>  // b.any
    1078:	and	w4, w4, #0xf
    107c:	str	w9, [x3, #4]
    1080:	b	1038 <grub_mod_fini+0xd38>
    1084:	and	w6, w4, #0xf8
    1088:	cmp	w6, #0xf0
    108c:	b.ne	ff0 <grub_mod_fini+0xcf0>  // b.any
    1090:	and	w4, w4, #0x7
    1094:	str	w8, [x3, #4]
    1098:	b	1038 <grub_mod_fini+0xd38>
    109c:	cbz	x0, 10a8 <grub_mod_fini+0xda8>
    10a0:	ldr	w2, [x3]
    10a4:	str	w2, [x0]
    10a8:	ldr	w2, [x3]
    10ac:	sub	x0, x5, x1
    10b0:	cmp	w2, #0x0
    10b4:	csinc	x0, xzr, x0, eq  // eq = none
    10b8:	ret
    10bc:	nop
	...
    10c8:	asr	w2, w1, #6
    10cc:	mov	x3, #0x1                   	// #1
    10d0:	lsl	x3, x3, x1
    10d4:	sbfiz	x2, x2, #3, #32
    10d8:	ldr	x1, [x0, x2]
    10dc:	orr	x1, x1, x3
    10e0:	str	x1, [x0, x2]
    10e4:	ret
    10e8:	mov	x1, #0x0                   	// #0
    10ec:	ldr	x2, [x0, x1, lsl #3]
    10f0:	mvn	x2, x2
    10f4:	str	x2, [x0, x1, lsl #3]
    10f8:	add	x1, x1, #0x1
    10fc:	cmp	x1, #0x4
    1100:	b.ne	10ec <grub_mod_fini+0xdec>  // b.any
    1104:	ret
    1108:	mov	x2, #0x0                   	// #0
    110c:	ldr	x3, [x0, x2]
    1110:	ldr	x4, [x1, x2]
    1114:	orr	x3, x3, x4
    1118:	str	x3, [x0, x2]
    111c:	add	x2, x2, #0x8
    1120:	cmp	x2, #0x20
    1124:	b.ne	110c <grub_mod_fini+0xe0c>  // b.any
    1128:	ret
    112c:	mov	x2, #0x0                   	// #0
    1130:	ldr	x3, [x0, x2]
    1134:	ldr	x4, [x1, x2]
    1138:	and	x3, x3, x4
    113c:	str	x3, [x0, x2]
    1140:	add	x2, x2, #0x8
    1144:	cmp	x2, #0x20
    1148:	b.ne	1130 <grub_mod_fini+0xe30>  // b.any
    114c:	ret
    1150:	ldr	w2, [x0, #104]
    1154:	sxtw	x1, w1
    1158:	cmp	w2, #0x1
    115c:	b.ne	116c <grub_mod_fini+0xe6c>  // b.any
    1160:	ldr	x0, [x0, #8]
    1164:	ldrb	w0, [x0, x1]
    1168:	ret
    116c:	ldr	x0, [x0, #16]
    1170:	ldr	w0, [x0, x1, lsl #2]
    1174:	b	1168 <grub_mod_fini+0xe68>
    1178:	ldr	w1, [x0, #64]
    117c:	ldr	w2, [x0, #52]
    1180:	cmp	w2, w1
    1184:	csel	w2, w2, w1, le
    1188:	ldr	w1, [x0, #44]
    118c:	mov	w3, w1
    1190:	sxtw	x4, w1
    1194:	cmp	w3, w2
    1198:	b.lt	11b0 <grub_mod_fini+0xeb0>  // b.tstop
    119c:	subs	w3, w2, w1
    11a0:	csel	w3, w3, wzr, ge  // ge = tcont
    11a4:	add	w1, w1, w3
    11a8:	stp	w1, w1, [x0, #44]
    11ac:	ret
    11b0:	ldr	w5, [x0, #40]
    11b4:	ldr	x6, [x0]
    11b8:	add	w5, w3, w5
    11bc:	add	w3, w3, #0x1
    11c0:	ldrb	w5, [x6, w5, sxtw]
    11c4:	ldr	x6, [x0, #80]
    11c8:	ldrb	w6, [x6, x5]
    11cc:	ldr	x5, [x0, #8]
    11d0:	strb	w6, [x5, x4]
    11d4:	add	x4, x4, #0x1
    11d8:	b	1194 <grub_mod_fini+0xe94>
    11dc:	cmp	x0, #0x0
    11e0:	mov	x3, x0
    11e4:	cset	w2, eq  // eq = none
    11e8:	cmp	x1, #0x0
    11ec:	csinc	w0, w2, wzr, ne  // ne = any
    11f0:	cbnz	w0, 1238 <grub_mod_fini+0xf38>
    11f4:	ldr	w4, [x1, #4]
    11f8:	ldr	w2, [x3, #4]
    11fc:	cmp	w2, w4
    1200:	b.ne	1234 <grub_mod_fini+0xf34>  // b.any
    1204:	sbfiz	x4, x2, #2, #32
    1208:	subs	w2, w2, #0x1
    120c:	b.pl	1218 <grub_mod_fini+0xf18>  // b.nfrst
    1210:	mov	w0, #0x1                   	// #1
    1214:	b	1234 <grub_mod_fini+0xf34>
    1218:	ldr	x5, [x1, #8]
    121c:	sub	x4, x4, #0x4
    1220:	ldr	x6, [x3, #8]
    1224:	ldr	w5, [x5, x4]
    1228:	ldr	w6, [x6, x4]
    122c:	cmp	w6, w5
    1230:	b.eq	1208 <grub_mod_fini+0xf08>  // b.none
    1234:	ret
    1238:	mov	w0, #0x0                   	// #0
    123c:	b	1234 <grub_mod_fini+0xf34>
    1240:	ldr	w2, [x0, #4]
    1244:	cmp	w2, #0x0
    1248:	b.le	1298 <grub_mod_fini+0xf98>
    124c:	sub	w2, w2, #0x1
    1250:	ldr	x4, [x0, #8]
    1254:	mov	w0, #0x0                   	// #0
    1258:	cmp	w0, w2
    125c:	b.cc	1270 <grub_mod_fini+0xf70>  // b.lo, b.ul, b.last
    1260:	ldr	w2, [x4, w0, uxtw #2]
    1264:	cmp	w2, w1
    1268:	csinc	w0, wzr, w0, ne  // ne = any
    126c:	ret
    1270:	add	w3, w0, w2
    1274:	lsr	w5, w3, #1
    1278:	lsr	w3, w3, #1
    127c:	ldr	w3, [x4, x3, lsl #2]
    1280:	cmp	w3, w1
    1284:	b.ge	1290 <grub_mod_fini+0xf90>  // b.tcont
    1288:	add	w0, w5, #0x1
    128c:	b	1258 <grub_mod_fini+0xf58>
    1290:	mov	w2, w5
    1294:	b	1258 <grub_mod_fini+0xf58>
    1298:	mov	w0, #0x0                   	// #0
    129c:	b	126c <grub_mod_fini+0xf6c>
    12a0:	ldr	w3, [x1, #56]
    12a4:	ldr	w4, [x1, #72]
    12a8:	cmp	w4, w3
    12ac:	b.gt	12c0 <grub_mod_fini+0xfc0>
    12b0:	mov	w1, #0x2                   	// #2
    12b4:	strb	w1, [x0, #8]
    12b8:	mov	w0, #0x0                   	// #0
    12bc:	ret
    12c0:	ldr	x5, [x1, #8]
    12c4:	sxtw	x6, w3
    12c8:	ldr	w7, [x1, #104]
    12cc:	ldrb	w4, [x5, w3, sxtw]
    12d0:	cmp	w7, #0x1
    12d4:	strb	w4, [x0]
    12d8:	b.le	1300 <grub_mod_fini+0x1000>
    12dc:	ldr	w7, [x1, #44]
    12e0:	cmp	w3, w7
    12e4:	b.eq	1300 <grub_mod_fini+0x1000>  // b.none
    12e8:	ldr	x7, [x1, #16]
    12ec:	ldr	w7, [x7, x6, lsl #2]
    12f0:	cmn	w7, #0x1
    12f4:	b.ne	1300 <grub_mod_fini+0x1000>  // b.any
    12f8:	mov	w1, #0x1                   	// #1
    12fc:	b	13c0 <grub_mod_fini+0x10c0>
    1300:	cmp	w4, #0x5c
    1304:	b.ne	132c <grub_mod_fini+0x102c>  // b.any
    1308:	tbz	w2, #0, 12f8 <grub_mod_fini+0xff8>
    130c:	ldr	w2, [x1, #64]
    1310:	add	w3, w3, #0x1
    1314:	cmp	w3, w2
    1318:	b.ge	12f8 <grub_mod_fini+0xff8>  // b.tcont
    131c:	str	w3, [x1, #56]
    1320:	ldrb	w1, [x5, w3, sxtw]
    1324:	strb	w1, [x0]
    1328:	b	12f8 <grub_mod_fini+0xff8>
    132c:	cmp	w4, #0x5b
    1330:	b.ne	13a4 <grub_mod_fini+0x10a4>  // b.any
    1334:	ldr	w1, [x1, #64]
    1338:	add	w3, w3, #0x1
    133c:	cmp	w3, w1
    1340:	b.ge	138c <grub_mod_fini+0x108c>  // b.tcont
    1344:	add	x5, x5, x6
    1348:	ldrb	w1, [x5, #1]
    134c:	strb	w1, [x0]
    1350:	cmp	w1, #0x3a
    1354:	b.eq	1380 <grub_mod_fini+0x1080>  // b.none
    1358:	cmp	w1, #0x3d
    135c:	b.eq	1378 <grub_mod_fini+0x1078>  // b.none
    1360:	cmp	w1, #0x2e
    1364:	b.ne	138c <grub_mod_fini+0x108c>  // b.any
    1368:	mov	w1, #0x1a                  	// #26
    136c:	strb	w1, [x0, #8]
    1370:	mov	w0, #0x2                   	// #2
    1374:	b	12bc <grub_mod_fini+0xfbc>
    1378:	mov	w1, #0x1c                  	// #28
    137c:	b	136c <grub_mod_fini+0x106c>
    1380:	tbz	w2, #2, 138c <grub_mod_fini+0x108c>
    1384:	mov	w1, #0x1e                  	// #30
    1388:	b	136c <grub_mod_fini+0x106c>
    138c:	mov	w1, #0x1                   	// #1
    1390:	strb	w1, [x0, #8]
    1394:	mov	w1, #0x5b                  	// #91
    1398:	strb	w1, [x0]
    139c:	mov	w0, #0x1                   	// #1
    13a0:	b	12bc <grub_mod_fini+0xfbc>
    13a4:	cmp	w4, #0x5d
    13a8:	b.eq	13c8 <grub_mod_fini+0x10c8>  // b.none
    13ac:	cmp	w4, #0x5e
    13b0:	b.eq	13d0 <grub_mod_fini+0x10d0>  // b.none
    13b4:	cmp	w4, #0x2d
    13b8:	b.ne	12f8 <grub_mod_fini+0xff8>  // b.any
    13bc:	mov	w1, #0x16                  	// #22
    13c0:	strb	w1, [x0, #8]
    13c4:	b	139c <grub_mod_fini+0x109c>
    13c8:	mov	w1, #0x15                  	// #21
    13cc:	b	13c0 <grub_mod_fini+0x10c0>
    13d0:	mov	w1, #0x19                  	// #25
    13d4:	b	13c0 <grub_mod_fini+0x10c0>
    13d8:	ldrb	w2, [x1, #48]
    13dc:	cmp	w2, #0x11
    13e0:	b.ne	13fc <grub_mod_fini+0x10fc>  // b.any
    13e4:	ldr	w2, [x1, #40]
    13e8:	cmp	w2, w0
    13ec:	b.ne	13fc <grub_mod_fini+0x10fc>  // b.any
    13f0:	ldrb	w0, [x1, #50]
    13f4:	orr	w0, w0, #0x8
    13f8:	strb	w0, [x1, #50]
    13fc:	mov	w0, #0x0                   	// #0
    1400:	ret
    1404:	stp	x29, x30, [sp, #-128]!
    1408:	and	w10, w1, #0x1
    140c:	and	w9, w1, #0x2
    1410:	mov	x29, sp
    1414:	ldr	x6, [x0, #112]
    1418:	stp	x25, x26, [sp, #64]
    141c:	mov	x26, #0x1                   	// #1
    1420:	stp	x27, x28, [sp, #80]
    1424:	mov	w28, #0x14                  	// #20
    1428:	lsl	x26, x26, x2
    142c:	ldr	x25, [x6, #48]
    1430:	mvn	w5, w26
    1434:	smull	x28, w4, w28
    1438:	mov	w27, w3
    143c:	and	w5, w5, #0xffff
    1440:	stp	x19, x20, [sp, #16]
    1444:	add	x25, x25, w3, sxtw #4
    1448:	mov	w19, w1
    144c:	stp	x21, x22, [sp, #32]
    1450:	mov	x22, x0
    1454:	mov	w21, w2
    1458:	stp	x23, x24, [sp, #48]
    145c:	mov	w23, w4
    1460:	mov	x24, #0x0                   	// #0
    1464:	ldr	w0, [x25, #4]
    1468:	cmp	w0, w24
    146c:	b.gt	1478 <grub_mod_fini+0x1178>
    1470:	asr	w0, w19, #1
    1474:	b	14f4 <grub_mod_fini+0x11f4>
    1478:	ldr	x0, [x25, #8]
    147c:	ldr	w8, [x0, x24, lsl #2]
    1480:	ldr	x0, [x6]
    1484:	sbfiz	x7, x8, #4, #32
    1488:	add	x1, x0, w8, sxtw #4
    148c:	ldrb	w1, [x1, #8]
    1490:	cmp	w1, #0x8
    1494:	b.eq	1584 <grub_mod_fini+0x1284>  // b.none
    1498:	cmp	w1, #0x9
    149c:	b.eq	1598 <grub_mod_fini+0x1298>  // b.none
    14a0:	cmp	w1, #0x4
    14a4:	b.ne	157c <grub_mod_fini+0x127c>  // b.any
    14a8:	cmn	w23, #0x1
    14ac:	b.eq	157c <grub_mod_fini+0x127c>  // b.none
    14b0:	ldr	x20, [x22, #160]
    14b4:	add	x20, x20, x28
    14b8:	ldr	w0, [x20]
    14bc:	cmp	w0, w8
    14c0:	b.ne	1570 <grub_mod_fini+0x1270>  // b.any
    14c4:	cmp	w21, #0x3f
    14c8:	b.gt	14d8 <grub_mod_fini+0x11d8>
    14cc:	ldrh	w0, [x20, #18]
    14d0:	tst	x0, x26
    14d4:	b.eq	1570 <grub_mod_fini+0x1270>  // b.none
    14d8:	ldr	x0, [x6, #40]
    14dc:	add	x0, x0, x7
    14e0:	ldr	x0, [x0, #8]
    14e4:	ldr	w3, [x0]
    14e8:	cmp	w27, w3
    14ec:	b.ne	1510 <grub_mod_fini+0x1210>  // b.any
    14f0:	sbfx	x0, x19, #0, #1
    14f4:	ldp	x19, x20, [sp, #16]
    14f8:	ldp	x21, x22, [sp, #32]
    14fc:	ldp	x23, x24, [sp, #48]
    1500:	ldp	x25, x26, [sp, #64]
    1504:	ldp	x27, x28, [sp, #80]
    1508:	ldp	x29, x30, [sp], #128
    150c:	ret
    1510:	mov	w4, w23
    1514:	mov	w2, w21
    1518:	mov	w1, w19
    151c:	mov	x0, x22
    1520:	stp	x7, x6, [sp, #96]
    1524:	stp	w5, w8, [sp, #112]
    1528:	stp	w10, w9, [sp, #120]
    152c:	bl	1404 <grub_mod_fini+0x1104>
    1530:	ldp	w5, w8, [sp, #112]
    1534:	cmn	w0, #0x1
    1538:	ldp	w10, w9, [sp, #120]
    153c:	ldp	x7, x6, [sp, #96]
    1540:	b.ne	154c <grub_mod_fini+0x124c>  // b.any
    1544:	mov	w0, #0xffffffff            	// #-1
    1548:	b	14f4 <grub_mod_fini+0x11f4>
    154c:	cbnz	w0, 155c <grub_mod_fini+0x125c>
    1550:	cbz	w9, 155c <grub_mod_fini+0x125c>
    1554:	mov	w0, #0x0                   	// #0
    1558:	b	14f4 <grub_mod_fini+0x11f4>
    155c:	cmp	w21, #0x3f
    1560:	b.gt	1570 <grub_mod_fini+0x1270>
    1564:	ldrh	w0, [x20, #18]
    1568:	and	w0, w5, w0
    156c:	strh	w0, [x20, #18]
    1570:	ldrb	w0, [x20, #16]
    1574:	add	x20, x20, #0x14
    1578:	cbnz	w0, 14b8 <grub_mod_fini+0x11b8>
    157c:	add	x24, x24, #0x1
    1580:	b	1464 <grub_mod_fini+0x1164>
    1584:	cbz	w10, 157c <grub_mod_fini+0x127c>
    1588:	ldr	w0, [x0, x7]
    158c:	cmp	w0, w21
    1590:	b.ne	157c <grub_mod_fini+0x127c>  // b.any
    1594:	b	1544 <grub_mod_fini+0x1244>
    1598:	cbz	w9, 157c <grub_mod_fini+0x127c>
    159c:	ldr	w0, [x0, x7]
    15a0:	cmp	w0, w21
    15a4:	b.ne	157c <grub_mod_fini+0x127c>  // b.any
    15a8:	b	1554 <grub_mod_fini+0x1254>
    15ac:	mov	w6, w4
    15b0:	mov	w4, w5
    15b4:	ldr	x5, [x0, #160]
    15b8:	mov	w7, #0x14                  	// #20
    15bc:	smaddl	x1, w1, w7, x5
    15c0:	ldr	w7, [x1, #8]
    15c4:	cmp	w7, w6
    15c8:	b.gt	15f4 <grub_mod_fini+0x12f4>
    15cc:	ldr	w5, [x1, #12]
    15d0:	cmp	w5, w6
    15d4:	b.lt	1600 <grub_mod_fini+0x1300>  // b.tstop
    15d8:	cmp	w7, w6
    15dc:	cset	w7, eq  // eq = none
    15e0:	cmp	w5, w6
    15e4:	cset	w1, eq  // eq = none
    15e8:	orr	w1, w7, w1, lsl #1
    15ec:	cbz	w1, 15f8 <grub_mod_fini+0x12f8>
    15f0:	b	1404 <grub_mod_fini+0x1104>
    15f4:	mov	w1, #0xffffffff            	// #-1
    15f8:	mov	w0, w1
    15fc:	ret
    1600:	mov	w1, #0x1                   	// #1
    1604:	b	15f8 <grub_mod_fini+0x12f8>
    1608:	mov	x2, x0
    160c:	mov	w7, #0x14                  	// #20
    1610:	mov	w0, #0x0                   	// #0
    1614:	ldr	w6, [x2, #148]
    1618:	mov	w4, w6
    161c:	cmp	w4, w0
    1620:	b.gt	1648 <grub_mod_fini+0x1348>
    1624:	cmp	w6, w0
    1628:	b.le	1674 <grub_mod_fini+0x1374>
    162c:	ldr	x3, [x2, #160]
    1630:	mov	w2, #0x14                  	// #20
    1634:	smaddl	x2, w0, w2, x3
    1638:	ldr	w2, [x2, #4]
    163c:	cmp	w2, w1
    1640:	csinv	w0, w0, wzr, eq  // eq = none
    1644:	ret
    1648:	add	w3, w4, w0
    164c:	ldr	x5, [x2, #160]
    1650:	asr	w3, w3, #1
    1654:	smaddl	x5, w3, w7, x5
    1658:	ldr	w5, [x5, #4]
    165c:	cmp	w5, w1
    1660:	b.ge	166c <grub_mod_fini+0x136c>  // b.tcont
    1664:	add	w0, w3, #0x1
    1668:	b	161c <grub_mod_fini+0x131c>
    166c:	mov	w4, w3
    1670:	b	161c <grub_mod_fini+0x131c>
    1674:	mov	w0, #0xffffffff            	// #-1
    1678:	b	1644 <grub_mod_fini+0x1344>
    167c:	stp	x29, x30, [sp, #-80]!
    1680:	mov	x11, x0
    1684:	mov	x12, x1
    1688:	mov	w15, w5
    168c:	mov	w14, w3
    1690:	mov	x29, sp
    1694:	mov	w1, w3
    1698:	stp	x19, x20, [sp, #16]
    169c:	mov	w20, w2
    16a0:	stp	x21, x22, [sp, #32]
    16a4:	mov	w21, w4
    16a8:	stp	x23, x24, [sp, #48]
    16ac:	stp	x25, x26, [sp, #64]
    16b0:	mov	w26, #0x14                  	// #20
    16b4:	ldr	x25, [x0, #112]
    16b8:	bl	1608 <grub_mod_fini+0x1308>
    16bc:	mov	w18, w0
    16c0:	mov	w1, w15
    16c4:	mov	x0, x11
    16c8:	bl	1608 <grub_mod_fini+0x1308>
    16cc:	mov	w19, w0
    16d0:	mov	x13, #0x0                   	// #0
    16d4:	ldr	w0, [x12, #4]
    16d8:	cmp	w0, w13
    16dc:	b.gt	16fc <grub_mod_fini+0x13fc>
    16e0:	mov	w0, #0x0                   	// #0
    16e4:	ldp	x19, x20, [sp, #16]
    16e8:	ldp	x21, x22, [sp, #32]
    16ec:	ldp	x23, x24, [sp, #48]
    16f0:	ldp	x25, x26, [sp, #64]
    16f4:	ldp	x29, x30, [sp], #80
    16f8:	ret
    16fc:	ldr	x0, [x12, #8]
    1700:	lsl	x23, x13, #2
    1704:	ldr	x2, [x11, #160]
    1708:	mov	w5, w18
    170c:	ldr	w1, [x0, x23]
    1710:	mov	w4, w14
    1714:	mov	w3, w20
    1718:	smull	x0, w1, w26
    171c:	ldrsw	x0, [x2, x0]
    1720:	ldr	x2, [x25]
    1724:	lsl	x0, x0, #4
    1728:	ldr	w24, [x2, x0]
    172c:	mov	x0, x11
    1730:	mov	w2, w24
    1734:	bl	15ac <grub_mod_fini+0x12ac>
    1738:	mov	w22, w0
    173c:	mov	w5, w19
    1740:	ldr	x0, [x12, #8]
    1744:	mov	w4, w15
    1748:	mov	w3, w21
    174c:	mov	w2, w24
    1750:	ldr	w1, [x0, x23]
    1754:	mov	x0, x11
    1758:	bl	15ac <grub_mod_fini+0x12ac>
    175c:	add	x13, x13, #0x1
    1760:	cmp	w22, w0
    1764:	b.eq	16d4 <grub_mod_fini+0x13d4>  // b.none
    1768:	mov	w0, #0x1                   	// #1
    176c:	b	16e4 <grub_mod_fini+0x13e4>
    1770:	mov	x11, x0
    1774:	stp	x29, x30, [sp, #-112]!
    1778:	mov	w15, #0xffffffff            	// #-1
    177c:	mov	x29, sp
    1780:	ldr	w0, [x0, #64]
    1784:	add	x14, sp, #0x30
    1788:	ldr	w13, [x11, #52]
    178c:	ldr	w12, [x11, #44]
    1790:	cmp	w13, w0
    1794:	str	x19, [sp, #16]
    1798:	csel	w13, w13, w0, le
    179c:	cmp	w12, w13
    17a0:	b.ge	18c0 <grub_mod_fini+0x15c0>  // b.tcont
    17a4:	ldr	x0, [x11, #80]
    17a8:	sub	w2, w13, w12
    17ac:	ldp	w19, w18, [x11, #32]
    17b0:	cbz	x0, 1810 <grub_mod_fini+0x1510>
    17b4:	sxtw	x4, w12
    17b8:	mov	x0, #0x0                   	// #0
    17bc:	b	17f0 <grub_mod_fini+0x14f0>
    17c0:	ldr	w1, [x11, #40]
    17c4:	add	w1, w12, w1
    17c8:	add	w1, w1, w3
    17cc:	ldr	x3, [x11]
    17d0:	ldrb	w1, [x3, w1, sxtw]
    17d4:	ldr	x3, [x11, #80]
    17d8:	ldrb	w3, [x3, x1]
    17dc:	ldr	x1, [x11, #8]
    17e0:	add	x1, x1, x0
    17e4:	strb	w3, [x1, x4]
    17e8:	strb	w3, [x14, x0]
    17ec:	add	x0, x0, #0x1
    17f0:	ldr	w1, [x11, #104]
    17f4:	mov	w3, w0
    17f8:	cmp	w0, w1
    17fc:	b.ge	1808 <grub_mod_fini+0x1508>  // b.tcont
    1800:	cmp	w0, w2
    1804:	b.lt	17c0 <grub_mod_fini+0x14c0>  // b.tstop
    1808:	mov	x1, x14
    180c:	b	1820 <grub_mod_fini+0x1520>
    1810:	ldrsw	x1, [x11, #40]
    1814:	add	x0, x1, w12, sxtw
    1818:	ldr	x1, [x11]
    181c:	add	x1, x1, x0
    1820:	add	x3, x11, #0x20
    1824:	sxtw	x2, w2
    1828:	add	x0, sp, #0x2c
    182c:	bl	f90 <grub_mod_fini+0xc90>
    1830:	sub	x1, x0, #0x1
    1834:	cmn	x1, #0x3
    1838:	b.hi	1854 <grub_mod_fini+0x1554>  // b.pmore
    183c:	cmn	x0, #0x2
    1840:	b.ne	1884 <grub_mod_fini+0x1584>  // b.any
    1844:	ldr	w1, [x11, #52]
    1848:	ldr	w0, [x11, #64]
    184c:	cmp	w1, w0
    1850:	b.lt	18bc <grub_mod_fini+0x15bc>  // b.tstop
    1854:	ldr	w0, [x11, #40]
    1858:	ldr	x1, [x11]
    185c:	add	w0, w12, w0
    1860:	ldrb	w0, [x1, w0, sxtw]
    1864:	ldr	x1, [x11, #80]
    1868:	str	w0, [sp, #44]
    186c:	cbz	x1, 187c <grub_mod_fini+0x157c>
    1870:	and	x0, x0, #0xff
    1874:	ldrb	w0, [x1, x0]
    1878:	str	w0, [sp, #44]
    187c:	mov	x0, #0x1                   	// #1
    1880:	stp	w19, w18, [x11, #32]
    1884:	ldr	x3, [x11, #16]
    1888:	add	w2, w12, #0x1
    188c:	ldr	w1, [sp, #44]
    1890:	add	w0, w12, w0
    1894:	str	w1, [x3, w12, sxtw #2]
    1898:	sxtw	x1, w2
    189c:	cmp	w0, w1
    18a0:	b.gt	18d0 <grub_mod_fini+0x15d0>
    18a4:	mvn	w1, w12
    18a8:	cmp	w12, w0
    18ac:	add	w1, w1, w0
    18b0:	csel	w1, w1, wzr, lt  // lt = tstop
    18b4:	add	w12, w1, w2
    18b8:	b	179c <grub_mod_fini+0x149c>
    18bc:	stp	w19, w18, [x11, #32]
    18c0:	ldr	x19, [sp, #16]
    18c4:	stp	w12, w12, [x11, #44]
    18c8:	ldp	x29, x30, [sp], #112
    18cc:	ret
    18d0:	str	w15, [x3, x1, lsl #2]
    18d4:	add	x1, x1, #0x1
    18d8:	b	189c <grub_mod_fini+0x159c>
    18dc:	stp	x29, x30, [sp, #-48]!
    18e0:	mov	x29, sp
    18e4:	stp	x19, x20, [sp, #16]
    18e8:	mov	x20, x1
    18ec:	str	x21, [sp, #32]
    18f0:	mov	x21, x2
    18f4:	mov	x19, x0
    18f8:	ldr	x0, [x0, #8]
    18fc:	cbnz	x0, 18f4 <grub_mod_fini+0x15f4>
    1900:	ldr	x0, [x19, #16]
    1904:	cbnz	x0, 18f4 <grub_mod_fini+0x15f4>
    1908:	mov	x1, x19
    190c:	mov	x0, x21
    1910:	blr	x20
    1914:	cbnz	w0, 1938 <grub_mod_fini+0x1638>
    1918:	ldr	x1, [x19]
    191c:	cbz	x1, 1938 <grub_mod_fini+0x1638>
    1920:	ldr	x0, [x1, #16]
    1924:	cmp	x0, x19
    1928:	b.eq	1930 <grub_mod_fini+0x1630>  // b.none
    192c:	cbnz	x0, 18f4 <grub_mod_fini+0x15f4>
    1930:	mov	x19, x1
    1934:	b	1908 <grub_mod_fini+0x1608>
    1938:	ldp	x19, x20, [sp, #16]
    193c:	ldr	x21, [sp, #32]
    1940:	ldp	x29, x30, [sp], #48
    1944:	ret
    1948:	stp	x29, x30, [sp, #-48]!
    194c:	mov	x29, sp
    1950:	stp	x19, x20, [sp, #16]
    1954:	mov	x19, x0
    1958:	mov	x20, x1
    195c:	str	x21, [sp, #32]
    1960:	mov	x21, x2
    1964:	mov	x1, x19
    1968:	mov	x0, x21
    196c:	blr	x20
    1970:	cbnz	w0, 19ac <grub_mod_fini+0x16ac>
    1974:	ldr	x3, [x19, #8]
    1978:	cbnz	x3, 1990 <grub_mod_fini+0x1690>
    197c:	mov	x1, #0x0                   	// #0
    1980:	ldr	x3, [x19, #16]
    1984:	cmp	x3, x1
    1988:	b.eq	1998 <grub_mod_fini+0x1698>  // b.none
    198c:	cbz	x3, 1998 <grub_mod_fini+0x1698>
    1990:	mov	x19, x3
    1994:	b	1964 <grub_mod_fini+0x1664>
    1998:	ldr	x2, [x19]
    199c:	mov	x1, x19
    19a0:	cbz	x2, 19ac <grub_mod_fini+0x16ac>
    19a4:	mov	x19, x2
    19a8:	b	1980 <grub_mod_fini+0x1680>
    19ac:	ldp	x19, x20, [sp, #16]
    19b0:	ldr	x21, [sp, #32]
    19b4:	ldp	x29, x30, [sp], #48
    19b8:	ret
    19bc:	stp	x29, x30, [sp, #-48]!
    19c0:	mov	x29, sp
    19c4:	stp	x19, x20, [sp, #16]
    19c8:	mov	x19, x0
    19cc:	ldr	w0, [x0, #104]
    19d0:	str	x21, [sp, #32]
    19d4:	mov	w20, w1
    19d8:	cmp	w0, #0x1
    19dc:	b.le	1a34 <grub_mod_fini+0x1734>
    19e0:	mov	x0, #0x7fffffff            	// #2147483647
    19e4:	sxtw	x21, w1
    19e8:	cmp	x0, w1, sxtw
    19ec:	b.cs	1a04 <grub_mod_fini+0x1704>  // b.hs, b.nlast
    19f0:	mov	w0, #0xc                   	// #12
    19f4:	ldp	x19, x20, [sp, #16]
    19f8:	ldr	x21, [sp, #32]
    19fc:	ldp	x29, x30, [sp], #48
    1a00:	ret
    1a04:	ldr	x0, [x19, #16]
    1a08:	lsl	x21, x21, #2
    1a0c:	mov	x1, x21
    1a10:	bl	0 <grub_realloc>
    1a14:	cbz	x0, 19f0 <grub_mod_fini+0x16f0>
    1a18:	str	x0, [x19, #16]
    1a1c:	ldr	x0, [x19, #24]
    1a20:	cbz	x0, 1a34 <grub_mod_fini+0x1734>
    1a24:	mov	x1, x21
    1a28:	bl	0 <grub_realloc>
    1a2c:	cbz	x0, 19f0 <grub_mod_fini+0x16f0>
    1a30:	str	x0, [x19, #24]
    1a34:	ldrb	w0, [x19, #99]
    1a38:	cbz	w0, 1a50 <grub_mod_fini+0x1750>
    1a3c:	ldr	x0, [x19, #8]
    1a40:	sxtw	x1, w20
    1a44:	bl	0 <grub_realloc>
    1a48:	cbz	x0, 19f0 <grub_mod_fini+0x16f0>
    1a4c:	str	x0, [x19, #8]
    1a50:	mov	w0, #0x0                   	// #0
    1a54:	str	w20, [x19, #52]
    1a58:	b	19f4 <grub_mod_fini+0x16f4>
    1a5c:	stp	x29, x30, [sp, #-32]!
    1a60:	mov	x29, sp
    1a64:	stp	x19, x20, [sp, #16]
    1a68:	mov	x19, x0
    1a6c:	mov	w20, w1
    1a70:	ldr	w0, [x0]
    1a74:	ldr	w1, [x19, #4]
    1a78:	cmp	w0, w1
    1a7c:	b.ne	1aa0 <grub_mod_fini+0x17a0>  // b.any
    1a80:	add	w0, w0, #0x1
    1a84:	lsl	w0, w0, #1
    1a88:	str	w0, [x19]
    1a8c:	sbfiz	x1, x0, #2, #32
    1a90:	ldr	x0, [x19, #8]
    1a94:	bl	0 <grub_realloc>
    1a98:	cbz	x0, 1ac4 <grub_mod_fini+0x17c4>
    1a9c:	str	x0, [x19, #8]
    1aa0:	ldr	w0, [x19, #4]
    1aa4:	ldr	x1, [x19, #8]
    1aa8:	add	w2, w0, #0x1
    1aac:	str	w2, [x19, #4]
    1ab0:	str	w20, [x1, w0, sxtw #2]
    1ab4:	mov	w0, #0x1                   	// #1
    1ab8:	ldp	x19, x20, [sp, #16]
    1abc:	ldp	x29, x30, [sp], #32
    1ac0:	ret
    1ac4:	mov	w0, #0x0                   	// #0
    1ac8:	b	1ab8 <grub_mod_fini+0x17b8>
    1acc:	mov	x2, #0x20                  	// #32
    1ad0:	mov	w1, #0x0                   	// #0
    1ad4:	b	0 <grub_memset>
    1ad8:	stp	x29, x30, [sp, #-32]!
    1adc:	mov	x29, sp
    1ae0:	stp	x19, x20, [sp, #16]
    1ae4:	mov	x19, x0
    1ae8:	mov	x0, #0x100000001           	// #4294967297
    1aec:	mov	w20, w1
    1af0:	str	x0, [x19]
    1af4:	mov	x0, #0x4                   	// #4
    1af8:	bl	0 <grub_malloc>
    1afc:	str	x0, [x19, #8]
    1b00:	cbnz	x0, 1b18 <grub_mod_fini+0x1818>
    1b04:	mov	w0, #0xc                   	// #12
    1b08:	str	xzr, [x19]
    1b0c:	ldp	x19, x20, [sp, #16]
    1b10:	ldp	x29, x30, [sp], #32
    1b14:	ret
    1b18:	str	w20, [x0]
    1b1c:	mov	w0, #0x0                   	// #0
    1b20:	b	1b0c <grub_mod_fini+0x180c>
    1b24:	stp	x29, x30, [sp, #-32]!
    1b28:	mov	x29, sp
    1b2c:	stp	x19, x20, [sp, #16]
    1b30:	mov	x20, x0
    1b34:	mov	w19, w1
    1b38:	str	w1, [x0]
    1b3c:	str	wzr, [x0, #4]
    1b40:	sbfiz	x0, x1, #2, #32
    1b44:	bl	0 <grub_malloc>
    1b48:	str	x0, [x20, #8]
    1b4c:	cbnz	x0, 1b6c <grub_mod_fini+0x186c>
    1b50:	cmp	w19, #0x0
    1b54:	mov	w0, #0xc                   	// #12
    1b58:	csel	w19, w19, w0, eq  // eq = none
    1b5c:	mov	w0, w19
    1b60:	ldp	x19, x20, [sp, #16]
    1b64:	ldp	x29, x30, [sp], #32
    1b68:	ret
    1b6c:	mov	w19, #0x0                   	// #0
    1b70:	b	1b5c <grub_mod_fini+0x185c>
    1b74:	stp	x29, x30, [sp, #-80]!
    1b78:	mov	x29, sp
    1b7c:	stp	x25, x26, [sp, #64]
    1b80:	ldr	x25, [x0, #112]
    1b84:	stp	x19, x20, [sp, #16]
    1b88:	mov	x19, x0
    1b8c:	stp	x21, x22, [sp, #32]
    1b90:	mov	x22, x1
    1b94:	mov	x21, #0x0                   	// #0
    1b98:	stp	x23, x24, [sp, #48]
    1b9c:	mov	w23, w2
    1ba0:	ldr	w0, [x22, #4]
    1ba4:	cmp	w0, w21
    1ba8:	b.gt	1bb4 <grub_mod_fini+0x18b4>
    1bac:	mov	w0, #0x0                   	// #0
    1bb0:	b	1c10 <grub_mod_fini+0x1910>
    1bb4:	ldr	x0, [x22, #8]
    1bb8:	ldr	w24, [x0, x21, lsl #2]
    1bbc:	ldr	x0, [x25]
    1bc0:	sbfiz	x1, x24, #4, #32
    1bc4:	add	x2, x0, w24, sxtw #4
    1bc8:	ldrb	w2, [x2, #8]
    1bcc:	cmp	w2, #0x8
    1bd0:	b.ne	1c68 <grub_mod_fini+0x1968>  // b.any
    1bd4:	ldr	w1, [x0, x1]
    1bd8:	cmp	w1, #0x3f
    1bdc:	b.gt	1c68 <grub_mod_fini+0x1968>
    1be0:	ldr	x0, [x25, #144]
    1be4:	lsr	x0, x0, x1
    1be8:	tbz	w0, #0, 1c68 <grub_mod_fini+0x1968>
    1bec:	ldp	w20, w0, [x19, #172]
    1bf0:	cmp	w20, w0
    1bf4:	b.ne	1c30 <grub_mod_fini+0x1930>  // b.any
    1bf8:	ldr	x0, [x19, #184]
    1bfc:	lsl	w20, w20, #1
    1c00:	sbfiz	x1, x20, #3, #32
    1c04:	bl	0 <grub_realloc>
    1c08:	cbnz	x0, 1c28 <grub_mod_fini+0x1928>
    1c0c:	mov	w0, #0xc                   	// #12
    1c10:	ldp	x19, x20, [sp, #16]
    1c14:	ldp	x21, x22, [sp, #32]
    1c18:	ldp	x23, x24, [sp, #48]
    1c1c:	ldp	x25, x26, [sp, #64]
    1c20:	ldp	x29, x30, [sp], #80
    1c24:	ret
    1c28:	str	w20, [x19, #176]
    1c2c:	str	x0, [x19, #184]
    1c30:	ldrsw	x20, [x19, #172]
    1c34:	mov	x0, #0x20                  	// #32
    1c38:	ldr	x26, [x19, #184]
    1c3c:	bl	0 <grub_zalloc>
    1c40:	lsl	x20, x20, #3
    1c44:	ldr	x1, [x19, #184]
    1c48:	str	x0, [x26, x20]
    1c4c:	ldr	w0, [x19, #172]
    1c50:	ldr	x1, [x1, w0, sxtw #3]
    1c54:	cbz	x1, 1c0c <grub_mod_fini+0x190c>
    1c58:	str	w24, [x1, #4]
    1c5c:	add	w0, w0, #0x1
    1c60:	str	w0, [x19, #172]
    1c64:	str	w23, [x1]
    1c68:	add	x21, x21, #0x1
    1c6c:	b	1ba0 <grub_mod_fini+0x18a0>
    1c70:	b	0 <grub_memmove>
    1c74:	stp	x29, x30, [sp, #-32]!
    1c78:	mov	x29, sp
    1c7c:	str	x19, [sp, #16]
    1c80:	mov	x19, x0
    1c84:	ldr	x0, [x0]
    1c88:	bl	0 <grub_free>
    1c8c:	ldr	x0, [x19, #8]
    1c90:	bl	0 <grub_free>
    1c94:	ldr	x0, [x19, #16]
    1c98:	bl	0 <grub_free>
    1c9c:	ldr	x0, [x19, #24]
    1ca0:	bl	0 <grub_free>
    1ca4:	mov	x0, x19
    1ca8:	ldr	x19, [sp, #16]
    1cac:	ldp	x29, x30, [sp], #32
    1cb0:	b	0 <grub_free>
    1cb4:	ldr	w1, [x0, #8]
    1cb8:	and	w1, w1, #0x7ffff
    1cbc:	and	w1, w1, #0xfffc00ff
    1cc0:	cmp	w1, #0x6
    1cc4:	b.ne	1cd0 <grub_mod_fini+0x19d0>  // b.any
    1cc8:	ldr	x0, [x0]
    1ccc:	b	1c74 <grub_mod_fini+0x1974>
    1cd0:	cmp	w1, #0x3
    1cd4:	b.ne	1ce0 <grub_mod_fini+0x19e0>  // b.any
    1cd8:	ldr	x0, [x0]
    1cdc:	b	0 <grub_free>
    1ce0:	ret
    1ce4:	stp	x29, x30, [sp, #-16]!
    1ce8:	add	x0, x1, #0x28
    1cec:	mov	x29, sp
    1cf0:	bl	1cb4 <grub_mod_fini+0x19b4>
    1cf4:	mov	w0, #0x0                   	// #0
    1cf8:	ldp	x29, x30, [sp], #16
    1cfc:	ret
    1d00:	stp	x29, x30, [sp, #-96]!
    1d04:	mov	x29, sp
    1d08:	stp	x19, x20, [sp, #16]
    1d0c:	mov	x19, x0
    1d10:	ldp	x20, x0, [x0, #8]
    1d14:	stp	x21, x22, [sp, #32]
    1d18:	mov	x21, x2
    1d1c:	stp	x23, x24, [sp, #48]
    1d20:	mov	x23, x1
    1d24:	and	w24, w2, #0xff
    1d28:	stp	x25, x26, [sp, #64]
    1d2c:	cmp	x0, x20
    1d30:	stp	x27, x28, [sp, #80]
    1d34:	b.cc	1e0c <grub_mod_fini+0x1b0c>  // b.lo, b.ul, b.last
    1d38:	mov	x0, #0x7fffffff            	// #2147483647
    1d3c:	lsl	x25, x20, #1
    1d40:	cmp	x0, x20, lsl #1
    1d44:	b.cs	1d68 <grub_mod_fini+0x1a68>  // b.hs, b.nlast
    1d48:	mov	w0, #0xffffffff            	// #-1
    1d4c:	ldp	x19, x20, [sp, #16]
    1d50:	ldp	x21, x22, [sp, #32]
    1d54:	ldp	x23, x24, [sp, #48]
    1d58:	ldp	x25, x26, [sp, #64]
    1d5c:	ldp	x27, x28, [sp, #80]
    1d60:	ldp	x29, x30, [sp], #96
    1d64:	ret
    1d68:	ldr	x0, [x19]
    1d6c:	lsl	x28, x20, #5
    1d70:	mov	x1, x28
    1d74:	bl	0 <grub_realloc>
    1d78:	cbz	x0, 1d48 <grub_mod_fini+0x1a48>
    1d7c:	str	x0, [x19]
    1d80:	lsl	x20, x20, #3
    1d84:	ldr	x0, [x19, #24]
    1d88:	mov	x1, x20
    1d8c:	bl	0 <grub_realloc>
    1d90:	mov	x27, x0
    1d94:	ldr	x0, [x19, #32]
    1d98:	mov	x1, x20
    1d9c:	bl	0 <grub_realloc>
    1da0:	mov	x26, x0
    1da4:	ldr	x0, [x19, #40]
    1da8:	mov	x1, x28
    1dac:	bl	0 <grub_realloc>
    1db0:	mov	x22, x0
    1db4:	ldr	x0, [x19, #48]
    1db8:	mov	x1, x28
    1dbc:	bl	0 <grub_realloc>
    1dc0:	mov	x20, x0
    1dc4:	cmp	x27, #0x0
    1dc8:	ccmp	x26, #0x0, #0x4, ne  // ne = any
    1dcc:	b.eq	1ddc <grub_mod_fini+0x1adc>  // b.none
    1dd0:	cmp	x22, #0x0
    1dd4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    1dd8:	b.ne	1e00 <grub_mod_fini+0x1b00>  // b.any
    1ddc:	mov	x0, x27
    1de0:	bl	0 <grub_free>
    1de4:	mov	x0, x26
    1de8:	bl	0 <grub_free>
    1dec:	mov	x0, x22
    1df0:	bl	0 <grub_free>
    1df4:	mov	x0, x20
    1df8:	bl	0 <grub_free>
    1dfc:	b	1d48 <grub_mod_fini+0x1a48>
    1e00:	str	x25, [x19, #8]
    1e04:	stp	x27, x26, [x19, #24]
    1e08:	stp	x22, x0, [x19, #40]
    1e0c:	cmp	w24, #0x5
    1e10:	ldr	x2, [x19, #16]
    1e14:	ldr	x3, [x19]
    1e18:	lsl	x0, x2, #4
    1e1c:	add	x1, x3, x2, lsl #4
    1e20:	str	x23, [x3, x0]
    1e24:	str	x21, [x1, #8]
    1e28:	and	w21, w21, #0xfffc00ff
    1e2c:	str	w21, [x1, #8]
    1e30:	b.ne	1e94 <grub_mod_fini+0x1b94>  // b.any
    1e34:	ldr	w3, [x19, #164]
    1e38:	cmp	w3, #0x1
    1e3c:	cset	w4, gt
    1e40:	ldrb	w3, [x1, #10]
    1e44:	bfi	w3, w4, #4, #1
    1e48:	strb	w3, [x1, #10]
    1e4c:	mov	w3, #0xffffffff            	// #-1
    1e50:	ldr	x1, [x19, #24]
    1e54:	str	w3, [x1, x2, lsl #2]
    1e58:	mov	x2, #0x10                  	// #16
    1e5c:	ldr	x3, [x19, #40]
    1e60:	mov	w1, #0x0                   	// #0
    1e64:	add	x0, x3, x0
    1e68:	bl	0 <grub_memset>
    1e6c:	ldr	x3, [x19, #16]
    1e70:	mov	w1, #0x0                   	// #0
    1e74:	ldr	x0, [x19, #48]
    1e78:	mov	x2, #0x10                  	// #16
    1e7c:	add	x0, x0, x3, lsl #4
    1e80:	bl	0 <grub_memset>
    1e84:	ldr	x0, [x19, #16]
    1e88:	add	x1, x0, #0x1
    1e8c:	str	x1, [x19, #16]
    1e90:	b	1d4c <grub_mod_fini+0x1a4c>
    1e94:	cmp	w24, #0x6
    1e98:	cset	w4, eq  // eq = none
    1e9c:	b	1e40 <grub_mod_fini+0x1b40>
    1ea0:	stp	x29, x30, [sp, #-48]!
    1ea4:	mov	x29, sp
    1ea8:	stp	x19, x20, [sp, #16]
    1eac:	mov	w20, w1
    1eb0:	mov	w19, w2
    1eb4:	stp	x21, x22, [sp, #32]
    1eb8:	sbfiz	x22, x1, #4, #32
    1ebc:	mov	x21, x0
    1ec0:	ldr	x1, [x0]
    1ec4:	add	x1, x1, w20, sxtw #4
    1ec8:	ldp	x1, x2, [x1]
    1ecc:	bl	1d00 <grub_mod_fini+0x1a00>
    1ed0:	cmn	w0, #0x1
    1ed4:	b.eq	1f1c <grub_mod_fini+0x1c1c>  // b.none
    1ed8:	ldr	x2, [x21]
    1edc:	and	w3, w19, #0x3ff
    1ee0:	add	x4, x2, w0, sxtw #4
    1ee4:	add	x2, x2, x22
    1ee8:	ldr	w1, [x4, #8]
    1eec:	bfi	w1, w3, #8, #10
    1ef0:	str	w1, [x4, #8]
    1ef4:	and	w1, w1, #0xfff800ff
    1ef8:	ldr	w2, [x2, #8]
    1efc:	ubfx	x2, x2, #8, #10
    1f00:	orr	w2, w2, w3
    1f04:	lsl	w2, w2, #8
    1f08:	orr	w2, w2, #0x40000
    1f0c:	orr	w2, w2, w1
    1f10:	ldr	x1, [x21, #32]
    1f14:	str	w2, [x4, #8]
    1f18:	str	w20, [x1, w0, sxtw #2]
    1f1c:	ldp	x19, x20, [sp, #16]
    1f20:	ldp	x21, x22, [sp, #32]
    1f24:	ldp	x29, x30, [sp], #48
    1f28:	ret
    1f2c:	stp	x29, x30, [sp, #-32]!
    1f30:	mov	x29, sp
    1f34:	str	x19, [sp, #16]
    1f38:	mov	x19, x0
    1f3c:	ldr	x0, [x0, #32]
    1f40:	bl	0 <grub_free>
    1f44:	ldr	x0, [x19, #48]
    1f48:	bl	0 <grub_free>
    1f4c:	ldr	x0, [x19, #56]
    1f50:	add	x1, x19, #0x8
    1f54:	cmp	x0, x1
    1f58:	b.eq	1f6c <grub_mod_fini+0x1c6c>  // b.none
    1f5c:	ldr	x0, [x0, #8]
    1f60:	bl	0 <grub_free>
    1f64:	ldr	x0, [x19, #56]
    1f68:	bl	0 <grub_free>
    1f6c:	ldr	x0, [x19, #16]
    1f70:	bl	0 <grub_free>
    1f74:	ldr	x0, [x19, #72]
    1f78:	bl	0 <grub_free>
    1f7c:	ldr	x0, [x19, #64]
    1f80:	bl	0 <grub_free>
    1f84:	mov	x0, x19
    1f88:	ldr	x19, [sp, #16]
    1f8c:	ldp	x29, x30, [sp], #32
    1f90:	b	0 <grub_free>
    1f94:	stp	x29, x30, [sp, #-32]!
    1f98:	mov	x29, sp
    1f9c:	str	x19, [sp, #16]
    1fa0:	mov	x19, x0
    1fa4:	ldr	x0, [x0, #16]
    1fa8:	bl	0 <grub_free>
    1fac:	ldr	x0, [x19, #24]
    1fb0:	bl	0 <grub_free>
    1fb4:	ldrb	w0, [x19, #99]
    1fb8:	cbz	w0, 1fcc <grub_mod_fini+0x1ccc>
    1fbc:	ldr	x0, [x19, #8]
    1fc0:	ldr	x19, [sp, #16]
    1fc4:	ldp	x29, x30, [sp], #32
    1fc8:	b	0 <grub_free>
    1fcc:	ldr	x19, [sp, #16]
    1fd0:	ldp	x29, x30, [sp], #32
    1fd4:	ret
    1fd8:	stp	x29, x30, [sp, #-48]!
    1fdc:	mov	x29, sp
    1fe0:	stp	x19, x20, [sp, #16]
    1fe4:	mov	x19, x0
    1fe8:	ldr	x0, [x0]
    1fec:	stp	x21, x22, [sp, #32]
    1ff0:	cbnz	x0, 208c <grub_mod_fini+0x1d8c>
    1ff4:	ldr	x0, [x19, #24]
    1ff8:	mov	x20, #0x0                   	// #0
    1ffc:	bl	0 <grub_free>
    2000:	ldr	x0, [x19, #16]
    2004:	cmp	x0, x20
    2008:	b.hi	2094 <grub_mod_fini+0x1d94>  // b.pmore
    200c:	ldr	x0, [x19, #40]
    2010:	bl	0 <grub_free>
    2014:	ldr	x0, [x19, #48]
    2018:	bl	0 <grub_free>
    201c:	ldr	x0, [x19, #56]
    2020:	bl	0 <grub_free>
    2024:	ldr	x0, [x19]
    2028:	bl	0 <grub_free>
    202c:	ldr	x0, [x19, #64]
    2030:	cbnz	x0, 20d8 <grub_mod_fini+0x1dd8>
    2034:	ldr	x0, [x19, #64]
    2038:	bl	0 <grub_free>
    203c:	adrp	x1, 0 <grub_mod_init-0x260>
    2040:	ldr	x0, [x19, #120]
    2044:	ldr	x1, [x1]
    2048:	cmp	x0, x1
    204c:	b.ne	2120 <grub_mod_fini+0x1e20>  // b.any
    2050:	ldr	x0, [x19, #208]
    2054:	bl	0 <grub_free>
    2058:	mov	x0, x19
    205c:	ldp	x19, x20, [sp, #16]
    2060:	ldp	x21, x22, [sp, #32]
    2064:	ldp	x29, x30, [sp], #48
    2068:	b	0 <grub_free>
    206c:	ldr	x0, [x19]
    2070:	add	x0, x0, x20, lsl #4
    2074:	add	x20, x20, #0x1
    2078:	bl	1cb4 <grub_mod_fini+0x19b4>
    207c:	ldr	x0, [x19, #16]
    2080:	cmp	x0, x20
    2084:	b.hi	206c <grub_mod_fini+0x1d6c>  // b.pmore
    2088:	b	1ff4 <grub_mod_fini+0x1cf4>
    208c:	mov	x20, #0x0                   	// #0
    2090:	b	207c <grub_mod_fini+0x1d7c>
    2094:	ldr	x0, [x19, #48]
    2098:	cbz	x0, 20a8 <grub_mod_fini+0x1da8>
    209c:	add	x0, x0, x20, lsl #4
    20a0:	ldr	x0, [x0, #8]
    20a4:	bl	0 <grub_free>
    20a8:	ldr	x0, [x19, #56]
    20ac:	cbz	x0, 20bc <grub_mod_fini+0x1dbc>
    20b0:	add	x0, x0, x20, lsl #4
    20b4:	ldr	x0, [x0, #8]
    20b8:	bl	0 <grub_free>
    20bc:	ldr	x0, [x19, #40]
    20c0:	cbz	x0, 20d0 <grub_mod_fini+0x1dd0>
    20c4:	add	x0, x0, x20, lsl #4
    20c8:	ldr	x0, [x0, #8]
    20cc:	bl	0 <grub_free>
    20d0:	add	x20, x20, #0x1
    20d4:	b	2000 <grub_mod_fini+0x1d00>
    20d8:	mov	x20, #0x0                   	// #0
    20dc:	ldr	x22, [x19, #64]
    20e0:	mov	x21, #0x0                   	// #0
    20e4:	add	x22, x22, x20, lsl #4
    20e8:	ldr	w1, [x22]
    20ec:	ldr	x0, [x22, #8]
    20f0:	cmp	w1, w21
    20f4:	b.gt	2110 <grub_mod_fini+0x1e10>
    20f8:	bl	0 <grub_free>
    20fc:	add	x20, x20, #0x1
    2100:	ldr	w0, [x19, #132]
    2104:	cmp	w0, w20
    2108:	b.cs	20dc <grub_mod_fini+0x1ddc>  // b.hs, b.nlast
    210c:	b	2034 <grub_mod_fini+0x1d34>
    2110:	ldr	x0, [x0, x21, lsl #3]
    2114:	add	x21, x21, #0x1
    2118:	bl	1f2c <grub_mod_fini+0x1c2c>
    211c:	b	20e8 <grub_mod_fini+0x1de8>
    2120:	bl	0 <grub_free>
    2124:	b	2050 <grub_mod_fini+0x1d50>
	...
    2130:	stp	x29, x30, [sp, #-64]!
    2134:	mov	x29, sp
    2138:	stp	x19, x20, [sp, #16]
    213c:	mov	x19, x0
    2140:	stp	x21, x22, [sp, #32]
    2144:	mov	x21, #0x0                   	// #0
    2148:	str	x23, [sp, #48]
    214c:	ldr	w0, [x19, #172]
    2150:	cmp	w0, w21
    2154:	b.gt	2174 <grub_mod_fini+0x1e74>
    2158:	ldp	x21, x22, [sp, #32]
    215c:	ldr	x23, [sp, #48]
    2160:	str	wzr, [x19, #148]
    2164:	str	wzr, [x19, #172]
    2168:	ldp	x19, x20, [sp, #16]
    216c:	ldp	x29, x30, [sp], #64
    2170:	ret
    2174:	ldr	x0, [x19, #184]
    2178:	mov	x22, #0x0                   	// #0
    217c:	ldr	x20, [x0, x21, lsl #3]
    2180:	ldr	w1, [x20, #20]
    2184:	ldr	x0, [x20, #24]
    2188:	cmp	w1, w22
    218c:	b.gt	21bc <grub_mod_fini+0x1ebc>
    2190:	bl	0 <grub_free>
    2194:	ldr	x0, [x20, #8]
    2198:	cbz	x0, 21ac <grub_mod_fini+0x1eac>
    219c:	ldr	x0, [x0, #8]
    21a0:	bl	0 <grub_free>
    21a4:	ldr	x0, [x20, #8]
    21a8:	bl	0 <grub_free>
    21ac:	mov	x0, x20
    21b0:	add	x21, x21, #0x1
    21b4:	bl	0 <grub_free>
    21b8:	b	214c <grub_mod_fini+0x1e4c>
    21bc:	ldr	x23, [x0, x22, lsl #3]
    21c0:	add	x22, x22, #0x1
    21c4:	ldr	x0, [x23, #16]
    21c8:	bl	0 <grub_free>
    21cc:	mov	x0, x23
    21d0:	bl	0 <grub_free>
    21d4:	b	2180 <grub_mod_fini+0x1e80>
    21d8:	cbnz	w2, 21f0 <grub_mod_fini+0x1ef0>
    21dc:	mov	w2, w1
    21e0:	mov	x1, x0
    21e4:	adrp	x0, 0 <grub_mod_init-0x260>
    21e8:	ldr	x0, [x0]
    21ec:	b	0 <grub_printf>
    21f0:	ret
    21f4:	nop
	...
    2200:	stp	x29, x30, [sp, #-64]!
    2204:	mov	x29, sp
    2208:	ldrb	w2, [x1, #48]
    220c:	stp	x19, x20, [sp, #16]
    2210:	mov	x19, x1
    2214:	ldr	w20, [x1, #56]
    2218:	stp	x21, x22, [sp, #32]
    221c:	mov	x21, x0
    2220:	sub	w0, w2, #0x2
    2224:	str	x23, [sp, #48]
    2228:	cmp	w0, #0xe
    222c:	b.hi	2378 <grub_mod_fini+0x2078>  // b.pmore
    2230:	adrp	x1, 0 <grub_mod_init-0x260>
    2234:	ldr	x1, [x1]
    2238:	ldrb	w0, [x1, w0, uxtw]
    223c:	adr	x1, 2248 <grub_mod_fini+0x1f48>
    2240:	add	x0, x1, w0, sxtb #2
    2244:	br	x0
    2248:	ldr	x0, [x19, #32]
    224c:	mov	w1, #0x59f                 	// #1439
    2250:	cmp	x0, #0x0
    2254:	adrp	x0, 0 <grub_mod_init-0x260>
    2258:	cset	w2, eq  // eq = none
    225c:	ldr	x0, [x0]
    2260:	bl	21d8 <grub_mod_fini+0x1ed8>
    2264:	mov	w0, #0x0                   	// #0
    2268:	b	23a8 <grub_mod_fini+0x20a8>
    226c:	ldrb	w0, [x21, #160]
    2270:	orr	w0, w0, #0x1
    2274:	strb	w0, [x21, #160]
    2278:	ldr	x0, [x19, #8]
    227c:	cbz	x0, 2300 <grub_mod_fini+0x2000>
    2280:	ldr	x0, [x0, #24]
    2284:	ldr	w22, [x0, #56]
    2288:	ldr	x0, [x19, #16]
    228c:	cbz	x0, 2308 <grub_mod_fini+0x2008>
    2290:	ldr	x0, [x0, #24]
    2294:	adrp	x23, 0 <grub_mod_init-0x260>
    2298:	ldr	w19, [x0, #56]
    229c:	mvn	w2, w22
    22a0:	ldr	x0, [x23]
    22a4:	lsr	w2, w2, #31
    22a8:	mov	w1, #0x5af                 	// #1455
    22ac:	bl	21d8 <grub_mod_fini+0x1ed8>
    22b0:	ldr	x0, [x23]
    22b4:	mvn	w2, w19
    22b8:	mov	w1, #0x5b0                 	// #1456
    22bc:	lsr	w2, w2, #31
    22c0:	bl	21d8 <grub_mod_fini+0x1ed8>
    22c4:	ldr	x0, [x21, #40]
    22c8:	sbfiz	x1, x20, #4, #32
    22cc:	mov	w21, #0x2                   	// #2
    22d0:	add	x20, x0, w20, sxtw #4
    22d4:	str	w21, [x0, x1]
    22d8:	mov	x0, #0x8                   	// #8
    22dc:	bl	0 <grub_malloc>
    22e0:	str	x0, [x20, #8]
    22e4:	cbz	x0, 23a4 <grub_mod_fini+0x20a4>
    22e8:	cmp	w22, w19
    22ec:	b.ne	2310 <grub_mod_fini+0x2010>  // b.any
    22f0:	mov	w1, #0x1                   	// #1
    22f4:	str	w1, [x20, #4]
    22f8:	str	w22, [x0]
    22fc:	b	2264 <grub_mod_fini+0x1f64>
    2300:	ldr	x0, [x19, #32]
    2304:	b	2284 <grub_mod_fini+0x1f84>
    2308:	ldr	x0, [x19, #32]
    230c:	b	2294 <grub_mod_fini+0x1f94>
    2310:	str	w21, [x20, #4]
    2314:	b.ge	2320 <grub_mod_fini+0x2020>  // b.tcont
    2318:	stp	w22, w19, [x0]
    231c:	b	2264 <grub_mod_fini+0x1f64>
    2320:	stp	w19, w22, [x0]
    2324:	b	2264 <grub_mod_fini+0x1f64>
    2328:	ldr	x1, [x19, #32]
    232c:	ldr	x0, [x21, #40]
    2330:	ldr	w1, [x1, #56]
    2334:	add	x0, x0, w20, sxtw #4
    2338:	ldp	x19, x20, [sp, #16]
    233c:	ldp	x21, x22, [sp, #32]
    2340:	ldr	x23, [sp, #48]
    2344:	ldp	x29, x30, [sp], #64
    2348:	b	1ad8 <grub_mod_fini+0x17d8>
    234c:	ldr	x0, [x19, #32]
    2350:	sxtw	x2, w20
    2354:	ldr	w1, [x0, #56]
    2358:	ldr	x0, [x21, #24]
    235c:	str	w1, [x0, w20, sxtw #2]
    2360:	ldrb	w0, [x19, #48]
    2364:	cmp	w0, #0x4
    2368:	b.ne	2264 <grub_mod_fini+0x1f64>  // b.any
    236c:	ldr	x0, [x21, #40]
    2370:	add	x0, x0, x2, lsl #4
    2374:	b	2338 <grub_mod_fini+0x2038>
    2378:	adrp	x0, 0 <grub_mod_init-0x260>
    237c:	eor	x2, x2, #0x8
    2380:	mov	w1, #0x5c2                 	// #1474
    2384:	ldr	x0, [x0]
    2388:	ubfx	w2, w2, #3, #1
    238c:	bl	21d8 <grub_mod_fini+0x1ed8>
    2390:	ldr	x0, [x19, #32]
    2394:	ldr	w1, [x0, #56]
    2398:	ldr	x0, [x21, #24]
    239c:	str	w1, [x0, w20, sxtw #2]
    23a0:	b	2264 <grub_mod_fini+0x1f64>
    23a4:	mov	w0, #0xc                   	// #12
    23a8:	ldp	x19, x20, [sp, #16]
    23ac:	ldp	x21, x22, [sp, #32]
    23b0:	ldr	x23, [sp, #48]
    23b4:	ldp	x29, x30, [sp], #64
    23b8:	ret
    23bc:	nop
	...
    23d0:	stp	x29, x30, [sp, #-64]!
    23d4:	mov	x29, sp
    23d8:	stp	x19, x20, [sp, #16]
    23dc:	mov	x20, x0
    23e0:	adrp	x0, 0 <grub_mod_init-0x260>
    23e4:	stp	x21, x22, [sp, #32]
    23e8:	mov	x21, x4
    23ec:	ldr	w19, [x20]
    23f0:	ldr	x0, [x0]
    23f4:	sub	w19, w19, #0x1
    23f8:	stp	x23, x24, [sp, #48]
    23fc:	mov	w23, w2
    2400:	mvn	w2, w19
    2404:	str	w19, [x20]
    2408:	mov	x22, x3
    240c:	mov	x24, x1
    2410:	lsr	w2, w2, #31
    2414:	mov	w1, #0x553                 	// #1363
    2418:	bl	21d8 <grub_mod_fini+0x1ed8>
    241c:	ldr	x0, [x20, #8]
    2420:	sbfiz	x19, x19, #5, #32
    2424:	sbfiz	x2, x23, #3, #32
    2428:	add	x1, x0, x19
    242c:	ldr	w0, [x0, x19]
    2430:	ldr	x1, [x1, #8]
    2434:	str	w0, [x24]
    2438:	mov	x0, x22
    243c:	bl	1c70 <grub_mod_fini+0x1970>
    2440:	ldr	x0, [x21, #8]
    2444:	bl	0 <grub_free>
    2448:	ldr	x0, [x20, #8]
    244c:	add	x0, x0, x19
    2450:	ldr	x0, [x0, #8]
    2454:	bl	0 <grub_free>
    2458:	ldr	x0, [x20, #8]
    245c:	ldp	x23, x24, [sp, #48]
    2460:	add	x19, x0, x19
    2464:	ldp	x0, x1, [x19, #16]
    2468:	stp	x0, x1, [x21]
    246c:	ldr	w0, [x19, #4]
    2470:	ldp	x19, x20, [sp, #16]
    2474:	ldp	x21, x22, [sp, #32]
    2478:	ldp	x29, x30, [sp], #64
    247c:	ret
	...
    2488:	mov	x2, x0
    248c:	ldr	w0, [x0, #104]
    2490:	cmp	w0, #0x1
    2494:	b.eq	24b0 <grub_mod_fini+0x21b0>  // b.none
    2498:	ldr	w5, [x2, #44]
    249c:	sbfiz	x3, x1, #2, #32
    24a0:	mov	w0, #0x1                   	// #1
    24a4:	add	w4, w1, w0
    24a8:	cmp	w5, w4
    24ac:	b.gt	24b4 <grub_mod_fini+0x21b4>
    24b0:	ret
    24b4:	ldr	x4, [x2, #16]
    24b8:	add	x3, x3, #0x4
    24bc:	ldr	w4, [x4, x3]
    24c0:	cmn	w4, #0x1
    24c4:	b.ne	24b0 <grub_mod_fini+0x21b0>  // b.any
    24c8:	add	w0, w0, #0x1
    24cc:	b	24a4 <grub_mod_fini+0x21a4>
    24d0:	tbnz	w1, #31, 24fc <grub_mod_fini+0x21fc>
    24d4:	ldr	w2, [x0, #4]
    24d8:	cmp	w2, w1
    24dc:	b.le	24fc <grub_mod_fini+0x21fc>
    24e0:	sub	w2, w2, #0x1
    24e4:	str	w2, [x0, #4]
    24e8:	sbfiz	x2, x1, #2, #32
    24ec:	ldr	w4, [x0, #4]
    24f0:	add	x3, x2, #0x4
    24f4:	cmp	w1, w4
    24f8:	b.lt	2500 <grub_mod_fini+0x2200>  // b.tstop
    24fc:	ret
    2500:	ldr	x4, [x0, #8]
    2504:	add	w1, w1, #0x1
    2508:	ldr	w5, [x4, x3]
    250c:	str	w5, [x4, x2]
    2510:	mov	x2, x3
    2514:	b	24ec <grub_mod_fini+0x21ec>
    2518:	ldrb	w2, [x1, #48]
    251c:	cmp	w2, #0x4
    2520:	b.ne	2558 <grub_mod_fini+0x2258>  // b.any
    2524:	ldr	x2, [x0, #208]
    2528:	cbz	x2, 2550 <grub_mod_fini+0x2250>
    252c:	ldrsw	x3, [x1, #40]
    2530:	ldr	w2, [x2, x3, lsl #2]
    2534:	str	w2, [x1, #40]
    2538:	mov	w1, #0x1                   	// #1
    253c:	lsl	w1, w1, w2
    2540:	ldr	x2, [x0, #144]
    2544:	sxtw	x1, w1
    2548:	orr	x1, x2, x1
    254c:	str	x1, [x0, #144]
    2550:	mov	w0, #0x0                   	// #0
    2554:	ret
    2558:	cmp	w2, #0x11
    255c:	b.ne	2550 <grub_mod_fini+0x2250>  // b.any
    2560:	ldr	x2, [x1, #8]
    2564:	cbz	x2, 2550 <grub_mod_fini+0x2250>
    2568:	ldrb	w3, [x2, #48]
    256c:	cmp	w3, #0x11
    2570:	b.ne	2550 <grub_mod_fini+0x2250>  // b.any
    2574:	ldr	w3, [x2, #40]
    2578:	ldr	x2, [x2, #8]
    257c:	str	x2, [x1, #8]
    2580:	cbz	x2, 2588 <grub_mod_fini+0x2288>
    2584:	str	x1, [x2]
    2588:	ldrsw	x1, [x1, #40]
    258c:	cmp	w3, #0x3f
    2590:	ldr	x2, [x0, #208]
    2594:	ldr	w1, [x2, x1, lsl #2]
    2598:	str	w1, [x2, w3, sxtw #2]
    259c:	b.gt	2550 <grub_mod_fini+0x2250>
    25a0:	ldr	x2, [x0, #144]
    25a4:	mov	x1, #0x1                   	// #1
    25a8:	lsl	x1, x1, x3
    25ac:	bic	x1, x2, x1
    25b0:	b	254c <grub_mod_fini+0x224c>
    25b4:	ldrb	w0, [x1, #48]
    25b8:	ldr	x2, [x1, #8]
    25bc:	cmp	w0, #0xb
    25c0:	b.eq	25e4 <grub_mod_fini+0x22e4>  // b.none
    25c4:	cmp	w0, #0x10
    25c8:	ldr	x0, [x1, #16]
    25cc:	b.eq	25f0 <grub_mod_fini+0x22f0>  // b.none
    25d0:	cbz	x2, 25dc <grub_mod_fini+0x22dc>
    25d4:	ldr	x3, [x1, #32]
    25d8:	str	x3, [x2, #32]
    25dc:	cbnz	x0, 25f8 <grub_mod_fini+0x22f8>
    25e0:	b	25e8 <grub_mod_fini+0x22e8>
    25e4:	str	x1, [x2, #32]
    25e8:	mov	w0, #0x0                   	// #0
    25ec:	ret
    25f0:	ldr	x3, [x0, #24]
    25f4:	str	x3, [x2, #32]
    25f8:	ldr	x1, [x1, #32]
    25fc:	str	x1, [x0, #32]
    2600:	b	25e8 <grub_mod_fini+0x22e8>
    2604:	stp	x29, x30, [sp, #-48]!
    2608:	mov	x29, sp
    260c:	stp	x19, x20, [sp, #16]
    2610:	mov	x19, x0
    2614:	ldr	w0, [x0, #128]
    2618:	stp	x21, x22, [sp, #32]
    261c:	mov	x20, x2
    2620:	mov	x21, x1
    2624:	mov	x22, x3
    2628:	cmp	w0, #0xf
    262c:	b.ne	264c <grub_mod_fini+0x234c>  // b.any
    2630:	mov	x0, #0x3c8                 	// #968
    2634:	bl	0 <grub_malloc>
    2638:	cbz	x0, 26ac <grub_mod_fini+0x23ac>
    263c:	ldr	x1, [x19, #112]
    2640:	str	x1, [x0]
    2644:	str	x0, [x19, #112]
    2648:	str	wzr, [x19, #128]
    264c:	ldr	w4, [x19, #128]
    2650:	ldr	x6, [x19, #112]
    2654:	add	w0, w4, #0x1
    2658:	sbfiz	x4, x4, #6, #32
    265c:	str	w0, [x19, #128]
    2660:	add	x5, x6, x4
    2664:	add	x0, x4, #0x8
    2668:	add	x4, x4, #0x20
    266c:	add	x0, x6, x0
    2670:	add	x4, x6, x4
    2674:	stp	xzr, x21, [x5, #8]
    2678:	str	x20, [x5, #24]
    267c:	ldp	x2, x3, [x22]
    2680:	stp	x2, x3, [x5, #48]
    2684:	ldrb	w1, [x4, #26]
    2688:	and	w1, w1, #0xfffffff3
    268c:	strb	w1, [x4, #26]
    2690:	mov	w1, #0xffffffff            	// #-1
    2694:	stp	xzr, xzr, [x5, #32]
    2698:	str	w1, [x5, #64]
    269c:	cbz	x21, 26a4 <grub_mod_fini+0x23a4>
    26a0:	str	x0, [x21]
    26a4:	cbz	x20, 26ac <grub_mod_fini+0x23ac>
    26a8:	str	x0, [x20]
    26ac:	ldp	x19, x20, [sp, #16]
    26b0:	ldp	x21, x22, [sp, #32]
    26b4:	ldp	x29, x30, [sp], #48
    26b8:	ret
    26bc:	stp	x29, x30, [sp, #-64]!
    26c0:	mov	x29, sp
    26c4:	stp	x19, x20, [sp, #16]
    26c8:	mov	x19, x0
    26cc:	ldr	x20, [x0]
    26d0:	stp	x21, x22, [sp, #32]
    26d4:	mov	x22, x1
    26d8:	add	x21, sp, #0x38
    26dc:	add	x3, x19, #0x28
    26e0:	mov	x0, x22
    26e4:	mov	x2, #0x0                   	// #0
    26e8:	mov	x1, #0x0                   	// #0
    26ec:	bl	2604 <grub_mod_fini+0x2304>
    26f0:	str	x0, [x21]
    26f4:	cbz	x0, 2734 <grub_mod_fini+0x2434>
    26f8:	str	x20, [x0]
    26fc:	ldr	x20, [x21]
    2700:	ldrb	w0, [x20, #50]
    2704:	orr	w0, w0, #0x4
    2708:	strb	w0, [x20, #50]
    270c:	ldr	x0, [x19, #8]
    2710:	cbz	x0, 2748 <grub_mod_fini+0x2448>
    2714:	add	x21, x20, #0x8
    2718:	mov	x19, x0
    271c:	b	26dc <grub_mod_fini+0x23dc>
    2720:	ldr	x1, [x19]
    2724:	mov	x0, x19
    2728:	ldr	x20, [x20]
    272c:	cbnz	x1, 2744 <grub_mod_fini+0x2444>
    2730:	ldr	x0, [sp, #56]
    2734:	ldp	x19, x20, [sp, #16]
    2738:	ldp	x21, x22, [sp, #32]
    273c:	ldp	x29, x30, [sp], #64
    2740:	ret
    2744:	mov	x19, x1
    2748:	ldr	x2, [x19, #16]
    274c:	cmp	x2, x0
    2750:	b.eq	2720 <grub_mod_fini+0x2420>  // b.none
    2754:	cbz	x2, 2720 <grub_mod_fini+0x2420>
    2758:	add	x21, x20, #0x10
    275c:	mov	x0, x2
    2760:	b	2718 <grub_mod_fini+0x2418>
    2764:	stp	x29, x30, [sp, #-32]!
    2768:	mov	x29, sp
    276c:	strb	w3, [sp, #24]
    2770:	add	x3, sp, #0x10
    2774:	bl	2604 <grub_mod_fini+0x2304>
    2778:	ldp	x29, x30, [sp], #32
    277c:	ret
    2780:	stp	x29, x30, [sp, #-80]!
    2784:	mov	x29, sp
    2788:	stp	x23, x24, [sp, #48]
    278c:	mov	x24, x0
    2790:	ldrb	w0, [x1, #56]
    2794:	stp	x19, x20, [sp, #16]
    2798:	stp	x21, x22, [sp, #32]
    279c:	mov	x22, x2
    27a0:	ldr	x19, [x2, #8]
    27a4:	str	x25, [sp, #64]
    27a8:	ldr	x25, [x1]
    27ac:	tbz	w0, #4, 27cc <grub_mod_fini+0x24cc>
    27b0:	cbz	x19, 27cc <grub_mod_fini+0x24cc>
    27b4:	ldr	w1, [x2, #40]
    27b8:	cmp	w1, #0x3f
    27bc:	b.gt	2854 <grub_mod_fini+0x2554>
    27c0:	ldr	x0, [x25, #144]
    27c4:	lsr	x0, x0, x1
    27c8:	tbz	w0, #0, 2854 <grub_mod_fini+0x2554>
    27cc:	mov	w3, #0x8                   	// #8
    27d0:	mov	x2, #0x0                   	// #0
    27d4:	mov	x1, #0x0                   	// #0
    27d8:	mov	x0, x25
    27dc:	bl	2764 <grub_mod_fini+0x2464>
    27e0:	mov	x21, x0
    27e4:	mov	w3, #0x9                   	// #9
    27e8:	mov	x0, x25
    27ec:	mov	x2, #0x0                   	// #0
    27f0:	mov	x1, #0x0                   	// #0
    27f4:	bl	2764 <grub_mod_fini+0x2464>
    27f8:	mov	x20, x0
    27fc:	cbz	x19, 2870 <grub_mod_fini+0x2570>
    2800:	mov	x2, x0
    2804:	mov	x1, x19
    2808:	mov	x0, x25
    280c:	mov	w3, #0x10                  	// #16
    2810:	bl	2764 <grub_mod_fini+0x2464>
    2814:	mov	x23, x0
    2818:	mov	x2, x23
    281c:	mov	x1, x21
    2820:	mov	x0, x25
    2824:	mov	w3, #0x10                  	// #16
    2828:	bl	2764 <grub_mod_fini+0x2464>
    282c:	cmp	x0, #0x0
    2830:	mov	x19, x0
    2834:	ccmp	x23, #0x0, #0x4, ne  // ne = any
    2838:	b.eq	2848 <grub_mod_fini+0x2548>  // b.none
    283c:	cmp	x21, #0x0
    2840:	ccmp	x20, #0x0, #0x4, ne  // ne = any
    2844:	b.ne	2878 <grub_mod_fini+0x2578>  // b.any
    2848:	mov	w0, #0xc                   	// #12
    284c:	mov	x19, #0x0                   	// #0
    2850:	str	w0, [x24]
    2854:	mov	x0, x19
    2858:	ldp	x19, x20, [sp, #16]
    285c:	ldp	x21, x22, [sp, #32]
    2860:	ldp	x23, x24, [sp, #48]
    2864:	ldr	x25, [sp, #64]
    2868:	ldp	x29, x30, [sp], #80
    286c:	ret
    2870:	mov	x23, x0
    2874:	b	2818 <grub_mod_fini+0x2518>
    2878:	ldr	w0, [x22, #40]
    287c:	str	w0, [x20, #40]
    2880:	str	w0, [x21, #40]
    2884:	ldrb	w0, [x22, #50]
    2888:	ldrb	w1, [x20, #50]
    288c:	ubfx	x0, x0, #3, #1
    2890:	bfi	w1, w0, #3, #1
    2894:	strb	w1, [x20, #50]
    2898:	ldrb	w1, [x21, #50]
    289c:	bfi	w1, w0, #3, #1
    28a0:	strb	w1, [x21, #50]
    28a4:	b	2854 <grub_mod_fini+0x2554>
    28a8:	stp	x29, x30, [sp, #-48]!
    28ac:	mov	x29, sp
    28b0:	ldr	x2, [x1, #8]
    28b4:	stp	x19, x20, [sp, #16]
    28b8:	mov	x20, x0
    28bc:	str	wzr, [sp, #44]
    28c0:	mov	x19, x1
    28c4:	cbz	x2, 28ec <grub_mod_fini+0x25ec>
    28c8:	ldrb	w0, [x2, #48]
    28cc:	cmp	w0, #0x11
    28d0:	b.ne	28ec <grub_mod_fini+0x25ec>  // b.any
    28d4:	mov	x1, x20
    28d8:	add	x0, sp, #0x2c
    28dc:	bl	2780 <grub_mod_fini+0x2480>
    28e0:	str	x0, [x19, #8]
    28e4:	cbz	x0, 28ec <grub_mod_fini+0x25ec>
    28e8:	str	x19, [x0]
    28ec:	ldr	x2, [x19, #16]
    28f0:	cbz	x2, 2918 <grub_mod_fini+0x2618>
    28f4:	ldrb	w0, [x2, #48]
    28f8:	cmp	w0, #0x11
    28fc:	b.ne	2918 <grub_mod_fini+0x2618>  // b.any
    2900:	mov	x1, x20
    2904:	add	x0, sp, #0x2c
    2908:	bl	2780 <grub_mod_fini+0x2480>
    290c:	str	x0, [x19, #16]
    2910:	cbz	x0, 2918 <grub_mod_fini+0x2618>
    2914:	str	x19, [x0]
    2918:	ldr	w0, [sp, #44]
    291c:	ldp	x19, x20, [sp, #16]
    2920:	ldp	x29, x30, [sp], #48
    2924:	ret
    2928:	stp	x29, x30, [sp, #-32]!
    292c:	mov	x29, sp
    2930:	ldr	w2, [x0]
    2934:	stp	x19, x20, [sp, #16]
    2938:	cbnz	w2, 2954 <grub_mod_fini+0x2654>
    293c:	bl	1ad8 <grub_mod_fini+0x17d8>
    2940:	cmp	w0, #0x0
    2944:	cset	w0, eq  // eq = none
    2948:	ldp	x19, x20, [sp, #16]
    294c:	ldp	x29, x30, [sp], #32
    2950:	ret
    2954:	mov	w20, w1
    2958:	ldr	w1, [x0, #4]
    295c:	mov	x19, x0
    2960:	ldr	x0, [x0, #8]
    2964:	cbnz	w1, 2980 <grub_mod_fini+0x2680>
    2968:	str	w20, [x0]
    296c:	ldr	w0, [x19, #4]
    2970:	add	w0, w0, #0x1
    2974:	str	w0, [x19, #4]
    2978:	mov	w0, #0x1                   	// #1
    297c:	b	2948 <grub_mod_fini+0x2648>
    2980:	cmp	w2, w1
    2984:	b.ne	29a0 <grub_mod_fini+0x26a0>  // b.any
    2988:	lsl	w1, w2, #1
    298c:	str	w1, [x19]
    2990:	sbfiz	x1, x1, #2, #32
    2994:	bl	0 <grub_realloc>
    2998:	cbz	x0, 2a08 <grub_mod_fini+0x2708>
    299c:	str	x0, [x19, #8]
    29a0:	ldr	x3, [x19, #8]
    29a4:	ldr	w0, [x19, #4]
    29a8:	ldr	w1, [x3]
    29ac:	sxtw	x2, w0
    29b0:	cmp	w20, w1
    29b4:	b.lt	29d8 <grub_mod_fini+0x26d8>  // b.tstop
    29b8:	sub	x4, x3, #0x4
    29bc:	ldr	w1, [x4, x2, lsl #2]
    29c0:	mov	w0, w2
    29c4:	cmp	w20, w1
    29c8:	b.ge	29f0 <grub_mod_fini+0x26f0>  // b.tcont
    29cc:	str	w1, [x3, x2, lsl #2]
    29d0:	sub	x2, x2, #0x1
    29d4:	b	29bc <grub_mod_fini+0x26bc>
    29d8:	sub	x1, x3, #0x4
    29dc:	cmp	w2, #0x0
    29e0:	b.gt	29f8 <grub_mod_fini+0x26f8>
    29e4:	cmp	w0, #0x0
    29e8:	csel	w1, w0, wzr, ge  // ge = tcont
    29ec:	sub	w0, w0, w1
    29f0:	str	w20, [x3, w0, sxtw #2]
    29f4:	b	296c <grub_mod_fini+0x266c>
    29f8:	ldr	w4, [x1, x2, lsl #2]
    29fc:	str	w4, [x3, x2, lsl #2]
    2a00:	sub	x2, x2, #0x1
    2a04:	b	29dc <grub_mod_fini+0x26dc>
    2a08:	mov	w0, #0x0                   	// #0
    2a0c:	b	2948 <grub_mod_fini+0x2648>
    2a10:	stp	x29, x30, [sp, #-64]!
    2a14:	mov	x29, sp
    2a18:	stp	x19, x20, [sp, #16]
    2a1c:	mov	x19, x1
    2a20:	mov	x20, x0
    2a24:	mov	w1, w2
    2a28:	stp	x21, x22, [sp, #32]
    2a2c:	mov	w22, w3
    2a30:	mov	w21, w4
    2a34:	str	x23, [sp, #48]
    2a38:	mov	x0, x19
    2a3c:	bl	1240 <grub_mod_fini+0xf40>
    2a40:	cbz	w0, 2a4c <grub_mod_fini+0x274c>
    2a44:	mov	w0, #0x0                   	// #0
    2a48:	b	2a8c <grub_mod_fini+0x278c>
    2a4c:	ldr	x0, [x20]
    2a50:	sbfiz	x23, x1, #4, #32
    2a54:	add	x2, x0, w1, sxtw #4
    2a58:	ldrb	w2, [x2, #8]
    2a5c:	cmp	w2, w21
    2a60:	b.ne	2aa0 <grub_mod_fini+0x27a0>  // b.any
    2a64:	ldr	w0, [x0, x23]
    2a68:	cmp	w0, w22
    2a6c:	b.ne	2aa0 <grub_mod_fini+0x27a0>  // b.any
    2a70:	cmp	w21, #0x9
    2a74:	b.ne	2a44 <grub_mod_fini+0x2744>  // b.any
    2a78:	mov	x0, x19
    2a7c:	bl	2928 <grub_mod_fini+0x2628>
    2a80:	tst	w0, #0xff
    2a84:	b.ne	2a44 <grub_mod_fini+0x2744>  // b.any
    2a88:	mov	w0, #0xc                   	// #12
    2a8c:	ldp	x19, x20, [sp, #16]
    2a90:	ldp	x21, x22, [sp, #32]
    2a94:	ldr	x23, [sp, #48]
    2a98:	ldp	x29, x30, [sp], #64
    2a9c:	ret
    2aa0:	mov	x0, x19
    2aa4:	bl	2928 <grub_mod_fini+0x2628>
    2aa8:	tst	w0, #0xff
    2aac:	b.eq	2a88 <grub_mod_fini+0x2788>  // b.none
    2ab0:	ldr	x0, [x20, #40]
    2ab4:	add	x0, x0, x23
    2ab8:	ldr	w1, [x0, #4]
    2abc:	cbz	w1, 2a44 <grub_mod_fini+0x2744>
    2ac0:	cmp	w1, #0x2
    2ac4:	b.eq	2adc <grub_mod_fini+0x27dc>  // b.none
    2ac8:	ldr	x0, [x20, #40]
    2acc:	add	x23, x0, x23
    2ad0:	ldr	x0, [x23, #8]
    2ad4:	ldr	w1, [x0]
    2ad8:	b	2a38 <grub_mod_fini+0x2738>
    2adc:	ldr	x0, [x0, #8]
    2ae0:	mov	w4, w21
    2ae4:	mov	w3, w22
    2ae8:	mov	x1, x19
    2aec:	ldr	w2, [x0, #4]
    2af0:	mov	x0, x20
    2af4:	bl	2a10 <grub_mod_fini+0x2710>
    2af8:	cbz	w0, 2ac8 <grub_mod_fini+0x27c8>
    2afc:	b	2a8c <grub_mod_fini+0x278c>
    2b00:	stp	x29, x30, [sp, #-80]!
    2b04:	mov	x29, sp
    2b08:	stp	x19, x20, [sp, #16]
    2b0c:	mov	x20, x0
    2b10:	mov	w19, w2
    2b14:	stp	x21, x22, [sp, #32]
    2b18:	mov	w22, w4
    2b1c:	stp	x23, x24, [sp, #48]
    2b20:	mov	w24, w3
    2b24:	stp	x25, x26, [sp, #64]
    2b28:	sxtw	x25, w1
    2b2c:	ldr	x3, [x20]
    2b30:	sbfiz	x26, x1, #4, #32
    2b34:	sxtw	x21, w19
    2b38:	ldr	x0, [x20, #40]
    2b3c:	add	x4, x3, w1, sxtw #4
    2b40:	ldrb	w2, [x4, #8]
    2b44:	cmp	w2, #0x4
    2b48:	b.ne	2bcc <grub_mod_fini+0x28cc>  // b.any
    2b4c:	ldr	x1, [x20, #24]
    2b50:	add	x0, x0, x21, lsl #4
    2b54:	lsl	x25, x25, #2
    2b58:	mov	w2, w22
    2b5c:	lsl	x26, x21, #4
    2b60:	ldr	w23, [x1, x25]
    2b64:	str	wzr, [x0, #4]
    2b68:	mov	x0, x20
    2b6c:	mov	w1, w23
    2b70:	bl	1ea0 <grub_mod_fini+0x1ba0>
    2b74:	mov	w19, w0
    2b78:	cmn	w0, #0x1
    2b7c:	b.ne	2ba0 <grub_mod_fini+0x28a0>  // b.any
    2b80:	mov	w2, #0xc                   	// #12
    2b84:	mov	w0, w2
    2b88:	ldp	x19, x20, [sp, #16]
    2b8c:	ldp	x21, x22, [sp, #32]
    2b90:	ldp	x23, x24, [sp, #48]
    2b94:	ldp	x25, x26, [sp, #64]
    2b98:	ldp	x29, x30, [sp], #80
    2b9c:	ret
    2ba0:	ldr	x0, [x20, #24]
    2ba4:	ldr	w1, [x0, x25]
    2ba8:	str	w1, [x0, x21, lsl #2]
    2bac:	mov	w1, w19
    2bb0:	ldr	x0, [x20, #40]
    2bb4:	add	x0, x0, x26
    2bb8:	bl	2928 <grub_mod_fini+0x2628>
    2bbc:	tst	w0, #0xff
    2bc0:	b.eq	2b80 <grub_mod_fini+0x2880>  // b.none
    2bc4:	mov	w1, w23
    2bc8:	b	2b28 <grub_mod_fini+0x2828>
    2bcc:	add	x5, x0, x26
    2bd0:	ldr	w2, [x5, #4]
    2bd4:	cbnz	w2, 2be8 <grub_mod_fini+0x28e8>
    2bd8:	ldr	x0, [x20, #24]
    2bdc:	ldr	w1, [x0, x25, lsl #2]
    2be0:	str	w1, [x0, x21, lsl #2]
    2be4:	b	2b84 <grub_mod_fini+0x2884>
    2be8:	ldr	x5, [x5, #8]
    2bec:	add	x0, x0, x21, lsl #4
    2bf0:	lsl	x25, x21, #4
    2bf4:	cmp	w2, #0x1
    2bf8:	ldr	w23, [x5]
    2bfc:	str	wzr, [x0, #4]
    2c00:	b.ne	2c60 <grub_mod_fini+0x2960>  // b.any
    2c04:	cmp	w1, w24
    2c08:	ccmp	w1, w19, #0x4, eq  // eq = none
    2c0c:	b.eq	2c28 <grub_mod_fini+0x2928>  // b.none
    2c10:	mov	w1, w23
    2c14:	bl	2928 <grub_mod_fini+0x2628>
    2c18:	mov	w2, #0x0                   	// #0
    2c1c:	tst	w0, #0xff
    2c20:	b.ne	2b84 <grub_mod_fini+0x2884>  // b.any
    2c24:	b	2b80 <grub_mod_fini+0x2880>
    2c28:	ldr	w0, [x4, #8]
    2c2c:	ubfx	x0, x0, #8, #10
    2c30:	orr	w22, w22, w0
    2c34:	mov	w2, w22
    2c38:	mov	w1, w23
    2c3c:	mov	x0, x20
    2c40:	bl	1ea0 <grub_mod_fini+0x1ba0>
    2c44:	mov	w19, w0
    2c48:	cmn	w0, #0x1
    2c4c:	b.eq	2b80 <grub_mod_fini+0x2880>  // b.none
    2c50:	mov	w1, w0
    2c54:	ldr	x0, [x20, #40]
    2c58:	add	x0, x0, x25
    2c5c:	b	2bb8 <grub_mod_fini+0x28b8>
    2c60:	ldr	x1, [x20, #16]
    2c64:	sub	w1, w1, #0x1
    2c68:	sxtw	x1, w1
    2c6c:	add	x2, x3, x1, lsl #4
    2c70:	ldrb	w4, [x2, #10]
    2c74:	tbz	w4, #2, 2c80 <grub_mod_fini+0x2980>
    2c78:	cmp	w1, #0x0
    2c7c:	b.gt	2ce8 <grub_mod_fini+0x29e8>
    2c80:	mov	w2, w22
    2c84:	mov	w1, w23
    2c88:	mov	x0, x20
    2c8c:	bl	1ea0 <grub_mod_fini+0x1ba0>
    2c90:	mov	w19, w0
    2c94:	cmn	w0, #0x1
    2c98:	b.eq	2b80 <grub_mod_fini+0x2880>  // b.none
    2c9c:	ldr	x0, [x20, #40]
    2ca0:	mov	w1, w19
    2ca4:	add	x0, x0, x25
    2ca8:	bl	2928 <grub_mod_fini+0x2628>
    2cac:	tst	w0, #0xff
    2cb0:	b.eq	2b80 <grub_mod_fini+0x2880>  // b.none
    2cb4:	mov	w2, w19
    2cb8:	mov	w4, w22
    2cbc:	mov	w3, w24
    2cc0:	mov	w1, w23
    2cc4:	mov	x0, x20
    2cc8:	bl	2b00 <grub_mod_fini+0x2800>
    2ccc:	mov	w2, w0
    2cd0:	cbnz	w0, 2b84 <grub_mod_fini+0x2884>
    2cd4:	ldr	x0, [x20, #40]
    2cd8:	add	x26, x0, x26
    2cdc:	ldr	x0, [x26, #8]
    2ce0:	ldr	w23, [x0, #4]
    2ce4:	b	2c34 <grub_mod_fini+0x2934>
    2ce8:	ldr	x4, [x20, #32]
    2cec:	ldr	w4, [x4, x1, lsl #2]
    2cf0:	cmp	w23, w4
    2cf4:	b.ne	2d08 <grub_mod_fini+0x2a08>  // b.any
    2cf8:	ldr	w2, [x2, #8]
    2cfc:	ubfx	x2, x2, #8, #10
    2d00:	cmp	w22, w2
    2d04:	b.eq	2d10 <grub_mod_fini+0x2a10>  // b.none
    2d08:	sub	x1, x1, #0x1
    2d0c:	b	2c6c <grub_mod_fini+0x296c>
    2d10:	bl	2928 <grub_mod_fini+0x2628>
    2d14:	tst	w0, #0xff
    2d18:	b.ne	2cd4 <grub_mod_fini+0x29d4>  // b.any
    2d1c:	b	2b80 <grub_mod_fini+0x2880>
    2d20:	stp	x29, x30, [sp, #-64]!
    2d24:	mov	x29, sp
    2d28:	stp	x23, x24, [sp, #48]
    2d2c:	mov	x24, x1
    2d30:	stp	x19, x20, [sp, #16]
    2d34:	mov	x20, x1
    2d38:	ldr	w1, [x1, #12]
    2d3c:	stp	x21, x22, [sp, #32]
    2d40:	mov	w19, w2
    2d44:	mov	x21, x0
    2d48:	str	w2, [x24], #24
    2d4c:	mov	x0, x24
    2d50:	bl	1b24 <grub_mod_fini+0x1824>
    2d54:	cbz	w0, 2e0c <grub_mod_fini+0x2b0c>
    2d58:	mov	w22, #0xc                   	// #12
    2d5c:	mov	w0, w22
    2d60:	ldp	x19, x20, [sp, #16]
    2d64:	ldp	x21, x22, [sp, #32]
    2d68:	ldp	x23, x24, [sp, #48]
    2d6c:	ldp	x29, x30, [sp], #64
    2d70:	ret
    2d74:	ldr	x0, [x20, #16]
    2d78:	ldr	w1, [x0, x23, lsl #2]
    2d7c:	ldr	x0, [x21]
    2d80:	add	x0, x0, w1, sxtw #4
    2d84:	ldrb	w0, [x0, #8]
    2d88:	tbz	w0, #3, 2df8 <grub_mod_fini+0x2af8>
    2d8c:	add	x23, x23, #0x1
    2d90:	ldr	w0, [x20, #12]
    2d94:	cmp	w0, w23
    2d98:	b.gt	2d74 <grub_mod_fini+0x2a74>
    2d9c:	ldr	w2, [x21, #132]
    2da0:	ldr	x23, [x21, #64]
    2da4:	and	w19, w19, w2
    2da8:	lsl	x24, x19, #4
    2dac:	add	x19, x23, x19, lsl #4
    2db0:	ldr	w21, [x23, x24]
    2db4:	ldr	w0, [x19, #4]
    2db8:	cmp	w0, w21
    2dbc:	b.gt	2de0 <grub_mod_fini+0x2ae0>
    2dc0:	add	w21, w21, #0x1
    2dc4:	ldr	x0, [x19, #8]
    2dc8:	lsl	w21, w21, #1
    2dcc:	sbfiz	x1, x21, #3, #32
    2dd0:	bl	0 <grub_realloc>
    2dd4:	cbz	x0, 2d58 <grub_mod_fini+0x2a58>
    2dd8:	str	w21, [x19, #4]
    2ddc:	str	x0, [x19, #8]
    2de0:	ldr	w0, [x23, x24]
    2de4:	ldr	x1, [x19, #8]
    2de8:	add	w2, w0, #0x1
    2dec:	str	w2, [x23, x24]
    2df0:	str	x20, [x1, w0, sxtw #3]
    2df4:	b	2d5c <grub_mod_fini+0x2a5c>
    2df8:	mov	x0, x24
    2dfc:	bl	1a5c <grub_mod_fini+0x175c>
    2e00:	tst	w0, #0xff
    2e04:	b.ne	2d8c <grub_mod_fini+0x2a8c>  // b.any
    2e08:	b	2d58 <grub_mod_fini+0x2a58>
    2e0c:	mov	w22, w0
    2e10:	mov	x23, #0x0                   	// #0
    2e14:	b	2d90 <grub_mod_fini+0x2a90>
    2e18:	stp	x29, x30, [sp, #-48]!
    2e1c:	mov	x29, sp
    2e20:	stp	x19, x20, [sp, #16]
    2e24:	stp	x21, x22, [sp, #32]
    2e28:	cbnz	x1, 2e34 <grub_mod_fini+0x2b34>
    2e2c:	mov	w20, #0x0                   	// #0
    2e30:	b	2e98 <grub_mod_fini+0x2b98>
    2e34:	mov	x19, x0
    2e38:	ldr	w0, [x1, #4]
    2e3c:	mov	x21, x1
    2e40:	cbz	w0, 2e2c <grub_mod_fini+0x2b2c>
    2e44:	ldp	w20, w1, [x19]
    2e48:	add	w1, w1, w0, lsl #1
    2e4c:	cmp	w20, w1
    2e50:	b.ge	2e74 <grub_mod_fini+0x2b74>  // b.tcont
    2e54:	add	w0, w0, w20
    2e58:	lsl	w20, w0, #1
    2e5c:	ldr	x0, [x19, #8]
    2e60:	sbfiz	x1, x20, #2, #32
    2e64:	bl	0 <grub_realloc>
    2e68:	cbz	x0, 2f80 <grub_mod_fini+0x2c80>
    2e6c:	str	w20, [x19]
    2e70:	str	x0, [x19, #8]
    2e74:	ldr	w20, [x19, #4]
    2e78:	ldr	w2, [x21, #4]
    2e7c:	cbnz	w20, 2eac <grub_mod_fini+0x2bac>
    2e80:	ldr	x1, [x21, #8]
    2e84:	str	w2, [x19, #4]
    2e88:	ldr	x0, [x19, #8]
    2e8c:	ldrsw	x2, [x21, #4]
    2e90:	lsl	x2, x2, #2
    2e94:	bl	1c70 <grub_mod_fini+0x1970>
    2e98:	mov	w0, w20
    2e9c:	ldp	x19, x20, [sp, #16]
    2ea0:	ldp	x21, x22, [sp, #32]
    2ea4:	ldp	x29, x30, [sp], #48
    2ea8:	ret
    2eac:	add	w22, w20, w2, lsl #1
    2eb0:	sub	w2, w2, #0x1
    2eb4:	sub	w20, w20, #0x1
    2eb8:	b	2ee4 <grub_mod_fini+0x2be4>
    2ebc:	ldr	x0, [x19, #8]
    2ec0:	ldr	x1, [x21, #8]
    2ec4:	ldr	w3, [x0, w20, sxtw #2]
    2ec8:	ldr	w1, [x1, w2, sxtw #2]
    2ecc:	cmp	w3, w1
    2ed0:	b.eq	2eb0 <grub_mod_fini+0x2bb0>  // b.none
    2ed4:	b.ge	2eb4 <grub_mod_fini+0x2bb4>  // b.tcont
    2ed8:	sub	w22, w22, #0x1
    2edc:	sub	w2, w2, #0x1
    2ee0:	str	w1, [x0, w22, sxtw #2]
    2ee4:	cmp	w2, #0x0
    2ee8:	ccmp	w20, #0x0, #0x1, ge  // ge = tcont
    2eec:	b.ge	2ebc <grub_mod_fini+0x2bbc>  // b.tcont
    2ef0:	tbnz	w2, #31, 2f10 <grub_mod_fini+0x2c10>
    2ef4:	ldr	x0, [x19, #8]
    2ef8:	add	w2, w2, #0x1
    2efc:	ldr	x1, [x21, #8]
    2f00:	sub	w22, w22, w2
    2f04:	sbfiz	x2, x2, #2, #32
    2f08:	add	x0, x0, w22, sxtw #2
    2f0c:	bl	1c70 <grub_mod_fini+0x1970>
    2f10:	ldr	w0, [x19, #4]
    2f14:	ldr	w2, [x21, #4]
    2f18:	add	w2, w0, w2, lsl #1
    2f1c:	sub	w4, w2, #0x1
    2f20:	subs	w2, w2, w22
    2f24:	b.eq	2e2c <grub_mod_fini+0x2b2c>  // b.none
    2f28:	sub	w1, w0, #0x1
    2f2c:	add	w0, w0, w2
    2f30:	str	w0, [x19, #4]
    2f34:	ldr	x0, [x19, #8]
    2f38:	add	w3, w1, w2
    2f3c:	ldr	w6, [x0, w4, sxtw #2]
    2f40:	ldr	w5, [x0, w1, sxtw #2]
    2f44:	sbfiz	x3, x3, #2, #32
    2f48:	cmp	w6, w5
    2f4c:	b.le	2f64 <grub_mod_fini+0x2c64>
    2f50:	str	w6, [x0, x3]
    2f54:	sub	w4, w4, #0x1
    2f58:	subs	w2, w2, #0x1
    2f5c:	b.ne	2f38 <grub_mod_fini+0x2c38>  // b.any
    2f60:	b	2e2c <grub_mod_fini+0x2b2c>
    2f64:	str	w5, [x0, x3]
    2f68:	subs	w1, w1, #0x1
    2f6c:	b.pl	2f38 <grub_mod_fini+0x2c38>  // b.nfrst
    2f70:	sbfiz	x2, x2, #2, #32
    2f74:	add	x1, x0, w22, sxtw #2
    2f78:	bl	1c70 <grub_mod_fini+0x1970>
    2f7c:	b	2e2c <grub_mod_fini+0x2b2c>
    2f80:	mov	w20, #0xc                   	// #12
    2f84:	b	2e98 <grub_mod_fini+0x2b98>
    2f88:	stp	x29, x30, [sp, #-32]!
    2f8c:	mov	x29, sp
    2f90:	stp	x19, x20, [sp, #16]
    2f94:	mov	x20, x1
    2f98:	ldr	w1, [x1, #4]
    2f9c:	str	w1, [x0, #4]
    2fa0:	cmp	w1, #0x0
    2fa4:	b.le	2fec <grub_mod_fini+0x2cec>
    2fa8:	mov	x19, x0
    2fac:	sbfiz	x0, x1, #2, #32
    2fb0:	str	w1, [x19]
    2fb4:	bl	0 <grub_malloc>
    2fb8:	str	x0, [x19, #8]
    2fbc:	cbnz	x0, 2fd4 <grub_mod_fini+0x2cd4>
    2fc0:	mov	w0, #0xc                   	// #12
    2fc4:	str	xzr, [x19]
    2fc8:	ldp	x19, x20, [sp, #16]
    2fcc:	ldp	x29, x30, [sp], #32
    2fd0:	ret
    2fd4:	ldr	x1, [x20, #8]
    2fd8:	ldrsw	x2, [x20, #4]
    2fdc:	lsl	x2, x2, #2
    2fe0:	bl	1c70 <grub_mod_fini+0x1970>
    2fe4:	mov	w0, #0x0                   	// #0
    2fe8:	b	2fc8 <grub_mod_fini+0x2cc8>
    2fec:	mov	x2, #0x10                  	// #16
    2ff0:	mov	w1, #0x0                   	// #0
    2ff4:	bl	0 <grub_memset>
    2ff8:	b	2fe4 <grub_mod_fini+0x2ce4>
    2ffc:	stp	x29, x30, [sp, #-64]!
    3000:	mov	x29, sp
    3004:	stp	x19, x20, [sp, #16]
    3008:	mov	x19, x2
    300c:	stp	x21, x22, [sp, #32]
    3010:	mov	x21, x0
    3014:	stp	x23, x24, [sp, #48]
    3018:	cbz	x1, 30c8 <grub_mod_fini+0x2dc8>
    301c:	ldr	w0, [x1, #4]
    3020:	mov	x22, x1
    3024:	cmp	w0, #0x0
    3028:	b.le	30c8 <grub_mod_fini+0x2dc8>
    302c:	cbz	x2, 30ac <grub_mod_fini+0x2dac>
    3030:	ldr	w1, [x2, #4]
    3034:	cmp	w1, #0x0
    3038:	b.le	30ac <grub_mod_fini+0x2dac>
    303c:	add	w0, w0, w1
    3040:	str	w0, [x21]
    3044:	sbfiz	x0, x0, #2, #32
    3048:	bl	0 <grub_malloc>
    304c:	str	x0, [x21, #8]
    3050:	mov	x3, x0
    3054:	cbz	x0, 313c <grub_mod_fini+0x2e3c>
    3058:	mov	x4, #0x0                   	// #0
    305c:	mov	w20, #0x0                   	// #0
    3060:	mov	w23, #0x0                   	// #0
    3064:	ldr	w5, [x22, #4]
    3068:	mov	w24, w4
    306c:	ldr	w2, [x19, #4]
    3070:	cmp	w5, w23
    3074:	b.le	3144 <grub_mod_fini+0x2e44>
    3078:	ldr	x6, [x22, #8]
    307c:	sbfiz	x7, x23, #2, #32
    3080:	add	x0, x3, x4, lsl #2
    3084:	cmp	w2, w20
    3088:	add	x1, x6, w23, sxtw #2
    308c:	b.gt	3108 <grub_mod_fini+0x2e08>
    3090:	sub	w2, w5, w23
    3094:	sbfiz	x2, x2, #2, #32
    3098:	bl	1c70 <grub_mod_fini+0x1970>
    309c:	ldr	w0, [x22, #4]
    30a0:	sub	w23, w0, w23
    30a4:	add	w24, w24, w23
    30a8:	b	3170 <grub_mod_fini+0x2e70>
    30ac:	mov	x1, x22
    30b0:	mov	x0, x21
    30b4:	ldp	x19, x20, [sp, #16]
    30b8:	ldp	x21, x22, [sp, #32]
    30bc:	ldp	x23, x24, [sp, #48]
    30c0:	ldp	x29, x30, [sp], #64
    30c4:	b	2f88 <grub_mod_fini+0x2c88>
    30c8:	cbz	x19, 30e0 <grub_mod_fini+0x2de0>
    30cc:	ldr	w0, [x19, #4]
    30d0:	cmp	w0, #0x0
    30d4:	b.le	30e0 <grub_mod_fini+0x2de0>
    30d8:	mov	x1, x19
    30dc:	b	30b0 <grub_mod_fini+0x2db0>
    30e0:	mov	x0, x21
    30e4:	mov	x2, #0x10                  	// #16
    30e8:	mov	w1, #0x0                   	// #0
    30ec:	bl	0 <grub_memset>
    30f0:	mov	w0, #0x0                   	// #0
    30f4:	ldp	x19, x20, [sp, #16]
    30f8:	ldp	x21, x22, [sp, #32]
    30fc:	ldp	x23, x24, [sp, #48]
    3100:	ldp	x29, x30, [sp], #64
    3104:	ret
    3108:	ldr	x1, [x19, #8]
    310c:	ldr	w0, [x6, x7]
    3110:	ldr	w1, [x1, w20, sxtw #2]
    3114:	cmp	w0, w1
    3118:	b.le	312c <grub_mod_fini+0x2e2c>
    311c:	add	w20, w20, #0x1
    3120:	str	w1, [x3, x4, lsl #2]
    3124:	add	x4, x4, #0x1
    3128:	b	3064 <grub_mod_fini+0x2d64>
    312c:	cinc	w20, w20, eq  // eq = none
    3130:	add	w23, w23, #0x1
    3134:	str	w0, [x3, x4, lsl #2]
    3138:	b	3124 <grub_mod_fini+0x2e24>
    313c:	mov	w0, #0xc                   	// #12
    3140:	b	30f4 <grub_mod_fini+0x2df4>
    3144:	cmp	w2, w20
    3148:	b.le	3170 <grub_mod_fini+0x2e70>
    314c:	ldr	x1, [x19, #8]
    3150:	sub	w2, w2, w20
    3154:	add	x0, x3, w24, sxtw #2
    3158:	sbfiz	x2, x2, #2, #32
    315c:	add	x1, x1, w20, sxtw #2
    3160:	bl	1c70 <grub_mod_fini+0x1970>
    3164:	ldr	w0, [x19, #4]
    3168:	sub	w20, w0, w20
    316c:	add	w24, w24, w20
    3170:	str	w24, [x21, #4]
    3174:	b	30f0 <grub_mod_fini+0x2df0>
    3178:	stp	x29, x30, [sp, #-112]!
    317c:	mov	x29, sp
    3180:	stp	x21, x22, [sp, #32]
    3184:	mov	x21, x1
    3188:	ldr	w1, [x2, #4]
    318c:	stp	x19, x20, [sp, #16]
    3190:	stp	x23, x24, [sp, #48]
    3194:	mov	x23, x0
    3198:	stp	x25, x26, [sp, #64]
    319c:	stp	x27, x28, [sp, #80]
    31a0:	cbnz	w1, 31b0 <grub_mod_fini+0x2eb0>
    31a4:	str	wzr, [x0]
    31a8:	mov	x19, #0x0                   	// #0
    31ac:	b	32c4 <grub_mod_fini+0x2fc4>
    31b0:	mov	x28, x2
    31b4:	mov	w20, w3
    31b8:	add	w22, w1, w3
    31bc:	mov	x0, #0x0                   	// #0
    31c0:	cmp	w1, w0
    31c4:	b.gt	3228 <grub_mod_fini+0x2f28>
    31c8:	ldr	w0, [x21, #132]
    31cc:	mov	x8, #0x0                   	// #0
    31d0:	ldr	x1, [x21, #64]
    31d4:	and	w0, w22, w0
    31d8:	lsl	x2, x0, #4
    31dc:	add	x7, x1, x0, lsl #4
    31e0:	ldr	w9, [x1, x2]
    31e4:	cmp	w9, w8
    31e8:	b.gt	323c <grub_mod_fini+0x2f3c>
    31ec:	mov	x0, #0x58                  	// #88
    31f0:	bl	0 <grub_zalloc>
    31f4:	mov	x19, x0
    31f8:	cbz	x0, 321c <grub_mod_fini+0x2f1c>
    31fc:	add	x24, x0, #0x8
    3200:	mov	x1, x28
    3204:	mov	x0, x24
    3208:	bl	2f88 <grub_mod_fini+0x2c88>
    320c:	mov	w6, w0
    3210:	cbz	w0, 327c <grub_mod_fini+0x2f7c>
    3214:	mov	x0, x19
    3218:	bl	0 <grub_free>
    321c:	mov	w0, #0xc                   	// #12
    3220:	str	w0, [x23]
    3224:	b	31a8 <grub_mod_fini+0x2ea8>
    3228:	ldr	x2, [x28, #8]
    322c:	ldr	w2, [x2, x0, lsl #2]
    3230:	add	x0, x0, #0x1
    3234:	add	w22, w22, w2
    3238:	b	31c0 <grub_mod_fini+0x2ec0>
    323c:	ldr	x0, [x7, #8]
    3240:	ldr	x19, [x0, x8, lsl #3]
    3244:	ldr	w0, [x19]
    3248:	cmp	w0, w22
    324c:	b.ne	3274 <grub_mod_fini+0x2f74>  // b.any
    3250:	ldrb	w0, [x19, #80]
    3254:	and	w0, w0, #0xf
    3258:	cmp	w0, w20
    325c:	b.ne	3274 <grub_mod_fini+0x2f74>  // b.any
    3260:	ldr	x0, [x19, #56]
    3264:	mov	x1, x28
    3268:	bl	11dc <grub_mod_fini+0xedc>
    326c:	tst	w0, #0xff
    3270:	b.ne	32c4 <grub_mod_fini+0x2fc4>  // b.any
    3274:	add	x8, x8, #0x1
    3278:	b	31e4 <grub_mod_fini+0x2ee4>
    327c:	ldrb	w0, [x19, #80]
    3280:	and	w27, w20, #0x2
    3284:	mov	x25, #0x0                   	// #0
    3288:	str	x24, [x19, #56]
    328c:	bfxil	w0, w20, #0, #4
    3290:	strb	w0, [x19, #80]
    3294:	and	w0, w20, #0x4
    3298:	and	w20, w20, #0x1
    329c:	str	w0, [sp, #108]
    32a0:	ldr	w0, [x28, #4]
    32a4:	str	w25, [sp, #104]
    32a8:	cmp	w0, w25
    32ac:	b.gt	32e4 <grub_mod_fini+0x2fe4>
    32b0:	mov	w2, w22
    32b4:	mov	x1, x19
    32b8:	mov	x0, x21
    32bc:	bl	2d20 <grub_mod_fini+0x2a20>
    32c0:	cbnz	w0, 3358 <grub_mod_fini+0x3058>
    32c4:	mov	x0, x19
    32c8:	ldp	x19, x20, [sp, #16]
    32cc:	ldp	x21, x22, [sp, #32]
    32d0:	ldp	x23, x24, [sp, #48]
    32d4:	ldp	x25, x26, [sp, #64]
    32d8:	ldp	x27, x28, [sp, #80]
    32dc:	ldp	x29, x30, [sp], #112
    32e0:	ret
    32e4:	ldr	x0, [x28, #8]
    32e8:	ldr	x1, [x21]
    32ec:	ldrsw	x0, [x0, x25, lsl #2]
    32f0:	add	x0, x1, x0, lsl #4
    32f4:	ldr	w2, [x0, #8]
    32f8:	ldrb	w1, [x0, #8]
    32fc:	ubfx	x26, x2, #8, #10
    3300:	cmp	w26, #0x0
    3304:	ccmp	w1, #0x1, #0x0, eq  // eq = none
    3308:	b.eq	33c8 <grub_mod_fini+0x30c8>  // b.none
    330c:	ldrb	w3, [x19, #80]
    3310:	cmp	w1, #0x2
    3314:	ldrb	w0, [x0, #10]
    3318:	ubfx	x5, x3, #5, #1
    331c:	ubfx	x0, x0, #4, #1
    3320:	orr	w0, w5, w0
    3324:	bfi	w3, w0, #5, #1
    3328:	strb	w3, [x19, #80]
    332c:	b.ne	3364 <grub_mod_fini+0x3064>  // b.any
    3330:	orr	w3, w3, #0x10
    3334:	strb	w3, [x19, #80]
    3338:	cbz	w26, 33c8 <grub_mod_fini+0x30c8>
    333c:	ldr	x0, [x19, #56]
    3340:	cmp	x24, x0
    3344:	b.ne	3390 <grub_mod_fini+0x3090>  // b.any
    3348:	mov	x0, #0x10                  	// #16
    334c:	bl	0 <grub_malloc>
    3350:	str	x0, [x19, #56]
    3354:	cbnz	x0, 3374 <grub_mod_fini+0x3074>
    3358:	mov	x0, x19
    335c:	bl	1f2c <grub_mod_fini+0x1c2c>
    3360:	b	321c <grub_mod_fini+0x2f1c>
    3364:	cmp	w1, #0x4
    3368:	b.ne	3338 <grub_mod_fini+0x3038>  // b.any
    336c:	orr	w3, w3, #0x40
    3370:	b	3334 <grub_mod_fini+0x3034>
    3374:	mov	x1, x28
    3378:	bl	2f88 <grub_mod_fini+0x2c88>
    337c:	mov	w6, w0
    3380:	cbnz	w0, 321c <grub_mod_fini+0x2f1c>
    3384:	ldrb	w0, [x19, #80]
    3388:	orr	w0, w0, #0xffffff80
    338c:	strb	w0, [x19, #80]
    3390:	tbz	w26, #0, 3398 <grub_mod_fini+0x3098>
    3394:	cbz	w20, 33b4 <grub_mod_fini+0x30b4>
    3398:	tbz	w26, #1, 33a0 <grub_mod_fini+0x30a0>
    339c:	cbnz	w20, 33b4 <grub_mod_fini+0x30b4>
    33a0:	tbz	w26, #4, 33a8 <grub_mod_fini+0x30a8>
    33a4:	cbz	w27, 33b4 <grub_mod_fini+0x30b4>
    33a8:	tbz	w26, #6, 33c8 <grub_mod_fini+0x30c8>
    33ac:	ldr	w0, [sp, #108]
    33b0:	cbnz	w0, 33c8 <grub_mod_fini+0x30c8>
    33b4:	ldr	w0, [sp, #104]
    33b8:	sub	w1, w0, w6
    33bc:	mov	x0, x24
    33c0:	bl	24d0 <grub_mod_fini+0x21d0>
    33c4:	add	w6, w6, #0x1
    33c8:	add	x25, x25, #0x1
    33cc:	b	32a0 <grub_mod_fini+0x2fa0>
    33d0:	stp	x29, x30, [sp, #-48]!
    33d4:	mov	x29, sp
    33d8:	stp	x19, x20, [sp, #16]
    33dc:	mov	x20, x0
    33e0:	ldr	w0, [x1, #4]
    33e4:	stp	x21, x22, [sp, #32]
    33e8:	cbz	w0, 350c <grub_mod_fini+0x320c>
    33ec:	ldr	w19, [x2, #4]
    33f0:	mov	x22, x2
    33f4:	cbz	w19, 3508 <grub_mod_fini+0x3208>
    33f8:	add	w19, w0, w19
    33fc:	mov	x21, x1
    3400:	ldp	w0, w1, [x20]
    3404:	add	w1, w19, w1
    3408:	cmp	w1, w0
    340c:	b.le	342c <grub_mod_fini+0x312c>
    3410:	add	w19, w19, w0
    3414:	ldr	x0, [x20, #8]
    3418:	sbfiz	x1, x19, #2, #32
    341c:	bl	0 <grub_realloc>
    3420:	cbz	x0, 3544 <grub_mod_fini+0x3244>
    3424:	str	w19, [x20]
    3428:	str	x0, [x20, #8]
    342c:	ldr	w5, [x20, #4]
    3430:	ldr	w0, [x21, #4]
    3434:	ldr	w3, [x22, #4]
    3438:	add	w4, w5, w0
    343c:	sub	w0, w0, #0x1
    3440:	ldr	x7, [x21, #8]
    3444:	add	w4, w4, w3
    3448:	ldr	x8, [x22, #8]
    344c:	sub	w5, w5, #0x1
    3450:	sub	w3, w3, #0x1
    3454:	ldr	w1, [x7, w0, sxtw #2]
    3458:	ldr	w2, [x8, w3, sxtw #2]
    345c:	cmp	w1, w2
    3460:	b.ne	3524 <grub_mod_fini+0x3224>  // b.any
    3464:	ldr	x6, [x20, #8]
    3468:	sbfiz	x2, x5, #2, #32
    346c:	tbnz	w5, #31, 3484 <grub_mod_fini+0x3184>
    3470:	ldr	w9, [x6, x2]
    3474:	sub	x2, x2, #0x4
    3478:	cmp	w1, w9
    347c:	b.lt	351c <grub_mod_fini+0x321c>  // b.tstop
    3480:	b.eq	348c <grub_mod_fini+0x318c>  // b.none
    3484:	sub	w4, w4, #0x1
    3488:	str	w1, [x6, w4, sxtw #2]
    348c:	subs	w0, w0, #0x1
    3490:	b.mi	349c <grub_mod_fini+0x319c>  // b.first
    3494:	subs	w3, w3, #0x1
    3498:	b.pl	3454 <grub_mod_fini+0x3154>  // b.nfrst
    349c:	ldr	w0, [x20, #4]
    34a0:	ldr	w3, [x21, #4]
    34a4:	ldr	w2, [x22, #4]
    34a8:	sub	w1, w0, #0x1
    34ac:	add	w3, w0, w3
    34b0:	add	w2, w3, w2
    34b4:	sub	w5, w2, #0x1
    34b8:	sub	w2, w2, w4
    34bc:	add	w0, w0, w2
    34c0:	str	w0, [x20, #4]
    34c4:	cmp	w2, #0x0
    34c8:	ccmp	w1, #0x0, #0x1, gt
    34cc:	ldr	x0, [x20, #8]
    34d0:	b.lt	34fc <grub_mod_fini+0x31fc>  // b.tstop
    34d4:	ldr	w7, [x0, w5, sxtw #2]
    34d8:	add	w3, w1, w2
    34dc:	ldr	w6, [x0, w1, sxtw #2]
    34e0:	sbfiz	x3, x3, #2, #32
    34e4:	cmp	w7, w6
    34e8:	b.le	3530 <grub_mod_fini+0x3230>
    34ec:	str	w7, [x0, x3]
    34f0:	sub	w5, w5, #0x1
    34f4:	subs	w2, w2, #0x1
    34f8:	b.ne	34d4 <grub_mod_fini+0x31d4>  // b.any
    34fc:	sbfiz	x2, x2, #2, #32
    3500:	add	x1, x0, w4, sxtw #2
    3504:	bl	1c70 <grub_mod_fini+0x1970>
    3508:	mov	w0, #0x0                   	// #0
    350c:	ldp	x19, x20, [sp, #16]
    3510:	ldp	x21, x22, [sp, #32]
    3514:	ldp	x29, x30, [sp], #48
    3518:	ret
    351c:	sub	w5, w5, #0x1
    3520:	b	346c <grub_mod_fini+0x316c>
    3524:	b.lt	3494 <grub_mod_fini+0x3194>  // b.tstop
    3528:	subs	w0, w0, #0x1
    352c:	b	3498 <grub_mod_fini+0x3198>
    3530:	str	w6, [x0, x3]
    3534:	sub	w1, w1, #0x1
    3538:	cmn	w1, #0x1
    353c:	b.ne	34d4 <grub_mod_fini+0x31d4>  // b.any
    3540:	b	34fc <grub_mod_fini+0x31fc>
    3544:	mov	w0, #0xc                   	// #12
    3548:	b	350c <grub_mod_fini+0x320c>
    354c:	stp	x29, x30, [sp, #-96]!
    3550:	mov	x29, sp
    3554:	stp	x19, x20, [sp, #16]
    3558:	mov	x20, x2
    355c:	mov	x2, #0x10                  	// #16
    3560:	ldr	x19, [x0, #56]
    3564:	stp	x21, x22, [sp, #32]
    3568:	mov	x21, x0
    356c:	add	x0, sp, #0x50
    3570:	stp	x23, x24, [sp, #48]
    3574:	add	x19, x19, w1, sxtw #4
    3578:	mov	w24, w1
    357c:	mov	x23, #0x0                   	// #0
    3580:	mov	w1, #0x0                   	// #0
    3584:	str	x25, [sp, #64]
    3588:	mov	x25, x3
    358c:	bl	0 <grub_memset>
    3590:	ldr	w0, [x19, #4]
    3594:	cmp	w0, w23
    3598:	b.gt	35bc <grub_mod_fini+0x32bc>
    359c:	mov	x6, #0x0                   	// #0
    35a0:	ldr	w0, [x19, #4]
    35a4:	cmp	w0, w6
    35a8:	b.gt	368c <grub_mod_fini+0x338c>
    35ac:	ldr	x0, [sp, #88]
    35b0:	mov	w22, #0x0                   	// #0
    35b4:	bl	0 <grub_free>
    35b8:	b	3660 <grub_mod_fini+0x3360>
    35bc:	ldr	x0, [x19, #8]
    35c0:	ldr	w0, [x0, x23, lsl #2]
    35c4:	cmp	w24, w0
    35c8:	b.eq	3684 <grub_mod_fini+0x3384>  // b.none
    35cc:	ldr	x1, [x21]
    35d0:	sbfiz	x7, x0, #4, #32
    35d4:	add	x0, x1, w0, sxtw #4
    35d8:	ldrb	w0, [x0, #8]
    35dc:	tbz	w0, #3, 3684 <grub_mod_fini+0x3384>
    35e0:	ldr	x0, [x21, #40]
    35e4:	add	x0, x0, x7
    35e8:	ldr	x2, [x0, #8]
    35ec:	ldr	w0, [x0, #4]
    35f0:	ldr	w1, [x2]
    35f4:	cmp	w0, #0x1
    35f8:	b.le	367c <grub_mod_fini+0x337c>
    35fc:	ldr	w6, [x2, #4]
    3600:	mov	x0, x19
    3604:	bl	1240 <grub_mod_fini+0xf40>
    3608:	cbnz	w0, 3618 <grub_mod_fini+0x3318>
    360c:	mov	x0, x20
    3610:	bl	1240 <grub_mod_fini+0xf40>
    3614:	cbnz	w0, 363c <grub_mod_fini+0x333c>
    3618:	cmp	w6, #0x0
    361c:	b.le	3684 <grub_mod_fini+0x3384>
    3620:	mov	w1, w6
    3624:	mov	x0, x19
    3628:	bl	1240 <grub_mod_fini+0xf40>
    362c:	cbnz	w0, 3684 <grub_mod_fini+0x3384>
    3630:	mov	x0, x20
    3634:	bl	1240 <grub_mod_fini+0xf40>
    3638:	cbz	w0, 3684 <grub_mod_fini+0x3384>
    363c:	ldr	x2, [x21, #56]
    3640:	mov	x1, x25
    3644:	add	x0, sp, #0x50
    3648:	add	x2, x2, x7
    364c:	bl	33d0 <grub_mod_fini+0x30d0>
    3650:	mov	w22, w0
    3654:	cbz	w0, 3684 <grub_mod_fini+0x3384>
    3658:	ldr	x0, [sp, #88]
    365c:	bl	0 <grub_free>
    3660:	mov	w0, w22
    3664:	ldp	x19, x20, [sp, #16]
    3668:	ldp	x21, x22, [sp, #32]
    366c:	ldp	x23, x24, [sp, #48]
    3670:	ldr	x25, [sp, #64]
    3674:	ldp	x29, x30, [sp], #96
    3678:	ret
    367c:	mov	w6, #0xffffffff            	// #-1
    3680:	b	3600 <grub_mod_fini+0x3300>
    3684:	add	x23, x23, #0x1
    3688:	b	3590 <grub_mod_fini+0x3290>
    368c:	ldr	x0, [x19, #8]
    3690:	ldr	w1, [x0, x6, lsl #2]
    3694:	add	x0, sp, #0x50
    3698:	bl	1240 <grub_mod_fini+0xf40>
    369c:	cbnz	w0, 36b4 <grub_mod_fini+0x33b4>
    36a0:	mov	x0, x20
    36a4:	bl	1240 <grub_mod_fini+0xf40>
    36a8:	sub	w1, w0, #0x1
    36ac:	mov	x0, x20
    36b0:	bl	24d0 <grub_mod_fini+0x21d0>
    36b4:	add	x6, x6, #0x1
    36b8:	b	35a0 <grub_mod_fini+0x32a0>
    36bc:	stp	x29, x30, [sp, #-32]!
    36c0:	mov	x29, sp
    36c4:	stp	x19, x20, [sp, #16]
    36c8:	mov	x19, x1
    36cc:	ldrb	w1, [x1, #48]
    36d0:	cmp	w1, #0x10
    36d4:	b.ne	36f4 <grub_mod_fini+0x33f4>  // b.any
    36d8:	ldr	x0, [x19, #8]
    36dc:	ldr	x1, [x0, #24]
    36e0:	ldr	w0, [x0, #56]
    36e4:	str	x1, [x19, #24]
    36e8:	str	w0, [x19, #56]
    36ec:	mov	w0, #0x0                   	// #0
    36f0:	b	373c <grub_mod_fini+0x343c>
    36f4:	ldp	x1, x2, [x19, #40]
    36f8:	str	x19, [x19, #24]
    36fc:	mov	x20, x0
    3700:	bl	1d00 <grub_mod_fini+0x1a00>
    3704:	str	w0, [x19, #56]
    3708:	cmn	w0, #0x1
    370c:	b.eq	3738 <grub_mod_fini+0x3438>  // b.none
    3710:	ldrb	w1, [x19, #48]
    3714:	cmp	w1, #0xc
    3718:	b.ne	36ec <grub_mod_fini+0x33ec>  // b.any
    371c:	ldr	x1, [x20]
    3720:	ldr	w2, [x19, #40]
    3724:	add	x0, x1, w0, sxtw #4
    3728:	ldr	w1, [x0, #8]
    372c:	bfi	w1, w2, #8, #10
    3730:	str	w1, [x0, #8]
    3734:	b	36ec <grub_mod_fini+0x33ec>
    3738:	mov	w0, #0xc                   	// #12
    373c:	ldp	x19, x20, [sp, #16]
    3740:	ldp	x29, x30, [sp], #32
    3744:	ret
    3748:	stp	x29, x30, [sp, #-128]!
    374c:	mov	x29, sp
    3750:	stp	x25, x26, [sp, #64]
    3754:	mov	x25, x0
    3758:	and	w26, w3, #0xff
    375c:	ldr	x0, [x1, #40]
    3760:	stp	x19, x20, [sp, #16]
    3764:	mov	x19, x1
    3768:	mov	w20, w2
    376c:	stp	x21, x22, [sp, #32]
    3770:	add	x0, x0, w2, sxtw #4
    3774:	sbfiz	x22, x2, #4, #32
    3778:	stp	x23, x24, [sp, #48]
    377c:	ldr	w1, [x0, #4]
    3780:	add	x0, sp, #0x60
    3784:	str	x27, [sp, #80]
    3788:	add	w1, w1, #0x1
    378c:	bl	1b24 <grub_mod_fini+0x1824>
    3790:	mov	w21, w0
    3794:	cbnz	w0, 3804 <grub_mod_fini+0x3504>
    3798:	ldr	x0, [x19, #48]
    379c:	mov	w1, #0xffffffff            	// #-1
    37a0:	add	x0, x0, x22
    37a4:	str	w1, [x0, #4]
    37a8:	ldr	x1, [x19]
    37ac:	add	x0, x1, x22
    37b0:	ldr	w4, [x0, #8]
    37b4:	tst	w4, #0x3ff00
    37b8:	b.ne	3824 <grub_mod_fini+0x3524>  // b.any
    37bc:	ldr	x0, [x19]
    37c0:	add	x0, x0, x22
    37c4:	ldrb	w0, [x0, #8]
    37c8:	tbnz	w0, #3, 38fc <grub_mod_fini+0x35fc>
    37cc:	mov	w23, #0x0                   	// #0
    37d0:	mov	w1, w20
    37d4:	add	x0, sp, #0x60
    37d8:	bl	2928 <grub_mod_fini+0x2628>
    37dc:	tst	w0, #0xff
    37e0:	b.eq	3914 <grub_mod_fini+0x3614>  // b.none
    37e4:	ldr	x0, [x19, #48]
    37e8:	eor	w26, w26, #0x1
    37ec:	tst	w23, w26
    37f0:	add	x22, x0, x22
    37f4:	b.eq	3908 <grub_mod_fini+0x3608>  // b.none
    37f8:	str	wzr, [x22, #4]
    37fc:	ldp	x0, x1, [sp, #96]
    3800:	stp	x0, x1, [x25]
    3804:	mov	w0, w21
    3808:	ldp	x19, x20, [sp, #16]
    380c:	ldp	x21, x22, [sp, #32]
    3810:	ldp	x23, x24, [sp, #48]
    3814:	ldp	x25, x26, [sp, #64]
    3818:	ldr	x27, [sp, #80]
    381c:	ldp	x29, x30, [sp], #128
    3820:	ret
    3824:	ldr	x0, [x19, #40]
    3828:	add	x0, x0, x22
    382c:	ldr	w2, [x0, #4]
    3830:	cbz	w2, 37bc <grub_mod_fini+0x34bc>
    3834:	ldr	x0, [x0, #8]
    3838:	ldrsw	x0, [x0]
    383c:	add	x0, x1, x0, lsl #4
    3840:	ldrb	w0, [x0, #10]
    3844:	tbnz	w0, #2, 37bc <grub_mod_fini+0x34bc>
    3848:	ubfx	x4, x4, #8, #10
    384c:	mov	w3, w20
    3850:	mov	w2, w20
    3854:	mov	w1, w20
    3858:	mov	x0, x19
    385c:	bl	2b00 <grub_mod_fini+0x2800>
    3860:	cbz	w0, 37bc <grub_mod_fini+0x34bc>
    3864:	mov	w21, w0
    3868:	b	3804 <grub_mod_fini+0x3504>
    386c:	ldr	x0, [x0, #8]
    3870:	ldr	w2, [x0, x24, lsl #2]
    3874:	ldr	x0, [x19, #48]
    3878:	sbfiz	x27, x2, #4, #32
    387c:	add	x0, x0, w2, sxtw #4
    3880:	ldr	w1, [x0, #4]
    3884:	cmn	w1, #0x1
    3888:	b.ne	38ac <grub_mod_fini+0x35ac>  // b.any
    388c:	mov	w23, #0x1                   	// #1
    3890:	add	x24, x24, #0x1
    3894:	ldr	x0, [x19, #40]
    3898:	add	x0, x0, x22
    389c:	ldr	w1, [x0, #4]
    38a0:	cmp	w1, w24
    38a4:	b.gt	386c <grub_mod_fini+0x356c>
    38a8:	b	37d0 <grub_mod_fini+0x34d0>
    38ac:	cbnz	w1, 38f0 <grub_mod_fini+0x35f0>
    38b0:	mov	x1, x19
    38b4:	add	x0, sp, #0x70
    38b8:	mov	w3, #0x0                   	// #0
    38bc:	bl	3748 <grub_mod_fini+0x3448>
    38c0:	cbnz	w0, 3864 <grub_mod_fini+0x3564>
    38c4:	add	x1, sp, #0x70
    38c8:	add	x0, sp, #0x60
    38cc:	bl	2e18 <grub_mod_fini+0x2b18>
    38d0:	cbnz	w0, 3864 <grub_mod_fini+0x3564>
    38d4:	ldr	x0, [x19, #48]
    38d8:	add	x27, x0, x27
    38dc:	ldr	w0, [x27, #4]
    38e0:	cbnz	w0, 3890 <grub_mod_fini+0x3590>
    38e4:	ldr	x0, [sp, #120]
    38e8:	bl	0 <grub_free>
    38ec:	b	388c <grub_mod_fini+0x358c>
    38f0:	ldp	x0, x1, [x0]
    38f4:	stp	x0, x1, [sp, #112]
    38f8:	b	38c4 <grub_mod_fini+0x35c4>
    38fc:	mov	x24, #0x0                   	// #0
    3900:	mov	w23, #0x0                   	// #0
    3904:	b	3894 <grub_mod_fini+0x3594>
    3908:	ldp	x0, x1, [sp, #96]
    390c:	stp	x0, x1, [x22]
    3910:	b	37fc <grub_mod_fini+0x34fc>
    3914:	mov	w21, #0xc                   	// #12
    3918:	b	3804 <grub_mod_fini+0x3504>
    391c:	cbnz	x0, 3974 <grub_mod_fini+0x3674>
    3920:	mov	w0, #0x0                   	// #0
    3924:	ret
    3928:	add	x0, x0, x20, lsl #5
    392c:	lsl	x21, x20, #5
    3930:	add	x20, x20, #0x1
    3934:	ldr	x0, [x0, #24]
    3938:	bl	0 <grub_free>
    393c:	ldr	x0, [x19, #8]
    3940:	add	x0, x0, x21
    3944:	ldr	x0, [x0, #8]
    3948:	bl	0 <grub_free>
    394c:	ldr	w1, [x19]
    3950:	ldr	x0, [x19, #8]
    3954:	cmp	w1, w20
    3958:	b.gt	3928 <grub_mod_fini+0x3628>
    395c:	bl	0 <grub_free>
    3960:	mov	w0, #0x0                   	// #0
    3964:	ldp	x19, x20, [sp, #16]
    3968:	ldr	x21, [sp, #32]
    396c:	ldp	x29, x30, [sp], #48
    3970:	ret
    3974:	stp	x29, x30, [sp, #-48]!
    3978:	mov	x29, sp
    397c:	stp	x19, x20, [sp, #16]
    3980:	mov	x19, x0
    3984:	mov	x20, #0x0                   	// #0
    3988:	str	x21, [sp, #32]
    398c:	b	394c <grub_mod_fini+0x364c>
    3990:	stp	x29, x30, [sp, #-32]!
    3994:	mov	x8, x0
    3998:	mov	x6, x1
    399c:	mov	x29, sp
    39a0:	ldr	w7, [x1, #56]
    39a4:	mov	x9, x2
    39a8:	mov	w12, w3
    39ac:	mov	x11, x4
    39b0:	and	w13, w5, #0xff
    39b4:	mov	x0, x1
    39b8:	mov	w1, w7
    39bc:	bl	2488 <grub_mod_fini+0x2188>
    39c0:	cmp	w0, #0x1
    39c4:	b.le	39f0 <grub_mod_fini+0x36f0>
    39c8:	mov	w10, w0
    39cc:	mov	w0, #0x1                   	// #1
    39d0:	str	w0, [x8]
    39d4:	mov	x0, x6
    39d8:	bl	1150 <grub_mod_fini+0xe50>
    39dc:	str	w0, [x8, #8]
    39e0:	add	w7, w7, w10
    39e4:	str	w7, [x6, #56]
    39e8:	mov	w0, #0x0                   	// #0
    39ec:	b	3a20 <grub_mod_fini+0x3720>
    39f0:	ldrb	w0, [x9, #8]
    39f4:	add	w7, w7, w12
    39f8:	str	w7, [x6, #56]
    39fc:	and	w1, w0, #0xfffffffb
    3a00:	cmp	w1, #0x1a
    3a04:	b.eq	3a10 <grub_mod_fini+0x3710>  // b.none
    3a08:	cmp	w0, #0x1c
    3a0c:	b.ne	3b6c <grub_mod_fini+0x386c>  // b.any
    3a10:	ldr	w0, [x6, #72]
    3a14:	cmp	w7, w0
    3a18:	b.lt	3a28 <grub_mod_fini+0x3728>  // b.tstop
    3a1c:	mov	w0, #0x7                   	// #7
    3a20:	ldp	x29, x30, [sp], #32
    3a24:	ret
    3a28:	ldrb	w12, [x9]
    3a2c:	mov	x10, #0x0                   	// #0
    3a30:	ldrb	w0, [x9, #8]
    3a34:	mov	w11, w10
    3a38:	ldr	w1, [x6, #56]
    3a3c:	cmp	w0, #0x1e
    3a40:	b.ne	3a4c <grub_mod_fini+0x374c>  // b.any
    3a44:	ldrb	w0, [x6, #99]
    3a48:	cbnz	w0, 3a60 <grub_mod_fini+0x3760>
    3a4c:	ldr	x0, [x6, #8]
    3a50:	add	w2, w1, #0x1
    3a54:	str	w2, [x6, #56]
    3a58:	ldrb	w7, [x0, w1, sxtw]
    3a5c:	b	3a9c <grub_mod_fini+0x379c>
    3a60:	ldrb	w0, [x6, #100]
    3a64:	cbz	w0, 3b0c <grub_mod_fini+0x380c>
    3a68:	ldr	w3, [x6, #44]
    3a6c:	sxtw	x2, w1
    3a70:	sbfiz	x0, x1, #2, #32
    3a74:	cmp	w3, w1
    3a78:	b.eq	3adc <grub_mod_fini+0x37dc>  // b.none
    3a7c:	ldr	x3, [x6, #16]
    3a80:	ldr	w3, [x3, x0]
    3a84:	cmn	w3, #0x1
    3a88:	b.ne	3adc <grub_mod_fini+0x37dc>  // b.any
    3a8c:	ldr	x3, [x6, #8]
    3a90:	add	w1, w1, #0x1
    3a94:	str	w1, [x6, #56]
    3a98:	ldrb	w7, [x3, x2]
    3a9c:	ldr	w0, [x6, #56]
    3aa0:	ldr	w1, [x6, #72]
    3aa4:	cmp	w1, w0
    3aa8:	b.le	3a1c <grub_mod_fini+0x371c>
    3aac:	cmp	w12, w7
    3ab0:	ldr	x1, [x8, #8]
    3ab4:	b.ne	3ac8 <grub_mod_fini+0x37c8>  // b.any
    3ab8:	ldr	x2, [x6, #8]
    3abc:	ldrb	w2, [x2, w0, sxtw]
    3ac0:	cmp	w2, #0x5d
    3ac4:	b.eq	3b28 <grub_mod_fini+0x3828>  // b.none
    3ac8:	strb	w7, [x1, x10]
    3acc:	add	x10, x10, #0x1
    3ad0:	cmp	x10, #0x20
    3ad4:	b.ne	3a30 <grub_mod_fini+0x3730>  // b.any
    3ad8:	b	3a1c <grub_mod_fini+0x371c>
    3adc:	ldr	x3, [x6, #24]
    3ae0:	ldr	w0, [x3, x0]
    3ae4:	ldr	w3, [x6, #40]
    3ae8:	add	w0, w0, w3
    3aec:	ldr	x3, [x6]
    3af0:	ldrb	w7, [x3, w0, sxtw]
    3af4:	tbnz	w7, #7, 3a8c <grub_mod_fini+0x378c>
    3af8:	mov	x0, x6
    3afc:	bl	2488 <grub_mod_fini+0x2188>
    3b00:	add	w1, w0, w1
    3b04:	str	w1, [x6, #56]
    3b08:	b	3a9c <grub_mod_fini+0x379c>
    3b0c:	ldr	w0, [x6, #40]
    3b10:	add	w3, w1, #0x1
    3b14:	ldr	x2, [x6]
    3b18:	add	w1, w0, w1
    3b1c:	str	w3, [x6, #56]
    3b20:	ldrb	w7, [x2, w1, sxtw]
    3b24:	b	3a9c <grub_mod_fini+0x379c>
    3b28:	add	w0, w0, #0x1
    3b2c:	str	w0, [x6, #56]
    3b30:	strb	wzr, [x1, w11, sxtw]
    3b34:	ldrb	w0, [x9, #8]
    3b38:	cmp	w0, #0x1c
    3b3c:	b.eq	3b5c <grub_mod_fini+0x385c>  // b.none
    3b40:	cmp	w0, #0x1e
    3b44:	b.eq	3b64 <grub_mod_fini+0x3864>  // b.none
    3b48:	cmp	w0, #0x1a
    3b4c:	b.ne	39e8 <grub_mod_fini+0x36e8>  // b.any
    3b50:	mov	w0, #0x3                   	// #3
    3b54:	str	w0, [x8]
    3b58:	b	39e8 <grub_mod_fini+0x36e8>
    3b5c:	mov	w0, #0x2                   	// #2
    3b60:	b	3b54 <grub_mod_fini+0x3854>
    3b64:	mov	w0, #0x4                   	// #4
    3b68:	b	3b54 <grub_mod_fini+0x3854>
    3b6c:	cmp	w0, #0x16
    3b70:	b.ne	3b9c <grub_mod_fini+0x389c>  // b.any
    3b74:	cbnz	w13, 3b9c <grub_mod_fini+0x389c>
    3b78:	mov	x2, x11
    3b7c:	mov	x1, x6
    3b80:	add	x0, sp, #0x10
    3b84:	bl	12a0 <grub_mod_fini+0xfa0>
    3b88:	ldrb	w0, [sp, #24]
    3b8c:	cmp	w0, #0x15
    3b90:	b.eq	3b9c <grub_mod_fini+0x389c>  // b.none
    3b94:	mov	w0, #0xb                   	// #11
    3b98:	b	3a20 <grub_mod_fini+0x3720>
    3b9c:	ldrb	w0, [x9]
    3ba0:	str	wzr, [x8]
    3ba4:	strb	w0, [x8, #8]
    3ba8:	b	39e8 <grub_mod_fini+0x36e8>
    3bac:	ldr	w3, [x0, #44]
    3bb0:	ldr	w2, [x0, #52]
    3bb4:	ldr	w1, [x0, #64]
    3bb8:	mov	w4, w3
    3bbc:	sxtw	x5, w3
    3bc0:	cmp	w2, w1
    3bc4:	csel	w2, w2, w1, le
    3bc8:	cmp	w4, w2
    3bcc:	b.lt	3be4 <grub_mod_fini+0x38e4>  // b.tstop
    3bd0:	subs	w1, w2, w3
    3bd4:	csel	w1, w1, wzr, ge  // ge = tcont
    3bd8:	add	w1, w1, w3
    3bdc:	stp	w1, w1, [x0, #44]
    3be0:	ret
    3be4:	ldr	w1, [x0, #40]
    3be8:	ldr	x6, [x0]
    3bec:	add	w1, w4, w1
    3bf0:	ldrb	w1, [x6, w1, sxtw]
    3bf4:	ldr	x6, [x0, #80]
    3bf8:	cbz	x6, 3c04 <grub_mod_fini+0x3904>
    3bfc:	and	x1, x1, #0xff
    3c00:	ldrb	w1, [x6, x1]
    3c04:	sub	w6, w1, #0x61
    3c08:	cmp	w6, #0x19
    3c0c:	b.hi	3c14 <grub_mod_fini+0x3914>  // b.pmore
    3c10:	sub	w1, w1, #0x20
    3c14:	ldr	x6, [x0, #8]
    3c18:	add	w4, w4, #0x1
    3c1c:	strb	w1, [x6, x5]
    3c20:	add	x5, x5, #0x1
    3c24:	b	3bc8 <grub_mod_fini+0x38c8>
    3c28:	and	w1, w0, #0xffffffdf
    3c2c:	sub	w1, w1, #0x41
    3c30:	cmp	w1, #0x19
    3c34:	b.ls	3c48 <grub_mod_fini+0x3948>  // b.plast
    3c38:	sub	w0, w0, #0x30
    3c3c:	cmp	w0, #0x9
    3c40:	cset	w0, ls  // ls = plast
    3c44:	ret
    3c48:	mov	w0, #0x1                   	// #1
    3c4c:	b	3c44 <grub_mod_fini+0x3944>
    3c50:	stp	x29, x30, [sp, #-48]!
    3c54:	mov	x29, sp
    3c58:	ldr	w5, [x1, #56]
    3c5c:	stp	x19, x20, [sp, #16]
    3c60:	mov	x19, x0
    3c64:	ldr	w0, [x1, #72]
    3c68:	cmp	w0, w5
    3c6c:	b.gt	3c88 <grub_mod_fini+0x3988>
    3c70:	mov	w0, #0x2                   	// #2
    3c74:	strb	w0, [x19, #8]
    3c78:	mov	w0, #0x0                   	// #0
    3c7c:	ldp	x19, x20, [sp, #16]
    3c80:	ldp	x29, x30, [sp], #48
    3c84:	ret
    3c88:	ldr	x7, [x1, #8]
    3c8c:	mov	x20, x1
    3c90:	ldrb	w0, [x19, #10]
    3c94:	mov	x3, x2
    3c98:	sxtw	x8, w5
    3c9c:	ldrb	w4, [x7, w5, sxtw]
    3ca0:	and	w0, w0, #0xffffff9f
    3ca4:	strb	w4, [x19]
    3ca8:	strb	w0, [x19, #10]
    3cac:	ldr	w0, [x1, #104]
    3cb0:	cmp	w0, #0x1
    3cb4:	b.le	3cf8 <grub_mod_fini+0x39f8>
    3cb8:	ldr	w1, [x1, #44]
    3cbc:	cmp	w5, w1
    3cc0:	b.eq	3cf8 <grub_mod_fini+0x39f8>  // b.none
    3cc4:	ldr	x1, [x20, #16]
    3cc8:	ldr	w1, [x1, x8, lsl #2]
    3ccc:	cmn	w1, #0x1
    3cd0:	b.ne	3cf8 <grub_mod_fini+0x39f8>  // b.any
    3cd4:	ldr	w0, [x19, #8]
    3cd8:	mov	w1, #0x1                   	// #1
    3cdc:	movk	w1, #0x20, lsl #16
    3ce0:	and	w0, w0, #0xffffff00
    3ce4:	and	w0, w0, #0xffdfffff
    3ce8:	orr	w0, w0, w1
    3cec:	str	w0, [x19, #8]
    3cf0:	mov	w0, #0x1                   	// #1
    3cf4:	b	3c7c <grub_mod_fini+0x397c>
    3cf8:	cmp	w4, #0x5c
    3cfc:	b.ne	3fe4 <grub_mod_fini+0x3ce4>  // b.any
    3d00:	ldr	w2, [x20, #64]
    3d04:	add	w1, w5, #0x1
    3d08:	cmp	w1, w2
    3d0c:	b.lt	3d1c <grub_mod_fini+0x3a1c>  // b.tstop
    3d10:	mov	w0, #0x24                  	// #36
    3d14:	strb	w0, [x19, #8]
    3d18:	b	3cf0 <grub_mod_fini+0x39f0>
    3d1c:	ldrb	w2, [x20, #99]
    3d20:	cbnz	w2, 3d2c <grub_mod_fini+0x3a2c>
    3d24:	ldrb	w4, [x7, w1, sxtw]
    3d28:	b	3d70 <grub_mod_fini+0x3a70>
    3d2c:	cmp	w0, #0x1
    3d30:	b.le	3dd0 <grub_mod_fini+0x3ad0>
    3d34:	ldr	x2, [x20, #16]
    3d38:	sbfiz	x4, x1, #2, #32
    3d3c:	sxtw	x6, w1
    3d40:	ldr	w8, [x2, x4]
    3d44:	cmn	w8, #0x1
    3d48:	b.eq	3d6c <grub_mod_fini+0x3a6c>  // b.none
    3d4c:	ldr	w8, [x20, #44]
    3d50:	add	w5, w5, #0x2
    3d54:	cmp	w8, w5
    3d58:	b.eq	3dd0 <grub_mod_fini+0x3ad0>  // b.none
    3d5c:	add	x2, x2, x4
    3d60:	ldr	w2, [x2, #4]
    3d64:	cmn	w2, #0x1
    3d68:	b.ne	3dd0 <grub_mod_fini+0x3ad0>  // b.any
    3d6c:	ldrb	w4, [x7, x6]
    3d70:	mov	w2, #0x1                   	// #1
    3d74:	strb	w4, [x19]
    3d78:	strb	w2, [x19, #8]
    3d7c:	cmp	w0, #0x1
    3d80:	ldrb	w5, [x19, #10]
    3d84:	b.le	3e04 <grub_mod_fini+0x3b04>
    3d88:	mov	x0, x20
    3d8c:	bl	1150 <grub_mod_fini+0xe50>
    3d90:	mov	w2, w0
    3d94:	bl	3c28 <grub_mod_fini+0x3928>
    3d98:	cbnz	w0, 3e18 <grub_mod_fini+0x3b18>
    3d9c:	cmp	w2, #0x5f
    3da0:	cset	w0, eq  // eq = none
    3da4:	bfi	w5, w0, #6, #1
    3da8:	strb	w5, [x19, #10]
    3dac:	cmp	w4, #0x53
    3db0:	b.eq	3f34 <grub_mod_fini+0x3c34>  // b.none
    3db4:	b.hi	3e64 <grub_mod_fini+0x3b64>  // b.pmore
    3db8:	sub	w0, w4, #0x27
    3dbc:	and	w1, w0, #0xff
    3dc0:	cmp	w1, #0x1b
    3dc4:	b.ls	3e44 <grub_mod_fini+0x3b44>  // b.plast
    3dc8:	mov	w0, #0x2                   	// #2
    3dcc:	b	3c7c <grub_mod_fini+0x397c>
    3dd0:	ldrb	w5, [x20, #100]
    3dd4:	cbz	w5, 3dfc <grub_mod_fini+0x3afc>
    3dd8:	ldr	x2, [x20, #24]
    3ddc:	ldr	w2, [x2, w1, sxtw #2]
    3de0:	ldr	w4, [x20, #40]
    3de4:	add	w2, w2, w4
    3de8:	ldr	x4, [x20]
    3dec:	ldrb	w4, [x4, w2, sxtw]
    3df0:	cbz	w5, 3d70 <grub_mod_fini+0x3a70>
    3df4:	tbz	w4, #7, 3d70 <grub_mod_fini+0x3a70>
    3df8:	b	3d24 <grub_mod_fini+0x3a24>
    3dfc:	mov	w2, w1
    3e00:	b	3de0 <grub_mod_fini+0x3ae0>
    3e04:	mov	w0, w4
    3e08:	bl	3c28 <grub_mod_fini+0x3928>
    3e0c:	cbnz	w0, 3e18 <grub_mod_fini+0x3b18>
    3e10:	cmp	w4, #0x5f
    3e14:	b	3da0 <grub_mod_fini+0x3aa0>
    3e18:	mov	w0, #0x1                   	// #1
    3e1c:	b	3da4 <grub_mod_fini+0x3aa4>
    3e20:	sub	w4, w4, #0x73
    3e24:	cmp	w4, #0xa
    3e28:	b.hi	3dc8 <grub_mod_fini+0x3ac8>  // b.pmore
    3e2c:	adrp	x0, 0 <grub_mod_init-0x260>
    3e30:	ldr	x0, [x0]
    3e34:	ldrb	w0, [x0, w4, uxtw]
    3e38:	adr	x1, 3e44 <grub_mod_fini+0x3b44>
    3e3c:	add	x0, x1, w0, sxtb #2
    3e40:	br	x0
    3e44:	cmp	w0, #0x1b
    3e48:	b.hi	3dc8 <grub_mod_fini+0x3ac8>  // b.pmore
    3e4c:	adrp	x1, 0 <grub_mod_init-0x260>
    3e50:	ldr	x1, [x1]
    3e54:	ldrb	w0, [x1, w0, uxtw]
    3e58:	adr	x1, 3e64 <grub_mod_fini+0x3b64>
    3e5c:	add	x0, x1, w0, sxtb #2
    3e60:	br	x0
    3e64:	cmp	w4, #0x7d
    3e68:	b.hi	3dc8 <grub_mod_fini+0x3ac8>  // b.pmore
    3e6c:	cmp	w4, #0x72
    3e70:	b.hi	3e20 <grub_mod_fini+0x3b20>  // b.pmore
    3e74:	cmp	w4, #0x60
    3e78:	b.eq	3f40 <grub_mod_fini+0x3c40>  // b.none
    3e7c:	cmp	w4, #0x62
    3e80:	b.eq	3ef4 <grub_mod_fini+0x3bf4>  // b.none
    3e84:	cmp	w4, #0x57
    3e88:	b.ne	3dc8 <grub_mod_fini+0x3ac8>  // b.any
    3e8c:	tbnz	w3, #19, 3dc8 <grub_mod_fini+0x3ac8>
    3e90:	mov	w0, #0x21                  	// #33
    3e94:	b	3ea8 <grub_mod_fini+0x3ba8>
    3e98:	mov	x0, #0x8400                	// #33792
    3e9c:	tst	x3, x0
    3ea0:	b.ne	3dc8 <grub_mod_fini+0x3ac8>  // b.any
    3ea4:	mov	w0, #0xa                   	// #10
    3ea8:	strb	w0, [x19, #8]
    3eac:	b	3dc8 <grub_mod_fini+0x3ac8>
    3eb0:	tbnz	w3, #14, 3dc8 <grub_mod_fini+0x3ac8>
    3eb4:	sub	w4, w4, #0x31
    3eb8:	mov	w0, #0x4                   	// #4
    3ebc:	str	w4, [x19]
    3ec0:	strb	w0, [x19, #8]
    3ec4:	b	3dc8 <grub_mod_fini+0x3ac8>
    3ec8:	tbnz	w3, #19, 3dc8 <grub_mod_fini+0x3ac8>
    3ecc:	mov	w0, #0xc                   	// #12
    3ed0:	strb	w0, [x19, #8]
    3ed4:	mov	w0, #0x6                   	// #6
    3ed8:	str	w0, [x19]
    3edc:	b	3dc8 <grub_mod_fini+0x3ac8>
    3ee0:	tbnz	w3, #19, 3dc8 <grub_mod_fini+0x3ac8>
    3ee4:	mov	w0, #0xc                   	// #12
    3ee8:	strb	w0, [x19, #8]
    3eec:	mov	w0, #0x9                   	// #9
    3ef0:	b	3ed8 <grub_mod_fini+0x3bd8>
    3ef4:	tbnz	w3, #19, 3dc8 <grub_mod_fini+0x3ac8>
    3ef8:	mov	w0, #0xc                   	// #12
    3efc:	strb	w0, [x19, #8]
    3f00:	mov	w0, #0x100                 	// #256
    3f04:	b	3ed8 <grub_mod_fini+0x3bd8>
    3f08:	tbnz	w3, #19, 3dc8 <grub_mod_fini+0x3ac8>
    3f0c:	mov	w0, #0xc                   	// #12
    3f10:	strb	w0, [x19, #8]
    3f14:	mov	w0, #0x200                 	// #512
    3f18:	b	3ed8 <grub_mod_fini+0x3bd8>
    3f1c:	tbnz	w3, #19, 3dc8 <grub_mod_fini+0x3ac8>
    3f20:	mov	w0, #0x20                  	// #32
    3f24:	b	3ea8 <grub_mod_fini+0x3ba8>
    3f28:	tbnz	w3, #19, 3dc8 <grub_mod_fini+0x3ac8>
    3f2c:	mov	w0, #0x22                  	// #34
    3f30:	b	3ea8 <grub_mod_fini+0x3ba8>
    3f34:	tbnz	w3, #19, 3dc8 <grub_mod_fini+0x3ac8>
    3f38:	mov	w0, #0x23                  	// #35
    3f3c:	b	3ea8 <grub_mod_fini+0x3ba8>
    3f40:	tbnz	w3, #19, 3dc8 <grub_mod_fini+0x3ac8>
    3f44:	mov	w0, #0xc                   	// #12
    3f48:	strb	w0, [x19, #8]
    3f4c:	mov	w0, #0x40                  	// #64
    3f50:	b	3ed8 <grub_mod_fini+0x3bd8>
    3f54:	tbnz	w3, #19, 3dc8 <grub_mod_fini+0x3ac8>
    3f58:	mov	w0, #0xc                   	// #12
    3f5c:	strb	w0, [x19, #8]
    3f60:	mov	w0, #0x80                  	// #128
    3f64:	b	3ed8 <grub_mod_fini+0x3bd8>
    3f68:	tbnz	w3, #13, 3dc8 <grub_mod_fini+0x3ac8>
    3f6c:	mov	w0, #0x8                   	// #8
    3f70:	b	3ea8 <grub_mod_fini+0x3ba8>
    3f74:	tbnz	w3, #13, 3dc8 <grub_mod_fini+0x3ac8>
    3f78:	mov	w0, #0x9                   	// #9
    3f7c:	b	3ea8 <grub_mod_fini+0x3ba8>
    3f80:	mov	x0, #0x402                 	// #1026
    3f84:	and	x0, x3, x0
    3f88:	cmp	x0, #0x2
    3f8c:	b.ne	3dc8 <grub_mod_fini+0x3ac8>  // b.any
    3f90:	mov	w1, #0x12                  	// #18
    3f94:	strb	w1, [x19, #8]
    3f98:	b	3c7c <grub_mod_fini+0x397c>
    3f9c:	mov	x1, #0x402                 	// #1026
    3fa0:	and	x0, x3, x1
    3fa4:	cmp	x0, #0x2
    3fa8:	b.ne	3dc8 <grub_mod_fini+0x3ac8>  // b.any
    3fac:	mov	w1, #0x13                  	// #19
    3fb0:	b	3f94 <grub_mod_fini+0x3c94>
    3fb4:	mov	x0, #0x1200                	// #4608
    3fb8:	and	x0, x3, x0
    3fbc:	cmp	x0, #0x200
    3fc0:	b.ne	3dc8 <grub_mod_fini+0x3ac8>  // b.any
    3fc4:	mov	w0, #0x17                  	// #23
    3fc8:	b	3ea8 <grub_mod_fini+0x3ba8>
    3fcc:	mov	x0, #0x1200                	// #4608
    3fd0:	and	x0, x3, x0
    3fd4:	cmp	x0, #0x200
    3fd8:	b.ne	3dc8 <grub_mod_fini+0x3ac8>  // b.any
    3fdc:	mov	w0, #0x18                  	// #24
    3fe0:	b	3ea8 <grub_mod_fini+0x3ba8>
    3fe4:	mov	w1, #0x1                   	// #1
    3fe8:	strb	w1, [x19, #8]
    3fec:	ldrb	w6, [x19, #10]
    3ff0:	cmp	w0, #0x1
    3ff4:	b.le	4044 <grub_mod_fini+0x3d44>
    3ff8:	mov	w1, w5
    3ffc:	mov	x0, x20
    4000:	bl	1150 <grub_mod_fini+0xe50>
    4004:	mov	w2, w0
    4008:	bl	3c28 <grub_mod_fini+0x3928>
    400c:	cbnz	w0, 4058 <grub_mod_fini+0x3d58>
    4010:	cmp	w2, #0x5f
    4014:	cset	w0, eq  // eq = none
    4018:	bfi	w6, w0, #6, #1
    401c:	strb	w6, [x19, #10]
    4020:	cmp	w4, #0x2e
    4024:	b.hi	4084 <grub_mod_fini+0x3d84>  // b.pmore
    4028:	cmp	w4, #0x23
    402c:	b.hi	4060 <grub_mod_fini+0x3d60>  // b.pmore
    4030:	cmp	w4, #0xa
    4034:	b.ne	3cf0 <grub_mod_fini+0x39f0>  // b.any
    4038:	tbz	w3, #11, 3cf0 <grub_mod_fini+0x39f0>
    403c:	mov	w0, #0xa                   	// #10
    4040:	b	3d14 <grub_mod_fini+0x3a14>
    4044:	mov	w0, w4
    4048:	bl	3c28 <grub_mod_fini+0x3928>
    404c:	cbnz	w0, 4058 <grub_mod_fini+0x3d58>
    4050:	cmp	w4, #0x5f
    4054:	b	4014 <grub_mod_fini+0x3d14>
    4058:	mov	w0, #0x1                   	// #1
    405c:	b	4018 <grub_mod_fini+0x3d18>
    4060:	sub	w4, w4, #0x24
    4064:	cmp	w4, #0xa
    4068:	b.hi	3cf0 <grub_mod_fini+0x39f0>  // b.pmore
    406c:	adrp	x0, 0 <grub_mod_init-0x260>
    4070:	ldr	x0, [x0]
    4074:	ldrh	w0, [x0, w4, uxtw #1]
    4078:	adr	x1, 4084 <grub_mod_fini+0x3d84>
    407c:	add	x0, x1, w0, sxth #2
    4080:	br	x0
    4084:	cmp	w4, #0x7b
    4088:	b.eq	4110 <grub_mod_fini+0x3e10>  // b.none
    408c:	b.hi	40bc <grub_mod_fini+0x3dbc>  // b.pmore
    4090:	cmp	w4, #0x5b
    4094:	b.eq	413c <grub_mod_fini+0x3e3c>  // b.none
    4098:	cmp	w4, #0x5e
    409c:	b.eq	414c <grub_mod_fini+0x3e4c>  // b.none
    40a0:	cmp	w4, #0x3f
    40a4:	b.ne	3cf0 <grub_mod_fini+0x39f0>  // b.any
    40a8:	mov	x0, #0x402                 	// #1026
    40ac:	tst	x3, x0
    40b0:	b.ne	3cf0 <grub_mod_fini+0x39f0>  // b.any
    40b4:	mov	w0, #0x13                  	// #19
    40b8:	b	3d14 <grub_mod_fini+0x3a14>
    40bc:	cmp	w4, #0x7c
    40c0:	b.eq	40e0 <grub_mod_fini+0x3de0>  // b.none
    40c4:	cmp	w4, #0x7d
    40c8:	b.ne	3cf0 <grub_mod_fini+0x39f0>  // b.any
    40cc:	mov	x0, #0x1200                	// #4608
    40d0:	bics	xzr, x0, x3
    40d4:	b.ne	3cf0 <grub_mod_fini+0x39f0>  // b.any
    40d8:	mov	w0, #0x18                  	// #24
    40dc:	b	3d14 <grub_mod_fini+0x3a14>
    40e0:	mov	x0, #0x8400                	// #33792
    40e4:	and	x0, x3, x0
    40e8:	cmp	x0, #0x8, lsl #12
    40ec:	b.ne	3cf0 <grub_mod_fini+0x39f0>  // b.any
    40f0:	b	403c <grub_mod_fini+0x3d3c>
    40f4:	mov	w0, #0xb                   	// #11
    40f8:	b	3d14 <grub_mod_fini+0x3a14>
    40fc:	mov	x0, #0x402                 	// #1026
    4100:	tst	x3, x0
    4104:	b.ne	3cf0 <grub_mod_fini+0x39f0>  // b.any
    4108:	mov	w0, #0x12                  	// #18
    410c:	b	3d14 <grub_mod_fini+0x3a14>
    4110:	mov	x0, #0x1200                	// #4608
    4114:	bics	xzr, x0, x3
    4118:	b.ne	3cf0 <grub_mod_fini+0x39f0>  // b.any
    411c:	mov	w0, #0x17                  	// #23
    4120:	b	3d14 <grub_mod_fini+0x3a14>
    4124:	tbz	w3, #13, 3cf0 <grub_mod_fini+0x39f0>
    4128:	mov	w0, #0x8                   	// #8
    412c:	b	3d14 <grub_mod_fini+0x3a14>
    4130:	tbz	w3, #13, 3cf0 <grub_mod_fini+0x39f0>
    4134:	mov	w0, #0x9                   	// #9
    4138:	b	3d14 <grub_mod_fini+0x3a14>
    413c:	mov	w0, #0x14                  	// #20
    4140:	b	3d14 <grub_mod_fini+0x3a14>
    4144:	mov	w0, #0x5                   	// #5
    4148:	b	3d14 <grub_mod_fini+0x3a14>
    414c:	and	x0, x3, #0xfffff8
    4150:	and	x0, x0, #0xffffffffff80000f
    4154:	cbnz	x0, 4170 <grub_mod_fini+0x3e70>
    4158:	cbz	w5, 4170 <grub_mod_fini+0x3e70>
    415c:	tbz	w3, #11, 3cf0 <grub_mod_fini+0x39f0>
    4160:	add	x7, x7, x8
    4164:	ldurb	w0, [x7, #-1]
    4168:	cmp	w0, #0xa
    416c:	b.ne	3cf0 <grub_mod_fini+0x39f0>  // b.any
    4170:	mov	w0, #0xc                   	// #12
    4174:	strb	w0, [x19, #8]
    4178:	mov	w0, #0x10                  	// #16
    417c:	str	w0, [x19]
    4180:	b	3cf0 <grub_mod_fini+0x39f0>
    4184:	tbnz	w3, #3, 41cc <grub_mod_fini+0x3ecc>
    4188:	ldr	w0, [x20, #64]
    418c:	add	w5, w5, #0x1
    4190:	cmp	w5, w0
    4194:	b.eq	41cc <grub_mod_fini+0x3ecc>  // b.none
    4198:	str	w5, [x20, #56]
    419c:	mov	x2, x3
    41a0:	mov	x1, x20
    41a4:	add	x0, sp, #0x20
    41a8:	bl	3c50 <grub_mod_fini+0x3950>
    41ac:	ldr	w0, [x20, #56]
    41b0:	sub	w0, w0, #0x1
    41b4:	str	w0, [x20, #56]
    41b8:	ldrb	w0, [sp, #40]
    41bc:	sub	w0, w0, #0x9
    41c0:	and	w0, w0, #0xff
    41c4:	cmp	w0, #0x1
    41c8:	b.hi	3cf0 <grub_mod_fini+0x39f0>  // b.pmore
    41cc:	mov	w0, #0xc                   	// #12
    41d0:	strb	w0, [x19, #8]
    41d4:	mov	w0, #0x20                  	// #32
    41d8:	b	417c <grub_mod_fini+0x3e7c>
    41dc:	nop
	...
    41f8:	mov	x9, x1
    41fc:	stp	x29, x30, [sp, #-16]!
    4200:	mov	x29, sp
    4204:	bl	3c50 <grub_mod_fini+0x3950>
    4208:	ldr	w1, [x9, #56]
    420c:	ldp	x29, x30, [sp], #16
    4210:	add	w1, w1, w0
    4214:	str	w1, [x9, #56]
    4218:	ret
    421c:	mov	x12, x0
    4220:	mov	x11, x1
    4224:	mov	x13, x2
    4228:	stp	x29, x30, [sp, #-16]!
    422c:	mov	w10, #0xffffffff            	// #-1
    4230:	mov	w15, #0xa                   	// #10
    4234:	mov	w14, #0x8030                	// #32816
    4238:	mov	x29, sp
    423c:	mov	x0, x11
    4240:	mov	x1, x12
    4244:	mov	x2, x13
    4248:	bl	41f8 <grub_mod_fini+0x3ef8>
    424c:	ldrb	w0, [x11, #8]
    4250:	ldrb	w1, [x11]
    4254:	cmp	w0, #0x2
    4258:	b.eq	42b8 <grub_mod_fini+0x3fb8>  // b.none
    425c:	cmp	w0, #0x18
    4260:	b.eq	42bc <grub_mod_fini+0x3fbc>  // b.none
    4264:	cmp	w1, #0x2c
    4268:	b.eq	42bc <grub_mod_fini+0x3fbc>  // b.none
    426c:	cmp	w0, #0x1
    4270:	b.ne	429c <grub_mod_fini+0x3f9c>  // b.any
    4274:	sub	w0, w1, #0x30
    4278:	and	w2, w0, #0xff
    427c:	cmp	w2, #0x9
    4280:	b.hi	429c <grub_mod_fini+0x3f9c>  // b.pmore
    4284:	cmn	w10, #0x2
    4288:	b.eq	423c <grub_mod_fini+0x3f3c>  // b.none
    428c:	cmn	w10, #0x1
    4290:	b.ne	42a4 <grub_mod_fini+0x3fa4>  // b.any
    4294:	mov	w10, w0
    4298:	b	423c <grub_mod_fini+0x3f3c>
    429c:	mov	w10, #0xfffffffe            	// #-2
    42a0:	b	423c <grub_mod_fini+0x3f3c>
    42a4:	madd	w10, w10, w15, w1
    42a8:	cmp	w10, w14
    42ac:	csel	w10, w10, w14, le
    42b0:	sub	w10, w10, #0x30
    42b4:	b	423c <grub_mod_fini+0x3f3c>
    42b8:	mov	w10, #0xfffffffe            	// #-2
    42bc:	mov	w0, w10
    42c0:	ldp	x29, x30, [sp], #16
    42c4:	ret
    42c8:	sub	w1, w0, #0x20
    42cc:	cmp	w1, #0x5e
    42d0:	b.ls	42ec <grub_mod_fini+0x3fec>  // b.plast
    42d4:	mov	w0, #0x0                   	// #0
    42d8:	ret
    42dc:	mov	w0, #0x0                   	// #0
    42e0:	ldr	x19, [sp, #16]
    42e4:	ldp	x29, x30, [sp], #32
    42e8:	ret
    42ec:	stp	x29, x30, [sp, #-32]!
    42f0:	mov	x29, sp
    42f4:	str	x19, [sp, #16]
    42f8:	mov	w19, w0
    42fc:	bl	0 <grub_isspace>
    4300:	cbnz	w0, 42dc <grub_mod_fini+0x3fdc>
    4304:	mov	w0, w19
    4308:	bl	3c28 <grub_mod_fini+0x3928>
    430c:	cmp	w0, #0x0
    4310:	cset	w0, eq  // eq = none
    4314:	b	42e0 <grub_mod_fini+0x3fe0>
    4318:	mov	x3, x0
    431c:	tbz	w1, #31, 4328 <grub_mod_fini+0x4028>
    4320:	ldr	w0, [x3, #76]
    4324:	ret
    4328:	ldr	w0, [x0, #64]
    432c:	cmp	w0, w1
    4330:	b.ne	4348 <grub_mod_fini+0x4048>  // b.any
    4334:	tst	x2, #0x2
    4338:	mov	w1, #0xa                   	// #10
    433c:	mov	w0, #0x8                   	// #8
    4340:	csel	w0, w0, w1, ne  // ne = any
    4344:	ret
    4348:	ldr	w0, [x3, #104]
    434c:	sxtw	x1, w1
    4350:	cmp	w0, #0x1
    4354:	b.gt	43e8 <grub_mod_fini+0x40e8>
    4358:	ldr	x0, [x3, #8]
    435c:	ldrb	w0, [x0, x1]
    4360:	ldr	x1, [x3, #88]
    4364:	ubfx	x2, x0, #6, #2
    4368:	ldr	x1, [x1, x2, lsl #3]
    436c:	lsr	x1, x1, x0
    4370:	tbnz	w1, #0, 4400 <grub_mod_fini+0x4100>
    4374:	cmp	w0, #0xa
    4378:	b.ne	4410 <grub_mod_fini+0x4110>  // b.any
    437c:	ldrb	w0, [x3, #101]
    4380:	cmp	w0, #0x0
    4384:	cset	w0, ne  // ne = any
    4388:	lsl	w0, w0, #1
    438c:	ret
    4390:	sub	x1, x1, #0x1
    4394:	tbnz	w1, #31, 4320 <grub_mod_fini+0x4020>
    4398:	ldr	w2, [x0, x1, lsl #2]
    439c:	cmn	w2, #0x1
    43a0:	b.eq	4390 <grub_mod_fini+0x4090>  // b.none
    43a4:	ldrb	w0, [x3, #102]
    43a8:	cbz	w0, 4408 <grub_mod_fini+0x4108>
    43ac:	stp	x29, x30, [sp, #-16]!
    43b0:	mov	w0, w2
    43b4:	mov	x29, sp
    43b8:	bl	3c28 <grub_mod_fini+0x3928>
    43bc:	cbnz	w0, 43f0 <grub_mod_fini+0x40f0>
    43c0:	cmp	w2, #0x5f
    43c4:	b.eq	43f0 <grub_mod_fini+0x40f0>  // b.none
    43c8:	cmp	w2, #0xa
    43cc:	b.ne	43f8 <grub_mod_fini+0x40f8>  // b.any
    43d0:	ldrb	w0, [x3, #101]
    43d4:	cmp	w0, #0x0
    43d8:	cset	w0, ne  // ne = any
    43dc:	lsl	w0, w0, #1
    43e0:	ldp	x29, x30, [sp], #16
    43e4:	ret
    43e8:	ldr	x0, [x3, #16]
    43ec:	b	4398 <grub_mod_fini+0x4098>
    43f0:	mov	w0, #0x1                   	// #1
    43f4:	b	43e0 <grub_mod_fini+0x40e0>
    43f8:	mov	w0, #0x0                   	// #0
    43fc:	b	43e0 <grub_mod_fini+0x40e0>
    4400:	mov	w0, #0x1                   	// #1
    4404:	ret
    4408:	cmp	w2, #0xa
    440c:	b	4378 <grub_mod_fini+0x4078>
    4410:	mov	w0, #0x0                   	// #0
    4414:	ret
    4418:	stp	x29, x30, [sp, #-16]!
    441c:	mov	x6, x1
    4420:	mov	w1, w2
    4424:	mov	x29, sp
    4428:	ldr	w2, [x0, #120]
    442c:	mov	x5, x0
    4430:	bl	4318 <grub_mod_fini+0x4018>
    4434:	ldr	w7, [x6, #12]
    4438:	and	w8, w0, #0x8
    443c:	and	w9, w0, #0x2
    4440:	and	w2, w0, #0x1
    4444:	mov	x4, #0x0                   	// #0
    4448:	cmp	w7, w4
    444c:	b.gt	445c <grub_mod_fini+0x415c>
    4450:	mov	w0, #0x0                   	// #0
    4454:	ldp	x29, x30, [sp], #16
    4458:	ret
    445c:	ldr	x1, [x5, #112]
    4460:	ldr	x0, [x6, #16]
    4464:	ldr	x1, [x1]
    4468:	ldr	w0, [x0, x4, lsl #2]
    446c:	add	x1, x1, w0, sxtw #4
    4470:	ldr	w3, [x1, #8]
    4474:	ldrb	w1, [x1, #8]
    4478:	ubfx	x3, x3, #8, #10
    447c:	cmp	w1, #0x2
    4480:	b.ne	44a8 <grub_mod_fini+0x41a8>  // b.any
    4484:	cbz	w3, 4454 <grub_mod_fini+0x4154>
    4488:	tbz	w3, #2, 4490 <grub_mod_fini+0x4190>
    448c:	cbz	w2, 44a8 <grub_mod_fini+0x41a8>
    4490:	tbz	w3, #3, 4498 <grub_mod_fini+0x4198>
    4494:	cbnz	w2, 44a8 <grub_mod_fini+0x41a8>
    4498:	tbz	w3, #5, 44a0 <grub_mod_fini+0x41a0>
    449c:	cbz	w9, 44a8 <grub_mod_fini+0x41a8>
    44a0:	tbz	w3, #7, 4454 <grub_mod_fini+0x4154>
    44a4:	cbnz	w8, 4454 <grub_mod_fini+0x4154>
    44a8:	add	x4, x4, #0x1
    44ac:	b	4448 <grub_mod_fini+0x4148>
    44b0:	stp	x29, x30, [sp, #-96]!
    44b4:	mov	x29, sp
    44b8:	stp	x19, x20, [sp, #16]
    44bc:	mov	x20, x1
    44c0:	ldr	w1, [x1, #4]
    44c4:	stp	x21, x22, [sp, #32]
    44c8:	mov	x21, x0
    44cc:	add	x0, sp, #0x50
    44d0:	stp	x23, x24, [sp, #48]
    44d4:	mov	w23, w2
    44d8:	mov	w24, w3
    44dc:	str	x25, [sp, #64]
    44e0:	bl	1b24 <grub_mod_fini+0x1824>
    44e4:	mov	w19, w0
    44e8:	cbnz	w0, 4544 <grub_mod_fini+0x4244>
    44ec:	mov	x22, #0x0                   	// #0
    44f0:	ldr	w1, [x20, #4]
    44f4:	ldr	x0, [x20, #8]
    44f8:	cmp	w1, w22
    44fc:	b.gt	4510 <grub_mod_fini+0x4210>
    4500:	bl	0 <grub_free>
    4504:	ldp	x0, x1, [sp, #80]
    4508:	stp	x0, x1, [x20]
    450c:	b	4544 <grub_mod_fini+0x4244>
    4510:	ldr	x1, [x21, #48]
    4514:	ldr	w2, [x0, x22, lsl #2]
    4518:	mov	x0, #0x0                   	// #0
    451c:	add	x1, x1, w2, sxtw #4
    4520:	ldr	w5, [x1, #4]
    4524:	cmp	w5, w0
    4528:	b.gt	4560 <grub_mod_fini+0x4260>
    452c:	add	x0, sp, #0x50
    4530:	bl	2e18 <grub_mod_fini+0x2b18>
    4534:	cbz	w0, 45b4 <grub_mod_fini+0x42b4>
    4538:	mov	w19, w0
    453c:	ldr	x0, [sp, #88]
    4540:	bl	0 <grub_free>
    4544:	mov	w0, w19
    4548:	ldp	x19, x20, [sp, #16]
    454c:	ldp	x21, x22, [sp, #32]
    4550:	ldp	x23, x24, [sp, #48]
    4554:	ldr	x25, [sp, #64]
    4558:	ldp	x29, x30, [sp], #96
    455c:	ret
    4560:	ldr	x3, [x1, #8]
    4564:	ldr	x4, [x21]
    4568:	ldr	w3, [x3, x0, lsl #2]
    456c:	add	x7, x4, w3, sxtw #4
    4570:	sbfiz	x6, x3, #4, #32
    4574:	ldrb	w7, [x7, #8]
    4578:	cmp	w24, w7
    457c:	b.ne	458c <grub_mod_fini+0x428c>  // b.any
    4580:	ldr	w4, [x4, x6]
    4584:	cmp	w23, w4
    4588:	b.eq	4594 <grub_mod_fini+0x4294>  // b.none
    458c:	add	x0, x0, #0x1
    4590:	b	4524 <grub_mod_fini+0x4224>
    4594:	cmn	w3, #0x1
    4598:	b.eq	452c <grub_mod_fini+0x422c>  // b.none
    459c:	mov	w4, w24
    45a0:	mov	w3, w23
    45a4:	add	x1, sp, #0x50
    45a8:	mov	x0, x21
    45ac:	bl	2a10 <grub_mod_fini+0x2710>
    45b0:	b	4534 <grub_mod_fini+0x4234>
    45b4:	add	x22, x22, #0x1
    45b8:	b	44f0 <grub_mod_fini+0x41f0>
    45bc:	mov	x4, x1
    45c0:	mov	w1, w2
    45c4:	ldr	x2, [x0, #8]
    45c8:	ldrb	w3, [x2, w1, sxtw]
    45cc:	ldrb	w2, [x4, #8]
    45d0:	sub	w2, w2, #0x1
    45d4:	cmp	w2, #0x6
    45d8:	b.hi	4688 <grub_mod_fini+0x4388>  // b.pmore
    45dc:	adrp	x5, 0 <grub_mod_init-0x260>
    45e0:	ldr	x5, [x5]
    45e4:	ldrb	w2, [x5, w2, uxtw]
    45e8:	adr	x5, 45f4 <grub_mod_fini+0x42f4>
    45ec:	add	x2, x5, w2, sxtb #2
    45f0:	br	x2
    45f4:	ldrb	w2, [x4]
    45f8:	cmp	w2, w3
    45fc:	b.ne	4688 <grub_mod_fini+0x4388>  // b.any
    4600:	ldr	w4, [x4, #8]
    4604:	tst	w4, #0x3ff00
    4608:	b.eq	46a4 <grub_mod_fini+0x43a4>  // b.none
    460c:	stp	x29, x30, [sp, #-16]!
    4610:	mov	x29, sp
    4614:	ldr	w2, [x0, #120]
    4618:	bl	4318 <grub_mod_fini+0x4018>
    461c:	ubfx	x1, x4, #8, #10
    4620:	tbz	w4, #10, 4628 <grub_mod_fini+0x4328>
    4624:	tbz	w0, #0, 46ac <grub_mod_fini+0x43ac>
    4628:	tbz	w1, #3, 4630 <grub_mod_fini+0x4330>
    462c:	tbnz	w0, #0, 46ac <grub_mod_fini+0x43ac>
    4630:	tbz	w1, #5, 4638 <grub_mod_fini+0x4338>
    4634:	tbz	w0, #1, 46ac <grub_mod_fini+0x43ac>
    4638:	ubfx	x0, x0, #3, #1
    463c:	tst	x1, #0x80
    4640:	csinc	w3, w0, wzr, ne  // ne = any
    4644:	mov	w0, w3
    4648:	ldp	x29, x30, [sp], #16
    464c:	ret
    4650:	ldr	x2, [x4]
    4654:	ubfx	x5, x3, #6, #2
    4658:	ldr	x2, [x2, x5, lsl #3]
    465c:	lsr	x2, x2, x3
    4660:	and	w3, w2, #0x1
    4664:	tbnz	w2, #0, 4600 <grub_mod_fini+0x4300>
    4668:	mov	w0, w3
    466c:	ret
    4670:	tbnz	w3, #7, 4688 <grub_mod_fini+0x4388>
    4674:	cmp	w3, #0xa
    4678:	b.ne	4690 <grub_mod_fini+0x4390>  // b.any
    467c:	ldr	x2, [x0, #112]
    4680:	ldr	x2, [x2, #200]
    4684:	tbnz	w2, #6, 4600 <grub_mod_fini+0x4300>
    4688:	mov	w3, #0x0                   	// #0
    468c:	b	4668 <grub_mod_fini+0x4368>
    4690:	cbnz	w3, 4600 <grub_mod_fini+0x4300>
    4694:	ldr	x2, [x0, #112]
    4698:	ldr	x2, [x2, #200]
    469c:	tbz	w2, #7, 4600 <grub_mod_fini+0x4300>
    46a0:	b	4688 <grub_mod_fini+0x4388>
    46a4:	mov	w3, #0x1                   	// #1
    46a8:	b	4668 <grub_mod_fini+0x4368>
    46ac:	mov	w3, #0x0                   	// #0
    46b0:	b	4644 <grub_mod_fini+0x4344>
    46b4:	nop
	...
    46c0:	stp	x29, x30, [sp, #-384]!
    46c4:	mov	x29, sp
    46c8:	stp	x19, x20, [sp, #16]
    46cc:	mov	x19, x2
    46d0:	ldr	x20, [x0]
    46d4:	stp	x21, x22, [sp, #32]
    46d8:	mov	x21, x0
    46dc:	stp	x23, x24, [sp, #48]
    46e0:	ldr	w0, [x20, #164]
    46e4:	stp	x25, x26, [sp, #64]
    46e8:	mov	x25, x1
    46ec:	cmp	w0, #0x1
    46f0:	stp	x27, x28, [sp, #80]
    46f4:	b.ne	4830 <grub_mod_fini+0x4530>  // b.any
    46f8:	ldr	x23, [x21, #24]
    46fc:	ubfx	w23, w23, #22, #1
    4700:	add	x26, sp, #0x84
    4704:	mov	x24, #0x0                   	// #0
    4708:	ldr	w0, [x25, #12]
    470c:	cmp	w0, w24
    4710:	b.le	4a30 <grub_mod_fini+0x4730>
    4714:	ldr	x0, [x25, #16]
    4718:	ldr	x2, [x20]
    471c:	ldrsw	x3, [x0, x24, lsl #2]
    4720:	add	x0, x2, x3, lsl #4
    4724:	lsl	x1, x3, #4
    4728:	ldrb	w22, [x0, #8]
    472c:	cmp	w22, #0x1
    4730:	b.ne	4844 <grub_mod_fini+0x4544>  // b.any
    4734:	ldrb	w0, [x2, x1]
    4738:	ldrb	w2, [x2, x1]
    473c:	strb	w22, [x19, x2]
    4740:	cbz	w23, 475c <grub_mod_fini+0x445c>
    4744:	sub	w2, w0, #0x41
    4748:	cmp	w2, #0x19
    474c:	b.hi	4754 <grub_mod_fini+0x4454>  // b.pmore
    4750:	add	w0, w0, #0x20
    4754:	mov	w2, #0x1                   	// #1
    4758:	strb	w2, [x19, w0, sxtw]
    475c:	ldr	x0, [x21, #24]
    4760:	tbz	w0, #22, 4828 <grub_mod_fini+0x4528>
    4764:	ldr	w0, [x20, #164]
    4768:	cmp	w0, #0x1
    476c:	b.le	4828 <grub_mod_fini+0x4528>
    4770:	ldr	x0, [x20]
    4774:	add	x27, sp, #0x70
    4778:	mov	w4, #0xff                  	// #255
    477c:	mov	w2, #0x1                   	// #1
    4780:	add	x3, x3, #0x1
    4784:	add	x22, x27, #0x1
    4788:	ldrb	w0, [x0, x1]
    478c:	movk	w4, #0x20, lsl #16
    4790:	movk	w2, #0x20, lsl #16
    4794:	strb	w0, [sp, #112]
    4798:	ldr	x0, [x20, #16]
    479c:	cmp	x0, x3
    47a0:	b.ls	47c4 <grub_mod_fini+0x44c4>  // b.plast
    47a4:	ldr	x1, [x20]
    47a8:	lsl	x5, x3, #4
    47ac:	add	x0, x1, x3, lsl #4
    47b0:	add	x3, x3, #0x1
    47b4:	ldr	w0, [x0, #8]
    47b8:	and	w0, w0, w4
    47bc:	cmp	w0, w2
    47c0:	b.eq	4838 <grub_mod_fini+0x4538>  // b.none
    47c4:	sub	x22, x22, x27
    47c8:	mov	x2, #0x8                   	// #8
    47cc:	mov	w1, #0x0                   	// #0
    47d0:	add	x0, sp, #0x80
    47d4:	bl	0 <grub_memset>
    47d8:	add	x3, sp, #0x80
    47dc:	mov	x2, x22
    47e0:	mov	x1, x27
    47e4:	add	x0, sp, #0x78
    47e8:	bl	f90 <grub_mod_fini+0xc90>
    47ec:	cmp	x22, x0
    47f0:	b.ne	4828 <grub_mod_fini+0x4528>  // b.any
    47f4:	ldr	w2, [sp, #120]
    47f8:	sub	w0, w2, #0x41
    47fc:	cmp	w0, #0x19
    4800:	b.hi	4808 <grub_mod_fini+0x4508>  // b.pmore
    4804:	add	w2, w2, #0x20
    4808:	add	x1, x27, #0x4
    480c:	mov	x0, x27
    4810:	bl	0 <grub_encode_utf8_character>
    4814:	cmn	x0, #0x1
    4818:	b.eq	4828 <grub_mod_fini+0x4528>  // b.none
    481c:	ldrb	w0, [sp, #112]
    4820:	mov	w1, #0x1                   	// #1
    4824:	strb	w1, [x19, x0]
    4828:	add	x24, x24, #0x1
    482c:	b	4708 <grub_mod_fini+0x4408>
    4830:	mov	w23, #0x0                   	// #0
    4834:	b	4700 <grub_mod_fini+0x4400>
    4838:	ldrb	w0, [x1, x5]
    483c:	strb	w0, [x22], #1
    4840:	b	4798 <grub_mod_fini+0x4498>
    4844:	cmp	w22, #0x3
    4848:	b.ne	48b0 <grub_mod_fini+0x45b0>  // b.any
    484c:	mov	x0, #0x0                   	// #0
    4850:	mov	w5, #0x1                   	// #1
    4854:	ldr	x2, [x20]
    4858:	lsl	x3, x0, #3
    485c:	ldr	x2, [x2, x1]
    4860:	ldr	x6, [x2, x0]
    4864:	mov	w2, #0x0                   	// #0
    4868:	mov	w4, w3
    486c:	lsr	x7, x6, x2
    4870:	tbz	w7, #0, 4890 <grub_mod_fini+0x4590>
    4874:	strb	w5, [x19, x3]
    4878:	cbz	w23, 4890 <grub_mod_fini+0x4590>
    487c:	sub	w7, w3, #0x41
    4880:	cmp	w7, #0x19
    4884:	b.hi	488c <grub_mod_fini+0x458c>  // b.pmore
    4888:	add	w4, w3, #0x20
    488c:	strb	w5, [x19, w4, sxtw]
    4890:	add	w2, w2, #0x1
    4894:	add	x3, x3, #0x1
    4898:	cmp	w2, #0x40
    489c:	b.ne	4868 <grub_mod_fini+0x4568>  // b.any
    48a0:	add	x0, x0, #0x8
    48a4:	cmp	x0, #0x20
    48a8:	b.ne	4854 <grub_mod_fini+0x4554>  // b.any
    48ac:	b	4828 <grub_mod_fini+0x4528>
    48b0:	cmp	w22, #0x6
    48b4:	b.ne	49f8 <grub_mod_fini+0x46f8>  // b.any
    48b8:	ldr	w0, [x20, #164]
    48bc:	ldr	x22, [x2, x1]
    48c0:	cmp	w0, #0x1
    48c4:	b.le	49ec <grub_mod_fini+0x46ec>
    48c8:	ldr	w0, [x22, #52]
    48cc:	cbnz	w0, 48e0 <grub_mod_fini+0x45e0>
    48d0:	ldrb	w0, [x22, #32]
    48d4:	tbnz	w0, #0, 48e0 <grub_mod_fini+0x45e0>
    48d8:	ldr	w0, [x22, #48]
    48dc:	cbz	w0, 49ec <grub_mod_fini+0x46ec>
    48e0:	mov	w22, #0x1                   	// #1
    48e4:	strb	wzr, [sp, #120]
    48e8:	mov	x2, #0x8                   	// #8
    48ec:	mov	w1, #0x0                   	// #0
    48f0:	add	x0, sp, #0x80
    48f4:	bl	0 <grub_memset>
    48f8:	add	x3, sp, #0x80
    48fc:	add	x1, sp, #0x78
    4900:	mov	x2, #0x1                   	// #1
    4904:	mov	x0, #0x0                   	// #0
    4908:	bl	f90 <grub_mod_fini+0xc90>
    490c:	cmn	x0, #0x2
    4910:	b.ne	491c <grub_mod_fini+0x461c>  // b.any
    4914:	ldrb	w0, [sp, #120]
    4918:	strb	w22, [x19, x0]
    491c:	ldrb	w0, [sp, #120]
    4920:	add	w0, w0, #0x1
    4924:	and	w0, w0, #0xff
    4928:	strb	w0, [sp, #120]
    492c:	cbnz	w0, 48e8 <grub_mod_fini+0x45e8>
    4930:	b	4828 <grub_mod_fini+0x4528>
    4934:	mov	x2, #0x8                   	// #8
    4938:	mov	w1, #0x0                   	// #0
    493c:	add	x0, sp, #0x78
    4940:	bl	0 <grub_memset>
    4944:	ldr	x0, [x22]
    4948:	lsl	x3, x27, #2
    494c:	mov	x1, x26
    4950:	str	x3, [sp, #104]
    4954:	ldr	w2, [x0, x3]
    4958:	add	x0, sp, #0x80
    495c:	bl	0 <grub_encode_utf8_character>
    4960:	cmn	x0, #0x1
    4964:	ldr	x3, [sp, #104]
    4968:	b.eq	4990 <grub_mod_fini+0x4690>  // b.none
    496c:	ldrb	w1, [sp, #128]
    4970:	ldrb	w0, [sp, #128]
    4974:	strb	w28, [x19, x1]
    4978:	cbz	w23, 4990 <grub_mod_fini+0x4690>
    497c:	sub	w1, w0, #0x41
    4980:	cmp	w1, #0x19
    4984:	b.hi	498c <grub_mod_fini+0x468c>  // b.pmore
    4988:	add	w0, w0, #0x20
    498c:	strb	w28, [x19, w0, sxtw]
    4990:	ldr	x0, [x21, #24]
    4994:	tbz	w0, #22, 49d8 <grub_mod_fini+0x46d8>
    4998:	ldr	w0, [x20, #164]
    499c:	cmp	w0, #0x1
    49a0:	b.le	49d8 <grub_mod_fini+0x46d8>
    49a4:	ldr	x0, [x22]
    49a8:	ldr	w2, [x0, x3]
    49ac:	sub	w0, w2, #0x41
    49b0:	cmp	w0, #0x19
    49b4:	b.hi	49bc <grub_mod_fini+0x46bc>  // b.pmore
    49b8:	add	w2, w2, #0x20
    49bc:	add	x0, sp, #0x80
    49c0:	add	x1, sp, #0x84
    49c4:	bl	0 <grub_encode_utf8_character>
    49c8:	cmn	x0, #0x1
    49cc:	b.eq	49d8 <grub_mod_fini+0x46d8>  // b.none
    49d0:	ldrb	w0, [sp, #128]
    49d4:	strb	w28, [x19, x0]
    49d8:	add	x27, x27, #0x1
    49dc:	ldr	w0, [x22, #36]
    49e0:	cmp	w0, w27
    49e4:	b.gt	4934 <grub_mod_fini+0x4634>
    49e8:	b	4828 <grub_mod_fini+0x4528>
    49ec:	mov	x27, #0x0                   	// #0
    49f0:	mov	w28, #0x1                   	// #1
    49f4:	b	49dc <grub_mod_fini+0x46dc>
    49f8:	and	w0, w22, #0xfffffffd
    49fc:	cmp	w0, #0x5
    4a00:	b.eq	4a0c <grub_mod_fini+0x470c>  // b.none
    4a04:	cmp	w22, #0x2
    4a08:	b.ne	4828 <grub_mod_fini+0x4528>  // b.any
    4a0c:	mov	x0, x19
    4a10:	mov	x2, #0x100                 	// #256
    4a14:	mov	w1, #0x1                   	// #1
    4a18:	bl	0 <grub_memset>
    4a1c:	cmp	w22, #0x2
    4a20:	b.ne	4a30 <grub_mod_fini+0x4730>  // b.any
    4a24:	ldrb	w0, [x21, #56]
    4a28:	orr	w0, w0, #0x1
    4a2c:	strb	w0, [x21, #56]
    4a30:	ldp	x19, x20, [sp, #16]
    4a34:	ldp	x21, x22, [sp, #32]
    4a38:	ldp	x23, x24, [sp, #48]
    4a3c:	ldp	x25, x26, [sp, #64]
    4a40:	ldp	x27, x28, [sp, #80]
    4a44:	ldp	x29, x30, [sp], #384
    4a48:	ret
    4a4c:	stp	x29, x30, [sp, #-64]!
    4a50:	mov	x29, sp
    4a54:	stp	x21, x22, [sp, #32]
    4a58:	mov	x21, x1
    4a5c:	ldr	w1, [x2, #4]
    4a60:	stp	x19, x20, [sp, #16]
    4a64:	mov	x22, x0
    4a68:	stp	x23, x24, [sp, #48]
    4a6c:	cbnz	w1, 4a90 <grub_mod_fini+0x4790>
    4a70:	str	wzr, [x0]
    4a74:	mov	x19, #0x0                   	// #0
    4a78:	mov	x0, x19
    4a7c:	ldp	x19, x20, [sp, #16]
    4a80:	ldp	x21, x22, [sp, #32]
    4a84:	ldp	x23, x24, [sp, #48]
    4a88:	ldp	x29, x30, [sp], #64
    4a8c:	ret
    4a90:	mov	x20, x2
    4a94:	mov	w23, w1
    4a98:	mov	x0, #0x0                   	// #0
    4a9c:	cmp	w1, w0
    4aa0:	b.gt	4b00 <grub_mod_fini+0x4800>
    4aa4:	ldr	w0, [x21, #132]
    4aa8:	mov	x8, #0x0                   	// #0
    4aac:	ldr	x1, [x21, #64]
    4ab0:	and	w0, w23, w0
    4ab4:	lsl	x2, x0, #4
    4ab8:	add	x7, x1, x0, lsl #4
    4abc:	ldr	w9, [x1, x2]
    4ac0:	cmp	w9, w8
    4ac4:	b.gt	4b14 <grub_mod_fini+0x4814>
    4ac8:	mov	x0, #0x58                  	// #88
    4acc:	bl	0 <grub_zalloc>
    4ad0:	mov	x19, x0
    4ad4:	cbz	x0, 4af4 <grub_mod_fini+0x47f4>
    4ad8:	add	x24, x0, #0x8
    4adc:	mov	x1, x20
    4ae0:	mov	x0, x24
    4ae4:	bl	2f88 <grub_mod_fini+0x2c88>
    4ae8:	cbz	w0, 4b44 <grub_mod_fini+0x4844>
    4aec:	mov	x0, x19
    4af0:	bl	0 <grub_free>
    4af4:	mov	w0, #0xc                   	// #12
    4af8:	str	w0, [x22]
    4afc:	b	4a74 <grub_mod_fini+0x4774>
    4b00:	ldr	x2, [x20, #8]
    4b04:	ldr	w2, [x2, x0, lsl #2]
    4b08:	add	x0, x0, #0x1
    4b0c:	add	w23, w23, w2
    4b10:	b	4a9c <grub_mod_fini+0x479c>
    4b14:	ldr	x0, [x7, #8]
    4b18:	ldr	x19, [x0, x8, lsl #3]
    4b1c:	ldr	w0, [x19]
    4b20:	cmp	w0, w23
    4b24:	b.ne	4b3c <grub_mod_fini+0x483c>  // b.any
    4b28:	mov	x1, x20
    4b2c:	add	x0, x19, #0x8
    4b30:	bl	11dc <grub_mod_fini+0xedc>
    4b34:	tst	w0, #0xff
    4b38:	b.ne	4a78 <grub_mod_fini+0x4778>  // b.any
    4b3c:	add	x8, x8, #0x1
    4b40:	b	4ac0 <grub_mod_fini+0x47c0>
    4b44:	mov	x0, #0x0                   	// #0
    4b48:	str	x24, [x19, #56]
    4b4c:	ldr	w1, [x20, #4]
    4b50:	cmp	w1, w0
    4b54:	b.gt	4b78 <grub_mod_fini+0x4878>
    4b58:	mov	w2, w23
    4b5c:	mov	x1, x19
    4b60:	mov	x0, x21
    4b64:	bl	2d20 <grub_mod_fini+0x2a20>
    4b68:	cbz	w0, 4a78 <grub_mod_fini+0x4778>
    4b6c:	mov	x0, x19
    4b70:	bl	1f2c <grub_mod_fini+0x1c2c>
    4b74:	b	4af4 <grub_mod_fini+0x47f4>
    4b78:	ldr	x1, [x20, #8]
    4b7c:	ldr	x2, [x21]
    4b80:	ldrsw	x1, [x1, x0, lsl #2]
    4b84:	add	x1, x2, x1, lsl #4
    4b88:	ldrb	w2, [x1, #8]
    4b8c:	cmp	w2, #0x1
    4b90:	b.ne	4ba0 <grub_mod_fini+0x48a0>  // b.any
    4b94:	ldr	w3, [x1, #8]
    4b98:	tst	w3, #0x3ff00
    4b9c:	b.eq	4bcc <grub_mod_fini+0x48cc>  // b.none
    4ba0:	ldrb	w3, [x19, #80]
    4ba4:	cmp	w2, #0x2
    4ba8:	ldrb	w5, [x1, #10]
    4bac:	ubfx	x4, x3, #5, #1
    4bb0:	ubfx	x5, x5, #4, #1
    4bb4:	orr	w4, w4, w5
    4bb8:	bfi	w3, w4, #5, #1
    4bbc:	strb	w3, [x19, #80]
    4bc0:	b.ne	4bd4 <grub_mod_fini+0x48d4>  // b.any
    4bc4:	orr	w3, w3, #0x10
    4bc8:	strb	w3, [x19, #80]
    4bcc:	add	x0, x0, #0x1
    4bd0:	b	4b4c <grub_mod_fini+0x484c>
    4bd4:	cmp	w2, #0x4
    4bd8:	b.ne	4be4 <grub_mod_fini+0x48e4>  // b.any
    4bdc:	orr	w3, w3, #0x40
    4be0:	b	4bc8 <grub_mod_fini+0x48c8>
    4be4:	cmp	w2, #0xc
    4be8:	b.eq	4bf8 <grub_mod_fini+0x48f8>  // b.none
    4bec:	ldr	w1, [x1, #8]
    4bf0:	tst	w1, #0x3ff00
    4bf4:	b.eq	4bcc <grub_mod_fini+0x48cc>  // b.none
    4bf8:	ldrb	w1, [x19, #80]
    4bfc:	orr	w1, w1, #0xffffff80
    4c00:	strb	w1, [x19, #80]
    4c04:	b	4bcc <grub_mod_fini+0x48cc>
    4c08:	stp	x29, x30, [sp, #-128]!
    4c0c:	mov	x29, sp
    4c10:	stp	x19, x20, [sp, #16]
    4c14:	stp	x21, x22, [sp, #32]
    4c18:	mov	x21, x0
    4c1c:	stp	x23, x24, [sp, #48]
    4c20:	mov	x23, x1
    4c24:	mov	w24, w2
    4c28:	mov	w1, w2
    4c2c:	stp	x25, x26, [sp, #64]
    4c30:	mov	w26, w3
    4c34:	stp	x27, x28, [sp, #80]
    4c38:	mov	w27, w4
    4c3c:	bl	1608 <grub_mod_fini+0x1308>
    4c40:	cmn	w0, #0x1
    4c44:	b.ne	4c68 <grub_mod_fini+0x4968>  // b.any
    4c48:	mov	w0, #0x0                   	// #0
    4c4c:	ldp	x19, x20, [sp, #16]
    4c50:	ldp	x21, x22, [sp, #32]
    4c54:	ldp	x23, x24, [sp, #48]
    4c58:	ldp	x25, x26, [sp, #64]
    4c5c:	ldp	x27, x28, [sp, #80]
    4c60:	ldp	x29, x30, [sp], #128
    4c64:	ret
    4c68:	mov	w22, #0x14                  	// #20
    4c6c:	ldr	x25, [x21, #112]
    4c70:	smull	x22, w0, w22
    4c74:	ldr	x20, [x21, #160]
    4c78:	add	x20, x20, x22
    4c7c:	ldr	w1, [x20]
    4c80:	mov	x0, x23
    4c84:	bl	1240 <grub_mod_fini+0xf40>
    4c88:	cbz	w0, 4db4 <grub_mod_fini+0x4ab4>
    4c8c:	ldp	w0, w19, [x20, #8]
    4c90:	sxtw	x1, w1
    4c94:	add	w19, w24, w19
    4c98:	sub	w19, w19, w0
    4c9c:	cmp	w24, w19
    4ca0:	b.ne	4d1c <grub_mod_fini+0x4a1c>  // b.any
    4ca4:	ldr	x0, [x25, #40]
    4ca8:	add	x1, x0, x1, lsl #4
    4cac:	ldr	x0, [x1, #8]
    4cb0:	ldr	w1, [x0]
    4cb4:	mov	x0, x23
    4cb8:	bl	1240 <grub_mod_fini+0xf40>
    4cbc:	cbnz	w0, 4db4 <grub_mod_fini+0x4ab4>
    4cc0:	add	x0, sp, #0x70
    4cc4:	bl	1ad8 <grub_mod_fini+0x17d8>
    4cc8:	mov	w3, w27
    4ccc:	mov	w2, w26
    4cd0:	add	x1, sp, #0x70
    4cd4:	str	w0, [sp, #108]
    4cd8:	mov	x0, x25
    4cdc:	bl	44b0 <grub_mod_fini+0x41b0>
    4ce0:	add	x1, sp, #0x70
    4ce4:	mov	w19, w0
    4ce8:	mov	x0, x23
    4cec:	bl	2e18 <grub_mod_fini+0x2b18>
    4cf0:	mov	w20, w0
    4cf4:	ldr	x0, [sp, #120]
    4cf8:	bl	0 <grub_free>
    4cfc:	ldr	w0, [sp, #108]
    4d00:	orr	w1, w19, w20
    4d04:	orr	w1, w1, w0
    4d08:	cbz	w1, 4c74 <grub_mod_fini+0x4974>
    4d0c:	cbnz	w0, 4c4c <grub_mod_fini+0x494c>
    4d10:	cmp	w19, #0x0
    4d14:	csel	w0, w19, w20, ne  // ne = any
    4d18:	b	4c4c <grub_mod_fini+0x494c>
    4d1c:	ldr	x0, [x25, #24]
    4d20:	sbfiz	x19, x19, #3, #32
    4d24:	ldr	w28, [x0, x1, lsl #2]
    4d28:	ldr	x0, [x21, #136]
    4d2c:	ldr	x6, [x0, x19]
    4d30:	cbz	x6, 4de0 <grub_mod_fini+0x4ae0>
    4d34:	add	x6, x6, #0x8
    4d38:	mov	w1, w28
    4d3c:	mov	x0, x6
    4d40:	bl	1240 <grub_mod_fini+0xf40>
    4d44:	cbnz	w0, 4db4 <grub_mod_fini+0x4ab4>
    4d48:	mov	x1, x6
    4d4c:	add	x0, sp, #0x70
    4d50:	bl	2f88 <grub_mod_fini+0x2c88>
    4d54:	str	w0, [sp, #108]
    4d58:	mov	w1, w28
    4d5c:	add	x0, sp, #0x70
    4d60:	bl	2928 <grub_mod_fini+0x2628>
    4d64:	and	w0, w0, #0xff
    4d68:	ldr	w1, [sp, #108]
    4d6c:	eor	w0, w0, #0x1
    4d70:	cmp	w1, #0x0
    4d74:	cset	w1, ne  // ne = any
    4d78:	orr	w0, w1, w0
    4d7c:	cbnz	w0, 4dc4 <grub_mod_fini+0x4ac4>
    4d80:	ldr	x28, [x21, #136]
    4d84:	add	x2, sp, #0x70
    4d88:	mov	x1, x25
    4d8c:	add	x0, sp, #0x6c
    4d90:	bl	4a4c <grub_mod_fini+0x474c>
    4d94:	str	x0, [x28, x19]
    4d98:	ldr	x0, [sp, #120]
    4d9c:	bl	0 <grub_free>
    4da0:	ldr	x0, [x21, #136]
    4da4:	ldr	x0, [x0, x19]
    4da8:	cbnz	x0, 4db4 <grub_mod_fini+0x4ab4>
    4dac:	ldr	w0, [sp, #108]
    4db0:	cbnz	w0, 4c4c <grub_mod_fini+0x494c>
    4db4:	ldrb	w0, [x20, #16]
    4db8:	add	x20, x20, #0x14
    4dbc:	cbnz	w0, 4c7c <grub_mod_fini+0x497c>
    4dc0:	b	4c48 <grub_mod_fini+0x4948>
    4dc4:	ldr	x0, [sp, #120]
    4dc8:	bl	0 <grub_free>
    4dcc:	ldr	w0, [sp, #108]
    4dd0:	mov	w1, #0xc                   	// #12
    4dd4:	cmp	w0, #0x0
    4dd8:	csel	w0, w0, w1, ne  // ne = any
    4ddc:	b	4c4c <grub_mod_fini+0x494c>
    4de0:	mov	w1, w28
    4de4:	add	x0, sp, #0x70
    4de8:	bl	1ad8 <grub_mod_fini+0x17d8>
    4dec:	str	w0, [sp, #108]
    4df0:	cbz	w0, 4d80 <grub_mod_fini+0x4a80>
    4df4:	b	4c4c <grub_mod_fini+0x494c>
    4df8:	stp	x29, x30, [sp, #-96]!
    4dfc:	mov	x29, sp
    4e00:	stp	x19, x20, [sp, #16]
    4e04:	mov	x20, x1
    4e08:	mov	x19, #0x0                   	// #0
    4e0c:	stp	x21, x22, [sp, #32]
    4e10:	mov	x22, x0
    4e14:	mov	w21, w3
    4e18:	str	x23, [sp, #48]
    4e1c:	mov	x23, x2
    4e20:	cmp	w21, w19
    4e24:	b.gt	4e30 <grub_mod_fini+0x4b30>
    4e28:	mov	w0, #0x0                   	// #0
    4e2c:	b	4e88 <grub_mod_fini+0x4b88>
    4e30:	ldr	x1, [x20, x19, lsl #3]
    4e34:	ldr	x2, [x23, x19, lsl #3]
    4e38:	cbnz	x1, 4e48 <grub_mod_fini+0x4b48>
    4e3c:	str	x2, [x20, x19, lsl #3]
    4e40:	add	x19, x19, #0x1
    4e44:	b	4e20 <grub_mod_fini+0x4b20>
    4e48:	cbz	x2, 4e40 <grub_mod_fini+0x4b40>
    4e4c:	add	x2, x2, #0x8
    4e50:	add	x1, x1, #0x8
    4e54:	add	x0, sp, #0x50
    4e58:	bl	2ffc <grub_mod_fini+0x2cfc>
    4e5c:	str	w0, [sp, #76]
    4e60:	cbnz	w0, 4e88 <grub_mod_fini+0x4b88>
    4e64:	add	x2, sp, #0x50
    4e68:	mov	x1, x22
    4e6c:	add	x0, sp, #0x4c
    4e70:	bl	4a4c <grub_mod_fini+0x474c>
    4e74:	str	x0, [x20, x19, lsl #3]
    4e78:	ldr	x0, [sp, #88]
    4e7c:	bl	0 <grub_free>
    4e80:	ldr	w0, [sp, #76]
    4e84:	cbz	w0, 4e40 <grub_mod_fini+0x4b40>
    4e88:	ldp	x19, x20, [sp, #16]
    4e8c:	ldp	x21, x22, [sp, #32]
    4e90:	ldr	x23, [sp, #48]
    4e94:	ldp	x29, x30, [sp], #96
    4e98:	ret
    4e9c:	stp	x29, x30, [sp, #-192]!
    4ea0:	mov	x29, sp
    4ea4:	stp	x19, x20, [sp, #16]
    4ea8:	mov	x19, x0
    4eac:	ldr	w20, [x0, #44]
    4eb0:	ldr	w0, [x0, #64]
    4eb4:	stp	x23, x24, [sp, #48]
    4eb8:	ldr	w24, [x19, #52]
    4ebc:	stp	x21, x22, [sp, #32]
    4ec0:	cmp	w24, w0
    4ec4:	stp	x25, x26, [sp, #64]
    4ec8:	csel	w24, w24, w0, le
    4ecc:	stp	x27, x28, [sp, #80]
    4ed0:	ldrb	w0, [x19, #98]
    4ed4:	cbnz	w0, 5134 <grub_mod_fini+0x4e34>
    4ed8:	ldr	x0, [x19, #80]
    4edc:	cbnz	x0, 5134 <grub_mod_fini+0x4e34>
    4ee0:	ldrb	w0, [x19, #100]
    4ee4:	cbnz	w0, 5134 <grub_mod_fini+0x4e34>
    4ee8:	add	x25, sp, #0x84
    4eec:	mov	w23, #0xffffffff            	// #-1
    4ef0:	cmp	w20, w24
    4ef4:	b.ge	5128 <grub_mod_fini+0x4e28>  // b.tcont
    4ef8:	ldp	w11, w4, [x19, #36]
    4efc:	sxtw	x26, w20
    4f00:	ldr	x1, [x19]
    4f04:	add	w0, w4, w20
    4f08:	ldrb	w0, [x1, w0, sxtw]
    4f0c:	and	w2, w0, #0xffffff80
    4f10:	orr	w2, w2, w11
    4f14:	cbnz	w2, 4f44 <grub_mod_fini+0x4c44>
    4f18:	sub	w1, w0, #0x61
    4f1c:	cmp	w1, #0x19
    4f20:	b.hi	4f28 <grub_mod_fini+0x4c28>  // b.pmore
    4f24:	sub	w0, w0, #0x20
    4f28:	ldr	x1, [x19, #8]
    4f2c:	add	w20, w20, #0x1
    4f30:	strb	w0, [x1, x26]
    4f34:	ldp	x1, x0, [x19, #8]
    4f38:	ldrb	w1, [x1, x26]
    4f3c:	str	w1, [x0, x26, lsl #2]
    4f40:	b	4ef0 <grub_mod_fini+0x4bf0>
    4f44:	mov	x3, x19
    4f48:	add	x4, x26, w4, sxtw
    4f4c:	sub	w2, w24, w20
    4f50:	add	x1, x1, x4
    4f54:	add	x0, sp, #0x7c
    4f58:	ldr	w12, [x3, #32]!
    4f5c:	sxtw	x2, w2
    4f60:	bl	f90 <grub_mod_fini+0xc90>
    4f64:	mov	x21, x0
    4f68:	sub	x0, x0, #0x1
    4f6c:	cmn	x0, #0x4
    4f70:	b.hi	50d8 <grub_mod_fini+0x4dd8>  // b.pmore
    4f74:	ldr	w22, [sp, #124]
    4f78:	sub	w0, w22, #0x61
    4f7c:	cmp	w0, #0x19
    4f80:	b.hi	536c <grub_mod_fini+0x506c>  // b.pmore
    4f84:	sub	w22, w22, #0x20
    4f88:	mov	x1, x25
    4f8c:	mov	w2, w22
    4f90:	add	x0, sp, #0x80
    4f94:	bl	0 <grub_encode_utf8_character>
    4f98:	cmp	x21, x0
    4f9c:	b.ne	4fcc <grub_mod_fini+0x4ccc>  // b.any
    4fa0:	ldr	x0, [x19, #8]
    4fa4:	mov	x2, x21
    4fa8:	add	x1, sp, #0x80
    4fac:	add	x0, x0, x26
    4fb0:	bl	1c70 <grub_mod_fini+0x1970>
    4fb4:	ldr	x1, [x19, #16]
    4fb8:	add	w0, w20, #0x1
    4fbc:	add	w21, w20, w21
    4fc0:	sxtw	x2, w0
    4fc4:	str	w22, [x1, x26, lsl #2]
    4fc8:	b	50b8 <grub_mod_fini+0x4db8>
    4fcc:	mov	w22, w20
    4fd0:	ldr	x3, [x19, #80]
    4fd4:	sub	w2, w24, w20
    4fd8:	ldp	w28, w27, [x19, #32]
    4fdc:	cbz	x3, 5168 <grub_mod_fini+0x4e68>
    4fe0:	ldr	w4, [x19, #104]
    4fe4:	add	x25, sp, #0x80
    4fe8:	mov	x0, #0x0                   	// #0
    4fec:	mov	w5, w0
    4ff0:	cmp	w4, w0
    4ff4:	b.le	5000 <grub_mod_fini+0x4d00>
    4ff8:	cmp	w2, w0
    4ffc:	b.gt	5144 <grub_mod_fini+0x4e44>
    5000:	add	x3, x19, #0x20
    5004:	sxtw	x2, w2
    5008:	mov	x1, x25
    500c:	add	x0, sp, #0x7c
    5010:	bl	f90 <grub_mod_fini+0xc90>
    5014:	mov	x21, x0
    5018:	sub	x0, x0, #0x1
    501c:	cmn	x0, #0x4
    5020:	b.hi	52f4 <grub_mod_fini+0x4ff4>  // b.pmore
    5024:	ldr	w26, [sp, #124]
    5028:	sxtw	x23, w20
    502c:	sub	w0, w26, #0x61
    5030:	cmp	w0, #0x19
    5034:	b.hi	52b4 <grub_mod_fini+0x4fb4>  // b.pmore
    5038:	sub	w26, w26, #0x20
    503c:	add	x0, sp, #0x80
    5040:	mov	w2, w26
    5044:	add	x1, sp, #0x84
    5048:	bl	0 <grub_encode_utf8_character>
    504c:	mov	x2, x0
    5050:	cmp	x21, x0
    5054:	b.ne	517c <grub_mod_fini+0x4e7c>  // b.any
    5058:	ldr	x0, [x19, #8]
    505c:	mov	x2, x21
    5060:	add	x1, sp, #0x80
    5064:	add	x0, x0, x23
    5068:	bl	1c70 <grub_mod_fini+0x1970>
    506c:	ldrb	w0, [x19, #100]
    5070:	cbnz	w0, 52c4 <grub_mod_fini+0x4fc4>
    5074:	ldr	x2, [x19, #16]
    5078:	add	w0, w20, #0x1
    507c:	add	w22, w22, w21
    5080:	add	w21, w20, w21
    5084:	sxtw	x1, w0
    5088:	mov	w3, #0xffffffff            	// #-1
    508c:	str	w26, [x2, x23, lsl #2]
    5090:	cmp	w21, w1
    5094:	b.gt	52e8 <grub_mod_fini+0x4fe8>
    5098:	mvn	w1, w20
    509c:	cmp	w20, w21
    50a0:	add	w1, w1, w21
    50a4:	csel	w1, w1, wzr, lt  // lt = tstop
    50a8:	add	w20, w1, w0
    50ac:	b	5138 <grub_mod_fini+0x4e38>
    50b0:	str	w23, [x1, x2, lsl #2]
    50b4:	add	x2, x2, #0x1
    50b8:	cmp	w21, w2
    50bc:	b.gt	50b0 <grub_mod_fini+0x4db0>
    50c0:	mvn	w1, w20
    50c4:	cmp	w20, w21
    50c8:	add	w1, w1, w21
    50cc:	csel	w1, w1, wzr, lt  // lt = tstop
    50d0:	add	w20, w1, w0
    50d4:	b	4ef0 <grub_mod_fini+0x4bf0>
    50d8:	cmn	x0, #0x3
    50dc:	b.ne	50f0 <grub_mod_fini+0x4df0>  // b.any
    50e0:	ldr	w1, [x19, #52]
    50e4:	ldr	w0, [x19, #64]
    50e8:	cmp	w1, w0
    50ec:	b.lt	5124 <grub_mod_fini+0x4e24>  // b.tstop
    50f0:	ldr	w0, [x19, #40]
    50f4:	cmn	x21, #0x1
    50f8:	ldr	x1, [x19]
    50fc:	add	w0, w20, w0
    5100:	add	w20, w20, #0x1
    5104:	ldrb	w0, [x1, w0, sxtw]
    5108:	ldr	x1, [x19, #8]
    510c:	strb	w0, [x1, x26]
    5110:	ldr	x1, [x19, #16]
    5114:	str	w0, [x1, x26, lsl #2]
    5118:	b.ne	4ef0 <grub_mod_fini+0x4bf0>  // b.any
    511c:	stp	w12, w11, [x19, #32]
    5120:	b	4ef0 <grub_mod_fini+0x4bf0>
    5124:	stp	w12, w11, [x19, #32]
    5128:	stp	w20, w20, [x19, #44]
    512c:	mov	w0, #0x0                   	// #0
    5130:	b	51c4 <grub_mod_fini+0x4ec4>
    5134:	ldr	w22, [x19, #48]
    5138:	cmp	w20, w24
    513c:	b.lt	4fd0 <grub_mod_fini+0x4cd0>  // b.tstop
    5140:	b	5198 <grub_mod_fini+0x4e98>
    5144:	ldr	w1, [x19, #40]
    5148:	add	w1, w22, w1
    514c:	add	w1, w1, w5
    5150:	ldr	x5, [x19]
    5154:	ldrb	w1, [x5, w1, sxtw]
    5158:	ldrb	w1, [x3, x1]
    515c:	strb	w1, [x25, x0]
    5160:	add	x0, x0, #0x1
    5164:	b	4fec <grub_mod_fini+0x4cec>
    5168:	ldrsw	x25, [x19, #40]
    516c:	add	x0, x25, w22, sxtw
    5170:	ldr	x25, [x19]
    5174:	add	x25, x25, x0
    5178:	b	5000 <grub_mod_fini+0x4d00>
    517c:	cmn	x0, #0x1
    5180:	b.eq	52b4 <grub_mod_fini+0x4fb4>  // b.none
    5184:	add	x1, x23, x0
    5188:	ldrsw	x0, [x19, #52]
    518c:	cmp	x1, x0
    5190:	b.ls	51a0 <grub_mod_fini+0x4ea0>  // b.plast
    5194:	stp	w28, w27, [x19, #32]
    5198:	stp	w20, w22, [x19, #44]
    519c:	b	512c <grub_mod_fini+0x4e2c>
    51a0:	ldr	x1, [x19, #24]
    51a4:	cbnz	x1, 51e0 <grub_mod_fini+0x4ee0>
    51a8:	lsl	x0, x0, #2
    51ac:	str	x2, [sp, #104]
    51b0:	bl	0 <grub_malloc>
    51b4:	str	x0, [x19, #24]
    51b8:	ldr	x2, [sp, #104]
    51bc:	cbnz	x0, 51e0 <grub_mod_fini+0x4ee0>
    51c0:	mov	w0, #0xc                   	// #12
    51c4:	ldp	x19, x20, [sp, #16]
    51c8:	ldp	x21, x22, [sp, #32]
    51cc:	ldp	x23, x24, [sp, #48]
    51d0:	ldp	x25, x26, [sp, #64]
    51d4:	ldp	x27, x28, [sp, #80]
    51d8:	ldp	x29, x30, [sp], #192
    51dc:	ret
    51e0:	ldrb	w0, [x19, #100]
    51e4:	cbz	w0, 5290 <grub_mod_fini+0x4f90>
    51e8:	ldr	x0, [x19, #8]
    51ec:	add	x1, sp, #0x80
    51f0:	str	x2, [sp, #104]
    51f4:	add	x0, x0, x23
    51f8:	bl	1c70 <grub_mod_fini+0x1970>
    51fc:	ldr	x0, [x19, #16]
    5200:	lsl	x1, x23, #2
    5204:	ldr	x2, [sp, #104]
    5208:	sub	w5, w21, #0x1
    520c:	add	x23, x0, x23, lsl #2
    5210:	str	w26, [x0, x1]
    5214:	ldr	x0, [x19, #24]
    5218:	mov	w6, #0xffffffff            	// #-1
    521c:	add	x4, x0, x1
    5220:	str	w22, [x0, x1]
    5224:	mov	x1, #0x1                   	// #1
    5228:	mov	w0, w21
    522c:	cmp	x1, x2
    5230:	b.cc	5298 <grub_mod_fini+0x4f98>  // b.lo, b.ul, b.last
    5234:	ldp	w24, w3, [x19, #64]
    5238:	sub	w4, w2, w21
    523c:	add	w1, w4, w24
    5240:	str	w1, [x19, #64]
    5244:	cmp	w3, w22
    5248:	b.le	5258 <grub_mod_fini+0x4f58>
    524c:	ldr	w3, [x19, #72]
    5250:	add	w3, w3, w4
    5254:	str	w3, [x19, #72]
    5258:	ldr	w24, [x19, #52]
    525c:	add	w20, w20, w2
    5260:	add	w22, w22, w0
    5264:	cmp	w24, w1
    5268:	csel	w24, w24, w1, le
    526c:	b	5138 <grub_mod_fini+0x4e38>
    5270:	ldr	x0, [x19, #24]
    5274:	str	w1, [x0, x1, lsl #2]
    5278:	add	x1, x1, #0x1
    527c:	cmp	x23, x1
    5280:	b.hi	5270 <grub_mod_fini+0x4f70>  // b.pmore
    5284:	mov	w0, #0x1                   	// #1
    5288:	strb	w0, [x19, #100]
    528c:	b	51e8 <grub_mod_fini+0x4ee8>
    5290:	mov	x1, #0x0                   	// #0
    5294:	b	527c <grub_mod_fini+0x4f7c>
    5298:	cmp	x1, x21
    529c:	csel	w3, w1, w5, cc  // cc = lo, ul, last
    52a0:	add	w3, w22, w3
    52a4:	str	w3, [x4, x1, lsl #2]
    52a8:	str	w6, [x23, x1, lsl #2]
    52ac:	add	x1, x1, #0x1
    52b0:	b	5228 <grub_mod_fini+0x4f28>
    52b4:	mov	x2, x21
    52b8:	mov	x1, x25
    52bc:	ldr	x0, [x19, #8]
    52c0:	b	5064 <grub_mod_fini+0x4d64>
    52c4:	ldr	x1, [x19, #24]
    52c8:	mov	x0, #0x0                   	// #0
    52cc:	add	x1, x1, x23, lsl #2
    52d0:	add	w2, w22, w0
    52d4:	str	w2, [x1, x0, lsl #2]
    52d8:	add	x0, x0, #0x1
    52dc:	cmp	x21, x0
    52e0:	b.ne	52d0 <grub_mod_fini+0x4fd0>  // b.any
    52e4:	b	5074 <grub_mod_fini+0x4d74>
    52e8:	str	w3, [x2, x1, lsl #2]
    52ec:	add	x1, x1, #0x1
    52f0:	b	5090 <grub_mod_fini+0x4d90>
    52f4:	cmn	x0, #0x3
    52f8:	b.ne	530c <grub_mod_fini+0x500c>  // b.any
    52fc:	ldr	w1, [x19, #52]
    5300:	ldr	w0, [x19, #64]
    5304:	cmp	w1, w0
    5308:	b.lt	5194 <grub_mod_fini+0x4e94>  // b.tstop
    530c:	ldr	w0, [x19, #40]
    5310:	ldr	x1, [x19]
    5314:	add	w0, w22, w0
    5318:	ldrb	w1, [x1, w0, sxtw]
    531c:	ldr	x0, [x19, #80]
    5320:	cbz	x0, 532c <grub_mod_fini+0x502c>
    5324:	and	x1, x1, #0xff
    5328:	ldrb	w1, [x0, x1]
    532c:	ldr	x2, [x19, #8]
    5330:	sxtw	x0, w20
    5334:	strb	w1, [x2, x0]
    5338:	lsl	x0, x0, #2
    533c:	ldrb	w2, [x19, #100]
    5340:	cbz	w2, 534c <grub_mod_fini+0x504c>
    5344:	ldr	x2, [x19, #24]
    5348:	str	w22, [x2, x0]
    534c:	ldr	x2, [x19, #16]
    5350:	add	w22, w22, #0x1
    5354:	add	w20, w20, #0x1
    5358:	cmn	x21, #0x1
    535c:	str	w1, [x2, x0]
    5360:	b.ne	5138 <grub_mod_fini+0x4e38>  // b.any
    5364:	stp	w28, w27, [x19, #32]
    5368:	b	5138 <grub_mod_fini+0x4e38>
    536c:	ldp	x3, x0, [x19]
    5370:	mov	x2, x21
    5374:	ldrsw	x1, [x19, #40]
    5378:	add	x1, x1, x26
    537c:	add	x1, x3, x1
    5380:	b	4fac <grub_mod_fini+0x4cac>
    5384:	stp	x29, x30, [sp, #-32]!
    5388:	mov	w3, #0x3ffffffe            	// #1073741822
    538c:	mov	x29, sp
    5390:	ldr	w2, [x0, #52]
    5394:	stp	x19, x20, [sp, #16]
    5398:	cmp	w2, w3
    539c:	b.ls	53b4 <grub_mod_fini+0x50b4>  // b.plast
    53a0:	mov	w20, #0xc                   	// #12
    53a4:	mov	w0, w20
    53a8:	ldp	x19, x20, [sp, #16]
    53ac:	ldp	x29, x30, [sp], #32
    53b0:	ret
    53b4:	ldr	w3, [x0, #64]
    53b8:	lsl	w2, w2, #1
    53bc:	mov	x19, x0
    53c0:	cmp	w2, w3
    53c4:	csel	w2, w2, w3, le
    53c8:	cmp	w2, w1
    53cc:	csel	w1, w2, w1, ge  // ge = tcont
    53d0:	bl	19bc <grub_mod_fini+0x16bc>
    53d4:	mov	w20, w0
    53d8:	cbnz	w0, 53a4 <grub_mod_fini+0x50a4>
    53dc:	ldr	x0, [x19, #136]
    53e0:	cbz	x0, 53fc <grub_mod_fini+0x50fc>
    53e4:	ldr	w1, [x19, #52]
    53e8:	add	w1, w1, #0x1
    53ec:	sbfiz	x1, x1, #3, #32
    53f0:	bl	0 <grub_realloc>
    53f4:	cbz	x0, 53a0 <grub_mod_fini+0x50a0>
    53f8:	str	x0, [x19, #136]
    53fc:	ldrb	w1, [x19, #96]
    5400:	ldr	w0, [x19, #104]
    5404:	cmp	w0, #0x1
    5408:	cbz	w1, 5428 <grub_mod_fini+0x5128>
    540c:	mov	x0, x19
    5410:	b.le	5420 <grub_mod_fini+0x5120>
    5414:	ldp	x19, x20, [sp, #16]
    5418:	ldp	x29, x30, [sp], #32
    541c:	b	4e9c <grub_mod_fini+0x4b9c>
    5420:	bl	3bac <grub_mod_fini+0x38ac>
    5424:	b	53a4 <grub_mod_fini+0x50a4>
    5428:	b.le	5438 <grub_mod_fini+0x5138>
    542c:	mov	x0, x19
    5430:	bl	1770 <grub_mod_fini+0x1470>
    5434:	b	53a4 <grub_mod_fini+0x50a4>
    5438:	ldr	x0, [x19, #80]
    543c:	cbz	x0, 53a4 <grub_mod_fini+0x50a4>
    5440:	mov	x0, x19
    5444:	bl	1178 <grub_mod_fini+0xe78>
    5448:	b	53a4 <grub_mod_fini+0x50a4>
    544c:	stp	x29, x30, [sp, #-48]!
    5450:	mov	x29, sp
    5454:	stp	x19, x20, [sp, #16]
    5458:	mov	x19, x0
    545c:	mov	w20, w1
    5460:	str	x21, [sp, #32]
    5464:	ldr	w21, [x0, #144]
    5468:	ldr	w0, [x0, #52]
    546c:	cmp	w0, w1
    5470:	b.gt	5480 <grub_mod_fini+0x5180>
    5474:	ldr	w1, [x19, #64]
    5478:	cmp	w0, w1
    547c:	b.lt	54a8 <grub_mod_fini+0x51a8>  // b.tstop
    5480:	ldr	w0, [x19, #44]
    5484:	cmp	w0, w20
    5488:	b.le	549c <grub_mod_fini+0x519c>
    548c:	cmp	w21, w20
    5490:	b.lt	54c8 <grub_mod_fini+0x51c8>  // b.tstop
    5494:	mov	w0, #0x0                   	// #0
    5498:	b	54b8 <grub_mod_fini+0x51b8>
    549c:	ldr	w1, [x19, #64]
    54a0:	cmp	w0, w1
    54a4:	b.ge	548c <grub_mod_fini+0x518c>  // b.tcont
    54a8:	add	w1, w20, #0x1
    54ac:	mov	x0, x19
    54b0:	bl	5384 <grub_mod_fini+0x5084>
    54b4:	cbz	w0, 548c <grub_mod_fini+0x518c>
    54b8:	ldp	x19, x20, [sp, #16]
    54bc:	ldr	x21, [sp, #32]
    54c0:	ldp	x29, x30, [sp], #48
    54c4:	ret
    54c8:	ldr	x0, [x19, #136]
    54cc:	sub	w2, w20, w21
    54d0:	sxtw	x21, w21
    54d4:	mov	w1, #0x0                   	// #0
    54d8:	add	x21, x21, #0x1
    54dc:	sbfiz	x2, x2, #3, #32
    54e0:	add	x0, x0, x21, lsl #3
    54e4:	bl	0 <grub_memset>
    54e8:	str	w20, [x19, #144]
    54ec:	b	5494 <grub_mod_fini+0x5194>
    54f0:	stp	x29, x30, [sp, #-128]!
    54f4:	mov	x29, sp
    54f8:	stp	x19, x20, [sp, #16]
    54fc:	mov	x19, x0
    5500:	ldr	w20, [x0, #40]
    5504:	stp	x21, x22, [sp, #32]
    5508:	mov	w21, w1
    550c:	cmp	w20, w1
    5510:	stp	x23, x24, [sp, #48]
    5514:	mov	w24, w2
    5518:	stp	x25, x26, [sp, #64]
    551c:	stp	x27, x28, [sp, #80]
    5520:	b.gt	5674 <grub_mod_fini+0x5374>
    5524:	sub	w20, w1, w20
    5528:	cbz	w20, 561c <grub_mod_fini+0x531c>
    552c:	ldp	w23, w1, [x19, #44]
    5530:	ldrb	w0, [x19, #100]
    5534:	cmp	w1, w20
    5538:	b.le	5830 <grub_mod_fini+0x5530>
    553c:	cbz	w0, 57c0 <grub_mod_fini+0x54c0>
    5540:	ldr	x5, [x19, #24]
    5544:	mov	w0, w23
    5548:	mov	w1, #0x0                   	// #0
    554c:	mov	w3, #0x2                   	// #2
    5550:	add	w4, w1, w0
    5554:	sdiv	w4, w4, w3
    5558:	ldr	w2, [x5, w4, sxtw #2]
    555c:	cmp	w2, w20
    5560:	b.gt	56d8 <grub_mod_fini+0x53d8>
    5564:	b.ge	557c <grub_mod_fini+0x527c>  // b.tcont
    5568:	add	w1, w4, #0x1
    556c:	cmp	w1, w0
    5570:	b.lt	5550 <grub_mod_fini+0x5250>  // b.tstop
    5574:	cmp	w2, w20
    5578:	cinc	w4, w4, lt  // lt = tstop
    557c:	mov	w2, w24
    5580:	sub	w1, w4, #0x1
    5584:	mov	x0, x19
    5588:	bl	4318 <grub_mod_fini+0x4018>
    558c:	str	w0, [x19, #76]
    5590:	cmp	w20, w23
    5594:	b.ge	56fc <grub_mod_fini+0x53fc>  // b.tcont
    5598:	cmp	w20, w4
    559c:	b.ne	56fc <grub_mod_fini+0x53fc>  // b.any
    55a0:	sbfiz	x22, x20, #2, #32
    55a4:	sxtw	x24, w20
    55a8:	ldr	w0, [x5, x22]
    55ac:	cmp	w0, w20
    55b0:	b.ne	56fc <grub_mod_fini+0x53fc>  // b.any
    55b4:	ldr	x0, [x19, #16]
    55b8:	sub	w2, w23, w20
    55bc:	add	x1, x0, x22
    55c0:	sbfiz	x2, x2, #2, #32
    55c4:	bl	0 <grub_memmove>
    55c8:	ldr	w2, [x19, #44]
    55cc:	ldr	x0, [x19, #8]
    55d0:	sub	w2, w2, w20
    55d4:	add	x1, x0, x24
    55d8:	sxtw	x2, w2
    55dc:	bl	0 <grub_memmove>
    55e0:	ldr	w0, [x19, #44]
    55e4:	sub	w0, w0, w20
    55e8:	str	w0, [x19, #44]
    55ec:	ldr	w0, [x19, #48]
    55f0:	sub	w0, w0, w20
    55f4:	str	w0, [x19, #48]
    55f8:	mov	x0, #0x0                   	// #0
    55fc:	ldr	w1, [x19, #44]
    5600:	cmp	w1, w0
    5604:	b.gt	56e0 <grub_mod_fini+0x53e0>
    5608:	ldrb	w0, [x19, #99]
    560c:	cbnz	w0, 561c <grub_mod_fini+0x531c>
    5610:	ldr	x0, [x19, #8]
    5614:	add	x0, x0, w20, sxtw
    5618:	str	x0, [x19, #8]
    561c:	ldr	w1, [x19, #72]
    5620:	ldr	w0, [x19, #64]
    5624:	str	w21, [x19, #40]
    5628:	sub	w0, w0, w20
    562c:	sub	w20, w1, w20
    5630:	ldr	w1, [x19, #104]
    5634:	str	w0, [x19, #64]
    5638:	str	w20, [x19, #72]
    563c:	cmp	w1, #0x1
    5640:	b.le	5afc <grub_mod_fini+0x57fc>
    5644:	ldrb	w0, [x19, #96]
    5648:	cbz	w0, 5ae8 <grub_mod_fini+0x57e8>
    564c:	mov	x0, x19
    5650:	bl	4e9c <grub_mod_fini+0x4b9c>
    5654:	cbz	w0, 5af0 <grub_mod_fini+0x57f0>
    5658:	ldp	x19, x20, [sp, #16]
    565c:	ldp	x21, x22, [sp, #32]
    5660:	ldp	x23, x24, [sp, #48]
    5664:	ldp	x25, x26, [sp, #64]
    5668:	ldp	x27, x28, [sp, #80]
    566c:	ldp	x29, x30, [sp], #128
    5670:	ret
    5674:	ldr	w0, [x0, #104]
    5678:	cmp	w0, #0x1
    567c:	b.le	5690 <grub_mod_fini+0x5390>
    5680:	add	x0, x19, #0x20
    5684:	mov	x2, #0x8                   	// #8
    5688:	mov	w1, #0x0                   	// #0
    568c:	bl	0 <grub_memset>
    5690:	ldr	w0, [x19, #60]
    5694:	tst	x24, #0x1
    5698:	str	w0, [x19, #64]
    569c:	mov	w1, #0x6                   	// #6
    56a0:	ldr	w0, [x19, #68]
    56a4:	str	w0, [x19, #72]
    56a8:	mov	w0, #0x4                   	// #4
    56ac:	csel	w0, w0, w1, ne  // ne = any
    56b0:	str	w0, [x19, #76]
    56b4:	ldrb	w0, [x19, #99]
    56b8:	str	xzr, [x19, #40]
    56bc:	str	wzr, [x19, #48]
    56c0:	strb	wzr, [x19, #100]
    56c4:	cbnz	w0, 56d0 <grub_mod_fini+0x53d0>
    56c8:	ldr	x0, [x19]
    56cc:	str	x0, [x19, #8]
    56d0:	mov	w20, w21
    56d4:	b	5528 <grub_mod_fini+0x5228>
    56d8:	mov	w0, w4
    56dc:	b	556c <grub_mod_fini+0x526c>
    56e0:	ldr	x2, [x19, #24]
    56e4:	ldr	w1, [x2, x22]
    56e8:	add	x22, x22, #0x4
    56ec:	sub	w1, w1, w20
    56f0:	str	w1, [x2, x0, lsl #2]
    56f4:	add	x0, x0, #0x1
    56f8:	b	55fc <grub_mod_fini+0x52fc>
    56fc:	ldr	w0, [x19, #60]
    5700:	sxtw	x4, w4
    5704:	strb	wzr, [x19, #100]
    5708:	sub	w0, w0, w21
    570c:	add	w0, w0, w20
    5710:	str	w0, [x19, #64]
    5714:	ldr	w0, [x19, #68]
    5718:	sub	w0, w0, w21
    571c:	add	w0, w0, w20
    5720:	str	w0, [x19, #72]
    5724:	mov	w0, w4
    5728:	cmp	w4, #0x0
    572c:	b.le	5740 <grub_mod_fini+0x5440>
    5730:	sub	x4, x4, #0x1
    5734:	ldr	w1, [x5, x4, lsl #2]
    5738:	cmp	w1, w20
    573c:	b.eq	5724 <grub_mod_fini+0x5424>  // b.none
    5740:	sbfiz	x1, x0, #2, #32
    5744:	b	5760 <grub_mod_fini+0x5460>
    5748:	ldr	x2, [x19, #16]
    574c:	ldr	w2, [x2, x1]
    5750:	add	x1, x1, #0x4
    5754:	cmn	w2, #0x1
    5758:	b.ne	5778 <grub_mod_fini+0x5478>  // b.any
    575c:	add	w0, w0, #0x1
    5760:	cmp	w0, w23
    5764:	b.lt	5748 <grub_mod_fini+0x5448>  // b.tstop
    5768:	b.ne	5778 <grub_mod_fini+0x5478>  // b.any
    576c:	str	wzr, [x19, #44]
    5770:	ldr	w0, [x19, #44]
    5774:	b	5828 <grub_mod_fini+0x5528>
    5778:	ldr	w0, [x5, w0, sxtw #2]
    577c:	sub	w0, w0, w20
    5780:	str	w0, [x19, #44]
    5784:	cbz	w0, 5770 <grub_mod_fini+0x5470>
    5788:	mov	x0, #0x0                   	// #0
    578c:	mov	w1, #0xffffffff            	// #-1
    5790:	b	57a0 <grub_mod_fini+0x54a0>
    5794:	ldr	x2, [x19, #16]
    5798:	str	w1, [x2, x0, lsl #2]
    579c:	add	x0, x0, #0x1
    57a0:	ldr	w2, [x19, #44]
    57a4:	cmp	w2, w0
    57a8:	b.gt	5794 <grub_mod_fini+0x5494>
    57ac:	ldr	x0, [x19, #8]
    57b0:	sxtw	x2, w2
    57b4:	mov	w1, #0xff                  	// #255
    57b8:	bl	0 <grub_memset>
    57bc:	b	5770 <grub_mod_fini+0x5470>
    57c0:	mov	w2, w24
    57c4:	sub	w1, w20, #0x1
    57c8:	mov	x0, x19
    57cc:	bl	4318 <grub_mod_fini+0x4018>
    57d0:	str	w0, [x19, #76]
    57d4:	ldr	w0, [x19, #104]
    57d8:	cmp	w0, #0x1
    57dc:	b.le	57f4 <grub_mod_fini+0x54f4>
    57e0:	ldr	x0, [x19, #16]
    57e4:	sub	w2, w23, w20
    57e8:	sbfiz	x2, x2, #2, #32
    57ec:	add	x1, x0, w20, sxtw #2
    57f0:	bl	0 <grub_memmove>
    57f4:	ldrb	w0, [x19, #99]
    57f8:	cbz	w0, 5814 <grub_mod_fini+0x5514>
    57fc:	ldr	w2, [x19, #44]
    5800:	ldr	x0, [x19, #8]
    5804:	sub	w2, w2, w20
    5808:	sxtw	x2, w2
    580c:	add	x1, x0, w20, sxtw
    5810:	bl	0 <grub_memmove>
    5814:	ldr	w0, [x19, #44]
    5818:	sub	w0, w0, w20
    581c:	str	w0, [x19, #44]
    5820:	ldr	w0, [x19, #48]
    5824:	sub	w0, w0, w20
    5828:	str	w0, [x19, #48]
    582c:	b	5608 <grub_mod_fini+0x5308>
    5830:	cbz	w0, 5858 <grub_mod_fini+0x5558>
    5834:	ldr	w0, [x19, #60]
    5838:	strb	wzr, [x19, #100]
    583c:	sub	w0, w0, w21
    5840:	add	w0, w0, w20
    5844:	str	w0, [x19, #64]
    5848:	ldr	w0, [x19, #68]
    584c:	sub	w0, w0, w21
    5850:	add	w0, w0, w20
    5854:	str	w0, [x19, #72]
    5858:	ldr	w0, [x19, #104]
    585c:	str	wzr, [x19, #44]
    5860:	ldr	w22, [x19, #40]
    5864:	cmp	w0, #0x1
    5868:	b.le	5a80 <grub_mod_fini+0x5780>
    586c:	ldrb	w1, [x19, #97]
    5870:	cbz	w1, 5948 <grub_mod_fini+0x5648>
    5874:	ldr	x1, [x19]
    5878:	sub	w0, w20, w0
    587c:	sxtw	x26, w20
    5880:	sub	x25, x26, #0x1
    5884:	add	x22, x1, w22, sxtw
    5888:	add	x0, x22, w0, sxtw
    588c:	add	x25, x22, x25
    5890:	cmp	x1, x0
    5894:	csel	x0, x1, x0, cs  // cs = hs, nlast
    5898:	cmp	x25, x0
    589c:	b.cc	5948 <grub_mod_fini+0x5648>  // b.lo, b.ul, b.last
    58a0:	ldrb	w1, [x25]
    58a4:	and	w1, w1, #0xc0
    58a8:	cmp	w1, #0x80
    58ac:	b.eq	59ac <grub_mod_fini+0x56ac>  // b.none
    58b0:	ldr	x1, [x19, #80]
    58b4:	mov	x28, x25
    58b8:	ldrsw	x27, [x19, #64]
    58bc:	add	x27, x22, x27
    58c0:	sub	x27, x27, x25
    58c4:	cbz	x1, 58e4 <grub_mod_fini+0x55e4>
    58c8:	cmp	w27, #0x6
    58cc:	mov	w0, #0x6                   	// #6
    58d0:	csel	w0, w27, w0, le
    58d4:	add	x28, sp, #0x70
    58d8:	sxtw	x0, w0
    58dc:	sub	x0, x0, #0x1
    58e0:	tbz	w0, #31, 599c <grub_mod_fini+0x569c>
    58e4:	add	x22, x22, x26
    58e8:	mov	x2, #0x8                   	// #8
    58ec:	mov	w1, #0x0                   	// #0
    58f0:	add	x0, sp, #0x78
    58f4:	sub	x25, x22, x25
    58f8:	bl	0 <grub_memset>
    58fc:	sxtw	x2, w27
    5900:	add	x3, sp, #0x78
    5904:	mov	x1, x28
    5908:	add	x0, sp, #0x6c
    590c:	bl	f90 <grub_mod_fini+0xc90>
    5910:	mov	x27, x0
    5914:	cmp	x25, x0
    5918:	b.hi	5948 <grub_mod_fini+0x5648>  // b.pmore
    591c:	cmn	x0, #0x3
    5920:	b.hi	5948 <grub_mod_fini+0x5648>  // b.pmore
    5924:	mov	x2, #0x8                   	// #8
    5928:	add	x0, x19, #0x20
    592c:	mov	w1, #0x0                   	// #0
    5930:	bl	0 <grub_memset>
    5934:	ldr	w2, [sp, #108]
    5938:	sub	w27, w27, w25
    593c:	str	w27, [x19, #44]
    5940:	cmn	w2, #0x1
    5944:	b.ne	5a14 <grub_mod_fini+0x5714>  // b.any
    5948:	ldr	w11, [x19, #40]
    594c:	add	x3, x19, #0x20
    5950:	ldr	w0, [x19, #48]
    5954:	mov	w2, #0xffffffff            	// #-1
    5958:	add	w11, w11, w0
    595c:	cmp	w21, w11
    5960:	b.gt	59b4 <grub_mod_fini+0x56b4>
    5964:	sub	w11, w11, w21
    5968:	str	w11, [x19, #44]
    596c:	cmn	w2, #0x1
    5970:	b.ne	5a14 <grub_mod_fini+0x5714>  // b.any
    5974:	mov	w2, w24
    5978:	sub	w1, w23, #0x1
    597c:	mov	x0, x19
    5980:	bl	4318 <grub_mod_fini+0x4018>
    5984:	str	w0, [x19, #76]
    5988:	ldr	w0, [x19, #44]
    598c:	cbz	w0, 5770 <grub_mod_fini+0x5470>
    5990:	mov	x0, #0x0                   	// #0
    5994:	mov	w1, #0xffffffff            	// #-1
    5998:	b	5a68 <grub_mod_fini+0x5768>
    599c:	ldrb	w2, [x25, x0]
    59a0:	ldrb	w2, [x1, x2]
    59a4:	strb	w2, [x28, x0]
    59a8:	b	58dc <grub_mod_fini+0x55dc>
    59ac:	sub	x25, x25, #0x1
    59b0:	b	5898 <grub_mod_fini+0x5598>
    59b4:	ldr	w12, [x19, #60]
    59b8:	sxtw	x14, w11
    59bc:	ldr	x1, [x19]
    59c0:	sub	w12, w12, w11
    59c4:	ldr	x13, [x19, #32]
    59c8:	sxtw	x2, w12
    59cc:	add	x1, x1, w11, sxtw
    59d0:	add	x0, sp, #0x78
    59d4:	bl	f90 <grub_mod_fini+0xc90>
    59d8:	sub	x1, x0, #0x1
    59dc:	ldr	w2, [sp, #120]
    59e0:	cmn	x1, #0x4
    59e4:	b.ls	5a04 <grub_mod_fini+0x5704>  // b.plast
    59e8:	cmp	x0, #0x0
    59ec:	ccmp	w12, #0x0, #0x4, ne  // ne = any
    59f0:	b.eq	5a0c <grub_mod_fini+0x570c>  // b.none
    59f4:	ldr	x0, [x19]
    59f8:	ldrb	w2, [x0, x14]
    59fc:	mov	x0, #0x1                   	// #1
    5a00:	str	x13, [x19, #32]
    5a04:	add	w11, w11, w0
    5a08:	b	595c <grub_mod_fini+0x565c>
    5a0c:	mov	w2, #0x0                   	// #0
    5a10:	b	59fc <grub_mod_fini+0x56fc>
    5a14:	ldrb	w0, [x19, #102]
    5a18:	cbz	w0, 5a30 <grub_mod_fini+0x5730>
    5a1c:	mov	w0, w2
    5a20:	bl	3c28 <grub_mod_fini+0x3928>
    5a24:	cbnz	w0, 5a4c <grub_mod_fini+0x574c>
    5a28:	cmp	w2, #0x5f
    5a2c:	b.eq	5a4c <grub_mod_fini+0x574c>  // b.none
    5a30:	cmp	w2, #0xa
    5a34:	b.ne	5a54 <grub_mod_fini+0x5754>  // b.any
    5a38:	ldrb	w0, [x19, #101]
    5a3c:	cmp	w0, #0x0
    5a40:	cset	w0, ne  // ne = any
    5a44:	lsl	w0, w0, #1
    5a48:	b	5984 <grub_mod_fini+0x5684>
    5a4c:	mov	w0, #0x1                   	// #1
    5a50:	b	5984 <grub_mod_fini+0x5684>
    5a54:	mov	w0, #0x0                   	// #0
    5a58:	b	5984 <grub_mod_fini+0x5684>
    5a5c:	ldr	x2, [x19, #16]
    5a60:	str	w1, [x2, x0, lsl #2]
    5a64:	add	x0, x0, #0x1
    5a68:	ldr	w2, [x19, #44]
    5a6c:	cmp	w2, w0
    5a70:	b.gt	5a5c <grub_mod_fini+0x575c>
    5a74:	ldrb	w0, [x19, #99]
    5a78:	cbz	w0, 5770 <grub_mod_fini+0x5470>
    5a7c:	b	57ac <grub_mod_fini+0x54ac>
    5a80:	ldr	x0, [x19]
    5a84:	add	w22, w20, w22
    5a88:	ldr	x1, [x19, #80]
    5a8c:	add	x22, x0, w22, sxtw
    5a90:	ldurb	w0, [x22, #-1]
    5a94:	str	wzr, [x19, #48]
    5a98:	cbz	x1, 5aa4 <grub_mod_fini+0x57a4>
    5a9c:	and	x0, x0, #0xff
    5aa0:	ldrb	w0, [x1, x0]
    5aa4:	ldr	x2, [x19, #88]
    5aa8:	ubfx	x1, x0, #6, #2
    5aac:	ldr	x1, [x2, x1, lsl #3]
    5ab0:	lsr	x1, x1, x0
    5ab4:	tbnz	w1, #0, 5ad8 <grub_mod_fini+0x57d8>
    5ab8:	cmp	w0, #0xa
    5abc:	b.ne	5ae0 <grub_mod_fini+0x57e0>  // b.any
    5ac0:	ldrb	w0, [x19, #101]
    5ac4:	cmp	w0, #0x0
    5ac8:	cset	w0, ne  // ne = any
    5acc:	lsl	w0, w0, #1
    5ad0:	str	w0, [x19, #76]
    5ad4:	b	5608 <grub_mod_fini+0x5308>
    5ad8:	mov	w0, #0x1                   	// #1
    5adc:	b	5ad0 <grub_mod_fini+0x57d0>
    5ae0:	mov	w0, #0x0                   	// #0
    5ae4:	b	5ad0 <grub_mod_fini+0x57d0>
    5ae8:	mov	x0, x19
    5aec:	bl	1770 <grub_mod_fini+0x1470>
    5af0:	mov	w0, #0x0                   	// #0
    5af4:	str	wzr, [x19, #56]
    5af8:	b	5658 <grub_mod_fini+0x5358>
    5afc:	ldrb	w1, [x19, #99]
    5b00:	cbz	w1, 5b2c <grub_mod_fini+0x582c>
    5b04:	ldrb	w0, [x19, #96]
    5b08:	cbz	w0, 5b18 <grub_mod_fini+0x5818>
    5b0c:	mov	x0, x19
    5b10:	bl	3bac <grub_mod_fini+0x38ac>
    5b14:	b	5af0 <grub_mod_fini+0x57f0>
    5b18:	ldr	x0, [x19, #80]
    5b1c:	cbz	x0, 5af0 <grub_mod_fini+0x57f0>
    5b20:	mov	x0, x19
    5b24:	bl	1178 <grub_mod_fini+0xe78>
    5b28:	b	5af0 <grub_mod_fini+0x57f0>
    5b2c:	str	w0, [x19, #44]
    5b30:	b	5af0 <grub_mod_fini+0x57f0>
    5b34:	mov	x7, x0
    5b38:	stp	x29, x30, [sp, #-80]!
    5b3c:	mov	w0, w1
    5b40:	mov	x29, sp
    5b44:	ldr	x9, [x7]
    5b48:	sbfiz	x10, x0, #4, #32
    5b4c:	stp	x19, x20, [sp, #16]
    5b50:	mov	x6, x2
    5b54:	mov	w1, w3
    5b58:	add	x0, x9, w0, sxtw #4
    5b5c:	stp	x21, x22, [sp, #32]
    5b60:	stp	x23, x24, [sp, #48]
    5b64:	ldrb	w8, [x0, #8]
    5b68:	stp	x25, x26, [sp, #64]
    5b6c:	cmp	w8, #0x7
    5b70:	b.ne	5c84 <grub_mod_fini+0x5984>  // b.any
    5b74:	ldr	x0, [x2, #8]
    5b78:	add	x4, x0, w3, sxtw
    5b7c:	ldrb	w0, [x0, w3, sxtw]
    5b80:	cmp	w0, #0xc1
    5b84:	b.ls	5cc8 <grub_mod_fini+0x59c8>  // b.plast
    5b88:	ldr	w5, [x6, #64]
    5b8c:	add	w2, w3, #0x1
    5b90:	cmp	w2, w5
    5b94:	b.ge	5cc8 <grub_mod_fini+0x59c8>  // b.tcont
    5b98:	ldrb	w2, [x4, #1]
    5b9c:	cmp	w0, #0xdf
    5ba0:	b.hi	5bd4 <grub_mod_fini+0x58d4>  // b.pmore
    5ba4:	sub	w2, w2, #0x80
    5ba8:	and	w2, w2, #0xff
    5bac:	cmp	w2, #0x3f
    5bb0:	b.hi	5cc8 <grub_mod_fini+0x59c8>  // b.pmore
    5bb4:	mov	w20, #0x2                   	// #2
    5bb8:	mov	w0, w20
    5bbc:	ldp	x19, x20, [sp, #16]
    5bc0:	ldp	x21, x22, [sp, #32]
    5bc4:	ldp	x23, x24, [sp, #48]
    5bc8:	ldp	x25, x26, [sp, #64]
    5bcc:	ldp	x29, x30, [sp], #80
    5bd0:	ret
    5bd4:	cmp	w0, #0xef
    5bd8:	b.hi	5c24 <grub_mod_fini+0x5924>  // b.pmore
    5bdc:	cmp	w0, #0xe0
    5be0:	mov	w0, #0x9f                  	// #159
    5be4:	ccmp	w2, w0, #0x2, eq  // eq = none
    5be8:	b.ls	5cc8 <grub_mod_fini+0x59c8>  // b.plast
    5bec:	mov	w20, #0x3                   	// #3
    5bf0:	add	w1, w20, w1
    5bf4:	cmp	w5, w1
    5bf8:	b.lt	5cc8 <grub_mod_fini+0x59c8>  // b.tstop
    5bfc:	mov	x1, #0x1                   	// #1
    5c00:	ldrb	w0, [x4, x1]
    5c04:	sub	w0, w0, #0x80
    5c08:	and	w0, w0, #0xff
    5c0c:	cmp	w0, #0x3f
    5c10:	b.hi	5cc8 <grub_mod_fini+0x59c8>  // b.pmore
    5c14:	add	x1, x1, #0x1
    5c18:	cmp	w20, w1
    5c1c:	b.gt	5c00 <grub_mod_fini+0x5900>
    5c20:	b	5bb8 <grub_mod_fini+0x58b8>
    5c24:	cmp	w0, #0xf7
    5c28:	b.hi	5c44 <grub_mod_fini+0x5944>  // b.pmore
    5c2c:	cmp	w0, #0xf0
    5c30:	mov	w0, #0x8f                  	// #143
    5c34:	ccmp	w2, w0, #0x2, eq  // eq = none
    5c38:	b.ls	5cc8 <grub_mod_fini+0x59c8>  // b.plast
    5c3c:	mov	w20, #0x4                   	// #4
    5c40:	b	5bf0 <grub_mod_fini+0x58f0>
    5c44:	cmp	w0, #0xfb
    5c48:	b.hi	5c64 <grub_mod_fini+0x5964>  // b.pmore
    5c4c:	cmp	w0, #0xf8
    5c50:	mov	w0, #0x87                  	// #135
    5c54:	ccmp	w2, w0, #0x2, eq  // eq = none
    5c58:	b.ls	5cc8 <grub_mod_fini+0x59c8>  // b.plast
    5c5c:	mov	w20, #0x5                   	// #5
    5c60:	b	5bf0 <grub_mod_fini+0x58f0>
    5c64:	cmp	w0, #0xfd
    5c68:	b.hi	5cc8 <grub_mod_fini+0x59c8>  // b.pmore
    5c6c:	cmp	w0, #0xfc
    5c70:	mov	w0, #0x83                  	// #131
    5c74:	ccmp	w2, w0, #0x2, eq  // eq = none
    5c78:	b.ls	5cc8 <grub_mod_fini+0x59c8>  // b.plast
    5c7c:	mov	w20, #0x6                   	// #6
    5c80:	b	5bf0 <grub_mod_fini+0x58f0>
    5c84:	mov	x0, x2
    5c88:	bl	2488 <grub_mod_fini+0x2188>
    5c8c:	mov	w20, w0
    5c90:	cmp	w8, #0x5
    5c94:	b.ne	5cd0 <grub_mod_fini+0x59d0>  // b.any
    5c98:	cmp	w0, #0x1
    5c9c:	b.le	5cc8 <grub_mod_fini+0x59c8>
    5ca0:	ldr	x0, [x7, #200]
    5ca4:	tbnz	w0, #6, 5cb8 <grub_mod_fini+0x59b8>
    5ca8:	ldr	x2, [x6, #8]
    5cac:	ldrb	w2, [x2, w1, sxtw]
    5cb0:	cmp	w2, #0xa
    5cb4:	b.eq	5cc8 <grub_mod_fini+0x59c8>  // b.none
    5cb8:	tbz	w0, #7, 5bb8 <grub_mod_fini+0x58b8>
    5cbc:	ldr	x0, [x6, #8]
    5cc0:	ldrb	w0, [x0, w1, sxtw]
    5cc4:	cbnz	w0, 5bb8 <grub_mod_fini+0x58b8>
    5cc8:	mov	w20, #0x0                   	// #0
    5ccc:	b	5bb8 <grub_mod_fini+0x58b8>
    5cd0:	cmp	w0, #0x1
    5cd4:	b.le	5cc8 <grub_mod_fini+0x59c8>
    5cd8:	cmp	w8, #0x6
    5cdc:	b.ne	5cc8 <grub_mod_fini+0x59c8>  // b.any
    5ce0:	ldr	x26, [x9, x10]
    5ce4:	ldr	x0, [x26, #48]
    5ce8:	ldr	w3, [x26, #36]
    5cec:	cbnz	x0, 5cf8 <grub_mod_fini+0x59f8>
    5cf0:	mov	w19, w3
    5cf4:	cbz	w3, 5d10 <grub_mod_fini+0x5a10>
    5cf8:	mov	x0, x6
    5cfc:	bl	1150 <grub_mod_fini+0xe50>
    5d00:	mov	w19, w0
    5d04:	mov	x0, #0x0                   	// #0
    5d08:	cmp	w3, w0
    5d0c:	b.gt	5d2c <grub_mod_fini+0x5a2c>
    5d10:	and	w22, w19, #0xffffffdf
    5d14:	sub	w23, w19, #0x20
    5d18:	sub	w24, w19, #0x21
    5d1c:	sub	w25, w19, #0x41
    5d20:	sub	w22, w22, #0x41
    5d24:	mov	x21, #0x0                   	// #0
    5d28:	b	5e0c <grub_mod_fini+0x5b0c>
    5d2c:	ldr	x1, [x26]
    5d30:	ldr	w1, [x1, x0, lsl #2]
    5d34:	add	x0, x0, #0x1
    5d38:	cmp	w1, w19
    5d3c:	b.ne	5d08 <grub_mod_fini+0x5a08>  // b.any
    5d40:	mov	w0, w20
    5d44:	b	5e2c <grub_mod_fini+0x5b2c>
    5d48:	ldr	x0, [x26, #24]
    5d4c:	ldr	w0, [x0, x21, lsl #2]
    5d50:	sub	w0, w0, #0x1
    5d54:	cmp	w0, #0xb
    5d58:	b.hi	5e08 <grub_mod_fini+0x5b08>  // b.pmore
    5d5c:	adrp	x1, 0 <grub_mod_init-0x260>
    5d60:	ldr	x1, [x1]
    5d64:	ldrb	w0, [x1, w0, uxtw]
    5d68:	adr	x1, 5d74 <grub_mod_fini+0x5a74>
    5d6c:	add	x0, x1, w0, sxtb #2
    5d70:	br	x0
    5d74:	mov	w0, w19
    5d78:	bl	3c28 <grub_mod_fini+0x3928>
    5d7c:	cbz	w0, 5e08 <grub_mod_fini+0x5b08>
    5d80:	b	5d40 <grub_mod_fini+0x5a40>
    5d84:	cmp	w19, #0x7f
    5d88:	ccmp	w19, #0x1f, #0x0, ne  // ne = any
    5d8c:	cset	w0, ls  // ls = plast
    5d90:	b	5d7c <grub_mod_fini+0x5a7c>
    5d94:	sub	w0, w19, #0x61
    5d98:	cmp	w0, #0x19
    5d9c:	b	5d8c <grub_mod_fini+0x5a8c>
    5da0:	mov	w0, w19
    5da4:	bl	0 <grub_isspace>
    5da8:	b	5d7c <grub_mod_fini+0x5a7c>
    5dac:	cmp	w22, #0x19
    5db0:	b	5d8c <grub_mod_fini+0x5a8c>
    5db4:	sub	w0, w19, #0x30
    5db8:	cmp	w0, #0x9
    5dbc:	b	5d8c <grub_mod_fini+0x5a8c>
    5dc0:	cmp	w23, #0x5e
    5dc4:	b	5d8c <grub_mod_fini+0x5a8c>
    5dc8:	cmp	w25, #0x19
    5dcc:	b	5d8c <grub_mod_fini+0x5a8c>
    5dd0:	cmp	w19, #0x20
    5dd4:	ccmp	w19, #0x9, #0x4, ne  // ne = any
    5dd8:	cset	w0, eq  // eq = none
    5ddc:	b	5d7c <grub_mod_fini+0x5a7c>
    5de0:	cmp	w24, #0x5d
    5de4:	b	5d8c <grub_mod_fini+0x5a8c>
    5de8:	cmp	w23, #0x5e
    5dec:	b.hi	5e08 <grub_mod_fini+0x5b08>  // b.pmore
    5df0:	mov	w0, w19
    5df4:	bl	0 <grub_isspace>
    5df8:	cbnz	w0, 5e08 <grub_mod_fini+0x5b08>
    5dfc:	mov	w0, w19
    5e00:	bl	3c28 <grub_mod_fini+0x3928>
    5e04:	cbz	w0, 5d40 <grub_mod_fini+0x5a40>
    5e08:	add	x21, x21, #0x1
    5e0c:	ldr	w0, [x26, #52]
    5e10:	cmp	w0, w21
    5e14:	b.gt	5d48 <grub_mod_fini+0x5a48>
    5e18:	ldr	w2, [x26, #48]
    5e1c:	mov	x0, #0x0                   	// #0
    5e20:	cmp	w2, w0
    5e24:	b.gt	5e48 <grub_mod_fini+0x5b48>
    5e28:	mov	w0, #0x0                   	// #0
    5e2c:	ldrb	w1, [x26, #32]
    5e30:	tbz	w1, #0, 5e74 <grub_mod_fini+0x5b74>
    5e34:	cbz	w0, 5bb8 <grub_mod_fini+0x58b8>
    5e38:	b	5cc8 <grub_mod_fini+0x59c8>
    5e3c:	mov	w0, w19
    5e40:	bl	f68 <grub_mod_fini+0xc68>
    5e44:	b	5d7c <grub_mod_fini+0x5a7c>
    5e48:	ldr	x3, [x26, #8]
    5e4c:	lsl	x1, x0, #2
    5e50:	ldr	w3, [x3, x1]
    5e54:	cmp	w19, w3
    5e58:	b.lt	5e6c <grub_mod_fini+0x5b6c>  // b.tstop
    5e5c:	ldr	x3, [x26, #16]
    5e60:	ldr	w1, [x3, x1]
    5e64:	cmp	w19, w1
    5e68:	b.le	5d40 <grub_mod_fini+0x5a40>
    5e6c:	add	x0, x0, #0x1
    5e70:	b	5e20 <grub_mod_fini+0x5b20>
    5e74:	mov	w20, w0
    5e78:	b	5bb8 <grub_mod_fini+0x58b8>
    5e7c:	nop
	...
    5e88:	stp	x29, x30, [sp, #-192]!
    5e8c:	mov	x29, sp
    5e90:	stp	x25, x26, [sp, #64]
    5e94:	mov	w25, w3
    5e98:	ldr	x26, [x0, #112]
    5e9c:	stp	x21, x22, [sp, #32]
    5ea0:	mov	x22, x1
    5ea4:	stp	x23, x24, [sp, #48]
    5ea8:	mov	w24, w6
    5eac:	ldr	w23, [x1, #4]
    5eb0:	ldr	x1, [x26]
    5eb4:	stp	x19, x20, [sp, #16]
    5eb8:	ldr	w21, [x0, #168]
    5ebc:	mov	x19, x0
    5ec0:	sbfiz	x0, x2, #4, #32
    5ec4:	stp	x27, x28, [sp, #80]
    5ec8:	mov	w20, w2
    5ecc:	ldr	w27, [x1, x0]
    5ed0:	mov	w0, w5
    5ed4:	str	w5, [sp, #108]
    5ed8:	add	w21, w0, w21
    5edc:	str	w4, [sp, #132]
    5ee0:	cmp	w21, w23
    5ee4:	str	wzr, [sp, #152]
    5ee8:	b.lt	5f50 <grub_mod_fini+0x5c50>  // b.tstop
    5eec:	add	w21, w21, #0x1
    5ef0:	mov	w0, #0x7fffffff            	// #2147483647
    5ef4:	sub	w0, w0, w23
    5ef8:	cmp	w0, w21
    5efc:	b.ge	5f20 <grub_mod_fini+0x5c20>  // b.tcont
    5f00:	mov	w0, #0xc                   	// #12
    5f04:	ldp	x19, x20, [sp, #16]
    5f08:	ldp	x21, x22, [sp, #32]
    5f0c:	ldp	x23, x24, [sp, #48]
    5f10:	ldp	x25, x26, [sp, #64]
    5f14:	ldp	x27, x28, [sp, #80]
    5f18:	ldp	x29, x30, [sp], #192
    5f1c:	ret
    5f20:	adds	w28, w23, w21
    5f24:	b.mi	5f00 <grub_mod_fini+0x5c00>  // b.first
    5f28:	ldr	x0, [x22, #8]
    5f2c:	sbfiz	x1, x28, #3, #32
    5f30:	bl	0 <grub_realloc>
    5f34:	cbz	x0, 5f00 <grub_mod_fini+0x5c00>
    5f38:	str	w28, [x22, #4]
    5f3c:	sbfiz	x2, x21, #3, #32
    5f40:	str	x0, [x22, #8]
    5f44:	mov	w1, #0x0                   	// #0
    5f48:	add	x0, x0, w23, sxtw #3
    5f4c:	bl	0 <grub_memset>
    5f50:	ldr	w21, [x22]
    5f54:	ldr	w2, [x19, #120]
    5f58:	ldr	x4, [x22, #8]
    5f5c:	cmp	w21, #0x0
    5f60:	ldr	x0, [x19, #136]
    5f64:	csel	w21, w21, w25, ne  // ne = any
    5f68:	str	x0, [sp, #120]
    5f6c:	sub	w1, w21, #0x1
    5f70:	ldr	w0, [x19, #56]
    5f74:	str	w21, [x19, #56]
    5f78:	str	x4, [x19, #136]
    5f7c:	str	w0, [sp, #128]
    5f80:	mov	x0, x19
    5f84:	bl	4318 <grub_mod_fini+0x4018>
    5f88:	mov	w23, w0
    5f8c:	cmp	w21, w25
    5f90:	b.ne	5ffc <grub_mod_fini+0x5cfc>  // b.any
    5f94:	mov	w1, w20
    5f98:	add	x0, sp, #0xa0
    5f9c:	bl	1ad8 <grub_mod_fini+0x17d8>
    5fa0:	str	w0, [sp, #152]
    5fa4:	cbnz	w0, 5f04 <grub_mod_fini+0x5c04>
    5fa8:	mov	w3, w24
    5fac:	mov	w2, w27
    5fb0:	add	x1, sp, #0xa0
    5fb4:	mov	x0, x26
    5fb8:	bl	44b0 <grub_mod_fini+0x41b0>
    5fbc:	str	w0, [sp, #152]
    5fc0:	cbnz	w0, 6074 <grub_mod_fini+0x5d74>
    5fc4:	ldr	w0, [sp, #164]
    5fc8:	cbnz	w0, 6054 <grub_mod_fini+0x5d54>
    5fcc:	mov	w3, w23
    5fd0:	add	x2, sp, #0xa0
    5fd4:	mov	x1, x26
    5fd8:	add	x0, sp, #0x98
    5fdc:	bl	3178 <grub_mod_fini+0x2e78>
    5fe0:	mov	x20, x0
    5fe4:	cbnz	x0, 5ff0 <grub_mod_fini+0x5cf0>
    5fe8:	ldr	w0, [sp, #152]
    5fec:	cbnz	w0, 6074 <grub_mod_fini+0x5d74>
    5ff0:	ldr	x0, [x19, #136]
    5ff4:	str	x20, [x0, w21, sxtw #3]
    5ff8:	b	6028 <grub_mod_fini+0x5d28>
    5ffc:	ldr	x20, [x4, w21, sxtw #3]
    6000:	cbz	x20, 603c <grub_mod_fini+0x5d3c>
    6004:	ldrb	w0, [x20, #80]
    6008:	tbz	w0, #6, 603c <grub_mod_fini+0x5d3c>
    600c:	add	x1, x20, #0x8
    6010:	add	x0, sp, #0xa0
    6014:	bl	2f88 <grub_mod_fini+0x2c88>
    6018:	str	w0, [sp, #152]
    601c:	cbnz	w0, 5f04 <grub_mod_fini+0x5c04>
    6020:	ldrb	w0, [x20, #80]
    6024:	tbnz	w0, #6, 5fc4 <grub_mod_fini+0x5cc4>
    6028:	sxtw	x23, w21
    602c:	str	wzr, [sp, #104]
    6030:	add	x23, x23, #0x1
    6034:	lsl	x23, x23, #3
    6038:	b	6244 <grub_mod_fini+0x5f44>
    603c:	add	x0, sp, #0xa0
    6040:	mov	x2, #0x10                  	// #16
    6044:	mov	w1, #0x0                   	// #0
    6048:	bl	0 <grub_memset>
    604c:	cbnz	x20, 6020 <grub_mod_fini+0x5d20>
    6050:	b	6028 <grub_mod_fini+0x5d28>
    6054:	mov	w4, w24
    6058:	mov	w3, w27
    605c:	mov	w2, w21
    6060:	add	x1, sp, #0xa0
    6064:	mov	x0, x19
    6068:	bl	4c08 <grub_mod_fini+0x4908>
    606c:	str	w0, [sp, #152]
    6070:	cbz	w0, 5fcc <grub_mod_fini+0x5ccc>
    6074:	ldr	x0, [sp, #168]
    6078:	bl	0 <grub_free>
    607c:	ldr	w0, [sp, #152]
    6080:	b	5f04 <grub_mod_fini+0x5c04>
    6084:	ldr	x0, [x19, #136]
    6088:	ldr	x1, [x0, x23]
    608c:	str	wzr, [sp, #164]
    6090:	cbz	x1, 60a8 <grub_mod_fini+0x5da8>
    6094:	add	x1, x1, #0x8
    6098:	add	x0, sp, #0xa0
    609c:	bl	2e18 <grub_mod_fini+0x2b18>
    60a0:	str	w0, [sp, #152]
    60a4:	cbnz	w0, 6074 <grub_mod_fini+0x5d74>
    60a8:	cbz	x20, 61a8 <grub_mod_fini+0x5ea8>
    60ac:	add	x0, sp, #0xb0
    60b0:	mov	x2, #0x10                  	// #16
    60b4:	mov	w1, #0x0                   	// #0
    60b8:	mov	x28, #0x0                   	// #0
    60bc:	str	wzr, [sp, #156]
    60c0:	ldr	x25, [x19, #112]
    60c4:	bl	0 <grub_memset>
    60c8:	ldr	w0, [x20, #28]
    60cc:	cmp	w0, w28
    60d0:	b.gt	60e4 <grub_mod_fini+0x5de4>
    60d4:	ldr	x0, [sp, #184]
    60d8:	bl	0 <grub_free>
    60dc:	str	wzr, [sp, #152]
    60e0:	b	61a8 <grub_mod_fini+0x5ea8>
    60e4:	ldr	x0, [x20, #32]
    60e8:	ldr	w1, [x0, x28, lsl #2]
    60ec:	sxtw	x0, w1
    60f0:	str	x0, [sp, #112]
    60f4:	ldr	x0, [x25]
    60f8:	sbfiz	x4, x1, #4, #32
    60fc:	add	x0, x0, w1, sxtw #4
    6100:	ldrb	w0, [x0, #10]
    6104:	tbnz	w0, #4, 612c <grub_mod_fini+0x5e2c>
    6108:	ldr	x1, [x25]
    610c:	mov	w2, w21
    6110:	mov	x0, x19
    6114:	add	x1, x1, x4
    6118:	bl	45bc <grub_mod_fini+0x42bc>
    611c:	tst	w0, #0xff
    6120:	b.ne	6300 <grub_mod_fini+0x6000>  // b.any
    6124:	add	x28, x28, #0x1
    6128:	b	60c8 <grub_mod_fini+0x5dc8>
    612c:	mov	w3, w21
    6130:	mov	x2, x19
    6134:	mov	x0, x25
    6138:	str	x4, [sp, #96]
    613c:	bl	5b34 <grub_mod_fini+0x5834>
    6140:	cmp	w0, #0x1
    6144:	ldr	x4, [sp, #96]
    6148:	b.le	632c <grub_mod_fini+0x602c>
    614c:	add	w0, w21, w0
    6150:	ldr	x1, [x25, #24]
    6154:	sbfiz	x0, x0, #3, #32
    6158:	ldr	x2, [sp, #112]
    615c:	str	x0, [sp, #96]
    6160:	ldr	x0, [x19, #136]
    6164:	ldr	w2, [x1, x2, lsl #2]
    6168:	ldr	x1, [sp, #96]
    616c:	ldr	x1, [x0, x1]
    6170:	str	wzr, [sp, #180]
    6174:	cbz	x1, 62a8 <grub_mod_fini+0x5fa8>
    6178:	add	x1, x1, #0x8
    617c:	add	x0, sp, #0xb0
    6180:	str	w2, [sp, #136]
    6184:	bl	2e18 <grub_mod_fini+0x2b18>
    6188:	str	w0, [sp, #156]
    618c:	ldr	w2, [sp, #136]
    6190:	cbz	w0, 62a8 <grub_mod_fini+0x5fa8>
    6194:	ldr	x0, [sp, #184]
    6198:	bl	0 <grub_free>
    619c:	ldr	w0, [sp, #156]
    61a0:	str	w0, [sp, #152]
    61a4:	cbnz	w0, 6074 <grub_mod_fini+0x5d74>
    61a8:	ldr	w0, [sp, #164]
    61ac:	add	w25, w21, #0x1
    61b0:	cbz	w0, 61f0 <grub_mod_fini+0x5ef0>
    61b4:	mov	w3, w24
    61b8:	mov	w2, w27
    61bc:	add	x1, sp, #0xa0
    61c0:	mov	x0, x26
    61c4:	bl	44b0 <grub_mod_fini+0x41b0>
    61c8:	str	w0, [sp, #152]
    61cc:	cbnz	w0, 6074 <grub_mod_fini+0x5d74>
    61d0:	mov	w4, w24
    61d4:	mov	w3, w27
    61d8:	mov	w2, w25
    61dc:	add	x1, sp, #0xa0
    61e0:	mov	x0, x19
    61e4:	bl	4c08 <grub_mod_fini+0x4908>
    61e8:	str	w0, [sp, #152]
    61ec:	cbnz	w0, 6074 <grub_mod_fini+0x5d74>
    61f0:	ldr	w2, [x19, #120]
    61f4:	mov	w1, w21
    61f8:	mov	x0, x19
    61fc:	bl	4318 <grub_mod_fini+0x4018>
    6200:	mov	w3, w0
    6204:	add	x2, sp, #0xa0
    6208:	mov	x1, x26
    620c:	add	x0, sp, #0x98
    6210:	bl	3178 <grub_mod_fini+0x2e78>
    6214:	mov	x20, x0
    6218:	cbnz	x0, 6224 <grub_mod_fini+0x5f24>
    621c:	ldr	w0, [sp, #152]
    6220:	cbnz	w0, 6074 <grub_mod_fini+0x5d74>
    6224:	ldr	x0, [x19, #136]
    6228:	cmp	x20, #0x0
    622c:	mov	w21, w25
    6230:	str	x20, [x0, x23]
    6234:	add	x23, x23, #0x8
    6238:	ldr	w0, [sp, #104]
    623c:	csinc	w0, wzr, w0, ne  // ne = any
    6240:	str	w0, [sp, #104]
    6244:	ldr	w0, [sp, #108]
    6248:	cmp	w21, w0
    624c:	b.ge	6260 <grub_mod_fini+0x5f60>  // b.tcont
    6250:	ldr	w0, [x19, #168]
    6254:	ldr	w1, [sp, #104]
    6258:	cmp	w0, w1
    625c:	b.ge	6084 <grub_mod_fini+0x5d84>  // b.tcont
    6260:	ldr	x0, [sp, #168]
    6264:	bl	0 <grub_free>
    6268:	ldr	w1, [sp, #108]
    626c:	ldr	x0, [x19, #136]
    6270:	ldr	x0, [x0, w1, sxtw #3]
    6274:	cbz	x0, 627c <grub_mod_fini+0x5f7c>
    6278:	add	x0, x0, #0x8
    627c:	str	w21, [x22]
    6280:	ldr	x1, [sp, #120]
    6284:	str	x1, [x19, #136]
    6288:	ldr	w1, [sp, #128]
    628c:	str	w1, [x19, #56]
    6290:	cbz	x0, 6334 <grub_mod_fini+0x6034>
    6294:	ldr	w1, [sp, #132]
    6298:	bl	1240 <grub_mod_fini+0xf40>
    629c:	cmp	w0, #0x0
    62a0:	cset	w0, eq  // eq = none
    62a4:	b	5f04 <grub_mod_fini+0x5c04>
    62a8:	mov	w1, w2
    62ac:	add	x0, sp, #0xb0
    62b0:	bl	2928 <grub_mod_fini+0x2628>
    62b4:	tst	w0, #0xff
    62b8:	b.ne	62d0 <grub_mod_fini+0x5fd0>  // b.any
    62bc:	ldr	x0, [sp, #184]
    62c0:	bl	0 <grub_free>
    62c4:	mov	w0, #0xc                   	// #12
    62c8:	str	w0, [sp, #152]
    62cc:	b	6074 <grub_mod_fini+0x5d74>
    62d0:	ldr	x3, [x19, #136]
    62d4:	mov	x1, x25
    62d8:	add	x2, sp, #0xb0
    62dc:	add	x0, sp, #0x9c
    62e0:	str	x3, [sp, #136]
    62e4:	bl	4a4c <grub_mod_fini+0x474c>
    62e8:	ldr	x1, [sp, #96]
    62ec:	ldr	x3, [sp, #136]
    62f0:	str	x0, [x3, x1]
    62f4:	ldr	x0, [x19, #136]
    62f8:	ldr	x0, [x0, x1]
    62fc:	cbz	x0, 6320 <grub_mod_fini+0x6020>
    6300:	ldr	x0, [x25, #24]
    6304:	ldr	x1, [sp, #112]
    6308:	ldr	w1, [x0, x1, lsl #2]
    630c:	add	x0, sp, #0xa0
    6310:	bl	2928 <grub_mod_fini+0x2628>
    6314:	tst	w0, #0xff
    6318:	b.ne	6124 <grub_mod_fini+0x5e24>  // b.any
    631c:	b	62bc <grub_mod_fini+0x5fbc>
    6320:	ldr	w0, [sp, #156]
    6324:	cbz	w0, 6300 <grub_mod_fini+0x6000>
    6328:	b	6194 <grub_mod_fini+0x5e94>
    632c:	cbz	w0, 6108 <grub_mod_fini+0x5e08>
    6330:	b	6300 <grub_mod_fini+0x6000>
    6334:	mov	w0, #0x1                   	// #1
    6338:	b	5f04 <grub_mod_fini+0x5c04>
    633c:	stp	x29, x30, [sp, #-80]!
    6340:	mov	w5, w4
    6344:	mov	w6, #0x8                   	// #8
    6348:	mov	x29, sp
    634c:	stp	x19, x20, [sp, #16]
    6350:	mov	w20, w4
    6354:	mov	w4, w3
    6358:	stp	x21, x22, [sp, #32]
    635c:	mov	x21, x2
    6360:	mov	x19, x0
    6364:	stp	x23, x24, [sp, #48]
    6368:	mov	x23, x1
    636c:	mov	w24, w3
    6370:	add	x1, x2, #0x8
    6374:	ldr	w3, [x2, #4]
    6378:	ldr	w2, [x2]
    637c:	stp	x25, x26, [sp, #64]
    6380:	bl	5e88 <grub_mod_fini+0x5b88>
    6384:	cbnz	w0, 63c0 <grub_mod_fini+0x60c0>
    6388:	ldp	w0, w1, [x19, #148]
    638c:	ldr	w22, [x21, #4]
    6390:	ldr	w25, [x23]
    6394:	cmp	w0, w1
    6398:	b.lt	63fc <grub_mod_fini+0x60fc>  // b.tstop
    639c:	lsl	w1, w1, #1
    63a0:	mov	w26, #0x14                  	// #20
    63a4:	ldr	x0, [x19, #160]
    63a8:	smull	x1, w1, w26
    63ac:	bl	0 <grub_realloc>
    63b0:	cbnz	x0, 63d8 <grub_mod_fini+0x60d8>
    63b4:	ldr	x0, [x19, #160]
    63b8:	bl	0 <grub_free>
    63bc:	mov	w0, #0xc                   	// #12
    63c0:	ldp	x19, x20, [sp, #16]
    63c4:	ldp	x21, x22, [sp, #32]
    63c8:	ldp	x23, x24, [sp, #48]
    63cc:	ldp	x25, x26, [sp, #64]
    63d0:	ldp	x29, x30, [sp], #80
    63d4:	ret
    63d8:	ldp	w3, w2, [x19, #148]
    63dc:	str	x0, [x19, #160]
    63e0:	mov	w1, #0x0                   	// #0
    63e4:	smull	x2, w2, w26
    63e8:	smaddl	x0, w3, w26, x0
    63ec:	bl	0 <grub_memset>
    63f0:	ldr	w0, [x19, #152]
    63f4:	lsl	w0, w0, #1
    63f8:	str	w0, [x19, #152]
    63fc:	ldr	w1, [x19, #148]
    6400:	mov	w2, #0x14                  	// #20
    6404:	ldr	x3, [x19, #160]
    6408:	cmp	w1, #0x0
    640c:	smull	x2, w1, w2
    6410:	b.le	6430 <grub_mod_fini+0x6130>
    6414:	sub	x0, x2, #0x14
    6418:	add	x0, x3, x0
    641c:	ldr	w4, [x0, #4]
    6420:	cmp	w20, w4
    6424:	b.ne	6430 <grub_mod_fini+0x6130>  // b.any
    6428:	mov	w4, #0x1                   	// #1
    642c:	strb	w4, [x0, #16]
    6430:	add	x0, x3, x2
    6434:	cmp	w25, w22
    6438:	str	w24, [x3, x2]
    643c:	csetm	w2, eq  // eq = none
    6440:	add	w1, w1, #0x1
    6444:	stp	w20, w25, [x0, #4]
    6448:	str	w22, [x0, #12]
    644c:	sub	w22, w22, w25
    6450:	strh	w2, [x0, #18]
    6454:	str	w1, [x19, #148]
    6458:	strb	wzr, [x0, #16]
    645c:	ldr	w0, [x19, #168]
    6460:	cmp	w0, w22
    6464:	b.ge	646c <grub_mod_fini+0x616c>  // b.tcont
    6468:	str	w22, [x19, #168]
    646c:	ldr	w5, [x21, #4]
    6470:	mov	x0, x19
    6474:	ldr	w1, [x23]
    6478:	add	w20, w20, w5
    647c:	sub	w1, w20, w1
    6480:	ldp	x19, x20, [sp, #16]
    6484:	ldp	x21, x22, [sp, #32]
    6488:	ldp	x23, x24, [sp, #48]
    648c:	ldp	x25, x26, [sp, #64]
    6490:	ldp	x29, x30, [sp], #80
    6494:	b	544c <grub_mod_fini+0x514c>
    6498:	stp	x29, x30, [sp, #-224]!
    649c:	mov	x29, sp
    64a0:	stp	x19, x20, [sp, #16]
    64a4:	ldr	w20, [x0, #56]
    64a8:	stp	x21, x22, [sp, #32]
    64ac:	stp	x23, x24, [sp, #48]
    64b0:	stp	x25, x26, [sp, #64]
    64b4:	mov	x25, x0
    64b8:	stp	x27, x28, [sp, #80]
    64bc:	str	xzr, [sp, #112]
    64c0:	str	x1, [sp, #168]
    64c4:	ldr	x23, [x0, #112]
    64c8:	sbfiz	x0, x20, #3, #32
    64cc:	str	x0, [sp, #144]
    64d0:	ldr	x0, [sp, #168]
    64d4:	ldr	w1, [sp, #112]
    64d8:	ldr	w0, [x0, #4]
    64dc:	cmp	w0, w1
    64e0:	b.gt	64ec <grub_mod_fini+0x61ec>
    64e4:	str	wzr, [sp, #204]
    64e8:	b	68dc <grub_mod_fini+0x65dc>
    64ec:	ldr	x0, [sp, #168]
    64f0:	ldr	x1, [sp, #112]
    64f4:	ldr	x0, [x0, #8]
    64f8:	ldr	w22, [x0, x1, lsl #2]
    64fc:	sxtw	x0, w22
    6500:	str	x0, [sp, #176]
    6504:	sbfiz	x0, x22, #4, #32
    6508:	str	x0, [sp, #136]
    650c:	ldr	x0, [x23]
    6510:	add	x0, x0, w22, sxtw #4
    6514:	ldrb	w1, [x0, #8]
    6518:	cmp	w1, #0x4
    651c:	b.eq	6530 <grub_mod_fini+0x6230>  // b.none
    6520:	ldr	x0, [sp, #112]
    6524:	add	x0, x0, #0x1
    6528:	str	x0, [sp, #112]
    652c:	b	64d0 <grub_mod_fini+0x61d0>
    6530:	ldr	w4, [x0, #8]
    6534:	tst	w4, #0x3ff00
    6538:	b.eq	6570 <grub_mod_fini+0x6270>  // b.none
    653c:	ldr	w2, [x25, #120]
    6540:	mov	w1, w20
    6544:	mov	x0, x25
    6548:	bl	4318 <grub_mod_fini+0x4018>
    654c:	ubfx	x1, x4, #8, #10
    6550:	tbz	w4, #10, 6558 <grub_mod_fini+0x6258>
    6554:	tbz	w0, #0, 6520 <grub_mod_fini+0x6220>
    6558:	tbz	w1, #3, 6560 <grub_mod_fini+0x6260>
    655c:	tbnz	w0, #0, 6520 <grub_mod_fini+0x6220>
    6560:	tbz	w1, #5, 6568 <grub_mod_fini+0x6268>
    6564:	tbz	w0, #1, 6520 <grub_mod_fini+0x6220>
    6568:	tbz	w1, #7, 6570 <grub_mod_fini+0x6270>
    656c:	tbz	w0, #3, 6520 <grub_mod_fini+0x6220>
    6570:	ldr	w0, [x25, #148]
    6574:	mov	w1, w20
    6578:	str	w0, [sp, #108]
    657c:	mov	x0, x25
    6580:	bl	1608 <grub_mod_fini+0x1308>
    6584:	cmn	w0, #0x1
    6588:	b.eq	6600 <grub_mod_fini+0x6300>  // b.none
    658c:	ldr	x1, [x25, #160]
    6590:	mov	w2, #0x14                  	// #20
    6594:	smaddl	x0, w0, w2, x1
    6598:	ldr	w1, [x0]
    659c:	cmp	w22, w1
    65a0:	b.ne	65f4 <grub_mod_fini+0x62f4>  // b.any
    65a4:	ldr	x0, [sp, #176]
    65a8:	mov	w24, #0x14                  	// #20
    65ac:	str	wzr, [sp, #204]
    65b0:	lsl	x28, x0, #2
    65b4:	ldr	w0, [sp, #108]
    65b8:	smull	x24, w0, w24
    65bc:	ldr	w0, [x25, #148]
    65c0:	ldr	w1, [sp, #108]
    65c4:	cmp	w0, w1
    65c8:	b.le	6520 <grub_mod_fini+0x6220>
    65cc:	ldr	x0, [x25, #160]
    65d0:	add	x1, x0, x24
    65d4:	ldr	w0, [x0, x24]
    65d8:	cmp	w0, w22
    65dc:	b.eq	68fc <grub_mod_fini+0x65fc>  // b.none
    65e0:	ldr	w0, [sp, #108]
    65e4:	add	x24, x24, #0x14
    65e8:	add	w0, w0, #0x1
    65ec:	str	w0, [sp, #108]
    65f0:	b	65bc <grub_mod_fini+0x62bc>
    65f4:	ldrb	w1, [x0, #16]
    65f8:	add	x0, x0, #0x14
    65fc:	cbnz	w1, 6598 <grub_mod_fini+0x6298>
    6600:	ldr	x0, [x25, #112]
    6604:	stp	xzr, x0, [sp, #120]
    6608:	ldr	x1, [sp, #136]
    660c:	ldr	x0, [x0]
    6610:	ldr	x26, [x25, #8]
    6614:	ldr	w0, [x0, x1]
    6618:	str	w0, [sp, #152]
    661c:	ldr	w0, [x25, #172]
    6620:	ldr	w1, [sp, #120]
    6624:	cmp	w0, w1
    6628:	b.le	65a4 <grub_mod_fini+0x62a4>
    662c:	ldr	x1, [sp, #120]
    6630:	ldr	x0, [x25, #184]
    6634:	ldr	x28, [x0, x1, lsl #3]
    6638:	ldr	x1, [sp, #128]
    663c:	ldrsw	x0, [x28, #4]
    6640:	ldr	x1, [x1]
    6644:	lsl	x0, x0, #4
    6648:	ldr	w0, [x1, x0]
    664c:	ldr	w1, [sp, #152]
    6650:	cmp	w1, w0
    6654:	b.ne	673c <grub_mod_fini+0x643c>  // b.any
    6658:	ldr	w19, [x28]
    665c:	mov	w21, w20
    6660:	mov	x27, #0x0                   	// #0
    6664:	ldr	w0, [x28, #20]
    6668:	str	w27, [sp, #156]
    666c:	cmp	w0, w27
    6670:	b.le	6718 <grub_mod_fini+0x6418>
    6674:	ldr	x0, [x28, #24]
    6678:	ldr	x0, [x0, x27, lsl #3]
    667c:	str	x0, [sp, #160]
    6680:	ldr	w0, [x0, #4]
    6684:	str	w0, [sp, #184]
    6688:	mov	w0, w0
    668c:	sub	w2, w0, w19
    6690:	add	w24, w2, w21
    6694:	cmp	w2, #0x0
    6698:	b.gt	66d0 <grub_mod_fini+0x63d0>
    669c:	ldr	x2, [sp, #160]
    66a0:	mov	w4, w20
    66a4:	mov	w3, w22
    66a8:	mov	x1, x28
    66ac:	mov	x0, x25
    66b0:	add	x27, x27, #0x1
    66b4:	bl	633c <grub_mod_fini+0x603c>
    66b8:	cmp	w0, #0x1
    66bc:	ldr	x26, [x25, #8]
    66c0:	b.hi	68d8 <grub_mod_fini+0x65d8>  // b.pmore
    66c4:	ldr	w19, [sp, #184]
    66c8:	mov	w21, w24
    66cc:	b	6664 <grub_mod_fini+0x6364>
    66d0:	ldr	w0, [x25, #44]
    66d4:	cmp	w0, w24
    66d8:	b.ge	6704 <grub_mod_fini+0x6404>  // b.tcont
    66dc:	ldr	w0, [x25, #64]
    66e0:	str	w2, [sp, #188]
    66e4:	cmp	w0, w24
    66e8:	b.lt	6718 <grub_mod_fini+0x6418>  // b.tstop
    66ec:	mov	w1, w24
    66f0:	mov	x0, x25
    66f4:	bl	544c <grub_mod_fini+0x514c>
    66f8:	cbnz	w0, 68d8 <grub_mod_fini+0x65d8>
    66fc:	ldr	w2, [sp, #188]
    6700:	ldr	x26, [x25, #8]
    6704:	sxtw	x2, w2
    6708:	add	x1, x26, w19, sxtw
    670c:	add	x0, x26, w21, sxtw
    6710:	bl	0 <grub_memcmp>
    6714:	cbz	w0, 669c <grub_mod_fini+0x639c>
    6718:	ldr	w0, [x28, #20]
    671c:	ldr	w1, [sp, #156]
    6720:	cmp	w1, w0
    6724:	b.lt	673c <grub_mod_fini+0x643c>  // b.tstop
    6728:	cmp	w1, #0x0
    672c:	cinc	w19, w19, ne  // ne = any
    6730:	sxtw	x27, w19
    6734:	cmp	w20, w19
    6738:	b.ge	674c <grub_mod_fini+0x644c>  // b.tcont
    673c:	ldr	x0, [sp, #120]
    6740:	add	x0, x0, #0x1
    6744:	str	x0, [sp, #120]
    6748:	b	661c <grub_mod_fini+0x631c>
    674c:	ldr	w0, [x28]
    6750:	sub	w0, w19, w0
    6754:	cmp	w0, #0x0
    6758:	b.le	67a4 <grub_mod_fini+0x64a4>
    675c:	ldr	w0, [x25, #44]
    6760:	cmp	w0, w21
    6764:	b.gt	6788 <grub_mod_fini+0x6488>
    6768:	ldr	w0, [x25, #64]
    676c:	cmp	w21, w0
    6770:	b.ge	673c <grub_mod_fini+0x643c>  // b.tcont
    6774:	add	w1, w21, #0x1
    6778:	mov	x0, x25
    677c:	bl	5384 <grub_mod_fini+0x5084>
    6780:	cbnz	w0, 68d8 <grub_mod_fini+0x65d8>
    6784:	ldr	x26, [x25, #8]
    6788:	add	x0, x26, x27
    678c:	ldrb	w2, [x26, w21, sxtw]
    6790:	add	w1, w21, #0x1
    6794:	ldurb	w0, [x0, #-1]
    6798:	cmp	w2, w0
    679c:	b.ne	673c <grub_mod_fini+0x643c>  // b.any
    67a0:	mov	w21, w1
    67a4:	ldr	x0, [x25, #136]
    67a8:	ldr	x1, [x0, x27, lsl #3]
    67ac:	cbz	x1, 67c0 <grub_mod_fini+0x64c0>
    67b0:	ldr	w3, [x1, #12]
    67b4:	mov	x0, #0x0                   	// #0
    67b8:	cmp	w3, w0
    67bc:	b.gt	67cc <grub_mod_fini+0x64cc>
    67c0:	add	w19, w19, #0x1
    67c4:	add	x27, x27, #0x1
    67c8:	b	6734 <grub_mod_fini+0x6434>
    67cc:	ldr	x2, [x1, #16]
    67d0:	ldr	w24, [x2, x0, lsl #2]
    67d4:	ldr	x2, [sp, #128]
    67d8:	sbfiz	x4, x24, #4, #32
    67dc:	ldr	x2, [x2]
    67e0:	add	x5, x2, w24, sxtw #4
    67e4:	ldrb	w5, [x5, #8]
    67e8:	cmp	w5, #0x9
    67ec:	b.ne	6800 <grub_mod_fini+0x6500>  // b.any
    67f0:	ldr	w2, [x2, x4]
    67f4:	ldr	w4, [sp, #152]
    67f8:	cmp	w4, w2
    67fc:	b.eq	6808 <grub_mod_fini+0x6508>  // b.none
    6800:	add	x0, x0, #0x1
    6804:	b	67b8 <grub_mod_fini+0x64b8>
    6808:	cmn	w24, #0x1
    680c:	b.eq	67c0 <grub_mod_fini+0x64c0>  // b.none
    6810:	ldr	x0, [x28, #8]
    6814:	cbz	x0, 68b8 <grub_mod_fini+0x65b8>
    6818:	ldp	w3, w2, [x28]
    681c:	mov	w5, w19
    6820:	ldr	x1, [x28, #8]
    6824:	mov	w4, w24
    6828:	mov	x0, x25
    682c:	mov	w6, #0x9                   	// #9
    6830:	bl	5e88 <grub_mod_fini+0x5b88>
    6834:	cmp	w0, #0x1
    6838:	b.eq	67c0 <grub_mod_fini+0x64c0>  // b.none
    683c:	cbnz	w0, 68d8 <grub_mod_fini+0x65d8>
    6840:	ldp	w0, w2, [x28, #16]
    6844:	cmp	w2, w0
    6848:	b.ne	686c <grub_mod_fini+0x656c>  // b.any
    684c:	ldr	x0, [x28, #24]
    6850:	lsl	w2, w2, #1
    6854:	add	w26, w2, #0x1
    6858:	sbfiz	x1, x26, #3, #32
    685c:	bl	0 <grub_realloc>
    6860:	cbz	x0, 68d4 <grub_mod_fini+0x65d4>
    6864:	str	w26, [x28, #16]
    6868:	str	x0, [x28, #24]
    686c:	mov	x0, #0x18                  	// #24
    6870:	bl	0 <grub_zalloc>
    6874:	mov	x2, x0
    6878:	cbz	x0, 68d4 <grub_mod_fini+0x65d4>
    687c:	ldr	w0, [x28, #20]
    6880:	mov	w4, w20
    6884:	ldr	x1, [x28, #24]
    6888:	mov	w3, w22
    688c:	str	x2, [x1, w0, sxtw #3]
    6890:	add	w0, w0, #0x1
    6894:	stp	w24, w19, [x2]
    6898:	mov	x1, x28
    689c:	str	w0, [x28, #20]
    68a0:	mov	x0, x25
    68a4:	bl	633c <grub_mod_fini+0x603c>
    68a8:	cmp	w0, #0x1
    68ac:	ldr	x26, [x25, #8]
    68b0:	b.ls	67c0 <grub_mod_fini+0x64c0>  // b.plast
    68b4:	b	68d8 <grub_mod_fini+0x65d8>
    68b8:	ldr	w0, [x28]
    68bc:	sub	w0, w19, w0
    68c0:	add	w0, w0, #0x1
    68c4:	sbfiz	x0, x0, #4, #32
    68c8:	bl	0 <grub_zalloc>
    68cc:	str	x0, [x28, #8]
    68d0:	cbnz	x0, 6818 <grub_mod_fini+0x6518>
    68d4:	mov	w0, #0xc                   	// #12
    68d8:	str	w0, [sp, #204]
    68dc:	ldr	w0, [sp, #204]
    68e0:	ldp	x19, x20, [sp, #16]
    68e4:	ldp	x21, x22, [sp, #32]
    68e8:	ldp	x23, x24, [sp, #48]
    68ec:	ldp	x25, x26, [sp, #64]
    68f0:	ldp	x27, x28, [sp, #80]
    68f4:	ldp	x29, x30, [sp], #224
    68f8:	ret
    68fc:	ldr	w0, [x1, #4]
    6900:	cmp	w0, w20
    6904:	b.ne	65e0 <grub_mod_fini+0x62e0>  // b.any
    6908:	ldr	w0, [x1, #12]
    690c:	ldr	w1, [x1, #8]
    6910:	ldr	x21, [x23, #48]
    6914:	subs	w27, w0, w1
    6918:	b.ne	69ec <grub_mod_fini+0x66ec>  // b.any
    691c:	ldr	x2, [x23, #40]
    6920:	ldr	x3, [sp, #136]
    6924:	add	x2, x2, x3
    6928:	ldr	x2, [x2, #8]
    692c:	ldrsw	x2, [x2]
    6930:	add	x21, x21, x2, lsl #4
    6934:	ldr	w2, [x25, #120]
    6938:	add	w19, w0, w20
    693c:	mov	x0, x25
    6940:	sub	w19, w19, w1
    6944:	sub	w1, w19, #0x1
    6948:	bl	4318 <grub_mod_fini+0x4018>
    694c:	sbfiz	x19, x19, #3, #32
    6950:	ldr	x4, [x25, #136]
    6954:	mov	w3, w0
    6958:	ldr	x1, [sp, #144]
    695c:	ldr	x0, [x4, x19]
    6960:	ldr	x1, [x4, x1]
    6964:	cbz	x1, 69f8 <grub_mod_fini+0x66f8>
    6968:	ldr	w26, [x1, #12]
    696c:	cbnz	x0, 6a00 <grub_mod_fini+0x6700>
    6970:	mov	x2, x21
    6974:	mov	x1, x23
    6978:	add	x0, sp, #0xcc
    697c:	str	x4, [sp, #120]
    6980:	bl	3178 <grub_mod_fini+0x2e78>
    6984:	ldr	x4, [sp, #120]
    6988:	str	x0, [x4, x19]
    698c:	ldr	x0, [x25, #136]
    6990:	ldr	x0, [x0, x19]
    6994:	cbnz	x0, 69a0 <grub_mod_fini+0x66a0>
    6998:	ldr	w0, [sp, #204]
    699c:	cbnz	w0, 68dc <grub_mod_fini+0x65dc>
    69a0:	cbnz	w27, 65e0 <grub_mod_fini+0x62e0>
    69a4:	ldr	x0, [x25, #136]
    69a8:	ldr	x1, [sp, #144]
    69ac:	ldr	x0, [x0, x1]
    69b0:	ldr	w0, [x0, #12]
    69b4:	cmp	w0, w26
    69b8:	b.le	65e0 <grub_mod_fini+0x62e0>
    69bc:	mov	w2, w20
    69c0:	mov	x1, x21
    69c4:	mov	x0, x25
    69c8:	bl	1b74 <grub_mod_fini+0x1874>
    69cc:	str	w0, [sp, #204]
    69d0:	cbnz	w0, 68dc <grub_mod_fini+0x65dc>
    69d4:	mov	x1, x21
    69d8:	mov	x0, x25
    69dc:	bl	6498 <grub_mod_fini+0x6198>
    69e0:	str	w0, [sp, #204]
    69e4:	cbz	w0, 65e0 <grub_mod_fini+0x62e0>
    69e8:	b	68dc <grub_mod_fini+0x65dc>
    69ec:	ldr	x2, [x23, #24]
    69f0:	ldrsw	x2, [x2, x28]
    69f4:	b	6930 <grub_mod_fini+0x6630>
    69f8:	mov	w26, #0x0                   	// #0
    69fc:	b	696c <grub_mod_fini+0x666c>
    6a00:	ldr	x1, [x0, #56]
    6a04:	mov	x2, x21
    6a08:	add	x0, sp, #0xd0
    6a0c:	str	w3, [sp, #120]
    6a10:	bl	2ffc <grub_mod_fini+0x2cfc>
    6a14:	str	w0, [sp, #204]
    6a18:	ldr	w3, [sp, #120]
    6a1c:	cbz	w0, 6a2c <grub_mod_fini+0x672c>
    6a20:	ldr	x0, [sp, #216]
    6a24:	bl	0 <grub_free>
    6a28:	b	68dc <grub_mod_fini+0x65dc>
    6a2c:	ldr	x4, [x25, #136]
    6a30:	add	x2, sp, #0xd0
    6a34:	mov	x1, x23
    6a38:	add	x0, sp, #0xcc
    6a3c:	str	x4, [sp, #120]
    6a40:	bl	3178 <grub_mod_fini+0x2e78>
    6a44:	ldr	x4, [sp, #120]
    6a48:	str	x0, [x4, x19]
    6a4c:	ldr	x0, [sp, #216]
    6a50:	bl	0 <grub_free>
    6a54:	b	698c <grub_mod_fini+0x668c>
    6a58:	stp	x29, x30, [sp, #-96]!
    6a5c:	mov	x29, sp
    6a60:	stp	x23, x24, [sp, #48]
    6a64:	ldr	w23, [x1, #56]
    6a68:	stp	x19, x20, [sp, #16]
    6a6c:	mov	x20, x1
    6a70:	mov	x19, x2
    6a74:	stp	x21, x22, [sp, #32]
    6a78:	mov	x21, x0
    6a7c:	sbfiz	x22, x23, #3, #32
    6a80:	stp	x25, x26, [sp, #64]
    6a84:	ldr	x25, [x1, #112]
    6a88:	ldr	x0, [x1, #136]
    6a8c:	ldr	w1, [x1, #144]
    6a90:	cmp	w1, w23
    6a94:	b.ge	6af0 <grub_mod_fini+0x67f0>  // b.tcont
    6a98:	str	x2, [x0, x22]
    6a9c:	str	w23, [x20, #144]
    6aa0:	ldr	w0, [x25, #140]
    6aa4:	cbz	w0, 6b24 <grub_mod_fini+0x6824>
    6aa8:	cbz	x19, 6b20 <grub_mod_fini+0x6820>
    6aac:	add	x24, x19, #0x8
    6ab0:	mov	w2, w23
    6ab4:	mov	x1, x24
    6ab8:	mov	x0, x20
    6abc:	bl	1b74 <grub_mod_fini+0x1874>
    6ac0:	str	w0, [x21]
    6ac4:	cbnz	w0, 6b20 <grub_mod_fini+0x6820>
    6ac8:	ldrb	w0, [x19, #80]
    6acc:	tbz	w0, #6, 6b24 <grub_mod_fini+0x6824>
    6ad0:	mov	x1, x24
    6ad4:	mov	x0, x20
    6ad8:	bl	6498 <grub_mod_fini+0x6198>
    6adc:	str	w0, [x21]
    6ae0:	cbnz	w0, 6b20 <grub_mod_fini+0x6820>
    6ae4:	ldr	x0, [x20, #136]
    6ae8:	ldr	x19, [x0, x22]
    6aec:	b	6b24 <grub_mod_fini+0x6824>
    6af0:	ldr	x1, [x0, x22]
    6af4:	cbnz	x1, 6b00 <grub_mod_fini+0x6800>
    6af8:	str	x2, [x0, x22]
    6afc:	b	6aa0 <grub_mod_fini+0x67a0>
    6b00:	ldr	x2, [x1, #56]
    6b04:	cbz	x19, 6b40 <grub_mod_fini+0x6840>
    6b08:	ldr	x24, [x19, #56]
    6b0c:	add	x0, sp, #0x50
    6b10:	mov	x1, x24
    6b14:	bl	2ffc <grub_mod_fini+0x2cfc>
    6b18:	str	w0, [x21]
    6b1c:	cbz	w0, 6b4c <grub_mod_fini+0x684c>
    6b20:	mov	x19, #0x0                   	// #0
    6b24:	mov	x0, x19
    6b28:	ldp	x19, x20, [sp, #16]
    6b2c:	ldp	x21, x22, [sp, #32]
    6b30:	ldp	x23, x24, [sp, #48]
    6b34:	ldp	x25, x26, [sp, #64]
    6b38:	ldp	x29, x30, [sp], #96
    6b3c:	ret
    6b40:	ldp	x0, x1, [x2]
    6b44:	mov	x24, #0x0                   	// #0
    6b48:	stp	x0, x1, [sp, #80]
    6b4c:	ldr	w2, [x20, #120]
    6b50:	ldr	w1, [x20, #56]
    6b54:	mov	x0, x20
    6b58:	sub	w1, w1, #0x1
    6b5c:	bl	4318 <grub_mod_fini+0x4018>
    6b60:	mov	w3, w0
    6b64:	ldr	x26, [x20, #136]
    6b68:	add	x2, sp, #0x50
    6b6c:	mov	x1, x25
    6b70:	mov	x0, x21
    6b74:	bl	3178 <grub_mod_fini+0x2e78>
    6b78:	mov	x19, x0
    6b7c:	str	x0, [x26, x22]
    6b80:	cbz	x24, 6aa0 <grub_mod_fini+0x67a0>
    6b84:	ldr	x0, [sp, #88]
    6b88:	bl	0 <grub_free>
    6b8c:	b	6aa0 <grub_mod_fini+0x67a0>
    6b90:	stp	x29, x30, [sp, #-144]!
    6b94:	mov	x29, sp
    6b98:	stp	x19, x20, [sp, #16]
    6b9c:	mov	x19, x1
    6ba0:	ldr	w20, [x1, #20]
    6ba4:	ldr	w1, [x1, #16]
    6ba8:	stp	x21, x22, [sp, #32]
    6bac:	mov	x21, x0
    6bb0:	add	x0, sp, #0x80
    6bb4:	stp	x23, x24, [sp, #48]
    6bb8:	stp	x25, x26, [sp, #64]
    6bbc:	stp	x27, x28, [sp, #80]
    6bc0:	bl	1ad8 <grub_mod_fini+0x17d8>
    6bc4:	mov	w22, w0
    6bc8:	cbnz	w0, 6bf0 <grub_mod_fini+0x68f0>
    6bcc:	add	x3, sp, #0x80
    6bd0:	mov	w2, w20
    6bd4:	mov	x1, x19
    6bd8:	mov	x0, x21
    6bdc:	bl	6de0 <grub_mod_fini+0x6ae0>
    6be0:	mov	w22, w0
    6be4:	cbz	w0, 6d90 <grub_mod_fini+0x6a90>
    6be8:	ldr	x0, [sp, #136]
    6bec:	bl	0 <grub_free>
    6bf0:	mov	w0, w22
    6bf4:	ldp	x19, x20, [sp, #16]
    6bf8:	ldp	x21, x22, [sp, #32]
    6bfc:	ldp	x23, x24, [sp, #48]
    6c00:	ldp	x25, x26, [sp, #64]
    6c04:	ldp	x27, x28, [sp, #80]
    6c08:	ldp	x29, x30, [sp], #144
    6c0c:	ret
    6c10:	ldr	x0, [x21, #136]
    6c14:	sub	w20, w20, #0x1
    6c18:	add	x0, x0, x23
    6c1c:	ldur	x27, [x0, #-8]
    6c20:	str	wzr, [sp, #132]
    6c24:	cbnz	x27, 6c4c <grub_mod_fini+0x694c>
    6c28:	add	x3, sp, #0x80
    6c2c:	mov	w2, w20
    6c30:	mov	x1, x19
    6c34:	mov	x0, x21
    6c38:	sub	x23, x23, #0x8
    6c3c:	bl	6de0 <grub_mod_fini+0x6ae0>
    6c40:	cbz	w0, 6da0 <grub_mod_fini+0x6aa0>
    6c44:	mov	w22, w0
    6c48:	b	6be8 <grub_mod_fini+0x68e8>
    6c4c:	ldr	x26, [x21, #112]
    6c50:	mov	x25, #0x0                   	// #0
    6c54:	ldr	w0, [x27, #28]
    6c58:	cmp	w0, w25
    6c5c:	b.le	6c28 <grub_mod_fini+0x6928>
    6c60:	ldr	x0, [x27, #32]
    6c64:	ldr	w24, [x0, x25, lsl #2]
    6c68:	sbfiz	x0, x24, #4, #32
    6c6c:	str	x0, [sp, #96]
    6c70:	ldr	x0, [x26]
    6c74:	sxtw	x28, w24
    6c78:	add	x0, x0, w24, sxtw #4
    6c7c:	ldrb	w0, [x0, #10]
    6c80:	tbnz	w0, #4, 6cac <grub_mod_fini+0x69ac>
    6c84:	ldr	x1, [x26]
    6c88:	mov	w2, w20
    6c8c:	ldr	x0, [sp, #96]
    6c90:	add	x1, x1, x0
    6c94:	mov	x0, x21
    6c98:	bl	45bc <grub_mod_fini+0x42bc>
    6c9c:	tst	w0, #0xff
    6ca0:	b.ne	6d3c <grub_mod_fini+0x6a3c>  // b.any
    6ca4:	add	x25, x25, #0x1
    6ca8:	b	6c54 <grub_mod_fini+0x6954>
    6cac:	ldr	w5, [x19, #20]
    6cb0:	mov	w3, w20
    6cb4:	ldr	x4, [x21, #112]
    6cb8:	mov	x2, x21
    6cbc:	mov	w1, w24
    6cc0:	str	x4, [sp, #112]
    6cc4:	mov	x0, x4
    6cc8:	str	w5, [sp, #124]
    6ccc:	bl	5b34 <grub_mod_fini+0x5834>
    6cd0:	mov	w6, w0
    6cd4:	cmp	w0, #0x0
    6cd8:	b.le	6d34 <grub_mod_fini+0x6a34>
    6cdc:	ldr	w5, [sp, #124]
    6ce0:	add	w0, w20, w0
    6ce4:	cmp	w5, w0
    6ce8:	b.lt	6d10 <grub_mod_fini+0x6a10>  // b.tstop
    6cec:	ldr	x1, [x19]
    6cf0:	ldr	x0, [x1, w0, sxtw #3]
    6cf4:	cbz	x0, 6c84 <grub_mod_fini+0x6984>
    6cf8:	ldr	x4, [sp, #112]
    6cfc:	add	x0, x0, #0x8
    6d00:	ldr	x1, [x4, #24]
    6d04:	ldr	w1, [x1, x28, lsl #2]
    6d08:	bl	1240 <grub_mod_fini+0xf40>
    6d0c:	cbz	w0, 6c84 <grub_mod_fini+0x6984>
    6d10:	ldr	w0, [x19, #28]
    6d14:	cbnz	w0, 6d64 <grub_mod_fini+0x6a64>
    6d18:	mov	w1, w24
    6d1c:	add	x0, sp, #0x80
    6d20:	bl	2928 <grub_mod_fini+0x2628>
    6d24:	tst	w0, #0xff
    6d28:	b.ne	6ca4 <grub_mod_fini+0x69a4>  // b.any
    6d2c:	mov	w22, #0xc                   	// #12
    6d30:	b	6be8 <grub_mod_fini+0x68e8>
    6d34:	b.eq	6c84 <grub_mod_fini+0x6984>  // b.none
    6d38:	b	6d10 <grub_mod_fini+0x6a10>
    6d3c:	ldr	x0, [x19]
    6d40:	ldr	x0, [x0, x23]
    6d44:	cbz	x0, 6ca4 <grub_mod_fini+0x69a4>
    6d48:	ldr	x1, [x26, #24]
    6d4c:	add	x0, x0, #0x8
    6d50:	ldr	w1, [x1, x28, lsl #2]
    6d54:	bl	1240 <grub_mod_fini+0xf40>
    6d58:	cbz	w0, 6ca4 <grub_mod_fini+0x69a4>
    6d5c:	mov	w6, #0x1                   	// #1
    6d60:	b	6d10 <grub_mod_fini+0x6a10>
    6d64:	ldr	x0, [x26, #24]
    6d68:	mov	w5, w20
    6d6c:	ldr	x1, [sp, #104]
    6d70:	mov	w4, w24
    6d74:	ldr	w2, [x0, x28, lsl #2]
    6d78:	add	w3, w20, w6
    6d7c:	mov	x0, x21
    6d80:	bl	167c <grub_mod_fini+0x137c>
    6d84:	tst	w0, #0xff
    6d88:	b.eq	6d18 <grub_mod_fini+0x6a18>  // b.none
    6d8c:	b	6ca4 <grub_mod_fini+0x69a4>
    6d90:	sbfiz	x23, x20, #3, #32
    6d94:	add	x0, x19, #0x18
    6d98:	str	x0, [sp, #104]
    6d9c:	str	wzr, [sp, #120]
    6da0:	cmp	w20, #0x0
    6da4:	b.le	6be8 <grub_mod_fini+0x68e8>
    6da8:	ldr	x0, [x19]
    6dac:	ldr	x1, [x0, x23]
    6db0:	cmp	x1, #0x0
    6db4:	ldr	w1, [sp, #120]
    6db8:	csinc	w1, wzr, w1, ne  // ne = any
    6dbc:	str	w1, [sp, #120]
    6dc0:	ldr	w1, [x21, #168]
    6dc4:	ldr	w2, [sp, #120]
    6dc8:	cmp	w1, w2
    6dcc:	b.ge	6c10 <grub_mod_fini+0x6910>  // b.tcont
    6dd0:	mov	x2, x23
    6dd4:	mov	w1, #0x0                   	// #0
    6dd8:	bl	0 <grub_memset>
    6ddc:	b	6be8 <grub_mod_fini+0x68e8>
    6de0:	stp	x29, x30, [sp, #-208]!
    6de4:	mov	x29, sp
    6de8:	stp	x19, x20, [sp, #16]
    6dec:	mov	x20, x0
    6df0:	mov	x19, x1
    6df4:	stp	x23, x24, [sp, #48]
    6df8:	sbfiz	x24, x2, #3, #32
    6dfc:	ldr	x23, [x0, #112]
    6e00:	stp	x21, x22, [sp, #32]
    6e04:	mov	w21, w2
    6e08:	ldr	x0, [x0, #136]
    6e0c:	stp	x25, x26, [sp, #64]
    6e10:	stp	x27, x28, [sp, #80]
    6e14:	mov	x28, x3
    6e18:	ldr	x22, [x0, x24]
    6e1c:	str	wzr, [sp, #164]
    6e20:	cbz	x22, 6e28 <grub_mod_fini+0x6b28>
    6e24:	add	x22, x22, #0x8
    6e28:	ldr	w0, [x28, #4]
    6e2c:	cbnz	w0, 6e70 <grub_mod_fini+0x6b70>
    6e30:	ldr	x0, [x19]
    6e34:	str	xzr, [x0, x24]
    6e38:	cbz	x22, 6e68 <grub_mod_fini+0x6b68>
    6e3c:	ldr	x0, [x20, #136]
    6e40:	ldr	x0, [x0, x24]
    6e44:	ldrb	w0, [x0, #80]
    6e48:	tbz	w0, #6, 6e68 <grub_mod_fini+0x6b68>
    6e4c:	mov	w1, w21
    6e50:	mov	x0, x20
    6e54:	bl	1608 <grub_mod_fini+0x1308>
    6e58:	str	w0, [sp, #96]
    6e5c:	mov	w0, w0
    6e60:	cmn	w0, #0x1
    6e64:	b.ne	7144 <grub_mod_fini+0x6e44>  // b.any
    6e68:	mov	w1, #0x0                   	// #0
    6e6c:	b	6e94 <grub_mod_fini+0x6b94>
    6e70:	cbnz	x22, 6eb4 <grub_mod_fini+0x6bb4>
    6e74:	ldr	x25, [x19]
    6e78:	mov	x1, x23
    6e7c:	mov	x2, x28
    6e80:	add	x0, sp, #0xa4
    6e84:	bl	4a4c <grub_mod_fini+0x474c>
    6e88:	ldr	w1, [sp, #164]
    6e8c:	str	x0, [x25, x24]
    6e90:	cbz	w1, 6e38 <grub_mod_fini+0x6b38>
    6e94:	mov	w0, w1
    6e98:	ldp	x19, x20, [sp, #16]
    6e9c:	ldp	x21, x22, [sp, #32]
    6ea0:	ldp	x23, x24, [sp, #48]
    6ea4:	ldp	x25, x26, [sp, #64]
    6ea8:	ldp	x27, x28, [sp, #80]
    6eac:	ldp	x29, x30, [sp], #208
    6eb0:	ret
    6eb4:	mov	x1, x23
    6eb8:	mov	x2, x28
    6ebc:	add	x0, sp, #0xa8
    6ec0:	str	wzr, [sp, #168]
    6ec4:	bl	4a4c <grub_mod_fini+0x474c>
    6ec8:	mov	x1, x0
    6ecc:	ldr	w0, [sp, #168]
    6ed0:	cbnz	w0, 6ef0 <grub_mod_fini+0x6bf0>
    6ed4:	ldr	w0, [x1, #40]
    6ed8:	add	x26, x1, #0x28
    6edc:	cbz	w0, 6f20 <grub_mod_fini+0x6c20>
    6ee0:	mov	x2, x26
    6ee4:	mov	x1, x22
    6ee8:	mov	x0, x28
    6eec:	bl	33d0 <grub_mod_fini+0x30d0>
    6ef0:	str	w0, [sp, #164]
    6ef4:	cbnz	w0, 738c <grub_mod_fini+0x708c>
    6ef8:	ldr	w0, [x19, #28]
    6efc:	cbz	w0, 6e74 <grub_mod_fini+0x6b74>
    6f00:	ldr	x0, [x20, #160]
    6f04:	mov	x25, #0x0                   	// #0
    6f08:	str	x0, [sp, #96]
    6f0c:	ldr	w0, [x19, #28]
    6f10:	cmp	w0, w25
    6f14:	b.gt	6f7c <grub_mod_fini+0x6c7c>
    6f18:	mov	w1, #0x0                   	// #0
    6f1c:	b	705c <grub_mod_fini+0x6d5c>
    6f20:	ldr	w1, [x28, #4]
    6f24:	mov	x0, x26
    6f28:	mov	x25, #0x0                   	// #0
    6f2c:	bl	1b24 <grub_mod_fini+0x1824>
    6f30:	str	w0, [sp, #168]
    6f34:	cbz	w0, 6f64 <grub_mod_fini+0x6c64>
    6f38:	mov	w1, #0xc                   	// #12
    6f3c:	b	6e94 <grub_mod_fini+0x6b94>
    6f40:	ldr	x0, [x28, #8]
    6f44:	ldrsw	x1, [x0, x25, lsl #2]
    6f48:	add	x25, x25, #0x1
    6f4c:	ldr	x0, [x23, #56]
    6f50:	add	x1, x0, x1, lsl #4
    6f54:	mov	x0, x26
    6f58:	bl	2e18 <grub_mod_fini+0x2b18>
    6f5c:	str	w0, [sp, #168]
    6f60:	cbnz	w0, 6f74 <grub_mod_fini+0x6c74>
    6f64:	ldr	w0, [x28, #4]
    6f68:	cmp	w0, w25
    6f6c:	b.gt	6f40 <grub_mod_fini+0x6c40>
    6f70:	b	6ee0 <grub_mod_fini+0x6be0>
    6f74:	mov	w0, #0xc                   	// #12
    6f78:	b	6ef0 <grub_mod_fini+0x6bf0>
    6f7c:	ldr	x0, [x19, #32]
    6f80:	mov	w1, #0x14                  	// #20
    6f84:	ldr	w0, [x0, x25, lsl #2]
    6f88:	smull	x0, w0, w1
    6f8c:	ldr	x1, [sp, #96]
    6f90:	add	x1, x1, x0
    6f94:	ldr	w2, [x1, #8]
    6f98:	cmp	w21, w2
    6f9c:	b.gt	6fa8 <grub_mod_fini+0x6ca8>
    6fa0:	add	x25, x25, #0x1
    6fa4:	b	6f0c <grub_mod_fini+0x6c0c>
    6fa8:	ldr	w2, [x1, #4]
    6fac:	cmp	w21, w2
    6fb0:	b.gt	6fa0 <grub_mod_fini+0x6ca0>
    6fb4:	ldr	x3, [sp, #96]
    6fb8:	ldr	x2, [x23]
    6fbc:	ldrsw	x0, [x3, x0]
    6fc0:	lsl	x0, x0, #4
    6fc4:	ldr	w6, [x2, x0]
    6fc8:	ldr	w0, [x1, #12]
    6fcc:	cmp	w21, w0
    6fd0:	b.ne	713c <grub_mod_fini+0x6e3c>  // b.any
    6fd4:	ldr	w8, [x28, #4]
    6fd8:	mov	w26, #0xffffffff            	// #-1
    6fdc:	mov	w1, w26
    6fe0:	mov	x0, #0x0                   	// #0
    6fe4:	cmp	w8, w0
    6fe8:	b.gt	6ffc <grub_mod_fini+0x6cfc>
    6fec:	tbz	w1, #31, 7044 <grub_mod_fini+0x6d44>
    6ff0:	tbnz	w26, #31, 6fa0 <grub_mod_fini+0x6ca0>
    6ff4:	mov	w27, #0x0                   	// #0
    6ff8:	b	70bc <grub_mod_fini+0x6dbc>
    6ffc:	ldr	x3, [x28, #8]
    7000:	ldr	w3, [x3, x0, lsl #2]
    7004:	add	x7, x2, w3, sxtw #4
    7008:	sbfiz	x4, x3, #4, #32
    700c:	ldrb	w7, [x7, #8]
    7010:	cmp	w7, #0x8
    7014:	b.ne	702c <grub_mod_fini+0x6d2c>  // b.any
    7018:	ldr	w4, [x2, x4]
    701c:	cmp	w6, w4
    7020:	csel	w1, w1, w3, ne  // ne = any
    7024:	add	x0, x0, #0x1
    7028:	b	6fe4 <grub_mod_fini+0x6ce4>
    702c:	cmp	w7, #0x9
    7030:	b.ne	7024 <grub_mod_fini+0x6d24>  // b.any
    7034:	ldr	w4, [x2, x4]
    7038:	cmp	w6, w4
    703c:	csel	w26, w26, w3, ne  // ne = any
    7040:	b	7024 <grub_mod_fini+0x6d24>
    7044:	mov	x3, x22
    7048:	mov	x2, x28
    704c:	mov	x0, x23
    7050:	bl	354c <grub_mod_fini+0x324c>
    7054:	mov	w1, w0
    7058:	cbz	w0, 6ff0 <grub_mod_fini+0x6cf0>
    705c:	str	w1, [sp, #164]
    7060:	cbz	w1, 6e74 <grub_mod_fini+0x6b74>
    7064:	b	6e94 <grub_mod_fini+0x6b94>
    7068:	ldr	x0, [x28, #8]
    706c:	mov	w1, w26
    7070:	ldr	w6, [x0, w27, sxtw #2]
    7074:	ldr	x0, [x23, #56]
    7078:	sbfiz	x7, x6, #4, #32
    707c:	add	x0, x0, w6, sxtw #4
    7080:	bl	1240 <grub_mod_fini+0xf40>
    7084:	cbnz	w0, 70b8 <grub_mod_fini+0x6db8>
    7088:	ldr	x0, [x23, #48]
    708c:	add	x0, x0, x7
    7090:	bl	1240 <grub_mod_fini+0xf40>
    7094:	cbnz	w0, 70b8 <grub_mod_fini+0x6db8>
    7098:	mov	w1, w6
    709c:	mov	x3, x22
    70a0:	mov	x2, x28
    70a4:	mov	x0, x23
    70a8:	bl	354c <grub_mod_fini+0x324c>
    70ac:	mov	w1, w0
    70b0:	cbnz	w0, 705c <grub_mod_fini+0x6d5c>
    70b4:	sub	w27, w27, #0x1
    70b8:	add	w27, w27, #0x1
    70bc:	ldr	w0, [x28, #4]
    70c0:	cmp	w27, w0
    70c4:	b.lt	7068 <grub_mod_fini+0x6d68>  // b.tstop
    70c8:	b	6fa0 <grub_mod_fini+0x6ca0>
    70cc:	ldr	x0, [x28, #8]
    70d0:	ldr	x2, [x23]
    70d4:	ldr	w1, [x0, x4, lsl #2]
    70d8:	add	x0, x2, w1, sxtw #4
    70dc:	sbfiz	x3, x1, #4, #32
    70e0:	ldrb	w0, [x0, #8]
    70e4:	sub	w0, w0, #0x8
    70e8:	cmp	w0, #0x1
    70ec:	b.ls	7104 <grub_mod_fini+0x6e04>  // b.plast
    70f0:	add	x4, x4, #0x1
    70f4:	ldr	w0, [x28, #4]
    70f8:	cmp	w0, w4
    70fc:	b.gt	70cc <grub_mod_fini+0x6dcc>
    7100:	b	6fa0 <grub_mod_fini+0x6ca0>
    7104:	ldr	w0, [x2, x3]
    7108:	cmp	w6, w0
    710c:	b.ne	70f0 <grub_mod_fini+0x6df0>  // b.any
    7110:	mov	x3, x22
    7114:	mov	x2, x28
    7118:	mov	x0, x23
    711c:	str	w6, [sp, #104]
    7120:	str	x4, [sp, #112]
    7124:	bl	354c <grub_mod_fini+0x324c>
    7128:	ldr	w6, [sp, #104]
    712c:	mov	w1, w0
    7130:	ldr	x4, [sp, #112]
    7134:	cbz	w0, 70f0 <grub_mod_fini+0x6df0>
    7138:	b	705c <grub_mod_fini+0x6d5c>
    713c:	mov	x4, #0x0                   	// #0
    7140:	b	70f4 <grub_mod_fini+0x6df4>
    7144:	ldr	w1, [sp, #96]
    7148:	mov	w0, #0x14                  	// #20
    714c:	ldr	x26, [x20, #112]
    7150:	add	x27, sp, #0xc0
    7154:	mov	x25, #0x0                   	// #0
    7158:	str	xzr, [sp, #168]
    715c:	smull	x0, w1, w0
    7160:	str	x0, [sp, #112]
    7164:	add	x0, x19, #0x18
    7168:	str	x0, [sp, #120]
    716c:	ldr	w0, [x22, #4]
    7170:	cmp	w0, w25
    7174:	b.gt	7180 <grub_mod_fini+0x6e80>
    7178:	mov	w1, #0x0                   	// #0
    717c:	b	7290 <grub_mod_fini+0x6f90>
    7180:	ldr	x0, [x22, #8]
    7184:	ldr	w2, [x19, #16]
    7188:	ldr	w23, [x0, x25, lsl #2]
    718c:	cmp	w23, w2
    7190:	sbfiz	x0, x23, #4, #32
    7194:	str	x0, [sp, #128]
    7198:	ldr	x0, [x26]
    719c:	sxtw	x1, w23
    71a0:	add	x0, x0, w23, sxtw #4
    71a4:	ldrb	w0, [x0, #8]
    71a8:	b.ne	71c0 <grub_mod_fini+0x6ec0>  // b.any
    71ac:	ldr	w2, [x19, #20]
    71b0:	cmp	w21, w2
    71b4:	b.ne	71c0 <grub_mod_fini+0x6ec0>  // b.any
    71b8:	add	x25, x25, #0x1
    71bc:	b	716c <grub_mod_fini+0x6e6c>
    71c0:	cmp	w0, #0x4
    71c4:	b.ne	71b8 <grub_mod_fini+0x6eb8>  // b.any
    71c8:	ldr	x0, [sp, #112]
    71cc:	ldr	x6, [x20, #160]
    71d0:	ldr	w28, [sp, #96]
    71d4:	add	x6, x6, x0
    71d8:	lsl	x0, x1, #2
    71dc:	str	x0, [sp, #136]
    71e0:	ldr	x0, [sp, #112]
    71e4:	str	x0, [sp, #104]
    71e8:	add	w0, w21, #0x1
    71ec:	str	w0, [sp, #156]
    71f0:	ldr	w0, [x6]
    71f4:	cmp	w23, w0
    71f8:	b.ne	734c <grub_mod_fini+0x704c>  // b.any
    71fc:	ldp	w1, w0, [x6, #8]
    7200:	sub	w0, w0, w1
    7204:	add	w7, w21, w0
    7208:	cbz	w0, 72ac <grub_mod_fini+0x6fac>
    720c:	ldr	x0, [x26, #24]
    7210:	ldr	x1, [sp, #136]
    7214:	ldr	w1, [x0, x1]
    7218:	ldr	w0, [x19, #20]
    721c:	cmp	w7, w0
    7220:	b.gt	734c <grub_mod_fini+0x704c>
    7224:	ldr	x0, [x19]
    7228:	ldr	x0, [x0, w7, sxtw #3]
    722c:	cbz	x0, 734c <grub_mod_fini+0x704c>
    7230:	add	x0, x0, #0x8
    7234:	str	x6, [sp, #144]
    7238:	bl	1240 <grub_mod_fini+0xf40>
    723c:	ldr	x6, [sp, #144]
    7240:	cbz	w0, 734c <grub_mod_fini+0x704c>
    7244:	mov	w4, w1
    7248:	mov	w5, w7
    724c:	ldr	x1, [sp, #120]
    7250:	mov	w3, w21
    7254:	mov	w2, w23
    7258:	mov	x0, x20
    725c:	bl	167c <grub_mod_fini+0x137c>
    7260:	tst	w0, #0xff
    7264:	ldr	x6, [sp, #144]
    7268:	b.ne	734c <grub_mod_fini+0x704c>  // b.any
    726c:	ldr	x0, [sp, #168]
    7270:	cbz	x0, 72c4 <grub_mod_fini+0x6fc4>
    7274:	mov	w1, w28
    7278:	mov	x0, x27
    727c:	stp	w23, w21, [sp, #184]
    7280:	bl	2928 <grub_mod_fini+0x2628>
    7284:	tst	w0, #0xff
    7288:	b.ne	72f4 <grub_mod_fini+0x6ff4>  // b.any
    728c:	mov	w1, #0xc                   	// #12
    7290:	ldr	x0, [sp, #168]
    7294:	cbz	x0, 6e94 <grub_mod_fini+0x6b94>
    7298:	ldr	x0, [sp, #200]
    729c:	str	w1, [sp, #96]
    72a0:	bl	0 <grub_free>
    72a4:	ldr	w1, [sp, #96]
    72a8:	b	6e94 <grub_mod_fini+0x6b94>
    72ac:	ldr	x0, [x26, #40]
    72b0:	ldr	x1, [sp, #128]
    72b4:	add	x0, x0, x1
    72b8:	ldr	x0, [x0, #8]
    72bc:	ldr	w1, [x0]
    72c0:	b	7218 <grub_mod_fini+0x6f18>
    72c4:	ldp	x0, x1, [x19]
    72c8:	stp	x0, x1, [sp, #168]
    72cc:	ldp	x0, x1, [x19, #16]
    72d0:	stp	x0, x1, [sp, #184]
    72d4:	ldr	x1, [sp, #120]
    72d8:	ldr	x0, [x19, #32]
    72dc:	str	x0, [sp, #200]
    72e0:	mov	x0, x27
    72e4:	bl	2f88 <grub_mod_fini+0x2c88>
    72e8:	mov	w1, w0
    72ec:	cbz	w0, 7274 <grub_mod_fini+0x6f74>
    72f0:	b	7290 <grub_mod_fini+0x6f90>
    72f4:	ldr	x0, [sp, #168]
    72f8:	add	x1, sp, #0xa8
    72fc:	ldr	x0, [x0, x24]
    7300:	str	x0, [sp, #144]
    7304:	mov	x0, x20
    7308:	bl	6b90 <grub_mod_fini+0x6890>
    730c:	mov	w1, w0
    7310:	cbnz	w0, 7290 <grub_mod_fini+0x6f90>
    7314:	ldr	x1, [x19, #8]
    7318:	cbnz	x1, 7370 <grub_mod_fini+0x7070>
    731c:	ldr	x0, [sp, #168]
    7320:	ldr	x1, [sp, #144]
    7324:	str	x1, [x0, x24]
    7328:	mov	w1, w28
    732c:	mov	x0, x27
    7330:	bl	1240 <grub_mod_fini+0xf40>
    7334:	sub	w1, w0, #0x1
    7338:	mov	x0, x27
    733c:	bl	24d0 <grub_mod_fini+0x21d0>
    7340:	ldr	x0, [sp, #104]
    7344:	ldr	x6, [x20, #160]
    7348:	add	x6, x6, x0
    734c:	ldr	x0, [sp, #104]
    7350:	add	w28, w28, #0x1
    7354:	add	x1, x6, #0x14
    7358:	add	x0, x0, #0x14
    735c:	str	x0, [sp, #104]
    7360:	ldrb	w0, [x6, #16]
    7364:	cbz	w0, 71b8 <grub_mod_fini+0x6eb8>
    7368:	mov	x6, x1
    736c:	b	71f0 <grub_mod_fini+0x6ef0>
    7370:	ldr	w3, [sp, #156]
    7374:	mov	x0, x26
    7378:	ldr	x2, [sp, #168]
    737c:	bl	4df8 <grub_mod_fini+0x4af8>
    7380:	mov	w1, w0
    7384:	cbz	w0, 731c <grub_mod_fini+0x701c>
    7388:	b	7290 <grub_mod_fini+0x6f90>
    738c:	mov	w1, w0
    7390:	b	6e94 <grub_mod_fini+0x6b94>
    7394:	sub	sp, sp, #0x280
    7398:	stp	x29, x30, [sp]
    739c:	mov	x29, sp
    73a0:	str	x0, [sp, #104]
    73a4:	ldr	w0, [sp, #640]
    73a8:	str	w0, [sp, #216]
    73ac:	ldr	x0, [sp, #104]
    73b0:	stp	x19, x20, [sp, #16]
    73b4:	mov	w20, w3
    73b8:	mov	w19, w5
    73bc:	stp	x21, x22, [sp, #32]
    73c0:	mov	w21, w4
    73c4:	mov	x22, x6
    73c8:	stp	x23, x24, [sp, #48]
    73cc:	stp	x25, x26, [sp, #64]
    73d0:	mov	x26, x7
    73d4:	stp	x27, x28, [sp, #80]
    73d8:	str	w2, [sp, #136]
    73dc:	mov	x2, #0xc0                  	// #192
    73e0:	str	x1, [sp, #176]
    73e4:	mov	w1, #0x0                   	// #0
    73e8:	ldr	x28, [x0]
    73ec:	add	x0, sp, #0x1c0
    73f0:	bl	0 <memset>
    73f4:	str	x28, [sp, #560]
    73f8:	ldr	x0, [sp, #104]
    73fc:	ldr	x0, [x0, #32]
    7400:	str	x0, [sp, #120]
    7404:	cbz	x0, 742c <grub_mod_fini+0x712c>
    7408:	ldr	x0, [sp, #104]
    740c:	ldrb	w0, [x0, #56]
    7410:	tbz	w0, #3, 7730 <grub_mod_fini+0x7430>
    7414:	cmp	w20, w21
    7418:	b.eq	7730 <grub_mod_fini+0x7430>  // b.none
    741c:	tst	x0, #0x1
    7420:	ldr	x0, [sp, #120]
    7424:	csel	x0, x0, xzr, eq  // eq = none
    7428:	str	x0, [sp, #120]
    742c:	ldr	x0, [sp, #104]
    7430:	ldr	x1, [x0, #48]
    7434:	sub	w0, w22, #0x1
    7438:	sub	w0, w0, w1
    743c:	cmp	x1, x22
    7440:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
    7444:	str	w0, [sp, #248]
    7448:	ldr	x0, [sp, #104]
    744c:	ldr	x0, [x0, #16]
    7450:	cbz	x0, 8f8c <grub_mod_fini+0x8c8c>
    7454:	ldr	x2, [x28, #72]
    7458:	cbz	x2, 8f8c <grub_mod_fini+0x8c8c>
    745c:	ldr	x1, [x28, #80]
    7460:	cbz	x1, 8f8c <grub_mod_fini+0x8c8c>
    7464:	ldr	x0, [x28, #88]
    7468:	cbz	x0, 8f8c <grub_mod_fini+0x8c8c>
    746c:	ldr	x3, [x28, #96]
    7470:	cbz	x3, 8f8c <grub_mod_fini+0x8c8c>
    7474:	ldr	w2, [x2, #12]
    7478:	cbnz	w2, 74ac <grub_mod_fini+0x71ac>
    747c:	ldr	w1, [x1, #12]
    7480:	cbnz	w1, 74ac <grub_mod_fini+0x71ac>
    7484:	ldr	w0, [x0, #12]
    7488:	cbz	w0, 7498 <grub_mod_fini+0x7198>
    748c:	ldr	x0, [sp, #104]
    7490:	ldrsb	w0, [x0, #56]
    7494:	tbnz	w0, #31, 74ac <grub_mod_fini+0x71ac>
    7498:	cmp	w20, #0x0
    749c:	ccmp	w21, #0x0, #0x4, ne  // ne = any
    74a0:	b.ne	8f8c <grub_mod_fini+0x8c8c>  // b.any
    74a4:	mov	w21, #0x0                   	// #0
    74a8:	mov	w20, #0x0                   	// #0
    74ac:	ldr	w0, [sp, #248]
    74b0:	subs	x0, x22, w0, sxtw
    74b4:	str	x0, [sp, #112]
    74b8:	b.ne	7738 <grub_mod_fini+0x7438>  // b.any
    74bc:	ldr	w0, [x28, #140]
    74c0:	cmp	w0, #0x0
    74c4:	cset	w0, ne  // ne = any
    74c8:	str	w0, [sp, #172]
    74cc:	ldr	x0, [sp, #104]
    74d0:	ldr	x1, [x28, #16]
    74d4:	ldr	x0, [x0, #40]
    74d8:	str	x0, [sp, #128]
    74dc:	ldr	w2, [x28, #164]
    74e0:	add	w1, w1, #0x1
    74e4:	ldr	x0, [sp, #104]
    74e8:	cmp	w1, w2
    74ec:	ldr	w3, [sp, #136]
    74f0:	csel	w1, w1, w2, ge  // ge = tcont
    74f4:	str	w2, [sp, #552]
    74f8:	add	w3, w3, #0x1
    74fc:	cmp	w1, w3
    7500:	ldr	x0, [x0, #24]
    7504:	csel	w1, w1, w3, le
    7508:	ldr	x3, [sp, #176]
    750c:	str	x3, [sp, #448]
    7510:	ldr	w3, [sp, #136]
    7514:	str	w3, [sp, #508]
    7518:	str	w3, [sp, #512]
    751c:	ldr	x3, [sp, #128]
    7520:	str	x3, [sp, #528]
    7524:	and	x3, x0, #0x400000
    7528:	ubfx	w0, w0, #22, #1
    752c:	strb	w0, [sp, #544]
    7530:	ldr	x0, [sp, #128]
    7534:	orr	x0, x0, x3
    7538:	cmp	x0, #0x0
    753c:	cset	w0, ne  // ne = any
    7540:	strb	w0, [sp, #547]
    7544:	ldrb	w0, [x28, #160]
    7548:	ubfx	x2, x0, #2, #1
    754c:	ubfx	x0, x0, #3, #1
    7550:	strb	w0, [sp, #546]
    7554:	ldr	w0, [sp, #136]
    7558:	str	w0, [sp, #516]
    755c:	str	w0, [sp, #520]
    7560:	add	x0, sp, #0x1c0
    7564:	strb	w2, [sp, #545]
    7568:	bl	19bc <grub_mod_fini+0x16bc>
    756c:	cbnz	w0, 77fc <grub_mod_fini+0x74fc>
    7570:	add	x0, x28, #0xa8
    7574:	str	x0, [sp, #536]
    7578:	ldrb	w0, [x28, #160]
    757c:	ldrb	w1, [sp, #547]
    7580:	ldr	x2, [sp, #176]
    7584:	ubfx	x0, x0, #4, #1
    7588:	strb	w0, [sp, #550]
    758c:	cmp	w1, #0x0
    7590:	ldr	x0, [sp, #456]
    7594:	csel	x0, x0, x2, ne  // ne = any
    7598:	str	x0, [sp, #456]
    759c:	cbnz	w1, 7740 <grub_mod_fini+0x7440>
    75a0:	ldr	w0, [x28, #164]
    75a4:	cmp	w0, #0x1
    75a8:	ldr	w0, [sp, #136]
    75ac:	csel	w0, w0, wzr, le
    75b0:	add	x2, sp, #0x1fc
    75b4:	ldr	w1, [sp, #216]
    75b8:	str	w1, [sp, #568]
    75bc:	mov	w1, #0xffffffff            	// #-1
    75c0:	str	w1, [sp, #572]
    75c4:	stp	w0, w0, [x2, #-16]
    75c8:	ldr	x0, [sp, #104]
    75cc:	stp	w19, w19, [x2, #8]
    75d0:	ldrb	w0, [x0, #56]
    75d4:	ubfx	x0, x0, #7, #1
    75d8:	strb	w0, [sp, #549]
    75dc:	ldr	w0, [x28, #140]
    75e0:	lsl	w19, w0, #1
    75e4:	cmp	wzr, w0, lsl #1
    75e8:	b.lt	7748 <grub_mod_fini+0x7448>  // b.tstop
    75ec:	mov	w0, #0x1                   	// #1
    75f0:	str	w0, [sp, #616]
    75f4:	ldr	x0, [sp, #112]
    75f8:	str	w19, [sp, #600]
    75fc:	str	w19, [sp, #624]
    7600:	cmp	x0, #0x1
    7604:	b.hi	7610 <grub_mod_fini+0x7310>  // b.pmore
    7608:	ldrb	w0, [x28, #160]
    760c:	tbz	w0, #1, 777c <grub_mod_fini+0x747c>
    7610:	ldr	w0, [sp, #500]
    7614:	mov	w1, #0x7ffffffe            	// #2147483646
    7618:	cmp	w0, w1
    761c:	b.hi	776c <grub_mod_fini+0x746c>  // b.pmore
    7620:	add	w0, w0, #0x1
    7624:	sbfiz	x0, x0, #3, #32
    7628:	bl	0 <grub_malloc>
    762c:	str	x0, [sp, #584]
    7630:	cbz	x0, 776c <grub_mod_fini+0x746c>
    7634:	ldr	x1, [sp, #216]
    7638:	mov	w0, #0x4                   	// #4
    763c:	str	w20, [sp, #336]
    7640:	tst	x1, #0x1
    7644:	mov	w1, #0x6                   	// #6
    7648:	csel	w1, w0, w1, ne  // ne = any
    764c:	cmp	w20, w21
    7650:	str	w1, [sp, #524]
    7654:	mov	w1, #0x1                   	// #1
    7658:	cneg	w1, w1, gt
    765c:	str	w1, [sp, #252]
    7660:	csel	w1, w20, w21, le
    7664:	str	w1, [sp, #240]
    7668:	csel	w1, w20, w21, ge  // ge = tcont
    766c:	str	w1, [sp, #152]
    7670:	ldr	w1, [x28, #164]
    7674:	str	w1, [sp, #244]
    7678:	ldr	x1, [sp, #120]
    767c:	cbz	x1, 778c <grub_mod_fini+0x748c>
    7680:	ldr	w1, [sp, #244]
    7684:	cmp	w1, #0x1
    7688:	b.eq	76a8 <grub_mod_fini+0x73a8>  // b.none
    768c:	ldr	x0, [sp, #104]
    7690:	ldr	x0, [x0, #24]
    7694:	tbnz	w0, #22, 7784 <grub_mod_fini+0x7484>
    7698:	ldr	x0, [sp, #128]
    769c:	cmp	x0, #0x0
    76a0:	cset	w0, eq  // eq = none
    76a4:	lsl	w0, w0, #2
    76a8:	ldr	x1, [sp, #128]
    76ac:	cmp	w20, w21
    76b0:	cset	w2, le
    76b4:	cmp	x1, #0x0
    76b8:	cset	w1, ne  // ne = any
    76bc:	orr	w0, w1, w0
    76c0:	orr	w0, w0, w2, lsl #1
    76c4:	cmp	w20, w21
    76c8:	str	w0, [sp, #264]
    76cc:	add	x0, sp, #0x150
    76d0:	csel	x0, x0, xzr, le
    76d4:	str	x0, [sp, #256]
    76d8:	cmp	x0, #0x0
    76dc:	cset	w0, ne  // ne = any
    76e0:	str	w0, [sp, #268]
    76e4:	ldr	w1, [sp, #240]
    76e8:	ldr	w0, [sp, #336]
    76ec:	ldr	w2, [sp, #152]
    76f0:	cmp	w0, w1
    76f4:	cset	w1, lt  // lt = tstop
    76f8:	cmp	w0, w2
    76fc:	cset	w2, gt
    7700:	orr	w1, w1, w2
    7704:	cbnz	w1, 77f8 <grub_mod_fini+0x74f8>
    7708:	ldr	w1, [sp, #264]
    770c:	sub	w1, w1, #0x4
    7710:	cmp	w1, #0x4
    7714:	b.hi	78dc <grub_mod_fini+0x75dc>  // b.pmore
    7718:	adrp	x2, 0 <grub_mod_init-0x260>
    771c:	ldr	x2, [x2]
    7720:	ldrh	w1, [x2, w1, uxtw #1]
    7724:	adr	x2, 7730 <grub_mod_fini+0x7430>
    7728:	add	x1, x2, w1, sxth #2
    772c:	br	x1
    7730:	str	xzr, [sp, #120]
    7734:	b	742c <grub_mod_fini+0x712c>
    7738:	mov	w0, #0x1                   	// #1
    773c:	b	74c8 <grub_mod_fini+0x71c8>
    7740:	mov	w0, #0x0                   	// #0
    7744:	b	75b0 <grub_mod_fini+0x72b0>
    7748:	mov	w0, #0x14                  	// #20
    774c:	smull	x0, w19, w0
    7750:	bl	0 <grub_malloc>
    7754:	str	x0, [sp, #608]
    7758:	sbfiz	x0, x19, #3, #32
    775c:	bl	0 <grub_malloc>
    7760:	ldr	x1, [sp, #608]
    7764:	str	x0, [sp, #632]
    7768:	cbnz	x1, 7774 <grub_mod_fini+0x7474>
    776c:	mov	w0, #0xc                   	// #12
    7770:	b	77fc <grub_mod_fini+0x74fc>
    7774:	cbnz	x0, 75ec <grub_mod_fini+0x72ec>
    7778:	b	776c <grub_mod_fini+0x746c>
    777c:	str	xzr, [sp, #584]
    7780:	b	7634 <grub_mod_fini+0x7334>
    7784:	mov	w0, #0x0                   	// #0
    7788:	b	76a8 <grub_mod_fini+0x73a8>
    778c:	mov	w0, #0x8                   	// #8
    7790:	b	76c4 <grub_mod_fini+0x73c4>
    7794:	sxtw	x0, w0
    7798:	mov	w1, #0x0                   	// #0
    779c:	ldr	w3, [sp, #152]
    77a0:	mov	w2, w0
    77a4:	cmp	w3, w0
    77a8:	b.gt	7868 <grub_mod_fini+0x7568>
    77ac:	cbz	w1, 77b4 <grub_mod_fini+0x74b4>
    77b0:	str	w0, [sp, #336]
    77b4:	ldr	w1, [sp, #152]
    77b8:	ldr	w0, [sp, #336]
    77bc:	cmp	w0, w1
    77c0:	b.ne	796c <grub_mod_fini+0x766c>  // b.any
    77c4:	mov	x0, x1
    77c8:	ldr	w1, [sp, #136]
    77cc:	cmp	w0, w1
    77d0:	b.ge	7894 <grub_mod_fini+0x7594>  // b.tcont
    77d4:	ldr	w1, [sp, #152]
    77d8:	ldr	x0, [sp, #176]
    77dc:	ldrb	w0, [x0, w1, sxtw]
    77e0:	ldr	x1, [sp, #128]
    77e4:	cbz	x1, 77ec <grub_mod_fini+0x74ec>
    77e8:	ldrb	w0, [x1, x0]
    77ec:	ldr	x1, [sp, #120]
    77f0:	ldrb	w0, [x1, x0]
    77f4:	cbnz	w0, 796c <grub_mod_fini+0x766c>
    77f8:	mov	w0, #0x1                   	// #1
    77fc:	str	w0, [sp, #168]
    7800:	b	8ed8 <grub_mod_fini+0x8bd8>
    7804:	sxtw	x0, w0
    7808:	mov	w1, #0x0                   	// #0
    780c:	ldr	w3, [sp, #152]
    7810:	mov	w2, w0
    7814:	cmp	w3, w0
    7818:	b.le	77ac <grub_mod_fini+0x74ac>
    781c:	ldr	x3, [sp, #176]
    7820:	ldr	x4, [sp, #120]
    7824:	ldrb	w3, [x3, x0]
    7828:	add	x0, x0, #0x1
    782c:	ldrb	w3, [x4, x3]
    7830:	cbnz	w3, 7888 <grub_mod_fini+0x7588>
    7834:	mov	w1, #0x1                   	// #1
    7838:	b	780c <grub_mod_fini+0x750c>
    783c:	sxtw	x0, w0
    7840:	mov	w2, #0x0                   	// #0
    7844:	ldr	w1, [sp, #240]
    7848:	mov	w3, w0
    784c:	cmp	w1, w0
    7850:	b.le	789c <grub_mod_fini+0x759c>
    7854:	cbz	w2, 77f8 <grub_mod_fini+0x74f8>
    7858:	str	w0, [sp, #336]
    785c:	b	77f8 <grub_mod_fini+0x74f8>
    7860:	mov	w1, #0x1                   	// #1
    7864:	b	779c <grub_mod_fini+0x749c>
    7868:	ldr	x3, [sp, #176]
    786c:	ldr	x4, [sp, #128]
    7870:	ldrb	w3, [x3, x0]
    7874:	add	x0, x0, #0x1
    7878:	ldrb	w3, [x4, x3]
    787c:	ldr	x4, [sp, #120]
    7880:	ldrb	w3, [x4, x3]
    7884:	cbz	w3, 7860 <grub_mod_fini+0x7560>
    7888:	cbz	w1, 77b4 <grub_mod_fini+0x74b4>
    788c:	str	w2, [sp, #336]
    7890:	b	77b4 <grub_mod_fini+0x74b4>
    7894:	mov	x0, #0x0                   	// #0
    7898:	b	77e0 <grub_mod_fini+0x74e0>
    789c:	ldr	w1, [sp, #136]
    78a0:	cmp	w1, w0
    78a4:	b.le	78d4 <grub_mod_fini+0x75d4>
    78a8:	ldr	x1, [sp, #176]
    78ac:	ldrb	w1, [x1, x0]
    78b0:	ldr	x4, [sp, #128]
    78b4:	cbz	x4, 78bc <grub_mod_fini+0x75bc>
    78b8:	ldrb	w1, [x4, x1]
    78bc:	ldr	x4, [sp, #120]
    78c0:	sub	x0, x0, #0x1
    78c4:	ldrb	w1, [x4, x1]
    78c8:	cbnz	w1, 7964 <grub_mod_fini+0x7664>
    78cc:	mov	w2, #0x1                   	// #1
    78d0:	b	7844 <grub_mod_fini+0x7544>
    78d4:	mov	x1, #0x0                   	// #0
    78d8:	b	78b0 <grub_mod_fini+0x75b0>
    78dc:	ldr	w19, [sp, #336]
    78e0:	ldr	w0, [sp, #488]
    78e4:	ldr	w1, [sp, #496]
    78e8:	sub	w0, w19, w0
    78ec:	cmp	w1, w0
    78f0:	b.hi	7918 <grub_mod_fini+0x7618>  // b.pmore
    78f4:	ldr	w2, [sp, #216]
    78f8:	mov	w1, w19
    78fc:	add	x0, sp, #0x1c0
    7900:	bl	54f0 <grub_mod_fini+0x51f0>
    7904:	str	w0, [sp, #168]
    7908:	mov	w0, w0
    790c:	cbnz	w0, 8ed8 <grub_mod_fini+0x8bd8>
    7910:	ldr	w0, [sp, #488]
    7914:	sub	w0, w19, w0
    7918:	ldr	w1, [sp, #136]
    791c:	cmp	w19, w1
    7920:	b.ge	795c <grub_mod_fini+0x765c>  // b.tcont
    7924:	ldr	x1, [sp, #456]
    7928:	ldrb	w0, [x1, w0, uxtw]
    792c:	ldr	x1, [sp, #120]
    7930:	ldrb	w0, [x1, w0, sxtw]
    7934:	cbnz	w0, 796c <grub_mod_fini+0x766c>
    7938:	ldr	w0, [sp, #252]
    793c:	add	w19, w19, w0
    7940:	ldr	w0, [sp, #240]
    7944:	str	w19, [sp, #336]
    7948:	cmp	w19, w0
    794c:	ldr	w0, [sp, #152]
    7950:	ccmp	w19, w0, #0x0, ge  // ge = tcont
    7954:	b.le	78dc <grub_mod_fini+0x75dc>
    7958:	b	77f8 <grub_mod_fini+0x74f8>
    795c:	mov	w0, #0x0                   	// #0
    7960:	b	792c <grub_mod_fini+0x762c>
    7964:	cbz	w2, 796c <grub_mod_fini+0x766c>
    7968:	str	w3, [sp, #336]
    796c:	ldr	w2, [sp, #216]
    7970:	add	x0, sp, #0x1c0
    7974:	ldr	w1, [sp, #336]
    7978:	bl	54f0 <grub_mod_fini+0x51f0>
    797c:	str	w0, [sp, #168]
    7980:	mov	w0, w0
    7984:	cbnz	w0, 8ed8 <grub_mod_fini+0x8bd8>
    7988:	ldr	w0, [sp, #244]
    798c:	cmp	w0, #0x1
    7990:	b.eq	79ac <grub_mod_fini+0x76ac>  // b.none
    7994:	ldr	w0, [sp, #492]
    7998:	cbz	w0, 79ac <grub_mod_fini+0x76ac>
    799c:	ldr	x0, [sp, #464]
    79a0:	ldr	w0, [x0]
    79a4:	cmn	w0, #0x1
    79a8:	b.eq	7b0c <grub_mod_fini+0x780c>  // b.none
    79ac:	ldr	x20, [sp, #560]
    79b0:	str	wzr, [sp, #340]
    79b4:	ldr	w0, [sp, #504]
    79b8:	str	w0, [sp, #144]
    79bc:	ldr	x19, [x20, #72]
    79c0:	str	xzr, [sp, #592]
    79c4:	str	wzr, [sp, #616]
    79c8:	ldrsb	w0, [x19, #80]
    79cc:	tbz	w0, #31, 7a54 <grub_mod_fini+0x7754>
    79d0:	ldr	w2, [sp, #568]
    79d4:	ldr	w0, [sp, #144]
    79d8:	sub	w1, w0, #0x1
    79dc:	add	x0, sp, #0x1c0
    79e0:	bl	4318 <grub_mod_fini+0x4018>
    79e4:	mov	w3, w0
    79e8:	tbz	w3, #0, 7a14 <grub_mod_fini+0x7714>
    79ec:	ldr	x19, [x20, #80]
    79f0:	cbnz	x19, 7a54 <grub_mod_fini+0x7754>
    79f4:	ldr	w0, [sp, #340]
    79f8:	mov	w1, #0x435                 	// #1077
    79fc:	cmp	w0, #0xc
    7a00:	cset	w2, eq  // eq = none
    7a04:	adrp	x0, 0 <grub_mod_init-0x260>
    7a08:	ldr	x0, [x0]
    7a0c:	bl	21d8 <grub_mod_fini+0x1ed8>
    7a10:	b	776c <grub_mod_fini+0x746c>
    7a14:	cbz	w0, 7a54 <grub_mod_fini+0x7754>
    7a18:	and	w0, w0, #0x6
    7a1c:	cmp	w0, #0x6
    7a20:	b.ne	7a2c <grub_mod_fini+0x772c>  // b.any
    7a24:	ldr	x19, [x20, #96]
    7a28:	b	79f0 <grub_mod_fini+0x76f0>
    7a2c:	tbz	w3, #1, 7a38 <grub_mod_fini+0x7738>
    7a30:	ldr	x19, [x20, #88]
    7a34:	b	79f0 <grub_mod_fini+0x76f0>
    7a38:	tbz	w3, #2, 7a54 <grub_mod_fini+0x7754>
    7a3c:	ldr	x2, [x19, #56]
    7a40:	mov	x1, x20
    7a44:	add	x0, sp, #0x154
    7a48:	bl	3178 <grub_mod_fini+0x2e78>
    7a4c:	mov	x19, x0
    7a50:	b	79f0 <grub_mod_fini+0x76f0>
    7a54:	ldr	x0, [sp, #584]
    7a58:	cbz	x0, 7b20 <grub_mod_fini+0x7820>
    7a5c:	ldr	w1, [sp, #144]
    7a60:	str	x19, [x0, w1, sxtw #3]
    7a64:	ldr	w0, [x20, #140]
    7a68:	ldr	w1, [sp, #268]
    7a6c:	str	w1, [sp, #196]
    7a70:	cbz	w0, 7aa0 <grub_mod_fini+0x77a0>
    7a74:	add	x20, x19, #0x8
    7a78:	add	x0, sp, #0x1c0
    7a7c:	mov	x1, x20
    7a80:	mov	w2, #0x0                   	// #0
    7a84:	bl	1b74 <grub_mod_fini+0x1874>
    7a88:	str	w0, [sp, #340]
    7a8c:	mov	w27, w0
    7a90:	cbnz	w0, 7afc <grub_mod_fini+0x77fc>
    7a94:	ldrb	w0, [x19, #80]
    7a98:	tbnz	w0, #6, 7ae4 <grub_mod_fini+0x77e4>
    7a9c:	str	wzr, [sp, #196]
    7aa0:	ldrb	w0, [x19, #80]
    7aa4:	tbz	w0, #4, 8640 <grub_mod_fini+0x8340>
    7aa8:	ldrsb	w0, [x19, #80]
    7aac:	tbz	w0, #31, 7acc <grub_mod_fini+0x77cc>
    7ab0:	ldr	w2, [sp, #144]
    7ab4:	mov	x1, x19
    7ab8:	add	x0, sp, #0x1c0
    7abc:	bl	4418 <grub_mod_fini+0x4118>
    7ac0:	str	w0, [sp, #192]
    7ac4:	mov	w0, w0
    7ac8:	cbz	w0, 8644 <grub_mod_fini+0x8344>
    7acc:	ldr	w0, [sp, #172]
    7ad0:	ldr	w27, [sp, #144]
    7ad4:	cbz	w0, 7afc <grub_mod_fini+0x77fc>
    7ad8:	ldr	w0, [sp, #172]
    7adc:	str	w0, [sp, #192]
    7ae0:	b	8648 <grub_mod_fini+0x8348>
    7ae4:	mov	x1, x20
    7ae8:	add	x0, sp, #0x1c0
    7aec:	bl	6498 <grub_mod_fini+0x6198>
    7af0:	str	w0, [sp, #340]
    7af4:	mov	w27, w0
    7af8:	cbz	w0, 7a9c <grub_mod_fini+0x779c>
    7afc:	cmn	w27, #0x1
    7b00:	b.ne	86c4 <grub_mod_fini+0x83c4>  // b.any
    7b04:	add	x0, sp, #0x1c0
    7b08:	bl	2130 <grub_mod_fini+0x1e30>
    7b0c:	ldr	w0, [sp, #336]
    7b10:	ldr	w1, [sp, #252]
    7b14:	add	w0, w0, w1
    7b18:	str	w0, [sp, #336]
    7b1c:	b	76e4 <grub_mod_fini+0x73e4>
    7b20:	ldr	w0, [sp, #268]
    7b24:	str	w0, [sp, #196]
    7b28:	b	7aa0 <grub_mod_fini+0x77a0>
    7b2c:	ldrb	w0, [x19, #80]
    7b30:	tbnz	w0, #5, 7bf8 <grub_mod_fini+0x78f8>
    7b34:	ldr	w0, [sp, #504]
    7b38:	add	w1, w0, #0x1
    7b3c:	str	w1, [sp, #504]
    7b40:	ldr	x1, [sp, #456]
    7b44:	ldrb	w0, [x1, w0, sxtw]
    7b48:	str	w0, [sp, #224]
    7b4c:	ldr	x0, [x19, #64]
    7b50:	cbz	x0, 7d58 <grub_mod_fini+0x7a58>
    7b54:	ldr	x1, [sp, #224]
    7b58:	ubfiz	x1, x1, #3, #8
    7b5c:	ldr	x21, [x0, x1]
    7b60:	ldr	x0, [sp, #584]
    7b64:	cbz	x0, 7b7c <grub_mod_fini+0x787c>
    7b68:	mov	x2, x21
    7b6c:	add	x1, sp, #0x1c0
    7b70:	add	x0, sp, #0x154
    7b74:	bl	6a58 <grub_mod_fini+0x6758>
    7b78:	mov	x21, x0
    7b7c:	cbnz	x21, 85d0 <grub_mod_fini+0x82d0>
    7b80:	ldr	w1, [sp, #340]
    7b84:	ldr	x0, [sp, #584]
    7b88:	cbnz	w1, 776c <grub_mod_fini+0x746c>
    7b8c:	cbz	x0, 7bd8 <grub_mod_fini+0x78d8>
    7b90:	ldr	w0, [sp, #172]
    7b94:	ldr	w1, [sp, #192]
    7b98:	eor	w0, w0, #0x1
    7b9c:	tst	w1, w0
    7ba0:	b.ne	7bd8 <grub_mod_fini+0x78d8>  // b.any
    7ba4:	ldr	w0, [sp, #504]
    7ba8:	mov	w2, #0x0                   	// #0
    7bac:	ldr	x1, [sp, #584]
    7bb0:	add	w0, w0, #0x1
    7bb4:	ldr	w5, [sp, #592]
    7bb8:	sxtw	x0, w0
    7bbc:	sub	x1, x1, #0x8
    7bc0:	sub	w4, w0, #0x1
    7bc4:	mov	w3, w0
    7bc8:	cmp	w5, w0
    7bcc:	b.ge	859c <grub_mod_fini+0x829c>  // b.tcont
    7bd0:	cbz	w2, 7bd8 <grub_mod_fini+0x78d8>
    7bd4:	str	w4, [sp, #504]
    7bd8:	ldr	x0, [sp, #208]
    7bdc:	cbz	x0, 7afc <grub_mod_fini+0x77fc>
    7be0:	ldr	w0, [x0]
    7be4:	ldr	w1, [sp, #144]
    7be8:	add	w0, w0, w1
    7bec:	ldr	x1, [sp, #208]
    7bf0:	str	w0, [x1]
    7bf4:	b	7afc <grub_mod_fini+0x77fc>
    7bf8:	ldr	x20, [sp, #560]
    7bfc:	mov	x21, #0x0                   	// #0
    7c00:	ldr	w0, [x19, #12]
    7c04:	cmp	w0, w21
    7c08:	b.gt	7c14 <grub_mod_fini+0x7914>
    7c0c:	mov	w0, #0x0                   	// #0
    7c10:	b	7d48 <grub_mod_fini+0x7a48>
    7c14:	ldr	x0, [x19, #16]
    7c18:	ldr	w22, [x0, x21, lsl #2]
    7c1c:	ldr	x0, [x20]
    7c20:	add	x0, x0, w22, sxtw #4
    7c24:	ldrb	w1, [x0, #10]
    7c28:	tbz	w1, #4, 7d2c <grub_mod_fini+0x7a2c>
    7c2c:	ldr	w4, [x0, #8]
    7c30:	ldr	w5, [sp, #504]
    7c34:	tst	w4, #0x3ff00
    7c38:	b.eq	7c70 <grub_mod_fini+0x7970>  // b.none
    7c3c:	ldr	w2, [sp, #568]
    7c40:	mov	w1, w5
    7c44:	add	x0, sp, #0x1c0
    7c48:	bl	4318 <grub_mod_fini+0x4018>
    7c4c:	ubfx	x2, x4, #8, #10
    7c50:	tbz	w4, #10, 7c58 <grub_mod_fini+0x7958>
    7c54:	tbz	w0, #0, 7d2c <grub_mod_fini+0x7a2c>
    7c58:	tbz	w2, #3, 7c60 <grub_mod_fini+0x7960>
    7c5c:	tbnz	w0, #0, 7d2c <grub_mod_fini+0x7a2c>
    7c60:	tbz	w2, #5, 7c68 <grub_mod_fini+0x7968>
    7c64:	tbz	w0, #1, 7d2c <grub_mod_fini+0x7a2c>
    7c68:	tbz	w2, #7, 7c70 <grub_mod_fini+0x7970>
    7c6c:	tbz	w0, #3, 7d2c <grub_mod_fini+0x7a2c>
    7c70:	mov	w3, w5
    7c74:	add	x2, sp, #0x1c0
    7c78:	mov	w1, w22
    7c7c:	mov	x0, x20
    7c80:	bl	5b34 <grub_mod_fini+0x5834>
    7c84:	cbz	w0, 7d2c <grub_mod_fini+0x7a2c>
    7c88:	ldr	w1, [sp, #616]
    7c8c:	ldr	w23, [sp, #504]
    7c90:	cmp	w1, w0
    7c94:	add	w23, w0, w23
    7c98:	csel	w0, w1, w0, ge  // ge = tcont
    7c9c:	mov	w1, w23
    7ca0:	str	w0, [sp, #616]
    7ca4:	add	x0, sp, #0x1c0
    7ca8:	bl	544c <grub_mod_fini+0x514c>
    7cac:	str	w0, [sp, #376]
    7cb0:	cbnz	w0, 7d48 <grub_mod_fini+0x7a48>
    7cb4:	ldr	x0, [x20, #24]
    7cb8:	ldrsw	x2, [x0, w22, sxtw #2]
    7cbc:	sbfiz	x22, x23, #3, #32
    7cc0:	ldr	x0, [x20, #48]
    7cc4:	add	x2, x0, x2, lsl #4
    7cc8:	ldr	x0, [sp, #584]
    7ccc:	ldr	x24, [x0, x22]
    7cd0:	cbnz	x24, 7d34 <grub_mod_fini+0x7a34>
    7cd4:	ldp	x0, x1, [x2]
    7cd8:	add	x2, sp, #0x200
    7cdc:	stp	x0, x1, [x2, #-104]
    7ce0:	ldr	w2, [sp, #568]
    7ce4:	sub	w1, w23, #0x1
    7ce8:	add	x0, sp, #0x1c0
    7cec:	bl	4318 <grub_mod_fini+0x4018>
    7cf0:	mov	w3, w0
    7cf4:	ldr	x23, [sp, #584]
    7cf8:	add	x2, sp, #0x198
    7cfc:	mov	x1, x20
    7d00:	add	x0, sp, #0x178
    7d04:	bl	3178 <grub_mod_fini+0x2e78>
    7d08:	str	x0, [x23, x22]
    7d0c:	cbz	x24, 7d18 <grub_mod_fini+0x7a18>
    7d10:	ldr	x0, [sp, #416]
    7d14:	bl	0 <grub_free>
    7d18:	ldr	x0, [sp, #584]
    7d1c:	ldr	x0, [x0, x22]
    7d20:	cbnz	x0, 7d2c <grub_mod_fini+0x7a2c>
    7d24:	ldr	w0, [sp, #376]
    7d28:	cbnz	w0, 7d48 <grub_mod_fini+0x7a48>
    7d2c:	add	x21, x21, #0x1
    7d30:	b	7c00 <grub_mod_fini+0x7900>
    7d34:	ldr	x1, [x24, #56]
    7d38:	add	x0, sp, #0x198
    7d3c:	bl	2ffc <grub_mod_fini+0x2cfc>
    7d40:	str	w0, [sp, #376]
    7d44:	cbz	w0, 7ce0 <grub_mod_fini+0x79e0>
    7d48:	str	w0, [sp, #340]
    7d4c:	cbz	w0, 7b34 <grub_mod_fini+0x7834>
    7d50:	mov	x21, #0x0                   	// #0
    7d54:	b	7b60 <grub_mod_fini+0x7860>
    7d58:	ldr	x21, [x19, #72]
    7d5c:	cbz	x21, 7d98 <grub_mod_fini+0x7a98>
    7d60:	ldr	w2, [sp, #568]
    7d64:	add	x0, sp, #0x1c0
    7d68:	ldr	w1, [sp, #504]
    7d6c:	sub	w1, w1, #0x1
    7d70:	bl	4318 <grub_mod_fini+0x4018>
    7d74:	ldrb	w1, [sp, #224]
    7d78:	tbz	w0, #0, 7d88 <grub_mod_fini+0x7a88>
    7d7c:	add	x1, x1, #0x100
    7d80:	ldr	x21, [x21, x1, lsl #3]
    7d84:	b	7b60 <grub_mod_fini+0x7860>
    7d88:	ldr	x0, [sp, #224]
    7d8c:	ubfiz	x0, x0, #3, #8
    7d90:	ldr	x21, [x21, x0]
    7d94:	b	7b60 <grub_mod_fini+0x7860>
    7d98:	mov	x0, #0x3000                	// #12288
    7d9c:	ldr	x22, [sp, #560]
    7da0:	bl	0 <grub_malloc>
    7da4:	mov	x23, x0
    7da8:	cbz	x0, 7e00 <grub_mod_fini+0x7b00>
    7dac:	stp	xzr, xzr, [x19, #64]
    7db0:	add	x0, x0, #0x1, lsl #12
    7db4:	add	x25, sp, #0x158
    7db8:	mov	w20, #0x0                   	// #0
    7dbc:	str	x0, [sp, #232]
    7dc0:	mov	x0, x25
    7dc4:	bl	1acc <grub_mod_fini+0x17cc>
    7dc8:	str	xzr, [sp, #184]
    7dcc:	ldr	w0, [x19, #12]
    7dd0:	ldr	w1, [sp, #184]
    7dd4:	cmp	w0, w1
    7dd8:	b.gt	7e0c <grub_mod_fini+0x7b0c>
    7ddc:	cmp	w20, #0x0
    7de0:	b.gt	8230 <grub_mod_fini+0x7f30>
    7de4:	mov	x0, x23
    7de8:	bl	0 <grub_free>
    7dec:	cbnz	w20, 7e00 <grub_mod_fini+0x7b00>
    7df0:	mov	x0, #0x800                 	// #2048
    7df4:	bl	0 <grub_zalloc>
    7df8:	str	x0, [x19, #64]
    7dfc:	cbnz	x0, 7b4c <grub_mod_fini+0x784c>
    7e00:	mov	w0, #0xc                   	// #12
    7e04:	str	w0, [sp, #340]
    7e08:	b	7b60 <grub_mod_fini+0x7860>
    7e0c:	ldr	x0, [sp, #184]
    7e10:	ldr	x1, [sp, #184]
    7e14:	lsl	x0, x0, #2
    7e18:	str	x0, [sp, #272]
    7e1c:	ldr	x0, [x19, #16]
    7e20:	ldrsw	x2, [x0, x1, lsl #2]
    7e24:	ldr	x0, [x22]
    7e28:	lsl	x1, x2, #4
    7e2c:	add	x2, x0, x2, lsl #4
    7e30:	str	x2, [sp, #200]
    7e34:	ldrb	w2, [x2, #8]
    7e38:	str	w2, [sp, #160]
    7e3c:	ldr	x2, [sp, #200]
    7e40:	ldr	w24, [x2, #8]
    7e44:	ldr	w2, [sp, #160]
    7e48:	ubfx	x24, x24, #8, #10
    7e4c:	cmp	w2, #0x1
    7e50:	b.ne	7ea0 <grub_mod_fini+0x7ba0>  // b.any
    7e54:	ldrb	w1, [x0, x1]
    7e58:	mov	x0, x25
    7e5c:	bl	10c8 <grub_mod_fini+0xdc8>
    7e60:	cbz	w24, 7f38 <grub_mod_fini+0x7c38>
    7e64:	tbz	w24, #5, 7e90 <grub_mod_fini+0x7b90>
    7e68:	ldr	x0, [sp, #344]
    7e6c:	ubfx	w1, w0, #10, #1
    7e70:	mov	x0, x25
    7e74:	str	w1, [sp, #284]
    7e78:	bl	1acc <grub_mod_fini+0x17cc>
    7e7c:	ldr	w1, [sp, #284]
    7e80:	cbz	w1, 7fa8 <grub_mod_fini+0x7ca8>
    7e84:	ldr	x0, [sp, #344]
    7e88:	orr	x0, x0, #0x400
    7e8c:	str	x0, [sp, #344]
    7e90:	tbz	w24, #7, 7f30 <grub_mod_fini+0x7c30>
    7e94:	mov	x0, x25
    7e98:	bl	1acc <grub_mod_fini+0x17cc>
    7e9c:	b	7fa8 <grub_mod_fini+0x7ca8>
    7ea0:	ldr	w2, [sp, #160]
    7ea4:	cmp	w2, #0x3
    7ea8:	b.ne	7ebc <grub_mod_fini+0x7bbc>  // b.any
    7eac:	ldr	x1, [x0, x1]
    7eb0:	mov	x0, x25
    7eb4:	bl	1108 <grub_mod_fini+0xe08>
    7eb8:	b	7e60 <grub_mod_fini+0x7b60>
    7ebc:	ldr	w0, [sp, #160]
    7ec0:	cmp	w0, #0x5
    7ec4:	b.ne	7f1c <grub_mod_fini+0x7c1c>  // b.any
    7ec8:	ldr	w0, [x22, #164]
    7ecc:	cmp	w0, #0x1
    7ed0:	b.le	7f08 <grub_mod_fini+0x7c08>
    7ed4:	ldr	x1, [x22, #120]
    7ed8:	mov	x0, x25
    7edc:	bl	1108 <grub_mod_fini+0xe08>
    7ee0:	ldr	x1, [x22, #200]
    7ee4:	tbnz	w1, #6, 7ef4 <grub_mod_fini+0x7bf4>
    7ee8:	ldr	x0, [sp, #344]
    7eec:	and	x0, x0, #0xfffffffffffffbff
    7ef0:	str	x0, [sp, #344]
    7ef4:	tbz	w1, #7, 7e60 <grub_mod_fini+0x7b60>
    7ef8:	ldr	x0, [sp, #344]
    7efc:	and	x0, x0, #0xfffffffffffffffe
    7f00:	str	x0, [sp, #344]
    7f04:	b	7e60 <grub_mod_fini+0x7b60>
    7f08:	mov	x2, #0x20                  	// #32
    7f0c:	mov	x0, x25
    7f10:	mov	w1, #0xffffffff            	// #-1
    7f14:	bl	0 <grub_memset>
    7f18:	b	7ee0 <grub_mod_fini+0x7be0>
    7f1c:	ldr	w0, [sp, #160]
    7f20:	cmp	w0, #0x7
    7f24:	b.ne	7fa8 <grub_mod_fini+0x7ca8>  // b.any
    7f28:	mov	x2, #0x10                  	// #16
    7f2c:	b	7f0c <grub_mod_fini+0x7c0c>
    7f30:	tbnz	w24, #2, 7f48 <grub_mod_fini+0x7c48>
    7f34:	tbnz	w24, #3, 7fe8 <grub_mod_fini+0x7ce8>
    7f38:	add	x0, x23, #0x1, lsl #12
    7f3c:	mov	x24, #0x0                   	// #0
    7f40:	str	x0, [sp, #288]
    7f44:	b	81b4 <grub_mod_fini+0x7eb4>
    7f48:	ldr	w0, [sp, #160]
    7f4c:	cmp	w0, #0x1
    7f50:	b.ne	7f60 <grub_mod_fini+0x7c60>  // b.any
    7f54:	ldr	x0, [sp, #200]
    7f58:	ldrb	w0, [x0, #10]
    7f5c:	tbz	w0, #6, 7e94 <grub_mod_fini+0x7b94>
    7f60:	ldr	w0, [x22, #164]
    7f64:	cmp	w0, #0x1
    7f68:	b.le	7fb8 <grub_mod_fini+0x7cb8>
    7f6c:	ldr	x6, [x22, #120]
    7f70:	add	x5, x22, #0xa8
    7f74:	mov	x0, #0x0                   	// #0
    7f78:	mov	x1, #0x0                   	// #0
    7f7c:	ldr	x4, [x5, x0]
    7f80:	ldr	x2, [x6, x0]
    7f84:	orn	x2, x4, x2
    7f88:	ldr	x4, [x0, x25]
    7f8c:	and	x2, x2, x4
    7f90:	str	x2, [x0, x25]
    7f94:	add	x0, x0, #0x8
    7f98:	orr	x1, x1, x2
    7f9c:	cmp	x0, #0x20
    7fa0:	b.ne	7f7c <grub_mod_fini+0x7c7c>  // b.any
    7fa4:	cbnz	x1, 7f34 <grub_mod_fini+0x7c34>
    7fa8:	ldr	x0, [sp, #184]
    7fac:	add	x0, x0, #0x1
    7fb0:	str	x0, [sp, #184]
    7fb4:	b	7dcc <grub_mod_fini+0x7acc>
    7fb8:	add	x5, x22, #0xa8
    7fbc:	mov	x0, #0x0                   	// #0
    7fc0:	mov	x1, #0x0                   	// #0
    7fc4:	ldr	x2, [x5, x0]
    7fc8:	ldr	x4, [x0, x25]
    7fcc:	and	x2, x2, x4
    7fd0:	str	x2, [x0, x25]
    7fd4:	add	x0, x0, #0x8
    7fd8:	orr	x1, x1, x2
    7fdc:	cmp	x0, #0x20
    7fe0:	b.ne	7fc4 <grub_mod_fini+0x7cc4>  // b.any
    7fe4:	b	7fa4 <grub_mod_fini+0x7ca4>
    7fe8:	ldr	w0, [sp, #160]
    7fec:	cmp	w0, #0x1
    7ff0:	b.ne	8000 <grub_mod_fini+0x7d00>  // b.any
    7ff4:	ldr	x0, [sp, #200]
    7ff8:	ldrb	w0, [x0, #10]
    7ffc:	tbnz	w0, #6, 7e94 <grub_mod_fini+0x7b94>
    8000:	ldr	w0, [x22, #164]
    8004:	cmp	w0, #0x1
    8008:	b.le	804c <grub_mod_fini+0x7d4c>
    800c:	ldr	x5, [x22, #120]
    8010:	add	x6, x22, #0xa8
    8014:	mov	x0, #0x0                   	// #0
    8018:	mov	x1, #0x0                   	// #0
    801c:	ldr	x4, [x5, x0]
    8020:	ldr	x2, [x6, x0]
    8024:	and	x2, x2, x4
    8028:	ldr	x4, [x0, x25]
    802c:	bic	x2, x4, x2
    8030:	str	x2, [x0, x25]
    8034:	add	x0, x0, #0x8
    8038:	orr	x1, x1, x2
    803c:	cmp	x0, #0x20
    8040:	b.ne	801c <grub_mod_fini+0x7d1c>  // b.any
    8044:	cbz	x1, 7fa8 <grub_mod_fini+0x7ca8>
    8048:	b	7f38 <grub_mod_fini+0x7c38>
    804c:	add	x5, x22, #0xa8
    8050:	mov	x0, #0x0                   	// #0
    8054:	mov	x1, #0x0                   	// #0
    8058:	ldr	x2, [x5, x0]
    805c:	ldr	x4, [x0, x25]
    8060:	bic	x2, x4, x2
    8064:	str	x2, [x0, x25]
    8068:	add	x0, x0, #0x8
    806c:	orr	x1, x1, x2
    8070:	cmp	x0, #0x20
    8074:	b.ne	8058 <grub_mod_fini+0x7d58>  // b.any
    8078:	b	8044 <grub_mod_fini+0x7d44>
    807c:	ldr	w0, [sp, #160]
    8080:	lsl	x5, x24, #5
    8084:	cmp	w0, #0x1
    8088:	b.ne	80ac <grub_mod_fini+0x7dac>  // b.any
    808c:	ldr	x0, [sp, #200]
    8090:	ldrb	w1, [x0]
    8094:	ldr	x0, [sp, #232]
    8098:	ubfx	x2, x1, #6, #2
    809c:	add	x0, x0, x5
    80a0:	ldr	x0, [x0, x2, lsl #3]
    80a4:	lsr	x0, x0, x1
    80a8:	tbz	w0, #0, 81b0 <grub_mod_fini+0x7eb0>
    80ac:	ldr	x0, [sp, #288]
    80b0:	mov	x2, #0x0                   	// #0
    80b4:	add	x5, x0, x5
    80b8:	mov	x0, #0x0                   	// #0
    80bc:	add	x3, sp, #0x178
    80c0:	ldr	x6, [x5, x0]
    80c4:	ldr	x1, [x0, x25]
    80c8:	and	x1, x1, x6
    80cc:	str	x1, [x3, x0]
    80d0:	add	x0, x0, #0x8
    80d4:	orr	x2, x2, x1
    80d8:	cmp	x0, #0x20
    80dc:	b.ne	80bc <grub_mod_fini+0x7dbc>  // b.any
    80e0:	cbz	x2, 81b0 <grub_mod_fini+0x7eb0>
    80e4:	mov	x2, #0x0                   	// #0
    80e8:	mov	x6, #0x0                   	// #0
    80ec:	mov	x1, #0x0                   	// #0
    80f0:	add	x3, sp, #0x198
    80f4:	ldr	x0, [x5, x2]
    80f8:	ldr	x7, [x2, x25]
    80fc:	bic	x8, x0, x7
    8100:	bic	x0, x7, x0
    8104:	str	x8, [x3, x2]
    8108:	orr	x1, x1, x8
    810c:	str	x0, [x2, x25]
    8110:	add	x2, x2, #0x8
    8114:	orr	x6, x6, x0
    8118:	cmp	x2, #0x20
    811c:	b.ne	80f0 <grub_mod_fini+0x7df0>  // b.any
    8120:	str	x5, [sp, #328]
    8124:	add	x8, x23, x24, lsl #4
    8128:	cbz	x1, 8188 <grub_mod_fini+0x7e88>
    812c:	mov	x1, x3
    8130:	sxtw	x7, w20
    8134:	ldr	x3, [sp, #232]
    8138:	sbfiz	x0, x20, #5, #32
    813c:	stp	x2, x7, [sp, #296]
    8140:	add	x0, x3, x0
    8144:	stp	x6, x8, [sp, #312]
    8148:	bl	1c70 <grub_mod_fini+0x1970>
    814c:	add	x1, sp, #0x178
    8150:	ldr	x2, [sp, #296]
    8154:	ldr	x5, [sp, #328]
    8158:	mov	x0, x5
    815c:	bl	1c70 <grub_mod_fini+0x1970>
    8160:	ldr	x7, [sp, #304]
    8164:	ldr	x8, [sp, #320]
    8168:	str	x8, [sp, #296]
    816c:	add	x0, x23, x7, lsl #4
    8170:	mov	x1, x8
    8174:	bl	2f88 <grub_mod_fini+0x2c88>
    8178:	cbnz	w0, 8208 <grub_mod_fini+0x7f08>
    817c:	ldr	x8, [sp, #296]
    8180:	add	w20, w20, #0x1
    8184:	ldr	x6, [sp, #312]
    8188:	str	x6, [sp, #296]
    818c:	ldr	x0, [x19, #16]
    8190:	ldr	x1, [sp, #272]
    8194:	ldr	w1, [x0, x1]
    8198:	mov	x0, x8
    819c:	bl	2928 <grub_mod_fini+0x2628>
    81a0:	tst	w0, #0xff
    81a4:	b.eq	8208 <grub_mod_fini+0x7f08>  // b.none
    81a8:	ldr	x6, [sp, #296]
    81ac:	cbz	x6, 81c0 <grub_mod_fini+0x7ec0>
    81b0:	add	x24, x24, #0x1
    81b4:	str	w24, [sp, #284]
    81b8:	cmp	w20, w24
    81bc:	b.gt	807c <grub_mod_fini+0x7d7c>
    81c0:	ldr	w0, [sp, #284]
    81c4:	cmp	w0, w20
    81c8:	b.ne	7fa8 <grub_mod_fini+0x7ca8>  // b.any
    81cc:	ldr	x3, [sp, #232]
    81d0:	sbfiz	x0, x20, #5, #32
    81d4:	mov	x1, x25
    81d8:	mov	x2, #0x20                  	// #32
    81dc:	add	x0, x3, x0
    81e0:	sxtw	x24, w20
    81e4:	bl	1c70 <grub_mod_fini+0x1970>
    81e8:	ldr	x0, [x19, #16]
    81ec:	ldr	x1, [sp, #272]
    81f0:	ldr	w1, [x0, x1]
    81f4:	add	x0, x23, x24, lsl #4
    81f8:	bl	1ad8 <grub_mod_fini+0x17d8>
    81fc:	cbnz	w0, 8208 <grub_mod_fini+0x7f08>
    8200:	add	w20, w20, #0x1
    8204:	b	7e94 <grub_mod_fini+0x7b94>
    8208:	mov	x22, x23
    820c:	add	x20, x23, w20, sxtw #4
    8210:	cmp	x20, x22
    8214:	b.ne	8220 <grub_mod_fini+0x7f20>  // b.any
    8218:	mov	w20, #0xffffffff            	// #-1
    821c:	b	7de4 <grub_mod_fini+0x7ae4>
    8220:	ldr	x0, [x22, #8]
    8224:	add	x22, x22, #0x10
    8228:	bl	0 <grub_free>
    822c:	b	8210 <grub_mod_fini+0x7f10>
    8230:	add	w1, w20, #0x1
    8234:	add	x0, sp, #0x178
    8238:	bl	1b24 <grub_mod_fini+0x1824>
    823c:	str	w0, [sp, #344]
    8240:	cbnz	w0, 8258 <grub_mod_fini+0x7f58>
    8244:	add	w0, w20, w20, lsl #1
    8248:	sbfiz	x0, x0, #3, #32
    824c:	bl	0 <grub_malloc>
    8250:	mov	x24, x0
    8254:	cbnz	x0, 828c <grub_mod_fini+0x7f8c>
    8258:	ldr	x0, [sp, #384]
    825c:	add	x24, x23, #0x8
    8260:	mov	x22, #0x0                   	// #0
    8264:	bl	0 <grub_free>
    8268:	lsl	x0, x22, #4
    826c:	add	x22, x22, #0x1
    8270:	ldr	x0, [x24, x0]
    8274:	bl	0 <grub_free>
    8278:	cmp	w20, w22
    827c:	b.gt	8268 <grub_mod_fini+0x7f68>
    8280:	mov	x0, x23
    8284:	bl	0 <grub_free>
    8288:	b	7e00 <grub_mod_fini+0x7b00>
    828c:	add	x0, x0, w20, sxtw #3
    8290:	str	x0, [sp, #184]
    8294:	add	x0, x0, w20, sxtw #3
    8298:	str	x0, [sp, #232]
    829c:	add	x0, sp, #0x198
    82a0:	bl	1acc <grub_mod_fini+0x17cc>
    82a4:	add	x0, x23, #0x4
    82a8:	mov	x25, #0x0                   	// #0
    82ac:	str	x0, [sp, #160]
    82b0:	str	wzr, [sp, #200]
    82b4:	mov	x2, #0x0                   	// #0
    82b8:	str	wzr, [sp, #380]
    82bc:	ldr	x0, [sp, #160]
    82c0:	ldr	w0, [x0]
    82c4:	cmp	w0, w2
    82c8:	b.gt	8448 <grub_mod_fini+0x8148>
    82cc:	add	x2, sp, #0x178
    82d0:	mov	x1, x22
    82d4:	add	x0, sp, #0x158
    82d8:	mov	w3, #0x0                   	// #0
    82dc:	bl	3178 <grub_mod_fini+0x2e78>
    82e0:	str	x0, [x24, x25, lsl #3]
    82e4:	cbnz	x0, 82f0 <grub_mod_fini+0x7ff0>
    82e8:	ldr	w1, [sp, #344]
    82ec:	cbnz	w1, 848c <grub_mod_fini+0x818c>
    82f0:	ldrsb	w1, [x0, #80]
    82f4:	tbz	w1, #31, 8498 <grub_mod_fini+0x8198>
    82f8:	mov	x1, x22
    82fc:	add	x2, sp, #0x178
    8300:	add	x0, sp, #0x158
    8304:	mov	w3, #0x1                   	// #1
    8308:	bl	3178 <grub_mod_fini+0x2e78>
    830c:	ldr	x1, [sp, #184]
    8310:	str	x0, [x1, x25, lsl #3]
    8314:	cbnz	x0, 8320 <grub_mod_fini+0x8020>
    8318:	ldr	w1, [sp, #344]
    831c:	cbnz	w1, 848c <grub_mod_fini+0x818c>
    8320:	ldr	x1, [x24, x25, lsl #3]
    8324:	cmp	x0, x1
    8328:	b.eq	8340 <grub_mod_fini+0x8040>  // b.none
    832c:	ldr	w0, [x22, #164]
    8330:	cmp	w0, #0x2
    8334:	ldr	w0, [sp, #200]
    8338:	csinc	w0, w0, wzr, lt  // lt = tstop
    833c:	str	w0, [sp, #200]
    8340:	mov	x1, x22
    8344:	add	x2, sp, #0x178
    8348:	add	x0, sp, #0x158
    834c:	mov	w3, #0x2                   	// #2
    8350:	bl	3178 <grub_mod_fini+0x2e78>
    8354:	ldr	x1, [sp, #232]
    8358:	str	x0, [x1, x25, lsl #3]
    835c:	cbnz	x0, 8368 <grub_mod_fini+0x8068>
    8360:	ldr	w0, [sp, #344]
    8364:	cbnz	w0, 848c <grub_mod_fini+0x818c>
    8368:	add	x1, x23, #0x1, lsl #12
    836c:	add	x0, sp, #0x198
    8370:	add	x1, x1, x25, lsl #5
    8374:	bl	1108 <grub_mod_fini+0xe08>
    8378:	ldr	x0, [sp, #160]
    837c:	add	x25, x25, #0x1
    8380:	cmp	w20, w25
    8384:	add	x0, x0, #0x10
    8388:	str	x0, [sp, #160]
    838c:	b.gt	82b4 <grub_mod_fini+0x7fb4>
    8390:	ldr	w0, [sp, #200]
    8394:	cbnz	w0, 8508 <grub_mod_fini+0x8208>
    8398:	mov	x0, #0x800                 	// #2048
    839c:	bl	0 <grub_zalloc>
    83a0:	str	x0, [x19, #64]
    83a4:	cbz	x0, 848c <grub_mod_fini+0x818c>
    83a8:	add	x22, x22, #0xa8
    83ac:	mov	x1, #0x0                   	// #0
    83b0:	add	x2, sp, #0x198
    83b4:	lsl	x3, x1, #3
    83b8:	mov	x4, #0x1                   	// #1
    83bc:	ldr	x2, [x2, x1]
    83c0:	cbnz	x2, 84b0 <grub_mod_fini+0x81b0>
    83c4:	add	x1, x1, #0x8
    83c8:	cmp	x1, #0x20
    83cc:	b.ne	83b0 <grub_mod_fini+0x80b0>  // b.any
    83d0:	ldr	x1, [sp, #408]
    83d4:	tst	w1, #0x400
    83d8:	b.eq	840c <grub_mod_fini+0x810c>  // b.none
    83dc:	add	x2, x23, #0x1, lsl #12
    83e0:	mov	x1, #0x0                   	// #0
    83e4:	lsl	x3, x1, #5
    83e8:	ldr	x3, [x2, x3]
    83ec:	tst	w3, #0x400
    83f0:	b.eq	858c <grub_mod_fini+0x828c>  // b.none
    83f4:	ldr	x2, [sp, #232]
    83f8:	ldr	x1, [x2, x1, lsl #3]
    83fc:	str	x1, [x0, #80]
    8400:	ldr	w2, [sp, #200]
    8404:	cbz	w2, 840c <grub_mod_fini+0x810c>
    8408:	str	x1, [x0, #2128]
    840c:	mov	x0, x24
    8410:	bl	0 <grub_free>
    8414:	ldr	x0, [sp, #384]
    8418:	add	x22, x23, #0x8
    841c:	mov	x21, #0x0                   	// #0
    8420:	bl	0 <grub_free>
    8424:	lsl	x0, x21, #4
    8428:	add	x21, x21, #0x1
    842c:	ldr	x0, [x22, x0]
    8430:	bl	0 <grub_free>
    8434:	cmp	w20, w21
    8438:	b.gt	8424 <grub_mod_fini+0x8124>
    843c:	mov	x0, x23
    8440:	bl	0 <grub_free>
    8444:	b	7b4c <grub_mod_fini+0x784c>
    8448:	ldr	x0, [sp, #160]
    844c:	ldur	x0, [x0, #4]
    8450:	ldrsw	x1, [x0, x2, lsl #2]
    8454:	ldr	x0, [x22, #24]
    8458:	ldr	w0, [x0, x1, lsl #2]
    845c:	cmn	w0, #0x1
    8460:	b.ne	846c <grub_mod_fini+0x816c>  // b.any
    8464:	add	x2, x2, #0x1
    8468:	b	82bc <grub_mod_fini+0x7fbc>
    846c:	ldr	x1, [x22, #48]
    8470:	str	x2, [sp, #272]
    8474:	add	x1, x1, w0, sxtw #4
    8478:	add	x0, sp, #0x178
    847c:	bl	2e18 <grub_mod_fini+0x2b18>
    8480:	str	w0, [sp, #344]
    8484:	ldr	x2, [sp, #272]
    8488:	cbz	w0, 8464 <grub_mod_fini+0x8164>
    848c:	mov	x0, x24
    8490:	bl	0 <grub_free>
    8494:	b	8258 <grub_mod_fini+0x7f58>
    8498:	ldr	x1, [sp, #184]
    849c:	str	x0, [x1, x25, lsl #3]
    84a0:	ldr	x1, [sp, #232]
    84a4:	ldr	x0, [x24, x25, lsl #3]
    84a8:	str	x0, [x1, x25, lsl #3]
    84ac:	b	8368 <grub_mod_fini+0x8068>
    84b0:	tbz	w2, #0, 84f0 <grub_mod_fini+0x81f0>
    84b4:	add	x6, x23, x1
    84b8:	mov	x7, #0x0                   	// #0
    84bc:	ldr	x8, [x6, #4096]
    84c0:	mov	x5, x7
    84c4:	add	x6, x6, #0x20
    84c8:	add	x7, x7, #0x1
    84cc:	tst	x4, x8
    84d0:	b.eq	84bc <grub_mod_fini+0x81bc>  // b.none
    84d4:	ldr	x6, [x22, x1]
    84d8:	lsl	x5, x5, #3
    84dc:	tst	x4, x6
    84e0:	b.eq	8500 <grub_mod_fini+0x8200>  // b.none
    84e4:	ldr	x6, [sp, #184]
    84e8:	ldr	x5, [x6, x5]
    84ec:	str	x5, [x0, x3, lsl #3]
    84f0:	lsl	x4, x4, #1
    84f4:	lsr	x2, x2, #1
    84f8:	add	x3, x3, #0x1
    84fc:	b	83c0 <grub_mod_fini+0x80c0>
    8500:	ldr	x5, [x24, x5]
    8504:	b	84ec <grub_mod_fini+0x81ec>
    8508:	mov	x0, #0x1000                	// #4096
    850c:	bl	0 <grub_zalloc>
    8510:	str	x0, [x19, #72]
    8514:	cbz	x0, 848c <grub_mod_fini+0x818c>
    8518:	mov	x1, #0x0                   	// #0
    851c:	add	x2, sp, #0x198
    8520:	add	x3, x0, x1, lsl #6
    8524:	mov	x5, #0x1                   	// #1
    8528:	ldr	x2, [x2, x1]
    852c:	cbnz	x2, 8540 <grub_mod_fini+0x8240>
    8530:	add	x1, x1, #0x8
    8534:	cmp	x1, #0x20
    8538:	b.ne	851c <grub_mod_fini+0x821c>  // b.any
    853c:	b	83d0 <grub_mod_fini+0x80d0>
    8540:	tbz	w2, #0, 857c <grub_mod_fini+0x827c>
    8544:	add	x6, x23, x1
    8548:	mov	x7, #0x0                   	// #0
    854c:	ldr	x8, [x6, #4096]
    8550:	mov	x4, x7
    8554:	add	x6, x6, #0x20
    8558:	add	x7, x7, #0x1
    855c:	tst	x5, x8
    8560:	b.eq	854c <grub_mod_fini+0x824c>  // b.none
    8564:	lsl	x4, x4, #3
    8568:	ldr	x6, [x24, x4]
    856c:	str	x6, [x3]
    8570:	ldr	x6, [sp, #184]
    8574:	ldr	x4, [x6, x4]
    8578:	str	x4, [x3, #2048]
    857c:	lsl	x5, x5, #1
    8580:	lsr	x2, x2, #1
    8584:	add	x3, x3, #0x8
    8588:	b	852c <grub_mod_fini+0x822c>
    858c:	add	x1, x1, #0x1
    8590:	cmp	w20, w1
    8594:	b.gt	83e4 <grub_mod_fini+0x80e4>
    8598:	b	840c <grub_mod_fini+0x810c>
    859c:	add	x0, x0, #0x1
    85a0:	mov	w2, #0x1                   	// #1
    85a4:	ldr	x4, [x1, x0, lsl #3]
    85a8:	cbz	x4, 7bc0 <grub_mod_fini+0x78c0>
    85ac:	add	x1, sp, #0x1c0
    85b0:	add	x0, sp, #0x154
    85b4:	mov	x2, #0x0                   	// #0
    85b8:	str	w3, [sp, #504]
    85bc:	bl	6a58 <grub_mod_fini+0x6758>
    85c0:	mov	x21, x0
    85c4:	ldr	w0, [sp, #340]
    85c8:	cbnz	w0, 8638 <grub_mod_fini+0x8338>
    85cc:	cbz	x21, 7ba4 <grub_mod_fini+0x78a4>
    85d0:	ldr	w0, [sp, #196]
    85d4:	cbz	w0, 85f4 <grub_mod_fini+0x82f4>
    85d8:	cmp	x19, x21
    85dc:	ldr	w1, [sp, #144]
    85e0:	csel	w0, w0, wzr, eq  // eq = none
    85e4:	str	w0, [sp, #196]
    85e8:	ldr	w0, [sp, #280]
    85ec:	csel	w0, w0, w1, eq  // eq = none
    85f0:	str	w0, [sp, #144]
    85f4:	ldrb	w0, [x21, #80]
    85f8:	tbz	w0, #4, 8630 <grub_mod_fini+0x8330>
    85fc:	ldr	w10, [sp, #504]
    8600:	tbz	w0, #7, 8618 <grub_mod_fini+0x8318>
    8604:	mov	w2, w10
    8608:	mov	x1, x21
    860c:	add	x0, sp, #0x1c0
    8610:	bl	4418 <grub_mod_fini+0x4118>
    8614:	cbz	w0, 8630 <grub_mod_fini+0x8330>
    8618:	ldr	w0, [sp, #172]
    861c:	mov	w27, w10
    8620:	cbz	w0, 7afc <grub_mod_fini+0x77fc>
    8624:	ldr	w0, [sp, #172]
    8628:	str	w0, [sp, #192]
    862c:	str	xzr, [sp, #208]
    8630:	mov	x19, x21
    8634:	b	8650 <grub_mod_fini+0x8350>
    8638:	cbnz	x21, 85d0 <grub_mod_fini+0x82d0>
    863c:	b	7bd8 <grub_mod_fini+0x78d8>
    8640:	str	wzr, [sp, #192]
    8644:	mov	w27, #0xffffffff            	// #-1
    8648:	ldr	x0, [sp, #256]
    864c:	str	x0, [sp, #208]
    8650:	ldr	w1, [sp, #504]
    8654:	ldr	w0, [sp, #520]
    8658:	cmp	w1, w0
    865c:	b.ge	7bd8 <grub_mod_fini+0x78d8>  // b.tcont
    8660:	add	w0, w1, #0x1
    8664:	str	w0, [sp, #280]
    8668:	ldr	w0, [sp, #500]
    866c:	add	w2, w1, #0x1
    8670:	cmp	w2, w0
    8674:	b.lt	8684 <grub_mod_fini+0x8384>  // b.tstop
    8678:	ldr	w2, [sp, #512]
    867c:	cmp	w0, w2
    8680:	b.lt	86a0 <grub_mod_fini+0x83a0>  // b.tstop
    8684:	ldr	w0, [sp, #492]
    8688:	add	w2, w1, #0x1
    868c:	cmp	w2, w0
    8690:	b.lt	7b2c <grub_mod_fini+0x782c>  // b.tstop
    8694:	ldr	w2, [sp, #512]
    8698:	cmp	w0, w2
    869c:	b.ge	7b2c <grub_mod_fini+0x782c>  // b.tcont
    86a0:	add	w1, w1, #0x2
    86a4:	add	x0, sp, #0x1c0
    86a8:	bl	5384 <grub_mod_fini+0x5084>
    86ac:	str	w0, [sp, #340]
    86b0:	cbz	w0, 7b2c <grub_mod_fini+0x782c>
    86b4:	cmp	w0, #0xc
    86b8:	mov	w1, #0x46c                 	// #1132
    86bc:	cset	w2, eq  // eq = none
    86c0:	b	7a04 <grub_mod_fini+0x7704>
    86c4:	cmn	w27, #0x2
    86c8:	b.eq	776c <grub_mod_fini+0x746c>  // b.none
    86cc:	ldr	x0, [sp, #104]
    86d0:	str	w27, [sp, #572]
    86d4:	ldrb	w0, [x0, #56]
    86d8:	and	w10, w0, #0x10
    86dc:	tbnz	w0, #4, 86ec <grub_mod_fini+0x83ec>
    86e0:	ldr	x0, [sp, #112]
    86e4:	cmp	x0, #0x1
    86e8:	b.hi	86f4 <grub_mod_fini+0x83f4>  // b.pmore
    86ec:	ldr	w0, [x28, #140]
    86f0:	cbz	w0, 8f98 <grub_mod_fini+0x8c98>
    86f4:	ldr	x0, [sp, #584]
    86f8:	mov	w2, w27
    86fc:	ldr	x1, [x0, w27, sxtw #3]
    8700:	add	x0, sp, #0x1c0
    8704:	bl	4418 <grub_mod_fini+0x4118>
    8708:	str	w0, [sp, #576]
    870c:	cbz	w10, 87c0 <grub_mod_fini+0x84c0>
    8710:	ldr	w0, [x28, #140]
    8714:	cbnz	w0, 87d4 <grub_mod_fini+0x84d4>
    8718:	ldr	x0, [sp, #112]
    871c:	cbz	x0, 8ed8 <grub_mod_fini+0x8bd8>
    8720:	add	x0, x26, #0x8
    8724:	str	x0, [sp, #128]
    8728:	ldr	x0, [sp, #112]
    872c:	mov	x20, x26
    8730:	lsl	x24, x0, #3
    8734:	add	x0, x26, x0, lsl #3
    8738:	str	x0, [sp, #136]
    873c:	add	x0, x26, #0x8
    8740:	str	x0, [sp, #120]
    8744:	mov	w0, #0xffffffff            	// #-1
    8748:	ldr	x2, [sp, #120]
    874c:	ldr	x1, [sp, #136]
    8750:	cmp	x1, x2
    8754:	b.ne	897c <grub_mod_fini+0x867c>  // b.any
    8758:	ldr	w0, [sp, #572]
    875c:	stp	wzr, w0, [x26]
    8760:	ldr	x0, [sp, #104]
    8764:	ldrb	w0, [x0, #56]
    8768:	tbnz	w0, #4, 8ab4 <grub_mod_fini+0x87b4>
    876c:	ldr	x0, [sp, #112]
    8770:	cmp	x0, #0x1
    8774:	b.eq	8ab4 <grub_mod_fini+0x87b4>  // b.none
    8778:	ldrb	w0, [x28, #160]
    877c:	tbz	w0, #0, 8990 <grub_mod_fini+0x8690>
    8780:	ldr	w0, [x28, #140]
    8784:	cmp	w0, #0x0
    8788:	cset	w0, gt
    878c:	ldr	x1, [sp, #104]
    8790:	str	xzr, [sp, #416]
    8794:	ldr	x1, [x1]
    8798:	str	x1, [sp, #104]
    879c:	mov	x1, #0x200000000           	// #8589934592
    87a0:	str	x1, [sp, #408]
    87a4:	cbz	w0, 8998 <grub_mod_fini+0x8698>
    87a8:	mov	x0, #0x40                  	// #64
    87ac:	bl	0 <grub_malloc>
    87b0:	str	x0, [sp, #416]
    87b4:	cbz	x0, 776c <grub_mod_fini+0x746c>
    87b8:	add	x19, sp, #0x198
    87bc:	b	899c <grub_mod_fini+0x869c>
    87c0:	ldr	x0, [sp, #112]
    87c4:	cmp	x0, #0x1
    87c8:	b.ls	8710 <grub_mod_fini+0x8410>  // b.plast
    87cc:	ldrb	w0, [x28, #160]
    87d0:	tbz	w0, #0, 8710 <grub_mod_fini+0x8410>
    87d4:	mov	w0, #0x7ffffffe            	// #2147483646
    87d8:	ldr	w20, [sp, #576]
    87dc:	cmp	w27, w0
    87e0:	ldr	x21, [sp, #560]
    87e4:	b.hi	776c <grub_mod_fini+0x746c>  // b.pmore
    87e8:	add	w22, w27, #0x1
    87ec:	sbfiz	x22, x22, #3, #32
    87f0:	mov	x0, x22
    87f4:	bl	0 <grub_malloc>
    87f8:	mov	x19, x0
    87fc:	cbz	x0, 8968 <grub_mod_fini+0x8668>
    8800:	ldr	w0, [x21, #140]
    8804:	cbz	w0, 88e4 <grub_mod_fini+0x85e4>
    8808:	mov	x0, x22
    880c:	bl	0 <grub_malloc>
    8810:	mov	x24, x0
    8814:	cbz	x0, 896c <grub_mod_fini+0x866c>
    8818:	add	x22, sp, #0x1b0
    881c:	add	w25, w27, #0x1
    8820:	mov	w1, #0x0                   	// #0
    8824:	mov	x0, x24
    8828:	sbfiz	x2, x25, #3, #32
    882c:	bl	0 <grub_memset>
    8830:	mov	x2, #0x10                  	// #16
    8834:	mov	w1, #0x0                   	// #0
    8838:	mov	x0, x22
    883c:	stp	x19, x24, [sp, #408]
    8840:	str	w20, [sp, #424]
    8844:	str	w27, [sp, #428]
    8848:	bl	0 <grub_memset>
    884c:	add	x1, sp, #0x198
    8850:	add	x0, sp, #0x1c0
    8854:	bl	6b90 <grub_mod_fini+0x6890>
    8858:	mov	w23, w0
    885c:	ldr	x0, [sp, #440]
    8860:	bl	0 <grub_free>
    8864:	cbnz	w23, 8944 <grub_mod_fini+0x8644>
    8868:	ldr	x0, [x19]
    886c:	cbnz	x0, 88b8 <grub_mod_fini+0x85b8>
    8870:	ldr	x0, [x24]
    8874:	cbnz	x0, 88b8 <grub_mod_fini+0x85b8>
    8878:	sub	w2, w27, #0x1
    887c:	ldr	x3, [sp, #584]
    8880:	sxtw	x2, w2
    8884:	mov	w27, w2
    8888:	cmn	w2, #0x1
    888c:	b.eq	8974 <grub_mod_fini+0x8674>  // b.none
    8890:	ldr	x1, [x3, x2, lsl #3]
    8894:	cbz	x1, 88b0 <grub_mod_fini+0x85b0>
    8898:	ldrb	w0, [x1, #80]
    889c:	tbz	w0, #4, 88b0 <grub_mod_fini+0x85b0>
    88a0:	add	x0, sp, #0x1c0
    88a4:	bl	4418 <grub_mod_fini+0x4118>
    88a8:	mov	w20, w0
    88ac:	b	881c <grub_mod_fini+0x851c>
    88b0:	sub	x2, x2, #0x1
    88b4:	b	8884 <grub_mod_fini+0x8584>
    88b8:	mov	w3, w25
    88bc:	mov	x2, x24
    88c0:	mov	x1, x19
    88c4:	mov	x0, x21
    88c8:	bl	4df8 <grub_mod_fini+0x4af8>
    88cc:	mov	w23, w0
    88d0:	mov	x0, x24
    88d4:	bl	0 <grub_free>
    88d8:	cbz	w23, 8924 <grub_mod_fini+0x8624>
    88dc:	mov	x24, #0x0                   	// #0
    88e0:	b	8944 <grub_mod_fini+0x8644>
    88e4:	mov	x2, #0x10                  	// #16
    88e8:	mov	w1, #0x0                   	// #0
    88ec:	add	x0, sp, #0x1b0
    88f0:	stp	x19, xzr, [sp, #408]
    88f4:	str	w20, [sp, #424]
    88f8:	str	w27, [sp, #428]
    88fc:	bl	0 <grub_memset>
    8900:	add	x1, sp, #0x198
    8904:	add	x0, sp, #0x1c0
    8908:	bl	6b90 <grub_mod_fini+0x6890>
    890c:	mov	w23, w0
    8910:	ldr	x0, [sp, #440]
    8914:	bl	0 <grub_free>
    8918:	cbnz	w23, 88dc <grub_mod_fini+0x85dc>
    891c:	ldr	x24, [x19]
    8920:	cbz	x24, 8974 <grub_mod_fini+0x8674>
    8924:	ldr	x0, [sp, #584]
    8928:	mov	w23, #0x0                   	// #0
    892c:	mov	x24, #0x0                   	// #0
    8930:	bl	0 <grub_free>
    8934:	str	w27, [sp, #572]
    8938:	str	w20, [sp, #576]
    893c:	str	x19, [sp, #584]
    8940:	mov	x19, #0x0                   	// #0
    8944:	mov	x0, x19
    8948:	bl	0 <grub_free>
    894c:	mov	x0, x24
    8950:	bl	0 <grub_free>
    8954:	cbz	w23, 8718 <grub_mod_fini+0x8418>
    8958:	cmp	w23, #0x1
    895c:	b.eq	7b04 <grub_mod_fini+0x7804>  // b.none
    8960:	str	w23, [sp, #168]
    8964:	b	8ed8 <grub_mod_fini+0x8bd8>
    8968:	mov	x24, #0x0                   	// #0
    896c:	mov	w23, #0xc                   	// #12
    8970:	b	8944 <grub_mod_fini+0x8644>
    8974:	mov	w23, #0x1                   	// #1
    8978:	b	8944 <grub_mod_fini+0x8644>
    897c:	ldr	x1, [sp, #120]
    8980:	str	w0, [x1, #4]
    8984:	str	w0, [x1], #8
    8988:	str	x1, [sp, #120]
    898c:	b	8748 <grub_mod_fini+0x8448>
    8990:	mov	w0, #0x0                   	// #0
    8994:	b	878c <grub_mod_fini+0x848c>
    8998:	mov	x19, #0x0                   	// #0
    899c:	ldr	x0, [sp, #104]
    89a0:	mov	x2, #0x10                  	// #16
    89a4:	mov	w1, #0x0                   	// #0
    89a8:	ldr	w23, [x0, #136]
    89ac:	add	x0, sp, #0x178
    89b0:	bl	0 <grub_memset>
    89b4:	mov	x0, x24
    89b8:	bl	0 <grub_malloc>
    89bc:	mov	x21, x0
    89c0:	cbnz	x0, 89d0 <grub_mod_fini+0x86d0>
    89c4:	mov	x0, x19
    89c8:	bl	391c <grub_mod_fini+0x361c>
    89cc:	b	776c <grub_mod_fini+0x746c>
    89d0:	mov	x2, x24
    89d4:	mov	x1, x26
    89d8:	bl	1c70 <grub_mod_fini+0x1970>
    89dc:	ldr	w25, [sp, #112]
    89e0:	ldr	w0, [x26]
    89e4:	str	w0, [sp, #344]
    89e8:	sbfiz	x0, x25, #3, #32
    89ec:	str	x0, [sp, #144]
    89f0:	ldr	w0, [x26, #4]
    89f4:	ldr	w1, [sp, #344]
    89f8:	cmp	w1, w0
    89fc:	b.gt	8b18 <grub_mod_fini+0x8818>
    8a00:	ldr	x0, [sp, #104]
    8a04:	sbfiz	x2, x23, #4, #32
    8a08:	ldr	x0, [x0]
    8a0c:	add	x3, x0, w23, sxtw #4
    8a10:	ldrb	w5, [x3, #8]
    8a14:	cmp	w5, #0x8
    8a18:	b.ne	8a44 <grub_mod_fini+0x8744>  // b.any
    8a1c:	ldr	w0, [x0, x2]
    8a20:	add	w0, w0, #0x1
    8a24:	cmp	w25, w0
    8a28:	b.le	8a84 <grub_mod_fini+0x8784>
    8a2c:	sbfiz	x2, x0, #3, #32
    8a30:	add	x0, x26, w0, sxtw #3
    8a34:	str	w1, [x26, x2]
    8a38:	mov	w1, #0xffffffff            	// #-1
    8a3c:	str	w1, [x0, #4]
    8a40:	b	8a84 <grub_mod_fini+0x8784>
    8a44:	cmp	w5, #0x9
    8a48:	b.ne	8a84 <grub_mod_fini+0x8784>  // b.any
    8a4c:	ldr	w0, [x0, x2]
    8a50:	add	w0, w0, #0x1
    8a54:	cmp	w25, w0
    8a58:	b.le	8a84 <grub_mod_fini+0x8784>
    8a5c:	sbfiz	x2, x0, #3, #32
    8a60:	add	x0, x26, w0, sxtw #3
    8a64:	ldr	w5, [x26, x2]
    8a68:	cmp	w1, w5
    8a6c:	b.le	8acc <grub_mod_fini+0x87cc>
    8a70:	ldr	x2, [sp, #144]
    8a74:	str	w1, [x0, #4]
    8a78:	mov	x1, x26
    8a7c:	mov	x0, x21
    8a80:	bl	1c70 <grub_mod_fini+0x1970>
    8a84:	ldr	w1, [x26, #4]
    8a88:	ldr	w0, [sp, #344]
    8a8c:	cmp	w1, w0
    8a90:	b.ne	8b60 <grub_mod_fini+0x8860>  // b.any
    8a94:	ldr	w0, [sp, #576]
    8a98:	cmp	w23, w0
    8a9c:	b.ne	8b60 <grub_mod_fini+0x8860>  // b.any
    8aa0:	cbnz	x19, 8b38 <grub_mod_fini+0x8838>
    8aa4:	ldr	x0, [sp, #384]
    8aa8:	bl	0 <grub_free>
    8aac:	mov	x0, x21
    8ab0:	bl	0 <grub_free>
    8ab4:	ldrb	w5, [sp, #548]
    8ab8:	ldr	w3, [sp, #336]
    8abc:	ldr	w1, [sp, #492]
    8ac0:	ldr	w4, [sp, #496]
    8ac4:	ldr	x2, [sp, #472]
    8ac8:	b	8e98 <grub_mod_fini+0x8b98>
    8acc:	ldrb	w3, [x3, #10]
    8ad0:	tbz	w3, #3, 8a3c <grub_mod_fini+0x873c>
    8ad4:	ldr	w2, [x21, x2]
    8ad8:	cmn	w2, #0x1
    8adc:	b.eq	8a3c <grub_mod_fini+0x873c>  // b.none
    8ae0:	mov	x1, x21
    8ae4:	mov	x0, x26
    8ae8:	ldr	x2, [sp, #144]
    8aec:	b	8a80 <grub_mod_fini+0x8780>
    8af0:	ldr	w2, [x0]
    8af4:	tbnz	w2, #31, 8b04 <grub_mod_fini+0x8804>
    8af8:	ldr	w2, [x0, #4]
    8afc:	cmn	w2, #0x1
    8b00:	b.eq	8b44 <grub_mod_fini+0x8844>  // b.none
    8b04:	add	x1, x1, #0x1
    8b08:	add	x0, x0, #0x8
    8b0c:	ldr	x2, [sp, #112]
    8b10:	cmp	x2, x1
    8b14:	b.ne	8af0 <grub_mod_fini+0x87f0>  // b.any
    8b18:	ldr	x0, [sp, #384]
    8b1c:	bl	0 <grub_free>
    8b20:	mov	x0, x21
    8b24:	bl	0 <grub_free>
    8b28:	mov	x0, x19
    8b2c:	bl	391c <grub_mod_fini+0x361c>
    8b30:	cbz	w0, 8ab4 <grub_mod_fini+0x87b4>
    8b34:	b	77fc <grub_mod_fini+0x74fc>
    8b38:	mov	x0, x26
    8b3c:	mov	x1, #0x0                   	// #0
    8b40:	b	8b0c <grub_mod_fini+0x880c>
    8b44:	add	x4, sp, #0x178
    8b48:	mov	x3, x26
    8b4c:	mov	w2, w25
    8b50:	add	x1, sp, #0x158
    8b54:	mov	x0, x19
    8b58:	bl	23d0 <grub_mod_fini+0x20d0>
    8b5c:	mov	w23, w0
    8b60:	ldr	x22, [sp, #560]
    8b64:	sxtw	x0, w23
    8b68:	str	x0, [sp, #152]
    8b6c:	sbfiz	x27, x23, #4, #32
    8b70:	ldr	x0, [x22]
    8b74:	add	x2, x0, w23, sxtw #4
    8b78:	ldrb	w1, [x2, #8]
    8b7c:	tbz	w1, #3, 8cc8 <grub_mod_fini+0x89c8>
    8b80:	ldrsw	x1, [sp, #344]
    8b84:	ldr	x0, [sp, #584]
    8b88:	ldr	x0, [x0, x1, lsl #3]
    8b8c:	mov	w1, w23
    8b90:	add	x0, x0, #0x8
    8b94:	str	x0, [sp, #152]
    8b98:	ldr	x0, [x22, #40]
    8b9c:	add	x27, x0, x27
    8ba0:	add	x0, sp, #0x178
    8ba4:	bl	2928 <grub_mod_fini+0x2628>
    8ba8:	tst	w0, #0xff
    8bac:	b.eq	8ca8 <grub_mod_fini+0x89a8>  // b.none
    8bb0:	ldr	w7, [x27, #4]
    8bb4:	mov	x6, #0x0                   	// #0
    8bb8:	mov	w23, #0xffffffff            	// #-1
    8bbc:	cmp	w7, w6
    8bc0:	b.gt	8bd4 <grub_mod_fini+0x88d4>
    8bc4:	tbz	w23, #31, 89f0 <grub_mod_fini+0x86f0>
    8bc8:	cmn	w23, #0x2
    8bcc:	b.ne	8d08 <grub_mod_fini+0x8a08>  // b.any
    8bd0:	b	8ca8 <grub_mod_fini+0x89a8>
    8bd4:	ldr	x0, [x27, #8]
    8bd8:	ldr	w22, [x0, x6, lsl #2]
    8bdc:	ldr	x0, [sp, #152]
    8be0:	mov	w1, w22
    8be4:	bl	1240 <grub_mod_fini+0xf40>
    8be8:	cbz	w0, 8cc0 <grub_mod_fini+0x89c0>
    8bec:	cmn	w23, #0x1
    8bf0:	b.eq	8cbc <grub_mod_fini+0x89bc>  // b.none
    8bf4:	mov	w1, w23
    8bf8:	add	x0, sp, #0x178
    8bfc:	bl	1240 <grub_mod_fini+0xf40>
    8c00:	cbnz	w0, 8e40 <grub_mod_fini+0x8b40>
    8c04:	cbz	x19, 8bc4 <grub_mod_fini+0x88c4>
    8c08:	ldp	w27, w0, [x19]
    8c0c:	ldr	w2, [sp, #344]
    8c10:	add	w1, w27, #0x1
    8c14:	str	w1, [x19]
    8c18:	cmp	w1, w0
    8c1c:	b.ne	8c4c <grub_mod_fini+0x894c>  // b.any
    8c20:	ldr	x0, [x19, #8]
    8c24:	lsl	w1, w1, #1
    8c28:	str	w2, [sp, #152]
    8c2c:	sbfiz	x1, x1, #5, #32
    8c30:	bl	0 <grub_realloc>
    8c34:	cbz	x0, 8ca8 <grub_mod_fini+0x89a8>
    8c38:	ldr	w1, [x19, #4]
    8c3c:	ldr	w2, [sp, #152]
    8c40:	str	x0, [x19, #8]
    8c44:	lsl	w1, w1, #1
    8c48:	str	w1, [x19, #4]
    8c4c:	ldr	x0, [x19, #8]
    8c50:	sbfiz	x27, x27, #5, #32
    8c54:	add	x1, x0, x27
    8c58:	str	x1, [sp, #152]
    8c5c:	str	w2, [x0, x27]
    8c60:	mov	x0, x24
    8c64:	str	w22, [x1, #4]
    8c68:	bl	0 <grub_malloc>
    8c6c:	ldr	x1, [sp, #152]
    8c70:	str	x0, [x1, #8]
    8c74:	ldr	x0, [x19, #8]
    8c78:	add	x0, x0, x27
    8c7c:	ldr	x0, [x0, #8]
    8c80:	cbz	x0, 8ca8 <grub_mod_fini+0x89a8>
    8c84:	mov	x1, x26
    8c88:	mov	x2, x24
    8c8c:	bl	1c70 <grub_mod_fini+0x1970>
    8c90:	ldr	x0, [x19, #8]
    8c94:	add	x1, sp, #0x178
    8c98:	add	x0, x0, x27
    8c9c:	add	x0, x0, #0x10
    8ca0:	bl	2f88 <grub_mod_fini+0x2c88>
    8ca4:	cbz	w0, 8bc4 <grub_mod_fini+0x88c4>
    8ca8:	ldr	x0, [sp, #384]
    8cac:	bl	0 <grub_free>
    8cb0:	mov	x0, x21
    8cb4:	bl	0 <grub_free>
    8cb8:	b	89c4 <grub_mod_fini+0x86c4>
    8cbc:	mov	w23, w22
    8cc0:	add	x6, x6, #0x1
    8cc4:	b	8bbc <grub_mod_fini+0x88bc>
    8cc8:	ldrb	w2, [x2, #10]
    8ccc:	tbz	w2, #4, 8d20 <grub_mod_fini+0x8a20>
    8cd0:	ldr	w3, [sp, #344]
    8cd4:	add	x2, sp, #0x1c0
    8cd8:	mov	w1, w23
    8cdc:	mov	x0, x22
    8ce0:	bl	5b34 <grub_mod_fini+0x5834>
    8ce4:	mov	w3, w0
    8ce8:	cbnz	w0, 8dec <grub_mod_fini+0x8aec>
    8cec:	ldr	w2, [sp, #344]
    8cf0:	add	x0, sp, #0x1c0
    8cf4:	ldr	x1, [x22]
    8cf8:	add	x1, x1, x27
    8cfc:	bl	45bc <grub_mod_fini+0x42bc>
    8d00:	tst	w0, #0xff
    8d04:	b.ne	8de8 <grub_mod_fini+0x8ae8>  // b.any
    8d08:	cbnz	x19, 8d80 <grub_mod_fini+0x8a80>
    8d0c:	ldr	x0, [sp, #384]
    8d10:	bl	0 <grub_free>
    8d14:	mov	x0, x21
    8d18:	bl	0 <grub_free>
    8d1c:	b	77f8 <grub_mod_fini+0x74f8>
    8d20:	cmp	w1, #0x4
    8d24:	b.ne	8cec <grub_mod_fini+0x89ec>  // b.any
    8d28:	ldr	w0, [x0, x27]
    8d2c:	add	w0, w0, #0x1
    8d30:	sbfiz	x2, x0, #3, #32
    8d34:	add	x0, x26, w0, sxtw #3
    8d38:	ldr	w1, [x0, #4]
    8d3c:	ldr	w0, [x26, x2]
    8d40:	sub	w3, w1, w0
    8d44:	cbz	x19, 8da0 <grub_mod_fini+0x8aa0>
    8d48:	cmn	w0, #0x1
    8d4c:	b.eq	8d80 <grub_mod_fini+0x8a80>  // b.none
    8d50:	cmn	w1, #0x1
    8d54:	b.eq	8d80 <grub_mod_fini+0x8a80>  // b.none
    8d58:	cbz	w3, 8da4 <grub_mod_fini+0x8aa4>
    8d5c:	ldr	x4, [sp, #456]
    8d60:	sxtw	x2, w3
    8d64:	ldrsw	x1, [sp, #344]
    8d68:	str	w3, [sp, #160]
    8d6c:	add	x1, x4, x1
    8d70:	add	x0, x4, w0, sxtw
    8d74:	bl	0 <grub_memcmp>
    8d78:	ldr	w3, [sp, #160]
    8d7c:	cbz	w0, 8dec <grub_mod_fini+0x8aec>
    8d80:	add	x4, sp, #0x178
    8d84:	mov	x3, x26
    8d88:	mov	w2, w25
    8d8c:	add	x1, sp, #0x158
    8d90:	mov	x0, x19
    8d94:	bl	23d0 <grub_mod_fini+0x20d0>
    8d98:	mov	w23, w0
    8d9c:	b	89f0 <grub_mod_fini+0x86f0>
    8da0:	cbnz	w3, 8dec <grub_mod_fini+0x8aec>
    8da4:	mov	w1, w23
    8da8:	add	x0, sp, #0x178
    8dac:	bl	2928 <grub_mod_fini+0x2628>
    8db0:	tst	w0, #0xff
    8db4:	b.eq	8ca8 <grub_mod_fini+0x89a8>  // b.none
    8db8:	ldr	x0, [x22, #40]
    8dbc:	ldrsw	x2, [sp, #344]
    8dc0:	add	x0, x0, x27
    8dc4:	ldr	x0, [x0, #8]
    8dc8:	ldr	w1, [x0]
    8dcc:	ldr	x0, [sp, #584]
    8dd0:	ldr	x0, [x0, x2, lsl #3]
    8dd4:	add	x0, x0, #0x8
    8dd8:	bl	1240 <grub_mod_fini+0xf40>
    8ddc:	cbz	w0, 8cec <grub_mod_fini+0x89ec>
    8de0:	mov	w23, w1
    8de4:	b	8bc4 <grub_mod_fini+0x88c4>
    8de8:	mov	w3, #0x0                   	// #0
    8dec:	ldr	x0, [x22, #24]
    8df0:	cmp	w3, #0x0
    8df4:	ldr	x1, [sp, #152]
    8df8:	ldr	w23, [x0, x1, lsl #2]
    8dfc:	ldr	w0, [sp, #344]
    8e00:	add	w1, w3, w0
    8e04:	csinc	w0, w1, w0, ne  // ne = any
    8e08:	str	w0, [sp, #344]
    8e0c:	cbz	x19, 8e38 <grub_mod_fini+0x8b38>
    8e10:	ldr	w1, [sp, #572]
    8e14:	cmp	w0, w1
    8e18:	b.gt	8d80 <grub_mod_fini+0x8a80>
    8e1c:	ldr	x1, [sp, #584]
    8e20:	ldr	x0, [x1, w0, sxtw #3]
    8e24:	cbz	x0, 8d80 <grub_mod_fini+0x8a80>
    8e28:	mov	w1, w23
    8e2c:	add	x0, x0, #0x8
    8e30:	bl	1240 <grub_mod_fini+0xf40>
    8e34:	cbz	w0, 8d80 <grub_mod_fini+0x8a80>
    8e38:	str	wzr, [sp, #380]
    8e3c:	b	8bc4 <grub_mod_fini+0x88c4>
    8e40:	mov	w23, w22
    8e44:	b	8bc4 <grub_mod_fini+0x88c4>
    8e48:	ldr	w0, [x20]
    8e4c:	cmn	w0, #0x1
    8e50:	b.eq	8e94 <grub_mod_fini+0x8b94>  // b.none
    8e54:	cbz	w5, 8e7c <grub_mod_fini+0x8b7c>
    8e58:	cmp	w0, w1
    8e5c:	b.eq	8f2c <grub_mod_fini+0x8c2c>  // b.none
    8e60:	ldr	w0, [x2, w0, sxtw #2]
    8e64:	str	w0, [x20]
    8e68:	ldr	w0, [x20, #4]
    8e6c:	cmp	w1, w0
    8e70:	b.eq	8f34 <grub_mod_fini+0x8c34>  // b.none
    8e74:	ldr	w0, [x2, w0, sxtw #2]
    8e78:	str	w0, [x20, #4]
    8e7c:	ldr	w0, [x20]
    8e80:	add	w0, w0, w3
    8e84:	str	w0, [x20]
    8e88:	ldr	w0, [x20, #4]
    8e8c:	add	w0, w0, w3
    8e90:	str	w0, [x20, #4]
    8e94:	add	x20, x20, #0x8
    8e98:	ldr	x0, [sp, #120]
    8e9c:	cmp	x0, x20
    8ea0:	b.ne	8e48 <grub_mod_fini+0x8b48>  // b.any
    8ea4:	ldr	x0, [sp, #136]
    8ea8:	mov	w1, #0x0                   	// #0
    8eac:	mov	w2, #0xffffffff            	// #-1
    8eb0:	ldr	w3, [sp, #248]
    8eb4:	cmp	w1, w3
    8eb8:	b.lt	8f3c <grub_mod_fini+0x8c3c>  // b.tstop
    8ebc:	ldr	x2, [x28, #208]
    8ec0:	cbz	x2, 8ed8 <grub_mod_fini+0x8bd8>
    8ec4:	ldr	x0, [sp, #112]
    8ec8:	sub	x6, x0, #0x1
    8ecc:	mov	x0, #0x0                   	// #0
    8ed0:	cmp	x6, x0
    8ed4:	b.ne	8f4c <grub_mod_fini+0x8c4c>  // b.any
    8ed8:	ldr	x0, [sp, #584]
    8edc:	bl	0 <grub_free>
    8ee0:	ldr	w0, [x28, #140]
    8ee4:	cbz	w0, 8f00 <grub_mod_fini+0x8c00>
    8ee8:	add	x0, sp, #0x1c0
    8eec:	bl	2130 <grub_mod_fini+0x1e30>
    8ef0:	ldr	x0, [sp, #632]
    8ef4:	bl	0 <grub_free>
    8ef8:	ldr	x0, [sp, #608]
    8efc:	bl	0 <grub_free>
    8f00:	add	x0, sp, #0x1c0
    8f04:	bl	1f94 <grub_mod_fini+0x1c94>
    8f08:	ldr	w0, [sp, #168]
    8f0c:	ldp	x29, x30, [sp]
    8f10:	ldp	x19, x20, [sp, #16]
    8f14:	ldp	x21, x22, [sp, #32]
    8f18:	ldp	x23, x24, [sp, #48]
    8f1c:	ldp	x25, x26, [sp, #64]
    8f20:	ldp	x27, x28, [sp, #80]
    8f24:	add	sp, sp, #0x280
    8f28:	ret
    8f2c:	mov	w0, w4
    8f30:	b	8e64 <grub_mod_fini+0x8b64>
    8f34:	mov	w0, w4
    8f38:	b	8e78 <grub_mod_fini+0x8b78>
    8f3c:	add	w1, w1, #0x1
    8f40:	stp	w2, w2, [x0]
    8f44:	add	x0, x0, #0x8
    8f48:	b	8eb0 <grub_mod_fini+0x8bb0>
    8f4c:	ldr	w1, [x2, x0, lsl #2]
    8f50:	cmp	w1, w0
    8f54:	b.eq	8f78 <grub_mod_fini+0x8c78>  // b.none
    8f58:	add	x1, x26, w1, sxtw #3
    8f5c:	ldr	x3, [sp, #128]
    8f60:	ldr	w1, [x1, #8]
    8f64:	str	w1, [x3]
    8f68:	ldrsw	x1, [x2, x0, lsl #2]
    8f6c:	add	x1, x26, x1, lsl #3
    8f70:	ldr	w1, [x1, #12]
    8f74:	str	w1, [x3, #4]
    8f78:	ldr	x1, [sp, #128]
    8f7c:	add	x0, x0, #0x1
    8f80:	add	x1, x1, #0x8
    8f84:	str	x1, [sp, #128]
    8f88:	b	8ed0 <grub_mod_fini+0x8bd0>
    8f8c:	mov	w0, #0x1                   	// #1
    8f90:	str	w0, [sp, #168]
    8f94:	b	8f08 <grub_mod_fini+0x8c08>
    8f98:	cbnz	w10, 8718 <grub_mod_fini+0x8418>
    8f9c:	ldr	x0, [sp, #112]
    8fa0:	cmp	x0, #0x1
    8fa4:	b.hi	87cc <grub_mod_fini+0x84cc>  // b.pmore
    8fa8:	b	8718 <grub_mod_fini+0x8418>
    8fac:	nop
	...
    8fc0:	stp	x29, x30, [sp, #-80]!
    8fc4:	mov	x29, sp
    8fc8:	stp	x19, x20, [sp, #16]
    8fcc:	mov	x19, x0
    8fd0:	mov	x20, x1
    8fd4:	stp	x21, x22, [sp, #32]
    8fd8:	mov	x22, x2
    8fdc:	mov	x21, x4
    8fe0:	stp	x23, x24, [sp, #48]
    8fe4:	mov	x24, x3
    8fe8:	str	x25, [sp, #64]
    8fec:	tbz	w5, #22, 900c <grub_mod_fini+0x8d0c>
    8ff0:	adrp	x0, 0 <grub_mod_init-0x260>
    8ff4:	ldr	x1, [x0]
    8ff8:	mov	x0, x4
    8ffc:	bl	0 <grub_strcmp>
    9000:	cbnz	w0, 90e8 <grub_mod_fini+0x8de8>
    9004:	adrp	x0, 0 <grub_mod_init-0x260>
    9008:	ldr	x21, [x0]
    900c:	ldr	w0, [x22, #52]
    9010:	ldr	w23, [x24]
    9014:	cmp	w23, w0
    9018:	b.ne	903c <grub_mod_fini+0x8d3c>  // b.any
    901c:	ldr	x0, [x22, #24]
    9020:	lsl	w23, w23, #1
    9024:	add	w23, w23, #0x1
    9028:	sbfiz	x1, x23, #2, #32
    902c:	bl	0 <grub_realloc>
    9030:	cbz	x0, 9620 <grub_mod_fini+0x9320>
    9034:	str	x0, [x22, #24]
    9038:	str	w23, [x24]
    903c:	ldr	w0, [x22, #52]
    9040:	ldr	x25, [x22, #24]
    9044:	add	w1, w0, #0x1
    9048:	sbfiz	x24, x0, #2, #32
    904c:	adrp	x0, 0 <grub_mod_init-0x260>
    9050:	str	w1, [x22, #52]
    9054:	mov	w22, #0x0                   	// #0
    9058:	ldr	x23, [x0]
    905c:	add	x23, x23, #0x20
    9060:	mov	x1, x21
    9064:	mov	x0, x23
    9068:	bl	0 <grub_strcmp>
    906c:	cbz	w0, 9084 <grub_mod_fini+0x8d84>
    9070:	add	w22, w22, #0x1
    9074:	add	x23, x23, #0xa
    9078:	cmp	w22, #0xd
    907c:	b.ne	9060 <grub_mod_fini+0x8d60>  // b.any
    9080:	mov	w22, #0x0                   	// #0
    9084:	adrp	x0, 0 <grub_mod_init-0x260>
    9088:	str	w22, [x25, x24]
    908c:	ldr	x1, [x0]
    9090:	mov	x0, x21
    9094:	bl	0 <grub_strcmp>
    9098:	mov	w4, w0
    909c:	cbnz	w0, 9128 <grub_mod_fini+0x8e28>
    90a0:	cbz	x19, 9100 <grub_mod_fini+0x8e00>
    90a4:	mov	x4, #0x0                   	// #0
    90a8:	mov	w0, w4
    90ac:	bl	3c28 <grub_mod_fini+0x3928>
    90b0:	cbz	w0, 90c0 <grub_mod_fini+0x8dc0>
    90b4:	ldrb	w1, [x19, x4]
    90b8:	mov	x0, x20
    90bc:	bl	10c8 <grub_mod_fini+0xdc8>
    90c0:	add	x4, x4, #0x1
    90c4:	cmp	x4, #0x100
    90c8:	b.ne	90a8 <grub_mod_fini+0x8da8>  // b.any
    90cc:	mov	w0, #0x0                   	// #0
    90d0:	ldp	x19, x20, [sp, #16]
    90d4:	ldp	x21, x22, [sp, #32]
    90d8:	ldp	x23, x24, [sp, #48]
    90dc:	ldr	x25, [sp, #64]
    90e0:	ldp	x29, x30, [sp], #80
    90e4:	ret
    90e8:	adrp	x0, 0 <grub_mod_init-0x260>
    90ec:	ldr	x1, [x0]
    90f0:	mov	x0, x21
    90f4:	bl	0 <grub_strcmp>
    90f8:	cbz	w0, 9004 <grub_mod_fini+0x8d04>
    90fc:	b	900c <grub_mod_fini+0x8d0c>
    9100:	mov	w0, w4
    9104:	bl	3c28 <grub_mod_fini+0x3928>
    9108:	cbz	w0, 9118 <grub_mod_fini+0x8e18>
    910c:	mov	w1, w4
    9110:	mov	x0, x20
    9114:	bl	10c8 <grub_mod_fini+0xdc8>
    9118:	add	w4, w4, #0x1
    911c:	cmp	w4, #0x100
    9120:	b.ne	9100 <grub_mod_fini+0x8e00>  // b.any
    9124:	b	90cc <grub_mod_fini+0x8dcc>
    9128:	adrp	x0, 0 <grub_mod_init-0x260>
    912c:	ldr	x1, [x0]
    9130:	mov	x0, x21
    9134:	bl	0 <grub_strcmp>
    9138:	mov	w4, w0
    913c:	cbnz	w0, 9198 <grub_mod_fini+0x8e98>
    9140:	cbz	x19, 9170 <grub_mod_fini+0x8e70>
    9144:	mov	x4, #0x0                   	// #0
    9148:	sub	w0, w4, #0x20
    914c:	cmp	w0, #0x5e
    9150:	b.ls	9160 <grub_mod_fini+0x8e60>  // b.plast
    9154:	ldrb	w1, [x19, x4]
    9158:	mov	x0, x20
    915c:	bl	10c8 <grub_mod_fini+0xdc8>
    9160:	add	x4, x4, #0x1
    9164:	cmp	x4, #0x100
    9168:	b.ne	9148 <grub_mod_fini+0x8e48>  // b.any
    916c:	b	90cc <grub_mod_fini+0x8dcc>
    9170:	sub	w0, w4, #0x20
    9174:	cmp	w0, #0x5e
    9178:	b.ls	9188 <grub_mod_fini+0x8e88>  // b.plast
    917c:	mov	w1, w4
    9180:	mov	x0, x20
    9184:	bl	10c8 <grub_mod_fini+0xdc8>
    9188:	add	w4, w4, #0x1
    918c:	cmp	w4, #0x100
    9190:	b.ne	9170 <grub_mod_fini+0x8e70>  // b.any
    9194:	b	90cc <grub_mod_fini+0x8dcc>
    9198:	adrp	x0, 0 <grub_mod_init-0x260>
    919c:	ldr	x1, [x0]
    91a0:	mov	x0, x21
    91a4:	bl	0 <grub_strcmp>
    91a8:	cbnz	w0, 9208 <grub_mod_fini+0x8f08>
    91ac:	cbz	x19, 91f8 <grub_mod_fini+0x8ef8>
    91b0:	mov	x4, #0x1                   	// #1
    91b4:	sub	w0, w4, #0x61
    91b8:	cmp	w0, #0x19
    91bc:	b.hi	91cc <grub_mod_fini+0x8ecc>  // b.pmore
    91c0:	ldrb	w1, [x19, x4]
    91c4:	mov	x0, x20
    91c8:	bl	10c8 <grub_mod_fini+0xdc8>
    91cc:	add	x4, x4, #0x1
    91d0:	cmp	x4, #0x100
    91d4:	b.ne	91b4 <grub_mod_fini+0x8eb4>  // b.any
    91d8:	b	90cc <grub_mod_fini+0x8dcc>
    91dc:	sub	w0, w0, #0x60
    91e0:	cmp	w0, #0x19
    91e4:	b.hi	91f4 <grub_mod_fini+0x8ef4>  // b.pmore
    91e8:	mov	w1, w4
    91ec:	mov	x0, x20
    91f0:	bl	10c8 <grub_mod_fini+0xdc8>
    91f4:	mov	w0, w4
    91f8:	add	w4, w0, #0x1
    91fc:	cmp	w0, #0xff
    9200:	b.ne	91dc <grub_mod_fini+0x8edc>  // b.any
    9204:	b	90cc <grub_mod_fini+0x8dcc>
    9208:	adrp	x0, 0 <grub_mod_init-0x260>
    920c:	ldr	x1, [x0]
    9210:	mov	x0, x21
    9214:	bl	0 <grub_strcmp>
    9218:	mov	w22, w0
    921c:	cbnz	w0, 9278 <grub_mod_fini+0x8f78>
    9220:	cbz	x19, 9250 <grub_mod_fini+0x8f50>
    9224:	mov	x21, #0x0                   	// #0
    9228:	mov	w0, w21
    922c:	bl	0 <grub_isspace>
    9230:	cbz	w0, 9240 <grub_mod_fini+0x8f40>
    9234:	ldrb	w1, [x19, x21]
    9238:	mov	x0, x20
    923c:	bl	10c8 <grub_mod_fini+0xdc8>
    9240:	add	x21, x21, #0x1
    9244:	cmp	x21, #0x100
    9248:	b.ne	9228 <grub_mod_fini+0x8f28>  // b.any
    924c:	b	90cc <grub_mod_fini+0x8dcc>
    9250:	mov	w0, w22
    9254:	bl	0 <grub_isspace>
    9258:	cbz	w0, 9268 <grub_mod_fini+0x8f68>
    925c:	mov	w1, w22
    9260:	mov	x0, x20
    9264:	bl	10c8 <grub_mod_fini+0xdc8>
    9268:	add	w22, w22, #0x1
    926c:	cmp	w22, #0x100
    9270:	b.ne	9250 <grub_mod_fini+0x8f50>  // b.any
    9274:	b	90cc <grub_mod_fini+0x8dcc>
    9278:	adrp	x0, 0 <grub_mod_init-0x260>
    927c:	ldr	x1, [x0]
    9280:	mov	x0, x21
    9284:	bl	0 <grub_strcmp>
    9288:	cbnz	w0, 92f4 <grub_mod_fini+0x8ff4>
    928c:	cbz	x19, 92e4 <grub_mod_fini+0x8fe4>
    9290:	add	x19, x19, #0x1
    9294:	mov	x4, #0x0                   	// #0
    9298:	and	w0, w4, #0xffffffdf
    929c:	sub	w0, w0, #0x40
    92a0:	cmp	w0, #0x19
    92a4:	b.hi	92b4 <grub_mod_fini+0x8fb4>  // b.pmore
    92a8:	ldrb	w1, [x19, x4]
    92ac:	mov	x0, x20
    92b0:	bl	10c8 <grub_mod_fini+0xdc8>
    92b4:	add	x4, x4, #0x1
    92b8:	cmp	x4, #0xff
    92bc:	b.ne	9298 <grub_mod_fini+0x8f98>  // b.any
    92c0:	b	90cc <grub_mod_fini+0x8dcc>
    92c4:	and	w0, w0, #0xffffffdf
    92c8:	sub	w0, w0, #0x40
    92cc:	cmp	w0, #0x19
    92d0:	b.hi	92e0 <grub_mod_fini+0x8fe0>  // b.pmore
    92d4:	mov	w1, w4
    92d8:	mov	x0, x20
    92dc:	bl	10c8 <grub_mod_fini+0xdc8>
    92e0:	mov	w0, w4
    92e4:	add	w4, w0, #0x1
    92e8:	cmp	w0, #0xff
    92ec:	b.ne	92c4 <grub_mod_fini+0x8fc4>  // b.any
    92f0:	b	90cc <grub_mod_fini+0x8dcc>
    92f4:	adrp	x0, 0 <grub_mod_init-0x260>
    92f8:	ldr	x1, [x0]
    92fc:	mov	x0, x21
    9300:	bl	0 <grub_strcmp>
    9304:	cbnz	w0, 9364 <grub_mod_fini+0x9064>
    9308:	cbz	x19, 9354 <grub_mod_fini+0x9054>
    930c:	mov	x4, #0x1                   	// #1
    9310:	sub	w0, w4, #0x30
    9314:	cmp	w0, #0x9
    9318:	b.hi	9328 <grub_mod_fini+0x9028>  // b.pmore
    931c:	ldrb	w1, [x19, x4]
    9320:	mov	x0, x20
    9324:	bl	10c8 <grub_mod_fini+0xdc8>
    9328:	add	x4, x4, #0x1
    932c:	cmp	x4, #0x100
    9330:	b.ne	9310 <grub_mod_fini+0x9010>  // b.any
    9334:	b	90cc <grub_mod_fini+0x8dcc>
    9338:	sub	w0, w0, #0x2f
    933c:	cmp	w0, #0x9
    9340:	b.hi	9350 <grub_mod_fini+0x9050>  // b.pmore
    9344:	mov	w1, w4
    9348:	mov	x0, x20
    934c:	bl	10c8 <grub_mod_fini+0xdc8>
    9350:	mov	w0, w4
    9354:	add	w4, w0, #0x1
    9358:	cmp	w0, #0xff
    935c:	b.ne	9338 <grub_mod_fini+0x9038>  // b.any
    9360:	b	90cc <grub_mod_fini+0x8dcc>
    9364:	adrp	x0, 0 <grub_mod_init-0x260>
    9368:	ldr	x1, [x0]
    936c:	mov	x0, x21
    9370:	bl	0 <grub_strcmp>
    9374:	cbnz	w0, 93d4 <grub_mod_fini+0x90d4>
    9378:	cbz	x19, 93c4 <grub_mod_fini+0x90c4>
    937c:	mov	x4, #0x1                   	// #1
    9380:	sub	w0, w4, #0x20
    9384:	cmp	w0, #0x5e
    9388:	b.hi	9398 <grub_mod_fini+0x9098>  // b.pmore
    938c:	ldrb	w1, [x19, x4]
    9390:	mov	x0, x20
    9394:	bl	10c8 <grub_mod_fini+0xdc8>
    9398:	add	x4, x4, #0x1
    939c:	cmp	x4, #0x100
    93a0:	b.ne	9380 <grub_mod_fini+0x9080>  // b.any
    93a4:	b	90cc <grub_mod_fini+0x8dcc>
    93a8:	sub	w0, w0, #0x1f
    93ac:	cmp	w0, #0x5e
    93b0:	b.hi	93c0 <grub_mod_fini+0x90c0>  // b.pmore
    93b4:	mov	w1, w4
    93b8:	mov	x0, x20
    93bc:	bl	10c8 <grub_mod_fini+0xdc8>
    93c0:	mov	w0, w4
    93c4:	add	w4, w0, #0x1
    93c8:	cmp	w0, #0xff
    93cc:	b.ne	93a8 <grub_mod_fini+0x90a8>  // b.any
    93d0:	b	90cc <grub_mod_fini+0x8dcc>
    93d4:	adrp	x0, 0 <grub_mod_init-0x260>
    93d8:	ldr	x1, [x0]
    93dc:	mov	x0, x21
    93e0:	bl	0 <grub_strcmp>
    93e4:	cbnz	w0, 9444 <grub_mod_fini+0x9144>
    93e8:	cbz	x19, 9434 <grub_mod_fini+0x9134>
    93ec:	mov	x4, #0x1                   	// #1
    93f0:	sub	w0, w4, #0x41
    93f4:	cmp	w0, #0x19
    93f8:	b.hi	9408 <grub_mod_fini+0x9108>  // b.pmore
    93fc:	ldrb	w1, [x19, x4]
    9400:	mov	x0, x20
    9404:	bl	10c8 <grub_mod_fini+0xdc8>
    9408:	add	x4, x4, #0x1
    940c:	cmp	x4, #0x100
    9410:	b.ne	93f0 <grub_mod_fini+0x90f0>  // b.any
    9414:	b	90cc <grub_mod_fini+0x8dcc>
    9418:	sub	w0, w0, #0x40
    941c:	cmp	w0, #0x19
    9420:	b.hi	9430 <grub_mod_fini+0x9130>  // b.pmore
    9424:	mov	w1, w4
    9428:	mov	x0, x20
    942c:	bl	10c8 <grub_mod_fini+0xdc8>
    9430:	mov	w0, w4
    9434:	add	w4, w0, #0x1
    9438:	cmp	w0, #0xff
    943c:	b.ne	9418 <grub_mod_fini+0x9118>  // b.any
    9440:	b	90cc <grub_mod_fini+0x8dcc>
    9444:	adrp	x0, 0 <grub_mod_init-0x260>
    9448:	ldr	x1, [x0]
    944c:	mov	x0, x21
    9450:	bl	0 <grub_strcmp>
    9454:	mov	w4, w0
    9458:	cbnz	w0, 94b4 <grub_mod_fini+0x91b4>
    945c:	cbz	x19, 94a4 <grub_mod_fini+0x91a4>
    9460:	mov	x4, #0x1                   	// #1
    9464:	cmp	w4, #0x20
    9468:	ccmp	w4, #0x9, #0x4, ne  // ne = any
    946c:	b.ne	947c <grub_mod_fini+0x917c>  // b.any
    9470:	ldrb	w1, [x19, x4]
    9474:	mov	x0, x20
    9478:	bl	10c8 <grub_mod_fini+0xdc8>
    947c:	add	x4, x4, #0x1
    9480:	cmp	x4, #0x100
    9484:	b.ne	9464 <grub_mod_fini+0x9164>  // b.any
    9488:	b	90cc <grub_mod_fini+0x8dcc>
    948c:	cmp	w4, #0x20
    9490:	ccmp	w4, #0x9, #0x4, ne  // ne = any
    9494:	b.ne	94a4 <grub_mod_fini+0x91a4>  // b.any
    9498:	mov	w1, w4
    949c:	mov	x0, x20
    94a0:	bl	10c8 <grub_mod_fini+0xdc8>
    94a4:	add	w4, w4, #0x1
    94a8:	cmp	w4, #0x100
    94ac:	b.ne	948c <grub_mod_fini+0x918c>  // b.any
    94b0:	b	90cc <grub_mod_fini+0x8dcc>
    94b4:	adrp	x0, 0 <grub_mod_init-0x260>
    94b8:	ldr	x1, [x0]
    94bc:	mov	x0, x21
    94c0:	bl	0 <grub_strcmp>
    94c4:	cbnz	w0, 9540 <grub_mod_fini+0x9240>
    94c8:	cbz	x19, 9530 <grub_mod_fini+0x9230>
    94cc:	mov	x21, #0x1                   	// #1
    94d0:	b	94fc <grub_mod_fini+0x91fc>
    94d4:	sub	w0, w21, #0x20
    94d8:	cmp	w0, #0x5e
    94dc:	b.hi	94f8 <grub_mod_fini+0x91f8>  // b.pmore
    94e0:	mov	w0, w21
    94e4:	bl	0 <grub_isspace>
    94e8:	cbnz	w0, 94f8 <grub_mod_fini+0x91f8>
    94ec:	ldrb	w1, [x19, x21]
    94f0:	mov	x0, x20
    94f4:	bl	10c8 <grub_mod_fini+0xdc8>
    94f8:	add	x21, x21, #0x1
    94fc:	cmp	x21, #0x100
    9500:	b.ne	94d4 <grub_mod_fini+0x91d4>  // b.any
    9504:	b	90cc <grub_mod_fini+0x8dcc>
    9508:	sub	w0, w0, #0x1f
    950c:	cmp	w0, #0x5e
    9510:	b.hi	952c <grub_mod_fini+0x922c>  // b.pmore
    9514:	mov	w0, w19
    9518:	bl	0 <grub_isspace>
    951c:	cbnz	w0, 952c <grub_mod_fini+0x922c>
    9520:	mov	w1, w19
    9524:	mov	x0, x20
    9528:	bl	10c8 <grub_mod_fini+0xdc8>
    952c:	mov	w0, w19
    9530:	add	w19, w0, #0x1
    9534:	cmp	w0, #0xff
    9538:	b.ne	9508 <grub_mod_fini+0x9208>  // b.any
    953c:	b	90cc <grub_mod_fini+0x8dcc>
    9540:	adrp	x0, 0 <grub_mod_init-0x260>
    9544:	ldr	x1, [x0]
    9548:	mov	x0, x21
    954c:	bl	0 <grub_strcmp>
    9550:	mov	w22, w0
    9554:	cbnz	w0, 95b0 <grub_mod_fini+0x92b0>
    9558:	cbz	x19, 9588 <grub_mod_fini+0x9288>
    955c:	mov	x21, #0x0                   	// #0
    9560:	mov	w0, w21
    9564:	bl	42c8 <grub_mod_fini+0x3fc8>
    9568:	cbz	w0, 9578 <grub_mod_fini+0x9278>
    956c:	ldrb	w1, [x19, x21]
    9570:	mov	x0, x20
    9574:	bl	10c8 <grub_mod_fini+0xdc8>
    9578:	add	x21, x21, #0x1
    957c:	cmp	x21, #0x100
    9580:	b.ne	9560 <grub_mod_fini+0x9260>  // b.any
    9584:	b	90cc <grub_mod_fini+0x8dcc>
    9588:	mov	w0, w22
    958c:	bl	42c8 <grub_mod_fini+0x3fc8>
    9590:	cbz	w0, 95a0 <grub_mod_fini+0x92a0>
    9594:	mov	w1, w22
    9598:	mov	x0, x20
    959c:	bl	10c8 <grub_mod_fini+0xdc8>
    95a0:	add	w22, w22, #0x1
    95a4:	cmp	w22, #0x100
    95a8:	b.ne	9588 <grub_mod_fini+0x9288>  // b.any
    95ac:	b	90cc <grub_mod_fini+0x8dcc>
    95b0:	adrp	x0, 0 <grub_mod_init-0x260>
    95b4:	ldr	x1, [x0]
    95b8:	mov	x0, x21
    95bc:	bl	0 <grub_strcmp>
    95c0:	mov	w4, w0
    95c4:	cbnz	w0, 9628 <grub_mod_fini+0x9328>
    95c8:	cbz	x19, 95f8 <grub_mod_fini+0x92f8>
    95cc:	mov	x4, #0x0                   	// #0
    95d0:	mov	w0, w4
    95d4:	bl	f68 <grub_mod_fini+0xc68>
    95d8:	cbz	w0, 95e8 <grub_mod_fini+0x92e8>
    95dc:	ldrb	w1, [x19, x4]
    95e0:	mov	x0, x20
    95e4:	bl	10c8 <grub_mod_fini+0xdc8>
    95e8:	add	x4, x4, #0x1
    95ec:	cmp	x4, #0x100
    95f0:	b.ne	95d0 <grub_mod_fini+0x92d0>  // b.any
    95f4:	b	90cc <grub_mod_fini+0x8dcc>
    95f8:	mov	w0, w4
    95fc:	bl	f68 <grub_mod_fini+0xc68>
    9600:	cbz	w0, 9610 <grub_mod_fini+0x9310>
    9604:	mov	w1, w4
    9608:	mov	x0, x20
    960c:	bl	10c8 <grub_mod_fini+0xdc8>
    9610:	add	w4, w4, #0x1
    9614:	cmp	w4, #0x100
    9618:	b.ne	95f8 <grub_mod_fini+0x92f8>  // b.any
    961c:	b	90cc <grub_mod_fini+0x8dcc>
    9620:	mov	w0, #0xc                   	// #12
    9624:	b	90d0 <grub_mod_fini+0x8dd0>
    9628:	mov	w0, #0x4                   	// #4
    962c:	b	90d0 <grub_mod_fini+0x8dd0>
	...
    9698:	stp	x29, x30, [sp, #-112]!
    969c:	mov	x29, sp
    96a0:	stp	x19, x20, [sp, #16]
    96a4:	stp	x21, x22, [sp, #32]
    96a8:	mov	x21, x0
    96ac:	mov	x22, x5
    96b0:	mov	x0, #0x20                  	// #32
    96b4:	stp	x23, x24, [sp, #48]
    96b8:	mov	x24, x1
    96bc:	mov	x23, x3
    96c0:	stp	x25, x26, [sp, #64]
    96c4:	mov	x25, x2
    96c8:	and	w26, w4, #0xff
    96cc:	str	wzr, [sp, #92]
    96d0:	bl	0 <grub_zalloc>
    96d4:	mov	x19, x0
    96d8:	cbnz	x0, 9700 <grub_mod_fini+0x9400>
    96dc:	mov	w0, #0xc                   	// #12
    96e0:	str	w0, [x22]
    96e4:	mov	x0, x19
    96e8:	ldp	x19, x20, [sp, #16]
    96ec:	ldp	x21, x22, [sp, #32]
    96f0:	ldp	x23, x24, [sp, #48]
    96f4:	ldp	x25, x26, [sp, #64]
    96f8:	ldp	x29, x30, [sp], #112
    96fc:	ret
    9700:	mov	x0, #0x38                  	// #56
    9704:	bl	0 <grub_zalloc>
    9708:	mov	x20, x0
    970c:	cbnz	x0, 9724 <grub_mod_fini+0x9424>
    9710:	mov	x0, x19
    9714:	bl	0 <grub_free>
    9718:	mov	w0, #0xc                   	// #12
    971c:	str	w0, [x22]
    9720:	b	9768 <grub_mod_fini+0x9468>
    9724:	ldrb	w0, [x0, #32]
    9728:	mov	x4, x25
    972c:	add	x3, sp, #0x5c
    9730:	mov	x2, x20
    9734:	mov	x1, x19
    9738:	mov	x5, #0x0                   	// #0
    973c:	bfxil	w0, w26, #0, #1
    9740:	strb	w0, [x20, #32]
    9744:	mov	x0, x24
    9748:	bl	8fc0 <grub_mod_fini+0x8cc0>
    974c:	mov	w24, w0
    9750:	cbz	w0, 977c <grub_mod_fini+0x947c>
    9754:	mov	x0, x19
    9758:	bl	0 <grub_free>
    975c:	mov	x0, x20
    9760:	bl	1c74 <grub_mod_fini+0x1974>
    9764:	str	w24, [x22]
    9768:	mov	x19, #0x0                   	// #0
    976c:	b	96e4 <grub_mod_fini+0x93e4>
    9770:	add	x23, x23, #0x1
    9774:	mov	x0, x19
    9778:	bl	10c8 <grub_mod_fini+0xdc8>
    977c:	ldrb	w1, [x23]
    9780:	cbnz	w1, 9770 <grub_mod_fini+0x9470>
    9784:	cbz	w26, 9790 <grub_mod_fini+0x9490>
    9788:	mov	x0, x19
    978c:	bl	10e8 <grub_mod_fini+0xde8>
    9790:	ldr	w0, [x21, #164]
    9794:	cmp	w0, #0x1
    9798:	b.le	97a8 <grub_mod_fini+0x94a8>
    979c:	ldr	x1, [x21, #120]
    97a0:	mov	x0, x19
    97a4:	bl	112c <grub_mod_fini+0xe2c>
    97a8:	mov	w0, #0x3                   	// #3
    97ac:	add	x3, sp, #0x60
    97b0:	mov	x2, #0x0                   	// #0
    97b4:	mov	x1, #0x0                   	// #0
    97b8:	str	x19, [sp, #96]
    97bc:	strb	w0, [sp, #104]
    97c0:	mov	x0, x21
    97c4:	bl	2604 <grub_mod_fini+0x2304>
    97c8:	mov	x23, x0
    97cc:	cbz	x0, 9838 <grub_mod_fini+0x9538>
    97d0:	ldr	w0, [x21, #164]
    97d4:	cmp	w0, #0x1
    97d8:	b.le	9828 <grub_mod_fini+0x9528>
    97dc:	mov	w0, #0x6                   	// #6
    97e0:	strb	w0, [sp, #104]
    97e4:	ldrb	w0, [x21, #160]
    97e8:	mov	x2, #0x0                   	// #0
    97ec:	add	x3, sp, #0x60
    97f0:	mov	x1, #0x0                   	// #0
    97f4:	orr	w0, w0, #0x2
    97f8:	strb	w0, [x21, #160]
    97fc:	mov	x0, x21
    9800:	str	x20, [sp, #96]
    9804:	bl	2604 <grub_mod_fini+0x2304>
    9808:	mov	x2, x0
    980c:	cbz	x0, 9838 <grub_mod_fini+0x9538>
    9810:	mov	x1, x23
    9814:	mov	x0, x21
    9818:	mov	w3, #0xa                   	// #10
    981c:	bl	2764 <grub_mod_fini+0x2464>
    9820:	mov	x19, x0
    9824:	b	96e4 <grub_mod_fini+0x93e4>
    9828:	mov	x0, x20
    982c:	mov	x19, x23
    9830:	bl	1c74 <grub_mod_fini+0x1974>
    9834:	b	96e4 <grub_mod_fini+0x93e4>
    9838:	mov	x0, x19
    983c:	bl	0 <grub_free>
    9840:	mov	x0, x20
    9844:	bl	1c74 <grub_mod_fini+0x1974>
    9848:	b	9718 <grub_mod_fini+0x9418>
    984c:	stp	x29, x30, [sp, #-272]!
    9850:	mov	x10, x1
    9854:	mov	w11, w4
    9858:	mov	x29, sp
    985c:	and	x13, x3, #0x1000000
    9860:	and	x14, x3, #0x20
    9864:	and	x15, x3, #0x10
    9868:	stp	x19, x20, [sp, #16]
    986c:	mov	x19, x2
    9870:	stp	x21, x22, [sp, #32]
    9874:	mov	x21, x0
    9878:	mov	x22, x5
    987c:	stp	x23, x24, [sp, #48]
    9880:	mov	x23, x3
    9884:	adrp	x12, 0 <grub_mod_init-0x260>
    9888:	stp	x25, x26, [sp, #64]
    988c:	stp	x27, x28, [sp, #80]
    9890:	ldrb	w0, [x19, #8]
    9894:	ldr	x20, [x10]
    9898:	sub	w1, w0, #0x1
    989c:	cmp	w1, #0x23
    98a0:	b.hi	9abc <grub_mod_fini+0x97bc>  // b.pmore
    98a4:	ldr	x2, [x12]
    98a8:	ldrh	w1, [x2, w1, uxtw #1]
    98ac:	adr	x2, 98b8 <grub_mod_fini+0x95b8>
    98b0:	add	x1, x2, w1, sxth #2
    98b4:	br	x1
    98b8:	mov	x3, x19
    98bc:	mov	x0, x20
    98c0:	mov	x2, #0x0                   	// #0
    98c4:	mov	x1, #0x0                   	// #0
    98c8:	bl	2604 <grub_mod_fini+0x2304>
    98cc:	mov	x27, x0
    98d0:	cbnz	x0, 98e0 <grub_mod_fini+0x95e0>
    98d4:	mov	w0, #0xc                   	// #12
    98d8:	str	w0, [x22]
    98dc:	b	9abc <grub_mod_fini+0x97bc>
    98e0:	ldr	w0, [x20, #164]
    98e4:	cmp	w0, #0x1
    98e8:	b.gt	99bc <grub_mod_fini+0x96bc>
    98ec:	mov	x2, x23
    98f0:	mov	x1, x21
    98f4:	mov	x0, x19
    98f8:	bl	41f8 <grub_mod_fini+0x3ef8>
    98fc:	ldrb	w1, [x19, #8]
    9900:	cmp	w1, #0x12
    9904:	cset	w5, eq  // eq = none
    9908:	cmp	w5, #0x0
    990c:	ccmp	w1, #0xb, #0x4, eq  // eq = none
    9910:	b.eq	9920 <grub_mod_fini+0x9620>  // b.none
    9914:	and	w0, w1, #0xfffffffb
    9918:	cmp	w0, #0x13
    991c:	b.ne	a2a8 <grub_mod_fini+0x9fa8>  // b.any
    9920:	ldr	w18, [x21, #56]
    9924:	cmp	w1, #0x17
    9928:	ldp	x24, x25, [x19]
    992c:	b.ne	a4fc <grub_mod_fini+0xa1fc>  // b.any
    9930:	mov	x2, x23
    9934:	mov	x1, x19
    9938:	mov	x0, x21
    993c:	bl	421c <grub_mod_fini+0x3f1c>
    9940:	mov	w5, w0
    9944:	cmn	w0, #0x1
    9948:	b.ne	a3fc <grub_mod_fini+0xa0fc>  // b.any
    994c:	ldrb	w0, [x19, #8]
    9950:	cmp	w0, #0x1
    9954:	b.ne	9964 <grub_mod_fini+0x9664>  // b.any
    9958:	ldrb	w0, [x19]
    995c:	cmp	w0, #0x2c
    9960:	b.eq	a40c <grub_mod_fini+0xa10c>  // b.none
    9964:	mov	w0, #0xa                   	// #10
    9968:	str	w0, [x22]
    996c:	b	a540 <grub_mod_fini+0xa240>
    9970:	mov	x2, x23
    9974:	mov	x1, x21
    9978:	mov	x0, x19
    997c:	bl	41f8 <grub_mod_fini+0x3ef8>
    9980:	mov	x3, x19
    9984:	mov	x2, #0x0                   	// #0
    9988:	mov	x1, #0x0                   	// #0
    998c:	mov	x0, x20
    9990:	bl	2604 <grub_mod_fini+0x2304>
    9994:	mov	x24, x0
    9998:	mov	x2, x0
    999c:	mov	x1, x27
    99a0:	mov	x0, x20
    99a4:	mov	w3, #0x10                  	// #16
    99a8:	bl	2764 <grub_mod_fini+0x2464>
    99ac:	mov	x27, x0
    99b0:	cmp	x24, #0x0
    99b4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    99b8:	b.eq	98d4 <grub_mod_fini+0x95d4>  // b.none
    99bc:	ldr	w0, [x21, #56]
    99c0:	ldr	w1, [x21, #72]
    99c4:	cmp	w1, w0
    99c8:	b.le	98ec <grub_mod_fini+0x95ec>
    99cc:	ldr	w1, [x21, #44]
    99d0:	cmp	w0, w1
    99d4:	b.eq	98ec <grub_mod_fini+0x95ec>  // b.none
    99d8:	ldr	x1, [x21, #16]
    99dc:	ldr	w0, [x1, w0, sxtw #2]
    99e0:	cmn	w0, #0x1
    99e4:	b.eq	9970 <grub_mod_fini+0x9670>  // b.none
    99e8:	b	98ec <grub_mod_fini+0x95ec>
    99ec:	ldr	x24, [x10, #48]
    99f0:	orr	x2, x23, #0x800000
    99f4:	mov	x1, x21
    99f8:	add	x0, x24, #0x1
    99fc:	str	x0, [x10, #48]
    9a00:	mov	x0, x19
    9a04:	bl	41f8 <grub_mod_fini+0x3ef8>
    9a08:	ldrb	w0, [x19, #8]
    9a0c:	cmp	w0, #0x9
    9a10:	b.eq	9a6c <grub_mod_fini+0x976c>  // b.none
    9a14:	mov	x2, x19
    9a18:	mov	x1, x10
    9a1c:	mov	x5, x22
    9a20:	add	w4, w11, #0x1
    9a24:	mov	x3, x23
    9a28:	mov	x0, x21
    9a2c:	bl	a8d0 <grub_mod_fini+0xa5d0>
    9a30:	mov	x1, x0
    9a34:	ldr	w2, [x22]
    9a38:	cbnz	w2, 9a64 <grub_mod_fini+0x9764>
    9a3c:	ldrb	w2, [x19, #8]
    9a40:	cmp	w2, #0x9
    9a44:	b.eq	9a70 <grub_mod_fini+0x9770>  // b.none
    9a48:	cbz	x0, 9a5c <grub_mod_fini+0x975c>
    9a4c:	adrp	x1, 0 <grub_mod_init-0x260>
    9a50:	mov	x2, #0x0                   	// #0
    9a54:	ldr	x1, [x1]
    9a58:	bl	18dc <grub_mod_fini+0x15dc>
    9a5c:	mov	w0, #0x8                   	// #8
    9a60:	str	w0, [x22]
    9a64:	mov	x27, #0x0                   	// #0
    9a68:	b	9ab0 <grub_mod_fini+0x97b0>
    9a6c:	mov	x1, #0x0                   	// #0
    9a70:	cmp	x24, #0x8
    9a74:	b.hi	9a90 <grub_mod_fini+0x9790>  // b.pmore
    9a78:	mov	w0, #0x1                   	// #1
    9a7c:	ldr	x2, [x20, #152]
    9a80:	lsl	w0, w0, w24
    9a84:	sxtw	x0, w0
    9a88:	orr	x0, x2, x0
    9a8c:	str	x0, [x20, #152]
    9a90:	mov	x0, x20
    9a94:	mov	w3, #0x11                  	// #17
    9a98:	mov	x2, #0x0                   	// #0
    9a9c:	bl	2764 <grub_mod_fini+0x2464>
    9aa0:	mov	x27, x0
    9aa4:	cbnz	x0, 9ac4 <grub_mod_fini+0x97c4>
    9aa8:	mov	w0, #0xc                   	// #12
    9aac:	str	w0, [x22]
    9ab0:	ldr	w0, [x22]
    9ab4:	cbz	w0, 98ec <grub_mod_fini+0x95ec>
    9ab8:	cbnz	x27, 98ec <grub_mod_fini+0x95ec>
    9abc:	mov	x27, #0x0                   	// #0
    9ac0:	b	a2a8 <grub_mod_fini+0x9fa8>
    9ac4:	str	w24, [x0, #40]
    9ac8:	b	9ab0 <grub_mod_fini+0x97b0>
    9acc:	mov	x0, #0x20                  	// #32
    9ad0:	str	wzr, [sp, #156]
    9ad4:	bl	0 <grub_zalloc>
    9ad8:	mov	x25, x0
    9adc:	mov	x0, #0x38                  	// #56
    9ae0:	bl	0 <grub_zalloc>
    9ae4:	cmp	x25, #0x0
    9ae8:	mov	x24, x0
    9aec:	cset	w0, eq  // eq = none
    9af0:	cmp	x24, #0x0
    9af4:	csinc	w0, w0, wzr, ne  // ne = any
    9af8:	cbz	w0, 9b14 <grub_mod_fini+0x9814>
    9afc:	mov	x0, x25
    9b00:	bl	0 <grub_free>
    9b04:	mov	x0, x24
    9b08:	bl	0 <grub_free>
    9b0c:	mov	w0, #0xc                   	// #12
    9b10:	b	9a60 <grub_mod_fini+0x9760>
    9b14:	mov	x2, x23
    9b18:	mov	x1, x21
    9b1c:	mov	x0, x19
    9b20:	bl	12a0 <grub_mod_fini+0xfa0>
    9b24:	mov	w26, w0
    9b28:	ldrb	w0, [x19, #8]
    9b2c:	cmp	w0, #0x2
    9b30:	b.ne	9b40 <grub_mod_fini+0x9840>  // b.any
    9b34:	mov	w0, #0x2                   	// #2
    9b38:	str	w0, [x22]
    9b3c:	b	9c8c <grub_mod_fini+0x998c>
    9b40:	cmp	w0, #0x19
    9b44:	b.ne	9c18 <grub_mod_fini+0x9918>  // b.any
    9b48:	ldrb	w0, [x24, #32]
    9b4c:	orr	w0, w0, #0x1
    9b50:	strb	w0, [x24, #32]
    9b54:	tbz	w23, #8, 9b64 <grub_mod_fini+0x9864>
    9b58:	mov	x0, x25
    9b5c:	mov	w1, #0xa                   	// #10
    9b60:	bl	10c8 <grub_mod_fini+0xdc8>
    9b64:	ldr	w0, [x21, #56]
    9b68:	mov	x2, x23
    9b6c:	mov	x1, x21
    9b70:	add	w0, w0, w26
    9b74:	str	w0, [x21, #56]
    9b78:	mov	x0, x19
    9b7c:	bl	12a0 <grub_mod_fini+0xfa0>
    9b80:	mov	w26, w0
    9b84:	ldrb	w0, [x19, #8]
    9b88:	cmp	w0, #0x2
    9b8c:	b.eq	9b34 <grub_mod_fini+0x9834>  // b.none
    9b90:	mov	w0, #0x1                   	// #1
    9b94:	str	w0, [sp, #128]
    9b98:	ldrb	w0, [x19, #8]
    9b9c:	cmp	w0, #0x15
    9ba0:	b.ne	9bac <grub_mod_fini+0x98ac>  // b.any
    9ba4:	mov	w0, #0x1                   	// #1
    9ba8:	strb	w0, [x19, #8]
    9bac:	mov	w5, #0x1                   	// #1
    9bb0:	stp	wzr, wzr, [sp, #104]
    9bb4:	mov	w14, #0x3                   	// #3
    9bb8:	add	x0, sp, #0xd0
    9bbc:	mov	x4, x23
    9bc0:	mov	w3, w26
    9bc4:	mov	x2, x19
    9bc8:	mov	x1, x21
    9bcc:	str	w14, [sp, #160]
    9bd0:	str	x0, [sp, #168]
    9bd4:	add	x0, sp, #0xa0
    9bd8:	bl	3990 <grub_mod_fini+0x3690>
    9bdc:	cbnz	w0, 9b38 <grub_mod_fini+0x9838>
    9be0:	mov	x2, x23
    9be4:	mov	x1, x21
    9be8:	mov	x0, x19
    9bec:	bl	12a0 <grub_mod_fini+0xfa0>
    9bf0:	mov	w26, w0
    9bf4:	ldr	w0, [sp, #160]
    9bf8:	cmp	w0, #0x4
    9bfc:	ccmp	w0, #0x2, #0x4, ne  // ne = any
    9c00:	b.eq	9cb4 <grub_mod_fini+0x99b4>  // b.none
    9c04:	ldrb	w0, [x19, #8]
    9c08:	cmp	w0, #0x2
    9c0c:	b.ne	9c20 <grub_mod_fini+0x9920>  // b.any
    9c10:	mov	w0, #0x7                   	// #7
    9c14:	b	9b38 <grub_mod_fini+0x9838>
    9c18:	str	wzr, [sp, #128]
    9c1c:	b	9b98 <grub_mod_fini+0x9898>
    9c20:	cmp	w0, #0x16
    9c24:	b.ne	9cb4 <grub_mod_fini+0x99b4>  // b.any
    9c28:	ldr	w0, [x21, #56]
    9c2c:	mov	x2, x23
    9c30:	mov	x1, x21
    9c34:	add	w0, w0, w26
    9c38:	str	w0, [x21, #56]
    9c3c:	add	x0, sp, #0xc0
    9c40:	bl	12a0 <grub_mod_fini+0xfa0>
    9c44:	mov	w3, w0
    9c48:	ldrb	w0, [sp, #200]
    9c4c:	cmp	w0, #0x2
    9c50:	b.eq	9c10 <grub_mod_fini+0x9910>  // b.none
    9c54:	cmp	w0, #0x15
    9c58:	b.eq	9ca0 <grub_mod_fini+0x99a0>  // b.none
    9c5c:	add	x0, sp, #0xf0
    9c60:	mov	x4, x23
    9c64:	add	x2, sp, #0xc0
    9c68:	mov	x1, x21
    9c6c:	mov	w5, #0x1                   	// #1
    9c70:	str	w14, [sp, #176]
    9c74:	str	x0, [sp, #184]
    9c78:	add	x0, sp, #0xb0
    9c7c:	bl	3990 <grub_mod_fini+0x3690>
    9c80:	mov	w28, w0
    9c84:	cbz	w0, 9cd8 <grub_mod_fini+0x99d8>
    9c88:	str	w0, [x22]
    9c8c:	mov	x0, x25
    9c90:	bl	0 <grub_free>
    9c94:	mov	x0, x24
    9c98:	bl	1c74 <grub_mod_fini+0x1974>
    9c9c:	b	9a64 <grub_mod_fini+0x9764>
    9ca0:	ldr	w0, [x21, #56]
    9ca4:	sub	w0, w0, w26
    9ca8:	str	w0, [x21, #56]
    9cac:	mov	w0, #0x1                   	// #1
    9cb0:	strb	w0, [x19, #8]
    9cb4:	ldr	w0, [sp, #160]
    9cb8:	cmp	w0, #0x4
    9cbc:	b.hi	9ff0 <grub_mod_fini+0x9cf0>  // b.pmore
    9cc0:	adrp	x1, 0 <grub_mod_init-0x260>
    9cc4:	ldr	x1, [x1]
    9cc8:	ldrh	w0, [x1, w0, uxtw #1]
    9ccc:	adr	x1, 9cd8 <grub_mod_fini+0x99d8>
    9cd0:	add	x0, x1, w0, sxth #2
    9cd4:	br	x0
    9cd8:	mov	x1, x21
    9cdc:	mov	x2, x23
    9ce0:	mov	x0, x19
    9ce4:	bl	12a0 <grub_mod_fini+0xfa0>
    9ce8:	mov	w26, w0
    9cec:	ldr	w0, [x20, #164]
    9cf0:	ldr	w1, [sp, #160]
    9cf4:	cmp	w0, #0x1
    9cf8:	csel	x27, x24, xzr, gt
    9cfc:	cmp	w1, #0x2
    9d00:	ccmp	w1, #0x4, #0x4, ne  // ne = any
    9d04:	b.eq	9f10 <grub_mod_fini+0x9c10>  // b.none
    9d08:	ldr	w0, [sp, #176]
    9d0c:	cmp	w0, #0x2
    9d10:	b.eq	9f10 <grub_mod_fini+0x9c10>  // b.none
    9d14:	cmp	w0, #0x4
    9d18:	b.eq	9f10 <grub_mod_fini+0x9c10>  // b.none
    9d1c:	cmp	w1, #0x3
    9d20:	b.eq	9d60 <grub_mod_fini+0x9a60>  // b.none
    9d24:	ldr	w1, [sp, #176]
    9d28:	cmp	w1, #0x3
    9d2c:	b.ne	9d44 <grub_mod_fini+0x9a44>  // b.any
    9d30:	ldr	x0, [sp, #184]
    9d34:	str	w1, [sp, #112]
    9d38:	bl	0 <grub_strlen>
    9d3c:	cmp	x0, #0x1
    9d40:	b.hi	9d74 <grub_mod_fini+0x9a74>  // b.pmore
    9d44:	ldr	w1, [sp, #160]
    9d48:	cbz	w1, 9d7c <grub_mod_fini+0x9a7c>
    9d4c:	cmp	w1, #0x3
    9d50:	b.ne	9e78 <grub_mod_fini+0x9b78>  // b.any
    9d54:	ldr	x0, [sp, #168]
    9d58:	ldrb	w7, [x0]
    9d5c:	b	9d80 <grub_mod_fini+0x9a80>
    9d60:	ldr	x0, [sp, #168]
    9d64:	str	w1, [sp, #112]
    9d68:	bl	0 <grub_strlen>
    9d6c:	cmp	x0, #0x1
    9d70:	b.ls	9d24 <grub_mod_fini+0x9a24>  // b.plast
    9d74:	mov	w28, #0x3                   	// #3
    9d78:	b	9e54 <grub_mod_fini+0x9b54>
    9d7c:	ldrb	w7, [sp, #168]
    9d80:	ldr	w0, [sp, #176]
    9d84:	cbnz	w0, 9e80 <grub_mod_fini+0x9b80>
    9d88:	ldrb	w4, [sp, #184]
    9d8c:	cmp	w1, #0x0
    9d90:	ccmp	w1, #0x3, #0x4, ne  // ne = any
    9d94:	b.ne	9e9c <grub_mod_fini+0x9b9c>  // b.any
    9d98:	cbz	x27, 9da4 <grub_mod_fini+0x9aa4>
    9d9c:	tst	x7, #0x80
    9da0:	csinv	w7, w7, wzr, eq  // eq = none
    9da4:	cmp	w0, #0x0
    9da8:	ccmp	w0, #0x3, #0x4, ne  // ne = any
    9dac:	b.ne	9ea4 <grub_mod_fini+0x9ba4>  // b.any
    9db0:	cbz	x27, 9dbc <grub_mod_fini+0x9abc>
    9db4:	tst	x4, #0x80
    9db8:	csinv	w4, w4, wzr, eq  // eq = none
    9dbc:	cmn	w7, #0x1
    9dc0:	ccmn	w4, #0x1, #0x4, ne  // ne = any
    9dc4:	b.eq	9d74 <grub_mod_fini+0x9a74>  // b.none
    9dc8:	tbz	w23, #16, 9dd4 <grub_mod_fini+0x9ad4>
    9dcc:	cmp	w7, w4
    9dd0:	b.gt	9f10 <grub_mod_fini+0x9c10>
    9dd4:	cbz	x27, 9ed4 <grub_mod_fini+0x9bd4>
    9dd8:	ldr	w0, [x27, #48]
    9ddc:	ldr	w1, [sp, #108]
    9de0:	cmp	w0, w1
    9de4:	b.ne	9eb4 <grub_mod_fini+0x9bb4>  // b.any
    9de8:	lsl	w6, w1, #1
    9dec:	str	w7, [sp, #140]
    9df0:	ldr	x0, [x27, #8]
    9df4:	add	w6, w6, #0x1
    9df8:	stp	w6, w4, [sp, #132]
    9dfc:	sbfiz	x1, x6, #2, #32
    9e00:	str	x1, [sp, #120]
    9e04:	bl	0 <grub_realloc>
    9e08:	mov	x5, x0
    9e0c:	ldr	x0, [x27, #16]
    9e10:	str	x5, [sp, #112]
    9e14:	ldr	x1, [sp, #120]
    9e18:	bl	0 <grub_realloc>
    9e1c:	mov	x1, x0
    9e20:	ldr	x5, [sp, #112]
    9e24:	ldp	w6, w4, [sp, #132]
    9e28:	cmp	x5, #0x0
    9e2c:	ldr	w7, [sp, #140]
    9e30:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    9e34:	b.ne	9eac <grub_mod_fini+0x9bac>  // b.any
    9e38:	mov	x0, x5
    9e3c:	str	x1, [sp, #112]
    9e40:	bl	0 <grub_free>
    9e44:	mov	w28, #0xc                   	// #12
    9e48:	ldr	x1, [sp, #112]
    9e4c:	mov	x0, x1
    9e50:	bl	0 <grub_free>
    9e54:	str	w28, [x22]
    9e58:	cbnz	w28, 9c8c <grub_mod_fini+0x998c>
    9e5c:	ldrb	w0, [x19, #8]
    9e60:	cmp	w0, #0x2
    9e64:	b.eq	9c10 <grub_mod_fini+0x9910>  // b.none
    9e68:	cmp	w0, #0x15
    9e6c:	b.eq	a00c <grub_mod_fini+0x9d0c>  // b.none
    9e70:	mov	w5, #0x0                   	// #0
    9e74:	b	9bb4 <grub_mod_fini+0x98b4>
    9e78:	mov	w7, #0x0                   	// #0
    9e7c:	b	9d80 <grub_mod_fini+0x9a80>
    9e80:	cmp	w0, #0x3
    9e84:	b.ne	9e94 <grub_mod_fini+0x9b94>  // b.any
    9e88:	ldr	x4, [sp, #184]
    9e8c:	ldrb	w4, [x4]
    9e90:	b	9d8c <grub_mod_fini+0x9a8c>
    9e94:	mov	w4, #0x0                   	// #0
    9e98:	b	9d8c <grub_mod_fini+0x9a8c>
    9e9c:	ldr	w7, [sp, #168]
    9ea0:	b	9da4 <grub_mod_fini+0x9aa4>
    9ea4:	ldr	w4, [sp, #184]
    9ea8:	b	9dbc <grub_mod_fini+0x9abc>
    9eac:	stp	x5, x0, [x27, #8]
    9eb0:	str	w6, [sp, #108]
    9eb4:	ldrsw	x1, [x27, #48]
    9eb8:	ldr	x0, [x27, #8]
    9ebc:	str	w7, [x0, x1, lsl #2]
    9ec0:	ldr	x1, [x27, #16]
    9ec4:	ldr	w0, [x27, #48]
    9ec8:	add	w5, w0, #0x1
    9ecc:	str	w5, [x27, #48]
    9ed0:	str	w4, [x1, w0, sxtw #2]
    9ed4:	mov	w5, #0x0                   	// #0
    9ed8:	cmp	w7, w5
    9edc:	ccmp	w4, w5, #0x1, le
    9ee0:	b.lt	9f00 <grub_mod_fini+0x9c00>  // b.tstop
    9ee4:	mov	w1, w5
    9ee8:	mov	x0, x25
    9eec:	str	w4, [sp, #112]
    9ef0:	str	w7, [sp, #120]
    9ef4:	bl	10c8 <grub_mod_fini+0xdc8>
    9ef8:	ldr	w4, [sp, #112]
    9efc:	ldr	w7, [sp, #120]
    9f00:	add	w5, w5, #0x1
    9f04:	cmp	w5, #0x100
    9f08:	b.ne	9ed8 <grub_mod_fini+0x9bd8>  // b.any
    9f0c:	b	9e54 <grub_mod_fini+0x9b54>
    9f10:	mov	w28, #0xb                   	// #11
    9f14:	b	9e54 <grub_mod_fini+0x9b54>
    9f18:	ldrb	w1, [sp, #168]
    9f1c:	mov	x0, x25
    9f20:	bl	10c8 <grub_mod_fini+0xdc8>
    9f24:	b	9e5c <grub_mod_fini+0x9b5c>
    9f28:	ldr	w0, [x24, #36]
    9f2c:	ldr	w1, [sp, #104]
    9f30:	cmp	w0, w1
    9f34:	b.ne	9f58 <grub_mod_fini+0x9c58>  // b.any
    9f38:	lsl	w27, w1, #1
    9f3c:	add	w0, w27, #0x1
    9f40:	str	w0, [sp, #104]
    9f44:	sbfiz	x1, x0, #2, #32
    9f48:	ldr	x0, [x24]
    9f4c:	bl	0 <grub_realloc>
    9f50:	cbz	x0, a738 <grub_mod_fini+0xa438>
    9f54:	str	x0, [x24]
    9f58:	ldr	w0, [x24, #36]
    9f5c:	ldr	x1, [x24]
    9f60:	add	w2, w0, #0x1
    9f64:	str	w2, [x24, #36]
    9f68:	ldr	w2, [sp, #168]
    9f6c:	str	w2, [x1, w0, sxtw #2]
    9f70:	b	9e5c <grub_mod_fini+0x9b5c>
    9f74:	ldr	x1, [sp, #168]
    9f78:	str	x1, [sp, #112]
    9f7c:	mov	x0, x1
    9f80:	bl	0 <grub_strlen>
    9f84:	cmp	x0, #0x1
    9f88:	ldr	x1, [sp, #112]
    9f8c:	b.eq	9fb4 <grub_mod_fini+0x9cb4>  // b.none
    9f90:	mov	w0, #0x3                   	// #3
    9f94:	b	9b38 <grub_mod_fini+0x9838>
    9f98:	ldr	x1, [sp, #168]
    9f9c:	str	x1, [sp, #112]
    9fa0:	mov	x0, x1
    9fa4:	bl	0 <grub_strlen>
    9fa8:	cmp	x0, #0x1
    9fac:	b.ne	9f90 <grub_mod_fini+0x9c90>  // b.any
    9fb0:	ldr	x1, [sp, #112]
    9fb4:	mov	x0, x25
    9fb8:	ldrb	w1, [x1]
    9fbc:	bl	10c8 <grub_mod_fini+0xdc8>
    9fc0:	str	wzr, [x22]
    9fc4:	b	9e5c <grub_mod_fini+0x9b5c>
    9fc8:	ldr	x0, [x21, #80]
    9fcc:	mov	x5, x23
    9fd0:	ldr	x4, [sp, #168]
    9fd4:	add	x3, sp, #0x9c
    9fd8:	mov	x2, x24
    9fdc:	mov	x1, x25
    9fe0:	bl	8fc0 <grub_mod_fini+0x8cc0>
    9fe4:	str	w0, [x22]
    9fe8:	cbz	w0, 9e5c <grub_mod_fini+0x9b5c>
    9fec:	b	9c8c <grub_mod_fini+0x998c>
    9ff0:	adrp	x0, 0 <grub_mod_init-0x260>
    9ff4:	mov	w2, #0xced                 	// #3309
    9ff8:	ldr	x1, [x0]
    9ffc:	adrp	x0, 0 <grub_mod_init-0x260>
    a000:	ldr	x0, [x0]
    a004:	bl	0 <grub_printf>
    a008:	b	9e5c <grub_mod_fini+0x9b5c>
    a00c:	ldr	w0, [x21, #56]
    a010:	add	w0, w0, w26
    a014:	str	w0, [x21, #56]
    a018:	ldr	w0, [sp, #128]
    a01c:	cbz	w0, a028 <grub_mod_fini+0x9d28>
    a020:	mov	x0, x25
    a024:	bl	10e8 <grub_mod_fini+0xde8>
    a028:	ldr	w0, [x20, #164]
    a02c:	cmp	w0, #0x1
    a030:	b.le	a040 <grub_mod_fini+0x9d40>
    a034:	ldr	x1, [x20, #120]
    a038:	mov	x0, x25
    a03c:	bl	112c <grub_mod_fini+0xe2c>
    a040:	ldr	w0, [x24, #36]
    a044:	cbnz	w0, a074 <grub_mod_fini+0x9d74>
    a048:	ldr	x0, [x24, #40]
    a04c:	cbnz	x0, a074 <grub_mod_fini+0x9d74>
    a050:	ldr	w0, [x24, #48]
    a054:	cbnz	w0, a074 <grub_mod_fini+0x9d74>
    a058:	ldr	w0, [x20, #164]
    a05c:	cmp	w0, #0x1
    a060:	b.le	a0cc <grub_mod_fini+0x9dcc>
    a064:	ldr	w0, [x24, #52]
    a068:	cbnz	w0, a074 <grub_mod_fini+0x9d74>
    a06c:	ldrb	w0, [x24, #32]
    a070:	tbz	w0, #0, a0cc <grub_mod_fini+0x9dcc>
    a074:	ldrb	w0, [x20, #160]
    a078:	add	x3, sp, #0xf0
    a07c:	mov	x2, #0x0                   	// #0
    a080:	mov	x1, #0x0                   	// #0
    a084:	orr	w0, w0, #0x2
    a088:	strb	w0, [x20, #160]
    a08c:	mov	w0, #0x6                   	// #6
    a090:	str	x24, [sp, #240]
    a094:	strb	w0, [sp, #248]
    a098:	mov	x0, x20
    a09c:	bl	2604 <grub_mod_fini+0x2304>
    a0a0:	mov	x27, x0
    a0a4:	mov	x0, #0x0                   	// #0
    a0a8:	cbz	x27, a738 <grub_mod_fini+0xa438>
    a0ac:	ldr	x1, [x25, x0, lsl #3]
    a0b0:	cbnz	x1, a6f8 <grub_mod_fini+0xa3f8>
    a0b4:	add	x0, x0, #0x1
    a0b8:	cmp	x0, #0x4
    a0bc:	b.ne	a0ac <grub_mod_fini+0x9dac>  // b.any
    a0c0:	mov	x0, x25
    a0c4:	bl	0 <grub_free>
    a0c8:	b	9ab0 <grub_mod_fini+0x97b0>
    a0cc:	mov	x0, x24
    a0d0:	bl	1c74 <grub_mod_fini+0x1974>
    a0d4:	mov	w0, #0x3                   	// #3
    a0d8:	add	x3, sp, #0xf0
    a0dc:	mov	x2, #0x0                   	// #0
    a0e0:	mov	x1, #0x0                   	// #0
    a0e4:	str	x25, [sp, #240]
    a0e8:	strb	w0, [sp, #248]
    a0ec:	mov	x0, x20
    a0f0:	bl	2604 <grub_mod_fini+0x2304>
    a0f4:	b	a730 <grub_mod_fini+0xa430>
    a0f8:	ldr	w1, [x19]
    a0fc:	mov	w0, #0x1                   	// #1
    a100:	lsl	w0, w0, w1
    a104:	ldr	x1, [x20, #152]
    a108:	sxtw	x0, w0
    a10c:	tst	x0, x1
    a110:	b.ne	a11c <grub_mod_fini+0x9e1c>  // b.any
    a114:	mov	w0, #0x6                   	// #6
    a118:	b	98d8 <grub_mod_fini+0x95d8>
    a11c:	ldr	x1, [x20, #144]
    a120:	mov	x3, x19
    a124:	mov	x2, #0x0                   	// #0
    a128:	orr	x0, x1, x0
    a12c:	str	x0, [x20, #144]
    a130:	mov	x1, #0x0                   	// #0
    a134:	mov	x0, x20
    a138:	bl	2604 <grub_mod_fini+0x2304>
    a13c:	mov	x27, x0
    a140:	cbz	x0, 98d4 <grub_mod_fini+0x95d4>
    a144:	ldr	w0, [x20, #140]
    a148:	add	w0, w0, #0x1
    a14c:	str	w0, [x20, #140]
    a150:	ldrb	w0, [x20, #160]
    a154:	orr	w0, w0, #0x2
    a158:	strb	w0, [x20, #160]
    a15c:	b	98ec <grub_mod_fini+0x95ec>
    a160:	cbz	x13, a16c <grub_mod_fini+0x9e6c>
    a164:	mov	w0, #0xd                   	// #13
    a168:	b	98d8 <grub_mod_fini+0x95d8>
    a16c:	cbnz	x14, a164 <grub_mod_fini+0x9e64>
    a170:	cbz	x15, a188 <grub_mod_fini+0x9e88>
    a174:	mov	x2, x23
    a178:	mov	x1, x21
    a17c:	mov	x0, x19
    a180:	bl	41f8 <grub_mod_fini+0x3ef8>
    a184:	b	9890 <grub_mod_fini+0x9590>
    a188:	cmp	w0, #0x9
    a18c:	b.ne	a19c <grub_mod_fini+0x9e9c>  // b.any
    a190:	tbnz	w23, #17, a19c <grub_mod_fini+0x9e9c>
    a194:	mov	w0, #0x10                  	// #16
    a198:	b	98d8 <grub_mod_fini+0x95d8>
    a19c:	mov	w0, #0x1                   	// #1
    a1a0:	strb	w0, [x19, #8]
    a1a4:	mov	x3, x19
    a1a8:	mov	x0, x20
    a1ac:	mov	x2, #0x0                   	// #0
    a1b0:	mov	x1, #0x0                   	// #0
    a1b4:	bl	2604 <grub_mod_fini+0x2304>
    a1b8:	mov	x27, x0
    a1bc:	cbnz	x0, 98ec <grub_mod_fini+0x95ec>
    a1c0:	b	98d4 <grub_mod_fini+0x95d4>
    a1c4:	ldr	w1, [x19]
    a1c8:	mov	w0, #0x30f                 	// #783
    a1cc:	tst	w1, w0
    a1d0:	b.eq	a214 <grub_mod_fini+0x9f14>  // b.none
    a1d4:	ldrb	w0, [x20, #160]
    a1d8:	tbnz	w0, #4, a214 <grub_mod_fini+0x9f14>
    a1dc:	orr	w0, w0, #0x10
    a1e0:	strb	w0, [x20, #160]
    a1e4:	mov	w1, w0
    a1e8:	tbnz	w0, #3, a314 <grub_mod_fini+0xa014>
    a1ec:	mov	x0, #0x3ff000000000000     	// #287948901175001088
    a1f0:	str	x0, [x20, #168]
    a1f4:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
    a1f8:	movk	x0, #0x87ff, lsl #16
    a1fc:	str	x0, [x20, #176]
    a200:	tbz	w1, #2, a328 <grub_mod_fini+0xa028>
    a204:	add	x0, x20, #0xb8
    a208:	mov	x2, #0x10                  	// #16
    a20c:	mov	w1, #0x0                   	// #0
    a210:	bl	0 <grub_memset>
    a214:	ldr	w0, [x19]
    a218:	mov	w1, #0x200                 	// #512
    a21c:	cmp	w0, #0x100
    a220:	ccmp	w0, w1, #0x4, ne  // ne = any
    a224:	b.ne	a35c <grub_mod_fini+0xa05c>  // b.any
    a228:	cmp	w0, #0x100
    a22c:	b.ne	a334 <grub_mod_fini+0xa034>  // b.any
    a230:	mov	w0, #0x6                   	// #6
    a234:	str	w0, [x19]
    a238:	mov	x3, x19
    a23c:	mov	x0, x20
    a240:	mov	x2, #0x0                   	// #0
    a244:	mov	x1, #0x0                   	// #0
    a248:	bl	2604 <grub_mod_fini+0x2304>
    a24c:	mov	x24, x0
    a250:	mov	w0, #0x9                   	// #9
    a254:	str	w0, [x19]
    a258:	mov	x3, x19
    a25c:	mov	x2, #0x0                   	// #0
    a260:	mov	x1, #0x0                   	// #0
    a264:	mov	x0, x20
    a268:	bl	2604 <grub_mod_fini+0x2304>
    a26c:	mov	x1, x24
    a270:	mov	x25, x0
    a274:	mov	x2, x0
    a278:	mov	w3, #0xa                   	// #10
    a27c:	mov	x0, x20
    a280:	bl	2764 <grub_mod_fini+0x2464>
    a284:	cmp	x24, #0x0
    a288:	mov	x27, x0
    a28c:	ccmp	x25, #0x0, #0x4, ne  // ne = any
    a290:	b.eq	98d4 <grub_mod_fini+0x95d4>  // b.none
    a294:	cbz	x27, 98d4 <grub_mod_fini+0x95d4>
    a298:	mov	x2, x23
    a29c:	mov	x1, x21
    a2a0:	mov	x0, x19
    a2a4:	bl	41f8 <grub_mod_fini+0x3ef8>
    a2a8:	mov	x0, x27
    a2ac:	ldp	x19, x20, [sp, #16]
    a2b0:	ldp	x21, x22, [sp, #32]
    a2b4:	ldp	x23, x24, [sp, #48]
    a2b8:	ldp	x25, x26, [sp, #64]
    a2bc:	ldp	x27, x28, [sp, #80]
    a2c0:	ldp	x29, x30, [sp], #272
    a2c4:	ret
    a2c8:	add	w6, w4, w3
    a2cc:	mov	w0, w6
    a2d0:	bl	3c28 <grub_mod_fini+0x3928>
    a2d4:	cbnz	w0, a2e0 <grub_mod_fini+0x9fe0>
    a2d8:	cmp	w6, #0x5f
    a2dc:	b.ne	a2f0 <grub_mod_fini+0x9ff0>  // b.any
    a2e0:	ldr	x1, [x5, x2, lsl #3]
    a2e4:	lsl	x0, x7, x3
    a2e8:	orr	x0, x1, x0
    a2ec:	str	x0, [x5, x2, lsl #3]
    a2f0:	add	w3, w3, #0x1
    a2f4:	cmp	w3, #0x40
    a2f8:	b.ne	a2c8 <grub_mod_fini+0x9fc8>  // b.any
    a2fc:	add	x2, x2, #0x1
    a300:	add	w4, w4, #0x40
    a304:	cmp	w2, #0x3
    a308:	b.gt	a214 <grub_mod_fini+0x9f14>
    a30c:	mov	w3, #0x0                   	// #0
    a310:	b	a2c8 <grub_mod_fini+0x9fc8>
    a314:	mov	w4, #0x0                   	// #0
    a318:	mov	x2, #0x0                   	// #0
    a31c:	add	x5, x20, #0xa8
    a320:	mov	x7, #0x1                   	// #1
    a324:	b	a30c <grub_mod_fini+0xa00c>
    a328:	mov	w4, #0x80                  	// #128
    a32c:	mov	x2, #0x2                   	// #2
    a330:	b	a31c <grub_mod_fini+0xa01c>
    a334:	mov	w0, #0x5                   	// #5
    a338:	str	w0, [x19]
    a33c:	mov	x3, x19
    a340:	mov	x0, x20
    a344:	mov	x2, #0x0                   	// #0
    a348:	mov	x1, #0x0                   	// #0
    a34c:	bl	2604 <grub_mod_fini+0x2304>
    a350:	mov	x24, x0
    a354:	mov	w0, #0xa                   	// #10
    a358:	b	a254 <grub_mod_fini+0x9f54>
    a35c:	mov	x3, x19
    a360:	mov	x0, x20
    a364:	mov	x2, #0x0                   	// #0
    a368:	mov	x1, #0x0                   	// #0
    a36c:	bl	2604 <grub_mod_fini+0x2304>
    a370:	mov	x27, x0
    a374:	b	a294 <grub_mod_fini+0x9f94>
    a378:	mov	x3, x19
    a37c:	mov	x0, x20
    a380:	mov	x2, #0x0                   	// #0
    a384:	mov	x1, #0x0                   	// #0
    a388:	bl	2604 <grub_mod_fini+0x2304>
    a38c:	mov	x27, x0
    a390:	cbz	x0, 98d4 <grub_mod_fini+0x95d4>
    a394:	ldr	w0, [x20, #164]
    a398:	cmp	w0, #0x1
    a39c:	b.gt	a150 <grub_mod_fini+0x9e50>
    a3a0:	b	98ec <grub_mod_fini+0x95ec>
    a3a4:	cmp	w0, #0x21
    a3a8:	adrp	x0, 0 <grub_mod_init-0x260>
    a3ac:	mov	x5, x22
    a3b0:	cset	w4, eq  // eq = none
    a3b4:	ldr	x3, [x0]
    a3b8:	adrp	x0, 0 <grub_mod_init-0x260>
    a3bc:	ldr	x2, [x0]
    a3c0:	mov	x0, x20
    a3c4:	ldr	x1, [x21, #80]
    a3c8:	bl	9698 <grub_mod_fini+0x9398>
    a3cc:	mov	x27, x0
    a3d0:	b	9ab0 <grub_mod_fini+0x97b0>
    a3d4:	cmp	w0, #0x23
    a3d8:	adrp	x0, 0 <grub_mod_init-0x260>
    a3dc:	mov	x5, x22
    a3e0:	cset	w4, eq  // eq = none
    a3e4:	ldr	x3, [x0]
    a3e8:	adrp	x0, 0 <grub_mod_init-0x260>
    a3ec:	ldr	x2, [x0]
    a3f0:	b	a3c0 <grub_mod_fini+0xa0c0>
    a3f4:	mov	w0, #0x5                   	// #5
    a3f8:	b	98d8 <grub_mod_fini+0x95d8>
    a3fc:	cmn	w0, #0x2
    a400:	b.ne	a410 <grub_mod_fini+0xa110>  // b.any
    a404:	mov	w26, #0x0                   	// #0
    a408:	b	a44c <grub_mod_fini+0xa14c>
    a40c:	mov	w5, #0x0                   	// #0
    a410:	ldrb	w0, [x19, #8]
    a414:	cmp	w0, #0x18
    a418:	b.eq	a470 <grub_mod_fini+0xa170>  // b.none
    a41c:	cmp	w0, #0x1
    a420:	b.ne	a478 <grub_mod_fini+0xa178>  // b.any
    a424:	ldrb	w0, [x19]
    a428:	cmp	w0, #0x2c
    a42c:	b.ne	a478 <grub_mod_fini+0xa178>  // b.any
    a430:	mov	x2, x23
    a434:	mov	x1, x19
    a438:	mov	x0, x21
    a43c:	str	w5, [sp, #104]
    a440:	bl	421c <grub_mod_fini+0x3f1c>
    a444:	mov	w26, w0
    a448:	ldr	w5, [sp, #104]
    a44c:	cmn	w5, #0x2
    a450:	ccmn	w26, #0x2, #0x4, ne  // ne = any
    a454:	b.ne	a4bc <grub_mod_fini+0xa1bc>  // b.any
    a458:	tbnz	w23, #21, a480 <grub_mod_fini+0xa180>
    a45c:	ldrb	w0, [x19, #8]
    a460:	cmp	w0, #0x2
    a464:	b.ne	9964 <grub_mod_fini+0x9664>  // b.any
    a468:	mov	w0, #0x9                   	// #9
    a46c:	b	9968 <grub_mod_fini+0x9668>
    a470:	mov	w26, w5
    a474:	b	a44c <grub_mod_fini+0xa14c>
    a478:	mov	w26, #0xfffffffe            	// #-2
    a47c:	b	a44c <grub_mod_fini+0xa14c>
    a480:	str	w18, [x21, #56]
    a484:	mov	w0, #0x1                   	// #1
    a488:	stp	x24, x25, [x19]
    a48c:	mov	x24, x27
    a490:	strb	w0, [x19, #8]
    a494:	ldr	w0, [x22]
    a498:	cbz	w0, a6c0 <grub_mod_fini+0xa3c0>
    a49c:	cbnz	x24, a6c0 <grub_mod_fini+0xa3c0>
    a4a0:	cbz	x27, 9abc <grub_mod_fini+0x97bc>
    a4a4:	adrp	x0, 0 <grub_mod_init-0x260>
    a4a8:	mov	x2, #0x0                   	// #0
    a4ac:	ldr	x1, [x0]
    a4b0:	mov	x0, x27
    a4b4:	bl	18dc <grub_mod_fini+0x15dc>
    a4b8:	b	9abc <grub_mod_fini+0x97bc>
    a4bc:	cmp	w5, w26
    a4c0:	ccmn	w26, #0x1, #0x4, gt
    a4c4:	b.ne	9964 <grub_mod_fini+0x9664>  // b.any
    a4c8:	ldrb	w0, [x19, #8]
    a4cc:	cmp	w0, #0x18
    a4d0:	b.ne	9964 <grub_mod_fini+0x9664>  // b.any
    a4d4:	cmn	w26, #0x1
    a4d8:	mov	w0, #0x7fff                	// #32767
    a4dc:	b.ne	a4f4 <grub_mod_fini+0xa1f4>  // b.any
    a4e0:	cmp	w5, w0
    a4e4:	cset	x0, gt
    a4e8:	cbz	x0, a508 <grub_mod_fini+0xa208>
    a4ec:	mov	w0, #0xf                   	// #15
    a4f0:	b	9968 <grub_mod_fini+0x9668>
    a4f4:	cmp	w26, w0
    a4f8:	b	a4e4 <grub_mod_fini+0xa1e4>
    a4fc:	cmp	w1, #0x13
    a500:	mov	w6, #0xffffffff            	// #-1
    a504:	cneg	w26, w6, eq  // eq = none
    a508:	mov	x2, x23
    a50c:	mov	x1, x21
    a510:	mov	x0, x19
    a514:	str	w5, [sp, #104]
    a518:	bl	41f8 <grub_mod_fini+0x3ef8>
    a51c:	cbz	x27, a540 <grub_mod_fini+0xa240>
    a520:	ldr	w5, [sp, #104]
    a524:	orr	w0, w5, w26
    a528:	cbnz	w0, a548 <grub_mod_fini+0xa248>
    a52c:	adrp	x0, 0 <grub_mod_init-0x260>
    a530:	mov	x2, #0x0                   	// #0
    a534:	ldr	x1, [x0]
    a538:	mov	x0, x27
    a53c:	bl	18dc <grub_mod_fini+0x15dc>
    a540:	mov	x24, #0x0                   	// #0
    a544:	b	a494 <grub_mod_fini+0xa194>
    a548:	cmp	w5, #0x0
    a54c:	b.gt	a64c <grub_mod_fini+0xa34c>
    a550:	mov	x25, x27
    a554:	mov	x28, #0x0                   	// #0
    a558:	ldrb	w0, [x25, #48]
    a55c:	cmp	w0, #0x11
    a560:	b.ne	a580 <grub_mod_fini+0xa280>  // b.any
    a564:	adrp	x0, 0 <grub_mod_init-0x260>
    a568:	ldrsw	x2, [x25, #40]
    a56c:	str	w5, [sp, #104]
    a570:	ldr	x1, [x0]
    a574:	mov	x0, x25
    a578:	bl	18dc <grub_mod_fini+0x15dc>
    a57c:	ldr	w5, [sp, #104]
    a580:	cmn	w26, #0x1
    a584:	mov	x1, x25
    a588:	cset	w3, eq  // eq = none
    a58c:	mov	x0, x20
    a590:	add	w3, w3, #0xa
    a594:	mov	x2, #0x0                   	// #0
    a598:	str	w5, [sp, #104]
    a59c:	bl	2764 <grub_mod_fini+0x2464>
    a5a0:	mov	x24, x0
    a5a4:	cbz	x0, a6b8 <grub_mod_fini+0xa3b8>
    a5a8:	ldr	w5, [sp, #104]
    a5ac:	add	w4, w5, #0x2
    a5b0:	cmp	w26, w4
    a5b4:	b.ge	a65c <grub_mod_fini+0xa35c>  // b.tcont
    a5b8:	cbz	x28, a494 <grub_mod_fini+0xa194>
    a5bc:	mov	x2, x24
    a5c0:	mov	x1, x28
    a5c4:	mov	x0, x20
    a5c8:	mov	w3, #0x10                  	// #16
    a5cc:	bl	2764 <grub_mod_fini+0x2464>
    a5d0:	mov	x24, x0
    a5d4:	b	a494 <grub_mod_fini+0xa194>
    a5d8:	mov	x1, x20
    a5dc:	mov	x0, x28
    a5e0:	str	w5, [sp, #104]
    a5e4:	bl	26bc <grub_mod_fini+0x23bc>
    a5e8:	mov	x1, x24
    a5ec:	mov	x28, x0
    a5f0:	mov	x2, x0
    a5f4:	mov	w3, #0x10                  	// #16
    a5f8:	mov	x0, x20
    a5fc:	bl	2764 <grub_mod_fini+0x2464>
    a600:	cmp	x28, #0x0
    a604:	mov	x24, x0
    a608:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    a60c:	b.eq	a6b8 <grub_mod_fini+0xa3b8>  // b.none
    a610:	ldr	w5, [sp, #104]
    a614:	add	w25, w25, #0x1
    a618:	cmp	w5, w25
    a61c:	b.ge	a5d8 <grub_mod_fini+0xa2d8>  // b.tcont
    a620:	str	w5, [sp, #104]
    a624:	cmp	w5, w26
    a628:	b.eq	a494 <grub_mod_fini+0xa194>  // b.none
    a62c:	mov	x1, x20
    a630:	mov	x0, x28
    a634:	bl	26bc <grub_mod_fini+0x23bc>
    a638:	mov	x25, x0
    a63c:	cbz	x0, a6b8 <grub_mod_fini+0xa3b8>
    a640:	ldr	w5, [sp, #104]
    a644:	mov	x28, x24
    a648:	b	a558 <grub_mod_fini+0xa258>
    a64c:	mov	x24, x27
    a650:	mov	x28, x27
    a654:	mov	w25, #0x2                   	// #2
    a658:	b	a618 <grub_mod_fini+0xa318>
    a65c:	mov	x1, x20
    a660:	mov	x0, x25
    a664:	str	w4, [sp, #104]
    a668:	bl	26bc <grub_mod_fini+0x23bc>
    a66c:	mov	x1, x24
    a670:	mov	x25, x0
    a674:	mov	x2, x0
    a678:	mov	w3, #0x10                  	// #16
    a67c:	mov	x0, x20
    a680:	bl	2764 <grub_mod_fini+0x2464>
    a684:	cmp	x25, #0x0
    a688:	mov	x1, x0
    a68c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    a690:	b.eq	a6b8 <grub_mod_fini+0xa3b8>  // b.none
    a694:	mov	x0, x20
    a698:	mov	w3, #0xa                   	// #10
    a69c:	mov	x2, #0x0                   	// #0
    a6a0:	bl	2764 <grub_mod_fini+0x2464>
    a6a4:	mov	x24, x0
    a6a8:	cbz	x0, a6b8 <grub_mod_fini+0xa3b8>
    a6ac:	ldr	w4, [sp, #104]
    a6b0:	add	w4, w4, #0x1
    a6b4:	b	a5b0 <grub_mod_fini+0xa2b0>
    a6b8:	mov	w0, #0xc                   	// #12
    a6bc:	b	9968 <grub_mod_fini+0x9668>
    a6c0:	tbz	w23, #24, a6f0 <grub_mod_fini+0xa3f0>
    a6c4:	ldrb	w0, [x19, #8]
    a6c8:	cmp	w0, #0x17
    a6cc:	ccmp	w0, #0xb, #0x4, ne  // ne = any
    a6d0:	b.ne	a6f0 <grub_mod_fini+0xa3f0>  // b.any
    a6d4:	cbz	x24, a164 <grub_mod_fini+0x9e64>
    a6d8:	adrp	x0, 0 <grub_mod_init-0x260>
    a6dc:	mov	x2, #0x0                   	// #0
    a6e0:	ldr	x1, [x0]
    a6e4:	mov	x0, x24
    a6e8:	bl	18dc <grub_mod_fini+0x15dc>
    a6ec:	b	a164 <grub_mod_fini+0x9e64>
    a6f0:	mov	x27, x24
    a6f4:	b	98fc <grub_mod_fini+0x95fc>
    a6f8:	mov	w0, #0x3                   	// #3
    a6fc:	mov	x1, #0x0                   	// #0
    a700:	add	x3, sp, #0xf0
    a704:	mov	x2, #0x0                   	// #0
    a708:	str	x25, [sp, #240]
    a70c:	strb	w0, [sp, #248]
    a710:	mov	x0, x20
    a714:	bl	2604 <grub_mod_fini+0x2304>
    a718:	mov	x1, x0
    a71c:	cbz	x0, a738 <grub_mod_fini+0xa438>
    a720:	mov	x2, x27
    a724:	mov	x0, x20
    a728:	mov	w3, #0xa                   	// #10
    a72c:	bl	2764 <grub_mod_fini+0x2464>
    a730:	mov	x27, x0
    a734:	cbnz	x0, 9ab0 <grub_mod_fini+0x97b0>
    a738:	mov	w0, #0xc                   	// #12
    a73c:	b	9b38 <grub_mod_fini+0x9838>
	...
    a790:	stp	x29, x30, [sp, #-96]!
    a794:	mov	x29, sp
    a798:	stp	x21, x22, [sp, #32]
    a79c:	mov	x21, x5
    a7a0:	mov	x22, x1
    a7a4:	stp	x19, x20, [sp, #16]
    a7a8:	stp	x23, x24, [sp, #48]
    a7ac:	mov	x23, x2
    a7b0:	mov	w24, w4
    a7b4:	stp	x25, x26, [sp, #64]
    a7b8:	mov	x25, x0
    a7bc:	mov	x26, x3
    a7c0:	str	x27, [sp, #80]
    a7c4:	ldr	x27, [x1]
    a7c8:	bl	984c <grub_mod_fini+0x954c>
    a7cc:	mov	x19, x0
    a7d0:	ldr	w0, [x21]
    a7d4:	cbz	w0, a85c <grub_mod_fini+0xa55c>
    a7d8:	cbnz	x19, a85c <grub_mod_fini+0xa55c>
    a7dc:	mov	x19, #0x0                   	// #0
    a7e0:	mov	x0, x19
    a7e4:	ldp	x19, x20, [sp, #16]
    a7e8:	ldp	x21, x22, [sp, #32]
    a7ec:	ldp	x23, x24, [sp, #48]
    a7f0:	ldp	x25, x26, [sp, #64]
    a7f4:	ldr	x27, [sp, #80]
    a7f8:	ldp	x29, x30, [sp], #96
    a7fc:	ret
    a800:	cmp	x19, #0x0
    a804:	ccmp	x20, #0x0, #0x4, ne  // ne = any
    a808:	b.eq	a854 <grub_mod_fini+0xa554>  // b.none
    a80c:	mov	x2, x20
    a810:	mov	x1, x19
    a814:	mov	x0, x27
    a818:	mov	w3, #0x10                  	// #16
    a81c:	bl	2764 <grub_mod_fini+0x2464>
    a820:	cbnz	x0, a8c0 <grub_mod_fini+0xa5c0>
    a824:	adrp	x22, 0 <grub_mod_init-0x260>
    a828:	mov	x2, #0x0                   	// #0
    a82c:	mov	x0, x20
    a830:	ldr	x1, [x22]
    a834:	bl	18dc <grub_mod_fini+0x15dc>
    a838:	ldr	x1, [x22]
    a83c:	mov	x0, x19
    a840:	mov	x2, #0x0                   	// #0
    a844:	bl	18dc <grub_mod_fini+0x15dc>
    a848:	mov	w0, #0xc                   	// #12
    a84c:	str	w0, [x21]
    a850:	b	a7dc <grub_mod_fini+0xa4dc>
    a854:	cmp	x19, #0x0
    a858:	csel	x19, x19, x20, ne  // ne = any
    a85c:	ldrb	w0, [x23, #8]
    a860:	and	w1, w0, #0xfffffff7
    a864:	cmp	w1, #0x2
    a868:	b.eq	a7e0 <grub_mod_fini+0xa4e0>  // b.none
    a86c:	cbz	w24, a878 <grub_mod_fini+0xa578>
    a870:	cmp	w0, #0x9
    a874:	b.eq	a7e0 <grub_mod_fini+0xa4e0>  // b.none
    a878:	mov	x5, x21
    a87c:	mov	w4, w24
    a880:	mov	x3, x26
    a884:	mov	x2, x23
    a888:	mov	x1, x22
    a88c:	mov	x0, x25
    a890:	bl	984c <grub_mod_fini+0x954c>
    a894:	mov	x20, x0
    a898:	ldr	w0, [x21]
    a89c:	cbz	w0, a800 <grub_mod_fini+0xa500>
    a8a0:	cbnz	x20, a800 <grub_mod_fini+0xa500>
    a8a4:	cbz	x19, a7dc <grub_mod_fini+0xa4dc>
    a8a8:	adrp	x0, 0 <grub_mod_init-0x260>
    a8ac:	mov	x2, #0x0                   	// #0
    a8b0:	ldr	x1, [x0]
    a8b4:	mov	x0, x19
    a8b8:	bl	18dc <grub_mod_fini+0x15dc>
    a8bc:	b	a7dc <grub_mod_fini+0xa4dc>
    a8c0:	mov	x19, x0
    a8c4:	b	a85c <grub_mod_fini+0xa55c>
	...
    a8d0:	stp	x29, x30, [sp, #-112]!
    a8d4:	mov	x29, sp
    a8d8:	stp	x21, x22, [sp, #32]
    a8dc:	mov	x22, x5
    a8e0:	ldr	x21, [x1]
    a8e4:	stp	x19, x20, [sp, #16]
    a8e8:	mov	x20, x2
    a8ec:	stp	x23, x24, [sp, #48]
    a8f0:	mov	x23, x0
    a8f4:	mov	x24, x1
    a8f8:	stp	x25, x26, [sp, #64]
    a8fc:	mov	x25, x3
    a900:	mov	w26, w4
    a904:	stp	x27, x28, [sp, #80]
    a908:	ldr	x27, [x21, #152]
    a90c:	bl	a790 <grub_mod_fini+0xa490>
    a910:	mov	x19, x0
    a914:	ldr	w0, [x22]
    a918:	cbz	w0, a97c <grub_mod_fini+0xa67c>
    a91c:	cbnz	x19, a97c <grub_mod_fini+0xa67c>
    a920:	mov	x19, #0x0                   	// #0
    a924:	mov	x0, x19
    a928:	ldp	x19, x20, [sp, #16]
    a92c:	ldp	x21, x22, [sp, #32]
    a930:	ldp	x23, x24, [sp, #48]
    a934:	ldp	x25, x26, [sp, #64]
    a938:	ldp	x27, x28, [sp, #80]
    a93c:	ldp	x29, x30, [sp], #112
    a940:	ret
    a944:	ldr	x0, [x21, #152]
    a948:	orr	x0, x0, x6
    a94c:	str	x0, [x21, #152]
    a950:	mov	x1, x19
    a954:	mov	x0, x21
    a958:	mov	w3, #0xa                   	// #10
    a95c:	bl	2764 <grub_mod_fini+0x2464>
    a960:	mov	x19, x0
    a964:	cbnz	x0, a980 <grub_mod_fini+0xa680>
    a968:	mov	w0, #0xc                   	// #12
    a96c:	str	w0, [x22]
    a970:	b	a924 <grub_mod_fini+0xa624>
    a974:	mov	x2, #0x0                   	// #0
    a978:	b	a950 <grub_mod_fini+0xa650>
    a97c:	orr	x28, x25, #0x800000
    a980:	ldrb	w0, [x20, #8]
    a984:	cmp	w0, #0xa
    a988:	b.ne	a924 <grub_mod_fini+0xa624>  // b.any
    a98c:	mov	x1, x23
    a990:	mov	x0, x20
    a994:	mov	x2, x28
    a998:	bl	41f8 <grub_mod_fini+0x3ef8>
    a99c:	ldrb	w0, [x20, #8]
    a9a0:	and	w1, w0, #0xfffffff7
    a9a4:	cmp	w1, #0x2
    a9a8:	b.eq	a974 <grub_mod_fini+0xa674>  // b.none
    a9ac:	cbz	w26, a9b8 <grub_mod_fini+0xa6b8>
    a9b0:	cmp	w0, #0x9
    a9b4:	b.eq	a974 <grub_mod_fini+0xa674>  // b.none
    a9b8:	ldr	x6, [x21, #152]
    a9bc:	str	x27, [x21, #152]
    a9c0:	mov	x2, x20
    a9c4:	mov	x5, x22
    a9c8:	mov	w4, w26
    a9cc:	mov	x3, x25
    a9d0:	mov	x1, x24
    a9d4:	mov	x0, x23
    a9d8:	str	x6, [sp, #104]
    a9dc:	bl	a790 <grub_mod_fini+0xa490>
    a9e0:	mov	x2, x0
    a9e4:	ldr	w0, [x22]
    a9e8:	ldr	x6, [sp, #104]
    a9ec:	cbz	w0, a944 <grub_mod_fini+0xa644>
    a9f0:	cbnz	x2, a944 <grub_mod_fini+0xa644>
    a9f4:	cbz	x19, a920 <grub_mod_fini+0xa620>
    a9f8:	adrp	x0, 0 <grub_mod_init-0x260>
    a9fc:	ldr	x1, [x0]
    aa00:	mov	x0, x19
    aa04:	bl	18dc <grub_mod_fini+0x15dc>
    aa08:	b	a920 <grub_mod_fini+0xa620>
    aa0c:	nop
	...
    aa18:	stp	x29, x30, [sp, #-256]!
    aa1c:	mov	x29, sp
    aa20:	stp	x19, x20, [sp, #16]
    aa24:	mov	x20, x2
    aa28:	stp	x21, x22, [sp, #32]
    aa2c:	mov	x21, x0
    aa30:	mov	x22, x3
    aa34:	stp	x23, x24, [sp, #48]
    aa38:	stp	x25, x26, [sp, #64]
    aa3c:	mov	x25, x1
    aa40:	mov	w1, #0xffffff90            	// #-112
    aa44:	stp	x27, x28, [sp, #80]
    aa48:	str	xzr, [x0, #16]
    aa4c:	str	x3, [x0, #24]
    aa50:	str	xzr, [x0, #48]
    aa54:	ldr	x19, [x0]
    aa58:	str	wzr, [sp, #120]
    aa5c:	ldrb	w0, [x0, #56]
    aa60:	and	w0, w0, w1
    aa64:	strb	w0, [x21, #56]
    aa68:	ldr	x0, [x21, #8]
    aa6c:	cmp	x0, #0xd7
    aa70:	b.hi	aa90 <grub_mod_fini+0xa790>  // b.pmore
    aa74:	mov	x0, x19
    aa78:	mov	x1, #0xd8                  	// #216
    aa7c:	bl	0 <grub_realloc>
    aa80:	mov	x19, x0
    aa84:	cbz	x0, b3bc <grub_mod_fini+0xb0bc>
    aa88:	mov	x0, #0xd8                  	// #216
    aa8c:	stp	x19, x0, [x21]
    aa90:	mov	x2, #0xd8                  	// #216
    aa94:	str	x2, [x21, #16]
    aa98:	mov	x0, x19
    aa9c:	mov	w1, #0x0                   	// #0
    aaa0:	bl	0 <grub_memset>
    aaa4:	mov	w0, #0xf                   	// #15
    aaa8:	str	w0, [x19, #128]
    aaac:	mov	x0, #0x3ffffffe            	// #1073741822
    aab0:	cmp	x20, x0
    aab4:	b.hi	ab5c <grub_mod_fini+0xa85c>  // b.pmore
    aab8:	add	x0, x20, #0x1
    aabc:	str	x0, [x19, #8]
    aac0:	mov	w23, #0x1                   	// #1
    aac4:	lsl	x0, x0, #4
    aac8:	bl	0 <grub_malloc>
    aacc:	str	x0, [x19]
    aad0:	mov	w0, w23
    aad4:	cmp	x20, w23, uxtw
    aad8:	b.cc	aae4 <grub_mod_fini+0xa7e4>  // b.lo, b.ul, b.last
    aadc:	lsl	w23, w23, #1
    aae0:	b	aad0 <grub_mod_fini+0xa7d0>
    aae4:	lsl	x0, x0, #4
    aae8:	bl	0 <grub_zalloc>
    aaec:	str	x0, [x19, #64]
    aaf0:	mov	w0, #0x4                   	// #4
    aaf4:	str	w0, [x19, #164]
    aaf8:	adrp	x0, 0 <grub_mod_init-0x260>
    aafc:	sub	w23, w23, #0x1
    ab00:	str	w23, [x19, #132]
    ab04:	ldr	x1, [x0]
    ab08:	adrp	x0, 0 <grub_mod_init-0x260>
    ab0c:	ldr	x0, [x0]
    ab10:	bl	0 <grub_strcmp>
    ab14:	cbnz	w0, ab24 <grub_mod_fini+0xa824>
    ab18:	ldrb	w0, [x19, #160]
    ab1c:	orr	w0, w0, #0x4
    ab20:	strb	w0, [x19, #160]
    ab24:	ldrb	w0, [x19, #160]
    ab28:	and	w1, w0, #0xfffffff7
    ab2c:	strb	w1, [x19, #160]
    ab30:	ldr	w1, [x19, #164]
    ab34:	cmp	w1, #0x1
    ab38:	b.le	ab4c <grub_mod_fini+0xa84c>
    ab3c:	tbz	w0, #2, ab74 <grub_mod_fini+0xa874>
    ab40:	adrp	x0, 0 <grub_mod_init-0x260>
    ab44:	ldr	x0, [x0]
    ab48:	str	x0, [x19, #120]
    ab4c:	ldr	x0, [x19]
    ab50:	cbz	x0, ab5c <grub_mod_fini+0xa85c>
    ab54:	ldr	x0, [x19, #64]
    ab58:	cbnz	x0, abcc <grub_mod_fini+0xa8cc>
    ab5c:	mov	w0, #0xc                   	// #12
    ab60:	str	w0, [sp, #120]
    ab64:	mov	x0, x19
    ab68:	bl	1fd8 <grub_mod_fini+0x1cd8>
    ab6c:	stp	xzr, xzr, [x21]
    ab70:	b	b1cc <grub_mod_fini+0xaecc>
    ab74:	mov	x0, #0x20                  	// #32
    ab78:	bl	0 <grub_zalloc>
    ab7c:	str	x0, [x19, #120]
    ab80:	cbz	x0, ab5c <grub_mod_fini+0xa85c>
    ab84:	mov	x1, #0x0                   	// #0
    ab88:	mov	x6, #0x1                   	// #1
    ab8c:	lsl	w5, w1, #6
    ab90:	mov	w2, #0x0                   	// #0
    ab94:	add	w3, w2, w5
    ab98:	tst	w3, #0xffffff80
    ab9c:	b.ne	abb0 <grub_mod_fini+0xa8b0>  // b.any
    aba0:	ldr	x4, [x0, x1, lsl #3]
    aba4:	lsl	x3, x6, x2
    aba8:	orr	x3, x4, x3
    abac:	str	x3, [x0, x1, lsl #3]
    abb0:	add	w2, w2, #0x1
    abb4:	cmp	w2, #0x40
    abb8:	b.ne	ab94 <grub_mod_fini+0xa894>  // b.any
    abbc:	add	x1, x1, #0x1
    abc0:	cmp	x1, #0x4
    abc4:	b.ne	ab8c <grub_mod_fini+0xa88c>  // b.any
    abc8:	b	ab4c <grub_mod_fini+0xa84c>
    abcc:	ldr	x27, [x21, #40]
    abd0:	and	x23, x22, #0x400000
    abd4:	mov	w1, #0x0                   	// #0
    abd8:	add	x0, sp, #0x90
    abdc:	mov	x2, #0x70                  	// #112
    abe0:	str	wzr, [sp, #120]
    abe4:	bl	0 <grub_memset>
    abe8:	orr	x26, x27, x23
    abec:	cmp	x23, #0x0
    abf0:	str	x25, [sp, #144]
    abf4:	cset	w0, ne  // ne = any
    abf8:	cmp	x26, #0x0
    abfc:	strb	w0, [sp, #240]
    ac00:	cset	w0, ne  // ne = any
    ac04:	strb	w0, [sp, #243]
    ac08:	mov	w24, w20
    ac0c:	ldr	w0, [x19, #164]
    ac10:	str	w0, [sp, #248]
    ac14:	ldrb	w0, [x19, #160]
    ac18:	stp	w20, w20, [sp, #204]
    ac1c:	stp	w20, w20, [sp, #212]
    ac20:	ubfx	x1, x0, #2, #1
    ac24:	ubfx	x0, x0, #3, #1
    ac28:	str	x27, [sp, #224]
    ac2c:	strb	w1, [sp, #241]
    ac30:	strb	w0, [sp, #242]
    ac34:	cbnz	x20, ac98 <grub_mod_fini+0xa998>
    ac38:	ldrb	w0, [sp, #243]
    ac3c:	cbnz	w0, ace0 <grub_mod_fini+0xa9e0>
    ac40:	ldr	w0, [x19, #164]
    ac44:	str	x25, [sp, #152]
    ac48:	cmp	w0, #0x1
    ac4c:	cbz	x23, ad94 <grub_mod_fini+0xaa94>
    ac50:	b.le	ace8 <grub_mod_fini+0xa9e8>
    ac54:	add	x0, sp, #0x90
    ac58:	bl	4e9c <grub_mod_fini+0x4b9c>
    ac5c:	cbnz	w0, aca8 <grub_mod_fini+0xa9a8>
    ac60:	ldr	w1, [sp, #192]
    ac64:	cmp	w24, w1
    ac68:	b.le	aca8 <grub_mod_fini+0xa9a8>
    ac6c:	ldr	w3, [x19, #164]
    ac70:	ldr	w2, [sp, #188]
    ac74:	ldr	w1, [sp, #196]
    ac78:	add	w2, w2, w3
    ac7c:	cmp	w1, w2
    ac80:	b.gt	aca8 <grub_mod_fini+0xa9a8>
    ac84:	lsl	w1, w1, #1
    ac88:	add	x0, sp, #0x90
    ac8c:	bl	19bc <grub_mod_fini+0x16bc>
    ac90:	cbz	w0, ac54 <grub_mod_fini+0xa954>
    ac94:	b	aca8 <grub_mod_fini+0xa9a8>
    ac98:	add	w1, w20, #0x1
    ac9c:	add	x0, sp, #0x90
    aca0:	bl	19bc <grub_mod_fini+0x16bc>
    aca4:	cbz	w0, ac38 <grub_mod_fini+0xa938>
    aca8:	str	w0, [sp, #120]
    acac:	cbz	w0, acf4 <grub_mod_fini+0xa9f4>
    acb0:	ldr	x20, [x21]
    acb4:	ldr	x0, [x20, #112]
    acb8:	cbnz	x0, adc0 <grub_mod_fini+0xaac0>
    acbc:	mov	w0, #0xf                   	// #15
    acc0:	str	w0, [x20, #128]
    acc4:	ldr	x0, [x20, #32]
    acc8:	stp	xzr, xzr, [x20, #104]
    accc:	bl	0 <grub_free>
    acd0:	str	xzr, [x20, #32]
    acd4:	add	x0, sp, #0x90
    acd8:	bl	1f94 <grub_mod_fini+0x1c94>
    acdc:	b	ab64 <grub_mod_fini+0xa864>
    ace0:	ldr	x25, [sp, #152]
    ace4:	b	ac40 <grub_mod_fini+0xa940>
    ace8:	add	x0, sp, #0x90
    acec:	bl	3bac <grub_mod_fini+0x38ac>
    acf0:	str	wzr, [sp, #120]
    acf4:	ldr	x24, [x21]
    acf8:	str	xzr, [x21, #48]
    acfc:	orr	x2, x22, #0x800000
    ad00:	add	x1, sp, #0x90
    ad04:	add	x0, sp, #0x80
    ad08:	str	x22, [x24, #200]
    ad0c:	bl	41f8 <grub_mod_fini+0x3ef8>
    ad10:	mov	x3, x22
    ad14:	add	x5, sp, #0x78
    ad18:	add	x2, sp, #0x80
    ad1c:	mov	x1, x21
    ad20:	add	x0, sp, #0x90
    ad24:	mov	w4, #0x0                   	// #0
    ad28:	bl	a8d0 <grub_mod_fini+0xa5d0>
    ad2c:	mov	x22, x0
    ad30:	ldr	w0, [sp, #120]
    ad34:	cbz	w0, ad3c <grub_mod_fini+0xaa3c>
    ad38:	cbz	x22, ad8c <grub_mod_fini+0xaa8c>
    ad3c:	mov	x0, x24
    ad40:	mov	w3, #0x2                   	// #2
    ad44:	mov	x2, #0x0                   	// #0
    ad48:	mov	x1, #0x0                   	// #0
    ad4c:	bl	2764 <grub_mod_fini+0x2464>
    ad50:	mov	x20, x0
    ad54:	cbz	x22, ad6c <grub_mod_fini+0xaa6c>
    ad58:	mov	x2, x0
    ad5c:	mov	x1, x22
    ad60:	mov	x0, x24
    ad64:	mov	w3, #0x10                  	// #16
    ad68:	bl	2764 <grub_mod_fini+0x2464>
    ad6c:	cmp	x20, #0x0
    ad70:	cset	w25, eq  // eq = none
    ad74:	cmp	x0, #0x0
    ad78:	csinc	w25, w25, wzr, ne  // ne = any
    ad7c:	ldr	x20, [x21]
    ad80:	cbz	w25, add0 <grub_mod_fini+0xaad0>
    ad84:	mov	w0, #0xc                   	// #12
    ad88:	str	w0, [sp, #120]
    ad8c:	str	xzr, [x19, #104]
    ad90:	b	acb0 <grub_mod_fini+0xa9b0>
    ad94:	b.le	ada4 <grub_mod_fini+0xaaa4>
    ad98:	add	x0, sp, #0x90
    ad9c:	bl	1770 <grub_mod_fini+0x1470>
    ada0:	b	acf0 <grub_mod_fini+0xa9f0>
    ada4:	cbz	x26, adb4 <grub_mod_fini+0xaab4>
    ada8:	add	x0, sp, #0x90
    adac:	bl	1178 <grub_mod_fini+0xe78>
    adb0:	b	acf0 <grub_mod_fini+0xa9f0>
    adb4:	ldr	w0, [sp, #196]
    adb8:	stp	w0, w0, [sp, #188]
    adbc:	b	acf0 <grub_mod_fini+0xa9f0>
    adc0:	ldr	x22, [x0]
    adc4:	bl	0 <grub_free>
    adc8:	mov	x0, x22
    adcc:	b	acb8 <grub_mod_fini+0xa9b8>
    add0:	str	x0, [x19, #104]
    add4:	ldr	x0, [x20, #8]
    add8:	lsl	x0, x0, #2
    addc:	bl	0 <grub_malloc>
    ade0:	str	x0, [x20, #24]
    ade4:	ldr	x0, [x20, #8]
    ade8:	lsl	x0, x0, #2
    adec:	bl	0 <grub_malloc>
    adf0:	str	x0, [x20, #32]
    adf4:	ldr	x0, [x20, #8]
    adf8:	lsl	x0, x0, #4
    adfc:	bl	0 <grub_malloc>
    ae00:	str	x0, [x20, #40]
    ae04:	ldr	x0, [x20, #8]
    ae08:	lsl	x0, x0, #4
    ae0c:	bl	0 <grub_malloc>
    ae10:	ldr	x1, [x20, #24]
    ae14:	str	x0, [x20, #48]
    ae18:	cbnz	x1, ae28 <grub_mod_fini+0xab28>
    ae1c:	mov	w0, #0xc                   	// #12
    ae20:	str	w0, [sp, #120]
    ae24:	b	acb0 <grub_mod_fini+0xa9b0>
    ae28:	ldr	x1, [x20, #32]
    ae2c:	cbz	x1, ae1c <grub_mod_fini+0xab1c>
    ae30:	ldr	x1, [x20, #40]
    ae34:	cbz	x1, ae1c <grub_mod_fini+0xab1c>
    ae38:	cbz	x0, ae1c <grub_mod_fini+0xab1c>
    ae3c:	ldr	x0, [x21, #48]
    ae40:	lsl	x0, x0, #2
    ae44:	bl	0 <grub_malloc>
    ae48:	str	x0, [x20, #208]
    ae4c:	cbz	x0, ae90 <grub_mod_fini+0xab90>
    ae50:	ldr	x2, [x21, #48]
    ae54:	mov	x1, #0x0                   	// #0
    ae58:	cmp	x2, x1
    ae5c:	b.ne	af54 <grub_mod_fini+0xac54>  // b.any
    ae60:	adrp	x0, 0 <grub_mod_init-0x260>
    ae64:	mov	x2, x20
    ae68:	ldr	x1, [x0]
    ae6c:	ldr	x0, [x20, #104]
    ae70:	bl	1948 <grub_mod_fini+0x1648>
    ae74:	ldr	x1, [x21, #48]
    ae78:	mov	x0, #0x0                   	// #0
    ae7c:	cmp	x1, x0
    ae80:	b.ne	af60 <grub_mod_fini+0xac60>  // b.any
    ae84:	ldr	x0, [x20, #208]
    ae88:	bl	0 <grub_free>
    ae8c:	str	xzr, [x20, #208]
    ae90:	adrp	x0, 0 <grub_mod_init-0x260>
    ae94:	mov	x2, x21
    ae98:	ldr	x1, [x0]
    ae9c:	ldr	x0, [x20, #104]
    aea0:	bl	18dc <grub_mod_fini+0x15dc>
    aea4:	mov	w22, w0
    aea8:	cbnz	w0, af48 <grub_mod_fini+0xac48>
    aeac:	adrp	x0, 0 <grub_mod_init-0x260>
    aeb0:	mov	x2, x20
    aeb4:	ldr	x1, [x0]
    aeb8:	ldr	x0, [x20, #104]
    aebc:	bl	18dc <grub_mod_fini+0x15dc>
    aec0:	mov	w22, w0
    aec4:	cbnz	w0, af48 <grub_mod_fini+0xac48>
    aec8:	adrp	x0, 0 <grub_mod_init-0x260>
    aecc:	mov	x2, x20
    aed0:	ldr	x1, [x0]
    aed4:	ldr	x0, [x20, #104]
    aed8:	bl	1948 <grub_mod_fini+0x1648>
    aedc:	adrp	x0, 0 <grub_mod_init-0x260>
    aee0:	mov	x2, x20
    aee4:	ldr	x1, [x0]
    aee8:	ldr	x0, [x20, #104]
    aeec:	bl	1948 <grub_mod_fini+0x1648>
    aef0:	mov	w22, w0
    aef4:	cbnz	w0, af48 <grub_mod_fini+0xac48>
    aef8:	mov	w26, #0x0                   	// #0
    aefc:	mov	w24, #0x0                   	// #0
    af00:	ldr	x0, [x20, #16]
    af04:	cmp	x0, w24, sxtw
    af08:	b.ne	af18 <grub_mod_fini+0xac18>  // b.any
    af0c:	cbz	w26, af9c <grub_mod_fini+0xac9c>
    af10:	mov	w26, #0x0                   	// #0
    af14:	mov	w24, #0x0                   	// #0
    af18:	ldr	x0, [x20, #48]
    af1c:	sbfiz	x27, x24, #4, #32
    af20:	add	x0, x0, w24, sxtw #4
    af24:	ldr	w0, [x0, #4]
    af28:	cbnz	w0, af94 <grub_mod_fini+0xac94>
    af2c:	mov	w2, w24
    af30:	mov	x1, x20
    af34:	add	x0, sp, #0x80
    af38:	mov	w3, #0x1                   	// #1
    af3c:	bl	3748 <grub_mod_fini+0x3448>
    af40:	cbz	w0, af78 <grub_mod_fini+0xac78>
    af44:	mov	w22, w0
    af48:	str	w22, [sp, #120]
    af4c:	cbz	w22, afb0 <grub_mod_fini+0xacb0>
    af50:	b	acb0 <grub_mod_fini+0xa9b0>
    af54:	str	w1, [x0, x1, lsl #2]
    af58:	add	x1, x1, #0x1
    af5c:	b	ae58 <grub_mod_fini+0xab58>
    af60:	ldr	x2, [x20, #208]
    af64:	ldr	w2, [x2, x0, lsl #2]
    af68:	cmp	w2, w0
    af6c:	b.ne	ae90 <grub_mod_fini+0xab90>  // b.any
    af70:	add	x0, x0, #0x1
    af74:	b	ae7c <grub_mod_fini+0xab7c>
    af78:	ldr	x0, [x20, #48]
    af7c:	add	x0, x0, x27
    af80:	ldr	w0, [x0, #4]
    af84:	cbnz	w0, af94 <grub_mod_fini+0xac94>
    af88:	ldr	x0, [sp, #136]
    af8c:	mov	w26, #0x1                   	// #1
    af90:	bl	0 <grub_free>
    af94:	add	w24, w24, #0x1
    af98:	b	af00 <grub_mod_fini+0xac00>
    af9c:	ldrb	w1, [x21, #56]
    afa0:	tbz	w1, #4, b02c <grub_mod_fini+0xad2c>
    afa4:	ldr	w1, [x20, #140]
    afa8:	cbnz	w1, b03c <grub_mod_fini+0xad3c>
    afac:	str	wzr, [sp, #120]
    afb0:	ldrb	w0, [x19, #160]
    afb4:	tbz	w0, #2, b13c <grub_mod_fini+0xae3c>
    afb8:	cbnz	x23, b13c <grub_mod_fini+0xae3c>
    afbc:	ldr	x0, [x21, #40]
    afc0:	cbnz	x0, b13c <grub_mod_fini+0xae3c>
    afc4:	ldr	x6, [x19, #16]
    afc8:	mov	x5, #0x1                   	// #1
    afcc:	mov	w8, #0x10001               	// #65537
    afd0:	mov	w9, w5
    afd4:	mov	x1, #0x0                   	// #0
    afd8:	mov	w2, #0x0                   	// #0
    afdc:	adrp	x7, 0 <grub_mod_init-0x260>
    afe0:	movk	x8, #0x1, lsl #48
    afe4:	cmp	x6, x1
    afe8:	b.ne	b0ec <grub_mod_fini+0xadec>  // b.any
    afec:	cmp	w25, #0x0
    aff0:	ccmp	w2, #0x0, #0x0, eq  // eq = none
    aff4:	b.eq	b004 <grub_mod_fini+0xad04>  // b.none
    aff8:	mov	w5, #0x7                   	// #7
    affc:	cmp	x1, x23
    b000:	b.ne	b230 <grub_mod_fini+0xaf30>  // b.any
    b004:	ldr	w3, [x19, #140]
    b008:	mov	w1, #0x1                   	// #1
    b00c:	ldrb	w0, [x19, #160]
    b010:	cmp	w3, #0x0
    b014:	str	w1, [x19, #164]
    b018:	and	w0, w0, #0xfffffffb
    b01c:	csel	w2, w2, w1, le
    b020:	bfi	w0, w2, #1, #1
    b024:	strb	w0, [x19, #160]
    b028:	b	b13c <grub_mod_fini+0xae3c>
    b02c:	ldr	x1, [x21, #48]
    b030:	cbz	x1, afa4 <grub_mod_fini+0xaca4>
    b034:	ldrb	w1, [x20, #160]
    b038:	tbz	w1, #0, afa4 <grub_mod_fini+0xaca4>
    b03c:	lsl	x0, x0, #4
    b040:	bl	0 <grub_malloc>
    b044:	str	x0, [x20, #56]
    b048:	cbz	x0, ae1c <grub_mod_fini+0xab1c>
    b04c:	mov	x24, #0x0                   	// #0
    b050:	ldr	x0, [x20, #16]
    b054:	cmp	x0, x24
    b058:	b.hi	b0a0 <grub_mod_fini+0xada0>  // b.pmore
    b05c:	mov	x24, #0x0                   	// #0
    b060:	ldr	x0, [x20, #16]
    b064:	mov	w27, w24
    b068:	cmp	x0, x24
    b06c:	b.ls	af48 <grub_mod_fini+0xac48>  // b.plast
    b070:	ldr	x0, [x20, #48]
    b074:	lsl	x28, x24, #4
    b078:	mov	x26, #0x0                   	// #0
    b07c:	add	x0, x0, x24, lsl #4
    b080:	ldr	x2, [x0, #8]
    b084:	ldr	x0, [x20, #48]
    b088:	add	x0, x0, x28
    b08c:	ldr	w0, [x0, #4]
    b090:	cmp	w0, w26
    b094:	b.gt	b0bc <grub_mod_fini+0xadbc>
    b098:	add	x24, x24, #0x1
    b09c:	b	b060 <grub_mod_fini+0xad60>
    b0a0:	ldr	x0, [x20, #56]
    b0a4:	mov	x2, #0x10                  	// #16
    b0a8:	mov	w1, #0x0                   	// #0
    b0ac:	add	x0, x0, x24, lsl #4
    b0b0:	add	x24, x24, #0x1
    b0b4:	bl	0 <grub_memset>
    b0b8:	b	b050 <grub_mod_fini+0xad50>
    b0bc:	ldrsw	x3, [x2, x26, lsl #2]
    b0c0:	mov	w1, w27
    b0c4:	ldr	x0, [x20, #56]
    b0c8:	str	x2, [sp, #104]
    b0cc:	add	x26, x26, #0x1
    b0d0:	add	x0, x0, x3, lsl #4
    b0d4:	bl	1a5c <grub_mod_fini+0x175c>
    b0d8:	tst	w0, #0xff
    b0dc:	ldr	x2, [sp, #104]
    b0e0:	b.ne	b084 <grub_mod_fini+0xad84>  // b.any
    b0e4:	mov	w22, #0xc                   	// #12
    b0e8:	b	af48 <grub_mod_fini+0xac48>
    b0ec:	ldr	x0, [x19]
    b0f0:	lsl	x4, x1, #4
    b0f4:	add	x3, x0, x1, lsl #4
    b0f8:	ldrb	w3, [x3, #8]
    b0fc:	sub	w3, w3, #0x1
    b100:	cmp	w3, #0xb
    b104:	b.hi	b120 <grub_mod_fini+0xae20>  // b.pmore
    b108:	ldr	x10, [x7]
    b10c:	ldrb	w3, [x10, w3, uxtw]
    b110:	adr	x10, b11c <grub_mod_fini+0xae1c>
    b114:	add	x3, x10, w3, sxtb #2
    b118:	br	x3
    b11c:	mov	w2, #0x1                   	// #1
    b120:	add	x1, x1, #0x1
    b124:	b	afe4 <grub_mod_fini+0xace4>
    b128:	ldr	x0, [x0, x4]
    b12c:	ldr	x3, [x0, #16]
    b130:	cbnz	x3, b13c <grub_mod_fini+0xae3c>
    b134:	ldr	x0, [x0, #24]
    b138:	cbz	x0, b120 <grub_mod_fini+0xae20>
    b13c:	ldr	x0, [x19, #104]
    b140:	ldr	x1, [x19, #48]
    b144:	ldr	x0, [x0, #24]
    b148:	ldr	w0, [x0, #56]
    b14c:	str	w0, [x19, #136]
    b150:	add	x1, x1, w0, sxtw #4
    b154:	add	x0, sp, #0x80
    b158:	bl	2f88 <grub_mod_fini+0x2c88>
    b15c:	str	w0, [sp, #124]
    b160:	mov	w20, w0
    b164:	cbnz	w0, b194 <grub_mod_fini+0xae94>
    b168:	ldr	w0, [x19, #140]
    b16c:	cmp	w0, #0x0
    b170:	b.gt	b320 <grub_mod_fini+0xb020>
    b174:	add	x2, sp, #0x80
    b178:	mov	x1, x19
    b17c:	add	x0, sp, #0x7c
    b180:	mov	w3, #0x0                   	// #0
    b184:	bl	3178 <grub_mod_fini+0x2e78>
    b188:	str	x0, [x19, #72]
    b18c:	cbnz	x0, b328 <grub_mod_fini+0xb028>
    b190:	ldr	w20, [sp, #124]
    b194:	str	w20, [sp, #120]
    b198:	ldr	x20, [x21]
    b19c:	ldr	x0, [x20, #112]
    b1a0:	cbnz	x0, b3ac <grub_mod_fini+0xb0ac>
    b1a4:	mov	w0, #0xf                   	// #15
    b1a8:	str	w0, [x20, #128]
    b1ac:	ldr	x0, [x20, #32]
    b1b0:	stp	xzr, xzr, [x20, #104]
    b1b4:	bl	0 <grub_free>
    b1b8:	str	xzr, [x20, #32]
    b1bc:	add	x0, sp, #0x90
    b1c0:	bl	1f94 <grub_mod_fini+0x1c94>
    b1c4:	ldr	w0, [sp, #120]
    b1c8:	cbnz	w0, ab64 <grub_mod_fini+0xa864>
    b1cc:	ldr	w0, [sp, #120]
    b1d0:	ldp	x19, x20, [sp, #16]
    b1d4:	ldp	x21, x22, [sp, #32]
    b1d8:	ldp	x23, x24, [sp, #48]
    b1dc:	ldp	x25, x26, [sp, #64]
    b1e0:	ldp	x27, x28, [sp, #80]
    b1e4:	ldp	x29, x30, [sp], #256
    b1e8:	ret
    b1ec:	ldrsb	w0, [x0, x4]
    b1f0:	cmp	w0, #0x0
    b1f4:	csel	w25, w25, w9, ge  // ge = tcont
    b1f8:	b	b120 <grub_mod_fini+0xae20>
    b1fc:	ldr	w0, [x0, x4]
    b200:	cmp	w0, #0x40
    b204:	b.hi	b224 <grub_mod_fini+0xaf24>  // b.pmore
    b208:	cmp	w0, #0xf
    b20c:	b.ls	b13c <grub_mod_fini+0xae3c>  // b.plast
    b210:	sub	w0, w0, #0x10
    b214:	lsl	x0, x5, x0
    b218:	tst	x0, x8
    b21c:	b.eq	b13c <grub_mod_fini+0xae3c>  // b.none
    b220:	b	b120 <grub_mod_fini+0xae20>
    b224:	cmp	w0, #0x80
    b228:	b.eq	b120 <grub_mod_fini+0xae20>  // b.none
    b22c:	b	b13c <grub_mod_fini+0xae3c>
    b230:	ldr	x4, [x19]
    b234:	lsl	x6, x23, #4
    b238:	add	x0, x4, x23, lsl #4
    b23c:	ldrb	w3, [x0, #8]
    b240:	cmp	w3, #0x1
    b244:	b.ne	b264 <grub_mod_fini+0xaf64>  // b.any
    b248:	ldrsb	w3, [x4, x6]
    b24c:	tbz	w3, #31, b25c <grub_mod_fini+0xaf5c>
    b250:	ldrb	w3, [x0, #10]
    b254:	and	w3, w3, #0xffffffdf
    b258:	strb	w3, [x0, #10]
    b25c:	add	x23, x23, #0x1
    b260:	b	affc <grub_mod_fini+0xacfc>
    b264:	cmp	w3, #0x5
    b268:	b.ne	b25c <grub_mod_fini+0xaf5c>  // b.any
    b26c:	strb	w5, [x0, #8]
    b270:	b	b25c <grub_mod_fini+0xaf5c>
    b274:	ldr	x5, [sp, #136]
    b278:	ldr	x4, [x19]
    b27c:	ldrsw	x1, [x5, w6, sxtw #2]
    b280:	lsl	x7, x1, #4
    b284:	add	x1, x4, x1, lsl #4
    b288:	ldrb	w0, [x1, #8]
    b28c:	cmp	w0, #0x4
    b290:	b.ne	b2dc <grub_mod_fini+0xafdc>  // b.any
    b294:	mov	x0, #0x0                   	// #0
    b298:	cmp	w3, w0
    b29c:	b.gt	b2f0 <grub_mod_fini+0xaff0>
    b2a0:	cmp	w0, w3
    b2a4:	b.eq	b2dc <grub_mod_fini+0xafdc>  // b.none
    b2a8:	ldr	x0, [x19, #40]
    b2ac:	add	x0, x0, x7
    b2b0:	ldr	x0, [x0, #8]
    b2b4:	ldr	w1, [x0]
    b2b8:	add	x0, sp, #0x80
    b2bc:	bl	1240 <grub_mod_fini+0xf40>
    b2c0:	cbnz	w0, b2dc <grub_mod_fini+0xafdc>
    b2c4:	ldr	x0, [x19, #48]
    b2c8:	add	x1, x0, w1, sxtw #4
    b2cc:	add	x0, sp, #0x80
    b2d0:	bl	2e18 <grub_mod_fini+0x2b18>
    b2d4:	mov	w6, w0
    b2d8:	cbnz	w0, b3a4 <grub_mod_fini+0xb0a4>
    b2dc:	add	w6, w6, #0x1
    b2e0:	ldr	w3, [sp, #132]
    b2e4:	cmp	w6, w3
    b2e8:	b.lt	b274 <grub_mod_fini+0xaf74>  // b.tstop
    b2ec:	b	b174 <grub_mod_fini+0xae74>
    b2f0:	ldrsw	x2, [x5, x0, lsl #2]
    b2f4:	lsl	x8, x2, #4
    b2f8:	add	x2, x4, x2, lsl #4
    b2fc:	ldrb	w2, [x2, #8]
    b300:	cmp	w2, #0x9
    b304:	b.ne	b318 <grub_mod_fini+0xb018>  // b.any
    b308:	ldr	w8, [x4, x8]
    b30c:	ldr	w2, [x1]
    b310:	cmp	w8, w2
    b314:	b.eq	b2a8 <grub_mod_fini+0xafa8>  // b.none
    b318:	add	x0, x0, #0x1
    b31c:	b	b298 <grub_mod_fini+0xaf98>
    b320:	mov	w6, #0x0                   	// #0
    b324:	b	b2e0 <grub_mod_fini+0xafe0>
    b328:	ldrsb	w1, [x0, #80]
    b32c:	tbz	w1, #31, b398 <grub_mod_fini+0xb098>
    b330:	add	x2, sp, #0x80
    b334:	mov	x1, x19
    b338:	mov	w3, #0x1                   	// #1
    b33c:	add	x0, sp, #0x7c
    b340:	bl	3178 <grub_mod_fini+0x2e78>
    b344:	str	x0, [x19, #80]
    b348:	add	x2, sp, #0x80
    b34c:	mov	x1, x19
    b350:	mov	w3, #0x2                   	// #2
    b354:	add	x0, sp, #0x7c
    b358:	bl	3178 <grub_mod_fini+0x2e78>
    b35c:	str	x0, [x19, #88]
    b360:	mov	x1, x19
    b364:	add	x2, sp, #0x80
    b368:	add	x0, sp, #0x7c
    b36c:	mov	w3, #0x6                   	// #6
    b370:	bl	3178 <grub_mod_fini+0x2e78>
    b374:	str	x0, [x19, #96]
    b378:	ldr	x1, [x19, #80]
    b37c:	cbz	x1, b190 <grub_mod_fini+0xae90>
    b380:	ldr	x1, [x19, #88]
    b384:	cbz	x1, b190 <grub_mod_fini+0xae90>
    b388:	cbz	x0, b190 <grub_mod_fini+0xae90>
    b38c:	ldr	x0, [sp, #136]
    b390:	bl	0 <grub_free>
    b394:	b	b194 <grub_mod_fini+0xae94>
    b398:	stp	x0, x0, [x19, #80]
    b39c:	str	x0, [x19, #96]
    b3a0:	b	b38c <grub_mod_fini+0xb08c>
    b3a4:	mov	w20, w0
    b3a8:	b	b194 <grub_mod_fini+0xae94>
    b3ac:	ldr	x22, [x0]
    b3b0:	bl	0 <grub_free>
    b3b4:	mov	x0, x22
    b3b8:	b	b1a0 <grub_mod_fini+0xaea0>
    b3bc:	mov	w0, #0xc                   	// #12
    b3c0:	b	b1d0 <grub_mod_fini+0xaed0>
    b3c4:	nop
	...

000000000000b410 <re_compile_pattern>:
    b410:	stp	x29, x30, [sp, #-16]!
    b414:	mov	x5, x0
    b418:	mov	x0, x2
    b41c:	adrp	x2, 0 <grub_mod_init-0x260>
    b420:	mov	x29, sp
    b424:	mov	w6, #0x6f                  	// #111
    b428:	ldr	x2, [x2]
    b42c:	ldr	x3, [x2]
    b430:	ldrb	w2, [x0, #56]
    b434:	ubfx	w4, w3, #25, #1
    b438:	and	w2, w2, w6
    b43c:	ubfiz	w4, w4, #4, #4
    b440:	orr	w4, w4, #0xffffff80
    b444:	orr	w4, w4, w2
    b448:	strb	w4, [x0, #56]
    b44c:	mov	x2, x1
    b450:	mov	x1, x5
    b454:	bl	aa18 <grub_mod_fini+0xa718>
    b458:	cbz	w0, b47c <re_compile_pattern+0x6c>
    b45c:	adrp	x1, 0 <grub_mod_init-0x260>
    b460:	ldr	x2, [x1]
    b464:	add	x1, x2, #0xa2
    b468:	add	x2, x2, #0x220
    b46c:	ldr	x0, [x2, w0, sxtw #3]
    b470:	add	x0, x1, x0
    b474:	ldp	x29, x30, [sp], #16
    b478:	ret
    b47c:	mov	x0, #0x0                   	// #0
    b480:	b	b474 <re_compile_pattern+0x64>
    b484:	nop
	...

000000000000b498 <re_set_syntax>:
    b498:	mov	x2, x0
    b49c:	adrp	x0, 0 <grub_mod_init-0x260>
    b4a0:	ldr	x1, [x0]
    b4a4:	ldr	x0, [x1]
    b4a8:	str	x2, [x1]
    b4ac:	ret
	...

000000000000b4b8 <re_compile_fastmap>:
    b4b8:	stp	x29, x30, [sp, #-48]!
    b4bc:	mov	x2, #0x100                 	// #256
    b4c0:	mov	w1, #0x0                   	// #0
    b4c4:	mov	x29, sp
    b4c8:	stp	x19, x20, [sp, #16]
    b4cc:	mov	x19, x0
    b4d0:	ldr	x20, [x0]
    b4d4:	str	x21, [sp, #32]
    b4d8:	ldr	x21, [x0, #32]
    b4dc:	mov	x0, x21
    b4e0:	bl	0 <grub_memset>
    b4e4:	ldr	x1, [x20, #72]
    b4e8:	mov	x0, x19
    b4ec:	mov	x2, x21
    b4f0:	bl	46c0 <grub_mod_fini+0x43c0>
    b4f4:	ldp	x0, x1, [x20, #72]
    b4f8:	cmp	x0, x1
    b4fc:	b.eq	b50c <re_compile_fastmap+0x54>  // b.none
    b500:	mov	x2, x21
    b504:	mov	x0, x19
    b508:	bl	46c0 <grub_mod_fini+0x43c0>
    b50c:	ldr	x0, [x20, #72]
    b510:	ldr	x1, [x20, #88]
    b514:	cmp	x0, x1
    b518:	b.eq	b528 <re_compile_fastmap+0x70>  // b.none
    b51c:	mov	x2, x21
    b520:	mov	x0, x19
    b524:	bl	46c0 <grub_mod_fini+0x43c0>
    b528:	ldr	x0, [x20, #72]
    b52c:	ldr	x1, [x20, #96]
    b530:	cmp	x0, x1
    b534:	b.eq	b544 <re_compile_fastmap+0x8c>  // b.none
    b538:	mov	x2, x21
    b53c:	mov	x0, x19
    b540:	bl	46c0 <grub_mod_fini+0x43c0>
    b544:	ldrb	w0, [x19, #56]
    b548:	ldr	x21, [sp, #32]
    b54c:	orr	w0, w0, #0x8
    b550:	strb	w0, [x19, #56]
    b554:	mov	w0, #0x0                   	// #0
    b558:	ldp	x19, x20, [sp, #16]
    b55c:	ldp	x29, x30, [sp], #48
    b560:	ret
    b564:	sub	sp, sp, #0x80
    b568:	cmp	w3, #0x0
    b56c:	ccmp	w3, w2, #0x0, ge  // ge = tcont
    b570:	stp	x29, x30, [sp, #16]
    b574:	add	x29, sp, #0x10
    b578:	stp	x19, x20, [sp, #32]
    b57c:	stp	x21, x22, [sp, #48]
    b580:	add	w21, w3, w4
    b584:	stp	x23, x24, [sp, #64]
    b588:	mov	x23, x0
    b58c:	and	w0, w7, #0xff
    b590:	stp	x25, x26, [sp, #80]
    b594:	stp	x27, x28, [sp, #96]
    b598:	str	w0, [sp, #116]
    b59c:	b.gt	b868 <re_compile_fastmap+0x3b0>
    b5a0:	mov	x26, x1
    b5a4:	mov	w25, w2
    b5a8:	mov	w22, w3
    b5ac:	mov	w27, w5
    b5b0:	mov	x19, x6
    b5b4:	cmp	w21, w2
    b5b8:	b.gt	b638 <re_compile_fastmap+0x180>
    b5bc:	cmp	w4, #0x0
    b5c0:	ccmp	w3, w21, #0x4, ge  // ge = tcont
    b5c4:	b.gt	b638 <re_compile_fastmap+0x180>
    b5c8:	tbnz	w21, #31, b640 <re_compile_fastmap+0x188>
    b5cc:	cmp	w4, #0x0
    b5d0:	ccmp	w3, w21, #0x0, lt  // lt = tstop
    b5d4:	csel	w21, w21, wzr, gt
    b5d8:	ldrb	w0, [x23, #56]
    b5dc:	cmp	w21, w22
    b5e0:	ubfx	x28, x0, #5, #2
    b5e4:	b.le	b5fc <re_compile_fastmap+0x144>
    b5e8:	ldr	x1, [x23, #32]
    b5ec:	cbz	x1, b5fc <re_compile_fastmap+0x144>
    b5f0:	tbnz	w0, #3, b5fc <re_compile_fastmap+0x144>
    b5f4:	mov	x0, x23
    b5f8:	bl	b4b8 <re_compile_fastmap>
    b5fc:	ldrb	w0, [x23, #56]
    b600:	tbnz	w0, #4, b62c <re_compile_fastmap+0x174>
    b604:	cbz	x19, b6c8 <re_compile_fastmap+0x210>
    b608:	and	w0, w0, #0x6
    b60c:	cmp	w0, #0x4
    b610:	ldr	x1, [x23, #48]
    b614:	b.ne	b648 <re_compile_fastmap+0x190>  // b.any
    b618:	ldr	w20, [x19]
    b61c:	cmp	x1, w20, uxtw
    b620:	b.cc	b648 <re_compile_fastmap+0x190>  // b.lo, b.ul, b.last
    b624:	cmp	w20, #0x0
    b628:	b.gt	b64c <re_compile_fastmap+0x194>
    b62c:	mov	w20, #0x1                   	// #1
    b630:	mov	x19, #0x0                   	// #0
    b634:	b	b64c <re_compile_fastmap+0x194>
    b638:	mov	w21, w25
    b63c:	b	b5d8 <re_compile_fastmap+0x120>
    b640:	mov	w21, #0x0                   	// #0
    b644:	b	b5d8 <re_compile_fastmap+0x120>
    b648:	add	w20, w1, #0x1
    b64c:	sxtw	x6, w20
    b650:	sbfiz	x0, x20, #3, #32
    b654:	str	x6, [sp, #120]
    b658:	bl	0 <grub_malloc>
    b65c:	mov	x24, x0
    b660:	cbz	x0, b870 <re_compile_fastmap+0x3b8>
    b664:	ldr	x6, [sp, #120]
    b668:	str	w28, [sp]
    b66c:	mov	x7, x0
    b670:	mov	w5, w27
    b674:	mov	w4, w21
    b678:	mov	w3, w22
    b67c:	mov	w2, w25
    b680:	mov	x1, x26
    b684:	mov	x0, x23
    b688:	bl	7394 <grub_mod_fini+0x7094>
    b68c:	cbz	w0, b6d0 <re_compile_fastmap+0x218>
    b690:	cmp	w0, #0x1
    b694:	b.eq	b860 <re_compile_fastmap+0x3a8>  // b.none
    b698:	mov	w19, #0xfffffffe            	// #-2
    b69c:	mov	x0, x24
    b6a0:	bl	0 <grub_free>
    b6a4:	mov	w0, w19
    b6a8:	ldp	x29, x30, [sp, #16]
    b6ac:	ldp	x19, x20, [sp, #32]
    b6b0:	ldp	x21, x22, [sp, #48]
    b6b4:	ldp	x23, x24, [sp, #64]
    b6b8:	ldp	x25, x26, [sp, #80]
    b6bc:	ldp	x27, x28, [sp, #96]
    b6c0:	add	sp, sp, #0x80
    b6c4:	ret
    b6c8:	mov	w20, #0x1                   	// #1
    b6cc:	b	b64c <re_compile_fastmap+0x194>
    b6d0:	cbnz	x19, b704 <re_compile_fastmap+0x24c>
    b6d4:	ldr	w0, [sp, #116]
    b6d8:	ldr	w19, [x24]
    b6dc:	cbz	w0, b69c <re_compile_fastmap+0x1e4>
    b6e0:	adrp	x0, 0 <grub_mod_init-0x260>
    b6e4:	cmp	w19, w22
    b6e8:	cset	w2, eq  // eq = none
    b6ec:	mov	w1, #0x1be                 	// #446
    b6f0:	ldr	x0, [x0]
    b6f4:	bl	21d8 <grub_mod_fini+0x1ed8>
    b6f8:	ldr	w19, [x24, #4]
    b6fc:	sub	w19, w19, w22
    b700:	b	b69c <re_compile_fastmap+0x1e4>
    b704:	ldrb	w21, [x23, #56]
    b708:	add	w26, w20, #0x1
    b70c:	ubfx	x21, x21, #1, #2
    b710:	cbnz	w21, b7b0 <re_compile_fastmap+0x2f8>
    b714:	sbfiz	x21, x26, #2, #32
    b718:	mov	x0, x21
    b71c:	bl	0 <grub_malloc>
    b720:	str	x0, [x19, #8]
    b724:	cbnz	x0, b744 <re_compile_fastmap+0x28c>
    b728:	mov	w21, #0x0                   	// #0
    b72c:	ldrb	w0, [x23, #56]
    b730:	bfi	w0, w21, #1, #2
    b734:	strb	w0, [x23, #56]
    b738:	tst	w0, #0x6
    b73c:	b.ne	b6d4 <re_compile_fastmap+0x21c>  // b.any
    b740:	b	b698 <re_compile_fastmap+0x1e0>
    b744:	mov	x0, x21
    b748:	bl	0 <grub_malloc>
    b74c:	str	x0, [x19, #16]
    b750:	cbnz	x0, b760 <re_compile_fastmap+0x2a8>
    b754:	ldr	x0, [x19, #8]
    b758:	bl	0 <grub_free>
    b75c:	b	b728 <re_compile_fastmap+0x270>
    b760:	mov	w21, #0x1                   	// #1
    b764:	str	w26, [x19]
    b768:	mov	x1, x24
    b76c:	mov	x0, #0x0                   	// #0
    b770:	cmp	w20, w0
    b774:	b.gt	b838 <re_compile_fastmap+0x380>
    b778:	cmp	w20, #0x0
    b77c:	mov	w1, #0xffffffff            	// #-1
    b780:	csel	w20, w20, wzr, ge  // ge = tcont
    b784:	sbfiz	x0, x20, #2, #32
    b788:	ldr	w2, [x19]
    b78c:	cmp	w20, w2
    b790:	b.cs	b72c <re_compile_fastmap+0x274>  // b.hs, b.nlast
    b794:	ldr	x2, [x19, #16]
    b798:	add	w20, w20, #0x1
    b79c:	str	w1, [x2, x0]
    b7a0:	ldr	x2, [x19, #8]
    b7a4:	str	w1, [x2, x0]
    b7a8:	add	x0, x0, #0x4
    b7ac:	b	b788 <re_compile_fastmap+0x2d0>
    b7b0:	cmp	w21, #0x1
    b7b4:	b.ne	b800 <re_compile_fastmap+0x348>  // b.any
    b7b8:	ldr	w0, [x19]
    b7bc:	cmp	w0, w26
    b7c0:	b.cs	b768 <re_compile_fastmap+0x2b0>  // b.hs, b.nlast
    b7c4:	ldr	x0, [x19, #8]
    b7c8:	sbfiz	x28, x26, #2, #32
    b7cc:	mov	x1, x28
    b7d0:	bl	0 <grub_realloc>
    b7d4:	mov	x27, x0
    b7d8:	cbz	x0, b728 <re_compile_fastmap+0x270>
    b7dc:	ldr	x0, [x19, #16]
    b7e0:	mov	x1, x28
    b7e4:	bl	0 <grub_realloc>
    b7e8:	cbnz	x0, b7f4 <re_compile_fastmap+0x33c>
    b7ec:	mov	x0, x27
    b7f0:	b	b758 <re_compile_fastmap+0x2a0>
    b7f4:	str	w26, [x19]
    b7f8:	stp	x27, x0, [x19, #8]
    b7fc:	b	b768 <re_compile_fastmap+0x2b0>
    b800:	cmp	w21, #0x2
    b804:	adrp	x21, 0 <grub_mod_init-0x260>
    b808:	cset	w2, eq  // eq = none
    b80c:	mov	w1, #0x1f9                 	// #505
    b810:	ldr	x0, [x21]
    b814:	bl	21d8 <grub_mod_fini+0x1ed8>
    b818:	ldr	w0, [x19]
    b81c:	mov	w1, #0x1fb                 	// #507
    b820:	cmp	w0, w20
    b824:	ldr	x0, [x21]
    b828:	cset	w2, cs  // cs = hs, nlast
    b82c:	mov	w21, #0x2                   	// #2
    b830:	bl	21d8 <grub_mod_fini+0x1ed8>
    b834:	b	b768 <re_compile_fastmap+0x2b0>
    b838:	ldr	x3, [x19, #8]
    b83c:	lsl	x2, x0, #2
    b840:	ldr	w4, [x1]
    b844:	add	x0, x0, #0x1
    b848:	add	x1, x1, #0x8
    b84c:	str	w4, [x3, x2]
    b850:	ldr	x3, [x19, #16]
    b854:	ldur	w4, [x1, #-4]
    b858:	str	w4, [x3, x2]
    b85c:	b	b770 <re_compile_fastmap+0x2b8>
    b860:	mov	w19, #0xffffffff            	// #-1
    b864:	b	b69c <re_compile_fastmap+0x1e4>
    b868:	mov	w19, #0xffffffff            	// #-1
    b86c:	b	b6a4 <re_compile_fastmap+0x1ec>
    b870:	mov	w19, #0xfffffffe            	// #-2
    b874:	b	b6a4 <re_compile_fastmap+0x1ec>
	...
    b880:	stp	x29, x30, [sp, #-112]!
    b884:	mov	x29, sp
    b888:	stp	x19, x20, [sp, #16]
    b88c:	sxtw	x19, w2
    b890:	cmp	w19, #0x0
    b894:	stp	x21, x22, [sp, #32]
    b898:	ccmp	w4, #0x0, #0x1, ge  // ge = tcont
    b89c:	stp	x23, x24, [sp, #48]
    b8a0:	stp	x25, x26, [sp, #64]
    b8a4:	stp	x27, x28, [sp, #80]
    b8a8:	ldr	w27, [sp, #112]
    b8ac:	b.ge	b8d4 <re_compile_fastmap+0x41c>  // b.tcont
    b8b0:	mov	w19, #0xfffffffe            	// #-2
    b8b4:	mov	w0, w19
    b8b8:	ldp	x19, x20, [sp, #16]
    b8bc:	ldp	x21, x22, [sp, #32]
    b8c0:	ldp	x23, x24, [sp, #48]
    b8c4:	ldp	x25, x26, [sp, #64]
    b8c8:	ldp	x27, x28, [sp, #80]
    b8cc:	ldp	x29, x30, [sp], #112
    b8d0:	ret
    b8d4:	tbnz	w27, #31, b8b0 <re_compile_fastmap+0x3f8>
    b8d8:	mov	w28, w4
    b8dc:	adds	w26, w19, w4
    b8e0:	b.vs	b8b0 <re_compile_fastmap+0x3f8>
    b8e4:	mov	x22, x0
    b8e8:	mov	w23, w5
    b8ec:	mov	w24, w6
    b8f0:	mov	x25, x7
    b8f4:	cbz	w4, b968 <re_compile_fastmap+0x4b0>
    b8f8:	str	x1, [sp, #104]
    b8fc:	mov	x21, x3
    b900:	cbz	w19, b964 <re_compile_fastmap+0x4ac>
    b904:	sxtw	x0, w26
    b908:	bl	0 <grub_malloc>
    b90c:	mov	x20, x0
    b910:	cbz	x0, b8b0 <re_compile_fastmap+0x3f8>
    b914:	ldr	x1, [sp, #104]
    b918:	mov	x2, x19
    b91c:	bl	1c70 <grub_mod_fini+0x1970>
    b920:	mov	x1, x21
    b924:	sxtw	x2, w28
    b928:	add	x0, x20, x19
    b92c:	bl	1c70 <grub_mod_fini+0x1970>
    b930:	mov	x1, x20
    b934:	ldrb	w7, [sp, #120]
    b938:	mov	x6, x25
    b93c:	mov	w5, w27
    b940:	mov	w4, w24
    b944:	mov	w3, w23
    b948:	mov	w2, w26
    b94c:	mov	x0, x22
    b950:	bl	b564 <re_compile_fastmap+0xac>
    b954:	mov	w19, w0
    b958:	mov	x0, x20
    b95c:	bl	0 <grub_free>
    b960:	b	b8b4 <re_compile_fastmap+0x3fc>
    b964:	mov	x1, x3
    b968:	mov	x20, #0x0                   	// #0
    b96c:	b	b934 <re_compile_fastmap+0x47c>

000000000000b970 <regcomp>:
    b970:	stp	x29, x30, [sp, #-64]!
    b974:	mov	x29, sp
    b978:	stp	x19, x20, [sp, #16]
    b97c:	mov	w20, w2
    b980:	mov	x19, x0
    b984:	tst	x20, #0x1
    b988:	stp	x21, x22, [sp, #32]
    b98c:	mov	x21, #0xb2fc                	// #45820
    b990:	str	x23, [sp, #48]
    b994:	mov	x23, #0x2c6                 	// #710
    b998:	stp	xzr, xzr, [x0]
    b99c:	mov	x22, x1
    b9a0:	movk	x21, #0x3, lsl #16
    b9a4:	str	xzr, [x0, #16]
    b9a8:	movk	x23, #0x101, lsl #16
    b9ac:	mov	x0, #0x100                 	// #256
    b9b0:	csel	x23, x21, x23, ne  // ne = any
    b9b4:	bl	0 <grub_malloc>
    b9b8:	str	x0, [x19, #32]
    b9bc:	cbz	x0, ba68 <regcomp+0xf8>
    b9c0:	sbfiz	x21, x20, #21, #32
    b9c4:	and	x21, x21, #0x400000
    b9c8:	orr	x21, x21, x23
    b9cc:	tbz	w20, #2, ba4c <regcomp+0xdc>
    b9d0:	and	x21, x21, #0xffffffffffffffbf
    b9d4:	mov	w0, #0x1                   	// #1
    b9d8:	orr	x21, x21, #0x100
    b9dc:	ubfx	x20, x20, #3, #1
    b9e0:	ubfiz	w0, w0, #7, #1
    b9e4:	mov	w1, #0x6f                  	// #111
    b9e8:	str	xzr, [x19, #40]
    b9ec:	orr	w20, w0, w20, lsl #4
    b9f0:	ldrb	w0, [x19, #56]
    b9f4:	and	w0, w0, w1
    b9f8:	orr	w20, w20, w0
    b9fc:	strb	w20, [x19, #56]
    ba00:	mov	x0, x22
    ba04:	bl	0 <grub_strlen>
    ba08:	mov	x2, x0
    ba0c:	mov	x3, x21
    ba10:	mov	x1, x22
    ba14:	mov	x0, x19
    ba18:	bl	aa18 <grub_mod_fini+0xa718>
    ba1c:	mov	w20, w0
    ba20:	cmp	w0, #0x10
    ba24:	b.eq	ba54 <regcomp+0xe4>  // b.none
    ba28:	cbnz	w0, ba58 <regcomp+0xe8>
    ba2c:	mov	x0, x19
    ba30:	bl	b4b8 <re_compile_fastmap>
    ba34:	mov	w0, w20
    ba38:	ldp	x19, x20, [sp, #16]
    ba3c:	ldp	x21, x22, [sp, #32]
    ba40:	ldr	x23, [sp, #48]
    ba44:	ldp	x29, x30, [sp], #64
    ba48:	ret
    ba4c:	mov	w0, #0x0                   	// #0
    ba50:	b	b9dc <regcomp+0x6c>
    ba54:	mov	w20, #0x8                   	// #8
    ba58:	ldr	x0, [x19, #32]
    ba5c:	bl	0 <grub_free>
    ba60:	str	xzr, [x19, #32]
    ba64:	b	ba34 <regcomp+0xc4>
    ba68:	mov	w20, #0xc                   	// #12
    ba6c:	b	ba34 <regcomp+0xc4>

000000000000ba70 <regerror>:
    ba70:	stp	x29, x30, [sp, #-48]!
    ba74:	cmp	w0, #0x10
    ba78:	mov	x29, sp
    ba7c:	stp	x19, x20, [sp, #16]
    ba80:	stp	x21, x22, [sp, #32]
    ba84:	mov	x22, x2
    ba88:	mov	x21, x3
    ba8c:	b.hi	baec <regerror+0x7c>  // b.pmore
    ba90:	adrp	x1, 0 <grub_mod_init-0x260>
    ba94:	ldr	x1, [x1]
    ba98:	add	x20, x1, #0xa2
    ba9c:	add	x1, x1, #0x220
    baa0:	ldr	x1, [x1, w0, sxtw #3]
    baa4:	add	x20, x20, x1
    baa8:	mov	x0, x20
    baac:	bl	0 <grub_strlen>
    bab0:	add	x19, x0, #0x1
    bab4:	cbz	x21, bad8 <regerror+0x68>
    bab8:	mov	x2, x19
    babc:	cmp	x19, x21
    bac0:	b.ls	bacc <regerror+0x5c>  // b.plast
    bac4:	sub	x2, x21, #0x1
    bac8:	strb	wzr, [x22, x2]
    bacc:	mov	x1, x20
    bad0:	mov	x0, x22
    bad4:	bl	1c70 <grub_mod_fini+0x1970>
    bad8:	mov	x0, x19
    badc:	ldp	x19, x20, [sp, #16]
    bae0:	ldp	x21, x22, [sp, #32]
    bae4:	ldp	x29, x30, [sp], #48
    bae8:	ret
    baec:	adrp	x0, 0 <grub_mod_init-0x260>
    baf0:	ldr	x20, [x0]
    baf4:	b	baa8 <regerror+0x38>
	...

000000000000bb08 <regfree>:
    bb08:	stp	x29, x30, [sp, #-32]!
    bb0c:	mov	x29, sp
    bb10:	str	x19, [sp, #16]
    bb14:	mov	x19, x0
    bb18:	ldr	x0, [x0]
    bb1c:	cbz	x0, bb24 <regfree+0x1c>
    bb20:	bl	1fd8 <grub_mod_fini+0x1cd8>
    bb24:	ldr	x0, [x19, #32]
    bb28:	stp	xzr, xzr, [x19]
    bb2c:	bl	0 <grub_free>
    bb30:	str	xzr, [x19, #32]
    bb34:	ldr	x0, [x19, #40]
    bb38:	bl	0 <grub_free>
    bb3c:	str	xzr, [x19, #40]
    bb40:	ldr	x19, [sp, #16]
    bb44:	ldp	x29, x30, [sp], #32
    bb48:	ret

000000000000bb4c <regexec>:
    bb4c:	tst	w4, #0xfffffff8
    bb50:	b.ne	bbf4 <regexec+0xa8>  // b.any
    bb54:	sub	sp, sp, #0x50
    bb58:	stp	x29, x30, [sp, #16]
    bb5c:	add	x29, sp, #0x10
    bb60:	stp	x19, x20, [sp, #32]
    bb64:	mov	x20, x0
    bb68:	mov	w19, w4
    bb6c:	stp	x21, x22, [sp, #48]
    bb70:	mov	x21, x1
    bb74:	mov	x22, x3
    bb78:	stp	x23, x24, [sp, #64]
    bb7c:	mov	x24, x2
    bb80:	and	w23, w4, #0x4
    bb84:	tbz	w19, #2, bbd8 <regexec+0x8c>
    bb88:	ldp	w23, w5, [x3]
    bb8c:	ldrb	w0, [x20, #56]
    bb90:	str	w19, [sp]
    bb94:	tbz	w0, #4, bbe8 <regexec+0x9c>
    bb98:	mov	x7, #0x0                   	// #0
    bb9c:	mov	x6, #0x0                   	// #0
    bba0:	mov	w3, w23
    bba4:	mov	x1, x21
    bba8:	mov	w4, w5
    bbac:	mov	w2, w5
    bbb0:	mov	x0, x20
    bbb4:	bl	7394 <grub_mod_fini+0x7094>
    bbb8:	cmp	w0, #0x0
    bbbc:	cset	w0, ne  // ne = any
    bbc0:	ldp	x29, x30, [sp, #16]
    bbc4:	ldp	x19, x20, [sp, #32]
    bbc8:	ldp	x21, x22, [sp, #48]
    bbcc:	ldp	x23, x24, [sp, #64]
    bbd0:	add	sp, sp, #0x50
    bbd4:	ret
    bbd8:	mov	x0, x1
    bbdc:	bl	0 <grub_strlen>
    bbe0:	mov	w5, w0
    bbe4:	b	bb8c <regexec+0x40>
    bbe8:	mov	x7, x22
    bbec:	mov	x6, x24
    bbf0:	b	bba0 <regexec+0x54>
    bbf4:	mov	w0, #0x2                   	// #2
    bbf8:	ret

000000000000bbfc <re_match>:
    bbfc:	mov	x6, x4
    bc00:	mov	w5, w2
    bc04:	mov	w7, #0x1                   	// #1
    bc08:	mov	w4, #0x0                   	// #0
    bc0c:	b	b564 <re_compile_fastmap+0xac>

000000000000bc10 <re_search>:
    bc10:	mov	x6, x5
    bc14:	mov	w7, #0x0                   	// #0
    bc18:	mov	w5, w2
    bc1c:	b	b564 <re_compile_fastmap+0xac>

000000000000bc20 <re_match_2>:
    bc20:	sub	sp, sp, #0x20
    bc24:	mov	w8, #0x1                   	// #1
    bc28:	stp	x29, x30, [sp, #16]
    bc2c:	add	x29, sp, #0x10
    bc30:	str	w7, [sp]
    bc34:	mov	x7, x6
    bc38:	strb	w8, [sp, #8]
    bc3c:	mov	w6, #0x0                   	// #0
    bc40:	bl	b880 <re_compile_fastmap+0x3c8>
    bc44:	ldp	x29, x30, [sp, #16]
    bc48:	add	sp, sp, #0x20
    bc4c:	ret

000000000000bc50 <re_search_2>:
    bc50:	sub	sp, sp, #0x20
    bc54:	stp	x29, x30, [sp, #16]
    bc58:	add	x29, sp, #0x10
    bc5c:	ldr	w8, [sp, #32]
    bc60:	str	w8, [sp]
    bc64:	strb	wzr, [sp, #8]
    bc68:	bl	b880 <re_compile_fastmap+0x3c8>
    bc6c:	ldp	x29, x30, [sp, #16]
    bc70:	add	sp, sp, #0x20
    bc74:	ret

000000000000bc78 <re_set_registers>:
    bc78:	ldrb	w5, [x0, #56]
    bc7c:	cbz	w2, bc98 <re_set_registers+0x20>
    bc80:	mov	w6, #0x1                   	// #1
    bc84:	bfi	w5, w6, #1, #2
    bc88:	strb	w5, [x0, #56]
    bc8c:	str	w2, [x1]
    bc90:	stp	x3, x4, [x1, #8]
    bc94:	ret
    bc98:	and	w5, w5, #0xfffffff9
    bc9c:	strb	w5, [x0, #56]
    bca0:	str	wzr, [x1]
    bca4:	stp	xzr, xzr, [x1, #8]
    bca8:	b	bc94 <re_set_registers+0x1c>
