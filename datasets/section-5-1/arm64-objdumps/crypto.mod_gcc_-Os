
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//crypto.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_burn_stack-0x10c>:
   0:	mov	x5, #0x0                   	// #0
   4:	add	x8, x0, x5
   8:	add	x7, x2, x5
   c:	add	x6, x1, x5
  10:	subs	x9, x3, x5
  14:	b.eq	58 <grub_burn_stack-0xb4>  // b.none
  18:	orr	x4, x6, x7
  1c:	orr	x4, x4, x8
  20:	ands	x4, x4, #0x7
  24:	b.ne	5c <grub_burn_stack-0xb0>  // b.any
  28:	mov	x1, #0x0                   	// #0
  2c:	sub	x0, x9, x1
  30:	cmp	x0, #0x7
  34:	b.hi	74 <grub_burn_stack-0x98>  // b.pmore
  38:	lsr	x0, x9, #3
  3c:	mov	x1, #0xfffffffffffffff8    	// #-8
  40:	add	x6, x6, x0, lsl #3
  44:	add	x7, x7, x0, lsl #3
  48:	madd	x1, x0, x1, x9
  4c:	add	x0, x8, x0, lsl #3
  50:	cmp	x4, x1
  54:	b.ne	8c <grub_burn_stack-0x80>  // b.any
  58:	ret
  5c:	ldrb	w4, [x1, x5]
  60:	ldrb	w6, [x2, x5]
  64:	eor	w4, w4, w6
  68:	strb	w4, [x0, x5]
  6c:	add	x5, x5, #0x1
  70:	b	4 <grub_burn_stack-0x108>
  74:	ldr	x0, [x6, x1]
  78:	ldr	x2, [x7, x1]
  7c:	eor	x0, x0, x2
  80:	str	x0, [x8, x1]
  84:	add	x1, x1, #0x8
  88:	b	2c <grub_burn_stack-0xe0>
  8c:	ldrb	w2, [x6, x4]
  90:	ldrb	w3, [x7, x4]
  94:	eor	w2, w2, w3
  98:	strb	w2, [x0, x4]
  9c:	add	x4, x4, #0x1
  a0:	b	50 <grub_burn_stack-0xbc>
  a4:	mov	x4, #0x0                   	// #0
  a8:	ldrb	w3, [x0, x4]
  ac:	ldrb	w2, [x1, x4]
  b0:	sub	w6, w3, #0x41
  b4:	sub	w5, w2, #0x41
  b8:	cbz	w3, ec <grub_burn_stack-0x20>
  bc:	mov	w7, w3
  c0:	cbz	w2, ec <grub_burn_stack-0x20>
  c4:	cmp	w6, #0x19
  c8:	b.hi	d0 <grub_burn_stack-0x3c>  // b.pmore
  cc:	add	w7, w3, #0x20
  d0:	mov	w8, w2
  d4:	cmp	w5, #0x19
  d8:	b.hi	e0 <grub_burn_stack-0x2c>  // b.pmore
  dc:	add	w8, w2, #0x20
  e0:	add	x4, x4, #0x1
  e4:	cmp	w8, w7
  e8:	b.eq	a8 <grub_burn_stack-0x64>  // b.none
  ec:	cmp	w6, #0x19
  f0:	b.hi	f8 <grub_burn_stack-0x14>  // b.pmore
  f4:	add	w3, w3, #0x20
  f8:	cmp	w5, #0x19
  fc:	b.hi	104 <grub_burn_stack-0x8>  // b.pmore
 100:	add	w2, w2, #0x20
 104:	sub	w0, w3, w2
 108:	ret

000000000000010c <grub_burn_stack>:
 10c:	stp	x29, x30, [sp, #-96]!
 110:	mov	x2, #0x40                  	// #64
 114:	mov	w1, #0x0                   	// #0
 118:	mov	x29, sp
 11c:	str	x19, [sp, #16]
 120:	mov	x19, x0
 124:	add	x0, sp, #0x20
 128:	bl	0 <grub_memset>
 12c:	cmp	x19, #0x40
 130:	b.ls	13c <grub_burn_stack+0x30>  // b.plast
 134:	sub	x0, x19, #0x40
 138:	bl	10c <grub_burn_stack>
 13c:	ldr	x19, [sp, #16]
 140:	ldp	x29, x30, [sp], #96
 144:	ret

0000000000000148 <_gcry_burn_stack>:
 148:	sxtw	x0, w0
 14c:	b	10c <grub_burn_stack>

0000000000000150 <_gcry_assert_failed>:
 150:	stp	x29, x30, [sp, #-16]!
 154:	mov	x4, x3
 158:	mov	w3, w2
 15c:	mov	x2, x1
 160:	mov	x1, x0
 164:	adrp	x0, 0 <grub_burn_stack-0x10c>
 168:	mov	x29, sp
 16c:	ldr	x0, [x0]
 170:	bl	0 <grub_fatal>
 174:	nop
	...

0000000000000180 <_gcry_log_error>:
 180:	stp	x29, x30, [sp, #-160]!
 184:	mov	x29, sp
 188:	stp	x19, x20, [sp, #16]
 18c:	mov	x20, x0
 190:	adrp	x0, 0 <grub_burn_stack-0x10c>
 194:	stp	x1, x2, [sp, #104]
 198:	ldr	x0, [x0]
 19c:	stp	x3, x4, [sp, #120]
 1a0:	stp	x5, x6, [sp, #136]
 1a4:	str	x7, [sp, #152]
 1a8:	bl	0 <grub_env_get>
 1ac:	cbz	x0, 20c <_gcry_log_error+0x8c>
 1b0:	adrp	x1, 0 <grub_burn_stack-0x10c>
 1b4:	mov	x19, x0
 1b8:	ldr	x1, [x1]
 1bc:	bl	0 <grub_strword>
 1c0:	cbz	w0, 218 <_gcry_log_error+0x98>
 1c4:	adrp	x0, 0 <grub_burn_stack-0x10c>
 1c8:	ldr	x0, [x0]
 1cc:	bl	0 <grub_printf>
 1d0:	str	wzr, [sp, #92]
 1d4:	add	x0, sp, #0xa0
 1d8:	stp	x0, x0, [sp, #64]
 1dc:	add	x0, sp, #0x60
 1e0:	str	x0, [sp, #80]
 1e4:	mov	w0, #0xffffffc8            	// #-56
 1e8:	str	w0, [sp, #88]
 1ec:	ldp	x0, x1, [sp, #64]
 1f0:	stp	x0, x1, [sp, #32]
 1f4:	ldp	x0, x1, [sp, #80]
 1f8:	stp	x0, x1, [sp, #48]
 1fc:	add	x1, sp, #0x20
 200:	mov	x0, x20
 204:	bl	0 <grub_vprintf>
 208:	bl	0 <grub_refresh>
 20c:	ldp	x19, x20, [sp, #16]
 210:	ldp	x29, x30, [sp], #160
 214:	ret
 218:	adrp	x0, 0 <grub_burn_stack-0x10c>
 21c:	ldr	x1, [x0]
 220:	mov	x0, x19
 224:	bl	0 <grub_strword>
 228:	cbnz	w0, 1c4 <_gcry_log_error+0x44>
 22c:	b	20c <_gcry_log_error+0x8c>
	...

0000000000000250 <grub_cipher_register>:
 250:	adrp	x1, 0 <grub_burn_stack-0x10c>
 254:	ldr	x1, [x1]
 258:	ldr	x2, [x1]
 25c:	str	x0, [x1]
 260:	str	x2, [x0, #88]
 264:	ret
	...

0000000000000270 <grub_cipher_unregister>:
 270:	adrp	x1, 0 <grub_burn_stack-0x10c>
 274:	ldr	x2, [x1]
 278:	ldr	x1, [x2]
 27c:	cbz	x1, 290 <grub_cipher_unregister+0x20>
 280:	cmp	x1, x0
 284:	ldr	x3, [x1, #88]
 288:	b.ne	294 <grub_cipher_unregister+0x24>  // b.any
 28c:	str	x3, [x2]
 290:	ret
 294:	add	x2, x1, #0x58
 298:	mov	x1, x3
 29c:	b	27c <grub_cipher_unregister+0xc>
	...

00000000000002a8 <grub_md_register>:
 2a8:	adrp	x1, 0 <grub_burn_stack-0x10c>
 2ac:	ldr	x1, [x1]
 2b0:	ldr	x2, [x1, #8]
 2b4:	str	x0, [x1, #8]
 2b8:	str	x2, [x0, #88]
 2bc:	ret
	...

00000000000002c8 <grub_md_unregister>:
 2c8:	adrp	x1, 0 <grub_burn_stack-0x10c>
 2cc:	ldr	x2, [x1]
 2d0:	ldr	x1, [x2, #8]!
 2d4:	cbz	x1, 2e8 <grub_md_unregister+0x20>
 2d8:	cmp	x1, x0
 2dc:	ldr	x3, [x1, #88]
 2e0:	b.ne	2ec <grub_md_unregister+0x24>  // b.any
 2e4:	str	x3, [x2]
 2e8:	ret
 2ec:	add	x2, x1, #0x58
 2f0:	mov	x1, x3
 2f4:	b	2d4 <grub_md_unregister+0xc>
	...

0000000000000300 <grub_crypto_hash>:
 300:	stp	x29, x30, [sp, #-304]!
 304:	mov	x29, sp
 308:	stp	x19, x20, [sp, #16]
 30c:	mov	x19, x0
 310:	ldr	x0, [x0, #72]
 314:	stp	x21, x22, [sp, #32]
 318:	cmp	x0, #0x100
 31c:	b.ls	32c <grub_crypto_hash+0x2c>  // b.plast
 320:	adrp	x0, 0 <grub_burn_stack-0x10c>
 324:	ldr	x0, [x0]
 328:	bl	0 <grub_fatal>
 32c:	mov	x20, x1
 330:	mov	x21, x2
 334:	ldr	x1, [x19, #40]
 338:	mov	x22, x3
 33c:	add	x0, sp, #0x30
 340:	blr	x1
 344:	ldr	x3, [x19, #48]
 348:	mov	x2, x22
 34c:	mov	x1, x21
 350:	add	x0, sp, #0x30
 354:	blr	x3
 358:	ldr	x1, [x19, #56]
 35c:	add	x0, sp, #0x30
 360:	blr	x1
 364:	ldr	x1, [x19, #64]
 368:	add	x0, sp, #0x30
 36c:	blr	x1
 370:	mov	x1, x0
 374:	ldr	x2, [x19, #32]
 378:	mov	x0, x20
 37c:	bl	0 <grub_memmove>
 380:	ldp	x19, x20, [sp, #16]
 384:	ldp	x21, x22, [sp, #32]
 388:	ldp	x29, x30, [sp], #304
 38c:	ret
	...

0000000000000398 <grub_crypto_lookup_md_by_name>:
 398:	stp	x29, x30, [sp, #-48]!
 39c:	mov	x29, sp
 3a0:	stp	x19, x20, [sp, #16]
 3a4:	mov	x20, x0
 3a8:	adrp	x0, 0 <grub_burn_stack-0x10c>
 3ac:	str	x21, [sp, #32]
 3b0:	ldr	x21, [x0]
 3b4:	ldr	x19, [x21, #8]
 3b8:	cbz	x19, 3d4 <grub_crypto_lookup_md_by_name+0x3c>
 3bc:	ldr	x1, [x19]
 3c0:	mov	x0, x20
 3c4:	bl	a4 <grub_burn_stack-0x68>
 3c8:	cbz	w0, 418 <grub_crypto_lookup_md_by_name+0x80>
 3cc:	ldr	x19, [x19, #88]
 3d0:	b	3b8 <grub_crypto_lookup_md_by_name+0x20>
 3d4:	ldr	x1, [x21, #16]
 3d8:	cbz	x1, 3ec <grub_crypto_lookup_md_by_name+0x54>
 3dc:	mov	x0, x20
 3e0:	blr	x1
 3e4:	ldr	x9, [x21, #8]
 3e8:	cbnz	x9, 400 <grub_crypto_lookup_md_by_name+0x68>
 3ec:	mov	x0, x19
 3f0:	ldp	x19, x20, [sp, #16]
 3f4:	ldr	x21, [sp, #32]
 3f8:	ldp	x29, x30, [sp], #48
 3fc:	ret
 400:	ldr	x1, [x9]
 404:	mov	x0, x20
 408:	bl	a4 <grub_burn_stack-0x68>
 40c:	cbz	w0, 41c <grub_crypto_lookup_md_by_name+0x84>
 410:	ldr	x9, [x9, #88]
 414:	b	3e8 <grub_crypto_lookup_md_by_name+0x50>
 418:	mov	x9, x19
 41c:	mov	x19, x9
 420:	b	3ec <grub_crypto_lookup_md_by_name+0x54>
 424:	nop
	...

0000000000000430 <grub_crypto_lookup_cipher_by_name>:
 430:	stp	x29, x30, [sp, #-32]!
 434:	mov	w11, #0x2                   	// #2
 438:	mov	x29, sp
 43c:	stp	x19, x20, [sp, #16]
 440:	mov	x19, x0
 444:	adrp	x20, 0 <grub_burn_stack-0x10c>
 448:	ldr	x12, [x20]
 44c:	ldr	x9, [x12]
 450:	cbnz	x9, 474 <grub_crypto_lookup_cipher_by_name+0x44>
 454:	ldr	x1, [x12, #16]
 458:	cbz	x1, 4b0 <grub_crypto_lookup_cipher_by_name+0x80>
 45c:	cmp	w11, #0x1
 460:	b.eq	4b0 <grub_crypto_lookup_cipher_by_name+0x80>  // b.none
 464:	mov	x0, x19
 468:	blr	x1
 46c:	mov	w11, #0x1                   	// #1
 470:	b	448 <grub_crypto_lookup_cipher_by_name+0x18>
 474:	ldr	x1, [x9]
 478:	mov	x0, x19
 47c:	bl	a4 <grub_burn_stack-0x68>
 480:	cbz	w0, 4b0 <grub_crypto_lookup_cipher_by_name+0x80>
 484:	ldr	x10, [x9, #8]
 488:	cbnz	x10, 4a4 <grub_crypto_lookup_cipher_by_name+0x74>
 48c:	ldr	x9, [x9, #88]
 490:	b	450 <grub_crypto_lookup_cipher_by_name+0x20>
 494:	mov	x0, x19
 498:	bl	a4 <grub_burn_stack-0x68>
 49c:	cbz	w0, 4b0 <grub_crypto_lookup_cipher_by_name+0x80>
 4a0:	add	x10, x10, #0x8
 4a4:	ldr	x1, [x10]
 4a8:	cbnz	x1, 494 <grub_crypto_lookup_cipher_by_name+0x64>
 4ac:	b	48c <grub_crypto_lookup_cipher_by_name+0x5c>
 4b0:	mov	x0, x9
 4b4:	ldp	x19, x20, [sp, #16]
 4b8:	ldp	x29, x30, [sp], #32
 4bc:	ret
	...

00000000000004c8 <grub_crypto_cipher_open>:
 4c8:	stp	x29, x30, [sp, #-32]!
 4cc:	mov	x29, sp
 4d0:	str	x19, [sp, #16]
 4d4:	mov	x19, x0
 4d8:	ldr	x0, [x0, #40]
 4dc:	add	x0, x0, #0x8
 4e0:	bl	0 <grub_malloc>
 4e4:	cbz	x0, 4ec <grub_crypto_cipher_open+0x24>
 4e8:	str	x19, [x0]
 4ec:	ldr	x19, [sp, #16]
 4f0:	ldp	x29, x30, [sp], #32
 4f4:	ret

00000000000004f8 <grub_crypto_cipher_set_key>:
 4f8:	ldr	x3, [x0], #8
 4fc:	ldr	x3, [x3, #48]
 500:	mov	x16, x3
 504:	br	x16

0000000000000508 <grub_crypto_ecb_decrypt>:
 508:	stp	x29, x30, [sp, #-64]!
 50c:	mov	x29, sp
 510:	stp	x21, x22, [sp, #32]
 514:	mov	x22, x0
 518:	ldr	x0, [x0]
 51c:	stp	x23, x24, [sp, #48]
 520:	mov	x23, x1
 524:	stp	x19, x20, [sp, #16]
 528:	ldr	x1, [x0, #64]
 52c:	cbz	x1, 598 <grub_crypto_ecb_decrypt+0x90>
 530:	ldr	x21, [x0, #24]
 534:	cbz	x21, 5a0 <grub_crypto_ecb_decrypt+0x98>
 538:	sub	x0, x21, #0x1
 53c:	orr	x1, x21, x3
 540:	tst	x0, x1
 544:	b.ne	5a0 <grub_crypto_ecb_decrypt+0x98>  // b.any
 548:	mov	x19, x2
 54c:	add	x20, x2, x3
 550:	add	x24, x22, #0x8
 554:	cmp	x19, x20
 558:	b.cc	574 <grub_crypto_ecb_decrypt+0x6c>  // b.lo, b.ul, b.last
 55c:	mov	w0, #0x0                   	// #0
 560:	ldp	x19, x20, [sp, #16]
 564:	ldp	x21, x22, [sp, #32]
 568:	ldp	x23, x24, [sp, #48]
 56c:	ldp	x29, x30, [sp], #64
 570:	ret
 574:	ldr	x0, [x22]
 578:	mov	x2, x19
 57c:	mov	x1, x23
 580:	add	x19, x19, x21
 584:	add	x23, x23, x21
 588:	ldr	x3, [x0, #64]
 58c:	mov	x0, x24
 590:	blr	x3
 594:	b	554 <grub_crypto_ecb_decrypt+0x4c>
 598:	mov	w0, #0x19                  	// #25
 59c:	b	560 <grub_crypto_ecb_decrypt+0x58>
 5a0:	mov	w0, #0xa                   	// #10
 5a4:	b	560 <grub_crypto_ecb_decrypt+0x58>

00000000000005a8 <grub_crypto_ecb_encrypt>:
 5a8:	stp	x29, x30, [sp, #-64]!
 5ac:	mov	x29, sp
 5b0:	stp	x21, x22, [sp, #32]
 5b4:	mov	x22, x0
 5b8:	ldr	x0, [x0]
 5bc:	stp	x23, x24, [sp, #48]
 5c0:	mov	x23, x1
 5c4:	stp	x19, x20, [sp, #16]
 5c8:	ldr	x1, [x0, #56]
 5cc:	cbz	x1, 638 <grub_crypto_ecb_encrypt+0x90>
 5d0:	ldr	x21, [x0, #24]
 5d4:	cbz	x21, 640 <grub_crypto_ecb_encrypt+0x98>
 5d8:	sub	x0, x21, #0x1
 5dc:	orr	x1, x21, x3
 5e0:	tst	x0, x1
 5e4:	b.ne	640 <grub_crypto_ecb_encrypt+0x98>  // b.any
 5e8:	mov	x19, x2
 5ec:	add	x20, x2, x3
 5f0:	add	x24, x22, #0x8
 5f4:	cmp	x19, x20
 5f8:	b.cc	614 <grub_crypto_ecb_encrypt+0x6c>  // b.lo, b.ul, b.last
 5fc:	mov	w0, #0x0                   	// #0
 600:	ldp	x19, x20, [sp, #16]
 604:	ldp	x21, x22, [sp, #32]
 608:	ldp	x23, x24, [sp, #48]
 60c:	ldp	x29, x30, [sp], #64
 610:	ret
 614:	ldr	x0, [x22]
 618:	mov	x2, x19
 61c:	mov	x1, x23
 620:	add	x19, x19, x21
 624:	add	x23, x23, x21
 628:	ldr	x3, [x0, #56]
 62c:	mov	x0, x24
 630:	blr	x3
 634:	b	5f4 <grub_crypto_ecb_encrypt+0x4c>
 638:	mov	w0, #0x19                  	// #25
 63c:	b	600 <grub_crypto_ecb_encrypt+0x58>
 640:	mov	w0, #0xa                   	// #10
 644:	b	600 <grub_crypto_ecb_encrypt+0x58>

0000000000000648 <grub_crypto_cbc_encrypt>:
 648:	stp	x29, x30, [sp, #-80]!
 64c:	mov	x29, sp
 650:	stp	x23, x24, [sp, #48]
 654:	mov	x23, x0
 658:	ldr	x0, [x0]
 65c:	stp	x19, x20, [sp, #16]
 660:	mov	x19, x1
 664:	stp	x21, x22, [sp, #32]
 668:	ldr	x1, [x0, #56]
 66c:	str	x25, [sp, #64]
 670:	cbz	x1, 70c <grub_crypto_cbc_encrypt+0xc4>
 674:	ldr	x20, [x0, #24]
 678:	cbz	x20, 714 <grub_crypto_cbc_encrypt+0xcc>
 67c:	orr	x0, x20, x3
 680:	sub	x1, x20, #0x1
 684:	tst	x0, x1
 688:	b.ne	714 <grub_crypto_cbc_encrypt+0xcc>  // b.any
 68c:	mov	x21, x2
 690:	mov	x24, x4
 694:	add	x22, x2, x3
 698:	mov	x1, x4
 69c:	add	x25, x23, #0x8
 6a0:	cmp	x21, x22
 6a4:	b.cc	6d0 <grub_crypto_cbc_encrypt+0x88>  // b.lo, b.ul, b.last
 6a8:	mov	x2, x20
 6ac:	mov	x0, x24
 6b0:	bl	0 <grub_memmove>
 6b4:	mov	w0, #0x0                   	// #0
 6b8:	ldp	x19, x20, [sp, #16]
 6bc:	ldp	x21, x22, [sp, #32]
 6c0:	ldp	x23, x24, [sp, #48]
 6c4:	ldr	x25, [sp, #64]
 6c8:	ldp	x29, x30, [sp], #80
 6cc:	ret
 6d0:	mov	x2, x1
 6d4:	mov	x0, x19
 6d8:	mov	x1, x21
 6dc:	mov	x3, x20
 6e0:	bl	0 <grub_burn_stack-0x10c>
 6e4:	add	x21, x21, x20
 6e8:	ldr	x0, [x23]
 6ec:	mov	x1, x19
 6f0:	mov	x2, x19
 6f4:	ldr	x3, [x0, #56]
 6f8:	mov	x0, x25
 6fc:	blr	x3
 700:	mov	x1, x19
 704:	add	x19, x19, x20
 708:	b	6a0 <grub_crypto_cbc_encrypt+0x58>
 70c:	mov	w0, #0x19                  	// #25
 710:	b	6b8 <grub_crypto_cbc_encrypt+0x70>
 714:	mov	w0, #0xa                   	// #10
 718:	b	6b8 <grub_crypto_cbc_encrypt+0x70>

000000000000071c <grub_crypto_cbc_decrypt>:
 71c:	stp	x29, x30, [sp, #-96]!
 720:	mov	x29, sp
 724:	stp	x23, x24, [sp, #48]
 728:	mov	x23, x0
 72c:	ldr	x0, [x0]
 730:	stp	x21, x22, [sp, #32]
 734:	mov	x21, x1
 738:	stp	x19, x20, [sp, #16]
 73c:	ldr	x1, [x0, #64]
 740:	str	x25, [sp, #64]
 744:	cbz	x1, 7f0 <grub_crypto_cbc_decrypt+0xd4>
 748:	ldr	x20, [x0, #24]
 74c:	sub	x0, x20, #0x1
 750:	cmp	x0, #0xf
 754:	b.hi	7f8 <grub_crypto_cbc_decrypt+0xdc>  // b.pmore
 758:	orr	x1, x20, x3
 75c:	tst	x1, x0
 760:	b.ne	7f8 <grub_crypto_cbc_decrypt+0xdc>  // b.any
 764:	mov	x19, x2
 768:	mov	x24, x4
 76c:	add	x22, x2, x3
 770:	add	x25, x23, #0x8
 774:	cmp	x19, x22
 778:	b.cc	798 <grub_crypto_cbc_decrypt+0x7c>  // b.lo, b.ul, b.last
 77c:	mov	w0, #0x0                   	// #0
 780:	ldp	x19, x20, [sp, #16]
 784:	ldp	x21, x22, [sp, #32]
 788:	ldp	x23, x24, [sp, #48]
 78c:	ldr	x25, [sp, #64]
 790:	ldp	x29, x30, [sp], #96
 794:	ret
 798:	mov	x1, x19
 79c:	mov	x2, x20
 7a0:	add	x0, sp, #0x50
 7a4:	bl	0 <grub_memmove>
 7a8:	ldr	x0, [x23]
 7ac:	mov	x2, x19
 7b0:	mov	x1, x21
 7b4:	add	x19, x19, x20
 7b8:	ldr	x3, [x0, #64]
 7bc:	mov	x0, x25
 7c0:	blr	x3
 7c4:	mov	x3, x20
 7c8:	mov	x1, x21
 7cc:	mov	x0, x21
 7d0:	mov	x2, x24
 7d4:	bl	0 <grub_burn_stack-0x10c>
 7d8:	add	x21, x21, x20
 7dc:	mov	x2, x20
 7e0:	add	x1, sp, #0x50
 7e4:	mov	x0, x24
 7e8:	bl	0 <grub_memmove>
 7ec:	b	774 <grub_crypto_cbc_decrypt+0x58>
 7f0:	mov	w0, #0x19                  	// #25
 7f4:	b	780 <grub_crypto_cbc_decrypt+0x64>
 7f8:	mov	w0, #0xa                   	// #10
 7fc:	b	780 <grub_crypto_cbc_decrypt+0x64>

0000000000000800 <grub_crypto_hmac_init>:
 800:	stp	x29, x30, [sp, #-80]!
 804:	mov	x29, sp
 808:	stp	x19, x20, [sp, #16]
 80c:	mov	x20, x0
 810:	str	x25, [sp, #64]
 814:	mov	x25, x1
 818:	ldr	x1, [x0, #32]
 81c:	stp	x21, x22, [sp, #32]
 820:	ldr	x0, [x0, #80]
 824:	stp	x23, x24, [sp, #48]
 828:	cmp	x1, x0
 82c:	b.hi	9a0 <grub_crypto_hmac_init+0x1a0>  // b.pmore
 830:	ldr	x0, [x20, #72]
 834:	mov	x24, x2
 838:	bl	0 <grub_malloc>
 83c:	mov	x23, x0
 840:	cbz	x0, 974 <grub_crypto_hmac_init+0x174>
 844:	ldr	x0, [x20, #80]
 848:	cmp	x0, x24
 84c:	b.cs	94c <grub_crypto_hmac_init+0x14c>  // b.hs, b.nlast
 850:	ldr	x0, [x20, #32]
 854:	bl	0 <grub_malloc>
 858:	mov	x19, x0
 85c:	cbz	x0, 974 <grub_crypto_hmac_init+0x174>
 860:	mov	x3, x24
 864:	mov	x2, x25
 868:	mov	x1, x0
 86c:	mov	x0, x20
 870:	bl	300 <grub_crypto_hash>
 874:	mov	x25, x19
 878:	ldr	x24, [x20, #32]
 87c:	ldr	x0, [x20, #80]
 880:	bl	0 <grub_zalloc>
 884:	mov	x21, x0
 888:	cbz	x0, 9a8 <grub_crypto_hmac_init+0x1a8>
 88c:	ldr	x0, [x20, #80]
 890:	bl	0 <grub_zalloc>
 894:	mov	x22, x0
 898:	cbz	x0, 980 <grub_crypto_hmac_init+0x180>
 89c:	mov	x2, x24
 8a0:	mov	x1, x25
 8a4:	mov	x0, x21
 8a8:	bl	0 <grub_memmove>
 8ac:	mov	x2, x24
 8b0:	mov	x1, x25
 8b4:	mov	x0, x22
 8b8:	bl	0 <grub_memmove>
 8bc:	mov	w0, #0x0                   	// #0
 8c0:	mov	w3, #0x36                  	// #54
 8c4:	mov	w4, #0x5c                  	// #92
 8c8:	ldr	x2, [x20, #80]
 8cc:	mov	w1, w0
 8d0:	cmp	x2, w0, uxtw
 8d4:	b.hi	954 <grub_crypto_hmac_init+0x154>  // b.pmore
 8d8:	mov	x0, x19
 8dc:	bl	0 <grub_free>
 8e0:	ldr	x1, [x20, #40]
 8e4:	mov	x0, x23
 8e8:	blr	x1
 8ec:	ldr	x3, [x20, #48]
 8f0:	mov	x1, x21
 8f4:	ldr	x2, [x20, #80]
 8f8:	mov	x0, x23
 8fc:	blr	x3
 900:	ldr	x2, [x20, #80]
 904:	mov	w1, #0x0                   	// #0
 908:	mov	x0, x21
 90c:	bl	0 <grub_memset>
 910:	mov	x0, x21
 914:	bl	0 <grub_free>
 918:	mov	x0, #0x18                  	// #24
 91c:	bl	0 <grub_malloc>
 920:	mov	x19, x0
 924:	cbz	x0, 9b0 <grub_crypto_hmac_init+0x1b0>
 928:	stp	x20, x23, [x0]
 92c:	str	x22, [x0, #16]
 930:	mov	x0, x19
 934:	ldp	x19, x20, [sp, #16]
 938:	ldp	x21, x22, [sp, #32]
 93c:	ldp	x23, x24, [sp, #48]
 940:	ldr	x25, [sp, #64]
 944:	ldp	x29, x30, [sp], #80
 948:	ret
 94c:	mov	x19, #0x0                   	// #0
 950:	b	87c <grub_crypto_hmac_init+0x7c>
 954:	ldrb	w2, [x21, x1]
 958:	add	w0, w0, #0x1
 95c:	eor	w2, w2, w3
 960:	strb	w2, [x21, x1]
 964:	ldrb	w2, [x22, x1]
 968:	eor	w2, w2, w4
 96c:	strb	w2, [x22, x1]
 970:	b	8c8 <grub_crypto_hmac_init+0xc8>
 974:	mov	x22, #0x0                   	// #0
 978:	mov	x21, #0x0                   	// #0
 97c:	mov	x19, #0x0                   	// #0
 980:	mov	x0, x19
 984:	bl	0 <grub_free>
 988:	mov	x0, x23
 98c:	bl	0 <grub_free>
 990:	mov	x0, x21
 994:	bl	0 <grub_free>
 998:	mov	x0, x22
 99c:	bl	0 <grub_free>
 9a0:	mov	x19, #0x0                   	// #0
 9a4:	b	930 <grub_crypto_hmac_init+0x130>
 9a8:	mov	x22, #0x0                   	// #0
 9ac:	b	980 <grub_crypto_hmac_init+0x180>
 9b0:	mov	x21, #0x0                   	// #0
 9b4:	b	980 <grub_crypto_hmac_init+0x180>

00000000000009b8 <grub_crypto_hmac_write>:
 9b8:	ldp	x3, x0, [x0]
 9bc:	ldr	x3, [x3, #48]
 9c0:	mov	x16, x3
 9c4:	br	x16

00000000000009c8 <grub_crypto_hmac_fini>:
 9c8:	stp	x29, x30, [sp, #-48]!
 9cc:	mov	x29, sp
 9d0:	stp	x19, x20, [sp, #16]
 9d4:	mov	x19, x0
 9d8:	ldr	x0, [x0]
 9dc:	stp	x21, x22, [sp, #32]
 9e0:	mov	x21, x1
 9e4:	ldr	x0, [x0, #72]
 9e8:	bl	0 <grub_malloc>
 9ec:	cbz	x0, b1c <grub_crypto_hmac_fini+0x154>
 9f0:	mov	x20, x0
 9f4:	ldr	x0, [x19]
 9f8:	ldr	x1, [x0, #56]
 9fc:	ldr	x0, [x19, #8]
 a00:	blr	x1
 a04:	ldr	x0, [x19]
 a08:	ldr	x1, [x0, #64]
 a0c:	ldr	x0, [x19, #8]
 a10:	blr	x1
 a14:	ldr	x0, [x19]
 a18:	ldr	x1, [x0, #64]
 a1c:	ldr	x0, [x19, #8]
 a20:	blr	x1
 a24:	mov	x22, x0
 a28:	ldr	x0, [x19]
 a2c:	ldr	x1, [x0, #40]
 a30:	mov	x0, x20
 a34:	blr	x1
 a38:	ldr	x0, [x19]
 a3c:	ldr	x1, [x19, #16]
 a40:	ldr	x3, [x0, #48]
 a44:	ldr	x2, [x0, #80]
 a48:	mov	x0, x20
 a4c:	blr	x3
 a50:	ldr	x0, [x19]
 a54:	mov	x1, x22
 a58:	ldr	x2, [x0, #32]
 a5c:	ldr	x3, [x0, #48]
 a60:	mov	x0, x20
 a64:	blr	x3
 a68:	ldr	x0, [x19]
 a6c:	ldr	x1, [x0, #56]
 a70:	mov	x0, x20
 a74:	blr	x1
 a78:	ldr	x0, [x19]
 a7c:	mov	w1, #0x0                   	// #0
 a80:	ldr	x2, [x0, #80]
 a84:	ldr	x0, [x19, #16]
 a88:	bl	0 <grub_memset>
 a8c:	ldr	x0, [x19, #16]
 a90:	bl	0 <grub_free>
 a94:	ldr	x0, [x19]
 a98:	mov	w1, #0x0                   	// #0
 a9c:	ldr	x2, [x0, #72]
 aa0:	ldr	x0, [x19, #8]
 aa4:	bl	0 <grub_memset>
 aa8:	ldr	x0, [x19, #8]
 aac:	bl	0 <grub_free>
 ab0:	ldr	x0, [x19]
 ab4:	ldr	x1, [x0, #64]
 ab8:	mov	x0, x20
 abc:	blr	x1
 ac0:	ldr	x1, [x19]
 ac4:	ldr	x2, [x1, #32]
 ac8:	mov	x1, x0
 acc:	mov	x0, x21
 ad0:	bl	0 <grub_memmove>
 ad4:	ldr	x0, [x19]
 ad8:	mov	w1, #0x0                   	// #0
 adc:	ldr	x2, [x0, #72]
 ae0:	mov	x0, x20
 ae4:	bl	0 <grub_memset>
 ae8:	mov	x0, x20
 aec:	bl	0 <grub_free>
 af0:	mov	x2, #0x18                  	// #24
 af4:	mov	w1, #0x0                   	// #0
 af8:	mov	x0, x19
 afc:	bl	0 <grub_memset>
 b00:	mov	x0, x19
 b04:	bl	0 <grub_free>
 b08:	mov	w0, #0x0                   	// #0
 b0c:	ldp	x19, x20, [sp, #16]
 b10:	ldp	x21, x22, [sp, #32]
 b14:	ldp	x29, x30, [sp], #48
 b18:	ret
 b1c:	mov	w0, #0x22                  	// #34
 b20:	b	b0c <grub_crypto_hmac_fini+0x144>

0000000000000b24 <grub_crypto_hmac_buffer>:
 b24:	stp	x29, x30, [sp, #-48]!
 b28:	mov	x29, sp
 b2c:	stp	x19, x20, [sp, #16]
 b30:	mov	x20, x5
 b34:	stp	x21, x22, [sp, #32]
 b38:	mov	x21, x3
 b3c:	mov	x22, x4
 b40:	bl	800 <grub_crypto_hmac_init>
 b44:	cbz	x0, b70 <grub_crypto_hmac_buffer+0x4c>
 b48:	mov	x19, x0
 b4c:	mov	x2, x22
 b50:	mov	x1, x21
 b54:	bl	9b8 <grub_crypto_hmac_write>
 b58:	mov	x1, x20
 b5c:	mov	x0, x19
 b60:	ldp	x19, x20, [sp, #16]
 b64:	ldp	x21, x22, [sp, #32]
 b68:	ldp	x29, x30, [sp], #48
 b6c:	b	9c8 <grub_crypto_hmac_fini>
 b70:	mov	w0, #0x22                  	// #34
 b74:	ldp	x19, x20, [sp, #16]
 b78:	ldp	x21, x22, [sp, #32]
 b7c:	ldp	x29, x30, [sp], #48
 b80:	ret

0000000000000b84 <grub_crypto_gcry_error>:
 b84:	cbz	w0, b98 <grub_crypto_gcry_error+0x14>
 b88:	adrp	x0, 0 <grub_burn_stack-0x10c>
 b8c:	ldr	x1, [x0]
 b90:	mov	w0, #0x1e                  	// #30
 b94:	b	0 <grub_error>
 b98:	ret
 b9c:	nop
	...

0000000000000ba8 <grub_crypto_memcmp>:
 ba8:	mov	x3, #0x0                   	// #0
 bac:	mov	x4, #0x0                   	// #0
 bb0:	cmp	x2, x3
 bb4:	b.ne	bc4 <grub_crypto_memcmp+0x1c>  // b.any
 bb8:	cmp	x4, #0x0
 bbc:	cset	w0, ne  // ne = any
 bc0:	ret
 bc4:	ldrb	w6, [x0, x3]
 bc8:	ldrb	w5, [x1, x3]
 bcc:	cmp	w6, w5
 bd0:	b.eq	bd8 <grub_crypto_memcmp+0x30>  // b.none
 bd4:	add	x4, x4, #0x1
 bd8:	add	x3, x3, #0x1
 bdc:	b	bb0 <grub_crypto_memcmp+0x8>

0000000000000be0 <grub_password_get>:
 be0:	stp	x29, x30, [sp, #-48]!
 be4:	mov	x29, sp
 be8:	stp	x21, x22, [sp, #32]
 bec:	mov	x21, x0
 bf0:	mov	w22, w1
 bf4:	stp	x19, x20, [sp, #16]
 bf8:	mov	w19, #0x0                   	// #0
 bfc:	bl	0 <grub_getkey>
 c00:	cmp	w0, #0xa
 c04:	mov	w20, w0
 c08:	ccmp	w0, #0xd, #0x4, ne  // ne = any
 c0c:	b.eq	c58 <grub_password_get+0x78>  // b.none
 c10:	cmp	w0, #0x1b
 c14:	b.eq	c54 <grub_password_get+0x74>  // b.none
 c18:	cmp	w0, #0x8
 c1c:	b.ne	c30 <grub_password_get+0x50>  // b.any
 c20:	cmp	w19, #0x0
 c24:	cset	w0, ne  // ne = any
 c28:	sub	w19, w19, w0
 c2c:	b	bfc <grub_password_get+0x1c>
 c30:	sub	w0, w0, #0x20
 c34:	cmp	w0, #0x5e
 c38:	b.hi	bfc <grub_password_get+0x1c>  // b.pmore
 c3c:	add	w0, w19, #0x2
 c40:	cmp	w0, w22
 c44:	b.cs	bfc <grub_password_get+0x1c>  // b.hs, b.nlast
 c48:	strb	w20, [x21, w19, uxtw]
 c4c:	add	w19, w19, #0x1
 c50:	b	bfc <grub_password_get+0x1c>
 c54:	mov	w19, #0x0                   	// #0
 c58:	sub	w2, w22, w19
 c5c:	add	x0, x21, w19, uxtw
 c60:	mov	w1, #0x0                   	// #0
 c64:	bl	0 <grub_memset>
 c68:	adrp	x0, 0 <grub_burn_stack-0x10c>
 c6c:	ldr	x0, [x0]
 c70:	ldr	x1, [x0]
 c74:	adrp	x0, 0 <grub_burn_stack-0x10c>
 c78:	ldr	x0, [x0]
 c7c:	blr	x1
 c80:	bl	0 <grub_refresh>
 c84:	cmp	w20, #0x1b
 c88:	cset	w0, ne  // ne = any
 c8c:	ldp	x19, x20, [sp, #16]
 c90:	ldp	x21, x22, [sp, #32]
 c94:	ldp	x29, x30, [sp], #48
 c98:	ret
 c9c:	nop
	...
