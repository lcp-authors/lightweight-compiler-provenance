In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.profile-aarch64.a_clang_-O3:

GCDAProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <llvm_gcda_start_file>:
       0:	sub	sp, sp, #0x60
       4:	stp	x29, x30, [sp, #16]
       8:	stp	x26, x25, [sp, #32]
       c:	stp	x24, x23, [sp, #48]
      10:	stp	x22, x21, [sp, #64]
      14:	stp	x20, x19, [sp, #80]
      18:	add	x29, sp, #0x10
      1c:	mov	x20, x1
      20:	mov	x21, x0
      24:	add	x0, sp, #0x4
      28:	add	x1, sp, #0x8
      2c:	mov	w19, w2
      30:	bl	0 <lprofGetPathPrefix>
      34:	cbz	x0, 70 <llvm_gcda_start_file+0x70>
      38:	ldr	x24, [sp, #8]
      3c:	mov	x22, x0
      40:	mov	x0, x21
      44:	bl	0 <strlen>
      48:	add	x8, x24, x0
      4c:	add	x0, x8, #0x2
      50:	bl	0 <malloc>
      54:	ldr	w4, [sp, #4]
      58:	mov	x1, x21
      5c:	mov	x2, x22
      60:	mov	x3, x24
      64:	mov	x23, x0
      68:	bl	0 <lprofApplyPathPrefix>
      6c:	b	7c <llvm_gcda_start_file+0x7c>
      70:	mov	x0, x21
      74:	bl	0 <strdup>
      78:	mov	x23, x0
      7c:	adrp	x24, 0 <llvm_gcda_start_file>
      80:	add	x24, x24, #0x0
      84:	mov	w1, #0x2                   	// #2
      88:	mov	x0, x23
      8c:	str	x23, [x24, #16]
      90:	strb	wzr, [x24]
      94:	bl	0 <open>
      98:	adrp	x22, 0 <llvm_gcda_start_file>
      9c:	cmn	w0, #0x1
      a0:	str	w0, [x22]
      a4:	b.eq	b4 <llvm_gcda_start_file+0xb4>  // b.none
      a8:	adrp	x21, 0 <llvm_gcda_start_file>
      ac:	add	x21, x21, #0x0
      b0:	b	108 <llvm_gcda_start_file+0x108>
      b4:	ldr	x0, [x24, #16]
      b8:	mov	w8, #0x1                   	// #1
      bc:	mov	w1, #0x42                  	// #66
      c0:	mov	w2, #0x1a4                 	// #420
      c4:	strb	w8, [x24]
      c8:	bl	0 <open>
      cc:	cmn	w0, #0x1
      d0:	str	w0, [x22]
      d4:	b.ne	100 <llvm_gcda_start_file+0x100>  // b.any
      d8:	adrp	x21, 0 <llvm_gcda_start_file>
      dc:	ldr	x0, [x21]
      e0:	bl	0 <__llvm_profile_recursive_mkdir>
      e4:	ldr	x0, [x21]
      e8:	mov	w1, #0x42                  	// #66
      ec:	mov	w2, #0x1a4                 	// #420
      f0:	bl	0 <open>
      f4:	cmn	w0, #0x1
      f8:	str	w0, [x22]
      fc:	b.eq	394 <llvm_gcda_start_file+0x394>  // b.none
     100:	adrp	x21, 0 <llvm_gcda_start_file>
     104:	add	x21, x21, #0x0
     108:	mov	w25, #0x6461                	// #25697
     10c:	movk	w25, #0x6763, lsl #16
     110:	bl	0 <lprofLockFd>
     114:	ldr	w0, [x22]
     118:	mov	x1, x21
     11c:	bl	0 <fdopen>
     120:	ldrb	w8, [x24]
     124:	adrp	x23, 0 <llvm_gcda_start_file>
     128:	stp	x0, xzr, [x24, #24]
     12c:	stp	xzr, xzr, [x24, #40]
     130:	cmp	w8, #0x1
     134:	b.ne	1c4 <llvm_gcda_start_file+0x1c4>  // b.any
     138:	mov	w0, #0x20000               	// #131072
     13c:	mov	w22, #0x20000               	// #131072
     140:	bl	0 <malloc>
     144:	adrp	x8, 0 <llvm_gcda_start_file>
     148:	mov	x21, x0
     14c:	add	x8, x8, #0x0
     150:	stp	x0, x22, [x8]
     154:	mov	w2, #0x20000               	// #131072
     158:	mov	x0, x21
     15c:	mov	w1, wzr
     160:	bl	0 <memset>
     164:	adrp	x9, 0 <llvm_gcda_start_file>
     168:	add	x9, x9, #0x0
     16c:	ldp	x9, x8, [x9]
     170:	mov	w26, #0x7                   	// #7
     174:	movk	w26, #0x2, lsl #16
     178:	add	x10, x8, #0x4
     17c:	cmp	x10, x9
     180:	b.ls	248 <llvm_gcda_start_file+0x248>  // b.plast
     184:	add	x8, x26, x8
     188:	sub	x8, x8, #0x4
     18c:	and	x22, x8, #0xfffffffffffe0000
     190:	mov	x0, x21
     194:	mov	x1, x22
     198:	bl	0 <realloc>
     19c:	ldr	x9, [x24, #48]
     1a0:	ldrb	w10, [x24]
     1a4:	mov	x21, x0
     1a8:	stp	x0, x22, [x24, #32]
     1ac:	add	x8, x9, #0x4
     1b0:	cmp	w10, #0x1
     1b4:	str	w25, [x0, x9]
     1b8:	str	x8, [x24, #48]
     1bc:	b.ne	234 <llvm_gcda_start_file+0x234>  // b.any
     1c0:	b	258 <llvm_gcda_start_file+0x258>
     1c4:	mov	w2, #0x2                   	// #2
     1c8:	mov	x1, xzr
     1cc:	bl	0 <fseek>
     1d0:	adrp	x21, 0 <llvm_gcda_start_file>
     1d4:	add	x21, x21, #0x0
     1d8:	ldr	x0, [x21]
     1dc:	bl	0 <ftell>
     1e0:	str	x0, [x21, #40]
     1e4:	cbz	x0, 364 <llvm_gcda_start_file+0x364>
     1e8:	ldr	w4, [x22]
     1ec:	mov	x1, x0
     1f0:	mov	w2, #0x3                   	// #3
     1f4:	mov	w3, #0x1                   	// #1
     1f8:	mov	x0, xzr
     1fc:	mov	x5, xzr
     200:	bl	0 <mmap>
     204:	adrp	x8, 0 <llvm_gcda_start_file>
     208:	cmn	x0, #0x1
     20c:	str	x0, [x8]
     210:	b.eq	32c <llvm_gcda_start_file+0x32c>  // b.none
     214:	adrp	x8, 0 <llvm_gcda_start_file>
     218:	ldrb	w8, [x8]
     21c:	mov	x21, x0
     220:	tbnz	w8, #0, 164 <llvm_gcda_start_file+0x164>
     224:	ldr	x8, [x23]
     228:	str	w25, [x21, x8]
     22c:	add	x8, x8, #0x4
     230:	str	x8, [x23]
     234:	ldr	w10, [x20]
     238:	add	x9, x8, #0x4
     23c:	str	w10, [x21, x8]
     240:	str	x9, [x23]
     244:	b	2e0 <llvm_gcda_start_file+0x2e0>
     248:	ldr	x9, [x23]
     24c:	add	x8, x9, #0x4
     250:	str	w25, [x21, x9]
     254:	str	x8, [x23]
     258:	adrp	x25, 0 <llvm_gcda_start_file>
     25c:	ldr	x10, [x25]
     260:	add	x11, x9, #0x8
     264:	cmp	x11, x10
     268:	b.ls	308 <llvm_gcda_start_file+0x308>  // b.plast
     26c:	add	x8, x9, x26
     270:	and	x22, x8, #0xfffffffffffe0000
     274:	mov	x0, x21
     278:	mov	x1, x22
     27c:	bl	0 <realloc>
     280:	stp	x0, x22, [x24, #32]
     284:	ldr	x8, [x24, #48]
     288:	ldrb	w10, [x24]
     28c:	ldr	w11, [x20]
     290:	mov	x21, x0
     294:	add	x9, x8, #0x4
     298:	cmp	w10, #0x1
     29c:	str	w11, [x0, x8]
     2a0:	str	x9, [x24, #48]
     2a4:	b.ne	2e0 <llvm_gcda_start_file+0x2e0>  // b.any
     2a8:	ldr	x10, [x25]
     2ac:	add	x11, x8, #0x8
     2b0:	cmp	x11, x10
     2b4:	b.ls	2e0 <llvm_gcda_start_file+0x2e0>  // b.plast
     2b8:	add	x8, x8, x26
     2bc:	and	x20, x8, #0xfffffffffffe0000
     2c0:	mov	x0, x21
     2c4:	mov	x1, x20
     2c8:	bl	0 <realloc>
     2cc:	adrp	x8, 0 <llvm_gcda_start_file>
     2d0:	add	x8, x8, #0x0
     2d4:	ldr	x9, [x8, #16]
     2d8:	mov	x21, x0
     2dc:	stp	x0, x20, [x8]
     2e0:	add	x8, x9, #0x4
     2e4:	str	w19, [x21, x9]
     2e8:	str	x8, [x23]
     2ec:	ldp	x20, x19, [sp, #80]
     2f0:	ldp	x22, x21, [sp, #64]
     2f4:	ldp	x24, x23, [sp, #48]
     2f8:	ldp	x26, x25, [sp, #32]
     2fc:	ldp	x29, x30, [sp, #16]
     300:	add	sp, sp, #0x60
     304:	ret
     308:	ldr	w10, [x20]
     30c:	add	x9, x8, #0x4
     310:	str	w10, [x21, x8]
     314:	str	x9, [x23]
     318:	ldr	x10, [x25]
     31c:	add	x11, x8, #0x8
     320:	cmp	x11, x10
     324:	b.hi	2b8 <llvm_gcda_start_file+0x2b8>  // b.pmore
     328:	b	2e0 <llvm_gcda_start_file+0x2e0>
     32c:	bl	0 <__errno_location>
     330:	adrp	x8, 0 <stderr>
     334:	ldr	w0, [x0]
     338:	ldr	x8, [x8]
     33c:	adrp	x9, 0 <llvm_gcda_start_file>
     340:	ldr	x22, [x9]
     344:	ldr	x21, [x8]
     348:	bl	0 <strerror>
     34c:	adrp	x1, 0 <llvm_gcda_start_file>
     350:	mov	x3, x0
     354:	add	x1, x1, #0x0
     358:	mov	x0, x21
     35c:	mov	x2, x22
     360:	bl	0 <fprintf>
     364:	ldr	x8, [x24, #48]
     368:	mov	x21, xzr
     36c:	mov	w9, #0x1                   	// #1
     370:	strb	w9, [x24]
     374:	cmn	x8, #0x20, lsl #12
     378:	stp	xzr, xzr, [x24, #32]
     37c:	b.eq	154 <llvm_gcda_start_file+0x154>  // b.none
     380:	mov	w9, #0x3ffff               	// #262143
     384:	add	x8, x8, x9
     388:	and	x22, x8, #0xfffffffffffe0000
     38c:	mov	x0, x22
     390:	b	140 <llvm_gcda_start_file+0x140>
     394:	bl	0 <__errno_location>
     398:	adrp	x8, 0 <stderr>
     39c:	ldr	w0, [x0]
     3a0:	ldr	x8, [x8]
     3a4:	ldr	x20, [x21]
     3a8:	ldr	x19, [x8]
     3ac:	bl	0 <strerror>
     3b0:	adrp	x1, 0 <llvm_gcda_start_file>
     3b4:	mov	x3, x0
     3b8:	add	x1, x1, #0x0
     3bc:	mov	x0, x19
     3c0:	mov	x2, x20
     3c4:	bl	0 <fprintf>
     3c8:	b	2ec <llvm_gcda_start_file+0x2ec>

00000000000003cc <llvm_gcda_increment_indirect_counter>:
     3cc:	ldr	w8, [x0]
     3d0:	cmn	w8, #0x1
     3d4:	b.eq	3ec <llvm_gcda_increment_indirect_counter+0x20>  // b.none
     3d8:	ldr	x8, [x1, x8, lsl #3]
     3dc:	cbz	x8, 3ec <llvm_gcda_increment_indirect_counter+0x20>
     3e0:	ldr	x9, [x8]
     3e4:	add	x9, x9, #0x1
     3e8:	str	x9, [x8]
     3ec:	ret

00000000000003f0 <llvm_gcda_emit_function>:
     3f0:	stp	x29, x30, [sp, #-96]!
     3f4:	stp	x28, x27, [sp, #16]
     3f8:	stp	x26, x25, [sp, #32]
     3fc:	stp	x24, x23, [sp, #48]
     400:	stp	x22, x21, [sp, #64]
     404:	stp	x20, x19, [sp, #80]
     408:	mov	x29, sp
     40c:	adrp	x8, 0 <llvm_gcda_start_file>
     410:	ldr	x8, [x8]
     414:	tst	w3, #0xff
     418:	mov	w9, #0x2                   	// #2
     41c:	cinc	w26, w9, ne  // ne = any
     420:	cbz	x8, 808 <llvm_gcda_emit_function+0x418>
     424:	adrp	x8, 0 <llvm_gcda_start_file>
     428:	ldrb	w8, [x8]
     42c:	adrp	x27, 0 <llvm_gcda_start_file>
     430:	mov	w21, w4
     434:	mov	w23, w3
     438:	mov	w22, w2
     43c:	mov	x19, x1
     440:	mov	w24, w0
     444:	cmp	w8, #0x1
     448:	add	x27, x27, #0x0
     44c:	b.ne	48c <llvm_gcda_emit_function+0x9c>  // b.any
     450:	adrp	x9, 0 <llvm_gcda_start_file>
     454:	add	x9, x9, #0x0
     458:	ldp	x9, x8, [x9]
     45c:	add	x10, x8, #0x4
     460:	cmp	x10, x9
     464:	b.ls	48c <llvm_gcda_emit_function+0x9c>  // b.plast
     468:	mov	w9, #0x7                   	// #7
     46c:	movk	w9, #0x2, lsl #16
     470:	ldr	x0, [x27]
     474:	add	x8, x9, x8
     478:	sub	x8, x8, #0x4
     47c:	and	x20, x8, #0xfffffffffffe0000
     480:	mov	x1, x20
     484:	bl	0 <realloc>
     488:	stp	x0, x20, [x27]
     48c:	ldr	x25, [x27, #16]
     490:	ldr	x20, [x27]
     494:	mov	w8, #0x1000000             	// #16777216
     498:	add	x28, x25, #0x4
     49c:	str	w8, [x20, x25]
     4a0:	str	x28, [x27, #16]
     4a4:	cbz	x19, 4bc <llvm_gcda_emit_function+0xcc>
     4a8:	mov	x0, x19
     4ac:	bl	0 <strlen>
     4b0:	lsr	x8, x0, #2
     4b4:	add	w8, w26, w8
     4b8:	add	w26, w8, #0x2
     4bc:	adrp	x8, 0 <llvm_gcda_start_file>
     4c0:	ldrb	w8, [x8]
     4c4:	adrp	x27, 0 <llvm_gcda_start_file>
     4c8:	tbz	w8, #0, 5a4 <llvm_gcda_emit_function+0x1b4>
     4cc:	adrp	x11, 0 <llvm_gcda_start_file>
     4d0:	ldr	x9, [x11]
     4d4:	add	x8, x25, #0x8
     4d8:	cmp	x8, x9
     4dc:	b.ls	6ac <llvm_gcda_emit_function+0x2bc>  // b.plast
     4e0:	mov	w8, #0x7                   	// #7
     4e4:	movk	w8, #0x2, lsl #16
     4e8:	add	x8, x25, x8
     4ec:	and	x25, x8, #0xfffffffffffe0000
     4f0:	mov	x0, x20
     4f4:	mov	x1, x25
     4f8:	mov	x20, x11
     4fc:	bl	0 <realloc>
     500:	adrp	x9, 0 <llvm_gcda_start_file>
     504:	add	x9, x9, #0x0
     508:	ldr	x28, [x9, #48]
     50c:	ldrb	w10, [x9]
     510:	mov	x11, x20
     514:	mov	x20, x0
     518:	add	x8, x28, #0x4
     51c:	cmp	w10, #0x1
     520:	stp	x0, x25, [x9, #32]
     524:	str	w26, [x0, x28]
     528:	str	x8, [x9, #48]
     52c:	b.ne	5b0 <llvm_gcda_emit_function+0x1c0>  // b.any
     530:	ldr	x9, [x11]
     534:	add	x10, x28, #0x8
     538:	cmp	x10, x9
     53c:	b.ls	6c4 <llvm_gcda_emit_function+0x2d4>  // b.plast
     540:	mov	w8, #0x7                   	// #7
     544:	movk	w8, #0x2, lsl #16
     548:	add	x8, x28, x8
     54c:	and	x25, x8, #0xfffffffffffe0000
     550:	mov	x0, x20
     554:	mov	x1, x25
     558:	mov	x26, x11
     55c:	bl	0 <realloc>
     560:	adrp	x10, 0 <llvm_gcda_start_file>
     564:	add	x10, x10, #0x0
     568:	ldr	x8, [x10, #48]
     56c:	ldrb	w11, [x10]
     570:	mov	x20, x0
     574:	stp	x0, x25, [x10, #32]
     578:	add	x9, x8, #0x4
     57c:	cmp	w11, #0x1
     580:	mov	x11, x26
     584:	str	w24, [x0, x8]
     588:	str	x9, [x10, #48]
     58c:	b.ne	5bc <llvm_gcda_emit_function+0x1cc>  // b.any
     590:	ldr	x10, [x11]
     594:	add	x11, x8, #0x8
     598:	cmp	x11, x10
     59c:	b.ls	5bc <llvm_gcda_emit_function+0x1cc>  // b.plast
     5a0:	b	6e0 <llvm_gcda_emit_function+0x2f0>
     5a4:	add	x8, x25, #0x8
     5a8:	str	w26, [x20, x28]
     5ac:	str	x8, [x27]
     5b0:	add	x9, x8, #0x4
     5b4:	str	w24, [x20, x8]
     5b8:	str	x9, [x27]
     5bc:	tst	w23, #0xff
     5c0:	add	x23, x9, #0x4
     5c4:	str	w22, [x20, x9]
     5c8:	str	x23, [x27]
     5cc:	b.eq	630 <llvm_gcda_emit_function+0x240>  // b.none
     5d0:	adrp	x8, 0 <llvm_gcda_start_file>
     5d4:	ldrb	w8, [x8]
     5d8:	cmp	w8, #0x1
     5dc:	b.ne	624 <llvm_gcda_emit_function+0x234>  // b.any
     5e0:	adrp	x8, 0 <llvm_gcda_start_file>
     5e4:	ldr	x8, [x8]
     5e8:	add	x10, x9, #0x8
     5ec:	cmp	x10, x8
     5f0:	b.ls	624 <llvm_gcda_emit_function+0x234>  // b.plast
     5f4:	mov	w8, #0x7                   	// #7
     5f8:	movk	w8, #0x2, lsl #16
     5fc:	add	x8, x9, x8
     600:	and	x22, x8, #0xfffffffffffe0000
     604:	mov	x0, x20
     608:	mov	x1, x22
     60c:	bl	0 <realloc>
     610:	adrp	x8, 0 <llvm_gcda_start_file>
     614:	add	x8, x8, #0x0
     618:	ldr	x23, [x8, #16]
     61c:	mov	x20, x0
     620:	stp	x0, x22, [x8]
     624:	str	w21, [x20, x23]
     628:	add	x23, x23, #0x4
     62c:	str	x23, [x27]
     630:	cbz	x19, 808 <llvm_gcda_emit_function+0x418>
     634:	mov	x0, x19
     638:	bl	0 <strlen>
     63c:	adrp	x8, 0 <llvm_gcda_start_file>
     640:	ldrb	w8, [x8]
     644:	lsr	x9, x0, #2
     648:	add	w22, w9, #0x1
     64c:	cmp	w8, #0x1
     650:	b.ne	6a4 <llvm_gcda_emit_function+0x2b4>  // b.any
     654:	adrp	x8, 0 <llvm_gcda_start_file>
     658:	ldr	x8, [x8]
     65c:	add	x9, x23, #0x4
     660:	cmp	x9, x8
     664:	b.ls	714 <llvm_gcda_emit_function+0x324>  // b.plast
     668:	mov	w8, #0x7                   	// #7
     66c:	movk	w8, #0x2, lsl #16
     670:	add	x8, x8, x23
     674:	sub	x8, x8, #0x4
     678:	and	x21, x8, #0xfffffffffffe0000
     67c:	mov	x0, x20
     680:	mov	x1, x21
     684:	bl	0 <realloc>
     688:	adrp	x8, 0 <llvm_gcda_start_file>
     68c:	add	x8, x8, #0x0
     690:	ldrb	w24, [x8]
     694:	ldr	x23, [x8, #48]
     698:	mov	x20, x0
     69c:	stp	x0, x21, [x8, #32]
     6a0:	b	718 <llvm_gcda_emit_function+0x328>
     6a4:	mov	w24, wzr
     6a8:	b	718 <llvm_gcda_emit_function+0x328>
     6ac:	str	w26, [x20, x28]
     6b0:	str	x8, [x27]
     6b4:	ldr	x9, [x11]
     6b8:	add	x10, x28, #0x8
     6bc:	cmp	x10, x9
     6c0:	b.hi	540 <llvm_gcda_emit_function+0x150>  // b.pmore
     6c4:	add	x9, x8, #0x4
     6c8:	str	w24, [x20, x8]
     6cc:	str	x9, [x27]
     6d0:	ldr	x10, [x11]
     6d4:	add	x11, x8, #0x8
     6d8:	cmp	x11, x10
     6dc:	b.ls	5bc <llvm_gcda_emit_function+0x1cc>  // b.plast
     6e0:	mov	w9, #0x7                   	// #7
     6e4:	movk	w9, #0x2, lsl #16
     6e8:	add	x8, x8, x9
     6ec:	and	x24, x8, #0xfffffffffffe0000
     6f0:	mov	x0, x20
     6f4:	mov	x1, x24
     6f8:	bl	0 <realloc>
     6fc:	adrp	x8, 0 <llvm_gcda_start_file>
     700:	add	x8, x8, #0x0
     704:	ldr	x9, [x8, #16]
     708:	mov	x20, x0
     70c:	stp	x0, x24, [x8]
     710:	b	5bc <llvm_gcda_emit_function+0x1cc>
     714:	mov	w24, #0x1                   	// #1
     718:	str	w22, [x20, x23]
     71c:	add	x23, x23, #0x4
     720:	mov	x0, x19
     724:	str	x23, [x27]
     728:	bl	0 <strlen>
     72c:	mov	x21, x0
     730:	cbz	w24, 780 <llvm_gcda_emit_function+0x390>
     734:	adrp	x8, 0 <llvm_gcda_start_file>
     738:	ldr	x9, [x8]
     73c:	add	x8, x21, x23
     740:	cmp	x8, x9
     744:	b.ls	77c <llvm_gcda_emit_function+0x38c>  // b.plast
     748:	mov	w9, #0x1ffff               	// #131071
     74c:	add	x8, x8, x9
     750:	and	x22, x8, #0xfffffffffffe0000
     754:	mov	x0, x20
     758:	mov	x1, x22
     75c:	bl	0 <realloc>
     760:	adrp	x8, 0 <llvm_gcda_start_file>
     764:	add	x8, x8, #0x0
     768:	ldr	x23, [x8, #48]
     76c:	ldrb	w24, [x8]
     770:	mov	x20, x0
     774:	stp	x0, x22, [x8, #32]
     778:	b	780 <llvm_gcda_emit_function+0x390>
     77c:	mov	w24, #0x1                   	// #1
     780:	add	x0, x20, x23
     784:	mov	x1, x19
     788:	mov	x2, x21
     78c:	bl	0 <memcpy>
     790:	add	x22, x23, x21
     794:	mov	x0, x19
     798:	str	x22, [x27]
     79c:	bl	0 <strlen>
     7a0:	and	x8, x0, #0x3
     7a4:	mov	w9, #0x4                   	// #4
     7a8:	sub	x19, x9, x8
     7ac:	cbz	w24, 7f0 <llvm_gcda_emit_function+0x400>
     7b0:	adrp	x8, 0 <llvm_gcda_start_file>
     7b4:	ldr	x9, [x8]
     7b8:	add	x8, x19, x22
     7bc:	cmp	x8, x9
     7c0:	b.ls	7f0 <llvm_gcda_emit_function+0x400>  // b.plast
     7c4:	mov	w9, #0x1ffff               	// #131071
     7c8:	add	x8, x8, x9
     7cc:	and	x21, x8, #0xfffffffffffe0000
     7d0:	mov	x0, x20
     7d4:	mov	x1, x21
     7d8:	bl	0 <realloc>
     7dc:	adrp	x8, 0 <llvm_gcda_start_file>
     7e0:	add	x8, x8, #0x0
     7e4:	ldr	x22, [x8, #16]
     7e8:	mov	x20, x0
     7ec:	stp	x0, x21, [x8]
     7f0:	add	x0, x20, x22
     7f4:	mov	w1, wzr
     7f8:	mov	x2, x19
     7fc:	bl	0 <memset>
     800:	add	x8, x22, x19
     804:	str	x8, [x27]
     808:	ldp	x20, x19, [sp, #80]
     80c:	ldp	x22, x21, [sp, #64]
     810:	ldp	x24, x23, [sp, #48]
     814:	ldp	x26, x25, [sp, #32]
     818:	ldp	x28, x27, [sp, #16]
     81c:	ldp	x29, x30, [sp], #96
     820:	ret

0000000000000824 <llvm_gcda_emit_arcs>:
     824:	sub	sp, sp, #0x70
     828:	stp	x29, x30, [sp, #16]
     82c:	stp	x28, x27, [sp, #32]
     830:	stp	x26, x25, [sp, #48]
     834:	stp	x24, x23, [sp, #64]
     838:	stp	x22, x21, [sp, #80]
     83c:	stp	x20, x19, [sp, #96]
     840:	add	x29, sp, #0x10
     844:	adrp	x8, 0 <llvm_gcda_start_file>
     848:	add	x8, x8, #0x0
     84c:	ldr	x9, [x8]
     850:	cbz	x9, 8f0 <llvm_gcda_emit_arcs+0xcc>
     854:	adrp	x12, 0 <llvm_gcda_start_file>
     858:	ldrb	w9, [x12]
     85c:	ldr	x23, [x8, #24]
     860:	mov	x19, x1
     864:	mov	w22, w0
     868:	adrp	x26, 0 <llvm_gcda_start_file>
     86c:	tbz	w9, #0, 910 <llvm_gcda_emit_arcs+0xec>
     870:	adrp	x24, 0 <llvm_gcda_start_file>
     874:	ldr	x8, [x24]
     878:	add	x27, x23, #0x4
     87c:	cmp	x27, x8
     880:	b.ls	984 <llvm_gcda_emit_arcs+0x160>  // b.plast
     884:	adrp	x25, 0 <llvm_gcda_start_file>
     888:	add	x25, x25, #0x0
     88c:	mov	w8, #0x3                   	// #3
     890:	ldr	x0, [x25, #32]
     894:	movk	w8, #0x2, lsl #16
     898:	add	x8, x23, x8
     89c:	and	x21, x8, #0xfffffffffffe0000
     8a0:	mov	x1, x21
     8a4:	bl	0 <realloc>
     8a8:	ldr	x23, [x25, #48]
     8ac:	ldrb	w8, [x25]
     8b0:	mov	x20, x0
     8b4:	stp	x0, x21, [x25, #32]
     8b8:	mov	w9, #0x1a10000             	// #27328512
     8bc:	add	x27, x23, #0x4
     8c0:	cmp	w8, #0x1
     8c4:	lsl	w21, w22, #1
     8c8:	str	w9, [x0, x23]
     8cc:	str	x27, [x25, #48]
     8d0:	b.ne	9f8 <llvm_gcda_emit_arcs+0x1d4>  // b.any
     8d4:	adrp	x12, 0 <llvm_gcda_start_file>
     8d8:	ldr	x8, [x24]
     8dc:	add	x9, x23, #0x8
     8e0:	cmp	x9, x8
     8e4:	b.hi	9b0 <llvm_gcda_emit_arcs+0x18c>  // b.pmore
     8e8:	str	xzr, [sp, #8]
     8ec:	b	aa4 <llvm_gcda_emit_arcs+0x280>
     8f0:	ldp	x20, x19, [sp, #96]
     8f4:	ldp	x22, x21, [sp, #80]
     8f8:	ldp	x24, x23, [sp, #64]
     8fc:	ldp	x26, x25, [sp, #48]
     900:	ldp	x28, x27, [sp, #32]
     904:	ldp	x29, x30, [sp, #16]
     908:	add	sp, sp, #0x70
     90c:	ret
     910:	adrp	x8, 0 <llvm_gcda_start_file>
     914:	add	x8, x8, #0x0
     918:	ldr	x20, [x8]
     91c:	add	x27, x23, #0x4
     920:	ldr	w3, [x20, x23]
     924:	str	x27, [x8, #16]
     928:	cmn	w3, #0x1
     92c:	b.eq	9f0 <llvm_gcda_emit_arcs+0x1cc>  // b.none
     930:	mov	w8, #0x1a10000             	// #27328512
     934:	cmp	w3, w8
     938:	b.ne	ce0 <llvm_gcda_emit_arcs+0x4bc>  // b.any
     93c:	ldr	w3, [x20, x27]
     940:	add	x21, x23, #0x8
     944:	str	x21, [x26]
     948:	cmn	w3, #0x1
     94c:	b.eq	d00 <llvm_gcda_emit_arcs+0x4dc>  // b.none
     950:	lsr	w8, w3, #1
     954:	cmp	w8, w22
     958:	b.ne	d00 <llvm_gcda_emit_arcs+0x4dc>  // b.any
     95c:	mov	w24, w22
     960:	lsl	x0, x24, #3
     964:	bl	0 <malloc>
     968:	str	x0, [sp, #8]
     96c:	cbz	w22, a04 <llvm_gcda_emit_arcs+0x1e0>
     970:	cmp	w22, #0x4
     974:	b.cs	a0c <llvm_gcda_emit_arcs+0x1e8>  // b.hs, b.nlast
     978:	mov	x8, xzr
     97c:	adrp	x12, 0 <llvm_gcda_start_file>
     980:	b	a68 <llvm_gcda_emit_arcs+0x244>
     984:	adrp	x8, 0 <llvm_gcda_start_file>
     988:	add	x8, x8, #0x0
     98c:	ldr	x20, [x8]
     990:	mov	w9, #0x1a10000             	// #27328512
     994:	lsl	w21, w22, #1
     998:	str	w9, [x20, x23]
     99c:	str	x27, [x8, #16]
     9a0:	ldr	x8, [x24]
     9a4:	add	x9, x23, #0x8
     9a8:	cmp	x9, x8
     9ac:	b.ls	8e8 <llvm_gcda_emit_arcs+0xc4>  // b.plast
     9b0:	mov	w8, #0x3                   	// #3
     9b4:	movk	w8, #0x2, lsl #16
     9b8:	add	x8, x8, x23
     9bc:	add	x8, x8, #0x4
     9c0:	and	x23, x8, #0xfffffffffffe0000
     9c4:	mov	x0, x20
     9c8:	mov	x1, x23
     9cc:	bl	0 <realloc>
     9d0:	adrp	x8, 0 <llvm_gcda_start_file>
     9d4:	add	x8, x8, #0x0
     9d8:	ldr	x27, [x8, #16]
     9dc:	adrp	x12, 0 <llvm_gcda_start_file>
     9e0:	mov	x20, x0
     9e4:	str	xzr, [sp, #8]
     9e8:	stp	x0, x23, [x8]
     9ec:	b	aa4 <llvm_gcda_emit_arcs+0x280>
     9f0:	str	xzr, [sp, #8]
     9f4:	b	a90 <llvm_gcda_emit_arcs+0x26c>
     9f8:	str	xzr, [sp, #8]
     9fc:	adrp	x12, 0 <llvm_gcda_start_file>
     a00:	b	aa4 <llvm_gcda_emit_arcs+0x280>
     a04:	adrp	x12, 0 <llvm_gcda_start_file>
     a08:	b	a90 <llvm_gcda_emit_arcs+0x26c>
     a0c:	and	x8, x24, #0xfffffffc
     a10:	add	x10, x23, x20
     a14:	add	x9, x0, #0x10
     a18:	add	x21, x21, x8, lsl #3
     a1c:	add	x10, x10, #0x18
     a20:	mov	x11, x8
     a24:	sub	x12, x10, #0x10
     a28:	ld2	{v0.2s, v1.2s}, [x10]
     a2c:	ld2	{v2.2s, v3.2s}, [x12]
     a30:	subs	x11, x11, #0x4
     a34:	add	x10, x10, #0x20
     a38:	shll	v4.2d, v1.2s, #32
     a3c:	uxtl	v0.2d, v0.2s
     a40:	shll	v1.2d, v3.2s, #32
     a44:	uxtl	v2.2d, v2.2s
     a48:	orr	v0.16b, v4.16b, v0.16b
     a4c:	orr	v1.16b, v1.16b, v2.16b
     a50:	stp	q1, q0, [x9, #-16]
     a54:	add	x9, x9, #0x20
     a58:	b.ne	a24 <llvm_gcda_emit_arcs+0x200>  // b.any
     a5c:	cmp	x8, x24
     a60:	adrp	x12, 0 <llvm_gcda_start_file>
     a64:	b.eq	a8c <llvm_gcda_emit_arcs+0x268>  // b.none
     a68:	add	x9, x0, x8, lsl #3
     a6c:	sub	x8, x24, x8
     a70:	mov	x10, x21
     a74:	ldr	x11, [x20, x10]
     a78:	add	x21, x10, #0x8
     a7c:	subs	x8, x8, #0x1
     a80:	mov	x10, x21
     a84:	str	x11, [x9], #8
     a88:	b.ne	a74 <llvm_gcda_emit_arcs+0x250>  // b.any
     a8c:	str	x21, [x26]
     a90:	mov	w8, #0x1a10000             	// #27328512
     a94:	str	x23, [x26]
     a98:	str	w8, [x20, x23]
     a9c:	str	x27, [x26]
     aa0:	lsl	w21, w22, #1
     aa4:	add	x8, x27, #0x4
     aa8:	str	w21, [x20, x27]
     aac:	str	x8, [x26]
     ab0:	cbz	w22, cbc <llvm_gcda_emit_arcs+0x498>
     ab4:	ldr	x25, [sp, #8]
     ab8:	mov	w23, w22
     abc:	cbz	x25, bc8 <llvm_gcda_emit_arcs+0x3a4>
     ac0:	adrp	x28, 0 <llvm_gcda_start_file>
     ac4:	adrp	x21, 0 <llvm_gcda_start_file>
     ac8:	add	x28, x28, #0x0
     acc:	add	x21, x21, #0x0
     ad0:	b	afc <llvm_gcda_emit_arcs+0x2d8>
     ad4:	add	x9, x8, #0x4
     ad8:	str	w27, [x20, x8]
     adc:	str	x9, [x26]
     ae0:	add	x8, x9, #0x4
     ae4:	add	x19, x19, #0x8
     ae8:	subs	x23, x23, #0x1
     aec:	add	x25, x25, #0x8
     af0:	str	w24, [x20, x9]
     af4:	str	x8, [x26]
     af8:	b.eq	cbc <llvm_gcda_emit_arcs+0x498>  // b.none
     afc:	ldr	x9, [x25]
     b00:	ldr	x10, [x19]
     b04:	add	x27, x10, x9
     b08:	str	x27, [x19]
     b0c:	ldrb	w9, [x12]
     b10:	lsr	x24, x27, #32
     b14:	tbz	w9, #0, ad4 <llvm_gcda_emit_arcs+0x2b0>
     b18:	adrp	x9, 0 <llvm_gcda_start_file>
     b1c:	ldr	x22, [x9]
     b20:	add	x9, x8, #0x4
     b24:	cmp	x9, x22
     b28:	b.ls	b80 <llvm_gcda_emit_arcs+0x35c>  // b.plast
     b2c:	mov	w9, #0x3                   	// #3
     b30:	movk	w9, #0x2, lsl #16
     b34:	add	x8, x8, x9
     b38:	and	x22, x8, #0xfffffffffffe0000
     b3c:	mov	x0, x20
     b40:	mov	x1, x22
     b44:	bl	0 <realloc>
     b48:	ldr	x8, [x28, #48]
     b4c:	ldrb	w10, [x28]
     b50:	mov	x20, x0
     b54:	adrp	x12, 0 <llvm_gcda_start_file>
     b58:	add	x9, x8, #0x4
     b5c:	cmp	w10, #0x1
     b60:	stp	x0, x22, [x28, #32]
     b64:	str	w27, [x0, x8]
     b68:	str	x9, [x28, #48]
     b6c:	b.ne	ae0 <llvm_gcda_emit_arcs+0x2bc>  // b.any
     b70:	add	x10, x8, #0x8
     b74:	cmp	x10, x22
     b78:	b.ls	ae0 <llvm_gcda_emit_arcs+0x2bc>  // b.plast
     b7c:	b	b94 <llvm_gcda_emit_arcs+0x370>
     b80:	str	w27, [x20, x8]
     b84:	str	x9, [x26]
     b88:	add	x10, x8, #0x8
     b8c:	cmp	x10, x22
     b90:	b.ls	ae0 <llvm_gcda_emit_arcs+0x2bc>  // b.plast
     b94:	mov	w9, #0x3                   	// #3
     b98:	movk	w9, #0x2, lsl #16
     b9c:	add	x8, x9, x8
     ba0:	add	x8, x8, #0x4
     ba4:	and	x22, x8, #0xfffffffffffe0000
     ba8:	mov	x0, x20
     bac:	mov	x1, x22
     bb0:	bl	0 <realloc>
     bb4:	ldr	x9, [x21, #16]
     bb8:	adrp	x12, 0 <llvm_gcda_start_file>
     bbc:	mov	x20, x0
     bc0:	stp	x0, x22, [x21]
     bc4:	b	ae0 <llvm_gcda_emit_arcs+0x2bc>
     bc8:	adrp	x25, 0 <llvm_gcda_start_file>
     bcc:	adrp	x27, 0 <llvm_gcda_start_file>
     bd0:	adrp	x21, 0 <llvm_gcda_start_file>
     bd4:	add	x25, x25, #0x0
     bd8:	add	x27, x27, #0x0
     bdc:	b	c04 <llvm_gcda_emit_arcs+0x3e0>
     be0:	add	x9, x8, #0x4
     be4:	str	w28, [x20, x8]
     be8:	str	x9, [x26]
     bec:	add	x8, x9, #0x4
     bf0:	subs	x23, x23, #0x1
     bf4:	add	x19, x19, #0x8
     bf8:	str	w24, [x20, x9]
     bfc:	str	x8, [x26]
     c00:	b.eq	cbc <llvm_gcda_emit_arcs+0x498>  // b.none
     c04:	ldrb	w9, [x12]
     c08:	ldp	w28, w24, [x19]
     c0c:	tbz	w9, #0, be0 <llvm_gcda_emit_arcs+0x3bc>
     c10:	ldr	x22, [x21]
     c14:	add	x9, x8, #0x4
     c18:	cmp	x9, x22
     c1c:	b.ls	c74 <llvm_gcda_emit_arcs+0x450>  // b.plast
     c20:	mov	w9, #0x3                   	// #3
     c24:	movk	w9, #0x2, lsl #16
     c28:	add	x8, x8, x9
     c2c:	and	x22, x8, #0xfffffffffffe0000
     c30:	mov	x0, x20
     c34:	mov	x1, x22
     c38:	bl	0 <realloc>
     c3c:	ldr	x8, [x25, #48]
     c40:	ldrb	w10, [x25]
     c44:	mov	x20, x0
     c48:	adrp	x12, 0 <llvm_gcda_start_file>
     c4c:	add	x9, x8, #0x4
     c50:	cmp	w10, #0x1
     c54:	stp	x0, x22, [x25, #32]
     c58:	str	w28, [x0, x8]
     c5c:	str	x9, [x25, #48]
     c60:	b.ne	bec <llvm_gcda_emit_arcs+0x3c8>  // b.any
     c64:	add	x10, x8, #0x8
     c68:	cmp	x10, x22
     c6c:	b.ls	bec <llvm_gcda_emit_arcs+0x3c8>  // b.plast
     c70:	b	c88 <llvm_gcda_emit_arcs+0x464>
     c74:	str	w28, [x20, x8]
     c78:	str	x9, [x26]
     c7c:	add	x10, x8, #0x8
     c80:	cmp	x10, x22
     c84:	b.ls	bec <llvm_gcda_emit_arcs+0x3c8>  // b.plast
     c88:	mov	w9, #0x3                   	// #3
     c8c:	movk	w9, #0x2, lsl #16
     c90:	add	x8, x9, x8
     c94:	add	x8, x8, #0x4
     c98:	and	x22, x8, #0xfffffffffffe0000
     c9c:	mov	x0, x20
     ca0:	mov	x1, x22
     ca4:	bl	0 <realloc>
     ca8:	ldr	x9, [x27, #16]
     cac:	adrp	x12, 0 <llvm_gcda_start_file>
     cb0:	mov	x20, x0
     cb4:	stp	x0, x22, [x27]
     cb8:	b	bec <llvm_gcda_emit_arcs+0x3c8>
     cbc:	ldr	x0, [sp, #8]
     cc0:	ldp	x20, x19, [sp, #96]
     cc4:	ldp	x22, x21, [sp, #80]
     cc8:	ldp	x24, x23, [sp, #64]
     ccc:	ldp	x26, x25, [sp, #48]
     cd0:	ldp	x28, x27, [sp, #32]
     cd4:	ldp	x29, x30, [sp, #16]
     cd8:	add	sp, sp, #0x70
     cdc:	b	0 <free>
     ce0:	adrp	x8, 0 <stderr>
     ce4:	ldr	x8, [x8]
     ce8:	adrp	x9, 0 <llvm_gcda_start_file>
     cec:	ldr	x2, [x9]
     cf0:	adrp	x1, 0 <llvm_gcda_start_file>
     cf4:	ldr	x0, [x8]
     cf8:	add	x1, x1, #0x0
     cfc:	b	d1c <llvm_gcda_emit_arcs+0x4f8>
     d00:	adrp	x8, 0 <stderr>
     d04:	ldr	x8, [x8]
     d08:	adrp	x9, 0 <llvm_gcda_start_file>
     d0c:	ldr	x2, [x9]
     d10:	adrp	x1, 0 <llvm_gcda_start_file>
     d14:	ldr	x0, [x8]
     d18:	add	x1, x1, #0x0
     d1c:	ldp	x20, x19, [sp, #96]
     d20:	ldp	x22, x21, [sp, #80]
     d24:	ldp	x24, x23, [sp, #64]
     d28:	ldp	x26, x25, [sp, #48]
     d2c:	ldp	x28, x27, [sp, #32]
     d30:	ldp	x29, x30, [sp, #16]
     d34:	add	sp, sp, #0x70
     d38:	b	0 <fprintf>

0000000000000d3c <llvm_gcda_summary_info>:
     d3c:	stp	x29, x30, [sp, #-80]!
     d40:	str	x25, [sp, #16]
     d44:	stp	x24, x23, [sp, #32]
     d48:	stp	x22, x21, [sp, #48]
     d4c:	stp	x20, x19, [sp, #64]
     d50:	mov	x29, sp
     d54:	adrp	x8, 0 <llvm_gcda_start_file>
     d58:	add	x8, x8, #0x0
     d5c:	ldr	x9, [x8]
     d60:	cbz	x9, 11ec <llvm_gcda_summary_info+0x4b0>
     d64:	adrp	x9, 0 <llvm_gcda_start_file>
     d68:	ldrb	w10, [x9]
     d6c:	ldr	x9, [x8, #24]
     d70:	adrp	x20, 0 <llvm_gcda_start_file>
     d74:	adrp	x22, 0 <llvm_gcda_start_file>
     d78:	adrp	x21, 0 <llvm_gcda_start_file>
     d7c:	add	x20, x20, #0x0
     d80:	add	x22, x22, #0x0
     d84:	tbz	w10, #0, de8 <llvm_gcda_summary_info+0xac>
     d88:	adrp	x24, 0 <llvm_gcda_start_file>
     d8c:	ldr	x10, [x24]
     d90:	mov	w23, #0x7                   	// #7
     d94:	add	x8, x9, #0x4
     d98:	movk	w23, #0x2, lsl #16
     d9c:	cmp	x8, x10
     da0:	mov	w25, #0xa1000000            	// #-1593835520
     da4:	b.ls	e1c <llvm_gcda_summary_info+0xe0>  // b.plast
     da8:	ldr	x0, [x22, #32]
     dac:	add	x8, x23, x9
     db0:	sub	x8, x8, #0x4
     db4:	and	x19, x8, #0xfffffffffffe0000
     db8:	mov	x1, x19
     dbc:	bl	0 <realloc>
     dc0:	ldr	x9, [x22, #48]
     dc4:	ldrb	w10, [x22]
     dc8:	stp	x0, x19, [x22, #32]
     dcc:	add	x8, x9, #0x4
     dd0:	cmp	w10, #0x1
     dd4:	str	w25, [x0, x9]
     dd8:	str	x8, [x22, #48]
     ddc:	b.eq	e30 <llvm_gcda_summary_info+0xf4>  // b.none
     de0:	mov	w10, #0x1                   	// #1
     de4:	b	ebc <llvm_gcda_summary_info+0x180>
     de8:	adrp	x10, 0 <llvm_gcda_start_file>
     dec:	add	x10, x10, #0x0
     df0:	ldr	x0, [x10]
     df4:	mov	w11, #0xa1000000            	// #-1593835520
     df8:	add	x8, x9, #0x4
     dfc:	ldr	w3, [x0, x9]
     e00:	str	x8, [x10, #16]
     e04:	cmp	w3, w11
     e08:	b.eq	e7c <llvm_gcda_summary_info+0x140>  // b.none
     e0c:	cmn	w3, #0x1
     e10:	b.ne	1330 <llvm_gcda_summary_info+0x5f4>  // b.any
     e14:	mov	w10, #0x1                   	// #1
     e18:	b	eb0 <llvm_gcda_summary_info+0x174>
     e1c:	adrp	x10, 0 <llvm_gcda_start_file>
     e20:	add	x10, x10, #0x0
     e24:	ldr	x0, [x10]
     e28:	str	w25, [x0, x9]
     e2c:	str	x8, [x10, #16]
     e30:	ldr	x10, [x24]
     e34:	add	x11, x9, #0x8
     e38:	cmp	x11, x10
     e3c:	b.ls	ee8 <llvm_gcda_summary_info+0x1ac>  // b.plast
     e40:	add	x8, x9, x23
     e44:	and	x19, x8, #0xfffffffffffe0000
     e48:	mov	x1, x19
     e4c:	bl	0 <realloc>
     e50:	ldr	x8, [x22, #48]
     e54:	ldrb	w10, [x22]
     e58:	mov	w9, #0x9                   	// #9
     e5c:	stp	x0, x19, [x22, #32]
     e60:	str	w9, [x0, x8]
     e64:	add	x9, x8, #0x4
     e68:	cmp	w10, #0x1
     e6c:	str	x9, [x22, #48]
     e70:	b.eq	ef8 <llvm_gcda_summary_info+0x1bc>  // b.none
     e74:	mov	w10, #0x1                   	// #1
     e78:	b	ecc <llvm_gcda_summary_info+0x190>
     e7c:	ldr	w3, [x0, x8]
     e80:	add	x10, x9, #0x8
     e84:	str	x10, [x21]
     e88:	cmp	w3, #0x9
     e8c:	b.ne	1350 <llvm_gcda_summary_info+0x614>  // b.any
     e90:	ldrb	w11, [x20]
     e94:	add	x10, x9, x0
     e98:	ldr	w10, [x10, #16]
     e9c:	add	x12, x9, #0x14
     ea0:	mvn	w11, w11
     ea4:	and	w11, w11, #0x1
     ea8:	add	w10, w10, w11
     eac:	stur	x12, [x20, #44]
     eb0:	mov	w11, #0xa1000000            	// #-1593835520
     eb4:	str	w11, [x0, x9]
     eb8:	str	x8, [x21]
     ebc:	mov	w11, #0x9                   	// #9
     ec0:	add	x9, x8, #0x4
     ec4:	str	w11, [x0, x8]
     ec8:	str	x9, [x21]
     ecc:	add	x11, x9, #0x4
     ed0:	str	wzr, [x0, x9]
     ed4:	str	x11, [x21]
     ed8:	add	x8, x11, #0x4
     edc:	str	wzr, [x0, x11]
     ee0:	str	x8, [x21]
     ee4:	b	fd0 <llvm_gcda_summary_info+0x294>
     ee8:	mov	w10, #0x9                   	// #9
     eec:	add	x9, x8, #0x4
     ef0:	str	w10, [x0, x8]
     ef4:	str	x9, [x21]
     ef8:	ldr	x10, [x24]
     efc:	add	x11, x8, #0x8
     f00:	cmp	x11, x10
     f04:	b.ls	f40 <llvm_gcda_summary_info+0x204>  // b.plast
     f08:	add	x8, x8, x23
     f0c:	and	x19, x8, #0xfffffffffffe0000
     f10:	mov	x1, x19
     f14:	bl	0 <realloc>
     f18:	ldr	x9, [x22, #48]
     f1c:	ldrb	w8, [x22]
     f20:	stp	x0, x19, [x22, #32]
     f24:	add	x11, x9, #0x4
     f28:	cmp	w8, #0x1
     f2c:	str	wzr, [x0, x9]
     f30:	str	x11, [x22, #48]
     f34:	b.eq	f4c <llvm_gcda_summary_info+0x210>  // b.none
     f38:	mov	w10, #0x1                   	// #1
     f3c:	b	ed8 <llvm_gcda_summary_info+0x19c>
     f40:	add	x11, x9, #0x4
     f44:	str	wzr, [x0, x9]
     f48:	str	x11, [x21]
     f4c:	ldr	x8, [x24]
     f50:	add	x10, x9, #0x8
     f54:	cmp	x10, x8
     f58:	b.ls	f90 <llvm_gcda_summary_info+0x254>  // b.plast
     f5c:	add	x8, x9, x23
     f60:	and	x19, x8, #0xfffffffffffe0000
     f64:	mov	x1, x19
     f68:	bl	0 <realloc>
     f6c:	ldr	x11, [x22, #48]
     f70:	ldrb	w9, [x22]
     f74:	stp	x0, x19, [x22, #32]
     f78:	add	x8, x11, #0x4
     f7c:	cmp	w9, #0x1
     f80:	str	wzr, [x0, x11]
     f84:	str	x8, [x22, #48]
     f88:	b.eq	f9c <llvm_gcda_summary_info+0x260>  // b.none
     f8c:	b	fcc <llvm_gcda_summary_info+0x290>
     f90:	add	x8, x11, #0x4
     f94:	str	wzr, [x0, x11]
     f98:	str	x8, [x21]
     f9c:	ldr	x9, [x24]
     fa0:	add	x10, x11, #0x8
     fa4:	cmp	x10, x9
     fa8:	b.ls	fcc <llvm_gcda_summary_info+0x290>  // b.plast
     fac:	add	x8, x11, x23
     fb0:	and	x19, x8, #0xfffffffffffe0000
     fb4:	mov	x1, x19
     fb8:	bl	0 <realloc>
     fbc:	adrp	x9, 0 <llvm_gcda_start_file>
     fc0:	add	x9, x9, #0x0
     fc4:	ldr	x8, [x9, #16]
     fc8:	stp	x0, x19, [x9]
     fcc:	mov	w10, #0x1                   	// #1
     fd0:	str	w10, [x0, x8]
     fd4:	ldrb	w9, [x22]
     fd8:	add	x10, x8, #0x4
     fdc:	str	x10, [x22, #48]
     fe0:	tbz	w9, #0, 1170 <llvm_gcda_summary_info+0x434>
     fe4:	adrp	x24, 0 <llvm_gcda_start_file>
     fe8:	ldr	x11, [x24]
     fec:	add	x9, x8, #0x8
     ff0:	mov	w23, #0x7                   	// #7
     ff4:	movk	w23, #0x2, lsl #16
     ff8:	cmp	x9, x11
     ffc:	b.ls	1204 <llvm_gcda_summary_info+0x4c8>  // b.plast
    1000:	ldr	x0, [x22, #32]
    1004:	add	x8, x8, x23
    1008:	and	x19, x8, #0xfffffffffffe0000
    100c:	mov	x1, x19
    1010:	bl	0 <realloc>
    1014:	ldr	x10, [x22, #48]
    1018:	ldrb	w8, [x22]
    101c:	stp	x0, x19, [x22, #32]
    1020:	add	x9, x10, #0x4
    1024:	str	wzr, [x0, x10]
    1028:	str	x9, [x22, #48]
    102c:	tbz	w8, #0, 1188 <llvm_gcda_summary_info+0x44c>
    1030:	ldr	x8, [x24]
    1034:	add	x11, x10, #0x8
    1038:	cmp	x11, x8
    103c:	b.ls	1228 <llvm_gcda_summary_info+0x4ec>  // b.plast
    1040:	add	x8, x10, x23
    1044:	and	x19, x8, #0xfffffffffffe0000
    1048:	mov	x1, x19
    104c:	bl	0 <realloc>
    1050:	ldr	x9, [x22, #48]
    1054:	ldrb	w10, [x22]
    1058:	stp	x0, x19, [x22, #32]
    105c:	add	x8, x9, #0x4
    1060:	cmp	w10, #0x1
    1064:	str	wzr, [x0, x9]
    1068:	str	x8, [x22, #48]
    106c:	b.ne	1194 <llvm_gcda_summary_info+0x458>  // b.any
    1070:	ldr	x10, [x24]
    1074:	add	x11, x9, #0x8
    1078:	cmp	x11, x10
    107c:	b.ls	1244 <llvm_gcda_summary_info+0x508>  // b.plast
    1080:	add	x8, x9, x23
    1084:	and	x19, x8, #0xfffffffffffe0000
    1088:	mov	x1, x19
    108c:	bl	0 <realloc>
    1090:	ldr	x8, [x22, #48]
    1094:	ldrb	w10, [x22]
    1098:	stp	x0, x19, [x22, #32]
    109c:	add	x9, x8, #0x4
    10a0:	cmp	w10, #0x1
    10a4:	str	wzr, [x0, x8]
    10a8:	str	x9, [x22, #48]
    10ac:	b.ne	11a0 <llvm_gcda_summary_info+0x464>  // b.any
    10b0:	ldr	x10, [x24]
    10b4:	add	x11, x8, #0x8
    10b8:	cmp	x11, x10
    10bc:	b.ls	1260 <llvm_gcda_summary_info+0x524>  // b.plast
    10c0:	add	x8, x8, x23
    10c4:	and	x19, x8, #0xfffffffffffe0000
    10c8:	mov	x1, x19
    10cc:	bl	0 <realloc>
    10d0:	ldr	x9, [x22, #48]
    10d4:	ldrb	w10, [x22]
    10d8:	stp	x0, x19, [x22, #32]
    10dc:	add	x8, x9, #0x4
    10e0:	cmp	w10, #0x1
    10e4:	str	wzr, [x0, x9]
    10e8:	str	x8, [x22, #48]
    10ec:	b.ne	11ac <llvm_gcda_summary_info+0x470>  // b.any
    10f0:	ldr	x10, [x24]
    10f4:	add	x11, x9, #0x8
    10f8:	cmp	x11, x10
    10fc:	b.ls	127c <llvm_gcda_summary_info+0x540>  // b.plast
    1100:	add	x8, x9, x23
    1104:	and	x19, x8, #0xfffffffffffe0000
    1108:	mov	x1, x19
    110c:	bl	0 <realloc>
    1110:	ldr	x8, [x22, #48]
    1114:	ldrb	w10, [x22]
    1118:	stp	x0, x19, [x22, #32]
    111c:	add	x9, x8, #0x4
    1120:	cmp	w10, #0x1
    1124:	str	wzr, [x0, x8]
    1128:	str	x9, [x22, #48]
    112c:	b.ne	11b8 <llvm_gcda_summary_info+0x47c>  // b.any
    1130:	ldr	x10, [x24]
    1134:	add	x11, x8, #0x8
    1138:	cmp	x11, x10
    113c:	b.ls	1298 <llvm_gcda_summary_info+0x55c>  // b.plast
    1140:	add	x8, x8, x23
    1144:	and	x19, x8, #0xfffffffffffe0000
    1148:	mov	x1, x19
    114c:	bl	0 <realloc>
    1150:	ldr	x9, [x22, #48]
    1154:	ldrb	w10, [x22]
    1158:	stp	x0, x19, [x22, #32]
    115c:	add	x8, x9, #0x4
    1160:	str	wzr, [x0, x9]
    1164:	str	x8, [x22, #48]
    1168:	tbz	w10, #0, 11c4 <llvm_gcda_summary_info+0x488>
    116c:	b	12a4 <llvm_gcda_summary_info+0x568>
    1170:	adrp	x11, 0 <llvm_gcda_start_file>
    1174:	add	x11, x11, #0x0
    1178:	ldr	x0, [x11]
    117c:	add	x9, x8, #0x8
    1180:	str	wzr, [x0, x10]
    1184:	str	x9, [x11, #16]
    1188:	add	x8, x9, #0x4
    118c:	str	wzr, [x0, x9]
    1190:	str	x8, [x21]
    1194:	add	x9, x8, #0x4
    1198:	str	wzr, [x0, x8]
    119c:	str	x9, [x21]
    11a0:	add	x8, x9, #0x4
    11a4:	str	wzr, [x0, x9]
    11a8:	str	x8, [x21]
    11ac:	add	x9, x8, #0x4
    11b0:	str	wzr, [x0, x8]
    11b4:	str	x9, [x21]
    11b8:	add	x8, x9, #0x4
    11bc:	str	wzr, [x0, x9]
    11c0:	str	x8, [x21]
    11c4:	mov	w10, #0xa3000000            	// #-1560281088
    11c8:	add	x9, x8, #0x4
    11cc:	str	w10, [x0, x8]
    11d0:	str	x9, [x21]
    11d4:	ldur	x8, [x20, #28]
    11d8:	add	x10, x9, #0x4
    11dc:	mov	w11, #0x1                   	// #1
    11e0:	str	wzr, [x8, x9]
    11e4:	stur	x10, [x20, #44]
    11e8:	strb	w11, [x20]
    11ec:	ldp	x20, x19, [sp, #64]
    11f0:	ldp	x22, x21, [sp, #48]
    11f4:	ldp	x24, x23, [sp, #32]
    11f8:	ldr	x25, [sp, #16]
    11fc:	ldp	x29, x30, [sp], #80
    1200:	ret
    1204:	adrp	x8, 0 <llvm_gcda_start_file>
    1208:	add	x8, x8, #0x0
    120c:	ldr	x0, [x8]
    1210:	str	wzr, [x0, x10]
    1214:	str	x9, [x8, #16]
    1218:	ldr	x8, [x24]
    121c:	add	x11, x10, #0x8
    1220:	cmp	x11, x8
    1224:	b.hi	1040 <llvm_gcda_summary_info+0x304>  // b.pmore
    1228:	add	x8, x9, #0x4
    122c:	str	wzr, [x0, x9]
    1230:	str	x8, [x21]
    1234:	ldr	x10, [x24]
    1238:	add	x11, x9, #0x8
    123c:	cmp	x11, x10
    1240:	b.hi	1080 <llvm_gcda_summary_info+0x344>  // b.pmore
    1244:	add	x9, x8, #0x4
    1248:	str	wzr, [x0, x8]
    124c:	str	x9, [x21]
    1250:	ldr	x10, [x24]
    1254:	add	x11, x8, #0x8
    1258:	cmp	x11, x10
    125c:	b.hi	10c0 <llvm_gcda_summary_info+0x384>  // b.pmore
    1260:	add	x8, x9, #0x4
    1264:	str	wzr, [x0, x9]
    1268:	str	x8, [x21]
    126c:	ldr	x10, [x24]
    1270:	add	x11, x9, #0x8
    1274:	cmp	x11, x10
    1278:	b.hi	1100 <llvm_gcda_summary_info+0x3c4>  // b.pmore
    127c:	add	x9, x8, #0x4
    1280:	str	wzr, [x0, x8]
    1284:	str	x9, [x21]
    1288:	ldr	x10, [x24]
    128c:	add	x11, x8, #0x8
    1290:	cmp	x11, x10
    1294:	b.hi	1140 <llvm_gcda_summary_info+0x404>  // b.pmore
    1298:	add	x8, x9, #0x4
    129c:	str	wzr, [x0, x9]
    12a0:	str	x8, [x21]
    12a4:	ldr	x10, [x24]
    12a8:	add	x11, x9, #0x8
    12ac:	cmp	x11, x10
    12b0:	b.ls	12ec <llvm_gcda_summary_info+0x5b0>  // b.plast
    12b4:	add	x8, x9, x23
    12b8:	and	x19, x8, #0xfffffffffffe0000
    12bc:	mov	x1, x19
    12c0:	bl	0 <realloc>
    12c4:	ldr	x8, [x22, #48]
    12c8:	ldrb	w10, [x22]
    12cc:	mov	w9, #0xa3000000            	// #-1560281088
    12d0:	stp	x0, x19, [x22, #32]
    12d4:	str	w9, [x0, x8]
    12d8:	add	x9, x8, #0x4
    12dc:	cmp	w10, #0x1
    12e0:	str	x9, [x22, #48]
    12e4:	b.ne	11d4 <llvm_gcda_summary_info+0x498>  // b.any
    12e8:	b	12fc <llvm_gcda_summary_info+0x5c0>
    12ec:	mov	w10, #0xa3000000            	// #-1560281088
    12f0:	add	x9, x8, #0x4
    12f4:	str	w10, [x0, x8]
    12f8:	str	x9, [x21]
    12fc:	ldr	x10, [x24]
    1300:	add	x11, x8, #0x8
    1304:	cmp	x11, x10
    1308:	b.ls	11d4 <llvm_gcda_summary_info+0x498>  // b.plast
    130c:	add	x8, x8, x23
    1310:	and	x19, x8, #0xfffffffffffe0000
    1314:	mov	x1, x19
    1318:	bl	0 <realloc>
    131c:	adrp	x8, 0 <llvm_gcda_start_file>
    1320:	add	x8, x8, #0x0
    1324:	ldr	x9, [x8, #16]
    1328:	stp	x0, x19, [x8]
    132c:	b	11d4 <llvm_gcda_summary_info+0x498>
    1330:	adrp	x8, 0 <stderr>
    1334:	ldr	x8, [x8]
    1338:	adrp	x9, 0 <llvm_gcda_start_file>
    133c:	ldr	x2, [x9]
    1340:	adrp	x1, 0 <llvm_gcda_start_file>
    1344:	ldr	x0, [x8]
    1348:	add	x1, x1, #0x0
    134c:	b	136c <llvm_gcda_summary_info+0x630>
    1350:	adrp	x8, 0 <stderr>
    1354:	ldr	x8, [x8]
    1358:	adrp	x9, 0 <llvm_gcda_start_file>
    135c:	ldr	x2, [x9]
    1360:	adrp	x1, 0 <llvm_gcda_start_file>
    1364:	ldr	x0, [x8]
    1368:	add	x1, x1, #0x0
    136c:	ldp	x20, x19, [sp, #64]
    1370:	ldp	x22, x21, [sp, #48]
    1374:	ldp	x24, x23, [sp, #32]
    1378:	ldr	x25, [sp, #16]
    137c:	ldp	x29, x30, [sp], #80
    1380:	b	0 <fprintf>

0000000000001384 <llvm_gcda_end_file>:
    1384:	stp	x29, x30, [sp, #-64]!
    1388:	str	x23, [sp, #16]
    138c:	stp	x22, x21, [sp, #32]
    1390:	stp	x20, x19, [sp, #48]
    1394:	mov	x29, sp
    1398:	adrp	x8, 0 <llvm_gcda_start_file>
    139c:	ldr	x8, [x8]
    13a0:	adrp	x21, 0 <llvm_gcda_start_file>
    13a4:	cbz	x8, 14b0 <llvm_gcda_end_file+0x12c>
    13a8:	adrp	x8, 0 <llvm_gcda_start_file>
    13ac:	ldrb	w8, [x8]
    13b0:	adrp	x23, 0 <llvm_gcda_start_file>
    13b4:	adrp	x22, 0 <llvm_gcda_start_file>
    13b8:	add	x23, x23, #0x0
    13bc:	add	x22, x22, #0x0
    13c0:	tbz	w8, #0, 1424 <llvm_gcda_end_file+0xa0>
    13c4:	adrp	x9, 0 <llvm_gcda_start_file>
    13c8:	add	x9, x9, #0x0
    13cc:	ldp	x9, x8, [x9]
    13d0:	add	x10, x8, #0x8
    13d4:	cmp	x10, x9
    13d8:	b.ls	1468 <llvm_gcda_end_file+0xe4>  // b.plast
    13dc:	adrp	x20, 0 <llvm_gcda_start_file>
    13e0:	add	x20, x20, #0x0
    13e4:	mov	w9, #0x7                   	// #7
    13e8:	ldr	x0, [x20, #32]
    13ec:	movk	w9, #0x2, lsl #16
    13f0:	add	x8, x8, x9
    13f4:	and	x19, x8, #0xfffffffffffe0000
    13f8:	mov	x1, x19
    13fc:	bl	0 <realloc>
    1400:	ldr	x8, [x20, #48]
    1404:	ldrb	w9, [x20]
    1408:	stp	x0, x19, [x20, #32]
    140c:	add	x1, x8, #0x8
    1410:	cmp	w9, #0x1
    1414:	str	xzr, [x0, x8]
    1418:	str	x1, [x20, #48]
    141c:	b.ne	1438 <llvm_gcda_end_file+0xb4>  // b.any
    1420:	b	147c <llvm_gcda_end_file+0xf8>
    1424:	ldr	x0, [x23]
    1428:	ldr	x8, [x23, #16]
    142c:	str	xzr, [x0, x8]
    1430:	add	x8, x8, #0x8
    1434:	str	x8, [x23, #16]
    1438:	adrp	x8, 0 <llvm_gcda_start_file>
    143c:	ldr	x1, [x8]
    1440:	mov	w2, #0x4                   	// #4
    1444:	bl	0 <msync>
    1448:	cmn	w0, #0x1
    144c:	b.eq	14c8 <llvm_gcda_end_file+0x144>  // b.none
    1450:	ldr	x0, [x23]
    1454:	ldr	x1, [x23, #32]
    1458:	bl	0 <munmap>
    145c:	str	xzr, [x23]
    1460:	str	xzr, [x23, #32]
    1464:	b	1490 <llvm_gcda_end_file+0x10c>
    1468:	ldr	x8, [x23, #16]
    146c:	ldr	x0, [x23]
    1470:	add	x1, x8, #0x8
    1474:	str	xzr, [x0, x8]
    1478:	str	x1, [x23, #16]
    147c:	ldr	x3, [x22]
    1480:	mov	w2, #0x1                   	// #1
    1484:	bl	0 <fwrite>
    1488:	ldr	x0, [x22, #8]
    148c:	bl	0 <free>
    1490:	ldr	x0, [x22]
    1494:	bl	0 <fflush>
    1498:	adrp	x8, 0 <llvm_gcda_start_file>
    149c:	ldr	w0, [x8]
    14a0:	bl	0 <lprofUnlockFd>
    14a4:	ldr	x0, [x22]
    14a8:	bl	0 <fclose>
    14ac:	stp	xzr, xzr, [x22]
    14b0:	ldr	x0, [x21]
    14b4:	ldp	x20, x19, [sp, #48]
    14b8:	ldp	x22, x21, [sp, #32]
    14bc:	ldr	x23, [sp, #16]
    14c0:	ldp	x29, x30, [sp], #64
    14c4:	b	0 <free>
    14c8:	bl	0 <__errno_location>
    14cc:	adrp	x8, 0 <stderr>
    14d0:	ldr	w0, [x0]
    14d4:	ldr	x8, [x8]
    14d8:	ldr	x20, [x21]
    14dc:	ldr	x19, [x8]
    14e0:	bl	0 <strerror>
    14e4:	adrp	x1, 0 <llvm_gcda_start_file>
    14e8:	mov	x3, x0
    14ec:	add	x1, x1, #0x0
    14f0:	mov	x0, x19
    14f4:	mov	x2, x20
    14f8:	bl	0 <fprintf>
    14fc:	b	1450 <llvm_gcda_end_file+0xcc>

0000000000001500 <llvm_register_writeout_function>:
    1500:	stp	x29, x30, [sp, #-32]!
    1504:	str	x19, [sp, #16]
    1508:	mov	x29, sp
    150c:	mov	x19, x0
    1510:	mov	w0, #0x18                  	// #24
    1514:	bl	0 <malloc>
    1518:	str	xzr, [x0, #16]
    151c:	adrp	x9, 10 <llvm_gcda_start_file+0x10>
    1520:	ldr	x9, [x9]
    1524:	adrp	x8, 0 <llvm_gcda_start_file>
    1528:	add	x8, x8, #0x0
    152c:	stp	x8, x19, [x0]
    1530:	mov	x8, x9
    1534:	ldr	x10, [x9]
    1538:	ldr	x11, [x8, #8]!
    153c:	ldr	x19, [sp, #16]
    1540:	cmp	x10, #0x0
    1544:	add	x11, x11, #0x10
    1548:	cset	w10, ne  // ne = any
    154c:	csel	x8, x8, x11, eq  // eq = none
    1550:	str	x0, [x8]
    1554:	str	x0, [x9, w10, uxtw #3]
    1558:	ldp	x29, x30, [sp], #32
    155c:	ret

0000000000001560 <llvm_writeout_files>:
    1560:	stp	x29, x30, [sp, #-32]!
    1564:	stp	x20, x19, [sp, #16]
    1568:	mov	x29, sp
    156c:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
    1570:	ldr	x8, [x8]
    1574:	ldr	x19, [x8]
    1578:	cbz	x19, 15a8 <llvm_writeout_files+0x48>
    157c:	adrp	x20, 0 <llvm_gcda_start_file>
    1580:	add	x20, x20, #0x0
    1584:	b	1590 <llvm_writeout_files+0x30>
    1588:	ldr	x19, [x19, #16]
    158c:	cbz	x19, 15a8 <llvm_writeout_files+0x48>
    1590:	ldr	x8, [x19]
    1594:	cmp	x8, x20
    1598:	b.ne	1588 <llvm_writeout_files+0x28>  // b.any
    159c:	ldr	x8, [x19, #8]
    15a0:	blr	x8
    15a4:	b	1588 <llvm_writeout_files+0x28>
    15a8:	ldp	x20, x19, [sp, #16]
    15ac:	ldp	x29, x30, [sp], #32
    15b0:	ret

00000000000015b4 <llvm_delete_writeout_function_list>:
    15b4:	stp	x29, x30, [sp, #-48]!
    15b8:	stp	x22, x21, [sp, #16]
    15bc:	stp	x20, x19, [sp, #32]
    15c0:	mov	x29, sp
    15c4:	adrp	x19, 10 <llvm_gcda_start_file+0x10>
    15c8:	ldr	x19, [x19]
    15cc:	ldr	x0, [x19]
    15d0:	cbz	x0, 1650 <llvm_delete_writeout_function_list+0x9c>
    15d4:	adrp	x21, 0 <llvm_gcda_start_file>
    15d8:	mov	x20, xzr
    15dc:	add	x21, x21, #0x0
    15e0:	b	15f0 <llvm_delete_writeout_function_list+0x3c>
    15e4:	bl	0 <free>
    15e8:	mov	x0, x22
    15ec:	cbz	x22, 1650 <llvm_delete_writeout_function_list+0x9c>
    15f0:	ldr	x8, [x0]
    15f4:	ldr	x22, [x0, #16]
    15f8:	cmp	x8, x21
    15fc:	b.eq	1610 <llvm_delete_writeout_function_list+0x5c>  // b.none
    1600:	mov	x20, x0
    1604:	mov	x0, x22
    1608:	cbnz	x22, 15f0 <llvm_delete_writeout_function_list+0x3c>
    160c:	b	1650 <llvm_delete_writeout_function_list+0x9c>
    1610:	ldr	x8, [x19]
    1614:	cmp	x0, x8
    1618:	b.eq	1630 <llvm_delete_writeout_function_list+0x7c>  // b.none
    161c:	ldr	x8, [x19, #8]
    1620:	cmp	x0, x8
    1624:	b.eq	1640 <llvm_delete_writeout_function_list+0x8c>  // b.none
    1628:	cbnz	x20, 1648 <llvm_delete_writeout_function_list+0x94>
    162c:	b	15e4 <llvm_delete_writeout_function_list+0x30>
    1630:	str	x22, [x19]
    1634:	ldr	x8, [x19, #8]
    1638:	cmp	x0, x8
    163c:	b.ne	1628 <llvm_delete_writeout_function_list+0x74>  // b.any
    1640:	str	x20, [x19, #8]
    1644:	cbz	x20, 15e4 <llvm_delete_writeout_function_list+0x30>
    1648:	str	x22, [x20, #16]
    164c:	b	15e4 <llvm_delete_writeout_function_list+0x30>
    1650:	ldp	x20, x19, [sp, #32]
    1654:	ldp	x22, x21, [sp, #16]
    1658:	ldp	x29, x30, [sp], #48
    165c:	ret

0000000000001660 <llvm_register_flush_function>:
    1660:	stp	x29, x30, [sp, #-32]!
    1664:	str	x19, [sp, #16]
    1668:	mov	x29, sp
    166c:	mov	x19, x0
    1670:	mov	w0, #0x18                  	// #24
    1674:	bl	0 <malloc>
    1678:	str	xzr, [x0, #16]
    167c:	adrp	x9, 10 <llvm_gcda_start_file+0x10>
    1680:	ldr	x9, [x9]
    1684:	adrp	x8, 0 <llvm_gcda_start_file>
    1688:	add	x8, x8, #0x0
    168c:	stp	x8, x19, [x0]
    1690:	mov	x8, x9
    1694:	ldr	x10, [x9]
    1698:	ldr	x11, [x8, #8]!
    169c:	ldr	x19, [sp, #16]
    16a0:	cmp	x10, #0x0
    16a4:	add	x11, x11, #0x10
    16a8:	cset	w10, ne  // ne = any
    16ac:	csel	x8, x8, x11, eq  // eq = none
    16b0:	str	x0, [x8]
    16b4:	str	x0, [x9, w10, uxtw #3]
    16b8:	ldp	x29, x30, [sp], #32
    16bc:	ret

00000000000016c0 <__gcov_flush>:
    16c0:	stp	x29, x30, [sp, #-32]!
    16c4:	str	x19, [sp, #16]
    16c8:	mov	x29, sp
    16cc:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
    16d0:	ldr	x8, [x8]
    16d4:	ldr	x19, [x8]
    16d8:	cbz	x19, 16ec <__gcov_flush+0x2c>
    16dc:	ldr	x8, [x19, #8]
    16e0:	blr	x8
    16e4:	ldr	x19, [x19, #16]
    16e8:	cbnz	x19, 16dc <__gcov_flush+0x1c>
    16ec:	ldr	x19, [sp, #16]
    16f0:	ldp	x29, x30, [sp], #32
    16f4:	ret

00000000000016f8 <llvm_delete_flush_function_list>:
    16f8:	stp	x29, x30, [sp, #-48]!
    16fc:	stp	x22, x21, [sp, #16]
    1700:	stp	x20, x19, [sp, #32]
    1704:	mov	x29, sp
    1708:	adrp	x19, 10 <llvm_gcda_start_file+0x10>
    170c:	ldr	x19, [x19]
    1710:	ldr	x0, [x19]
    1714:	cbz	x0, 1794 <llvm_delete_flush_function_list+0x9c>
    1718:	adrp	x21, 0 <llvm_gcda_start_file>
    171c:	mov	x20, xzr
    1720:	add	x21, x21, #0x0
    1724:	b	1734 <llvm_delete_flush_function_list+0x3c>
    1728:	bl	0 <free>
    172c:	mov	x0, x22
    1730:	cbz	x22, 1794 <llvm_delete_flush_function_list+0x9c>
    1734:	ldr	x8, [x0]
    1738:	ldr	x22, [x0, #16]
    173c:	cmp	x8, x21
    1740:	b.eq	1754 <llvm_delete_flush_function_list+0x5c>  // b.none
    1744:	mov	x20, x0
    1748:	mov	x0, x22
    174c:	cbnz	x22, 1734 <llvm_delete_flush_function_list+0x3c>
    1750:	b	1794 <llvm_delete_flush_function_list+0x9c>
    1754:	ldr	x8, [x19]
    1758:	cmp	x0, x8
    175c:	b.eq	1774 <llvm_delete_flush_function_list+0x7c>  // b.none
    1760:	ldr	x8, [x19, #8]
    1764:	cmp	x0, x8
    1768:	b.eq	1784 <llvm_delete_flush_function_list+0x8c>  // b.none
    176c:	cbnz	x20, 178c <llvm_delete_flush_function_list+0x94>
    1770:	b	1728 <llvm_delete_flush_function_list+0x30>
    1774:	str	x22, [x19]
    1778:	ldr	x8, [x19, #8]
    177c:	cmp	x0, x8
    1780:	b.ne	176c <llvm_delete_flush_function_list+0x74>  // b.any
    1784:	str	x20, [x19, #8]
    1788:	cbz	x20, 1728 <llvm_delete_flush_function_list+0x30>
    178c:	str	x22, [x20, #16]
    1790:	b	1728 <llvm_delete_flush_function_list+0x30>
    1794:	ldp	x20, x19, [sp, #32]
    1798:	ldp	x22, x21, [sp, #16]
    179c:	ldp	x29, x30, [sp], #48
    17a0:	ret

00000000000017a4 <llvm_gcov_init>:
    17a4:	stp	x29, x30, [sp, #-48]!
    17a8:	str	x21, [sp, #16]
    17ac:	stp	x20, x19, [sp, #32]
    17b0:	mov	x29, sp
    17b4:	adrp	x21, 0 <llvm_gcda_start_file>
    17b8:	mov	x19, x1
    17bc:	add	x21, x21, #0x0
    17c0:	cbz	x0, 1804 <llvm_gcov_init+0x60>
    17c4:	mov	x20, x0
    17c8:	mov	w0, #0x18                  	// #24
    17cc:	bl	0 <malloc>
    17d0:	str	xzr, [x0, #16]
    17d4:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
    17d8:	ldr	x8, [x8]
    17dc:	stp	x21, x20, [x0]
    17e0:	mov	x10, x8
    17e4:	ldr	x9, [x8]
    17e8:	ldr	x11, [x10, #8]!
    17ec:	cmp	x9, #0x0
    17f0:	add	x11, x11, #0x10
    17f4:	cset	w9, ne  // ne = any
    17f8:	csel	x10, x10, x11, eq  // eq = none
    17fc:	str	x0, [x10]
    1800:	str	x0, [x8, w9, uxtw #3]
    1804:	cbz	x19, 1844 <llvm_gcov_init+0xa0>
    1808:	mov	w0, #0x18                  	// #24
    180c:	bl	0 <malloc>
    1810:	str	xzr, [x0, #16]
    1814:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
    1818:	ldr	x8, [x8]
    181c:	stp	x21, x19, [x0]
    1820:	mov	x10, x8
    1824:	ldr	x9, [x8]
    1828:	ldr	x11, [x10, #8]!
    182c:	cmp	x9, #0x0
    1830:	add	x11, x11, #0x10
    1834:	cset	w9, ne  // ne = any
    1838:	csel	x10, x10, x11, eq  // eq = none
    183c:	str	x0, [x10]
    1840:	str	x0, [x8, w9, uxtw #3]
    1844:	adrp	x8, 0 <llvm_gcda_start_file>
    1848:	ldrb	w9, [x8]
    184c:	tbz	w9, #0, 1860 <llvm_gcov_init+0xbc>
    1850:	ldp	x20, x19, [sp, #32]
    1854:	ldr	x21, [sp, #16]
    1858:	ldp	x29, x30, [sp], #48
    185c:	ret
    1860:	adrp	x0, 16f8 <llvm_delete_flush_function_list>
    1864:	mov	w9, #0x1                   	// #1
    1868:	add	x0, x0, #0x0
    186c:	strb	w9, [x8]
    1870:	bl	0 <atexit>
    1874:	adrp	x0, 15b4 <llvm_delete_writeout_function_list>
    1878:	add	x0, x0, #0x0
    187c:	bl	0 <atexit>
    1880:	ldp	x20, x19, [sp, #32]
    1884:	ldr	x21, [sp, #16]
    1888:	adrp	x0, 1560 <llvm_writeout_files>
    188c:	add	x0, x0, #0x0
    1890:	ldp	x29, x30, [sp], #48
    1894:	b	0 <atexit>

InstrProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_get_magic>:
   0:	mov	x0, #0x7281                	// #29313
   4:	movk	x0, #0x6f66, lsl #16
   8:	movk	x0, #0x7072, lsl #32
   c:	movk	x0, #0xff6c, lsl #48
  10:	ret

0000000000000014 <lprofProfileDumped>:
  14:	adrp	x8, 0 <__llvm_profile_get_magic>
  18:	ldrb	w0, [x8]
  1c:	ret

0000000000000020 <lprofSetProfileDumped>:
  20:	adrp	x8, 0 <__llvm_profile_get_magic>
  24:	mov	w9, #0x1                   	// #1
  28:	strb	w9, [x8]
  2c:	ret

0000000000000030 <__llvm_profile_set_dumped>:
  30:	adrp	x8, 0 <__llvm_profile_get_magic>
  34:	mov	w9, #0x1                   	// #1
  38:	strb	w9, [x8]
  3c:	ret

0000000000000040 <__llvm_profile_get_num_padding_bytes>:
  40:	neg	w8, w0
  44:	and	w0, w8, #0x7
  48:	ret

000000000000004c <__llvm_profile_get_version>:
  4c:	adrp	x8, 0 <__llvm_profile_get_magic>
  50:	ldr	x8, [x8]
  54:	ldr	x0, [x8]
  58:	ret

000000000000005c <__llvm_profile_reset_counters>:
  5c:	stp	x29, x30, [sp, #-32]!
  60:	str	x19, [sp, #16]
  64:	mov	x29, sp
  68:	bl	0 <__llvm_profile_begin_counters>
  6c:	mov	x19, x0
  70:	bl	0 <__llvm_profile_end_counters>
  74:	sub	x2, x0, x19
  78:	mov	x0, x19
  7c:	mov	w1, wzr
  80:	bl	0 <memset>
  84:	bl	0 <__llvm_profile_begin_data>
  88:	mov	x19, x0
  8c:	bl	0 <__llvm_profile_end_data>
  90:	b	98 <__llvm_profile_reset_counters+0x3c>
  94:	add	x19, x19, #0x30
  98:	cmp	x19, x0
  9c:	b.cs	e4 <__llvm_profile_reset_counters+0x88>  // b.hs, b.nlast
  a0:	ldr	x8, [x19, #32]
  a4:	cbz	x8, 94 <__llvm_profile_reset_counters+0x38>
  a8:	ldrh	w9, [x19, #44]
  ac:	ldrh	w10, [x19, #46]
  b0:	adds	x9, x9, x10
  b4:	b.eq	94 <__llvm_profile_reset_counters+0x38>  // b.none
  b8:	mov	x10, xzr
  bc:	b	cc <__llvm_profile_reset_counters+0x70>
  c0:	add	w10, w10, #0x1
  c4:	cmp	x9, x10
  c8:	b.ls	94 <__llvm_profile_reset_counters+0x38>  // b.plast
  cc:	ldr	x11, [x8, x10, lsl #3]
  d0:	cbz	x11, c0 <__llvm_profile_reset_counters+0x64>
  d4:	str	xzr, [x11, #8]
  d8:	ldr	x11, [x11, #16]
  dc:	cbnz	x11, d4 <__llvm_profile_reset_counters+0x78>
  e0:	b	c0 <__llvm_profile_reset_counters+0x64>
  e4:	ldr	x19, [sp, #16]
  e8:	adrp	x8, 0 <__llvm_profile_get_magic>
  ec:	strb	wzr, [x8]
  f0:	ldp	x29, x30, [sp], #32
  f4:	ret

InstrProfilingValue.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getValueProfRecordHeaderSize>:
   0:	add	w8, w0, #0xf
   4:	and	w0, w8, #0xfffffff8
   8:	ret

000000000000000c <getValueProfRecordSize>:
   c:	add	w8, w0, #0xf
  10:	and	w8, w8, #0xfffffff8
  14:	add	w0, w8, w1, lsl #4
  18:	ret

000000000000001c <getValueProfRecordValueData>:
  1c:	ldr	w8, [x0, #4]
  20:	add	w8, w8, #0xf
  24:	and	w8, w8, #0xfffffff8
  28:	add	x0, x0, x8
  2c:	ret

0000000000000030 <getValueProfRecordNumValueData>:
  30:	ldr	w9, [x0, #4]
  34:	cbz	w9, 4c <getValueProfRecordNumValueData+0x1c>
  38:	cmp	w9, #0x1
  3c:	b.ne	54 <getValueProfRecordNumValueData+0x24>  // b.any
  40:	mov	x10, xzr
  44:	mov	w8, wzr
  48:	b	8c <getValueProfRecordNumValueData+0x5c>
  4c:	mov	w0, wzr
  50:	ret
  54:	and	x10, x9, #0xfffffffe
  58:	mov	w8, wzr
  5c:	mov	w11, wzr
  60:	add	x12, x0, #0x9
  64:	mov	x13, x10
  68:	ldurb	w14, [x12, #-1]
  6c:	ldrb	w15, [x12], #2
  70:	subs	x13, x13, #0x2
  74:	add	w8, w8, w14
  78:	add	w11, w11, w15
  7c:	b.ne	68 <getValueProfRecordNumValueData+0x38>  // b.any
  80:	cmp	x10, x9
  84:	add	w8, w11, w8
  88:	b.eq	a4 <getValueProfRecordNumValueData+0x74>  // b.none
  8c:	add	x11, x0, #0x8
  90:	ldrb	w12, [x11, x10]
  94:	add	x10, x10, #0x1
  98:	cmp	x10, x9
  9c:	add	w8, w8, w12
  a0:	b.cc	90 <getValueProfRecordNumValueData+0x60>  // b.lo, b.ul, b.last
  a4:	mov	w0, w8
  a8:	ret

00000000000000ac <getValueProfRecordNext>:
  ac:	ldr	w8, [x0, #4]
  b0:	cbz	w8, c8 <getValueProfRecordNext+0x1c>
  b4:	cmp	w8, #0x1
  b8:	b.ne	d0 <getValueProfRecordNext+0x24>  // b.any
  bc:	mov	x9, xzr
  c0:	mov	w10, wzr
  c4:	b	108 <getValueProfRecordNext+0x5c>
  c8:	mov	w9, wzr
  cc:	b	128 <getValueProfRecordNext+0x7c>
  d0:	and	x9, x8, #0xfffffffe
  d4:	mov	w10, wzr
  d8:	mov	w11, wzr
  dc:	add	x12, x0, #0x9
  e0:	mov	x13, x9
  e4:	ldurb	w14, [x12, #-1]
  e8:	ldrb	w15, [x12], #2
  ec:	subs	x13, x13, #0x2
  f0:	add	w10, w10, w14
  f4:	add	w11, w11, w15
  f8:	b.ne	e4 <getValueProfRecordNext+0x38>  // b.any
  fc:	cmp	x9, x8
 100:	add	w10, w11, w10
 104:	b.eq	124 <getValueProfRecordNext+0x78>  // b.none
 108:	sub	x11, x8, x9
 10c:	add	x9, x9, x0
 110:	add	x9, x9, #0x8
 114:	ldrb	w12, [x9], #1
 118:	subs	x11, x11, #0x1
 11c:	add	w10, w10, w12
 120:	b.ne	114 <getValueProfRecordNext+0x68>  // b.any
 124:	lsl	w9, w10, #4
 128:	add	w8, w8, #0xf
 12c:	and	w8, w8, #0xfffffff8
 130:	add	w8, w9, w8
 134:	add	x0, x0, x8
 138:	ret

000000000000013c <getFirstValueProfRecord>:
 13c:	add	x0, x0, #0x8
 140:	ret

0000000000000144 <getValueProfDataSize>:
 144:	stp	x29, x30, [sp, #-48]!
 148:	stp	x22, x21, [sp, #16]
 14c:	stp	x20, x19, [sp, #32]
 150:	mov	x29, sp
 154:	ldr	x19, [x0]
 158:	ldr	x8, [x0, #16]
 15c:	mov	x20, x0
 160:	mov	w1, wzr
 164:	mov	x0, x19
 168:	blr	x8
 16c:	cbz	w0, 194 <getValueProfDataSize+0x50>
 170:	ldr	x8, [x20, #24]
 174:	mov	w21, w0
 178:	mov	x0, x19
 17c:	mov	w1, wzr
 180:	blr	x8
 184:	add	w8, w21, #0x17
 188:	and	w8, w8, #0xfffffff8
 18c:	add	w21, w8, w0, lsl #4
 190:	b	198 <getValueProfDataSize+0x54>
 194:	mov	w21, #0x8                   	// #8
 198:	ldr	x8, [x20, #16]
 19c:	mov	w1, #0x1                   	// #1
 1a0:	mov	x0, x19
 1a4:	blr	x8
 1a8:	cbz	w0, 1d0 <getValueProfDataSize+0x8c>
 1ac:	ldr	x8, [x20, #24]
 1b0:	mov	w22, w0
 1b4:	mov	w1, #0x1                   	// #1
 1b8:	mov	x0, x19
 1bc:	blr	x8
 1c0:	add	w8, w22, #0xf
 1c4:	and	w8, w8, #0xfffffff8
 1c8:	add	w8, w8, w21
 1cc:	add	w21, w8, w0, lsl #4
 1d0:	mov	w0, w21
 1d4:	ldp	x20, x19, [sp, #32]
 1d8:	ldp	x22, x21, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #48
 1e0:	ret

00000000000001e4 <serializeValueProfRecordFrom>:
 1e4:	stp	x29, x30, [sp, #-80]!
 1e8:	stp	x26, x25, [sp, #16]
 1ec:	stp	x24, x23, [sp, #32]
 1f0:	stp	x22, x21, [sp, #48]
 1f4:	stp	x20, x19, [sp, #64]
 1f8:	mov	x29, sp
 1fc:	ldr	x21, [x1]
 200:	stp	w2, w3, [x0]
 204:	cbz	w3, 26c <serializeValueProfRecordFrom+0x88>
 208:	add	w8, w3, #0xf
 20c:	and	w8, w8, #0xfffffff8
 210:	mov	w19, w2
 214:	mov	x20, x1
 218:	mov	x22, xzr
 21c:	mov	w25, w3
 220:	add	x23, x0, x8
 224:	add	x26, x0, #0x8
 228:	ldr	x8, [x20, #32]
 22c:	mov	x0, x21
 230:	mov	w1, w19
 234:	mov	w2, w22
 238:	blr	x8
 23c:	strb	w0, [x26, x22]
 240:	ldr	x8, [x20, #48]
 244:	mov	w24, w0
 248:	mov	x0, x21
 24c:	mov	x1, x23
 250:	mov	w2, w19
 254:	mov	w3, w22
 258:	blr	x8
 25c:	add	x22, x22, #0x1
 260:	cmp	x25, x22
 264:	add	x23, x23, w24, uxtw #4
 268:	b.ne	228 <serializeValueProfRecordFrom+0x44>  // b.any
 26c:	ldp	x20, x19, [sp, #64]
 270:	ldp	x22, x21, [sp, #48]
 274:	ldp	x24, x23, [sp, #32]
 278:	ldp	x26, x25, [sp, #16]
 27c:	ldp	x29, x30, [sp], #80
 280:	ret

0000000000000284 <serializeValueProfDataFrom>:
 284:	stp	x29, x30, [sp, #-96]!
 288:	str	x27, [sp, #16]
 28c:	stp	x26, x25, [sp, #32]
 290:	stp	x24, x23, [sp, #48]
 294:	stp	x22, x21, [sp, #64]
 298:	stp	x20, x19, [sp, #80]
 29c:	mov	x29, sp
 2a0:	mov	x19, x0
 2a4:	cbz	x1, 2b4 <serializeValueProfDataFrom+0x30>
 2a8:	ldr	w22, [x1]
 2ac:	mov	x20, x1
 2b0:	b	338 <serializeValueProfDataFrom+0xb4>
 2b4:	ldr	x20, [x19]
 2b8:	ldr	x8, [x19, #16]
 2bc:	mov	x0, x20
 2c0:	blr	x8
 2c4:	cbz	w0, 2ec <serializeValueProfDataFrom+0x68>
 2c8:	ldr	x8, [x19, #24]
 2cc:	mov	w21, w0
 2d0:	mov	x0, x20
 2d4:	mov	w1, wzr
 2d8:	blr	x8
 2dc:	add	w8, w21, #0x17
 2e0:	and	w8, w8, #0xfffffff8
 2e4:	add	w22, w8, w0, lsl #4
 2e8:	b	2f0 <serializeValueProfDataFrom+0x6c>
 2ec:	mov	w22, #0x8                   	// #8
 2f0:	ldr	x8, [x19, #16]
 2f4:	mov	w1, #0x1                   	// #1
 2f8:	mov	x0, x20
 2fc:	blr	x8
 300:	cbz	w0, 328 <serializeValueProfDataFrom+0xa4>
 304:	ldr	x8, [x19, #24]
 308:	mov	w21, w0
 30c:	mov	w1, #0x1                   	// #1
 310:	mov	x0, x20
 314:	blr	x8
 318:	add	w8, w21, #0xf
 31c:	and	w8, w8, #0xfffffff8
 320:	add	w8, w8, w22
 324:	add	w22, w8, w0, lsl #4
 328:	ldr	x8, [x19, #56]
 32c:	mov	w0, w22
 330:	blr	x8
 334:	mov	x20, x0
 338:	str	w22, [x20]
 33c:	ldp	x0, x8, [x19]
 340:	blr	x8
 344:	str	w0, [x20, #4]
 348:	ldr	x8, [x19, #16]
 34c:	ldr	x0, [x19]
 350:	mov	w1, wzr
 354:	add	x25, x20, #0x8
 358:	blr	x8
 35c:	cbz	w0, 450 <serializeValueProfDataFrom+0x1cc>
 360:	ldr	x22, [x19]
 364:	add	w8, w0, #0xf
 368:	and	w8, w8, #0xfffffff8
 36c:	mov	x21, xzr
 370:	add	x23, x25, x8
 374:	mov	w26, w0
 378:	add	x27, x20, #0x10
 37c:	stp	wzr, w0, [x20, #8]
 380:	ldr	x8, [x19, #32]
 384:	mov	x0, x22
 388:	mov	w1, wzr
 38c:	mov	w2, w21
 390:	blr	x8
 394:	strb	w0, [x27, x21]
 398:	ldr	x8, [x19, #48]
 39c:	mov	w24, w0
 3a0:	mov	x0, x22
 3a4:	mov	x1, x23
 3a8:	mov	w2, wzr
 3ac:	mov	w3, w21
 3b0:	blr	x8
 3b4:	add	x21, x21, #0x1
 3b8:	cmp	x26, x21
 3bc:	add	x23, x23, w24, uxtw #4
 3c0:	b.ne	380 <serializeValueProfDataFrom+0xfc>  // b.any
 3c4:	ldr	w8, [x20, #12]
 3c8:	cbz	w8, 3e0 <serializeValueProfDataFrom+0x15c>
 3cc:	cmp	w8, #0x1
 3d0:	b.ne	3e8 <serializeValueProfDataFrom+0x164>  // b.any
 3d4:	mov	x9, xzr
 3d8:	mov	w10, wzr
 3dc:	b	420 <serializeValueProfDataFrom+0x19c>
 3e0:	mov	w9, wzr
 3e4:	b	440 <serializeValueProfDataFrom+0x1bc>
 3e8:	and	x9, x8, #0xfffffffe
 3ec:	mov	w10, wzr
 3f0:	mov	w11, wzr
 3f4:	add	x12, x20, #0x11
 3f8:	mov	x13, x9
 3fc:	ldurb	w14, [x12, #-1]
 400:	ldrb	w15, [x12], #2
 404:	subs	x13, x13, #0x2
 408:	add	w10, w10, w14
 40c:	add	w11, w11, w15
 410:	b.ne	3fc <serializeValueProfDataFrom+0x178>  // b.any
 414:	cmp	x9, x8
 418:	add	w10, w11, w10
 41c:	b.eq	43c <serializeValueProfDataFrom+0x1b8>  // b.none
 420:	sub	x11, x8, x9
 424:	add	x9, x20, x9
 428:	add	x9, x9, #0x10
 42c:	ldrb	w12, [x9], #1
 430:	subs	x11, x11, #0x1
 434:	add	w10, w10, w12
 438:	b.ne	42c <serializeValueProfDataFrom+0x1a8>  // b.any
 43c:	lsl	w9, w10, #4
 440:	add	w8, w8, #0xf
 444:	and	w8, w8, #0xfffffff8
 448:	add	w8, w9, w8
 44c:	add	x25, x25, x8
 450:	ldr	x8, [x19, #16]
 454:	ldr	x0, [x19]
 458:	mov	w1, #0x1                   	// #1
 45c:	mov	w23, #0x1                   	// #1
 460:	blr	x8
 464:	cbz	w0, 508 <serializeValueProfDataFrom+0x284>
 468:	ldr	x22, [x19]
 46c:	add	w8, w0, #0xf
 470:	and	w8, w8, #0xfffffff8
 474:	mov	x21, xzr
 478:	stp	w23, w0, [x25]
 47c:	add	x23, x25, x8
 480:	mov	w26, w0
 484:	add	x27, x25, #0x8
 488:	ldr	x8, [x19, #32]
 48c:	mov	w1, #0x1                   	// #1
 490:	mov	x0, x22
 494:	mov	w2, w21
 498:	blr	x8
 49c:	strb	w0, [x27, x21]
 4a0:	ldr	x8, [x19, #48]
 4a4:	mov	w24, w0
 4a8:	mov	w2, #0x1                   	// #1
 4ac:	mov	x0, x22
 4b0:	mov	x1, x23
 4b4:	mov	w3, w21
 4b8:	blr	x8
 4bc:	add	x21, x21, #0x1
 4c0:	cmp	x26, x21
 4c4:	add	x23, x23, w24, uxtw #4
 4c8:	b.ne	488 <serializeValueProfDataFrom+0x204>  // b.any
 4cc:	ldr	w8, [x25, #4]
 4d0:	cbz	w8, 508 <serializeValueProfDataFrom+0x284>
 4d4:	cmp	w8, #0x1
 4d8:	b.ne	4e4 <serializeValueProfDataFrom+0x260>  // b.any
 4dc:	mov	x9, xzr
 4e0:	b	4fc <serializeValueProfDataFrom+0x278>
 4e4:	and	x9, x8, #0xfffffffe
 4e8:	mov	x10, x9
 4ec:	subs	x10, x10, #0x2
 4f0:	b.ne	4ec <serializeValueProfDataFrom+0x268>  // b.any
 4f4:	cmp	x9, x8
 4f8:	b.eq	508 <serializeValueProfDataFrom+0x284>  // b.none
 4fc:	sub	x8, x8, x9
 500:	subs	x8, x8, #0x1
 504:	b.ne	500 <serializeValueProfDataFrom+0x27c>  // b.any
 508:	mov	x0, x20
 50c:	ldp	x20, x19, [sp, #80]
 510:	ldp	x22, x21, [sp, #64]
 514:	ldp	x24, x23, [sp, #48]
 518:	ldp	x26, x25, [sp, #32]
 51c:	ldr	x27, [sp, #16]
 520:	ldp	x29, x30, [sp], #96
 524:	ret

0000000000000528 <lprofSetupValueProfiler>:
 528:	stp	x29, x30, [sp, #-16]!
 52c:	mov	x29, sp
 530:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 534:	add	x0, x0, #0x0
 538:	bl	0 <getenv>
 53c:	cbz	x0, 574 <lprofSetupValueProfiler+0x4c>
 540:	ldrb	w8, [x0]
 544:	cbz	w8, 574 <lprofSetupValueProfiler+0x4c>
 548:	mov	w2, #0xa                   	// #10
 54c:	mov	x1, xzr
 550:	bl	0 <strtol>
 554:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 558:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 55c:	mov	w10, #0x1                   	// #1
 560:	str	w0, [x8]
 564:	strb	w10, [x9]
 568:	cmp	w0, #0x100
 56c:	b.cs	584 <lprofSetupValueProfiler+0x5c>  // b.hs, b.nlast
 570:	b	590 <lprofSetupValueProfiler+0x68>
 574:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 578:	ldr	w0, [x8]
 57c:	cmp	w0, #0x100
 580:	b.cc	590 <lprofSetupValueProfiler+0x68>  // b.lo, b.ul, b.last
 584:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 588:	mov	w9, #0xff                  	// #255
 58c:	str	w9, [x8]
 590:	ldp	x29, x30, [sp], #16
 594:	ret

0000000000000598 <lprofSetMaxValsPerSite>:
 598:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 59c:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 5a0:	mov	w10, #0x1                   	// #1
 5a4:	str	w0, [x8]
 5a8:	strb	w10, [x9]
 5ac:	ret

00000000000005b0 <__llvm_profile_set_num_value_sites>:
 5b0:	add	x8, x0, w1, uxtw #1
 5b4:	strh	w2, [x8, #44]
 5b8:	ret

00000000000005bc <__llvm_profile_iterate_data>:
 5bc:	add	x0, x0, #0x30
 5c0:	ret

00000000000005c4 <__llvm_get_function_addr>:
 5c4:	ldr	x0, [x0, #24]
 5c8:	ret

00000000000005cc <__llvm_profile_instrument_target>:
 5cc:	stp	x29, x30, [sp, #-48]!
 5d0:	stp	x22, x21, [sp, #16]
 5d4:	stp	x20, x19, [sp, #32]
 5d8:	mov	x29, sp
 5dc:	cbz	x1, 820 <__llvm_profile_instrument_target+0x254>
 5e0:	mov	x21, x1
 5e4:	ldr	x8, [x21, #32]!
 5e8:	mov	w20, w2
 5ec:	mov	x19, x0
 5f0:	cbz	x8, 668 <__llvm_profile_instrument_target+0x9c>
 5f4:	add	x20, x8, w20, uxtw #3
 5f8:	ldr	x11, [x20]
 5fc:	cbz	x11, 6c4 <__llvm_profile_instrument_target+0xf8>
 600:	mov	w9, wzr
 604:	mov	x8, xzr
 608:	mov	x10, #0xffffffffffffffff    	// #-1
 60c:	mov	x22, x11
 610:	ldr	x11, [x11]
 614:	ldr	x12, [x22, #8]
 618:	cmp	x11, x19
 61c:	b.eq	770 <__llvm_profile_instrument_target+0x1a4>  // b.none
 620:	ldr	x11, [x22, #16]
 624:	cmp	x12, x10
 628:	csel	x8, x22, x8, cc  // cc = lo, ul, last
 62c:	csel	x10, x12, x10, cc  // cc = lo, ul, last
 630:	add	w9, w9, #0x1
 634:	cbnz	x11, 60c <__llvm_profile_instrument_target+0x40>
 638:	and	w9, w9, #0xff
 63c:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 640:	ldr	w10, [x10]
 644:	cmp	w10, w9
 648:	b.hi	6e0 <__llvm_profile_instrument_target+0x114>  // b.pmore
 64c:	ldr	x9, [x8, #8]
 650:	subs	x9, x9, #0x1
 654:	b.hi	660 <__llvm_profile_instrument_target+0x94>  // b.pmore
 658:	mov	w9, #0x1                   	// #1
 65c:	str	x19, [x8]
 660:	str	x9, [x8, #8]
 664:	b	820 <__llvm_profile_instrument_target+0x254>
 668:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 66c:	add	x8, x8, #0x0
 670:	ldrb	w9, [x8]
 674:	mov	w10, #0x1                   	// #1
 678:	strb	w10, [x8, #4]
 67c:	tbnz	w9, #0, 68c <__llvm_profile_instrument_target+0xc0>
 680:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 684:	mov	w9, #0xff                  	// #255
 688:	str	w9, [x8]
 68c:	ldrh	w8, [x1, #44]
 690:	ldrh	w9, [x1, #46]
 694:	mov	w1, #0x8                   	// #8
 698:	add	x0, x9, x8
 69c:	bl	0 <calloc>
 6a0:	cbz	x0, 820 <__llvm_profile_instrument_target+0x254>
 6a4:	ldaxr	x8, [x21]
 6a8:	cbnz	x8, 7e8 <__llvm_profile_instrument_target+0x21c>
 6ac:	stlxr	w8, x0, [x21]
 6b0:	cbnz	w8, 6a4 <__llvm_profile_instrument_target+0xd8>
 6b4:	ldr	x8, [x21]
 6b8:	add	x20, x8, w20, uxtw #3
 6bc:	ldr	x11, [x20]
 6c0:	cbnz	x11, 600 <__llvm_profile_instrument_target+0x34>
 6c4:	mov	x22, xzr
 6c8:	mov	x8, xzr
 6cc:	mov	w9, wzr
 6d0:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 6d4:	ldr	w10, [x10]
 6d8:	cmp	w10, w9
 6dc:	b.ls	64c <__llvm_profile_instrument_target+0x80>  // b.plast
 6e0:	adrp	x21, 0 <getValueProfRecordHeaderSize>
 6e4:	ldrb	w8, [x21]
 6e8:	cmp	w8, #0x1
 6ec:	b.ne	788 <__llvm_profile_instrument_target+0x1bc>  // b.any
 6f0:	mov	w0, #0x1                   	// #1
 6f4:	mov	w1, #0x18                  	// #24
 6f8:	bl	0 <calloc>
 6fc:	cbz	x0, 820 <__llvm_profile_instrument_target+0x254>
 700:	ldr	x8, [x0, #8]
 704:	add	x8, x8, #0x1
 708:	stp	x19, x8, [x0]
 70c:	ldr	x8, [x20]
 710:	cbz	x8, 744 <__llvm_profile_instrument_target+0x178>
 714:	cbz	x22, 750 <__llvm_profile_instrument_target+0x184>
 718:	ldr	x8, [x22, #16]!
 71c:	cbnz	x8, 750 <__llvm_profile_instrument_target+0x184>
 720:	ldaxr	x8, [x22]
 724:	cbnz	x8, 74c <__llvm_profile_instrument_target+0x180>
 728:	stlxr	w8, x0, [x22]
 72c:	cbnz	w8, 720 <__llvm_profile_instrument_target+0x154>
 730:	mov	w8, #0x1                   	// #1
 734:	tbz	w8, #0, 758 <__llvm_profile_instrument_target+0x18c>
 738:	b	820 <__llvm_profile_instrument_target+0x254>
 73c:	stlxr	w8, x0, [x20]
 740:	cbz	w8, 730 <__llvm_profile_instrument_target+0x164>
 744:	ldaxr	x8, [x20]
 748:	cbz	x8, 73c <__llvm_profile_instrument_target+0x170>
 74c:	clrex
 750:	mov	w8, wzr
 754:	tbnz	w8, #0, 820 <__llvm_profile_instrument_target+0x254>
 758:	ldrb	w8, [x21]
 75c:	cbz	w8, 820 <__llvm_profile_instrument_target+0x254>
 760:	ldp	x20, x19, [sp, #32]
 764:	ldp	x22, x21, [sp, #16]
 768:	ldp	x29, x30, [sp], #48
 76c:	b	0 <free>
 770:	add	x8, x12, #0x1
 774:	str	x8, [x22, #8]
 778:	ldp	x20, x19, [sp, #32]
 77c:	ldp	x22, x21, [sp, #16]
 780:	ldp	x29, x30, [sp], #48
 784:	ret
 788:	adrp	x8, 0 <CurrentVNode>
 78c:	ldr	x9, [x8]
 790:	adrp	x8, 0 <EndVNode>
 794:	ldr	x10, [x8]
 798:	add	x9, x9, #0x18
 79c:	cmp	x9, x10
 7a0:	b.ls	7fc <__llvm_profile_instrument_target+0x230>  // b.plast
 7a4:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 7a8:	ldr	w9, [x8]
 7ac:	add	w10, w9, #0x1
 7b0:	cmp	w9, #0x9
 7b4:	str	w10, [x8]
 7b8:	b.gt	820 <__llvm_profile_instrument_target+0x254>
 7bc:	adrp	x8, 0 <stderr>
 7c0:	ldr	x8, [x8]
 7c4:	ldp	x20, x19, [sp, #32]
 7c8:	ldp	x22, x21, [sp, #16]
 7cc:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 7d0:	ldr	x0, [x8]
 7d4:	adrp	x2, 0 <getValueProfRecordHeaderSize>
 7d8:	add	x1, x1, #0x0
 7dc:	add	x2, x2, #0x0
 7e0:	ldp	x29, x30, [sp], #48
 7e4:	b	0 <fprintf>
 7e8:	clrex
 7ec:	ldp	x20, x19, [sp, #32]
 7f0:	ldp	x22, x21, [sp, #16]
 7f4:	ldp	x29, x30, [sp], #48
 7f8:	b	0 <free>
 7fc:	adrp	x9, 0 <CurrentVNode>
 800:	add	x9, x9, #0x0
 804:	ldaxr	x0, [x9]
 808:	add	x10, x0, #0x18
 80c:	stlxr	w11, x10, [x9]
 810:	cbnz	w11, 804 <__llvm_profile_instrument_target+0x238>
 814:	ldr	x8, [x8]
 818:	cmp	x10, x8
 81c:	b.ls	6fc <__llvm_profile_instrument_target+0x130>  // b.plast
 820:	ldp	x20, x19, [sp, #32]
 824:	ldp	x22, x21, [sp, #16]
 828:	ldp	x29, x30, [sp], #48
 82c:	ret

0000000000000830 <__llvm_profile_instrument_target_value>:
 830:	stp	x29, x30, [sp, #-64]!
 834:	str	x23, [sp, #16]
 838:	stp	x22, x21, [sp, #32]
 83c:	stp	x20, x19, [sp, #48]
 840:	mov	x29, sp
 844:	cbz	x1, a80 <__llvm_profile_instrument_target_value+0x250>
 848:	mov	x19, x3
 84c:	cbz	x3, a80 <__llvm_profile_instrument_target_value+0x250>
 850:	mov	x22, x1
 854:	ldr	x8, [x22, #32]!
 858:	mov	w21, w2
 85c:	mov	x20, x0
 860:	cbz	x8, 8d0 <__llvm_profile_instrument_target_value+0xa0>
 864:	add	x21, x8, w21, uxtw #3
 868:	ldr	x11, [x21]
 86c:	cbz	x11, 92c <__llvm_profile_instrument_target_value+0xfc>
 870:	mov	w9, wzr
 874:	mov	x8, xzr
 878:	mov	x10, #0xffffffffffffffff    	// #-1
 87c:	mov	x23, x11
 880:	ldr	x11, [x11]
 884:	ldr	x12, [x23, #8]
 888:	cmp	x11, x20
 88c:	b.eq	9cc <__llvm_profile_instrument_target_value+0x19c>  // b.none
 890:	ldr	x11, [x23, #16]
 894:	cmp	x12, x10
 898:	csel	x8, x23, x8, cc  // cc = lo, ul, last
 89c:	csel	x10, x12, x10, cc  // cc = lo, ul, last
 8a0:	add	w9, w9, #0x1
 8a4:	cbnz	x11, 87c <__llvm_profile_instrument_target_value+0x4c>
 8a8:	and	w9, w9, #0xff
 8ac:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 8b0:	ldr	w10, [x10]
 8b4:	cmp	w10, w9
 8b8:	b.hi	948 <__llvm_profile_instrument_target_value+0x118>  // b.pmore
 8bc:	ldr	x9, [x8, #8]
 8c0:	subs	x9, x9, x19
 8c4:	b.ls	9d8 <__llvm_profile_instrument_target_value+0x1a8>  // b.plast
 8c8:	str	x9, [x8, #8]
 8cc:	b	a80 <__llvm_profile_instrument_target_value+0x250>
 8d0:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 8d4:	add	x8, x8, #0x0
 8d8:	ldrb	w9, [x8]
 8dc:	mov	w10, #0x1                   	// #1
 8e0:	strb	w10, [x8, #4]
 8e4:	tbnz	w9, #0, 8f4 <__llvm_profile_instrument_target_value+0xc4>
 8e8:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 8ec:	mov	w9, #0xff                  	// #255
 8f0:	str	w9, [x8]
 8f4:	ldrh	w8, [x1, #44]
 8f8:	ldrh	w9, [x1, #46]
 8fc:	mov	w1, #0x8                   	// #8
 900:	add	x0, x9, x8
 904:	bl	0 <calloc>
 908:	cbz	x0, a80 <__llvm_profile_instrument_target_value+0x250>
 90c:	ldaxr	x8, [x22]
 910:	cbnz	x8, a44 <__llvm_profile_instrument_target_value+0x214>
 914:	stlxr	w8, x0, [x22]
 918:	cbnz	w8, 90c <__llvm_profile_instrument_target_value+0xdc>
 91c:	ldr	x8, [x22]
 920:	add	x21, x8, w21, uxtw #3
 924:	ldr	x11, [x21]
 928:	cbnz	x11, 870 <__llvm_profile_instrument_target_value+0x40>
 92c:	mov	x23, xzr
 930:	mov	x8, xzr
 934:	mov	w9, wzr
 938:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 93c:	ldr	w10, [x10]
 940:	cmp	w10, w9
 944:	b.ls	8bc <__llvm_profile_instrument_target_value+0x8c>  // b.plast
 948:	adrp	x22, 0 <getValueProfRecordHeaderSize>
 94c:	ldrb	w8, [x22]
 950:	cmp	w8, #0x1
 954:	b.ne	9e0 <__llvm_profile_instrument_target_value+0x1b0>  // b.any
 958:	mov	w0, #0x1                   	// #1
 95c:	mov	w1, #0x18                  	// #24
 960:	bl	0 <calloc>
 964:	cbz	x0, a80 <__llvm_profile_instrument_target_value+0x250>
 968:	ldr	x8, [x0, #8]
 96c:	add	x8, x8, x19
 970:	stp	x20, x8, [x0]
 974:	ldr	x8, [x21]
 978:	cbz	x8, 9ac <__llvm_profile_instrument_target_value+0x17c>
 97c:	cbz	x23, 9b8 <__llvm_profile_instrument_target_value+0x188>
 980:	ldr	x8, [x23, #16]!
 984:	cbnz	x8, 9b8 <__llvm_profile_instrument_target_value+0x188>
 988:	ldaxr	x8, [x23]
 98c:	cbnz	x8, 9b4 <__llvm_profile_instrument_target_value+0x184>
 990:	stlxr	w8, x0, [x23]
 994:	cbnz	w8, 988 <__llvm_profile_instrument_target_value+0x158>
 998:	mov	w8, #0x1                   	// #1
 99c:	tbz	w8, #0, 9c0 <__llvm_profile_instrument_target_value+0x190>
 9a0:	b	a80 <__llvm_profile_instrument_target_value+0x250>
 9a4:	stlxr	w8, x0, [x21]
 9a8:	cbz	w8, 998 <__llvm_profile_instrument_target_value+0x168>
 9ac:	ldaxr	x8, [x21]
 9b0:	cbz	x8, 9a4 <__llvm_profile_instrument_target_value+0x174>
 9b4:	clrex
 9b8:	mov	w8, wzr
 9bc:	tbnz	w8, #0, a80 <__llvm_profile_instrument_target_value+0x250>
 9c0:	ldrb	w8, [x22]
 9c4:	cbnz	w8, a48 <__llvm_profile_instrument_target_value+0x218>
 9c8:	b	a80 <__llvm_profile_instrument_target_value+0x250>
 9cc:	add	x8, x12, x19
 9d0:	str	x8, [x23, #8]
 9d4:	b	a80 <__llvm_profile_instrument_target_value+0x250>
 9d8:	stp	x20, x19, [x8]
 9dc:	b	a80 <__llvm_profile_instrument_target_value+0x250>
 9e0:	adrp	x8, 0 <CurrentVNode>
 9e4:	ldr	x9, [x8]
 9e8:	adrp	x8, 0 <EndVNode>
 9ec:	ldr	x10, [x8]
 9f0:	add	x9, x9, #0x18
 9f4:	cmp	x9, x10
 9f8:	b.ls	a5c <__llvm_profile_instrument_target_value+0x22c>  // b.plast
 9fc:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 a00:	ldr	w9, [x8]
 a04:	add	w10, w9, #0x1
 a08:	cmp	w9, #0x9
 a0c:	str	w10, [x8]
 a10:	b.gt	a80 <__llvm_profile_instrument_target_value+0x250>
 a14:	adrp	x8, 0 <stderr>
 a18:	ldr	x8, [x8]
 a1c:	ldp	x20, x19, [sp, #48]
 a20:	ldp	x22, x21, [sp, #32]
 a24:	ldr	x23, [sp, #16]
 a28:	ldr	x0, [x8]
 a2c:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 a30:	adrp	x2, 0 <getValueProfRecordHeaderSize>
 a34:	add	x1, x1, #0x0
 a38:	add	x2, x2, #0x0
 a3c:	ldp	x29, x30, [sp], #64
 a40:	b	0 <fprintf>
 a44:	clrex
 a48:	ldp	x20, x19, [sp, #48]
 a4c:	ldp	x22, x21, [sp, #32]
 a50:	ldr	x23, [sp, #16]
 a54:	ldp	x29, x30, [sp], #64
 a58:	b	0 <free>
 a5c:	adrp	x9, 0 <CurrentVNode>
 a60:	add	x9, x9, #0x0
 a64:	ldaxr	x0, [x9]
 a68:	add	x10, x0, #0x18
 a6c:	stlxr	w11, x10, [x9]
 a70:	cbnz	w11, a64 <__llvm_profile_instrument_target_value+0x234>
 a74:	ldr	x8, [x8]
 a78:	cmp	x10, x8
 a7c:	b.ls	964 <__llvm_profile_instrument_target_value+0x134>  // b.plast
 a80:	ldp	x20, x19, [sp, #48]
 a84:	ldp	x22, x21, [sp, #32]
 a88:	ldr	x23, [sp, #16]
 a8c:	ldp	x29, x30, [sp], #64
 a90:	ret

0000000000000a94 <__llvm_profile_instrument_range>:
 a94:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
 a98:	cmp	x5, x8
 a9c:	b.eq	ab0 <__llvm_profile_instrument_range+0x1c>  // b.none
 aa0:	cmp	x0, x5
 aa4:	b.lt	ab0 <__llvm_profile_instrument_range+0x1c>  // b.tstop
 aa8:	mov	x0, x5
 aac:	b	5cc <__llvm_profile_instrument_target>
 ab0:	cmp	x0, x4
 ab4:	ccmp	x0, x3, #0x8, le
 ab8:	csinc	x5, x0, x4, ge  // ge = tcont
 abc:	mov	x0, x5
 ac0:	b	5cc <__llvm_profile_instrument_target>

0000000000000ac4 <lprofGetVPDataReader>:
 ac4:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 ac8:	add	x0, x0, #0x0
 acc:	ret

0000000000000ad0 <initializeValueProfRuntimeRecord>:
 ad0:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 ad4:	add	x8, x8, #0x0
 ad8:	ldr	x11, [x0, #32]
 adc:	str	x0, [x8]
 ae0:	str	x1, [x8, #24]
 ae4:	ldrh	w10, [x0, #44]
 ae8:	cbz	x11, b68 <initializeValueProfRuntimeRecord+0x98>
 aec:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 af0:	cbz	w10, bb4 <initializeValueProfRuntimeRecord+0xe4>
 af4:	mov	x8, xzr
 af8:	adrp	x12, 0 <getValueProfRecordHeaderSize>
 afc:	mov	x13, x11
 b00:	str	x11, [x12]
 b04:	ldr	x14, [x13, x8, lsl #3]
 b08:	cbnz	x14, b1c <initializeValueProfRuntimeRecord+0x4c>
 b0c:	b	b3c <initializeValueProfRuntimeRecord+0x6c>
 b10:	ldr	x13, [x12]
 b14:	ldr	x14, [x13, x8, lsl #3]
 b18:	cbz	x14, b3c <initializeValueProfRuntimeRecord+0x6c>
 b1c:	mov	w13, wzr
 b20:	ldr	x14, [x14, #16]
 b24:	add	w13, w13, #0x1
 b28:	cbnz	x14, b20 <initializeValueProfRuntimeRecord+0x50>
 b2c:	cmp	w13, #0xfe
 b30:	b.ls	b40 <initializeValueProfRuntimeRecord+0x70>  // b.plast
 b34:	mov	w13, #0xff                  	// #255
 b38:	b	b40 <initializeValueProfRuntimeRecord+0x70>
 b3c:	mov	w13, wzr
 b40:	ldr	x14, [x9]
 b44:	ldr	x14, [x14]
 b48:	strb	w13, [x14, x8]
 b4c:	add	x8, x8, #0x1
 b50:	cmp	x8, x10
 b54:	b.ne	b10 <initializeValueProfRuntimeRecord+0x40>  // b.any
 b58:	mov	w8, #0x1                   	// #1
 b5c:	ldrh	w12, [x0, #46]
 b60:	cbnz	x12, bc4 <initializeValueProfRuntimeRecord+0xf4>
 b64:	b	c6c <initializeValueProfRuntimeRecord+0x19c>
 b68:	cbz	w10, c2c <initializeValueProfRuntimeRecord+0x15c>
 b6c:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 b70:	str	xzr, [x8]
 b74:	ldr	x8, [x1]
 b78:	cmp	w10, #0x1
 b7c:	strb	wzr, [x8]
 b80:	b.eq	ba4 <initializeValueProfRuntimeRecord+0xd4>  // b.none
 b84:	mov	w8, #0x1                   	// #1
 b88:	adrp	x9, 0 <getValueProfRecordHeaderSize>
 b8c:	ldr	x11, [x9]
 b90:	ldr	x11, [x11]
 b94:	strb	wzr, [x11, x8]
 b98:	add	x8, x8, #0x1
 b9c:	cmp	x10, x8
 ba0:	b.ne	b8c <initializeValueProfRuntimeRecord+0xbc>  // b.any
 ba4:	mov	w8, #0x1                   	// #1
 ba8:	ldrh	w9, [x0, #46]
 bac:	cbnz	x9, c38 <initializeValueProfRuntimeRecord+0x168>
 bb0:	b	c6c <initializeValueProfRuntimeRecord+0x19c>
 bb4:	mov	x10, xzr
 bb8:	mov	w8, wzr
 bbc:	ldrh	w12, [x0, #46]
 bc0:	cbz	x12, c6c <initializeValueProfRuntimeRecord+0x19c>
 bc4:	mov	x13, xzr
 bc8:	add	x11, x11, x10, lsl #3
 bcc:	adrp	x10, 0 <getValueProfRecordHeaderSize>
 bd0:	str	x11, [x10]
 bd4:	ldr	x14, [x11, x13, lsl #3]
 bd8:	cbnz	x14, bec <initializeValueProfRuntimeRecord+0x11c>
 bdc:	b	c0c <initializeValueProfRuntimeRecord+0x13c>
 be0:	ldr	x11, [x10]
 be4:	ldr	x14, [x11, x13, lsl #3]
 be8:	cbz	x14, c0c <initializeValueProfRuntimeRecord+0x13c>
 bec:	mov	w11, wzr
 bf0:	ldr	x14, [x14, #16]
 bf4:	add	w11, w11, #0x1
 bf8:	cbnz	x14, bf0 <initializeValueProfRuntimeRecord+0x120>
 bfc:	cmp	w11, #0xfe
 c00:	b.ls	c10 <initializeValueProfRuntimeRecord+0x140>  // b.plast
 c04:	mov	w11, #0xff                  	// #255
 c08:	b	c10 <initializeValueProfRuntimeRecord+0x140>
 c0c:	mov	w11, wzr
 c10:	ldr	x14, [x9]
 c14:	ldr	x14, [x14, #8]
 c18:	strb	w11, [x14, x13]
 c1c:	add	x13, x13, #0x1
 c20:	cmp	x13, x12
 c24:	b.ne	be0 <initializeValueProfRuntimeRecord+0x110>  // b.any
 c28:	b	c60 <initializeValueProfRuntimeRecord+0x190>
 c2c:	mov	w8, wzr
 c30:	ldrh	w9, [x0, #46]
 c34:	cbz	x9, c6c <initializeValueProfRuntimeRecord+0x19c>
 c38:	adrp	x11, 0 <getValueProfRecordHeaderSize>
 c3c:	mov	x10, xzr
 c40:	str	xzr, [x11]
 c44:	adrp	x11, 0 <getValueProfRecordHeaderSize>
 c48:	ldr	x12, [x11]
 c4c:	ldr	x12, [x12, #8]
 c50:	strb	wzr, [x12, x10]
 c54:	add	x10, x10, #0x1
 c58:	cmp	x9, x10
 c5c:	b.ne	c48 <initializeValueProfRuntimeRecord+0x178>  // b.any
 c60:	add	w8, w8, #0x1
 c64:	mov	w0, w8
 c68:	ret
 c6c:	mov	w0, w8
 c70:	ret

0000000000000c74 <getNumValueDataForSiteWrapper>:
 c74:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 c78:	ldr	x8, [x8]
 c7c:	ldr	x8, [x8, w0, uxtw #3]
 c80:	ldrb	w0, [x8, w1, uxtw]
 c84:	ret

0000000000000c88 <getValueProfDataSizeWrapper>:
 c88:	stp	x29, x30, [sp, #-32]!
 c8c:	stp	x20, x19, [sp, #16]
 c90:	mov	x29, sp
 c94:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 c98:	add	x0, x0, #0x0
 c9c:	mov	w1, wzr
 ca0:	bl	d5c <getNumValueSitesRT>
 ca4:	cbz	w0, ccc <getValueProfDataSizeWrapper+0x44>
 ca8:	mov	w19, w0
 cac:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 cb0:	add	x0, x0, #0x0
 cb4:	mov	w1, wzr
 cb8:	bl	d6c <getNumValueDataRT>
 cbc:	add	w8, w19, #0x17
 cc0:	and	w8, w8, #0xfffffff8
 cc4:	add	w19, w8, w0, lsl #4
 cc8:	b	cd0 <getValueProfDataSizeWrapper+0x48>
 ccc:	mov	w19, #0x8                   	// #8
 cd0:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 cd4:	add	x0, x0, #0x0
 cd8:	mov	w1, #0x1                   	// #1
 cdc:	bl	d5c <getNumValueSitesRT>
 ce0:	cbz	w0, d08 <getValueProfDataSizeWrapper+0x80>
 ce4:	mov	w20, w0
 ce8:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 cec:	add	x0, x0, #0x0
 cf0:	mov	w1, #0x1                   	// #1
 cf4:	bl	d6c <getNumValueDataRT>
 cf8:	add	w8, w20, #0xf
 cfc:	and	w8, w8, #0xfffffff8
 d00:	add	w8, w8, w19
 d04:	add	w19, w8, w0, lsl #4
 d08:	mov	w0, w19
 d0c:	ldp	x20, x19, [sp, #16]
 d10:	ldp	x29, x30, [sp], #32
 d14:	ret

0000000000000d18 <getNextNValueData>:
 d18:	cbz	x3, d24 <getNextNValueData+0xc>
 d1c:	cbnz	w4, d3c <getNextNValueData+0x24>
 d20:	b	d54 <getNextNValueData+0x3c>
 d24:	adrp	x8, 0 <getValueProfRecordHeaderSize>
 d28:	add	x8, x8, #0x0
 d2c:	add	x8, x8, w0, uxtw #3
 d30:	ldr	x8, [x8, #8]
 d34:	ldr	x3, [x8, w1, uxtw #3]
 d38:	cbz	w4, d54 <getNextNValueData+0x3c>
 d3c:	mov	w8, w4
 d40:	ldr	q0, [x3]
 d44:	subs	x8, x8, #0x1
 d48:	str	q0, [x2], #16
 d4c:	ldr	x3, [x3, #16]
 d50:	b.ne	d40 <getNextNValueData+0x28>  // b.any
 d54:	mov	x0, x3
 d58:	ret

0000000000000d5c <getNumValueSitesRT>:
 d5c:	ldr	x8, [x0]
 d60:	add	x8, x8, w1, uxtw #1
 d64:	ldrh	w0, [x8, #44]
 d68:	ret

0000000000000d6c <getNumValueDataRT>:
 d6c:	ldr	x8, [x0, #24]
 d70:	ldr	x8, [x8, w1, uxtw #3]
 d74:	cbz	x8, da0 <getNumValueDataRT+0x34>
 d78:	ldr	x9, [x0]
 d7c:	mov	w10, w1
 d80:	add	x9, x9, x10, lsl #1
 d84:	ldrh	w9, [x9, #44]
 d88:	cbz	x9, da0 <getNumValueDataRT+0x34>
 d8c:	cmp	w9, #0x1
 d90:	b.ne	da8 <getNumValueDataRT+0x3c>  // b.any
 d94:	mov	x10, xzr
 d98:	mov	w0, wzr
 d9c:	b	de0 <getNumValueDataRT+0x74>
 da0:	mov	w0, wzr
 da4:	ret
 da8:	and	x10, x9, #0xfffe
 dac:	mov	w11, wzr
 db0:	mov	w12, wzr
 db4:	add	x13, x8, #0x1
 db8:	mov	x14, x10
 dbc:	ldurb	w15, [x13, #-1]
 dc0:	ldrb	w16, [x13], #2
 dc4:	subs	x14, x14, #0x2
 dc8:	add	w11, w11, w15
 dcc:	add	w12, w12, w16
 dd0:	b.ne	dbc <getNumValueDataRT+0x50>  // b.any
 dd4:	cmp	x10, x9
 dd8:	add	w0, w12, w11
 ddc:	b.eq	df4 <getNumValueDataRT+0x88>  // b.none
 de0:	ldrb	w11, [x8, x10]
 de4:	add	x10, x10, #0x1
 de8:	cmp	x10, x9
 dec:	add	w0, w0, w11
 df0:	b.cc	de0 <getNumValueDataRT+0x74>  // b.lo, b.ul, b.last
 df4:	ret

InstrProfilingBuffer.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_is_continuous_mode_enabled>:
   0:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
   4:	ldrb	w0, [x8]
   8:	ret

000000000000000c <__llvm_profile_enable_continuous_mode>:
   c:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
  10:	mov	w9, #0x1                   	// #1
  14:	strb	w9, [x8]
  18:	ret

000000000000001c <__llvm_profile_get_size_for_buffer>:
  1c:	stp	x29, x30, [sp, #-64]!
  20:	str	x23, [sp, #16]
  24:	stp	x22, x21, [sp, #32]
  28:	stp	x20, x19, [sp, #48]
  2c:	mov	x29, sp
  30:	bl	0 <__llvm_profile_begin_data>
  34:	mov	x20, x0
  38:	bl	0 <__llvm_profile_end_data>
  3c:	mov	x21, x0
  40:	bl	0 <__llvm_profile_begin_counters>
  44:	mov	x22, x0
  48:	bl	0 <__llvm_profile_end_counters>
  4c:	mov	x23, x0
  50:	bl	0 <__llvm_profile_begin_names>
  54:	mov	x19, x0
  58:	bl	0 <__llvm_profile_end_names>
  5c:	adrp	x9, 0 <__llvm_profile_is_continuous_mode_enabled>
  60:	sub	x8, x21, x20
  64:	ldrb	w9, [x9]
  68:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  6c:	add	x8, x8, #0x2f
  70:	movk	x10, #0xaaab
  74:	umulh	x8, x8, x10
  78:	sub	x19, x0, x19
  7c:	lsr	x21, x8, #5
  80:	sub	x20, x23, x22
  84:	tbz	w9, #0, dc <__llvm_profile_get_size_for_buffer+0xc0>
  88:	bl	0 <getpagesize>
  8c:	mov	w8, #0x30                  	// #48
  90:	mul	x8, x21, x8
  94:	mov	w9, w0
  98:	add	x11, x8, #0x50
  9c:	udiv	x8, x11, x9
  a0:	udiv	x10, x20, x9
  a4:	msub	x8, x8, x9, x11
  a8:	udiv	x12, x19, x9
  ac:	msub	x10, x10, x9, x20
  b0:	cmp	x8, #0x0
  b4:	sub	x8, x9, x8
  b8:	msub	x12, x12, x9, x19
  bc:	csel	x8, xzr, x8, eq  // eq = none
  c0:	cmp	x10, #0x0
  c4:	sub	x10, x9, x10
  c8:	sub	x13, x9, x12
  cc:	csel	x9, xzr, x10, eq  // eq = none
  d0:	cmp	x12, #0x0
  d4:	csel	x10, xzr, x13, eq  // eq = none
  d8:	b	fc <__llvm_profile_get_size_for_buffer+0xe0>
  dc:	mov	x0, x19
  e0:	bl	0 <__llvm_profile_get_num_padding_bytes>
  e4:	mov	w11, #0x30                  	// #48
  e8:	mul	x11, x21, x11
  ec:	mov	x9, xzr
  f0:	mov	x8, xzr
  f4:	and	x10, x0, #0xff
  f8:	add	x11, x11, #0x50
  fc:	add	x12, x19, x20
 100:	add	x11, x12, x11
 104:	ldp	x20, x19, [sp, #48]
 108:	ldp	x22, x21, [sp, #32]
 10c:	ldr	x23, [sp, #16]
 110:	add	x9, x11, x9
 114:	add	x8, x9, x8
 118:	add	x0, x8, x10
 11c:	ldp	x29, x30, [sp], #64
 120:	ret

0000000000000124 <__llvm_profile_get_size_for_buffer_internal>:
 124:	stp	x29, x30, [sp, #-48]!
 128:	str	x21, [sp, #16]
 12c:	stp	x20, x19, [sp, #32]
 130:	mov	x29, sp
 134:	adrp	x9, 0 <__llvm_profile_is_continuous_mode_enabled>
 138:	sub	x8, x1, x0
 13c:	ldrb	w9, [x9]
 140:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 144:	add	x8, x8, #0x2f
 148:	movk	x10, #0xaaab
 14c:	umulh	x8, x8, x10
 150:	sub	x19, x5, x4
 154:	lsr	x21, x8, #5
 158:	sub	x20, x3, x2
 15c:	tbz	w9, #0, 1b4 <__llvm_profile_get_size_for_buffer_internal+0x90>
 160:	bl	0 <getpagesize>
 164:	mov	w8, #0x30                  	// #48
 168:	mul	x8, x21, x8
 16c:	mov	w9, w0
 170:	add	x11, x8, #0x50
 174:	udiv	x8, x11, x9
 178:	udiv	x10, x20, x9
 17c:	msub	x8, x8, x9, x11
 180:	udiv	x12, x19, x9
 184:	msub	x10, x10, x9, x20
 188:	cmp	x8, #0x0
 18c:	sub	x8, x9, x8
 190:	msub	x12, x12, x9, x19
 194:	csel	x8, xzr, x8, eq  // eq = none
 198:	cmp	x10, #0x0
 19c:	sub	x10, x9, x10
 1a0:	sub	x13, x9, x12
 1a4:	csel	x9, xzr, x10, eq  // eq = none
 1a8:	cmp	x12, #0x0
 1ac:	csel	x10, xzr, x13, eq  // eq = none
 1b0:	b	1d4 <__llvm_profile_get_size_for_buffer_internal+0xb0>
 1b4:	mov	x0, x19
 1b8:	bl	0 <__llvm_profile_get_num_padding_bytes>
 1bc:	mov	w11, #0x30                  	// #48
 1c0:	mul	x11, x21, x11
 1c4:	mov	x9, xzr
 1c8:	mov	x8, xzr
 1cc:	and	x10, x0, #0xff
 1d0:	add	x11, x11, #0x50
 1d4:	add	x11, x11, x20
 1d8:	add	x11, x11, x19
 1dc:	ldp	x20, x19, [sp, #32]
 1e0:	ldr	x21, [sp, #16]
 1e4:	add	x9, x11, x9
 1e8:	add	x8, x9, x8
 1ec:	add	x0, x8, x10
 1f0:	ldp	x29, x30, [sp], #48
 1f4:	ret

00000000000001f8 <__llvm_profile_get_data_size>:
 1f8:	sub	x8, x1, x0
 1fc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 200:	add	x8, x8, #0x2f
 204:	movk	x9, #0xaaab
 208:	umulh	x8, x8, x9
 20c:	lsr	x0, x8, #5
 210:	ret

0000000000000214 <__llvm_profile_get_padding_sizes_for_counters>:
 214:	stp	x29, x30, [sp, #-64]!
 218:	stp	x24, x23, [sp, #16]
 21c:	stp	x22, x21, [sp, #32]
 220:	stp	x20, x19, [sp, #48]
 224:	mov	x29, sp
 228:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
 22c:	ldrb	w8, [x8]
 230:	mov	x19, x5
 234:	mov	x20, x4
 238:	mov	x21, x3
 23c:	mov	x22, x2
 240:	tbz	w8, #0, 2ac <__llvm_profile_get_padding_sizes_for_counters+0x98>
 244:	mov	x23, x1
 248:	mov	x24, x0
 24c:	bl	0 <getpagesize>
 250:	mov	w8, #0x30                  	// #48
 254:	mul	x8, x24, x8
 258:	mov	w10, w0
 25c:	add	x8, x8, #0x50
 260:	lsl	x9, x23, #3
 264:	udiv	x12, x8, x10
 268:	udiv	x11, x9, x10
 26c:	msub	x8, x12, x10, x8
 270:	msub	x9, x11, x10, x9
 274:	udiv	x11, x22, x10
 278:	cmp	x8, #0x0
 27c:	sub	x8, x10, x8
 280:	msub	x11, x11, x10, x22
 284:	sub	x12, x10, x9
 288:	csel	x8, xzr, x8, eq  // eq = none
 28c:	cmp	x9, #0x0
 290:	sub	x10, x10, x11
 294:	str	x8, [x21]
 298:	csel	x8, xzr, x12, eq  // eq = none
 29c:	cmp	x11, #0x0
 2a0:	str	x8, [x20]
 2a4:	csel	x8, xzr, x10, eq  // eq = none
 2a8:	b	2c0 <__llvm_profile_get_padding_sizes_for_counters+0xac>
 2ac:	mov	x0, x22
 2b0:	str	xzr, [x21]
 2b4:	str	xzr, [x20]
 2b8:	bl	0 <__llvm_profile_get_num_padding_bytes>
 2bc:	and	x8, x0, #0xff
 2c0:	str	x8, [x19]
 2c4:	ldp	x20, x19, [sp, #48]
 2c8:	ldp	x22, x21, [sp, #32]
 2cc:	ldp	x24, x23, [sp, #16]
 2d0:	ldp	x29, x30, [sp], #64
 2d4:	ret

00000000000002d8 <initBufferWriter>:
 2d8:	adrp	x8, 0 <lprofBufferWriter>
 2dc:	ldr	x8, [x8]
 2e0:	stp	x8, x1, [x0]
 2e4:	ret

00000000000002e8 <__llvm_profile_write_buffer>:
 2e8:	sub	sp, sp, #0x20
 2ec:	stp	x29, x30, [sp, #16]
 2f0:	add	x29, sp, #0x10
 2f4:	adrp	x8, 0 <lprofBufferWriter>
 2f8:	ldr	x8, [x8]
 2fc:	mov	x1, xzr
 300:	mov	w2, wzr
 304:	stp	x8, x0, [sp]
 308:	mov	x0, sp
 30c:	bl	0 <lprofWriteData>
 310:	ldp	x29, x30, [sp, #16]
 314:	add	sp, sp, #0x20
 318:	ret

000000000000031c <__llvm_profile_write_buffer_internal>:
 31c:	sub	sp, sp, #0x30
 320:	stp	x29, x30, [sp, #32]
 324:	add	x29, sp, #0x20
 328:	adrp	x8, 0 <lprofBufferWriter>
 32c:	ldr	x8, [x8]
 330:	mov	x7, x6
 334:	mov	x6, x5
 338:	mov	x5, xzr
 33c:	stp	x8, x0, [sp, #16]
 340:	add	x0, sp, #0x10
 344:	str	wzr, [sp]
 348:	bl	0 <lprofWriteDataImpl>
 34c:	ldp	x29, x30, [sp, #32]
 350:	add	sp, sp, #0x30
 354:	ret

InstrProfilingFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_set_file_object>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	stp	x20, x19, [sp, #16]
       8:	mov	x29, sp
       c:	mov	w20, w1
      10:	mov	x19, x0
      14:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
      18:	cbnz	w0, 38 <__llvm_profile_set_file_object+0x38>
      1c:	adrp	x8, 0 <__llvm_profile_set_file_object>
      20:	add	x8, x8, #0x0
      24:	str	x19, [x8, #8]
      28:	str	w20, [x8]
      2c:	ldp	x20, x19, [sp, #16]
      30:	ldp	x29, x30, [sp], #32
      34:	ret
      38:	adrp	x8, 0 <stderr>
      3c:	ldr	x8, [x8]
      40:	mov	x0, x19
      44:	ldr	x20, [x8]
      48:	bl	0 <fileno>
      4c:	mov	w2, w0
      50:	mov	x0, x20
      54:	ldp	x20, x19, [sp, #16]
      58:	adrp	x1, 0 <__llvm_profile_set_file_object>
      5c:	add	x1, x1, #0x0
      60:	ldp	x29, x30, [sp], #32
      64:	b	0 <fprintf>

0000000000000068 <lprofCreateBufferIOInternal>:
      68:	stp	x29, x30, [sp, #-48]!
      6c:	str	x21, [sp, #16]
      70:	stp	x20, x19, [sp, #32]
      74:	mov	x29, sp
      78:	adrp	x9, 0 <free>
      7c:	ldr	x9, [x9]
      80:	mov	w19, w1
      84:	mov	x20, x0
      88:	adrp	x8, 0 <FreeHook>
      8c:	mov	w0, w1
      90:	mov	w1, #0x1                   	// #1
      94:	str	x9, [x8]
      98:	mov	w21, #0x1                   	// #1
      9c:	bl	0 <calloc>
      a0:	adrp	x8, 0 <DynamicBufferIOBuffer>
      a4:	adrp	x9, 0 <VPBufferSize>
      a8:	str	x0, [x8]
      ac:	mov	w0, #0x10                  	// #16
      b0:	mov	w1, #0x1                   	// #1
      b4:	str	w19, [x9]
      b8:	bl	0 <calloc>
      bc:	adrp	x8, 0 <__llvm_profile_set_file_object>
      c0:	add	x8, x8, #0x0
      c4:	stp	x8, x20, [x0]
      c8:	bl	0 <lprofCreateBufferIO>
      cc:	str	w21, [x0, #8]
      d0:	ldp	x20, x19, [sp, #32]
      d4:	ldr	x21, [sp, #16]
      d8:	ldp	x29, x30, [sp], #48
      dc:	ret

00000000000000e0 <__llvm_profile_get_path_prefix>:
      e0:	stp	x29, x30, [sp, #-64]!
      e4:	stp	x24, x23, [sp, #16]
      e8:	stp	x22, x21, [sp, #32]
      ec:	stp	x20, x19, [sp, #48]
      f0:	mov	x29, sp
      f4:	adrp	x22, 0 <__llvm_profile_set_file_object>
      f8:	ldr	x19, [x22]
      fc:	cbnz	x19, 214 <__llvm_profile_get_path_prefix+0x134>
     100:	adrp	x8, 0 <__llvm_profile_set_file_object>
     104:	ldr	x0, [x8]
     108:	cbz	x0, 170 <__llvm_profile_get_path_prefix+0x90>
     10c:	ldrb	w8, [x0]
     110:	cbz	w8, 170 <__llvm_profile_get_path_prefix+0x90>
     114:	adrp	x8, 0 <__llvm_profile_set_file_object>
     118:	add	x8, x8, #0x0
     11c:	ldp	w24, w21, [x8]
     120:	ldr	w23, [x8, #8]
     124:	orr	w8, w21, w24
     128:	orr	w20, w8, w23
     12c:	bl	0 <strlen>
     130:	mov	x19, x0
     134:	cbz	w20, 174 <__llvm_profile_get_path_prefix+0x94>
     138:	adrp	x20, 0 <__llvm_profile_set_file_object>
     13c:	add	x20, x20, #0x0
     140:	mov	x0, x20
     144:	bl	0 <strlen>
     148:	sub	x8, x0, #0x2
     14c:	add	x0, x20, #0x10
     150:	madd	x19, x8, x24, x19
     154:	bl	0 <strlen>
     158:	sub	x8, x0, #0x2
     15c:	madd	x8, x8, x21, x19
     160:	add	x9, x8, #0x18
     164:	cmp	w23, #0x0
     168:	csel	x19, x8, x9, eq  // eq = none
     16c:	b	174 <__llvm_profile_get_path_prefix+0x94>
     170:	mov	x19, xzr
     174:	add	w8, w19, #0x1
     178:	sxtw	x8, w8
     17c:	add	x8, x8, #0xf
     180:	and	x8, x8, #0xfffffffffffffff0
     184:	mov	x9, sp
     188:	sub	x0, x9, x8
     18c:	mov	sp, x0
     190:	mov	w1, wzr
     194:	bl	230 <getCurFilename>
     198:	cbz	x0, 20c <__llvm_profile_get_path_prefix+0x12c>
     19c:	mov	x20, x0
     1a0:	bl	0 <lprofFindLastDirSeparator>
     1a4:	cbz	x0, 20c <__llvm_profile_get_path_prefix+0x12c>
     1a8:	sub	w8, w0, w20
     1ac:	lsl	x21, x8, #32
     1b0:	mov	x8, #0x200000000           	// #8589934592
     1b4:	add	x8, x21, x8
     1b8:	asr	x0, x8, #32
     1bc:	bl	0 <malloc>
     1c0:	cbz	x0, 1ec <__llvm_profile_get_path_prefix+0x10c>
     1c4:	mov	x8, #0x100000000           	// #4294967296
     1c8:	add	x8, x21, x8
     1cc:	asr	x21, x8, #32
     1d0:	mov	x1, x20
     1d4:	mov	x2, x21
     1d8:	mov	x19, x0
     1dc:	bl	0 <memcpy>
     1e0:	strb	wzr, [x19, x21]
     1e4:	str	x19, [x22]
     1e8:	b	214 <__llvm_profile_get_path_prefix+0x134>
     1ec:	adrp	x8, 0 <stderr>
     1f0:	ldr	x8, [x8]
     1f4:	adrp	x1, 0 <__llvm_profile_set_file_object>
     1f8:	adrp	x2, 0 <__llvm_profile_set_file_object>
     1fc:	add	x1, x1, #0x0
     200:	ldr	x0, [x8]
     204:	add	x2, x2, #0x0
     208:	bl	0 <fprintf>
     20c:	adrp	x19, 0 <__llvm_profile_set_file_object>
     210:	add	x19, x19, #0x0
     214:	mov	x0, x19
     218:	mov	sp, x29
     21c:	ldp	x20, x19, [sp, #48]
     220:	ldp	x22, x21, [sp, #32]
     224:	ldp	x24, x23, [sp, #16]
     228:	ldp	x29, x30, [sp], #64
     22c:	ret

0000000000000230 <getCurFilename>:
     230:	sub	sp, sp, #0x80
     234:	stp	x29, x30, [sp, #32]
     238:	stp	x28, x27, [sp, #48]
     23c:	stp	x26, x25, [sp, #64]
     240:	stp	x24, x23, [sp, #80]
     244:	stp	x22, x21, [sp, #96]
     248:	stp	x20, x19, [sp, #112]
     24c:	add	x29, sp, #0x20
     250:	adrp	x21, 0 <__llvm_profile_set_file_object>
     254:	ldr	x28, [x21]
     258:	cbz	x28, 3e0 <getCurFilename+0x1b0>
     25c:	ldrb	w8, [x28]
     260:	cbz	w8, 3e0 <getCurFilename+0x1b0>
     264:	adrp	x8, 0 <__llvm_profile_set_file_object>
     268:	add	x8, x8, #0x0
     26c:	ldp	w9, w10, [x8]
     270:	ldr	w8, [x8, #8]
     274:	mov	x19, x0
     278:	orr	w9, w10, w9
     27c:	orr	w8, w9, w8
     280:	cbnz	w8, 290 <getCurFilename+0x60>
     284:	mov	w20, w1
     288:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     28c:	cbz	w0, 410 <getCurFilename+0x1e0>
     290:	adrp	x20, 0 <__llvm_profile_set_file_object>
     294:	add	x20, x20, #0x0
     298:	mov	x0, x20
     29c:	bl	0 <strlen>
     2a0:	mov	x21, x0
     2a4:	add	x0, x20, #0x10
     2a8:	bl	0 <strlen>
     2ac:	mov	x22, x0
     2b0:	mov	w8, wzr
     2b4:	mov	w26, wzr
     2b8:	sxtw	x23, w0
     2bc:	sxtw	x24, w21
     2c0:	b	2e0 <getCurFilename+0xb0>
     2c4:	adrp	x1, 0 <__llvm_profile_set_file_object>
     2c8:	add	x0, x19, w26, sxtw
     2cc:	add	x1, x1, #0x0
     2d0:	mov	x2, x23
     2d4:	bl	0 <memcpy>
     2d8:	add	w26, w26, w22
     2dc:	add	w8, w27, #0x1
     2e0:	sxtw	x10, w8
     2e4:	ldrb	w9, [x28, x10]
     2e8:	cmp	w9, #0x25
     2ec:	b.eq	30c <getCurFilename+0xdc>  // b.none
     2f0:	cbz	w9, 3e8 <getCurFilename+0x1b8>
     2f4:	add	w10, w26, #0x1
     2f8:	mov	w27, w8
     2fc:	strb	w9, [x19, w26, sxtw]
     300:	mov	w26, w10
     304:	add	w8, w27, #0x1
     308:	b	2e0 <getCurFilename+0xb0>
     30c:	add	x27, x10, #0x1
     310:	ldrb	w9, [x28, x27]
     314:	cmp	w9, #0x68
     318:	b.eq	2c4 <getCurFilename+0x94>  // b.none
     31c:	cmp	w9, #0x70
     320:	b.ne	340 <getCurFilename+0x110>  // b.any
     324:	add	x0, x19, w26, sxtw
     328:	mov	x1, x20
     32c:	mov	x2, x24
     330:	bl	0 <memcpy>
     334:	add	w26, w26, w21
     338:	add	w8, w27, #0x1
     33c:	b	2e0 <getCurFilename+0xb0>
     340:	ldrb	w9, [x28, w27, uxtw]
     344:	cmp	w9, #0x6d
     348:	b.ne	354 <getCurFilename+0x124>  // b.any
     34c:	mov	w25, w27
     350:	b	378 <getCurFilename+0x148>
     354:	add	w25, w8, #0x1
     358:	sub	w8, w9, #0x30
     35c:	and	w8, w8, #0xff
     360:	cmp	w8, #0x9
     364:	b.hi	3d8 <getCurFilename+0x1a8>  // b.pmore
     368:	add	w25, w25, #0x1
     36c:	ldrb	w9, [x28, w25, uxtw]
     370:	cmp	w9, #0x6d
     374:	b.ne	358 <getCurFilename+0x128>  // b.any
     378:	bl	0 <getpid>
     37c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     380:	ldr	w8, [x8]
     384:	udiv	w9, w0, w8
     388:	msub	w27, w9, w8, w0
     38c:	bl	0 <lprofGetLoadModuleSignature>
     390:	adrp	x2, 0 <__llvm_profile_set_file_object>
     394:	mov	x3, x0
     398:	add	x0, sp, #0x4
     39c:	mov	w1, #0x19                  	// #25
     3a0:	add	x2, x2, #0x0
     3a4:	mov	w4, w27
     3a8:	bl	0 <snprintf>
     3ac:	cmp	w0, #0x18
     3b0:	mov	w8, #0xffffffff            	// #-1
     3b4:	ccmp	w0, w8, #0x4, le
     3b8:	mov	w8, #0x18                  	// #24
     3bc:	csel	w27, w8, w0, eq  // eq = none
     3c0:	add	x0, x19, w26, sxtw
     3c4:	sxtw	x2, w27
     3c8:	add	x1, sp, #0x4
     3cc:	bl	0 <memcpy>
     3d0:	add	w26, w27, w26
     3d4:	mov	w27, w25
     3d8:	add	w8, w27, #0x1
     3dc:	b	2e0 <getCurFilename+0xb0>
     3e0:	mov	x19, xzr
     3e4:	b	3ec <getCurFilename+0x1bc>
     3e8:	strb	wzr, [x19, w26, sxtw]
     3ec:	mov	x0, x19
     3f0:	ldp	x20, x19, [sp, #112]
     3f4:	ldp	x22, x21, [sp, #96]
     3f8:	ldp	x24, x23, [sp, #80]
     3fc:	ldp	x26, x25, [sp, #64]
     400:	ldp	x28, x27, [sp, #48]
     404:	ldp	x29, x30, [sp, #32]
     408:	add	sp, sp, #0x80
     40c:	ret
     410:	ldr	x21, [x21]
     414:	cbz	w20, 43c <getCurFilename+0x20c>
     418:	mov	x0, x21
     41c:	bl	0 <strlen>
     420:	sxtw	x20, w0
     424:	mov	x0, x19
     428:	mov	x1, x21
     42c:	mov	x2, x20
     430:	bl	0 <memcpy>
     434:	strb	wzr, [x19, x20]
     438:	b	3ec <getCurFilename+0x1bc>
     43c:	mov	x19, x21
     440:	b	3ec <getCurFilename+0x1bc>

0000000000000444 <__llvm_profile_get_filename>:
     444:	stp	x29, x30, [sp, #-64]!
     448:	str	x23, [sp, #16]
     44c:	stp	x22, x21, [sp, #32]
     450:	stp	x20, x19, [sp, #48]
     454:	mov	x29, sp
     458:	adrp	x8, 0 <__llvm_profile_set_file_object>
     45c:	ldr	x0, [x8]
     460:	cbz	x0, 4d8 <__llvm_profile_get_filename+0x94>
     464:	ldrb	w8, [x0]
     468:	cbz	w8, 51c <__llvm_profile_get_filename+0xd8>
     46c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     470:	add	x8, x8, #0x0
     474:	ldp	w23, w21, [x8]
     478:	ldr	w22, [x8, #8]
     47c:	orr	w8, w21, w23
     480:	orr	w20, w8, w22
     484:	bl	0 <strlen>
     488:	mov	x19, x0
     48c:	cbz	w20, 4dc <__llvm_profile_get_filename+0x98>
     490:	adrp	x20, 0 <__llvm_profile_set_file_object>
     494:	add	x20, x20, #0x0
     498:	mov	x0, x20
     49c:	bl	0 <strlen>
     4a0:	sub	x8, x0, #0x2
     4a4:	add	x0, x20, #0x10
     4a8:	madd	x19, x8, x23, x19
     4ac:	bl	0 <strlen>
     4b0:	sub	x8, x0, #0x2
     4b4:	madd	x8, x8, x21, x19
     4b8:	add	x9, x8, #0x18
     4bc:	cmp	w22, #0x0
     4c0:	csel	x19, x8, x9, eq  // eq = none
     4c4:	add	w8, w19, #0x1
     4c8:	sxtw	x0, w8
     4cc:	bl	0 <malloc>
     4d0:	cbnz	x0, 4ec <__llvm_profile_get_filename+0xa8>
     4d4:	b	530 <__llvm_profile_get_filename+0xec>
     4d8:	mov	x19, xzr
     4dc:	add	w8, w19, #0x1
     4e0:	sxtw	x0, w8
     4e4:	bl	0 <malloc>
     4e8:	cbz	x0, 530 <__llvm_profile_get_filename+0xec>
     4ec:	mov	w1, #0x1                   	// #1
     4f0:	mov	x19, x0
     4f4:	bl	230 <getCurFilename>
     4f8:	adrp	x8, 0 <__llvm_profile_set_file_object>
     4fc:	add	x8, x8, #0x0
     500:	cmp	x0, #0x0
     504:	csel	x0, x8, x19, eq  // eq = none
     508:	ldp	x20, x19, [sp, #48]
     50c:	ldp	x22, x21, [sp, #32]
     510:	ldr	x23, [sp, #16]
     514:	ldp	x29, x30, [sp], #64
     518:	ret
     51c:	mov	x19, xzr
     520:	add	w8, w19, #0x1
     524:	sxtw	x0, w8
     528:	bl	0 <malloc>
     52c:	cbnz	x0, 4ec <__llvm_profile_get_filename+0xa8>
     530:	adrp	x8, 0 <stderr>
     534:	ldr	x8, [x8]
     538:	adrp	x1, 0 <__llvm_profile_set_file_object>
     53c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     540:	add	x1, x1, #0x0
     544:	ldr	x0, [x8]
     548:	add	x2, x2, #0x0
     54c:	bl	0 <fprintf>
     550:	adrp	x0, 0 <__llvm_profile_set_file_object>
     554:	add	x0, x0, #0x0
     558:	b	508 <__llvm_profile_get_filename+0xc4>

000000000000055c <__llvm_profile_initialize_file>:
     55c:	stp	x29, x30, [sp, #-32]!
     560:	str	x19, [sp, #16]
     564:	mov	x29, sp
     568:	adrp	x8, 0 <__llvm_profile_filename>
     56c:	ldr	x8, [x8]
     570:	adrp	x0, 0 <__llvm_profile_set_file_object>
     574:	add	x0, x0, #0x0
     578:	ldrb	w19, [x8]
     57c:	bl	0 <getenv>
     580:	cbz	x0, 5a0 <__llvm_profile_initialize_file+0x44>
     584:	ldrb	w8, [x0]
     588:	cbz	w8, 5a0 <__llvm_profile_initialize_file+0x44>
     58c:	mov	w1, #0x3                   	// #3
     590:	mov	w2, #0x1                   	// #1
     594:	ldr	x19, [sp, #16]
     598:	ldp	x29, x30, [sp], #32
     59c:	b	5d8 <parseAndSetFilename>
     5a0:	cbz	w19, 5c0 <__llvm_profile_initialize_file+0x64>
     5a4:	adrp	x0, 0 <__llvm_profile_filename>
     5a8:	ldr	x0, [x0]
     5ac:	mov	w1, #0x2                   	// #2
     5b0:	mov	w2, wzr
     5b4:	ldr	x19, [sp, #16]
     5b8:	ldp	x29, x30, [sp], #32
     5bc:	b	5d8 <parseAndSetFilename>
     5c0:	mov	w1, #0x1                   	// #1
     5c4:	mov	x0, xzr
     5c8:	mov	w2, wzr
     5cc:	ldr	x19, [sp, #16]
     5d0:	ldp	x29, x30, [sp], #32
     5d4:	b	5d8 <parseAndSetFilename>

00000000000005d8 <parseAndSetFilename>:
     5d8:	sub	sp, sp, #0x70
     5dc:	stp	x29, x30, [sp, #16]
     5e0:	stp	x28, x27, [sp, #32]
     5e4:	stp	x26, x25, [sp, #48]
     5e8:	stp	x24, x23, [sp, #64]
     5ec:	stp	x22, x21, [sp, #80]
     5f0:	stp	x20, x19, [sp, #96]
     5f4:	add	x29, sp, #0x10
     5f8:	adrp	x27, 0 <__llvm_profile_set_file_object>
     5fc:	add	x27, x27, #0x0
     600:	ldr	w26, [x27, #180]
     604:	cmp	w26, w1
     608:	b.ls	62c <parseAndSetFilename+0x54>  // b.plast
     60c:	ldp	x20, x19, [sp, #96]
     610:	ldp	x22, x21, [sp, #80]
     614:	ldp	x24, x23, [sp, #64]
     618:	ldp	x26, x25, [sp, #48]
     61c:	ldp	x28, x27, [sp, #32]
     620:	ldp	x29, x30, [sp, #16]
     624:	add	sp, sp, #0x70
     628:	ret
     62c:	ldr	x19, [x27]
     630:	adrp	x8, 0 <__llvm_profile_set_file_object>
     634:	add	x8, x8, #0x0
     638:	cmp	x0, #0x0
     63c:	mov	w22, w2
     640:	mov	w20, w1
     644:	csel	x21, x8, x0, eq  // eq = none
     648:	cbz	x19, 65c <parseAndSetFilename+0x84>
     64c:	mov	x0, x19
     650:	mov	x1, x21
     654:	bl	0 <strcmp>
     658:	cbz	w0, 838 <parseAndSetFilename+0x260>
     65c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     660:	ldr	x8, [x8]
     664:	mov	x0, x19
     668:	cbz	x8, 67c <parseAndSetFilename+0xa4>
     66c:	mov	x0, x8
     670:	bl	0 <free>
     674:	adrp	x8, 0 <__llvm_profile_set_file_object>
     678:	ldr	x0, [x8]
     67c:	cbz	x0, 690 <parseAndSetFilename+0xb8>
     680:	adrp	x8, 0 <__llvm_profile_set_file_object>
     684:	ldr	w8, [x8]
     688:	cbz	w8, 690 <parseAndSetFilename+0xb8>
     68c:	bl	0 <free>
     690:	movi	v0.2d, #0x0
     694:	str	xzr, [x27, #176]
     698:	stp	q0, q0, [x27, #144]
     69c:	stp	q0, q0, [x27, #112]
     6a0:	stp	q0, q0, [x27, #80]
     6a4:	stp	q0, q0, [x27, #48]
     6a8:	stp	q0, q0, [x27, #16]
     6ac:	str	q0, [x27]
     6b0:	str	x19, [sp, #8]
     6b4:	cbz	w22, 6d0 <parseAndSetFilename+0xf8>
     6b8:	mov	x0, x21
     6bc:	bl	0 <strdup>
     6c0:	mov	w8, #0x1                   	// #1
     6c4:	str	x0, [x27]
     6c8:	str	w8, [x27, #8]
     6cc:	b	6d8 <parseAndSetFilename+0x100>
     6d0:	adrp	x8, 0 <__llvm_profile_set_file_object>
     6d4:	str	x21, [x8]
     6d8:	mov	w22, wzr
     6dc:	mov	w24, wzr
     6e0:	mov	w25, wzr
     6e4:	mov	w23, wzr
     6e8:	mov	w28, #0xa                   	// #10
     6ec:	sxtw	x9, w22
     6f0:	ldrb	w8, [x21, x9]
     6f4:	cmp	w8, #0x25
     6f8:	b.eq	70c <parseAndSetFilename+0x134>  // b.none
     6fc:	cbz	w8, 824 <parseAndSetFilename+0x24c>
     700:	mov	w19, w22
     704:	add	w22, w19, #0x1
     708:	b	6ec <parseAndSetFilename+0x114>
     70c:	add	x19, x9, #0x1
     710:	ldrb	w8, [x21, x19]
     714:	cmp	w8, #0x63
     718:	b.eq	73c <parseAndSetFilename+0x164>  // b.none
     71c:	cmp	w8, #0x68
     720:	b.eq	754 <parseAndSetFilename+0x17c>  // b.none
     724:	cmp	w8, #0x70
     728:	b.ne	764 <parseAndSetFilename+0x18c>  // b.any
     72c:	cbz	w25, 7d0 <parseAndSetFilename+0x1f8>
     730:	add	w25, w25, #0x1
     734:	add	w22, w19, #0x1
     738:	b	6ec <parseAndSetFilename+0x114>
     73c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     740:	cbnz	w0, 844 <parseAndSetFilename+0x26c>
     744:	bl	0 <__llvm_profile_enable_continuous_mode>
     748:	add	w19, w22, #0x2
     74c:	add	w22, w19, #0x1
     750:	b	6ec <parseAndSetFilename+0x114>
     754:	cbz	w24, 804 <parseAndSetFilename+0x22c>
     758:	add	w24, w24, #0x1
     75c:	add	w22, w19, #0x1
     760:	b	6ec <parseAndSetFilename+0x114>
     764:	ldrb	w10, [x21, w19, uxtw]
     768:	cmp	w10, #0x6d
     76c:	b.ne	77c <parseAndSetFilename+0x1a4>  // b.any
     770:	mov	w8, w19
     774:	mov	w9, #0x1                   	// #1
     778:	b	7b4 <parseAndSetFilename+0x1dc>
     77c:	mov	w9, wzr
     780:	add	w8, w22, #0x1
     784:	sub	w11, w10, #0x30
     788:	and	w11, w11, #0xff
     78c:	cmp	w11, #0x9
     790:	b.hi	7c8 <parseAndSetFilename+0x1f0>  // b.pmore
     794:	mul	w9, w9, w28
     798:	add	w8, w8, #0x1
     79c:	add	w9, w9, w10, uxtb
     7a0:	ldrb	w10, [x21, w8, uxtw]
     7a4:	sub	w9, w9, #0x30
     7a8:	cmp	w10, #0x6d
     7ac:	b.ne	784 <parseAndSetFilename+0x1ac>  // b.any
     7b0:	cbz	w9, 774 <parseAndSetFilename+0x19c>
     7b4:	cbnz	w23, 850 <parseAndSetFilename+0x278>
     7b8:	adrp	x10, 0 <__llvm_profile_set_file_object>
     7bc:	mov	w23, #0x1                   	// #1
     7c0:	mov	w19, w8
     7c4:	str	w9, [x10]
     7c8:	add	w22, w19, #0x1
     7cc:	b	6ec <parseAndSetFilename+0x114>
     7d0:	bl	0 <getpid>
     7d4:	sxtw	x3, w0
     7d8:	adrp	x0, 0 <__llvm_profile_set_file_object>
     7dc:	adrp	x2, 0 <__llvm_profile_set_file_object>
     7e0:	mov	w1, #0x10                  	// #16
     7e4:	add	x0, x0, #0x0
     7e8:	add	x2, x2, #0x0
     7ec:	bl	0 <snprintf>
     7f0:	cmp	w0, #0x1
     7f4:	b.lt	85c <parseAndSetFilename+0x284>  // b.tstop
     7f8:	mov	w25, #0x1                   	// #1
     7fc:	add	w22, w19, #0x1
     800:	b	6ec <parseAndSetFilename+0x114>
     804:	adrp	x0, 0 <__llvm_profile_set_file_object>
     808:	mov	w1, #0x80                  	// #128
     80c:	add	x0, x0, #0x0
     810:	bl	0 <lprofGetHostName>
     814:	cbnz	w0, 874 <parseAndSetFilename+0x29c>
     818:	mov	w24, #0x1                   	// #1
     81c:	add	w22, w19, #0x1
     820:	b	6ec <parseAndSetFilename+0x114>
     824:	adrp	x8, 0 <__llvm_profile_set_file_object>
     828:	add	x8, x8, #0x0
     82c:	stp	w25, w24, [x8]
     830:	ldr	x19, [sp, #8]
     834:	b	8ec <parseAndSetFilename+0x314>
     838:	adrp	x8, 0 <__llvm_profile_set_file_object>
     83c:	str	w20, [x8]
     840:	b	60c <parseAndSetFilename+0x34>
     844:	adrp	x1, 0 <__llvm_profile_set_file_object>
     848:	add	x1, x1, #0x0
     84c:	b	87c <parseAndSetFilename+0x2a4>
     850:	adrp	x1, 0 <__llvm_profile_set_file_object>
     854:	add	x1, x1, #0x0
     858:	b	87c <parseAndSetFilename+0x2a4>
     85c:	ldr	x19, [sp, #8]
     860:	adrp	x22, 0 <__llvm_profile_set_file_object>
     864:	adrp	x1, 0 <__llvm_profile_set_file_object>
     868:	add	x22, x22, #0x0
     86c:	add	x1, x1, #0x0
     870:	b	888 <parseAndSetFilename+0x2b0>
     874:	adrp	x1, 0 <__llvm_profile_set_file_object>
     878:	add	x1, x1, #0x0
     87c:	ldr	x19, [sp, #8]
     880:	adrp	x22, 0 <__llvm_profile_set_file_object>
     884:	add	x22, x22, #0x0
     888:	adrp	x8, 0 <stderr>
     88c:	ldr	x8, [x8]
     890:	mov	x2, x21
     894:	ldr	x0, [x8]
     898:	bl	0 <fprintf>
     89c:	ldr	x0, [x27]
     8a0:	cbz	x0, 8b0 <parseAndSetFilename+0x2d8>
     8a4:	ldr	w8, [x27, #8]
     8a8:	cbz	w8, 8b0 <parseAndSetFilename+0x2d8>
     8ac:	bl	0 <free>
     8b0:	movi	v0.2d, #0x0
     8b4:	mov	w8, #0x1                   	// #1
     8b8:	str	x22, [x27]
     8bc:	stur	q0, [x27, #168]
     8c0:	stur	q0, [x27, #152]
     8c4:	stur	q0, [x27, #136]
     8c8:	stur	q0, [x27, #120]
     8cc:	stur	q0, [x27, #104]
     8d0:	stur	q0, [x27, #88]
     8d4:	stur	q0, [x27, #72]
     8d8:	stur	q0, [x27, #56]
     8dc:	stur	q0, [x27, #40]
     8e0:	stur	q0, [x27, #24]
     8e4:	stur	q0, [x27, #8]
     8e8:	str	w8, [x27, #180]
     8ec:	adrp	x0, 0 <__llvm_profile_set_file_object>
     8f0:	adrp	x8, 0 <__llvm_profile_set_file_object>
     8f4:	add	x0, x0, #0x0
     8f8:	str	w20, [x8]
     8fc:	bl	0 <getenv>
     900:	cbz	x19, 930 <parseAndSetFilename+0x358>
     904:	cbz	x0, 934 <parseAndSetFilename+0x35c>
     908:	adrp	x8, 0 <stderr>
     90c:	ldr	x8, [x8]
     910:	ldr	x0, [x8]
     914:	sub	w8, w26, #0x1
     918:	cmp	w8, #0x3
     91c:	b.hi	988 <parseAndSetFilename+0x3b0>  // b.pmore
     920:	adrp	x9, 0 <__llvm_profile_set_file_object>
     924:	add	x9, x9, #0x0
     928:	ldr	x3, [x9, w8, sxtw #3]
     92c:	b	990 <parseAndSetFilename+0x3b8>
     930:	cbnz	x0, 958 <parseAndSetFilename+0x380>
     934:	bl	1268 <truncateCurrentFile>
     938:	ldp	x20, x19, [sp, #96]
     93c:	ldp	x22, x21, [sp, #80]
     940:	ldp	x24, x23, [sp, #64]
     944:	ldp	x26, x25, [sp, #48]
     948:	ldp	x28, x27, [sp, #32]
     94c:	ldp	x29, x30, [sp, #16]
     950:	add	sp, sp, #0x70
     954:	b	1384 <initializeProfileForContinuousMode>
     958:	adrp	x8, 0 <stderr>
     95c:	ldr	x8, [x8]
     960:	adrp	x9, 0 <__llvm_profile_set_file_object>
     964:	ldr	x2, [x9]
     968:	ldr	x0, [x8]
     96c:	sub	w8, w20, #0x1
     970:	cmp	w8, #0x3
     974:	b.hi	9d0 <parseAndSetFilename+0x3f8>  // b.pmore
     978:	adrp	x9, 0 <__llvm_profile_set_file_object>
     97c:	add	x9, x9, #0x0
     980:	ldr	x3, [x9, w8, sxtw #3]
     984:	b	9d8 <parseAndSetFilename+0x400>
     988:	adrp	x3, 0 <__llvm_profile_set_file_object>
     98c:	add	x3, x3, #0x0
     990:	adrp	x8, 0 <__llvm_profile_set_file_object>
     994:	ldr	x4, [x8]
     998:	sub	w8, w20, #0x1
     99c:	cmp	w8, #0x3
     9a0:	b.hi	9b4 <parseAndSetFilename+0x3dc>  // b.pmore
     9a4:	adrp	x9, 0 <__llvm_profile_set_file_object>
     9a8:	add	x9, x9, #0x0
     9ac:	ldr	x5, [x9, w8, sxtw #3]
     9b0:	b	9bc <parseAndSetFilename+0x3e4>
     9b4:	adrp	x5, 0 <__llvm_profile_set_file_object>
     9b8:	add	x5, x5, #0x0
     9bc:	adrp	x1, 0 <__llvm_profile_set_file_object>
     9c0:	add	x1, x1, #0x0
     9c4:	mov	x2, x19
     9c8:	bl	0 <fprintf>
     9cc:	b	934 <parseAndSetFilename+0x35c>
     9d0:	adrp	x3, 0 <__llvm_profile_set_file_object>
     9d4:	add	x3, x3, #0x0
     9d8:	adrp	x1, 0 <__llvm_profile_set_file_object>
     9dc:	add	x1, x1, #0x0
     9e0:	bl	0 <fprintf>
     9e4:	b	934 <parseAndSetFilename+0x35c>

00000000000009e8 <__llvm_profile_set_filename>:
     9e8:	stp	x29, x30, [sp, #-32]!
     9ec:	str	x19, [sp, #16]
     9f0:	mov	x29, sp
     9f4:	mov	x19, x0
     9f8:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     9fc:	cbz	w0, a0c <__llvm_profile_set_filename+0x24>
     a00:	ldr	x19, [sp, #16]
     a04:	ldp	x29, x30, [sp], #32
     a08:	ret
     a0c:	mov	x0, x19
     a10:	ldr	x19, [sp, #16]
     a14:	mov	w1, #0x4                   	// #4
     a18:	mov	w2, #0x1                   	// #1
     a1c:	ldp	x29, x30, [sp], #32
     a20:	b	5d8 <parseAndSetFilename>

0000000000000a24 <__llvm_profile_write_file>:
     a24:	stp	x29, x30, [sp, #-64]!
     a28:	str	x23, [sp, #16]
     a2c:	stp	x22, x21, [sp, #32]
     a30:	stp	x20, x19, [sp, #48]
     a34:	mov	x29, sp
     a38:	bl	0 <lprofProfileDumped>
     a3c:	cbnz	w0, b20 <__llvm_profile_write_file+0xfc>
     a40:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     a44:	cbnz	w0, b20 <__llvm_profile_write_file+0xfc>
     a48:	adrp	x8, 0 <__llvm_profile_set_file_object>
     a4c:	ldr	x0, [x8]
     a50:	cbz	x0, ab8 <__llvm_profile_write_file+0x94>
     a54:	ldrb	w8, [x0]
     a58:	cbz	w8, ab8 <__llvm_profile_write_file+0x94>
     a5c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     a60:	add	x8, x8, #0x0
     a64:	ldp	w23, w21, [x8]
     a68:	ldr	w22, [x8, #8]
     a6c:	orr	w8, w21, w23
     a70:	orr	w20, w8, w22
     a74:	bl	0 <strlen>
     a78:	mov	x19, x0
     a7c:	cbz	w20, abc <__llvm_profile_write_file+0x98>
     a80:	adrp	x20, 0 <__llvm_profile_set_file_object>
     a84:	add	x20, x20, #0x0
     a88:	mov	x0, x20
     a8c:	bl	0 <strlen>
     a90:	sub	x8, x0, #0x2
     a94:	add	x0, x20, #0x10
     a98:	madd	x19, x8, x23, x19
     a9c:	bl	0 <strlen>
     aa0:	sub	x8, x0, #0x2
     aa4:	madd	x8, x8, x21, x19
     aa8:	add	x9, x8, #0x18
     aac:	cmp	w22, #0x0
     ab0:	csel	x19, x8, x9, eq  // eq = none
     ab4:	b	abc <__llvm_profile_write_file+0x98>
     ab8:	mov	x19, xzr
     abc:	add	w8, w19, #0x1
     ac0:	sxtw	x8, w8
     ac4:	add	x8, x8, #0xf
     ac8:	and	x8, x8, #0xfffffffffffffff0
     acc:	mov	x9, sp
     ad0:	sub	x0, x9, x8
     ad4:	mov	sp, x0
     ad8:	mov	w1, wzr
     adc:	bl	230 <getCurFilename>
     ae0:	cbz	x0, b48 <__llvm_profile_write_file+0x124>
     ae4:	mov	x20, x0
     ae8:	bl	0 <__llvm_profile_get_version>
     aec:	and	x8, x0, #0xffffffffffffff
     af0:	cmp	x8, #0x5
     af4:	b.ne	b70 <__llvm_profile_write_file+0x14c>  // b.any
     af8:	bl	0 <lprofSuspendSigKill>
     afc:	mov	w21, w0
     b00:	mov	x0, x20
     b04:	bl	bf4 <writeFile>
     b08:	mov	w19, w0
     b0c:	cbnz	w0, ba0 <__llvm_profile_write_file+0x17c>
     b10:	cmp	w21, #0x1
     b14:	b.ne	bd8 <__llvm_profile_write_file+0x1b4>  // b.any
     b18:	bl	0 <lprofRestoreSigKill>
     b1c:	b	bd8 <__llvm_profile_write_file+0x1b4>
     b20:	adrp	x8, 0 <stderr>
     b24:	ldr	x8, [x8]
     b28:	adrp	x1, 0 <__llvm_profile_set_file_object>
     b2c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     b30:	add	x1, x1, #0x0
     b34:	ldr	x0, [x8]
     b38:	add	x2, x2, #0x0
     b3c:	bl	0 <fprintf>
     b40:	mov	w19, wzr
     b44:	b	bd8 <__llvm_profile_write_file+0x1b4>
     b48:	adrp	x8, 0 <stderr>
     b4c:	ldr	x8, [x8]
     b50:	adrp	x1, 0 <__llvm_profile_set_file_object>
     b54:	adrp	x2, 0 <__llvm_profile_set_file_object>
     b58:	add	x1, x1, #0x0
     b5c:	ldr	x0, [x8]
     b60:	add	x2, x2, #0x0
     b64:	bl	0 <fprintf>
     b68:	mov	w19, #0xffffffff            	// #-1
     b6c:	b	bd8 <__llvm_profile_write_file+0x1b4>
     b70:	adrp	x8, 0 <stderr>
     b74:	ldr	x8, [x8]
     b78:	ldr	x19, [x8]
     b7c:	bl	0 <__llvm_profile_get_version>
     b80:	adrp	x1, 0 <__llvm_profile_set_file_object>
     b84:	mov	x3, x0
     b88:	add	x1, x1, #0x0
     b8c:	mov	w2, #0x5                   	// #5
     b90:	mov	x0, x19
     b94:	bl	0 <fprintf>
     b98:	mov	w19, #0xffffffff            	// #-1
     b9c:	b	bd8 <__llvm_profile_write_file+0x1b4>
     ba0:	adrp	x8, 0 <stderr>
     ba4:	ldr	x8, [x8]
     ba8:	ldr	x22, [x8]
     bac:	bl	0 <__errno_location>
     bb0:	ldr	w0, [x0]
     bb4:	bl	0 <strerror>
     bb8:	adrp	x1, 0 <__llvm_profile_set_file_object>
     bbc:	mov	x3, x0
     bc0:	add	x1, x1, #0x0
     bc4:	mov	x0, x22
     bc8:	mov	x2, x20
     bcc:	bl	0 <fprintf>
     bd0:	cmp	w21, #0x1
     bd4:	b.eq	b18 <__llvm_profile_write_file+0xf4>  // b.none
     bd8:	mov	w0, w19
     bdc:	mov	sp, x29
     be0:	ldp	x20, x19, [sp, #48]
     be4:	ldp	x22, x21, [sp, #32]
     be8:	ldr	x23, [sp, #16]
     bec:	ldp	x29, x30, [sp], #64
     bf0:	ret

0000000000000bf4 <writeFile>:
     bf4:	sub	sp, sp, #0x60
     bf8:	stp	x29, x30, [sp, #32]
     bfc:	stp	x24, x23, [sp, #48]
     c00:	stp	x22, x21, [sp, #64]
     c04:	stp	x20, x19, [sp, #80]
     c08:	add	x29, sp, #0x20
     c0c:	adrp	x24, 0 <__llvm_profile_set_file_object>
     c10:	add	x24, x24, #0x0
     c14:	ldr	w8, [x24, #192]
     c18:	ldr	w9, [x24]
     c1c:	adrp	x10, 0 <VPMergeHook>
     c20:	adrp	x11, 0 <lprofMergeValueProfData>
     c24:	ldr	x10, [x10]
     c28:	ldr	x19, [x24, #8]
     c2c:	ldr	x11, [x11]
     c30:	mov	x20, x0
     c34:	orr	w8, w9, w8
     c38:	str	x11, [x10]
     c3c:	cbz	w8, c50 <writeFile+0x5c>
     c40:	cbz	x19, c74 <writeFile+0x80>
     c44:	mov	x0, x19
     c48:	bl	0 <lprofLockFileHandle>
     c4c:	b	c8c <writeFile+0x98>
     c50:	cbnz	x19, c6c <writeFile+0x78>
     c54:	adrp	x1, 0 <__llvm_profile_set_file_object>
     c58:	add	x1, x1, #0x0
     c5c:	mov	x0, x20
     c60:	bl	0 <fopen>
     c64:	cbz	x0, e1c <writeFile+0x228>
     c68:	mov	x19, x0
     c6c:	mov	w21, wzr
     c70:	b	d30 <writeFile+0x13c>
     c74:	mov	x0, x20
     c78:	bl	1790 <createProfileDir>
     c7c:	mov	x0, x20
     c80:	bl	0 <lprofOpenFileEx>
     c84:	mov	x19, x0
     c88:	cbz	x0, e1c <writeFile+0x228>
     c8c:	add	x1, sp, #0x8
     c90:	mov	x0, x19
     c94:	bl	17e8 <getProfileFileSizeForMerging>
     c98:	cmn	w0, #0x1
     c9c:	b.eq	de4 <writeFile+0x1f0>  // b.none
     ca0:	ldr	x21, [sp, #8]
     ca4:	cbz	x21, d00 <writeFile+0x10c>
     ca8:	sub	x2, x29, #0x8
     cac:	mov	x0, x19
     cb0:	mov	x1, x21
     cb4:	bl	18dc <mmapProfileForMerging>
     cb8:	cmn	w0, #0x1
     cbc:	b.eq	de4 <writeFile+0x1f0>  // b.none
     cc0:	ldur	x22, [x29, #-8]
     cc4:	mov	x1, x21
     cc8:	mov	x0, x22
     ccc:	bl	0 <__llvm_profile_merge_from_buffer>
     cd0:	mov	x0, x19
     cd4:	bl	0 <fileno>
     cd8:	mov	w23, w0
     cdc:	bl	0 <__llvm_profile_get_size_for_buffer>
     ce0:	mov	x1, x0
     ce4:	mov	w0, w23
     ce8:	bl	0 <ftruncate>
     cec:	mov	x0, x22
     cf0:	mov	x1, x21
     cf4:	bl	0 <munmap>
     cf8:	mov	w21, #0x1                   	// #1
     cfc:	b	d18 <writeFile+0x124>
     d00:	mov	x0, x19
     d04:	bl	0 <fileno>
     d08:	mov	x1, xzr
     d0c:	bl	0 <ftruncate>
     d10:	cbnz	w0, de4 <writeFile+0x1f0>
     d14:	mov	w21, wzr
     d18:	mov	x0, x19
     d1c:	mov	x1, xzr
     d20:	mov	w2, wzr
     d24:	bl	0 <fseek>
     d28:	cmn	w0, #0x1
     d2c:	b.eq	de4 <writeFile+0x1f0>  // b.none
     d30:	adrp	x9, 0 <free>
     d34:	ldr	x9, [x9]
     d38:	adrp	x0, 0 <__llvm_profile_set_file_object>
     d3c:	adrp	x8, 0 <FreeHook>
     d40:	add	x0, x0, #0x0
     d44:	str	x9, [x8]
     d48:	bl	0 <getenv>
     d4c:	cbz	x0, d80 <writeFile+0x18c>
     d50:	ldrb	w8, [x0]
     d54:	cbz	w8, d80 <writeFile+0x18c>
     d58:	mov	w2, #0xa                   	// #10
     d5c:	mov	x1, xzr
     d60:	bl	0 <strtol>
     d64:	adrp	x8, 0 <VPBufferSize>
     d68:	str	w0, [x8]
     d6c:	and	x0, x0, #0xffffffff
     d70:	mov	w1, #0x1                   	// #1
     d74:	bl	0 <calloc>
     d78:	adrp	x8, 0 <DynamicBufferIOBuffer>
     d7c:	str	x0, [x8]
     d80:	adrp	x8, 0 <__llvm_profile_set_file_object>
     d84:	add	x8, x8, #0x0
     d88:	stp	x8, x19, [sp, #8]
     d8c:	bl	0 <lprofGetVPDataReader>
     d90:	mov	x1, x0
     d94:	add	x0, sp, #0x8
     d98:	mov	w2, w21
     d9c:	bl	0 <lprofWriteData>
     da0:	adrp	x8, 0 <__llvm_profile_set_file_object>
     da4:	ldr	x8, [x8]
     da8:	mov	w20, w0
     dac:	cmp	x19, x8
     db0:	b.eq	dc0 <writeFile+0x1cc>  // b.none
     db4:	mov	x0, x19
     db8:	bl	0 <fclose>
     dbc:	b	e20 <writeFile+0x22c>
     dc0:	mov	x0, x19
     dc4:	bl	0 <fflush>
     dc8:	ldr	w8, [x24, #192]
     dcc:	ldr	w9, [x24]
     dd0:	orr	w8, w9, w8
     dd4:	cbz	w8, e20 <writeFile+0x22c>
     dd8:	mov	x0, x19
     ddc:	bl	0 <lprofUnlockFileHandle>
     de0:	b	e20 <writeFile+0x22c>
     de4:	adrp	x8, 0 <stderr>
     de8:	ldr	x8, [x8]
     dec:	ldr	x21, [x8]
     df0:	bl	0 <__errno_location>
     df4:	ldr	w0, [x0]
     df8:	bl	0 <strerror>
     dfc:	adrp	x1, 0 <__llvm_profile_set_file_object>
     e00:	mov	x3, x0
     e04:	add	x1, x1, #0x0
     e08:	mov	x0, x21
     e0c:	mov	x2, x20
     e10:	bl	0 <fprintf>
     e14:	mov	x0, x19
     e18:	bl	0 <fclose>
     e1c:	mov	w20, #0xffffffff            	// #-1
     e20:	mov	w0, w20
     e24:	ldp	x20, x19, [sp, #80]
     e28:	ldp	x22, x21, [sp, #64]
     e2c:	ldp	x24, x23, [sp, #48]
     e30:	ldp	x29, x30, [sp, #32]
     e34:	add	sp, sp, #0x60
     e38:	ret

0000000000000e3c <__llvm_profile_dump>:
     e3c:	stp	x29, x30, [sp, #-32]!
     e40:	str	x19, [sp, #16]
     e44:	mov	x29, sp
     e48:	adrp	x8, 0 <__llvm_profile_set_file_object>
     e4c:	add	x8, x8, #0x0
     e50:	ldr	w9, [x8, #192]
     e54:	ldr	w8, [x8]
     e58:	orr	w8, w8, w9
     e5c:	cbz	w8, e7c <__llvm_profile_dump+0x40>
     e60:	bl	a24 <__llvm_profile_write_file>
     e64:	mov	w19, w0
     e68:	bl	0 <lprofSetProfileDumped>
     e6c:	mov	w0, w19
     e70:	ldr	x19, [sp, #16]
     e74:	ldp	x29, x30, [sp], #32
     e78:	ret
     e7c:	adrp	x8, 0 <stderr>
     e80:	ldr	x8, [x8]
     e84:	adrp	x1, 0 <__llvm_profile_set_file_object>
     e88:	adrp	x2, 0 <__llvm_profile_set_file_object>
     e8c:	add	x1, x1, #0x0
     e90:	ldr	x0, [x8]
     e94:	add	x2, x2, #0x0
     e98:	bl	0 <fprintf>
     e9c:	b	e60 <__llvm_profile_dump+0x24>

0000000000000ea0 <__llvm_orderfile_write_file>:
     ea0:	stp	x29, x30, [sp, #-64]!
     ea4:	str	x23, [sp, #16]
     ea8:	stp	x22, x21, [sp, #32]
     eac:	stp	x20, x19, [sp, #48]
     eb0:	mov	x29, sp
     eb4:	adrp	x8, 0 <__llvm_profile_set_file_object>
     eb8:	ldr	x0, [x8]
     ebc:	cbz	x0, f24 <__llvm_orderfile_write_file+0x84>
     ec0:	ldrb	w8, [x0]
     ec4:	cbz	w8, f24 <__llvm_orderfile_write_file+0x84>
     ec8:	adrp	x8, 0 <__llvm_profile_set_file_object>
     ecc:	add	x8, x8, #0x0
     ed0:	ldp	w23, w21, [x8]
     ed4:	ldr	w22, [x8, #8]
     ed8:	orr	w8, w21, w23
     edc:	orr	w20, w8, w22
     ee0:	bl	0 <strlen>
     ee4:	mov	x19, x0
     ee8:	cbz	w20, f28 <__llvm_orderfile_write_file+0x88>
     eec:	adrp	x20, 0 <__llvm_profile_set_file_object>
     ef0:	add	x20, x20, #0x0
     ef4:	mov	x0, x20
     ef8:	bl	0 <strlen>
     efc:	sub	x8, x0, #0x2
     f00:	add	x0, x20, #0x10
     f04:	madd	x19, x8, x23, x19
     f08:	bl	0 <strlen>
     f0c:	sub	x8, x0, #0x2
     f10:	madd	x8, x8, x21, x19
     f14:	add	x9, x8, #0x18
     f18:	cmp	w22, #0x0
     f1c:	csel	x19, x8, x9, eq  // eq = none
     f20:	b	f28 <__llvm_orderfile_write_file+0x88>
     f24:	mov	x19, xzr
     f28:	add	w8, w19, #0x7
     f2c:	sxtw	x8, w8
     f30:	add	x8, x8, #0xf
     f34:	and	x8, x8, #0xfffffffffffffff0
     f38:	mov	x9, sp
     f3c:	sub	x20, x9, x8
     f40:	mov	sp, x20
     f44:	mov	w1, #0x1                   	// #1
     f48:	mov	x0, x20
     f4c:	bl	230 <getCurFilename>
     f50:	cbz	x0, 1058 <__llvm_orderfile_write_file+0x1b8>
     f54:	mov	x19, x0
     f58:	bl	0 <strlen>
     f5c:	mov	w9, #0x6f2e                	// #28462
     f60:	add	x8, x20, w0, sxtw
     f64:	movk	w9, #0x6472, lsl #16
     f68:	mov	w10, #0x7265                	// #29285
     f6c:	mov	x11, #0x600000000           	// #25769803776
     f70:	str	w9, [x8]
     f74:	strh	w10, [x8, #4]
     f78:	add	x8, x11, x0, lsl #32
     f7c:	asr	x8, x8, #32
     f80:	strb	wzr, [x20, x8]
     f84:	bl	0 <__llvm_profile_get_version>
     f88:	and	x8, x0, #0xffffffffffffff
     f8c:	cmp	x8, #0x5
     f90:	b.ne	1080 <__llvm_orderfile_write_file+0x1e0>  // b.any
     f94:	bl	0 <lprofSuspendSigKill>
     f98:	adrp	x1, 0 <__llvm_profile_set_file_object>
     f9c:	mov	w20, w0
     fa0:	add	x1, x1, #0x0
     fa4:	mov	x0, x19
     fa8:	bl	0 <fopen>
     fac:	cbz	x0, 10b0 <__llvm_orderfile_write_file+0x210>
     fb0:	adrp	x9, 0 <free>
     fb4:	ldr	x9, [x9]
     fb8:	mov	x21, x0
     fbc:	adrp	x0, 0 <__llvm_profile_set_file_object>
     fc0:	adrp	x8, 0 <FreeHook>
     fc4:	add	x0, x0, #0x0
     fc8:	str	x9, [x8]
     fcc:	bl	0 <getenv>
     fd0:	cbz	x0, 1004 <__llvm_orderfile_write_file+0x164>
     fd4:	ldrb	w8, [x0]
     fd8:	cbz	w8, 1004 <__llvm_orderfile_write_file+0x164>
     fdc:	mov	w2, #0xa                   	// #10
     fe0:	mov	x1, xzr
     fe4:	bl	0 <strtol>
     fe8:	adrp	x8, 0 <VPBufferSize>
     fec:	str	w0, [x8]
     ff0:	and	x0, x0, #0xffffffff
     ff4:	mov	w1, #0x1                   	// #1
     ff8:	bl	0 <calloc>
     ffc:	adrp	x8, 0 <DynamicBufferIOBuffer>
    1000:	str	x0, [x8]
    1004:	bl	0 <__llvm_profile_begin_orderfile>
    1008:	mov	w1, #0x4                   	// #4
    100c:	mov	w2, #0x20000               	// #131072
    1010:	mov	x3, x21
    1014:	bl	0 <fwrite_unlocked>
    1018:	mov	x22, x0
    101c:	mov	x0, x21
    1020:	bl	0 <fclose>
    1024:	cmp	x22, #0x20, lsl #12
    1028:	b.ne	10d4 <__llvm_orderfile_write_file+0x234>  // b.any
    102c:	mov	w21, wzr
    1030:	cmp	w20, #0x1
    1034:	b.ne	103c <__llvm_orderfile_write_file+0x19c>  // b.any
    1038:	bl	0 <lprofRestoreSigKill>
    103c:	mov	w0, w21
    1040:	mov	sp, x29
    1044:	ldp	x20, x19, [sp, #48]
    1048:	ldp	x22, x21, [sp, #32]
    104c:	ldr	x23, [sp, #16]
    1050:	ldp	x29, x30, [sp], #64
    1054:	ret
    1058:	adrp	x8, 0 <stderr>
    105c:	ldr	x8, [x8]
    1060:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1064:	adrp	x2, 0 <__llvm_profile_set_file_object>
    1068:	add	x1, x1, #0x0
    106c:	ldr	x0, [x8]
    1070:	add	x2, x2, #0x0
    1074:	bl	0 <fprintf>
    1078:	mov	w21, #0xffffffff            	// #-1
    107c:	b	103c <__llvm_orderfile_write_file+0x19c>
    1080:	adrp	x8, 0 <stderr>
    1084:	ldr	x8, [x8]
    1088:	ldr	x19, [x8]
    108c:	bl	0 <__llvm_profile_get_version>
    1090:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1094:	mov	x3, x0
    1098:	add	x1, x1, #0x0
    109c:	mov	w2, #0x5                   	// #5
    10a0:	mov	x0, x19
    10a4:	bl	0 <fprintf>
    10a8:	mov	w21, #0xffffffff            	// #-1
    10ac:	b	103c <__llvm_orderfile_write_file+0x19c>
    10b0:	adrp	x8, 0 <stderr>
    10b4:	ldr	x8, [x8]
    10b8:	adrp	x1, 0 <__llvm_profile_set_file_object>
    10bc:	add	x1, x1, #0x0
    10c0:	mov	x2, x19
    10c4:	ldr	x0, [x8]
    10c8:	bl	0 <fprintf>
    10cc:	mov	w21, #0xffffffff            	// #-1
    10d0:	b	10d8 <__llvm_orderfile_write_file+0x238>
    10d4:	mov	w21, #0x1                   	// #1
    10d8:	adrp	x8, 0 <stderr>
    10dc:	ldr	x8, [x8]
    10e0:	ldr	x22, [x8]
    10e4:	bl	0 <__errno_location>
    10e8:	ldr	w0, [x0]
    10ec:	bl	0 <strerror>
    10f0:	adrp	x1, 0 <__llvm_profile_set_file_object>
    10f4:	mov	x3, x0
    10f8:	add	x1, x1, #0x0
    10fc:	mov	x0, x22
    1100:	mov	x2, x19
    1104:	bl	0 <fprintf>
    1108:	cmp	w20, #0x1
    110c:	b.eq	1038 <__llvm_orderfile_write_file+0x198>  // b.none
    1110:	b	103c <__llvm_orderfile_write_file+0x19c>

0000000000001114 <__llvm_orderfile_dump>:
    1114:	b	ea0 <__llvm_orderfile_write_file>

0000000000001118 <__llvm_profile_register_write_file_atexit>:
    1118:	stp	x29, x30, [sp, #-32]!
    111c:	str	x19, [sp, #16]
    1120:	mov	x29, sp
    1124:	adrp	x19, 0 <__llvm_profile_set_file_object>
    1128:	ldrb	w8, [x19]
    112c:	tbz	w8, #0, 1140 <__llvm_profile_register_write_file_atexit+0x28>
    1130:	ldr	x19, [sp, #16]
    1134:	mov	w0, wzr
    1138:	ldp	x29, x30, [sp], #32
    113c:	ret
    1140:	bl	0 <lprofSetupValueProfiler>
    1144:	mov	w8, #0x1                   	// #1
    1148:	strb	w8, [x19]
    114c:	ldr	x19, [sp, #16]
    1150:	adrp	x0, 0 <__llvm_profile_set_file_object>
    1154:	add	x0, x0, #0x0
    1158:	ldp	x29, x30, [sp], #32
    115c:	b	0 <atexit>

0000000000001160 <writeFileWithoutReturn>:
    1160:	b	a24 <__llvm_profile_write_file>

0000000000001164 <fileWriter>:
    1164:	sub	sp, sp, #0x60
    1168:	stp	x29, x30, [sp, #16]
    116c:	stp	x26, x25, [sp, #32]
    1170:	stp	x24, x23, [sp, #48]
    1174:	stp	x22, x21, [sp, #64]
    1178:	stp	x20, x19, [sp, #80]
    117c:	add	x29, sp, #0x10
    1180:	ldr	x20, [x0, #8]
    1184:	str	xzr, [sp, #8]
    1188:	cbz	w2, 123c <fileWriter+0xd8>
    118c:	mov	x19, x1
    1190:	mov	x24, xzr
    1194:	mov	w25, w2
    1198:	mov	w26, #0x8                   	// #8
    119c:	b	11c8 <fileWriter+0x64>
    11a0:	add	x21, x19, x24, lsl #5
    11a4:	ldp	x1, x2, [x21, #8]
    11a8:	mov	x3, x20
    11ac:	bl	0 <fwrite>
    11b0:	ldr	x8, [x21, #16]
    11b4:	cmp	x0, x8
    11b8:	b.ne	1260 <fileWriter+0xfc>  // b.any
    11bc:	add	x24, x24, #0x1
    11c0:	cmp	x24, x25
    11c4:	b.eq	123c <fileWriter+0xd8>  // b.none
    11c8:	lsl	x8, x24, #5
    11cc:	ldr	x0, [x19, x8]
    11d0:	cbnz	x0, 11a0 <fileWriter+0x3c>
    11d4:	add	x8, x19, x24, lsl #5
    11d8:	ldr	w9, [x8, #24]
    11dc:	ldp	x10, x8, [x8, #8]
    11e0:	mul	x21, x8, x10
    11e4:	cbz	w9, 121c <fileWriter+0xb8>
    11e8:	cbz	x21, 11bc <fileWriter+0x58>
    11ec:	cmp	x21, #0x8
    11f0:	csel	x23, x21, x26, cc  // cc = lo, ul, last
    11f4:	add	x0, sp, #0x8
    11f8:	mov	w1, #0x1                   	// #1
    11fc:	mov	x2, x23
    1200:	mov	x3, x20
    1204:	mov	w22, #0x1                   	// #1
    1208:	bl	0 <fwrite>
    120c:	cmp	x0, x23
    1210:	sub	x21, x21, x23
    1214:	b.eq	11e8 <fileWriter+0x84>  // b.none
    1218:	b	1240 <fileWriter+0xdc>
    121c:	mov	w2, #0x1                   	// #1
    1220:	mov	x0, x20
    1224:	mov	x1, x21
    1228:	mov	w22, #0x1                   	// #1
    122c:	bl	0 <fseek>
    1230:	cmn	w0, #0x1
    1234:	b.ne	11bc <fileWriter+0x58>  // b.any
    1238:	b	1240 <fileWriter+0xdc>
    123c:	mov	w22, wzr
    1240:	mov	w0, w22
    1244:	ldp	x20, x19, [sp, #80]
    1248:	ldp	x22, x21, [sp, #64]
    124c:	ldp	x24, x23, [sp, #48]
    1250:	ldp	x26, x25, [sp, #32]
    1254:	ldp	x29, x30, [sp, #16]
    1258:	add	sp, sp, #0x60
    125c:	ret
    1260:	mov	w22, #0x1                   	// #1
    1264:	b	1240 <fileWriter+0xdc>

0000000000001268 <truncateCurrentFile>:
    1268:	stp	x29, x30, [sp, #-64]!
    126c:	str	x23, [sp, #16]
    1270:	stp	x22, x21, [sp, #32]
    1274:	stp	x20, x19, [sp, #48]
    1278:	mov	x29, sp
    127c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1280:	ldr	x0, [x8]
    1284:	cbz	x0, 12ec <truncateCurrentFile+0x84>
    1288:	ldrb	w8, [x0]
    128c:	cbz	w8, 12ec <truncateCurrentFile+0x84>
    1290:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1294:	add	x8, x8, #0x0
    1298:	ldp	w23, w21, [x8]
    129c:	ldr	w22, [x8, #8]
    12a0:	orr	w8, w21, w23
    12a4:	orr	w20, w8, w22
    12a8:	bl	0 <strlen>
    12ac:	mov	x19, x0
    12b0:	cbz	w20, 12f0 <truncateCurrentFile+0x88>
    12b4:	adrp	x20, 0 <__llvm_profile_set_file_object>
    12b8:	add	x20, x20, #0x0
    12bc:	mov	x0, x20
    12c0:	bl	0 <strlen>
    12c4:	sub	x8, x0, #0x2
    12c8:	add	x0, x20, #0x10
    12cc:	madd	x19, x8, x23, x19
    12d0:	bl	0 <strlen>
    12d4:	sub	x8, x0, #0x2
    12d8:	madd	x8, x8, x21, x19
    12dc:	add	x9, x8, #0x18
    12e0:	cmp	w22, #0x0
    12e4:	csel	x19, x8, x9, eq  // eq = none
    12e8:	b	12f0 <truncateCurrentFile+0x88>
    12ec:	mov	x19, xzr
    12f0:	add	w8, w19, #0x1
    12f4:	sxtw	x8, w8
    12f8:	add	x8, x8, #0xf
    12fc:	and	x8, x8, #0xfffffffffffffff0
    1300:	mov	x9, sp
    1304:	sub	x0, x9, x8
    1308:	mov	sp, x0
    130c:	mov	w1, wzr
    1310:	bl	230 <getCurFilename>
    1314:	cbz	x0, 136c <truncateCurrentFile+0x104>
    1318:	mov	x19, x0
    131c:	adrp	x0, 0 <__llvm_profile_set_file_object>
    1320:	add	x0, x0, #0x0
    1324:	bl	0 <getenv>
    1328:	cbnz	x0, 136c <truncateCurrentFile+0x104>
    132c:	adrp	x0, 0 <__llvm_profile_set_file_object>
    1330:	add	x0, x0, #0x0
    1334:	mov	w2, #0x1                   	// #1
    1338:	mov	x1, x0
    133c:	bl	0 <setenv>
    1340:	mov	x0, x19
    1344:	bl	1790 <createProfileDir>
    1348:	adrp	x8, 0 <__llvm_profile_set_file_object>
    134c:	ldr	w8, [x8]
    1350:	cbnz	w8, 136c <truncateCurrentFile+0x104>
    1354:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1358:	add	x1, x1, #0x0
    135c:	mov	x0, x19
    1360:	bl	0 <fopen>
    1364:	cbz	x0, 136c <truncateCurrentFile+0x104>
    1368:	bl	0 <fclose>
    136c:	mov	sp, x29
    1370:	ldp	x20, x19, [sp, #48]
    1374:	ldp	x22, x21, [sp, #32]
    1378:	ldr	x23, [sp, #16]
    137c:	ldp	x29, x30, [sp], #64
    1380:	ret

0000000000001384 <initializeProfileForContinuousMode>:
    1384:	stp	x29, x30, [sp, #-96]!
    1388:	stp	x28, x27, [sp, #16]
    138c:	stp	x26, x25, [sp, #32]
    1390:	stp	x24, x23, [sp, #48]
    1394:	stp	x22, x21, [sp, #64]
    1398:	stp	x20, x19, [sp, #80]
    139c:	mov	x29, sp
    13a0:	sub	sp, sp, #0x20
    13a4:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    13a8:	cbz	w0, 1678 <initializeProfileForContinuousMode+0x2f4>
    13ac:	bl	0 <__llvm_profile_begin_data>
    13b0:	mov	x24, x0
    13b4:	bl	0 <__llvm_profile_end_data>
    13b8:	mov	x20, x0
    13bc:	bl	0 <__llvm_profile_begin_counters>
    13c0:	mov	x19, x0
    13c4:	bl	0 <__llvm_profile_end_counters>
    13c8:	mov	x21, x0
    13cc:	bl	0 <__llvm_profile_begin_names>
    13d0:	mov	x22, x0
    13d4:	bl	0 <__llvm_profile_end_names>
    13d8:	mov	x23, x0
    13dc:	mov	x0, x24
    13e0:	mov	x1, x20
    13e4:	bl	0 <__llvm_profile_get_data_size>
    13e8:	mov	x20, x0
    13ec:	bl	0 <getpagesize>
    13f0:	mov	w25, w0
    13f4:	sdiv	x8, x19, x25
    13f8:	msub	x8, x8, x25, x19
    13fc:	cbnz	x8, 158c <initializeProfileForContinuousMode+0x208>
    1400:	sdiv	x8, x24, x25
    1404:	msub	x8, x8, x25, x24
    1408:	cbnz	x8, 15a4 <initializeProfileForContinuousMode+0x220>
    140c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1410:	ldr	x0, [x8]
    1414:	cbz	x0, 149c <initializeProfileForContinuousMode+0x118>
    1418:	ldrb	w8, [x0]
    141c:	cbz	w8, 149c <initializeProfileForContinuousMode+0x118>
    1420:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1424:	stur	x20, [x29, #-32]
    1428:	add	x8, x8, #0x0
    142c:	mov	x20, x23
    1430:	mov	x23, x22
    1434:	mov	x22, x21
    1438:	ldp	w21, w27, [x8]
    143c:	ldr	w28, [x8, #8]
    1440:	orr	w8, w27, w21
    1444:	orr	w26, w8, w28
    1448:	bl	0 <strlen>
    144c:	mov	x24, x0
    1450:	cbz	w26, 1488 <initializeProfileForContinuousMode+0x104>
    1454:	adrp	x26, 0 <__llvm_profile_set_file_object>
    1458:	add	x26, x26, #0x0
    145c:	mov	x0, x26
    1460:	bl	0 <strlen>
    1464:	sub	x8, x0, #0x2
    1468:	add	x0, x26, #0x10
    146c:	madd	x21, x8, x21, x24
    1470:	bl	0 <strlen>
    1474:	sub	x8, x0, #0x2
    1478:	madd	x8, x8, x27, x21
    147c:	add	x9, x8, #0x18
    1480:	cmp	w28, #0x0
    1484:	csel	x24, x8, x9, eq  // eq = none
    1488:	mov	x21, x22
    148c:	mov	x22, x23
    1490:	mov	x23, x20
    1494:	ldur	x20, [x29, #-32]
    1498:	b	14a0 <initializeProfileForContinuousMode+0x11c>
    149c:	mov	x24, xzr
    14a0:	add	w8, w24, #0x1
    14a4:	sxtw	x8, w8
    14a8:	add	x8, x8, #0xf
    14ac:	and	x8, x8, #0xfffffffffffffff0
    14b0:	mov	x9, sp
    14b4:	sub	x0, x9, x8
    14b8:	mov	sp, x0
    14bc:	mov	w1, wzr
    14c0:	bl	230 <getCurFilename>
    14c4:	cbz	x0, 1678 <initializeProfileForContinuousMode+0x2f4>
    14c8:	adrp	x8, 0 <__llvm_profile_set_file_object>
    14cc:	add	x8, x8, #0x0
    14d0:	ldr	w9, [x8, #192]
    14d4:	ldr	w8, [x8]
    14d8:	mov	x26, x0
    14dc:	orr	w8, w8, w9
    14e0:	cbz	w8, 153c <initializeProfileForContinuousMode+0x1b8>
    14e4:	mov	x0, x26
    14e8:	bl	0 <lprofOpenFileEx>
    14ec:	cbz	x0, 1678 <initializeProfileForContinuousMode+0x2f4>
    14f0:	sub	x1, x29, #0x8
    14f4:	mov	x24, x0
    14f8:	bl	17e8 <getProfileFileSizeForMerging>
    14fc:	cmn	w0, #0x1
    1500:	b.eq	1670 <initializeProfileForContinuousMode+0x2ec>  // b.none
    1504:	ldur	x25, [x29, #-8]
    1508:	cbz	x25, 15e0 <initializeProfileForContinuousMode+0x25c>
    150c:	sub	x2, x29, #0x10
    1510:	mov	x0, x24
    1514:	mov	x1, x25
    1518:	bl	18dc <mmapProfileForMerging>
    151c:	cmn	w0, #0x1
    1520:	b.eq	1670 <initializeProfileForContinuousMode+0x2ec>  // b.none
    1524:	ldur	x0, [x29, #-16]
    1528:	mov	x1, x25
    152c:	bl	0 <munmap>
    1530:	cmn	w0, #0x1
    1534:	b.ne	15f8 <initializeProfileForContinuousMode+0x274>  // b.any
    1538:	b	1670 <initializeProfileForContinuousMode+0x2ec>
    153c:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1540:	add	x1, x1, #0x0
    1544:	mov	x0, x26
    1548:	bl	0 <fopen>
    154c:	cbz	x0, 1678 <initializeProfileForContinuousMode+0x2f4>
    1550:	mov	x24, x0
    1554:	bl	0 <ftello>
    1558:	sdiv	x8, x0, x25
    155c:	mov	x27, x0
    1560:	msub	x8, x8, x25, x0
    1564:	cbnz	x8, 16fc <initializeProfileForContinuousMode+0x378>
    1568:	adrp	x28, 0 <__llvm_profile_set_file_object>
    156c:	mov	x0, x26
    1570:	str	x24, [x28]
    1574:	bl	bf4 <writeFile>
    1578:	cbnz	w0, 1720 <initializeProfileForContinuousMode+0x39c>
    157c:	mov	w25, wzr
    1580:	str	xzr, [x28]
    1584:	add	x26, x27, #0x50
    1588:	b	1600 <initializeProfileForContinuousMode+0x27c>
    158c:	adrp	x8, 0 <stderr>
    1590:	ldr	x8, [x8]
    1594:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1598:	add	x1, x1, #0x0
    159c:	mov	x2, x19
    15a0:	b	15b8 <initializeProfileForContinuousMode+0x234>
    15a4:	adrp	x8, 0 <stderr>
    15a8:	ldr	x8, [x8]
    15ac:	adrp	x1, 0 <__llvm_profile_set_file_object>
    15b0:	add	x1, x1, #0x0
    15b4:	mov	x2, x24
    15b8:	ldr	x0, [x8]
    15bc:	mov	w3, w25
    15c0:	mov	sp, x29
    15c4:	ldp	x20, x19, [sp, #80]
    15c8:	ldp	x22, x21, [sp, #64]
    15cc:	ldp	x24, x23, [sp, #48]
    15d0:	ldp	x26, x25, [sp, #32]
    15d4:	ldp	x28, x27, [sp, #16]
    15d8:	ldp	x29, x30, [sp], #96
    15dc:	b	0 <fprintf>
    15e0:	adrp	x25, 0 <__llvm_profile_set_file_object>
    15e4:	mov	x0, x26
    15e8:	str	x24, [x25]
    15ec:	bl	bf4 <writeFile>
    15f0:	cbnz	w0, 1758 <initializeProfileForContinuousMode+0x3d4>
    15f4:	str	xzr, [x25]
    15f8:	mov	w25, #0x1                   	// #1
    15fc:	mov	w26, #0x50                  	// #80
    1600:	sub	x27, x21, x19
    1604:	mov	x0, x24
    1608:	sub	x22, x23, x22
    160c:	asr	x23, x27, #3
    1610:	bl	0 <fileno>
    1614:	mov	w21, w0
    1618:	sub	x3, x29, #0x8
    161c:	sub	x4, x29, #0x10
    1620:	sub	x5, x29, #0x18
    1624:	mov	x0, x20
    1628:	mov	x1, x23
    162c:	mov	x2, x22
    1630:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
    1634:	ldp	x8, x9, [x29, #-16]
    1638:	mov	w10, #0x30                  	// #48
    163c:	madd	x10, x20, x10, x26
    1640:	mov	w2, #0x3                   	// #3
    1644:	add	x22, x8, x27
    1648:	add	x20, x10, x9
    164c:	mov	w3, #0x11                  	// #17
    1650:	mov	x0, x19
    1654:	mov	x1, x22
    1658:	mov	w4, w21
    165c:	mov	x5, x20
    1660:	bl	0 <mmap>
    1664:	cmp	x19, x0
    1668:	b.ne	1698 <initializeProfileForContinuousMode+0x314>  // b.any
    166c:	cbz	w25, 16d8 <initializeProfileForContinuousMode+0x354>
    1670:	mov	x0, x24
    1674:	bl	0 <lprofUnlockFileHandle>
    1678:	mov	sp, x29
    167c:	ldp	x20, x19, [sp, #80]
    1680:	ldp	x22, x21, [sp, #64]
    1684:	ldp	x24, x23, [sp, #48]
    1688:	ldp	x26, x25, [sp, #32]
    168c:	ldp	x28, x27, [sp, #16]
    1690:	ldp	x29, x30, [sp], #96
    1694:	ret
    1698:	adrp	x8, 0 <stderr>
    169c:	ldr	x8, [x8]
    16a0:	ldr	x23, [x8]
    16a4:	bl	0 <__errno_location>
    16a8:	ldr	w0, [x0]
    16ac:	bl	0 <strerror>
    16b0:	adrp	x1, 0 <__llvm_profile_set_file_object>
    16b4:	mov	x2, x0
    16b8:	add	x1, x1, #0x0
    16bc:	mov	x0, x23
    16c0:	mov	x3, x19
    16c4:	mov	x4, x22
    16c8:	mov	w5, w21
    16cc:	mov	x6, x20
    16d0:	bl	0 <fprintf>
    16d4:	cbnz	w25, 1670 <initializeProfileForContinuousMode+0x2ec>
    16d8:	adrp	x8, 0 <stderr>
    16dc:	ldr	x8, [x8]
    16e0:	adrp	x1, 0 <__llvm_profile_set_file_object>
    16e4:	adrp	x2, 0 <__llvm_profile_set_file_object>
    16e8:	add	x1, x1, #0x0
    16ec:	ldr	x0, [x8]
    16f0:	add	x2, x2, #0x0
    16f4:	bl	0 <fprintf>
    16f8:	b	1670 <initializeProfileForContinuousMode+0x2ec>
    16fc:	adrp	x8, 0 <stderr>
    1700:	ldr	x8, [x8]
    1704:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1708:	add	x1, x1, #0x0
    170c:	mov	x2, x27
    1710:	ldr	x0, [x8]
    1714:	mov	w3, w25
    1718:	bl	0 <fprintf>
    171c:	b	1678 <initializeProfileForContinuousMode+0x2f4>
    1720:	adrp	x8, 0 <stderr>
    1724:	ldr	x8, [x8]
    1728:	ldr	x19, [x8]
    172c:	bl	0 <__errno_location>
    1730:	ldr	w0, [x0]
    1734:	bl	0 <strerror>
    1738:	adrp	x1, 0 <__llvm_profile_set_file_object>
    173c:	mov	x3, x0
    1740:	add	x1, x1, #0x0
    1744:	mov	x0, x19
    1748:	mov	x2, x26
    174c:	bl	0 <fprintf>
    1750:	str	xzr, [x28]
    1754:	b	1678 <initializeProfileForContinuousMode+0x2f4>
    1758:	adrp	x8, 0 <stderr>
    175c:	ldr	x8, [x8]
    1760:	ldr	x19, [x8]
    1764:	bl	0 <__errno_location>
    1768:	ldr	w0, [x0]
    176c:	bl	0 <strerror>
    1770:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1774:	mov	x3, x0
    1778:	add	x1, x1, #0x0
    177c:	mov	x0, x19
    1780:	mov	x2, x26
    1784:	bl	0 <fprintf>
    1788:	str	xzr, [x25]
    178c:	b	1670 <initializeProfileForContinuousMode+0x2ec>

0000000000001790 <createProfileDir>:
    1790:	stp	x29, x30, [sp, #-32]!
    1794:	stp	x20, x19, [sp, #16]
    1798:	mov	x29, sp
    179c:	mov	x19, x0
    17a0:	bl	0 <strlen>
    17a4:	mov	x20, x0
    17a8:	mov	x0, x19
    17ac:	bl	0 <lprofFindFirstDirSeparator>
    17b0:	cbz	x0, 17d8 <createProfileDir+0x48>
    17b4:	add	x9, x20, #0x10
    17b8:	mov	x8, sp
    17bc:	and	x9, x9, #0xfffffffffffffff0
    17c0:	sub	x0, x8, x9
    17c4:	add	x2, x20, #0x1
    17c8:	mov	sp, x0
    17cc:	mov	x1, x19
    17d0:	bl	0 <strncpy>
    17d4:	bl	0 <__llvm_profile_recursive_mkdir>
    17d8:	mov	sp, x29
    17dc:	ldp	x20, x19, [sp, #16]
    17e0:	ldp	x29, x30, [sp], #32
    17e4:	ret

00000000000017e8 <getProfileFileSizeForMerging>:
    17e8:	stp	x29, x30, [sp, #-32]!
    17ec:	stp	x20, x19, [sp, #16]
    17f0:	mov	x29, sp
    17f4:	mov	x19, x1
    17f8:	mov	w2, #0x2                   	// #2
    17fc:	mov	x1, xzr
    1800:	mov	x20, x0
    1804:	bl	0 <fseek>
    1808:	cmn	w0, #0x1
    180c:	b.eq	1854 <getProfileFileSizeForMerging+0x6c>  // b.none
    1810:	mov	x0, x20
    1814:	bl	0 <ftell>
    1818:	str	x0, [x19]
    181c:	mov	x0, x20
    1820:	mov	x1, xzr
    1824:	mov	w2, wzr
    1828:	bl	0 <fseek>
    182c:	cmn	w0, #0x1
    1830:	b.eq	1880 <getProfileFileSizeForMerging+0x98>  // b.none
    1834:	ldr	x8, [x19]
    1838:	sub	x8, x8, #0x1
    183c:	cmp	x8, #0x4e
    1840:	b.ls	18ac <getProfileFileSizeForMerging+0xc4>  // b.plast
    1844:	mov	w0, wzr
    1848:	ldp	x20, x19, [sp, #16]
    184c:	ldp	x29, x30, [sp], #32
    1850:	ret
    1854:	adrp	x8, 0 <stderr>
    1858:	ldr	x8, [x8]
    185c:	ldr	x19, [x8]
    1860:	bl	0 <__errno_location>
    1864:	ldr	w0, [x0]
    1868:	bl	0 <strerror>
    186c:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1870:	mov	x2, x0
    1874:	add	x1, x1, #0x0
    1878:	mov	x0, x19
    187c:	b	18c8 <getProfileFileSizeForMerging+0xe0>
    1880:	adrp	x8, 0 <stderr>
    1884:	ldr	x8, [x8]
    1888:	ldr	x19, [x8]
    188c:	bl	0 <__errno_location>
    1890:	ldr	w0, [x0]
    1894:	bl	0 <strerror>
    1898:	adrp	x1, 0 <__llvm_profile_set_file_object>
    189c:	mov	x2, x0
    18a0:	add	x1, x1, #0x0
    18a4:	mov	x0, x19
    18a8:	b	18c8 <getProfileFileSizeForMerging+0xe0>
    18ac:	adrp	x8, 0 <stderr>
    18b0:	ldr	x8, [x8]
    18b4:	adrp	x1, 0 <__llvm_profile_set_file_object>
    18b8:	adrp	x2, 0 <__llvm_profile_set_file_object>
    18bc:	add	x1, x1, #0x0
    18c0:	ldr	x0, [x8]
    18c4:	add	x2, x2, #0x0
    18c8:	bl	0 <fprintf>
    18cc:	mov	w0, #0xffffffff            	// #-1
    18d0:	ldp	x20, x19, [sp, #16]
    18d4:	ldp	x29, x30, [sp], #32
    18d8:	ret

00000000000018dc <mmapProfileForMerging>:
    18dc:	stp	x29, x30, [sp, #-32]!
    18e0:	stp	x20, x19, [sp, #16]
    18e4:	mov	x29, sp
    18e8:	mov	x20, x2
    18ec:	mov	x19, x1
    18f0:	bl	0 <fileno>
    18f4:	mov	w4, w0
    18f8:	mov	w2, #0x1                   	// #1
    18fc:	mov	w3, #0x1                   	// #1
    1900:	mov	x0, xzr
    1904:	mov	x1, x19
    1908:	mov	x5, xzr
    190c:	bl	0 <mmap>
    1910:	cmn	x0, #0x1
    1914:	str	x0, [x20]
    1918:	b.eq	1934 <mmapProfileForMerging+0x58>  // b.none
    191c:	mov	x1, x19
    1920:	bl	0 <__llvm_profile_check_compatibility>
    1924:	cbnz	w0, 1960 <mmapProfileForMerging+0x84>
    1928:	ldp	x20, x19, [sp, #16]
    192c:	ldp	x29, x30, [sp], #32
    1930:	ret
    1934:	adrp	x8, 0 <stderr>
    1938:	ldr	x8, [x8]
    193c:	ldr	x19, [x8]
    1940:	bl	0 <__errno_location>
    1944:	ldr	w0, [x0]
    1948:	bl	0 <strerror>
    194c:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1950:	mov	x2, x0
    1954:	add	x1, x1, #0x0
    1958:	mov	x0, x19
    195c:	b	1988 <mmapProfileForMerging+0xac>
    1960:	ldr	x0, [x20]
    1964:	mov	x1, x19
    1968:	bl	0 <munmap>
    196c:	adrp	x8, 0 <stderr>
    1970:	ldr	x8, [x8]
    1974:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1978:	adrp	x2, 0 <__llvm_profile_set_file_object>
    197c:	add	x1, x1, #0x0
    1980:	ldr	x0, [x8]
    1984:	add	x2, x2, #0x0
    1988:	bl	0 <fprintf>
    198c:	mov	w0, #0xffffffff            	// #-1
    1990:	ldp	x20, x19, [sp, #16]
    1994:	ldp	x29, x30, [sp], #32
    1998:	ret

InstrProfilingMerge.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofGetLoadModuleSignature>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	bl	0 <__llvm_profile_end_counters>
  14:	mov	x19, x0
  18:	bl	0 <__llvm_profile_begin_counters>
  1c:	sub	x21, x19, x0
  20:	bl	0 <__llvm_profile_begin_data>
  24:	mov	x19, x0
  28:	bl	0 <__llvm_profile_end_data>
  2c:	mov	x1, x0
  30:	mov	x0, x19
  34:	bl	0 <__llvm_profile_get_data_size>
  38:	mov	x19, x0
  3c:	bl	0 <__llvm_profile_end_names>
  40:	mov	x20, x0
  44:	bl	0 <__llvm_profile_begin_names>
  48:	sub	w22, w20, w0
  4c:	bl	0 <__llvm_profile_end_vnodes>
  50:	mov	x20, x0
  54:	bl	0 <__llvm_profile_begin_vnodes>
  58:	sub	x8, x20, x0
  5c:	lsr	x20, x8, #3
  60:	bl	0 <__llvm_profile_begin_data>
  64:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  68:	movk	x11, #0xac00
  6c:	lsl	x8, x22, #40
  70:	lsl	x9, x21, #27
  74:	lsl	x10, x19, #20
  78:	mul	x11, x20, x11
  7c:	cbz	x19, 88 <lprofGetLoadModuleSignature+0x88>
  80:	ldr	x12, [x0]
  84:	b	8c <lprofGetLoadModuleSignature+0x8c>
  88:	mov	x12, xzr
  8c:	add	x9, x10, x9
  90:	ldp	x20, x19, [sp, #32]
  94:	ldp	x22, x21, [sp, #16]
  98:	add	x8, x9, x8
  9c:	add	x8, x8, x11
  a0:	add	x0, x8, x12
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret

00000000000000ac <__llvm_profile_check_compatibility>:
  ac:	stp	x29, x30, [sp, #-64]!
  b0:	str	x23, [sp, #16]
  b4:	stp	x22, x21, [sp, #32]
  b8:	stp	x20, x19, [sp, #48]
  bc:	mov	x29, sp
  c0:	cmp	x1, #0x50
  c4:	b.cc	180 <__llvm_profile_check_compatibility+0xd4>  // b.lo, b.ul, b.last
  c8:	ldr	x22, [x0, #16]
  cc:	ldr	x21, [x0]
  d0:	mov	x20, x1
  d4:	mov	x19, x0
  d8:	bl	0 <__llvm_profile_get_magic>
  dc:	cmp	x21, x0
  e0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
  e4:	ldr	x21, [x19, #8]
  e8:	bl	0 <__llvm_profile_get_version>
  ec:	cmp	x21, x0
  f0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
  f4:	ldr	x23, [x19, #16]
  f8:	bl	0 <__llvm_profile_begin_data>
  fc:	mov	x21, x0
 100:	bl	0 <__llvm_profile_end_data>
 104:	mov	x1, x0
 108:	mov	x0, x21
 10c:	bl	0 <__llvm_profile_get_data_size>
 110:	cmp	x23, x0
 114:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 118:	ldr	x23, [x19, #32]
 11c:	bl	0 <__llvm_profile_end_counters>
 120:	mov	x21, x0
 124:	bl	0 <__llvm_profile_begin_counters>
 128:	sub	x8, x21, x0
 12c:	cmp	x23, x8, asr #3
 130:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 134:	ldr	x23, [x19, #48]
 138:	bl	0 <__llvm_profile_end_names>
 13c:	mov	x21, x0
 140:	bl	0 <__llvm_profile_begin_names>
 144:	sub	x8, x21, x0
 148:	cmp	x23, x8
 14c:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 150:	ldr	x8, [x19, #72]
 154:	cmp	x8, #0x1
 158:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 15c:	ldr	x8, [x19, #16]
 160:	ldr	x9, [x19, #48]
 164:	ldr	x10, [x19, #32]
 168:	mov	w11, #0x30                  	// #48
 16c:	madd	x8, x8, x11, x9
 170:	add	x8, x8, x10
 174:	add	x8, x8, #0x50
 178:	cmp	x8, x20
 17c:	b.ls	198 <__llvm_profile_check_compatibility+0xec>  // b.plast
 180:	mov	w0, #0x1                   	// #1
 184:	ldp	x20, x19, [sp, #48]
 188:	ldp	x22, x21, [sp, #32]
 18c:	ldr	x23, [sp, #16]
 190:	ldp	x29, x30, [sp], #64
 194:	ret
 198:	add	x19, x19, #0x50
 19c:	mov	w8, #0x30                  	// #48
 1a0:	madd	x20, x22, x8, x19
 1a4:	bl	0 <__llvm_profile_begin_data>
 1a8:	cmp	x20, x19
 1ac:	b.ls	1fc <__llvm_profile_check_compatibility+0x150>  // b.plast
 1b0:	mov	x8, x0
 1b4:	ldr	x9, [x19]
 1b8:	ldr	x10, [x8]
 1bc:	cmp	x9, x10
 1c0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1c4:	ldr	x9, [x19, #8]
 1c8:	ldr	x10, [x8, #8]
 1cc:	cmp	x9, x10
 1d0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1d4:	ldr	w9, [x19, #40]
 1d8:	ldr	w10, [x8, #40]
 1dc:	cmp	w9, w10
 1e0:	b.ne	180 <__llvm_profile_check_compatibility+0xd4>  // b.any
 1e4:	add	x19, x19, #0x30
 1e8:	mov	w0, wzr
 1ec:	cmp	x19, x20
 1f0:	add	x8, x8, #0x30
 1f4:	b.cc	1b4 <__llvm_profile_check_compatibility+0x108>  // b.lo, b.ul, b.last
 1f8:	b	184 <__llvm_profile_check_compatibility+0xd8>
 1fc:	mov	w0, wzr
 200:	b	184 <__llvm_profile_check_compatibility+0xd8>

0000000000000204 <__llvm_profile_merge_from_buffer>:
 204:	stp	x29, x30, [sp, #-80]!
 208:	stp	x26, x25, [sp, #16]
 20c:	stp	x24, x23, [sp, #32]
 210:	stp	x22, x21, [sp, #48]
 214:	stp	x20, x19, [sp, #64]
 218:	mov	x29, sp
 21c:	ldr	x21, [x0, #48]
 220:	ldr	x25, [x0, #16]
 224:	ldr	x26, [x0, #32]
 228:	mov	x19, x0
 22c:	add	x23, x0, #0x50
 230:	mov	w8, #0x30                  	// #48
 234:	mov	x0, x21
 238:	madd	x24, x25, x8, x23
 23c:	bl	0 <__llvm_profile_get_num_padding_bytes>
 240:	mov	w22, w0
 244:	bl	0 <__llvm_profile_begin_data>
 248:	cmp	x24, x23
 24c:	b.ls	384 <__llvm_profile_merge_from_buffer+0x180>  // b.plast
 250:	add	x8, x24, x26, lsl #3
 254:	mov	w9, #0x30                  	// #48
 258:	add	x8, x8, x21
 25c:	madd	x9, x25, x9, x19
 260:	mov	x20, x0
 264:	add	x21, x8, w22, uxtb
 268:	add	x22, x9, #0x50
 26c:	add	x25, x9, #0x60
 270:	adrp	x26, 8 <lprofGetLoadModuleSignature+0x8>
 274:	b	288 <__llvm_profile_merge_from_buffer+0x84>
 278:	add	x23, x23, #0x30
 27c:	cmp	x23, x24
 280:	add	x20, x20, #0x30
 284:	b.cs	384 <__llvm_profile_merge_from_buffer+0x180>  // b.hs, b.nlast
 288:	ldr	w8, [x23, #40]
 28c:	cbz	w8, 304 <__llvm_profile_merge_from_buffer+0x100>
 290:	ldr	x10, [x23, #16]
 294:	ldr	x11, [x19, #56]
 298:	ldr	x9, [x20, #16]
 29c:	cmp	w8, #0x4
 2a0:	sub	x12, x10, x11
 2a4:	lsr	x10, x12, #3
 2a8:	b.cc	2d4 <__llvm_profile_merge_from_buffer+0xd0>  // b.lo, b.ul, b.last
 2ac:	lsl	x11, x8, #3
 2b0:	and	x12, x12, #0xfffffffffffffff8
 2b4:	add	x13, x12, x11
 2b8:	add	x13, x22, x13
 2bc:	cmp	x13, x9
 2c0:	b.ls	344 <__llvm_profile_merge_from_buffer+0x140>  // b.plast
 2c4:	add	x11, x9, x11
 2c8:	add	x12, x22, x12
 2cc:	cmp	x12, x11
 2d0:	b.cs	344 <__llvm_profile_merge_from_buffer+0x140>  // b.hs, b.nlast
 2d4:	mov	x11, xzr
 2d8:	lsl	x12, x11, #3
 2dc:	add	x10, x12, x10, lsl #3
 2e0:	add	x9, x9, x12
 2e4:	add	x10, x22, x10
 2e8:	sub	x8, x8, x11
 2ec:	ldr	x11, [x10], #8
 2f0:	ldr	x12, [x9]
 2f4:	subs	x8, x8, #0x1
 2f8:	add	x11, x12, x11
 2fc:	str	x11, [x9], #8
 300:	b.ne	2ec <__llvm_profile_merge_from_buffer+0xe8>  // b.any
 304:	ldr	x8, [x26]
 308:	cbz	x8, 278 <__llvm_profile_merge_from_buffer+0x74>
 30c:	ldrh	w9, [x23, #44]
 310:	ldrh	w10, [x23, #46]
 314:	cmp	w9, #0x0
 318:	cset	w9, ne  // ne = any
 31c:	cmp	w10, #0x0
 320:	csetm	w10, ne  // ne = any
 324:	cmp	w9, w10
 328:	b.eq	278 <__llvm_profile_merge_from_buffer+0x74>  // b.none
 32c:	mov	x0, x21
 330:	mov	x1, x20
 334:	blr	x8
 338:	ldr	w8, [x21]
 33c:	add	x21, x21, x8
 340:	b	278 <__llvm_profile_merge_from_buffer+0x74>
 344:	and	x11, x8, #0xfffffffc
 348:	add	x12, x25, x10, lsl #3
 34c:	add	x13, x9, #0x10
 350:	mov	x14, x11
 354:	ldp	q0, q1, [x12, #-16]
 358:	ldp	q2, q3, [x13, #-16]
 35c:	subs	x14, x14, #0x4
 360:	add	x12, x12, #0x20
 364:	add	v0.2d, v2.2d, v0.2d
 368:	add	v1.2d, v3.2d, v1.2d
 36c:	stp	q0, q1, [x13, #-16]
 370:	add	x13, x13, #0x20
 374:	b.ne	354 <__llvm_profile_merge_from_buffer+0x150>  // b.any
 378:	cmp	x11, x8
 37c:	b.eq	304 <__llvm_profile_merge_from_buffer+0x100>  // b.none
 380:	b	2d8 <__llvm_profile_merge_from_buffer+0xd4>
 384:	ldp	x20, x19, [sp, #64]
 388:	ldp	x22, x21, [sp, #48]
 38c:	ldp	x24, x23, [sp, #32]
 390:	ldp	x26, x25, [sp, #16]
 394:	ldp	x29, x30, [sp], #80
 398:	ret

InstrProfilingMergeFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofMergeValueProfData>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x19, x1
  20:	mov	x20, x0
  24:	bl	0 <getFirstValueProfRecord>
  28:	ldr	w8, [x20, #4]
  2c:	cbz	w8, c8 <lprofMergeValueProfData+0xc8>
  30:	mov	x21, x0
  34:	mov	w24, wzr
  38:	mov	w22, wzr
  3c:	b	5c <lprofMergeValueProfData+0x5c>
  40:	mov	x0, x21
  44:	bl	0 <getValueProfRecordNext>
  48:	ldr	w8, [x20, #4]
  4c:	add	w24, w24, #0x1
  50:	mov	x21, x0
  54:	cmp	w24, w8
  58:	b.cs	c8 <lprofMergeValueProfData+0xc8>  // b.hs, b.nlast
  5c:	mov	x0, x21
  60:	bl	0 <getValueProfRecordValueData>
  64:	ldr	w8, [x21, #4]
  68:	cbz	w8, 40 <lprofMergeValueProfData+0x40>
  6c:	mov	x23, x0
  70:	mov	x25, xzr
  74:	mov	w26, wzr
  78:	b	8c <lprofMergeValueProfData+0x8c>
  7c:	add	x25, x25, #0x1
  80:	cmp	x25, w8, uxtw
  84:	add	w22, w22, #0x1
  88:	b.cs	40 <lprofMergeValueProfData+0x40>  // b.hs, b.nlast
  8c:	add	x9, x21, x25
  90:	ldrb	w27, [x9, #8]
  94:	cbz	w27, 7c <lprofMergeValueProfData+0x7c>
  98:	add	w28, w26, w27
  9c:	add	x8, x23, w26, uxtw #4
  a0:	ldp	x0, x3, [x8]
  a4:	mov	x1, x19
  a8:	mov	w2, w22
  ac:	bl	0 <__llvm_profile_instrument_target_value>
  b0:	subs	w27, w27, #0x1
  b4:	add	w26, w26, #0x1
  b8:	b.ne	9c <lprofMergeValueProfData+0x9c>  // b.any
  bc:	ldr	w8, [x21, #4]
  c0:	mov	w26, w28
  c4:	b	7c <lprofMergeValueProfData+0x7c>
  c8:	ldp	x20, x19, [sp, #80]
  cc:	ldp	x22, x21, [sp, #64]
  d0:	ldp	x24, x23, [sp, #48]
  d4:	ldp	x26, x25, [sp, #32]
  d8:	ldp	x28, x27, [sp, #16]
  dc:	ldp	x29, x30, [sp], #96
  e0:	ret

InstrProfilingNameVar.c.o:     file format elf64-littleaarch64


InstrProfilingWriter.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofBufferWriter>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	w2, 5c <lprofBufferWriter+0x5c>
  14:	mov	x19, x0
  18:	mov	w21, w2
  1c:	add	x22, x1, #0x8
  20:	b	3c <lprofBufferWriter+0x3c>
  24:	ldr	x8, [x19, #8]
  28:	subs	x21, x21, #0x1
  2c:	add	x22, x22, #0x20
  30:	add	x8, x8, x20
  34:	str	x8, [x19, #8]
  38:	b.eq	5c <lprofBufferWriter+0x5c>  // b.none
  3c:	ldp	x8, x9, [x22]
  40:	ldur	x1, [x22, #-8]
  44:	mul	x20, x9, x8
  48:	cbz	x1, 24 <lprofBufferWriter+0x24>
  4c:	ldr	x0, [x19, #8]
  50:	mov	x2, x20
  54:	bl	0 <memcpy>
  58:	b	24 <lprofBufferWriter+0x24>
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	mov	w0, wzr
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

0000000000000070 <lprofCreateBufferIO>:
  70:	adrp	x9, 8 <lprofBufferWriter+0x8>
  74:	ldr	x9, [x9]
  78:	adrp	x10, 10 <lprofBufferWriter+0x10>
  7c:	ldr	w10, [x10]
  80:	adrp	x11, 0 <lprofBufferWriter>
  84:	adrp	x8, 0 <lprofBufferWriter>
  88:	add	x11, x11, #0x0
  8c:	cmp	x9, #0x0
  90:	add	x8, x8, #0x0
  94:	csel	x9, x11, x9, eq  // eq = none
  98:	mov	w11, #0x2000                	// #8192
  9c:	str	x0, [x8]
  a0:	csel	w10, w11, w10, eq  // eq = none
  a4:	mov	x0, x8
  a8:	str	wzr, [x8, #8]
  ac:	str	x9, [x8, #16]
  b0:	stp	w10, wzr, [x8, #24]
  b4:	ret

00000000000000b8 <lprofDeleteBufferIO>:
  b8:	stp	x29, x30, [sp, #-32]!
  bc:	stp	x20, x19, [sp, #16]
  c0:	mov	x29, sp
  c4:	ldr	w8, [x0, #8]
  c8:	adrp	x19, 0 <lprofBufferWriter>
  cc:	cbz	w8, dc <lprofDeleteBufferIO+0x24>
  d0:	ldr	x8, [x19]
  d4:	ldr	x0, [x0]
  d8:	blr	x8
  dc:	adrp	x20, 8 <lprofBufferWriter+0x8>
  e0:	ldr	x0, [x20]
  e4:	cbz	x0, fc <lprofDeleteBufferIO+0x44>
  e8:	ldr	x8, [x19]
  ec:	blr	x8
  f0:	adrp	x8, 10 <lprofBufferWriter+0x10>
  f4:	str	xzr, [x20]
  f8:	str	wzr, [x8]
  fc:	ldp	x20, x19, [sp, #16]
 100:	ldp	x29, x30, [sp], #32
 104:	ret

0000000000000108 <lprofBufferIOWrite>:
 108:	sub	sp, sp, #0x60
 10c:	stp	x29, x30, [sp, #48]
 110:	str	x21, [sp, #64]
 114:	stp	x20, x19, [sp, #80]
 118:	add	x29, sp, #0x30
 11c:	ldp	w9, w8, [x0, #24]
 120:	mov	w20, w2
 124:	mov	x19, x0
 128:	mov	x21, x1
 12c:	cbz	w8, 174 <lprofBufferIOWrite+0x6c>
 130:	add	w10, w8, w20
 134:	cmp	w10, w9
 138:	b.ls	174 <lprofBufferIOWrite+0x6c>  // b.plast
 13c:	ldr	x9, [x19, #16]
 140:	mov	w10, #0x1                   	// #1
 144:	stp	x10, x8, [sp, #24]
 148:	str	wzr, [sp, #40]
 14c:	str	x9, [sp, #16]
 150:	ldr	x0, [x19]
 154:	add	x1, sp, #0x10
 158:	mov	w2, #0x1                   	// #1
 15c:	ldr	x8, [x0]
 160:	blr	x8
 164:	cbnz	w0, 1a8 <lprofBufferIOWrite+0xa0>
 168:	ldr	w9, [x19, #24]
 16c:	mov	w8, wzr
 170:	str	wzr, [x19, #28]
 174:	mov	w10, #0x1                   	// #1
 178:	mov	w11, w20
 17c:	cmp	w9, w20
 180:	stp	x21, x10, [sp, #16]
 184:	str	x11, [sp, #32]
 188:	str	wzr, [sp, #40]
 18c:	b.cs	1b0 <lprofBufferIOWrite+0xa8>  // b.hs, b.nlast
 190:	ldr	x0, [x19]
 194:	add	x1, sp, #0x10
 198:	mov	w2, #0x1                   	// #1
 19c:	ldr	x8, [x0]
 1a0:	blr	x8
 1a4:	cbz	w0, 1f0 <lprofBufferIOWrite+0xe8>
 1a8:	mov	w0, #0xffffffff            	// #-1
 1ac:	b	1f4 <lprofBufferIOWrite+0xec>
 1b0:	ldr	x9, [x19, #16]
 1b4:	mov	x0, sp
 1b8:	add	x1, x9, w8, uxtw
 1bc:	bl	0 <initBufferWriter>
 1c0:	ldp	x9, x8, [sp, #24]
 1c4:	ldr	x1, [sp, #16]
 1c8:	mul	x20, x8, x9
 1cc:	cbz	x1, 1dc <lprofBufferIOWrite+0xd4>
 1d0:	ldr	x0, [sp, #8]
 1d4:	mov	x2, x20
 1d8:	bl	0 <memcpy>
 1dc:	ldr	w8, [sp, #8]
 1e0:	ldr	w9, [x19, #16]
 1e4:	add	w8, w8, w20
 1e8:	sub	w8, w8, w9
 1ec:	str	w8, [x19, #28]
 1f0:	mov	w0, wzr
 1f4:	ldp	x20, x19, [sp, #80]
 1f8:	ldr	x21, [sp, #64]
 1fc:	ldp	x29, x30, [sp, #48]
 200:	add	sp, sp, #0x60
 204:	ret

0000000000000208 <lprofBufferIOFlush>:
 208:	sub	sp, sp, #0x40
 20c:	stp	x29, x30, [sp, #32]
 210:	str	x19, [sp, #48]
 214:	add	x29, sp, #0x20
 218:	ldr	w8, [x0, #28]
 21c:	cbz	w8, 264 <lprofBufferIOFlush+0x5c>
 220:	ldr	x9, [x0, #16]
 224:	mov	w10, #0x1                   	// #1
 228:	stp	x10, x8, [sp, #8]
 22c:	str	wzr, [sp, #24]
 230:	str	x9, [sp]
 234:	mov	x19, x0
 238:	ldr	x0, [x0]
 23c:	mov	x1, sp
 240:	mov	w2, #0x1                   	// #1
 244:	ldr	x8, [x0]
 248:	blr	x8
 24c:	cbz	w0, 278 <lprofBufferIOFlush+0x70>
 250:	mov	w0, #0xffffffff            	// #-1
 254:	ldr	x19, [sp, #48]
 258:	ldp	x29, x30, [sp, #32]
 25c:	add	sp, sp, #0x40
 260:	ret
 264:	mov	w0, wzr
 268:	ldr	x19, [sp, #48]
 26c:	ldp	x29, x30, [sp, #32]
 270:	add	sp, sp, #0x40
 274:	ret
 278:	str	wzr, [x19, #28]
 27c:	ldr	x19, [sp, #48]
 280:	ldp	x29, x30, [sp, #32]
 284:	add	sp, sp, #0x40
 288:	ret

000000000000028c <lprofWriteData>:
 28c:	sub	sp, sp, #0x60
 290:	stp	x29, x30, [sp, #16]
 294:	stp	x26, x25, [sp, #32]
 298:	stp	x24, x23, [sp, #48]
 29c:	stp	x22, x21, [sp, #64]
 2a0:	stp	x20, x19, [sp, #80]
 2a4:	add	x29, sp, #0x10
 2a8:	mov	w19, w2
 2ac:	mov	x20, x1
 2b0:	mov	x21, x0
 2b4:	bl	0 <__llvm_profile_begin_data>
 2b8:	mov	x22, x0
 2bc:	bl	0 <__llvm_profile_end_data>
 2c0:	mov	x23, x0
 2c4:	bl	0 <__llvm_profile_begin_counters>
 2c8:	mov	x24, x0
 2cc:	bl	0 <__llvm_profile_end_counters>
 2d0:	mov	x25, x0
 2d4:	bl	0 <__llvm_profile_begin_names>
 2d8:	mov	x26, x0
 2dc:	bl	0 <__llvm_profile_end_names>
 2e0:	mov	x7, x0
 2e4:	mov	x0, x21
 2e8:	mov	x1, x22
 2ec:	mov	x2, x23
 2f0:	mov	x3, x24
 2f4:	mov	x4, x25
 2f8:	mov	x5, x20
 2fc:	mov	x6, x26
 300:	str	w19, [sp]
 304:	bl	324 <lprofWriteDataImpl>
 308:	ldp	x20, x19, [sp, #80]
 30c:	ldp	x22, x21, [sp, #64]
 310:	ldp	x24, x23, [sp, #48]
 314:	ldp	x26, x25, [sp, #32]
 318:	ldp	x29, x30, [sp, #16]
 31c:	add	sp, sp, #0x60
 320:	ret

0000000000000324 <lprofWriteDataImpl>:
 324:	sub	sp, sp, #0x1d0
 328:	stp	x29, x30, [sp, #368]
 32c:	stp	x28, x27, [sp, #384]
 330:	stp	x26, x25, [sp, #400]
 334:	stp	x24, x23, [sp, #416]
 338:	stp	x22, x21, [sp, #432]
 33c:	stp	x20, x19, [sp, #448]
 340:	add	x29, sp, #0x170
 344:	mov	x21, x1
 348:	mov	x22, x0
 34c:	mov	x0, x1
 350:	mov	x1, x2
 354:	mov	x26, x7
 358:	mov	x23, x6
 35c:	mov	x19, x5
 360:	mov	x25, x4
 364:	mov	x24, x3
 368:	mov	x20, x2
 36c:	bl	0 <__llvm_profile_get_data_size>
 370:	cbz	x0, 458 <lprofWriteDataImpl+0x134>
 374:	ldr	w28, [x29, #96]
 378:	sub	x8, x25, x24
 37c:	asr	x25, x8, #3
 380:	sub	x26, x26, x23
 384:	sub	x3, x29, #0x80
 388:	sub	x4, x29, #0x88
 38c:	sub	x5, x29, #0x90
 390:	mov	x1, x25
 394:	mov	x2, x26
 398:	mov	x27, x0
 39c:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
 3a0:	bl	0 <__llvm_profile_get_magic>
 3a4:	stur	x0, [x29, #-120]
 3a8:	bl	0 <__llvm_profile_get_version>
 3ac:	adrp	x12, 0 <lprofBufferWriter>
 3b0:	ldp	x9, x8, [x29, #-136]
 3b4:	ldr	q0, [x12]
 3b8:	ldur	x12, [x29, #-144]
 3bc:	sub	x11, x29, #0x78
 3c0:	cmp	w28, #0x0
 3c4:	str	x11, [sp]
 3c8:	mov	w11, #0x8                   	// #8
 3cc:	mov	w10, #0x1                   	// #1
 3d0:	mov	w13, #0x30                  	// #48
 3d4:	stp	x11, x25, [sp, #104]
 3d8:	csel	x11, x23, xzr, eq  // eq = none
 3dc:	stp	x0, x27, [x29, #-112]
 3e0:	stp	x24, x23, [x29, #-64]
 3e4:	str	wzr, [sp, #24]
 3e8:	str	wzr, [sp, #56]
 3ec:	str	wzr, [sp, #120]
 3f0:	stp	x10, x26, [sp, #168]
 3f4:	str	wzr, [sp, #184]
 3f8:	stur	x10, [x29, #-48]
 3fc:	str	x21, [sp, #32]
 400:	stp	x13, x27, [sp, #40]
 404:	stp	xzr, x10, [sp, #64]
 408:	str	w10, [sp, #88]
 40c:	str	x24, [sp, #96]
 410:	stp	xzr, x10, [sp, #128]
 414:	str	w10, [sp, #152]
 418:	stp	xzr, x10, [sp, #192]
 41c:	str	x11, [sp, #160]
 420:	stp	x8, x25, [x29, #-96]
 424:	stp	x9, x26, [x29, #-80]
 428:	str	x8, [sp, #80]
 42c:	str	x9, [sp, #144]
 430:	str	x12, [sp, #208]
 434:	stur	q0, [sp, #8]
 438:	str	w10, [sp, #216]
 43c:	ldr	x8, [x22]
 440:	mov	x1, sp
 444:	mov	w2, #0x7                   	// #7
 448:	mov	x0, x22
 44c:	blr	x8
 450:	cbz	w0, 478 <lprofWriteDataImpl+0x154>
 454:	mov	w0, #0xffffffff            	// #-1
 458:	ldp	x20, x19, [sp, #448]
 45c:	ldp	x22, x21, [sp, #432]
 460:	ldp	x24, x23, [sp, #416]
 464:	ldp	x26, x25, [sp, #400]
 468:	ldp	x28, x27, [sp, #384]
 46c:	ldp	x29, x30, [sp, #368]
 470:	add	sp, sp, #0x1d0
 474:	ret
 478:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 47c:	mov	w8, w0
 480:	mov	w0, wzr
 484:	cbz	x19, 458 <lprofWriteDataImpl+0x134>
 488:	cbnz	w8, 458 <lprofWriteDataImpl+0x134>
 48c:	adrp	x23, 8 <lprofBufferWriter+0x8>
 490:	ldr	x9, [x23]
 494:	adrp	x24, 10 <lprofBufferWriter+0x10>
 498:	ldr	w10, [x24]
 49c:	adrp	x8, 0 <lprofBufferWriter>
 4a0:	add	x8, x8, #0x0
 4a4:	cmp	x9, #0x0
 4a8:	adrp	x25, 0 <lprofBufferWriter>
 4ac:	csel	x8, x8, x9, eq  // eq = none
 4b0:	mov	w9, #0x2000                	// #8192
 4b4:	add	x25, x25, #0x0
 4b8:	csel	w9, w9, w10, eq  // eq = none
 4bc:	cmp	x21, x20
 4c0:	str	x22, [x25]
 4c4:	str	wzr, [x25, #8]
 4c8:	str	x8, [x25, #16]
 4cc:	stp	w9, wzr, [x25, #24]
 4d0:	b.cs	54c <lprofWriteDataImpl+0x228>  // b.hs, b.nlast
 4d4:	mov	x0, x19
 4d8:	mov	x1, x21
 4dc:	bl	570 <writeOneValueProfData>
 4e0:	cbnz	w0, 454 <lprofWriteDataImpl+0x130>
 4e4:	add	x21, x21, #0x30
 4e8:	cmp	x21, x20
 4ec:	b.cc	4d4 <lprofWriteDataImpl+0x1b0>  // b.lo, b.ul, b.last
 4f0:	adrp	x19, 0 <lprofBufferWriter>
 4f4:	ldr	w8, [x19]
 4f8:	cbz	w8, 52c <lprofWriteDataImpl+0x208>
 4fc:	ldr	x9, [x25, #16]
 500:	ldr	x0, [x25]
 504:	mov	w10, #0x1                   	// #1
 508:	stp	x10, x8, [x29, #-32]
 50c:	stur	x9, [x29, #-40]
 510:	stur	wzr, [x29, #-16]
 514:	ldr	x8, [x0]
 518:	sub	x1, x29, #0x28
 51c:	mov	w2, #0x1                   	// #1
 520:	blr	x8
 524:	cbnz	w0, 454 <lprofWriteDataImpl+0x130>
 528:	str	wzr, [x19]
 52c:	adrp	x8, 0 <lprofBufferWriter>
 530:	ldr	w8, [x8]
 534:	cbz	w8, 54c <lprofWriteDataImpl+0x228>
 538:	adrp	x8, 0 <lprofBufferWriter>
 53c:	adrp	x9, 0 <lprofBufferWriter>
 540:	ldr	x8, [x8]
 544:	ldr	x0, [x9]
 548:	blr	x8
 54c:	ldr	x0, [x23]
 550:	cbz	x0, 458 <lprofWriteDataImpl+0x134>
 554:	adrp	x8, 0 <lprofBufferWriter>
 558:	ldr	x8, [x8]
 55c:	blr	x8
 560:	mov	w0, wzr
 564:	str	xzr, [x23]
 568:	str	wzr, [x24]
 56c:	b	458 <lprofWriteDataImpl+0x134>

0000000000000570 <writeOneValueProfData>:
 570:	stp	x29, x30, [sp, #-96]!
 574:	str	x27, [sp, #16]
 578:	stp	x26, x25, [sp, #32]
 57c:	stp	x24, x23, [sp, #48]
 580:	stp	x22, x21, [sp, #64]
 584:	stp	x20, x19, [sp, #80]
 588:	mov	x29, sp
 58c:	sub	sp, sp, #0x20
 590:	ldrh	w8, [x1, #44]
 594:	mov	x19, x1
 598:	mov	x20, x0
 59c:	cbz	w8, 60c <writeOneValueProfData+0x9c>
 5a0:	ldr	x9, [x20, #8]
 5a4:	mov	w0, w8
 5a8:	blr	x9
 5ac:	sub	w2, w0, #0x8
 5b0:	add	x8, x2, #0xf
 5b4:	and	x8, x8, #0x1fffffff0
 5b8:	mov	x9, sp
 5bc:	sub	x21, x9, x8
 5c0:	mov	sp, x21
 5c4:	mov	x0, x21
 5c8:	mov	w1, wzr
 5cc:	bl	0 <memset>
 5d0:	stur	x21, [x29, #-16]
 5d4:	ldrh	w0, [x19, #46]
 5d8:	cbz	w0, 61c <writeOneValueProfData+0xac>
 5dc:	ldr	x8, [x20, #8]
 5e0:	blr	x8
 5e4:	sub	w2, w0, #0x8
 5e8:	add	x8, x2, #0xf
 5ec:	and	x8, x8, #0x1fffffff0
 5f0:	mov	x9, sp
 5f4:	sub	x21, x9, x8
 5f8:	mov	sp, x21
 5fc:	mov	x0, x21
 600:	mov	w1, wzr
 604:	bl	0 <memset>
 608:	b	620 <writeOneValueProfData+0xb0>
 60c:	mov	x21, xzr
 610:	stur	x21, [x29, #-16]
 614:	ldrh	w0, [x19, #46]
 618:	cbnz	w0, 5dc <writeOneValueProfData+0x6c>
 61c:	mov	x21, xzr
 620:	stur	x21, [x29, #-8]
 624:	ldr	x8, [x20]
 628:	sub	x1, x29, #0x10
 62c:	mov	x0, x19
 630:	blr	x8
 634:	cbz	w0, 680 <writeOneValueProfData+0x110>
 638:	ldr	x8, [x20, #32]
 63c:	mov	w21, w0
 640:	blr	x8
 644:	stp	w0, w21, [x29, #24]
 648:	adrp	x0, 0 <lprofBufferWriter>
 64c:	add	x0, x0, #0x0
 650:	add	x1, x29, #0x18
 654:	mov	w2, #0x8                   	// #8
 658:	add	x21, x29, #0x18
 65c:	bl	108 <lprofBufferIOWrite>
 660:	cbnz	w0, 67c <writeOneValueProfData+0x10c>
 664:	ldr	x8, [x20, #16]
 668:	add	x0, x29, #0x18
 66c:	blr	x8
 670:	add	x8, x21, #0x8
 674:	cmp	x0, x8
 678:	b.eq	6a0 <writeOneValueProfData+0x130>  // b.none
 67c:	mov	w0, #0xffffffff            	// #-1
 680:	mov	sp, x29
 684:	ldp	x20, x19, [sp, #80]
 688:	ldp	x22, x21, [sp, #64]
 68c:	ldp	x24, x23, [sp, #48]
 690:	ldp	x26, x25, [sp, #32]
 694:	ldr	x27, [sp, #16]
 698:	ldp	x29, x30, [sp], #96
 69c:	ret
 6a0:	ldrh	w8, [x19, #44]
 6a4:	cbz	w8, 778 <writeOneValueProfData+0x208>
 6a8:	adrp	x0, 0 <lprofBufferWriter>
 6ac:	add	x0, x0, #0x0
 6b0:	sub	x1, x29, #0x20
 6b4:	mov	w2, #0x8                   	// #8
 6b8:	stp	wzr, w8, [x29, #-32]
 6bc:	bl	108 <lprofBufferIOWrite>
 6c0:	cbnz	w0, 67c <writeOneValueProfData+0x10c>
 6c4:	ldr	x8, [x20, #8]
 6c8:	ldrh	w0, [x19, #44]
 6cc:	blr	x8
 6d0:	ldur	x1, [x29, #-16]
 6d4:	adrp	x21, 0 <lprofBufferWriter>
 6d8:	add	x21, x21, #0x0
 6dc:	sub	w2, w0, #0x8
 6e0:	mov	x0, x21
 6e4:	bl	108 <lprofBufferIOWrite>
 6e8:	cbnz	w0, 67c <writeOneValueProfData+0x10c>
 6ec:	ldrh	w8, [x19, #44]
 6f0:	cbz	w8, 778 <writeOneValueProfData+0x208>
 6f4:	mov	w22, wzr
 6f8:	mov	w27, #0x10                  	// #16
 6fc:	b	710 <writeOneValueProfData+0x1a0>
 700:	ldrh	w8, [x19, #44]
 704:	add	w22, w22, #0x1
 708:	cmp	w22, w8
 70c:	b.cs	778 <writeOneValueProfData+0x208>  // b.hs, b.nlast
 710:	ldr	x8, [x20, #24]
 714:	mov	w0, wzr
 718:	mov	w1, w22
 71c:	blr	x8
 720:	cbz	w0, 700 <writeOneValueProfData+0x190>
 724:	mov	w23, w0
 728:	mov	x24, xzr
 72c:	ldr	x8, [x20, #40]
 730:	cmp	w23, #0x10
 734:	csel	w25, w23, w27, cc  // cc = lo, ul, last
 738:	add	x26, x21, #0x20
 73c:	mov	w0, wzr
 740:	mov	w1, w22
 744:	mov	x2, x26
 748:	mov	x3, x24
 74c:	mov	w4, w25
 750:	blr	x8
 754:	mov	x24, x0
 758:	lsl	w2, w25, #4
 75c:	mov	x0, x21
 760:	mov	x1, x26
 764:	bl	108 <lprofBufferIOWrite>
 768:	cbnz	w0, 67c <writeOneValueProfData+0x10c>
 76c:	subs	w23, w23, w25
 770:	b.ne	72c <writeOneValueProfData+0x1bc>  // b.any
 774:	b	700 <writeOneValueProfData+0x190>
 778:	ldrh	w8, [x19, #46]
 77c:	cbz	w8, 854 <writeOneValueProfData+0x2e4>
 780:	adrp	x0, 0 <lprofBufferWriter>
 784:	mov	w9, #0x1                   	// #1
 788:	add	x0, x0, #0x0
 78c:	sub	x1, x29, #0x20
 790:	mov	w2, #0x8                   	// #8
 794:	stp	w9, w8, [x29, #-32]
 798:	bl	108 <lprofBufferIOWrite>
 79c:	cbnz	w0, 67c <writeOneValueProfData+0x10c>
 7a0:	ldr	x8, [x20, #8]
 7a4:	ldrh	w0, [x19, #46]
 7a8:	blr	x8
 7ac:	ldur	x1, [x29, #-8]
 7b0:	adrp	x21, 0 <lprofBufferWriter>
 7b4:	add	x21, x21, #0x0
 7b8:	sub	w2, w0, #0x8
 7bc:	mov	x0, x21
 7c0:	bl	108 <lprofBufferIOWrite>
 7c4:	cbnz	w0, 67c <writeOneValueProfData+0x10c>
 7c8:	ldrh	w8, [x19, #46]
 7cc:	cbz	w8, 854 <writeOneValueProfData+0x2e4>
 7d0:	mov	w22, wzr
 7d4:	mov	w27, #0x10                  	// #16
 7d8:	b	7ec <writeOneValueProfData+0x27c>
 7dc:	ldrh	w8, [x19, #46]
 7e0:	add	w22, w22, #0x1
 7e4:	cmp	w22, w8
 7e8:	b.cs	854 <writeOneValueProfData+0x2e4>  // b.hs, b.nlast
 7ec:	ldr	x8, [x20, #24]
 7f0:	mov	w0, #0x1                   	// #1
 7f4:	mov	w1, w22
 7f8:	blr	x8
 7fc:	cbz	w0, 7dc <writeOneValueProfData+0x26c>
 800:	mov	w23, w0
 804:	mov	x24, xzr
 808:	ldr	x8, [x20, #40]
 80c:	cmp	w23, #0x10
 810:	csel	w25, w23, w27, cc  // cc = lo, ul, last
 814:	add	x26, x21, #0x20
 818:	mov	w0, #0x1                   	// #1
 81c:	mov	w1, w22
 820:	mov	x2, x26
 824:	mov	x3, x24
 828:	mov	w4, w25
 82c:	blr	x8
 830:	mov	x24, x0
 834:	lsl	w2, w25, #4
 838:	mov	x0, x21
 83c:	mov	x1, x26
 840:	bl	108 <lprofBufferIOWrite>
 844:	cbnz	w0, 67c <writeOneValueProfData+0x10c>
 848:	subs	w23, w23, w25
 84c:	b.ne	808 <writeOneValueProfData+0x298>  // b.any
 850:	b	7dc <writeOneValueProfData+0x26c>
 854:	mov	w0, wzr
 858:	b	680 <writeOneValueProfData+0x110>

InstrProfilingPlatformDarwin.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformFuchsia.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformLinux.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_begin_data>:
   0:	adrp	x0, 0 <__start___llvm_prf_data>
   4:	add	x0, x0, #0x0
   8:	ret

000000000000000c <__llvm_profile_end_data>:
   c:	adrp	x0, 0 <__stop___llvm_prf_data>
  10:	add	x0, x0, #0x0
  14:	ret

0000000000000018 <__llvm_profile_begin_names>:
  18:	adrp	x0, 0 <__start___llvm_prf_names>
  1c:	add	x0, x0, #0x0
  20:	ret

0000000000000024 <__llvm_profile_end_names>:
  24:	adrp	x0, 0 <__stop___llvm_prf_names>
  28:	add	x0, x0, #0x0
  2c:	ret

0000000000000030 <__llvm_profile_begin_counters>:
  30:	adrp	x0, 0 <__start___llvm_prf_cnts>
  34:	add	x0, x0, #0x0
  38:	ret

000000000000003c <__llvm_profile_end_counters>:
  3c:	adrp	x0, 0 <__stop___llvm_prf_cnts>
  40:	add	x0, x0, #0x0
  44:	ret

0000000000000048 <__llvm_profile_begin_orderfile>:
  48:	adrp	x0, 0 <__start___llvm_orderfile>
  4c:	add	x0, x0, #0x0
  50:	ret

0000000000000054 <__llvm_profile_begin_vnodes>:
  54:	adrp	x0, 0 <__start___llvm_prf_vnds>
  58:	add	x0, x0, #0x0
  5c:	ret

0000000000000060 <__llvm_profile_end_vnodes>:
  60:	adrp	x0, 0 <__stop___llvm_prf_vnds>
  64:	add	x0, x0, #0x0
  68:	ret

InstrProfilingPlatformOther.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformWindows.c.o:     file format elf64-littleaarch64


InstrProfilingRuntime.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_InstrProfilingRuntime.cpp>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__llvm_profile_initialize_file>
   c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
  10:	cbz	w0, 1c <_GLOBAL__sub_I_InstrProfilingRuntime.cpp+0x1c>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	ldp	x29, x30, [sp], #16
  20:	b	0 <__llvm_profile_register_write_file_atexit>

InstrProfilingUtil.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_recursive_mkdir>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x21, 0 <__llvm_profile_recursive_mkdir>
  14:	ldr	x21, [x21]
  18:	mov	x19, x0
  1c:	mov	w20, #0x1                   	// #1
  20:	mov	w22, #0x2f                  	// #47
  24:	b	40 <__llvm_profile_recursive_mkdir+0x40>
  28:	strb	wzr, [x19, x20]
  2c:	ldr	w1, [x21]
  30:	mov	x0, x19
  34:	bl	0 <mkdir>
  38:	strb	w22, [x19, x20]
  3c:	add	x20, x20, #0x1
  40:	ldrb	w8, [x19, x20]
  44:	cmp	w8, #0x2f
  48:	b.eq	28 <__llvm_profile_recursive_mkdir+0x28>  // b.none
  4c:	cbnz	w8, 3c <__llvm_profile_recursive_mkdir+0x3c>
  50:	ldp	x20, x19, [sp, #32]
  54:	ldp	x22, x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

0000000000000060 <__llvm_profile_get_dir_mode>:
  60:	adrp	x8, 0 <__llvm_profile_recursive_mkdir>
  64:	ldr	x8, [x8]
  68:	ldr	w0, [x8]
  6c:	ret

0000000000000070 <__llvm_profile_set_dir_mode>:
  70:	adrp	x8, 0 <__llvm_profile_recursive_mkdir>
  74:	ldr	x8, [x8]
  78:	str	w0, [x8]
  7c:	ret

0000000000000080 <lprofGetHostName>:
  80:	sub	sp, sp, #0x1c0
  84:	stp	x29, x30, [sp, #400]
  88:	stp	x28, x21, [sp, #416]
  8c:	stp	x20, x19, [sp, #432]
  90:	add	x29, sp, #0x190
  94:	mov	x19, x0
  98:	add	x0, sp, #0x8
  9c:	mov	w20, w1
  a0:	add	x21, sp, #0x8
  a4:	bl	0 <uname>
  a8:	tbnz	w0, #31, c0 <lprofGetHostName+0x40>
  ac:	add	x1, x21, #0x41
  b0:	sxtw	x2, w20
  b4:	mov	x0, x19
  b8:	bl	0 <strncpy>
  bc:	mov	w0, wzr
  c0:	ldp	x20, x19, [sp, #432]
  c4:	ldp	x28, x21, [sp, #416]
  c8:	ldp	x29, x30, [sp, #400]
  cc:	add	sp, sp, #0x1c0
  d0:	ret

00000000000000d4 <lprofLockFd>:
  d4:	sub	sp, sp, #0x40
  d8:	stp	x29, x30, [sp, #32]
  dc:	str	x19, [sp, #48]
  e0:	add	x29, sp, #0x20
  e4:	mov	w19, w0
  e8:	strh	wzr, [sp, #2]
  ec:	stp	xzr, xzr, [sp, #8]
  f0:	bl	0 <getpid>
  f4:	mov	w8, #0x1                   	// #1
  f8:	str	w0, [sp, #24]
  fc:	strh	w8, [sp]
 100:	mov	x2, sp
 104:	mov	w1, #0x7                   	// #7
 108:	mov	w0, w19
 10c:	bl	0 <fcntl>
 110:	cmn	w0, #0x1
 114:	b.ne	144 <lprofLockFd+0x70>  // b.any
 118:	bl	0 <__errno_location>
 11c:	ldr	w8, [x0]
 120:	cmp	w8, #0x4
 124:	b.eq	100 <lprofLockFd+0x2c>  // b.none
 128:	cmp	w8, #0x25
 12c:	b.ne	144 <lprofLockFd+0x70>  // b.any
 130:	mov	w0, #0xffffffff            	// #-1
 134:	ldr	x19, [sp, #48]
 138:	ldp	x29, x30, [sp, #32]
 13c:	add	sp, sp, #0x40
 140:	ret
 144:	mov	w0, wzr
 148:	ldr	x19, [sp, #48]
 14c:	ldp	x29, x30, [sp, #32]
 150:	add	sp, sp, #0x40
 154:	ret

0000000000000158 <lprofUnlockFd>:
 158:	sub	sp, sp, #0x40
 15c:	stp	x29, x30, [sp, #32]
 160:	str	x19, [sp, #48]
 164:	add	x29, sp, #0x20
 168:	mov	w19, w0
 16c:	strh	wzr, [sp, #2]
 170:	stp	xzr, xzr, [sp, #8]
 174:	bl	0 <getpid>
 178:	mov	w8, #0x2                   	// #2
 17c:	str	w0, [sp, #24]
 180:	strh	w8, [sp]
 184:	mov	x2, sp
 188:	mov	w1, #0x7                   	// #7
 18c:	mov	w0, w19
 190:	bl	0 <fcntl>
 194:	cmn	w0, #0x1
 198:	b.ne	1c8 <lprofUnlockFd+0x70>  // b.any
 19c:	bl	0 <__errno_location>
 1a0:	ldr	w8, [x0]
 1a4:	cmp	w8, #0x4
 1a8:	b.eq	184 <lprofUnlockFd+0x2c>  // b.none
 1ac:	cmp	w8, #0x25
 1b0:	b.ne	1c8 <lprofUnlockFd+0x70>  // b.any
 1b4:	mov	w0, #0xffffffff            	// #-1
 1b8:	ldr	x19, [sp, #48]
 1bc:	ldp	x29, x30, [sp, #32]
 1c0:	add	sp, sp, #0x40
 1c4:	ret
 1c8:	mov	w0, wzr
 1cc:	ldr	x19, [sp, #48]
 1d0:	ldp	x29, x30, [sp, #32]
 1d4:	add	sp, sp, #0x40
 1d8:	ret

00000000000001dc <lprofLockFileHandle>:
 1dc:	sub	sp, sp, #0x40
 1e0:	stp	x29, x30, [sp, #32]
 1e4:	str	x19, [sp, #48]
 1e8:	add	x29, sp, #0x20
 1ec:	bl	0 <fileno>
 1f0:	mov	w19, w0
 1f4:	strh	wzr, [sp, #2]
 1f8:	stp	xzr, xzr, [sp, #8]
 1fc:	bl	0 <getpid>
 200:	mov	w8, #0x1                   	// #1
 204:	str	w0, [sp, #24]
 208:	strh	w8, [sp]
 20c:	mov	x2, sp
 210:	mov	w1, #0x7                   	// #7
 214:	mov	w0, w19
 218:	bl	0 <fcntl>
 21c:	cmn	w0, #0x1
 220:	b.ne	250 <lprofLockFileHandle+0x74>  // b.any
 224:	bl	0 <__errno_location>
 228:	ldr	w8, [x0]
 22c:	cmp	w8, #0x4
 230:	b.eq	20c <lprofLockFileHandle+0x30>  // b.none
 234:	cmp	w8, #0x25
 238:	b.ne	250 <lprofLockFileHandle+0x74>  // b.any
 23c:	mov	w0, #0xffffffff            	// #-1
 240:	ldr	x19, [sp, #48]
 244:	ldp	x29, x30, [sp, #32]
 248:	add	sp, sp, #0x40
 24c:	ret
 250:	mov	w0, wzr
 254:	ldr	x19, [sp, #48]
 258:	ldp	x29, x30, [sp, #32]
 25c:	add	sp, sp, #0x40
 260:	ret

0000000000000264 <lprofUnlockFileHandle>:
 264:	sub	sp, sp, #0x40
 268:	stp	x29, x30, [sp, #32]
 26c:	str	x19, [sp, #48]
 270:	add	x29, sp, #0x20
 274:	bl	0 <fileno>
 278:	mov	w19, w0
 27c:	strh	wzr, [sp, #2]
 280:	stp	xzr, xzr, [sp, #8]
 284:	bl	0 <getpid>
 288:	mov	w8, #0x2                   	// #2
 28c:	str	w0, [sp, #24]
 290:	strh	w8, [sp]
 294:	mov	x2, sp
 298:	mov	w1, #0x7                   	// #7
 29c:	mov	w0, w19
 2a0:	bl	0 <fcntl>
 2a4:	cmn	w0, #0x1
 2a8:	b.ne	2d8 <lprofUnlockFileHandle+0x74>  // b.any
 2ac:	bl	0 <__errno_location>
 2b0:	ldr	w8, [x0]
 2b4:	cmp	w8, #0x4
 2b8:	b.eq	294 <lprofUnlockFileHandle+0x30>  // b.none
 2bc:	cmp	w8, #0x25
 2c0:	b.ne	2d8 <lprofUnlockFileHandle+0x74>  // b.any
 2c4:	mov	w0, #0xffffffff            	// #-1
 2c8:	ldr	x19, [sp, #48]
 2cc:	ldp	x29, x30, [sp, #32]
 2d0:	add	sp, sp, #0x40
 2d4:	ret
 2d8:	mov	w0, wzr
 2dc:	ldr	x19, [sp, #48]
 2e0:	ldp	x29, x30, [sp, #32]
 2e4:	add	sp, sp, #0x40
 2e8:	ret

00000000000002ec <lprofOpenFileEx>:
 2ec:	sub	sp, sp, #0x40
 2f0:	stp	x29, x30, [sp, #32]
 2f4:	str	x19, [sp, #48]
 2f8:	add	x29, sp, #0x20
 2fc:	mov	w1, #0x42                  	// #66
 300:	mov	w2, #0x1b6                 	// #438
 304:	bl	0 <open>
 308:	tbnz	w0, #31, 378 <lprofOpenFileEx+0x8c>
 30c:	mov	w19, w0
 310:	strh	wzr, [sp, #2]
 314:	stp	xzr, xzr, [sp, #8]
 318:	bl	0 <getpid>
 31c:	mov	w8, #0x1                   	// #1
 320:	str	w0, [sp, #24]
 324:	strh	w8, [sp]
 328:	mov	x2, sp
 32c:	mov	w1, #0x7                   	// #7
 330:	mov	w0, w19
 334:	bl	0 <fcntl>
 338:	cmn	w0, #0x1
 33c:	b.ne	358 <lprofOpenFileEx+0x6c>  // b.any
 340:	bl	0 <__errno_location>
 344:	ldr	w8, [x0]
 348:	cmp	w8, #0x4
 34c:	b.eq	328 <lprofOpenFileEx+0x3c>  // b.none
 350:	cmp	w8, #0x25
 354:	b.eq	38c <lprofOpenFileEx+0xa0>  // b.none
 358:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 35c:	add	x1, x1, #0x0
 360:	mov	w0, w19
 364:	bl	0 <fdopen>
 368:	ldr	x19, [sp, #48]
 36c:	ldp	x29, x30, [sp, #32]
 370:	add	sp, sp, #0x40
 374:	ret
 378:	mov	x0, xzr
 37c:	ldr	x19, [sp, #48]
 380:	ldp	x29, x30, [sp, #32]
 384:	add	sp, sp, #0x40
 388:	ret
 38c:	adrp	x8, 0 <stderr>
 390:	ldr	x8, [x8]
 394:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 398:	adrp	x2, 0 <__llvm_profile_recursive_mkdir>
 39c:	add	x1, x1, #0x0
 3a0:	ldr	x0, [x8]
 3a4:	add	x2, x2, #0x0
 3a8:	bl	0 <fprintf>
 3ac:	b	358 <lprofOpenFileEx+0x6c>

00000000000003b0 <lprofGetPathPrefix>:
 3b0:	stp	x29, x30, [sp, #-48]!
 3b4:	str	x21, [sp, #16]
 3b8:	stp	x20, x19, [sp, #32]
 3bc:	mov	x29, sp
 3c0:	mov	x21, x0
 3c4:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 3c8:	add	x0, x0, #0x0
 3cc:	mov	x20, x1
 3d0:	bl	0 <getenv>
 3d4:	mov	x19, x0
 3d8:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 3dc:	add	x0, x0, #0x0
 3e0:	bl	0 <getenv>
 3e4:	str	xzr, [x20]
 3e8:	str	wzr, [x21]
 3ec:	cbz	x19, 42c <lprofGetPathPrefix+0x7c>
 3f0:	ldrb	w8, [x19]
 3f4:	cbz	w8, 410 <lprofGetPathPrefix+0x60>
 3f8:	cbz	x0, 418 <lprofGetPathPrefix+0x68>
 3fc:	mov	w2, #0xa                   	// #10
 400:	mov	x1, xzr
 404:	bl	0 <strtol>
 408:	bic	w8, w0, w0, asr #31
 40c:	b	41c <lprofGetPathPrefix+0x6c>
 410:	mov	x19, xzr
 414:	b	42c <lprofGetPathPrefix+0x7c>
 418:	mov	w8, wzr
 41c:	mov	x0, x19
 420:	str	w8, [x21]
 424:	bl	0 <strlen>
 428:	str	x0, [x20]
 42c:	mov	x0, x19
 430:	ldp	x20, x19, [sp, #32]
 434:	ldr	x21, [sp, #16]
 438:	ldp	x29, x30, [sp], #48
 43c:	ret

0000000000000440 <lprofApplyPathPrefix>:
 440:	stp	x29, x30, [sp, #-48]!
 444:	stp	x22, x21, [sp, #16]
 448:	stp	x20, x19, [sp, #32]
 44c:	mov	x29, sp
 450:	mov	x20, x3
 454:	mov	x22, x2
 458:	mov	x19, x1
 45c:	cmp	w4, #0x1
 460:	mov	x21, x0
 464:	b.lt	498 <lprofApplyPathPrefix+0x58>  // b.tstop
 468:	mov	w8, wzr
 46c:	add	x9, x19, #0x1
 470:	b	488 <lprofApplyPathPrefix+0x48>
 474:	add	w8, w8, #0x1
 478:	mov	x19, x9
 47c:	cmp	w8, w4
 480:	add	x9, x9, #0x1
 484:	b.ge	498 <lprofApplyPathPrefix+0x58>  // b.tcont
 488:	ldrb	w10, [x9]
 48c:	cmp	w10, #0x2f
 490:	b.eq	474 <lprofApplyPathPrefix+0x34>  // b.none
 494:	cbnz	w10, 47c <lprofApplyPathPrefix+0x3c>
 498:	mov	x0, x21
 49c:	mov	x1, x22
 4a0:	mov	x2, x20
 4a4:	bl	0 <memcpy>
 4a8:	add	x8, x20, x22
 4ac:	ldurb	w8, [x8, #-1]
 4b0:	cmp	w8, #0x2f
 4b4:	b.eq	4c8 <lprofApplyPathPrefix+0x88>  // b.none
 4b8:	add	x8, x20, #0x1
 4bc:	mov	w9, #0x2f                  	// #47
 4c0:	strb	w9, [x21, x20]
 4c4:	mov	x20, x8
 4c8:	mov	x0, x19
 4cc:	add	x20, x21, x20
 4d0:	bl	0 <strlen>
 4d4:	add	x2, x0, #0x1
 4d8:	mov	x0, x20
 4dc:	mov	x1, x19
 4e0:	ldp	x20, x19, [sp, #32]
 4e4:	ldp	x22, x21, [sp, #16]
 4e8:	ldp	x29, x30, [sp], #48
 4ec:	b	0 <memcpy>

00000000000004f0 <lprofFindFirstDirSeparator>:
 4f0:	mov	w1, #0x2f                  	// #47
 4f4:	b	0 <strchr>

00000000000004f8 <lprofFindLastDirSeparator>:
 4f8:	mov	w1, #0x2f                  	// #47
 4fc:	b	0 <strrchr>

0000000000000500 <lprofSuspendSigKill>:
 500:	sub	sp, sp, #0x20
 504:	stp	x29, x30, [sp, #16]
 508:	add	x29, sp, #0x10
 50c:	sub	x1, x29, #0x4
 510:	mov	w0, #0x2                   	// #2
 514:	stur	wzr, [x29, #-4]
 518:	bl	0 <prctl>
 51c:	ldur	w8, [x29, #-4]
 520:	cbnz	w0, 53c <lprofSuspendSigKill+0x3c>
 524:	cmp	w8, #0x9
 528:	b.ne	53c <lprofSuspendSigKill+0x3c>  // b.any
 52c:	mov	w0, #0x1                   	// #1
 530:	mov	w1, wzr
 534:	bl	0 <prctl>
 538:	ldur	w8, [x29, #-4]
 53c:	ldp	x29, x30, [sp, #16]
 540:	cmp	w8, #0x9
 544:	cset	w0, eq  // eq = none
 548:	add	sp, sp, #0x20
 54c:	ret

0000000000000550 <lprofRestoreSigKill>:
 550:	mov	w0, #0x1                   	// #1
 554:	mov	w1, #0x9                   	// #9
 558:	b	0 <prctl>
