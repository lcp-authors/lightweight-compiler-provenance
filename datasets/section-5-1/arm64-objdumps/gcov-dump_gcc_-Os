
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov-dump_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004022a0 <.init>:
  4022a0:	stp	x29, x30, [sp, #-16]!
  4022a4:	mov	x29, sp
  4022a8:	bl	403184 <ferror@plt+0x814>
  4022ac:	ldp	x29, x30, [sp], #16
  4022b0:	ret

Disassembly of section .plt:

00000000004022c0 <memcpy@plt-0x20>:
  4022c0:	stp	x16, x30, [sp, #-16]!
  4022c4:	adrp	x16, 477000 <_obstack_memory_used@@Base+0x3d198>
  4022c8:	ldr	x17, [x16, #4088]
  4022cc:	add	x16, x16, #0xff8
  4022d0:	br	x17
  4022d4:	nop
  4022d8:	nop
  4022dc:	nop

00000000004022e0 <memcpy@plt>:
  4022e0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4022e4:	ldr	x17, [x16]
  4022e8:	add	x16, x16, #0x0
  4022ec:	br	x17

00000000004022f0 <memmove@plt>:
  4022f0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4022f4:	ldr	x17, [x16, #8]
  4022f8:	add	x16, x16, #0x8
  4022fc:	br	x17

0000000000402300 <ngettext@plt>:
  402300:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402304:	ldr	x17, [x16, #16]
  402308:	add	x16, x16, #0x10
  40230c:	br	x17

0000000000402310 <fwrite_unlocked@plt>:
  402310:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402314:	ldr	x17, [x16, #24]
  402318:	add	x16, x16, #0x18
  40231c:	br	x17

0000000000402320 <strtoul@plt>:
  402320:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402324:	ldr	x17, [x16, #32]
  402328:	add	x16, x16, #0x20
  40232c:	br	x17

0000000000402330 <strlen@plt>:
  402330:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402334:	ldr	x17, [x16, #40]
  402338:	add	x16, x16, #0x28
  40233c:	br	x17

0000000000402340 <fputs@plt>:
  402340:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402344:	ldr	x17, [x16, #48]
  402348:	add	x16, x16, #0x30
  40234c:	br	x17

0000000000402350 <mbstowcs@plt>:
  402350:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402354:	ldr	x17, [x16, #56]
  402358:	add	x16, x16, #0x38
  40235c:	br	x17

0000000000402360 <exit@plt>:
  402360:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402364:	ldr	x17, [x16, #64]
  402368:	add	x16, x16, #0x40
  40236c:	br	x17

0000000000402370 <sbrk@plt>:
  402370:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402374:	ldr	x17, [x16, #72]
  402378:	add	x16, x16, #0x48
  40237c:	br	x17

0000000000402380 <strnlen@plt>:
  402380:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402384:	ldr	x17, [x16, #80]
  402388:	add	x16, x16, #0x50
  40238c:	br	x17

0000000000402390 <iconv_close@plt>:
  402390:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402394:	ldr	x17, [x16, #88]
  402398:	add	x16, x16, #0x58
  40239c:	br	x17

00000000004023a0 <setbuf@plt>:
  4023a0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #96]
  4023a8:	add	x16, x16, #0x60
  4023ac:	br	x17

00000000004023b0 <readlink@plt>:
  4023b0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #104]
  4023b8:	add	x16, x16, #0x68
  4023bc:	br	x17

00000000004023c0 <ftell@plt>:
  4023c0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #112]
  4023c8:	add	x16, x16, #0x70
  4023cc:	br	x17

00000000004023d0 <sprintf@plt>:
  4023d0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #120]
  4023d8:	add	x16, x16, #0x78
  4023dc:	br	x17

00000000004023e0 <opendir@plt>:
  4023e0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #128]
  4023e8:	add	x16, x16, #0x80
  4023ec:	br	x17

00000000004023f0 <__cxa_atexit@plt>:
  4023f0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #136]
  4023f8:	add	x16, x16, #0x88
  4023fc:	br	x17

0000000000402400 <fputc@plt>:
  402400:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402404:	ldr	x17, [x16, #144]
  402408:	add	x16, x16, #0x90
  40240c:	br	x17

0000000000402410 <qsort@plt>:
  402410:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402414:	ldr	x17, [x16, #152]
  402418:	add	x16, x16, #0x98
  40241c:	br	x17

0000000000402420 <snprintf@plt>:
  402420:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402424:	ldr	x17, [x16, #160]
  402428:	add	x16, x16, #0xa0
  40242c:	br	x17

0000000000402430 <putc_unlocked@plt>:
  402430:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402434:	ldr	x17, [x16, #168]
  402438:	add	x16, x16, #0xa8
  40243c:	br	x17

0000000000402440 <localtime@plt>:
  402440:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402444:	ldr	x17, [x16, #176]
  402448:	add	x16, x16, #0xb0
  40244c:	br	x17

0000000000402450 <fclose@plt>:
  402450:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402454:	ldr	x17, [x16, #184]
  402458:	add	x16, x16, #0xb8
  40245c:	br	x17

0000000000402460 <atoi@plt>:
  402460:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402464:	ldr	x17, [x16, #192]
  402468:	add	x16, x16, #0xc0
  40246c:	br	x17

0000000000402470 <getpid@plt>:
  402470:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402474:	ldr	x17, [x16, #200]
  402478:	add	x16, x16, #0xc8
  40247c:	br	x17

0000000000402480 <nl_langinfo@plt>:
  402480:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402484:	ldr	x17, [x16, #208]
  402488:	add	x16, x16, #0xd0
  40248c:	br	x17

0000000000402490 <fopen@plt>:
  402490:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402494:	ldr	x17, [x16, #216]
  402498:	add	x16, x16, #0xd8
  40249c:	br	x17

00000000004024a0 <time@plt>:
  4024a0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #224]
  4024a8:	add	x16, x16, #0xe0
  4024ac:	br	x17

00000000004024b0 <malloc@plt>:
  4024b0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #232]
  4024b8:	add	x16, x16, #0xe8
  4024bc:	br	x17

00000000004024c0 <open@plt>:
  4024c0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #240]
  4024c8:	add	x16, x16, #0xf0
  4024cc:	br	x17

00000000004024d0 <wcswidth@plt>:
  4024d0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #248]
  4024d8:	add	x16, x16, #0xf8
  4024dc:	br	x17

00000000004024e0 <strncmp@plt>:
  4024e0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #256]
  4024e8:	add	x16, x16, #0x100
  4024ec:	br	x17

00000000004024f0 <bindtextdomain@plt>:
  4024f0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #264]
  4024f8:	add	x16, x16, #0x108
  4024fc:	br	x17

0000000000402500 <fileno_unlocked@plt>:
  402500:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402504:	ldr	x17, [x16, #272]
  402508:	add	x16, x16, #0x110
  40250c:	br	x17

0000000000402510 <__libc_start_main@plt>:
  402510:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402514:	ldr	x17, [x16, #280]
  402518:	add	x16, x16, #0x118
  40251c:	br	x17

0000000000402520 <strcat@plt>:
  402520:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402524:	ldr	x17, [x16, #288]
  402528:	add	x16, x16, #0x120
  40252c:	br	x17

0000000000402530 <memset@plt>:
  402530:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402534:	ldr	x17, [x16, #296]
  402538:	add	x16, x16, #0x128
  40253c:	br	x17

0000000000402540 <fdopen@plt>:
  402540:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402544:	ldr	x17, [x16, #304]
  402548:	add	x16, x16, #0x130
  40254c:	br	x17

0000000000402550 <calloc@plt>:
  402550:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402554:	ldr	x17, [x16, #312]
  402558:	add	x16, x16, #0x138
  40255c:	br	x17

0000000000402560 <bsearch@plt>:
  402560:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402564:	ldr	x17, [x16, #320]
  402568:	add	x16, x16, #0x140
  40256c:	br	x17

0000000000402570 <strcasecmp@plt>:
  402570:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402574:	ldr	x17, [x16, #328]
  402578:	add	x16, x16, #0x148
  40257c:	br	x17

0000000000402580 <gmtime@plt>:
  402580:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402584:	ldr	x17, [x16, #336]
  402588:	add	x16, x16, #0x150
  40258c:	br	x17

0000000000402590 <readdir@plt>:
  402590:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402594:	ldr	x17, [x16, #344]
  402598:	add	x16, x16, #0x158
  40259c:	br	x17

00000000004025a0 <realloc@plt>:
  4025a0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #352]
  4025a8:	add	x16, x16, #0x160
  4025ac:	br	x17

00000000004025b0 <getpagesize@plt>:
  4025b0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #360]
  4025b8:	add	x16, x16, #0x168
  4025bc:	br	x17

00000000004025c0 <strdup@plt>:
  4025c0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #368]
  4025c8:	add	x16, x16, #0x170
  4025cc:	br	x17

00000000004025d0 <closedir@plt>:
  4025d0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #376]
  4025d8:	add	x16, x16, #0x178
  4025dc:	br	x17

00000000004025e0 <getc_unlocked@plt>:
  4025e0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #384]
  4025e8:	add	x16, x16, #0x180
  4025ec:	br	x17

00000000004025f0 <strerror@plt>:
  4025f0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #392]
  4025f8:	add	x16, x16, #0x188
  4025fc:	br	x17

0000000000402600 <close@plt>:
  402600:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402604:	ldr	x17, [x16, #400]
  402608:	add	x16, x16, #0x190
  40260c:	br	x17

0000000000402610 <strrchr@plt>:
  402610:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402614:	ldr	x17, [x16, #408]
  402618:	add	x16, x16, #0x198
  40261c:	br	x17

0000000000402620 <__gmon_start__@plt>:
  402620:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402624:	ldr	x17, [x16, #416]
  402628:	add	x16, x16, #0x1a0
  40262c:	br	x17

0000000000402630 <write@plt>:
  402630:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402634:	ldr	x17, [x16, #424]
  402638:	add	x16, x16, #0x1a8
  40263c:	br	x17

0000000000402640 <fseek@plt>:
  402640:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402644:	ldr	x17, [x16, #432]
  402648:	add	x16, x16, #0x1b0
  40264c:	br	x17

0000000000402650 <abort@plt>:
  402650:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402654:	ldr	x17, [x16, #440]
  402658:	add	x16, x16, #0x1b8
  40265c:	br	x17

0000000000402660 <feof@plt>:
  402660:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402664:	ldr	x17, [x16, #448]
  402668:	add	x16, x16, #0x1c0
  40266c:	br	x17

0000000000402670 <puts@plt>:
  402670:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402674:	ldr	x17, [x16, #456]
  402678:	add	x16, x16, #0x1c8
  40267c:	br	x17

0000000000402680 <fread_unlocked@plt>:
  402680:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402684:	ldr	x17, [x16, #464]
  402688:	add	x16, x16, #0x1d0
  40268c:	br	x17

0000000000402690 <memcmp@plt>:
  402690:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402694:	ldr	x17, [x16, #472]
  402698:	add	x16, x16, #0x1d8
  40269c:	br	x17

00000000004026a0 <pthread_once@plt>:
  4026a0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #480]
  4026a8:	add	x16, x16, #0x1e0
  4026ac:	br	x17

00000000004026b0 <textdomain@plt>:
  4026b0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #488]
  4026b8:	add	x16, x16, #0x1e8
  4026bc:	br	x17

00000000004026c0 <getopt_long@plt>:
  4026c0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #496]
  4026c8:	add	x16, x16, #0x1f0
  4026cc:	br	x17

00000000004026d0 <strcmp@plt>:
  4026d0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #504]
  4026d8:	add	x16, x16, #0x1f8
  4026dc:	br	x17

00000000004026e0 <iconv@plt>:
  4026e0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #512]
  4026e8:	add	x16, x16, #0x200
  4026ec:	br	x17

00000000004026f0 <mmap@plt>:
  4026f0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #520]
  4026f8:	add	x16, x16, #0x208
  4026fc:	br	x17

0000000000402700 <fread@plt>:
  402700:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402704:	ldr	x17, [x16, #528]
  402708:	add	x16, x16, #0x210
  40270c:	br	x17

0000000000402710 <dl_iterate_phdr@plt>:
  402710:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402714:	ldr	x17, [x16, #536]
  402718:	add	x16, x16, #0x218
  40271c:	br	x17

0000000000402720 <dgettext@plt>:
  402720:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402724:	ldr	x17, [x16, #544]
  402728:	add	x16, x16, #0x220
  40272c:	br	x17

0000000000402730 <free@plt>:
  402730:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402734:	ldr	x17, [x16, #552]
  402738:	add	x16, x16, #0x228
  40273c:	br	x17

0000000000402740 <ungetc@plt>:
  402740:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402744:	ldr	x17, [x16, #560]
  402748:	add	x16, x16, #0x230
  40274c:	br	x17

0000000000402750 <freopen@plt>:
  402750:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402754:	ldr	x17, [x16, #568]
  402758:	add	x16, x16, #0x238
  40275c:	br	x17

0000000000402760 <strchr@plt>:
  402760:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402764:	ldr	x17, [x16, #576]
  402768:	add	x16, x16, #0x240
  40276c:	br	x17

0000000000402770 <fwrite@plt>:
  402770:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402774:	ldr	x17, [x16, #584]
  402778:	add	x16, x16, #0x248
  40277c:	br	x17

0000000000402780 <fcntl@plt>:
  402780:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402784:	ldr	x17, [x16, #592]
  402788:	add	x16, x16, #0x250
  40278c:	br	x17

0000000000402790 <munmap@plt>:
  402790:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402794:	ldr	x17, [x16, #600]
  402798:	add	x16, x16, #0x258
  40279c:	br	x17

00000000004027a0 <fflush@plt>:
  4027a0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #608]
  4027a8:	add	x16, x16, #0x260
  4027ac:	br	x17

00000000004027b0 <strcpy@plt>:
  4027b0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #616]
  4027b8:	add	x16, x16, #0x268
  4027bc:	br	x17

00000000004027c0 <iconv_open@plt>:
  4027c0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #624]
  4027c8:	add	x16, x16, #0x270
  4027cc:	br	x17

00000000004027d0 <vsprintf@plt>:
  4027d0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #632]
  4027d8:	add	x16, x16, #0x278
  4027dc:	br	x17

00000000004027e0 <__lxstat@plt>:
  4027e0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #640]
  4027e8:	add	x16, x16, #0x280
  4027ec:	br	x17

00000000004027f0 <read@plt>:
  4027f0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #648]
  4027f8:	add	x16, x16, #0x288
  4027fc:	br	x17

0000000000402800 <memchr@plt>:
  402800:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402804:	ldr	x17, [x16, #656]
  402808:	add	x16, x16, #0x290
  40280c:	br	x17

0000000000402810 <isatty@plt>:
  402810:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402814:	ldr	x17, [x16, #664]
  402818:	add	x16, x16, #0x298
  40281c:	br	x17

0000000000402820 <asctime@plt>:
  402820:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402824:	ldr	x17, [x16, #672]
  402828:	add	x16, x16, #0x2a0
  40282c:	br	x17

0000000000402830 <fputc_unlocked@plt>:
  402830:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402834:	ldr	x17, [x16, #680]
  402838:	add	x16, x16, #0x2a8
  40283c:	br	x17

0000000000402840 <__fxstat@plt>:
  402840:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402844:	ldr	x17, [x16, #688]
  402848:	add	x16, x16, #0x2b0
  40284c:	br	x17

0000000000402850 <strstr@plt>:
  402850:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402854:	ldr	x17, [x16, #696]
  402858:	add	x16, x16, #0x2b8
  40285c:	br	x17

0000000000402860 <realpath@plt>:
  402860:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402864:	ldr	x17, [x16, #704]
  402868:	add	x16, x16, #0x2c0
  40286c:	br	x17

0000000000402870 <fputs_unlocked@plt>:
  402870:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402874:	ldr	x17, [x16, #712]
  402878:	add	x16, x16, #0x2c8
  40287c:	br	x17

0000000000402880 <__fsetlocking@plt>:
  402880:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402884:	ldr	x17, [x16, #720]
  402888:	add	x16, x16, #0x2d0
  40288c:	br	x17

0000000000402890 <strcspn@plt>:
  402890:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402894:	ldr	x17, [x16, #728]
  402898:	add	x16, x16, #0x2d8
  40289c:	br	x17

00000000004028a0 <vfprintf@plt>:
  4028a0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #736]
  4028a8:	add	x16, x16, #0x2e0
  4028ac:	br	x17

00000000004028b0 <printf@plt>:
  4028b0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #744]
  4028b8:	add	x16, x16, #0x2e8
  4028bc:	br	x17

00000000004028c0 <__errno_location@plt>:
  4028c0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #752]
  4028c8:	add	x16, x16, #0x2f0
  4028cc:	br	x17

00000000004028d0 <getenv@plt>:
  4028d0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #760]
  4028d8:	add	x16, x16, #0x2f8
  4028dc:	br	x17

00000000004028e0 <putchar@plt>:
  4028e0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #768]
  4028e8:	add	x16, x16, #0x300
  4028ec:	br	x17

00000000004028f0 <__xstat@plt>:
  4028f0:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #776]
  4028f8:	add	x16, x16, #0x308
  4028fc:	br	x17

0000000000402900 <pthread_mutex_lock@plt>:
  402900:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402904:	ldr	x17, [x16, #784]
  402908:	add	x16, x16, #0x310
  40290c:	br	x17

0000000000402910 <syscall@plt>:
  402910:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402914:	ldr	x17, [x16, #792]
  402918:	add	x16, x16, #0x318
  40291c:	br	x17

0000000000402920 <pthread_mutex_unlock@plt>:
  402920:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402924:	ldr	x17, [x16, #800]
  402928:	add	x16, x16, #0x320
  40292c:	br	x17

0000000000402930 <gettext@plt>:
  402930:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402934:	ldr	x17, [x16, #808]
  402938:	add	x16, x16, #0x328
  40293c:	br	x17

0000000000402940 <fprintf@plt>:
  402940:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402944:	ldr	x17, [x16, #816]
  402948:	add	x16, x16, #0x330
  40294c:	br	x17

0000000000402950 <ioctl@plt>:
  402950:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402954:	ldr	x17, [x16, #824]
  402958:	add	x16, x16, #0x338
  40295c:	br	x17

0000000000402960 <setlocale@plt>:
  402960:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402964:	ldr	x17, [x16, #832]
  402968:	add	x16, x16, #0x340
  40296c:	br	x17

0000000000402970 <ferror@plt>:
  402970:	adrp	x16, 478000 <memcpy@GLIBC_2.17>
  402974:	ldr	x17, [x16, #840]
  402978:	add	x16, x16, #0x348
  40297c:	br	x17

Disassembly of section .text:

0000000000402980 <_obstack_begin@@Base-0x372f8>:
  402980:	mov	w8, w1
  402984:	mov	x7, x2
  402988:	stp	x29, x30, [sp, #-16]!
  40298c:	mov	x29, sp
  402990:	bl	404858 <ferror@plt+0x1ee8>
  402994:	mov	x2, x0
  402998:	mov	w3, w8
  40299c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4029a0:	mov	x1, x7
  4029a4:	add	x0, x0, #0x4e6
  4029a8:	bl	405ad8 <ferror@plt+0x3168>
  4029ac:	stp	x29, x30, [sp, #-16]!
  4029b0:	mov	x0, #0x8                   	// #8
  4029b4:	mov	x29, sp
  4029b8:	bl	43b0a0 <_obstack_memory_used@@Base+0x1238>
  4029bc:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x3d198>
  4029c0:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x3d198>
  4029c4:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  4029c8:	ldr	x3, [x3, #4000]
  4029cc:	ldr	x2, [x2, #4032]
  4029d0:	add	x3, x3, #0x10
  4029d4:	ldr	x1, [x1, #3928]
  4029d8:	str	x3, [x0]
  4029dc:	bl	43beb8 <_obstack_memory_used@@Base+0x2050>
  4029e0:	stp	x29, x30, [sp, #-192]!
  4029e4:	mov	x29, sp
  4029e8:	stp	x19, x20, [sp, #16]
  4029ec:	mov	w20, w0
  4029f0:	ldr	x19, [x1]
  4029f4:	stp	x21, x22, [sp, #32]
  4029f8:	mov	x0, x19
  4029fc:	stp	x23, x24, [sp, #48]
  402a00:	mov	x24, x1
  402a04:	stp	x25, x26, [sp, #64]
  402a08:	stp	x27, x28, [sp, #80]
  402a0c:	bl	402330 <strlen@plt>
  402a10:	add	x0, x19, x0
  402a14:	cmp	x19, x0
  402a18:	b.eq	402a30 <ferror@plt+0xc0>  // b.none
  402a1c:	ldurb	w1, [x0, #-1]
  402a20:	cmp	w1, #0x2f
  402a24:	b.eq	402a30 <ferror@plt+0xc0>  // b.none
  402a28:	sub	x0, x0, #0x1
  402a2c:	b	402a14 <ferror@plt+0xa4>
  402a30:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  402a34:	adrp	x25, 44a000 <_obstack_memory_used@@Base+0x10198>
  402a38:	add	x25, x25, #0xe10
  402a3c:	adrp	x21, 44a000 <_obstack_memory_used@@Base+0x10198>
  402a40:	str	x0, [x1, #1520]
  402a44:	bl	439e8c <_obstack_memory_used@@Base+0x24>
  402a48:	bl	438bd8 <ferror@plt+0x36268>
  402a4c:	adrp	x19, 44a000 <_obstack_memory_used@@Base+0x10198>
  402a50:	bl	40d164 <ferror@plt+0xa7f4>
  402a54:	add	x22, x25, #0x128
  402a58:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  402a5c:	add	x21, x21, #0x9f8
  402a60:	add	x19, x19, #0xbff
  402a64:	mov	w1, #0x0                   	// #0
  402a68:	ldr	x0, [x0, #864]
  402a6c:	bl	404384 <ferror@plt+0x1a14>
  402a70:	mov	x2, x21
  402a74:	mov	x3, x22
  402a78:	mov	x1, x24
  402a7c:	mov	w0, w20
  402a80:	mov	x4, #0x0                   	// #0
  402a84:	bl	4026c0 <getopt_long@plt>
  402a88:	mov	w2, w0
  402a8c:	cmn	w0, #0x1
  402a90:	b.ne	402afc <ferror@plt+0x18c>  // b.any
  402a94:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  402a98:	add	x27, sp, #0xa0
  402a9c:	add	x20, x20, #0x568
  402aa0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  402aa4:	add	x0, x0, #0x540
  402aa8:	str	x0, [sp, #112]
  402aac:	ldr	x0, [sp, #112]
  402ab0:	ldr	w0, [x0]
  402ab4:	ldr	x19, [x24, w0, sxtw #3]
  402ab8:	cbz	x19, 403070 <ferror@plt+0x700>
  402abc:	ldr	x1, [sp, #112]
  402ac0:	add	w0, w0, #0x1
  402ac4:	strh	wzr, [sp, #162]
  402ac8:	stp	xzr, xzr, [sp, #168]
  402acc:	str	w0, [x1]
  402ad0:	bl	402470 <getpid@plt>
  402ad4:	ldr	x1, [x20, #8]
  402ad8:	str	w0, [sp, #184]
  402adc:	add	x0, x20, #0x8
  402ae0:	cbz	x1, 402bec <ferror@plt+0x27c>
  402ae4:	adrp	x2, 44a000 <_obstack_memory_used@@Base+0x10198>
  402ae8:	add	x2, x2, #0xc12
  402aec:	mov	w1, #0x8e                  	// #142
  402af0:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402af4:	add	x0, x0, #0x890
  402af8:	bl	402980 <ferror@plt+0x10>
  402afc:	cmp	w0, #0x70
  402b00:	b.eq	402bdc <ferror@plt+0x26c>  // b.none
  402b04:	b.gt	402b2c <ferror@plt+0x1bc>
  402b08:	cmp	w0, #0x68
  402b0c:	b.eq	402b6c <ferror@plt+0x1fc>  // b.none
  402b10:	cmp	w0, #0x6c
  402b14:	b.eq	402bcc <ferror@plt+0x25c>  // b.none
  402b18:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  402b1c:	mov	x1, x19
  402b20:	ldr	x0, [x0, #1336]
  402b24:	bl	402940 <fprintf@plt>
  402b28:	b	402a70 <ferror@plt+0x100>
  402b2c:	cmp	w0, #0x76
  402b30:	b.ne	402b18 <ferror@plt+0x1a8>  // b.any
  402b34:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  402b38:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  402b3c:	add	x2, x2, #0x74f
  402b40:	add	x1, x1, #0x748
  402b44:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402b48:	add	x0, x0, #0xb25
  402b4c:	bl	4028b0 <printf@plt>
  402b50:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402b54:	add	x0, x0, #0xb35
  402b58:	bl	402670 <puts@plt>
  402b5c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402b60:	add	x0, x0, #0xb67
  402b64:	bl	402670 <puts@plt>
  402b68:	b	402a70 <ferror@plt+0x100>
  402b6c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402b70:	add	x0, x0, #0x9fe
  402b74:	bl	402670 <puts@plt>
  402b78:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402b7c:	add	x0, x0, #0xa26
  402b80:	bl	402670 <puts@plt>
  402b84:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402b88:	add	x0, x0, #0xa43
  402b8c:	bl	402670 <puts@plt>
  402b90:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402b94:	add	x0, x0, #0xa6a
  402b98:	bl	402670 <puts@plt>
  402b9c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402ba0:	add	x0, x0, #0xa9a
  402ba4:	bl	402670 <puts@plt>
  402ba8:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402bac:	add	x0, x0, #0xac7
  402bb0:	bl	402670 <puts@plt>
  402bb4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  402bb8:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402bbc:	add	x1, x1, #0x755
  402bc0:	add	x0, x0, #0xaf3
  402bc4:	bl	4028b0 <printf@plt>
  402bc8:	b	402a70 <ferror@plt+0x100>
  402bcc:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  402bd0:	mov	w1, #0x1                   	// #1
  402bd4:	str	w1, [x0, #1448]
  402bd8:	b	402a70 <ferror@plt+0x100>
  402bdc:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  402be0:	mov	w1, #0x1                   	// #1
  402be4:	str	w1, [x0, #1384]
  402be8:	b	402a70 <ferror@plt+0x100>
  402bec:	mov	x1, #0xffffffff00000000    	// #-4294967296
  402bf0:	stp	xzr, x1, [x0, #8]
  402bf4:	mov	w2, #0x180                 	// #384
  402bf8:	mov	w1, #0x0                   	// #0
  402bfc:	str	wzr, [x0, #24]
  402c00:	str	wzr, [x0, #32]
  402c04:	mov	x0, x19
  402c08:	strh	wzr, [sp, #160]
  402c0c:	bl	4024c0 <open@plt>
  402c10:	mov	w21, w0
  402c14:	tbnz	w0, #31, 402c60 <ferror@plt+0x2f0>
  402c18:	mov	x2, x27
  402c1c:	mov	w0, w21
  402c20:	mov	w1, #0x7                   	// #7
  402c24:	bl	402780 <fcntl@plt>
  402c28:	cbz	w0, 402c3c <ferror@plt+0x2cc>
  402c2c:	bl	4028c0 <__errno_location@plt>
  402c30:	ldr	w0, [x0]
  402c34:	cmp	w0, #0x4
  402c38:	b.eq	402c18 <ferror@plt+0x2a8>  // b.none
  402c3c:	mov	w0, w21
  402c40:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x10198>
  402c44:	add	x1, x1, #0xc1c
  402c48:	bl	438c30 <ferror@plt+0x362c0>
  402c4c:	str	x0, [x20, #8]
  402c50:	add	x22, x20, #0x8
  402c54:	cbnz	x0, 402c7c <ferror@plt+0x30c>
  402c58:	mov	w0, w21
  402c5c:	bl	402600 <close@plt>
  402c60:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  402c64:	mov	x2, x19
  402c68:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x10198>
  402c6c:	add	x1, x1, #0xc1f
  402c70:	ldr	x0, [x0, #1336]
  402c74:	bl	402940 <fprintf@plt>
  402c78:	b	402aac <ferror@plt+0x13c>
  402c7c:	mov	x1, #0x0                   	// #0
  402c80:	mov	w21, #0x1                   	// #1
  402c84:	str	w21, [x22, #28]
  402c88:	bl	4023a0 <setbuf@plt>
  402c8c:	bl	403430 <ferror@plt+0xac0>
  402c90:	rev	w26, w0
  402c94:	mov	w1, #0x6461                	// #25697
  402c98:	movk	w1, #0x6763, lsl #16
  402c9c:	cmp	w0, w1
  402ca0:	b.ne	402cac <ferror@plt+0x33c>  // b.any
  402ca4:	mov	w22, w21
  402ca8:	b	402cbc <ferror@plt+0x34c>
  402cac:	cmp	w26, w1
  402cb0:	b.ne	402f54 <ferror@plt+0x5e4>  // b.any
  402cb4:	str	w21, [x22, #32]
  402cb8:	mov	w22, #0xffffffff            	// #-1
  402cbc:	bl	403430 <ferror@plt+0xac0>
  402cc0:	mov	w23, w0
  402cc4:	rev	w0, w0
  402cc8:	str	w26, [sp, #144]
  402ccc:	str	w0, [sp, #152]
  402cd0:	cmp	w21, #0x0
  402cd4:	adrp	x2, 44a000 <_obstack_memory_used@@Base+0x10198>
  402cd8:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402cdc:	add	x2, x2, #0x9a6
  402ce0:	add	x0, x0, #0x9ab
  402ce4:	csel	x2, x2, x0, ne  // ne = any
  402ce8:	cmn	w22, #0x1
  402cec:	b.eq	402f9c <ferror@plt+0x62c>  // b.none
  402cf0:	adrp	x5, 451000 <_obstack_memory_used@@Base+0x17198>
  402cf4:	add	x5, x5, #0xaab
  402cf8:	add	x4, sp, #0x98
  402cfc:	add	x3, sp, #0x90
  402d00:	mov	x1, x19
  402d04:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402d08:	add	x0, x0, #0xc43
  402d0c:	bl	4028b0 <printf@plt>
  402d10:	mov	w0, #0x322a                	// #12842
  402d14:	movk	w0, #0x4139, lsl #16
  402d18:	cmp	w23, w0
  402d1c:	b.eq	402d40 <ferror@plt+0x3d0>  // b.none
  402d20:	mov	w0, #0x3941                	// #14657
  402d24:	mov	x2, x27
  402d28:	movk	w0, #0x2a32, lsl #16
  402d2c:	mov	x1, x19
  402d30:	str	w0, [sp, #160]
  402d34:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402d38:	add	x0, x0, #0xc68
  402d3c:	bl	4028b0 <printf@plt>
  402d40:	bl	403430 <ferror@plt+0xac0>
  402d44:	mov	w2, w0
  402d48:	mov	x1, x19
  402d4c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402d50:	add	x0, x0, #0xc8e
  402d54:	bl	4028b0 <printf@plt>
  402d58:	cbnz	w21, 402d8c <ferror@plt+0x41c>
  402d5c:	bl	4034bc <ferror@plt+0xb4c>
  402d60:	mov	x2, x0
  402d64:	mov	x1, x19
  402d68:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402d6c:	add	x0, x0, #0xc9c
  402d70:	bl	4028b0 <printf@plt>
  402d74:	bl	403430 <ferror@plt+0xac0>
  402d78:	cbnz	w0, 402d8c <ferror@plt+0x41c>
  402d7c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402d80:	mov	x1, x19
  402d84:	add	x0, x0, #0xca8
  402d88:	bl	4028b0 <printf@plt>
  402d8c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402d90:	add	x0, x0, #0xcd3
  402d94:	mov	w23, #0x0                   	// #0
  402d98:	str	x0, [sp, #120]
  402d9c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402da0:	add	x0, x0, #0xced
  402da4:	str	x0, [sp, #128]
  402da8:	bl	4033ec <ferror@plt+0xa7c>
  402dac:	str	w0, [sp, #136]
  402db0:	bl	403430 <ferror@plt+0xac0>
  402db4:	mov	w26, w0
  402db8:	cbz	w0, 402f8c <ferror@plt+0x61c>
  402dbc:	bl	403430 <ferror@plt+0xac0>
  402dc0:	mov	w21, w0
  402dc4:	bl	4033ec <ferror@plt+0xa7c>
  402dc8:	str	w0, [sp, #104]
  402dcc:	sub	w3, w26, #0x1
  402dd0:	mov	w22, #0x4                   	// #4
  402dd4:	eor	w3, w3, w26
  402dd8:	lsr	w0, w3, #1
  402ddc:	sub	w1, w22, #0x1
  402de0:	str	w1, [sp, #108]
  402de4:	cbz	w0, 402e0c <ferror@plt+0x49c>
  402de8:	and	w1, w0, #0xff
  402dec:	cmp	w1, #0xff
  402df0:	b.eq	402fb0 <ferror@plt+0x640>  // b.none
  402df4:	ldr	x0, [sp, #120]
  402df8:	mov	w2, w26
  402dfc:	mov	x1, x19
  402e00:	str	w3, [sp, #140]
  402e04:	bl	4028b0 <printf@plt>
  402e08:	ldr	w3, [sp, #140]
  402e0c:	add	x28, x25, #0x50
  402e10:	ldr	w0, [x28]
  402e14:	cmp	w26, w0
  402e18:	b.eq	402e54 <ferror@plt+0x4e4>  // b.none
  402e1c:	ldr	x0, [x28, #32]
  402e20:	add	x28, x28, #0x18
  402e24:	cbnz	x0, 402e10 <ferror@plt+0x4a0>
  402e28:	tst	w26, #0xffff
  402e2c:	b.ne	402fbc <ferror@plt+0x64c>  // b.any
  402e30:	mov	w0, #0xfe5f0000            	// #-27328512
  402e34:	add	w0, w26, w0
  402e38:	lsr	w0, w0, #17
  402e3c:	cmp	w0, #0x9
  402e40:	cset	w5, cc  // cc = lo, ul, last
  402e44:	add	w0, w5, #0x1
  402e48:	add	x5, x25, #0x50
  402e4c:	mov	w1, #0x18                  	// #24
  402e50:	smaddl	x28, w0, w1, x5
  402e54:	cmp	w23, #0x0
  402e58:	ccmp	w22, w23, #0x0, ne  // ne = any
  402e5c:	b.ls	402e9c <ferror@plt+0x52c>  // b.plast
  402e60:	sub	w23, w23, #0x1
  402e64:	ldr	w0, [x27, x23, lsl #2]
  402e68:	sub	w1, w0, #0x1
  402e6c:	eor	w1, w1, w0
  402e70:	cmp	w3, w1, lsr #8
  402e74:	b.ne	402e8c <ferror@plt+0x51c>  // b.any
  402e78:	neg	w1, w0
  402e7c:	eor	w1, w1, w0
  402e80:	eor	w0, w26, w0
  402e84:	tst	w1, w0
  402e88:	b.eq	402e9c <ferror@plt+0x52c>  // b.none
  402e8c:	ldr	x0, [sp, #128]
  402e90:	mov	w2, w26
  402e94:	mov	x1, x19
  402e98:	bl	4028b0 <printf@plt>
  402e9c:	ldr	w0, [sp, #108]
  402ea0:	mov	w1, w22
  402ea4:	ldr	w2, [sp, #136]
  402ea8:	str	w26, [x27, w0, uxtw #2]
  402eac:	mov	x0, x19
  402eb0:	bl	40323c <ferror@plt+0x8cc>
  402eb4:	ldr	x3, [x28, #8]
  402eb8:	mov	w2, w21
  402ebc:	mov	w1, w26
  402ec0:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402ec4:	add	x0, x0, #0xd12
  402ec8:	bl	4028b0 <printf@plt>
  402ecc:	ldr	x6, [x28, #16]
  402ed0:	cbz	x6, 402ee8 <ferror@plt+0x578>
  402ed4:	mov	w3, w22
  402ed8:	mov	w2, w21
  402edc:	mov	w1, w26
  402ee0:	mov	x0, x19
  402ee4:	blr	x6
  402ee8:	mov	w0, #0xa                   	// #10
  402eec:	bl	4028e0 <putchar@plt>
  402ef0:	ldr	w0, [x20, #64]
  402ef4:	cbz	w0, 402f34 <ferror@plt+0x5c4>
  402ef8:	ldr	x0, [x28, #16]
  402efc:	cbz	x0, 402f34 <ferror@plt+0x5c4>
  402f00:	bl	4033ec <ferror@plt+0xa7c>
  402f04:	ldr	w1, [sp, #104]
  402f08:	ldr	w2, [sp, #104]
  402f0c:	sub	w1, w0, w1
  402f10:	cmp	w21, w1
  402f14:	sub	w0, w0, w2
  402f18:	mov	w2, w21
  402f1c:	b.cs	402fc4 <ferror@plt+0x654>  // b.hs, b.nlast
  402f20:	sub	x2, x0, x2
  402f24:	mov	x1, x19
  402f28:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402f2c:	add	x0, x0, #0xd1e
  402f30:	bl	4028b0 <printf@plt>
  402f34:	ldr	w0, [x20, #36]
  402f38:	add	x23, x20, #0x8
  402f3c:	cmp	w0, #0x0
  402f40:	b.gt	402fdc <ferror@plt+0x66c>
  402f44:	adrp	x2, 44a000 <_obstack_memory_used@@Base+0x10198>
  402f48:	mov	w1, #0x271                 	// #625
  402f4c:	add	x2, x2, #0xd74
  402f50:	b	402af0 <ferror@plt+0x180>
  402f54:	mov	w1, #0x6e6f                	// #28271
  402f58:	movk	w1, #0x6763, lsl #16
  402f5c:	cmp	w0, w1
  402f60:	b.eq	402f94 <ferror@plt+0x624>  // b.none
  402f64:	cmp	w26, w1
  402f68:	b.ne	402f7c <ferror@plt+0x60c>  // b.any
  402f6c:	str	w21, [x22, #32]
  402f70:	mov	w22, #0xffffffff            	// #-1
  402f74:	mov	w21, #0x0                   	// #0
  402f78:	b	402cbc <ferror@plt+0x34c>
  402f7c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402f80:	mov	x1, x19
  402f84:	add	x0, x0, #0xc2f
  402f88:	bl	4028b0 <printf@plt>
  402f8c:	bl	4033a4 <ferror@plt+0xa34>
  402f90:	b	402aac <ferror@plt+0x13c>
  402f94:	mov	w22, w21
  402f98:	b	402f74 <ferror@plt+0x604>
  402f9c:	adrp	x5, 44a000 <_obstack_memory_used@@Base+0x10198>
  402fa0:	add	x5, x5, #0x9b0
  402fa4:	b	402cf8 <ferror@plt+0x388>
  402fa8:	mov	w23, w22
  402fac:	b	402da8 <ferror@plt+0x438>
  402fb0:	ldr	w22, [sp, #108]
  402fb4:	lsr	w0, w0, #8
  402fb8:	b	402ddc <ferror@plt+0x46c>
  402fbc:	mov	w0, #0x1                   	// #1
  402fc0:	b	402e48 <ferror@plt+0x4d8>
  402fc4:	b.ls	402f34 <ferror@plt+0x5c4>  // b.plast
  402fc8:	sub	x2, x2, x0
  402fcc:	mov	x1, x19
  402fd0:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  402fd4:	add	x0, x0, #0xd4a
  402fd8:	b	402f30 <ferror@plt+0x5c0>
  402fdc:	ldr	w0, [sp, #104]
  402fe0:	ldr	w2, [x23, #16]
  402fe4:	add	w1, w21, w0
  402fe8:	ldr	w0, [x23, #8]
  402fec:	sub	w0, w1, w0
  402ff0:	cmp	w0, w2
  402ff4:	b.hi	40303c <ferror@plt+0x6cc>  // b.pmore
  402ff8:	str	w0, [x23, #12]
  402ffc:	ldr	x1, [x20, #8]
  403000:	cbz	x1, 403064 <ferror@plt+0x6f4>
  403004:	ldr	w0, [x20, #32]
  403008:	cmp	w0, #0x0
  40300c:	cbz	w0, 402fa8 <ferror@plt+0x638>
  403010:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403014:	adrp	x21, 44a000 <_obstack_memory_used@@Base+0x10198>
  403018:	add	x0, x0, #0x9dc
  40301c:	add	x21, x21, #0x9c6
  403020:	csel	x21, x21, x0, ge  // ge = tcont
  403024:	bl	4033ec <ferror@plt+0xa7c>
  403028:	mov	w2, w0
  40302c:	mov	x1, x19
  403030:	mov	x0, x21
  403034:	bl	4028b0 <printf@plt>
  403038:	b	402f8c <ferror@plt+0x61c>
  40303c:	ldr	x0, [x20, #8]
  403040:	stur	xzr, [x23, #12]
  403044:	lsl	w1, w1, #2
  403048:	mov	w2, #0x0                   	// #0
  40304c:	bl	402640 <fseek@plt>
  403050:	ldr	x0, [x20, #8]
  403054:	bl	4023c0 <ftell@plt>
  403058:	asr	x0, x0, #2
  40305c:	str	w0, [x23, #8]
  403060:	b	402ffc <ferror@plt+0x68c>
  403064:	adrp	x21, 44a000 <_obstack_memory_used@@Base+0x10198>
  403068:	add	x21, x21, #0x9c6
  40306c:	b	403024 <ferror@plt+0x6b4>
  403070:	mov	w0, #0x0                   	// #0
  403074:	ldp	x19, x20, [sp, #16]
  403078:	ldp	x21, x22, [sp, #32]
  40307c:	ldp	x23, x24, [sp, #48]
  403080:	ldp	x25, x26, [sp, #64]
  403084:	ldp	x27, x28, [sp, #80]
  403088:	ldp	x29, x30, [sp], #192
  40308c:	ret
  403090:	stp	x29, x30, [sp, #-32]!
  403094:	mov	x29, sp
  403098:	str	x19, [sp, #16]
  40309c:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  4030a0:	add	x19, x19, #0x738
  4030a4:	mov	x0, x19
  4030a8:	bl	40db14 <ferror@plt+0xb1a4>
  4030ac:	mov	x1, x19
  4030b0:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x3e198>
  4030b4:	ldr	x19, [sp, #16]
  4030b8:	add	x2, x2, #0x358
  4030bc:	ldp	x29, x30, [sp], #32
  4030c0:	adrp	x0, 40e000 <ferror@plt+0xb690>
  4030c4:	add	x0, x0, #0x1ec
  4030c8:	b	4023f0 <__cxa_atexit@plt>
  4030cc:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4030d0:	str	xzr, [x0, #1944]
  4030d4:	ret
  4030d8:	stp	x29, x30, [sp, #-32]!
  4030dc:	mov	x29, sp
  4030e0:	stp	x19, x20, [sp, #16]
  4030e4:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  4030e8:	add	x19, x19, #0x8f0
  4030ec:	mov	x20, #0x1c00                	// #7168
  4030f0:	movk	x20, #0x1, lsl #16
  4030f4:	mov	x0, x20
  4030f8:	stp	xzr, xzr, [x19]
  4030fc:	stp	xzr, xzr, [x19, #16]
  403100:	stp	xzr, xzr, [x19, #32]
  403104:	str	x20, [x19, #64]
  403108:	bl	4024b0 <malloc@plt>
  40310c:	str	x0, [x19, #56]
  403110:	cbz	x0, 403128 <ferror@plt+0x7b8>
  403114:	stp	x20, xzr, [x0]
  403118:	str	x0, [x19, #48]
  40311c:	ldp	x19, x20, [sp, #16]
  403120:	ldp	x29, x30, [sp], #32
  403124:	ret
  403128:	str	xzr, [x19, #48]
  40312c:	str	xzr, [x19, #64]
  403130:	b	40311c <ferror@plt+0x7ac>
  403134:	mov	x29, #0x0                   	// #0
  403138:	mov	x30, #0x0                   	// #0
  40313c:	mov	x5, x0
  403140:	ldr	x1, [sp]
  403144:	add	x2, sp, #0x8
  403148:	mov	x6, sp
  40314c:	movz	x0, #0x0, lsl #48
  403150:	movk	x0, #0x0, lsl #32
  403154:	movk	x0, #0x40, lsl #16
  403158:	movk	x0, #0x29e0
  40315c:	movz	x3, #0x0, lsl #48
  403160:	movk	x3, #0x0, lsl #32
  403164:	movk	x3, #0x44, lsl #16
  403168:	movk	x3, #0xa790
  40316c:	movz	x4, #0x0, lsl #48
  403170:	movk	x4, #0x0, lsl #32
  403174:	movk	x4, #0x44, lsl #16
  403178:	movk	x4, #0xa810
  40317c:	bl	402510 <__libc_start_main@plt>
  403180:	bl	402650 <abort@plt>
  403184:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x3d198>
  403188:	ldr	x0, [x0, #3960]
  40318c:	cbz	x0, 403194 <ferror@plt+0x824>
  403190:	b	402620 <__gmon_start__@plt>
  403194:	ret
  403198:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40319c:	add	x0, x0, #0x538
  4031a0:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  4031a4:	add	x1, x1, #0x538
  4031a8:	cmp	x1, x0
  4031ac:	b.eq	4031c4 <ferror@plt+0x854>  // b.none
  4031b0:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x10198>
  4031b4:	ldr	x1, [x1, #2152]
  4031b8:	cbz	x1, 4031c4 <ferror@plt+0x854>
  4031bc:	mov	x16, x1
  4031c0:	br	x16
  4031c4:	ret
  4031c8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4031cc:	add	x0, x0, #0x538
  4031d0:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  4031d4:	add	x1, x1, #0x538
  4031d8:	sub	x1, x1, x0
  4031dc:	lsr	x2, x1, #63
  4031e0:	add	x1, x2, x1, asr #3
  4031e4:	cmp	xzr, x1, asr #1
  4031e8:	asr	x1, x1, #1
  4031ec:	b.eq	403204 <ferror@plt+0x894>  // b.none
  4031f0:	adrp	x2, 44a000 <_obstack_memory_used@@Base+0x10198>
  4031f4:	ldr	x2, [x2, #2160]
  4031f8:	cbz	x2, 403204 <ferror@plt+0x894>
  4031fc:	mov	x16, x2
  403200:	br	x16
  403204:	ret
  403208:	stp	x29, x30, [sp, #-32]!
  40320c:	mov	x29, sp
  403210:	str	x19, [sp, #16]
  403214:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  403218:	ldrb	w0, [x19, #1376]
  40321c:	cbnz	w0, 40322c <ferror@plt+0x8bc>
  403220:	bl	403198 <ferror@plt+0x828>
  403224:	mov	w0, #0x1                   	// #1
  403228:	strb	w0, [x19, #1376]
  40322c:	ldr	x19, [sp, #16]
  403230:	ldp	x29, x30, [sp], #32
  403234:	ret
  403238:	b	4031c8 <ferror@plt+0x858>
  40323c:	stp	x29, x30, [sp, #-32]!
  403240:	mov	x29, sp
  403244:	stp	x19, x20, [sp, #16]
  403248:	mov	w19, w1
  40324c:	mov	w20, w2
  403250:	mov	x1, x0
  403254:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403258:	add	x0, x0, #0x878
  40325c:	bl	4028b0 <printf@plt>
  403260:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  403264:	ldr	w0, [x0, #1384]
  403268:	cbz	w0, 40327c <ferror@plt+0x90c>
  40326c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403270:	mov	w1, w20
  403274:	add	x0, x0, #0x87c
  403278:	bl	4028b0 <printf@plt>
  40327c:	lsl	w1, w19, #1
  403280:	adrp	x2, 44a000 <_obstack_memory_used@@Base+0x10198>
  403284:	ldp	x19, x20, [sp, #16]
  403288:	add	x2, x2, #0xe10
  40328c:	ldp	x29, x30, [sp], #32
  403290:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  403294:	add	x0, x0, #0x998
  403298:	b	4028b0 <printf@plt>
  40329c:	stp	x29, x30, [sp, #-48]!
  4032a0:	mov	x29, sp
  4032a4:	stp	x19, x20, [sp, #16]
  4032a8:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  4032ac:	add	x20, x20, #0x568
  4032b0:	stp	x21, x22, [sp, #32]
  4032b4:	mov	w21, w0
  4032b8:	ldp	w1, w19, [x20, #20]
  4032bc:	ldr	w0, [x20, #36]
  4032c0:	sub	w19, w19, w1
  4032c4:	cmp	w0, #0x0
  4032c8:	b.le	403378 <ferror@plt+0xa08>
  4032cc:	cmp	w19, w21
  4032d0:	b.cs	403380 <ferror@plt+0xa10>  // b.hs, b.nlast
  4032d4:	ldr	w3, [x20, #16]
  4032d8:	ldr	x0, [x20, #56]
  4032dc:	add	w3, w3, w1
  4032e0:	str	w3, [x20, #16]
  4032e4:	cbz	w19, 4032f4 <ferror@plt+0x984>
  4032e8:	lsl	w2, w19, #2
  4032ec:	add	x1, x0, w1, uxtw #2
  4032f0:	bl	4022f0 <memmove@plt>
  4032f4:	ldr	x1, [x20, #48]
  4032f8:	stp	wzr, w19, [x20, #20]
  4032fc:	add	w19, w19, w21
  403300:	cmp	x19, x1
  403304:	b.ls	403330 <ferror@plt+0x9c0>  // b.plast
  403308:	cmp	x1, #0x0
  40330c:	mov	x0, #0x400                 	// #1024
  403310:	csel	x1, x1, x0, ne  // ne = any
  403314:	add	x1, x19, x1
  403318:	lsl	x0, x1, #1
  40331c:	str	x0, [x20, #48]
  403320:	ldr	x0, [x20, #56]
  403324:	lsl	x1, x1, #3
  403328:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  40332c:	str	x0, [x20, #56]
  403330:	ldp	x2, x4, [x20, #48]
  403334:	mov	x1, #0x1                   	// #1
  403338:	ldr	w0, [x20, #24]
  40333c:	ldr	x3, [x20, #8]
  403340:	sub	w2, w2, w0
  403344:	add	x0, x4, w0, uxtw #2
  403348:	lsl	w2, w2, #2
  40334c:	bl	402700 <fread@plt>
  403350:	ldr	w1, [x20, #24]
  403354:	lsr	x0, x0, #2
  403358:	add	w1, w1, w0
  40335c:	str	w1, [x20, #24]
  403360:	cmp	w1, w21
  403364:	b.cs	403380 <ferror@plt+0xa10>  // b.hs, b.nlast
  403368:	ldr	w0, [x20, #28]
  40336c:	add	w21, w21, w0
  403370:	sub	w21, w21, w1
  403374:	stp	wzr, w21, [x20, #24]
  403378:	mov	x0, #0x0                   	// #0
  40337c:	b	403394 <ferror@plt+0xa24>
  403380:	ldr	x0, [x20, #56]
  403384:	ldr	w1, [x20, #20]
  403388:	add	w21, w1, w21
  40338c:	str	w21, [x20, #20]
  403390:	add	x0, x0, w1, uxtw #2
  403394:	ldp	x19, x20, [sp, #16]
  403398:	ldp	x21, x22, [sp, #32]
  40339c:	ldp	x29, x30, [sp], #48
  4033a0:	ret
  4033a4:	stp	x29, x30, [sp, #-32]!
  4033a8:	mov	x29, sp
  4033ac:	stp	x19, x20, [sp, #16]
  4033b0:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  4033b4:	add	x19, x19, #0x568
  4033b8:	ldr	x0, [x19, #8]
  4033bc:	cbz	x0, 4033cc <ferror@plt+0xa5c>
  4033c0:	bl	402450 <fclose@plt>
  4033c4:	str	xzr, [x19, #8]
  4033c8:	str	wzr, [x19, #24]
  4033cc:	ldr	x0, [x19, #56]
  4033d0:	bl	402730 <free@plt>
  4033d4:	str	wzr, [x19, #36]
  4033d8:	ldr	w0, [x19, #32]
  4033dc:	stp	xzr, xzr, [x19, #48]
  4033e0:	ldp	x19, x20, [sp, #16]
  4033e4:	ldp	x29, x30, [sp], #32
  4033e8:	ret
  4033ec:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  4033f0:	add	x1, x1, #0x568
  4033f4:	add	x1, x1, #0x8
  4033f8:	ldr	w0, [x1, #28]
  4033fc:	cmp	w0, #0x0
  403400:	b.gt	403424 <ferror@plt+0xab4>
  403404:	stp	x29, x30, [sp, #-16]!
  403408:	adrp	x2, 44a000 <_obstack_memory_used@@Base+0x10198>
  40340c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403410:	mov	x29, sp
  403414:	add	x2, x2, #0x882
  403418:	add	x0, x0, #0x890
  40341c:	mov	w1, #0x4a                  	// #74
  403420:	bl	402980 <ferror@plt+0x10>
  403424:	ldp	w2, w0, [x1, #8]
  403428:	add	w0, w2, w0
  40342c:	ret
  403430:	stp	x29, x30, [sp, #-16]!
  403434:	mov	w0, #0x1                   	// #1
  403438:	mov	x29, sp
  40343c:	bl	40329c <ferror@plt+0x92c>
  403440:	cbz	x0, 403460 <ferror@plt+0xaf0>
  403444:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  403448:	ldr	w0, [x0]
  40344c:	ldr	w1, [x1, #1424]
  403450:	cbz	w1, 403458 <ferror@plt+0xae8>
  403454:	rev	w0, w0
  403458:	ldp	x29, x30, [sp], #16
  40345c:	ret
  403460:	mov	w0, #0x0                   	// #0
  403464:	b	403458 <ferror@plt+0xae8>
  403468:	stp	x29, x30, [sp, #-32]!
  40346c:	mov	x29, sp
  403470:	str	x19, [sp, #16]
  403474:	bl	403430 <ferror@plt+0xac0>
  403478:	mov	w19, w0
  40347c:	bl	403430 <ferror@plt+0xac0>
  403480:	mov	w1, w19
  403484:	mov	w2, w0
  403488:	ldr	x19, [sp, #16]
  40348c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403490:	ldp	x29, x30, [sp], #32
  403494:	add	x0, x0, #0x8a4
  403498:	b	4028b0 <printf@plt>
  40349c:	stp	x29, x30, [sp, #-16]!
  4034a0:	mov	x29, sp
  4034a4:	bl	403430 <ferror@plt+0xac0>
  4034a8:	mov	w1, w0
  4034ac:	ldp	x29, x30, [sp], #16
  4034b0:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  4034b4:	add	x0, x0, #0x8ba
  4034b8:	b	4028b0 <printf@plt>
  4034bc:	stp	x29, x30, [sp, #-16]!
  4034c0:	mov	x29, sp
  4034c4:	bl	403430 <ferror@plt+0xac0>
  4034c8:	cbz	w0, 4034d4 <ferror@plt+0xb64>
  4034cc:	ldp	x29, x30, [sp], #16
  4034d0:	b	40329c <ferror@plt+0x92c>
  4034d4:	mov	x0, #0x0                   	// #0
  4034d8:	ldp	x29, x30, [sp], #16
  4034dc:	ret
  4034e0:	stp	x29, x30, [sp, #-80]!
  4034e4:	mov	x29, sp
  4034e8:	stp	x21, x22, [sp, #32]
  4034ec:	mov	x22, x0
  4034f0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4034f4:	stp	x19, x20, [sp, #16]
  4034f8:	ldr	w0, [x0, #1448]
  4034fc:	stp	x23, x24, [sp, #48]
  403500:	stp	x25, x26, [sp, #64]
  403504:	cbz	w0, 403548 <ferror@plt+0xbd8>
  403508:	mov	w23, w3
  40350c:	adrp	x24, 44a000 <_obstack_memory_used@@Base+0x10198>
  403510:	adrp	x25, 44a000 <_obstack_memory_used@@Base+0x10198>
  403514:	bl	403430 <ferror@plt+0xac0>
  403518:	add	x24, x24, #0x8e0
  40351c:	mov	w21, w0
  403520:	add	x25, x25, #0x8c5
  403524:	mov	x19, #0x0                   	// #0
  403528:	bl	4033ec <ferror@plt+0xa7c>
  40352c:	mov	w26, w0
  403530:	bl	403430 <ferror@plt+0xac0>
  403534:	mov	w20, w0
  403538:	cbnz	w0, 403560 <ferror@plt+0xbf0>
  40353c:	bl	4034bc <ferror@plt+0xb4c>
  403540:	mov	x19, x0
  403544:	cbnz	x0, 403564 <ferror@plt+0xbf4>
  403548:	ldp	x19, x20, [sp, #16]
  40354c:	ldp	x21, x22, [sp, #32]
  403550:	ldp	x23, x24, [sp, #48]
  403554:	ldp	x25, x26, [sp, #64]
  403558:	ldp	x29, x30, [sp], #80
  40355c:	ret
  403560:	cbnz	x19, 40359c <ferror@plt+0xc2c>
  403564:	mov	w0, #0xa                   	// #10
  403568:	bl	4028e0 <putchar@plt>
  40356c:	mov	w2, w26
  403570:	mov	w1, w23
  403574:	mov	x0, x22
  403578:	bl	40323c <ferror@plt+0x8cc>
  40357c:	mov	w1, w21
  403580:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403584:	add	x0, x0, #0x8c8
  403588:	bl	4028b0 <printf@plt>
  40358c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x17198>
  403590:	add	x1, x1, #0xaab
  403594:	cbz	w20, 4035b4 <ferror@plt+0xc44>
  403598:	mov	x19, x1
  40359c:	mov	x1, x19
  4035a0:	mov	w2, w20
  4035a4:	mov	x0, x24
  4035a8:	mov	x19, x25
  4035ac:	bl	4028b0 <printf@plt>
  4035b0:	b	403528 <ferror@plt+0xbb8>
  4035b4:	mov	x2, x19
  4035b8:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  4035bc:	adrp	x19, 453000 <_obstack_memory_used@@Base+0x19198>
  4035c0:	add	x0, x0, #0x8e5
  4035c4:	add	x19, x19, #0x4d
  4035c8:	bl	4028b0 <printf@plt>
  4035cc:	b	403528 <ferror@plt+0xbb8>
  4035d0:	stp	x29, x30, [sp, #-96]!
  4035d4:	sub	w2, w2, #0x1
  4035d8:	mov	x29, sp
  4035dc:	stp	x19, x20, [sp, #16]
  4035e0:	lsr	w20, w2, #1
  4035e4:	mov	w1, w20
  4035e8:	stp	x21, x22, [sp, #32]
  4035ec:	stp	x23, x24, [sp, #48]
  4035f0:	mov	x23, x0
  4035f4:	mov	w24, w3
  4035f8:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  4035fc:	add	x0, x0, #0x8ec
  403600:	stp	x25, x26, [sp, #64]
  403604:	str	x27, [sp, #80]
  403608:	bl	4028b0 <printf@plt>
  40360c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  403610:	ldr	w0, [x0, #1448]
  403614:	cbz	w0, 4036dc <ferror@plt+0xd6c>
  403618:	adrp	x25, 44a000 <_obstack_memory_used@@Base+0x10198>
  40361c:	adrp	x26, 44a000 <_obstack_memory_used@@Base+0x10198>
  403620:	bl	403430 <ferror@plt+0xac0>
  403624:	add	x25, x25, #0x8c8
  403628:	mov	w22, w0
  40362c:	add	x26, x26, #0x8f5
  403630:	mov	w21, #0x0                   	// #0
  403634:	cmp	w21, w20
  403638:	b.eq	4036dc <ferror@plt+0xd6c>  // b.none
  40363c:	tst	x21, #0x3
  403640:	b.ne	40366c <ferror@plt+0xcfc>  // b.any
  403644:	mov	w0, #0xa                   	// #10
  403648:	bl	4028e0 <putchar@plt>
  40364c:	bl	4033ec <ferror@plt+0xa7c>
  403650:	mov	w2, w0
  403654:	mov	w1, w24
  403658:	mov	x0, x23
  40365c:	bl	40323c <ferror@plt+0x8cc>
  403660:	mov	w1, w22
  403664:	mov	x0, x25
  403668:	bl	4028b0 <printf@plt>
  40366c:	bl	403430 <ferror@plt+0xac0>
  403670:	mov	w27, w0
  403674:	bl	403430 <ferror@plt+0xac0>
  403678:	mov	w19, w0
  40367c:	mov	w2, w0
  403680:	mov	w1, w27
  403684:	mov	x0, x26
  403688:	bl	4028b0 <printf@plt>
  40368c:	cbz	w19, 4036d4 <ferror@plt+0xd64>
  403690:	mov	w1, #0x28                  	// #40
  403694:	tbz	w19, #0, 4036a8 <ferror@plt+0xd38>
  403698:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  40369c:	add	x0, x0, #0x8fe
  4036a0:	bl	4028b0 <printf@plt>
  4036a4:	mov	w1, #0x2c                  	// #44
  4036a8:	tbz	w19, #1, 4036bc <ferror@plt+0xd4c>
  4036ac:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  4036b0:	add	x0, x0, #0x905
  4036b4:	bl	4028b0 <printf@plt>
  4036b8:	mov	w1, #0x2c                  	// #44
  4036bc:	tbz	w19, #2, 4036cc <ferror@plt+0xd5c>
  4036c0:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  4036c4:	add	x0, x0, #0x90c
  4036c8:	bl	4028b0 <printf@plt>
  4036cc:	mov	w0, #0x29                  	// #41
  4036d0:	bl	4028e0 <putchar@plt>
  4036d4:	add	w21, w21, #0x1
  4036d8:	b	403634 <ferror@plt+0xcc4>
  4036dc:	ldp	x19, x20, [sp, #16]
  4036e0:	ldp	x21, x22, [sp, #32]
  4036e4:	ldp	x23, x24, [sp, #48]
  4036e8:	ldp	x25, x26, [sp, #64]
  4036ec:	ldr	x27, [sp, #80]
  4036f0:	ldp	x29, x30, [sp], #96
  4036f4:	ret
  4036f8:	stp	x29, x30, [sp, #-48]!
  4036fc:	mov	x29, sp
  403700:	stp	x19, x20, [sp, #16]
  403704:	mov	w19, w2
  403708:	stp	x21, x22, [sp, #32]
  40370c:	bl	4033ec <ferror@plt+0xa7c>
  403710:	cbnz	w19, 40372c <ferror@plt+0xdbc>
  403714:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403718:	add	x0, x0, #0x918
  40371c:	ldp	x19, x20, [sp, #16]
  403720:	ldp	x21, x22, [sp, #32]
  403724:	ldp	x29, x30, [sp], #48
  403728:	b	4028b0 <printf@plt>
  40372c:	mov	w20, w0
  403730:	bl	403430 <ferror@plt+0xac0>
  403734:	mov	w1, w0
  403738:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  40373c:	add	x0, x0, #0x925
  403740:	bl	4028b0 <printf@plt>
  403744:	bl	403430 <ferror@plt+0xac0>
  403748:	mov	w1, w0
  40374c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403750:	add	x0, x0, #0x92f
  403754:	bl	4028b0 <printf@plt>
  403758:	bl	403430 <ferror@plt+0xac0>
  40375c:	mov	w1, w0
  403760:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403764:	add	x0, x0, #0x948
  403768:	bl	4028b0 <printf@plt>
  40376c:	bl	4033ec <ferror@plt+0xa7c>
  403770:	mov	w1, w0
  403774:	sub	x0, x1, w20, uxtw
  403778:	cmp	x0, w19, uxtw
  40377c:	b.cs	403810 <ferror@plt+0xea0>  // b.hs, b.nlast
  403780:	bl	4034bc <ferror@plt+0xb4c>
  403784:	mov	x1, x0
  403788:	cbnz	x0, 403794 <ferror@plt+0xe24>
  40378c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x10198>
  403790:	add	x1, x1, #0x913
  403794:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403798:	add	x0, x0, #0x95e
  40379c:	bl	4028b0 <printf@plt>
  4037a0:	bl	403430 <ferror@plt+0xac0>
  4037a4:	mov	w19, w0
  4037a8:	bl	4034bc <ferror@plt+0xb4c>
  4037ac:	mov	x1, x0
  4037b0:	cbnz	x0, 4037bc <ferror@plt+0xe4c>
  4037b4:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x10198>
  4037b8:	add	x1, x1, #0x913
  4037bc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  4037c0:	add	x0, x0, #0xe2b
  4037c4:	bl	4028b0 <printf@plt>
  4037c8:	bl	403430 <ferror@plt+0xac0>
  4037cc:	mov	w20, w0
  4037d0:	bl	403430 <ferror@plt+0xac0>
  4037d4:	mov	w21, w0
  4037d8:	bl	403430 <ferror@plt+0xac0>
  4037dc:	mov	w22, w0
  4037e0:	bl	403430 <ferror@plt+0xac0>
  4037e4:	mov	w4, w0
  4037e8:	mov	w3, w22
  4037ec:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  4037f0:	mov	w2, w21
  4037f4:	mov	w1, w20
  4037f8:	add	x0, x0, #0x965
  4037fc:	bl	4028b0 <printf@plt>
  403800:	cbz	w19, 403810 <ferror@plt+0xea0>
  403804:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403808:	add	x0, x0, #0x972
  40380c:	b	40371c <ferror@plt+0xdac>
  403810:	ldp	x19, x20, [sp, #16]
  403814:	ldp	x21, x22, [sp, #32]
  403818:	ldp	x29, x30, [sp], #48
  40381c:	ret
  403820:	stp	x29, x30, [sp, #-80]!
  403824:	mov	x29, sp
  403828:	stp	x19, x20, [sp, #16]
  40382c:	lsr	w20, w2, #1
  403830:	mov	w2, #0xfe5f0000            	// #-27328512
  403834:	add	w1, w1, w2
  403838:	stp	x23, x24, [sp, #48]
  40383c:	mov	x23, x0
  403840:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403844:	add	x0, x0, #0xe10
  403848:	add	x0, x0, #0x8
  40384c:	lsr	w1, w1, #17
  403850:	stp	x21, x22, [sp, #32]
  403854:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x3e198>
  403858:	add	x21, x21, #0x568
  40385c:	ldr	x1, [x0, x1, lsl #3]
  403860:	mov	w24, w3
  403864:	mov	w2, w20
  403868:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  40386c:	add	x0, x0, #0x97f
  403870:	str	x25, [sp, #64]
  403874:	bl	4028b0 <printf@plt>
  403878:	ldr	w0, [x21, #64]
  40387c:	cbz	w0, 403914 <ferror@plt+0xfa4>
  403880:	adrp	x25, 44a000 <_obstack_memory_used@@Base+0x10198>
  403884:	adrp	x22, 44a000 <_obstack_memory_used@@Base+0x10198>
  403888:	add	x25, x25, #0x98d
  40388c:	add	x22, x22, #0x9a1
  403890:	mov	w19, #0x0                   	// #0
  403894:	cmp	w19, w20
  403898:	b.eq	403914 <ferror@plt+0xfa4>  // b.none
  40389c:	tst	x19, #0x7
  4038a0:	b.ne	4038cc <ferror@plt+0xf5c>  // b.any
  4038a4:	mov	w0, #0xa                   	// #10
  4038a8:	bl	4028e0 <putchar@plt>
  4038ac:	bl	4033ec <ferror@plt+0xa7c>
  4038b0:	mov	w2, w0
  4038b4:	mov	w1, w24
  4038b8:	mov	x0, x23
  4038bc:	bl	40323c <ferror@plt+0x8cc>
  4038c0:	mov	w1, w19
  4038c4:	mov	x0, x25
  4038c8:	bl	4028b0 <printf@plt>
  4038cc:	mov	w0, #0x2                   	// #2
  4038d0:	bl	40329c <ferror@plt+0x92c>
  4038d4:	cbz	x0, 40390c <ferror@plt+0xf9c>
  4038d8:	ldr	w3, [x21, #40]
  4038dc:	ldr	w1, [x0]
  4038e0:	cbz	w3, 4038e8 <ferror@plt+0xf78>
  4038e4:	rev	w1, w1
  4038e8:	mov	w2, w1
  4038ec:	ldr	w1, [x0, #4]
  4038f0:	cbz	w3, 4038f8 <ferror@plt+0xf88>
  4038f4:	rev	w1, w1
  4038f8:	orr	x1, x2, x1, lsl #32
  4038fc:	mov	x0, x22
  403900:	add	w19, w19, #0x1
  403904:	bl	4028b0 <printf@plt>
  403908:	b	403894 <ferror@plt+0xf24>
  40390c:	mov	x1, #0x0                   	// #0
  403910:	b	4038fc <ferror@plt+0xf8c>
  403914:	ldp	x19, x20, [sp, #16]
  403918:	ldp	x21, x22, [sp, #32]
  40391c:	ldp	x23, x24, [sp, #48]
  403920:	ldr	x25, [sp, #64]
  403924:	ldp	x29, x30, [sp], #80
  403928:	ret
  40392c:	stp	x29, x30, [sp, #-80]!
  403930:	mov	x29, sp
  403934:	stp	x19, x20, [sp, #16]
  403938:	mov	x19, x0
  40393c:	stp	x21, x22, [sp, #32]
  403940:	stp	x23, x24, [sp, #48]
  403944:	mov	w24, #0x23                  	// #35
  403948:	str	x25, [sp, #64]
  40394c:	bl	402330 <strlen@plt>
  403950:	add	x0, x0, #0x1
  403954:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  403958:	mov	x21, x0
  40395c:	mov	x3, x0
  403960:	mov	w25, #0x5e                  	// #94
  403964:	ldrb	w0, [x19]
  403968:	cbz	w0, 4039dc <ferror@plt+0x106c>
  40396c:	mov	x20, x19
  403970:	ldrb	w22, [x20]
  403974:	cbz	w22, 403990 <ferror@plt+0x1020>
  403978:	cmp	w22, #0x2f
  40397c:	b.eq	403990 <ferror@plt+0x1020>  // b.none
  403980:	add	x20, x20, #0x1
  403984:	b	403970 <ferror@plt+0x1000>
  403988:	mov	x19, x20
  40398c:	b	403964 <ferror@plt+0xff4>
  403990:	sub	x23, x20, x19
  403994:	cmp	x23, #0x2
  403998:	b.ne	4039c4 <ferror@plt+0x1054>  // b.any
  40399c:	cmp	w0, #0x2e
  4039a0:	b.ne	4039c4 <ferror@plt+0x1054>  // b.any
  4039a4:	ldrb	w0, [x19, #1]
  4039a8:	cmp	w0, #0x2e
  4039ac:	b.ne	4039c4 <ferror@plt+0x1054>  // b.any
  4039b0:	strb	w25, [x3], #1
  4039b4:	cbz	w22, 403988 <ferror@plt+0x1018>
  4039b8:	add	x19, x20, #0x1
  4039bc:	strb	w24, [x3], #1
  4039c0:	b	403964 <ferror@plt+0xff4>
  4039c4:	mov	x0, x3
  4039c8:	mov	x2, x23
  4039cc:	mov	x1, x19
  4039d0:	bl	4022e0 <memcpy@plt>
  4039d4:	add	x3, x0, x23
  4039d8:	b	4039b4 <ferror@plt+0x1044>
  4039dc:	strb	wzr, [x3]
  4039e0:	mov	x0, x21
  4039e4:	ldp	x19, x20, [sp, #16]
  4039e8:	ldp	x21, x22, [sp, #32]
  4039ec:	ldp	x23, x24, [sp, #48]
  4039f0:	ldr	x25, [sp, #64]
  4039f4:	ldp	x29, x30, [sp], #80
  4039f8:	ret
  4039fc:	adrp	x4, 44b000 <_obstack_memory_used@@Base+0x11198>
  403a00:	add	x4, x4, #0x10
  403a04:	mov	x3, x0
  403a08:	mov	w2, #0x0                   	// #0
  403a0c:	mov	w0, #0x1e                  	// #30
  403a10:	cmp	w0, w2
  403a14:	b.eq	403a44 <ferror@plt+0x10d4>  // b.none
  403a18:	sub	w1, w0, w2
  403a1c:	add	w5, w2, w1, lsr #1
  403a20:	add	w1, w2, w1, lsr #1
  403a24:	lsl	x1, x1, #4
  403a28:	ldr	w1, [x4, x1]
  403a2c:	cmp	x1, x3
  403a30:	b.cs	403a3c <ferror@plt+0x10cc>  // b.hs, b.nlast
  403a34:	add	w2, w5, #0x1
  403a38:	b	403a10 <ferror@plt+0x10a0>
  403a3c:	mov	w0, w5
  403a40:	b	403a10 <ferror@plt+0x10a0>
  403a44:	ubfiz	x1, x0, #4, #32
  403a48:	ldr	w1, [x4, x1]
  403a4c:	cmp	x1, x3
  403a50:	b.cs	403a74 <ferror@plt+0x1104>  // b.hs, b.nlast
  403a54:	stp	x29, x30, [sp, #-16]!
  403a58:	adrp	x2, 44a000 <_obstack_memory_used@@Base+0x10198>
  403a5c:	adrp	x0, 44a000 <_obstack_memory_used@@Base+0x10198>
  403a60:	mov	x29, sp
  403a64:	add	x2, x2, #0xfd8
  403a68:	add	x0, x0, #0xff6
  403a6c:	mov	w1, #0x60                  	// #96
  403a70:	bl	402980 <ferror@plt+0x10>
  403a74:	ret
  403a78:	ret
  403a7c:	stp	x29, x30, [sp, #-32]!
  403a80:	mov	x29, sp
  403a84:	stp	x19, x20, [sp, #16]
  403a88:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  403a8c:	add	x19, x19, #0x5b0
  403a90:	ldarb	w0, [x19]
  403a94:	tbnz	w0, #0, 403ad0 <ferror@plt+0x1160>
  403a98:	mov	x0, x19
  403a9c:	bl	43a480 <_obstack_memory_used@@Base+0x618>
  403aa0:	cbz	w0, 403ad0 <ferror@plt+0x1160>
  403aa4:	add	x20, x19, #0x8
  403aa8:	mov	x0, x20
  403aac:	bl	403ae0 <ferror@plt+0x1170>
  403ab0:	mov	x0, x19
  403ab4:	bl	43a610 <_obstack_memory_used@@Base+0x7a8>
  403ab8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x3e198>
  403abc:	adrp	x0, 403000 <ferror@plt+0x690>
  403ac0:	add	x2, x2, #0x358
  403ac4:	mov	x1, x20
  403ac8:	add	x0, x0, #0xc70
  403acc:	bl	4023f0 <__cxa_atexit@plt>
  403ad0:	add	x0, x19, #0x8
  403ad4:	ldp	x19, x20, [sp, #16]
  403ad8:	ldp	x29, x30, [sp], #32
  403adc:	ret
  403ae0:	stp	x29, x30, [sp, #-64]!
  403ae4:	mov	x29, sp
  403ae8:	stp	x19, x20, [sp, #16]
  403aec:	mov	x20, x0
  403af0:	mov	x0, #0x30                  	// #48
  403af4:	stp	x21, x22, [sp, #32]
  403af8:	adrp	x21, 44b000 <_obstack_memory_used@@Base+0x11198>
  403afc:	add	x21, x21, #0x10
  403b00:	str	x23, [sp, #48]
  403b04:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  403b08:	mov	x19, x0
  403b0c:	strb	wzr, [x0, #44]
  403b10:	mov	x0, #0xd                   	// #13
  403b14:	stp	xzr, xzr, [x19, #16]
  403b18:	str	xzr, [x19, #32]
  403b1c:	bl	4039fc <ferror@plt+0x108c>
  403b20:	mov	w22, w0
  403b24:	mov	x1, #0x10                  	// #16
  403b28:	ubfiz	x0, x22, #4, #32
  403b2c:	ldr	w23, [x21, x0]
  403b30:	mov	x0, x23
  403b34:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  403b38:	mov	x1, #0x0                   	// #0
  403b3c:	cmp	x23, x1
  403b40:	b.ls	403b54 <ferror@plt+0x11e4>  // b.plast
  403b44:	lsl	x2, x1, #4
  403b48:	add	x1, x1, #0x1
  403b4c:	str	xzr, [x0, x2]
  403b50:	b	403b3c <ferror@plt+0x11cc>
  403b54:	stp	x0, x23, [x19]
  403b58:	mov	x0, #0x30                  	// #48
  403b5c:	str	w22, [x19, #40]
  403b60:	str	x19, [x20, #40]
  403b64:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  403b68:	mov	x19, x0
  403b6c:	strb	wzr, [x0, #44]
  403b70:	mov	x0, #0xd                   	// #13
  403b74:	stp	xzr, xzr, [x19, #16]
  403b78:	str	xzr, [x19, #32]
  403b7c:	bl	4039fc <ferror@plt+0x108c>
  403b80:	mov	w22, w0
  403b84:	mov	x1, #0x18                  	// #24
  403b88:	ubfiz	x0, x22, #4, #32
  403b8c:	ldr	w23, [x21, x0]
  403b90:	mov	x0, x23
  403b94:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  403b98:	mov	x1, #0x0                   	// #0
  403b9c:	mov	x3, #0x18                  	// #24
  403ba0:	cmp	x23, x1
  403ba4:	b.ls	403bb8 <ferror@plt+0x1248>  // b.plast
  403ba8:	mul	x2, x1, x3
  403bac:	add	x1, x1, #0x1
  403bb0:	str	xzr, [x0, x2]
  403bb4:	b	403ba0 <ferror@plt+0x1230>
  403bb8:	stp	x0, x23, [x19]
  403bbc:	mov	x0, #0x30                  	// #48
  403bc0:	str	w22, [x19, #40]
  403bc4:	str	x19, [x20, #48]
  403bc8:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  403bcc:	mov	x19, x0
  403bd0:	strb	wzr, [x0, #44]
  403bd4:	mov	x0, #0xd                   	// #13
  403bd8:	stp	xzr, xzr, [x19, #16]
  403bdc:	str	xzr, [x19, #32]
  403be0:	bl	4039fc <ferror@plt+0x108c>
  403be4:	mov	w22, w0
  403be8:	mov	x1, #0x18                  	// #24
  403bec:	ubfiz	x0, x22, #4, #32
  403bf0:	ldr	w21, [x21, x0]
  403bf4:	mov	x0, x21
  403bf8:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  403bfc:	mov	x1, #0x0                   	// #0
  403c00:	mov	x3, #0x18                  	// #24
  403c04:	cmp	x21, x1
  403c08:	b.ls	403c1c <ferror@plt+0x12ac>  // b.plast
  403c0c:	mul	x2, x1, x3
  403c10:	add	x1, x1, #0x1
  403c14:	str	xzr, [x0, x2]
  403c18:	b	403c04 <ferror@plt+0x1294>
  403c1c:	ldr	x23, [sp, #48]
  403c20:	stp	x0, x21, [x19]
  403c24:	str	w22, [x19, #40]
  403c28:	ldp	x21, x22, [sp, #32]
  403c2c:	str	x19, [x20]
  403c30:	ldp	x19, x20, [sp, #16]
  403c34:	ldp	x29, x30, [sp], #64
  403c38:	ret
  403c3c:	ldr	x3, [x0, #8]
  403c40:	ldr	x1, [x0]
  403c44:	cmp	x1, x3
  403c48:	b.cs	403c68 <ferror@plt+0x12f8>  // b.hs, b.nlast
  403c4c:	ldr	x2, [x1]
  403c50:	cbz	x2, 403c5c <ferror@plt+0x12ec>
  403c54:	cmp	x2, #0x1
  403c58:	b.ne	403c6c <ferror@plt+0x12fc>  // b.any
  403c5c:	add	x1, x1, #0x10
  403c60:	str	x1, [x0]
  403c64:	b	403c40 <ferror@plt+0x12d0>
  403c68:	stp	xzr, xzr, [x0]
  403c6c:	ret
  403c70:	stp	x29, x30, [sp, #-48]!
  403c74:	mov	x29, sp
  403c78:	stp	x19, x20, [sp, #16]
  403c7c:	mov	x19, x0
  403c80:	ldr	x0, [x0, #40]
  403c84:	ldp	x1, x0, [x0]
  403c88:	add	x0, x1, x0, lsl #4
  403c8c:	stp	x1, x0, [sp, #32]
  403c90:	add	x0, sp, #0x20
  403c94:	bl	403c3c <ferror@plt+0x12cc>
  403c98:	ldr	x0, [sp, #32]
  403c9c:	cbz	x0, 403ccc <ferror@plt+0x135c>
  403ca0:	ldr	x0, [x0]
  403ca4:	cbnz	x0, 403cfc <ferror@plt+0x138c>
  403ca8:	ldr	x0, [sp, #32]
  403cac:	ldr	x0, [x0, #8]
  403cb0:	cbz	x0, 403cbc <ferror@plt+0x134c>
  403cb4:	mov	x1, #0x20                  	// #32
  403cb8:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  403cbc:	ldr	x0, [sp, #32]
  403cc0:	add	x0, x0, #0x10
  403cc4:	str	x0, [sp, #32]
  403cc8:	b	403c90 <ferror@plt+0x1320>
  403ccc:	ldr	x1, [sp, #40]
  403cd0:	cbnz	x1, 403ca0 <ferror@plt+0x1330>
  403cd4:	ldr	x20, [x19, #40]
  403cd8:	cbnz	x20, 403d08 <ferror@plt+0x1398>
  403cdc:	ldr	x20, [x19, #48]
  403ce0:	cbz	x20, 403d64 <ferror@plt+0x13f4>
  403ce4:	ldr	x1, [x20, #8]
  403ce8:	sub	x0, x1, #0x1
  403cec:	cmp	x1, x0
  403cf0:	b.ls	403d48 <ferror@plt+0x13d8>  // b.plast
  403cf4:	sub	x0, x0, #0x1
  403cf8:	b	403cec <ferror@plt+0x137c>
  403cfc:	mov	x1, #0x20                  	// #32
  403d00:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  403d04:	b	403ca8 <ferror@plt+0x1338>
  403d08:	ldr	x1, [x20, #8]
  403d0c:	sub	x0, x1, #0x1
  403d10:	cmp	x1, x0
  403d14:	b.ls	403d20 <ferror@plt+0x13b0>  // b.plast
  403d18:	sub	x0, x0, #0x1
  403d1c:	b	403d10 <ferror@plt+0x13a0>
  403d20:	ldrb	w1, [x20, #44]
  403d24:	ldr	x0, [x20]
  403d28:	cbnz	w1, 403d40 <ferror@plt+0x13d0>
  403d2c:	bl	402730 <free@plt>
  403d30:	mov	x0, x20
  403d34:	mov	x1, #0x30                  	// #48
  403d38:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  403d3c:	b	403cdc <ferror@plt+0x136c>
  403d40:	bl	403e18 <ferror@plt+0x14a8>
  403d44:	b	403d30 <ferror@plt+0x13c0>
  403d48:	ldrb	w1, [x20, #44]
  403d4c:	ldr	x0, [x20]
  403d50:	cbnz	w1, 403d84 <ferror@plt+0x1414>
  403d54:	bl	402730 <free@plt>
  403d58:	mov	x0, x20
  403d5c:	mov	x1, #0x30                  	// #48
  403d60:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  403d64:	ldr	x19, [x19]
  403d68:	cbz	x19, 403da8 <ferror@plt+0x1438>
  403d6c:	ldr	x1, [x19, #8]
  403d70:	sub	x0, x1, #0x1
  403d74:	cmp	x1, x0
  403d78:	b.ls	403d8c <ferror@plt+0x141c>  // b.plast
  403d7c:	sub	x0, x0, #0x1
  403d80:	b	403d74 <ferror@plt+0x1404>
  403d84:	bl	403e18 <ferror@plt+0x14a8>
  403d88:	b	403d58 <ferror@plt+0x13e8>
  403d8c:	ldrb	w1, [x19, #44]
  403d90:	ldr	x0, [x19]
  403d94:	cbnz	w1, 403db4 <ferror@plt+0x1444>
  403d98:	bl	402730 <free@plt>
  403d9c:	mov	x0, x19
  403da0:	mov	x1, #0x30                  	// #48
  403da4:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  403da8:	ldp	x19, x20, [sp, #16]
  403dac:	ldp	x29, x30, [sp], #48
  403db0:	ret
  403db4:	bl	403e18 <ferror@plt+0x14a8>
  403db8:	b	403d9c <ferror@plt+0x142c>
  403dbc:	ret
  403dc0:	cbz	x1, 403de4 <ferror@plt+0x1474>
  403dc4:	stp	x29, x30, [sp, #-16]!
  403dc8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  403dcc:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  403dd0:	mov	x29, sp
  403dd4:	add	x2, x2, #0x1f0
  403dd8:	add	x0, x0, #0x203
  403ddc:	mov	w1, #0x2f                  	// #47
  403de0:	bl	402980 <ferror@plt+0x10>
  403de4:	b	439f40 <_obstack_memory_used@@Base+0xd8>
  403de8:	cbz	x1, 403e0c <ferror@plt+0x149c>
  403dec:	stp	x29, x30, [sp, #-16]!
  403df0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  403df4:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  403df8:	mov	x29, sp
  403dfc:	add	x2, x2, #0x218
  403e00:	add	x0, x0, #0x203
  403e04:	mov	w1, #0x37                  	// #55
  403e08:	bl	402980 <ferror@plt+0x10>
  403e0c:	mov	x1, #0x1                   	// #1
  403e10:	b	439f74 <_obstack_memory_used@@Base+0x10c>
  403e14:	b	439fc4 <_obstack_memory_used@@Base+0x15c>
  403e18:	b	402730 <free@plt>
  403e1c:	ret
  403e20:	cmp	w2, #0x0
  403e24:	b.lt	403e84 <ferror@plt+0x1514>  // b.tstop
  403e28:	stp	x29, x30, [sp, #-32]!
  403e2c:	mov	x29, sp
  403e30:	stp	x19, x20, [sp, #16]
  403e34:	mov	x19, x1
  403e38:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  403e3c:	ldr	x20, [x1, #1336]
  403e40:	b.ne	403e6c <ferror@plt+0x14fc>  // b.any
  403e44:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x17198>
  403e48:	add	x3, x3, #0xaab
  403e4c:	mov	x4, x3
  403e50:	mov	x2, x19
  403e54:	mov	x0, x20
  403e58:	ldp	x19, x20, [sp, #16]
  403e5c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  403e60:	ldp	x29, x30, [sp], #32
  403e64:	add	x1, x1, #0x233
  403e68:	b	402940 <fprintf@plt>
  403e6c:	mov	w0, w2
  403e70:	bl	43a098 <_obstack_memory_used@@Base+0x230>
  403e74:	adrp	x3, 456000 <_obstack_memory_used@@Base+0x1c198>
  403e78:	mov	x4, x0
  403e7c:	add	x3, x3, #0x847
  403e80:	b	403e50 <ferror@plt+0x14e0>
  403e84:	ret
  403e88:	stp	x29, x30, [sp, #-32]!
  403e8c:	mov	x29, sp
  403e90:	ldr	w2, [x1, #56]
  403e94:	ldr	x1, [x1, #40]
  403e98:	str	x19, [sp, #16]
  403e9c:	mov	x19, x0
  403ea0:	bl	408080 <ferror@plt+0x5710>
  403ea4:	ldr	x0, [x19]
  403ea8:	bl	40afd0 <ferror@plt+0x8660>
  403eac:	ldr	x0, [x19]
  403eb0:	ldr	x19, [sp, #16]
  403eb4:	ldp	x29, x30, [sp], #32
  403eb8:	b	40b0e4 <ferror@plt+0x8774>
  403ebc:	stp	x29, x30, [sp, #-48]!
  403ec0:	mov	x29, sp
  403ec4:	stp	x19, x20, [sp, #16]
  403ec8:	mov	x19, x0
  403ecc:	ldr	w0, [x0, #56]
  403ed0:	str	x21, [sp, #32]
  403ed4:	cbz	w0, 403f24 <ferror@plt+0x15b4>
  403ed8:	ldrb	w0, [x19, #64]
  403edc:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x3e198>
  403ee0:	ldr	x20, [x19]
  403ee4:	cbz	w0, 403f18 <ferror@plt+0x15a8>
  403ee8:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  403eec:	add	x0, x0, #0x23b
  403ef0:	bl	402930 <gettext@plt>
  403ef4:	mov	x1, x0
  403ef8:	ldr	x2, [x21, #1520]
  403efc:	mov	x0, x20
  403f00:	bl	40cc30 <ferror@plt+0xa2c0>
  403f04:	ldr	x0, [x19]
  403f08:	ldp	x19, x20, [sp, #16]
  403f0c:	ldr	x21, [sp, #32]
  403f10:	ldp	x29, x30, [sp], #48
  403f14:	b	40b7ac <ferror@plt+0x8e3c>
  403f18:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  403f1c:	add	x0, x0, #0x264
  403f20:	b	403ef0 <ferror@plt+0x1580>
  403f24:	ldp	x19, x20, [sp, #16]
  403f28:	ldr	x21, [sp, #32]
  403f2c:	ldp	x29, x30, [sp], #48
  403f30:	ret
  403f34:	stp	x29, x30, [sp, #-96]!
  403f38:	mov	x29, sp
  403f3c:	stp	x19, x20, [sp, #16]
  403f40:	mov	x20, x0
  403f44:	orr	x0, x2, x4
  403f48:	stp	x21, x22, [sp, #32]
  403f4c:	stp	x23, x24, [sp, #48]
  403f50:	stp	x25, x26, [sp, #64]
  403f54:	str	x27, [sp, #80]
  403f58:	cbnz	x0, 403f64 <ferror@plt+0x15f4>
  403f5c:	mov	w0, #0x0                   	// #0
  403f60:	b	403f8c <ferror@plt+0x161c>
  403f64:	ldr	w0, [x20]
  403f68:	mov	x23, x1
  403f6c:	mov	x27, x2
  403f70:	mov	w24, w3
  403f74:	mov	x19, x4
  403f78:	cbz	w0, 403fa8 <ferror@plt+0x1638>
  403f7c:	ldr	w0, [x20]
  403f80:	cmp	w0, #0x13
  403f84:	b.le	403fc8 <ferror@plt+0x1658>
  403f88:	mov	w0, #0x1                   	// #1
  403f8c:	ldp	x19, x20, [sp, #16]
  403f90:	ldp	x21, x22, [sp, #32]
  403f94:	ldp	x23, x24, [sp, #48]
  403f98:	ldp	x25, x26, [sp, #64]
  403f9c:	ldr	x27, [sp, #80]
  403fa0:	ldp	x29, x30, [sp], #96
  403fa4:	ret
  403fa8:	cbz	x2, 403f7c <ferror@plt+0x160c>
  403fac:	mov	x0, x2
  403fb0:	bl	439b18 <ferror@plt+0x371a8>
  403fb4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  403fb8:	add	x1, x1, #0x429
  403fbc:	bl	4026d0 <strcmp@plt>
  403fc0:	cbnz	w0, 403f7c <ferror@plt+0x160c>
  403fc4:	b	403f5c <ferror@plt+0x15ec>
  403fc8:	add	w0, w0, #0x1
  403fcc:	str	w0, [x20]
  403fd0:	cbz	x19, 404094 <ferror@plt+0x1724>
  403fd4:	mov	x0, x19
  403fd8:	mov	w1, #0x400b                	// #16395
  403fdc:	bl	437cac <ferror@plt+0x3533c>
  403fe0:	cmp	x0, #0x0
  403fe4:	adrp	x25, 44b000 <_obstack_memory_used@@Base+0x11198>
  403fe8:	mov	x20, x0
  403fec:	csel	x19, x19, x0, eq  // eq = none
  403ff0:	add	x25, x25, #0x6e0
  403ff4:	mov	x21, #0x0                   	// #0
  403ff8:	ldr	x26, [x25, x21, lsl #3]
  403ffc:	mov	x0, x26
  404000:	bl	402330 <strlen@plt>
  404004:	mov	x1, x26
  404008:	mov	x22, x0
  40400c:	mov	x2, x0
  404010:	mov	x0, x19
  404014:	bl	4024e0 <strncmp@plt>
  404018:	cbnz	w0, 40403c <ferror@plt+0x16cc>
  40401c:	ldrb	w0, [x19, x22]
  404020:	cbz	w0, 40402c <ferror@plt+0x16bc>
  404024:	cmp	w0, #0x28
  404028:	b.ne	40403c <ferror@plt+0x16cc>  // b.any
  40402c:	cbz	x20, 403f88 <ferror@plt+0x1618>
  404030:	mov	x0, x20
  404034:	bl	402730 <free@plt>
  404038:	b	403f88 <ferror@plt+0x1618>
  40403c:	add	x21, x21, #0x1
  404040:	cmp	x21, #0x4
  404044:	b.ne	403ff8 <ferror@plt+0x1688>  // b.any
  404048:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40404c:	ldr	x0, [x0, #1336]
  404050:	cbnz	x19, 40405c <ferror@plt+0x16ec>
  404054:	adrp	x19, 44b000 <_obstack_memory_used@@Base+0x11198>
  404058:	add	x19, x19, #0x28e
  40405c:	cbnz	x27, 404068 <ferror@plt+0x16f8>
  404060:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  404064:	add	x27, x2, #0x28e
  404068:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40406c:	mov	w5, w24
  404070:	mov	x4, x27
  404074:	mov	x3, x19
  404078:	mov	x2, x23
  40407c:	add	x1, x1, #0x292
  404080:	bl	402940 <fprintf@plt>
  404084:	cbz	x20, 403f5c <ferror@plt+0x15ec>
  404088:	mov	x0, x20
  40408c:	bl	402730 <free@plt>
  404090:	b	403f5c <ferror@plt+0x15ec>
  404094:	mov	x20, #0x0                   	// #0
  404098:	b	404048 <ferror@plt+0x16d8>
  40409c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4040a0:	ldr	x1, [x0, #864]
  4040a4:	ldr	w0, [x1, #240]
  4040a8:	add	w0, w0, #0x1
  4040ac:	str	w0, [x1, #240]
  4040b0:	ret
  4040b4:	stp	x29, x30, [sp, #-272]!
  4040b8:	mov	x29, sp
  4040bc:	stp	x1, x2, [sp, #216]
  4040c0:	add	x1, sp, #0x110
  4040c4:	stp	x1, x1, [sp, #48]
  4040c8:	add	x1, sp, #0xd0
  4040cc:	str	x1, [sp, #64]
  4040d0:	mov	w1, #0xffffffc8            	// #-56
  4040d4:	str	w1, [sp, #72]
  4040d8:	mov	w1, #0xffffff80            	// #-128
  4040dc:	str	w1, [sp, #76]
  4040e0:	add	x1, sp, #0x10
  4040e4:	stp	x3, x4, [sp, #232]
  4040e8:	ldp	x2, x3, [sp, #48]
  4040ec:	stp	x2, x3, [sp, #16]
  4040f0:	ldp	x2, x3, [sp, #64]
  4040f4:	stp	x2, x3, [sp, #32]
  4040f8:	str	q0, [sp, #80]
  4040fc:	str	q1, [sp, #96]
  404100:	str	q2, [sp, #112]
  404104:	str	q3, [sp, #128]
  404108:	str	q4, [sp, #144]
  40410c:	str	q5, [sp, #160]
  404110:	str	q6, [sp, #176]
  404114:	str	q7, [sp, #192]
  404118:	stp	x5, x6, [sp, #248]
  40411c:	str	x7, [sp, #264]
  404120:	bl	43a114 <_obstack_memory_used@@Base+0x2ac>
  404124:	ldp	x29, x30, [sp], #272
  404128:	ret
  40412c:	stp	x29, x30, [sp, #-64]!
  404130:	mov	x29, sp
  404134:	stp	x21, x22, [sp, #32]
  404138:	ldr	x22, [x0]
  40413c:	stp	x23, x24, [sp, #48]
  404140:	mov	x23, x0
  404144:	mov	w24, w2
  404148:	stp	x19, x20, [sp, #16]
  40414c:	ldrb	w0, [x22, #67]
  404150:	mov	w20, w3
  404154:	mov	x19, x1
  404158:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40415c:	add	x1, x1, #0x2aa
  404160:	bl	40685c <ferror@plt+0x3eec>
  404164:	mov	x21, x0
  404168:	ldrb	w0, [x22, #67]
  40416c:	bl	406b78 <ferror@plt+0x4208>
  404170:	mov	x22, x0
  404174:	cbnz	x19, 404180 <ferror@plt+0x1810>
  404178:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40417c:	ldr	x19, [x0, #1520]
  404180:	mov	x0, x19
  404184:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404188:	add	x1, x1, #0x2b0
  40418c:	bl	4026d0 <strcmp@plt>
  404190:	cmp	w0, #0x0
  404194:	csel	w3, w0, w24, eq  // eq = none
  404198:	ldrb	w0, [x23, #121]
  40419c:	cbz	w0, 404218 <ferror@plt+0x18a8>
  4041a0:	cbz	w3, 40421c <ferror@plt+0x18ac>
  4041a4:	cmp	w20, #0x0
  4041a8:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4041ac:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4041b0:	add	x0, x0, #0x2a3
  4041b4:	add	x2, x2, #0x2a6
  4041b8:	csel	x2, x2, x0, eq  // eq = none
  4041bc:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4041c0:	add	x0, x0, #0x5f0
  4041c4:	mov	w4, w20
  4041c8:	add	x0, x0, #0x8
  4041cc:	mov	x1, #0x20                  	// #32
  4041d0:	bl	402420 <snprintf@plt>
  4041d4:	mov	x4, x22
  4041d8:	mov	x2, x19
  4041dc:	mov	x1, x21
  4041e0:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x3e198>
  4041e4:	ldp	x19, x20, [sp, #16]
  4041e8:	add	x3, x3, #0x5f0
  4041ec:	ldp	x21, x22, [sp, #32]
  4041f0:	add	x3, x3, #0x8
  4041f4:	ldp	x23, x24, [sp, #48]
  4041f8:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4041fc:	ldp	x29, x30, [sp], #64
  404200:	add	x0, x0, #0x2bb
  404204:	b	4040b4 <ferror@plt+0x1744>
  404208:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40420c:	mov	w20, #0x0                   	// #0
  404210:	add	x2, x2, #0x2a6
  404214:	b	4041bc <ferror@plt+0x184c>
  404218:	cbnz	w3, 404208 <ferror@plt+0x1898>
  40421c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  404220:	strb	wzr, [x0, #1528]
  404224:	b	4041d4 <ferror@plt+0x1864>
  404228:	stp	x29, x30, [sp, #-32]!
  40422c:	mov	x29, sp
  404230:	ldp	w2, w3, [x1, #8]
  404234:	stp	x19, x20, [sp, #16]
  404238:	mov	x19, x0
  40423c:	ldr	x1, [x1]
  404240:	bl	40412c <ferror@plt+0x17bc>
  404244:	mov	x1, x0
  404248:	mov	x20, x0
  40424c:	ldr	x0, [x19]
  404250:	bl	40b678 <ferror@plt+0x8d08>
  404254:	mov	x0, x20
  404258:	bl	402730 <free@plt>
  40425c:	ldr	x0, [x19]
  404260:	ldp	x19, x20, [sp, #16]
  404264:	ldp	x29, x30, [sp], #32
  404268:	b	40b270 <ferror@plt+0x8900>
  40426c:	stp	x29, x30, [sp, #-48]!
  404270:	mov	x29, sp
  404274:	stp	x19, x20, [sp, #16]
  404278:	mov	x19, x0
  40427c:	ldr	x0, [x0]
  404280:	ldrb	w0, [x0, #67]
  404284:	str	x21, [sp, #32]
  404288:	mov	x21, x1
  40428c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404290:	add	x1, x1, #0x2aa
  404294:	bl	40685c <ferror@plt+0x3eec>
  404298:	mov	x20, x0
  40429c:	ldr	x0, [x19]
  4042a0:	ldrb	w0, [x0, #67]
  4042a4:	bl	406b78 <ferror@plt+0x4208>
  4042a8:	mov	x3, x0
  4042ac:	mov	x2, x21
  4042b0:	mov	x1, x20
  4042b4:	ldp	x19, x20, [sp, #16]
  4042b8:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4042bc:	ldr	x21, [sp, #32]
  4042c0:	add	x0, x0, #0x2c5
  4042c4:	ldp	x29, x30, [sp], #48
  4042c8:	b	4040b4 <ferror@plt+0x1744>
  4042cc:	stp	x29, x30, [sp, #-32]!
  4042d0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4042d4:	add	x0, x0, #0x2ce
  4042d8:	mov	x29, sp
  4042dc:	bl	4028d0 <getenv@plt>
  4042e0:	cbz	x0, 4042f0 <ferror@plt+0x1980>
  4042e4:	bl	402460 <atoi@plt>
  4042e8:	cmp	w0, #0x0
  4042ec:	b.gt	404318 <ferror@plt+0x19a8>
  4042f0:	add	x2, sp, #0x18
  4042f4:	mov	x1, #0x5413                	// #21523
  4042f8:	mov	w0, #0x0                   	// #0
  4042fc:	strh	wzr, [sp, #26]
  404300:	bl	402950 <ioctl@plt>
  404304:	cbnz	w0, 404320 <ferror@plt+0x19b0>
  404308:	ldrh	w0, [sp, #26]
  40430c:	mov	w1, #0x7fffffff            	// #2147483647
  404310:	cmp	w0, #0x0
  404314:	csel	w0, w0, w1, ne  // ne = any
  404318:	ldp	x29, x30, [sp], #32
  40431c:	ret
  404320:	mov	w0, #0x7fffffff            	// #2147483647
  404324:	b	404318 <ferror@plt+0x19a8>
  404328:	stp	x29, x30, [sp, #-32]!
  40432c:	mov	x29, sp
  404330:	str	x19, [sp, #16]
  404334:	mov	x19, x0
  404338:	cbz	w1, 40434c <ferror@plt+0x19dc>
  40433c:	sub	w1, w1, #0x1
  404340:	cmp	w1, #0x0
  404344:	b.gt	404368 <ferror@plt+0x19f8>
  404348:	b	404364 <ferror@plt+0x19f4>
  40434c:	ldr	x0, [x0]
  404350:	ldr	x0, [x0, #8]
  404354:	ldr	x0, [x0, #192]
  404358:	bl	402500 <fileno_unlocked@plt>
  40435c:	bl	402810 <isatty@plt>
  404360:	cbnz	w0, 404378 <ferror@plt+0x1a08>
  404364:	mov	w1, #0x7fffffff            	// #2147483647
  404368:	str	w1, [x19, #112]
  40436c:	ldr	x19, [sp, #16]
  404370:	ldp	x29, x30, [sp], #32
  404374:	ret
  404378:	bl	4042cc <ferror@plt+0x195c>
  40437c:	sub	w1, w0, #0x1
  404380:	b	404340 <ferror@plt+0x19d0>
  404384:	stp	x29, x30, [sp, #-48]!
  404388:	mov	x29, sp
  40438c:	stp	x19, x20, [sp, #16]
  404390:	mov	x19, x0
  404394:	mov	w20, w1
  404398:	str	x21, [sp, #32]
  40439c:	mov	x21, x19
  4043a0:	mov	x0, #0x48                  	// #72
  4043a4:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  4043a8:	mov	w1, #0x0                   	// #0
  4043ac:	str	x0, [x21], #8
  4043b0:	bl	40affc <ferror@plt+0x868c>
  4043b4:	stp	xzr, xzr, [x19, #8]
  4043b8:	sbfiz	x0, x20, #2, #32
  4043bc:	stp	xzr, xzr, [x21, #16]
  4043c0:	stp	xzr, xzr, [x21, #32]
  4043c4:	str	xzr, [x21, #48]
  4043c8:	strb	wzr, [x19, #64]
  4043cc:	str	w20, [x19, #68]
  4043d0:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  4043d4:	str	x0, [x19, #72]
  4043d8:	mov	x1, #0x0                   	// #0
  4043dc:	cmp	w20, w1
  4043e0:	b.le	4043f0 <ferror@plt+0x1a80>
  4043e4:	str	wzr, [x0, x1, lsl #2]
  4043e8:	add	x1, x1, #0x1
  4043ec:	b	4043dc <ferror@plt+0x1a6c>
  4043f0:	ldr	x0, [x19]
  4043f4:	strb	wzr, [x19, #108]
  4043f8:	ldr	w1, [x0, #40]
  4043fc:	mov	x0, x19
  404400:	bl	404328 <ferror@plt+0x19b8>
  404404:	strh	wzr, [x19, #128]
  404408:	mov	w0, #0x5e5e                	// #24158
  40440c:	strb	wzr, [x19, #130]
  404410:	movk	w0, #0x5e, lsl #16
  404414:	strh	wzr, [x19, #228]
  404418:	ldr	x21, [sp, #32]
  40441c:	str	w0, [x19, #116]
  404420:	adrp	x0, 405000 <ferror@plt+0x2690>
  404424:	add	x0, x0, #0xd58
  404428:	str	x0, [x19, #136]
  40442c:	adrp	x0, 404000 <ferror@plt+0x1690>
  404430:	add	x0, x0, #0x228
  404434:	str	x0, [x19, #144]
  404438:	adrp	x0, 403000 <ferror@plt+0x690>
  40443c:	add	x0, x0, #0xe88
  404440:	str	xzr, [x19, #120]
  404444:	str	wzr, [x19, #132]
  404448:	str	x0, [x19, #152]
  40444c:	adrp	x0, 403000 <ferror@plt+0x690>
  404450:	add	x0, x0, #0xebc
  404454:	stp	xzr, xzr, [x19, #160]
  404458:	stp	xzr, xzr, [x19, #176]
  40445c:	str	xzr, [x19, #192]
  404460:	str	wzr, [x19, #200]
  404464:	stp	xzr, xzr, [x19, #208]
  404468:	str	wzr, [x19, #224]
  40446c:	stp	xzr, xzr, [x19, #232]
  404470:	stp	xzr, xzr, [x19, #248]
  404474:	str	x0, [x19, #264]
  404478:	ldp	x19, x20, [sp, #16]
  40447c:	ldp	x29, x30, [sp], #48
  404480:	ret
  404484:	stp	x29, x30, [sp, #-32]!
  404488:	cmp	w1, #0x0
  40448c:	mov	x29, sp
  404490:	str	x19, [sp, #16]
  404494:	ldr	x19, [x0]
  404498:	mov	w0, #0x2                   	// #2
  40449c:	csel	w0, w1, w0, ge  // ge = tcont
  4044a0:	bl	406b94 <ferror@plt+0x4224>
  4044a4:	strb	w0, [x19, #67]
  4044a8:	ldr	x19, [sp, #16]
  4044ac:	ldp	x29, x30, [sp], #32
  4044b0:	ret
  4044b4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  4044b8:	add	x1, x1, #0x6e0
  4044bc:	add	x1, x1, #0x20
  4044c0:	ldr	x0, [x1, w0, sxtw #3]
  4044c4:	ret
  4044c8:	stp	x29, x30, [sp, #-96]!
  4044cc:	mov	x29, sp
  4044d0:	stp	x19, x20, [sp, #16]
  4044d4:	mov	x19, x0
  4044d8:	mov	w20, w1
  4044dc:	ldr	x0, [x0]
  4044e0:	stp	x21, x22, [sp, #32]
  4044e4:	stp	x23, x24, [sp, #48]
  4044e8:	ldrb	w1, [x0, #65]
  4044ec:	stp	x25, x26, [sp, #64]
  4044f0:	str	xzr, [sp, #88]
  4044f4:	cbz	w1, 404504 <ferror@plt+0x1b94>
  4044f8:	bl	40b270 <ferror@plt+0x8900>
  4044fc:	ldr	x0, [x19]
  404500:	strb	wzr, [x0, #65]
  404504:	cmp	w20, #0x1
  404508:	b.ls	404650 <ferror@plt+0x1ce0>  // b.plast
  40450c:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x3e198>
  404510:	add	x3, sp, #0x58
  404514:	mov	w1, w20
  404518:	mov	w2, #0x2                   	// #2
  40451c:	ldr	x0, [x21, #1912]
  404520:	bl	423cf4 <ferror@plt+0x21384>
  404524:	ldr	x0, [sp, #88]
  404528:	cbz	x0, 404650 <ferror@plt+0x1ce0>
  40452c:	ldr	x1, [x19, #208]
  404530:	cmp	x0, x1
  404534:	b.eq	404650 <ferror@plt+0x1ce0>  // b.none
  404538:	str	x0, [x19, #208]
  40453c:	ldr	w0, [x0, #20]
  404540:	cbz	w0, 404650 <ferror@plt+0x1ce0>
  404544:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  404548:	adrp	x22, 44b000 <_obstack_memory_used@@Base+0x11198>
  40454c:	adrp	x23, 44b000 <_obstack_memory_used@@Base+0x11198>
  404550:	add	x20, x20, #0x5f0
  404554:	add	x22, x22, #0x2a6
  404558:	add	x23, x23, #0x2d6
  40455c:	mov	w25, #0x1                   	// #1
  404560:	ldr	x0, [x21, #1912]
  404564:	ldr	x1, [sp, #88]
  404568:	ldr	w24, [x1, #20]
  40456c:	bl	422ff4 <ferror@plt+0x20684>
  404570:	ldr	w4, [x0]
  404574:	ldrb	w2, [x0, #6]
  404578:	sub	w1, w24, w4
  40457c:	ldr	w4, [x0, #16]
  404580:	str	x0, [sp, #88]
  404584:	lsr	w3, w1, w2
  404588:	add	w3, w3, w4
  40458c:	cbz	w25, 404670 <ferror@plt+0x1d00>
  404590:	ldrb	w4, [x19, #121]
  404594:	cbz	w4, 404670 <ferror@plt+0x1d00>
  404598:	mov	w4, #0x1                   	// #1
  40459c:	ldrb	w0, [x0, #7]
  4045a0:	lsl	w4, w4, w2
  4045a4:	sub	w4, w4, #0x1
  4045a8:	and	w4, w4, w1
  4045ac:	lsr	w4, w4, w0
  4045b0:	cbz	w3, 404668 <ferror@plt+0x1cf8>
  4045b4:	cmp	w4, #0x0
  4045b8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4045bc:	add	x2, x2, #0x2a3
  4045c0:	csel	x2, x22, x2, eq  // eq = none
  4045c4:	add	x0, x20, #0x8
  4045c8:	mov	x1, #0x20                  	// #32
  4045cc:	bl	402420 <snprintf@plt>
  4045d0:	eor	w0, w25, #0x1
  4045d4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  4045d8:	add	x1, x1, #0x6e0
  4045dc:	cmp	w25, #0x0
  4045e0:	add	x0, x1, x0, lsl #3
  4045e4:	adrp	x24, 451000 <_obstack_memory_used@@Base+0x17198>
  4045e8:	add	x24, x24, #0xaab
  4045ec:	mov	w25, #0x0                   	// #0
  4045f0:	csel	x24, x24, x23, ne  // ne = any
  4045f4:	ldr	x0, [x0, #152]
  4045f8:	ldr	x26, [x19]
  4045fc:	bl	402930 <gettext@plt>
  404600:	mov	x3, x0
  404604:	ldr	x1, [sp, #88]
  404608:	mov	x0, x26
  40460c:	add	x6, x20, #0x8
  404610:	mov	x2, x24
  404614:	adrp	x4, 44b000 <_obstack_memory_used@@Base+0x11198>
  404618:	add	x4, x4, #0x2aa
  40461c:	ldr	x5, [x1, #8]
  404620:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404624:	add	x1, x1, #0x2d9
  404628:	bl	40cc30 <ferror@plt+0xa2c0>
  40462c:	ldr	x0, [sp, #88]
  404630:	ldr	w0, [x0, #20]
  404634:	cbnz	w0, 404560 <ferror@plt+0x1bf0>
  404638:	ldr	x0, [x19]
  40463c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  404640:	add	x1, x1, #0x4d
  404644:	bl	40cc30 <ferror@plt+0xa2c0>
  404648:	ldr	x0, [x19]
  40464c:	bl	40b270 <ferror@plt+0x8900>
  404650:	ldp	x19, x20, [sp, #16]
  404654:	ldp	x21, x22, [sp, #32]
  404658:	ldp	x23, x24, [sp, #48]
  40465c:	ldp	x25, x26, [sp, #64]
  404660:	ldp	x29, x30, [sp], #96
  404664:	ret
  404668:	strb	wzr, [x20, #8]
  40466c:	b	4045d0 <ferror@plt+0x1c60>
  404670:	cbz	w3, 404668 <ferror@plt+0x1cf8>
  404674:	mov	x2, x22
  404678:	mov	w4, #0x0                   	// #0
  40467c:	b	4045c4 <ferror@plt+0x1c54>
  404680:	stp	x29, x30, [sp, #-64]!
  404684:	mov	x29, sp
  404688:	stp	x19, x20, [sp, #16]
  40468c:	stp	x21, x22, [sp, #32]
  404690:	stp	x23, x24, [sp, #48]
  404694:	tbnz	w1, #31, 404788 <ferror@plt+0x1e18>
  404698:	mov	x19, x0
  40469c:	ldr	w0, [x0, #68]
  4046a0:	mov	w21, w1
  4046a4:	cmp	w0, w1
  4046a8:	b.le	404788 <ferror@plt+0x1e18>
  4046ac:	mov	w24, w2
  4046b0:	cmp	w2, #0xd
  4046b4:	b.gt	404788 <ferror@plt+0x1e18>
  4046b8:	ldr	x0, [x19, #72]
  4046bc:	sbfiz	x22, x1, #2, #32
  4046c0:	mov	w23, w3
  4046c4:	ldr	w20, [x0, x22]
  4046c8:	cbz	w3, 404780 <ferror@plt+0x1e10>
  4046cc:	cbnz	w20, 4046fc <ferror@plt+0x1d8c>
  4046d0:	mov	w0, w1
  4046d4:	ldp	x2, x1, [x19, #168]
  4046d8:	blr	x2
  4046dc:	cbz	w0, 404770 <ferror@plt+0x1e00>
  4046e0:	ldrb	w0, [x19, #64]
  4046e4:	mov	w20, #0x4                   	// #4
  4046e8:	cmp	w0, #0x0
  4046ec:	mov	w0, #0x6                   	// #6
  4046f0:	csel	w20, w20, w0, ne  // ne = any
  4046f4:	ldr	x0, [x19, #72]
  4046f8:	str	w20, [x0, x22]
  4046fc:	ldr	w1, [x19, #88]
  404700:	mov	w22, #0xc                   	// #12
  404704:	ldr	x0, [x19, #80]
  404708:	sub	w1, w1, #0x1
  40470c:	smull	x22, w1, w22
  404710:	mov	x2, x22
  404714:	tbnz	w1, #31, 404730 <ferror@plt+0x1dc0>
  404718:	add	x3, x0, x2
  40471c:	sub	x2, x2, #0xc
  404720:	ldr	w4, [x3, #4]
  404724:	cmp	w4, w21
  404728:	b.ne	404778 <ferror@plt+0x1e08>  // b.any
  40472c:	ldr	w20, [x3, #8]
  404730:	add	x1, x22, #0x18
  404734:	add	x22, x22, #0xc
  404738:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  40473c:	add	x1, x0, x22
  404740:	str	x0, [x19, #80]
  404744:	str	w23, [x0, x22]
  404748:	stp	w21, w24, [x1, #4]
  40474c:	ldr	w0, [x19, #88]
  404750:	add	w0, w0, #0x1
  404754:	str	w0, [x19, #88]
  404758:	mov	w0, w20
  40475c:	ldp	x19, x20, [sp, #16]
  404760:	ldp	x21, x22, [sp, #32]
  404764:	ldp	x23, x24, [sp, #48]
  404768:	ldp	x29, x30, [sp], #64
  40476c:	ret
  404770:	mov	w20, #0x1                   	// #1
  404774:	b	4046f4 <ferror@plt+0x1d84>
  404778:	sub	w1, w1, #0x1
  40477c:	b	404714 <ferror@plt+0x1da4>
  404780:	str	w2, [x0, x22]
  404784:	b	404758 <ferror@plt+0x1de8>
  404788:	mov	w20, #0x0                   	// #0
  40478c:	b	404758 <ferror@plt+0x1de8>
  404790:	stp	x29, x30, [sp, #-32]!
  404794:	mov	x29, sp
  404798:	ldr	w1, [x0, #104]
  40479c:	str	x19, [sp, #16]
  4047a0:	mov	x19, x0
  4047a4:	ldr	x0, [x0, #96]
  4047a8:	add	w1, w1, #0x1
  4047ac:	sbfiz	x1, x1, #2, #32
  4047b0:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4047b4:	str	x0, [x19, #96]
  4047b8:	ldr	w1, [x19, #104]
  4047bc:	add	w2, w1, #0x1
  4047c0:	str	w2, [x19, #104]
  4047c4:	ldr	w2, [x19, #88]
  4047c8:	str	w2, [x0, w1, sxtw #2]
  4047cc:	ldr	x19, [sp, #16]
  4047d0:	ldp	x29, x30, [sp], #32
  4047d4:	ret
  4047d8:	stp	x29, x30, [sp, #-48]!
  4047dc:	mov	x29, sp
  4047e0:	stp	x21, x22, [sp, #32]
  4047e4:	mov	w22, w1
  4047e8:	ldr	w21, [x0, #104]
  4047ec:	stp	x19, x20, [sp, #16]
  4047f0:	mov	x19, x0
  4047f4:	cbz	w21, 404808 <ferror@plt+0x1e98>
  4047f8:	ldr	x0, [x0, #96]
  4047fc:	sub	w21, w21, #0x1
  404800:	str	w21, [x19, #104]
  404804:	ldr	w21, [x0, w21, sxtw #2]
  404808:	ldr	w20, [x19, #88]
  40480c:	mov	w1, #0xc                   	// #12
  404810:	ldr	x0, [x19, #80]
  404814:	add	w20, w20, #0x1
  404818:	smull	x20, w20, w1
  40481c:	mov	x1, x20
  404820:	sub	x20, x20, #0xc
  404824:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  404828:	add	x1, x0, x20
  40482c:	str	x0, [x19, #80]
  404830:	str	w22, [x0, x20]
  404834:	mov	w0, #0xf                   	// #15
  404838:	stp	w21, w0, [x1, #4]
  40483c:	ldp	x21, x22, [sp, #32]
  404840:	ldr	w0, [x19, #88]
  404844:	add	w0, w0, #0x1
  404848:	str	w0, [x19, #88]
  40484c:	ldp	x19, x20, [sp, #16]
  404850:	ldp	x29, x30, [sp], #48
  404854:	ret
  404858:	mov	x4, x0
  40485c:	mov	x2, x0
  404860:	ldrb	w0, [x2]
  404864:	cmp	w0, #0x2e
  404868:	b.ne	40488c <ferror@plt+0x1f1c>  // b.any
  40486c:	ldrb	w0, [x2, #1]
  404870:	cmp	w0, #0x2e
  404874:	b.ne	40488c <ferror@plt+0x1f1c>  // b.any
  404878:	ldrb	w0, [x2, #2]
  40487c:	cmp	w0, #0x2f
  404880:	b.ne	40488c <ferror@plt+0x1f1c>  // b.any
  404884:	add	x2, x2, #0x3
  404888:	b	404860 <ferror@plt+0x1ef0>
  40488c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404890:	add	x1, x1, #0x6e0
  404894:	add	x1, x1, #0xa8
  404898:	ldrb	w0, [x1, #1]
  40489c:	cmp	w0, #0x2e
  4048a0:	b.ne	4048b0 <ferror@plt+0x1f40>  // b.any
  4048a4:	ldrb	w0, [x1, #2]
  4048a8:	cmp	w0, #0x2f
  4048ac:	b.eq	4048d4 <ferror@plt+0x1f64>  // b.none
  4048b0:	mov	x3, #0x0                   	// #0
  4048b4:	ldrb	w5, [x2, x3]
  4048b8:	add	x0, x2, x3
  4048bc:	ldrb	w6, [x1, x3]
  4048c0:	cmp	w5, w6
  4048c4:	b.ne	4048e4 <ferror@plt+0x1f74>  // b.any
  4048c8:	cbz	w5, 4048e4 <ferror@plt+0x1f74>
  4048cc:	add	x3, x3, #0x1
  4048d0:	b	4048b4 <ferror@plt+0x1f44>
  4048d4:	ldrb	w0, [x1, #3]!
  4048d8:	cmp	w0, #0x2e
  4048dc:	b.eq	404898 <ferror@plt+0x1f28>  // b.none
  4048e0:	b	4048b0 <ferror@plt+0x1f40>
  4048e4:	cmp	x0, x4
  4048e8:	b.ls	404900 <ferror@plt+0x1f90>  // b.plast
  4048ec:	ldurb	w1, [x0, #-1]
  4048f0:	cmp	w1, #0x2f
  4048f4:	b.eq	404900 <ferror@plt+0x1f90>  // b.none
  4048f8:	sub	x0, x0, #0x1
  4048fc:	b	4048e4 <ferror@plt+0x1f74>
  404900:	ret
  404904:	stp	x29, x30, [sp, #-304]!
  404908:	mov	x29, sp
  40490c:	str	x19, [sp, #16]
  404910:	mov	x19, x0
  404914:	add	x0, sp, #0x130
  404918:	stp	x0, x0, [sp, #40]
  40491c:	add	x0, sp, #0xf0
  404920:	str	x0, [sp, #56]
  404924:	mov	w0, #0xffffffc8            	// #-56
  404928:	str	w0, [sp, #64]
  40492c:	mov	w0, #0xffffff80            	// #-128
  404930:	str	w0, [sp, #68]
  404934:	str	q0, [sp, #112]
  404938:	str	q1, [sp, #128]
  40493c:	str	q2, [sp, #144]
  404940:	str	q3, [sp, #160]
  404944:	str	q4, [sp, #176]
  404948:	str	q5, [sp, #192]
  40494c:	str	q6, [sp, #208]
  404950:	str	q7, [sp, #224]
  404954:	stp	x1, x2, [sp, #248]
  404958:	stp	x3, x4, [sp, #264]
  40495c:	stp	x5, x6, [sp, #280]
  404960:	str	x7, [sp, #296]
  404964:	bl	4028c0 <__errno_location@plt>
  404968:	ldr	w0, [x0]
  40496c:	str	w0, [sp, #88]
  404970:	add	x0, sp, #0x28
  404974:	str	x0, [sp, #80]
  404978:	mov	x0, x19
  40497c:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  404980:	bl	402930 <gettext@plt>
  404984:	str	x0, [sp, #72]
  404988:	add	x1, sp, #0x48
  40498c:	ldr	x0, [x19, #864]
  404990:	str	xzr, [sp, #96]
  404994:	ldr	x0, [x0]
  404998:	bl	40cbf8 <ferror@plt+0xa288>
  40499c:	ldr	x0, [x19, #864]
  4049a0:	ldr	x0, [x0]
  4049a4:	bl	40b7ac <ferror@plt+0x8e3c>
  4049a8:	ldr	x19, [sp, #16]
  4049ac:	ldp	x29, x30, [sp], #304
  4049b0:	ret
  4049b4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4049b8:	ldr	x0, [x0, #864]
  4049bc:	ldr	x0, [x0, #24]
  4049c0:	cmp	x0, #0x0
  4049c4:	cset	w0, ne  // ne = any
  4049c8:	ret
  4049cc:	stp	x29, x30, [sp, #-272]!
  4049d0:	mov	x29, sp
  4049d4:	str	x19, [sp, #16]
  4049d8:	mov	x19, x0
  4049dc:	mov	x0, x1
  4049e0:	add	x1, sp, #0x110
  4049e4:	stp	x1, x1, [sp, #64]
  4049e8:	add	x1, sp, #0xe0
  4049ec:	str	x1, [sp, #80]
  4049f0:	mov	w1, #0xffffffd0            	// #-48
  4049f4:	str	w1, [sp, #88]
  4049f8:	mov	w1, #0xffffff80            	// #-128
  4049fc:	str	w1, [sp, #92]
  404a00:	str	q0, [sp, #96]
  404a04:	str	q1, [sp, #112]
  404a08:	str	q2, [sp, #128]
  404a0c:	str	q3, [sp, #144]
  404a10:	str	q4, [sp, #160]
  404a14:	str	q5, [sp, #176]
  404a18:	str	q6, [sp, #192]
  404a1c:	str	q7, [sp, #208]
  404a20:	stp	x2, x3, [sp, #224]
  404a24:	stp	x4, x5, [sp, #240]
  404a28:	stp	x6, x7, [sp, #256]
  404a2c:	bl	402930 <gettext@plt>
  404a30:	mov	x1, x0
  404a34:	ldp	x2, x3, [sp, #64]
  404a38:	stp	x2, x3, [sp, #32]
  404a3c:	mov	x0, x19
  404a40:	ldp	x2, x3, [sp, #80]
  404a44:	stp	x2, x3, [sp, #48]
  404a48:	add	x2, sp, #0x20
  404a4c:	bl	4028a0 <vfprintf@plt>
  404a50:	ldr	x19, [sp, #16]
  404a54:	ldp	x29, x30, [sp], #272
  404a58:	ret
  404a5c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  404a60:	ldr	x1, [x0, #864]
  404a64:	ldr	w0, [x1, #240]
  404a68:	add	w0, w0, #0x1
  404a6c:	str	w0, [x1, #240]
  404a70:	ret
  404a74:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  404a78:	ldr	x0, [x1, #864]
  404a7c:	ldr	w2, [x0, #240]
  404a80:	sub	w2, w2, #0x1
  404a84:	str	w2, [x0, #240]
  404a88:	cbnz	w2, 404ac8 <ferror@plt+0x2158>
  404a8c:	stp	x29, x30, [sp, #-32]!
  404a90:	mov	x29, sp
  404a94:	str	x19, [sp, #16]
  404a98:	mov	x19, x1
  404a9c:	ldr	w1, [x0, #244]
  404aa0:	cmp	w1, #0x0
  404aa4:	b.le	404ab4 <ferror@plt+0x2144>
  404aa8:	ldr	x1, [x0, #256]
  404aac:	cbz	x1, 404ab4 <ferror@plt+0x2144>
  404ab0:	blr	x1
  404ab4:	ldr	x0, [x19, #864]
  404ab8:	ldr	x19, [sp, #16]
  404abc:	str	wzr, [x0, #244]
  404ac0:	ldp	x29, x30, [sp], #32
  404ac4:	ret
  404ac8:	ret
  404acc:	stp	x29, x30, [sp, #-32]!
  404ad0:	mov	x29, sp
  404ad4:	ldr	x1, [x0, #264]
  404ad8:	stp	x19, x20, [sp, #16]
  404adc:	mov	x19, x0
  404ae0:	cbz	x1, 404ae8 <ferror@plt+0x2178>
  404ae4:	blr	x1
  404ae8:	bl	40edf4 <ferror@plt+0xc484>
  404aec:	ldr	x0, [x19, #72]
  404af0:	bl	402730 <free@plt>
  404af4:	ldr	x0, [x19]
  404af8:	ldr	x1, [x0]
  404afc:	ldr	x1, [x1]
  404b00:	str	xzr, [x19, #72]
  404b04:	blr	x1
  404b08:	ldr	x0, [x19]
  404b0c:	bl	402730 <free@plt>
  404b10:	str	xzr, [x19]
  404b14:	ldr	x20, [x19, #232]
  404b18:	cbz	x20, 404b38 <ferror@plt+0x21c8>
  404b1c:	ldr	x1, [x20, #8]
  404b20:	add	x0, x20, #0x8
  404b24:	bl	406890 <ferror@plt+0x3f20>
  404b28:	mov	x0, x20
  404b2c:	mov	x1, #0x28                  	// #40
  404b30:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  404b34:	str	xzr, [x19, #232]
  404b38:	ldp	x19, x20, [sp, #16]
  404b3c:	ldp	x29, x30, [sp], #32
  404b40:	ret
  404b44:	ldr	w2, [x0, #132]
  404b48:	cbz	w2, 404bac <ferror@plt+0x223c>
  404b4c:	stp	x29, x30, [sp, #-32]!
  404b50:	mov	x29, sp
  404b54:	stp	x19, x20, [sp, #16]
  404b58:	mov	x19, x0
  404b5c:	and	w20, w1, #0xff
  404b60:	ldp	w0, w1, [x0, #24]
  404b64:	add	w0, w0, w1
  404b68:	ldr	w1, [x19, #56]
  404b6c:	add	w0, w0, w1
  404b70:	cmp	w2, w0
  404b74:	b.gt	404ba0 <ferror@plt+0x2230>
  404b78:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  404b7c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404b80:	add	x1, x1, #0x2e7
  404b84:	ldr	x0, [x0, #1336]
  404b88:	bl	4049cc <ferror@plt+0x205c>
  404b8c:	cbz	w20, 404b98 <ferror@plt+0x2228>
  404b90:	mov	x0, x19
  404b94:	bl	404acc <ferror@plt+0x215c>
  404b98:	mov	w0, #0x1                   	// #1
  404b9c:	bl	402360 <exit@plt>
  404ba0:	ldp	x19, x20, [sp, #16]
  404ba4:	ldp	x29, x30, [sp], #32
  404ba8:	ret
  404bac:	ret
  404bb0:	stp	x29, x30, [sp, #-48]!
  404bb4:	sub	w2, w1, #0x2
  404bb8:	cmp	w2, #0xb
  404bbc:	mov	x29, sp
  404bc0:	stp	x19, x20, [sp, #16]
  404bc4:	b.hi	404ce8 <ferror@plt+0x2378>  // b.pmore
  404bc8:	mov	x19, x0
  404bcc:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  404bd0:	add	x0, x0, #0x6d0
  404bd4:	ldrb	w0, [x0, w2, uxtw]
  404bd8:	adr	x2, 404be4 <ferror@plt+0x2274>
  404bdc:	add	x0, x2, w0, sxtb #2
  404be0:	br	x0
  404be4:	ldrb	w0, [x19, #120]
  404be8:	cbz	w0, 404bf0 <ferror@plt+0x2280>
  404bec:	bl	402650 <abort@plt>
  404bf0:	ldrb	w0, [x19, #128]
  404bf4:	cbz	w0, 404d00 <ferror@plt+0x2390>
  404bf8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  404bfc:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404c00:	add	x1, x1, #0x317
  404c04:	ldr	x0, [x0, #1336]
  404c08:	bl	4049cc <ferror@plt+0x205c>
  404c0c:	mov	x0, x19
  404c10:	bl	404acc <ferror@plt+0x215c>
  404c14:	mov	w0, #0x1                   	// #1
  404c18:	b	404c7c <ferror@plt+0x230c>
  404c1c:	cmp	w1, #0x3
  404c20:	b.eq	404c80 <ferror@plt+0x2310>  // b.none
  404c24:	str	wzr, [sp, #44]
  404c28:	ldrb	w0, [x19, #120]
  404c2c:	cbnz	w0, 404bec <ferror@plt+0x227c>
  404c30:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  404c34:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404c38:	add	x1, x1, #0x346
  404c3c:	ldr	x0, [x19, #1336]
  404c40:	bl	4049cc <ferror@plt+0x205c>
  404c44:	ldr	w0, [sp, #44]
  404c48:	cmp	w0, #0x0
  404c4c:	b.le	404c60 <ferror@plt+0x22f0>
  404c50:	ldr	x0, [x19, #1336]
  404c54:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404c58:	add	x1, x1, #0x391
  404c5c:	bl	4049cc <ferror@plt+0x205c>
  404c60:	ldr	x0, [x19, #1336]
  404c64:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  404c68:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404c6c:	add	x2, x2, #0x755
  404c70:	add	x1, x1, #0x3cd
  404c74:	bl	4049cc <ferror@plt+0x205c>
  404c78:	mov	w0, #0x4                   	// #4
  404c7c:	bl	402360 <exit@plt>
  404c80:	adrp	x20, 403000 <ferror@plt+0x690>
  404c84:	add	x20, x20, #0xe20
  404c88:	mov	x2, x20
  404c8c:	mov	x3, #0x0                   	// #0
  404c90:	mov	w1, #0x0                   	// #0
  404c94:	mov	x0, #0x0                   	// #0
  404c98:	bl	42be18 <ferror@plt+0x294a8>
  404c9c:	str	wzr, [sp, #44]
  404ca0:	cbz	x0, 404c28 <ferror@plt+0x22b8>
  404ca4:	add	x4, sp, #0x2c
  404ca8:	mov	x3, x20
  404cac:	adrp	x2, 403000 <ferror@plt+0x690>
  404cb0:	mov	w1, #0x2                   	// #2
  404cb4:	add	x2, x2, #0xf34
  404cb8:	bl	42bf14 <ferror@plt+0x295a4>
  404cbc:	b	404c28 <ferror@plt+0x22b8>
  404cc0:	ldrb	w0, [x19, #120]
  404cc4:	cbnz	w0, 404bec <ferror@plt+0x227c>
  404cc8:	mov	x0, x19
  404ccc:	bl	404acc <ferror@plt+0x215c>
  404cd0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  404cd4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404cd8:	add	x1, x1, #0x3e7
  404cdc:	ldr	x0, [x0, #1336]
  404ce0:	bl	4049cc <ferror@plt+0x205c>
  404ce4:	b	404c14 <ferror@plt+0x22a4>
  404ce8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  404cec:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  404cf0:	add	x2, x2, #0x400
  404cf4:	add	x0, x0, #0x41f
  404cf8:	mov	w1, #0x231                 	// #561
  404cfc:	bl	402980 <ferror@plt+0x10>
  404d00:	ldp	x19, x20, [sp, #16]
  404d04:	ldp	x29, x30, [sp], #48
  404d08:	ret
  404d0c:	stp	x29, x30, [sp, #-144]!
  404d10:	mov	x29, sp
  404d14:	stp	x19, x20, [sp, #16]
  404d18:	mov	x20, x1
  404d1c:	mov	x19, x0
  404d20:	mov	w1, #0x0                   	// #0
  404d24:	mov	x0, x20
  404d28:	stp	x21, x22, [sp, #32]
  404d2c:	stp	x23, x24, [sp, #48]
  404d30:	stp	x25, x26, [sp, #64]
  404d34:	bl	40adb4 <ferror@plt+0x8444>
  404d38:	ldr	w21, [x20, #56]
  404d3c:	mov	w1, w0
  404d40:	cmp	w21, #0x6
  404d44:	b.eq	404d50 <ferror@plt+0x23e0>  // b.none
  404d48:	cmp	w21, #0xa
  404d4c:	b.ne	404db0 <ferror@plt+0x2440>  // b.any
  404d50:	ldrb	w0, [x19, #129]
  404d54:	cbz	w0, 404d74 <ferror@plt+0x2404>
  404d58:	mov	w0, #0x0                   	// #0
  404d5c:	ldp	x19, x20, [sp, #16]
  404d60:	ldp	x21, x22, [sp, #32]
  404d64:	ldp	x23, x24, [sp, #48]
  404d68:	ldp	x25, x26, [sp, #64]
  404d6c:	ldp	x29, x30, [sp], #144
  404d70:	ret
  404d74:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  404d78:	ldr	x0, [x0, #1912]
  404d7c:	bl	423c64 <ferror@plt+0x212f4>
  404d80:	cbz	w0, 404d8c <ferror@plt+0x241c>
  404d84:	ldrb	w0, [x19, #130]
  404d88:	cbz	w0, 404d58 <ferror@plt+0x23e8>
  404d8c:	ldr	w0, [x20, #56]
  404d90:	cmp	w0, #0xa
  404d94:	b.ne	404db0 <ferror@plt+0x2440>  // b.any
  404d98:	ldrb	w0, [x19, #122]
  404d9c:	mov	w21, #0x4                   	// #4
  404da0:	cmp	w0, #0x0
  404da4:	mov	w0, #0x6                   	// #6
  404da8:	csel	w21, w21, w0, ne  // ne = any
  404dac:	str	w21, [x20, #56]
  404db0:	ldr	w1, [x20, #56]
  404db4:	cmp	w1, #0x8
  404db8:	b.ne	404dc4 <ferror@plt+0x2454>  // b.any
  404dbc:	ldrb	w0, [x19, #220]
  404dc0:	cbnz	w0, 404d58 <ferror@plt+0x23e8>
  404dc4:	ldr	w0, [x19, #216]
  404dc8:	cmp	w0, #0x0
  404dcc:	b.le	404df0 <ferror@plt+0x2480>
  404dd0:	cmp	w1, #0x3
  404dd4:	b.eq	404de0 <ferror@plt+0x2470>  // b.none
  404dd8:	cmp	w1, #0xd
  404ddc:	b.ne	404ea4 <ferror@plt+0x2534>  // b.any
  404de0:	cmp	w0, #0x1
  404de4:	b.ne	404ea4 <ferror@plt+0x2534>  // b.any
  404de8:	ldr	x0, [x19]
  404dec:	bl	40b7ac <ferror@plt+0x8e3c>
  404df0:	ldrb	w0, [x19, #64]
  404df4:	cbz	w0, 404e0c <ferror@plt+0x249c>
  404df8:	ldr	w0, [x20, #56]
  404dfc:	cmp	w0, #0x6
  404e00:	b.ne	404e0c <ferror@plt+0x249c>  // b.any
  404e04:	mov	w0, #0x4                   	// #4
  404e08:	str	w0, [x20, #56]
  404e0c:	ldr	w0, [x20, #60]
  404e10:	cbnz	w0, 404ed8 <ferror@plt+0x2568>
  404e14:	ldr	w0, [x20, #56]
  404e18:	cmp	w0, #0x8
  404e1c:	b.eq	404e2c <ferror@plt+0x24bc>  // b.none
  404e20:	mov	x0, x19
  404e24:	mov	w1, #0x0                   	// #0
  404e28:	bl	404b44 <ferror@plt+0x21d4>
  404e2c:	ldr	w0, [x19, #216]
  404e30:	add	w0, w0, #0x1
  404e34:	str	w0, [x19, #216]
  404e38:	ldr	w0, [x20, #56]
  404e3c:	cmp	w0, #0x3
  404e40:	b.eq	404e4c <ferror@plt+0x24dc>  // b.none
  404e44:	cmp	w0, #0xd
  404e48:	b.ne	404fb0 <ferror@plt+0x2640>  // b.any
  404e4c:	ldr	w0, [x19, #24]
  404e50:	cmp	w0, #0x0
  404e54:	b.gt	404e64 <ferror@plt+0x24f4>
  404e58:	ldr	w0, [x19, #28]
  404e5c:	cmp	w0, #0x0
  404e60:	b.le	404f9c <ferror@plt+0x262c>
  404e64:	ldrb	w0, [x19, #120]
  404e68:	cbnz	w0, 404f9c <ferror@plt+0x262c>
  404e6c:	mov	w1, #0x0                   	// #0
  404e70:	mov	x0, x20
  404e74:	bl	40adb4 <ferror@plt+0x8444>
  404e78:	add	x8, sp, #0x70
  404e7c:	bl	40ee94 <ferror@plt+0xc524>
  404e80:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  404e84:	ldr	w3, [sp, #120]
  404e88:	ldr	x2, [sp, #112]
  404e8c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404e90:	ldr	x0, [x0, #1336]
  404e94:	add	x1, x1, #0x475
  404e98:	bl	4049cc <ferror@plt+0x205c>
  404e9c:	mov	w0, #0x4                   	// #4
  404ea0:	bl	402360 <exit@plt>
  404ea4:	cmp	w0, #0x2
  404ea8:	b.gt	404eb4 <ferror@plt+0x2544>
  404eac:	ldr	x0, [x19]
  404eb0:	bl	40b7ac <ferror@plt+0x8e3c>
  404eb4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  404eb8:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  404ebc:	add	x1, x1, #0x436
  404ec0:	ldr	x0, [x0, #1336]
  404ec4:	bl	4049cc <ferror@plt+0x205c>
  404ec8:	mov	x0, x19
  404ecc:	mov	w1, #0x3                   	// #3
  404ed0:	bl	404bb0 <ferror@plt+0x2240>
  404ed4:	bl	402650 <abort@plt>
  404ed8:	ldr	w1, [x19, #124]
  404edc:	cmp	w0, w1
  404ee0:	b.eq	404e14 <ferror@plt+0x24a4>  // b.none
  404ee4:	ldp	x2, x1, [x19, #168]
  404ee8:	blr	x2
  404eec:	cbz	w0, 404d58 <ferror@plt+0x23e8>
  404ef0:	ldr	w0, [x19, #88]
  404ef4:	cmp	w0, #0x0
  404ef8:	b.le	404f84 <ferror@plt+0x2614>
  404efc:	mov	x0, x20
  404f00:	mov	w1, #0x0                   	// #0
  404f04:	bl	40adb4 <ferror@plt+0x8444>
  404f08:	ldr	w22, [x19, #88]
  404f0c:	mov	w23, w0
  404f10:	mov	w25, #0xc                   	// #12
  404f14:	sub	w22, w22, #0x1
  404f18:	adrp	x26, 478000 <_obstack_memory_used@@Base+0x3e198>
  404f1c:	tbnz	w22, #31, 404f84 <ferror@plt+0x2614>
  404f20:	smull	x24, w22, w25
  404f24:	mov	w2, w23
  404f28:	ldr	x0, [x19, #80]
  404f2c:	ldr	w1, [x0, x24]
  404f30:	ldr	x0, [x26, #1912]
  404f34:	bl	423f8c <ferror@plt+0x2161c>
  404f38:	tbnz	w0, #31, 404f7c <ferror@plt+0x260c>
  404f3c:	ldr	x1, [x19, #80]
  404f40:	add	x1, x1, x24
  404f44:	ldp	w0, w2, [x1, #4]
  404f48:	cmp	w2, #0xf
  404f4c:	b.eq	404f78 <ferror@plt+0x2608>  // b.none
  404f50:	cbz	w0, 404f60 <ferror@plt+0x25f0>
  404f54:	ldr	w1, [x20, #60]
  404f58:	cmp	w1, w0
  404f5c:	b.ne	404f7c <ferror@plt+0x260c>  // b.any
  404f60:	cbz	w2, 404f84 <ferror@plt+0x2614>
  404f64:	str	w2, [x20, #56]
  404f68:	ldr	w0, [x20, #56]
  404f6c:	cmp	w0, #0x1
  404f70:	b.ne	404e14 <ferror@plt+0x24a4>  // b.any
  404f74:	b	404d58 <ferror@plt+0x23e8>
  404f78:	mov	w22, w0
  404f7c:	sub	w22, w22, #0x1
  404f80:	b	404f1c <ferror@plt+0x25ac>
  404f84:	ldrsw	x1, [x20, #60]
  404f88:	ldr	x0, [x19, #72]
  404f8c:	ldr	w0, [x0, x1, lsl #2]
  404f90:	cbz	w0, 404f68 <ferror@plt+0x25f8>
  404f94:	str	w0, [x20, #56]
  404f98:	b	404f68 <ferror@plt+0x25f8>
  404f9c:	ldr	x3, [x19, #160]
  404fa0:	cbz	x3, 404fb0 <ferror@plt+0x2640>
  404fa4:	ldp	x1, x2, [x20]
  404fa8:	mov	x0, x19
  404fac:	blr	x3
  404fb0:	ldr	w0, [x20, #56]
  404fb4:	cmp	w0, #0x4
  404fb8:	b.ne	4050f8 <ferror@plt+0x2788>  // b.any
  404fbc:	cmp	w21, #0x6
  404fc0:	b.ne	4050f8 <ferror@plt+0x2788>  // b.any
  404fc4:	ldr	w0, [x19, #56]
  404fc8:	add	w0, w0, #0x1
  404fcc:	str	w0, [x19, #56]
  404fd0:	ldr	w0, [x19, #244]
  404fd4:	cbnz	w0, 404fe8 <ferror@plt+0x2678>
  404fd8:	ldr	x1, [x19, #248]
  404fdc:	cbz	x1, 404fe8 <ferror@plt+0x2678>
  404fe0:	mov	x0, x19
  404fe4:	blr	x1
  404fe8:	ldr	w0, [x19, #244]
  404fec:	mov	x1, x20
  404ff0:	add	w0, w0, #0x1
  404ff4:	str	w0, [x19, #244]
  404ff8:	add	x0, x20, #0x30
  404ffc:	str	x0, [x20, #24]
  405000:	str	xzr, [x20, #48]
  405004:	ldr	x0, [x19]
  405008:	bl	40b8bc <ferror@plt+0x8f4c>
  40500c:	ldr	x2, [x19, #136]
  405010:	mov	x1, x20
  405014:	mov	x0, x19
  405018:	blr	x2
  40501c:	ldr	x0, [x19]
  405020:	bl	40b6ac <ferror@plt+0x8d3c>
  405024:	ldrb	w0, [x19, #119]
  405028:	cbz	w0, 4050b8 <ferror@plt+0x2748>
  40502c:	ldp	w3, w1, [x20, #56]
  405030:	mov	w2, w21
  405034:	ldr	x4, [x19, #184]
  405038:	mov	x0, x19
  40503c:	blr	x4
  405040:	mov	x23, x0
  405044:	cbz	x0, 4050b8 <ferror@plt+0x2748>
  405048:	ldr	x22, [x19]
  40504c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  405050:	add	x1, x1, #0x4a5
  405054:	mov	x0, x22
  405058:	bl	40b678 <ferror@plt+0x8d08>
  40505c:	ldrsw	x1, [x20, #56]
  405060:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  405064:	add	x0, x0, #0x6e0
  405068:	add	x0, x0, #0x20
  40506c:	ldr	x1, [x0, x1, lsl #3]
  405070:	ldrb	w0, [x22, #67]
  405074:	bl	40685c <ferror@plt+0x3eec>
  405078:	mov	x1, x0
  40507c:	mov	x0, x22
  405080:	bl	40b678 <ferror@plt+0x8d08>
  405084:	mov	x1, x23
  405088:	mov	x0, x22
  40508c:	bl	40b678 <ferror@plt+0x8d08>
  405090:	ldrb	w0, [x22, #67]
  405094:	bl	406b78 <ferror@plt+0x4208>
  405098:	mov	x1, x0
  40509c:	mov	x0, x22
  4050a0:	bl	40b678 <ferror@plt+0x8d08>
  4050a4:	mov	w1, #0x5d                  	// #93
  4050a8:	mov	x0, x22
  4050ac:	bl	40b2cc <ferror@plt+0x895c>
  4050b0:	mov	x0, x23
  4050b4:	bl	402730 <free@plt>
  4050b8:	ldr	x3, [x19, #152]
  4050bc:	mov	x0, x19
  4050c0:	mov	w2, w21
  4050c4:	mov	x1, x20
  4050c8:	blr	x3
  4050cc:	ldrb	w0, [x19, #229]
  4050d0:	cbz	w0, 4051d4 <ferror@plt+0x2864>
  4050d4:	ldr	x22, [x19]
  4050d8:	ldr	x25, [x20, #40]
  4050dc:	cbnz	x22, 40510c <ferror@plt+0x279c>
  4050e0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4050e4:	add	x2, x2, #0x4a8
  4050e8:	mov	w1, #0x322                 	// #802
  4050ec:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4050f0:	add	x0, x0, #0x41f
  4050f4:	bl	402980 <ferror@plt+0x10>
  4050f8:	add	x0, x19, w0, sxtw #2
  4050fc:	ldr	w1, [x0, #8]
  405100:	add	w1, w1, #0x1
  405104:	str	w1, [x0, #8]
  405108:	b	404fd0 <ferror@plt+0x2660>
  40510c:	mov	w21, #0x0                   	// #0
  405110:	cbz	x25, 4051a8 <ferror@plt+0x2838>
  405114:	adrp	x24, 44b000 <_obstack_memory_used@@Base+0x11198>
  405118:	add	x26, x25, #0x78
  40511c:	add	x24, x24, #0x4bf
  405120:	ldr	w0, [x25, #120]
  405124:	cmp	w0, w21
  405128:	b.ls	4051cc <ferror@plt+0x285c>  // b.plast
  40512c:	sxtw	x0, w21
  405130:	cmp	w21, #0x1
  405134:	b.gt	4051b8 <ferror@plt+0x2848>
  405138:	add	x0, x0, #0x1
  40513c:	add	x0, x26, x0, lsl #3
  405140:	ldr	x23, [x0]
  405144:	add	x8, sp, #0x50
  405148:	add	w21, w21, #0x1
  40514c:	ldr	w0, [x23]
  405150:	bl	40ee94 <ferror@plt+0xc524>
  405154:	mov	x1, x24
  405158:	mov	x0, x22
  40515c:	bl	40b678 <ferror@plt+0x8d08>
  405160:	ldr	x1, [sp, #80]
  405164:	mov	x0, x22
  405168:	bl	405ec8 <ferror@plt+0x3558>
  40516c:	ldr	w0, [x23, #4]
  405170:	add	x8, sp, #0x70
  405174:	bl	40ee94 <ferror@plt+0xc524>
  405178:	ldp	w2, w3, [sp, #88]
  40517c:	mov	x0, x22
  405180:	ldp	w4, w5, [sp, #120]
  405184:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  405188:	add	x1, x1, #0x4c7
  40518c:	bl	40ccc0 <ferror@plt+0xa350>
  405190:	ldr	x1, [x23, #8]
  405194:	mov	x0, x22
  405198:	bl	405ec8 <ferror@plt+0x3558>
  40519c:	mov	x0, x22
  4051a0:	bl	40b270 <ferror@plt+0x8900>
  4051a4:	b	405120 <ferror@plt+0x27b0>
  4051a8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4051ac:	mov	w1, #0x323                 	// #803
  4051b0:	add	x2, x2, #0x4a8
  4051b4:	b	4050ec <ferror@plt+0x277c>
  4051b8:	mov	x0, #0xfffffffffffffff0    	// #-16
  4051bc:	add	x1, x0, w21, sxtw #3
  4051c0:	ldr	x0, [x26, #32]
  4051c4:	add	x0, x0, x1
  4051c8:	b	405140 <ferror@plt+0x27d0>
  4051cc:	ldr	x0, [x19]
  4051d0:	bl	40b0e4 <ferror@plt+0x8774>
  4051d4:	ldr	w1, [x20, #56]
  4051d8:	mov	x0, x19
  4051dc:	bl	404bb0 <ferror@plt+0x2240>
  4051e0:	str	xzr, [x20, #48]
  4051e4:	ldr	x0, [x19, #232]
  4051e8:	cbz	x0, 4051fc <ferror@plt+0x288c>
  4051ec:	ldr	x1, [x20, #40]
  4051f0:	ldrb	w2, [x1, #161]
  4051f4:	cbnz	w2, 4051fc <ferror@plt+0x288c>
  4051f8:	bl	40a304 <ferror@plt+0x7994>
  4051fc:	ldr	w0, [x19, #216]
  405200:	sub	w0, w0, #0x1
  405204:	str	w0, [x19, #216]
  405208:	mov	w0, #0x1                   	// #1
  40520c:	b	404d5c <ferror@plt+0x23ec>
  405210:	stp	x29, x30, [sp, #-112]!
  405214:	cmp	w4, #0xb
  405218:	mov	x29, sp
  40521c:	stp	x19, x20, [sp, #16]
  405220:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  405224:	str	x21, [sp, #32]
  405228:	mov	w21, w1
  40522c:	mov	x1, x2
  405230:	mov	x2, x3
  405234:	b.ne	405284 <ferror@plt+0x2914>  // b.any
  405238:	ldr	x3, [x20, #864]
  40523c:	mov	w4, #0x6                   	// #6
  405240:	ldrb	w3, [x3, #123]
  405244:	cmp	w3, #0x0
  405248:	mov	w3, #0x4                   	// #4
  40524c:	csel	w4, w4, w3, ne  // ne = any
  405250:	mov	x3, x0
  405254:	add	x0, sp, #0x30
  405258:	bl	405bf8 <ferror@plt+0x3288>
  40525c:	ldr	x0, [x20, #864]
  405260:	ldr	w0, [x0, #124]
  405264:	str	w0, [sp, #108]
  405268:	ldr	x0, [x20, #864]
  40526c:	add	x1, sp, #0x30
  405270:	bl	404d0c <ferror@plt+0x239c>
  405274:	ldp	x19, x20, [sp, #16]
  405278:	ldr	x21, [sp, #32]
  40527c:	ldp	x29, x30, [sp], #112
  405280:	ret
  405284:	mov	w19, w4
  405288:	mov	x3, x0
  40528c:	add	x0, sp, #0x30
  405290:	bl	405bf8 <ferror@plt+0x3288>
  405294:	cmp	w19, #0x6
  405298:	ccmp	w19, #0xa, #0x4, ne  // ne = any
  40529c:	b.ne	405268 <ferror@plt+0x28f8>  // b.any
  4052a0:	str	w21, [sp, #108]
  4052a4:	b	405268 <ferror@plt+0x28f8>
  4052a8:	stp	x29, x30, [sp, #-416]!
  4052ac:	mov	w8, w1
  4052b0:	mov	x29, sp
  4052b4:	stp	x19, x20, [sp, #16]
  4052b8:	mov	w19, w2
  4052bc:	mov	x20, x3
  4052c0:	str	x21, [sp, #32]
  4052c4:	mov	w21, w0
  4052c8:	str	q0, [sp, #256]
  4052cc:	str	q1, [sp, #272]
  4052d0:	str	q2, [sp, #288]
  4052d4:	str	q3, [sp, #304]
  4052d8:	str	q4, [sp, #320]
  4052dc:	str	q5, [sp, #336]
  4052e0:	str	q6, [sp, #352]
  4052e4:	str	q7, [sp, #368]
  4052e8:	stp	x4, x5, [sp, #384]
  4052ec:	stp	x6, x7, [sp, #400]
  4052f0:	bl	40409c <ferror@plt+0x172c>
  4052f4:	add	x0, sp, #0x1a0
  4052f8:	stp	x0, x0, [sp, #56]
  4052fc:	add	x0, sp, #0x180
  405300:	mov	w2, w8
  405304:	str	x0, [sp, #72]
  405308:	mov	w0, #0xffffffe0            	// #-32
  40530c:	str	w0, [sp, #80]
  405310:	mov	w0, #0xffffff80            	// #-128
  405314:	str	w0, [sp, #84]
  405318:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40531c:	mov	x3, #0x0                   	// #0
  405320:	ldr	x1, [x0, #1912]
  405324:	add	x0, sp, #0x58
  405328:	bl	424c1c <ferror@plt+0x222ac>
  40532c:	mov	w4, w21
  405330:	add	x3, sp, #0x38
  405334:	mov	x2, x20
  405338:	mov	w1, w19
  40533c:	add	x0, sp, #0x58
  405340:	bl	405210 <ferror@plt+0x28a0>
  405344:	mov	w19, w0
  405348:	add	x0, sp, #0x58
  40534c:	bl	4249b0 <ferror@plt+0x22040>
  405350:	add	x0, sp, #0x30
  405354:	bl	404a74 <ferror@plt+0x2104>
  405358:	mov	w0, w19
  40535c:	ldp	x19, x20, [sp, #16]
  405360:	ldr	x21, [sp, #32]
  405364:	ldp	x29, x30, [sp], #416
  405368:	ret
  40536c:	stp	x29, x30, [sp, #-240]!
  405370:	mov	w10, w0
  405374:	mov	x8, x1
  405378:	mov	w9, w2
  40537c:	mov	x2, x3
  405380:	mov	x29, sp
  405384:	str	x19, [sp, #16]
  405388:	str	q0, [sp, #80]
  40538c:	str	q1, [sp, #96]
  405390:	str	q2, [sp, #112]
  405394:	str	q3, [sp, #128]
  405398:	str	q4, [sp, #144]
  40539c:	str	q5, [sp, #160]
  4053a0:	str	q6, [sp, #176]
  4053a4:	str	q7, [sp, #192]
  4053a8:	stp	x4, x5, [sp, #208]
  4053ac:	stp	x6, x7, [sp, #224]
  4053b0:	bl	40409c <ferror@plt+0x172c>
  4053b4:	add	x0, sp, #0xf0
  4053b8:	stp	x0, x0, [sp, #48]
  4053bc:	add	x0, sp, #0xd0
  4053c0:	add	x3, sp, #0x30
  4053c4:	mov	w4, w10
  4053c8:	mov	w1, w9
  4053cc:	str	x0, [sp, #64]
  4053d0:	mov	w0, #0xffffffe0            	// #-32
  4053d4:	str	w0, [sp, #72]
  4053d8:	mov	w0, #0xffffff80            	// #-128
  4053dc:	str	w0, [sp, #76]
  4053e0:	mov	x0, x8
  4053e4:	bl	405210 <ferror@plt+0x28a0>
  4053e8:	mov	w19, w0
  4053ec:	add	x0, sp, #0x28
  4053f0:	bl	404a74 <ferror@plt+0x2104>
  4053f4:	mov	w0, w19
  4053f8:	ldr	x19, [sp, #16]
  4053fc:	ldp	x29, x30, [sp], #240
  405400:	ret
  405404:	stp	x29, x30, [sp, #-224]!
  405408:	mov	x29, sp
  40540c:	stp	x21, x22, [sp, #32]
  405410:	mov	w22, w0
  405414:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  405418:	stp	x19, x20, [sp, #16]
  40541c:	mov	w19, w2
  405420:	mov	w2, w1
  405424:	ldr	x1, [x0, #1912]
  405428:	mov	x21, x4
  40542c:	mov	x20, x3
  405430:	add	x0, sp, #0x38
  405434:	mov	x3, #0x0                   	// #0
  405438:	bl	424c1c <ferror@plt+0x222ac>
  40543c:	mov	w4, w22
  405440:	mov	x3, x21
  405444:	mov	x2, x20
  405448:	mov	w1, w19
  40544c:	add	x0, sp, #0x38
  405450:	bl	405210 <ferror@plt+0x28a0>
  405454:	mov	w19, w0
  405458:	add	x0, sp, #0x38
  40545c:	bl	4249b0 <ferror@plt+0x22040>
  405460:	mov	w0, w19
  405464:	ldp	x19, x20, [sp, #16]
  405468:	ldp	x21, x22, [sp, #32]
  40546c:	ldp	x29, x30, [sp], #224
  405470:	ret
  405474:	stp	x29, x30, [sp, #-416]!
  405478:	mov	w8, w0
  40547c:	mov	x29, sp
  405480:	str	x19, [sp, #16]
  405484:	mov	x19, x1
  405488:	str	q0, [sp, #240]
  40548c:	str	q1, [sp, #256]
  405490:	str	q2, [sp, #272]
  405494:	str	q3, [sp, #288]
  405498:	str	q4, [sp, #304]
  40549c:	str	q5, [sp, #320]
  4054a0:	str	q6, [sp, #336]
  4054a4:	str	q7, [sp, #352]
  4054a8:	stp	x2, x3, [sp, #368]
  4054ac:	stp	x4, x5, [sp, #384]
  4054b0:	stp	x6, x7, [sp, #400]
  4054b4:	bl	40409c <ferror@plt+0x172c>
  4054b8:	add	x0, sp, #0x1a0
  4054bc:	stp	x0, x0, [sp, #40]
  4054c0:	add	x0, sp, #0x170
  4054c4:	mov	w2, w8
  4054c8:	str	x0, [sp, #56]
  4054cc:	mov	w0, #0xffffffd0            	// #-48
  4054d0:	str	w0, [sp, #64]
  4054d4:	mov	w0, #0xffffff80            	// #-128
  4054d8:	str	w0, [sp, #68]
  4054dc:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4054e0:	mov	x3, #0x0                   	// #0
  4054e4:	ldr	x1, [x0, #1912]
  4054e8:	add	x0, sp, #0x48
  4054ec:	bl	424c1c <ferror@plt+0x222ac>
  4054f0:	add	x3, sp, #0x28
  4054f4:	mov	x2, x19
  4054f8:	mov	w4, #0x8                   	// #8
  4054fc:	mov	w1, #0xffffffff            	// #-1
  405500:	add	x0, sp, #0x48
  405504:	bl	405210 <ferror@plt+0x28a0>
  405508:	add	x0, sp, #0x48
  40550c:	bl	4249b0 <ferror@plt+0x22040>
  405510:	add	x0, sp, #0x20
  405514:	bl	404a74 <ferror@plt+0x2104>
  405518:	ldr	x19, [sp, #16]
  40551c:	ldp	x29, x30, [sp], #416
  405520:	ret
  405524:	stp	x29, x30, [sp, #-416]!
  405528:	mov	x29, sp
  40552c:	stp	x19, x20, [sp, #16]
  405530:	mov	w19, w0
  405534:	mov	x20, x1
  405538:	str	q0, [sp, #240]
  40553c:	str	q1, [sp, #256]
  405540:	str	q2, [sp, #272]
  405544:	str	q3, [sp, #288]
  405548:	str	q4, [sp, #304]
  40554c:	str	q5, [sp, #320]
  405550:	str	q6, [sp, #336]
  405554:	str	q7, [sp, #352]
  405558:	stp	x2, x3, [sp, #368]
  40555c:	stp	x4, x5, [sp, #384]
  405560:	stp	x6, x7, [sp, #400]
  405564:	bl	40409c <ferror@plt+0x172c>
  405568:	add	x0, sp, #0x1a0
  40556c:	stp	x0, x0, [sp, #40]
  405570:	add	x0, sp, #0x170
  405574:	mov	x3, #0x0                   	// #0
  405578:	str	x0, [sp, #56]
  40557c:	mov	w0, #0xffffffd0            	// #-48
  405580:	str	w0, [sp, #64]
  405584:	mov	w0, #0xffffff80            	// #-128
  405588:	str	w0, [sp, #68]
  40558c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  405590:	ldr	w2, [x0, #1936]
  405594:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  405598:	ldr	x1, [x0, #1912]
  40559c:	add	x0, sp, #0x48
  4055a0:	bl	424c1c <ferror@plt+0x222ac>
  4055a4:	add	x3, sp, #0x28
  4055a8:	mov	x2, x20
  4055ac:	mov	w1, w19
  4055b0:	mov	w4, #0x6                   	// #6
  4055b4:	add	x0, sp, #0x48
  4055b8:	bl	405210 <ferror@plt+0x28a0>
  4055bc:	mov	w19, w0
  4055c0:	add	x0, sp, #0x48
  4055c4:	bl	4249b0 <ferror@plt+0x22040>
  4055c8:	add	x0, sp, #0x20
  4055cc:	bl	404a74 <ferror@plt+0x2104>
  4055d0:	mov	w0, w19
  4055d4:	ldp	x19, x20, [sp, #16]
  4055d8:	ldp	x29, x30, [sp], #416
  4055dc:	ret
  4055e0:	stp	x29, x30, [sp, #-416]!
  4055e4:	mov	w8, w0
  4055e8:	mov	x29, sp
  4055ec:	stp	x19, x20, [sp, #16]
  4055f0:	mov	w19, w1
  4055f4:	mov	x20, x2
  4055f8:	str	q0, [sp, #240]
  4055fc:	str	q1, [sp, #256]
  405600:	str	q2, [sp, #272]
  405604:	str	q3, [sp, #288]
  405608:	str	q4, [sp, #304]
  40560c:	str	q5, [sp, #320]
  405610:	str	q6, [sp, #336]
  405614:	str	q7, [sp, #352]
  405618:	stp	x3, x4, [sp, #376]
  40561c:	stp	x5, x6, [sp, #392]
  405620:	str	x7, [sp, #408]
  405624:	bl	40409c <ferror@plt+0x172c>
  405628:	add	x0, sp, #0x1a0
  40562c:	stp	x0, x0, [sp, #40]
  405630:	add	x0, sp, #0x170
  405634:	str	x0, [sp, #56]
  405638:	mov	w0, #0xffffffd8            	// #-40
  40563c:	str	w0, [sp, #64]
  405640:	mov	w0, #0xffffff80            	// #-128
  405644:	str	w0, [sp, #68]
  405648:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40564c:	mov	w2, w8
  405650:	mov	x3, #0x0                   	// #0
  405654:	ldr	x1, [x0, #1912]
  405658:	add	x0, sp, #0x48
  40565c:	bl	424c1c <ferror@plt+0x222ac>
  405660:	add	x3, sp, #0x28
  405664:	mov	x2, x20
  405668:	mov	w1, w19
  40566c:	mov	w4, #0x6                   	// #6
  405670:	add	x0, sp, #0x48
  405674:	bl	405210 <ferror@plt+0x28a0>
  405678:	mov	w19, w0
  40567c:	add	x0, sp, #0x48
  405680:	bl	4249b0 <ferror@plt+0x22040>
  405684:	add	x0, sp, #0x20
  405688:	bl	404a74 <ferror@plt+0x2104>
  40568c:	mov	w0, w19
  405690:	ldp	x19, x20, [sp, #16]
  405694:	ldp	x29, x30, [sp], #416
  405698:	ret
  40569c:	stp	x29, x30, [sp, #-416]!
  4056a0:	mov	w8, w0
  4056a4:	mov	x29, sp
  4056a8:	stp	x19, x20, [sp, #16]
  4056ac:	mov	w19, w1
  4056b0:	mov	x20, x2
  4056b4:	str	q0, [sp, #240]
  4056b8:	str	q1, [sp, #256]
  4056bc:	str	q2, [sp, #272]
  4056c0:	str	q3, [sp, #288]
  4056c4:	str	q4, [sp, #304]
  4056c8:	str	q5, [sp, #320]
  4056cc:	str	q6, [sp, #336]
  4056d0:	str	q7, [sp, #352]
  4056d4:	stp	x3, x4, [sp, #376]
  4056d8:	stp	x5, x6, [sp, #392]
  4056dc:	str	x7, [sp, #408]
  4056e0:	bl	40409c <ferror@plt+0x172c>
  4056e4:	add	x0, sp, #0x1a0
  4056e8:	stp	x0, x0, [sp, #40]
  4056ec:	add	x0, sp, #0x170
  4056f0:	str	x0, [sp, #56]
  4056f4:	mov	w0, #0xffffffd8            	// #-40
  4056f8:	str	w0, [sp, #64]
  4056fc:	mov	w0, #0xffffff80            	// #-128
  405700:	str	w0, [sp, #68]
  405704:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  405708:	mov	w2, w8
  40570c:	mov	x3, #0x0                   	// #0
  405710:	ldr	x1, [x0, #1912]
  405714:	add	x0, sp, #0x48
  405718:	bl	424c1c <ferror@plt+0x222ac>
  40571c:	add	x3, sp, #0x28
  405720:	mov	x2, x20
  405724:	mov	w1, w19
  405728:	mov	w4, #0xa                   	// #10
  40572c:	add	x0, sp, #0x48
  405730:	bl	405210 <ferror@plt+0x28a0>
  405734:	mov	w19, w0
  405738:	add	x0, sp, #0x48
  40573c:	bl	4249b0 <ferror@plt+0x22040>
  405740:	add	x0, sp, #0x20
  405744:	bl	404a74 <ferror@plt+0x2104>
  405748:	mov	w0, w19
  40574c:	ldp	x19, x20, [sp, #16]
  405750:	ldp	x29, x30, [sp], #416
  405754:	ret
  405758:	stp	x29, x30, [sp, #-416]!
  40575c:	mov	w8, w0
  405760:	mov	x29, sp
  405764:	str	x19, [sp, #16]
  405768:	mov	x19, x1
  40576c:	str	q0, [sp, #240]
  405770:	str	q1, [sp, #256]
  405774:	str	q2, [sp, #272]
  405778:	str	q3, [sp, #288]
  40577c:	str	q4, [sp, #304]
  405780:	str	q5, [sp, #320]
  405784:	str	q6, [sp, #336]
  405788:	str	q7, [sp, #352]
  40578c:	stp	x2, x3, [sp, #368]
  405790:	stp	x4, x5, [sp, #384]
  405794:	stp	x6, x7, [sp, #400]
  405798:	bl	40409c <ferror@plt+0x172c>
  40579c:	add	x0, sp, #0x1a0
  4057a0:	stp	x0, x0, [sp, #40]
  4057a4:	add	x0, sp, #0x170
  4057a8:	mov	w2, w8
  4057ac:	str	x0, [sp, #56]
  4057b0:	mov	w0, #0xffffffd0            	// #-48
  4057b4:	str	w0, [sp, #64]
  4057b8:	mov	w0, #0xffffff80            	// #-128
  4057bc:	str	w0, [sp, #68]
  4057c0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4057c4:	mov	x3, #0x0                   	// #0
  4057c8:	ldr	x1, [x0, #1912]
  4057cc:	add	x0, sp, #0x48
  4057d0:	bl	424c1c <ferror@plt+0x222ac>
  4057d4:	add	x3, sp, #0x28
  4057d8:	mov	x2, x19
  4057dc:	mov	w4, #0xb                   	// #11
  4057e0:	mov	w1, #0xffffffff            	// #-1
  4057e4:	add	x0, sp, #0x48
  4057e8:	bl	405210 <ferror@plt+0x28a0>
  4057ec:	mov	w19, w0
  4057f0:	add	x0, sp, #0x48
  4057f4:	bl	4249b0 <ferror@plt+0x22040>
  4057f8:	add	x0, sp, #0x20
  4057fc:	bl	404a74 <ferror@plt+0x2104>
  405800:	mov	w0, w19
  405804:	ldr	x19, [sp, #16]
  405808:	ldp	x29, x30, [sp], #416
  40580c:	ret
  405810:	stp	x29, x30, [sp, #-432]!
  405814:	mov	x29, sp
  405818:	str	x19, [sp, #16]
  40581c:	mov	x19, x0
  405820:	str	q0, [sp, #240]
  405824:	str	q1, [sp, #256]
  405828:	str	q2, [sp, #272]
  40582c:	str	q3, [sp, #288]
  405830:	str	q4, [sp, #304]
  405834:	str	q5, [sp, #320]
  405838:	str	q6, [sp, #336]
  40583c:	str	q7, [sp, #352]
  405840:	stp	x1, x2, [sp, #376]
  405844:	stp	x3, x4, [sp, #392]
  405848:	stp	x5, x6, [sp, #408]
  40584c:	str	x7, [sp, #424]
  405850:	bl	40409c <ferror@plt+0x172c>
  405854:	add	x0, sp, #0x1b0
  405858:	stp	x0, x0, [sp, #40]
  40585c:	add	x0, sp, #0x170
  405860:	str	x0, [sp, #56]
  405864:	mov	w0, #0xffffffc8            	// #-56
  405868:	str	w0, [sp, #64]
  40586c:	mov	w0, #0xffffff80            	// #-128
  405870:	str	w0, [sp, #68]
  405874:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  405878:	mov	x3, #0x0                   	// #0
  40587c:	ldr	w2, [x0, #1936]
  405880:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  405884:	ldr	x1, [x0, #1912]
  405888:	add	x0, sp, #0x48
  40588c:	bl	424c1c <ferror@plt+0x222ac>
  405890:	add	x3, sp, #0x28
  405894:	mov	x2, x19
  405898:	mov	w4, #0x4                   	// #4
  40589c:	mov	w1, #0xffffffff            	// #-1
  4058a0:	add	x0, sp, #0x48
  4058a4:	bl	405210 <ferror@plt+0x28a0>
  4058a8:	add	x0, sp, #0x48
  4058ac:	bl	4249b0 <ferror@plt+0x22040>
  4058b0:	add	x0, sp, #0x20
  4058b4:	bl	404a74 <ferror@plt+0x2104>
  4058b8:	ldr	x19, [sp, #16]
  4058bc:	ldp	x29, x30, [sp], #432
  4058c0:	ret
  4058c4:	stp	x29, x30, [sp, #-416]!
  4058c8:	mov	w8, w0
  4058cc:	mov	x29, sp
  4058d0:	str	x19, [sp, #16]
  4058d4:	mov	x19, x1
  4058d8:	str	q0, [sp, #240]
  4058dc:	str	q1, [sp, #256]
  4058e0:	str	q2, [sp, #272]
  4058e4:	str	q3, [sp, #288]
  4058e8:	str	q4, [sp, #304]
  4058ec:	str	q5, [sp, #320]
  4058f0:	str	q6, [sp, #336]
  4058f4:	str	q7, [sp, #352]
  4058f8:	stp	x2, x3, [sp, #368]
  4058fc:	stp	x4, x5, [sp, #384]
  405900:	stp	x6, x7, [sp, #400]
  405904:	bl	40409c <ferror@plt+0x172c>
  405908:	add	x0, sp, #0x1a0
  40590c:	stp	x0, x0, [sp, #40]
  405910:	add	x0, sp, #0x170
  405914:	mov	w2, w8
  405918:	str	x0, [sp, #56]
  40591c:	mov	w0, #0xffffffd0            	// #-48
  405920:	str	w0, [sp, #64]
  405924:	mov	w0, #0xffffff80            	// #-128
  405928:	str	w0, [sp, #68]
  40592c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  405930:	mov	x3, #0x0                   	// #0
  405934:	ldr	x1, [x0, #1912]
  405938:	add	x0, sp, #0x48
  40593c:	bl	424c1c <ferror@plt+0x222ac>
  405940:	add	x3, sp, #0x28
  405944:	mov	x2, x19
  405948:	mov	w4, #0x4                   	// #4
  40594c:	mov	w1, #0xffffffff            	// #-1
  405950:	add	x0, sp, #0x48
  405954:	bl	405210 <ferror@plt+0x28a0>
  405958:	add	x0, sp, #0x48
  40595c:	bl	4249b0 <ferror@plt+0x22040>
  405960:	add	x0, sp, #0x20
  405964:	bl	404a74 <ferror@plt+0x2104>
  405968:	ldr	x19, [sp, #16]
  40596c:	ldp	x29, x30, [sp], #416
  405970:	ret
  405974:	stp	x29, x30, [sp, #-432]!
  405978:	mov	x29, sp
  40597c:	str	x19, [sp, #16]
  405980:	mov	x19, x0
  405984:	str	q0, [sp, #240]
  405988:	str	q1, [sp, #256]
  40598c:	str	q2, [sp, #272]
  405990:	str	q3, [sp, #288]
  405994:	str	q4, [sp, #304]
  405998:	str	q5, [sp, #320]
  40599c:	str	q6, [sp, #336]
  4059a0:	str	q7, [sp, #352]
  4059a4:	stp	x1, x2, [sp, #376]
  4059a8:	stp	x3, x4, [sp, #392]
  4059ac:	stp	x5, x6, [sp, #408]
  4059b0:	str	x7, [sp, #424]
  4059b4:	bl	40409c <ferror@plt+0x172c>
  4059b8:	add	x0, sp, #0x1b0
  4059bc:	stp	x0, x0, [sp, #40]
  4059c0:	add	x0, sp, #0x170
  4059c4:	str	x0, [sp, #56]
  4059c8:	mov	w0, #0xffffffc8            	// #-56
  4059cc:	str	w0, [sp, #64]
  4059d0:	mov	w0, #0xffffff80            	// #-128
  4059d4:	str	w0, [sp, #68]
  4059d8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4059dc:	mov	x3, #0x0                   	// #0
  4059e0:	ldr	w2, [x0, #1936]
  4059e4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4059e8:	ldr	x1, [x0, #1912]
  4059ec:	add	x0, sp, #0x48
  4059f0:	bl	424c1c <ferror@plt+0x222ac>
  4059f4:	add	x3, sp, #0x28
  4059f8:	mov	x2, x19
  4059fc:	mov	w4, #0x5                   	// #5
  405a00:	mov	w1, #0xffffffff            	// #-1
  405a04:	add	x0, sp, #0x48
  405a08:	bl	405210 <ferror@plt+0x28a0>
  405a0c:	add	x0, sp, #0x48
  405a10:	bl	4249b0 <ferror@plt+0x22040>
  405a14:	add	x0, sp, #0x20
  405a18:	bl	404a74 <ferror@plt+0x2104>
  405a1c:	ldr	x19, [sp, #16]
  405a20:	ldp	x29, x30, [sp], #432
  405a24:	ret
  405a28:	stp	x29, x30, [sp, #-416]!
  405a2c:	mov	w8, w0
  405a30:	mov	x29, sp
  405a34:	str	x19, [sp, #16]
  405a38:	mov	x19, x1
  405a3c:	str	q0, [sp, #240]
  405a40:	str	q1, [sp, #256]
  405a44:	str	q2, [sp, #272]
  405a48:	str	q3, [sp, #288]
  405a4c:	str	q4, [sp, #304]
  405a50:	str	q5, [sp, #320]
  405a54:	str	q6, [sp, #336]
  405a58:	str	q7, [sp, #352]
  405a5c:	stp	x2, x3, [sp, #368]
  405a60:	stp	x4, x5, [sp, #384]
  405a64:	stp	x6, x7, [sp, #400]
  405a68:	bl	40409c <ferror@plt+0x172c>
  405a6c:	add	x0, sp, #0x1a0
  405a70:	stp	x0, x0, [sp, #40]
  405a74:	add	x0, sp, #0x170
  405a78:	mov	w2, w8
  405a7c:	str	x0, [sp, #56]
  405a80:	mov	w0, #0xffffffd0            	// #-48
  405a84:	str	w0, [sp, #64]
  405a88:	mov	w0, #0xffffff80            	// #-128
  405a8c:	str	w0, [sp, #68]
  405a90:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  405a94:	mov	x3, #0x0                   	// #0
  405a98:	ldr	x1, [x0, #1912]
  405a9c:	add	x0, sp, #0x48
  405aa0:	bl	424c1c <ferror@plt+0x222ac>
  405aa4:	add	x3, sp, #0x28
  405aa8:	mov	x2, x19
  405aac:	mov	w4, #0x5                   	// #5
  405ab0:	mov	w1, #0xffffffff            	// #-1
  405ab4:	add	x0, sp, #0x48
  405ab8:	bl	405210 <ferror@plt+0x28a0>
  405abc:	add	x0, sp, #0x48
  405ac0:	bl	4249b0 <ferror@plt+0x22040>
  405ac4:	add	x0, sp, #0x20
  405ac8:	bl	404a74 <ferror@plt+0x2104>
  405acc:	ldr	x19, [sp, #16]
  405ad0:	ldp	x29, x30, [sp], #416
  405ad4:	ret
  405ad8:	stp	x29, x30, [sp, #-432]!
  405adc:	mov	x29, sp
  405ae0:	str	x19, [sp, #16]
  405ae4:	mov	x19, x0
  405ae8:	str	q0, [sp, #240]
  405aec:	str	q1, [sp, #256]
  405af0:	str	q2, [sp, #272]
  405af4:	str	q3, [sp, #288]
  405af8:	str	q4, [sp, #304]
  405afc:	str	q5, [sp, #320]
  405b00:	str	q6, [sp, #336]
  405b04:	str	q7, [sp, #352]
  405b08:	stp	x1, x2, [sp, #376]
  405b0c:	stp	x3, x4, [sp, #392]
  405b10:	stp	x5, x6, [sp, #408]
  405b14:	str	x7, [sp, #424]
  405b18:	bl	40409c <ferror@plt+0x172c>
  405b1c:	add	x0, sp, #0x1b0
  405b20:	stp	x0, x0, [sp, #40]
  405b24:	add	x0, sp, #0x170
  405b28:	str	x0, [sp, #56]
  405b2c:	mov	w0, #0xffffffc8            	// #-56
  405b30:	str	w0, [sp, #64]
  405b34:	mov	w0, #0xffffff80            	// #-128
  405b38:	str	w0, [sp, #68]
  405b3c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  405b40:	mov	x3, #0x0                   	// #0
  405b44:	ldr	w2, [x0, #1936]
  405b48:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  405b4c:	ldr	x1, [x0, #1912]
  405b50:	add	x0, sp, #0x48
  405b54:	bl	424c1c <ferror@plt+0x222ac>
  405b58:	add	x3, sp, #0x28
  405b5c:	mov	w4, #0x3                   	// #3
  405b60:	mov	x2, x19
  405b64:	mov	w1, #0xffffffff            	// #-1
  405b68:	add	x0, sp, #0x48
  405b6c:	bl	405210 <ferror@plt+0x28a0>
  405b70:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  405b74:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  405b78:	add	x2, x2, #0x4d7
  405b7c:	add	x0, x0, #0x41f
  405b80:	mov	w1, #0x607                 	// #1543
  405b84:	bl	402980 <ferror@plt+0x10>
  405b88:	stp	x29, x30, [sp, #-64]!
  405b8c:	mov	x29, sp
  405b90:	stp	x19, x20, [sp, #16]
  405b94:	stp	x21, x22, [sp, #32]
  405b98:	str	x23, [sp, #48]
  405b9c:	cbnz	x3, 405bb8 <ferror@plt+0x3248>
  405ba0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  405ba4:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  405ba8:	add	x2, x2, #0x4f6
  405bac:	add	x0, x0, #0x41f
  405bb0:	mov	w1, #0x112                 	// #274
  405bb4:	bl	402980 <ferror@plt+0x10>
  405bb8:	mov	x19, x0
  405bbc:	mov	x22, x1
  405bc0:	mov	x23, x2
  405bc4:	mov	x20, x3
  405bc8:	mov	w21, w4
  405bcc:	bl	4028c0 <__errno_location@plt>
  405bd0:	ldr	w0, [x0]
  405bd4:	stp	x22, x23, [x19]
  405bd8:	str	w0, [x19, #16]
  405bdc:	stp	x20, x20, [x19, #32]
  405be0:	stp	w21, wzr, [x19, #56]
  405be4:	ldp	x19, x20, [sp, #16]
  405be8:	ldp	x21, x22, [sp, #32]
  405bec:	ldr	x23, [sp, #48]
  405bf0:	ldp	x29, x30, [sp], #64
  405bf4:	ret
  405bf8:	stp	x29, x30, [sp, #-48]!
  405bfc:	mov	x29, sp
  405c00:	stp	x19, x20, [sp, #16]
  405c04:	stp	x21, x22, [sp, #32]
  405c08:	cbnz	x3, 405c24 <ferror@plt+0x32b4>
  405c0c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  405c10:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  405c14:	add	x2, x2, #0x515
  405c18:	add	x0, x0, #0x41f
  405c1c:	mov	w1, #0x123                 	// #291
  405c20:	bl	402980 <ferror@plt+0x10>
  405c24:	mov	x20, x0
  405c28:	mov	x21, x2
  405c2c:	mov	x19, x3
  405c30:	mov	w22, w4
  405c34:	mov	x0, x1
  405c38:	bl	402930 <gettext@plt>
  405c3c:	mov	w4, w22
  405c40:	mov	x3, x19
  405c44:	mov	x2, x21
  405c48:	mov	x1, x0
  405c4c:	mov	x0, x20
  405c50:	ldp	x19, x20, [sp, #16]
  405c54:	ldp	x21, x22, [sp, #32]
  405c58:	ldp	x29, x30, [sp], #48
  405c5c:	b	405b88 <ferror@plt+0x3218>
  405c60:	stp	x29, x30, [sp, #-96]!
  405c64:	mov	x29, sp
  405c68:	stp	x19, x20, [sp, #16]
  405c6c:	stp	x21, x22, [sp, #32]
  405c70:	mov	x21, x0
  405c74:	ldr	w0, [x1, #56]
  405c78:	str	x23, [sp, #48]
  405c7c:	cmp	w0, #0xd
  405c80:	b.le	405c9c <ferror@plt+0x332c>
  405c84:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  405c88:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  405c8c:	add	x2, x2, #0x529
  405c90:	add	x0, x0, #0x41f
  405c94:	mov	w1, #0x16a                 	// #362
  405c98:	bl	402980 <ferror@plt+0x10>
  405c9c:	adrp	x19, 44b000 <_obstack_memory_used@@Base+0x11198>
  405ca0:	add	x19, x19, #0x6e0
  405ca4:	mov	x20, x1
  405ca8:	add	x1, x19, #0xc0
  405cac:	add	x19, x19, #0x20
  405cb0:	ldr	x0, [x1, w0, sxtw #3]
  405cb4:	bl	402930 <gettext@plt>
  405cb8:	mov	x22, x0
  405cbc:	ldrsw	x0, [x20, #56]
  405cc0:	ldr	x1, [x19, x0, lsl #3]
  405cc4:	cbz	x1, 405d48 <ferror@plt+0x33d8>
  405cc8:	ldr	x19, [x21]
  405ccc:	ldrb	w0, [x19, #67]
  405cd0:	bl	40685c <ferror@plt+0x3eec>
  405cd4:	mov	x23, x0
  405cd8:	ldrb	w0, [x19, #67]
  405cdc:	bl	406b78 <ferror@plt+0x4208>
  405ce0:	mov	x19, x0
  405ce4:	ldr	x0, [x20, #40]
  405ce8:	add	x8, sp, #0x40
  405cec:	mov	w1, #0x0                   	// #0
  405cf0:	bl	424ac4 <ferror@plt+0x22154>
  405cf4:	ldp	w2, w3, [sp, #72]
  405cf8:	mov	x0, x21
  405cfc:	ldr	x1, [sp, #64]
  405d00:	bl	40412c <ferror@plt+0x17bc>
  405d04:	mov	x1, x0
  405d08:	mov	x4, x19
  405d0c:	mov	x3, x22
  405d10:	mov	x2, x23
  405d14:	mov	x20, x0
  405d18:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  405d1c:	add	x0, x0, #0x541
  405d20:	bl	4040b4 <ferror@plt+0x1744>
  405d24:	mov	x19, x0
  405d28:	mov	x0, x20
  405d2c:	bl	402730 <free@plt>
  405d30:	mov	x0, x19
  405d34:	ldp	x19, x20, [sp, #16]
  405d38:	ldp	x21, x22, [sp, #32]
  405d3c:	ldr	x23, [sp, #48]
  405d40:	ldp	x29, x30, [sp], #96
  405d44:	ret
  405d48:	adrp	x19, 451000 <_obstack_memory_used@@Base+0x17198>
  405d4c:	add	x19, x19, #0xaab
  405d50:	mov	x23, x19
  405d54:	b	405ce4 <ferror@plt+0x3374>
  405d58:	stp	x29, x30, [sp, #-48]!
  405d5c:	mov	x29, sp
  405d60:	stp	x19, x20, [sp, #16]
  405d64:	mov	x19, x0
  405d68:	mov	x20, x1
  405d6c:	mov	x0, x20
  405d70:	mov	w1, #0x0                   	// #0
  405d74:	str	x21, [sp, #32]
  405d78:	bl	40adb4 <ferror@plt+0x8444>
  405d7c:	mov	w1, w0
  405d80:	mov	x0, x19
  405d84:	bl	4044c8 <ferror@plt+0x1b58>
  405d88:	ldr	x21, [x19]
  405d8c:	mov	x1, x20
  405d90:	mov	x0, x19
  405d94:	bl	405c60 <ferror@plt+0x32f0>
  405d98:	mov	x1, x0
  405d9c:	mov	x0, x21
  405da0:	ldp	x19, x20, [sp, #16]
  405da4:	ldr	x21, [sp, #32]
  405da8:	ldp	x29, x30, [sp], #48
  405dac:	b	40af84 <ferror@plt+0x8614>
  405db0:	stp	x29, x30, [sp, #-496]!
  405db4:	mov	x29, sp
  405db8:	stp	x19, x20, [sp, #16]
  405dbc:	mov	x19, x0
  405dc0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  405dc4:	mov	x20, x2
  405dc8:	mov	w2, w1
  405dcc:	ldr	x1, [x0, #1912]
  405dd0:	add	x0, sp, #0x98
  405dd4:	str	x21, [sp, #32]
  405dd8:	str	q0, [sp, #320]
  405ddc:	str	q1, [sp, #336]
  405de0:	str	q2, [sp, #352]
  405de4:	str	q3, [sp, #368]
  405de8:	str	q4, [sp, #384]
  405dec:	str	q5, [sp, #400]
  405df0:	str	q6, [sp, #416]
  405df4:	str	q7, [sp, #432]
  405df8:	stp	x3, x4, [sp, #456]
  405dfc:	mov	x3, #0x0                   	// #0
  405e00:	stp	x5, x6, [sp, #472]
  405e04:	str	x7, [sp, #488]
  405e08:	bl	424c1c <ferror@plt+0x222ac>
  405e0c:	add	x0, sp, #0x1f0
  405e10:	stp	x0, x0, [sp, #56]
  405e14:	add	x0, sp, #0x1c0
  405e18:	str	x0, [sp, #72]
  405e1c:	mov	w0, #0xffffffd8            	// #-40
  405e20:	str	w0, [sp, #80]
  405e24:	mov	w0, #0xffffff80            	// #-128
  405e28:	add	x3, sp, #0x98
  405e2c:	add	x2, sp, #0x38
  405e30:	mov	x1, x20
  405e34:	mov	w4, #0x8                   	// #8
  405e38:	str	w0, [sp, #84]
  405e3c:	add	x0, sp, #0x58
  405e40:	bl	405bf8 <ferror@plt+0x3288>
  405e44:	ldrb	w0, [x19, #220]
  405e48:	cbz	w0, 405e64 <ferror@plt+0x34f4>
  405e4c:	add	x0, sp, #0x98
  405e50:	bl	4249b0 <ferror@plt+0x22040>
  405e54:	ldp	x19, x20, [sp, #16]
  405e58:	ldr	x21, [sp, #32]
  405e5c:	ldp	x29, x30, [sp], #496
  405e60:	ret
  405e64:	ldr	x0, [x19]
  405e68:	bl	40afc0 <ferror@plt+0x8650>
  405e6c:	mov	x20, x0
  405e70:	ldr	x21, [x19]
  405e74:	add	x1, sp, #0x58
  405e78:	mov	x0, x19
  405e7c:	bl	405c60 <ferror@plt+0x32f0>
  405e80:	mov	x1, x0
  405e84:	mov	x0, x21
  405e88:	bl	40af84 <ferror@plt+0x8614>
  405e8c:	ldr	x0, [x19]
  405e90:	add	x1, sp, #0x58
  405e94:	bl	40b8bc <ferror@plt+0x8f4c>
  405e98:	ldr	x0, [x19]
  405e9c:	bl	40b6ac <ferror@plt+0x8d3c>
  405ea0:	ldr	x0, [x19]
  405ea4:	bl	40afd0 <ferror@plt+0x8660>
  405ea8:	ldr	x0, [x19]
  405eac:	mov	x1, x20
  405eb0:	bl	40af84 <ferror@plt+0x8614>
  405eb4:	add	x1, sp, #0x98
  405eb8:	mov	x0, x19
  405ebc:	mov	w2, #0x8                   	// #8
  405ec0:	bl	408080 <ferror@plt+0x5710>
  405ec4:	b	405e4c <ferror@plt+0x34dc>
  405ec8:	stp	x29, x30, [sp, #-64]!
  405ecc:	mov	x29, sp
  405ed0:	stp	x19, x20, [sp, #16]
  405ed4:	stp	x21, x22, [sp, #32]
  405ed8:	str	x23, [sp, #48]
  405edc:	cbnz	x0, 405ef8 <ferror@plt+0x3588>
  405ee0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  405ee4:	add	x2, x2, #0x54b
  405ee8:	mov	w1, #0x2f5                 	// #757
  405eec:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  405ef0:	add	x0, x0, #0x41f
  405ef4:	bl	402980 <ferror@plt+0x10>
  405ef8:	mov	x20, x1
  405efc:	cbnz	x1, 405f10 <ferror@plt+0x35a0>
  405f00:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  405f04:	mov	w1, #0x2f6                 	// #758
  405f08:	add	x2, x2, #0x54b
  405f0c:	b	405eec <ferror@plt+0x357c>
  405f10:	adrp	x21, 44b000 <_obstack_memory_used@@Base+0x11198>
  405f14:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  405f18:	add	x21, x21, #0x569
  405f1c:	add	x22, x22, #0x21a
  405f20:	adrp	x23, 44b000 <_obstack_memory_used@@Base+0x11198>
  405f24:	mov	x19, x0
  405f28:	mov	w1, #0x22                  	// #34
  405f2c:	bl	40b2cc <ferror@plt+0x895c>
  405f30:	ldrb	w1, [x20]
  405f34:	cbz	w1, 405fc4 <ferror@plt+0x3654>
  405f38:	cmp	w1, #0x22
  405f3c:	b.eq	405fa0 <ferror@plt+0x3630>  // b.none
  405f40:	b.hi	405f68 <ferror@plt+0x35f8>  // b.pmore
  405f44:	cmp	w1, #0x9
  405f48:	b.eq	405f88 <ferror@plt+0x3618>  // b.none
  405f4c:	cmp	w1, #0xa
  405f50:	b.eq	405f94 <ferror@plt+0x3624>  // b.none
  405f54:	ldrh	w0, [x22, w1, sxtw #1]
  405f58:	tbz	w0, #4, 405fa8 <ferror@plt+0x3638>
  405f5c:	mov	x0, x19
  405f60:	bl	40b2cc <ferror@plt+0x895c>
  405f64:	b	405f80 <ferror@plt+0x3610>
  405f68:	cmp	w1, #0x5c
  405f6c:	b.ne	405f54 <ferror@plt+0x35e4>  // b.any
  405f70:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  405f74:	add	x1, x1, #0x560
  405f78:	mov	x0, x19
  405f7c:	bl	40b678 <ferror@plt+0x8d08>
  405f80:	add	x20, x20, #0x1
  405f84:	b	405f30 <ferror@plt+0x35c0>
  405f88:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  405f8c:	add	x1, x1, #0x563
  405f90:	b	405f78 <ferror@plt+0x3608>
  405f94:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  405f98:	add	x1, x1, #0x566
  405f9c:	b	405f78 <ferror@plt+0x3608>
  405fa0:	mov	x1, x21
  405fa4:	b	405f78 <ferror@plt+0x3608>
  405fa8:	and	w4, w1, #0x7
  405fac:	ubfx	x3, x1, #3, #3
  405fb0:	lsr	w2, w1, #6
  405fb4:	mov	x0, x19
  405fb8:	add	x1, x23, #0x56c
  405fbc:	bl	40ccc0 <ferror@plt+0xa350>
  405fc0:	b	405f80 <ferror@plt+0x3610>
  405fc4:	mov	x0, x19
  405fc8:	mov	w1, #0x22                  	// #34
  405fcc:	ldp	x19, x20, [sp, #16]
  405fd0:	ldp	x21, x22, [sp, #32]
  405fd4:	ldr	x23, [sp, #48]
  405fd8:	ldp	x29, x30, [sp], #64
  405fdc:	b	40b2cc <ferror@plt+0x895c>
  405fe0:	cmp	w0, #0x0
  405fe4:	b.ge	406008 <ferror@plt+0x3698>  // b.tcont
  405fe8:	stp	x29, x30, [sp, #-16]!
  405fec:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  405ff0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  405ff4:	mov	x29, sp
  405ff8:	add	x2, x2, #0x574
  405ffc:	add	x0, x0, #0x41f
  406000:	mov	w1, #0x415                 	// #1045
  406004:	bl	402980 <ferror@plt+0x10>
  406008:	b.eq	406028 <ferror@plt+0x36b8>  // b.none
  40600c:	mov	w1, w0
  406010:	mov	w2, #0xa                   	// #10
  406014:	mov	w0, #0x0                   	// #0
  406018:	udiv	w1, w1, w2
  40601c:	add	w0, w0, #0x1
  406020:	cbnz	w1, 406018 <ferror@plt+0x36a8>
  406024:	ret
  406028:	mov	w0, #0x1                   	// #1
  40602c:	ret
  406030:	stp	x29, x30, [sp, #-240]!
  406034:	mov	x29, sp
  406038:	str	q0, [sp, #64]
  40603c:	str	q1, [sp, #80]
  406040:	str	q2, [sp, #96]
  406044:	str	q3, [sp, #112]
  406048:	str	q4, [sp, #128]
  40604c:	str	q5, [sp, #144]
  406050:	str	q6, [sp, #160]
  406054:	str	q7, [sp, #176]
  406058:	stp	x2, x3, [sp, #192]
  40605c:	stp	x4, x5, [sp, #208]
  406060:	stp	x6, x7, [sp, #224]
  406064:	cbnz	x0, 406080 <ferror@plt+0x3710>
  406068:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40606c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  406070:	add	x2, x2, #0x57f
  406074:	add	x0, x0, #0x41f
  406078:	mov	w1, #0x4dc                 	// #1244
  40607c:	bl	402980 <ferror@plt+0x10>
  406080:	mov	x8, x0
  406084:	mov	x9, x1
  406088:	bl	40409c <ferror@plt+0x172c>
  40608c:	mov	x2, x9
  406090:	add	x0, sp, #0xf0
  406094:	stp	x0, x0, [sp, #32]
  406098:	add	x0, sp, #0xc0
  40609c:	add	x3, sp, #0x20
  4060a0:	str	x0, [sp, #48]
  4060a4:	mov	w0, #0xffffffd0            	// #-48
  4060a8:	mov	w4, #0x8                   	// #8
  4060ac:	mov	w1, #0xffffffff            	// #-1
  4060b0:	str	w0, [sp, #56]
  4060b4:	mov	w0, #0xffffff80            	// #-128
  4060b8:	str	w0, [sp, #60]
  4060bc:	mov	x0, x8
  4060c0:	bl	405210 <ferror@plt+0x28a0>
  4060c4:	add	x0, sp, #0x18
  4060c8:	bl	404a74 <ferror@plt+0x2104>
  4060cc:	ldp	x29, x30, [sp], #240
  4060d0:	ret
  4060d4:	stp	x29, x30, [sp, #-256]!
  4060d8:	mov	x29, sp
  4060dc:	str	x19, [sp, #16]
  4060e0:	str	q0, [sp, #80]
  4060e4:	str	q1, [sp, #96]
  4060e8:	str	q2, [sp, #112]
  4060ec:	str	q3, [sp, #128]
  4060f0:	str	q4, [sp, #144]
  4060f4:	str	q5, [sp, #160]
  4060f8:	str	q6, [sp, #176]
  4060fc:	str	q7, [sp, #192]
  406100:	stp	x3, x4, [sp, #216]
  406104:	stp	x5, x6, [sp, #232]
  406108:	str	x7, [sp, #248]
  40610c:	cbnz	x0, 406128 <ferror@plt+0x37b8>
  406110:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  406114:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  406118:	add	x2, x2, #0x586
  40611c:	add	x0, x0, #0x41f
  406120:	mov	w1, #0x518                 	// #1304
  406124:	bl	402980 <ferror@plt+0x10>
  406128:	mov	x8, x0
  40612c:	mov	w9, w1
  406130:	bl	40409c <ferror@plt+0x172c>
  406134:	mov	w1, w9
  406138:	add	x0, sp, #0x100
  40613c:	stp	x0, x0, [sp, #48]
  406140:	add	x0, sp, #0xd0
  406144:	add	x3, sp, #0x30
  406148:	str	x0, [sp, #64]
  40614c:	mov	w0, #0xffffffd8            	// #-40
  406150:	mov	w4, #0x6                   	// #6
  406154:	str	w0, [sp, #72]
  406158:	mov	w0, #0xffffff80            	// #-128
  40615c:	str	w0, [sp, #76]
  406160:	mov	x0, x8
  406164:	bl	405210 <ferror@plt+0x28a0>
  406168:	mov	w19, w0
  40616c:	add	x0, sp, #0x28
  406170:	bl	404a74 <ferror@plt+0x2104>
  406174:	mov	w0, w19
  406178:	ldr	x19, [sp, #16]
  40617c:	ldp	x29, x30, [sp], #256
  406180:	ret
  406184:	stp	x29, x30, [sp, #-256]!
  406188:	mov	x29, sp
  40618c:	str	x19, [sp, #16]
  406190:	str	q0, [sp, #80]
  406194:	str	q1, [sp, #96]
  406198:	str	q2, [sp, #112]
  40619c:	str	q3, [sp, #128]
  4061a0:	str	q4, [sp, #144]
  4061a4:	str	q5, [sp, #160]
  4061a8:	str	q6, [sp, #176]
  4061ac:	str	q7, [sp, #192]
  4061b0:	stp	x3, x4, [sp, #216]
  4061b4:	stp	x5, x6, [sp, #232]
  4061b8:	str	x7, [sp, #248]
  4061bc:	cbnz	x0, 4061d8 <ferror@plt+0x3868>
  4061c0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4061c4:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4061c8:	add	x2, x2, #0x591
  4061cc:	add	x0, x0, #0x41f
  4061d0:	mov	w1, #0x565                 	// #1381
  4061d4:	bl	402980 <ferror@plt+0x10>
  4061d8:	mov	x8, x0
  4061dc:	mov	w9, w1
  4061e0:	bl	40409c <ferror@plt+0x172c>
  4061e4:	mov	w1, w9
  4061e8:	add	x0, sp, #0x100
  4061ec:	stp	x0, x0, [sp, #48]
  4061f0:	add	x0, sp, #0xd0
  4061f4:	add	x3, sp, #0x30
  4061f8:	str	x0, [sp, #64]
  4061fc:	mov	w0, #0xffffffd8            	// #-40
  406200:	mov	w4, #0xa                   	// #10
  406204:	str	w0, [sp, #72]
  406208:	mov	w0, #0xffffff80            	// #-128
  40620c:	str	w0, [sp, #76]
  406210:	mov	x0, x8
  406214:	bl	405210 <ferror@plt+0x28a0>
  406218:	mov	w19, w0
  40621c:	add	x0, sp, #0x28
  406220:	bl	404a74 <ferror@plt+0x2104>
  406224:	mov	w0, w19
  406228:	ldr	x19, [sp, #16]
  40622c:	ldp	x29, x30, [sp], #256
  406230:	ret
  406234:	stp	x29, x30, [sp, #-256]!
  406238:	mov	x29, sp
  40623c:	str	x19, [sp, #16]
  406240:	str	q0, [sp, #80]
  406244:	str	q1, [sp, #96]
  406248:	str	q2, [sp, #112]
  40624c:	str	q3, [sp, #128]
  406250:	str	q4, [sp, #144]
  406254:	str	q5, [sp, #160]
  406258:	str	q6, [sp, #176]
  40625c:	str	q7, [sp, #192]
  406260:	stp	x2, x3, [sp, #208]
  406264:	stp	x4, x5, [sp, #224]
  406268:	stp	x6, x7, [sp, #240]
  40626c:	cbnz	x0, 406288 <ferror@plt+0x3918>
  406270:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  406274:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  406278:	add	x2, x2, #0x599
  40627c:	add	x0, x0, #0x41f
  406280:	mov	w1, #0x587                 	// #1415
  406284:	bl	402980 <ferror@plt+0x10>
  406288:	mov	x8, x0
  40628c:	mov	x9, x1
  406290:	bl	40409c <ferror@plt+0x172c>
  406294:	mov	x2, x9
  406298:	add	x0, sp, #0x100
  40629c:	stp	x0, x0, [sp, #48]
  4062a0:	add	x0, sp, #0xd0
  4062a4:	add	x3, sp, #0x30
  4062a8:	str	x0, [sp, #64]
  4062ac:	mov	w0, #0xffffffd0            	// #-48
  4062b0:	mov	w4, #0xb                   	// #11
  4062b4:	mov	w1, #0xffffffff            	// #-1
  4062b8:	str	w0, [sp, #72]
  4062bc:	mov	w0, #0xffffff80            	// #-128
  4062c0:	str	w0, [sp, #76]
  4062c4:	mov	x0, x8
  4062c8:	bl	405210 <ferror@plt+0x28a0>
  4062cc:	mov	w19, w0
  4062d0:	add	x0, sp, #0x28
  4062d4:	bl	404a74 <ferror@plt+0x2104>
  4062d8:	mov	w0, w19
  4062dc:	ldr	x19, [sp, #16]
  4062e0:	ldp	x29, x30, [sp], #256
  4062e4:	ret
  4062e8:	stp	x29, x30, [sp, #-240]!
  4062ec:	mov	x29, sp
  4062f0:	str	q0, [sp, #64]
  4062f4:	str	q1, [sp, #80]
  4062f8:	str	q2, [sp, #96]
  4062fc:	str	q3, [sp, #112]
  406300:	str	q4, [sp, #128]
  406304:	str	q5, [sp, #144]
  406308:	str	q6, [sp, #160]
  40630c:	str	q7, [sp, #176]
  406310:	stp	x2, x3, [sp, #192]
  406314:	stp	x4, x5, [sp, #208]
  406318:	stp	x6, x7, [sp, #224]
  40631c:	cbnz	x0, 406338 <ferror@plt+0x39c8>
  406320:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  406324:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  406328:	add	x2, x2, #0x5a3
  40632c:	add	x0, x0, #0x41f
  406330:	mov	w1, #0x5be                 	// #1470
  406334:	bl	402980 <ferror@plt+0x10>
  406338:	mov	x8, x0
  40633c:	mov	x9, x1
  406340:	bl	40409c <ferror@plt+0x172c>
  406344:	mov	x2, x9
  406348:	add	x0, sp, #0xf0
  40634c:	stp	x0, x0, [sp, #32]
  406350:	add	x0, sp, #0xc0
  406354:	add	x3, sp, #0x20
  406358:	str	x0, [sp, #48]
  40635c:	mov	w0, #0xffffffd0            	// #-48
  406360:	mov	w4, #0x4                   	// #4
  406364:	mov	w1, #0xffffffff            	// #-1
  406368:	str	w0, [sp, #56]
  40636c:	mov	w0, #0xffffff80            	// #-128
  406370:	str	w0, [sp, #60]
  406374:	mov	x0, x8
  406378:	bl	405210 <ferror@plt+0x28a0>
  40637c:	add	x0, sp, #0x18
  406380:	bl	404a74 <ferror@plt+0x2104>
  406384:	ldp	x29, x30, [sp], #240
  406388:	ret
  40638c:	stp	x29, x30, [sp, #-416]!
  406390:	mov	w8, w0
  406394:	mov	x29, sp
  406398:	str	x19, [sp, #16]
  40639c:	mov	x19, x1
  4063a0:	str	q0, [sp, #240]
  4063a4:	str	q1, [sp, #256]
  4063a8:	str	q2, [sp, #272]
  4063ac:	str	q3, [sp, #288]
  4063b0:	str	q4, [sp, #304]
  4063b4:	str	q5, [sp, #320]
  4063b8:	str	q6, [sp, #336]
  4063bc:	str	q7, [sp, #352]
  4063c0:	stp	x2, x3, [sp, #368]
  4063c4:	stp	x4, x5, [sp, #384]
  4063c8:	stp	x6, x7, [sp, #400]
  4063cc:	bl	40409c <ferror@plt+0x172c>
  4063d0:	add	x0, sp, #0x1a0
  4063d4:	stp	x0, x0, [sp, #40]
  4063d8:	add	x0, sp, #0x170
  4063dc:	mov	w2, w8
  4063e0:	str	x0, [sp, #56]
  4063e4:	mov	w0, #0xffffffd0            	// #-48
  4063e8:	str	w0, [sp, #64]
  4063ec:	mov	w0, #0xffffff80            	// #-128
  4063f0:	str	w0, [sp, #68]
  4063f4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4063f8:	mov	x3, #0x0                   	// #0
  4063fc:	ldr	x1, [x0, #1912]
  406400:	add	x0, sp, #0x48
  406404:	bl	424c1c <ferror@plt+0x222ac>
  406408:	add	x3, sp, #0x28
  40640c:	mov	w4, #0x2                   	// #2
  406410:	mov	x2, x19
  406414:	mov	w1, #0xffffffff            	// #-1
  406418:	add	x0, sp, #0x48
  40641c:	bl	405210 <ferror@plt+0x28a0>
  406420:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  406424:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  406428:	add	x2, x2, #0x5ac
  40642c:	add	x0, x0, #0x41f
  406430:	mov	w1, #0x5f6                 	// #1526
  406434:	bl	402980 <ferror@plt+0x10>
  406438:	stp	x29, x30, [sp, #-432]!
  40643c:	mov	x29, sp
  406440:	str	x19, [sp, #16]
  406444:	mov	x19, x0
  406448:	str	q0, [sp, #240]
  40644c:	str	q1, [sp, #256]
  406450:	str	q2, [sp, #272]
  406454:	str	q3, [sp, #288]
  406458:	str	q4, [sp, #304]
  40645c:	str	q5, [sp, #320]
  406460:	str	q6, [sp, #336]
  406464:	str	q7, [sp, #352]
  406468:	stp	x1, x2, [sp, #376]
  40646c:	stp	x3, x4, [sp, #392]
  406470:	stp	x5, x6, [sp, #408]
  406474:	str	x7, [sp, #424]
  406478:	bl	40409c <ferror@plt+0x172c>
  40647c:	add	x0, sp, #0x1b0
  406480:	stp	x0, x0, [sp, #40]
  406484:	add	x0, sp, #0x170
  406488:	str	x0, [sp, #56]
  40648c:	mov	w0, #0xffffffc8            	// #-56
  406490:	str	w0, [sp, #64]
  406494:	mov	w0, #0xffffff80            	// #-128
  406498:	str	w0, [sp, #68]
  40649c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4064a0:	mov	x3, #0x0                   	// #0
  4064a4:	ldr	w2, [x0, #1936]
  4064a8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4064ac:	ldr	x1, [x0, #1912]
  4064b0:	add	x0, sp, #0x48
  4064b4:	bl	424c1c <ferror@plt+0x222ac>
  4064b8:	add	x3, sp, #0x28
  4064bc:	mov	w4, #0xd                   	// #13
  4064c0:	mov	x2, x19
  4064c4:	mov	w1, #0xffffffff            	// #-1
  4064c8:	add	x0, sp, #0x48
  4064cc:	bl	405210 <ferror@plt+0x28a0>
  4064d0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4064d4:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4064d8:	add	x2, x2, #0x5b8
  4064dc:	add	x0, x0, #0x41f
  4064e0:	mov	w1, #0x617                 	// #1559
  4064e4:	bl	402980 <ferror@plt+0x10>
  4064e8:	stp	x29, x30, [sp, #-112]!
  4064ec:	mov	x29, sp
  4064f0:	stp	x19, x20, [sp, #16]
  4064f4:	mov	w19, w6
  4064f8:	mov	w20, w1
  4064fc:	mov	x1, x4
  406500:	stp	x21, x22, [sp, #32]
  406504:	mov	x21, x5
  406508:	mov	x22, x0
  40650c:	mov	x0, x3
  406510:	bl	402300 <ngettext@plt>
  406514:	mov	x1, x0
  406518:	mov	w4, w19
  40651c:	mov	x3, x22
  406520:	mov	x2, x21
  406524:	add	x0, sp, #0x30
  406528:	bl	405b88 <ferror@plt+0x3218>
  40652c:	cmp	w19, #0x6
  406530:	b.ne	406538 <ferror@plt+0x3bc8>  // b.any
  406534:	str	w20, [sp, #108]
  406538:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40653c:	add	x1, sp, #0x30
  406540:	ldr	x0, [x0, #864]
  406544:	bl	404d0c <ferror@plt+0x239c>
  406548:	ldp	x19, x20, [sp, #16]
  40654c:	ldp	x21, x22, [sp, #32]
  406550:	ldp	x29, x30, [sp], #112
  406554:	ret
  406558:	stp	x29, x30, [sp, #-416]!
  40655c:	mov	w8, w0
  406560:	mov	x29, sp
  406564:	add	x0, sp, #0x1a0
  406568:	stp	x0, x0, [sp, #56]
  40656c:	add	x0, sp, #0x180
  406570:	str	x0, [sp, #72]
  406574:	mov	w0, #0xffffffe0            	// #-32
  406578:	str	w0, [sp, #80]
  40657c:	mov	w0, #0xffffff80            	// #-128
  406580:	stp	x19, x20, [sp, #16]
  406584:	mov	x19, x1
  406588:	mov	x20, x2
  40658c:	str	x21, [sp, #32]
  406590:	mov	x21, x3
  406594:	str	w0, [sp, #84]
  406598:	str	q0, [sp, #256]
  40659c:	str	q1, [sp, #272]
  4065a0:	str	q2, [sp, #288]
  4065a4:	str	q3, [sp, #304]
  4065a8:	str	q4, [sp, #320]
  4065ac:	str	q5, [sp, #336]
  4065b0:	str	q6, [sp, #352]
  4065b4:	str	q7, [sp, #368]
  4065b8:	stp	x4, x5, [sp, #384]
  4065bc:	stp	x6, x7, [sp, #400]
  4065c0:	bl	40409c <ferror@plt+0x172c>
  4065c4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  4065c8:	mov	w2, w8
  4065cc:	mov	x3, #0x0                   	// #0
  4065d0:	ldr	x1, [x0, #1912]
  4065d4:	add	x0, sp, #0x58
  4065d8:	bl	424c1c <ferror@plt+0x222ac>
  4065dc:	add	x5, sp, #0x38
  4065e0:	mov	x4, x21
  4065e4:	mov	x3, x20
  4065e8:	mov	x2, x19
  4065ec:	mov	w6, #0x8                   	// #8
  4065f0:	mov	w1, #0xffffffff            	// #-1
  4065f4:	add	x0, sp, #0x58
  4065f8:	bl	4064e8 <ferror@plt+0x3b78>
  4065fc:	add	x0, sp, #0x58
  406600:	bl	4249b0 <ferror@plt+0x22040>
  406604:	add	x0, sp, #0x30
  406608:	bl	404a74 <ferror@plt+0x2104>
  40660c:	ldp	x19, x20, [sp, #16]
  406610:	ldr	x21, [sp, #32]
  406614:	ldp	x29, x30, [sp], #416
  406618:	ret
  40661c:	stp	x29, x30, [sp, #-240]!
  406620:	mov	x29, sp
  406624:	str	x19, [sp, #16]
  406628:	str	q0, [sp, #80]
  40662c:	str	q1, [sp, #96]
  406630:	str	q2, [sp, #112]
  406634:	str	q3, [sp, #128]
  406638:	str	q4, [sp, #144]
  40663c:	str	q5, [sp, #160]
  406640:	str	q6, [sp, #176]
  406644:	str	q7, [sp, #192]
  406648:	stp	x5, x6, [sp, #216]
  40664c:	str	x7, [sp, #232]
  406650:	cbnz	x0, 40666c <ferror@plt+0x3cfc>
  406654:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  406658:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40665c:	add	x2, x2, #0x5d4
  406660:	add	x0, x0, #0x41f
  406664:	mov	w1, #0x528                 	// #1320
  406668:	bl	402980 <ferror@plt+0x10>
  40666c:	mov	x8, x0
  406670:	mov	w9, w1
  406674:	bl	40409c <ferror@plt+0x172c>
  406678:	mov	w1, w9
  40667c:	add	x0, sp, #0xf0
  406680:	stp	x0, x0, [sp, #48]
  406684:	add	x0, sp, #0xd0
  406688:	add	x5, sp, #0x30
  40668c:	str	x0, [sp, #64]
  406690:	mov	w0, #0xffffffe8            	// #-24
  406694:	mov	w6, #0x6                   	// #6
  406698:	str	w0, [sp, #72]
  40669c:	mov	w0, #0xffffff80            	// #-128
  4066a0:	str	w0, [sp, #76]
  4066a4:	mov	x0, x8
  4066a8:	bl	4064e8 <ferror@plt+0x3b78>
  4066ac:	mov	w19, w0
  4066b0:	add	x0, sp, #0x28
  4066b4:	bl	404a74 <ferror@plt+0x2104>
  4066b8:	mov	w0, w19
  4066bc:	ldr	x19, [sp, #16]
  4066c0:	ldp	x29, x30, [sp], #240
  4066c4:	ret
  4066c8:	stp	x29, x30, [sp, #-416]!
  4066cc:	mov	w8, w0
  4066d0:	mov	x29, sp
  4066d4:	stp	x19, x20, [sp, #16]
  4066d8:	mov	w19, w1
  4066dc:	mov	x20, x2
  4066e0:	stp	x21, x22, [sp, #32]
  4066e4:	mov	x21, x3
  4066e8:	mov	x22, x4
  4066ec:	str	q0, [sp, #256]
  4066f0:	str	q1, [sp, #272]
  4066f4:	str	q2, [sp, #288]
  4066f8:	str	q3, [sp, #304]
  4066fc:	str	q4, [sp, #320]
  406700:	str	q5, [sp, #336]
  406704:	str	q6, [sp, #352]
  406708:	str	q7, [sp, #368]
  40670c:	stp	x5, x6, [sp, #392]
  406710:	str	x7, [sp, #408]
  406714:	bl	40409c <ferror@plt+0x172c>
  406718:	add	x0, sp, #0x1a0
  40671c:	stp	x0, x0, [sp, #56]
  406720:	add	x0, sp, #0x180
  406724:	str	x0, [sp, #72]
  406728:	mov	w0, #0xffffffe8            	// #-24
  40672c:	str	w0, [sp, #80]
  406730:	mov	w0, #0xffffff80            	// #-128
  406734:	str	w0, [sp, #84]
  406738:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40673c:	mov	w2, w8
  406740:	mov	x3, #0x0                   	// #0
  406744:	ldr	x1, [x0, #1912]
  406748:	add	x0, sp, #0x58
  40674c:	bl	424c1c <ferror@plt+0x222ac>
  406750:	add	x5, sp, #0x38
  406754:	mov	x4, x22
  406758:	mov	x3, x21
  40675c:	mov	x2, x20
  406760:	mov	w1, w19
  406764:	mov	w6, #0x6                   	// #6
  406768:	add	x0, sp, #0x58
  40676c:	bl	4064e8 <ferror@plt+0x3b78>
  406770:	mov	w19, w0
  406774:	add	x0, sp, #0x58
  406778:	bl	4249b0 <ferror@plt+0x22040>
  40677c:	add	x0, sp, #0x30
  406780:	bl	404a74 <ferror@plt+0x2104>
  406784:	mov	w0, w19
  406788:	ldp	x19, x20, [sp, #16]
  40678c:	ldp	x21, x22, [sp, #32]
  406790:	ldp	x29, x30, [sp], #416
  406794:	ret
  406798:	stp	x29, x30, [sp, #-416]!
  40679c:	mov	w8, w0
  4067a0:	mov	x29, sp
  4067a4:	stp	x19, x20, [sp, #16]
  4067a8:	mov	x19, x1
  4067ac:	mov	x20, x2
  4067b0:	str	x21, [sp, #32]
  4067b4:	mov	x21, x3
  4067b8:	str	q0, [sp, #256]
  4067bc:	str	q1, [sp, #272]
  4067c0:	str	q2, [sp, #288]
  4067c4:	str	q3, [sp, #304]
  4067c8:	str	q4, [sp, #320]
  4067cc:	str	q5, [sp, #336]
  4067d0:	str	q6, [sp, #352]
  4067d4:	str	q7, [sp, #368]
  4067d8:	stp	x4, x5, [sp, #384]
  4067dc:	stp	x6, x7, [sp, #400]
  4067e0:	bl	40409c <ferror@plt+0x172c>
  4067e4:	add	x0, sp, #0x1a0
  4067e8:	stp	x0, x0, [sp, #56]
  4067ec:	add	x0, sp, #0x180
  4067f0:	mov	w2, w8
  4067f4:	str	x0, [sp, #72]
  4067f8:	mov	w0, #0xffffffe0            	// #-32
  4067fc:	str	w0, [sp, #80]
  406800:	mov	w0, #0xffffff80            	// #-128
  406804:	str	w0, [sp, #84]
  406808:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40680c:	mov	x3, #0x0                   	// #0
  406810:	ldr	x1, [x0, #1912]
  406814:	add	x0, sp, #0x58
  406818:	bl	424c1c <ferror@plt+0x222ac>
  40681c:	add	x5, sp, #0x38
  406820:	mov	x4, x21
  406824:	mov	x3, x20
  406828:	mov	x2, x19
  40682c:	mov	w6, #0x4                   	// #4
  406830:	mov	w1, #0xffffffff            	// #-1
  406834:	add	x0, sp, #0x58
  406838:	bl	4064e8 <ferror@plt+0x3b78>
  40683c:	add	x0, sp, #0x58
  406840:	bl	4249b0 <ferror@plt+0x22040>
  406844:	add	x0, sp, #0x30
  406848:	bl	404a74 <ferror@plt+0x2104>
  40684c:	ldp	x19, x20, [sp, #16]
  406850:	ldr	x21, [sp, #32]
  406854:	ldp	x29, x30, [sp], #416
  406858:	ret
  40685c:	stp	x29, x30, [sp, #-32]!
  406860:	mov	x29, sp
  406864:	stp	x19, x20, [sp, #16]
  406868:	and	w20, w0, #0xff
  40686c:	mov	x19, x1
  406870:	mov	x0, x1
  406874:	bl	402330 <strlen@plt>
  406878:	mov	x1, x19
  40687c:	mov	x2, x0
  406880:	mov	w0, w20
  406884:	ldp	x19, x20, [sp, #16]
  406888:	ldp	x29, x30, [sp], #32
  40688c:	b	406af8 <ferror@plt+0x4188>
  406890:	cbz	x1, 406978 <ferror@plt+0x4008>
  406894:	stp	x29, x30, [sp, #-48]!
  406898:	mov	x29, sp
  40689c:	stp	x19, x20, [sp, #16]
  4068a0:	mov	x19, x1
  4068a4:	ldr	x1, [x0, #16]
  4068a8:	stp	x21, x22, [sp, #32]
  4068ac:	mov	x21, x0
  4068b0:	cbz	x1, 4068bc <ferror@plt+0x3f4c>
  4068b4:	ldr	x0, [x19]
  4068b8:	blr	x1
  4068bc:	ldr	x1, [x21, #24]
  4068c0:	cbz	x1, 4068cc <ferror@plt+0x3f5c>
  4068c4:	ldr	x0, [x19, #8]
  4068c8:	blr	x1
  4068cc:	str	xzr, [x19, #32]
  4068d0:	mov	x20, x19
  4068d4:	mov	x19, #0x0                   	// #0
  4068d8:	ldr	x0, [x20, #16]
  4068dc:	cbz	x0, 406910 <ferror@plt+0x3fa0>
  4068e0:	ldr	x1, [x21, #16]
  4068e4:	cbz	x1, 4068f0 <ferror@plt+0x3f80>
  4068e8:	ldr	x0, [x0]
  4068ec:	blr	x1
  4068f0:	ldr	x1, [x21, #24]
  4068f4:	cbz	x1, 406904 <ferror@plt+0x3f94>
  4068f8:	ldr	x0, [x20, #16]
  4068fc:	ldr	x0, [x0, #8]
  406900:	blr	x1
  406904:	ldr	x0, [x20, #16]
  406908:	str	x19, [x0, #32]
  40690c:	mov	x19, x0
  406910:	ldr	x0, [x20, #24]
  406914:	cbz	x0, 406948 <ferror@plt+0x3fd8>
  406918:	ldr	x1, [x21, #16]
  40691c:	cbz	x1, 406928 <ferror@plt+0x3fb8>
  406920:	ldr	x0, [x0]
  406924:	blr	x1
  406928:	ldr	x1, [x21, #24]
  40692c:	cbz	x1, 40693c <ferror@plt+0x3fcc>
  406930:	ldr	x0, [x20, #24]
  406934:	ldr	x0, [x0, #8]
  406938:	blr	x1
  40693c:	ldr	x0, [x20, #24]
  406940:	str	x19, [x0, #32]
  406944:	mov	x19, x0
  406948:	ldr	x22, [x20, #32]
  40694c:	mov	x0, x20
  406950:	mov	x1, #0x28                  	// #40
  406954:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  406958:	cbz	x22, 406964 <ferror@plt+0x3ff4>
  40695c:	mov	x20, x22
  406960:	b	4068d8 <ferror@plt+0x3f68>
  406964:	cbnz	x19, 4068d0 <ferror@plt+0x3f60>
  406968:	ldp	x19, x20, [sp, #16]
  40696c:	ldp	x21, x22, [sp, #32]
  406970:	ldp	x29, x30, [sp], #48
  406974:	ret
  406978:	ret
  40697c:	stp	x29, x30, [sp, #-96]!
  406980:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  406984:	add	x0, x0, #0x818
  406988:	mov	x29, sp
  40698c:	stp	x19, x20, [sp, #16]
  406990:	stp	x21, x22, [sp, #32]
  406994:	stp	x23, x24, [sp, #48]
  406998:	stp	x25, x26, [sp, #64]
  40699c:	str	x27, [sp, #80]
  4069a0:	bl	4028d0 <getenv@plt>
  4069a4:	cbz	x0, 406ad0 <ferror@plt+0x4160>
  4069a8:	mov	x19, x0
  4069ac:	ldrb	w0, [x0]
  4069b0:	cbz	w0, 406af0 <ferror@plt+0x4180>
  4069b4:	adrp	x23, 44b000 <_obstack_memory_used@@Base+0x11198>
  4069b8:	mov	x20, x19
  4069bc:	add	x23, x23, #0x8a7
  4069c0:	mov	x21, #0x0                   	// #0
  4069c4:	mov	x22, #0x0                   	// #0
  4069c8:	mov	x26, #0x0                   	// #0
  4069cc:	adrp	x24, 478000 <_obstack_memory_used@@Base+0x3e198>
  4069d0:	mov	w25, #0x5b1b                	// #23323
  4069d4:	ldrb	w0, [x20]
  4069d8:	cmp	w0, #0x3a
  4069dc:	b.eq	4069e4 <ferror@plt+0x4074>  // b.none
  4069e0:	cbnz	w0, 406a94 <ferror@plt+0x4124>
  4069e4:	cbz	x26, 406a1c <ferror@plt+0x40ac>
  4069e8:	sub	x21, x20, x26
  4069ec:	add	x27, x24, #0x368
  4069f0:	ldr	x0, [x27]
  4069f4:	cbz	x0, 406a24 <ferror@plt+0x40b4>
  4069f8:	ldrb	w1, [x27, #16]
  4069fc:	cmp	x1, x22
  406a00:	b.ne	406a14 <ferror@plt+0x40a4>  // b.any
  406a04:	mov	x2, x22
  406a08:	mov	x1, x19
  406a0c:	bl	402690 <memcmp@plt>
  406a10:	cbz	w0, 406a24 <ferror@plt+0x40b4>
  406a14:	add	x27, x27, #0x18
  406a18:	b	4069f0 <ferror@plt+0x4080>
  406a1c:	sub	x22, x20, x19
  406a20:	b	4069ec <ferror@plt+0x407c>
  406a24:	ldr	x0, [x27, #8]
  406a28:	cbz	x0, 406a7c <ferror@plt+0x410c>
  406a2c:	cbz	x26, 406a7c <ferror@plt+0x410c>
  406a30:	ldrb	w1, [x27, #17]
  406a34:	cbz	w1, 406a3c <ferror@plt+0x40cc>
  406a38:	bl	402730 <free@plt>
  406a3c:	add	x0, x21, #0x7
  406a40:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  406a44:	mov	x19, x0
  406a48:	strh	w25, [x0], #2
  406a4c:	mov	x2, x21
  406a50:	mov	x1, x26
  406a54:	bl	4022e0 <memcpy@plt>
  406a58:	str	x19, [x27, #8]
  406a5c:	add	x0, x21, #0x2
  406a60:	ldr	w2, [x23]
  406a64:	add	x1, x19, x0
  406a68:	str	w2, [x19, x0]
  406a6c:	ldrb	w0, [x23, #4]
  406a70:	strb	w0, [x1, #4]
  406a74:	mov	w0, #0x1                   	// #1
  406a78:	strb	w0, [x27, #17]
  406a7c:	ldrb	w0, [x20]
  406a80:	cbz	w0, 406ad0 <ferror@plt+0x4160>
  406a84:	add	x19, x20, #0x1
  406a88:	mov	x26, #0x0                   	// #0
  406a8c:	add	x20, x20, #0x1
  406a90:	b	4069d4 <ferror@plt+0x4064>
  406a94:	cmp	w0, #0x3d
  406a98:	b.ne	406ab4 <ferror@plt+0x4144>  // b.any
  406a9c:	cmp	x26, #0x0
  406aa0:	ccmp	x20, x19, #0x4, eq  // eq = none
  406aa4:	b.eq	406ad0 <ferror@plt+0x4160>  // b.none
  406aa8:	sub	x22, x20, x19
  406aac:	add	x26, x20, #0x1
  406ab0:	b	406a8c <ferror@plt+0x411c>
  406ab4:	cbz	x26, 406a8c <ferror@plt+0x411c>
  406ab8:	cmp	w0, #0x3b
  406abc:	b.eq	406a8c <ferror@plt+0x411c>  // b.none
  406ac0:	sub	w0, w0, #0x30
  406ac4:	and	w0, w0, #0xff
  406ac8:	cmp	w0, #0x9
  406acc:	b.ls	406a8c <ferror@plt+0x411c>  // b.plast
  406ad0:	mov	w0, #0x1                   	// #1
  406ad4:	ldp	x19, x20, [sp, #16]
  406ad8:	ldp	x21, x22, [sp, #32]
  406adc:	ldp	x23, x24, [sp, #48]
  406ae0:	ldp	x25, x26, [sp, #64]
  406ae4:	ldr	x27, [sp, #80]
  406ae8:	ldp	x29, x30, [sp], #96
  406aec:	ret
  406af0:	mov	w0, #0x0                   	// #0
  406af4:	b	406ad4 <ferror@plt+0x4164>
  406af8:	tst	w0, #0xff
  406afc:	b.eq	406b4c <ferror@plt+0x41dc>  // b.none
  406b00:	stp	x29, x30, [sp, #-48]!
  406b04:	mov	x29, sp
  406b08:	stp	x19, x20, [sp, #16]
  406b0c:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  406b10:	mov	x20, x2
  406b14:	add	x19, x19, #0x368
  406b18:	str	x21, [sp, #32]
  406b1c:	mov	x21, x1
  406b20:	ldr	x0, [x19]
  406b24:	cbz	x0, 406b58 <ferror@plt+0x41e8>
  406b28:	ldrb	w1, [x19, #16]
  406b2c:	cmp	x1, x20
  406b30:	b.ne	406b44 <ferror@plt+0x41d4>  // b.any
  406b34:	mov	x2, x20
  406b38:	mov	x1, x21
  406b3c:	bl	402690 <memcmp@plt>
  406b40:	cbz	w0, 406b70 <ferror@plt+0x4200>
  406b44:	add	x19, x19, #0x18
  406b48:	b	406b20 <ferror@plt+0x41b0>
  406b4c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  406b50:	add	x0, x0, #0xaab
  406b54:	ret
  406b58:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  406b5c:	add	x0, x0, #0xaab
  406b60:	ldp	x19, x20, [sp, #16]
  406b64:	ldr	x21, [sp, #32]
  406b68:	ldp	x29, x30, [sp], #48
  406b6c:	ret
  406b70:	ldr	x0, [x19, #8]
  406b74:	b	406b60 <ferror@plt+0x41f0>
  406b78:	tst	w0, #0xff
  406b7c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  406b80:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x17198>
  406b84:	add	x0, x2, #0x823
  406b88:	add	x1, x1, #0xaab
  406b8c:	csel	x0, x0, x1, ne  // ne = any
  406b90:	ret
  406b94:	cmp	w0, #0x1
  406b98:	b.eq	406c14 <ferror@plt+0x42a4>  // b.none
  406b9c:	stp	x29, x30, [sp, #-32]!
  406ba0:	cmp	w0, #0x2
  406ba4:	mov	x29, sp
  406ba8:	str	x19, [sp, #16]
  406bac:	mov	w19, w0
  406bb0:	b.eq	406bd0 <ferror@plt+0x4260>  // b.none
  406bb4:	cbz	w0, 406be0 <ferror@plt+0x4270>
  406bb8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  406bbc:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  406bc0:	add	x2, x2, #0x834
  406bc4:	add	x0, x0, #0x842
  406bc8:	mov	w1, #0xec                  	// #236
  406bcc:	bl	402980 <ferror@plt+0x10>
  406bd0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  406bd4:	add	x0, x0, #0x82a
  406bd8:	bl	4028d0 <getenv@plt>
  406bdc:	cbnz	x0, 406bf0 <ferror@plt+0x4280>
  406be0:	mov	w0, #0x0                   	// #0
  406be4:	ldr	x19, [sp, #16]
  406be8:	ldp	x29, x30, [sp], #32
  406bec:	ret
  406bf0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  406bf4:	add	x1, x1, #0x82f
  406bf8:	bl	4026d0 <strcmp@plt>
  406bfc:	cbz	w0, 406be0 <ferror@plt+0x4270>
  406c00:	mov	w0, w19
  406c04:	bl	402810 <isatty@plt>
  406c08:	cbz	w0, 406be0 <ferror@plt+0x4270>
  406c0c:	ldr	x19, [sp, #16]
  406c10:	ldp	x29, x30, [sp], #32
  406c14:	b	40697c <ferror@plt+0x400c>
  406c18:	ldr	x2, [x0]
  406c1c:	ldr	x0, [x1]
  406c20:	ldr	w1, [x2]
  406c24:	ldr	w0, [x0]
  406c28:	sub	w0, w1, w0
  406c2c:	ret
  406c30:	stp	x29, x30, [sp, #-32]!
  406c34:	mov	x29, sp
  406c38:	str	x19, [sp, #16]
  406c3c:	mov	x19, x0
  406c40:	ldr	x0, [x0]
  406c44:	cbz	x0, 406c54 <ferror@plt+0x42e4>
  406c48:	ldrsb	w1, [x0, #3]
  406c4c:	tbz	w1, #31, 406c60 <ferror@plt+0x42f0>
  406c50:	str	wzr, [x0, #4]
  406c54:	ldr	x19, [sp, #16]
  406c58:	ldp	x29, x30, [sp], #32
  406c5c:	ret
  406c60:	bl	402730 <free@plt>
  406c64:	str	xzr, [x19]
  406c68:	b	406c54 <ferror@plt+0x42e4>
  406c6c:	stp	x29, x30, [sp, #-32]!
  406c70:	mov	x29, sp
  406c74:	str	x19, [sp, #16]
  406c78:	mov	x19, x0
  406c7c:	ldr	x0, [x0]
  406c80:	cbz	x0, 406c90 <ferror@plt+0x4320>
  406c84:	ldrsb	w1, [x0, #3]
  406c88:	tbz	w1, #31, 406c9c <ferror@plt+0x432c>
  406c8c:	str	wzr, [x0, #4]
  406c90:	ldr	x19, [sp, #16]
  406c94:	ldp	x29, x30, [sp], #32
  406c98:	ret
  406c9c:	bl	402730 <free@plt>
  406ca0:	str	xzr, [x19]
  406ca4:	b	406c90 <ferror@plt+0x4320>
  406ca8:	stp	x29, x30, [sp, #-64]!
  406cac:	mov	x29, sp
  406cb0:	stp	x19, x20, [sp, #16]
  406cb4:	mov	w20, w0
  406cb8:	mov	w19, w1
  406cbc:	stp	x21, x22, [sp, #32]
  406cc0:	stp	x23, x24, [sp, #48]
  406cc4:	adrp	x23, 478000 <_obstack_memory_used@@Base+0x3e198>
  406cc8:	tbz	w20, #31, 406cdc <ferror@plt+0x436c>
  406ccc:	ldr	x0, [x23, #1912]
  406cd0:	mov	w1, w20
  406cd4:	bl	422f78 <ferror@plt+0x20608>
  406cd8:	mov	w20, w0
  406cdc:	tbz	w19, #31, 406cf0 <ferror@plt+0x4380>
  406ce0:	ldr	x0, [x23, #1912]
  406ce4:	mov	w1, w19
  406ce8:	bl	422f78 <ferror@plt+0x20608>
  406cec:	mov	w19, w0
  406cf0:	cmp	w20, #0x1
  406cf4:	cset	w21, ls  // ls = plast
  406cf8:	cmp	w19, #0x1
  406cfc:	cset	w0, ls  // ls = plast
  406d00:	orr	w21, w21, w0
  406d04:	cbz	w21, 406d28 <ferror@plt+0x43b8>
  406d08:	cmp	w20, w19
  406d0c:	cset	w21, eq  // eq = none
  406d10:	mov	w0, w21
  406d14:	ldp	x19, x20, [sp, #16]
  406d18:	ldp	x21, x22, [sp, #32]
  406d1c:	ldp	x23, x24, [sp, #48]
  406d20:	ldp	x29, x30, [sp], #64
  406d24:	ret
  406d28:	ldr	x0, [x23, #1912]
  406d2c:	mov	w1, w20
  406d30:	bl	423714 <ferror@plt+0x20da4>
  406d34:	mov	x22, x0
  406d38:	ldr	x0, [x23, #1912]
  406d3c:	mov	w1, w19
  406d40:	bl	423714 <ferror@plt+0x20da4>
  406d44:	mov	x24, x0
  406d48:	cmp	x22, x0
  406d4c:	b.ne	406d88 <ferror@plt+0x4418>  // b.any
  406d50:	bl	42366c <ferror@plt+0x20cfc>
  406d54:	tst	w0, #0xff
  406d58:	b.eq	406db8 <ferror@plt+0x4448>  // b.none
  406d5c:	ldr	x0, [x23, #1912]
  406d60:	mov	w2, w20
  406d64:	mov	x1, x22
  406d68:	bl	42368c <ferror@plt+0x20d1c>
  406d6c:	mov	w20, w0
  406d70:	ldr	x0, [x23, #1912]
  406d74:	mov	w2, w19
  406d78:	mov	x1, x22
  406d7c:	bl	42368c <ferror@plt+0x20d1c>
  406d80:	mov	w19, w0
  406d84:	b	406cc8 <ferror@plt+0x4358>
  406d88:	mov	x0, x22
  406d8c:	bl	42366c <ferror@plt+0x20cfc>
  406d90:	tst	w0, #0xff
  406d94:	b.ne	406d10 <ferror@plt+0x43a0>  // b.any
  406d98:	mov	x0, x24
  406d9c:	bl	42366c <ferror@plt+0x20cfc>
  406da0:	tst	w0, #0xff
  406da4:	b.ne	406d10 <ferror@plt+0x43a0>  // b.any
  406da8:	ldr	x1, [x22, #8]
  406dac:	ldr	x0, [x24, #8]
  406db0:	cmp	x1, x0
  406db4:	b	406d0c <ferror@plt+0x439c>
  406db8:	mov	w21, #0x1                   	// #1
  406dbc:	b	406d10 <ferror@plt+0x43a0>
  406dc0:	stp	w1, w2, [x0]
  406dc4:	cmp	w1, w2
  406dc8:	b.le	406df8 <ferror@plt+0x4488>
  406dcc:	sub	w1, w1, #0x1
  406dd0:	cmp	w1, w2
  406dd4:	b.eq	406df8 <ferror@plt+0x4488>  // b.none
  406dd8:	stp	x29, x30, [sp, #-16]!
  406ddc:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  406de0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  406de4:	mov	x29, sp
  406de8:	add	x2, x2, #0x91e
  406dec:	add	x0, x0, #0x92b
  406df0:	mov	w1, #0x6bc                 	// #1724
  406df4:	bl	402980 <ferror@plt+0x10>
  406df8:	ret
  406dfc:	stp	x29, x30, [sp, #-48]!
  406e00:	mov	x29, sp
  406e04:	stp	x19, x20, [sp, #16]
  406e08:	mov	x19, x0
  406e0c:	ldrb	w0, [x0, #114]
  406e10:	str	x21, [sp, #32]
  406e14:	cbz	w0, 406e7c <ferror@plt+0x450c>
  406e18:	and	w21, w1, #0xff
  406e1c:	mov	w20, #0x0                   	// #0
  406e20:	ldr	w1, [x19, #144]
  406e24:	ldr	x0, [x19, #8]
  406e28:	sub	w1, w1, #0x3
  406e2c:	cmp	w1, w20
  406e30:	b.le	406e44 <ferror@plt+0x44d4>
  406e34:	mov	w1, #0x20                  	// #32
  406e38:	add	w20, w20, #0x1
  406e3c:	bl	40b2cc <ferror@plt+0x895c>
  406e40:	b	406e20 <ferror@plt+0x44b0>
  406e44:	ldr	w1, [x19, #144]
  406e48:	ldr	x0, [x19, #8]
  406e4c:	cmp	w1, w20
  406e50:	b.le	406e64 <ferror@plt+0x44f4>
  406e54:	mov	w1, w21
  406e58:	add	w20, w20, #0x1
  406e5c:	bl	40b2cc <ferror@plt+0x895c>
  406e60:	b	406e44 <ferror@plt+0x44d4>
  406e64:	ldp	x19, x20, [sp, #16]
  406e68:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  406e6c:	ldr	x21, [sp, #32]
  406e70:	add	x1, x1, #0x94d
  406e74:	ldp	x29, x30, [sp], #48
  406e78:	b	40b678 <ferror@plt+0x8d08>
  406e7c:	ldp	x19, x20, [sp, #16]
  406e80:	ldr	x21, [sp, #32]
  406e84:	ldp	x29, x30, [sp], #48
  406e88:	ret
  406e8c:	stp	x29, x30, [sp, #-48]!
  406e90:	mov	x29, sp
  406e94:	stp	x19, x20, [sp, #16]
  406e98:	mov	x19, x0
  406e9c:	ldr	w0, [x0, #12]
  406ea0:	str	x21, [sp, #32]
  406ea4:	cmp	w0, w1
  406ea8:	b.eq	406f9c <ferror@plt+0x462c>  // b.none
  406eac:	mov	w20, w1
  406eb0:	cmn	w0, #0x1
  406eb4:	b.eq	406ec8 <ferror@plt+0x4558>  // b.none
  406eb8:	ldr	x0, [x19]
  406ebc:	ldr	x1, [x19, #48]
  406ec0:	ldr	x0, [x0]
  406ec4:	bl	40b678 <ferror@plt+0x8d08>
  406ec8:	str	w20, [x19, #12]
  406ecc:	add	w1, w20, #0x3
  406ed0:	cmp	w1, #0x5
  406ed4:	b.hi	406f68 <ferror@plt+0x45f8>  // b.pmore
  406ed8:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  406edc:	add	x0, x0, #0xa84
  406ee0:	ldrb	w0, [x0, w1, uxtw]
  406ee4:	adr	x1, 406ef0 <ferror@plt+0x4580>
  406ee8:	add	x0, x1, w0, sxtb #2
  406eec:	br	x0
  406ef0:	ldr	x0, [x19]
  406ef4:	ldr	x1, [x19, #32]
  406ef8:	ldr	x0, [x0]
  406efc:	b	406f40 <ferror@plt+0x45d0>
  406f00:	ldr	x0, [x19]
  406f04:	ldr	x1, [x19, #40]
  406f08:	b	406ef8 <ferror@plt+0x4588>
  406f0c:	ldr	x0, [x19]
  406f10:	ldr	x20, [x0]
  406f14:	ldr	w0, [x19, #8]
  406f18:	ldrb	w21, [x20, #67]
  406f1c:	bl	4044b4 <ferror@plt+0x1b44>
  406f20:	mov	x19, x0
  406f24:	bl	402330 <strlen@plt>
  406f28:	mov	x2, x0
  406f2c:	mov	x1, x19
  406f30:	mov	w0, w21
  406f34:	bl	406af8 <ferror@plt+0x4188>
  406f38:	mov	x1, x0
  406f3c:	mov	x0, x20
  406f40:	ldp	x19, x20, [sp, #16]
  406f44:	ldr	x21, [sp, #32]
  406f48:	ldp	x29, x30, [sp], #48
  406f4c:	b	40b678 <ferror@plt+0x8d08>
  406f50:	ldr	x0, [x19]
  406f54:	ldr	x1, [x19, #16]
  406f58:	b	406ef8 <ferror@plt+0x4588>
  406f5c:	ldr	x0, [x19]
  406f60:	ldr	x1, [x19, #24]
  406f64:	b	406ef8 <ferror@plt+0x4588>
  406f68:	cmp	w20, #0x2
  406f6c:	b.gt	406f88 <ferror@plt+0x4618>
  406f70:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  406f74:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  406f78:	add	x2, x2, #0x950
  406f7c:	add	x0, x0, #0x92b
  406f80:	mov	w1, #0x17f                 	// #383
  406f84:	bl	402980 <ferror@plt+0x10>
  406f88:	ldp	x2, x1, [x19, #16]
  406f8c:	tst	x20, #0x1
  406f90:	ldr	x0, [x19]
  406f94:	csel	x1, x2, x1, ne  // ne = any
  406f98:	b	406ef8 <ferror@plt+0x4588>
  406f9c:	ldp	x19, x20, [sp, #16]
  406fa0:	ldr	x21, [sp, #32]
  406fa4:	ldp	x29, x30, [sp], #48
  406fa8:	ret
  406fac:	mov	w1, #0xffffffff            	// #-1
  406fb0:	b	406e8c <ferror@plt+0x451c>
  406fb4:	stp	x29, x30, [sp, #-32]!
  406fb8:	mov	x29, sp
  406fbc:	str	x19, [sp, #16]
  406fc0:	mov	x19, x0
  406fc4:	add	x0, x0, #0x38
  406fc8:	bl	406fac <ferror@plt+0x463c>
  406fcc:	ldr	x0, [x19, #8]
  406fd0:	ldr	x19, [sp, #16]
  406fd4:	ldp	x29, x30, [sp], #32
  406fd8:	b	40b270 <ferror@plt+0x8900>
  406fdc:	stp	x29, x30, [sp, #-48]!
  406fe0:	mov	x29, sp
  406fe4:	stp	x19, x20, [sp, #16]
  406fe8:	mov	x19, x1
  406fec:	ldr	w1, [x1]
  406ff0:	stp	x21, x22, [sp, #32]
  406ff4:	mov	x20, x0
  406ff8:	mov	w21, w2
  406ffc:	cmp	w1, w2
  407000:	b.le	407024 <ferror@plt+0x46b4>
  407004:	and	w22, w3, #0xff
  407008:	bl	406fb4 <ferror@plt+0x4644>
  40700c:	cbz	w22, 40701c <ferror@plt+0x46ac>
  407010:	mov	x0, x20
  407014:	mov	w1, #0x20                  	// #32
  407018:	bl	406dfc <ferror@plt+0x448c>
  40701c:	ldr	w0, [x20, #148]
  407020:	str	w0, [x19]
  407024:	ldr	w0, [x19]
  407028:	cmp	w0, w21
  40702c:	b.ge	407048 <ferror@plt+0x46d8>  // b.tcont
  407030:	ldr	x0, [x20, #8]
  407034:	mov	w1, #0x20                  	// #32
  407038:	bl	40b2cc <ferror@plt+0x895c>
  40703c:	ldr	w0, [x19]
  407040:	add	w0, w0, #0x1
  407044:	b	407020 <ferror@plt+0x46b0>
  407048:	ldp	x19, x20, [sp, #16]
  40704c:	ldp	x21, x22, [sp, #32]
  407050:	ldp	x29, x30, [sp], #48
  407054:	ret
  407058:	cbnz	x0, 40706c <ferror@plt+0x46fc>
  40705c:	cmp	w1, #0x4
  407060:	mov	w0, #0x4                   	// #4
  407064:	csel	w0, w1, w0, cs  // cs = hs, nlast
  407068:	ret
  40706c:	ldr	w2, [x0, #4]
  407070:	ldr	w0, [x0]
  407074:	add	w1, w1, w2
  407078:	and	w0, w0, #0x7fffffff
  40707c:	b	40d43c <ferror@plt+0xaacc>
  407080:	stp	x29, x30, [sp, #-16]!
  407084:	mov	x29, sp
  407088:	tbz	w1, #31, 4070a4 <ferror@plt+0x4734>
  40708c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407090:	add	x2, x2, #0x95c
  407094:	mov	w1, #0x705                 	// #1797
  407098:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40709c:	add	x0, x0, #0x92b
  4070a0:	bl	402980 <ferror@plt+0x10>
  4070a4:	mov	x3, x2
  4070a8:	sxtw	x4, w1
  4070ac:	ldr	x2, [x2, #8]
  4070b0:	ldr	x5, [x0, #32]
  4070b4:	add	x1, x2, w1, sxtw
  4070b8:	cmp	x1, x5
  4070bc:	b.cc	4070d0 <ferror@plt+0x4760>  // b.lo, b.ul, b.last
  4070c0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4070c4:	mov	w1, #0x706                 	// #1798
  4070c8:	add	x2, x2, #0x95c
  4070cc:	b	407098 <ferror@plt+0x4728>
  4070d0:	ldp	x29, x30, [sp], #16
  4070d4:	ldr	x1, [x3]
  4070d8:	ldr	x0, [x0, #16]
  4070dc:	add	x0, x0, x4
  4070e0:	b	4022e0 <memcpy@plt>
  4070e4:	ldr	x3, [x0, #136]
  4070e8:	mov	w2, #0x0                   	// #0
  4070ec:	add	x0, x3, #0xc
  4070f0:	cbz	x3, 407124 <ferror@plt+0x47b4>
  4070f4:	ldr	w4, [x3, #4]
  4070f8:	cmp	w2, w4
  4070fc:	b.ge	407124 <ferror@plt+0x47b4>  // b.tcont
  407100:	ldur	w4, [x0, #-4]
  407104:	cmp	w1, w4
  407108:	b.cc	407118 <ferror@plt+0x47a8>  // b.lo, b.ul, b.last
  40710c:	ldr	w4, [x0]
  407110:	cmp	w1, w4
  407114:	b.ls	40712c <ferror@plt+0x47bc>  // b.plast
  407118:	add	w2, w2, #0x1
  40711c:	add	x0, x0, #0x8
  407120:	b	4070f0 <ferror@plt+0x4780>
  407124:	mov	w0, #0x0                   	// #0
  407128:	ret
  40712c:	mov	w0, #0x1                   	// #1
  407130:	b	407128 <ferror@plt+0x47b8>
  407134:	ldr	x7, [x0, #120]
  407138:	mov	x0, #0x0                   	// #0
  40713c:	add	x6, x7, #0x8
  407140:	cbz	x7, 4072a0 <ferror@plt+0x4930>
  407144:	ldr	w8, [x7, #4]
  407148:	cmp	w8, w0
  40714c:	b.ls	4072a0 <ferror@plt+0x4930>  // b.plast
  407150:	ldr	w10, [x6, #16]
  407154:	cmp	w10, #0x2
  407158:	b.ne	4072a8 <ferror@plt+0x4938>  // b.any
  40715c:	add	w0, w0, #0x1
  407160:	add	x6, x6, #0x28
  407164:	b	407140 <ferror@plt+0x47d0>
  407168:	add	w0, w0, #0x1
  40716c:	add	x6, x6, #0x28
  407170:	cbz	x7, 407288 <ferror@plt+0x4918>
  407174:	ldr	w8, [x7, #4]
  407178:	cmp	w8, w0
  40717c:	b.ls	407288 <ferror@plt+0x4918>  // b.plast
  407180:	ldr	w10, [x6, #16]
  407184:	cmp	w10, #0x2
  407188:	b.eq	407168 <ferror@plt+0x47f8>  // b.none
  40718c:	ldr	w9, [x6]
  407190:	ldr	w8, [x6, #8]
  407194:	cmp	w9, w8
  407198:	b.ls	4071b4 <ferror@plt+0x4844>  // b.plast
  40719c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4071a0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4071a4:	add	x2, x2, #0x966
  4071a8:	add	x0, x0, #0x92b
  4071ac:	mov	w1, #0x1d8                 	// #472
  4071b0:	bl	402980 <ferror@plt+0x10>
  4071b4:	cmp	w1, w9
  4071b8:	b.cc	407168 <ferror@plt+0x47f8>  // b.lo, b.ul, b.last
  4071bc:	b.ne	4071f0 <ferror@plt+0x4880>  // b.any
  4071c0:	ldr	w9, [x6, #4]
  4071c4:	cmp	w2, w9
  4071c8:	b.lt	407168 <ferror@plt+0x47f8>  // b.tstop
  4071cc:	cmp	w1, w8
  4071d0:	b.cc	407248 <ferror@plt+0x48d8>  // b.lo, b.ul, b.last
  4071d4:	b.eq	407238 <ferror@plt+0x48c8>  // b.none
  4071d8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4071dc:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4071e0:	add	x2, x2, #0x966
  4071e4:	add	x0, x0, #0x92b
  4071e8:	mov	w1, #0x1f3                 	// #499
  4071ec:	bl	402980 <ferror@plt+0x10>
  4071f0:	cmp	w1, w8
  4071f4:	b.hi	407168 <ferror@plt+0x47f8>  // b.pmore
  4071f8:	b.cs	40721c <ferror@plt+0x48ac>  // b.hs, b.nlast
  4071fc:	cmp	w9, w8
  407200:	b.ne	407248 <ferror@plt+0x48d8>  // b.any
  407204:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407208:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40720c:	add	x2, x2, #0x966
  407210:	add	x0, x0, #0x92b
  407214:	mov	w1, #0x207                 	// #519
  407218:	bl	402980 <ferror@plt+0x10>
  40721c:	b.eq	407238 <ferror@plt+0x48c8>  // b.none
  407220:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407224:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  407228:	add	x2, x2, #0x966
  40722c:	add	x0, x0, #0x92b
  407230:	mov	w1, #0x20b                 	// #523
  407234:	bl	402980 <ferror@plt+0x10>
  407238:	ldr	w8, [x6, #12]
  40723c:	cmp	w2, w8
  407240:	cset	w8, le
  407244:	cbz	w8, 407168 <ferror@plt+0x47f8>
  407248:	str	w0, [x5]
  40724c:	strb	wzr, [x5, #4]
  407250:	cbnz	w10, 407290 <ferror@plt+0x4920>
  407254:	mov	x6, #0x28                  	// #40
  407258:	madd	x0, x0, x6, x7
  40725c:	ldr	w6, [x0, #28]
  407260:	cmp	w6, w1
  407264:	b.ne	407290 <ferror@plt+0x4920>  // b.any
  407268:	ldr	w0, [x0, #32]
  40726c:	cmp	w0, w2
  407270:	b.ne	407290 <ferror@plt+0x4920>  // b.any
  407274:	mov	w0, #0x1                   	// #1
  407278:	strb	w0, [x5, #4]
  40727c:	mov	w0, #0x1                   	// #1
  407280:	ldp	x29, x30, [sp], #16
  407284:	ret
  407288:	mov	w0, #0x0                   	// #0
  40728c:	b	407280 <ferror@plt+0x4910>
  407290:	cmp	w2, w3
  407294:	ccmp	w2, w4, #0x0, ge  // ge = tcont
  407298:	cset	w0, le
  40729c:	b	407280 <ferror@plt+0x4910>
  4072a0:	mov	w0, #0x0                   	// #0
  4072a4:	ret
  4072a8:	stp	x29, x30, [sp, #-16]!
  4072ac:	mov	x29, sp
  4072b0:	b	40718c <ferror@plt+0x481c>
  4072b4:	ldr	w2, [x0, #4]
  4072b8:	ldr	w3, [x1, #4]
  4072bc:	subs	x2, x2, x3
  4072c0:	b.ne	4072dc <ferror@plt+0x496c>  // b.any
  4072c4:	ldr	w0, [x0]
  4072c8:	ldr	w1, [x1]
  4072cc:	subs	x1, x0, x1
  4072d0:	b.ne	4072ec <ferror@plt+0x497c>  // b.any
  4072d4:	mov	w0, #0x0                   	// #0
  4072d8:	ret
  4072dc:	cmp	x2, #0x1
  4072e0:	mov	w0, #0x1                   	// #1
  4072e4:	cneg	w0, w0, lt  // lt = tstop
  4072e8:	b	4072d8 <ferror@plt+0x4968>
  4072ec:	cmp	x1, #0x1
  4072f0:	mov	w0, #0x1                   	// #1
  4072f4:	b	4072e4 <ferror@plt+0x4974>
  4072f8:	ldr	w2, [x0]
  4072fc:	ldr	w3, [x1]
  407300:	subs	x2, x2, x3
  407304:	b.ne	407320 <ferror@plt+0x49b0>  // b.any
  407308:	ldr	w0, [x0, #4]
  40730c:	ldr	w1, [x1, #4]
  407310:	subs	x1, x0, x1
  407314:	b.ne	407330 <ferror@plt+0x49c0>  // b.any
  407318:	mov	w0, #0x0                   	// #0
  40731c:	ret
  407320:	cmp	x2, #0x1
  407324:	mov	w0, #0x1                   	// #1
  407328:	cneg	w0, w0, lt  // lt = tstop
  40732c:	b	40731c <ferror@plt+0x49ac>
  407330:	cmp	x1, #0x1
  407334:	mov	w0, #0x1                   	// #1
  407338:	b	407328 <ferror@plt+0x49b8>
  40733c:	stp	x29, x30, [sp, #-32]!
  407340:	mov	x29, sp
  407344:	stp	x19, x20, [sp, #16]
  407348:	mov	x20, x0
  40734c:	mov	x19, x1
  407350:	mov	x0, x1
  407354:	bl	402330 <strlen@plt>
  407358:	ldr	x3, [x20]
  40735c:	mov	x1, x19
  407360:	ldp	x19, x20, [sp, #16]
  407364:	mov	x2, x0
  407368:	ldp	x29, x30, [sp], #32
  40736c:	ldrb	w0, [x3, #67]
  407370:	b	406af8 <ferror@plt+0x4188>
  407374:	stp	x29, x30, [sp, #-32]!
  407378:	mov	x29, sp
  40737c:	str	x19, [sp, #16]
  407380:	mov	x19, x0
  407384:	add	x0, x0, #0x88
  407388:	bl	406c30 <ferror@plt+0x42c0>
  40738c:	ldr	x0, [x19, #128]
  407390:	cbz	x0, 4073a0 <ferror@plt+0x4a30>
  407394:	ldrsb	w1, [x0, #3]
  407398:	tbz	w1, #31, 4073d8 <ferror@plt+0x4a68>
  40739c:	str	wzr, [x0, #4]
  4073a0:	ldr	x0, [x19, #120]
  4073a4:	cbz	x0, 4073b4 <ferror@plt+0x4a44>
  4073a8:	ldrsb	w1, [x0, #3]
  4073ac:	tbz	w1, #31, 4073e0 <ferror@plt+0x4a70>
  4073b0:	str	wzr, [x0, #4]
  4073b4:	ldr	w1, [x19, #68]
  4073b8:	cmn	w1, #0x1
  4073bc:	b.eq	4073e8 <ferror@plt+0x4a78>  // b.none
  4073c0:	ldr	x2, [x19, #56]
  4073c4:	ldr	x1, [x19, #104]
  4073c8:	ldr	x19, [sp, #16]
  4073cc:	ldp	x29, x30, [sp], #32
  4073d0:	ldr	x0, [x2]
  4073d4:	b	40b678 <ferror@plt+0x8d08>
  4073d8:	bl	402730 <free@plt>
  4073dc:	b	4073a0 <ferror@plt+0x4a30>
  4073e0:	bl	402730 <free@plt>
  4073e4:	b	4073b4 <ferror@plt+0x4a44>
  4073e8:	ldr	x19, [sp, #16]
  4073ec:	ldp	x29, x30, [sp], #32
  4073f0:	ret
  4073f4:	stp	x29, x30, [sp, #-64]!
  4073f8:	and	w2, w2, #0xff
  4073fc:	mov	x29, sp
  407400:	stp	x23, x24, [sp, #48]
  407404:	ldr	x23, [x0]
  407408:	stp	x19, x20, [sp, #16]
  40740c:	mov	x20, x0
  407410:	stp	x21, x22, [sp, #32]
  407414:	cbz	x23, 407434 <ferror@plt+0x4ac4>
  407418:	ldp	w0, w21, [x23]
  40741c:	ubfx	x0, x0, #0, #31
  407420:	sub	w0, w0, w21
  407424:	cmp	w1, w0
  407428:	b.hi	407444 <ferror@plt+0x4ad4>  // b.pmore
  40742c:	mov	w19, #0x0                   	// #0
  407430:	b	4074e0 <ferror@plt+0x4b70>
  407434:	mov	w19, #0x0                   	// #0
  407438:	cbz	w1, 4074e0 <ferror@plt+0x4b70>
  40743c:	mov	w21, #0x0                   	// #0
  407440:	b	407458 <ferror@plt+0x4ae8>
  407444:	ldrsb	w0, [x23, #3]
  407448:	tbz	w0, #31, 4074cc <ferror@plt+0x4b5c>
  40744c:	add	w1, w1, w21
  407450:	mov	w19, #0x1                   	// #1
  407454:	str	xzr, [x20]
  407458:	ldr	x0, [x20]
  40745c:	bl	409178 <ferror@plt+0x6808>
  407460:	mov	w22, w0
  407464:	mov	w1, #0x28                  	// #40
  407468:	mov	x0, #0x8                   	// #8
  40746c:	umaddl	x1, w22, w1, x0
  407470:	ldr	x0, [x20]
  407474:	cbz	x0, 4074d4 <ferror@plt+0x4b64>
  407478:	ldr	w24, [x0, #4]
  40747c:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  407480:	str	x0, [x20]
  407484:	and	w22, w22, #0x7fffffff
  407488:	stp	w22, w24, [x0]
  40748c:	mov	x1, x0
  407490:	cbz	w19, 4074f8 <ferror@plt+0x4b88>
  407494:	mov	w2, w21
  407498:	mov	x0, #0x8                   	// #8
  40749c:	cbz	w2, 4074dc <ferror@plt+0x4b6c>
  4074a0:	add	x6, x23, x0
  4074a4:	add	x3, x1, x0
  4074a8:	sub	w2, w2, #0x1
  4074ac:	add	x0, x0, #0x28
  4074b0:	ldp	x4, x5, [x6]
  4074b4:	stp	x4, x5, [x3]
  4074b8:	ldp	x4, x5, [x6, #16]
  4074bc:	stp	x4, x5, [x3, #16]
  4074c0:	ldr	x4, [x6, #32]
  4074c4:	str	x4, [x3, #32]
  4074c8:	b	40749c <ferror@plt+0x4b2c>
  4074cc:	mov	w19, #0x0                   	// #0
  4074d0:	b	40743c <ferror@plt+0x4acc>
  4074d4:	mov	w24, #0x0                   	// #0
  4074d8:	b	40747c <ferror@plt+0x4b0c>
  4074dc:	str	w21, [x1, #4]
  4074e0:	mov	w0, w19
  4074e4:	ldp	x19, x20, [sp, #16]
  4074e8:	ldp	x21, x22, [sp, #32]
  4074ec:	ldp	x23, x24, [sp, #48]
  4074f0:	ldp	x29, x30, [sp], #64
  4074f4:	ret
  4074f8:	mov	w19, #0x1                   	// #1
  4074fc:	b	4074e0 <ferror@plt+0x4b70>
  407500:	stp	x29, x30, [sp, #-224]!
  407504:	mov	x29, sp
  407508:	stp	x19, x20, [sp, #16]
  40750c:	mov	x19, x0
  407510:	and	w0, w3, #0xff
  407514:	stp	x21, x22, [sp, #32]
  407518:	stp	x23, x24, [sp, #48]
  40751c:	stp	x25, x26, [sp, #64]
  407520:	stp	x27, x28, [sp, #80]
  407524:	stp	w2, w0, [sp, #120]
  407528:	cbnz	x1, 407544 <ferror@plt+0x4bd4>
  40752c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407530:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  407534:	add	x2, x2, #0x975
  407538:	add	x0, x0, #0x92b
  40753c:	mov	w1, #0x39f                 	// #927
  407540:	bl	402980 <ferror@plt+0x10>
  407544:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  407548:	mov	x20, x1
  40754c:	ldr	w1, [x1]
  407550:	ldr	x0, [x0, #1912]
  407554:	bl	423a00 <ferror@plt+0x21090>
  407558:	mov	x26, x0
  40755c:	lsr	x24, x0, #32
  407560:	add	x8, sp, #0x80
  407564:	mov	w1, #0x1                   	// #1
  407568:	bl	40f034 <ferror@plt+0xc6c4>
  40756c:	add	x8, sp, #0xa0
  407570:	mov	w0, w24
  407574:	mov	w1, #0x2                   	// #2
  407578:	ldr	w28, [sp, #136]
  40757c:	bl	40f034 <ferror@plt+0xc6c4>
  407580:	ldr	w27, [sp, #168]
  407584:	ldr	w0, [x20]
  407588:	mov	w1, #0x0                   	// #0
  40758c:	add	x8, sp, #0xc0
  407590:	bl	40f034 <ferror@plt+0xc6c4>
  407594:	ldr	x1, [x19, #24]
  407598:	ldr	x0, [sp, #128]
  40759c:	cmp	x0, x1
  4075a0:	b.eq	4075c4 <ferror@plt+0x4c54>  // b.none
  4075a4:	mov	w0, #0x0                   	// #0
  4075a8:	ldp	x19, x20, [sp, #16]
  4075ac:	ldp	x21, x22, [sp, #32]
  4075b0:	ldp	x23, x24, [sp, #48]
  4075b4:	ldp	x25, x26, [sp, #64]
  4075b8:	ldp	x27, x28, [sp, #80]
  4075bc:	ldp	x29, x30, [sp], #224
  4075c0:	ret
  4075c4:	ldr	x1, [sp, #160]
  4075c8:	cmp	x0, x1
  4075cc:	b.ne	4075a4 <ferror@plt+0x4c34>  // b.any
  4075d0:	ldr	w1, [x20, #4]
  4075d4:	cbnz	w1, 4075e4 <ferror@plt+0x4c74>
  4075d8:	ldr	x2, [sp, #192]
  4075dc:	cmp	x0, x2
  4075e0:	b.ne	4075a4 <ferror@plt+0x4c34>  // b.any
  4075e4:	ldr	x0, [x19, #120]
  4075e8:	ldr	w21, [sp, #200]
  4075ec:	cbnz	x0, 4076fc <ferror@plt+0x4d8c>
  4075f0:	ldr	w0, [x20, #4]
  4075f4:	cmp	w28, w27
  4075f8:	str	w0, [sp, #108]
  4075fc:	ldr	x0, [x20, #8]
  407600:	str	x0, [sp, #112]
  407604:	ldr	w22, [sp, #204]
  407608:	b.gt	40763c <ferror@plt+0x4ccc>
  40760c:	ldr	w1, [x19, #16]
  407610:	mov	w0, w26
  407614:	ldr	w25, [sp, #140]
  407618:	ldr	w23, [sp, #172]
  40761c:	bl	406ca8 <ferror@plt+0x4338>
  407620:	tst	w0, #0xff
  407624:	b.eq	40763c <ferror@plt+0x4ccc>  // b.none
  407628:	ldr	w1, [x19, #16]
  40762c:	mov	w0, w24
  407630:	bl	406ca8 <ferror@plt+0x4338>
  407634:	tst	w0, #0xff
  407638:	b.ne	40772c <ferror@plt+0x4dbc>  // b.any
  40763c:	ldr	x0, [x19, #120]
  407640:	cbnz	x0, 407720 <ferror@plt+0x4db0>
  407644:	mov	w23, w22
  407648:	mov	w24, w21
  40764c:	mov	w25, w22
  407650:	mov	w26, w21
  407654:	ldr	w0, [sp, #124]
  407658:	cbz	w0, 4076a0 <ferror@plt+0x4d30>
  40765c:	mov	w1, w28
  407660:	mov	x0, x19
  407664:	bl	4070e4 <ferror@plt+0x4774>
  407668:	tst	w0, #0xff
  40766c:	b.eq	4075a4 <ferror@plt+0x4c34>  // b.none
  407670:	mov	w1, w27
  407674:	mov	x0, x19
  407678:	bl	4070e4 <ferror@plt+0x4774>
  40767c:	tst	w0, #0xff
  407680:	b.eq	4075a4 <ferror@plt+0x4c34>  // b.none
  407684:	ldr	w0, [x20, #4]
  407688:	cbnz	w0, 4076a0 <ferror@plt+0x4d30>
  40768c:	mov	w1, w21
  407690:	mov	x0, x19
  407694:	bl	4070e4 <ferror@plt+0x4774>
  407698:	tst	w0, #0xff
  40769c:	b.eq	4075a4 <ferror@plt+0x4c34>  // b.none
  4076a0:	mov	w2, #0x0                   	// #0
  4076a4:	mov	w1, #0x1                   	// #1
  4076a8:	add	x0, x19, #0x78
  4076ac:	bl	4073f4 <ferror@plt+0x4a84>
  4076b0:	ldr	x2, [x19, #120]
  4076b4:	mov	w3, #0x28                  	// #40
  4076b8:	ldr	w1, [x2, #4]
  4076bc:	add	w0, w1, #0x1
  4076c0:	str	w0, [x2, #4]
  4076c4:	mov	x0, #0x8                   	// #8
  4076c8:	umaddl	x1, w1, w3, x0
  4076cc:	add	x0, x2, x1
  4076d0:	str	w26, [x2, x1]
  4076d4:	ldr	w1, [sp, #108]
  4076d8:	stp	w23, w1, [x0, #12]
  4076dc:	ldr	w1, [sp, #120]
  4076e0:	str	w1, [x0, #28]
  4076e4:	ldr	x1, [sp, #112]
  4076e8:	stp	w25, w24, [x0, #4]
  4076ec:	stp	w21, w22, [x0, #20]
  4076f0:	str	x1, [x0, #32]
  4076f4:	mov	w0, #0x1                   	// #1
  4076f8:	b	4075a8 <ferror@plt+0x4c38>
  4076fc:	ldr	w0, [x0, #4]
  407700:	cbz	w0, 4075f0 <ferror@plt+0x4c80>
  407704:	cbnz	w1, 4075f0 <ferror@plt+0x4c80>
  407708:	ldr	w1, [x19, #16]
  40770c:	ldr	w0, [x20]
  407710:	bl	406ca8 <ferror@plt+0x4338>
  407714:	tst	w0, #0xff
  407718:	b.ne	4075f0 <ferror@plt+0x4c80>  // b.any
  40771c:	b	4075a4 <ferror@plt+0x4c34>
  407720:	ldr	w0, [x0, #4]
  407724:	cbz	w0, 407644 <ferror@plt+0x4cd4>
  407728:	b	4075a4 <ferror@plt+0x4c34>
  40772c:	mov	w24, w27
  407730:	mov	w26, w28
  407734:	b	407654 <ferror@plt+0x4ce4>
  407738:	stp	x29, x30, [sp, #-64]!
  40773c:	and	w2, w2, #0xff
  407740:	mov	x29, sp
  407744:	stp	x23, x24, [sp, #48]
  407748:	ldr	x23, [x0]
  40774c:	stp	x19, x20, [sp, #16]
  407750:	mov	x20, x0
  407754:	stp	x21, x22, [sp, #32]
  407758:	cbz	x23, 407778 <ferror@plt+0x4e08>
  40775c:	ldp	w0, w21, [x23]
  407760:	ubfx	x0, x0, #0, #31
  407764:	sub	w0, w0, w21
  407768:	cmp	w1, w0
  40776c:	b.hi	407788 <ferror@plt+0x4e18>  // b.pmore
  407770:	mov	w19, #0x0                   	// #0
  407774:	b	40780c <ferror@plt+0x4e9c>
  407778:	mov	w19, #0x0                   	// #0
  40777c:	cbz	w1, 40780c <ferror@plt+0x4e9c>
  407780:	mov	w21, #0x0                   	// #0
  407784:	b	40779c <ferror@plt+0x4e2c>
  407788:	ldrsb	w0, [x23, #3]
  40778c:	tbz	w0, #31, 4077f8 <ferror@plt+0x4e88>
  407790:	add	w1, w1, w21
  407794:	mov	w19, #0x1                   	// #1
  407798:	str	xzr, [x20]
  40779c:	ldr	x0, [x20]
  4077a0:	bl	409178 <ferror@plt+0x6808>
  4077a4:	mov	w22, w0
  4077a8:	ldr	x0, [x20]
  4077ac:	ubfiz	x1, x22, #3, #32
  4077b0:	add	x1, x1, #0x8
  4077b4:	cbz	x0, 407800 <ferror@plt+0x4e90>
  4077b8:	ldr	w24, [x0, #4]
  4077bc:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4077c0:	str	x0, [x20]
  4077c4:	and	w22, w22, #0x7fffffff
  4077c8:	stp	w22, w24, [x0]
  4077cc:	mov	x1, x0
  4077d0:	cbz	w19, 407824 <ferror@plt+0x4eb4>
  4077d4:	mov	w3, w21
  4077d8:	mov	x0, #0x0                   	// #0
  4077dc:	add	x2, x0, #0x1
  4077e0:	cmp	x0, x3
  4077e4:	b.eq	407808 <ferror@plt+0x4e98>  // b.none
  4077e8:	ldr	x0, [x23, x2, lsl #3]
  4077ec:	str	x0, [x1, x2, lsl #3]
  4077f0:	mov	x0, x2
  4077f4:	b	4077dc <ferror@plt+0x4e6c>
  4077f8:	mov	w19, #0x0                   	// #0
  4077fc:	b	407780 <ferror@plt+0x4e10>
  407800:	mov	w24, #0x0                   	// #0
  407804:	b	4077bc <ferror@plt+0x4e4c>
  407808:	str	w21, [x1, #4]
  40780c:	mov	w0, w19
  407810:	ldp	x19, x20, [sp, #16]
  407814:	ldp	x21, x22, [sp, #32]
  407818:	ldp	x23, x24, [sp, #48]
  40781c:	ldp	x29, x30, [sp], #64
  407820:	ret
  407824:	mov	w19, #0x1                   	// #1
  407828:	b	40780c <ferror@plt+0x4e9c>
  40782c:	stp	x29, x30, [sp, #-32]!
  407830:	mov	w2, #0x0                   	// #0
  407834:	mov	x29, sp
  407838:	stp	x19, x20, [sp, #16]
  40783c:	mov	x20, x0
  407840:	mov	x19, x1
  407844:	mov	w1, #0x1                   	// #1
  407848:	bl	407738 <ferror@plt+0x4dc8>
  40784c:	ldr	x2, [x20]
  407850:	ldr	x3, [x19]
  407854:	ldr	w1, [x2, #4]
  407858:	ldp	x19, x20, [sp, #16]
  40785c:	add	w0, w1, #0x1
  407860:	ubfiz	x1, x1, #3, #32
  407864:	str	w0, [x2, #4]
  407868:	add	x0, x1, #0x8
  40786c:	str	x3, [x2, x0]
  407870:	add	x0, x2, x0
  407874:	ldp	x29, x30, [sp], #32
  407878:	ret
  40787c:	stp	x29, x30, [sp, #-144]!
  407880:	mov	x29, sp
  407884:	stp	x19, x20, [sp, #16]
  407888:	mov	x19, x0
  40788c:	mov	x20, x1
  407890:	stp	x21, x22, [sp, #32]
  407894:	mov	x21, x2
  407898:	stp	x23, x24, [sp, #48]
  40789c:	mov	w23, w3
  4078a0:	stp	x25, x26, [sp, #64]
  4078a4:	ldr	x0, [x1]
  4078a8:	stp	x1, x0, [x19]
  4078ac:	mov	x0, x2
  4078b0:	mov	w1, #0x0                   	// #0
  4078b4:	str	x27, [sp, #80]
  4078b8:	bl	424a9c <ferror@plt+0x2212c>
  4078bc:	ldr	w0, [x0]
  4078c0:	str	w0, [x19, #16]
  4078c4:	add	x8, x19, #0x18
  4078c8:	mov	x0, x21
  4078cc:	mov	w1, #0x0                   	// #0
  4078d0:	bl	424ac4 <ferror@plt+0x22154>
  4078d4:	str	x20, [x19, #56]
  4078d8:	mov	w0, #0xffffffff            	// #-1
  4078dc:	stp	w23, w0, [x19, #64]
  4078e0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  4078e4:	mov	x0, x20
  4078e8:	add	x1, x1, #0x883
  4078ec:	bl	40733c <ferror@plt+0x49cc>
  4078f0:	str	x0, [x19, #72]
  4078f4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  4078f8:	ldr	x0, [x19, #56]
  4078fc:	add	x1, x1, #0x893
  407900:	bl	40733c <ferror@plt+0x49cc>
  407904:	str	x0, [x19, #80]
  407908:	ldr	x0, [x19, #56]
  40790c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  407910:	add	x1, x1, #0x8ac
  407914:	bl	40733c <ferror@plt+0x49cc>
  407918:	str	x0, [x19, #88]
  40791c:	ldr	x0, [x19, #56]
  407920:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  407924:	add	x1, x1, #0x8b9
  407928:	bl	40733c <ferror@plt+0x49cc>
  40792c:	str	x0, [x19, #96]
  407930:	ldr	x0, [x20]
  407934:	ldrb	w0, [x0, #67]
  407938:	bl	406b78 <ferror@plt+0x4208>
  40793c:	str	xzr, [x19, #120]
  407940:	ldurh	w1, [x20, #221]
  407944:	strh	w1, [x19, #112]
  407948:	ldr	w1, [x21, #8]
  40794c:	str	x0, [x19, #104]
  407950:	ldrb	w0, [x20, #223]
  407954:	strb	w0, [x19, #114]
  407958:	cbz	w1, 407968 <ferror@plt+0x4ff8>
  40795c:	add	x0, x19, #0x78
  407960:	mov	w2, #0x1                   	// #1
  407964:	bl	4073f4 <ferror@plt+0x4a84>
  407968:	ldr	w1, [x21, #120]
  40796c:	add	x23, x19, #0x80
  407970:	str	xzr, [x19, #128]
  407974:	cbz	w1, 407984 <ferror@plt+0x5014>
  407978:	mov	x0, x23
  40797c:	mov	w2, #0x1                   	// #1
  407980:	bl	4091a0 <ferror@plt+0x6830>
  407984:	ldr	w1, [x21, #8]
  407988:	add	x22, x19, #0x88
  40798c:	str	xzr, [x19, #136]
  407990:	adds	w1, w1, #0x1
  407994:	b.eq	4079a4 <ferror@plt+0x5034>  // b.none
  407998:	mov	x0, x22
  40799c:	mov	w2, #0x1                   	// #1
  4079a0:	bl	407738 <ferror@plt+0x4dc8>
  4079a4:	mov	w24, #0x0                   	// #0
  4079a8:	str	xzr, [x19, #144]
  4079ac:	ldr	w0, [x21, #8]
  4079b0:	cmp	w24, w0
  4079b4:	b.cs	4079e0 <ferror@plt+0x5070>  // b.hs, b.nlast
  4079b8:	mov	w1, w24
  4079bc:	mov	x0, x21
  4079c0:	bl	424a9c <ferror@plt+0x2212c>
  4079c4:	mov	x1, x0
  4079c8:	mov	w2, w24
  4079cc:	mov	x0, x19
  4079d0:	mov	w3, #0x0                   	// #0
  4079d4:	add	w24, w24, #0x1
  4079d8:	bl	407500 <ferror@plt+0x4b90>
  4079dc:	b	4079ac <ferror@plt+0x503c>
  4079e0:	add	x24, x21, #0x78
  4079e4:	mov	w26, #0x0                   	// #0
  4079e8:	mov	x25, #0xfffffffffffffff0    	// #-16
  4079ec:	ldr	w0, [x21, #120]
  4079f0:	cmp	w26, w0
  4079f4:	b.cs	407a88 <ferror@plt+0x5118>  // b.hs, b.nlast
  4079f8:	sxtw	x0, w26
  4079fc:	cmp	w26, #0x1
  407a00:	b.gt	407a78 <ferror@plt+0x5108>
  407a04:	add	x0, x0, #0x1
  407a08:	add	x0, x24, x0, lsl #3
  407a0c:	ldr	x27, [x0]
  407a10:	add	x8, sp, #0x70
  407a14:	ldr	w0, [x27]
  407a18:	bl	40ee94 <ferror@plt+0xc524>
  407a1c:	ldr	x0, [x19, #24]
  407a20:	ldr	x1, [sp, #112]
  407a24:	cmp	x1, x0
  407a28:	b.ne	407a70 <ferror@plt+0x5100>  // b.any
  407a2c:	ldr	w0, [x27, #4]
  407a30:	add	x8, sp, #0x70
  407a34:	bl	40ee94 <ferror@plt+0xc524>
  407a38:	ldr	x0, [x19, #24]
  407a3c:	ldr	x1, [sp, #112]
  407a40:	cmp	x1, x0
  407a44:	b.ne	407a70 <ferror@plt+0x5100>  // b.any
  407a48:	mov	w2, #0x0                   	// #0
  407a4c:	mov	w1, #0x1                   	// #1
  407a50:	mov	x0, x23
  407a54:	bl	4091a0 <ferror@plt+0x6830>
  407a58:	ldr	x1, [x19, #128]
  407a5c:	ldr	w0, [x1, #4]
  407a60:	add	w2, w0, #0x1
  407a64:	str	w2, [x1, #4]
  407a68:	add	x0, x1, w0, uxtw #3
  407a6c:	str	x27, [x0, #8]
  407a70:	add	w26, w26, #0x1
  407a74:	b	4079ec <ferror@plt+0x507c>
  407a78:	ldr	x1, [x24, #32]
  407a7c:	add	x0, x25, w26, sxtw #3
  407a80:	add	x0, x1, x0
  407a84:	b	407a0c <ferror@plt+0x509c>
  407a88:	ldr	x0, [x19, #128]
  407a8c:	cbz	x0, 407ab4 <ferror@plt+0x5144>
  407a90:	ldr	w1, [x0, #4]
  407a94:	cmp	w1, #0x1
  407a98:	b.ls	407ab4 <ferror@plt+0x5144>  // b.plast
  407a9c:	adrp	x3, 406000 <ferror@plt+0x3690>
  407aa0:	mov	x2, #0x8                   	// #8
  407aa4:	add	x3, x3, #0xc18
  407aa8:	mov	w1, w1
  407aac:	add	x0, x0, x2
  407ab0:	bl	4112a4 <ferror@plt+0xe934>
  407ab4:	ldr	x0, [x19, #136]
  407ab8:	cbz	x0, 407adc <ferror@plt+0x516c>
  407abc:	ldr	w0, [x0, #4]
  407ac0:	cbz	w0, 407adc <ferror@plt+0x516c>
  407ac4:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407ac8:	add	x2, x2, #0x98e
  407acc:	mov	w1, #0x49b                 	// #1179
  407ad0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  407ad4:	add	x0, x0, #0x92b
  407ad8:	bl	402980 <ferror@plt+0x10>
  407adc:	ldr	x0, [x19, #120]
  407ae0:	cbz	x0, 407b54 <ferror@plt+0x51e4>
  407ae4:	ldr	w1, [x0, #4]
  407ae8:	str	xzr, [sp, #104]
  407aec:	adds	w1, w1, #0x1
  407af0:	b.eq	407b00 <ferror@plt+0x5190>  // b.none
  407af4:	add	x0, sp, #0x68
  407af8:	mov	w2, #0x1                   	// #1
  407afc:	bl	407738 <ferror@plt+0x4dc8>
  407b00:	ldr	w0, [x19, #32]
  407b04:	add	x1, sp, #0x70
  407b08:	mov	w21, #0x0                   	// #0
  407b0c:	mov	w23, #0x28                  	// #40
  407b10:	stp	w0, w0, [sp, #112]
  407b14:	add	x0, sp, #0x68
  407b18:	bl	40782c <ferror@plt+0x4ebc>
  407b1c:	ldr	x0, [x19, #120]
  407b20:	cbz	x0, 407b74 <ferror@plt+0x5204>
  407b24:	ldr	w1, [x0, #4]
  407b28:	cmp	w21, w1
  407b2c:	b.cs	407b74 <ferror@plt+0x5204>  // b.hs, b.nlast
  407b30:	umaddl	x0, w21, w23, x0
  407b34:	ldr	w1, [x0, #8]
  407b38:	ldr	w0, [x0, #16]
  407b3c:	cmp	w1, w0
  407b40:	b.ls	407b5c <ferror@plt+0x51ec>  // b.plast
  407b44:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407b48:	mov	w1, #0x4a4                 	// #1188
  407b4c:	add	x2, x2, #0x98e
  407b50:	b	407ad0 <ferror@plt+0x5160>
  407b54:	mov	w1, #0x0                   	// #0
  407b58:	b	407ae8 <ferror@plt+0x5178>
  407b5c:	add	w21, w21, #0x1
  407b60:	stp	w1, w0, [sp, #112]
  407b64:	add	x1, sp, #0x70
  407b68:	add	x0, sp, #0x68
  407b6c:	bl	40782c <ferror@plt+0x4ebc>
  407b70:	b	407b1c <ferror@plt+0x51ac>
  407b74:	mov	w23, #0x0                   	// #0
  407b78:	ldr	x0, [x19, #128]
  407b7c:	cbz	x0, 407c14 <ferror@plt+0x52a4>
  407b80:	ldr	w1, [x0, #4]
  407b84:	cmp	w1, w23
  407b88:	b.ls	407c14 <ferror@plt+0x52a4>  // b.plast
  407b8c:	add	x0, x0, w23, uxtw #3
  407b90:	ldr	x24, [x0, #8]
  407b94:	cbnz	x24, 407ba8 <ferror@plt+0x5238>
  407b98:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407b9c:	mov	w1, #0x4ad                 	// #1197
  407ba0:	add	x2, x2, #0x98e
  407ba4:	b	407ad0 <ferror@plt+0x5160>
  407ba8:	ldr	w0, [x24]
  407bac:	add	x8, sp, #0x70
  407bb0:	bl	40ee94 <ferror@plt+0xc524>
  407bb4:	ldr	w21, [sp, #120]
  407bb8:	mov	x0, x24
  407bbc:	bl	424f2c <ferror@plt+0x225bc>
  407bc0:	tst	w0, #0xff
  407bc4:	b.eq	407bd4 <ferror@plt+0x5264>  // b.none
  407bc8:	cmp	w21, #0x1
  407bcc:	cset	w0, gt
  407bd0:	sub	w21, w21, w0
  407bd4:	ldr	w0, [x24, #4]
  407bd8:	add	x8, sp, #0x70
  407bdc:	bl	40ee94 <ferror@plt+0xc524>
  407be0:	ldr	w0, [sp, #120]
  407be4:	cmp	w21, w0
  407be8:	b.ls	407bfc <ferror@plt+0x528c>  // b.plast
  407bec:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407bf0:	mov	w1, #0xa5                  	// #165
  407bf4:	add	x2, x2, #0x9a3
  407bf8:	b	407ad0 <ferror@plt+0x5160>
  407bfc:	add	x1, sp, #0x70
  407c00:	add	w23, w23, #0x1
  407c04:	stp	w21, w0, [sp, #112]
  407c08:	add	x0, sp, #0x68
  407c0c:	bl	40782c <ferror@plt+0x4ebc>
  407c10:	b	407b78 <ferror@plt+0x5208>
  407c14:	ldr	x0, [sp, #104]
  407c18:	cbz	x0, 407c40 <ferror@plt+0x52d0>
  407c1c:	ldr	w1, [x0, #4]
  407c20:	cmp	w1, #0x1
  407c24:	b.ls	407c40 <ferror@plt+0x52d0>  // b.plast
  407c28:	adrp	x3, 407000 <ferror@plt+0x4690>
  407c2c:	mov	x2, #0x8                   	// #8
  407c30:	add	x3, x3, #0x2f8
  407c34:	mov	w1, w1
  407c38:	add	x0, x0, x2
  407c3c:	bl	4112a4 <ferror@plt+0xe934>
  407c40:	ldr	x1, [sp, #104]
  407c44:	cbz	x1, 407c50 <ferror@plt+0x52e0>
  407c48:	ldr	w0, [x1, #4]
  407c4c:	cbnz	w0, 407c60 <ferror@plt+0x52f0>
  407c50:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407c54:	mov	w1, #0x4b6                 	// #1206
  407c58:	add	x2, x2, #0x98e
  407c5c:	b	407ad0 <ferror@plt+0x5160>
  407c60:	mov	w21, #0x1                   	// #1
  407c64:	add	x1, x1, #0x8
  407c68:	mov	x0, x22
  407c6c:	bl	40782c <ferror@plt+0x4ebc>
  407c70:	ldr	x3, [sp, #104]
  407c74:	ldr	x0, [x19, #136]
  407c78:	cbz	x3, 407d10 <ferror@plt+0x53a0>
  407c7c:	ldr	w1, [x3, #4]
  407c80:	cmp	w1, w21
  407c84:	b.ls	407d10 <ferror@plt+0x53a0>  // b.plast
  407c88:	cbz	x0, 407cc0 <ferror@plt+0x5350>
  407c8c:	ldr	w2, [x0, #4]
  407c90:	sub	w2, w2, #0x1
  407c94:	add	x5, x3, w21, uxtw #3
  407c98:	mov	w1, w21
  407c9c:	add	x0, x0, x2, lsl #3
  407ca0:	ldr	w6, [x5, #8]
  407ca4:	ldr	w2, [x0, #8]
  407ca8:	cmp	w6, w2
  407cac:	b.cs	407cc8 <ferror@plt+0x5358>  // b.hs, b.nlast
  407cb0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407cb4:	mov	w1, #0x4bc                 	// #1212
  407cb8:	add	x2, x2, #0x98e
  407cbc:	b	407ad0 <ferror@plt+0x5160>
  407cc0:	mov	w2, #0x0                   	// #0
  407cc4:	b	407c90 <ferror@plt+0x5320>
  407cc8:	ldr	w4, [x0, #12]
  407ccc:	ldrb	w7, [x19, #114]
  407cd0:	mov	w2, w4
  407cd4:	add	x2, x2, #0x1
  407cd8:	add	x2, x2, x7
  407cdc:	cmp	x2, w6, uxtw
  407ce0:	b.lt	407cfc <ferror@plt+0x538c>  // b.tstop
  407ce4:	ldr	w1, [x5, #12]
  407ce8:	cmp	w4, w1
  407cec:	b.cs	407cf4 <ferror@plt+0x5384>  // b.hs, b.nlast
  407cf0:	str	w1, [x0, #12]
  407cf4:	add	w21, w21, #0x1
  407cf8:	b	407c70 <ferror@plt+0x5300>
  407cfc:	add	x1, x1, #0x1
  407d00:	mov	x0, x22
  407d04:	add	x1, x3, x1, lsl #3
  407d08:	bl	40782c <ferror@plt+0x4ebc>
  407d0c:	b	407cf4 <ferror@plt+0x5384>
  407d10:	cbz	x0, 407d48 <ferror@plt+0x53d8>
  407d14:	ldr	w4, [x0, #4]
  407d18:	cbz	w4, 407d48 <ferror@plt+0x53d8>
  407d1c:	add	x0, x0, #0x8
  407d20:	mov	w2, #0x1                   	// #1
  407d24:	cmp	w4, w2
  407d28:	b.eq	407db4 <ferror@plt+0x5444>  // b.none
  407d2c:	ldp	w5, w1, [x0]
  407d30:	cmp	w5, w1
  407d34:	b.ls	407d58 <ferror@plt+0x53e8>  // b.plast
  407d38:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407d3c:	mov	w1, #0x4d3                 	// #1235
  407d40:	add	x2, x2, #0x98e
  407d44:	b	407ad0 <ferror@plt+0x5160>
  407d48:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407d4c:	mov	w1, #0x4cd                 	// #1229
  407d50:	add	x2, x2, #0x98e
  407d54:	b	407ad0 <ferror@plt+0x5160>
  407d58:	ldp	w3, w6, [x0, #8]
  407d5c:	cmp	w3, w6
  407d60:	b.ls	407d74 <ferror@plt+0x5404>  // b.plast
  407d64:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407d68:	mov	w1, #0x4d4                 	// #1236
  407d6c:	add	x2, x2, #0x98e
  407d70:	b	407ad0 <ferror@plt+0x5160>
  407d74:	cmp	w5, w3
  407d78:	b.cc	407d8c <ferror@plt+0x541c>  // b.lo, b.ul, b.last
  407d7c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407d80:	mov	w1, #0x4d6                 	// #1238
  407d84:	add	x2, x2, #0x98e
  407d88:	b	407ad0 <ferror@plt+0x5160>
  407d8c:	add	w1, w1, #0x1
  407d90:	add	x0, x0, #0x8
  407d94:	cmp	w3, w1
  407d98:	b.hi	407dac <ferror@plt+0x543c>  // b.pmore
  407d9c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407da0:	mov	w1, #0x4d8                 	// #1240
  407da4:	add	x2, x2, #0x98e
  407da8:	b	407ad0 <ferror@plt+0x5160>
  407dac:	add	w2, w2, #0x1
  407db0:	b	407d24 <ferror@plt+0x53b4>
  407db4:	add	x0, sp, #0x68
  407db8:	bl	406c30 <ferror@plt+0x42c0>
  407dbc:	ldr	x1, [x19, #136]
  407dc0:	cbz	x1, 407dcc <ferror@plt+0x545c>
  407dc4:	ldr	w0, [x1, #4]
  407dc8:	cbnz	w0, 407ddc <ferror@plt+0x546c>
  407dcc:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407dd0:	mov	w1, #0x36a                 	// #874
  407dd4:	add	x2, x2, #0x9ad
  407dd8:	b	407ad0 <ferror@plt+0x5160>
  407ddc:	sub	w0, w0, #0x1
  407de0:	add	x0, x1, x0, lsl #3
  407de4:	ldr	w0, [x0, #12]
  407de8:	cmp	w0, #0x0
  407dec:	csel	w0, w0, wzr, ge  // ge = tcont
  407df0:	bl	405fe0 <ferror@plt+0x3670>
  407df4:	str	w0, [x19, #144]
  407df8:	ldr	x1, [x19, #136]
  407dfc:	cbz	x1, 407e1c <ferror@plt+0x54ac>
  407e00:	ldr	w1, [x1, #4]
  407e04:	cmp	w1, #0x1
  407e08:	b.ls	407e1c <ferror@plt+0x54ac>  // b.plast
  407e0c:	cmp	w0, #0x3
  407e10:	mov	w1, #0x3                   	// #3
  407e14:	csel	w0, w0, w1, ge  // ge = tcont
  407e18:	str	w0, [x19, #144]
  407e1c:	ldr	w0, [x19, #144]
  407e20:	ldr	w1, [x20, #224]
  407e24:	cmp	w1, w0
  407e28:	b.le	407e30 <ferror@plt+0x54c0>
  407e2c:	sub	w0, w1, #0x1
  407e30:	str	w0, [x19, #144]
  407e34:	ldr	x0, [x19]
  407e38:	ldr	w1, [x19, #32]
  407e3c:	ldrsw	x21, [x0, #112]
  407e40:	ldr	x0, [x19, #24]
  407e44:	bl	40fa80 <ferror@plt+0xd110>
  407e48:	cbz	x0, 407eb0 <ferror@plt+0x5540>
  407e4c:	ldrsw	x0, [x19, #36]
  407e50:	cmp	x1, x0
  407e54:	b.cc	407eb0 <ferror@plt+0x5540>  // b.lo, b.ul, b.last
  407e58:	ldrb	w2, [x19, #114]
  407e5c:	cbz	w2, 407e6c <ferror@plt+0x54fc>
  407e60:	ldr	w2, [x19, #144]
  407e64:	add	w2, w2, #0x2
  407e68:	add	x0, x0, w2, sxtw
  407e6c:	sub	x2, x1, x0
  407e70:	mov	x3, #0xa                   	// #10
  407e74:	cmp	x2, #0xa
  407e78:	csel	x2, x2, x3, cc  // cc = lo, ul, last
  407e7c:	cmp	x1, x21
  407e80:	b.cc	407e98 <ferror@plt+0x5528>  // b.lo, b.ul, b.last
  407e84:	sub	x2, x21, x2
  407e88:	cmp	x0, x2
  407e8c:	b.ls	407e98 <ferror@plt+0x5528>  // b.plast
  407e90:	sub	w0, w0, w2
  407e94:	str	w0, [x19, #148]
  407e98:	ldr	w0, [x19, #148]
  407e9c:	tbz	w0, #31, 407eb0 <ferror@plt+0x5540>
  407ea0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  407ea4:	mov	w1, #0x386                 	// #902
  407ea8:	add	x2, x2, #0x9ad
  407eac:	b	407ad0 <ferror@plt+0x5160>
  407eb0:	ldrb	w0, [x20, #228]
  407eb4:	cbz	w0, 407fdc <ferror@plt+0x566c>
  407eb8:	ldr	w0, [x19, #148]
  407ebc:	add	w21, w0, w21
  407ec0:	cmp	w21, #0x63
  407ec4:	b.le	407f30 <ferror@plt+0x55c0>
  407ec8:	mov	x0, x19
  407ecc:	mov	w1, #0x20                  	// #32
  407ed0:	bl	406dfc <ferror@plt+0x448c>
  407ed4:	mov	w22, #0xa                   	// #10
  407ed8:	ldr	x0, [x19, #8]
  407edc:	mov	w1, #0x20                  	// #32
  407ee0:	mov	w23, #0x64                  	// #100
  407ee4:	bl	40b2cc <ferror@plt+0x895c>
  407ee8:	ldr	w20, [x19, #148]
  407eec:	add	w20, w20, #0x1
  407ef0:	cmp	w21, w20
  407ef4:	ldr	x0, [x19, #8]
  407ef8:	b.lt	407f2c <ferror@plt+0x55bc>  // b.tstop
  407efc:	sdiv	w1, w20, w22
  407f00:	msub	w1, w1, w22, w20
  407f04:	cbnz	w1, 407f24 <ferror@plt+0x55b4>
  407f08:	sdiv	w2, w20, w23
  407f0c:	sdiv	w1, w2, w22
  407f10:	msub	w1, w1, w22, w2
  407f14:	add	w1, w1, #0x30
  407f18:	add	w20, w20, #0x1
  407f1c:	bl	40b2cc <ferror@plt+0x895c>
  407f20:	b	407ef0 <ferror@plt+0x5580>
  407f24:	mov	w1, #0x20                  	// #32
  407f28:	b	407f18 <ferror@plt+0x55a8>
  407f2c:	bl	40b270 <ferror@plt+0x8900>
  407f30:	mov	x0, x19
  407f34:	mov	w1, #0x20                  	// #32
  407f38:	bl	406dfc <ferror@plt+0x448c>
  407f3c:	mov	w22, #0xa                   	// #10
  407f40:	ldr	x0, [x19, #8]
  407f44:	mov	w1, #0x20                  	// #32
  407f48:	bl	40b2cc <ferror@plt+0x895c>
  407f4c:	ldr	w20, [x19, #148]
  407f50:	add	w20, w20, #0x1
  407f54:	cmp	w21, w20
  407f58:	ldr	x0, [x19, #8]
  407f5c:	b.lt	407f8c <ferror@plt+0x561c>  // b.tstop
  407f60:	sdiv	w2, w20, w22
  407f64:	msub	w1, w2, w22, w20
  407f68:	cbnz	w1, 407f84 <ferror@plt+0x5614>
  407f6c:	sdiv	w1, w2, w22
  407f70:	msub	w1, w1, w22, w2
  407f74:	add	w1, w1, #0x30
  407f78:	add	w20, w20, #0x1
  407f7c:	bl	40b2cc <ferror@plt+0x895c>
  407f80:	b	407f54 <ferror@plt+0x55e4>
  407f84:	mov	w1, #0x20                  	// #32
  407f88:	b	407f78 <ferror@plt+0x5608>
  407f8c:	bl	40b270 <ferror@plt+0x8900>
  407f90:	mov	w22, #0xa                   	// #10
  407f94:	mov	x0, x19
  407f98:	mov	w1, #0x20                  	// #32
  407f9c:	bl	406dfc <ferror@plt+0x448c>
  407fa0:	ldr	x0, [x19, #8]
  407fa4:	mov	w1, #0x20                  	// #32
  407fa8:	bl	40b2cc <ferror@plt+0x895c>
  407fac:	ldr	w20, [x19, #148]
  407fb0:	add	w20, w20, #0x1
  407fb4:	cmp	w21, w20
  407fb8:	ldr	x0, [x19, #8]
  407fbc:	b.lt	407fd8 <ferror@plt+0x5668>  // b.tstop
  407fc0:	sdiv	w1, w20, w22
  407fc4:	msub	w1, w1, w22, w20
  407fc8:	add	w20, w20, #0x1
  407fcc:	add	w1, w1, #0x30
  407fd0:	bl	40b2cc <ferror@plt+0x895c>
  407fd4:	b	407fb4 <ferror@plt+0x5644>
  407fd8:	bl	40b270 <ferror@plt+0x8900>
  407fdc:	ldp	x19, x20, [sp, #16]
  407fe0:	ldp	x21, x22, [sp, #32]
  407fe4:	ldp	x23, x24, [sp, #48]
  407fe8:	ldp	x25, x26, [sp, #64]
  407fec:	ldr	x27, [sp, #80]
  407ff0:	ldp	x29, x30, [sp], #144
  407ff4:	ret
  407ff8:	stp	x29, x30, [sp, #-224]!
  407ffc:	mov	x2, x0
  408000:	mov	w3, #0x4                   	// #4
  408004:	mov	x29, sp
  408008:	stp	x19, x20, [sp, #16]
  40800c:	mov	x20, x0
  408010:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  408014:	stp	x21, x22, [sp, #32]
  408018:	mov	w21, w1
  40801c:	mov	w22, #0x1                   	// #1
  408020:	ldr	x1, [x0, #864]
  408024:	add	x0, sp, #0x48
  408028:	bl	40787c <ferror@plt+0x4f0c>
  40802c:	stp	w21, w22, [sp, #56]
  408030:	mov	w3, w22
  408034:	add	x1, sp, #0x38
  408038:	add	x0, sp, #0x48
  40803c:	mov	w2, #0x0                   	// #0
  408040:	bl	407500 <ferror@plt+0x4b90>
  408044:	mov	w19, w0
  408048:	tst	w0, #0xff
  40804c:	b.eq	408064 <ferror@plt+0x56f4>  // b.none
  408050:	mov	w2, w22
  408054:	mov	w1, w21
  408058:	mov	x0, x20
  40805c:	mov	x3, #0x0                   	// #0
  408060:	bl	424b5c <ferror@plt+0x221ec>
  408064:	add	x0, sp, #0x48
  408068:	bl	407374 <ferror@plt+0x4a04>
  40806c:	mov	w0, w19
  408070:	ldp	x19, x20, [sp, #16]
  408074:	ldp	x21, x22, [sp, #32]
  408078:	ldp	x29, x30, [sp], #224
  40807c:	ret
  408080:	stp	x29, x30, [sp, #-464]!
  408084:	mov	x29, sp
  408088:	stp	x19, x20, [sp, #16]
  40808c:	mov	x20, x0
  408090:	ldr	x0, [x0]
  408094:	stp	x21, x22, [sp, #32]
  408098:	mov	x21, x1
  40809c:	mov	w22, w2
  4080a0:	stp	x23, x24, [sp, #48]
  4080a4:	stp	x25, x26, [sp, #64]
  4080a8:	stp	x27, x28, [sp, #80]
  4080ac:	bl	40b270 <ferror@plt+0x8900>
  4080b0:	mov	w1, #0x0                   	// #0
  4080b4:	mov	x0, x21
  4080b8:	bl	424a48 <ferror@plt+0x220d8>
  4080bc:	ldrb	w1, [x20, #108]
  4080c0:	cbz	w1, 409100 <ferror@plt+0x6790>
  4080c4:	cmp	w0, #0x1
  4080c8:	b.ls	409100 <ferror@plt+0x6790>  // b.plast
  4080cc:	ldr	w1, [x20, #200]
  4080d0:	cmp	w1, w0
  4080d4:	b.ne	4080e0 <ferror@plt+0x5770>  // b.any
  4080d8:	ldr	w1, [x21, #120]
  4080dc:	cbz	w1, 409100 <ferror@plt+0x6790>
  4080e0:	str	w0, [x20, #200]
  4080e4:	add	x19, sp, #0x138
  4080e8:	ldr	x0, [x20]
  4080ec:	add	x26, x19, #0x38
  4080f0:	bl	40afc0 <ferror@plt+0x8650>
  4080f4:	str	x0, [sp, #136]
  4080f8:	ldr	x0, [x20]
  4080fc:	mov	x1, #0x0                   	// #0
  408100:	bl	40af84 <ferror@plt+0x8614>
  408104:	mov	x2, x21
  408108:	mov	x21, #0x0                   	// #0
  40810c:	mov	w3, w22
  408110:	mov	x1, x20
  408114:	mov	x0, x19
  408118:	bl	40787c <ferror@plt+0x4f0c>
  40811c:	ldr	x24, [sp, #448]
  408120:	cbz	x24, 4090ec <ferror@plt+0x677c>
  408124:	ldr	w0, [x24, #4]
  408128:	cmp	w0, w21
  40812c:	b.le	4090ec <ferror@plt+0x677c>
  408130:	add	x0, x21, #0x1
  408134:	str	x0, [sp, #168]
  408138:	lsl	x22, x0, #3
  40813c:	add	x23, x24, x0, lsl #3
  408140:	ldrb	w0, [x20, #223]
  408144:	cbz	w0, 40821c <ferror@plt+0x58ac>
  408148:	cbz	w21, 408194 <ferror@plt+0x5824>
  40814c:	ldrb	w0, [sp, #426]
  408150:	cbnz	w0, 40816c <ferror@plt+0x57fc>
  408154:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408158:	add	x2, x2, #0x9b4
  40815c:	mov	w1, #0x408                 	// #1032
  408160:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  408164:	add	x0, x0, #0x92b
  408168:	bl	402980 <ferror@plt+0x10>
  40816c:	mov	w21, #0x0                   	// #0
  408170:	ldr	w1, [sp, #456]
  408174:	ldr	x0, [sp, #320]
  408178:	cmp	w1, w21
  40817c:	b.lt	408190 <ferror@plt+0x5820>  // b.tstop
  408180:	mov	w1, #0x2e                  	// #46
  408184:	add	w21, w21, #0x1
  408188:	bl	40b2cc <ferror@plt+0x895c>
  40818c:	b	408170 <ferror@plt+0x5800>
  408190:	bl	40b270 <ferror@plt+0x8900>
  408194:	ldr	w0, [x23, #4]
  408198:	ldr	w23, [x24, x22]
  40819c:	str	x0, [sp, #144]
  4081a0:	ldr	x0, [sp, #144]
  4081a4:	cmp	x23, x0
  4081a8:	b.gt	4090e4 <ferror@plt+0x6774>
  4081ac:	ldr	x0, [sp, #336]
  4081b0:	mov	w1, w23
  4081b4:	mov	w21, w23
  4081b8:	mov	w27, w23
  4081bc:	bl	40fa80 <ferror@plt+0xd110>
  4081c0:	str	x1, [sp, #96]
  4081c4:	mov	x22, x0
  4081c8:	cbz	x0, 4090a8 <ferror@plt+0x6738>
  4081cc:	add	x25, x19, #0x38
  4081d0:	mov	w24, #0x0                   	// #0
  4081d4:	ldr	x0, [sp, #440]
  4081d8:	cbz	x0, 4083f4 <ferror@plt+0x5a84>
  4081dc:	ldr	w1, [x0, #4]
  4081e0:	cmp	w1, w24
  4081e4:	b.ls	4083f4 <ferror@plt+0x5a84>  // b.plast
  4081e8:	add	x0, x0, w24, uxtw #3
  4081ec:	ldr	x28, [x0, #8]
  4081f0:	mov	x0, x28
  4081f4:	bl	424f2c <ferror@plt+0x225bc>
  4081f8:	tst	w0, #0xff
  4081fc:	b.eq	4083ec <ferror@plt+0x5a7c>  // b.none
  408200:	ldp	w1, w0, [x28]
  408204:	cmp	w1, w0
  408208:	b.eq	408364 <ferror@plt+0x59f4>  // b.none
  40820c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408210:	mov	w1, #0x638                 	// #1592
  408214:	add	x2, x2, #0x9e6
  408218:	b	408160 <ferror@plt+0x57f0>
  40821c:	ldr	w0, [sp, #344]
  408220:	cmp	w21, #0x0
  408224:	b.gt	408234 <ferror@plt+0x58c4>
  408228:	ldr	w1, [x24, #12]
  40822c:	cmp	w1, w0
  408230:	b.ge	408194 <ferror@plt+0x5824>  // b.tcont
  408234:	add	x21, x24, x21, lsl #3
  408238:	ldr	w4, [x21, #8]
  40823c:	cmp	w0, w4
  408240:	b.cc	408264 <ferror@plt+0x58f4>  // b.lo, b.ul, b.last
  408244:	ldr	w1, [x21, #12]
  408248:	cmp	w0, w1
  40824c:	b.hi	408264 <ferror@plt+0x58f4>  // b.pmore
  408250:	ldp	x0, x1, [sp, #336]
  408254:	stp	x0, x1, [sp, #240]
  408258:	ldp	x0, x1, [sp, #352]
  40825c:	stp	x0, x1, [sp, #256]
  408260:	b	4082d0 <ferror@plt+0x5960>
  408264:	ldr	x3, [sp, #432]
  408268:	mov	w1, #0x0                   	// #0
  40826c:	mov	x5, #0x28                  	// #40
  408270:	cbz	x3, 4082f4 <ferror@plt+0x5984>
  408274:	ldr	w0, [x3, #4]
  408278:	cmp	w1, w0
  40827c:	b.cs	4082f4 <ferror@plt+0x5984>  // b.hs, b.nlast
  408280:	mov	w0, w1
  408284:	madd	x0, x0, x5, x3
  408288:	ldr	w2, [x0, #8]
  40828c:	cmp	w2, w4
  408290:	b.cc	4082a0 <ferror@plt+0x5930>  // b.lo, b.ul, b.last
  408294:	ldr	w6, [x21, #12]
  408298:	cmp	w2, w6
  40829c:	b.ls	4082a8 <ferror@plt+0x5938>  // b.plast
  4082a0:	add	w1, w1, #0x1
  4082a4:	b	408270 <ferror@plt+0x5900>
  4082a8:	ldp	x4, x5, [sp, #336]
  4082ac:	stp	x4, x5, [sp, #272]
  4082b0:	ldr	w0, [x0, #12]
  4082b4:	str	w2, [sp, #280]
  4082b8:	str	w0, [sp, #284]
  4082bc:	ldp	x4, x5, [sp, #352]
  4082c0:	stp	x4, x5, [sp, #256]
  4082c4:	ldp	x0, x1, [sp, #272]
  4082c8:	stp	x0, x1, [sp, #240]
  4082cc:	stp	x4, x5, [sp, #288]
  4082d0:	ldp	x0, x1, [sp, #240]
  4082d4:	stp	x0, x1, [sp, #208]
  4082d8:	ldp	x0, x1, [sp, #256]
  4082dc:	stp	x0, x1, [sp, #224]
  4082e0:	ldr	x2, [x20, #144]
  4082e4:	add	x1, sp, #0xd0
  4082e8:	mov	x0, x20
  4082ec:	blr	x2
  4082f0:	b	408194 <ferror@plt+0x5824>
  4082f4:	mov	w25, #0x0                   	// #0
  4082f8:	ldr	x0, [sp, #440]
  4082fc:	cbz	x0, 408354 <ferror@plt+0x59e4>
  408300:	ldr	w1, [x0, #4]
  408304:	cmp	w1, w25
  408308:	b.ls	408354 <ferror@plt+0x59e4>  // b.plast
  40830c:	add	x0, x0, w25, uxtw #3
  408310:	add	x8, sp, #0x110
  408314:	ldr	x0, [x0, #8]
  408318:	ldr	w0, [x0]
  40831c:	bl	40ee94 <ferror@plt+0xc524>
  408320:	ldr	w1, [x21, #8]
  408324:	ldr	w0, [sp, #280]
  408328:	cmp	w0, w1
  40832c:	b.cc	40833c <ferror@plt+0x59cc>  // b.lo, b.ul, b.last
  408330:	ldr	w1, [x21, #12]
  408334:	cmp	w0, w1
  408338:	b.ls	408344 <ferror@plt+0x59d4>  // b.plast
  40833c:	add	w25, w25, #0x1
  408340:	b	4082f8 <ferror@plt+0x5988>
  408344:	ldp	x0, x1, [sp, #272]
  408348:	stp	x0, x1, [sp, #240]
  40834c:	ldp	x0, x1, [sp, #288]
  408350:	b	40825c <ferror@plt+0x58ec>
  408354:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408358:	mov	w1, #0x449                 	// #1097
  40835c:	add	x2, x2, #0x9d0
  408360:	b	408160 <ferror@plt+0x57f0>
  408364:	ldr	x1, [sp, #336]
  408368:	mov	w2, w27
  40836c:	mov	x0, x28
  408370:	bl	424e20 <ferror@plt+0x224b0>
  408374:	tst	w0, #0xff
  408378:	b.eq	4083ec <ferror@plt+0x5a7c>  // b.none
  40837c:	mov	x0, x25
  408380:	bl	406fac <ferror@plt+0x463c>
  408384:	mov	x0, x19
  408388:	mov	w1, #0x2b                  	// #43
  40838c:	bl	406dfc <ferror@plt+0x448c>
  408390:	ldr	x0, [sp, #320]
  408394:	mov	w1, #0x2b                  	// #43
  408398:	bl	40b2cc <ferror@plt+0x895c>
  40839c:	mov	x0, x25
  4083a0:	mov	w1, #0xfffffffe            	// #-2
  4083a4:	bl	406e8c <ferror@plt+0x451c>
  4083a8:	mov	x2, #0x0                   	// #0
  4083ac:	ldr	x0, [x28, #16]
  4083b0:	sub	x0, x0, #0x1
  4083b4:	cmp	x0, x2
  4083b8:	b.ls	4083dc <ferror@plt+0x5a6c>  // b.plast
  4083bc:	ldr	x0, [x28, #8]
  4083c0:	str	x2, [sp, #104]
  4083c4:	ldrb	w1, [x0, x2]
  4083c8:	ldr	x0, [sp, #320]
  4083cc:	bl	40b2cc <ferror@plt+0x895c>
  4083d0:	ldr	x2, [sp, #104]
  4083d4:	add	x2, x2, #0x1
  4083d8:	b	4083ac <ferror@plt+0x5a3c>
  4083dc:	mov	x0, x25
  4083e0:	bl	406fac <ferror@plt+0x463c>
  4083e4:	ldr	x0, [sp, #320]
  4083e8:	bl	40b270 <ferror@plt+0x8900>
  4083ec:	add	w24, w24, #0x1
  4083f0:	b	4081d4 <ferror@plt+0x5864>
  4083f4:	add	x0, x19, #0x38
  4083f8:	bl	406fac <ferror@plt+0x463c>
  4083fc:	ldrsw	x28, [sp, #96]
  408400:	sub	x2, x22, #0x1
  408404:	str	w28, [sp, #104]
  408408:	cmp	w28, #0x0
  40840c:	b.le	408454 <ferror@plt+0x5ae4>
  408410:	ldrb	w0, [x2, x28]
  408414:	sub	x28, x28, #0x1
  408418:	and	w1, w0, #0xfffffffb
  40841c:	cmp	w0, #0x20
  408420:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  408424:	b.eq	408404 <ferror@plt+0x5a94>  // b.none
  408428:	ldr	w0, [sp, #104]
  40842c:	add	x0, x22, w0, sxtw
  408430:	ldurb	w0, [x0, #-1]
  408434:	and	w1, w0, #0xfffffffb
  408438:	cmp	w0, #0x20
  40843c:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  408440:	b.ne	408474 <ferror@plt+0x5b04>  // b.any
  408444:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408448:	mov	w1, #0x2bb                 	// #699
  40844c:	add	x2, x2, #0x9fb
  408450:	b	408160 <ferror@plt+0x57f0>
  408454:	ldr	w0, [sp, #104]
  408458:	cmp	w0, #0x0
  40845c:	b.ge	408470 <ferror@plt+0x5b00>  // b.tcont
  408460:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408464:	mov	w1, #0x2b9                 	// #697
  408468:	add	x2, x2, #0x9fb
  40846c:	b	408160 <ferror@plt+0x57f0>
  408470:	b.ne	408428 <ferror@plt+0x5ab8>  // b.any
  408474:	ldrsw	x0, [sp, #460]
  408478:	add	x0, x22, x0
  40847c:	str	x0, [sp, #96]
  408480:	ldrb	w0, [sp, #426]
  408484:	cbz	w0, 40856c <ferror@plt+0x5bfc>
  408488:	mov	w0, w27
  40848c:	bl	405fe0 <ferror@plt+0x3670>
  408490:	mov	w25, w0
  408494:	mov	w22, #0x0                   	// #0
  408498:	ldr	w1, [sp, #456]
  40849c:	ldr	x0, [sp, #320]
  4084a0:	sub	w1, w1, w25
  4084a4:	cmp	w1, w22
  4084a8:	b.le	4084bc <ferror@plt+0x5b4c>
  4084ac:	mov	w1, #0x20                  	// #32
  4084b0:	add	w22, w22, #0x1
  4084b4:	bl	40b2cc <ferror@plt+0x895c>
  4084b8:	b	408498 <ferror@plt+0x5b28>
  4084bc:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  4084c0:	mov	w2, w21
  4084c4:	add	x1, x1, #0xa26
  4084c8:	bl	40ccc0 <ferror@plt+0xa350>
  4084cc:	ldr	w2, [sp, #460]
  4084d0:	add	x22, x19, #0x38
  4084d4:	mov	w25, #0x0                   	// #0
  4084d8:	mov	w28, #0x7fffffff            	// #2147483647
  4084dc:	add	w24, w2, #0x1
  4084e0:	ldr	w0, [sp, #104]
  4084e4:	cmp	w24, w0
  4084e8:	b.gt	408590 <ferror@plt+0x5c20>
  4084ec:	ldrb	w0, [sp, #424]
  4084f0:	cbz	w0, 408524 <ferror@plt+0x5bb4>
  4084f4:	add	x5, sp, #0x110
  4084f8:	mov	w2, w24
  4084fc:	mov	w1, w21
  408500:	mov	x0, x19
  408504:	mov	w4, #0x7fffffff            	// #2147483647
  408508:	mov	w3, #0x0                   	// #0
  40850c:	bl	407134 <ferror@plt+0x47c4>
  408510:	tst	w0, #0xff
  408514:	b.eq	40857c <ferror@plt+0x5c0c>  // b.none
  408518:	ldr	w1, [sp, #272]
  40851c:	mov	x0, x22
  408520:	bl	406e8c <ferror@plt+0x451c>
  408524:	ldr	x0, [sp, #96]
  408528:	ldrb	w1, [x0]
  40852c:	ands	w3, w1, #0xffffffdf
  408530:	and	w0, w1, #0xfffffffb
  408534:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  408538:	b.eq	408588 <ferror@plt+0x5c18>  // b.none
  40853c:	mov	w0, #0x7fffffff            	// #2147483647
  408540:	mov	w25, w24
  408544:	cmp	w28, w0
  408548:	b.ne	408550 <ferror@plt+0x5be0>  // b.any
  40854c:	mov	w28, w24
  408550:	ldr	x0, [sp, #320]
  408554:	add	w24, w24, #0x1
  408558:	bl	40b2cc <ferror@plt+0x895c>
  40855c:	ldr	x0, [sp, #96]
  408560:	add	x0, x0, #0x1
  408564:	str	x0, [sp, #96]
  408568:	b	4084e0 <ferror@plt+0x5b70>
  40856c:	ldr	x0, [sp, #320]
  408570:	mov	w1, #0x20                  	// #32
  408574:	bl	40b2cc <ferror@plt+0x895c>
  408578:	b	4084cc <ferror@plt+0x5b5c>
  40857c:	mov	x0, x22
  408580:	bl	406fac <ferror@plt+0x463c>
  408584:	b	408524 <ferror@plt+0x5bb4>
  408588:	mov	w1, #0x20                  	// #32
  40858c:	b	408550 <ferror@plt+0x5be0>
  408590:	mov	x0, x19
  408594:	bl	406fb4 <ferror@plt+0x4644>
  408598:	ldr	x3, [sp, #432]
  40859c:	mov	w2, #0x0                   	// #0
  4085a0:	add	x0, x3, #0x8
  4085a4:	mov	x1, x0
  4085a8:	cbz	x3, 408710 <ferror@plt+0x5da0>
  4085ac:	ldr	w4, [x3, #4]
  4085b0:	cmp	w4, w2
  4085b4:	b.ls	408710 <ferror@plt+0x5da0>  // b.plast
  4085b8:	ldr	w5, [x1, #16]
  4085bc:	cmp	w5, #0x2
  4085c0:	b.eq	408710 <ferror@plt+0x5da0>  // b.none
  4085c4:	ldr	w6, [x1]
  4085c8:	ldr	w5, [x1, #8]
  4085cc:	cmp	w6, w5
  4085d0:	b.ls	4085e4 <ferror@plt+0x5c74>  // b.plast
  4085d4:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4085d8:	mov	w1, #0x215                 	// #533
  4085dc:	add	x2, x2, #0xa2c
  4085e0:	b	408160 <ferror@plt+0x57f0>
  4085e4:	cmp	w6, w21
  4085e8:	b.hi	4086cc <ferror@plt+0x5d5c>  // b.pmore
  4085ec:	cmp	w5, w21
  4085f0:	b.cc	4086cc <ferror@plt+0x5d5c>  // b.lo, b.ul, b.last
  4085f4:	ldr	w22, [sp, #348]
  4085f8:	add	w3, w25, #0x1
  4085fc:	mov	w1, #0x0                   	// #0
  408600:	add	w22, w22, #0x1
  408604:	ldr	w2, [x0]
  408608:	cmp	w2, w21
  40860c:	b.hi	40862c <ferror@plt+0x5cbc>  // b.pmore
  408610:	ldr	w2, [x0, #8]
  408614:	cmp	w2, w21
  408618:	b.ne	4086d8 <ferror@plt+0x5d68>  // b.any
  40861c:	ldr	w2, [x0, #12]
  408620:	cmp	w2, w22
  408624:	b.lt	40862c <ferror@plt+0x5cbc>  // b.tstop
  408628:	add	w22, w2, #0x1
  40862c:	add	w1, w1, #0x1
  408630:	add	x0, x0, #0x28
  408634:	cmp	w4, w1
  408638:	b.ne	408604 <ferror@plt+0x5c94>  // b.any
  40863c:	mov	x0, x19
  408640:	mov	w1, #0x20                  	// #32
  408644:	bl	406dfc <ferror@plt+0x448c>
  408648:	ldr	x0, [sp, #320]
  40864c:	mov	w1, #0x20                  	// #32
  408650:	bl	40b2cc <ferror@plt+0x895c>
  408654:	ldr	w24, [sp, #460]
  408658:	add	x0, x19, #0x38
  40865c:	str	x0, [sp, #96]
  408660:	add	w24, w24, #0x1
  408664:	cmp	w24, w22
  408668:	b.ge	408708 <ferror@plt+0x5d98>  // b.tcont
  40866c:	add	x5, sp, #0x110
  408670:	mov	w4, w25
  408674:	mov	w3, w28
  408678:	mov	w2, w24
  40867c:	mov	w1, w21
  408680:	mov	x0, x19
  408684:	bl	407134 <ferror@plt+0x47c4>
  408688:	tst	w0, #0xff
  40868c:	b.eq	4086f8 <ferror@plt+0x5d88>  // b.none
  408690:	ldr	w1, [sp, #272]
  408694:	ldr	x0, [sp, #96]
  408698:	bl	406e8c <ferror@plt+0x451c>
  40869c:	ldrb	w0, [sp, #276]
  4086a0:	cbz	w0, 4086f0 <ferror@plt+0x5d80>
  4086a4:	ldr	w0, [sp, #272]
  4086a8:	cmp	w0, #0x2
  4086ac:	b.gt	4086e8 <ferror@plt+0x5d78>
  4086b0:	ldr	x1, [sp, #312]
  4086b4:	add	x0, x1, w0, sxtw
  4086b8:	ldrb	w1, [x0, #116]
  4086bc:	ldr	x0, [sp, #320]
  4086c0:	add	w24, w24, #0x1
  4086c4:	bl	40b2cc <ferror@plt+0x895c>
  4086c8:	b	408664 <ferror@plt+0x5cf4>
  4086cc:	add	w2, w2, #0x1
  4086d0:	add	x1, x1, #0x28
  4086d4:	b	4085a8 <ferror@plt+0x5c38>
  4086d8:	b.ls	40862c <ferror@plt+0x5cbc>  // b.plast
  4086dc:	cmp	w25, w22
  4086e0:	csel	w22, w22, w3, lt  // lt = tstop
  4086e4:	b	40862c <ferror@plt+0x5cbc>
  4086e8:	mov	w1, #0x5e                  	// #94
  4086ec:	b	4086bc <ferror@plt+0x5d4c>
  4086f0:	mov	w1, #0x7e                  	// #126
  4086f4:	b	4086bc <ferror@plt+0x5d4c>
  4086f8:	ldr	x0, [sp, #96]
  4086fc:	bl	406fac <ferror@plt+0x463c>
  408700:	mov	w1, #0x20                  	// #32
  408704:	b	4086bc <ferror@plt+0x5d4c>
  408708:	mov	x0, x19
  40870c:	bl	406fb4 <ferror@plt+0x4644>
  408710:	ldrb	w0, [sp, #425]
  408714:	str	w0, [sp, #96]
  408718:	cbz	w0, 4088cc <ferror@plt+0x5f5c>
  40871c:	mov	w22, #0x0                   	// #0
  408720:	str	xzr, [sp, #240]
  408724:	ldr	x0, [sp, #432]
  408728:	cbz	x0, 4088bc <ferror@plt+0x5f4c>
  40872c:	ldr	w1, [x0, #4]
  408730:	cmp	w1, w22
  408734:	b.ls	4088bc <ferror@plt+0x5f4c>  // b.plast
  408738:	mov	w2, w22
  40873c:	mov	x1, #0x28                  	// #40
  408740:	madd	x24, x2, x1, x0
  408744:	ldr	x0, [x24, #40]
  408748:	cbz	x0, 4088b4 <ferror@plt+0x5f44>
  40874c:	ldr	w1, [x24, #28]
  408750:	cmp	w1, w21
  408754:	b.ne	4088b4 <ferror@plt+0x5f44>  // b.any
  408758:	ldr	w3, [x24, #32]
  40875c:	ldr	w1, [sp, #460]
  408760:	cmp	w3, w1
  408764:	b.le	4088b4 <ferror@plt+0x5f44>
  408768:	ldr	x1, [x0]
  40876c:	ldr	x3, [x1, #16]
  408770:	ldr	w1, [x24, #36]
  408774:	blr	x3
  408778:	stp	x0, x1, [sp, #192]
  40877c:	mov	x4, #0x0                   	// #0
  408780:	mov	x3, x0
  408784:	bfxil	x4, x1, #0, #8
  408788:	cbz	x0, 4088b4 <ferror@plt+0x5f44>
  40878c:	ldr	w1, [x24, #32]
  408790:	str	w1, [sp, #104]
  408794:	str	x3, [sp, #280]
  408798:	strb	w4, [sp, #288]
  40879c:	bl	402330 <strlen@plt>
  4087a0:	str	x0, [sp, #112]
  4087a4:	ldr	x25, [sp, #240]
  4087a8:	cbz	x25, 408848 <ferror@plt+0x5ed8>
  4087ac:	ldp	w0, w24, [x25]
  4087b0:	ubfx	x0, x0, #0, #31
  4087b4:	cmp	w0, w24
  4087b8:	b.ne	408864 <ferror@plt+0x5ef4>  // b.any
  4087bc:	ldrsb	w0, [x25, #3]
  4087c0:	tbz	w0, #31, 408848 <ferror@plt+0x5ed8>
  4087c4:	ldr	w28, [sp, #96]
  4087c8:	add	w1, w24, #0x1
  4087cc:	str	xzr, [sp, #240]
  4087d0:	ldr	x0, [sp, #240]
  4087d4:	bl	407058 <ferror@plt+0x46e8>
  4087d8:	mov	w2, w0
  4087dc:	mov	x1, #0x8                   	// #8
  4087e0:	mov	w0, #0x28                  	// #40
  4087e4:	umaddl	x1, w2, w0, x1
  4087e8:	ldr	x0, [sp, #240]
  4087ec:	cbz	x0, 408858 <ferror@plt+0x5ee8>
  4087f0:	ldr	w6, [x0, #4]
  4087f4:	stp	w6, w2, [sp, #124]
  4087f8:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4087fc:	ldp	w6, w2, [sp, #124]
  408800:	str	x0, [sp, #240]
  408804:	and	w2, w2, #0x7fffffff
  408808:	stp	w2, w6, [x0]
  40880c:	cbz	w28, 408864 <ferror@plt+0x5ef4>
  408810:	mov	w2, w24
  408814:	mov	x1, #0x8                   	// #8
  408818:	cbz	w2, 408860 <ferror@plt+0x5ef0>
  40881c:	add	x8, x25, x1
  408820:	add	x5, x0, x1
  408824:	sub	w2, w2, #0x1
  408828:	add	x1, x1, #0x28
  40882c:	ldp	x6, x7, [x8]
  408830:	stp	x6, x7, [x5]
  408834:	ldp	x6, x7, [x8, #16]
  408838:	stp	x6, x7, [x5, #16]
  40883c:	ldr	x6, [x8, #32]
  408840:	str	x6, [x5, #32]
  408844:	b	408818 <ferror@plt+0x5ea8>
  408848:	mov	w28, #0x0                   	// #0
  40884c:	mov	w24, #0x0                   	// #0
  408850:	mov	w1, #0x1                   	// #1
  408854:	b	4087d0 <ferror@plt+0x5e60>
  408858:	mov	w6, #0x0                   	// #0
  40885c:	b	4087f4 <ferror@plt+0x5e84>
  408860:	str	w24, [x0, #4]
  408864:	ldr	x0, [sp, #240]
  408868:	mov	x3, #0x8                   	// #8
  40886c:	ldr	w1, [x0, #4]
  408870:	add	w2, w1, #0x1
  408874:	str	w2, [x0, #4]
  408878:	ldr	w2, [sp, #104]
  40887c:	str	w2, [sp, #276]
  408880:	ldr	x2, [sp, #112]
  408884:	str	x2, [sp, #296]
  408888:	mov	w2, #0x28                  	// #40
  40888c:	str	w22, [sp, #272]
  408890:	str	wzr, [sp, #304]
  408894:	umaddl	x1, w1, w2, x3
  408898:	ldp	x2, x3, [sp, #272]
  40889c:	add	x0, x0, x1
  4088a0:	stp	x2, x3, [x0]
  4088a4:	ldp	x2, x3, [sp, #288]
  4088a8:	stp	x2, x3, [x0, #16]
  4088ac:	ldr	w1, [sp, #304]
  4088b0:	str	w1, [x0, #32]
  4088b4:	add	w22, w22, #0x1
  4088b8:	b	408724 <ferror@plt+0x5db4>
  4088bc:	ldr	x0, [sp, #240]
  4088c0:	cbnz	x0, 4089f0 <ferror@plt+0x6080>
  4088c4:	add	x0, sp, #0xf0
  4088c8:	bl	406c6c <ferror@plt+0x42fc>
  4088cc:	ldr	x0, [sp, #336]
  4088d0:	mov	x22, #0x0                   	// #0
  4088d4:	str	wzr, [sp, #96]
  4088d8:	str	x0, [sp, #152]
  4088dc:	ldr	x0, [sp, #440]
  4088e0:	cbz	x0, 408f68 <ferror@plt+0x65f8>
  4088e4:	ldr	w1, [x0, #4]
  4088e8:	ldr	w2, [sp, #96]
  4088ec:	cmp	w1, w2
  4088f0:	b.ls	408f68 <ferror@plt+0x65f8>  // b.plast
  4088f4:	ldr	x1, [sp, #96]
  4088f8:	add	x0, x0, w1, uxtw #3
  4088fc:	ldr	x24, [x0, #8]
  408900:	mov	x0, x24
  408904:	bl	424f2c <ferror@plt+0x225bc>
  408908:	ands	w0, w0, #0xff
  40890c:	str	w0, [sp, #112]
  408910:	b.ne	408e1c <ferror@plt+0x64ac>  // b.any
  408914:	ldr	x1, [sp, #336]
  408918:	mov	w2, w27
  40891c:	mov	x0, x24
  408920:	bl	424e20 <ferror@plt+0x224b0>
  408924:	ands	w0, w0, #0xff
  408928:	str	w0, [sp, #160]
  40892c:	b.eq	408e1c <ferror@plt+0x64ac>  // b.none
  408930:	ldr	w0, [x24]
  408934:	add	x8, sp, #0x110
  408938:	bl	40ee94 <ferror@plt+0xc524>
  40893c:	ldr	w28, [sp, #284]
  408940:	ldr	w0, [x24, #4]
  408944:	add	x8, sp, #0x110
  408948:	bl	40ee94 <ferror@plt+0xc524>
  40894c:	ldr	w2, [sp, #284]
  408950:	mov	w1, w28
  408954:	add	x0, sp, #0x110
  408958:	sub	w2, w2, #0x1
  40895c:	bl	406dc0 <ferror@plt+0x4450>
  408960:	ldr	w0, [sp, #272]
  408964:	add	x8, sp, #0x110
  408968:	str	w0, [sp, #104]
  40896c:	ldr	w0, [sp, #276]
  408970:	str	w0, [sp, #124]
  408974:	ldr	w0, [x24]
  408978:	bl	40ee94 <ferror@plt+0xc524>
  40897c:	ldr	w25, [sp, #284]
  408980:	ldr	x0, [x24, #16]
  408984:	sub	w2, w25, #0x1
  408988:	ldr	w3, [x24]
  40898c:	add	w28, w2, w0
  408990:	ldr	w0, [x24, #4]
  408994:	cmp	w3, w0
  408998:	b.ne	408c10 <ferror@plt+0x62a0>  // b.any
  40899c:	mov	w2, w28
  4089a0:	add	x0, sp, #0x110
  4089a4:	mov	w1, w25
  4089a8:	bl	406dc0 <ferror@plt+0x4450>
  4089ac:	ldr	w28, [sp, #272]
  4089b0:	ldr	w0, [sp, #276]
  4089b4:	str	w0, [sp, #128]
  4089b8:	cbz	x22, 408e2c <ferror@plt+0x64bc>
  4089bc:	ldr	w0, [x22, #4]
  4089c0:	cbz	w0, 408e2c <ferror@plt+0x64bc>
  4089c4:	sub	w0, w0, #0x1
  4089c8:	ldr	w1, [sp, #104]
  4089cc:	add	x0, x22, x0, lsl #3
  4089d0:	ldr	x25, [x0, #8]
  4089d4:	ldr	w0, [x25]
  4089d8:	cmp	w1, w0
  4089dc:	b.ge	408c2c <ferror@plt+0x62bc>  // b.tcont
  4089e0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4089e4:	mov	w1, #0x77a                 	// #1914
  4089e8:	add	x2, x2, #0xa4f
  4089ec:	b	408160 <ferror@plt+0x57f0>
  4089f0:	ldr	w1, [x0, #4]
  4089f4:	cbz	w1, 4088c4 <ferror@plt+0x5f54>
  4089f8:	cmp	w1, #0x1
  4089fc:	b.ls	408a18 <ferror@plt+0x60a8>  // b.plast
  408a00:	adrp	x3, 407000 <ferror@plt+0x4690>
  408a04:	mov	w1, w1
  408a08:	add	x3, x3, #0x2b4
  408a0c:	add	x0, x0, #0x8
  408a10:	mov	x2, #0x28                  	// #40
  408a14:	bl	4112a4 <ferror@plt+0xe934>
  408a18:	ldr	x2, [sp, #240]
  408a1c:	cbz	x2, 408a70 <ferror@plt+0x6100>
  408a20:	ldr	w0, [x2, #4]
  408a24:	sub	w0, w0, #0x1
  408a28:	mov	w4, #0x7fffffff            	// #2147483647
  408a2c:	mov	w25, #0x1                   	// #1
  408a30:	mov	x6, #0x28                  	// #40
  408a34:	cbz	x2, 408a78 <ferror@plt+0x6108>
  408a38:	ldr	w1, [x2, #4]
  408a3c:	cmp	w1, w0
  408a40:	b.ls	408a78 <ferror@plt+0x6108>  // b.plast
  408a44:	mov	w1, w0
  408a48:	sub	w0, w0, #0x1
  408a4c:	madd	x1, x1, x6, x2
  408a50:	ldr	x3, [x1, #32]
  408a54:	ldr	w5, [x1, #12]
  408a58:	add	x3, x3, w5, sxtw
  408a5c:	cmp	x3, w4, sxtw
  408a60:	mov	w4, w5
  408a64:	cinc	w25, w25, cs  // cs = hs, nlast
  408a68:	str	w25, [x1, #40]
  408a6c:	b	408a34 <ferror@plt+0x60c4>
  408a70:	mov	w0, #0x0                   	// #0
  408a74:	b	408a24 <ferror@plt+0x60b4>
  408a78:	mov	w28, #0x0                   	// #0
  408a7c:	mov	w24, #0x0                   	// #0
  408a80:	mov	x0, x19
  408a84:	mov	w1, #0x20                  	// #32
  408a88:	bl	406dfc <ferror@plt+0x448c>
  408a8c:	ldr	x0, [sp, #320]
  408a90:	mov	w1, #0x20                  	// #32
  408a94:	bl	40b2cc <ferror@plt+0x895c>
  408a98:	ldr	w0, [sp, #460]
  408a9c:	mov	w4, #0x0                   	// #0
  408aa0:	add	w0, w0, #0x1
  408aa4:	str	w0, [sp, #272]
  408aa8:	ldr	x22, [sp, #240]
  408aac:	cbz	x22, 408bc0 <ferror@plt+0x6250>
  408ab0:	ldr	w0, [x22, #4]
  408ab4:	cmp	w0, w4
  408ab8:	b.ls	408bc0 <ferror@plt+0x6250>  // b.plast
  408abc:	mov	w5, w4
  408ac0:	mov	x0, #0x28                  	// #40
  408ac4:	madd	x5, x5, x0, x22
  408ac8:	ldr	w0, [x5, #40]
  408acc:	cmp	w0, w24
  408ad0:	b.lt	408bc0 <ferror@plt+0x6250>  // b.tstop
  408ad4:	mov	w0, #0x28                  	// #40
  408ad8:	umull	x0, w4, w0
  408adc:	add	x22, x22, x0
  408ae0:	ldr	w2, [x22, #12]
  408ae4:	b.ne	408b5c <ferror@plt+0x61ec>  // b.any
  408ae8:	ldr	w0, [sp, #272]
  408aec:	cmp	w2, w0
  408af0:	b.ge	408b04 <ferror@plt+0x6194>  // b.tcont
  408af4:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408af8:	mov	w1, #0x609                 	// #1545
  408afc:	add	x2, x2, #0xa3e
  408b00:	b	408160 <ferror@plt+0x57f0>
  408b04:	mov	w3, #0x1                   	// #1
  408b08:	add	x1, sp, #0x110
  408b0c:	add	x0, sp, #0x138
  408b10:	str	w4, [sp, #96]
  408b14:	str	x5, [sp, #104]
  408b18:	bl	406fdc <ferror@plt+0x466c>
  408b1c:	ldr	w1, [x22, #8]
  408b20:	mov	x0, x26
  408b24:	bl	406e8c <ferror@plt+0x451c>
  408b28:	ldr	x1, [x22, #16]
  408b2c:	ldr	x0, [sp, #320]
  408b30:	bl	40b678 <ferror@plt+0x8d08>
  408b34:	mov	x0, x26
  408b38:	bl	406fac <ferror@plt+0x463c>
  408b3c:	ldr	x5, [sp, #104]
  408b40:	ldr	w0, [sp, #272]
  408b44:	ldr	x1, [x5, #32]
  408b48:	add	w0, w0, w1
  408b4c:	ldr	w4, [sp, #96]
  408b50:	str	w0, [sp, #272]
  408b54:	add	w4, w4, #0x1
  408b58:	b	408aa8 <ferror@plt+0x6138>
  408b5c:	cmp	w2, w28
  408b60:	b.eq	408b54 <ferror@plt+0x61e4>  // b.none
  408b64:	ldr	w0, [sp, #272]
  408b68:	cmp	w2, w0
  408b6c:	b.ge	408b80 <ferror@plt+0x6210>  // b.tcont
  408b70:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408b74:	mov	w1, #0x612                 	// #1554
  408b78:	add	x2, x2, #0xa3e
  408b7c:	b	408160 <ferror@plt+0x57f0>
  408b80:	mov	w3, #0x1                   	// #1
  408b84:	add	x1, sp, #0x110
  408b88:	add	x0, sp, #0x138
  408b8c:	str	w4, [sp, #96]
  408b90:	bl	406fdc <ferror@plt+0x466c>
  408b94:	ldr	w1, [x22, #8]
  408b98:	mov	x0, x26
  408b9c:	bl	406e8c <ferror@plt+0x451c>
  408ba0:	ldr	x0, [sp, #320]
  408ba4:	mov	w1, #0x7c                  	// #124
  408ba8:	bl	40b2cc <ferror@plt+0x895c>
  408bac:	mov	x0, x26
  408bb0:	bl	406fac <ferror@plt+0x463c>
  408bb4:	ldr	w28, [sp, #272]
  408bb8:	add	w0, w28, #0x1
  408bbc:	b	408b4c <ferror@plt+0x61dc>
  408bc0:	mov	x0, x19
  408bc4:	add	w24, w24, #0x1
  408bc8:	bl	406fb4 <ferror@plt+0x4644>
  408bcc:	cmp	w25, w24
  408bd0:	b.ge	408a80 <ferror@plt+0x6110>  // b.tcont
  408bd4:	mov	x22, #0x0                   	// #0
  408bd8:	mov	x24, #0x28                  	// #40
  408bdc:	ldr	x0, [sp, #240]
  408be0:	cbz	x0, 4088c4 <ferror@plt+0x5f54>
  408be4:	ldr	w1, [x0, #4]
  408be8:	cmp	w1, w22
  408bec:	b.ls	4088c4 <ferror@plt+0x5f54>  // b.plast
  408bf0:	madd	x0, x22, x24, x0
  408bf4:	add	x1, x0, #0x8
  408bf8:	ldrb	w0, [x0, #24]
  408bfc:	cbz	w0, 408c08 <ferror@plt+0x6298>
  408c00:	ldr	x0, [x1, #8]
  408c04:	bl	402730 <free@plt>
  408c08:	add	x22, x22, #0x1
  408c0c:	b	408bdc <ferror@plt+0x626c>
  408c10:	add	x8, sp, #0x110
  408c14:	bl	40ee94 <ferror@plt+0xc524>
  408c18:	ldr	w0, [sp, #284]
  408c1c:	sub	w0, w0, #0x1
  408c20:	cmp	w28, w0
  408c24:	csel	w2, w28, w0, ge  // ge = tcont
  408c28:	b	4089a0 <ferror@plt+0x6030>
  408c2c:	ldr	w0, [x25, #8]
  408c30:	cmp	w28, w0
  408c34:	b.ge	408c48 <ferror@plt+0x62d8>  // b.tcont
  408c38:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408c3c:	mov	w1, #0x77c                 	// #1916
  408c40:	add	x2, x2, #0xa4f
  408c44:	b	408160 <ferror@plt+0x57f0>
  408c48:	ldr	w0, [x25, #12]
  408c4c:	cmp	w28, w0
  408c50:	b.gt	408e2c <ferror@plt+0x64bc>
  408c54:	ldr	w1, [x25, #4]
  408c58:	sub	w2, w28, #0x1
  408c5c:	add	x0, sp, #0xf0
  408c60:	add	w1, w1, #0x1
  408c64:	bl	406dc0 <ferror@plt+0x4450>
  408c68:	ldr	x0, [sp, #152]
  408c6c:	mov	w1, w27
  408c70:	bl	40fa80 <ferror@plt+0xd110>
  408c74:	mov	x8, x0
  408c78:	mov	x7, x1
  408c7c:	cbz	x0, 408e2c <ferror@plt+0x64bc>
  408c80:	ldr	w5, [sp, #244]
  408c84:	cmp	w5, w1
  408c88:	b.ge	408e2c <ferror@plt+0x64bc>  // b.tcont
  408c8c:	ldr	x6, [x25, #24]
  408c90:	tbz	w6, #31, 408ca4 <ferror@plt+0x6334>
  408c94:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408c98:	mov	w1, #0x792                 	// #1938
  408c9c:	add	x2, x2, #0xa4f
  408ca0:	b	408160 <ferror@plt+0x57f0>
  408ca4:	ldr	w0, [sp, #240]
  408ca8:	add	w4, w5, #0x1
  408cac:	subs	w0, w4, w0
  408cb0:	str	w0, [sp, #104]
  408cb4:	b.pl	408cc8 <ferror@plt+0x6358>  // b.nfrst
  408cb8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408cbc:	mov	w1, #0x794                 	// #1940
  408cc0:	add	x2, x2, #0xa4f
  408cc4:	b	408160 <ferror@plt+0x57f0>
  408cc8:	ldr	w0, [sp, #104]
  408ccc:	ldr	x4, [x24, #16]
  408cd0:	add	w0, w0, w6
  408cd4:	str	w0, [sp, #112]
  408cd8:	adds	w4, w0, w4
  408cdc:	b.pl	408cf0 <ferror@plt+0x6380>  // b.nfrst
  408ce0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408ce4:	mov	w1, #0x796                 	// #1942
  408ce8:	add	x2, x2, #0xa4f
  408cec:	b	408160 <ferror@plt+0x57f0>
  408cf0:	ldr	x0, [x25, #32]
  408cf4:	sxtw	x28, w4
  408cf8:	add	x5, x28, #0x1
  408cfc:	cmp	x0, x5
  408d00:	b.cs	408d30 <ferror@plt+0x63c0>  // b.hs, b.nlast
  408d04:	ldr	x0, [x25, #16]
  408d08:	lsl	x1, x5, #1
  408d0c:	str	x1, [sp, #128]
  408d10:	str	x6, [sp, #160]
  408d14:	stp	x8, x7, [sp, #176]
  408d18:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  408d1c:	ldp	x8, x7, [sp, #176]
  408d20:	str	x0, [x25, #16]
  408d24:	ldr	x6, [sp, #160]
  408d28:	ldr	x1, [sp, #128]
  408d2c:	str	x1, [x25, #32]
  408d30:	ldp	w2, w0, [sp, #240]
  408d34:	add	w5, w0, #0x1
  408d38:	sub	w5, w5, w2
  408d3c:	subs	w2, w2, #0x1
  408d40:	b.pl	408d5c <ferror@plt+0x63ec>  // b.nfrst
  408d44:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408d48:	add	x2, x2, #0xa58
  408d4c:	mov	w1, #0x44                  	// #68
  408d50:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  408d54:	add	x0, x0, #0xa60
  408d58:	b	408168 <ferror@plt+0x57f8>
  408d5c:	cmp	w2, w7
  408d60:	b.lt	408d74 <ferror@plt+0x6404>  // b.tstop
  408d64:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408d68:	mov	w1, #0x45                  	// #69
  408d6c:	add	x2, x2, #0xa58
  408d70:	b	408d50 <ferror@plt+0x63e0>
  408d74:	tbz	w5, #31, 408d88 <ferror@plt+0x6418>
  408d78:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408d7c:	mov	w1, #0x46                  	// #70
  408d80:	add	x2, x2, #0xa58
  408d84:	b	408d50 <ferror@plt+0x63e0>
  408d88:	cmp	w0, w7
  408d8c:	b.le	408da0 <ferror@plt+0x6430>
  408d90:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408d94:	mov	w1, #0x47                  	// #71
  408d98:	add	x2, x2, #0xa58
  408d9c:	b	408d50 <ferror@plt+0x63e0>
  408da0:	sxtw	x5, w5
  408da4:	add	x2, x8, w2, sxtw
  408da8:	mov	w1, w6
  408dac:	mov	x0, x25
  408db0:	stp	x2, x5, [sp, #272]
  408db4:	add	x2, sp, #0x110
  408db8:	bl	407080 <ferror@plt+0x4710>
  408dbc:	ldp	x1, x0, [x24, #8]
  408dc0:	stp	x1, x0, [sp, #272]
  408dc4:	ldr	w1, [sp, #112]
  408dc8:	mov	x0, x25
  408dcc:	add	x2, sp, #0x110
  408dd0:	bl	407080 <ferror@plt+0x4710>
  408dd4:	str	x28, [x25, #24]
  408dd8:	ldr	x0, [x25, #32]
  408ddc:	cmp	x28, x0
  408de0:	b.cc	408df4 <ferror@plt+0x6484>  // b.lo, b.ul, b.last
  408de4:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  408de8:	mov	w1, #0x732                 	// #1842
  408dec:	add	x2, x2, #0xa72
  408df0:	b	408160 <ferror@plt+0x57f0>
  408df4:	ldr	x0, [x25, #16]
  408df8:	ldr	w1, [sp, #104]
  408dfc:	strb	wzr, [x0, x28]
  408e00:	ldr	w0, [sp, #124]
  408e04:	str	w0, [x25, #4]
  408e08:	ldr	x0, [x24, #16]
  408e0c:	add	x0, x0, w1, sxtw
  408e10:	ldr	w1, [x25, #12]
  408e14:	add	w0, w1, w0
  408e18:	str	w0, [x25, #12]
  408e1c:	ldr	w0, [sp, #96]
  408e20:	add	w0, w0, #0x1
  408e24:	str	w0, [sp, #96]
  408e28:	b	4088dc <ferror@plt+0x5f6c>
  408e2c:	ldp	x2, x1, [x24, #8]
  408e30:	mov	x0, #0x28                  	// #40
  408e34:	stp	x1, x2, [sp, #176]
  408e38:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  408e3c:	mov	x24, x0
  408e40:	ldr	w0, [sp, #104]
  408e44:	ldr	x2, [sp, #184]
  408e48:	str	w0, [x24]
  408e4c:	ldr	w0, [sp, #124]
  408e50:	str	w0, [x24, #4]
  408e54:	ldr	w0, [sp, #128]
  408e58:	str	w28, [x24, #8]
  408e5c:	str	w0, [x24, #12]
  408e60:	mov	x0, x2
  408e64:	bl	43a064 <_obstack_memory_used@@Base+0x1fc>
  408e68:	ldr	x1, [sp, #176]
  408e6c:	stp	x0, x1, [x24, #16]
  408e70:	add	x1, x1, #0x1
  408e74:	str	x1, [x24, #32]
  408e78:	cbz	x22, 408f20 <ferror@plt+0x65b0>
  408e7c:	ldp	w0, w3, [x22]
  408e80:	ubfx	x0, x0, #0, #31
  408e84:	cmp	w0, w3
  408e88:	b.ne	408f60 <ferror@plt+0x65f0>  // b.any
  408e8c:	ldrsb	w0, [x22, #3]
  408e90:	tbz	w0, #31, 408f30 <ferror@plt+0x65c0>
  408e94:	ldr	w0, [sp, #160]
  408e98:	add	w1, w3, #0x1
  408e9c:	mov	x2, #0x0                   	// #0
  408ea0:	str	w0, [sp, #112]
  408ea4:	mov	x0, x2
  408ea8:	str	x2, [sp, #104]
  408eac:	str	w3, [sp, #124]
  408eb0:	bl	407058 <ferror@plt+0x46e8>
  408eb4:	ldr	x2, [sp, #104]
  408eb8:	mov	w28, w0
  408ebc:	ldr	w3, [sp, #124]
  408ec0:	ubfiz	x1, x28, #3, #32
  408ec4:	add	x1, x1, #0x8
  408ec8:	cbz	x2, 408f38 <ferror@plt+0x65c8>
  408ecc:	ldr	w4, [x2, #4]
  408ed0:	mov	x0, x2
  408ed4:	str	w3, [sp, #104]
  408ed8:	str	w4, [sp, #124]
  408edc:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  408ee0:	mov	x1, x0
  408ee4:	ldr	w0, [sp, #112]
  408ee8:	ldr	w4, [sp, #124]
  408eec:	and	w28, w28, #0x7fffffff
  408ef0:	ldr	w3, [sp, #104]
  408ef4:	stp	w28, w4, [x1]
  408ef8:	cbz	w0, 408f44 <ferror@plt+0x65d4>
  408efc:	mov	w4, w3
  408f00:	mov	x0, #0x0                   	// #0
  408f04:	add	x2, x0, #0x1
  408f08:	cmp	x4, x0
  408f0c:	b.eq	408f40 <ferror@plt+0x65d0>  // b.none
  408f10:	ldr	x0, [x22, x2, lsl #3]
  408f14:	str	x0, [x1, x2, lsl #3]
  408f18:	mov	x0, x2
  408f1c:	b	408f04 <ferror@plt+0x6594>
  408f20:	mov	x2, #0x0                   	// #0
  408f24:	mov	w3, #0x0                   	// #0
  408f28:	mov	w1, #0x1                   	// #1
  408f2c:	b	408ea4 <ferror@plt+0x6534>
  408f30:	mov	x2, x22
  408f34:	b	408f24 <ferror@plt+0x65b4>
  408f38:	mov	w4, #0x0                   	// #0
  408f3c:	b	408ed0 <ferror@plt+0x6560>
  408f40:	str	w3, [x1, #4]
  408f44:	ldr	w0, [x1, #4]
  408f48:	mov	x22, x1
  408f4c:	add	w2, w0, #0x1
  408f50:	str	w2, [x1, #4]
  408f54:	add	x0, x1, w0, uxtw #3
  408f58:	str	x24, [x0, #8]
  408f5c:	b	408e1c <ferror@plt+0x64ac>
  408f60:	mov	x1, x22
  408f64:	b	408f44 <ferror@plt+0x65d4>
  408f68:	ldr	w0, [sp, #460]
  408f6c:	str	w0, [sp, #272]
  408f70:	cbz	x22, 409074 <ferror@plt+0x6704>
  408f74:	ldr	w0, [x22, #4]
  408f78:	cbz	w0, 408f88 <ferror@plt+0x6618>
  408f7c:	mov	x0, x19
  408f80:	mov	w1, #0x20                  	// #32
  408f84:	bl	406dfc <ferror@plt+0x448c>
  408f88:	add	x25, x19, #0x38
  408f8c:	mov	w27, #0x0                   	// #0
  408f90:	ldr	w0, [x22, #4]
  408f94:	cmp	w27, w0
  408f98:	b.cs	409074 <ferror@plt+0x6704>  // b.hs, b.nlast
  408f9c:	add	x0, x22, w27, uxtw #3
  408fa0:	ldr	x24, [x0, #8]
  408fa4:	ldp	w28, w4, [x24]
  408fa8:	add	w0, w4, #0x1
  408fac:	cmp	w28, w0
  408fb0:	b.eq	40900c <ferror@plt+0x669c>  // b.none
  408fb4:	ldr	x2, [sp, #432]
  408fb8:	mov	w1, #0x0                   	// #0
  408fbc:	add	x0, x2, #0x8
  408fc0:	cbz	x2, 409124 <ferror@plt+0x67b4>
  408fc4:	ldr	w3, [x2, #4]
  408fc8:	cmp	w3, w1
  408fcc:	b.ls	409124 <ferror@plt+0x67b4>  // b.plast
  408fd0:	ldr	w3, [x0]
  408fd4:	cmp	w21, w3
  408fd8:	b.ne	409000 <ferror@plt+0x6690>  // b.any
  408fdc:	ldr	w3, [x0, #4]
  408fe0:	cmp	w28, w3
  408fe4:	b.ne	409000 <ferror@plt+0x6690>  // b.any
  408fe8:	ldr	w3, [x0, #8]
  408fec:	cmp	w21, w3
  408ff0:	b.ne	409000 <ferror@plt+0x6690>  // b.any
  408ff4:	ldr	w3, [x0, #12]
  408ff8:	cmp	w4, w3
  408ffc:	b.eq	40911c <ferror@plt+0x67ac>  // b.none
  409000:	add	w1, w1, #0x1
  409004:	add	x0, x0, #0x28
  409008:	b	408fc0 <ferror@plt+0x6650>
  40900c:	ldr	w2, [x24, #8]
  409010:	mov	w3, #0x1                   	// #1
  409014:	add	x1, sp, #0x110
  409018:	mov	x0, x19
  40901c:	bl	406fdc <ferror@plt+0x466c>
  409020:	mov	x0, x25
  409024:	mov	w1, #0xfffffffe            	// #-2
  409028:	bl	406e8c <ferror@plt+0x451c>
  40902c:	ldr	x1, [x24, #16]
  409030:	ldr	x0, [sp, #320]
  409034:	bl	40b678 <ferror@plt+0x8d08>
  409038:	mov	x0, x25
  40903c:	bl	406fac <ferror@plt+0x463c>
  409040:	ldr	x1, [x24, #24]
  409044:	ldr	w0, [sp, #272]
  409048:	add	w0, w0, w1
  40904c:	str	w0, [sp, #272]
  409050:	add	w27, w27, #0x1
  409054:	b	408f90 <ferror@plt+0x6620>
  409058:	mov	x0, x25
  40905c:	bl	406fac <ferror@plt+0x463c>
  409060:	ldr	x0, [x24, #24]
  409064:	cbz	x0, 409050 <ferror@plt+0x66e0>
  409068:	mov	w2, w28
  40906c:	mov	w3, #0x1                   	// #1
  409070:	b	409014 <ferror@plt+0x66a4>
  409074:	mov	w21, #0x0                   	// #0
  409078:	add	x1, sp, #0x110
  40907c:	mov	x0, x19
  409080:	mov	w3, #0x0                   	// #0
  409084:	mov	w2, #0x0                   	// #0
  409088:	bl	406fdc <ferror@plt+0x466c>
  40908c:	cbz	x22, 4090a8 <ferror@plt+0x6738>
  409090:	ldr	w0, [x22, #4]
  409094:	cmp	w21, w0
  409098:	b.cc	4090b0 <ferror@plt+0x6740>  // b.lo, b.ul, b.last
  40909c:	ldrsb	w0, [x22, #3]
  4090a0:	tbz	w0, #31, 4090d8 <ferror@plt+0x6768>
  4090a4:	str	wzr, [x22, #4]
  4090a8:	add	x23, x23, #0x1
  4090ac:	b	4081a0 <ferror@plt+0x5830>
  4090b0:	add	x0, x22, w21, uxtw #3
  4090b4:	ldr	x24, [x0, #8]
  4090b8:	cbz	x24, 4090d0 <ferror@plt+0x6760>
  4090bc:	ldr	x0, [x24, #16]
  4090c0:	bl	402730 <free@plt>
  4090c4:	mov	x0, x24
  4090c8:	mov	x1, #0x28                  	// #40
  4090cc:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  4090d0:	add	w21, w21, #0x1
  4090d4:	b	40908c <ferror@plt+0x671c>
  4090d8:	mov	x0, x22
  4090dc:	bl	402730 <free@plt>
  4090e0:	b	4090a8 <ferror@plt+0x6738>
  4090e4:	ldr	x21, [sp, #168]
  4090e8:	b	40811c <ferror@plt+0x57ac>
  4090ec:	ldr	x0, [x20]
  4090f0:	ldr	x1, [sp, #136]
  4090f4:	bl	40af84 <ferror@plt+0x8614>
  4090f8:	mov	x0, x19
  4090fc:	bl	407374 <ferror@plt+0x4a04>
  409100:	ldp	x19, x20, [sp, #16]
  409104:	ldp	x21, x22, [sp, #32]
  409108:	ldp	x23, x24, [sp, #48]
  40910c:	ldp	x25, x26, [sp, #64]
  409110:	ldp	x27, x28, [sp, #80]
  409114:	ldp	x29, x30, [sp], #464
  409118:	ret
  40911c:	ldr	x0, [x24, #24]
  409120:	cbnz	x0, 409068 <ferror@plt+0x66f8>
  409124:	mov	w2, w28
  409128:	mov	w3, #0x1                   	// #1
  40912c:	add	x1, sp, #0x110
  409130:	mov	x0, x19
  409134:	str	w4, [sp, #96]
  409138:	bl	406fdc <ferror@plt+0x466c>
  40913c:	mov	x0, x25
  409140:	mov	w1, #0xfffffffd            	// #-3
  409144:	bl	406e8c <ferror@plt+0x451c>
  409148:	ldr	w4, [sp, #96]
  40914c:	ldr	w0, [sp, #272]
  409150:	str	w4, [sp, #96]
  409154:	cmp	w4, w0
  409158:	b.lt	409058 <ferror@plt+0x66e8>  // b.tstop
  40915c:	ldr	x0, [sp, #320]
  409160:	mov	w1, #0x2d                  	// #45
  409164:	bl	40b2cc <ferror@plt+0x895c>
  409168:	ldr	w0, [sp, #272]
  40916c:	add	w0, w0, #0x1
  409170:	str	w0, [sp, #272]
  409174:	b	409148 <ferror@plt+0x67d8>
  409178:	mov	w4, w1
  40917c:	tst	w2, #0xff
  409180:	b.eq	40919c <ferror@plt+0x682c>  // b.none
  409184:	cbz	x0, 409194 <ferror@plt+0x6824>
  409188:	ldr	w0, [x0, #4]
  40918c:	add	w0, w0, w4
  409190:	ret
  409194:	mov	w0, #0x0                   	// #0
  409198:	b	40918c <ferror@plt+0x681c>
  40919c:	b	407058 <ferror@plt+0x46e8>
  4091a0:	stp	x29, x30, [sp, #-64]!
  4091a4:	and	w2, w2, #0xff
  4091a8:	mov	x29, sp
  4091ac:	stp	x23, x24, [sp, #48]
  4091b0:	ldr	x23, [x0]
  4091b4:	stp	x19, x20, [sp, #16]
  4091b8:	mov	x20, x0
  4091bc:	stp	x21, x22, [sp, #32]
  4091c0:	cbz	x23, 4091e0 <ferror@plt+0x6870>
  4091c4:	ldp	w0, w21, [x23]
  4091c8:	ubfx	x0, x0, #0, #31
  4091cc:	sub	w0, w0, w21
  4091d0:	cmp	w1, w0
  4091d4:	b.hi	4091f0 <ferror@plt+0x6880>  // b.pmore
  4091d8:	mov	w19, #0x0                   	// #0
  4091dc:	b	409274 <ferror@plt+0x6904>
  4091e0:	mov	w19, #0x0                   	// #0
  4091e4:	cbz	w1, 409274 <ferror@plt+0x6904>
  4091e8:	mov	w21, #0x0                   	// #0
  4091ec:	b	409204 <ferror@plt+0x6894>
  4091f0:	ldrsb	w0, [x23, #3]
  4091f4:	tbz	w0, #31, 409260 <ferror@plt+0x68f0>
  4091f8:	add	w1, w1, w21
  4091fc:	mov	w19, #0x1                   	// #1
  409200:	str	xzr, [x20]
  409204:	ldr	x0, [x20]
  409208:	bl	409178 <ferror@plt+0x6808>
  40920c:	mov	w22, w0
  409210:	ldr	x0, [x20]
  409214:	ubfiz	x1, x22, #3, #32
  409218:	add	x1, x1, #0x8
  40921c:	cbz	x0, 409268 <ferror@plt+0x68f8>
  409220:	ldr	w24, [x0, #4]
  409224:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  409228:	str	x0, [x20]
  40922c:	and	w22, w22, #0x7fffffff
  409230:	stp	w22, w24, [x0]
  409234:	mov	x1, x0
  409238:	cbz	w19, 40928c <ferror@plt+0x691c>
  40923c:	mov	w3, w21
  409240:	mov	x0, #0x0                   	// #0
  409244:	add	x2, x0, #0x1
  409248:	cmp	x0, x3
  40924c:	b.eq	409270 <ferror@plt+0x6900>  // b.none
  409250:	ldr	x0, [x23, x2, lsl #3]
  409254:	str	x0, [x1, x2, lsl #3]
  409258:	mov	x0, x2
  40925c:	b	409244 <ferror@plt+0x68d4>
  409260:	mov	w19, #0x0                   	// #0
  409264:	b	4091e8 <ferror@plt+0x6878>
  409268:	mov	w24, #0x0                   	// #0
  40926c:	b	409224 <ferror@plt+0x68b4>
  409270:	str	w21, [x1, #4]
  409274:	mov	w0, w19
  409278:	ldp	x19, x20, [sp, #16]
  40927c:	ldp	x21, x22, [sp, #32]
  409280:	ldp	x23, x24, [sp, #48]
  409284:	ldp	x29, x30, [sp], #64
  409288:	ret
  40928c:	mov	w19, #0x1                   	// #1
  409290:	b	409274 <ferror@plt+0x6904>
  409294:	sub	w0, w0, w1
  409298:	ret
  40929c:	stp	x29, x30, [sp, #-48]!
  4092a0:	and	w1, w1, #0xff
  4092a4:	mov	x29, sp
  4092a8:	stp	x19, x20, [sp, #16]
  4092ac:	mov	x20, #0x0                   	// #0
  4092b0:	mov	x19, x0
  4092b4:	stp	x21, x22, [sp, #32]
  4092b8:	mov	x21, x2
  4092bc:	mov	w22, w3
  4092c0:	bl	40b2cc <ferror@plt+0x895c>
  4092c4:	cmp	w22, w20
  4092c8:	b.le	4092e0 <ferror@plt+0x6970>
  4092cc:	ldrb	w1, [x21, x20]
  4092d0:	mov	x0, x19
  4092d4:	add	x20, x20, #0x1
  4092d8:	bl	40b2cc <ferror@plt+0x895c>
  4092dc:	b	4092c4 <ferror@plt+0x6954>
  4092e0:	mov	x0, x19
  4092e4:	mov	w1, #0xa                   	// #10
  4092e8:	ldp	x19, x20, [sp, #16]
  4092ec:	ldp	x21, x22, [sp, #32]
  4092f0:	ldp	x29, x30, [sp], #48
  4092f4:	b	40b2cc <ferror@plt+0x895c>
  4092f8:	mov	x2, x0
  4092fc:	mov	x0, x1
  409300:	cbz	x2, 40930c <ferror@plt+0x699c>
  409304:	mov	x16, x2
  409308:	br	x16
  40930c:	ret
  409310:	mov	x1, x0
  409314:	mov	w2, #0x1                   	// #1
  409318:	strb	w2, [x1], #8
  40931c:	str	xzr, [x0, #8]
  409320:	adrp	x0, 402000 <memcpy@plt-0x2e0>
  409324:	add	x0, x0, #0x6d0
  409328:	stp	x0, xzr, [x1, #8]
  40932c:	adrp	x0, 409000 <ferror@plt+0x6690>
  409330:	add	x0, x0, #0x8a0
  409334:	str	x0, [x1, #24]
  409338:	ret
  40933c:	mov	x2, x0
  409340:	str	x1, [x2], #8
  409344:	adrp	x1, 409000 <ferror@plt+0x6690>
  409348:	add	x1, x1, #0x294
  40934c:	str	xzr, [x0, #8]
  409350:	stp	x1, xzr, [x2, #8]
  409354:	adrp	x1, 409000 <ferror@plt+0x6690>
  409358:	add	x1, x1, #0x494
  40935c:	str	x1, [x2, #24]
  409360:	mov	w1, #0xffffffff            	// #-1
  409364:	str	w1, [x0, #40]
  409368:	ret
  40936c:	stp	x29, x30, [sp, #-32]!
  409370:	mov	x29, sp
  409374:	stp	x19, x20, [sp, #16]
  409378:	cbnz	x1, 409394 <ferror@plt+0x6a24>
  40937c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  409380:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  409384:	add	x2, x2, #0xa8a
  409388:	add	x0, x0, #0xa98
  40938c:	mov	w1, #0x296                 	// #662
  409390:	bl	402980 <ferror@plt+0x10>
  409394:	mov	x19, x0
  409398:	ldr	w0, [x0, #40]
  40939c:	mov	x20, x1
  4093a0:	cmn	w0, #0x1
  4093a4:	b.ne	4093d0 <ferror@plt+0x6a60>  // b.any
  4093a8:	str	wzr, [x19, #40]
  4093ac:	ldr	x0, [x19]
  4093b0:	ldr	w1, [x19, #40]
  4093b4:	add	w1, w1, #0x1
  4093b8:	bl	40fa80 <ferror@plt+0xd110>
  4093bc:	cbz	x0, 4093d0 <ferror@plt+0x6a60>
  4093c0:	ldr	w0, [x19, #40]
  4093c4:	add	w0, w0, #0x1
  4093c8:	str	w0, [x19, #40]
  4093cc:	b	4093ac <ferror@plt+0x6a3c>
  4093d0:	ldr	x0, [x19]
  4093d4:	bl	40f010 <ferror@plt+0xc6a0>
  4093d8:	strb	w0, [x20]
  4093dc:	ldr	w0, [x19, #40]
  4093e0:	ldp	x19, x20, [sp, #16]
  4093e4:	ldp	x29, x30, [sp], #32
  4093e8:	ret
  4093ec:	stp	x29, x30, [sp, #-48]!
  4093f0:	mov	x29, sp
  4093f4:	stp	x19, x20, [sp, #16]
  4093f8:	mov	x19, x0
  4093fc:	mov	w20, #0x0                   	// #0
  409400:	ldr	x0, [x0, #8]
  409404:	str	x21, [sp, #32]
  409408:	bl	402730 <free@plt>
  40940c:	ldr	x0, [x19, #32]
  409410:	cbz	x0, 409440 <ferror@plt+0x6ad0>
  409414:	ldr	w1, [x0, #4]
  409418:	cmp	w20, w1
  40941c:	b.cs	409434 <ferror@plt+0x6ac4>  // b.hs, b.nlast
  409420:	add	x1, x0, w20, uxtw #3
  409424:	ldr	x21, [x1, #8]
  409428:	cbnz	x21, 409464 <ferror@plt+0x6af4>
  40942c:	add	w20, w20, #0x1
  409430:	b	40940c <ferror@plt+0x6a9c>
  409434:	ldrsb	w1, [x0, #3]
  409438:	tbz	w1, #31, 40947c <ferror@plt+0x6b0c>
  40943c:	str	wzr, [x0, #4]
  409440:	ldr	x0, [x19, #24]
  409444:	cbz	x0, 409454 <ferror@plt+0x6ae4>
  409448:	ldrsb	w1, [x0, #3]
  40944c:	tbz	w1, #31, 409484 <ferror@plt+0x6b14>
  409450:	str	wzr, [x0, #4]
  409454:	ldp	x19, x20, [sp, #16]
  409458:	ldr	x21, [sp, #32]
  40945c:	ldp	x29, x30, [sp], #48
  409460:	ret
  409464:	ldr	x0, [x21]
  409468:	bl	402730 <free@plt>
  40946c:	mov	x0, x21
  409470:	mov	x1, #0x10                  	// #16
  409474:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  409478:	b	40942c <ferror@plt+0x6abc>
  40947c:	bl	402730 <free@plt>
  409480:	b	409440 <ferror@plt+0x6ad0>
  409484:	ldp	x19, x20, [sp, #16]
  409488:	ldr	x21, [sp, #32]
  40948c:	ldp	x29, x30, [sp], #48
  409490:	b	402730 <free@plt>
  409494:	cbz	x0, 4094c0 <ferror@plt+0x6b50>
  409498:	stp	x29, x30, [sp, #-32]!
  40949c:	mov	x29, sp
  4094a0:	str	x19, [sp, #16]
  4094a4:	mov	x19, x0
  4094a8:	bl	4093ec <ferror@plt+0x6a7c>
  4094ac:	mov	x0, x19
  4094b0:	mov	x1, #0x28                  	// #40
  4094b4:	ldr	x19, [sp, #16]
  4094b8:	ldp	x29, x30, [sp], #32
  4094bc:	b	43a470 <_obstack_memory_used@@Base+0x608>
  4094c0:	ret
  4094c4:	ldr	x3, [x0, #24]
  4094c8:	mov	w0, w1
  4094cc:	mov	w1, #0x0                   	// #0
  4094d0:	add	x2, x3, #0xc
  4094d4:	cbz	x3, 409504 <ferror@plt+0x6b94>
  4094d8:	ldr	w4, [x3, #4]
  4094dc:	cmp	w4, w1
  4094e0:	b.ls	409504 <ferror@plt+0x6b94>  // b.plast
  4094e4:	ldur	w4, [x2, #-4]
  4094e8:	cmp	w0, w4
  4094ec:	b.lt	4094f8 <ferror@plt+0x6b88>  // b.tstop
  4094f0:	ldr	w4, [x2]
  4094f4:	add	w0, w0, w4
  4094f8:	add	w1, w1, #0x1
  4094fc:	add	x2, x2, #0x8
  409500:	b	4094d4 <ferror@plt+0x6b64>
  409504:	ret
  409508:	ldr	x0, [x0, #32]
  40950c:	cbz	x0, 40951c <ferror@plt+0x6bac>
  409510:	ldr	w0, [x0, #4]
  409514:	add	w0, w0, #0x1
  409518:	ret
  40951c:	mov	w0, #0x0                   	// #0
  409520:	b	409514 <ferror@plt+0x6ba4>
  409524:	stp	x29, x30, [sp, #-48]!
  409528:	mov	x29, sp
  40952c:	stp	x19, x20, [sp, #16]
  409530:	mov	x20, x0
  409534:	mov	x19, x1
  409538:	str	x21, [sp, #32]
  40953c:	mov	w21, #0x0                   	// #0
  409540:	ldr	x1, [x20, #32]
  409544:	cbz	x1, 409578 <ferror@plt+0x6c08>
  409548:	ldr	w0, [x1, #4]
  40954c:	cmp	w21, w0
  409550:	b.cs	409578 <ferror@plt+0x6c08>  // b.hs, b.nlast
  409554:	add	x1, x1, w21, uxtw #3
  409558:	add	w21, w21, #0x1
  40955c:	ldr	x0, [x1, #8]
  409560:	ldr	x1, [x0]
  409564:	mov	x0, x19
  409568:	bl	40b678 <ferror@plt+0x8d08>
  40956c:	mov	x0, x19
  409570:	bl	40b270 <ferror@plt+0x8900>
  409574:	b	409540 <ferror@plt+0x6bd0>
  409578:	mov	x0, x19
  40957c:	ldr	x1, [x20, #8]
  409580:	ldp	x19, x20, [sp, #16]
  409584:	ldr	x21, [sp, #32]
  409588:	ldp	x29, x30, [sp], #48
  40958c:	b	40b678 <ferror@plt+0x8d08>
  409590:	stp	x29, x30, [sp, #-48]!
  409594:	mov	x29, sp
  409598:	stp	x19, x20, [sp, #16]
  40959c:	mov	x19, x0
  4095a0:	mov	x20, x1
  4095a4:	str	x21, [sp, #32]
  4095a8:	mov	w21, #0x0                   	// #0
  4095ac:	ldr	x0, [x19, #32]
  4095b0:	cbz	x0, 4095e4 <ferror@plt+0x6c74>
  4095b4:	ldr	w1, [x0, #4]
  4095b8:	cmp	w21, w1
  4095bc:	b.cs	4095e4 <ferror@plt+0x6c74>  // b.hs, b.nlast
  4095c0:	add	x0, x0, w21, uxtw #3
  4095c4:	mov	w1, #0x2b                  	// #43
  4095c8:	add	w21, w21, #0x1
  4095cc:	ldr	x0, [x0, #8]
  4095d0:	ldr	w3, [x0, #8]
  4095d4:	ldr	x2, [x0]
  4095d8:	mov	x0, x20
  4095dc:	bl	40929c <ferror@plt+0x692c>
  4095e0:	b	4095ac <ferror@plt+0x6c3c>
  4095e4:	mov	x0, x19
  4095e8:	bl	40a490 <ferror@plt+0x7b20>
  4095ec:	ldr	w3, [x19, #16]
  4095f0:	tst	w0, #0xff
  4095f4:	ldr	x2, [x19, #8]
  4095f8:	b.eq	409614 <ferror@plt+0x6ca4>  // b.none
  4095fc:	mov	w1, #0x2b                  	// #43
  409600:	mov	x0, x20
  409604:	ldp	x19, x20, [sp, #16]
  409608:	ldr	x21, [sp, #32]
  40960c:	ldp	x29, x30, [sp], #48
  409610:	b	40929c <ferror@plt+0x692c>
  409614:	mov	w1, #0x20                  	// #32
  409618:	b	409600 <ferror@plt+0x6c90>
  40961c:	stp	x29, x30, [sp, #-32]!
  409620:	mov	x29, sp
  409624:	stp	x19, x20, [sp, #16]
  409628:	mov	x20, x0
  40962c:	ldr	w0, [x0, #20]
  409630:	cmp	w0, w1
  409634:	b.gt	409654 <ferror@plt+0x6ce4>
  409638:	add	w1, w1, #0x1
  40963c:	ldr	x0, [x20, #8]
  409640:	lsl	w19, w1, #1
  409644:	sxtw	x1, w19
  409648:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  40964c:	str	x0, [x20, #8]
  409650:	str	w19, [x20, #20]
  409654:	ldp	x19, x20, [sp, #16]
  409658:	ldp	x29, x30, [sp], #32
  40965c:	ret
  409660:	ldp	w1, w2, [x0, #16]
  409664:	cmp	w1, w2
  409668:	b.lt	40968c <ferror@plt+0x6d1c>  // b.tstop
  40966c:	stp	x29, x30, [sp, #-16]!
  409670:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  409674:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  409678:	mov	x29, sp
  40967c:	add	x2, x2, #0xa72
  409680:	add	x0, x0, #0xa98
  409684:	mov	w1, #0x36b                 	// #875
  409688:	bl	402980 <ferror@plt+0x10>
  40968c:	ldr	x0, [x0, #8]
  409690:	strb	wzr, [x0, w1, sxtw]
  409694:	ret
  409698:	stp	x29, x30, [sp, #-32]!
  40969c:	mov	x29, sp
  4096a0:	stp	x19, x20, [sp, #16]
  4096a4:	mov	x19, x0
  4096a8:	mov	x0, x1
  4096ac:	mov	w1, w2
  4096b0:	str	w2, [x19]
  4096b4:	stp	xzr, xzr, [x19, #8]
  4096b8:	stp	xzr, xzr, [x19, #24]
  4096bc:	bl	40fa80 <ferror@plt+0xd110>
  4096c0:	cbz	x0, 4096f4 <ferror@plt+0x6d84>
  4096c4:	str	w1, [x19, #16]
  4096c8:	mov	x20, x0
  4096cc:	mov	x0, x19
  4096d0:	bl	40961c <ferror@plt+0x6cac>
  4096d4:	ldrsw	x2, [x19, #16]
  4096d8:	mov	x1, x20
  4096dc:	ldr	x0, [x19, #8]
  4096e0:	bl	4022e0 <memcpy@plt>
  4096e4:	mov	x0, x19
  4096e8:	ldp	x19, x20, [sp, #16]
  4096ec:	ldp	x29, x30, [sp], #32
  4096f0:	b	409660 <ferror@plt+0x6cf0>
  4096f4:	ldp	x19, x20, [sp, #16]
  4096f8:	ldp	x29, x30, [sp], #32
  4096fc:	ret
  409700:	stp	x29, x30, [sp, #-112]!
  409704:	mov	w5, w2
  409708:	cmp	w4, #0x1
  40970c:	mov	x29, sp
  409710:	stp	x19, x20, [sp, #16]
  409714:	mov	x19, x0
  409718:	mov	w20, w4
  40971c:	stp	x21, x22, [sp, #32]
  409720:	stp	x23, x24, [sp, #48]
  409724:	stp	x25, x26, [sp, #64]
  409728:	mov	x25, x3
  40972c:	str	x27, [sp, #80]
  409730:	b.le	409798 <ferror@plt+0x6e28>
  409734:	add	x0, x3, w4, sxtw
  409738:	ldurb	w0, [x0, #-1]
  40973c:	cmp	w0, #0xa
  409740:	b.ne	409798 <ferror@plt+0x6e28>  // b.any
  409744:	mov	x0, #0x10                  	// #16
  409748:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  40974c:	mov	x21, x0
  409750:	sub	w20, w20, #0x1
  409754:	mov	x0, x25
  409758:	sxtw	x1, w20
  40975c:	bl	43a0dc <_obstack_memory_used@@Base+0x274>
  409760:	str	x0, [x21]
  409764:	add	x1, sp, #0x68
  409768:	str	w20, [x21, #8]
  40976c:	add	x0, x19, #0x20
  409770:	str	x21, [sp, #104]
  409774:	bl	40a4b0 <ferror@plt+0x7b40>
  409778:	mov	w0, #0x1                   	// #1
  40977c:	ldp	x19, x20, [sp, #16]
  409780:	ldp	x21, x22, [sp, #32]
  409784:	ldp	x23, x24, [sp, #48]
  409788:	ldp	x25, x26, [sp, #64]
  40978c:	ldr	x27, [sp, #80]
  409790:	ldp	x29, x30, [sp], #112
  409794:	ret
  409798:	mov	x0, x19
  40979c:	bl	4094c4 <ferror@plt+0x6b54>
  4097a0:	mov	w24, w0
  4097a4:	mov	w1, w5
  4097a8:	mov	x0, x19
  4097ac:	bl	4094c4 <ferror@plt+0x6b54>
  4097b0:	subs	w23, w24, #0x1
  4097b4:	sub	w22, w0, #0x1
  4097b8:	b.pl	4097d4 <ferror@plt+0x6e64>  // b.nfrst
  4097bc:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4097c0:	add	x2, x2, #0xab1
  4097c4:	mov	w1, #0x2fa                 	// #762
  4097c8:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4097cc:	add	x0, x0, #0xa98
  4097d0:	bl	402980 <ferror@plt+0x10>
  4097d4:	tbz	w22, #31, 4097e8 <ferror@plt+0x6e78>
  4097d8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4097dc:	mov	w1, #0x2fb                 	// #763
  4097e0:	add	x2, x2, #0xab1
  4097e4:	b	4097c8 <ferror@plt+0x6e58>
  4097e8:	cmp	w24, w0
  4097ec:	b.gt	409898 <ferror@plt+0x6f28>
  4097f0:	ldr	w1, [x19, #16]
  4097f4:	cmp	w1, w23
  4097f8:	b.lt	409898 <ferror@plt+0x6f28>  // b.tstop
  4097fc:	cmp	w1, w22
  409800:	b.lt	409898 <ferror@plt+0x6f28>  // b.tstop
  409804:	sub	w21, w0, w24
  409808:	add	w1, w1, w20
  40980c:	sub	w26, w1, w21
  409810:	mov	x0, x19
  409814:	mov	w1, w26
  409818:	bl	40961c <ferror@plt+0x6cac>
  40981c:	ldr	x0, [x19, #8]
  409820:	sxtw	x3, w22
  409824:	ldrsw	x2, [x19, #16]
  409828:	add	x1, x0, w22, sxtw
  40982c:	add	x4, x0, x2
  409830:	cmp	x1, x4
  409834:	b.ls	409848 <ferror@plt+0x6ed8>  // b.plast
  409838:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40983c:	mov	w1, #0x30b                 	// #779
  409840:	add	x2, x2, #0xab1
  409844:	b	4097c8 <ferror@plt+0x6e58>
  409848:	sxtw	x22, w20
  40984c:	sxtw	x27, w23
  409850:	add	x23, x22, w23, sxtw
  409854:	sub	x2, x2, x3
  409858:	add	x0, x0, x23
  40985c:	bl	4022f0 <memmove@plt>
  409860:	ldr	x0, [x19, #8]
  409864:	mov	x1, x25
  409868:	mov	x2, x22
  40986c:	sub	w20, w20, w21
  409870:	add	x0, x0, x27
  409874:	bl	4022e0 <memcpy@plt>
  409878:	str	w26, [x19, #16]
  40987c:	mov	x0, x19
  409880:	bl	409660 <ferror@plt+0x6cf0>
  409884:	stp	w24, w20, [sp, #104]
  409888:	add	x1, sp, #0x68
  40988c:	add	x0, x19, #0x18
  409890:	bl	40a5d4 <ferror@plt+0x7c64>
  409894:	b	409778 <ferror@plt+0x6e08>
  409898:	mov	w0, #0x0                   	// #0
  40989c:	b	40977c <ferror@plt+0x6e0c>
  4098a0:	cbz	x0, 4098d4 <ferror@plt+0x6f64>
  4098a4:	stp	x29, x30, [sp, #-32]!
  4098a8:	mov	x29, sp
  4098ac:	str	x19, [sp, #16]
  4098b0:	mov	x19, x0
  4098b4:	add	x0, x0, #0x8
  4098b8:	ldr	x1, [x19, #8]
  4098bc:	bl	40a6f4 <ferror@plt+0x7d84>
  4098c0:	mov	x0, x19
  4098c4:	mov	x1, #0x30                  	// #48
  4098c8:	ldr	x19, [sp, #16]
  4098cc:	ldp	x29, x30, [sp], #32
  4098d0:	b	43a470 <_obstack_memory_used@@Base+0x608>
  4098d4:	ret
  4098d8:	stp	x29, x30, [sp, #-48]!
  4098dc:	mov	x29, sp
  4098e0:	stp	x19, x20, [sp, #16]
  4098e4:	str	x21, [sp, #32]
  4098e8:	cbnz	x1, 409904 <ferror@plt+0x6f94>
  4098ec:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4098f0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  4098f4:	add	x2, x2, #0xabd
  4098f8:	add	x0, x0, #0xa98
  4098fc:	mov	w1, #0x140                 	// #320
  409900:	bl	402980 <ferror@plt+0x10>
  409904:	mov	x19, x0
  409908:	add	x21, x0, #0x8
  40990c:	mov	x20, x1
  409910:	mov	x0, x21
  409914:	bl	40a7d4 <ferror@plt+0x7e64>
  409918:	ldr	x2, [x19, #8]
  40991c:	cbnz	x2, 409934 <ferror@plt+0x6fc4>
  409920:	mov	x0, #0x0                   	// #0
  409924:	ldp	x19, x20, [sp, #16]
  409928:	ldr	x21, [sp, #32]
  40992c:	ldp	x29, x30, [sp], #48
  409930:	ret
  409934:	ldr	x0, [x2]
  409938:	mov	x1, x20
  40993c:	ldr	x3, [x21, #8]
  409940:	blr	x3
  409944:	cbnz	w0, 409920 <ferror@plt+0x6fb0>
  409948:	ldr	x0, [x19, #8]
  40994c:	cbz	x0, 409920 <ferror@plt+0x6fb0>
  409950:	ldr	x0, [x0, #8]
  409954:	b	409924 <ferror@plt+0x6fb4>
  409958:	stp	x29, x30, [sp, #-48]!
  40995c:	mov	x29, sp
  409960:	stp	x19, x20, [sp, #16]
  409964:	stp	x21, x22, [sp, #32]
  409968:	cbnz	x1, 409984 <ferror@plt+0x7014>
  40996c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  409970:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  409974:	add	x2, x2, #0xac6
  409978:	add	x0, x0, #0xa98
  40997c:	mov	w1, #0x149                 	// #329
  409980:	bl	402980 <ferror@plt+0x10>
  409984:	mov	x20, x0
  409988:	mov	x21, x1
  40998c:	bl	4098d8 <ferror@plt+0x6f68>
  409990:	mov	x19, x0
  409994:	cbnz	x0, 409a1c <ferror@plt+0x70ac>
  409998:	mov	x0, #0x30                  	// #48
  40999c:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  4099a0:	mov	x19, x0
  4099a4:	str	x21, [x0], #8
  4099a8:	adrp	x1, 409000 <ferror@plt+0x6690>
  4099ac:	add	x1, x1, #0x294
  4099b0:	add	x22, x20, #0x8
  4099b4:	str	xzr, [x19, #8]
  4099b8:	stp	x1, xzr, [x0, #8]
  4099bc:	adrp	x1, 409000 <ferror@plt+0x6690>
  4099c0:	add	x1, x1, #0x494
  4099c4:	str	x1, [x0, #24]
  4099c8:	mov	w0, #0xffffffff            	// #-1
  4099cc:	str	w0, [x19, #40]
  4099d0:	mov	x1, x21
  4099d4:	mov	x0, x22
  4099d8:	bl	40a7d4 <ferror@plt+0x7e64>
  4099dc:	ldr	x2, [x20, #8]
  4099e0:	cbz	x2, 409a30 <ferror@plt+0x70c0>
  4099e4:	ldr	x0, [x2]
  4099e8:	mov	x1, x21
  4099ec:	ldr	x3, [x20, #16]
  4099f0:	blr	x3
  4099f4:	mov	w22, w0
  4099f8:	ldr	x0, [x20, #8]
  4099fc:	cbz	x0, 409a38 <ferror@plt+0x70c8>
  409a00:	cbnz	w22, 409a38 <ferror@plt+0x70c8>
  409a04:	ldr	x1, [x20, #32]
  409a08:	cbz	x1, 409a14 <ferror@plt+0x70a4>
  409a0c:	ldr	x0, [x0, #8]
  409a10:	blr	x1
  409a14:	ldr	x0, [x20, #8]
  409a18:	str	x19, [x0, #8]
  409a1c:	mov	x0, x19
  409a20:	ldp	x19, x20, [sp, #16]
  409a24:	ldp	x21, x22, [sp, #32]
  409a28:	ldp	x29, x30, [sp], #48
  409a2c:	ret
  409a30:	mov	w22, #0x0                   	// #0
  409a34:	b	4099f8 <ferror@plt+0x7088>
  409a38:	mov	x0, #0x28                  	// #40
  409a3c:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  409a40:	ldr	x1, [x20, #8]
  409a44:	stp	x21, x19, [x0]
  409a48:	cbnz	x1, 409a58 <ferror@plt+0x70e8>
  409a4c:	stp	xzr, xzr, [x0, #16]
  409a50:	str	x0, [x20, #8]
  409a54:	b	409a1c <ferror@plt+0x70ac>
  409a58:	tbz	w22, #31, 409a6c <ferror@plt+0x70fc>
  409a5c:	ldr	x2, [x1, #24]
  409a60:	stp	x1, x2, [x0, #16]
  409a64:	str	xzr, [x1, #24]
  409a68:	b	409a50 <ferror@plt+0x70e0>
  409a6c:	ldr	x2, [x1, #16]
  409a70:	stp	x2, x1, [x0, #16]
  409a74:	str	xzr, [x1, #16]
  409a78:	b	409a50 <ferror@plt+0x70e0>
  409a7c:	add	x0, x0, #0x8
  409a80:	b	40ab18 <ferror@plt+0x81a8>
  409a84:	stp	x29, x30, [sp, #-32]!
  409a88:	add	x0, x0, #0x8
  409a8c:	mov	x29, sp
  409a90:	str	x19, [sp, #16]
  409a94:	mov	w19, w2
  409a98:	bl	40ab18 <ferror@plt+0x81a8>
  409a9c:	cbz	x0, 409ab0 <ferror@plt+0x7140>
  409aa0:	mov	w1, w19
  409aa4:	ldr	x19, [sp, #16]
  409aa8:	ldp	x29, x30, [sp], #32
  409aac:	b	4094c4 <ferror@plt+0x6b54>
  409ab0:	mov	w0, w19
  409ab4:	ldr	x19, [sp, #16]
  409ab8:	ldp	x29, x30, [sp], #32
  409abc:	ret
  409ac0:	stp	x29, x30, [sp, #-32]!
  409ac4:	mov	x29, sp
  409ac8:	stp	x19, x20, [sp, #16]
  409acc:	mov	w20, w2
  409ad0:	mov	w19, w3
  409ad4:	bl	4098d8 <ferror@plt+0x6f68>
  409ad8:	cbz	x0, 409af0 <ferror@plt+0x7180>
  409adc:	mov	w2, w19
  409ae0:	mov	w1, w20
  409ae4:	ldp	x19, x20, [sp, #16]
  409ae8:	ldp	x29, x30, [sp], #32
  409aec:	b	409a84 <ferror@plt+0x7114>
  409af0:	mov	w0, w19
  409af4:	ldp	x19, x20, [sp, #16]
  409af8:	ldp	x29, x30, [sp], #32
  409afc:	ret
  409b00:	stp	x29, x30, [sp, #-112]!
  409b04:	mov	x29, sp
  409b08:	stp	x19, x20, [sp, #16]
  409b0c:	mov	x19, x1
  409b10:	add	x1, sp, #0x6f
  409b14:	stp	x21, x22, [sp, #32]
  409b18:	mov	w20, #0x1                   	// #1
  409b1c:	stp	x23, x24, [sp, #48]
  409b20:	mov	x23, x0
  409b24:	stp	x25, x26, [sp, #64]
  409b28:	add	x26, x0, #0x8
  409b2c:	str	x27, [sp, #80]
  409b30:	bl	40936c <ferror@plt+0x69fc>
  409b34:	mov	w22, w0
  409b38:	mov	x27, #0x80000000            	// #2147483648
  409b3c:	cmp	w20, w22
  409b40:	b.gt	409c0c <ferror@plt+0x729c>
  409b44:	mov	w1, w20
  409b48:	mov	x0, x26
  409b4c:	bl	40ab18 <ferror@plt+0x81a8>
  409b50:	cbz	x0, 409b78 <ferror@plt+0x7208>
  409b54:	mov	x1, x19
  409b58:	bl	409524 <ferror@plt+0x6bb4>
  409b5c:	cmp	w20, w22
  409b60:	b.ge	409b70 <ferror@plt+0x7200>  // b.tcont
  409b64:	mov	x0, x19
  409b68:	mov	w1, #0xa                   	// #10
  409b6c:	bl	40b2cc <ferror@plt+0x895c>
  409b70:	add	w20, w20, #0x1
  409b74:	b	409b3c <ferror@plt+0x71cc>
  409b78:	ldr	x0, [x23]
  409b7c:	mov	w1, w20
  409b80:	bl	40fa80 <ferror@plt+0xd110>
  409b84:	mov	x24, x0
  409b88:	mov	x25, x1
  409b8c:	cbnz	x0, 409bb0 <ferror@plt+0x7240>
  409b90:	mov	w0, #0x0                   	// #0
  409b94:	ldp	x19, x20, [sp, #16]
  409b98:	ldp	x21, x22, [sp, #32]
  409b9c:	ldp	x23, x24, [sp, #48]
  409ba0:	ldp	x25, x26, [sp, #64]
  409ba4:	ldr	x27, [sp, #80]
  409ba8:	ldp	x29, x30, [sp], #112
  409bac:	ret
  409bb0:	mov	x21, #0x0                   	// #0
  409bb4:	cmp	x21, x25
  409bb8:	b.cs	409b5c <ferror@plt+0x71ec>  // b.hs, b.nlast
  409bbc:	cmp	x21, x27
  409bc0:	b.ne	409bdc <ferror@plt+0x726c>  // b.any
  409bc4:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  409bc8:	add	x2, x2, #0xad9
  409bcc:	mov	w1, #0x3d                  	// #61
  409bd0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  409bd4:	add	x0, x0, #0xa60
  409bd8:	bl	402980 <ferror@plt+0x10>
  409bdc:	sxtw	x0, w21
  409be0:	cmp	x25, w21, sxtw
  409be4:	b.hi	409bf8 <ferror@plt+0x7288>  // b.pmore
  409be8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  409bec:	mov	w1, #0x3e                  	// #62
  409bf0:	add	x2, x2, #0xad9
  409bf4:	b	409bd0 <ferror@plt+0x7260>
  409bf8:	ldrb	w1, [x24, x0]
  409bfc:	add	x21, x21, #0x1
  409c00:	mov	x0, x19
  409c04:	bl	40b2cc <ferror@plt+0x895c>
  409c08:	b	409bb4 <ferror@plt+0x7244>
  409c0c:	ldrb	w0, [sp, #111]
  409c10:	cbnz	w0, 409b94 <ferror@plt+0x7224>
  409c14:	mov	x0, x19
  409c18:	mov	w1, #0xa                   	// #10
  409c1c:	bl	40b2cc <ferror@plt+0x895c>
  409c20:	mov	w0, #0x1                   	// #1
  409c24:	b	409b94 <ferror@plt+0x7224>
  409c28:	stp	x29, x30, [sp, #-64]!
  409c2c:	mov	x29, sp
  409c30:	stp	x19, x20, [sp, #16]
  409c34:	mov	x19, x1
  409c38:	mov	w20, w2
  409c3c:	stp	x21, x22, [sp, #32]
  409c40:	mov	x21, x0
  409c44:	ldrb	w0, [x19, #67]
  409c48:	mov	w22, w20
  409c4c:	stp	x23, x24, [sp, #48]
  409c50:	add	x24, x21, #0x8
  409c54:	mov	w23, w3
  409c58:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  409c5c:	add	x1, x1, #0x8f0
  409c60:	bl	40685c <ferror@plt+0x3eec>
  409c64:	mov	x1, x0
  409c68:	mov	x0, x19
  409c6c:	bl	40b678 <ferror@plt+0x8d08>
  409c70:	cmp	w22, w23
  409c74:	b.gt	409cd4 <ferror@plt+0x7364>
  409c78:	mov	w1, w22
  409c7c:	mov	x0, x24
  409c80:	bl	40ab18 <ferror@plt+0x81a8>
  409c84:	cbnz	x0, 409ca0 <ferror@plt+0x7330>
  409c88:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  409c8c:	add	x2, x2, #0xae4
  409c90:	mov	w1, #0x239                 	// #569
  409c94:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  409c98:	add	x0, x0, #0xa98
  409c9c:	bl	402980 <ferror@plt+0x10>
  409ca0:	bl	40a490 <ferror@plt+0x7b20>
  409ca4:	tst	w0, #0xff
  409ca8:	b.eq	409ccc <ferror@plt+0x735c>  // b.none
  409cac:	ldr	x0, [x21]
  409cb0:	mov	w1, w22
  409cb4:	bl	40fa80 <ferror@plt+0xd110>
  409cb8:	mov	w3, w1
  409cbc:	mov	x2, x0
  409cc0:	mov	w1, #0x2d                  	// #45
  409cc4:	mov	x0, x19
  409cc8:	bl	40929c <ferror@plt+0x692c>
  409ccc:	add	w22, w22, #0x1
  409cd0:	b	409c70 <ferror@plt+0x7300>
  409cd4:	ldrb	w0, [x19, #67]
  409cd8:	add	x21, x21, #0x8
  409cdc:	bl	406b78 <ferror@plt+0x4208>
  409ce0:	mov	x1, x0
  409ce4:	mov	x0, x19
  409ce8:	bl	40b678 <ferror@plt+0x8d08>
  409cec:	ldrb	w0, [x19, #67]
  409cf0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  409cf4:	add	x1, x1, #0x8fc
  409cf8:	bl	40685c <ferror@plt+0x3eec>
  409cfc:	mov	x1, x0
  409d00:	mov	x0, x19
  409d04:	bl	40b678 <ferror@plt+0x8d08>
  409d08:	cmp	w20, w23
  409d0c:	b.gt	409d40 <ferror@plt+0x73d0>
  409d10:	mov	w1, w20
  409d14:	mov	x0, x21
  409d18:	bl	40ab18 <ferror@plt+0x81a8>
  409d1c:	cbnz	x0, 409d30 <ferror@plt+0x73c0>
  409d20:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  409d24:	mov	w1, #0x24b                 	// #587
  409d28:	add	x2, x2, #0xae4
  409d2c:	b	409c94 <ferror@plt+0x7324>
  409d30:	mov	x1, x19
  409d34:	add	w20, w20, #0x1
  409d38:	bl	409590 <ferror@plt+0x6c20>
  409d3c:	b	409d08 <ferror@plt+0x7398>
  409d40:	ldrb	w0, [x19, #67]
  409d44:	bl	406b78 <ferror@plt+0x4208>
  409d48:	mov	x1, x0
  409d4c:	mov	x0, x19
  409d50:	ldp	x19, x20, [sp, #16]
  409d54:	ldp	x21, x22, [sp, #32]
  409d58:	ldp	x23, x24, [sp, #48]
  409d5c:	ldp	x29, x30, [sp], #64
  409d60:	b	40b678 <ferror@plt+0x8d08>
  409d64:	stp	x29, x30, [sp, #-48]!
  409d68:	mov	x29, sp
  409d6c:	stp	x19, x20, [sp, #16]
  409d70:	mov	w19, w1
  409d74:	mov	w20, #0x0                   	// #0
  409d78:	stp	x21, x22, [sp, #32]
  409d7c:	mov	w21, w2
  409d80:	add	x22, x0, #0x8
  409d84:	cmp	w19, w21
  409d88:	b.gt	409db4 <ferror@plt+0x7444>
  409d8c:	mov	w1, w19
  409d90:	mov	x0, x22
  409d94:	bl	40ab18 <ferror@plt+0x81a8>
  409d98:	cbz	x0, 409dac <ferror@plt+0x743c>
  409d9c:	bl	409508 <ferror@plt+0x6b98>
  409da0:	add	w20, w20, w0
  409da4:	add	w19, w19, #0x1
  409da8:	b	409d84 <ferror@plt+0x7414>
  409dac:	add	w20, w20, #0x1
  409db0:	b	409da4 <ferror@plt+0x7434>
  409db4:	mov	w0, w20
  409db8:	ldp	x19, x20, [sp, #16]
  409dbc:	ldp	x21, x22, [sp, #32]
  409dc0:	ldp	x29, x30, [sp], #48
  409dc4:	ret
  409dc8:	stp	x29, x30, [sp, #-80]!
  409dcc:	mov	x29, sp
  409dd0:	stp	x19, x20, [sp, #16]
  409dd4:	mov	x20, x1
  409dd8:	mov	w19, w2
  409ddc:	mov	w1, w19
  409de0:	stp	x21, x22, [sp, #32]
  409de4:	mov	w21, w4
  409de8:	mov	x22, x0
  409dec:	stp	x23, x24, [sp, #48]
  409df0:	sub	w24, w3, w2
  409df4:	mov	w23, w3
  409df8:	mov	w2, w3
  409dfc:	stp	x25, x26, [sp, #64]
  409e00:	bl	409d64 <ferror@plt+0x73f4>
  409e04:	mov	w25, w0
  409e08:	ldrb	w0, [x20, #67]
  409e0c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  409e10:	add	x1, x1, #0x8dd
  409e14:	add	w24, w24, #0x1
  409e18:	add	x26, x22, #0x8
  409e1c:	bl	40685c <ferror@plt+0x3eec>
  409e20:	mov	x1, x0
  409e24:	mov	x0, x20
  409e28:	bl	40b678 <ferror@plt+0x8d08>
  409e2c:	mov	w5, w25
  409e30:	mov	w4, w21
  409e34:	mov	w3, w24
  409e38:	mov	w2, w19
  409e3c:	mov	x0, x20
  409e40:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  409e44:	add	x1, x1, #0xaff
  409e48:	bl	40ccc0 <ferror@plt+0xa350>
  409e4c:	ldrb	w0, [x20, #67]
  409e50:	bl	406b78 <ferror@plt+0x4208>
  409e54:	mov	x1, x0
  409e58:	mov	x0, x20
  409e5c:	bl	40b678 <ferror@plt+0x8d08>
  409e60:	cmp	w19, w23
  409e64:	b.gt	409ed8 <ferror@plt+0x7568>
  409e68:	mov	w1, w19
  409e6c:	mov	x0, x26
  409e70:	bl	40ab18 <ferror@plt+0x81a8>
  409e74:	cbz	x0, 409eb0 <ferror@plt+0x7540>
  409e78:	mov	w21, w19
  409e7c:	mov	w1, w21
  409e80:	mov	x0, x26
  409e84:	bl	40ab18 <ferror@plt+0x81a8>
  409e88:	cbz	x0, 409e94 <ferror@plt+0x7524>
  409e8c:	add	w21, w21, #0x1
  409e90:	b	409e7c <ferror@plt+0x750c>
  409e94:	sub	w3, w21, #0x1
  409e98:	mov	w2, w19
  409e9c:	mov	x1, x20
  409ea0:	mov	x0, x22
  409ea4:	bl	409c28 <ferror@plt+0x72b8>
  409ea8:	mov	w19, w21
  409eac:	b	409e60 <ferror@plt+0x74f0>
  409eb0:	ldr	x0, [x22]
  409eb4:	mov	w1, w19
  409eb8:	add	w21, w19, #0x1
  409ebc:	bl	40fa80 <ferror@plt+0xd110>
  409ec0:	mov	w3, w1
  409ec4:	mov	x2, x0
  409ec8:	mov	w1, #0x20                  	// #32
  409ecc:	mov	x0, x20
  409ed0:	bl	40929c <ferror@plt+0x692c>
  409ed4:	b	409ea8 <ferror@plt+0x7538>
  409ed8:	sub	w0, w25, w24
  409edc:	ldp	x19, x20, [sp, #16]
  409ee0:	ldp	x21, x22, [sp, #32]
  409ee4:	ldp	x23, x24, [sp, #48]
  409ee8:	ldp	x25, x26, [sp, #64]
  409eec:	ldp	x29, x30, [sp], #80
  409ef0:	ret
  409ef4:	stp	x29, x30, [sp, #-112]!
  409ef8:	tst	w2, #0xff
  409efc:	mov	x29, sp
  409f00:	stp	x19, x20, [sp, #16]
  409f04:	mov	x20, x1
  409f08:	stp	x21, x22, [sp, #32]
  409f0c:	mov	x21, x0
  409f10:	stp	x23, x24, [sp, #48]
  409f14:	stp	x25, x26, [sp, #64]
  409f18:	stp	x27, x28, [sp, #80]
  409f1c:	b.eq	409f78 <ferror@plt+0x7608>  // b.none
  409f20:	ldrb	w0, [x20, #67]
  409f24:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  409f28:	add	x1, x1, #0x8cf
  409f2c:	bl	40685c <ferror@plt+0x3eec>
  409f30:	mov	x1, x0
  409f34:	mov	x0, x20
  409f38:	bl	40b678 <ferror@plt+0x8d08>
  409f3c:	ldr	x2, [x21]
  409f40:	mov	x0, x20
  409f44:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  409f48:	add	x1, x1, #0xb14
  409f4c:	bl	40ccc0 <ferror@plt+0xa350>
  409f50:	ldr	x2, [x21]
  409f54:	mov	x0, x20
  409f58:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  409f5c:	add	x1, x1, #0xb1c
  409f60:	bl	40ccc0 <ferror@plt+0xa350>
  409f64:	ldrb	w0, [x20, #67]
  409f68:	bl	406b78 <ferror@plt+0x4208>
  409f6c:	mov	x1, x0
  409f70:	mov	x0, x20
  409f74:	bl	40b678 <ferror@plt+0x8d08>
  409f78:	ldr	x19, [x21, #8]
  409f7c:	add	x26, x21, #0x8
  409f80:	cbz	x19, 409f94 <ferror@plt+0x7624>
  409f84:	mov	x0, x19
  409f88:	ldr	x19, [x19, #16]
  409f8c:	cbnz	x19, 409f84 <ferror@plt+0x7614>
  409f90:	ldr	x19, [x0, #8]
  409f94:	add	x1, sp, #0x6f
  409f98:	mov	x0, x21
  409f9c:	bl	40936c <ferror@plt+0x69fc>
  409fa0:	mov	w24, w0
  409fa4:	mov	w25, #0x0                   	// #0
  409fa8:	mov	w27, #0x1                   	// #1
  409fac:	cbz	x19, 40a058 <ferror@plt+0x76e8>
  409fb0:	ldr	w22, [x19]
  409fb4:	sub	w22, w22, #0x3
  409fb8:	cmp	w22, #0x0
  409fbc:	csel	w22, w22, w27, gt
  409fc0:	ldr	w1, [x19]
  409fc4:	mov	x0, x26
  409fc8:	bl	40aaac <ferror@plt+0x813c>
  409fcc:	ldr	w23, [x19]
  409fd0:	cbz	x0, 40a004 <ferror@plt+0x7694>
  409fd4:	ldr	x28, [x0, #8]
  409fd8:	mov	x0, x19
  409fdc:	bl	40a490 <ferror@plt+0x7b20>
  409fe0:	and	w0, w0, #0xff
  409fe4:	cbz	x28, 40a004 <ferror@plt+0x7694>
  409fe8:	cmp	w0, #0x0
  409fec:	ldr	w1, [x28]
  409ff0:	cinc	w0, w23, ne  // ne = any
  409ff4:	add	w0, w0, #0x2
  409ff8:	sub	w1, w1, #0x3
  409ffc:	cmp	w1, w0
  40a000:	b.le	40a050 <ferror@plt+0x76e0>
  40a004:	mov	x0, x19
  40a008:	bl	40a490 <ferror@plt+0x7b20>
  40a00c:	tst	w0, #0xff
  40a010:	add	w4, w25, w22
  40a014:	cinc	w3, w23, ne  // ne = any
  40a018:	mov	x1, x20
  40a01c:	add	w3, w3, #0x2
  40a020:	mov	w2, w22
  40a024:	cmp	w3, w24
  40a028:	mov	x0, x21
  40a02c:	csel	w3, w3, w24, le
  40a030:	bl	409dc8 <ferror@plt+0x7458>
  40a034:	add	w25, w25, w0
  40a038:	ldr	w1, [x19]
  40a03c:	mov	x0, x26
  40a040:	bl	40aaac <ferror@plt+0x813c>
  40a044:	cbz	x0, 40a058 <ferror@plt+0x76e8>
  40a048:	ldr	x19, [x0, #8]
  40a04c:	b	409fac <ferror@plt+0x763c>
  40a050:	mov	x19, x28
  40a054:	b	409fc0 <ferror@plt+0x7650>
  40a058:	ldp	x19, x20, [sp, #16]
  40a05c:	ldp	x21, x22, [sp, #32]
  40a060:	ldp	x23, x24, [sp, #48]
  40a064:	ldp	x25, x26, [sp, #64]
  40a068:	ldp	x27, x28, [sp, #80]
  40a06c:	ldp	x29, x30, [sp], #112
  40a070:	ret
  40a074:	stp	x29, x30, [sp, #-48]!
  40a078:	mov	x29, sp
  40a07c:	stp	x21, x22, [sp, #32]
  40a080:	mov	x21, x1
  40a084:	ldrb	w1, [x0]
  40a088:	stp	x19, x20, [sp, #16]
  40a08c:	cbz	w1, 40a0d4 <ferror@plt+0x7764>
  40a090:	ldr	x20, [x0, #8]
  40a094:	and	w22, w2, #0xff
  40a098:	mov	x19, #0x0                   	// #0
  40a09c:	cbz	x20, 40a0b4 <ferror@plt+0x7744>
  40a0a0:	ldr	x0, [x20, #16]
  40a0a4:	str	x19, [x20, #32]
  40a0a8:	mov	x19, x20
  40a0ac:	mov	x20, x0
  40a0b0:	b	40a09c <ferror@plt+0x772c>
  40a0b4:	cbz	x19, 40a0d4 <ferror@plt+0x7764>
  40a0b8:	ldr	x0, [x19, #8]
  40a0bc:	mov	w2, w22
  40a0c0:	mov	x1, x21
  40a0c4:	ldr	x20, [x19, #32]
  40a0c8:	bl	409ef4 <ferror@plt+0x7584>
  40a0cc:	ldr	x0, [x19, #24]
  40a0d0:	b	40a0a8 <ferror@plt+0x7738>
  40a0d4:	ldp	x19, x20, [sp, #16]
  40a0d8:	ldp	x21, x22, [sp, #32]
  40a0dc:	ldp	x29, x30, [sp], #48
  40a0e0:	ret
  40a0e4:	stp	x29, x30, [sp, #-48]!
  40a0e8:	mov	x29, sp
  40a0ec:	stp	x21, x22, [sp, #32]
  40a0f0:	add	x22, x0, #0x8
  40a0f4:	mov	w21, w1
  40a0f8:	stp	x19, x20, [sp, #16]
  40a0fc:	mov	x20, x0
  40a100:	mov	x0, x22
  40a104:	bl	40ab18 <ferror@plt+0x81a8>
  40a108:	mov	x19, x0
  40a10c:	cbnz	x0, 40a148 <ferror@plt+0x77d8>
  40a110:	mov	x0, #0x28                  	// #40
  40a114:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  40a118:	ldr	x1, [x20]
  40a11c:	mov	x19, x0
  40a120:	mov	w2, w21
  40a124:	bl	409698 <ferror@plt+0x6d28>
  40a128:	ldr	x0, [x19, #8]
  40a12c:	cbnz	x0, 40a15c <ferror@plt+0x77ec>
  40a130:	mov	x0, x19
  40a134:	bl	4093ec <ferror@plt+0x6a7c>
  40a138:	mov	x0, x19
  40a13c:	mov	x19, #0x0                   	// #0
  40a140:	mov	x1, #0x28                  	// #40
  40a144:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  40a148:	mov	x0, x19
  40a14c:	ldp	x19, x20, [sp, #16]
  40a150:	ldp	x21, x22, [sp, #32]
  40a154:	ldp	x29, x30, [sp], #48
  40a158:	ret
  40a15c:	mov	x0, x22
  40a160:	mov	w1, w21
  40a164:	bl	40a940 <ferror@plt+0x7fd0>
  40a168:	ldr	x0, [x20, #8]
  40a16c:	cbz	x0, 40a1a8 <ferror@plt+0x7838>
  40a170:	ldr	w0, [x0]
  40a174:	mov	w1, w21
  40a178:	ldr	x2, [x22, #8]
  40a17c:	blr	x2
  40a180:	mov	w22, w0
  40a184:	ldr	x0, [x20, #8]
  40a188:	cbz	x0, 40a1b0 <ferror@plt+0x7840>
  40a18c:	cbnz	w22, 40a1b0 <ferror@plt+0x7840>
  40a190:	ldr	x1, [x0, #8]
  40a194:	ldr	x0, [x20, #32]
  40a198:	bl	4092f8 <ferror@plt+0x6988>
  40a19c:	ldr	x0, [x20, #8]
  40a1a0:	str	x19, [x0, #8]
  40a1a4:	b	40a148 <ferror@plt+0x77d8>
  40a1a8:	mov	w22, #0x0                   	// #0
  40a1ac:	b	40a184 <ferror@plt+0x7814>
  40a1b0:	mov	x0, #0x28                  	// #40
  40a1b4:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  40a1b8:	ldr	x1, [x20, #8]
  40a1bc:	str	w21, [x0]
  40a1c0:	str	x19, [x0, #8]
  40a1c4:	cbnz	x1, 40a1d4 <ferror@plt+0x7864>
  40a1c8:	stp	xzr, xzr, [x0, #16]
  40a1cc:	str	x0, [x20, #8]
  40a1d0:	b	40a148 <ferror@plt+0x77d8>
  40a1d4:	tbz	w22, #31, 40a1e8 <ferror@plt+0x7878>
  40a1d8:	ldr	x2, [x1, #24]
  40a1dc:	stp	x1, x2, [x0, #16]
  40a1e0:	str	xzr, [x1, #24]
  40a1e4:	b	40a1cc <ferror@plt+0x785c>
  40a1e8:	ldr	x2, [x1, #16]
  40a1ec:	stp	x2, x1, [x0, #16]
  40a1f0:	str	xzr, [x1, #16]
  40a1f4:	b	40a1cc <ferror@plt+0x785c>
  40a1f8:	stp	x29, x30, [sp, #-48]!
  40a1fc:	mov	x29, sp
  40a200:	stp	x19, x20, [sp, #16]
  40a204:	mov	w19, w2
  40a208:	mov	w20, w3
  40a20c:	stp	x21, x22, [sp, #32]
  40a210:	mov	x21, x4
  40a214:	mov	w22, w5
  40a218:	bl	40a0e4 <ferror@plt+0x7774>
  40a21c:	cbz	x0, 40a240 <ferror@plt+0x78d0>
  40a220:	mov	w4, w22
  40a224:	mov	x3, x21
  40a228:	mov	w2, w20
  40a22c:	mov	w1, w19
  40a230:	ldp	x19, x20, [sp, #16]
  40a234:	ldp	x21, x22, [sp, #32]
  40a238:	ldp	x29, x30, [sp], #48
  40a23c:	b	409700 <ferror@plt+0x6d90>
  40a240:	mov	w0, #0x0                   	// #0
  40a244:	ldp	x19, x20, [sp, #16]
  40a248:	ldp	x21, x22, [sp, #32]
  40a24c:	ldp	x29, x30, [sp], #48
  40a250:	ret
  40a254:	stp	x29, x30, [sp, #-128]!
  40a258:	mov	x29, sp
  40a25c:	stp	x19, x20, [sp, #16]
  40a260:	mov	x20, x0
  40a264:	ldr	w0, [x1]
  40a268:	mov	x19, x1
  40a26c:	add	x8, sp, #0x40
  40a270:	stp	x21, x22, [sp, #32]
  40a274:	str	x23, [sp, #48]
  40a278:	bl	40ee94 <ferror@plt+0xc524>
  40a27c:	ldr	w0, [x19, #4]
  40a280:	add	x8, sp, #0x60
  40a284:	ldp	w23, w22, [sp, #72]
  40a288:	ldr	x21, [sp, #64]
  40a28c:	bl	40ee94 <ferror@plt+0xc524>
  40a290:	ldr	x1, [sp, #96]
  40a294:	cmp	x1, x21
  40a298:	b.ne	40a2ec <ferror@plt+0x797c>  // b.any
  40a29c:	ldr	w21, [sp, #104]
  40a2a0:	cmp	w21, w23
  40a2a4:	b.ne	40a2ec <ferror@plt+0x797c>  // b.any
  40a2a8:	cbz	w22, 40a2ec <ferror@plt+0x797c>
  40a2ac:	ldr	w23, [sp, #108]
  40a2b0:	cbz	w23, 40a2ec <ferror@plt+0x797c>
  40a2b4:	mov	x0, x20
  40a2b8:	bl	409958 <ferror@plt+0x6fe8>
  40a2bc:	ldrb	w1, [x20]
  40a2c0:	cbz	w1, 40a2ec <ferror@plt+0x797c>
  40a2c4:	ldr	w5, [x19, #16]
  40a2c8:	mov	w3, w23
  40a2cc:	mov	w2, w22
  40a2d0:	mov	w1, w21
  40a2d4:	ldr	x4, [x19, #8]
  40a2d8:	ldp	x19, x20, [sp, #16]
  40a2dc:	ldp	x21, x22, [sp, #32]
  40a2e0:	ldr	x23, [sp, #48]
  40a2e4:	ldp	x29, x30, [sp], #128
  40a2e8:	b	40a1f8 <ferror@plt+0x7888>
  40a2ec:	mov	w0, #0x0                   	// #0
  40a2f0:	ldp	x19, x20, [sp, #16]
  40a2f4:	ldp	x21, x22, [sp, #32]
  40a2f8:	ldr	x23, [sp, #48]
  40a2fc:	ldp	x29, x30, [sp], #128
  40a300:	ret
  40a304:	stp	x29, x30, [sp, #-64]!
  40a308:	mov	x29, sp
  40a30c:	stp	x19, x20, [sp, #16]
  40a310:	mov	x20, x0
  40a314:	ldrb	w0, [x0]
  40a318:	stp	x21, x22, [sp, #32]
  40a31c:	str	x23, [sp, #48]
  40a320:	cbz	w0, 40a334 <ferror@plt+0x79c4>
  40a324:	ldrb	w0, [x1, #160]
  40a328:	mov	x21, x1
  40a32c:	cbz	w0, 40a348 <ferror@plt+0x79d8>
  40a330:	strb	wzr, [x20]
  40a334:	ldp	x19, x20, [sp, #16]
  40a338:	ldp	x21, x22, [sp, #32]
  40a33c:	ldr	x23, [sp, #48]
  40a340:	ldp	x29, x30, [sp], #64
  40a344:	ret
  40a348:	add	x22, x1, #0x78
  40a34c:	mov	w19, #0x0                   	// #0
  40a350:	mov	x23, #0xfffffffffffffff0    	// #-16
  40a354:	ldr	w0, [x21, #120]
  40a358:	cmp	w19, w0
  40a35c:	b.cs	40a334 <ferror@plt+0x79c4>  // b.hs, b.nlast
  40a360:	sxtw	x2, w19
  40a364:	cmp	w19, #0x1
  40a368:	b.gt	40a394 <ferror@plt+0x7a24>
  40a36c:	add	x2, x2, #0x1
  40a370:	add	x2, x22, x2, lsl #3
  40a374:	ldr	x1, [x2]
  40a378:	mov	x0, x20
  40a37c:	bl	40a254 <ferror@plt+0x78e4>
  40a380:	tst	w0, #0xff
  40a384:	b.ne	40a38c <ferror@plt+0x7a1c>  // b.any
  40a388:	strb	wzr, [x20]
  40a38c:	add	w19, w19, #0x1
  40a390:	b	40a354 <ferror@plt+0x79e4>
  40a394:	ldr	x3, [x22, #32]
  40a398:	add	x2, x23, w19, sxtw #3
  40a39c:	add	x2, x3, x2
  40a3a0:	b	40a374 <ferror@plt+0x7a04>
  40a3a4:	stp	x29, x30, [sp, #-112]!
  40a3a8:	mov	x29, sp
  40a3ac:	stp	x19, x20, [sp, #16]
  40a3b0:	mov	x19, x0
  40a3b4:	ldrb	w0, [x0]
  40a3b8:	cbz	w0, 40a404 <ferror@plt+0x7a94>
  40a3bc:	and	w20, w1, #0xff
  40a3c0:	add	x0, sp, #0x28
  40a3c4:	mov	w1, #0x0                   	// #0
  40a3c8:	bl	40affc <ferror@plt+0x868c>
  40a3cc:	mov	w2, w20
  40a3d0:	add	x1, sp, #0x28
  40a3d4:	mov	x0, x19
  40a3d8:	bl	40a074 <ferror@plt+0x7704>
  40a3dc:	add	x0, sp, #0x28
  40a3e0:	bl	40b064 <ferror@plt+0x86f4>
  40a3e4:	bl	43a064 <_obstack_memory_used@@Base+0x1fc>
  40a3e8:	mov	x19, x0
  40a3ec:	add	x0, sp, #0x28
  40a3f0:	bl	40aeb4 <ferror@plt+0x8544>
  40a3f4:	mov	x0, x19
  40a3f8:	ldp	x19, x20, [sp, #16]
  40a3fc:	ldp	x29, x30, [sp], #112
  40a400:	ret
  40a404:	mov	x19, #0x0                   	// #0
  40a408:	b	40a3f4 <ferror@plt+0x7a84>
  40a40c:	stp	x29, x30, [sp, #-112]!
  40a410:	mov	w1, #0x0                   	// #0
  40a414:	mov	x29, sp
  40a418:	str	x19, [sp, #16]
  40a41c:	mov	x19, x0
  40a420:	add	x0, sp, #0x28
  40a424:	bl	40affc <ferror@plt+0x868c>
  40a428:	add	x1, sp, #0x28
  40a42c:	mov	x0, x19
  40a430:	bl	409b00 <ferror@plt+0x7190>
  40a434:	tst	w0, #0xff
  40a438:	b.eq	40a464 <ferror@plt+0x7af4>  // b.none
  40a43c:	add	x0, sp, #0x28
  40a440:	bl	40b064 <ferror@plt+0x86f4>
  40a444:	bl	43a064 <_obstack_memory_used@@Base+0x1fc>
  40a448:	mov	x19, x0
  40a44c:	add	x0, sp, #0x28
  40a450:	bl	40aeb4 <ferror@plt+0x8544>
  40a454:	mov	x0, x19
  40a458:	ldr	x19, [sp, #16]
  40a45c:	ldp	x29, x30, [sp], #112
  40a460:	ret
  40a464:	mov	x19, #0x0                   	// #0
  40a468:	b	40a44c <ferror@plt+0x7adc>
  40a46c:	ldrb	w2, [x0]
  40a470:	cbz	w2, 40a488 <ferror@plt+0x7b18>
  40a474:	stp	x29, x30, [sp, #-16]!
  40a478:	mov	x29, sp
  40a47c:	bl	409958 <ferror@plt+0x6fe8>
  40a480:	ldp	x29, x30, [sp], #16
  40a484:	b	40a40c <ferror@plt+0x7a9c>
  40a488:	mov	x0, #0x0                   	// #0
  40a48c:	ret
  40a490:	ldr	x0, [x0, #24]
  40a494:	cbz	x0, 40a4a8 <ferror@plt+0x7b38>
  40a498:	ldr	w0, [x0, #4]
  40a49c:	cmp	w0, #0x0
  40a4a0:	cset	w0, ne  // ne = any
  40a4a4:	ret
  40a4a8:	mov	w0, #0x0                   	// #0
  40a4ac:	b	40a49c <ferror@plt+0x7b2c>
  40a4b0:	stp	x29, x30, [sp, #-80]!
  40a4b4:	mov	x29, sp
  40a4b8:	stp	x21, x22, [sp, #32]
  40a4bc:	ldr	x22, [x0]
  40a4c0:	stp	x19, x20, [sp, #16]
  40a4c4:	mov	x20, x0
  40a4c8:	stp	x23, x24, [sp, #48]
  40a4cc:	mov	x23, x1
  40a4d0:	str	x25, [sp, #64]
  40a4d4:	cbz	x22, 40a568 <ferror@plt+0x7bf8>
  40a4d8:	ldp	w0, w21, [x22]
  40a4dc:	ubfx	x0, x0, #0, #31
  40a4e0:	cmp	w0, w21
  40a4e4:	b.ne	40a594 <ferror@plt+0x7c24>  // b.any
  40a4e8:	ldrsb	w0, [x22, #3]
  40a4ec:	tbz	w0, #31, 40a568 <ferror@plt+0x7bf8>
  40a4f0:	add	w2, w21, #0x1
  40a4f4:	mov	w24, #0x1                   	// #1
  40a4f8:	str	xzr, [x20]
  40a4fc:	ldr	x0, [x20]
  40a500:	cbz	x0, 40a578 <ferror@plt+0x7c08>
  40a504:	ldr	w1, [x0, #4]
  40a508:	ldr	w0, [x0]
  40a50c:	add	w1, w2, w1
  40a510:	and	w0, w0, #0x7fffffff
  40a514:	bl	40d43c <ferror@plt+0xaacc>
  40a518:	mov	w19, w0
  40a51c:	ldr	x0, [x20]
  40a520:	ubfiz	x1, x19, #3, #32
  40a524:	add	x1, x1, #0x8
  40a528:	cbz	x0, 40a588 <ferror@plt+0x7c18>
  40a52c:	ldr	w25, [x0, #4]
  40a530:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  40a534:	str	x0, [x20]
  40a538:	and	w2, w19, #0x7fffffff
  40a53c:	stp	w2, w25, [x0]
  40a540:	cbz	w24, 40a594 <ferror@plt+0x7c24>
  40a544:	mov	w3, w21
  40a548:	mov	x1, #0x0                   	// #0
  40a54c:	add	x2, x1, #0x1
  40a550:	cmp	x3, x1
  40a554:	b.eq	40a590 <ferror@plt+0x7c20>  // b.none
  40a558:	ldr	x1, [x22, x2, lsl #3]
  40a55c:	str	x1, [x0, x2, lsl #3]
  40a560:	mov	x1, x2
  40a564:	b	40a54c <ferror@plt+0x7bdc>
  40a568:	mov	w24, #0x0                   	// #0
  40a56c:	mov	w21, #0x0                   	// #0
  40a570:	mov	w2, #0x1                   	// #1
  40a574:	b	40a4fc <ferror@plt+0x7b8c>
  40a578:	cmp	w2, #0x4
  40a57c:	mov	w19, #0x4                   	// #4
  40a580:	csel	w19, w2, w19, cs  // cs = hs, nlast
  40a584:	b	40a51c <ferror@plt+0x7bac>
  40a588:	mov	w25, #0x0                   	// #0
  40a58c:	b	40a530 <ferror@plt+0x7bc0>
  40a590:	str	w21, [x0, #4]
  40a594:	ldr	x0, [x20]
  40a598:	ldr	x3, [x23]
  40a59c:	ldr	w1, [x0, #4]
  40a5a0:	ldp	x19, x20, [sp, #16]
  40a5a4:	add	w2, w1, #0x1
  40a5a8:	ldp	x21, x22, [sp, #32]
  40a5ac:	ldp	x23, x24, [sp, #48]
  40a5b0:	ldr	x25, [sp, #64]
  40a5b4:	str	w2, [x0, #4]
  40a5b8:	add	x2, x0, w1, uxtw #3
  40a5bc:	ubfiz	x1, x1, #3, #32
  40a5c0:	add	x1, x1, #0x8
  40a5c4:	add	x0, x0, x1
  40a5c8:	str	x3, [x2, #8]
  40a5cc:	ldp	x29, x30, [sp], #80
  40a5d0:	ret
  40a5d4:	stp	x29, x30, [sp, #-80]!
  40a5d8:	mov	x29, sp
  40a5dc:	stp	x21, x22, [sp, #32]
  40a5e0:	ldr	x22, [x0]
  40a5e4:	stp	x19, x20, [sp, #16]
  40a5e8:	mov	x20, x0
  40a5ec:	stp	x23, x24, [sp, #48]
  40a5f0:	mov	x23, x1
  40a5f4:	str	x25, [sp, #64]
  40a5f8:	cbz	x22, 40a68c <ferror@plt+0x7d1c>
  40a5fc:	ldp	w0, w21, [x22]
  40a600:	ubfx	x0, x0, #0, #31
  40a604:	cmp	w0, w21
  40a608:	b.ne	40a6b8 <ferror@plt+0x7d48>  // b.any
  40a60c:	ldrsb	w0, [x22, #3]
  40a610:	tbz	w0, #31, 40a68c <ferror@plt+0x7d1c>
  40a614:	add	w2, w21, #0x1
  40a618:	mov	w24, #0x1                   	// #1
  40a61c:	str	xzr, [x20]
  40a620:	ldr	x0, [x20]
  40a624:	cbz	x0, 40a69c <ferror@plt+0x7d2c>
  40a628:	ldr	w1, [x0, #4]
  40a62c:	ldr	w0, [x0]
  40a630:	add	w1, w2, w1
  40a634:	and	w0, w0, #0x7fffffff
  40a638:	bl	40d43c <ferror@plt+0xaacc>
  40a63c:	mov	w19, w0
  40a640:	ldr	x0, [x20]
  40a644:	ubfiz	x1, x19, #3, #32
  40a648:	add	x1, x1, #0x8
  40a64c:	cbz	x0, 40a6ac <ferror@plt+0x7d3c>
  40a650:	ldr	w25, [x0, #4]
  40a654:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  40a658:	str	x0, [x20]
  40a65c:	and	w2, w19, #0x7fffffff
  40a660:	stp	w2, w25, [x0]
  40a664:	cbz	w24, 40a6b8 <ferror@plt+0x7d48>
  40a668:	mov	w3, w21
  40a66c:	mov	x1, #0x0                   	// #0
  40a670:	add	x2, x1, #0x1
  40a674:	cmp	x3, x1
  40a678:	b.eq	40a6b4 <ferror@plt+0x7d44>  // b.none
  40a67c:	ldr	x1, [x22, x2, lsl #3]
  40a680:	str	x1, [x0, x2, lsl #3]
  40a684:	mov	x1, x2
  40a688:	b	40a670 <ferror@plt+0x7d00>
  40a68c:	mov	w24, #0x0                   	// #0
  40a690:	mov	w21, #0x0                   	// #0
  40a694:	mov	w2, #0x1                   	// #1
  40a698:	b	40a620 <ferror@plt+0x7cb0>
  40a69c:	cmp	w2, #0x4
  40a6a0:	mov	w19, #0x4                   	// #4
  40a6a4:	csel	w19, w2, w19, cs  // cs = hs, nlast
  40a6a8:	b	40a640 <ferror@plt+0x7cd0>
  40a6ac:	mov	w25, #0x0                   	// #0
  40a6b0:	b	40a654 <ferror@plt+0x7ce4>
  40a6b4:	str	w21, [x0, #4]
  40a6b8:	ldr	x2, [x20]
  40a6bc:	ldr	x3, [x23]
  40a6c0:	ldr	w1, [x2, #4]
  40a6c4:	ldp	x19, x20, [sp, #16]
  40a6c8:	add	w0, w1, #0x1
  40a6cc:	ubfiz	x1, x1, #3, #32
  40a6d0:	ldp	x21, x22, [sp, #32]
  40a6d4:	ldp	x23, x24, [sp, #48]
  40a6d8:	ldr	x25, [sp, #64]
  40a6dc:	str	w0, [x2, #4]
  40a6e0:	add	x0, x1, #0x8
  40a6e4:	str	x3, [x2, x0]
  40a6e8:	add	x0, x2, x0
  40a6ec:	ldp	x29, x30, [sp], #80
  40a6f0:	ret
  40a6f4:	cbz	x1, 40a7d0 <ferror@plt+0x7e60>
  40a6f8:	stp	x29, x30, [sp, #-48]!
  40a6fc:	mov	x29, sp
  40a700:	stp	x19, x20, [sp, #16]
  40a704:	mov	x19, x1
  40a708:	ldr	x1, [x0, #16]
  40a70c:	stp	x21, x22, [sp, #32]
  40a710:	mov	x21, x0
  40a714:	cbz	x1, 40a720 <ferror@plt+0x7db0>
  40a718:	ldr	w0, [x19]
  40a71c:	blr	x1
  40a720:	ldr	x1, [x19, #8]
  40a724:	ldr	x0, [x21, #24]
  40a728:	bl	4092f8 <ferror@plt+0x6988>
  40a72c:	str	xzr, [x19, #32]
  40a730:	mov	x20, x19
  40a734:	mov	x19, #0x0                   	// #0
  40a738:	ldr	x0, [x20, #16]
  40a73c:	cbz	x0, 40a76c <ferror@plt+0x7dfc>
  40a740:	ldr	x1, [x21, #16]
  40a744:	cbz	x1, 40a750 <ferror@plt+0x7de0>
  40a748:	ldr	w0, [x0]
  40a74c:	blr	x1
  40a750:	ldr	x0, [x20, #16]
  40a754:	ldr	x1, [x0, #8]
  40a758:	ldr	x0, [x21, #24]
  40a75c:	bl	4092f8 <ferror@plt+0x6988>
  40a760:	ldr	x0, [x20, #16]
  40a764:	str	x19, [x0, #32]
  40a768:	mov	x19, x0
  40a76c:	ldr	x0, [x20, #24]
  40a770:	cbz	x0, 40a7a0 <ferror@plt+0x7e30>
  40a774:	ldr	x1, [x21, #16]
  40a778:	cbz	x1, 40a784 <ferror@plt+0x7e14>
  40a77c:	ldr	w0, [x0]
  40a780:	blr	x1
  40a784:	ldr	x0, [x20, #24]
  40a788:	ldr	x1, [x0, #8]
  40a78c:	ldr	x0, [x21, #24]
  40a790:	bl	4092f8 <ferror@plt+0x6988>
  40a794:	ldr	x0, [x20, #24]
  40a798:	str	x19, [x0, #32]
  40a79c:	mov	x19, x0
  40a7a0:	ldr	x22, [x20, #32]
  40a7a4:	mov	x0, x20
  40a7a8:	mov	x1, #0x28                  	// #40
  40a7ac:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  40a7b0:	cbz	x22, 40a7bc <ferror@plt+0x7e4c>
  40a7b4:	mov	x20, x22
  40a7b8:	b	40a738 <ferror@plt+0x7dc8>
  40a7bc:	cbnz	x19, 40a730 <ferror@plt+0x7dc0>
  40a7c0:	ldp	x19, x20, [sp, #16]
  40a7c4:	ldp	x21, x22, [sp, #32]
  40a7c8:	ldp	x29, x30, [sp], #48
  40a7cc:	ret
  40a7d0:	ret
  40a7d4:	stp	x29, x30, [sp, #-64]!
  40a7d8:	mov	x29, sp
  40a7dc:	stp	x21, x22, [sp, #32]
  40a7e0:	mov	x21, x0
  40a7e4:	ldr	x0, [x0]
  40a7e8:	stp	x19, x20, [sp, #16]
  40a7ec:	str	x23, [sp, #48]
  40a7f0:	mov	x23, x1
  40a7f4:	cbz	x0, 40a84c <ferror@plt+0x7edc>
  40a7f8:	ldp	x20, x2, [x21]
  40a7fc:	mov	x0, x23
  40a800:	ldr	x1, [x20]
  40a804:	blr	x2
  40a808:	mov	w22, w0
  40a80c:	cmp	w0, #0x0
  40a810:	cbz	w0, 40a84c <ferror@plt+0x7edc>
  40a814:	ldp	x0, x19, [x20, #16]
  40a818:	csel	x19, x19, x0, ge  // ge = tcont
  40a81c:	cbz	x19, 40a84c <ferror@plt+0x7edc>
  40a820:	ldr	x1, [x19]
  40a824:	mov	x0, x23
  40a828:	ldr	x2, [x21, #8]
  40a82c:	blr	x2
  40a830:	cmp	w0, #0x0
  40a834:	cbnz	w0, 40a860 <ferror@plt+0x7ef0>
  40a838:	tbz	w22, #31, 40a8b0 <ferror@plt+0x7f40>
  40a83c:	ldr	x0, [x19, #24]
  40a840:	str	x20, [x19, #24]
  40a844:	str	x0, [x20, #16]
  40a848:	str	x19, [x21]
  40a84c:	ldp	x19, x20, [sp, #16]
  40a850:	ldp	x21, x22, [sp, #32]
  40a854:	ldr	x23, [sp, #48]
  40a858:	ldp	x29, x30, [sp], #64
  40a85c:	ret
  40a860:	b.ge	40a8a8 <ferror@plt+0x7f38>  // b.tcont
  40a864:	ldr	x1, [x19, #16]
  40a868:	cbz	x1, 40a838 <ferror@plt+0x7ec8>
  40a86c:	lsr	w3, w22, #31
  40a870:	lsr	w2, w0, #31
  40a874:	cmp	w3, #0x0
  40a878:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  40a87c:	b.eq	40a8c0 <ferror@plt+0x7f50>  // b.none
  40a880:	ldr	x0, [x19, #16]
  40a884:	ldr	x1, [x0, #24]
  40a888:	str	x19, [x0, #24]
  40a88c:	str	x1, [x19, #16]
  40a890:	str	x0, [x20, #16]
  40a894:	ldr	x1, [x0, #24]
  40a898:	str	x20, [x0, #24]
  40a89c:	str	x1, [x20, #16]
  40a8a0:	str	x0, [x21]
  40a8a4:	b	40a7f8 <ferror@plt+0x7e88>
  40a8a8:	ldr	x1, [x19, #24]
  40a8ac:	b	40a868 <ferror@plt+0x7ef8>
  40a8b0:	ldr	x0, [x19, #16]
  40a8b4:	str	x20, [x19, #16]
  40a8b8:	str	x0, [x20, #24]
  40a8bc:	b	40a848 <ferror@plt+0x7ed8>
  40a8c0:	cmp	w22, #0x0
  40a8c4:	cset	w1, gt
  40a8c8:	cmp	w0, #0x0
  40a8cc:	cset	w0, gt
  40a8d0:	cmp	w1, #0x0
  40a8d4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40a8d8:	b.eq	40a900 <ferror@plt+0x7f90>  // b.none
  40a8dc:	ldr	x0, [x19, #24]
  40a8e0:	ldr	x1, [x0, #16]
  40a8e4:	str	x19, [x0, #16]
  40a8e8:	str	x1, [x19, #24]
  40a8ec:	str	x0, [x20, #24]
  40a8f0:	ldr	x1, [x0, #16]
  40a8f4:	str	x20, [x0, #16]
  40a8f8:	str	x1, [x20, #24]
  40a8fc:	b	40a8a0 <ferror@plt+0x7f30>
  40a900:	cmp	w3, #0x0
  40a904:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40a908:	b.eq	40a920 <ferror@plt+0x7fb0>  // b.none
  40a90c:	ldr	x0, [x19, #24]
  40a910:	ldr	x1, [x0, #16]
  40a914:	str	x19, [x0, #16]
  40a918:	str	x1, [x19, #24]
  40a91c:	b	40a890 <ferror@plt+0x7f20>
  40a920:	cmp	w2, #0x0
  40a924:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40a928:	b.eq	40a7f8 <ferror@plt+0x7e88>  // b.none
  40a92c:	ldr	x0, [x19, #16]
  40a930:	ldr	x1, [x0, #24]
  40a934:	str	x19, [x0, #24]
  40a938:	str	x1, [x19, #16]
  40a93c:	b	40a8ec <ferror@plt+0x7f7c>
  40a940:	stp	x29, x30, [sp, #-64]!
  40a944:	mov	x29, sp
  40a948:	stp	x21, x22, [sp, #32]
  40a94c:	mov	x21, x0
  40a950:	ldr	x0, [x0]
  40a954:	stp	x19, x20, [sp, #16]
  40a958:	str	x23, [sp, #48]
  40a95c:	mov	w23, w1
  40a960:	cbz	x0, 40a9b8 <ferror@plt+0x8048>
  40a964:	ldp	x20, x2, [x21]
  40a968:	mov	w0, w23
  40a96c:	ldr	w1, [x20]
  40a970:	blr	x2
  40a974:	mov	w22, w0
  40a978:	cmp	w0, #0x0
  40a97c:	cbz	w0, 40a9b8 <ferror@plt+0x8048>
  40a980:	ldp	x0, x19, [x20, #16]
  40a984:	csel	x19, x19, x0, ge  // ge = tcont
  40a988:	cbz	x19, 40a9b8 <ferror@plt+0x8048>
  40a98c:	ldr	w1, [x19]
  40a990:	mov	w0, w23
  40a994:	ldr	x2, [x21, #8]
  40a998:	blr	x2
  40a99c:	cmp	w0, #0x0
  40a9a0:	cbnz	w0, 40a9cc <ferror@plt+0x805c>
  40a9a4:	tbz	w22, #31, 40aa1c <ferror@plt+0x80ac>
  40a9a8:	ldr	x0, [x19, #24]
  40a9ac:	str	x20, [x19, #24]
  40a9b0:	str	x0, [x20, #16]
  40a9b4:	str	x19, [x21]
  40a9b8:	ldp	x19, x20, [sp, #16]
  40a9bc:	ldp	x21, x22, [sp, #32]
  40a9c0:	ldr	x23, [sp, #48]
  40a9c4:	ldp	x29, x30, [sp], #64
  40a9c8:	ret
  40a9cc:	b.ge	40aa14 <ferror@plt+0x80a4>  // b.tcont
  40a9d0:	ldr	x1, [x19, #16]
  40a9d4:	cbz	x1, 40a9a4 <ferror@plt+0x8034>
  40a9d8:	lsr	w3, w22, #31
  40a9dc:	lsr	w2, w0, #31
  40a9e0:	cmp	w3, #0x0
  40a9e4:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  40a9e8:	b.eq	40aa2c <ferror@plt+0x80bc>  // b.none
  40a9ec:	ldr	x0, [x19, #16]
  40a9f0:	ldr	x1, [x0, #24]
  40a9f4:	str	x19, [x0, #24]
  40a9f8:	str	x1, [x19, #16]
  40a9fc:	str	x0, [x20, #16]
  40aa00:	ldr	x1, [x0, #24]
  40aa04:	str	x20, [x0, #24]
  40aa08:	str	x1, [x20, #16]
  40aa0c:	str	x0, [x21]
  40aa10:	b	40a964 <ferror@plt+0x7ff4>
  40aa14:	ldr	x1, [x19, #24]
  40aa18:	b	40a9d4 <ferror@plt+0x8064>
  40aa1c:	ldr	x0, [x19, #16]
  40aa20:	str	x20, [x19, #16]
  40aa24:	str	x0, [x20, #24]
  40aa28:	b	40a9b4 <ferror@plt+0x8044>
  40aa2c:	cmp	w22, #0x0
  40aa30:	cset	w1, gt
  40aa34:	cmp	w0, #0x0
  40aa38:	cset	w0, gt
  40aa3c:	cmp	w1, #0x0
  40aa40:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40aa44:	b.eq	40aa6c <ferror@plt+0x80fc>  // b.none
  40aa48:	ldr	x0, [x19, #24]
  40aa4c:	ldr	x1, [x0, #16]
  40aa50:	str	x19, [x0, #16]
  40aa54:	str	x1, [x19, #24]
  40aa58:	str	x0, [x20, #24]
  40aa5c:	ldr	x1, [x0, #16]
  40aa60:	str	x20, [x0, #16]
  40aa64:	str	x1, [x20, #24]
  40aa68:	b	40aa0c <ferror@plt+0x809c>
  40aa6c:	cmp	w3, #0x0
  40aa70:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40aa74:	b.eq	40aa8c <ferror@plt+0x811c>  // b.none
  40aa78:	ldr	x0, [x19, #24]
  40aa7c:	ldr	x1, [x0, #16]
  40aa80:	str	x19, [x0, #16]
  40aa84:	str	x1, [x19, #24]
  40aa88:	b	40a9fc <ferror@plt+0x808c>
  40aa8c:	cmp	w2, #0x0
  40aa90:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40aa94:	b.eq	40a964 <ferror@plt+0x7ff4>  // b.none
  40aa98:	ldr	x0, [x19, #16]
  40aa9c:	ldr	x1, [x0, #24]
  40aaa0:	str	x19, [x0, #24]
  40aaa4:	str	x1, [x19, #16]
  40aaa8:	b	40aa58 <ferror@plt+0x80e8>
  40aaac:	ldr	x2, [x0]
  40aab0:	cbz	x2, 40ab10 <ferror@plt+0x81a0>
  40aab4:	stp	x29, x30, [sp, #-32]!
  40aab8:	mov	x29, sp
  40aabc:	stp	x19, x20, [sp, #16]
  40aac0:	mov	x19, x0
  40aac4:	mov	w20, w1
  40aac8:	bl	40a940 <ferror@plt+0x7fd0>
  40aacc:	ldp	x0, x2, [x19]
  40aad0:	mov	w1, w20
  40aad4:	ldr	w0, [x0]
  40aad8:	blr	x2
  40aadc:	cmp	w0, #0x0
  40aae0:	ldr	x0, [x19]
  40aae4:	b.gt	40aafc <ferror@plt+0x818c>
  40aae8:	ldr	x1, [x0, #24]
  40aaec:	cbz	x1, 40ab08 <ferror@plt+0x8198>
  40aaf0:	mov	x0, x1
  40aaf4:	ldr	x1, [x1, #16]
  40aaf8:	cbnz	x1, 40aaf0 <ferror@plt+0x8180>
  40aafc:	ldp	x19, x20, [sp, #16]
  40ab00:	ldp	x29, x30, [sp], #32
  40ab04:	ret
  40ab08:	mov	x0, #0x0                   	// #0
  40ab0c:	b	40aafc <ferror@plt+0x818c>
  40ab10:	mov	x0, #0x0                   	// #0
  40ab14:	ret
  40ab18:	stp	x29, x30, [sp, #-32]!
  40ab1c:	mov	x29, sp
  40ab20:	stp	x19, x20, [sp, #16]
  40ab24:	mov	x19, x0
  40ab28:	mov	w20, w1
  40ab2c:	bl	40a940 <ferror@plt+0x7fd0>
  40ab30:	ldr	x0, [x19]
  40ab34:	cbnz	x0, 40ab48 <ferror@plt+0x81d8>
  40ab38:	mov	x0, #0x0                   	// #0
  40ab3c:	ldp	x19, x20, [sp, #16]
  40ab40:	ldp	x29, x30, [sp], #32
  40ab44:	ret
  40ab48:	ldr	w0, [x0]
  40ab4c:	mov	w1, w20
  40ab50:	ldr	x2, [x19, #8]
  40ab54:	blr	x2
  40ab58:	cbnz	w0, 40ab38 <ferror@plt+0x81c8>
  40ab5c:	ldr	x0, [x19]
  40ab60:	cbz	x0, 40ab38 <ferror@plt+0x81c8>
  40ab64:	ldr	x0, [x0, #8]
  40ab68:	b	40ab3c <ferror@plt+0x81cc>
  40ab6c:	mov	x0, x1
  40ab70:	mov	x1, x2
  40ab74:	stp	x29, x30, [sp, #-16]!
  40ab78:	mov	x29, sp
  40ab7c:	ldrb	w2, [x2, #8]
  40ab80:	ldr	x1, [x1]
  40ab84:	bl	409ef4 <ferror@plt+0x7584>
  40ab88:	mov	w0, #0x0                   	// #0
  40ab8c:	ldp	x29, x30, [sp], #16
  40ab90:	ret
  40ab94:	ldrb	w3, [x0]
  40ab98:	cbnz	x1, 40abbc <ferror@plt+0x824c>
  40ab9c:	stp	x29, x30, [sp, #-16]!
  40aba0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40aba4:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40aba8:	mov	x29, sp
  40abac:	add	x2, x2, #0xb24
  40abb0:	add	x0, x0, #0xb35
  40abb4:	mov	w1, #0x71b                 	// #1819
  40abb8:	bl	402980 <ferror@plt+0x10>
  40abbc:	tbz	w3, #7, 40ac98 <ferror@plt+0x8328>
  40abc0:	mov	w4, w3
  40abc4:	mov	x5, x0
  40abc8:	mov	x0, #0x0                   	// #0
  40abcc:	tbz	w4, #7, 40abdc <ferror@plt+0x826c>
  40abd0:	add	x0, x0, #0x1
  40abd4:	lsl	w4, w4, #1
  40abd8:	b	40abcc <ferror@plt+0x825c>
  40abdc:	sub	x4, x0, #0x2
  40abe0:	cmp	x4, #0x4
  40abe4:	ccmp	x0, x1, #0x2, ls  // ls = plast
  40abe8:	b.ls	40abfc <ferror@plt+0x828c>  // b.plast
  40abec:	mov	w0, #0xffffffff            	// #-1
  40abf0:	str	w0, [x2]
  40abf4:	mov	w0, #0x0                   	// #0
  40abf8:	ret
  40abfc:	mov	w1, #0x7                   	// #7
  40ac00:	sub	w4, w1, w0
  40ac04:	mov	w1, #0x1                   	// #1
  40ac08:	lsl	w1, w1, w4
  40ac0c:	sub	w1, w1, #0x1
  40ac10:	and	w1, w1, w3
  40ac14:	mov	x3, #0x1                   	// #1
  40ac18:	ldrb	w4, [x5, x3]
  40ac1c:	and	w6, w4, #0xc0
  40ac20:	cmp	w6, #0x80
  40ac24:	b.ne	40abec <ferror@plt+0x827c>  // b.any
  40ac28:	and	w4, w4, #0x3f
  40ac2c:	add	x3, x3, #0x1
  40ac30:	orr	w1, w4, w1, lsl #6
  40ac34:	cmp	x0, x3
  40ac38:	b.hi	40ac18 <ferror@plt+0x82a8>  // b.pmore
  40ac3c:	cmp	w1, #0x7f
  40ac40:	b.ls	40abec <ferror@plt+0x827c>  // b.plast
  40ac44:	cmp	w1, #0x7ff
  40ac48:	ccmp	x0, #0x2, #0x0, ls  // ls = plast
  40ac4c:	b.hi	40abec <ferror@plt+0x827c>  // b.pmore
  40ac50:	mov	w3, #0xffff                	// #65535
  40ac54:	cmp	w1, w3
  40ac58:	ccmp	x0, #0x3, #0x0, ls  // ls = plast
  40ac5c:	b.hi	40abec <ferror@plt+0x827c>  // b.pmore
  40ac60:	mov	w3, #0x1fffff              	// #2097151
  40ac64:	cmp	w1, w3
  40ac68:	ccmp	x0, #0x4, #0x0, ls  // ls = plast
  40ac6c:	b.hi	40abec <ferror@plt+0x827c>  // b.pmore
  40ac70:	mov	w3, #0x3ffffff             	// #67108863
  40ac74:	cmp	w1, w3
  40ac78:	ccmp	x0, #0x6, #0x0, ls  // ls = plast
  40ac7c:	b.eq	40abec <ferror@plt+0x827c>  // b.none
  40ac80:	mov	w3, #0xffff2800            	// #-55296
  40ac84:	add	w3, w1, w3
  40ac88:	cmp	w3, #0x7ff
  40ac8c:	b.ls	40abec <ferror@plt+0x827c>  // b.plast
  40ac90:	str	w1, [x2]
  40ac94:	ret
  40ac98:	mov	w0, #0x1                   	// #1
  40ac9c:	str	w3, [x2]
  40aca0:	ret
  40aca4:	stp	x29, x30, [sp, #-32]!
  40aca8:	mov	x29, sp
  40acac:	stp	x19, x20, [sp, #16]
  40acb0:	mov	x19, x0
  40acb4:	ldr	w20, [x0, #40]
  40acb8:	cmp	w20, #0x0
  40acbc:	b.le	40accc <ferror@plt+0x835c>
  40acc0:	ldr	w0, [x0, #36]
  40acc4:	cmp	w0, #0x1
  40acc8:	b.hi	40acdc <ferror@plt+0x836c>  // b.pmore
  40accc:	str	w20, [x19, #28]
  40acd0:	ldp	x19, x20, [sp, #16]
  40acd4:	ldp	x29, x30, [sp], #32
  40acd8:	ret
  40acdc:	ldr	x0, [x19, #16]
  40ace0:	cbz	x0, 40acfc <ferror@plt+0x838c>
  40ace4:	bl	402330 <strlen@plt>
  40ace8:	sub	w0, w20, w0
  40acec:	add	w1, w20, #0x20
  40acf0:	cmp	w0, #0x20
  40acf4:	csel	w20, w1, w20, lt  // lt = tstop
  40acf8:	b	40accc <ferror@plt+0x835c>
  40acfc:	mov	w0, #0x0                   	// #0
  40ad00:	b	40ace8 <ferror@plt+0x8378>
  40ad04:	stp	x29, x30, [sp, #-64]!
  40ad08:	mov	x29, sp
  40ad0c:	stp	x19, x20, [sp, #16]
  40ad10:	mov	x20, x0
  40ad14:	ldr	x19, [x0, #176]
  40ad18:	stp	x21, x22, [sp, #32]
  40ad1c:	mov	x22, x1
  40ad20:	ldp	x1, x0, [x19, #24]
  40ad24:	str	x23, [sp, #48]
  40ad28:	sxtw	x23, w2
  40ad2c:	mov	x21, x23
  40ad30:	sub	x0, x0, x1
  40ad34:	cmp	x0, w23, sxtw
  40ad38:	b.cs	40ad48 <ferror@plt+0x83d8>  // b.hs, b.nlast
  40ad3c:	mov	x1, x23
  40ad40:	mov	x0, x19
  40ad44:	bl	439ca4 <_obstack_newchunk@@Base>
  40ad48:	ldr	x0, [x19, #24]
  40ad4c:	mov	x2, x23
  40ad50:	mov	x1, x22
  40ad54:	bl	4022e0 <memcpy@plt>
  40ad58:	ldr	x0, [x19, #24]
  40ad5c:	add	x0, x0, x23
  40ad60:	str	x0, [x19, #24]
  40ad64:	mov	x0, #0x0                   	// #0
  40ad68:	cmp	w21, w0
  40ad6c:	b.le	40ad98 <ferror@plt+0x8428>
  40ad70:	ldrb	w1, [x22, x0]
  40ad74:	cmp	w1, #0xa
  40ad78:	b.eq	40ad90 <ferror@plt+0x8420>  // b.none
  40ad7c:	ldr	w2, [x20, #200]
  40ad80:	add	w2, w2, #0x1
  40ad84:	add	x0, x0, #0x1
  40ad88:	str	w2, [x20, #200]
  40ad8c:	b	40ad68 <ferror@plt+0x83f8>
  40ad90:	mov	w2, #0x0                   	// #0
  40ad94:	b	40ad84 <ferror@plt+0x8414>
  40ad98:	ldp	x19, x20, [sp, #16]
  40ad9c:	ldp	x21, x22, [sp, #32]
  40ada0:	ldr	x23, [sp, #48]
  40ada4:	ldp	x29, x30, [sp], #64
  40ada8:	ret
  40adac:	ldr	x0, [x0, #32]
  40adb0:	b	424c58 <ferror@plt+0x222e8>
  40adb4:	cbnz	w1, 40adc0 <ferror@plt+0x8450>
  40adb8:	ldr	x0, [x0, #32]
  40adbc:	b	424a48 <ferror@plt+0x220d8>
  40adc0:	mov	w0, #0x0                   	// #0
  40adc4:	ret
  40adc8:	stp	x29, x30, [sp, #-48]!
  40adcc:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  40add0:	add	x2, x0, #0x14c
  40add4:	mov	x29, sp
  40add8:	stp	x19, x20, [sp, #16]
  40addc:	add	x19, x0, #0x58
  40ade0:	str	x21, [sp, #32]
  40ade4:	stp	xzr, xzr, [x0]
  40ade8:	stp	xzr, xzr, [x0, #16]
  40adec:	stp	xzr, xzr, [x0, #32]
  40adf0:	stp	xzr, xzr, [x0, #48]
  40adf4:	stp	xzr, xzr, [x0, #64]
  40adf8:	str	xzr, [x0, #80]
  40adfc:	stp	xzr, xzr, [x0, #88]
  40ae00:	ldr	x1, [x1, #1336]
  40ae04:	stp	xzr, xzr, [x19, #16]
  40ae08:	stp	xzr, xzr, [x19, #32]
  40ae0c:	stp	xzr, xzr, [x19, #48]
  40ae10:	stp	xzr, xzr, [x19, #64]
  40ae14:	str	xzr, [x19, #80]
  40ae18:	str	x1, [x0, #192]
  40ae1c:	add	x1, x0, #0xcc
  40ae20:	stp	x0, xzr, [x0, #176]
  40ae24:	str	wzr, [x0, #200]
  40ae28:	strb	wzr, [x1], #1
  40ae2c:	cmp	x2, x1
  40ae30:	b.ne	40ae28 <ferror@plt+0x84b8>  // b.any
  40ae34:	mov	w1, #0x1                   	// #1
  40ae38:	strb	w1, [x0, #332]
  40ae3c:	adrp	x21, 410000 <ferror@plt+0xd690>
  40ae40:	adrp	x20, 410000 <ferror@plt+0xd690>
  40ae44:	add	x21, x21, #0xce8
  40ae48:	add	x20, x20, #0xcc0
  40ae4c:	mov	x4, x21
  40ae50:	mov	x3, x20
  40ae54:	mov	x2, #0x0                   	// #0
  40ae58:	mov	x1, #0x0                   	// #0
  40ae5c:	bl	439c78 <_obstack_begin@@Base>
  40ae60:	mov	x4, x21
  40ae64:	mov	x3, x20
  40ae68:	mov	x0, x19
  40ae6c:	mov	x2, #0x0                   	// #0
  40ae70:	ldp	x19, x20, [sp, #16]
  40ae74:	mov	x1, #0x0                   	// #0
  40ae78:	ldr	x21, [sp, #32]
  40ae7c:	ldp	x29, x30, [sp], #48
  40ae80:	b	439c78 <_obstack_begin@@Base>
  40ae84:	stp	x29, x30, [sp, #-32]!
  40ae88:	mov	x1, #0x0                   	// #0
  40ae8c:	mov	x29, sp
  40ae90:	str	x19, [sp, #16]
  40ae94:	mov	x19, x0
  40ae98:	add	x0, x0, #0x58
  40ae9c:	bl	439df4 <_obstack_free@@Base>
  40aea0:	mov	x0, x19
  40aea4:	mov	x1, #0x0                   	// #0
  40aea8:	ldr	x19, [sp, #16]
  40aeac:	ldp	x29, x30, [sp], #32
  40aeb0:	b	439df4 <_obstack_free@@Base>
  40aeb4:	stp	x29, x30, [sp, #-32]!
  40aeb8:	mov	x29, sp
  40aebc:	str	x19, [sp, #16]
  40aec0:	mov	x19, x0
  40aec4:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40aec8:	add	x0, x0, #0xc38
  40aecc:	str	x0, [x19]
  40aed0:	ldr	x0, [x19, #56]
  40aed4:	cbz	x0, 40aee4 <ferror@plt+0x8574>
  40aed8:	ldr	x1, [x0]
  40aedc:	ldr	x1, [x1, #8]
  40aee0:	blr	x1
  40aee4:	ldr	x0, [x19, #8]
  40aee8:	bl	40ae84 <ferror@plt+0x8514>
  40aeec:	ldr	x0, [x19, #8]
  40aef0:	bl	402730 <free@plt>
  40aef4:	ldr	x0, [x19, #16]
  40aef8:	ldr	x19, [sp, #16]
  40aefc:	ldp	x29, x30, [sp], #32
  40af00:	b	402730 <free@plt>
  40af04:	stp	x29, x30, [sp, #-32]!
  40af08:	mov	x29, sp
  40af0c:	str	x19, [sp, #16]
  40af10:	mov	x19, x0
  40af14:	bl	40aeb4 <ferror@plt+0x8544>
  40af18:	mov	x0, x19
  40af1c:	mov	x1, #0x48                  	// #72
  40af20:	ldr	x19, [sp, #16]
  40af24:	ldp	x29, x30, [sp], #32
  40af28:	b	43a470 <_obstack_memory_used@@Base+0x608>
  40af2c:	str	w1, [x0, #40]
  40af30:	b	40aca4 <ferror@plt+0x8334>
  40af34:	stp	x29, x30, [sp, #-32]!
  40af38:	mov	x29, sp
  40af3c:	str	x19, [sp, #16]
  40af40:	mov	x19, x0
  40af44:	ldr	x0, [x0, #8]
  40af48:	ldr	x0, [x0, #176]
  40af4c:	ldp	x2, x1, [x0, #8]
  40af50:	cmp	x2, x1
  40af54:	b.cs	40af7c <ferror@plt+0x860c>  // b.hs, b.nlast
  40af58:	ldr	x2, [x0, #32]
  40af5c:	cmp	x2, x1
  40af60:	b.ls	40af7c <ferror@plt+0x860c>  // b.plast
  40af64:	str	x1, [x0, #24]
  40af68:	ldr	x0, [x19, #8]
  40af6c:	ldr	x19, [sp, #16]
  40af70:	str	wzr, [x0, #200]
  40af74:	ldp	x29, x30, [sp], #32
  40af78:	ret
  40af7c:	bl	439df4 <_obstack_free@@Base>
  40af80:	b	40af68 <ferror@plt+0x85f8>
  40af84:	stp	x29, x30, [sp, #-32]!
  40af88:	mov	x29, sp
  40af8c:	stp	x19, x20, [sp, #16]
  40af90:	mov	x19, x0
  40af94:	mov	x20, x1
  40af98:	ldr	x0, [x0, #16]
  40af9c:	bl	402730 <free@plt>
  40afa0:	str	x20, [x19, #16]
  40afa4:	mov	x0, x19
  40afa8:	bl	40aca4 <ferror@plt+0x8334>
  40afac:	str	wzr, [x19, #32]
  40afb0:	strb	wzr, [x19, #64]
  40afb4:	ldp	x19, x20, [sp, #16]
  40afb8:	ldp	x29, x30, [sp], #32
  40afbc:	ret
  40afc0:	mov	x1, x0
  40afc4:	ldr	x0, [x0, #16]
  40afc8:	str	xzr, [x1, #16]
  40afcc:	ret
  40afd0:	stp	x29, x30, [sp, #-32]!
  40afd4:	mov	x29, sp
  40afd8:	str	x19, [sp, #16]
  40afdc:	mov	x19, x0
  40afe0:	ldr	x0, [x0, #16]
  40afe4:	cbz	x0, 40aff0 <ferror@plt+0x8680>
  40afe8:	bl	402730 <free@plt>
  40afec:	str	xzr, [x19, #16]
  40aff0:	ldr	x19, [sp, #16]
  40aff4:	ldp	x29, x30, [sp], #32
  40aff8:	ret
  40affc:	stp	x29, x30, [sp, #-48]!
  40b000:	mov	x29, sp
  40b004:	stp	x19, x20, [sp, #16]
  40b008:	mov	x19, x0
  40b00c:	mov	w20, w1
  40b010:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40b014:	mov	x1, #0x150                 	// #336
  40b018:	add	x0, x0, #0xc38
  40b01c:	str	x0, [x19]
  40b020:	mov	x0, #0x1                   	// #1
  40b024:	str	x21, [sp, #32]
  40b028:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  40b02c:	mov	x21, x0
  40b030:	bl	40adc8 <ferror@plt+0x8458>
  40b034:	stp	x21, xzr, [x19, #8]
  40b038:	mov	w0, #0x10000               	// #65536
  40b03c:	stp	xzr, xzr, [x19, #24]
  40b040:	mov	x1, #0x0                   	// #0
  40b044:	str	w20, [x19, #40]
  40b048:	stp	xzr, xzr, [x19, #48]
  40b04c:	str	w0, [x19, #64]
  40b050:	mov	x0, x19
  40b054:	ldp	x19, x20, [sp, #16]
  40b058:	ldr	x21, [sp, #32]
  40b05c:	ldp	x29, x30, [sp], #48
  40b060:	b	40af84 <ferror@plt+0x8614>
  40b064:	stp	x29, x30, [sp, #-32]!
  40b068:	mov	x29, sp
  40b06c:	stp	x19, x20, [sp, #16]
  40b070:	ldr	x20, [x0, #8]
  40b074:	ldr	x19, [x20, #176]
  40b078:	ldp	x0, x1, [x19, #24]
  40b07c:	cmp	x1, x0
  40b080:	b.ne	40b090 <ferror@plt+0x8720>  // b.any
  40b084:	mov	x0, x19
  40b088:	mov	x1, #0x1                   	// #1
  40b08c:	bl	439ca4 <_obstack_newchunk@@Base>
  40b090:	ldr	x0, [x19, #24]
  40b094:	add	x1, x0, #0x1
  40b098:	str	x1, [x19, #24]
  40b09c:	strb	wzr, [x0]
  40b0a0:	ldr	x0, [x20, #176]
  40b0a4:	ldp	x19, x20, [sp, #16]
  40b0a8:	ldp	x29, x30, [sp], #32
  40b0ac:	ldr	x0, [x0, #16]
  40b0b0:	ret
  40b0b4:	stp	x29, x30, [sp, #-32]!
  40b0b8:	mov	x29, sp
  40b0bc:	str	x19, [sp, #16]
  40b0c0:	mov	x19, x0
  40b0c4:	bl	40b064 <ferror@plt+0x86f4>
  40b0c8:	ldr	x1, [x19, #8]
  40b0cc:	ldr	x1, [x1, #192]
  40b0d0:	bl	402340 <fputs@plt>
  40b0d4:	mov	x0, x19
  40b0d8:	ldr	x19, [sp, #16]
  40b0dc:	ldp	x29, x30, [sp], #32
  40b0e0:	b	40af34 <ferror@plt+0x85c4>
  40b0e4:	ldr	x1, [x0, #8]
  40b0e8:	strb	wzr, [x0, #64]
  40b0ec:	ldrb	w1, [x1, #332]
  40b0f0:	str	wzr, [x0, #32]
  40b0f4:	cbz	w1, 40b120 <ferror@plt+0x87b0>
  40b0f8:	stp	x29, x30, [sp, #-32]!
  40b0fc:	mov	x29, sp
  40b100:	str	x19, [sp, #16]
  40b104:	mov	x19, x0
  40b108:	bl	40b0b4 <ferror@plt+0x8744>
  40b10c:	ldr	x0, [x19, #8]
  40b110:	ldr	x19, [sp, #16]
  40b114:	ldp	x29, x30, [sp], #32
  40b118:	ldr	x0, [x0, #192]
  40b11c:	b	4027a0 <fflush@plt>
  40b120:	ret
  40b124:	stp	x29, x30, [sp, #-32]!
  40b128:	mov	x29, sp
  40b12c:	str	x19, [sp, #16]
  40b130:	mov	x19, x0
  40b134:	str	wzr, [x0, #32]
  40b138:	strb	wzr, [x0, #64]
  40b13c:	bl	40b0b4 <ferror@plt+0x8744>
  40b140:	ldr	x0, [x19, #8]
  40b144:	ldr	x19, [sp, #16]
  40b148:	ldp	x29, x30, [sp], #32
  40b14c:	ldr	x0, [x0, #192]
  40b150:	b	4027a0 <fflush@plt>
  40b154:	stp	x29, x30, [sp, #-64]!
  40b158:	mov	x29, sp
  40b15c:	stp	x19, x20, [sp, #16]
  40b160:	mov	x20, x0
  40b164:	stp	x21, x22, [sp, #32]
  40b168:	adrp	x22, 44b000 <_obstack_memory_used@@Base+0x11198>
  40b16c:	add	x22, x22, #0xb4e
  40b170:	str	x23, [sp, #48]
  40b174:	and	w23, w1, #0xff
  40b178:	bl	40b064 <ferror@plt+0x86f4>
  40b17c:	mov	x19, x0
  40b180:	ldr	x0, [x20, #8]
  40b184:	ldr	x21, [x0, #192]
  40b188:	ldrb	w2, [x19]
  40b18c:	cbz	w2, 40b228 <ferror@plt+0x88b8>
  40b190:	cmp	w2, #0x22
  40b194:	b.eq	40b1f8 <ferror@plt+0x8888>  // b.none
  40b198:	b.hi	40b1b4 <ferror@plt+0x8844>  // b.pmore
  40b19c:	cmp	w2, #0xa
  40b1a0:	b.eq	40b1ec <ferror@plt+0x887c>  // b.none
  40b1a4:	cmp	w2, #0x20
  40b1a8:	b.ne	40b1dc <ferror@plt+0x886c>  // b.any
  40b1ac:	cbz	w23, 40b1dc <ferror@plt+0x886c>
  40b1b0:	b	40b1f8 <ferror@plt+0x8888>
  40b1b4:	cmp	w2, #0x5c
  40b1b8:	b.eq	40b208 <ferror@plt+0x8898>  // b.none
  40b1bc:	b.hi	40b1cc <ferror@plt+0x885c>  // b.pmore
  40b1c0:	and	w2, w2, #0xfffffffd
  40b1c4:	cmp	w2, #0x3c
  40b1c8:	b	40b1a8 <ferror@plt+0x8838>
  40b1cc:	sub	w2, w2, #0x7b
  40b1d0:	and	w2, w2, #0xff
  40b1d4:	cmp	w2, #0x2
  40b1d8:	b.ls	40b1ac <ferror@plt+0x883c>  // b.plast
  40b1dc:	ldrb	w0, [x19], #1
  40b1e0:	mov	x1, x21
  40b1e4:	bl	402400 <fputc@plt>
  40b1e8:	b	40b188 <ferror@plt+0x8818>
  40b1ec:	mov	x1, x21
  40b1f0:	mov	x0, x22
  40b1f4:	bl	402340 <fputs@plt>
  40b1f8:	mov	x1, x21
  40b1fc:	mov	w0, #0x5c                  	// #92
  40b200:	bl	402400 <fputc@plt>
  40b204:	b	40b1dc <ferror@plt+0x886c>
  40b208:	ldrb	w0, [x19, #1]
  40b20c:	cbnz	w0, 40b1f8 <ferror@plt+0x8888>
  40b210:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40b214:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40b218:	add	x2, x2, #0xb51
  40b21c:	add	x0, x0, #0xb35
  40b220:	mov	w1, #0x378                 	// #888
  40b224:	bl	402980 <ferror@plt+0x10>
  40b228:	mov	x0, x20
  40b22c:	ldp	x19, x20, [sp, #16]
  40b230:	ldp	x21, x22, [sp, #32]
  40b234:	ldr	x23, [sp, #48]
  40b238:	ldp	x29, x30, [sp], #64
  40b23c:	b	40af34 <ferror@plt+0x85c4>
  40b240:	ldr	x0, [x0, #8]
  40b244:	ldr	x0, [x0, #176]
  40b248:	ldp	x2, x1, [x0, #16]
  40b24c:	sub	x0, x1, #0x1
  40b250:	cmp	x2, x1
  40b254:	csel	x0, x0, xzr, ne  // ne = any
  40b258:	ret
  40b25c:	ldr	x2, [x0, #8]
  40b260:	ldr	w1, [x0, #28]
  40b264:	ldr	w0, [x2, #200]
  40b268:	sub	w0, w1, w0
  40b26c:	ret
  40b270:	stp	x29, x30, [sp, #-32]!
  40b274:	mov	x29, sp
  40b278:	stp	x19, x20, [sp, #16]
  40b27c:	mov	x19, x0
  40b280:	ldr	x0, [x0, #8]
  40b284:	ldr	x20, [x0, #176]
  40b288:	ldp	x0, x1, [x20, #24]
  40b28c:	cmp	x1, x0
  40b290:	b.ne	40b2a0 <ferror@plt+0x8930>  // b.any
  40b294:	mov	x0, x20
  40b298:	mov	x1, #0x1                   	// #1
  40b29c:	bl	439ca4 <_obstack_newchunk@@Base>
  40b2a0:	ldr	x0, [x20, #24]
  40b2a4:	add	x1, x0, #0x1
  40b2a8:	str	x1, [x20, #24]
  40b2ac:	mov	w1, #0xa                   	// #10
  40b2b0:	strb	w1, [x0]
  40b2b4:	strb	wzr, [x19, #65]
  40b2b8:	ldr	x0, [x19, #8]
  40b2bc:	ldp	x19, x20, [sp, #16]
  40b2c0:	str	wzr, [x0, #200]
  40b2c4:	ldp	x29, x30, [sp], #32
  40b2c8:	ret
  40b2cc:	stp	x29, x30, [sp, #-48]!
  40b2d0:	mov	x29, sp
  40b2d4:	stp	x19, x20, [sp, #16]
  40b2d8:	mov	x19, x0
  40b2dc:	str	x21, [sp, #32]
  40b2e0:	mov	w21, w1
  40b2e4:	ldr	w1, [x0, #40]
  40b2e8:	cmp	w1, #0x0
  40b2ec:	b.gt	40b334 <ferror@plt+0x89c4>
  40b2f0:	ldr	x0, [x19, #8]
  40b2f4:	ldr	x20, [x0, #176]
  40b2f8:	ldp	x0, x1, [x20, #24]
  40b2fc:	cmp	x1, x0
  40b300:	b.ne	40b310 <ferror@plt+0x89a0>  // b.any
  40b304:	mov	x0, x20
  40b308:	mov	x1, #0x1                   	// #1
  40b30c:	bl	439ca4 <_obstack_newchunk@@Base>
  40b310:	ldr	x0, [x20, #24]
  40b314:	add	x1, x0, #0x1
  40b318:	str	x1, [x20, #24]
  40b31c:	strb	w21, [x0]
  40b320:	ldr	x1, [x19, #8]
  40b324:	ldr	w0, [x1, #200]
  40b328:	add	w0, w0, #0x1
  40b32c:	str	w0, [x1, #200]
  40b330:	b	40b364 <ferror@plt+0x89f4>
  40b334:	ldr	x2, [x0, #8]
  40b338:	ldr	w1, [x0, #28]
  40b33c:	ldr	w2, [x2, #200]
  40b340:	sub	w1, w1, w2
  40b344:	cmp	w1, #0x0
  40b348:	b.gt	40b2f0 <ferror@plt+0x8980>
  40b34c:	bl	40b270 <ferror@plt+0x8900>
  40b350:	and	x1, x21, #0xff
  40b354:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  40b358:	add	x0, x0, #0x21a
  40b35c:	ldrh	w0, [x0, x1, lsl #1]
  40b360:	tbz	w0, #6, 40b2f0 <ferror@plt+0x8980>
  40b364:	ldp	x19, x20, [sp, #16]
  40b368:	ldr	x21, [sp, #32]
  40b36c:	ldp	x29, x30, [sp], #48
  40b370:	ret
  40b374:	stp	x29, x30, [sp, #-48]!
  40b378:	mov	x29, sp
  40b37c:	str	x21, [sp, #32]
  40b380:	ldr	w21, [x0, #32]
  40b384:	stp	x19, x20, [sp, #16]
  40b388:	mov	x19, x0
  40b38c:	mov	w20, #0x0                   	// #0
  40b390:	cmp	w20, w21
  40b394:	b.ge	40b3ac <ferror@plt+0x8a3c>  // b.tcont
  40b398:	mov	x0, x19
  40b39c:	mov	w1, #0x20                  	// #32
  40b3a0:	add	w20, w20, #0x1
  40b3a4:	bl	40b2cc <ferror@plt+0x895c>
  40b3a8:	b	40b390 <ferror@plt+0x8a20>
  40b3ac:	ldp	x19, x20, [sp, #16]
  40b3b0:	ldr	x21, [sp, #32]
  40b3b4:	ldp	x29, x30, [sp], #48
  40b3b8:	ret
  40b3bc:	stp	x29, x30, [sp, #-32]!
  40b3c0:	mov	x29, sp
  40b3c4:	stp	x19, x20, [sp, #16]
  40b3c8:	ldr	x20, [x0, #16]
  40b3cc:	cbz	x20, 40b3e4 <ferror@plt+0x8a74>
  40b3d0:	ldr	w1, [x0, #36]
  40b3d4:	mov	x19, x0
  40b3d8:	cbz	w1, 40b3f0 <ferror@plt+0x8a80>
  40b3dc:	cmp	w1, #0x2
  40b3e0:	b.eq	40b410 <ferror@plt+0x8aa0>  // b.none
  40b3e4:	ldp	x19, x20, [sp, #16]
  40b3e8:	ldp	x29, x30, [sp], #32
  40b3ec:	ret
  40b3f0:	ldrb	w1, [x0, #64]
  40b3f4:	cbz	w1, 40b404 <ferror@plt+0x8a94>
  40b3f8:	ldp	x19, x20, [sp, #16]
  40b3fc:	ldp	x29, x30, [sp], #32
  40b400:	b	40b374 <ferror@plt+0x8a04>
  40b404:	ldr	w0, [x0, #32]
  40b408:	add	w0, w0, #0x3
  40b40c:	str	w0, [x19, #32]
  40b410:	mov	x0, x20
  40b414:	bl	402330 <strlen@plt>
  40b418:	mov	w2, w0
  40b41c:	mov	x1, x20
  40b420:	ldr	x0, [x19, #8]
  40b424:	bl	40ad04 <ferror@plt+0x8394>
  40b428:	mov	w0, #0x1                   	// #1
  40b42c:	strb	w0, [x19, #64]
  40b430:	b	40b3e4 <ferror@plt+0x8a74>
  40b434:	stp	x29, x30, [sp, #-48]!
  40b438:	mov	x29, sp
  40b43c:	stp	x19, x20, [sp, #16]
  40b440:	mov	x19, x1
  40b444:	mov	x20, x0
  40b448:	ldr	x1, [x0, #8]
  40b44c:	ldr	w1, [x1, #200]
  40b450:	str	x21, [sp, #32]
  40b454:	mov	x21, x2
  40b458:	cbnz	w1, 40b488 <ferror@plt+0x8b18>
  40b45c:	bl	40b3bc <ferror@plt+0x8a4c>
  40b460:	ldr	w0, [x20, #40]
  40b464:	cmp	w0, #0x0
  40b468:	b.le	40b488 <ferror@plt+0x8b18>
  40b46c:	cmp	x19, x21
  40b470:	b.eq	40b488 <ferror@plt+0x8b18>  // b.none
  40b474:	ldrb	w0, [x19]
  40b478:	cmp	w0, #0x20
  40b47c:	b.ne	40b488 <ferror@plt+0x8b18>  // b.any
  40b480:	add	x19, x19, #0x1
  40b484:	b	40b46c <ferror@plt+0x8afc>
  40b488:	sub	w2, w21, w19
  40b48c:	mov	x1, x19
  40b490:	ldr	x0, [x20, #8]
  40b494:	ldp	x19, x20, [sp, #16]
  40b498:	ldr	x21, [sp, #32]
  40b49c:	ldp	x29, x30, [sp], #48
  40b4a0:	b	40ad04 <ferror@plt+0x8394>
  40b4a4:	ldr	w3, [x0, #40]
  40b4a8:	cmp	w3, #0x0
  40b4ac:	b.le	40b590 <ferror@plt+0x8c20>
  40b4b0:	stp	x29, x30, [sp, #-64]!
  40b4b4:	mov	x29, sp
  40b4b8:	stp	x19, x20, [sp, #16]
  40b4bc:	mov	x20, x0
  40b4c0:	stp	x21, x22, [sp, #32]
  40b4c4:	mov	x21, x1
  40b4c8:	mov	x22, x2
  40b4cc:	str	x23, [sp, #48]
  40b4d0:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x1d198>
  40b4d4:	add	x23, x23, #0x21a
  40b4d8:	cmp	x22, x21
  40b4dc:	b.eq	40b594 <ferror@plt+0x8c24>  // b.none
  40b4e0:	mov	x19, x21
  40b4e4:	ldrb	w1, [x19]
  40b4e8:	ldrb	w0, [x19]
  40b4ec:	ldrh	w1, [x23, x1, lsl #1]
  40b4f0:	tbnz	w1, #0, 40b508 <ferror@plt+0x8b98>
  40b4f4:	cmp	w0, #0xa
  40b4f8:	b.eq	40b508 <ferror@plt+0x8b98>  // b.none
  40b4fc:	add	x19, x19, #0x1
  40b500:	cmp	x22, x19
  40b504:	b.ne	40b4e4 <ferror@plt+0x8b74>  // b.any
  40b508:	ldr	x2, [x20, #8]
  40b50c:	sub	x0, x19, x21
  40b510:	ldr	w1, [x20, #28]
  40b514:	ldr	w2, [x2, #200]
  40b518:	sub	w1, w1, w2
  40b51c:	cmp	x0, w1, sxtw
  40b520:	b.lt	40b52c <ferror@plt+0x8bbc>  // b.tstop
  40b524:	mov	x0, x20
  40b528:	bl	40b270 <ferror@plt+0x8900>
  40b52c:	mov	x2, x19
  40b530:	mov	x1, x21
  40b534:	mov	x0, x20
  40b538:	bl	40b434 <ferror@plt+0x8ac4>
  40b53c:	cmp	x22, x19
  40b540:	b.eq	40b588 <ferror@plt+0x8c18>  // b.none
  40b544:	ldrb	w0, [x19]
  40b548:	ldrh	w0, [x23, x0, lsl #1]
  40b54c:	tbz	w0, #0, 40b568 <ferror@plt+0x8bf8>
  40b550:	mov	x0, x20
  40b554:	add	x19, x19, #0x1
  40b558:	mov	w1, #0x20                  	// #32
  40b55c:	bl	40b2cc <ferror@plt+0x895c>
  40b560:	cmp	x22, x19
  40b564:	b.eq	40b580 <ferror@plt+0x8c10>  // b.none
  40b568:	ldrb	w0, [x19]
  40b56c:	cmp	w0, #0xa
  40b570:	b.ne	40b580 <ferror@plt+0x8c10>  // b.any
  40b574:	add	x19, x19, #0x1
  40b578:	mov	x0, x20
  40b57c:	bl	40b270 <ferror@plt+0x8900>
  40b580:	mov	x21, x19
  40b584:	b	40b4d8 <ferror@plt+0x8b68>
  40b588:	mov	x21, x22
  40b58c:	b	40b4d8 <ferror@plt+0x8b68>
  40b590:	b	40b434 <ferror@plt+0x8ac4>
  40b594:	ldp	x19, x20, [sp, #16]
  40b598:	ldp	x21, x22, [sp, #32]
  40b59c:	ldr	x23, [sp, #48]
  40b5a0:	ldp	x29, x30, [sp], #64
  40b5a4:	ret
  40b5a8:	stp	x29, x30, [sp, #-96]!
  40b5ac:	cmn	x2, #0x1
  40b5b0:	mov	x29, sp
  40b5b4:	stp	x19, x20, [sp, #16]
  40b5b8:	mov	x19, x1
  40b5bc:	stp	x21, x22, [sp, #32]
  40b5c0:	mov	x22, x0
  40b5c4:	stp	x23, x24, [sp, #48]
  40b5c8:	stp	x25, x26, [sp, #64]
  40b5cc:	b.ne	40b5dc <ferror@plt+0x8c6c>  // b.any
  40b5d0:	mov	x0, x1
  40b5d4:	bl	402330 <strlen@plt>
  40b5d8:	mov	x2, x0
  40b5dc:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  40b5e0:	add	x21, x19, x2
  40b5e4:	mov	x20, x19
  40b5e8:	add	x24, x24, #0x21a
  40b5ec:	add	x26, sp, #0x54
  40b5f0:	adrp	x25, 44b000 <_obstack_memory_used@@Base+0x11198>
  40b5f4:	cmp	x20, x21
  40b5f8:	b.eq	40b650 <ferror@plt+0x8ce0>  // b.none
  40b5fc:	mov	x23, x20
  40b600:	ldrb	w0, [x23], #1
  40b604:	ldrh	w0, [x24, x0, lsl #1]
  40b608:	tbnz	w0, #4, 40b648 <ferror@plt+0x8cd8>
  40b60c:	cmp	x19, x20
  40b610:	b.cs	40b624 <ferror@plt+0x8cb4>  // b.hs, b.nlast
  40b614:	sub	x2, x20, #0x1
  40b618:	mov	x1, x19
  40b61c:	mov	x0, x22
  40b620:	bl	40b4a4 <ferror@plt+0x8b34>
  40b624:	ldrb	w2, [x20]
  40b628:	mov	x19, x23
  40b62c:	add	x1, x25, #0xb76
  40b630:	add	x0, sp, #0x50
  40b634:	bl	4023d0 <sprintf@plt>
  40b638:	mov	x2, x26
  40b63c:	add	x1, sp, #0x50
  40b640:	mov	x0, x22
  40b644:	bl	40b4a4 <ferror@plt+0x8b34>
  40b648:	mov	x20, x23
  40b64c:	b	40b5f4 <ferror@plt+0x8c84>
  40b650:	mov	x2, x20
  40b654:	mov	x1, x19
  40b658:	mov	x0, x22
  40b65c:	bl	40b4a4 <ferror@plt+0x8b34>
  40b660:	ldp	x19, x20, [sp, #16]
  40b664:	ldp	x21, x22, [sp, #32]
  40b668:	ldp	x23, x24, [sp, #48]
  40b66c:	ldp	x25, x26, [sp, #64]
  40b670:	ldp	x29, x30, [sp], #96
  40b674:	ret
  40b678:	stp	x29, x30, [sp, #-32]!
  40b67c:	mov	x29, sp
  40b680:	stp	x19, x20, [sp, #16]
  40b684:	mov	x19, x1
  40b688:	mov	x20, x0
  40b68c:	mov	x0, x1
  40b690:	bl	402330 <strlen@plt>
  40b694:	mov	x1, x19
  40b698:	add	x2, x19, x0
  40b69c:	mov	x0, x20
  40b6a0:	ldp	x19, x20, [sp, #16]
  40b6a4:	ldp	x29, x30, [sp], #32
  40b6a8:	b	40b4a4 <ferror@plt+0x8b34>
  40b6ac:	stp	x29, x30, [sp, #-64]!
  40b6b0:	mov	x29, sp
  40b6b4:	stp	x19, x20, [sp, #16]
  40b6b8:	ldr	x19, [x0, #8]
  40b6bc:	stp	x21, x22, [sp, #32]
  40b6c0:	mov	x21, x0
  40b6c4:	ldp	x0, x20, [x19, #176]
  40b6c8:	str	x23, [sp, #48]
  40b6cc:	cmp	x0, x19
  40b6d0:	b.eq	40b6ec <ferror@plt+0x8d7c>  // b.none
  40b6d4:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40b6d8:	add	x2, x2, #0xb7d
  40b6dc:	mov	w1, #0x595                 	// #1429
  40b6e0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40b6e4:	add	x0, x0, #0xb35
  40b6e8:	bl	402980 <ferror@plt+0x10>
  40b6ec:	ldr	w0, [x0, #200]
  40b6f0:	add	x23, x20, #0x8
  40b6f4:	mov	w22, #0x0                   	// #0
  40b6f8:	cbz	w0, 40b70c <ferror@plt+0x8d9c>
  40b6fc:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40b700:	mov	w1, #0x596                 	// #1430
  40b704:	add	x2, x2, #0xb7d
  40b708:	b	40b6e0 <ferror@plt+0x8d70>
  40b70c:	ldr	x1, [x23, w22, uxtw #3]
  40b710:	cbz	x1, 40b724 <ferror@plt+0x8db4>
  40b714:	mov	x0, x21
  40b718:	add	w22, w22, #0x1
  40b71c:	bl	40b678 <ferror@plt+0x8d08>
  40b720:	b	40b70c <ferror@plt+0x8d9c>
  40b724:	ldr	x0, [x20]
  40b728:	str	x0, [x19, #184]
  40b72c:	add	x0, x19, #0x58
  40b730:	ldr	x1, [x0, #8]
  40b734:	cmp	x1, x20
  40b738:	b.cs	40b760 <ferror@plt+0x8df0>  // b.hs, b.nlast
  40b73c:	ldr	x1, [x0, #32]
  40b740:	cmp	x1, x20
  40b744:	b.ls	40b760 <ferror@plt+0x8df0>  // b.plast
  40b748:	ldp	x21, x22, [sp, #32]
  40b74c:	ldr	x23, [sp, #48]
  40b750:	stp	x20, x20, [x0, #16]
  40b754:	ldp	x19, x20, [sp, #16]
  40b758:	ldp	x29, x30, [sp], #64
  40b75c:	ret
  40b760:	mov	x1, x20
  40b764:	ldp	x19, x20, [sp, #16]
  40b768:	ldp	x21, x22, [sp, #32]
  40b76c:	ldr	x23, [sp, #48]
  40b770:	ldp	x29, x30, [sp], #64
  40b774:	b	439df4 <_obstack_free@@Base>
  40b778:	ldr	w1, [x0, #24]
  40b77c:	cbz	w1, 40b7a8 <ferror@plt+0x8e38>
  40b780:	stp	x29, x30, [sp, #-32]!
  40b784:	mov	w1, #0x20                  	// #32
  40b788:	mov	x29, sp
  40b78c:	str	x19, [sp, #16]
  40b790:	mov	x19, x0
  40b794:	bl	40b2cc <ferror@plt+0x895c>
  40b798:	str	wzr, [x19, #24]
  40b79c:	ldr	x19, [sp, #16]
  40b7a0:	ldp	x29, x30, [sp], #32
  40b7a4:	ret
  40b7a8:	ret
  40b7ac:	stp	x29, x30, [sp, #-32]!
  40b7b0:	mov	x29, sp
  40b7b4:	str	x19, [sp, #16]
  40b7b8:	mov	x19, x0
  40b7bc:	bl	40b270 <ferror@plt+0x8900>
  40b7c0:	mov	x0, x19
  40b7c4:	bl	40b0e4 <ferror@plt+0x8774>
  40b7c8:	strb	wzr, [x19, #65]
  40b7cc:	ldr	x19, [sp, #16]
  40b7d0:	ldp	x29, x30, [sp], #32
  40b7d4:	ret
  40b7d8:	stp	x29, x30, [sp, #-32]!
  40b7dc:	mov	x29, sp
  40b7e0:	ldr	w2, [x0, #32]
  40b7e4:	str	x19, [sp, #16]
  40b7e8:	mov	x19, x0
  40b7ec:	add	w2, w2, w1
  40b7f0:	str	w2, [x0, #32]
  40b7f4:	bl	40b270 <ferror@plt+0x8900>
  40b7f8:	mov	x0, x19
  40b7fc:	bl	40b374 <ferror@plt+0x8a04>
  40b800:	strb	wzr, [x19, #65]
  40b804:	ldr	x19, [sp, #16]
  40b808:	ldp	x29, x30, [sp], #32
  40b80c:	ret
  40b810:	stp	x29, x30, [sp, #-32]!
  40b814:	and	w1, w1, #0xff
  40b818:	mov	x29, sp
  40b81c:	str	x19, [sp, #16]
  40b820:	mov	x19, x0
  40b824:	bl	40b2cc <ferror@plt+0x895c>
  40b828:	mov	x0, x19
  40b82c:	mov	w1, #0x20                  	// #32
  40b830:	ldr	x19, [sp, #16]
  40b834:	ldp	x29, x30, [sp], #32
  40b838:	b	40b2cc <ferror@plt+0x895c>
  40b83c:	stp	x29, x30, [sp, #-32]!
  40b840:	mov	x29, sp
  40b844:	stp	x19, x20, [sp, #16]
  40b848:	and	w20, w1, #0xff
  40b84c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  40b850:	mov	x19, x0
  40b854:	ldr	x1, [x1, #1248]
  40b858:	bl	40b678 <ferror@plt+0x8d08>
  40b85c:	mov	w0, w20
  40b860:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40b864:	add	x1, x1, #0xa9f
  40b868:	bl	40685c <ferror@plt+0x3eec>
  40b86c:	mov	x1, x0
  40b870:	mov	x0, x19
  40b874:	ldp	x19, x20, [sp, #16]
  40b878:	ldp	x29, x30, [sp], #32
  40b87c:	b	40b678 <ferror@plt+0x8d08>
  40b880:	stp	x29, x30, [sp, #-32]!
  40b884:	mov	x29, sp
  40b888:	str	x19, [sp, #16]
  40b88c:	mov	x19, x0
  40b890:	mov	w0, w1
  40b894:	bl	406b78 <ferror@plt+0x4208>
  40b898:	mov	x1, x0
  40b89c:	mov	x0, x19
  40b8a0:	bl	40b678 <ferror@plt+0x8d08>
  40b8a4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40b8a8:	ldr	x1, [x0, #1256]
  40b8ac:	mov	x0, x19
  40b8b0:	ldr	x19, [sp, #16]
  40b8b4:	ldp	x29, x30, [sp], #32
  40b8b8:	b	40b678 <ferror@plt+0x8d08>
  40b8bc:	sub	sp, sp, #0x1c0
  40b8c0:	stp	x29, x30, [sp, #16]
  40b8c4:	add	x29, sp, #0x10
  40b8c8:	stp	x19, x20, [sp, #32]
  40b8cc:	mov	x19, x0
  40b8d0:	ldr	x0, [x0, #8]
  40b8d4:	stp	x25, x26, [sp, #80]
  40b8d8:	add	x26, x0, #0x58
  40b8dc:	stp	x21, x22, [sp, #48]
  40b8e0:	mov	x21, x1
  40b8e4:	str	x0, [sp, #112]
  40b8e8:	ldr	x1, [x26, #24]
  40b8ec:	stp	x23, x24, [sp, #64]
  40b8f0:	ldr	x0, [x26, #32]
  40b8f4:	stp	x27, x28, [sp, #96]
  40b8f8:	sub	x0, x0, x1
  40b8fc:	cmp	x0, #0x1e7
  40b900:	b.hi	40b910 <ferror@plt+0x8fa0>  // b.pmore
  40b904:	mov	x0, x26
  40b908:	mov	x1, #0x1e8                 	// #488
  40b90c:	bl	439ca4 <_obstack_newchunk@@Base>
  40b910:	ldp	x24, x1, [x26, #16]
  40b914:	add	x1, x1, #0x1e8
  40b918:	cmp	x1, x24
  40b91c:	b.ne	40b92c <ferror@plt+0x8fbc>  // b.any
  40b920:	ldrb	w0, [x26, #80]
  40b924:	orr	w0, w0, #0x2
  40b928:	strb	w0, [x26, #80]
  40b92c:	ldr	x0, [x26, #48]
  40b930:	add	x25, sp, #0xd0
  40b934:	ldr	x2, [x26, #32]
  40b938:	add	x1, x1, x0
  40b93c:	bic	x0, x1, x0
  40b940:	mov	w22, #0x0                   	// #0
  40b944:	ldr	x1, [x26, #8]
  40b948:	mov	w23, #0x0                   	// #0
  40b94c:	sub	x3, x0, x1
  40b950:	sub	x1, x2, x1
  40b954:	cmp	x3, x1
  40b958:	mov	w1, #0x0                   	// #0
  40b95c:	csel	x0, x0, x2, ls  // ls = plast
  40b960:	stp	x0, x0, [x26, #16]
  40b964:	mov	x2, #0xf0                  	// #240
  40b968:	ldr	x0, [sp, #112]
  40b96c:	ldr	x0, [x0, #184]
  40b970:	str	x0, [x24]
  40b974:	ldr	x0, [sp, #112]
  40b978:	str	x24, [x0, #184]
  40b97c:	mov	x0, x25
  40b980:	add	x24, x24, #0x8
  40b984:	bl	402530 <memset@plt>
  40b988:	str	wzr, [sp, #128]
  40b98c:	ldr	x20, [x21]
  40b990:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40b994:	add	x0, x0, #0x4e0
  40b998:	str	x0, [sp, #160]
  40b99c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  40b9a0:	add	x0, x0, #0xa9f
  40b9a4:	str	x0, [sp, #176]
  40b9a8:	str	wzr, [sp, #184]
  40b9ac:	ldrb	w0, [x20]
  40b9b0:	cbz	w0, 40bebc <ferror@plt+0x954c>
  40b9b4:	ldrb	w0, [x20]
  40b9b8:	cbz	w0, 40bebc <ferror@plt+0x954c>
  40b9bc:	cmp	w0, #0x25
  40b9c0:	b.eq	40cae0 <ferror@plt+0xa170>  // b.none
  40b9c4:	ldp	x0, x1, [x26, #24]
  40b9c8:	cmp	x1, x0
  40b9cc:	b.ne	40b9dc <ferror@plt+0x906c>  // b.any
  40b9d0:	mov	x0, x26
  40b9d4:	mov	x1, #0x1                   	// #1
  40b9d8:	bl	439ca4 <_obstack_newchunk@@Base>
  40b9dc:	ldr	x0, [x26, #24]
  40b9e0:	add	x1, x0, #0x1
  40b9e4:	str	x1, [x26, #24]
  40b9e8:	ldrb	w1, [x20], #1
  40b9ec:	strb	w1, [x0]
  40b9f0:	b	40b9b4 <ferror@plt+0x9044>
  40b9f4:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40b9f8:	add	x2, x2, #0xb96
  40b9fc:	mov	w1, #0x41e                 	// #1054
  40ba00:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40ba04:	add	x0, x0, #0xb35
  40ba08:	bl	402980 <ferror@plt+0x10>
  40ba0c:	ldp	x0, x1, [x26, #24]
  40ba10:	cmp	x1, x0
  40ba14:	b.ne	40ba24 <ferror@plt+0x90b4>  // b.any
  40ba18:	mov	x0, x26
  40ba1c:	mov	x1, #0x1                   	// #1
  40ba20:	bl	439ca4 <_obstack_newchunk@@Base>
  40ba24:	ldr	x0, [x26, #24]
  40ba28:	add	x1, x0, #0x1
  40ba2c:	str	x1, [x26, #24]
  40ba30:	mov	w1, #0x25                  	// #37
  40ba34:	strb	w1, [x0]
  40ba38:	add	x20, x20, #0x2
  40ba3c:	b	40b9ac <ferror@plt+0x903c>
  40ba40:	ldrb	w0, [x19, #67]
  40ba44:	bl	406b78 <ferror@plt+0x4208>
  40ba48:	mov	x27, x0
  40ba4c:	bl	402330 <strlen@plt>
  40ba50:	mov	x28, x0
  40ba54:	ldp	x1, x0, [x26, #24]
  40ba58:	sub	x0, x0, x1
  40ba5c:	cmp	x28, x0
  40ba60:	b.ls	40ba70 <ferror@plt+0x9100>  // b.plast
  40ba64:	mov	x1, x28
  40ba68:	mov	x0, x26
  40ba6c:	bl	439ca4 <_obstack_newchunk@@Base>
  40ba70:	ldr	x0, [x26, #24]
  40ba74:	mov	x2, x28
  40ba78:	mov	x1, x27
  40ba7c:	bl	4022e0 <memcpy@plt>
  40ba80:	ldr	x0, [x26, #24]
  40ba84:	add	x0, x0, x28
  40ba88:	str	x0, [x26, #24]
  40ba8c:	adrp	x27, 478000 <_obstack_memory_used@@Base+0x3e198>
  40ba90:	ldr	x0, [x27, #1256]
  40ba94:	bl	402330 <strlen@plt>
  40ba98:	mov	x28, x0
  40ba9c:	ldp	x1, x0, [x26, #24]
  40baa0:	sub	x0, x0, x1
  40baa4:	cmp	x28, x0
  40baa8:	b.ls	40bab8 <ferror@plt+0x9148>  // b.plast
  40baac:	mov	x1, x28
  40bab0:	mov	x0, x26
  40bab4:	bl	439ca4 <_obstack_newchunk@@Base>
  40bab8:	ldr	x1, [x27, #1256]
  40babc:	mov	x2, x28
  40bac0:	ldr	x0, [x26, #24]
  40bac4:	bl	4022e0 <memcpy@plt>
  40bac8:	ldr	x0, [x26, #24]
  40bacc:	add	x0, x0, x28
  40bad0:	str	x0, [x26, #24]
  40bad4:	b	40ba38 <ferror@plt+0x90c8>
  40bad8:	ldrb	w0, [x19, #67]
  40badc:	bl	406b78 <ferror@plt+0x4208>
  40bae0:	b	40cba8 <ferror@plt+0xa238>
  40bae4:	ldp	x2, x1, [x26, #16]
  40bae8:	add	w0, w22, #0x1
  40baec:	str	w0, [sp, #144]
  40baf0:	ubfiz	x4, x22, #3, #32
  40baf4:	cmp	x1, x2
  40baf8:	b.ne	40bb08 <ferror@plt+0x9198>  // b.any
  40bafc:	ldrb	w0, [x26, #80]
  40bb00:	orr	w0, w0, #0x2
  40bb04:	strb	w0, [x26, #80]
  40bb08:	ldr	x0, [x26, #48]
  40bb0c:	adrp	x27, 457000 <_obstack_memory_used@@Base+0x1d198>
  40bb10:	ldr	x3, [x26, #32]
  40bb14:	add	x1, x1, x0
  40bb18:	bic	x0, x1, x0
  40bb1c:	add	x27, x27, #0x21a
  40bb20:	ldr	x1, [x26, #8]
  40bb24:	add	x28, x20, #0x1
  40bb28:	sub	x5, x0, x1
  40bb2c:	sub	x1, x3, x1
  40bb30:	cmp	x5, x1
  40bb34:	csel	x0, x0, x3, ls  // ls = plast
  40bb38:	stp	x0, x0, [x26, #16]
  40bb3c:	str	x2, [x24, x4]
  40bb40:	ldrb	w0, [x20, #1]
  40bb44:	ldrh	w0, [x27, x0, lsl #1]
  40bb48:	tbz	w0, #2, 40bbc4 <ferror@plt+0x9254>
  40bb4c:	add	x1, sp, #0xc8
  40bb50:	mov	x0, x28
  40bb54:	mov	w2, #0xa                   	// #10
  40bb58:	bl	402320 <strtoul@plt>
  40bb5c:	ldr	x3, [sp, #200]
  40bb60:	sub	w0, w0, #0x1
  40bb64:	ldrb	w1, [x3]
  40bb68:	cmp	w1, #0x24
  40bb6c:	b.eq	40bb80 <ferror@plt+0x9210>  // b.none
  40bb70:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bb74:	mov	w1, #0x45a                 	// #1114
  40bb78:	add	x2, x2, #0xb96
  40bb7c:	b	40ba00 <ferror@plt+0x9090>
  40bb80:	ldr	w1, [sp, #184]
  40bb84:	add	x28, x3, #0x1
  40bb88:	cbz	w1, 40bb9c <ferror@plt+0x922c>
  40bb8c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bb90:	mov	w1, #0x45e                 	// #1118
  40bb94:	add	x2, x2, #0xb96
  40bb98:	b	40ba00 <ferror@plt+0x9090>
  40bb9c:	str	w23, [sp, #120]
  40bba0:	mov	w23, w0
  40bba4:	mov	w0, #0x1                   	// #1
  40bba8:	str	w0, [sp, #128]
  40bbac:	cmp	w23, #0x1d
  40bbb0:	b.ls	40bbf0 <ferror@plt+0x9280>  // b.plast
  40bbb4:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bbb8:	mov	w1, #0x466                 	// #1126
  40bbbc:	add	x2, x2, #0xb96
  40bbc0:	b	40ba00 <ferror@plt+0x9090>
  40bbc4:	add	w0, w23, #0x1
  40bbc8:	str	w0, [sp, #120]
  40bbcc:	ldr	w0, [sp, #128]
  40bbd0:	cbz	w0, 40bbe4 <ferror@plt+0x9274>
  40bbd4:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bbd8:	mov	w1, #0x464                 	// #1124
  40bbdc:	add	x2, x2, #0xb96
  40bbe0:	b	40ba00 <ferror@plt+0x9090>
  40bbe4:	mov	w0, #0x1                   	// #1
  40bbe8:	str	w0, [sp, #184]
  40bbec:	b	40bbac <ferror@plt+0x923c>
  40bbf0:	ubfiz	x0, x23, #3, #32
  40bbf4:	ldr	x1, [x25, x0]
  40bbf8:	cbz	x1, 40bc0c <ferror@plt+0x929c>
  40bbfc:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bc00:	mov	w1, #0x467                 	// #1127
  40bc04:	add	x2, x2, #0xb96
  40bc08:	b	40ba00 <ferror@plt+0x9090>
  40bc0c:	ldr	x1, [sp, #144]
  40bc10:	ubfiz	x1, x1, #3, #32
  40bc14:	str	x1, [sp, #152]
  40bc18:	add	x1, x24, x1
  40bc1c:	str	x1, [x25, x0]
  40bc20:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bc24:	add	x0, x0, #0xba0
  40bc28:	str	x1, [sp, #136]
  40bc2c:	str	x0, [sp, #168]
  40bc30:	ldp	x0, x1, [x26, #24]
  40bc34:	cmp	x1, x0
  40bc38:	b.ne	40bc48 <ferror@plt+0x92d8>  // b.any
  40bc3c:	mov	x0, x26
  40bc40:	mov	x1, #0x1                   	// #1
  40bc44:	bl	439ca4 <_obstack_newchunk@@Base>
  40bc48:	ldr	x0, [x26, #24]
  40bc4c:	mov	x20, x28
  40bc50:	add	x1, x0, #0x1
  40bc54:	str	x1, [x26, #24]
  40bc58:	ldrb	w1, [x28]
  40bc5c:	strb	w1, [x0]
  40bc60:	ldr	x0, [sp, #168]
  40bc64:	ldrb	w1, [x20], #1
  40bc68:	str	w1, [sp, #188]
  40bc6c:	bl	402760 <strchr@plt>
  40bc70:	ldr	w1, [sp, #188]
  40bc74:	cbnz	x0, 40bce0 <ferror@plt+0x9370>
  40bc78:	cmp	w1, #0x2e
  40bc7c:	b.ne	40be34 <ferror@plt+0x94c4>  // b.any
  40bc80:	ldrb	w1, [x20]
  40bc84:	ldrb	w0, [x20]
  40bc88:	ldrh	w1, [x27, x1, lsl #1]
  40bc8c:	tbz	w1, #2, 40bce8 <ferror@plt+0x9378>
  40bc90:	ldp	x0, x1, [x26, #24]
  40bc94:	cmp	x1, x0
  40bc98:	b.ne	40bca8 <ferror@plt+0x9338>  // b.any
  40bc9c:	mov	x0, x26
  40bca0:	mov	x1, #0x1                   	// #1
  40bca4:	bl	439ca4 <_obstack_newchunk@@Base>
  40bca8:	ldr	x0, [x26, #24]
  40bcac:	add	x1, x0, #0x1
  40bcb0:	str	x1, [x26, #24]
  40bcb4:	ldrb	w1, [x20]
  40bcb8:	strb	w1, [x0]
  40bcbc:	ldrb	w0, [x20], #1
  40bcc0:	ldrh	w1, [x27, w0, sxtw #1]
  40bcc4:	tbnz	w1, #2, 40bc90 <ferror@plt+0x9320>
  40bcc8:	cmp	w0, #0x73
  40bccc:	b.eq	40be34 <ferror@plt+0x94c4>  // b.none
  40bcd0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bcd4:	mov	w1, #0x47c                 	// #1148
  40bcd8:	add	x2, x2, #0xb96
  40bcdc:	b	40ba00 <ferror@plt+0x9090>
  40bce0:	mov	x28, x20
  40bce4:	b	40bc30 <ferror@plt+0x92c0>
  40bce8:	cmp	w0, #0x2a
  40bcec:	b.eq	40bd00 <ferror@plt+0x9390>  // b.none
  40bcf0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bcf4:	mov	w1, #0x480                 	// #1152
  40bcf8:	add	x2, x2, #0xb96
  40bcfc:	b	40ba00 <ferror@plt+0x9090>
  40bd00:	ldp	x0, x1, [x26, #24]
  40bd04:	cmp	x1, x0
  40bd08:	b.ne	40bd18 <ferror@plt+0x93a8>  // b.any
  40bd0c:	mov	x0, x26
  40bd10:	mov	x1, #0x1                   	// #1
  40bd14:	bl	439ca4 <_obstack_newchunk@@Base>
  40bd18:	ldr	x0, [x26, #24]
  40bd1c:	add	x3, x28, #0x2
  40bd20:	add	x1, x0, #0x1
  40bd24:	str	x1, [x26, #24]
  40bd28:	mov	w1, #0x2a                  	// #42
  40bd2c:	strb	w1, [x0]
  40bd30:	ldrb	w0, [x20, #1]
  40bd34:	ldrh	w0, [x27, x0, lsl #1]
  40bd38:	tbz	w0, #2, 40bdc8 <ferror@plt+0x9458>
  40bd3c:	add	x1, sp, #0xc8
  40bd40:	mov	x0, x3
  40bd44:	mov	w2, #0xa                   	// #10
  40bd48:	bl	402320 <strtoul@plt>
  40bd4c:	sub	w1, w0, #0x1
  40bd50:	cmp	w0, w23
  40bd54:	ldr	x3, [sp, #200]
  40bd58:	b.eq	40bd6c <ferror@plt+0x93fc>  // b.none
  40bd5c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bd60:	mov	w1, #0x489                 	// #1161
  40bd64:	add	x2, x2, #0xb96
  40bd68:	b	40ba00 <ferror@plt+0x9090>
  40bd6c:	ldr	w0, [sp, #184]
  40bd70:	cbz	w0, 40bd84 <ferror@plt+0x9414>
  40bd74:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bd78:	mov	w1, #0x48a                 	// #1162
  40bd7c:	add	x2, x2, #0xb96
  40bd80:	b	40ba00 <ferror@plt+0x9090>
  40bd84:	ldrb	w0, [x3]
  40bd88:	cmp	w0, #0x24
  40bd8c:	b.eq	40bda0 <ferror@plt+0x9430>  // b.none
  40bd90:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bd94:	mov	w1, #0x48b                 	// #1163
  40bd98:	add	x2, x2, #0xb96
  40bd9c:	b	40ba00 <ferror@plt+0x9090>
  40bda0:	add	x3, x3, #0x1
  40bda4:	ldr	x0, [sp, #136]
  40bda8:	str	x0, [x25, w1, uxtw #3]
  40bdac:	ldrb	w0, [x3]
  40bdb0:	cmp	w0, #0x73
  40bdb4:	b.eq	40bdfc <ferror@plt+0x948c>  // b.none
  40bdb8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bdbc:	mov	w1, #0x496                 	// #1174
  40bdc0:	add	x2, x2, #0xb96
  40bdc4:	b	40ba00 <ferror@plt+0x9090>
  40bdc8:	ldr	w0, [sp, #128]
  40bdcc:	cbz	w0, 40bde0 <ferror@plt+0x9470>
  40bdd0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bdd4:	mov	w1, #0x492                 	// #1170
  40bdd8:	add	x2, x2, #0xb96
  40bddc:	b	40ba00 <ferror@plt+0x9090>
  40bde0:	add	w23, w23, #0x1
  40bde4:	ldr	x0, [sp, #136]
  40bde8:	str	x0, [x25, x23, lsl #3]
  40bdec:	ldr	w0, [sp, #120]
  40bdf0:	add	w0, w0, #0x1
  40bdf4:	str	w0, [sp, #120]
  40bdf8:	b	40bdac <ferror@plt+0x943c>
  40bdfc:	ldp	x0, x1, [x26, #24]
  40be00:	cmp	x1, x0
  40be04:	b.ne	40be1c <ferror@plt+0x94ac>  // b.any
  40be08:	mov	x0, x26
  40be0c:	mov	x1, #0x1                   	// #1
  40be10:	str	x3, [sp, #136]
  40be14:	bl	439ca4 <_obstack_newchunk@@Base>
  40be18:	ldr	x3, [sp, #136]
  40be1c:	add	x20, x3, #0x1
  40be20:	ldr	x0, [x26, #24]
  40be24:	add	x1, x0, #0x1
  40be28:	str	x1, [x26, #24]
  40be2c:	mov	w1, #0x73                  	// #115
  40be30:	strb	w1, [x0]
  40be34:	ldrb	w2, [x20]
  40be38:	ldp	x1, x0, [x26, #24]
  40be3c:	cbz	w2, 40beb8 <ferror@plt+0x9548>
  40be40:	cmp	x1, x0
  40be44:	b.ne	40be54 <ferror@plt+0x94e4>  // b.any
  40be48:	mov	x0, x26
  40be4c:	mov	x1, #0x1                   	// #1
  40be50:	bl	439ca4 <_obstack_newchunk@@Base>
  40be54:	ldr	x0, [x26, #24]
  40be58:	add	w22, w22, #0x2
  40be5c:	add	x1, x0, #0x1
  40be60:	str	x1, [x26, #24]
  40be64:	strb	wzr, [x0]
  40be68:	ldp	x2, x1, [x26, #16]
  40be6c:	cmp	x1, x2
  40be70:	b.ne	40be80 <ferror@plt+0x9510>  // b.any
  40be74:	ldrb	w0, [x26, #80]
  40be78:	orr	w0, w0, #0x2
  40be7c:	strb	w0, [x26, #80]
  40be80:	ldr	x0, [x26, #48]
  40be84:	ldr	x3, [x26, #32]
  40be88:	add	x1, x1, x0
  40be8c:	bic	x0, x1, x0
  40be90:	ldr	w23, [sp, #120]
  40be94:	ldr	x1, [x26, #8]
  40be98:	sub	x4, x0, x1
  40be9c:	sub	x1, x3, x1
  40bea0:	cmp	x4, x1
  40bea4:	csel	x0, x0, x3, ls  // ls = plast
  40bea8:	stp	x0, x0, [x26, #16]
  40beac:	ldr	x0, [sp, #152]
  40beb0:	str	x2, [x24, x0]
  40beb4:	b	40b9ac <ferror@plt+0x903c>
  40beb8:	ldr	w22, [sp, #144]
  40bebc:	ldp	x0, x1, [x26, #24]
  40bec0:	cmp	x1, x0
  40bec4:	b.ne	40bed4 <ferror@plt+0x9564>  // b.any
  40bec8:	mov	x0, x26
  40becc:	mov	x1, #0x1                   	// #1
  40bed0:	bl	439ca4 <_obstack_newchunk@@Base>
  40bed4:	ldr	x0, [x26, #24]
  40bed8:	cmp	w22, #0x3b
  40bedc:	add	x1, x0, #0x1
  40bee0:	str	x1, [x26, #24]
  40bee4:	strb	wzr, [x0]
  40bee8:	b.ls	40befc <ferror@plt+0x958c>  // b.plast
  40beec:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bef0:	mov	w1, #0x4a4                 	// #1188
  40bef4:	add	x2, x2, #0xb96
  40bef8:	b	40ba00 <ferror@plt+0x9090>
  40befc:	ldp	x2, x1, [x26, #16]
  40bf00:	add	w4, w22, #0x1
  40bf04:	ubfiz	x22, x22, #3, #32
  40bf08:	cmp	x1, x2
  40bf0c:	b.ne	40bf1c <ferror@plt+0x95ac>  // b.any
  40bf10:	ldrb	w0, [x26, #80]
  40bf14:	orr	w0, w0, #0x2
  40bf18:	strb	w0, [x26, #80]
  40bf1c:	ldr	x0, [x26, #48]
  40bf20:	adrp	x23, 44c000 <_obstack_memory_used@@Base+0x12198>
  40bf24:	ldr	x3, [x26, #32]
  40bf28:	add	x1, x1, x0
  40bf2c:	bic	x0, x1, x0
  40bf30:	add	x23, x23, #0x389
  40bf34:	ldr	x1, [x26, #8]
  40bf38:	mov	w20, #0x0                   	// #0
  40bf3c:	sub	x5, x0, x1
  40bf40:	sub	x1, x3, x1
  40bf44:	cmp	x5, x1
  40bf48:	csel	x0, x0, x3, ls  // ls = plast
  40bf4c:	stp	x0, x0, [x26, #16]
  40bf50:	ldr	x0, [sp, #112]
  40bf54:	str	x2, [x24, x22]
  40bf58:	str	xzr, [x24, w4, uxtw #3]
  40bf5c:	mov	x22, #0x1                   	// #1
  40bf60:	str	x26, [x0, #176]
  40bf64:	ldur	x0, [x19, #36]
  40bf68:	stur	x22, [x19, #36]
  40bf6c:	str	x0, [sp, #120]
  40bf70:	ldr	x28, [x25, w20, uxtw #3]
  40bf74:	cbz	x28, 40ca8c <ferror@plt+0xa11c>
  40bf78:	ldr	x27, [x28]
  40bf7c:	mov	w6, #0x0                   	// #0
  40bf80:	mov	w5, #0x0                   	// #0
  40bf84:	mov	w4, #0x0                   	// #0
  40bf88:	mov	w24, #0x0                   	// #0
  40bf8c:	strb	wzr, [sp, #199]
  40bf90:	ldrb	w0, [x27]
  40bf94:	cmp	w0, #0x6c
  40bf98:	b.eq	40c03c <ferror@plt+0x96cc>  // b.none
  40bf9c:	b.hi	40bfcc <ferror@plt+0x965c>  // b.pmore
  40bfa0:	cmp	w0, #0x23
  40bfa4:	b.eq	40c028 <ferror@plt+0x96b8>  // b.none
  40bfa8:	cmp	w0, #0x2b
  40bfac:	b.eq	40c014 <ferror@plt+0x96a4>  // b.none
  40bfb0:	cmp	w24, #0x0
  40bfb4:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  40bfb8:	b.eq	40c074 <ferror@plt+0x9704>  // b.none
  40bfbc:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bfc0:	mov	w1, #0x4dc                 	// #1244
  40bfc4:	add	x2, x2, #0xb96
  40bfc8:	b	40ba00 <ferror@plt+0x9090>
  40bfcc:	cmp	w0, #0x71
  40bfd0:	b.eq	40bff0 <ferror@plt+0x9680>  // b.none
  40bfd4:	cmp	w0, #0x77
  40bfd8:	b.ne	40bfb0 <ferror@plt+0x9640>  // b.any
  40bfdc:	cbz	w4, 40c06c <ferror@plt+0x96fc>
  40bfe0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bfe4:	mov	w1, #0x4cf                 	// #1231
  40bfe8:	add	x2, x2, #0xb96
  40bfec:	b	40ba00 <ferror@plt+0x9090>
  40bff0:	ldrb	w0, [sp, #199]
  40bff4:	cbz	w0, 40c008 <ferror@plt+0x9698>
  40bff8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40bffc:	mov	w1, #0x4c0                 	// #1216
  40c000:	add	x2, x2, #0xb96
  40c004:	b	40ba00 <ferror@plt+0x9090>
  40c008:	strb	w22, [sp, #199]
  40c00c:	add	x27, x27, #0x1
  40c010:	b	40bf90 <ferror@plt+0x9620>
  40c014:	cbz	w5, 40c05c <ferror@plt+0x96ec>
  40c018:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c01c:	mov	w1, #0x4c5                 	// #1221
  40c020:	add	x2, x2, #0xb96
  40c024:	b	40ba00 <ferror@plt+0x9090>
  40c028:	cbz	w6, 40c064 <ferror@plt+0x96f4>
  40c02c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c030:	mov	w1, #0x4ca                 	// #1226
  40c034:	add	x2, x2, #0xb96
  40c038:	b	40ba00 <ferror@plt+0x9090>
  40c03c:	cmp	w24, #0x1
  40c040:	b.le	40c054 <ferror@plt+0x96e4>
  40c044:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c048:	mov	w1, #0x4d5                 	// #1237
  40c04c:	add	x2, x2, #0xb96
  40c050:	b	40ba00 <ferror@plt+0x9090>
  40c054:	add	w24, w24, #0x1
  40c058:	b	40c00c <ferror@plt+0x969c>
  40c05c:	mov	w5, #0x1                   	// #1
  40c060:	b	40c00c <ferror@plt+0x969c>
  40c064:	mov	w6, #0x1                   	// #1
  40c068:	b	40c00c <ferror@plt+0x969c>
  40c06c:	mov	w4, #0x1                   	// #1
  40c070:	b	40c00c <ferror@plt+0x969c>
  40c074:	ldrb	w0, [sp, #199]
  40c078:	cbz	w0, 40c0a0 <ferror@plt+0x9730>
  40c07c:	ldrb	w1, [x19, #67]
  40c080:	mov	x0, x19
  40c084:	str	w4, [sp, #128]
  40c088:	str	w6, [sp, #136]
  40c08c:	str	w5, [sp, #184]
  40c090:	bl	40b83c <ferror@plt+0x8ecc>
  40c094:	ldr	w4, [sp, #128]
  40c098:	ldr	w6, [sp, #136]
  40c09c:	ldr	w5, [sp, #184]
  40c0a0:	ldrb	w0, [x27]
  40c0a4:	cmp	w0, #0x2e
  40c0a8:	b.eq	40c8fc <ferror@plt+0x9f8c>  // b.none
  40c0ac:	sub	w0, w0, #0x5a
  40c0b0:	and	w1, w0, #0xff
  40c0b4:	cmp	w1, #0x1e
  40c0b8:	b.hi	40ca40 <ferror@plt+0xa0d0>  // b.pmore
  40c0bc:	cmp	w0, #0x1e
  40c0c0:	b.hi	40ca40 <ferror@plt+0xa0d0>  // b.pmore
  40c0c4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c0c8:	add	x1, x1, #0xbe4
  40c0cc:	ldrh	w0, [x1, w0, uxtw #1]
  40c0d0:	adr	x1, 40c0dc <ferror@plt+0x976c>
  40c0d4:	add	x0, x1, w0, sxth #2
  40c0d8:	br	x0
  40c0dc:	ldr	x2, [x21, #8]
  40c0e0:	ldrb	w0, [x19, #67]
  40c0e4:	ldr	w3, [x2, #24]
  40c0e8:	ldr	x1, [x2]
  40c0ec:	tbnz	w3, #31, 40c114 <ferror@plt+0x97a4>
  40c0f0:	add	x3, x1, #0xf
  40c0f4:	and	x3, x3, #0xfffffffffffffff8
  40c0f8:	str	x3, [x2]
  40c0fc:	ldr	x1, [x1]
  40c100:	bl	40685c <ferror@plt+0x3eec>
  40c104:	mov	x1, x0
  40c108:	mov	x0, x19
  40c10c:	bl	40b678 <ferror@plt+0x8d08>
  40c110:	b	40c174 <ferror@plt+0x9804>
  40c114:	add	w4, w3, #0x8
  40c118:	str	w4, [x2, #24]
  40c11c:	cmp	w4, #0x0
  40c120:	b.gt	40c0f0 <ferror@plt+0x9780>
  40c124:	ldr	x1, [x2, #8]
  40c128:	add	x1, x1, w3, sxtw
  40c12c:	b	40c0fc <ferror@plt+0x978c>
  40c130:	ldr	x1, [x21, #8]
  40c134:	ldr	w2, [x1, #24]
  40c138:	ldr	x0, [x1]
  40c13c:	tbnz	w2, #31, 40c200 <ferror@plt+0x9890>
  40c140:	add	x2, x0, #0xb
  40c144:	and	x2, x2, #0xfffffffffffffff8
  40c148:	str	x2, [x1]
  40c14c:	ldr	w1, [x0]
  40c150:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  40c154:	add	x0, x0, #0x21a
  40c158:	and	x2, x1, #0xff
  40c15c:	ldrh	w0, [x0, x2, lsl #1]
  40c160:	tbnz	w0, #4, 40c16c <ferror@plt+0x97fc>
  40c164:	ldrb	w0, [sp, #199]
  40c168:	cbnz	w0, 40c21c <ferror@plt+0x98ac>
  40c16c:	mov	x0, x19
  40c170:	bl	40b2cc <ferror@plt+0x895c>
  40c174:	ldrb	w0, [sp, #199]
  40c178:	cbz	w0, 40c188 <ferror@plt+0x9818>
  40c17c:	ldrb	w1, [x19, #67]
  40c180:	mov	x0, x19
  40c184:	bl	40b880 <ferror@plt+0x8f10>
  40c188:	ldp	x0, x1, [x26, #24]
  40c18c:	cmp	x1, x0
  40c190:	b.ne	40c1a0 <ferror@plt+0x9830>  // b.any
  40c194:	mov	x0, x26
  40c198:	mov	x1, #0x1                   	// #1
  40c19c:	bl	439ca4 <_obstack_newchunk@@Base>
  40c1a0:	ldr	x0, [x26, #24]
  40c1a4:	ldr	x4, [x25, w20, uxtw #3]
  40c1a8:	add	x1, x0, #0x1
  40c1ac:	str	x1, [x26, #24]
  40c1b0:	strb	wzr, [x0]
  40c1b4:	ldp	x2, x1, [x26, #16]
  40c1b8:	cmp	x1, x2
  40c1bc:	b.ne	40c1cc <ferror@plt+0x985c>  // b.any
  40c1c0:	ldrb	w0, [x26, #80]
  40c1c4:	orr	w0, w0, #0x2
  40c1c8:	strb	w0, [x26, #80]
  40c1cc:	ldr	x0, [x26, #48]
  40c1d0:	add	w20, w20, #0x1
  40c1d4:	ldr	x3, [x26, #32]
  40c1d8:	add	x1, x1, x0
  40c1dc:	bic	x0, x1, x0
  40c1e0:	ldr	x1, [x26, #8]
  40c1e4:	sub	x5, x0, x1
  40c1e8:	sub	x1, x3, x1
  40c1ec:	cmp	x5, x1
  40c1f0:	csel	x0, x0, x3, ls  // ls = plast
  40c1f4:	stp	x0, x0, [x26, #16]
  40c1f8:	str	x2, [x4]
  40c1fc:	b	40bf70 <ferror@plt+0x9600>
  40c200:	add	w3, w2, #0x8
  40c204:	str	w3, [x1, #24]
  40c208:	cmp	w3, #0x0
  40c20c:	b.gt	40c140 <ferror@plt+0x97d0>
  40c210:	ldr	x0, [x1, #8]
  40c214:	add	x0, x0, w2, sxtw
  40c218:	b	40c14c <ferror@plt+0x97dc>
  40c21c:	strb	w1, [sp, #200]
  40c220:	add	x1, sp, #0xc8
  40c224:	mov	x2, #0x1                   	// #1
  40c228:	strb	wzr, [sp, #201]
  40c22c:	mov	x0, x19
  40c230:	bl	40b5a8 <ferror@plt+0x8c38>
  40c234:	b	40c174 <ferror@plt+0x9804>
  40c238:	cbz	w4, 40c284 <ferror@plt+0x9914>
  40c23c:	ldr	x1, [x21, #8]
  40c240:	ldr	w2, [x1, #24]
  40c244:	ldr	x0, [x1]
  40c248:	tbnz	w2, #31, 40c268 <ferror@plt+0x98f8>
  40c24c:	add	x2, x0, #0xf
  40c250:	and	x2, x2, #0xfffffffffffffff8
  40c254:	str	x2, [x1]
  40c258:	ldr	x1, [x0]
  40c25c:	mov	x0, x19
  40c260:	bl	40cfe0 <ferror@plt+0xa670>
  40c264:	b	40c174 <ferror@plt+0x9804>
  40c268:	add	w3, w2, #0x8
  40c26c:	str	w3, [x1, #24]
  40c270:	cmp	w3, #0x0
  40c274:	b.gt	40c24c <ferror@plt+0x98dc>
  40c278:	ldr	x0, [x1, #8]
  40c27c:	add	x0, x0, w2, sxtw
  40c280:	b	40c258 <ferror@plt+0x98e8>
  40c284:	cmp	w24, #0x1
  40c288:	b.eq	40c2ec <ferror@plt+0x997c>  // b.none
  40c28c:	cmp	w24, #0x2
  40c290:	b.eq	40c348 <ferror@plt+0x99d8>  // b.none
  40c294:	cbnz	w24, 40c174 <ferror@plt+0x9804>
  40c298:	ldr	x2, [x21, #8]
  40c29c:	ldr	x0, [x19, #8]
  40c2a0:	ldr	w3, [x2, #24]
  40c2a4:	add	x0, x0, #0xcc
  40c2a8:	ldr	x1, [x2]
  40c2ac:	tbnz	w3, #31, 40c2d0 <ferror@plt+0x9960>
  40c2b0:	add	x3, x1, #0xb
  40c2b4:	and	x3, x3, #0xfffffffffffffff8
  40c2b8:	str	x3, [x2]
  40c2bc:	ldr	w2, [x1]
  40c2c0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40c2c4:	add	x1, x1, #0x2fc
  40c2c8:	bl	4023d0 <sprintf@plt>
  40c2cc:	b	40c320 <ferror@plt+0x99b0>
  40c2d0:	add	w4, w3, #0x8
  40c2d4:	str	w4, [x2, #24]
  40c2d8:	cmp	w4, #0x0
  40c2dc:	b.gt	40c2b0 <ferror@plt+0x9940>
  40c2e0:	ldr	x1, [x2, #8]
  40c2e4:	add	x1, x1, w3, sxtw
  40c2e8:	b	40c2bc <ferror@plt+0x994c>
  40c2ec:	ldr	x2, [x21, #8]
  40c2f0:	ldr	x0, [x19, #8]
  40c2f4:	ldr	w3, [x2, #24]
  40c2f8:	add	x0, x0, #0xcc
  40c2fc:	ldr	x1, [x2]
  40c300:	tbnz	w3, #31, 40c32c <ferror@plt+0x99bc>
  40c304:	add	x3, x1, #0xf
  40c308:	and	x3, x3, #0xfffffffffffffff8
  40c30c:	str	x3, [x2]
  40c310:	ldr	x2, [x1]
  40c314:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x10198>
  40c318:	add	x1, x1, #0x8b6
  40c31c:	bl	4023d0 <sprintf@plt>
  40c320:	ldr	x1, [x19, #8]
  40c324:	add	x1, x1, #0xcc
  40c328:	b	40c108 <ferror@plt+0x9798>
  40c32c:	add	w4, w3, #0x8
  40c330:	str	w4, [x2, #24]
  40c334:	cmp	w4, #0x0
  40c338:	b.gt	40c304 <ferror@plt+0x9994>
  40c33c:	ldr	x1, [x2, #8]
  40c340:	add	x1, x1, w3, sxtw
  40c344:	b	40c310 <ferror@plt+0x99a0>
  40c348:	ldr	x2, [x21, #8]
  40c34c:	ldr	x0, [x19, #8]
  40c350:	ldr	w3, [x2, #24]
  40c354:	add	x0, x0, #0xcc
  40c358:	ldr	x1, [x2]
  40c35c:	tbnz	w3, #31, 40c37c <ferror@plt+0x9a0c>
  40c360:	add	x3, x1, #0xf
  40c364:	and	x3, x3, #0xfffffffffffffff8
  40c368:	str	x3, [x2]
  40c36c:	ldr	x2, [x1]
  40c370:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c374:	add	x1, x1, #0xba6
  40c378:	b	40c31c <ferror@plt+0x99ac>
  40c37c:	add	w4, w3, #0x8
  40c380:	str	w4, [x2, #24]
  40c384:	cmp	w4, #0x0
  40c388:	b.gt	40c360 <ferror@plt+0x99f0>
  40c38c:	ldr	x1, [x2, #8]
  40c390:	add	x1, x1, w3, sxtw
  40c394:	b	40c36c <ferror@plt+0x99fc>
  40c398:	cbz	w4, 40c3d0 <ferror@plt+0x9a60>
  40c39c:	ldr	x2, [x21, #8]
  40c3a0:	ldr	x0, [x19, #8]
  40c3a4:	ldr	w3, [x2, #24]
  40c3a8:	add	x0, x0, #0xcc
  40c3ac:	ldr	x1, [x2]
  40c3b0:	tbnz	w3, #31, 40c434 <ferror@plt+0x9ac4>
  40c3b4:	add	x3, x1, #0xf
  40c3b8:	and	x3, x3, #0xfffffffffffffff8
  40c3bc:	str	x3, [x2]
  40c3c0:	ldr	x2, [x1]
  40c3c4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c3c8:	add	x1, x1, #0xbab
  40c3cc:	b	40c31c <ferror@plt+0x99ac>
  40c3d0:	cmp	w24, #0x1
  40c3d4:	b.eq	40c39c <ferror@plt+0x9a2c>  // b.none
  40c3d8:	cmp	w24, #0x2
  40c3dc:	b.eq	40c450 <ferror@plt+0x9ae0>  // b.none
  40c3e0:	cbnz	w24, 40c174 <ferror@plt+0x9804>
  40c3e4:	ldr	x2, [x21, #8]
  40c3e8:	ldr	x0, [x19, #8]
  40c3ec:	ldr	w3, [x2, #24]
  40c3f0:	add	x0, x0, #0xcc
  40c3f4:	ldr	x1, [x2]
  40c3f8:	tbnz	w3, #31, 40c418 <ferror@plt+0x9aa8>
  40c3fc:	add	x3, x1, #0xb
  40c400:	and	x3, x3, #0xfffffffffffffff8
  40c404:	str	x3, [x2]
  40c408:	ldr	w2, [x1]
  40c40c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c410:	add	x1, x1, #0x571
  40c414:	b	40c2c8 <ferror@plt+0x9958>
  40c418:	add	w4, w3, #0x8
  40c41c:	str	w4, [x2, #24]
  40c420:	cmp	w4, #0x0
  40c424:	b.gt	40c3fc <ferror@plt+0x9a8c>
  40c428:	ldr	x1, [x2, #8]
  40c42c:	add	x1, x1, w3, sxtw
  40c430:	b	40c408 <ferror@plt+0x9a98>
  40c434:	add	w4, w3, #0x8
  40c438:	str	w4, [x2, #24]
  40c43c:	cmp	w4, #0x0
  40c440:	b.gt	40c3b4 <ferror@plt+0x9a44>
  40c444:	ldr	x1, [x2, #8]
  40c448:	add	x1, x1, w3, sxtw
  40c44c:	b	40c3c0 <ferror@plt+0x9a50>
  40c450:	ldr	x2, [x21, #8]
  40c454:	ldr	x0, [x19, #8]
  40c458:	ldr	w3, [x2, #24]
  40c45c:	add	x0, x0, #0xcc
  40c460:	ldr	x1, [x2]
  40c464:	tbnz	w3, #31, 40c484 <ferror@plt+0x9b14>
  40c468:	add	x3, x1, #0xf
  40c46c:	and	x3, x3, #0xfffffffffffffff8
  40c470:	str	x3, [x2]
  40c474:	ldr	x2, [x1]
  40c478:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c47c:	add	x1, x1, #0xbaf
  40c480:	b	40c31c <ferror@plt+0x99ac>
  40c484:	add	w4, w3, #0x8
  40c488:	str	w4, [x2, #24]
  40c48c:	cmp	w4, #0x0
  40c490:	b.gt	40c468 <ferror@plt+0x9af8>
  40c494:	ldr	x1, [x2, #8]
  40c498:	add	x1, x1, w3, sxtw
  40c49c:	b	40c474 <ferror@plt+0x9b04>
  40c4a0:	ldrb	w3, [sp, #199]
  40c4a4:	ldr	x1, [x21, #8]
  40c4a8:	ldr	w2, [x1, #24]
  40c4ac:	ldr	x0, [x1]
  40c4b0:	cbz	w3, 40c4ec <ferror@plt+0x9b7c>
  40c4b4:	tbnz	w2, #31, 40c4d0 <ferror@plt+0x9b60>
  40c4b8:	add	x2, x0, #0xf
  40c4bc:	and	x2, x2, #0xfffffffffffffff8
  40c4c0:	str	x2, [x1]
  40c4c4:	mov	x2, #0xffffffffffffffff    	// #-1
  40c4c8:	ldr	x1, [x0]
  40c4cc:	b	40c22c <ferror@plt+0x98bc>
  40c4d0:	add	w3, w2, #0x8
  40c4d4:	str	w3, [x1, #24]
  40c4d8:	cmp	w3, #0x0
  40c4dc:	b.gt	40c4b8 <ferror@plt+0x9b48>
  40c4e0:	ldr	x0, [x1, #8]
  40c4e4:	add	x0, x0, w2, sxtw
  40c4e8:	b	40c4c4 <ferror@plt+0x9b54>
  40c4ec:	tbnz	w2, #31, 40c504 <ferror@plt+0x9b94>
  40c4f0:	add	x2, x0, #0xf
  40c4f4:	and	x2, x2, #0xfffffffffffffff8
  40c4f8:	str	x2, [x1]
  40c4fc:	ldr	x1, [x0]
  40c500:	b	40c108 <ferror@plt+0x9798>
  40c504:	add	w3, w2, #0x8
  40c508:	str	w3, [x1, #24]
  40c50c:	cmp	w3, #0x0
  40c510:	b.gt	40c4f0 <ferror@plt+0x9b80>
  40c514:	ldr	x0, [x1, #8]
  40c518:	add	x0, x0, w2, sxtw
  40c51c:	b	40c4fc <ferror@plt+0x9b8c>
  40c520:	ldr	x2, [x21, #8]
  40c524:	ldr	x0, [x19, #8]
  40c528:	ldr	w3, [x2, #24]
  40c52c:	add	x0, x0, #0xcc
  40c530:	ldr	x1, [x2]
  40c534:	tbnz	w3, #31, 40c554 <ferror@plt+0x9be4>
  40c538:	add	x3, x1, #0xf
  40c53c:	and	x3, x3, #0xfffffffffffffff8
  40c540:	str	x3, [x2]
  40c544:	ldr	x2, [x1]
  40c548:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c54c:	add	x1, x1, #0xbb4
  40c550:	b	40c31c <ferror@plt+0x99ac>
  40c554:	add	w4, w3, #0x8
  40c558:	str	w4, [x2, #24]
  40c55c:	cmp	w4, #0x0
  40c560:	b.gt	40c538 <ferror@plt+0x9bc8>
  40c564:	ldr	x1, [x2, #8]
  40c568:	add	x1, x1, w3, sxtw
  40c56c:	b	40c544 <ferror@plt+0x9bd4>
  40c570:	cbz	w4, 40c59c <ferror@plt+0x9c2c>
  40c574:	ldr	x2, [x21, #8]
  40c578:	ldr	x0, [x19, #8]
  40c57c:	ldr	w3, [x2, #24]
  40c580:	add	x0, x0, #0xcc
  40c584:	ldr	x1, [x2]
  40c588:	tbnz	w3, #31, 40c600 <ferror@plt+0x9c90>
  40c58c:	add	x3, x1, #0xf
  40c590:	and	x3, x3, #0xfffffffffffffff8
  40c594:	str	x3, [x2]
  40c598:	b	40c618 <ferror@plt+0x9ca8>
  40c59c:	cmp	w24, #0x1
  40c5a0:	b.eq	40c574 <ferror@plt+0x9c04>  // b.none
  40c5a4:	cmp	w24, #0x2
  40c5a8:	b.eq	40c628 <ferror@plt+0x9cb8>  // b.none
  40c5ac:	cbnz	w24, 40c174 <ferror@plt+0x9804>
  40c5b0:	ldr	x2, [x21, #8]
  40c5b4:	ldr	x0, [x19, #8]
  40c5b8:	ldr	w3, [x2, #24]
  40c5bc:	add	x0, x0, #0xcc
  40c5c0:	ldr	x1, [x2]
  40c5c4:	tbnz	w3, #31, 40c5e4 <ferror@plt+0x9c74>
  40c5c8:	add	x3, x1, #0xb
  40c5cc:	and	x3, x3, #0xfffffffffffffff8
  40c5d0:	str	x3, [x2]
  40c5d4:	ldr	w2, [x1]
  40c5d8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40c5dc:	add	x1, x1, #0x445
  40c5e0:	b	40c2c8 <ferror@plt+0x9958>
  40c5e4:	add	w4, w3, #0x8
  40c5e8:	str	w4, [x2, #24]
  40c5ec:	cmp	w4, #0x0
  40c5f0:	b.gt	40c5c8 <ferror@plt+0x9c58>
  40c5f4:	ldr	x1, [x2, #8]
  40c5f8:	add	x1, x1, w3, sxtw
  40c5fc:	b	40c5d4 <ferror@plt+0x9c64>
  40c600:	add	w4, w3, #0x8
  40c604:	str	w4, [x2, #24]
  40c608:	cmp	w4, #0x0
  40c60c:	b.gt	40c58c <ferror@plt+0x9c1c>
  40c610:	ldr	x1, [x2, #8]
  40c614:	add	x1, x1, w3, sxtw
  40c618:	ldr	x2, [x1]
  40c61c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c620:	add	x1, x1, #0xbb7
  40c624:	b	40c31c <ferror@plt+0x99ac>
  40c628:	ldr	x2, [x21, #8]
  40c62c:	ldr	x0, [x19, #8]
  40c630:	ldr	w3, [x2, #24]
  40c634:	add	x0, x0, #0xcc
  40c638:	ldr	x1, [x2]
  40c63c:	tbnz	w3, #31, 40c65c <ferror@plt+0x9cec>
  40c640:	add	x3, x1, #0xf
  40c644:	and	x3, x3, #0xfffffffffffffff8
  40c648:	str	x3, [x2]
  40c64c:	ldr	x2, [x1]
  40c650:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c654:	add	x1, x1, #0xbbb
  40c658:	b	40c31c <ferror@plt+0x99ac>
  40c65c:	add	w4, w3, #0x8
  40c660:	str	w4, [x2, #24]
  40c664:	cmp	w4, #0x0
  40c668:	b.gt	40c640 <ferror@plt+0x9cd0>
  40c66c:	ldr	x1, [x2, #8]
  40c670:	add	x1, x1, w3, sxtw
  40c674:	b	40c64c <ferror@plt+0x9cdc>
  40c678:	ldr	x2, [x21, #8]
  40c67c:	ldr	x0, [x19, #8]
  40c680:	ldr	w3, [x2, #28]
  40c684:	add	x0, x0, #0xcc
  40c688:	ldr	x1, [x2]
  40c68c:	tbnz	w3, #31, 40c6b0 <ferror@plt+0x9d40>
  40c690:	add	x3, x1, #0xf
  40c694:	and	x3, x3, #0xfffffffffffffff8
  40c698:	str	x3, [x2]
  40c69c:	ldr	d0, [x1]
  40c6a0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c6a4:	add	x1, x1, #0xbc0
  40c6a8:	bl	4023d0 <sprintf@plt>
  40c6ac:	b	40c320 <ferror@plt+0x99b0>
  40c6b0:	add	w4, w3, #0x10
  40c6b4:	str	w4, [x2, #28]
  40c6b8:	cmp	w4, #0x0
  40c6bc:	b.gt	40c690 <ferror@plt+0x9d20>
  40c6c0:	ldr	x1, [x2, #16]
  40c6c4:	add	x1, x1, w3, sxtw
  40c6c8:	b	40c69c <ferror@plt+0x9d2c>
  40c6cc:	ldr	x0, [x21, #8]
  40c6d0:	ldr	w2, [x0, #24]
  40c6d4:	ldr	x1, [x0]
  40c6d8:	tbnz	w2, #31, 40c76c <ferror@plt+0x9dfc>
  40c6dc:	add	x2, x1, #0xf
  40c6e0:	and	x2, x2, #0xfffffffffffffff8
  40c6e4:	str	x2, [x0]
  40c6e8:	ldr	w2, [x0, #24]
  40c6ec:	ldr	x1, [x1]
  40c6f0:	str	x1, [sp, #128]
  40c6f4:	ldr	x1, [x0]
  40c6f8:	tbnz	w2, #31, 40c788 <ferror@plt+0x9e18>
  40c6fc:	add	x2, x1, #0xb
  40c700:	and	x2, x2, #0xfffffffffffffff8
  40c704:	str	x2, [x0]
  40c708:	ldr	w24, [x1]
  40c70c:	mov	x27, #0x0                   	// #0
  40c710:	sub	w28, w24, #0x1
  40c714:	cmp	w24, w27
  40c718:	b.ls	40c174 <ferror@plt+0x9804>  // b.plast
  40c71c:	ldr	x1, [sp, #128]
  40c720:	ldr	x0, [x19, #8]
  40c724:	ldr	w2, [x1, x27, lsl #2]
  40c728:	mov	x1, x23
  40c72c:	add	x0, x0, #0xcc
  40c730:	bl	4023d0 <sprintf@plt>
  40c734:	ldr	x1, [x19, #8]
  40c738:	mov	x0, x19
  40c73c:	add	x1, x1, #0xcc
  40c740:	bl	40b678 <ferror@plt+0x8d08>
  40c744:	cmp	w28, w27
  40c748:	b.ls	40c764 <ferror@plt+0x9df4>  // b.plast
  40c74c:	mov	x0, x19
  40c750:	mov	w1, #0x2c                  	// #44
  40c754:	bl	40b2cc <ferror@plt+0x895c>
  40c758:	mov	x0, x19
  40c75c:	mov	w1, #0x20                  	// #32
  40c760:	bl	40b2cc <ferror@plt+0x895c>
  40c764:	add	x27, x27, #0x1
  40c768:	b	40c714 <ferror@plt+0x9da4>
  40c76c:	add	w3, w2, #0x8
  40c770:	str	w3, [x0, #24]
  40c774:	cmp	w3, #0x0
  40c778:	b.gt	40c6dc <ferror@plt+0x9d6c>
  40c77c:	ldr	x1, [x0, #8]
  40c780:	add	x1, x1, w2, sxtw
  40c784:	b	40c6e8 <ferror@plt+0x9d78>
  40c788:	add	w3, w2, #0x8
  40c78c:	str	w3, [x0, #24]
  40c790:	cmp	w3, #0x0
  40c794:	b.gt	40c6fc <ferror@plt+0x9d8c>
  40c798:	ldr	x1, [x0, #8]
  40c79c:	add	x1, x1, w2, sxtw
  40c7a0:	b	40c708 <ferror@plt+0x9d98>
  40c7a4:	cbz	w4, 40c7f8 <ferror@plt+0x9e88>
  40c7a8:	ldr	x2, [x21, #8]
  40c7ac:	ldr	x0, [x19, #8]
  40c7b0:	ldr	w3, [x2, #24]
  40c7b4:	add	x0, x0, #0xcc
  40c7b8:	ldr	x1, [x2]
  40c7bc:	tbnz	w3, #31, 40c7dc <ferror@plt+0x9e6c>
  40c7c0:	add	x3, x1, #0xf
  40c7c4:	and	x3, x3, #0xfffffffffffffff8
  40c7c8:	str	x3, [x2]
  40c7cc:	ldr	x2, [x1]
  40c7d0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c7d4:	add	x1, x1, #0xbc3
  40c7d8:	b	40c31c <ferror@plt+0x99ac>
  40c7dc:	add	w4, w3, #0x8
  40c7e0:	str	w4, [x2, #24]
  40c7e4:	cmp	w4, #0x0
  40c7e8:	b.gt	40c7c0 <ferror@plt+0x9e50>
  40c7ec:	ldr	x1, [x2, #8]
  40c7f0:	add	x1, x1, w3, sxtw
  40c7f4:	b	40c7cc <ferror@plt+0x9e5c>
  40c7f8:	cmp	w24, #0x1
  40c7fc:	b.eq	40c85c <ferror@plt+0x9eec>  // b.none
  40c800:	cmp	w24, #0x2
  40c804:	b.eq	40c8ac <ferror@plt+0x9f3c>  // b.none
  40c808:	cbnz	w24, 40c174 <ferror@plt+0x9804>
  40c80c:	ldr	x2, [x21, #8]
  40c810:	ldr	x0, [x19, #8]
  40c814:	ldr	w3, [x2, #24]
  40c818:	add	x0, x0, #0xcc
  40c81c:	ldr	x1, [x2]
  40c820:	tbnz	w3, #31, 40c840 <ferror@plt+0x9ed0>
  40c824:	add	x3, x1, #0xb
  40c828:	and	x3, x3, #0xfffffffffffffff8
  40c82c:	str	x3, [x2]
  40c830:	ldr	w2, [x1]
  40c834:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c838:	add	x1, x1, #0xbc8
  40c83c:	b	40c2c8 <ferror@plt+0x9958>
  40c840:	add	w4, w3, #0x8
  40c844:	str	w4, [x2, #24]
  40c848:	cmp	w4, #0x0
  40c84c:	b.gt	40c824 <ferror@plt+0x9eb4>
  40c850:	ldr	x1, [x2, #8]
  40c854:	add	x1, x1, w3, sxtw
  40c858:	b	40c830 <ferror@plt+0x9ec0>
  40c85c:	ldr	x2, [x21, #8]
  40c860:	ldr	x0, [x19, #8]
  40c864:	ldr	w3, [x2, #24]
  40c868:	add	x0, x0, #0xcc
  40c86c:	ldr	x1, [x2]
  40c870:	tbnz	w3, #31, 40c890 <ferror@plt+0x9f20>
  40c874:	add	x3, x1, #0xf
  40c878:	and	x3, x3, #0xfffffffffffffff8
  40c87c:	str	x3, [x2]
  40c880:	ldr	x2, [x1]
  40c884:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c888:	add	x1, x1, #0xbcb
  40c88c:	b	40c31c <ferror@plt+0x99ac>
  40c890:	add	w4, w3, #0x8
  40c894:	str	w4, [x2, #24]
  40c898:	cmp	w4, #0x0
  40c89c:	b.gt	40c874 <ferror@plt+0x9f04>
  40c8a0:	ldr	x1, [x2, #8]
  40c8a4:	add	x1, x1, w3, sxtw
  40c8a8:	b	40c880 <ferror@plt+0x9f10>
  40c8ac:	ldr	x2, [x21, #8]
  40c8b0:	ldr	x0, [x19, #8]
  40c8b4:	ldr	w3, [x2, #24]
  40c8b8:	add	x0, x0, #0xcc
  40c8bc:	ldr	x1, [x2]
  40c8c0:	tbnz	w3, #31, 40c8e0 <ferror@plt+0x9f70>
  40c8c4:	add	x3, x1, #0xf
  40c8c8:	and	x3, x3, #0xfffffffffffffff8
  40c8cc:	str	x3, [x2]
  40c8d0:	ldr	x2, [x1]
  40c8d4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c8d8:	add	x1, x1, #0xbcf
  40c8dc:	b	40c31c <ferror@plt+0x99ac>
  40c8e0:	add	w4, w3, #0x8
  40c8e4:	str	w4, [x2, #24]
  40c8e8:	cmp	w4, #0x0
  40c8ec:	b.gt	40c8c4 <ferror@plt+0x9f54>
  40c8f0:	ldr	x1, [x2, #8]
  40c8f4:	add	x1, x1, w3, sxtw
  40c8f8:	b	40c8d0 <ferror@plt+0x9f60>
  40c8fc:	ldrb	w2, [x27, #1]
  40c900:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  40c904:	add	x0, x0, #0x21a
  40c908:	ldrb	w1, [x27, #1]
  40c90c:	ldrh	w0, [x0, x2, lsl #1]
  40c910:	tbz	w0, #2, 40c944 <ferror@plt+0x9fd4>
  40c914:	add	x1, sp, #0xc8
  40c918:	add	x0, x27, #0x1
  40c91c:	mov	w2, #0xa                   	// #10
  40c920:	bl	402320 <strtoul@plt>
  40c924:	ldr	x1, [sp, #200]
  40c928:	ldrb	w1, [x1]
  40c92c:	cmp	w1, #0x73
  40c930:	b.eq	40c9d4 <ferror@plt+0xa064>  // b.none
  40c934:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c938:	mov	w1, #0x54b                 	// #1355
  40c93c:	add	x2, x2, #0xb96
  40c940:	b	40ba00 <ferror@plt+0x9090>
  40c944:	cmp	w1, #0x2a
  40c948:	b.eq	40c95c <ferror@plt+0x9fec>  // b.none
  40c94c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c950:	mov	w1, #0x54f                 	// #1359
  40c954:	add	x2, x2, #0xb96
  40c958:	b	40ba00 <ferror@plt+0x9090>
  40c95c:	ldrb	w0, [x27, #2]
  40c960:	cmp	w0, #0x73
  40c964:	b.eq	40c978 <ferror@plt+0xa008>  // b.none
  40c968:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c96c:	mov	w1, #0x551                 	// #1361
  40c970:	add	x2, x2, #0xb96
  40c974:	b	40ba00 <ferror@plt+0x9090>
  40c978:	ldr	x1, [x21, #8]
  40c97c:	ldr	w2, [x1, #24]
  40c980:	ldr	x0, [x1]
  40c984:	tbnz	w2, #31, 40c9b8 <ferror@plt+0xa048>
  40c988:	add	x2, x0, #0xb
  40c98c:	and	x2, x2, #0xfffffffffffffff8
  40c990:	str	x2, [x1]
  40c994:	add	w20, w20, #0x1
  40c998:	ldr	w0, [x0]
  40c99c:	ldr	x1, [x25, w20, uxtw #3]
  40c9a0:	cmp	x28, x1
  40c9a4:	b.eq	40c9d4 <ferror@plt+0xa064>  // b.none
  40c9a8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40c9ac:	mov	w1, #0x555                 	// #1365
  40c9b0:	add	x2, x2, #0xb96
  40c9b4:	b	40ba00 <ferror@plt+0x9090>
  40c9b8:	add	w3, w2, #0x8
  40c9bc:	str	w3, [x1, #24]
  40c9c0:	cmp	w3, #0x0
  40c9c4:	b.gt	40c988 <ferror@plt+0xa018>
  40c9c8:	ldr	x0, [x1, #8]
  40c9cc:	add	x0, x0, w2, sxtw
  40c9d0:	b	40c994 <ferror@plt+0xa024>
  40c9d4:	ldr	x3, [x21, #8]
  40c9d8:	ldr	w1, [x3, #24]
  40c9dc:	ldr	x2, [x3]
  40c9e0:	tbnz	w1, #31, 40ca14 <ferror@plt+0xa0a4>
  40c9e4:	add	x1, x2, #0xf
  40c9e8:	and	x1, x1, #0xfffffffffffffff8
  40c9ec:	str	x1, [x3]
  40c9f0:	ldr	x24, [x2]
  40c9f4:	tbz	w0, #31, 40ca30 <ferror@plt+0xa0c0>
  40c9f8:	mov	x0, x24
  40c9fc:	bl	402330 <strlen@plt>
  40ca00:	add	x2, x24, x0
  40ca04:	mov	x1, x24
  40ca08:	mov	x0, x19
  40ca0c:	bl	40b434 <ferror@plt+0x8ac4>
  40ca10:	b	40c174 <ferror@plt+0x9804>
  40ca14:	add	w4, w1, #0x8
  40ca18:	str	w4, [x3, #24]
  40ca1c:	cmp	w4, #0x0
  40ca20:	b.gt	40c9e4 <ferror@plt+0xa074>
  40ca24:	ldr	x2, [x3, #8]
  40ca28:	add	x2, x2, w1, sxtw
  40ca2c:	b	40c9f0 <ferror@plt+0xa080>
  40ca30:	sxtw	x1, w0
  40ca34:	mov	x0, x24
  40ca38:	bl	402380 <strnlen@plt>
  40ca3c:	b	40ca00 <ferror@plt+0xa090>
  40ca40:	ldr	x9, [x19, #48]
  40ca44:	cbnz	x9, 40ca58 <ferror@plt+0xa0e8>
  40ca48:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40ca4c:	mov	w1, #0x56d                 	// #1389
  40ca50:	add	x2, x2, #0xb96
  40ca54:	b	40ba00 <ferror@plt+0x9090>
  40ca58:	str	x28, [sp]
  40ca5c:	add	x7, sp, #0xc7
  40ca60:	mov	w3, w24
  40ca64:	mov	x2, x27
  40ca68:	mov	x1, x21
  40ca6c:	mov	x0, x19
  40ca70:	blr	x9
  40ca74:	tst	w0, #0xff
  40ca78:	b.ne	40c174 <ferror@plt+0x9804>  // b.any
  40ca7c:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40ca80:	mov	w1, #0x571                 	// #1393
  40ca84:	add	x2, x2, #0xb96
  40ca88:	b	40ba00 <ferror@plt+0x9090>
  40ca8c:	ldr	x0, [x19, #56]
  40ca90:	cbz	x0, 40caa4 <ferror@plt+0xa134>
  40ca94:	ldr	x1, [x0]
  40ca98:	ldr	x2, [x1, #16]
  40ca9c:	mov	x1, x19
  40caa0:	blr	x2
  40caa4:	ldr	x0, [sp, #112]
  40caa8:	ldp	x29, x30, [sp, #16]
  40caac:	ldp	x21, x22, [sp, #48]
  40cab0:	ldp	x23, x24, [sp, #64]
  40cab4:	ldp	x25, x26, [sp, #80]
  40cab8:	ldp	x27, x28, [sp, #96]
  40cabc:	str	x0, [x0, #176]
  40cac0:	str	wzr, [x0, #200]
  40cac4:	ldr	x0, [sp, #120]
  40cac8:	str	wzr, [x19, #32]
  40cacc:	stur	x0, [x19, #36]
  40cad0:	strb	wzr, [x19, #64]
  40cad4:	ldp	x19, x20, [sp, #32]
  40cad8:	add	sp, sp, #0x1c0
  40cadc:	ret
  40cae0:	ldrb	w0, [x20, #1]
  40cae4:	cmp	w0, #0x3e
  40cae8:	b.eq	40ba40 <ferror@plt+0x90d0>  // b.none
  40caec:	b.hi	40cbdc <ferror@plt+0xa26c>  // b.pmore
  40caf0:	cmp	w0, #0x27
  40caf4:	b.eq	40ba8c <ferror@plt+0x911c>  // b.none
  40caf8:	b.hi	40cb48 <ferror@plt+0xa1d8>  // b.pmore
  40cafc:	cbz	w0, 40b9f4 <ferror@plt+0x9084>
  40cb00:	cmp	w0, #0x25
  40cb04:	b.eq	40ba0c <ferror@plt+0x909c>  // b.none
  40cb08:	ldp	x0, x1, [x26, #24]
  40cb0c:	cmp	x1, x0
  40cb10:	b.ne	40cb20 <ferror@plt+0xa1b0>  // b.any
  40cb14:	mov	x0, x26
  40cb18:	mov	x1, #0x1                   	// #1
  40cb1c:	bl	439ca4 <_obstack_newchunk@@Base>
  40cb20:	ldr	x0, [x26, #24]
  40cb24:	cmp	w22, #0x3b
  40cb28:	add	x1, x0, #0x1
  40cb2c:	str	x1, [x26, #24]
  40cb30:	strb	wzr, [x0]
  40cb34:	b.ls	40bae4 <ferror@plt+0x9174>  // b.plast
  40cb38:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40cb3c:	mov	w1, #0x450                 	// #1104
  40cb40:	add	x2, x2, #0xb96
  40cb44:	b	40ba00 <ferror@plt+0x9090>
  40cb48:	cmp	w0, #0x3c
  40cb4c:	b.ne	40cb08 <ferror@plt+0xa198>  // b.any
  40cb50:	ldr	x0, [sp, #160]
  40cb54:	ldr	x0, [x0]
  40cb58:	bl	402330 <strlen@plt>
  40cb5c:	mov	x27, x0
  40cb60:	ldp	x1, x0, [x26, #24]
  40cb64:	sub	x0, x0, x1
  40cb68:	cmp	x27, x0
  40cb6c:	b.ls	40cb7c <ferror@plt+0xa20c>  // b.plast
  40cb70:	mov	x1, x27
  40cb74:	mov	x0, x26
  40cb78:	bl	439ca4 <_obstack_newchunk@@Base>
  40cb7c:	ldr	x0, [sp, #160]
  40cb80:	mov	x2, x27
  40cb84:	ldr	x1, [x0]
  40cb88:	ldr	x0, [x26, #24]
  40cb8c:	bl	4022e0 <memcpy@plt>
  40cb90:	ldr	x0, [x26, #24]
  40cb94:	ldr	x1, [sp, #176]
  40cb98:	add	x0, x0, x27
  40cb9c:	str	x0, [x26, #24]
  40cba0:	ldrb	w0, [x19, #67]
  40cba4:	bl	40685c <ferror@plt+0x3eec>
  40cba8:	mov	x27, x0
  40cbac:	bl	402330 <strlen@plt>
  40cbb0:	mov	x28, x0
  40cbb4:	ldp	x1, x0, [x26, #24]
  40cbb8:	sub	x0, x0, x1
  40cbbc:	cmp	x28, x0
  40cbc0:	b.ls	40cbd0 <ferror@plt+0xa260>  // b.plast
  40cbc4:	mov	x1, x28
  40cbc8:	mov	x0, x26
  40cbcc:	bl	439ca4 <_obstack_newchunk@@Base>
  40cbd0:	mov	x2, x28
  40cbd4:	mov	x1, x27
  40cbd8:	b	40bac0 <ferror@plt+0x9150>
  40cbdc:	cmp	w0, #0x52
  40cbe0:	b.eq	40bad8 <ferror@plt+0x9168>  // b.none
  40cbe4:	cmp	w0, #0x6d
  40cbe8:	b.ne	40cb08 <ferror@plt+0xa198>  // b.any
  40cbec:	ldr	w0, [x21, #16]
  40cbf0:	bl	43a098 <_obstack_memory_used@@Base+0x230>
  40cbf4:	b	40cba8 <ferror@plt+0xa238>
  40cbf8:	stp	x29, x30, [sp, #-32]!
  40cbfc:	mov	x2, #0x1                   	// #1
  40cc00:	mov	x29, sp
  40cc04:	stp	x19, x20, [sp, #16]
  40cc08:	mov	x19, x0
  40cc0c:	ldur	x20, [x0, #36]
  40cc10:	stur	x2, [x0, #36]
  40cc14:	bl	40b8bc <ferror@plt+0x8f4c>
  40cc18:	mov	x0, x19
  40cc1c:	bl	40b6ac <ferror@plt+0x8d3c>
  40cc20:	stur	x20, [x19, #36]
  40cc24:	ldp	x19, x20, [sp, #16]
  40cc28:	ldp	x29, x30, [sp], #32
  40cc2c:	ret
  40cc30:	stp	x29, x30, [sp, #-288]!
  40cc34:	mov	x29, sp
  40cc38:	stp	x19, x20, [sp, #16]
  40cc3c:	mov	x19, x0
  40cc40:	add	x0, sp, #0x120
  40cc44:	stp	x0, x0, [sp, #40]
  40cc48:	add	x0, sp, #0xf0
  40cc4c:	mov	x20, x1
  40cc50:	str	x0, [sp, #56]
  40cc54:	mov	w0, #0xffffffd0            	// #-48
  40cc58:	str	w0, [sp, #64]
  40cc5c:	mov	w0, #0xffffff80            	// #-128
  40cc60:	str	w0, [sp, #68]
  40cc64:	str	q0, [sp, #112]
  40cc68:	str	q1, [sp, #128]
  40cc6c:	str	q2, [sp, #144]
  40cc70:	str	q3, [sp, #160]
  40cc74:	str	q4, [sp, #176]
  40cc78:	str	q5, [sp, #192]
  40cc7c:	str	q6, [sp, #208]
  40cc80:	str	q7, [sp, #224]
  40cc84:	stp	x2, x3, [sp, #240]
  40cc88:	stp	x4, x5, [sp, #256]
  40cc8c:	stp	x6, x7, [sp, #272]
  40cc90:	bl	4028c0 <__errno_location@plt>
  40cc94:	ldr	w0, [x0]
  40cc98:	str	w0, [sp, #88]
  40cc9c:	add	x0, sp, #0x28
  40cca0:	add	x1, sp, #0x48
  40cca4:	str	x20, [sp, #72]
  40cca8:	str	x0, [sp, #80]
  40ccac:	mov	x0, x19
  40ccb0:	bl	40cbf8 <ferror@plt+0xa288>
  40ccb4:	ldp	x19, x20, [sp, #16]
  40ccb8:	ldp	x29, x30, [sp], #288
  40ccbc:	ret
  40ccc0:	stp	x29, x30, [sp, #-288]!
  40ccc4:	mov	x29, sp
  40ccc8:	stp	x19, x20, [sp, #16]
  40cccc:	mov	x19, x0
  40ccd0:	add	x0, sp, #0x120
  40ccd4:	stp	x0, x0, [sp, #40]
  40ccd8:	add	x0, sp, #0xf0
  40ccdc:	mov	x20, x1
  40cce0:	str	x0, [sp, #56]
  40cce4:	mov	w0, #0xffffffd0            	// #-48
  40cce8:	str	w0, [sp, #64]
  40ccec:	mov	w0, #0xffffff80            	// #-128
  40ccf0:	str	w0, [sp, #68]
  40ccf4:	str	q0, [sp, #112]
  40ccf8:	str	q1, [sp, #128]
  40ccfc:	str	q2, [sp, #144]
  40cd00:	str	q3, [sp, #160]
  40cd04:	str	q4, [sp, #176]
  40cd08:	str	q5, [sp, #192]
  40cd0c:	str	q6, [sp, #208]
  40cd10:	str	q7, [sp, #224]
  40cd14:	stp	x2, x3, [sp, #240]
  40cd18:	stp	x4, x5, [sp, #256]
  40cd1c:	stp	x6, x7, [sp, #272]
  40cd20:	bl	4028c0 <__errno_location@plt>
  40cd24:	add	x1, sp, #0x48
  40cd28:	ldr	w0, [x0]
  40cd2c:	str	w0, [sp, #88]
  40cd30:	add	x0, sp, #0x28
  40cd34:	str	x20, [sp, #72]
  40cd38:	str	x0, [sp, #80]
  40cd3c:	mov	x0, x19
  40cd40:	bl	40b8bc <ferror@plt+0x8f4c>
  40cd44:	mov	x0, x19
  40cd48:	bl	40b6ac <ferror@plt+0x8d3c>
  40cd4c:	ldp	x19, x20, [sp, #16]
  40cd50:	ldp	x29, x30, [sp], #288
  40cd54:	ret
  40cd58:	stp	x29, x30, [sp, #-112]!
  40cd5c:	mov	x29, sp
  40cd60:	stp	x19, x20, [sp, #16]
  40cd64:	mov	x19, x0
  40cd68:	stp	x21, x22, [sp, #32]
  40cd6c:	mov	x21, #0x0                   	// #0
  40cd70:	mov	w22, #0x1                   	// #1
  40cd74:	stp	x23, x24, [sp, #48]
  40cd78:	stp	x25, x26, [sp, #64]
  40cd7c:	bl	402330 <strlen@plt>
  40cd80:	mov	x20, x0
  40cd84:	cmp	x21, x20
  40cd88:	b.cs	40ce24 <ferror@plt+0xa4b4>  // b.hs, b.nlast
  40cd8c:	sub	x1, x20, x21
  40cd90:	add	x2, sp, #0x68
  40cd94:	add	x0, x19, x21
  40cd98:	bl	40ab94 <ferror@plt+0x8224>
  40cd9c:	sxtw	x1, w0
  40cda0:	cbz	w0, 40cdbc <ferror@plt+0xa44c>
  40cda4:	ldr	w0, [sp, #104]
  40cda8:	cmp	w0, #0x1f
  40cdac:	b.ls	40cdbc <ferror@plt+0xa44c>  // b.plast
  40cdb0:	sub	w0, w0, #0x7f
  40cdb4:	cmp	w0, #0x20
  40cdb8:	b.hi	40ce14 <ferror@plt+0xa4a4>  // b.pmore
  40cdbc:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  40cdc0:	lsl	x0, x20, #2
  40cdc4:	add	x0, x0, #0x1
  40cdc8:	adrp	x24, 44b000 <_obstack_memory_used@@Base+0x11198>
  40cdcc:	ldr	x1, [x1, #1232]
  40cdd0:	add	x24, x24, #0xbd4
  40cdd4:	mov	x23, #0x0                   	// #0
  40cdd8:	blr	x1
  40cddc:	mov	x22, x0
  40cde0:	mov	x21, x0
  40cde4:	ldrb	w2, [x19, x23]
  40cde8:	sub	w0, w2, #0x20
  40cdec:	and	w0, w0, #0xff
  40cdf0:	cmp	w0, #0x5e
  40cdf4:	b.hi	40ce44 <ferror@plt+0xa4d4>  // b.pmore
  40cdf8:	strb	w2, [x21], #1
  40cdfc:	add	x23, x23, #0x1
  40ce00:	cmp	x20, x23
  40ce04:	b.ne	40cde4 <ferror@plt+0xa474>  // b.any
  40ce08:	mov	x19, x22
  40ce0c:	strb	wzr, [x21]
  40ce10:	b	40ce28 <ferror@plt+0xa4b8>
  40ce14:	cmp	x1, #0x2
  40ce18:	add	x21, x21, x1
  40ce1c:	csel	w22, w22, wzr, cc  // cc = lo, ul, last
  40ce20:	b	40cd84 <ferror@plt+0xa414>
  40ce24:	cbz	w22, 40ce58 <ferror@plt+0xa4e8>
  40ce28:	mov	x0, x19
  40ce2c:	ldp	x19, x20, [sp, #16]
  40ce30:	ldp	x21, x22, [sp, #32]
  40ce34:	ldp	x23, x24, [sp, #48]
  40ce38:	ldp	x25, x26, [sp, #64]
  40ce3c:	ldp	x29, x30, [sp], #112
  40ce40:	ret
  40ce44:	mov	x0, x21
  40ce48:	mov	x1, x24
  40ce4c:	add	x21, x21, #0x4
  40ce50:	bl	4023d0 <sprintf@plt>
  40ce54:	b	40cdfc <ferror@plt+0xa48c>
  40ce58:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40ce5c:	ldrb	w25, [x0, #1840]
  40ce60:	cbnz	w25, 40ce28 <ferror@plt+0xa4b8>
  40ce64:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40ce68:	adrp	x24, 478000 <_obstack_memory_used@@Base+0x3e198>
  40ce6c:	ldr	x0, [x0, #1832]
  40ce70:	cbz	x0, 40cf60 <ferror@plt+0xa5f0>
  40ce74:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40ce78:	add	x1, x1, #0xd63
  40ce7c:	bl	4027c0 <iconv_open@plt>
  40ce80:	mov	x22, x0
  40ce84:	cmn	x0, #0x1
  40ce88:	b.eq	40cf60 <ferror@plt+0xa5f0>  // b.none
  40ce8c:	lsl	x21, x20, #2
  40ce90:	add	x26, x24, #0x4d0
  40ce94:	add	x21, x21, #0x1
  40ce98:	ldr	x1, [x26]
  40ce9c:	sub	x0, x21, #0x1
  40cea0:	str	x19, [sp, #80]
  40cea4:	stp	x20, x0, [sp, #96]
  40cea8:	mov	x0, x21
  40ceac:	blr	x1
  40ceb0:	mov	x23, x0
  40ceb4:	mov	x4, #0x0                   	// #0
  40ceb8:	mov	x0, x22
  40cebc:	mov	x3, #0x0                   	// #0
  40cec0:	mov	x2, #0x0                   	// #0
  40cec4:	mov	x1, #0x0                   	// #0
  40cec8:	str	x23, [sp, #88]
  40cecc:	bl	4026e0 <iconv@plt>
  40ced0:	cmn	x0, #0x1
  40ced4:	b.eq	40cf54 <ferror@plt+0xa5e4>  // b.none
  40ced8:	add	x4, sp, #0x68
  40cedc:	add	x3, sp, #0x58
  40cee0:	add	x2, sp, #0x60
  40cee4:	add	x1, sp, #0x50
  40cee8:	mov	x0, x22
  40ceec:	bl	4026e0 <iconv@plt>
  40cef0:	cmn	x0, #0x1
  40cef4:	b.eq	40cf00 <ferror@plt+0xa590>  // b.none
  40cef8:	ldr	x1, [sp, #96]
  40cefc:	cbz	x1, 40cf24 <ferror@plt+0xa5b4>
  40cf00:	bl	4028c0 <__errno_location@plt>
  40cf04:	ldr	w0, [x0]
  40cf08:	cmp	w0, #0x7
  40cf0c:	b.ne	40cf54 <ferror@plt+0xa5e4>  // b.any
  40cf10:	ldr	x1, [x26, #8]
  40cf14:	lsl	x21, x21, #1
  40cf18:	mov	x0, x23
  40cf1c:	blr	x1
  40cf20:	b	40ce98 <ferror@plt+0xa528>
  40cf24:	cbnz	x0, 40cf54 <ferror@plt+0xa5e4>
  40cf28:	add	x4, sp, #0x68
  40cf2c:	add	x3, sp, #0x58
  40cf30:	mov	x0, x22
  40cf34:	mov	x2, #0x0                   	// #0
  40cf38:	mov	x1, #0x0                   	// #0
  40cf3c:	bl	4026e0 <iconv@plt>
  40cf40:	cmn	x0, #0x1
  40cf44:	b.eq	40cf00 <ferror@plt+0xa590>  // b.none
  40cf48:	ldr	x0, [sp, #88]
  40cf4c:	mov	w25, #0x1                   	// #1
  40cf50:	strb	wzr, [x0]
  40cf54:	mov	x0, x22
  40cf58:	bl	402390 <iconv_close@plt>
  40cf5c:	cbnz	w25, 40cfd8 <ferror@plt+0xa668>
  40cf60:	ldr	x1, [x24, #1232]
  40cf64:	mov	x0, #0xa                   	// #10
  40cf68:	adrp	x24, 44b000 <_obstack_memory_used@@Base+0x11198>
  40cf6c:	add	x24, x24, #0xbda
  40cf70:	mul	x0, x20, x0
  40cf74:	mov	x22, #0x0                   	// #0
  40cf78:	add	x0, x0, #0x1
  40cf7c:	blr	x1
  40cf80:	mov	x23, x0
  40cf84:	mov	x21, x0
  40cf88:	cmp	x22, x20
  40cf8c:	b.cs	40cfd4 <ferror@plt+0xa664>  // b.hs, b.nlast
  40cf90:	add	x2, sp, #0x68
  40cf94:	sub	x1, x20, x22
  40cf98:	add	x0, x19, x22
  40cf9c:	bl	40ab94 <ferror@plt+0x8224>
  40cfa0:	sxtw	x25, w0
  40cfa4:	cmp	w0, #0x1
  40cfa8:	b.ne	40cfbc <ferror@plt+0xa64c>  // b.any
  40cfac:	ldrb	w0, [x19, x22]
  40cfb0:	strb	w0, [x21], #1
  40cfb4:	add	x22, x22, x25
  40cfb8:	b	40cf88 <ferror@plt+0xa618>
  40cfbc:	ldr	w2, [sp, #104]
  40cfc0:	mov	x1, x24
  40cfc4:	mov	x0, x21
  40cfc8:	add	x21, x21, #0xa
  40cfcc:	bl	4023d0 <sprintf@plt>
  40cfd0:	b	40cfb4 <ferror@plt+0xa644>
  40cfd4:	strb	wzr, [x21]
  40cfd8:	mov	x19, x23
  40cfdc:	b	40ce28 <ferror@plt+0xa4b8>
  40cfe0:	stp	x29, x30, [sp, #-32]!
  40cfe4:	mov	x2, x1
  40cfe8:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x10198>
  40cfec:	mov	x29, sp
  40cff0:	str	x19, [sp, #16]
  40cff4:	mov	x19, x0
  40cff8:	ldr	x0, [x0, #8]
  40cffc:	add	x1, x1, #0x8b6
  40d000:	add	x0, x0, #0xcc
  40d004:	bl	4023d0 <sprintf@plt>
  40d008:	mov	x0, x19
  40d00c:	ldr	x1, [x19, #8]
  40d010:	ldr	x19, [sp, #16]
  40d014:	add	x1, x1, #0xcc
  40d018:	ldp	x29, x30, [sp], #32
  40d01c:	b	40b678 <ferror@plt+0x8d08>
  40d020:	stp	x29, x30, [sp, #-32]!
  40d024:	mov	x29, sp
  40d028:	stp	x19, x20, [sp, #16]
  40d02c:	mov	x20, x1
  40d030:	ldrh	w1, [x1, #2]
  40d034:	cbnz	w1, 40d048 <ferror@plt+0xa6d8>
  40d038:	ldrh	w1, [x20]
  40d03c:	ldp	x19, x20, [sp, #16]
  40d040:	ldp	x29, x30, [sp], #32
  40d044:	b	40cfe0 <ferror@plt+0xa670>
  40d048:	mov	x19, x0
  40d04c:	mov	w1, #0x5b                  	// #91
  40d050:	bl	40b2cc <ferror@plt+0x895c>
  40d054:	ldrh	w1, [x20]
  40d058:	mov	x0, x19
  40d05c:	bl	40cfe0 <ferror@plt+0xa670>
  40d060:	mov	x0, x19
  40d064:	mov	w1, #0x2c                  	// #44
  40d068:	bl	40b2cc <ferror@plt+0x895c>
  40d06c:	ldrh	w1, [x20, #2]
  40d070:	mov	x0, x19
  40d074:	bl	40cfe0 <ferror@plt+0xa670>
  40d078:	mov	x0, x19
  40d07c:	mov	w1, #0x5d                  	// #93
  40d080:	ldp	x19, x20, [sp, #16]
  40d084:	ldp	x29, x30, [sp], #32
  40d088:	b	40b2cc <ferror@plt+0x895c>
  40d08c:	stp	x29, x30, [sp, #-32]!
  40d090:	mov	x29, sp
  40d094:	stp	x19, x20, [sp, #16]
  40d098:	mov	x20, x1
  40d09c:	ldr	x1, [x1, #8]
  40d0a0:	cbnz	x1, 40d0b4 <ferror@plt+0xa744>
  40d0a4:	ldr	x1, [x20]
  40d0a8:	ldp	x19, x20, [sp, #16]
  40d0ac:	ldp	x29, x30, [sp], #32
  40d0b0:	b	40cfe0 <ferror@plt+0xa670>
  40d0b4:	mov	x19, x0
  40d0b8:	mov	w1, #0x5b                  	// #91
  40d0bc:	bl	40b2cc <ferror@plt+0x895c>
  40d0c0:	ldr	x1, [x20]
  40d0c4:	mov	x0, x19
  40d0c8:	bl	40cfe0 <ferror@plt+0xa670>
  40d0cc:	mov	x0, x19
  40d0d0:	mov	w1, #0x2c                  	// #44
  40d0d4:	bl	40b2cc <ferror@plt+0x895c>
  40d0d8:	ldr	x1, [x20, #8]
  40d0dc:	mov	x0, x19
  40d0e0:	bl	40cfe0 <ferror@plt+0xa670>
  40d0e4:	mov	x0, x19
  40d0e8:	mov	w1, #0x5d                  	// #93
  40d0ec:	ldp	x19, x20, [sp, #16]
  40d0f0:	ldp	x29, x30, [sp], #32
  40d0f4:	b	40b2cc <ferror@plt+0x895c>
  40d0f8:	stp	x29, x30, [sp, #-32]!
  40d0fc:	mov	x29, sp
  40d100:	stp	x19, x20, [sp, #16]
  40d104:	mov	x20, x1
  40d108:	ldr	x1, [x1, #8]
  40d10c:	cbnz	x1, 40d120 <ferror@plt+0xa7b0>
  40d110:	ldr	x1, [x20]
  40d114:	ldp	x19, x20, [sp, #16]
  40d118:	ldp	x29, x30, [sp], #32
  40d11c:	b	40cfe0 <ferror@plt+0xa670>
  40d120:	mov	x19, x0
  40d124:	mov	w1, #0x5b                  	// #91
  40d128:	bl	40b2cc <ferror@plt+0x895c>
  40d12c:	ldr	x1, [x20]
  40d130:	mov	x0, x19
  40d134:	bl	40cfe0 <ferror@plt+0xa670>
  40d138:	mov	x0, x19
  40d13c:	mov	w1, #0x2c                  	// #44
  40d140:	bl	40b2cc <ferror@plt+0x895c>
  40d144:	ldr	x1, [x20, #8]
  40d148:	mov	x0, x19
  40d14c:	bl	40cfe0 <ferror@plt+0xa670>
  40d150:	mov	x0, x19
  40d154:	mov	w1, #0x5d                  	// #93
  40d158:	ldp	x19, x20, [sp, #16]
  40d15c:	ldp	x29, x30, [sp], #32
  40d160:	b	40b2cc <ferror@plt+0x895c>
  40d164:	stp	x29, x30, [sp, #-64]!
  40d168:	mov	w0, #0x0                   	// #0
  40d16c:	mov	x29, sp
  40d170:	stp	x19, x20, [sp, #16]
  40d174:	adrp	x19, 451000 <_obstack_memory_used@@Base+0x17198>
  40d178:	add	x19, x19, #0xaab
  40d17c:	mov	x1, x19
  40d180:	stp	x21, x22, [sp, #32]
  40d184:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  40d188:	stp	x23, x24, [sp, #48]
  40d18c:	bl	402960 <setlocale@plt>
  40d190:	mov	x1, x19
  40d194:	mov	w0, #0x5                   	// #5
  40d198:	bl	402960 <setlocale@plt>
  40d19c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d1a0:	add	x1, x1, #0xc48
  40d1a4:	adrp	x19, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d1a8:	add	x19, x19, #0xc5a
  40d1ac:	mov	x0, x19
  40d1b0:	bl	4024f0 <bindtextdomain@plt>
  40d1b4:	mov	x0, x19
  40d1b8:	adrp	x24, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d1bc:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  40d1c0:	bl	4026b0 <textdomain@plt>
  40d1c4:	add	x24, x24, #0xc5e
  40d1c8:	add	x22, x19, #0x4e0
  40d1cc:	mov	x0, x24
  40d1d0:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x18198>
  40d1d4:	bl	402930 <gettext@plt>
  40d1d8:	add	x23, x23, #0x60e
  40d1dc:	str	x0, [x19, #1248]
  40d1e0:	mov	x0, x23
  40d1e4:	bl	402930 <gettext@plt>
  40d1e8:	str	x0, [x22, #8]
  40d1ec:	mov	w0, #0xe                   	// #14
  40d1f0:	bl	402480 <nl_langinfo@plt>
  40d1f4:	str	x0, [x20, #1832]
  40d1f8:	cbz	x0, 40d230 <ferror@plt+0xa8c0>
  40d1fc:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d200:	mov	x21, x0
  40d204:	add	x1, x1, #0xc60
  40d208:	bl	402570 <strcasecmp@plt>
  40d20c:	cbz	w0, 40d224 <ferror@plt+0xa8b4>
  40d210:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d214:	mov	x0, x21
  40d218:	add	x1, x1, #0xc66
  40d21c:	bl	402570 <strcasecmp@plt>
  40d220:	cbnz	w0, 40d230 <ferror@plt+0xa8c0>
  40d224:	add	x0, x20, #0x728
  40d228:	mov	w1, #0x1                   	// #1
  40d22c:	strb	w1, [x0, #8]
  40d230:	ldr	x0, [x19, #1248]
  40d234:	mov	x1, x24
  40d238:	bl	4026d0 <strcmp@plt>
  40d23c:	cbnz	w0, 40d278 <ferror@plt+0xa908>
  40d240:	ldr	x0, [x22, #8]
  40d244:	mov	x1, x23
  40d248:	bl	4026d0 <strcmp@plt>
  40d24c:	cbnz	w0, 40d278 <ferror@plt+0xa908>
  40d250:	add	x20, x20, #0x728
  40d254:	str	x23, [x19, #1248]
  40d258:	ldrb	w0, [x20, #8]
  40d25c:	cbz	w0, 40d278 <ferror@plt+0xa908>
  40d260:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d264:	add	x0, x0, #0xc6b
  40d268:	str	x0, [x19, #1248]
  40d26c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d270:	add	x0, x0, #0xc6f
  40d274:	str	x0, [x22, #8]
  40d278:	ldp	x19, x20, [sp, #16]
  40d27c:	ldp	x21, x22, [sp, #32]
  40d280:	ldp	x23, x24, [sp, #48]
  40d284:	ldp	x29, x30, [sp], #64
  40d288:	ret
  40d28c:	stp	x29, x30, [sp, #-48]!
  40d290:	mov	x2, #0x0                   	// #0
  40d294:	mov	x1, x0
  40d298:	mov	x29, sp
  40d29c:	stp	x19, x20, [sp, #16]
  40d2a0:	mov	x20, x0
  40d2a4:	mov	x0, #0x0                   	// #0
  40d2a8:	str	x21, [sp, #32]
  40d2ac:	bl	402350 <mbstowcs@plt>
  40d2b0:	add	x2, x0, #0x1
  40d2b4:	mov	x19, x0
  40d2b8:	mov	x1, x20
  40d2bc:	lsl	x3, x2, #2
  40d2c0:	add	x3, x3, #0xf
  40d2c4:	and	x3, x3, #0xfffffffffffffff0
  40d2c8:	sub	sp, sp, x3
  40d2cc:	mov	x21, sp
  40d2d0:	mov	x0, x21
  40d2d4:	bl	402350 <mbstowcs@plt>
  40d2d8:	mov	x1, x19
  40d2dc:	mov	x0, x21
  40d2e0:	bl	4024d0 <wcswidth@plt>
  40d2e4:	mov	sp, x29
  40d2e8:	sxtw	x0, w0
  40d2ec:	ldp	x19, x20, [sp, #16]
  40d2f0:	ldr	x21, [sp, #32]
  40d2f4:	ldp	x29, x30, [sp], #48
  40d2f8:	ret
  40d2fc:	stp	x29, x30, [sp, #-32]!
  40d300:	mov	x29, sp
  40d304:	stp	x19, x20, [sp, #16]
  40d308:	bl	40d28c <ferror@plt+0xa91c>
  40d30c:	mov	x19, x0
  40d310:	add	x0, x0, #0x1
  40d314:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  40d318:	mov	x20, x0
  40d31c:	mov	x2, x19
  40d320:	mov	w1, #0x20                  	// #32
  40d324:	bl	402530 <memset@plt>
  40d328:	mov	x0, x20
  40d32c:	strb	wzr, [x20, x19]
  40d330:	ldp	x19, x20, [sp, #16]
  40d334:	ldp	x29, x30, [sp], #32
  40d338:	ret
  40d33c:	stp	x29, x30, [sp, #-32]!
  40d340:	tst	w0, #0xff
  40d344:	mov	x29, sp
  40d348:	str	x19, [sp, #16]
  40d34c:	mov	x19, x1
  40d350:	b.ne	40d37c <ferror@plt+0xaa0c>  // b.any
  40d354:	mov	x0, x19
  40d358:	mov	x1, #0x10                  	// #16
  40d35c:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  40d360:	mov	x1, #0x0                   	// #0
  40d364:	cmp	x19, x1
  40d368:	b.eq	40d3ac <ferror@plt+0xaa3c>  // b.none
  40d36c:	lsl	x2, x1, #4
  40d370:	add	x1, x1, #0x1
  40d374:	str	xzr, [x0, x2]
  40d378:	b	40d364 <ferror@plt+0xa9f4>
  40d37c:	lsl	x0, x19, #4
  40d380:	mov	x3, #0x0                   	// #0
  40d384:	mov	x2, #0x0                   	// #0
  40d388:	mov	x1, #0x0                   	// #0
  40d38c:	bl	403de8 <ferror@plt+0x1478>
  40d390:	cbnz	x0, 40d360 <ferror@plt+0xa9f0>
  40d394:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d398:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d39c:	add	x2, x2, #0xc73
  40d3a0:	add	x0, x0, #0xc81
  40d3a4:	mov	w1, #0x2b5                 	// #693
  40d3a8:	bl	402980 <ferror@plt+0x10>
  40d3ac:	ldr	x19, [sp, #16]
  40d3b0:	ldp	x29, x30, [sp], #32
  40d3b4:	ret
  40d3b8:	stp	x29, x30, [sp, #-32]!
  40d3bc:	tst	w0, #0xff
  40d3c0:	mov	x29, sp
  40d3c4:	str	x19, [sp, #16]
  40d3c8:	mov	x19, x1
  40d3cc:	b.ne	40d3fc <ferror@plt+0xaa8c>  // b.any
  40d3d0:	mov	x0, x19
  40d3d4:	mov	x1, #0x18                  	// #24
  40d3d8:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  40d3dc:	mov	x1, #0x0                   	// #0
  40d3e0:	mov	x3, #0x18                  	// #24
  40d3e4:	cmp	x19, x1
  40d3e8:	b.eq	40d430 <ferror@plt+0xaac0>  // b.none
  40d3ec:	mul	x2, x1, x3
  40d3f0:	add	x1, x1, #0x1
  40d3f4:	str	xzr, [x0, x2]
  40d3f8:	b	40d3e4 <ferror@plt+0xaa74>
  40d3fc:	mov	x0, #0x18                  	// #24
  40d400:	mov	x3, #0x0                   	// #0
  40d404:	mov	x2, #0x0                   	// #0
  40d408:	mov	x1, #0x0                   	// #0
  40d40c:	mul	x0, x19, x0
  40d410:	bl	403de8 <ferror@plt+0x1478>
  40d414:	cbnz	x0, 40d3dc <ferror@plt+0xaa6c>
  40d418:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d41c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d420:	add	x2, x2, #0xc73
  40d424:	add	x0, x0, #0xc81
  40d428:	mov	w1, #0x2b5                 	// #693
  40d42c:	bl	402980 <ferror@plt+0x10>
  40d430:	ldr	x19, [sp, #16]
  40d434:	ldp	x29, x30, [sp], #32
  40d438:	ret
  40d43c:	cmp	w0, w1
  40d440:	b.cc	40d464 <ferror@plt+0xaaf4>  // b.lo, b.ul, b.last
  40d444:	stp	x29, x30, [sp, #-16]!
  40d448:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d44c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d450:	mov	x29, sp
  40d454:	add	x2, x2, #0xc98
  40d458:	add	x0, x0, #0xcaf
  40d45c:	mov	w1, #0xa2                  	// #162
  40d460:	bl	402980 <ferror@plt+0x10>
  40d464:	cbz	w0, 40d488 <ferror@plt+0xab18>
  40d468:	add	w2, w0, w0, lsl #1
  40d46c:	lsl	w3, w0, #1
  40d470:	cmp	w0, #0xf
  40d474:	lsr	w2, w2, #1
  40d478:	csel	w2, w2, w3, hi  // hi = pmore
  40d47c:	cmp	w2, w1
  40d480:	csel	w0, w2, w1, cs  // cs = hs, nlast
  40d484:	ret
  40d488:	mov	w2, #0x4                   	// #4
  40d48c:	b	40d47c <ferror@plt+0xab0c>
  40d490:	mov	x2, #0x0                   	// #0
  40d494:	mov	w1, #0x3                   	// #3
  40d498:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40d49c:	add	x0, x0, #0x738
  40d4a0:	b	40e408 <ferror@plt+0xba98>
  40d4a4:	stp	x29, x30, [sp, #-80]!
  40d4a8:	mov	x29, sp
  40d4ac:	stp	x19, x20, [sp, #16]
  40d4b0:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  40d4b4:	add	x20, x20, #0x738
  40d4b8:	mov	x19, x1
  40d4bc:	stp	x21, x22, [sp, #32]
  40d4c0:	mov	x22, x3
  40d4c4:	ldr	x0, [x20, #48]
  40d4c8:	stp	x23, x24, [sp, #48]
  40d4cc:	mov	x23, x2
  40d4d0:	and	w24, w4, #0xff
  40d4d4:	str	x1, [sp, #72]
  40d4d8:	add	x1, sp, #0x48
  40d4dc:	bl	40dc34 <ferror@plt+0xb2c4>
  40d4e0:	cbnz	x0, 40d50c <ferror@plt+0xab9c>
  40d4e4:	mov	x0, #0x20                  	// #32
  40d4e8:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  40d4ec:	mov	x2, x0
  40d4f0:	mov	x0, #0x300000000           	// #12884901888
  40d4f4:	mov	x1, x19
  40d4f8:	stp	xzr, xzr, [x2]
  40d4fc:	str	x0, [x2, #16]
  40d500:	mov	x0, x20
  40d504:	strb	wzr, [x2, #24]
  40d508:	bl	40e5c8 <ferror@plt+0xbc58>
  40d50c:	ldr	x0, [x20, #48]
  40d510:	add	x1, sp, #0x48
  40d514:	str	x19, [sp, #72]
  40d518:	bl	40dc34 <ferror@plt+0xb2c4>
  40d51c:	cbz	x0, 40d5a8 <ferror@plt+0xac38>
  40d520:	ldr	x21, [x0]
  40d524:	ldr	x2, [x21]
  40d528:	cmp	x23, x2
  40d52c:	b.ls	40d548 <ferror@plt+0xabd8>  // b.plast
  40d530:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d534:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d538:	add	x2, x2, #0xcbf
  40d53c:	add	x0, x0, #0xcd0
  40d540:	mov	w1, #0x97                  	// #151
  40d544:	bl	402980 <ferror@plt+0x10>
  40d548:	sub	x2, x2, x23
  40d54c:	str	x2, [x21]
  40d550:	cbz	w24, 40d588 <ferror@plt+0xac18>
  40d554:	ldr	x20, [x20, #48]
  40d558:	ubfx	x2, x19, #3, #32
  40d55c:	add	x1, sp, #0x48
  40d560:	mov	w3, #0x0                   	// #0
  40d564:	mov	x0, x20
  40d568:	str	x19, [sp, #72]
  40d56c:	bl	40e030 <ferror@plt+0xb6c0>
  40d570:	cbz	x0, 40d588 <ferror@plt+0xac18>
  40d574:	mov	x1, #0x1                   	// #1
  40d578:	str	x1, [x0]
  40d57c:	ldr	x0, [x20, #24]
  40d580:	add	x0, x0, x1
  40d584:	str	x0, [x20, #24]
  40d588:	ldr	x3, [x21, #32]
  40d58c:	ldp	x19, x20, [sp, #16]
  40d590:	sub	x22, x3, x22
  40d594:	ldp	x23, x24, [sp, #48]
  40d598:	str	x22, [x21, #32]
  40d59c:	ldp	x21, x22, [sp, #32]
  40d5a0:	ldp	x29, x30, [sp], #80
  40d5a4:	ret
  40d5a8:	ldr	x0, [x0, #32]
  40d5ac:	brk	#0x3e8
  40d5b0:	stp	x29, x30, [sp, #-80]!
  40d5b4:	mov	x0, #0x20                  	// #32
  40d5b8:	mov	x29, sp
  40d5bc:	stp	x19, x20, [sp, #16]
  40d5c0:	mul	x20, x2, x3
  40d5c4:	mov	x19, x2
  40d5c8:	stp	x21, x22, [sp, #32]
  40d5cc:	mov	x21, x3
  40d5d0:	adrp	x22, 478000 <_obstack_memory_used@@Base+0x3e198>
  40d5d4:	str	x23, [sp, #48]
  40d5d8:	mov	x23, x1
  40d5dc:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  40d5e0:	mov	x2, x0
  40d5e4:	stp	xzr, xzr, [x0]
  40d5e8:	add	x22, x22, #0x738
  40d5ec:	mov	x0, #0x300000000           	// #12884901888
  40d5f0:	str	x0, [x2, #16]
  40d5f4:	mov	x1, x23
  40d5f8:	strb	wzr, [x2, #24]
  40d5fc:	mov	x0, x22
  40d600:	bl	40e5c8 <ferror@plt+0xbc58>
  40d604:	str	x23, [sp, #72]
  40d608:	ldr	x0, [x22, #48]
  40d60c:	add	x1, sp, #0x48
  40d610:	bl	40dc34 <ferror@plt+0xb2c4>
  40d614:	cbz	x0, 40d66c <ferror@plt+0xacfc>
  40d618:	ldr	x0, [x0]
  40d61c:	ldp	x1, x2, [x0]
  40d620:	add	x2, x2, #0x1
  40d624:	add	x1, x20, x1
  40d628:	stp	x1, x2, [x0]
  40d62c:	ldr	x2, [x0, #16]
  40d630:	cmp	x1, x2
  40d634:	b.ls	40d63c <ferror@plt+0xaccc>  // b.plast
  40d638:	str	x1, [x0, #16]
  40d63c:	ldp	x2, x1, [x0, #32]
  40d640:	str	x21, [x0, #48]
  40d644:	add	x2, x19, x2
  40d648:	str	x2, [x0, #32]
  40d64c:	cmp	x2, x1
  40d650:	b.ls	40d658 <ferror@plt+0xace8>  // b.plast
  40d654:	str	x2, [x0, #40]
  40d658:	ldp	x19, x20, [sp, #16]
  40d65c:	ldp	x21, x22, [sp, #32]
  40d660:	ldr	x23, [sp, #48]
  40d664:	ldp	x29, x30, [sp], #80
  40d668:	ret
  40d66c:	str	xzr, [x0, #48]
  40d670:	brk	#0x3e8
  40d674:	ldr	x2, [x0, #8]
  40d678:	ldr	x0, [x1, #8]
  40d67c:	ldr	x3, [x2]
  40d680:	ldr	x1, [x0]
  40d684:	cmp	x3, x1
  40d688:	b.ne	40d6ac <ferror@plt+0xad3c>  // b.any
  40d68c:	ldr	x1, [x0, #16]
  40d690:	ldr	x3, [x2, #16]
  40d694:	cmp	x3, x1
  40d698:	b.ne	40d6ac <ferror@plt+0xad3c>  // b.any
  40d69c:	ldr	x0, [x0, #8]
  40d6a0:	ldr	x1, [x2, #8]
  40d6a4:	cmp	x1, x0
  40d6a8:	b.eq	40d6c0 <ferror@plt+0xad50>  // b.none
  40d6ac:	cset	w1, cc  // cc = lo, ul, last
  40d6b0:	mov	w0, #0x1                   	// #1
  40d6b4:	cmp	w1, #0x0
  40d6b8:	cneg	w0, w0, eq  // eq = none
  40d6bc:	ret
  40d6c0:	mov	w0, #0x0                   	// #0
  40d6c4:	b	40d6bc <ferror@plt+0xad4c>
  40d6c8:	mov	w3, #0x79b9                	// #31161
  40d6cc:	movk	w3, #0x9e37, lsl #16
  40d6d0:	sub	w3, w3, w1
  40d6d4:	sub	w3, w3, w0
  40d6d8:	sub	w0, w0, w1
  40d6dc:	eor	w3, w3, w1, lsr #13
  40d6e0:	sub	w0, w0, w3
  40d6e4:	sub	w2, w1, w3
  40d6e8:	eor	w0, w0, w3, lsl #8
  40d6ec:	sub	w2, w2, w0
  40d6f0:	sub	w3, w3, w0
  40d6f4:	eor	w2, w2, w0, lsr #13
  40d6f8:	sub	w3, w3, w2
  40d6fc:	sub	w1, w0, w2
  40d700:	eor	w3, w3, w2, lsr #12
  40d704:	sub	w1, w1, w3
  40d708:	sub	w0, w2, w3
  40d70c:	eor	w1, w1, w3, lsl #16
  40d710:	sub	w0, w0, w1
  40d714:	sub	w3, w3, w1
  40d718:	eor	w0, w0, w1, lsr #5
  40d71c:	sub	w3, w3, w0
  40d720:	sub	w1, w1, w0
  40d724:	eor	w3, w3, w0, lsr #3
  40d728:	sub	w1, w1, w3
  40d72c:	sub	w0, w0, w3
  40d730:	eor	w1, w1, w3, lsl #10
  40d734:	sub	w0, w0, w1
  40d738:	eor	w0, w0, w1, lsr #15
  40d73c:	ret
  40d740:	ubfiz	x1, x1, #4, #32
  40d744:	adrp	x4, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d748:	add	x4, x4, #0x10
  40d74c:	add	x5, x4, x1
  40d750:	ldr	w1, [x4, x1]
  40d754:	ldr	w2, [x5, #4]
  40d758:	umull	x2, w0, w2
  40d75c:	lsr	x2, x2, #32
  40d760:	sub	w3, w0, w2
  40d764:	add	w2, w2, w3, lsr #1
  40d768:	ldr	w3, [x5, #12]
  40d76c:	lsr	w2, w2, w3
  40d770:	msub	w0, w2, w1, w0
  40d774:	ret
  40d778:	ubfiz	x1, x1, #4, #32
  40d77c:	adrp	x4, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d780:	add	x4, x4, #0x10
  40d784:	add	w6, w0, #0x1
  40d788:	add	x5, x4, x1
  40d78c:	ldr	w2, [x5, #8]
  40d790:	umull	x2, w0, w2
  40d794:	lsr	x3, x2, #32
  40d798:	sub	w2, w0, w3
  40d79c:	ldr	w0, [x5, #12]
  40d7a0:	add	w2, w3, w2, lsr #1
  40d7a4:	lsr	w2, w2, w0
  40d7a8:	ldr	w0, [x4, x1]
  40d7ac:	sub	w0, w0, #0x2
  40d7b0:	msub	w0, w2, w0, w6
  40d7b4:	ret
  40d7b8:	stp	x29, x30, [sp, #-32]!
  40d7bc:	mov	x29, sp
  40d7c0:	stp	x19, x20, [sp, #16]
  40d7c4:	mov	x19, x0
  40d7c8:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  40d7cc:	sub	x19, x19, #0x1
  40d7d0:	ldr	x1, [x20, #1336]
  40d7d4:	cmn	x19, #0x1
  40d7d8:	b.eq	40d7e8 <ferror@plt+0xae78>  // b.none
  40d7dc:	mov	w0, #0x2d                  	// #45
  40d7e0:	bl	402400 <fputc@plt>
  40d7e4:	b	40d7cc <ferror@plt+0xae5c>
  40d7e8:	ldp	x19, x20, [sp, #16]
  40d7ec:	mov	w0, #0xa                   	// #10
  40d7f0:	ldp	x29, x30, [sp], #32
  40d7f4:	b	402400 <fputc@plt>
  40d7f8:	mov	x12, #0x1070                	// #4208
  40d7fc:	sub	sp, sp, x12
  40d800:	stp	x29, x30, [sp, #48]
  40d804:	add	x29, sp, #0x30
  40d808:	stp	x19, x20, [sp, #64]
  40d80c:	mov	x19, x0
  40d810:	mov	x20, x1
  40d814:	stp	x21, x22, [sp, #80]
  40d818:	mov	x21, x2
  40d81c:	ldr	x22, [x1]
  40d820:	str	x23, [sp, #96]
  40d824:	adrp	x23, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d828:	add	x23, x23, #0xd36
  40d82c:	mov	x1, x23
  40d830:	mov	x0, x22
  40d834:	bl	402850 <strstr@plt>
  40d838:	cbz	x0, 40d844 <ferror@plt+0xaed4>
  40d83c:	add	x22, x0, #0x4
  40d840:	b	40d82c <ferror@plt+0xaebc>
  40d844:	ldr	w3, [x20, #16]
  40d848:	mov	x2, x22
  40d84c:	ldr	x4, [x20, #8]
  40d850:	add	x0, sp, #0x70
  40d854:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d858:	add	x1, x1, #0xd3b
  40d85c:	bl	4023d0 <sprintf@plt>
  40d860:	strb	wzr, [sp, #160]
  40d864:	ldr	x1, [x19]
  40d868:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40d86c:	mov	x2, #0x27ff                	// #10239
  40d870:	ldr	x0, [x0, #1336]
  40d874:	cmp	x1, x2
  40d878:	ldr	x3, [x19, #48]
  40d87c:	b.ls	40d984 <ferror@plt+0xb014>  // b.plast
  40d880:	mov	w2, #0x9fffff              	// #10485759
  40d884:	cmp	x1, x2
  40d888:	b.hi	40d978 <ferror@plt+0xb008>  // b.pmore
  40d88c:	lsr	x4, x1, #10
  40d890:	mov	w5, #0x6b                  	// #107
  40d894:	ucvtf	d0, x1
  40d898:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d89c:	ldr	d2, [x21]
  40d8a0:	ldr	d1, [x1, #3576]
  40d8a4:	mov	x1, #0x27ff                	// #10239
  40d8a8:	ldr	x6, [x19, #16]
  40d8ac:	ucvtf	d2, d2
  40d8b0:	fmul	d0, d0, d1
  40d8b4:	cmp	x6, x1
  40d8b8:	fdiv	d0, d0, d2
  40d8bc:	fmov	d2, d1
  40d8c0:	b.ls	40d99c <ferror@plt+0xb02c>  // b.plast
  40d8c4:	mov	w1, #0x9fffff              	// #10485759
  40d8c8:	cmp	x6, x1
  40d8cc:	b.hi	40d990 <ferror@plt+0xb020>  // b.pmore
  40d8d0:	lsr	x6, x6, #10
  40d8d4:	mov	w7, #0x6b                  	// #107
  40d8d8:	ldr	d3, [x19, #8]
  40d8dc:	mov	x2, #0x27ff                	// #10239
  40d8e0:	ldr	x1, [x19, #32]
  40d8e4:	ucvtf	d1, d3
  40d8e8:	cmp	x1, x2
  40d8ec:	fmul	d1, d1, d2
  40d8f0:	ldr	d2, [x21, #8]
  40d8f4:	ucvtf	d2, d2
  40d8f8:	fdiv	d1, d1, d2
  40d8fc:	b.ls	40d9b0 <ferror@plt+0xb040>  // b.plast
  40d900:	mov	w2, #0x9fffff              	// #10485759
  40d904:	cmp	x1, x2
  40d908:	b.hi	40d9a4 <ferror@plt+0xb034>  // b.pmore
  40d90c:	lsr	x1, x1, #10
  40d910:	mov	w8, #0x6b                  	// #107
  40d914:	ldr	x2, [x19, #40]
  40d918:	mov	x9, #0x27ff                	// #10239
  40d91c:	cmp	x2, x9
  40d920:	b.ls	40d9c4 <ferror@plt+0xb054>  // b.plast
  40d924:	mov	w9, #0x9fffff              	// #10485759
  40d928:	cmp	x2, x9
  40d92c:	b.hi	40d9b8 <ferror@plt+0xb048>  // b.pmore
  40d930:	lsr	x2, x2, #10
  40d934:	mov	w9, #0x6b                  	// #107
  40d938:	str	d3, [sp]
  40d93c:	str	x1, [sp, #8]
  40d940:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40d944:	str	w8, [sp, #16]
  40d948:	add	x1, x1, #0xd46
  40d94c:	str	x2, [sp, #24]
  40d950:	add	x2, sp, #0x70
  40d954:	str	w9, [sp, #32]
  40d958:	bl	402940 <fprintf@plt>
  40d95c:	mov	x12, #0x1070                	// #4208
  40d960:	ldp	x29, x30, [sp, #48]
  40d964:	ldp	x19, x20, [sp, #64]
  40d968:	ldp	x21, x22, [sp, #80]
  40d96c:	ldr	x23, [sp, #96]
  40d970:	add	sp, sp, x12
  40d974:	ret
  40d978:	lsr	x4, x1, #20
  40d97c:	mov	w5, #0x4d                  	// #77
  40d980:	b	40d894 <ferror@plt+0xaf24>
  40d984:	mov	x4, x1
  40d988:	mov	w5, #0x20                  	// #32
  40d98c:	b	40d894 <ferror@plt+0xaf24>
  40d990:	lsr	x6, x6, #20
  40d994:	mov	w7, #0x4d                  	// #77
  40d998:	b	40d8d8 <ferror@plt+0xaf68>
  40d99c:	mov	w7, #0x20                  	// #32
  40d9a0:	b	40d8d8 <ferror@plt+0xaf68>
  40d9a4:	lsr	x1, x1, #20
  40d9a8:	mov	w8, #0x4d                  	// #77
  40d9ac:	b	40d914 <ferror@plt+0xafa4>
  40d9b0:	mov	w8, #0x20                  	// #32
  40d9b4:	b	40d914 <ferror@plt+0xafa4>
  40d9b8:	lsr	x2, x2, #20
  40d9bc:	mov	w9, #0x4d                  	// #77
  40d9c0:	b	40d938 <ferror@plt+0xafc8>
  40d9c4:	mov	w9, #0x20                  	// #32
  40d9c8:	b	40d938 <ferror@plt+0xafc8>
  40d9cc:	sub	sp, sp, #0x20
  40d9d0:	mov	x1, x0
  40d9d4:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40d9d8:	mov	x2, #0x27ff                	// #10239
  40d9dc:	stp	x29, x30, [sp, #16]
  40d9e0:	add	x29, sp, #0x10
  40d9e4:	ldr	x3, [x1]
  40d9e8:	ldr	x0, [x0, #1336]
  40d9ec:	cmp	x3, x2
  40d9f0:	b.ls	40da80 <ferror@plt+0xb110>  // b.plast
  40d9f4:	mov	w2, #0x9fffff              	// #10485759
  40d9f8:	cmp	x3, x2
  40d9fc:	b.hi	40da74 <ferror@plt+0xb104>  // b.pmore
  40da00:	lsr	x3, x3, #10
  40da04:	mov	w4, #0x6b                  	// #107
  40da08:	ldr	x5, [x1, #8]
  40da0c:	mov	x2, #0x27ff                	// #10239
  40da10:	cmp	x5, x2
  40da14:	b.ls	40da94 <ferror@plt+0xb124>  // b.plast
  40da18:	mov	w2, #0x9fffff              	// #10485759
  40da1c:	cmp	x5, x2
  40da20:	b.hi	40da88 <ferror@plt+0xb118>  // b.pmore
  40da24:	lsr	x5, x5, #10
  40da28:	mov	w6, #0x6b                  	// #107
  40da2c:	ldr	x7, [x1, #32]
  40da30:	mov	x1, #0x27ff                	// #10239
  40da34:	cmp	x7, x1
  40da38:	b.ls	40daa8 <ferror@plt+0xb138>  // b.plast
  40da3c:	mov	w1, #0x9fffff              	// #10485759
  40da40:	cmp	x7, x1
  40da44:	b.hi	40da9c <ferror@plt+0xb12c>  // b.pmore
  40da48:	lsr	x7, x7, #10
  40da4c:	mov	w1, #0x6b                  	// #107
  40da50:	str	w1, [sp]
  40da54:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40da58:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40da5c:	add	x2, x2, #0xd83
  40da60:	add	x1, x1, #0xd89
  40da64:	bl	402940 <fprintf@plt>
  40da68:	ldp	x29, x30, [sp, #16]
  40da6c:	add	sp, sp, #0x20
  40da70:	ret
  40da74:	lsr	x3, x3, #20
  40da78:	mov	w4, #0x4d                  	// #77
  40da7c:	b	40da08 <ferror@plt+0xb098>
  40da80:	mov	w4, #0x20                  	// #32
  40da84:	b	40da08 <ferror@plt+0xb098>
  40da88:	lsr	x5, x5, #20
  40da8c:	mov	w6, #0x4d                  	// #77
  40da90:	b	40da2c <ferror@plt+0xb0bc>
  40da94:	mov	w6, #0x20                  	// #32
  40da98:	b	40da2c <ferror@plt+0xb0bc>
  40da9c:	lsr	x7, x7, #20
  40daa0:	mov	w1, #0x4d                  	// #77
  40daa4:	b	40da50 <ferror@plt+0xb0e0>
  40daa8:	mov	w1, #0x20                  	// #32
  40daac:	b	40da50 <ferror@plt+0xb0e0>
  40dab0:	sub	sp, sp, #0x20
  40dab4:	mov	x2, x0
  40dab8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40dabc:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40dac0:	add	x1, x1, #0xde7
  40dac4:	adrp	x7, 44b000 <_obstack_memory_used@@Base+0x11198>
  40dac8:	stp	x29, x30, [sp, #16]
  40dacc:	add	x29, sp, #0x10
  40dad0:	add	x7, x7, #0xda2
  40dad4:	ldr	x0, [x0, #1336]
  40dad8:	str	x1, [sp]
  40dadc:	adrp	x6, 44b000 <_obstack_memory_used@@Base+0x11198>
  40dae0:	adrp	x5, 44b000 <_obstack_memory_used@@Base+0x11198>
  40dae4:	add	x6, x6, #0xdad
  40dae8:	add	x5, x5, #0xdb3
  40daec:	adrp	x4, 44b000 <_obstack_memory_used@@Base+0x11198>
  40daf0:	adrp	x3, 44b000 <_obstack_memory_used@@Base+0x11198>
  40daf4:	add	x4, x4, #0xdb8
  40daf8:	add	x3, x3, #0xdbd
  40dafc:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40db00:	add	x1, x1, #0xdc7
  40db04:	bl	402940 <fprintf@plt>
  40db08:	ldp	x29, x30, [sp, #16]
  40db0c:	add	sp, sp, #0x20
  40db10:	ret
  40db14:	stp	x29, x30, [sp, #-64]!
  40db18:	mov	x29, sp
  40db1c:	stp	x19, x20, [sp, #16]
  40db20:	mov	x20, x0
  40db24:	mov	x0, #0x30                  	// #48
  40db28:	stp	x21, x22, [sp, #32]
  40db2c:	adrp	x21, 44b000 <_obstack_memory_used@@Base+0x11198>
  40db30:	add	x21, x21, #0x10
  40db34:	str	x23, [sp, #48]
  40db38:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  40db3c:	mov	x19, x0
  40db40:	strb	wzr, [x0, #44]
  40db44:	mov	x0, #0xd                   	// #13
  40db48:	stp	xzr, xzr, [x19, #16]
  40db4c:	str	xzr, [x19, #32]
  40db50:	bl	4039fc <ferror@plt+0x108c>
  40db54:	mov	w22, w0
  40db58:	ubfiz	x0, x22, #4, #32
  40db5c:	ldr	w23, [x21, x0]
  40db60:	mov	w0, #0x0                   	// #0
  40db64:	mov	x1, x23
  40db68:	bl	40d33c <ferror@plt+0xa9cc>
  40db6c:	stp	x0, x23, [x19]
  40db70:	mov	x0, #0x30                  	// #48
  40db74:	str	w22, [x19, #40]
  40db78:	str	x19, [x20, #40]
  40db7c:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  40db80:	mov	x19, x0
  40db84:	strb	wzr, [x0, #44]
  40db88:	mov	x0, #0xd                   	// #13
  40db8c:	stp	xzr, xzr, [x19, #16]
  40db90:	str	xzr, [x19, #32]
  40db94:	bl	4039fc <ferror@plt+0x108c>
  40db98:	mov	w22, w0
  40db9c:	ubfiz	x0, x22, #4, #32
  40dba0:	ldr	w23, [x21, x0]
  40dba4:	mov	w0, #0x0                   	// #0
  40dba8:	mov	x1, x23
  40dbac:	bl	40d3b8 <ferror@plt+0xaa48>
  40dbb0:	stp	x0, x23, [x19]
  40dbb4:	mov	x0, #0x30                  	// #48
  40dbb8:	str	w22, [x19, #40]
  40dbbc:	str	x19, [x20, #48]
  40dbc0:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  40dbc4:	mov	x19, x0
  40dbc8:	strb	wzr, [x0, #44]
  40dbcc:	mov	x0, #0xd                   	// #13
  40dbd0:	stp	xzr, xzr, [x19, #16]
  40dbd4:	str	xzr, [x19, #32]
  40dbd8:	bl	4039fc <ferror@plt+0x108c>
  40dbdc:	mov	w22, w0
  40dbe0:	mov	x1, #0x18                  	// #24
  40dbe4:	ubfiz	x0, x22, #4, #32
  40dbe8:	ldr	w21, [x21, x0]
  40dbec:	mov	x0, x21
  40dbf0:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  40dbf4:	mov	x1, #0x0                   	// #0
  40dbf8:	mov	x3, #0x18                  	// #24
  40dbfc:	cmp	x21, x1
  40dc00:	b.ls	40dc14 <ferror@plt+0xb2a4>  // b.plast
  40dc04:	mul	x2, x1, x3
  40dc08:	add	x1, x1, #0x1
  40dc0c:	str	xzr, [x0, x2]
  40dc10:	b	40dbfc <ferror@plt+0xb28c>
  40dc14:	ldr	x23, [sp, #48]
  40dc18:	stp	x0, x21, [x19]
  40dc1c:	str	w22, [x19, #40]
  40dc20:	ldp	x21, x22, [sp, #32]
  40dc24:	str	x19, [x20]
  40dc28:	ldp	x19, x20, [sp, #16]
  40dc2c:	ldp	x29, x30, [sp], #64
  40dc30:	ret
  40dc34:	stp	x29, x30, [sp, #-80]!
  40dc38:	mov	x29, sp
  40dc3c:	stp	x19, x20, [sp, #16]
  40dc40:	mov	x19, x0
  40dc44:	ldr	w0, [x0, #32]
  40dc48:	stp	x21, x22, [sp, #32]
  40dc4c:	add	w0, w0, #0x1
  40dc50:	ldr	x22, [x1]
  40dc54:	stp	x23, x24, [sp, #48]
  40dc58:	str	w0, [x19, #32]
  40dc5c:	str	x25, [sp, #64]
  40dc60:	asr	x24, x22, #3
  40dc64:	ldr	w25, [x19, #40]
  40dc68:	mov	w0, w24
  40dc6c:	mov	w1, w25
  40dc70:	bl	40d740 <ferror@plt+0xadd0>
  40dc74:	mov	w20, w0
  40dc78:	mov	w0, #0x18                  	// #24
  40dc7c:	ldr	x21, [x19]
  40dc80:	umull	x0, w20, w0
  40dc84:	add	x2, x21, x0
  40dc88:	ldr	x0, [x21, x0]
  40dc8c:	cbz	x0, 40dce0 <ferror@plt+0xb370>
  40dc90:	cmp	x0, #0x1
  40dc94:	b.eq	40dca0 <ferror@plt+0xb330>  // b.none
  40dc98:	cmp	x22, x0
  40dc9c:	b.eq	40dce0 <ferror@plt+0xb370>  // b.none
  40dca0:	mov	w1, w25
  40dca4:	mov	w0, w24
  40dca8:	bl	40d778 <ferror@plt+0xae08>
  40dcac:	ldr	w1, [x19, #36]
  40dcb0:	mov	w4, #0x18                  	// #24
  40dcb4:	ldr	x23, [x19, #8]
  40dcb8:	add	w20, w20, w0
  40dcbc:	add	w1, w1, #0x1
  40dcc0:	cmp	x23, w20, uxtw
  40dcc4:	b.hi	40dccc <ferror@plt+0xb35c>  // b.pmore
  40dcc8:	sub	w20, w20, w23
  40dccc:	umull	x3, w20, w4
  40dcd0:	add	x2, x21, x3
  40dcd4:	ldr	x3, [x21, x3]
  40dcd8:	cbnz	x3, 40dd04 <ferror@plt+0xb394>
  40dcdc:	str	w1, [x19, #36]
  40dce0:	ldr	x0, [x2]
  40dce4:	cbz	x0, 40dcec <ferror@plt+0xb37c>
  40dce8:	add	x0, x2, #0x8
  40dcec:	ldp	x19, x20, [sp, #16]
  40dcf0:	ldp	x21, x22, [sp, #32]
  40dcf4:	ldp	x23, x24, [sp, #48]
  40dcf8:	ldr	x25, [sp, #64]
  40dcfc:	ldp	x29, x30, [sp], #80
  40dd00:	ret
  40dd04:	cmp	x3, #0x1
  40dd08:	b.eq	40dcb8 <ferror@plt+0xb348>  // b.none
  40dd0c:	cmp	x22, x3
  40dd10:	b.ne	40dcb8 <ferror@plt+0xb348>  // b.any
  40dd14:	b	40dcdc <ferror@plt+0xb36c>
  40dd18:	stp	x29, x30, [sp, #-48]!
  40dd1c:	mov	w2, #0x0                   	// #0
  40dd20:	mov	x1, #0x8                   	// #8
  40dd24:	mov	x29, sp
  40dd28:	str	x19, [sp, #16]
  40dd2c:	mov	x19, x0
  40dd30:	ldr	x0, [x0]
  40dd34:	str	x0, [sp, #40]
  40dd38:	add	x0, sp, #0x28
  40dd3c:	bl	439814 <ferror@plt+0x36ea4>
  40dd40:	ldr	x1, [x19, #8]
  40dd44:	mov	w2, w0
  40dd48:	add	x0, sp, #0x28
  40dd4c:	str	x1, [sp, #40]
  40dd50:	mov	x1, #0x8                   	// #8
  40dd54:	bl	439814 <ferror@plt+0x36ea4>
  40dd58:	mov	w1, w0
  40dd5c:	ldr	w0, [x19, #16]
  40dd60:	bl	40d6c8 <ferror@plt+0xad58>
  40dd64:	ldr	x19, [sp, #16]
  40dd68:	ldp	x29, x30, [sp], #48
  40dd6c:	ret
  40dd70:	stp	x29, x30, [sp, #-96]!
  40dd74:	mov	x29, sp
  40dd78:	stp	x19, x20, [sp, #16]
  40dd7c:	mov	x19, x0
  40dd80:	stp	x21, x22, [sp, #32]
  40dd84:	ldr	w21, [x0, #40]
  40dd88:	ldp	x22, x20, [x0]
  40dd8c:	stp	x23, x24, [sp, #48]
  40dd90:	ldp	x1, x0, [x0, #16]
  40dd94:	stp	x25, x26, [sp, #64]
  40dd98:	str	x27, [sp, #80]
  40dd9c:	add	x23, x22, x20, lsl #4
  40dda0:	sub	x1, x1, x0
  40dda4:	lsl	x0, x1, #1
  40dda8:	cmp	x20, x1, lsl #1
  40ddac:	b.cc	40ddc4 <ferror@plt+0xb454>  // b.lo, b.ul, b.last
  40ddb0:	lsl	w1, w1, #3
  40ddb4:	cmp	x20, x1
  40ddb8:	b.ls	40dddc <ferror@plt+0xb46c>  // b.plast
  40ddbc:	cmp	x20, #0x20
  40ddc0:	b.ls	40dddc <ferror@plt+0xb46c>  // b.plast
  40ddc4:	bl	4039fc <ferror@plt+0x108c>
  40ddc8:	mov	w21, w0
  40ddcc:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40ddd0:	add	x0, x0, #0x10
  40ddd4:	ubfiz	x1, x21, #4, #32
  40ddd8:	ldr	w20, [x0, x1]
  40dddc:	ldrb	w0, [x19, #44]
  40dde0:	mov	x1, x20
  40dde4:	bl	40d33c <ferror@plt+0xa9cc>
  40dde8:	stp	x0, x20, [x19]
  40ddec:	ldr	x0, [x19, #16]
  40ddf0:	str	w21, [x19, #40]
  40ddf4:	ldr	x1, [x19, #24]
  40ddf8:	mov	x21, x22
  40ddfc:	str	xzr, [x19, #24]
  40de00:	sub	x0, x0, x1
  40de04:	str	x0, [x19, #16]
  40de08:	ldr	x0, [x21]
  40de0c:	cbz	x0, 40de7c <ferror@plt+0xb50c>
  40de10:	cmp	x0, #0x1
  40de14:	b.eq	40de7c <ferror@plt+0xb50c>  // b.none
  40de18:	bl	40dd18 <ferror@plt+0xb3a8>
  40de1c:	ldr	w27, [x19, #40]
  40de20:	mov	w25, w0
  40de24:	mov	w1, w27
  40de28:	bl	40d740 <ferror@plt+0xadd0>
  40de2c:	mov	w20, w0
  40de30:	ldr	x24, [x19]
  40de34:	ubfiz	x0, x20, #4, #32
  40de38:	add	x2, x24, x0
  40de3c:	ldr	x0, [x24, x0]
  40de40:	cbz	x0, 40de74 <ferror@plt+0xb504>
  40de44:	mov	w1, w27
  40de48:	mov	w0, w25
  40de4c:	ldr	x26, [x19, #8]
  40de50:	bl	40d778 <ferror@plt+0xae08>
  40de54:	add	w20, w20, w0
  40de58:	cmp	x26, w20, uxtw
  40de5c:	b.hi	40de64 <ferror@plt+0xb4f4>  // b.pmore
  40de60:	sub	w20, w20, w26
  40de64:	ubfiz	x1, x20, #4, #32
  40de68:	add	x2, x24, x1
  40de6c:	ldr	x1, [x24, x1]
  40de70:	cbnz	x1, 40de54 <ferror@plt+0xb4e4>
  40de74:	ldp	x0, x1, [x21]
  40de78:	stp	x0, x1, [x2]
  40de7c:	add	x21, x21, #0x10
  40de80:	cmp	x23, x21
  40de84:	b.hi	40de08 <ferror@plt+0xb498>  // b.pmore
  40de88:	ldrb	w0, [x19, #44]
  40de8c:	cbnz	w0, 40deb0 <ferror@plt+0xb540>
  40de90:	mov	x0, x22
  40de94:	ldp	x19, x20, [sp, #16]
  40de98:	ldp	x21, x22, [sp, #32]
  40de9c:	ldp	x23, x24, [sp, #48]
  40dea0:	ldp	x25, x26, [sp, #64]
  40dea4:	ldr	x27, [sp, #80]
  40dea8:	ldp	x29, x30, [sp], #96
  40deac:	b	402730 <free@plt>
  40deb0:	mov	x0, x22
  40deb4:	ldp	x19, x20, [sp, #16]
  40deb8:	ldp	x21, x22, [sp, #32]
  40debc:	ldp	x23, x24, [sp, #48]
  40dec0:	ldp	x25, x26, [sp, #64]
  40dec4:	ldr	x27, [sp, #80]
  40dec8:	ldp	x29, x30, [sp], #96
  40decc:	b	403e18 <ferror@plt+0x14a8>
  40ded0:	stp	x29, x30, [sp, #-96]!
  40ded4:	mov	x29, sp
  40ded8:	stp	x19, x20, [sp, #16]
  40dedc:	mov	x19, x0
  40dee0:	stp	x21, x22, [sp, #32]
  40dee4:	ldr	w22, [x0, #40]
  40dee8:	stp	x23, x24, [sp, #48]
  40deec:	ldp	x24, x20, [x0]
  40def0:	stp	x25, x26, [sp, #64]
  40def4:	mov	x25, #0x18                  	// #24
  40def8:	ldp	x1, x0, [x0, #16]
  40defc:	stp	x27, x28, [sp, #80]
  40df00:	madd	x25, x20, x25, x24
  40df04:	sub	x1, x1, x0
  40df08:	lsl	x0, x1, #1
  40df0c:	cmp	x20, x1, lsl #1
  40df10:	b.cc	40df28 <ferror@plt+0xb5b8>  // b.lo, b.ul, b.last
  40df14:	lsl	w1, w1, #3
  40df18:	cmp	x20, x1
  40df1c:	b.ls	40df40 <ferror@plt+0xb5d0>  // b.plast
  40df20:	cmp	x20, #0x20
  40df24:	b.ls	40df40 <ferror@plt+0xb5d0>  // b.plast
  40df28:	bl	4039fc <ferror@plt+0x108c>
  40df2c:	mov	w22, w0
  40df30:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40df34:	add	x0, x0, #0x10
  40df38:	ubfiz	x1, x22, #4, #32
  40df3c:	ldr	w20, [x0, x1]
  40df40:	ldrb	w0, [x19, #44]
  40df44:	mov	x1, x20
  40df48:	mov	x26, x24
  40df4c:	mov	w27, #0x18                  	// #24
  40df50:	bl	40d3b8 <ferror@plt+0xaa48>
  40df54:	mov	x23, x0
  40df58:	ldp	x0, x1, [x19, #16]
  40df5c:	stp	x23, x20, [x19]
  40df60:	str	w22, [x19, #40]
  40df64:	sub	x0, x0, x1
  40df68:	stp	x0, xzr, [x19, #16]
  40df6c:	ldr	x0, [x26]
  40df70:	cbz	x0, 40dfdc <ferror@plt+0xb66c>
  40df74:	cmp	x0, #0x1
  40df78:	b.eq	40dfdc <ferror@plt+0xb66c>  // b.none
  40df7c:	asr	x28, x0, #3
  40df80:	mov	w1, w22
  40df84:	mov	w0, w28
  40df88:	bl	40d740 <ferror@plt+0xadd0>
  40df8c:	mov	w21, w0
  40df90:	umull	x0, w0, w27
  40df94:	add	x2, x23, x0
  40df98:	ldr	x0, [x23, x0]
  40df9c:	cbz	x0, 40dfcc <ferror@plt+0xb65c>
  40dfa0:	mov	w1, w22
  40dfa4:	mov	w0, w28
  40dfa8:	bl	40d778 <ferror@plt+0xae08>
  40dfac:	add	w21, w21, w0
  40dfb0:	cmp	x20, w21, uxtw
  40dfb4:	b.hi	40dfbc <ferror@plt+0xb64c>  // b.pmore
  40dfb8:	sub	w21, w21, w20
  40dfbc:	umull	x1, w21, w27
  40dfc0:	add	x2, x23, x1
  40dfc4:	ldr	x1, [x23, x1]
  40dfc8:	cbnz	x1, 40dfac <ferror@plt+0xb63c>
  40dfcc:	ldp	x0, x1, [x26]
  40dfd0:	stp	x0, x1, [x2]
  40dfd4:	ldr	x0, [x26, #16]
  40dfd8:	str	x0, [x2, #16]
  40dfdc:	add	x26, x26, #0x18
  40dfe0:	cmp	x25, x26
  40dfe4:	b.hi	40df6c <ferror@plt+0xb5fc>  // b.pmore
  40dfe8:	ldrb	w0, [x19, #44]
  40dfec:	cbnz	w0, 40e010 <ferror@plt+0xb6a0>
  40dff0:	mov	x0, x24
  40dff4:	ldp	x19, x20, [sp, #16]
  40dff8:	ldp	x21, x22, [sp, #32]
  40dffc:	ldp	x23, x24, [sp, #48]
  40e000:	ldp	x25, x26, [sp, #64]
  40e004:	ldp	x27, x28, [sp, #80]
  40e008:	ldp	x29, x30, [sp], #96
  40e00c:	b	402730 <free@plt>
  40e010:	mov	x0, x24
  40e014:	ldp	x19, x20, [sp, #16]
  40e018:	ldp	x21, x22, [sp, #32]
  40e01c:	ldp	x23, x24, [sp, #48]
  40e020:	ldp	x25, x26, [sp, #64]
  40e024:	ldp	x27, x28, [sp, #80]
  40e028:	ldp	x29, x30, [sp], #96
  40e02c:	b	403e18 <ferror@plt+0x14a8>
  40e030:	stp	x29, x30, [sp, #-80]!
  40e034:	cmp	w3, #0x1
  40e038:	mov	x29, sp
  40e03c:	stp	x19, x20, [sp, #16]
  40e040:	mov	x19, x0
  40e044:	stp	x21, x22, [sp, #32]
  40e048:	mov	w22, w3
  40e04c:	stp	x23, x24, [sp, #48]
  40e050:	mov	x24, x1
  40e054:	stp	x25, x26, [sp, #64]
  40e058:	mov	w25, w2
  40e05c:	b.ne	40e074 <ferror@plt+0xb704>  // b.any
  40e060:	ldp	x1, x2, [x0, #8]
  40e064:	add	x1, x1, x1, lsl #1
  40e068:	cmp	x1, x2, lsl #2
  40e06c:	b.hi	40e074 <ferror@plt+0xb704>  // b.pmore
  40e070:	bl	40ded0 <ferror@plt+0xb560>
  40e074:	ldr	w0, [x19, #32]
  40e078:	ldr	w26, [x19, #40]
  40e07c:	add	w0, w0, #0x1
  40e080:	str	w0, [x19, #32]
  40e084:	mov	w1, w26
  40e088:	mov	w0, w25
  40e08c:	bl	40d740 <ferror@plt+0xadd0>
  40e090:	mov	w21, w0
  40e094:	mov	w0, #0x18                  	// #24
  40e098:	ldr	x23, [x19]
  40e09c:	umull	x0, w21, w0
  40e0a0:	add	x20, x23, x0
  40e0a4:	ldr	x0, [x23, x0]
  40e0a8:	cbz	x0, 40e174 <ferror@plt+0xb804>
  40e0ac:	cmp	x0, #0x1
  40e0b0:	b.ne	40e108 <ferror@plt+0xb798>  // b.any
  40e0b4:	mov	w1, w26
  40e0b8:	mov	w0, w25
  40e0bc:	bl	40d778 <ferror@plt+0xae08>
  40e0c0:	ldr	w3, [x19, #36]
  40e0c4:	mov	x2, x20
  40e0c8:	ldr	x4, [x19, #8]
  40e0cc:	mov	w6, #0x18                  	// #24
  40e0d0:	add	w21, w21, w0
  40e0d4:	add	w3, w3, #0x1
  40e0d8:	cmp	x4, w21, uxtw
  40e0dc:	b.hi	40e0e4 <ferror@plt+0xb774>  // b.pmore
  40e0e0:	sub	w21, w21, w4
  40e0e4:	umull	x1, w21, w6
  40e0e8:	add	x20, x23, x1
  40e0ec:	ldr	x1, [x23, x1]
  40e0f0:	cbz	x1, 40e148 <ferror@plt+0xb7d8>
  40e0f4:	cmp	x1, #0x1
  40e0f8:	b.ne	40e11c <ferror@plt+0xb7ac>  // b.any
  40e0fc:	cmp	x2, #0x0
  40e100:	csel	x2, x2, x20, ne  // ne = any
  40e104:	b	40e0d0 <ferror@plt+0xb760>
  40e108:	ldr	x1, [x24]
  40e10c:	cmp	x0, x1
  40e110:	b.eq	40e12c <ferror@plt+0xb7bc>  // b.none
  40e114:	mov	x20, #0x0                   	// #0
  40e118:	b	40e0b4 <ferror@plt+0xb744>
  40e11c:	ldr	x5, [x24]
  40e120:	cmp	x1, x5
  40e124:	b.ne	40e0d0 <ferror@plt+0xb760>  // b.any
  40e128:	str	w3, [x19, #36]
  40e12c:	mov	x0, x20
  40e130:	ldp	x19, x20, [sp, #16]
  40e134:	ldp	x21, x22, [sp, #32]
  40e138:	ldp	x23, x24, [sp, #48]
  40e13c:	ldp	x25, x26, [sp, #64]
  40e140:	ldp	x29, x30, [sp], #80
  40e144:	ret
  40e148:	str	w3, [x19, #36]
  40e14c:	cbnz	w22, 40e158 <ferror@plt+0xb7e8>
  40e150:	mov	x20, #0x0                   	// #0
  40e154:	b	40e12c <ferror@plt+0xb7bc>
  40e158:	cbz	x2, 40e178 <ferror@plt+0xb808>
  40e15c:	ldr	x0, [x19, #24]
  40e160:	mov	x20, x2
  40e164:	sub	x0, x0, #0x1
  40e168:	str	x0, [x19, #24]
  40e16c:	str	xzr, [x2]
  40e170:	b	40e12c <ferror@plt+0xb7bc>
  40e174:	cbz	w22, 40e150 <ferror@plt+0xb7e0>
  40e178:	ldr	x0, [x19, #16]
  40e17c:	mov	w20, #0x18                  	// #24
  40e180:	add	x0, x0, #0x1
  40e184:	umaddl	x20, w21, w20, x23
  40e188:	str	x0, [x19, #16]
  40e18c:	b	40e12c <ferror@plt+0xb7bc>
  40e190:	ldr	x3, [x0, #8]
  40e194:	ldr	x1, [x0]
  40e198:	cmp	x1, x3
  40e19c:	b.cs	40e1bc <ferror@plt+0xb84c>  // b.hs, b.nlast
  40e1a0:	ldr	x2, [x1]
  40e1a4:	cbz	x2, 40e1b0 <ferror@plt+0xb840>
  40e1a8:	cmp	x2, #0x1
  40e1ac:	b.ne	40e1c0 <ferror@plt+0xb850>  // b.any
  40e1b0:	add	x1, x1, #0x10
  40e1b4:	str	x1, [x0]
  40e1b8:	b	40e194 <ferror@plt+0xb824>
  40e1bc:	stp	xzr, xzr, [x0]
  40e1c0:	ret
  40e1c4:	stp	x29, x30, [sp, #-32]!
  40e1c8:	mov	x29, sp
  40e1cc:	ldp	x1, x0, [x0]
  40e1d0:	add	x0, x1, x0, lsl #4
  40e1d4:	stp	x1, x0, [sp, #16]
  40e1d8:	add	x0, sp, #0x10
  40e1dc:	bl	40e190 <ferror@plt+0xb820>
  40e1e0:	ldp	x0, x1, [sp, #16]
  40e1e4:	ldp	x29, x30, [sp], #32
  40e1e8:	ret
  40e1ec:	stp	x29, x30, [sp, #-48]!
  40e1f0:	mov	x29, sp
  40e1f4:	stp	x19, x20, [sp, #16]
  40e1f8:	mov	x19, x0
  40e1fc:	ldr	x0, [x0, #40]
  40e200:	bl	40e1c4 <ferror@plt+0xb854>
  40e204:	stp	x0, x1, [sp, #32]
  40e208:	ldr	x0, [sp, #32]
  40e20c:	cbz	x0, 40e244 <ferror@plt+0xb8d4>
  40e210:	ldr	x0, [x0]
  40e214:	cbnz	x0, 40e274 <ferror@plt+0xb904>
  40e218:	ldr	x0, [sp, #32]
  40e21c:	ldr	x0, [x0, #8]
  40e220:	cbz	x0, 40e22c <ferror@plt+0xb8bc>
  40e224:	mov	x1, #0x38                  	// #56
  40e228:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  40e22c:	ldr	x0, [sp, #32]
  40e230:	add	x0, x0, #0x10
  40e234:	str	x0, [sp, #32]
  40e238:	add	x0, sp, #0x20
  40e23c:	bl	40e190 <ferror@plt+0xb820>
  40e240:	b	40e208 <ferror@plt+0xb898>
  40e244:	ldr	x1, [sp, #40]
  40e248:	cbnz	x1, 40e210 <ferror@plt+0xb8a0>
  40e24c:	ldr	x20, [x19, #40]
  40e250:	cbnz	x20, 40e280 <ferror@plt+0xb910>
  40e254:	ldr	x20, [x19, #48]
  40e258:	cbz	x20, 40e2dc <ferror@plt+0xb96c>
  40e25c:	ldr	x1, [x20, #8]
  40e260:	sub	x0, x1, #0x1
  40e264:	cmp	x1, x0
  40e268:	b.ls	40e2c0 <ferror@plt+0xb950>  // b.plast
  40e26c:	sub	x0, x0, #0x1
  40e270:	b	40e264 <ferror@plt+0xb8f4>
  40e274:	mov	x1, #0x20                  	// #32
  40e278:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  40e27c:	b	40e218 <ferror@plt+0xb8a8>
  40e280:	ldr	x1, [x20, #8]
  40e284:	sub	x0, x1, #0x1
  40e288:	cmp	x1, x0
  40e28c:	b.ls	40e298 <ferror@plt+0xb928>  // b.plast
  40e290:	sub	x0, x0, #0x1
  40e294:	b	40e288 <ferror@plt+0xb918>
  40e298:	ldrb	w1, [x20, #44]
  40e29c:	ldr	x0, [x20]
  40e2a0:	cbnz	w1, 40e2b8 <ferror@plt+0xb948>
  40e2a4:	bl	402730 <free@plt>
  40e2a8:	mov	x0, x20
  40e2ac:	mov	x1, #0x30                  	// #48
  40e2b0:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  40e2b4:	b	40e254 <ferror@plt+0xb8e4>
  40e2b8:	bl	403e18 <ferror@plt+0x14a8>
  40e2bc:	b	40e2a8 <ferror@plt+0xb938>
  40e2c0:	ldrb	w1, [x20, #44]
  40e2c4:	ldr	x0, [x20]
  40e2c8:	cbnz	w1, 40e2fc <ferror@plt+0xb98c>
  40e2cc:	bl	402730 <free@plt>
  40e2d0:	mov	x0, x20
  40e2d4:	mov	x1, #0x30                  	// #48
  40e2d8:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  40e2dc:	ldr	x19, [x19]
  40e2e0:	cbz	x19, 40e320 <ferror@plt+0xb9b0>
  40e2e4:	ldr	x1, [x19, #8]
  40e2e8:	sub	x0, x1, #0x1
  40e2ec:	cmp	x1, x0
  40e2f0:	b.ls	40e304 <ferror@plt+0xb994>  // b.plast
  40e2f4:	sub	x0, x0, #0x1
  40e2f8:	b	40e2ec <ferror@plt+0xb97c>
  40e2fc:	bl	403e18 <ferror@plt+0x14a8>
  40e300:	b	40e2d0 <ferror@plt+0xb960>
  40e304:	ldrb	w1, [x19, #44]
  40e308:	ldr	x0, [x19]
  40e30c:	cbnz	w1, 40e32c <ferror@plt+0xb9bc>
  40e310:	bl	402730 <free@plt>
  40e314:	mov	x0, x19
  40e318:	mov	x1, #0x30                  	// #48
  40e31c:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  40e320:	ldp	x19, x20, [sp, #16]
  40e324:	ldp	x29, x30, [sp], #48
  40e328:	ret
  40e32c:	bl	403e18 <ferror@plt+0x14a8>
  40e330:	b	40e314 <ferror@plt+0xb9a4>
  40e334:	stp	x29, x30, [sp, #-80]!
  40e338:	mov	x29, sp
  40e33c:	str	x23, [sp, #48]
  40e340:	mov	w23, w1
  40e344:	ldr	x1, [x0, #40]
  40e348:	stp	x21, x22, [sp, #32]
  40e34c:	mov	x21, x0
  40e350:	mov	x22, x2
  40e354:	stp	x19, x20, [sp, #16]
  40e358:	mov	x19, x3
  40e35c:	ldp	x2, x0, [x1, #16]
  40e360:	mov	x1, #0x10                  	// #16
  40e364:	sub	x0, x2, x0
  40e368:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  40e36c:	mov	x20, x0
  40e370:	ldr	x0, [x21, #40]
  40e374:	mov	w21, #0x0                   	// #0
  40e378:	bl	40e1c4 <ferror@plt+0xb854>
  40e37c:	stp	x0, x1, [sp, #64]
  40e380:	ldr	x0, [sp, #64]
  40e384:	cbz	x0, 40e3c4 <ferror@plt+0xba54>
  40e388:	ldr	x2, [x0]
  40e38c:	ldr	w1, [x2, #20]
  40e390:	cmp	w1, w23
  40e394:	b.ne	40e3b0 <ferror@plt+0xba40>  // b.any
  40e398:	ubfiz	x1, x21, #4, #32
  40e39c:	add	w21, w21, #0x1
  40e3a0:	add	x3, x20, x1
  40e3a4:	ldr	x4, [x0, #8]
  40e3a8:	str	x2, [x20, x1]
  40e3ac:	str	x4, [x3, #8]
  40e3b0:	add	x0, x0, #0x10
  40e3b4:	str	x0, [sp, #64]
  40e3b8:	add	x0, sp, #0x40
  40e3bc:	bl	40e190 <ferror@plt+0xb820>
  40e3c0:	b	40e380 <ferror@plt+0xba10>
  40e3c4:	ldr	x1, [sp, #72]
  40e3c8:	cbnz	x1, 40e388 <ferror@plt+0xba18>
  40e3cc:	mov	w1, w21
  40e3d0:	cbnz	x19, 40e3dc <ferror@plt+0xba6c>
  40e3d4:	adrp	x19, 40d000 <ferror@plt+0xa690>
  40e3d8:	add	x19, x19, #0x674
  40e3dc:	mov	x3, x19
  40e3e0:	mov	x0, x20
  40e3e4:	mov	x2, #0x10                  	// #16
  40e3e8:	bl	4112a4 <ferror@plt+0xe934>
  40e3ec:	mov	x0, x20
  40e3f0:	ldp	x19, x20, [sp, #16]
  40e3f4:	ldr	x23, [sp, #48]
  40e3f8:	str	w21, [x22]
  40e3fc:	ldp	x21, x22, [sp, #32]
  40e400:	ldp	x29, x30, [sp], #80
  40e404:	ret
  40e408:	stp	x29, x30, [sp, #-128]!
  40e40c:	mov	x29, sp
  40e410:	stp	x21, x22, [sp, #32]
  40e414:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x3e198>
  40e418:	mov	x22, x0
  40e41c:	stp	x19, x20, [sp, #16]
  40e420:	mov	w19, w1
  40e424:	mov	x20, x2
  40e428:	ldr	x1, [x21, #1336]
  40e42c:	mov	w0, #0xa                   	// #10
  40e430:	str	x23, [sp, #48]
  40e434:	bl	402400 <fputc@plt>
  40e438:	mov	x3, x20
  40e43c:	add	x2, sp, #0x40
  40e440:	mov	w1, w19
  40e444:	mov	x0, x22
  40e448:	bl	40e334 <ferror@plt+0xb9c4>
  40e44c:	mov	x20, x0
  40e450:	add	x2, sp, #0x44
  40e454:	mov	w1, w19
  40e458:	mov	x0, x22
  40e45c:	mov	x3, #0x0                   	// #0
  40e460:	bl	40e334 <ferror@plt+0xb9c4>
  40e464:	stp	xzr, xzr, [sp, #72]
  40e468:	mov	x1, #0x1                   	// #1
  40e46c:	mov	w2, #0x0                   	// #0
  40e470:	stp	xzr, x1, [sp, #88]
  40e474:	stp	xzr, xzr, [sp, #104]
  40e478:	str	xzr, [sp, #120]
  40e47c:	ldr	w1, [sp, #68]
  40e480:	cmp	w1, w2
  40e484:	b.ls	40e4e4 <ferror@plt+0xbb74>  // b.plast
  40e488:	ubfiz	x1, x2, #4, #32
  40e48c:	add	w2, w2, #0x1
  40e490:	add	x1, x0, x1
  40e494:	ldp	x6, x5, [sp, #80]
  40e498:	ldr	x1, [x1, #8]
  40e49c:	ldr	x4, [sp, #104]
  40e4a0:	ldr	x3, [x1, #8]
  40e4a4:	ldr	x7, [x1, #40]
  40e4a8:	add	x6, x6, x3
  40e4ac:	ldr	x3, [x1, #16]
  40e4b0:	add	x5, x5, x3
  40e4b4:	ldr	x3, [x1, #32]
  40e4b8:	add	x4, x4, x3
  40e4bc:	ldr	x3, [sp, #112]
  40e4c0:	add	x3, x3, x7
  40e4c4:	ldr	x7, [x1]
  40e4c8:	stp	x5, xzr, [sp, #88]
  40e4cc:	ldr	x1, [sp, #72]
  40e4d0:	stp	x4, x3, [sp, #104]
  40e4d4:	add	x1, x1, x7
  40e4d8:	stp	x1, x6, [sp, #72]
  40e4dc:	str	xzr, [sp, #120]
  40e4e0:	b	40e47c <ferror@plt+0xbb0c>
  40e4e4:	bl	402730 <free@plt>
  40e4e8:	add	x23, x20, #0x8
  40e4ec:	mov	x0, #0x8c                  	// #140
  40e4f0:	bl	40d7b8 <ferror@plt+0xae48>
  40e4f4:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40e4f8:	add	x0, x0, #0xe00
  40e4fc:	ldr	x22, [x0, w19, uxtw #3]
  40e500:	mov	x0, x22
  40e504:	bl	40dab0 <ferror@plt+0xb140>
  40e508:	mov	x0, #0x8c                  	// #140
  40e50c:	bl	40d7b8 <ferror@plt+0xae48>
  40e510:	ldr	w19, [sp, #64]
  40e514:	sub	w19, w19, #0x1
  40e518:	sxtw	x19, w19
  40e51c:	tbnz	w19, #31, 40e53c <ferror@plt+0xbbcc>
  40e520:	lsl	x0, x19, #4
  40e524:	add	x2, sp, #0x48
  40e528:	sub	x19, x19, #0x1
  40e52c:	ldr	x1, [x20, x0]
  40e530:	ldr	x0, [x23, x0]
  40e534:	bl	40d7f8 <ferror@plt+0xae88>
  40e538:	b	40e51c <ferror@plt+0xbbac>
  40e53c:	mov	x0, #0x8c                  	// #140
  40e540:	bl	40d7b8 <ferror@plt+0xae48>
  40e544:	mov	x0, x22
  40e548:	bl	40dab0 <ferror@plt+0xb140>
  40e54c:	mov	x0, #0x8c                  	// #140
  40e550:	bl	40d7b8 <ferror@plt+0xae48>
  40e554:	add	x0, sp, #0x48
  40e558:	bl	40d9cc <ferror@plt+0xb05c>
  40e55c:	mov	x0, #0x8c                  	// #140
  40e560:	bl	40d7b8 <ferror@plt+0xae48>
  40e564:	mov	x0, x20
  40e568:	bl	402730 <free@plt>
  40e56c:	ldr	x1, [x21, #1336]
  40e570:	mov	w0, #0xa                   	// #10
  40e574:	bl	402400 <fputc@plt>
  40e578:	ldp	x19, x20, [sp, #16]
  40e57c:	ldp	x21, x22, [sp, #32]
  40e580:	ldr	x23, [sp, #48]
  40e584:	ldp	x29, x30, [sp], #128
  40e588:	ret
  40e58c:	ldr	x3, [x0]
  40e590:	ldr	x2, [x1]
  40e594:	cmp	x3, x2
  40e598:	b.ne	40e5c0 <ferror@plt+0xbc50>  // b.any
  40e59c:	ldr	x3, [x0, #8]
  40e5a0:	ldr	x2, [x1, #8]
  40e5a4:	cmp	x3, x2
  40e5a8:	b.ne	40e5c0 <ferror@plt+0xbc50>  // b.any
  40e5ac:	ldr	w2, [x0, #16]
  40e5b0:	ldr	w0, [x1, #16]
  40e5b4:	cmp	w2, w0
  40e5b8:	cset	w0, eq  // eq = none
  40e5bc:	ret
  40e5c0:	mov	w0, #0x0                   	// #0
  40e5c4:	b	40e5bc <ferror@plt+0xbc4c>
  40e5c8:	stp	x29, x30, [sp, #-112]!
  40e5cc:	mov	x29, sp
  40e5d0:	stp	x19, x20, [sp, #16]
  40e5d4:	ldr	x20, [x0, #40]
  40e5d8:	stp	x21, x22, [sp, #32]
  40e5dc:	mov	x22, x2
  40e5e0:	stp	x23, x24, [sp, #48]
  40e5e4:	mov	x24, x0
  40e5e8:	mov	x0, x2
  40e5ec:	stp	x25, x26, [sp, #64]
  40e5f0:	stp	x27, x28, [sp, #80]
  40e5f4:	str	x1, [sp, #104]
  40e5f8:	bl	40dd18 <ferror@plt+0xb3a8>
  40e5fc:	ldr	w1, [x20, #32]
  40e600:	mov	w25, w0
  40e604:	ldr	w27, [x20, #40]
  40e608:	add	w1, w1, #0x1
  40e60c:	str	w1, [x20, #32]
  40e610:	mov	w1, w27
  40e614:	bl	40d740 <ferror@plt+0xadd0>
  40e618:	mov	w19, w0
  40e61c:	ldr	x21, [x20]
  40e620:	ubfiz	x0, x19, #4, #32
  40e624:	add	x23, x21, x0
  40e628:	ldr	x0, [x21, x0]
  40e62c:	cbz	x0, 40e6a0 <ferror@plt+0xbd30>
  40e630:	cmp	x0, #0x1
  40e634:	b.eq	40e648 <ferror@plt+0xbcd8>  // b.none
  40e638:	mov	x1, x22
  40e63c:	bl	40e58c <ferror@plt+0xbc1c>
  40e640:	tst	w0, #0xff
  40e644:	b.ne	40e6a0 <ferror@plt+0xbd30>  // b.any
  40e648:	mov	w0, w25
  40e64c:	mov	w1, w27
  40e650:	bl	40d778 <ferror@plt+0xae08>
  40e654:	mov	w25, w0
  40e658:	ldr	x26, [x20, #8]
  40e65c:	add	w19, w19, w25
  40e660:	ldr	w0, [x20, #36]
  40e664:	cmp	x26, w19, uxtw
  40e668:	add	w0, w0, #0x1
  40e66c:	str	w0, [x20, #36]
  40e670:	b.hi	40e678 <ferror@plt+0xbd08>  // b.pmore
  40e674:	sub	w19, w19, w26
  40e678:	ubfiz	x0, x19, #4, #32
  40e67c:	add	x23, x21, x0
  40e680:	ldr	x0, [x21, x0]
  40e684:	cbz	x0, 40e6a0 <ferror@plt+0xbd30>
  40e688:	cmp	x0, #0x1
  40e68c:	b.eq	40e65c <ferror@plt+0xbcec>  // b.none
  40e690:	mov	x1, x22
  40e694:	bl	40e58c <ferror@plt+0xbc1c>
  40e698:	tst	w0, #0xff
  40e69c:	b.eq	40e65c <ferror@plt+0xbcec>  // b.none
  40e6a0:	ldr	x0, [x23]
  40e6a4:	cbz	x0, 40e724 <ferror@plt+0xbdb4>
  40e6a8:	cbz	x22, 40e6b8 <ferror@plt+0xbd48>
  40e6ac:	mov	x0, x22
  40e6b0:	mov	x1, #0x20                  	// #32
  40e6b4:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  40e6b8:	ldr	x19, [x23, #8]
  40e6bc:	ldr	x0, [x19, #24]
  40e6c0:	add	x0, x0, #0x1
  40e6c4:	str	x0, [x19, #24]
  40e6c8:	ldr	x0, [x24, #48]
  40e6cc:	add	x1, sp, #0x68
  40e6d0:	bl	40dc34 <ferror@plt+0xb2c4>
  40e6d4:	cbnz	x0, 40e704 <ferror@plt+0xbd94>
  40e6d8:	ldr	x0, [x24, #48]
  40e6dc:	add	x1, sp, #0x68
  40e6e0:	ldr	x2, [sp, #104]
  40e6e4:	mov	w3, #0x1                   	// #1
  40e6e8:	ubfx	x2, x2, #3, #32
  40e6ec:	bl	40e030 <ferror@plt+0xb6c0>
  40e6f0:	ldr	x1, [x0]
  40e6f4:	cbnz	x1, 40e700 <ferror@plt+0xbd90>
  40e6f8:	ldr	x1, [sp, #104]
  40e6fc:	str	x1, [x0]
  40e700:	stp	x19, xzr, [x0, #8]
  40e704:	mov	x0, x19
  40e708:	ldp	x19, x20, [sp, #16]
  40e70c:	ldp	x21, x22, [sp, #32]
  40e710:	ldp	x23, x24, [sp, #48]
  40e714:	ldp	x25, x26, [sp, #64]
  40e718:	ldp	x27, x28, [sp, #80]
  40e71c:	ldp	x29, x30, [sp], #112
  40e720:	ret
  40e724:	mov	x0, #0x38                  	// #56
  40e728:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  40e72c:	mov	x19, x0
  40e730:	mov	x0, #0x1                   	// #1
  40e734:	ldr	x20, [x24, #40]
  40e738:	stp	xzr, xzr, [x19]
  40e73c:	stp	xzr, x0, [x19, #16]
  40e740:	mov	x0, x22
  40e744:	stp	xzr, xzr, [x19, #32]
  40e748:	str	xzr, [x19, #48]
  40e74c:	bl	40dd18 <ferror@plt+0xb3a8>
  40e750:	mov	w25, w0
  40e754:	ldp	x0, x1, [x20, #8]
  40e758:	add	x0, x0, x0, lsl #1
  40e75c:	cmp	x0, x1, lsl #2
  40e760:	b.hi	40e76c <ferror@plt+0xbdfc>  // b.pmore
  40e764:	mov	x0, x20
  40e768:	bl	40dd70 <ferror@plt+0xb400>
  40e76c:	ldr	w0, [x20, #32]
  40e770:	ldr	w27, [x20, #40]
  40e774:	add	w0, w0, #0x1
  40e778:	str	w0, [x20, #32]
  40e77c:	mov	w1, w27
  40e780:	mov	w0, w25
  40e784:	bl	40d740 <ferror@plt+0xadd0>
  40e788:	mov	w21, w0
  40e78c:	ldr	x26, [x20]
  40e790:	ubfiz	x0, x21, #4, #32
  40e794:	add	x23, x26, x0
  40e798:	ldr	x0, [x26, x0]
  40e79c:	cbz	x0, 40e858 <ferror@plt+0xbee8>
  40e7a0:	cmp	x0, #0x1
  40e7a4:	b.ne	40e800 <ferror@plt+0xbe90>  // b.any
  40e7a8:	mov	w1, w27
  40e7ac:	mov	w0, w25
  40e7b0:	bl	40d778 <ferror@plt+0xae08>
  40e7b4:	mov	x25, x23
  40e7b8:	ldr	x28, [x20, #8]
  40e7bc:	mov	w27, w0
  40e7c0:	ldr	w0, [x20, #36]
  40e7c4:	add	w21, w21, w27
  40e7c8:	add	w0, w0, #0x1
  40e7cc:	str	w0, [x20, #36]
  40e7d0:	cmp	x28, w21, uxtw
  40e7d4:	b.hi	40e7dc <ferror@plt+0xbe6c>  // b.pmore
  40e7d8:	sub	w21, w21, w28
  40e7dc:	ubfiz	x0, x21, #4, #32
  40e7e0:	add	x23, x26, x0
  40e7e4:	ldr	x0, [x26, x0]
  40e7e8:	cbz	x0, 40e83c <ferror@plt+0xbecc>
  40e7ec:	cmp	x0, #0x1
  40e7f0:	b.ne	40e818 <ferror@plt+0xbea8>  // b.any
  40e7f4:	cmp	x25, #0x0
  40e7f8:	csel	x25, x25, x23, ne  // ne = any
  40e7fc:	b	40e7c0 <ferror@plt+0xbe50>
  40e800:	mov	x1, x22
  40e804:	bl	40e58c <ferror@plt+0xbc1c>
  40e808:	tst	w0, #0xff
  40e80c:	b.ne	40e828 <ferror@plt+0xbeb8>  // b.any
  40e810:	mov	x23, #0x0                   	// #0
  40e814:	b	40e7a8 <ferror@plt+0xbe38>
  40e818:	mov	x1, x22
  40e81c:	bl	40e58c <ferror@plt+0xbc1c>
  40e820:	tst	w0, #0xff
  40e824:	b.eq	40e7c0 <ferror@plt+0xbe50>  // b.none
  40e828:	ldr	x0, [x23]
  40e82c:	cbnz	x0, 40e834 <ferror@plt+0xbec4>
  40e830:	str	x22, [x23]
  40e834:	str	x19, [x23, #8]
  40e838:	b	40e6c8 <ferror@plt+0xbd58>
  40e83c:	cbz	x25, 40e858 <ferror@plt+0xbee8>
  40e840:	ldr	x0, [x20, #24]
  40e844:	mov	x23, x25
  40e848:	sub	x0, x0, #0x1
  40e84c:	str	x0, [x20, #24]
  40e850:	str	xzr, [x25]
  40e854:	b	40e828 <ferror@plt+0xbeb8>
  40e858:	ldr	x0, [x20, #16]
  40e85c:	ubfiz	x21, x21, #4, #32
  40e860:	add	x23, x26, x21
  40e864:	add	x0, x0, #0x1
  40e868:	str	x0, [x20, #16]
  40e86c:	b	40e828 <ferror@plt+0xbeb8>
  40e870:	stp	x29, x30, [sp, #-32]!
  40e874:	mov	x29, sp
  40e878:	stp	x19, x20, [sp, #16]
  40e87c:	mov	x19, x0
  40e880:	ldr	x0, [x0, #40]
  40e884:	cbz	x0, 40e8b4 <ferror@plt+0xbf44>
  40e888:	ldr	x1, [x19, #32]
  40e88c:	cmp	x0, x1
  40e890:	b.eq	40e8b4 <ferror@plt+0xbf44>  // b.none
  40e894:	ldr	x1, [x19, #48]
  40e898:	sub	x0, x0, #0x1
  40e89c:	cmp	x1, x0
  40e8a0:	b.cs	40e8b4 <ferror@plt+0xbf44>  // b.hs, b.nlast
  40e8a4:	mov	w0, #0x0                   	// #0
  40e8a8:	ldp	x19, x20, [sp, #16]
  40e8ac:	ldp	x29, x30, [sp], #32
  40e8b0:	ret
  40e8b4:	ldr	x0, [x19, #16]
  40e8b8:	bl	402660 <feof@plt>
  40e8bc:	cbnz	w0, 40e8a4 <ferror@plt+0xbf34>
  40e8c0:	ldr	x0, [x19, #16]
  40e8c4:	bl	402970 <ferror@plt>
  40e8c8:	cbnz	w0, 40e8a4 <ferror@plt+0xbf34>
  40e8cc:	ldp	x1, x0, [x19, #32]
  40e8d0:	cmp	x0, x1
  40e8d4:	b.ne	40e8f8 <ferror@plt+0xbf88>  // b.any
  40e8d8:	cmp	x0, #0x0
  40e8dc:	lsl	x20, x0, #1
  40e8e0:	ldr	x0, [x19, #24]
  40e8e4:	mov	x1, #0x1000                	// #4096
  40e8e8:	csel	x20, x20, x1, ne  // ne = any
  40e8ec:	mov	x1, x20
  40e8f0:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  40e8f4:	stp	x0, x20, [x19, #24]
  40e8f8:	mov	x1, #0x1                   	// #1
  40e8fc:	ldp	x3, x4, [x19, #16]
  40e900:	ldp	x2, x0, [x19, #32]
  40e904:	sub	x2, x2, x0
  40e908:	add	x0, x4, x0
  40e90c:	bl	402700 <fread@plt>
  40e910:	mov	x20, x0
  40e914:	ldr	x0, [x19, #16]
  40e918:	bl	402970 <ferror@plt>
  40e91c:	cbnz	w0, 40e8a4 <ferror@plt+0xbf34>
  40e920:	ldr	x0, [x19, #40]
  40e924:	cmp	x20, #0x0
  40e928:	add	x0, x0, x20
  40e92c:	str	x0, [x19, #40]
  40e930:	cset	w0, ne  // ne = any
  40e934:	b	40e8a8 <ferror@plt+0xbf38>
  40e938:	stp	x29, x30, [sp, #-112]!
  40e93c:	mov	x29, sp
  40e940:	stp	x19, x20, [sp, #16]
  40e944:	mov	w19, w0
  40e948:	mov	w20, w2
  40e94c:	stp	x21, x22, [sp, #32]
  40e950:	mov	x21, x8
  40e954:	stp	x23, x24, [sp, #48]
  40e958:	and	w24, w1, #0xff
  40e95c:	tbz	w0, #31, 40e9f4 <ferror@plt+0xc084>
  40e960:	adrp	x22, 478000 <_obstack_memory_used@@Base+0x3e198>
  40e964:	mov	w1, w0
  40e968:	ldr	x0, [x22, #1912]
  40e96c:	bl	422f60 <ferror@plt+0x205f0>
  40e970:	mov	x23, x0
  40e974:	ldr	x0, [x22, #1912]
  40e978:	mov	w1, w19
  40e97c:	bl	422f78 <ferror@plt+0x20608>
  40e980:	mov	w19, w0
  40e984:	stp	xzr, xzr, [sp, #80]
  40e988:	cmp	w19, #0x1
  40e98c:	stp	xzr, xzr, [sp, #96]
  40e990:	b.ls	40ea64 <ferror@plt+0xc0f4>  // b.plast
  40e994:	adrp	x22, 478000 <_obstack_memory_used@@Base+0x3e198>
  40e998:	cbnz	w24, 40e9fc <ferror@plt+0xc08c>
  40e99c:	ldr	x0, [x22, #1912]
  40e9a0:	mov	w1, w19
  40e9a4:	mov	x2, #0x0                   	// #0
  40e9a8:	bl	424248 <ferror@plt+0x218d8>
  40e9ac:	mov	w19, w0
  40e9b0:	mov	w2, #0x1                   	// #1
  40e9b4:	ldr	x0, [x22, #1912]
  40e9b8:	mov	w1, w19
  40e9bc:	add	x3, sp, #0x48
  40e9c0:	bl	423cf4 <ferror@plt+0x21384>
  40e9c4:	mov	w19, w0
  40e9c8:	cmp	w20, #0x1
  40e9cc:	b.eq	40ea04 <ferror@plt+0xc094>  // b.none
  40e9d0:	cmp	w20, #0x2
  40e9d4:	b.eq	40ea3c <ferror@plt+0xc0cc>  // b.none
  40e9d8:	cbz	w20, 40ea50 <ferror@plt+0xc0e0>
  40e9dc:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40e9e0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40e9e4:	add	x2, x2, #0xe38
  40e9e8:	add	x0, x0, #0xe4a
  40e9ec:	mov	w1, #0xc7                  	// #199
  40e9f0:	bl	402980 <ferror@plt+0x10>
  40e9f4:	mov	x23, #0x0                   	// #0
  40e9f8:	b	40e984 <ferror@plt+0xc014>
  40e9fc:	mov	w2, #0x0                   	// #0
  40ea00:	b	40e9b4 <ferror@plt+0xc044>
  40ea04:	mov	w1, w0
  40ea08:	ldr	x0, [x22, #1912]
  40ea0c:	bl	423a00 <ferror@plt+0x21090>
  40ea10:	cmp	w19, w0
  40ea14:	b.eq	40ea50 <ferror@plt+0xc0e0>  // b.none
  40ea18:	mov	x8, x21
  40ea1c:	mov	w2, w20
  40ea20:	mov	w1, w24
  40ea24:	bl	40e938 <ferror@plt+0xbfc8>
  40ea28:	ldp	x19, x20, [sp, #16]
  40ea2c:	ldp	x21, x22, [sp, #32]
  40ea30:	ldp	x23, x24, [sp, #48]
  40ea34:	ldp	x29, x30, [sp], #112
  40ea38:	ret
  40ea3c:	mov	w1, w0
  40ea40:	ldr	x0, [x22, #1912]
  40ea44:	bl	423a00 <ferror@plt+0x21090>
  40ea48:	lsr	x0, x0, #32
  40ea4c:	b	40ea10 <ferror@plt+0xc0a0>
  40ea50:	ldr	x0, [x22, #1912]
  40ea54:	add	x8, sp, #0x50
  40ea58:	ldr	x1, [sp, #72]
  40ea5c:	mov	w2, w19
  40ea60:	bl	42433c <ferror@plt+0x219cc>
  40ea64:	str	x23, [sp, #96]
  40ea68:	cmp	w19, #0x1
  40ea6c:	b.hi	40ea84 <ferror@plt+0xc114>  // b.pmore
  40ea70:	cbz	w19, 40ea98 <ferror@plt+0xc128>
  40ea74:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40ea78:	add	x0, x0, #0x2b0
  40ea7c:	bl	402930 <gettext@plt>
  40ea80:	str	x0, [sp, #80]
  40ea84:	ldp	x0, x1, [sp, #80]
  40ea88:	stp	x0, x1, [x21]
  40ea8c:	ldp	x0, x1, [sp, #96]
  40ea90:	stp	x0, x1, [x21, #16]
  40ea94:	b	40ea28 <ferror@plt+0xc0b8>
  40ea98:	mov	x0, #0x0                   	// #0
  40ea9c:	b	40ea80 <ferror@plt+0xc110>
  40eaa0:	stp	x29, x30, [sp, #-80]!
  40eaa4:	mov	x29, sp
  40eaa8:	stp	x23, x24, [sp, #48]
  40eaac:	mov	x23, x2
  40eab0:	mov	w2, w1
  40eab4:	stp	x19, x20, [sp, #16]
  40eab8:	mov	w20, #0x1                   	// #1
  40eabc:	mov	x19, x0
  40eac0:	stp	x21, x22, [sp, #32]
  40eac4:	mov	w22, w3
  40eac8:	mov	w3, #0x20                  	// #32
  40eacc:	str	x25, [sp, #64]
  40ead0:	mov	w25, #0xa                   	// #10
  40ead4:	mov	w24, w4
  40ead8:	mov	w21, w5
  40eadc:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40eae0:	add	x1, x1, #0xe5c
  40eae4:	bl	402940 <fprintf@plt>
  40eae8:	mov	x1, x19
  40eaec:	mov	w0, #0x7c                  	// #124
  40eaf0:	bl	402400 <fputc@plt>
  40eaf4:	cmp	w20, w24
  40eaf8:	b.ge	40eb28 <ferror@plt+0xc1b8>  // b.tcont
  40eafc:	ldrb	w1, [x23, #7]
  40eb00:	lsl	w1, w20, w1
  40eb04:	add	w1, w1, w22
  40eb08:	add	w20, w20, #0x1
  40eb0c:	udiv	w1, w1, w21
  40eb10:	sdiv	w0, w1, w25
  40eb14:	msub	w0, w0, w25, w1
  40eb18:	mov	x1, x19
  40eb1c:	add	w0, w0, #0x30
  40eb20:	bl	402400 <fputc@plt>
  40eb24:	b	40eaf4 <ferror@plt+0xc184>
  40eb28:	mov	x1, x19
  40eb2c:	mov	w0, #0xa                   	// #10
  40eb30:	ldp	x19, x20, [sp, #16]
  40eb34:	ldp	x21, x22, [sp, #32]
  40eb38:	ldp	x23, x24, [sp, #48]
  40eb3c:	ldr	x25, [sp, #64]
  40eb40:	ldp	x29, x30, [sp], #80
  40eb44:	b	402400 <fputc@plt>
  40eb48:	stp	x29, x30, [sp, #-48]!
  40eb4c:	mov	x29, sp
  40eb50:	stp	x21, x22, [sp, #32]
  40eb54:	mov	x21, x0
  40eb58:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40eb5c:	stp	x19, x20, [sp, #16]
  40eb60:	mov	x20, #0x0                   	// #0
  40eb64:	ldr	x19, [x0, #1920]
  40eb68:	add	x22, x19, #0x580
  40eb6c:	ldr	x0, [x19, #8]
  40eb70:	cbz	x0, 40eb90 <ferror@plt+0xc220>
  40eb74:	mov	x1, x21
  40eb78:	bl	4026d0 <strcmp@plt>
  40eb7c:	cbnz	w0, 40eb90 <ferror@plt+0xc220>
  40eb80:	ldr	w0, [x19]
  40eb84:	mov	x20, x19
  40eb88:	add	w0, w0, #0x1
  40eb8c:	str	w0, [x19]
  40eb90:	add	x19, x19, #0x58
  40eb94:	cmp	x22, x19
  40eb98:	b.ne	40eb6c <ferror@plt+0xc1fc>  // b.any
  40eb9c:	cbz	x20, 40ebac <ferror@plt+0xc23c>
  40eba0:	ldr	w0, [x20]
  40eba4:	add	w0, w0, #0x1
  40eba8:	str	w0, [x20]
  40ebac:	mov	x0, x20
  40ebb0:	ldp	x19, x20, [sp, #16]
  40ebb4:	ldp	x21, x22, [sp, #32]
  40ebb8:	ldp	x29, x30, [sp], #48
  40ebbc:	ret
  40ebc0:	stp	x29, x30, [sp, #-32]!
  40ebc4:	tst	w0, #0xff
  40ebc8:	mov	x29, sp
  40ebcc:	str	x19, [sp, #16]
  40ebd0:	mov	x19, x1
  40ebd4:	b.ne	40ec00 <ferror@plt+0xc290>  // b.any
  40ebd8:	mov	x0, x19
  40ebdc:	mov	x1, #0x10                  	// #16
  40ebe0:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  40ebe4:	mov	x1, #0x0                   	// #0
  40ebe8:	cmp	x19, x1
  40ebec:	b.eq	40ec30 <ferror@plt+0xc2c0>  // b.none
  40ebf0:	lsl	x2, x1, #4
  40ebf4:	add	x1, x1, #0x1
  40ebf8:	str	wzr, [x0, x2]
  40ebfc:	b	40ebe8 <ferror@plt+0xc278>
  40ec00:	lsl	x0, x19, #4
  40ec04:	mov	x3, #0x0                   	// #0
  40ec08:	mov	x2, #0x0                   	// #0
  40ec0c:	mov	x1, #0x0                   	// #0
  40ec10:	bl	403de8 <ferror@plt+0x1478>
  40ec14:	cbnz	x0, 40ebe4 <ferror@plt+0xc274>
  40ec18:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40ec1c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40ec20:	add	x2, x2, #0xc73
  40ec24:	add	x0, x0, #0xc81
  40ec28:	mov	w1, #0x2b5                 	// #693
  40ec2c:	bl	402980 <ferror@plt+0x10>
  40ec30:	ldr	x19, [sp, #16]
  40ec34:	ldp	x29, x30, [sp], #32
  40ec38:	ret
  40ec3c:	stp	x29, x30, [sp, #-48]!
  40ec40:	mov	x29, sp
  40ec44:	stp	x19, x20, [sp, #16]
  40ec48:	mov	x19, x0
  40ec4c:	mov	w20, w2
  40ec50:	mov	x2, x1
  40ec54:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40ec58:	add	x1, x1, #0xb20
  40ec5c:	str	x21, [sp, #32]
  40ec60:	mov	w21, w3
  40ec64:	bl	402940 <fprintf@plt>
  40ec68:	mov	w3, w21
  40ec6c:	mov	w2, w20
  40ec70:	mov	x0, x19
  40ec74:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40ec78:	add	x1, x1, #0xe60
  40ec7c:	bl	402940 <fprintf@plt>
  40ec80:	mov	x1, x19
  40ec84:	mov	w0, #0xa                   	// #10
  40ec88:	ldp	x19, x20, [sp, #16]
  40ec8c:	ldr	x21, [sp, #32]
  40ec90:	ldp	x29, x30, [sp], #48
  40ec94:	b	402400 <fputc@plt>
  40ec98:	mov	w1, #0x1                   	// #1
  40ec9c:	str	wzr, [x0]
  40eca0:	stp	xzr, xzr, [x0, #8]
  40eca4:	stp	xzr, xzr, [x0, #24]
  40eca8:	stp	xzr, xzr, [x0, #40]
  40ecac:	stp	xzr, xzr, [x0, #56]
  40ecb0:	strb	w1, [x0, #72]
  40ecb4:	str	xzr, [x0, #80]
  40ecb8:	ret
  40ecbc:	stp	x29, x30, [sp, #-32]!
  40ecc0:	mov	x29, sp
  40ecc4:	str	x19, [sp, #16]
  40ecc8:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  40eccc:	add	x19, x19, #0x778
  40ecd0:	ldr	x0, [x19, #8]
  40ecd4:	cbnz	x0, 40ed0c <ferror@plt+0xc39c>
  40ecd8:	mov	x0, #0x588                 	// #1416
  40ecdc:	bl	43a718 <_obstack_memory_used@@Base+0x8b0>
  40ece0:	mov	x3, x0
  40ece4:	mov	x1, x0
  40ece8:	mov	x0, #0x10                  	// #16
  40ecec:	add	x2, x1, #0x588
  40ecf0:	str	x0, [x3], #8
  40ecf4:	mov	x0, x3
  40ecf8:	bl	40ec98 <ferror@plt+0xc328>
  40ecfc:	add	x0, x0, #0x58
  40ed00:	cmp	x2, x0
  40ed04:	b.ne	40ecf8 <ferror@plt+0xc388>  // b.any
  40ed08:	str	x3, [x19, #8]
  40ed0c:	ldr	x19, [sp, #16]
  40ed10:	ldp	x29, x30, [sp], #32
  40ed14:	ret
  40ed18:	stp	x29, x30, [sp, #-32]!
  40ed1c:	mov	x29, sp
  40ed20:	str	x19, [sp, #16]
  40ed24:	cbnz	x0, 40ed40 <ferror@plt+0xc3d0>
  40ed28:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40ed2c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40ed30:	add	x2, x2, #0xe87
  40ed34:	add	x0, x0, #0xe4a
  40ed38:	mov	w1, #0x133                 	// #307
  40ed3c:	bl	402980 <ferror@plt+0x10>
  40ed40:	mov	x19, x0
  40ed44:	bl	40ecbc <ferror@plt+0xc34c>
  40ed48:	mov	x0, x19
  40ed4c:	bl	40eb48 <ferror@plt+0xc1d8>
  40ed50:	mov	x19, x0
  40ed54:	cbz	x0, 40ed90 <ferror@plt+0xc420>
  40ed58:	ldr	x0, [x0, #16]
  40ed5c:	str	xzr, [x19, #8]
  40ed60:	cbz	x0, 40ed68 <ferror@plt+0xc3f8>
  40ed64:	bl	402450 <fclose@plt>
  40ed68:	ldr	x0, [x19, #80]
  40ed6c:	str	xzr, [x19, #16]
  40ed70:	stp	xzr, xzr, [x19, #40]
  40ed74:	str	xzr, [x19, #56]
  40ed78:	cbz	x0, 40ed80 <ferror@plt+0xc410>
  40ed7c:	str	wzr, [x0, #4]
  40ed80:	mov	w0, #0x1                   	// #1
  40ed84:	str	wzr, [x19]
  40ed88:	str	xzr, [x19, #64]
  40ed8c:	strb	w0, [x19, #72]
  40ed90:	ldr	x19, [sp, #16]
  40ed94:	ldp	x29, x30, [sp], #32
  40ed98:	ret
  40ed9c:	stp	x29, x30, [sp, #-32]!
  40eda0:	mov	x29, sp
  40eda4:	str	x19, [sp, #16]
  40eda8:	mov	x19, x0
  40edac:	ldr	x0, [x0, #16]
  40edb0:	cbz	x0, 40edbc <ferror@plt+0xc44c>
  40edb4:	bl	402450 <fclose@plt>
  40edb8:	str	xzr, [x19, #16]
  40edbc:	ldr	x0, [x19, #24]
  40edc0:	cbz	x0, 40edc8 <ferror@plt+0xc458>
  40edc4:	bl	402730 <free@plt>
  40edc8:	ldr	x0, [x19, #80]
  40edcc:	cbz	x0, 40eddc <ferror@plt+0xc46c>
  40edd0:	ldrsb	w1, [x0, #3]
  40edd4:	tbz	w1, #31, 40ede8 <ferror@plt+0xc478>
  40edd8:	str	wzr, [x0, #4]
  40eddc:	ldr	x19, [sp, #16]
  40ede0:	ldp	x29, x30, [sp], #32
  40ede4:	ret
  40ede8:	ldr	x19, [sp, #16]
  40edec:	ldp	x29, x30, [sp], #32
  40edf0:	b	402730 <free@plt>
  40edf4:	stp	x29, x30, [sp, #-32]!
  40edf8:	mov	x29, sp
  40edfc:	stp	x19, x20, [sp, #16]
  40ee00:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  40ee04:	add	x20, x20, #0x778
  40ee08:	ldr	x0, [x20, #8]
  40ee0c:	cbz	x0, 40ee54 <ferror@plt+0xc4e4>
  40ee10:	ldur	x19, [x0, #-8]
  40ee14:	mov	x1, #0x58                  	// #88
  40ee18:	madd	x19, x19, x1, x0
  40ee1c:	ldr	x0, [x20, #8]
  40ee20:	cmp	x0, x19
  40ee24:	b.eq	40ee38 <ferror@plt+0xc4c8>  // b.none
  40ee28:	sub	x19, x19, #0x58
  40ee2c:	mov	x0, x19
  40ee30:	bl	40ed9c <ferror@plt+0xc42c>
  40ee34:	b	40ee1c <ferror@plt+0xc4ac>
  40ee38:	mov	x0, x19
  40ee3c:	mov	x2, #0x58                  	// #88
  40ee40:	ldr	x1, [x0, #-8]!
  40ee44:	mul	x1, x1, x2
  40ee48:	add	x1, x1, #0x8
  40ee4c:	bl	43a478 <_obstack_memory_used@@Base+0x610>
  40ee50:	str	xzr, [x20, #8]
  40ee54:	ldp	x19, x20, [sp, #16]
  40ee58:	ldp	x29, x30, [sp], #32
  40ee5c:	ret
  40ee60:	stp	x29, x30, [sp, #-32]!
  40ee64:	mov	w1, w0
  40ee68:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40ee6c:	mov	x29, sp
  40ee70:	ldr	x0, [x0, #1912]
  40ee74:	add	x3, sp, #0x18
  40ee78:	mov	w2, #0x1                   	// #1
  40ee7c:	str	xzr, [sp, #24]
  40ee80:	bl	423cf4 <ferror@plt+0x21384>
  40ee84:	cmp	w0, #0x1
  40ee88:	cset	w0, eq  // eq = none
  40ee8c:	ldp	x29, x30, [sp], #32
  40ee90:	ret
  40ee94:	stp	x29, x30, [sp, #-16]!
  40ee98:	mov	w2, #0x0                   	// #0
  40ee9c:	mov	w1, #0x1                   	// #1
  40eea0:	mov	x29, sp
  40eea4:	bl	40e938 <ferror@plt+0xbfc8>
  40eea8:	ldp	x29, x30, [sp], #16
  40eeac:	ret
  40eeb0:	stp	x29, x30, [sp, #-112]!
  40eeb4:	mov	x29, sp
  40eeb8:	stp	x19, x20, [sp, #16]
  40eebc:	stp	x21, x22, [sp, #32]
  40eec0:	mov	x21, x0
  40eec4:	str	x23, [sp, #48]
  40eec8:	cbnz	x0, 40eefc <ferror@plt+0xc58c>
  40eecc:	mov	x0, x21
  40eed0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  40eed4:	add	x1, x1, #0x129
  40eed8:	bl	402490 <fopen@plt>
  40eedc:	mov	x20, x0
  40eee0:	cbnz	x0, 40ef14 <ferror@plt+0xc5a4>
  40eee4:	mov	x0, x20
  40eee8:	ldp	x19, x20, [sp, #16]
  40eeec:	ldp	x21, x22, [sp, #32]
  40eef0:	ldr	x23, [sp, #48]
  40eef4:	ldp	x29, x30, [sp], #112
  40eef8:	ret
  40eefc:	bl	40ecbc <ferror@plt+0xc34c>
  40ef00:	mov	x0, x21
  40ef04:	bl	40eb48 <ferror@plt+0xc1d8>
  40ef08:	mov	x20, x0
  40ef0c:	cbnz	x0, 40eee4 <ferror@plt+0xc574>
  40ef10:	b	40eecc <ferror@plt+0xc55c>
  40ef14:	bl	40ecbc <ferror@plt+0xc34c>
  40ef18:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40ef1c:	add	x1, x0, #0x778
  40ef20:	mov	x23, x0
  40ef24:	ldr	x19, [x1, #8]
  40ef28:	mov	x1, x19
  40ef2c:	add	x3, x19, #0x580
  40ef30:	ldr	w22, [x1], #88
  40ef34:	ldr	w0, [x1]
  40ef38:	ldr	w4, [x19]
  40ef3c:	ldr	x2, [x1, #8]
  40ef40:	cmp	w0, w4
  40ef44:	b.cc	40efe0 <ferror@plt+0xc670>  // b.lo, b.ul, b.last
  40ef48:	ldr	x4, [x19, #8]
  40ef4c:	cbz	x4, 40ef58 <ferror@plt+0xc5e8>
  40ef50:	cmp	x2, #0x0
  40ef54:	csel	x19, x19, x1, ne  // ne = any
  40ef58:	cmp	w22, w0
  40ef5c:	csel	w22, w22, w0, cs  // cs = hs, nlast
  40ef60:	cbz	x2, 40ef70 <ferror@plt+0xc600>
  40ef64:	add	x1, x1, #0x58
  40ef68:	cmp	x3, x1
  40ef6c:	b.ne	40ef34 <ferror@plt+0xc5c4>  // b.any
  40ef70:	ldr	x0, [x19, #16]
  40ef74:	str	x21, [x19, #8]
  40ef78:	cbz	x0, 40ef80 <ferror@plt+0xc610>
  40ef7c:	bl	402450 <fclose@plt>
  40ef80:	ldr	x0, [x19, #80]
  40ef84:	str	x20, [x19, #16]
  40ef88:	stp	xzr, xzr, [x19, #40]
  40ef8c:	str	xzr, [x19, #56]
  40ef90:	cbz	x0, 40ef98 <ferror@plt+0xc628>
  40ef94:	str	wzr, [x0, #4]
  40ef98:	ldr	x0, [x23, #1912]
  40ef9c:	add	w22, w22, #0x1
  40efa0:	str	w22, [x19]
  40efa4:	add	x2, sp, #0x4c
  40efa8:	mov	x1, x21
  40efac:	str	wzr, [sp, #76]
  40efb0:	bl	4246d4 <ferror@plt+0x21d64>
  40efb4:	tst	w0, #0xff
  40efb8:	b.eq	40f008 <ferror@plt+0xc698>  // b.none
  40efbc:	ldr	w0, [sp, #76]
  40efc0:	cmp	w0, #0x1
  40efc4:	b.hi	40efe8 <ferror@plt+0xc678>  // b.pmore
  40efc8:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  40efcc:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40efd0:	add	x2, x2, #0xeb2
  40efd4:	add	x0, x0, #0xe4a
  40efd8:	mov	w1, #0x107                 	// #263
  40efdc:	bl	402980 <ferror@plt+0x10>
  40efe0:	mov	x19, x1
  40efe4:	b	40ef58 <ferror@plt+0xc5e8>
  40efe8:	add	x8, sp, #0x50
  40efec:	bl	40ee94 <ferror@plt+0xc524>
  40eff0:	ldrsw	x0, [sp, #88]
  40eff4:	mov	x20, x19
  40eff8:	str	x0, [x19, #64]
  40effc:	mov	w0, #0x1                   	// #1
  40f000:	strb	w0, [x19, #72]
  40f004:	b	40eee4 <ferror@plt+0xc574>
  40f008:	mov	x0, #0x0                   	// #0
  40f00c:	b	40eff4 <ferror@plt+0xc684>
  40f010:	stp	x29, x30, [sp, #-16]!
  40f014:	mov	x29, sp
  40f018:	bl	40eeb0 <ferror@plt+0xc540>
  40f01c:	cbz	x0, 40f02c <ferror@plt+0xc6bc>
  40f020:	ldrb	w0, [x0, #72]
  40f024:	ldp	x29, x30, [sp], #16
  40f028:	ret
  40f02c:	mov	w0, #0x0                   	// #0
  40f030:	b	40f024 <ferror@plt+0xc6b4>
  40f034:	stp	x29, x30, [sp, #-16]!
  40f038:	mov	w2, w1
  40f03c:	mov	w1, #0x0                   	// #0
  40f040:	mov	x29, sp
  40f044:	bl	40e938 <ferror@plt+0xbfc8>
  40f048:	ldp	x29, x30, [sp], #16
  40f04c:	ret
  40f050:	stp	x29, x30, [sp, #-16]!
  40f054:	mov	x29, sp
  40f058:	bl	40f034 <ferror@plt+0xc6c4>
  40f05c:	ldp	x29, x30, [sp], #16
  40f060:	ret
  40f064:	stp	x29, x30, [sp, #-32]!
  40f068:	mov	w1, w0
  40f06c:	mov	x29, sp
  40f070:	stp	x19, x20, [sp, #16]
  40f074:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  40f078:	mov	w19, w0
  40f07c:	ldr	x0, [x20, #1912]
  40f080:	bl	423c64 <ferror@plt+0x212f4>
  40f084:	cbz	w0, 40f0a4 <ferror@plt+0xc734>
  40f088:	ldr	x0, [x20, #1912]
  40f08c:	mov	w1, w19
  40f090:	ldp	x19, x20, [sp, #16]
  40f094:	mov	x3, #0x0                   	// #0
  40f098:	ldp	x29, x30, [sp], #32
  40f09c:	mov	w2, #0x0                   	// #0
  40f0a0:	b	423cf4 <ferror@plt+0x21384>
  40f0a4:	mov	w0, w19
  40f0a8:	ldp	x19, x20, [sp, #16]
  40f0ac:	ldp	x29, x30, [sp], #32
  40f0b0:	ret
  40f0b4:	mov	w1, w0
  40f0b8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  40f0bc:	mov	x3, #0x0                   	// #0
  40f0c0:	mov	w2, #0x0                   	// #0
  40f0c4:	ldr	x0, [x0, #1912]
  40f0c8:	b	423cf4 <ferror@plt+0x21384>
  40f0cc:	stp	x29, x30, [sp, #-48]!
  40f0d0:	mov	x29, sp
  40f0d4:	stp	x19, x20, [sp, #16]
  40f0d8:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  40f0dc:	stp	x21, x22, [sp, #32]
  40f0e0:	mov	w21, w1
  40f0e4:	mov	w1, w0
  40f0e8:	ldr	x0, [x19, #1912]
  40f0ec:	mov	w22, w2
  40f0f0:	bl	423ae4 <ferror@plt+0x21174>
  40f0f4:	mov	w20, w0
  40f0f8:	ldr	x0, [x19, #1912]
  40f0fc:	mov	w1, w21
  40f100:	bl	423a00 <ferror@plt+0x21090>
  40f104:	mov	x21, x0
  40f108:	ldr	x0, [x19, #1912]
  40f10c:	mov	w1, w22
  40f110:	bl	423a00 <ferror@plt+0x21090>
  40f114:	bfxil	x0, x21, #0, #32
  40f118:	mov	x2, x0
  40f11c:	mov	w1, w20
  40f120:	ldr	x0, [x19, #1912]
  40f124:	mov	x3, #0x0                   	// #0
  40f128:	ldp	x19, x20, [sp, #16]
  40f12c:	ldp	x21, x22, [sp, #32]
  40f130:	ldp	x29, x30, [sp], #48
  40f134:	b	423800 <ferror@plt+0x20e90>
  40f138:	stp	x29, x30, [sp, #-32]!
  40f13c:	mov	x29, sp
  40f140:	stp	x19, x20, [sp, #16]
  40f144:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  40f148:	mov	x19, x1
  40f14c:	mov	w1, w0
  40f150:	ldr	x0, [x20, #1912]
  40f154:	bl	423ae4 <ferror@plt+0x21174>
  40f158:	mov	w1, w0
  40f15c:	mov	x2, x19
  40f160:	mov	x3, #0x0                   	// #0
  40f164:	ldr	x0, [x20, #1912]
  40f168:	ldp	x19, x20, [sp, #16]
  40f16c:	ldp	x29, x30, [sp], #32
  40f170:	b	423800 <ferror@plt+0x20e90>
  40f174:	stp	x29, x30, [sp, #-176]!
  40f178:	mov	x29, sp
  40f17c:	stp	x21, x22, [sp, #32]
  40f180:	adrp	x22, 478000 <_obstack_memory_used@@Base+0x3e198>
  40f184:	add	x1, sp, #0x48
  40f188:	ldr	x0, [x22, #1912]
  40f18c:	stp	x19, x20, [sp, #16]
  40f190:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  40f194:	str	x23, [sp, #48]
  40f198:	stp	xzr, xzr, [sp, #72]
  40f19c:	stp	xzr, xzr, [sp, #88]
  40f1a0:	stp	xzr, xzr, [sp, #104]
  40f1a4:	stp	xzr, xzr, [sp, #120]
  40f1a8:	stp	xzr, xzr, [sp, #136]
  40f1ac:	stp	xzr, xzr, [sp, #152]
  40f1b0:	str	xzr, [sp, #168]
  40f1b4:	bl	42478c <ferror@plt+0x21e1c>
  40f1b8:	ldp	x2, x0, [sp, #128]
  40f1bc:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40f1c0:	ldr	x21, [sp, #88]
  40f1c4:	add	x1, x1, #0xec2
  40f1c8:	ldr	x20, [sp, #144]
  40f1cc:	add	x21, x21, x2
  40f1d0:	ldr	x2, [sp, #96]
  40f1d4:	add	x23, x0, x20
  40f1d8:	add	x21, x21, x20
  40f1dc:	add	x0, x0, x2
  40f1e0:	add	x20, x0, x20
  40f1e4:	ldr	x0, [x19, #1336]
  40f1e8:	ldr	x2, [sp, #104]
  40f1ec:	bl	402940 <fprintf@plt>
  40f1f0:	ldr	x0, [sp, #104]
  40f1f4:	cbz	x0, 40f210 <ferror@plt+0xc8a0>
  40f1f8:	ldr	x2, [sp, #112]
  40f1fc:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40f200:	add	x1, x1, #0xef7
  40f204:	sdiv	x2, x2, x0
  40f208:	ldr	x0, [x19, #1336]
  40f20c:	bl	402940 <fprintf@plt>
  40f210:	ldr	x1, [x19, #1336]
  40f214:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40f218:	add	x0, x0, #0xf2c
  40f21c:	bl	402340 <fputs@plt>
  40f220:	ldr	x2, [sp, #80]
  40f224:	mov	x1, #0x27ff                	// #10239
  40f228:	ldr	x0, [x19, #1336]
  40f22c:	cmp	x2, x1
  40f230:	b.gt	40f490 <ferror@plt+0xcb20>
  40f234:	mov	w3, #0x20                  	// #32
  40f238:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40f23c:	add	x1, x1, #0xf64
  40f240:	bl	402940 <fprintf@plt>
  40f244:	ldr	x2, [sp, #96]
  40f248:	mov	x1, #0x27ff                	// #10239
  40f24c:	ldr	x0, [x19, #1336]
  40f250:	cmp	x2, x1
  40f254:	b.gt	40f4b4 <ferror@plt+0xcb44>
  40f258:	mov	w3, #0x20                  	// #32
  40f25c:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40f260:	add	x1, x1, #0xf91
  40f264:	bl	402940 <fprintf@plt>
  40f268:	ldr	x2, [sp, #72]
  40f26c:	mov	x1, #0x27ff                	// #10239
  40f270:	ldr	x0, [x19, #1336]
  40f274:	cmp	x2, x1
  40f278:	b.gt	40f4d8 <ferror@plt+0xcb68>
  40f27c:	mov	w3, #0x20                  	// #32
  40f280:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40f284:	add	x1, x1, #0xfbe
  40f288:	bl	402940 <fprintf@plt>
  40f28c:	ldr	x2, [sp, #88]
  40f290:	mov	x1, #0x27ff                	// #10239
  40f294:	ldr	x0, [x19, #1336]
  40f298:	cmp	x2, x1
  40f29c:	b.gt	40f4fc <ferror@plt+0xcb8c>
  40f2a0:	mov	w3, #0x20                  	// #32
  40f2a4:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40f2a8:	add	x1, x1, #0xfeb
  40f2ac:	bl	402940 <fprintf@plt>
  40f2b0:	ldr	x2, [sp, #120]
  40f2b4:	mov	x1, #0x27ff                	// #10239
  40f2b8:	ldr	x0, [x19, #1336]
  40f2bc:	cmp	x2, x1
  40f2c0:	b.gt	40f520 <ferror@plt+0xcbb0>
  40f2c4:	mov	w3, #0x20                  	// #32
  40f2c8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f2cc:	add	x1, x1, #0x18
  40f2d0:	bl	402940 <fprintf@plt>
  40f2d4:	ldr	x2, [sp, #136]
  40f2d8:	mov	x1, #0x27ff                	// #10239
  40f2dc:	ldr	x0, [x19, #1336]
  40f2e0:	cmp	x2, x1
  40f2e4:	b.gt	40f544 <ferror@plt+0xcbd4>
  40f2e8:	mov	w3, #0x20                  	// #32
  40f2ec:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f2f0:	add	x1, x1, #0x45
  40f2f4:	bl	402940 <fprintf@plt>
  40f2f8:	ldr	x2, [sp, #144]
  40f2fc:	mov	x1, #0x27ff                	// #10239
  40f300:	ldr	x0, [x19, #1336]
  40f304:	cmp	x2, x1
  40f308:	b.gt	40f568 <ferror@plt+0xcbf8>
  40f30c:	mov	w3, #0x20                  	// #32
  40f310:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f314:	add	x1, x1, #0x72
  40f318:	bl	402940 <fprintf@plt>
  40f31c:	mov	x1, #0x27ff                	// #10239
  40f320:	cmp	x23, x1
  40f324:	ldr	x0, [x19, #1336]
  40f328:	b.le	40f598 <ferror@plt+0xcc28>
  40f32c:	mov	w1, #0x9fffff              	// #10485759
  40f330:	cmp	x23, x1
  40f334:	b.gt	40f58c <ferror@plt+0xcc1c>
  40f338:	asr	x2, x23, #10
  40f33c:	mov	w3, #0x6b                  	// #107
  40f340:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f344:	add	x1, x1, #0x9f
  40f348:	bl	402940 <fprintf@plt>
  40f34c:	ldr	x2, [sp, #152]
  40f350:	mov	x1, #0x27ff                	// #10239
  40f354:	ldr	x0, [x19, #1336]
  40f358:	cmp	x2, x1
  40f35c:	b.gt	40f5a4 <ferror@plt+0xcc34>
  40f360:	mov	w3, #0x20                  	// #32
  40f364:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f368:	add	x1, x1, #0xcc
  40f36c:	bl	402940 <fprintf@plt>
  40f370:	mov	x1, #0x27ff                	// #10239
  40f374:	cmp	x21, x1
  40f378:	ldr	x0, [x19, #1336]
  40f37c:	b.le	40f5d4 <ferror@plt+0xcc64>
  40f380:	mov	w1, #0x9fffff              	// #10485759
  40f384:	cmp	x21, x1
  40f388:	b.gt	40f5c8 <ferror@plt+0xcc58>
  40f38c:	asr	x2, x21, #10
  40f390:	mov	w3, #0x6b                  	// #107
  40f394:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f398:	add	x1, x1, #0xf9
  40f39c:	bl	402940 <fprintf@plt>
  40f3a0:	mov	x1, #0x27ff                	// #10239
  40f3a4:	cmp	x20, x1
  40f3a8:	ldr	x0, [x19, #1336]
  40f3ac:	b.le	40f5ec <ferror@plt+0xcc7c>
  40f3b0:	mov	w1, #0x9fffff              	// #10485759
  40f3b4:	cmp	x20, x1
  40f3b8:	b.gt	40f5e0 <ferror@plt+0xcc70>
  40f3bc:	asr	x2, x20, #10
  40f3c0:	mov	w3, #0x6b                  	// #107
  40f3c4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f3c8:	add	x1, x1, #0x126
  40f3cc:	bl	402940 <fprintf@plt>
  40f3d0:	ldr	x2, [sp, #160]
  40f3d4:	mov	x1, #0x27ff                	// #10239
  40f3d8:	ldr	x0, [x19, #1336]
  40f3dc:	cmp	x2, x1
  40f3e0:	b.gt	40f5f8 <ferror@plt+0xcc88>
  40f3e4:	mov	w3, #0x20                  	// #32
  40f3e8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f3ec:	add	x1, x1, #0x153
  40f3f0:	bl	402940 <fprintf@plt>
  40f3f4:	ldr	x2, [sp, #168]
  40f3f8:	mov	x1, #0x27ff                	// #10239
  40f3fc:	ldr	x0, [x19, #1336]
  40f400:	cmp	x2, x1
  40f404:	b.gt	40f61c <ferror@plt+0xccac>
  40f408:	mov	w3, #0x20                  	// #32
  40f40c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f410:	add	x1, x1, #0x180
  40f414:	bl	402940 <fprintf@plt>
  40f418:	ldr	x1, [x22, #1912]
  40f41c:	ldr	x0, [x19, #1336]
  40f420:	ldr	w2, [x1, #124]
  40f424:	mov	w1, #0x27ff                	// #10239
  40f428:	cmp	w2, w1
  40f42c:	b.hi	40f640 <ferror@plt+0xccd0>  // b.pmore
  40f430:	mov	w2, w2
  40f434:	mov	w3, #0x20                  	// #32
  40f438:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f43c:	add	x1, x1, #0x1ad
  40f440:	bl	402940 <fprintf@plt>
  40f444:	ldr	x1, [x22, #1912]
  40f448:	ldr	x0, [x19, #1336]
  40f44c:	ldr	w2, [x1, #128]
  40f450:	mov	w1, #0x27ff                	// #10239
  40f454:	cmp	w2, w1
  40f458:	b.hi	40f664 <ferror@plt+0xccf4>  // b.pmore
  40f45c:	mov	w2, w2
  40f460:	mov	w3, #0x20                  	// #32
  40f464:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f468:	add	x1, x1, #0x1da
  40f46c:	bl	402940 <fprintf@plt>
  40f470:	ldr	x1, [x19, #1336]
  40f474:	mov	w0, #0xa                   	// #10
  40f478:	bl	402400 <fputc@plt>
  40f47c:	ldp	x19, x20, [sp, #16]
  40f480:	ldp	x21, x22, [sp, #32]
  40f484:	ldr	x23, [sp, #48]
  40f488:	ldp	x29, x30, [sp], #176
  40f48c:	ret
  40f490:	mov	w1, #0x9fffff              	// #10485759
  40f494:	cmp	x2, x1
  40f498:	b.gt	40f4a8 <ferror@plt+0xcb38>
  40f49c:	asr	x2, x2, #10
  40f4a0:	mov	w3, #0x6b                  	// #107
  40f4a4:	b	40f238 <ferror@plt+0xc8c8>
  40f4a8:	asr	x2, x2, #20
  40f4ac:	mov	w3, #0x4d                  	// #77
  40f4b0:	b	40f238 <ferror@plt+0xc8c8>
  40f4b4:	mov	w1, #0x9fffff              	// #10485759
  40f4b8:	cmp	x2, x1
  40f4bc:	b.gt	40f4cc <ferror@plt+0xcb5c>
  40f4c0:	asr	x2, x2, #10
  40f4c4:	mov	w3, #0x6b                  	// #107
  40f4c8:	b	40f25c <ferror@plt+0xc8ec>
  40f4cc:	asr	x2, x2, #20
  40f4d0:	mov	w3, #0x4d                  	// #77
  40f4d4:	b	40f25c <ferror@plt+0xc8ec>
  40f4d8:	mov	w1, #0x9fffff              	// #10485759
  40f4dc:	cmp	x2, x1
  40f4e0:	b.gt	40f4f0 <ferror@plt+0xcb80>
  40f4e4:	asr	x2, x2, #10
  40f4e8:	mov	w3, #0x6b                  	// #107
  40f4ec:	b	40f280 <ferror@plt+0xc910>
  40f4f0:	asr	x2, x2, #20
  40f4f4:	mov	w3, #0x4d                  	// #77
  40f4f8:	b	40f280 <ferror@plt+0xc910>
  40f4fc:	mov	w1, #0x9fffff              	// #10485759
  40f500:	cmp	x2, x1
  40f504:	b.gt	40f514 <ferror@plt+0xcba4>
  40f508:	asr	x2, x2, #10
  40f50c:	mov	w3, #0x6b                  	// #107
  40f510:	b	40f2a4 <ferror@plt+0xc934>
  40f514:	asr	x2, x2, #20
  40f518:	mov	w3, #0x4d                  	// #77
  40f51c:	b	40f2a4 <ferror@plt+0xc934>
  40f520:	mov	w1, #0x9fffff              	// #10485759
  40f524:	cmp	x2, x1
  40f528:	b.gt	40f538 <ferror@plt+0xcbc8>
  40f52c:	asr	x2, x2, #10
  40f530:	mov	w3, #0x6b                  	// #107
  40f534:	b	40f2c8 <ferror@plt+0xc958>
  40f538:	asr	x2, x2, #20
  40f53c:	mov	w3, #0x4d                  	// #77
  40f540:	b	40f2c8 <ferror@plt+0xc958>
  40f544:	mov	w1, #0x9fffff              	// #10485759
  40f548:	cmp	x2, x1
  40f54c:	b.gt	40f55c <ferror@plt+0xcbec>
  40f550:	asr	x2, x2, #10
  40f554:	mov	w3, #0x6b                  	// #107
  40f558:	b	40f2ec <ferror@plt+0xc97c>
  40f55c:	asr	x2, x2, #20
  40f560:	mov	w3, #0x4d                  	// #77
  40f564:	b	40f2ec <ferror@plt+0xc97c>
  40f568:	mov	w1, #0x9fffff              	// #10485759
  40f56c:	cmp	x2, x1
  40f570:	b.gt	40f580 <ferror@plt+0xcc10>
  40f574:	asr	x2, x2, #10
  40f578:	mov	w3, #0x6b                  	// #107
  40f57c:	b	40f310 <ferror@plt+0xc9a0>
  40f580:	asr	x2, x2, #20
  40f584:	mov	w3, #0x4d                  	// #77
  40f588:	b	40f310 <ferror@plt+0xc9a0>
  40f58c:	asr	x2, x23, #20
  40f590:	mov	w3, #0x4d                  	// #77
  40f594:	b	40f340 <ferror@plt+0xc9d0>
  40f598:	mov	x2, x23
  40f59c:	mov	w3, #0x20                  	// #32
  40f5a0:	b	40f340 <ferror@plt+0xc9d0>
  40f5a4:	mov	w1, #0x9fffff              	// #10485759
  40f5a8:	cmp	x2, x1
  40f5ac:	b.gt	40f5bc <ferror@plt+0xcc4c>
  40f5b0:	asr	x2, x2, #10
  40f5b4:	mov	w3, #0x6b                  	// #107
  40f5b8:	b	40f364 <ferror@plt+0xc9f4>
  40f5bc:	asr	x2, x2, #20
  40f5c0:	mov	w3, #0x4d                  	// #77
  40f5c4:	b	40f364 <ferror@plt+0xc9f4>
  40f5c8:	asr	x2, x21, #20
  40f5cc:	mov	w3, #0x4d                  	// #77
  40f5d0:	b	40f394 <ferror@plt+0xca24>
  40f5d4:	mov	x2, x21
  40f5d8:	mov	w3, #0x20                  	// #32
  40f5dc:	b	40f394 <ferror@plt+0xca24>
  40f5e0:	asr	x2, x20, #20
  40f5e4:	mov	w3, #0x4d                  	// #77
  40f5e8:	b	40f3c4 <ferror@plt+0xca54>
  40f5ec:	mov	x2, x20
  40f5f0:	mov	w3, #0x20                  	// #32
  40f5f4:	b	40f3c4 <ferror@plt+0xca54>
  40f5f8:	mov	w1, #0x9fffff              	// #10485759
  40f5fc:	cmp	x2, x1
  40f600:	b.gt	40f610 <ferror@plt+0xcca0>
  40f604:	asr	x2, x2, #10
  40f608:	mov	w3, #0x6b                  	// #107
  40f60c:	b	40f3e8 <ferror@plt+0xca78>
  40f610:	asr	x2, x2, #20
  40f614:	mov	w3, #0x4d                  	// #77
  40f618:	b	40f3e8 <ferror@plt+0xca78>
  40f61c:	mov	w1, #0x9fffff              	// #10485759
  40f620:	cmp	x2, x1
  40f624:	b.gt	40f634 <ferror@plt+0xccc4>
  40f628:	asr	x2, x2, #10
  40f62c:	mov	w3, #0x6b                  	// #107
  40f630:	b	40f40c <ferror@plt+0xca9c>
  40f634:	asr	x2, x2, #20
  40f638:	mov	w3, #0x4d                  	// #77
  40f63c:	b	40f40c <ferror@plt+0xca9c>
  40f640:	mov	w1, #0x9fffff              	// #10485759
  40f644:	cmp	w2, w1
  40f648:	b.hi	40f658 <ferror@plt+0xcce8>  // b.pmore
  40f64c:	lsr	w2, w2, #10
  40f650:	mov	w3, #0x6b                  	// #107
  40f654:	b	40f438 <ferror@plt+0xcac8>
  40f658:	lsr	w2, w2, #20
  40f65c:	mov	w3, #0x4d                  	// #77
  40f660:	b	40f438 <ferror@plt+0xcac8>
  40f664:	mov	w1, #0x9fffff              	// #10485759
  40f668:	cmp	w2, w1
  40f66c:	b.hi	40f67c <ferror@plt+0xcd0c>  // b.pmore
  40f670:	lsr	w2, w2, #10
  40f674:	mov	w3, #0x6b                  	// #107
  40f678:	b	40f464 <ferror@plt+0xcaf4>
  40f67c:	lsr	w2, w2, #20
  40f680:	mov	w3, #0x4d                  	// #77
  40f684:	b	40f464 <ferror@plt+0xcaf4>
  40f688:	stp	x29, x30, [sp, #-48]!
  40f68c:	mov	x3, #0x0                   	// #0
  40f690:	mov	x29, sp
  40f694:	stp	x19, x20, [sp, #16]
  40f698:	mov	x20, x0
  40f69c:	mov	w19, w1
  40f6a0:	mov	x1, #0x0                   	// #0
  40f6a4:	str	w19, [x20]
  40f6a8:	sbfiz	x0, x19, #2, #32
  40f6ac:	str	x21, [sp, #32]
  40f6b0:	mov	x21, x2
  40f6b4:	mov	x2, #0x0                   	// #0
  40f6b8:	bl	403dc0 <ferror@plt+0x1450>
  40f6bc:	mov	x3, #0x0                   	// #0
  40f6c0:	str	x0, [x20, #8]
  40f6c4:	cmp	w19, w3
  40f6c8:	b.le	40f6dc <ferror@plt+0xcd6c>
  40f6cc:	ldr	w1, [x21, x3, lsl #2]
  40f6d0:	str	w1, [x0, x3, lsl #2]
  40f6d4:	add	x3, x3, #0x1
  40f6d8:	b	40f6c4 <ferror@plt+0xcd54>
  40f6dc:	ldp	x19, x20, [sp, #16]
  40f6e0:	ldr	x21, [sp, #32]
  40f6e4:	ldp	x29, x30, [sp], #48
  40f6e8:	ret
  40f6ec:	stp	x29, x30, [sp, #-64]!
  40f6f0:	mov	x3, #0x1                   	// #1
  40f6f4:	mov	x2, #0x0                   	// #0
  40f6f8:	mov	x29, sp
  40f6fc:	adrp	x1, 410000 <ferror@plt+0xd690>
  40f700:	add	x1, x1, #0x7a4
  40f704:	stp	x19, x20, [sp, #16]
  40f708:	stp	x21, x22, [sp, #32]
  40f70c:	mov	x21, x0
  40f710:	mov	x0, #0x30                  	// #48
  40f714:	str	x23, [sp, #48]
  40f718:	bl	403dc0 <ferror@plt+0x1450>
  40f71c:	mov	x19, x0
  40f720:	mov	w23, #0x1                   	// #1
  40f724:	strb	w23, [x0, #44]
  40f728:	mov	x0, #0x40                  	// #64
  40f72c:	stp	xzr, xzr, [x19, #16]
  40f730:	str	xzr, [x19, #32]
  40f734:	bl	4039fc <ferror@plt+0x108c>
  40f738:	mov	w20, w0
  40f73c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40f740:	add	x0, x0, #0x10
  40f744:	ubfiz	x1, x20, #4, #32
  40f748:	ldr	w22, [x0, x1]
  40f74c:	mov	w0, w23
  40f750:	mov	x1, x22
  40f754:	bl	40ebc0 <ferror@plt+0xc250>
  40f758:	ldr	x23, [sp, #48]
  40f75c:	str	x19, [x21]
  40f760:	stp	x0, x22, [x19]
  40f764:	str	w20, [x19, #40]
  40f768:	ldp	x19, x20, [sp, #16]
  40f76c:	ldp	x21, x22, [sp, #32]
  40f770:	ldp	x29, x30, [sp], #64
  40f774:	ret
  40f778:	stp	x29, x30, [sp, #-32]!
  40f77c:	mov	w1, w0
  40f780:	mov	x3, #0x0                   	// #0
  40f784:	mov	x29, sp
  40f788:	str	x19, [sp, #16]
  40f78c:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  40f790:	mov	w2, #0x1                   	// #1
  40f794:	ldr	x0, [x19, #1912]
  40f798:	bl	423cf4 <ferror@plt+0x21384>
  40f79c:	mov	w1, w0
  40f7a0:	ldr	x0, [x19, #1912]
  40f7a4:	bl	423a00 <ferror@plt+0x21090>
  40f7a8:	ldr	x19, [sp, #16]
  40f7ac:	ldp	x29, x30, [sp], #32
  40f7b0:	ret
  40f7b4:	stp	x29, x30, [sp, #-80]!
  40f7b8:	mov	x29, sp
  40f7bc:	stp	x19, x20, [sp, #16]
  40f7c0:	stp	x21, x22, [sp, #32]
  40f7c4:	stp	x23, x24, [sp, #48]
  40f7c8:	stp	x25, x26, [sp, #64]
  40f7cc:	cbnz	x2, 40f7e8 <ferror@plt+0xce78>
  40f7d0:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f7d4:	add	x2, x2, #0x207
  40f7d8:	mov	w1, #0x50d                 	// #1293
  40f7dc:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40f7e0:	add	x0, x0, #0xe4a
  40f7e4:	bl	402980 <ferror@plt+0x10>
  40f7e8:	mov	x22, x3
  40f7ec:	cbnz	x3, 40f800 <ferror@plt+0xce90>
  40f7f0:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f7f4:	mov	w1, #0x50e                 	// #1294
  40f7f8:	add	x2, x2, #0x207
  40f7fc:	b	40f7dc <ferror@plt+0xce6c>
  40f800:	mov	x19, x0
  40f804:	mov	x23, x2
  40f808:	mov	w0, w1
  40f80c:	bl	40f778 <ferror@plt+0xce08>
  40f810:	mov	w21, w0
  40f814:	ldr	x20, [x19]
  40f818:	ldr	w1, [x20, #32]
  40f81c:	ldr	w26, [x20, #40]
  40f820:	add	w1, w1, #0x1
  40f824:	str	w1, [x20, #32]
  40f828:	mov	w1, w26
  40f82c:	bl	40d740 <ferror@plt+0xadd0>
  40f830:	mov	w19, w0
  40f834:	ldr	x24, [x20]
  40f838:	ubfiz	x0, x19, #4, #32
  40f83c:	add	x2, x24, x0
  40f840:	ldr	w0, [x24, x0]
  40f844:	cbz	w0, 40f894 <ferror@plt+0xcf24>
  40f848:	cmp	w21, w0
  40f84c:	b.eq	40f894 <ferror@plt+0xcf24>  // b.none
  40f850:	mov	w1, w26
  40f854:	mov	w0, w21
  40f858:	ldr	x25, [x20, #8]
  40f85c:	bl	40d778 <ferror@plt+0xae08>
  40f860:	ldr	w1, [x20, #36]
  40f864:	add	w19, w19, w0
  40f868:	add	w1, w1, #0x1
  40f86c:	str	w1, [x20, #36]
  40f870:	cmp	x25, w19, uxtw
  40f874:	b.hi	40f87c <ferror@plt+0xcf0c>  // b.pmore
  40f878:	sub	w19, w19, w25
  40f87c:	ubfiz	x1, x19, #4, #32
  40f880:	add	x2, x24, x1
  40f884:	ldr	w1, [x24, x1]
  40f888:	cbz	w1, 40f894 <ferror@plt+0xcf24>
  40f88c:	cmp	w21, w1
  40f890:	b.ne	40f860 <ferror@plt+0xcef0>  // b.any
  40f894:	ldr	w0, [x2]
  40f898:	cbz	w0, 40f8cc <ferror@plt+0xcf5c>
  40f89c:	ldr	x0, [x2, #8]
  40f8a0:	ldr	w1, [x0]
  40f8a4:	ldr	x0, [x0, #8]
  40f8a8:	str	w1, [x23]
  40f8ac:	str	x0, [x22]
  40f8b0:	mov	w0, #0x1                   	// #1
  40f8b4:	ldp	x19, x20, [sp, #16]
  40f8b8:	ldp	x21, x22, [sp, #32]
  40f8bc:	ldp	x23, x24, [sp, #48]
  40f8c0:	ldp	x25, x26, [sp, #64]
  40f8c4:	ldp	x29, x30, [sp], #80
  40f8c8:	ret
  40f8cc:	mov	w0, #0x0                   	// #0
  40f8d0:	b	40f8b4 <ferror@plt+0xcf44>
  40f8d4:	stp	x29, x30, [sp, #-112]!
  40f8d8:	mov	x29, sp
  40f8dc:	stp	x19, x20, [sp, #16]
  40f8e0:	mov	x19, x0
  40f8e4:	stp	x21, x22, [sp, #32]
  40f8e8:	mov	x22, x2
  40f8ec:	stp	x23, x24, [sp, #48]
  40f8f0:	str	x25, [sp, #64]
  40f8f4:	mov	x25, x1
  40f8f8:	bl	40e870 <ferror@plt+0xbf00>
  40f8fc:	ldp	x2, x0, [x19, #40]
  40f900:	subs	x2, x2, x0
  40f904:	b.ne	40f924 <ferror@plt+0xcfb4>  // b.any
  40f908:	mov	w0, #0x0                   	// #0
  40f90c:	ldp	x19, x20, [sp, #16]
  40f910:	ldp	x21, x22, [sp, #32]
  40f914:	ldp	x23, x24, [sp, #48]
  40f918:	ldr	x25, [sp, #64]
  40f91c:	ldp	x29, x30, [sp], #112
  40f920:	ret
  40f924:	ldr	x23, [x19, #24]
  40f928:	mov	w1, #0xa                   	// #10
  40f92c:	add	x23, x23, x0
  40f930:	mov	x0, x23
  40f934:	bl	402800 <memchr@plt>
  40f938:	mov	x21, x0
  40f93c:	cbnz	x0, 40f9a8 <ferror@plt+0xd038>
  40f940:	mov	x0, x19
  40f944:	bl	40e870 <ferror@plt+0xbf00>
  40f948:	tst	w0, #0xff
  40f94c:	ldr	x20, [x19, #24]
  40f950:	ldr	x0, [x19, #40]
  40f954:	b.eq	40fa70 <ferror@plt+0xd100>  // b.none
  40f958:	ldr	x2, [x19, #48]
  40f95c:	mov	w1, #0xa                   	// #10
  40f960:	add	x23, x20, x2
  40f964:	sub	x2, x0, x2
  40f968:	mov	x0, x23
  40f96c:	bl	402800 <memchr@plt>
  40f970:	mov	x20, x0
  40f974:	cbz	x0, 40f940 <ferror@plt+0xcfd0>
  40f978:	add	x21, x0, #0x1
  40f97c:	strb	wzr, [x19, #72]
  40f980:	ldr	x0, [x19, #16]
  40f984:	bl	402970 <ferror@plt>
  40f988:	cbnz	w0, 40f908 <ferror@plt+0xcf98>
  40f98c:	cbnz	x20, 40f9b8 <ferror@plt+0xd048>
  40f990:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  40f994:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40f998:	add	x2, x2, #0x220
  40f99c:	add	x0, x0, #0xe4a
  40f9a0:	mov	w1, #0x241                 	// #577
  40f9a4:	bl	402980 <ferror@plt+0x10>
  40f9a8:	mov	x20, x0
  40f9ac:	add	x21, x0, #0x1
  40f9b0:	strb	wzr, [x19, #72]
  40f9b4:	b	40f980 <ferror@plt+0xd010>
  40f9b8:	ldp	x0, x4, [x19, #40]
  40f9bc:	sub	x24, x20, x23
  40f9c0:	cmp	x4, x0
  40f9c4:	b.cs	40f9cc <ferror@plt+0xd05c>  // b.hs, b.nlast
  40f9c8:	str	x23, [x25]
  40f9cc:	ldp	x1, x3, [x19, #56]
  40f9d0:	add	x1, x1, #0x1
  40f9d4:	str	x1, [x19, #56]
  40f9d8:	cmp	x1, x3
  40f9dc:	b.hi	40f9f4 <ferror@plt+0xd084>  // b.pmore
  40f9e0:	ldr	x0, [x19, #80]
  40f9e4:	cbz	x0, 40fa3c <ferror@plt+0xd0cc>
  40f9e8:	ldr	w0, [x0, #4]
  40f9ec:	cmp	w0, #0x63
  40f9f0:	b.ls	40fa18 <ferror@plt+0xd0a8>  // b.plast
  40f9f4:	cbz	x21, 40fa10 <ferror@plt+0xd0a0>
  40f9f8:	ldr	x0, [x19, #24]
  40f9fc:	sub	x21, x21, x0
  40fa00:	str	x21, [x19, #48]
  40fa04:	mov	w0, #0x1                   	// #1
  40fa08:	str	x24, [x22]
  40fa0c:	b	40f90c <ferror@plt+0xcf9c>
  40fa10:	ldr	x21, [x19, #40]
  40fa14:	b	40fa00 <ferror@plt+0xd090>
  40fa18:	cmp	x3, #0x64
  40fa1c:	b.ls	40fa48 <ferror@plt+0xd0d8>  // b.plast
  40fa20:	cbz	w0, 40fa50 <ferror@plt+0xd0e0>
  40fa24:	mov	x2, #0x64                  	// #100
  40fa28:	mul	x2, x1, x2
  40fa2c:	udiv	x2, x2, x3
  40fa30:	cmp	x2, w0, uxtw
  40fa34:	b.cc	40f9f4 <ferror@plt+0xd084>  // b.lo, b.ul, b.last
  40fa38:	b	40fa50 <ferror@plt+0xd0e0>
  40fa3c:	cmp	x3, #0x64
  40fa40:	b.hi	40fa50 <ferror@plt+0xd0e0>  // b.pmore
  40fa44:	mov	w0, #0x0                   	// #0
  40fa48:	cmp	x1, w0, uxtw
  40fa4c:	b.ls	40f9f4 <ferror@plt+0xd084>  // b.plast
  40fa50:	ldr	x0, [x19, #24]
  40fa54:	stp	x1, x4, [sp, #88]
  40fa58:	add	x1, sp, #0x58
  40fa5c:	sub	x20, x20, x0
  40fa60:	add	x0, x19, #0x50
  40fa64:	str	x20, [sp, #104]
  40fa68:	bl	4108fc <ferror@plt+0xdf8c>
  40fa6c:	b	40f9f4 <ferror@plt+0xd084>
  40fa70:	add	x20, x20, x0
  40fa74:	mov	w0, #0x1                   	// #1
  40fa78:	strb	w0, [x19, #72]
  40fa7c:	b	40f980 <ferror@plt+0xd010>
  40fa80:	stp	x29, x30, [sp, #-64]!
  40fa84:	mov	x29, sp
  40fa88:	stp	x19, x20, [sp, #16]
  40fa8c:	str	xzr, [sp, #40]
  40fa90:	cbnz	w1, 40faa8 <ferror@plt+0xd138>
  40fa94:	mov	x0, #0x0                   	// #0
  40fa98:	mov	x1, #0x0                   	// #0
  40fa9c:	ldp	x19, x20, [sp, #16]
  40faa0:	ldp	x29, x30, [sp], #64
  40faa4:	ret
  40faa8:	mov	w19, w1
  40faac:	bl	40eeb0 <ferror@plt+0xc540>
  40fab0:	mov	x20, x0
  40fab4:	cbz	x0, 40fa94 <ferror@plt+0xd124>
  40fab8:	ldr	x1, [x20, #56]
  40fabc:	sxtw	x0, w19
  40fac0:	cmp	x1, w19, sxtw
  40fac4:	b.cc	40fb04 <ferror@plt+0xd194>  // b.lo, b.ul, b.last
  40fac8:	ldr	x2, [x20, #80]
  40facc:	cbz	x2, 40fb00 <ferror@plt+0xd190>
  40fad0:	ldr	w4, [x2, #4]
  40fad4:	cbz	w4, 40fb00 <ferror@plt+0xd190>
  40fad8:	ldr	x3, [x20, #64]
  40fadc:	cmp	x3, #0x64
  40fae0:	b.ls	40fb30 <ferror@plt+0xd1c0>  // b.plast
  40fae4:	cmp	x0, x3
  40fae8:	b.hi	40fb7c <ferror@plt+0xd20c>  // b.pmore
  40faec:	mov	w1, #0x64                  	// #100
  40faf0:	smull	x19, w19, w1
  40faf4:	udiv	x19, x19, x3
  40faf8:	cmp	x19, w4, uxtw
  40fafc:	b.cc	40fb84 <ferror@plt+0xd214>  // b.lo, b.ul, b.last
  40fb00:	stp	xzr, xzr, [x20, #48]
  40fb04:	sub	x19, x0, #0x1
  40fb08:	ldr	x0, [x20, #56]
  40fb0c:	add	x2, sp, #0x38
  40fb10:	cmp	x0, x19
  40fb14:	b.cs	40fbb4 <ferror@plt+0xd244>  // b.hs, b.nlast
  40fb18:	add	x1, sp, #0x30
  40fb1c:	mov	x0, x20
  40fb20:	bl	40f8d4 <ferror@plt+0xcf64>
  40fb24:	tst	w0, #0xff
  40fb28:	b.ne	40fb08 <ferror@plt+0xd198>  // b.any
  40fb2c:	b	40fa94 <ferror@plt+0xd124>
  40fb30:	sub	w1, w19, #0x1
  40fb34:	sub	w19, w3, #0x1
  40fb38:	mov	w5, #0x18                  	// #24
  40fb3c:	mov	x4, #0x8                   	// #8
  40fb40:	cmp	x0, x3
  40fb44:	umaddl	x1, w1, w5, x4
  40fb48:	umaddl	x19, w19, w5, x4
  40fb4c:	add	x1, x2, x1
  40fb50:	add	x19, x2, x19
  40fb54:	csel	x1, x19, x1, hi  // hi = pmore
  40fb58:	ldr	x2, [x1]
  40fb5c:	cmp	x0, x2
  40fb60:	b.cs	40fbd8 <ferror@plt+0xd268>  // b.hs, b.nlast
  40fb64:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fb68:	add	x2, x2, #0x22e
  40fb6c:	mov	w1, #0x2b2                 	// #690
  40fb70:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40fb74:	add	x0, x0, #0xe4a
  40fb78:	bl	402980 <ferror@plt+0x10>
  40fb7c:	sub	w19, w4, #0x1
  40fb80:	b	40faf8 <ferror@plt+0xd188>
  40fb84:	mov	x3, #0x18                  	// #24
  40fb88:	madd	x1, x19, x3, x2
  40fb8c:	mov	w19, w19
  40fb90:	add	x1, x1, #0x8
  40fb94:	madd	x19, x19, x3, x2
  40fb98:	ldr	x2, [x19, #8]
  40fb9c:	cmp	x0, x2
  40fba0:	b.cs	40fbd8 <ferror@plt+0xd268>  // b.hs, b.nlast
  40fba4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fba8:	mov	w1, #0x2c1                 	// #705
  40fbac:	add	x2, x2, #0x22e
  40fbb0:	b	40fb70 <ferror@plt+0xd200>
  40fbb4:	add	x1, sp, #0x28
  40fbb8:	mov	x0, x20
  40fbbc:	bl	40f8d4 <ferror@plt+0xcf64>
  40fbc0:	tst	w0, #0xff
  40fbc4:	b.ne	40fbfc <ferror@plt+0xd28c>  // b.any
  40fbc8:	b	40fa94 <ferror@plt+0xd124>
  40fbcc:	sub	x2, x2, #0x1
  40fbd0:	stp	x3, x2, [x20, #48]
  40fbd4:	b	40fb04 <ferror@plt+0xd194>
  40fbd8:	ldp	x2, x3, [x1]
  40fbdc:	cmp	x0, x2
  40fbe0:	b.ne	40fbcc <ferror@plt+0xd25c>  // b.any
  40fbe4:	ldr	x0, [x20, #24]
  40fbe8:	add	x0, x0, x3
  40fbec:	str	x0, [sp, #40]
  40fbf0:	ldr	x0, [x1, #16]
  40fbf4:	sub	x3, x0, x3
  40fbf8:	str	x3, [sp, #56]
  40fbfc:	ldr	x0, [sp, #40]
  40fc00:	ldr	x1, [sp, #56]
  40fc04:	b	40fa9c <ferror@plt+0xd12c>
  40fc08:	stp	x29, x30, [sp, #-144]!
  40fc0c:	mov	w3, #0x2                   	// #2
  40fc10:	mov	w2, #0x0                   	// #0
  40fc14:	mov	x29, sp
  40fc18:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fc1c:	add	x1, x1, #0x244
  40fc20:	stp	x19, x20, [sp, #16]
  40fc24:	mov	x19, x0
  40fc28:	stp	x21, x22, [sp, #32]
  40fc2c:	stp	x23, x24, [sp, #48]
  40fc30:	mov	w23, #0x0                   	// #0
  40fc34:	stp	x25, x26, [sp, #64]
  40fc38:	adrp	x26, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fc3c:	stp	x27, x28, [sp, #80]
  40fc40:	bl	40ec3c <ferror@plt+0xc2cc>
  40fc44:	add	x0, x26, #0x328
  40fc48:	str	x0, [sp, #96]
  40fc4c:	adrp	x28, 478000 <_obstack_memory_used@@Base+0x3e198>
  40fc50:	add	x25, x28, #0x778
  40fc54:	ldr	x20, [x28, #1912]
  40fc58:	ldr	w0, [x20, #12]
  40fc5c:	cmp	w23, w0
  40fc60:	b.cs	40ff68 <ferror@plt+0xd5f8>  // b.hs, b.nlast
  40fc64:	sub	w0, w0, #0x1
  40fc68:	cmp	w23, w0
  40fc6c:	ldr	x27, [x20]
  40fc70:	b.ne	40fde4 <ferror@plt+0xd474>  // b.any
  40fc74:	ldr	w24, [x20, #56]
  40fc78:	mov	w22, #0x18                  	// #24
  40fc7c:	mov	w2, w23
  40fc80:	mov	x0, x19
  40fc84:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fc88:	smull	x22, w23, w22
  40fc8c:	add	x1, x1, #0x257
  40fc90:	bl	402940 <fprintf@plt>
  40fc94:	add	x20, x27, x22
  40fc98:	mov	w3, w24
  40fc9c:	mov	x0, x19
  40fca0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40fca4:	ldr	w2, [x27, x22]
  40fca8:	add	x1, x1, #0xe60
  40fcac:	bl	402940 <fprintf@plt>
  40fcb0:	ldr	x2, [x20, #8]
  40fcb4:	mov	x0, x19
  40fcb8:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fcbc:	add	x1, x1, #0x269
  40fcc0:	bl	402940 <fprintf@plt>
  40fcc4:	ldr	w2, [x20, #16]
  40fcc8:	mov	x0, x19
  40fccc:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fcd0:	add	x1, x1, #0x275
  40fcd4:	bl	402940 <fprintf@plt>
  40fcd8:	ldrb	w2, [x20, #6]
  40fcdc:	mov	x0, x19
  40fce0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fce4:	add	x1, x1, #0x28d
  40fce8:	bl	402940 <fprintf@plt>
  40fcec:	ldrb	w0, [x20, #7]
  40fcf0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fcf4:	ldrb	w2, [x20, #6]
  40fcf8:	add	x1, x1, #0x2aa
  40fcfc:	sub	w2, w2, w0
  40fd00:	mov	x0, x19
  40fd04:	bl	402940 <fprintf@plt>
  40fd08:	ldrb	w2, [x20, #7]
  40fd0c:	mov	x0, x19
  40fd10:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fd14:	add	x1, x1, #0x2bd
  40fd18:	bl	402940 <fprintf@plt>
  40fd1c:	ldrb	w2, [x20, #4]
  40fd20:	cmp	w2, #0x4
  40fd24:	b.hi	40fdf8 <ferror@plt+0xd488>  // b.pmore
  40fd28:	and	x1, x2, #0xff
  40fd2c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fd30:	add	x0, x0, #0x720
  40fd34:	ldr	x3, [x0, x1, lsl #3]
  40fd38:	mov	x0, x19
  40fd3c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fd40:	add	x1, x1, #0x2cf
  40fd44:	bl	402940 <fprintf@plt>
  40fd48:	ldr	x0, [x28, #1912]
  40fd4c:	mov	x1, x20
  40fd50:	bl	422ff4 <ferror@plt+0x20684>
  40fd54:	mov	x21, x0
  40fd58:	ldr	w2, [x20, #20]
  40fd5c:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fd60:	mov	x0, x19
  40fd64:	add	x1, x1, #0x2e2
  40fd68:	bl	402940 <fprintf@plt>
  40fd6c:	cbz	x21, 40fd9c <ferror@plt+0xd42c>
  40fd70:	ldr	x0, [x28, #1912]
  40fd74:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fd78:	add	x1, x1, #0x2ff
  40fd7c:	ldr	x2, [x0]
  40fd80:	mov	x0, x19
  40fd84:	sub	x21, x21, x2
  40fd88:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40fd8c:	movk	x2, #0xaaab
  40fd90:	asr	x21, x21, #3
  40fd94:	mul	w2, w21, w2
  40fd98:	bl	402940 <fprintf@plt>
  40fd9c:	mov	x1, x19
  40fda0:	mov	w0, #0xa                   	// #10
  40fda4:	bl	402400 <fputc@plt>
  40fda8:	ldr	w22, [x27, x22]
  40fdac:	mov	w27, #0x1                   	// #1
  40fdb0:	cmp	w22, w24
  40fdb4:	b.cs	40ff54 <ferror@plt+0xd5e4>  // b.hs, b.nlast
  40fdb8:	ldr	x0, [x25]
  40fdbc:	mov	w1, w22
  40fdc0:	bl	423aa0 <ferror@plt+0x21130>
  40fdc4:	tst	w0, #0xff
  40fdc8:	b.ne	40fe04 <ferror@plt+0xd494>  // b.any
  40fdcc:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fdd0:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  40fdd4:	add	x2, x2, #0x315
  40fdd8:	add	x0, x0, #0xe4a
  40fddc:	mov	w1, #0x454                 	// #1108
  40fde0:	bl	402980 <ferror@plt+0x10>
  40fde4:	add	w0, w23, #0x1
  40fde8:	mov	w1, #0x18                  	// #24
  40fdec:	smull	x0, w0, w1
  40fdf0:	ldr	w24, [x27, x0]
  40fdf4:	b	40fc78 <ferror@plt+0xd308>
  40fdf8:	adrp	x3, 44c000 <_obstack_memory_used@@Base+0x12198>
  40fdfc:	add	x3, x3, #0x23c
  40fe00:	b	40fd38 <ferror@plt+0xd3c8>
  40fe04:	ldr	x0, [x25]
  40fe08:	add	x8, sp, #0x70
  40fe0c:	mov	w2, w22
  40fe10:	mov	x1, x20
  40fe14:	bl	42433c <ferror@plt+0x219cc>
  40fe18:	ldr	w0, [sp, #124]
  40fe1c:	cbnz	w0, 40ff44 <ferror@plt+0xd5d4>
  40fe20:	ldr	x26, [sp, #112]
  40fe24:	ldr	w28, [sp, #120]
  40fe28:	mov	x0, x26
  40fe2c:	mov	w1, w28
  40fe30:	bl	40fa80 <ferror@plt+0xd110>
  40fe34:	mov	x6, x0
  40fe38:	mov	x21, x1
  40fe3c:	cbz	x0, 40ff54 <ferror@plt+0xd5e4>
  40fe40:	mov	w5, w1
  40fe44:	mov	w4, w22
  40fe48:	ldr	x1, [sp, #96]
  40fe4c:	mov	w3, w28
  40fe50:	mov	x2, x26
  40fe54:	mov	x0, x19
  40fe58:	bl	402940 <fprintf@plt>
  40fe5c:	ldrb	w0, [x20, #6]
  40fe60:	lsl	w0, w27, w0
  40fe64:	sub	w0, w0, #0x1
  40fe68:	sxtw	x4, w0
  40fe6c:	cmp	x21, w0, sxtw
  40fe70:	b.cs	40fe78 <ferror@plt+0xd508>  // b.hs, b.nlast
  40fe74:	add	x4, x21, #0x1
  40fe78:	mov	w0, w28
  40fe7c:	str	x4, [sp, #104]
  40fe80:	bl	405fe0 <ferror@plt+0x3670>
  40fe84:	mov	w21, w0
  40fe88:	mov	w0, w22
  40fe8c:	bl	405fe0 <ferror@plt+0x3670>
  40fe90:	mov	w28, w0
  40fe94:	mov	x0, x26
  40fe98:	bl	402330 <strlen@plt>
  40fe9c:	add	w0, w0, #0x6
  40fea0:	cmp	w21, #0x3
  40fea4:	mov	w1, #0x3                   	// #3
  40fea8:	csel	w21, w21, w1, ge  // ge = tcont
  40feac:	cmp	w28, #0x5
  40feb0:	ldr	x4, [sp, #104]
  40feb4:	mov	w2, #0x5                   	// #5
  40feb8:	csel	w1, w28, w2, ge  // ge = tcont
  40febc:	cmp	w24, #0x3e7
  40fec0:	add	w21, w21, w1
  40fec4:	mov	w28, w4
  40fec8:	add	w21, w21, w0
  40fecc:	b.ls	40fee8 <ferror@plt+0xd578>  // b.plast
  40fed0:	mov	w3, w22
  40fed4:	mov	x2, x20
  40fed8:	mov	w1, w21
  40fedc:	mov	x0, x19
  40fee0:	mov	w5, #0x3e8                 	// #1000
  40fee4:	bl	40eaa0 <ferror@plt+0xc130>
  40fee8:	cmp	w24, #0x63
  40feec:	b.ls	40ff0c <ferror@plt+0xd59c>  // b.plast
  40fef0:	mov	w4, w28
  40fef4:	mov	w3, w22
  40fef8:	mov	x2, x20
  40fefc:	mov	w1, w21
  40ff00:	mov	x0, x19
  40ff04:	mov	w5, #0x64                  	// #100
  40ff08:	bl	40eaa0 <ferror@plt+0xc130>
  40ff0c:	mov	w4, w28
  40ff10:	mov	w3, w22
  40ff14:	mov	x2, x20
  40ff18:	mov	w1, w21
  40ff1c:	mov	x0, x19
  40ff20:	mov	w5, #0xa                   	// #10
  40ff24:	bl	40eaa0 <ferror@plt+0xc130>
  40ff28:	mov	w4, w28
  40ff2c:	mov	w3, w22
  40ff30:	mov	x2, x20
  40ff34:	mov	w1, w21
  40ff38:	mov	x0, x19
  40ff3c:	mov	w5, #0x1                   	// #1
  40ff40:	bl	40eaa0 <ferror@plt+0xc130>
  40ff44:	ldrb	w0, [x20, #7]
  40ff48:	lsl	w0, w27, w0
  40ff4c:	add	w22, w22, w0
  40ff50:	b	40fdb0 <ferror@plt+0xd440>
  40ff54:	mov	x1, x19
  40ff58:	mov	w0, #0xa                   	// #10
  40ff5c:	add	w23, w23, #0x1
  40ff60:	bl	402400 <fputc@plt>
  40ff64:	b	40fc4c <ferror@plt+0xd2dc>
  40ff68:	mov	x0, x20
  40ff6c:	bl	4107d4 <ferror@plt+0xde64>
  40ff70:	ldr	w2, [x20, #56]
  40ff74:	mov	w3, w0
  40ff78:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  40ff7c:	adrp	x24, 44c000 <_obstack_memory_used@@Base+0x12198>
  40ff80:	adrp	x26, 44c000 <_obstack_memory_used@@Base+0x12198>
  40ff84:	add	x1, x1, #0x33d
  40ff88:	mov	x0, x19
  40ff8c:	add	x24, x24, #0x353
  40ff90:	add	x26, x26, #0x3bb
  40ff94:	mov	w23, #0x0                   	// #0
  40ff98:	bl	40ec3c <ferror@plt+0xc2cc>
  40ff9c:	ldr	x0, [x25]
  40ffa0:	ldr	w20, [x0, #36]
  40ffa4:	cmp	w23, w20
  40ffa8:	b.cs	41010c <ferror@plt+0xd79c>  // b.hs, b.nlast
  40ffac:	sub	w20, w20, #0x1
  40ffb0:	sub	w20, w20, w23
  40ffb4:	ldr	x27, [x0, #24]
  40ffb8:	sbfiz	x21, x20, #5, #32
  40ffbc:	add	x22, x27, x21
  40ffc0:	mov	x0, x22
  40ffc4:	bl	4236d8 <ferror@plt+0x20d68>
  40ffc8:	mov	w2, w20
  40ffcc:	mov	x3, x0
  40ffd0:	ldr	w4, [x22, #4]
  40ffd4:	mov	x1, x24
  40ffd8:	mov	x0, x19
  40ffdc:	mov	w20, #0x0                   	// #0
  40ffe0:	bl	402940 <fprintf@plt>
  40ffe4:	ldr	w2, [x27, x21]
  40ffe8:	mov	x0, x19
  40ffec:	ldr	w3, [x22, #4]
  40fff0:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  40fff4:	add	x1, x1, #0xe60
  40fff8:	add	w3, w2, w3
  40fffc:	bl	402940 <fprintf@plt>
  410000:	ldr	w2, [x22, #24]
  410004:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  410008:	add	x1, x1, #0x36d
  41000c:	mov	w0, w2
  410010:	bl	405474 <ferror@plt+0x2b04>
  410014:	ldr	w2, [x27, x21]
  410018:	adrp	x27, 44c000 <_obstack_memory_used@@Base+0x12198>
  41001c:	add	x27, x27, #0x42a
  410020:	mov	x0, x19
  410024:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  410028:	add	x1, x1, #0x38c
  41002c:	bl	402940 <fprintf@plt>
  410030:	mov	x1, x19
  410034:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  410038:	add	x0, x0, #0x3a7
  41003c:	bl	402340 <fputs@plt>
  410040:	ldr	w0, [x22, #4]
  410044:	cmp	w20, w0
  410048:	b.cs	4100f8 <ferror@plt+0xd788>  // b.hs, b.nlast
  41004c:	lsl	w0, w20, #1
  410050:	ubfiz	x2, x20, #3, #31
  410054:	ldr	x1, [x22, #16]
  410058:	add	w0, w0, #0x1
  41005c:	ldr	w21, [x1, x2]
  410060:	mov	w2, w20
  410064:	ldr	w28, [x1, x0, lsl #2]
  410068:	mov	x1, x26
  41006c:	mov	w3, w21
  410070:	mov	x0, x19
  410074:	mov	w4, w28
  410078:	bl	402940 <fprintf@plt>
  41007c:	cmp	w21, w28
  410080:	b.ne	4100cc <ferror@plt+0xd75c>  // b.any
  410084:	ldr	w3, [x22]
  410088:	cmp	w21, w3
  41008c:	b.cs	4100ac <ferror@plt+0xd73c>  // b.hs, b.nlast
  410090:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  410094:	mov	w3, w21
  410098:	mov	w2, w20
  41009c:	add	x1, x1, #0x3cb
  4100a0:	mov	w0, w21
  4100a4:	bl	405474 <ferror@plt+0x2b04>
  4100a8:	b	4100c4 <ferror@plt+0xd754>
  4100ac:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  4100b0:	sub	w3, w21, w3
  4100b4:	mov	w2, w21
  4100b8:	add	x1, x1, #0x3f7
  4100bc:	mov	x0, x19
  4100c0:	bl	402940 <fprintf@plt>
  4100c4:	add	w20, w20, #0x1
  4100c8:	b	410040 <ferror@plt+0xd6d0>
  4100cc:	mov	w3, w21
  4100d0:	mov	w2, w20
  4100d4:	mov	x1, x27
  4100d8:	mov	w0, w21
  4100dc:	bl	405474 <ferror@plt+0x2b04>
  4100e0:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  4100e4:	mov	w3, w28
  4100e8:	add	x1, x0, #0x448
  4100ec:	mov	w2, w20
  4100f0:	mov	w0, w21
  4100f4:	b	4100a4 <ferror@plt+0xd734>
  4100f8:	mov	x1, x19
  4100fc:	mov	w0, #0xa                   	// #10
  410100:	add	w23, w23, #0x1
  410104:	bl	402400 <fputc@plt>
  410108:	b	40ff9c <ferror@plt+0xd62c>
  41010c:	mov	x0, x19
  410110:	mov	w3, #0x80000000            	// #-2147483648
  410114:	mov	w2, #0x7fffffff            	// #2147483647
  410118:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  41011c:	add	x1, x1, #0x466
  410120:	bl	40ec3c <ferror@plt+0xc2cc>
  410124:	mov	x0, x19
  410128:	mov	w3, #0xffffffff            	// #-1
  41012c:	ldp	x19, x20, [sp, #16]
  410130:	mov	w2, #0x80000000            	// #-2147483648
  410134:	ldp	x21, x22, [sp, #32]
  410138:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  41013c:	ldp	x23, x24, [sp, #48]
  410140:	add	x1, x1, #0x475
  410144:	ldp	x25, x26, [sp, #64]
  410148:	ldp	x27, x28, [sp, #80]
  41014c:	ldp	x29, x30, [sp], #144
  410150:	b	40ec3c <ferror@plt+0xc2cc>
  410154:	stp	x29, x30, [sp, #-272]!
  410158:	mov	x29, sp
  41015c:	stp	x19, x20, [sp, #16]
  410160:	stp	x21, x22, [sp, #32]
  410164:	stp	x23, x24, [sp, #48]
  410168:	stp	x25, x26, [sp, #64]
  41016c:	stp	x27, x28, [sp, #80]
  410170:	stp	w4, w5, [sp, #104]
  410174:	str	w3, [sp, #120]
  410178:	cbnz	x7, 410194 <ferror@plt+0xd824>
  41017c:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  410180:	add	x2, x2, #0x688
  410184:	mov	w1, #0x5fa                 	// #1530
  410188:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  41018c:	add	x0, x0, #0xe4a
  410190:	bl	402980 <ferror@plt+0x10>
  410194:	mov	w19, w2
  410198:	mov	x22, x0
  41019c:	mov	x20, x1
  4101a0:	mov	w21, w6
  4101a4:	mov	x26, x7
  4101a8:	add	x0, sp, #0xb0
  4101ac:	bl	412214 <ferror@plt+0xf8a4>
  4101b0:	str	w19, [sp, #128]
  4101b4:	cbnz	x22, 4101c8 <ferror@plt+0xd858>
  4101b8:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4101bc:	mov	w1, #0x551                 	// #1361
  4101c0:	add	x2, x2, #0x6a3
  4101c4:	b	410188 <ferror@plt+0xd818>
  4101c8:	cbz	w19, 410624 <ferror@plt+0xdcb4>
  4101cc:	mov	x0, x22
  4101d0:	bl	41865c <ferror@plt+0x15cec>
  4101d4:	ldrb	w0, [x0, #45]
  4101d8:	cmp	w0, #0x2
  4101dc:	b.ne	410630 <ferror@plt+0xdcc0>  // b.any
  4101e0:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  4101e4:	ldr	x0, [x19, #1912]
  4101e8:	ldrb	w0, [x0, #116]
  4101ec:	cbnz	w0, 41063c <ferror@plt+0xdccc>
  4101f0:	mov	w0, #0x1                   	// #1
  4101f4:	str	w0, [sp, #132]
  4101f8:	add	x0, sp, #0x80
  4101fc:	str	x0, [sp, #136]
  410200:	cbz	x20, 410218 <ferror@plt+0xd8a8>
  410204:	ldr	w1, [sp, #128]
  410208:	add	x3, sp, #0x88
  41020c:	add	x2, sp, #0x84
  410210:	mov	x0, x20
  410214:	bl	40f7b4 <ferror@plt+0xce44>
  410218:	ldrsw	x1, [sp, #132]
  41021c:	str	xzr, [sp, #144]
  410220:	cbz	w1, 410230 <ferror@plt+0xd8c0>
  410224:	add	x0, sp, #0x90
  410228:	mov	w2, #0x1                   	// #1
  41022c:	bl	410960 <ferror@plt+0xdff0>
  410230:	ldrsw	x1, [sp, #132]
  410234:	str	xzr, [sp, #152]
  410238:	cbz	w1, 410248 <ferror@plt+0xd8d8>
  41023c:	add	x0, sp, #0x98
  410240:	mov	w2, #0x1                   	// #1
  410244:	bl	410a50 <ferror@plt+0xe0e0>
  410248:	mov	x24, #0x0                   	// #0
  41024c:	ldr	w3, [sp, #132]
  410250:	cmp	w3, w24
  410254:	b.le	410538 <ferror@plt+0xdbc8>
  410258:	ldr	x0, [sp, #136]
  41025c:	ldr	w1, [x0, x24, lsl #2]
  410260:	ldr	x0, [x19, #1912]
  410264:	bl	423a00 <ferror@plt+0x21090>
  410268:	mov	x20, x0
  41026c:	lsr	x25, x0, #32
  410270:	ldr	x0, [x19, #1912]
  410274:	bl	4107d4 <ferror@plt+0xde64>
  410278:	cmp	w0, w20
  41027c:	b.hi	4102d4 <ferror@plt+0xd964>  // b.pmore
  410280:	cmp	w20, w25
  410284:	b.eq	4102e8 <ferror@plt+0xd978>  // b.none
  410288:	adrp	x19, 453000 <_obstack_memory_used@@Base+0x19198>
  41028c:	add	x19, x19, #0xed4
  410290:	ldr	x0, [sp, #152]
  410294:	cbz	x0, 4102a4 <ferror@plt+0xd934>
  410298:	ldrsb	w1, [x0, #3]
  41029c:	tbz	w1, #31, 41056c <ferror@plt+0xdbfc>
  4102a0:	str	wzr, [x0, #4]
  4102a4:	mov	w20, #0x0                   	// #0
  4102a8:	ldr	x0, [sp, #144]
  4102ac:	cbz	x0, 410580 <ferror@plt+0xdc10>
  4102b0:	ldr	w1, [x0, #4]
  4102b4:	cmp	w1, w20
  4102b8:	b.ls	410574 <ferror@plt+0xdc04>  // b.plast
  4102bc:	ubfiz	x1, x20, #4, #32
  4102c0:	add	w20, w20, #0x1
  4102c4:	add	x0, x0, x1
  4102c8:	ldr	x0, [x0, #16]
  4102cc:	bl	402730 <free@plt>
  4102d0:	b	4102a8 <ferror@plt+0xd938>
  4102d4:	mov	w0, #0x5fffffff            	// #1610612735
  4102d8:	cmp	w20, w0
  4102dc:	b.hi	4104c0 <ferror@plt+0xdb50>  // b.pmore
  4102e0:	cmp	w25, w0
  4102e4:	b.hi	4104cc <ferror@plt+0xdb5c>  // b.pmore
  4102e8:	add	x8, sp, #0xd0
  4102ec:	mov	w0, w20
  4102f0:	mov	w1, #0x1                   	// #1
  4102f4:	bl	40f034 <ferror@plt+0xc6c4>
  4102f8:	mov	w0, w25
  4102fc:	add	x8, sp, #0xf0
  410300:	ldp	w27, w23, [sp, #216]
  410304:	mov	w1, #0x2                   	// #2
  410308:	ldr	x28, [sp, #208]
  41030c:	bl	40f034 <ferror@plt+0xc6c4>
  410310:	ldr	x0, [sp, #240]
  410314:	ldr	w3, [sp, #252]
  410318:	cmp	x28, x0
  41031c:	b.ne	4104d8 <ferror@plt+0xdb68>  // b.any
  410320:	ldr	w0, [sp, #248]
  410324:	cmp	w27, w0
  410328:	b.ne	4104e4 <ferror@plt+0xdb74>  // b.any
  41032c:	str	w3, [sp, #112]
  410330:	cmp	w23, w3
  410334:	b.gt	4104f0 <ferror@plt+0xdb80>
  410338:	mov	w1, w27
  41033c:	mov	x0, x28
  410340:	bl	40fa80 <ferror@plt+0xd110>
  410344:	mov	x4, x1
  410348:	cbz	x0, 4104fc <ferror@plt+0xdb8c>
  41034c:	ldr	w3, [sp, #112]
  410350:	sub	w2, w23, #0x1
  410354:	sub	w3, w3, w23
  410358:	sxtw	x5, w2
  41035c:	add	w3, w3, #0x1
  410360:	add	x6, x5, w3, sxtw
  410364:	sxtw	x1, w3
  410368:	cmp	x4, x6
  41036c:	b.cc	410508 <ferror@plt+0xdb98>  // b.lo, b.ul, b.last
  410370:	tbz	w2, #31, 41038c <ferror@plt+0xda1c>
  410374:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  410378:	add	x2, x2, #0xa58
  41037c:	mov	w1, #0x44                  	// #68
  410380:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  410384:	add	x0, x0, #0xa60
  410388:	b	410190 <ferror@plt+0xd820>
  41038c:	cmp	w2, w4
  410390:	b.lt	4103a4 <ferror@plt+0xda34>  // b.tstop
  410394:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  410398:	mov	w1, #0x45                  	// #69
  41039c:	add	x2, x2, #0xa58
  4103a0:	b	410380 <ferror@plt+0xda10>
  4103a4:	add	w2, w3, w2
  4103a8:	cmp	w4, w2
  4103ac:	b.ge	4103c0 <ferror@plt+0xda50>  // b.tcont
  4103b0:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  4103b4:	mov	w1, #0x47                  	// #71
  4103b8:	add	x2, x2, #0xa58
  4103bc:	b	410380 <ferror@plt+0xda10>
  4103c0:	add	x0, x0, x5
  4103c4:	str	w3, [sp, #124]
  4103c8:	bl	43a0dc <_obstack_memory_used@@Base+0x274>
  4103cc:	mov	x4, x0
  4103d0:	mov	w2, #0x0                   	// #0
  4103d4:	mov	w1, #0x1                   	// #1
  4103d8:	add	x0, sp, #0x90
  4103dc:	str	x4, [sp, #112]
  4103e0:	bl	410960 <ferror@plt+0xdff0>
  4103e4:	ldr	x2, [sp, #144]
  4103e8:	ldr	w3, [sp, #124]
  4103ec:	ldr	x4, [sp, #112]
  4103f0:	ldr	w1, [x2, #4]
  4103f4:	add	w0, w1, #0x1
  4103f8:	str	w0, [x2, #4]
  4103fc:	mov	x0, #0x8                   	// #8
  410400:	add	x1, x0, w1, uxtw #4
  410404:	add	x0, x2, x1
  410408:	str	w3, [x2, x1]
  41040c:	add	x3, sp, #0xa0
  410410:	str	x4, [x0, #8]
  410414:	mov	w1, w20
  410418:	ldr	x0, [x19, #1912]
  41041c:	mov	w2, #0x1                   	// #1
  410420:	bl	423cf4 <ferror@plt+0x21384>
  410424:	ldr	x0, [x19, #1912]
  410428:	add	x3, sp, #0xa8
  41042c:	mov	w1, w25
  410430:	mov	w2, #0x1                   	// #1
  410434:	bl	423cf4 <ferror@plt+0x21384>
  410438:	ldr	x0, [sp, #160]
  41043c:	cbz	x0, 410514 <ferror@plt+0xdba4>
  410440:	ldr	x1, [sp, #168]
  410444:	cbz	x1, 410514 <ferror@plt+0xdba4>
  410448:	cmp	x0, x1
  41044c:	ldr	x2, [x0, #8]
  410450:	b.eq	410460 <ferror@plt+0xdaf0>  // b.none
  410454:	ldr	x0, [x1, #8]
  410458:	cmp	x0, x2
  41045c:	b.ne	410520 <ferror@plt+0xdbb0>  // b.any
  410460:	add	x24, x24, #0x1
  410464:	cmp	x28, x2
  410468:	b.ne	41052c <ferror@plt+0xdbbc>  // b.any
  41046c:	ldr	x0, [x19, #1912]
  410470:	mov	w3, w23
  410474:	mov	w2, w27
  410478:	bl	4235e8 <ferror@plt+0x20c78>
  41047c:	mov	w1, w0
  410480:	ldr	x2, [x19, #1912]
  410484:	add	x0, sp, #0xc0
  410488:	bl	41258c <ferror@plt+0xfc1c>
  41048c:	mov	w2, #0x0                   	// #0
  410490:	mov	w1, #0x1                   	// #1
  410494:	add	x0, sp, #0x98
  410498:	bl	410a50 <ferror@plt+0xe0e0>
  41049c:	ldr	x0, [sp, #152]
  4104a0:	ldr	w1, [x0, #4]
  4104a4:	add	w2, w1, #0x1
  4104a8:	str	w2, [x0, #4]
  4104ac:	ubfiz	x1, x1, #4, #32
  4104b0:	add	x0, x0, x1
  4104b4:	ldp	x2, x3, [sp, #192]
  4104b8:	stp	x2, x3, [x0, #8]
  4104bc:	b	41024c <ferror@plt+0xd8dc>
  4104c0:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  4104c4:	add	x19, x19, #0x4f5
  4104c8:	b	410290 <ferror@plt+0xd920>
  4104cc:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  4104d0:	add	x19, x19, #0x528
  4104d4:	b	410290 <ferror@plt+0xd920>
  4104d8:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  4104dc:	add	x19, x19, #0x559
  4104e0:	b	410290 <ferror@plt+0xd920>
  4104e4:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  4104e8:	add	x19, x19, #0x580
  4104ec:	b	410290 <ferror@plt+0xd920>
  4104f0:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  4104f4:	add	x19, x19, #0x5a7
  4104f8:	b	410290 <ferror@plt+0xd920>
  4104fc:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  410500:	add	x19, x19, #0x4a2
  410504:	b	410290 <ferror@plt+0xd920>
  410508:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  41050c:	add	x19, x19, #0x5c4
  410510:	b	410290 <ferror@plt+0xd920>
  410514:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  410518:	add	x19, x19, #0x486
  41051c:	b	410290 <ferror@plt+0xd920>
  410520:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  410524:	add	x19, x19, #0x4bd
  410528:	b	410290 <ferror@plt+0xd920>
  41052c:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  410530:	add	x19, x19, #0x5dc
  410534:	b	410290 <ferror@plt+0xd920>
  410538:	ldr	x1, [sp, #144]
  41053c:	cbz	x1, 410544 <ferror@plt+0xdbd4>
  410540:	add	x1, x1, #0x8
  410544:	ldr	x2, [sp, #152]
  410548:	cbz	x2, 410550 <ferror@plt+0xdbe0>
  41054c:	add	x2, x2, #0x8
  410550:	ldr	w5, [sp, #120]
  410554:	add	x4, sp, #0xb0
  410558:	sxtw	x3, w3
  41055c:	mov	x0, x22
  410560:	bl	415c44 <ferror@plt+0x132d4>
  410564:	mov	x19, x0
  410568:	b	410290 <ferror@plt+0xd920>
  41056c:	bl	402730 <free@plt>
  410570:	b	4102a4 <ferror@plt+0xd934>
  410574:	ldrsb	w1, [x0, #3]
  410578:	tbz	w1, #31, 4105f8 <ferror@plt+0xdc88>
  41057c:	str	wzr, [x0, #4]
  410580:	cbnz	x19, 4105d0 <ferror@plt+0xdc60>
  410584:	ldr	w1, [sp, #104]
  410588:	ldr	w0, [sp, #184]
  41058c:	cmp	w1, w0
  410590:	b.ge	410600 <ferror@plt+0xdc90>  // b.tcont
  410594:	ldr	w1, [sp, #108]
  410598:	cmp	w1, w0
  41059c:	b.ge	41060c <ferror@plt+0xdc9c>  // b.tcont
  4105a0:	cmp	w21, w0
  4105a4:	b.ge	410618 <ferror@plt+0xdca8>  // b.tcont
  4105a8:	ldr	x0, [sp, #176]
  4105ac:	sbfiz	x5, x1, #3, #32
  4105b0:	ldr	w1, [sp, #104]
  4105b4:	add	x21, x0, w21, sxtw #3
  4105b8:	sbfiz	x4, x1, #3, #32
  4105bc:	ldr	w1, [x0, x5]
  4105c0:	ldr	w2, [x21, #4]
  4105c4:	ldr	w0, [x0, x4]
  4105c8:	bl	40f0cc <ferror@plt+0xc75c>
  4105cc:	str	w0, [x26]
  4105d0:	add	x0, sp, #0xb0
  4105d4:	bl	412244 <ferror@plt+0xf8d4>
  4105d8:	mov	x0, x19
  4105dc:	ldp	x19, x20, [sp, #16]
  4105e0:	ldp	x21, x22, [sp, #32]
  4105e4:	ldp	x23, x24, [sp, #48]
  4105e8:	ldp	x25, x26, [sp, #64]
  4105ec:	ldp	x27, x28, [sp, #80]
  4105f0:	ldp	x29, x30, [sp], #272
  4105f4:	ret
  4105f8:	bl	402730 <free@plt>
  4105fc:	b	410580 <ferror@plt+0xdc10>
  410600:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  410604:	add	x19, x19, #0x605
  410608:	b	4105d0 <ferror@plt+0xdc60>
  41060c:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  410610:	add	x19, x19, #0x61c
  410614:	b	4105d0 <ferror@plt+0xdc60>
  410618:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  41061c:	add	x19, x19, #0x633
  410620:	b	4105d0 <ferror@plt+0xdc60>
  410624:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  410628:	add	x19, x19, #0x648
  41062c:	b	4105d0 <ferror@plt+0xdc60>
  410630:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  410634:	add	x19, x19, #0x659
  410638:	b	4105d0 <ferror@plt+0xdc60>
  41063c:	adrp	x19, 44c000 <_obstack_memory_used@@Base+0x12198>
  410640:	add	x19, x19, #0x674
  410644:	b	4105d0 <ferror@plt+0xdc60>
  410648:	stp	x29, x30, [sp, #-64]!
  41064c:	cmp	w1, #0x1
  410650:	mov	x29, sp
  410654:	stp	x19, x20, [sp, #16]
  410658:	stp	x21, x22, [sp, #32]
  41065c:	stp	x23, x24, [sp, #48]
  410660:	b.gt	41067c <ferror@plt+0xdd0c>
  410664:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  410668:	add	x2, x2, #0x6c0
  41066c:	mov	w1, #0x4f6                 	// #1270
  410670:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  410674:	add	x0, x0, #0xe4a
  410678:	bl	402980 <ferror@plt+0x10>
  41067c:	mov	x19, x2
  410680:	cbnz	x2, 410694 <ferror@plt+0xdd24>
  410684:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  410688:	mov	w1, #0x4f7                 	// #1271
  41068c:	add	x2, x2, #0x6c0
  410690:	b	410670 <ferror@plt+0xdd00>
  410694:	mov	x22, x0
  410698:	ldr	w0, [x2]
  41069c:	mov	w20, w1
  4106a0:	bl	40f778 <ferror@plt+0xce08>
  4106a4:	mov	w21, w0
  4106a8:	mov	x3, #0x1                   	// #1
  4106ac:	mov	x2, #0x0                   	// #0
  4106b0:	mov	x1, #0x0                   	// #0
  4106b4:	mov	x0, #0x10                  	// #16
  4106b8:	bl	403dc0 <ferror@plt+0x1450>
  4106bc:	mov	x23, x0
  4106c0:	mov	w1, w20
  4106c4:	mov	x2, x19
  4106c8:	bl	40f688 <ferror@plt+0xcd18>
  4106cc:	ldr	x20, [x22]
  4106d0:	ldp	x1, x0, [x20, #8]
  4106d4:	add	x1, x1, x1, lsl #1
  4106d8:	cmp	x1, x0, lsl #2
  4106dc:	b.hi	4106e8 <ferror@plt+0xdd78>  // b.pmore
  4106e0:	mov	x0, x20
  4106e4:	bl	410b40 <ferror@plt+0xe1d0>
  4106e8:	ldr	w0, [x20, #32]
  4106ec:	ldr	w24, [x20, #40]
  4106f0:	add	w0, w0, #0x1
  4106f4:	str	w0, [x20, #32]
  4106f8:	mov	w1, w24
  4106fc:	mov	w0, w21
  410700:	bl	40d740 <ferror@plt+0xadd0>
  410704:	mov	w19, w0
  410708:	ldr	x22, [x20]
  41070c:	ubfiz	x0, x19, #4, #32
  410710:	add	x2, x22, x0
  410714:	ldr	w0, [x22, x0]
  410718:	cbz	w0, 41078c <ferror@plt+0xde1c>
  41071c:	cmp	w21, w0
  410720:	b.eq	410768 <ferror@plt+0xddf8>  // b.none
  410724:	mov	w1, w24
  410728:	mov	w0, w21
  41072c:	bl	40d778 <ferror@plt+0xae08>
  410730:	ldr	x3, [x20, #8]
  410734:	add	w19, w19, w0
  410738:	ldr	w1, [x20, #36]
  41073c:	cmp	x3, w19, uxtw
  410740:	add	w1, w1, #0x1
  410744:	str	w1, [x20, #36]
  410748:	b.hi	410750 <ferror@plt+0xdde0>  // b.pmore
  41074c:	sub	w19, w19, w3
  410750:	ubfiz	x1, x19, #4, #32
  410754:	add	x2, x22, x1
  410758:	ldr	w1, [x22, x1]
  41075c:	cbz	w1, 41078c <ferror@plt+0xde1c>
  410760:	cmp	w21, w1
  410764:	b.ne	410734 <ferror@plt+0xddc4>  // b.any
  410768:	ldr	w0, [x2]
  41076c:	cbnz	w0, 410774 <ferror@plt+0xde04>
  410770:	str	w21, [x2]
  410774:	ldp	x19, x20, [sp, #16]
  410778:	ldp	x21, x22, [sp, #32]
  41077c:	str	x23, [x2, #8]
  410780:	ldp	x23, x24, [sp, #48]
  410784:	ldp	x29, x30, [sp], #64
  410788:	ret
  41078c:	ldr	x0, [x20, #16]
  410790:	ubfiz	x19, x19, #4, #32
  410794:	add	x2, x22, x19
  410798:	add	x0, x0, #0x1
  41079c:	str	x0, [x20, #16]
  4107a0:	b	410768 <ferror@plt+0xddf8>
  4107a4:	ldr	x2, [x0, #8]
  4107a8:	mov	x1, x0
  4107ac:	sub	x0, x2, #0x1
  4107b0:	cmp	x2, x0
  4107b4:	b.ls	4107c0 <ferror@plt+0xde50>  // b.plast
  4107b8:	sub	x0, x0, #0x1
  4107bc:	b	4107b0 <ferror@plt+0xde40>
  4107c0:	ldr	x0, [x1]
  4107c4:	ldrb	w1, [x1, #44]
  4107c8:	cbnz	w1, 4107d0 <ferror@plt+0xde60>
  4107cc:	b	402730 <free@plt>
  4107d0:	b	403e18 <ferror@plt+0x14a8>
  4107d4:	ldr	w1, [x0, #36]
  4107d8:	cbz	w1, 4107f0 <ferror@plt+0xde80>
  4107dc:	sub	w1, w1, #0x1
  4107e0:	ldr	x0, [x0, #24]
  4107e4:	sbfiz	x1, x1, #5, #32
  4107e8:	ldr	w0, [x0, x1]
  4107ec:	ret
  4107f0:	mov	w0, #0x80000000            	// #-2147483648
  4107f4:	b	4107ec <ferror@plt+0xde7c>
  4107f8:	stp	x29, x30, [sp, #-64]!
  4107fc:	and	w2, w2, #0xff
  410800:	mov	x29, sp
  410804:	stp	x23, x24, [sp, #48]
  410808:	ldr	x23, [x0]
  41080c:	stp	x19, x20, [sp, #16]
  410810:	mov	x20, x0
  410814:	stp	x21, x22, [sp, #32]
  410818:	cbz	x23, 410838 <ferror@plt+0xdec8>
  41081c:	ldp	w0, w21, [x23]
  410820:	ubfx	x0, x0, #0, #31
  410824:	sub	w0, w0, w21
  410828:	cmp	w1, w0
  41082c:	b.hi	410848 <ferror@plt+0xded8>  // b.pmore
  410830:	mov	w19, #0x0                   	// #0
  410834:	b	4108dc <ferror@plt+0xdf6c>
  410838:	mov	w19, #0x0                   	// #0
  41083c:	cbz	w1, 4108dc <ferror@plt+0xdf6c>
  410840:	mov	w21, #0x0                   	// #0
  410844:	b	41085c <ferror@plt+0xdeec>
  410848:	ldrsb	w0, [x23, #3]
  41084c:	tbz	w0, #31, 4108c8 <ferror@plt+0xdf58>
  410850:	add	w1, w1, w21
  410854:	mov	w19, #0x1                   	// #1
  410858:	str	xzr, [x20]
  41085c:	ldr	x0, [x20]
  410860:	bl	409178 <ferror@plt+0x6808>
  410864:	mov	w22, w0
  410868:	mov	w1, #0x18                  	// #24
  41086c:	mov	x0, #0x8                   	// #8
  410870:	umaddl	x1, w22, w1, x0
  410874:	ldr	x0, [x20]
  410878:	cbz	x0, 4108d0 <ferror@plt+0xdf60>
  41087c:	ldr	w24, [x0, #4]
  410880:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  410884:	str	x0, [x20]
  410888:	and	w22, w22, #0x7fffffff
  41088c:	stp	w22, w24, [x0]
  410890:	mov	x1, x0
  410894:	cbz	w19, 4108f4 <ferror@plt+0xdf84>
  410898:	mov	w2, w21
  41089c:	mov	x0, #0x8                   	// #8
  4108a0:	cbz	w2, 4108d8 <ferror@plt+0xdf68>
  4108a4:	add	x6, x23, x0
  4108a8:	add	x3, x1, x0
  4108ac:	sub	w2, w2, #0x1
  4108b0:	add	x0, x0, #0x18
  4108b4:	ldp	x4, x5, [x6]
  4108b8:	stp	x4, x5, [x3]
  4108bc:	ldr	x4, [x6, #16]
  4108c0:	str	x4, [x3, #16]
  4108c4:	b	4108a0 <ferror@plt+0xdf30>
  4108c8:	mov	w19, #0x0                   	// #0
  4108cc:	b	410840 <ferror@plt+0xded0>
  4108d0:	mov	w24, #0x0                   	// #0
  4108d4:	b	410880 <ferror@plt+0xdf10>
  4108d8:	str	w21, [x1, #4]
  4108dc:	mov	w0, w19
  4108e0:	ldp	x19, x20, [sp, #16]
  4108e4:	ldp	x21, x22, [sp, #32]
  4108e8:	ldp	x23, x24, [sp, #48]
  4108ec:	ldp	x29, x30, [sp], #64
  4108f0:	ret
  4108f4:	mov	w19, #0x1                   	// #1
  4108f8:	b	4108dc <ferror@plt+0xdf6c>
  4108fc:	stp	x29, x30, [sp, #-32]!
  410900:	mov	w2, #0x0                   	// #0
  410904:	mov	x29, sp
  410908:	stp	x19, x20, [sp, #16]
  41090c:	mov	x20, x0
  410910:	mov	x19, x1
  410914:	mov	w1, #0x1                   	// #1
  410918:	bl	4107f8 <ferror@plt+0xde88>
  41091c:	ldr	x0, [x20]
  410920:	ldp	x4, x5, [x19]
  410924:	ldr	w2, [x0, #4]
  410928:	add	w1, w2, #0x1
  41092c:	mov	w3, w2
  410930:	str	w1, [x0, #4]
  410934:	mov	x1, #0x18                  	// #24
  410938:	madd	x3, x3, x1, x0
  41093c:	stp	x4, x5, [x3, #8]
  410940:	ldr	x4, [x19, #16]
  410944:	ldp	x19, x20, [sp, #16]
  410948:	str	x4, [x3, #24]
  41094c:	mov	x3, #0x8                   	// #8
  410950:	ldp	x29, x30, [sp], #32
  410954:	umaddl	x2, w2, w1, x3
  410958:	add	x0, x0, x2
  41095c:	ret
  410960:	stp	x29, x30, [sp, #-64]!
  410964:	and	w2, w2, #0xff
  410968:	mov	x29, sp
  41096c:	stp	x19, x20, [sp, #16]
  410970:	ldr	x19, [x0]
  410974:	stp	x21, x22, [sp, #32]
  410978:	mov	x21, x0
  41097c:	stp	x23, x24, [sp, #48]
  410980:	cbz	x19, 4109a0 <ferror@plt+0xe030>
  410984:	ldp	w0, w22, [x19]
  410988:	ubfx	x0, x0, #0, #31
  41098c:	sub	w0, w0, w22
  410990:	cmp	w1, w0
  410994:	b.hi	4109b0 <ferror@plt+0xe040>  // b.pmore
  410998:	mov	w20, #0x0                   	// #0
  41099c:	b	410a30 <ferror@plt+0xe0c0>
  4109a0:	mov	w20, #0x0                   	// #0
  4109a4:	cbz	w1, 410a30 <ferror@plt+0xe0c0>
  4109a8:	mov	w22, #0x0                   	// #0
  4109ac:	b	4109c4 <ferror@plt+0xe054>
  4109b0:	ldrsb	w0, [x19, #3]
  4109b4:	tbz	w0, #31, 410a1c <ferror@plt+0xe0ac>
  4109b8:	add	w1, w1, w22
  4109bc:	mov	w20, #0x1                   	// #1
  4109c0:	str	xzr, [x21]
  4109c4:	ldr	x0, [x21]
  4109c8:	bl	409178 <ferror@plt+0x6808>
  4109cc:	mov	w23, w0
  4109d0:	mov	x1, #0x8                   	// #8
  4109d4:	add	x1, x1, w0, uxtw #4
  4109d8:	ldr	x0, [x21]
  4109dc:	cbz	x0, 410a24 <ferror@plt+0xe0b4>
  4109e0:	ldr	w24, [x0, #4]
  4109e4:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4109e8:	str	x0, [x21]
  4109ec:	and	w23, w23, #0x7fffffff
  4109f0:	stp	w23, w24, [x0]
  4109f4:	mov	x1, x0
  4109f8:	cbz	w20, 410a48 <ferror@plt+0xe0d8>
  4109fc:	add	x2, x0, #0x8
  410a00:	add	x19, x19, #0x8
  410a04:	mov	w0, w22
  410a08:	cbz	w0, 410a2c <ferror@plt+0xe0bc>
  410a0c:	ldp	x4, x5, [x19], #16
  410a10:	sub	w0, w0, #0x1
  410a14:	stp	x4, x5, [x2], #16
  410a18:	b	410a08 <ferror@plt+0xe098>
  410a1c:	mov	w20, #0x0                   	// #0
  410a20:	b	4109a8 <ferror@plt+0xe038>
  410a24:	mov	w24, #0x0                   	// #0
  410a28:	b	4109e4 <ferror@plt+0xe074>
  410a2c:	str	w22, [x1, #4]
  410a30:	mov	w0, w20
  410a34:	ldp	x19, x20, [sp, #16]
  410a38:	ldp	x21, x22, [sp, #32]
  410a3c:	ldp	x23, x24, [sp, #48]
  410a40:	ldp	x29, x30, [sp], #64
  410a44:	ret
  410a48:	mov	w20, #0x1                   	// #1
  410a4c:	b	410a30 <ferror@plt+0xe0c0>
  410a50:	stp	x29, x30, [sp, #-64]!
  410a54:	and	w2, w2, #0xff
  410a58:	mov	x29, sp
  410a5c:	stp	x19, x20, [sp, #16]
  410a60:	ldr	x19, [x0]
  410a64:	stp	x21, x22, [sp, #32]
  410a68:	mov	x21, x0
  410a6c:	stp	x23, x24, [sp, #48]
  410a70:	cbz	x19, 410a90 <ferror@plt+0xe120>
  410a74:	ldp	w0, w22, [x19]
  410a78:	ubfx	x0, x0, #0, #31
  410a7c:	sub	w0, w0, w22
  410a80:	cmp	w1, w0
  410a84:	b.hi	410aa0 <ferror@plt+0xe130>  // b.pmore
  410a88:	mov	w20, #0x0                   	// #0
  410a8c:	b	410b20 <ferror@plt+0xe1b0>
  410a90:	mov	w20, #0x0                   	// #0
  410a94:	cbz	w1, 410b20 <ferror@plt+0xe1b0>
  410a98:	mov	w22, #0x0                   	// #0
  410a9c:	b	410ab4 <ferror@plt+0xe144>
  410aa0:	ldrsb	w0, [x19, #3]
  410aa4:	tbz	w0, #31, 410b0c <ferror@plt+0xe19c>
  410aa8:	add	w1, w1, w22
  410aac:	mov	w20, #0x1                   	// #1
  410ab0:	str	xzr, [x21]
  410ab4:	ldr	x0, [x21]
  410ab8:	bl	409178 <ferror@plt+0x6808>
  410abc:	mov	w23, w0
  410ac0:	mov	x1, #0x8                   	// #8
  410ac4:	add	x1, x1, w0, uxtw #4
  410ac8:	ldr	x0, [x21]
  410acc:	cbz	x0, 410b14 <ferror@plt+0xe1a4>
  410ad0:	ldr	w24, [x0, #4]
  410ad4:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  410ad8:	str	x0, [x21]
  410adc:	and	w23, w23, #0x7fffffff
  410ae0:	stp	w23, w24, [x0]
  410ae4:	mov	x1, x0
  410ae8:	cbz	w20, 410b38 <ferror@plt+0xe1c8>
  410aec:	add	x2, x0, #0x8
  410af0:	add	x19, x19, #0x8
  410af4:	mov	w0, w22
  410af8:	cbz	w0, 410b1c <ferror@plt+0xe1ac>
  410afc:	ldp	x4, x5, [x19], #16
  410b00:	sub	w0, w0, #0x1
  410b04:	stp	x4, x5, [x2], #16
  410b08:	b	410af8 <ferror@plt+0xe188>
  410b0c:	mov	w20, #0x0                   	// #0
  410b10:	b	410a98 <ferror@plt+0xe128>
  410b14:	mov	w24, #0x0                   	// #0
  410b18:	b	410ad4 <ferror@plt+0xe164>
  410b1c:	str	w22, [x1, #4]
  410b20:	mov	w0, w20
  410b24:	ldp	x19, x20, [sp, #16]
  410b28:	ldp	x21, x22, [sp, #32]
  410b2c:	ldp	x23, x24, [sp, #48]
  410b30:	ldp	x29, x30, [sp], #64
  410b34:	ret
  410b38:	mov	w20, #0x1                   	// #1
  410b3c:	b	410b20 <ferror@plt+0xe1b0>
  410b40:	stp	x29, x30, [sp, #-96]!
  410b44:	mov	x29, sp
  410b48:	stp	x19, x20, [sp, #16]
  410b4c:	mov	x19, x0
  410b50:	stp	x21, x22, [sp, #32]
  410b54:	ldr	w22, [x0, #40]
  410b58:	stp	x23, x24, [sp, #48]
  410b5c:	ldp	x24, x20, [x0]
  410b60:	stp	x25, x26, [sp, #64]
  410b64:	ldp	x1, x0, [x0, #16]
  410b68:	str	x27, [sp, #80]
  410b6c:	add	x25, x24, x20, lsl #4
  410b70:	sub	x1, x1, x0
  410b74:	lsl	x0, x1, #1
  410b78:	cmp	x20, x1, lsl #1
  410b7c:	b.cc	410b94 <ferror@plt+0xe224>  // b.lo, b.ul, b.last
  410b80:	lsl	w1, w1, #3
  410b84:	cmp	x20, x1
  410b88:	b.ls	410bac <ferror@plt+0xe23c>  // b.plast
  410b8c:	cmp	x20, #0x20
  410b90:	b.ls	410bac <ferror@plt+0xe23c>  // b.plast
  410b94:	bl	4039fc <ferror@plt+0x108c>
  410b98:	mov	w22, w0
  410b9c:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  410ba0:	add	x0, x0, #0x10
  410ba4:	ubfiz	x1, x22, #4, #32
  410ba8:	ldr	w20, [x0, x1]
  410bac:	ldrb	w0, [x19, #44]
  410bb0:	mov	x1, x20
  410bb4:	mov	x26, x24
  410bb8:	bl	40ebc0 <ferror@plt+0xc250>
  410bbc:	mov	x23, x0
  410bc0:	ldp	x0, x1, [x19, #16]
  410bc4:	stp	x23, x20, [x19]
  410bc8:	str	w22, [x19, #40]
  410bcc:	sub	x0, x0, x1
  410bd0:	stp	x0, xzr, [x19, #16]
  410bd4:	ldr	w27, [x26]
  410bd8:	cbz	w27, 410c30 <ferror@plt+0xe2c0>
  410bdc:	mov	w1, w22
  410be0:	mov	w0, w27
  410be4:	bl	40d740 <ferror@plt+0xadd0>
  410be8:	mov	w21, w0
  410bec:	ubfiz	x0, x21, #4, #32
  410bf0:	add	x2, x23, x0
  410bf4:	ldr	w0, [x23, x0]
  410bf8:	cbz	w0, 410c28 <ferror@plt+0xe2b8>
  410bfc:	mov	w1, w22
  410c00:	mov	w0, w27
  410c04:	bl	40d778 <ferror@plt+0xae08>
  410c08:	add	w21, w21, w0
  410c0c:	cmp	x20, w21, uxtw
  410c10:	b.hi	410c18 <ferror@plt+0xe2a8>  // b.pmore
  410c14:	sub	w21, w21, w20
  410c18:	ubfiz	x1, x21, #4, #32
  410c1c:	add	x2, x23, x1
  410c20:	ldr	w1, [x23, x1]
  410c24:	cbnz	w1, 410c08 <ferror@plt+0xe298>
  410c28:	ldp	x0, x1, [x26]
  410c2c:	stp	x0, x1, [x2]
  410c30:	add	x26, x26, #0x10
  410c34:	cmp	x25, x26
  410c38:	b.hi	410bd4 <ferror@plt+0xe264>  // b.pmore
  410c3c:	ldrb	w0, [x19, #44]
  410c40:	cbnz	w0, 410c64 <ferror@plt+0xe2f4>
  410c44:	mov	x0, x24
  410c48:	ldp	x19, x20, [sp, #16]
  410c4c:	ldp	x21, x22, [sp, #32]
  410c50:	ldp	x23, x24, [sp, #48]
  410c54:	ldp	x25, x26, [sp, #64]
  410c58:	ldr	x27, [sp, #80]
  410c5c:	ldp	x29, x30, [sp], #96
  410c60:	b	402730 <free@plt>
  410c64:	mov	x0, x24
  410c68:	ldp	x19, x20, [sp, #16]
  410c6c:	ldp	x21, x22, [sp, #32]
  410c70:	ldp	x23, x24, [sp, #48]
  410c74:	ldp	x25, x26, [sp, #64]
  410c78:	ldr	x27, [sp, #80]
  410c7c:	ldp	x29, x30, [sp], #96
  410c80:	b	403e18 <ferror@plt+0x14a8>
  410c84:	str	xzr, [x0]
  410c88:	ret
  410c8c:	stp	x29, x30, [sp, #-32]!
  410c90:	mov	x29, sp
  410c94:	stp	x19, x20, [sp, #16]
  410c98:	mov	x19, x0
  410c9c:	ldr	x0, [x19]
  410ca0:	cbz	x0, 410cb4 <ferror@plt+0xe344>
  410ca4:	ldr	x20, [x0]
  410ca8:	bl	402730 <free@plt>
  410cac:	str	x20, [x19]
  410cb0:	b	410c9c <ferror@plt+0xe32c>
  410cb4:	ldp	x19, x20, [sp, #16]
  410cb8:	ldp	x29, x30, [sp], #32
  410cbc:	ret
  410cc0:	cmp	x0, #0x10, lsl #12
  410cc4:	b.ne	410cd4 <ferror@plt+0xe364>  // b.any
  410cc8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x3e198>
  410ccc:	ldr	x1, [x2, #1944]
  410cd0:	cbnz	x1, 410cd8 <ferror@plt+0xe368>
  410cd4:	b	439f40 <_obstack_memory_used@@Base+0xd8>
  410cd8:	ldr	x0, [x1]
  410cdc:	str	x0, [x2, #1944]
  410ce0:	mov	x0, x1
  410ce4:	ret
  410ce8:	ldr	x2, [x0]
  410cec:	mov	x1, x0
  410cf0:	sub	x2, x2, x0
  410cf4:	cmp	x2, #0x10, lsl #12
  410cf8:	b.ne	410d10 <ferror@plt+0xe3a0>  // b.any
  410cfc:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  410d00:	ldr	x2, [x0, #1944]
  410d04:	str	x2, [x1]
  410d08:	str	x1, [x0, #1944]
  410d0c:	ret
  410d10:	b	402730 <free@plt>
  410d14:	stp	x29, x30, [sp, #-32]!
  410d18:	mov	x29, sp
  410d1c:	str	x19, [sp, #16]
  410d20:	eor	x19, x1, x0
  410d24:	blr	x2
  410d28:	asr	w0, w0, #31
  410d2c:	sxtw	x0, w0
  410d30:	and	x0, x0, x19
  410d34:	ldr	x19, [sp, #16]
  410d38:	ldp	x29, x30, [sp], #32
  410d3c:	ret
  410d40:	stp	x29, x30, [sp, #-96]!
  410d44:	mov	x29, sp
  410d48:	stp	x21, x22, [sp, #32]
  410d4c:	stp	x23, x24, [sp, #48]
  410d50:	mov	x23, x0
  410d54:	mov	x24, x3
  410d58:	ldp	x21, x0, [x1, #24]
  410d5c:	stp	x19, x20, [sp, #16]
  410d60:	mov	x19, x1
  410d64:	stp	x25, x26, [sp, #64]
  410d68:	mov	x25, x2
  410d6c:	str	x27, [sp, #80]
  410d70:	cmp	x0, x2
  410d74:	b.cc	411104 <ferror@plt+0xe794>  // b.lo, b.ul, b.last
  410d78:	ldr	x2, [x19]
  410d7c:	stp	x3, x25, [x19, #8]
  410d80:	add	x20, x23, x21
  410d84:	mov	x1, x23
  410d88:	mov	x0, x20
  410d8c:	bl	410d14 <ferror@plt+0xe3a4>
  410d90:	add	x21, x23, x21, lsl #1
  410d94:	eor	x20, x20, x0
  410d98:	eor	x23, x23, x0
  410d9c:	ldr	x0, [x19, #16]
  410da0:	cmp	x0, #0x3
  410da4:	b.ne	410dd8 <ferror@plt+0xe468>  // b.any
  410da8:	ldr	x2, [x19]
  410dac:	mov	x1, x20
  410db0:	mov	x0, x21
  410db4:	bl	410d14 <ferror@plt+0xe3a4>
  410db8:	eor	x20, x20, x0
  410dbc:	ldr	x2, [x19]
  410dc0:	mov	x1, x23
  410dc4:	eor	x21, x21, x0
  410dc8:	mov	x0, x20
  410dcc:	bl	410d14 <ferror@plt+0xe3a4>
  410dd0:	eor	x23, x23, x0
  410dd4:	eor	x20, x20, x0
  410dd8:	ldp	x1, x24, [x19, #16]
  410ddc:	cmp	x1, #0x3
  410de0:	b.hi	410ee4 <ferror@plt+0xe574>  // b.pmore
  410de4:	cmp	x24, #0x8
  410de8:	b.ne	410e28 <ferror@plt+0xe4b8>  // b.any
  410dec:	cmp	x1, #0x3
  410df0:	ldr	x2, [x20]
  410df4:	ldr	x3, [x23]
  410df8:	ldr	x0, [x19, #8]
  410dfc:	b.ne	410e08 <ferror@plt+0xe498>  // b.any
  410e00:	ldr	x1, [x21]
  410e04:	str	x1, [x0, #16]
  410e08:	stp	x3, x2, [x0]
  410e0c:	ldp	x19, x20, [sp, #16]
  410e10:	ldp	x21, x22, [sp, #32]
  410e14:	ldp	x23, x24, [sp, #48]
  410e18:	ldp	x25, x26, [sp, #64]
  410e1c:	ldr	x27, [sp, #80]
  410e20:	ldp	x29, x30, [sp], #96
  410e24:	ret
  410e28:	cmp	x24, #0x4
  410e2c:	b.ne	410e54 <ferror@plt+0xe4e4>  // b.any
  410e30:	ldr	w2, [x20]
  410e34:	cmp	x1, #0x3
  410e38:	ldr	w3, [x23]
  410e3c:	ldr	x0, [x19, #8]
  410e40:	b.ne	410e4c <ferror@plt+0xe4dc>  // b.any
  410e44:	ldr	w1, [x21]
  410e48:	str	w1, [x0, #8]
  410e4c:	stp	w3, w2, [x0]
  410e50:	b	410e0c <ferror@plt+0xe49c>
  410e54:	mov	x0, #0x0                   	// #0
  410e58:	ldr	x2, [x19, #24]
  410e5c:	add	x3, x0, #0x8
  410e60:	cmp	x3, x2
  410e64:	b.hi	410ea0 <ferror@plt+0xe530>  // b.pmore
  410e68:	ldp	x1, x6, [x19, #8]
  410e6c:	ldr	x5, [x23, x0]
  410e70:	ldr	x4, [x20, x0]
  410e74:	add	x1, x1, x0
  410e78:	cmp	x6, #0x3
  410e7c:	b.ne	410e8c <ferror@plt+0xe51c>  // b.any
  410e80:	lsl	x2, x2, #1
  410e84:	ldr	x0, [x21, x0]
  410e88:	str	x0, [x1, x2]
  410e8c:	str	x5, [x1]
  410e90:	ldr	x0, [x19, #24]
  410e94:	str	x4, [x1, x0]
  410e98:	mov	x0, x3
  410e9c:	b	410e58 <ferror@plt+0xe4e8>
  410ea0:	ldr	x2, [x19, #24]
  410ea4:	cmp	x2, x0
  410ea8:	b.ls	410e0c <ferror@plt+0xe49c>  // b.plast
  410eac:	ldp	x1, x5, [x19, #8]
  410eb0:	ldrb	w4, [x23, x0]
  410eb4:	ldrb	w3, [x20, x0]
  410eb8:	add	x1, x1, x0
  410ebc:	cmp	x5, #0x3
  410ec0:	b.ne	410ed0 <ferror@plt+0xe560>  // b.any
  410ec4:	lsl	x2, x2, #1
  410ec8:	ldrb	w5, [x21, x0]
  410ecc:	strb	w5, [x1, x2]
  410ed0:	strb	w4, [x1]
  410ed4:	add	x0, x0, #0x1
  410ed8:	ldr	x2, [x19, #24]
  410edc:	strb	w3, [x1, x2]
  410ee0:	b	410ea0 <ferror@plt+0xe530>
  410ee4:	add	x25, x21, x24
  410ee8:	cmp	x1, #0x5
  410eec:	add	x24, x21, x24, lsl #1
  410ef0:	ldr	x2, [x19]
  410ef4:	b.ne	410f24 <ferror@plt+0xe5b4>  // b.any
  410ef8:	mov	x1, x25
  410efc:	mov	x0, x24
  410f00:	bl	410d14 <ferror@plt+0xe3a4>
  410f04:	eor	x24, x24, x0
  410f08:	ldr	x2, [x19]
  410f0c:	mov	x1, x21
  410f10:	eor	x25, x25, x0
  410f14:	mov	x0, x24
  410f18:	bl	410d14 <ferror@plt+0xe3a4>
  410f1c:	eor	x21, x0, x21
  410f20:	eor	x24, x24, x0
  410f24:	ldr	x2, [x19]
  410f28:	mov	x1, x21
  410f2c:	mov	x0, x25
  410f30:	bl	410d14 <ferror@plt+0xe3a4>
  410f34:	eor	x21, x21, x0
  410f38:	eor	x25, x25, x0
  410f3c:	ldr	x0, [x19, #16]
  410f40:	cmp	x0, #0x5
  410f44:	b.ne	410f78 <ferror@plt+0xe608>  // b.any
  410f48:	ldr	x2, [x19]
  410f4c:	mov	x1, x23
  410f50:	mov	x0, x25
  410f54:	bl	410d14 <ferror@plt+0xe3a4>
  410f58:	eor	x23, x23, x0
  410f5c:	ldr	x2, [x19]
  410f60:	mov	x1, x20
  410f64:	eor	x25, x25, x0
  410f68:	mov	x0, x24
  410f6c:	bl	410d14 <ferror@plt+0xe3a4>
  410f70:	eor	x20, x0, x20
  410f74:	eor	x24, x24, x0
  410f78:	ldr	x2, [x19]
  410f7c:	mov	x1, x23
  410f80:	mov	x0, x21
  410f84:	bl	410d14 <ferror@plt+0xe3a4>
  410f88:	eor	x21, x21, x0
  410f8c:	ldr	x2, [x19]
  410f90:	mov	x1, x20
  410f94:	eor	x23, x23, x0
  410f98:	mov	x0, x25
  410f9c:	bl	410d14 <ferror@plt+0xe3a4>
  410fa0:	eor	x20, x20, x0
  410fa4:	ldr	x2, [x19]
  410fa8:	mov	x1, x20
  410fac:	eor	x25, x25, x0
  410fb0:	mov	x0, x21
  410fb4:	bl	410d14 <ferror@plt+0xe3a4>
  410fb8:	eor	x1, x20, x0
  410fbc:	eor	x21, x21, x0
  410fc0:	ldr	x0, [x19, #24]
  410fc4:	cmp	x0, #0x8
  410fc8:	b.ne	410ffc <ferror@plt+0xe68c>  // b.any
  410fcc:	ldp	x0, x5, [x19, #8]
  410fd0:	ldr	x3, [x1]
  410fd4:	ldr	x2, [x21]
  410fd8:	cmp	x5, #0x5
  410fdc:	ldr	x4, [x23]
  410fe0:	ldr	x1, [x25]
  410fe4:	b.ne	410ff0 <ferror@plt+0xe680>  // b.any
  410fe8:	ldr	x5, [x24]
  410fec:	str	x5, [x0, #32]
  410ff0:	stp	x4, x3, [x0]
  410ff4:	stp	x2, x1, [x0, #16]
  410ff8:	b	410e0c <ferror@plt+0xe49c>
  410ffc:	cmp	x0, #0x4
  411000:	b.ne	411034 <ferror@plt+0xe6c4>  // b.any
  411004:	ldp	x0, x5, [x19, #8]
  411008:	ldr	w3, [x1]
  41100c:	ldr	w2, [x21]
  411010:	ldr	w4, [x23]
  411014:	ldr	w1, [x25]
  411018:	cmp	x5, #0x5
  41101c:	b.ne	411028 <ferror@plt+0xe6b8>  // b.any
  411020:	ldr	w5, [x24]
  411024:	str	w5, [x0, #16]
  411028:	stp	w4, w3, [x0]
  41102c:	stp	w2, w1, [x0, #8]
  411030:	b	410e0c <ferror@plt+0xe49c>
  411034:	mov	x2, #0x0                   	// #0
  411038:	ldr	x3, [x19, #24]
  41103c:	add	x4, x2, #0x8
  411040:	cmp	x4, x3
  411044:	b.hi	4110a0 <ferror@plt+0xe730>  // b.pmore
  411048:	ldp	x0, x9, [x19, #8]
  41104c:	ldr	x8, [x23, x2]
  411050:	ldr	x7, [x1, x2]
  411054:	add	x0, x0, x2
  411058:	cmp	x9, #0x5
  41105c:	ldr	x6, [x21, x2]
  411060:	ldr	x5, [x25, x2]
  411064:	b.ne	411074 <ferror@plt+0xe704>  // b.any
  411068:	lsl	x3, x3, #2
  41106c:	ldr	x2, [x24, x2]
  411070:	str	x2, [x0, x3]
  411074:	str	x8, [x0]
  411078:	ldr	x3, [x19, #24]
  41107c:	add	x2, x0, x3
  411080:	str	x7, [x0, x3]
  411084:	ldr	x0, [x19, #24]
  411088:	add	x3, x2, x0
  41108c:	str	x6, [x2, x0]
  411090:	mov	x2, x4
  411094:	ldr	x0, [x19, #24]
  411098:	str	x5, [x3, x0]
  41109c:	b	411038 <ferror@plt+0xe6c8>
  4110a0:	ldr	x3, [x19, #24]
  4110a4:	cmp	x3, x2
  4110a8:	b.ls	410e0c <ferror@plt+0xe49c>  // b.plast
  4110ac:	ldp	x0, x8, [x19, #8]
  4110b0:	ldrb	w4, [x23, x2]
  4110b4:	ldrb	w7, [x1, x2]
  4110b8:	ldrb	w6, [x21, x2]
  4110bc:	ldrb	w5, [x25, x2]
  4110c0:	add	x0, x0, x2
  4110c4:	cmp	x8, #0x5
  4110c8:	b.ne	4110d8 <ferror@plt+0xe768>  // b.any
  4110cc:	lsl	x3, x3, #2
  4110d0:	ldrb	w8, [x24, x2]
  4110d4:	strb	w8, [x0, x3]
  4110d8:	strb	w4, [x0]
  4110dc:	add	x2, x2, #0x1
  4110e0:	ldr	x4, [x19, #24]
  4110e4:	add	x3, x0, x4
  4110e8:	strb	w7, [x0, x4]
  4110ec:	ldr	x0, [x19, #24]
  4110f0:	add	x4, x3, x0
  4110f4:	strb	w6, [x3, x0]
  4110f8:	ldr	x0, [x19, #24]
  4110fc:	strb	w5, [x4, x0]
  411100:	b	4110a0 <ferror@plt+0xe730>
  411104:	lsr	x26, x2, #1
  411108:	cmp	x23, x3
  41110c:	csel	x20, x4, x23, eq  // eq = none
  411110:	sub	x2, x2, x2, lsr #1
  411114:	mul	x21, x26, x21
  411118:	add	x27, x23, x21
  41111c:	add	x22, x3, x21
  411120:	mov	x3, x22
  411124:	mov	x0, x27
  411128:	bl	410d40 <ferror@plt+0xe3d0>
  41112c:	mov	x2, x26
  411130:	mov	x1, x19
  411134:	mov	x0, x23
  411138:	mov	x4, x27
  41113c:	mov	x3, x20
  411140:	bl	410d40 <ferror@plt+0xe3d0>
  411144:	ldr	x2, [x19]
  411148:	mov	x0, x22
  41114c:	ldr	x1, [x19, #24]
  411150:	sub	x1, x21, x1
  411154:	add	x1, x20, x1
  411158:	blr	x2
  41115c:	tbz	w0, #31, 4111c0 <ferror@plt+0xe850>
  411160:	ldr	x0, [x19, #24]
  411164:	cmp	x0, #0x8
  411168:	madd	x25, x0, x25, x24
  41116c:	b.ne	4111e8 <ferror@plt+0xe878>  // b.any
  411170:	ldr	x2, [x19]
  411174:	mov	x1, x20
  411178:	mov	x0, x22
  41117c:	blr	x2
  411180:	asr	w0, w0, #31
  411184:	eor	x2, x22, x20
  411188:	sxtw	x1, w0
  41118c:	and	w0, w0, #0x8
  411190:	and	x2, x2, x1
  411194:	eor	x2, x20, x2
  411198:	add	x22, x22, w0, sxtw
  41119c:	ldr	x2, [x2]
  4111a0:	str	x2, [x24], #8
  4111a4:	cmp	x24, x22
  4111a8:	b.eq	410e0c <ferror@plt+0xe49c>  // b.none
  4111ac:	mvn	x1, x1
  4111b0:	cmp	x25, x22
  4111b4:	and	x1, x1, #0x8
  4111b8:	add	x20, x20, x1
  4111bc:	b.ne	411170 <ferror@plt+0xe800>  // b.any
  4111c0:	sub	x2, x22, x24
  4111c4:	mov	x1, x20
  4111c8:	mov	x0, x24
  4111cc:	ldp	x19, x20, [sp, #16]
  4111d0:	ldp	x21, x22, [sp, #32]
  4111d4:	ldp	x23, x24, [sp, #48]
  4111d8:	ldp	x25, x26, [sp, #64]
  4111dc:	ldr	x27, [sp, #80]
  4111e0:	ldp	x29, x30, [sp], #96
  4111e4:	b	4022e0 <memcpy@plt>
  4111e8:	cmp	x0, #0x4
  4111ec:	b.ne	411244 <ferror@plt+0xe8d4>  // b.any
  4111f0:	ldr	x2, [x19]
  4111f4:	mov	x1, x20
  4111f8:	mov	x0, x22
  4111fc:	blr	x2
  411200:	asr	w0, w0, #31
  411204:	eor	x2, x22, x20
  411208:	sxtw	x1, w0
  41120c:	and	w0, w0, #0x4
  411210:	and	x2, x2, x1
  411214:	eor	x2, x20, x2
  411218:	add	x22, x22, w0, sxtw
  41121c:	ldr	w2, [x2]
  411220:	str	w2, [x24], #4
  411224:	cmp	x24, x22
  411228:	b.eq	410e0c <ferror@plt+0xe49c>  // b.none
  41122c:	mvn	x1, x1
  411230:	cmp	x25, x22
  411234:	and	x1, x1, #0x4
  411238:	add	x20, x20, x1
  41123c:	b.ne	4111f0 <ferror@plt+0xe880>  // b.any
  411240:	b	4111c0 <ferror@plt+0xe850>
  411244:	ldr	x2, [x19]
  411248:	mov	x1, x20
  41124c:	mov	x0, x22
  411250:	blr	x2
  411254:	asr	w21, w0, #31
  411258:	ldr	x2, [x19, #24]
  41125c:	sxtw	x21, w21
  411260:	eor	x1, x22, x20
  411264:	mov	x0, x24
  411268:	and	x1, x1, x21
  41126c:	eor	x1, x20, x1
  411270:	bl	4022e0 <memcpy@plt>
  411274:	ldr	x1, [x19, #24]
  411278:	add	x24, x0, x1
  41127c:	and	x0, x21, x1
  411280:	add	x22, x22, x0
  411284:	cmp	x24, x22
  411288:	b.eq	410e0c <ferror@plt+0xe49c>  // b.none
  41128c:	mvn	x21, x21
  411290:	cmp	x25, x22
  411294:	and	x21, x21, x1
  411298:	add	x20, x20, x21
  41129c:	b.ne	411244 <ferror@plt+0xe8d4>  // b.any
  4112a0:	b	4111c0 <ferror@plt+0xe850>
  4112a4:	cmp	x1, #0x1
  4112a8:	b.ls	411340 <ferror@plt+0xe9d0>  // b.plast
  4112ac:	stp	x29, x30, [sp, #-352]!
  4112b0:	mov	x29, sp
  4112b4:	stp	x19, x20, [sp, #16]
  4112b8:	mov	x20, x1
  4112bc:	stp	x21, x22, [sp, #32]
  4112c0:	mov	x21, x0
  4112c4:	tbz	x2, #63, 411330 <ferror@plt+0xe9c0>
  4112c8:	mvn	x2, x2
  4112cc:	mov	x0, #0x3                   	// #3
  4112d0:	str	x0, [sp, #88]
  4112d4:	lsr	x0, x20, #1
  4112d8:	stp	x3, x21, [sp, #56]
  4112dc:	add	x22, sp, #0x60
  4112e0:	mul	x0, x0, x2
  4112e4:	stp	x20, x2, [sp, #72]
  4112e8:	cmp	x0, #0x100
  4112ec:	b.ls	411338 <ferror@plt+0xe9c8>  // b.plast
  4112f0:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  4112f4:	mov	x19, x0
  4112f8:	mov	x4, x19
  4112fc:	mov	x3, x21
  411300:	mov	x2, x20
  411304:	add	x1, sp, #0x38
  411308:	mov	x0, x21
  41130c:	bl	410d40 <ferror@plt+0xe3d0>
  411310:	cmp	x19, x22
  411314:	b.eq	411320 <ferror@plt+0xe9b0>  // b.none
  411318:	mov	x0, x19
  41131c:	bl	402730 <free@plt>
  411320:	ldp	x19, x20, [sp, #16]
  411324:	ldp	x21, x22, [sp, #32]
  411328:	ldp	x29, x30, [sp], #352
  41132c:	ret
  411330:	mov	x0, #0x5                   	// #5
  411334:	b	4112d0 <ferror@plt+0xe960>
  411338:	mov	x19, x22
  41133c:	b	4112f8 <ferror@plt+0xe988>
  411340:	ret
  411344:	mvn	x2, x2
  411348:	b	4112a4 <ferror@plt+0xe934>
  41134c:	ldr	x6, [x1]
  411350:	cbz	x6, 4113b4 <ferror@plt+0xea44>
  411354:	ldr	x5, [x0]
  411358:	ldrb	w3, [x5]
  41135c:	cmp	w3, #0x7f
  411360:	b.hi	411380 <ferror@plt+0xea10>  // b.pmore
  411364:	str	w3, [x2]
  411368:	sub	x6, x6, #0x1
  41136c:	str	x6, [x1]
  411370:	add	x5, x5, #0x1
  411374:	str	x5, [x0]
  411378:	mov	w0, #0x0                   	// #0
  41137c:	ret
  411380:	adrp	x7, 44d000 <_obstack_memory_used@@Base+0x13198>
  411384:	add	x7, x7, #0x7c8
  411388:	add	x10, x7, #0x6
  41138c:	mov	x4, #0x1                   	// #1
  411390:	mov	x9, x4
  411394:	add	x4, x4, #0x1
  411398:	ldrb	w8, [x9, x7]
  41139c:	ldrb	w9, [x9, x10]
  4113a0:	bic	w11, w3, w8
  4113a4:	cmp	w11, w9
  4113a8:	b.ne	4113bc <ferror@plt+0xea4c>  // b.any
  4113ac:	cmp	x6, x4
  4113b0:	b.cs	4113cc <ferror@plt+0xea5c>  // b.hs, b.nlast
  4113b4:	mov	w0, #0x16                  	// #22
  4113b8:	b	41137c <ferror@plt+0xea0c>
  4113bc:	cmp	x4, #0x6
  4113c0:	b.ne	411390 <ferror@plt+0xea20>  // b.any
  4113c4:	mov	w0, #0x54                  	// #84
  4113c8:	b	41137c <ferror@plt+0xea0c>
  4113cc:	and	w3, w3, w8
  4113d0:	add	x8, x5, #0x1
  4113d4:	add	x5, x5, x4
  4113d8:	ldrb	w7, [x8], #1
  4113dc:	and	w9, w7, #0xc0
  4113e0:	cmp	w9, #0x80
  4113e4:	b.ne	4113c4 <ferror@plt+0xea54>  // b.any
  4113e8:	and	w7, w7, #0x3f
  4113ec:	cmp	x5, x8
  4113f0:	add	w3, w7, w3, lsl #6
  4113f4:	b.ne	4113d8 <ferror@plt+0xea68>  // b.any
  4113f8:	sub	w8, w3, #0x80
  4113fc:	mov	w7, #0x7fffff80            	// #2147483520
  411400:	cmp	w8, w7
  411404:	b.cs	4113c4 <ferror@plt+0xea54>  // b.hs, b.nlast
  411408:	cmp	w3, #0x7ff
  41140c:	ccmp	x4, #0x2, #0x0, ls  // ls = plast
  411410:	b.hi	4113c4 <ferror@plt+0xea54>  // b.pmore
  411414:	mov	w7, #0xffff                	// #65535
  411418:	cmp	w3, w7
  41141c:	ccmp	x4, #0x3, #0x0, ls  // ls = plast
  411420:	b.hi	4113c4 <ferror@plt+0xea54>  // b.pmore
  411424:	mov	w7, #0x1fffff              	// #2097151
  411428:	cmp	w3, w7
  41142c:	ccmp	x4, #0x4, #0x0, ls  // ls = plast
  411430:	b.hi	4113c4 <ferror@plt+0xea54>  // b.pmore
  411434:	mov	w7, #0x3ffffff             	// #67108863
  411438:	cmp	w3, w7
  41143c:	ccmp	x4, #0x5, #0x0, ls  // ls = plast
  411440:	b.hi	4113c4 <ferror@plt+0xea54>  // b.pmore
  411444:	mov	w7, #0xffff2800            	// #-55296
  411448:	add	w7, w3, w7
  41144c:	cmp	w7, #0x7ff
  411450:	b.ls	4113c4 <ferror@plt+0xea54>  // b.plast
  411454:	str	w3, [x2]
  411458:	sub	x4, x6, x4
  41145c:	str	x5, [x0]
  411460:	str	x4, [x1]
  411464:	b	411378 <ferror@plt+0xea08>
  411468:	sub	sp, sp, #0x10
  41146c:	cmp	w0, #0x7f
  411470:	ldr	x6, [x1]
  411474:	b.hi	411508 <ferror@plt+0xeb98>  // b.pmore
  411478:	add	x3, sp, #0xd
  41147c:	mov	x4, #0x1                   	// #1
  411480:	strb	w0, [sp, #13]
  411484:	ldr	x0, [x2]
  411488:	cmp	x0, x4
  41148c:	b.cc	41154c <ferror@plt+0xebdc>  // b.lo, b.ul, b.last
  411490:	add	x0, sp, #0xe
  411494:	mov	x5, #0x0                   	// #0
  411498:	add	x7, x5, x3
  41149c:	cmp	x0, x7
  4114a0:	b.ls	411520 <ferror@plt+0xebb0>  // b.plast
  4114a4:	ldrb	w7, [x3, x5]
  4114a8:	strb	w7, [x6, x5]
  4114ac:	add	x5, x5, #0x1
  4114b0:	b	411498 <ferror@plt+0xeb28>
  4114b4:	mov	x5, x9
  4114b8:	mov	x7, x4
  4114bc:	and	w4, w0, #0x3f
  4114c0:	lsr	w0, w0, #6
  4114c4:	orr	w4, w4, #0xffffff80
  4114c8:	sturb	w4, [x5, #-1]
  4114cc:	sub	x9, x5, #0x1
  4114d0:	add	x4, x7, #0x1
  4114d4:	cmp	w0, #0x3e
  4114d8:	b.hi	4114b4 <ferror@plt+0xeb44>  // b.pmore
  4114dc:	add	x8, x3, x4
  4114e0:	ldurb	w8, [x8, #-1]
  4114e4:	tst	w8, w0
  4114e8:	b.ne	4114b4 <ferror@plt+0xeb44>  // b.any
  4114ec:	adrp	x8, 44d000 <_obstack_memory_used@@Base+0x13198>
  4114f0:	add	x8, x8, #0x7ce
  4114f4:	sub	x3, x5, #0x2
  4114f8:	ldrb	w7, [x8, x7]
  4114fc:	orr	w0, w0, w7
  411500:	sturb	w0, [x5, #-2]
  411504:	b	411484 <ferror@plt+0xeb14>
  411508:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0x13198>
  41150c:	add	x3, x3, #0x7c8
  411510:	add	x5, sp, #0xe
  411514:	add	x3, x3, #0xc
  411518:	mov	x7, #0x1                   	// #1
  41151c:	b	4114bc <ferror@plt+0xeb4c>
  411520:	ldr	x5, [x2]
  411524:	cmp	x3, x0
  411528:	sub	x4, x5, x4
  41152c:	str	x4, [x2]
  411530:	sub	x2, x0, x3
  411534:	mov	w0, #0x0                   	// #0
  411538:	csel	x2, x2, xzr, ls  // ls = plast
  41153c:	add	x6, x6, x2
  411540:	str	x6, [x1]
  411544:	add	sp, sp, #0x10
  411548:	ret
  41154c:	mov	w0, #0x7                   	// #7
  411550:	b	411544 <ferror@plt+0xebd4>
  411554:	stp	x29, x30, [sp, #-32]!
  411558:	mov	x12, x0
  41155c:	mov	x0, x1
  411560:	mov	x29, sp
  411564:	mov	x1, x2
  411568:	ldr	x2, [x4]
  41156c:	str	wzr, [sp, #28]
  411570:	cmp	x2, #0x3
  411574:	b.ls	4115ec <ferror@plt+0xec7c>  // b.plast
  411578:	mov	x14, x3
  41157c:	mov	x13, x4
  411580:	add	x2, sp, #0x1c
  411584:	bl	41134c <ferror@plt+0xe9dc>
  411588:	cbnz	w0, 4115e4 <ferror@plt+0xec74>
  41158c:	cmp	x12, #0x0
  411590:	mov	x1, #0x3                   	// #3
  411594:	ldr	x2, [x14]
  411598:	csel	x3, x1, xzr, ne  // ne = any
  41159c:	ldr	w4, [sp, #28]
  4115a0:	csel	x1, xzr, x1, ne  // ne = any
  4115a4:	strb	w4, [x2, x3]
  4115a8:	cinc	x4, x2, ne  // ne = any
  4115ac:	ldr	w3, [sp, #28]
  4115b0:	lsr	w3, w3, #8
  4115b4:	strb	w3, [x4, #1]
  4115b8:	cinc	x3, x2, eq  // eq = none
  4115bc:	ldrh	w4, [sp, #30]
  4115c0:	strb	w4, [x3, #1]
  4115c4:	ldrb	w3, [sp, #31]
  4115c8:	strb	w3, [x2, x1]
  4115cc:	ldr	x1, [x14]
  4115d0:	add	x1, x1, #0x4
  4115d4:	str	x1, [x14]
  4115d8:	ldr	x1, [x13]
  4115dc:	sub	x1, x1, #0x4
  4115e0:	str	x1, [x13]
  4115e4:	ldp	x29, x30, [sp], #32
  4115e8:	ret
  4115ec:	mov	w0, #0x7                   	// #7
  4115f0:	b	4115e4 <ferror@plt+0xec74>
  4115f4:	stp	x29, x30, [sp, #-48]!
  4115f8:	mov	x14, x1
  4115fc:	mov	x18, x0
  411600:	mov	x29, sp
  411604:	ldr	x15, [x3]
  411608:	mov	x13, x3
  41160c:	mov	x12, x4
  411610:	mov	x1, x2
  411614:	mov	x0, x14
  411618:	stp	x19, x20, [sp, #16]
  41161c:	str	wzr, [sp, #44]
  411620:	ldr	x19, [x2]
  411624:	add	x2, sp, #0x2c
  411628:	ldr	x20, [x14]
  41162c:	bl	41134c <ferror@plt+0xe9dc>
  411630:	cbnz	w0, 411650 <ferror@plt+0xece0>
  411634:	ldr	w5, [sp, #44]
  411638:	mov	w2, #0x10ffff              	// #1114111
  41163c:	cmp	w5, w2
  411640:	b.ls	41165c <ferror@plt+0xecec>  // b.plast
  411644:	str	x20, [x14]
  411648:	mov	w0, #0x54                  	// #84
  41164c:	str	x19, [x1]
  411650:	ldp	x19, x20, [sp, #16]
  411654:	ldp	x29, x30, [sp], #48
  411658:	ret
  41165c:	mov	w3, #0xffff                	// #65535
  411660:	cmp	w5, w3
  411664:	ldr	x2, [x12]
  411668:	b.hi	4116bc <ferror@plt+0xed4c>  // b.pmore
  41166c:	cmp	x2, #0x1
  411670:	b.hi	411684 <ferror@plt+0xed14>  // b.pmore
  411674:	str	x20, [x14]
  411678:	mov	w0, #0x7                   	// #7
  41167c:	str	x19, [x1]
  411680:	b	411650 <ferror@plt+0xece0>
  411684:	cmp	x18, #0x0
  411688:	cset	x1, ne  // ne = any
  41168c:	cset	x2, eq  // eq = none
  411690:	strb	w5, [x15, x1]
  411694:	ldr	w1, [sp, #44]
  411698:	lsr	w1, w1, #8
  41169c:	strb	w1, [x15, x2]
  4116a0:	ldr	x1, [x13]
  4116a4:	add	x1, x1, #0x2
  4116a8:	str	x1, [x13]
  4116ac:	ldr	x1, [x12]
  4116b0:	sub	x1, x1, #0x2
  4116b4:	str	x1, [x12]
  4116b8:	b	411650 <ferror@plt+0xece0>
  4116bc:	cmp	x2, #0x3
  4116c0:	b.ls	411674 <ferror@plt+0xed04>  // b.plast
  4116c4:	sub	w1, w5, #0x10, lsl #12
  4116c8:	cmp	x18, #0x0
  4116cc:	mov	w2, #0xd800                	// #55296
  4116d0:	cset	x3, ne  // ne = any
  4116d4:	add	w1, w2, w1, lsr #10
  4116d8:	and	w5, w5, #0x3ff
  4116dc:	mov	w2, #0xdc00                	// #56320
  4116e0:	add	w5, w5, w2
  4116e4:	cset	x2, eq  // eq = none
  4116e8:	strb	w1, [x15, x3]
  4116ec:	add	x3, x3, #0x2
  4116f0:	lsr	w1, w1, #8
  4116f4:	strb	w1, [x15, x2]
  4116f8:	add	x2, x2, #0x2
  4116fc:	strb	w5, [x15, x3]
  411700:	lsr	w5, w5, #8
  411704:	strb	w5, [x15, x2]
  411708:	ldr	x1, [x13]
  41170c:	add	x1, x1, #0x4
  411710:	str	x1, [x13]
  411714:	ldr	x1, [x12]
  411718:	sub	x1, x1, #0x4
  41171c:	b	4116b4 <ferror@plt+0xed44>
  411720:	mov	w0, #0x1                   	// #1
  411724:	ret
  411728:	stp	x29, x30, [sp, #-96]!
  41172c:	mov	x29, sp
  411730:	stp	x21, x22, [sp, #32]
  411734:	mov	x22, x1
  411738:	mov	x21, x2
  41173c:	mov	x1, x2
  411740:	stp	x19, x20, [sp, #16]
  411744:	mov	x19, x8
  411748:	stp	x23, x24, [sp, #48]
  41174c:	mov	x23, x0
  411750:	mov	x0, x22
  411754:	stp	x25, x26, [sp, #64]
  411758:	str	x27, [sp, #80]
  41175c:	bl	402570 <strcasecmp@plt>
  411760:	cbnz	w0, 41179c <ferror@plt+0xee2c>
  411764:	adrp	x0, 411000 <ferror@plt+0xe690>
  411768:	add	x0, x0, #0xb7c
  41176c:	str	x0, [x19]
  411770:	mov	x0, #0xffffffffffffffff    	// #-1
  411774:	str	x0, [x19, #8]
  411778:	str	w0, [x19, #16]
  41177c:	mov	sp, x29
  411780:	ldp	x19, x20, [sp, #16]
  411784:	ldp	x21, x22, [sp, #32]
  411788:	ldp	x23, x24, [sp, #48]
  41178c:	ldp	x25, x26, [sp, #64]
  411790:	ldr	x27, [sp, #80]
  411794:	ldp	x29, x30, [sp], #96
  411798:	ret
  41179c:	mov	x0, x22
  4117a0:	bl	402330 <strlen@plt>
  4117a4:	mov	x20, x0
  4117a8:	mov	x0, x21
  4117ac:	bl	402330 <strlen@plt>
  4117b0:	add	x20, x20, x0
  4117b4:	add	x20, x20, #0x11
  4117b8:	mov	x1, x21
  4117bc:	and	x20, x20, #0xfffffffffffffff0
  4117c0:	mov	x24, #0x0                   	// #0
  4117c4:	sub	sp, sp, x20
  4117c8:	adrp	x20, 44d000 <_obstack_memory_used@@Base+0x13198>
  4117cc:	add	x20, x20, #0x7c8
  4117d0:	mov	x25, sp
  4117d4:	add	x20, x20, #0x18
  4117d8:	mov	x0, x25
  4117dc:	mov	x27, #0x18                  	// #24
  4117e0:	bl	4027b0 <strcpy@plt>
  4117e4:	mov	x0, x25
  4117e8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  4117ec:	add	x1, x1, #0x7e7
  4117f0:	bl	402520 <strcat@plt>
  4117f4:	mov	x1, x22
  4117f8:	mov	x0, x25
  4117fc:	bl	402520 <strcat@plt>
  411800:	mul	x26, x24, x27
  411804:	mov	x0, x25
  411808:	ldr	x1, [x26, x20]
  41180c:	bl	402570 <strcasecmp@plt>
  411810:	cbnz	w0, 411830 <ferror@plt+0xeec0>
  411814:	add	x20, x20, x26
  411818:	ldr	x0, [x20, #8]
  41181c:	str	x0, [x19]
  411820:	ldr	x0, [x20, #16]
  411824:	str	x0, [x19, #8]
  411828:	mov	w0, #0xffffffff            	// #-1
  41182c:	b	411778 <ferror@plt+0xee08>
  411830:	add	x24, x24, #0x1
  411834:	cmp	x24, #0x8
  411838:	b.ne	411800 <ferror@plt+0xee90>  // b.any
  41183c:	adrp	x0, 411000 <ferror@plt+0xe690>
  411840:	add	x0, x0, #0x8bc
  411844:	mov	x1, x21
  411848:	str	x0, [x19]
  41184c:	mov	x0, x22
  411850:	bl	4027c0 <iconv_open@plt>
  411854:	mov	w1, #0xffffffff            	// #-1
  411858:	str	x0, [x19, #8]
  41185c:	str	w1, [x19, #16]
  411860:	cmn	x0, #0x1
  411864:	b.ne	41177c <ferror@plt+0xee0c>  // b.any
  411868:	bl	4028c0 <__errno_location@plt>
  41186c:	ldr	w0, [x0]
  411870:	cmp	w0, #0x16
  411874:	b.ne	4118a4 <ferror@plt+0xef34>  // b.any
  411878:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  41187c:	mov	x4, x22
  411880:	mov	x3, x21
  411884:	add	x2, x2, #0x771
  411888:	mov	x0, x23
  41188c:	mov	w1, #0x3                   	// #3
  411890:	bl	419440 <ferror@plt+0x16ad0>
  411894:	adrp	x0, 411000 <ferror@plt+0xe690>
  411898:	add	x0, x0, #0xb7c
  41189c:	str	x0, [x19]
  4118a0:	b	41177c <ferror@plt+0xee0c>
  4118a4:	mov	x0, x23
  4118a8:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4118ac:	mov	w1, #0x3                   	// #3
  4118b0:	add	x2, x2, #0x7a1
  4118b4:	bl	4198e4 <ferror@plt+0x16f74>
  4118b8:	b	411894 <ferror@plt+0xef24>
  4118bc:	stp	x29, x30, [sp, #-80]!
  4118c0:	mov	x4, #0x0                   	// #0
  4118c4:	mov	x29, sp
  4118c8:	stp	x19, x20, [sp, #16]
  4118cc:	mov	x20, x0
  4118d0:	mov	x19, x3
  4118d4:	mov	x3, #0x0                   	// #0
  4118d8:	stp	x21, x22, [sp, #32]
  4118dc:	mov	x22, x1
  4118e0:	mov	x21, x2
  4118e4:	mov	x1, #0x0                   	// #0
  4118e8:	mov	x2, #0x0                   	// #0
  4118ec:	bl	4026e0 <iconv@plt>
  4118f0:	cmn	x0, #0x1
  4118f4:	b.eq	4119dc <ferror@plt+0xf06c>  // b.none
  4118f8:	ldp	x1, x0, [x19]
  4118fc:	ldr	x2, [x19, #16]
  411900:	add	x1, x1, x2
  411904:	sub	x0, x0, x2
  411908:	stp	x22, x1, [sp, #48]
  41190c:	stp	x21, x0, [sp, #64]
  411910:	add	x4, sp, #0x48
  411914:	add	x3, sp, #0x38
  411918:	add	x2, sp, #0x40
  41191c:	add	x1, sp, #0x30
  411920:	mov	x0, x20
  411924:	bl	4026e0 <iconv@plt>
  411928:	ldr	x0, [sp, #64]
  41192c:	cbnz	x0, 4119e4 <ferror@plt+0xf074>
  411930:	add	x4, sp, #0x48
  411934:	add	x3, sp, #0x38
  411938:	mov	x0, x20
  41193c:	mov	x2, #0x0                   	// #0
  411940:	mov	x1, #0x0                   	// #0
  411944:	bl	4026e0 <iconv@plt>
  411948:	cmn	x0, #0x1
  41194c:	b.eq	411974 <ferror@plt+0xf004>  // b.none
  411950:	ldr	x0, [x19, #8]
  411954:	ldr	x1, [sp, #72]
  411958:	sub	x0, x0, x1
  41195c:	str	x0, [x19, #16]
  411960:	mov	w0, #0x1                   	// #1
  411964:	ldp	x19, x20, [sp, #16]
  411968:	ldp	x21, x22, [sp, #32]
  41196c:	ldp	x29, x30, [sp], #80
  411970:	ret
  411974:	bl	4028c0 <__errno_location@plt>
  411978:	ldr	w0, [x0]
  41197c:	cmp	w0, #0x7
  411980:	b.ne	4119dc <ferror@plt+0xf06c>  // b.any
  411984:	ldr	x0, [sp, #72]
  411988:	ldr	x1, [x19, #8]
  41198c:	add	x0, x0, #0x100
  411990:	str	x0, [sp, #72]
  411994:	ldr	x0, [x19]
  411998:	add	x1, x1, #0x100
  41199c:	str	x1, [x19, #8]
  4119a0:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4119a4:	str	x0, [x19]
  4119a8:	ldr	x1, [x19, #8]
  4119ac:	add	x4, sp, #0x48
  4119b0:	ldr	x2, [sp, #72]
  4119b4:	add	x3, sp, #0x38
  4119b8:	sub	x1, x1, x2
  4119bc:	mov	x2, #0x0                   	// #0
  4119c0:	add	x0, x0, x1
  4119c4:	mov	x1, #0x0                   	// #0
  4119c8:	str	x0, [sp, #56]
  4119cc:	mov	x0, x20
  4119d0:	bl	4026e0 <iconv@plt>
  4119d4:	cmn	x0, #0x1
  4119d8:	b.ne	411950 <ferror@plt+0xefe0>  // b.any
  4119dc:	mov	w0, #0x0                   	// #0
  4119e0:	b	411964 <ferror@plt+0xeff4>
  4119e4:	bl	4028c0 <__errno_location@plt>
  4119e8:	ldr	w0, [x0]
  4119ec:	cmp	w0, #0x7
  4119f0:	b.ne	4119dc <ferror@plt+0xf06c>  // b.any
  4119f4:	ldr	x0, [sp, #72]
  4119f8:	ldr	x1, [x19, #8]
  4119fc:	add	x0, x0, #0x100
  411a00:	str	x0, [sp, #72]
  411a04:	ldr	x0, [x19]
  411a08:	add	x1, x1, #0x100
  411a0c:	str	x1, [x19, #8]
  411a10:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  411a14:	str	x0, [x19]
  411a18:	ldr	x1, [x19, #8]
  411a1c:	ldr	x2, [sp, #72]
  411a20:	sub	x1, x1, x2
  411a24:	add	x0, x0, x1
  411a28:	str	x0, [sp, #56]
  411a2c:	b	411910 <ferror@plt+0xefa0>
  411a30:	stp	x29, x30, [sp, #-80]!
  411a34:	mov	x29, sp
  411a38:	stp	x21, x22, [sp, #32]
  411a3c:	mov	x21, x0
  411a40:	mov	x22, x1
  411a44:	ldp	x1, x0, [x4]
  411a48:	str	x2, [sp, #48]
  411a4c:	ldr	x2, [x4, #16]
  411a50:	stp	x19, x20, [sp, #16]
  411a54:	mov	x19, x4
  411a58:	str	x3, [sp, #64]
  411a5c:	add	x1, x1, x2
  411a60:	sub	x0, x0, x2
  411a64:	str	x1, [sp, #56]
  411a68:	str	x0, [sp, #72]
  411a6c:	add	x4, sp, #0x48
  411a70:	add	x3, sp, #0x38
  411a74:	add	x2, sp, #0x40
  411a78:	add	x1, sp, #0x30
  411a7c:	mov	x0, x22
  411a80:	blr	x21
  411a84:	mov	w20, w0
  411a88:	ldr	x0, [sp, #64]
  411a8c:	cbz	x0, 411aac <ferror@plt+0xf13c>
  411a90:	cbz	w20, 411a6c <ferror@plt+0xf0fc>
  411a94:	cmp	w20, #0x7
  411a98:	b.eq	411ad0 <ferror@plt+0xf160>  // b.none
  411a9c:	bl	4028c0 <__errno_location@plt>
  411aa0:	str	w20, [x0]
  411aa4:	mov	w0, #0x0                   	// #0
  411aa8:	b	411ac0 <ferror@plt+0xf150>
  411aac:	ldr	x0, [x19, #8]
  411ab0:	ldr	x1, [sp, #72]
  411ab4:	sub	x0, x0, x1
  411ab8:	str	x0, [x19, #16]
  411abc:	mov	w0, #0x1                   	// #1
  411ac0:	ldp	x19, x20, [sp, #16]
  411ac4:	ldp	x21, x22, [sp, #32]
  411ac8:	ldp	x29, x30, [sp], #80
  411acc:	ret
  411ad0:	ldr	x0, [sp, #72]
  411ad4:	ldr	x2, [x19, #8]
  411ad8:	add	x0, x0, #0x100
  411adc:	str	x0, [sp, #72]
  411ae0:	ldr	x0, [x19]
  411ae4:	add	x1, x2, #0x100
  411ae8:	str	x1, [x19, #8]
  411aec:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  411af0:	str	x0, [x19]
  411af4:	ldr	x2, [x19, #8]
  411af8:	ldr	x1, [sp, #72]
  411afc:	sub	x2, x2, x1
  411b00:	add	x2, x0, x2
  411b04:	str	x2, [sp, #56]
  411b08:	b	411a6c <ferror@plt+0xf0fc>
  411b0c:	mov	x4, x3
  411b10:	mov	x3, x2
  411b14:	mov	x2, x1
  411b18:	mov	x1, x0
  411b1c:	adrp	x0, 411000 <ferror@plt+0xe690>
  411b20:	add	x0, x0, #0xca8
  411b24:	b	411a30 <ferror@plt+0xf0c0>
  411b28:	mov	x4, x3
  411b2c:	mov	x3, x2
  411b30:	mov	x2, x1
  411b34:	mov	x1, x0
  411b38:	adrp	x0, 411000 <ferror@plt+0xe690>
  411b3c:	add	x0, x0, #0xbf8
  411b40:	b	411a30 <ferror@plt+0xf0c0>
  411b44:	mov	x4, x3
  411b48:	mov	x3, x2
  411b4c:	mov	x2, x1
  411b50:	mov	x1, x0
  411b54:	adrp	x0, 411000 <ferror@plt+0xe690>
  411b58:	add	x0, x0, #0x5f4
  411b5c:	b	411a30 <ferror@plt+0xf0c0>
  411b60:	mov	x4, x3
  411b64:	mov	x3, x2
  411b68:	mov	x2, x1
  411b6c:	mov	x1, x0
  411b70:	adrp	x0, 411000 <ferror@plt+0xe690>
  411b74:	add	x0, x0, #0x554
  411b78:	b	411a30 <ferror@plt+0xf0c0>
  411b7c:	stp	x29, x30, [sp, #-48]!
  411b80:	mov	x29, sp
  411b84:	ldr	x0, [x3, #16]
  411b88:	str	x21, [sp, #32]
  411b8c:	mov	x21, x1
  411b90:	stp	x19, x20, [sp, #16]
  411b94:	add	x0, x2, x0
  411b98:	ldr	x1, [x3, #8]
  411b9c:	mov	x20, x2
  411ba0:	mov	x19, x3
  411ba4:	cmp	x0, x1
  411ba8:	b.ls	411bc0 <ferror@plt+0xf250>  // b.plast
  411bac:	add	x1, x0, x0, lsr #2
  411bb0:	str	x1, [x3, #8]
  411bb4:	ldr	x0, [x3]
  411bb8:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  411bbc:	str	x0, [x19]
  411bc0:	ldr	x3, [x19]
  411bc4:	mov	x2, x20
  411bc8:	ldr	x0, [x19, #16]
  411bcc:	mov	x1, x21
  411bd0:	add	x0, x3, x0
  411bd4:	bl	4022e0 <memcpy@plt>
  411bd8:	ldr	x2, [x19, #16]
  411bdc:	mov	w0, #0x1                   	// #1
  411be0:	ldr	x21, [sp, #32]
  411be4:	add	x2, x2, x20
  411be8:	str	x2, [x19, #16]
  411bec:	ldp	x19, x20, [sp, #16]
  411bf0:	ldp	x29, x30, [sp], #48
  411bf4:	ret
  411bf8:	mov	x11, x1
  411bfc:	mov	x1, x3
  411c00:	ldr	x3, [x2]
  411c04:	mov	x10, x2
  411c08:	cmp	x3, #0x3
  411c0c:	b.ls	411c98 <ferror@plt+0xf328>  // b.plast
  411c10:	ldr	x7, [x11]
  411c14:	cmp	x0, #0x0
  411c18:	mov	x2, x4
  411c1c:	mov	x6, #0x3                   	// #3
  411c20:	cinc	x4, x7, eq  // eq = none
  411c24:	csel	x3, xzr, x6, ne  // ne = any
  411c28:	csel	x6, x6, xzr, ne  // ne = any
  411c2c:	ldrb	w4, [x4, #1]
  411c30:	ldrb	w3, [x7, x3]
  411c34:	ldrb	w0, [x7, x6]
  411c38:	lsl	w4, w4, #16
  411c3c:	add	w3, w4, w3, lsl #24
  411c40:	cinc	x4, x7, ne  // ne = any
  411c44:	ldrb	w5, [x4, #1]
  411c48:	add	w0, w0, w5, lsl #8
  411c4c:	add	w0, w0, w3
  411c50:	mov	w3, #0xffff2800            	// #-55296
  411c54:	add	w3, w0, w3
  411c58:	cmp	w3, #0x7ff
  411c5c:	mov	w3, #0x7ffffffe            	// #2147483646
  411c60:	ccmp	w0, w3, #0x2, hi  // hi = pmore
  411c64:	b.hi	411ca0 <ferror@plt+0xf330>  // b.pmore
  411c68:	stp	x29, x30, [sp, #-16]!
  411c6c:	mov	x29, sp
  411c70:	bl	411468 <ferror@plt+0xeaf8>
  411c74:	cbnz	w0, 411c90 <ferror@plt+0xf320>
  411c78:	ldr	x1, [x11]
  411c7c:	add	x1, x1, #0x4
  411c80:	str	x1, [x11]
  411c84:	ldr	x1, [x10]
  411c88:	sub	x1, x1, #0x4
  411c8c:	str	x1, [x10]
  411c90:	ldp	x29, x30, [sp], #16
  411c94:	ret
  411c98:	mov	w0, #0x16                  	// #22
  411c9c:	ret
  411ca0:	mov	w0, #0x54                  	// #84
  411ca4:	ret
  411ca8:	mov	x12, x1
  411cac:	mov	x1, x3
  411cb0:	ldr	x3, [x2]
  411cb4:	mov	x11, x2
  411cb8:	ldr	x5, [x12]
  411cbc:	cmp	x3, #0x1
  411cc0:	b.ls	411d88 <ferror@plt+0xf418>  // b.plast
  411cc4:	cmp	x0, #0x0
  411cc8:	mov	x2, x4
  411ccc:	cset	x4, eq  // eq = none
  411cd0:	mov	w7, #0xffff2400            	// #-56320
  411cd4:	ldrb	w10, [x5, x4]
  411cd8:	cset	x4, ne  // ne = any
  411cdc:	ldrb	w4, [x5, x4]
  411ce0:	add	w10, w4, w10, lsl #8
  411ce4:	add	w4, w10, w7
  411ce8:	cmp	w4, #0x3ff
  411cec:	b.ls	411d90 <ferror@plt+0xf420>  // b.plast
  411cf0:	mov	w4, #0xffff2800            	// #-55296
  411cf4:	add	w6, w10, w4
  411cf8:	cmp	w6, #0x3ff
  411cfc:	b.hi	411d38 <ferror@plt+0xf3c8>  // b.pmore
  411d00:	cmp	x3, #0x3
  411d04:	b.ls	411d88 <ferror@plt+0xf418>  // b.plast
  411d08:	cmp	x0, #0x0
  411d0c:	cinc	x3, x5, eq  // eq = none
  411d10:	cinc	x5, x5, ne  // ne = any
  411d14:	ldrb	w10, [x3, #2]
  411d18:	ldrb	w0, [x5, #2]
  411d1c:	add	w10, w0, w10, lsl #8
  411d20:	add	w7, w10, w7
  411d24:	cmp	w7, #0x3ff
  411d28:	b.hi	411d90 <ferror@plt+0xf420>  // b.pmore
  411d2c:	add	w10, w10, w6, lsl #10
  411d30:	mov	w0, #0x2400                	// #9216
  411d34:	add	w10, w10, w0
  411d38:	stp	x29, x30, [sp, #-16]!
  411d3c:	mov	w0, w10
  411d40:	mov	x29, sp
  411d44:	bl	411468 <ferror@plt+0xeaf8>
  411d48:	cbnz	w0, 411d70 <ferror@plt+0xf400>
  411d4c:	mov	w3, #0xffff                	// #65535
  411d50:	cmp	w10, w3
  411d54:	ldr	x2, [x11]
  411d58:	ldr	x1, [x12]
  411d5c:	b.hi	411d78 <ferror@plt+0xf408>  // b.pmore
  411d60:	sub	x2, x2, #0x2
  411d64:	add	x1, x1, #0x2
  411d68:	str	x1, [x12]
  411d6c:	str	x2, [x11]
  411d70:	ldp	x29, x30, [sp], #16
  411d74:	ret
  411d78:	add	x1, x1, #0x4
  411d7c:	sub	x2, x2, #0x4
  411d80:	str	x1, [x12]
  411d84:	b	411d6c <ferror@plt+0xf3fc>
  411d88:	mov	w0, #0x16                  	// #22
  411d8c:	ret
  411d90:	mov	w0, #0x54                  	// #84
  411d94:	ret
  411d98:	sub	w1, w1, #0x39
  411d9c:	cmp	w1, #0x9
  411da0:	b.hi	411dbc <ferror@plt+0xf44c>  // b.pmore
  411da4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  411da8:	add	x2, x2, #0xd88
  411dac:	ldrb	w1, [x2, w1, uxtw]
  411db0:	adr	x2, 411dbc <ferror@plt+0xf44c>
  411db4:	add	x1, x2, w1, sxtb #2
  411db8:	br	x1
  411dbc:	add	x0, x0, #0x208
  411dc0:	ldp	x2, x3, [x0]
  411dc4:	stp	x2, x3, [x8]
  411dc8:	ldr	x0, [x0, #16]
  411dcc:	str	x0, [x8, #16]
  411dd0:	ret
  411dd4:	add	x0, x0, #0x220
  411dd8:	b	411dc0 <ferror@plt+0xf450>
  411ddc:	add	x0, x0, #0x238
  411de0:	b	411dc0 <ferror@plt+0xf450>
  411de4:	add	x0, x0, #0x250
  411de8:	b	411dc0 <ferror@plt+0xf450>
  411dec:	add	x0, x0, #0x268
  411df0:	b	411dc0 <ferror@plt+0xf450>
  411df4:	stp	x29, x30, [sp, #-80]!
  411df8:	mov	x29, sp
  411dfc:	stp	x23, x24, [sp, #48]
  411e00:	ldr	x23, [x0, #1216]
  411e04:	stp	x19, x20, [sp, #16]
  411e08:	mov	x19, x2
  411e0c:	stp	x21, x22, [sp, #32]
  411e10:	mov	w20, w1
  411e14:	cmp	x23, w3, sxtw
  411e18:	ldr	x22, [x2, #16]
  411e1c:	ldr	x2, [x2, #8]
  411e20:	str	x25, [sp, #64]
  411e24:	b.eq	411ec8 <ferror@plt+0xf558>  // b.none
  411e28:	sxtw	x21, w3
  411e2c:	cmp	x23, #0x20
  411e30:	mov	x24, #0x20                  	// #32
  411e34:	ldrb	w25, [x0, #1242]
  411e38:	csel	x0, x23, x24, ls  // ls = plast
  411e3c:	mov	x24, #0x1                   	// #1
  411e40:	udiv	x21, x21, x23
  411e44:	lsl	x24, x24, x0
  411e48:	sub	x24, x24, #0x1
  411e4c:	add	x0, x21, x22
  411e50:	cmp	x0, x2
  411e54:	b.ls	411e6c <ferror@plt+0xf4fc>  // b.plast
  411e58:	ldr	x0, [x19]
  411e5c:	add	x1, x2, #0x100
  411e60:	str	x1, [x19, #8]
  411e64:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  411e68:	str	x0, [x19]
  411e6c:	sub	x4, x21, #0x1
  411e70:	mov	x0, #0x0                   	// #0
  411e74:	cmp	x21, x0
  411e78:	b.eq	411ea4 <ferror@plt+0xf534>  // b.none
  411e7c:	ldr	x1, [x19]
  411e80:	sub	x2, x4, x0
  411e84:	cmp	w25, #0x0
  411e88:	and	w3, w20, w24
  411e8c:	csel	x2, x2, x0, ne  // ne = any
  411e90:	lsr	w20, w20, w23
  411e94:	add	x1, x1, x2
  411e98:	add	x0, x0, #0x1
  411e9c:	strb	w3, [x1, x22]
  411ea0:	b	411e74 <ferror@plt+0xf504>
  411ea4:	ldr	x0, [x19, #16]
  411ea8:	add	x21, x0, x21
  411eac:	str	x21, [x19, #16]
  411eb0:	ldp	x19, x20, [sp, #16]
  411eb4:	ldp	x21, x22, [sp, #32]
  411eb8:	ldp	x23, x24, [sp, #48]
  411ebc:	ldr	x25, [sp, #64]
  411ec0:	ldp	x29, x30, [sp], #80
  411ec4:	ret
  411ec8:	add	x22, x22, #0x1
  411ecc:	cmp	x22, x2
  411ed0:	b.ls	411ee8 <ferror@plt+0xf578>  // b.plast
  411ed4:	ldr	x0, [x19]
  411ed8:	add	x1, x2, #0x100
  411edc:	str	x1, [x19, #8]
  411ee0:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  411ee4:	str	x0, [x19]
  411ee8:	ldr	x1, [x19]
  411eec:	ldr	x0, [x19, #16]
  411ef0:	add	x2, x0, #0x1
  411ef4:	str	x2, [x19, #16]
  411ef8:	strb	w20, [x1, x0]
  411efc:	b	411eb0 <ferror@plt+0xf540>
  411f00:	stp	x29, x30, [sp, #-96]!
  411f04:	mov	x29, sp
  411f08:	stp	x19, x20, [sp, #16]
  411f0c:	mov	x19, x0
  411f10:	adrp	x20, 44c000 <_obstack_memory_used@@Base+0x12198>
  411f14:	stp	x21, x22, [sp, #32]
  411f18:	add	x20, x20, #0xd63
  411f1c:	ldrb	w22, [x0, #1242]
  411f20:	ldr	x1, [x0, #1168]
  411f24:	ldr	x21, [x0, #1176]
  411f28:	ldr	x0, [x0, #1232]
  411f2c:	str	x23, [sp, #48]
  411f30:	cmp	x0, #0x1f
  411f34:	b.ls	412088 <ferror@plt+0xf718>  // b.plast
  411f38:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  411f3c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  411f40:	cmp	w22, #0x0
  411f44:	add	x2, x2, #0xd15
  411f48:	add	x0, x0, #0xd24
  411f4c:	csel	x0, x0, x2, ne  // ne = any
  411f50:	cmp	x1, #0x0
  411f54:	add	x23, x19, #0x208
  411f58:	csel	x1, x1, x20, ne  // ne = any
  411f5c:	cmp	x21, #0x0
  411f60:	csel	x21, x21, x0, ne  // ne = any
  411f64:	add	x8, sp, #0x40
  411f68:	mov	x2, x20
  411f6c:	mov	x0, x19
  411f70:	bl	411728 <ferror@plt+0xedb8>
  411f74:	ldp	x0, x1, [sp, #64]
  411f78:	stp	x0, x1, [x23]
  411f7c:	add	x23, x19, #0x220
  411f80:	ldr	x0, [sp, #80]
  411f84:	str	x0, [x19, #536]
  411f88:	ldr	x0, [x19, #1216]
  411f8c:	str	w0, [x19, #536]
  411f90:	add	x8, sp, #0x40
  411f94:	mov	x2, x20
  411f98:	mov	x1, x20
  411f9c:	mov	x0, x19
  411fa0:	bl	411728 <ferror@plt+0xedb8>
  411fa4:	ldp	x0, x1, [sp, #64]
  411fa8:	stp	x0, x1, [x23]
  411fac:	cmp	w22, #0x0
  411fb0:	ldr	x0, [sp, #80]
  411fb4:	str	x0, [x19, #560]
  411fb8:	ldr	x0, [x19, #1216]
  411fbc:	str	w0, [x19, #560]
  411fc0:	add	x23, x19, #0x238
  411fc4:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  411fc8:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  411fcc:	add	x1, x1, #0xd42
  411fd0:	add	x0, x0, #0xd33
  411fd4:	add	x8, sp, #0x40
  411fd8:	csel	x1, x1, x0, ne  // ne = any
  411fdc:	mov	x2, x20
  411fe0:	mov	x0, x19
  411fe4:	bl	411728 <ferror@plt+0xedb8>
  411fe8:	ldp	x0, x1, [sp, #64]
  411fec:	stp	x0, x1, [x23]
  411ff0:	cmp	w22, #0x0
  411ff4:	ldr	x0, [sp, #80]
  411ff8:	str	x0, [x19, #584]
  411ffc:	mov	w0, #0x10                  	// #16
  412000:	str	w0, [x19, #584]
  412004:	add	x22, x19, #0x250
  412008:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  41200c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412010:	add	x1, x1, #0xd24
  412014:	add	x0, x0, #0xd15
  412018:	add	x8, sp, #0x40
  41201c:	csel	x1, x1, x0, ne  // ne = any
  412020:	mov	x2, x20
  412024:	mov	x0, x19
  412028:	bl	411728 <ferror@plt+0xedb8>
  41202c:	ldp	x0, x1, [sp, #64]
  412030:	stp	x0, x1, [x22]
  412034:	add	x22, x19, #0x268
  412038:	ldr	x0, [sp, #80]
  41203c:	str	x0, [x19, #608]
  412040:	mov	w0, #0x20                  	// #32
  412044:	str	w0, [x19, #608]
  412048:	add	x8, sp, #0x40
  41204c:	mov	x2, x20
  412050:	mov	x1, x21
  412054:	mov	x0, x19
  412058:	bl	411728 <ferror@plt+0xedb8>
  41205c:	ldp	x0, x1, [sp, #64]
  412060:	stp	x0, x1, [x22]
  412064:	ldr	x0, [sp, #80]
  412068:	ldp	x21, x22, [sp, #32]
  41206c:	ldr	x23, [sp, #48]
  412070:	str	x0, [x19, #632]
  412074:	ldr	x0, [x19, #1232]
  412078:	str	w0, [x19, #632]
  41207c:	ldp	x19, x20, [sp, #16]
  412080:	ldp	x29, x30, [sp], #96
  412084:	ret
  412088:	cmp	x0, #0xf
  41208c:	b.ls	4120a8 <ferror@plt+0xf738>  // b.plast
  412090:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  412094:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412098:	cmp	w22, #0x0
  41209c:	add	x2, x2, #0xd33
  4120a0:	add	x0, x0, #0xd42
  4120a4:	b	411f4c <ferror@plt+0xf5dc>
  4120a8:	mov	x0, x20
  4120ac:	b	411f50 <ferror@plt+0xf5e0>
  4120b0:	stp	x29, x30, [sp, #-32]!
  4120b4:	mov	x29, sp
  4120b8:	stp	x19, x20, [sp, #16]
  4120bc:	mov	x19, x0
  4120c0:	adrp	x20, 411000 <ferror@plt+0xe690>
  4120c4:	ldr	x0, [x0, #520]
  4120c8:	add	x20, x20, #0x8bc
  4120cc:	cmp	x0, x20
  4120d0:	b.ne	4120dc <ferror@plt+0xf76c>  // b.any
  4120d4:	ldr	x0, [x19, #528]
  4120d8:	bl	402390 <iconv_close@plt>
  4120dc:	ldr	x0, [x19, #544]
  4120e0:	cmp	x0, x20
  4120e4:	b.ne	4120f0 <ferror@plt+0xf780>  // b.any
  4120e8:	ldr	x0, [x19, #552]
  4120ec:	bl	402390 <iconv_close@plt>
  4120f0:	ldr	x0, [x19, #568]
  4120f4:	cmp	x0, x20
  4120f8:	b.ne	412104 <ferror@plt+0xf794>  // b.any
  4120fc:	ldr	x0, [x19, #576]
  412100:	bl	402390 <iconv_close@plt>
  412104:	ldr	x0, [x19, #592]
  412108:	cmp	x0, x20
  41210c:	b.ne	412118 <ferror@plt+0xf7a8>  // b.any
  412110:	ldr	x0, [x19, #600]
  412114:	bl	402390 <iconv_close@plt>
  412118:	ldr	x0, [x19, #616]
  41211c:	cmp	x0, x20
  412120:	b.ne	412134 <ferror@plt+0xf7c4>  // b.any
  412124:	ldr	x0, [x19, #624]
  412128:	ldp	x19, x20, [sp, #16]
  41212c:	ldp	x29, x30, [sp], #32
  412130:	b	402390 <iconv_close@plt>
  412134:	ldp	x19, x20, [sp, #16]
  412138:	ldp	x29, x30, [sp], #32
  41213c:	ret
  412140:	stp	x29, x30, [sp, #-80]!
  412144:	cmp	w1, #0x7e
  412148:	mov	x29, sp
  41214c:	stp	x19, x20, [sp, #16]
  412150:	mov	w20, w1
  412154:	str	x21, [sp, #32]
  412158:	b.ls	412174 <ferror@plt+0xf804>  // b.plast
  41215c:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  412160:	add	x2, x2, #0x7ac
  412164:	mov	w3, w1
  412168:	mov	w1, #0x4                   	// #4
  41216c:	bl	419440 <ferror@plt+0x16ad0>
  412170:	b	4121c8 <ferror@plt+0xf858>
  412174:	mov	x19, x0
  412178:	mov	x21, #0x1                   	// #1
  41217c:	mov	x0, x21
  412180:	strb	w1, [sp, #48]
  412184:	str	x21, [sp, #64]
  412188:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41218c:	str	x0, [sp, #56]
  412190:	add	x3, sp, #0x38
  412194:	ldr	x4, [x19, #520]
  412198:	str	xzr, [sp, #72]
  41219c:	ldr	x0, [x19, #528]
  4121a0:	mov	x2, x21
  4121a4:	add	x1, sp, #0x30
  4121a8:	blr	x4
  4121ac:	tst	w0, #0xff
  4121b0:	b.ne	4121e0 <ferror@plt+0xf870>  // b.any
  4121b4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4121b8:	mov	x0, x19
  4121bc:	add	x2, x2, #0x7e6
  4121c0:	mov	w1, #0x4                   	// #4
  4121c4:	bl	4198e4 <ferror@plt+0x16f74>
  4121c8:	mov	w19, #0x0                   	// #0
  4121cc:	mov	w0, w19
  4121d0:	ldp	x19, x20, [sp, #16]
  4121d4:	ldr	x21, [sp, #32]
  4121d8:	ldp	x29, x30, [sp], #80
  4121dc:	ret
  4121e0:	ldr	x0, [sp, #72]
  4121e4:	cmp	x0, #0x1
  4121e8:	b.eq	412204 <ferror@plt+0xf894>  // b.none
  4121ec:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4121f0:	mov	w3, w20
  4121f4:	add	x2, x2, #0x80c
  4121f8:	mov	x0, x19
  4121fc:	mov	w1, #0x4                   	// #4
  412200:	b	41216c <ferror@plt+0xf7fc>
  412204:	ldr	x0, [sp, #56]
  412208:	ldrb	w19, [x0]
  41220c:	bl	402730 <free@plt>
  412210:	b	4121cc <ferror@plt+0xf85c>
  412214:	stp	x29, x30, [sp, #-32]!
  412218:	mov	x29, sp
  41221c:	str	x19, [sp, #16]
  412220:	mov	x19, x0
  412224:	mov	x0, #0x800000000           	// #34359738368
  412228:	stp	xzr, x0, [x19]
  41222c:	mov	x0, #0x40                  	// #64
  412230:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  412234:	str	x0, [x19]
  412238:	ldr	x19, [sp, #16]
  41223c:	ldp	x29, x30, [sp], #32
  412240:	ret
  412244:	ldr	x0, [x0]
  412248:	b	402730 <free@plt>
  41224c:	stp	x29, x30, [sp, #-32]!
  412250:	mov	x29, sp
  412254:	stp	x19, x20, [sp, #16]
  412258:	mov	x19, x0
  41225c:	mov	x20, x1
  412260:	ldr	w0, [x0, #12]
  412264:	ldr	w1, [x19, #8]
  412268:	cmp	w1, w0
  41226c:	b.lt	412288 <ferror@plt+0xf918>  // b.tstop
  412270:	lsl	w0, w0, #1
  412274:	str	w0, [x19, #12]
  412278:	sbfiz	x1, x0, #3, #32
  41227c:	ldr	x0, [x19]
  412280:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  412284:	str	x0, [x19]
  412288:	ldr	w0, [x19, #8]
  41228c:	ldr	x1, [x19]
  412290:	add	w2, w0, #0x1
  412294:	str	w2, [x19, #8]
  412298:	str	x20, [x1, w0, sxtw #3]
  41229c:	ldp	x19, x20, [sp, #16]
  4122a0:	ldp	x29, x30, [sp], #32
  4122a4:	ret
  4122a8:	stp	x29, x30, [sp, #-64]!
  4122ac:	adrp	x13, 457000 <_obstack_memory_used@@Base+0x1d198>
  4122b0:	adrp	x14, 456000 <_obstack_memory_used@@Base+0x1c198>
  4122b4:	mov	x29, sp
  4122b8:	stp	x19, x20, [sp, #16]
  4122bc:	mov	x19, x0
  4122c0:	add	x0, x2, #0x10
  4122c4:	and	x0, x0, #0xfffffffffffffff0
  4122c8:	mov	x12, x1
  4122cc:	mov	x11, x2
  4122d0:	add	x13, x13, #0x21a
  4122d4:	add	x14, x14, #0xf08
  4122d8:	str	x21, [sp, #32]
  4122dc:	sub	sp, sp, x0
  4122e0:	mov	x10, #0x0                   	// #0
  4122e4:	mov	x20, sp
  4122e8:	str	x20, [x29, #48]
  4122ec:	cmp	x10, x11
  4122f0:	ldr	x1, [x29, #48]
  4122f4:	b.cs	4123ac <ferror@plt+0xfa3c>  // b.hs, b.nlast
  4122f8:	ldrb	w0, [x12, x10]
  4122fc:	cmp	w0, #0x5c
  412300:	b.eq	412318 <ferror@plt+0xf9a8>  // b.none
  412304:	add	x2, x1, #0x1
  412308:	str	x2, [x29, #48]
  41230c:	strb	w0, [x1]
  412310:	add	x10, x10, #0x1
  412314:	b	4122ec <ferror@plt+0xf97c>
  412318:	add	x0, x12, x10
  41231c:	mov	w2, #0x4                   	// #4
  412320:	add	x10, x10, #0x2
  412324:	ldrb	w0, [x0, #1]
  412328:	cmp	w0, #0x75
  41232c:	mov	w0, #0x8                   	// #8
  412330:	csel	w2, w2, w0, eq  // eq = none
  412334:	sub	x0, x1, x20
  412338:	sub	x0, x11, x0
  41233c:	str	x0, [x29, #56]
  412340:	mov	w0, #0x0                   	// #0
  412344:	cmp	w2, #0x0
  412348:	ccmp	x10, x11, #0x2, ne  // ne = any
  41234c:	b.cs	412370 <ferror@plt+0xfa00>  // b.hs, b.nlast
  412350:	ldrb	w3, [x12, x10]
  412354:	ldrh	w4, [x13, x3, lsl #1]
  412358:	tbz	w4, #8, 412370 <ferror@plt+0xfa00>
  41235c:	ldrb	w3, [x14, x3]
  412360:	add	x10, x10, #0x1
  412364:	sub	w2, w2, #0x1
  412368:	add	w0, w3, w0, lsl #4
  41236c:	b	412344 <ferror@plt+0xf9d4>
  412370:	sub	x10, x10, #0x1
  412374:	cmp	w0, #0x24
  412378:	b.eq	412304 <ferror@plt+0xf994>  // b.none
  41237c:	add	x2, x29, #0x38
  412380:	add	x1, x29, #0x30
  412384:	bl	411468 <ferror@plt+0xeaf8>
  412388:	mov	w21, w0
  41238c:	cbz	w0, 412310 <ferror@plt+0xf9a0>
  412390:	bl	4028c0 <__errno_location@plt>
  412394:	str	w21, [x0]
  412398:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  41239c:	mov	x0, x19
  4123a0:	add	x2, x2, #0x846
  4123a4:	mov	w1, #0x3                   	// #3
  4123a8:	bl	4198e4 <ferror@plt+0x16f74>
  4123ac:	ldr	x0, [x19, #1088]
  4123b0:	mov	x1, x20
  4123b4:	ldr	x2, [x29, #48]
  4123b8:	mov	w3, #0x1                   	// #1
  4123bc:	sub	x2, x2, x20
  4123c0:	bl	4298b4 <ferror@plt+0x26f44>
  4123c4:	mov	sp, x29
  4123c8:	ldp	x19, x20, [sp, #16]
  4123cc:	ldr	x21, [sp, #32]
  4123d0:	ldp	x29, x30, [sp], #64
  4123d4:	ret
  4123d8:	stp	x29, x30, [sp, #-128]!
  4123dc:	mov	x29, sp
  4123e0:	stp	x23, x24, [sp, #48]
  4123e4:	adrp	x24, 44c000 <_obstack_memory_used@@Base+0x12198>
  4123e8:	add	x24, x24, #0xd63
  4123ec:	mov	x23, x0
  4123f0:	add	x8, sp, #0x50
  4123f4:	stp	x19, x20, [sp, #16]
  4123f8:	mov	x20, x2
  4123fc:	mov	x19, x4
  412400:	mov	x2, x1
  412404:	mov	x1, x24
  412408:	stp	x21, x22, [sp, #32]
  41240c:	mov	x22, x5
  412410:	mov	x21, x6
  412414:	stp	x25, x26, [sp, #64]
  412418:	mov	x26, x3
  41241c:	bl	411728 <ferror@plt+0xedb8>
  412420:	ldr	x25, [sp, #80]
  412424:	adrp	x0, 411000 <ferror@plt+0xe690>
  412428:	add	x0, x0, #0xb7c
  41242c:	cmp	x25, x0
  412430:	b.ne	4124f4 <ferror@plt+0xfb84>  // b.any
  412434:	stp	x20, x26, [sp, #104]
  412438:	str	x19, [sp, #120]
  41243c:	ldp	x2, x0, [sp, #112]
  412440:	add	x1, x0, #0x10
  412444:	add	x0, x0, #0x1, lsl #12
  412448:	cmp	x0, x2
  41244c:	b.cc	412458 <ferror@plt+0xfae8>  // b.lo, b.ul, b.last
  412450:	cmp	x2, x1
  412454:	b.cs	412464 <ferror@plt+0xfaf4>  // b.hs, b.nlast
  412458:	ldr	x0, [sp, #104]
  41245c:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  412460:	str	x0, [sp, #104]
  412464:	ldr	x0, [sp, #104]
  412468:	ldr	x1, [sp, #120]
  41246c:	add	x0, x0, x1
  412470:	stp	xzr, xzr, [x0]
  412474:	ldr	x0, [sp, #120]
  412478:	ldr	x1, [sp, #104]
  41247c:	cbz	x0, 412570 <ferror@plt+0xfc00>
  412480:	add	x2, x1, x0
  412484:	ldurb	w2, [x2, #-1]
  412488:	cmp	w2, #0xd
  41248c:	b.ne	412570 <ferror@plt+0xfc00>  // b.any
  412490:	strb	w2, [x1, x0]
  412494:	ldr	x0, [sp, #120]
  412498:	str	x0, [x21]
  41249c:	ldr	x1, [sp, #104]
  4124a0:	cmp	x0, #0x2
  4124a4:	b.ls	412578 <ferror@plt+0xfc08>  // b.plast
  4124a8:	ldrb	w2, [x1]
  4124ac:	cmp	w2, #0xef
  4124b0:	b.ne	412578 <ferror@plt+0xfc08>  // b.any
  4124b4:	ldrb	w2, [x1, #1]
  4124b8:	cmp	w2, #0xbb
  4124bc:	b.ne	412578 <ferror@plt+0xfc08>  // b.any
  4124c0:	ldrb	w2, [x1, #2]
  4124c4:	cmp	w2, #0xbf
  4124c8:	b.ne	412578 <ferror@plt+0xfc08>  // b.any
  4124cc:	sub	x0, x0, #0x3
  4124d0:	str	x0, [x21]
  4124d4:	add	x0, x1, #0x3
  4124d8:	ldp	x19, x20, [sp, #16]
  4124dc:	ldp	x23, x24, [sp, #48]
  4124e0:	ldp	x25, x26, [sp, #64]
  4124e4:	str	x1, [x22]
  4124e8:	ldp	x21, x22, [sp, #32]
  4124ec:	ldp	x29, x30, [sp], #128
  4124f0:	ret
  4124f4:	cmp	x19, #0x10, lsl #12
  4124f8:	mov	x0, #0x10000               	// #65536
  4124fc:	ldr	x26, [sp, #88]
  412500:	csel	x0, x19, x0, cs  // cs = hs, nlast
  412504:	str	x0, [sp, #112]
  412508:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41250c:	str	x0, [sp, #104]
  412510:	add	x3, sp, #0x68
  412514:	str	xzr, [sp, #120]
  412518:	mov	x2, x19
  41251c:	mov	x1, x20
  412520:	mov	x0, x26
  412524:	blr	x25
  412528:	tst	w0, #0xff
  41252c:	b.ne	41254c <ferror@plt+0xfbdc>  // b.any
  412530:	ldr	x3, [x23, #1184]
  412534:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  412538:	mov	x4, x24
  41253c:	add	x2, x2, #0x86d
  412540:	mov	x0, x23
  412544:	mov	w1, #0x3                   	// #3
  412548:	bl	419440 <ferror@plt+0x16ad0>
  41254c:	mov	x0, x20
  412550:	bl	402730 <free@plt>
  412554:	adrp	x0, 411000 <ferror@plt+0xe690>
  412558:	add	x0, x0, #0x8bc
  41255c:	cmp	x25, x0
  412560:	b.ne	41243c <ferror@plt+0xfacc>  // b.any
  412564:	mov	x0, x26
  412568:	bl	402390 <iconv_close@plt>
  41256c:	b	41243c <ferror@plt+0xfacc>
  412570:	mov	w2, #0xa                   	// #10
  412574:	b	412490 <ferror@plt+0xfb20>
  412578:	mov	x0, x1
  41257c:	b	4124d8 <ferror@plt+0xfb68>
  412580:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412584:	add	x0, x0, #0xd63
  412588:	ret
  41258c:	stp	x29, x30, [sp, #-32]!
  412590:	mov	x29, sp
  412594:	stp	x19, x20, [sp, #16]
  412598:	mov	x20, x0
  41259c:	mov	x19, x2
  4125a0:	mov	x0, x2
  4125a4:	str	x2, [x20, #8]
  4125a8:	bl	423a00 <ferror@plt+0x21090>
  4125ac:	mov	w1, w0
  4125b0:	mov	x3, #0x0                   	// #0
  4125b4:	mov	w2, #0x1                   	// #1
  4125b8:	mov	x0, x19
  4125bc:	bl	423cf4 <ferror@plt+0x21384>
  4125c0:	mov	w1, w0
  4125c4:	str	w1, [x20]
  4125c8:	mov	x0, x19
  4125cc:	bl	423714 <ferror@plt+0x20da4>
  4125d0:	ldrb	w1, [x0, #7]
  4125d4:	mov	w0, #0x1                   	// #1
  4125d8:	lsl	w0, w0, w1
  4125dc:	str	w0, [x20, #4]
  4125e0:	ldp	x19, x20, [sp, #16]
  4125e4:	ldp	x29, x30, [sp], #32
  4125e8:	ret
  4125ec:	mov	x1, x0
  4125f0:	ldr	w0, [x0]
  4125f4:	mov	w2, #0x60000000            	// #1610612736
  4125f8:	cmp	w0, w2
  4125fc:	b.hi	41260c <ferror@plt+0xfc9c>  // b.pmore
  412600:	ldr	w2, [x1, #4]
  412604:	add	w2, w2, w0
  412608:	str	w2, [x1]
  41260c:	bfi	x0, x0, #32, #32
  412610:	ret
  412614:	stp	x29, x30, [sp, #-48]!
  412618:	mov	x29, sp
  41261c:	stp	x19, x20, [sp, #16]
  412620:	mov	x20, x0
  412624:	mov	w19, #0x0                   	// #0
  412628:	stp	x21, x22, [sp, #32]
  41262c:	mov	w22, w1
  412630:	mov	x21, x2
  412634:	cmp	w19, w22
  412638:	b.ge	412658 <ferror@plt+0xfce8>  // b.tcont
  41263c:	mov	x0, x21
  412640:	bl	4125ec <ferror@plt+0xfc7c>
  412644:	add	w19, w19, #0x1
  412648:	mov	x1, x0
  41264c:	mov	x0, x20
  412650:	bl	41224c <ferror@plt+0xf8dc>
  412654:	b	412634 <ferror@plt+0xfcc4>
  412658:	ldp	x19, x20, [sp, #16]
  41265c:	ldp	x21, x22, [sp, #32]
  412660:	ldp	x29, x30, [sp], #48
  412664:	ret
  412668:	stp	x29, x30, [sp, #-112]!
  41266c:	mov	x29, sp
  412670:	stp	x19, x20, [sp, #16]
  412674:	mov	x20, x0
  412678:	stp	x21, x22, [sp, #32]
  41267c:	mov	x21, x4
  412680:	stp	x23, x24, [sp, #48]
  412684:	mov	w23, w3
  412688:	mov	x24, x5
  41268c:	stp	x25, x26, [sp, #64]
  412690:	mov	x25, x1
  412694:	mov	x26, x6
  412698:	stp	x27, x28, [sp, #80]
  41269c:	mov	x27, x7
  4126a0:	ldr	x22, [x1]
  4126a4:	str	x2, [sp, #104]
  4126a8:	ldrb	w1, [x0, #1120]
  4126ac:	cbnz	w1, 41273c <ferror@plt+0xfdcc>
  4126b0:	ldrb	w2, [x0, #1152]
  4126b4:	cbnz	w2, 41273c <ferror@plt+0xfdcc>
  4126b8:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4126bc:	add	x2, x2, #0x889
  4126c0:	bl	419440 <ferror@plt+0x16ad0>
  4126c4:	ldurb	w0, [x22, #-1]
  4126c8:	cmp	w0, #0x75
  4126cc:	b.eq	4126ec <ferror@plt+0xfd7c>  // b.none
  4126d0:	cmp	w0, #0x55
  4126d4:	b.eq	412784 <ferror@plt+0xfe14>  // b.none
  4126d8:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4126dc:	mov	x0, x20
  4126e0:	add	x2, x2, #0x92e
  4126e4:	mov	w1, #0x4                   	// #4
  4126e8:	bl	419440 <ferror@plt+0x16ad0>
  4126ec:	mov	w3, #0x4                   	// #4
  4126f0:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x1d198>
  4126f4:	adrp	x6, 456000 <_obstack_memory_used@@Base+0x1c198>
  4126f8:	mov	x28, x22
  4126fc:	add	x4, x4, #0x21a
  412700:	add	x6, x6, #0xf08
  412704:	mov	w19, #0x0                   	// #0
  412708:	ldrb	w0, [x28]
  41270c:	ldrb	w7, [x28]
  412710:	ldrh	w0, [x4, x0, lsl #1]
  412714:	tbz	w0, #8, 4127b8 <ferror@plt+0xfe48>
  412718:	add	x28, x28, #0x1
  41271c:	cbz	x27, 41279c <ferror@plt+0xfe2c>
  412720:	cbnz	x26, 41278c <ferror@plt+0xfe1c>
  412724:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  412728:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  41272c:	add	x2, x2, #0x94e
  412730:	add	x0, x0, #0x95d
  412734:	mov	w1, #0x434                 	// #1076
  412738:	bl	402980 <ferror@plt+0x10>
  41273c:	ldrsb	w0, [x20, #1198]
  412740:	cmp	w0, #0x0
  412744:	b.le	41275c <ferror@plt+0xfdec>
  412748:	cbnz	w1, 41275c <ferror@plt+0xfdec>
  41274c:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  412750:	mov	x0, x20
  412754:	add	x2, x2, #0x8c1
  412758:	b	4126c0 <ferror@plt+0xfd50>
  41275c:	ldrb	w0, [x20, #1138]
  412760:	cbz	w0, 4126c4 <ferror@plt+0xfd54>
  412764:	cbnz	w23, 4126c4 <ferror@plt+0xfd54>
  412768:	ldurb	w3, [x22, #-1]
  41276c:	mov	x0, x20
  412770:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  412774:	mov	w1, #0x6                   	// #6
  412778:	add	x2, x2, #0x8fb
  41277c:	bl	4194ac <ferror@plt+0x16b3c>
  412780:	b	4126c4 <ferror@plt+0xfd54>
  412784:	mov	w3, #0x8                   	// #8
  412788:	b	4126f0 <ferror@plt+0xfd80>
  41278c:	mov	x0, x27
  412790:	bl	4125ec <ferror@plt+0xfc7c>
  412794:	lsr	x0, x0, #32
  412798:	str	w0, [x26, #4]
  41279c:	ldrb	w0, [x6, w7, sxtw]
  4127a0:	subs	w3, w3, #0x1
  4127a4:	add	w19, w0, w19, lsl #4
  4127a8:	b.eq	4127b8 <ferror@plt+0xfe48>  // b.none
  4127ac:	ldr	x0, [sp, #104]
  4127b0:	cmp	x28, x0
  4127b4:	b.cc	412708 <ferror@plt+0xfd98>  // b.lo, b.ul, b.last
  4127b8:	cmp	w23, #0x0
  4127bc:	cset	w0, ne  // ne = any
  4127c0:	cmp	w3, #0x0
  4127c4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4127c8:	b.eq	4127f0 <ferror@plt+0xfe80>  // b.none
  4127cc:	mov	w0, #0x0                   	// #0
  4127d0:	str	wzr, [x24]
  4127d4:	ldp	x19, x20, [sp, #16]
  4127d8:	ldp	x21, x22, [sp, #32]
  4127dc:	ldp	x23, x24, [sp, #48]
  4127e0:	ldp	x25, x26, [sp, #64]
  4127e4:	ldp	x27, x28, [sp, #80]
  4127e8:	ldp	x29, x30, [sp], #112
  4127ec:	ret
  4127f0:	str	x28, [x25]
  4127f4:	sub	x22, x22, #0x2
  4127f8:	cbz	w3, 412828 <ferror@plt+0xfeb8>
  4127fc:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  412800:	mov	x4, x22
  412804:	sub	w3, w28, w22
  412808:	add	x2, x2, #0x974
  41280c:	mov	w19, #0x1                   	// #1
  412810:	mov	x0, x20
  412814:	mov	w1, #0x3                   	// #3
  412818:	bl	419440 <ferror@plt+0x16ad0>
  41281c:	mov	w0, #0x1                   	// #1
  412820:	str	w19, [x24]
  412824:	b	4127d4 <ferror@plt+0xfe64>
  412828:	cmp	w19, #0x9f
  41282c:	b.hi	4128a4 <ferror@plt+0xff34>  // b.pmore
  412830:	ldrb	w1, [x20, #1120]
  412834:	cbnz	w1, 41284c <ferror@plt+0xfedc>
  412838:	and	w1, w19, #0xffffffdf
  41283c:	cmp	w1, #0x40
  412840:	mov	w1, #0x24                  	// #36
  412844:	ccmp	w19, w1, #0x4, ne  // ne = any
  412848:	b.ne	4128b8 <ferror@plt+0xff48>  // b.any
  41284c:	cmp	w19, #0x24
  412850:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  412854:	b.ne	4128cc <ferror@plt+0xff5c>  // b.any
  412858:	cbz	w23, 41281c <ferror@plt+0xfeac>
  41285c:	mov	w0, #0x10ffff              	// #1114111
  412860:	cmp	w19, w0
  412864:	b.hi	414f80 <ferror@plt+0x12610>  // b.pmore
  412868:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0x13198>
  41286c:	add	x2, x2, #0x8a0
  412870:	mov	w3, #0x73c                 	// #1852
  412874:	mov	w0, #0x0                   	// #0
  412878:	mov	w4, #0x2                   	// #2
  41287c:	cmp	w3, w0
  412880:	b.eq	412914 <ferror@plt+0xffa4>  // b.none
  412884:	add	w1, w3, w0
  412888:	sdiv	w1, w1, w4
  41288c:	add	x6, x2, w1, sxtw #3
  412890:	ldr	w6, [x6, #4]
  412894:	cmp	w19, w6
  412898:	b.ls	41290c <ferror@plt+0xff9c>  // b.plast
  41289c:	add	w0, w1, #0x1
  4128a0:	b	41287c <ferror@plt+0xff0c>
  4128a4:	tbnz	w19, #31, 4128b8 <ferror@plt+0xff48>
  4128a8:	mov	w18, #0xffff2800            	// #-55296
  4128ac:	add	w0, w19, w18
  4128b0:	cmp	w0, #0x7ff
  4128b4:	b.hi	412858 <ferror@plt+0xfee8>  // b.pmore
  4128b8:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4128bc:	mov	x4, x22
  4128c0:	sub	w3, w28, w22
  4128c4:	add	x2, x2, #0x99d
  4128c8:	b	41280c <ferror@plt+0xfe9c>
  4128cc:	ldrb	w0, [x20, #1146]
  4128d0:	cbz	w0, 412868 <ferror@plt+0xfef8>
  4128d4:	ldrb	w0, [x20, #1148]
  4128d8:	cbz	w0, 4128fc <ferror@plt+0xff8c>
  4128dc:	ldrb	w0, [x20, #18]
  4128e0:	cbnz	w0, 4128fc <ferror@plt+0xff8c>
  4128e4:	strb	wzr, [x20, #1148]
  4128e8:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4128ec:	mov	x0, x20
  4128f0:	add	x2, x2, #0x9c5
  4128f4:	mov	w1, #0x2                   	// #2
  4128f8:	bl	419440 <ferror@plt+0x16ad0>
  4128fc:	mov	w19, #0x24                  	// #36
  412900:	str	w19, [x21]
  412904:	strb	wzr, [x21, #4]
  412908:	b	41281c <ferror@plt+0xfeac>
  41290c:	mov	w3, w1
  412910:	b	41287c <ferror@plt+0xff0c>
  412914:	ldrb	w1, [x20, #1154]
  412918:	cbz	w1, 4129b4 <ferror@plt+0x10044>
  41291c:	ldrb	w1, [x20, #1164]
  412920:	cbnz	w1, 4129bc <ferror@plt+0x1004c>
  412924:	ldrb	w1, [x20, #1152]
  412928:	cbnz	w1, 4129c4 <ferror@plt+0x10054>
  41292c:	ldrb	w1, [x20, #1120]
  412930:	mov	w3, #0x4                   	// #4
  412934:	cmp	w1, #0x0
  412938:	mov	w1, #0xd                   	// #13
  41293c:	csel	w1, w1, w3, eq  // eq = none
  412940:	sxtw	x3, w0
  412944:	sbfiz	x0, x0, #3, #32
  412948:	ldrh	w25, [x2, x0]
  41294c:	tst	w25, w1
  412950:	b.eq	414f80 <ferror@plt+0x12610>  // b.none
  412954:	ldrb	w0, [x20, #1164]
  412958:	cbnz	w0, 4129cc <ferror@plt+0x1005c>
  41295c:	ldrb	w0, [x20, #1152]
  412960:	cmp	w0, #0x0
  412964:	cset	w26, ne  // ne = any
  412968:	lsl	w26, w26, #1
  41296c:	add	x2, x2, x3, lsl #3
  412970:	ldrb	w27, [x2, #2]
  412974:	cbz	w27, 4129d4 <ferror@plt+0x10064>
  412978:	ldrb	w0, [x21, #4]
  41297c:	cmp	w0, w27
  412980:	b.ls	4129d4 <ferror@plt+0x10064>  // b.plast
  412984:	mov	w0, #0x3                   	// #3
  412988:	str	w0, [x21, #8]
  41298c:	strb	w27, [x21, #4]
  412990:	tst	w25, w26
  412994:	b.eq	41281c <ferror@plt+0xfeac>  // b.none
  412998:	cmp	w23, #0x1
  41299c:	b.ne	41281c <ferror@plt+0xfeac>  // b.any
  4129a0:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4129a4:	mov	x4, x22
  4129a8:	sub	w3, w28, w22
  4129ac:	add	x2, x2, #0xa37
  4129b0:	b	414f90 <ferror@plt+0x12620>
  4129b4:	mov	w1, #0xd                   	// #13
  4129b8:	b	412940 <ferror@plt+0xffd0>
  4129bc:	mov	w1, #0x8                   	// #8
  4129c0:	b	412940 <ferror@plt+0xffd0>
  4129c4:	mov	w1, #0x1                   	// #1
  4129c8:	b	412940 <ferror@plt+0xffd0>
  4129cc:	mov	w26, #0x10                  	// #16
  4129d0:	b	41296c <ferror@plt+0xfffc>
  4129d4:	tbz	w25, #8, 414f5c <ferror@plt+0x125ec>
  4129d8:	mov	w17, #0xffffee9f            	// #-4449
  4129dc:	add	w0, w19, w17
  4129e0:	ldr	w1, [x21]
  4129e4:	cmp	w0, #0x14
  4129e8:	b.hi	412a14 <ferror@plt+0x100a4>  // b.pmore
  4129ec:	mov	w16, #0xffffef00            	// #-4352
  4129f0:	add	w1, w1, w16
  4129f4:	cmp	w1, #0x12
  4129f8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4129fc:	ldr	w0, [x21, #8]
  412a00:	mov	w1, #0x2                   	// #2
  412a04:	cmp	w0, #0x2
  412a08:	csel	w0, w0, w1, ge  // ge = tcont
  412a0c:	str	w0, [x21, #8]
  412a10:	b	412a48 <ferror@plt+0x100d8>
  412a14:	mov	w15, #0xffffee58            	// #-4520
  412a18:	add	w0, w19, w15
  412a1c:	cmp	w0, #0x1a
  412a20:	b.hi	412a54 <ferror@plt+0x100e4>  // b.pmore
  412a24:	mov	w14, #0xffff5400            	// #-44032
  412a28:	add	w1, w1, w14
  412a2c:	mov	w0, #0x2ba3                	// #11171
  412a30:	cmp	w1, w0
  412a34:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412a38:	mov	w2, #0x1c                  	// #28
  412a3c:	udiv	w0, w1, w2
  412a40:	msub	w1, w0, w2, w1
  412a44:	cbz	w1, 4129fc <ferror@plt+0x1008c>
  412a48:	cbnz	w27, 41298c <ferror@plt+0x1001c>
  412a4c:	str	w19, [x21]
  412a50:	b	41298c <ferror@plt+0x1001c>
  412a54:	cmp	w19, #0x345
  412a58:	b.hi	412a88 <ferror@plt+0x10118>  // b.pmore
  412a5c:	cmp	w19, #0x2ff
  412a60:	b.ls	412ac4 <ferror@plt+0x10154>  // b.plast
  412a64:	sub	w2, w19, #0x300
  412a68:	cmp	w2, #0x45
  412a6c:	b.hi	412ac4 <ferror@plt+0x10154>  // b.pmore
  412a70:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412a74:	add	x0, x0, #0xd94
  412a78:	ldrh	w0, [x0, w2, uxtw #1]
  412a7c:	adr	x2, 412a88 <ferror@plt+0x10118>
  412a80:	add	x0, x2, w0, sxth #2
  412a84:	br	x0
  412a88:	cmp	w19, #0xcd5
  412a8c:	b.eq	414d9c <ferror@plt+0x1242c>  // b.none
  412a90:	b.hi	412b48 <ferror@plt+0x101d8>  // b.pmore
  412a94:	cmp	w19, #0xb3e
  412a98:	b.eq	414d54 <ferror@plt+0x123e4>  // b.none
  412a9c:	b.hi	412afc <ferror@plt+0x1018c>  // b.pmore
  412aa0:	cmp	w19, #0x93c
  412aa4:	b.eq	414d10 <ferror@plt+0x123a0>  // b.none
  412aa8:	b.hi	412ae0 <ferror@plt+0x10170>  // b.pmore
  412aac:	cmp	w19, #0x654
  412ab0:	b.eq	414c9c <ferror@plt+0x1232c>  // b.none
  412ab4:	cmp	w19, #0x655
  412ab8:	b.eq	414cf0 <ferror@plt+0x12380>  // b.none
  412abc:	cmp	w19, #0x653
  412ac0:	b.eq	414c90 <ferror@plt+0x12320>  // b.none
  412ac4:	mov	w3, w19
  412ac8:	mov	x0, x20
  412acc:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  412ad0:	mov	w1, #0x4                   	// #4
  412ad4:	add	x2, x2, #0x9e1
  412ad8:	bl	419440 <ferror@plt+0x16ad0>
  412adc:	b	412a48 <ferror@plt+0x100d8>
  412ae0:	cmp	w19, #0x9be
  412ae4:	b.eq	414d48 <ferror@plt+0x123d8>  // b.none
  412ae8:	cmp	w19, #0x9d7
  412aec:	b.ne	412ac4 <ferror@plt+0x10154>  // b.any
  412af0:	cmp	w1, #0x9c7
  412af4:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  412af8:	b	412c88 <ferror@plt+0x10318>
  412afc:	cmp	w19, #0xbd7
  412b00:	b.eq	414d7c <ferror@plt+0x1240c>  // b.none
  412b04:	b.hi	412b2c <ferror@plt+0x101bc>  // b.pmore
  412b08:	cmp	w19, #0xb57
  412b0c:	b.eq	414d60 <ferror@plt+0x123f0>  // b.none
  412b10:	cmp	w19, #0xbbe
  412b14:	b.eq	414d6c <ferror@plt+0x123fc>  // b.none
  412b18:	cmp	w19, #0xb56
  412b1c:	b.ne	412ac4 <ferror@plt+0x10154>  // b.any
  412b20:	cmp	w1, #0xb47
  412b24:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  412b28:	b	412c88 <ferror@plt+0x10318>
  412b2c:	cmp	w19, #0xc56
  412b30:	b.eq	414d90 <ferror@plt+0x12420>  // b.none
  412b34:	cmp	w19, #0xcc2
  412b38:	b.ne	412ac4 <ferror@plt+0x10154>  // b.any
  412b3c:	cmp	w1, #0xcc6
  412b40:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  412b44:	b	412c88 <ferror@plt+0x10318>
  412b48:	mov	w0, #0x102e                	// #4142
  412b4c:	cmp	w19, w0
  412b50:	b.eq	414e00 <ferror@plt+0x12490>  // b.none
  412b54:	b.hi	412ba8 <ferror@plt+0x10238>  // b.pmore
  412b58:	cmp	w19, #0xdca
  412b5c:	b.eq	414ddc <ferror@plt+0x1246c>  // b.none
  412b60:	b.hi	412b88 <ferror@plt+0x10218>  // b.pmore
  412b64:	cmp	w19, #0xd3e
  412b68:	b.eq	414dc0 <ferror@plt+0x12450>  // b.none
  412b6c:	cmp	w19, #0xd57
  412b70:	b.eq	414dd0 <ferror@plt+0x12460>  // b.none
  412b74:	cmp	w19, #0xcd6
  412b78:	b.ne	412ac4 <ferror@plt+0x10154>  // b.any
  412b7c:	cmp	w1, #0xcc6
  412b80:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  412b84:	b	412c88 <ferror@plt+0x10318>
  412b88:	cmp	w19, #0xdcf
  412b8c:	b.eq	414df0 <ferror@plt+0x12480>  // b.none
  412b90:	cmp	w19, #0xddf
  412b94:	b.ne	412ac4 <ferror@plt+0x10154>  // b.any
  412b98:	sub	w1, w1, #0xdd9
  412b9c:	cmp	w1, #0x1
  412ba0:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412ba4:	b	412c88 <ferror@plt+0x10318>
  412ba8:	mov	w0, #0x309a                	// #12442
  412bac:	cmp	w19, w0
  412bb0:	b.eq	414ecc <ferror@plt+0x1255c>  // b.none
  412bb4:	b.hi	412c10 <ferror@plt+0x102a0>  // b.pmore
  412bb8:	mov	w0, #0x1b35                	// #6965
  412bbc:	cmp	w19, w0
  412bc0:	b.eq	414e10 <ferror@plt+0x124a0>  // b.none
  412bc4:	mov	w0, #0x3099                	// #12441
  412bc8:	cmp	w19, w0
  412bcc:	b.ne	412ac4 <ferror@plt+0x10154>  // b.any
  412bd0:	mov	w0, #0x30db                	// #12507
  412bd4:	cmp	w1, w0
  412bd8:	b.hi	414ea0 <ferror@plt+0x12530>  // b.pmore
  412bdc:	mov	w0, #0x309c                	// #12444
  412be0:	cmp	w1, w0
  412be4:	b.hi	414e78 <ferror@plt+0x12508>  // b.pmore
  412be8:	mov	w4, #0xffffcfba            	// #-12358
  412bec:	add	w1, w1, w4
  412bf0:	cmp	w1, #0x35
  412bf4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412bf8:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412bfc:	add	x0, x0, #0xe20
  412c00:	ldrb	w0, [x0, w1, uxtw]
  412c04:	adr	x1, 412c10 <ferror@plt+0x102a0>
  412c08:	add	x0, x1, w0, sxtb #2
  412c0c:	br	x0
  412c10:	mov	w0, #0x10ba                	// #4282
  412c14:	movk	w0, #0x1, lsl #16
  412c18:	cmp	w19, w0
  412c1c:	b.eq	414f34 <ferror@plt+0x125c4>  // b.none
  412c20:	add	w0, w0, #0x6d
  412c24:	cmp	w19, w0
  412c28:	b.ne	412ac4 <ferror@plt+0x10154>  // b.any
  412c2c:	sub	w1, w1, #0x11, lsl #12
  412c30:	sub	w1, w1, #0x131
  412c34:	cmp	w1, #0x1
  412c38:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412c3c:	b	412c88 <ferror@plt+0x10318>
  412c40:	cmp	w1, #0x3bf
  412c44:	b.hi	412e3c <ferror@plt+0x104cc>  // b.pmore
  412c48:	cmp	w1, #0x3b0
  412c4c:	b.hi	412cfc <ferror@plt+0x1038c>  // b.pmore
  412c50:	cmp	w1, #0x103
  412c54:	b.hi	412dd4 <ferror@plt+0x10464>  // b.pmore
  412c58:	cmp	w1, #0xc9
  412c5c:	b.hi	412d44 <ferror@plt+0x103d4>  // b.pmore
  412c60:	cmp	w1, #0x79
  412c64:	b.hi	412dc0 <ferror@plt+0x10450>  // b.pmore
  412c68:	cmp	w1, #0x64
  412c6c:	b.hi	412d6c <ferror@plt+0x103fc>  // b.pmore
  412c70:	cmp	w1, #0x59
  412c74:	b.hi	412db4 <ferror@plt+0x10444>  // b.pmore
  412c78:	cmp	w1, #0x44
  412c7c:	b.hi	412d90 <ferror@plt+0x10420>  // b.pmore
  412c80:	cmp	w1, #0x41
  412c84:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  412c88:	mov	w0, #0x3                   	// #3
  412c8c:	str	w0, [x21, #8]
  412c90:	b	412a48 <ferror@plt+0x100d8>
  412c94:	mov	w12, #0xffffe0b8            	// #-8008
  412c98:	add	w1, w1, w12
  412c9c:	mov	x0, #0x1                   	// #1
  412ca0:	lsl	x1, x0, x1
  412ca4:	mov	x0, #0x303                 	// #771
  412ca8:	movk	x0, #0x302, lsl #16
  412cac:	movk	x0, #0x3, lsl #32
  412cb0:	movk	x0, #0x300, lsl #48
  412cb4:	tst	x1, x0
  412cb8:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  412cbc:	b	412c88 <ferror@plt+0x10318>
  412cc0:	mov	w11, #0xffffe0f8            	// #-7944
  412cc4:	add	w1, w1, w11
  412cc8:	mov	x0, #0x1                   	// #1
  412ccc:	lsl	x1, x0, x1
  412cd0:	tst	x1, #0x303030303030303
  412cd4:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  412cd8:	b	412c88 <ferror@plt+0x10318>
  412cdc:	sub	w1, w1, #0x415
  412ce0:	mov	x0, #0x1                   	// #1
  412ce4:	lsl	x1, x0, x1
  412ce8:	mov	x0, #0x9                   	// #9
  412cec:	movk	x0, #0x9, lsl #32
  412cf0:	tst	x1, x0
  412cf4:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  412cf8:	b	412c88 <ferror@plt+0x10318>
  412cfc:	sub	w1, w1, #0x3b1
  412d00:	cmp	w1, #0xe
  412d04:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412d08:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412d0c:	add	x0, x0, #0xe58
  412d10:	ldrh	w0, [x0, w1, uxtw #1]
  412d14:	adr	x1, 412d20 <ferror@plt+0x103b0>
  412d18:	add	x0, x1, w0, sxth #2
  412d1c:	br	x0
  412d20:	sub	w1, w1, #0x391
  412d24:	cmp	w1, #0xe
  412d28:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412d2c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412d30:	add	x0, x0, #0xe78
  412d34:	ldrh	w0, [x0, w1, uxtw #1]
  412d38:	adr	x1, 412d44 <ferror@plt+0x103d4>
  412d3c:	add	x0, x1, w0, sxth #2
  412d40:	br	x0
  412d44:	sub	w1, w1, #0xca
  412d48:	mov	x0, #0x1                   	// #1
  412d4c:	lsl	x1, x0, x1
  412d50:	mov	x0, #0x401                 	// #1025
  412d54:	movk	x0, #0x104, lsl #16
  412d58:	movk	x0, #0x401, lsl #32
  412d5c:	movk	x0, #0x304, lsl #48
  412d60:	tst	x1, x0
  412d64:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  412d68:	b	412c88 <ferror@plt+0x10318>
  412d6c:	sub	w1, w1, #0x65
  412d70:	cmp	w1, #0x14
  412d74:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412d78:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412d7c:	add	x0, x0, #0xe98
  412d80:	ldrh	w0, [x0, w1, uxtw #1]
  412d84:	adr	x1, 412d90 <ferror@plt+0x10420>
  412d88:	add	x0, x1, w0, sxth #2
  412d8c:	br	x0
  412d90:	sub	w1, w1, #0x45
  412d94:	cmp	w1, #0x14
  412d98:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412d9c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412da0:	add	x0, x0, #0xec4
  412da4:	ldrh	w0, [x0, w1, uxtw #1]
  412da8:	adr	x1, 412db4 <ferror@plt+0x10444>
  412dac:	add	x0, x1, w0, sxth #2
  412db0:	br	x0
  412db4:	cmp	w1, #0x61
  412db8:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  412dbc:	b	412c88 <ferror@plt+0x10318>
  412dc0:	cmp	w1, #0xa8
  412dc4:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  412dc8:	cmp	w1, #0xc2
  412dcc:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  412dd0:	b	412c88 <ferror@plt+0x10318>
  412dd4:	cmp	w1, #0x39f
  412dd8:	b.hi	412e28 <ferror@plt+0x104b8>  // b.pmore
  412ddc:	cmp	w1, #0x390
  412de0:	b.hi	412d20 <ferror@plt+0x103b0>  // b.pmore
  412de4:	cmp	w1, #0x1a1
  412de8:	b.hi	412e18 <ferror@plt+0x104a8>  // b.pmore
  412dec:	cmp	w1, #0x19f
  412df0:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  412df4:	cmp	w1, #0x113
  412df8:	b.hi	412e08 <ferror@plt+0x10498>  // b.pmore
  412dfc:	cmp	w1, #0x111
  412e00:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  412e04:	b	412c88 <ferror@plt+0x10318>
  412e08:	sub	w1, w1, #0x14c
  412e0c:	cmp	w1, #0x1
  412e10:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412e14:	b	412c88 <ferror@plt+0x10318>
  412e18:	sub	w1, w1, #0x1af
  412e1c:	cmp	w1, #0x1
  412e20:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412e24:	b	412c88 <ferror@plt+0x10318>
  412e28:	cmp	w1, #0x3a5
  412e2c:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  412e30:	cmp	w1, #0x3a9
  412e34:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  412e38:	b	412c88 <ferror@plt+0x10318>
  412e3c:	mov	w0, #0x1f81                	// #8065
  412e40:	cmp	w1, w0
  412e44:	b.hi	412ea8 <ferror@plt+0x10538>  // b.pmore
  412e48:	mov	w0, #0x1f47                	// #8007
  412e4c:	cmp	w1, w0
  412e50:	b.hi	412c94 <ferror@plt+0x10324>  // b.pmore
  412e54:	mov	w0, #0x1f41                	// #8001
  412e58:	cmp	w1, w0
  412e5c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412e60:	mov	w0, #0x1f07                	// #7943
  412e64:	cmp	w1, w0
  412e68:	b.hi	412cc0 <ferror@plt+0x10350>  // b.pmore
  412e6c:	cmp	w1, #0x438
  412e70:	b.hi	412e94 <ferror@plt+0x10524>  // b.pmore
  412e74:	cmp	w1, #0x414
  412e78:	b.hi	412cdc <ferror@plt+0x1036c>  // b.pmore
  412e7c:	cmp	w1, #0x3c5
  412e80:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  412e84:	sub	w1, w1, #0x3c9
  412e88:	cmp	w1, #0x2
  412e8c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412e90:	b	412c88 <ferror@plt+0x10318>
  412e94:	mov	w10, #0xffffe100            	// #-7936
  412e98:	add	w1, w1, w10
  412e9c:	cmp	w1, #0x1
  412ea0:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412ea4:	b	412c88 <ferror@plt+0x10318>
  412ea8:	mov	w0, #0x1fbf                	// #8127
  412eac:	cmp	w1, w0
  412eb0:	b.hi	412eec <ferror@plt+0x1057c>  // b.pmore
  412eb4:	mov	w0, #0x1f87                	// #8071
  412eb8:	cmp	w1, w0
  412ebc:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  412ec0:	mov	w13, #0xffffe078            	// #-8072
  412ec4:	add	w1, w1, w13
  412ec8:	mov	x0, #0x1                   	// #1
  412ecc:	lsl	x1, x0, x1
  412ed0:	mov	x0, #0x303                 	// #771
  412ed4:	movk	x0, #0x303, lsl #16
  412ed8:	movk	x0, #0x803, lsl #32
  412edc:	movk	x0, #0x90, lsl #48
  412ee0:	tst	x1, x0
  412ee4:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  412ee8:	b	412c88 <ferror@plt+0x10318>
  412eec:	mov	w9, #0xffffe03d            	// #-8131
  412ef0:	add	w1, w1, w9
  412ef4:	cmp	w1, #0x3b
  412ef8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412efc:	mov	x0, #0x1                   	// #1
  412f00:	lsl	x1, x0, x1
  412f04:	mov	x0, #0x201                 	// #513
  412f08:	movk	x0, #0xa01, lsl #48
  412f0c:	tst	x1, x0
  412f10:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  412f14:	b	412c88 <ferror@plt+0x10318>
  412f18:	cmp	w1, #0x39f
  412f1c:	b.hi	4130e8 <ferror@plt+0x10778>  // b.pmore
  412f20:	cmp	w1, #0x390
  412f24:	b.hi	412fe0 <ferror@plt+0x10670>  // b.pmore
  412f28:	cmp	w1, #0xa8
  412f2c:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  412f30:	b.hi	413028 <ferror@plt+0x106b8>  // b.pmore
  412f34:	sub	w1, w1, #0x41
  412f38:	cmp	w1, #0x39
  412f3c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412f40:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412f44:	add	x0, x0, #0xef0
  412f48:	ldrh	w0, [x0, w1, uxtw #1]
  412f4c:	adr	x1, 412f58 <ferror@plt+0x105e8>
  412f50:	add	x0, x1, w0, sxth #2
  412f54:	br	x0
  412f58:	mov	w8, #0xffffe078            	// #-8072
  412f5c:	add	w1, w1, w8
  412f60:	mov	x0, #0x1                   	// #1
  412f64:	lsl	x1, x0, x1
  412f68:	mov	x0, #0x303                 	// #771
  412f6c:	movk	x0, #0x303, lsl #16
  412f70:	movk	x0, #0x803, lsl #32
  412f74:	movk	x0, #0x90, lsl #48
  412f78:	tst	x1, x0
  412f7c:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  412f80:	b	412c88 <ferror@plt+0x10318>
  412f84:	mov	w7, #0xffffe0f8            	// #-7944
  412f88:	add	w1, w1, w7
  412f8c:	mov	x0, #0x1                   	// #1
  412f90:	lsl	x1, x0, x1
  412f94:	tst	x1, #0x303030303030303
  412f98:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  412f9c:	b	412c88 <ferror@plt+0x10318>
  412fa0:	sub	w1, w1, #0x3c5
  412fa4:	mov	x0, #0x1                   	// #1
  412fa8:	lsl	x1, x0, x1
  412fac:	mov	x0, #0x2071                	// #8305
  412fb0:	tst	x1, x0
  412fb4:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  412fb8:	b	412c88 <ferror@plt+0x10318>
  412fbc:	sub	w1, w1, #0x3b1
  412fc0:	cmp	w1, #0xe
  412fc4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412fc8:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412fcc:	add	x0, x0, #0xf64
  412fd0:	ldrh	w0, [x0, w1, uxtw #1]
  412fd4:	adr	x1, 412fe0 <ferror@plt+0x10670>
  412fd8:	add	x0, x1, w0, sxth #2
  412fdc:	br	x0
  412fe0:	sub	w1, w1, #0x391
  412fe4:	cmp	w1, #0xe
  412fe8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  412fec:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  412ff0:	add	x0, x0, #0xf84
  412ff4:	ldrh	w0, [x0, w1, uxtw #1]
  412ff8:	adr	x1, 413004 <ferror@plt+0x10694>
  412ffc:	add	x0, x1, w0, sxth #2
  413000:	br	x0
  413004:	sub	w1, w1, #0xef
  413008:	cmp	w1, #0x14
  41300c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413010:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  413014:	add	x0, x0, #0xfa4
  413018:	ldrh	w0, [x0, w1, uxtw #1]
  41301c:	adr	x1, 413028 <ferror@plt+0x106b8>
  413020:	add	x0, x1, w0, sxth #2
  413024:	br	x0
  413028:	cmp	w1, #0x103
  41302c:	b.hi	413090 <ferror@plt+0x10720>  // b.pmore
  413030:	cmp	w1, #0xee
  413034:	b.hi	413004 <ferror@plt+0x10694>  // b.pmore
  413038:	cmp	w1, #0xcf
  41303c:	b.hi	41306c <ferror@plt+0x106fc>  // b.pmore
  413040:	cmp	w1, #0xc1
  413044:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413048:	sub	w1, w1, #0xc2
  41304c:	cmp	w1, #0xd
  413050:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413054:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  413058:	add	x0, x0, #0xfd0
  41305c:	ldrh	w0, [x0, w1, uxtw #1]
  413060:	adr	x1, 41306c <ferror@plt+0x106fc>
  413064:	add	x0, x1, w0, sxth #2
  413068:	br	x0
  41306c:	sub	w1, w1, #0xd4
  413070:	cmp	w1, #0x16
  413074:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413078:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  41307c:	add	x0, x0, #0xfec
  413080:	ldrh	w0, [x0, w1, uxtw #1]
  413084:	adr	x1, 413090 <ferror@plt+0x10720>
  413088:	add	x0, x1, w0, sxth #2
  41308c:	br	x0
  413090:	cmp	w1, #0x169
  413094:	b.hi	4130c4 <ferror@plt+0x10754>  // b.pmore
  413098:	cmp	w1, #0x167
  41309c:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  4130a0:	cmp	w1, #0x113
  4130a4:	b.hi	4130b4 <ferror@plt+0x10744>  // b.pmore
  4130a8:	cmp	w1, #0x111
  4130ac:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4130b0:	b	412c88 <ferror@plt+0x10318>
  4130b4:	sub	w1, w1, #0x14c
  4130b8:	cmp	w1, #0x1
  4130bc:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4130c0:	b	412c88 <ferror@plt+0x10318>
  4130c4:	cmp	w1, #0x1a1
  4130c8:	b.hi	4130d8 <ferror@plt+0x10768>  // b.pmore
  4130cc:	cmp	w1, #0x19f
  4130d0:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4130d4:	b	412c88 <ferror@plt+0x10318>
  4130d8:	sub	w1, w1, #0x1af
  4130dc:	cmp	w1, #0x1
  4130e0:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4130e4:	b	412c88 <ferror@plt+0x10318>
  4130e8:	mov	w0, #0x1f41                	// #8001
  4130ec:	cmp	w1, w0
  4130f0:	b.hi	413178 <ferror@plt+0x10808>  // b.pmore
  4130f4:	mov	w0, #0x1f07                	// #7943
  4130f8:	cmp	w1, w0
  4130fc:	b.hi	412f84 <ferror@plt+0x10614>  // b.pmore
  413100:	cmp	w1, #0x3d2
  413104:	b.hi	413134 <ferror@plt+0x107c4>  // b.pmore
  413108:	cmp	w1, #0x3c4
  41310c:	b.hi	412fa0 <ferror@plt+0x10630>  // b.pmore
  413110:	cmp	w1, #0x3bf
  413114:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413118:	cmp	w1, #0x3b0
  41311c:	b.hi	412fbc <ferror@plt+0x1064c>  // b.pmore
  413120:	cmp	w1, #0x3a5
  413124:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  413128:	cmp	w1, #0x3a9
  41312c:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  413130:	b	412c88 <ferror@plt+0x10318>
  413134:	cmp	w1, #0x43a
  413138:	b.hi	413164 <ferror@plt+0x107f4>  // b.pmore
  41313c:	cmp	w1, #0x412
  413140:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413144:	sub	w1, w1, #0x413
  413148:	mov	x0, #0x1                   	// #1
  41314c:	lsl	x1, x0, x1
  413150:	mov	x0, #0x81                  	// #129
  413154:	movk	x0, #0x81, lsl #32
  413158:	tst	x1, x0
  41315c:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413160:	b	412c88 <ferror@plt+0x10318>
  413164:	mov	w6, #0xffffe100            	// #-7936
  413168:	add	w1, w1, w6
  41316c:	cmp	w1, #0x1
  413170:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413174:	b	412c88 <ferror@plt+0x10318>
  413178:	mov	w0, #0x1fbf                	// #8127
  41317c:	cmp	w1, w0
  413180:	b.hi	4131c4 <ferror@plt+0x10854>  // b.pmore
  413184:	mov	w0, #0x1f87                	// #8071
  413188:	cmp	w1, w0
  41318c:	b.hi	412f58 <ferror@plt+0x105e8>  // b.pmore
  413190:	mov	w5, #0xffffe0b8            	// #-8008
  413194:	add	w1, w1, w5
  413198:	cmp	w1, #0x39
  41319c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4131a0:	mov	x0, #0x1                   	// #1
  4131a4:	lsl	x1, x0, x1
  4131a8:	mov	x0, #0x303                 	// #771
  4131ac:	movk	x0, #0x302, lsl #16
  4131b0:	movk	x0, #0x3, lsl #32
  4131b4:	movk	x0, #0x300, lsl #48
  4131b8:	tst	x1, x0
  4131bc:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4131c0:	b	412c88 <ferror@plt+0x10318>
  4131c4:	mov	w4, #0xffffe03d            	// #-8131
  4131c8:	add	w1, w1, w4
  4131cc:	cmp	w1, #0x3b
  4131d0:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4131d4:	mov	x0, #0x1                   	// #1
  4131d8:	lsl	x1, x0, x1
  4131dc:	mov	x0, #0x201                 	// #513
  4131e0:	movk	x0, #0xa01, lsl #48
  4131e4:	tst	x1, x0
  4131e8:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4131ec:	b	412c88 <ferror@plt+0x10318>
  4131f0:	cmp	w1, #0x7a
  4131f4:	b.hi	413224 <ferror@plt+0x108b4>  // b.pmore
  4131f8:	cmp	w1, #0x40
  4131fc:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413200:	sub	w1, w1, #0x41
  413204:	cmp	w1, #0x39
  413208:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  41320c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413210:	add	x0, x0, #0x1c
  413214:	ldrh	w0, [x0, w1, uxtw #1]
  413218:	adr	x1, 413224 <ferror@plt+0x108b4>
  41321c:	add	x0, x1, w0, sxth #2
  413220:	br	x0
  413224:	mov	w3, #0xffffe160            	// #-7840
  413228:	add	w1, w1, w3
  41322c:	cmp	w1, #0x2d
  413230:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413234:	mov	x0, #0x1                   	// #1
  413238:	lsl	x1, x0, x1
  41323c:	mov	x0, #0x3                   	// #3
  413240:	movk	x0, #0x300, lsl #16
  413244:	movk	x0, #0x3000, lsl #32
  413248:	tst	x1, x0
  41324c:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413250:	b	412c88 <ferror@plt+0x10318>
  413254:	cmp	w1, #0x79
  413258:	b.hi	4132fc <ferror@plt+0x1098c>  // b.pmore
  41325c:	cmp	w1, #0x64
  413260:	b.hi	4132a8 <ferror@plt+0x10938>  // b.pmore
  413264:	cmp	w1, #0x59
  413268:	b.hi	4132f0 <ferror@plt+0x10980>  // b.pmore
  41326c:	cmp	w1, #0x44
  413270:	b.hi	4132cc <ferror@plt+0x1095c>  // b.pmore
  413274:	cmp	w1, #0x41
  413278:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  41327c:	b	412c88 <ferror@plt+0x10318>
  413280:	sub	w1, w1, #0xca
  413284:	mov	x0, #0x1                   	// #1
  413288:	lsl	x1, x0, x1
  41328c:	mov	x0, #0x401                 	// #1025
  413290:	movk	x0, #0x100, lsl #16
  413294:	movk	x0, #0x401, lsl #32
  413298:	movk	x0, #0x300, lsl #48
  41329c:	tst	x1, x0
  4132a0:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4132a4:	b	412c88 <ferror@plt+0x10318>
  4132a8:	sub	w1, w1, #0x65
  4132ac:	cmp	w1, #0x14
  4132b0:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4132b4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  4132b8:	add	x0, x0, #0x90
  4132bc:	ldrh	w0, [x0, w1, uxtw #1]
  4132c0:	adr	x1, 4132cc <ferror@plt+0x1095c>
  4132c4:	add	x0, x1, w0, sxth #2
  4132c8:	br	x0
  4132cc:	sub	w1, w1, #0x45
  4132d0:	cmp	w1, #0x14
  4132d4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4132d8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  4132dc:	add	x0, x0, #0xbc
  4132e0:	ldrh	w0, [x0, w1, uxtw #1]
  4132e4:	adr	x1, 4132f0 <ferror@plt+0x10980>
  4132e8:	add	x0, x1, w0, sxth #2
  4132ec:	br	x0
  4132f0:	cmp	w1, #0x61
  4132f4:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  4132f8:	b	412c88 <ferror@plt+0x10318>
  4132fc:	cmp	w1, #0x103
  413300:	b.hi	413318 <ferror@plt+0x109a8>  // b.pmore
  413304:	cmp	w1, #0xc9
  413308:	b.hi	413280 <ferror@plt+0x10910>  // b.pmore
  41330c:	cmp	w1, #0xc2
  413310:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  413314:	b	412c88 <ferror@plt+0x10318>
  413318:	cmp	w1, #0x1a1
  41331c:	b.hi	41332c <ferror@plt+0x109bc>  // b.pmore
  413320:	cmp	w1, #0x19f
  413324:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413328:	b	412c88 <ferror@plt+0x10318>
  41332c:	sub	w1, w1, #0x1af
  413330:	cmp	w1, #0x1
  413334:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413338:	b	412c88 <ferror@plt+0x10318>
  41333c:	cmp	w1, #0xfc
  413340:	b.hi	41342c <ferror@plt+0x10abc>  // b.pmore
  413344:	cmp	w1, #0xc3
  413348:	b.hi	4133b8 <ferror@plt+0x10a48>  // b.pmore
  41334c:	cmp	w1, #0x6f
  413350:	b.hi	413418 <ferror@plt+0x10aa8>  // b.pmore
  413354:	cmp	w1, #0x60
  413358:	b.hi	4133e0 <ferror@plt+0x10a70>  // b.pmore
  41335c:	cmp	w1, #0x4f
  413360:	b.hi	413404 <ferror@plt+0x10a94>  // b.pmore
  413364:	cmp	w1, #0x40
  413368:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  41336c:	sub	w1, w1, #0x41
  413370:	cmp	w1, #0xe
  413374:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413378:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  41337c:	add	x0, x0, #0xe8
  413380:	ldrh	w0, [x0, w1, uxtw #1]
  413384:	adr	x1, 413390 <ferror@plt+0x10a20>
  413388:	add	x0, x1, w0, sxth #2
  41338c:	br	x0
  413390:	sub	w1, w1, #0x391
  413394:	mov	x0, #0x1                   	// #1
  413398:	lsl	x1, x0, x1
  41339c:	mov	x0, #0x101                 	// #257
  4133a0:	movk	x0, #0x10, lsl #16
  4133a4:	movk	x0, #0x101, lsl #32
  4133a8:	movk	x0, #0x10, lsl #48
  4133ac:	tst	x1, x0
  4133b0:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4133b4:	b	412c88 <ferror@plt+0x10318>
  4133b8:	sub	w1, w1, #0xc4
  4133bc:	mov	x0, #0x1                   	// #1
  4133c0:	lsl	x1, x0, x1
  4133c4:	mov	x0, #0x5                   	// #5
  4133c8:	movk	x0, #0x106, lsl #16
  4133cc:	movk	x0, #0x5, lsl #32
  4133d0:	movk	x0, #0x106, lsl #48
  4133d4:	tst	x1, x0
  4133d8:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4133dc:	b	412c88 <ferror@plt+0x10318>
  4133e0:	sub	w1, w1, #0x61
  4133e4:	cmp	w1, #0xe
  4133e8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4133ec:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  4133f0:	add	x0, x0, #0x108
  4133f4:	ldrh	w0, [x0, w1, uxtw #1]
  4133f8:	adr	x1, 413404 <ferror@plt+0x10a94>
  4133fc:	add	x0, x1, w0, sxth #2
  413400:	br	x0
  413404:	cmp	w1, #0x55
  413408:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  41340c:	cmp	w1, #0x59
  413410:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  413414:	b	412c88 <ferror@plt+0x10318>
  413418:	cmp	w1, #0x75
  41341c:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  413420:	cmp	w1, #0x79
  413424:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  413428:	b	412c88 <ferror@plt+0x10318>
  41342c:	cmp	w1, #0x3c5
  413430:	b.hi	41346c <ferror@plt+0x10afc>  // b.pmore
  413434:	cmp	w1, #0x390
  413438:	b.hi	413390 <ferror@plt+0x10a20>  // b.pmore
  41343c:	cmp	w1, #0x227
  413440:	b.hi	41345c <ferror@plt+0x10aec>  // b.pmore
  413444:	cmp	w1, #0x225
  413448:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  41344c:	sub	w1, w1, #0x1ea
  413450:	cmp	w1, #0x1
  413454:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413458:	b	412c88 <ferror@plt+0x10318>
  41345c:	sub	w1, w1, #0x22e
  413460:	cmp	w1, #0x1
  413464:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413468:	b	412c88 <ferror@plt+0x10318>
  41346c:	mov	w0, #0x1e37                	// #7735
  413470:	cmp	w1, w0
  413474:	b.hi	4134ac <ferror@plt+0x10b3c>  // b.pmore
  413478:	mov	w0, #0x1e35                	// #7733
  41347c:	cmp	w1, w0
  413480:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  413484:	sub	w1, w1, #0x418
  413488:	cmp	w1, #0x2b
  41348c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413490:	mov	x0, #0x1                   	// #1
  413494:	lsl	x1, x0, x1
  413498:	mov	x0, #0x801                 	// #2049
  41349c:	movk	x0, #0x801, lsl #32
  4134a0:	tst	x1, x0
  4134a4:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4134a8:	b	412c88 <ferror@plt+0x10318>
  4134ac:	mov	w0, #0x1fb3                	// #8115
  4134b0:	cmp	w1, w0
  4134b4:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  4134b8:	b.hi	4134d0 <ferror@plt+0x10b60>  // b.pmore
  4134bc:	mov	w2, #0xffffe1a6            	// #-7770
  4134c0:	add	w1, w1, w2
  4134c4:	cmp	w1, #0x1
  4134c8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4134cc:	b	412c88 <ferror@plt+0x10318>
  4134d0:	mov	w0, #0x1fbc                	// #8124
  4134d4:	cmp	w1, w0
  4134d8:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  4134dc:	b	412c88 <ferror@plt+0x10318>
  4134e0:	cmp	w1, #0x3c5
  4134e4:	b.hi	4135a4 <ferror@plt+0x10c34>  // b.pmore
  4134e8:	cmp	w1, #0x390
  4134ec:	b.hi	413534 <ferror@plt+0x10bc4>  // b.pmore
  4134f0:	cmp	w1, #0x6f
  4134f4:	b.hi	41358c <ferror@plt+0x10c1c>  // b.pmore
  4134f8:	cmp	w1, #0x60
  4134fc:	b.hi	41355c <ferror@plt+0x10bec>  // b.pmore
  413500:	cmp	w1, #0x4f
  413504:	b.hi	413580 <ferror@plt+0x10c10>  // b.pmore
  413508:	cmp	w1, #0x40
  41350c:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413510:	sub	w1, w1, #0x41
  413514:	cmp	w1, #0xe
  413518:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  41351c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413520:	add	x0, x0, #0x128
  413524:	ldrh	w0, [x0, w1, uxtw #1]
  413528:	adr	x1, 413534 <ferror@plt+0x10bc4>
  41352c:	add	x0, x1, w0, sxth #2
  413530:	br	x0
  413534:	sub	w1, w1, #0x391
  413538:	mov	x0, #0x1                   	// #1
  41353c:	lsl	x1, x0, x1
  413540:	mov	x0, #0x101                 	// #257
  413544:	movk	x0, #0x10, lsl #16
  413548:	movk	x0, #0x101, lsl #32
  41354c:	movk	x0, #0x10, lsl #48
  413550:	tst	x1, x0
  413554:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413558:	b	412c88 <ferror@plt+0x10318>
  41355c:	sub	w1, w1, #0x61
  413560:	cmp	w1, #0xe
  413564:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413568:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  41356c:	add	x0, x0, #0x148
  413570:	ldrh	w0, [x0, w1, uxtw #1]
  413574:	adr	x1, 413580 <ferror@plt+0x10c10>
  413578:	add	x0, x1, w0, sxth #2
  41357c:	br	x0
  413580:	cmp	w1, #0x55
  413584:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  413588:	b	412c88 <ferror@plt+0x10318>
  41358c:	cmp	w1, #0x75
  413590:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  413594:	sub	w1, w1, #0x228
  413598:	cmp	w1, #0x1
  41359c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4135a0:	b	412c88 <ferror@plt+0x10318>
  4135a4:	cmp	w1, #0x443
  4135a8:	b.hi	4135dc <ferror@plt+0x10c6c>  // b.pmore
  4135ac:	cmp	w1, #0x40f
  4135b0:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4135b4:	sub	w1, w1, #0x410
  4135b8:	mov	x0, #0x1                   	// #1
  4135bc:	lsl	x1, x0, x1
  4135c0:	mov	x0, #0x161                 	// #353
  4135c4:	movk	x0, #0x8, lsl #16
  4135c8:	movk	x0, #0x161, lsl #32
  4135cc:	movk	x0, #0x8, lsl #48
  4135d0:	tst	x1, x0
  4135d4:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4135d8:	b	412c88 <ferror@plt+0x10318>
  4135dc:	mov	w0, #0x1fb3                	// #8115
  4135e0:	cmp	w1, w0
  4135e4:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  4135e8:	b.hi	413600 <ferror@plt+0x10c90>  // b.pmore
  4135ec:	mov	w0, #0xffffe160            	// #-7840
  4135f0:	add	w1, w1, w0
  4135f4:	cmp	w1, #0x1
  4135f8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4135fc:	b	412c88 <ferror@plt+0x10318>
  413600:	mov	w0, #0x1fbc                	// #8124
  413604:	cmp	w1, w0
  413608:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  41360c:	b	412c88 <ferror@plt+0x10318>
  413610:	cmp	w1, #0x7a
  413614:	b.hi	413648 <ferror@plt+0x10cd8>  // b.pmore
  413618:	cmp	w1, #0x40
  41361c:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413620:	sub	w1, w1, #0x41
  413624:	mov	x0, #0x1                   	// #1
  413628:	lsl	x1, x0, x1
  41362c:	mov	x0, #0xf1ff                	// #61951
  413630:	movk	x0, #0x3ce, lsl #16
  413634:	movk	x0, #0xf0ff, lsl #32
  413638:	movk	x0, #0x3ce, lsl #48
  41363c:	tst	x1, x0
  413640:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  413644:	b	412a48 <ferror@plt+0x100d8>
  413648:	cmp	w1, #0x17f
  41364c:	b.hi	413678 <ferror@plt+0x10d08>  // b.pmore
  413650:	cmp	w1, #0x159
  413654:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413658:	sub	w1, w1, #0x15a
  41365c:	mov	x0, #0x1                   	// #1
  413660:	lsl	x1, x0, x1
  413664:	mov	x0, #0xc3                  	// #195
  413668:	movk	x0, #0x20, lsl #32
  41366c:	tst	x1, x0
  413670:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413674:	b	412c88 <ferror@plt+0x10318>
  413678:	mov	w30, #0xffffe19e            	// #-7778
  41367c:	add	w1, w1, w30
  413680:	cmp	w1, #0x1
  413684:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413688:	b	412c88 <ferror@plt+0x10318>
  41368c:	cmp	w1, #0x3d2
  413690:	b.hi	413790 <ferror@plt+0x10e20>  // b.pmore
  413694:	cmp	w1, #0x398
  413698:	b.hi	413720 <ferror@plt+0x10db0>  // b.pmore
  41369c:	cmp	w1, #0x79
  4136a0:	b.hi	413768 <ferror@plt+0x10df8>  // b.pmore
  4136a4:	cmp	w1, #0x60
  4136a8:	b.hi	413744 <ferror@plt+0x10dd4>  // b.pmore
  4136ac:	cmp	w1, #0x41
  4136b0:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  4136b4:	sub	w1, w1, #0x45
  4136b8:	cmp	w1, #0x14
  4136bc:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4136c0:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  4136c4:	add	x0, x0, #0x168
  4136c8:	ldrh	w0, [x0, w1, uxtw #1]
  4136cc:	adr	x1, 4136d8 <ferror@plt+0x10d68>
  4136d0:	add	x0, x1, w0, sxth #2
  4136d4:	br	x0
  4136d8:	sub	w1, w1, #0x443
  4136dc:	cmp	w1, #0xa
  4136e0:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4136e4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  4136e8:	add	x0, x0, #0x194
  4136ec:	ldrh	w0, [x0, w1, uxtw #1]
  4136f0:	adr	x1, 4136fc <ferror@plt+0x10d8c>
  4136f4:	add	x0, x1, w0, sxth #2
  4136f8:	br	x0
  4136fc:	sub	w1, w1, #0x427
  413700:	cmp	w1, #0x11
  413704:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413708:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  41370c:	add	x0, x0, #0x1ac
  413710:	ldrh	w0, [x0, w1, uxtw #1]
  413714:	adr	x1, 413720 <ferror@plt+0x10db0>
  413718:	add	x0, x1, w0, sxth #2
  41371c:	br	x0
  413720:	sub	w1, w1, #0x399
  413724:	mov	x0, #0x1                   	// #1
  413728:	lsl	x1, x0, x1
  41372c:	mov	x0, #0x1001                	// #4097
  413730:	movk	x0, #0x1001, lsl #32
  413734:	movk	x0, #0x200, lsl #48
  413738:	tst	x1, x0
  41373c:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413740:	b	412c88 <ferror@plt+0x10318>
  413744:	sub	w1, w1, #0x61
  413748:	cmp	w1, #0x18
  41374c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413750:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413754:	add	x0, x0, #0x1d0
  413758:	ldrh	w0, [x0, w1, uxtw #1]
  41375c:	adr	x1, 413768 <ferror@plt+0x10df8>
  413760:	add	x0, x1, w0, sxth #2
  413764:	br	x0
  413768:	cmp	w1, #0xf5
  41376c:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  413770:	b.hi	413780 <ferror@plt+0x10e10>  // b.pmore
  413774:	cmp	w1, #0xd5
  413778:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  41377c:	b	412c88 <ferror@plt+0x10318>
  413780:	sub	w1, w1, #0x16a
  413784:	cmp	w1, #0x1
  413788:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  41378c:	b	412c88 <ferror@plt+0x10318>
  413790:	cmp	w1, #0x438
  413794:	b.hi	4137c8 <ferror@plt+0x10e58>  // b.pmore
  413798:	cmp	w1, #0x426
  41379c:	b.hi	4136fc <ferror@plt+0x10d8c>  // b.pmore
  4137a0:	sub	w1, w1, #0x406
  4137a4:	cmp	w1, #0x1d
  4137a8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4137ac:	mov	x0, #0x1                   	// #1
  4137b0:	lsl	x1, x0, x1
  4137b4:	mov	x0, #0x8401                	// #33793
  4137b8:	movk	x0, #0x2107, lsl #16
  4137bc:	tst	x1, x0
  4137c0:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4137c4:	b	412c88 <ferror@plt+0x10318>
  4137c8:	cmp	w1, #0x44d
  4137cc:	b.hi	4137e4 <ferror@plt+0x10e74>  // b.pmore
  4137d0:	cmp	w1, #0x442
  4137d4:	b.hi	4136d8 <ferror@plt+0x10d68>  // b.pmore
  4137d8:	cmp	w1, #0x43e
  4137dc:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  4137e0:	b	412c88 <ferror@plt+0x10318>
  4137e4:	cmp	w1, #0x4d9
  4137e8:	b.hi	413800 <ferror@plt+0x10e90>  // b.pmore
  4137ec:	cmp	w1, #0x4d7
  4137f0:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  4137f4:	cmp	w1, #0x456
  4137f8:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  4137fc:	b	412c88 <ferror@plt+0x10318>
  413800:	sub	w1, w1, #0x4e8
  413804:	cmp	w1, #0x1
  413808:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  41380c:	b	412c88 <ferror@plt+0x10318>
  413810:	cmp	w1, #0x79
  413814:	b.hi	413870 <ferror@plt+0x10f00>  // b.pmore
  413818:	cmp	w1, #0x40
  41381c:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413820:	sub	w1, w1, #0x41
  413824:	mov	x0, #0x1                   	// #1
  413828:	lsl	x1, x0, x1
  41382c:	mov	x0, #0x4111                	// #16657
  413830:	movk	x0, #0x110, lsl #16
  413834:	movk	x0, #0x4111, lsl #32
  413838:	movk	x0, #0x110, lsl #48
  41383c:	tst	x1, x0
  413840:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413844:	b	412c88 <ferror@plt+0x10318>
  413848:	sub	w1, w1, #0xca
  41384c:	mov	x0, #0x1                   	// #1
  413850:	lsl	x1, x0, x1
  413854:	mov	x0, #0x401                 	// #1025
  413858:	movk	x0, #0x100, lsl #16
  41385c:	movk	x0, #0x401, lsl #32
  413860:	movk	x0, #0x300, lsl #48
  413864:	tst	x1, x0
  413868:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  41386c:	b	412c88 <ferror@plt+0x10318>
  413870:	cmp	w1, #0x103
  413874:	b.hi	41388c <ferror@plt+0x10f1c>  // b.pmore
  413878:	cmp	w1, #0xc9
  41387c:	b.hi	413848 <ferror@plt+0x10ed8>  // b.pmore
  413880:	cmp	w1, #0xc2
  413884:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  413888:	b	412c88 <ferror@plt+0x10318>
  41388c:	cmp	w1, #0x1a1
  413890:	b.hi	4138a0 <ferror@plt+0x10f30>  // b.pmore
  413894:	cmp	w1, #0x19f
  413898:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  41389c:	b	412c88 <ferror@plt+0x10318>
  4138a0:	sub	w1, w1, #0x1af
  4138a4:	cmp	w1, #0x1
  4138a8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4138ac:	b	412c88 <ferror@plt+0x10318>
  4138b0:	sub	w1, w1, #0x41
  4138b4:	cmp	w1, #0x38
  4138b8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4138bc:	mov	x0, #0x1                   	// #1
  4138c0:	lsl	x1, x0, x1
  4138c4:	mov	x0, #0x1                   	// #1
  4138c8:	movk	x0, #0x10, lsl #16
  4138cc:	movk	x0, #0x1, lsl #32
  4138d0:	movk	x0, #0x150, lsl #48
  4138d4:	tst	x1, x0
  4138d8:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4138dc:	b	412c88 <ferror@plt+0x10318>
  4138e0:	cmp	w1, #0x75
  4138e4:	b.hi	413910 <ferror@plt+0x10fa0>  // b.pmore
  4138e8:	cmp	w1, #0x4e
  4138ec:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4138f0:	sub	w1, w1, #0x4f
  4138f4:	mov	x0, #0x1                   	// #1
  4138f8:	lsl	x1, x0, x1
  4138fc:	mov	x0, #0x41                  	// #65
  413900:	movk	x0, #0x41, lsl #32
  413904:	tst	x1, x0
  413908:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  41390c:	b	412c88 <ferror@plt+0x10318>
  413910:	cmp	w1, #0x423
  413914:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  413918:	cmp	w1, #0x443
  41391c:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  413920:	b	412c88 <ferror@plt+0x10318>
  413924:	cmp	w1, #0x7a
  413928:	b.hi	413958 <ferror@plt+0x10fe8>  // b.pmore
  41392c:	cmp	w1, #0x40
  413930:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413934:	sub	w1, w1, #0x41
  413938:	cmp	w1, #0x39
  41393c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413940:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413944:	add	x0, x0, #0x204
  413948:	ldrh	w0, [x0, w1, uxtw #1]
  41394c:	adr	x1, 413958 <ferror@plt+0x10fe8>
  413950:	add	x0, x1, w0, sxth #2
  413954:	br	x0
  413958:	cmp	w1, #0x1b7
  41395c:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  413960:	b.hi	413974 <ferror@plt+0x11004>  // b.pmore
  413964:	and	w1, w1, #0xffffffdf
  413968:	cmp	w1, #0xdc
  41396c:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  413970:	b	412c88 <ferror@plt+0x10318>
  413974:	cmp	w1, #0x292
  413978:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  41397c:	b	412c88 <ferror@plt+0x10318>
  413980:	cmp	w1, #0x75
  413984:	b.hi	4139b8 <ferror@plt+0x11048>  // b.pmore
  413988:	cmp	w1, #0x40
  41398c:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413990:	sub	w1, w1, #0x41
  413994:	mov	x0, #0x1                   	// #1
  413998:	lsl	x1, x0, x1
  41399c:	mov	x0, #0x4111                	// #16657
  4139a0:	movk	x0, #0x12, lsl #16
  4139a4:	movk	x0, #0x4111, lsl #32
  4139a8:	movk	x0, #0x12, lsl #48
  4139ac:	tst	x1, x0
  4139b0:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4139b4:	b	412c88 <ferror@plt+0x10318>
  4139b8:	sub	w1, w1, #0x474
  4139bc:	cmp	w1, #0x1
  4139c0:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4139c4:	b	412c88 <ferror@plt+0x10318>
  4139c8:	sub	w1, w1, #0x41
  4139cc:	cmp	w1, #0x34
  4139d0:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4139d4:	mov	x0, #0x1                   	// #1
  4139d8:	lsl	x1, x0, x1
  4139dc:	mov	x0, #0x4111                	// #16657
  4139e0:	movk	x0, #0x12, lsl #16
  4139e4:	movk	x0, #0x4111, lsl #32
  4139e8:	movk	x0, #0x12, lsl #48
  4139ec:	tst	x1, x0
  4139f0:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4139f4:	b	412c88 <ferror@plt+0x10318>
  4139f8:	cmp	w1, #0x3c9
  4139fc:	b.hi	413aa4 <ferror@plt+0x11134>  // b.pmore
  413a00:	cmp	w1, #0x3be
  413a04:	b.hi	413a5c <ferror@plt+0x110ec>  // b.pmore
  413a08:	cmp	w1, #0x3a9
  413a0c:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  413a10:	b.hi	413a80 <ferror@plt+0x11110>  // b.pmore
  413a14:	sub	w1, w1, #0x391
  413a18:	cmp	w1, #0xe
  413a1c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413a20:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413a24:	add	x0, x0, #0x278
  413a28:	ldrh	w0, [x0, w1, uxtw #1]
  413a2c:	adr	x1, 413a38 <ferror@plt+0x110c8>
  413a30:	add	x0, x1, w0, sxth #2
  413a34:	br	x0
  413a38:	mov	w18, #0xffffe03d            	// #-8131
  413a3c:	add	w1, w1, w18
  413a40:	mov	x0, #0x1                   	// #1
  413a44:	lsl	x1, x0, x1
  413a48:	mov	x0, #0x201                 	// #513
  413a4c:	movk	x0, #0x201, lsl #48
  413a50:	tst	x1, x0
  413a54:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413a58:	b	412c88 <ferror@plt+0x10318>
  413a5c:	sub	w1, w1, #0x3bf
  413a60:	cmp	w1, #0xa
  413a64:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413a68:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413a6c:	add	x0, x0, #0x298
  413a70:	ldrh	w0, [x0, w1, uxtw #1]
  413a74:	adr	x1, 413a80 <ferror@plt+0x11110>
  413a78:	add	x0, x1, w0, sxth #2
  413a7c:	br	x0
  413a80:	sub	w1, w1, #0x3b1
  413a84:	cmp	w1, #0x8
  413a88:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413a8c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413a90:	add	x0, x0, #0x2b0
  413a94:	ldrh	w0, [x0, w1, uxtw #1]
  413a98:	adr	x1, 413aa4 <ferror@plt+0x11134>
  413a9c:	add	x0, x1, w0, sxth #2
  413aa0:	br	x0
  413aa4:	mov	w0, #0x1ffc                	// #8188
  413aa8:	cmp	w1, w0
  413aac:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413ab0:	mov	w0, #0x1fc2                	// #8130
  413ab4:	cmp	w1, w0
  413ab8:	b.hi	413a38 <ferror@plt+0x110c8>  // b.pmore
  413abc:	mov	w0, #0x1fb3                	// #8115
  413ac0:	cmp	w1, w0
  413ac4:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  413ac8:	mov	w0, #0x1fbc                	// #8124
  413acc:	cmp	w1, w0
  413ad0:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  413ad4:	b	412c88 <ferror@plt+0x10318>
  413ad8:	cmp	w1, #0x3b9
  413adc:	b.hi	413b64 <ferror@plt+0x111f4>  // b.pmore
  413ae0:	cmp	w1, #0x3b0
  413ae4:	b.hi	413b1c <ferror@plt+0x111ac>  // b.pmore
  413ae8:	cmp	w1, #0x399
  413aec:	b.hi	413b40 <ferror@plt+0x111d0>  // b.pmore
  413af0:	cmp	w1, #0x390
  413af4:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413af8:	sub	w1, w1, #0x391
  413afc:	cmp	w1, #0x8
  413b00:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413b04:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413b08:	add	x0, x0, #0x2c4
  413b0c:	ldrh	w0, [x0, w1, uxtw #1]
  413b10:	adr	x1, 413b1c <ferror@plt+0x111ac>
  413b14:	add	x0, x1, w0, sxth #2
  413b18:	br	x0
  413b1c:	sub	w1, w1, #0x3b1
  413b20:	cmp	w1, #0x8
  413b24:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413b28:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413b2c:	add	x0, x0, #0x2d8
  413b30:	ldrh	w0, [x0, w1, uxtw #1]
  413b34:	adr	x1, 413b40 <ferror@plt+0x111d0>
  413b38:	add	x0, x1, w0, sxth #2
  413b3c:	br	x0
  413b40:	sub	w1, w1, #0x39f
  413b44:	cmp	w1, #0xa
  413b48:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413b4c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413b50:	add	x0, x0, #0x2ec
  413b54:	ldrh	w0, [x0, w1, uxtw #1]
  413b58:	adr	x1, 413b64 <ferror@plt+0x111f4>
  413b5c:	add	x0, x1, w0, sxth #2
  413b60:	br	x0
  413b64:	mov	w0, #0x1fbc                	// #8124
  413b68:	cmp	w1, w0
  413b6c:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  413b70:	b.hi	413bb8 <ferror@plt+0x11248>  // b.pmore
  413b74:	cmp	w1, #0x3c9
  413b78:	b.hi	413ba8 <ferror@plt+0x11238>  // b.pmore
  413b7c:	cmp	w1, #0x3be
  413b80:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413b84:	sub	w1, w1, #0x3bf
  413b88:	cmp	w1, #0xa
  413b8c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413b90:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413b94:	add	x0, x0, #0x304
  413b98:	ldrh	w0, [x0, w1, uxtw #1]
  413b9c:	adr	x1, 413ba8 <ferror@plt+0x11238>
  413ba0:	add	x0, x1, w0, sxth #2
  413ba4:	br	x0
  413ba8:	mov	w0, #0x1fb3                	// #8115
  413bac:	cmp	w1, w0
  413bb0:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  413bb4:	b	412c88 <ferror@plt+0x10318>
  413bb8:	mov	w17, #0xffffe03d            	// #-8131
  413bbc:	add	w1, w1, w17
  413bc0:	cmp	w1, #0x39
  413bc4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413bc8:	mov	x0, #0x1                   	// #1
  413bcc:	lsl	x1, x0, x1
  413bd0:	mov	x0, #0x201                 	// #513
  413bd4:	movk	x0, #0x201, lsl #48
  413bd8:	tst	x1, x0
  413bdc:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413be0:	b	412c88 <ferror@plt+0x10318>
  413be4:	cmp	w1, #0x171
  413be8:	b.hi	413c5c <ferror@plt+0x112ec>  // b.pmore
  413bec:	cmp	w1, #0x167
  413bf0:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  413bf4:	cmp	w1, #0xfc
  413bf8:	b.hi	413c4c <ferror@plt+0x112dc>  // b.pmore
  413bfc:	cmp	w1, #0xd1
  413c00:	b.hi	413c2c <ferror@plt+0x112bc>  // b.pmore
  413c04:	sub	w1, w1, #0x4f
  413c08:	cmp	w1, #0x26
  413c0c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413c10:	mov	x0, #0x1                   	// #1
  413c14:	lsl	x1, x0, x1
  413c18:	mov	x0, #0x41                  	// #65
  413c1c:	movk	x0, #0x41, lsl #32
  413c20:	tst	x1, x0
  413c24:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413c28:	b	412c88 <ferror@plt+0x10318>
  413c2c:	sub	w1, w1, #0xd2
  413c30:	mov	x0, #0x1                   	// #1
  413c34:	lsl	x1, x0, x1
  413c38:	mov	x0, #0x79f                 	// #1951
  413c3c:	movk	x0, #0x79f, lsl #32
  413c40:	tst	x1, x0
  413c44:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413c48:	b	412c88 <ferror@plt+0x10318>
  413c4c:	sub	w1, w1, #0x14c
  413c50:	cmp	w1, #0x5
  413c54:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413c58:	b	412c88 <ferror@plt+0x10318>
  413c5c:	mov	w0, #0x1e53                	// #7763
  413c60:	cmp	w1, w0
  413c64:	b.hi	413cb0 <ferror@plt+0x11340>  // b.pmore
  413c68:	mov	w0, #0x1e4b                	// #7755
  413c6c:	cmp	w1, w0
  413c70:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  413c74:	cmp	w1, #0x1dc
  413c78:	b.hi	413c88 <ferror@plt+0x11318>  // b.pmore
  413c7c:	cmp	w1, #0x1d0
  413c80:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413c84:	b	412c88 <ferror@plt+0x10318>
  413c88:	sub	w1, w1, #0x20c
  413c8c:	cmp	w1, #0x25
  413c90:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413c94:	mov	x0, #0x1                   	// #1
  413c98:	lsl	x1, x0, x1
  413c9c:	mov	x0, #0x3fc0000000          	// #273804165120
  413ca0:	movk	x0, #0xf0f
  413ca4:	tst	x1, x0
  413ca8:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413cac:	b	412c88 <ferror@plt+0x10318>
  413cb0:	mov	w0, #0x1ed9                	// #7897
  413cb4:	cmp	w1, w0
  413cb8:	b.hi	413cdc <ferror@plt+0x1136c>  // b.pmore
  413cbc:	mov	w0, #0x1ecb                	// #7883
  413cc0:	cmp	w1, w0
  413cc4:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  413cc8:	mov	w16, #0xffffe18e            	// #-7794
  413ccc:	add	w1, w1, w16
  413cd0:	cmp	w1, #0x9
  413cd4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413cd8:	b	412c88 <ferror@plt+0x10318>
  413cdc:	mov	w15, #0xffffe11c            	// #-7908
  413ce0:	add	w1, w1, w15
  413ce4:	cmp	w1, #0x3
  413ce8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413cec:	b	412c88 <ferror@plt+0x10318>
  413cf0:	cmp	w1, #0x1a1
  413cf4:	b.hi	413e74 <ferror@plt+0x11504>  // b.pmore
  413cf8:	cmp	w1, #0x167
  413cfc:	b.hi	413dc0 <ferror@plt+0x11450>  // b.pmore
  413d00:	cmp	w1, #0x103
  413d04:	b.hi	413e1c <ferror@plt+0x114ac>  // b.pmore
  413d08:	cmp	w1, #0xc7
  413d0c:	b.hi	413de4 <ferror@plt+0x11474>  // b.pmore
  413d10:	cmp	w1, #0x7a
  413d14:	b.hi	413e0c <ferror@plt+0x1149c>  // b.pmore
  413d18:	cmp	w1, #0x40
  413d1c:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413d20:	sub	w1, w1, #0x41
  413d24:	cmp	w1, #0x39
  413d28:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413d2c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413d30:	add	x0, x0, #0x31c
  413d34:	ldrh	w0, [x0, w1, uxtw #1]
  413d38:	adr	x1, 413d44 <ferror@plt+0x113d4>
  413d3c:	add	x0, x1, w0, sxth #2
  413d40:	br	x0
  413d44:	mov	w14, #0xffffe172            	// #-7822
  413d48:	add	w1, w1, w14
  413d4c:	mov	x0, #0x1                   	// #1
  413d50:	lsl	x1, x0, x1
  413d54:	mov	x0, #0xe0f                 	// #3599
  413d58:	movk	x0, #0x3ff0, lsl #16
  413d5c:	movk	x0, #0xf0ff, lsl #32
  413d60:	movk	x0, #0xff, lsl #48
  413d64:	tst	x1, x0
  413d68:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  413d6c:	b	412a48 <ferror@plt+0x100d8>
  413d70:	mov	w12, #0xffffe1de            	// #-7714
  413d74:	add	w1, w1, w12
  413d78:	mov	x0, #0x1                   	// #1
  413d7c:	lsl	x1, x0, x1
  413d80:	mov	x0, #0xf033                	// #61491
  413d84:	movk	x0, #0xf000, lsl #16
  413d88:	movk	x0, #0xfc0c, lsl #32
  413d8c:	movk	x0, #0x3, lsl #48
  413d90:	tst	x1, x0
  413d94:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413d98:	b	412c88 <ferror@plt+0x10318>
  413d9c:	sub	w1, w1, #0x1f8
  413da0:	mov	x0, #0x1                   	// #1
  413da4:	lsl	x1, x0, x1
  413da8:	mov	x0, #0xffffffffffffff0f    	// #-241
  413dac:	movk	x0, #0xc0c0, lsl #32
  413db0:	movk	x0, #0xffc, lsl #48
  413db4:	tst	x1, x0
  413db8:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  413dbc:	b	412a48 <ferror@plt+0x100d8>
  413dc0:	sub	w1, w1, #0x168
  413dc4:	mov	x0, #0x1                   	// #1
  413dc8:	lsl	x1, x0, x1
  413dcc:	mov	x0, #0xf3ff                	// #62463
  413dd0:	movk	x0, #0x7f, lsl #16
  413dd4:	movk	x0, #0x300, lsl #48
  413dd8:	tst	x1, x0
  413ddc:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413de0:	b	412c88 <ferror@plt+0x10318>
  413de4:	sub	w1, w1, #0xc8
  413de8:	mov	x0, #0x1                   	// #1
  413dec:	lsl	x1, x0, x1
  413df0:	mov	x0, #0x7eff                	// #32511
  413df4:	movk	x0, #0x3f3e, lsl #16
  413df8:	movk	x0, #0x7eff, lsl #32
  413dfc:	movk	x0, #0xfbe, lsl #48
  413e00:	tst	x1, x0
  413e04:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  413e08:	b	412a48 <ferror@plt+0x100d8>
  413e0c:	sub	w1, w1, #0xc0
  413e10:	cmp	w1, #0x5
  413e14:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413e18:	b	412c88 <ferror@plt+0x10318>
  413e1c:	cmp	w1, #0x125
  413e20:	b.hi	413e50 <ferror@plt+0x114e0>  // b.pmore
  413e24:	cmp	w1, #0x10d
  413e28:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413e2c:	sub	w1, w1, #0x10e
  413e30:	cmp	w1, #0x17
  413e34:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413e38:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413e3c:	add	x0, x0, #0x390
  413e40:	ldrh	w0, [x0, w1, uxtw #1]
  413e44:	adr	x1, 413e50 <ferror@plt+0x114e0>
  413e48:	add	x0, x1, w0, sxth #2
  413e4c:	br	x0
  413e50:	sub	w1, w1, #0x128
  413e54:	cmp	w1, #0x3d
  413e58:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413e5c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413e60:	add	x0, x0, #0x3c0
  413e64:	ldrh	w0, [x0, w1, uxtw #1]
  413e68:	adr	x1, 413e74 <ferror@plt+0x11504>
  413e6c:	add	x0, x1, w0, sxth #2
  413e70:	br	x0
  413e74:	mov	w0, #0x1e53                	// #7763
  413e78:	cmp	w1, w0
  413e7c:	b.hi	413ef8 <ferror@plt+0x11588>  // b.pmore
  413e80:	mov	w0, #0x1e21                	// #7713
  413e84:	cmp	w1, w0
  413e88:	b.hi	413d70 <ferror@plt+0x11400>  // b.pmore
  413e8c:	cmp	w1, #0x233
  413e90:	b.hi	413ecc <ferror@plt+0x1155c>  // b.pmore
  413e94:	cmp	w1, #0x1f7
  413e98:	b.hi	413d9c <ferror@plt+0x1142c>  // b.pmore
  413e9c:	sub	w1, w1, #0x1af
  413ea0:	cmp	w1, #0x3a
  413ea4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413ea8:	mov	x0, #0x1                   	// #1
  413eac:	lsl	x1, x0, x1
  413eb0:	mov	x0, #0x3                   	// #3
  413eb4:	movk	x0, #0xc000, lsl #16
  413eb8:	movk	x0, #0xbfff, lsl #32
  413ebc:	movk	x0, #0x607, lsl #48
  413ec0:	tst	x1, x0
  413ec4:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413ec8:	b	412c88 <ferror@plt+0x10318>
  413ecc:	mov	w11, #0xffffe1fe            	// #-7682
  413ed0:	add	w1, w1, w11
  413ed4:	cmp	w1, #0x15
  413ed8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413edc:	mov	x0, #0x1                   	// #1
  413ee0:	lsl	x1, x0, x1
  413ee4:	mov	x0, #0x303                 	// #771
  413ee8:	movk	x0, #0x3c, lsl #16
  413eec:	tst	x1, x0
  413ef0:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  413ef4:	b	412c88 <ferror@plt+0x10318>
  413ef8:	mov	w0, #0x1ec5                	// #7877
  413efc:	cmp	w1, w0
  413f00:	b.hi	413f80 <ferror@plt+0x11610>  // b.pmore
  413f04:	mov	w0, #0x1e8d                	// #7821
  413f08:	cmp	w1, w0
  413f0c:	b.hi	413d44 <ferror@plt+0x113d4>  // b.pmore
  413f10:	mov	w0, #0x1e6b                	// #7787
  413f14:	cmp	w1, w0
  413f18:	b.hi	413f50 <ferror@plt+0x115e0>  // b.pmore
  413f1c:	mov	w0, #0x1e57                	// #7767
  413f20:	cmp	w1, w0
  413f24:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413f28:	mov	w13, #0xffffe1a8            	// #-7768
  413f2c:	add	w1, w1, w13
  413f30:	cmp	w1, #0x13
  413f34:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413f38:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  413f3c:	add	x0, x0, #0x43c
  413f40:	ldrh	w0, [x0, w1, uxtw #1]
  413f44:	adr	x1, 413f50 <ferror@plt+0x115e0>
  413f48:	add	x0, x1, w0, sxth #2
  413f4c:	br	x0
  413f50:	mov	w0, #0x1e7d                	// #7805
  413f54:	cmp	w1, w0
  413f58:	b.hi	413f6c <ferror@plt+0x115fc>  // b.pmore
  413f5c:	mov	w0, #0x1e77                	// #7799
  413f60:	cmp	w1, w0
  413f64:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  413f68:	b	412c88 <ferror@plt+0x10318>
  413f6c:	mov	w10, #0xffffe180            	// #-7808
  413f70:	add	w1, w1, w10
  413f74:	cmp	w1, #0x7
  413f78:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413f7c:	b	412c88 <ferror@plt+0x10318>
  413f80:	mov	w9, #0xffffe138            	// #-7880
  413f84:	add	w1, w1, w9
  413f88:	cmp	w1, #0x31
  413f8c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413f90:	mov	x0, #0x1                   	// #1
  413f94:	lsl	x1, x0, x1
  413f98:	mov	x0, #0xffc3                	// #65475
  413f9c:	movk	x0, #0xc3fc, lsl #16
  413fa0:	movk	x0, #0xccff, lsl #32
  413fa4:	movk	x0, #0x3, lsl #48
  413fa8:	tst	x1, x0
  413fac:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  413fb0:	b	412a48 <ferror@plt+0x100d8>
  413fb4:	cmp	w1, #0x171
  413fb8:	b.hi	413ff4 <ferror@plt+0x11684>  // b.pmore
  413fbc:	cmp	w1, #0x167
  413fc0:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  413fc4:	cmp	w1, #0xdc
  413fc8:	b.hi	413fe4 <ferror@plt+0x11674>  // b.pmore
  413fcc:	cmp	w1, #0xd8
  413fd0:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  413fd4:	and	w1, w1, #0xffffffdf
  413fd8:	cmp	w1, #0x55
  413fdc:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  413fe0:	b	412c88 <ferror@plt+0x10318>
  413fe4:	sub	w1, w1, #0xf9
  413fe8:	cmp	w1, #0x3
  413fec:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  413ff0:	b	412c88 <ferror@plt+0x10318>
  413ff4:	mov	w0, #0x1e7b                	// #7803
  413ff8:	cmp	w1, w0
  413ffc:	b.hi	414030 <ferror@plt+0x116c0>  // b.pmore
  414000:	mov	w0, #0x1e77                	// #7799
  414004:	cmp	w1, w0
  414008:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  41400c:	cmp	w1, #0x1dc
  414010:	b.hi	414020 <ferror@plt+0x116b0>  // b.pmore
  414014:	cmp	w1, #0x1d2
  414018:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  41401c:	b	412c88 <ferror@plt+0x10318>
  414020:	sub	w1, w1, #0x214
  414024:	cmp	w1, #0x3
  414028:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  41402c:	b	412c88 <ferror@plt+0x10318>
  414030:	mov	w8, #0xffffe11a            	// #-7910
  414034:	add	w1, w1, w8
  414038:	cmp	w1, #0x1
  41403c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414040:	b	412c88 <ferror@plt+0x10318>
  414044:	cmp	w1, #0x1e1
  414048:	b.hi	4140b0 <ferror@plt+0x11740>  // b.pmore
  41404c:	cmp	w1, #0x1dd
  414050:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  414054:	cmp	w1, #0xe5
  414058:	b.hi	41408c <ferror@plt+0x1171c>  // b.pmore
  41405c:	cmp	w1, #0xdf
  414060:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  414064:	cmp	w1, #0x61
  414068:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  41406c:	b.hi	41407c <ferror@plt+0x1170c>  // b.pmore
  414070:	cmp	w1, #0x41
  414074:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414078:	b	412c88 <ferror@plt+0x10318>
  41407c:	sub	w1, w1, #0xc0
  414080:	cmp	w1, #0x5
  414084:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414088:	b	412c88 <ferror@plt+0x10318>
  41408c:	cmp	w1, #0x103
  414090:	b.hi	4140a0 <ferror@plt+0x11730>  // b.pmore
  414094:	cmp	w1, #0xff
  414098:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  41409c:	b	412c88 <ferror@plt+0x10318>
  4140a0:	sub	w1, w1, #0x1cd
  4140a4:	cmp	w1, #0x1
  4140a8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4140ac:	b	412c88 <ferror@plt+0x10318>
  4140b0:	cmp	w1, #0x227
  4140b4:	b.hi	4140e0 <ferror@plt+0x11770>  // b.pmore
  4140b8:	cmp	w1, #0x1f9
  4140bc:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4140c0:	sub	w1, w1, #0x1fa
  4140c4:	mov	x0, #0x1                   	// #1
  4140c8:	lsl	x1, x0, x1
  4140cc:	mov	x0, #0x3c3                 	// #963
  4140d0:	movk	x0, #0x3000, lsl #32
  4140d4:	tst	x1, x0
  4140d8:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4140dc:	b	412c88 <ferror@plt+0x10318>
  4140e0:	mov	w0, #0x1eab                	// #7851
  4140e4:	cmp	w1, w0
  4140e8:	b.hi	4140fc <ferror@plt+0x1178c>  // b.pmore
  4140ec:	mov	w0, #0x1ea1                	// #7841
  4140f0:	cmp	w1, w0
  4140f4:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4140f8:	b	412c88 <ferror@plt+0x10318>
  4140fc:	mov	w7, #0xffffe152            	// #-7854
  414100:	add	w1, w1, w7
  414104:	cmp	w1, #0x7
  414108:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  41410c:	b	412c88 <ferror@plt+0x10318>
  414110:	cmp	w1, #0x165
  414114:	b.hi	414160 <ferror@plt+0x117f0>  // b.pmore
  414118:	cmp	w1, #0x159
  41411c:	b.hi	414134 <ferror@plt+0x117c4>  // b.pmore
  414120:	cmp	w1, #0x54
  414124:	b.hi	414150 <ferror@plt+0x117e0>  // b.pmore
  414128:	cmp	w1, #0x52
  41412c:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414130:	b	412c88 <ferror@plt+0x10318>
  414134:	sub	w1, w1, #0x15a
  414138:	mov	x0, #0x1                   	// #1
  41413c:	lsl	x1, x0, x1
  414140:	mov	x0, #0xccf                 	// #3279
  414144:	tst	x1, x0
  414148:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  41414c:	b	412a48 <ferror@plt+0x100d8>
  414150:	sub	w1, w1, #0x73
  414154:	cmp	w1, #0x1
  414158:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  41415c:	b	412c88 <ferror@plt+0x10318>
  414160:	mov	w6, #0xffffe1a0            	// #-7776
  414164:	add	w1, w1, w6
  414168:	cmp	w1, #0x37
  41416c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414170:	mov	x0, #0x1                   	// #1
  414174:	lsl	x1, x0, x1
  414178:	mov	x0, #0xcf3                 	// #3315
  41417c:	movk	x0, #0x80, lsl #48
  414180:	tst	x1, x0
  414184:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414188:	b	412c88 <ferror@plt+0x10318>
  41418c:	cmp	w1, #0x165
  414190:	b.hi	414278 <ferror@plt+0x11908>  // b.pmore
  414194:	cmp	w1, #0x138
  414198:	b.hi	4141fc <ferror@plt+0x1188c>  // b.pmore
  41419c:	cmp	w1, #0x74
  4141a0:	b.hi	414248 <ferror@plt+0x118d8>  // b.pmore
  4141a4:	cmp	w1, #0x42
  4141a8:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4141ac:	sub	w1, w1, #0x43
  4141b0:	cmp	w1, #0x31
  4141b4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4141b8:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  4141bc:	add	x0, x0, #0x464
  4141c0:	ldrh	w0, [x0, w1, uxtw #1]
  4141c4:	adr	x1, 4141d0 <ferror@plt+0x11860>
  4141c8:	add	x0, x1, w0, sxth #2
  4141cc:	br	x0
  4141d0:	mov	w5, #0xffffe1f6            	// #-7690
  4141d4:	add	w1, w1, w5
  4141d8:	mov	x0, #0x1                   	// #1
  4141dc:	lsl	x1, x0, x1
  4141e0:	mov	x0, #0xff3f                	// #65343
  4141e4:	movk	x0, #0x3fc3, lsl #16
  4141e8:	movk	x0, #0xffc3, lsl #32
  4141ec:	movk	x0, #0xf, lsl #48
  4141f0:	tst	x1, x0
  4141f4:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  4141f8:	b	412a48 <ferror@plt+0x100d8>
  4141fc:	sub	w1, w1, #0x139
  414200:	cmp	w1, #0x2c
  414204:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414208:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  41420c:	add	x0, x0, #0x4c8
  414210:	ldrh	w0, [x0, w1, uxtw #1]
  414214:	adr	x1, 414220 <ferror@plt+0x118b0>
  414218:	add	x0, x1, w0, sxth #2
  41421c:	br	x0
  414220:	sub	w1, w1, #0xe8
  414224:	mov	x0, #0x1                   	// #1
  414228:	lsl	x1, x0, x1
  41422c:	mov	x0, #0x20f                 	// #527
  414230:	movk	x0, #0xc000, lsl #16
  414234:	movk	x0, #0xfcff, lsl #32
  414238:	movk	x0, #0x33fc, lsl #48
  41423c:	tst	x1, x0
  414240:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  414244:	b	412a48 <ferror@plt+0x100d8>
  414248:	cmp	w1, #0x125
  41424c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414250:	cmp	w1, #0xe7
  414254:	b.hi	414220 <ferror@plt+0x118b0>  // b.pmore
  414258:	cmp	w1, #0xcb
  41425c:	b.hi	41426c <ferror@plt+0x118fc>  // b.pmore
  414260:	cmp	w1, #0xc7
  414264:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414268:	b	412c88 <ferror@plt+0x10318>
  41426c:	cmp	w1, #0xd1
  414270:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414274:	b	412c88 <ferror@plt+0x10318>
  414278:	mov	w0, #0x1e3d                	// #7741
  41427c:	cmp	w1, w0
  414280:	b.hi	4142c0 <ferror@plt+0x11950>  // b.pmore
  414284:	mov	w0, #0x1e09                	// #7689
  414288:	cmp	w1, w0
  41428c:	b.hi	4141d0 <ferror@plt+0x11860>  // b.pmore
  414290:	sub	w1, w1, #0x1e6
  414294:	cmp	w1, #0x39
  414298:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  41429c:	mov	x0, #0x1                   	// #1
  4142a0:	lsl	x1, x0, x1
  4142a4:	mov	x0, #0xc00f                	// #49167
  4142a8:	movk	x0, #0xc00c, lsl #16
  4142ac:	movk	x0, #0x3c03, lsl #32
  4142b0:	movk	x0, #0x33c, lsl #48
  4142b4:	tst	x1, x0
  4142b8:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4142bc:	b	412c88 <ferror@plt+0x10318>
  4142c0:	mov	w0, #0x1e97                	// #7831
  4142c4:	cmp	w1, w0
  4142c8:	b.hi	414308 <ferror@plt+0x11998>  // b.pmore
  4142cc:	mov	w0, #0x1e95                	// #7829
  4142d0:	cmp	w1, w0
  4142d4:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  4142d8:	mov	w0, #0x1e4b                	// #7755
  4142dc:	cmp	w1, w0
  4142e0:	b.hi	4142f4 <ferror@plt+0x11984>  // b.pmore
  4142e4:	mov	w0, #0x1e43                	// #7747
  4142e8:	cmp	w1, w0
  4142ec:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4142f0:	b	412c88 <ferror@plt+0x10318>
  4142f4:	mov	w4, #0xffffe1a8            	// #-7768
  4142f8:	add	w1, w1, w4
  4142fc:	cmp	w1, #0x19
  414300:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414304:	b	412c88 <ferror@plt+0x10318>
  414308:	mov	w3, #0xffffe148            	// #-7864
  41430c:	add	w1, w1, w3
  414310:	cmp	w1, #0xf
  414314:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414318:	b	412c88 <ferror@plt+0x10318>
  41431c:	cmp	w1, #0x151
  414320:	b.hi	414430 <ferror@plt+0x11ac0>  // b.pmore
  414324:	cmp	w1, #0x119
  414328:	b.hi	4143bc <ferror@plt+0x11a4c>  // b.pmore
  41432c:	cmp	w1, #0xd6
  414330:	b.hi	414400 <ferror@plt+0x11a90>  // b.pmore
  414334:	cmp	w1, #0xbf
  414338:	b.hi	4143e0 <ferror@plt+0x11a70>  // b.pmore
  41433c:	sub	w1, w1, #0x41
  414340:	cmp	w1, #0x34
  414344:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414348:	mov	x0, #0x1                   	// #1
  41434c:	lsl	x1, x0, x1
  414350:	mov	x0, #0x4111                	// #16657
  414354:	movk	x0, #0x10, lsl #16
  414358:	movk	x0, #0x4111, lsl #32
  41435c:	movk	x0, #0x10, lsl #48
  414360:	tst	x1, x0
  414364:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414368:	b	412c88 <ferror@plt+0x10318>
  41436c:	sub	w1, w1, #0x1fa
  414370:	mov	x0, #0x1                   	// #1
  414374:	lsl	x1, x0, x1
  414378:	mov	x0, #0xffc3                	// #65475
  41437c:	movk	x0, #0x3c3f, lsl #16
  414380:	movk	x0, #0x3000, lsl #32
  414384:	movk	x0, #0xff, lsl #48
  414388:	tst	x1, x0
  41438c:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  414390:	b	412a48 <ferror@plt+0x100d8>
  414394:	sub	w1, w1, #0x1af
  414398:	mov	x0, #0x1                   	// #1
  41439c:	lsl	x1, x0, x1
  4143a0:	mov	x0, #0x3                   	// #3
  4143a4:	movk	x0, #0xc000, lsl #16
  4143a8:	movk	x0, #0xbfff, lsl #32
  4143ac:	movk	x0, #0x7, lsl #48
  4143b0:	tst	x1, x0
  4143b4:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4143b8:	b	412c88 <ferror@plt+0x10318>
  4143bc:	sub	w1, w1, #0x11a
  4143c0:	mov	x0, #0x1                   	// #1
  4143c4:	lsl	x1, x0, x1
  4143c8:	mov	x0, #0xc003                	// #49155
  4143cc:	movk	x0, #0x4f, lsl #16
  4143d0:	movk	x0, #0xfc, lsl #48
  4143d4:	tst	x1, x0
  4143d8:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4143dc:	b	412c88 <ferror@plt+0x10318>
  4143e0:	sub	w1, w1, #0xc0
  4143e4:	mov	x0, #0x1                   	// #1
  4143e8:	lsl	x1, x0, x1
  4143ec:	mov	x0, #0xff3f                	// #65343
  4143f0:	movk	x0, #0x7c, lsl #16
  4143f4:	tst	x1, x0
  4143f8:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  4143fc:	b	412a48 <ferror@plt+0x100d8>
  414400:	sub	w1, w1, #0xd9
  414404:	cmp	w1, #0x3e
  414408:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  41440c:	mov	x0, #0x1                   	// #1
  414410:	lsl	x1, x0, x1
  414414:	mov	x0, #0x9f8f                	// #40847
  414418:	movk	x0, #0x3e7f, lsl #16
  41441c:	movk	x0, #0x78f, lsl #32
  414420:	movk	x0, #0x7e00, lsl #48
  414424:	tst	x1, x0
  414428:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  41442c:	b	412a48 <ferror@plt+0x100d8>
  414430:	cmp	w1, #0x231
  414434:	b.hi	414474 <ferror@plt+0x11b04>  // b.pmore
  414438:	cmp	w1, #0x1f9
  41443c:	b.hi	41436c <ferror@plt+0x119fc>  // b.pmore
  414440:	cmp	w1, #0x1e1
  414444:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414448:	cmp	w1, #0x1ae
  41444c:	b.hi	414394 <ferror@plt+0x11a24>  // b.pmore
  414450:	cmp	w1, #0x171
  414454:	b.hi	414464 <ferror@plt+0x11af4>  // b.pmore
  414458:	cmp	w1, #0x167
  41445c:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414460:	b	412c88 <ferror@plt+0x10318>
  414464:	sub	w1, w1, #0x1a0
  414468:	cmp	w1, #0x1
  41446c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414470:	b	412c88 <ferror@plt+0x10318>
  414474:	mov	w0, #0x1e53                	// #7763
  414478:	cmp	w1, w0
  41447c:	b.hi	4144bc <ferror@plt+0x11b4c>  // b.pmore
  414480:	mov	w0, #0x1e4b                	// #7755
  414484:	cmp	w1, w0
  414488:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  41448c:	mov	w2, #0xffffe200            	// #-7680
  414490:	add	w1, w1, w2
  414494:	cmp	w1, #0x2f
  414498:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  41449c:	mov	x0, #0x1                   	// #1
  4144a0:	lsl	x1, x0, x1
  4144a4:	mov	x0, #0x3                   	// #3
  4144a8:	movk	x0, #0xff0, lsl #16
  4144ac:	movk	x0, #0xf000, lsl #32
  4144b0:	tst	x1, x0
  4144b4:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4144b8:	b	412c88 <ferror@plt+0x10318>
  4144bc:	mov	w0, #0x1e7b                	// #7803
  4144c0:	cmp	w1, w0
  4144c4:	b.hi	4144d8 <ferror@plt+0x11b68>  // b.pmore
  4144c8:	mov	w0, #0x1e71                	// #7793
  4144cc:	cmp	w1, w0
  4144d0:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4144d4:	b	412c88 <ferror@plt+0x10318>
  4144d8:	mov	w0, #0xffffe160            	// #-7840
  4144dc:	add	w1, w1, w0
  4144e0:	cmp	w1, #0x51
  4144e4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4144e8:	b	412c88 <ferror@plt+0x10318>
  4144ec:	cmp	w1, #0x148
  4144f0:	b.hi	41461c <ferror@plt+0x11cac>  // b.pmore
  4144f4:	cmp	w1, #0x138
  4144f8:	b.hi	414584 <ferror@plt+0x11c14>  // b.pmore
  4144fc:	cmp	w1, #0xdc
  414500:	b.hi	4145ec <ferror@plt+0x11c7c>  // b.pmore
  414504:	cmp	w1, #0xc7
  414508:	b.hi	4145a8 <ferror@plt+0x11c38>  // b.pmore
  41450c:	cmp	w1, #0x55
  414510:	b.hi	4145c8 <ferror@plt+0x11c58>  // b.pmore
  414514:	cmp	w1, #0x43
  414518:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  41451c:	sub	w1, w1, #0x44
  414520:	cmp	w1, #0x11
  414524:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414528:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  41452c:	add	x0, x0, #0x524
  414530:	ldrh	w0, [x0, w1, uxtw #1]
  414534:	adr	x1, 414540 <ferror@plt+0x11bd0>
  414538:	add	x0, x1, w0, sxth #2
  41453c:	br	x0
  414540:	mov	w18, #0xffffe1f6            	// #-7690
  414544:	add	w1, w1, w18
  414548:	mov	x0, #0x1                   	// #1
  41454c:	lsl	x1, x0, x1
  414550:	mov	x0, #0x3c03                	// #15363
  414554:	movk	x0, #0xc00, lsl #48
  414558:	tst	x1, x0
  41455c:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414560:	b	412c88 <ferror@plt+0x10318>
  414564:	sub	w1, w1, #0x1f8
  414568:	mov	x0, #0x1                   	// #1
  41456c:	lsl	x1, x0, x1
  414570:	mov	x0, #0xf003                	// #61443
  414574:	movk	x0, #0xf000, lsl #16
  414578:	tst	x1, x0
  41457c:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414580:	b	412c88 <ferror@plt+0x10318>
  414584:	sub	w1, w1, #0x139
  414588:	cmp	w1, #0xf
  41458c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414590:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  414594:	add	x0, x0, #0x548
  414598:	ldrh	w0, [x0, w1, uxtw #1]
  41459c:	adr	x1, 4145a8 <ferror@plt+0x11c38>
  4145a0:	add	x0, x1, w0, sxth #2
  4145a4:	br	x0
  4145a8:	sub	w1, w1, #0xc8
  4145ac:	mov	x0, #0x1                   	// #1
  4145b0:	lsl	x1, x0, x1
  4145b4:	mov	x0, #0x20f                 	// #527
  4145b8:	movk	x0, #0x1e, lsl #16
  4145bc:	tst	x1, x0
  4145c0:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4145c4:	b	412c88 <ferror@plt+0x10318>
  4145c8:	sub	w1, w1, #0x64
  4145cc:	cmp	w1, #0x11
  4145d0:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4145d4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  4145d8:	add	x0, x0, #0x568
  4145dc:	ldrh	w0, [x0, w1, uxtw #1]
  4145e0:	adr	x1, 4145ec <ferror@plt+0x11c7c>
  4145e4:	add	x0, x1, w0, sxth #2
  4145e8:	br	x0
  4145ec:	sub	w1, w1, #0xe8
  4145f0:	cmp	w1, #0x33
  4145f4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4145f8:	mov	x0, #0x1                   	// #1
  4145fc:	lsl	x1, x0, x1
  414600:	mov	x0, #0x20f                 	// #527
  414604:	movk	x0, #0x1e, lsl #16
  414608:	movk	x0, #0xfcc0, lsl #32
  41460c:	movk	x0, #0xc, lsl #48
  414610:	tst	x1, x0
  414614:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414618:	b	412c88 <ferror@plt+0x10318>
  41461c:	mov	w0, #0x1e45                	// #7749
  414620:	cmp	w1, w0
  414624:	b.hi	414674 <ferror@plt+0x11d04>  // b.pmore
  414628:	mov	w0, #0x1e09                	// #7689
  41462c:	cmp	w1, w0
  414630:	b.hi	414540 <ferror@plt+0x11bd0>  // b.pmore
  414634:	cmp	w1, #0x217
  414638:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  41463c:	cmp	w1, #0x1f7
  414640:	b.hi	414564 <ferror@plt+0x11bf4>  // b.pmore
  414644:	cmp	w1, #0x171
  414648:	b.hi	414664 <ferror@plt+0x11cf4>  // b.pmore
  41464c:	cmp	w1, #0x167
  414650:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  414654:	sub	w1, w1, #0x164
  414658:	cmp	w1, #0x1
  41465c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414660:	b	412c88 <ferror@plt+0x10318>
  414664:	sub	w1, w1, #0x1d3
  414668:	cmp	w1, #0x9
  41466c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414670:	b	412c88 <ferror@plt+0x10318>
  414674:	mov	w0, #0x1e97                	// #7831
  414678:	cmp	w1, w0
  41467c:	b.hi	4146b4 <ferror@plt+0x11d44>  // b.pmore
  414680:	mov	w0, #0x1e69                	// #7785
  414684:	cmp	w1, w0
  414688:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  41468c:	mov	w30, #0xffffe196            	// #-7786
  414690:	add	w1, w1, w30
  414694:	mov	x0, #0x1                   	// #1
  414698:	lsl	x1, x0, x1
  41469c:	mov	x0, #0xc003                	// #49155
  4146a0:	movk	x0, #0x3, lsl #16
  4146a4:	movk	x0, #0x2000, lsl #32
  4146a8:	tst	x1, x0
  4146ac:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4146b0:	b	412c88 <ferror@plt+0x10318>
  4146b4:	mov	w0, #0x1ec5                	// #7877
  4146b8:	cmp	w1, w0
  4146bc:	b.hi	4146d0 <ferror@plt+0x11d60>  // b.pmore
  4146c0:	mov	w0, #0x1eb9                	// #7865
  4146c4:	cmp	w1, w0
  4146c8:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4146cc:	b	412c88 <ferror@plt+0x10318>
  4146d0:	mov	w17, #0xffffe11a            	// #-7910
  4146d4:	add	w1, w1, w17
  4146d8:	cmp	w1, #0x1
  4146dc:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4146e0:	b	412c88 <ferror@plt+0x10318>
  4146e4:	cmp	w1, #0x21f
  4146e8:	b.hi	41471c <ferror@plt+0x11dac>  // b.pmore
  4146ec:	cmp	w1, #0x21d
  4146f0:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  4146f4:	cmp	w1, #0x68
  4146f8:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  4146fc:	b.hi	41470c <ferror@plt+0x11d9c>  // b.pmore
  414700:	cmp	w1, #0x48
  414704:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414708:	b	412c88 <ferror@plt+0x10318>
  41470c:	sub	w1, w1, #0x124
  414710:	cmp	w1, #0x1
  414714:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414718:	b	412c88 <ferror@plt+0x10318>
  41471c:	mov	w0, #0x1e23                	// #7715
  414720:	cmp	w1, w0
  414724:	b.hi	414738 <ferror@plt+0x11dc8>  // b.pmore
  414728:	mov	w0, #0x1e21                	// #7713
  41472c:	cmp	w1, w0
  414730:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414734:	b	412c88 <ferror@plt+0x10318>
  414738:	mov	w16, #0xffffe1da            	// #-7718
  41473c:	add	w1, w1, w16
  414740:	cmp	w1, #0x1
  414744:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414748:	b	412c88 <ferror@plt+0x10318>
  41474c:	cmp	w1, #0x130
  414750:	b.hi	414808 <ferror@plt+0x11e98>  // b.pmore
  414754:	cmp	w1, #0xf8
  414758:	b.hi	4147b8 <ferror@plt+0x11e48>  // b.pmore
  41475c:	cmp	w1, #0x75
  414760:	b.hi	4147e0 <ferror@plt+0x11e70>  // b.pmore
  414764:	cmp	w1, #0x44
  414768:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  41476c:	sub	w1, w1, #0x45
  414770:	mov	x0, #0x1                   	// #1
  414774:	lsl	x1, x0, x1
  414778:	mov	x0, #0x11                  	// #17
  41477c:	movk	x0, #0x1, lsl #16
  414780:	movk	x0, #0x11, lsl #32
  414784:	movk	x0, #0x1, lsl #48
  414788:	tst	x1, x0
  41478c:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414790:	b	412c88 <ferror@plt+0x10318>
  414794:	mov	w15, #0xffffe146            	// #-7866
  414798:	add	w1, w1, w15
  41479c:	mov	x0, #0x1                   	// #1
  4147a0:	lsl	x1, x0, x1
  4147a4:	mov	x0, #0xcfff                	// #53247
  4147a8:	movk	x0, #0x3000, lsl #32
  4147ac:	tst	x1, x0
  4147b0:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4147b4:	b	412c88 <ferror@plt+0x10318>
  4147b8:	sub	w1, w1, #0xf9
  4147bc:	mov	x0, #0x1                   	// #1
  4147c0:	lsl	x1, x0, x1
  4147c4:	mov	x0, #0xf                   	// #15
  4147c8:	movk	x0, #0x7e00, lsl #16
  4147cc:	movk	x0, #0x8006, lsl #32
  4147d0:	movk	x0, #0x9f, lsl #48
  4147d4:	tst	x1, x0
  4147d8:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4147dc:	b	412c88 <ferror@plt+0x10318>
  4147e0:	sub	w1, w1, #0xc8
  4147e4:	cmp	w1, #0x27
  4147e8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4147ec:	mov	x0, #0x1                   	// #1
  4147f0:	lsl	x1, x0, x1
  4147f4:	mov	x0, #0xff000000ff          	// #1095216660735
  4147f8:	movk	x0, #0x1e, lsl #16
  4147fc:	tst	x1, x0
  414800:	b.ne	412c88 <ferror@plt+0x10318>  // b.any
  414804:	b	412a48 <ferror@plt+0x100d8>
  414808:	mov	w0, #0x1e17                	// #7703
  41480c:	cmp	w1, w0
  414810:	b.hi	414878 <ferror@plt+0x11f08>  // b.pmore
  414814:	mov	w0, #0x1e13                	// #7699
  414818:	cmp	w1, w0
  41481c:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  414820:	cmp	w1, #0x1dc
  414824:	b.hi	414854 <ferror@plt+0x11ee4>  // b.pmore
  414828:	cmp	w1, #0x1d2
  41482c:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  414830:	cmp	w1, #0x171
  414834:	b.hi	414844 <ferror@plt+0x11ed4>  // b.pmore
  414838:	cmp	w1, #0x167
  41483c:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414840:	b	412c88 <ferror@plt+0x10318>
  414844:	sub	w1, w1, #0x1cf
  414848:	cmp	w1, #0x1
  41484c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414850:	b	412c88 <ferror@plt+0x10318>
  414854:	cmp	w1, #0x20b
  414858:	b.hi	414868 <ferror@plt+0x11ef8>  // b.pmore
  41485c:	cmp	w1, #0x203
  414860:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414864:	b	412c88 <ferror@plt+0x10318>
  414868:	sub	w1, w1, #0x214
  41486c:	cmp	w1, #0x3
  414870:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414874:	b	412c88 <ferror@plt+0x10318>
  414878:	mov	w0, #0x1ee7                	// #7911
  41487c:	cmp	w1, w0
  414880:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414884:	mov	w0, #0x1eb9                	// #7865
  414888:	cmp	w1, w0
  41488c:	b.hi	414794 <ferror@plt+0x11e24>  // b.pmore
  414890:	mov	w0, #0x1e2f                	// #7727
  414894:	cmp	w1, w0
  414898:	b.hi	4148ac <ferror@plt+0x11f3c>  // b.pmore
  41489c:	mov	w0, #0x1e2d                	// #7725
  4148a0:	cmp	w1, w0
  4148a4:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4148a8:	b	412c88 <ferror@plt+0x10318>
  4148ac:	mov	w14, #0xffffe188            	// #-7800
  4148b0:	add	w1, w1, w14
  4148b4:	cmp	w1, #0x3
  4148b8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4148bc:	b	412c88 <ferror@plt+0x10318>
  4148c0:	cmp	w1, #0x159
  4148c4:	b.hi	4149ec <ferror@plt+0x1207c>  // b.pmore
  4148c8:	cmp	w1, #0x138
  4148cc:	b.hi	414964 <ferror@plt+0x11ff4>  // b.pmore
  4148d0:	cmp	w1, #0x7a
  4148d4:	b.hi	4149b8 <ferror@plt+0x12048>  // b.pmore
  4148d8:	cmp	w1, #0x61
  4148dc:	b.hi	414988 <ferror@plt+0x12018>  // b.pmore
  4148e0:	cmp	w1, #0x54
  4148e4:	b.hi	4149ac <ferror@plt+0x1203c>  // b.pmore
  4148e8:	cmp	w1, #0x41
  4148ec:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  4148f0:	sub	w1, w1, #0x42
  4148f4:	cmp	w1, #0x12
  4148f8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4148fc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  414900:	add	x0, x0, #0x58c
  414904:	ldrh	w0, [x0, w1, uxtw #1]
  414908:	adr	x1, 414914 <ferror@plt+0x11fa4>
  41490c:	add	x0, x1, w0, sxth #2
  414910:	br	x0
  414914:	mov	w13, #0xffffe1dd            	// #-7715
  414918:	add	w1, w1, w13
  41491c:	mov	x0, #0x1                   	// #1
  414920:	lsl	x1, x0, x1
  414924:	mov	x0, #0x6011                	// #24593
  414928:	movk	x0, #0x6, lsl #32
  41492c:	movk	x0, #0x60, lsl #48
  414930:	tst	x1, x0
  414934:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414938:	b	412c88 <ferror@plt+0x10318>
  41493c:	sub	w1, w1, #0x1e8
  414940:	mov	x0, #0x1                   	// #1
  414944:	lsl	x1, x0, x1
  414948:	mov	x0, #0x3                   	// #3
  41494c:	movk	x0, #0x3, lsl #16
  414950:	movk	x0, #0xf00, lsl #32
  414954:	movk	x0, #0x80, lsl #48
  414958:	tst	x1, x0
  41495c:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414960:	b	412c88 <ferror@plt+0x10318>
  414964:	sub	w1, w1, #0x139
  414968:	cmp	w1, #0x20
  41496c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414970:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  414974:	add	x0, x0, #0x5b4
  414978:	ldrh	w0, [x0, w1, uxtw #1]
  41497c:	adr	x1, 414988 <ferror@plt+0x12018>
  414980:	add	x0, x1, w0, sxth #2
  414984:	br	x0
  414988:	sub	w1, w1, #0x62
  41498c:	cmp	w1, #0x18
  414990:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414994:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  414998:	add	x0, x0, #0x5f8
  41499c:	ldrh	w0, [x0, w1, uxtw #1]
  4149a0:	adr	x1, 4149ac <ferror@plt+0x1203c>
  4149a4:	add	x0, x1, w0, sxth #2
  4149a8:	br	x0
  4149ac:	cmp	w1, #0x5a
  4149b0:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  4149b4:	b	412c88 <ferror@plt+0x10318>
  4149b8:	cmp	w1, #0xd1
  4149bc:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  4149c0:	sub	w1, w1, #0xf1
  4149c4:	cmp	w1, #0x34
  4149c8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  4149cc:	mov	x0, #0x1                   	// #1
  4149d0:	lsl	x1, x0, x1
  4149d4:	mov	x0, #0x1                   	// #1
  4149d8:	movk	x0, #0x6000, lsl #16
  4149dc:	movk	x0, #0x10, lsl #48
  4149e0:	tst	x1, x0
  4149e4:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  4149e8:	b	412c88 <ferror@plt+0x10318>
  4149ec:	mov	w0, #0x1e59                	// #7769
  4149f0:	cmp	w1, w0
  4149f4:	b.hi	414a68 <ferror@plt+0x120f8>  // b.pmore
  4149f8:	mov	w0, #0x1e22                	// #7714
  4149fc:	cmp	w1, w0
  414a00:	b.hi	414914 <ferror@plt+0x11fa4>  // b.pmore
  414a04:	cmp	w1, #0x21f
  414a08:	b.hi	414a38 <ferror@plt+0x120c8>  // b.pmore
  414a0c:	cmp	w1, #0x1e7
  414a10:	b.hi	41493c <ferror@plt+0x11fcc>  // b.pmore
  414a14:	cmp	w1, #0x165
  414a18:	b.hi	414a28 <ferror@plt+0x120b8>  // b.pmore
  414a1c:	cmp	w1, #0x163
  414a20:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414a24:	b	412c88 <ferror@plt+0x10318>
  414a28:	sub	w1, w1, #0x179
  414a2c:	cmp	w1, #0x5
  414a30:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414a34:	b	412c88 <ferror@plt+0x10318>
  414a38:	mov	w0, #0x1e03                	// #7683
  414a3c:	cmp	w1, w0
  414a40:	b.hi	414a54 <ferror@plt+0x120e4>  // b.pmore
  414a44:	mov	w0, #0x1e01                	// #7681
  414a48:	cmp	w1, w0
  414a4c:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414a50:	b	412c88 <ferror@plt+0x10318>
  414a54:	mov	w12, #0xffffe1f6            	// #-7690
  414a58:	add	w1, w1, w12
  414a5c:	cmp	w1, #0x1
  414a60:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414a64:	b	412c88 <ferror@plt+0x10318>
  414a68:	mov	w11, #0xffffe196            	// #-7786
  414a6c:	add	w1, w1, w11
  414a70:	cmp	w1, #0x2d
  414a74:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414a78:	mov	x0, #0x1                   	// #1
  414a7c:	lsl	x1, x0, x1
  414a80:	mov	x0, #0x3                   	// #3
  414a84:	movk	x0, #0x20c0, lsl #32
  414a88:	tst	x1, x0
  414a8c:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414a90:	b	412c88 <ferror@plt+0x10318>
  414a94:	mov	w0, #0x1f81                	// #8065
  414a98:	cmp	w1, w0
  414a9c:	b.hi	414b38 <ferror@plt+0x121c8>  // b.pmore
  414aa0:	mov	w0, #0x1f4f                	// #8015
  414aa4:	cmp	w1, w0
  414aa8:	b.hi	414af4 <ferror@plt+0x12184>  // b.pmore
  414aac:	mov	w0, #0x1f39                	// #7993
  414ab0:	cmp	w1, w0
  414ab4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414ab8:	mov	w0, #0x1eff                	// #7935
  414abc:	cmp	w1, w0
  414ac0:	b.hi	414b1c <ferror@plt+0x121ac>  // b.pmore
  414ac4:	cmp	w1, #0xa8
  414ac8:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  414acc:	sub	w1, w1, #0x3b1
  414ad0:	cmp	w1, #0x1a
  414ad4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414ad8:	mov	x0, #0x1                   	// #1
  414adc:	lsl	x1, x0, x1
  414ae0:	mov	x0, #0x141                 	// #321
  414ae4:	movk	x0, #0x710, lsl #16
  414ae8:	tst	x1, x0
  414aec:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414af0:	b	412c88 <ferror@plt+0x10318>
  414af4:	mov	w9, #0xffffe0b0            	// #-8016
  414af8:	add	w1, w1, w9
  414afc:	mov	x0, #0x1                   	// #1
  414b00:	lsl	x1, x0, x1
  414b04:	mov	x0, #0x203                 	// #515
  414b08:	movk	x0, #0x303, lsl #16
  414b0c:	movk	x0, #0x3, lsl #48
  414b10:	tst	x1, x0
  414b14:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414b18:	b	412c88 <ferror@plt+0x10318>
  414b1c:	mov	x0, #0x1                   	// #1
  414b20:	lsl	x1, x0, x1
  414b24:	mov	x0, #0x303030303030303     	// #217020518514230019
  414b28:	movk	x0, #0x0, lsl #16
  414b2c:	tst	x1, x0
  414b30:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414b34:	b	412c88 <ferror@plt+0x10318>
  414b38:	mov	w0, #0x1fbf                	// #8127
  414b3c:	cmp	w1, w0
  414b40:	b.hi	414b7c <ferror@plt+0x1220c>  // b.pmore
  414b44:	mov	w0, #0x1f87                	// #8071
  414b48:	cmp	w1, w0
  414b4c:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414b50:	mov	w10, #0xffffe078            	// #-8072
  414b54:	add	w1, w1, w10
  414b58:	mov	x0, #0x1                   	// #1
  414b5c:	lsl	x1, x0, x1
  414b60:	mov	x0, #0x303                 	// #771
  414b64:	movk	x0, #0x303, lsl #16
  414b68:	movk	x0, #0x803, lsl #32
  414b6c:	movk	x0, #0x80, lsl #48
  414b70:	tst	x1, x0
  414b74:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414b78:	b	412c88 <ferror@plt+0x10318>
  414b7c:	mov	w8, #0xffffe03d            	// #-8131
  414b80:	add	w1, w1, w8
  414b84:	cmp	w1, #0x3b
  414b88:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414b8c:	mov	x0, #0x1                   	// #1
  414b90:	lsl	x1, x0, x1
  414b94:	mov	x0, #0x1                   	// #1
  414b98:	movk	x0, #0x801, lsl #48
  414b9c:	tst	x1, x0
  414ba0:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414ba4:	b	412c88 <ferror@plt+0x10318>
  414ba8:	cmp	w1, #0x3ce
  414bac:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  414bb0:	b.hi	414c08 <ferror@plt+0x12298>  // b.pmore
  414bb4:	cmp	w1, #0x3b7
  414bb8:	b.hi	414bfc <ferror@plt+0x1228c>  // b.pmore
  414bbc:	cmp	w1, #0x3a8
  414bc0:	b.hi	414bd8 <ferror@plt+0x12268>  // b.pmore
  414bc4:	cmp	w1, #0x391
  414bc8:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  414bcc:	cmp	w1, #0x397
  414bd0:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414bd4:	b	412c88 <ferror@plt+0x10318>
  414bd8:	sub	w1, w1, #0x3a9
  414bdc:	cmp	w1, #0xe
  414be0:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414be4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  414be8:	add	x0, x0, #0x62c
  414bec:	ldrh	w0, [x0, w1, uxtw #1]
  414bf0:	adr	x1, 414bfc <ferror@plt+0x1228c>
  414bf4:	add	x0, x1, w0, sxth #2
  414bf8:	br	x0
  414bfc:	cmp	w1, #0x3c9
  414c00:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414c04:	b	412c88 <ferror@plt+0x10318>
  414c08:	mov	w0, #0x1f7c                	// #8060
  414c0c:	cmp	w1, w0
  414c10:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  414c14:	b.hi	414c70 <ferror@plt+0x12300>  // b.pmore
  414c18:	mov	w0, #0x1f70                	// #8048
  414c1c:	cmp	w1, w0
  414c20:	b.hi	414c60 <ferror@plt+0x122f0>  // b.pmore
  414c24:	mov	w0, #0x1f5f                	// #8031
  414c28:	cmp	w1, w0
  414c2c:	b.hi	412c88 <ferror@plt+0x10318>  // b.pmore
  414c30:	mov	w0, #0x1f0f                	// #7951
  414c34:	cmp	w1, w0
  414c38:	b.hi	414c4c <ferror@plt+0x122dc>  // b.pmore
  414c3c:	mov	w0, #0x1eff                	// #7935
  414c40:	cmp	w1, w0
  414c44:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414c48:	b	412c88 <ferror@plt+0x10318>
  414c4c:	mov	w7, #0xffffe0e0            	// #-7968
  414c50:	add	w1, w1, w7
  414c54:	cmp	w1, #0xf
  414c58:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414c5c:	b	412c88 <ferror@plt+0x10318>
  414c60:	mov	w0, #0x1f74                	// #8052
  414c64:	cmp	w1, w0
  414c68:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414c6c:	b	412c88 <ferror@plt+0x10318>
  414c70:	mov	w0, #0x1fc6                	// #8134
  414c74:	cmp	w1, w0
  414c78:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  414c7c:	and	w1, w1, #0xffffffbf
  414c80:	mov	w0, #0x1fb6                	// #8118
  414c84:	cmp	w1, w0
  414c88:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414c8c:	b	412c88 <ferror@plt+0x10318>
  414c90:	cmp	w1, #0x627
  414c94:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414c98:	b	412c88 <ferror@plt+0x10318>
  414c9c:	cmp	w1, #0x64a
  414ca0:	b.hi	414ccc <ferror@plt+0x1235c>  // b.pmore
  414ca4:	cmp	w1, #0x626
  414ca8:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414cac:	sub	w1, w1, #0x627
  414cb0:	mov	x0, #0x1                   	// #1
  414cb4:	lsl	x1, x0, x1
  414cb8:	mov	x0, #0x1                   	// #1
  414cbc:	movk	x0, #0xa, lsl #32
  414cc0:	tst	x1, x0
  414cc4:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414cc8:	b	412c88 <ferror@plt+0x10318>
  414ccc:	sub	w1, w1, #0x6c1
  414cd0:	cmp	w1, #0x14
  414cd4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414cd8:	mov	x0, #0x1                   	// #1
  414cdc:	lsl	x1, x0, x1
  414ce0:	add	x0, x0, #0x120, lsl #12
  414ce4:	tst	x1, x0
  414ce8:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414cec:	b	412c88 <ferror@plt+0x10318>
  414cf0:	cmp	w1, #0x623
  414cf4:	b.hi	414d04 <ferror@plt+0x12394>  // b.pmore
  414cf8:	cmp	w1, #0x621
  414cfc:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414d00:	b	412c88 <ferror@plt+0x10318>
  414d04:	cmp	w1, #0x627
  414d08:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  414d0c:	b	412a48 <ferror@plt+0x100d8>
  414d10:	cmp	w1, #0x917
  414d14:	b.hi	414d24 <ferror@plt+0x123b4>  // b.pmore
  414d18:	cmp	w1, #0x914
  414d1c:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414d20:	b	412c88 <ferror@plt+0x10318>
  414d24:	sub	w1, w1, #0x91c
  414d28:	cmp	w1, #0x17
  414d2c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414d30:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  414d34:	add	x0, x0, #0x64c
  414d38:	ldrh	w0, [x0, w1, uxtw #1]
  414d3c:	adr	x1, 414d48 <ferror@plt+0x123d8>
  414d40:	add	x0, x1, w0, sxth #2
  414d44:	br	x0
  414d48:	cmp	w1, #0x9c7
  414d4c:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414d50:	b	412c88 <ferror@plt+0x10318>
  414d54:	cmp	w1, #0xb47
  414d58:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414d5c:	b	412c88 <ferror@plt+0x10318>
  414d60:	cmp	w1, #0xb47
  414d64:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414d68:	b	412c88 <ferror@plt+0x10318>
  414d6c:	sub	w1, w1, #0xbc6
  414d70:	cmp	w1, #0x1
  414d74:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414d78:	b	412c88 <ferror@plt+0x10318>
  414d7c:	cmp	w1, #0xb92
  414d80:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  414d84:	cmp	w1, #0xbc6
  414d88:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414d8c:	b	412c88 <ferror@plt+0x10318>
  414d90:	cmp	w1, #0xc46
  414d94:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414d98:	b	412c88 <ferror@plt+0x10318>
  414d9c:	sub	w1, w1, #0xcbf
  414da0:	cmp	w1, #0xb
  414da4:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414da8:	mov	x0, #0x1                   	// #1
  414dac:	lsl	x1, x0, x1
  414db0:	mov	x0, #0x881                 	// #2177
  414db4:	tst	x1, x0
  414db8:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414dbc:	b	412c88 <ferror@plt+0x10318>
  414dc0:	sub	w1, w1, #0xd46
  414dc4:	cmp	w1, #0x1
  414dc8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414dcc:	b	412c88 <ferror@plt+0x10318>
  414dd0:	cmp	w1, #0xd46
  414dd4:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414dd8:	b	412c88 <ferror@plt+0x10318>
  414ddc:	cmp	w1, #0xdd9
  414de0:	b.eq	412c88 <ferror@plt+0x10318>  // b.none
  414de4:	cmp	w1, #0xddc
  414de8:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414dec:	b	412c88 <ferror@plt+0x10318>
  414df0:	sub	w1, w1, #0xdd9
  414df4:	cmp	w1, #0x1
  414df8:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414dfc:	b	412c88 <ferror@plt+0x10318>
  414e00:	mov	w0, #0x1025                	// #4133
  414e04:	cmp	w1, w0
  414e08:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414e0c:	b	412c88 <ferror@plt+0x10318>
  414e10:	mov	w0, #0x1b11                	// #6929
  414e14:	cmp	w1, w0
  414e18:	b.hi	414e50 <ferror@plt+0x124e0>  // b.pmore
  414e1c:	mov	w0, #0x1b04                	// #6916
  414e20:	cmp	w1, w0
  414e24:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414e28:	mov	w6, #0xffffe4fb            	// #-6917
  414e2c:	add	w1, w1, w6
  414e30:	cmp	w1, #0xc
  414e34:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414e38:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  414e3c:	add	x0, x0, #0x67c
  414e40:	ldrh	w0, [x0, w1, uxtw #1]
  414e44:	adr	x1, 414e50 <ferror@plt+0x124e0>
  414e48:	add	x0, x1, w0, sxth #2
  414e4c:	br	x0
  414e50:	mov	w5, #0xffffe4c6            	// #-6970
  414e54:	add	w1, w1, w5
  414e58:	cmp	w1, #0x8
  414e5c:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414e60:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  414e64:	add	x0, x0, #0x698
  414e68:	ldrh	w0, [x0, w1, uxtw #1]
  414e6c:	adr	x1, 414e78 <ferror@plt+0x12508>
  414e70:	add	x0, x1, w0, sxth #2
  414e74:	br	x0
  414e78:	mov	w3, #0xffffcf63            	// #-12445
  414e7c:	add	w1, w1, w3
  414e80:	cmp	w1, #0x3e
  414e84:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414e88:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  414e8c:	add	x0, x0, #0x6ac
  414e90:	ldrh	w0, [x0, w1, uxtw #1]
  414e94:	adr	x1, 414ea0 <ferror@plt+0x12530>
  414e98:	add	x0, x1, w0, sxth #2
  414e9c:	br	x0
  414ea0:	mov	w0, #0x30f2                	// #12530
  414ea4:	cmp	w1, w0
  414ea8:	b.hi	414ebc <ferror@plt+0x1254c>  // b.pmore
  414eac:	mov	w0, #0x30ee                	// #12526
  414eb0:	cmp	w1, w0
  414eb4:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414eb8:	b	412c88 <ferror@plt+0x10318>
  414ebc:	mov	w0, #0x30fd                	// #12541
  414ec0:	cmp	w1, w0
  414ec4:	b.ne	412a48 <ferror@plt+0x100d8>  // b.any
  414ec8:	b	412c88 <ferror@plt+0x10318>
  414ecc:	mov	w0, #0x307b                	// #12411
  414ed0:	cmp	w1, w0
  414ed4:	b.hi	414f0c <ferror@plt+0x1259c>  // b.pmore
  414ed8:	mov	w0, #0x306e                	// #12398
  414edc:	cmp	w1, w0
  414ee0:	b.ls	412a48 <ferror@plt+0x100d8>  // b.plast
  414ee4:	mov	w2, #0xffffcf91            	// #-12399
  414ee8:	add	w1, w1, w2
  414eec:	cmp	w1, #0xc
  414ef0:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414ef4:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  414ef8:	add	x0, x0, #0x72c
  414efc:	ldrh	w0, [x0, w1, uxtw #1]
  414f00:	adr	x1, 414f0c <ferror@plt+0x1259c>
  414f04:	add	x0, x1, w0, sxth #2
  414f08:	br	x0
  414f0c:	mov	w0, #0xffffcf31            	// #-12495
  414f10:	add	w1, w1, w0
  414f14:	cmp	w1, #0xc
  414f18:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414f1c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  414f20:	add	x0, x0, #0x748
  414f24:	ldrh	w0, [x0, w1, uxtw #1]
  414f28:	adr	x1, 414f34 <ferror@plt+0x125c4>
  414f2c:	add	x0, x1, w0, sxth #2
  414f30:	br	x0
  414f34:	sub	w1, w1, #0x11, lsl #12
  414f38:	sub	w1, w1, #0x99
  414f3c:	cmp	w1, #0xc
  414f40:	b.hi	412a48 <ferror@plt+0x100d8>  // b.pmore
  414f44:	mov	x0, #0x1                   	// #1
  414f48:	lsl	x1, x0, x1
  414f4c:	mov	x0, #0x1005                	// #4101
  414f50:	tst	x1, x0
  414f54:	b.eq	412a48 <ferror@plt+0x100d8>  // b.none
  414f58:	b	412c88 <ferror@plt+0x10318>
  414f5c:	tbnz	w25, #7, 412a48 <ferror@plt+0x100d8>
  414f60:	tbz	w25, #6, 414f78 <ferror@plt+0x12608>
  414f64:	ldr	w0, [x21, #8]
  414f68:	cmp	w0, #0x0
  414f6c:	csinc	w0, w0, wzr, gt
  414f70:	str	w0, [x21, #8]
  414f74:	b	412a48 <ferror@plt+0x100d8>
  414f78:	tbnz	w25, #5, 4129fc <ferror@plt+0x1008c>
  414f7c:	b	412c88 <ferror@plt+0x10318>
  414f80:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  414f84:	mov	x4, x22
  414f88:	sub	w3, w28, w22
  414f8c:	add	x2, x2, #0xa00
  414f90:	mov	x0, x20
  414f94:	mov	w1, #0x3                   	// #3
  414f98:	bl	419440 <ferror@plt+0x16ad0>
  414f9c:	b	41281c <ferror@plt+0xfeac>
  414fa0:	stp	x29, x30, [sp, #-336]!
  414fa4:	mov	x29, sp
  414fa8:	add	x8, sp, #0x118
  414fac:	stp	x19, x20, [sp, #16]
  414fb0:	stp	x21, x22, [sp, #32]
  414fb4:	mov	x21, x0
  414fb8:	stp	x23, x24, [sp, #48]
  414fbc:	mov	x24, x1
  414fc0:	mov	w1, w4
  414fc4:	stp	x25, x26, [sp, #64]
  414fc8:	mov	x26, x3
  414fcc:	stp	x27, x28, [sp, #80]
  414fd0:	str	x5, [sp, #160]
  414fd4:	str	x2, [sp, #176]
  414fd8:	bl	411d98 <ferror@plt+0xf428>
  414fdc:	ldr	x0, [sp, #280]
  414fe0:	str	x0, [sp, #104]
  414fe4:	ldr	x0, [sp, #288]
  414fe8:	cmp	x6, #0x0
  414fec:	str	x0, [sp, #136]
  414ff0:	ldr	w0, [sp, #296]
  414ff4:	str	w0, [sp, #168]
  414ff8:	cset	w0, ne  // ne = any
  414ffc:	str	w0, [sp, #124]
  415000:	ldr	x0, [sp, #160]
  415004:	ldr	w1, [sp, #124]
  415008:	cmp	x0, #0x0
  41500c:	cset	w0, ne  // ne = any
  415010:	cmp	w0, w1
  415014:	b.eq	415030 <ferror@plt+0x126c0>  // b.none
  415018:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  41501c:	add	x2, x2, #0xa7b
  415020:	mov	w1, #0x5fc                 	// #1532
  415024:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  415028:	add	x0, x0, #0x95d
  41502c:	bl	402980 <ferror@plt+0x10>
  415030:	mov	x23, x6
  415034:	cbz	x26, 415058 <ferror@plt+0x126e8>
  415038:	ldr	w0, [x24]
  41503c:	mov	w1, #0x100                 	// #256
  415040:	cmp	w0, #0x100
  415044:	csel	w0, w0, w1, cs  // cs = hs, nlast
  415048:	str	x0, [sp, #264]
  41504c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  415050:	str	x0, [sp, #256]
  415054:	str	xzr, [sp, #272]
  415058:	cmp	x26, #0x0
  41505c:	add	x0, sp, #0x100
  415060:	csel	x27, x0, xzr, ne  // ne = any
  415064:	ldrsw	x0, [sp, #168]
  415068:	mov	x1, #0x20                  	// #32
  41506c:	add	x24, x24, #0x8
  415070:	cmp	x0, #0x20
  415074:	mov	x20, #0x0                   	// #0
  415078:	csel	x0, x0, x1, ls  // ls = plast
  41507c:	mov	x1, #0x1                   	// #1
  415080:	str	xzr, [sp, #128]
  415084:	lsl	x0, x1, x0
  415088:	sub	x0, x0, #0x1
  41508c:	str	x0, [sp, #152]
  415090:	ldr	w0, [sp, #152]
  415094:	str	w0, [sp, #172]
  415098:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x1c198>
  41509c:	add	x0, x0, #0xf08
  4150a0:	str	x0, [sp, #192]
  4150a4:	ldr	x0, [sp, #128]
  4150a8:	ldr	x1, [sp, #176]
  4150ac:	cmp	x0, x1
  4150b0:	b.eq	4157f0 <ferror@plt+0x12e80>  // b.none
  4150b4:	ldr	x0, [sp, #160]
  4150b8:	cbz	x0, 4150c8 <ferror@plt+0x12758>
  4150bc:	ldr	x0, [sp, #128]
  4150c0:	ldr	x1, [sp, #160]
  4150c4:	add	x20, x1, x0, lsl #4
  4150c8:	ldr	x19, [x24]
  4150cc:	ldrb	w0, [x19]
  4150d0:	cmp	w0, #0x75
  4150d4:	b.ne	41514c <ferror@plt+0x127dc>  // b.any
  4150d8:	cbz	x20, 4150e4 <ferror@plt+0x12774>
  4150dc:	mov	x0, x20
  4150e0:	bl	4125ec <ferror@plt+0xfc7c>
  4150e4:	ldrb	w0, [x19, #1]
  4150e8:	cmp	w0, #0x38
  4150ec:	b.eq	4150f8 <ferror@plt+0x12788>  // b.none
  4150f0:	add	x19, x19, #0x1
  4150f4:	b	415108 <ferror@plt+0x12798>
  4150f8:	add	x19, x19, #0x2
  4150fc:	cbz	x20, 415108 <ferror@plt+0x12798>
  415100:	mov	x0, x20
  415104:	bl	4125ec <ferror@plt+0xfc7c>
  415108:	ldrb	w0, [x19]
  41510c:	cmp	w0, #0x52
  415110:	b.ne	415220 <ferror@plt+0x128b0>  // b.any
  415114:	add	x19, x19, #0x2
  415118:	cbz	x20, 41512c <ferror@plt+0x127bc>
  41511c:	mov	x0, x20
  415120:	bl	4125ec <ferror@plt+0xfc7c>
  415124:	mov	x0, x20
  415128:	bl	4125ec <ferror@plt+0xfc7c>
  41512c:	mov	x22, x19
  415130:	ldrb	w0, [x22], #1
  415134:	cmp	w0, #0x28
  415138:	b.eq	415160 <ferror@plt+0x127f0>  // b.none
  41513c:	cbz	x20, 415130 <ferror@plt+0x127c0>
  415140:	mov	x0, x20
  415144:	bl	4125ec <ferror@plt+0xfc7c>
  415148:	b	415130 <ferror@plt+0x127c0>
  41514c:	cmp	w0, #0x4c
  415150:	b.eq	4150f0 <ferror@plt+0x12780>  // b.none
  415154:	cmp	w0, #0x55
  415158:	b.ne	415108 <ferror@plt+0x12798>  // b.any
  41515c:	b	4150f0 <ferror@plt+0x12780>
  415160:	cbz	x20, 41516c <ferror@plt+0x127fc>
  415164:	mov	x0, x20
  415168:	bl	4125ec <ferror@plt+0xfc7c>
  41516c:	ldr	x4, [x24]
  415170:	sub	x19, x22, x19
  415174:	ldur	w0, [x24, #-8]
  415178:	add	x28, x4, x0
  41517c:	add	x0, x19, #0x1
  415180:	add	x0, x22, x0
  415184:	cmp	x28, x0
  415188:	b.cc	415194 <ferror@plt+0x12824>  // b.lo, b.ul, b.last
  41518c:	mvn	x19, x19
  415190:	add	x28, x28, x19
  415194:	cbnz	x26, 4151b0 <ferror@plt+0x12840>
  415198:	cbnz	x20, 4151e8 <ferror@plt+0x12878>
  41519c:	ldr	x0, [sp, #128]
  4151a0:	add	x24, x24, #0x10
  4151a4:	add	x0, x0, #0x1
  4151a8:	str	x0, [sp, #128]
  4151ac:	b	4150a4 <ferror@plt+0x12734>
  4151b0:	ldr	x4, [sp, #104]
  4151b4:	add	x3, sp, #0x100
  4151b8:	ldr	x0, [sp, #136]
  4151bc:	sub	x2, x28, x22
  4151c0:	mov	x1, x22
  4151c4:	blr	x4
  4151c8:	tst	w0, #0xff
  4151cc:	b.ne	415198 <ferror@plt+0x12828>  // b.any
  4151d0:	mov	x0, x21
  4151d4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4151d8:	mov	w1, #0x3                   	// #3
  4151dc:	add	x2, x2, #0x7e6
  4151e0:	bl	4198e4 <ferror@plt+0x16f74>
  4151e4:	b	415258 <ferror@plt+0x128e8>
  4151e8:	ldr	x1, [sp, #104]
  4151ec:	adrp	x0, 411000 <ferror@plt+0xe690>
  4151f0:	add	x0, x0, #0xb7c
  4151f4:	cmp	x1, x0
  4151f8:	b.eq	41520c <ferror@plt+0x1289c>  // b.none
  4151fc:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415200:	mov	w1, #0x641                 	// #1601
  415204:	add	x2, x2, #0xa7b
  415208:	b	415024 <ferror@plt+0x126b4>
  41520c:	mov	x2, x20
  415210:	sub	w1, w28, w22
  415214:	mov	x0, x23
  415218:	bl	412614 <ferror@plt+0xfca4>
  41521c:	b	41519c <ferror@plt+0x1282c>
  415220:	cmp	w0, #0x22
  415224:	b.eq	415284 <ferror@plt+0x12914>  // b.none
  415228:	cmp	w0, #0x27
  41522c:	b.eq	415284 <ferror@plt+0x12914>  // b.none
  415230:	cbnz	x23, 415244 <ferror@plt+0x128d4>
  415234:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415238:	mov	w1, #0x64d                 	// #1613
  41523c:	add	x2, x2, #0xa7b
  415240:	b	415024 <ferror@plt+0x126b4>
  415244:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415248:	mov	x0, x21
  41524c:	add	x2, x2, #0xa92
  415250:	mov	w1, #0x3                   	// #3
  415254:	bl	419440 <ferror@plt+0x16ad0>
  415258:	cbz	x26, 415264 <ferror@plt+0x128f4>
  41525c:	ldr	x0, [sp, #256]
  415260:	bl	402730 <free@plt>
  415264:	mov	w0, #0x0                   	// #0
  415268:	ldp	x19, x20, [sp, #16]
  41526c:	ldp	x21, x22, [sp, #32]
  415270:	ldp	x23, x24, [sp, #48]
  415274:	ldp	x25, x26, [sp, #64]
  415278:	ldp	x27, x28, [sp, #80]
  41527c:	ldp	x29, x30, [sp], #336
  415280:	ret
  415284:	add	x19, x19, #0x1
  415288:	cbz	x20, 415294 <ferror@plt+0x12924>
  41528c:	mov	x0, x20
  415290:	bl	4125ec <ferror@plt+0xfc7c>
  415294:	ldur	w0, [x24, #-8]
  415298:	ldr	x1, [x24]
  41529c:	sub	x0, x0, #0x1
  4152a0:	add	x0, x1, x0
  4152a4:	str	x0, [sp, #112]
  4152a8:	adrp	x0, 411000 <ferror@plt+0xe690>
  4152ac:	add	x0, x0, #0xb7c
  4152b0:	str	x0, [sp, #184]
  4152b4:	mov	x22, x19
  4152b8:	ldr	x0, [sp, #112]
  4152bc:	cmp	x22, x0
  4152c0:	b.cs	4158e4 <ferror@plt+0x12f74>  // b.hs, b.nlast
  4152c4:	ldrb	w0, [x22]
  4152c8:	cmp	w0, #0x5c
  4152cc:	b.eq	415844 <ferror@plt+0x12ed4>  // b.none
  4152d0:	add	x22, x22, #0x1
  4152d4:	b	4152b8 <ferror@plt+0x12948>
  4152d8:	ldr	x4, [sp, #104]
  4152dc:	add	x3, sp, #0x100
  4152e0:	ldr	x0, [sp, #136]
  4152e4:	sub	x2, x22, x19
  4152e8:	mov	x1, x19
  4152ec:	blr	x4
  4152f0:	tst	w0, #0xff
  4152f4:	b.ne	415850 <ferror@plt+0x12ee0>  // b.any
  4152f8:	b	4151d0 <ferror@plt+0x12860>
  4152fc:	ldr	x0, [sp, #104]
  415300:	ldr	x1, [sp, #184]
  415304:	cmp	x0, x1
  415308:	b.eq	41531c <ferror@plt+0x129ac>  // b.none
  41530c:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415310:	mov	w1, #0x66c                 	// #1644
  415314:	add	x2, x2, #0xa7b
  415318:	b	415024 <ferror@plt+0x126b4>
  41531c:	mov	x2, x20
  415320:	sub	w1, w22, w19
  415324:	mov	x0, x23
  415328:	bl	412614 <ferror@plt+0xfca4>
  41532c:	b	415854 <ferror@plt+0x12ee4>
  415330:	sub	w1, w3, #0x55
  415334:	cmp	w1, #0x26
  415338:	b.hi	4158b4 <ferror@plt+0x12f44>  // b.pmore
  41533c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  415340:	add	x5, x22, #0x2
  415344:	add	x0, x0, #0x764
  415348:	ldrh	w0, [x0, w1, uxtw #1]
  41534c:	adr	x1, 415358 <ferror@plt+0x129e8>
  415350:	add	x0, x1, w0, sxth #2
  415354:	br	x0
  415358:	cmp	w1, #0x6
  41535c:	b.hi	4158b4 <ferror@plt+0x12f44>  // b.pmore
  415360:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0x13198>
  415364:	add	x0, x0, #0x7b4
  415368:	ldrh	w0, [x0, w1, uxtw #1]
  41536c:	adr	x1, 415378 <ferror@plt+0x12a08>
  415370:	add	x0, x1, w0, sxth #2
  415374:	br	x0
  415378:	cmp	w3, #0x3f
  41537c:	b.eq	415708 <ferror@plt+0x12d98>  // b.none
  415380:	cmp	w3, #0x45
  415384:	b.ne	4158b4 <ferror@plt+0x12f44>  // b.any
  415388:	ldrb	w0, [x21, #1154]
  41538c:	cbz	w0, 4153a4 <ferror@plt+0x12a34>
  415390:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415394:	mov	x0, x21
  415398:	add	x2, x2, #0xbc0
  41539c:	mov	w1, #0x2                   	// #2
  4153a0:	bl	419440 <ferror@plt+0x16ad0>
  4153a4:	mov	w0, #0x1b                  	// #27
  4153a8:	b	41576c <ferror@plt+0x12dfc>
  4153ac:	ldr	x0, [sp, #144]
  4153b0:	cmp	x20, #0x0
  4153b4:	ldr	w1, [sp, #124]
  4153b8:	add	x22, sp, #0xd8
  4153bc:	str	wzr, [sp, #304]
  4153c0:	bfi	x25, x0, #32, #32
  4153c4:	mov	x0, #0x6                   	// #6
  4153c8:	stp	x19, x25, [sp, #224]
  4153cc:	stp	x22, x0, [sp, #240]
  4153d0:	cset	w0, ne  // ne = any
  4153d4:	cmp	w0, w1
  4153d8:	strb	wzr, [sp, #308]
  4153dc:	str	wzr, [sp, #312]
  4153e0:	b.eq	4153f4 <ferror@plt+0x12a84>  // b.none
  4153e4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4153e8:	mov	w1, #0x48d                 	// #1165
  4153ec:	add	x2, x2, #0xaa5
  4153f0:	b	415024 <ferror@plt+0x126b4>
  4153f4:	str	x5, [sp, #224]
  4153f8:	cbz	x20, 41540c <ferror@plt+0x12a9c>
  4153fc:	mov	x0, x20
  415400:	bl	4125ec <ferror@plt+0xfc7c>
  415404:	lsr	x0, x0, #32
  415408:	str	w0, [sp, #236]
  41540c:	ldr	x2, [sp, #112]
  415410:	mov	x7, x20
  415414:	add	x6, sp, #0xe8
  415418:	add	x5, sp, #0xd4
  41541c:	add	x4, sp, #0x130
  415420:	add	x1, sp, #0xe0
  415424:	mov	w3, #0x0                   	// #0
  415428:	mov	x0, x21
  41542c:	bl	412668 <ferror@plt+0xfcf8>
  415430:	ldr	w0, [sp, #212]
  415434:	add	x2, sp, #0xf8
  415438:	add	x1, sp, #0xf0
  41543c:	bl	411468 <ferror@plt+0xeaf8>
  415440:	mov	w19, w0
  415444:	cbz	w0, 41546c <ferror@plt+0x12afc>
  415448:	bl	4028c0 <__errno_location@plt>
  41544c:	str	w19, [x0]
  415450:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415454:	mov	x0, x21
  415458:	add	x2, x2, #0x846
  41545c:	mov	w1, #0x3                   	// #3
  415460:	bl	4198e4 <ferror@plt+0x16f74>
  415464:	ldr	x19, [sp, #224]
  415468:	b	4152b4 <ferror@plt+0x12944>
  41546c:	cbz	x27, 4154ac <ferror@plt+0x12b3c>
  415470:	ldr	x0, [sp, #248]
  415474:	mov	x2, #0x6                   	// #6
  415478:	ldr	x4, [sp, #104]
  41547c:	sub	x2, x2, x0
  415480:	ldr	x0, [sp, #136]
  415484:	mov	x3, x27
  415488:	mov	x1, x22
  41548c:	blr	x4
  415490:	tst	w0, #0xff
  415494:	b.ne	4154ac <ferror@plt+0x12b3c>  // b.any
  415498:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  41549c:	mov	x0, x21
  4154a0:	add	x2, x2, #0xab1
  4154a4:	mov	w1, #0x3                   	// #3
  4154a8:	bl	4198e4 <ferror@plt+0x16f74>
  4154ac:	cbz	x20, 415464 <ferror@plt+0x12af4>
  4154b0:	ldr	x0, [sp, #248]
  4154b4:	mov	w22, #0x6                   	// #6
  4154b8:	sub	w22, w22, w0
  4154bc:	cmp	w22, w19
  4154c0:	b.le	415464 <ferror@plt+0x12af4>
  4154c4:	ldr	x1, [sp, #232]
  4154c8:	mov	x0, x23
  4154cc:	add	w19, w19, #0x1
  4154d0:	bl	41224c <ferror@plt+0xf8dc>
  4154d4:	b	4154bc <ferror@plt+0x12b4c>
  4154d8:	ldr	x0, [sp, #144]
  4154dc:	cmp	x20, #0x0
  4154e0:	ldr	w1, [sp, #124]
  4154e4:	bfi	x25, x0, #32, #32
  4154e8:	cset	w0, ne  // ne = any
  4154ec:	mov	x28, x25
  4154f0:	cmp	w0, w1
  4154f4:	b.eq	415508 <ferror@plt+0x12b98>  // b.none
  4154f8:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4154fc:	mov	w1, #0x4f9                 	// #1273
  415500:	add	x2, x2, #0xadb
  415504:	b	415024 <ferror@plt+0x126b4>
  415508:	ldrb	w0, [x21, #1138]
  41550c:	cbz	w0, 41552c <ferror@plt+0x12bbc>
  415510:	mov	x0, x21
  415514:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415518:	mov	w1, #0x6                   	// #6
  41551c:	add	x2, x2, #0xae7
  415520:	str	x5, [sp, #200]
  415524:	bl	4194ac <ferror@plt+0x16b3c>
  415528:	ldr	x5, [sp, #200]
  41552c:	mov	x19, x5
  415530:	cbz	x20, 415544 <ferror@plt+0x12bd4>
  415534:	mov	x0, x20
  415538:	bl	4125ec <ferror@plt+0xfc7c>
  41553c:	lsr	x0, x0, #32
  415540:	bfi	x28, x0, #32, #32
  415544:	mov	w0, #0x0                   	// #0
  415548:	mov	w3, #0x0                   	// #0
  41554c:	mov	w22, #0x0                   	// #0
  415550:	ldr	x1, [sp, #112]
  415554:	cmp	x1, x19
  415558:	b.ls	41559c <ferror@plt+0x12c2c>  // b.plast
  41555c:	ldrb	w1, [x19]
  415560:	ldr	x2, [sp, #192]
  415564:	ldrb	w5, [x2, x1]
  415568:	cmp	w5, #0x63
  41556c:	b.eq	41559c <ferror@plt+0x12c2c>  // b.none
  415570:	add	x19, x19, #0x1
  415574:	cbz	x20, 415588 <ferror@plt+0x12c18>
  415578:	mov	x0, x20
  41557c:	bl	4125ec <ferror@plt+0xfc7c>
  415580:	lsr	x0, x0, #32
  415584:	bfi	x28, x0, #32, #32
  415588:	and	w0, w22, #0xf0000000
  41558c:	add	w22, w5, w22, lsl #4
  415590:	orr	w3, w3, w0
  415594:	mov	w0, #0x1                   	// #1
  415598:	b	415550 <ferror@plt+0x12be0>
  41559c:	cbnz	w0, 4155b8 <ferror@plt+0x12c48>
  4155a0:	mov	x0, x21
  4155a4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4155a8:	mov	w1, #0x3                   	// #3
  4155ac:	add	x2, x2, #0xb19
  4155b0:	bl	419440 <ferror@plt+0x16ad0>
  4155b4:	b	4152b4 <ferror@plt+0x12944>
  4155b8:	ldr	w0, [sp, #152]
  4155bc:	and	w0, w22, w0
  4155c0:	cmp	x0, w22, uxtw
  4155c4:	cset	w0, ne  // ne = any
  4155c8:	orr	w0, w0, w3
  4155cc:	cbz	w0, 4155ec <ferror@plt+0x12c7c>
  4155d0:	mov	x0, x21
  4155d4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4155d8:	mov	w1, #0x2                   	// #2
  4155dc:	add	x2, x2, #0xb3e
  4155e0:	bl	419440 <ferror@plt+0x16ad0>
  4155e4:	ldr	w0, [sp, #172]
  4155e8:	and	w22, w22, w0
  4155ec:	cbz	x27, 415604 <ferror@plt+0x12c94>
  4155f0:	ldr	w3, [sp, #168]
  4155f4:	mov	x2, x27
  4155f8:	mov	w1, w22
  4155fc:	mov	x0, x21
  415600:	bl	411df4 <ferror@plt+0xf484>
  415604:	cbz	x23, 4152b4 <ferror@plt+0x12944>
  415608:	mov	x1, x28
  41560c:	mov	x0, x23
  415610:	bl	41224c <ferror@plt+0xf8dc>
  415614:	b	4152b4 <ferror@plt+0x12944>
  415618:	ldr	x0, [sp, #144]
  41561c:	cmp	x20, #0x0
  415620:	ldr	w1, [sp, #124]
  415624:	bfi	x25, x0, #32, #32
  415628:	cset	w0, ne  // ne = any
  41562c:	mov	x4, x25
  415630:	cmp	w0, w1
  415634:	b.ne	415690 <ferror@plt+0x12d20>  // b.any
  415638:	add	x5, x22, #0x4
  41563c:	mov	w22, #0x0                   	// #0
  415640:	ldr	x0, [sp, #112]
  415644:	cmp	x0, x19
  415648:	b.ls	4156a0 <ferror@plt+0x12d30>  // b.plast
  41564c:	cmp	x5, x19
  415650:	b.eq	4156a0 <ferror@plt+0x12d30>  // b.none
  415654:	ldrb	w3, [x19]
  415658:	sub	w0, w3, #0x30
  41565c:	cmp	w0, #0x7
  415660:	b.hi	4156a0 <ferror@plt+0x12d30>  // b.pmore
  415664:	add	x19, x19, #0x1
  415668:	cbz	x20, 415684 <ferror@plt+0x12d14>
  41566c:	mov	x0, x20
  415670:	str	x4, [sp, #200]
  415674:	bl	4125ec <ferror@plt+0xfc7c>
  415678:	lsr	x0, x0, #32
  41567c:	ldr	x4, [sp, #200]
  415680:	bfi	x4, x0, #32, #32
  415684:	add	w22, w3, w22, lsl #3
  415688:	sub	w22, w22, #0x30
  41568c:	b	415640 <ferror@plt+0x12cd0>
  415690:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415694:	mov	w1, #0x540                 	// #1344
  415698:	add	x2, x2, #0xb5f
  41569c:	b	415024 <ferror@plt+0x126b4>
  4156a0:	ldr	w0, [sp, #152]
  4156a4:	and	w0, w22, w0
  4156a8:	cmp	x0, w22, uxtw
  4156ac:	b.eq	4156d4 <ferror@plt+0x12d64>  // b.none
  4156b0:	mov	x0, x21
  4156b4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4156b8:	mov	w1, #0x2                   	// #2
  4156bc:	add	x2, x2, #0xb6b
  4156c0:	str	x4, [sp, #200]
  4156c4:	bl	419440 <ferror@plt+0x16ad0>
  4156c8:	ldr	w0, [sp, #172]
  4156cc:	ldr	x4, [sp, #200]
  4156d0:	and	w22, w22, w0
  4156d4:	cbz	x27, 4156f4 <ferror@plt+0x12d84>
  4156d8:	ldr	w3, [sp, #168]
  4156dc:	mov	x2, x27
  4156e0:	mov	w1, w22
  4156e4:	mov	x0, x21
  4156e8:	str	x4, [sp, #200]
  4156ec:	bl	411df4 <ferror@plt+0xf484>
  4156f0:	ldr	x4, [sp, #200]
  4156f4:	cbz	x23, 4152b4 <ferror@plt+0x12944>
  4156f8:	mov	x1, x4
  4156fc:	b	41560c <ferror@plt+0x12c9c>
  415700:	ldrb	w0, [x21, #1154]
  415704:	cbnz	w0, 4158b4 <ferror@plt+0x12f44>
  415708:	cbz	x27, 415740 <ferror@plt+0x12dd0>
  41570c:	ldr	x4, [sp, #104]
  415710:	mov	x3, x27
  415714:	ldr	x0, [sp, #136]
  415718:	add	x1, sp, #0xd3
  41571c:	mov	x2, #0x1                   	// #1
  415720:	blr	x4
  415724:	tst	w0, #0xff
  415728:	b.ne	415740 <ferror@plt+0x12dd0>  // b.any
  41572c:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415730:	mov	x0, x21
  415734:	add	x2, x2, #0xc26
  415738:	mov	w1, #0x3                   	// #3
  41573c:	bl	4198e4 <ferror@plt+0x16f74>
  415740:	cbz	x20, 415760 <ferror@plt+0x12df0>
  415744:	mov	x0, x20
  415748:	bl	4125ec <ferror@plt+0xfc7c>
  41574c:	lsr	x0, x0, #32
  415750:	bfi	x25, x0, #32, #32
  415754:	mov	x0, x23
  415758:	mov	x1, x25
  41575c:	bl	41224c <ferror@plt+0xf8dc>
  415760:	add	x19, x22, #0x2
  415764:	b	4152b4 <ferror@plt+0x12944>
  415768:	mov	w0, #0x8                   	// #8
  41576c:	strb	w0, [sp, #211]
  415770:	b	415708 <ferror@plt+0x12d98>
  415774:	mov	w0, #0xc                   	// #12
  415778:	b	41576c <ferror@plt+0x12dfc>
  41577c:	mov	w0, #0xa                   	// #10
  415780:	b	41576c <ferror@plt+0x12dfc>
  415784:	mov	w0, #0xd                   	// #13
  415788:	b	41576c <ferror@plt+0x12dfc>
  41578c:	mov	w0, #0x9                   	// #9
  415790:	b	41576c <ferror@plt+0x12dfc>
  415794:	mov	w0, #0xb                   	// #11
  415798:	b	41576c <ferror@plt+0x12dfc>
  41579c:	ldrb	w0, [x21, #1138]
  4157a0:	cbz	w0, 4157b8 <ferror@plt+0x12e48>
  4157a4:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4157a8:	mov	x0, x21
  4157ac:	add	x2, x2, #0xb8e
  4157b0:	mov	w1, #0x6                   	// #6
  4157b4:	bl	4194ac <ferror@plt+0x16b3c>
  4157b8:	mov	w0, #0x7                   	// #7
  4157bc:	b	41576c <ferror@plt+0x12dfc>
  4157c0:	mov	w2, w3
  4157c4:	add	x0, sp, #0x130
  4157c8:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  4157cc:	add	x1, x1, #0xbd5
  4157d0:	bl	4023d0 <sprintf@plt>
  4157d4:	add	x3, sp, #0x130
  4157d8:	mov	x0, x21
  4157dc:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4157e0:	mov	w1, #0x2                   	// #2
  4157e4:	add	x2, x2, #0xc07
  4157e8:	bl	419440 <ferror@plt+0x16ad0>
  4157ec:	b	415708 <ferror@plt+0x12d98>
  4157f0:	cbz	x26, 415824 <ferror@plt+0x12eb4>
  4157f4:	ldr	w3, [sp, #168]
  4157f8:	add	x2, sp, #0x100
  4157fc:	mov	x0, x21
  415800:	mov	w1, #0x0                   	// #0
  415804:	bl	411df4 <ferror@plt+0xf484>
  415808:	ldr	x0, [sp, #256]
  41580c:	ldr	x1, [sp, #272]
  415810:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  415814:	str	x0, [x26, #8]
  415818:	str	x0, [sp, #256]
  41581c:	ldr	x0, [sp, #272]
  415820:	str	w0, [x26]
  415824:	cbz	x20, 41583c <ferror@plt+0x12ecc>
  415828:	mov	x0, x20
  41582c:	bl	4125ec <ferror@plt+0xfc7c>
  415830:	mov	x1, x0
  415834:	mov	x0, x23
  415838:	bl	41224c <ferror@plt+0xf8dc>
  41583c:	mov	w0, #0x1                   	// #1
  415840:	b	415268 <ferror@plt+0x128f8>
  415844:	cmp	x19, x22
  415848:	b.cs	415860 <ferror@plt+0x12ef0>  // b.hs, b.nlast
  41584c:	cbnz	x26, 4152d8 <ferror@plt+0x12968>
  415850:	cbnz	x20, 4152fc <ferror@plt+0x1298c>
  415854:	ldr	x0, [sp, #112]
  415858:	cmp	x22, x0
  41585c:	b.cs	41519c <ferror@plt+0x1282c>  // b.hs, b.nlast
  415860:	add	x19, x22, #0x1
  415864:	cbz	x20, 41587c <ferror@plt+0x12f0c>
  415868:	mov	x0, x20
  41586c:	bl	4125ec <ferror@plt+0xfc7c>
  415870:	mov	x25, x0
  415874:	lsr	x0, x0, #32
  415878:	str	x0, [sp, #144]
  41587c:	ldrb	w3, [x22, #1]
  415880:	strb	w3, [sp, #211]
  415884:	cmp	w3, #0x7b
  415888:	b.hi	4158b4 <ferror@plt+0x12f44>  // b.pmore
  41588c:	cmp	w3, #0x54
  415890:	b.hi	415330 <ferror@plt+0x129c0>  // b.pmore
  415894:	cmp	w3, #0x37
  415898:	b.hi	415378 <ferror@plt+0x12a08>  // b.pmore
  41589c:	cmp	w3, #0x2f
  4158a0:	b.hi	415618 <ferror@plt+0x12ca8>  // b.pmore
  4158a4:	sub	w1, w3, #0x22
  4158a8:	and	w0, w1, #0xff
  4158ac:	cmp	w0, #0x6
  4158b0:	b.ls	415358 <ferror@plt+0x129e8>  // b.plast
  4158b4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  4158b8:	add	x0, x0, #0x21a
  4158bc:	mov	w1, #0xac                  	// #172
  4158c0:	ldrh	w0, [x0, w3, sxtw #1]
  4158c4:	tst	w1, w0
  4158c8:	b.eq	4157c0 <ferror@plt+0x12e50>  // b.none
  4158cc:	mov	x0, x21
  4158d0:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4158d4:	mov	w1, #0x2                   	// #2
  4158d8:	add	x2, x2, #0xbe8
  4158dc:	bl	419440 <ferror@plt+0x16ad0>
  4158e0:	b	415708 <ferror@plt+0x12d98>
  4158e4:	cmp	x19, x22
  4158e8:	b.cc	41584c <ferror@plt+0x12edc>  // b.lo, b.ul, b.last
  4158ec:	b	41519c <ferror@plt+0x1282c>
  4158f0:	mov	x6, #0x0                   	// #0
  4158f4:	mov	x5, #0x0                   	// #0
  4158f8:	b	414fa0 <ferror@plt+0x12630>
  4158fc:	stp	x29, x30, [sp, #-64]!
  415900:	mov	w4, #0x3e                  	// #62
  415904:	mov	x29, sp
  415908:	ldr	x5, [x0, #536]
  41590c:	str	x19, [sp, #16]
  415910:	add	x19, x0, #0x208
  415914:	str	x5, [sp, #56]
  415918:	adrp	x5, 411000 <ferror@plt+0xe690>
  41591c:	add	x5, x5, #0xb7c
  415920:	ldp	x6, x7, [x19]
  415924:	str	x5, [x0, #520]
  415928:	mov	x5, #0xffffffffffffffff    	// #-1
  41592c:	str	x5, [x0, #528]
  415930:	ldr	x5, [x0, #1216]
  415934:	str	w5, [x0, #536]
  415938:	stp	x6, x7, [sp, #40]
  41593c:	bl	4158f0 <ferror@plt+0x12f80>
  415940:	ldp	x2, x3, [sp, #40]
  415944:	stp	x2, x3, [x19]
  415948:	ldr	x1, [sp, #56]
  41594c:	str	x1, [x19, #16]
  415950:	ldr	x19, [sp, #16]
  415954:	ldp	x29, x30, [sp], #64
  415958:	ret
  41595c:	stp	x29, x30, [sp, #-128]!
  415960:	mov	x29, sp
  415964:	ldrb	w4, [x1, #4]
  415968:	stp	x21, x22, [sp, #32]
  41596c:	mov	x22, x1
  415970:	and	w1, w4, #0xfffffffb
  415974:	cmp	w1, #0x38
  415978:	stp	x23, x24, [sp, #48]
  41597c:	mov	x23, x2
  415980:	cset	w2, ne  // ne = any
  415984:	cmp	w4, #0x3c
  415988:	stp	x19, x20, [sp, #16]
  41598c:	and	w19, w1, #0xff
  415990:	cset	w1, eq  // eq = none
  415994:	mov	x24, x3
  415998:	add	w2, w2, #0x2
  41599c:	ldr	w3, [x22, #8]
  4159a0:	add	w1, w2, w1, lsl #1
  4159a4:	stp	x25, x26, [sp, #64]
  4159a8:	str	wzr, [sp, #88]
  4159ac:	cmp	x3, w1, sxtw
  4159b0:	str	xzr, [sp, #96]
  4159b4:	b.ne	4159f0 <ferror@plt+0x13080>  // b.any
  4159b8:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  4159bc:	mov	w1, #0x3                   	// #3
  4159c0:	add	x2, x2, #0xc5c
  4159c4:	bl	419440 <ferror@plt+0x16ad0>
  4159c8:	str	wzr, [x23]
  4159cc:	mov	w19, #0x0                   	// #0
  4159d0:	str	wzr, [x24]
  4159d4:	mov	w0, w19
  4159d8:	ldp	x19, x20, [sp, #16]
  4159dc:	ldp	x21, x22, [sp, #32]
  4159e0:	ldp	x23, x24, [sp, #48]
  4159e4:	ldp	x25, x26, [sp, #64]
  4159e8:	ldp	x29, x30, [sp], #128
  4159ec:	ret
  4159f0:	mov	x20, x0
  4159f4:	add	x3, sp, #0x58
  4159f8:	add	x1, x22, #0x8
  4159fc:	mov	x2, #0x1                   	// #1
  415a00:	bl	4158f0 <ferror@plt+0x12f80>
  415a04:	tst	w0, #0xff
  415a08:	b.eq	4159c8 <ferror@plt+0x13058>  // b.none
  415a0c:	ldr	w25, [sp, #88]
  415a10:	cmp	w19, #0x38
  415a14:	ldr	x4, [sp, #96]
  415a18:	b.eq	415b40 <ferror@plt+0x131d0>  // b.none
  415a1c:	ldrb	w6, [x20, #1242]
  415a20:	mov	x0, x20
  415a24:	ldrb	w21, [x22, #4]
  415a28:	add	x8, sp, #0x68
  415a2c:	mov	w25, w25
  415a30:	mov	w19, #0x0                   	// #0
  415a34:	mov	w1, w21
  415a38:	bl	411d98 <ferror@plt+0xf428>
  415a3c:	ldrsw	x26, [sp, #120]
  415a40:	ldr	x3, [x20, #1216]
  415a44:	mov	x1, #0x20                  	// #32
  415a48:	cmp	x3, #0x20
  415a4c:	csel	x0, x3, x1, ls  // ls = plast
  415a50:	mov	x1, #0x1                   	// #1
  415a54:	lsl	x1, x1, x0
  415a58:	sub	x1, x1, #0x1
  415a5c:	udiv	x0, x26, x3
  415a60:	sub	x2, x25, x0, lsl #1
  415a64:	lsl	x7, x0, #1
  415a68:	add	x5, x4, x2
  415a6c:	add	x0, x0, x2
  415a70:	add	x0, x4, x0
  415a74:	mov	x4, x5
  415a78:	cmp	x0, x5
  415a7c:	b.eq	415aa8 <ferror@plt+0x13138>  // b.none
  415a80:	cbz	w6, 415aa0 <ferror@plt+0x13130>
  415a84:	ldrb	w2, [x4]
  415a88:	and	w2, w2, w1
  415a8c:	lsl	w19, w19, w3
  415a90:	add	x4, x4, #0x1
  415a94:	orr	w19, w2, w19
  415a98:	sub	x0, x0, #0x1
  415a9c:	b	415a78 <ferror@plt+0x13108>
  415aa0:	ldurb	w2, [x0, #-1]
  415aa4:	b	415a88 <ferror@plt+0x13118>
  415aa8:	cmp	x25, x7
  415aac:	b.ls	415ac4 <ferror@plt+0x13154>  // b.plast
  415ab0:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415ab4:	mov	x0, x20
  415ab8:	add	x2, x2, #0xc75
  415abc:	mov	w1, #0x0                   	// #0
  415ac0:	bl	419440 <ferror@plt+0x16ad0>
  415ac4:	sub	w21, w21, #0x3a
  415ac8:	cmp	x26, #0x1f
  415acc:	b.hi	415b00 <ferror@plt+0x13190>  // b.pmore
  415ad0:	mov	x1, #0x1                   	// #1
  415ad4:	cmp	w21, #0x1
  415ad8:	lsl	x0, x1, x26
  415adc:	b.ls	415af8 <ferror@plt+0x13188>  // b.plast
  415ae0:	ldrb	w2, [x20, #1241]
  415ae4:	cbnz	w2, 415af8 <ferror@plt+0x13188>
  415ae8:	sub	w26, w26, #0x1
  415aec:	lsl	w26, w1, w26
  415af0:	tst	w26, w19
  415af4:	b.ne	415b10 <ferror@plt+0x131a0>  // b.any
  415af8:	sub	x0, x0, #0x1
  415afc:	and	w19, w19, w0
  415b00:	cmp	w21, #0x1
  415b04:	b.hi	415b18 <ferror@plt+0x131a8>  // b.pmore
  415b08:	mov	w0, #0x1                   	// #1
  415b0c:	b	415b1c <ferror@plt+0x131ac>
  415b10:	neg	x0, x0
  415b14:	orr	w19, w19, w0
  415b18:	ldrb	w0, [x20, #1241]
  415b1c:	str	w0, [x24]
  415b20:	mov	w0, #0x1                   	// #1
  415b24:	str	w0, [x23]
  415b28:	ldr	x1, [x22, #16]
  415b2c:	ldr	x0, [sp, #96]
  415b30:	cmp	x0, x1
  415b34:	b.eq	4159d4 <ferror@plt+0x13064>  // b.none
  415b38:	bl	402730 <free@plt>
  415b3c:	b	4159d4 <ferror@plt+0x13064>
  415b40:	ldr	x21, [x20, #1216]
  415b44:	mov	x1, #0x20                  	// #32
  415b48:	ldr	x26, [x20, #1224]
  415b4c:	cmp	x21, #0x20
  415b50:	csel	x0, x21, x1, ls  // ls = plast
  415b54:	mov	x1, #0x1                   	// #1
  415b58:	sub	w25, w25, #0x1
  415b5c:	mov	w19, #0x0                   	// #0
  415b60:	udiv	x26, x26, x21
  415b64:	lsl	x1, x1, x0
  415b68:	sub	x1, x1, #0x1
  415b6c:	mov	x2, #0x0                   	// #0
  415b70:	cmp	x25, x2
  415b74:	b.ls	415b9c <ferror@plt+0x1322c>  // b.plast
  415b78:	ldrb	w0, [x4, x2]
  415b7c:	cmp	x21, #0x1f
  415b80:	and	w0, w0, w1
  415b84:	b.hi	415b90 <ferror@plt+0x13220>  // b.pmore
  415b88:	lsl	w19, w19, w21
  415b8c:	orr	w0, w0, w19
  415b90:	add	x2, x2, #0x1
  415b94:	mov	w19, w0
  415b98:	b	415b70 <ferror@plt+0x13200>
  415b9c:	cmp	x26, x25
  415ba0:	b.cs	415bfc <ferror@plt+0x1328c>  // b.hs, b.nlast
  415ba4:	mov	x0, x20
  415ba8:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415bac:	mov	w1, #0x0                   	// #0
  415bb0:	add	x2, x2, #0xc75
  415bb4:	bl	419440 <ferror@plt+0x16ad0>
  415bb8:	cmp	x26, #0x1
  415bbc:	b.hi	415c24 <ferror@plt+0x132b4>  // b.pmore
  415bc0:	ldrb	w2, [x20, #1240]
  415bc4:	cmp	x21, #0x1f
  415bc8:	b.hi	415bf0 <ferror@plt+0x13280>  // b.pmore
  415bcc:	mov	w1, #0x1                   	// #1
  415bd0:	lsl	w0, w1, w21
  415bd4:	cbnz	w2, 415be8 <ferror@plt+0x13278>
  415bd8:	sub	w21, w21, #0x1
  415bdc:	lsl	w21, w1, w21
  415be0:	tst	w21, w19
  415be4:	b.ne	415c38 <ferror@plt+0x132c8>  // b.any
  415be8:	sub	w0, w0, #0x1
  415bec:	and	w19, w19, w0
  415bf0:	str	w26, [x23]
  415bf4:	str	w2, [x24]
  415bf8:	b	415b28 <ferror@plt+0x131b8>
  415bfc:	cmp	x25, #0x1
  415c00:	b.ls	415c30 <ferror@plt+0x132c0>  // b.plast
  415c04:	ldrb	w0, [x20, #1137]
  415c08:	cbz	w0, 415c20 <ferror@plt+0x132b0>
  415c0c:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  415c10:	mov	x0, x20
  415c14:	add	x2, x2, #0xc9e
  415c18:	mov	w1, #0x5                   	// #5
  415c1c:	bl	4194ac <ferror@plt+0x16b3c>
  415c20:	mov	x26, x25
  415c24:	mov	w2, #0x0                   	// #0
  415c28:	ldr	x21, [x20, #1224]
  415c2c:	b	415bc4 <ferror@plt+0x13254>
  415c30:	mov	x26, x25
  415c34:	b	415bc0 <ferror@plt+0x13250>
  415c38:	neg	w0, w0
  415c3c:	orr	w19, w19, w0
  415c40:	b	415bf0 <ferror@plt+0x13280>
  415c44:	stp	x29, x30, [sp, #-64]!
  415c48:	mov	x7, x1
  415c4c:	mov	x10, x2
  415c50:	mov	x9, x3
  415c54:	mov	x29, sp
  415c58:	mov	w1, w5
  415c5c:	add	x8, sp, #0x28
  415c60:	stp	x19, x20, [sp, #16]
  415c64:	mov	x19, x0
  415c68:	bl	411d98 <ferror@plt+0xf428>
  415c6c:	ldr	x1, [sp, #40]
  415c70:	adrp	x0, 411000 <ferror@plt+0xe690>
  415c74:	add	x0, x0, #0xb7c
  415c78:	cmp	x1, x0
  415c7c:	b.ne	415cd0 <ferror@plt+0x13360>  // b.any
  415c80:	adrp	x0, 411000 <ferror@plt+0xe690>
  415c84:	add	x0, x0, #0x720
  415c88:	ldr	x20, [x19, #1000]
  415c8c:	str	x0, [x19, #1000]
  415c90:	mov	x6, x4
  415c94:	mov	x1, x7
  415c98:	mov	w4, w5
  415c9c:	mov	x2, x9
  415ca0:	mov	x5, x10
  415ca4:	mov	x0, x19
  415ca8:	mov	x3, #0x0                   	// #0
  415cac:	bl	414fa0 <ferror@plt+0x12630>
  415cb0:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  415cb4:	tst	w0, #0xff
  415cb8:	add	x0, x1, #0xcf1
  415cbc:	str	x20, [x19, #1000]
  415cc0:	csel	x0, x0, xzr, eq  // eq = none
  415cc4:	ldp	x19, x20, [sp, #16]
  415cc8:	ldp	x29, x30, [sp], #64
  415ccc:	ret
  415cd0:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0x12198>
  415cd4:	add	x0, x0, #0xcc1
  415cd8:	b	415cc4 <ferror@plt+0x13354>
  415cdc:	ldrb	w0, [x1, #18]
  415ce0:	mov	w3, #0xffffffcd            	// #-51
  415ce4:	str	xzr, [x1, #24]
  415ce8:	and	w0, w0, #0xfffffffc
  415cec:	strb	w0, [x1, #18]
  415cf0:	ldrh	w0, [x1, #18]
  415cf4:	ubfx	x2, x0, #2, #8
  415cf8:	and	w2, w2, w3
  415cfc:	bfi	w0, w2, #2, #8
  415d00:	strh	w0, [x1, #18]
  415d04:	mov	w0, #0x1                   	// #1
  415d08:	ret
  415d0c:	stp	x29, x30, [sp, #-32]!
  415d10:	mov	x29, sp
  415d14:	stp	x19, x20, [sp, #16]
  415d18:	mov	x19, x0
  415d1c:	mov	w20, #0x0                   	// #0
  415d20:	cbz	x19, 415d44 <ferror@plt+0x133d4>
  415d24:	ldrb	w0, [x19, #16]
  415d28:	cbz	w0, 415d38 <ferror@plt+0x133c8>
  415d2c:	ldr	x0, [x19, #24]
  415d30:	bl	415d0c <ferror@plt+0x1339c>
  415d34:	add	w20, w20, w0
  415d38:	add	w20, w20, #0x1
  415d3c:	ldr	x19, [x19]
  415d40:	b	415d20 <ferror@plt+0x133b0>
  415d44:	mov	w0, w20
  415d48:	ldp	x19, x20, [sp, #16]
  415d4c:	ldp	x29, x30, [sp], #32
  415d50:	ret
  415d54:	stp	x29, x30, [sp, #-32]!
  415d58:	mov	x29, sp
  415d5c:	stp	x19, x20, [sp, #16]
  415d60:	mov	x19, x0
  415d64:	and	w20, w1, #0xff
  415d68:	bl	4228f4 <ferror@plt+0x1ff84>
  415d6c:	ldrb	w2, [x0, #4]
  415d70:	cmp	w2, #0x35
  415d74:	b.ne	415de0 <ferror@plt+0x13470>  // b.any
  415d78:	ldr	x0, [x0, #8]
  415d7c:	cbz	w20, 415dc8 <ferror@plt+0x13458>
  415d80:	ldr	x1, [x19, #1248]
  415d84:	cmp	x1, x0
  415d88:	b.ne	415da4 <ferror@plt+0x13434>  // b.any
  415d8c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  415d90:	add	x2, x2, #0x288
  415d94:	mov	x0, x19
  415d98:	mov	w1, #0x3                   	// #3
  415d9c:	bl	419440 <ferror@plt+0x16ad0>
  415da0:	b	415e04 <ferror@plt+0x13494>
  415da4:	ldr	x1, [x19, #1288]
  415da8:	cmp	x1, x0
  415dac:	b.eq	415dbc <ferror@plt+0x1344c>  // b.none
  415db0:	ldr	x1, [x19, #1296]
  415db4:	cmp	x1, x0
  415db8:	b.ne	415dc8 <ferror@plt+0x13458>  // b.any
  415dbc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  415dc0:	add	x2, x2, #0x2b1
  415dc4:	b	415d94 <ferror@plt+0x13424>
  415dc8:	ldrh	w1, [x0, #18]
  415dcc:	tst	x1, #0x8
  415dd0:	csel	x0, x0, xzr, eq  // eq = none
  415dd4:	ldp	x19, x20, [sp, #16]
  415dd8:	ldp	x29, x30, [sp], #32
  415ddc:	ret
  415de0:	ldrh	w1, [x0, #6]
  415de4:	tbz	w1, #4, 415e0c <ferror@plt+0x1349c>
  415de8:	ldr	x0, [x0, #8]
  415dec:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  415df0:	add	x2, x2, #0x2e2
  415df4:	ldr	x3, [x0]
  415df8:	mov	x0, x19
  415dfc:	mov	w1, #0x3                   	// #3
  415e00:	bl	419440 <ferror@plt+0x16ad0>
  415e04:	mov	x0, #0x0                   	// #0
  415e08:	b	415dd4 <ferror@plt+0x13464>
  415e0c:	cmp	w2, #0x16
  415e10:	b.ne	415e28 <ferror@plt+0x134b8>  // b.any
  415e14:	ldr	x0, [x19, #144]
  415e18:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  415e1c:	add	x2, x2, #0x322
  415e20:	ldr	x3, [x0, #8]
  415e24:	b	415df8 <ferror@plt+0x13488>
  415e28:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  415e2c:	add	x2, x2, #0x347
  415e30:	b	415d94 <ferror@plt+0x13424>
  415e34:	stp	x29, x30, [sp, #-32]!
  415e38:	mov	x29, sp
  415e3c:	stp	x19, x20, [sp, #16]
  415e40:	mov	w19, w1
  415e44:	mov	x20, x0
  415e48:	bl	4228f4 <ferror@plt+0x1ff84>
  415e4c:	mov	x1, x0
  415e50:	ldrb	w0, [x0, #4]
  415e54:	cmp	w0, #0x37
  415e58:	b.ne	415ea4 <ferror@plt+0x13534>  // b.any
  415e5c:	ldr	w0, [x1, #8]
  415e60:	cmp	w0, #0x1
  415e64:	b.ne	415eac <ferror@plt+0x1353c>  // b.any
  415e68:	ldr	x0, [x1, #16]
  415e6c:	ldrb	w2, [x0]
  415e70:	sub	w0, w2, #0x30
  415e74:	cmp	w0, w19
  415e78:	ccmp	w0, #0x4, #0x2, hi  // hi = pmore
  415e7c:	b.hi	415eac <ferror@plt+0x1353c>  // b.pmore
  415e80:	cmp	w0, #0x4
  415e84:	ccmp	w19, #0x3, #0x4, eq  // eq = none
  415e88:	b.ne	415eac <ferror@plt+0x1353c>  // b.any
  415e8c:	cmp	w19, #0x0
  415e90:	ccmp	w0, #0x2, #0x0, ne  // ne = any
  415e94:	b.eq	415eac <ferror@plt+0x1353c>  // b.none
  415e98:	ldp	x19, x20, [sp, #16]
  415e9c:	ldp	x29, x30, [sp], #32
  415ea0:	ret
  415ea4:	cmp	w0, #0x16
  415ea8:	b.eq	415ecc <ferror@plt+0x1355c>  // b.none
  415eac:	mov	x0, x20
  415eb0:	bl	4212ac <ferror@plt+0x1e93c>
  415eb4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  415eb8:	mov	x3, x0
  415ebc:	add	x2, x2, #0x367
  415ec0:	mov	x0, x20
  415ec4:	mov	w1, #0x3                   	// #3
  415ec8:	bl	419440 <ferror@plt+0x16ad0>
  415ecc:	mov	w0, #0x0                   	// #0
  415ed0:	b	415e98 <ferror@plt+0x13528>
  415ed4:	stp	x29, x30, [sp, #-32]!
  415ed8:	mov	x29, sp
  415edc:	str	x19, [sp, #16]
  415ee0:	mov	x19, x0
  415ee4:	mov	x0, x19
  415ee8:	bl	4287a8 <ferror@plt+0x25e38>
  415eec:	ldrb	w1, [x0, #4]
  415ef0:	cmp	w1, #0x53
  415ef4:	b.eq	415ee4 <ferror@plt+0x13574>  // b.none
  415ef8:	ldr	x19, [sp, #16]
  415efc:	ldp	x29, x30, [sp], #32
  415f00:	ret
  415f04:	stp	x29, x30, [sp, #-48]!
  415f08:	mov	x29, sp
  415f0c:	stp	x19, x20, [sp, #16]
  415f10:	mov	x19, x0
  415f14:	mov	w0, #0x1                   	// #1
  415f18:	strb	w0, [x19, #23]
  415f1c:	str	x21, [sp, #32]
  415f20:	adrp	x21, 451000 <_obstack_memory_used@@Base+0x17198>
  415f24:	add	x21, x21, #0x3b0
  415f28:	mov	x0, x19
  415f2c:	bl	4228f4 <ferror@plt+0x1ff84>
  415f30:	ldrb	w1, [x0, #4]
  415f34:	cmp	w1, #0x16
  415f38:	b.eq	415f58 <ferror@plt+0x135e8>  // b.none
  415f3c:	cmp	w1, #0x35
  415f40:	b.eq	415f6c <ferror@plt+0x135fc>  // b.none
  415f44:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  415f48:	mov	x0, x19
  415f4c:	add	x2, x2, #0x38b
  415f50:	mov	w1, #0x3                   	// #3
  415f54:	bl	419440 <ferror@plt+0x16ad0>
  415f58:	strb	wzr, [x19, #23]
  415f5c:	ldp	x19, x20, [sp, #16]
  415f60:	ldr	x21, [sp, #32]
  415f64:	ldp	x29, x30, [sp], #48
  415f68:	ret
  415f6c:	ldr	x20, [x0, #8]
  415f70:	ldrh	w0, [x20, #18]
  415f74:	tbnz	w0, #3, 415f28 <ferror@plt+0x135b8>
  415f78:	ldrb	w0, [x20, #18]
  415f7c:	tbz	w0, #1, 415f94 <ferror@plt+0x13624>
  415f80:	ldr	x3, [x20]
  415f84:	mov	x2, x21
  415f88:	mov	x0, x19
  415f8c:	mov	w1, #0x0                   	// #0
  415f90:	bl	419440 <ferror@plt+0x16ad0>
  415f94:	mov	x0, x20
  415f98:	bl	426384 <ferror@plt+0x23a14>
  415f9c:	ldrh	w0, [x20, #18]
  415fa0:	orr	w0, w0, #0x18
  415fa4:	strh	w0, [x20, #18]
  415fa8:	b	415f28 <ferror@plt+0x135b8>
  415fac:	stp	x29, x30, [sp, #-64]!
  415fb0:	mov	x29, sp
  415fb4:	stp	x19, x20, [sp, #16]
  415fb8:	add	x19, x0, #0x18
  415fbc:	stp	x21, x22, [sp, #32]
  415fc0:	mov	x22, x1
  415fc4:	str	x23, [sp, #48]
  415fc8:	mov	x23, #0x18                  	// #24
  415fcc:	ldr	x21, [x19]
  415fd0:	cbz	x21, 416028 <ferror@plt+0x136b8>
  415fd4:	ldr	w1, [x21, #12]
  415fd8:	ldr	w0, [x22, #12]
  415fdc:	cmp	w1, w0
  415fe0:	b.eq	415fec <ferror@plt+0x1367c>  // b.none
  415fe4:	ldr	x19, [x19]
  415fe8:	b	415fcc <ferror@plt+0x1365c>
  415fec:	mov	w20, #0x0                   	// #0
  415ff0:	ldr	w0, [x21, #12]
  415ff4:	cmp	w0, w20
  415ff8:	b.ls	41601c <ferror@plt+0x136ac>  // b.plast
  415ffc:	mov	w0, w20
  416000:	madd	x0, x0, x23, x23
  416004:	add	x1, x22, x0
  416008:	add	x0, x21, x0
  41600c:	bl	41ffc4 <ferror@plt+0x1d654>
  416010:	cbz	w0, 41601c <ferror@plt+0x136ac>
  416014:	add	w20, w20, #0x1
  416018:	b	415ff0 <ferror@plt+0x13680>
  41601c:	ldr	w0, [x21, #12]
  416020:	cmp	w0, w20
  416024:	b.ne	415fe4 <ferror@plt+0x13674>  // b.any
  416028:	mov	x0, x19
  41602c:	ldp	x19, x20, [sp, #16]
  416030:	ldp	x21, x22, [sp, #32]
  416034:	ldr	x23, [sp, #48]
  416038:	ldp	x29, x30, [sp], #64
  41603c:	ret
  416040:	stp	x29, x30, [sp, #-48]!
  416044:	mov	x29, sp
  416048:	stp	x19, x20, [sp, #16]
  41604c:	mov	x19, x0
  416050:	and	w20, w1, #0xff
  416054:	bl	4228f4 <ferror@plt+0x1ff84>
  416058:	ldrb	w4, [x0, #4]
  41605c:	cmp	w4, #0x3e
  416060:	b.eq	41609c <ferror@plt+0x1372c>  // b.none
  416064:	cmp	w20, #0x0
  416068:	adrp	x0, 44b000 <_obstack_memory_used@@Base+0x11198>
  41606c:	adrp	x3, 44b000 <_obstack_memory_used@@Base+0x11198>
  416070:	add	x0, x0, #0x6c1
  416074:	add	x3, x3, #0x4e0
  416078:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  41607c:	csel	x3, x3, x0, ne  // ne = any
  416080:	add	x2, x2, #0x3ce
  416084:	mov	x0, x19
  416088:	mov	w1, #0x3                   	// #3
  41608c:	bl	419440 <ferror@plt+0x16ad0>
  416090:	ldp	x19, x20, [sp, #16]
  416094:	ldp	x29, x30, [sp], #48
  416098:	ret
  41609c:	add	x1, x0, #0x8
  4160a0:	add	x3, sp, #0x20
  4160a4:	mov	x0, x19
  4160a8:	mov	x2, #0x1                   	// #1
  4160ac:	bl	4158fc <ferror@plt+0x12f8c>
  4160b0:	tst	w0, #0xff
  4160b4:	b.eq	416064 <ferror@plt+0x136f4>  // b.none
  4160b8:	ldr	w0, [sp, #32]
  4160bc:	cbz	w0, 416064 <ferror@plt+0x136f4>
  4160c0:	ldr	x3, [sp, #40]
  4160c4:	cmp	w20, #0x0
  4160c8:	mov	x0, x19
  4160cc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4160d0:	mov	w1, #0x3                   	// #3
  4160d4:	add	x2, x2, #0xe2c
  4160d8:	csel	w1, w1, wzr, ne  // ne = any
  4160dc:	bl	419440 <ferror@plt+0x16ad0>
  4160e0:	ldr	x0, [sp, #40]
  4160e4:	bl	402730 <free@plt>
  4160e8:	b	416090 <ferror@plt+0x13720>
  4160ec:	mov	w1, #0x1                   	// #1
  4160f0:	b	416040 <ferror@plt+0x136d0>
  4160f4:	mov	w1, #0x0                   	// #0
  4160f8:	b	416040 <ferror@plt+0x136d0>
  4160fc:	stp	x29, x30, [sp, #-64]!
  416100:	mov	x29, sp
  416104:	stp	x19, x20, [sp, #16]
  416108:	mov	x20, #0x0                   	// #0
  41610c:	stp	x21, x22, [sp, #32]
  416110:	mov	x21, x0
  416114:	mov	x0, #0x400                 	// #1024
  416118:	stp	x23, x24, [sp, #48]
  41611c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  416120:	mov	x19, x0
  416124:	mov	x24, #0x400                 	// #1024
  416128:	mov	w23, #0x20                  	// #32
  41612c:	mov	x0, x21
  416130:	bl	415ed4 <ferror@plt+0x13564>
  416134:	ldrb	w1, [x0, #4]
  416138:	mov	x22, x0
  41613c:	cmp	w1, #0x2
  416140:	b.eq	416160 <ferror@plt+0x137f0>  // b.none
  416144:	cmp	w1, #0x16
  416148:	b.ne	41617c <ferror@plt+0x1380c>  // b.any
  41614c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  416150:	mov	x0, x21
  416154:	add	x2, x2, #0x3f1
  416158:	mov	w1, #0x3                   	// #3
  41615c:	bl	419440 <ferror@plt+0x16ad0>
  416160:	strb	wzr, [x19, x20]
  416164:	mov	x0, x19
  416168:	ldp	x19, x20, [sp, #16]
  41616c:	ldp	x21, x22, [sp, #32]
  416170:	ldp	x23, x24, [sp, #48]
  416174:	ldp	x29, x30, [sp], #64
  416178:	ret
  41617c:	bl	41fbec <ferror@plt+0x1d27c>
  416180:	add	w1, w0, #0x2
  416184:	add	x0, x20, x1
  416188:	cmp	x0, x24
  41618c:	b.ls	4161a8 <ferror@plt+0x13838>  // b.plast
  416190:	add	x1, x24, x1
  416194:	mov	x0, x19
  416198:	lsl	x24, x1, #1
  41619c:	mov	x1, x24
  4161a0:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4161a4:	mov	x19, x0
  4161a8:	ldrh	w0, [x22, #6]
  4161ac:	tbz	w0, #0, 4161b8 <ferror@plt+0x13848>
  4161b0:	strb	w23, [x19, x20]
  4161b4:	add	x20, x20, #0x1
  4161b8:	add	x2, x19, x20
  4161bc:	mov	x1, x22
  4161c0:	mov	x0, x21
  4161c4:	mov	w3, #0x1                   	// #1
  4161c8:	bl	41fca4 <ferror@plt+0x1d334>
  4161cc:	sub	x20, x0, x19
  4161d0:	b	41612c <ferror@plt+0x137bc>
  4161d4:	stp	x29, x30, [sp, #-64]!
  4161d8:	mov	x29, sp
  4161dc:	stp	x19, x20, [sp, #16]
  4161e0:	mov	x19, x0
  4161e4:	ldr	x0, [x0, #448]
  4161e8:	stp	x21, x22, [sp, #32]
  4161ec:	mov	w21, w1
  4161f0:	str	x23, [sp, #48]
  4161f4:	mov	w22, w2
  4161f8:	ldur	w23, [x0, #-24]
  4161fc:	cbz	w3, 416278 <ferror@plt+0x13908>
  416200:	ldr	x0, [x19, #144]
  416204:	ldr	x1, [x0, #8]
  416208:	ldrb	w0, [x19, #24]
  41620c:	add	w0, w0, #0x1
  416210:	strb	w0, [x19, #24]
  416214:	mov	x0, x19
  416218:	bl	4203b0 <ferror@plt+0x1da40>
  41621c:	mov	x20, x0
  416220:	ldrb	w0, [x19, #24]
  416224:	cmp	w22, #0x0
  416228:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x17198>
  41622c:	add	x4, x4, #0xe2c
  416230:	sub	w0, w0, #0x1
  416234:	strb	w0, [x19, #24]
  416238:	cset	w0, ne  // ne = any
  41623c:	cmp	w0, #0x0
  416240:	ccmp	w21, #0x1, #0x0, ne  // ne = any
  416244:	b.ne	416280 <ferror@plt+0x13910>  // b.any
  416248:	mov	x5, x20
  41624c:	mov	w2, w23
  416250:	mov	w1, w22
  416254:	mov	x0, x19
  416258:	mov	w3, #0x0                   	// #0
  41625c:	bl	419754 <ferror@plt+0x16de4>
  416260:	mov	x0, x20
  416264:	ldp	x19, x20, [sp, #16]
  416268:	ldp	x21, x22, [sp, #32]
  41626c:	ldr	x23, [sp, #48]
  416270:	ldp	x29, x30, [sp], #64
  416274:	b	402730 <free@plt>
  416278:	mov	x1, #0x0                   	// #0
  41627c:	b	416208 <ferror@plt+0x13898>
  416280:	cmp	w21, #0x0
  416284:	mov	x5, x20
  416288:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  41628c:	mov	w2, w23
  416290:	mov	w3, #0x0                   	// #0
  416294:	b.eq	4162a8 <ferror@plt+0x13938>  // b.none
  416298:	mov	w1, w22
  41629c:	mov	x0, x19
  4162a0:	bl	41966c <ferror@plt+0x16cfc>
  4162a4:	b	416260 <ferror@plt+0x138f0>
  4162a8:	mov	w1, w21
  4162ac:	mov	x0, x19
  4162b0:	bl	4195fc <ferror@plt+0x16c8c>
  4162b4:	b	416260 <ferror@plt+0x138f0>
  4162b8:	mov	w3, #0x1                   	// #1
  4162bc:	mov	w2, #0x12                  	// #18
  4162c0:	mov	w1, w3
  4162c4:	b	4161d4 <ferror@plt+0x13864>
  4162c8:	mov	w3, #0x1                   	// #1
  4162cc:	mov	w2, #0x0                   	// #0
  4162d0:	mov	w1, #0x3                   	// #3
  4162d4:	b	4161d4 <ferror@plt+0x13864>
  4162d8:	stp	x29, x30, [sp, #-64]!
  4162dc:	mov	x29, sp
  4162e0:	stp	x19, x20, [sp, #16]
  4162e4:	add	x19, x0, #0x328
  4162e8:	mov	x20, x0
  4162ec:	stp	x21, x22, [sp, #32]
  4162f0:	mov	w22, w1
  4162f4:	mov	x21, x3
  4162f8:	stp	x23, x24, [sp, #48]
  4162fc:	mov	w23, w2
  416300:	ldr	x24, [x0]
  416304:	ldp	x1, x0, [x19, #24]
  416308:	sub	x0, x0, x1
  41630c:	cmp	x0, #0x1f
  416310:	b.hi	416320 <ferror@plt+0x139b0>  // b.pmore
  416314:	mov	x0, x19
  416318:	mov	x1, #0x20                  	// #32
  41631c:	bl	439ca4 <_obstack_newchunk@@Base>
  416320:	ldp	x0, x3, [x19, #16]
  416324:	add	x3, x3, #0x20
  416328:	cmp	x3, x0
  41632c:	b.ne	41633c <ferror@plt+0x139cc>  // b.any
  416330:	ldrb	w1, [x19, #80]
  416334:	orr	w1, w1, #0x2
  416338:	strb	w1, [x19, #80]
  41633c:	ldr	x4, [x19, #48]
  416340:	ldr	x1, [x19, #8]
  416344:	add	x3, x3, x4
  416348:	ldr	x2, [x19, #32]
  41634c:	bic	x4, x3, x4
  416350:	sub	x3, x4, x1
  416354:	sub	x1, x2, x1
  416358:	cmp	x3, x1
  41635c:	ldr	w1, [x20, #48]
  416360:	csel	x4, x4, x2, ls  // ls = plast
  416364:	stp	x4, x4, [x19, #16]
  416368:	mov	w2, #0x1                   	// #1
  41636c:	str	w1, [x0, #8]
  416370:	sub	w3, w2, w22
  416374:	ldr	x1, [x24, #96]
  416378:	str	x1, [x0]
  41637c:	and	w3, w3, w2
  416380:	ldrb	w1, [x20, #18]
  416384:	cmp	w1, #0x0
  416388:	cset	w1, ne  // ne = any
  41638c:	strb	w1, [x0, #25]
  416390:	ldrb	w1, [x20, #440]
  416394:	csel	w3, w3, w2, eq  // eq = none
  416398:	strb	w3, [x0, #24]
  41639c:	str	w23, [x0, #28]
  4163a0:	cbz	w1, 4163d0 <ferror@plt+0x13a60>
  4163a4:	ldr	x1, [x20, #424]
  4163a8:	cmp	x1, #0x0
  4163ac:	csel	x21, x21, xzr, eq  // eq = none
  4163b0:	str	x21, [x0, #16]
  4163b4:	strb	w22, [x20, #18]
  4163b8:	ldp	x19, x20, [sp, #16]
  4163bc:	ldp	x21, x22, [sp, #32]
  4163c0:	str	x0, [x24, #96]
  4163c4:	ldp	x23, x24, [sp, #48]
  4163c8:	ldp	x29, x30, [sp], #64
  4163cc:	ret
  4163d0:	mov	x21, #0x0                   	// #0
  4163d4:	b	4163b0 <ferror@plt+0x13a40>
  4163d8:	stp	x29, x30, [sp, #-32]!
  4163dc:	mov	x29, sp
  4163e0:	str	x19, [sp, #16]
  4163e4:	mov	x19, x0
  4163e8:	ldrb	w1, [x0, #18]
  4163ec:	cbnz	w1, 416418 <ferror@plt+0x13aa8>
  4163f0:	mov	w1, #0x1                   	// #1
  4163f4:	bl	41b46c <ferror@plt+0x18afc>
  4163f8:	and	w1, w0, #0xff
  4163fc:	eor	w1, w1, #0x1
  416400:	mov	x0, x19
  416404:	mov	w2, #0x4                   	// #4
  416408:	ldr	x3, [x19, #432]
  41640c:	ldr	x19, [sp, #16]
  416410:	ldp	x29, x30, [sp], #32
  416414:	b	4162d8 <ferror@plt+0x13968>
  416418:	mov	w1, #0x1                   	// #1
  41641c:	b	416400 <ferror@plt+0x13a90>
  416420:	stp	x29, x30, [sp, #-32]!
  416424:	mov	w1, #0x1                   	// #1
  416428:	mov	x29, sp
  41642c:	stp	x19, x20, [sp, #16]
  416430:	mov	x19, x0
  416434:	bl	415d54 <ferror@plt+0x133e4>
  416438:	cbz	x0, 4164a0 <ferror@plt+0x13b30>
  41643c:	mov	x20, x0
  416440:	ldrb	w0, [x19, #1124]
  416444:	ldr	x1, [x19, #1024]
  416448:	cmp	w0, #0x0
  41644c:	cset	w0, eq  // eq = none
  416450:	strb	w0, [x19, #21]
  416454:	cbz	x1, 416460 <ferror@plt+0x13af0>
  416458:	mov	x0, x19
  41645c:	blr	x1
  416460:	mov	x1, x20
  416464:	mov	x0, x19
  416468:	bl	426540 <ferror@plt+0x23bd0>
  41646c:	tst	w0, #0xff
  416470:	b.eq	41648c <ferror@plt+0x13b1c>  // b.none
  416474:	ldr	x3, [x19, #936]
  416478:	cbz	x3, 41648c <ferror@plt+0x13b1c>
  41647c:	ldr	w1, [x19, #48]
  416480:	mov	x2, x20
  416484:	mov	x0, x19
  416488:	blr	x3
  41648c:	ldrh	w0, [x20, #18]
  416490:	ubfx	x1, x0, #2, #8
  416494:	and	w1, w1, #0xffffffdf
  416498:	bfi	w0, w1, #2, #8
  41649c:	strh	w0, [x20, #18]
  4164a0:	ldp	x19, x20, [sp, #16]
  4164a4:	ldp	x29, x30, [sp], #32
  4164a8:	ret
  4164ac:	stp	x29, x30, [sp, #-48]!
  4164b0:	mov	x29, sp
  4164b4:	ldr	x1, [x0, #144]
  4164b8:	stp	x19, x20, [sp, #16]
  4164bc:	mov	x19, x0
  4164c0:	str	x21, [sp, #32]
  4164c4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  4164c8:	add	x0, x0, #0xb60
  4164cc:	cmp	x1, x0
  4164d0:	b.eq	416550 <ferror@plt+0x13be0>  // b.none
  4164d4:	cbz	x1, 41656c <ferror@plt+0x13bfc>
  4164d8:	ldrb	w20, [x1, #19]
  4164dc:	eor	x20, x20, #0x10
  4164e0:	ubfx	w20, w20, #4, #1
  4164e4:	ldrb	w2, [x19, #18]
  4164e8:	cmp	w2, #0x0
  4164ec:	add	x2, x0, #0x60
  4164f0:	cset	w21, ne  // ne = any
  4164f4:	cmp	x1, x2
  4164f8:	b.ne	416574 <ferror@plt+0x13c04>  // b.any
  4164fc:	mov	w0, #0x1                   	// #1
  416500:	strb	wzr, [x19, #18]
  416504:	strb	w0, [x19, #20]
  416508:	cbz	w20, 416518 <ferror@plt+0x13ba8>
  41650c:	ldrb	w0, [x19, #24]
  416510:	add	w0, w0, #0x1
  416514:	strb	w0, [x19, #24]
  416518:	mov	x0, x19
  41651c:	mov	w2, #0x0                   	// #0
  416520:	mov	x1, #0x0                   	// #0
  416524:	bl	42a384 <ferror@plt+0x27a14>
  416528:	cbz	w20, 416538 <ferror@plt+0x13bc8>
  41652c:	ldrb	w0, [x19, #24]
  416530:	sub	w0, w0, #0x1
  416534:	strb	w0, [x19, #24]
  416538:	ldr	x1, [x19, #1312]
  41653c:	strb	w21, [x19, #18]
  416540:	ldr	x2, [x19, #1328]
  416544:	mov	x0, x19
  416548:	sub	x2, x2, x1
  41654c:	bl	42a324 <ferror@plt+0x279b4>
  416550:	ldrb	w0, [x19, #24]
  416554:	add	w0, w0, #0x1
  416558:	strb	w0, [x19, #24]
  41655c:	ldp	x19, x20, [sp, #16]
  416560:	ldr	x21, [sp, #32]
  416564:	ldp	x29, x30, [sp], #48
  416568:	ret
  41656c:	mov	w20, #0x0                   	// #0
  416570:	b	4164e4 <ferror@plt+0x13b74>
  416574:	add	x0, x0, #0xd8
  416578:	cmp	x1, x0
  41657c:	b.eq	4164fc <ferror@plt+0x13b8c>  // b.none
  416580:	strb	wzr, [x19, #20]
  416584:	b	416508 <ferror@plt+0x13b98>
  416588:	stp	x29, x30, [sp, #-48]!
  41658c:	mov	x29, sp
  416590:	stp	x19, x20, [sp, #16]
  416594:	mov	x20, x1
  416598:	mov	x19, x2
  41659c:	stp	x21, x22, [sp, #32]
  4165a0:	mov	x21, x0
  4165a4:	cbz	x20, 4165f4 <ferror@plt+0x13c84>
  4165a8:	ldrb	w0, [x20, #16]
  4165ac:	cbz	w0, 4165c4 <ferror@plt+0x13c54>
  4165b0:	ldr	x1, [x20, #24]
  4165b4:	mov	x2, x19
  4165b8:	mov	x0, x21
  4165bc:	bl	416588 <ferror@plt+0x13c18>
  4165c0:	mov	x19, x0
  4165c4:	ldr	x22, [x19]
  4165c8:	mov	x0, x22
  4165cc:	bl	402330 <strlen@plt>
  4165d0:	mov	x1, x22
  4165d4:	mov	w2, w0
  4165d8:	mov	x0, x21
  4165dc:	bl	41ea70 <ferror@plt+0x1c100>
  4165e0:	str	x0, [x20, #8]
  4165e4:	ldr	x0, [x19], #8
  4165e8:	bl	402730 <free@plt>
  4165ec:	ldr	x20, [x20]
  4165f0:	b	4165a4 <ferror@plt+0x13c34>
  4165f4:	mov	x0, x19
  4165f8:	ldp	x19, x20, [sp, #16]
  4165fc:	ldp	x21, x22, [sp, #32]
  416600:	ldp	x29, x30, [sp], #48
  416604:	ret
  416608:	stp	x29, x30, [sp, #-32]!
  41660c:	mov	x29, sp
  416610:	stp	x19, x20, [sp, #16]
  416614:	mov	x20, x0
  416618:	cbz	x20, 41665c <ferror@plt+0x13cec>
  41661c:	ldrb	w0, [x20, #16]
  416620:	cbz	w0, 416630 <ferror@plt+0x13cc0>
  416624:	ldr	x0, [x20, #24]
  416628:	bl	416608 <ferror@plt+0x13c98>
  41662c:	mov	x1, x0
  416630:	ldr	x0, [x20, #8]
  416634:	mov	x19, x1
  416638:	ldr	w3, [x0, #8]
  41663c:	ldr	x0, [x0]
  416640:	mov	w1, w3
  416644:	add	w2, w3, #0x1
  416648:	bl	43a008 <_obstack_memory_used@@Base+0x1a0>
  41664c:	str	x0, [x19], #8
  416650:	ldr	x20, [x20]
  416654:	mov	x1, x19
  416658:	b	416618 <ferror@plt+0x13ca8>
  41665c:	mov	x0, x1
  416660:	ldp	x19, x20, [sp, #16]
  416664:	ldp	x29, x30, [sp], #32
  416668:	ret
  41666c:	stp	x29, x30, [sp, #-48]!
  416670:	mov	x29, sp
  416674:	stp	x19, x20, [sp, #16]
  416678:	mov	x19, x0
  41667c:	str	x21, [sp, #32]
  416680:	bl	415ed4 <ferror@plt+0x13564>
  416684:	mov	x20, x0
  416688:	ldrb	w0, [x0, #4]
  41668c:	cmp	w0, #0x16
  416690:	b.ne	4166a0 <ferror@plt+0x13d30>  // b.any
  416694:	mov	x0, x19
  416698:	mov	w1, #0x1                   	// #1
  41669c:	bl	426104 <ferror@plt+0x23794>
  4166a0:	ldrb	w0, [x20, #4]
  4166a4:	cmp	w0, #0x14
  4166a8:	b.ne	416714 <ferror@plt+0x13da4>  // b.any
  4166ac:	mov	x0, x19
  4166b0:	bl	415ed4 <ferror@plt+0x13564>
  4166b4:	mov	x20, x0
  4166b8:	ldrb	w0, [x0, #4]
  4166bc:	cmp	w0, #0x16
  4166c0:	b.ne	4166d0 <ferror@plt+0x13d60>  // b.any
  4166c4:	mov	x0, x19
  4166c8:	mov	w1, #0x1                   	// #1
  4166cc:	bl	426104 <ferror@plt+0x23794>
  4166d0:	ldrb	w0, [x20, #4]
  4166d4:	sub	w0, w0, #0x3e
  4166d8:	and	w0, w0, #0xff
  4166dc:	cmp	w0, #0x4
  4166e0:	b.hi	416714 <ferror@plt+0x13da4>  // b.pmore
  4166e4:	mov	x0, x19
  4166e8:	bl	415ed4 <ferror@plt+0x13564>
  4166ec:	mov	x21, x0
  4166f0:	ldrb	w0, [x0, #4]
  4166f4:	cmp	w0, #0x16
  4166f8:	b.ne	416708 <ferror@plt+0x13d98>  // b.any
  4166fc:	mov	x0, x19
  416700:	mov	w1, #0x1                   	// #1
  416704:	bl	426104 <ferror@plt+0x23794>
  416708:	ldrb	w0, [x21, #4]
  41670c:	cmp	w0, #0x15
  416710:	b.eq	416718 <ferror@plt+0x13da8>  // b.none
  416714:	mov	x20, #0x0                   	// #0
  416718:	mov	x0, x20
  41671c:	ldp	x19, x20, [sp, #16]
  416720:	ldr	x21, [sp, #32]
  416724:	ldp	x29, x30, [sp], #48
  416728:	ret
  41672c:	stp	x29, x30, [sp, #-32]!
  416730:	mov	x29, sp
  416734:	stp	x19, x20, [sp, #16]
  416738:	mov	w20, w2
  41673c:	ldr	x2, [x0, #448]
  416740:	ldurb	w2, [x2, #-20]
  416744:	cmp	w2, #0x16
  416748:	b.eq	416794 <ferror@plt+0x13e24>  // b.none
  41674c:	mov	x19, x0
  416750:	and	w1, w1, #0xff
  416754:	cbz	w1, 41678c <ferror@plt+0x13e1c>
  416758:	bl	4287a8 <ferror@plt+0x25e38>
  41675c:	ldrb	w0, [x0, #4]
  416760:	cmp	w0, #0x16
  416764:	b.eq	416794 <ferror@plt+0x13e24>  // b.none
  416768:	ldr	x0, [x19, #144]
  41676c:	mov	w1, w20
  416770:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  416774:	add	x2, x2, #0x411
  416778:	ldr	x3, [x0, #8]
  41677c:	mov	x0, x19
  416780:	ldp	x19, x20, [sp, #16]
  416784:	ldp	x29, x30, [sp], #32
  416788:	b	41951c <ferror@plt+0x16bac>
  41678c:	bl	4228f4 <ferror@plt+0x1ff84>
  416790:	b	41675c <ferror@plt+0x13dec>
  416794:	ldp	x19, x20, [sp, #16]
  416798:	ldp	x29, x30, [sp], #32
  41679c:	ret
  4167a0:	mov	w2, #0x0                   	// #0
  4167a4:	b	41672c <ferror@plt+0x13dbc>
  4167a8:	stp	x29, x30, [sp, #-32]!
  4167ac:	mov	x29, sp
  4167b0:	str	x19, [sp, #16]
  4167b4:	mov	x19, x0
  4167b8:	bl	4287a8 <ferror@plt+0x25e38>
  4167bc:	ldrb	w1, [x0, #4]
  4167c0:	cmp	w1, #0x3e
  4167c4:	b.eq	4167f8 <ferror@plt+0x13e88>  // b.none
  4167c8:	ldr	x0, [x19, #144]
  4167cc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4167d0:	mov	w1, #0x3                   	// #3
  4167d4:	add	x2, x2, #0x436
  4167d8:	ldr	x3, [x0, #8]
  4167dc:	mov	x0, x19
  4167e0:	bl	419440 <ferror@plt+0x16ad0>
  4167e4:	mov	x0, x19
  4167e8:	mov	w1, #0x0                   	// #0
  4167ec:	ldr	x19, [sp, #16]
  4167f0:	ldp	x29, x30, [sp], #32
  4167f4:	b	4167a0 <ferror@plt+0x13e30>
  4167f8:	ldr	x3, [x19, #952]
  4167fc:	cbz	x3, 4167e4 <ferror@plt+0x13e74>
  416800:	ldr	w1, [x19, #48]
  416804:	add	x2, x0, #0x8
  416808:	mov	x0, x19
  41680c:	blr	x3
  416810:	b	4167e4 <ferror@plt+0x13e74>
  416814:	stp	x29, x30, [sp, #-96]!
  416818:	mov	x29, sp
  41681c:	stp	x21, x22, [sp, #32]
  416820:	mov	x21, x3
  416824:	adrp	x22, 451000 <_obstack_memory_used@@Base+0x17198>
  416828:	stp	x19, x20, [sp, #16]
  41682c:	mov	x19, x0
  416830:	add	x22, x22, #0xb60
  416834:	stp	x23, x24, [sp, #48]
  416838:	mov	x24, x1
  41683c:	mov	x23, x2
  416840:	stp	x25, x26, [sp, #64]
  416844:	stp	x27, x28, [sp, #80]
  416848:	bl	415ed4 <ferror@plt+0x13564>
  41684c:	mov	x20, x0
  416850:	ldr	w0, [x0]
  416854:	str	w0, [x21]
  416858:	ldrb	w0, [x20, #4]
  41685c:	cmp	w0, #0x3e
  416860:	b.ne	4168c0 <ferror@plt+0x13f50>  // b.any
  416864:	ldr	x0, [x20, #16]
  416868:	ldrb	w0, [x0]
  41686c:	cmp	w0, #0x52
  416870:	b.ne	4168c8 <ferror@plt+0x13f58>  // b.any
  416874:	ldr	x0, [x19, #144]
  416878:	add	x22, x22, #0x108
  41687c:	cmp	x0, x22
  416880:	b.eq	416950 <ferror@plt+0x13fe0>  // b.none
  416884:	ldr	x3, [x0, #8]
  416888:	mov	x21, #0x0                   	// #0
  41688c:	mov	x0, x19
  416890:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  416894:	mov	w1, #0x3                   	// #3
  416898:	add	x2, x2, #0x45e
  41689c:	bl	419440 <ferror@plt+0x16ad0>
  4168a0:	mov	x0, x21
  4168a4:	ldp	x19, x20, [sp, #16]
  4168a8:	ldp	x21, x22, [sp, #32]
  4168ac:	ldp	x23, x24, [sp, #48]
  4168b0:	ldp	x25, x26, [sp, #64]
  4168b4:	ldp	x27, x28, [sp, #80]
  4168b8:	ldp	x29, x30, [sp], #96
  4168bc:	ret
  4168c0:	cmp	w0, #0x44
  4168c4:	b.ne	416934 <ferror@plt+0x13fc4>  // b.any
  4168c8:	ldr	w0, [x20, #8]
  4168cc:	sub	w0, w0, #0x1
  4168d0:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  4168d4:	ldr	x1, [x20, #16]
  4168d8:	mov	x21, x0
  4168dc:	ldr	w2, [x20, #8]
  4168e0:	add	x1, x1, #0x1
  4168e4:	sub	w2, w2, #0x2
  4168e8:	bl	4022e0 <memcpy@plt>
  4168ec:	ldr	w0, [x20, #8]
  4168f0:	sub	w0, w0, #0x2
  4168f4:	strb	wzr, [x21, x0]
  4168f8:	ldrb	w0, [x20, #4]
  4168fc:	cmp	w0, #0x44
  416900:	cset	w0, eq  // eq = none
  416904:	str	w0, [x24]
  416908:	add	x22, x22, #0x108
  41690c:	ldr	x0, [x19, #144]
  416910:	cmp	x0, x22
  416914:	b.eq	4168a0 <ferror@plt+0x13f30>  // b.none
  416918:	cbz	x23, 416924 <ferror@plt+0x13fb4>
  41691c:	ldrb	w0, [x19, #1123]
  416920:	cbz	w0, 41695c <ferror@plt+0x13fec>
  416924:	mov	x0, x19
  416928:	mov	w1, #0x1                   	// #1
  41692c:	bl	4167a0 <ferror@plt+0x13e30>
  416930:	b	4168a0 <ferror@plt+0x13f30>
  416934:	cmp	w0, #0x3
  416938:	b.ne	416874 <ferror@plt+0x13f04>  // b.any
  41693c:	mov	x0, x19
  416940:	bl	4160fc <ferror@plt+0x1378c>
  416944:	mov	x21, x0
  416948:	mov	w0, #0x1                   	// #1
  41694c:	b	416904 <ferror@plt+0x13f94>
  416950:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x17198>
  416954:	add	x3, x3, #0x44c
  416958:	b	416888 <ferror@plt+0x13f18>
  41695c:	mov	x0, #0x40                  	// #64
  416960:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  416964:	mov	x20, x0
  416968:	ldr	x0, [x19, #448]
  41696c:	ldurb	w0, [x0, #-20]
  416970:	cmp	w0, #0x16
  416974:	b.ne	416988 <ferror@plt+0x14018>  // b.any
  416978:	mov	x22, #0x0                   	// #0
  41697c:	str	xzr, [x20, x22, lsl #3]
  416980:	str	x20, [x23]
  416984:	b	4168a0 <ferror@plt+0x13f30>
  416988:	adrp	x26, 451000 <_obstack_memory_used@@Base+0x17198>
  41698c:	add	x26, x26, #0x411
  416990:	mov	x25, #0x8                   	// #8
  416994:	mov	x22, #0x0                   	// #0
  416998:	mov	x0, x19
  41699c:	bl	4228f4 <ferror@plt+0x1ff84>
  4169a0:	mov	x24, x0
  4169a4:	ldrb	w0, [x0, #4]
  4169a8:	cmp	w0, #0x16
  4169ac:	b.eq	41697c <ferror@plt+0x1400c>  // b.none
  4169b0:	cmp	w0, #0x4f
  4169b4:	b.eq	4169d4 <ferror@plt+0x14064>  // b.none
  4169b8:	ldr	x0, [x19, #144]
  4169bc:	mov	x2, x26
  4169c0:	mov	w1, #0x2                   	// #2
  4169c4:	ldr	x3, [x0, #8]
  4169c8:	mov	x0, x19
  4169cc:	bl	419440 <ferror@plt+0x16ad0>
  4169d0:	b	416998 <ferror@plt+0x14028>
  4169d4:	add	x27, x22, #0x1
  4169d8:	cmp	x27, x25
  4169dc:	b.cc	4169f8 <ferror@plt+0x14088>  // b.lo, b.ul, b.last
  4169e0:	lsl	x28, x25, #1
  4169e4:	lsl	x1, x25, #4
  4169e8:	mov	x0, x20
  4169ec:	mov	x25, x28
  4169f0:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4169f4:	mov	x20, x0
  4169f8:	str	x24, [x20, x22, lsl #3]
  4169fc:	mov	x22, x27
  416a00:	b	416998 <ferror@plt+0x14028>
  416a04:	stp	x29, x30, [sp, #-48]!
  416a08:	mov	x2, #0x0                   	// #0
  416a0c:	mov	x29, sp
  416a10:	add	x3, sp, #0x2c
  416a14:	add	x1, sp, #0x28
  416a18:	stp	x19, x20, [sp, #16]
  416a1c:	mov	x19, x0
  416a20:	bl	416814 <ferror@plt+0x13ea4>
  416a24:	cbz	x0, 416a64 <ferror@plt+0x140f4>
  416a28:	ldr	w2, [sp, #40]
  416a2c:	mov	x1, x0
  416a30:	mov	x20, x0
  416a34:	mov	x0, x19
  416a38:	bl	41e5ac <ferror@plt+0x1bc3c>
  416a3c:	cmp	w0, #0x0
  416a40:	b.ge	416a70 <ferror@plt+0x14100>  // b.tcont
  416a44:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  416a48:	mov	x3, x20
  416a4c:	add	x2, x2, #0x483
  416a50:	mov	x0, x19
  416a54:	mov	w1, #0x0                   	// #0
  416a58:	bl	419440 <ferror@plt+0x16ad0>
  416a5c:	mov	x0, x20
  416a60:	bl	402730 <free@plt>
  416a64:	ldp	x19, x20, [sp, #16]
  416a68:	ldp	x29, x30, [sp], #48
  416a6c:	ret
  416a70:	b.eq	416a5c <ferror@plt+0x140ec>  // b.none
  416a74:	mov	x3, x20
  416a78:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  416a7c:	add	x2, x2, #0x49e
  416a80:	mov	w1, #0x0                   	// #0
  416a84:	mov	x0, x19
  416a88:	bl	419440 <ferror@plt+0x16ad0>
  416a8c:	mov	x0, x19
  416a90:	bl	4287a8 <ferror@plt+0x25e38>
  416a94:	ldrb	w0, [x0, #4]
  416a98:	cmp	w0, #0x16
  416a9c:	b.eq	416a5c <ferror@plt+0x140ec>  // b.none
  416aa0:	mov	x0, x19
  416aa4:	mov	w1, #0x1                   	// #1
  416aa8:	bl	426104 <ferror@plt+0x23794>
  416aac:	mov	x0, x19
  416ab0:	mov	w3, #0x0                   	// #0
  416ab4:	mov	w2, #0x0                   	// #0
  416ab8:	mov	w1, #0x0                   	// #0
  416abc:	bl	4161d4 <ferror@plt+0x13864>
  416ac0:	b	416a5c <ferror@plt+0x140ec>
  416ac4:	stp	x29, x30, [sp, #-32]!
  416ac8:	mov	x29, sp
  416acc:	ldr	x1, [x0, #40]
  416ad0:	ldr	w1, [x1, #48]
  416ad4:	str	x19, [sp, #16]
  416ad8:	mov	x19, x0
  416adc:	cmp	w1, #0x1
  416ae0:	b.ne	416af4 <ferror@plt+0x14184>  // b.any
  416ae4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  416ae8:	mov	w1, #0x0                   	// #0
  416aec:	add	x2, x2, #0x4bc
  416af0:	bl	419440 <ferror@plt+0x16ad0>
  416af4:	mov	x0, x19
  416af8:	mov	w1, #0x0                   	// #0
  416afc:	bl	4167a0 <ferror@plt+0x13e30>
  416b00:	ldr	x0, [x19]
  416b04:	ldr	x1, [x0, #80]
  416b08:	mov	x0, x19
  416b0c:	ldr	x19, [sp, #16]
  416b10:	ldp	x29, x30, [sp], #32
  416b14:	b	41e0a4 <ferror@plt+0x1b734>
  416b18:	stp	x29, x30, [sp, #-32]!
  416b1c:	mov	w1, #0x1                   	// #1
  416b20:	mov	x29, sp
  416b24:	stp	x19, x20, [sp, #16]
  416b28:	mov	x19, x0
  416b2c:	bl	415d54 <ferror@plt+0x133e4>
  416b30:	cbz	x0, 416ba8 <ferror@plt+0x14238>
  416b34:	ldr	x1, [x19, #1024]
  416b38:	mov	x20, x0
  416b3c:	cbz	x1, 416b48 <ferror@plt+0x141d8>
  416b40:	mov	x0, x19
  416b44:	blr	x1
  416b48:	ldr	x3, [x19, #944]
  416b4c:	cbz	x3, 416b60 <ferror@plt+0x141f0>
  416b50:	ldr	w1, [x19, #48]
  416b54:	mov	x2, x20
  416b58:	mov	x0, x19
  416b5c:	blr	x3
  416b60:	ldrb	w0, [x20, #18]
  416b64:	tbz	w0, #1, 416ba8 <ferror@plt+0x14238>
  416b68:	ldrh	w1, [x20, #18]
  416b6c:	tbz	w1, #5, 416bbc <ferror@plt+0x1424c>
  416b70:	ldr	x3, [x20]
  416b74:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  416b78:	mov	x0, x19
  416b7c:	add	x2, x2, #0x4d6
  416b80:	mov	w1, #0x0                   	// #0
  416b84:	bl	419440 <ferror@plt+0x16ad0>
  416b88:	ldrb	w0, [x19, #1151]
  416b8c:	cbz	w0, 416ba0 <ferror@plt+0x14230>
  416b90:	mov	x1, x20
  416b94:	mov	x0, x19
  416b98:	mov	x2, #0x0                   	// #0
  416b9c:	bl	4257b8 <ferror@plt+0x22e48>
  416ba0:	mov	x0, x20
  416ba4:	bl	426384 <ferror@plt+0x23a14>
  416ba8:	mov	x0, x19
  416bac:	mov	w1, #0x0                   	// #0
  416bb0:	ldp	x19, x20, [sp, #16]
  416bb4:	ldp	x29, x30, [sp], #32
  416bb8:	b	4167a0 <ferror@plt+0x13e30>
  416bbc:	and	w0, w0, #0x3
  416bc0:	cmp	w0, #0x3
  416bc4:	b.ne	416b88 <ferror@plt+0x14218>  // b.any
  416bc8:	ldrb	w0, [x19, #1143]
  416bcc:	cbz	w0, 416b88 <ferror@plt+0x14218>
  416bd0:	ldr	w2, [x19, #48]
  416bd4:	mov	x0, x19
  416bd8:	ldr	x5, [x20]
  416bdc:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x17198>
  416be0:	mov	w3, #0x0                   	// #0
  416be4:	add	x4, x4, #0x4d6
  416be8:	mov	w1, #0xb                   	// #11
  416bec:	bl	41966c <ferror@plt+0x16cfc>
  416bf0:	b	416b88 <ferror@plt+0x14218>
  416bf4:	stp	x29, x30, [sp, #-48]!
  416bf8:	mov	x29, sp
  416bfc:	stp	x19, x20, [sp, #16]
  416c00:	mov	x20, x0
  416c04:	str	x21, [sp, #32]
  416c08:	ldrb	w1, [x0, #18]
  416c0c:	cbz	w1, 416c38 <ferror@plt+0x142c8>
  416c10:	mov	x19, #0x0                   	// #0
  416c14:	mov	w21, #0x1                   	// #1
  416c18:	mov	x3, x19
  416c1c:	mov	w1, w21
  416c20:	mov	x0, x20
  416c24:	mov	w2, #0x6                   	// #6
  416c28:	ldp	x19, x20, [sp, #16]
  416c2c:	ldr	x21, [sp, #32]
  416c30:	ldp	x29, x30, [sp], #48
  416c34:	b	4162d8 <ferror@plt+0x13968>
  416c38:	mov	w1, #0x0                   	// #0
  416c3c:	bl	415d54 <ferror@plt+0x133e4>
  416c40:	mov	x19, x0
  416c44:	cbz	x0, 416c10 <ferror@plt+0x142a0>
  416c48:	ldrh	w21, [x0, #18]
  416c4c:	ldrb	w0, [x0, #18]
  416c50:	ubfx	x2, x21, #2, #8
  416c54:	eor	x21, x21, #0x100
  416c58:	tst	x0, #0x2
  416c5c:	and	w0, w0, #0x3
  416c60:	ubfx	w21, w21, #8, #1
  416c64:	csel	w21, w21, wzr, ne  // ne = any
  416c68:	cmp	w0, #0x2
  416c6c:	b.ne	416c80 <ferror@plt+0x14310>  // b.any
  416c70:	ldr	x1, [x19, #24]
  416c74:	ldrb	w0, [x1, #19]
  416c78:	orr	w0, w0, #0x20
  416c7c:	strb	w0, [x1, #19]
  416c80:	tbnz	w2, #5, 416c90 <ferror@plt+0x14320>
  416c84:	mov	x1, x19
  416c88:	mov	x0, x20
  416c8c:	bl	426f84 <ferror@plt+0x24614>
  416c90:	ldr	x3, [x20, #1032]
  416c94:	cbz	x3, 416ca8 <ferror@plt+0x14338>
  416c98:	ldr	w1, [x20, #48]
  416c9c:	mov	x2, x19
  416ca0:	mov	x0, x20
  416ca4:	blr	x3
  416ca8:	mov	x0, x20
  416cac:	mov	w1, #0x0                   	// #0
  416cb0:	bl	4167a0 <ferror@plt+0x13e30>
  416cb4:	b	416c18 <ferror@plt+0x142a8>
  416cb8:	stp	x29, x30, [sp, #-32]!
  416cbc:	mov	x29, sp
  416cc0:	str	x19, [sp, #16]
  416cc4:	mov	x19, x0
  416cc8:	ldr	x0, [x19, #136]
  416ccc:	ldr	x0, [x0, #8]
  416cd0:	cbz	x0, 416ce0 <ferror@plt+0x14370>
  416cd4:	mov	x0, x19
  416cd8:	bl	425f94 <ferror@plt+0x23624>
  416cdc:	b	416cc8 <ferror@plt+0x14358>
  416ce0:	ldr	x0, [x19, #448]
  416ce4:	ldurb	w0, [x0, #-20]
  416ce8:	cmp	w0, #0x16
  416cec:	b.eq	416d00 <ferror@plt+0x14390>  // b.none
  416cf0:	mov	x0, x19
  416cf4:	bl	4228f4 <ferror@plt+0x1ff84>
  416cf8:	ldrb	w0, [x0, #4]
  416cfc:	b	416ce8 <ferror@plt+0x14378>
  416d00:	ldr	x19, [sp, #16]
  416d04:	ldp	x29, x30, [sp], #32
  416d08:	ret
  416d0c:	stp	x29, x30, [sp, #-64]!
  416d10:	mov	x29, sp
  416d14:	stp	x19, x20, [sp, #16]
  416d18:	add	x3, sp, #0x34
  416d1c:	mov	x19, x0
  416d20:	str	x21, [sp, #32]
  416d24:	mov	w21, w1
  416d28:	add	x2, sp, #0x38
  416d2c:	str	xzr, [sp, #56]
  416d30:	ldrb	w1, [x0, #1123]
  416d34:	cmp	w1, #0x0
  416d38:	cset	w1, eq  // eq = none
  416d3c:	strb	w1, [x0, #21]
  416d40:	add	x1, sp, #0x30
  416d44:	bl	416814 <ferror@plt+0x13ea4>
  416d48:	mov	x20, x0
  416d4c:	cbz	x0, 416d7c <ferror@plt+0x1440c>
  416d50:	ldrb	w0, [x0]
  416d54:	cbnz	w0, 416da0 <ferror@plt+0x14430>
  416d58:	ldr	x0, [x19, #144]
  416d5c:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x17198>
  416d60:	ldr	w2, [sp, #52]
  416d64:	add	x4, x4, #0x4e6
  416d68:	mov	w3, #0x0                   	// #0
  416d6c:	mov	w1, #0x3                   	// #3
  416d70:	ldr	x5, [x0, #8]
  416d74:	mov	x0, x19
  416d78:	bl	4195fc <ferror@plt+0x16c8c>
  416d7c:	mov	x0, x20
  416d80:	bl	402730 <free@plt>
  416d84:	ldr	x0, [sp, #56]
  416d88:	cbz	x0, 416d90 <ferror@plt+0x14420>
  416d8c:	bl	402730 <free@plt>
  416d90:	ldp	x19, x20, [sp, #16]
  416d94:	ldr	x21, [sp, #32]
  416d98:	ldp	x29, x30, [sp], #64
  416d9c:	ret
  416da0:	ldr	x0, [x19, #40]
  416da4:	ldr	w0, [x0, #48]
  416da8:	cmp	w0, #0xc7
  416dac:	b.ls	416dc8 <ferror@plt+0x14458>  // b.plast
  416db0:	mov	x0, x19
  416db4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  416db8:	mov	w1, #0x3                   	// #3
  416dbc:	add	x2, x2, #0x4fc
  416dc0:	bl	419440 <ferror@plt+0x16ad0>
  416dc4:	b	416d7c <ferror@plt+0x1440c>
  416dc8:	mov	x0, x19
  416dcc:	bl	416cb8 <ferror@plt+0x14348>
  416dd0:	ldr	x6, [x19, #928]
  416dd4:	cbz	x6, 416df8 <ferror@plt+0x14488>
  416dd8:	ldr	x0, [x19, #144]
  416ddc:	mov	x3, x20
  416de0:	ldr	w1, [x19, #48]
  416de4:	ldr	w4, [sp, #48]
  416de8:	ldr	x2, [x0, #8]
  416dec:	mov	x0, x19
  416df0:	ldr	x5, [sp, #56]
  416df4:	blr	x6
  416df8:	ldp	w2, w4, [sp, #48]
  416dfc:	mov	w3, w21
  416e00:	mov	x1, x20
  416e04:	mov	x0, x19
  416e08:	bl	41e0b4 <ferror@plt+0x1b744>
  416e0c:	b	416d7c <ferror@plt+0x1440c>
  416e10:	mov	w1, #0x2                   	// #2
  416e14:	b	416d0c <ferror@plt+0x1439c>
  416e18:	stp	x29, x30, [sp, #-32]!
  416e1c:	mov	x29, sp
  416e20:	ldr	x1, [x0, #40]
  416e24:	ldr	w1, [x1, #48]
  416e28:	str	x19, [sp, #16]
  416e2c:	mov	x19, x0
  416e30:	cmp	w1, #0x1
  416e34:	b.ne	416e5c <ferror@plt+0x144ec>  // b.any
  416e38:	mov	w1, #0x0                   	// #0
  416e3c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  416e40:	add	x2, x2, #0x517
  416e44:	bl	419440 <ferror@plt+0x16ad0>
  416e48:	mov	w1, #0x0                   	// #0
  416e4c:	mov	x0, x19
  416e50:	ldr	x19, [sp, #16]
  416e54:	ldp	x29, x30, [sp], #32
  416e58:	b	416d0c <ferror@plt+0x1439c>
  416e5c:	mov	w1, #0x1                   	// #1
  416e60:	b	416e4c <ferror@plt+0x144dc>
  416e64:	mov	w1, #0x0                   	// #0
  416e68:	b	416d0c <ferror@plt+0x1439c>
  416e6c:	stp	x29, x30, [sp, #-32]!
  416e70:	mov	x29, sp
  416e74:	str	x19, [sp, #16]
  416e78:	mov	x19, x0
  416e7c:	ldrb	w3, [x0, #1160]
  416e80:	ldrb	w2, [x0, #32]
  416e84:	cbz	w3, 416edc <ferror@plt+0x1456c>
  416e88:	cbnz	w2, 416e98 <ferror@plt+0x14528>
  416e8c:	ldrb	w0, [x0, #24]
  416e90:	sub	w0, w0, #0x1
  416e94:	strb	w0, [x19, #24]
  416e98:	ldr	x1, [x19, #144]
  416e9c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  416ea0:	add	x0, x0, #0xb60
  416ea4:	cmp	x1, x0
  416ea8:	b.eq	416eb4 <ferror@plt+0x14544>  // b.none
  416eac:	mov	x0, x19
  416eb0:	bl	42a358 <ferror@plt+0x279e8>
  416eb4:	ldrb	w0, [x19, #1123]
  416eb8:	strb	wzr, [x19, #16]
  416ebc:	cmp	w0, #0x0
  416ec0:	sturh	wzr, [x19, #19]
  416ec4:	cset	w0, eq  // eq = none
  416ec8:	strb	w0, [x19, #21]
  416ecc:	str	xzr, [x19, #144]
  416ed0:	ldr	x19, [sp, #16]
  416ed4:	ldp	x29, x30, [sp], #32
  416ed8:	ret
  416edc:	cbnz	w2, 416eb4 <ferror@plt+0x14544>
  416ee0:	cbz	w1, 416eb4 <ferror@plt+0x14544>
  416ee4:	bl	416cb8 <ferror@plt+0x14348>
  416ee8:	ldr	w0, [x19, #500]
  416eec:	cbnz	w0, 416eb4 <ferror@plt+0x14544>
  416ef0:	add	x0, x19, #0x1c8
  416ef4:	str	x0, [x19, #488]
  416ef8:	ldr	x0, [x19, #472]
  416efc:	str	x0, [x19, #448]
  416f00:	b	416eb4 <ferror@plt+0x14544>
  416f04:	stp	x29, x30, [sp, #-64]!
  416f08:	mov	x29, sp
  416f0c:	stp	x19, x20, [sp, #16]
  416f10:	mov	x20, x0
  416f14:	stp	x21, x22, [sp, #32]
  416f18:	str	x23, [sp, #48]
  416f1c:	bl	41666c <ferror@plt+0x13cfc>
  416f20:	cbnz	x0, 416f70 <ferror@plt+0x14600>
  416f24:	ldr	x0, [x20, #448]
  416f28:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x17198>
  416f2c:	add	x4, x4, #0x53c
  416f30:	mov	w3, #0x0                   	// #0
  416f34:	mov	w1, #0x3                   	// #3
  416f38:	ldur	w2, [x0, #-24]
  416f3c:	mov	x0, x20
  416f40:	bl	4195fc <ferror@plt+0x16c8c>
  416f44:	mov	w1, #0x0                   	// #0
  416f48:	mov	x0, x20
  416f4c:	bl	4167a0 <ferror@plt+0x13e30>
  416f50:	mov	x0, x20
  416f54:	bl	416cb8 <ferror@plt+0x14348>
  416f58:	mov	sp, x29
  416f5c:	ldp	x19, x20, [sp, #16]
  416f60:	ldp	x21, x22, [sp, #32]
  416f64:	ldr	x23, [sp, #48]
  416f68:	ldp	x29, x30, [sp], #64
  416f6c:	ret
  416f70:	ldr	w2, [x0, #8]
  416f74:	ldr	x0, [x0, #16]
  416f78:	add	w1, w2, #0x2
  416f7c:	add	x1, x1, #0xf
  416f80:	mov	w2, w2
  416f84:	and	x1, x1, #0x1fffffff0
  416f88:	sub	x2, x2, #0x1
  416f8c:	sub	sp, sp, x1
  416f90:	ldrb	w1, [x0]
  416f94:	mov	x22, sp
  416f98:	add	x2, x0, x2
  416f9c:	cmp	w1, #0x4c
  416fa0:	cset	x1, eq  // eq = none
  416fa4:	add	x1, x1, #0x1
  416fa8:	add	x1, x0, x1
  416fac:	mov	x0, x22
  416fb0:	cmp	x1, x2
  416fb4:	b.cs	416fe8 <ferror@plt+0x14678>  // b.hs, b.nlast
  416fb8:	ldrb	w3, [x1]
  416fbc:	cmp	w3, #0x5c
  416fc0:	b.ne	416fdc <ferror@plt+0x1466c>  // b.any
  416fc4:	ldrb	w3, [x1, #1]
  416fc8:	cmp	w3, #0x5c
  416fcc:	b.eq	416fd8 <ferror@plt+0x14668>  // b.none
  416fd0:	cmp	w3, #0x22
  416fd4:	b.ne	416fdc <ferror@plt+0x1466c>  // b.any
  416fd8:	add	x1, x1, #0x1
  416fdc:	ldrb	w3, [x1], #1
  416fe0:	strb	w3, [x0], #1
  416fe4:	b	416fb0 <ferror@plt+0x14640>
  416fe8:	strb	wzr, [x0]
  416fec:	mov	w1, #0x0                   	// #0
  416ff0:	mov	x0, x20
  416ff4:	bl	4167a0 <ferror@plt+0x13e30>
  416ff8:	mov	x0, x20
  416ffc:	bl	416cb8 <ferror@plt+0x14348>
  417000:	mov	x0, #0x20                  	// #32
  417004:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  417008:	mov	x19, x0
  41700c:	stp	xzr, xzr, [x0]
  417010:	stp	xzr, xzr, [x0, #16]
  417014:	mov	x0, x22
  417018:	bl	402330 <strlen@plt>
  41701c:	add	x0, x0, #0x1
  417020:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  417024:	mov	x21, x0
  417028:	mov	x1, x22
  41702c:	str	x0, [x19, #8]
  417030:	bl	4027b0 <strcpy@plt>
  417034:	ldr	x0, [x20, #1400]
  417038:	mov	x1, x21
  41703c:	str	x0, [x19]
  417040:	mov	x0, x20
  417044:	bl	41f83c <ferror@plt+0x1cecc>
  417048:	mov	x22, x0
  41704c:	ldrb	w0, [x0, #18]
  417050:	tst	x0, #0x3
  417054:	b.ne	41706c <ferror@plt+0x146fc>  // b.any
  417058:	ldrb	w0, [x19, #28]
  41705c:	orr	w0, w0, #0x4
  417060:	strb	w0, [x19, #28]
  417064:	str	x19, [x20, #1400]
  417068:	b	416f58 <ferror@plt+0x145e8>
  41706c:	mov	x1, x22
  417070:	mov	x0, x20
  417074:	bl	428840 <ferror@plt+0x25ed0>
  417078:	mov	x23, x0
  41707c:	bl	402330 <strlen@plt>
  417080:	mov	x21, x0
  417084:	add	x0, x0, #0x2
  417088:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41708c:	add	x3, x0, x21
  417090:	mov	w1, #0xa                   	// #10
  417094:	strb	w1, [x0, x21]
  417098:	str	x0, [x19, #16]
  41709c:	strb	wzr, [x3, #1]
  4170a0:	ldr	x1, [x22, #24]
  4170a4:	ldrb	w3, [x1, #19]
  4170a8:	ldr	w2, [x1, #8]
  4170ac:	str	w2, [x19, #24]
  4170b0:	ubfx	x2, x3, #5, #1
  4170b4:	ldrb	w1, [x19, #28]
  4170b8:	ubfx	x3, x3, #4, #1
  4170bc:	ubfiz	w2, w2, #1, #7
  4170c0:	orr	w2, w2, w3
  4170c4:	bfxil	w1, w2, #0, #2
  4170c8:	mov	x2, x21
  4170cc:	strb	w1, [x19, #28]
  4170d0:	mov	x1, x23
  4170d4:	bl	4022e0 <memcpy@plt>
  4170d8:	b	417064 <ferror@plt+0x146f4>
  4170dc:	stp	x29, x30, [sp, #-32]!
  4170e0:	mov	x29, sp
  4170e4:	ldr	x1, [x0]
  4170e8:	stp	x19, x20, [sp, #16]
  4170ec:	ldr	x19, [x1, #96]
  4170f0:	cbnz	x19, 41710c <ferror@plt+0x1479c>
  4170f4:	ldp	x19, x20, [sp, #16]
  4170f8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4170fc:	ldp	x29, x30, [sp], #32
  417100:	add	x2, x2, #0x561
  417104:	mov	w1, #0x3                   	// #3
  417108:	b	419440 <ferror@plt+0x16ad0>
  41710c:	ldr	w1, [x19, #28]
  417110:	mov	x20, x0
  417114:	cmp	w1, #0x5
  417118:	b.ne	417148 <ferror@plt+0x147d8>  // b.any
  41711c:	mov	w1, #0x3                   	// #3
  417120:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417124:	add	x2, x2, #0x573
  417128:	bl	419440 <ferror@plt+0x16ad0>
  41712c:	ldr	w2, [x19, #8]
  417130:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x17198>
  417134:	mov	x0, x20
  417138:	add	x4, x4, #0x585
  41713c:	mov	w3, #0x0                   	// #0
  417140:	mov	w1, #0x3                   	// #3
  417144:	bl	4195fc <ferror@plt+0x16c8c>
  417148:	mov	w0, #0x9                   	// #9
  41714c:	str	w0, [x19, #28]
  417150:	ldrb	w0, [x19, #24]
  417154:	cbz	w0, 417170 <ferror@plt+0x14800>
  417158:	mov	w0, #0x1                   	// #1
  41715c:	strb	w0, [x20, #18]
  417160:	str	xzr, [x19, #16]
  417164:	ldp	x19, x20, [sp, #16]
  417168:	ldp	x29, x30, [sp], #32
  41716c:	ret
  417170:	mov	w1, #0x0                   	// #0
  417174:	mov	x0, x20
  417178:	bl	41b46c <ferror@plt+0x18afc>
  41717c:	eor	w1, w0, #0x1
  417180:	strb	w1, [x20, #18]
  417184:	strb	w0, [x19, #24]
  417188:	b	417160 <ferror@plt+0x147f0>
  41718c:	stp	x29, x30, [sp, #-48]!
  417190:	mov	x29, sp
  417194:	str	x21, [sp, #32]
  417198:	ldr	x21, [x0]
  41719c:	stp	x19, x20, [sp, #16]
  4171a0:	ldr	x20, [x21, #96]
  4171a4:	cbnz	x20, 4171c4 <ferror@plt+0x14854>
  4171a8:	ldp	x19, x20, [sp, #16]
  4171ac:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4171b0:	ldr	x21, [sp, #32]
  4171b4:	add	x2, x2, #0x5a0
  4171b8:	ldp	x29, x30, [sp], #48
  4171bc:	mov	w1, #0x3                   	// #3
  4171c0:	b	419440 <ferror@plt+0x16ad0>
  4171c4:	ldrb	w1, [x20, #25]
  4171c8:	mov	x19, x0
  4171cc:	cbnz	w1, 4171e4 <ferror@plt+0x14874>
  4171d0:	ldrb	w1, [x0, #1140]
  4171d4:	cbz	w1, 4171e4 <ferror@plt+0x14874>
  4171d8:	mov	w2, #0x8                   	// #8
  4171dc:	mov	w1, #0x0                   	// #0
  4171e0:	bl	41672c <ferror@plt+0x13dbc>
  4171e4:	ldr	x0, [x20]
  4171e8:	cbnz	x0, 417200 <ferror@plt+0x14890>
  4171ec:	ldr	x1, [x20, #16]
  4171f0:	cbz	x1, 417200 <ferror@plt+0x14890>
  4171f4:	mov	w2, #0x1                   	// #1
  4171f8:	str	x1, [x19, #424]
  4171fc:	strb	w2, [x19, #440]
  417200:	str	x0, [x21, #96]
  417204:	ldrb	w0, [x20, #25]
  417208:	strb	w0, [x19, #18]
  41720c:	add	x0, x19, #0x328
  417210:	ldr	x1, [x0, #8]
  417214:	cmp	x1, x20
  417218:	b.cs	41723c <ferror@plt+0x148cc>  // b.hs, b.nlast
  41721c:	ldr	x1, [x0, #32]
  417220:	cmp	x1, x20
  417224:	b.ls	41723c <ferror@plt+0x148cc>  // b.plast
  417228:	ldr	x21, [sp, #32]
  41722c:	stp	x20, x20, [x0, #16]
  417230:	ldp	x19, x20, [sp, #16]
  417234:	ldp	x29, x30, [sp], #48
  417238:	ret
  41723c:	mov	x1, x20
  417240:	ldp	x19, x20, [sp, #16]
  417244:	ldr	x21, [sp, #32]
  417248:	ldp	x29, x30, [sp], #48
  41724c:	b	439df4 <_obstack_free@@Base>
  417250:	ldr	x1, [x0, #40]
  417254:	ldr	w1, [x1, #48]
  417258:	cmp	w1, #0x1
  41725c:	b.ne	417270 <ferror@plt+0x14900>  // b.any
  417260:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417264:	mov	w1, #0x0                   	// #0
  417268:	add	x2, x2, #0x5b3
  41726c:	b	419440 <ferror@plt+0x16ad0>
  417270:	stp	x29, x30, [sp, #-32]!
  417274:	mov	w1, #0x0                   	// #0
  417278:	mov	x29, sp
  41727c:	str	x19, [sp, #16]
  417280:	mov	x19, x0
  417284:	bl	4167a0 <ferror@plt+0x13e30>
  417288:	mov	x0, x19
  41728c:	bl	416cb8 <ferror@plt+0x14348>
  417290:	mov	x0, x19
  417294:	mov	w2, #0x0                   	// #0
  417298:	ldr	x19, [sp, #16]
  41729c:	mov	w1, #0x1                   	// #1
  4172a0:	ldp	x29, x30, [sp], #32
  4172a4:	b	41e490 <ferror@plt+0x1bb20>
  4172a8:	stp	x29, x30, [sp, #-96]!
  4172ac:	mov	x29, sp
  4172b0:	stp	x19, x20, [sp, #16]
  4172b4:	mov	w20, w1
  4172b8:	mov	x19, x0
  4172bc:	stp	x21, x22, [sp, #32]
  4172c0:	stp	x23, x24, [sp, #48]
  4172c4:	mov	x24, x2
  4172c8:	stp	x25, x26, [sp, #64]
  4172cc:	stp	x27, x28, [sp, #80]
  4172d0:	ldrb	w1, [x0, #24]
  4172d4:	add	w1, w1, #0x1
  4172d8:	strb	w1, [x0, #24]
  4172dc:	str	xzr, [x2]
  4172e0:	bl	4287a8 <ferror@plt+0x25e38>
  4172e4:	mov	x21, x0
  4172e8:	ldrb	w0, [x0, #4]
  4172ec:	cmp	w0, #0x16
  4172f0:	b.ne	41730c <ferror@plt+0x1499c>  // b.any
  4172f4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4172f8:	add	x2, x2, #0x5e6
  4172fc:	mov	x0, x19
  417300:	mov	w1, #0x3                   	// #3
  417304:	bl	419440 <ferror@plt+0x16ad0>
  417308:	b	417334 <ferror@plt+0x149c4>
  41730c:	ldr	w22, [x21]
  417310:	cmp	w0, #0x35
  417314:	b.eq	417364 <ferror@plt+0x149f4>  // b.none
  417318:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x17198>
  41731c:	add	x4, x4, #0x602
  417320:	mov	w2, w22
  417324:	mov	x0, x19
  417328:	mov	w3, #0x0                   	// #0
  41732c:	mov	w1, #0x3                   	// #3
  417330:	bl	4195fc <ferror@plt+0x16c8c>
  417334:	mov	x0, #0x0                   	// #0
  417338:	ldrb	w1, [x19, #24]
  41733c:	sub	w1, w1, #0x1
  417340:	strb	w1, [x19, #24]
  417344:	mov	sp, x29
  417348:	ldp	x19, x20, [sp, #16]
  41734c:	ldp	x21, x22, [sp, #32]
  417350:	ldp	x23, x24, [sp, #48]
  417354:	ldp	x25, x26, [sp, #64]
  417358:	ldp	x27, x28, [sp, #80]
  41735c:	ldp	x29, x30, [sp], #96
  417360:	ret
  417364:	mov	x0, x19
  417368:	bl	4287a8 <ferror@plt+0x25e38>
  41736c:	ldrb	w0, [x0, #4]
  417370:	cmp	w0, #0x14
  417374:	b.eq	4173f8 <ferror@plt+0x14a88>  // b.none
  417378:	cmp	w20, #0x4
  41737c:	b.ne	4173dc <ferror@plt+0x14a6c>  // b.any
  417380:	mov	x0, x19
  417384:	mov	w1, #0x1                   	// #1
  417388:	bl	426104 <ferror@plt+0x23794>
  41738c:	ldr	x0, [x21, #8]
  417390:	mov	w1, #0x23                  	// #35
  417394:	ldr	w2, [x0, #8]
  417398:	add	w0, w2, #0x1
  41739c:	add	w22, w2, #0x1
  4173a0:	add	x0, x0, #0xf
  4173a4:	mov	w2, w2
  4173a8:	and	x0, x0, #0x1fffffff0
  4173ac:	sub	sp, sp, x0
  4173b0:	mov	x20, sp
  4173b4:	mov	x0, x20
  4173b8:	strb	w1, [x0], #1
  4173bc:	ldr	x1, [x21, #8]
  4173c0:	ldr	x1, [x1]
  4173c4:	bl	4022e0 <memcpy@plt>
  4173c8:	mov	w2, w22
  4173cc:	mov	x1, x20
  4173d0:	mov	x0, x19
  4173d4:	bl	41ea70 <ferror@plt+0x1c100>
  4173d8:	b	417338 <ferror@plt+0x149c8>
  4173dc:	cmp	w20, #0x11
  4173e0:	b.ne	4173ec <ferror@plt+0x14a7c>  // b.any
  4173e4:	cmp	w0, #0x16
  4173e8:	b.eq	41738c <ferror@plt+0x14a1c>  // b.none
  4173ec:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x17198>
  4173f0:	add	x4, x4, #0x622
  4173f4:	b	417320 <ferror@plt+0x149b0>
  4173f8:	ldr	x1, [x19, #56]
  4173fc:	ldr	x0, [x1, #24]
  417400:	ldr	x1, [x1, #16]
  417404:	sub	x0, x0, x1
  417408:	cmp	x0, #0x2f
  41740c:	b.hi	417420 <ferror@plt+0x14ab0>  // b.pmore
  417410:	add	x1, x19, #0x38
  417414:	mov	x0, x19
  417418:	mov	x2, #0x30                  	// #48
  41741c:	bl	42068c <ferror@plt+0x1dd1c>
  417420:	ldr	x0, [x19, #56]
  417424:	mov	w1, #0x1                   	// #1
  417428:	add	x28, x19, #0x38
  41742c:	mov	w22, #0x0                   	// #0
  417430:	mov	w26, #0x18                  	// #24
  417434:	mov	x27, #0x48                  	// #72
  417438:	ldr	x2, [x0, #16]
  41743c:	mov	x0, x19
  417440:	mov	x25, #0x18                  	// #24
  417444:	bl	4264d0 <ferror@plt+0x23b60>
  417448:	mov	x20, x0
  41744c:	str	xzr, [x0]
  417450:	mov	x0, x19
  417454:	bl	4287a8 <ferror@plt+0x25e38>
  417458:	mov	x23, x0
  41745c:	ldrb	w0, [x0, #4]
  417460:	cmp	w0, #0x15
  417464:	b.eq	4174d0 <ferror@plt+0x14b60>  // b.none
  417468:	cmp	w0, #0x16
  41746c:	b.ne	41747c <ferror@plt+0x14b0c>  // b.any
  417470:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417474:	add	x2, x2, #0x63e
  417478:	b	4172fc <ferror@plt+0x1498c>
  41747c:	ldr	x1, [x19, #56]
  417480:	ldr	x0, [x1, #24]
  417484:	ldr	x1, [x1, #16]
  417488:	sub	x0, x0, x1
  41748c:	umaddl	x1, w22, w26, x27
  417490:	cmp	x0, x1
  417494:	b.cs	4174a8 <ferror@plt+0x14b38>  // b.hs, b.nlast
  417498:	mov	x1, x28
  41749c:	mov	x0, x19
  4174a0:	mov	x2, #0x18                  	// #24
  4174a4:	bl	42068c <ferror@plt+0x1dd1c>
  4174a8:	ldr	x0, [x19, #56]
  4174ac:	mov	w2, w22
  4174b0:	add	w22, w22, #0x1
  4174b4:	ldr	x20, [x0, #16]
  4174b8:	ldp	x0, x1, [x23]
  4174bc:	madd	x2, x2, x25, x20
  4174c0:	stp	x0, x1, [x2, #24]
  4174c4:	ldr	x0, [x23, #16]
  4174c8:	str	x0, [x2, #40]
  4174cc:	b	417450 <ferror@plt+0x14ae0>
  4174d0:	cbnz	w22, 4174e0 <ferror@plt+0x14b70>
  4174d4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4174d8:	add	x2, x2, #0x65d
  4174dc:	b	4172fc <ferror@plt+0x1498c>
  4174e0:	ldrh	w0, [x20, #30]
  4174e4:	str	w22, [x20, #12]
  4174e8:	and	w0, w0, #0xfffffffe
  4174ec:	strh	w0, [x20, #30]
  4174f0:	str	x20, [x24]
  4174f4:	b	41738c <ferror@plt+0x14a1c>
  4174f8:	stp	x29, x30, [sp, #-48]!
  4174fc:	mov	w1, #0x11                  	// #17
  417500:	mov	x29, sp
  417504:	add	x2, sp, #0x28
  417508:	str	x19, [sp, #16]
  41750c:	mov	x19, x0
  417510:	bl	4172a8 <ferror@plt+0x14938>
  417514:	cbz	x0, 417540 <ferror@plt+0x14bd0>
  417518:	ldr	x1, [sp, #40]
  41751c:	cbz	x1, 41754c <ferror@plt+0x14bdc>
  417520:	bl	415fac <ferror@plt+0x1363c>
  417524:	ldr	x1, [x0]
  417528:	cbz	x1, 417534 <ferror@plt+0x14bc4>
  41752c:	ldr	x1, [x1]
  417530:	str	x1, [x0]
  417534:	mov	x0, x19
  417538:	mov	w1, #0x0                   	// #0
  41753c:	bl	4167a0 <ferror@plt+0x13e30>
  417540:	ldr	x19, [sp, #16]
  417544:	ldp	x29, x30, [sp], #48
  417548:	ret
  41754c:	bl	426384 <ferror@plt+0x23a14>
  417550:	b	417540 <ferror@plt+0x14bd0>
  417554:	stp	x29, x30, [sp, #-48]!
  417558:	mov	w1, #0x10                  	// #16
  41755c:	mov	x29, sp
  417560:	add	x2, sp, #0x28
  417564:	stp	x19, x20, [sp, #16]
  417568:	mov	x20, x0
  41756c:	bl	4172a8 <ferror@plt+0x14938>
  417570:	cbz	x0, 4175a4 <ferror@plt+0x14c34>
  417574:	ldr	x1, [sp, #40]
  417578:	mov	x19, x0
  41757c:	bl	415fac <ferror@plt+0x1363c>
  417580:	ldr	x0, [x0]
  417584:	cbz	x0, 4175b0 <ferror@plt+0x14c40>
  417588:	ldr	x3, [x19]
  41758c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417590:	mov	x0, x20
  417594:	add	x2, x2, #0x679
  417598:	add	x3, x3, #0x1
  41759c:	mov	w1, #0x0                   	// #0
  4175a0:	bl	419440 <ferror@plt+0x16ad0>
  4175a4:	ldp	x19, x20, [sp, #16]
  4175a8:	ldp	x29, x30, [sp], #48
  4175ac:	ret
  4175b0:	ldr	x0, [sp, #40]
  4175b4:	mov	x1, #0x18                  	// #24
  4175b8:	ldr	w0, [x0, #12]
  4175bc:	madd	x1, x0, x1, x1
  4175c0:	mov	x0, x20
  4175c4:	bl	422b90 <ferror@plt+0x20220>
  4175c8:	str	x0, [sp, #40]
  4175cc:	ldr	x1, [x19, #24]
  4175d0:	str	x1, [x0]
  4175d4:	str	x0, [x19, #24]
  4175d8:	mov	w1, #0x0                   	// #0
  4175dc:	mov	x0, x20
  4175e0:	bl	4167a0 <ferror@plt+0x13e30>
  4175e4:	b	4175a4 <ferror@plt+0x14c34>
  4175e8:	stp	x29, x30, [sp, #-48]!
  4175ec:	mov	x29, sp
  4175f0:	stp	x19, x20, [sp, #16]
  4175f4:	mov	x19, x0
  4175f8:	str	x21, [sp, #32]
  4175fc:	ldrb	w1, [x0, #18]
  417600:	cbz	w1, 417628 <ferror@plt+0x14cb8>
  417604:	mov	w21, #0x1                   	// #1
  417608:	mov	w1, w21
  41760c:	mov	x0, x19
  417610:	ldp	x19, x20, [sp, #16]
  417614:	mov	x3, #0x0                   	// #0
  417618:	ldr	x21, [sp, #32]
  41761c:	mov	w2, #0x3                   	// #3
  417620:	ldp	x29, x30, [sp], #48
  417624:	b	4162d8 <ferror@plt+0x13968>
  417628:	mov	w1, #0x0                   	// #0
  41762c:	bl	415d54 <ferror@plt+0x133e4>
  417630:	mov	x20, x0
  417634:	cbz	x0, 417604 <ferror@plt+0x14c94>
  417638:	ldrh	w21, [x0, #18]
  41763c:	ldrb	w0, [x0, #18]
  417640:	ubfx	x2, x21, #2, #8
  417644:	ubfx	x21, x21, #8, #1
  417648:	tst	x0, #0x2
  41764c:	and	w0, w0, #0x3
  417650:	csinc	w21, w21, wzr, ne  // ne = any
  417654:	cmp	w0, #0x2
  417658:	b.ne	41766c <ferror@plt+0x14cfc>  // b.any
  41765c:	ldr	x1, [x20, #24]
  417660:	ldrb	w0, [x1, #19]
  417664:	orr	w0, w0, #0x20
  417668:	strb	w0, [x1, #19]
  41766c:	tbnz	w2, #5, 41767c <ferror@plt+0x14d0c>
  417670:	mov	x1, x20
  417674:	mov	x0, x19
  417678:	bl	426f84 <ferror@plt+0x24614>
  41767c:	ldr	x3, [x19, #1032]
  417680:	cbz	x3, 417694 <ferror@plt+0x14d24>
  417684:	ldr	w1, [x19, #48]
  417688:	mov	x2, x20
  41768c:	mov	x0, x19
  417690:	blr	x3
  417694:	mov	x0, x19
  417698:	mov	w1, #0x0                   	// #0
  41769c:	bl	4167a0 <ferror@plt+0x13e30>
  4176a0:	b	417608 <ferror@plt+0x14c98>
  4176a4:	stp	x29, x30, [sp, #-32]!
  4176a8:	mov	x29, sp
  4176ac:	ldr	x1, [x0]
  4176b0:	stp	x19, x20, [sp, #16]
  4176b4:	ldr	x19, [x1, #96]
  4176b8:	cbnz	x19, 4176d4 <ferror@plt+0x14d64>
  4176bc:	ldp	x19, x20, [sp, #16]
  4176c0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4176c4:	ldp	x29, x30, [sp], #32
  4176c8:	add	x2, x2, #0x68a
  4176cc:	mov	w1, #0x3                   	// #3
  4176d0:	b	419440 <ferror@plt+0x16ad0>
  4176d4:	ldr	w1, [x19, #28]
  4176d8:	mov	x20, x0
  4176dc:	cmp	w1, #0x5
  4176e0:	b.ne	417710 <ferror@plt+0x14da0>  // b.any
  4176e4:	mov	w1, #0x3                   	// #3
  4176e8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4176ec:	add	x2, x2, #0x69c
  4176f0:	bl	419440 <ferror@plt+0x16ad0>
  4176f4:	ldr	w2, [x19, #8]
  4176f8:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x17198>
  4176fc:	mov	x0, x20
  417700:	add	x4, x4, #0x585
  417704:	mov	w3, #0x0                   	// #0
  417708:	mov	w1, #0x3                   	// #3
  41770c:	bl	4195fc <ferror@plt+0x16c8c>
  417710:	mov	w0, #0x5                   	// #5
  417714:	str	w0, [x19, #28]
  417718:	ldrb	w0, [x19, #24]
  41771c:	strb	w0, [x20, #18]
  417720:	mov	w0, #0x1                   	// #1
  417724:	strb	w0, [x19, #24]
  417728:	ldrb	w0, [x19, #25]
  41772c:	str	xzr, [x19, #16]
  417730:	cbnz	w0, 417754 <ferror@plt+0x14de4>
  417734:	ldrb	w0, [x20, #1140]
  417738:	cbz	w0, 417754 <ferror@plt+0x14de4>
  41773c:	mov	x0, x20
  417740:	mov	w2, #0x8                   	// #8
  417744:	ldp	x19, x20, [sp, #16]
  417748:	mov	w1, #0x0                   	// #0
  41774c:	ldp	x29, x30, [sp], #32
  417750:	b	41672c <ferror@plt+0x13dbc>
  417754:	ldp	x19, x20, [sp, #16]
  417758:	ldp	x29, x30, [sp], #32
  41775c:	ret
  417760:	stp	x29, x30, [sp, #-80]!
  417764:	mov	x29, sp
  417768:	stp	x19, x20, [sp, #16]
  41776c:	mov	x19, x0
  417770:	stp	x21, x22, [sp, #32]
  417774:	ldrb	w1, [x0, #24]
  417778:	str	wzr, [sp, #52]
  41777c:	add	w1, w1, #0x1
  417780:	strb	w1, [x0, #24]
  417784:	add	x1, sp, #0x34
  417788:	bl	42883c <ferror@plt+0x25ecc>
  41778c:	mov	x21, x0
  417790:	ldp	x0, x1, [x0]
  417794:	stp	x0, x1, [sp, #56]
  417798:	ldr	x0, [x21, #16]
  41779c:	str	x0, [sp, #72]
  4177a0:	ldrb	w0, [x21, #4]
  4177a4:	cmp	w0, #0x35
  4177a8:	b.ne	417828 <ferror@plt+0x14eb8>  // b.any
  4177ac:	ldr	x0, [x21, #8]
  4177b0:	ldr	x20, [x19, #896]
  4177b4:	cbz	x20, 417828 <ferror@plt+0x14eb8>
  4177b8:	ldr	x1, [x20, #8]
  4177bc:	cmp	x0, x1
  4177c0:	b.eq	417930 <ferror@plt+0x14fc0>  // b.none
  4177c4:	ldr	x20, [x20]
  4177c8:	b	4177b4 <ferror@plt+0x14e44>
  4177cc:	ldr	x3, [x19, #904]
  4177d0:	cbz	x3, 4177e4 <ferror@plt+0x14e74>
  4177d4:	mov	x1, x21
  4177d8:	mov	x0, x19
  4177dc:	mov	w2, #0x0                   	// #0
  4177e0:	blr	x3
  4177e4:	ldrb	w0, [x20, #19]
  4177e8:	cbz	w0, 4177f8 <ferror@plt+0x14e88>
  4177ec:	ldrb	w0, [x19, #24]
  4177f0:	sub	w0, w0, #0x1
  4177f4:	strb	w0, [x19, #24]
  4177f8:	ldr	x1, [x20, #24]
  4177fc:	mov	x0, x19
  417800:	blr	x1
  417804:	ldrb	w0, [x20, #19]
  417808:	cbnz	w0, 417920 <ferror@plt+0x14fb0>
  41780c:	ldrb	w0, [x19, #24]
  417810:	sub	w0, w0, #0x1
  417814:	strb	w0, [x19, #24]
  417818:	ldp	x19, x20, [sp, #16]
  41781c:	ldp	x21, x22, [sp, #32]
  417820:	ldp	x29, x30, [sp], #80
  417824:	ret
  417828:	mov	w1, #0x1                   	// #1
  41782c:	ldr	x0, [x19, #960]
  417830:	cbz	x0, 41780c <ferror@plt+0x14e9c>
  417834:	cmp	w1, #0x1
  417838:	b.eq	417848 <ferror@plt+0x14ed8>  // b.none
  41783c:	ldr	x0, [x19, #136]
  417840:	ldr	x0, [x0, #8]
  417844:	cbnz	x0, 417864 <ferror@plt+0x14ef4>
  417848:	mov	x0, x19
  41784c:	bl	426104 <ferror@plt+0x23794>
  417850:	ldr	w1, [x19, #48]
  417854:	mov	x0, x19
  417858:	ldr	x2, [x19, #960]
  41785c:	blr	x2
  417860:	b	41780c <ferror@plt+0x14e9c>
  417864:	mov	x0, #0x30                  	// #48
  417868:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41786c:	mov	x2, x0
  417870:	mov	w3, #0x2                   	// #2
  417874:	ldp	x0, x1, [sp, #56]
  417878:	stp	x0, x1, [x2]
  41787c:	ldr	x1, [sp, #72]
  417880:	str	x1, [x2, #16]
  417884:	lsr	x0, x0, #48
  417888:	orr	w0, w0, #0x400
  41788c:	strh	w0, [x2, #6]
  417890:	mov	x0, x19
  417894:	ldp	x4, x5, [x21]
  417898:	stp	x4, x5, [x2, #24]
  41789c:	ldr	x1, [x21, #16]
  4178a0:	str	x1, [x2, #40]
  4178a4:	ldrh	w1, [x2, #30]
  4178a8:	orr	w1, w1, #0x400
  4178ac:	strh	w1, [x2, #30]
  4178b0:	mov	x1, #0x0                   	// #0
  4178b4:	bl	425d34 <ferror@plt+0x233c4>
  4178b8:	b	417850 <ferror@plt+0x14ee0>
  4178bc:	mov	x20, #0x0                   	// #0
  4178c0:	cbnz	w22, 4178d4 <ferror@plt+0x14f64>
  4178c4:	mov	x21, x0
  4178c8:	mov	w1, #0x2                   	// #2
  4178cc:	b	41782c <ferror@plt+0x14ebc>
  4178d0:	cbz	w22, 4178e4 <ferror@plt+0x14f74>
  4178d4:	ldrb	w1, [x19, #24]
  4178d8:	add	w1, w1, #0x1
  4178dc:	strb	w1, [x19, #24]
  4178e0:	cbz	x20, 4178c4 <ferror@plt+0x14f54>
  4178e4:	ldrb	w0, [x20, #18]
  4178e8:	cbz	w0, 4177cc <ferror@plt+0x14e5c>
  4178ec:	ldr	w0, [sp, #52]
  4178f0:	str	w0, [x19, #152]
  4178f4:	mov	w0, #0x51                  	// #81
  4178f8:	strb	w0, [x19, #156]
  4178fc:	ldrh	w0, [x21, #6]
  417900:	strh	w0, [x19, #158]
  417904:	ldr	w0, [x20, #24]
  417908:	str	w0, [x19, #160]
  41790c:	mov	w0, #0x1                   	// #1
  417910:	strb	w0, [x19, #32]
  417914:	ldrb	w0, [x20, #19]
  417918:	strb	w0, [x19, #33]
  41791c:	cbnz	w0, 41780c <ferror@plt+0x14e9c>
  417920:	ldrb	w0, [x19, #24]
  417924:	add	w0, w0, #0x1
  417928:	strb	w0, [x19, #24]
  41792c:	b	41780c <ferror@plt+0x14e9c>
  417930:	ldrb	w0, [x20, #16]
  417934:	cbz	w0, 4178e4 <ferror@plt+0x14f74>
  417938:	ldrb	w22, [x20, #19]
  41793c:	cbz	w22, 41794c <ferror@plt+0x14fdc>
  417940:	ldrb	w0, [x19, #24]
  417944:	sub	w0, w0, #0x1
  417948:	strb	w0, [x19, #24]
  41794c:	mov	x0, x19
  417950:	bl	4287a8 <ferror@plt+0x25e38>
  417954:	ldrb	w1, [x0, #4]
  417958:	cmp	w1, #0x35
  41795c:	b.ne	4178bc <ferror@plt+0x14f4c>  // b.any
  417960:	ldr	x1, [x0, #8]
  417964:	ldr	x20, [x20, #24]
  417968:	cbz	x20, 4178bc <ferror@plt+0x14f4c>
  41796c:	ldr	x2, [x20, #8]
  417970:	cmp	x1, x2
  417974:	b.eq	4178d0 <ferror@plt+0x14f60>  // b.none
  417978:	ldr	x20, [x20]
  41797c:	b	417968 <ferror@plt+0x14ff8>
  417980:	stp	x29, x30, [sp, #-64]!
  417984:	mov	x29, sp
  417988:	stp	x19, x20, [sp, #16]
  41798c:	mov	x20, x1
  417990:	stp	x21, x22, [sp, #32]
  417994:	mov	x22, x2
  417998:	stp	x23, x24, [sp, #48]
  41799c:	mov	x24, x0
  4179a0:	and	w23, w3, #0xff
  4179a4:	cbz	x1, 4179e0 <ferror@plt+0x15070>
  4179a8:	mov	x0, x1
  4179ac:	bl	402330 <strlen@plt>
  4179b0:	mov	x1, x20
  4179b4:	mov	w2, w0
  4179b8:	mov	x0, x24
  4179bc:	bl	41ea70 <ferror@plt+0x1c100>
  4179c0:	ldr	x5, [x24, #896]
  4179c4:	mov	x21, x0
  4179c8:	cbz	x5, 417a80 <ferror@plt+0x15110>
  4179cc:	ldr	x0, [x5, #8]
  4179d0:	cmp	x21, x0
  4179d4:	b.eq	417af0 <ferror@plt+0x15180>  // b.none
  4179d8:	ldr	x5, [x5]
  4179dc:	b	4179c8 <ferror@plt+0x15058>
  4179e0:	add	x19, x0, #0x380
  4179e4:	cbz	w23, 417ab8 <ferror@plt+0x15148>
  4179e8:	mov	x3, x2
  4179ec:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4179f0:	add	x2, x2, #0x6f3
  4179f4:	mov	w1, #0x4                   	// #4
  4179f8:	bl	419440 <ferror@plt+0x16ad0>
  4179fc:	b	417b20 <ferror@plt+0x151b0>
  417a00:	cbz	x20, 417a24 <ferror@plt+0x150b4>
  417a04:	mov	x4, x22
  417a08:	mov	x3, x20
  417a0c:	mov	x0, x24
  417a10:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417a14:	mov	w1, #0x4                   	// #4
  417a18:	add	x2, x2, #0x769
  417a1c:	bl	419440 <ferror@plt+0x16ad0>
  417a20:	b	417b1c <ferror@plt+0x151ac>
  417a24:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417a28:	mov	x3, x22
  417a2c:	add	x2, x2, #0x78d
  417a30:	mov	x0, x24
  417a34:	mov	w1, #0x4                   	// #4
  417a38:	b	4179f8 <ferror@plt+0x15088>
  417a3c:	ldrb	w0, [x1, #16]
  417a40:	cbz	w0, 417a00 <ferror@plt+0x15090>
  417a44:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417a48:	add	x2, x2, #0x730
  417a4c:	ldr	x3, [x21]
  417a50:	b	417b10 <ferror@plt+0x151a0>
  417a54:	mov	x0, x24
  417a58:	mov	x1, #0x20                  	// #32
  417a5c:	bl	422b38 <ferror@plt+0x201c8>
  417a60:	mov	x20, x0
  417a64:	stp	xzr, xzr, [x0]
  417a68:	stp	xzr, xzr, [x0, #16]
  417a6c:	ldr	x0, [x19]
  417a70:	str	x0, [x20]
  417a74:	str	x20, [x19]
  417a78:	str	x21, [x20, #8]
  417a7c:	b	417b20 <ferror@plt+0x151b0>
  417a80:	mov	x1, #0x20                  	// #32
  417a84:	mov	x0, x24
  417a88:	bl	422b38 <ferror@plt+0x201c8>
  417a8c:	stp	xzr, xzr, [x0]
  417a90:	mov	x5, x0
  417a94:	stp	xzr, xzr, [x0, #16]
  417a98:	ldr	x1, [x24, #896]
  417a9c:	str	x1, [x0]
  417aa0:	str	x0, [x24, #896]
  417aa4:	mov	w1, #0x1                   	// #1
  417aa8:	str	x21, [x0, #8]
  417aac:	strb	w1, [x0, #16]
  417ab0:	strb	w23, [x0, #19]
  417ab4:	add	x19, x5, #0x18
  417ab8:	mov	x0, x22
  417abc:	bl	402330 <strlen@plt>
  417ac0:	mov	x1, x22
  417ac4:	mov	w2, w0
  417ac8:	mov	x0, x24
  417acc:	bl	41ea70 <ferror@plt+0x1c100>
  417ad0:	ldr	x1, [x19]
  417ad4:	mov	x21, x0
  417ad8:	cbz	x1, 417a54 <ferror@plt+0x150e4>
  417adc:	ldr	x0, [x1, #8]
  417ae0:	cmp	x21, x0
  417ae4:	b.eq	417a3c <ferror@plt+0x150cc>  // b.none
  417ae8:	ldr	x1, [x1]
  417aec:	b	417ad8 <ferror@plt+0x15168>
  417af0:	ldrb	w1, [x5, #16]
  417af4:	cbz	w1, 417a44 <ferror@plt+0x150d4>
  417af8:	ldrb	w0, [x5, #19]
  417afc:	cmp	w0, w23
  417b00:	b.eq	417ab4 <ferror@plt+0x15144>  // b.none
  417b04:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417b08:	mov	x3, x20
  417b0c:	add	x2, x2, #0x6ae
  417b10:	mov	x0, x24
  417b14:	mov	w1, #0x4                   	// #4
  417b18:	bl	419440 <ferror@plt+0x16ad0>
  417b1c:	mov	x20, #0x0                   	// #0
  417b20:	mov	x0, x20
  417b24:	ldp	x19, x20, [sp, #16]
  417b28:	ldp	x21, x22, [sp, #32]
  417b2c:	ldp	x23, x24, [sp, #48]
  417b30:	ldp	x29, x30, [sp], #64
  417b34:	ret
  417b38:	stp	x29, x30, [sp, #-32]!
  417b3c:	mov	x29, sp
  417b40:	str	x19, [sp, #16]
  417b44:	mov	x19, x3
  417b48:	mov	w3, #0x0                   	// #0
  417b4c:	bl	417980 <ferror@plt+0x15010>
  417b50:	mov	w1, #0x1                   	// #1
  417b54:	strb	w1, [x0, #17]
  417b58:	str	x19, [x0, #24]
  417b5c:	ldr	x19, [sp, #16]
  417b60:	ldp	x29, x30, [sp], #32
  417b64:	ret
  417b68:	stp	x29, x30, [sp, #-240]!
  417b6c:	mov	x29, sp
  417b70:	stp	x19, x20, [sp, #16]
  417b74:	mov	x19, x0
  417b78:	stp	x21, x22, [sp, #32]
  417b7c:	stp	x23, x24, [sp, #48]
  417b80:	mov	w24, w1
  417b84:	ldrb	w22, [x0, #27]
  417b88:	ldrb	w23, [x0, #25]
  417b8c:	cbz	w22, 417b94 <ferror@plt+0x15224>
  417b90:	strb	wzr, [x0, #24]
  417b94:	cbz	w23, 417bb8 <ferror@plt+0x15248>
  417b98:	ldrb	w0, [x19, #1154]
  417b9c:	cbz	w0, 417bb4 <ferror@plt+0x15244>
  417ba0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417ba4:	mov	x0, x19
  417ba8:	add	x2, x2, #0x7ae
  417bac:	mov	w1, #0x2                   	// #2
  417bb0:	bl	419440 <ferror@plt+0x16ad0>
  417bb4:	strh	wzr, [x19, #24]
  417bb8:	mov	w0, #0x1                   	// #1
  417bbc:	strb	w0, [x19, #16]
  417bc0:	mov	w0, #0x53                  	// #83
  417bc4:	strb	w0, [x19, #156]
  417bc8:	ldr	x0, [x19, #40]
  417bcc:	strb	wzr, [x19, #21]
  417bd0:	ldr	w0, [x0, #60]
  417bd4:	str	w0, [x19, #48]
  417bd8:	mov	x0, x19
  417bdc:	bl	4228f4 <ferror@plt+0x1ff84>
  417be0:	mov	x21, x0
  417be4:	ldrb	w0, [x0, #4]
  417be8:	cmp	w0, #0x35
  417bec:	b.ne	417ca4 <ferror@plt+0x15334>  // b.any
  417bf0:	ldr	x0, [x21, #8]
  417bf4:	ldrb	w20, [x0, #16]
  417bf8:	tbz	w20, #0, 417e28 <ferror@plt+0x154b8>
  417bfc:	ubfx	x20, x20, #1, #7
  417c00:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  417c04:	add	x0, x0, #0xb60
  417c08:	mov	w1, #0x18                  	// #24
  417c0c:	umaddl	x20, w20, w1, x0
  417c10:	ldrb	w1, [x20, #19]
  417c14:	tbnz	w1, #1, 417c1c <ferror@plt+0x152ac>
  417c18:	strb	wzr, [x19, #440]
  417c1c:	ldrb	w0, [x19, #1155]
  417c20:	cbz	w0, 417cf8 <ferror@plt+0x15388>
  417c24:	ldrb	w2, [x19, #1244]
  417c28:	cbnz	w2, 417cf8 <ferror@plt+0x15388>
  417c2c:	cbz	w24, 417cf4 <ferror@plt+0x15384>
  417c30:	mov	w21, #0x0                   	// #0
  417c34:	mov	x20, #0x0                   	// #0
  417c38:	ldrb	w0, [x19, #1160]
  417c3c:	str	x20, [x19, #144]
  417c40:	cbz	w0, 417c4c <ferror@plt+0x152dc>
  417c44:	mov	x0, x19
  417c48:	bl	4164ac <ferror@plt+0x13b3c>
  417c4c:	cbz	x20, 417ef4 <ferror@plt+0x15584>
  417c50:	ldr	x0, [x19, #144]
  417c54:	ldr	x1, [x0]
  417c58:	mov	x0, x19
  417c5c:	blr	x1
  417c60:	mov	w1, w21
  417c64:	mov	x0, x19
  417c68:	bl	416e6c <ferror@plt+0x144fc>
  417c6c:	cbz	w23, 417c80 <ferror@plt+0x15310>
  417c70:	ldrb	w0, [x19, #32]
  417c74:	cbnz	w0, 417c80 <ferror@plt+0x15310>
  417c78:	mov	w0, #0x201                 	// #513
  417c7c:	strh	w0, [x19, #24]
  417c80:	cbz	w22, 417c8c <ferror@plt+0x1531c>
  417c84:	mov	w0, #0x1                   	// #1
  417c88:	strb	w0, [x19, #24]
  417c8c:	mov	w0, w21
  417c90:	ldp	x19, x20, [sp, #16]
  417c94:	ldp	x21, x22, [sp, #32]
  417c98:	ldp	x23, x24, [sp, #48]
  417c9c:	ldp	x29, x30, [sp], #240
  417ca0:	ret
  417ca4:	cmp	w0, #0x37
  417ca8:	b.ne	417e20 <ferror@plt+0x154b0>  // b.any
  417cac:	ldr	w0, [x19, #1116]
  417cb0:	cmp	w0, #0x15
  417cb4:	b.eq	417c30 <ferror@plt+0x152c0>  // b.none
  417cb8:	ldrb	w0, [x19, #1154]
  417cbc:	adrp	x20, 451000 <_obstack_memory_used@@Base+0x17198>
  417cc0:	add	x20, x20, #0xb60
  417cc4:	cbz	w0, 417cec <ferror@plt+0x1537c>
  417cc8:	ldrb	w0, [x19, #1155]
  417ccc:	cbnz	w0, 417cec <ferror@plt+0x1537c>
  417cd0:	ldrb	w0, [x19, #18]
  417cd4:	cbnz	w0, 417cec <ferror@plt+0x1537c>
  417cd8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417cdc:	mov	x0, x19
  417ce0:	add	x2, x2, #0x7eb
  417ce4:	mov	w1, #0x2                   	// #2
  417ce8:	bl	419440 <ferror@plt+0x16ad0>
  417cec:	add	x20, x20, #0x1c8
  417cf0:	b	417c10 <ferror@plt+0x152a0>
  417cf4:	tbz	w1, #3, 417c30 <ferror@plt+0x152c0>
  417cf8:	and	w2, w1, #0x4
  417cfc:	strb	w2, [x19, #17]
  417d00:	strb	w2, [x19, #19]
  417d04:	cbnz	w0, 417d88 <ferror@plt+0x15418>
  417d08:	ldrb	w0, [x19, #18]
  417d0c:	cbnz	w0, 417d58 <ferror@plt+0x153e8>
  417d10:	ldrb	w0, [x20, #18]
  417d14:	cmp	w0, #0x2
  417d18:	b.ne	417da0 <ferror@plt+0x15430>  // b.any
  417d1c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  417d20:	add	x0, x0, #0xb60
  417d24:	add	x0, x0, #0x168
  417d28:	cmp	x20, x0
  417d2c:	b.ne	417d38 <ferror@plt+0x153c8>  // b.any
  417d30:	ldrb	w0, [x19, #1122]
  417d34:	cbnz	w0, 417d58 <ferror@plt+0x153e8>
  417d38:	ldrb	w0, [x19, #1154]
  417d3c:	cbz	w0, 417da0 <ferror@plt+0x15430>
  417d40:	ldr	x3, [x20, #8]
  417d44:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417d48:	mov	x0, x19
  417d4c:	add	x2, x2, #0x816
  417d50:	mov	w1, #0x2                   	// #2
  417d54:	bl	419440 <ferror@plt+0x16ad0>
  417d58:	ldrb	w0, [x19, #1138]
  417d5c:	cbz	w0, 417d88 <ferror@plt+0x15418>
  417d60:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  417d64:	add	x0, x0, #0xb60
  417d68:	add	x0, x0, #0xd8
  417d6c:	cmp	x20, x0
  417d70:	b.ne	417de4 <ferror@plt+0x15474>  // b.any
  417d74:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417d78:	mov	x0, x19
  417d7c:	add	x2, x2, #0x84f
  417d80:	mov	w1, #0x6                   	// #6
  417d84:	bl	4194ac <ferror@plt+0x16b3c>
  417d88:	ldrb	w0, [x19, #18]
  417d8c:	cbz	w0, 417eec <ferror@plt+0x1557c>
  417d90:	ldrb	w0, [x20, #19]
  417d94:	tbnz	w0, #0, 417eec <ferror@plt+0x1557c>
  417d98:	mov	w21, #0x1                   	// #1
  417d9c:	b	417c34 <ferror@plt+0x152c4>
  417da0:	tbnz	w1, #5, 417dc0 <ferror@plt+0x15450>
  417da4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  417da8:	add	x0, x0, #0xb60
  417dac:	add	x0, x0, #0x168
  417db0:	cmp	x20, x0
  417db4:	b.ne	417d58 <ferror@plt+0x153e8>  // b.any
  417db8:	ldrb	w0, [x19, #1122]
  417dbc:	cbnz	w0, 417d58 <ferror@plt+0x153e8>
  417dc0:	ldrb	w0, [x19, #1132]
  417dc4:	cbz	w0, 417d58 <ferror@plt+0x153e8>
  417dc8:	ldr	x3, [x20, #8]
  417dcc:	mov	x0, x19
  417dd0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417dd4:	mov	w1, #0x1                   	// #1
  417dd8:	add	x2, x2, #0x82d
  417ddc:	bl	4194ac <ferror@plt+0x16b3c>
  417de0:	b	417d58 <ferror@plt+0x153e8>
  417de4:	ldrb	w0, [x20, #18]
  417de8:	cbz	w24, 417e0c <ferror@plt+0x1549c>
  417dec:	cbnz	w0, 417d88 <ferror@plt+0x15418>
  417df0:	ldr	x3, [x20, #8]
  417df4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417df8:	add	x2, x2, #0x878
  417dfc:	mov	x0, x19
  417e00:	mov	w1, #0x6                   	// #6
  417e04:	bl	4194ac <ferror@plt+0x16b3c>
  417e08:	b	417d88 <ferror@plt+0x15418>
  417e0c:	cbz	w0, 417d88 <ferror@plt+0x15418>
  417e10:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417e14:	add	x2, x2, #0x8a6
  417e18:	ldr	x3, [x20, #8]
  417e1c:	b	417dfc <ferror@plt+0x1548c>
  417e20:	cmp	w0, #0x16
  417e24:	b.eq	417d98 <ferror@plt+0x15428>  // b.none
  417e28:	ldr	w0, [x19, #1116]
  417e2c:	cmp	w0, #0x15
  417e30:	b.eq	417c30 <ferror@plt+0x152c0>  // b.none
  417e34:	ldrb	w0, [x19, #18]
  417e38:	cbnz	w0, 417d98 <ferror@plt+0x15428>
  417e3c:	mov	x1, x21
  417e40:	mov	x0, x19
  417e44:	bl	4212ac <ferror@plt+0x1e93c>
  417e48:	mov	x20, x0
  417e4c:	ldr	x3, [x19, #1064]
  417e50:	cbz	x3, 417ed0 <ferror@plt+0x15560>
  417e54:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417e58:	add	x2, x2, #0xb60
  417e5c:	mov	x1, x0
  417e60:	add	x2, x2, #0x1e0
  417e64:	mov	x0, x19
  417e68:	blr	x3
  417e6c:	mov	x24, x0
  417e70:	cbz	x0, 417ed0 <ferror@plt+0x15560>
  417e74:	ldr	w2, [x21]
  417e78:	mov	x3, #0x0                   	// #0
  417e7c:	ldr	x1, [x19, #40]
  417e80:	add	x0, sp, #0x48
  417e84:	bl	424c1c <ferror@plt+0x222ac>
  417e88:	ldr	w1, [x21]
  417e8c:	ldr	x0, [x19, #40]
  417e90:	bl	423a00 <ferror@plt+0x21090>
  417e94:	mov	x1, x0
  417e98:	mov	x2, x24
  417e9c:	add	x0, sp, #0x48
  417ea0:	bl	425200 <ferror@plt+0x22890>
  417ea4:	mov	x5, x24
  417ea8:	mov	x4, x20
  417eac:	add	x2, sp, #0x48
  417eb0:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x17198>
  417eb4:	add	x3, x3, #0x8df
  417eb8:	mov	w1, #0x3                   	// #3
  417ebc:	mov	x0, x19
  417ec0:	bl	419878 <ferror@plt+0x16f08>
  417ec4:	add	x0, sp, #0x48
  417ec8:	bl	4249b0 <ferror@plt+0x22040>
  417ecc:	b	417d98 <ferror@plt+0x15428>
  417ed0:	mov	x3, x20
  417ed4:	mov	x0, x19
  417ed8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  417edc:	mov	w1, #0x3                   	// #3
  417ee0:	add	x2, x2, #0x916
  417ee4:	bl	419440 <ferror@plt+0x16ad0>
  417ee8:	b	417d98 <ferror@plt+0x15428>
  417eec:	mov	w21, #0x1                   	// #1
  417ef0:	b	417c38 <ferror@plt+0x152c8>
  417ef4:	cbnz	w21, 417c60 <ferror@plt+0x152f0>
  417ef8:	mov	x0, x19
  417efc:	mov	w1, #0x1                   	// #1
  417f00:	bl	426104 <ferror@plt+0x23794>
  417f04:	b	417c60 <ferror@plt+0x152f0>
  417f08:	mov	x2, #0x0                   	// #0
  417f0c:	adrp	x1, 415000 <ferror@plt+0x12690>
  417f10:	add	x1, x1, #0xcdc
  417f14:	b	41ebf4 <ferror@plt+0x1c284>
  417f18:	stp	x29, x30, [sp, #-32]!
  417f1c:	mov	x29, sp
  417f20:	stp	x19, x20, [sp, #16]
  417f24:	mov	x19, x0
  417f28:	mov	w0, w4
  417f2c:	mov	w4, w3
  417f30:	mov	x3, x2
  417f34:	mov	w2, w0
  417f38:	ldr	x0, [x19, #40]
  417f3c:	bl	423060 <ferror@plt+0x206f0>
  417f40:	mov	x20, x0
  417f44:	cbz	x0, 417f58 <ferror@plt+0x155e8>
  417f48:	ldr	w1, [x0, #16]
  417f4c:	mov	w2, #0x7f                  	// #127
  417f50:	ldr	x0, [x19, #40]
  417f54:	bl	42333c <ferror@plt+0x209cc>
  417f58:	ldr	x2, [x19, #912]
  417f5c:	cbz	x2, 417f78 <ferror@plt+0x15608>
  417f60:	mov	x1, x20
  417f64:	mov	x0, x19
  417f68:	ldp	x19, x20, [sp, #16]
  417f6c:	mov	x16, x2
  417f70:	ldp	x29, x30, [sp], #32
  417f74:	br	x16
  417f78:	ldp	x19, x20, [sp, #16]
  417f7c:	ldp	x29, x30, [sp], #32
  417f80:	ret
  417f84:	stp	x29, x30, [sp, #-96]!
  417f88:	mov	w3, #0x18                  	// #24
  417f8c:	mov	x29, sp
  417f90:	stp	x21, x22, [sp, #32]
  417f94:	ldr	x21, [x0, #40]
  417f98:	stp	x19, x20, [sp, #16]
  417f9c:	mov	x19, x0
  417fa0:	stp	x23, x24, [sp, #48]
  417fa4:	ldr	w1, [x21, #12]
  417fa8:	ldr	x2, [x21]
  417fac:	sub	w1, w1, #0x1
  417fb0:	smaddl	x1, w1, w3, x2
  417fb4:	ldr	x23, [x1, #8]
  417fb8:	str	x25, [sp, #64]
  417fbc:	ldrb	w20, [x1, #5]
  417fc0:	mov	w1, #0x1                   	// #1
  417fc4:	bl	426104 <ferror@plt+0x23794>
  417fc8:	mov	x0, x19
  417fcc:	bl	4287a8 <ferror@plt+0x25e38>
  417fd0:	mov	x1, x0
  417fd4:	ldrb	w0, [x0, #4]
  417fd8:	cmp	w0, #0x37
  417fdc:	b.ne	418020 <ferror@plt+0x156b0>  // b.any
  417fe0:	ldr	w6, [x1, #8]
  417fe4:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x1d198>
  417fe8:	ldr	x5, [x1, #16]
  417fec:	add	x3, x3, #0x21a
  417ff0:	mov	x2, #0x0                   	// #0
  417ff4:	mov	w24, #0x0                   	// #0
  417ff8:	mov	w4, #0xa                   	// #10
  417ffc:	cmp	x6, x2
  418000:	b.eq	4180f8 <ferror@plt+0x15788>  // b.none
  418004:	ldrb	w0, [x5, x2]
  418008:	add	x2, x2, #0x1
  41800c:	ldrh	w7, [x3, w0, sxtw #1]
  418010:	tbz	w7, #2, 418020 <ferror@plt+0x156b0>
  418014:	madd	w24, w24, w4, w0
  418018:	sub	w24, w24, #0x30
  41801c:	b	417ffc <ferror@plt+0x1568c>
  418020:	mov	x0, x19
  418024:	bl	4212ac <ferror@plt+0x1e93c>
  418028:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  41802c:	mov	x3, x0
  418030:	add	x2, x2, #0x93a
  418034:	mov	x0, x19
  418038:	mov	w1, #0x3                   	// #3
  41803c:	bl	419440 <ferror@plt+0x16ad0>
  418040:	ldp	x19, x20, [sp, #16]
  418044:	ldp	x21, x22, [sp, #32]
  418048:	ldp	x23, x24, [sp, #48]
  41804c:	ldr	x25, [sp, #64]
  418050:	ldp	x29, x30, [sp], #96
  418054:	ret
  418058:	cmp	w0, #0x2
  41805c:	b.ne	418078 <ferror@plt+0x15708>  // b.any
  418060:	mov	w1, w0
  418064:	mov	w25, #0x1                   	// #1
  418068:	mov	x0, x19
  41806c:	bl	415e34 <ferror@plt+0x134c4>
  418070:	mov	w20, w0
  418074:	b	418170 <ferror@plt+0x15800>
  418078:	mov	w25, #0x3                   	// #3
  41807c:	b	418170 <ferror@plt+0x15800>
  418080:	mov	w20, #0x0                   	// #0
  418084:	b	418190 <ferror@plt+0x15820>
  418088:	cmp	w4, #0x16
  41808c:	b.eq	4180a8 <ferror@plt+0x15738>  // b.none
  418090:	mov	x0, x19
  418094:	bl	4212ac <ferror@plt+0x1e93c>
  418098:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  41809c:	mov	x3, x0
  4180a0:	add	x2, x2, #0x961
  4180a4:	b	418034 <ferror@plt+0x156c4>
  4180a8:	mov	w25, #0x3                   	// #3
  4180ac:	b	4181a4 <ferror@plt+0x15834>
  4180b0:	cbz	x0, 4180c4 <ferror@plt+0x15754>
  4180b4:	ldr	x0, [x0, #8]
  4180b8:	mov	x1, x23
  4180bc:	bl	438b04 <ferror@plt+0x36194>
  4180c0:	cbnz	w0, 4181dc <ferror@plt+0x1586c>
  4180c4:	ldr	x1, [x19, #40]
  4180c8:	mov	w4, w20
  4180cc:	mov	w3, w24
  4180d0:	mov	x2, x23
  4180d4:	ldr	w0, [x1, #56]
  4180d8:	sub	w0, w0, #0x1
  4180dc:	str	w0, [x1, #56]
  4180e0:	mov	x0, x19
  4180e4:	mov	w1, w25
  4180e8:	bl	417f18 <ferror@plt+0x155a8>
  4180ec:	mov	w0, #0x1                   	// #1
  4180f0:	strb	w0, [x21, #116]
  4180f4:	b	418040 <ferror@plt+0x156d0>
  4180f8:	mov	x0, x19
  4180fc:	bl	4287a8 <ferror@plt+0x25e38>
  418100:	ldrb	w4, [x0, #4]
  418104:	mov	x1, x0
  418108:	cmp	w4, #0x3e
  41810c:	b.ne	418088 <ferror@plt+0x15718>  // b.any
  418110:	add	x3, sp, #0x50
  418114:	add	x1, x1, #0x8
  418118:	mov	x0, x19
  41811c:	mov	x2, #0x1                   	// #1
  418120:	str	wzr, [sp, #80]
  418124:	str	xzr, [sp, #88]
  418128:	bl	4158fc <ferror@plt+0x12f8c>
  41812c:	tst	w0, #0xff
  418130:	b.eq	418138 <ferror@plt+0x157c8>  // b.none
  418134:	ldr	x23, [sp, #88]
  418138:	mov	x0, x19
  41813c:	mov	w1, #0x0                   	// #0
  418140:	bl	415e34 <ferror@plt+0x134c4>
  418144:	mov	w20, w0
  418148:	cmp	w0, #0x1
  41814c:	b.ne	418058 <ferror@plt+0x156e8>  // b.any
  418150:	mov	x1, x23
  418154:	mov	x0, x19
  418158:	bl	41e470 <ferror@plt+0x1bb00>
  41815c:	mov	w25, #0x0                   	// #0
  418160:	mov	w1, w20
  418164:	mov	x0, x19
  418168:	bl	415e34 <ferror@plt+0x134c4>
  41816c:	mov	w20, w0
  418170:	cmp	w20, #0x3
  418174:	b.ne	418080 <ferror@plt+0x15710>  // b.any
  418178:	mov	w1, w20
  41817c:	mov	x0, x19
  418180:	bl	415e34 <ferror@plt+0x134c4>
  418184:	cmp	w0, #0x4
  418188:	cset	w20, eq  // eq = none
  41818c:	add	w20, w20, #0x1
  418190:	ldr	x0, [x19]
  418194:	mov	w1, #0x0                   	// #0
  418198:	strb	w20, [x0, #106]
  41819c:	mov	x0, x19
  4181a0:	bl	4167a0 <ferror@plt+0x13e30>
  4181a4:	mov	x0, x19
  4181a8:	bl	416cb8 <ferror@plt+0x14348>
  4181ac:	cmp	w25, #0x1
  4181b0:	b.ne	4180c4 <ferror@plt+0x15754>  // b.any
  4181b4:	ldr	w22, [x21, #12]
  4181b8:	mov	w0, #0x18                  	// #24
  4181bc:	ldr	x1, [x21]
  4181c0:	sub	w22, w22, #0x1
  4181c4:	smaddl	x22, w22, w0, x1
  4181c8:	mov	x0, x21
  4181cc:	mov	x1, x22
  4181d0:	bl	422ff4 <ferror@plt+0x20684>
  4181d4:	ldr	w1, [x22, #20]
  4181d8:	cbnz	w1, 4180b0 <ferror@plt+0x15740>
  4181dc:	mov	x3, x23
  4181e0:	mov	x0, x19
  4181e4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4181e8:	mov	w1, #0x0                   	// #0
  4181ec:	add	x2, x2, #0x97e
  4181f0:	bl	4194ac <ferror@plt+0x16b3c>
  4181f4:	b	418040 <ferror@plt+0x156d0>
  4181f8:	stp	x29, x30, [sp, #-80]!
  4181fc:	mov	w3, #0x18                  	// #24
  418200:	mov	x29, sp
  418204:	stp	x21, x22, [sp, #32]
  418208:	ldr	x21, [x0, #40]
  41820c:	stp	x19, x20, [sp, #16]
  418210:	mov	x19, x0
  418214:	stp	x23, x24, [sp, #48]
  418218:	mov	w24, #0x7fffffff            	// #2147483647
  41821c:	ldr	w1, [x21, #12]
  418220:	ldr	x2, [x21]
  418224:	sub	w1, w1, #0x1
  418228:	smaddl	x1, w1, w3, x2
  41822c:	ldrb	w22, [x1, #5]
  418230:	ldr	x23, [x1, #8]
  418234:	ldrb	w1, [x0, #1152]
  418238:	cmp	w1, #0x0
  41823c:	mov	w1, #0x7fff                	// #32767
  418240:	csel	w24, w24, w1, ne  // ne = any
  418244:	bl	4287a8 <ferror@plt+0x25e38>
  418248:	mov	x1, x0
  41824c:	ldrb	w0, [x0, #4]
  418250:	cmp	w0, #0x37
  418254:	b.ne	4182b0 <ferror@plt+0x15940>  // b.any
  418258:	ldr	w8, [x1, #8]
  41825c:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x1d198>
  418260:	ldr	x5, [x1, #16]
  418264:	add	x4, x4, #0x21a
  418268:	mov	x2, #0x0                   	// #0
  41826c:	mov	w3, #0x0                   	// #0
  418270:	mov	w20, #0x0                   	// #0
  418274:	mov	w7, #0xa                   	// #10
  418278:	mov	w6, #0x1                   	// #1
  41827c:	cmp	x8, x2
  418280:	b.eq	4183c0 <ferror@plt+0x15a50>  // b.none
  418284:	ldrb	w9, [x5, x2]
  418288:	ldrb	w0, [x5, x2]
  41828c:	ldrh	w9, [x4, x9, lsl #1]
  418290:	tbz	w9, #2, 4182e0 <ferror@plt+0x15970>
  418294:	madd	w0, w20, w7, w0
  418298:	add	x2, x2, #0x1
  41829c:	sub	w0, w0, #0x30
  4182a0:	cmp	w20, w0
  4182a4:	mov	w20, w0
  4182a8:	csel	w3, w3, w6, ls  // ls = plast
  4182ac:	b	41827c <ferror@plt+0x1590c>
  4182b0:	cmp	w0, #0x16
  4182b4:	b.ne	4182e0 <ferror@plt+0x15970>  // b.any
  4182b8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4182bc:	mov	x0, x19
  4182c0:	add	x2, x2, #0x9b4
  4182c4:	mov	w1, #0x3                   	// #3
  4182c8:	bl	419440 <ferror@plt+0x16ad0>
  4182cc:	ldp	x19, x20, [sp, #16]
  4182d0:	ldp	x21, x22, [sp, #32]
  4182d4:	ldp	x23, x24, [sp, #48]
  4182d8:	ldp	x29, x30, [sp], #80
  4182dc:	ret
  4182e0:	mov	x0, x19
  4182e4:	bl	4212ac <ferror@plt+0x1e93c>
  4182e8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4182ec:	mov	x3, x0
  4182f0:	add	x2, x2, #0x9d7
  4182f4:	mov	x0, x19
  4182f8:	mov	w1, #0x3                   	// #3
  4182fc:	bl	419440 <ferror@plt+0x16ad0>
  418300:	b	4182cc <ferror@plt+0x1595c>
  418304:	cbz	w20, 418314 <ferror@plt+0x159a4>
  418308:	cmp	w24, w20
  41830c:	b.cc	418314 <ferror@plt+0x159a4>  // b.lo, b.ul, b.last
  418310:	cbz	w3, 418328 <ferror@plt+0x159b8>
  418314:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  418318:	add	x2, x2, #0xa02
  41831c:	mov	w1, #0x2                   	// #2
  418320:	mov	x0, x19
  418324:	bl	419440 <ferror@plt+0x16ad0>
  418328:	mov	x0, x19
  41832c:	bl	4287a8 <ferror@plt+0x25e38>
  418330:	ldrb	w4, [x0, #4]
  418334:	mov	x1, x0
  418338:	cmp	w4, #0x3e
  41833c:	b.ne	4183a0 <ferror@plt+0x15a30>  // b.any
  418340:	add	x1, x0, #0x8
  418344:	add	x3, sp, #0x40
  418348:	mov	x0, x19
  41834c:	mov	x2, #0x1                   	// #1
  418350:	str	wzr, [sp, #64]
  418354:	str	xzr, [sp, #72]
  418358:	bl	4158fc <ferror@plt+0x12f8c>
  41835c:	tst	w0, #0xff
  418360:	b.eq	418368 <ferror@plt+0x159f8>  // b.none
  418364:	ldr	x23, [sp, #72]
  418368:	mov	x0, x19
  41836c:	mov	w1, #0x1                   	// #1
  418370:	bl	4167a0 <ferror@plt+0x13e30>
  418374:	mov	x0, x19
  418378:	bl	416cb8 <ferror@plt+0x14348>
  41837c:	mov	x0, x19
  418380:	mov	w4, w22
  418384:	mov	w3, w20
  418388:	mov	x2, x23
  41838c:	mov	w1, #0x3                   	// #3
  418390:	bl	417f18 <ferror@plt+0x155a8>
  418394:	mov	w0, #0x1                   	// #1
  418398:	strb	w0, [x21, #116]
  41839c:	b	4182cc <ferror@plt+0x1595c>
  4183a0:	cmp	w4, #0x16
  4183a4:	b.eq	418374 <ferror@plt+0x15a04>  // b.none
  4183a8:	mov	x0, x19
  4183ac:	bl	4212ac <ferror@plt+0x1e93c>
  4183b0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4183b4:	mov	x3, x0
  4183b8:	add	x2, x2, #0x961
  4183bc:	b	4182f4 <ferror@plt+0x15984>
  4183c0:	ldrb	w0, [x19, #1154]
  4183c4:	cbnz	w0, 418304 <ferror@plt+0x15994>
  4183c8:	cbz	w3, 418328 <ferror@plt+0x159b8>
  4183cc:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4183d0:	mov	w1, #0x0                   	// #0
  4183d4:	add	x2, x2, #0xa02
  4183d8:	b	418320 <ferror@plt+0x159b0>
  4183dc:	cbnz	x3, 4183f0 <ferror@plt+0x15a80>
  4183e0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4183e4:	mov	w1, #0x4                   	// #4
  4183e8:	add	x2, x2, #0xa1b
  4183ec:	b	419440 <ferror@plt+0x16ad0>
  4183f0:	stp	x29, x30, [sp, #-32]!
  4183f4:	mov	x29, sp
  4183f8:	stp	x19, x20, [sp, #16]
  4183fc:	mov	x19, x3
  418400:	and	w20, w4, #0xff
  418404:	mov	w3, #0x0                   	// #0
  418408:	bl	417980 <ferror@plt+0x15010>
  41840c:	cbz	x0, 418418 <ferror@plt+0x15aa8>
  418410:	strb	w20, [x0, #19]
  418414:	str	x19, [x0, #24]
  418418:	ldp	x19, x20, [sp, #16]
  41841c:	ldp	x29, x30, [sp], #32
  418420:	ret
  418424:	stp	x29, x30, [sp, #-32]!
  418428:	mov	x29, sp
  41842c:	stp	x19, x20, [sp, #16]
  418430:	mov	w19, w3
  418434:	and	w20, w4, #0xff
  418438:	mov	w3, w5
  41843c:	bl	417980 <ferror@plt+0x15010>
  418440:	cbz	x0, 418454 <ferror@plt+0x15ae4>
  418444:	mov	w1, #0x1                   	// #1
  418448:	strb	w1, [x0, #18]
  41844c:	strb	w20, [x0, #19]
  418450:	str	w19, [x0, #24]
  418454:	ldp	x19, x20, [sp, #16]
  418458:	ldp	x29, x30, [sp], #32
  41845c:	ret
  418460:	stp	x29, x30, [sp, #-32]!
  418464:	mov	x1, #0x0                   	// #0
  418468:	adrp	x3, 416000 <ferror@plt+0x13690>
  41846c:	mov	x29, sp
  418470:	add	x3, x3, #0xac4
  418474:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  418478:	add	x2, x2, #0xa40
  41847c:	stp	x19, x20, [sp, #16]
  418480:	mov	x19, x0
  418484:	bl	417b38 <ferror@plt+0x151c8>
  418488:	adrp	x20, 451000 <_obstack_memory_used@@Base+0x17198>
  41848c:	mov	x0, x19
  418490:	mov	x1, #0x0                   	// #0
  418494:	adrp	x3, 416000 <ferror@plt+0x13690>
  418498:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  41849c:	add	x3, x3, #0xf04
  4184a0:	add	x2, x2, #0xa45
  4184a4:	bl	417b38 <ferror@plt+0x151c8>
  4184a8:	add	x20, x20, #0xa61
  4184ac:	mov	x0, x19
  4184b0:	mov	x1, #0x0                   	// #0
  4184b4:	adrp	x3, 418000 <ferror@plt+0x15690>
  4184b8:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4184bc:	add	x3, x3, #0x8d0
  4184c0:	add	x2, x2, #0xa50
  4184c4:	bl	417b38 <ferror@plt+0x151c8>
  4184c8:	mov	x1, x20
  4184cc:	mov	x0, x19
  4184d0:	adrp	x3, 415000 <ferror@plt+0x12690>
  4184d4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4184d8:	add	x3, x3, #0xf04
  4184dc:	add	x2, x2, #0xa5a
  4184e0:	bl	417b38 <ferror@plt+0x151c8>
  4184e4:	mov	x1, x20
  4184e8:	mov	x0, x19
  4184ec:	adrp	x3, 417000 <ferror@plt+0x14690>
  4184f0:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4184f4:	add	x3, x3, #0x250
  4184f8:	add	x2, x2, #0xa65
  4184fc:	bl	417b38 <ferror@plt+0x151c8>
  418500:	mov	x1, x20
  418504:	mov	x0, x19
  418508:	adrp	x3, 416000 <ferror@plt+0x13690>
  41850c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  418510:	add	x3, x3, #0xa04
  418514:	add	x2, x2, #0x453
  418518:	bl	417b38 <ferror@plt+0x151c8>
  41851c:	mov	x1, x20
  418520:	mov	x0, x19
  418524:	adrp	x3, 416000 <ferror@plt+0x13690>
  418528:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  41852c:	add	x3, x3, #0xf4
  418530:	add	x2, x2, #0x6c1
  418534:	bl	417b38 <ferror@plt+0x151c8>
  418538:	mov	x1, x20
  41853c:	mov	x0, x19
  418540:	ldp	x19, x20, [sp, #16]
  418544:	adrp	x3, 416000 <ferror@plt+0x13690>
  418548:	ldp	x29, x30, [sp], #32
  41854c:	add	x3, x3, #0xec
  418550:	adrp	x2, 44b000 <_obstack_memory_used@@Base+0x11198>
  418554:	add	x2, x2, #0x4e0
  418558:	b	417b38 <ferror@plt+0x151c8>
  41855c:	stp	x29, x30, [sp, #-32]!
  418560:	mov	x29, sp
  418564:	stp	x19, x20, [sp, #16]
  418568:	mov	x20, x0
  41856c:	ldr	x0, [x0, #896]
  418570:	bl	415d0c <ferror@plt+0x1339c>
  418574:	sbfiz	x0, x0, #3, #32
  418578:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41857c:	mov	x19, x0
  418580:	mov	x1, x0
  418584:	ldr	x0, [x20, #896]
  418588:	bl	416608 <ferror@plt+0x13c98>
  41858c:	mov	x0, x19
  418590:	ldp	x19, x20, [sp, #16]
  418594:	ldp	x29, x30, [sp], #32
  418598:	ret
  41859c:	stp	x29, x30, [sp, #-32]!
  4185a0:	mov	x2, x1
  4185a4:	mov	x29, sp
  4185a8:	str	x19, [sp, #16]
  4185ac:	mov	x19, x1
  4185b0:	ldr	x1, [x0, #896]
  4185b4:	bl	416588 <ferror@plt+0x13c18>
  4185b8:	mov	x0, x19
  4185bc:	ldr	x19, [sp, #16]
  4185c0:	ldp	x29, x30, [sp], #32
  4185c4:	b	402730 <free@plt>
  4185c8:	stp	x29, x30, [sp, #-64]!
  4185cc:	mov	x29, sp
  4185d0:	str	x21, [sp, #32]
  4185d4:	mov	x21, x1
  4185d8:	add	x2, sp, #0x38
  4185dc:	mov	w1, #0x4                   	// #4
  4185e0:	stp	x19, x20, [sp, #16]
  4185e4:	mov	x20, x0
  4185e8:	bl	4172a8 <ferror@plt+0x14938>
  4185ec:	str	wzr, [x21]
  4185f0:	mov	x19, x0
  4185f4:	cbz	x0, 41863c <ferror@plt+0x15ccc>
  4185f8:	ldr	x1, [x0, #24]
  4185fc:	cbz	x1, 41861c <ferror@plt+0x15cac>
  418600:	ldr	x1, [sp, #56]
  418604:	cbz	x1, 418634 <ferror@plt+0x15cc4>
  418608:	bl	415fac <ferror@plt+0x1363c>
  41860c:	ldr	x0, [x0]
  418610:	cmp	x0, #0x0
  418614:	cset	w0, ne  // ne = any
  418618:	str	w0, [x21]
  41861c:	cmp	x19, #0x0
  418620:	cset	w0, eq  // eq = none
  418624:	ldp	x19, x20, [sp, #16]
  418628:	ldr	x21, [sp, #32]
  41862c:	ldp	x29, x30, [sp], #64
  418630:	ret
  418634:	mov	w0, #0x1                   	// #1
  418638:	b	418618 <ferror@plt+0x15ca8>
  41863c:	ldr	x0, [x20, #448]
  418640:	ldurb	w0, [x0, #-20]
  418644:	cmp	w0, #0x16
  418648:	b.ne	41861c <ferror@plt+0x15cac>  // b.any
  41864c:	mov	x0, x20
  418650:	mov	w1, #0x1                   	// #1
  418654:	bl	426104 <ferror@plt+0x23794>
  418658:	b	41861c <ferror@plt+0x15cac>
  41865c:	add	x0, x0, #0x458
  418660:	ret
  418664:	add	x0, x0, #0x388
  418668:	ret
  41866c:	stp	x29, x30, [sp, #-16]!
  418670:	mov	x2, #0xb8                  	// #184
  418674:	add	x0, x0, #0x388
  418678:	mov	x29, sp
  41867c:	bl	4022e0 <memcpy@plt>
  418680:	ldp	x29, x30, [sp], #16
  418684:	ret
  418688:	stp	x29, x30, [sp, #-32]!
  41868c:	mov	x29, sp
  418690:	str	x19, [sp, #16]
  418694:	mov	x19, x0
  418698:	ldr	x0, [x0, #712]
  41869c:	cbnz	x0, 4186a8 <ferror@plt+0x15d38>
  4186a0:	bl	428e64 <ferror@plt+0x264f4>
  4186a4:	str	x0, [x19, #712]
  4186a8:	ldr	x0, [x19, #712]
  4186ac:	ldr	x19, [sp, #16]
  4186b0:	ldp	x29, x30, [sp], #32
  4186b4:	ret
  4186b8:	stp	x29, x30, [sp, #-64]!
  4186bc:	mov	x29, sp
  4186c0:	stp	x19, x20, [sp, #16]
  4186c4:	add	x19, x0, #0x328
  4186c8:	mov	w20, w3
  4186cc:	stp	x21, x22, [sp, #32]
  4186d0:	mov	x21, x1
  4186d4:	mov	x22, x2
  4186d8:	ldr	x1, [x19, #24]
  4186dc:	str	x23, [sp, #48]
  4186e0:	mov	x23, x0
  4186e4:	ldr	x0, [x19, #32]
  4186e8:	sub	x0, x0, x1
  4186ec:	cmp	x0, #0xc7
  4186f0:	b.hi	418700 <ferror@plt+0x15d90>  // b.pmore
  4186f4:	mov	x0, x19
  4186f8:	mov	x1, #0xc8                  	// #200
  4186fc:	bl	439ca4 <_obstack_newchunk@@Base>
  418700:	ldp	x4, x5, [x19, #16]
  418704:	add	x5, x5, #0xc8
  418708:	cmp	x5, x4
  41870c:	b.ne	41871c <ferror@plt+0x15dac>  // b.any
  418710:	ldrb	w0, [x19, #80]
  418714:	orr	w0, w0, #0x2
  418718:	strb	w0, [x19, #80]
  41871c:	ldr	x3, [x19, #48]
  418720:	and	w20, w20, #0x1
  418724:	ldr	x0, [x19, #8]
  418728:	add	x5, x5, x3
  41872c:	ldr	x1, [x19, #32]
  418730:	bic	x3, x5, x3
  418734:	sub	x2, x3, x0
  418738:	ubfiz	w20, w20, #9, #7
  41873c:	sub	x0, x1, x0
  418740:	orr	w20, w20, #0x1
  418744:	cmp	x2, x0
  418748:	mov	x0, x4
  41874c:	csel	x3, x3, x1, ls  // ls = plast
  418750:	stp	x3, x3, [x19, #16]
  418754:	mov	x2, #0xc8                  	// #200
  418758:	mov	w1, #0x0                   	// #0
  41875c:	bl	402530 <memset@plt>
  418760:	mov	x4, x0
  418764:	ldr	x0, [x23]
  418768:	mov	w1, #0xfffffd00            	// #-768
  41876c:	str	x0, [x4, #72]
  418770:	ldrh	w0, [x4, #104]
  418774:	stp	x21, x21, [x4, #16]
  418778:	add	x21, x21, x22
  41877c:	and	w0, w0, w1
  418780:	orr	w20, w20, w0
  418784:	strh	w20, [x4, #104]
  418788:	mov	x0, x4
  41878c:	ldp	x19, x20, [sp, #16]
  418790:	str	x21, [x4, #32]
  418794:	ldp	x21, x22, [sp, #32]
  418798:	str	x4, [x23]
  41879c:	ldr	x23, [sp, #48]
  4187a0:	ldp	x29, x30, [sp], #64
  4187a4:	ret
  4187a8:	stp	x29, x30, [sp, #-80]!
  4187ac:	mov	x29, sp
  4187b0:	stp	x19, x20, [sp, #16]
  4187b4:	mov	x20, x0
  4187b8:	ldr	x19, [x0]
  4187bc:	stp	x21, x22, [sp, #32]
  4187c0:	adrp	x22, 451000 <_obstack_memory_used@@Base+0x17198>
  4187c4:	add	x22, x22, #0xa73
  4187c8:	stp	x23, x24, [sp, #48]
  4187cc:	adrp	x24, 451000 <_obstack_memory_used@@Base+0x17198>
  4187d0:	add	x24, x24, #0xb60
  4187d4:	ldr	x23, [x19, #80]
  4187d8:	ldr	x21, [x19, #96]
  4187dc:	str	x25, [sp, #64]
  4187e0:	mov	x25, #0x18                  	// #24
  4187e4:	cbz	x21, 418814 <ferror@plt+0x15ea4>
  4187e8:	ldrsw	x0, [x21, #28]
  4187ec:	mov	x4, x22
  4187f0:	ldr	w2, [x21, #8]
  4187f4:	mov	w3, #0x0                   	// #0
  4187f8:	mov	w1, #0x3                   	// #3
  4187fc:	madd	x0, x0, x25, x24
  418800:	ldr	x5, [x0, #8]
  418804:	mov	x0, x20
  418808:	bl	4195fc <ferror@plt+0x16c8c>
  41880c:	ldr	x21, [x21]
  418810:	b	4187e4 <ferror@plt+0x15e74>
  418814:	strb	wzr, [x20, #18]
  418818:	ldr	x0, [x19, #72]
  41881c:	ldr	x21, [x19, #40]
  418820:	str	x0, [x20]
  418824:	ldr	x0, [x19, #48]
  418828:	bl	402730 <free@plt>
  41882c:	ldr	x1, [x20, #816]
  418830:	add	x0, x20, #0x328
  418834:	cmp	x1, x19
  418838:	b.cs	41888c <ferror@plt+0x15f1c>  // b.hs, b.nlast
  41883c:	ldr	x1, [x0, #32]
  418840:	cmp	x1, x19
  418844:	b.ls	41888c <ferror@plt+0x15f1c>  // b.plast
  418848:	stp	x19, x19, [x0, #16]
  41884c:	cbz	x23, 418898 <ferror@plt+0x15f28>
  418850:	mov	x2, x21
  418854:	mov	x1, x23
  418858:	mov	x0, x20
  41885c:	bl	41e668 <ferror@plt+0x1bcf8>
  418860:	mov	x0, x20
  418864:	mov	w4, #0x0                   	// #0
  418868:	ldp	x19, x20, [sp, #16]
  41886c:	mov	w3, #0x0                   	// #0
  418870:	ldp	x21, x22, [sp, #32]
  418874:	mov	x2, #0x0                   	// #0
  418878:	ldp	x23, x24, [sp, #48]
  41887c:	mov	w1, #0x1                   	// #1
  418880:	ldr	x25, [sp, #64]
  418884:	ldp	x29, x30, [sp], #80
  418888:	b	417f18 <ferror@plt+0x155a8>
  41888c:	mov	x1, x19
  418890:	bl	439df4 <_obstack_free@@Base>
  418894:	b	41884c <ferror@plt+0x15edc>
  418898:	cbz	x21, 4188b8 <ferror@plt+0x15f48>
  41889c:	mov	x0, x21
  4188a0:	ldp	x19, x20, [sp, #16]
  4188a4:	ldp	x21, x22, [sp, #32]
  4188a8:	ldp	x23, x24, [sp, #48]
  4188ac:	ldr	x25, [sp, #64]
  4188b0:	ldp	x29, x30, [sp], #80
  4188b4:	b	402730 <free@plt>
  4188b8:	ldp	x19, x20, [sp, #16]
  4188bc:	ldp	x21, x22, [sp, #32]
  4188c0:	ldp	x23, x24, [sp, #48]
  4188c4:	ldr	x25, [sp, #64]
  4188c8:	ldp	x29, x30, [sp], #80
  4188cc:	ret
  4188d0:	stp	x29, x30, [sp, #-64]!
  4188d4:	mov	x29, sp
  4188d8:	stp	x19, x20, [sp, #16]
  4188dc:	mov	x19, x0
  4188e0:	stp	x21, x22, [sp, #32]
  4188e4:	ldr	x20, [x0, #1400]
  4188e8:	str	x23, [sp, #48]
  4188ec:	bl	41666c <ferror@plt+0x13cfc>
  4188f0:	cbnz	x0, 418940 <ferror@plt+0x15fd0>
  4188f4:	ldr	x0, [x19, #448]
  4188f8:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x17198>
  4188fc:	add	x4, x4, #0xa84
  418900:	mov	w3, #0x0                   	// #0
  418904:	mov	w1, #0x3                   	// #3
  418908:	ldur	w2, [x0, #-24]
  41890c:	mov	x0, x19
  418910:	bl	4195fc <ferror@plt+0x16c8c>
  418914:	mov	w1, #0x0                   	// #0
  418918:	mov	x0, x19
  41891c:	bl	4167a0 <ferror@plt+0x13e30>
  418920:	mov	x0, x19
  418924:	bl	416cb8 <ferror@plt+0x14348>
  418928:	mov	sp, x29
  41892c:	ldp	x19, x20, [sp, #16]
  418930:	ldp	x21, x22, [sp, #32]
  418934:	ldr	x23, [sp, #48]
  418938:	ldp	x29, x30, [sp], #64
  41893c:	ret
  418940:	ldr	w1, [x0, #8]
  418944:	add	w2, w1, #0x2
  418948:	mov	w1, w1
  41894c:	add	x2, x2, #0xf
  418950:	sub	x1, x1, #0x1
  418954:	and	x2, x2, #0x1fffffff0
  418958:	sub	sp, sp, x2
  41895c:	ldr	x2, [x0, #16]
  418960:	mov	x23, sp
  418964:	add	x1, x2, x1
  418968:	ldrb	w0, [x2]
  41896c:	cmp	w0, #0x4c
  418970:	cset	x0, eq  // eq = none
  418974:	add	x0, x0, #0x1
  418978:	add	x0, x2, x0
  41897c:	mov	x2, x23
  418980:	cmp	x0, x1
  418984:	b.cs	4189b8 <ferror@plt+0x16048>  // b.hs, b.nlast
  418988:	ldrb	w3, [x0]
  41898c:	cmp	w3, #0x5c
  418990:	b.ne	4189ac <ferror@plt+0x1603c>  // b.any
  418994:	ldrb	w3, [x0, #1]
  418998:	cmp	w3, #0x5c
  41899c:	b.eq	4189a8 <ferror@plt+0x16038>  // b.none
  4189a0:	cmp	w3, #0x22
  4189a4:	b.ne	4189ac <ferror@plt+0x1603c>  // b.any
  4189a8:	add	x0, x0, #0x1
  4189ac:	ldrb	w3, [x0], #1
  4189b0:	strb	w3, [x2], #1
  4189b4:	b	418980 <ferror@plt+0x16010>
  4189b8:	strb	wzr, [x2]
  4189bc:	mov	w1, #0x0                   	// #0
  4189c0:	mov	x21, #0x0                   	// #0
  4189c4:	mov	x0, x19
  4189c8:	bl	4167a0 <ferror@plt+0x13e30>
  4189cc:	mov	x0, x19
  4189d0:	bl	416cb8 <ferror@plt+0x14348>
  4189d4:	cbz	x20, 418928 <ferror@plt+0x15fb8>
  4189d8:	ldr	x22, [x20, #8]
  4189dc:	mov	x1, x23
  4189e0:	mov	x0, x22
  4189e4:	bl	4026d0 <strcmp@plt>
  4189e8:	ldr	x1, [x20]
  4189ec:	cbnz	w0, 418afc <ferror@plt+0x1618c>
  4189f0:	cbnz	x21, 418b08 <ferror@plt+0x16198>
  4189f4:	str	x1, [x19, #1400]
  4189f8:	mov	x1, x22
  4189fc:	mov	x0, x19
  418a00:	bl	41f83c <ferror@plt+0x1cecc>
  418a04:	mov	x21, x0
  418a08:	cbz	x0, 418b4c <ferror@plt+0x161dc>
  418a0c:	ldr	x1, [x19, #1024]
  418a10:	cbz	x1, 418a1c <ferror@plt+0x160ac>
  418a14:	mov	x0, x19
  418a18:	blr	x1
  418a1c:	ldrb	w0, [x21, #18]
  418a20:	tbz	w0, #1, 418a5c <ferror@plt+0x160ec>
  418a24:	ldr	x3, [x19, #944]
  418a28:	cbz	x3, 418a3c <ferror@plt+0x160cc>
  418a2c:	ldr	w1, [x19, #48]
  418a30:	mov	x2, x21
  418a34:	mov	x0, x19
  418a38:	blr	x3
  418a3c:	ldrb	w0, [x19, #1151]
  418a40:	cbz	w0, 418a54 <ferror@plt+0x160e4>
  418a44:	mov	x1, x21
  418a48:	mov	x0, x19
  418a4c:	mov	x2, #0x0                   	// #0
  418a50:	bl	4257b8 <ferror@plt+0x22e48>
  418a54:	mov	x0, x21
  418a58:	bl	426384 <ferror@plt+0x23a14>
  418a5c:	ldrb	w0, [x20, #28]
  418a60:	tbnz	w0, #2, 418b4c <ferror@plt+0x161dc>
  418a64:	ldr	x21, [x20, #16]
  418a68:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x17198>
  418a6c:	add	x1, x1, #0xaa8
  418a70:	mov	x0, x21
  418a74:	bl	402890 <strcspn@plt>
  418a78:	sxtw	x23, w0
  418a7c:	mov	x1, x21
  418a80:	mov	w2, w23
  418a84:	mov	x0, x19
  418a88:	bl	41ea70 <ferror@plt+0x1c100>
  418a8c:	mov	x22, x0
  418a90:	ldr	x21, [x20, #16]
  418a94:	mov	w1, #0xa                   	// #10
  418a98:	add	x21, x21, x23
  418a9c:	mov	x0, x21
  418aa0:	bl	402760 <strchr@plt>
  418aa4:	mov	x1, x21
  418aa8:	sub	x2, x0, x21
  418aac:	mov	w3, #0x1                   	// #1
  418ab0:	mov	x0, x19
  418ab4:	bl	4186b8 <ferror@plt+0x15d48>
  418ab8:	mov	x21, x0
  418abc:	cbz	x0, 418b68 <ferror@plt+0x161f8>
  418ac0:	mov	x0, x19
  418ac4:	bl	41f118 <ferror@plt+0x1c7a8>
  418ac8:	mov	w0, #0x1                   	// #1
  418acc:	strb	w0, [x21, #106]
  418ad0:	mov	x1, x22
  418ad4:	mov	x0, x19
  418ad8:	bl	426540 <ferror@plt+0x23bd0>
  418adc:	tst	w0, #0xff
  418ae0:	b.ne	418b10 <ferror@plt+0x161a0>  // b.any
  418ae4:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  418ae8:	add	x2, x2, #0xaac
  418aec:	mov	w1, #0x9a8                 	// #2472
  418af0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  418af4:	add	x0, x0, #0xabf
  418af8:	bl	402980 <ferror@plt+0x10>
  418afc:	mov	x21, x20
  418b00:	mov	x20, x1
  418b04:	b	4189d4 <ferror@plt+0x16064>
  418b08:	str	x1, [x21]
  418b0c:	b	4189f8 <ferror@plt+0x16088>
  418b10:	mov	x0, x19
  418b14:	bl	4187a8 <ferror@plt+0x15e38>
  418b18:	ldr	x2, [x22, #24]
  418b1c:	ldrb	w1, [x20, #28]
  418b20:	ldr	w0, [x20, #24]
  418b24:	str	w0, [x2, #8]
  418b28:	ubfx	x0, x1, #1, #1
  418b2c:	ubfx	x1, x1, #0, #1
  418b30:	ubfiz	w0, w0, #5, #3
  418b34:	ubfiz	w1, w1, #4, #4
  418b38:	orr	w0, w0, w1
  418b3c:	ldrb	w1, [x2, #19]
  418b40:	and	w1, w1, #0xffffffcf
  418b44:	orr	w0, w0, w1
  418b48:	strb	w0, [x2, #19]
  418b4c:	ldr	x0, [x20, #16]
  418b50:	bl	402730 <free@plt>
  418b54:	ldr	x0, [x20, #8]
  418b58:	bl	402730 <free@plt>
  418b5c:	mov	x0, x20
  418b60:	bl	402730 <free@plt>
  418b64:	b	418928 <ferror@plt+0x15fb8>
  418b68:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  418b6c:	mov	w1, #0x9ac                 	// #2476
  418b70:	add	x2, x2, #0xaac
  418b74:	b	418af0 <ferror@plt+0x16180>
  418b78:	stp	x29, x30, [sp, #-96]!
  418b7c:	mov	x29, sp
  418b80:	stp	x23, x24, [sp, #48]
  418b84:	mov	w23, w2
  418b88:	ldr	w2, [x1]
  418b8c:	ldr	x1, [x1, #8]
  418b90:	stp	x19, x20, [sp, #16]
  418b94:	mov	x19, x0
  418b98:	sub	w0, w2, #0x1
  418b9c:	stp	x21, x22, [sp, #32]
  418ba0:	add	x0, x0, #0xf
  418ba4:	stp	x25, x26, [sp, #64]
  418ba8:	and	x0, x0, #0x1fffffff0
  418bac:	mov	w2, w2
  418bb0:	stp	x27, x28, [sp, #80]
  418bb4:	sub	sp, sp, x0
  418bb8:	mov	x21, sp
  418bbc:	ldrb	w0, [x1]
  418bc0:	sub	x2, x2, #0x1
  418bc4:	mov	x20, x21
  418bc8:	cmp	w0, #0x4c
  418bcc:	cset	x0, eq  // eq = none
  418bd0:	add	x0, x0, #0x1
  418bd4:	add	x0, x1, x0
  418bd8:	add	x1, x1, x2
  418bdc:	cmp	x0, x1
  418be0:	b.cs	418c14 <ferror@plt+0x162a4>  // b.hs, b.nlast
  418be4:	ldrb	w2, [x0]
  418be8:	cmp	w2, #0x5c
  418bec:	b.ne	418c08 <ferror@plt+0x16298>  // b.any
  418bf0:	ldrb	w2, [x0, #1]
  418bf4:	cmp	w2, #0x5c
  418bf8:	b.eq	418c04 <ferror@plt+0x16294>  // b.none
  418bfc:	cmp	w2, #0x22
  418c00:	b.ne	418c08 <ferror@plt+0x16298>  // b.any
  418c04:	add	x0, x0, #0x1
  418c08:	ldrb	w2, [x0], #1
  418c0c:	strb	w2, [x20], #1
  418c10:	b	418bdc <ferror@plt+0x1626c>
  418c14:	mov	w0, #0xa                   	// #10
  418c18:	strb	w0, [x20]
  418c1c:	mov	x1, #0x38                  	// #56
  418c20:	mov	x0, #0x1                   	// #1
  418c24:	ldr	x26, [x19, #136]
  418c28:	ldr	x25, [x19, #448]
  418c2c:	ldr	x24, [x19, #488]
  418c30:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  418c34:	str	x0, [x19, #136]
  418c38:	mov	x1, x21
  418c3c:	sub	x2, x20, x21
  418c40:	mov	x0, x19
  418c44:	mov	w3, #0x1                   	// #1
  418c48:	bl	4186b8 <ferror@plt+0x15d48>
  418c4c:	ldr	x0, [x19]
  418c50:	ldr	x1, [x0, #72]
  418c54:	cbz	x1, 418c60 <ferror@plt+0x162f0>
  418c58:	ldr	x1, [x1, #80]
  418c5c:	str	x1, [x0, #80]
  418c60:	mov	w0, #0x1                   	// #1
  418c64:	strb	w0, [x19, #16]
  418c68:	mov	w0, #0x53                  	// #83
  418c6c:	strb	w0, [x19, #156]
  418c70:	ldr	x0, [x19, #40]
  418c74:	strb	wzr, [x19, #21]
  418c78:	add	x21, x19, #0x98
  418c7c:	ldr	w0, [x0, #60]
  418c80:	str	w0, [x19, #48]
  418c84:	mov	x0, x19
  418c88:	bl	41f118 <ferror@plt+0x1c7a8>
  418c8c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  418c90:	add	x0, x0, #0xb60
  418c94:	add	x0, x0, #0x108
  418c98:	ldr	x20, [x19, #144]
  418c9c:	str	x0, [x19, #144]
  418ca0:	mov	x0, x19
  418ca4:	bl	417760 <ferror@plt+0x14df0>
  418ca8:	mov	x0, x19
  418cac:	mov	w1, #0x1                   	// #1
  418cb0:	bl	416e6c <ferror@plt+0x144fc>
  418cb4:	str	x20, [x19, #144]
  418cb8:	ldrb	w0, [x19, #156]
  418cbc:	cmp	w0, #0x51
  418cc0:	b.ne	418db0 <ferror@plt+0x16440>  // b.any
  418cc4:	mov	x0, #0x4b0                 	// #1200
  418cc8:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  418ccc:	mov	x20, x0
  418cd0:	mov	w22, #0x32                  	// #50
  418cd4:	ldp	x0, x1, [x19, #152]
  418cd8:	mov	x27, #0x18                  	// #24
  418cdc:	stp	x0, x1, [x20]
  418ce0:	ldr	x0, [x21, #16]
  418ce4:	mov	x21, #0x0                   	// #0
  418ce8:	str	x0, [x20, #16]
  418cec:	mov	x0, x19
  418cf0:	bl	4287a8 <ferror@plt+0x25e38>
  418cf4:	madd	x4, x21, x27, x27
  418cf8:	add	x28, x21, #0x1
  418cfc:	ldp	x2, x3, [x0]
  418d00:	add	x1, x20, x4
  418d04:	add	w21, w21, #0x2
  418d08:	stp	x2, x3, [x1]
  418d0c:	ldr	x0, [x0, #16]
  418d10:	str	x0, [x1, #16]
  418d14:	ldrh	w0, [x1, #6]
  418d18:	str	w23, [x20, x4]
  418d1c:	orr	w0, w0, #0x400
  418d20:	strh	w0, [x1, #6]
  418d24:	ldrb	w0, [x1, #4]
  418d28:	cmp	w0, #0x52
  418d2c:	b.ne	418d88 <ferror@plt+0x16418>  // b.any
  418d30:	ldr	x0, [x19]
  418d34:	str	xzr, [x0, #80]
  418d38:	mov	x0, x19
  418d3c:	bl	4187a8 <ferror@plt+0x15e38>
  418d40:	ldr	x0, [x19, #136]
  418d44:	bl	402730 <free@plt>
  418d48:	str	x26, [x19, #136]
  418d4c:	str	x25, [x19, #448]
  418d50:	mov	w3, w21
  418d54:	str	x24, [x19, #488]
  418d58:	mov	x2, x20
  418d5c:	mov	x0, x19
  418d60:	mov	x1, #0x0                   	// #0
  418d64:	bl	425d34 <ferror@plt+0x233c4>
  418d68:	mov	sp, x29
  418d6c:	ldp	x19, x20, [sp, #16]
  418d70:	ldp	x21, x22, [sp, #32]
  418d74:	ldp	x23, x24, [sp, #48]
  418d78:	ldp	x25, x26, [sp, #64]
  418d7c:	ldp	x27, x28, [sp, #80]
  418d80:	ldp	x29, x30, [sp], #96
  418d84:	ret
  418d88:	cmp	w22, w21
  418d8c:	b.ne	418da8 <ferror@plt+0x16438>  // b.any
  418d90:	add	w22, w22, w22, lsl #1
  418d94:	mov	x0, x20
  418d98:	asr	w22, w22, #1
  418d9c:	smull	x1, w22, w27
  418da0:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  418da4:	mov	x20, x0
  418da8:	mov	x21, x28
  418dac:	b	418cec <ferror@plt+0x1637c>
  418db0:	mov	x0, #0x18                  	// #24
  418db4:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  418db8:	mov	x20, x0
  418dbc:	ldp	x0, x1, [x19, #152]
  418dc0:	ldr	x3, [x19, #904]
  418dc4:	stp	x0, x1, [x20]
  418dc8:	ldr	x0, [x21, #16]
  418dcc:	str	x0, [x20, #16]
  418dd0:	cbz	x3, 418de4 <ferror@plt+0x16474>
  418dd4:	ldr	x1, [x19, #448]
  418dd8:	mov	x0, x19
  418ddc:	mov	w2, #0x0                   	// #0
  418de0:	blr	x3
  418de4:	mov	w21, #0x1                   	// #1
  418de8:	b	418d30 <ferror@plt+0x163c0>
  418dec:	stp	x29, x30, [sp, #-32]!
  418df0:	mov	x29, sp
  418df4:	stp	x19, x20, [sp, #16]
  418df8:	mov	x19, x0
  418dfc:	mov	w20, w1
  418e00:	bl	41666c <ferror@plt+0x13cfc>
  418e04:	mov	w1, #0x53                  	// #83
  418e08:	strb	w1, [x19, #156]
  418e0c:	cbz	x0, 418e30 <ferror@plt+0x164c0>
  418e10:	add	x1, x0, #0x8
  418e14:	mov	w2, w20
  418e18:	mov	x0, x19
  418e1c:	bl	418b78 <ferror@plt+0x16208>
  418e20:	mov	w0, #0x1                   	// #1
  418e24:	ldp	x19, x20, [sp, #16]
  418e28:	ldp	x29, x30, [sp], #32
  418e2c:	ret
  418e30:	mov	x0, x19
  418e34:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  418e38:	mov	w1, #0x3                   	// #3
  418e3c:	add	x2, x2, #0xad9
  418e40:	bl	419440 <ferror@plt+0x16ad0>
  418e44:	mov	w0, #0x0                   	// #0
  418e48:	b	418e24 <ferror@plt+0x164b4>
  418e4c:	stp	x29, x30, [sp, #-32]!
  418e50:	mov	x29, sp
  418e54:	stp	x19, x20, [sp, #16]
  418e58:	mov	x19, x0
  418e5c:	mov	w20, w1
  418e60:	mov	x1, x2
  418e64:	mov	x2, x3
  418e68:	mov	w3, #0x1                   	// #1
  418e6c:	bl	4186b8 <ferror@plt+0x15d48>
  418e70:	mov	w0, #0x1                   	// #1
  418e74:	strb	w0, [x19, #16]
  418e78:	mov	w0, #0x53                  	// #83
  418e7c:	strb	w0, [x19, #156]
  418e80:	ldr	x0, [x19, #40]
  418e84:	strb	wzr, [x19, #21]
  418e88:	ldr	w0, [x0, #60]
  418e8c:	str	w0, [x19, #48]
  418e90:	mov	x0, x19
  418e94:	bl	41f118 <ferror@plt+0x1c7a8>
  418e98:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x17198>
  418e9c:	add	x1, x1, #0xb60
  418ea0:	mov	w0, #0x18                  	// #24
  418ea4:	smaddl	x20, w20, w0, x1
  418ea8:	ldrb	w0, [x19, #1160]
  418eac:	str	x20, [x19, #144]
  418eb0:	cbz	w0, 418ebc <ferror@plt+0x1654c>
  418eb4:	mov	x0, x19
  418eb8:	bl	4164ac <ferror@plt+0x13b3c>
  418ebc:	ldr	x0, [x19, #144]
  418ec0:	ldr	x1, [x0]
  418ec4:	mov	x0, x19
  418ec8:	blr	x1
  418ecc:	mov	x0, x19
  418ed0:	mov	w1, #0x1                   	// #1
  418ed4:	bl	416e6c <ferror@plt+0x144fc>
  418ed8:	mov	x0, x19
  418edc:	ldp	x19, x20, [sp, #16]
  418ee0:	ldp	x29, x30, [sp], #32
  418ee4:	b	4187a8 <ferror@plt+0x15e38>
  418ee8:	stp	x29, x30, [sp, #-48]!
  418eec:	mov	x29, sp
  418ef0:	stp	x19, x20, [sp, #16]
  418ef4:	stp	x21, x22, [sp, #32]
  418ef8:	mov	x21, x1
  418efc:	mov	x22, x0
  418f00:	mov	x0, x1
  418f04:	bl	402330 <strlen@plt>
  418f08:	mov	x19, x0
  418f0c:	add	x0, x0, #0x12
  418f10:	and	x0, x0, #0xfffffffffffffff0
  418f14:	mov	x2, x19
  418f18:	sub	sp, sp, x0
  418f1c:	mov	x1, x21
  418f20:	mov	x20, sp
  418f24:	mov	x0, x20
  418f28:	bl	4022e0 <memcpy@plt>
  418f2c:	mov	x0, x21
  418f30:	mov	w1, #0x3d                  	// #61
  418f34:	bl	402760 <strchr@plt>
  418f38:	mov	w2, #0x20                  	// #32
  418f3c:	cbz	x0, 418f78 <ferror@plt+0x16608>
  418f40:	sub	x1, x0, x21
  418f44:	strb	w2, [x20, x1]
  418f48:	mov	w0, #0xa                   	// #10
  418f4c:	mov	x3, x19
  418f50:	mov	x2, x20
  418f54:	mov	w1, #0x0                   	// #0
  418f58:	strb	w0, [x20, x19]
  418f5c:	mov	x0, x22
  418f60:	bl	418e4c <ferror@plt+0x164dc>
  418f64:	mov	sp, x29
  418f68:	ldp	x19, x20, [sp, #16]
  418f6c:	ldp	x21, x22, [sp, #32]
  418f70:	ldp	x29, x30, [sp], #48
  418f74:	ret
  418f78:	add	x0, x19, #0x1
  418f7c:	strb	w2, [x20, x19]
  418f80:	mov	w1, #0x31                  	// #49
  418f84:	add	x19, x19, #0x2
  418f88:	strb	w1, [x20, x0]
  418f8c:	b	418f48 <ferror@plt+0x165d8>
  418f90:	stp	x29, x30, [sp, #-272]!
  418f94:	mov	x29, sp
  418f98:	stp	x19, x20, [sp, #16]
  418f9c:	mov	x20, x0
  418fa0:	mov	x0, x1
  418fa4:	add	x1, sp, #0x110
  418fa8:	stp	x1, x1, [sp, #64]
  418fac:	add	x1, sp, #0xe0
  418fb0:	str	x1, [sp, #80]
  418fb4:	mov	w1, #0xffffffd0            	// #-48
  418fb8:	str	w1, [sp, #88]
  418fbc:	mov	w1, #0xffffff80            	// #-128
  418fc0:	str	w1, [sp, #92]
  418fc4:	add	x1, sp, #0x20
  418fc8:	stp	x2, x3, [sp, #224]
  418fcc:	ldp	x2, x3, [sp, #64]
  418fd0:	stp	x2, x3, [sp, #32]
  418fd4:	ldp	x2, x3, [sp, #80]
  418fd8:	stp	x2, x3, [sp, #48]
  418fdc:	str	q0, [sp, #96]
  418fe0:	str	q1, [sp, #112]
  418fe4:	str	q2, [sp, #128]
  418fe8:	str	q3, [sp, #144]
  418fec:	str	q4, [sp, #160]
  418ff0:	str	q5, [sp, #176]
  418ff4:	str	q6, [sp, #192]
  418ff8:	str	q7, [sp, #208]
  418ffc:	stp	x4, x5, [sp, #240]
  419000:	stp	x6, x7, [sp, #256]
  419004:	bl	43a114 <_obstack_memory_used@@Base+0x2ac>
  419008:	mov	x1, x0
  41900c:	mov	x19, x0
  419010:	mov	x0, x20
  419014:	bl	418ee8 <ferror@plt+0x16578>
  419018:	mov	x0, x19
  41901c:	bl	402730 <free@plt>
  419020:	ldp	x19, x20, [sp, #16]
  419024:	ldp	x29, x30, [sp], #272
  419028:	ret
  41902c:	stp	x29, x30, [sp, #-48]!
  419030:	mov	x29, sp
  419034:	stp	x19, x20, [sp, #16]
  419038:	mov	x20, x1
  41903c:	str	x21, [sp, #32]
  419040:	mov	x21, x0
  419044:	mov	x0, x1
  419048:	bl	402330 <strlen@plt>
  41904c:	mov	x19, x0
  419050:	add	x0, x0, #0x10
  419054:	and	x0, x0, #0xfffffffffffffff0
  419058:	mov	x2, x19
  41905c:	sub	sp, sp, x0
  419060:	mov	x1, x20
  419064:	mov	x4, sp
  419068:	mov	x0, x4
  41906c:	bl	4022e0 <memcpy@plt>
  419070:	mov	x4, x0
  419074:	mov	w0, #0xa                   	// #10
  419078:	mov	x3, x19
  41907c:	mov	x2, x4
  419080:	mov	w1, #0x0                   	// #0
  419084:	strb	w0, [x4, x19]
  419088:	mov	x0, x21
  41908c:	bl	418e4c <ferror@plt+0x164dc>
  419090:	mov	sp, x29
  419094:	ldp	x19, x20, [sp, #16]
  419098:	ldr	x21, [sp, #32]
  41909c:	ldp	x29, x30, [sp], #48
  4190a0:	ret
  4190a4:	stp	x29, x30, [sp, #-48]!
  4190a8:	mov	x29, sp
  4190ac:	stp	x19, x20, [sp, #16]
  4190b0:	mov	x20, x1
  4190b4:	str	x21, [sp, #32]
  4190b8:	mov	x21, x0
  4190bc:	mov	x0, x1
  4190c0:	bl	402330 <strlen@plt>
  4190c4:	mov	x19, x0
  4190c8:	add	x0, x0, #0x10
  4190cc:	and	x0, x0, #0xfffffffffffffff0
  4190d0:	mov	x2, x19
  4190d4:	sub	sp, sp, x0
  4190d8:	mov	x1, x20
  4190dc:	mov	x4, sp
  4190e0:	mov	x0, x4
  4190e4:	bl	4022e0 <memcpy@plt>
  4190e8:	mov	x4, x0
  4190ec:	mov	w0, #0xa                   	// #10
  4190f0:	mov	x3, x19
  4190f4:	mov	x2, x4
  4190f8:	mov	w1, #0x7                   	// #7
  4190fc:	strb	w0, [x4, x19]
  419100:	mov	x0, x21
  419104:	bl	418e4c <ferror@plt+0x164dc>
  419108:	mov	sp, x29
  41910c:	ldp	x19, x20, [sp, #16]
  419110:	ldr	x21, [sp, #32]
  419114:	ldp	x29, x30, [sp], #48
  419118:	ret
  41911c:	stp	x29, x30, [sp, #-64]!
  419120:	mov	x29, sp
  419124:	stp	x19, x20, [sp, #16]
  419128:	stp	x21, x22, [sp, #32]
  41912c:	mov	x21, x1
  419130:	mov	x22, x0
  419134:	mov	x0, x1
  419138:	str	x23, [sp, #48]
  41913c:	mov	w23, w2
  419140:	bl	402330 <strlen@plt>
  419144:	mov	w1, #0x3d                  	// #61
  419148:	mov	x19, x0
  41914c:	mov	x0, x21
  419150:	bl	402760 <strchr@plt>
  419154:	mov	x20, x0
  419158:	add	x0, x19, #0x11
  41915c:	and	x0, x0, #0xfffffffffffffff0
  419160:	mov	x2, x19
  419164:	sub	sp, sp, x0
  419168:	mov	x1, x21
  41916c:	mov	x4, sp
  419170:	mov	x0, x4
  419174:	bl	4022e0 <memcpy@plt>
  419178:	mov	x4, x0
  41917c:	cbz	x20, 419198 <ferror@plt+0x16828>
  419180:	sub	x20, x20, x21
  419184:	mov	w0, #0x28                  	// #40
  419188:	strb	w0, [x4, x20]
  41918c:	mov	w0, #0x29                  	// #41
  419190:	strb	w0, [x4, x19]
  419194:	add	x19, x19, #0x1
  419198:	mov	w0, #0xa                   	// #10
  41919c:	strb	w0, [x4, x19]
  4191a0:	mov	x3, x19
  4191a4:	mov	w1, w23
  4191a8:	mov	x0, x22
  4191ac:	mov	x2, x4
  4191b0:	bl	418e4c <ferror@plt+0x164dc>
  4191b4:	mov	sp, x29
  4191b8:	ldp	x19, x20, [sp, #16]
  4191bc:	ldp	x21, x22, [sp, #32]
  4191c0:	ldr	x23, [sp, #48]
  4191c4:	ldp	x29, x30, [sp], #64
  4191c8:	ret
  4191cc:	mov	w2, #0x10                  	// #16
  4191d0:	b	41911c <ferror@plt+0x167ac>
  4191d4:	mov	w2, #0x11                  	// #17
  4191d8:	b	41911c <ferror@plt+0x167ac>
  4191dc:	stp	x29, x30, [sp, #-48]!
  4191e0:	mov	x29, sp
  4191e4:	stp	x19, x20, [sp, #16]
  4191e8:	adrp	x19, 451000 <_obstack_memory_used@@Base+0x17198>
  4191ec:	add	x19, x19, #0xb60
  4191f0:	str	x21, [sp, #32]
  4191f4:	mov	x21, x0
  4191f8:	mov	w20, #0x0                   	// #0
  4191fc:	ldrh	w2, [x19, #16]
  419200:	mov	x0, x21
  419204:	ldr	x1, [x19, #8]
  419208:	add	x19, x19, #0x18
  41920c:	bl	41ea70 <ferror@plt+0x1c100>
  419210:	ubfiz	w1, w20, #1, #7
  419214:	add	w20, w20, #0x1
  419218:	orr	w1, w1, #0x1
  41921c:	strb	w1, [x0, #16]
  419220:	cmp	w20, #0x13
  419224:	b.ne	4191fc <ferror@plt+0x1688c>  // b.any
  419228:	ldp	x19, x20, [sp, #16]
  41922c:	ldr	x21, [sp, #32]
  419230:	ldp	x29, x30, [sp], #48
  419234:	ret
  419238:	b	4160fc <ferror@plt+0x1378c>
  41923c:	stp	x29, x30, [sp, #-64]!
  419240:	mov	x29, sp
  419244:	stp	x23, x24, [sp, #48]
  419248:	ldr	x24, [x0, #1000]
  41924c:	stp	x19, x20, [sp, #16]
  419250:	stp	x21, x22, [sp, #32]
  419254:	cbnz	x24, 419270 <ferror@plt+0x16900>
  419258:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  41925c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  419260:	add	x2, x2, #0xde0
  419264:	add	x0, x0, #0xdf2
  419268:	mov	w1, #0x29                  	// #41
  41926c:	bl	402980 <ferror@plt+0x10>
  419270:	mov	x19, x0
  419274:	mov	w20, w1
  419278:	mov	w21, w2
  41927c:	mov	x22, x3
  419280:	mov	x1, x4
  419284:	mov	x23, x5
  419288:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  41928c:	add	x0, x0, #0xe08
  419290:	bl	402720 <dgettext@plt>
  419294:	mov	x4, x0
  419298:	mov	x5, x23
  41929c:	mov	x3, x22
  4192a0:	mov	w2, w21
  4192a4:	mov	w1, w20
  4192a8:	mov	x0, x19
  4192ac:	mov	x16, x24
  4192b0:	ldp	x19, x20, [sp, #16]
  4192b4:	ldp	x21, x22, [sp, #32]
  4192b8:	ldp	x23, x24, [sp, #48]
  4192bc:	ldp	x29, x30, [sp], #64
  4192c0:	br	x16
  4192c4:	stp	x29, x30, [sp, #-240]!
  4192c8:	mov	x29, sp
  4192cc:	stp	x19, x20, [sp, #16]
  4192d0:	mov	w20, w1
  4192d4:	mov	x19, x0
  4192d8:	stp	x21, x22, [sp, #32]
  4192dc:	mov	w21, w2
  4192e0:	mov	x22, x3
  4192e4:	ldr	x1, [x0, #40]
  4192e8:	str	x23, [sp, #48]
  4192ec:	mov	x23, x4
  4192f0:	ldrb	w0, [x0, #1160]
  4192f4:	cbz	w0, 419358 <ferror@plt+0x169e8>
  4192f8:	ldrb	w0, [x19, #16]
  4192fc:	cbz	w0, 419350 <ferror@plt+0x169e0>
  419300:	ldr	w2, [x19, #48]
  419304:	add	x0, sp, #0x48
  419308:	mov	x3, #0x0                   	// #0
  41930c:	bl	424c1c <ferror@plt+0x222ac>
  419310:	mov	x5, x23
  419314:	mov	x4, x22
  419318:	add	x3, sp, #0x48
  41931c:	mov	w2, w21
  419320:	mov	w1, w20
  419324:	mov	x0, x19
  419328:	bl	41923c <ferror@plt+0x168cc>
  41932c:	mov	w19, w0
  419330:	add	x0, sp, #0x48
  419334:	bl	4249b0 <ferror@plt+0x22040>
  419338:	mov	w0, w19
  41933c:	ldp	x19, x20, [sp, #16]
  419340:	ldp	x21, x22, [sp, #32]
  419344:	ldr	x23, [sp, #48]
  419348:	ldp	x29, x30, [sp], #240
  41934c:	ret
  419350:	ldr	w2, [x1, #60]
  419354:	b	419304 <ferror@plt+0x16994>
  419358:	ldr	x2, [x19, #488]
  41935c:	ldr	x0, [x19, #448]
  419360:	ldr	x2, [x2, #16]
  419364:	cmp	x0, x2
  419368:	b.eq	419374 <ferror@plt+0x16a04>  // b.none
  41936c:	ldur	w2, [x0, #-24]
  419370:	b	419304 <ferror@plt+0x16994>
  419374:	mov	w2, #0x0                   	// #0
  419378:	b	419304 <ferror@plt+0x16994>
  41937c:	stp	x29, x30, [sp, #-240]!
  419380:	mov	x29, sp
  419384:	stp	x19, x20, [sp, #16]
  419388:	mov	x19, x0
  41938c:	ldr	x0, [x0, #1000]
  419390:	stp	x21, x22, [sp, #32]
  419394:	stp	x23, x24, [sp, #48]
  419398:	cbnz	x0, 4193b4 <ferror@plt+0x16a44>
  41939c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  4193a0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  4193a4:	add	x2, x2, #0xe0f
  4193a8:	add	x0, x0, #0xdf2
  4193ac:	mov	w1, #0x9f                  	// #159
  4193b0:	bl	402980 <ferror@plt+0x10>
  4193b4:	mov	w21, w1
  4193b8:	mov	w22, w2
  4193bc:	ldr	x1, [x19, #40]
  4193c0:	mov	w2, w3
  4193c4:	mov	w20, w4
  4193c8:	mov	x24, x5
  4193cc:	mov	x23, x6
  4193d0:	add	x0, sp, #0x48
  4193d4:	mov	x3, #0x0                   	// #0
  4193d8:	bl	424c1c <ferror@plt+0x222ac>
  4193dc:	cbz	w20, 4193ec <ferror@plt+0x16a7c>
  4193e0:	mov	w1, w20
  4193e4:	add	x0, sp, #0x48
  4193e8:	bl	424b50 <ferror@plt+0x221e0>
  4193ec:	ldr	x20, [x19, #1000]
  4193f0:	mov	x1, x24
  4193f4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  4193f8:	add	x0, x0, #0xe08
  4193fc:	bl	402720 <dgettext@plt>
  419400:	mov	x4, x0
  419404:	mov	x5, x23
  419408:	add	x3, sp, #0x48
  41940c:	mov	w2, w22
  419410:	mov	w1, w21
  419414:	mov	x0, x19
  419418:	blr	x20
  41941c:	mov	w19, w0
  419420:	add	x0, sp, #0x48
  419424:	bl	4249b0 <ferror@plt+0x22040>
  419428:	mov	w0, w19
  41942c:	ldp	x19, x20, [sp, #16]
  419430:	ldp	x21, x22, [sp, #32]
  419434:	ldp	x23, x24, [sp, #48]
  419438:	ldp	x29, x30, [sp], #240
  41943c:	ret
  419440:	stp	x29, x30, [sp, #-224]!
  419444:	mov	x29, sp
  419448:	stp	x3, x4, [sp, #184]
  41944c:	add	x3, sp, #0xe0
  419450:	add	x4, sp, #0x10
  419454:	stp	x3, x3, [sp, #16]
  419458:	add	x3, sp, #0xb0
  41945c:	str	x3, [sp, #32]
  419460:	mov	w3, #0xffffffd8            	// #-40
  419464:	str	w3, [sp, #40]
  419468:	mov	w3, #0xffffff80            	// #-128
  41946c:	str	w3, [sp, #44]
  419470:	mov	x3, x2
  419474:	mov	w2, #0x0                   	// #0
  419478:	str	q0, [sp, #48]
  41947c:	str	q1, [sp, #64]
  419480:	str	q2, [sp, #80]
  419484:	str	q3, [sp, #96]
  419488:	str	q4, [sp, #112]
  41948c:	str	q5, [sp, #128]
  419490:	str	q6, [sp, #144]
  419494:	str	q7, [sp, #160]
  419498:	stp	x5, x6, [sp, #200]
  41949c:	str	x7, [sp, #216]
  4194a0:	bl	4192c4 <ferror@plt+0x16954>
  4194a4:	ldp	x29, x30, [sp], #224
  4194a8:	ret
  4194ac:	stp	x29, x30, [sp, #-224]!
  4194b0:	mov	x29, sp
  4194b4:	stp	x3, x4, [sp, #184]
  4194b8:	add	x3, sp, #0xe0
  4194bc:	add	x4, sp, #0x10
  4194c0:	stp	x3, x3, [sp, #16]
  4194c4:	add	x3, sp, #0xb0
  4194c8:	str	x3, [sp, #32]
  4194cc:	mov	w3, #0xffffffd8            	// #-40
  4194d0:	str	w3, [sp, #40]
  4194d4:	mov	w3, #0xffffff80            	// #-128
  4194d8:	str	w3, [sp, #44]
  4194dc:	mov	x3, x2
  4194e0:	mov	w2, w1
  4194e4:	mov	w1, #0x0                   	// #0
  4194e8:	str	q0, [sp, #48]
  4194ec:	str	q1, [sp, #64]
  4194f0:	str	q2, [sp, #80]
  4194f4:	str	q3, [sp, #96]
  4194f8:	str	q4, [sp, #112]
  4194fc:	str	q5, [sp, #128]
  419500:	str	q6, [sp, #144]
  419504:	str	q7, [sp, #160]
  419508:	stp	x5, x6, [sp, #200]
  41950c:	str	x7, [sp, #216]
  419510:	bl	4192c4 <ferror@plt+0x16954>
  419514:	ldp	x29, x30, [sp], #224
  419518:	ret
  41951c:	stp	x29, x30, [sp, #-224]!
  419520:	mov	x29, sp
  419524:	stp	x3, x4, [sp, #184]
  419528:	add	x3, sp, #0xe0
  41952c:	add	x4, sp, #0x10
  419530:	stp	x3, x3, [sp, #16]
  419534:	add	x3, sp, #0xb0
  419538:	str	x3, [sp, #32]
  41953c:	mov	w3, #0xffffffd8            	// #-40
  419540:	str	w3, [sp, #40]
  419544:	mov	w3, #0xffffff80            	// #-128
  419548:	str	w3, [sp, #44]
  41954c:	mov	x3, x2
  419550:	mov	w2, w1
  419554:	mov	w1, #0x2                   	// #2
  419558:	str	q0, [sp, #48]
  41955c:	str	q1, [sp, #64]
  419560:	str	q2, [sp, #80]
  419564:	str	q3, [sp, #96]
  419568:	str	q4, [sp, #112]
  41956c:	str	q5, [sp, #128]
  419570:	str	q6, [sp, #144]
  419574:	str	q7, [sp, #160]
  419578:	stp	x5, x6, [sp, #200]
  41957c:	str	x7, [sp, #216]
  419580:	bl	4192c4 <ferror@plt+0x16954>
  419584:	ldp	x29, x30, [sp], #224
  419588:	ret
  41958c:	stp	x29, x30, [sp, #-224]!
  419590:	mov	x29, sp
  419594:	stp	x3, x4, [sp, #184]
  419598:	add	x3, sp, #0xe0
  41959c:	add	x4, sp, #0x10
  4195a0:	stp	x3, x3, [sp, #16]
  4195a4:	add	x3, sp, #0xb0
  4195a8:	str	x3, [sp, #32]
  4195ac:	mov	w3, #0xffffffd8            	// #-40
  4195b0:	str	w3, [sp, #40]
  4195b4:	mov	w3, #0xffffff80            	// #-128
  4195b8:	str	w3, [sp, #44]
  4195bc:	mov	x3, x2
  4195c0:	mov	w2, w1
  4195c4:	mov	w1, #0x1                   	// #1
  4195c8:	str	q0, [sp, #48]
  4195cc:	str	q1, [sp, #64]
  4195d0:	str	q2, [sp, #80]
  4195d4:	str	q3, [sp, #96]
  4195d8:	str	q4, [sp, #112]
  4195dc:	str	q5, [sp, #128]
  4195e0:	str	q6, [sp, #144]
  4195e4:	str	q7, [sp, #160]
  4195e8:	stp	x5, x6, [sp, #200]
  4195ec:	str	x7, [sp, #216]
  4195f0:	bl	4192c4 <ferror@plt+0x16954>
  4195f4:	ldp	x29, x30, [sp], #224
  4195f8:	ret
  4195fc:	stp	x29, x30, [sp, #-208]!
  419600:	mov	x29, sp
  419604:	stp	x5, x6, [sp, #184]
  419608:	add	x5, sp, #0xd0
  41960c:	add	x6, sp, #0x10
  419610:	stp	x5, x5, [sp, #16]
  419614:	add	x5, sp, #0xb0
  419618:	str	x5, [sp, #32]
  41961c:	mov	w5, #0xffffffe8            	// #-24
  419620:	str	w5, [sp, #40]
  419624:	mov	w5, #0xffffff80            	// #-128
  419628:	str	w5, [sp, #44]
  41962c:	mov	x5, x4
  419630:	mov	w4, w3
  419634:	mov	w3, w2
  419638:	mov	w2, #0x0                   	// #0
  41963c:	str	q0, [sp, #48]
  419640:	str	q1, [sp, #64]
  419644:	str	q2, [sp, #80]
  419648:	str	q3, [sp, #96]
  41964c:	str	q4, [sp, #112]
  419650:	str	q5, [sp, #128]
  419654:	str	q6, [sp, #144]
  419658:	str	q7, [sp, #160]
  41965c:	str	x7, [sp, #200]
  419660:	bl	41937c <ferror@plt+0x16a0c>
  419664:	ldp	x29, x30, [sp], #208
  419668:	ret
  41966c:	stp	x29, x30, [sp, #-208]!
  419670:	mov	x29, sp
  419674:	stp	x5, x6, [sp, #184]
  419678:	add	x5, sp, #0xd0
  41967c:	add	x6, sp, #0x10
  419680:	stp	x5, x5, [sp, #16]
  419684:	add	x5, sp, #0xb0
  419688:	str	x5, [sp, #32]
  41968c:	mov	w5, #0xffffffe8            	// #-24
  419690:	str	w5, [sp, #40]
  419694:	mov	w5, #0xffffff80            	// #-128
  419698:	str	w5, [sp, #44]
  41969c:	mov	x5, x4
  4196a0:	mov	w4, w3
  4196a4:	mov	w3, w2
  4196a8:	mov	w2, w1
  4196ac:	mov	w1, #0x0                   	// #0
  4196b0:	str	q0, [sp, #48]
  4196b4:	str	q1, [sp, #64]
  4196b8:	str	q2, [sp, #80]
  4196bc:	str	q3, [sp, #96]
  4196c0:	str	q4, [sp, #112]
  4196c4:	str	q5, [sp, #128]
  4196c8:	str	q6, [sp, #144]
  4196cc:	str	q7, [sp, #160]
  4196d0:	str	x7, [sp, #200]
  4196d4:	bl	41937c <ferror@plt+0x16a0c>
  4196d8:	ldp	x29, x30, [sp], #208
  4196dc:	ret
  4196e0:	stp	x29, x30, [sp, #-208]!
  4196e4:	mov	x29, sp
  4196e8:	stp	x5, x6, [sp, #184]
  4196ec:	add	x5, sp, #0xd0
  4196f0:	add	x6, sp, #0x10
  4196f4:	stp	x5, x5, [sp, #16]
  4196f8:	add	x5, sp, #0xb0
  4196fc:	str	x5, [sp, #32]
  419700:	mov	w5, #0xffffffe8            	// #-24
  419704:	str	w5, [sp, #40]
  419708:	mov	w5, #0xffffff80            	// #-128
  41970c:	str	w5, [sp, #44]
  419710:	mov	x5, x4
  419714:	mov	w4, w3
  419718:	mov	w3, w2
  41971c:	mov	w2, w1
  419720:	mov	w1, #0x2                   	// #2
  419724:	str	q0, [sp, #48]
  419728:	str	q1, [sp, #64]
  41972c:	str	q2, [sp, #80]
  419730:	str	q3, [sp, #96]
  419734:	str	q4, [sp, #112]
  419738:	str	q5, [sp, #128]
  41973c:	str	q6, [sp, #144]
  419740:	str	q7, [sp, #160]
  419744:	str	x7, [sp, #200]
  419748:	bl	41937c <ferror@plt+0x16a0c>
  41974c:	ldp	x29, x30, [sp], #208
  419750:	ret
  419754:	stp	x29, x30, [sp, #-208]!
  419758:	mov	x29, sp
  41975c:	stp	x5, x6, [sp, #184]
  419760:	add	x5, sp, #0xd0
  419764:	add	x6, sp, #0x10
  419768:	stp	x5, x5, [sp, #16]
  41976c:	add	x5, sp, #0xb0
  419770:	str	x5, [sp, #32]
  419774:	mov	w5, #0xffffffe8            	// #-24
  419778:	str	w5, [sp, #40]
  41977c:	mov	w5, #0xffffff80            	// #-128
  419780:	str	w5, [sp, #44]
  419784:	mov	x5, x4
  419788:	mov	w4, w3
  41978c:	mov	w3, w2
  419790:	mov	w2, w1
  419794:	mov	w1, #0x1                   	// #1
  419798:	str	q0, [sp, #48]
  41979c:	str	q1, [sp, #64]
  4197a0:	str	q2, [sp, #80]
  4197a4:	str	q3, [sp, #96]
  4197a8:	str	q4, [sp, #112]
  4197ac:	str	q5, [sp, #128]
  4197b0:	str	q6, [sp, #144]
  4197b4:	str	q7, [sp, #160]
  4197b8:	str	x7, [sp, #200]
  4197bc:	bl	41937c <ferror@plt+0x16a0c>
  4197c0:	ldp	x29, x30, [sp], #208
  4197c4:	ret
  4197c8:	stp	x29, x30, [sp, #-416]!
  4197cc:	mov	x29, sp
  4197d0:	stp	x19, x20, [sp, #16]
  4197d4:	mov	x19, x0
  4197d8:	mov	w20, w1
  4197dc:	str	q0, [sp, #256]
  4197e0:	add	x0, sp, #0x1a0
  4197e4:	str	q1, [sp, #272]
  4197e8:	str	q2, [sp, #288]
  4197ec:	str	q3, [sp, #304]
  4197f0:	str	q4, [sp, #320]
  4197f4:	str	q5, [sp, #336]
  4197f8:	str	q6, [sp, #352]
  4197fc:	str	q7, [sp, #368]
  419800:	stp	x4, x5, [sp, #384]
  419804:	stp	x6, x7, [sp, #400]
  419808:	ldr	x1, [x19, #40]
  41980c:	stp	x0, x0, [sp, #56]
  419810:	add	x0, sp, #0x180
  419814:	str	x0, [sp, #72]
  419818:	mov	w0, #0xffffffe0            	// #-32
  41981c:	str	w0, [sp, #80]
  419820:	mov	w0, #0xffffff80            	// #-128
  419824:	str	x21, [sp, #32]
  419828:	mov	x21, x3
  41982c:	mov	x3, #0x0                   	// #0
  419830:	str	w0, [sp, #84]
  419834:	add	x0, sp, #0x58
  419838:	bl	424c1c <ferror@plt+0x222ac>
  41983c:	add	x5, sp, #0x38
  419840:	mov	x4, x21
  419844:	add	x3, sp, #0x58
  419848:	mov	w1, w20
  41984c:	mov	w2, #0x0                   	// #0
  419850:	mov	x0, x19
  419854:	bl	41923c <ferror@plt+0x168cc>
  419858:	mov	w19, w0
  41985c:	add	x0, sp, #0x58
  419860:	bl	4249b0 <ferror@plt+0x22040>
  419864:	mov	w0, w19
  419868:	ldp	x19, x20, [sp, #16]
  41986c:	ldr	x21, [sp, #32]
  419870:	ldp	x29, x30, [sp], #416
  419874:	ret
  419878:	stp	x29, x30, [sp, #-208]!
  41987c:	mov	x29, sp
  419880:	stp	x4, x5, [sp, #176]
  419884:	add	x4, sp, #0xd0
  419888:	add	x5, sp, #0x10
  41988c:	stp	x4, x4, [sp, #16]
  419890:	add	x4, sp, #0xb0
  419894:	str	x4, [sp, #32]
  419898:	mov	w4, #0xffffffe0            	// #-32
  41989c:	str	w4, [sp, #40]
  4198a0:	mov	w4, #0xffffff80            	// #-128
  4198a4:	str	w4, [sp, #44]
  4198a8:	mov	x4, x3
  4198ac:	mov	x3, x2
  4198b0:	mov	w2, #0x0                   	// #0
  4198b4:	str	q0, [sp, #48]
  4198b8:	str	q1, [sp, #64]
  4198bc:	str	q2, [sp, #80]
  4198c0:	str	q3, [sp, #96]
  4198c4:	str	q4, [sp, #112]
  4198c8:	str	q5, [sp, #128]
  4198cc:	str	q6, [sp, #144]
  4198d0:	str	q7, [sp, #160]
  4198d4:	stp	x6, x7, [sp, #192]
  4198d8:	bl	41923c <ferror@plt+0x168cc>
  4198dc:	ldp	x29, x30, [sp], #208
  4198e0:	ret
  4198e4:	stp	x29, x30, [sp, #-48]!
  4198e8:	mov	x29, sp
  4198ec:	stp	x19, x20, [sp, #16]
  4198f0:	mov	w20, w1
  4198f4:	mov	x1, x2
  4198f8:	mov	x19, x0
  4198fc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  419900:	add	x0, x0, #0xe08
  419904:	str	x21, [sp, #32]
  419908:	bl	402720 <dgettext@plt>
  41990c:	mov	x21, x0
  419910:	bl	4028c0 <__errno_location@plt>
  419914:	ldr	w0, [x0]
  419918:	bl	43a098 <_obstack_memory_used@@Base+0x230>
  41991c:	mov	x4, x0
  419920:	mov	x3, x21
  419924:	mov	w1, w20
  419928:	mov	x0, x19
  41992c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  419930:	ldp	x19, x20, [sp, #16]
  419934:	add	x2, x2, #0xe28
  419938:	ldr	x21, [sp, #32]
  41993c:	ldp	x29, x30, [sp], #48
  419940:	b	419440 <ferror@plt+0x16ad0>
  419944:	stp	x29, x30, [sp, #-48]!
  419948:	mov	x29, sp
  41994c:	stp	x19, x20, [sp, #16]
  419950:	mov	x20, x0
  419954:	stp	x21, x22, [sp, #32]
  419958:	mov	w21, w1
  41995c:	mov	w22, w3
  419960:	ldrb	w0, [x2]
  419964:	cbnz	w0, 4199b8 <ferror@plt+0x17048>
  419968:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x17198>
  41996c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  419970:	add	x1, x1, #0xe2f
  419974:	add	x0, x0, #0xe08
  419978:	bl	402720 <dgettext@plt>
  41997c:	mov	x19, x0
  419980:	bl	4028c0 <__errno_location@plt>
  419984:	ldr	w0, [x0]
  419988:	bl	43a098 <_obstack_memory_used@@Base+0x230>
  41998c:	mov	x5, x0
  419990:	mov	x4, x19
  419994:	mov	w2, w22
  419998:	mov	w1, w21
  41999c:	mov	x0, x20
  4199a0:	ldp	x19, x20, [sp, #16]
  4199a4:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x17198>
  4199a8:	ldp	x21, x22, [sp, #32]
  4199ac:	add	x3, x3, #0xe28
  4199b0:	ldp	x29, x30, [sp], #48
  4199b4:	b	4197c8 <ferror@plt+0x16e58>
  4199b8:	mov	x19, x2
  4199bc:	b	419980 <ferror@plt+0x17010>
  4199c0:	mov	x7, x0
  4199c4:	cmp	x2, #0x2
  4199c8:	b.ne	419a04 <ferror@plt+0x17094>  // b.any
  4199cc:	ldrb	w3, [x1]
  4199d0:	and	w0, w3, #0xffffffdf
  4199d4:	cmp	w0, #0x44
  4199d8:	b.ne	419a04 <ferror@plt+0x17094>  // b.any
  4199dc:	ldrb	w0, [x1, #1]
  4199e0:	cmp	w0, #0x64
  4199e4:	b.eq	419a50 <ferror@plt+0x170e0>  // b.none
  4199e8:	b.hi	419a14 <ferror@plt+0x170a4>  // b.pmore
  4199ec:	cmp	w0, #0x46
  4199f0:	b.eq	419a40 <ferror@plt+0x170d0>  // b.none
  4199f4:	cmp	w0, #0x4c
  4199f8:	b.eq	419a68 <ferror@plt+0x170f8>  // b.none
  4199fc:	cmp	w0, #0x44
  419a00:	b.eq	419a5c <ferror@plt+0x170ec>  // b.none
  419a04:	ldrb	w16, [x7, #1163]
  419a08:	cbnz	w16, 419ae8 <ferror@plt+0x17178>
  419a0c:	mov	x5, x2
  419a10:	b	419a78 <ferror@plt+0x17108>
  419a14:	cmp	w0, #0x66
  419a18:	b.eq	419a30 <ferror@plt+0x170c0>  // b.none
  419a1c:	cmp	w0, #0x6c
  419a20:	b.ne	419a04 <ferror@plt+0x17094>  // b.any
  419a24:	cmp	w3, #0x44
  419a28:	mov	w0, #0x4040                	// #16448
  419a2c:	b	419a38 <ferror@plt+0x170c8>
  419a30:	cmp	w3, #0x44
  419a34:	mov	w0, #0x4010                	// #16400
  419a38:	csel	w0, wzr, w0, eq  // eq = none
  419a3c:	ret
  419a40:	cmp	w3, #0x44
  419a44:	mov	w0, #0x4010                	// #16400
  419a48:	csel	w0, wzr, w0, ne  // ne = any
  419a4c:	ret
  419a50:	cmp	w3, #0x44
  419a54:	mov	w0, #0x4020                	// #16416
  419a58:	b	419a38 <ferror@plt+0x170c8>
  419a5c:	cmp	w3, #0x44
  419a60:	mov	w0, #0x4020                	// #16416
  419a64:	b	419a48 <ferror@plt+0x170d8>
  419a68:	cmp	w3, #0x44
  419a6c:	mov	w0, #0x4040                	// #16448
  419a70:	b	419a48 <ferror@plt+0x170d8>
  419a74:	mov	x5, #0x0                   	// #0
  419a78:	stp	x29, x30, [sp, #-48]!
  419a7c:	adrp	x18, 451000 <_obstack_memory_used@@Base+0x17198>
  419a80:	adrp	x30, 451000 <_obstack_memory_used@@Base+0x17198>
  419a84:	mov	x29, sp
  419a88:	mov	x6, x1
  419a8c:	add	x18, x18, #0xe4c
  419a90:	add	x30, x30, #0xe38
  419a94:	mov	x3, #0x0                   	// #0
  419a98:	mov	x12, #0x0                   	// #0
  419a9c:	mov	x11, #0x0                   	// #0
  419aa0:	mov	x10, #0x0                   	// #0
  419aa4:	mov	x9, #0x0                   	// #0
  419aa8:	mov	x8, #0x0                   	// #0
  419aac:	mov	x15, #0x0                   	// #0
  419ab0:	mov	x14, #0x0                   	// #0
  419ab4:	mov	x4, #0x0                   	// #0
  419ab8:	stp	x19, x20, [sp, #16]
  419abc:	mov	x19, #0xa                   	// #10
  419ac0:	str	x21, [sp, #32]
  419ac4:	sub	x0, x5, #0x1
  419ac8:	cbz	x5, 419cd4 <ferror@plt+0x17364>
  419acc:	ldrb	w5, [x6]
  419ad0:	cmp	w5, #0x57
  419ad4:	b.hi	419bfc <ferror@plt+0x1728c>  // b.pmore
  419ad8:	cmp	w5, #0x43
  419adc:	b.hi	419be0 <ferror@plt+0x17270>  // b.pmore
  419ae0:	mov	w0, #0x0                   	// #0
  419ae4:	b	419dd0 <ferror@plt+0x17460>
  419ae8:	cbz	x2, 419a74 <ferror@plt+0x17104>
  419aec:	sub	x3, x2, #0x1
  419af0:	ldrb	w4, [x1, x3]
  419af4:	cmp	w4, #0x6b
  419af8:	b.eq	419b7c <ferror@plt+0x1720c>  // b.none
  419afc:	b.hi	419b6c <ferror@plt+0x171fc>  // b.pmore
  419b00:	cmp	w4, #0x4b
  419b04:	b.eq	419b7c <ferror@plt+0x1720c>  // b.none
  419b08:	cmp	w4, #0x52
  419b0c:	mov	x0, #0x100000              	// #1048576
  419b10:	b.ne	419a0c <ferror@plt+0x1709c>  // b.any
  419b14:	cmp	x2, #0x1
  419b18:	b.eq	419e30 <ferror@plt+0x174c0>  // b.none
  419b1c:	ldrb	w4, [x1]
  419b20:	and	w4, w4, #0xffffffdf
  419b24:	and	w4, w4, #0xff
  419b28:	cmp	w4, #0x55
  419b2c:	b.ne	419b44 <ferror@plt+0x171d4>  // b.any
  419b30:	orr	x0, x0, #0x1000
  419b34:	cmp	x3, #0x1
  419b38:	b.eq	419e30 <ferror@plt+0x174c0>  // b.none
  419b3c:	sub	x3, x2, #0x2
  419b40:	add	x1, x1, #0x1
  419b44:	ldrb	w2, [x1]
  419b48:	cmp	w2, #0x68
  419b4c:	b.eq	419b9c <ferror@plt+0x1722c>  // b.none
  419b50:	b.hi	419b84 <ferror@plt+0x17214>  // b.pmore
  419b54:	cmp	w2, #0x48
  419b58:	b.eq	419b9c <ferror@plt+0x1722c>  // b.none
  419b5c:	cmp	w2, #0x4c
  419b60:	b.eq	419bc0 <ferror@plt+0x17250>  // b.none
  419b64:	mov	w0, #0x0                   	// #0
  419b68:	ret
  419b6c:	cmp	w4, #0x72
  419b70:	b.ne	419a0c <ferror@plt+0x1709c>  // b.any
  419b74:	mov	x0, #0x100000              	// #1048576
  419b78:	b	419b14 <ferror@plt+0x171a4>
  419b7c:	mov	x0, #0x200000              	// #2097152
  419b80:	b	419b14 <ferror@plt+0x171a4>
  419b84:	cmp	w2, #0x6c
  419b88:	b.ne	419b64 <ferror@plt+0x171f4>  // b.any
  419b8c:	cmp	x3, #0x1
  419b90:	b.ne	419ba8 <ferror@plt+0x17238>  // b.any
  419b94:	orr	w0, w0, #0x20
  419b98:	ret
  419b9c:	orr	x0, x0, #0x10
  419ba0:	cmp	x3, #0x1
  419ba4:	b	419a48 <ferror@plt+0x170d8>
  419ba8:	cmp	x3, #0x2
  419bac:	b.ne	419b64 <ferror@plt+0x171f4>  // b.any
  419bb0:	ldrb	w1, [x1, #1]
  419bb4:	orr	x0, x0, #0x40
  419bb8:	cmp	w1, #0x6c
  419bbc:	b	419a48 <ferror@plt+0x170d8>
  419bc0:	cmp	x3, #0x1
  419bc4:	b.eq	419b94 <ferror@plt+0x17224>  // b.none
  419bc8:	cmp	x3, #0x2
  419bcc:	b.ne	419b64 <ferror@plt+0x171f4>  // b.any
  419bd0:	ldrb	w1, [x1, #1]
  419bd4:	orr	x0, x0, #0x40
  419bd8:	cmp	w1, #0x4c
  419bdc:	b	419a48 <ferror@plt+0x170d8>
  419be0:	sub	w5, w5, #0x44
  419be4:	cmp	w5, #0x13
  419be8:	b.hi	419ae0 <ferror@plt+0x17170>  // b.pmore
  419bec:	ldrb	w5, [x30, w5, uxtw]
  419bf0:	adr	x13, 419bfc <ferror@plt+0x1728c>
  419bf4:	add	x5, x13, w5, sxtb #2
  419bf8:	br	x5
  419bfc:	sub	w5, w5, #0x64
  419c00:	and	w13, w5, #0xff
  419c04:	cmp	w13, #0x13
  419c08:	b.hi	419ae0 <ferror@plt+0x17170>  // b.pmore
  419c0c:	cmp	w5, #0x13
  419c10:	b.hi	419ae0 <ferror@plt+0x17170>  // b.pmore
  419c14:	ldrb	w5, [x18, w5, uxtw]
  419c18:	adr	x13, 419c24 <ferror@plt+0x172b4>
  419c1c:	add	x5, x13, w5, sxtb #2
  419c20:	br	x5
  419c24:	add	x5, x4, #0x1
  419c28:	cbz	x0, 419c9c <ferror@plt+0x1732c>
  419c2c:	ldrb	w13, [x7, #1120]
  419c30:	cbnz	w13, 419c9c <ferror@plt+0x1732c>
  419c34:	ldrb	w13, [x6, #1]
  419c38:	sub	w13, w13, #0x31
  419c3c:	and	w13, w13, #0xff
  419c40:	cmp	w13, #0x8
  419c44:	b.hi	419c9c <ferror@plt+0x1732c>  // b.pmore
  419c48:	cbnz	x3, 419c9c <ferror@plt+0x1732c>
  419c4c:	ldrb	w20, [x6, #1]
  419c50:	mov	x17, x0
  419c54:	mov	x13, x6
  419c58:	sub	x0, x0, #0x1
  419c5c:	sub	w5, w20, #0x30
  419c60:	add	x6, x6, #0x1
  419c64:	and	w21, w5, #0xff
  419c68:	cmp	w21, #0x9
  419c6c:	b.hi	419e1c <ferror@plt+0x174ac>  // b.pmore
  419c70:	cmp	x3, #0xef
  419c74:	b.hi	419c8c <ferror@plt+0x1731c>  // b.pmore
  419c78:	sxtw	x5, w5
  419c7c:	madd	x3, x3, x19, x5
  419c80:	cbnz	x0, 419c4c <ferror@plt+0x172dc>
  419c84:	mov	x13, x6
  419c88:	mov	x17, #0x0                   	// #0
  419c8c:	add	x11, x11, #0x1
  419c90:	mov	x5, x4
  419c94:	mov	x0, x17
  419c98:	mov	x6, x13
  419c9c:	mov	x4, x5
  419ca0:	add	x6, x6, #0x1
  419ca4:	mov	x5, x0
  419ca8:	b	419ac4 <ferror@plt+0x17154>
  419cac:	add	x14, x14, #0x1
  419cb0:	b	419e28 <ferror@plt+0x174b8>
  419cb4:	add	x15, x15, #0x1
  419cb8:	b	419e28 <ferror@plt+0x174b8>
  419cbc:	add	x8, x8, #0x1
  419cc0:	b	419e28 <ferror@plt+0x174b8>
  419cc4:	add	x9, x9, #0x1
  419cc8:	b	419e28 <ferror@plt+0x174b8>
  419ccc:	add	x10, x10, #0x1
  419cd0:	b	419e28 <ferror@plt+0x174b8>
  419cd4:	add	x0, x8, x9
  419cd8:	add	x5, x11, x12
  419cdc:	add	x5, x5, x0
  419ce0:	add	x0, x14, x15
  419ce4:	add	x5, x5, x0
  419ce8:	add	x5, x5, x4
  419cec:	cmp	x5, #0x1
  419cf0:	b.hi	419ae0 <ferror@plt+0x17170>  // b.pmore
  419cf4:	cmp	x10, #0x1
  419cf8:	b.hi	419ae0 <ferror@plt+0x17170>  // b.pmore
  419cfc:	cmp	x3, #0xf0
  419d00:	b.hi	419ae0 <ferror@plt+0x17170>  // b.pmore
  419d04:	cmp	x3, #0x20
  419d08:	ccmp	x12, #0x0, #0x4, ne  // ne = any
  419d0c:	b.eq	419d20 <ferror@plt+0x173b0>  // b.none
  419d10:	cmp	x3, #0x40
  419d14:	mov	x0, #0x80                  	// #128
  419d18:	ccmp	x3, x0, #0x4, ne  // ne = any
  419d1c:	b.ne	419ae0 <ferror@plt+0x17170>  // b.any
  419d20:	cmp	x11, #0x0
  419d24:	cset	w0, ne  // ne = any
  419d28:	cmp	w0, #0x0
  419d2c:	ccmp	x3, #0x10, #0x4, ne  // ne = any
  419d30:	b.eq	419d3c <ferror@plt+0x173cc>  // b.none
  419d34:	tst	x3, #0x1f
  419d38:	b.ne	419ae0 <ferror@plt+0x17170>  // b.any
  419d3c:	cmp	x3, #0x60
  419d40:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  419d44:	b.ne	419ae0 <ferror@plt+0x17170>  // b.any
  419d48:	cbz	x10, 419d94 <ferror@plt+0x17424>
  419d4c:	cbz	w16, 419ae0 <ferror@plt+0x17170>
  419d50:	ldrb	w0, [x7, #1120]
  419d54:	cbz	w0, 419d94 <ferror@plt+0x17424>
  419d58:	ldr	w0, [x7, #1116]
  419d5c:	cmp	w0, #0xe
  419d60:	b.le	419d94 <ferror@plt+0x17424>
  419d64:	ldrb	w0, [x1]
  419d68:	cmp	w0, #0x69
  419d6c:	b.ne	419d94 <ferror@plt+0x17424>  // b.any
  419d70:	cmp	x2, #0x1
  419d74:	b.eq	419ae0 <ferror@plt+0x17170>  // b.none
  419d78:	cmp	x2, #0x2
  419d7c:	b.ne	419d94 <ferror@plt+0x17424>  // b.any
  419d80:	ldrb	w0, [x1, #1]
  419d84:	cmp	w0, #0x66
  419d88:	b.eq	419ae0 <ferror@plt+0x17170>  // b.none
  419d8c:	cmp	w0, #0x6c
  419d90:	b.eq	419ae0 <ferror@plt+0x17170>  // b.none
  419d94:	orr	x0, x8, x9
  419d98:	cbz	x0, 419da0 <ferror@plt+0x17430>
  419d9c:	cbz	w16, 419ae0 <ferror@plt+0x17170>
  419da0:	cmp	x10, #0x0
  419da4:	cset	w0, ne  // ne = any
  419da8:	lsl	w0, w0, #13
  419dac:	cbnz	x4, 419df4 <ferror@plt+0x17484>
  419db0:	cbnz	x14, 419dfc <ferror@plt+0x1748c>
  419db4:	cbnz	x15, 419e04 <ferror@plt+0x17494>
  419db8:	cbnz	x8, 419e0c <ferror@plt+0x1749c>
  419dbc:	cbnz	x9, 419e14 <ferror@plt+0x174a4>
  419dc0:	lsl	w3, w3, #24
  419dc4:	cbz	x11, 419de0 <ferror@plt+0x17470>
  419dc8:	orr	w3, w3, #0x400000
  419dcc:	orr	w0, w0, w3
  419dd0:	ldp	x19, x20, [sp, #16]
  419dd4:	ldr	x21, [sp, #32]
  419dd8:	ldp	x29, x30, [sp], #48
  419ddc:	ret
  419de0:	orr	w3, w3, #0x800000
  419de4:	cmp	x12, #0x0
  419de8:	mov	w1, #0x8000                	// #32768
  419dec:	csel	w3, w3, w1, ne  // ne = any
  419df0:	b	419dcc <ferror@plt+0x1745c>
  419df4:	mov	w3, #0x10                  	// #16
  419df8:	b	419dcc <ferror@plt+0x1745c>
  419dfc:	mov	w3, #0x20                  	// #32
  419e00:	b	419dcc <ferror@plt+0x1745c>
  419e04:	mov	w3, #0x40                  	// #64
  419e08:	b	419dcc <ferror@plt+0x1745c>
  419e0c:	mov	w3, #0x10000               	// #65536
  419e10:	b	419dcc <ferror@plt+0x1745c>
  419e14:	mov	w3, #0x20000               	// #131072
  419e18:	b	419dcc <ferror@plt+0x1745c>
  419e1c:	cmp	w20, #0x78
  419e20:	b.ne	419c8c <ferror@plt+0x1731c>  // b.any
  419e24:	add	x12, x12, #0x1
  419e28:	mov	x5, x4
  419e2c:	b	419c9c <ferror@plt+0x1732c>
  419e30:	ret
  419e34:	add	x5, x1, x2
  419e38:	mov	x7, #0x0                   	// #0
  419e3c:	mov	x4, #0x0                   	// #0
  419e40:	mov	x6, #0x0                   	// #0
  419e44:	mov	x9, #0x1                   	// #1
  419e48:	cmp	x5, x1
  419e4c:	b.eq	419eb4 <ferror@plt+0x17544>  // b.none
  419e50:	ldurb	w8, [x5, #-1]
  419e54:	sub	w3, w8, #0x49
  419e58:	and	w3, w3, #0xff
  419e5c:	cmp	w3, #0x2c
  419e60:	b.hi	419eac <ferror@plt+0x1753c>  // b.pmore
  419e64:	lsl	x3, x9, x3
  419e68:	tst	x3, #0x300000003
  419e6c:	b.ne	419e8c <ferror@plt+0x1751c>  // b.any
  419e70:	tst	x3, #0x800000008
  419e74:	b.ne	419e94 <ferror@plt+0x17524>  // b.any
  419e78:	tst	x3, #0x100000001000
  419e7c:	b.eq	419eac <ferror@plt+0x1753c>  // b.none
  419e80:	add	x6, x6, #0x1
  419e84:	sub	x5, x5, #0x1
  419e88:	b	419e48 <ferror@plt+0x174d8>
  419e8c:	add	x7, x7, #0x1
  419e90:	b	419e84 <ferror@plt+0x17514>
  419e94:	add	x4, x4, #0x1
  419e98:	cmp	x4, #0x2
  419e9c:	b.ne	419e84 <ferror@plt+0x17514>  // b.any
  419ea0:	ldrb	w3, [x5]
  419ea4:	cmp	w3, w8
  419ea8:	b.eq	419e84 <ferror@plt+0x17514>  // b.none
  419eac:	mov	w0, #0x0                   	// #0
  419eb0:	b	419f40 <ferror@plt+0x175d0>
  419eb4:	cmp	x4, #0x2
  419eb8:	ccmp	x6, #0x1, #0x2, ls  // ls = plast
  419ebc:	b.hi	419eac <ferror@plt+0x1753c>  // b.pmore
  419ec0:	cmp	x7, #0x1
  419ec4:	b.hi	419eac <ferror@plt+0x1753c>  // b.pmore
  419ec8:	cbz	x7, 419f18 <ferror@plt+0x175a8>
  419ecc:	ldrb	w3, [x0, #1163]
  419ed0:	cbz	w3, 419eac <ferror@plt+0x1753c>
  419ed4:	ldrb	w3, [x0, #1120]
  419ed8:	cbz	w3, 419f10 <ferror@plt+0x175a0>
  419edc:	ldr	w0, [x0, #1116]
  419ee0:	cmp	w0, #0xe
  419ee4:	b.le	419f10 <ferror@plt+0x175a0>
  419ee8:	ldrb	w0, [x1]
  419eec:	cmp	w0, #0x69
  419ef0:	b.ne	419f10 <ferror@plt+0x175a0>  // b.any
  419ef4:	cmp	x2, #0x1
  419ef8:	b.eq	419eac <ferror@plt+0x1753c>  // b.none
  419efc:	cmp	x2, #0x2
  419f00:	b.ne	419f10 <ferror@plt+0x175a0>  // b.any
  419f04:	ldrb	w0, [x1, #1]
  419f08:	cmp	w0, #0x6c
  419f0c:	b.eq	419eac <ferror@plt+0x1753c>  // b.none
  419f10:	mov	w1, #0x2000                	// #8192
  419f14:	b	419f1c <ferror@plt+0x175ac>
  419f18:	mov	w1, #0x0                   	// #0
  419f1c:	cmp	x6, #0x0
  419f20:	cset	w0, ne  // ne = any
  419f24:	orr	w0, w1, w0, lsl #12
  419f28:	cbz	x4, 419f44 <ferror@plt+0x175d4>
  419f2c:	cmp	x4, #0x1
  419f30:	mov	w1, #0x20                  	// #32
  419f34:	mov	w2, #0x40                  	// #64
  419f38:	csel	w1, w1, w2, eq  // eq = none
  419f3c:	orr	w0, w0, w1
  419f40:	ret
  419f44:	mov	w1, #0x10                  	// #16
  419f48:	b	419f3c <ferror@plt+0x175cc>
  419f4c:	cmp	x1, #0x40
  419f50:	ldp	x2, x3, [x0]
  419f54:	b.ls	419f88 <ferror@plt+0x17618>  // b.plast
  419f58:	sub	x1, x1, #0x40
  419f5c:	cmp	x1, #0x3f
  419f60:	b.hi	419f70 <ferror@plt+0x17600>  // b.pmore
  419f64:	mov	x4, #0xffffffffffffffff    	// #-1
  419f68:	lsl	x1, x4, x1
  419f6c:	bic	x2, x2, x1
  419f70:	stp	x2, x3, [x0]
  419f74:	ldp	x2, x3, [x0]
  419f78:	stp	x2, x3, [x8]
  419f7c:	ldr	x0, [x0, #16]
  419f80:	str	x0, [x8, #16]
  419f84:	ret
  419f88:	b.eq	419f98 <ferror@plt+0x17628>  // b.none
  419f8c:	mov	x2, #0xffffffffffffffff    	// #-1
  419f90:	lsl	x1, x2, x1
  419f94:	bic	x3, x3, x1
  419f98:	mov	x2, #0x0                   	// #0
  419f9c:	b	419f70 <ferror@plt+0x17600>
  419fa0:	stp	x29, x30, [sp, #-80]!
  419fa4:	mov	x5, x0
  419fa8:	mov	x7, x8
  419fac:	mov	x29, sp
  419fb0:	ldp	x6, x9, [x0]
  419fb4:	add	x8, sp, #0x30
  419fb8:	negs	x2, x9
  419fbc:	neg	x0, x6
  419fc0:	csinv	x0, x0, x6, eq  // eq = none
  419fc4:	stp	x0, x2, [x5]
  419fc8:	ldp	x2, x3, [x5]
  419fcc:	stp	x2, x3, [sp, #16]
  419fd0:	ldr	x0, [x5, #16]
  419fd4:	str	x0, [sp, #32]
  419fd8:	add	x0, sp, #0x10
  419fdc:	bl	419f4c <ferror@plt+0x175dc>
  419fe0:	ldp	x1, x0, [sp, #48]
  419fe4:	stp	x1, x0, [x5]
  419fe8:	ldr	x0, [sp, #64]
  419fec:	str	x0, [x5, #16]
  419ff0:	ldr	x2, [x5, #8]
  419ff4:	ands	w0, w0, #0xff
  419ff8:	b.ne	41a034 <ferror@plt+0x176c4>  // b.any
  419ffc:	cmp	x9, x2
  41a000:	b.ne	41a018 <ferror@plt+0x176a8>  // b.any
  41a004:	cmp	x6, x1
  41a008:	b.ne	41a018 <ferror@plt+0x176a8>  // b.any
  41a00c:	orr	x6, x6, x9
  41a010:	cmp	x6, #0x0
  41a014:	cset	w0, ne  // ne = any
  41a018:	strb	w0, [x5, #17]
  41a01c:	ldp	x0, x1, [x5]
  41a020:	stp	x0, x1, [x7]
  41a024:	ldr	x0, [x5, #16]
  41a028:	str	x0, [x7, #16]
  41a02c:	ldp	x29, x30, [sp], #80
  41a030:	ret
  41a034:	mov	w0, #0x0                   	// #0
  41a038:	b	41a018 <ferror@plt+0x176a8>
  41a03c:	and	x4, x1, #0xffffffff
  41a040:	and	x2, x0, #0xffffffff
  41a044:	lsr	x1, x1, #32
  41a048:	lsr	x0, x0, #32
  41a04c:	mul	x3, x0, x1
  41a050:	mul	x1, x2, x1
  41a054:	mul	x2, x2, x4
  41a058:	mul	x0, x4, x0
  41a05c:	lsl	x4, x1, #32
  41a060:	adds	x2, x2, x4
  41a064:	b.cs	41a0a8 <ferror@plt+0x17738>  // b.hs, b.nlast
  41a068:	str	x3, [x8]
  41a06c:	lsl	x3, x0, #32
  41a070:	adds	x2, x2, x3
  41a074:	str	x2, [x8, #8]
  41a078:	b.cc	41a088 <ferror@plt+0x17718>  // b.lo, b.ul, b.last
  41a07c:	ldr	x2, [x8]
  41a080:	add	x2, x2, #0x1
  41a084:	str	x2, [x8]
  41a088:	lsr	x0, x0, #32
  41a08c:	add	x1, x0, x1, lsr #32
  41a090:	ldr	x0, [x8]
  41a094:	add	x1, x0, x1
  41a098:	mov	w0, #0x1                   	// #1
  41a09c:	str	x1, [x8]
  41a0a0:	strh	w0, [x8, #16]
  41a0a4:	ret
  41a0a8:	add	x3, x3, #0x1
  41a0ac:	b	41a068 <ferror@plt+0x176f8>
  41a0b0:	stp	x29, x30, [sp, #-80]!
  41a0b4:	mov	x29, sp
  41a0b8:	stp	x19, x20, [sp, #16]
  41a0bc:	mov	x19, x0
  41a0c0:	stp	x21, x22, [sp, #32]
  41a0c4:	mov	x22, x8
  41a0c8:	stp	x23, x24, [sp, #48]
  41a0cc:	mov	w24, w1
  41a0d0:	str	x25, [sp, #64]
  41a0d4:	strh	wzr, [x8, #16]
  41a0d8:	ldrb	w1, [x0, #26]
  41a0dc:	stp	xzr, xzr, [x8]
  41a0e0:	add	w1, w1, #0x1
  41a0e4:	strb	w1, [x0, #26]
  41a0e8:	bl	4287a8 <ferror@plt+0x25e38>
  41a0ec:	mov	x20, x0
  41a0f0:	ldrb	w0, [x0, #4]
  41a0f4:	cmp	w0, #0x14
  41a0f8:	b.ne	41a1ec <ferror@plt+0x1787c>  // b.any
  41a0fc:	mov	x0, x19
  41a100:	bl	4287a8 <ferror@plt+0x25e38>
  41a104:	mov	x20, x0
  41a108:	mov	w25, #0x1                   	// #1
  41a10c:	ldrb	w0, [x20, #4]
  41a110:	cmp	w0, #0x3e
  41a114:	b.eq	41a1f4 <ferror@plt+0x17884>  // b.none
  41a118:	cmp	w0, #0x44
  41a11c:	b.ne	41a1fc <ferror@plt+0x1788c>  // b.any
  41a120:	mov	w23, #0x1                   	// #1
  41a124:	ldr	w0, [x20, #8]
  41a128:	sub	w0, w0, #0x1
  41a12c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41a130:	ldr	x1, [x20, #16]
  41a134:	mov	x21, x0
  41a138:	ldr	w2, [x20, #8]
  41a13c:	add	x1, x1, #0x1
  41a140:	sub	w2, w2, #0x2
  41a144:	bl	4022e0 <memcpy@plt>
  41a148:	ldr	w0, [x20, #8]
  41a14c:	mov	w2, w23
  41a150:	sub	w0, w0, #0x2
  41a154:	strb	wzr, [x21, x0]
  41a158:	ldr	x20, [x20, #8]
  41a15c:	mov	w3, w24
  41a160:	mov	x1, x21
  41a164:	mov	x0, x19
  41a168:	bl	41e94c <ferror@plt+0x1bfdc>
  41a16c:	tst	w0, #0xff
  41a170:	b.eq	41a17c <ferror@plt+0x1780c>  // b.none
  41a174:	mov	x0, #0x1                   	// #1
  41a178:	str	x0, [x22, #8]
  41a17c:	mov	x0, x21
  41a180:	bl	402730 <free@plt>
  41a184:	cbz	w25, 41a1c0 <ferror@plt+0x17850>
  41a188:	ldr	x0, [x19, #448]
  41a18c:	ldurb	w0, [x0, #-20]
  41a190:	cmp	w0, #0x16
  41a194:	b.eq	41a1c0 <ferror@plt+0x17850>  // b.none
  41a198:	mov	x0, x19
  41a19c:	bl	4287a8 <ferror@plt+0x25e38>
  41a1a0:	ldrb	w0, [x0, #4]
  41a1a4:	cmp	w0, #0x15
  41a1a8:	b.eq	41a1c0 <ferror@plt+0x17850>  // b.none
  41a1ac:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  41a1b0:	mov	x0, x19
  41a1b4:	add	x2, x2, #0xf14
  41a1b8:	mov	w1, #0x3                   	// #3
  41a1bc:	bl	419440 <ferror@plt+0x16ad0>
  41a1c0:	cbz	x20, 41a1c8 <ferror@plt+0x17858>
  41a1c4:	str	x20, [x19, #432]
  41a1c8:	ldrb	w0, [x19, #26]
  41a1cc:	sub	w0, w0, #0x1
  41a1d0:	strb	w0, [x19, #26]
  41a1d4:	ldp	x19, x20, [sp, #16]
  41a1d8:	ldp	x21, x22, [sp, #32]
  41a1dc:	ldp	x23, x24, [sp, #48]
  41a1e0:	ldr	x25, [sp, #64]
  41a1e4:	ldp	x29, x30, [sp], #80
  41a1e8:	ret
  41a1ec:	mov	w25, #0x0                   	// #0
  41a1f0:	b	41a10c <ferror@plt+0x1779c>
  41a1f4:	mov	w23, #0x0                   	// #0
  41a1f8:	b	41a124 <ferror@plt+0x177b4>
  41a1fc:	cmp	w0, #0x3
  41a200:	b.ne	41a220 <ferror@plt+0x178b0>  // b.any
  41a204:	mov	x0, x19
  41a208:	bl	419238 <ferror@plt+0x168c8>
  41a20c:	mov	x21, x0
  41a210:	cbnz	x0, 41a238 <ferror@plt+0x178c8>
  41a214:	cbz	w25, 41a1c8 <ferror@plt+0x17858>
  41a218:	mov	x20, #0x0                   	// #0
  41a21c:	b	41a188 <ferror@plt+0x17818>
  41a220:	mov	x0, x19
  41a224:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  41a228:	mov	w1, #0x3                   	// #3
  41a22c:	add	x2, x2, #0xee0
  41a230:	bl	419440 <ferror@plt+0x16ad0>
  41a234:	b	41a214 <ferror@plt+0x178a4>
  41a238:	mov	x20, #0x0                   	// #0
  41a23c:	mov	w2, #0x1                   	// #1
  41a240:	b	41a15c <ferror@plt+0x177ec>
  41a244:	sub	w3, w2, #0x41
  41a248:	cmp	x2, #0x41
  41a24c:	lsr	x3, x0, x3
  41a250:	sub	w0, w2, #0x1
  41a254:	mvn	x3, x3
  41a258:	lsr	x0, x1, x0
  41a25c:	mvn	x0, x0
  41a260:	and	w3, w3, #0x1
  41a264:	and	w0, w0, #0x1
  41a268:	csel	w0, w0, w3, cc  // cc = lo, ul, last
  41a26c:	ret
  41a270:	stp	x29, x30, [sp, #-80]!
  41a274:	mov	x5, x0
  41a278:	mov	x7, x1
  41a27c:	mov	x29, sp
  41a280:	ldp	x4, x1, [x0]
  41a284:	mov	x9, x8
  41a288:	ldrb	w0, [x0, #16]
  41a28c:	mov	x6, x2
  41a290:	cbnz	w0, 41a34c <ferror@plt+0x179dc>
  41a294:	mov	x2, x7
  41a298:	mov	x0, x4
  41a29c:	bl	41a244 <ferror@plt+0x178d4>
  41a2a0:	and	x3, x0, #0xff
  41a2a4:	eor	x3, x3, #0x1
  41a2a8:	neg	x3, x3
  41a2ac:	cmp	x7, x6
  41a2b0:	b.ls	41a36c <ferror@plt+0x179fc>  // b.plast
  41a2b4:	cmp	x7, #0x3f
  41a2b8:	b.hi	41a354 <ferror@plt+0x179e4>  // b.pmore
  41a2bc:	lsl	x0, x3, x7
  41a2c0:	mov	x4, x3
  41a2c4:	orr	x1, x1, x0
  41a2c8:	cmp	x6, #0x3f
  41a2cc:	b.ls	41a2dc <ferror@plt+0x1796c>  // b.plast
  41a2d0:	mov	x1, x4
  41a2d4:	sub	x6, x6, #0x40
  41a2d8:	mov	x4, x3
  41a2dc:	cbz	x6, 41a300 <ferror@plt+0x17990>
  41a2e0:	mov	w0, #0x40                  	// #64
  41a2e4:	sub	w0, w0, w6
  41a2e8:	lsr	x1, x1, x6
  41a2ec:	lsl	x2, x4, x0
  41a2f0:	orr	x1, x1, x2
  41a2f4:	lsr	x4, x4, x6
  41a2f8:	lsl	x3, x3, x0
  41a2fc:	orr	x4, x4, x3
  41a300:	stp	x4, x1, [x5]
  41a304:	add	x8, sp, #0x30
  41a308:	ldp	x0, x1, [x5]
  41a30c:	stp	x0, x1, [sp, #16]
  41a310:	ldr	x0, [x5, #16]
  41a314:	mov	x1, x7
  41a318:	str	x0, [sp, #32]
  41a31c:	add	x0, sp, #0x10
  41a320:	bl	419f4c <ferror@plt+0x175dc>
  41a324:	ldp	x0, x1, [sp, #48]
  41a328:	stp	x0, x1, [x5]
  41a32c:	ldr	x2, [sp, #64]
  41a330:	str	x2, [x5, #16]
  41a334:	strb	wzr, [x5, #17]
  41a338:	stp	x0, x1, [x9]
  41a33c:	ldr	x0, [x5, #16]
  41a340:	str	x0, [x9, #16]
  41a344:	ldp	x29, x30, [sp], #80
  41a348:	ret
  41a34c:	mov	x3, #0x0                   	// #0
  41a350:	b	41a2ac <ferror@plt+0x1793c>
  41a354:	cmp	x7, #0x7f
  41a358:	b.hi	41a2c8 <ferror@plt+0x17958>  // b.pmore
  41a35c:	sub	w0, w7, #0x40
  41a360:	lsl	x0, x3, x0
  41a364:	orr	x4, x4, x0
  41a368:	b	41a2c8 <ferror@plt+0x17958>
  41a36c:	mov	x1, x3
  41a370:	mov	x4, x3
  41a374:	b	41a300 <ferror@plt+0x17990>
  41a378:	mov	x14, x8
  41a37c:	mov	x10, x0
  41a380:	cmp	x2, x1
  41a384:	ldp	x13, x15, [x0]
  41a388:	b.cc	41a3d0 <ferror@plt+0x17a60>  // b.lo, b.ul, b.last
  41a38c:	ldrb	w11, [x0, #16]
  41a390:	cbnz	w11, 41a3c8 <ferror@plt+0x17a58>
  41a394:	orr	x13, x13, x15
  41a398:	cmp	x13, #0x0
  41a39c:	cset	w0, ne  // ne = any
  41a3a0:	mov	x18, #0x0                   	// #0
  41a3a4:	mov	x12, #0x0                   	// #0
  41a3a8:	stp	x12, x18, [x10]
  41a3ac:	strb	w11, [x10, #16]
  41a3b0:	strb	w0, [x10, #17]
  41a3b4:	ldp	x0, x1, [x10]
  41a3b8:	stp	x0, x1, [x14]
  41a3bc:	ldr	x0, [x10, #16]
  41a3c0:	str	x0, [x14, #16]
  41a3c4:	ret
  41a3c8:	mov	w0, #0x0                   	// #0
  41a3cc:	b	41a3a0 <ferror@plt+0x17a30>
  41a3d0:	stp	x29, x30, [sp, #-112]!
  41a3d4:	mov	x6, x1
  41a3d8:	mov	x5, x2
  41a3dc:	mov	x29, sp
  41a3e0:	cmp	x2, #0x3f
  41a3e4:	b.ls	41a49c <ferror@plt+0x17b2c>  // b.plast
  41a3e8:	sub	x2, x2, #0x40
  41a3ec:	mov	x0, x15
  41a3f0:	mov	x1, #0x0                   	// #0
  41a3f4:	cbz	x2, 41a40c <ferror@plt+0x17a9c>
  41a3f8:	neg	w3, w2
  41a3fc:	lsl	x0, x0, x2
  41a400:	lsr	x3, x1, x3
  41a404:	orr	x0, x3, x0
  41a408:	lsl	x1, x1, x2
  41a40c:	stp	x0, x1, [x10]
  41a410:	add	x8, sp, #0x30
  41a414:	ldp	x0, x1, [x10]
  41a418:	stp	x0, x1, [sp, #16]
  41a41c:	ldr	x0, [x10, #16]
  41a420:	mov	x1, x6
  41a424:	str	x0, [sp, #32]
  41a428:	add	x0, sp, #0x10
  41a42c:	bl	419f4c <ferror@plt+0x175dc>
  41a430:	ldp	x12, x0, [sp, #48]
  41a434:	ldr	x11, [sp, #64]
  41a438:	stp	x12, x0, [x10]
  41a43c:	str	x11, [x10, #16]
  41a440:	ands	w11, w11, #0xff
  41a444:	mov	x18, x0
  41a448:	b.ne	41a4b0 <ferror@plt+0x17b40>  // b.any
  41a44c:	add	x0, sp, #0x30
  41a450:	add	x8, sp, #0x58
  41a454:	mov	x2, x5
  41a458:	mov	x1, x6
  41a45c:	bl	41a270 <ferror@plt+0x17900>
  41a460:	ldr	x0, [sp, #96]
  41a464:	cmp	x0, x15
  41a468:	b.ne	41a4a8 <ferror@plt+0x17b38>  // b.any
  41a46c:	ldr	x0, [sp, #88]
  41a470:	cmp	x0, x13
  41a474:	cset	w0, ne  // ne = any
  41a478:	stp	x12, x18, [x10]
  41a47c:	strb	w11, [x10, #16]
  41a480:	strb	w0, [x10, #17]
  41a484:	ldp	x0, x1, [x10]
  41a488:	stp	x0, x1, [x14]
  41a48c:	ldr	x0, [x10, #16]
  41a490:	str	x0, [x14, #16]
  41a494:	ldp	x29, x30, [sp], #112
  41a498:	ret
  41a49c:	mov	x1, x15
  41a4a0:	mov	x0, x13
  41a4a4:	b	41a3f4 <ferror@plt+0x17a84>
  41a4a8:	mov	w0, #0x1                   	// #1
  41a4ac:	b	41a478 <ferror@plt+0x17b08>
  41a4b0:	mov	w0, #0x0                   	// #0
  41a4b4:	b	41a478 <ferror@plt+0x17b08>
  41a4b8:	stp	x29, x30, [sp, #-160]!
  41a4bc:	cmp	w3, #0x5
  41a4c0:	mov	x29, sp
  41a4c4:	stp	x19, x20, [sp, #16]
  41a4c8:	mov	x19, x1
  41a4cc:	stp	x21, x22, [sp, #32]
  41a4d0:	ldrb	w21, [x2, #16]
  41a4d4:	stp	x23, x24, [sp, #48]
  41a4d8:	mov	x23, x8
  41a4dc:	ldp	x9, x7, [x1]
  41a4e0:	ldrb	w1, [x1, #16]
  41a4e4:	ldp	x20, x22, [x2]
  41a4e8:	ldr	x10, [x0, #1208]
  41a4ec:	b.eq	41a61c <ferror@plt+0x17cac>  // b.none
  41a4f0:	mov	x24, x2
  41a4f4:	mov	w11, w3
  41a4f8:	b.hi	41a540 <ferror@plt+0x17bd0>  // b.pmore
  41a4fc:	cmp	w3, #0x4
  41a500:	b.eq	41a6e8 <ferror@plt+0x17d78>  // b.none
  41a504:	ldrb	w1, [x0, #1154]
  41a508:	cbz	w1, 41a52c <ferror@plt+0x17bbc>
  41a50c:	ldrb	w1, [x0, #1152]
  41a510:	cbz	w1, 41a51c <ferror@plt+0x17bac>
  41a514:	ldr	w1, [x0, #28]
  41a518:	cbnz	w1, 41a52c <ferror@plt+0x17bbc>
  41a51c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  41a520:	mov	w1, #0x15                  	// #21
  41a524:	add	x2, x2, #0xf38
  41a528:	bl	41951c <ferror@plt+0x16bac>
  41a52c:	ldp	x0, x1, [x24]
  41a530:	stp	x0, x1, [x19]
  41a534:	ldr	x0, [x24, #16]
  41a538:	str	x0, [x19, #16]
  41a53c:	b	41a5fc <ferror@plt+0x17c8c>
  41a540:	sub	w1, w3, #0xc
  41a544:	cmp	w1, #0x1
  41a548:	b.hi	41a504 <ferror@plt+0x17b94>  // b.pmore
  41a54c:	cbnz	w21, 41a5b0 <ferror@plt+0x17c40>
  41a550:	mov	x2, x10
  41a554:	mov	x1, x22
  41a558:	mov	x0, x20
  41a55c:	bl	41a244 <ferror@plt+0x178d4>
  41a560:	tst	w0, #0xff
  41a564:	b.ne	41a5b0 <ferror@plt+0x17c40>  // b.any
  41a568:	cmp	w11, #0xd
  41a56c:	add	x8, sp, #0x60
  41a570:	cset	w11, ne  // ne = any
  41a574:	ldp	x0, x1, [x24]
  41a578:	add	w11, w11, #0xc
  41a57c:	stp	x0, x1, [sp, #64]
  41a580:	mov	x1, x10
  41a584:	ldr	x0, [x24, #16]
  41a588:	str	x0, [sp, #80]
  41a58c:	add	x0, sp, #0x40
  41a590:	bl	419fa0 <ferror@plt+0x17630>
  41a594:	ldr	x20, [sp, #96]
  41a598:	str	x20, [x24]
  41a59c:	ldr	x0, [sp, #104]
  41a5a0:	str	x0, [x24, #8]
  41a5a4:	ldr	x22, [x24, #8]
  41a5a8:	ldr	x0, [sp, #112]
  41a5ac:	str	x0, [x24, #16]
  41a5b0:	ldp	x2, x3, [x19]
  41a5b4:	stp	x2, x3, [sp, #64]
  41a5b8:	cmp	x20, #0x0
  41a5bc:	ldr	x0, [x19, #16]
  41a5c0:	str	x0, [sp, #80]
  41a5c4:	csinv	x22, x22, xzr, eq  // eq = none
  41a5c8:	add	x8, sp, #0x60
  41a5cc:	cmp	w11, #0xd
  41a5d0:	mov	x2, x22
  41a5d4:	mov	x1, x10
  41a5d8:	add	x0, sp, #0x40
  41a5dc:	b.ne	41a614 <ferror@plt+0x17ca4>  // b.any
  41a5e0:	bl	41a378 <ferror@plt+0x17a08>
  41a5e4:	ldp	x20, x0, [sp, #96]
  41a5e8:	ldr	x21, [sp, #112]
  41a5ec:	str	x21, [x19, #16]
  41a5f0:	stp	x20, x0, [x19]
  41a5f4:	and	w21, w21, #0xff
  41a5f8:	mov	x22, x0
  41a5fc:	stp	x20, x22, [x19]
  41a600:	strb	w21, [x19, #16]
  41a604:	ldp	x0, x1, [x19]
  41a608:	stp	x0, x1, [x23]
  41a60c:	ldr	x0, [x19, #16]
  41a610:	b	41a6d0 <ferror@plt+0x17d60>
  41a614:	bl	41a270 <ferror@plt+0x17900>
  41a618:	b	41a5e4 <ferror@plt+0x17c74>
  41a61c:	subs	x0, x7, x22
  41a620:	strb	wzr, [sp, #153]
  41a624:	cmp	x7, x22
  41a628:	add	x8, sp, #0x60
  41a62c:	sbc	x2, x9, x20
  41a630:	stp	x2, x0, [sp, #136]
  41a634:	cmp	w1, #0x0
  41a638:	csinc	w21, w21, wzr, eq  // eq = none
  41a63c:	strb	w21, [sp, #152]
  41a640:	ldp	x0, x1, [sp, #136]
  41a644:	stp	x0, x1, [sp, #64]
  41a648:	ldr	x0, [sp, #152]
  41a64c:	mov	x1, x10
  41a650:	str	x0, [sp, #80]
  41a654:	add	x0, sp, #0x40
  41a658:	bl	419f4c <ferror@plt+0x175dc>
  41a65c:	ldp	x0, x1, [sp, #96]
  41a660:	stp	x0, x1, [sp, #136]
  41a664:	ldr	x1, [sp, #112]
  41a668:	str	x1, [sp, #152]
  41a66c:	ldr	x8, [sp, #144]
  41a670:	mov	x6, x0
  41a674:	ands	w4, w1, #0xff
  41a678:	ubfx	w0, w1, #8, #8
  41a67c:	b.ne	41a6c0 <ferror@plt+0x17d50>  // b.any
  41a680:	mov	x1, x7
  41a684:	mov	x2, x10
  41a688:	mov	x0, x9
  41a68c:	bl	41a244 <ferror@plt+0x178d4>
  41a690:	and	w5, w0, #0xff
  41a694:	mov	x1, x22
  41a698:	mov	x0, x20
  41a69c:	bl	41a244 <ferror@plt+0x178d4>
  41a6a0:	cmp	w5, w0, uxtb
  41a6a4:	b.eq	41a6bc <ferror@plt+0x17d4c>  // b.none
  41a6a8:	mov	x1, x8
  41a6ac:	mov	x0, x6
  41a6b0:	bl	41a244 <ferror@plt+0x178d4>
  41a6b4:	and	w1, w0, #0xff
  41a6b8:	eor	w4, w1, w5
  41a6bc:	mov	w0, w4
  41a6c0:	strb	w0, [sp, #153]
  41a6c4:	ldp	x0, x1, [sp, #136]
  41a6c8:	stp	x0, x1, [x23]
  41a6cc:	ldr	x0, [sp, #152]
  41a6d0:	ldp	x19, x20, [sp, #16]
  41a6d4:	ldp	x21, x22, [sp, #32]
  41a6d8:	str	x0, [x23, #16]
  41a6dc:	ldp	x23, x24, [sp, #48]
  41a6e0:	ldp	x29, x30, [sp], #160
  41a6e4:	ret
  41a6e8:	adds	x2, x7, x22
  41a6ec:	add	x0, x9, x20
  41a6f0:	cset	x3, cs  // cs = hs, nlast
  41a6f4:	cmp	w1, #0x0
  41a6f8:	add	x0, x0, x3
  41a6fc:	stp	x0, x2, [sp, #136]
  41a700:	csinc	w21, w21, wzr, eq  // eq = none
  41a704:	strb	w21, [sp, #152]
  41a708:	add	x8, sp, #0x60
  41a70c:	strb	wzr, [sp, #153]
  41a710:	ldp	x0, x1, [sp, #136]
  41a714:	stp	x0, x1, [sp, #64]
  41a718:	ldr	x0, [sp, #152]
  41a71c:	mov	x1, x10
  41a720:	str	x0, [sp, #80]
  41a724:	add	x0, sp, #0x40
  41a728:	bl	419f4c <ferror@plt+0x175dc>
  41a72c:	ldp	x0, x1, [sp, #96]
  41a730:	stp	x0, x1, [sp, #136]
  41a734:	ldr	x1, [sp, #112]
  41a738:	str	x1, [sp, #152]
  41a73c:	ldr	x8, [sp, #144]
  41a740:	mov	x5, x0
  41a744:	ands	w4, w1, #0xff
  41a748:	ubfx	w0, w1, #8, #8
  41a74c:	b.ne	41a6c0 <ferror@plt+0x17d50>  // b.any
  41a750:	mov	x1, x7
  41a754:	mov	x2, x10
  41a758:	mov	x0, x9
  41a75c:	bl	41a244 <ferror@plt+0x178d4>
  41a760:	and	w6, w0, #0xff
  41a764:	mov	x1, x22
  41a768:	mov	x0, x20
  41a76c:	bl	41a244 <ferror@plt+0x178d4>
  41a770:	and	w7, w0, #0xff
  41a774:	cmp	w6, w0, uxtb
  41a778:	b.ne	41a6bc <ferror@plt+0x17d4c>  // b.any
  41a77c:	mov	x1, x8
  41a780:	mov	x0, x5
  41a784:	bl	41a244 <ferror@plt+0x178d4>
  41a788:	and	w1, w0, #0xff
  41a78c:	eor	w4, w1, w7
  41a790:	b	41a6bc <ferror@plt+0x17d4c>
  41a794:	mov	x9, x0
  41a798:	mov	x8, x1
  41a79c:	mov	x7, x3
  41a7a0:	tst	w2, #0xff
  41a7a4:	b.ne	41a808 <ferror@plt+0x17e98>  // b.any
  41a7a8:	and	w5, w5, #0xff
  41a7ac:	cbnz	w5, 41a808 <ferror@plt+0x17e98>
  41a7b0:	stp	x29, x30, [sp, #-16]!
  41a7b4:	mov	x2, x6
  41a7b8:	mov	x29, sp
  41a7bc:	bl	41a244 <ferror@plt+0x178d4>
  41a7c0:	and	w5, w0, #0xff
  41a7c4:	mov	x1, x4
  41a7c8:	mov	x0, x7
  41a7cc:	bl	41a244 <ferror@plt+0x178d4>
  41a7d0:	cmp	w5, w0, uxtb
  41a7d4:	b.ne	41a7ec <ferror@plt+0x17e7c>  // b.any
  41a7d8:	cmp	x9, x7
  41a7dc:	b.hi	41a7f8 <ferror@plt+0x17e88>  // b.pmore
  41a7e0:	b.ne	41a800 <ferror@plt+0x17e90>  // b.any
  41a7e4:	cmp	x8, x4
  41a7e8:	cset	w5, cs  // cs = hs, nlast
  41a7ec:	mov	w0, w5
  41a7f0:	ldp	x29, x30, [sp], #16
  41a7f4:	ret
  41a7f8:	mov	w5, #0x1                   	// #1
  41a7fc:	b	41a7ec <ferror@plt+0x17e7c>
  41a800:	mov	w5, #0x0                   	// #0
  41a804:	b	41a7ec <ferror@plt+0x17e7c>
  41a808:	cmp	x9, x7
  41a80c:	b.hi	41a824 <ferror@plt+0x17eb4>  // b.pmore
  41a810:	b.ne	41a82c <ferror@plt+0x17ebc>  // b.any
  41a814:	cmp	x8, x4
  41a818:	cset	w5, cs  // cs = hs, nlast
  41a81c:	mov	w0, w5
  41a820:	ret
  41a824:	mov	w5, #0x1                   	// #1
  41a828:	b	41a81c <ferror@plt+0x17eac>
  41a82c:	mov	w5, #0x0                   	// #0
  41a830:	b	41a81c <ferror@plt+0x17eac>
  41a834:	b	4199c0 <ferror@plt+0x17050>
  41a838:	b	419e34 <ferror@plt+0x174c4>
  41a83c:	cmp	w0, #0x4a
  41a840:	b.eq	41a86c <ferror@plt+0x17efc>  // b.none
  41a844:	cmp	w0, #0x4b
  41a848:	b.eq	41a874 <ferror@plt+0x17f04>  // b.none
  41a84c:	cmp	w0, #0x4c
  41a850:	b.eq	41a87c <ferror@plt+0x17f0c>  // b.none
  41a854:	cmp	w0, #0x4d
  41a858:	b.eq	41a884 <ferror@plt+0x17f14>  // b.none
  41a85c:	cmp	w0, #0x4e
  41a860:	mov	w1, #0x42                  	// #66
  41a864:	csel	w0, w0, w1, ne  // ne = any
  41a868:	ret
  41a86c:	mov	w0, #0x3e                  	// #62
  41a870:	b	41a868 <ferror@plt+0x17ef8>
  41a874:	mov	w0, #0x3f                  	// #63
  41a878:	b	41a868 <ferror@plt+0x17ef8>
  41a87c:	mov	w0, #0x40                  	// #64
  41a880:	b	41a868 <ferror@plt+0x17ef8>
  41a884:	mov	w0, #0x41                  	// #65
  41a888:	b	41a868 <ferror@plt+0x17ef8>
  41a88c:	cmp	w0, #0x3e
  41a890:	b.eq	41a8bc <ferror@plt+0x17f4c>  // b.none
  41a894:	cmp	w0, #0x3f
  41a898:	b.eq	41a8c4 <ferror@plt+0x17f54>  // b.none
  41a89c:	cmp	w0, #0x40
  41a8a0:	b.eq	41a8cc <ferror@plt+0x17f5c>  // b.none
  41a8a4:	cmp	w0, #0x41
  41a8a8:	b.eq	41a8d4 <ferror@plt+0x17f64>  // b.none
  41a8ac:	cmp	w0, #0x42
  41a8b0:	mov	w1, #0x4e                  	// #78
  41a8b4:	csel	w0, w0, w1, ne  // ne = any
  41a8b8:	ret
  41a8bc:	mov	w0, #0x4a                  	// #74
  41a8c0:	b	41a8b8 <ferror@plt+0x17f48>
  41a8c4:	mov	w0, #0x4b                  	// #75
  41a8c8:	b	41a8b8 <ferror@plt+0x17f48>
  41a8cc:	mov	w0, #0x4c                  	// #76
  41a8d0:	b	41a8b8 <ferror@plt+0x17f48>
  41a8d4:	mov	w0, #0x4d                  	// #77
  41a8d8:	b	41a8b8 <ferror@plt+0x17f48>
  41a8dc:	cmp	w0, #0x45
  41a8e0:	b.eq	41a90c <ferror@plt+0x17f9c>  // b.none
  41a8e4:	cmp	w0, #0x46
  41a8e8:	b.eq	41a914 <ferror@plt+0x17fa4>  // b.none
  41a8ec:	cmp	w0, #0x47
  41a8f0:	b.eq	41a91c <ferror@plt+0x17fac>  // b.none
  41a8f4:	cmp	w0, #0x48
  41a8f8:	b.eq	41a924 <ferror@plt+0x17fb4>  // b.none
  41a8fc:	cmp	w0, #0x49
  41a900:	mov	w1, #0x3c                  	// #60
  41a904:	csel	w0, w0, w1, ne  // ne = any
  41a908:	ret
  41a90c:	mov	w0, #0x38                  	// #56
  41a910:	b	41a908 <ferror@plt+0x17f98>
  41a914:	mov	w0, #0x39                  	// #57
  41a918:	b	41a908 <ferror@plt+0x17f98>
  41a91c:	mov	w0, #0x3a                  	// #58
  41a920:	b	41a908 <ferror@plt+0x17f98>
  41a924:	mov	w0, #0x3b                  	// #59
  41a928:	b	41a908 <ferror@plt+0x17f98>
  41a92c:	cmp	w0, #0x38
  41a930:	b.eq	41a95c <ferror@plt+0x17fec>  // b.none
  41a934:	cmp	w0, #0x39
  41a938:	b.eq	41a964 <ferror@plt+0x17ff4>  // b.none
  41a93c:	cmp	w0, #0x3a
  41a940:	b.eq	41a96c <ferror@plt+0x17ffc>  // b.none
  41a944:	cmp	w0, #0x3b
  41a948:	b.eq	41a974 <ferror@plt+0x18004>  // b.none
  41a94c:	cmp	w0, #0x3c
  41a950:	mov	w1, #0x49                  	// #73
  41a954:	csel	w0, w0, w1, ne  // ne = any
  41a958:	ret
  41a95c:	mov	w0, #0x45                  	// #69
  41a960:	b	41a958 <ferror@plt+0x17fe8>
  41a964:	mov	w0, #0x46                  	// #70
  41a968:	b	41a958 <ferror@plt+0x17fe8>
  41a96c:	mov	w0, #0x47                  	// #71
  41a970:	b	41a958 <ferror@plt+0x17fe8>
  41a974:	mov	w0, #0x48                  	// #72
  41a978:	b	41a958 <ferror@plt+0x17fe8>
  41a97c:	sub	w0, w0, #0x4a
  41a980:	cmp	w0, #0x4
  41a984:	cset	w0, ls  // ls = plast
  41a988:	ret
  41a98c:	sub	w0, w0, #0x45
  41a990:	cmp	w0, #0x4
  41a994:	cset	w0, ls  // ls = plast
  41a998:	ret
  41a99c:	ldr	w2, [x0, #8]
  41a9a0:	mov	x1, #0x0                   	// #0
  41a9a4:	ldr	x0, [x0, #16]
  41a9a8:	cmp	w2, w1
  41a9ac:	b.ls	41a9d0 <ferror@plt+0x18060>  // b.plast
  41a9b0:	ldrb	w3, [x0, x1]
  41a9b4:	cmp	w3, #0x27
  41a9b8:	b.eq	41a9e0 <ferror@plt+0x18070>  // b.none
  41a9bc:	add	x4, x1, #0x1
  41a9c0:	cmp	w3, #0x22
  41a9c4:	b.eq	41a9e0 <ferror@plt+0x18070>  // b.none
  41a9c8:	mov	x1, x4
  41a9cc:	b	41a9a8 <ferror@plt+0x18038>
  41a9d0:	cmp	w2, w1
  41a9d4:	b.ne	41a9e0 <ferror@plt+0x18070>  // b.any
  41a9d8:	add	x0, x0, x1
  41a9dc:	ret
  41a9e0:	ldrb	w3, [x0, x1]
  41a9e4:	cbz	w2, 41a9f8 <ferror@plt+0x18088>
  41a9e8:	sub	w1, w2, #0x1
  41a9ec:	ldrb	w4, [x0, w1, uxtw]
  41a9f0:	cmp	w4, w3
  41a9f4:	b.ne	41aa00 <ferror@plt+0x18090>  // b.any
  41a9f8:	add	x0, x0, w2, uxtw
  41a9fc:	b	41a9dc <ferror@plt+0x1806c>
  41aa00:	mov	w2, w1
  41aa04:	b	41a9e4 <ferror@plt+0x18074>
  41aa08:	stp	x29, x30, [sp, #-96]!
  41aa0c:	mov	x29, sp
  41aa10:	stp	x19, x20, [sp, #16]
  41aa14:	mov	x19, x0
  41aa18:	stp	x21, x22, [sp, #32]
  41aa1c:	mov	w22, w3
  41aa20:	stp	x23, x24, [sp, #48]
  41aa24:	stp	x25, x26, [sp, #64]
  41aa28:	mov	x25, x2
  41aa2c:	ldr	x5, [x1, #16]
  41aa30:	str	x27, [sp, #80]
  41aa34:	cbz	x2, 41aa3c <ferror@plt+0x180cc>
  41aa38:	str	xzr, [x2]
  41aa3c:	ldr	w24, [x1, #8]
  41aa40:	cmp	w24, #0x1
  41aa44:	b.eq	41afb8 <ferror@plt+0x18648>  // b.none
  41aa48:	mov	x21, x5
  41aa4c:	ldrb	w0, [x21], #1
  41aa50:	cmp	w0, #0x30
  41aa54:	b.ne	41ab68 <ferror@plt+0x181f8>  // b.any
  41aa58:	ldrb	w0, [x5, #1]
  41aa5c:	and	w0, w0, #0xffffffdf
  41aa60:	and	w0, w0, #0xff
  41aa64:	cmp	w0, #0x58
  41aa68:	b.ne	41ab38 <ferror@plt+0x181c8>  // b.any
  41aa6c:	ldrb	w0, [x5, #2]
  41aa70:	cmp	w0, #0x2e
  41aa74:	b.eq	41aa88 <ferror@plt+0x18118>  // b.none
  41aa78:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  41aa7c:	add	x1, x1, #0x21a
  41aa80:	ldrh	w1, [x1, w0, sxtw #1]
  41aa84:	tbz	w1, #8, 41aae8 <ferror@plt+0x18178>
  41aa88:	add	x21, x5, #0x2
  41aa8c:	mov	w23, #0x10                  	// #16
  41aa90:	adrp	x27, 457000 <_obstack_memory_used@@Base+0x1d198>
  41aa94:	adrp	x6, 456000 <_obstack_memory_used@@Base+0x1c198>
  41aa98:	add	x27, x27, #0x21a
  41aa9c:	add	x6, x6, #0xf08
  41aaa0:	mov	w1, #0x0                   	// #0
  41aaa4:	mov	w4, #0x0                   	// #0
  41aaa8:	mov	w20, #0x0                   	// #0
  41aaac:	mov	w26, #0x0                   	// #0
  41aab0:	mov	x3, x21
  41aab4:	ldrb	w2, [x3], #1
  41aab8:	mov	x0, x2
  41aabc:	ldrh	w2, [x27, x2, lsl #1]
  41aac0:	tbnz	w2, #2, 41aad0 <ferror@plt+0x18160>
  41aac4:	tbz	w2, #8, 41ab90 <ferror@plt+0x18220>
  41aac8:	cmp	w23, #0x10
  41aacc:	b.ne	41ab90 <ferror@plt+0x18220>  // b.any
  41aad0:	ldrb	w0, [x6, w0, sxtw]
  41aad4:	mov	w1, #0x0                   	// #0
  41aad8:	mov	w4, #0x1                   	// #1
  41aadc:	cmp	w26, w0
  41aae0:	csel	w26, w26, w0, cs  // cs = hs, nlast
  41aae4:	b	41ab80 <ferror@plt+0x18210>
  41aae8:	cmp	w0, #0x27
  41aaec:	b.ne	41ab74 <ferror@plt+0x18204>  // b.any
  41aaf0:	ldrb	w0, [x19, #1166]
  41aaf4:	cbz	w0, 41ab74 <ferror@plt+0x18204>
  41aaf8:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41aafc:	add	x4, x4, #0x2
  41ab00:	mov	w2, w22
  41ab04:	mov	x0, x19
  41ab08:	mov	w3, #0x0                   	// #0
  41ab0c:	mov	w1, #0x3                   	// #3
  41ab10:	bl	4195fc <ferror@plt+0x16c8c>
  41ab14:	mov	w20, #0x0                   	// #0
  41ab18:	mov	w0, w20
  41ab1c:	ldp	x19, x20, [sp, #16]
  41ab20:	ldp	x21, x22, [sp, #32]
  41ab24:	ldp	x23, x24, [sp, #48]
  41ab28:	ldp	x25, x26, [sp, #64]
  41ab2c:	ldr	x27, [sp, #80]
  41ab30:	ldp	x29, x30, [sp], #96
  41ab34:	ret
  41ab38:	cmp	w0, #0x42
  41ab3c:	b.ne	41ab74 <ferror@plt+0x18204>  // b.any
  41ab40:	ldrb	w1, [x5, #2]
  41ab44:	sub	w0, w1, #0x30
  41ab48:	and	w0, w0, #0xff
  41ab4c:	cmp	w0, #0x1
  41ab50:	b.hi	41ab60 <ferror@plt+0x181f0>  // b.pmore
  41ab54:	add	x21, x5, #0x2
  41ab58:	mov	w23, #0x2                   	// #2
  41ab5c:	b	41aa90 <ferror@plt+0x18120>
  41ab60:	cmp	w1, #0x27
  41ab64:	b	41aaec <ferror@plt+0x1817c>
  41ab68:	mov	x21, x5
  41ab6c:	mov	w23, #0xa                   	// #10
  41ab70:	b	41aa90 <ferror@plt+0x18120>
  41ab74:	mov	w23, #0x8                   	// #8
  41ab78:	b	41aa90 <ferror@plt+0x18120>
  41ab7c:	mov	w1, #0x1                   	// #1
  41ab80:	mov	x21, x3
  41ab84:	b	41aab0 <ferror@plt+0x18140>
  41ab88:	mov	w20, #0x1                   	// #1
  41ab8c:	b	41ab80 <ferror@plt+0x18210>
  41ab90:	cmp	w0, #0x27
  41ab94:	b.ne	41abb0 <ferror@plt+0x18240>  // b.any
  41ab98:	ldrb	w2, [x19, #1166]
  41ab9c:	cbz	w2, 41b128 <ferror@plt+0x187b8>
  41aba0:	cbz	w1, 41ab7c <ferror@plt+0x1820c>
  41aba4:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41aba8:	add	x4, x4, #0x27
  41abac:	b	41ab00 <ferror@plt+0x18190>
  41abb0:	cmp	w0, #0x2e
  41abb4:	b.ne	41abec <ferror@plt+0x1827c>  // b.any
  41abb8:	cbnz	w1, 41abd0 <ferror@plt+0x18260>
  41abbc:	ldrb	w0, [x3]
  41abc0:	cmp	w0, #0x27
  41abc4:	b.ne	41abdc <ferror@plt+0x1826c>  // b.any
  41abc8:	ldrb	w0, [x19, #1166]
  41abcc:	cbz	w0, 41abdc <ferror@plt+0x1826c>
  41abd0:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41abd4:	add	x4, x4, #0x41
  41abd8:	b	41ab00 <ferror@plt+0x18190>
  41abdc:	cbz	w20, 41ab88 <ferror@plt+0x18218>
  41abe0:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41abe4:	add	x4, x4, #0x6b
  41abe8:	b	41ab00 <ferror@plt+0x18190>
  41abec:	cmp	w23, #0xa
  41abf0:	b.hi	41b130 <ferror@plt+0x187c0>  // b.pmore
  41abf4:	and	w0, w0, #0xffffffdf
  41abf8:	cmp	w0, #0x45
  41abfc:	b.ne	41ac2c <ferror@plt+0x182bc>  // b.any
  41ac00:	cbnz	w1, 41ac18 <ferror@plt+0x182a8>
  41ac04:	ldrb	w0, [x3]
  41ac08:	cmp	w0, #0x27
  41ac0c:	b.ne	41ac24 <ferror@plt+0x182b4>  // b.any
  41ac10:	ldrb	w0, [x19, #1166]
  41ac14:	cbz	w0, 41ac24 <ferror@plt+0x182b4>
  41ac18:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41ac1c:	add	x4, x4, #0x8d
  41ac20:	b	41ab00 <ferror@plt+0x18190>
  41ac24:	mov	x21, x3
  41ac28:	mov	w20, #0x2                   	// #2
  41ac2c:	cmp	w1, #0x0
  41ac30:	ccmp	w20, #0x2, #0x4, ne  // ne = any
  41ac34:	b.eq	41ac44 <ferror@plt+0x182d4>  // b.none
  41ac38:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41ac3c:	add	x4, x4, #0xb2
  41ac40:	b	41ab00 <ferror@plt+0x18190>
  41ac44:	cmp	w20, #0x0
  41ac48:	add	x24, x5, w24, uxtw
  41ac4c:	ccmp	w23, #0x10, #0x4, eq  // eq = none
  41ac50:	b.eq	41ad18 <ferror@plt+0x183a8>  // b.none
  41ac54:	sub	x2, x24, x21
  41ac58:	mov	x1, x21
  41ac5c:	mov	x0, x19
  41ac60:	bl	4199c0 <ferror@plt+0x17050>
  41ac64:	tst	w0, #0x300000
  41ac68:	b.eq	41b048 <ferror@plt+0x186d8>  // b.none
  41ac6c:	orr	w20, w0, #0x2
  41ac70:	cmp	w23, #0x8
  41ac74:	mov	w0, #0xa                   	// #10
  41ac78:	csel	w23, w23, w0, ne  // ne = any
  41ac7c:	ldrb	w0, [x19, #1154]
  41ac80:	cbz	w0, 41aca0 <ferror@plt+0x18330>
  41ac84:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41ac88:	mov	w2, w22
  41ac8c:	add	x4, x4, #0xd9
  41ac90:	mov	x0, x19
  41ac94:	mov	w3, #0x0                   	// #0
  41ac98:	mov	w1, #0x2                   	// #2
  41ac9c:	bl	4195fc <ferror@plt+0x16c8c>
  41aca0:	tbz	w20, #13, 41acc8 <ferror@plt+0x18358>
  41aca4:	ldrb	w0, [x19, #1154]
  41aca8:	cbz	w0, 41acc8 <ferror@plt+0x18358>
  41acac:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41acb0:	mov	w2, w22
  41acb4:	add	x4, x4, #0x351
  41acb8:	mov	x0, x19
  41acbc:	mov	w3, #0x0                   	// #0
  41acc0:	mov	w1, #0x2                   	// #2
  41acc4:	bl	4195fc <ferror@plt+0x16c8c>
  41acc8:	cmp	w23, #0x2
  41accc:	b.ne	41afa8 <ferror@plt+0x18638>  // b.any
  41acd0:	ldrb	w0, [x19, #1165]
  41acd4:	cbnz	w0, 41ad10 <ferror@plt+0x183a0>
  41acd8:	ldrb	w0, [x19, #1154]
  41acdc:	cbz	w0, 41ad10 <ferror@plt+0x183a0>
  41ace0:	ldrb	w1, [x19, #1120]
  41ace4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  41ace8:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x17198>
  41acec:	add	x0, x0, #0xfdd
  41acf0:	cmp	w1, #0x0
  41acf4:	add	x4, x4, #0xfa7
  41acf8:	csel	x4, x4, x0, ne  // ne = any
  41acfc:	mov	w2, w22
  41ad00:	mov	w1, w23
  41ad04:	mov	x0, x19
  41ad08:	mov	w3, #0x0                   	// #0
  41ad0c:	bl	4195fc <ferror@plt+0x16c8c>
  41ad10:	orr	w20, w20, #0x800
  41ad14:	b	41ab18 <ferror@plt+0x181a8>
  41ad18:	cmp	w20, #0x0
  41ad1c:	ccmp	w23, #0x8, #0x0, ne  // ne = any
  41ad20:	b.eq	41afc0 <ferror@plt+0x18650>  // b.none
  41ad24:	cmp	w26, w23
  41ad28:	b.cc	41ad68 <ferror@plt+0x183f8>  // b.lo, b.ul, b.last
  41ad2c:	cmp	w23, #0x2
  41ad30:	b.ne	41ad58 <ferror@plt+0x183e8>  // b.any
  41ad34:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41ad38:	add	w5, w26, #0x30
  41ad3c:	add	x4, x4, #0x103
  41ad40:	mov	w2, w22
  41ad44:	mov	x0, x19
  41ad48:	mov	w3, #0x0                   	// #0
  41ad4c:	mov	w1, #0x3                   	// #3
  41ad50:	bl	4195fc <ferror@plt+0x16c8c>
  41ad54:	b	41ab14 <ferror@plt+0x181a4>
  41ad58:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41ad5c:	add	w5, w26, #0x30
  41ad60:	add	x4, x4, #0x129
  41ad64:	b	41ad40 <ferror@plt+0x183d0>
  41ad68:	cbz	w20, 41b050 <ferror@plt+0x186e0>
  41ad6c:	cmp	w23, #0x2
  41ad70:	b.ne	41afcc <ferror@plt+0x1865c>  // b.any
  41ad74:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41ad78:	add	x4, x4, #0x14e
  41ad7c:	b	41ab00 <ferror@plt+0x18190>
  41ad80:	b.ne	41affc <ferror@plt+0x1868c>  // b.any
  41ad84:	ldrb	w0, [x19, #1154]
  41ad88:	cbz	w0, 41adb8 <ferror@plt+0x18448>
  41ad8c:	ldrb	w0, [x19, #1127]
  41ad90:	cbnz	w0, 41adb8 <ferror@plt+0x18448>
  41ad94:	ldrb	w0, [x19, #1120]
  41ad98:	cbz	w0, 41adcc <ferror@plt+0x1845c>
  41ad9c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41ada0:	add	x4, x4, #0x1a3
  41ada4:	mov	w2, w22
  41ada8:	mov	x0, x19
  41adac:	mov	w3, #0x0                   	// #0
  41adb0:	mov	w1, #0x2                   	// #2
  41adb4:	bl	4195fc <ferror@plt+0x16c8c>
  41adb8:	cmp	w20, #0x2
  41adbc:	b.eq	41b004 <ferror@plt+0x18694>  // b.none
  41adc0:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41adc4:	add	x4, x4, #0x20e
  41adc8:	b	41ab00 <ferror@plt+0x18190>
  41adcc:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41add0:	add	x4, x4, #0x1ce
  41add4:	b	41ada4 <ferror@plt+0x18434>
  41add8:	ldrb	w0, [x21]
  41addc:	cmp	w0, #0x27
  41ade0:	b.ne	41ae88 <ferror@plt+0x18518>  // b.any
  41ade4:	ldrb	w0, [x19, #1166]
  41ade8:	cmp	w0, #0x0
  41adec:	cset	w1, ne  // ne = any
  41adf0:	ldrb	w0, [x21, #1]!
  41adf4:	ldrh	w2, [x27, w0, sxtw #1]
  41adf8:	tbnz	w2, #2, 41add8 <ferror@plt+0x18468>
  41adfc:	cmp	w0, #0x27
  41ae00:	b.ne	41ae0c <ferror@plt+0x1849c>  // b.any
  41ae04:	ldrb	w0, [x19, #1166]
  41ae08:	cbnz	w0, 41add8 <ferror@plt+0x18468>
  41ae0c:	cbnz	w1, 41ac38 <ferror@plt+0x182c8>
  41ae10:	sub	x26, x24, x21
  41ae14:	mov	x1, x21
  41ae18:	mov	x2, x26
  41ae1c:	mov	x0, x19
  41ae20:	bl	4199c0 <ferror@plt+0x17050>
  41ae24:	mov	w20, w0
  41ae28:	cbnz	w0, 41aeb8 <ferror@plt+0x18548>
  41ae2c:	ldrb	w0, [x19, #1161]
  41ae30:	cbz	w0, 41ae90 <ferror@plt+0x18520>
  41ae34:	cbz	x25, 41ae3c <ferror@plt+0x184cc>
  41ae38:	str	x21, [x25]
  41ae3c:	mov	w20, #0x40                  	// #64
  41ae40:	cmp	x21, x24
  41ae44:	movk	w20, #0x100, lsl #16
  41ae48:	b.eq	41aeec <ferror@plt+0x1857c>  // b.none
  41ae4c:	ldrb	w0, [x19, #1138]
  41ae50:	cbz	w0, 41aec0 <ferror@plt+0x18550>
  41ae54:	mov	x0, x19
  41ae58:	bl	42607c <ferror@plt+0x2370c>
  41ae5c:	cbnz	w0, 41aec0 <ferror@plt+0x18550>
  41ae60:	mov	x6, x21
  41ae64:	mov	w5, w26
  41ae68:	mov	w2, w22
  41ae6c:	mov	x0, x19
  41ae70:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41ae74:	mov	w3, #0x0                   	// #0
  41ae78:	add	x4, x4, #0x26c
  41ae7c:	mov	w1, #0x6                   	// #6
  41ae80:	bl	41966c <ferror@plt+0x16cfc>
  41ae84:	b	41aec0 <ferror@plt+0x18550>
  41ae88:	mov	w1, #0x0                   	// #0
  41ae8c:	b	41adf0 <ferror@plt+0x18480>
  41ae90:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41ae94:	mov	x6, x21
  41ae98:	mov	w5, w26
  41ae9c:	add	x4, x4, #0x241
  41aea0:	mov	w2, w22
  41aea4:	mov	x0, x19
  41aea8:	mov	w3, #0x0                   	// #0
  41aeac:	mov	w1, #0x3                   	// #3
  41aeb0:	bl	4195fc <ferror@plt+0x16c8c>
  41aeb4:	b	41ab18 <ferror@plt+0x181a8>
  41aeb8:	cmp	x21, x24
  41aebc:	b.ne	41ae4c <ferror@plt+0x184dc>  // b.any
  41aec0:	cmp	w20, #0x20
  41aec4:	b.ne	41aeec <ferror@plt+0x1857c>  // b.any
  41aec8:	ldrb	w0, [x19, #1154]
  41aecc:	cbz	w0, 41aeec <ferror@plt+0x1857c>
  41aed0:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41aed4:	mov	w2, w22
  41aed8:	add	x4, x4, #0x294
  41aedc:	mov	x0, x19
  41aee0:	mov	w3, #0x0                   	// #0
  41aee4:	mov	w1, #0x2                   	// #2
  41aee8:	bl	4195fc <ferror@plt+0x16c8c>
  41aeec:	and	w24, w20, #0x4000
  41aef0:	tbz	w20, #14, 41af24 <ferror@plt+0x185b4>
  41aef4:	cmp	w23, #0xa
  41aef8:	b.eq	41af24 <ferror@plt+0x185b4>  // b.none
  41aefc:	mov	x6, x21
  41af00:	mov	w5, w26
  41af04:	mov	w2, w22
  41af08:	mov	x0, x19
  41af0c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41af10:	mov	w3, #0x0                   	// #0
  41af14:	add	x4, x4, #0x2c2
  41af18:	mov	w1, #0x3                   	// #3
  41af1c:	bl	4195fc <ferror@plt+0x16c8c>
  41af20:	b	41ab14 <ferror@plt+0x181a4>
  41af24:	tst	w20, #0x300000
  41af28:	b.eq	41af50 <ferror@plt+0x185e0>  // b.none
  41af2c:	ldrb	w0, [x19, #1154]
  41af30:	cbz	w0, 41af78 <ferror@plt+0x18608>
  41af34:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41af38:	mov	w2, w22
  41af3c:	add	x4, x4, #0xd9
  41af40:	mov	x0, x19
  41af44:	mov	w3, #0x0                   	// #0
  41af48:	mov	w1, #0x2                   	// #2
  41af4c:	bl	4195fc <ferror@plt+0x16c8c>
  41af50:	cbz	w24, 41af78 <ferror@plt+0x18608>
  41af54:	ldrb	w0, [x19, #1154]
  41af58:	cbz	w0, 41af78 <ferror@plt+0x18608>
  41af5c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41af60:	mov	w2, w22
  41af64:	add	x4, x4, #0x2fb
  41af68:	mov	x0, x19
  41af6c:	mov	w3, #0x0                   	// #0
  41af70:	mov	w1, #0x2                   	// #2
  41af74:	bl	4195fc <ferror@plt+0x16c8c>
  41af78:	orr	w20, w20, #0x2
  41af7c:	b	41aca0 <ferror@plt+0x18330>
  41af80:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41af84:	mov	x6, x21
  41af88:	mov	w5, w24
  41af8c:	add	x4, x4, #0x327
  41af90:	b	41aea0 <ferror@plt+0x18530>
  41af94:	mov	w1, #0x7                   	// #7
  41af98:	b	41b0b8 <ferror@plt+0x18748>
  41af9c:	mov	x0, x19
  41afa0:	bl	4196e0 <ferror@plt+0x16d70>
  41afa4:	b	41b120 <ferror@plt+0x187b0>
  41afa8:	cmp	w23, #0xa
  41afac:	b.ne	41afe8 <ferror@plt+0x18678>  // b.any
  41afb0:	orr	w20, w20, #0x100
  41afb4:	b	41ab18 <ferror@plt+0x181a8>
  41afb8:	mov	w20, #0x111                 	// #273
  41afbc:	b	41ab18 <ferror@plt+0x181a8>
  41afc0:	cmp	w26, #0x9
  41afc4:	b.hi	41ad58 <ferror@plt+0x183e8>  // b.pmore
  41afc8:	mov	w23, #0xa                   	// #10
  41afcc:	cmp	w23, #0x10
  41afd0:	eor	w4, w4, #0x1
  41afd4:	csel	w4, w4, wzr, eq  // eq = none
  41afd8:	cbz	w4, 41ad80 <ferror@plt+0x18410>
  41afdc:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41afe0:	add	x4, x4, #0x178
  41afe4:	b	41ab00 <ferror@plt+0x18190>
  41afe8:	orr	w0, w20, #0x400
  41afec:	cmp	w23, #0x10
  41aff0:	orr	w20, w20, #0x200
  41aff4:	csel	w20, w20, w0, eq  // eq = none
  41aff8:	b	41ab18 <ferror@plt+0x181a8>
  41affc:	cmp	w20, #0x2
  41b000:	b.ne	41ae0c <ferror@plt+0x1849c>  // b.any
  41b004:	ldrb	w0, [x21]
  41b008:	cmp	w0, #0x2b
  41b00c:	b.eq	41b018 <ferror@plt+0x186a8>  // b.none
  41b010:	cmp	w0, #0x2d
  41b014:	b.ne	41b01c <ferror@plt+0x186ac>  // b.any
  41b018:	add	x21, x21, #0x1
  41b01c:	ldrb	w1, [x21]
  41b020:	ldrb	w0, [x21]
  41b024:	ldrh	w1, [x27, x1, lsl #1]
  41b028:	tbnz	w1, #2, 41add8 <ferror@plt+0x18468>
  41b02c:	cmp	w0, #0x27
  41b030:	b.ne	41b03c <ferror@plt+0x186cc>  // b.any
  41b034:	ldrb	w0, [x19, #1166]
  41b038:	cbnz	w0, 41ac18 <ferror@plt+0x182a8>
  41b03c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41b040:	add	x4, x4, #0x1f7
  41b044:	b	41ab00 <ferror@plt+0x18190>
  41b048:	cmp	w26, w23
  41b04c:	b.cs	41ad2c <ferror@plt+0x183bc>  // b.hs, b.nlast
  41b050:	sub	x24, x24, x21
  41b054:	mov	x1, x21
  41b058:	mov	x2, x24
  41b05c:	mov	x0, x19
  41b060:	bl	419e34 <ferror@plt+0x174c4>
  41b064:	mov	w20, w0
  41b068:	cbnz	w0, 41b084 <ferror@plt+0x18714>
  41b06c:	ldrb	w0, [x19, #1161]
  41b070:	cbz	w0, 41af80 <ferror@plt+0x18610>
  41b074:	cbz	x25, 41b07c <ferror@plt+0x1870c>
  41b078:	str	x21, [x25]
  41b07c:	mov	w20, #0x1040                	// #4160
  41b080:	movk	w20, #0x100, lsl #16
  41b084:	ldrb	w0, [x19, #1138]
  41b088:	and	w25, w20, #0xf0
  41b08c:	cbz	w0, 41b0d8 <ferror@plt+0x18768>
  41b090:	mov	x0, x19
  41b094:	bl	42607c <ferror@plt+0x2370c>
  41b098:	cbnz	w0, 41b0d8 <ferror@plt+0x18768>
  41b09c:	and	w0, w20, #0x3000
  41b0a0:	cmp	w25, #0x40
  41b0a4:	b.ne	41b0b0 <ferror@plt+0x18740>  // b.any
  41b0a8:	ldrb	w1, [x19, #1139]
  41b0ac:	cbnz	w1, 41af94 <ferror@plt+0x18624>
  41b0b0:	cbz	w0, 41b0d8 <ferror@plt+0x18768>
  41b0b4:	mov	w1, #0x6                   	// #6
  41b0b8:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41b0bc:	mov	x6, x21
  41b0c0:	mov	w5, w24
  41b0c4:	add	x4, x4, #0x26c
  41b0c8:	mov	w2, w22
  41b0cc:	mov	x0, x19
  41b0d0:	mov	w3, #0x0                   	// #0
  41b0d4:	bl	41966c <ferror@plt+0x16cfc>
  41b0d8:	cmp	w25, #0x40
  41b0dc:	b.ne	41b120 <ferror@plt+0x187b0>  // b.any
  41b0e0:	ldrb	w0, [x19, #1139]
  41b0e4:	cbz	w0, 41b120 <ferror@plt+0x187b0>
  41b0e8:	ldrb	w1, [x19, #1120]
  41b0ec:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  41b0f0:	adrp	x4, 451000 <_obstack_memory_used@@Base+0x17198>
  41b0f4:	add	x0, x0, #0xf81
  41b0f8:	cmp	w1, #0x0
  41b0fc:	add	x4, x4, #0xf59
  41b100:	csel	x4, x4, x0, ne  // ne = any
  41b104:	ldrb	w0, [x19, #1152]
  41b108:	mov	w2, w22
  41b10c:	mov	w3, #0x0                   	// #0
  41b110:	mov	w1, #0x7                   	// #7
  41b114:	cbz	w0, 41af9c <ferror@plt+0x1862c>
  41b118:	mov	x0, x19
  41b11c:	bl	41966c <ferror@plt+0x16cfc>
  41b120:	orr	w20, w20, #0x1
  41b124:	b	41aca0 <ferror@plt+0x18330>
  41b128:	cmp	w23, #0xa
  41b12c:	b.ls	41ac2c <ferror@plt+0x182bc>  // b.plast
  41b130:	cmp	w23, #0x10
  41b134:	b.ne	41ac2c <ferror@plt+0x182bc>  // b.any
  41b138:	and	w0, w0, #0xffffffdf
  41b13c:	cmp	w0, #0x50
  41b140:	b	41abfc <ferror@plt+0x1828c>
  41b144:	stp	x29, x30, [sp, #-128]!
  41b148:	mov	w10, w2
  41b14c:	mov	x7, x0
  41b150:	mov	x29, sp
  41b154:	stp	x19, x20, [sp, #16]
  41b158:	ubfx	x0, x10, #12, #1
  41b15c:	ldr	w11, [x1, #8]
  41b160:	stp	xzr, xzr, [x8]
  41b164:	mov	x19, x8
  41b168:	cmp	w11, #0x1
  41b16c:	strb	w0, [x8, #16]
  41b170:	strb	wzr, [x8, #17]
  41b174:	ldr	x0, [x1, #16]
  41b178:	b.ne	41b198 <ferror@plt+0x18828>  // b.any
  41b17c:	ldrb	w0, [x0]
  41b180:	sub	w0, w0, #0x30
  41b184:	sxtw	x0, w0
  41b188:	str	x0, [x8, #8]
  41b18c:	ldp	x19, x20, [sp, #16]
  41b190:	ldp	x29, x30, [sp], #128
  41b194:	ret
  41b198:	and	w1, w2, #0xf00
  41b19c:	cmp	w1, #0x400
  41b1a0:	ldr	x18, [x7, #1208]
  41b1a4:	b.ne	41b30c <ferror@plt+0x1899c>  // b.any
  41b1a8:	add	x9, x0, #0x1
  41b1ac:	mov	w6, #0x8                   	// #8
  41b1b0:	neg	w5, w18
  41b1b4:	mov	x1, #0xffffffffffffffff    	// #-1
  41b1b8:	cmp	x18, #0x40
  41b1bc:	mov	w15, w6
  41b1c0:	lsr	x5, x1, x5
  41b1c4:	csel	x1, x5, x1, cc  // cc = lo, ul, last
  41b1c8:	mov	x5, #0x1                   	// #1
  41b1cc:	adrp	x13, 457000 <_obstack_memory_used@@Base+0x1d198>
  41b1d0:	sub	x5, x5, w6, uxtw
  41b1d4:	adrp	x14, 456000 <_obstack_memory_used@@Base+0x1c198>
  41b1d8:	add	x5, x5, x1
  41b1dc:	add	x11, x0, w11, uxtw
  41b1e0:	add	x13, x13, #0x21a
  41b1e4:	add	x14, x14, #0xf08
  41b1e8:	mov	w12, #0x0                   	// #0
  41b1ec:	udiv	x5, x5, x15
  41b1f0:	add	x5, x5, #0x1
  41b1f4:	cmp	x9, x11
  41b1f8:	b.cs	41b388 <ferror@plt+0x18a18>  // b.hs, b.nlast
  41b1fc:	ldrb	w1, [x9]
  41b200:	ldrb	w0, [x9]
  41b204:	ldrh	w1, [x13, x1, lsl #1]
  41b208:	tbnz	w1, #2, 41b218 <ferror@plt+0x188a8>
  41b20c:	cmp	w6, #0x10
  41b210:	b.ne	41b340 <ferror@plt+0x189d0>  // b.any
  41b214:	tbz	w1, #8, 41b340 <ferror@plt+0x189d0>
  41b218:	ldr	x4, [x19, #8]
  41b21c:	ldrb	w0, [x14, w0, sxtw]
  41b220:	cmp	x4, x5
  41b224:	b.cc	41b358 <ferror@plt+0x189e8>  // b.lo, b.ul, b.last
  41b228:	ldrb	w17, [x19, #16]
  41b22c:	cmp	w6, #0x2
  41b230:	ldr	x1, [x19]
  41b234:	b.eq	41b364 <ferror@plt+0x189f4>  // b.none
  41b238:	cmp	w6, #0x10
  41b23c:	cset	w5, eq  // eq = none
  41b240:	add	w5, w5, #0x3
  41b244:	mov	w2, #0x40                  	// #64
  41b248:	sub	w2, w2, w5
  41b24c:	lsl	x8, x4, x5
  41b250:	cmp	w6, #0xa
  41b254:	lsl	x5, x1, x5
  41b258:	lsr	x3, x4, x2
  41b25c:	orr	x5, x5, x3
  41b260:	b.ne	41b36c <ferror@plt+0x189fc>  // b.any
  41b264:	lsr	x3, x4, #63
  41b268:	lsl	x16, x4, #1
  41b26c:	add	x3, x3, x1, lsl #1
  41b270:	adds	x4, x0, x16
  41b274:	cinc	x3, x3, cs  // cs = hs, nlast
  41b278:	adds	x20, x8, x4
  41b27c:	cinc	x3, x3, cs  // cs = hs, nlast
  41b280:	adds	x5, x5, x3
  41b284:	b.cs	41b378 <ferror@plt+0x18a08>  // b.hs, b.nlast
  41b288:	lsr	x1, x1, x2
  41b28c:	cmp	x1, #0x0
  41b290:	cset	w0, ne  // ne = any
  41b294:	stp	x5, x20, [sp, #104]
  41b298:	add	x8, sp, #0x40
  41b29c:	strb	w17, [sp, #120]
  41b2a0:	strb	w0, [sp, #121]
  41b2a4:	ldp	x0, x1, [sp, #104]
  41b2a8:	stp	x0, x1, [sp, #32]
  41b2ac:	ldr	x0, [sp, #120]
  41b2b0:	mov	x1, x18
  41b2b4:	str	x0, [sp, #48]
  41b2b8:	add	x0, sp, #0x20
  41b2bc:	bl	419f4c <ferror@plt+0x175dc>
  41b2c0:	ldp	x1, x0, [sp, #64]
  41b2c4:	stp	x1, x0, [sp, #104]
  41b2c8:	ldr	x0, [sp, #80]
  41b2cc:	str	x0, [sp, #120]
  41b2d0:	ldr	x2, [sp, #112]
  41b2d4:	ubfx	w0, w0, #8, #8
  41b2d8:	cmp	x20, x2
  41b2dc:	b.ne	41b380 <ferror@plt+0x18a10>  // b.any
  41b2e0:	cmp	x5, x1
  41b2e4:	csinc	w0, w0, wzr, eq  // eq = none
  41b2e8:	strb	w0, [sp, #121]
  41b2ec:	mov	x5, #0x0                   	// #0
  41b2f0:	ldp	x0, x1, [sp, #104]
  41b2f4:	stp	x0, x1, [x19]
  41b2f8:	ldr	x0, [sp, #120]
  41b2fc:	str	x0, [x19, #16]
  41b300:	ubfx	w0, w0, #8, #8
  41b304:	orr	w12, w0, w12
  41b308:	b	41b350 <ferror@plt+0x189e0>
  41b30c:	cmp	w1, #0x200
  41b310:	b.ne	41b320 <ferror@plt+0x189b0>  // b.any
  41b314:	add	x9, x0, #0x2
  41b318:	mov	w6, #0x10                  	// #16
  41b31c:	b	41b1b0 <ferror@plt+0x18840>
  41b320:	cmp	w1, #0x800
  41b324:	b.ne	41b334 <ferror@plt+0x189c4>  // b.any
  41b328:	add	x9, x0, #0x2
  41b32c:	mov	w6, #0x2                   	// #2
  41b330:	b	41b1b0 <ferror@plt+0x18840>
  41b334:	mov	x9, x0
  41b338:	mov	w6, #0xa                   	// #10
  41b33c:	b	41b1b0 <ferror@plt+0x18840>
  41b340:	cmp	w0, #0x27
  41b344:	b.ne	41b388 <ferror@plt+0x18a18>  // b.any
  41b348:	ldrb	w0, [x7, #1166]
  41b34c:	cbz	w0, 41b388 <ferror@plt+0x18a18>
  41b350:	add	x9, x9, #0x1
  41b354:	b	41b1f4 <ferror@plt+0x18884>
  41b358:	madd	x4, x15, x4, x0
  41b35c:	str	x4, [x19, #8]
  41b360:	b	41b350 <ferror@plt+0x189e0>
  41b364:	mov	w5, #0x1                   	// #1
  41b368:	b	41b244 <ferror@plt+0x188d4>
  41b36c:	mov	x16, #0x0                   	// #0
  41b370:	mov	x3, #0x0                   	// #0
  41b374:	b	41b270 <ferror@plt+0x18900>
  41b378:	mov	w0, #0x1                   	// #1
  41b37c:	b	41b294 <ferror@plt+0x18924>
  41b380:	mov	w0, #0x1                   	// #1
  41b384:	b	41b2e8 <ferror@plt+0x18978>
  41b388:	cbz	w12, 41b3a8 <ferror@plt+0x18a38>
  41b38c:	tbnz	w10, #24, 41b3a8 <ferror@plt+0x18a38>
  41b390:	mov	x0, x7
  41b394:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41b398:	mov	w1, #0x2                   	// #2
  41b39c:	add	x2, x2, #0x379
  41b3a0:	bl	419440 <ferror@plt+0x16ad0>
  41b3a4:	b	41b18c <ferror@plt+0x1881c>
  41b3a8:	ldrb	w0, [x19, #16]
  41b3ac:	cbnz	w0, 41b18c <ferror@plt+0x1881c>
  41b3b0:	ldrb	w0, [x7, #1160]
  41b3b4:	cbz	w0, 41b3c0 <ferror@plt+0x18a50>
  41b3b8:	ldrb	w0, [x7, #16]
  41b3bc:	cbnz	w0, 41b18c <ferror@plt+0x1881c>
  41b3c0:	ldp	x0, x1, [x19]
  41b3c4:	mov	x2, x18
  41b3c8:	bl	41a244 <ferror@plt+0x178d4>
  41b3cc:	tst	w0, #0xff
  41b3d0:	b.ne	41b18c <ferror@plt+0x1881c>  // b.any
  41b3d4:	cmp	w6, #0xa
  41b3d8:	b.ne	41b3fc <ferror@plt+0x18a8c>  // b.any
  41b3dc:	ldrb	w0, [x7, #1152]
  41b3e0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41b3e4:	add	x2, x2, #0x3a4
  41b3e8:	cmp	w0, #0x0
  41b3ec:	mov	x0, x7
  41b3f0:	cset	w1, ne  // ne = any
  41b3f4:	lsl	w1, w1, #1
  41b3f8:	bl	419440 <ferror@plt+0x16ad0>
  41b3fc:	mov	w0, #0x1                   	// #1
  41b400:	strb	w0, [x19, #16]
  41b404:	b	41b18c <ferror@plt+0x1881c>
  41b408:	stp	x29, x30, [sp, #-48]!
  41b40c:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  41b410:	movk	x1, #0xcccd
  41b414:	mov	x29, sp
  41b418:	stp	x19, x20, [sp, #16]
  41b41c:	mov	x20, x0
  41b420:	ldr	x0, [x0, #1096]
  41b424:	str	x21, [sp, #32]
  41b428:	ldr	x21, [x20, #1104]
  41b42c:	sub	x21, x21, x0
  41b430:	asr	x19, x21, #3
  41b434:	mul	x19, x19, x1
  41b438:	mov	x1, #0x50                  	// #80
  41b43c:	add	x19, x19, #0xa
  41b440:	mul	x19, x19, x1
  41b444:	mov	x1, x19
  41b448:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  41b44c:	add	x19, x0, x19
  41b450:	str	x0, [x20, #1096]
  41b454:	str	x19, [x20, #1104]
  41b458:	add	x0, x0, x21
  41b45c:	ldp	x19, x20, [sp, #16]
  41b460:	ldr	x21, [sp, #32]
  41b464:	ldp	x29, x30, [sp], #48
  41b468:	ret
  41b46c:	stp	x29, x30, [sp, #-400]!
  41b470:	mov	x29, sp
  41b474:	stp	x27, x28, [sp, #80]
  41b478:	mov	x28, x0
  41b47c:	and	w0, w1, #0xff
  41b480:	stp	x19, x20, [sp, #16]
  41b484:	ldr	x19, [x28, #1096]
  41b488:	stp	x21, x22, [sp, #32]
  41b48c:	mov	w21, #0x1                   	// #1
  41b490:	stp	x23, x24, [sp, #48]
  41b494:	stp	x25, x26, [sp, #64]
  41b498:	str	wzr, [x28, #28]
  41b49c:	str	xzr, [x28, #432]
  41b4a0:	stp	wzr, wzr, [sp, #128]
  41b4a4:	str	w0, [sp, #136]
  41b4a8:	mov	w0, #0x16                  	// #22
  41b4ac:	str	w0, [x19, #36]
  41b4b0:	str	wzr, [sp, #276]
  41b4b4:	ldr	w0, [sp, #128]
  41b4b8:	add	x1, sp, #0x114
  41b4bc:	add	w0, w0, #0x1
  41b4c0:	str	w0, [sp, #128]
  41b4c4:	mov	x0, x28
  41b4c8:	bl	42883c <ferror@plt+0x25ecc>
  41b4cc:	ldrb	w20, [x0, #4]
  41b4d0:	mov	x23, x0
  41b4d4:	ldr	w22, [sp, #276]
  41b4d8:	cmp	w20, #0x5
  41b4dc:	b.eq	41ba64 <ferror@plt+0x190f4>  // b.none
  41b4e0:	b.hi	41b530 <ferror@plt+0x18bc0>  // b.pmore
  41b4e4:	cmp	w20, #0x1
  41b4e8:	b.eq	41b9f4 <ferror@plt+0x19084>  // b.none
  41b4ec:	cmp	w20, #0x4
  41b4f0:	b.eq	41ba54 <ferror@plt+0x190e4>  // b.none
  41b4f4:	sub	w0, w20, #0x1
  41b4f8:	cmp	w0, #0x19
  41b4fc:	b.ls	41ba04 <ferror@plt+0x19094>  // b.plast
  41b500:	mov	x1, x23
  41b504:	mov	x0, x28
  41b508:	bl	4212ac <ferror@plt+0x1e93c>
  41b50c:	mov	x5, x0
  41b510:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41b514:	add	x4, x4, #0x5b5
  41b518:	mov	w2, w22
  41b51c:	mov	w3, #0x0                   	// #0
  41b520:	mov	w1, #0x3                   	// #3
  41b524:	mov	x0, x28
  41b528:	bl	4195fc <ferror@plt+0x16c8c>
  41b52c:	b	41ba4c <ferror@plt+0x190dc>
  41b530:	cmp	w20, #0x35
  41b534:	b.eq	41b544 <ferror@plt+0x18bd4>  // b.none
  41b538:	b.hi	41b594 <ferror@plt+0x18c24>  // b.pmore
  41b53c:	cmp	w20, #0x25
  41b540:	b.ne	41b4f4 <ferror@plt+0x18b84>  // b.any
  41b544:	cbnz	w21, 41b5a8 <ferror@plt+0x18c38>
  41b548:	mov	x1, x23
  41b54c:	mov	x0, x28
  41b550:	bl	4212ac <ferror@plt+0x1e93c>
  41b554:	mov	x5, x0
  41b558:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41b55c:	mov	w2, w22
  41b560:	add	x4, x4, #0x3db
  41b564:	mov	x0, x28
  41b568:	mov	w3, #0x0                   	// #0
  41b56c:	mov	w1, #0x3                   	// #3
  41b570:	bl	4195fc <ferror@plt+0x16c8c>
  41b574:	mov	w0, w21
  41b578:	ldp	x19, x20, [sp, #16]
  41b57c:	ldp	x21, x22, [sp, #32]
  41b580:	ldp	x23, x24, [sp, #48]
  41b584:	ldp	x25, x26, [sp, #64]
  41b588:	ldp	x27, x28, [sp, #80]
  41b58c:	ldp	x29, x30, [sp], #400
  41b590:	ret
  41b594:	sub	w0, w20, #0x37
  41b598:	and	w0, w0, #0xff
  41b59c:	cmp	w0, #0x5
  41b5a0:	b.ls	41b544 <ferror@plt+0x18bd4>  // b.plast
  41b5a4:	b	41b4f4 <ferror@plt+0x18b84>
  41b5a8:	str	wzr, [sp, #328]
  41b5ac:	cmp	w20, #0x37
  41b5b0:	b.eq	41b680 <ferror@plt+0x18d10>  // b.none
  41b5b4:	b.hi	41b5e0 <ferror@plt+0x18c70>  // b.pmore
  41b5b8:	cmp	w20, #0x25
  41b5bc:	b.eq	41b98c <ferror@plt+0x1901c>  // b.none
  41b5c0:	cmp	w20, #0x35
  41b5c4:	b.eq	41b720 <ferror@plt+0x18db0>  // b.none
  41b5c8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41b5cc:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  41b5d0:	add	x2, x2, #0x596
  41b5d4:	add	x0, x0, #0x5a1
  41b5d8:	mov	w1, #0x4ad                 	// #1197
  41b5dc:	bl	402980 <ferror@plt+0x10>
  41b5e0:	sub	w20, w20, #0x38
  41b5e4:	and	w20, w20, #0xff
  41b5e8:	cmp	w20, #0x4
  41b5ec:	b.hi	41b5c8 <ferror@plt+0x18c58>  // b.pmore
  41b5f0:	add	x2, sp, #0x130
  41b5f4:	mov	x1, x23
  41b5f8:	add	x3, sp, #0x148
  41b5fc:	mov	x0, x28
  41b600:	bl	41595c <ferror@plt+0x12fec>
  41b604:	mov	w1, w0
  41b608:	ldr	w2, [sp, #328]
  41b60c:	cbnz	w2, 41b94c <ferror@plt+0x18fdc>
  41b610:	tbz	w0, #31, 41b94c <ferror@plt+0x18fdc>
  41b614:	orr	x1, x1, #0xffffffff00000000
  41b618:	mov	x0, #0xffffffffffffffff    	// #-1
  41b61c:	stp	x0, x1, [sp, #352]
  41b620:	add	x8, sp, #0xf0
  41b624:	ldp	x0, x1, [sp, #352]
  41b628:	stp	x0, x1, [sp, #208]
  41b62c:	ldr	x1, [x28, #1208]
  41b630:	strh	wzr, [sp, #368]
  41b634:	ldr	x0, [sp, #368]
  41b638:	str	x0, [sp, #224]
  41b63c:	add	x0, sp, #0xd0
  41b640:	bl	419f4c <ferror@plt+0x175dc>
  41b644:	ldp	x2, x0, [sp, #240]
  41b648:	stp	x2, x0, [sp, #352]
  41b64c:	ldr	x0, [sp, #256]
  41b650:	str	x0, [sp, #368]
  41b654:	ldr	x1, [sp, #360]
  41b658:	ubfx	w0, w0, #8, #8
  41b65c:	ldr	w3, [sp, #328]
  41b660:	strb	w0, [sp, #369]
  41b664:	cmp	w3, #0x0
  41b668:	stp	x2, x1, [sp, #352]
  41b66c:	cset	w3, ne  // ne = any
  41b670:	strb	w3, [sp, #368]
  41b674:	ldr	x4, [sp, #368]
  41b678:	str	x4, [sp, #392]
  41b67c:	b	41b7dc <ferror@plt+0x18e6c>
  41b680:	mov	w3, w22
  41b684:	mov	x1, x23
  41b688:	mov	x0, x28
  41b68c:	mov	x2, #0x0                   	// #0
  41b690:	bl	41aa08 <ferror@plt+0x18098>
  41b694:	str	w0, [sp, #304]
  41b698:	tbz	w0, #24, 41b6b0 <ferror@plt+0x18d40>
  41b69c:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41b6a0:	mov	x0, x28
  41b6a4:	add	x2, x2, #0x405
  41b6a8:	mov	w1, #0x3                   	// #3
  41b6ac:	bl	419440 <ferror@plt+0x16ad0>
  41b6b0:	ldr	w2, [sp, #304]
  41b6b4:	and	w0, w2, #0xf
  41b6b8:	cmp	w0, #0x1
  41b6bc:	b.eq	41b6f0 <ferror@plt+0x18d80>  // b.none
  41b6c0:	cmp	w0, #0x2
  41b6c4:	b.ne	41b6e4 <ferror@plt+0x18d74>  // b.any
  41b6c8:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41b6cc:	add	x4, x4, #0x435
  41b6d0:	mov	w2, w22
  41b6d4:	mov	x0, x28
  41b6d8:	mov	w3, #0x0                   	// #0
  41b6dc:	mov	w1, #0x3                   	// #3
  41b6e0:	bl	4195fc <ferror@plt+0x16c8c>
  41b6e4:	mov	w0, #0x0                   	// #0
  41b6e8:	mov	x1, #0x0                   	// #0
  41b6ec:	b	41b950 <ferror@plt+0x18fe0>
  41b6f0:	tbnz	w2, #13, 41b714 <ferror@plt+0x18da4>
  41b6f4:	add	x8, sp, #0x178
  41b6f8:	mov	x1, x23
  41b6fc:	mov	x0, x28
  41b700:	bl	41b144 <ferror@plt+0x187d4>
  41b704:	ldrb	w3, [sp, #392]
  41b708:	ldrb	w0, [sp, #393]
  41b70c:	ldp	x2, x1, [sp, #376]
  41b710:	b	41b7dc <ferror@plt+0x18e6c>
  41b714:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41b718:	add	x4, x4, #0x462
  41b71c:	b	41b6d0 <ferror@plt+0x18d60>
  41b720:	ldr	x1, [x23, #8]
  41b724:	ldr	x0, [x28, #1248]
  41b728:	cmp	x1, x0
  41b72c:	b.ne	41b8ec <ferror@plt+0x18f7c>  // b.any
  41b730:	ldrb	w0, [x28, #24]
  41b734:	ldr	x21, [x28, #136]
  41b738:	add	w0, w0, #0x1
  41b73c:	strb	w0, [x28, #24]
  41b740:	mov	x0, x28
  41b744:	bl	4287a8 <ferror@plt+0x25e38>
  41b748:	mov	x20, x0
  41b74c:	ldrb	w0, [x0, #4]
  41b750:	cmp	w0, #0x14
  41b754:	b.ne	41b804 <ferror@plt+0x18e94>  // b.any
  41b758:	mov	x0, x28
  41b75c:	bl	4287a8 <ferror@plt+0x25e38>
  41b760:	mov	x20, x0
  41b764:	mov	w0, #0x1                   	// #1
  41b768:	ldrb	w1, [x20, #4]
  41b76c:	cmp	w1, #0x35
  41b770:	b.ne	41b880 <ferror@plt+0x18f10>  // b.any
  41b774:	ldr	x20, [x20, #8]
  41b778:	cbz	w0, 41b80c <ferror@plt+0x18e9c>
  41b77c:	mov	x0, x28
  41b780:	bl	4287a8 <ferror@plt+0x25e38>
  41b784:	ldrb	w0, [x0, #4]
  41b788:	cmp	w0, #0x15
  41b78c:	b.eq	41b80c <ferror@plt+0x18e9c>  // b.none
  41b790:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41b794:	mov	x0, x28
  41b798:	add	x2, x2, #0x48e
  41b79c:	mov	w1, #0x3                   	// #3
  41b7a0:	bl	419440 <ferror@plt+0x16ad0>
  41b7a4:	mov	x20, #0x0                   	// #0
  41b7a8:	ldrb	w0, [x28, #24]
  41b7ac:	sub	w0, w0, #0x1
  41b7b0:	strb	w0, [x28, #24]
  41b7b4:	cbz	x20, 41b8e4 <ferror@plt+0x18f74>
  41b7b8:	ldrb	w0, [x20, #18]
  41b7bc:	tbz	w0, #1, 41b8e4 <ferror@plt+0x18f74>
  41b7c0:	ldrh	w1, [x20, #18]
  41b7c4:	eor	x1, x1, #0x100
  41b7c8:	ubfx	w1, w1, #8, #1
  41b7cc:	and	x1, x1, #0xff
  41b7d0:	mov	w0, #0x0                   	// #0
  41b7d4:	mov	w3, #0x0                   	// #0
  41b7d8:	mov	x2, #0x0                   	// #0
  41b7dc:	strb	w0, [sp, #393]
  41b7e0:	add	x0, sp, #0x250
  41b7e4:	stp	x2, x1, [sp, #376]
  41b7e8:	mov	w21, #0x0                   	// #0
  41b7ec:	strb	w3, [sp, #392]
  41b7f0:	ldp	x0, x1, [x0, #-216]
  41b7f4:	stp	x0, x1, [x19, #8]
  41b7f8:	ldr	x0, [sp, #392]
  41b7fc:	str	x0, [x19, #24]
  41b800:	b	41b4b4 <ferror@plt+0x18b44>
  41b804:	mov	w0, #0x0                   	// #0
  41b808:	b	41b768 <ferror@plt+0x18df8>
  41b80c:	cbz	x20, 41b7a4 <ferror@plt+0x18e34>
  41b810:	ldr	x0, [x28, #136]
  41b814:	cmp	x21, x0
  41b818:	b.ne	41b828 <ferror@plt+0x18eb8>  // b.any
  41b81c:	add	x0, x28, #0x50
  41b820:	cmp	x21, x0
  41b824:	b.eq	41b844 <ferror@plt+0x18ed4>  // b.none
  41b828:	ldrb	w0, [x28, #1150]
  41b82c:	cbz	w0, 41b844 <ferror@plt+0x18ed4>
  41b830:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41b834:	mov	x0, x28
  41b838:	add	x2, x2, #0x503
  41b83c:	mov	w1, #0x18                  	// #24
  41b840:	bl	41951c <ferror@plt+0x16bac>
  41b844:	ldrb	w0, [x20, #18]
  41b848:	and	w0, w0, #0x3
  41b84c:	cmp	w0, #0x2
  41b850:	b.ne	41b864 <ferror@plt+0x18ef4>  // b.any
  41b854:	ldr	x1, [x20, #24]
  41b858:	ldrb	w0, [x1, #19]
  41b85c:	orr	w0, w0, #0x20
  41b860:	strb	w0, [x1, #19]
  41b864:	ldrh	w0, [x20, #18]
  41b868:	tbnz	w0, #7, 41b878 <ferror@plt+0x18f08>
  41b86c:	mov	x1, x20
  41b870:	mov	x0, x28
  41b874:	bl	426f84 <ferror@plt+0x24614>
  41b878:	str	x20, [x28, #432]
  41b87c:	b	41b7a8 <ferror@plt+0x18e38>
  41b880:	mov	x0, x28
  41b884:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41b888:	mov	w1, #0x3                   	// #3
  41b88c:	add	x2, x2, #0x4aa
  41b890:	bl	419440 <ferror@plt+0x16ad0>
  41b894:	ldrh	w0, [x20, #6]
  41b898:	tbz	w0, #4, 41b7a4 <ferror@plt+0x18e34>
  41b89c:	ldrb	w0, [x20, #4]
  41b8a0:	mov	x1, x20
  41b8a4:	strb	w0, [sp, #380]
  41b8a8:	mov	x0, x28
  41b8ac:	strh	wzr, [sp, #382]
  41b8b0:	bl	4212ac <ferror@plt+0x1e93c>
  41b8b4:	add	x1, sp, #0x178
  41b8b8:	mov	x20, x0
  41b8bc:	mov	x0, x28
  41b8c0:	bl	4212ac <ferror@plt+0x1e93c>
  41b8c4:	mov	x3, x20
  41b8c8:	mov	x4, x0
  41b8cc:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41b8d0:	mov	x0, x28
  41b8d4:	add	x2, x2, #0x4d4
  41b8d8:	mov	w1, #0x3                   	// #3
  41b8dc:	bl	419440 <ferror@plt+0x16ad0>
  41b8e0:	b	41b7a4 <ferror@plt+0x18e34>
  41b8e4:	mov	w1, #0x0                   	// #0
  41b8e8:	b	41b7cc <ferror@plt+0x18e5c>
  41b8ec:	ldr	x0, [x28, #1288]
  41b8f0:	cmp	x1, x0
  41b8f4:	b.ne	41b90c <ferror@plt+0x18f9c>  // b.any
  41b8f8:	add	x8, sp, #0x178
  41b8fc:	mov	w1, #0x0                   	// #0
  41b900:	mov	x0, x28
  41b904:	bl	41a0b0 <ferror@plt+0x17740>
  41b908:	b	41b704 <ferror@plt+0x18d94>
  41b90c:	ldr	x0, [x28, #1296]
  41b910:	cmp	x1, x0
  41b914:	b.ne	41b924 <ferror@plt+0x18fb4>  // b.any
  41b918:	add	x8, sp, #0x178
  41b91c:	mov	w1, #0x1                   	// #1
  41b920:	b	41b900 <ferror@plt+0x18f90>
  41b924:	ldrb	w0, [x28, #1120]
  41b928:	cbz	w0, 41b958 <ferror@plt+0x18fe8>
  41b92c:	ldr	x0, [x28, #1256]
  41b930:	cmp	x1, x0
  41b934:	b.eq	41b944 <ferror@plt+0x18fd4>  // b.none
  41b938:	ldr	x2, [x28, #1264]
  41b93c:	cmp	x1, x2
  41b940:	b.ne	41b958 <ferror@plt+0x18fe8>  // b.any
  41b944:	cmp	x1, x0
  41b948:	cset	x1, eq  // eq = none
  41b94c:	mov	w0, #0x0                   	// #0
  41b950:	mov	x2, #0x0                   	// #0
  41b954:	b	41b65c <ferror@plt+0x18cec>
  41b958:	ldrb	w0, [x28, #1149]
  41b95c:	cbz	w0, 41b6e8 <ferror@plt+0x18d78>
  41b960:	ldr	w0, [x28, #28]
  41b964:	cbnz	w0, 41b6e4 <ferror@plt+0x18d74>
  41b968:	ldr	x5, [x1]
  41b96c:	mov	w2, w22
  41b970:	mov	x0, x28
  41b974:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41b978:	mov	w3, #0x0                   	// #0
  41b97c:	add	x4, x4, #0x52d
  41b980:	mov	w1, #0xd                   	// #13
  41b984:	bl	41966c <ferror@plt+0x16cfc>
  41b988:	b	41b6e4 <ferror@plt+0x18d74>
  41b98c:	ldrb	w0, [x28, #18]
  41b990:	cbnz	w0, 41b9b8 <ferror@plt+0x19048>
  41b994:	ldrb	w0, [x28, #1154]
  41b998:	cbz	w0, 41b9cc <ferror@plt+0x1905c>
  41b99c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41b9a0:	mov	w2, w22
  41b9a4:	add	x4, x4, #0x551
  41b9a8:	mov	x0, x28
  41b9ac:	mov	w3, #0x0                   	// #0
  41b9b0:	mov	w1, #0x2                   	// #2
  41b9b4:	bl	4195fc <ferror@plt+0x16c8c>
  41b9b8:	add	x1, sp, #0x130
  41b9bc:	mov	x0, x28
  41b9c0:	bl	4185c8 <ferror@plt+0x15c58>
  41b9c4:	ldr	w1, [sp, #304]
  41b9c8:	b	41b94c <ferror@plt+0x18fdc>
  41b9cc:	ldrb	w0, [x28, #1132]
  41b9d0:	cbz	w0, 41b9b8 <ferror@plt+0x19048>
  41b9d4:	mov	w2, w22
  41b9d8:	mov	x0, x28
  41b9dc:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41b9e0:	mov	w3, #0x0                   	// #0
  41b9e4:	add	x4, x4, #0x570
  41b9e8:	mov	w1, #0x1                   	// #1
  41b9ec:	bl	41966c <ferror@plt+0x16cfc>
  41b9f0:	b	41b9b8 <ferror@plt+0x19048>
  41b9f4:	ldr	w0, [sp, #128]
  41b9f8:	cmp	w0, #0x1
  41b9fc:	cset	w0, eq  // eq = none
  41ba00:	str	w0, [sp, #132]
  41ba04:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  41ba08:	add	x0, x0, #0xea6
  41ba0c:	str	x0, [sp, #112]
  41ba10:	add	x0, x0, w20, sxtw #1
  41ba14:	sxtw	x2, w20
  41ba18:	ldrb	w1, [x0, #1]
  41ba1c:	tbz	w1, #0, 41ba70 <ferror@plt+0x19100>
  41ba20:	cbz	w21, 41b548 <ferror@plt+0x18bd8>
  41ba24:	ldr	w0, [x19, #36]
  41ba28:	sub	w0, w0, #0x1
  41ba2c:	cmp	w0, #0x1b
  41ba30:	b.ls	41bb24 <ferror@plt+0x191b4>  // b.plast
  41ba34:	ldr	w3, [x19, #36]
  41ba38:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41ba3c:	mov	x0, x28
  41ba40:	add	x2, x2, #0x66b
  41ba44:	mov	w1, #0x4                   	// #4
  41ba48:	bl	419440 <ferror@plt+0x16ad0>
  41ba4c:	mov	w21, #0x0                   	// #0
  41ba50:	b	41b574 <ferror@plt+0x18c04>
  41ba54:	cmp	w21, #0x0
  41ba58:	mov	w0, #0x1b                  	// #27
  41ba5c:	csel	w20, w20, w0, eq  // eq = none
  41ba60:	b	41ba04 <ferror@plt+0x19094>
  41ba64:	cmp	w21, #0x0
  41ba68:	mov	w0, #0x1c                  	// #28
  41ba6c:	b	41ba5c <ferror@plt+0x190ec>
  41ba70:	cbz	w21, 41ba24 <ferror@plt+0x190b4>
  41ba74:	ldr	w0, [x19, #36]
  41ba78:	cmp	w20, #0x15
  41ba7c:	b.ne	41ba9c <ferror@plt+0x1912c>  // b.any
  41ba80:	cmp	w0, #0x14
  41ba84:	b.ne	41bad4 <ferror@plt+0x19164>  // b.any
  41ba88:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41ba8c:	add	x4, x4, #0x5e9
  41ba90:	mov	w2, w22
  41ba94:	mov	w3, #0x0                   	// #0
  41ba98:	b	41c79c <ferror@plt+0x19e2c>
  41ba9c:	cmp	w20, #0x16
  41baa0:	b.ne	41bad4 <ferror@plt+0x19164>  // b.any
  41baa4:	cmp	w0, #0x16
  41baa8:	b.ne	41bad4 <ferror@plt+0x19164>  // b.any
  41baac:	ldr	w1, [sp, #136]
  41bab0:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  41bab4:	adrp	x5, 451000 <_obstack_memory_used@@Base+0x17198>
  41bab8:	add	x0, x0, #0x3d5
  41babc:	add	x5, x5, #0xf55
  41bac0:	cmp	w1, #0x0
  41bac4:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41bac8:	csel	x5, x5, x0, ne  // ne = any
  41bacc:	add	x4, x4, #0x610
  41bad0:	b	41b518 <ferror@plt+0x18ba8>
  41bad4:	and	w0, w0, #0xfffffffd
  41bad8:	cmp	w0, #0x14
  41badc:	b.eq	41bafc <ferror@plt+0x1918c>  // b.none
  41bae0:	ldr	x1, [x19]
  41bae4:	mov	x0, x28
  41bae8:	bl	4212ac <ferror@plt+0x1e93c>
  41baec:	mov	x5, x0
  41baf0:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41baf4:	add	x4, x4, #0x626
  41baf8:	b	41b518 <ferror@plt+0x18ba8>
  41bafc:	sub	w0, w20, #0x15
  41bb00:	cmp	w0, #0x1
  41bb04:	b.ls	41ba24 <ferror@plt+0x190b4>  // b.plast
  41bb08:	mov	x1, x23
  41bb0c:	mov	x0, x28
  41bb10:	bl	4212ac <ferror@plt+0x1e93c>
  41bb14:	mov	x5, x0
  41bb18:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41bb1c:	add	x4, x4, #0x649
  41bb20:	b	41b518 <ferror@plt+0x18ba8>
  41bb24:	cmp	w20, #0x14
  41bb28:	b.eq	41c8bc <ferror@plt+0x19f4c>  // b.none
  41bb2c:	lsl	x0, x2, #1
  41bb30:	ubfx	x1, x1, #1, #1
  41bb34:	ldr	x2, [sp, #112]
  41bb38:	ldrb	w0, [x2, x0]
  41bb3c:	sub	w0, w0, w1
  41bb40:	str	w0, [sp, #140]
  41bb44:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  41bb48:	add	x0, x0, #0x6b8
  41bb4c:	str	x0, [sp, #144]
  41bb50:	ldrsw	x0, [x19, #36]
  41bb54:	ldr	x2, [sp, #112]
  41bb58:	lsl	x1, x0, #1
  41bb5c:	add	x0, x2, x0, lsl #1
  41bb60:	ldrb	w1, [x2, x1]
  41bb64:	ldr	w2, [sp, #140]
  41bb68:	cmp	w2, w1
  41bb6c:	b.cs	41c85c <ferror@plt+0x19eec>  // b.hs, b.nlast
  41bb70:	ldrb	w1, [x28, #1141]
  41bb74:	cbz	w1, 41bbd8 <ferror@plt+0x19268>
  41bb78:	ldrb	w0, [x0, #1]
  41bb7c:	tbz	w0, #2, 41bbd8 <ferror@plt+0x19268>
  41bb80:	ldrb	w0, [x19, #24]
  41bb84:	ldurb	w1, [x19, #-16]
  41bb88:	cmp	w1, w0
  41bb8c:	b.eq	41bbd8 <ferror@plt+0x19268>  // b.none
  41bb90:	ldr	x2, [x28, #1208]
  41bb94:	cbz	w0, 41bc08 <ferror@plt+0x19298>
  41bb98:	ldp	x0, x1, [x19, #-32]
  41bb9c:	bl	41a244 <ferror@plt+0x178d4>
  41bba0:	tst	w0, #0xff
  41bba4:	b.ne	41bbd8 <ferror@plt+0x19268>  // b.any
  41bba8:	ldr	x1, [x19]
  41bbac:	mov	x0, x28
  41bbb0:	ldur	w24, [x19, #-8]
  41bbb4:	bl	4212ac <ferror@plt+0x1e93c>
  41bbb8:	mov	x5, x0
  41bbbc:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41bbc0:	add	x4, x4, #0x684
  41bbc4:	mov	w2, w24
  41bbc8:	mov	x0, x28
  41bbcc:	mov	w3, #0x0                   	// #0
  41bbd0:	mov	w1, #0x0                   	// #0
  41bbd4:	bl	4195fc <ferror@plt+0x16c8c>
  41bbd8:	ldr	w0, [x19, #36]
  41bbdc:	str	w0, [sp, #96]
  41bbe0:	mov	w0, w0
  41bbe4:	sub	w1, w0, #0x1
  41bbe8:	cmp	w1, #0x1b
  41bbec:	b.hi	41ba34 <ferror@plt+0x190c4>  // b.pmore
  41bbf0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  41bbf4:	add	x0, x0, #0xe60
  41bbf8:	ldrh	w0, [x0, w1, uxtw #1]
  41bbfc:	adr	x1, 41bc08 <ferror@plt+0x19298>
  41bc00:	add	x0, x1, w0, sxth #2
  41bc04:	br	x0
  41bc08:	ldp	x0, x1, [x19, #8]
  41bc0c:	bl	41a244 <ferror@plt+0x178d4>
  41bc10:	tst	w0, #0xff
  41bc14:	b.ne	41bbd8 <ferror@plt+0x19268>  // b.any
  41bc18:	ldr	x1, [x19]
  41bc1c:	mov	x0, x28
  41bc20:	ldr	w24, [x19, #32]
  41bc24:	bl	4212ac <ferror@plt+0x1e93c>
  41bc28:	mov	x5, x0
  41bc2c:	ldr	x4, [sp, #144]
  41bc30:	b	41bbc4 <ferror@plt+0x19254>
  41bc34:	ldp	x0, x1, [x19, #8]
  41bc38:	stp	x0, x1, [sp, #352]
  41bc3c:	ldr	w1, [sp, #96]
  41bc40:	ldr	x0, [x19, #24]
  41bc44:	str	x0, [sp, #368]
  41bc48:	ldrb	w26, [x19, #24]
  41bc4c:	cmp	w1, #0x1b
  41bc50:	ldrb	w0, [x19, #25]
  41bc54:	ldp	x25, x27, [x19, #8]
  41bc58:	b.eq	41bcc0 <ferror@plt+0x19350>  // b.none
  41bc5c:	cmp	w1, #0x1c
  41bc60:	b.eq	41bcec <ferror@plt+0x1937c>  // b.none
  41bc64:	cmp	w1, #0xe
  41bc68:	b.ne	41bd94 <ferror@plt+0x19424>  // b.any
  41bc6c:	mvn	x25, x25
  41bc70:	str	x25, [sp, #352]
  41bc74:	mvn	x25, x27
  41bc78:	str	x25, [sp, #360]
  41bc7c:	strb	w0, [sp, #369]
  41bc80:	add	x8, sp, #0xf0
  41bc84:	ldp	x0, x1, [sp, #352]
  41bc88:	stp	x0, x1, [sp, #208]
  41bc8c:	ldr	x1, [x28, #1208]
  41bc90:	strb	w26, [sp, #368]
  41bc94:	ldr	x0, [sp, #368]
  41bc98:	str	x0, [sp, #224]
  41bc9c:	add	x0, sp, #0xd0
  41bca0:	bl	419f4c <ferror@plt+0x175dc>
  41bca4:	ldp	x25, x0, [sp, #240]
  41bca8:	stp	x25, x0, [sp, #352]
  41bcac:	ldr	x26, [sp, #256]
  41bcb0:	str	x26, [sp, #368]
  41bcb4:	mov	x27, x0
  41bcb8:	and	w26, w26, #0xff
  41bcbc:	b	41bce4 <ferror@plt+0x19374>
  41bcc0:	ldrb	w0, [x28, #1138]
  41bcc4:	cbz	w0, 41bd34 <ferror@plt+0x193c4>
  41bcc8:	ldr	w0, [x28, #28]
  41bccc:	cbnz	w0, 41bce4 <ferror@plt+0x19374>
  41bcd0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41bcd4:	mov	x0, x28
  41bcd8:	add	x2, x2, #0x6ed
  41bcdc:	mov	w1, #0x6                   	// #6
  41bce0:	bl	4194ac <ferror@plt+0x16b3c>
  41bce4:	mov	w0, #0x0                   	// #0
  41bce8:	b	41bd34 <ferror@plt+0x193c4>
  41bcec:	stp	x25, x27, [sp, #352]
  41bcf0:	add	x8, sp, #0xf0
  41bcf4:	strb	w0, [sp, #369]
  41bcf8:	ldp	x0, x1, [sp, #352]
  41bcfc:	stp	x0, x1, [sp, #208]
  41bd00:	ldr	x1, [x28, #1208]
  41bd04:	strb	w26, [sp, #368]
  41bd08:	ldr	x0, [sp, #368]
  41bd0c:	str	x0, [sp, #224]
  41bd10:	add	x0, sp, #0xd0
  41bd14:	bl	419fa0 <ferror@plt+0x17630>
  41bd18:	ldp	x25, x0, [sp, #240]
  41bd1c:	stp	x25, x0, [sp, #352]
  41bd20:	ldr	x0, [sp, #256]
  41bd24:	str	x0, [sp, #368]
  41bd28:	ldr	x27, [sp, #360]
  41bd2c:	and	w26, w0, #0xff
  41bd30:	ubfx	w0, w0, #8, #8
  41bd34:	add	x2, sp, #0x250
  41bd38:	stp	x25, x27, [sp, #352]
  41bd3c:	strb	w26, [sp, #368]
  41bd40:	strb	w0, [sp, #369]
  41bd44:	ldp	x0, x1, [sp, #352]
  41bd48:	stp	x0, x1, [x2, #-216]
  41bd4c:	ldr	x2, [sp, #368]
  41bd50:	str	x2, [sp, #392]
  41bd54:	stp	x0, x1, [x19, #-32]
  41bd58:	ldr	x0, [sp, #392]
  41bd5c:	stur	x0, [x19, #-16]
  41bd60:	ldr	w0, [x19, #32]
  41bd64:	stur	w0, [x19, #-8]
  41bd68:	ldurb	w0, [x19, #-15]
  41bd6c:	sub	x24, x19, #0x28
  41bd70:	cbz	w0, 41c754 <ferror@plt+0x19de4>
  41bd74:	ldr	w0, [x28, #28]
  41bd78:	cbnz	w0, 41c754 <ferror@plt+0x19de4>
  41bd7c:	mov	x0, x28
  41bd80:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41bd84:	mov	w1, #0x2                   	// #2
  41bd88:	add	x2, x2, #0x767
  41bd8c:	bl	419440 <ferror@plt+0x16ad0>
  41bd90:	b	41c754 <ferror@plt+0x19de4>
  41bd94:	orr	x25, x25, x27
  41bd98:	mov	w0, #0x0                   	// #0
  41bd9c:	cmp	x25, #0x0
  41bda0:	mov	w26, #0x0                   	// #0
  41bda4:	cset	x27, eq  // eq = none
  41bda8:	mov	x25, #0x0                   	// #0
  41bdac:	b	41bd34 <ferror@plt+0x193c4>
  41bdb0:	ldp	x0, x1, [x19, #-32]
  41bdb4:	stp	x0, x1, [sp, #208]
  41bdb8:	ldr	w3, [sp, #96]
  41bdbc:	ldur	x0, [x19, #-16]
  41bdc0:	str	x0, [sp, #224]
  41bdc4:	add	x8, sp, #0xf0
  41bdc8:	add	x2, sp, #0xb0
  41bdcc:	ldp	x0, x1, [x19, #8]
  41bdd0:	stp	x0, x1, [sp, #176]
  41bdd4:	ldr	x0, [x19, #24]
  41bdd8:	add	x1, sp, #0xd0
  41bddc:	str	x0, [sp, #192]
  41bde0:	mov	x0, x28
  41bde4:	bl	41a4b8 <ferror@plt+0x17b48>
  41bde8:	ldp	x0, x1, [sp, #240]
  41bdec:	stp	x0, x1, [x19, #-32]
  41bdf0:	ldr	x0, [sp, #256]
  41bdf4:	b	41bd5c <ferror@plt+0x193ec>
  41bdf8:	ldp	x11, x13, [x19, #-32]
  41bdfc:	sub	x10, x19, #0x28
  41be00:	ldp	x12, x4, [x19, #8]
  41be04:	ldurb	w2, [x19, #-16]
  41be08:	ldrb	w5, [x19, #24]
  41be0c:	ldr	x6, [x28, #1208]
  41be10:	ldp	x0, x1, [x19, #-32]
  41be14:	stp	x0, x1, [sp, #352]
  41be18:	mov	x3, x12
  41be1c:	ldr	x0, [x10, #24]
  41be20:	mov	x1, x13
  41be24:	str	x0, [sp, #368]
  41be28:	mov	x0, x11
  41be2c:	bl	41a794 <ferror@plt+0x17e24>
  41be30:	and	w2, w0, #0xff
  41be34:	ldr	w1, [sp, #96]
  41be38:	cmp	w1, #0x19
  41be3c:	b.ne	41be78 <ferror@plt+0x19508>  // b.any
  41be40:	and	x2, x0, #0xff
  41be44:	stp	xzr, x2, [sp, #352]
  41be48:	add	x2, sp, #0x250
  41be4c:	strh	wzr, [sp, #368]
  41be50:	ldp	x0, x1, [sp, #352]
  41be54:	stp	x0, x1, [x2, #-216]
  41be58:	ldr	x2, [sp, #368]
  41be5c:	str	x2, [sp, #392]
  41be60:	stp	x0, x1, [x10, #8]
  41be64:	ldr	x0, [sp, #392]
  41be68:	str	x0, [x10, #24]
  41be6c:	ldr	w0, [x19, #32]
  41be70:	str	w0, [x10, #32]
  41be74:	b	41bd68 <ferror@plt+0x193f8>
  41be78:	ldr	w0, [sp, #96]
  41be7c:	cmp	w0, #0x3
  41be80:	b.ne	41be90 <ferror@plt+0x19520>  // b.any
  41be84:	eor	w2, w2, #0x1
  41be88:	and	x2, x2, #0xff
  41be8c:	b	41be44 <ferror@plt+0x194d4>
  41be90:	ldr	w0, [sp, #96]
  41be94:	cmp	w0, #0x2
  41be98:	b.ne	41beb4 <ferror@plt+0x19544>  // b.any
  41be9c:	cbz	w2, 41be88 <ferror@plt+0x19518>
  41bea0:	cmp	x4, x13
  41bea4:	b.ne	41be88 <ferror@plt+0x19518>  // b.any
  41bea8:	cmp	x12, x11
  41beac:	cset	w2, ne  // ne = any
  41beb0:	b	41be88 <ferror@plt+0x19518>
  41beb4:	cbz	w2, 41becc <ferror@plt+0x1955c>
  41beb8:	cmp	x4, x13
  41bebc:	b.ne	41bed4 <ferror@plt+0x19564>  // b.any
  41bec0:	cmp	x12, x11
  41bec4:	cset	w2, eq  // eq = none
  41bec8:	b	41be88 <ferror@plt+0x19518>
  41becc:	mov	w2, #0x1                   	// #1
  41bed0:	b	41be88 <ferror@plt+0x19518>
  41bed4:	mov	w2, #0x0                   	// #0
  41bed8:	b	41be88 <ferror@plt+0x19518>
  41bedc:	ldp	x2, x6, [x19, #8]
  41bee0:	sub	x1, x19, #0x28
  41bee4:	ldp	x4, x5, [x19, #-32]
  41bee8:	stp	x4, x5, [sp, #352]
  41beec:	ldur	x3, [x19, #-24]
  41bef0:	ldr	x0, [x1, #24]
  41bef4:	str	x0, [sp, #368]
  41bef8:	cmp	x6, x3
  41befc:	ldur	x0, [x19, #-32]
  41bf00:	b.ne	41bf54 <ferror@plt+0x195e4>  // b.any
  41bf04:	cmp	x2, x0
  41bf08:	cset	w0, eq  // eq = none
  41bf0c:	ldr	w2, [sp, #96]
  41bf10:	cmp	w2, #0x18
  41bf14:	b.ne	41bf1c <ferror@plt+0x195ac>  // b.any
  41bf18:	eor	w0, w0, #0x1
  41bf1c:	and	x0, x0, #0xff
  41bf20:	stp	xzr, x0, [sp, #352]
  41bf24:	add	x0, sp, #0x250
  41bf28:	strh	wzr, [sp, #368]
  41bf2c:	ldp	x2, x3, [sp, #352]
  41bf30:	stp	x2, x3, [x0, #-216]
  41bf34:	ldr	x0, [sp, #368]
  41bf38:	str	x0, [sp, #392]
  41bf3c:	stp	x2, x3, [x1, #8]
  41bf40:	ldr	x0, [sp, #392]
  41bf44:	str	x0, [x1, #24]
  41bf48:	ldr	w0, [x19, #32]
  41bf4c:	str	w0, [x1, #32]
  41bf50:	b	41bd68 <ferror@plt+0x193f8>
  41bf54:	mov	w0, #0x0                   	// #0
  41bf58:	b	41bf0c <ferror@plt+0x1959c>
  41bf5c:	sub	x4, x19, #0x28
  41bf60:	ldrb	w6, [x19, #24]
  41bf64:	ldp	x2, x3, [x19, #-32]
  41bf68:	stp	x2, x3, [sp, #352]
  41bf6c:	ldr	x2, [x4, #24]
  41bf70:	str	x2, [sp, #368]
  41bf74:	ldurb	w2, [x19, #-16]
  41bf78:	ldp	x3, x5, [x19, #-32]
  41bf7c:	cmp	w2, #0x0
  41bf80:	csel	w2, w2, w6, ne  // ne = any
  41bf84:	ldr	w6, [sp, #96]
  41bf88:	ldp	x1, x0, [x19, #8]
  41bf8c:	cmp	w6, #0x9
  41bf90:	b.ne	41bfd4 <ferror@plt+0x19664>  // b.any
  41bf94:	and	x0, x0, x5
  41bf98:	and	x1, x1, x3
  41bf9c:	stp	x1, x0, [sp, #352]
  41bfa0:	strb	w2, [sp, #368]
  41bfa4:	add	x2, sp, #0x250
  41bfa8:	strb	wzr, [sp, #369]
  41bfac:	ldp	x0, x1, [sp, #352]
  41bfb0:	stp	x0, x1, [x2, #-216]
  41bfb4:	ldr	x2, [sp, #368]
  41bfb8:	str	x2, [sp, #392]
  41bfbc:	stp	x0, x1, [x4, #8]
  41bfc0:	ldr	x0, [sp, #392]
  41bfc4:	str	x0, [x4, #24]
  41bfc8:	ldr	w0, [x19, #32]
  41bfcc:	str	w0, [x4, #32]
  41bfd0:	b	41bd68 <ferror@plt+0x193f8>
  41bfd4:	ldr	w6, [sp, #96]
  41bfd8:	cmp	w6, #0xa
  41bfdc:	b.ne	41bfec <ferror@plt+0x1967c>  // b.any
  41bfe0:	orr	x0, x0, x5
  41bfe4:	orr	x1, x1, x3
  41bfe8:	b	41bf9c <ferror@plt+0x1962c>
  41bfec:	eor	x0, x0, x5
  41bff0:	eor	x1, x1, x3
  41bff4:	b	41bf9c <ferror@plt+0x1962c>
  41bff8:	sub	x13, x19, #0x28
  41bffc:	add	x2, sp, #0x200
  41c000:	ldp	x0, x1, [x19, #-32]
  41c004:	stp	x0, x1, [sp, #304]
  41c008:	ldr	x0, [x13, #24]
  41c00c:	str	x0, [sp, #320]
  41c010:	ldr	x18, [x28, #1208]
  41c014:	ldp	x0, x1, [x19, #8]
  41c018:	ldurb	w15, [x19, #-16]
  41c01c:	ldp	x14, x24, [x19, #-32]
  41c020:	stp	x0, x1, [x2, #-184]
  41c024:	ldr	x0, [x19, #24]
  41c028:	str	x0, [sp, #344]
  41c02c:	ldp	x11, x25, [x19, #8]
  41c030:	cbnz	w15, 41c248 <ferror@plt+0x198d8>
  41c034:	ldrb	w12, [x19, #24]
  41c038:	cbnz	w12, 41c0f4 <ferror@plt+0x19784>
  41c03c:	mov	x2, x18
  41c040:	mov	x1, x24
  41c044:	mov	x0, x14
  41c048:	bl	41a244 <ferror@plt+0x178d4>
  41c04c:	tst	w0, #0xff
  41c050:	b.ne	41c240 <ferror@plt+0x198d0>  // b.any
  41c054:	stp	x14, x24, [sp, #304]
  41c058:	add	x8, sp, #0xf0
  41c05c:	strb	wzr, [sp, #320]
  41c060:	ldp	x0, x1, [sp, #304]
  41c064:	stp	x0, x1, [sp, #208]
  41c068:	ldr	x0, [sp, #320]
  41c06c:	mov	x1, x18
  41c070:	str	x0, [sp, #224]
  41c074:	add	x0, sp, #0xd0
  41c078:	bl	419fa0 <ferror@plt+0x17630>
  41c07c:	ldp	x14, x0, [sp, #240]
  41c080:	stp	x14, x0, [sp, #304]
  41c084:	mov	w15, #0x1                   	// #1
  41c088:	ldr	x24, [sp, #312]
  41c08c:	ldr	x0, [sp, #256]
  41c090:	str	x0, [sp, #320]
  41c094:	mov	x2, x18
  41c098:	mov	x1, x25
  41c09c:	mov	x0, x11
  41c0a0:	bl	41a244 <ferror@plt+0x178d4>
  41c0a4:	tst	w0, #0xff
  41c0a8:	b.ne	41c0f4 <ferror@plt+0x19784>  // b.any
  41c0ac:	add	x0, sp, #0x200
  41c0b0:	stp	x11, x25, [sp, #328]
  41c0b4:	eor	w15, w15, #0x1
  41c0b8:	strb	wzr, [sp, #344]
  41c0bc:	add	x8, sp, #0xf0
  41c0c0:	ldp	x0, x1, [x0, #-184]
  41c0c4:	stp	x0, x1, [sp, #208]
  41c0c8:	ldr	x0, [sp, #344]
  41c0cc:	mov	x1, x18
  41c0d0:	str	x0, [sp, #224]
  41c0d4:	add	x0, sp, #0xd0
  41c0d8:	bl	419fa0 <ferror@plt+0x17630>
  41c0dc:	ldp	x11, x0, [sp, #240]
  41c0e0:	stp	x11, x0, [sp, #328]
  41c0e4:	mov	w12, #0x0                   	// #0
  41c0e8:	ldr	x25, [sp, #336]
  41c0ec:	ldr	x0, [sp, #256]
  41c0f0:	str	x0, [sp, #344]
  41c0f4:	cbz	x14, 41c254 <ferror@plt+0x198e4>
  41c0f8:	cmp	x11, #0x0
  41c0fc:	cset	w10, ne  // ne = any
  41c100:	add	x8, sp, #0x178
  41c104:	mov	x1, x25
  41c108:	mov	x0, x24
  41c10c:	bl	41a03c <ferror@plt+0x176cc>
  41c110:	ldp	x9, x5, [sp, #376]
  41c114:	mov	x0, x14
  41c118:	add	x8, sp, #0x160
  41c11c:	mov	x1, x25
  41c120:	bl	41a03c <ferror@plt+0x176cc>
  41c124:	mov	x1, x11
  41c128:	ldr	x0, [sp, #360]
  41c12c:	mov	w6, #0x1                   	// #1
  41c130:	add	x8, sp, #0x160
  41c134:	add	x9, x9, x0
  41c138:	ldr	x0, [sp, #352]
  41c13c:	cmp	x0, #0x0
  41c140:	mov	x0, x24
  41c144:	csel	w10, w10, w6, eq  // eq = none
  41c148:	bl	41a03c <ferror@plt+0x176cc>
  41c14c:	ldr	x0, [sp, #360]
  41c150:	add	x8, sp, #0xf0
  41c154:	add	x9, x9, x0
  41c158:	str	x9, [sp, #376]
  41c15c:	ldr	x0, [sp, #352]
  41c160:	cmp	x0, #0x0
  41c164:	add	x0, sp, #0x250
  41c168:	csel	w10, w10, w6, eq  // eq = none
  41c16c:	ldp	x0, x1, [x0, #-216]
  41c170:	stp	x0, x1, [sp, #208]
  41c174:	ldr	x0, [sp, #392]
  41c178:	mov	x1, x18
  41c17c:	str	x0, [sp, #224]
  41c180:	add	x0, sp, #0xd0
  41c184:	bl	419f4c <ferror@plt+0x175dc>
  41c188:	ldp	x4, x0, [sp, #240]
  41c18c:	stp	x4, x0, [sp, #376]
  41c190:	ldr	x0, [sp, #256]
  41c194:	str	x0, [sp, #392]
  41c198:	ldr	x1, [sp, #384]
  41c19c:	cmp	x5, x1
  41c1a0:	b.ne	41c25c <ferror@plt+0x198ec>  // b.any
  41c1a4:	cmp	x9, x4
  41c1a8:	csel	w10, w10, w6, eq  // eq = none
  41c1ac:	cbz	w15, 41c1e8 <ferror@plt+0x19878>
  41c1b0:	add	x0, sp, #0x250
  41c1b4:	add	x8, sp, #0xf0
  41c1b8:	ldp	x0, x1, [x0, #-216]
  41c1bc:	stp	x0, x1, [sp, #208]
  41c1c0:	ldr	x0, [sp, #392]
  41c1c4:	mov	x1, x18
  41c1c8:	str	x0, [sp, #224]
  41c1cc:	add	x0, sp, #0xd0
  41c1d0:	bl	419fa0 <ferror@plt+0x17630>
  41c1d4:	ldp	x4, x0, [sp, #240]
  41c1d8:	stp	x4, x0, [sp, #376]
  41c1dc:	ldr	x1, [sp, #384]
  41c1e0:	ldr	x0, [sp, #256]
  41c1e4:	str	x0, [sp, #392]
  41c1e8:	cbnz	w12, 41c264 <ferror@plt+0x198f4>
  41c1ec:	cbnz	w10, 41c214 <ferror@plt+0x198a4>
  41c1f0:	mov	x2, x18
  41c1f4:	mov	x0, x4
  41c1f8:	bl	41a244 <ferror@plt+0x178d4>
  41c1fc:	eor	w15, w15, #0x1
  41c200:	cmp	w15, w0, uxtb
  41c204:	b.eq	41c214 <ferror@plt+0x198a4>  // b.none
  41c208:	orr	x0, x1, x4
  41c20c:	cmp	x0, #0x0
  41c210:	cset	w10, ne  // ne = any
  41c214:	add	x0, sp, #0x250
  41c218:	stp	x4, x1, [sp, #376]
  41c21c:	strb	w12, [sp, #392]
  41c220:	strb	w10, [sp, #393]
  41c224:	ldp	x0, x1, [x0, #-216]
  41c228:	stp	x0, x1, [x13, #8]
  41c22c:	ldr	x0, [sp, #392]
  41c230:	str	x0, [x13, #24]
  41c234:	ldr	w0, [x19, #32]
  41c238:	str	w0, [x13, #32]
  41c23c:	b	41bd68 <ferror@plt+0x193f8>
  41c240:	mov	w15, w12
  41c244:	b	41c094 <ferror@plt+0x19724>
  41c248:	mov	w12, w15
  41c24c:	mov	w15, #0x0                   	// #0
  41c250:	b	41c0f4 <ferror@plt+0x19784>
  41c254:	mov	w10, #0x0                   	// #0
  41c258:	b	41c100 <ferror@plt+0x19790>
  41c25c:	mov	w10, w6
  41c260:	b	41c1ac <ferror@plt+0x1983c>
  41c264:	mov	w10, #0x0                   	// #0
  41c268:	b	41c214 <ferror@plt+0x198a4>
  41c26c:	sub	x0, x19, #0x28
  41c270:	add	x2, sp, #0x200
  41c274:	str	x0, [sp, #120]
  41c278:	ldp	x0, x1, [x19, #-32]
  41c27c:	stp	x0, x1, [x2, #-232]
  41c280:	ldurb	w26, [x19, #-16]
  41c284:	ldur	x0, [x19, #-16]
  41c288:	str	x0, [sp, #296]
  41c28c:	ldp	x0, x1, [x19, #8]
  41c290:	str	w26, [sp, #104]
  41c294:	ldurb	w7, [x19, #-15]
  41c298:	ldr	w12, [x19, #32]
  41c29c:	ldp	x27, x25, [x19, #-32]
  41c2a0:	stp	x0, x1, [sp, #304]
  41c2a4:	ldr	x0, [x19, #24]
  41c2a8:	str	x0, [sp, #320]
  41c2ac:	ldr	x24, [x28, #1208]
  41c2b0:	ldp	x14, x15, [x19, #8]
  41c2b4:	cbnz	w26, 41c3e0 <ferror@plt+0x19a70>
  41c2b8:	ldrb	w0, [x19, #24]
  41c2bc:	str	w0, [sp, #100]
  41c2c0:	cbnz	w0, 41c3ec <ferror@plt+0x19a7c>
  41c2c4:	mov	x2, x24
  41c2c8:	mov	x1, x25
  41c2cc:	mov	x0, x27
  41c2d0:	str	w7, [sp, #104]
  41c2d4:	bl	41a244 <ferror@plt+0x178d4>
  41c2d8:	tst	w0, #0xff
  41c2dc:	ldr	w7, [sp, #104]
  41c2e0:	b.ne	41c3d8 <ferror@plt+0x19a68>  // b.any
  41c2e4:	add	x0, sp, #0x200
  41c2e8:	stp	x27, x25, [sp, #280]
  41c2ec:	add	x8, sp, #0xf0
  41c2f0:	strb	wzr, [sp, #296]
  41c2f4:	strb	w7, [sp, #297]
  41c2f8:	ldp	x0, x1, [x0, #-232]
  41c2fc:	stp	x0, x1, [sp, #208]
  41c300:	ldr	x0, [sp, #296]
  41c304:	mov	x1, x24
  41c308:	str	x0, [sp, #224]
  41c30c:	add	x0, sp, #0xd0
  41c310:	bl	419fa0 <ferror@plt+0x17630>
  41c314:	ldp	x10, x0, [sp, #240]
  41c318:	stp	x10, x0, [sp, #280]
  41c31c:	ldr	x9, [sp, #256]
  41c320:	str	x9, [sp, #296]
  41c324:	mov	x27, x10
  41c328:	and	w26, w9, #0xff
  41c32c:	ubfx	w7, w9, #8, #8
  41c330:	mov	x25, x0
  41c334:	mov	w0, #0x1                   	// #1
  41c338:	str	w0, [sp, #108]
  41c33c:	mov	x2, x24
  41c340:	mov	x1, x15
  41c344:	mov	x0, x14
  41c348:	str	w7, [sp, #104]
  41c34c:	bl	41a244 <ferror@plt+0x178d4>
  41c350:	tst	w0, #0xff
  41c354:	ldr	w7, [sp, #104]
  41c358:	b.ne	41c3f4 <ferror@plt+0x19a84>  // b.any
  41c35c:	ldr	w0, [sp, #108]
  41c360:	add	x8, sp, #0xf0
  41c364:	stp	x14, x15, [sp, #304]
  41c368:	eor	w0, w0, #0x1
  41c36c:	str	w0, [sp, #104]
  41c370:	strb	wzr, [sp, #320]
  41c374:	ldp	x0, x1, [sp, #304]
  41c378:	stp	x0, x1, [sp, #208]
  41c37c:	ldr	x0, [sp, #320]
  41c380:	mov	x1, x24
  41c384:	str	w7, [sp, #152]
  41c388:	str	x0, [sp, #224]
  41c38c:	add	x0, sp, #0xd0
  41c390:	bl	419fa0 <ferror@plt+0x17630>
  41c394:	str	wzr, [sp, #100]
  41c398:	ldp	x14, x0, [sp, #240]
  41c39c:	stp	x14, x0, [sp, #304]
  41c3a0:	ldr	w7, [sp, #152]
  41c3a4:	ldr	x15, [sp, #312]
  41c3a8:	ldr	x0, [sp, #256]
  41c3ac:	str	x0, [sp, #320]
  41c3b0:	cbz	x14, 41c400 <ferror@plt+0x19a90>
  41c3b4:	sub	w2, w24, #0x41
  41c3b8:	mov	x1, #0x1                   	// #1
  41c3bc:	sub	x0, x24, #0x1
  41c3c0:	lsl	x1, x1, x2
  41c3c4:	tst	x14, x1
  41c3c8:	b.ne	41c498 <ferror@plt+0x19b28>  // b.any
  41c3cc:	sub	x0, x0, #0x1
  41c3d0:	lsr	x1, x1, #1
  41c3d4:	b	41c3c4 <ferror@plt+0x19a54>
  41c3d8:	str	wzr, [sp, #108]
  41c3dc:	b	41c33c <ferror@plt+0x199cc>
  41c3e0:	stp	w26, wzr, [sp, #100]
  41c3e4:	str	wzr, [sp, #108]
  41c3e8:	b	41c3b0 <ferror@plt+0x19a40>
  41c3ec:	str	wzr, [sp, #108]
  41c3f0:	b	41c3b0 <ferror@plt+0x19a40>
  41c3f4:	ldr	w0, [sp, #108]
  41c3f8:	str	w0, [sp, #104]
  41c3fc:	b	41c3b0 <ferror@plt+0x19a40>
  41c400:	cbz	x15, 41c430 <ferror@plt+0x19ac0>
  41c404:	sub	x1, x24, #0x41
  41c408:	sub	x13, x24, #0x1
  41c40c:	cmp	x24, #0x40
  41c410:	csel	x0, x1, x13, hi  // hi = pmore
  41c414:	mov	x1, #0x1                   	// #1
  41c418:	lsl	x1, x1, x0
  41c41c:	tst	x15, x1
  41c420:	b.ne	41c498 <ferror@plt+0x19b28>  // b.any
  41c424:	sub	x0, x0, #0x1
  41c428:	lsr	x1, x1, #1
  41c42c:	b	41c41c <ferror@plt+0x19aac>
  41c430:	ldr	w0, [x28, #28]
  41c434:	cbnz	w0, 41c45c <ferror@plt+0x19aec>
  41c438:	mov	w2, w12
  41c43c:	mov	x0, x28
  41c440:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41c444:	mov	w3, #0x0                   	// #0
  41c448:	add	x4, x4, #0x71b
  41c44c:	mov	w1, #0x3                   	// #3
  41c450:	str	w7, [sp, #96]
  41c454:	bl	4195fc <ferror@plt+0x16c8c>
  41c458:	ldr	w7, [sp, #96]
  41c45c:	strb	w26, [sp, #296]
  41c460:	strb	w7, [sp, #297]
  41c464:	stp	x27, x25, [sp, #280]
  41c468:	ldr	x0, [sp, #296]
  41c46c:	str	x0, [sp, #392]
  41c470:	add	x0, sp, #0x250
  41c474:	stp	x27, x25, [sp, #376]
  41c478:	ldr	x2, [sp, #120]
  41c47c:	strb	w26, [sp, #392]
  41c480:	strb	w7, [sp, #393]
  41c484:	ldp	x0, x1, [x0, #-216]
  41c488:	stp	x0, x1, [x2, #8]
  41c48c:	mov	x1, x2
  41c490:	ldr	x0, [sp, #392]
  41c494:	b	41bf44 <ferror@plt+0x195d4>
  41c498:	stp	x14, x15, [sp, #304]
  41c49c:	sub	x13, x24, #0x1
  41c4a0:	sub	x13, x13, x0
  41c4a4:	ldp	x2, x3, [sp, #304]
  41c4a8:	mov	w0, #0x1                   	// #1
  41c4ac:	strb	w0, [sp, #320]
  41c4b0:	add	x8, sp, #0x160
  41c4b4:	add	x0, sp, #0xf0
  41c4b8:	str	x13, [sp, #152]
  41c4bc:	ldr	x1, [sp, #320]
  41c4c0:	str	w7, [sp, #160]
  41c4c4:	stp	x2, x3, [sp, #240]
  41c4c8:	mov	x2, x13
  41c4cc:	str	x1, [sp, #256]
  41c4d0:	mov	x1, x24
  41c4d4:	bl	41a378 <ferror@plt+0x17a08>
  41c4d8:	ldp	x26, x4, [sp, #352]
  41c4dc:	mov	x18, x25
  41c4e0:	ldr	w7, [sp, #160]
  41c4e4:	mov	x12, x27
  41c4e8:	ldr	x13, [sp, #152]
  41c4ec:	mov	x25, #0x0                   	// #0
  41c4f0:	mov	x27, #0x0                   	// #0
  41c4f4:	mov	w15, #0x1                   	// #1
  41c4f8:	ldrb	w5, [sp, #368]
  41c4fc:	mov	x6, x24
  41c500:	mov	x3, x26
  41c504:	mov	w2, w15
  41c508:	mov	x1, x18
  41c50c:	mov	x0, x12
  41c510:	str	x4, [sp, #152]
  41c514:	str	w7, [sp, #160]
  41c518:	str	x13, [sp, #168]
  41c51c:	bl	41a794 <ferror@plt+0x17e24>
  41c520:	ldr	w7, [sp, #160]
  41c524:	tst	w0, #0xff
  41c528:	add	x8, sp, #0xf0
  41c52c:	ldr	x4, [sp, #152]
  41c530:	ldr	x13, [sp, #168]
  41c534:	b.eq	41c5bc <ferror@plt+0x19c4c>  // b.none
  41c538:	add	x0, sp, #0x200
  41c53c:	stp	x12, x18, [sp, #280]
  41c540:	add	x2, sp, #0xb0
  41c544:	strb	w15, [sp, #296]
  41c548:	mov	w3, #0x5                   	// #5
  41c54c:	strb	w7, [sp, #297]
  41c550:	stp	x26, x4, [sp, #352]
  41c554:	ldp	x0, x1, [x0, #-232]
  41c558:	stp	x0, x1, [sp, #208]
  41c55c:	ldr	x0, [sp, #296]
  41c560:	str	x0, [sp, #224]
  41c564:	ldp	x0, x1, [sp, #352]
  41c568:	stp	x0, x1, [sp, #176]
  41c56c:	ldr	x0, [sp, #368]
  41c570:	add	x1, sp, #0xd0
  41c574:	str	x13, [sp, #160]
  41c578:	str	x0, [sp, #192]
  41c57c:	mov	x0, x28
  41c580:	bl	41a4b8 <ferror@plt+0x17b48>
  41c584:	ldp	x4, x13, [sp, #152]
  41c588:	ldp	x12, x0, [sp, #240]
  41c58c:	stp	x12, x0, [sp, #280]
  41c590:	ldr	x9, [sp, #256]
  41c594:	str	x9, [sp, #296]
  41c598:	cmp	x13, #0x3f
  41c59c:	mov	x18, x0
  41c5a0:	and	w15, w9, #0xff
  41c5a4:	ubfx	w7, w9, #8, #8
  41c5a8:	b.ls	41c5d4 <ferror@plt+0x19c64>  // b.plast
  41c5ac:	sub	w0, w13, #0x40
  41c5b0:	mov	x1, #0x1                   	// #1
  41c5b4:	lsl	x0, x1, x0
  41c5b8:	orr	x27, x27, x0
  41c5bc:	sub	x13, x13, #0x1
  41c5c0:	cmn	x13, #0x1
  41c5c4:	b.eq	41c5e4 <ferror@plt+0x19c74>  // b.none
  41c5c8:	extr	x4, x26, x4, #1
  41c5cc:	lsr	x26, x26, #1
  41c5d0:	b	41c4f8 <ferror@plt+0x19b88>
  41c5d4:	mov	x0, #0x1                   	// #1
  41c5d8:	lsl	x0, x0, x13
  41c5dc:	orr	x25, x25, x0
  41c5e0:	b	41c5bc <ferror@plt+0x19c4c>
  41c5e4:	ldp	w0, w26, [sp, #96]
  41c5e8:	cmp	w0, #0x7
  41c5ec:	b.ne	41c6a0 <ferror@plt+0x19d30>  // b.any
  41c5f0:	cbnz	w26, 41c698 <ferror@plt+0x19d28>
  41c5f4:	ldr	w0, [sp, #104]
  41c5f8:	cbz	w0, 41c690 <ferror@plt+0x19d20>
  41c5fc:	add	x0, sp, #0x200
  41c600:	stp	x27, x25, [sp, #328]
  41c604:	add	x8, sp, #0xf0
  41c608:	strh	wzr, [sp, #344]
  41c60c:	ldp	x0, x1, [x0, #-184]
  41c610:	stp	x0, x1, [sp, #208]
  41c614:	ldr	x0, [sp, #344]
  41c618:	mov	x1, x24
  41c61c:	str	x0, [sp, #224]
  41c620:	add	x0, sp, #0xd0
  41c624:	bl	419fa0 <ferror@plt+0x17630>
  41c628:	ldp	x10, x0, [sp, #240]
  41c62c:	stp	x10, x0, [sp, #328]
  41c630:	ldr	x5, [sp, #256]
  41c634:	str	x5, [sp, #344]
  41c638:	mov	x27, x10
  41c63c:	mov	x25, x0
  41c640:	and	w26, w5, #0xff
  41c644:	mov	x1, x25
  41c648:	mov	x2, x24
  41c64c:	mov	x0, x27
  41c650:	bl	41a244 <ferror@plt+0x178d4>
  41c654:	ldr	w1, [sp, #104]
  41c658:	eor	w1, w1, #0x1
  41c65c:	and	w1, w1, #0xff
  41c660:	cmp	w1, w0, uxtb
  41c664:	b.eq	41c678 <ferror@plt+0x19d08>  // b.none
  41c668:	orr	x0, x27, x25
  41c66c:	cmp	x0, #0x0
  41c670:	cset	w0, ne  // ne = any
  41c674:	str	w0, [sp, #100]
  41c678:	ldr	w7, [sp, #100]
  41c67c:	strb	w26, [sp, #344]
  41c680:	strb	w7, [sp, #345]
  41c684:	stp	x27, x25, [sp, #328]
  41c688:	ldr	x0, [sp, #344]
  41c68c:	b	41c46c <ferror@plt+0x19afc>
  41c690:	ldr	w26, [sp, #104]
  41c694:	b	41c644 <ferror@plt+0x19cd4>
  41c698:	mov	w7, #0x0                   	// #0
  41c69c:	b	41c67c <ferror@plt+0x19d0c>
  41c6a0:	ldr	w0, [sp, #108]
  41c6a4:	cbz	w0, 41c714 <ferror@plt+0x19da4>
  41c6a8:	add	x0, sp, #0x200
  41c6ac:	stp	x12, x18, [sp, #280]
  41c6b0:	add	x8, sp, #0xf0
  41c6b4:	strb	w26, [sp, #296]
  41c6b8:	strb	wzr, [sp, #297]
  41c6bc:	ldp	x0, x1, [x0, #-232]
  41c6c0:	stp	x0, x1, [sp, #208]
  41c6c4:	ldr	x0, [sp, #296]
  41c6c8:	mov	x1, x24
  41c6cc:	str	x0, [sp, #224]
  41c6d0:	add	x0, sp, #0xd0
  41c6d4:	bl	419fa0 <ferror@plt+0x17630>
  41c6d8:	ldp	x12, x0, [sp, #240]
  41c6dc:	stp	x12, x0, [sp, #280]
  41c6e0:	ldr	x9, [sp, #256]
  41c6e4:	str	x9, [sp, #296]
  41c6e8:	mov	x18, x0
  41c6ec:	and	w26, w9, #0xff
  41c6f0:	ubfx	w7, w9, #8, #8
  41c6f4:	strb	w26, [sp, #296]
  41c6f8:	mov	x25, x18
  41c6fc:	strb	w7, [sp, #297]
  41c700:	mov	x27, x12
  41c704:	stp	x12, x18, [sp, #280]
  41c708:	ldr	x0, [sp, #296]
  41c70c:	str	x0, [sp, #392]
  41c710:	b	41c470 <ferror@plt+0x19b00>
  41c714:	mov	w7, #0x0                   	// #0
  41c718:	b	41c6f4 <ferror@plt+0x19d84>
  41c71c:	ldp	x1, x0, [x19, #-32]
  41c720:	sub	x24, x19, #0x28
  41c724:	orr	x0, x0, x1
  41c728:	cbz	x0, 41c998 <ferror@plt+0x1a028>
  41c72c:	ldr	w0, [x28, #28]
  41c730:	sub	w0, w0, #0x1
  41c734:	str	w0, [x28, #28]
  41c738:	mov	w0, #0x1                   	// #1
  41c73c:	and	x0, x0, #0xff
  41c740:	stp	xzr, x0, [x24, #8]
  41c744:	ldr	w0, [x19, #32]
  41c748:	strb	wzr, [x24, #24]
  41c74c:	strb	wzr, [x24, #25]
  41c750:	str	w0, [x24, #32]
  41c754:	mov	x19, x24
  41c758:	b	41bb50 <ferror@plt+0x191e0>
  41c75c:	ldp	x1, x0, [x19, #-32]
  41c760:	sub	x24, x19, #0x28
  41c764:	orr	x0, x0, x1
  41c768:	cbnz	x0, 41c998 <ferror@plt+0x1a028>
  41c76c:	ldr	w0, [x28, #28]
  41c770:	sub	w0, w0, #0x1
  41c774:	str	w0, [x28, #28]
  41c778:	mov	w0, #0x0                   	// #0
  41c77c:	b	41c73c <ferror@plt+0x19dcc>
  41c780:	cmp	w20, #0x15
  41c784:	b.eq	41c7ac <ferror@plt+0x19e3c>  // b.none
  41c788:	ldr	x0, [x19]
  41c78c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41c790:	add	x4, x4, #0x733
  41c794:	mov	w3, #0x0                   	// #0
  41c798:	ldr	w2, [x0]
  41c79c:	mov	x0, x28
  41c7a0:	mov	w1, #0x3                   	// #3
  41c7a4:	bl	4195fc <ferror@plt+0x16c8c>
  41c7a8:	b	41ba4c <ferror@plt+0x190dc>
  41c7ac:	ldr	x1, [x19, #24]
  41c7b0:	sub	x0, x19, #0x28
  41c7b4:	stur	x1, [x19, #-16]
  41c7b8:	ldr	w1, [x19, #32]
  41c7bc:	ldp	x2, x3, [x19, #8]
  41c7c0:	stp	x2, x3, [x19, #-32]
  41c7c4:	stur	w1, [x19, #-8]
  41c7c8:	mov	x19, x0
  41c7cc:	b	41b4b4 <ferror@plt+0x18b44>
  41c7d0:	ldp	x1, x0, [x19, #-72]
  41c7d4:	sub	x24, x19, #0x50
  41c7d8:	add	x4, x24, #0x8
  41c7dc:	orr	x0, x0, x1
  41c7e0:	sub	x1, x19, #0x28
  41c7e4:	cbz	x0, 41c820 <ferror@plt+0x19eb0>
  41c7e8:	ldr	w0, [x28, #28]
  41c7ec:	ldp	x2, x3, [x19, #-32]
  41c7f0:	sub	w0, w0, #0x1
  41c7f4:	str	w0, [x28, #28]
  41c7f8:	stp	x2, x3, [x19, #-72]
  41c7fc:	ldr	x0, [x1, #24]
  41c800:	str	x0, [x4, #16]
  41c804:	ldur	w0, [x19, #-8]
  41c808:	stur	w0, [x19, #-48]
  41c80c:	ldrb	w0, [x1, #24]
  41c810:	cbnz	w0, 41c818 <ferror@plt+0x19ea8>
  41c814:	ldrb	w0, [x19, #24]
  41c818:	strb	w0, [x24, #24]
  41c81c:	b	41c754 <ferror@plt+0x19de4>
  41c820:	ldp	x2, x3, [x19, #8]
  41c824:	stp	x2, x3, [x19, #-72]
  41c828:	ldr	x0, [x19, #24]
  41c82c:	str	x0, [x4, #16]
  41c830:	ldr	w0, [x19, #32]
  41c834:	b	41c808 <ferror@plt+0x19e98>
  41c838:	sub	w0, w20, #0x12
  41c83c:	cmp	w0, #0x1
  41c840:	b.ls	41c930 <ferror@plt+0x19fc0>  // b.plast
  41c844:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41c848:	add	x2, x2, #0x74d
  41c84c:	mov	x0, x28
  41c850:	mov	w1, #0x3                   	// #3
  41c854:	bl	419440 <ferror@plt+0x16ad0>
  41c858:	b	41ba4c <ferror@plt+0x190dc>
  41c85c:	cmp	w20, #0x15
  41c860:	b.ne	41c930 <ferror@plt+0x19fc0>  // b.any
  41c864:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41c868:	add	x2, x2, #0x793
  41c86c:	b	41c84c <ferror@plt+0x19edc>
  41c870:	sub	w1, w20, #0xf
  41c874:	cmp	w1, #0x6
  41c878:	b.hi	41c8bc <ferror@plt+0x19f4c>  // b.pmore
  41c87c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  41c880:	add	x0, x0, #0xe98
  41c884:	ldrh	w0, [x0, w1, uxtw #1]
  41c888:	adr	x1, 41c894 <ferror@plt+0x19f24>
  41c88c:	add	x0, x1, w0, sxth #2
  41c890:	br	x0
  41c894:	ldp	x1, x0, [x19, #8]
  41c898:	orr	x0, x0, x1
  41c89c:	cbz	x0, 41c8bc <ferror@plt+0x19f4c>
  41c8a0:	ldr	w0, [x28, #28]
  41c8a4:	add	w0, w0, #0x1
  41c8a8:	str	w0, [x28, #28]
  41c8ac:	b	41c8bc <ferror@plt+0x19f4c>
  41c8b0:	ldp	x1, x0, [x19, #8]
  41c8b4:	orr	x0, x0, x1
  41c8b8:	cbz	x0, 41c8a0 <ferror@plt+0x19f30>
  41c8bc:	ldr	x0, [x28, #1104]
  41c8c0:	add	x19, x19, #0x28
  41c8c4:	cmp	x0, x19
  41c8c8:	b.ne	41c8d8 <ferror@plt+0x19f68>  // b.any
  41c8cc:	mov	x0, x28
  41c8d0:	bl	41b408 <ferror@plt+0x18a98>
  41c8d4:	mov	x19, x0
  41c8d8:	mov	w21, #0x1                   	// #1
  41c8dc:	str	x23, [x19]
  41c8e0:	stp	w22, w20, [x19, #32]
  41c8e4:	b	41b4b4 <ferror@plt+0x18b44>
  41c8e8:	ldr	w0, [x19, #36]
  41c8ec:	cmp	w0, #0x11
  41c8f0:	b.eq	41c900 <ferror@plt+0x19f90>  // b.none
  41c8f4:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41c8f8:	add	x4, x4, #0x7ad
  41c8fc:	b	41ba90 <ferror@plt+0x19120>
  41c900:	ldp	x2, x1, [x19, #-32]
  41c904:	ldr	w0, [x28, #28]
  41c908:	orr	x1, x1, x2
  41c90c:	sub	w2, w0, #0x1
  41c910:	cmp	x1, #0x0
  41c914:	csinc	w0, w2, w0, eq  // eq = none
  41c918:	b	41c8a8 <ferror@plt+0x19f38>
  41c91c:	ldp	x1, x0, [x19, #8]
  41c920:	orr	x0, x0, x1
  41c924:	cmp	x0, #0x0
  41c928:	cset	w21, ne  // ne = any
  41c92c:	b	41b574 <ferror@plt+0x18c04>
  41c930:	cmp	w20, #0x16
  41c934:	b.ne	41c870 <ferror@plt+0x19f00>  // b.any
  41c938:	ldr	x0, [x28, #432]
  41c93c:	cbz	x0, 41c958 <ferror@plt+0x19fe8>
  41c940:	ldp	w1, w0, [sp, #128]
  41c944:	eor	w0, w0, #0x1
  41c948:	cmp	w1, #0x3
  41c94c:	csinc	w0, w0, wzr, eq  // eq = none
  41c950:	cbz	w0, 41c958 <ferror@plt+0x19fe8>
  41c954:	str	xzr, [x28, #432]
  41c958:	ldr	x0, [x28, #1096]
  41c95c:	cmp	x0, x19
  41c960:	b.eq	41c91c <ferror@plt+0x19fac>  // b.none
  41c964:	ldr	w1, [sp, #136]
  41c968:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  41c96c:	adrp	x5, 451000 <_obstack_memory_used@@Base+0x17198>
  41c970:	add	x0, x0, #0x3d5
  41c974:	cmp	w1, #0x0
  41c978:	add	x5, x5, #0xf55
  41c97c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41c980:	ldr	w2, [x19, #32]
  41c984:	add	x4, x4, #0x7c8
  41c988:	csel	x5, x5, x0, ne  // ne = any
  41c98c:	mov	w3, #0x0                   	// #0
  41c990:	mov	w1, #0x4                   	// #4
  41c994:	b	41b524 <ferror@plt+0x18bb4>
  41c998:	ldp	x1, x0, [x19, #8]
  41c99c:	orr	x0, x0, x1
  41c9a0:	cmp	x0, #0x0
  41c9a4:	cset	w0, ne  // ne = any
  41c9a8:	b	41c73c <ferror@plt+0x19dcc>
  41c9ac:	ldrb	w4, [x0, #16]
  41c9b0:	ldp	x2, x3, [x0]
  41c9b4:	cbnz	w4, 41c9e8 <ferror@plt+0x1a078>
  41c9b8:	cmp	x1, #0x40
  41c9bc:	b.ls	41ca00 <ferror@plt+0x1a090>  // b.plast
  41c9c0:	sub	x1, x1, #0x40
  41c9c4:	cmp	x1, #0x3f
  41c9c8:	b.hi	41c9e8 <ferror@plt+0x1a078>  // b.pmore
  41c9cc:	sub	w4, w1, #0x1
  41c9d0:	lsr	x4, x2, x4
  41c9d4:	tbz	w4, #0, 41c9e8 <ferror@plt+0x1a078>
  41c9d8:	neg	w1, w1
  41c9dc:	mov	x4, #0xffffffffffffffff    	// #-1
  41c9e0:	lsr	x1, x4, x1
  41c9e4:	orn	x2, x2, x1
  41c9e8:	stp	x2, x3, [x0]
  41c9ec:	ldp	x2, x3, [x0]
  41c9f0:	stp	x2, x3, [x8]
  41c9f4:	ldr	x0, [x0, #16]
  41c9f8:	str	x0, [x8, #16]
  41c9fc:	ret
  41ca00:	sub	w4, w1, #0x1
  41ca04:	lsr	x4, x3, x4
  41ca08:	tbz	w4, #0, 41c9e8 <ferror@plt+0x1a078>
  41ca0c:	cmp	x1, #0x40
  41ca10:	mov	x2, #0xffffffffffffffff    	// #-1
  41ca14:	b.eq	41c9e8 <ferror@plt+0x1a078>  // b.none
  41ca18:	neg	w1, w1
  41ca1c:	lsr	x1, x2, x1
  41ca20:	orn	x3, x3, x1
  41ca24:	b	41c9e8 <ferror@plt+0x1a078>
  41ca28:	ldr	x1, [x0, #24]
  41ca2c:	ldr	x0, [x0, #8]
  41ca30:	cbz	x0, 41ca3c <ferror@plt+0x1a0cc>
  41ca34:	ldr	x0, [x1]
  41ca38:	b	4397f0 <ferror@plt+0x36e80>
  41ca3c:	ldr	x0, [x1, #8]
  41ca40:	b	41ca38 <ferror@plt+0x1a0c8>
  41ca44:	stp	x29, x30, [sp, #-32]!
  41ca48:	mov	x29, sp
  41ca4c:	str	x19, [sp, #16]
  41ca50:	mov	x19, x0
  41ca54:	ldr	x0, [x0, #48]
  41ca58:	bl	402730 <free@plt>
  41ca5c:	ldr	x0, [x19]
  41ca60:	bl	402730 <free@plt>
  41ca64:	ldr	x0, [x19, #8]
  41ca68:	bl	402730 <free@plt>
  41ca6c:	mov	x0, x19
  41ca70:	ldr	x19, [sp, #16]
  41ca74:	ldp	x29, x30, [sp], #32
  41ca78:	b	402730 <free@plt>
  41ca7c:	stp	x29, x30, [sp, #-32]!
  41ca80:	mov	x29, sp
  41ca84:	ldr	x0, [x0]
  41ca88:	stp	x19, x20, [sp, #16]
  41ca8c:	mov	x19, x1
  41ca90:	ldr	x1, [x0, #8]
  41ca94:	cbz	x1, 41caec <ferror@plt+0x1a17c>
  41ca98:	ldr	x20, [x0, #24]
  41ca9c:	ldrb	w0, [x20, #210]
  41caa0:	cbnz	w0, 41caec <ferror@plt+0x1a17c>
  41caa4:	ldr	x0, [x20, #56]
  41caa8:	cbnz	x0, 41caec <ferror@plt+0x1a17c>
  41caac:	ldrh	w0, [x20, #208]
  41cab0:	cmp	w0, #0x1
  41cab4:	b.ne	41caec <ferror@plt+0x1a17c>  // b.any
  41cab8:	ldrb	w0, [x20, #212]
  41cabc:	cbnz	w0, 41caec <ferror@plt+0x1a17c>
  41cac0:	ldr	x0, [x19]
  41cac4:	cbnz	x0, 41cad8 <ferror@plt+0x1a168>
  41cac8:	ldr	x0, [x19, #8]
  41cacc:	mov	x1, #0x8                   	// #8
  41cad0:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  41cad4:	stp	x0, xzr, [x19]
  41cad8:	ldp	x1, x0, [x19]
  41cadc:	add	x2, x0, #0x1
  41cae0:	str	x2, [x19, #8]
  41cae4:	ldr	x2, [x20, #8]
  41cae8:	str	x2, [x1, x0, lsl #3]
  41caec:	mov	w0, #0x1                   	// #1
  41caf0:	ldp	x19, x20, [sp, #16]
  41caf4:	ldp	x29, x30, [sp], #32
  41caf8:	ret
  41cafc:	stp	x29, x30, [sp, #-16]!
  41cb00:	mov	x29, sp
  41cb04:	bl	438b04 <ferror@plt+0x36194>
  41cb08:	cmp	w0, #0x0
  41cb0c:	cset	w0, eq  // eq = none
  41cb10:	ldp	x29, x30, [sp], #16
  41cb14:	ret
  41cb18:	stp	x29, x30, [sp, #-16]!
  41cb1c:	mov	x29, sp
  41cb20:	ldr	x2, [x0, #24]
  41cb24:	ldr	x0, [x0, #8]
  41cb28:	cbz	x0, 41cb44 <ferror@plt+0x1a1d4>
  41cb2c:	ldr	x0, [x2]
  41cb30:	bl	438b04 <ferror@plt+0x36194>
  41cb34:	cmp	w0, #0x0
  41cb38:	cset	w0, eq  // eq = none
  41cb3c:	ldp	x29, x30, [sp], #16
  41cb40:	ret
  41cb44:	ldr	x0, [x2, #8]
  41cb48:	b	41cb30 <ferror@plt+0x1a1c0>
  41cb4c:	stp	x29, x30, [sp, #-64]!
  41cb50:	mov	x29, sp
  41cb54:	stp	x19, x20, [sp, #16]
  41cb58:	ldr	w19, [x1, #16]
  41cb5c:	stp	x21, x22, [sp, #32]
  41cb60:	mov	x22, x1
  41cb64:	str	x23, [sp, #48]
  41cb68:	mov	x23, x0
  41cb6c:	bl	402330 <strlen@plt>
  41cb70:	mov	x21, x0
  41cb74:	add	x0, x19, #0x2
  41cb78:	add	x0, x0, x21
  41cb7c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41cb80:	ldr	x1, [x22, #8]
  41cb84:	mov	x20, x0
  41cb88:	mov	x2, x19
  41cb8c:	bl	4022e0 <memcpy@plt>
  41cb90:	cbz	x19, 41cbb0 <ferror@plt+0x1a240>
  41cb94:	add	x0, x20, x19
  41cb98:	ldurb	w0, [x0, #-1]
  41cb9c:	cmp	w0, #0x2f
  41cba0:	b.eq	41cbb0 <ferror@plt+0x1a240>  // b.none
  41cba4:	mov	w0, #0x2f                  	// #47
  41cba8:	strb	w0, [x20, x19]
  41cbac:	add	x19, x19, #0x1
  41cbb0:	add	x2, x21, #0x1
  41cbb4:	mov	x1, x23
  41cbb8:	add	x0, x20, x19
  41cbbc:	bl	4022e0 <memcpy@plt>
  41cbc0:	mov	x0, x20
  41cbc4:	ldp	x19, x20, [sp, #16]
  41cbc8:	ldp	x21, x22, [sp, #32]
  41cbcc:	ldr	x23, [sp, #48]
  41cbd0:	ldp	x29, x30, [sp], #64
  41cbd4:	ret
  41cbd8:	stp	x29, x30, [sp, #-80]!
  41cbdc:	mov	x29, sp
  41cbe0:	stp	x19, x20, [sp, #16]
  41cbe4:	stp	x21, x22, [sp, #32]
  41cbe8:	mov	w21, w0
  41cbec:	mov	x0, #0x15                  	// #21
  41cbf0:	stp	x23, x24, [sp, #48]
  41cbf4:	mov	x23, x1
  41cbf8:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  41cbfc:	str	x25, [sp, #64]
  41cc00:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41cc04:	add	x24, x24, #0x21a
  41cc08:	mov	x20, x0
  41cc0c:	and	x0, x21, #0xff
  41cc10:	mov	x19, x20
  41cc14:	ldrh	w0, [x24, x0, lsl #1]
  41cc18:	tst	w0, #0xc00
  41cc1c:	b.ne	41cc7c <ferror@plt+0x1a30c>  // b.any
  41cc20:	mov	w22, #0x14                  	// #20
  41cc24:	strb	w21, [x19], #1
  41cc28:	mov	x0, x23
  41cc2c:	bl	4025e0 <getc_unlocked@plt>
  41cc30:	mov	w21, w0
  41cc34:	cmn	w0, #0x1
  41cc38:	b.eq	41cc7c <ferror@plt+0x1a30c>  // b.none
  41cc3c:	and	x0, x0, #0xff
  41cc40:	ldrh	w0, [x24, x0, lsl #1]
  41cc44:	tst	w0, #0xc00
  41cc48:	b.ne	41cc7c <ferror@plt+0x1a30c>  // b.any
  41cc4c:	sub	x25, x19, x20
  41cc50:	cmp	x25, w22, sxtw
  41cc54:	b.ne	41cc74 <ferror@plt+0x1a304>  // b.any
  41cc58:	lsl	w22, w22, #1
  41cc5c:	mov	x0, x20
  41cc60:	add	w1, w22, #0x1
  41cc64:	sxtw	x1, w1
  41cc68:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  41cc6c:	mov	x20, x0
  41cc70:	add	x19, x0, x25
  41cc74:	strb	w21, [x19], #1
  41cc78:	b	41cc28 <ferror@plt+0x1a2b8>
  41cc7c:	strb	wzr, [x19]
  41cc80:	mov	x1, x23
  41cc84:	mov	w0, w21
  41cc88:	bl	402740 <ungetc@plt>
  41cc8c:	mov	x0, x20
  41cc90:	ldp	x19, x20, [sp, #16]
  41cc94:	ldp	x21, x22, [sp, #32]
  41cc98:	ldp	x23, x24, [sp, #48]
  41cc9c:	ldr	x25, [sp, #64]
  41cca0:	ldp	x29, x30, [sp], #80
  41cca4:	ret
  41cca8:	stp	x29, x30, [sp, #-80]!
  41ccac:	mov	x29, sp
  41ccb0:	stp	x19, x20, [sp, #16]
  41ccb4:	mov	x20, x0
  41ccb8:	ldr	w19, [x0, #16]
  41ccbc:	stp	x21, x22, [sp, #32]
  41ccc0:	add	x0, x19, #0x1b
  41ccc4:	ldr	x1, [x20, #8]
  41ccc8:	and	x0, x0, #0x1fffffff0
  41cccc:	stp	x23, x24, [sp, #48]
  41ccd0:	mov	x2, x19
  41ccd4:	stp	x25, x26, [sp, #64]
  41ccd8:	sub	sp, sp, x0
  41ccdc:	mov	x21, sp
  41cce0:	mov	x0, x21
  41cce4:	bl	4022e0 <memcpy@plt>
  41cce8:	cbz	x19, 41cd08 <ferror@plt+0x1a398>
  41ccec:	add	x0, x21, x19
  41ccf0:	ldurb	w0, [x0, #-1]
  41ccf4:	cmp	w0, #0x2f
  41ccf8:	b.eq	41cd08 <ferror@plt+0x1a398>  // b.none
  41ccfc:	mov	w0, #0x2f                  	// #47
  41cd00:	strb	w0, [x21, x19]
  41cd04:	add	x19, x19, #0x1
  41cd08:	add	x0, x21, x19
  41cd0c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  41cd10:	add	x1, x1, #0x8f0
  41cd14:	bl	4027b0 <strcpy@plt>
  41cd18:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  41cd1c:	add	x1, x1, #0x129
  41cd20:	mov	x0, x21
  41cd24:	bl	438c08 <ferror@plt+0x36298>
  41cd28:	mov	x21, x0
  41cd2c:	mov	x0, #0x48                  	// #72
  41cd30:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41cd34:	str	x0, [x20, #32]
  41cd38:	mov	x19, #0x0                   	// #0
  41cd3c:	cbnz	x21, 41ce20 <ferror@plt+0x1a4b0>
  41cd40:	ldr	x0, [x20, #32]
  41cd44:	str	xzr, [x0, x19, lsl #3]
  41cd48:	mov	sp, x29
  41cd4c:	ldp	x19, x20, [sp, #16]
  41cd50:	ldp	x21, x22, [sp, #32]
  41cd54:	ldp	x23, x24, [sp, #48]
  41cd58:	ldp	x25, x26, [sp, #64]
  41cd5c:	ldp	x29, x30, [sp], #80
  41cd60:	ret
  41cd64:	mov	x19, x25
  41cd68:	mov	x0, x21
  41cd6c:	bl	4025e0 <getc_unlocked@plt>
  41cd70:	mov	w22, w0
  41cd74:	cmn	w0, #0x1
  41cd78:	b.eq	41ce48 <ferror@plt+0x1a4d8>  // b.none
  41cd7c:	and	x0, x0, #0xff
  41cd80:	ldrh	w0, [x24, x0, lsl #1]
  41cd84:	tst	w0, #0xc00
  41cd88:	b.ne	41cd68 <ferror@plt+0x1a3f8>  // b.any
  41cd8c:	add	x25, x19, #0x2
  41cd90:	cmp	x25, x23
  41cd94:	b.ls	41cdac <ferror@plt+0x1a43c>  // b.plast
  41cd98:	ldr	x0, [x20, #32]
  41cd9c:	add	x23, x23, #0x8
  41cda0:	lsl	x1, x23, #3
  41cda4:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  41cda8:	str	x0, [x20, #32]
  41cdac:	ldr	x26, [x20, #32]
  41cdb0:	lsl	x19, x19, #3
  41cdb4:	mov	x1, x21
  41cdb8:	mov	w0, w22
  41cdbc:	bl	41cbd8 <ferror@plt+0x1a268>
  41cdc0:	str	x0, [x26, x19]
  41cdc4:	mov	x0, x21
  41cdc8:	bl	4025e0 <getc_unlocked@plt>
  41cdcc:	cmn	w0, #0x1
  41cdd0:	b.eq	41cde0 <ferror@plt+0x1a470>  // b.none
  41cdd4:	and	x1, x0, #0xff
  41cdd8:	ldrh	w1, [x24, x1, lsl #1]
  41cddc:	tbnz	w1, #0, 41cdc4 <ferror@plt+0x1a454>
  41cde0:	mov	x1, x21
  41cde4:	bl	41cbd8 <ferror@plt+0x1a268>
  41cde8:	ldrb	w1, [x0]
  41cdec:	mov	x22, x0
  41cdf0:	add	x19, x19, #0x8
  41cdf4:	cmp	w1, #0x2f
  41cdf8:	ldr	x26, [x20, #32]
  41cdfc:	b.ne	41ce30 <ferror@plt+0x1a4c0>  // b.any
  41ce00:	str	x0, [x26, x19]
  41ce04:	mov	x0, x21
  41ce08:	bl	4025e0 <getc_unlocked@plt>
  41ce0c:	cmp	w0, #0xa
  41ce10:	b.eq	41cd64 <ferror@plt+0x1a3f4>  // b.none
  41ce14:	cmn	w0, #0x1
  41ce18:	b.ne	41ce04 <ferror@plt+0x1a494>  // b.any
  41ce1c:	b	41cd64 <ferror@plt+0x1a3f4>
  41ce20:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  41ce24:	mov	x23, #0x9                   	// #9
  41ce28:	add	x24, x24, #0x21a
  41ce2c:	b	41cd68 <ferror@plt+0x1a3f8>
  41ce30:	mov	x1, x20
  41ce34:	bl	41cb4c <ferror@plt+0x1a1dc>
  41ce38:	str	x0, [x26, x19]
  41ce3c:	mov	x0, x22
  41ce40:	bl	402730 <free@plt>
  41ce44:	b	41ce04 <ferror@plt+0x1a494>
  41ce48:	mov	x0, x21
  41ce4c:	bl	402450 <fclose@plt>
  41ce50:	b	41cd40 <ferror@plt+0x1a3d0>
  41ce54:	ldr	x0, [x0]
  41ce58:	ldr	x1, [x1]
  41ce5c:	b	4026d0 <strcmp@plt>
  41ce60:	stp	x29, x30, [sp, #-32]!
  41ce64:	mov	x29, sp
  41ce68:	str	x19, [sp, #16]
  41ce6c:	mov	x19, x0
  41ce70:	ldr	x0, [x0, #8]
  41ce74:	ldrb	w1, [x0]
  41ce78:	cbnz	w1, 41cebc <ferror@plt+0x1a54c>
  41ce7c:	str	wzr, [x19, #200]
  41ce80:	ldr	w0, [x19, #200]
  41ce84:	cmn	w0, #0x1
  41ce88:	b.eq	41cf00 <ferror@plt+0x1a590>  // b.none
  41ce8c:	add	x1, x19, #0x48
  41ce90:	bl	44a828 <_obstack_memory_used@@Base+0x109c0>
  41ce94:	cbnz	w0, 41cedc <ferror@plt+0x1a56c>
  41ce98:	ldr	w0, [x19, #88]
  41ce9c:	and	w0, w0, #0xf000
  41cea0:	cmp	w0, #0x4, lsl #12
  41cea4:	b.eq	41ced0 <ferror@plt+0x1a560>  // b.none
  41cea8:	mov	w0, #0x1                   	// #1
  41ceac:	str	wzr, [x19, #204]
  41ceb0:	ldr	x19, [sp, #16]
  41ceb4:	ldp	x29, x30, [sp], #32
  41ceb8:	ret
  41cebc:	mov	w2, #0x1b6                 	// #438
  41cec0:	mov	w1, #0x100                 	// #256
  41cec4:	bl	4024c0 <open@plt>
  41cec8:	str	w0, [x19, #200]
  41cecc:	b	41ce80 <ferror@plt+0x1a510>
  41ced0:	bl	4028c0 <__errno_location@plt>
  41ced4:	mov	w1, #0x2                   	// #2
  41ced8:	str	w1, [x0]
  41cedc:	ldr	w0, [x19, #200]
  41cee0:	bl	402600 <close@plt>
  41cee4:	mov	w0, #0xffffffff            	// #-1
  41cee8:	str	w0, [x19, #200]
  41ceec:	bl	4028c0 <__errno_location@plt>
  41cef0:	ldr	w0, [x0]
  41cef4:	str	w0, [x19, #204]
  41cef8:	mov	w0, #0x0                   	// #0
  41cefc:	b	41ceb0 <ferror@plt+0x1a540>
  41cf00:	bl	4028c0 <__errno_location@plt>
  41cf04:	ldr	w1, [x0]
  41cf08:	cmp	w1, #0x14
  41cf0c:	b.ne	41ceec <ferror@plt+0x1a57c>  // b.any
  41cf10:	mov	w1, #0x2                   	// #2
  41cf14:	str	w1, [x0]
  41cf18:	b	41ceec <ferror@plt+0x1a57c>
  41cf1c:	stp	x29, x30, [sp, #-80]!
  41cf20:	mov	x29, sp
  41cf24:	stp	x19, x20, [sp, #16]
  41cf28:	mov	x20, x0
  41cf2c:	mov	x19, x1
  41cf30:	stp	x21, x22, [sp, #32]
  41cf34:	mov	x0, x1
  41cf38:	mov	x22, x2
  41cf3c:	stp	x23, x24, [sp, #48]
  41cf40:	stp	x25, x26, [sp, #64]
  41cf44:	ldr	x24, [x1, #8]
  41cf48:	str	x2, [x1, #8]
  41cf4c:	bl	41ce60 <ferror@plt+0x1a4f0>
  41cf50:	ands	w21, w0, #0xff
  41cf54:	b.eq	41cfe0 <ferror@plt+0x1a670>  // b.none
  41cf58:	ldr	w2, [x19, #200]
  41cf5c:	mov	x1, x22
  41cf60:	ldr	x3, [x20, #968]
  41cf64:	mov	x0, x20
  41cf68:	blr	x3
  41cf6c:	and	w21, w0, #0x1
  41cf70:	mov	w25, w21
  41cf74:	tbnz	w0, #0, 41cf88 <ferror@plt+0x1a618>
  41cf78:	ldr	w0, [x19, #200]
  41cf7c:	bl	402600 <close@plt>
  41cf80:	mov	w0, #0xffffffff            	// #-1
  41cf84:	str	w0, [x19, #200]
  41cf88:	ldrb	w0, [x20, #1131]
  41cf8c:	cbz	w0, 41cfe0 <ferror@plt+0x1a670>
  41cf90:	mov	w23, #0x1                   	// #1
  41cf94:	adrp	x26, 478000 <_obstack_memory_used@@Base+0x3e198>
  41cf98:	ldr	x1, [x20, #40]
  41cf9c:	ldr	x0, [x26, #1336]
  41cfa0:	ldr	w1, [x1, #48]
  41cfa4:	cmp	w1, w23
  41cfa8:	b.ls	41cfc0 <ferror@plt+0x1a650>  // b.plast
  41cfac:	mov	x1, x0
  41cfb0:	add	w23, w23, #0x1
  41cfb4:	mov	w0, #0x2e                  	// #46
  41cfb8:	bl	402430 <putc_unlocked@plt>
  41cfbc:	b	41cf98 <ferror@plt+0x1a628>
  41cfc0:	cmp	w25, #0x0
  41cfc4:	mov	w1, #0x78                  	// #120
  41cfc8:	mov	w2, #0x21                  	// #33
  41cfcc:	mov	x3, x22
  41cfd0:	csel	w2, w2, w1, ne  // ne = any
  41cfd4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  41cfd8:	add	x1, x1, #0x7df
  41cfdc:	bl	402940 <fprintf@plt>
  41cfe0:	mov	w0, w21
  41cfe4:	ldp	x21, x22, [sp, #32]
  41cfe8:	ldp	x25, x26, [sp, #64]
  41cfec:	str	x24, [x19, #8]
  41cff0:	ldp	x19, x20, [sp, #16]
  41cff4:	ldp	x23, x24, [sp, #48]
  41cff8:	ldp	x29, x30, [sp], #80
  41cffc:	ret
  41d000:	stp	x29, x30, [sp, #-64]!
  41d004:	mov	x29, sp
  41d008:	stp	x19, x20, [sp, #16]
  41d00c:	mov	x19, x0
  41d010:	mov	x20, x1
  41d014:	ldr	x0, [x0, #40]
  41d018:	stp	x21, x22, [sp, #32]
  41d01c:	mov	w21, w3
  41d020:	stp	x23, x24, [sp, #48]
  41d024:	mov	w23, w2
  41d028:	ldr	w0, [x0, #60]
  41d02c:	cmp	w0, #0x1
  41d030:	b.ls	41d0bc <ferror@plt+0x1a74c>  // b.plast
  41d034:	ldr	x0, [x19]
  41d038:	cbz	x0, 41d0bc <ferror@plt+0x1a74c>
  41d03c:	ldrb	w22, [x0, #106]
  41d040:	ldrb	w0, [x19, #26]
  41d044:	cbnz	w0, 41d0e8 <ferror@plt+0x1a778>
  41d048:	bl	4028c0 <__errno_location@plt>
  41d04c:	orr	w22, w22, w23
  41d050:	ldr	w1, [x20, #204]
  41d054:	cmp	w22, #0x0
  41d058:	ldr	w24, [x19, #1200]
  41d05c:	str	w1, [x0]
  41d060:	cset	w0, ne  // ne = any
  41d064:	cmp	w24, w0
  41d068:	b.le	41d0c4 <ferror@plt+0x1a754>
  41d06c:	ldrb	w0, [x19, #1204]
  41d070:	cbz	w0, 41d090 <ferror@plt+0x1a720>
  41d074:	cmp	w1, #0x2
  41d078:	b.ne	41d090 <ferror@plt+0x1a720>  // b.any
  41d07c:	ldr	x1, [x20]
  41d080:	ldr	x0, [x19, #712]
  41d084:	bl	429060 <ferror@plt+0x266f0>
  41d088:	ldrb	w0, [x19, #1207]
  41d08c:	cbz	w0, 41d0e8 <ferror@plt+0x1a778>
  41d090:	ldr	x2, [x20, #8]
  41d094:	cbnz	x2, 41d09c <ferror@plt+0x1a72c>
  41d098:	ldr	x2, [x20]
  41d09c:	mov	w3, w21
  41d0a0:	mov	w1, #0x6                   	// #6
  41d0a4:	mov	x0, x19
  41d0a8:	ldp	x19, x20, [sp, #16]
  41d0ac:	ldp	x21, x22, [sp, #32]
  41d0b0:	ldp	x23, x24, [sp, #48]
  41d0b4:	ldp	x29, x30, [sp], #64
  41d0b8:	b	419944 <ferror@plt+0x16fd4>
  41d0bc:	mov	w22, #0x0                   	// #0
  41d0c0:	b	41d040 <ferror@plt+0x1a6d0>
  41d0c4:	cbz	w24, 41d090 <ferror@plt+0x1a720>
  41d0c8:	ldrb	w0, [x19, #1207]
  41d0cc:	cbnz	w0, 41d090 <ferror@plt+0x1a720>
  41d0d0:	ldr	x2, [x20, #8]
  41d0d4:	cbnz	x2, 41d0dc <ferror@plt+0x1a76c>
  41d0d8:	ldr	x2, [x20]
  41d0dc:	mov	w3, w21
  41d0e0:	mov	w1, #0x0                   	// #0
  41d0e4:	b	41d0a4 <ferror@plt+0x1a734>
  41d0e8:	ldp	x19, x20, [sp, #16]
  41d0ec:	ldp	x21, x22, [sp, #32]
  41d0f0:	ldp	x23, x24, [sp, #48]
  41d0f4:	ldp	x29, x30, [sp], #64
  41d0f8:	ret
  41d0fc:	mov	x2, #0x20                  	// #32
  41d100:	b	402690 <memcmp@plt>
  41d104:	stp	x29, x30, [sp, #-32]!
  41d108:	mov	x29, sp
  41d10c:	str	x19, [sp, #16]
  41d110:	mov	x19, x0
  41d114:	ldr	x0, [x0, #312]
  41d118:	ldr	w0, [x0]
  41d11c:	cmp	w0, #0x7f
  41d120:	b.ne	41d13c <ferror@plt+0x1a7cc>  // b.any
  41d124:	mov	x0, #0xff0                 	// #4080
  41d128:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41d12c:	ldr	x1, [x19, #312]
  41d130:	str	wzr, [x0]
  41d134:	str	x1, [x0, #8]
  41d138:	str	x0, [x19, #312]
  41d13c:	ldr	x0, [x19, #312]
  41d140:	ldr	x19, [sp, #16]
  41d144:	ldr	w1, [x0]
  41d148:	add	w2, w1, #0x1
  41d14c:	str	w2, [x0]
  41d150:	ubfiz	x1, x1, #5, #32
  41d154:	add	x1, x1, #0x10
  41d158:	add	x0, x0, x1
  41d15c:	ldp	x29, x30, [sp], #32
  41d160:	ret
  41d164:	stp	x29, x30, [sp, #-64]!
  41d168:	mov	x29, sp
  41d16c:	stp	x19, x20, [sp, #16]
  41d170:	mov	x20, x0
  41d174:	mov	x0, x1
  41d178:	stp	x21, x22, [sp, #32]
  41d17c:	mov	x21, x1
  41d180:	ldr	x19, [x20, #304]
  41d184:	str	x23, [sp, #48]
  41d188:	mov	w23, w2
  41d18c:	bl	4397f0 <ferror@plt+0x36e80>
  41d190:	mov	x1, x21
  41d194:	mov	w2, w0
  41d198:	mov	w3, #0x1                   	// #1
  41d19c:	mov	x0, x19
  41d1a0:	bl	439468 <ferror@plt+0x36af8>
  41d1a4:	mov	x22, x0
  41d1a8:	ldr	x0, [x0]
  41d1ac:	cbz	x0, 41d1dc <ferror@plt+0x1a86c>
  41d1b0:	ldr	x1, [x0, #8]
  41d1b4:	cbnz	x1, 41d1d4 <ferror@plt+0x1a864>
  41d1b8:	ldr	x19, [x0, #24]
  41d1bc:	mov	x0, x19
  41d1c0:	ldp	x19, x20, [sp, #16]
  41d1c4:	ldp	x21, x22, [sp, #32]
  41d1c8:	ldr	x23, [sp, #48]
  41d1cc:	ldp	x29, x30, [sp], #64
  41d1d0:	ret
  41d1d4:	ldr	x0, [x0]
  41d1d8:	b	41d1ac <ferror@plt+0x1a83c>
  41d1dc:	mov	x1, #0x40                  	// #64
  41d1e0:	mov	x0, #0x1                   	// #1
  41d1e4:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  41d1e8:	mov	x19, x0
  41d1ec:	ldr	x0, [x20, #200]
  41d1f0:	stp	x0, x21, [x19]
  41d1f4:	mov	x0, x21
  41d1f8:	bl	402330 <strlen@plt>
  41d1fc:	str	w0, [x19, #16]
  41d200:	strb	w23, [x19, #20]
  41d204:	mov	x0, x20
  41d208:	str	xzr, [x19, #40]
  41d20c:	bl	41d104 <ferror@plt+0x1a794>
  41d210:	ldr	x1, [x22]
  41d214:	stp	x1, xzr, [x0]
  41d218:	ldr	x1, [x20, #40]
  41d21c:	ldr	w1, [x1, #56]
  41d220:	str	w1, [x0, #16]
  41d224:	str	x19, [x0, #24]
  41d228:	str	x0, [x22]
  41d22c:	b	41d1bc <ferror@plt+0x1a84c>
  41d230:	stp	x29, x30, [sp, #-48]!
  41d234:	mov	x29, sp
  41d238:	stp	x19, x20, [sp, #16]
  41d23c:	mov	x19, x0
  41d240:	stp	x21, x22, [sp, #32]
  41d244:	ldrb	w0, [x1]
  41d248:	cmp	w0, #0x2f
  41d24c:	b.ne	41d268 <ferror@plt+0x1a8f8>  // b.any
  41d250:	add	x20, x19, #0xd8
  41d254:	mov	x0, x20
  41d258:	ldp	x19, x20, [sp, #16]
  41d25c:	ldp	x21, x22, [sp, #32]
  41d260:	ldp	x29, x30, [sp], #48
  41d264:	ret
  41d268:	ldr	x0, [x19]
  41d26c:	cbnz	x0, 41d2b4 <ferror@plt+0x1a944>
  41d270:	ldr	x20, [x19, #288]
  41d274:	cmp	w3, #0x1
  41d278:	b.ne	41d2bc <ferror@plt+0x1a94c>  // b.any
  41d27c:	ldr	x0, [x20, #64]
  41d280:	cbz	x0, 41d344 <ferror@plt+0x1a9d4>
  41d284:	add	x3, x19, #0xd8
  41d288:	cmp	x0, x3
  41d28c:	b.eq	41d344 <ferror@plt+0x1a9d4>  // b.none
  41d290:	ldr	x20, [x0]
  41d294:	cbnz	x20, 41d254 <ferror@plt+0x1a8e4>
  41d298:	mov	x3, x1
  41d29c:	mov	x0, x19
  41d2a0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41d2a4:	mov	w1, #0x3                   	// #3
  41d2a8:	add	x2, x2, #0x7e9
  41d2ac:	bl	419440 <ferror@plt+0x16ad0>
  41d2b0:	b	41d254 <ferror@plt+0x1a8e4>
  41d2b4:	ldr	x20, [x0, #80]
  41d2b8:	b	41d274 <ferror@plt+0x1a904>
  41d2bc:	cbz	w2, 41d2c8 <ferror@plt+0x1a958>
  41d2c0:	ldr	x20, [x19, #208]
  41d2c4:	b	41d294 <ferror@plt+0x1a924>
  41d2c8:	cmp	w3, #0x3
  41d2cc:	b.ne	41d348 <ferror@plt+0x1a9d8>  // b.any
  41d2d0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  41d2d4:	add	x1, x1, #0x7e6
  41d2d8:	mov	w2, #0x0                   	// #0
  41d2dc:	mov	x0, x19
  41d2e0:	ldp	x19, x20, [sp, #16]
  41d2e4:	ldp	x21, x22, [sp, #32]
  41d2e8:	ldp	x29, x30, [sp], #48
  41d2ec:	b	41d164 <ferror@plt+0x1a7f4>
  41d2f0:	ldr	x0, [x20, #24]
  41d2f4:	cbnz	x0, 41d328 <ferror@plt+0x1a9b8>
  41d2f8:	ldr	x0, [x20, #8]
  41d2fc:	bl	439b18 <ferror@plt+0x371a8>
  41d300:	ldr	x21, [x20, #8]
  41d304:	sub	x21, x0, x21
  41d308:	add	x0, x21, #0x1
  41d30c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41d310:	ldr	x1, [x20, #8]
  41d314:	mov	x22, x0
  41d318:	mov	x2, x21
  41d31c:	bl	4022e0 <memcpy@plt>
  41d320:	strb	wzr, [x22, x21]
  41d324:	str	x22, [x20, #24]
  41d328:	ldr	x0, [x19]
  41d32c:	ldr	x1, [x20, #24]
  41d330:	cbz	x0, 41d33c <ferror@plt+0x1a9cc>
  41d334:	ldrb	w2, [x0, #106]
  41d338:	b	41d2dc <ferror@plt+0x1a96c>
  41d33c:	mov	w2, #0x0                   	// #0
  41d340:	b	41d2dc <ferror@plt+0x1a96c>
  41d344:	cbnz	w2, 41d2c0 <ferror@plt+0x1a950>
  41d348:	ldrb	w0, [x19, #416]
  41d34c:	cbz	w0, 41d2f0 <ferror@plt+0x1a980>
  41d350:	ldr	x20, [x19, #200]
  41d354:	b	41d294 <ferror@plt+0x1a924>
  41d358:	stp	x29, x30, [sp, #-48]!
  41d35c:	mov	x2, #0x8                   	// #8
  41d360:	mov	x29, sp
  41d364:	stp	x19, x20, [sp, #16]
  41d368:	mov	x19, x0
  41d36c:	mov	x20, x1
  41d370:	str	x21, [sp, #32]
  41d374:	bl	402690 <memcmp@plt>
  41d378:	cbnz	w0, 41d3c8 <ferror@plt+0x1aa58>
  41d37c:	ldrb	w0, [x19, #24]
  41d380:	add	x21, x19, #0x8
  41d384:	cbnz	w0, 41d3a4 <ferror@plt+0x1aa34>
  41d388:	ldr	x0, [x19, #32]
  41d38c:	mov	x2, x21
  41d390:	ldr	x1, [x0, #120]
  41d394:	ldr	x0, [x0, #40]
  41d398:	bl	4389f8 <ferror@plt+0x36088>
  41d39c:	mov	w0, #0x1                   	// #1
  41d3a0:	strb	w0, [x19, #24]
  41d3a4:	add	x1, x20, #0x8
  41d3a8:	mov	x0, x21
  41d3ac:	mov	x2, #0x10                  	// #16
  41d3b0:	bl	402690 <memcmp@plt>
  41d3b4:	cbnz	w0, 41d3c8 <ferror@plt+0x1aa58>
  41d3b8:	ldrb	w1, [x19, #25]
  41d3bc:	cbnz	w1, 41d3c8 <ferror@plt+0x1aa58>
  41d3c0:	ldrb	w0, [x20, #24]
  41d3c4:	eor	w0, w0, #0x1
  41d3c8:	ldp	x19, x20, [sp, #16]
  41d3cc:	ldr	x21, [sp, #32]
  41d3d0:	ldp	x29, x30, [sp], #48
  41d3d4:	ret
  41d3d8:	stp	x29, x30, [sp, #-80]!
  41d3dc:	mov	x29, sp
  41d3e0:	stp	x19, x20, [sp, #16]
  41d3e4:	ldrb	w20, [x1, #213]
  41d3e8:	stp	x21, x22, [sp, #32]
  41d3ec:	stp	x23, x24, [sp, #48]
  41d3f0:	stp	x25, x26, [sp, #64]
  41d3f4:	cbnz	w20, 41d444 <ferror@plt+0x1aad4>
  41d3f8:	ldrb	w24, [x1, #211]
  41d3fc:	mov	x19, x1
  41d400:	cbnz	w24, 41d444 <ferror@plt+0x1aad4>
  41d404:	mov	x22, x0
  41d408:	ldr	w0, [x1, #204]
  41d40c:	cbnz	w0, 41d444 <ferror@plt+0x1aad4>
  41d410:	ldr	w0, [x1, #200]
  41d414:	mov	w25, w2
  41d418:	cmn	w0, #0x1
  41d41c:	b.ne	41d460 <ferror@plt+0x1aaf0>  // b.any
  41d420:	mov	x0, x1
  41d424:	bl	41ce60 <ferror@plt+0x1a4f0>
  41d428:	ands	w20, w0, #0xff
  41d42c:	b.ne	41d460 <ferror@plt+0x1aaf0>  // b.any
  41d430:	mov	w3, w25
  41d434:	mov	x1, x19
  41d438:	mov	x0, x22
  41d43c:	mov	w2, #0x0                   	// #0
  41d440:	bl	41d000 <ferror@plt+0x1a690>
  41d444:	mov	w0, w20
  41d448:	ldp	x19, x20, [sp, #16]
  41d44c:	ldp	x21, x22, [sp, #32]
  41d450:	ldp	x23, x24, [sp, #48]
  41d454:	ldp	x25, x26, [sp, #64]
  41d458:	ldp	x29, x30, [sp], #80
  41d45c:	ret
  41d460:	ldr	w26, [x19, #88]
  41d464:	and	w26, w26, #0xf000
  41d468:	cmp	w26, #0x6, lsl #12
  41d46c:	b.ne	41d4b0 <ferror@plt+0x1ab40>  // b.any
  41d470:	ldr	x4, [x19, #8]
  41d474:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x18198>
  41d478:	mov	w2, w25
  41d47c:	add	x3, x3, #0x813
  41d480:	mov	x0, x22
  41d484:	mov	w1, #0x3                   	// #3
  41d488:	bl	4197c8 <ferror@plt+0x16e58>
  41d48c:	ldr	w0, [x19, #200]
  41d490:	eor	w24, w24, #0x1
  41d494:	strb	w24, [x19, #211]
  41d498:	bl	402600 <close@plt>
  41d49c:	ldrb	w20, [x19, #211]
  41d4a0:	mov	w0, #0xffffffff            	// #-1
  41d4a4:	str	w0, [x19, #200]
  41d4a8:	eor	w20, w20, #0x1
  41d4ac:	b	41d444 <ferror@plt+0x1aad4>
  41d4b0:	cmp	w26, #0x8, lsl #12
  41d4b4:	b.ne	41d510 <ferror@plt+0x1aba0>  // b.any
  41d4b8:	ldr	x21, [x19, #120]
  41d4bc:	add	x0, x21, #0x10
  41d4c0:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41d4c4:	mov	x20, x0
  41d4c8:	mov	x23, #0x0                   	// #0
  41d4cc:	ldr	w0, [x19, #200]
  41d4d0:	sub	x2, x21, x23
  41d4d4:	add	x1, x20, x23
  41d4d8:	bl	4027f0 <read@plt>
  41d4dc:	cmp	x0, #0x0
  41d4e0:	b.le	41d518 <ferror@plt+0x1aba8>
  41d4e4:	add	x23, x23, x0
  41d4e8:	cmp	x21, x23
  41d4ec:	b.ne	41d4cc <ferror@plt+0x1ab5c>  // b.any
  41d4f0:	cmp	w26, #0x8, lsl #12
  41d4f4:	b.eq	41d564 <ferror@plt+0x1abf4>  // b.none
  41d4f8:	lsl	x21, x21, #1
  41d4fc:	mov	x0, x20
  41d500:	add	x1, x21, #0x10
  41d504:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  41d508:	mov	x20, x0
  41d50c:	b	41d4cc <ferror@plt+0x1ab5c>
  41d510:	mov	x21, #0x2000                	// #8192
  41d514:	b	41d4bc <ferror@plt+0x1ab4c>
  41d518:	b.eq	41d53c <ferror@plt+0x1abcc>  // b.none
  41d51c:	ldr	x2, [x19, #8]
  41d520:	mov	w3, w25
  41d524:	mov	w1, #0x3                   	// #3
  41d528:	mov	x0, x22
  41d52c:	bl	419944 <ferror@plt+0x16fd4>
  41d530:	mov	x0, x20
  41d534:	bl	402730 <free@plt>
  41d538:	b	41d48c <ferror@plt+0x1ab1c>
  41d53c:	cmp	w26, #0x8, lsl #12
  41d540:	ccmp	x23, x21, #0x4, eq  // eq = none
  41d544:	b.eq	41d564 <ferror@plt+0x1abf4>  // b.none
  41d548:	ldr	x4, [x19, #8]
  41d54c:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x18198>
  41d550:	mov	w2, w25
  41d554:	add	x3, x3, #0x828
  41d558:	mov	x0, x22
  41d55c:	mov	w1, #0x0                   	// #0
  41d560:	bl	4197c8 <ferror@plt+0x16e58>
  41d564:	ldr	x1, [x22, #1184]
  41d568:	add	x6, x19, #0x78
  41d56c:	add	x5, x19, #0x30
  41d570:	mov	x4, x23
  41d574:	add	x3, x21, #0x10
  41d578:	mov	x2, x20
  41d57c:	mov	x0, x22
  41d580:	bl	4123d8 <ferror@plt+0xfa68>
  41d584:	mov	w24, #0x1                   	// #1
  41d588:	str	x0, [x19, #40]
  41d58c:	mov	w0, #0x1                   	// #1
  41d590:	strb	w0, [x19, #213]
  41d594:	b	41d48c <ferror@plt+0x1ab1c>
  41d598:	ldr	w0, [x0, #204]
  41d59c:	cmp	w0, #0x0
  41d5a0:	cset	w0, ne  // ne = any
  41d5a4:	ret
  41d5a8:	stp	x29, x30, [sp, #-304]!
  41d5ac:	mov	x29, sp
  41d5b0:	stp	x19, x20, [sp, #16]
  41d5b4:	mov	x20, x0
  41d5b8:	stp	x21, x22, [sp, #32]
  41d5bc:	and	w21, w3, #0xff
  41d5c0:	stp	x23, x24, [sp, #48]
  41d5c4:	mov	x24, x2
  41d5c8:	stp	x25, x26, [sp, #64]
  41d5cc:	mov	x25, x1
  41d5d0:	and	w1, w5, #0xff
  41d5d4:	stp	x27, x28, [sp, #80]
  41d5d8:	mov	w27, w6
  41d5dc:	str	w1, [sp, #120]
  41d5e0:	str	w4, [sp, #156]
  41d5e4:	cbnz	x2, 41d5fc <ferror@plt+0x1ac8c>
  41d5e8:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x18198>
  41d5ec:	mov	w2, w6
  41d5f0:	add	x3, x3, #0x844
  41d5f4:	mov	w1, #0x4                   	// #4
  41d5f8:	bl	4197c8 <ferror@plt+0x16e58>
  41d5fc:	ldr	x19, [x20, #296]
  41d600:	mov	x0, x25
  41d604:	bl	4397f0 <ferror@plt+0x36e80>
  41d608:	mov	w2, w0
  41d60c:	mov	x1, x25
  41d610:	mov	x0, x19
  41d614:	mov	w3, #0x1                   	// #1
  41d618:	bl	439468 <ferror@plt+0x36af8>
  41d61c:	mov	x22, x0
  41d620:	ldr	x0, [x0]
  41d624:	cbz	x0, 41dbc0 <ferror@plt+0x1b250>
  41d628:	ldr	x1, [x0, #8]
  41d62c:	cmp	x24, x1
  41d630:	b.eq	41dbb8 <ferror@plt+0x1b248>  // b.none
  41d634:	ldr	x0, [x0]
  41d638:	b	41d624 <ferror@plt+0x1acb4>
  41d63c:	mov	w0, #0x0                   	// #0
  41d640:	b	41dc10 <ferror@plt+0x1b2a0>
  41d644:	ldr	w0, [sp, #120]
  41d648:	b	41dc10 <ferror@plt+0x1b2a0>
  41d64c:	add	x21, x21, #0x2
  41d650:	b	41dc60 <ferror@plt+0x1b2f0>
  41d654:	ldrb	w0, [x28]
  41d658:	cmp	w0, #0x2f
  41d65c:	b.eq	41d728 <ferror@plt+0x1adb8>  // b.none
  41d660:	mov	x0, x28
  41d664:	mov	w1, #0x2f                  	// #47
  41d668:	bl	402760 <strchr@plt>
  41d66c:	cmp	x0, #0x0
  41d670:	mov	x21, x0
  41d674:	ccmp	x28, x0, #0x4, ne  // ne = any
  41d678:	b.eq	41d728 <ferror@plt+0x1adb8>  // b.none
  41d67c:	ldr	w5, [x23, #16]
  41d680:	sub	x6, x0, x28
  41d684:	add	x6, x6, #0x1
  41d688:	str	x6, [sp, #168]
  41d68c:	add	x5, x5, x6
  41d690:	str	x5, [sp, #136]
  41d694:	add	x0, x5, #0x2
  41d698:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41d69c:	str	x0, [sp, #128]
  41d6a0:	ldr	w2, [x23, #16]
  41d6a4:	ldr	x1, [x23, #8]
  41d6a8:	add	x7, x0, x2
  41d6ac:	stp	x2, x7, [sp, #104]
  41d6b0:	bl	4022e0 <memcpy@plt>
  41d6b4:	ldr	w0, [x23, #16]
  41d6b8:	ldr	x7, [sp, #112]
  41d6bc:	ldp	x4, x5, [sp, #128]
  41d6c0:	ldr	x6, [sp, #168]
  41d6c4:	cbz	w0, 41d6f0 <ferror@plt+0x1ad80>
  41d6c8:	ldr	x1, [x23, #8]
  41d6cc:	sub	w0, w0, #0x1
  41d6d0:	ldrb	w0, [x1, x0]
  41d6d4:	cmp	w0, #0x2f
  41d6d8:	b.eq	41d6f0 <ferror@plt+0x1ad80>  // b.none
  41d6dc:	ldr	x2, [sp, #104]
  41d6e0:	add	x5, x5, #0x1
  41d6e4:	add	x7, x7, #0x1
  41d6e8:	mov	w0, #0x2f                  	// #47
  41d6ec:	strb	w0, [x4, x2]
  41d6f0:	mov	x2, x6
  41d6f4:	mov	x1, x28
  41d6f8:	mov	x0, x7
  41d6fc:	stp	x5, x4, [sp, #104]
  41d700:	bl	4022e0 <memcpy@plt>
  41d704:	ldp	x5, x4, [sp, #104]
  41d708:	mov	x0, x20
  41d70c:	add	x28, x21, #0x1
  41d710:	strb	wzr, [x4, x5]
  41d714:	mov	x1, x4
  41d718:	ldrb	w2, [x23, #20]
  41d71c:	bl	41d164 <ferror@plt+0x1a7f4>
  41d720:	mov	x23, x0
  41d724:	b	41dc4c <ferror@plt+0x1b2dc>
  41d728:	ldr	x1, [x19, #64]
  41d72c:	ldr	x0, [x19]
  41d730:	ldr	x2, [x1, #40]
  41d734:	cbz	x2, 41d754 <ferror@plt+0x1ade4>
  41d738:	blr	x2
  41d73c:	mov	x21, x0
  41d740:	cbnz	x0, 41dc8c <ferror@plt+0x1b31c>
  41d744:	mov	w0, #0x2                   	// #2
  41d748:	str	xzr, [x19, #8]
  41d74c:	str	w0, [x19, #204]
  41d750:	b	41dcf8 <ferror@plt+0x1b388>
  41d754:	bl	41cb4c <ferror@plt+0x1a1dc>
  41d758:	b	41d73c <ferror@plt+0x1adcc>
  41d75c:	mov	x0, x21
  41d760:	mov	x21, x23
  41d764:	bl	402730 <free@plt>
  41d768:	b	41dcd0 <ferror@plt+0x1b360>
  41d76c:	ldr	x0, [x19]
  41d770:	str	x21, [x19, #8]
  41d774:	ldrb	w0, [x0]
  41d778:	cbz	w0, 41d830 <ferror@plt+0x1aec0>
  41d77c:	ldr	x0, [x20, #968]
  41d780:	cbz	x0, 41d830 <ferror@plt+0x1aec0>
  41d784:	ldr	x0, [x20, #280]
  41d788:	cbz	x0, 41d7a4 <ferror@plt+0x1ae34>
  41d78c:	ldrb	w1, [x0, #214]
  41d790:	cbz	w1, 41d79c <ferror@plt+0x1ae2c>
  41d794:	ldr	x0, [x0, #32]
  41d798:	b	41d788 <ferror@plt+0x1ae18>
  41d79c:	ldrb	w0, [x0, #212]
  41d7a0:	cbz	w0, 41d830 <ferror@plt+0x1aec0>
  41d7a4:	mov	x0, x21
  41d7a8:	bl	402330 <strlen@plt>
  41d7ac:	mov	x28, x0
  41d7b0:	add	x0, x0, #0x5
  41d7b4:	str	x0, [sp, #104]
  41d7b8:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41d7bc:	mov	x1, x21
  41d7c0:	mov	x23, x0
  41d7c4:	mov	x2, x28
  41d7c8:	bl	4022e0 <memcpy@plt>
  41d7cc:	add	x0, x23, x28
  41d7d0:	str	x0, [sp, #136]
  41d7d4:	ldp	x1, x0, [sp, #136]
  41d7d8:	ldr	w0, [x0]
  41d7dc:	str	w0, [x23, x28]
  41d7e0:	ldr	x0, [sp, #144]
  41d7e4:	ldrb	w0, [x0, #4]
  41d7e8:	strb	w0, [x1, #4]
  41d7ec:	add	x1, sp, #0xb0
  41d7f0:	mov	x0, x23
  41d7f4:	bl	44a818 <_obstack_memory_used@@Base+0x109b0>
  41d7f8:	cbnz	w0, 41d828 <ferror@plt+0x1aeb8>
  41d7fc:	ldr	w0, [sp, #192]
  41d800:	and	w0, w0, #0xf000
  41d804:	cmp	w0, #0x4, lsl #12
  41d808:	b.eq	41d928 <ferror@plt+0x1afb8>  // b.none
  41d80c:	mov	x1, x19
  41d810:	mov	x2, x23
  41d814:	mov	x0, x20
  41d818:	bl	41cf1c <ferror@plt+0x1a5ac>
  41d81c:	and	w1, w0, #0xff
  41d820:	cbnz	w1, 41dbb0 <ferror@plt+0x1b240>
  41d824:	mov	w26, #0x1                   	// #1
  41d828:	mov	x0, x23
  41d82c:	bl	402730 <free@plt>
  41d830:	mov	x0, x19
  41d834:	bl	41ce60 <ferror@plt+0x1a4f0>
  41d838:	tst	w0, #0xff
  41d83c:	b.ne	41d860 <ferror@plt+0x1aef0>  // b.any
  41d840:	ldr	w0, [x19, #204]
  41d844:	cmp	w0, #0x2
  41d848:	b.eq	41da04 <ferror@plt+0x1b094>  // b.none
  41d84c:	mov	w3, w27
  41d850:	mov	w2, #0x0                   	// #0
  41d854:	mov	x1, x19
  41d858:	mov	x0, x20
  41d85c:	bl	41d000 <ferror@plt+0x1a690>
  41d860:	ldr	x0, [x20, #280]
  41d864:	mov	x21, #0x0                   	// #0
  41d868:	str	x0, [x19, #32]
  41d86c:	str	x19, [x20, #280]
  41d870:	mov	x0, x20
  41d874:	bl	41d104 <ferror@plt+0x1a794>
  41d878:	ldr	x1, [x22]
  41d87c:	stp	x1, x24, [x0]
  41d880:	ldr	x1, [x20, #40]
  41d884:	ldr	w1, [x1, #56]
  41d888:	str	w1, [x0, #16]
  41d88c:	str	x19, [x0, #24]
  41d890:	str	x0, [x22]
  41d894:	ldr	w0, [sp, #152]
  41d898:	cbz	w0, 41d8dc <ferror@plt+0x1af6c>
  41d89c:	ldr	x0, [x20, #208]
  41d8a0:	cmp	x0, x24
  41d8a4:	b.eq	41d8dc <ferror@plt+0x1af6c>  // b.none
  41d8a8:	cmp	x0, x21
  41d8ac:	b.eq	41d8dc <ferror@plt+0x1af6c>  // b.none
  41d8b0:	mov	x0, x20
  41d8b4:	bl	41d104 <ferror@plt+0x1a794>
  41d8b8:	ldr	x1, [x22]
  41d8bc:	str	x1, [x0]
  41d8c0:	ldr	x1, [x20, #208]
  41d8c4:	str	x1, [x0, #8]
  41d8c8:	ldr	x1, [x20, #40]
  41d8cc:	ldr	w1, [x1, #56]
  41d8d0:	str	w1, [x0, #16]
  41d8d4:	str	x19, [x0, #24]
  41d8d8:	str	x0, [x22]
  41d8dc:	ldr	w0, [sp, #124]
  41d8e0:	cbz	w0, 41dd5c <ferror@plt+0x1b3ec>
  41d8e4:	ldr	x0, [x20, #200]
  41d8e8:	cmp	x0, x24
  41d8ec:	b.eq	41dd5c <ferror@plt+0x1b3ec>  // b.none
  41d8f0:	cmp	x0, x21
  41d8f4:	b.eq	41dd5c <ferror@plt+0x1b3ec>  // b.none
  41d8f8:	mov	x0, x20
  41d8fc:	bl	41d104 <ferror@plt+0x1a794>
  41d900:	ldr	x1, [x22]
  41d904:	str	x1, [x0]
  41d908:	ldr	x1, [x20, #200]
  41d90c:	str	x1, [x0, #8]
  41d910:	ldr	x1, [x20, #40]
  41d914:	ldr	w1, [x1, #56]
  41d918:	str	w1, [x0, #16]
  41d91c:	str	x19, [x0, #24]
  41d920:	str	x0, [x22]
  41d924:	b	41dd5c <ferror@plt+0x1b3ec>
  41d928:	mov	x0, x23
  41d92c:	bl	4023e0 <opendir@plt>
  41d930:	str	x0, [sp, #112]
  41d934:	cbz	x0, 41d824 <ferror@plt+0x1aeb4>
  41d938:	ldr	x1, [sp, #136]
  41d93c:	mov	w0, #0x2f                  	// #47
  41d940:	ldr	x26, [sp, #104]
  41d944:	strb	w0, [x1, #4]
  41d948:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x1c198>
  41d94c:	add	x0, x0, #0x93b
  41d950:	str	x0, [sp, #136]
  41d954:	ldr	x0, [sp, #112]
  41d958:	bl	402590 <readdir@plt>
  41d95c:	cbz	x0, 41d9fc <ferror@plt+0x1b08c>
  41d960:	ldr	x1, [sp, #160]
  41d964:	add	x28, x0, #0x13
  41d968:	mov	x0, x28
  41d96c:	bl	4026d0 <strcmp@plt>
  41d970:	cbz	w0, 41d954 <ferror@plt+0x1afe4>
  41d974:	ldr	x1, [sp, #136]
  41d978:	mov	x0, x28
  41d97c:	bl	4026d0 <strcmp@plt>
  41d980:	cbz	w0, 41d954 <ferror@plt+0x1afe4>
  41d984:	mov	x0, x28
  41d988:	bl	402330 <strlen@plt>
  41d98c:	add	x2, x0, #0x1
  41d990:	ldr	x0, [sp, #104]
  41d994:	add	x0, x0, x2
  41d998:	cmp	x0, x26
  41d99c:	b.ls	41d9c0 <ferror@plt+0x1b050>  // b.plast
  41d9a0:	add	x26, x26, #0x40
  41d9a4:	mov	x0, x23
  41d9a8:	add	x26, x2, x26
  41d9ac:	str	x2, [sp, #168]
  41d9b0:	mov	x1, x26
  41d9b4:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  41d9b8:	ldr	x2, [sp, #168]
  41d9bc:	mov	x23, x0
  41d9c0:	ldr	x0, [sp, #104]
  41d9c4:	mov	x1, x28
  41d9c8:	add	x0, x23, x0
  41d9cc:	bl	4022e0 <memcpy@plt>
  41d9d0:	mov	x1, x19
  41d9d4:	mov	x2, x23
  41d9d8:	mov	x0, x20
  41d9dc:	bl	41cf1c <ferror@plt+0x1a5ac>
  41d9e0:	ands	w1, w0, #0xff
  41d9e4:	b.eq	41d954 <ferror@plt+0x1afe4>  // b.none
  41d9e8:	ldr	x0, [sp, #112]
  41d9ec:	str	w1, [sp, #104]
  41d9f0:	bl	4025d0 <closedir@plt>
  41d9f4:	ldr	w1, [sp, #104]
  41d9f8:	b	41d820 <ferror@plt+0x1aeb0>
  41d9fc:	mov	w1, #0x0                   	// #0
  41da00:	b	41d9e8 <ferror@plt+0x1b078>
  41da04:	add	x23, x20, #0x148
  41da08:	mov	x0, x21
  41da0c:	bl	402330 <strlen@plt>
  41da10:	add	x1, x0, #0x1
  41da14:	mov	x28, x0
  41da18:	ldp	x2, x0, [x23, #24]
  41da1c:	sub	x0, x0, x2
  41da20:	cmp	x0, x1
  41da24:	b.cs	41da30 <ferror@plt+0x1b0c0>  // b.hs, b.nlast
  41da28:	mov	x0, x23
  41da2c:	bl	439ca4 <_obstack_newchunk@@Base>
  41da30:	ldr	x0, [x23, #24]
  41da34:	mov	x2, x28
  41da38:	mov	x1, x21
  41da3c:	bl	4022e0 <memcpy@plt>
  41da40:	ldr	x1, [x23, #24]
  41da44:	add	x0, x1, x28
  41da48:	add	x0, x0, #0x1
  41da4c:	str	x0, [x23, #24]
  41da50:	strb	wzr, [x1, x28]
  41da54:	ldp	x28, x2, [x23, #16]
  41da58:	cmp	x28, x2
  41da5c:	b.ne	41da6c <ferror@plt+0x1b0fc>  // b.any
  41da60:	ldrb	w0, [x23, #80]
  41da64:	orr	w0, w0, #0x2
  41da68:	strb	w0, [x23, #80]
  41da6c:	ldr	x0, [x23, #48]
  41da70:	ldr	x1, [x23, #32]
  41da74:	add	x2, x2, x0
  41da78:	bic	x0, x2, x0
  41da7c:	ldr	x2, [x23, #8]
  41da80:	sub	x3, x0, x2
  41da84:	sub	x2, x1, x2
  41da88:	cmp	x3, x2
  41da8c:	csel	x0, x0, x1, ls  // ls = plast
  41da90:	stp	x0, x0, [x23, #16]
  41da94:	mov	x0, x21
  41da98:	bl	402730 <free@plt>
  41da9c:	ldr	w2, [sp, #128]
  41daa0:	mov	x1, x28
  41daa4:	ldr	x0, [x20, #320]
  41daa8:	mov	w3, #0x1                   	// #1
  41daac:	bl	439468 <ferror@plt+0x36af8>
  41dab0:	str	x28, [x0]
  41dab4:	ldr	x0, [x19]
  41dab8:	str	x0, [x19, #8]
  41dabc:	b	41dcf8 <ferror@plt+0x1b388>
  41dac0:	ldr	x0, [x19, #8]
  41dac4:	bl	402730 <free@plt>
  41dac8:	ldr	x0, [x19]
  41dacc:	str	x0, [x19, #8]
  41dad0:	cbz	w26, 41db0c <ferror@plt+0x1b19c>
  41dad4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41dad8:	add	x2, x2, #0x860
  41dadc:	mov	w1, #0x3                   	// #3
  41dae0:	mov	x0, x20
  41dae4:	bl	419440 <ferror@plt+0x16ad0>
  41dae8:	mov	x0, x20
  41daec:	bl	41865c <ferror@plt+0x15cec>
  41daf0:	ldrb	w0, [x0, #84]
  41daf4:	cbnz	w0, 41db0c <ferror@plt+0x1b19c>
  41daf8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41dafc:	mov	x0, x20
  41db00:	add	x2, x2, #0x898
  41db04:	mov	w1, #0x3                   	// #3
  41db08:	bl	419440 <ferror@plt+0x16ad0>
  41db0c:	ldr	w0, [sp, #120]
  41db10:	cbz	w0, 41db44 <ferror@plt+0x1b1d4>
  41db14:	ldr	x0, [x19]
  41db18:	bl	402730 <free@plt>
  41db1c:	mov	x0, x19
  41db20:	bl	402730 <free@plt>
  41db24:	ldr	x0, [x22]
  41db28:	cbnz	x0, 41db3c <ferror@plt+0x1b1cc>
  41db2c:	str	x19, [x22]
  41db30:	mov	x1, x22
  41db34:	ldr	x0, [x20, #296]
  41db38:	bl	4396a8 <ferror@plt+0x36d38>
  41db3c:	mov	x19, #0x0                   	// #0
  41db40:	b	41dd5c <ferror@plt+0x1b3ec>
  41db44:	ldr	w2, [sp, #156]
  41db48:	mov	w3, w27
  41db4c:	b	41d854 <ferror@plt+0x1aee4>
  41db50:	ldr	x1, [x20, #208]
  41db54:	cmp	x0, x1
  41db58:	b.eq	41db8c <ferror@plt+0x1b21c>  // b.none
  41db5c:	ldr	x1, [x20, #200]
  41db60:	cmp	x0, x1
  41db64:	b.ne	41dc3c <ferror@plt+0x1b2cc>  // b.any
  41db68:	mov	w1, #0x1                   	// #1
  41db6c:	str	w1, [sp, #124]
  41db70:	ldr	x23, [x22]
  41db74:	cbz	x23, 41dc3c <ferror@plt+0x1b2cc>
  41db78:	ldr	x21, [x23, #8]
  41db7c:	cmp	x0, x21
  41db80:	b.eq	41db98 <ferror@plt+0x1b228>  // b.none
  41db84:	ldr	x23, [x23]
  41db88:	b	41db74 <ferror@plt+0x1b204>
  41db8c:	mov	w1, #0x1                   	// #1
  41db90:	str	w1, [sp, #152]
  41db94:	b	41db70 <ferror@plt+0x1b200>
  41db98:	ldr	x0, [x19]
  41db9c:	bl	402730 <free@plt>
  41dba0:	mov	x0, x19
  41dba4:	bl	402730 <free@plt>
  41dba8:	ldr	x19, [x23, #24]
  41dbac:	b	41d870 <ferror@plt+0x1af00>
  41dbb0:	str	x23, [x19, #16]
  41dbb4:	b	41d860 <ferror@plt+0x1aef0>
  41dbb8:	ldr	x19, [x0, #24]
  41dbbc:	b	41dd5c <ferror@plt+0x1b3ec>
  41dbc0:	mov	x1, #0xd8                  	// #216
  41dbc4:	mov	x0, #0x1                   	// #1
  41dbc8:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  41dbcc:	mov	x19, x0
  41dbd0:	ldr	x0, [x20]
  41dbd4:	str	x24, [x19, #64]
  41dbd8:	cmp	x0, #0x0
  41dbdc:	cset	w0, eq  // eq = none
  41dbe0:	strb	w0, [x19, #212]
  41dbe4:	mov	w0, #0xffffffff            	// #-1
  41dbe8:	str	w0, [x19, #200]
  41dbec:	mov	x0, x25
  41dbf0:	bl	43a064 <_obstack_memory_used@@Base+0x1fc>
  41dbf4:	str	x0, [x19]
  41dbf8:	ldr	w0, [sp, #120]
  41dbfc:	cbnz	w0, 41d644 <ferror@plt+0x1acd4>
  41dc00:	ldr	x0, [x20]
  41dc04:	cbz	x0, 41d63c <ferror@plt+0x1accc>
  41dc08:	ldr	x0, [x0, #80]
  41dc0c:	ldrb	w0, [x0, #214]
  41dc10:	strb	w0, [x19, #214]
  41dc14:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  41dc18:	add	x0, x0, #0x8bf
  41dc1c:	str	wzr, [sp, #124]
  41dc20:	str	x0, [sp, #144]
  41dc24:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x1c198>
  41dc28:	add	x0, x0, #0x93c
  41dc2c:	str	wzr, [sp, #152]
  41dc30:	str	x0, [sp, #160]
  41dc34:	mov	w26, #0x0                   	// #0
  41dc38:	cbnz	w21, 41d860 <ferror@plt+0x1aef0>
  41dc3c:	ldrb	w0, [x20, #1145]
  41dc40:	cbz	w0, 41d728 <ferror@plt+0x1adb8>
  41dc44:	ldr	x28, [x19]
  41dc48:	ldr	x23, [x19, #64]
  41dc4c:	ldr	x0, [x23, #32]
  41dc50:	cbnz	x0, 41dc5c <ferror@plt+0x1b2ec>
  41dc54:	mov	x0, x23
  41dc58:	bl	41cca8 <ferror@plt+0x1a338>
  41dc5c:	mov	x21, #0x0                   	// #0
  41dc60:	ldr	x0, [x23, #32]
  41dc64:	ldr	x0, [x0, x21, lsl #3]
  41dc68:	cbz	x0, 41d654 <ferror@plt+0x1ace4>
  41dc6c:	mov	x1, x28
  41dc70:	bl	438b04 <ferror@plt+0x36194>
  41dc74:	cbnz	w0, 41d64c <ferror@plt+0x1acdc>
  41dc78:	ldr	x0, [x23, #32]
  41dc7c:	add	x2, x21, #0x1
  41dc80:	ldr	x0, [x0, x2, lsl #3]
  41dc84:	bl	43a064 <_obstack_memory_used@@Base+0x1fc>
  41dc88:	mov	x21, x0
  41dc8c:	ldrb	w0, [x20, #1245]
  41dc90:	cbz	w0, 41dcd0 <ferror@plt+0x1b360>
  41dc94:	ldr	x0, [x19, #64]
  41dc98:	ldrb	w0, [x0, #20]
  41dc9c:	cbz	w0, 41dcd0 <ferror@plt+0x1b360>
  41dca0:	mov	x0, x21
  41dca4:	bl	439b1c <ferror@plt+0x371ac>
  41dca8:	mov	x23, x0
  41dcac:	cbz	x0, 41dcc8 <ferror@plt+0x1b358>
  41dcb0:	bl	402330 <strlen@plt>
  41dcb4:	mov	x28, x0
  41dcb8:	mov	x0, x21
  41dcbc:	bl	402330 <strlen@plt>
  41dcc0:	cmp	x28, x0
  41dcc4:	b.cc	41d75c <ferror@plt+0x1adec>  // b.lo, b.ul, b.last
  41dcc8:	mov	x0, x23
  41dccc:	bl	402730 <free@plt>
  41dcd0:	mov	x0, x21
  41dcd4:	bl	4397f0 <ferror@plt+0x36e80>
  41dcd8:	mov	w2, w0
  41dcdc:	str	w0, [sp, #128]
  41dce0:	ldr	x0, [x20, #320]
  41dce4:	mov	x1, x21
  41dce8:	bl	439350 <ferror@plt+0x369e0>
  41dcec:	cbz	x0, 41d76c <ferror@plt+0x1adfc>
  41dcf0:	mov	w0, #0x2                   	// #2
  41dcf4:	str	w0, [x19, #204]
  41dcf8:	ldr	x0, [x19, #64]
  41dcfc:	ldr	x0, [x0]
  41dd00:	str	x0, [x19, #64]
  41dd04:	cbnz	x0, 41db50 <ferror@plt+0x1b1e0>
  41dd08:	ldr	x3, [x20, #984]
  41dd0c:	cbz	x3, 41dad0 <ferror@plt+0x1b160>
  41dd10:	add	x2, x19, #0x40
  41dd14:	mov	x1, x25
  41dd18:	mov	x0, x20
  41dd1c:	blr	x3
  41dd20:	str	x0, [x19, #8]
  41dd24:	cbz	x0, 41dac8 <ferror@plt+0x1b158>
  41dd28:	mov	x0, x19
  41dd2c:	bl	41ce60 <ferror@plt+0x1a4f0>
  41dd30:	tst	w0, #0xff
  41dd34:	b.eq	41dac0 <ferror@plt+0x1b150>  // b.none
  41dd38:	ldr	x0, [x20, #280]
  41dd3c:	str	x0, [x19, #32]
  41dd40:	str	x19, [x20, #280]
  41dd44:	ldr	x0, [x22]
  41dd48:	cbnz	x0, 41dd5c <ferror@plt+0x1b3ec>
  41dd4c:	str	x19, [x22]
  41dd50:	mov	x1, x22
  41dd54:	ldr	x0, [x20, #296]
  41dd58:	bl	4396a8 <ferror@plt+0x36d38>
  41dd5c:	mov	x0, x19
  41dd60:	ldp	x19, x20, [sp, #16]
  41dd64:	ldp	x21, x22, [sp, #32]
  41dd68:	ldp	x23, x24, [sp, #48]
  41dd6c:	ldp	x25, x26, [sp, #64]
  41dd70:	ldp	x27, x28, [sp, #80]
  41dd74:	ldp	x29, x30, [sp], #304
  41dd78:	ret
  41dd7c:	stp	x29, x30, [sp, #-160]!
  41dd80:	mov	x29, sp
  41dd84:	stp	x23, x24, [sp, #48]
  41dd88:	ldrb	w23, [x1, #210]
  41dd8c:	stp	x19, x20, [sp, #16]
  41dd90:	stp	x21, x22, [sp, #32]
  41dd94:	stp	x25, x26, [sp, #64]
  41dd98:	stp	x27, x28, [sp, #80]
  41dd9c:	cbz	w23, 41dda8 <ferror@plt+0x1b438>
  41dda0:	mov	w23, #0x0                   	// #0
  41dda4:	b	41ddf4 <ferror@plt+0x1b484>
  41dda8:	mov	x20, x0
  41ddac:	mov	x19, x1
  41ddb0:	and	w25, w2, #0xff
  41ddb4:	mov	w26, w3
  41ddb8:	cbnz	w25, 41de14 <ferror@plt+0x1b4a4>
  41ddbc:	ldr	x0, [x19, #56]
  41ddc0:	cbnz	x0, 41de2c <ferror@plt+0x1b4bc>
  41ddc4:	ldr	x1, [x19, #16]
  41ddc8:	cbz	x1, 41de38 <ferror@plt+0x1b4c8>
  41ddcc:	ldr	w2, [x19, #200]
  41ddd0:	mov	x0, x20
  41ddd4:	ldr	x3, [x19, #8]
  41ddd8:	ldr	x4, [x20, #976]
  41dddc:	blr	x4
  41dde0:	mov	w0, #0xffffffff            	// #-1
  41dde4:	str	w0, [x19, #200]
  41dde8:	ldr	x0, [x19, #16]
  41ddec:	bl	402730 <free@plt>
  41ddf0:	str	xzr, [x19, #16]
  41ddf4:	mov	w0, w23
  41ddf8:	ldp	x19, x20, [sp, #16]
  41ddfc:	ldp	x21, x22, [sp, #32]
  41de00:	ldp	x23, x24, [sp, #48]
  41de04:	ldp	x25, x26, [sp, #64]
  41de08:	ldp	x27, x28, [sp, #80]
  41de0c:	ldp	x29, x30, [sp], #160
  41de10:	ret
  41de14:	mov	w0, #0x1                   	// #1
  41de18:	strb	w0, [x20, #417]
  41de1c:	strb	w0, [x1, #210]
  41de20:	ldrh	w0, [x1, #208]
  41de24:	cbz	w0, 41ddbc <ferror@plt+0x1b44c>
  41de28:	b	41dda0 <ferror@plt+0x1b430>
  41de2c:	ldrb	w0, [x0, #18]
  41de30:	tbz	w0, #1, 41ddc4 <ferror@plt+0x1b454>
  41de34:	b	41dda0 <ferror@plt+0x1b430>
  41de38:	mov	w2, w26
  41de3c:	mov	x1, x19
  41de40:	mov	x0, x20
  41de44:	bl	41d3d8 <ferror@plt+0x1aa68>
  41de48:	ands	w24, w0, #0xff
  41de4c:	b.eq	41dda0 <ferror@plt+0x1b430>  // b.none
  41de50:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  41de54:	ldr	x1, [x0, #1952]
  41de58:	cbz	x1, 41deac <ferror@plt+0x1b53c>
  41de5c:	cbnz	w25, 41de68 <ferror@plt+0x1b4f8>
  41de60:	ldrb	w0, [x1, #8]
  41de64:	cbz	w0, 41deac <ferror@plt+0x1b53c>
  41de68:	ldr	x0, [x19, #120]
  41de6c:	str	x0, [sp, #120]
  41de70:	adrp	x4, 41d000 <ferror@plt+0x1a690>
  41de74:	add	x0, sp, #0x78
  41de78:	ldr	x2, [x1], #16
  41de7c:	add	x4, x4, #0x358
  41de80:	mov	x3, #0x20                  	// #32
  41de84:	strb	wzr, [sp, #144]
  41de88:	strb	w25, [sp, #145]
  41de8c:	str	x19, [sp, #152]
  41de90:	bl	402560 <bsearch@plt>
  41de94:	cbz	x0, 41deac <ferror@plt+0x1b53c>
  41de98:	cbnz	w25, 41dda0 <ferror@plt+0x1b430>
  41de9c:	mov	w0, #0x1                   	// #1
  41dea0:	strb	w0, [x20, #417]
  41dea4:	strb	w0, [x19, #210]
  41dea8:	b	41dda0 <ferror@plt+0x1b430>
  41deac:	ldrb	w0, [x20, #417]
  41deb0:	cbz	w0, 41dfd0 <ferror@plt+0x1b660>
  41deb4:	ldr	x21, [x20, #280]
  41deb8:	mov	w27, #0xffffffff            	// #-1
  41debc:	cbz	x21, 41dfd0 <ferror@plt+0x1b660>
  41dec0:	cmp	x19, x21
  41dec4:	b.ne	41ded0 <ferror@plt+0x1b560>  // b.any
  41dec8:	ldr	x21, [x21, #32]
  41decc:	b	41debc <ferror@plt+0x1b54c>
  41ded0:	cbnz	w25, 41dedc <ferror@plt+0x1b56c>
  41ded4:	ldrb	w0, [x21, #210]
  41ded8:	cbz	w0, 41dec8 <ferror@plt+0x1b558>
  41dedc:	ldr	w0, [x21, #204]
  41dee0:	cbnz	w0, 41dec8 <ferror@plt+0x1b558>
  41dee4:	ldr	x0, [x19, #160]
  41dee8:	ldr	x1, [x21, #160]
  41deec:	cmp	x1, x0
  41def0:	b.ne	41dec8 <ferror@plt+0x1b558>  // b.any
  41def4:	ldr	x0, [x19, #120]
  41def8:	ldr	x1, [x21, #120]
  41defc:	cmp	x1, x0
  41df00:	b.ne	41dec8 <ferror@plt+0x1b558>  // b.any
  41df04:	ldr	x0, [x21, #40]
  41df08:	cbz	x0, 41dfc0 <ferror@plt+0x1b650>
  41df0c:	ldrb	w0, [x21, #213]
  41df10:	cbnz	w0, 41dfc0 <ferror@plt+0x1b650>
  41df14:	ldr	x2, [x21, #64]
  41df18:	mov	x1, #0xd8                  	// #216
  41df1c:	mov	x0, #0x1                   	// #1
  41df20:	str	x2, [sp, #104]
  41df24:	ldr	x28, [x21]
  41df28:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  41df2c:	mov	x22, x0
  41df30:	ldr	x0, [x20]
  41df34:	ldr	x2, [sp, #104]
  41df38:	cmp	x0, #0x0
  41df3c:	cset	w0, eq  // eq = none
  41df40:	str	x2, [x22, #64]
  41df44:	str	w27, [x22, #200]
  41df48:	strb	w0, [x22, #212]
  41df4c:	mov	x0, x28
  41df50:	bl	43a064 <_obstack_memory_used@@Base+0x1fc>
  41df54:	str	x0, [x22]
  41df58:	ldr	x0, [x21, #8]
  41df5c:	str	x0, [x22, #8]
  41df60:	mov	w2, w26
  41df64:	mov	x1, x22
  41df68:	mov	x0, x20
  41df6c:	bl	41d3d8 <ferror@plt+0x1aa68>
  41df70:	ands	w28, w0, #0xff
  41df74:	b.eq	41df9c <ferror@plt+0x1b62c>  // b.none
  41df78:	ldr	x0, [x19, #120]
  41df7c:	ldr	x2, [x22, #120]
  41df80:	cmp	x2, x0
  41df84:	b.ne	41dfc8 <ferror@plt+0x1b658>  // b.any
  41df88:	ldr	x1, [x19, #40]
  41df8c:	ldr	x0, [x22, #40]
  41df90:	bl	402690 <memcmp@plt>
  41df94:	cmp	w0, #0x0
  41df98:	cset	w28, eq  // eq = none
  41df9c:	ldr	x0, [x21, #40]
  41dfa0:	cbz	x0, 41dfb8 <ferror@plt+0x1b648>
  41dfa4:	ldrb	w0, [x21, #213]
  41dfa8:	cbnz	w0, 41dfb8 <ferror@plt+0x1b648>
  41dfac:	str	xzr, [x22, #8]
  41dfb0:	mov	x0, x22
  41dfb4:	bl	41ca44 <ferror@plt+0x1a0d4>
  41dfb8:	cbz	w28, 41dec8 <ferror@plt+0x1b558>
  41dfbc:	b	41dda0 <ferror@plt+0x1b430>
  41dfc0:	mov	x22, x21
  41dfc4:	b	41df60 <ferror@plt+0x1b5f0>
  41dfc8:	mov	w28, #0x0                   	// #0
  41dfcc:	b	41df9c <ferror@plt+0x1b62c>
  41dfd0:	ldr	x1, [x20]
  41dfd4:	cbz	x1, 41e09c <ferror@plt+0x1b72c>
  41dfd8:	ldr	x0, [x19, #64]
  41dfdc:	cbz	x0, 41e09c <ferror@plt+0x1b72c>
  41dfe0:	ldrb	w4, [x1, #106]
  41dfe4:	ldrb	w21, [x0, #20]
  41dfe8:	cmp	w21, w4, uxtb
  41dfec:	csel	w21, w21, w4, cs  // cs = hs, nlast
  41dff0:	and	w21, w21, #0xff
  41dff4:	cmp	w21, #0x0
  41dff8:	ldr	w1, [x20, #1200]
  41dffc:	cset	w0, ne  // ne = any
  41e000:	cmp	w1, w0
  41e004:	b.le	41e02c <ferror@plt+0x1b6bc>
  41e008:	ldrh	w0, [x19, #208]
  41e00c:	cbnz	w0, 41e02c <ferror@plt+0x1b6bc>
  41e010:	ldrb	w0, [x19, #212]
  41e014:	cbz	w0, 41e020 <ferror@plt+0x1b6b0>
  41e018:	ldrb	w0, [x20, #1206]
  41e01c:	cbnz	w0, 41e02c <ferror@plt+0x1b6bc>
  41e020:	ldr	x1, [x19, #8]
  41e024:	ldr	x0, [x20, #712]
  41e028:	bl	429060 <ferror@plt+0x266f0>
  41e02c:	ldrh	w0, [x19, #208]
  41e030:	strb	wzr, [x19, #213]
  41e034:	add	w0, w0, #0x1
  41e038:	strh	w0, [x19, #208]
  41e03c:	ldr	x1, [x19, #40]
  41e040:	ldrb	w0, [x20, #1155]
  41e044:	ldr	x2, [x19, #120]
  41e048:	cbz	w0, 41e054 <ferror@plt+0x1b6e4>
  41e04c:	ldrb	w23, [x20, #1244]
  41e050:	eor	w23, w23, #0x1
  41e054:	mov	w3, w23
  41e058:	mov	x0, x20
  41e05c:	bl	4186b8 <ferror@plt+0x15d48>
  41e060:	strb	w21, [x0, #106]
  41e064:	mov	w4, w21
  41e068:	mov	w23, w24
  41e06c:	ldr	x2, [x19, #8]
  41e070:	mov	w3, #0x1                   	// #1
  41e074:	ldr	x1, [x19, #48]
  41e078:	str	x1, [x0, #40]
  41e07c:	str	x19, [x0, #80]
  41e080:	mov	w0, #0x1                   	// #1
  41e084:	str	xzr, [x20, #424]
  41e088:	mov	w1, #0x0                   	// #0
  41e08c:	strb	w0, [x20, #440]
  41e090:	mov	x0, x20
  41e094:	bl	417f18 <ferror@plt+0x155a8>
  41e098:	b	41ddf4 <ferror@plt+0x1b484>
  41e09c:	mov	w21, #0x0                   	// #0
  41e0a0:	b	41dff4 <ferror@plt+0x1b684>
  41e0a4:	mov	w2, #0x1                   	// #1
  41e0a8:	strb	w2, [x0, #417]
  41e0ac:	strb	w2, [x1, #210]
  41e0b0:	ret
  41e0b4:	stp	x29, x30, [sp, #-64]!
  41e0b8:	cmp	w3, #0x3
  41e0bc:	mov	x29, sp
  41e0c0:	stp	x19, x20, [sp, #16]
  41e0c4:	mov	x19, x0
  41e0c8:	mov	w20, w3
  41e0cc:	stp	x21, x22, [sp, #32]
  41e0d0:	mov	x21, x1
  41e0d4:	mov	w22, w4
  41e0d8:	stp	x23, x24, [sp, #48]
  41e0dc:	mov	w24, w2
  41e0e0:	b.ne	41e0fc <ferror@plt+0x1b78c>  // b.any
  41e0e4:	ldr	x1, [x19, #488]
  41e0e8:	ldr	x0, [x0, #448]
  41e0ec:	ldr	x1, [x1, #16]
  41e0f0:	cmp	x0, x1
  41e0f4:	b.eq	41e0fc <ferror@plt+0x1b78c>  // b.none
  41e0f8:	stur	wzr, [x0, #-24]
  41e0fc:	mov	w2, w24
  41e100:	mov	w3, w20
  41e104:	mov	x1, x21
  41e108:	mov	x0, x19
  41e10c:	bl	41d230 <ferror@plt+0x1a8c0>
  41e110:	mov	x2, x0
  41e114:	cbnz	x0, 41e130 <ferror@plt+0x1b7c0>
  41e118:	mov	w0, #0x0                   	// #0
  41e11c:	ldp	x19, x20, [sp, #16]
  41e120:	ldp	x21, x22, [sp, #32]
  41e124:	ldp	x23, x24, [sp, #48]
  41e128:	ldp	x29, x30, [sp], #64
  41e12c:	ret
  41e130:	cmp	w20, #0x4
  41e134:	mov	x1, x21
  41e138:	cset	w23, eq  // eq = none
  41e13c:	mov	w6, w22
  41e140:	mov	w5, w23
  41e144:	mov	w4, w24
  41e148:	mov	x0, x19
  41e14c:	mov	w3, #0x0                   	// #0
  41e150:	bl	41d5a8 <ferror@plt+0x1ac38>
  41e154:	cmp	x0, #0x0
  41e158:	mov	x21, x0
  41e15c:	csel	w23, w23, wzr, eq  // eq = none
  41e160:	cbnz	w23, 41e118 <ferror@plt+0x1b7a8>
  41e164:	ldr	x0, [x0, #16]
  41e168:	cbz	x0, 41e1ac <ferror@plt+0x1b83c>
  41e16c:	mov	w23, #0x0                   	// #0
  41e170:	cmp	w20, #0x2
  41e174:	mov	x1, x21
  41e178:	cset	w2, eq  // eq = none
  41e17c:	mov	w3, w22
  41e180:	mov	x0, x19
  41e184:	bl	41dd7c <ferror@plt+0x1b40c>
  41e188:	and	w0, w0, #0xff
  41e18c:	eor	w1, w0, #0x1
  41e190:	tst	w23, w1
  41e194:	b.eq	41e11c <ferror@plt+0x1b7ac>  // b.none
  41e198:	ldr	x1, [x19, #40]
  41e19c:	ldr	w0, [x1, #56]
  41e1a0:	add	w0, w0, #0x1
  41e1a4:	str	w0, [x1, #56]
  41e1a8:	b	41e118 <ferror@plt+0x1b7a8>
  41e1ac:	ldr	w0, [x21, #204]
  41e1b0:	cbnz	w0, 41e16c <ferror@plt+0x1b7fc>
  41e1b4:	sub	w0, w20, #0x3
  41e1b8:	cmp	w0, #0x1
  41e1bc:	b.ls	41e16c <ferror@plt+0x1b7fc>  // b.plast
  41e1c0:	ldr	x0, [x19, #40]
  41e1c4:	ldr	w1, [x0, #56]
  41e1c8:	bl	423bb8 <ferror@plt+0x21248>
  41e1cc:	mov	w23, w0
  41e1d0:	ldr	x0, [x19, #40]
  41e1d4:	mov	w1, w22
  41e1d8:	bl	423bb8 <ferror@plt+0x21248>
  41e1dc:	cmp	w23, w0
  41e1e0:	b.le	41e16c <ferror@plt+0x1b7fc>
  41e1e4:	ldr	x1, [x19, #40]
  41e1e8:	mov	w23, #0x1                   	// #1
  41e1ec:	ldr	w0, [x1, #56]
  41e1f0:	sub	w0, w0, #0x1
  41e1f4:	str	w0, [x1, #56]
  41e1f8:	b	41e170 <ferror@plt+0x1b800>
  41e1fc:	stp	x29, x30, [sp, #-32]!
  41e200:	mov	x29, sp
  41e204:	stp	x19, x20, [sp, #16]
  41e208:	mov	x19, x1
  41e20c:	ldr	x20, [x0, #296]
  41e210:	mov	x0, x1
  41e214:	bl	4397f0 <ferror@plt+0x36e80>
  41e218:	mov	w2, w0
  41e21c:	mov	x1, x19
  41e220:	mov	x0, x20
  41e224:	bl	439350 <ferror@plt+0x369e0>
  41e228:	cbz	x0, 41e248 <ferror@plt+0x1b8d8>
  41e22c:	ldr	x1, [x0, #8]
  41e230:	cbz	x1, 41e240 <ferror@plt+0x1b8d0>
  41e234:	ldr	x1, [x0, #24]
  41e238:	ldr	w1, [x1, #204]
  41e23c:	cbz	w1, 41e248 <ferror@plt+0x1b8d8>
  41e240:	ldr	x0, [x0]
  41e244:	b	41e228 <ferror@plt+0x1b8b8>
  41e248:	cmp	x0, #0x0
  41e24c:	cset	w0, ne  // ne = any
  41e250:	ldp	x19, x20, [sp, #16]
  41e254:	ldp	x29, x30, [sp], #32
  41e258:	ret
  41e25c:	stp	x29, x30, [sp, #-48]!
  41e260:	mov	x29, sp
  41e264:	stp	x21, x22, [sp, #32]
  41e268:	mov	x21, x0
  41e26c:	ldr	x22, [x0, #296]
  41e270:	mov	x0, x1
  41e274:	stp	x19, x20, [sp, #16]
  41e278:	mov	x19, x1
  41e27c:	mov	w20, w2
  41e280:	bl	4397f0 <ferror@plt+0x36e80>
  41e284:	mov	w2, w0
  41e288:	mov	x1, x19
  41e28c:	mov	x0, x22
  41e290:	bl	439350 <ferror@plt+0x369e0>
  41e294:	mov	x19, x0
  41e298:	tbz	w20, #31, 41e2ac <ferror@plt+0x1b93c>
  41e29c:	ldr	x0, [x21, #40]
  41e2a0:	mov	w1, w20
  41e2a4:	bl	422f78 <ferror@plt+0x20608>
  41e2a8:	mov	w20, w0
  41e2ac:	cbz	x19, 41e2d8 <ferror@plt+0x1b968>
  41e2b0:	ldr	x0, [x19, #8]
  41e2b4:	cbz	x0, 41e2d0 <ferror@plt+0x1b960>
  41e2b8:	ldr	x0, [x19, #24]
  41e2bc:	ldr	w0, [x0, #204]
  41e2c0:	cbnz	w0, 41e2d0 <ferror@plt+0x1b960>
  41e2c4:	ldr	w0, [x19, #16]
  41e2c8:	cmp	w0, w20
  41e2cc:	b.ls	41e2d8 <ferror@plt+0x1b968>  // b.plast
  41e2d0:	ldr	x19, [x19]
  41e2d4:	b	41e2ac <ferror@plt+0x1b93c>
  41e2d8:	cmp	x19, #0x0
  41e2dc:	cset	w0, ne  // ne = any
  41e2e0:	ldp	x19, x20, [sp, #16]
  41e2e4:	ldp	x21, x22, [sp, #32]
  41e2e8:	ldp	x29, x30, [sp], #48
  41e2ec:	ret
  41e2f0:	stp	x29, x30, [sp, #-64]!
  41e2f4:	mov	x3, #0x0                   	// #0
  41e2f8:	mov	x29, sp
  41e2fc:	stp	x19, x20, [sp, #16]
  41e300:	mov	x19, x0
  41e304:	adrp	x20, 402000 <memcpy@plt-0x2e0>
  41e308:	add	x20, x20, #0x730
  41e30c:	stp	x21, x22, [sp, #32]
  41e310:	adrp	x21, 439000 <ferror@plt+0x36690>
  41e314:	adrp	x22, 41c000 <ferror@plt+0x19690>
  41e318:	add	x21, x21, #0xf74
  41e31c:	add	x22, x22, #0xa28
  41e320:	str	x23, [sp, #48]
  41e324:	adrp	x23, 41c000 <ferror@plt+0x19690>
  41e328:	add	x23, x23, #0xb18
  41e32c:	mov	x5, x20
  41e330:	mov	x4, x21
  41e334:	mov	x1, x22
  41e338:	mov	x2, x23
  41e33c:	mov	x0, #0x7f                  	// #127
  41e340:	bl	439158 <ferror@plt+0x367e8>
  41e344:	str	x0, [x19, #296]
  41e348:	mov	x5, x20
  41e34c:	mov	x4, x21
  41e350:	mov	x2, x23
  41e354:	mov	x1, x22
  41e358:	mov	x3, #0x0                   	// #0
  41e35c:	mov	x0, #0x7f                  	// #127
  41e360:	bl	439158 <ferror@plt+0x367e8>
  41e364:	str	x0, [x19, #304]
  41e368:	mov	x0, #0xff0                 	// #4080
  41e36c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41e370:	str	wzr, [x0]
  41e374:	ldr	x1, [x19, #312]
  41e378:	str	x1, [x0, #8]
  41e37c:	str	x0, [x19, #312]
  41e380:	mov	x5, x20
  41e384:	mov	x4, x21
  41e388:	mov	x3, #0x0                   	// #0
  41e38c:	adrp	x2, 41c000 <ferror@plt+0x19690>
  41e390:	adrp	x1, 439000 <ferror@plt+0x36690>
  41e394:	add	x2, x2, #0xafc
  41e398:	add	x1, x1, #0x7f0
  41e39c:	mov	x0, #0x7f                  	// #127
  41e3a0:	bl	439158 <ferror@plt+0x367e8>
  41e3a4:	ldp	x21, x22, [sp, #32]
  41e3a8:	mov	x4, x20
  41e3ac:	ldr	x23, [sp, #48]
  41e3b0:	str	x0, [x19, #320]
  41e3b4:	add	x0, x19, #0x148
  41e3b8:	adrp	x3, 439000 <ferror@plt+0x36690>
  41e3bc:	ldp	x19, x20, [sp, #16]
  41e3c0:	add	x3, x3, #0xf40
  41e3c4:	ldp	x29, x30, [sp], #64
  41e3c8:	mov	x2, #0x0                   	// #0
  41e3cc:	mov	x1, #0x0                   	// #0
  41e3d0:	b	439c78 <_obstack_begin@@Base>
  41e3d4:	stp	x29, x30, [sp, #-32]!
  41e3d8:	mov	x29, sp
  41e3dc:	stp	x19, x20, [sp, #16]
  41e3e0:	mov	x19, x0
  41e3e4:	ldr	x0, [x0, #296]
  41e3e8:	bl	4391a0 <ferror@plt+0x36830>
  41e3ec:	ldr	x0, [x19, #304]
  41e3f0:	bl	4391a0 <ferror@plt+0x36830>
  41e3f4:	ldr	x0, [x19, #320]
  41e3f8:	bl	4391a0 <ferror@plt+0x36830>
  41e3fc:	add	x0, x19, #0x148
  41e400:	mov	x1, #0x0                   	// #0
  41e404:	bl	439df4 <_obstack_free@@Base>
  41e408:	ldr	x0, [x19, #312]
  41e40c:	cbz	x0, 41e420 <ferror@plt+0x1bab0>
  41e410:	ldr	x20, [x0, #8]
  41e414:	bl	402730 <free@plt>
  41e418:	mov	x0, x20
  41e41c:	b	41e40c <ferror@plt+0x1ba9c>
  41e420:	ldr	x0, [x19, #280]
  41e424:	cbz	x0, 41e438 <ferror@plt+0x1bac8>
  41e428:	ldr	x19, [x0, #32]
  41e42c:	bl	41ca44 <ferror@plt+0x1a0d4>
  41e430:	mov	x0, x19
  41e434:	b	41e424 <ferror@plt+0x1bab4>
  41e438:	ldp	x19, x20, [sp, #16]
  41e43c:	ldp	x29, x30, [sp], #32
  41e440:	ret
  41e444:	stp	x29, x30, [sp, #-32]!
  41e448:	mov	x29, sp
  41e44c:	str	x19, [sp, #16]
  41e450:	mov	x19, x0
  41e454:	bl	41e3d4 <ferror@plt+0x1ba64>
  41e458:	mov	x0, x19
  41e45c:	str	xzr, [x19, #280]
  41e460:	str	xzr, [x19, #312]
  41e464:	ldr	x19, [sp, #16]
  41e468:	ldp	x29, x30, [sp], #32
  41e46c:	b	41e2f0 <ferror@plt+0x1b980>
  41e470:	ldr	x2, [x0]
  41e474:	mov	w6, #0x0                   	// #0
  41e478:	mov	w5, #0x0                   	// #0
  41e47c:	mov	w4, #0x0                   	// #0
  41e480:	mov	w3, #0x1                   	// #1
  41e484:	ldr	x2, [x2, #80]
  41e488:	ldr	x2, [x2, #64]
  41e48c:	b	41d5a8 <ferror@plt+0x1ac38>
  41e490:	ldr	x3, [x0, #40]
  41e494:	mov	w4, w1
  41e498:	mov	w5, #0x18                  	// #24
  41e49c:	ldr	w1, [x3, #12]
  41e4a0:	ldr	x6, [x3]
  41e4a4:	sub	w1, w1, #0x1
  41e4a8:	smull	x1, w1, w5
  41e4ac:	add	x5, x6, x1
  41e4b0:	cbz	w4, 41e4c0 <ferror@plt+0x1bb50>
  41e4b4:	cmp	w2, #0x0
  41e4b8:	cset	w4, ne  // ne = any
  41e4bc:	add	w4, w4, #0x1
  41e4c0:	ldr	x2, [x0]
  41e4c4:	strb	w4, [x2, #106]
  41e4c8:	ldr	w3, [x3, #60]
  41e4cc:	ldr	w1, [x6, x1]
  41e4d0:	ldr	x2, [x5, #8]
  41e4d4:	sub	w1, w3, w1
  41e4d8:	ldrb	w3, [x5, #6]
  41e4dc:	lsr	w1, w1, w3
  41e4e0:	ldr	w3, [x5, #16]
  41e4e4:	add	w3, w1, w3
  41e4e8:	mov	w1, #0x2                   	// #2
  41e4ec:	b	417f18 <ferror@plt+0x155a8>
  41e4f0:	mov	w4, #0x0                   	// #0
  41e4f4:	mov	w3, #0x1                   	// #1
  41e4f8:	b	417f18 <ferror@plt+0x155a8>
  41e4fc:	stp	x29, x30, [sp, #-48]!
  41e500:	mov	x29, sp
  41e504:	stp	x19, x20, [sp, #16]
  41e508:	mov	x19, x0
  41e50c:	ldr	x0, [x0, #296]
  41e510:	str	xzr, [sp, #32]
  41e514:	bl	438fac <ferror@plt+0x3663c>
  41e518:	str	x0, [sp, #40]
  41e51c:	ldr	x0, [x19, #296]
  41e520:	add	x2, sp, #0x20
  41e524:	adrp	x1, 41c000 <ferror@plt+0x19690>
  41e528:	add	x1, x1, #0xa7c
  41e52c:	bl	439774 <ferror@plt+0x36e04>
  41e530:	ldr	x0, [sp, #32]
  41e534:	cbz	x0, 41e5a0 <ferror@plt+0x1bc30>
  41e538:	ldr	x1, [sp, #40]
  41e53c:	adrp	x3, 41c000 <ferror@plt+0x19690>
  41e540:	add	x3, x3, #0xe54
  41e544:	mov	x2, #0x8                   	// #8
  41e548:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  41e54c:	mov	x20, #0x0                   	// #0
  41e550:	bl	402410 <qsort@plt>
  41e554:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  41e558:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  41e55c:	add	x1, x1, #0x8c4
  41e560:	add	x0, x0, #0xe08
  41e564:	bl	402720 <dgettext@plt>
  41e568:	ldr	x1, [x19, #1336]
  41e56c:	bl	402870 <fputs_unlocked@plt>
  41e570:	ldp	x0, x1, [sp, #32]
  41e574:	cmp	x1, x20
  41e578:	b.ls	41e59c <ferror@plt+0x1bc2c>  // b.plast
  41e57c:	ldr	x1, [x19, #1336]
  41e580:	ldr	x0, [x0, x20, lsl #3]
  41e584:	add	x20, x20, #0x1
  41e588:	bl	402870 <fputs_unlocked@plt>
  41e58c:	ldr	x1, [x19, #1336]
  41e590:	mov	w0, #0xa                   	// #10
  41e594:	bl	402430 <putc_unlocked@plt>
  41e598:	b	41e570 <ferror@plt+0x1bc00>
  41e59c:	bl	402730 <free@plt>
  41e5a0:	ldp	x19, x20, [sp, #16]
  41e5a4:	ldp	x29, x30, [sp], #48
  41e5a8:	ret
  41e5ac:	stp	x29, x30, [sp, #-48]!
  41e5b0:	mov	w3, #0x0                   	// #0
  41e5b4:	mov	x29, sp
  41e5b8:	stp	x19, x20, [sp, #16]
  41e5bc:	mov	x20, x0
  41e5c0:	mov	x19, x1
  41e5c4:	str	x21, [sp, #32]
  41e5c8:	mov	w21, w2
  41e5cc:	bl	41d230 <ferror@plt+0x1a8c0>
  41e5d0:	cbnz	x0, 41e5e8 <ferror@plt+0x1bc78>
  41e5d4:	mov	w0, #0xffffffff            	// #-1
  41e5d8:	ldp	x19, x20, [sp, #16]
  41e5dc:	ldr	x21, [sp, #32]
  41e5e0:	ldp	x29, x30, [sp], #48
  41e5e4:	ret
  41e5e8:	mov	x2, x0
  41e5ec:	mov	x1, x19
  41e5f0:	mov	w4, w21
  41e5f4:	mov	x0, x20
  41e5f8:	mov	w6, #0x0                   	// #0
  41e5fc:	mov	w5, #0x0                   	// #0
  41e600:	mov	w3, #0x0                   	// #0
  41e604:	bl	41d5a8 <ferror@plt+0x1ac38>
  41e608:	mov	x19, x0
  41e60c:	ldr	w0, [x0, #204]
  41e610:	cbnz	w0, 41e5d4 <ferror@plt+0x1bc64>
  41e614:	ldr	w0, [x19, #200]
  41e618:	cmn	w0, #0x1
  41e61c:	b.eq	41e62c <ferror@plt+0x1bcbc>  // b.none
  41e620:	bl	402600 <close@plt>
  41e624:	mov	w0, #0xffffffff            	// #-1
  41e628:	str	w0, [x19, #200]
  41e62c:	ldr	x0, [x20]
  41e630:	ldr	x1, [x19, #160]
  41e634:	ldr	x0, [x0, #80]
  41e638:	ldr	x0, [x0, #160]
  41e63c:	cmp	x1, x0
  41e640:	cset	w0, gt
  41e644:	b	41e5d8 <ferror@plt+0x1bc68>
  41e648:	mov	w4, #0x0                   	// #0
  41e64c:	mov	w3, #0x3                   	// #3
  41e650:	mov	w2, #0x0                   	// #0
  41e654:	b	41e0b4 <ferror@plt+0x1b744>
  41e658:	mov	w4, #0x0                   	// #0
  41e65c:	mov	w3, #0x4                   	// #4
  41e660:	mov	w2, #0x1                   	// #1
  41e664:	b	41e0b4 <ferror@plt+0x1b744>
  41e668:	mov	x3, x0
  41e66c:	mov	x0, x2
  41e670:	ldrb	w2, [x3, #440]
  41e674:	cbz	w2, 41e688 <ferror@plt+0x1bd18>
  41e678:	ldr	x2, [x1, #56]
  41e67c:	cbnz	x2, 41e688 <ferror@plt+0x1bd18>
  41e680:	ldr	x2, [x3, #424]
  41e684:	str	x2, [x1, #56]
  41e688:	strb	wzr, [x3, #440]
  41e68c:	cbz	x0, 41e6a8 <ferror@plt+0x1bd38>
  41e690:	ldr	x2, [x1, #48]
  41e694:	cmp	x2, x0
  41e698:	b.ne	41e6a4 <ferror@plt+0x1bd34>  // b.any
  41e69c:	stp	xzr, xzr, [x1, #40]
  41e6a0:	strb	wzr, [x1, #213]
  41e6a4:	b	402730 <free@plt>
  41e6a8:	ret
  41e6ac:	ldr	x0, [x0]
  41e6b0:	ret
  41e6b4:	add	x0, x0, #0x48
  41e6b8:	ret
  41e6bc:	stp	x29, x30, [sp, #-48]!
  41e6c0:	cmp	w3, #0x0
  41e6c4:	mov	x29, sp
  41e6c8:	stp	x19, x20, [sp, #16]
  41e6cc:	mov	x20, x0
  41e6d0:	cset	w0, ne  // ne = any
  41e6d4:	mov	x19, x1
  41e6d8:	stp	x1, x1, [x20, #200]
  41e6dc:	strb	w0, [x20, #416]
  41e6e0:	str	x21, [sp, #32]
  41e6e4:	mov	x21, x2
  41e6e8:	cbz	x19, 41e710 <ferror@plt+0x1bda0>
  41e6ec:	ldr	x0, [x19, #8]
  41e6f0:	str	xzr, [x19, #32]
  41e6f4:	bl	402330 <strlen@plt>
  41e6f8:	str	w0, [x19, #16]
  41e6fc:	cmp	x19, x21
  41e700:	b.ne	41e708 <ferror@plt+0x1bd98>  // b.any
  41e704:	str	x19, [x20, #208]
  41e708:	ldr	x19, [x19]
  41e70c:	b	41e6e8 <ferror@plt+0x1bd78>
  41e710:	ldp	x19, x20, [sp, #16]
  41e714:	ldr	x21, [sp, #32]
  41e718:	ldp	x29, x30, [sp], #48
  41e71c:	ret
  41e720:	ldr	x0, [x0, #8]
  41e724:	ret
  41e728:	ldr	x0, [x0, #64]
  41e72c:	ret
  41e730:	ldr	x0, [x0]
  41e734:	ret
  41e738:	ldr	x0, [x0, #80]
  41e73c:	ret
  41e740:	ldr	x0, [x0, #72]
  41e744:	ret
  41e748:	stp	x29, x30, [sp, #-80]!
  41e74c:	mov	x29, sp
  41e750:	stp	x23, x24, [sp, #48]
  41e754:	mov	x23, x0
  41e758:	mov	x24, x1
  41e75c:	mov	x0, #0x0                   	// #0
  41e760:	stp	x19, x20, [sp, #16]
  41e764:	ldr	x1, [x23, #280]
  41e768:	stp	x21, x22, [sp, #32]
  41e76c:	stp	x25, x26, [sp, #64]
  41e770:	cbz	x1, 41e780 <ferror@plt+0x1be10>
  41e774:	add	x0, x0, #0x1
  41e778:	ldr	x1, [x1, #32]
  41e77c:	b	41e770 <ferror@plt+0x1be00>
  41e780:	lsl	x0, x0, #5
  41e784:	adrp	x25, 44a000 <_obstack_memory_used@@Base+0x10198>
  41e788:	add	x1, x0, #0x10
  41e78c:	mov	x0, #0x1                   	// #1
  41e790:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  41e794:	add	x25, x25, #0xc1c
  41e798:	ldr	x19, [x23, #280]
  41e79c:	mov	x20, x0
  41e7a0:	str	xzr, [x0]
  41e7a4:	strb	wzr, [x0, #8]
  41e7a8:	ldr	x21, [x20]
  41e7ac:	cbz	x19, 41e894 <ferror@plt+0x1bf24>
  41e7b0:	ldrb	w0, [x19, #211]
  41e7b4:	cbnz	w0, 41e814 <ferror@plt+0x1bea4>
  41e7b8:	ldr	w0, [x19, #204]
  41e7bc:	cbnz	w0, 41e814 <ferror@plt+0x1bea4>
  41e7c0:	ldrh	w0, [x19, #208]
  41e7c4:	cbz	w0, 41e814 <ferror@plt+0x1bea4>
  41e7c8:	add	x0, x21, #0x1
  41e7cc:	ldrb	w1, [x19, #210]
  41e7d0:	str	x0, [x20]
  41e7d4:	add	x0, x20, x0, lsl #5
  41e7d8:	strb	w1, [x0, #8]
  41e7dc:	ldrb	w0, [x20, #8]
  41e7e0:	ldrb	w1, [x19, #210]
  41e7e4:	orr	w0, w0, w1
  41e7e8:	strb	w0, [x20, #8]
  41e7ec:	ldrb	w0, [x19, #213]
  41e7f0:	cbz	w0, 41e81c <ferror@plt+0x1beac>
  41e7f4:	ldr	x0, [x19, #40]
  41e7f8:	add	x2, x20, x21, lsl #5
  41e7fc:	ldr	x1, [x19, #120]
  41e800:	add	x2, x2, #0x18
  41e804:	bl	4389f8 <ferror@plt+0x36088>
  41e808:	add	x21, x20, x21, lsl #5
  41e80c:	ldr	x0, [x19, #120]
  41e810:	str	x0, [x21, #16]
  41e814:	ldr	x19, [x19, #32]
  41e818:	b	41e7a8 <ferror@plt+0x1be38>
  41e81c:	ldr	w26, [x19, #200]
  41e820:	mov	x0, x19
  41e824:	bl	41ce60 <ferror@plt+0x1a4f0>
  41e828:	ands	w22, w0, #0xff
  41e82c:	b.ne	41e868 <ferror@plt+0x1bef8>  // b.any
  41e830:	mov	x1, x19
  41e834:	mov	x0, x23
  41e838:	mov	w3, #0x0                   	// #0
  41e83c:	mov	w2, #0x0                   	// #0
  41e840:	bl	41d000 <ferror@plt+0x1a690>
  41e844:	mov	x0, x20
  41e848:	bl	402730 <free@plt>
  41e84c:	mov	w0, w22
  41e850:	ldp	x19, x20, [sp, #16]
  41e854:	ldp	x21, x22, [sp, #32]
  41e858:	ldp	x23, x24, [sp, #48]
  41e85c:	ldp	x25, x26, [sp, #64]
  41e860:	ldp	x29, x30, [sp], #80
  41e864:	ret
  41e868:	ldr	w0, [x19, #200]
  41e86c:	mov	x1, x25
  41e870:	bl	438c30 <ferror@plt+0x362c0>
  41e874:	mov	x22, x0
  41e878:	add	x1, x20, x21, lsl #5
  41e87c:	add	x1, x1, #0x18
  41e880:	bl	438a40 <ferror@plt+0x360d0>
  41e884:	mov	x0, x22
  41e888:	bl	402450 <fclose@plt>
  41e88c:	str	w26, [x19, #200]
  41e890:	b	41e808 <ferror@plt+0x1be98>
  41e894:	mov	x1, x21
  41e898:	add	x0, x20, #0x10
  41e89c:	mov	x2, #0x20                  	// #32
  41e8a0:	lsl	x21, x21, #5
  41e8a4:	adrp	x3, 41d000 <ferror@plt+0x1a690>
  41e8a8:	add	x3, x3, #0xfc
  41e8ac:	bl	402410 <qsort@plt>
  41e8b0:	mov	x3, x24
  41e8b4:	add	x1, x21, #0x10
  41e8b8:	mov	x0, x20
  41e8bc:	mov	x2, #0x1                   	// #1
  41e8c0:	bl	402310 <fwrite_unlocked@plt>
  41e8c4:	cmp	x0, #0x1
  41e8c8:	cset	w22, eq  // eq = none
  41e8cc:	b	41e844 <ferror@plt+0x1bed4>
  41e8d0:	stp	x29, x30, [sp, #-80]!
  41e8d4:	mov	x3, x1
  41e8d8:	mov	x2, #0x1                   	// #1
  41e8dc:	mov	x29, sp
  41e8e0:	add	x0, sp, #0x20
  41e8e4:	str	x19, [sp, #16]
  41e8e8:	mov	x19, x1
  41e8ec:	mov	x1, #0x10                  	// #16
  41e8f0:	bl	402680 <fread_unlocked@plt>
  41e8f4:	cmp	x0, #0x1
  41e8f8:	b.ne	41e944 <ferror@plt+0x1bfd4>  // b.any
  41e8fc:	ldr	x0, [sp, #32]
  41e900:	lsl	x0, x0, #5
  41e904:	add	x0, x0, #0x10
  41e908:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41e90c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  41e910:	ldp	x2, x3, [sp, #32]
  41e914:	str	x0, [x1, #1952]
  41e918:	stp	x2, x3, [x0], #16
  41e91c:	mov	x1, #0x20                  	// #32
  41e920:	mov	x3, x19
  41e924:	ldr	x2, [sp, #32]
  41e928:	bl	402680 <fread_unlocked@plt>
  41e92c:	ldr	x1, [sp, #32]
  41e930:	cmp	x1, x0
  41e934:	cset	w0, eq  // eq = none
  41e938:	ldr	x19, [sp, #16]
  41e93c:	ldp	x29, x30, [sp], #80
  41e940:	ret
  41e944:	mov	w0, #0x0                   	// #0
  41e948:	b	41e938 <ferror@plt+0x1bfc8>
  41e94c:	stp	x29, x30, [sp, #-48]!
  41e950:	mov	x29, sp
  41e954:	stp	x19, x20, [sp, #16]
  41e958:	mov	x19, x0
  41e95c:	mov	x20, x1
  41e960:	str	x21, [sp, #32]
  41e964:	mov	w21, w2
  41e968:	bl	41d230 <ferror@plt+0x1a8c0>
  41e96c:	mov	x2, x0
  41e970:	mov	w4, w21
  41e974:	mov	x1, x20
  41e978:	mov	x0, x19
  41e97c:	mov	w6, #0x0                   	// #0
  41e980:	mov	w5, #0x0                   	// #0
  41e984:	mov	w3, #0x0                   	// #0
  41e988:	bl	41d5a8 <ferror@plt+0x1ac38>
  41e98c:	ldr	w0, [x0, #204]
  41e990:	ldp	x19, x20, [sp, #16]
  41e994:	cmp	w0, #0x2
  41e998:	cset	w0, ne  // ne = any
  41e99c:	ldr	x21, [sp, #32]
  41e9a0:	ldp	x29, x30, [sp], #48
  41e9a4:	ret
  41e9a8:	stp	x29, x30, [sp, #-32]!
  41e9ac:	mov	x29, sp
  41e9b0:	str	x19, [sp, #16]
  41e9b4:	ldr	x19, [x0, #120]
  41e9b8:	add	x19, x19, #0x2d0
  41e9bc:	ldp	x1, x0, [x19, #24]
  41e9c0:	sub	x0, x0, x1
  41e9c4:	cmp	x0, #0x1f
  41e9c8:	b.hi	41e9d8 <ferror@plt+0x1c068>  // b.pmore
  41e9cc:	mov	x0, x19
  41e9d0:	mov	x1, #0x20                  	// #32
  41e9d4:	bl	439ca4 <_obstack_newchunk@@Base>
  41e9d8:	ldp	x0, x2, [x19, #16]
  41e9dc:	add	x2, x2, #0x20
  41e9e0:	cmp	x2, x0
  41e9e4:	b.ne	41e9f4 <ferror@plt+0x1c084>  // b.any
  41e9e8:	ldrb	w1, [x19, #80]
  41e9ec:	orr	w1, w1, #0x2
  41e9f0:	strb	w1, [x19, #80]
  41e9f4:	ldr	x1, [x19, #48]
  41e9f8:	ldr	x3, [x19, #32]
  41e9fc:	add	x2, x2, x1
  41ea00:	bic	x1, x2, x1
  41ea04:	ldr	x2, [x19, #8]
  41ea08:	sub	x4, x1, x2
  41ea0c:	sub	x2, x3, x2
  41ea10:	cmp	x4, x2
  41ea14:	csel	x1, x1, x3, ls  // ls = plast
  41ea18:	stp	x1, x1, [x19, #16]
  41ea1c:	stp	xzr, xzr, [x0]
  41ea20:	stp	xzr, xzr, [x0, #16]
  41ea24:	ldr	x19, [sp, #16]
  41ea28:	ldp	x29, x30, [sp], #32
  41ea2c:	ret
  41ea30:	stp	x29, x30, [sp, #-32]!
  41ea34:	mov	x29, sp
  41ea38:	str	x19, [sp, #16]
  41ea3c:	mov	x19, x0
  41ea40:	ldrb	w0, [x0, #1304]
  41ea44:	cbz	w0, 41ea64 <ferror@plt+0x1c0f4>
  41ea48:	ldr	x0, [x19, #1088]
  41ea4c:	bl	4295b4 <ferror@plt+0x26c44>
  41ea50:	add	x0, x19, #0x2d0
  41ea54:	mov	x1, #0x0                   	// #0
  41ea58:	ldr	x19, [sp, #16]
  41ea5c:	ldp	x29, x30, [sp], #32
  41ea60:	b	439df4 <_obstack_free@@Base>
  41ea64:	ldr	x19, [sp, #16]
  41ea68:	ldp	x29, x30, [sp], #32
  41ea6c:	ret
  41ea70:	ldr	x0, [x0, #1088]
  41ea74:	mov	w2, w2
  41ea78:	mov	w3, #0x1                   	// #1
  41ea7c:	b	4298b4 <ferror@plt+0x26f44>
  41ea80:	stp	x29, x30, [sp, #-32]!
  41ea84:	mov	x29, sp
  41ea88:	stp	x19, x20, [sp, #16]
  41ea8c:	mov	x19, x0
  41ea90:	cbnz	x1, 41ebb8 <ferror@plt+0x1c248>
  41ea94:	mov	w0, #0x1                   	// #1
  41ea98:	strb	w0, [x19, #1304]
  41ea9c:	mov	w0, #0xd                   	// #13
  41eaa0:	bl	429540 <ferror@plt+0x26bd0>
  41eaa4:	mov	x20, x0
  41eaa8:	adrp	x0, 41e000 <ferror@plt+0x1b690>
  41eaac:	add	x0, x0, #0x9a8
  41eab0:	adrp	x4, 402000 <memcpy@plt-0x2e0>
  41eab4:	adrp	x3, 439000 <ferror@plt+0x36690>
  41eab8:	str	x0, [x20, #96]
  41eabc:	add	x4, x4, #0x730
  41eac0:	add	x3, x3, #0xf40
  41eac4:	add	x0, x19, #0x2d0
  41eac8:	mov	x2, #0x0                   	// #0
  41eacc:	mov	x1, #0x0                   	// #0
  41ead0:	bl	439c78 <_obstack_begin@@Base>
  41ead4:	str	x19, [x20, #120]
  41ead8:	mov	x0, x19
  41eadc:	str	x20, [x19, #1088]
  41eae0:	bl	4191dc <ferror@plt+0x1686c>
  41eae4:	mov	x0, x19
  41eae8:	bl	418460 <ferror@plt+0x15af0>
  41eaec:	mov	x0, x19
  41eaf0:	mov	w2, #0x7                   	// #7
  41eaf4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  41eaf8:	add	x1, x1, #0xf03
  41eafc:	bl	41ea70 <ferror@plt+0x1c100>
  41eb00:	str	x0, [x19, #1248]
  41eb04:	mov	w2, #0x4                   	// #4
  41eb08:	mov	x0, x19
  41eb0c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  41eb10:	add	x1, x1, #0x8fb
  41eb14:	bl	41ea70 <ferror@plt+0x1c100>
  41eb18:	str	x0, [x19, #1256]
  41eb1c:	mov	w2, #0x5                   	// #5
  41eb20:	mov	x0, x19
  41eb24:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  41eb28:	add	x1, x1, #0x900
  41eb2c:	bl	41ea70 <ferror@plt+0x1c100>
  41eb30:	str	x0, [x19, #1264]
  41eb34:	mov	w2, #0xb                   	// #11
  41eb38:	mov	x0, x19
  41eb3c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  41eb40:	add	x1, x1, #0x906
  41eb44:	bl	41ea70 <ferror@plt+0x1c100>
  41eb48:	str	x0, [x19, #1272]
  41eb4c:	mov	w2, #0xa                   	// #10
  41eb50:	ldrh	w1, [x0, #18]
  41eb54:	orr	w1, w1, #0x10
  41eb58:	strh	w1, [x0, #18]
  41eb5c:	mov	x0, x19
  41eb60:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  41eb64:	add	x1, x1, #0x16e
  41eb68:	bl	41ea70 <ferror@plt+0x1c100>
  41eb6c:	str	x0, [x19, #1280]
  41eb70:	mov	w2, #0xf                   	// #15
  41eb74:	ldrh	w1, [x0, #18]
  41eb78:	orr	w1, w1, #0x10
  41eb7c:	strh	w1, [x0, #18]
  41eb80:	mov	x0, x19
  41eb84:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  41eb88:	add	x1, x1, #0x912
  41eb8c:	bl	41ea70 <ferror@plt+0x1c100>
  41eb90:	str	x0, [x19, #1288]
  41eb94:	mov	w2, #0x14                  	// #20
  41eb98:	mov	x0, x19
  41eb9c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  41eba0:	add	x1, x1, #0x922
  41eba4:	bl	41ea70 <ferror@plt+0x1c100>
  41eba8:	str	x0, [x19, #1296]
  41ebac:	ldp	x19, x20, [sp, #16]
  41ebb0:	ldp	x29, x30, [sp], #32
  41ebb4:	ret
  41ebb8:	mov	x20, x1
  41ebbc:	b	41ead4 <ferror@plt+0x1c164>
  41ebc0:	stp	x29, x30, [sp, #-16]!
  41ebc4:	sxtw	x2, w2
  41ebc8:	mov	w3, #0x0                   	// #0
  41ebcc:	mov	x29, sp
  41ebd0:	ldr	x0, [x0, #1088]
  41ebd4:	bl	4298b4 <ferror@plt+0x26f44>
  41ebd8:	cbz	x0, 41ebec <ferror@plt+0x1c27c>
  41ebdc:	ldrb	w0, [x0, #18]
  41ebe0:	ubfx	x0, x0, #1, #1
  41ebe4:	ldp	x29, x30, [sp], #16
  41ebe8:	ret
  41ebec:	mov	w0, #0x0                   	// #0
  41ebf0:	b	41ebe4 <ferror@plt+0x1c274>
  41ebf4:	ldr	x0, [x0, #1088]
  41ebf8:	b	4298ec <ferror@plt+0x26f7c>
  41ebfc:	stp	x29, x30, [sp, #-48]!
  41ec00:	mov	x29, sp
  41ec04:	stp	x19, x20, [sp, #16]
  41ec08:	mov	x19, x0
  41ec0c:	mov	w20, w2
  41ec10:	str	x21, [sp, #32]
  41ec14:	mov	x21, x1
  41ec18:	ldr	w1, [x0, #64]
  41ec1c:	ldr	w0, [x0, #60]
  41ec20:	cmp	w0, w1
  41ec24:	b.ne	41ec44 <ferror@plt+0x1c2d4>  // b.any
  41ec28:	add	w0, w0, #0x64
  41ec2c:	lsl	w0, w0, #1
  41ec30:	str	w0, [x19, #64]
  41ec34:	lsl	x1, x0, #4
  41ec38:	ldr	x0, [x19, #48]
  41ec3c:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  41ec40:	str	x0, [x19, #48]
  41ec44:	ldr	w0, [x19, #60]
  41ec48:	ldr	x2, [x19, #48]
  41ec4c:	ubfiz	x1, x0, #4, #32
  41ec50:	add	w0, w0, #0x1
  41ec54:	add	x3, x2, x1
  41ec58:	str	x21, [x2, x1]
  41ec5c:	ldr	x21, [sp, #32]
  41ec60:	str	w20, [x3, #8]
  41ec64:	str	w0, [x19, #60]
  41ec68:	ldp	x19, x20, [sp, #16]
  41ec6c:	ldp	x29, x30, [sp], #48
  41ec70:	ret
  41ec74:	stp	x29, x30, [sp, #-48]!
  41ec78:	mov	x4, x2
  41ec7c:	mov	x29, sp
  41ec80:	str	x19, [sp, #16]
  41ec84:	ldr	x19, [x0]
  41ec88:	ldr	x5, [x19]
  41ec8c:	ldrb	w2, [x5]
  41ec90:	cmp	w2, #0x24
  41ec94:	b.ne	41ecd4 <ferror@plt+0x1c364>  // b.any
  41ec98:	ldrb	w1, [x0, #1146]
  41ec9c:	cbz	w1, 41ed40 <ferror@plt+0x1c3d0>
  41eca0:	add	x5, x5, #0x1
  41eca4:	str	x5, [x19]
  41eca8:	ldrb	w1, [x0, #1148]
  41ecac:	cbz	w1, 41eccc <ferror@plt+0x1c35c>
  41ecb0:	ldrb	w1, [x0, #18]
  41ecb4:	cbnz	w1, 41eccc <ferror@plt+0x1c35c>
  41ecb8:	strb	wzr, [x0, #1148]
  41ecbc:	adrp	x2, 44c000 <_obstack_memory_used@@Base+0x12198>
  41ecc0:	mov	w1, #0x2                   	// #2
  41ecc4:	add	x2, x2, #0x9c5
  41ecc8:	bl	419440 <ferror@plt+0x16ad0>
  41eccc:	mov	w0, #0x1                   	// #1
  41ecd0:	b	41ed34 <ferror@plt+0x1c3c4>
  41ecd4:	ldrb	w3, [x0, #1147]
  41ecd8:	cbz	w3, 41ed40 <ferror@plt+0x1c3d0>
  41ecdc:	cmp	w2, #0x5c
  41ece0:	b.ne	41ed40 <ferror@plt+0x1c3d0>  // b.any
  41ece4:	ldrb	w6, [x5, #1]
  41ece8:	and	w6, w6, #0xffffffdf
  41ecec:	and	w6, w6, #0xff
  41ecf0:	cmp	w6, #0x55
  41ecf4:	b.ne	41ed40 <ferror@plt+0x1c3d0>  // b.any
  41ecf8:	ldr	x2, [x19, #32]
  41ecfc:	add	x5, x5, #0x2
  41ed00:	str	x5, [x19]
  41ed04:	mov	x7, #0x0                   	// #0
  41ed08:	add	x5, sp, #0x2c
  41ed0c:	mov	x6, #0x0                   	// #0
  41ed10:	mov	w3, #0x2                   	// #2
  41ed14:	sub	w3, w3, w1
  41ed18:	mov	x1, x19
  41ed1c:	bl	412668 <ferror@plt+0xfcf8>
  41ed20:	ands	w0, w0, #0xff
  41ed24:	b.ne	41ed34 <ferror@plt+0x1c3c4>  // b.any
  41ed28:	ldr	x1, [x19]
  41ed2c:	sub	x1, x1, #0x2
  41ed30:	str	x1, [x19]
  41ed34:	ldr	x19, [sp, #16]
  41ed38:	ldp	x29, x30, [sp], #48
  41ed3c:	ret
  41ed40:	mov	w0, #0x0                   	// #0
  41ed44:	b	41ed34 <ferror@plt+0x1c3c4>
  41ed48:	ldrb	w5, [x1]
  41ed4c:	mov	w3, #0x0                   	// #0
  41ed50:	mov	w4, w5
  41ed54:	tbz	w4, #7, 41ed64 <ferror@plt+0x1c3f4>
  41ed58:	add	w3, w3, #0x1
  41ed5c:	lsl	w4, w4, #1
  41ed60:	b	41ed54 <ferror@plt+0x1c3e4>
  41ed64:	mov	w2, #0x7f                  	// #127
  41ed68:	asr	w2, w2, w3
  41ed6c:	and	w2, w2, w5
  41ed70:	mov	w5, #0x1                   	// #1
  41ed74:	sub	w5, w5, w1
  41ed78:	sxtw	x2, w2
  41ed7c:	add	w4, w5, w1
  41ed80:	cmp	w4, w3
  41ed84:	b.ge	41edc0 <ferror@plt+0x1c450>  // b.tcont
  41ed88:	ldrb	w4, [x1, #1]!
  41ed8c:	and	x6, x4, #0x3f
  41ed90:	and	w4, w4, #0xffffffc0
  41ed94:	orr	x2, x6, x2, lsl #6
  41ed98:	cmp	w4, #0x80
  41ed9c:	b.eq	41ed7c <ferror@plt+0x1c40c>  // b.none
  41eda0:	stp	x29, x30, [sp, #-16]!
  41eda4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41eda8:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  41edac:	mov	x29, sp
  41edb0:	add	x2, x2, #0x937
  41edb4:	add	x0, x0, #0x943
  41edb8:	mov	w1, #0xc89                 	// #3209
  41edbc:	bl	402980 <ferror@plt+0x10>
  41edc0:	mov	w1, #0x555c                	// #21852
  41edc4:	adrp	x5, 452000 <_obstack_memory_used@@Base+0x18198>
  41edc8:	add	x5, x5, #0x956
  41edcc:	strh	w1, [x0], #2
  41edd0:	mov	w1, #0x1c                  	// #28
  41edd4:	lsr	x4, x2, x1
  41edd8:	and	x4, x4, #0xf
  41eddc:	sub	w1, w1, #0x4
  41ede0:	cmn	w1, #0x4
  41ede4:	ldrb	w4, [x5, x4]
  41ede8:	strb	w4, [x0], #1
  41edec:	b.ne	41edd4 <ferror@plt+0x1c464>  // b.any
  41edf0:	sxtw	x0, w3
  41edf4:	ret
  41edf8:	ldrb	w1, [x0, #1154]
  41edfc:	cbz	w1, 41ee28 <ferror@plt+0x1c4b8>
  41ee00:	ldrb	w1, [x0, #1167]
  41ee04:	cbnz	w1, 41ee28 <ferror@plt+0x1c4b8>
  41ee08:	ldr	x1, [x0]
  41ee0c:	cbz	x1, 41ee18 <ferror@plt+0x1c4a8>
  41ee10:	ldrb	w1, [x1, #106]
  41ee14:	cbnz	w1, 41ee3c <ferror@plt+0x1c4cc>
  41ee18:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41ee1c:	add	x2, x2, #0x967
  41ee20:	mov	w1, #0x2                   	// #2
  41ee24:	b	419440 <ferror@plt+0x16ad0>
  41ee28:	ldrb	w1, [x0, #22]
  41ee2c:	cbnz	w1, 41ee3c <ferror@plt+0x1c4cc>
  41ee30:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41ee34:	add	x2, x2, #0x98f
  41ee38:	b	41ee20 <ferror@plt+0x1c4b0>
  41ee3c:	ret
  41ee40:	stp	x29, x30, [sp, #-64]!
  41ee44:	ands	w2, w2, #0xff
  41ee48:	mov	x29, sp
  41ee4c:	stp	x19, x20, [sp, #16]
  41ee50:	mov	x19, x0
  41ee54:	mov	x20, x3
  41ee58:	stp	x21, x22, [sp, #32]
  41ee5c:	mov	x21, x1
  41ee60:	stp	x23, x24, [sp, #48]
  41ee64:	mov	x24, x4
  41ee68:	ldrb	w23, [x1]
  41ee6c:	ldr	x1, [x0]
  41ee70:	sub	w23, w23, #0x71
  41ee74:	ldr	x22, [x1]
  41ee78:	b.ne	41eebc <ferror@plt+0x1c54c>  // b.any
  41ee7c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  41ee80:	add	x0, x0, #0x21a
  41ee84:	mov	w5, #0x204                 	// #516
  41ee88:	mov	w4, #0x43                  	// #67
  41ee8c:	ldrb	w6, [x22]
  41ee90:	ldrb	w3, [x22]
  41ee94:	ldrh	w6, [x0, x6, lsl #1]
  41ee98:	tst	w5, w6
  41ee9c:	b.eq	41eeb0 <ferror@plt+0x1c540>  // b.none
  41eea0:	madd	w23, w23, w4, w3
  41eea4:	add	x22, x22, #0x1
  41eea8:	sub	w23, w23, #0x71
  41eeac:	b	41ee8c <ferror@plt+0x1c51c>
  41eeb0:	ldurb	w0, [x22, #-1]
  41eeb4:	str	w0, [x20]
  41eeb8:	strb	wzr, [x20, #4]
  41eebc:	str	x22, [x1]
  41eec0:	cbz	w2, 41ef00 <ferror@plt+0x1c590>
  41eec4:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  41eec8:	add	x22, x22, #0x21a
  41eecc:	mov	w23, #0x204                 	// #516
  41eed0:	ldr	x1, [x19]
  41eed4:	ldr	x0, [x1]
  41eed8:	ldrb	w3, [x0]
  41eedc:	ldrb	w2, [x0]
  41eee0:	ldrh	w3, [x22, x3, lsl #1]
  41eee4:	tst	w23, w3
  41eee8:	b.eq	41eff0 <ferror@plt+0x1c680>  // b.none
  41eeec:	str	w2, [x20]
  41eef0:	add	x0, x0, #0x1
  41eef4:	strb	wzr, [x20, #4]
  41eef8:	str	x0, [x1]
  41eefc:	b	41eed0 <ferror@plt+0x1c560>
  41ef00:	mov	x2, x20
  41ef04:	mov	x0, x19
  41ef08:	mov	w1, #0x0                   	// #0
  41ef0c:	bl	41ec74 <ferror@plt+0x1c304>
  41ef10:	tst	w0, #0xff
  41ef14:	b.ne	41eec4 <ferror@plt+0x1c554>  // b.any
  41ef18:	ldr	x0, [x19, #1088]
  41ef1c:	sub	x3, x22, x21
  41ef20:	add	w3, w23, w3
  41ef24:	sub	w2, w22, w21
  41ef28:	mov	x1, x21
  41ef2c:	mov	w4, #0x1                   	// #1
  41ef30:	bl	4295ec <ferror@plt+0x26c7c>
  41ef34:	mov	x20, x0
  41ef38:	str	x0, [x24]
  41ef3c:	ldrh	w0, [x20, #18]
  41ef40:	ubfx	x1, x0, #2, #8
  41ef44:	tbz	w0, #4, 41efd8 <ferror@plt+0x1c668>
  41ef48:	ldrb	w0, [x19, #18]
  41ef4c:	cbnz	w0, 41efd8 <ferror@plt+0x1c668>
  41ef50:	tbz	w1, #1, 41ef74 <ferror@plt+0x1c604>
  41ef54:	ldrb	w0, [x19, #23]
  41ef58:	cbnz	w0, 41ef74 <ferror@plt+0x1c604>
  41ef5c:	ldr	x3, [x20]
  41ef60:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41ef64:	mov	x0, x19
  41ef68:	add	x2, x2, #0x9d5
  41ef6c:	mov	w1, #0x3                   	// #3
  41ef70:	bl	419440 <ferror@plt+0x16ad0>
  41ef74:	ldr	x0, [x19, #1272]
  41ef78:	cmp	x0, x20
  41ef7c:	b.ne	41efa4 <ferror@plt+0x1c634>  // b.any
  41ef80:	ldrb	w0, [x19, #22]
  41ef84:	cbnz	w0, 41efa4 <ferror@plt+0x1c634>
  41ef88:	ldrb	w0, [x19, #1120]
  41ef8c:	cbz	w0, 41f044 <ferror@plt+0x1c6d4>
  41ef90:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41ef94:	add	x2, x2, #0x9f2
  41ef98:	mov	x0, x19
  41ef9c:	mov	w1, #0x2                   	// #2
  41efa0:	bl	419440 <ferror@plt+0x16ad0>
  41efa4:	ldr	x0, [x19, #1280]
  41efa8:	cmp	x0, x20
  41efac:	b.ne	41efb8 <ferror@plt+0x1c648>  // b.any
  41efb0:	mov	x0, x19
  41efb4:	bl	41edf8 <ferror@plt+0x1c488>
  41efb8:	ldrh	w0, [x20, #18]
  41efbc:	tbz	w0, #9, 41efd8 <ferror@plt+0x1c668>
  41efc0:	ldr	x3, [x20]
  41efc4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41efc8:	mov	x0, x19
  41efcc:	add	x2, x2, #0xa7e
  41efd0:	mov	w1, #0xf                   	// #15
  41efd4:	bl	4194ac <ferror@plt+0x16b3c>
  41efd8:	mov	x0, x20
  41efdc:	ldp	x19, x20, [sp, #16]
  41efe0:	ldp	x21, x22, [sp, #32]
  41efe4:	ldp	x23, x24, [sp, #48]
  41efe8:	ldp	x29, x30, [sp], #64
  41efec:	ret
  41eff0:	mov	x2, x20
  41eff4:	mov	x0, x19
  41eff8:	mov	w1, #0x0                   	// #0
  41effc:	bl	41ec74 <ferror@plt+0x1c304>
  41f000:	tst	w0, #0xff
  41f004:	b.ne	41eed0 <ferror@plt+0x1c560>  // b.any
  41f008:	ldr	x0, [x19]
  41f00c:	mov	x1, x21
  41f010:	ldr	x2, [x0]
  41f014:	mov	x0, x19
  41f018:	sub	x2, x2, x21
  41f01c:	bl	4122a8 <ferror@plt+0xf938>
  41f020:	mov	x20, x0
  41f024:	mov	x1, x21
  41f028:	ldr	x0, [x19]
  41f02c:	ldr	x2, [x0]
  41f030:	mov	x0, x19
  41f034:	sub	w2, w2, w21
  41f038:	bl	41ea70 <ferror@plt+0x1c100>
  41f03c:	str	x0, [x24]
  41f040:	b	41ef3c <ferror@plt+0x1c5cc>
  41f044:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41f048:	add	x2, x2, #0xa39
  41f04c:	b	41ef98 <ferror@plt+0x1c628>
  41f050:	ldrb	w2, [x1]
  41f054:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x1d198>
  41f058:	add	x4, x4, #0x21a
  41f05c:	ldrb	w3, [x1]
  41f060:	ldrh	w2, [x4, x2, lsl #1]
  41f064:	tbnz	w2, #9, 41f07c <ferror@plt+0x1c70c>
  41f068:	mov	w0, #0x0                   	// #0
  41f06c:	ret
  41f070:	mov	w0, #0x0                   	// #0
  41f074:	ldp	x29, x30, [sp], #16
  41f078:	ret
  41f07c:	sub	w3, w3, #0x71
  41f080:	add	x2, x1, #0x1
  41f084:	stp	x29, x30, [sp, #-16]!
  41f088:	mov	w7, #0x204                 	// #516
  41f08c:	mov	w6, #0x43                  	// #67
  41f090:	mov	x29, sp
  41f094:	ldrb	w8, [x2]
  41f098:	ldrb	w5, [x2]
  41f09c:	ldrh	w8, [x4, x8, lsl #1]
  41f0a0:	tst	w7, w8
  41f0a4:	b.eq	41f0b8 <ferror@plt+0x1c748>  // b.none
  41f0a8:	madd	w3, w3, w6, w5
  41f0ac:	add	x2, x2, #0x1
  41f0b0:	sub	w3, w3, #0x71
  41f0b4:	b	41f094 <ferror@plt+0x1c724>
  41f0b8:	ldr	x0, [x0]
  41f0bc:	sub	x2, x2, x1
  41f0c0:	add	w3, w3, w2
  41f0c4:	mov	w4, #0x0                   	// #0
  41f0c8:	bl	4295ec <ferror@plt+0x26c7c>
  41f0cc:	cbz	x0, 41f070 <ferror@plt+0x1c700>
  41f0d0:	ldrb	w0, [x0, #18]
  41f0d4:	ubfx	x0, x0, #1, #1
  41f0d8:	b	41f074 <ferror@plt+0x1c704>
  41f0dc:	ldrb	w2, [x0, #4]
  41f0e0:	cmp	w2, #0x35
  41f0e4:	b.ne	41f10c <ferror@plt+0x1c79c>  // b.any
  41f0e8:	stp	x29, x30, [sp, #-16]!
  41f0ec:	mov	x29, sp
  41f0f0:	ldr	x0, [x0, #8]
  41f0f4:	ldr	x0, [x0]
  41f0f8:	bl	4026d0 <strcmp@plt>
  41f0fc:	cmp	w0, #0x0
  41f100:	cset	w0, eq  // eq = none
  41f104:	ldp	x29, x30, [sp], #16
  41f108:	ret
  41f10c:	mov	w0, #0x0                   	// #0
  41f110:	ret
  41f114:	ret
  41f118:	stp	x29, x30, [sp, #-96]!
  41f11c:	mov	x29, sp
  41f120:	stp	x23, x24, [sp, #48]
  41f124:	ldr	x24, [x0]
  41f128:	stp	x21, x22, [sp, #32]
  41f12c:	mov	x22, x0
  41f130:	stp	x19, x20, [sp, #16]
  41f134:	ldrb	w0, [x24, #105]
  41f138:	stp	x25, x26, [sp, #64]
  41f13c:	ldr	x23, [x24, #16]
  41f140:	str	x27, [sp, #80]
  41f144:	stp	x23, x23, [x24]
  41f148:	str	xzr, [x24, #56]
  41f14c:	strb	wzr, [x24, #104]
  41f150:	tbz	w0, #1, 41f184 <ferror@plt+0x1c814>
  41f154:	ldrb	w0, [x23]
  41f158:	mov	x19, x23
  41f15c:	add	x23, x23, #0x1
  41f160:	cmp	w0, #0xa
  41f164:	b.eq	41f17c <ferror@plt+0x1c80c>  // b.none
  41f168:	cmp	w0, #0xd
  41f16c:	b.ne	41f154 <ferror@plt+0x1c7e4>  // b.any
  41f170:	ldr	x0, [x24, #32]
  41f174:	cmp	x0, x19
  41f178:	b.ne	41f4c4 <ferror@plt+0x1cb54>  // b.any
  41f17c:	mov	x23, x19
  41f180:	b	41f3ac <ferror@plt+0x1ca3c>
  41f184:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x3e198>
  41f188:	mov	x20, #0x0                   	// #0
  41f18c:	movi	v2.16b, #0xa
  41f190:	add	x21, x21, #0x7b4
  41f194:	movi	v3.16b, #0xd
  41f198:	mov	x25, #0x1000                	// #4096
  41f19c:	b	41f218 <ferror@plt+0x1c8a8>
  41f1a0:	ldr	q1, [x23]
  41f1a4:	cmeq	v6.16b, v1.16b, v3.16b
  41f1a8:	cmeq	v0.16b, v1.16b, v2.16b
  41f1ac:	orr	v0.16b, v0.16b, v6.16b
  41f1b0:	cmeq	v6.16b, v1.16b, v5.16b
  41f1b4:	cmeq	v1.16b, v1.16b, v4.16b
  41f1b8:	orr	v0.16b, v0.16b, v6.16b
  41f1bc:	orr	v0.16b, v0.16b, v1.16b
  41f1c0:	addp	d1, v0.2d
  41f1c4:	fmov	x0, d1
  41f1c8:	cbnz	x0, 41f1d4 <ferror@plt+0x1c864>
  41f1cc:	ldr	q1, [x1, #16]!
  41f1d0:	b	41f1a4 <ferror@plt+0x1c834>
  41f1d4:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  41f1d8:	cmp	x1, x23
  41f1dc:	csel	x23, x23, x1, cc  // cc = lo, ul, last
  41f1e0:	ldr	q1, [x0, #1792]
  41f1e4:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  41f1e8:	and	v0.16b, v0.16b, v1.16b
  41f1ec:	ldr	q1, [x0, #1808]
  41f1f0:	uaddlp	v0.8h, v0.16b
  41f1f4:	ushl	v0.8h, v0.8h, v1.8h
  41f1f8:	addv	h0, v0.8h
  41f1fc:	umov	w19, v0.h[0]
  41f200:	rbit	w19, w19
  41f204:	clz	w19, w19
  41f208:	add	x19, x23, w19, sxtw
  41f20c:	b	41f298 <ferror@plt+0x1c928>
  41f210:	mov	x19, x20
  41f214:	mov	x20, x19
  41f218:	and	x0, x23, #0xfff
  41f21c:	and	x1, x23, #0xfffffffffffffff0
  41f220:	movi	v5.16b, #0x5c
  41f224:	sub	x0, x25, x0
  41f228:	movi	v4.16b, #0x3f
  41f22c:	cmp	x0, #0xf
  41f230:	b.hi	41f1a0 <ferror@plt+0x1c830>  // b.pmore
  41f234:	ldr	q1, [x1]
  41f238:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  41f23c:	and	w2, w23, #0xf
  41f240:	mov	w3, #0xffffffff            	// #-1
  41f244:	cmeq	v6.16b, v1.16b, v3.16b
  41f248:	lsl	w3, w3, w2
  41f24c:	cmeq	v0.16b, v1.16b, v2.16b
  41f250:	orr	v0.16b, v0.16b, v6.16b
  41f254:	cmeq	v6.16b, v1.16b, v5.16b
  41f258:	cmeq	v1.16b, v1.16b, v4.16b
  41f25c:	orr	v0.16b, v0.16b, v6.16b
  41f260:	orr	v0.16b, v0.16b, v1.16b
  41f264:	ldr	q1, [x0, #1792]
  41f268:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  41f26c:	and	v0.16b, v0.16b, v1.16b
  41f270:	ldr	q1, [x0, #1808]
  41f274:	uaddlp	v0.8h, v0.16b
  41f278:	ushl	v0.8h, v0.8h, v1.8h
  41f27c:	addv	h0, v0.8h
  41f280:	umov	w2, v0.h[0]
  41f284:	ands	w19, w3, w2
  41f288:	b.eq	41f1cc <ferror@plt+0x1c85c>  // b.none
  41f28c:	rbit	w19, w19
  41f290:	clz	w19, w19
  41f294:	add	x19, x1, w19, sxtw
  41f298:	mov	x23, x19
  41f29c:	ldrb	w0, [x23], #1
  41f2a0:	cmp	w0, #0x5c
  41f2a4:	b.eq	41f214 <ferror@plt+0x1c8a4>  // b.none
  41f2a8:	cmp	w0, #0x3f
  41f2ac:	b.ne	41f384 <ferror@plt+0x1ca14>  // b.any
  41f2b0:	ldrb	w0, [x19, #1]
  41f2b4:	cmp	w0, #0x3f
  41f2b8:	b.ne	41f210 <ferror@plt+0x1c8a0>  // b.any
  41f2bc:	ldrb	w0, [x19, #2]
  41f2c0:	ldrb	w2, [x19, #2]
  41f2c4:	ldrb	w0, [x21, x0]
  41f2c8:	cbz	w0, 41f210 <ferror@plt+0x1c8a0>
  41f2cc:	mov	x0, x24
  41f2d0:	mov	x1, x19
  41f2d4:	bl	41ebfc <ferror@plt+0x1c28c>
  41f2d8:	movi	v2.16b, #0xa
  41f2dc:	ldrb	w0, [x22, #1125]
  41f2e0:	movi	v3.16b, #0xd
  41f2e4:	cbz	w0, 41f210 <ferror@plt+0x1c8a0>
  41f2e8:	ldrb	w0, [x19, #2]
  41f2ec:	mov	x23, x19
  41f2f0:	ldrb	w0, [x21, x0]
  41f2f4:	strb	w0, [x23], #2
  41f2f8:	adrp	x25, 478000 <_obstack_memory_used@@Base+0x3e198>
  41f2fc:	adrp	x26, 457000 <_obstack_memory_used@@Base+0x1d198>
  41f300:	mov	x27, x19
  41f304:	mov	x21, x23
  41f308:	add	x25, x25, #0x7b4
  41f30c:	add	x26, x26, #0x21a
  41f310:	ldrb	w1, [x21, #1]
  41f314:	add	x20, x21, #0x1
  41f318:	strb	w1, [x27, #1]
  41f31c:	add	x19, x19, #0x1
  41f320:	cmp	w1, #0xa
  41f324:	ccmp	w1, #0xd, #0x4, ne  // ne = any
  41f328:	b.ne	41f478 <ferror@plt+0x1cb08>  // b.any
  41f32c:	cmp	w1, #0xd
  41f330:	ldr	x23, [x24, #32]
  41f334:	b.ne	41f350 <ferror@plt+0x1c9e0>  // b.any
  41f338:	cmp	x20, x23
  41f33c:	b.eq	41f3ac <ferror@plt+0x1ca3c>  // b.none
  41f340:	ldrb	w0, [x21, #2]
  41f344:	cmp	w0, #0xa
  41f348:	b.ne	41f358 <ferror@plt+0x1c9e8>  // b.any
  41f34c:	add	x20, x21, #0x2
  41f350:	cmp	x20, x23
  41f354:	b.eq	41f3ac <ferror@plt+0x1ca3c>  // b.none
  41f358:	ldr	x1, [x24, #16]
  41f35c:	mov	x23, x20
  41f360:	mov	x21, x19
  41f364:	cmp	x1, x21
  41f368:	b.eq	41f3ac <ferror@plt+0x1ca3c>  // b.none
  41f36c:	ldurb	w2, [x21, #-1]
  41f370:	ldurb	w0, [x21, #-1]
  41f374:	ldrh	w2, [x26, x2, lsl #1]
  41f378:	tbz	w2, #11, 41f440 <ferror@plt+0x1cad0>
  41f37c:	sub	x21, x21, #0x1
  41f380:	b	41f364 <ferror@plt+0x1c9f4>
  41f384:	ldr	x1, [x24, #32]
  41f388:	cmp	x1, x19
  41f38c:	b.eq	41f17c <ferror@plt+0x1c80c>  // b.none
  41f390:	cmp	w0, #0xd
  41f394:	b.ne	41f3e8 <ferror@plt+0x1ca78>  // b.any
  41f398:	ldrb	w0, [x19, #1]
  41f39c:	cmp	w0, #0xa
  41f3a0:	b.ne	41f3e8 <ferror@plt+0x1ca78>  // b.any
  41f3a4:	cmp	x1, x23
  41f3a8:	b.ne	41f3ec <ferror@plt+0x1ca7c>  // b.any
  41f3ac:	mov	x1, x19
  41f3b0:	mov	w0, #0xa                   	// #10
  41f3b4:	add	x23, x23, #0x1
  41f3b8:	mov	w2, #0xa                   	// #10
  41f3bc:	strb	w0, [x1], #1
  41f3c0:	mov	x0, x24
  41f3c4:	bl	41ebfc <ferror@plt+0x1c28c>
  41f3c8:	ldp	x19, x20, [sp, #16]
  41f3cc:	ldp	x21, x22, [sp, #32]
  41f3d0:	ldp	x25, x26, [sp, #64]
  41f3d4:	ldr	x27, [sp, #80]
  41f3d8:	str	x23, [x24, #16]
  41f3dc:	ldp	x23, x24, [sp, #48]
  41f3e0:	ldp	x29, x30, [sp], #96
  41f3e4:	ret
  41f3e8:	mov	x23, x19
  41f3ec:	cbz	x20, 41f3ac <ferror@plt+0x1ca3c>
  41f3f0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  41f3f4:	mov	x1, x19
  41f3f8:	add	x0, x0, #0x21a
  41f3fc:	ldurb	w2, [x1, #-1]
  41f400:	mov	x21, x1
  41f404:	sub	x1, x1, #0x1
  41f408:	ldrh	w2, [x0, x2, lsl #1]
  41f40c:	tbnz	w2, #11, 41f3fc <ferror@plt+0x1ca8c>
  41f410:	cmp	x20, x1
  41f414:	b.ne	41f3ac <ferror@plt+0x1ca3c>  // b.any
  41f418:	cmp	x21, x19
  41f41c:	mov	w0, #0x5c                  	// #92
  41f420:	mov	x1, x20
  41f424:	mov	w2, #0x20                  	// #32
  41f428:	sub	x19, x21, #0x2
  41f42c:	csel	w2, w2, w0, ne  // ne = any
  41f430:	mov	x0, x24
  41f434:	bl	41ebfc <ferror@plt+0x1c28c>
  41f438:	str	x20, [x24, #16]
  41f43c:	b	41f2f8 <ferror@plt+0x1c988>
  41f440:	cmp	w0, #0x5c
  41f444:	b.ne	41f3ac <ferror@plt+0x1ca3c>  // b.any
  41f448:	cmp	x21, x19
  41f44c:	sub	x23, x21, #0x1
  41f450:	sub	x19, x21, #0x2
  41f454:	mov	x1, x23
  41f458:	mov	w2, #0x20                  	// #32
  41f45c:	csel	w2, w2, w0, ne  // ne = any
  41f460:	mov	x0, x24
  41f464:	bl	41ebfc <ferror@plt+0x1c28c>
  41f468:	str	x23, [x24, #16]
  41f46c:	mov	x27, x19
  41f470:	mov	x21, x20
  41f474:	b	41f310 <ferror@plt+0x1c9a0>
  41f478:	cmp	w1, #0x3f
  41f47c:	b.ne	41f46c <ferror@plt+0x1cafc>  // b.any
  41f480:	ldrb	w0, [x21, #2]
  41f484:	cmp	w0, #0x3f
  41f488:	b.ne	41f46c <ferror@plt+0x1cafc>  // b.any
  41f48c:	ldrb	w0, [x21, #3]
  41f490:	ldrb	w2, [x21, #3]
  41f494:	ldrb	w0, [x25, x0]
  41f498:	cbz	w0, 41f46c <ferror@plt+0x1cafc>
  41f49c:	mov	x0, x24
  41f4a0:	mov	x1, x19
  41f4a4:	bl	41ebfc <ferror@plt+0x1c28c>
  41f4a8:	ldrb	w0, [x22, #1125]
  41f4ac:	cbz	w0, 41f46c <ferror@plt+0x1cafc>
  41f4b0:	mov	x20, x21
  41f4b4:	ldrb	w0, [x20, #3]!
  41f4b8:	ldrb	w0, [x25, x0]
  41f4bc:	strb	w0, [x27, #1]
  41f4c0:	b	41f46c <ferror@plt+0x1cafc>
  41f4c4:	ldrb	w0, [x19, #1]
  41f4c8:	cmp	w0, #0xa
  41f4cc:	csel	x23, x23, x19, eq  // eq = none
  41f4d0:	b	41f3ac <ferror@plt+0x1ca3c>
  41f4d4:	stp	x29, x30, [sp, #-96]!
  41f4d8:	mov	x29, sp
  41f4dc:	stp	x19, x20, [sp, #16]
  41f4e0:	mov	x19, x0
  41f4e4:	stp	x21, x22, [sp, #32]
  41f4e8:	mov	w22, w1
  41f4ec:	stp	x23, x24, [sp, #48]
  41f4f0:	adrp	x23, 452000 <_obstack_memory_used@@Base+0x18198>
  41f4f4:	adrp	x24, 478000 <_obstack_memory_used@@Base+0x3e198>
  41f4f8:	add	x23, x23, #0xad9
  41f4fc:	add	x24, x24, #0x7b4
  41f500:	stp	x25, x26, [sp, #64]
  41f504:	mov	w25, #0x18                  	// #24
  41f508:	ldr	x20, [x0]
  41f50c:	str	x27, [sp, #80]
  41f510:	ldr	w1, [x20, #56]
  41f514:	ldr	x27, [x20, #48]
  41f518:	ubfiz	x26, x1, #4, #32
  41f51c:	ldr	x3, [x20]
  41f520:	add	x2, x27, x26
  41f524:	ldr	x0, [x27, x26]
  41f528:	cmp	x0, x3
  41f52c:	b.hi	41f6cc <ferror@plt+0x1cd5c>  // b.pmore
  41f530:	add	w1, w1, #0x1
  41f534:	ldr	w5, [x2, #8]
  41f538:	str	w1, [x20, #56]
  41f53c:	add	x21, x0, #0x1
  41f540:	ldr	x1, [x20, #8]
  41f544:	cmp	w5, #0x5c
  41f548:	sub	x21, x21, x1
  41f54c:	b.eq	41f57c <ferror@plt+0x1cc0c>  // b.none
  41f550:	cmp	w5, #0x20
  41f554:	b.ne	41f5fc <ferror@plt+0x1cc8c>  // b.any
  41f558:	cbnz	w22, 41f57c <ferror@plt+0x1cc0c>
  41f55c:	ldr	x0, [x19, #40]
  41f560:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41f564:	mov	w3, w21
  41f568:	add	x4, x4, #0xab0
  41f56c:	mov	w1, #0x0                   	// #0
  41f570:	ldr	w2, [x0, #60]
  41f574:	mov	x0, x19
  41f578:	bl	4195fc <ferror@plt+0x16c8c>
  41f57c:	ldr	x1, [x20, #16]
  41f580:	ldr	x0, [x20, #32]
  41f584:	cmp	x1, x0
  41f588:	b.ls	41f5b0 <ferror@plt+0x1cc40>  // b.plast
  41f58c:	ldr	x0, [x19, #40]
  41f590:	mov	x4, x23
  41f594:	mov	w3, w21
  41f598:	mov	w1, #0x2                   	// #2
  41f59c:	ldr	w2, [x0, #60]
  41f5a0:	mov	x0, x19
  41f5a4:	bl	4195fc <ferror@plt+0x16c8c>
  41f5a8:	ldr	x0, [x20, #32]
  41f5ac:	str	x0, [x20, #16]
  41f5b0:	ldr	x0, [x27, x26]
  41f5b4:	str	x0, [x20, #8]
  41f5b8:	ldr	x0, [x19, #40]
  41f5bc:	ldr	w2, [x0, #12]
  41f5c0:	ldr	x1, [x0]
  41f5c4:	sub	w2, w2, #0x1
  41f5c8:	ldr	w3, [x0, #60]
  41f5cc:	smull	x2, w2, w25
  41f5d0:	add	x4, x1, x2
  41f5d4:	ldr	w1, [x1, x2]
  41f5d8:	mov	w2, #0x0                   	// #0
  41f5dc:	sub	w3, w3, w1
  41f5e0:	ldrb	w1, [x4, #6]
  41f5e4:	lsr	w3, w3, w1
  41f5e8:	ldr	w1, [x4, #16]
  41f5ec:	add	w1, w1, #0x1
  41f5f0:	add	w1, w3, w1
  41f5f4:	bl	42333c <ferror@plt+0x209cc>
  41f5f8:	b	41f510 <ferror@plt+0x1cba0>
  41f5fc:	ldrb	w6, [x24, w5, uxtw]
  41f600:	cbz	w6, 41f6b0 <ferror@plt+0x1cd40>
  41f604:	ldrb	w1, [x19, #1136]
  41f608:	cbz	w1, 41f510 <ferror@plt+0x1cba0>
  41f60c:	cbz	w22, 41f62c <ferror@plt+0x1ccbc>
  41f610:	cmp	w5, #0x2f
  41f614:	b.ne	41f510 <ferror@plt+0x1cba0>  // b.any
  41f618:	ldrb	w1, [x19, #1125]
  41f61c:	cbz	w1, 41f658 <ferror@plt+0x1cce8>
  41f620:	ldr	x1, [x2, #16]
  41f624:	cmp	x0, x1
  41f628:	b.ne	41f510 <ferror@plt+0x1cba0>  // b.any
  41f62c:	ldr	x0, [x19, #40]
  41f630:	ldr	w2, [x0, #60]
  41f634:	ldrb	w0, [x19, #1125]
  41f638:	cbz	w0, 41f694 <ferror@plt+0x1cd24>
  41f63c:	mov	w3, w21
  41f640:	mov	x0, x19
  41f644:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41f648:	mov	w1, #0x4                   	// #4
  41f64c:	add	x4, x4, #0xafa
  41f650:	bl	41966c <ferror@plt+0x16cfc>
  41f654:	b	41f510 <ferror@plt+0x1cba0>
  41f658:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  41f65c:	add	x0, x0, #0x3
  41f660:	add	x1, x1, #0x21a
  41f664:	ldrb	w4, [x0]
  41f668:	ldrb	w3, [x0]
  41f66c:	ldrh	w4, [x1, x4, lsl #1]
  41f670:	tbz	w4, #11, 41f67c <ferror@plt+0x1cd0c>
  41f674:	add	x0, x0, #0x1
  41f678:	b	41f664 <ferror@plt+0x1ccf4>
  41f67c:	cmp	w3, #0xa
  41f680:	b.ne	41f510 <ferror@plt+0x1cba0>  // b.any
  41f684:	ldr	x1, [x2, #16]
  41f688:	cmp	x0, x1
  41f68c:	b.cs	41f510 <ferror@plt+0x1cba0>  // b.hs, b.nlast
  41f690:	b	41f62c <ferror@plt+0x1ccbc>
  41f694:	mov	w3, w21
  41f698:	mov	x0, x19
  41f69c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41f6a0:	mov	w1, #0x4                   	// #4
  41f6a4:	add	x4, x4, #0xb18
  41f6a8:	bl	41966c <ferror@plt+0x16cfc>
  41f6ac:	b	41f510 <ferror@plt+0x1cba0>
  41f6b0:	cbz	w5, 41f510 <ferror@plt+0x1cba0>
  41f6b4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41f6b8:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  41f6bc:	add	x2, x2, #0xb48
  41f6c0:	add	x0, x0, #0x943
  41f6c4:	mov	w1, #0x48b                 	// #1163
  41f6c8:	bl	402980 <ferror@plt+0x10>
  41f6cc:	ldp	x19, x20, [sp, #16]
  41f6d0:	ldp	x21, x22, [sp, #32]
  41f6d4:	ldp	x23, x24, [sp, #48]
  41f6d8:	ldp	x25, x26, [sp, #64]
  41f6dc:	ldr	x27, [sp, #80]
  41f6e0:	ldp	x29, x30, [sp], #96
  41f6e4:	ret
  41f6e8:	stp	x29, x30, [sp, #-64]!
  41f6ec:	mov	x29, sp
  41f6f0:	stp	x19, x20, [sp, #16]
  41f6f4:	mov	x19, x0
  41f6f8:	ldr	x20, [x0]
  41f6fc:	stp	x21, x22, [sp, #32]
  41f700:	adrp	x22, 452000 <_obstack_memory_used@@Base+0x18198>
  41f704:	add	x22, x22, #0xb60
  41f708:	ldr	x1, [x20]
  41f70c:	str	x23, [sp, #48]
  41f710:	mov	w23, #0x18                  	// #24
  41f714:	mov	x0, x1
  41f718:	add	x1, x1, #0x2
  41f71c:	ldrb	w2, [x0, #1]!
  41f720:	cmp	w2, #0x2f
  41f724:	csel	x1, x1, x0, eq  // eq = none
  41f728:	mov	x21, x1
  41f72c:	ldrb	w0, [x21], #1
  41f730:	cmp	w0, #0x2f
  41f734:	b.ne	41f790 <ferror@plt+0x1ce20>  // b.any
  41f738:	ldurb	w0, [x1, #-1]
  41f73c:	cmp	w0, #0x2a
  41f740:	b.eq	41f80c <ferror@plt+0x1ce9c>  // b.none
  41f744:	ldrb	w0, [x19, #1133]
  41f748:	cbz	w0, 41f788 <ferror@plt+0x1ce18>
  41f74c:	ldrb	w0, [x1, #1]
  41f750:	cmp	w0, #0x2a
  41f754:	b.ne	41f788 <ferror@plt+0x1ce18>  // b.any
  41f758:	ldrb	w0, [x1, #2]
  41f75c:	cmp	w0, #0x2f
  41f760:	b.eq	41f788 <ferror@plt+0x1ce18>  // b.none
  41f764:	ldr	x0, [x19, #40]
  41f768:	mov	x4, x22
  41f76c:	ldr	x3, [x20, #8]
  41f770:	mov	w1, #0x2                   	// #2
  41f774:	ldr	w2, [x0, #60]
  41f778:	mov	x0, x19
  41f77c:	str	x21, [x20]
  41f780:	sub	w3, w21, w3
  41f784:	bl	41966c <ferror@plt+0x16cfc>
  41f788:	mov	x1, x21
  41f78c:	b	41f728 <ferror@plt+0x1cdb8>
  41f790:	cmp	w0, #0xa
  41f794:	b.ne	41f788 <ferror@plt+0x1ce18>  // b.any
  41f798:	str	x1, [x20]
  41f79c:	mov	x0, x19
  41f7a0:	mov	w1, #0x1                   	// #1
  41f7a4:	bl	41f4d4 <ferror@plt+0x1cb64>
  41f7a8:	ldr	x1, [x20, #16]
  41f7ac:	ldr	x0, [x20, #32]
  41f7b0:	cmp	x1, x0
  41f7b4:	b.cs	41f834 <ferror@plt+0x1cec4>  // b.hs, b.nlast
  41f7b8:	mov	x0, x19
  41f7bc:	bl	41f118 <ferror@plt+0x1c7a8>
  41f7c0:	ldr	x0, [x19, #40]
  41f7c4:	ldp	x2, x6, [x20, #8]
  41f7c8:	ldr	w3, [x0, #12]
  41f7cc:	ldr	x5, [x0]
  41f7d0:	sub	w3, w3, #0x1
  41f7d4:	ldr	w1, [x0, #60]
  41f7d8:	sub	w2, w6, w2
  41f7dc:	smull	x3, w3, w23
  41f7e0:	add	x4, x5, x3
  41f7e4:	ldr	w3, [x5, x3]
  41f7e8:	sub	w3, w1, w3
  41f7ec:	ldrb	w1, [x4, #6]
  41f7f0:	lsr	w3, w3, w1
  41f7f4:	ldr	w1, [x4, #16]
  41f7f8:	add	w1, w1, #0x1
  41f7fc:	add	w1, w3, w1
  41f800:	bl	42333c <ferror@plt+0x209cc>
  41f804:	ldr	x21, [x20]
  41f808:	b	41f788 <ferror@plt+0x1ce18>
  41f80c:	str	x21, [x20]
  41f810:	mov	x0, x19
  41f814:	mov	w1, #0x1                   	// #1
  41f818:	bl	41f4d4 <ferror@plt+0x1cb64>
  41f81c:	mov	w0, #0x0                   	// #0
  41f820:	ldp	x19, x20, [sp, #16]
  41f824:	ldp	x21, x22, [sp, #32]
  41f828:	ldr	x23, [sp, #48]
  41f82c:	ldp	x29, x30, [sp], #64
  41f830:	ret
  41f834:	mov	w0, #0x1                   	// #1
  41f838:	b	41f820 <ferror@plt+0x1ceb0>
  41f83c:	stp	x29, x30, [sp, #-32]!
  41f840:	mov	x2, x1
  41f844:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x1d198>
  41f848:	mov	x29, sp
  41f84c:	stp	x19, x20, [sp, #16]
  41f850:	mov	x19, x0
  41f854:	add	x4, x4, #0x21a
  41f858:	ldrb	w0, [x2], #1
  41f85c:	mov	w6, #0x204                 	// #516
  41f860:	mov	w5, #0x43                  	// #67
  41f864:	sub	w0, w0, #0x71
  41f868:	ldrb	w7, [x2]
  41f86c:	ldrb	w3, [x2]
  41f870:	ldrh	w7, [x4, x7, lsl #1]
  41f874:	tst	w6, w7
  41f878:	b.eq	41f88c <ferror@plt+0x1cf1c>  // b.none
  41f87c:	madd	w0, w0, w5, w3
  41f880:	add	x2, x2, #0x1
  41f884:	sub	w0, w0, #0x71
  41f888:	b	41f868 <ferror@plt+0x1cef8>
  41f88c:	sub	x3, x2, x1
  41f890:	mov	w4, #0x1                   	// #1
  41f894:	add	w3, w0, w3
  41f898:	sub	w2, w2, w1
  41f89c:	ldr	x0, [x19, #1088]
  41f8a0:	bl	4295ec <ferror@plt+0x26c7c>
  41f8a4:	mov	x20, x0
  41f8a8:	ldrh	w0, [x0, #18]
  41f8ac:	ubfx	x1, x0, #2, #8
  41f8b0:	tbz	w0, #4, 41f944 <ferror@plt+0x1cfd4>
  41f8b4:	ldrb	w0, [x19, #18]
  41f8b8:	cbnz	w0, 41f944 <ferror@plt+0x1cfd4>
  41f8bc:	tbz	w1, #1, 41f8e0 <ferror@plt+0x1cf70>
  41f8c0:	ldrb	w0, [x19, #23]
  41f8c4:	cbnz	w0, 41f8e0 <ferror@plt+0x1cf70>
  41f8c8:	ldr	x3, [x20]
  41f8cc:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41f8d0:	mov	x0, x19
  41f8d4:	add	x2, x2, #0x9d5
  41f8d8:	mov	w1, #0x3                   	// #3
  41f8dc:	bl	419440 <ferror@plt+0x16ad0>
  41f8e0:	ldr	x0, [x19, #1272]
  41f8e4:	cmp	x20, x0
  41f8e8:	b.ne	41f910 <ferror@plt+0x1cfa0>  // b.any
  41f8ec:	ldrb	w0, [x19, #22]
  41f8f0:	cbnz	w0, 41f910 <ferror@plt+0x1cfa0>
  41f8f4:	ldrb	w0, [x19, #1120]
  41f8f8:	cbz	w0, 41f954 <ferror@plt+0x1cfe4>
  41f8fc:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41f900:	add	x2, x2, #0x9f2
  41f904:	mov	x0, x19
  41f908:	mov	w1, #0x2                   	// #2
  41f90c:	bl	419440 <ferror@plt+0x16ad0>
  41f910:	ldr	x0, [x19, #1280]
  41f914:	cmp	x20, x0
  41f918:	b.ne	41f924 <ferror@plt+0x1cfb4>  // b.any
  41f91c:	mov	x0, x19
  41f920:	bl	41edf8 <ferror@plt+0x1c488>
  41f924:	ldrh	w0, [x20, #18]
  41f928:	tbz	w0, #9, 41f944 <ferror@plt+0x1cfd4>
  41f92c:	ldr	x3, [x20]
  41f930:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41f934:	mov	x0, x19
  41f938:	add	x2, x2, #0xa7e
  41f93c:	mov	w1, #0xf                   	// #15
  41f940:	bl	4194ac <ferror@plt+0x16b3c>
  41f944:	mov	x0, x20
  41f948:	ldp	x19, x20, [sp, #16]
  41f94c:	ldp	x29, x30, [sp], #32
  41f950:	ret
  41f954:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41f958:	add	x2, x2, #0xa39
  41f95c:	b	41f904 <ferror@plt+0x1cf94>
  41f960:	add	x0, x0, #0x568
  41f964:	ret
  41f968:	stp	x29, x30, [sp, #-32]!
  41f96c:	mov	x29, sp
  41f970:	stp	x19, x20, [sp, #16]
  41f974:	mov	w20, #0x18                  	// #24
  41f978:	mov	x19, x0
  41f97c:	umull	x20, w1, w20
  41f980:	mov	x0, x20
  41f984:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41f988:	add	x1, x0, x20
  41f98c:	str	xzr, [x19]
  41f990:	stp	x0, x1, [x19, #16]
  41f994:	ldp	x19, x20, [sp, #16]
  41f998:	ldp	x29, x30, [sp], #32
  41f99c:	ret
  41f9a0:	stp	x29, x30, [sp, #-32]!
  41f9a4:	mov	x29, sp
  41f9a8:	str	x19, [sp, #16]
  41f9ac:	mov	x19, x0
  41f9b0:	ldr	x0, [x0]
  41f9b4:	cbnz	x0, 41f9d0 <ferror@plt+0x1d060>
  41f9b8:	mov	x0, #0x20                  	// #32
  41f9bc:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41f9c0:	str	x0, [x19]
  41f9c4:	mov	w1, #0xfa                  	// #250
  41f9c8:	str	x19, [x0, #8]
  41f9cc:	bl	41f968 <ferror@plt+0x1cff8>
  41f9d0:	ldr	x0, [x19]
  41f9d4:	ldr	x19, [sp, #16]
  41f9d8:	ldp	x29, x30, [sp], #32
  41f9dc:	ret
  41f9e0:	ldr	w1, [x0, #48]
  41f9e4:	cmp	w1, #0x1
  41f9e8:	b.ne	41fa0c <ferror@plt+0x1d09c>  // b.any
  41f9ec:	ldr	x1, [x0, #24]
  41f9f0:	ldr	x0, [x0, #16]
  41f9f4:	sub	x0, x1, x0
  41f9f8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41f9fc:	movk	x1, #0xaaab
  41fa00:	asr	x0, x0, #3
  41fa04:	mul	w0, w0, w1
  41fa08:	ret
  41fa0c:	tst	w1, #0xfffffffd
  41fa10:	b.ne	41fa28 <ferror@plt+0x1d0b8>  // b.any
  41fa14:	ldr	x1, [x0, #24]
  41fa18:	ldr	x0, [x0, #16]
  41fa1c:	sub	x0, x1, x0
  41fa20:	ubfx	x0, x0, #3, #32
  41fa24:	ret
  41fa28:	stp	x29, x30, [sp, #-16]!
  41fa2c:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41fa30:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  41fa34:	mov	x29, sp
  41fa38:	add	x2, x2, #0xb74
  41fa3c:	add	x0, x0, #0x943
  41fa40:	mov	w1, #0x99f                 	// #2463
  41fa44:	bl	402980 <ferror@plt+0x10>
  41fa48:	stp	x29, x30, [sp, #-64]!
  41fa4c:	mov	x29, sp
  41fa50:	stp	x19, x20, [sp, #16]
  41fa54:	mov	x19, x0
  41fa58:	stp	x21, x22, [sp, #32]
  41fa5c:	ldr	w21, [x0, #496]
  41fa60:	ldr	x0, [x0, #488]
  41fa64:	stp	x23, x24, [sp, #48]
  41fa68:	ldr	x23, [x19, #448]
  41fa6c:	ldr	x22, [x0, #24]
  41fa70:	sub	x22, x22, x23
  41fa74:	cbz	x21, 41fb24 <ferror@plt+0x1d1b4>
  41fa78:	asr	x20, x22, #3
  41fa7c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41fa80:	movk	x2, #0xaaab
  41fa84:	mul	x20, x20, x2
  41fa88:	cmp	x20, x21
  41fa8c:	b.gt	41fad4 <ferror@plt+0x1d164>
  41fa90:	bl	41f9a0 <ferror@plt+0x1d030>
  41fa94:	mov	x24, x0
  41fa98:	cmp	x20, x21
  41fa9c:	b.ge	41fab8 <ferror@plt+0x1d148>  // b.tcont
  41faa0:	sub	x2, x21, x20
  41faa4:	mov	x0, #0x18                  	// #24
  41faa8:	ldr	x1, [x24, #16]
  41faac:	mul	x2, x2, x0
  41fab0:	add	x0, x1, x0
  41fab4:	bl	4022f0 <memmove@plt>
  41fab8:	ldr	x1, [x19, #488]
  41fabc:	ldr	x0, [x24, #16]
  41fac0:	ldr	x1, [x1, #24]
  41fac4:	ldp	x2, x3, [x1, #-24]
  41fac8:	stp	x2, x3, [x0]
  41facc:	ldur	x1, [x1, #-8]
  41fad0:	str	x1, [x0, #16]
  41fad4:	cmp	x22, #0x18
  41fad8:	b.le	41fb24 <ferror@plt+0x1d1b4>
  41fadc:	sub	x20, x20, #0x1
  41fae0:	mov	x2, #0x18                  	// #24
  41fae4:	cmp	x20, x21
  41fae8:	csel	x20, x20, x21, le
  41faec:	ldr	x1, [x19, #448]
  41faf0:	mul	x2, x20, x2
  41faf4:	add	x0, x1, #0x18
  41faf8:	bl	4022f0 <memmove@plt>
  41fafc:	ldr	x0, [x19, #448]
  41fb00:	ldp	x21, x22, [sp, #32]
  41fb04:	add	x1, x0, #0x18
  41fb08:	str	x1, [x19, #448]
  41fb0c:	ldur	w1, [x23, #-24]
  41fb10:	ldp	x19, x20, [sp, #16]
  41fb14:	ldp	x23, x24, [sp, #48]
  41fb18:	str	w1, [x0]
  41fb1c:	ldp	x29, x30, [sp], #64
  41fb20:	ret
  41fb24:	cbnz	x22, 41fafc <ferror@plt+0x1d18c>
  41fb28:	ldr	x0, [x19, #488]
  41fb2c:	ldr	x1, [x19, #448]
  41fb30:	ldr	x2, [x0, #24]
  41fb34:	cmp	x2, x1
  41fb38:	b.ne	41fafc <ferror@plt+0x1d18c>  // b.any
  41fb3c:	bl	41f9a0 <ferror@plt+0x1d030>
  41fb40:	str	x0, [x19, #488]
  41fb44:	ldr	x0, [x0, #16]
  41fb48:	str	x0, [x19, #448]
  41fb4c:	b	41fafc <ferror@plt+0x1d18c>
  41fb50:	stp	x29, x30, [sp, #-32]!
  41fb54:	mov	x29, sp
  41fb58:	stp	x19, x20, [sp, #16]
  41fb5c:	mov	x19, x0
  41fb60:	ldrb	w0, [x0, #16]
  41fb64:	cbnz	w0, 41fbdc <ferror@plt+0x1d26c>
  41fb68:	ldr	x0, [x19]
  41fb6c:	ldrb	w20, [x0, #104]
  41fb70:	cbz	w20, 41fbe4 <ferror@plt+0x1d274>
  41fb74:	ldr	x3, [x0, #16]
  41fb78:	ldr	x2, [x0, #32]
  41fb7c:	cmp	x3, x2
  41fb80:	b.cs	41fb9c <ferror@plt+0x1d22c>  // b.hs, b.nlast
  41fb84:	mov	x0, x19
  41fb88:	bl	41f118 <ferror@plt+0x1c7a8>
  41fb8c:	mov	w0, w20
  41fb90:	ldp	x19, x20, [sp, #16]
  41fb94:	ldp	x29, x30, [sp], #32
  41fb98:	ret
  41fb9c:	ldrb	w1, [x19, #25]
  41fba0:	cbnz	w1, 41fbdc <ferror@plt+0x1d26c>
  41fba4:	ldr	x1, [x0, #24]
  41fba8:	cmp	x2, x1
  41fbac:	ldrb	w1, [x0, #105]
  41fbb0:	b.eq	41fbc4 <ferror@plt+0x1d254>  // b.none
  41fbb4:	cmp	x3, x2
  41fbb8:	b.ls	41fbc4 <ferror@plt+0x1d254>  // b.plast
  41fbbc:	tbnz	w1, #1, 41fbc4 <ferror@plt+0x1d254>
  41fbc0:	str	x2, [x0, #16]
  41fbc4:	mov	x0, x19
  41fbc8:	ubfx	x20, x1, #2, #1
  41fbcc:	bl	4187a8 <ferror@plt+0x15e38>
  41fbd0:	ldr	x0, [x19]
  41fbd4:	cbz	x0, 41fbdc <ferror@plt+0x1d26c>
  41fbd8:	cbz	w20, 41fb68 <ferror@plt+0x1d1f8>
  41fbdc:	mov	w20, #0x0                   	// #0
  41fbe0:	b	41fb8c <ferror@plt+0x1d21c>
  41fbe4:	mov	w20, #0x1                   	// #1
  41fbe8:	b	41fb8c <ferror@plt+0x1d21c>
  41fbec:	ldrb	w1, [x0, #4]
  41fbf0:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  41fbf4:	add	x2, x2, #0x190
  41fbf8:	lsl	x1, x1, #4
  41fbfc:	ldr	w1, [x2, x1]
  41fc00:	cmp	w1, #0x1
  41fc04:	b.eq	41fc18 <ferror@plt+0x1d2a8>  // b.none
  41fc08:	cmp	w1, #0x2
  41fc0c:	b.ne	41fc2c <ferror@plt+0x1d2bc>  // b.any
  41fc10:	ldr	w0, [x0, #8]
  41fc14:	ret
  41fc18:	ldr	x0, [x0, #8]
  41fc1c:	mov	w1, #0xa                   	// #10
  41fc20:	ldr	w0, [x0, #8]
  41fc24:	mul	w0, w0, w1
  41fc28:	b	41fc14 <ferror@plt+0x1d2a4>
  41fc2c:	mov	w0, #0x6                   	// #6
  41fc30:	b	41fc14 <ferror@plt+0x1d2a4>
  41fc34:	stp	x29, x30, [sp, #-48]!
  41fc38:	mov	x29, sp
  41fc3c:	stp	x21, x22, [sp, #32]
  41fc40:	mov	x21, x1
  41fc44:	ldr	x22, [x1]
  41fc48:	stp	x19, x20, [sp, #16]
  41fc4c:	mov	x19, x0
  41fc50:	mov	x20, #0x0                   	// #0
  41fc54:	ldr	w0, [x21, #8]
  41fc58:	cmp	x0, x20
  41fc5c:	b.ls	41fc90 <ferror@plt+0x1d320>  // b.plast
  41fc60:	ldrb	w0, [x22, x20]
  41fc64:	add	x1, x22, x20
  41fc68:	tbz	w0, #7, 41fc88 <ferror@plt+0x1d318>
  41fc6c:	sub	x20, x20, #0x1
  41fc70:	mov	x0, x19
  41fc74:	add	x19, x19, #0xa
  41fc78:	bl	41ed48 <ferror@plt+0x1c3d8>
  41fc7c:	add	x20, x0, x20
  41fc80:	add	x20, x20, #0x1
  41fc84:	b	41fc54 <ferror@plt+0x1d2e4>
  41fc88:	strb	w0, [x19], #1
  41fc8c:	b	41fc80 <ferror@plt+0x1d310>
  41fc90:	mov	x0, x19
  41fc94:	ldp	x19, x20, [sp, #16]
  41fc98:	ldp	x21, x22, [sp, #32]
  41fc9c:	ldp	x29, x30, [sp], #48
  41fca0:	ret
  41fca4:	stp	x29, x30, [sp, #-32]!
  41fca8:	mov	x29, sp
  41fcac:	stp	x19, x20, [sp, #16]
  41fcb0:	mov	x20, x1
  41fcb4:	mov	x19, x2
  41fcb8:	ldrb	w4, [x1, #4]
  41fcbc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  41fcc0:	ldrb	w2, [x20, #4]
  41fcc4:	add	x1, x1, #0x190
  41fcc8:	lsl	x5, x2, #4
  41fccc:	ldr	w6, [x1, x5]
  41fcd0:	cmp	w6, #0x3
  41fcd4:	b.hi	41fd58 <ferror@plt+0x1d3e8>  // b.pmore
  41fcd8:	adrp	x5, 453000 <_obstack_memory_used@@Base+0x19198>
  41fcdc:	and	w3, w3, #0xff
  41fce0:	add	x5, x5, #0x60
  41fce4:	ldrb	w5, [x5, w6, uxtw]
  41fce8:	adr	x6, 41fcf4 <ferror@plt+0x1d384>
  41fcec:	add	x5, x6, w5, sxtb #2
  41fcf0:	br	x5
  41fcf4:	ldrh	w0, [x20, #6]
  41fcf8:	tbz	w0, #1, 41fd24 <ferror@plt+0x1d3b4>
  41fcfc:	add	x1, x1, #0x540
  41fd00:	sub	w4, w4, #0x25
  41fd04:	ldr	x2, [x1, w4, sxtw #3]
  41fd08:	mov	x0, #0x0                   	// #0
  41fd0c:	ldrb	w1, [x2, x0]
  41fd10:	add	x3, x19, x0
  41fd14:	cbz	w1, 41fdb0 <ferror@plt+0x1d440>
  41fd18:	strb	w1, [x19, x0]
  41fd1c:	add	x0, x0, #0x1
  41fd20:	b	41fd0c <ferror@plt+0x1d39c>
  41fd24:	tbnz	w0, #4, 41fd34 <ferror@plt+0x1d3c4>
  41fd28:	add	x1, x1, x2, lsl #4
  41fd2c:	ldr	x2, [x1, #8]
  41fd30:	b	41fd08 <ferror@plt+0x1d398>
  41fd34:	cbz	w3, 41fd68 <ferror@plt+0x1d3f8>
  41fd38:	ldr	x0, [x20, #16]
  41fd3c:	ldr	w2, [x0, #8]
  41fd40:	ldr	x1, [x0]
  41fd44:	mov	x0, x19
  41fd48:	bl	4022e0 <memcpy@plt>
  41fd4c:	ldr	x0, [x20, #16]
  41fd50:	ldr	w0, [x0, #8]
  41fd54:	add	x19, x19, x0
  41fd58:	mov	x0, x19
  41fd5c:	ldp	x19, x20, [sp, #16]
  41fd60:	ldp	x29, x30, [sp], #32
  41fd64:	ret
  41fd68:	mov	x0, x19
  41fd6c:	ldr	x1, [x20, #8]
  41fd70:	ldp	x19, x20, [sp, #16]
  41fd74:	ldp	x29, x30, [sp], #32
  41fd78:	b	41fc34 <ferror@plt+0x1d2c4>
  41fd7c:	ldr	w2, [x20, #8]
  41fd80:	mov	x0, x19
  41fd84:	ldr	x1, [x20, #16]
  41fd88:	bl	4022e0 <memcpy@plt>
  41fd8c:	ldr	w0, [x20, #8]
  41fd90:	b	41fd54 <ferror@plt+0x1d3e4>
  41fd94:	add	x1, x1, x2, lsl #4
  41fd98:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  41fd9c:	add	x2, x2, #0xb99
  41fda0:	ldr	x3, [x1, #8]
  41fda4:	mov	w1, #0x4                   	// #4
  41fda8:	bl	419440 <ferror@plt+0x16ad0>
  41fdac:	b	41fd58 <ferror@plt+0x1d3e8>
  41fdb0:	mov	x19, x3
  41fdb4:	b	41fd58 <ferror@plt+0x1d3e8>
  41fdb8:	stp	x29, x30, [sp, #-48]!
  41fdbc:	mov	x29, sp
  41fdc0:	stp	x19, x20, [sp, #16]
  41fdc4:	mov	x20, x0
  41fdc8:	stp	x21, x22, [sp, #32]
  41fdcc:	mov	x21, x1
  41fdd0:	ldr	w1, [x0, #1192]
  41fdd4:	ldr	w0, [x2]
  41fdd8:	cmp	w1, w0
  41fddc:	b.ge	41fe64 <ferror@plt+0x1d4f4>  // b.tcont
  41fde0:	ldrb	w0, [x20, #18]
  41fde4:	cbnz	w0, 41fe64 <ferror@plt+0x1d4f4>
  41fde8:	mov	x22, x2
  41fdec:	mov	x0, x21
  41fdf0:	bl	41fbec <ferror@plt+0x1d27c>
  41fdf4:	mov	w0, w0
  41fdf8:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  41fdfc:	mov	x19, x0
  41fe00:	mov	x2, x0
  41fe04:	mov	x1, x21
  41fe08:	mov	x0, x20
  41fe0c:	mov	w3, #0x0                   	// #0
  41fe10:	bl	41fca4 <ferror@plt+0x1d334>
  41fe14:	sub	x5, x0, x19
  41fe18:	ldr	w0, [x22]
  41fe1c:	mov	x6, x19
  41fe20:	cmp	w0, #0x1
  41fe24:	b.ne	41fe58 <ferror@plt+0x1d4e8>  // b.any
  41fe28:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41fe2c:	add	x4, x4, #0xbae
  41fe30:	ldr	w2, [x21]
  41fe34:	mov	x0, x20
  41fe38:	mov	w3, #0x0                   	// #0
  41fe3c:	mov	w1, #0x10                  	// #16
  41fe40:	bl	41966c <ferror@plt+0x16cfc>
  41fe44:	mov	x0, x19
  41fe48:	ldp	x19, x20, [sp, #16]
  41fe4c:	ldp	x21, x22, [sp, #32]
  41fe50:	ldp	x29, x30, [sp], #48
  41fe54:	b	402730 <free@plt>
  41fe58:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  41fe5c:	add	x4, x4, #0xbc4
  41fe60:	b	41fe30 <ferror@plt+0x1d4c0>
  41fe64:	ldp	x19, x20, [sp, #16]
  41fe68:	ldp	x21, x22, [sp, #32]
  41fe6c:	ldp	x29, x30, [sp], #48
  41fe70:	ret
  41fe74:	mov	w2, w0
  41fe78:	and	w3, w1, #0xff
  41fe7c:	tst	w1, #0x2
  41fe80:	b.eq	41fe9c <ferror@plt+0x1d52c>  // b.none
  41fe84:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  41fe88:	add	x0, x0, #0x190
  41fe8c:	sub	w2, w2, #0x25
  41fe90:	add	x0, x0, #0x540
  41fe94:	ldr	x0, [x0, w2, sxtw #3]
  41fe98:	ret
  41fe9c:	tbz	w3, #4, 41fea4 <ferror@plt+0x1d534>
  41fea0:	b	42b874 <ferror@plt+0x28f04>
  41fea4:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  41fea8:	add	x0, x0, #0x190
  41feac:	add	x2, x0, w2, sxtw #4
  41feb0:	ldr	x0, [x2, #8]
  41feb4:	b	41fe98 <ferror@plt+0x1d528>
  41feb8:	stp	x29, x30, [sp, #-64]!
  41febc:	mov	x29, sp
  41fec0:	stp	x19, x20, [sp, #16]
  41fec4:	mov	x20, x0
  41fec8:	ldrb	w2, [x0, #4]
  41fecc:	stp	x21, x22, [sp, #32]
  41fed0:	mov	x21, x1
  41fed4:	ldrb	w1, [x20, #4]
  41fed8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  41fedc:	add	x0, x0, #0x190
  41fee0:	lsl	x3, x1, #4
  41fee4:	add	x1, x0, x1, lsl #4
  41fee8:	ldr	w3, [x0, x3]
  41feec:	cmp	w3, #0x1
  41fef0:	b.eq	41ff44 <ferror@plt+0x1d5d4>  // b.none
  41fef4:	cmp	w3, #0x2
  41fef8:	b.eq	41ffac <ferror@plt+0x1d63c>  // b.none
  41fefc:	cbnz	w3, 41ff28 <ferror@plt+0x1d5b8>
  41ff00:	ldrh	w3, [x20, #6]
  41ff04:	tbz	w3, #1, 41ff38 <ferror@plt+0x1d5c8>
  41ff08:	add	x0, x0, #0x540
  41ff0c:	sub	w1, w2, #0x25
  41ff10:	ldr	x19, [x0, w1, sxtw #3]
  41ff14:	ldrb	w0, [x19]
  41ff18:	mov	x1, x21
  41ff1c:	bl	402430 <putc_unlocked@plt>
  41ff20:	ldrb	w0, [x19, #1]!
  41ff24:	cbnz	w0, 41ff18 <ferror@plt+0x1d5a8>
  41ff28:	ldp	x19, x20, [sp, #16]
  41ff2c:	ldp	x21, x22, [sp, #32]
  41ff30:	ldp	x29, x30, [sp], #64
  41ff34:	ret
  41ff38:	tbnz	w3, #4, 41ff44 <ferror@plt+0x1d5d4>
  41ff3c:	ldr	x19, [x1, #8]
  41ff40:	b	41ff14 <ferror@plt+0x1d5a4>
  41ff44:	ldr	x0, [x20, #8]
  41ff48:	mov	x19, #0x0                   	// #0
  41ff4c:	ldr	x22, [x0]
  41ff50:	ldr	x0, [x20, #8]
  41ff54:	ldr	w1, [x0, #8]
  41ff58:	cmp	x1, x19
  41ff5c:	b.ls	41ff28 <ferror@plt+0x1d5b8>  // b.plast
  41ff60:	ldrb	w2, [x22, x19]
  41ff64:	add	x1, x22, x19
  41ff68:	tbz	w2, #7, 41ff98 <ferror@plt+0x1d628>
  41ff6c:	add	x0, sp, #0x30
  41ff70:	sub	x19, x19, #0x1
  41ff74:	bl	41ed48 <ferror@plt+0x1c3d8>
  41ff78:	add	x19, x0, x19
  41ff7c:	mov	x3, x21
  41ff80:	add	x0, sp, #0x30
  41ff84:	mov	x2, #0xa                   	// #10
  41ff88:	mov	x1, #0x1                   	// #1
  41ff8c:	bl	402310 <fwrite_unlocked@plt>
  41ff90:	add	x19, x19, #0x1
  41ff94:	b	41ff50 <ferror@plt+0x1d5e0>
  41ff98:	ldr	x0, [x0]
  41ff9c:	mov	x1, x21
  41ffa0:	ldrb	w0, [x0, x19]
  41ffa4:	bl	402830 <fputc_unlocked@plt>
  41ffa8:	b	41ff90 <ferror@plt+0x1d620>
  41ffac:	ldr	w2, [x20, #8]
  41ffb0:	mov	x3, x21
  41ffb4:	ldr	x0, [x20, #16]
  41ffb8:	mov	x1, #0x1                   	// #1
  41ffbc:	bl	402310 <fwrite_unlocked@plt>
  41ffc0:	b	41ff28 <ferror@plt+0x1d5b8>
  41ffc4:	ldr	w3, [x0, #4]
  41ffc8:	ldr	w2, [x1, #4]
  41ffcc:	and	w3, w3, #0xffff00ff
  41ffd0:	and	w2, w2, #0xffff00ff
  41ffd4:	cmp	w3, w2
  41ffd8:	b.ne	4200a0 <ferror@plt+0x1d730>  // b.any
  41ffdc:	ldrb	w2, [x0, #4]
  41ffe0:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x19198>
  41ffe4:	add	x3, x3, #0x190
  41ffe8:	ldrb	w4, [x0, #4]
  41ffec:	lsl	x2, x2, #4
  41fff0:	ldr	w2, [x3, x2]
  41fff4:	cmp	w2, #0x2
  41fff8:	b.eq	420068 <ferror@plt+0x1d6f8>  // b.none
  41fffc:	cmp	w2, #0x3
  420000:	b.eq	420028 <ferror@plt+0x1d6b8>  // b.none
  420004:	cmp	w2, #0x1
  420008:	b.eq	420058 <ferror@plt+0x1d6e8>  // b.none
  42000c:	cmp	w4, #0x26
  420010:	b.ne	420050 <ferror@plt+0x1d6e0>  // b.any
  420014:	ldr	w2, [x0, #8]
  420018:	ldr	w0, [x1, #8]
  42001c:	cmp	w2, w0
  420020:	cset	w0, eq  // eq = none
  420024:	ret
  420028:	cmp	w4, #0x50
  42002c:	b.ne	420050 <ferror@plt+0x1d6e0>  // b.any
  420030:	ldr	w3, [x0, #8]
  420034:	ldr	w2, [x1, #8]
  420038:	cmp	w3, w2
  42003c:	b.ne	4200a0 <ferror@plt+0x1d730>  // b.any
  420040:	ldr	x2, [x0, #16]
  420044:	ldr	x0, [x1, #16]
  420048:	cmp	x2, x0
  42004c:	b	420020 <ferror@plt+0x1d6b0>
  420050:	mov	w0, #0x1                   	// #1
  420054:	ret
  420058:	ldr	x3, [x0, #8]
  42005c:	ldr	x2, [x1, #8]
  420060:	cmp	x3, x2
  420064:	b	42003c <ferror@plt+0x1d6cc>
  420068:	ldr	w2, [x0, #8]
  42006c:	ldr	w3, [x1, #8]
  420070:	cmp	w2, w3
  420074:	b.ne	4200a0 <ferror@plt+0x1d730>  // b.any
  420078:	stp	x29, x30, [sp, #-16]!
  42007c:	mov	w2, w2
  420080:	mov	x29, sp
  420084:	ldr	x0, [x0, #16]
  420088:	ldr	x1, [x1, #16]
  42008c:	bl	402690 <memcmp@plt>
  420090:	cmp	w0, #0x0
  420094:	cset	w0, eq  // eq = none
  420098:	ldp	x29, x30, [sp], #16
  42009c:	ret
  4200a0:	mov	w0, #0x0                   	// #0
  4200a4:	ret
  4200a8:	mov	x7, x0
  4200ac:	ldrh	w0, [x1, #6]
  4200b0:	ldrb	w5, [x1, #4]
  4200b4:	mov	w4, #0x35                  	// #53
  4200b8:	ldrb	w8, [x2, #4]
  4200bc:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x19198>
  4200c0:	tst	x0, #0x10
  4200c4:	ldrh	w0, [x2, #6]
  4200c8:	csel	w5, w5, w4, eq  // eq = none
  4200cc:	add	x6, x6, #0x190
  4200d0:	tst	x0, #0x10
  4200d4:	csel	w4, w8, w4, eq  // eq = none
  4200d8:	tbz	w0, #1, 420114 <ferror@plt+0x1d7a4>
  4200dc:	add	x0, x6, #0x540
  4200e0:	sub	w3, w4, #0x25
  4200e4:	ldr	x0, [x0, w3, sxtw #3]
  4200e8:	ldrb	w3, [x0]
  4200ec:	cmp	w5, #0xd
  4200f0:	cset	w0, le
  4200f4:	cmp	w3, #0x3d
  4200f8:	csel	w0, w0, wzr, eq  // eq = none
  4200fc:	cbnz	w0, 420338 <ferror@plt+0x1d9c8>
  420100:	cmp	w5, #0x12
  420104:	b.hi	420170 <ferror@plt+0x1d800>  // b.pmore
  420108:	cmp	w5, #0x1
  42010c:	b.hi	42014c <ferror@plt+0x1d7dc>  // b.pmore
  420110:	ret
  420114:	sbfiz	x3, x4, #4, #32
  420118:	add	x0, x6, w4, sxtw #4
  42011c:	ldr	w3, [x6, x3]
  420120:	cbnz	w3, 42012c <ferror@plt+0x1d7bc>
  420124:	ldr	x0, [x0, #8]
  420128:	b	4200e8 <ferror@plt+0x1d778>
  42012c:	mov	w3, #0xffffffff            	// #-1
  420130:	b	4200ec <ferror@plt+0x1d77c>
  420134:	adrp	x9, 453000 <_obstack_memory_used@@Base+0x19198>
  420138:	add	x9, x9, #0x64
  42013c:	ldrb	w5, [x9, w5, uxtw]
  420140:	adr	x9, 42014c <ferror@plt+0x1d7dc>
  420144:	add	x5, x9, w5, sxtb #2
  420148:	br	x5
  42014c:	sub	w5, w5, #0x2
  420150:	cmp	w5, #0x10
  420154:	b.hi	420184 <ferror@plt+0x1d814>  // b.pmore
  420158:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  42015c:	add	x0, x0, #0x78
  420160:	ldrb	w0, [x0, w5, uxtw]
  420164:	adr	x1, 420170 <ferror@plt+0x1d800>
  420168:	add	x0, x1, w0, sxtb #2
  42016c:	br	x0
  420170:	cmp	w5, #0x25
  420174:	b.eq	420220 <ferror@plt+0x1d8b0>  // b.none
  420178:	sub	w5, w5, #0x2f
  42017c:	cmp	w5, #0x13
  420180:	b.ls	420134 <ferror@plt+0x1d7c4>  // b.plast
  420184:	mov	w0, #0x0                   	// #0
  420188:	b	420110 <ferror@plt+0x1d7a0>
  42018c:	cmp	w3, #0x3e
  420190:	cset	w0, eq  // eq = none
  420194:	b	420110 <ferror@plt+0x1d7a0>
  420198:	mov	x0, #0x2000000000          	// #137438953472
  42019c:	cmp	w3, #0x3d
  4201a0:	movk	x0, #0x1400, lsl #48
  4201a4:	lsr	x0, x0, x3
  4201a8:	mvn	x0, x0
  4201ac:	and	w0, w0, #0x1
  4201b0:	csinc	w0, w0, wzr, cc  // cc = lo, ul, last
  4201b4:	eor	w0, w0, #0x1
  4201b8:	b	420110 <ferror@plt+0x1d7a0>
  4201bc:	cmp	w3, #0x2b
  4201c0:	b	420190 <ferror@plt+0x1d820>
  4201c4:	cmp	w3, #0x2d
  4201c8:	mov	w0, #0x3e                  	// #62
  4201cc:	ccmp	w3, w0, #0x4, ne  // ne = any
  4201d0:	b	420190 <ferror@plt+0x1d820>
  4201d4:	cmp	w3, #0x2f
  4201d8:	mov	w0, #0x2a                  	// #42
  4201dc:	b	4201cc <ferror@plt+0x1d85c>
  4201e0:	cmp	w3, #0x26
  4201e4:	b	420190 <ferror@plt+0x1d820>
  4201e8:	cmp	w3, #0x7c
  4201ec:	b	420190 <ferror@plt+0x1d820>
  4201f0:	and	w3, w3, #0xfffffffb
  4201f4:	cmp	w3, #0x3a
  4201f8:	b	420190 <ferror@plt+0x1d820>
  4201fc:	cmp	w3, #0x2a
  420200:	b	420190 <ferror@plt+0x1d820>
  420204:	cmp	w3, #0x2e
  420208:	cset	w0, eq  // eq = none
  42020c:	cmp	w3, #0x25
  420210:	csinc	w0, w0, wzr, ne  // ne = any
  420214:	cbnz	w0, 420110 <ferror@plt+0x1d7a0>
  420218:	cmp	w4, #0x37
  42021c:	b	420190 <ferror@plt+0x1d820>
  420220:	cmp	w3, #0x23
  420224:	ccmp	w3, w5, #0x4, ne  // ne = any
  420228:	b	420190 <ferror@plt+0x1d820>
  42022c:	cmp	w4, #0x37
  420230:	b.ne	420280 <ferror@plt+0x1d910>  // b.any
  420234:	ldr	w5, [x2, #8]
  420238:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  42023c:	add	x1, x1, #0x21a
  420240:	mov	x0, #0x0                   	// #0
  420244:	mov	w6, #0x204                 	// #516
  420248:	cmp	w5, w0
  42024c:	b.ls	420338 <ferror@plt+0x1d9c8>  // b.plast
  420250:	ldr	x3, [x2, #16]
  420254:	ldrb	w8, [x3, x0]
  420258:	ldrb	w3, [x3, x0]
  42025c:	ldrh	w3, [x1, x3, lsl #1]
  420260:	tst	w6, w3
  420264:	b.ne	420278 <ferror@plt+0x1d908>  // b.any
  420268:	cmp	w8, #0x24
  42026c:	b.ne	420294 <ferror@plt+0x1d924>  // b.any
  420270:	ldrb	w3, [x7, #1146]
  420274:	cbz	w3, 420294 <ferror@plt+0x1d924>
  420278:	add	x0, x0, #0x1
  42027c:	b	420248 <ferror@plt+0x1d8d8>
  420280:	cmp	w4, #0x35
  420284:	cset	w0, eq  // eq = none
  420288:	cmp	w4, #0x38
  42028c:	csinc	w0, w0, wzr, ne  // ne = any
  420290:	cbnz	w0, 420110 <ferror@plt+0x1d7a0>
  420294:	cmp	w4, #0x3e
  420298:	b	420190 <ferror@plt+0x1d820>
  42029c:	and	w4, w4, #0xfffffffd
  4202a0:	cmp	w4, #0x35
  4202a4:	b.eq	420338 <ferror@plt+0x1d9c8>  // b.none
  4202a8:	cmp	w3, #0x2b
  4202ac:	b.eq	420338 <ferror@plt+0x1d9c8>  // b.none
  4202b0:	sub	w3, w3, #0x2d
  4202b4:	cmp	w3, #0x1
  4202b8:	cset	w0, ls  // ls = plast
  4202bc:	b	420110 <ferror@plt+0x1d7a0>
  4202c0:	ldr	x1, [x1, #16]
  4202c4:	ldrb	w1, [x1]
  4202c8:	cmp	w1, #0x5c
  4202cc:	b.ne	4202d8 <ferror@plt+0x1d968>  // b.any
  4202d0:	cmp	w4, #0x35
  4202d4:	b.eq	420338 <ferror@plt+0x1d9c8>  // b.none
  4202d8:	ldrb	w2, [x7, #1122]
  4202dc:	cbz	w2, 420110 <ferror@plt+0x1d7a0>
  4202e0:	cmp	w1, #0x40
  4202e4:	b.ne	420110 <ferror@plt+0x1d7a0>  // b.any
  4202e8:	cmp	w4, #0x35
  4202ec:	cset	w0, eq  // eq = none
  4202f0:	cmp	w4, #0x3e
  4202f4:	csinc	w0, w0, wzr, ne  // ne = any
  4202f8:	b	420110 <ferror@plt+0x1d7a0>
  4202fc:	ldrb	w1, [x7, #1161]
  420300:	cbz	w1, 420110 <ferror@plt+0x1d7a0>
  420304:	cmp	w4, #0x35
  420308:	b.eq	420338 <ferror@plt+0x1d9c8>  // b.none
  42030c:	sbfiz	x8, x8, #4, #32
  420310:	ldr	w1, [x6, x8]
  420314:	cmp	w1, #0x2
  420318:	b.ne	420110 <ferror@plt+0x1d7a0>  // b.any
  42031c:	ldr	x0, [x2, #16]
  420320:	ldrb	w1, [x0]
  420324:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  420328:	add	x0, x0, #0x21a
  42032c:	ldrh	w0, [x0, x1, lsl #1]
  420330:	ubfx	x0, x0, #9, #1
  420334:	b	420110 <ferror@plt+0x1d7a0>
  420338:	mov	w0, #0x1                   	// #1
  42033c:	b	420110 <ferror@plt+0x1d7a0>
  420340:	stp	x29, x30, [sp, #-48]!
  420344:	mov	x29, sp
  420348:	stp	x19, x20, [sp, #16]
  42034c:	mov	x20, x1
  420350:	str	x21, [sp, #32]
  420354:	mov	x21, x0
  420358:	bl	4287a8 <ferror@plt+0x25e38>
  42035c:	mov	x19, x0
  420360:	ldrb	w0, [x19, #4]
  420364:	mov	x1, x20
  420368:	cmp	w0, #0x16
  42036c:	b.eq	42039c <ferror@plt+0x1da2c>  // b.none
  420370:	mov	x0, x19
  420374:	bl	41feb8 <ferror@plt+0x1d548>
  420378:	mov	x0, x21
  42037c:	bl	4287a8 <ferror@plt+0x25e38>
  420380:	mov	x19, x0
  420384:	ldrh	w0, [x0, #6]
  420388:	tbz	w0, #0, 420360 <ferror@plt+0x1d9f0>
  42038c:	mov	x1, x20
  420390:	mov	w0, #0x20                  	// #32
  420394:	bl	402430 <putc_unlocked@plt>
  420398:	b	420360 <ferror@plt+0x1d9f0>
  42039c:	ldp	x19, x20, [sp, #16]
  4203a0:	mov	w0, #0xa                   	// #10
  4203a4:	ldr	x21, [sp, #32]
  4203a8:	ldp	x29, x30, [sp], #48
  4203ac:	b	402430 <putc_unlocked@plt>
  4203b0:	stp	x29, x30, [sp, #-80]!
  4203b4:	mov	x29, sp
  4203b8:	stp	x19, x20, [sp, #16]
  4203bc:	stp	x21, x22, [sp, #32]
  4203c0:	mov	x22, x0
  4203c4:	mov	x21, x1
  4203c8:	stp	x23, x24, [sp, #48]
  4203cc:	str	x25, [sp, #64]
  4203d0:	cbz	x1, 420498 <ferror@plt+0x1db28>
  4203d4:	mov	x0, x1
  4203d8:	bl	402330 <strlen@plt>
  4203dc:	mov	w19, w0
  4203e0:	add	w0, w19, #0x78
  4203e4:	add	w23, w19, #0x78
  4203e8:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  4203ec:	mov	x20, x0
  4203f0:	cbz	x21, 420408 <ferror@plt+0x1da98>
  4203f4:	add	w19, w19, #0x2
  4203f8:	mov	x2, x21
  4203fc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  420400:	add	x1, x1, #0xbd9
  420404:	bl	4023d0 <sprintf@plt>
  420408:	mov	x0, x22
  42040c:	bl	4287a8 <ferror@plt+0x25e38>
  420410:	mov	x21, x0
  420414:	mov	w25, #0x20                  	// #32
  420418:	ldrb	w0, [x21, #4]
  42041c:	mov	w24, w19
  420420:	cmp	w0, #0x16
  420424:	b.eq	4204a0 <ferror@plt+0x1db30>  // b.none
  420428:	add	w19, w19, #0x2
  42042c:	mov	x0, x21
  420430:	bl	41fbec <ferror@plt+0x1d27c>
  420434:	add	w19, w19, w0
  420438:	cmp	w19, w23
  42043c:	b.ls	42045c <ferror@plt+0x1daec>  // b.plast
  420440:	lsl	w1, w23, #1
  420444:	mov	x0, x20
  420448:	cmp	w19, w1
  42044c:	csel	w23, w19, w1, cs  // cs = hs, nlast
  420450:	csel	w1, w19, w1, cs  // cs = hs, nlast
  420454:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  420458:	mov	x20, x0
  42045c:	add	x2, x20, x24
  420460:	mov	x1, x21
  420464:	mov	w3, #0x0                   	// #0
  420468:	mov	x0, x22
  42046c:	bl	41fca4 <ferror@plt+0x1d334>
  420470:	sub	x24, x0, x20
  420474:	mov	x0, x22
  420478:	bl	4287a8 <ferror@plt+0x25e38>
  42047c:	mov	x21, x0
  420480:	ldrh	w0, [x0, #6]
  420484:	mov	w19, w24
  420488:	tbz	w0, #0, 420418 <ferror@plt+0x1daa8>
  42048c:	add	w19, w24, #0x1
  420490:	strb	w25, [x20, w24, uxtw]
  420494:	b	420418 <ferror@plt+0x1daa8>
  420498:	mov	w19, #0x0                   	// #0
  42049c:	b	4203e0 <ferror@plt+0x1da70>
  4204a0:	strb	wzr, [x20, x24]
  4204a4:	mov	x0, x20
  4204a8:	ldp	x19, x20, [sp, #16]
  4204ac:	ldp	x21, x22, [sp, #32]
  4204b0:	ldp	x23, x24, [sp, #48]
  4204b4:	ldr	x25, [sp, #64]
  4204b8:	ldp	x29, x30, [sp], #80
  4204bc:	ret
  4204c0:	mov	x2, x1
  4204c4:	mov	x3, x2
  4204c8:	ldr	x2, [x2]
  4204cc:	cbnz	x2, 4204c4 <ferror@plt+0x1db54>
  4204d0:	ldr	x2, [x0, #72]
  4204d4:	str	x2, [x3]
  4204d8:	str	x1, [x0, #72]
  4204dc:	ret
  4204e0:	add	x3, x1, x1, lsl #1
  4204e4:	add	x5, x0, #0x48
  4204e8:	mov	x2, #0x1f40                	// #8000
  4204ec:	ldr	x0, [x0, #72]
  4204f0:	add	x3, x2, x3, lsr #1
  4204f4:	cbnz	x0, 420540 <ferror@plt+0x1dbd0>
  4204f8:	stp	x29, x30, [sp, #-32]!
  4204fc:	mov	x29, sp
  420500:	str	x19, [sp, #16]
  420504:	mov	x19, #0x1f40                	// #8000
  420508:	cmp	x1, x19
  42050c:	csel	x19, x1, x19, cs  // cs = hs, nlast
  420510:	add	x19, x19, #0x7
  420514:	and	x19, x19, #0xfffffffffffffff8
  420518:	add	x0, x19, #0x20
  42051c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  420520:	mov	x1, x0
  420524:	add	x0, x0, x19
  420528:	stp	x1, x1, [x0, #8]
  42052c:	str	x0, [x0, #24]
  420530:	str	xzr, [x1, x19]
  420534:	ldr	x19, [sp, #16]
  420538:	ldp	x29, x30, [sp], #32
  42053c:	ret
  420540:	ldr	x4, [x0, #8]
  420544:	ldr	x2, [x0, #24]
  420548:	sub	x2, x2, x4
  42054c:	cmp	x2, x1
  420550:	b.cc	42055c <ferror@plt+0x1dbec>  // b.lo, b.ul, b.last
  420554:	cmp	x3, x2
  420558:	b.cs	420568 <ferror@plt+0x1dbf8>  // b.hs, b.nlast
  42055c:	mov	x5, x0
  420560:	ldr	x0, [x0]
  420564:	b	4204f4 <ferror@plt+0x1db84>
  420568:	ldr	x1, [x0]
  42056c:	str	x1, [x5]
  420570:	str	xzr, [x0]
  420574:	str	x4, [x0, #16]
  420578:	ret
  42057c:	stp	x29, x30, [sp, #-32]!
  420580:	mov	x29, sp
  420584:	stp	x19, x20, [sp, #16]
  420588:	mov	x19, x1
  42058c:	ldp	x1, x3, [x1, #16]
  420590:	sub	x1, x3, x1
  420594:	add	x1, x2, x1, lsl #1
  420598:	bl	4204e0 <ferror@plt+0x1db70>
  42059c:	ldp	x1, x2, [x19, #16]
  4205a0:	mov	x20, x0
  4205a4:	ldr	x0, [x0, #8]
  4205a8:	str	x20, [x19]
  4205ac:	sub	x2, x2, x1
  4205b0:	bl	4022e0 <memcpy@plt>
  4205b4:	mov	x0, x20
  4205b8:	ldp	x19, x20, [sp, #16]
  4205bc:	ldp	x29, x30, [sp], #32
  4205c0:	ret
  4205c4:	stp	x29, x30, [sp, #-80]!
  4205c8:	mov	x29, sp
  4205cc:	stp	x21, x22, [sp, #32]
  4205d0:	ldr	x22, [x3]
  4205d4:	stp	x19, x20, [sp, #16]
  4205d8:	mov	x20, x2
  4205dc:	stp	x23, x24, [sp, #48]
  4205e0:	mov	x23, x1
  4205e4:	mov	x24, x4
  4205e8:	stp	x25, x26, [sp, #64]
  4205ec:	mov	x25, x3
  4205f0:	ldr	x19, [x4]
  4205f4:	cbnz	x22, 420644 <ferror@plt+0x1dcd4>
  4205f8:	mov	x1, x2
  4205fc:	bl	4204e0 <ferror@plt+0x1db70>
  420600:	mov	x22, x0
  420604:	mov	x19, x0
  420608:	ldr	x0, [x19, #16]
  42060c:	mov	x2, x20
  420610:	mov	x1, x23
  420614:	bl	4022e0 <memcpy@plt>
  420618:	ldr	x2, [x19, #16]
  42061c:	add	x20, x2, x20
  420620:	str	x20, [x19, #16]
  420624:	str	x22, [x25]
  420628:	ldp	x21, x22, [sp, #32]
  42062c:	ldp	x25, x26, [sp, #64]
  420630:	str	x19, [x24]
  420634:	ldp	x19, x20, [sp, #16]
  420638:	ldp	x23, x24, [sp, #48]
  42063c:	ldp	x29, x30, [sp], #80
  420640:	ret
  420644:	mov	x26, x0
  420648:	ldp	x0, x21, [x19, #16]
  42064c:	sub	x21, x21, x0
  420650:	cmp	x21, x2
  420654:	b.cs	420608 <ferror@plt+0x1dc98>  // b.hs, b.nlast
  420658:	mov	x2, x21
  42065c:	bl	4022e0 <memcpy@plt>
  420660:	ldr	x0, [x19, #16]
  420664:	sub	x20, x20, x21
  420668:	mov	x1, x19
  42066c:	mov	x2, x20
  420670:	add	x0, x0, x21
  420674:	str	x0, [x19, #16]
  420678:	add	x23, x23, x21
  42067c:	mov	x0, x26
  420680:	bl	42057c <ferror@plt+0x1dc0c>
  420684:	mov	x19, x0
  420688:	b	420608 <ferror@plt+0x1dc98>
  42068c:	stp	x29, x30, [sp, #-48]!
  420690:	mov	x29, sp
  420694:	stp	x19, x20, [sp, #16]
  420698:	ldr	x20, [x1]
  42069c:	str	x21, [sp, #32]
  4206a0:	mov	x21, x1
  4206a4:	ldp	x1, x3, [x20, #16]
  4206a8:	sub	x1, x3, x1
  4206ac:	add	x1, x2, x1, lsl #1
  4206b0:	bl	4204e0 <ferror@plt+0x1db70>
  4206b4:	ldp	x1, x2, [x20, #16]
  4206b8:	mov	x19, x0
  4206bc:	ldr	x0, [x0, #8]
  4206c0:	sub	x2, x2, x1
  4206c4:	bl	4022e0 <memcpy@plt>
  4206c8:	str	x20, [x19]
  4206cc:	str	x19, [x21]
  4206d0:	ldp	x19, x20, [sp, #16]
  4206d4:	ldr	x21, [sp, #32]
  4206d8:	ldp	x29, x30, [sp], #48
  4206dc:	ret
  4206e0:	cbnz	x0, 4206e8 <ferror@plt+0x1dd78>
  4206e4:	ret
  4206e8:	stp	x29, x30, [sp, #-32]!
  4206ec:	mov	x29, sp
  4206f0:	str	x19, [sp, #16]
  4206f4:	ldp	x19, x0, [x0]
  4206f8:	bl	402730 <free@plt>
  4206fc:	mov	x0, x19
  420700:	cbnz	x19, 4206f4 <ferror@plt+0x1dd84>
  420704:	ldr	x19, [sp, #16]
  420708:	ldp	x29, x30, [sp], #32
  42070c:	ret
  420710:	stp	x29, x30, [sp, #-32]!
  420714:	mov	x29, sp
  420718:	ldr	x2, [x0, #64]
  42071c:	stp	x19, x20, [sp, #16]
  420720:	mov	x19, x1
  420724:	ldp	x3, x4, [x2, #16]
  420728:	sub	x4, x4, x3
  42072c:	cmp	x4, x1
  420730:	b.cs	420750 <ferror@plt+0x1dde0>  // b.hs, b.nlast
  420734:	mov	x20, x0
  420738:	bl	4204e0 <ferror@plt+0x1db70>
  42073c:	mov	x2, x0
  420740:	ldr	x3, [x0, #16]
  420744:	ldr	x0, [x20, #64]
  420748:	str	x0, [x2]
  42074c:	str	x2, [x20, #64]
  420750:	add	x19, x3, x19
  420754:	str	x19, [x2, #16]
  420758:	mov	x0, x3
  42075c:	ldp	x19, x20, [sp, #16]
  420760:	ldp	x29, x30, [sp], #32
  420764:	ret
  420768:	stp	x29, x30, [sp, #-64]!
  42076c:	mov	x29, sp
  420770:	stp	x23, x24, [sp, #48]
  420774:	mov	w24, w3
  420778:	mov	x23, x2
  42077c:	stp	x19, x20, [sp, #16]
  420780:	mov	x19, x1
  420784:	add	w1, w24, #0x1
  420788:	stp	x21, x22, [sp, #32]
  42078c:	mov	w22, w4
  420790:	bl	420710 <ferror@plt+0x1dda0>
  420794:	mov	x21, x0
  420798:	mov	x2, x24
  42079c:	mov	x1, x23
  4207a0:	bl	4022e0 <memcpy@plt>
  4207a4:	mov	x20, x24
  4207a8:	strb	wzr, [x21, x24]
  4207ac:	strb	w22, [x19, #4]
  4207b0:	ldp	x23, x24, [sp, #48]
  4207b4:	str	w20, [x19, #8]
  4207b8:	str	x21, [x19, #16]
  4207bc:	ldp	x19, x20, [sp, #16]
  4207c0:	ldp	x21, x22, [sp, #32]
  4207c4:	ldp	x29, x30, [sp], #64
  4207c8:	ret
  4207cc:	stp	x29, x30, [sp, #-208]!
  4207d0:	mov	x29, sp
  4207d4:	stp	x19, x20, [sp, #16]
  4207d8:	mov	x19, x2
  4207dc:	stp	x21, x22, [sp, #32]
  4207e0:	mov	x21, x1
  4207e4:	mov	w1, #0x55                  	// #85
  4207e8:	stp	x23, x24, [sp, #48]
  4207ec:	stp	x25, x26, [sp, #64]
  4207f0:	stp	x27, x28, [sp, #80]
  4207f4:	mov	x27, x0
  4207f8:	ldrb	w0, [x2]
  4207fc:	cmp	w0, #0x4c
  420800:	ccmp	w0, w1, #0x4, ne  // ne = any
  420804:	b.ne	4208b8 <ferror@plt+0x1df48>  // b.any
  420808:	ldrb	w22, [x2, #1]
  42080c:	add	x6, x2, #0x2
  420810:	cmp	w22, #0x52
  420814:	b.ne	421040 <ferror@plt+0x1e6d0>  // b.any
  420818:	ldr	x1, [x27]
  42081c:	stp	xzr, xzr, [sp, #144]
  420820:	cmp	w0, #0x4c
  420824:	ldr	w8, [x1, #56]
  420828:	ldr	x1, [x1, #48]
  42082c:	add	x28, x1, x8, lsl #4
  420830:	b.eq	4208ec <ferror@plt+0x1df7c>  // b.none
  420834:	cmp	w0, #0x55
  420838:	b.eq	4208f4 <ferror@plt+0x1df84>  // b.none
  42083c:	cmp	w0, #0x75
  420840:	b.ne	4208fc <ferror@plt+0x1df8c>  // b.any
  420844:	ldrb	w0, [x19, #1]
  420848:	mov	w22, #0x42                  	// #66
  42084c:	cmp	w0, #0x38
  420850:	mov	w0, #0x40                  	// #64
  420854:	csel	w22, w22, w0, eq  // eq = none
  420858:	add	x25, x6, #0x1
  42085c:	mov	x24, x19
  420860:	sub	x0, x25, x19
  420864:	mov	x23, #0x0                   	// #0
  420868:	mov	x20, #0x0                   	// #0
  42086c:	stp	wzr, wzr, [sp, #100]
  420870:	str	wzr, [sp, #108]
  420874:	str	x0, [sp, #112]
  420878:	ldr	x0, [x28]
  42087c:	cmp	x0, x25
  420880:	b.cc	42091c <ferror@plt+0x1dfac>  // b.lo, b.ul, b.last
  420884:	adrp	x26, 451000 <_obstack_memory_used@@Base+0x17198>
  420888:	add	x26, x26, #0xaaa
  42088c:	ldr	x0, [x28]
  420890:	cmp	x25, x0
  420894:	b.ne	420bf8 <ferror@plt+0x1e288>  // b.any
  420898:	ldr	w0, [x28, #8]
  42089c:	cmp	w0, #0x20
  4208a0:	b.eq	420928 <ferror@plt+0x1dfb8>  // b.none
  4208a4:	cmp	w0, #0x5c
  4208a8:	b.eq	420928 <ferror@plt+0x1dfb8>  // b.none
  4208ac:	cbnz	w0, 420a30 <ferror@plt+0x1e0c0>
  4208b0:	add	x28, x28, #0x10
  4208b4:	b	42088c <ferror@plt+0x1df1c>
  4208b8:	cmp	w0, #0x75
  4208bc:	b.eq	4208cc <ferror@plt+0x1df5c>  // b.none
  4208c0:	mov	w22, w0
  4208c4:	add	x6, x2, #0x1
  4208c8:	b	420810 <ferror@plt+0x1dea0>
  4208cc:	ldrb	w22, [x2, #1]
  4208d0:	cmp	w22, #0x38
  4208d4:	b.eq	4208e0 <ferror@plt+0x1df70>  // b.none
  4208d8:	add	x6, x2, #0x2
  4208dc:	b	420810 <ferror@plt+0x1dea0>
  4208e0:	ldrb	w22, [x2, #2]
  4208e4:	add	x6, x2, #0x3
  4208e8:	b	420810 <ferror@plt+0x1dea0>
  4208ec:	mov	w22, #0x3f                  	// #63
  4208f0:	b	420858 <ferror@plt+0x1dee8>
  4208f4:	mov	w22, #0x41                  	// #65
  4208f8:	b	420858 <ferror@plt+0x1dee8>
  4208fc:	mov	w22, #0x3e                  	// #62
  420900:	b	420858 <ferror@plt+0x1dee8>
  420904:	mov	w0, #0x2                   	// #2
  420908:	mov	x26, #0x0                   	// #0
  42090c:	str	w0, [sp, #100]
  420910:	str	wzr, [sp, #108]
  420914:	mov	x23, x26
  420918:	b	420878 <ferror@plt+0x1df08>
  42091c:	add	x28, x28, #0x10
  420920:	mov	x26, x23
  420924:	b	420914 <ferror@plt+0x1dfa4>
  420928:	sub	x5, x25, x24
  42092c:	mov	x1, x24
  420930:	mov	x2, x5
  420934:	add	x4, sp, #0x98
  420938:	add	x3, sp, #0x90
  42093c:	mov	x0, x27
  420940:	str	x5, [sp, #120]
  420944:	bl	4205c4 <ferror@plt+0x1dc54>
  420948:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  42094c:	add	x24, x1, #0x561
  420950:	mov	x2, #0x1                   	// #1
  420954:	add	x4, sp, #0x98
  420958:	add	x3, sp, #0x90
  42095c:	mov	x1, x24
  420960:	mov	x0, x27
  420964:	bl	4205c4 <ferror@plt+0x1dc54>
  420968:	ldr	x5, [sp, #120]
  42096c:	add	x20, x20, #0x1
  420970:	cmp	x23, #0x10
  420974:	add	x2, x20, x5
  420978:	b.hi	420994 <ferror@plt+0x1e024>  // b.pmore
  42097c:	cmp	x25, x24
  420980:	b.eq	420994 <ferror@plt+0x1e024>  // b.none
  420984:	add	x1, sp, #0xb8
  420988:	mov	w0, #0x5c                  	// #92
  42098c:	strb	w0, [x1, x23]
  420990:	add	x23, x23, #0x1
  420994:	ldr	w24, [x28, #8]
  420998:	add	x20, x2, #0x1
  42099c:	cmp	w24, #0x20
  4209a0:	b.ne	420a28 <ferror@plt+0x1e0b8>  // b.any
  4209a4:	mov	x0, x27
  4209a8:	add	x4, sp, #0x98
  4209ac:	add	x3, sp, #0x90
  4209b0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  4209b4:	mov	x2, #0x1                   	// #1
  4209b8:	add	x1, x1, #0x286
  4209bc:	bl	4205c4 <ferror@plt+0x1dc54>
  4209c0:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  4209c4:	cmp	x23, #0x10
  4209c8:	add	x1, x0, #0x286
  4209cc:	b.hi	4209e4 <ferror@plt+0x1e074>  // b.pmore
  4209d0:	cmp	x25, x1
  4209d4:	b.eq	4209e4 <ferror@plt+0x1e074>  // b.none
  4209d8:	add	x0, sp, #0xb8
  4209dc:	strb	w24, [x0, x23]
  4209e0:	add	x23, x23, #0x1
  4209e4:	add	x4, sp, #0x98
  4209e8:	add	x3, sp, #0x90
  4209ec:	mov	x1, x26
  4209f0:	mov	x0, x27
  4209f4:	mov	x2, #0x1                   	// #1
  4209f8:	bl	4205c4 <ferror@plt+0x1dc54>
  4209fc:	add	x20, x20, #0x1
  420a00:	mov	x24, x25
  420a04:	cmp	x23, #0x10
  420a08:	b.hi	4208b0 <ferror@plt+0x1df40>  // b.pmore
  420a0c:	cmp	x25, x26
  420a10:	b.eq	4208b0 <ferror@plt+0x1df40>  // b.none
  420a14:	add	x1, sp, #0xb8
  420a18:	mov	w0, #0xa                   	// #10
  420a1c:	strb	w0, [x1, x23]
  420a20:	add	x23, x23, #0x1
  420a24:	b	4208b0 <ferror@plt+0x1df40>
  420a28:	mov	x20, x2
  420a2c:	b	4209e4 <ferror@plt+0x1e074>
  420a30:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  420a34:	add	x1, x1, #0x7b4
  420a38:	ldrb	w1, [x1, w0, uxtw]
  420a3c:	cbz	w1, 420be8 <ferror@plt+0x1e278>
  420a40:	str	wzr, [x28, #8]
  420a44:	strb	w0, [sp, #143]
  420a48:	ldrb	w0, [x27, #1125]
  420a4c:	cbz	w0, 4208b0 <ferror@plt+0x1df40>
  420a50:	sub	x2, x25, x24
  420a54:	mov	x1, x24
  420a58:	add	x4, sp, #0x98
  420a5c:	add	x3, sp, #0x90
  420a60:	mov	x0, x27
  420a64:	str	x2, [sp, #120]
  420a68:	bl	4205c4 <ferror@plt+0x1dc54>
  420a6c:	ldr	x2, [sp, #120]
  420a70:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  420a74:	add	x24, x1, #0x28f
  420a78:	add	x4, sp, #0x98
  420a7c:	add	x3, sp, #0x90
  420a80:	mov	x1, x24
  420a84:	mov	x0, x27
  420a88:	add	x20, x20, x2
  420a8c:	mov	x2, #0x2                   	// #2
  420a90:	bl	4205c4 <ferror@plt+0x1dc54>
  420a94:	cmp	x23, #0x10
  420a98:	b.hi	420ab4 <ferror@plt+0x1e144>  // b.pmore
  420a9c:	cmp	x25, x24
  420aa0:	b.eq	420ab4 <ferror@plt+0x1e144>  // b.none
  420aa4:	add	x1, sp, #0xb8
  420aa8:	mov	w0, #0x3f3f                	// #16191
  420aac:	strh	w0, [x1, x23]
  420ab0:	add	x23, x23, #0x2
  420ab4:	ldrb	w0, [sp, #143]
  420ab8:	add	x20, x20, #0x3
  420abc:	cmp	w0, #0x2f
  420ac0:	b.ne	420b48 <ferror@plt+0x1e1d8>  // b.any
  420ac4:	ldr	x0, [x28, #16]
  420ac8:	cmp	x25, x0
  420acc:	b.ne	420b48 <ferror@plt+0x1e1d8>  // b.any
  420ad0:	ldr	w0, [x28, #24]
  420ad4:	cmp	w0, #0x5c
  420ad8:	b.eq	420afc <ferror@plt+0x1e18c>  // b.none
  420adc:	cmp	w0, #0x20
  420ae0:	b.eq	420afc <ferror@plt+0x1e18c>  // b.none
  420ae4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  420ae8:	add	x2, x2, #0xbde
  420aec:	mov	w1, #0x6e1                 	// #1761
  420af0:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  420af4:	add	x0, x0, #0x943
  420af8:	bl	402980 <ferror@plt+0x10>
  420afc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  420b00:	add	x24, x1, #0x7e7
  420b04:	mov	x2, #0x1                   	// #1
  420b08:	add	x4, sp, #0x98
  420b0c:	add	x3, sp, #0x90
  420b10:	mov	x1, x24
  420b14:	mov	x0, x27
  420b18:	bl	4205c4 <ferror@plt+0x1dc54>
  420b1c:	mov	x2, x20
  420b20:	cmp	x23, #0x10
  420b24:	b.hi	420b40 <ferror@plt+0x1e1d0>  // b.pmore
  420b28:	cmp	x25, x24
  420b2c:	b.eq	420b40 <ferror@plt+0x1e1d0>  // b.none
  420b30:	add	x1, sp, #0xb8
  420b34:	mov	w0, #0x2f                  	// #47
  420b38:	strb	w0, [x1, x23]
  420b3c:	add	x23, x23, #0x1
  420b40:	add	x28, x28, #0x10
  420b44:	b	420994 <ferror@plt+0x1e024>
  420b48:	add	x26, sp, #0x8f
  420b4c:	add	x4, sp, #0x98
  420b50:	add	x3, sp, #0x90
  420b54:	mov	x1, x26
  420b58:	mov	x0, x27
  420b5c:	mov	x2, #0x1                   	// #1
  420b60:	bl	4205c4 <ferror@plt+0x1dc54>
  420b64:	add	x25, x25, #0x1
  420b68:	cmp	x23, #0x10
  420b6c:	b.hi	420b88 <ferror@plt+0x1e218>  // b.pmore
  420b70:	cmp	x25, x26
  420b74:	b.eq	420b88 <ferror@plt+0x1e218>  // b.none
  420b78:	add	x1, sp, #0xb8
  420b7c:	ldrb	w0, [sp, #143]
  420b80:	strb	w0, [x1, x23]
  420b84:	add	x23, x23, #0x1
  420b88:	ldrb	w0, [sp, #143]
  420b8c:	mov	x24, x25
  420b90:	ldr	w1, [sp, #100]
  420b94:	cbnz	w1, 420d28 <ferror@plt+0x1e3b8>
  420b98:	ldr	w0, [sp, #104]
  420b9c:	mov	x3, #0xffffffff77ffffff    	// #-2281701377
  420ba0:	mov	x4, #0xfcee00000000        	// #278099132416000
  420ba4:	mov	x2, #0x1                   	// #1
  420ba8:	movk	x3, #0x3fff, lsl #48
  420bac:	movk	x4, #0xffff, lsl #48
  420bb0:	str	w0, [sp, #104]
  420bb4:	cmp	x23, x0
  420bb8:	b.ls	420920 <ferror@plt+0x1dfb0>  // b.plast
  420bbc:	add	x1, sp, #0xb8
  420bc0:	ldrb	w5, [x1, x0]
  420bc4:	add	x1, sp, #0xa0
  420bc8:	cmp	w5, #0x3f
  420bcc:	strb	w5, [x1, x0]
  420bd0:	b.hi	420c14 <ferror@plt+0x1e2a4>  // b.pmore
  420bd4:	cmp	w5, #0x20
  420bd8:	b.ls	420c30 <ferror@plt+0x1e2c0>  // b.plast
  420bdc:	lsl	x1, x2, x5
  420be0:	tst	x1, x4
  420be4:	b	420c2c <ferror@plt+0x1e2bc>
  420be8:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  420bec:	mov	w1, #0x6f0                 	// #1776
  420bf0:	add	x2, x2, #0xbde
  420bf4:	b	420af0 <ferror@plt+0x1e180>
  420bf8:	ldrb	w0, [x25], #1
  420bfc:	cmp	x23, #0x10
  420c00:	b.hi	420b90 <ferror@plt+0x1e220>  // b.pmore
  420c04:	add	x1, sp, #0xb8
  420c08:	strb	w0, [x1, x23]
  420c0c:	add	x23, x23, #0x1
  420c10:	b	420b90 <ferror@plt+0x1e220>
  420c14:	sub	w1, w5, #0x41
  420c18:	and	w1, w1, #0xff
  420c1c:	cmp	w1, #0x3d
  420c20:	b.hi	420c30 <ferror@plt+0x1e2c0>  // b.pmore
  420c24:	lsl	x1, x2, x1
  420c28:	tst	x1, x3
  420c2c:	b.ne	420cc8 <ferror@plt+0x1e358>  // b.any
  420c30:	cmp	w5, #0x28
  420c34:	b.eq	420d08 <ferror@plt+0x1e398>  // b.none
  420c38:	ldr	x0, [x27]
  420c3c:	ldr	w2, [x21]
  420c40:	ldr	x3, [x0, #8]
  420c44:	ldr	w0, [sp, #104]
  420c48:	sub	x3, x25, x3
  420c4c:	add	w3, w3, #0x1
  420c50:	cmp	w0, #0x10
  420c54:	b.ne	420cdc <ferror@plt+0x1e36c>  // b.any
  420c58:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  420c5c:	add	x4, x4, #0xbed
  420c60:	mov	x0, x27
  420c64:	mov	w1, #0x3                   	// #3
  420c68:	bl	4195fc <ferror@plt+0x16c8c>
  420c6c:	ldr	x0, [sp, #112]
  420c70:	mov	x2, x19
  420c74:	ldr	x1, [x27]
  420c78:	sub	x0, x0, #0x1
  420c7c:	add	x0, x19, x0
  420c80:	mov	w4, #0x3d                  	// #61
  420c84:	str	x0, [x1]
  420c88:	mov	x1, x21
  420c8c:	ldr	w0, [sp, #112]
  420c90:	sub	w3, w0, #0x1
  420c94:	mov	x0, x27
  420c98:	bl	420768 <ferror@plt+0x1ddf8>
  420c9c:	ldr	x1, [sp, #144]
  420ca0:	cbz	x1, 420cac <ferror@plt+0x1e33c>
  420ca4:	mov	x0, x27
  420ca8:	bl	4204c0 <ferror@plt+0x1db50>
  420cac:	ldp	x19, x20, [sp, #16]
  420cb0:	ldp	x21, x22, [sp, #32]
  420cb4:	ldp	x23, x24, [sp, #48]
  420cb8:	ldp	x25, x26, [sp, #64]
  420cbc:	ldp	x27, x28, [sp, #80]
  420cc0:	ldp	x29, x30, [sp], #208
  420cc4:	ret
  420cc8:	ldr	w1, [sp, #104]
  420ccc:	cmp	w1, #0xf
  420cd0:	b.hi	420c30 <ferror@plt+0x1e2c0>  // b.pmore
  420cd4:	add	x0, x0, #0x1
  420cd8:	b	420bb0 <ferror@plt+0x1e240>
  420cdc:	cmp	w5, #0xa
  420ce0:	b.ne	420cf0 <ferror@plt+0x1e380>  // b.any
  420ce4:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  420ce8:	add	x4, x4, #0xc1c
  420cec:	b	420c60 <ferror@plt+0x1e2f0>
  420cf0:	mov	x0, x27
  420cf4:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  420cf8:	mov	w1, #0x3                   	// #3
  420cfc:	add	x4, x4, #0xc45
  420d00:	bl	4195fc <ferror@plt+0x16c8c>
  420d04:	b	420c6c <ferror@plt+0x1e2fc>
  420d08:	ldr	w1, [sp, #104]
  420d0c:	add	x2, sp, #0xa0
  420d10:	mov	w0, #0x22                  	// #34
  420d14:	mov	x26, #0x11                  	// #17
  420d18:	strb	w0, [x2, w1, uxtw]
  420d1c:	mov	w0, #0x1                   	// #1
  420d20:	str	w0, [sp, #100]
  420d24:	b	420914 <ferror@plt+0x1dfa4>
  420d28:	ldr	w1, [sp, #100]
  420d2c:	cmp	w1, #0x2
  420d30:	b.ne	420d80 <ferror@plt+0x1e410>  // b.any
  420d34:	ldr	w26, [sp, #108]
  420d38:	ldr	w1, [sp, #104]
  420d3c:	str	w26, [sp, #108]
  420d40:	cmp	w1, w26
  420d44:	b.cc	420de0 <ferror@plt+0x1e470>  // b.lo, b.ul, b.last
  420d48:	cmp	x26, x23
  420d4c:	b.cs	421294 <ferror@plt+0x1e924>  // b.hs, b.nlast
  420d50:	add	x1, sp, #0xb8
  420d54:	add	x2, sp, #0xa0
  420d58:	ldrb	w1, [x1, x26]
  420d5c:	add	x26, x26, #0x1
  420d60:	add	x2, x26, x2
  420d64:	ldurb	w2, [x2, #-1]
  420d68:	cmp	w2, w1
  420d6c:	b.eq	420d38 <ferror@plt+0x1e3c8>  // b.none
  420d70:	mov	w1, #0x1                   	// #1
  420d74:	mov	x26, #0x11                  	// #17
  420d78:	str	w1, [sp, #100]
  420d7c:	b	420d84 <ferror@plt+0x1e414>
  420d80:	mov	x26, x23
  420d84:	cmp	w0, #0x29
  420d88:	b.eq	420904 <ferror@plt+0x1df94>  // b.none
  420d8c:	cmp	w0, #0xa
  420d90:	b.ne	420914 <ferror@plt+0x1dfa4>  // b.any
  420d94:	ldrb	w0, [x27, #16]
  420d98:	sub	x23, x25, #0x1
  420d9c:	cbnz	w0, 420dbc <ferror@plt+0x1e44c>
  420da0:	ldrb	w0, [x27, #25]
  420da4:	cbz	w0, 420e70 <ferror@plt+0x1e500>
  420da8:	ldr	x0, [x27]
  420dac:	ldr	x1, [x0, #16]
  420db0:	ldr	x0, [x0, #32]
  420db4:	cmp	x1, x0
  420db8:	b.cc	420e70 <ferror@plt+0x1e500>  // b.lo, b.ul, b.last
  420dbc:	ldr	w2, [x21]
  420dc0:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  420dc4:	mov	x25, x23
  420dc8:	add	x4, x4, #0xc74
  420dcc:	mov	x0, x27
  420dd0:	mov	w3, #0x0                   	// #0
  420dd4:	mov	w1, #0x3                   	// #3
  420dd8:	mov	w22, #0x3d                  	// #61
  420ddc:	bl	4195fc <ferror@plt+0x16c8c>
  420de0:	ldrb	w0, [x27, #1161]
  420de4:	cbz	w0, 420e40 <ferror@plt+0x1e4d0>
  420de8:	ldrb	w0, [x25]
  420dec:	cmp	w0, #0x5f
  420df0:	b.ne	420e00 <ferror@plt+0x1e490>  // b.any
  420df4:	ldrb	w0, [x25, #1]
  420df8:	cmp	w0, #0x5f
  420dfc:	b.ne	420f80 <ferror@plt+0x1e610>  // b.any
  420e00:	mov	x1, x25
  420e04:	add	x0, x27, #0x440
  420e08:	bl	41f050 <ferror@plt+0x1c6e0>
  420e0c:	tst	w0, #0xff
  420e10:	b.eq	420f80 <ferror@plt+0x1e610>  // b.none
  420e14:	ldrb	w0, [x27, #1162]
  420e18:	cbz	w0, 420e40 <ferror@plt+0x1e4d0>
  420e1c:	ldrb	w0, [x27, #18]
  420e20:	cbnz	w0, 420e40 <ferror@plt+0x1e4d0>
  420e24:	ldr	w2, [x21]
  420e28:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  420e2c:	mov	x0, x27
  420e30:	add	x4, x4, #0xc8c
  420e34:	mov	w3, #0x0                   	// #0
  420e38:	mov	w1, #0x13                  	// #19
  420e3c:	bl	41966c <ferror@plt+0x16cfc>
  420e40:	ldr	x0, [x27]
  420e44:	str	x25, [x0]
  420e48:	sub	x25, x25, x24
  420e4c:	ldr	x0, [sp, #144]
  420e50:	cbnz	x0, 420fc0 <ferror@plt+0x1e650>
  420e54:	mov	w4, w22
  420e58:	mov	w3, w25
  420e5c:	mov	x2, x24
  420e60:	mov	x1, x21
  420e64:	mov	x0, x27
  420e68:	bl	420768 <ferror@plt+0x1ddf8>
  420e6c:	b	420cac <ferror@plt+0x1e33c>
  420e70:	sub	x25, x25, x24
  420e74:	mov	x1, x24
  420e78:	mov	x0, x27
  420e7c:	add	x4, sp, #0x98
  420e80:	add	x3, sp, #0x90
  420e84:	mov	x2, x25
  420e88:	bl	4205c4 <ferror@plt+0x1dc54>
  420e8c:	add	x20, x20, x25
  420e90:	ldr	x0, [x27]
  420e94:	ldr	x1, [x0]
  420e98:	ldr	x0, [x0, #32]
  420e9c:	cmp	x1, x0
  420ea0:	b.cs	420ee8 <ferror@plt+0x1e578>  // b.hs, b.nlast
  420ea4:	ldr	x0, [x27, #40]
  420ea8:	mov	w1, #0x18                  	// #24
  420eac:	ldr	w2, [x0, #12]
  420eb0:	ldr	w3, [x0, #60]
  420eb4:	sub	w2, w2, #0x1
  420eb8:	smull	x2, w2, w1
  420ebc:	ldr	x1, [x0]
  420ec0:	add	x4, x1, x2
  420ec4:	ldr	w1, [x1, x2]
  420ec8:	mov	w2, #0x0                   	// #0
  420ecc:	sub	w3, w3, w1
  420ed0:	ldrb	w1, [x4, #6]
  420ed4:	lsr	w3, w3, w1
  420ed8:	ldr	w1, [x4, #16]
  420edc:	add	w1, w1, #0x1
  420ee0:	add	w1, w3, w1
  420ee4:	bl	42333c <ferror@plt+0x209cc>
  420ee8:	ldr	x0, [x27]
  420eec:	mov	w1, #0x1                   	// #1
  420ef0:	str	x23, [x0]
  420ef4:	strb	w1, [x0, #104]
  420ef8:	mov	w1, #0x0                   	// #0
  420efc:	mov	x0, x27
  420f00:	bl	41f4d4 <ferror@plt+0x1cb64>
  420f04:	mov	x0, x27
  420f08:	bl	41fb50 <ferror@plt+0x1d1e0>
  420f0c:	tst	w0, #0xff
  420f10:	b.ne	420f64 <ferror@plt+0x1e5f4>  // b.any
  420f14:	mov	w0, #0x16                  	// #22
  420f18:	strb	w0, [x21, #4]
  420f1c:	ldr	x0, [x27, #40]
  420f20:	ldr	x1, [sp, #144]
  420f24:	ldr	w0, [x0, #60]
  420f28:	ldr	w5, [x21]
  420f2c:	str	w0, [x21]
  420f30:	mov	w0, #0x40                  	// #64
  420f34:	strh	w0, [x21, #6]
  420f38:	cbz	x1, 420f44 <ferror@plt+0x1e5d4>
  420f3c:	mov	x0, x27
  420f40:	bl	4204c0 <ferror@plt+0x1db50>
  420f44:	mov	w2, w5
  420f48:	mov	x0, x27
  420f4c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  420f50:	mov	w3, #0x0                   	// #0
  420f54:	add	x4, x4, #0xc74
  420f58:	mov	w1, #0x3                   	// #3
  420f5c:	bl	4195fc <ferror@plt+0x16c8c>
  420f60:	b	420cac <ferror@plt+0x1e33c>
  420f64:	ldr	x0, [x27]
  420f68:	ldr	w8, [x0, #56]
  420f6c:	ldr	x24, [x0]
  420f70:	ldr	x0, [x0, #48]
  420f74:	mov	x25, x24
  420f78:	add	x28, x0, x8, lsl #4
  420f7c:	b	420914 <ferror@plt+0x1dfa4>
  420f80:	ldrb	w0, [x25]
  420f84:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x1d198>
  420f88:	add	x19, x19, #0x21a
  420f8c:	ldrh	w0, [x19, x0, lsl #1]
  420f90:	tbz	w0, #9, 420e40 <ferror@plt+0x1e4d0>
  420f94:	mov	w0, w22
  420f98:	add	x25, x25, #0x1
  420f9c:	bl	41a88c <ferror@plt+0x17f1c>
  420fa0:	mov	w22, w0
  420fa4:	mov	w0, #0x204                 	// #516
  420fa8:	ldrb	w1, [x25]
  420fac:	ldrh	w1, [x19, x1, lsl #1]
  420fb0:	tst	w0, w1
  420fb4:	b.eq	420e40 <ferror@plt+0x1e4d0>  // b.none
  420fb8:	add	x25, x25, #0x1
  420fbc:	b	420fa8 <ferror@plt+0x1e638>
  420fc0:	add	x1, x20, #0x1
  420fc4:	mov	x0, x27
  420fc8:	add	x1, x1, x25
  420fcc:	bl	420710 <ferror@plt+0x1dda0>
  420fd0:	mov	x19, x0
  420fd4:	add	w20, w20, w25
  420fd8:	ldr	x0, [sp, #144]
  420fdc:	strb	w22, [x21, #4]
  420fe0:	str	w20, [x21, #8]
  420fe4:	str	x19, [x21, #16]
  420fe8:	str	x0, [sp, #152]
  420fec:	ldr	x0, [sp, #152]
  420ff0:	cbz	x0, 42101c <ferror@plt+0x1e6ac>
  420ff4:	ldp	x1, x2, [x0, #8]
  420ff8:	mov	x0, x19
  420ffc:	sub	x2, x2, x1
  421000:	bl	4022e0 <memcpy@plt>
  421004:	ldr	x0, [sp, #152]
  421008:	ldp	x2, x1, [x0, #8]
  42100c:	ldr	x0, [x0]
  421010:	sub	x1, x1, x2
  421014:	add	x19, x19, x1
  421018:	b	420fe8 <ferror@plt+0x1e678>
  42101c:	ldr	x1, [sp, #144]
  421020:	mov	x0, x27
  421024:	bl	4204c0 <ferror@plt+0x1db50>
  421028:	mov	x2, x25
  42102c:	mov	x1, x24
  421030:	mov	x0, x19
  421034:	bl	4022e0 <memcpy@plt>
  421038:	strb	wzr, [x19, x25]
  42103c:	b	420cac <ferror@plt+0x1e33c>
  421040:	cmp	w22, #0x22
  421044:	b.ne	4210ac <ferror@plt+0x1e73c>  // b.any
  421048:	cmp	w0, #0x4c
  42104c:	b.eq	4210e0 <ferror@plt+0x1e770>  // b.none
  421050:	cmp	w0, #0x55
  421054:	b.eq	4210e8 <ferror@plt+0x1e778>  // b.none
  421058:	cmp	w0, #0x75
  42105c:	b.ne	4210f0 <ferror@plt+0x1e780>  // b.any
  421060:	ldrb	w0, [x19, #1]
  421064:	mov	w20, #0x42                  	// #66
  421068:	cmp	w0, #0x38
  42106c:	mov	w0, #0x40                  	// #64
  421070:	csel	w20, w20, w0, eq  // eq = none
  421074:	mov	w0, #0x0                   	// #0
  421078:	mov	w2, #0x1                   	// #1
  42107c:	mov	x23, x6
  421080:	ldrb	w1, [x23], #1
  421084:	cmp	w1, #0x5c
  421088:	b.ne	42111c <ferror@plt+0x1e7ac>  // b.any
  42108c:	ldrb	w1, [x27, #19]
  421090:	cbnz	w1, 4210a4 <ferror@plt+0x1e734>
  421094:	ldrb	w1, [x6, #1]
  421098:	cmp	w1, #0xa
  42109c:	b.eq	4210a4 <ferror@plt+0x1e734>  // b.none
  4210a0:	add	x23, x6, #0x2
  4210a4:	mov	x6, x23
  4210a8:	b	42107c <ferror@plt+0x1e70c>
  4210ac:	cmp	w22, #0x27
  4210b0:	b.ne	4210f8 <ferror@plt+0x1e788>  // b.any
  4210b4:	cmp	w0, #0x4c
  4210b8:	b.eq	421104 <ferror@plt+0x1e794>  // b.none
  4210bc:	cmp	w0, #0x55
  4210c0:	b.eq	42110c <ferror@plt+0x1e79c>  // b.none
  4210c4:	cmp	w0, #0x75
  4210c8:	b.ne	421114 <ferror@plt+0x1e7a4>  // b.any
  4210cc:	ldrb	w0, [x19, #1]
  4210d0:	mov	w20, #0x3c                  	// #60
  4210d4:	cmp	w0, #0x38
  4210d8:	mov	w0, #0x3a                  	// #58
  4210dc:	b	421070 <ferror@plt+0x1e700>
  4210e0:	mov	w20, #0x3f                  	// #63
  4210e4:	b	421074 <ferror@plt+0x1e704>
  4210e8:	mov	w20, #0x41                  	// #65
  4210ec:	b	421074 <ferror@plt+0x1e704>
  4210f0:	mov	w20, #0x3e                  	// #62
  4210f4:	b	421074 <ferror@plt+0x1e704>
  4210f8:	mov	w20, #0x44                  	// #68
  4210fc:	mov	w22, #0x3e                  	// #62
  421100:	b	421074 <ferror@plt+0x1e704>
  421104:	mov	w20, #0x39                  	// #57
  421108:	b	421074 <ferror@plt+0x1e704>
  42110c:	mov	w20, #0x3b                  	// #59
  421110:	b	421074 <ferror@plt+0x1e704>
  421114:	mov	w20, #0x38                  	// #56
  421118:	b	421074 <ferror@plt+0x1e704>
  42111c:	cmp	w1, w22
  421120:	b.eq	42114c <ferror@plt+0x1e7dc>  // b.none
  421124:	cmp	w1, #0xa
  421128:	b.ne	421140 <ferror@plt+0x1e7d0>  // b.any
  42112c:	cmp	w22, #0x3e
  421130:	b.ne	42129c <ferror@plt+0x1e92c>  // b.any
  421134:	mov	w0, #0x3                   	// #3
  421138:	strb	w0, [x21, #4]
  42113c:	b	420cac <ferror@plt+0x1e33c>
  421140:	cmp	w1, #0x0
  421144:	csel	w0, w0, w2, ne  // ne = any
  421148:	b	4210a4 <ferror@plt+0x1e734>
  42114c:	cbz	w0, 42116c <ferror@plt+0x1e7fc>
  421150:	ldrb	w0, [x27, #18]
  421154:	cbnz	w0, 42116c <ferror@plt+0x1e7fc>
  421158:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  42115c:	mov	x0, x27
  421160:	add	x2, x2, #0xcdf
  421164:	mov	w1, #0x0                   	// #0
  421168:	bl	419440 <ferror@plt+0x16ad0>
  42116c:	cmp	w20, #0x3d
  421170:	b.ne	42119c <ferror@plt+0x1e82c>  // b.any
  421174:	ldr	w0, [x27, #1116]
  421178:	cmp	w0, #0x15
  42117c:	b.eq	421198 <ferror@plt+0x1e828>  // b.none
  421180:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  421184:	mov	w3, w22
  421188:	add	x2, x2, #0xd06
  42118c:	mov	x0, x27
  421190:	mov	w1, #0x2                   	// #2
  421194:	bl	419440 <ferror@plt+0x16ad0>
  421198:	mov	w20, #0x3d                  	// #61
  42119c:	ldrb	w0, [x27, #1161]
  4211a0:	cbz	w0, 421258 <ferror@plt+0x1e8e8>
  4211a4:	ldrb	w0, [x23]
  4211a8:	cmp	w0, #0x5f
  4211ac:	b.ne	4211bc <ferror@plt+0x1e84c>  // b.any
  4211b0:	ldrb	w0, [x23, #1]
  4211b4:	cmp	w0, #0x5f
  4211b8:	b.ne	421214 <ferror@plt+0x1e8a4>  // b.any
  4211bc:	mov	x1, x23
  4211c0:	add	x0, x27, #0x440
  4211c4:	bl	41f050 <ferror@plt+0x1c6e0>
  4211c8:	tst	w0, #0xff
  4211cc:	b.eq	421214 <ferror@plt+0x1e8a4>  // b.none
  4211d0:	ldrb	w0, [x27, #1162]
  4211d4:	cbz	w0, 4211fc <ferror@plt+0x1e88c>
  4211d8:	ldrb	w0, [x27, #18]
  4211dc:	cbnz	w0, 4211fc <ferror@plt+0x1e88c>
  4211e0:	ldr	w2, [x21]
  4211e4:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  4211e8:	add	x4, x4, #0xc8c
  4211ec:	mov	w3, #0x0                   	// #0
  4211f0:	mov	w1, #0x13                  	// #19
  4211f4:	mov	x0, x27
  4211f8:	bl	41966c <ferror@plt+0x16cfc>
  4211fc:	ldr	x0, [x27]
  421200:	mov	w4, w20
  421204:	sub	w3, w23, w19
  421208:	mov	x2, x19
  42120c:	str	x23, [x0]
  421210:	b	420e60 <ferror@plt+0x1e4f0>
  421214:	ldrb	w0, [x23]
  421218:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  42121c:	add	x22, x22, #0x21a
  421220:	ldrh	w0, [x22, x0, lsl #1]
  421224:	tbz	w0, #9, 4211fc <ferror@plt+0x1e88c>
  421228:	mov	w0, w20
  42122c:	add	x23, x23, #0x1
  421230:	bl	41a92c <ferror@plt+0x17fbc>
  421234:	bl	41a88c <ferror@plt+0x17f1c>
  421238:	mov	w20, w0
  42123c:	mov	w0, #0x204                 	// #516
  421240:	ldrb	w1, [x23]
  421244:	ldrh	w1, [x22, x1, lsl #1]
  421248:	tst	w0, w1
  42124c:	b.eq	4211fc <ferror@plt+0x1e88c>  // b.none
  421250:	add	x23, x23, #0x1
  421254:	b	421240 <ferror@plt+0x1e8d0>
  421258:	ldrb	w0, [x27, #1199]
  42125c:	cbz	w0, 4211fc <ferror@plt+0x1e88c>
  421260:	mov	x1, x23
  421264:	add	x0, x27, #0x440
  421268:	bl	41f050 <ferror@plt+0x1c6e0>
  42126c:	tst	w0, #0xff
  421270:	b.eq	4211fc <ferror@plt+0x1e88c>  // b.none
  421274:	ldrb	w0, [x27, #18]
  421278:	cbnz	w0, 4211fc <ferror@plt+0x1e88c>
  42127c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  421280:	ldr	w2, [x21]
  421284:	add	x4, x4, #0xd27
  421288:	mov	w3, #0x0                   	// #0
  42128c:	mov	w1, #0x17                  	// #23
  421290:	b	4211f4 <ferror@plt+0x1e884>
  421294:	b.ne	420d70 <ferror@plt+0x1e400>  // b.any
  421298:	b	420914 <ferror@plt+0x1dfa4>
  42129c:	mov	x23, x6
  4212a0:	cbz	w0, 421174 <ferror@plt+0x1e804>
  4212a4:	mov	w20, #0x3d                  	// #61
  4212a8:	b	421150 <ferror@plt+0x1e7e0>
  4212ac:	stp	x29, x30, [sp, #-48]!
  4212b0:	mov	x29, sp
  4212b4:	stp	x19, x20, [sp, #16]
  4212b8:	mov	x20, x0
  4212bc:	mov	x0, x1
  4212c0:	str	x21, [sp, #32]
  4212c4:	mov	x21, x1
  4212c8:	bl	41fbec <ferror@plt+0x1d27c>
  4212cc:	add	w1, w0, #0x1
  4212d0:	mov	x0, x20
  4212d4:	bl	420710 <ferror@plt+0x1dda0>
  4212d8:	mov	x1, x21
  4212dc:	mov	x19, x0
  4212e0:	mov	x2, x0
  4212e4:	mov	w3, #0x0                   	// #0
  4212e8:	mov	x0, x20
  4212ec:	bl	41fca4 <ferror@plt+0x1d334>
  4212f0:	strb	wzr, [x0]
  4212f4:	mov	x0, x19
  4212f8:	ldp	x19, x20, [sp, #16]
  4212fc:	ldr	x21, [sp, #32]
  421300:	ldp	x29, x30, [sp], #48
  421304:	ret
  421308:	stp	x29, x30, [sp, #-80]!
  42130c:	mov	x29, sp
  421310:	stp	x19, x20, [sp, #16]
  421314:	mov	x20, x0
  421318:	ldr	x0, [x0]
  42131c:	stp	x23, x24, [sp, #48]
  421320:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  421324:	add	x24, x24, #0x21a
  421328:	stp	x21, x22, [sp, #32]
  42132c:	mov	x21, x1
  421330:	ldr	x23, [x0]
  421334:	mov	x22, x2
  421338:	stp	x25, x26, [sp, #64]
  42133c:	mov	w25, #0x204                 	// #516
  421340:	sub	x23, x23, #0x1
  421344:	mov	w26, #0x2d                  	// #45
  421348:	ldr	x2, [x20]
  42134c:	ldr	x3, [x2]
  421350:	mov	x19, x3
  421354:	ldrb	w0, [x19]
  421358:	ldrb	w1, [x19]
  42135c:	ldrh	w0, [x24, x0, lsl #1]
  421360:	tst	w25, w0
  421364:	b.ne	421380 <ferror@plt+0x1ea10>  // b.any
  421368:	cmp	w1, #0x2e
  42136c:	b.eq	421380 <ferror@plt+0x1ea10>  // b.none
  421370:	cmp	w1, #0x27
  421374:	b.ne	421390 <ferror@plt+0x1ea20>  // b.any
  421378:	ldrb	w0, [x20, #1166]
  42137c:	cbz	w0, 4213c0 <ferror@plt+0x1ea50>
  421380:	add	x19, x19, #0x1
  421384:	str	w1, [x22]
  421388:	strb	wzr, [x22, #4]
  42138c:	b	421354 <ferror@plt+0x1e9e4>
  421390:	cmp	w1, #0x2b
  421394:	ccmp	w1, w26, #0x4, ne  // ne = any
  421398:	b.ne	4213c0 <ferror@plt+0x1ea50>  // b.any
  42139c:	ldurb	w0, [x19, #-1]
  4213a0:	and	w0, w0, #0xffffffdf
  4213a4:	and	w0, w0, #0xff
  4213a8:	cmp	w0, #0x45
  4213ac:	b.eq	421380 <ferror@plt+0x1ea10>  // b.none
  4213b0:	cmp	w0, #0x50
  4213b4:	b.ne	4213c0 <ferror@plt+0x1ea50>  // b.any
  4213b8:	ldrb	w0, [x20, #1127]
  4213bc:	b	42137c <ferror@plt+0x1ea0c>
  4213c0:	cmp	x3, x19
  4213c4:	b.cs	4213e4 <ferror@plt+0x1ea74>  // b.hs, b.nlast
  4213c8:	ldurb	w0, [x19, #-1]
  4213cc:	cmp	w0, #0x27
  4213d0:	b.ne	4213e4 <ferror@plt+0x1ea74>  // b.any
  4213d4:	ldrb	w0, [x20, #1166]
  4213d8:	cbz	w0, 4213e4 <ferror@plt+0x1ea74>
  4213dc:	sub	x19, x19, #0x1
  4213e0:	b	4213c0 <ferror@plt+0x1ea50>
  4213e4:	str	x19, [x2]
  4213e8:	mov	x0, x20
  4213ec:	mov	x2, x22
  4213f0:	mov	w1, #0x0                   	// #0
  4213f4:	bl	41ec74 <ferror@plt+0x1c304>
  4213f8:	tst	w0, #0xff
  4213fc:	b.ne	421348 <ferror@plt+0x1e9d8>  // b.any
  421400:	sub	x19, x19, x23
  421404:	str	w19, [x21]
  421408:	add	w1, w19, #0x1
  42140c:	mov	x0, x20
  421410:	bl	420710 <ferror@plt+0x1dda0>
  421414:	mov	x19, x0
  421418:	ldr	w2, [x21]
  42141c:	mov	x1, x23
  421420:	bl	4022e0 <memcpy@plt>
  421424:	ldr	w0, [x21]
  421428:	strb	wzr, [x19, x0]
  42142c:	ldp	x23, x24, [sp, #48]
  421430:	ldp	x25, x26, [sp, #64]
  421434:	str	x19, [x21, #8]
  421438:	ldp	x19, x20, [sp, #16]
  42143c:	ldp	x21, x22, [sp, #32]
  421440:	ldp	x29, x30, [sp], #80
  421444:	ret
  421448:	stp	x29, x30, [sp, #-128]!
  42144c:	mov	x29, sp
  421450:	stp	x19, x20, [sp, #16]
  421454:	mov	x20, x0
  421458:	ldr	x19, [x0, #448]
  42145c:	stp	x21, x22, [sp, #32]
  421460:	add	x0, x19, #0x18
  421464:	stp	x23, x24, [sp, #48]
  421468:	mov	w23, #0x0                   	// #0
  42146c:	stp	x25, x26, [sp, #64]
  421470:	adrp	x25, 452000 <_obstack_memory_used@@Base+0x18198>
  421474:	stp	x27, x28, [sp, #80]
  421478:	str	x0, [x20, #448]
  42147c:	add	x0, x25, #0xd69
  421480:	str	x0, [sp, #96]
  421484:	ldr	x21, [x20]
  421488:	strh	wzr, [x19, #6]
  42148c:	ldrb	w0, [x21, #104]
  421490:	cbz	w0, 421558 <ferror@plt+0x1ebe8>
  421494:	ldrb	w0, [x20, #32]
  421498:	cbz	w0, 4214dc <ferror@plt+0x1eb6c>
  42149c:	mov	w0, #0x52                  	// #82
  4214a0:	strb	w0, [x19, #4]
  4214a4:	strb	wzr, [x20, #32]
  4214a8:	ldrb	w0, [x20, #33]
  4214ac:	cbnz	w0, 4214bc <ferror@plt+0x1eb4c>
  4214b0:	ldrb	w0, [x20, #24]
  4214b4:	sub	w0, w0, #0x1
  4214b8:	strb	w0, [x20, #24]
  4214bc:	mov	x0, x19
  4214c0:	ldp	x19, x20, [sp, #16]
  4214c4:	ldp	x21, x22, [sp, #32]
  4214c8:	ldp	x23, x24, [sp, #48]
  4214cc:	ldp	x25, x26, [sp, #64]
  4214d0:	ldp	x27, x28, [sp, #80]
  4214d4:	ldp	x29, x30, [sp], #128
  4214d8:	ret
  4214dc:	mov	x0, x20
  4214e0:	bl	41fb50 <ferror@plt+0x1d1e0>
  4214e4:	tst	w0, #0xff
  4214e8:	b.ne	421514 <ferror@plt+0x1eba4>  // b.any
  4214ec:	mov	w0, #0x16                  	// #22
  4214f0:	strb	w0, [x19, #4]
  4214f4:	ldrb	w0, [x20, #16]
  4214f8:	cbnz	w0, 4214bc <ferror@plt+0x1eb4c>
  4214fc:	ldr	x0, [x20, #40]
  421500:	ldr	w0, [x0, #60]
  421504:	str	w0, [x19]
  421508:	mov	w0, #0x40                  	// #64
  42150c:	strh	w0, [x19, #6]
  421510:	b	4214bc <ferror@plt+0x1eb4c>
  421514:	ldr	x0, [x20]
  421518:	cmp	x0, x21
  42151c:	ldr	w0, [x20, #500]
  421520:	csel	w23, w23, wzr, eq  // eq = none
  421524:	cbnz	w0, 42153c <ferror@plt+0x1ebcc>
  421528:	ldr	x19, [x20, #472]
  42152c:	add	x0, x20, #0x1c8
  421530:	str	x0, [x20, #488]
  421534:	add	x0, x19, #0x18
  421538:	str	x0, [x20, #448]
  42153c:	mov	w1, #0x40                  	// #64
  421540:	strh	w1, [x19, #6]
  421544:	ldrb	w0, [x20, #25]
  421548:	cmp	w0, #0x2
  42154c:	mov	w0, #0x41                  	// #65
  421550:	csel	w0, w0, w1, eq  // eq = none
  421554:	strh	w0, [x19, #6]
  421558:	ldr	x27, [x20]
  42155c:	adrp	x24, 453000 <_obstack_memory_used@@Base+0x19198>
  421560:	ldr	x0, [x20, #40]
  421564:	add	x24, x24, #0x8c
  421568:	ldr	w0, [x0, #60]
  42156c:	str	w0, [x19]
  421570:	ldr	w0, [x27, #56]
  421574:	ldr	x2, [x27, #48]
  421578:	lsl	x0, x0, #4
  42157c:	ldr	x1, [x27]
  421580:	ldr	x0, [x2, x0]
  421584:	cmp	x1, x0
  421588:	b.cc	4215ac <ferror@plt+0x1ec3c>  // b.lo, b.ul, b.last
  42158c:	ldr	x0, [x20, #8]
  421590:	cbnz	x0, 4215ac <ferror@plt+0x1ec3c>
  421594:	mov	x0, x20
  421598:	mov	w1, #0x0                   	// #0
  42159c:	bl	41f4d4 <ferror@plt+0x1cb64>
  4215a0:	ldr	x0, [x20, #40]
  4215a4:	ldr	w0, [x0, #60]
  4215a8:	str	w0, [x19]
  4215ac:	ldr	x1, [x27]
  4215b0:	add	x0, x1, #0x1
  4215b4:	str	x0, [x27]
  4215b8:	ldrb	w21, [x1]
  4215bc:	ldr	w1, [x20, #1408]
  4215c0:	mov	w22, w21
  4215c4:	cbz	w1, 4215e4 <ferror@plt+0x1ec74>
  4215c8:	str	w1, [x19]
  4215cc:	cmp	w21, #0x7e
  4215d0:	b.hi	4228d4 <ferror@plt+0x1ff64>  // b.pmore
  4215d4:	ldrh	w0, [x24, w21, uxtw #1]
  4215d8:	adr	x1, 4215e4 <ferror@plt+0x1ec74>
  4215dc:	add	x0, x1, w0, sxth #2
  4215e0:	br	x0
  4215e4:	ldr	x1, [x27, #8]
  4215e8:	sub	w1, w0, w1
  4215ec:	ldr	x0, [x20, #40]
  4215f0:	bl	42353c <ferror@plt+0x20bcc>
  4215f4:	str	w0, [x19]
  4215f8:	b	4215cc <ferror@plt+0x1ec5c>
  4215fc:	ldrh	w0, [x19, #6]
  421600:	adrp	x6, 452000 <_obstack_memory_used@@Base+0x18198>
  421604:	ldr	x21, [x20]
  421608:	adrp	x28, 457000 <_obstack_memory_used@@Base+0x1d198>
  42160c:	add	x26, x6, #0xd5f
  421610:	add	x28, x28, #0x21a
  421614:	orr	w0, w0, #0x1
  421618:	mov	w25, #0x0                   	// #0
  42161c:	strh	w0, [x19, #6]
  421620:	cmp	w22, #0x20
  421624:	ccmp	w22, #0x9, #0x4, ne  // ne = any
  421628:	b.eq	421670 <ferror@plt+0x1ed00>  // b.none
  42162c:	cbz	w22, 4216b4 <ferror@plt+0x1ed44>
  421630:	ldrb	w0, [x20, #16]
  421634:	cbz	w0, 421670 <ferror@plt+0x1ed00>
  421638:	ldrb	w0, [x20, #1154]
  42163c:	cbz	w0, 421670 <ferror@plt+0x1ed00>
  421640:	ldr	x0, [x20, #40]
  421644:	cmp	w22, #0xc
  421648:	ldr	x2, [sp, #96]
  42164c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  421650:	ldp	x3, x1, [x21]
  421654:	csel	x5, x26, x2, eq  // eq = none
  421658:	ldr	w2, [x0, #60]
  42165c:	add	x4, x4, #0xd85
  421660:	mov	x0, x20
  421664:	sub	w3, w3, w1
  421668:	mov	w1, #0x2                   	// #2
  42166c:	bl	4195fc <ferror@plt+0x16c8c>
  421670:	ldr	x0, [x21]
  421674:	add	x1, x0, #0x1
  421678:	str	x1, [x21]
  42167c:	ldrb	w22, [x0]
  421680:	ldrb	w0, [x0]
  421684:	ldrh	w0, [x28, x0, lsl #1]
  421688:	tbnz	w0, #11, 421620 <ferror@plt+0x1ecb0>
  42168c:	cbz	w25, 4216a4 <ferror@plt+0x1ed34>
  421690:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  421694:	mov	x0, x20
  421698:	add	x2, x2, #0xda3
  42169c:	mov	w1, #0x0                   	// #0
  4216a0:	bl	419440 <ferror@plt+0x16ad0>
  4216a4:	ldr	x0, [x21]
  4216a8:	sub	x0, x0, #0x1
  4216ac:	str	x0, [x21]
  4216b0:	b	421570 <ferror@plt+0x1ec00>
  4216b4:	mov	w25, #0x1                   	// #1
  4216b8:	b	421670 <ferror@plt+0x1ed00>
  4216bc:	ldr	x1, [x27]
  4216c0:	ldr	x0, [x27, #32]
  4216c4:	cmp	x1, x0
  4216c8:	b.cs	421710 <ferror@plt+0x1eda0>  // b.hs, b.nlast
  4216cc:	ldr	x0, [x20, #40]
  4216d0:	mov	w1, #0x18                  	// #24
  4216d4:	ldr	w2, [x0, #12]
  4216d8:	ldr	w3, [x0, #60]
  4216dc:	sub	w2, w2, #0x1
  4216e0:	smull	x2, w2, w1
  4216e4:	ldr	x1, [x0]
  4216e8:	add	x4, x1, x2
  4216ec:	ldr	w1, [x1, x2]
  4216f0:	mov	w2, #0x0                   	// #0
  4216f4:	sub	w3, w3, w1
  4216f8:	ldrb	w1, [x4, #6]
  4216fc:	lsr	w3, w3, w1
  421700:	ldr	w1, [x4, #16]
  421704:	add	w1, w1, #0x1
  421708:	add	w1, w3, w1
  42170c:	bl	42333c <ferror@plt+0x209cc>
  421710:	mov	w0, #0x1                   	// #1
  421714:	strb	w0, [x27, #104]
  421718:	b	421484 <ferror@plt+0x1eb14>
  42171c:	cmp	w21, #0x4c
  421720:	b.eq	42173c <ferror@plt+0x1edcc>  // b.none
  421724:	ldrb	w0, [x20, #1130]
  421728:	cbnz	w0, 42173c <ferror@plt+0x1edcc>
  42172c:	cmp	w21, #0x52
  421730:	b.eq	421754 <ferror@plt+0x1ede4>  // b.none
  421734:	ldrb	w0, [x20, #1128]
  421738:	cbz	w0, 421754 <ferror@plt+0x1ede4>
  42173c:	ldr	x2, [x27]
  421740:	ldrb	w0, [x2]
  421744:	cmp	w0, #0x27
  421748:	b.ne	42184c <ferror@plt+0x1eedc>  // b.any
  42174c:	cmp	w21, #0x52
  421750:	b.ne	421878 <ferror@plt+0x1ef08>  // b.any
  421754:	mov	w0, #0x35                  	// #53
  421758:	strb	w0, [x19, #4]
  42175c:	strb	wzr, [sp, #116]
  421760:	add	x4, x19, #0x10
  421764:	add	x3, sp, #0x70
  421768:	mov	w2, #0x0                   	// #0
  42176c:	ldr	x1, [x27]
  421770:	mov	x0, x20
  421774:	str	wzr, [sp, #112]
  421778:	sub	x1, x1, #0x1
  42177c:	str	wzr, [sp, #120]
  421780:	bl	41ee40 <ferror@plt+0x1c4d0>
  421784:	str	x0, [x19, #8]
  421788:	mov	x1, x19
  42178c:	mov	x0, x20
  421790:	add	x2, sp, #0x78
  421794:	bl	41fdb8 <ferror@plt+0x1d448>
  421798:	ldr	x1, [x19, #8]
  42179c:	ldrh	w0, [x1, #18]
  4217a0:	tbz	w0, #2, 4217bc <ferror@plt+0x1ee4c>
  4217a4:	ldrh	w0, [x19, #6]
  4217a8:	orr	w0, w0, #0x10
  4217ac:	strh	w0, [x19, #6]
  4217b0:	ldrb	w0, [x1, #16]
  4217b4:	ubfx	x0, x0, #1, #7
  4217b8:	strb	w0, [x19, #4]
  4217bc:	cbz	w23, 4217cc <ferror@plt+0x1ee5c>
  4217c0:	ldrh	w0, [x19, #6]
  4217c4:	orr	w0, w0, #0x20
  4217c8:	strh	w0, [x19, #6]
  4217cc:	ldr	w0, [x19]
  4217d0:	cmp	w0, #0x1
  4217d4:	b.ls	4214bc <ferror@plt+0x1eb4c>  // b.plast
  4217d8:	ldrb	w0, [x19, #4]
  4217dc:	cmp	w0, #0x16
  4217e0:	b.eq	4214bc <ferror@plt+0x1eb4c>  // b.none
  4217e4:	ldr	w0, [x27, #56]
  4217e8:	ldr	x2, [x27, #48]
  4217ec:	lsl	x0, x0, #4
  4217f0:	ldr	x1, [x27]
  4217f4:	ldr	x0, [x2, x0]
  4217f8:	cmp	x1, x0
  4217fc:	b.cc	421814 <ferror@plt+0x1eea4>  // b.lo, b.ul, b.last
  421800:	ldr	x0, [x20, #8]
  421804:	cbnz	x0, 421814 <ferror@plt+0x1eea4>
  421808:	mov	x0, x20
  42180c:	mov	w1, #0x0                   	// #0
  421810:	bl	41f4d4 <ferror@plt+0x1cb64>
  421814:	ldp	x1, x0, [x27]
  421818:	ldr	w21, [x19]
  42181c:	sub	w1, w1, w0
  421820:	ldr	x0, [x20, #40]
  421824:	bl	42353c <ferror@plt+0x20bcc>
  421828:	mov	x2, #0x0                   	// #0
  42182c:	ldr	w1, [x19]
  421830:	bfxil	x2, x21, #0, #32
  421834:	mov	x3, #0x0                   	// #0
  421838:	bfi	x2, x0, #32, #32
  42183c:	ldr	x0, [x20, #40]
  421840:	bl	423800 <ferror@plt+0x20e90>
  421844:	str	w0, [x19]
  421848:	b	4214bc <ferror@plt+0x1eb4c>
  42184c:	cmp	w0, #0x22
  421850:	b.eq	421878 <ferror@plt+0x1ef08>  // b.none
  421854:	cmp	w0, #0x52
  421858:	b.ne	42188c <ferror@plt+0x1ef1c>  // b.any
  42185c:	cmp	w21, #0x52
  421860:	b.eq	421754 <ferror@plt+0x1ede4>  // b.none
  421864:	ldrb	w0, [x2, #1]
  421868:	cmp	w0, #0x22
  42186c:	b.ne	421754 <ferror@plt+0x1ede4>  // b.any
  421870:	ldrb	w0, [x20, #1130]
  421874:	cbz	w0, 421754 <ferror@plt+0x1ede4>
  421878:	sub	x2, x2, #0x1
  42187c:	mov	x1, x19
  421880:	mov	x0, x20
  421884:	bl	4207cc <ferror@plt+0x1de5c>
  421888:	b	4217cc <ferror@plt+0x1ee5c>
  42188c:	cmp	w0, #0x38
  421890:	b.ne	421754 <ferror@plt+0x1ede4>  // b.any
  421894:	cmp	w21, #0x75
  421898:	b.ne	421754 <ferror@plt+0x1ede4>  // b.any
  42189c:	ldrb	w0, [x2, #1]
  4218a0:	cmp	w0, #0x22
  4218a4:	b.eq	421878 <ferror@plt+0x1ef08>  // b.none
  4218a8:	cmp	w0, #0x27
  4218ac:	b.ne	4218b8 <ferror@plt+0x1ef48>  // b.any
  4218b0:	ldrb	w0, [x20, #1129]
  4218b4:	b	421874 <ferror@plt+0x1ef04>
  4218b8:	cmp	w0, #0x52
  4218bc:	b.ne	421754 <ferror@plt+0x1ede4>  // b.any
  4218c0:	ldrb	w0, [x2, #2]
  4218c4:	b	421868 <ferror@plt+0x1eef8>
  4218c8:	ldr	x2, [x27]
  4218cc:	b	421878 <ferror@plt+0x1ef08>
  4218d0:	ldr	x22, [x27]
  4218d4:	ldrb	w24, [x22]
  4218d8:	cmp	w24, #0x2a
  4218dc:	b.ne	421924 <ferror@plt+0x1efb4>  // b.any
  4218e0:	mov	x0, x20
  4218e4:	bl	41f6e8 <ferror@plt+0x1cd78>
  4218e8:	tst	w0, #0xff
  4218ec:	b.eq	421904 <ferror@plt+0x1ef94>  // b.none
  4218f0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  4218f4:	mov	x0, x20
  4218f8:	add	x2, x2, #0xdbd
  4218fc:	mov	w1, #0x3                   	// #3
  421900:	bl	419440 <ferror@plt+0x16ad0>
  421904:	ldrb	w0, [x20, #1144]
  421908:	add	x21, x22, #0x1
  42190c:	cmp	w0, #0x2
  421910:	b.eq	421ad8 <ferror@plt+0x1f168>  // b.none
  421914:	b.hi	421a88 <ferror@plt+0x1f118>  // b.pmore
  421918:	cmp	w0, #0x1
  42191c:	csinc	w23, w23, wzr, ne  // ne = any
  421920:	b	421a98 <ferror@plt+0x1f128>
  421924:	cmp	w24, #0x2f
  421928:	b.ne	421a6c <ferror@plt+0x1f0fc>  // b.any
  42192c:	ldrb	w0, [x20, #1160]
  421930:	cbnz	w0, 421a10 <ferror@plt+0x1f0a0>
  421934:	ldr	x0, [x20]
  421938:	cbz	x0, 421944 <ferror@plt+0x1efd4>
  42193c:	ldrb	w0, [x0, #106]
  421940:	cbnz	w0, 421998 <ferror@plt+0x1f028>
  421944:	ldr	w0, [x20, #1116]
  421948:	cbnz	w0, 4219c0 <ferror@plt+0x1f050>
  42194c:	ldrb	w1, [x20, #1154]
  421950:	cbz	w1, 4219c0 <ferror@plt+0x1f050>
  421954:	ldrb	w1, [x27, #105]
  421958:	tbnz	w1, #0, 4219c0 <ferror@plt+0x1f050>
  42195c:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  421960:	add	x2, x2, #0xdd2
  421964:	mov	w1, #0x2                   	// #2
  421968:	mov	x0, x20
  42196c:	bl	419440 <ferror@plt+0x16ad0>
  421970:	tst	w0, #0xff
  421974:	b.eq	42198c <ferror@plt+0x1f01c>  // b.none
  421978:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  42197c:	mov	x0, x20
  421980:	add	x2, x2, #0xe00
  421984:	mov	w1, #0x5                   	// #5
  421988:	bl	419440 <ferror@plt+0x16ad0>
  42198c:	ldrb	w0, [x27, #105]
  421990:	orr	w0, w0, #0x1
  421994:	strb	w0, [x27, #105]
  421998:	ldr	x0, [x20, #40]
  42199c:	ldr	x1, [x20]
  4219a0:	ldr	w21, [x0, #60]
  4219a4:	ldr	x0, [x1]
  4219a8:	ldrb	w2, [x0]
  4219ac:	cmp	w2, #0xa
  4219b0:	b.eq	421a30 <ferror@plt+0x1f0c0>  // b.none
  4219b4:	add	x0, x0, #0x1
  4219b8:	str	x0, [x1]
  4219bc:	b	4219a4 <ferror@plt+0x1f034>
  4219c0:	ldrsb	w1, [x20, #1198]
  4219c4:	cmp	w1, #0x0
  4219c8:	b.le	4219ec <ferror@plt+0x1f07c>
  4219cc:	ldrb	w1, [x20, #1120]
  4219d0:	cbnz	w1, 4219ec <ferror@plt+0x1f07c>
  4219d4:	ldrb	w1, [x27, #105]
  4219d8:	tbnz	w1, #0, 4219ec <ferror@plt+0x1f07c>
  4219dc:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  4219e0:	mov	w1, #0x0                   	// #0
  4219e4:	add	x2, x2, #0xe31
  4219e8:	b	421968 <ferror@plt+0x1eff8>
  4219ec:	sub	w0, w0, #0x5
  4219f0:	cmp	w0, #0x1
  4219f4:	b.hi	421998 <ferror@plt+0x1f028>  // b.pmore
  4219f8:	ldrb	w0, [x22, #1]
  4219fc:	cmp	w0, #0x2a
  421a00:	b.eq	421a10 <ferror@plt+0x1f0a0>  // b.none
  421a04:	ldr	w0, [x20, #16]
  421a08:	tst	w0, #0xff00ff
  421a0c:	b.eq	421a18 <ferror@plt+0x1f0a8>  // b.none
  421a10:	mov	w0, #0x7                   	// #7
  421a14:	b	421a80 <ferror@plt+0x1f110>
  421a18:	ldrb	w0, [x27, #105]
  421a1c:	tbnz	w0, #0, 421998 <ferror@plt+0x1f028>
  421a20:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  421a24:	mov	w1, #0x3                   	// #3
  421a28:	add	x2, x2, #0xdd2
  421a2c:	b	421968 <ferror@plt+0x1eff8>
  421a30:	mov	x0, x20
  421a34:	mov	w1, #0x1                   	// #1
  421a38:	bl	41f4d4 <ferror@plt+0x1cb64>
  421a3c:	ldr	x0, [x20, #40]
  421a40:	ldr	w0, [x0, #60]
  421a44:	cmp	w21, w0
  421a48:	b.eq	421904 <ferror@plt+0x1ef94>  // b.none
  421a4c:	ldrb	w0, [x20, #1133]
  421a50:	cbz	w0, 421904 <ferror@plt+0x1ef94>
  421a54:	mov	x0, x20
  421a58:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  421a5c:	mov	w1, #0x2                   	// #2
  421a60:	add	x2, x2, #0xe5e
  421a64:	bl	4194ac <ferror@plt+0x16b3c>
  421a68:	b	421904 <ferror@plt+0x1ef94>
  421a6c:	cmp	w24, #0x3d
  421a70:	b.ne	421a10 <ferror@plt+0x1f0a0>  // b.any
  421a74:	add	x22, x22, #0x1
  421a78:	mov	w0, #0x1e                  	// #30
  421a7c:	str	x22, [x27]
  421a80:	strb	w0, [x19, #4]
  421a84:	b	4217cc <ferror@plt+0x1ee5c>
  421a88:	sub	w1, w0, #0x3
  421a8c:	and	w1, w1, #0xff
  421a90:	cmp	w1, #0x1
  421a94:	b.ls	421c18 <ferror@plt+0x1f2a8>  // b.plast
  421a98:	ldr	x4, [x20, #1072]
  421a9c:	cbz	x4, 421ac0 <ferror@plt+0x1f150>
  421aa0:	ldr	x0, [x20]
  421aa4:	sub	x2, x22, #0x1
  421aa8:	ldr	w1, [x19]
  421aac:	ldr	x3, [x0]
  421ab0:	mov	x0, x20
  421ab4:	sub	x3, x3, x22
  421ab8:	add	x3, x3, #0x1
  421abc:	blr	x4
  421ac0:	ldrb	w0, [x20, #21]
  421ac4:	cbnz	w0, 422170 <ferror@plt+0x1f800>
  421ac8:	ldrh	w0, [x19, #6]
  421acc:	orr	w0, w0, #0x1
  421ad0:	strh	w0, [x19, #6]
  421ad4:	b	42155c <ferror@plt+0x1ebec>
  421ad8:	ldr	x0, [x20]
  421adc:	ldr	x1, [x0]
  421ae0:	sub	x0, x1, x21
  421ae4:	cmp	x0, #0x7
  421ae8:	b.ls	421a98 <ferror@plt+0x1f128>  // b.plast
  421aec:	ldrb	w0, [x21]
  421af0:	and	w0, w0, #0xffffffdf
  421af4:	and	w0, w0, #0xff
  421af8:	cmp	w0, #0x46
  421afc:	b.ne	421b70 <ferror@plt+0x1f200>  // b.any
  421b00:	ldrb	w0, [x21, #1]
  421b04:	and	w0, w0, #0xffffffdf
  421b08:	and	w0, w0, #0xff
  421b0c:	cmp	w0, #0x41
  421b10:	b.ne	421b70 <ferror@plt+0x1f200>  // b.any
  421b14:	ldrb	w0, [x21, #2]
  421b18:	and	w0, w0, #0xffffffdf
  421b1c:	and	w0, w0, #0xff
  421b20:	cmp	w0, #0x4c
  421b24:	b.ne	421b70 <ferror@plt+0x1f200>  // b.any
  421b28:	ldrb	w0, [x21, #3]
  421b2c:	and	w0, w0, #0xffffffdf
  421b30:	and	w0, w0, #0xff
  421b34:	cmp	w0, #0x4c
  421b38:	b.ne	421b70 <ferror@plt+0x1f200>  // b.any
  421b3c:	mov	x2, x21
  421b40:	add	x21, x21, #0x5
  421b44:	ldrb	w0, [x2, #4]!
  421b48:	and	w0, w0, #0xffffffdf
  421b4c:	and	w0, w0, #0xff
  421b50:	cmp	w0, #0x53
  421b54:	csel	x21, x21, x2, eq  // eq = none
  421b58:	ldrb	w0, [x21]
  421b5c:	cmp	w0, #0x2d
  421b60:	b.ls	421b78 <ferror@plt+0x1f208>  // b.plast
  421b64:	and	w0, w0, #0xffffffdf
  421b68:	cmp	w0, #0x54
  421b6c:	b.eq	421b90 <ferror@plt+0x1f220>  // b.none
  421b70:	add	x21, x21, #0x1
  421b74:	b	421ae0 <ferror@plt+0x1f170>
  421b78:	mov	x2, #0x200                 	// #512
  421b7c:	movk	x2, #0x2001, lsl #32
  421b80:	lsr	x0, x2, x0
  421b84:	tbz	w0, #0, 421b70 <ferror@plt+0x1f200>
  421b88:	add	x21, x21, #0x1
  421b8c:	b	421b58 <ferror@plt+0x1f1e8>
  421b90:	ldrb	w0, [x21, #1]
  421b94:	and	w0, w0, #0xffffffdf
  421b98:	and	w0, w0, #0xff
  421b9c:	cmp	w0, #0x48
  421ba0:	b.ne	421b70 <ferror@plt+0x1f200>  // b.any
  421ba4:	ldrb	w0, [x21, #2]
  421ba8:	and	w0, w0, #0xffffffdf
  421bac:	and	w0, w0, #0xff
  421bb0:	cmp	w0, #0x52
  421bb4:	b.ne	421b70 <ferror@plt+0x1f200>  // b.any
  421bb8:	ldrb	w0, [x21, #3]
  421bbc:	and	w0, w0, #0xffffffdf
  421bc0:	and	w0, w0, #0xff
  421bc4:	cmp	w0, #0x55
  421bc8:	b.eq	421c10 <ferror@plt+0x1f2a0>  // b.none
  421bcc:	cmp	w0, #0x4f
  421bd0:	b.ne	421b70 <ferror@plt+0x1f200>  // b.any
  421bd4:	ldrb	w0, [x21, #4]
  421bd8:	and	w0, w0, #0xffffffdf
  421bdc:	and	w0, w0, #0xff
  421be0:	cmp	w0, #0x55
  421be4:	b.ne	421b70 <ferror@plt+0x1f200>  // b.any
  421be8:	ldrb	w0, [x21, #5]
  421bec:	and	w0, w0, #0xffffffdf
  421bf0:	and	w0, w0, #0xff
  421bf4:	cmp	w0, #0x47
  421bf8:	b.ne	421b70 <ferror@plt+0x1f200>  // b.any
  421bfc:	ldrb	w0, [x21, #6]
  421c00:	and	w0, w0, #0xffffffdf
  421c04:	and	w0, w0, #0xff
  421c08:	cmp	w0, #0x48
  421c0c:	b.ne	421b70 <ferror@plt+0x1f200>  // b.any
  421c10:	mov	w23, #0x1                   	// #1
  421c14:	b	421a98 <ferror@plt+0x1f128>
  421c18:	ldrb	w28, [x22, #1]
  421c1c:	cmp	w28, #0x2d
  421c20:	b.eq	421c2c <ferror@plt+0x1f2bc>  // b.none
  421c24:	cmp	w28, #0x40
  421c28:	b.ne	421ca8 <ferror@plt+0x1f338>  // b.any
  421c2c:	ldr	x0, [x20]
  421c30:	ldr	x0, [x0]
  421c34:	sub	x0, x0, x21
  421c38:	sub	x0, x0, #0x1
  421c3c:	cmp	x0, #0xa
  421c40:	b.ls	421a98 <ferror@plt+0x1f128>  // b.plast
  421c44:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  421c48:	add	x0, x22, #0x2
  421c4c:	add	x1, x1, #0xe76
  421c50:	mov	x2, #0xb                   	// #11
  421c54:	bl	402690 <memcmp@plt>
  421c58:	cbnz	w0, 421a98 <ferror@plt+0x1f128>
  421c5c:	cmp	w28, #0x40
  421c60:	b.ne	421ca0 <ferror@plt+0x1f330>  // b.any
  421c64:	ldrb	w0, [x22, #13]
  421c68:	cmp	w0, #0x40
  421c6c:	b.ne	421a98 <ferror@plt+0x1f128>  // b.any
  421c70:	mov	x0, #0xc                   	// #12
  421c74:	add	x0, x0, #0x1
  421c78:	add	x21, x21, x0
  421c7c:	ldrb	w1, [x22]
  421c80:	ldrb	w0, [x21]
  421c84:	cmp	w1, #0x2a
  421c88:	b.ne	422168 <ferror@plt+0x1f7f8>  // b.any
  421c8c:	cmp	w0, #0x2a
  421c90:	b.ne	421a98 <ferror@plt+0x1f128>  // b.any
  421c94:	ldrb	w0, [x21, #1]
  421c98:	cmp	w0, #0x2f
  421c9c:	b	42191c <ferror@plt+0x1efac>
  421ca0:	mov	x0, #0xb                   	// #11
  421ca4:	b	421c74 <ferror@plt+0x1f304>
  421ca8:	cmp	w28, #0x6c
  421cac:	b.ne	421d00 <ferror@plt+0x1f390>  // b.any
  421cb0:	ldr	x0, [x20]
  421cb4:	ldr	x0, [x0]
  421cb8:	sub	x21, x0, x21
  421cbc:	sub	x21, x21, #0x1
  421cc0:	cmp	x21, #0xf
  421cc4:	b.ls	421a98 <ferror@plt+0x1f128>  // b.plast
  421cc8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  421ccc:	add	x0, x22, #0x2
  421cd0:	add	x1, x1, #0xe71
  421cd4:	mov	x2, #0x10                  	// #16
  421cd8:	bl	402690 <memcmp@plt>
  421cdc:	cbnz	w0, 421a98 <ferror@plt+0x1f128>
  421ce0:	add	x21, x22, #0x12
  421ce4:	ldrb	w0, [x21]
  421ce8:	cmp	w0, #0x20
  421cec:	b.eq	421cf8 <ferror@plt+0x1f388>  // b.none
  421cf0:	cmp	w0, #0x9
  421cf4:	b.ne	421c7c <ferror@plt+0x1f30c>  // b.any
  421cf8:	add	x21, x21, #0x1
  421cfc:	b	421ce4 <ferror@plt+0x1f374>
  421d00:	cmp	w0, #0x4
  421d04:	b.eq	421d2c <ferror@plt+0x1f3bc>  // b.none
  421d08:	mov	x0, #0x200                 	// #512
  421d0c:	movk	x0, #0x4003, lsl #32
  421d10:	ldrb	w28, [x21]
  421d14:	cmp	w28, #0x2e
  421d18:	b.hi	421dcc <ferror@plt+0x1f45c>  // b.pmore
  421d1c:	lsr	x1, x0, x28
  421d20:	tbz	w1, #0, 421dcc <ferror@plt+0x1f45c>
  421d24:	add	x21, x21, #0x1
  421d28:	b	421d10 <ferror@plt+0x1f3a0>
  421d2c:	ldrb	w0, [x21]
  421d30:	cmp	w0, #0x20
  421d34:	b.eq	421d40 <ferror@plt+0x1f3d0>  // b.none
  421d38:	cmp	w0, #0x9
  421d3c:	b.ne	421d48 <ferror@plt+0x1f3d8>  // b.any
  421d40:	add	x21, x21, #0x1
  421d44:	b	421d2c <ferror@plt+0x1f3bc>
  421d48:	ldr	x0, [x20]
  421d4c:	ldr	x28, [x0]
  421d50:	sub	x0, x28, x21
  421d54:	cmp	x0, #0x7
  421d58:	b.ls	421a98 <ferror@plt+0x1f128>  // b.plast
  421d5c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  421d60:	mov	x0, x21
  421d64:	add	x1, x1, #0xe82
  421d68:	mov	x2, #0x7                   	// #7
  421d6c:	bl	402690 <memcmp@plt>
  421d70:	cbnz	w0, 421a98 <ferror@plt+0x1f128>
  421d74:	ldrb	w0, [x21, #7]
  421d78:	cmp	w0, #0x55
  421d7c:	b.ne	421da0 <ferror@plt+0x1f430>  // b.any
  421d80:	add	x21, x21, #0x8
  421d84:	ldrb	w0, [x21]
  421d88:	cmp	w0, #0x20
  421d8c:	b.eq	421d98 <ferror@plt+0x1f428>  // b.none
  421d90:	cmp	w0, #0x9
  421d94:	b.ne	421c7c <ferror@plt+0x1f30c>  // b.any
  421d98:	add	x21, x21, #0x1
  421d9c:	b	421d84 <ferror@plt+0x1f414>
  421da0:	add	x0, x21, #0x7
  421da4:	sub	x28, x28, x0
  421da8:	cmp	x28, #0x3
  421dac:	b.ls	421a98 <ferror@plt+0x1f128>  // b.plast
  421db0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  421db4:	mov	x2, #0x4                   	// #4
  421db8:	add	x1, x1, #0xd80
  421dbc:	bl	402690 <memcmp@plt>
  421dc0:	cbnz	w0, 421a98 <ferror@plt+0x1f128>
  421dc4:	add	x21, x21, #0xb
  421dc8:	b	421d84 <ferror@plt+0x1f414>
  421dcc:	and	w0, w28, #0xffffffdf
  421dd0:	and	w1, w0, #0xff
  421dd4:	cmp	w0, #0x45
  421dd8:	b.ne	421fc4 <ferror@plt+0x1f654>  // b.any
  421ddc:	ldr	x0, [x20]
  421de0:	ldr	x0, [x0]
  421de4:	sub	x0, x0, x21
  421de8:	cmp	x0, #0xc
  421dec:	b.ls	421a98 <ferror@plt+0x1f128>  // b.plast
  421df0:	add	x25, x21, #0x1
  421df4:	cmp	w28, #0x45
  421df8:	b.ne	421e14 <ferror@plt+0x1f4a4>  // b.any
  421dfc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  421e00:	mov	x0, x25
  421e04:	add	x1, x1, #0xe8a
  421e08:	mov	x2, #0x3                   	// #3
  421e0c:	bl	402690 <memcmp@plt>
  421e10:	cbz	w0, 421fbc <ferror@plt+0x1f64c>
  421e14:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  421e18:	mov	x0, x25
  421e1c:	add	x1, x1, #0x902
  421e20:	mov	x2, #0x3                   	// #3
  421e24:	bl	402690 <memcmp@plt>
  421e28:	cbnz	w0, 421a98 <ferror@plt+0x1f128>
  421e2c:	mov	w26, #0x0                   	// #0
  421e30:	mov	x0, x21
  421e34:	add	x21, x21, #0x5
  421e38:	ldrb	w1, [x0, #4]!
  421e3c:	cmp	w1, #0x2c
  421e40:	csel	x21, x21, x0, eq  // eq = none
  421e44:	ldrb	w0, [x21]
  421e48:	cmp	w0, #0x20
  421e4c:	b.ne	421a98 <ferror@plt+0x1f128>  // b.any
  421e50:	ldrb	w25, [x21, #1]
  421e54:	add	x3, x21, #0x1
  421e58:	cbz	w26, 421e64 <ferror@plt+0x1f4f4>
  421e5c:	cmp	w25, #0x66
  421e60:	b.eq	421a98 <ferror@plt+0x1f128>  // b.none
  421e64:	cmp	w28, #0x65
  421e68:	b.ne	421e74 <ferror@plt+0x1f504>  // b.any
  421e6c:	cmp	w25, #0x46
  421e70:	b.eq	421a98 <ferror@plt+0x1f128>  // b.none
  421e74:	and	w0, w25, #0xffffffdf
  421e78:	cmp	w0, #0x46
  421e7c:	b.ne	421a98 <ferror@plt+0x1f128>  // b.any
  421e80:	ldr	x0, [x20]
  421e84:	ldr	x28, [x0]
  421e88:	sub	x0, x28, x3
  421e8c:	cmp	x0, #0x7
  421e90:	b.ls	421a98 <ferror@plt+0x1f128>  // b.plast
  421e94:	cmp	w25, #0x46
  421e98:	b.ne	421ebc <ferror@plt+0x1f54c>  // b.any
  421e9c:	add	x0, x3, #0x1
  421ea0:	mov	x2, #0x3                   	// #3
  421ea4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  421ea8:	add	x1, x1, #0xead
  421eac:	str	x3, [sp, #104]
  421eb0:	bl	402690 <memcmp@plt>
  421eb4:	ldr	x3, [sp, #104]
  421eb8:	cbz	w0, 422098 <ferror@plt+0x1f728>
  421ebc:	cbnz	w26, 421a98 <ferror@plt+0x1f128>
  421ec0:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x10198>
  421ec4:	add	x0, x3, #0x1
  421ec8:	add	x1, x1, #0xd9d
  421ecc:	mov	x2, #0x3                   	// #3
  421ed0:	str	x3, [sp, #104]
  421ed4:	bl	402690 <memcmp@plt>
  421ed8:	cbnz	w0, 421a98 <ferror@plt+0x1f128>
  421edc:	ldr	x3, [sp, #104]
  421ee0:	mov	w1, #0x73                  	// #115
  421ee4:	ldrb	w0, [x3, #4]
  421ee8:	cmp	w0, w1
  421eec:	b.ne	4220a8 <ferror@plt+0x1f738>  // b.any
  421ef0:	ldrb	w1, [x3, #5]
  421ef4:	cmp	w1, #0x20
  421ef8:	b.ne	4220a8 <ferror@plt+0x1f738>  // b.any
  421efc:	add	x21, x3, #0x6
  421f00:	cmp	w25, #0x66
  421f04:	b.eq	421f14 <ferror@plt+0x1f5a4>  // b.none
  421f08:	ldrb	w0, [x21]
  421f0c:	cmp	w0, #0x54
  421f10:	b.eq	421f24 <ferror@plt+0x1f5b4>  // b.none
  421f14:	cbnz	w26, 421a98 <ferror@plt+0x1f128>
  421f18:	ldrb	w0, [x21]
  421f1c:	cmp	w0, #0x74
  421f20:	b.ne	421a98 <ferror@plt+0x1f128>  // b.any
  421f24:	sub	x28, x28, x21
  421f28:	cmp	x28, #0x3
  421f2c:	b.ls	421a98 <ferror@plt+0x1f128>  // b.plast
  421f30:	add	x3, x21, #0x1
  421f34:	cmp	w26, #0x0
  421f38:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  421f3c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  421f40:	add	x0, x0, #0xd7a
  421f44:	add	x1, x1, #0xd76
  421f48:	csel	x1, x1, x0, ne  // ne = any
  421f4c:	mov	x2, #0x3                   	// #3
  421f50:	mov	x0, x3
  421f54:	str	x3, [sp, #104]
  421f58:	bl	402690 <memcmp@plt>
  421f5c:	cbz	w0, 4220e0 <ferror@plt+0x1f770>
  421f60:	cmp	x28, #0x6
  421f64:	b.ls	421a98 <ferror@plt+0x1f128>  // b.plast
  421f68:	ldr	x3, [sp, #104]
  421f6c:	cmp	w26, #0x0
  421f70:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  421f74:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  421f78:	add	x0, x0, #0xe7b
  421f7c:	add	x1, x1, #0xd7e
  421f80:	csel	x1, x1, x0, ne  // ne = any
  421f84:	mov	x2, #0x6                   	// #6
  421f88:	mov	x0, x3
  421f8c:	bl	402690 <memcmp@plt>
  421f90:	cbnz	w0, 421a98 <ferror@plt+0x1f128>
  421f94:	add	x21, x21, #0x7
  421f98:	mov	x1, #0x200                 	// #512
  421f9c:	movk	x1, #0x4003, lsl #32
  421fa0:	ldrb	w0, [x21]
  421fa4:	cmp	w0, #0x2e
  421fa8:	b.hi	421c7c <ferror@plt+0x1f30c>  // b.pmore
  421fac:	lsr	x2, x1, x0
  421fb0:	tbz	w2, #0, 4220e8 <ferror@plt+0x1f778>
  421fb4:	add	x21, x21, #0x1
  421fb8:	b	421fa0 <ferror@plt+0x1f630>
  421fbc:	mov	w26, #0x1                   	// #1
  421fc0:	b	421e30 <ferror@plt+0x1f4c0>
  421fc4:	cmp	w1, #0x49
  421fc8:	b.ne	422088 <ferror@plt+0x1f718>  // b.any
  421fcc:	ldr	x0, [x20]
  421fd0:	ldr	x0, [x0]
  421fd4:	sub	x0, x0, x21
  421fd8:	cmp	x0, #0x13
  421fdc:	b.ls	421a98 <ferror@plt+0x1f128>  // b.plast
  421fe0:	add	x25, x21, #0x1
  421fe4:	cmp	w28, #0x49
  421fe8:	b.ne	422004 <ferror@plt+0x1f694>  // b.any
  421fec:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  421ff0:	mov	x0, x25
  421ff4:	add	x1, x1, #0xe8e
  421ff8:	mov	x2, #0xa                   	// #10
  421ffc:	bl	402690 <memcmp@plt>
  422000:	cbz	w0, 42204c <ferror@plt+0x1f6dc>
  422004:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  422008:	mov	x0, x25
  42200c:	add	x1, x1, #0xe99
  422010:	mov	x2, #0xa                   	// #10
  422014:	bl	402690 <memcmp@plt>
  422018:	cbnz	w0, 421a98 <ferror@plt+0x1f128>
  42201c:	mov	w26, #0x0                   	// #0
  422020:	ldrb	w0, [x21, #11]
  422024:	cmp	w0, #0x20
  422028:	b.ne	422054 <ferror@plt+0x1f6e4>  // b.any
  42202c:	ldrb	w0, [x21, #12]
  422030:	add	x3, x21, #0xc
  422034:	cbz	w26, 422040 <ferror@plt+0x1f6d0>
  422038:	cmp	w0, #0x66
  42203c:	b.eq	421a98 <ferror@plt+0x1f128>  // b.none
  422040:	ldrb	w25, [x3]
  422044:	cmp	w28, #0x69
  422048:	b	421e68 <ferror@plt+0x1f4f8>
  42204c:	mov	w26, #0x1                   	// #1
  422050:	b	422020 <ferror@plt+0x1f6b0>
  422054:	add	x0, x21, #0xb
  422058:	cbz	w26, 422078 <ferror@plt+0x1f708>
  42205c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  422060:	add	x1, x1, #0xea4
  422064:	mov	x2, #0x4                   	// #4
  422068:	bl	402690 <memcmp@plt>
  42206c:	cbnz	w0, 421a98 <ferror@plt+0x1f128>
  422070:	add	x3, x21, #0xe
  422074:	b	422040 <ferror@plt+0x1f6d0>
  422078:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  42207c:	mov	x2, #0x3                   	// #3
  422080:	add	x1, x1, #0xea9
  422084:	b	422068 <ferror@plt+0x1f6f8>
  422088:	mov	w25, w28
  42208c:	mov	x3, x21
  422090:	mov	w26, #0x0                   	// #0
  422094:	b	421e74 <ferror@plt+0x1f504>
  422098:	ldrb	w0, [x3, #4]
  42209c:	mov	w26, #0x1                   	// #1
  4220a0:	mov	w1, #0x53                  	// #83
  4220a4:	b	421ee8 <ferror@plt+0x1f578>
  4220a8:	cmp	w0, #0x20
  4220ac:	b.eq	4220b8 <ferror@plt+0x1f748>  // b.none
  4220b0:	cmp	w0, #0x2d
  4220b4:	b.ne	4220c0 <ferror@plt+0x1f750>  // b.any
  4220b8:	add	x21, x3, #0x5
  4220bc:	b	421f00 <ferror@plt+0x1f590>
  4220c0:	cmp	w26, #0x0
  4220c4:	mov	w1, #0x54                  	// #84
  4220c8:	mov	w2, #0x74                  	// #116
  4220cc:	csel	w1, w1, w2, ne  // ne = any
  4220d0:	cmp	w0, w1
  4220d4:	b.ne	421a98 <ferror@plt+0x1f128>  // b.any
  4220d8:	add	x21, x3, #0x4
  4220dc:	b	421f00 <ferror@plt+0x1f590>
  4220e0:	add	x21, x21, #0x4
  4220e4:	b	421f98 <ferror@plt+0x1f628>
  4220e8:	cmp	w0, #0x2d
  4220ec:	b.ne	421c7c <ferror@plt+0x1f30c>  // b.any
  4220f0:	ldrb	w1, [x22]
  4220f4:	add	x0, x21, #0x1
  4220f8:	cmp	w1, #0x2a
  4220fc:	b.ne	422144 <ferror@plt+0x1f7d4>  // b.any
  422100:	add	x0, x21, #0x2
  422104:	ldurb	w1, [x0, #-1]
  422108:	sub	x21, x0, #0x1
  42210c:	cmp	w1, #0x2a
  422110:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  422114:	b.eq	422130 <ferror@plt+0x1f7c0>  // b.none
  422118:	cmp	w1, #0xa
  42211c:	b.eq	421c7c <ferror@plt+0x1f30c>  // b.none
  422120:	cmp	w1, #0xd
  422124:	b.eq	421c7c <ferror@plt+0x1f30c>  // b.none
  422128:	add	x0, x0, #0x1
  42212c:	b	422104 <ferror@plt+0x1f794>
  422130:	cmp	w1, #0x2a
  422134:	b.ne	421c7c <ferror@plt+0x1f30c>  // b.any
  422138:	ldrb	w1, [x0]
  42213c:	cmp	w1, #0x2f
  422140:	b	422124 <ferror@plt+0x1f7b4>
  422144:	mov	x21, x0
  422148:	mov	x1, #0x2401                	// #9217
  42214c:	ldrb	w0, [x21]
  422150:	cmp	w0, #0xd
  422154:	b.hi	422160 <ferror@plt+0x1f7f0>  // b.pmore
  422158:	lsr	x0, x1, x0
  42215c:	tbnz	w0, #0, 421c7c <ferror@plt+0x1f30c>
  422160:	add	x21, x21, #0x1
  422164:	b	42214c <ferror@plt+0x1f7dc>
  422168:	cmp	w0, #0xa
  42216c:	b	42191c <ferror@plt+0x1efac>
  422170:	cbz	w23, 422180 <ferror@plt+0x1f810>
  422174:	ldrh	w0, [x19, #6]
  422178:	orr	w0, w0, #0x20
  42217c:	strh	w0, [x19, #6]
  422180:	ldr	x0, [x20]
  422184:	ldr	x25, [x0]
  422188:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  42218c:	add	x0, x0, #0x21a
  422190:	ldurb	w1, [x25, #-1]
  422194:	sub	w25, w25, w22
  422198:	ldrh	w0, [x0, x1, lsl #1]
  42219c:	tst	x0, #0x400
  4221a0:	ldrb	w0, [x20, #16]
  4221a4:	cinc	w25, w25, eq  // eq = none
  4221a8:	cbnz	w0, 4221b4 <ferror@plt+0x1f844>
  4221ac:	ldrb	w0, [x20, #25]
  4221b0:	cbz	w0, 422270 <ferror@plt+0x1f900>
  4221b4:	add	w21, w25, #0x2
  4221b8:	cmp	w24, #0x2f
  4221bc:	csel	w21, w21, w25, eq  // eq = none
  4221c0:	mov	w1, w21
  4221c4:	mov	x0, x20
  4221c8:	bl	420710 <ferror@plt+0x1dda0>
  4221cc:	mov	x23, x0
  4221d0:	mov	w0, #0x4f                  	// #79
  4221d4:	strb	w0, [x19, #4]
  4221d8:	mov	x0, x23
  4221dc:	str	w21, [x19, #8]
  4221e0:	str	x23, [x19, #16]
  4221e4:	mov	w1, #0x2f                  	// #47
  4221e8:	sub	w2, w25, #0x1
  4221ec:	strb	w1, [x0], #1
  4221f0:	mov	x1, x22
  4221f4:	bl	4022e0 <memcpy@plt>
  4221f8:	ldrb	w0, [x20, #16]
  4221fc:	cbnz	w0, 422208 <ferror@plt+0x1f898>
  422200:	ldrb	w0, [x20, #25]
  422204:	cbz	w0, 422278 <ferror@plt+0x1f908>
  422208:	cmp	w24, #0x2f
  42220c:	b.ne	422278 <ferror@plt+0x1f908>  // b.any
  422210:	sub	w2, w21, #0x2
  422214:	sub	w21, w21, #0x1
  422218:	mov	w0, #0x2a                  	// #42
  42221c:	strb	w0, [x23, #1]
  422220:	mov	w1, #0x2                   	// #2
  422224:	mov	w3, #0x7c                  	// #124
  422228:	strb	w0, [x23, w2, uxtw]
  42222c:	add	x0, x23, #0x2
  422230:	strb	w24, [x23, x21]
  422234:	cmp	w2, w1
  422238:	b.ls	422278 <ferror@plt+0x1f908>  // b.plast
  42223c:	ldrb	w4, [x0]
  422240:	add	w1, w1, #0x1
  422244:	cmp	w4, #0x2f
  422248:	b.ne	422268 <ferror@plt+0x1f8f8>  // b.any
  42224c:	ldurb	w4, [x0, #-1]
  422250:	cmp	w4, #0x2a
  422254:	b.eq	422264 <ferror@plt+0x1f8f4>  // b.none
  422258:	ldrb	w4, [x23, w1, uxtw]
  42225c:	cmp	w4, #0x2a
  422260:	b.ne	422268 <ferror@plt+0x1f8f8>  // b.any
  422264:	strb	w3, [x0]
  422268:	add	x0, x0, #0x1
  42226c:	b	422234 <ferror@plt+0x1f8c4>
  422270:	mov	w21, w25
  422274:	b	4221c0 <ferror@plt+0x1f850>
  422278:	ldr	w0, [x20, #1396]
  42227c:	cbnz	w0, 422294 <ferror@plt+0x1f924>
  422280:	mov	w0, #0x100                 	// #256
  422284:	str	w0, [x20, #1396]
  422288:	mov	x0, #0x1000                	// #4096
  42228c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  422290:	str	x0, [x20, #1384]
  422294:	ldr	w1, [x20, #1392]
  422298:	ldr	w0, [x20, #1396]
  42229c:	cmp	w1, w0
  4222a0:	b.ne	4222bc <ferror@plt+0x1f94c>  // b.any
  4222a4:	ldr	x0, [x20, #1384]
  4222a8:	lsl	w1, w1, #1
  4222ac:	str	w1, [x20, #1396]
  4222b0:	sbfiz	x1, x1, #4, #32
  4222b4:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4222b8:	str	x0, [x20, #1384]
  4222bc:	ldrsw	x22, [x20, #1392]
  4222c0:	ldr	w21, [x19, #8]
  4222c4:	ldr	x23, [x20, #1384]
  4222c8:	add	w0, w21, #0x1
  4222cc:	lsl	x22, x22, #4
  4222d0:	sxtw	x21, w21
  4222d4:	sxtw	x0, w0
  4222d8:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  4222dc:	ldr	x3, [x20, #1384]
  4222e0:	str	x0, [x23, x22]
  4222e4:	ldrsw	x0, [x20, #1392]
  4222e8:	mov	x2, x21
  4222ec:	ldr	x1, [x19, #16]
  4222f0:	lsl	x0, x0, #4
  4222f4:	ldr	x0, [x3, x0]
  4222f8:	bl	4022e0 <memcpy@plt>
  4222fc:	ldrsw	x0, [x20, #1392]
  422300:	ldr	x1, [x20, #1384]
  422304:	lsl	x0, x0, #4
  422308:	ldr	x0, [x1, x0]
  42230c:	strb	wzr, [x0, x21]
  422310:	ldr	x1, [x20, #1384]
  422314:	ldr	w0, [x20, #1392]
  422318:	ldr	w2, [x19]
  42231c:	add	x1, x1, w0, sxtw #4
  422320:	add	w0, w0, #0x1
  422324:	str	w2, [x1, #8]
  422328:	str	w0, [x20, #1392]
  42232c:	b	4217cc <ferror@plt+0x1ee5c>
  422330:	ldrb	w0, [x20, #19]
  422334:	cbnz	w0, 422360 <ferror@plt+0x1f9f0>
  422338:	mov	w0, #0x3                   	// #3
  42233c:	strb	w0, [x19, #4]
  422340:	ldr	x0, [x27]
  422344:	ldrb	w1, [x0]
  422348:	cmp	w1, #0x3d
  42234c:	b.ne	422384 <ferror@plt+0x1fa14>  // b.any
  422350:	add	x0, x0, #0x1
  422354:	str	x0, [x27]
  422358:	mov	w0, #0x1a                  	// #26
  42235c:	b	421a80 <ferror@plt+0x1f110>
  422360:	ldr	x2, [x27]
  422364:	mov	x0, x20
  422368:	mov	x1, x19
  42236c:	sub	x2, x2, #0x1
  422370:	bl	4207cc <ferror@plt+0x1de5c>
  422374:	ldrb	w0, [x19, #4]
  422378:	cmp	w0, #0x3
  42237c:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422380:	b	422338 <ferror@plt+0x1f9c8>
  422384:	cmp	w1, #0x3c
  422388:	b.ne	4223b8 <ferror@plt+0x1fa48>  // b.any
  42238c:	add	x1, x0, #0x1
  422390:	str	x1, [x27]
  422394:	mov	w1, #0xd                   	// #13
  422398:	strb	w1, [x19, #4]
  42239c:	ldrb	w1, [x0, #1]
  4223a0:	cmp	w1, #0x3d
  4223a4:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  4223a8:	add	x0, x0, #0x2
  4223ac:	str	x0, [x27]
  4223b0:	mov	w0, #0x24                  	// #36
  4223b4:	b	421a80 <ferror@plt+0x1f110>
  4223b8:	ldrb	w2, [x20, #1126]
  4223bc:	cbz	w2, 4217cc <ferror@plt+0x1ee5c>
  4223c0:	cmp	w1, #0x3a
  4223c4:	b.ne	42241c <ferror@plt+0x1faac>  // b.any
  4223c8:	ldrb	w1, [x20, #1120]
  4223cc:	cbz	w1, 422400 <ferror@plt+0x1fa90>
  4223d0:	ldr	w1, [x20, #1116]
  4223d4:	sub	w1, w1, #0xb
  4223d8:	cmp	w1, #0x1
  4223dc:	b.ls	422400 <ferror@plt+0x1fa90>  // b.plast
  4223e0:	ldrb	w1, [x0, #1]
  4223e4:	cmp	w1, #0x3a
  4223e8:	b.ne	422400 <ferror@plt+0x1fa90>  // b.any
  4223ec:	ldrb	w1, [x0, #2]
  4223f0:	and	w1, w1, #0xfffffffb
  4223f4:	and	w1, w1, #0xff
  4223f8:	cmp	w1, #0x3a
  4223fc:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422400:	add	x0, x0, #0x1
  422404:	str	x0, [x27]
  422408:	ldrh	w0, [x19, #6]
  42240c:	orr	w0, w0, #0x2
  422410:	strh	w0, [x19, #6]
  422414:	mov	w0, #0x27                  	// #39
  422418:	b	421a80 <ferror@plt+0x1f110>
  42241c:	cmp	w1, #0x25
  422420:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422424:	add	x0, x0, #0x1
  422428:	str	x0, [x27]
  42242c:	ldrh	w0, [x19, #6]
  422430:	orr	w0, w0, #0x2
  422434:	strh	w0, [x19, #6]
  422438:	mov	w0, #0x29                  	// #41
  42243c:	b	421a80 <ferror@plt+0x1f110>
  422440:	mov	w0, #0x2                   	// #2
  422444:	strb	w0, [x19, #4]
  422448:	ldr	x0, [x27]
  42244c:	ldrb	w1, [x0]
  422450:	cmp	w1, #0x3d
  422454:	b.ne	422468 <ferror@plt+0x1faf8>  // b.any
  422458:	add	x0, x0, #0x1
  42245c:	str	x0, [x27]
  422460:	mov	w0, #0x19                  	// #25
  422464:	b	421a80 <ferror@plt+0x1f110>
  422468:	cmp	w1, #0x3e
  42246c:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422470:	add	x1, x0, #0x1
  422474:	str	x1, [x27]
  422478:	mov	w1, #0xc                   	// #12
  42247c:	strb	w1, [x19, #4]
  422480:	ldrb	w1, [x0, #1]
  422484:	cmp	w1, #0x3d
  422488:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  42248c:	add	x0, x0, #0x2
  422490:	str	x0, [x27]
  422494:	mov	w0, #0x23                  	// #35
  422498:	b	421a80 <ferror@plt+0x1f110>
  42249c:	mov	w0, #0x8                   	// #8
  4224a0:	strb	w0, [x19, #4]
  4224a4:	ldr	x0, [x27]
  4224a8:	ldrb	w1, [x0]
  4224ac:	cmp	w1, #0x3d
  4224b0:	b.ne	4224c4 <ferror@plt+0x1fb54>  // b.any
  4224b4:	add	x0, x0, #0x1
  4224b8:	str	x0, [x27]
  4224bc:	mov	w0, #0x1f                  	// #31
  4224c0:	b	421a80 <ferror@plt+0x1f110>
  4224c4:	ldrb	w2, [x20, #1126]
  4224c8:	cbz	w2, 4217cc <ferror@plt+0x1ee5c>
  4224cc:	cmp	w1, #0x3a
  4224d0:	b.ne	422520 <ferror@plt+0x1fbb0>  // b.any
  4224d4:	add	x1, x0, #0x1
  4224d8:	str	x1, [x27]
  4224dc:	ldrh	w1, [x19, #6]
  4224e0:	orr	w1, w1, #0x2
  4224e4:	strh	w1, [x19, #6]
  4224e8:	mov	w1, #0x25                  	// #37
  4224ec:	strb	w1, [x19, #4]
  4224f0:	ldrb	w1, [x0, #1]
  4224f4:	cmp	w1, #0x25
  4224f8:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  4224fc:	ldrb	w1, [x0, #2]
  422500:	cmp	w1, #0x3a
  422504:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422508:	add	x0, x0, #0x3
  42250c:	str	x0, [x27]
  422510:	mov	w0, #0x26                  	// #38
  422514:	strb	w0, [x19, #4]
  422518:	str	wzr, [x19, #8]
  42251c:	b	4217cc <ferror@plt+0x1ee5c>
  422520:	cmp	w1, #0x3e
  422524:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422528:	add	x0, x0, #0x1
  42252c:	str	x0, [x27]
  422530:	ldrh	w0, [x19, #6]
  422534:	orr	w0, w0, #0x2
  422538:	strh	w0, [x19, #6]
  42253c:	mov	w0, #0x2a                  	// #42
  422540:	b	421a80 <ferror@plt+0x1f110>
  422544:	mov	w0, #0x30                  	// #48
  422548:	strb	w0, [x19, #4]
  42254c:	ldr	x0, [x27]
  422550:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  422554:	add	x1, x1, #0x21a
  422558:	ldrb	w3, [x0]
  42255c:	ldrb	w2, [x0]
  422560:	ldrh	w1, [x1, x3, lsl #1]
  422564:	tbz	w1, #2, 4225a0 <ferror@plt+0x1fc30>
  422568:	str	wzr, [sp, #112]
  42256c:	mov	w0, #0x37                  	// #55
  422570:	strb	wzr, [sp, #116]
  422574:	add	x2, sp, #0x70
  422578:	str	wzr, [sp, #120]
  42257c:	add	x1, x19, #0x8
  422580:	strb	w0, [x19, #4]
  422584:	mov	x0, x20
  422588:	bl	421308 <ferror@plt+0x1e998>
  42258c:	add	x2, sp, #0x78
  422590:	mov	x1, x19
  422594:	mov	x0, x20
  422598:	bl	41fdb8 <ferror@plt+0x1d448>
  42259c:	b	4217cc <ferror@plt+0x1ee5c>
  4225a0:	cmp	w2, #0x2e
  4225a4:	b.ne	4225c4 <ferror@plt+0x1fc54>  // b.any
  4225a8:	ldrb	w1, [x0, #1]
  4225ac:	cmp	w1, #0x2e
  4225b0:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  4225b4:	add	x0, x0, #0x2
  4225b8:	str	x0, [x27]
  4225bc:	mov	w0, #0x2c                  	// #44
  4225c0:	b	421a80 <ferror@plt+0x1f110>
  4225c4:	cmp	w2, #0x2a
  4225c8:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  4225cc:	ldrb	w1, [x20, #1120]
  4225d0:	cbz	w1, 4217cc <ferror@plt+0x1ee5c>
  4225d4:	add	x0, x0, #0x1
  4225d8:	str	x0, [x27]
  4225dc:	mov	w0, #0x33                  	// #51
  4225e0:	b	421a80 <ferror@plt+0x1f110>
  4225e4:	mov	w0, #0x4                   	// #4
  4225e8:	strb	w0, [x19, #4]
  4225ec:	ldr	x0, [x27]
  4225f0:	ldrb	w1, [x0]
  4225f4:	cmp	w1, #0x2b
  4225f8:	b.ne	42260c <ferror@plt+0x1fc9c>  // b.any
  4225fc:	add	x0, x0, #0x1
  422600:	str	x0, [x27]
  422604:	mov	w0, #0x2d                  	// #45
  422608:	b	421a80 <ferror@plt+0x1f110>
  42260c:	cmp	w1, #0x3d
  422610:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422614:	add	x0, x0, #0x1
  422618:	str	x0, [x27]
  42261c:	mov	w0, #0x1b                  	// #27
  422620:	b	421a80 <ferror@plt+0x1f110>
  422624:	mov	w0, #0x5                   	// #5
  422628:	strb	w0, [x19, #4]
  42262c:	ldr	x0, [x27]
  422630:	ldrb	w1, [x0]
  422634:	cmp	w1, #0x3e
  422638:	b.ne	422670 <ferror@plt+0x1fd00>  // b.any
  42263c:	add	x1, x0, #0x1
  422640:	str	x1, [x27]
  422644:	mov	w1, #0x2f                  	// #47
  422648:	strb	w1, [x19, #4]
  42264c:	ldrb	w1, [x0, #1]
  422650:	cmp	w1, #0x2a
  422654:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422658:	ldrb	w1, [x20, #1120]
  42265c:	cbz	w1, 4217cc <ferror@plt+0x1ee5c>
  422660:	add	x0, x0, #0x2
  422664:	str	x0, [x27]
  422668:	mov	w0, #0x32                  	// #50
  42266c:	b	421a80 <ferror@plt+0x1f110>
  422670:	cmp	w1, #0x2d
  422674:	b.ne	422688 <ferror@plt+0x1fd18>  // b.any
  422678:	add	x0, x0, #0x1
  42267c:	str	x0, [x27]
  422680:	mov	w0, #0x2e                  	// #46
  422684:	b	421a80 <ferror@plt+0x1f110>
  422688:	cmp	w1, #0x3d
  42268c:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422690:	add	x0, x0, #0x1
  422694:	str	x0, [x27]
  422698:	mov	w0, #0x1c                  	// #28
  42269c:	b	421a80 <ferror@plt+0x1f110>
  4226a0:	mov	w0, #0x9                   	// #9
  4226a4:	strb	w0, [x19, #4]
  4226a8:	ldr	x0, [x27]
  4226ac:	ldrb	w1, [x0]
  4226b0:	cmp	w1, #0x26
  4226b4:	b.ne	4226c8 <ferror@plt+0x1fd58>  // b.any
  4226b8:	add	x0, x0, #0x1
  4226bc:	str	x0, [x27]
  4226c0:	mov	w0, #0xf                   	// #15
  4226c4:	b	421a80 <ferror@plt+0x1f110>
  4226c8:	cmp	w1, #0x3d
  4226cc:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  4226d0:	add	x0, x0, #0x1
  4226d4:	str	x0, [x27]
  4226d8:	mov	w0, #0x20                  	// #32
  4226dc:	b	421a80 <ferror@plt+0x1f110>
  4226e0:	mov	w0, #0xa                   	// #10
  4226e4:	strb	w0, [x19, #4]
  4226e8:	ldr	x0, [x27]
  4226ec:	ldrb	w1, [x0]
  4226f0:	cmp	w1, #0x7c
  4226f4:	b.ne	422708 <ferror@plt+0x1fd98>  // b.any
  4226f8:	add	x0, x0, #0x1
  4226fc:	str	x0, [x27]
  422700:	mov	w0, #0x10                  	// #16
  422704:	b	421a80 <ferror@plt+0x1f110>
  422708:	cmp	w1, #0x3d
  42270c:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422710:	add	x0, x0, #0x1
  422714:	str	x0, [x27]
  422718:	mov	w0, #0x21                  	// #33
  42271c:	b	421a80 <ferror@plt+0x1f110>
  422720:	mov	w0, #0x12                  	// #18
  422724:	strb	w0, [x19, #4]
  422728:	ldr	x0, [x27]
  42272c:	ldrb	w1, [x0]
  422730:	cmp	w1, #0x3a
  422734:	b.ne	422750 <ferror@plt+0x1fde0>  // b.any
  422738:	ldrb	w1, [x20, #1120]
  42273c:	cbz	w1, 4217cc <ferror@plt+0x1ee5c>
  422740:	add	x0, x0, #0x1
  422744:	str	x0, [x27]
  422748:	mov	w0, #0x31                  	// #49
  42274c:	b	421a80 <ferror@plt+0x1f110>
  422750:	cmp	w1, #0x3e
  422754:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422758:	ldrb	w1, [x20, #1126]
  42275c:	cbz	w1, 4217cc <ferror@plt+0x1ee5c>
  422760:	add	x0, x0, #0x1
  422764:	str	x0, [x27]
  422768:	ldrh	w0, [x19, #6]
  42276c:	orr	w0, w0, #0x2
  422770:	strh	w0, [x19, #6]
  422774:	mov	w0, #0x28                  	// #40
  422778:	b	421a80 <ferror@plt+0x1f110>
  42277c:	mov	w0, #0x6                   	// #6
  422780:	strb	w0, [x19, #4]
  422784:	ldr	x0, [x27]
  422788:	ldrb	w1, [x0]
  42278c:	cmp	w1, #0x3d
  422790:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422794:	add	x0, x0, #0x1
  422798:	str	x0, [x27]
  42279c:	mov	w0, #0x1d                  	// #29
  4227a0:	b	421a80 <ferror@plt+0x1f110>
  4227a4:	ldr	x0, [x27]
  4227a8:	strb	wzr, [x19, #4]
  4227ac:	ldrb	w1, [x0]
  4227b0:	cmp	w1, #0x3d
  4227b4:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  4227b8:	add	x0, x0, #0x1
  4227bc:	str	x0, [x27]
  4227c0:	mov	w0, #0x17                  	// #23
  4227c4:	b	421a80 <ferror@plt+0x1f110>
  4227c8:	mov	w0, #0x1                   	// #1
  4227cc:	strb	w0, [x19, #4]
  4227d0:	ldr	x0, [x27]
  4227d4:	ldrb	w1, [x0]
  4227d8:	cmp	w1, #0x3d
  4227dc:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  4227e0:	add	x0, x0, #0x1
  4227e4:	str	x0, [x27]
  4227e8:	mov	w0, #0x18                  	// #24
  4227ec:	b	421a80 <ferror@plt+0x1f110>
  4227f0:	mov	w0, #0xb                   	// #11
  4227f4:	strb	w0, [x19, #4]
  4227f8:	ldr	x0, [x27]
  4227fc:	ldrb	w1, [x0]
  422800:	cmp	w1, #0x3d
  422804:	b.ne	4217cc <ferror@plt+0x1ee5c>  // b.any
  422808:	add	x0, x0, #0x1
  42280c:	str	x0, [x27]
  422810:	mov	w0, #0x22                  	// #34
  422814:	b	421a80 <ferror@plt+0x1f110>
  422818:	mov	w0, #0x25                  	// #37
  42281c:	strb	w0, [x19, #4]
  422820:	ldr	x0, [x27]
  422824:	ldrb	w1, [x0]
  422828:	cmp	w1, #0x23
  42282c:	b.ne	422518 <ferror@plt+0x1fba8>  // b.any
  422830:	add	x0, x0, #0x1
  422834:	b	42250c <ferror@plt+0x1fb9c>
  422838:	mov	w0, #0x11                  	// #17
  42283c:	b	421a80 <ferror@plt+0x1f110>
  422840:	mov	w0, #0xe                   	// #14
  422844:	b	421a80 <ferror@plt+0x1f110>
  422848:	mov	w0, #0x13                  	// #19
  42284c:	b	421a80 <ferror@plt+0x1f110>
  422850:	mov	w0, #0x14                  	// #20
  422854:	b	421a80 <ferror@plt+0x1f110>
  422858:	mov	w0, #0x15                  	// #21
  42285c:	b	421a80 <ferror@plt+0x1f110>
  422860:	mov	w0, #0x2b                  	// #43
  422864:	b	421a80 <ferror@plt+0x1f110>
  422868:	mov	w0, #0x34                  	// #52
  42286c:	b	421a80 <ferror@plt+0x1f110>
  422870:	ldr	x21, [x27]
  422874:	add	x2, sp, #0x70
  422878:	mov	x0, x20
  42287c:	mov	w1, #0x1                   	// #1
  422880:	sub	x21, x21, #0x1
  422884:	str	x21, [x27]
  422888:	str	wzr, [sp, #112]
  42288c:	strb	wzr, [sp, #116]
  422890:	str	wzr, [sp, #120]
  422894:	bl	41ec74 <ferror@plt+0x1c304>
  422898:	tst	w0, #0xff
  42289c:	b.eq	4228c8 <ferror@plt+0x1ff58>  // b.none
  4228a0:	mov	w0, #0x35                  	// #53
  4228a4:	strb	w0, [x19, #4]
  4228a8:	add	x4, x19, #0x10
  4228ac:	add	x3, sp, #0x70
  4228b0:	mov	x1, x21
  4228b4:	mov	x0, x20
  4228b8:	mov	w2, #0x1                   	// #1
  4228bc:	bl	41ee40 <ferror@plt+0x1c4d0>
  4228c0:	str	x0, [x19, #8]
  4228c4:	b	42258c <ferror@plt+0x1fc1c>
  4228c8:	ldr	x0, [x27]
  4228cc:	add	x0, x0, #0x1
  4228d0:	str	x0, [x27]
  4228d4:	ldr	x2, [x27]
  4228d8:	mov	x1, x19
  4228dc:	mov	x0, x20
  4228e0:	mov	w4, #0x3d                  	// #61
  4228e4:	sub	x2, x2, #0x1
  4228e8:	mov	w3, #0x1                   	// #1
  4228ec:	bl	420768 <ferror@plt+0x1ddf8>
  4228f0:	b	4217cc <ferror@plt+0x1ee5c>
  4228f4:	stp	x29, x30, [sp, #-48]!
  4228f8:	mov	x29, sp
  4228fc:	stp	x19, x20, [sp, #16]
  422900:	mov	x19, x0
  422904:	str	x21, [sp, #32]
  422908:	add	x21, x0, #0x98
  42290c:	ldr	x0, [x19, #488]
  422910:	ldr	x2, [x19, #448]
  422914:	ldr	x1, [x0, #24]
  422918:	cmp	x2, x1
  42291c:	b.ne	422930 <ferror@plt+0x1ffc0>  // b.any
  422920:	bl	41f9a0 <ferror@plt+0x1d030>
  422924:	str	x0, [x19, #488]
  422928:	ldr	x0, [x0, #16]
  42292c:	str	x0, [x19, #448]
  422930:	ldr	x0, [x19, #488]
  422934:	ldr	x20, [x19, #448]
  422938:	ldr	x1, [x0, #16]
  42293c:	cmp	x20, x1
  422940:	b.cc	422950 <ferror@plt+0x1ffe0>  // b.lo, b.ul, b.last
  422944:	ldr	x0, [x0, #24]
  422948:	cmp	x20, x0
  42294c:	b.cc	422968 <ferror@plt+0x1fff8>  // b.lo, b.ul, b.last
  422950:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  422954:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  422958:	add	x2, x2, #0xeb1
  42295c:	add	x0, x0, #0x943
  422960:	mov	w1, #0xa1d                 	// #2589
  422964:	bl	402980 <ferror@plt+0x10>
  422968:	ldr	w0, [x19, #496]
  42296c:	cbz	w0, 422a1c <ferror@plt+0x200ac>
  422970:	sub	w0, w0, #0x1
  422974:	str	w0, [x19, #496]
  422978:	add	x0, x20, #0x18
  42297c:	str	x0, [x19, #448]
  422980:	ldrh	w1, [x20, #6]
  422984:	tbz	w1, #6, 4229e0 <ferror@plt+0x20070>
  422988:	ldrb	w0, [x20, #4]
  42298c:	cmp	w0, #0x25
  422990:	b.ne	422a2c <ferror@plt+0x200bc>  // b.any
  422994:	ldrb	w0, [x19, #25]
  422998:	cmp	w0, #0x1
  42299c:	b.eq	422a2c <ferror@plt+0x200bc>  // b.none
  4229a0:	and	w1, w1, #0x1
  4229a4:	mov	x0, x19
  4229a8:	bl	417b68 <ferror@plt+0x151f8>
  4229ac:	cbz	w0, 4229c0 <ferror@plt+0x20050>
  4229b0:	ldrb	w0, [x19, #156]
  4229b4:	cmp	w0, #0x53
  4229b8:	b.eq	42290c <ferror@plt+0x1ff9c>  // b.none
  4229bc:	mov	x20, x21
  4229c0:	ldr	x3, [x19, #904]
  4229c4:	cbz	x3, 4229e0 <ferror@plt+0x20070>
  4229c8:	ldrb	w0, [x19, #18]
  4229cc:	cbnz	w0, 4229e0 <ferror@plt+0x20070>
  4229d0:	ldrb	w2, [x19, #25]
  4229d4:	mov	x1, x20
  4229d8:	mov	x0, x19
  4229dc:	blr	x3
  4229e0:	ldrb	w0, [x19, #16]
  4229e4:	cbnz	w0, 422a08 <ferror@plt+0x20098>
  4229e8:	ldrb	w0, [x19, #32]
  4229ec:	cbnz	w0, 422a08 <ferror@plt+0x20098>
  4229f0:	ldrb	w0, [x19, #18]
  4229f4:	strb	wzr, [x19, #440]
  4229f8:	cbz	w0, 422a08 <ferror@plt+0x20098>
  4229fc:	ldrb	w0, [x20, #4]
  422a00:	cmp	w0, #0x16
  422a04:	b.ne	42290c <ferror@plt+0x1ff9c>  // b.any
  422a08:	mov	x0, x20
  422a0c:	ldp	x19, x20, [sp, #16]
  422a10:	ldr	x21, [sp, #32]
  422a14:	ldp	x29, x30, [sp], #48
  422a18:	ret
  422a1c:	mov	x0, x19
  422a20:	bl	421448 <ferror@plt+0x1ead8>
  422a24:	mov	x20, x0
  422a28:	b	422980 <ferror@plt+0x20010>
  422a2c:	ldrb	w0, [x19, #32]
  422a30:	cbnz	w0, 4229bc <ferror@plt+0x2004c>
  422a34:	b	4229c0 <ferror@plt+0x20050>
  422a38:	stp	x29, x30, [sp, #-64]!
  422a3c:	mov	x29, sp
  422a40:	stp	x19, x20, [sp, #16]
  422a44:	mov	x19, x0
  422a48:	mov	w20, w1
  422a4c:	stp	x21, x22, [sp, #32]
  422a50:	ldr	x21, [x0, #136]
  422a54:	str	x23, [sp, #48]
  422a58:	ldr	x22, [x21, #8]
  422a5c:	cbz	x22, 422ad8 <ferror@plt+0x20168>
  422a60:	mov	x0, x21
  422a64:	bl	41f9e0 <ferror@plt+0x1d070>
  422a68:	cmp	w0, w20
  422a6c:	b.le	422acc <ferror@plt+0x2015c>
  422a70:	ldr	w0, [x21, #48]
  422a74:	cmp	w0, #0x1
  422a78:	b.ne	422aa0 <ferror@plt+0x20130>  // b.any
  422a7c:	ldr	x0, [x21, #16]
  422a80:	mov	w21, #0x18                  	// #24
  422a84:	smaddl	x21, w20, w21, x0
  422a88:	mov	x0, x21
  422a8c:	ldp	x19, x20, [sp, #16]
  422a90:	ldp	x21, x22, [sp, #32]
  422a94:	ldr	x23, [sp, #48]
  422a98:	ldp	x29, x30, [sp], #64
  422a9c:	ret
  422aa0:	tst	w0, #0xfffffffd
  422aa4:	b.ne	422ab4 <ferror@plt+0x20144>  // b.any
  422aa8:	ldr	x0, [x21, #16]
  422aac:	ldr	x21, [x0, w20, sxtw #3]
  422ab0:	b	422a88 <ferror@plt+0x20118>
  422ab4:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x18198>
  422ab8:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x18198>
  422abc:	add	x2, x2, #0xec0
  422ac0:	add	x0, x0, #0x943
  422ac4:	mov	w1, #0x9ad                 	// #2477
  422ac8:	bl	402980 <ferror@plt+0x10>
  422acc:	sub	w20, w20, w0
  422ad0:	mov	x21, x22
  422ad4:	b	422a58 <ferror@plt+0x200e8>
  422ad8:	ldr	w0, [x19, #500]
  422adc:	mov	w22, w20
  422ae0:	ldr	x23, [x19, #904]
  422ae4:	add	w0, w0, #0x1
  422ae8:	str	w0, [x19, #500]
  422aec:	str	xzr, [x19, #904]
  422af0:	mov	x0, x19
  422af4:	bl	4228f4 <ferror@plt+0x1ff84>
  422af8:	mov	x21, x0
  422afc:	mov	w0, w22
  422b00:	sub	w22, w22, #0x1
  422b04:	ldrb	w1, [x21, #4]
  422b08:	cmp	w1, #0x16
  422b0c:	b.eq	422b18 <ferror@plt+0x201a8>  // b.none
  422b10:	cbnz	w0, 422af0 <ferror@plt+0x20180>
  422b14:	mov	w22, #0xffffffff            	// #-1
  422b18:	mov	x0, x19
  422b1c:	sub	w1, w20, w22
  422b20:	bl	4260b4 <ferror@plt+0x23744>
  422b24:	str	x23, [x19, #904]
  422b28:	ldr	w0, [x19, #500]
  422b2c:	sub	w0, w0, #0x1
  422b30:	str	w0, [x19, #500]
  422b34:	b	422a88 <ferror@plt+0x20118>
  422b38:	stp	x29, x30, [sp, #-32]!
  422b3c:	mov	x29, sp
  422b40:	ldr	x2, [x0, #56]
  422b44:	stp	x19, x20, [sp, #16]
  422b48:	mov	x19, x1
  422b4c:	ldp	x3, x4, [x2, #16]
  422b50:	sub	x4, x4, x3
  422b54:	cmp	x4, x1
  422b58:	b.cs	422b78 <ferror@plt+0x20208>  // b.hs, b.nlast
  422b5c:	mov	x20, x0
  422b60:	bl	4204e0 <ferror@plt+0x1db70>
  422b64:	mov	x2, x0
  422b68:	ldr	x3, [x0, #16]
  422b6c:	ldr	x0, [x20, #56]
  422b70:	str	x0, [x2]
  422b74:	str	x2, [x20, #56]
  422b78:	add	x19, x3, x19
  422b7c:	str	x19, [x2, #16]
  422b80:	mov	x0, x3
  422b84:	ldp	x19, x20, [sp, #16]
  422b88:	ldp	x29, x30, [sp], #32
  422b8c:	ret
  422b90:	stp	x29, x30, [sp, #-48]!
  422b94:	mov	x29, sp
  422b98:	stp	x19, x20, [sp, #16]
  422b9c:	mov	x19, x1
  422ba0:	ldr	x1, [x0, #56]
  422ba4:	ldr	x0, [x0, #1088]
  422ba8:	ldr	x2, [x0, #104]
  422bac:	str	x21, [sp, #32]
  422bb0:	ldr	x21, [x1, #16]
  422bb4:	cbz	x2, 422be4 <ferror@plt+0x20274>
  422bb8:	mov	x0, x19
  422bbc:	blr	x2
  422bc0:	mov	x2, x19
  422bc4:	mov	x20, x0
  422bc8:	mov	x1, x21
  422bcc:	bl	4022e0 <memcpy@plt>
  422bd0:	mov	x0, x20
  422bd4:	ldp	x19, x20, [sp, #16]
  422bd8:	ldr	x21, [sp, #32]
  422bdc:	ldp	x29, x30, [sp], #48
  422be0:	ret
  422be4:	add	x19, x21, x19
  422be8:	mov	x20, x21
  422bec:	str	x19, [x1, #16]
  422bf0:	b	422bd0 <ferror@plt+0x20260>
  422bf4:	ldrb	w1, [x0, #4]
  422bf8:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  422bfc:	ldrb	w0, [x0, #4]
  422c00:	add	x2, x2, #0x190
  422c04:	lsl	x0, x0, #4
  422c08:	ldr	w0, [x2, x0]
  422c0c:	cmp	w0, #0x3
  422c10:	b.hi	422c2c <ferror@plt+0x202bc>  // b.pmore
  422c14:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  422c18:	add	x2, x2, #0x18c
  422c1c:	ldrb	w2, [x2, w0, uxtw]
  422c20:	adr	x3, 422c2c <ferror@plt+0x202bc>
  422c24:	add	x2, x3, w2, sxtb #2
  422c28:	br	x2
  422c2c:	mov	w0, #0x6                   	// #6
  422c30:	ret
  422c34:	cmp	w1, #0x26
  422c38:	mov	w0, #0x4                   	// #4
  422c3c:	mov	w1, #0x6                   	// #6
  422c40:	csel	w0, w0, w1, eq  // eq = none
  422c44:	b	422c30 <ferror@plt+0x202c0>
  422c48:	cmp	w1, #0x50
  422c4c:	b.eq	422c30 <ferror@plt+0x202c0>  // b.none
  422c50:	cmp	w1, #0x53
  422c54:	b.eq	422c70 <ferror@plt+0x20300>  // b.none
  422c58:	cmp	w1, #0x51
  422c5c:	cset	w0, ne  // ne = any
  422c60:	add	w0, w0, #0x5
  422c64:	b	422c30 <ferror@plt+0x202c0>
  422c68:	mov	w0, #0x0                   	// #0
  422c6c:	b	422c30 <ferror@plt+0x202c0>
  422c70:	mov	w0, #0x1                   	// #1
  422c74:	b	422c30 <ferror@plt+0x202c0>
  422c78:	str	w1, [x0, #1408]
  422c7c:	ret
  422c80:	str	wzr, [x0, #1408]
  422c84:	ret
  422c88:	ldp	w2, w1, [x0]
  422c8c:	ldr	x3, [x0, #16]
  422c90:	add	w2, w2, w1
  422c94:	ldr	w1, [x0, #8]
  422c98:	add	w0, w1, w3
  422c9c:	add	w0, w2, w0
  422ca0:	ret
  422ca4:	ldr	x3, [x0]
  422ca8:	ldr	x2, [x1]
  422cac:	cmp	x3, x2
  422cb0:	b.ne	422cd8 <ferror@plt+0x20368>  // b.any
  422cb4:	ldr	w3, [x0, #8]
  422cb8:	ldr	w2, [x1, #8]
  422cbc:	cmp	w3, w2
  422cc0:	b.ne	422cd8 <ferror@plt+0x20368>  // b.any
  422cc4:	ldr	x2, [x0, #16]
  422cc8:	ldr	x0, [x1, #16]
  422ccc:	cmp	x2, x0
  422cd0:	cset	w0, eq  // eq = none
  422cd4:	ret
  422cd8:	mov	w0, #0x0                   	// #0
  422cdc:	b	422cd4 <ferror@plt+0x20364>
  422ce0:	ldr	x2, [x0]
  422ce4:	ldr	x1, [x1]
  422ce8:	add	x2, x2, x1
  422cec:	str	x2, [x0]
  422cf0:	mov	w0, #0x1                   	// #1
  422cf4:	ret
  422cf8:	mov	x3, x0
  422cfc:	tbz	w1, #31, 422d14 <ferror@plt+0x203a4>
  422d00:	and	w1, w1, #0x7fffffff
  422d04:	mov	w0, #0x18                  	// #24
  422d08:	umull	x1, w1, w0
  422d0c:	ldr	x0, [x3, #104]
  422d10:	ldr	w1, [x0, x1]
  422d14:	cmp	x3, #0x0
  422d18:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  422d1c:	b.ls	422da4 <ferror@plt+0x20434>  // b.plast
  422d20:	ldr	w2, [x3, #16]
  422d24:	mov	w4, #0x18                  	// #24
  422d28:	ldr	x6, [x3]
  422d2c:	smull	x4, w2, w4
  422d30:	add	x0, x6, x4
  422d34:	ldr	w4, [x6, x4]
  422d38:	cmp	w1, w4
  422d3c:	b.cc	422d60 <ferror@plt+0x203f0>  // b.lo, b.ul, b.last
  422d40:	ldr	w4, [x3, #12]
  422d44:	add	w5, w2, #0x1
  422d48:	cmp	w5, w4
  422d4c:	b.eq	422d5c <ferror@plt+0x203ec>  // b.none
  422d50:	ldr	w5, [x0, #24]
  422d54:	cmp	w1, w5
  422d58:	b.cs	422d68 <ferror@plt+0x203f8>  // b.hs, b.nlast
  422d5c:	ret
  422d60:	mov	w4, w2
  422d64:	mov	w2, #0x0                   	// #0
  422d68:	mov	w0, #0x18                  	// #24
  422d6c:	sub	w5, w4, w2
  422d70:	cmp	w5, #0x1
  422d74:	b.ls	422d98 <ferror@plt+0x20428>  // b.plast
  422d78:	add	w5, w2, w4
  422d7c:	lsr	w5, w5, #1
  422d80:	umull	x7, w5, w0
  422d84:	ldr	w7, [x6, x7]
  422d88:	cmp	w1, w7
  422d8c:	csel	w2, w2, w5, cc  // cc = lo, ul, last
  422d90:	csel	w4, w5, w4, cc  // cc = lo, ul, last
  422d94:	b	422d6c <ferror@plt+0x203fc>
  422d98:	smaddl	x0, w2, w0, x6
  422d9c:	str	w2, [x3, #16]
  422da0:	b	422d5c <ferror@plt+0x203ec>
  422da4:	mov	x0, #0x0                   	// #0
  422da8:	b	422d5c <ferror@plt+0x203ec>
  422dac:	stp	x29, x30, [sp, #-80]!
  422db0:	mov	x29, sp
  422db4:	stp	x19, x20, [sp, #16]
  422db8:	mov	x19, x0
  422dbc:	mov	w0, #0x6fffffff            	// #1879048191
  422dc0:	stp	x21, x22, [sp, #32]
  422dc4:	cmp	w1, w0
  422dc8:	mov	w21, w1
  422dcc:	stp	x23, x24, [sp, #48]
  422dd0:	stp	x25, x26, [sp, #64]
  422dd4:	b.ls	422ea0 <ferror@plt+0x20530>  // b.plast
  422dd8:	ldp	w0, w20, [x19, #32]
  422ddc:	add	x25, x19, #0x24
  422de0:	cmp	w0, w20
  422de4:	b.ne	422e6c <ferror@plt+0x204fc>  // b.any
  422de8:	add	x26, x19, #0x20
  422dec:	cmp	w0, #0x0
  422df0:	mov	w1, #0x80                  	// #128
  422df4:	csel	w0, w0, w1, ne  // ne = any
  422df8:	mov	w1, #0x6fffffff            	// #1879048191
  422dfc:	cmp	w21, w1
  422e00:	lsl	w0, w0, #1
  422e04:	b.ls	422eb8 <ferror@plt+0x20548>  // b.plast
  422e08:	ldr	x24, [x19, #24]
  422e0c:	mov	x22, #0x20                  	// #32
  422e10:	mul	x0, x0, x22
  422e14:	ldr	x1, [x19, #80]
  422e18:	blr	x1
  422e1c:	udiv	x23, x0, x22
  422e20:	mov	x0, x24
  422e24:	ldr	x2, [x19, #72]
  422e28:	and	x1, x23, #0xffffffff
  422e2c:	mul	x1, x1, x22
  422e30:	blr	x2
  422e34:	mov	x24, x0
  422e38:	sub	w2, w23, w20
  422e3c:	mov	w0, w20
  422e40:	mov	w1, #0x0                   	// #0
  422e44:	mul	x2, x2, x22
  422e48:	madd	x0, x0, x22, x24
  422e4c:	bl	402530 <memset@plt>
  422e50:	mov	w0, #0x6fffffff            	// #1879048191
  422e54:	cmp	w21, w0
  422e58:	b.ls	422ec4 <ferror@plt+0x20554>  // b.plast
  422e5c:	str	x24, [x19, #24]
  422e60:	str	w23, [x26]
  422e64:	cmp	w21, w0
  422e68:	b.ls	422ecc <ferror@plt+0x2055c>  // b.plast
  422e6c:	ubfiz	x0, x20, #5, #32
  422e70:	ldr	x20, [x19, #24]
  422e74:	add	x0, x20, x0
  422e78:	ldr	w1, [x25]
  422e7c:	ldp	x19, x20, [sp, #16]
  422e80:	add	w1, w1, #0x1
  422e84:	ldp	x23, x24, [sp, #48]
  422e88:	str	w1, [x25]
  422e8c:	ldp	x25, x26, [sp, #64]
  422e90:	str	w21, [x0]
  422e94:	ldp	x21, x22, [sp, #32]
  422e98:	ldp	x29, x30, [sp], #80
  422e9c:	ret
  422ea0:	ldp	w0, w20, [x19, #8]
  422ea4:	add	x25, x19, #0xc
  422ea8:	cmp	w0, w20
  422eac:	b.ne	422ecc <ferror@plt+0x2055c>  // b.any
  422eb0:	add	x26, x19, #0x8
  422eb4:	b	422dec <ferror@plt+0x2047c>
  422eb8:	mov	x22, #0x18                  	// #24
  422ebc:	ldr	x24, [x19]
  422ec0:	b	422e10 <ferror@plt+0x204a0>
  422ec4:	str	x24, [x19]
  422ec8:	b	422e60 <ferror@plt+0x204f0>
  422ecc:	ldr	x0, [x19]
  422ed0:	mov	w1, #0x18                  	// #24
  422ed4:	umaddl	x0, w20, w1, x0
  422ed8:	b	422e78 <ferror@plt+0x20508>
  422edc:	ldr	x0, [x0, #88]
  422ee0:	cbz	x0, 422ee8 <ferror@plt+0x20578>
  422ee4:	b	4391a0 <ferror@plt+0x36830>
  422ee8:	ret
  422eec:	stp	x29, x30, [sp, #-48]!
  422ef0:	mov	x3, #0x0                   	// #0
  422ef4:	adrp	x2, 422000 <ferror@plt+0x1f690>
  422ef8:	mov	x29, sp
  422efc:	stp	x19, x20, [sp, #16]
  422f00:	mov	x19, x0
  422f04:	add	x2, x2, #0xca4
  422f08:	adrp	x1, 422000 <ferror@plt+0x1f690>
  422f0c:	mov	x0, #0x64                  	// #100
  422f10:	add	x1, x1, #0xc88
  422f14:	mov	w20, #0x0                   	// #0
  422f18:	str	x21, [sp, #32]
  422f1c:	bl	439178 <ferror@plt+0x36808>
  422f20:	mov	w21, #0x18                  	// #24
  422f24:	str	x0, [x19, #88]
  422f28:	ldr	w0, [x19, #96]
  422f2c:	cmp	w0, w20
  422f30:	b.ls	422f50 <ferror@plt+0x205e0>  // b.plast
  422f34:	ldr	x1, [x19, #104]
  422f38:	mov	w2, #0x1                   	// #1
  422f3c:	ldr	x0, [x19, #88]
  422f40:	umaddl	x1, w20, w21, x1
  422f44:	add	w20, w20, #0x1
  422f48:	bl	4395d8 <ferror@plt+0x36c68>
  422f4c:	b	422f28 <ferror@plt+0x205b8>
  422f50:	ldp	x19, x20, [sp, #16]
  422f54:	ldr	x21, [sp, #32]
  422f58:	ldp	x29, x30, [sp], #48
  422f5c:	ret
  422f60:	ldr	x0, [x0, #104]
  422f64:	and	w1, w1, #0x7fffffff
  422f68:	mov	w2, #0x18                  	// #24
  422f6c:	umaddl	x1, w1, w2, x0
  422f70:	ldr	x0, [x1, #16]
  422f74:	ret
  422f78:	and	w1, w1, #0x7fffffff
  422f7c:	mov	w2, #0x18                  	// #24
  422f80:	ldr	x0, [x0, #104]
  422f84:	umull	x1, w1, w2
  422f88:	ldr	w0, [x0, x1]
  422f8c:	ret
  422f90:	stp	x29, x30, [sp, #-32]!
  422f94:	mov	x2, #0x88                  	// #136
  422f98:	mov	x29, sp
  422f9c:	stp	x19, x20, [sp, #16]
  422fa0:	mov	x19, x0
  422fa4:	mov	w20, w1
  422fa8:	mov	w1, #0x0                   	// #0
  422fac:	bl	402530 <memset@plt>
  422fb0:	adrp	x0, 439000 <ferror@plt+0x36690>
  422fb4:	add	x0, x0, #0xfc4
  422fb8:	str	x0, [x19, #72]
  422fbc:	mov	x0, #0x100000001           	// #4294967297
  422fc0:	str	x0, [x19, #56]
  422fc4:	mov	x3, #0x0                   	// #0
  422fc8:	adrp	x2, 422000 <ferror@plt+0x1f690>
  422fcc:	adrp	x1, 422000 <ferror@plt+0x1f690>
  422fd0:	add	x2, x2, #0xca4
  422fd4:	add	x1, x1, #0xc88
  422fd8:	mov	x0, #0x64                  	// #100
  422fdc:	bl	439178 <ferror@plt+0x36808>
  422fe0:	str	x0, [x19, #88]
  422fe4:	str	w20, [x19, #112]
  422fe8:	ldp	x19, x20, [sp, #16]
  422fec:	ldp	x29, x30, [sp], #32
  422ff0:	ret
  422ff4:	ldr	w1, [x1, #20]
  422ff8:	b	422cf8 <ferror@plt+0x20388>
  422ffc:	stp	x29, x30, [sp, #-48]!
  423000:	mov	x29, sp
  423004:	stp	x19, x20, [sp, #16]
  423008:	mov	x20, x0
  42300c:	stp	x21, x22, [sp, #32]
  423010:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x19198>
  423014:	bl	425340 <ferror@plt+0x229d0>
  423018:	add	x21, x21, #0x72f
  42301c:	mov	x19, x0
  423020:	adrp	x22, 478000 <_obstack_memory_used@@Base+0x3e198>
  423024:	ldr	w0, [x19, #20]
  423028:	cbz	w0, 423050 <ferror@plt+0x206e0>
  42302c:	ldr	x0, [x22, #1336]
  423030:	mov	x1, x21
  423034:	ldr	x2, [x19, #8]
  423038:	bl	402940 <fprintf@plt>
  42303c:	mov	x1, x19
  423040:	mov	x0, x20
  423044:	bl	422ff4 <ferror@plt+0x20684>
  423048:	mov	x19, x0
  42304c:	b	423024 <ferror@plt+0x206b4>
  423050:	ldp	x19, x20, [sp, #16]
  423054:	ldp	x21, x22, [sp, #32]
  423058:	ldp	x29, x30, [sp], #48
  42305c:	ret
  423060:	stp	x29, x30, [sp, #-80]!
  423064:	mov	x29, sp
  423068:	stp	x19, x20, [sp, #16]
  42306c:	mov	x19, x0
  423070:	stp	x21, x22, [sp, #32]
  423074:	mov	w22, w4
  423078:	ldr	w21, [x0, #56]
  42307c:	stp	x23, x24, [sp, #48]
  423080:	mov	w0, #0x5fffffff            	// #1610612735
  423084:	mov	w24, w1
  423088:	str	x25, [sp, #64]
  42308c:	mov	w23, w2
  423090:	cmp	w21, w0
  423094:	mov	x25, x3
  423098:	b.hi	423100 <ferror@plt+0x20790>  // b.pmore
  42309c:	ldr	w1, [x19, #120]
  4230a0:	mov	w0, #0x1                   	// #1
  4230a4:	lsl	w0, w0, w1
  4230a8:	add	w21, w0, w21
  4230ac:	cbz	w1, 4230b8 <ferror@plt+0x20748>
  4230b0:	neg	w0, w0
  4230b4:	and	w21, w21, w0
  4230b8:	cmp	w24, #0x1
  4230bc:	b.ne	423108 <ferror@plt+0x20798>  // b.any
  4230c0:	mov	x0, x19
  4230c4:	bl	425340 <ferror@plt+0x229d0>
  4230c8:	ldr	w0, [x0, #20]
  4230cc:	cbnz	w0, 423108 <ferror@plt+0x20798>
  4230d0:	cbnz	x25, 423108 <ferror@plt+0x20798>
  4230d4:	ldr	w0, [x19, #48]
  4230d8:	mov	x20, #0x0                   	// #0
  4230dc:	sub	w0, w0, #0x1
  4230e0:	str	w0, [x19, #48]
  4230e4:	mov	x0, x20
  4230e8:	ldp	x19, x20, [sp, #16]
  4230ec:	ldp	x21, x22, [sp, #32]
  4230f0:	ldp	x23, x24, [sp, #48]
  4230f4:	ldr	x25, [sp, #64]
  4230f8:	ldp	x29, x30, [sp], #80
  4230fc:	ret
  423100:	add	w21, w21, #0x1
  423104:	b	4230b8 <ferror@plt+0x20748>
  423108:	mov	w0, #0x6fffffff            	// #1879048191
  42310c:	cmp	w21, w0
  423110:	csel	w21, w21, wzr, ls  // ls = plast
  423114:	mov	x0, x19
  423118:	mov	w1, w21
  42311c:	bl	422dac <ferror@plt+0x2043c>
  423120:	strb	w24, [x0, #4]
  423124:	mov	x20, x0
  423128:	cmp	w24, #0x3
  42312c:	cbz	x25, 423148 <ferror@plt+0x207d8>
  423130:	ldrb	w0, [x25]
  423134:	cbnz	w0, 423148 <ferror@plt+0x207d8>
  423138:	b.ne	423210 <ferror@plt+0x208a0>  // b.any
  42313c:	mov	w24, #0x2                   	// #2
  423140:	mov	x0, #0x0                   	// #0
  423144:	b	423188 <ferror@plt+0x20818>
  423148:	b.eq	42313c <ferror@plt+0x207cc>  // b.none
  42314c:	cmp	w24, #0x1
  423150:	b.ne	423140 <ferror@plt+0x207d0>  // b.any
  423154:	sub	x1, x20, #0x18
  423158:	mov	x0, x19
  42315c:	bl	422ff4 <ferror@plt+0x20684>
  423160:	cbnz	x25, 423188 <ferror@plt+0x20818>
  423164:	ldr	w4, [x0]
  423168:	ldr	w22, [x0, #24]
  42316c:	ldrb	w23, [x0, #5]
  423170:	sub	w22, w22, w4
  423174:	ldrb	w4, [x0, #6]
  423178:	ldr	x25, [x0, #8]
  42317c:	lsr	w22, w22, w4
  423180:	ldr	w4, [x0, #16]
  423184:	add	w22, w22, w4
  423188:	strb	w23, [x20, #5]
  42318c:	str	w22, [x20, #16]
  423190:	str	x25, [x20, #8]
  423194:	ldr	w2, [x19, #12]
  423198:	sub	w2, w2, #0x1
  42319c:	str	w2, [x19, #16]
  4231a0:	strh	wzr, [x20, #6]
  4231a4:	stp	w21, w21, [x19, #56]
  4231a8:	str	wzr, [x19, #64]
  4231ac:	cbnz	w24, 423238 <ferror@plt+0x208c8>
  4231b0:	ldr	w21, [x19, #48]
  4231b4:	cbz	w21, 42321c <ferror@plt+0x208ac>
  4231b8:	ldr	w0, [x20]
  4231bc:	mov	w1, #0xffffffff            	// #-1
  4231c0:	ldur	w2, [x20, #-24]
  4231c4:	ldurb	w3, [x20, #-18]
  4231c8:	sub	w0, w0, #0x1
  4231cc:	sub	w0, w0, w2
  4231d0:	lsl	w1, w1, w3
  4231d4:	and	w0, w0, w1
  4231d8:	add	w0, w0, w2
  4231dc:	str	w0, [x20, #20]
  4231e0:	add	w21, w21, #0x1
  4231e4:	ldrb	w0, [x19, #52]
  4231e8:	str	w21, [x19, #48]
  4231ec:	cbz	w0, 4230e4 <ferror@plt+0x20774>
  4231f0:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  4231f4:	ldr	x0, [x19, #1336]
  4231f8:	subs	w21, w21, #0x1
  4231fc:	b.eq	423224 <ferror@plt+0x208b4>  // b.none
  423200:	mov	x1, x0
  423204:	mov	w0, #0x2e                  	// #46
  423208:	bl	402430 <putc_unlocked@plt>
  42320c:	b	4231f4 <ferror@plt+0x20884>
  423210:	adrp	x25, 453000 <_obstack_memory_used@@Base+0x19198>
  423214:	add	x25, x25, #0x75b
  423218:	b	42314c <ferror@plt+0x207dc>
  42321c:	mov	w0, #0x0                   	// #0
  423220:	b	4231dc <ferror@plt+0x2086c>
  423224:	ldr	x2, [x20, #8]
  423228:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  42322c:	add	x1, x1, #0xb1f
  423230:	bl	402940 <fprintf@plt>
  423234:	b	4230e4 <ferror@plt+0x20774>
  423238:	cmp	w24, #0x2
  42323c:	b.ne	42324c <ferror@plt+0x208dc>  // b.any
  423240:	ldur	w0, [x20, #-4]
  423244:	str	w0, [x20, #20]
  423248:	b	4230e4 <ferror@plt+0x20774>
  42324c:	cmp	w24, #0x1
  423250:	b.ne	4230e4 <ferror@plt+0x20774>  // b.any
  423254:	ldr	w1, [x19, #48]
  423258:	sub	w1, w1, #0x1
  42325c:	str	w1, [x19, #48]
  423260:	ldr	w0, [x0, #20]
  423264:	b	423244 <ferror@plt+0x208d4>
  423268:	ldr	x0, [x0, #24]
  42326c:	cmp	x0, #0x0
  423270:	cset	w0, ne  // ne = any
  423274:	ret
  423278:	stp	x29, x30, [sp, #-64]!
  42327c:	mov	x29, sp
  423280:	stp	x19, x20, [sp, #16]
  423284:	mov	w20, w3
  423288:	stp	x21, x22, [sp, #32]
  42328c:	mov	x21, x0
  423290:	mov	w22, w2
  423294:	str	x23, [sp, #48]
  423298:	mov	x23, x1
  42329c:	bl	4107d4 <ferror@plt+0xde64>
  4232a0:	sub	w1, w0, w20
  4232a4:	mov	w0, #0x6fffffff            	// #1879048191
  4232a8:	cmp	w1, w0
  4232ac:	b.ls	423310 <ferror@plt+0x209a0>  // b.plast
  4232b0:	mov	x0, x21
  4232b4:	bl	422dac <ferror@plt+0x2043c>
  4232b8:	mov	x19, x0
  4232bc:	mov	x0, #0x0                   	// #0
  4232c0:	ldr	x2, [x21, #72]
  4232c4:	str	w20, [x19, #4]
  4232c8:	ubfiz	x20, x20, #3, #31
  4232cc:	str	x23, [x19, #8]
  4232d0:	mov	x1, x20
  4232d4:	blr	x2
  4232d8:	str	x0, [x19, #16]
  4232dc:	str	w22, [x19, #24]
  4232e0:	mov	x2, x20
  4232e4:	mov	w1, #0x0                   	// #0
  4232e8:	bl	402530 <memset@plt>
  4232ec:	ldr	w0, [x21, #36]
  4232f0:	sub	w0, w0, #0x1
  4232f4:	str	w0, [x21, #40]
  4232f8:	mov	x0, x19
  4232fc:	ldp	x19, x20, [sp, #16]
  423300:	ldp	x21, x22, [sp, #32]
  423304:	ldr	x23, [sp, #48]
  423308:	ldp	x29, x30, [sp], #64
  42330c:	ret
  423310:	mov	x19, #0x0                   	// #0
  423314:	b	4232f8 <ferror@plt+0x20988>
  423318:	ldr	x5, [x0, #16]
  42331c:	lsl	w4, w1, #1
  423320:	ubfiz	x6, x1, #3, #31
  423324:	add	w4, w4, #0x1
  423328:	str	w2, [x5, x6]
  42332c:	str	w3, [x5, x4, lsl #2]
  423330:	ldr	w0, [x0]
  423334:	add	w0, w1, w0
  423338:	ret
  42333c:	stp	x29, x30, [sp, #-96]!
  423340:	mov	x29, sp
  423344:	stp	x19, x20, [sp, #16]
  423348:	mov	x20, x0
  42334c:	stp	x21, x22, [sp, #32]
  423350:	mov	w22, w1
  423354:	stp	x23, x24, [sp, #48]
  423358:	stp	x25, x26, [sp, #64]
  42335c:	mov	w25, w2
  423360:	str	x27, [sp, #80]
  423364:	bl	425340 <ferror@plt+0x229d0>
  423368:	mov	x19, x0
  42336c:	ldrb	w0, [x0, #6]
  423370:	ldp	w1, w4, [x20, #56]
  423374:	ldr	w5, [x19]
  423378:	ldr	w24, [x19, #16]
  42337c:	sub	w5, w4, w5
  423380:	ldrb	w27, [x19, #7]
  423384:	lsr	w5, w5, w0
  423388:	add	w5, w5, w24
  42338c:	subs	w3, w22, w5
  423390:	b.mi	42344c <ferror@plt+0x20adc>  // b.first
  423394:	cmp	w3, #0xa
  423398:	b.le	4233a8 <ferror@plt+0x20a38>
  42339c:	mul	w2, w3, w0
  4233a0:	cmp	w2, #0x3e8
  4233a4:	b.gt	42344c <ferror@plt+0x20adc>
  4233a8:	sub	w6, w0, w27
  4233ac:	mov	w2, #0x1                   	// #1
  4233b0:	lsl	w2, w2, w6
  4233b4:	cmp	w2, w25
  4233b8:	b.ls	42344c <ferror@plt+0x20adc>  // b.plast
  4233bc:	cmp	w25, #0x50
  4233c0:	ccmp	w6, #0x9, #0x4, ls  // ls = plast
  4233c4:	b.gt	42344c <ferror@plt+0x20adc>
  4233c8:	mov	w2, #0x50000000            	// #1342177280
  4233cc:	cmp	w1, w2
  4233d0:	b.ls	423418 <ferror@plt+0x20aa8>  // b.plast
  4233d4:	cbnz	w27, 42344c <ferror@plt+0x20adc>
  4233d8:	mov	w2, #0x60000000            	// #1610612736
  4233dc:	ldr	w6, [x20, #64]
  4233e0:	cmp	w1, w2
  4233e4:	b.ls	423418 <ferror@plt+0x20aa8>  // b.plast
  4233e8:	mov	w2, #0x6fffffff            	// #1879048191
  4233ec:	cmp	w1, w2
  4233f0:	cbnz	w6, 423528 <ferror@plt+0x20bb8>
  4233f4:	b.ls	423418 <ferror@plt+0x20aa8>  // b.plast
  4233f8:	mov	w0, #0x0                   	// #0
  4233fc:	ldp	x19, x20, [sp, #16]
  423400:	ldp	x21, x22, [sp, #32]
  423404:	ldp	x23, x24, [sp, #48]
  423408:	ldp	x25, x26, [sp, #64]
  42340c:	ldr	x27, [sp, #80]
  423410:	ldp	x29, x30, [sp], #96
  423414:	ret
  423418:	ldr	w26, [x20, #64]
  42341c:	lsl	w3, w3, w0
  423420:	add	w0, w3, w4
  423424:	mov	w1, #0x6fffffff            	// #1879048191
  423428:	cmp	w0, w1
  42342c:	b.hi	4233f8 <ferror@plt+0x20a88>  // b.pmore
  423430:	ldr	w1, [x20, #56]
  423434:	str	w0, [x20, #60]
  423438:	cmp	w1, w0
  42343c:	b.cs	423444 <ferror@plt+0x20ad4>  // b.hs, b.nlast
  423440:	str	w0, [x20, #56]
  423444:	str	w26, [x20, #64]
  423448:	b	4233fc <ferror@plt+0x20a8c>
  42344c:	cmp	w25, #0x1, lsl #12
  423450:	mov	w0, #0x60000000            	// #1610612736
  423454:	ccmp	w1, w0, #0x2, ls  // ls = plast
  423458:	b.ls	4234ec <ferror@plt+0x20b7c>  // b.plast
  42345c:	mov	w0, #0x6fffffff            	// #1879048191
  423460:	cmp	w1, w0
  423464:	b.hi	4233f8 <ferror@plt+0x20a88>  // b.pmore
  423468:	mov	w23, #0x0                   	// #0
  42346c:	mov	w21, #0x0                   	// #0
  423470:	mov	w26, #0x0                   	// #0
  423474:	tbnz	w3, #31, 4234b0 <ferror@plt+0x20b40>
  423478:	cmp	w24, w5
  42347c:	b.ne	4234b0 <ferror@plt+0x20b40>  // b.any
  423480:	mov	x0, x19
  423484:	bl	425358 <ferror@plt+0x229e8>
  423488:	sub	w1, w21, w23
  42348c:	lsr	w0, w0, w1
  423490:	cbnz	w0, 4234b0 <ferror@plt+0x20b40>
  423494:	sub	w24, w22, w24
  423498:	mov	w0, #0x20                  	// #32
  42349c:	sub	w0, w0, w21
  4234a0:	lsr	x24, x24, x0
  4234a4:	cbnz	x24, 4234b0 <ferror@plt+0x20b40>
  4234a8:	cmp	w27, w23
  4234ac:	b.le	4234cc <ferror@plt+0x20b5c>
  4234b0:	ldrb	w2, [x19, #5]
  4234b4:	mov	w4, w22
  4234b8:	ldr	x3, [x19, #8]
  4234bc:	mov	x0, x20
  4234c0:	mov	w1, #0x2                   	// #2
  4234c4:	bl	423060 <ferror@plt+0x206f0>
  4234c8:	mov	x19, x0
  4234cc:	ldr	w2, [x19, #16]
  4234d0:	ldr	w0, [x19]
  4234d4:	sub	w2, w22, w2
  4234d8:	strb	w21, [x19, #6]
  4234dc:	strb	w23, [x19, #7]
  4234e0:	lsl	w2, w2, w21
  4234e4:	add	w0, w2, w0
  4234e8:	b	423424 <ferror@plt+0x20ab4>
  4234ec:	mov	w0, #0x50000000            	// #1342177280
  4234f0:	cmp	w1, w0
  4234f4:	b.hi	423518 <ferror@plt+0x20ba8>  // b.pmore
  4234f8:	ldr	w23, [x20, #120]
  4234fc:	mov	w21, #0x7                   	// #7
  423500:	mov	w0, #0x1                   	// #1
  423504:	lsl	w26, w0, w21
  423508:	cmp	w26, w25
  42350c:	b.hi	423520 <ferror@plt+0x20bb0>  // b.pmore
  423510:	add	w21, w21, #0x1
  423514:	b	423504 <ferror@plt+0x20b94>
  423518:	mov	w23, #0x0                   	// #0
  42351c:	b	4234fc <ferror@plt+0x20b8c>
  423520:	add	w21, w21, w23
  423524:	b	423474 <ferror@plt+0x20b04>
  423528:	b.hi	4233f8 <ferror@plt+0x20a88>  // b.pmore
  42352c:	mov	w23, #0x0                   	// #0
  423530:	mov	w21, #0x0                   	// #0
  423534:	mov	w26, #0x0                   	// #0
  423538:	b	423478 <ferror@plt+0x20b08>
  42353c:	stp	x29, x30, [sp, #-48]!
  423540:	mov	x29, sp
  423544:	stp	x19, x20, [sp, #16]
  423548:	mov	x20, x0
  42354c:	ldr	w19, [x0, #60]
  423550:	str	x21, [sp, #32]
  423554:	mov	w21, w1
  423558:	ldr	w1, [x0, #64]
  42355c:	cmp	w1, w21
  423560:	b.hi	4235b0 <ferror@plt+0x20c40>  // b.pmore
  423564:	cmp	w21, #0x1, lsl #12
  423568:	mov	w1, #0x60000000            	// #1610612736
  42356c:	ccmp	w19, w1, #0x2, ls  // ls = plast
  423570:	b.hi	4235d4 <ferror@plt+0x20c64>  // b.pmore
  423574:	bl	425340 <ferror@plt+0x229d0>
  423578:	ldr	w1, [x0]
  42357c:	add	w2, w21, #0x32
  423580:	sub	w19, w19, w1
  423584:	ldrb	w1, [x0, #6]
  423588:	lsr	w19, w19, w1
  42358c:	ldr	w1, [x0, #16]
  423590:	mov	x0, x20
  423594:	add	w1, w19, w1
  423598:	bl	42333c <ferror@plt+0x209cc>
  42359c:	mov	w19, w0
  4235a0:	mov	x0, x20
  4235a4:	bl	425340 <ferror@plt+0x229d0>
  4235a8:	ldrb	w0, [x0, #6]
  4235ac:	cbz	w0, 4235d4 <ferror@plt+0x20c64>
  4235b0:	mov	x0, x20
  4235b4:	bl	425340 <ferror@plt+0x229d0>
  4235b8:	ldrb	w1, [x0, #7]
  4235bc:	ldr	w0, [x20, #56]
  4235c0:	lsl	w21, w21, w1
  4235c4:	add	w19, w19, w21
  4235c8:	cmp	w0, w19
  4235cc:	b.hi	4235d4 <ferror@plt+0x20c64>  // b.pmore
  4235d0:	str	w19, [x20, #56]
  4235d4:	mov	w0, w19
  4235d8:	ldp	x19, x20, [sp, #16]
  4235dc:	ldr	x21, [sp, #32]
  4235e0:	ldp	x29, x30, [sp], #48
  4235e4:	ret
  4235e8:	stp	x29, x30, [sp, #-32]!
  4235ec:	mov	x29, sp
  4235f0:	stp	x19, x20, [sp, #16]
  4235f4:	mov	x20, x0
  4235f8:	ldr	w19, [x1, #16]
  4235fc:	ldrb	w0, [x1, #6]
  423600:	sub	w19, w2, w19
  423604:	ldr	w2, [x1]
  423608:	lsl	w19, w19, w0
  42360c:	add	w19, w19, w2
  423610:	mov	w2, #0x60000000            	// #1610612736
  423614:	cmp	w19, w2
  423618:	b.hi	423638 <ferror@plt+0x20cc8>  // b.pmore
  42361c:	mov	w2, #0x1                   	// #1
  423620:	lsl	w2, w2, w0
  423624:	ldrb	w0, [x1, #7]
  423628:	sub	w2, w2, #0x1
  42362c:	and	w3, w2, w3
  423630:	lsl	w3, w3, w0
  423634:	add	w19, w19, w3
  423638:	mov	x0, x20
  42363c:	bl	4107d4 <ferror@plt+0xde64>
  423640:	cmp	w19, w0
  423644:	b.cc	42364c <ferror@plt+0x20cdc>  // b.lo, b.ul, b.last
  423648:	sub	w19, w0, #0x1
  42364c:	ldr	w0, [x20, #56]
  423650:	cmp	w0, w19
  423654:	b.cs	42365c <ferror@plt+0x20cec>  // b.hs, b.nlast
  423658:	str	w19, [x20, #56]
  42365c:	mov	w0, w19
  423660:	ldp	x19, x20, [sp, #16]
  423664:	ldp	x29, x30, [sp], #32
  423668:	ret
  42366c:	cbz	x0, 423684 <ferror@plt+0x20d14>
  423670:	ldr	w1, [x0]
  423674:	mov	w0, #0x6fffffff            	// #1879048191
  423678:	cmp	w1, w0
  42367c:	cset	w0, hi  // hi = pmore
  423680:	ret
  423684:	mov	w0, #0x0                   	// #0
  423688:	b	423680 <ferror@plt+0x20d10>
  42368c:	mov	x3, x1
  423690:	mov	w1, w2
  423694:	tbz	w2, #31, 4236c0 <ferror@plt+0x20d50>
  423698:	stp	x29, x30, [sp, #-16]!
  42369c:	mov	x29, sp
  4236a0:	bl	422f78 <ferror@plt+0x20608>
  4236a4:	ldr	w2, [x3]
  4236a8:	ldp	x29, x30, [sp], #16
  4236ac:	sub	w2, w0, w2
  4236b0:	ldr	x0, [x3, #16]
  4236b4:	ubfiz	x2, x2, #3, #31
  4236b8:	ldr	w0, [x0, x2]
  4236bc:	ret
  4236c0:	ldr	w2, [x3]
  4236c4:	ldr	x0, [x3, #16]
  4236c8:	sub	w2, w1, w2
  4236cc:	ubfiz	x2, x2, #3, #31
  4236d0:	ldr	w0, [x0, x2]
  4236d4:	ret
  4236d8:	ldr	x0, [x0, #8]
  4236dc:	ldr	x0, [x0]
  4236e0:	ret
  4236e4:	tbz	w1, #31, 4236fc <ferror@plt+0x20d8c>
  4236e8:	and	w1, w1, #0x7fffffff
  4236ec:	mov	w2, #0x18                  	// #24
  4236f0:	ldr	x0, [x0, #104]
  4236f4:	umull	x1, w1, w2
  4236f8:	ldr	w1, [x0, x1]
  4236fc:	mov	w0, #0x90000000            	// #-1879048192
  423700:	add	w1, w1, w0
  423704:	mov	w0, #0xfffffff             	// #268435455
  423708:	cmp	w1, w0
  42370c:	cset	w0, ls  // ls = plast
  423710:	ret
  423714:	stp	x29, x30, [sp, #-16]!
  423718:	mov	x4, x0
  42371c:	mov	w3, w1
  423720:	mov	x29, sp
  423724:	tbz	w1, #31, 42373c <ferror@plt+0x20dcc>
  423728:	and	w3, w1, #0x7fffffff
  42372c:	mov	w1, #0x18                  	// #24
  423730:	ldr	x0, [x0, #104]
  423734:	umull	x3, w3, w1
  423738:	ldr	w3, [x0, x3]
  42373c:	mov	w1, w3
  423740:	mov	x0, x4
  423744:	bl	4236e4 <ferror@plt+0x20d74>
  423748:	tst	w0, #0xff
  42374c:	b.eq	4237f0 <ferror@plt+0x20e80>  // b.none
  423750:	tbz	w3, #31, 4237c8 <ferror@plt+0x20e58>
  423754:	and	w3, w3, #0x7fffffff
  423758:	mov	w1, #0x18                  	// #24
  42375c:	ldr	x0, [x4, #104]
  423760:	umull	x3, w3, w1
  423764:	ldr	w3, [x0, x3]
  423768:	ldp	w1, w2, [x4, #36]
  42376c:	ldr	x5, [x4, #24]
  423770:	sbfiz	x6, x2, #5, #32
  423774:	add	x0, x5, x6
  423778:	ldr	w6, [x5, x6]
  42377c:	cmp	w6, w3
  423780:	b.hi	42379c <ferror@plt+0x20e2c>  // b.pmore
  423784:	cbz	w2, 4237e8 <ferror@plt+0x20e78>
  423788:	ldur	w1, [x0, #-32]
  42378c:	cmp	w1, w3
  423790:	b.hi	4237e8 <ferror@plt+0x20e78>  // b.pmore
  423794:	sub	w1, w2, #0x1
  423798:	mov	w2, #0x0                   	// #0
  42379c:	cmp	w1, w2
  4237a0:	b.ls	4237dc <ferror@plt+0x20e6c>  // b.plast
  4237a4:	add	w0, w1, w2
  4237a8:	lsr	w6, w0, #1
  4237ac:	lsr	w0, w0, #1
  4237b0:	lsl	x0, x0, #5
  4237b4:	ldr	w0, [x5, x0]
  4237b8:	cmp	w0, w3
  4237bc:	b.ls	4237d4 <ferror@plt+0x20e64>  // b.plast
  4237c0:	add	w2, w6, #0x1
  4237c4:	b	42379c <ferror@plt+0x20e2c>
  4237c8:	cbnz	x4, 423768 <ferror@plt+0x20df8>
  4237cc:	mov	x0, #0x0                   	// #0
  4237d0:	b	4237e8 <ferror@plt+0x20e78>
  4237d4:	mov	w1, w6
  4237d8:	b	42379c <ferror@plt+0x20e2c>
  4237dc:	str	w1, [x4, #40]
  4237e0:	sbfiz	x1, x1, #5, #32
  4237e4:	add	x0, x5, x1
  4237e8:	ldp	x29, x30, [sp], #16
  4237ec:	ret
  4237f0:	ldp	x29, x30, [sp], #16
  4237f4:	mov	w1, w3
  4237f8:	mov	x0, x4
  4237fc:	b	422cf8 <ferror@plt+0x20388>
  423800:	stp	x29, x30, [sp, #-96]!
  423804:	mov	x29, sp
  423808:	stp	x19, x20, [sp, #16]
  42380c:	mov	x19, x0
  423810:	mov	w20, w1
  423814:	stp	x21, x22, [sp, #32]
  423818:	mov	x22, x2
  42381c:	str	x23, [sp, #48]
  423820:	mov	x23, x3
  423824:	tbz	w1, #31, 42383c <ferror@plt+0x20ecc>
  423828:	and	w20, w1, #0x7fffffff
  42382c:	mov	w1, #0x18                  	// #24
  423830:	ldr	x0, [x0, #104]
  423834:	umull	x20, w20, w1
  423838:	ldr	w20, [x0, x20]
  42383c:	cmp	w20, #0x0
  423840:	ccmp	x23, #0x0, #0x0, eq  // eq = none
  423844:	b.eq	4239e8 <ferror@plt+0x21078>  // b.none
  423848:	lsr	x21, x22, #32
  42384c:	mov	w0, w21
  423850:	cbnz	x23, 4238f4 <ferror@plt+0x20f84>
  423854:	cmp	w20, w22
  423858:	b.ne	4238e8 <ferror@plt+0x20f78>  // b.any
  42385c:	cmp	w21, w20
  423860:	b.cc	4238e8 <ferror@plt+0x20f78>  // b.lo, b.ul, b.last
  423864:	cmp	w20, #0x1
  423868:	b.ls	4238cc <ferror@plt+0x20f5c>  // b.plast
  42386c:	mov	w0, #0x4fffffff            	// #1342177279
  423870:	cmp	w20, w0
  423874:	b.hi	4239f0 <ferror@plt+0x21080>  // b.pmore
  423878:	mov	x0, x19
  42387c:	bl	4107d4 <ferror@plt+0xde64>
  423880:	cmp	w20, w0
  423884:	b.cs	4239f0 <ferror@plt+0x21080>  // b.hs, b.nlast
  423888:	cmp	w21, w0
  42388c:	b.cs	4239f0 <ferror@plt+0x21080>  // b.hs, b.nlast
  423890:	mov	w1, w20
  423894:	mov	x0, x19
  423898:	bl	423714 <ferror@plt+0x20da4>
  42389c:	ldrb	w2, [x0, #7]
  4238a0:	sub	w0, w21, w20
  4238a4:	mov	w1, #0x1                   	// #1
  4238a8:	lsr	w0, w0, w2
  4238ac:	lsl	w1, w1, w2
  4238b0:	cmp	w1, w0
  4238b4:	b.ls	4239f0 <ferror@plt+0x21080>  // b.plast
  4238b8:	ldr	w1, [x19, #124]
  4238bc:	orr	w0, w20, w0
  4238c0:	add	w1, w1, #0x1
  4238c4:	str	w1, [x19, #124]
  4238c8:	b	4238d4 <ferror@plt+0x20f64>
  4238cc:	cmp	w21, w20
  4238d0:	b.ne	4238e8 <ferror@plt+0x20f78>  // b.any
  4238d4:	ldp	x19, x20, [sp, #16]
  4238d8:	ldp	x21, x22, [sp, #32]
  4238dc:	ldr	x23, [sp, #48]
  4238e0:	ldp	x29, x30, [sp], #96
  4238e4:	ret
  4238e8:	ldr	w0, [x19, #128]
  4238ec:	add	w0, w0, #0x1
  4238f0:	str	w0, [x19, #128]
  4238f4:	ldr	x0, [x19, #88]
  4238f8:	add	x1, sp, #0x48
  4238fc:	mov	w2, #0x1                   	// #1
  423900:	stp	w20, w22, [sp, #72]
  423904:	str	w21, [sp, #80]
  423908:	str	x23, [sp, #88]
  42390c:	bl	4395d8 <ferror@plt+0x36c68>
  423910:	mov	x20, x0
  423914:	ldr	x0, [x0]
  423918:	cbnz	x0, 4239c4 <ferror@plt+0x21054>
  42391c:	ldp	w0, w1, [x19, #96]
  423920:	cmp	w0, w1
  423924:	b.cc	42398c <ferror@plt+0x2101c>  // b.lo, b.ul, b.last
  423928:	ldr	x2, [x19, #72]
  42392c:	cbnz	x2, 423938 <ferror@plt+0x20fc8>
  423930:	adrp	x2, 439000 <ferror@plt+0x36690>
  423934:	add	x2, x2, #0xfc4
  423938:	cmp	w1, #0x0
  42393c:	lsl	w0, w1, #1
  423940:	mov	w1, #0x80                  	// #128
  423944:	csel	w0, w0, w1, ne  // ne = any
  423948:	mov	w1, #0x18                  	// #24
  42394c:	str	w0, [x19, #100]
  423950:	ldr	x21, [x19, #104]
  423954:	umull	x1, w0, w1
  423958:	mov	x0, x21
  42395c:	blr	x2
  423960:	sub	x1, x0, x21
  423964:	str	x1, [sp, #64]
  423968:	str	x0, [x19, #104]
  42396c:	ldr	w0, [x19, #100]
  423970:	cmp	w0, #0x80
  423974:	b.ls	42398c <ferror@plt+0x2101c>  // b.plast
  423978:	ldr	x0, [x19, #88]
  42397c:	adrp	x1, 422000 <ferror@plt+0x1f690>
  423980:	add	x2, sp, #0x40
  423984:	add	x1, x1, #0xce0
  423988:	bl	439774 <ferror@plt+0x36e04>
  42398c:	ldr	w2, [x19, #96]
  423990:	mov	w0, #0x18                  	// #24
  423994:	umull	x1, w2, w0
  423998:	add	w2, w2, #0x1
  42399c:	ldr	x0, [x19, #104]
  4239a0:	add	x0, x0, x1
  4239a4:	str	x0, [x20]
  4239a8:	str	w2, [x19, #96]
  4239ac:	ldr	x0, [x19, #104]
  4239b0:	ldp	x2, x3, [sp, #72]
  4239b4:	add	x0, x0, x1
  4239b8:	stp	x2, x3, [x0]
  4239bc:	ldr	x1, [sp, #88]
  4239c0:	str	x1, [x0, #16]
  4239c4:	ldr	x0, [x20]
  4239c8:	ldr	x1, [x19, #104]
  4239cc:	sub	x0, x0, x1
  4239d0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4239d4:	movk	x1, #0xaaab
  4239d8:	asr	x0, x0, #3
  4239dc:	mul	x0, x0, x1
  4239e0:	orr	w0, w0, #0x80000000
  4239e4:	b	4238d4 <ferror@plt+0x20f64>
  4239e8:	mov	w0, #0x0                   	// #0
  4239ec:	b	4238d4 <ferror@plt+0x20f64>
  4239f0:	cmp	w21, w22
  4239f4:	b.ne	4238e8 <ferror@plt+0x20f78>  // b.any
  4239f8:	mov	w0, w21
  4239fc:	b	4238d4 <ferror@plt+0x20f64>
  423a00:	stp	x29, x30, [sp, #-32]!
  423a04:	mov	x29, sp
  423a08:	stp	x19, x20, [sp, #16]
  423a0c:	mov	x20, x0
  423a10:	mov	w19, w1
  423a14:	tbz	w1, #31, 423a38 <ferror@plt+0x210c8>
  423a18:	and	w19, w1, #0x7fffffff
  423a1c:	mov	w0, #0x18                  	// #24
  423a20:	ldr	x1, [x20, #104]
  423a24:	umaddl	x19, w19, w0, x1
  423a28:	ldur	x0, [x19, #4]
  423a2c:	ldp	x19, x20, [sp, #16]
  423a30:	ldp	x29, x30, [sp], #32
  423a34:	ret
  423a38:	cmp	w1, #0x1
  423a3c:	b.ls	423a94 <ferror@plt+0x21124>  // b.plast
  423a40:	bl	4107d4 <ferror@plt+0xde64>
  423a44:	cmp	w0, w19
  423a48:	b.ls	423a94 <ferror@plt+0x21124>  // b.plast
  423a4c:	mov	w0, #0x50000000            	// #1342177280
  423a50:	cmp	w19, w0
  423a54:	b.hi	423a94 <ferror@plt+0x21124>  // b.pmore
  423a58:	mov	w1, w19
  423a5c:	mov	x0, x20
  423a60:	bl	423714 <ferror@plt+0x20da4>
  423a64:	ldrb	w3, [x0, #7]
  423a68:	mov	w1, #0x1                   	// #1
  423a6c:	mov	x0, #0x0                   	// #0
  423a70:	lsl	w1, w1, w3
  423a74:	sub	w1, w1, #0x1
  423a78:	and	w2, w1, w19
  423a7c:	bic	w19, w19, w1
  423a80:	lsl	w2, w2, w3
  423a84:	bfxil	x0, x19, #0, #32
  423a88:	add	w19, w2, w19
  423a8c:	bfi	x0, x19, #32, #32
  423a90:	b	423a2c <ferror@plt+0x210bc>
  423a94:	mov	x0, #0x0                   	// #0
  423a98:	bfxil	x0, x19, #0, #32
  423a9c:	b	423a8c <ferror@plt+0x2111c>
  423aa0:	tbnz	w1, #31, 423ad4 <ferror@plt+0x21164>
  423aa4:	mov	w8, w1
  423aa8:	stp	x29, x30, [sp, #-16]!
  423aac:	mov	x29, sp
  423ab0:	bl	423714 <ferror@plt+0x20da4>
  423ab4:	cbz	x0, 423adc <ferror@plt+0x2116c>
  423ab8:	ldrb	w1, [x0, #7]
  423abc:	mov	w0, #0xffffffff            	// #-1
  423ac0:	lsl	w0, w0, w1
  423ac4:	bics	wzr, w8, w0
  423ac8:	cset	w0, eq  // eq = none
  423acc:	ldp	x29, x30, [sp], #16
  423ad0:	ret
  423ad4:	mov	w0, #0x0                   	// #0
  423ad8:	ret
  423adc:	mov	w0, #0x1                   	// #1
  423ae0:	b	423acc <ferror@plt+0x2115c>
  423ae4:	stp	x29, x30, [sp, #-32]!
  423ae8:	mov	x29, sp
  423aec:	stp	x19, x20, [sp, #16]
  423af0:	mov	x20, x0
  423af4:	mov	w19, w1
  423af8:	tbz	w1, #31, 423b10 <ferror@plt+0x211a0>
  423afc:	and	w19, w1, #0x7fffffff
  423b00:	mov	w1, #0x18                  	// #24
  423b04:	ldr	x0, [x0, #104]
  423b08:	umull	x19, w19, w1
  423b0c:	ldr	w19, [x0, x19]
  423b10:	mov	x0, x20
  423b14:	bl	4107d4 <ferror@plt+0xde64>
  423b18:	cmp	w0, w19
  423b1c:	b.ls	423b44 <ferror@plt+0x211d4>  // b.plast
  423b20:	cmp	w19, #0x1
  423b24:	b.ls	423b44 <ferror@plt+0x211d4>  // b.plast
  423b28:	mov	w1, w19
  423b2c:	mov	x0, x20
  423b30:	bl	423714 <ferror@plt+0x20da4>
  423b34:	ldrb	w1, [x0, #7]
  423b38:	mov	w0, #0xffffffff            	// #-1
  423b3c:	lsl	w0, w0, w1
  423b40:	and	w19, w19, w0
  423b44:	mov	w0, w19
  423b48:	ldp	x19, x20, [sp, #16]
  423b4c:	ldp	x29, x30, [sp], #32
  423b50:	ret
  423b54:	stp	x29, x30, [sp, #-16]!
  423b58:	mov	x10, x0
  423b5c:	mov	x9, x2
  423b60:	mov	x29, sp
  423b64:	tbz	w1, #31, 423b7c <ferror@plt+0x2120c>
  423b68:	and	w1, w1, #0x7fffffff
  423b6c:	mov	w0, #0x18                  	// #24
  423b70:	umull	x1, w1, w0
  423b74:	ldr	x0, [x10, #104]
  423b78:	ldr	w1, [x0, x1]
  423b7c:	mov	w8, w1
  423b80:	mov	w1, w8
  423b84:	mov	x0, x10
  423b88:	bl	423714 <ferror@plt+0x20da4>
  423b8c:	mov	x2, x0
  423b90:	bl	42366c <ferror@plt+0x20cfc>
  423b94:	tst	w0, #0xff
  423b98:	b.eq	423ba4 <ferror@plt+0x21234>  // b.none
  423b9c:	ldr	w8, [x2, #24]
  423ba0:	b	423b80 <ferror@plt+0x21210>
  423ba4:	cbz	x9, 423bac <ferror@plt+0x2123c>
  423ba8:	str	x2, [x9]
  423bac:	mov	w0, w8
  423bb0:	ldp	x29, x30, [sp], #16
  423bb4:	ret
  423bb8:	stp	x29, x30, [sp, #-32]!
  423bbc:	mov	x29, sp
  423bc0:	str	xzr, [sp, #24]
  423bc4:	tbz	w1, #31, 423bdc <ferror@plt+0x2126c>
  423bc8:	and	w1, w1, #0x7fffffff
  423bcc:	mov	w2, #0x18                  	// #24
  423bd0:	umull	x1, w1, w2
  423bd4:	ldr	x2, [x0, #104]
  423bd8:	ldr	w1, [x2, x1]
  423bdc:	cmp	w1, #0x1
  423be0:	b.ls	423c10 <ferror@plt+0x212a0>  // b.plast
  423be4:	add	x2, sp, #0x18
  423be8:	bl	423b54 <ferror@plt+0x211e4>
  423bec:	ldr	x1, [sp, #24]
  423bf0:	ldr	w2, [x1]
  423bf4:	sub	w0, w0, w2
  423bf8:	ldrb	w2, [x1, #6]
  423bfc:	ldr	w1, [x1, #16]
  423c00:	lsr	w0, w0, w2
  423c04:	add	w0, w0, w1
  423c08:	ldp	x29, x30, [sp], #32
  423c0c:	ret
  423c10:	mov	w0, #0x0                   	// #0
  423c14:	b	423c08 <ferror@plt+0x21298>
  423c18:	stp	x29, x30, [sp, #-32]!
  423c1c:	mov	x29, sp
  423c20:	str	xzr, [sp, #24]
  423c24:	tbz	w1, #31, 423c3c <ferror@plt+0x212cc>
  423c28:	and	w1, w1, #0x7fffffff
  423c2c:	mov	w2, #0x18                  	// #24
  423c30:	umull	x1, w1, w2
  423c34:	ldr	x2, [x0, #104]
  423c38:	ldr	w1, [x2, x1]
  423c3c:	cmp	w1, #0x1
  423c40:	b.ls	423c5c <ferror@plt+0x212ec>  // b.plast
  423c44:	add	x2, sp, #0x18
  423c48:	bl	423b54 <ferror@plt+0x211e4>
  423c4c:	ldr	x0, [sp, #24]
  423c50:	ldr	x0, [x0, #8]
  423c54:	ldp	x29, x30, [sp], #32
  423c58:	ret
  423c5c:	mov	x0, #0x0                   	// #0
  423c60:	b	423c54 <ferror@plt+0x212e4>
  423c64:	mov	x9, x0
  423c68:	mov	w8, w1
  423c6c:	tbz	w1, #31, 423c84 <ferror@plt+0x21314>
  423c70:	and	w8, w1, #0x7fffffff
  423c74:	mov	w1, #0x18                  	// #24
  423c78:	ldr	x0, [x0, #104]
  423c7c:	umull	x8, w8, w1
  423c80:	ldr	w8, [x0, x8]
  423c84:	cmp	w8, #0x1
  423c88:	b.ls	423cec <ferror@plt+0x2137c>  // b.plast
  423c8c:	stp	x29, x30, [sp, #-16]!
  423c90:	mov	x29, sp
  423c94:	b	423cb8 <ferror@plt+0x21348>
  423c98:	mov	w2, w8
  423c9c:	mov	x1, x4
  423ca0:	mov	x0, x9
  423ca4:	bl	42368c <ferror@plt+0x20d1c>
  423ca8:	mov	w8, w0
  423cac:	cmp	w0, #0x1
  423cb0:	b.hi	423cb8 <ferror@plt+0x21348>  // b.pmore
  423cb4:	ldr	w8, [x4, #24]
  423cb8:	mov	w1, w8
  423cbc:	mov	x0, x9
  423cc0:	bl	423714 <ferror@plt+0x20da4>
  423cc4:	mov	x4, x0
  423cc8:	cbz	x0, 423ce4 <ferror@plt+0x21374>
  423ccc:	bl	42366c <ferror@plt+0x20cfc>
  423cd0:	tst	w0, #0xff
  423cd4:	b.ne	423c98 <ferror@plt+0x21328>  // b.any
  423cd8:	ldrb	w0, [x4, #5]
  423cdc:	ldp	x29, x30, [sp], #16
  423ce0:	ret
  423ce4:	mov	w0, #0x0                   	// #0
  423ce8:	b	423cdc <ferror@plt+0x2136c>
  423cec:	mov	w0, #0x0                   	// #0
  423cf0:	ret
  423cf4:	mov	x11, x0
  423cf8:	mov	w8, w1
  423cfc:	mov	x10, x3
  423d00:	tbz	w1, #31, 423d30 <ferror@plt+0x213c0>
  423d04:	and	w0, w1, #0x7fffffff
  423d08:	mov	w1, #0x18                  	// #24
  423d0c:	umull	x0, w0, w1
  423d10:	ldr	x1, [x11, #104]
  423d14:	ldr	w0, [x1, x0]
  423d18:	cmp	w0, #0x1
  423d1c:	b.hi	423d38 <ferror@plt+0x213c8>  // b.pmore
  423d20:	cbz	x10, 423d28 <ferror@plt+0x213b8>
  423d24:	str	xzr, [x10]
  423d28:	mov	w0, w8
  423d2c:	ret
  423d30:	mov	w0, w1
  423d34:	b	423d18 <ferror@plt+0x213a8>
  423d38:	stp	x29, x30, [sp, #-16]!
  423d3c:	cmp	w2, #0x1
  423d40:	mov	x29, sp
  423d44:	b.ne	423d7c <ferror@plt+0x2140c>  // b.any
  423d48:	mov	w9, #0x6fffffff            	// #1879048191
  423d4c:	mov	w1, w8
  423d50:	mov	x0, x11
  423d54:	bl	423714 <ferror@plt+0x20da4>
  423d58:	mov	x1, x0
  423d5c:	cbz	x0, 423d6c <ferror@plt+0x213fc>
  423d60:	ldr	w0, [x0]
  423d64:	cmp	w0, w9
  423d68:	b.hi	423ddc <ferror@plt+0x2146c>  // b.pmore
  423d6c:	cbnz	x10, 423df0 <ferror@plt+0x21480>
  423d70:	mov	w0, w8
  423d74:	ldp	x29, x30, [sp], #16
  423d78:	ret
  423d7c:	cmp	w2, #0x2
  423d80:	b.ne	423dc4 <ferror@plt+0x21454>  // b.any
  423d84:	mov	w12, #0x6fffffff            	// #1879048191
  423d88:	tbz	w8, #31, 423df8 <ferror@plt+0x21488>
  423d8c:	mov	w1, w8
  423d90:	mov	x0, x11
  423d94:	bl	422f78 <ferror@plt+0x20608>
  423d98:	mov	w9, w0
  423d9c:	mov	w1, w9
  423da0:	mov	x0, x11
  423da4:	bl	423714 <ferror@plt+0x20da4>
  423da8:	cbz	x0, 423db8 <ferror@plt+0x21448>
  423dac:	ldr	w1, [x0]
  423db0:	cmp	w1, w12
  423db4:	b.hi	423e00 <ferror@plt+0x21490>  // b.pmore
  423db8:	cbz	x10, 423d70 <ferror@plt+0x21400>
  423dbc:	str	x0, [x10]
  423dc0:	b	423d70 <ferror@plt+0x21400>
  423dc4:	cbnz	w2, 423e18 <ferror@plt+0x214a8>
  423dc8:	ldp	x29, x30, [sp], #16
  423dcc:	mov	x2, x10
  423dd0:	mov	w1, w8
  423dd4:	mov	x0, x11
  423dd8:	b	423b54 <ferror@plt+0x211e4>
  423ddc:	mov	w2, w8
  423de0:	mov	x0, x11
  423de4:	bl	42368c <ferror@plt+0x20d1c>
  423de8:	mov	w8, w0
  423dec:	b	423d4c <ferror@plt+0x213dc>
  423df0:	str	x1, [x10]
  423df4:	b	423d70 <ferror@plt+0x21400>
  423df8:	mov	w9, w8
  423dfc:	b	423d9c <ferror@plt+0x2142c>
  423e00:	sub	w9, w9, w1
  423e04:	ldr	x0, [x0, #16]
  423e08:	lsl	w9, w9, #1
  423e0c:	add	w9, w9, #0x1
  423e10:	ldr	w8, [x0, x9, lsl #2]
  423e14:	b	423d88 <ferror@plt+0x21418>
  423e18:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  423e1c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  423e20:	add	x2, x2, #0x763
  423e24:	add	x0, x0, #0x77c
  423e28:	mov	w1, #0x621                 	// #1569
  423e2c:	bl	402980 <ferror@plt+0x10>
  423e30:	stp	x29, x30, [sp, #-80]!
  423e34:	mov	x29, sp
  423e38:	stp	x19, x20, [sp, #16]
  423e3c:	mov	x20, x0
  423e40:	mov	w19, w1
  423e44:	stp	x21, x22, [sp, #32]
  423e48:	mov	w22, w2
  423e4c:	str	x23, [sp, #48]
  423e50:	str	xzr, [sp, #72]
  423e54:	tbz	w1, #31, 423e6c <ferror@plt+0x214fc>
  423e58:	and	w19, w1, #0x7fffffff
  423e5c:	mov	w1, #0x18                  	// #24
  423e60:	ldr	x0, [x0, #104]
  423e64:	umull	x19, w19, w1
  423e68:	ldr	w19, [x0, x19]
  423e6c:	mov	w1, w19
  423e70:	mov	x0, x20
  423e74:	bl	4236e4 <ferror@plt+0x20d74>
  423e78:	tst	w0, #0xff
  423e7c:	b.ne	423f20 <ferror@plt+0x215b0>  // b.any
  423e80:	cmp	w22, #0x0
  423e84:	ccmp	w19, #0x1, #0x0, ne  // ne = any
  423e88:	b.ls	423f20 <ferror@plt+0x215b0>  // b.plast
  423e8c:	mov	w1, w19
  423e90:	add	x3, sp, #0x48
  423e94:	mov	x0, x20
  423e98:	mov	w2, #0x1                   	// #1
  423e9c:	bl	423cf4 <ferror@plt+0x21384>
  423ea0:	mov	w19, w0
  423ea4:	ldr	x0, [sp, #72]
  423ea8:	ldrb	w1, [x0, #7]
  423eac:	ldr	w21, [x0]
  423eb0:	lsl	w1, w22, w1
  423eb4:	add	w1, w1, w19
  423eb8:	cmp	w1, w21
  423ebc:	b.ls	423f20 <ferror@plt+0x215b0>  // b.plast
  423ec0:	ldrb	w2, [x0, #6]
  423ec4:	sub	w21, w19, w21
  423ec8:	mov	w1, w19
  423ecc:	lsr	w21, w21, w2
  423ed0:	ldr	w2, [x0, #16]
  423ed4:	add	w21, w21, w2
  423ed8:	bl	425358 <ferror@plt+0x229e8>
  423edc:	mov	w23, w0
  423ee0:	mov	x0, x20
  423ee4:	bl	425340 <ferror@plt+0x229d0>
  423ee8:	ldr	x1, [sp, #72]
  423eec:	cmp	x1, x0
  423ef0:	ldrb	w2, [x1, #7]
  423ef4:	b.eq	423f38 <ferror@plt+0x215c8>  // b.none
  423ef8:	ldr	w0, [x1, #24]
  423efc:	lsl	w3, w22, w2
  423f00:	add	w3, w3, w19
  423f04:	cmp	w3, w0
  423f08:	b.cc	423f38 <ferror@plt+0x215c8>  // b.lo, b.ul, b.last
  423f0c:	add	x0, x1, #0x18
  423f10:	str	x0, [sp, #72]
  423f14:	ldr	w0, [x1, #40]
  423f18:	cmp	w0, w21
  423f1c:	b.ls	423ee0 <ferror@plt+0x21570>  // b.plast
  423f20:	mov	w0, w19
  423f24:	ldp	x19, x20, [sp, #16]
  423f28:	ldp	x21, x22, [sp, #32]
  423f2c:	ldr	x23, [sp, #48]
  423f30:	ldp	x29, x30, [sp], #80
  423f34:	ret
  423f38:	ldrb	w0, [x1, #6]
  423f3c:	add	w3, w22, w23
  423f40:	sub	w2, w0, w2
  423f44:	mov	w0, #0x1                   	// #1
  423f48:	lsl	w0, w0, w2
  423f4c:	cmp	w0, w3
  423f50:	b.ls	423f20 <ferror@plt+0x215b0>  // b.plast
  423f54:	mov	w2, w21
  423f58:	mov	x0, x20
  423f5c:	bl	4235e8 <ferror@plt+0x20c78>
  423f60:	mov	w8, w0
  423f64:	ldr	w0, [x20, #56]
  423f68:	cmp	w0, w8
  423f6c:	b.cc	423f20 <ferror@plt+0x215b0>  // b.lo, b.ul, b.last
  423f70:	mov	w1, w8
  423f74:	mov	x0, x20
  423f78:	bl	423714 <ferror@plt+0x20da4>
  423f7c:	ldr	x1, [sp, #72]
  423f80:	cmp	x1, x0
  423f84:	csel	w19, w19, w8, ne  // ne = any
  423f88:	b	423f20 <ferror@plt+0x215b0>
  423f8c:	stp	x29, x30, [sp, #-64]!
  423f90:	mov	x29, sp
  423f94:	stp	x19, x20, [sp, #16]
  423f98:	stp	x21, x22, [sp, #32]
  423f9c:	mov	x21, x0
  423fa0:	mov	w22, w2
  423fa4:	stp	x23, x24, [sp, #48]
  423fa8:	mov	w23, w1
  423fac:	tbz	w1, #31, 424098 <ferror@plt+0x21728>
  423fb0:	bl	422f78 <ferror@plt+0x20608>
  423fb4:	mov	w20, w0
  423fb8:	tbz	w22, #31, 4240a0 <ferror@plt+0x21730>
  423fbc:	mov	w1, w22
  423fc0:	mov	x0, x21
  423fc4:	bl	422f78 <ferror@plt+0x20608>
  423fc8:	mov	w19, w0
  423fcc:	cmp	w20, w19
  423fd0:	b.eq	424128 <ferror@plt+0x217b8>  // b.none
  423fd4:	mov	w1, w20
  423fd8:	mov	x0, x21
  423fdc:	bl	4236e4 <ferror@plt+0x20d74>
  423fe0:	ands	w24, w0, #0xff
  423fe4:	b.eq	424000 <ferror@plt+0x21690>  // b.none
  423fe8:	mov	w1, w20
  423fec:	mov	x0, x21
  423ff0:	mov	x3, #0x0                   	// #0
  423ff4:	mov	w2, #0x0                   	// #0
  423ff8:	bl	423cf4 <ferror@plt+0x21384>
  423ffc:	mov	w20, w0
  424000:	mov	w1, w19
  424004:	mov	x0, x21
  424008:	bl	4236e4 <ferror@plt+0x20d74>
  42400c:	tst	w0, #0xff
  424010:	b.eq	4240e8 <ferror@plt+0x21778>  // b.none
  424014:	mov	w1, w19
  424018:	mov	x0, x21
  42401c:	mov	x3, #0x0                   	// #0
  424020:	mov	w2, #0x0                   	// #0
  424024:	bl	423cf4 <ferror@plt+0x21384>
  424028:	mov	w19, w0
  42402c:	cmp	w0, w20
  424030:	b.ne	4240e8 <ferror@plt+0x21778>  // b.any
  424034:	cbz	w24, 4240e8 <ferror@plt+0x21778>
  424038:	mov	w1, w23
  42403c:	mov	x0, x21
  424040:	bl	423714 <ferror@plt+0x20da4>
  424044:	mov	x9, x0
  424048:	mov	w1, w22
  42404c:	mov	x0, x21
  424050:	bl	423714 <ferror@plt+0x20da4>
  424054:	mov	x8, x0
  424058:	mov	x0, x9
  42405c:	bl	42366c <ferror@plt+0x20cfc>
  424060:	tst	w0, #0xff
  424064:	b.eq	4240a8 <ferror@plt+0x21738>  // b.none
  424068:	mov	x0, x8
  42406c:	bl	42366c <ferror@plt+0x20cfc>
  424070:	tst	w0, #0xff
  424074:	b.eq	4240a8 <ferror@plt+0x21738>  // b.none
  424078:	cmp	x9, x8
  42407c:	b.eq	4240b0 <ferror@plt+0x21740>  // b.none
  424080:	ldr	w0, [x8]
  424084:	ldr	w1, [x9]
  424088:	cmp	w1, w0
  42408c:	b.cc	4240d0 <ferror@plt+0x21760>  // b.lo, b.ul, b.last
  424090:	ldr	w22, [x8, #24]
  424094:	b	424048 <ferror@plt+0x216d8>
  424098:	mov	w20, w1
  42409c:	b	423fb8 <ferror@plt+0x21648>
  4240a0:	mov	w19, w22
  4240a4:	b	423fcc <ferror@plt+0x2165c>
  4240a8:	cmp	x9, x8
  4240ac:	b.ne	4240b8 <ferror@plt+0x21748>  // b.any
  4240b0:	sub	w0, w22, w23
  4240b4:	cbnz	x8, 424114 <ferror@plt+0x217a4>
  4240b8:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  4240bc:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  4240c0:	add	x2, x2, #0x794
  4240c4:	add	x0, x0, #0x77c
  4240c8:	mov	w1, #0x549                 	// #1353
  4240cc:	bl	402980 <ferror@plt+0x10>
  4240d0:	ldr	w23, [x9, #24]
  4240d4:	mov	x0, x21
  4240d8:	mov	w1, w23
  4240dc:	bl	423714 <ferror@plt+0x20da4>
  4240e0:	mov	x9, x0
  4240e4:	b	424058 <ferror@plt+0x216e8>
  4240e8:	tbz	w20, #31, 4240fc <ferror@plt+0x2178c>
  4240ec:	mov	w1, w20
  4240f0:	mov	x0, x21
  4240f4:	bl	422f78 <ferror@plt+0x20608>
  4240f8:	mov	w20, w0
  4240fc:	tbz	w19, #31, 424110 <ferror@plt+0x217a0>
  424100:	mov	w1, w19
  424104:	mov	x0, x21
  424108:	bl	422f78 <ferror@plt+0x20608>
  42410c:	mov	w19, w0
  424110:	sub	w0, w19, w20
  424114:	ldp	x19, x20, [sp, #16]
  424118:	ldp	x21, x22, [sp, #32]
  42411c:	ldp	x23, x24, [sp, #48]
  424120:	ldp	x29, x30, [sp], #64
  424124:	ret
  424128:	mov	w0, #0x0                   	// #0
  42412c:	b	424114 <ferror@plt+0x217a4>
  424130:	stp	x29, x30, [sp, #-16]!
  424134:	mov	x9, x0
  424138:	mov	x29, sp
  42413c:	tbz	w1, #31, 4241c0 <ferror@plt+0x21850>
  424140:	bl	422f78 <ferror@plt+0x20608>
  424144:	mov	w8, w0
  424148:	mov	w1, w8
  42414c:	mov	x0, x9
  424150:	bl	4236e4 <ferror@plt+0x20d74>
  424154:	ands	w0, w0, #0xff
  424158:	b.eq	4241b8 <ferror@plt+0x21848>  // b.none
  42415c:	mov	w1, w8
  424160:	mov	x0, x9
  424164:	bl	423714 <ferror@plt+0x20da4>
  424168:	mov	x5, x0
  42416c:	mov	w4, w8
  424170:	mov	w2, w8
  424174:	mov	x1, x0
  424178:	mov	x0, x9
  42417c:	bl	42368c <ferror@plt+0x20d1c>
  424180:	mov	w8, w0
  424184:	mov	w1, w0
  424188:	mov	x0, x9
  42418c:	bl	4236e4 <ferror@plt+0x20d74>
  424190:	tst	w0, #0xff
  424194:	b.ne	42415c <ferror@plt+0x217ec>  // b.any
  424198:	ldr	w2, [x5]
  42419c:	ldr	x0, [x5, #16]
  4241a0:	sub	w4, w4, w2
  4241a4:	lsl	w4, w4, #1
  4241a8:	add	w4, w4, #0x1
  4241ac:	ldr	w0, [x0, x4, lsl #2]
  4241b0:	cmp	w0, w8
  4241b4:	cset	w0, eq  // eq = none
  4241b8:	ldp	x29, x30, [sp], #16
  4241bc:	ret
  4241c0:	mov	w8, w1
  4241c4:	b	424148 <ferror@plt+0x217d8>
  4241c8:	stp	x29, x30, [sp, #-16]!
  4241cc:	mov	x9, x0
  4241d0:	mov	x10, x2
  4241d4:	mov	x29, sp
  4241d8:	ldr	x11, [x2]
  4241dc:	tbz	w1, #31, 4241f4 <ferror@plt+0x21884>
  4241e0:	and	w1, w1, #0x7fffffff
  4241e4:	mov	w0, #0x18                  	// #24
  4241e8:	umull	x1, w1, w0
  4241ec:	ldr	x0, [x9, #104]
  4241f0:	ldr	w1, [x0, x1]
  4241f4:	mov	w2, w1
  4241f8:	mov	x0, x9
  4241fc:	mov	x1, x11
  424200:	bl	42368c <ferror@plt+0x20d1c>
  424204:	mov	w8, w0
  424208:	mov	w1, w0
  42420c:	mov	x0, x9
  424210:	bl	423714 <ferror@plt+0x20da4>
  424214:	mov	x3, x0
  424218:	bl	42366c <ferror@plt+0x20cfc>
  42421c:	tst	w0, #0xff
  424220:	b.ne	424238 <ferror@plt+0x218c8>  // b.any
  424224:	ldr	w8, [x11, #24]
  424228:	mov	x0, x9
  42422c:	mov	w1, w8
  424230:	bl	423714 <ferror@plt+0x20da4>
  424234:	mov	x3, x0
  424238:	ldp	x29, x30, [sp], #16
  42423c:	mov	w0, w8
  424240:	str	x3, [x10]
  424244:	ret
  424248:	stp	x29, x30, [sp, #-64]!
  42424c:	mov	x29, sp
  424250:	stp	x19, x20, [sp, #16]
  424254:	mov	x20, x0
  424258:	mov	w19, w1
  42425c:	str	x21, [sp, #32]
  424260:	mov	x21, x2
  424264:	stp	xzr, xzr, [sp, #48]
  424268:	tbz	w1, #31, 424280 <ferror@plt+0x21910>
  42426c:	and	w19, w1, #0x7fffffff
  424270:	mov	w1, #0x18                  	// #24
  424274:	ldr	x0, [x0, #104]
  424278:	umull	x19, w19, w1
  42427c:	ldr	w19, [x0, x19]
  424280:	mov	w1, w19
  424284:	mov	x0, x20
  424288:	bl	423714 <ferror@plt+0x20da4>
  42428c:	str	x0, [sp, #48]
  424290:	bl	42366c <ferror@plt+0x20cfc>
  424294:	tst	w0, #0xff
  424298:	b.eq	424328 <ferror@plt+0x219b8>  // b.none
  42429c:	add	x3, sp, #0x38
  4242a0:	mov	w1, w19
  4242a4:	mov	x0, x20
  4242a8:	mov	w2, #0x1                   	// #1
  4242ac:	bl	423cf4 <ferror@plt+0x21384>
  4242b0:	mov	w3, w0
  4242b4:	cmp	w0, #0x1
  4242b8:	b.ls	4242c8 <ferror@plt+0x21958>  // b.plast
  4242bc:	ldr	x0, [sp, #56]
  4242c0:	ldrb	w0, [x0, #5]
  4242c4:	cbz	w0, 424328 <ferror@plt+0x219b8>
  4242c8:	ldr	x2, [sp, #48]
  4242cc:	mov	x0, x2
  4242d0:	bl	42366c <ferror@plt+0x20cfc>
  4242d4:	tst	w0, #0xff
  4242d8:	b.eq	424320 <ferror@plt+0x219b0>  // b.none
  4242dc:	cmp	w3, #0x1
  4242e0:	b.ls	4242f0 <ferror@plt+0x21980>  // b.plast
  4242e4:	ldr	x0, [sp, #56]
  4242e8:	ldrb	w0, [x0, #5]
  4242ec:	cbz	w0, 424320 <ferror@plt+0x219b0>
  4242f0:	mov	w1, w19
  4242f4:	add	x2, sp, #0x30
  4242f8:	mov	x0, x20
  4242fc:	bl	4241c8 <ferror@plt+0x21858>
  424300:	add	x3, sp, #0x38
  424304:	mov	w1, w0
  424308:	mov	w19, w0
  42430c:	mov	w2, #0x1                   	// #1
  424310:	mov	x0, x20
  424314:	bl	423cf4 <ferror@plt+0x21384>
  424318:	mov	w3, w0
  42431c:	b	4242c8 <ferror@plt+0x21958>
  424320:	cbz	x21, 424328 <ferror@plt+0x219b8>
  424324:	str	x2, [x21]
  424328:	mov	w0, w19
  42432c:	ldp	x19, x20, [sp, #16]
  424330:	ldr	x21, [sp, #32]
  424334:	ldp	x29, x30, [sp], #64
  424338:	ret
  42433c:	stp	x29, x30, [sp, #-32]!
  424340:	mov	w3, w2
  424344:	mov	x29, sp
  424348:	stp	x19, x20, [sp, #16]
  42434c:	mov	x19, x8
  424350:	mov	x20, x1
  424354:	stp	xzr, xzr, [x8]
  424358:	stp	xzr, xzr, [x8, #16]
  42435c:	tbz	w2, #31, 424380 <ferror@plt+0x21a10>
  424360:	and	w3, w2, #0x7fffffff
  424364:	mov	w1, #0x18                  	// #24
  424368:	umull	x3, w3, w1
  42436c:	ldr	x1, [x0, #104]
  424370:	add	x2, x1, x3
  424374:	ldr	w3, [x1, x3]
  424378:	ldr	x2, [x2, #16]
  42437c:	str	x2, [x8, #16]
  424380:	cmp	w3, #0x1
  424384:	b.ls	424408 <ferror@plt+0x21a98>  // b.plast
  424388:	cbnz	x20, 4243a4 <ferror@plt+0x21a34>
  42438c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  424390:	add	x2, x2, #0x7ae
  424394:	mov	w1, #0x6bd                 	// #1725
  424398:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  42439c:	add	x0, x0, #0x77c
  4243a0:	bl	402980 <ferror@plt+0x10>
  4243a4:	mov	w1, w3
  4243a8:	bl	4236e4 <ferror@plt+0x20d74>
  4243ac:	tst	w0, #0xff
  4243b0:	b.eq	4243c4 <ferror@plt+0x21a54>  // b.none
  4243b4:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  4243b8:	mov	w1, #0x6c5                 	// #1733
  4243bc:	add	x2, x2, #0x7ae
  4243c0:	b	424398 <ferror@plt+0x21a28>
  4243c4:	ldr	x0, [x20, #8]
  4243c8:	str	x0, [x19]
  4243cc:	ldr	w0, [x20]
  4243d0:	ldrb	w1, [x20, #6]
  4243d4:	sub	w0, w3, w0
  4243d8:	lsr	w0, w0, w1
  4243dc:	ldr	w1, [x20, #16]
  4243e0:	add	w0, w0, w1
  4243e4:	mov	w1, w3
  4243e8:	str	w0, [x19, #8]
  4243ec:	mov	x0, x20
  4243f0:	bl	425358 <ferror@plt+0x229e8>
  4243f4:	str	w0, [x19, #12]
  4243f8:	ldrb	w0, [x20, #5]
  4243fc:	cmp	w0, #0x0
  424400:	cset	w0, ne  // ne = any
  424404:	strb	w0, [x19, #24]
  424408:	ldp	x19, x20, [sp, #16]
  42440c:	ldp	x29, x30, [sp], #32
  424410:	ret
  424414:	stp	x29, x30, [sp, #-96]!
  424418:	mov	x29, sp
  42441c:	stp	x19, x20, [sp, #16]
  424420:	mov	x20, x0
  424424:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  424428:	add	x0, x0, #0x908
  42442c:	stp	x21, x22, [sp, #32]
  424430:	mov	x21, x1
  424434:	and	w22, w3, #0xff
  424438:	ldp	x4, x5, [x0]
  42443c:	stp	x4, x5, [sp, #56]
  424440:	ldp	x4, x5, [x0, #16]
  424444:	stp	x4, x5, [sp, #72]
  424448:	ldr	x0, [x0, #32]
  42444c:	str	x0, [sp, #88]
  424450:	cbnz	x20, 42445c <ferror@plt+0x21aec>
  424454:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  424458:	ldr	x20, [x0, #1336]
  42445c:	cbnz	w22, 424530 <ferror@plt+0x21bc0>
  424460:	ldr	x0, [x21]
  424464:	mov	w19, #0x18                  	// #24
  424468:	smaddl	x19, w2, w19, x0
  42446c:	ldrb	w0, [x19, #4]
  424470:	ldr	w4, [x19]
  424474:	cmp	w0, #0x4
  424478:	b.hi	424544 <ferror@plt+0x21bd4>  // b.pmore
  42447c:	add	x1, sp, #0x60
  424480:	add	x0, x1, w0, uxtb #3
  424484:	ldur	x5, [x0, #-40]
  424488:	cbnz	w22, 424550 <ferror@plt+0x21be0>
  42448c:	ldrb	w1, [x19, #5]
  424490:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  424494:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x19198>
  424498:	add	x0, x0, #0x7c9
  42449c:	cmp	w1, #0x0
  4244a0:	add	x6, x6, #0x7c6
  4244a4:	csel	x6, x6, x0, eq  // eq = none
  4244a8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  4244ac:	mov	x3, x19
  4244b0:	add	x1, x1, #0x7d2
  4244b4:	mov	x0, x20
  4244b8:	bl	402940 <fprintf@plt>
  4244bc:	cbnz	w22, 42456c <ferror@plt+0x21bfc>
  4244c0:	mov	x1, x19
  4244c4:	mov	x0, x21
  4244c8:	bl	422ff4 <ferror@plt+0x20684>
  4244cc:	mov	x22, x0
  4244d0:	ldr	w3, [x19, #16]
  4244d4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  4244d8:	ldr	x2, [x19, #8]
  4244dc:	add	x1, x1, #0x802
  4244e0:	mov	x0, x20
  4244e4:	bl	402940 <fprintf@plt>
  4244e8:	cbz	x22, 42455c <ferror@plt+0x21bec>
  4244ec:	ldr	x2, [x21]
  4244f0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4244f4:	movk	x0, #0xaaab
  4244f8:	sub	x2, x22, x2
  4244fc:	ldr	x3, [x22, #8]
  424500:	asr	x2, x2, #3
  424504:	mul	w2, w2, w0
  424508:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  42450c:	mov	x0, x20
  424510:	add	x1, x1, #0x80f
  424514:	bl	402940 <fprintf@plt>
  424518:	mov	x1, x20
  42451c:	mov	w0, #0xa                   	// #10
  424520:	ldp	x19, x20, [sp, #16]
  424524:	ldp	x21, x22, [sp, #32]
  424528:	ldp	x29, x30, [sp], #96
  42452c:	b	402400 <fputc@plt>
  424530:	ldr	x0, [x21, #24]
  424534:	sbfiz	x19, x2, #5, #32
  424538:	add	x19, x0, x19
  42453c:	mov	w0, #0x4                   	// #4
  424540:	b	424470 <ferror@plt+0x21b00>
  424544:	adrp	x5, 44b000 <_obstack_memory_used@@Base+0x11198>
  424548:	add	x5, x5, #0x28e
  42454c:	b	424488 <ferror@plt+0x21b18>
  424550:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x19198>
  424554:	add	x6, x6, #0x7c6
  424558:	b	4244a8 <ferror@plt+0x21b38>
  42455c:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x19198>
  424560:	mov	w2, #0xffffffff            	// #-1
  424564:	add	x3, x3, #0x7cd
  424568:	b	424508 <ferror@plt+0x21b98>
  42456c:	ldr	x0, [x19, #8]
  424570:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  424574:	ldr	w3, [x19, #4]
  424578:	add	x1, x1, #0x827
  42457c:	ldr	x2, [x0]
  424580:	mov	x0, x20
  424584:	bl	402940 <fprintf@plt>
  424588:	b	424518 <ferror@plt+0x21ba8>
  42458c:	sub	sp, sp, #0x80
  424590:	stp	x29, x30, [sp, #32]
  424594:	add	x29, sp, #0x20
  424598:	stp	x19, x20, [sp, #48]
  42459c:	mov	w19, w1
  4245a0:	stp	x21, x22, [sp, #64]
  4245a4:	stp	x23, x24, [sp, #80]
  4245a8:	mov	x24, x0
  4245ac:	mov	x23, x2
  4245b0:	str	x25, [sp, #96]
  4245b4:	tbz	w1, #31, 4245cc <ferror@plt+0x21c5c>
  4245b8:	and	w19, w1, #0x7fffffff
  4245bc:	mov	w1, #0x18                  	// #24
  4245c0:	ldr	x0, [x0, #104]
  4245c4:	umull	x19, w19, w1
  4245c8:	ldr	w19, [x0, x19]
  4245cc:	cbz	w19, 424678 <ferror@plt+0x21d08>
  4245d0:	add	x3, sp, #0x78
  4245d4:	mov	w1, w19
  4245d8:	mov	x0, x24
  4245dc:	mov	w2, #0x2                   	// #2
  4245e0:	bl	423cf4 <ferror@plt+0x21384>
  4245e4:	mov	w22, w0
  4245e8:	ldr	x21, [sp, #120]
  4245ec:	cbz	x21, 424694 <ferror@plt+0x21d24>
  4245f0:	ldr	w20, [x21]
  4245f4:	mov	w1, w0
  4245f8:	ldrb	w4, [x21, #6]
  4245fc:	mov	x0, x21
  424600:	sub	w20, w22, w20
  424604:	lsr	w20, w20, w4
  424608:	ldr	w4, [x21, #16]
  42460c:	add	w20, w20, w4
  424610:	bl	425358 <ferror@plt+0x229e8>
  424614:	mov	w8, w0
  424618:	ldrb	w0, [x21, #5]
  42461c:	ldr	x25, [x21, #8]
  424620:	cmp	w0, #0x0
  424624:	cset	w9, ne  // ne = any
  424628:	cmp	w19, w22
  42462c:	b.ne	4246b4 <ferror@plt+0x21d44>  // b.any
  424630:	mov	x1, x21
  424634:	mov	x0, x24
  424638:	bl	422ff4 <ferror@plt+0x20684>
  42463c:	cbz	x0, 4246c4 <ferror@plt+0x21d54>
  424640:	ldr	x3, [x0, #8]
  424644:	mov	w1, #0x0                   	// #0
  424648:	ldr	x7, [sp, #120]
  42464c:	str	w1, [sp]
  424650:	str	w19, [sp, #8]
  424654:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  424658:	str	w22, [sp, #16]
  42465c:	mov	w6, w9
  424660:	mov	w5, w8
  424664:	mov	w4, w20
  424668:	mov	x2, x25
  42466c:	mov	x0, x23
  424670:	add	x1, x1, #0x849
  424674:	bl	402940 <fprintf@plt>
  424678:	ldp	x29, x30, [sp, #32]
  42467c:	ldp	x19, x20, [sp, #48]
  424680:	ldp	x21, x22, [sp, #64]
  424684:	ldp	x23, x24, [sp, #80]
  424688:	ldr	x25, [sp, #96]
  42468c:	add	sp, sp, #0x80
  424690:	ret
  424694:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x17198>
  424698:	add	x3, x3, #0xaab
  42469c:	mov	w1, #0xffffffff            	// #-1
  4246a0:	mov	x25, x3
  4246a4:	mov	w9, w1
  4246a8:	mov	w8, w1
  4246ac:	mov	w20, w1
  4246b0:	b	424648 <ferror@plt+0x21cd8>
  4246b4:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x19198>
  4246b8:	mov	w1, #0x1                   	// #1
  4246bc:	add	x3, x3, #0x83e
  4246c0:	b	424648 <ferror@plt+0x21cd8>
  4246c4:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x19198>
  4246c8:	mov	w1, #0x0                   	// #0
  4246cc:	add	x3, x3, #0x842
  4246d0:	b	424648 <ferror@plt+0x21cd8>
  4246d4:	cbnz	x0, 4246f8 <ferror@plt+0x21d88>
  4246d8:	mov	w0, #0x0                   	// #0
  4246dc:	ret
  4246e0:	mov	w0, #0x0                   	// #0
  4246e4:	ldp	x19, x20, [sp, #16]
  4246e8:	ldp	x21, x22, [sp, #32]
  4246ec:	ldp	x23, x24, [sp, #48]
  4246f0:	ldp	x29, x30, [sp], #64
  4246f4:	ret
  4246f8:	stp	x29, x30, [sp, #-64]!
  4246fc:	mov	x29, sp
  424700:	stp	x19, x20, [sp, #16]
  424704:	mov	x19, x0
  424708:	ldr	w20, [x0, #12]
  42470c:	stp	x21, x22, [sp, #32]
  424710:	stp	x23, x24, [sp, #48]
  424714:	cbz	w20, 4246e0 <ferror@plt+0x21d70>
  424718:	sub	w20, w20, #0x1
  42471c:	mov	x24, x1
  424720:	mov	x23, x2
  424724:	mov	x21, #0x18                  	// #24
  424728:	sxtw	x22, w20
  42472c:	tbnz	w20, #31, 4246e0 <ferror@plt+0x21d70>
  424730:	ldr	x0, [x19]
  424734:	madd	x0, x22, x21, x0
  424738:	ldr	x0, [x0, #8]
  42473c:	cbnz	x0, 42474c <ferror@plt+0x21ddc>
  424740:	sub	w20, w20, #0x1
  424744:	sub	x22, x22, #0x1
  424748:	b	42472c <ferror@plt+0x21dbc>
  42474c:	mov	x1, x24
  424750:	bl	438b04 <ferror@plt+0x36194>
  424754:	cbnz	w0, 424740 <ferror@plt+0x21dd0>
  424758:	ldr	w0, [x19, #12]
  42475c:	sub	w0, w0, #0x1
  424760:	cmp	w0, w20
  424764:	b.ne	424778 <ferror@plt+0x21e08>  // b.any
  424768:	ldr	w0, [x19, #56]
  42476c:	str	w0, [x23]
  424770:	mov	w0, #0x1                   	// #1
  424774:	b	4246e4 <ferror@plt+0x21d74>
  424778:	madd	x21, x22, x21, x21
  42477c:	ldr	x0, [x19]
  424780:	ldr	w0, [x0, x21]
  424784:	sub	w0, w0, #0x1
  424788:	b	42476c <ferror@plt+0x21dfc>
  42478c:	ldp	w7, w8, [x0, #8]
  424790:	mov	w2, #0x18                  	// #24
  424794:	ldp	w12, w3, [x0, #32]
  424798:	mov	x11, #0x0                   	// #0
  42479c:	umull	x15, w7, w2
  4247a0:	mov	x10, #0x0                   	// #0
  4247a4:	umull	x6, w8, w2
  4247a8:	sub	w4, w3, #0x1
  4247ac:	ldr	x2, [x0, #24]
  4247b0:	sbfiz	x4, x4, #5, #32
  4247b4:	lsl	x12, x12, #5
  4247b8:	add	x4, x2, x4
  4247bc:	cbz	x2, 424804 <ferror@plt+0x21e94>
  4247c0:	cmp	x2, x4
  4247c4:	b.hi	424804 <ferror@plt+0x21e94>  // b.pmore
  4247c8:	ldr	w9, [x2, #4]
  4247cc:	mov	w5, #0x0                   	// #0
  4247d0:	lsl	w9, w9, #1
  4247d4:	add	x10, x10, w9, uxtw #2
  4247d8:	cmp	w9, w5
  4247dc:	b.ls	424858 <ferror@plt+0x21ee8>  // b.plast
  4247e0:	ldr	x14, [x2, #16]
  4247e4:	add	w13, w5, #0x1
  4247e8:	ldr	w16, [x14, w5, uxtw #2]
  4247ec:	ldr	w13, [x14, x13, lsl #2]
  4247f0:	cmp	w16, w13
  4247f4:	b.ne	4247fc <ferror@plt+0x21e8c>  // b.any
  4247f8:	add	x11, x11, #0x4
  4247fc:	add	w5, w5, #0x2
  424800:	b	4247d8 <ferror@plt+0x21e68>
  424804:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x3e198>
  424808:	mov	w3, w3
  42480c:	stp	x3, x12, [x1, #48]
  424810:	mov	w7, w7
  424814:	ldr	w2, [x2, #1964]
  424818:	str	x2, [x1, #32]
  42481c:	lsl	x3, x3, #5
  424820:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x3e198>
  424824:	str	x3, [x1, #64]
  424828:	mov	w3, #0x18                  	// #24
  42482c:	mov	w8, w8
  424830:	ldr	w2, [x2, #1960]
  424834:	str	x2, [x1, #40]
  424838:	ldr	w2, [x0, #100]
  42483c:	ldr	w0, [x0, #96]
  424840:	stp	x7, x8, [x1]
  424844:	umull	x2, w2, w3
  424848:	stp	x15, x6, [x1, #16]
  42484c:	stp	x10, x11, [x1, #72]
  424850:	stp	x2, x0, [x1, #88]
  424854:	ret
  424858:	add	x2, x2, #0x20
  42485c:	b	4247bc <ferror@plt+0x21e4c>
  424860:	cbz	x1, 4249ac <ferror@plt+0x2203c>
  424864:	stp	x29, x30, [sp, #-64]!
  424868:	mov	x29, sp
  42486c:	stp	x19, x20, [sp, #16]
  424870:	mov	x19, x0
  424874:	mov	x20, x1
  424878:	stp	x21, x22, [sp, #32]
  42487c:	mov	w22, w3
  424880:	str	x23, [sp, #48]
  424884:	mov	w23, w2
  424888:	cbnz	x0, 424894 <ferror@plt+0x21f24>
  42488c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  424890:	ldr	x19, [x0, #1336]
  424894:	mov	x0, x19
  424898:	ldr	w2, [x20, #12]
  42489c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  4248a0:	add	x1, x1, #0x87a
  4248a4:	bl	402940 <fprintf@plt>
  4248a8:	ldr	w2, [x20, #36]
  4248ac:	mov	x0, x19
  4248b0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  4248b4:	add	x1, x1, #0x893
  4248b8:	bl	402940 <fprintf@plt>
  4248bc:	ldr	w2, [x20, #48]
  4248c0:	mov	x0, x19
  4248c4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  4248c8:	add	x1, x1, #0x8ac
  4248cc:	bl	402940 <fprintf@plt>
  4248d0:	ldr	w2, [x20, #56]
  4248d4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  4248d8:	mov	x0, x19
  4248dc:	add	x1, x1, #0x8c5
  4248e0:	bl	402940 <fprintf@plt>
  4248e4:	cbz	w23, 424934 <ferror@plt+0x21fc4>
  4248e8:	mov	w21, #0x0                   	// #0
  4248ec:	mov	x1, x19
  4248f0:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  4248f4:	add	x0, x0, #0x8de
  4248f8:	bl	402340 <fputs@plt>
  4248fc:	ldr	w0, [x20, #12]
  424900:	cmp	w0, w21
  424904:	b.ls	424928 <ferror@plt+0x21fb8>  // b.plast
  424908:	mov	w2, w21
  42490c:	mov	x1, x20
  424910:	mov	x0, x19
  424914:	add	w21, w21, #0x1
  424918:	mov	w3, #0x0                   	// #0
  42491c:	bl	424414 <ferror@plt+0x21aa4>
  424920:	cmp	w23, w21
  424924:	b.ne	4248fc <ferror@plt+0x21f8c>  // b.any
  424928:	mov	x1, x19
  42492c:	mov	w0, #0xa                   	// #10
  424930:	bl	402400 <fputc@plt>
  424934:	cbz	w22, 424998 <ferror@plt+0x22028>
  424938:	mov	w21, #0x0                   	// #0
  42493c:	mov	x1, x19
  424940:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  424944:	add	x0, x0, #0x8f3
  424948:	bl	402340 <fputs@plt>
  42494c:	ldr	w0, [x20, #36]
  424950:	cmp	w0, w21
  424954:	b.hi	424974 <ferror@plt+0x22004>  // b.pmore
  424958:	mov	x1, x19
  42495c:	mov	w0, #0xa                   	// #10
  424960:	ldp	x19, x20, [sp, #16]
  424964:	ldp	x21, x22, [sp, #32]
  424968:	ldr	x23, [sp, #48]
  42496c:	ldp	x29, x30, [sp], #64
  424970:	b	402400 <fputc@plt>
  424974:	mov	w2, w21
  424978:	mov	x1, x20
  42497c:	mov	x0, x19
  424980:	add	w21, w21, #0x1
  424984:	mov	w3, #0x1                   	// #1
  424988:	bl	424414 <ferror@plt+0x21aa4>
  42498c:	cmp	w22, w21
  424990:	b.ne	42494c <ferror@plt+0x21fdc>  // b.any
  424994:	b	424958 <ferror@plt+0x21fe8>
  424998:	ldp	x19, x20, [sp, #16]
  42499c:	ldp	x21, x22, [sp, #32]
  4249a0:	ldr	x23, [sp, #48]
  4249a4:	ldp	x29, x30, [sp], #64
  4249a8:	ret
  4249ac:	ret
  4249b0:	stp	x29, x30, [sp, #-64]!
  4249b4:	mov	x29, sp
  4249b8:	stp	x19, x20, [sp, #16]
  4249bc:	mov	x20, x0
  4249c0:	mov	w19, #0x0                   	// #0
  4249c4:	stp	x21, x22, [sp, #32]
  4249c8:	add	x21, x0, #0x78
  4249cc:	str	x23, [sp, #48]
  4249d0:	mov	x23, #0xfffffffffffffff0    	// #-16
  4249d4:	ldr	w0, [x20, #120]
  4249d8:	cmp	w19, w0
  4249dc:	b.cs	424a28 <ferror@plt+0x220b8>  // b.hs, b.nlast
  4249e0:	sxtw	x1, w19
  4249e4:	cmp	w19, #0x1
  4249e8:	b.gt	424a18 <ferror@plt+0x220a8>
  4249ec:	add	x1, x1, #0x1
  4249f0:	add	x1, x21, x1, lsl #3
  4249f4:	ldr	x22, [x1]
  4249f8:	cbz	x22, 424a10 <ferror@plt+0x220a0>
  4249fc:	ldr	x0, [x22, #8]
  424a00:	bl	402730 <free@plt>
  424a04:	mov	x0, x22
  424a08:	mov	x1, #0x18                  	// #24
  424a0c:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  424a10:	add	w19, w19, #0x1
  424a14:	b	4249d4 <ferror@plt+0x22064>
  424a18:	ldr	x2, [x21, #32]
  424a1c:	add	x1, x23, w19, sxtw #3
  424a20:	add	x1, x2, x1
  424a24:	b	4249f4 <ferror@plt+0x22084>
  424a28:	ldr	x0, [x21, #32]
  424a2c:	bl	402730 <free@plt>
  424a30:	ldp	x21, x22, [sp, #32]
  424a34:	ldr	x23, [sp, #48]
  424a38:	ldr	x0, [x20, #72]
  424a3c:	ldp	x19, x20, [sp, #16]
  424a40:	ldp	x29, x30, [sp], #64
  424a44:	b	402730 <free@plt>
  424a48:	sbfiz	x2, x1, #4, #32
  424a4c:	cmp	w1, #0x2
  424a50:	add	x0, x0, #0x8
  424a54:	b.gt	424a68 <ferror@plt+0x220f8>
  424a58:	add	x2, x2, #0x8
  424a5c:	add	x0, x0, x2
  424a60:	ldr	w0, [x0]
  424a64:	ret
  424a68:	sub	x2, x2, #0x30
  424a6c:	ldr	x0, [x0, #64]
  424a70:	b	424a5c <ferror@plt+0x220ec>
  424a74:	sbfiz	x2, x1, #4, #32
  424a78:	cmp	w1, #0x2
  424a7c:	add	x0, x0, #0x8
  424a80:	b.gt	424a90 <ferror@plt+0x22120>
  424a84:	add	x2, x2, #0x8
  424a88:	add	x0, x0, x2
  424a8c:	ret
  424a90:	sub	x2, x2, #0x30
  424a94:	ldr	x0, [x0, #64]
  424a98:	b	424a88 <ferror@plt+0x22118>
  424a9c:	sbfiz	x2, x1, #4, #32
  424aa0:	cmp	w1, #0x2
  424aa4:	add	x0, x0, #0x8
  424aa8:	b.gt	424ab8 <ferror@plt+0x22148>
  424aac:	add	x2, x2, #0x8
  424ab0:	add	x0, x0, x2
  424ab4:	ret
  424ab8:	sub	x2, x2, #0x30
  424abc:	ldr	x0, [x0, #64]
  424ac0:	b	424ab0 <ferror@plt+0x22140>
  424ac4:	stp	x29, x30, [sp, #-80]!
  424ac8:	mov	x29, sp
  424acc:	stp	x19, x20, [sp, #16]
  424ad0:	mov	x20, x8
  424ad4:	str	x21, [sp, #32]
  424ad8:	cbnz	w1, 424b40 <ferror@plt+0x221d0>
  424adc:	ldrb	w2, [x0, #84]
  424ae0:	mov	x19, x0
  424ae4:	add	x21, x0, #0x58
  424ae8:	cbnz	w2, 424b20 <ferror@plt+0x221b0>
  424aec:	bl	424a48 <ferror@plt+0x220d8>
  424af0:	mov	w1, #0x0                   	// #0
  424af4:	add	x8, sp, #0x30
  424af8:	bl	40f034 <ferror@plt+0xc6c4>
  424afc:	ldp	x0, x1, [sp, #48]
  424b00:	stp	x0, x1, [x19, #88]
  424b04:	ldp	x0, x1, [sp, #64]
  424b08:	stp	x0, x1, [x21, #16]
  424b0c:	ldr	w0, [x19, #80]
  424b10:	cbz	w0, 424b18 <ferror@plt+0x221a8>
  424b14:	str	w0, [x19, #100]
  424b18:	mov	w0, #0x1                   	// #1
  424b1c:	strb	w0, [x19, #84]
  424b20:	ldp	x0, x1, [x19, #88]
  424b24:	stp	x0, x1, [x20]
  424b28:	ldp	x0, x1, [x21, #16]
  424b2c:	stp	x0, x1, [x20, #16]
  424b30:	ldp	x19, x20, [sp, #16]
  424b34:	ldr	x21, [sp, #32]
  424b38:	ldp	x29, x30, [sp], #80
  424b3c:	ret
  424b40:	bl	424a48 <ferror@plt+0x220d8>
  424b44:	mov	w1, #0x0                   	// #0
  424b48:	bl	40f034 <ferror@plt+0xc6c4>
  424b4c:	b	424b30 <ferror@plt+0x221c0>
  424b50:	str	w1, [x0, #80]
  424b54:	strb	wzr, [x0, #84]
  424b58:	ret
  424b5c:	stp	x29, x30, [sp, #-64]!
  424b60:	mov	x29, sp
  424b64:	ldr	w4, [x0, #8]
  424b68:	stp	x19, x20, [sp, #16]
  424b6c:	add	x20, x0, #0x8
  424b70:	cmp	w4, #0x2
  424b74:	stp	x21, x22, [sp, #32]
  424b78:	mov	w22, w2
  424b7c:	mov	x21, x3
  424b80:	str	x23, [sp, #48]
  424b84:	mov	w23, w1
  424b88:	add	w1, w4, #0x1
  424b8c:	str	w1, [x0, #8]
  424b90:	b.gt	424bc0 <ferror@plt+0x22250>
  424b94:	mov	x0, #0x8                   	// #8
  424b98:	add	x4, x0, w4, sxtw #4
  424b9c:	add	x0, x20, x4
  424ba0:	str	w23, [x20, x4]
  424ba4:	str	w2, [x0, #4]
  424ba8:	str	x3, [x0, #8]
  424bac:	ldp	x19, x20, [sp, #16]
  424bb0:	ldp	x21, x22, [sp, #32]
  424bb4:	ldr	x23, [sp, #48]
  424bb8:	ldp	x29, x30, [sp], #64
  424bbc:	ret
  424bc0:	ldr	x0, [x20, #64]
  424bc4:	sub	w19, w4, #0x3
  424bc8:	cbnz	x0, 424bfc <ferror@plt+0x2228c>
  424bcc:	mov	w0, #0x10                  	// #16
  424bd0:	str	w0, [x20, #56]
  424bd4:	mov	x0, #0x100                 	// #256
  424bd8:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  424bdc:	str	x0, [x20, #64]
  424be0:	ldr	x0, [x20, #64]
  424be4:	sbfiz	x1, x19, #4, #32
  424be8:	add	x4, x0, w19, sxtw #4
  424bec:	str	w23, [x0, x1]
  424bf0:	str	w22, [x4, #4]
  424bf4:	str	x21, [x4, #8]
  424bf8:	b	424bac <ferror@plt+0x2223c>
  424bfc:	ldr	w4, [x20, #56]
  424c00:	cmp	w19, w4
  424c04:	b.lt	424be0 <ferror@plt+0x22270>  // b.tstop
  424c08:	lsl	w4, w4, #1
  424c0c:	str	w4, [x20, #56]
  424c10:	sbfiz	x1, x4, #4, #32
  424c14:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  424c18:	b	424bdc <ferror@plt+0x2226c>
  424c1c:	mov	x5, x1
  424c20:	mov	w1, w2
  424c24:	mov	x2, x0
  424c28:	str	x5, [x2], #8
  424c2c:	str	wzr, [x0, #8]
  424c30:	str	wzr, [x2, #56]
  424c34:	str	xzr, [x2, #64]
  424c38:	mov	w2, #0x0                   	// #0
  424c3c:	str	wzr, [x0, #80]
  424c40:	strb	wzr, [x0, #84]
  424c44:	str	wzr, [x0, #120]
  424c48:	str	wzr, [x0, #144]
  424c4c:	str	xzr, [x0, #152]
  424c50:	strh	wzr, [x0, #160]
  424c54:	b	424b5c <ferror@plt+0x221ec>
  424c58:	stp	x29, x30, [sp, #-32]!
  424c5c:	mov	x29, sp
  424c60:	stp	x19, x20, [sp, #16]
  424c64:	mov	w19, w1
  424c68:	mov	w1, w2
  424c6c:	mov	w2, w3
  424c70:	ldr	w3, [x0, #8]
  424c74:	mov	x20, x0
  424c78:	cmp	w3, w19
  424c7c:	b.ne	424c9c <ferror@plt+0x2232c>  // b.any
  424c80:	mov	x3, #0x0                   	// #0
  424c84:	bl	424b5c <ferror@plt+0x221ec>
  424c88:	cbnz	w19, 424c90 <ferror@plt+0x22320>
  424c8c:	strb	wzr, [x20, #84]
  424c90:	ldp	x19, x20, [sp, #16]
  424c94:	ldp	x29, x30, [sp], #32
  424c98:	ret
  424c9c:	sbfiz	x4, x19, #4, #32
  424ca0:	cmp	w19, #0x2
  424ca4:	add	x5, x0, #0x8
  424ca8:	b.gt	424cbc <ferror@plt+0x2234c>
  424cac:	add	x4, x4, #0x8
  424cb0:	add	x4, x5, x4
  424cb4:	stp	w1, w2, [x4]
  424cb8:	b	424c88 <ferror@plt+0x22318>
  424cbc:	sub	x6, x4, #0x30
  424cc0:	ldr	x4, [x5, #64]
  424cc4:	add	x4, x4, x6
  424cc8:	b	424cb4 <ferror@plt+0x22344>
  424ccc:	ldr	w2, [x0, #120]
  424cd0:	cbz	w2, 424d0c <ferror@plt+0x2239c>
  424cd4:	sub	w2, w2, #0x1
  424cd8:	add	x3, x0, #0x78
  424cdc:	cmp	w2, #0x1
  424ce0:	sxtw	x1, w2
  424ce4:	b.gt	424cf8 <ferror@plt+0x22388>
  424ce8:	add	x0, x1, #0x1
  424cec:	add	x0, x3, x0, lsl #3
  424cf0:	ldr	x0, [x0]
  424cf4:	ret
  424cf8:	mov	x0, #0xfffffffffffffff0    	// #-16
  424cfc:	add	x2, x0, w2, sxtw #3
  424d00:	ldr	x0, [x3, #32]
  424d04:	add	x0, x0, x2
  424d08:	b	424cf0 <ferror@plt+0x22380>
  424d0c:	mov	x0, #0x0                   	// #0
  424d10:	b	424cf4 <ferror@plt+0x22384>
  424d14:	stp	x29, x30, [sp, #-64]!
  424d18:	mov	x29, sp
  424d1c:	stp	x19, x20, [sp, #16]
  424d20:	mov	x19, x0
  424d24:	mov	w0, #0x1                   	// #1
  424d28:	stp	x21, x22, [sp, #32]
  424d2c:	add	x22, x19, #0x78
  424d30:	mov	w20, #0x0                   	// #0
  424d34:	strb	w0, [x19, #160]
  424d38:	str	x23, [sp, #48]
  424d3c:	mov	x23, #0xfffffffffffffff0    	// #-16
  424d40:	ldr	w0, [x19, #120]
  424d44:	cmp	w20, w0
  424d48:	b.cs	424d94 <ferror@plt+0x22424>  // b.hs, b.nlast
  424d4c:	sxtw	x1, w20
  424d50:	cmp	w20, #0x1
  424d54:	b.gt	424d84 <ferror@plt+0x22414>
  424d58:	add	x1, x1, #0x1
  424d5c:	add	x1, x22, x1, lsl #3
  424d60:	ldr	x21, [x1]
  424d64:	cbz	x21, 424d7c <ferror@plt+0x2240c>
  424d68:	ldr	x0, [x21, #8]
  424d6c:	bl	402730 <free@plt>
  424d70:	mov	x0, x21
  424d74:	mov	x1, #0x18                  	// #24
  424d78:	bl	43a470 <_obstack_memory_used@@Base+0x608>
  424d7c:	add	w20, w20, #0x1
  424d80:	b	424d40 <ferror@plt+0x223d0>
  424d84:	ldr	x2, [x22, #32]
  424d88:	add	x1, x23, w20, sxtw #3
  424d8c:	add	x1, x2, x1
  424d90:	b	424d60 <ferror@plt+0x223f0>
  424d94:	ldp	x21, x22, [sp, #32]
  424d98:	ldr	x23, [sp, #48]
  424d9c:	str	wzr, [x19, #120]
  424da0:	ldp	x19, x20, [sp, #16]
  424da4:	ldp	x29, x30, [sp], #64
  424da8:	ret
  424dac:	ldrb	w2, [x0, #160]
  424db0:	cbnz	w2, 424ddc <ferror@plt+0x2246c>
  424db4:	mov	w3, #0x60000000            	// #1610612736
  424db8:	cmp	w1, w3
  424dbc:	b.ls	424ddc <ferror@plt+0x2246c>  // b.plast
  424dc0:	stp	x29, x30, [sp, #-16]!
  424dc4:	mov	x29, sp
  424dc8:	bl	424d14 <ferror@plt+0x223a4>
  424dcc:	mov	w2, #0x1                   	// #1
  424dd0:	mov	w0, w2
  424dd4:	ldp	x29, x30, [sp], #16
  424dd8:	ret
  424ddc:	mov	w0, w2
  424de0:	ret
  424de4:	stp	x29, x30, [sp, #-32]!
  424de8:	mov	x29, sp
  424dec:	stp	x19, x20, [sp, #16]
  424df0:	mov	x19, x0
  424df4:	mov	x20, x3
  424df8:	mov	x0, x3
  424dfc:	stp	w1, w2, [x19]
  424e00:	bl	43a064 <_obstack_memory_used@@Base+0x1fc>
  424e04:	str	x0, [x19, #8]
  424e08:	mov	x0, x20
  424e0c:	bl	402330 <strlen@plt>
  424e10:	str	x0, [x19, #16]
  424e14:	ldp	x19, x20, [sp, #16]
  424e18:	ldp	x29, x30, [sp], #32
  424e1c:	ret
  424e20:	stp	x29, x30, [sp, #-112]!
  424e24:	mov	x29, sp
  424e28:	stp	x19, x20, [sp, #16]
  424e2c:	mov	x20, x0
  424e30:	ldr	w0, [x0]
  424e34:	mov	w19, w2
  424e38:	add	x8, sp, #0x30
  424e3c:	stp	x21, x22, [sp, #32]
  424e40:	mov	x21, x1
  424e44:	mov	w1, #0x1                   	// #1
  424e48:	bl	40f034 <ferror@plt+0xc6c4>
  424e4c:	ldr	x22, [sp, #48]
  424e50:	cmp	x22, x21
  424e54:	b.eq	424e6c <ferror@plt+0x224fc>  // b.none
  424e58:	mov	w0, #0x0                   	// #0
  424e5c:	ldp	x19, x20, [sp, #16]
  424e60:	ldp	x21, x22, [sp, #32]
  424e64:	ldp	x29, x30, [sp], #112
  424e68:	ret
  424e6c:	ldr	w0, [sp, #56]
  424e70:	cmp	w0, w19
  424e74:	b.gt	424e58 <ferror@plt+0x224e8>
  424e78:	ldr	w0, [x20, #4]
  424e7c:	add	x8, sp, #0x50
  424e80:	mov	w1, #0x1                   	// #1
  424e84:	bl	40f034 <ferror@plt+0xc6c4>
  424e88:	ldr	x0, [sp, #80]
  424e8c:	cmp	x0, x22
  424e90:	b.ne	424e58 <ferror@plt+0x224e8>  // b.any
  424e94:	ldr	w0, [sp, #88]
  424e98:	cmp	w0, w19
  424e9c:	cset	w0, ge  // ge = tcont
  424ea0:	b	424e5c <ferror@plt+0x224ec>
  424ea4:	stp	x29, x30, [sp, #-48]!
  424ea8:	mov	x29, sp
  424eac:	stp	x19, x20, [sp, #16]
  424eb0:	mov	x19, x0
  424eb4:	ldr	w0, [x0, #4]
  424eb8:	str	x21, [sp, #32]
  424ebc:	cmp	w0, w1
  424ec0:	b.ne	424f24 <ferror@plt+0x225b4>  // b.any
  424ec4:	str	w2, [x19, #4]
  424ec8:	mov	x21, x3
  424ecc:	mov	x0, x3
  424ed0:	bl	402330 <strlen@plt>
  424ed4:	mov	x20, x0
  424ed8:	ldp	x0, x1, [x19, #8]
  424edc:	add	x1, x1, #0x1
  424ee0:	add	x1, x1, x20
  424ee4:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  424ee8:	ldr	x3, [x19, #16]
  424eec:	str	x0, [x19, #8]
  424ef0:	mov	x2, x20
  424ef4:	mov	x1, x21
  424ef8:	add	x0, x0, x3
  424efc:	bl	4022e0 <memcpy@plt>
  424f00:	ldp	x0, x2, [x19, #8]
  424f04:	add	x20, x20, x2
  424f08:	str	x20, [x19, #16]
  424f0c:	strb	wzr, [x0, x20]
  424f10:	mov	w0, #0x1                   	// #1
  424f14:	ldp	x19, x20, [sp, #16]
  424f18:	ldr	x21, [sp, #32]
  424f1c:	ldp	x29, x30, [sp], #48
  424f20:	ret
  424f24:	mov	w0, #0x0                   	// #0
  424f28:	b	424f14 <ferror@plt+0x225a4>
  424f2c:	ldr	x1, [x0, #16]
  424f30:	cbz	x1, 424f4c <ferror@plt+0x225dc>
  424f34:	ldr	x0, [x0, #8]
  424f38:	add	x0, x0, x1
  424f3c:	ldurb	w0, [x0, #-1]
  424f40:	cmp	w0, #0xa
  424f44:	cset	w0, eq  // eq = none
  424f48:	ret
  424f4c:	mov	w0, #0x0                   	// #0
  424f50:	b	424f48 <ferror@plt+0x225d8>
  424f54:	stp	x29, x30, [sp, #-128]!
  424f58:	mov	x29, sp
  424f5c:	stp	x19, x20, [sp, #16]
  424f60:	mov	x19, x0
  424f64:	mov	w20, w2
  424f68:	stp	x21, x22, [sp, #32]
  424f6c:	mov	w21, w1
  424f70:	str	x23, [sp, #48]
  424f74:	mov	x23, x3
  424f78:	bl	424dac <ferror@plt+0x2243c>
  424f7c:	tst	w0, #0xff
  424f80:	b.ne	4250a0 <ferror@plt+0x22730>  // b.any
  424f84:	mov	w1, w20
  424f88:	mov	x0, x19
  424f8c:	bl	424dac <ferror@plt+0x2243c>
  424f90:	tst	w0, #0xff
  424f94:	b.ne	4250a0 <ferror@plt+0x22730>  // b.any
  424f98:	add	x8, sp, #0x40
  424f9c:	mov	w0, w21
  424fa0:	mov	w1, #0x1                   	// #1
  424fa4:	bl	40f034 <ferror@plt+0xc6c4>
  424fa8:	mov	w0, w20
  424fac:	mov	w1, #0x1                   	// #1
  424fb0:	ldr	w22, [sp, #76]
  424fb4:	add	x8, sp, #0x60
  424fb8:	bl	40f034 <ferror@plt+0xc6c4>
  424fbc:	ldr	x1, [sp, #64]
  424fc0:	ldr	x0, [sp, #96]
  424fc4:	cmp	x1, x0
  424fc8:	b.eq	424fe4 <ferror@plt+0x22674>  // b.none
  424fcc:	mov	x0, x19
  424fd0:	ldp	x19, x20, [sp, #16]
  424fd4:	ldp	x21, x22, [sp, #32]
  424fd8:	ldr	x23, [sp, #48]
  424fdc:	ldp	x29, x30, [sp], #128
  424fe0:	b	424d14 <ferror@plt+0x223a4>
  424fe4:	ldr	w1, [sp, #72]
  424fe8:	ldr	w0, [sp, #104]
  424fec:	cmp	w1, w0
  424ff0:	b.ne	424fcc <ferror@plt+0x2265c>  // b.any
  424ff4:	ldr	w0, [sp, #108]
  424ff8:	cmp	w0, w22
  424ffc:	b.lt	424fcc <ferror@plt+0x2265c>  // b.tstop
  425000:	mov	x0, x23
  425004:	mov	w1, #0xa                   	// #10
  425008:	bl	402760 <strchr@plt>
  42500c:	cbz	x0, 425028 <ferror@plt+0x226b8>
  425010:	cmp	w21, w20
  425014:	b.ne	424fcc <ferror@plt+0x2265c>  // b.any
  425018:	cmp	w22, #0x1
  42501c:	b.ne	424fcc <ferror@plt+0x2265c>  // b.any
  425020:	ldrb	w0, [x0, #1]
  425024:	cbnz	w0, 424fcc <ferror@plt+0x2265c>
  425028:	mov	x0, x19
  42502c:	bl	424ccc <ferror@plt+0x2235c>
  425030:	mov	x4, x0
  425034:	cbnz	x0, 425078 <ferror@plt+0x22708>
  425038:	mov	x0, #0x18                  	// #24
  42503c:	bl	43a6b0 <_obstack_memory_used@@Base+0x848>
  425040:	mov	w2, w20
  425044:	mov	x22, x0
  425048:	mov	w1, w21
  42504c:	mov	x3, x23
  425050:	bl	424de4 <ferror@plt+0x22474>
  425054:	add	x20, x19, #0x78
  425058:	ldr	w1, [x19, #120]
  42505c:	add	w0, w1, #0x1
  425060:	str	w0, [x19, #120]
  425064:	cmp	w1, #0x1
  425068:	b.gt	4250b4 <ferror@plt+0x22744>
  42506c:	add	x1, x20, w1, sxtw #3
  425070:	str	x22, [x1, #8]
  425074:	b	4250a0 <ferror@plt+0x22730>
  425078:	bl	424f2c <ferror@plt+0x225bc>
  42507c:	tst	w0, #0xff
  425080:	b.ne	425038 <ferror@plt+0x226c8>  // b.any
  425084:	mov	x3, x23
  425088:	mov	w2, w20
  42508c:	mov	w1, w21
  425090:	mov	x0, x4
  425094:	bl	424ea4 <ferror@plt+0x22534>
  425098:	tst	w0, #0xff
  42509c:	b.eq	425038 <ferror@plt+0x226c8>  // b.none
  4250a0:	ldp	x19, x20, [sp, #16]
  4250a4:	ldp	x21, x22, [sp, #32]
  4250a8:	ldr	x23, [sp, #48]
  4250ac:	ldp	x29, x30, [sp], #128
  4250b0:	ret
  4250b4:	ldr	x0, [x20, #32]
  4250b8:	sub	w19, w1, #0x2
  4250bc:	cbnz	x0, 4250e0 <ferror@plt+0x22770>
  4250c0:	mov	w0, #0x10                  	// #16
  4250c4:	str	w0, [x20, #24]
  4250c8:	mov	x0, #0x80                  	// #128
  4250cc:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  4250d0:	str	x0, [x20, #32]
  4250d4:	ldr	x0, [x20, #32]
  4250d8:	str	x22, [x0, w19, sxtw #3]
  4250dc:	b	4250a0 <ferror@plt+0x22730>
  4250e0:	ldr	w1, [x20, #24]
  4250e4:	cmp	w19, w1
  4250e8:	b.lt	4250d4 <ferror@plt+0x22764>  // b.tstop
  4250ec:	lsl	w1, w1, #1
  4250f0:	str	w1, [x20, #24]
  4250f4:	sbfiz	x1, x1, #3, #32
  4250f8:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4250fc:	b	4250d0 <ferror@plt+0x22760>
  425100:	stp	x29, x30, [sp, #-32]!
  425104:	mov	x29, sp
  425108:	stp	x19, x20, [sp, #16]
  42510c:	mov	x19, x0
  425110:	mov	x20, x2
  425114:	ldr	x0, [x0]
  425118:	bl	423a00 <ferror@plt+0x21090>
  42511c:	mov	x1, x0
  425120:	mov	x3, x20
  425124:	mov	w2, w0
  425128:	mov	x0, x19
  42512c:	ldp	x19, x20, [sp, #16]
  425130:	ldp	x29, x30, [sp], #32
  425134:	b	424f54 <ferror@plt+0x225e4>
  425138:	mov	x4, x1
  42513c:	mov	x3, x0
  425140:	stp	x29, x30, [sp, #-16]!
  425144:	mov	w1, #0x0                   	// #0
  425148:	mov	x29, sp
  42514c:	bl	424a48 <ferror@plt+0x220d8>
  425150:	mov	w1, w0
  425154:	ldp	x29, x30, [sp], #16
  425158:	mov	x2, x4
  42515c:	mov	x0, x3
  425160:	b	425100 <ferror@plt+0x22790>
  425164:	stp	x29, x30, [sp, #-48]!
  425168:	mov	x29, sp
  42516c:	stp	x19, x20, [sp, #16]
  425170:	mov	x19, x0
  425174:	ldr	x0, [x0]
  425178:	str	x21, [sp, #32]
  42517c:	mov	x21, x2
  425180:	bl	423a00 <ferror@plt+0x21090>
  425184:	lsr	x20, x0, #32
  425188:	ldr	x0, [x19]
  42518c:	mov	w1, w20
  425190:	mov	w2, #0x1                   	// #1
  425194:	bl	423e30 <ferror@plt+0x214c0>
  425198:	cmp	w20, w0
  42519c:	b.ne	4251b4 <ferror@plt+0x22844>  // b.any
  4251a0:	mov	x0, x19
  4251a4:	ldp	x19, x20, [sp, #16]
  4251a8:	ldr	x21, [sp, #32]
  4251ac:	ldp	x29, x30, [sp], #48
  4251b0:	b	424d14 <ferror@plt+0x223a4>
  4251b4:	mov	w2, w0
  4251b8:	mov	x3, x21
  4251bc:	mov	w1, w0
  4251c0:	mov	x0, x19
  4251c4:	ldp	x19, x20, [sp, #16]
  4251c8:	ldr	x21, [sp, #32]
  4251cc:	ldp	x29, x30, [sp], #48
  4251d0:	b	424f54 <ferror@plt+0x225e4>
  4251d4:	mov	x4, x1
  4251d8:	mov	x3, x0
  4251dc:	stp	x29, x30, [sp, #-16]!
  4251e0:	mov	w1, #0x0                   	// #0
  4251e4:	mov	x29, sp
  4251e8:	bl	424a48 <ferror@plt+0x220d8>
  4251ec:	mov	w1, w0
  4251f0:	ldp	x29, x30, [sp], #16
  4251f4:	mov	x2, x4
  4251f8:	mov	x0, x3
  4251fc:	b	425164 <ferror@plt+0x227f4>
  425200:	stp	x29, x30, [sp, #-48]!
  425204:	mov	x29, sp
  425208:	stp	x19, x20, [sp, #16]
  42520c:	mov	x19, x0
  425210:	mov	x20, x1
  425214:	ldr	x0, [x0]
  425218:	stp	x21, x22, [sp, #32]
  42521c:	mov	x22, x2
  425220:	bl	423ae4 <ferror@plt+0x21174>
  425224:	mov	w21, w0
  425228:	ldr	x0, [x19]
  42522c:	lsr	x1, x20, #32
  425230:	bl	423ae4 <ferror@plt+0x21174>
  425234:	mov	w20, w0
  425238:	mov	w1, w0
  42523c:	mov	w2, #0x1                   	// #1
  425240:	ldr	x0, [x19]
  425244:	bl	423e30 <ferror@plt+0x214c0>
  425248:	cmp	w20, w0
  42524c:	b.ne	425264 <ferror@plt+0x228f4>  // b.any
  425250:	mov	x0, x19
  425254:	ldp	x19, x20, [sp, #16]
  425258:	ldp	x21, x22, [sp, #32]
  42525c:	ldp	x29, x30, [sp], #48
  425260:	b	424d14 <ferror@plt+0x223a4>
  425264:	mov	w2, w0
  425268:	mov	x3, x22
  42526c:	mov	w1, w21
  425270:	mov	x0, x19
  425274:	ldp	x19, x20, [sp, #16]
  425278:	ldp	x21, x22, [sp, #32]
  42527c:	ldp	x29, x30, [sp], #48
  425280:	b	424f54 <ferror@plt+0x225e4>
  425284:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x17198>
  425288:	add	x2, x2, #0xaab
  42528c:	b	425200 <ferror@plt+0x22890>
  425290:	stp	x29, x30, [sp, #-32]!
  425294:	mov	x29, sp
  425298:	str	x19, [sp, #16]
  42529c:	mov	x19, x0
  4252a0:	ldr	x0, [x0]
  4252a4:	bl	423a00 <ferror@plt+0x21090>
  4252a8:	mov	x1, x0
  4252ac:	mov	x0, x19
  4252b0:	ldr	x19, [sp, #16]
  4252b4:	ldp	x29, x30, [sp], #32
  4252b8:	b	425284 <ferror@plt+0x22914>
  4252bc:	mov	x3, x0
  4252c0:	stp	x29, x30, [sp, #-16]!
  4252c4:	mov	w1, #0x0                   	// #0
  4252c8:	mov	x29, sp
  4252cc:	bl	424a48 <ferror@plt+0x220d8>
  4252d0:	mov	w1, w0
  4252d4:	ldp	x29, x30, [sp], #16
  4252d8:	mov	x0, x3
  4252dc:	b	425290 <ferror@plt+0x22920>
  4252e0:	stp	x29, x30, [sp, #-32]!
  4252e4:	mov	x29, sp
  4252e8:	stp	x19, x20, [sp, #16]
  4252ec:	mov	x19, x0
  4252f0:	mov	x20, x2
  4252f4:	ldr	x0, [x0]
  4252f8:	bl	423a00 <ferror@plt+0x21090>
  4252fc:	mov	x1, x0
  425300:	mov	x2, x20
  425304:	mov	x0, x19
  425308:	ldp	x19, x20, [sp, #16]
  42530c:	ldp	x29, x30, [sp], #32
  425310:	b	425200 <ferror@plt+0x22890>
  425314:	mov	x4, x1
  425318:	mov	x3, x0
  42531c:	stp	x29, x30, [sp, #-16]!
  425320:	mov	w1, #0x0                   	// #0
  425324:	mov	x29, sp
  425328:	bl	424a48 <ferror@plt+0x220d8>
  42532c:	mov	w1, w0
  425330:	ldp	x29, x30, [sp], #16
  425334:	mov	x2, x4
  425338:	mov	x0, x3
  42533c:	b	4252e0 <ferror@plt+0x22970>
  425340:	ldr	w1, [x0, #12]
  425344:	mov	w2, #0x18                  	// #24
  425348:	ldr	x0, [x0]
  42534c:	sub	w1, w1, #0x1
  425350:	smaddl	x0, w1, w2, x0
  425354:	ret
  425358:	ldrb	w3, [x0, #6]
  42535c:	mov	w2, #0x1                   	// #1
  425360:	lsl	w2, w2, w3
  425364:	ldr	w3, [x0]
  425368:	sub	w2, w2, #0x1
  42536c:	ldrb	w0, [x0, #7]
  425370:	sub	w1, w1, w3
  425374:	and	w2, w2, w1
  425378:	lsr	w0, w2, w0
  42537c:	ret
  425380:	mov	x4, x0
  425384:	cmp	w2, #0x1
  425388:	b.eq	4253a0 <ferror@plt+0x22a30>  // b.none
  42538c:	ldp	x0, x5, [x0]
  425390:	cmp	w2, #0x2
  425394:	csel	x0, x0, x5, ne  // ne = any
  425398:	cbnz	x0, 4253b0 <ferror@plt+0x22a40>
  42539c:	ret
  4253a0:	add	x0, x0, #0x10
  4253a4:	cbnz	x3, 4253d4 <ferror@plt+0x22a64>
  4253a8:	add	x0, x0, x1, lsl #3
  4253ac:	b	42539c <ferror@plt+0x22a2c>
  4253b0:	cbz	x3, 4253a8 <ferror@plt+0x22a38>
  4253b4:	cbnz	w2, 4253c8 <ferror@plt+0x22a58>
  4253b8:	ldr	x2, [x4, #32]
  4253bc:	add	x2, x2, x1, lsl #2
  4253c0:	str	x2, [x3]
  4253c4:	b	4253a8 <ferror@plt+0x22a38>
  4253c8:	b.ne	4253d4 <ferror@plt+0x22a64>  // b.any
  4253cc:	ldr	x2, [x4, #40]
  4253d0:	b	4253bc <ferror@plt+0x22a4c>
  4253d4:	ldr	x2, [x0, x1, lsl #3]
  4253d8:	b	4253c0 <ferror@plt+0x22a50>
  4253dc:	stp	x29, x30, [sp, #-32]!
  4253e0:	mov	x7, x1
  4253e4:	mov	w6, w2
  4253e8:	tst	w5, #0xff
  4253ec:	mov	x29, sp
  4253f0:	mov	x1, x3
  4253f4:	add	x3, sp, #0x18
  4253f8:	mov	w2, w4
  4253fc:	csel	x3, x3, xzr, ne  // ne = any
  425400:	str	xzr, [sp, #24]
  425404:	bl	425380 <ferror@plt+0x22a10>
  425408:	str	x7, [x0]
  42540c:	ldr	x0, [sp, #24]
  425410:	cbz	x0, 425418 <ferror@plt+0x22aa8>
  425414:	str	w6, [x0]
  425418:	ldp	x29, x30, [sp], #32
  42541c:	ret
  425420:	and	w1, w1, #0xff
  425424:	strb	w1, [x0]
  425428:	str	w2, [x0, #4]
  42542c:	mov	x6, x0
  425430:	stp	x4, xzr, [x0, #8]
  425434:	cbz	w1, 425468 <ferror@plt+0x22af8>
  425438:	stp	x29, x30, [sp, #-32]!
  42543c:	mov	x0, x3
  425440:	mov	x1, #0x0                   	// #0
  425444:	mov	x29, sp
  425448:	add	x3, sp, #0x18
  42544c:	str	xzr, [sp, #24]
  425450:	bl	425380 <ferror@plt+0x22a10>
  425454:	cbz	x0, 42545c <ferror@plt+0x22aec>
  425458:	ldr	x0, [sp, #24]
  42545c:	str	x0, [x6, #16]
  425460:	ldp	x29, x30, [sp], #32
  425464:	ret
  425468:	ret
  42546c:	cbz	x0, 425484 <ferror@plt+0x22b14>
  425470:	ldr	w1, [x0, #48]
  425474:	ldr	x0, [x0, #40]
  425478:	cmp	w1, #0x2
  42547c:	b.ne	425484 <ferror@plt+0x22b14>  // b.any
  425480:	ldr	x0, [x0]
  425484:	ret
  425488:	stp	x29, x30, [sp, #-32]!
  42548c:	mov	x29, sp
  425490:	str	x19, [sp, #16]
  425494:	mov	x19, x1
  425498:	bl	41fa48 <ferror@plt+0x1d0d8>
  42549c:	strh	wzr, [x0, #6]
  4254a0:	mov	w1, #0x53                  	// #83
  4254a4:	strb	w1, [x0, #4]
  4254a8:	str	x19, [x0, #8]
  4254ac:	ldr	x19, [sp, #16]
  4254b0:	ldp	x29, x30, [sp], #32
  4254b4:	ret
  4254b8:	stp	x29, x30, [sp, #-48]!
  4254bc:	mov	x29, sp
  4254c0:	stp	x19, x20, [sp, #16]
  4254c4:	mov	x20, x0
  4254c8:	str	x21, [sp, #32]
  4254cc:	lsl	x21, x1, #3
  4254d0:	cbz	x2, 4254e4 <ferror@plt+0x22b74>
  4254d4:	mov	x19, x2
  4254d8:	lsl	x0, x1, #4
  4254dc:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  4254e0:	str	x0, [x19]
  4254e4:	mov	x1, x21
  4254e8:	mov	x0, x20
  4254ec:	ldp	x19, x20, [sp, #16]
  4254f0:	ldr	x21, [sp, #32]
  4254f4:	ldp	x29, x30, [sp], #48
  4254f8:	b	4204e0 <ferror@plt+0x1db70>
  4254fc:	stp	x29, x30, [sp, #-32]!
  425500:	add	x1, x1, x2
  425504:	mov	x29, sp
  425508:	ldr	x4, [x0, #56]
  42550c:	ldr	x3, [x4, #24]
  425510:	ldr	x4, [x4, #16]
  425514:	str	x19, [sp, #16]
  425518:	mov	x19, x0
  42551c:	sub	x3, x3, x4
  425520:	cmp	x3, x1
  425524:	b.cs	425530 <ferror@plt+0x22bc0>  // b.hs, b.nlast
  425528:	add	x1, x0, #0x38
  42552c:	bl	42068c <ferror@plt+0x1dd1c>
  425530:	ldr	x0, [x19, #56]
  425534:	ldr	x19, [sp, #16]
  425538:	ldp	x29, x30, [sp], #32
  42553c:	ldr	x0, [x0, #16]
  425540:	ret
  425544:	ldr	w1, [x0, #4]
  425548:	tst	w1, #0xfffffffd
  42554c:	b.ne	425570 <ferror@plt+0x22c00>  // b.any
  425550:	ldr	x1, [x0, #8]
  425554:	add	x1, x1, #0x8
  425558:	str	x1, [x0, #8]
  42555c:	ldrb	w1, [x0]
  425560:	cbz	w1, 425570 <ferror@plt+0x22c00>
  425564:	ldr	x1, [x0, #16]
  425568:	add	x1, x1, #0x4
  42556c:	str	x1, [x0, #16]
  425570:	ret
  425574:	stp	x29, x30, [sp, #-32]!
  425578:	mov	x29, sp
  42557c:	str	x19, [sp, #16]
  425580:	mov	x19, x0
  425584:	ldr	x0, [x0]
  425588:	ldr	x0, [x0]
  42558c:	cbnz	x0, 4255b4 <ferror@plt+0x22c44>
  425590:	mov	x0, #0x38                  	// #56
  425594:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  425598:	ldr	x1, [x19]
  42559c:	stp	xzr, xzr, [x0]
  4255a0:	str	x1, [x0, #8]
  4255a4:	stp	xzr, xzr, [x0, #16]
  4255a8:	stp	xzr, xzr, [x0, #32]
  4255ac:	str	xzr, [x0, #48]
  4255b0:	str	x0, [x1]
  4255b4:	str	x0, [x19]
  4255b8:	ldr	x19, [sp, #16]
  4255bc:	ldp	x29, x30, [sp], #32
  4255c0:	ret
  4255c4:	stp	x29, x30, [sp, #-64]!
  4255c8:	mov	x6, x0
  4255cc:	mov	x29, sp
  4255d0:	stp	x19, x20, [sp, #16]
  4255d4:	stp	x21, x22, [sp, #32]
  4255d8:	mov	x22, x4
  4255dc:	mov	w21, w5
  4255e0:	stp	x23, x24, [sp, #48]
  4255e4:	mov	x24, x2
  4255e8:	mov	x23, x3
  4255ec:	cbnz	x1, 425644 <ferror@plt+0x22cd4>
  4255f0:	ldr	x0, [x0, #136]
  4255f4:	bl	42546c <ferror@plt+0x22afc>
  4255f8:	mov	x20, x0
  4255fc:	add	x0, x6, #0x88
  425600:	bl	425574 <ferror@plt+0x22c04>
  425604:	mov	x19, x0
  425608:	mov	w0, #0x2                   	// #2
  42560c:	add	x21, x22, w21, uxtw #3
  425610:	str	x24, [x19, #32]
  425614:	str	w0, [x19, #48]
  425618:	mov	x0, #0x18                  	// #24
  42561c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  425620:	stp	x20, x23, [x0]
  425624:	str	x23, [x0, #16]
  425628:	ldp	x23, x24, [sp, #48]
  42562c:	stp	x22, x21, [x19, #16]
  425630:	str	x0, [x19, #40]
  425634:	ldp	x19, x20, [sp, #16]
  425638:	ldp	x21, x22, [sp, #32]
  42563c:	ldp	x29, x30, [sp], #64
  425640:	ret
  425644:	mov	x20, x1
  425648:	b	4255fc <ferror@plt+0x22c8c>
  42564c:	stp	x29, x30, [sp, #-32]!
  425650:	mov	x29, sp
  425654:	stp	x19, x20, [sp, #16]
  425658:	mov	x19, x1
  42565c:	mov	x20, x2
  425660:	bl	41fa48 <ferror@plt+0x1d0d8>
  425664:	ldr	x1, [x19]
  425668:	ldrb	w1, [x1, #4]
  42566c:	strb	w1, [x0, #4]
  425670:	ldr	x1, [x19]
  425674:	ldp	x2, x3, [x1, #8]
  425678:	stp	x2, x3, [x0, #8]
  42567c:	ldrh	w2, [x20]
  425680:	ldr	x1, [x19]
  425684:	tbz	w2, #3, 4256a4 <ferror@plt+0x22d34>
  425688:	ldrh	w2, [x1, #6]
  42568c:	orr	w2, w2, #0x8
  425690:	strh	w2, [x0, #6]
  425694:	str	x0, [x19]
  425698:	ldp	x19, x20, [sp, #16]
  42569c:	ldp	x29, x30, [sp], #32
  4256a0:	ret
  4256a4:	ldrh	w2, [x1, #6]
  4256a8:	and	w2, w2, #0xfffffff7
  4256ac:	and	w2, w2, #0xffff
  4256b0:	b	425690 <ferror@plt+0x22d20>
  4256b4:	stp	x29, x30, [sp, #-64]!
  4256b8:	mov	x29, sp
  4256bc:	stp	x19, x20, [sp, #16]
  4256c0:	ldr	x19, [x0, #16]
  4256c4:	str	x23, [sp, #48]
  4256c8:	mov	x23, x2
  4256cc:	mov	w2, w3
  4256d0:	mov	w3, w4
  4256d4:	stp	x21, x22, [sp, #32]
  4256d8:	mov	x21, x0
  4256dc:	ldr	x4, [x0, #24]
  4256e0:	cmp	x19, x4
  4256e4:	b.ls	425700 <ferror@plt+0x22d90>  // b.plast
  4256e8:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  4256ec:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  4256f0:	add	x2, x2, #0x9d8
  4256f4:	add	x0, x0, #0x9ee
  4256f8:	mov	w1, #0x953                 	// #2387
  4256fc:	bl	402980 <ferror@plt+0x10>
  425700:	mov	x22, x1
  425704:	cbz	x1, 425730 <ferror@plt+0x22dc0>
  425708:	ldr	x20, [x21, #8]
  42570c:	mov	x0, x5
  425710:	sub	x20, x19, x20
  425714:	ubfx	x20, x20, #3, #32
  425718:	lsl	x20, x20, #2
  42571c:	cbz	x5, 42572c <ferror@plt+0x22dbc>
  425720:	mov	w1, w6
  425724:	bl	423318 <ferror@plt+0x209a8>
  425728:	mov	w2, w0
  42572c:	str	w2, [x22, x20]
  425730:	mov	x0, x19
  425734:	ldp	x19, x20, [sp, #16]
  425738:	str	x23, [x0], #8
  42573c:	ldr	x23, [sp, #48]
  425740:	str	x0, [x21, #16]
  425744:	ldp	x21, x22, [sp, #32]
  425748:	ldp	x29, x30, [sp], #64
  42574c:	ret
  425750:	ldrb	w2, [x0, #19]
  425754:	mov	x1, x0
  425758:	ldr	w0, [x0, #12]
  42575c:	tbz	w2, #6, 425780 <ferror@plt+0x22e10>
  425760:	mov	x4, #0x18                  	// #24
  425764:	sub	w3, w0, #0x1
  425768:	cbz	w0, 425780 <ferror@plt+0x22e10>
  42576c:	mov	w2, w3
  425770:	madd	x2, x2, x4, x1
  425774:	ldrb	w2, [x2, #28]
  425778:	cmp	w2, #0x26
  42577c:	b.eq	425784 <ferror@plt+0x22e14>  // b.none
  425780:	ret
  425784:	mov	w0, w3
  425788:	b	425764 <ferror@plt+0x22df4>
  42578c:	cbz	x1, 4257b0 <ferror@plt+0x22e40>
  425790:	ldr	x2, [x0, #16]
  425794:	ldr	x0, [x0, #8]
  425798:	cmp	x2, x0
  42579c:	b.eq	4257b0 <ferror@plt+0x22e40>  // b.none
  4257a0:	sub	x2, x2, #0x8
  4257a4:	cmp	x1, x2
  4257a8:	cset	w0, eq  // eq = none
  4257ac:	ret
  4257b0:	mov	w0, #0x0                   	// #0
  4257b4:	b	4257ac <ferror@plt+0x22e3c>
  4257b8:	stp	x29, x30, [sp, #-48]!
  4257bc:	mov	x29, sp
  4257c0:	stp	x19, x20, [sp, #16]
  4257c4:	mov	x20, x0
  4257c8:	ldrb	w0, [x1, #18]
  4257cc:	str	x21, [sp, #32]
  4257d0:	and	w0, w0, #0x3
  4257d4:	cmp	w0, #0x2
  4257d8:	b.ne	425820 <ferror@plt+0x22eb0>  // b.any
  4257dc:	ldr	x21, [x1, #24]
  4257e0:	mov	x19, x1
  4257e4:	ldrb	w0, [x21, #19]
  4257e8:	tbnz	w0, #5, 425820 <ferror@plt+0x22eb0>
  4257ec:	ldr	w1, [x21, #8]
  4257f0:	ldr	x0, [x20, #40]
  4257f4:	bl	423714 <ferror@plt+0x20da4>
  4257f8:	ldr	w0, [x0, #20]
  4257fc:	cbnz	w0, 425820 <ferror@plt+0x22eb0>
  425800:	ldr	w2, [x21, #8]
  425804:	adrp	x4, 453000 <_obstack_memory_used@@Base+0x19198>
  425808:	ldr	x5, [x19]
  42580c:	add	x4, x4, #0xa03
  425810:	mov	x0, x20
  425814:	mov	w3, #0x0                   	// #0
  425818:	mov	w1, #0xe                   	// #14
  42581c:	bl	41966c <ferror@plt+0x16cfc>
  425820:	mov	w0, #0x1                   	// #1
  425824:	ldp	x19, x20, [sp, #16]
  425828:	ldr	x21, [sp, #32]
  42582c:	ldp	x29, x30, [sp], #48
  425830:	ret
  425834:	mov	w2, w2
  425838:	mov	x4, #0x0                   	// #0
  42583c:	mov	w5, #0x5c                  	// #92
  425840:	cmp	x4, x2
  425844:	b.eq	425878 <ferror@plt+0x22f08>  // b.none
  425848:	ldrb	w3, [x1, x4]
  42584c:	cmp	w3, #0x22
  425850:	b.eq	425868 <ferror@plt+0x22ef8>  // b.none
  425854:	cmp	w3, #0x5c
  425858:	b.eq	425868 <ferror@plt+0x22ef8>  // b.none
  42585c:	cmp	w3, #0xa
  425860:	b.ne	42586c <ferror@plt+0x22efc>  // b.any
  425864:	mov	w3, #0x6e                  	// #110
  425868:	strb	w5, [x0], #1
  42586c:	add	x4, x4, #0x1
  425870:	strb	w3, [x0], #1
  425874:	b	425840 <ferror@plt+0x22ed0>
  425878:	ret
  42587c:	stp	x29, x30, [sp, #-80]!
  425880:	mov	x29, sp
  425884:	stp	x19, x20, [sp, #16]
  425888:	mov	x19, x0
  42588c:	ldr	w0, [x1, #24]
  425890:	stp	x21, x22, [sp, #32]
  425894:	mov	x21, x1
  425898:	cmp	w0, #0xa
  42589c:	stp	x23, x24, [sp, #48]
  4258a0:	b.hi	4258c0 <ferror@plt+0x22f50>  // b.pmore
  4258a4:	mov	w1, w2
  4258a8:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  4258ac:	add	x2, x2, #0x1e0
  4258b0:	ldrh	w2, [x2, w0, uxtw #1]
  4258b4:	adr	x3, 4258c0 <ferror@plt+0x22f50>
  4258b8:	add	x2, x3, w2, sxth #2
  4258bc:	br	x2
  4258c0:	ldr	x3, [x21]
  4258c4:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  4258c8:	mov	x0, x19
  4258cc:	add	x2, x2, #0xa1a
  4258d0:	mov	w1, #0x4                   	// #4
  4258d4:	bl	419440 <ferror@plt+0x16ad0>
  4258d8:	mov	w20, #0x1                   	// #1
  4258dc:	b	425a4c <ferror@plt+0x230dc>
  4258e0:	ldrb	w0, [x19, #1134]
  4258e4:	cbz	w0, 425900 <ferror@plt+0x22f90>
  4258e8:	ldr	x3, [x21]
  4258ec:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  4258f0:	mov	x0, x19
  4258f4:	add	x2, x2, #0xa36
  4258f8:	mov	w1, #0x14                  	// #20
  4258fc:	bl	4194ac <ferror@plt+0x16b3c>
  425900:	mov	x0, x19
  425904:	bl	41e730 <ferror@plt+0x1bdc0>
  425908:	ldr	x1, [x0, #88]
  42590c:	mov	x20, x0
  425910:	cbnz	x1, 425968 <ferror@plt+0x22ff8>
  425914:	bl	41e738 <ferror@plt+0x1bdc8>
  425918:	cbz	x0, 425968 <ferror@plt+0x22ff8>
  42591c:	bl	41e6b4 <ferror@plt+0x1bd44>
  425920:	cbz	x0, 425974 <ferror@plt+0x23004>
  425924:	add	x0, x0, #0x58
  425928:	bl	402440 <localtime@plt>
  42592c:	cbz	x0, 425974 <ferror@plt+0x23004>
  425930:	bl	402820 <asctime@plt>
  425934:	mov	x23, x0
  425938:	bl	402330 <strlen@plt>
  42593c:	add	x1, x0, #0x2
  425940:	mov	x22, x0
  425944:	mov	x0, x19
  425948:	bl	420710 <ferror@plt+0x1dda0>
  42594c:	mov	x21, x0
  425950:	mov	w24, #0x22                  	// #34
  425954:	strb	w24, [x0], #1
  425958:	mov	x1, x23
  42595c:	bl	4027b0 <strcpy@plt>
  425960:	strb	w24, [x21, x22]
  425964:	str	x21, [x20, #88]
  425968:	ldr	x21, [x20, #88]
  42596c:	cbnz	x21, 425a00 <ferror@plt+0x23090>
  425970:	b	4258d8 <ferror@plt+0x22f68>
  425974:	mov	x0, x19
  425978:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  42597c:	mov	w1, #0x0                   	// #0
  425980:	add	x2, x2, #0xa63
  425984:	bl	4198e4 <ferror@plt+0x16f74>
  425988:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  42598c:	add	x0, x0, #0xa86
  425990:	str	x0, [x20, #88]
  425994:	b	425968 <ferror@plt+0x22ff8>
  425998:	cmp	w0, #0x2
  42599c:	b.ne	425a18 <ferror@plt+0x230a8>  // b.any
  4259a0:	ldr	x0, [x19, #40]
  4259a4:	ldr	w1, [x0, #60]
  4259a8:	bl	423c18 <ferror@plt+0x212a8>
  4259ac:	mov	x20, x0
  4259b0:	ldr	x1, [x19, #1080]
  4259b4:	cbz	x1, 4259c4 <ferror@plt+0x23054>
  4259b8:	mov	x0, x20
  4259bc:	blr	x1
  4259c0:	mov	x20, x0
  4259c4:	mov	x0, x20
  4259c8:	bl	402330 <strlen@plt>
  4259cc:	lsl	w1, w0, #1
  4259d0:	mov	x22, x0
  4259d4:	add	w1, w1, #0x3
  4259d8:	mov	x0, x19
  4259dc:	bl	420710 <ferror@plt+0x1dda0>
  4259e0:	mov	x21, x0
  4259e4:	mov	w1, #0x22                  	// #34
  4259e8:	strb	w1, [x0], #1
  4259ec:	mov	w2, w22
  4259f0:	mov	x1, x20
  4259f4:	bl	425834 <ferror@plt+0x22ec4>
  4259f8:	mov	w1, #0x22                  	// #34
  4259fc:	strh	w1, [x0]
  425a00:	mov	x0, x21
  425a04:	ldp	x19, x20, [sp, #16]
  425a08:	ldp	x21, x22, [sp, #32]
  425a0c:	ldp	x23, x24, [sp, #48]
  425a10:	ldp	x29, x30, [sp], #80
  425a14:	ret
  425a18:	ldr	x0, [x19, #288]
  425a1c:	bl	41e6ac <ferror@plt+0x1bd3c>
  425a20:	mov	x20, x0
  425a24:	cbnz	x0, 4259b0 <ferror@plt+0x23040>
  425a28:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  425a2c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  425a30:	add	x2, x2, #0xaa1
  425a34:	add	x0, x0, #0x9ee
  425a38:	mov	w1, #0x1c5                 	// #453
  425a3c:	bl	402980 <ferror@plt+0x10>
  425a40:	ldr	x0, [x19, #40]
  425a44:	ldr	w20, [x0, #48]
  425a48:	sub	w20, w20, #0x1
  425a4c:	mov	x0, x19
  425a50:	mov	x1, #0x15                  	// #21
  425a54:	bl	420710 <ferror@plt+0x1dda0>
  425a58:	mov	x21, x0
  425a5c:	mov	w2, w20
  425a60:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  425a64:	add	x1, x1, #0x445
  425a68:	bl	4023d0 <sprintf@plt>
  425a6c:	b	425a00 <ferror@plt+0x23090>
  425a70:	ldrb	w2, [x19, #1160]
  425a74:	ldr	x0, [x19, #40]
  425a78:	cbz	w2, 425a90 <ferror@plt+0x23120>
  425a7c:	ldr	w1, [x0, #60]
  425a80:	ldr	x0, [x19, #40]
  425a84:	bl	423bb8 <ferror@plt+0x21248>
  425a88:	mov	w20, w0
  425a8c:	b	425a4c <ferror@plt+0x230dc>
  425a90:	mov	x3, #0x0                   	// #0
  425a94:	mov	w2, #0x0                   	// #0
  425a98:	bl	423cf4 <ferror@plt+0x21384>
  425a9c:	mov	w1, w0
  425aa0:	b	425a80 <ferror@plt+0x23110>
  425aa4:	ldr	x0, [x19]
  425aa8:	cbz	x0, 4258d8 <ferror@plt+0x22f68>
  425aac:	ldrb	w0, [x0, #106]
  425ab0:	cmp	w0, #0x0
  425ab4:	cset	w20, eq  // eq = none
  425ab8:	b	425a4c <ferror@plt+0x230dc>
  425abc:	ldrb	w0, [x19, #1134]
  425ac0:	cbz	w0, 425adc <ferror@plt+0x2316c>
  425ac4:	ldr	x3, [x21]
  425ac8:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  425acc:	mov	x0, x19
  425ad0:	add	x2, x2, #0xa36
  425ad4:	mov	w1, #0x14                  	// #20
  425ad8:	bl	4194ac <ferror@plt+0x16b3c>
  425adc:	ldr	x0, [x19, #640]
  425ae0:	cbnz	x0, 425b78 <ferror@plt+0x23208>
  425ae4:	ldr	x0, [x19, #656]
  425ae8:	cmn	x0, #0x2
  425aec:	b.ne	425b04 <ferror@plt+0x23194>  // b.any
  425af0:	ldr	x1, [x19, #1056]
  425af4:	cbz	x1, 425b8c <ferror@plt+0x2321c>
  425af8:	mov	x0, x19
  425afc:	blr	x1
  425b00:	str	x0, [x19, #656]
  425b04:	ldr	x0, [x19, #656]
  425b08:	tbnz	x0, #63, 425b8c <ferror@plt+0x2321c>
  425b0c:	add	x0, x19, #0x290
  425b10:	bl	402580 <gmtime@plt>
  425b14:	mov	x20, x0
  425b18:	cbz	x0, 425bc0 <ferror@plt+0x23250>
  425b1c:	mov	x1, #0xe                   	// #14
  425b20:	mov	x0, x19
  425b24:	bl	420710 <ferror@plt+0x1dda0>
  425b28:	ldrsw	x2, [x20, #16]
  425b2c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  425b30:	add	x1, x1, #0x1f8
  425b34:	ldr	w3, [x20, #12]
  425b38:	ldr	w4, [x20, #20]
  425b3c:	str	x0, [x19, #640]
  425b40:	ldr	x2, [x1, x2, lsl #3]
  425b44:	add	w4, w4, #0x76c
  425b48:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  425b4c:	add	x1, x1, #0xab9
  425b50:	bl	4023d0 <sprintf@plt>
  425b54:	mov	x1, #0xb                   	// #11
  425b58:	mov	x0, x19
  425b5c:	bl	420710 <ferror@plt+0x1dda0>
  425b60:	ldp	w4, w3, [x20]
  425b64:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  425b68:	ldr	w2, [x20, #8]
  425b6c:	add	x1, x1, #0xac6
  425b70:	str	x0, [x19, #648]
  425b74:	bl	4023d0 <sprintf@plt>
  425b78:	ldr	w0, [x21, #24]
  425b7c:	cmp	w0, #0x1
  425b80:	b.ne	425bf0 <ferror@plt+0x23280>  // b.any
  425b84:	ldr	x21, [x19, #640]
  425b88:	b	42596c <ferror@plt+0x22ffc>
  425b8c:	bl	4028c0 <__errno_location@plt>
  425b90:	mov	x20, x0
  425b94:	mov	x0, #0x0                   	// #0
  425b98:	str	wzr, [x20]
  425b9c:	bl	4024a0 <time@plt>
  425ba0:	str	x0, [sp, #72]
  425ba4:	cmn	x0, #0x1
  425ba8:	b.ne	425bb4 <ferror@plt+0x23244>  // b.any
  425bac:	ldr	w0, [x20]
  425bb0:	cbnz	w0, 425bc0 <ferror@plt+0x23250>
  425bb4:	add	x0, sp, #0x48
  425bb8:	bl	402440 <localtime@plt>
  425bbc:	b	425b14 <ferror@plt+0x231a4>
  425bc0:	mov	x0, x19
  425bc4:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  425bc8:	mov	w1, #0x0                   	// #0
  425bcc:	add	x2, x2, #0xad7
  425bd0:	bl	4198e4 <ferror@plt+0x16f74>
  425bd4:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  425bd8:	add	x0, x0, #0xaf9
  425bdc:	str	x0, [x19, #640]
  425be0:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  425be4:	add	x0, x0, #0xb07
  425be8:	str	x0, [x19, #648]
  425bec:	b	425b78 <ferror@plt+0x23208>
  425bf0:	ldr	x21, [x19, #648]
  425bf4:	b	42596c <ferror@plt+0x22ffc>
  425bf8:	ldrb	w0, [x19, #1244]
  425bfc:	cbz	w0, 425c1c <ferror@plt+0x232ac>
  425c00:	ldrb	w0, [x19, #16]
  425c04:	cbz	w0, 425c1c <ferror@plt+0x232ac>
  425c08:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  425c0c:	mov	x0, x19
  425c10:	add	x2, x2, #0xb12
  425c14:	mov	w1, #0x3                   	// #3
  425c18:	bl	419440 <ferror@plt+0x16ad0>
  425c1c:	ldr	w20, [x19, #1376]
  425c20:	add	w0, w20, #0x1
  425c24:	str	w0, [x19, #1376]
  425c28:	b	425a4c <ferror@plt+0x230dc>
  425c2c:	ldr	x1, [x19, #1040]
  425c30:	mov	x0, x19
  425c34:	blr	x1
  425c38:	b	425a88 <ferror@plt+0x23118>
  425c3c:	ldrh	w4, [x1, #16]
  425c40:	cmp	w4, w3
  425c44:	b.eq	425d2c <ferror@plt+0x233bc>  // b.none
  425c48:	stp	x29, x30, [sp, #-48]!
  425c4c:	mov	x29, sp
  425c50:	stp	x19, x20, [sp, #16]
  425c54:	mov	x19, x0
  425c58:	mov	x20, x2
  425c5c:	str	x21, [sp, #32]
  425c60:	mov	x21, x1
  425c64:	b.ls	425d10 <ferror@plt+0x233a0>  // b.plast
  425c68:	add	w1, w3, #0x1
  425c6c:	cmp	w4, w1
  425c70:	b.ne	425cc8 <ferror@plt+0x23358>  // b.any
  425c74:	ldrb	w1, [x21, #19]
  425c78:	tbz	w1, #3, 425cc8 <ferror@plt+0x23358>
  425c7c:	ldrb	w2, [x0, #1154]
  425c80:	cbz	w2, 425ca8 <ferror@plt+0x23338>
  425c84:	tbnz	w1, #4, 425ca8 <ferror@plt+0x23338>
  425c88:	ldrb	w1, [x0, #1167]
  425c8c:	cbnz	w1, 425ca8 <ferror@plt+0x23338>
  425c90:	ldrb	w1, [x0, #1120]
  425c94:	cbz	w1, 425cbc <ferror@plt+0x2334c>
  425c98:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  425c9c:	add	x2, x2, #0xb4f
  425ca0:	mov	w1, #0x2                   	// #2
  425ca4:	bl	419440 <ferror@plt+0x16ad0>
  425ca8:	mov	w0, #0x1                   	// #1
  425cac:	ldp	x19, x20, [sp, #16]
  425cb0:	ldr	x21, [sp, #32]
  425cb4:	ldp	x29, x30, [sp], #48
  425cb8:	ret
  425cbc:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  425cc0:	add	x2, x2, #0xb9a
  425cc4:	b	425ca0 <ferror@plt+0x23330>
  425cc8:	mov	w5, w3
  425ccc:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  425cd0:	ldr	x3, [x20]
  425cd4:	add	x2, x2, #0xbe3
  425cd8:	mov	x0, x19
  425cdc:	mov	w1, #0x3                   	// #3
  425ce0:	bl	419440 <ferror@plt+0x16ad0>
  425ce4:	ldr	w2, [x21, #8]
  425ce8:	cmp	w2, #0x2
  425cec:	b.ls	425d08 <ferror@plt+0x23398>  // b.plast
  425cf0:	ldr	x4, [x20]
  425cf4:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x19198>
  425cf8:	mov	x0, x19
  425cfc:	add	x3, x3, #0xc49
  425d00:	mov	w1, #0x5                   	// #5
  425d04:	bl	4197c8 <ferror@plt+0x16e58>
  425d08:	mov	w0, #0x0                   	// #0
  425d0c:	b	425cac <ferror@plt+0x2333c>
  425d10:	mov	w5, w4
  425d14:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  425d18:	mov	w4, w3
  425d1c:	add	x2, x2, #0xc17
  425d20:	mov	w1, #0x3                   	// #3
  425d24:	ldr	x3, [x20]
  425d28:	b	425ce0 <ferror@plt+0x23370>
  425d2c:	mov	w0, #0x1                   	// #1
  425d30:	ret
  425d34:	stp	x29, x30, [sp, #-48]!
  425d38:	mov	x4, x0
  425d3c:	mov	x29, sp
  425d40:	stp	x19, x20, [sp, #16]
  425d44:	mov	w20, w3
  425d48:	str	x21, [sp, #32]
  425d4c:	mov	x21, x2
  425d50:	cbnz	x1, 425d90 <ferror@plt+0x23420>
  425d54:	ldr	x0, [x0, #136]
  425d58:	bl	42546c <ferror@plt+0x22afc>
  425d5c:	mov	x19, x0
  425d60:	add	x0, x4, #0x88
  425d64:	bl	425574 <ferror@plt+0x22c04>
  425d68:	mov	w2, #0x18                  	// #24
  425d6c:	mov	w1, #0x1                   	// #1
  425d70:	stp	xzr, x19, [x0, #32]
  425d74:	umaddl	x20, w20, w2, x21
  425d78:	stp	x21, x20, [x0, #16]
  425d7c:	str	w1, [x0, #48]
  425d80:	ldp	x19, x20, [sp, #16]
  425d84:	ldr	x21, [sp, #32]
  425d88:	ldp	x29, x30, [sp], #48
  425d8c:	ret
  425d90:	mov	x19, x1
  425d94:	b	425d60 <ferror@plt+0x233f0>
  425d98:	stp	x29, x30, [sp, #-80]!
  425d9c:	mov	x29, sp
  425da0:	stp	x19, x20, [sp, #16]
  425da4:	mov	x19, x0
  425da8:	stp	x21, x22, [sp, #32]
  425dac:	str	x23, [sp, #48]
  425db0:	mov	w23, w2
  425db4:	mov	w2, w3
  425db8:	ldr	w3, [x1, #24]
  425dbc:	cmp	w3, #0x7
  425dc0:	b.ne	425dec <ferror@plt+0x2347c>  // b.any
  425dc4:	ldrb	w1, [x0, #16]
  425dc8:	cbnz	w1, 425f34 <ferror@plt+0x235c4>
  425dcc:	mov	w1, w23
  425dd0:	bl	418dec <ferror@plt+0x1647c>
  425dd4:	mov	sp, x29
  425dd8:	ldp	x19, x20, [sp, #16]
  425ddc:	ldp	x21, x22, [sp, #32]
  425de0:	ldr	x23, [sp, #48]
  425de4:	ldp	x29, x30, [sp], #80
  425de8:	ret
  425dec:	mov	x20, x1
  425df0:	bl	42587c <ferror@plt+0x22f0c>
  425df4:	mov	x22, x0
  425df8:	bl	402330 <strlen@plt>
  425dfc:	mov	x21, x0
  425e00:	add	x0, x0, #0x10
  425e04:	and	x0, x0, #0xfffffffffffffff0
  425e08:	mov	x2, x21
  425e0c:	sub	sp, sp, x0
  425e10:	mov	x1, x22
  425e14:	mov	x4, sp
  425e18:	mov	x0, x4
  425e1c:	bl	4022e0 <memcpy@plt>
  425e20:	mov	x4, x0
  425e24:	mov	x2, x21
  425e28:	mov	x1, x4
  425e2c:	mov	w0, #0xa                   	// #10
  425e30:	mov	w3, #0x1                   	// #1
  425e34:	strb	w0, [x4, x21]
  425e38:	mov	x0, x19
  425e3c:	bl	4186b8 <ferror@plt+0x15d48>
  425e40:	mov	x0, x19
  425e44:	bl	41f118 <ferror@plt+0x1c7a8>
  425e48:	mov	x0, x19
  425e4c:	bl	41fa48 <ferror@plt+0x1d0d8>
  425e50:	str	x0, [x19, #448]
  425e54:	mov	x0, x19
  425e58:	bl	421448 <ferror@plt+0x1ead8>
  425e5c:	mov	x21, x0
  425e60:	ldr	x0, [x19, #136]
  425e64:	ldr	w0, [x0, #48]
  425e68:	str	w23, [x21]
  425e6c:	cmp	w0, #0x2
  425e70:	b.ne	425f1c <ferror@plt+0x235ac>  // b.any
  425e74:	add	x2, x29, #0x48
  425e78:	mov	x1, #0x1                   	// #1
  425e7c:	mov	x0, x19
  425e80:	str	xzr, [x29, #72]
  425e84:	bl	4254b8 <ferror@plt+0x22b48>
  425e88:	mov	x22, x0
  425e8c:	ldr	x0, [x19, #40]
  425e90:	mov	w2, w23
  425e94:	mov	x1, x20
  425e98:	mov	w3, #0x1                   	// #1
  425e9c:	bl	423278 <ferror@plt+0x20908>
  425ea0:	mov	x5, x0
  425ea4:	ldr	x1, [x19, #40]
  425ea8:	mov	x2, x21
  425eac:	mov	x0, x22
  425eb0:	mov	w6, #0x0                   	// #0
  425eb4:	ldr	w4, [x1, #112]
  425eb8:	ldr	x1, [x29, #72]
  425ebc:	mov	w3, w4
  425ec0:	bl	4256b4 <ferror@plt+0x22d44>
  425ec4:	ldr	x4, [x22, #8]
  425ec8:	mov	x2, x22
  425ecc:	ldr	x3, [x29, #72]
  425ed0:	mov	x1, x20
  425ed4:	mov	x0, x19
  425ed8:	mov	w5, #0x1                   	// #1
  425edc:	bl	4255c4 <ferror@plt+0x22c54>
  425ee0:	ldr	x0, [x19]
  425ee4:	ldr	x1, [x0]
  425ee8:	ldr	x0, [x0, #32]
  425eec:	cmp	x1, x0
  425ef0:	b.eq	425f0c <ferror@plt+0x2359c>  // b.none
  425ef4:	ldr	x3, [x20]
  425ef8:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  425efc:	mov	x0, x19
  425f00:	add	x2, x2, #0xa1a
  425f04:	mov	w1, #0x4                   	// #4
  425f08:	bl	419440 <ferror@plt+0x16ad0>
  425f0c:	mov	x0, x19
  425f10:	bl	4187a8 <ferror@plt+0x15e38>
  425f14:	mov	w0, #0x1                   	// #1
  425f18:	b	425dd4 <ferror@plt+0x23464>
  425f1c:	mov	x2, x21
  425f20:	mov	x0, x19
  425f24:	mov	w3, #0x1                   	// #1
  425f28:	mov	x1, #0x0                   	// #0
  425f2c:	bl	425d34 <ferror@plt+0x233c4>
  425f30:	b	425ee0 <ferror@plt+0x23570>
  425f34:	mov	w0, #0x0                   	// #0
  425f38:	b	425dd4 <ferror@plt+0x23464>
  425f3c:	stp	x29, x30, [sp, #-48]!
  425f40:	add	x0, x0, #0x88
  425f44:	mov	x29, sp
  425f48:	stp	x19, x20, [sp, #16]
  425f4c:	mov	x20, x1
  425f50:	mov	x19, x2
  425f54:	str	x21, [sp, #32]
  425f58:	mov	x21, x3
  425f5c:	bl	425574 <ferror@plt+0x22c04>
  425f60:	str	x19, [x0, #16]
  425f64:	mov	w1, #0x1                   	// #1
  425f68:	add	x19, x19, x21
  425f6c:	stp	xzr, x20, [x0, #32]
  425f70:	str	w1, [x0, #48]
  425f74:	ldr	x21, [sp, #32]
  425f78:	str	x19, [x0, #24]
  425f7c:	ldrh	w0, [x20, #18]
  425f80:	orr	w0, w0, #0x40
  425f84:	strh	w0, [x20, #18]
  425f88:	ldp	x19, x20, [sp, #16]
  425f8c:	ldp	x29, x30, [sp], #48
  425f90:	ret
  425f94:	stp	x29, x30, [sp, #-48]!
  425f98:	mov	x29, sp
  425f9c:	stp	x19, x20, [sp, #16]
  425fa0:	ldr	x19, [x0, #136]
  425fa4:	stp	x21, x22, [sp, #32]
  425fa8:	mov	x21, x0
  425fac:	add	x0, x0, #0x50
  425fb0:	cmp	x19, x0
  425fb4:	b.ne	425fd0 <ferror@plt+0x23660>  // b.any
  425fb8:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  425fbc:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  425fc0:	add	x2, x2, #0xc61
  425fc4:	add	x0, x0, #0x9ee
  425fc8:	mov	w1, #0x9eb                 	// #2539
  425fcc:	bl	402980 <ferror@plt+0x10>
  425fd0:	ldr	x20, [x19, #40]
  425fd4:	cbz	x20, 426050 <ferror@plt+0x236e0>
  425fd8:	ldr	w0, [x19, #48]
  425fdc:	cmp	w0, #0x2
  425fe0:	b.ne	426014 <ferror@plt+0x236a4>  // b.any
  425fe4:	ldr	x0, [x19, #32]
  425fe8:	ldr	x22, [x20]
  425fec:	cbz	x0, 425ffc <ferror@plt+0x2368c>
  425ff0:	ldr	x0, [x20, #8]
  425ff4:	cbz	x0, 425ffc <ferror@plt+0x2368c>
  425ff8:	bl	402730 <free@plt>
  425ffc:	mov	x0, x20
  426000:	bl	402730 <free@plt>
  426004:	str	xzr, [x19, #40]
  426008:	mov	x20, #0x0                   	// #0
  42600c:	cbz	x22, 426038 <ferror@plt+0x236c8>
  426010:	mov	x20, x22
  426014:	ldr	x0, [x19, #8]
  426018:	bl	42546c <ferror@plt+0x22afc>
  42601c:	cmp	x20, x0
  426020:	b.eq	426038 <ferror@plt+0x236c8>  // b.none
  426024:	ldrh	w0, [x20, #18]
  426028:	ubfx	x1, x0, #2, #8
  42602c:	and	w1, w1, #0xffffffef
  426030:	bfi	w0, w1, #2, #8
  426034:	strh	w0, [x20, #18]
  426038:	ldr	x0, [x21, #184]
  42603c:	cmp	x0, x20
  426040:	b.ne	426050 <ferror@plt+0x236e0>  // b.any
  426044:	ldr	x0, [x19, #8]
  426048:	cbnz	x0, 426050 <ferror@plt+0x236e0>
  42604c:	str	xzr, [x21, #184]
  426050:	ldr	x0, [x19, #32]
  426054:	cbz	x0, 42605c <ferror@plt+0x236ec>
  426058:	bl	4206e0 <ferror@plt+0x1dd70>
  42605c:	ldr	x0, [x19, #8]
  426060:	str	x0, [x21, #136]
  426064:	ldp	x21, x22, [sp, #32]
  426068:	str	xzr, [x0]
  42606c:	mov	x0, x19
  426070:	ldp	x19, x20, [sp, #16]
  426074:	ldp	x29, x30, [sp], #48
  426078:	b	402730 <free@plt>
  42607c:	ldr	x1, [x0, #136]
  426080:	ldr	x0, [x1, #40]
  426084:	ldr	w1, [x1, #48]
  426088:	cmp	w1, #0x2
  42608c:	b.ne	426094 <ferror@plt+0x23724>  // b.any
  426090:	ldr	x0, [x0]
  426094:	cbz	x0, 4260ac <ferror@plt+0x2373c>
  426098:	ldr	x0, [x0, #24]
  42609c:	cbz	x0, 4260ac <ferror@plt+0x2373c>
  4260a0:	ldrb	w0, [x0, #19]
  4260a4:	ubfx	x0, x0, #4, #1
  4260a8:	ret
  4260ac:	mov	w0, #0x0                   	// #0
  4260b0:	b	4260a8 <ferror@plt+0x23738>
  4260b4:	ldr	w2, [x0, #496]
  4260b8:	add	w2, w2, w1
  4260bc:	str	w2, [x0, #496]
  4260c0:	sub	w1, w1, #0x1
  4260c4:	cmn	w1, #0x1
  4260c8:	b.eq	426100 <ferror@plt+0x23790>  // b.none
  4260cc:	ldr	x3, [x0, #488]
  4260d0:	ldr	x2, [x0, #448]
  4260d4:	ldr	x4, [x3, #16]
  4260d8:	sub	x2, x2, #0x18
  4260dc:	str	x2, [x0, #448]
  4260e0:	cmp	x2, x4
  4260e4:	b.ne	4260c0 <ferror@plt+0x23750>  // b.any
  4260e8:	ldr	x2, [x3, #8]
  4260ec:	cbz	x2, 4260c0 <ferror@plt+0x23750>
  4260f0:	str	x2, [x0, #488]
  4260f4:	ldr	x2, [x2, #24]
  4260f8:	str	x2, [x0, #448]
  4260fc:	b	4260c0 <ferror@plt+0x23750>
  426100:	ret
  426104:	ldr	x2, [x0, #136]
  426108:	ldr	x4, [x2, #8]
  42610c:	cbnz	x4, 426114 <ferror@plt+0x237a4>
  426110:	b	4260b4 <ferror@plt+0x23744>
  426114:	stp	x29, x30, [sp, #-16]!
  426118:	cmp	w1, #0x1
  42611c:	mov	x29, sp
  426120:	b.eq	42613c <ferror@plt+0x237cc>  // b.none
  426124:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  426128:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  42612c:	add	x2, x2, #0xc72
  426130:	add	x0, x0, #0x9ee
  426134:	mov	w1, #0xb8f                 	// #2959
  426138:	bl	402980 <ferror@plt+0x10>
  42613c:	ldr	w0, [x2, #48]
  426140:	cmp	w0, #0x1
  426144:	b.ne	42615c <ferror@plt+0x237ec>  // b.any
  426148:	ldr	x0, [x2, #16]
  42614c:	sub	x0, x0, #0x18
  426150:	str	x0, [x2, #16]
  426154:	ldp	x29, x30, [sp], #16
  426158:	ret
  42615c:	cbnz	w0, 42616c <ferror@plt+0x237fc>
  426160:	ldr	x0, [x2, #16]
  426164:	sub	x0, x0, #0x8
  426168:	b	426150 <ferror@plt+0x237e0>
  42616c:	cmp	w0, #0x2
  426170:	b.ne	4261b0 <ferror@plt+0x23840>  // b.any
  426174:	ldr	x0, [x2, #16]
  426178:	sub	x0, x0, #0x8
  42617c:	str	x0, [x2, #16]
  426180:	ldr	x0, [x2, #40]
  426184:	cbz	x0, 426198 <ferror@plt+0x23828>
  426188:	ldr	x1, [x0, #16]
  42618c:	sub	x1, x1, #0x4
  426190:	str	x1, [x0, #16]
  426194:	b	426154 <ferror@plt+0x237e4>
  426198:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  42619c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  4261a0:	add	x2, x2, #0xc72
  4261a4:	add	x0, x0, #0x9ee
  4261a8:	mov	w1, #0xb9e                 	// #2974
  4261ac:	bl	402980 <ferror@plt+0x10>
  4261b0:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  4261b4:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  4261b8:	add	x2, x2, #0xc72
  4261bc:	add	x0, x0, #0x9ee
  4261c0:	mov	w1, #0xba1                 	// #2977
  4261c4:	bl	402980 <ferror@plt+0x10>
  4261c8:	stp	x29, x30, [sp, #-80]!
  4261cc:	mov	x29, sp
  4261d0:	stp	x19, x20, [sp, #16]
  4261d4:	mov	x19, x0
  4261d8:	ldr	x0, [x2]
  4261dc:	stp	x21, x22, [sp, #32]
  4261e0:	mov	x21, x2
  4261e4:	mov	x22, x3
  4261e8:	stp	x23, x24, [sp, #48]
  4261ec:	mov	w23, w1
  4261f0:	stp	x25, x26, [sp, #64]
  4261f4:	bl	41fbec <ferror@plt+0x1d27c>
  4261f8:	mov	w20, w0
  4261fc:	mov	x0, x22
  426200:	bl	41fbec <ferror@plt+0x1d27c>
  426204:	add	w20, w20, w0
  426208:	mov	w3, #0x1                   	// #1
  42620c:	add	w20, w20, #0x1
  426210:	mov	x0, x19
  426214:	add	x20, x20, #0xf
  426218:	ldr	x1, [x21]
  42621c:	and	x20, x20, #0x1fffffff0
  426220:	sub	sp, sp, x20
  426224:	mov	x25, sp
  426228:	mov	x2, x25
  42622c:	bl	41fca4 <ferror@plt+0x1d334>
  426230:	mov	x24, x0
  426234:	ldr	x0, [x21]
  426238:	ldrb	w0, [x0, #4]
  42623c:	cmp	w0, #0x7
  426240:	b.ne	426350 <ferror@plt+0x239e0>  // b.any
  426244:	ldrb	w0, [x22, #4]
  426248:	mov	x2, x24
  42624c:	cbz	w0, 426258 <ferror@plt+0x238e8>
  426250:	mov	w0, #0x20                  	// #32
  426254:	strb	w0, [x2], #1
  426258:	ldrb	w0, [x22, #4]
  42625c:	cmp	w0, #0x53
  426260:	b.eq	426278 <ferror@plt+0x23908>  // b.none
  426264:	mov	x1, x22
  426268:	mov	x0, x19
  42626c:	mov	w3, #0x1                   	// #1
  426270:	bl	41fca4 <ferror@plt+0x1d334>
  426274:	mov	x2, x0
  426278:	mov	x1, x25
  42627c:	mov	w0, #0xa                   	// #10
  426280:	strb	w0, [x2]
  426284:	sub	x2, x2, x25
  426288:	mov	w3, #0x1                   	// #1
  42628c:	mov	x0, x19
  426290:	bl	4186b8 <ferror@plt+0x15d48>
  426294:	mov	x0, x19
  426298:	bl	41f118 <ferror@plt+0x1c7a8>
  42629c:	mov	x0, x19
  4262a0:	bl	41fa48 <ferror@plt+0x1d0d8>
  4262a4:	str	x0, [x19, #448]
  4262a8:	mov	x0, x19
  4262ac:	bl	421448 <ferror@plt+0x1ead8>
  4262b0:	mov	x20, x0
  4262b4:	ldr	x0, [x19]
  4262b8:	ldr	x1, [x0]
  4262bc:	ldr	x0, [x0, #32]
  4262c0:	cmp	x1, x0
  4262c4:	b.eq	426358 <ferror@plt+0x239e8>  // b.none
  4262c8:	ldr	w26, [x20]
  4262cc:	mov	x0, x19
  4262d0:	bl	4187a8 <ferror@plt+0x15e38>
  4262d4:	mov	x0, x19
  4262d8:	mov	w1, #0x1                   	// #1
  4262dc:	bl	426104 <ferror@plt+0x23794>
  4262e0:	strb	wzr, [x24]
  4262e4:	ldr	x0, [x21]
  4262e8:	ldp	x2, x3, [x0]
  4262ec:	stp	x2, x3, [x20]
  4262f0:	ldr	x0, [x0, #16]
  4262f4:	str	x0, [x20, #16]
  4262f8:	ldrh	w0, [x20, #6]
  4262fc:	str	x20, [x21]
  426300:	and	w0, w0, #0xfffffff7
  426304:	strh	w0, [x20, #6]
  426308:	ldr	w0, [x19, #1116]
  42630c:	str	w26, [x20]
  426310:	cmp	w0, #0x15
  426314:	b.eq	426348 <ferror@plt+0x239d8>  // b.none
  426318:	mov	x1, x22
  42631c:	mov	x0, x19
  426320:	bl	4212ac <ferror@plt+0x1e93c>
  426324:	mov	x6, x0
  426328:	adrp	x4, 453000 <_obstack_memory_used@@Base+0x19198>
  42632c:	mov	x5, x25
  426330:	add	x4, x4, #0xc85
  426334:	mov	w2, w23
  426338:	mov	x0, x19
  42633c:	mov	w3, #0x0                   	// #0
  426340:	mov	w1, #0x3                   	// #3
  426344:	bl	4195fc <ferror@plt+0x16c8c>
  426348:	mov	w0, #0x0                   	// #0
  42634c:	b	426368 <ferror@plt+0x239f8>
  426350:	mov	x2, x24
  426354:	b	426258 <ferror@plt+0x238e8>
  426358:	str	x20, [x21]
  42635c:	mov	x0, x19
  426360:	bl	4187a8 <ferror@plt+0x15e38>
  426364:	mov	w0, #0x1                   	// #1
  426368:	mov	sp, x29
  42636c:	ldp	x19, x20, [sp, #16]
  426370:	ldp	x21, x22, [sp, #32]
  426374:	ldp	x23, x24, [sp, #48]
  426378:	ldp	x25, x26, [sp, #64]
  42637c:	ldp	x29, x30, [sp], #80
  426380:	ret
  426384:	ldrb	w1, [x0, #18]
  426388:	str	xzr, [x0, #24]
  42638c:	and	w1, w1, #0xfffffffc
  426390:	strb	w1, [x0, #18]
  426394:	ldrh	w1, [x0, #18]
  426398:	ubfx	x2, x1, #2, #8
  42639c:	and	w2, w2, #0xffffffcf
  4263a0:	bfi	w1, w2, #2, #8
  4263a4:	strh	w1, [x0, #18]
  4263a8:	ret
  4263ac:	stp	x29, x30, [sp, #-64]!
  4263b0:	mov	x29, sp
  4263b4:	stp	x19, x20, [sp, #16]
  4263b8:	mov	w20, w1
  4263bc:	ldrb	w1, [x2, #18]
  4263c0:	stp	x21, x22, [sp, #32]
  4263c4:	mov	x19, x2
  4263c8:	and	w1, w1, #0x3
  4263cc:	stp	x23, x24, [sp, #48]
  4263d0:	cmp	w1, #0x1
  4263d4:	b.ne	426404 <ferror@plt+0x23a94>  // b.any
  4263d8:	ldr	x3, [x19]
  4263dc:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  4263e0:	mov	w1, #0x3                   	// #3
  4263e4:	add	x2, x2, #0xcc5
  4263e8:	bl	419440 <ferror@plt+0x16ad0>
  4263ec:	mov	w0, #0x0                   	// #0
  4263f0:	ldp	x19, x20, [sp, #16]
  4263f4:	ldp	x21, x22, [sp, #32]
  4263f8:	ldp	x23, x24, [sp, #48]
  4263fc:	ldp	x29, x30, [sp], #64
  426400:	ret
  426404:	mov	w22, #0x18                  	// #24
  426408:	mov	x21, x0
  42640c:	ldr	w0, [x0, #512]
  426410:	mov	x24, x3
  426414:	madd	w22, w20, w22, w22
  426418:	add	w23, w20, #0x1
  42641c:	cmp	w0, w22
  426420:	b.cs	426438 <ferror@plt+0x23ac8>  // b.hs, b.nlast
  426424:	ldr	x0, [x21, #504]
  426428:	mov	w1, w22
  42642c:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  426430:	str	x0, [x21, #504]
  426434:	str	w22, [x21, #512]
  426438:	mov	w0, #0x18                  	// #24
  42643c:	ldr	x2, [x21, #504]
  426440:	umull	x0, w20, w0
  426444:	ubfiz	x20, x20, #3, #32
  426448:	add	x1, x2, x0
  42644c:	str	x19, [x2, x0]
  426450:	mov	x2, #0x8                   	// #8
  426454:	ldr	x0, [x19, #24]
  426458:	str	x0, [x1, #8]
  42645c:	ldrb	w0, [x19, #18]
  426460:	and	w0, w0, #0x3
  426464:	str	w0, [x1, #16]
  426468:	mov	x1, x20
  42646c:	mov	x0, x21
  426470:	bl	4254fc <ferror@plt+0x22b8c>
  426474:	str	x24, [x0, x20]
  426478:	ldrb	w1, [x19, #18]
  42647c:	mov	w0, #0x1                   	// #1
  426480:	strh	w23, [x19, #24]
  426484:	bfxil	w1, w0, #0, #2
  426488:	strb	w1, [x19, #18]
  42648c:	b	4263f0 <ferror@plt+0x23a80>
  426490:	mov	w6, #0x18                  	// #24
  426494:	sub	w1, w1, #0x1
  426498:	cmn	w1, #0x1
  42649c:	b.eq	4264cc <ferror@plt+0x23b5c>  // b.none
  4264a0:	umull	x2, w1, w6
  4264a4:	ldr	x4, [x0, #504]
  4264a8:	add	x3, x4, x2
  4264ac:	ldr	x2, [x4, x2]
  4264b0:	ldr	w5, [x3, #16]
  4264b4:	ldrb	w4, [x2, #18]
  4264b8:	bfxil	w4, w5, #0, #2
  4264bc:	strb	w4, [x2, #18]
  4264c0:	ldr	x3, [x3, #8]
  4264c4:	str	x3, [x2, #24]
  4264c8:	b	426494 <ferror@plt+0x23b24>
  4264cc:	ret
  4264d0:	mov	x3, x0
  4264d4:	mov	x0, x2
  4264d8:	mov	x5, #0x9300000000000000    	// #-7854277750134145024
  4264dc:	ldr	w2, [x3, #48]
  4264e0:	str	xzr, [x0]
  4264e4:	str	w2, [x0, #8]
  4264e8:	ldur	x4, [x0, #12]
  4264ec:	ldrb	w2, [x3, #1151]
  4264f0:	and	x4, x4, x5
  4264f4:	cmp	w2, #0x0
  4264f8:	cset	x2, eq  // eq = none
  4264fc:	orr	x2, x4, x2, lsl #61
  426500:	stur	x2, [x0, #12]
  426504:	ldr	x2, [x3]
  426508:	cbz	x2, 426538 <ferror@plt+0x23bc8>
  42650c:	ldrb	w2, [x2, #106]
  426510:	cmp	w2, #0x0
  426514:	cset	w2, ne  // ne = any
  426518:	and	w1, w1, #0x3
  42651c:	mov	w3, #0xffffffec            	// #-20
  426520:	orr	w2, w1, w2, lsl #4
  426524:	ldrb	w1, [x0, #19]
  426528:	and	w1, w1, w3
  42652c:	orr	w2, w2, w1
  426530:	strb	w2, [x0, #19]
  426534:	ret
  426538:	mov	w2, #0x0                   	// #0
  42653c:	b	426518 <ferror@plt+0x23ba8>
  426540:	stp	x29, x30, [sp, #-192]!
  426544:	mov	x29, sp
  426548:	stp	x19, x20, [sp, #16]
  42654c:	mov	x19, x0
  426550:	stp	x21, x22, [sp, #32]
  426554:	mov	x22, x1
  426558:	stp	x23, x24, [sp, #48]
  42655c:	stp	x25, x26, [sp, #64]
  426560:	stp	x27, x28, [sp, #80]
  426564:	ldrb	w1, [x0, #1160]
  426568:	cbz	w1, 426610 <ferror@plt+0x23ca0>
  42656c:	bl	42aff0 <ferror@plt+0x28680>
  426570:	mov	x20, x0
  426574:	cbz	x20, 426f54 <ferror@plt+0x245e4>
  426578:	ldrb	w0, [x22, #18]
  42657c:	tbz	w0, #1, 426e80 <ferror@plt+0x24510>
  426580:	ldrb	w0, [x19, #1151]
  426584:	cbz	w0, 426598 <ferror@plt+0x23c28>
  426588:	mov	x1, x22
  42658c:	mov	x0, x19
  426590:	mov	x2, #0x0                   	// #0
  426594:	bl	4257b8 <ferror@plt+0x22e48>
  426598:	ldrh	w0, [x22, #18]
  42659c:	ubfx	x1, x0, #2, #8
  4265a0:	tbz	w0, #5, 426dac <ferror@plt+0x2443c>
  4265a4:	ldrb	w0, [x22, #18]
  4265a8:	and	w0, w0, #0x3
  4265ac:	cmp	w0, #0x3
  4265b0:	b.eq	426dcc <ferror@plt+0x2445c>  // b.none
  4265b4:	mov	w1, #0x0                   	// #0
  4265b8:	ldr	w2, [x19, #48]
  4265bc:	mov	x0, x19
  4265c0:	ldr	x5, [x22]
  4265c4:	adrp	x4, 453000 <_obstack_memory_used@@Base+0x19198>
  4265c8:	mov	w3, #0x0                   	// #0
  4265cc:	add	x4, x4, #0xefc
  4265d0:	bl	4196e0 <ferror@plt+0x16d70>
  4265d4:	tst	w0, #0xff
  4265d8:	b.eq	426e78 <ferror@plt+0x24508>  // b.none
  4265dc:	ldrb	w0, [x22, #18]
  4265e0:	and	w0, w0, #0x3
  4265e4:	cmp	w0, #0x2
  4265e8:	b.ne	426e78 <ferror@plt+0x24508>  // b.any
  4265ec:	ldr	x0, [x22, #24]
  4265f0:	adrp	x4, 453000 <_obstack_memory_used@@Base+0x19198>
  4265f4:	mov	w3, #0x0                   	// #0
  4265f8:	add	x4, x4, #0xf0b
  4265fc:	mov	w1, #0x5                   	// #5
  426600:	ldr	w2, [x0, #8]
  426604:	mov	x0, x19
  426608:	bl	4195fc <ferror@plt+0x16c8c>
  42660c:	b	426e78 <ferror@plt+0x24508>
  426610:	add	x1, sp, #0x80
  426614:	ldr	x20, [x0, #448]
  426618:	str	x1, [x0, #448]
  42661c:	bl	421448 <ferror@plt+0x1ead8>
  426620:	mov	x21, x0
  426624:	ldrh	w0, [x0, #6]
  426628:	str	x20, [x19, #448]
  42662c:	tbnz	w0, #0, 4268ac <ferror@plt+0x23f3c>
  426630:	ldrb	w0, [x21, #4]
  426634:	cmp	w0, #0x14
  426638:	b.ne	426864 <ferror@plt+0x23ef4>  // b.any
  42663c:	adrp	x20, 453000 <_obstack_memory_used@@Base+0x19198>
  426640:	adrp	x24, 453000 <_obstack_memory_used@@Base+0x19198>
  426644:	add	x20, x20, #0xd76
  426648:	add	x24, x24, #0xd48
  42664c:	mov	w25, #0x0                   	// #0
  426650:	mov	w21, #0x0                   	// #0
  426654:	mov	w23, #0x0                   	// #0
  426658:	mov	x0, x19
  42665c:	bl	4228f4 <ferror@plt+0x1ff84>
  426660:	ldrb	w2, [x0, #4]
  426664:	mov	x1, x0
  426668:	cmp	w2, #0x2c
  42666c:	b.eq	426798 <ferror@plt+0x23e28>  // b.none
  426670:	b.hi	426708 <ferror@plt+0x23d98>  // b.pmore
  426674:	cmp	w2, #0x13
  426678:	b.eq	426788 <ferror@plt+0x23e18>  // b.none
  42667c:	cmp	w2, #0x15
  426680:	b.eq	426770 <ferror@plt+0x23e00>  // b.none
  426684:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  426688:	add	x0, x0, #0x1f8
  42668c:	ldp	x4, x5, [x0, #96]
  426690:	stp	x4, x5, [sp, #152]
  426694:	ldp	x4, x5, [x0, #112]
  426698:	stp	x4, x5, [sp, #168]
  42669c:	ldr	x0, [x0, #128]
  4266a0:	str	x0, [sp, #184]
  4266a4:	cbnz	w25, 42673c <ferror@plt+0x23dcc>
  4266a8:	cmp	w2, #0x16
  4266ac:	b.ne	42672c <ferror@plt+0x23dbc>  // b.any
  4266b0:	add	w21, w21, #0x2
  4266b4:	mov	x3, #0x0                   	// #0
  4266b8:	add	x0, sp, #0x98
  4266bc:	mov	x20, #0x0                   	// #0
  4266c0:	mov	w1, #0x3                   	// #3
  4266c4:	ldr	x2, [x0, w21, uxtw #3]
  4266c8:	mov	x0, x19
  4266cc:	bl	419440 <ferror@plt+0x16ad0>
  4266d0:	mov	w21, #0x0                   	// #0
  4266d4:	strb	wzr, [x19, #22]
  4266d8:	mov	w1, w23
  4266dc:	mov	x0, x19
  4266e0:	bl	426490 <ferror@plt+0x23b20>
  4266e4:	cbnz	w21, 426574 <ferror@plt+0x23c04>
  4266e8:	mov	w0, w21
  4266ec:	ldp	x19, x20, [sp, #16]
  4266f0:	ldp	x21, x22, [sp, #32]
  4266f4:	ldp	x23, x24, [sp, #48]
  4266f8:	ldp	x25, x26, [sp, #64]
  4266fc:	ldp	x27, x28, [sp, #80]
  426700:	ldp	x29, x30, [sp], #192
  426704:	ret
  426708:	cmp	w2, #0x35
  42670c:	b.eq	426748 <ferror@plt+0x23dd8>  // b.none
  426710:	cmp	w2, #0x4f
  426714:	b.ne	426684 <ferror@plt+0x23d14>  // b.any
  426718:	ldrb	w0, [x19, #1124]
  42671c:	cbz	w0, 426658 <ferror@plt+0x23ce8>
  426720:	b	426684 <ferror@plt+0x23d14>
  426724:	mov	w21, w25
  426728:	b	426684 <ferror@plt+0x23d14>
  42672c:	mov	x0, x19
  426730:	bl	4212ac <ferror@plt+0x1e93c>
  426734:	mov	x3, x0
  426738:	b	4266b8 <ferror@plt+0x23d48>
  42673c:	mov	x3, #0x0                   	// #0
  426740:	mov	w21, #0x4                   	// #4
  426744:	b	4266b8 <ferror@plt+0x23d48>
  426748:	cbnz	w21, 426684 <ferror@plt+0x23d14>
  42674c:	cbnz	w25, 426684 <ferror@plt+0x23d14>
  426750:	ldp	x2, x3, [x1, #8]
  426754:	mov	x0, x19
  426758:	mov	w1, w23
  42675c:	bl	4263ac <ferror@plt+0x23a3c>
  426760:	ands	w21, w0, #0xff
  426764:	b.eq	426da4 <ferror@plt+0x24434>  // b.none
  426768:	add	w23, w23, #0x1
  42676c:	b	426658 <ferror@plt+0x23ce8>
  426770:	cmp	w23, #0x0
  426774:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  426778:	b.ne	426f5c <ferror@plt+0x245ec>  // b.any
  42677c:	cbnz	w25, 426f5c <ferror@plt+0x245ec>
  426780:	mov	w21, #0x0                   	// #0
  426784:	b	426684 <ferror@plt+0x23d14>
  426788:	cbz	w21, 426684 <ferror@plt+0x23d14>
  42678c:	cbnz	w25, 426724 <ferror@plt+0x23db4>
  426790:	mov	w21, #0x0                   	// #0
  426794:	b	426658 <ferror@plt+0x23ce8>
  426798:	cbnz	w25, 426684 <ferror@plt+0x23d14>
  42679c:	cbnz	w21, 426834 <ferror@plt+0x23ec4>
  4267a0:	ldr	x3, [x19, #1272]
  4267a4:	mov	w1, w23
  4267a8:	mov	x0, x19
  4267ac:	add	w23, w23, #0x1
  4267b0:	mov	x2, x3
  4267b4:	bl	4263ac <ferror@plt+0x23a3c>
  4267b8:	mov	w0, #0x1                   	// #1
  4267bc:	strb	w0, [x19, #22]
  4267c0:	ldrb	w0, [x19, #1152]
  4267c4:	cbnz	w0, 426808 <ferror@plt+0x23e98>
  4267c8:	ldrb	w0, [x19, #1154]
  4267cc:	cbz	w0, 426808 <ferror@plt+0x23e98>
  4267d0:	ldrb	w0, [x19, #1142]
  4267d4:	cbz	w0, 426808 <ferror@plt+0x23e98>
  4267d8:	ldrb	w1, [x19, #1120]
  4267dc:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  4267e0:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  4267e4:	add	x0, x0, #0xd17
  4267e8:	cmp	w1, #0x0
  4267ec:	add	x2, x2, #0xce4
  4267f0:	csel	x2, x2, x0, ne  // ne = any
  4267f4:	mov	w1, #0xa                   	// #10
  4267f8:	mov	x0, x19
  4267fc:	bl	41951c <ferror@plt+0x16bac>
  426800:	mov	w25, #0x1                   	// #1
  426804:	b	426658 <ferror@plt+0x23ce8>
  426808:	ldrsb	w0, [x19, #1198]
  42680c:	cmp	w0, #0x0
  426810:	b.le	426800 <ferror@plt+0x23e90>
  426814:	ldrb	w0, [x19, #1120]
  426818:	cbnz	w0, 426800 <ferror@plt+0x23e90>
  42681c:	mov	x0, x19
  426820:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  426824:	mov	w1, #0x0                   	// #0
  426828:	add	x2, x2, #0xd17
  42682c:	bl	419440 <ferror@plt+0x16ad0>
  426830:	b	426800 <ferror@plt+0x23e90>
  426834:	ldrb	w0, [x19, #1154]
  426838:	cbz	w0, 42685c <ferror@plt+0x23eec>
  42683c:	ldrb	w0, [x19, #1142]
  426840:	cbz	w0, 42685c <ferror@plt+0x23eec>
  426844:	ldrb	w0, [x19, #1120]
  426848:	mov	w1, #0xa                   	// #10
  42684c:	cmp	w0, #0x0
  426850:	mov	x0, x19
  426854:	csel	x2, x24, x20, ne  // ne = any
  426858:	bl	41951c <ferror@plt+0x16bac>
  42685c:	mov	w25, w21
  426860:	b	426658 <ferror@plt+0x23ce8>
  426864:	cmp	w0, #0x16
  426868:	b.eq	4268ac <ferror@plt+0x23f3c>  // b.none
  42686c:	cmp	w0, #0x4f
  426870:	b.ne	42687c <ferror@plt+0x23f0c>  // b.any
  426874:	ldrb	w1, [x19, #1124]
  426878:	cbz	w1, 4268ac <ferror@plt+0x23f3c>
  42687c:	ldrb	w1, [x19, #1152]
  426880:	cbz	w1, 426a60 <ferror@plt+0x240f0>
  426884:	ldrb	w1, [x19, #1120]
  426888:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  42688c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  426890:	add	x0, x0, #0xdd5
  426894:	cmp	w1, #0x0
  426898:	add	x2, x2, #0xda2
  42689c:	csel	x2, x2, x0, ne  // ne = any
  4268a0:	mov	w1, #0x2                   	// #2
  4268a4:	mov	x0, x19
  4268a8:	bl	419440 <ferror@plt+0x16ad0>
  4268ac:	mov	w25, #0x0                   	// #0
  4268b0:	mov	w23, #0x0                   	// #0
  4268b4:	mov	x24, #0x0                   	// #0
  4268b8:	mov	x2, #0x30                  	// #48
  4268bc:	mov	x1, #0x0                   	// #0
  4268c0:	mov	x0, x19
  4268c4:	bl	4254fc <ferror@plt+0x22b8c>
  4268c8:	mov	w1, #0x0                   	// #0
  4268cc:	mov	x2, x0
  4268d0:	mov	x0, x19
  4268d4:	bl	4264d0 <ferror@plt+0x23b60>
  4268d8:	mov	x20, x0
  4268dc:	cbnz	x21, 426aac <ferror@plt+0x2413c>
  4268e0:	strh	w23, [x0, #16]
  4268e4:	ubfiz	w0, w25, #3, #1
  4268e8:	orr	w0, w0, #0x4
  4268ec:	str	x24, [x20]
  4268f0:	ldrb	w1, [x20, #19]
  4268f4:	and	w1, w1, #0xfffffff3
  4268f8:	orr	w0, w0, w1
  4268fc:	strb	w0, [x20, #19]
  426900:	ldrb	w0, [x20, #19]
  426904:	mov	w1, #0x1                   	// #1
  426908:	str	x19, [sp, #152]
  42690c:	adrp	x26, 457000 <_obstack_memory_used@@Base+0x1d198>
  426910:	strb	w1, [sp, #160]
  426914:	add	x26, x26, #0x21a
  426918:	ubfx	x0, x0, #3, #1
  42691c:	strb	w0, [sp, #161]
  426920:	strb	wzr, [sp, #162]
  426924:	mov	w24, #0x0                   	// #0
  426928:	str	wzr, [sp, #164]
  42692c:	mov	w25, #0x0                   	// #0
  426930:	str	xzr, [sp, #168]
  426934:	cbnz	x21, 4269c0 <ferror@plt+0x24050>
  426938:	ldr	w1, [x20, #12]
  42693c:	mov	x21, #0x18                  	// #24
  426940:	mov	x0, x19
  426944:	mov	x2, x21
  426948:	madd	x1, x1, x21, x21
  42694c:	bl	4254fc <ferror@plt+0x22b8c>
  426950:	mov	x20, x0
  426954:	ldr	x28, [x19, #448]
  426958:	mov	x0, x19
  42695c:	ldr	w2, [x20, #12]
  426960:	madd	x21, x2, x21, x21
  426964:	add	x21, x20, x21
  426968:	str	x21, [x19, #448]
  42696c:	bl	421448 <ferror@plt+0x1ead8>
  426970:	ldrb	w1, [x0, #4]
  426974:	str	x28, [x19, #448]
  426978:	cmp	w1, #0x35
  42697c:	b.ne	426ad0 <ferror@plt+0x24160>  // b.any
  426980:	ldr	x3, [x0, #8]
  426984:	ldrb	w2, [x3, #18]
  426988:	and	w2, w2, #0x3
  42698c:	cmp	w2, #0x1
  426990:	b.ne	426ad0 <ferror@plt+0x24160>  // b.any
  426994:	mov	w1, #0x50                  	// #80
  426998:	strb	w1, [x0, #4]
  42699c:	ldrh	w1, [x3, #24]
  4269a0:	str	w1, [x0, #8]
  4269a4:	ldr	w21, [x20, #12]
  4269a8:	add	w0, w21, #0x1
  4269ac:	str	w0, [x20, #12]
  4269b0:	mov	w0, w21
  4269b4:	mov	x21, #0x18                  	// #24
  4269b8:	madd	x21, x0, x21, x21
  4269bc:	add	x21, x20, x21
  4269c0:	ldr	w1, [x20, #12]
  4269c4:	cmp	w1, #0x1
  4269c8:	b.ls	426a44 <ferror@plt+0x240d4>  // b.plast
  4269cc:	ldurb	w0, [x21, #-20]
  4269d0:	sub	x4, x21, #0x18
  4269d4:	cmp	w0, #0x25
  4269d8:	b.ne	426a44 <ferror@plt+0x240d4>  // b.any
  4269dc:	ldrb	w0, [x20, #19]
  4269e0:	tbz	w0, #2, 426a44 <ferror@plt+0x240d4>
  4269e4:	ldrb	w0, [x21, #4]
  4269e8:	cmp	w0, #0x50
  4269ec:	b.ne	426bfc <ferror@plt+0x2428c>  // b.any
  4269f0:	ldrh	w0, [x21, #6]
  4269f4:	tbz	w0, #0, 426a00 <ferror@plt+0x24090>
  4269f8:	orr	w0, w0, #0x200
  4269fc:	strh	w0, [x21, #6]
  426a00:	ldrh	w2, [x4, #6]
  426a04:	tbz	w2, #1, 426a14 <ferror@plt+0x240a4>
  426a08:	ldrh	w0, [x21, #6]
  426a0c:	orr	w0, w0, #0x100
  426a10:	strh	w0, [x21, #6]
  426a14:	ldrh	w0, [x21, #6]
  426a18:	and	w2, w2, #0x1
  426a1c:	sub	w1, w1, #0x1
  426a20:	and	w0, w0, #0xfffffffe
  426a24:	orr	w0, w0, #0x4
  426a28:	orr	w0, w0, w2
  426a2c:	strh	w0, [x21, #6]
  426a30:	ldp	x2, x3, [x21]
  426a34:	stp	x2, x3, [x4]
  426a38:	ldr	x0, [x21, #16]
  426a3c:	str	x0, [x4, #16]
  426a40:	str	w1, [x20, #12]
  426a44:	ldrb	w0, [x21, #4]
  426a48:	cmp	w0, #0x16
  426a4c:	b.ne	426cec <ferror@plt+0x2437c>  // b.any
  426a50:	cbz	w25, 426c20 <ferror@plt+0x242b0>
  426a54:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  426a58:	add	x2, x2, #0xeae
  426a5c:	b	426c10 <ferror@plt+0x242a0>
  426a60:	cmp	w0, #0x3d
  426a64:	b.eq	426a90 <ferror@plt+0x24120>  // b.none
  426a68:	b.hi	426a88 <ferror@plt+0x24118>  // b.pmore
  426a6c:	and	w0, w0, #0xfffffffd
  426a70:	cmp	w0, #0x34
  426a74:	cset	w1, eq  // eq = none
  426a78:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  426a7c:	add	x2, x2, #0xe23
  426a80:	lsl	w1, w1, #1
  426a84:	b	4268a4 <ferror@plt+0x23f34>
  426a88:	cmp	w0, #0x43
  426a8c:	b	426a74 <ferror@plt+0x24104>
  426a90:	ldr	x0, [x21, #16]
  426a94:	ldrb	w1, [x0]
  426a98:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  426a9c:	add	x0, x0, #0xe06
  426aa0:	bl	402760 <strchr@plt>
  426aa4:	cmp	x0, #0x0
  426aa8:	b	426a74 <ferror@plt+0x24104>
  426aac:	ldp	x2, x3, [x21]
  426ab0:	stp	x2, x3, [x20, #24]
  426ab4:	add	x0, x0, #0x18
  426ab8:	ldr	x1, [x21, #16]
  426abc:	mov	x21, x0
  426ac0:	mov	w0, #0x1                   	// #1
  426ac4:	str	w0, [x20, #12]
  426ac8:	str	x1, [x20, #40]
  426acc:	b	426900 <ferror@plt+0x23f90>
  426ad0:	ldrb	w2, [x19, #1138]
  426ad4:	cbz	w2, 4269a4 <ferror@plt+0x24034>
  426ad8:	ldrh	w2, [x20, #16]
  426adc:	cbz	w2, 4269a4 <ferror@plt+0x24034>
  426ae0:	cmp	w1, #0x3e
  426ae4:	b.eq	426af0 <ferror@plt+0x24180>  // b.none
  426ae8:	cmp	w1, #0x38
  426aec:	b.ne	4269a4 <ferror@plt+0x24034>  // b.any
  426af0:	ldr	w1, [x0, #8]
  426af4:	ldr	x2, [x0, #16]
  426af8:	sub	x1, x1, #0x1
  426afc:	add	x27, x2, x1
  426b00:	add	x4, x2, #0x1
  426b04:	cmp	x27, x4
  426b08:	b.ls	4269a4 <ferror@plt+0x24034>  // b.plast
  426b0c:	ldrb	w1, [x4]
  426b10:	ldrb	w0, [x4]
  426b14:	ldrh	w1, [x26, x1, lsl #1]
  426b18:	tbnz	w1, #9, 426bb8 <ferror@plt+0x24248>
  426b1c:	cmp	w0, #0x24
  426b20:	b.ne	426b2c <ferror@plt+0x241bc>  // b.any
  426b24:	ldrb	w0, [x19, #1146]
  426b28:	cbnz	w0, 426bb8 <ferror@plt+0x24248>
  426b2c:	add	x4, x4, #0x1
  426b30:	cmp	x27, x4
  426b34:	b.ne	426b0c <ferror@plt+0x2419c>  // b.any
  426b38:	mov	x4, x27
  426b3c:	mov	x28, x27
  426b40:	sub	x2, x28, x4
  426b44:	ldrh	w8, [x20, #16]
  426b48:	mov	w7, w2
  426b4c:	and	x2, x2, #0xffffffff
  426b50:	mov	x21, #0x0                   	// #0
  426b54:	cmp	w8, w21
  426b58:	b.ls	426bb0 <ferror@plt+0x24240>  // b.plast
  426b5c:	ldr	x0, [x20]
  426b60:	ldr	x0, [x0, x21, lsl #3]
  426b64:	ldr	w1, [x0, #8]
  426b68:	cmp	w7, w1
  426b6c:	b.ne	426bf4 <ferror@plt+0x24284>  // b.any
  426b70:	ldr	x3, [x0]
  426b74:	mov	x0, x4
  426b78:	stp	x4, x3, [sp, #96]
  426b7c:	mov	x1, x3
  426b80:	str	x2, [sp, #112]
  426b84:	stp	w7, w8, [sp, #120]
  426b88:	bl	402690 <memcmp@plt>
  426b8c:	ldp	w7, w8, [sp, #120]
  426b90:	ldp	x4, x3, [sp, #96]
  426b94:	ldr	x2, [sp, #112]
  426b98:	cbnz	w0, 426bf4 <ferror@plt+0x24284>
  426b9c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  426ba0:	mov	w1, #0x6                   	// #6
  426ba4:	add	x2, x0, #0xe4b
  426ba8:	mov	x0, x19
  426bac:	bl	4194ac <ferror@plt+0x16b3c>
  426bb0:	mov	x4, x28
  426bb4:	b	426b04 <ferror@plt+0x24194>
  426bb8:	mov	x28, x4
  426bbc:	cmp	x27, x28
  426bc0:	b.ls	426b40 <ferror@plt+0x241d0>  // b.plast
  426bc4:	ldrb	w1, [x28]
  426bc8:	mov	w2, #0x204                 	// #516
  426bcc:	ldrb	w0, [x28]
  426bd0:	ldrh	w1, [x26, x1, lsl #1]
  426bd4:	tst	w2, w1
  426bd8:	b.ne	426bec <ferror@plt+0x2427c>  // b.any
  426bdc:	cmp	w0, #0x24
  426be0:	b.ne	426b40 <ferror@plt+0x241d0>  // b.any
  426be4:	ldrb	w0, [x19, #1146]
  426be8:	cbz	w0, 426b40 <ferror@plt+0x241d0>
  426bec:	add	x28, x28, #0x1
  426bf0:	b	426bbc <ferror@plt+0x2424c>
  426bf4:	add	x21, x21, #0x1
  426bf8:	b	426b54 <ferror@plt+0x241e4>
  426bfc:	ldr	w0, [x19, #1116]
  426c00:	cmp	w0, #0x15
  426c04:	b.eq	426a44 <ferror@plt+0x240d4>  // b.none
  426c08:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  426c0c:	add	x2, x2, #0xe85
  426c10:	mov	x0, x19
  426c14:	mov	w1, #0x3                   	// #3
  426c18:	bl	419440 <ferror@plt+0x16ad0>
  426c1c:	b	4266d0 <ferror@plt+0x23d60>
  426c20:	ldrb	w0, [sp, #161]
  426c24:	cbz	w0, 426c48 <ferror@plt+0x242d8>
  426c28:	ldr	w0, [sp, #164]
  426c2c:	cbz	w0, 426c50 <ferror@plt+0x242e0>
  426c30:	ldr	w2, [sp, #172]
  426c34:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x19198>
  426c38:	ldr	x0, [sp, #152]
  426c3c:	add	x3, x3, #0xee4
  426c40:	mov	w1, #0x3                   	// #3
  426c44:	bl	4197c8 <ferror@plt+0x16e58>
  426c48:	ldr	w0, [sp, #164]
  426c4c:	cbnz	w0, 4266d0 <ferror@plt+0x23d60>
  426c50:	ldr	w1, [x20, #12]
  426c54:	mov	x0, #0x18                  	// #24
  426c58:	sub	w1, w1, #0x1
  426c5c:	str	w1, [x20, #12]
  426c60:	madd	x1, x1, x0, x0
  426c64:	mov	x0, x19
  426c68:	bl	422b90 <ferror@plt+0x20220>
  426c6c:	mov	x20, x0
  426c70:	ldr	w0, [x0, #12]
  426c74:	cbnz	w0, 426d64 <ferror@plt+0x243f4>
  426c78:	cbz	w24, 426d9c <ferror@plt+0x2442c>
  426c7c:	mov	w21, #0x18                  	// #24
  426c80:	mov	x1, #0x0                   	// #0
  426c84:	mov	x0, x19
  426c88:	umull	x24, w24, w21
  426c8c:	mov	x2, x24
  426c90:	bl	4254fc <ferror@plt+0x22b8c>
  426c94:	add	x7, x20, #0x18
  426c98:	mov	x1, x0
  426c9c:	mov	w2, w21
  426ca0:	mov	w3, #0x0                   	// #0
  426ca4:	mov	w6, #0x0                   	// #0
  426ca8:	mov	w5, #0x0                   	// #0
  426cac:	ldr	w4, [x20, #12]
  426cb0:	umaddl	x0, w6, w2, x7
  426cb4:	cmp	w4, w3
  426cb8:	b.eq	426d88 <ferror@plt+0x24418>  // b.none
  426cbc:	umaddl	x4, w3, w2, x7
  426cc0:	ldrb	w8, [x4, #4]
  426cc4:	cmp	w8, #0x26
  426cc8:	ldp	x8, x9, [x4]
  426ccc:	b.ne	426d74 <ferror@plt+0x24404>  // b.any
  426cd0:	umaddl	x0, w5, w2, x1
  426cd4:	add	w5, w5, #0x1
  426cd8:	stp	x8, x9, [x0]
  426cdc:	ldr	x4, [x4, #16]
  426ce0:	str	x4, [x0, #16]
  426ce4:	add	w3, w3, #0x1
  426ce8:	b	426cac <ferror@plt+0x2433c>
  426cec:	cmp	w0, #0x26
  426cf0:	b.ne	426d5c <ferror@plt+0x243ec>  // b.any
  426cf4:	ldr	w0, [x20, #12]
  426cf8:	cmp	w0, #0x1
  426cfc:	b.eq	426a54 <ferror@plt+0x240e4>  // b.none
  426d00:	sub	w0, w0, #0x1
  426d04:	cbz	w25, 426d24 <ferror@plt+0x243b4>
  426d08:	add	w24, w24, #0x1
  426d0c:	str	w0, [x21, #8]
  426d10:	mov	x1, x21
  426d14:	add	x0, sp, #0x98
  426d18:	bl	428b04 <ferror@plt+0x26194>
  426d1c:	cbnz	w0, 426938 <ferror@plt+0x23fc8>
  426d20:	b	4266d0 <ferror@plt+0x23d60>
  426d24:	ldrh	w3, [x21, #6]
  426d28:	mov	w4, #0x108                 	// #264
  426d2c:	ldurh	w1, [x21, #-18]
  426d30:	str	w0, [x20, #12]
  426d34:	tst	x3, #0x2
  426d38:	orr	w0, w1, #0x8
  426d3c:	orr	w1, w1, w4
  426d40:	csel	w0, w0, w1, eq  // eq = none
  426d44:	sturh	w0, [x21, #-18]
  426d48:	tbz	w3, #0, 426d54 <ferror@plt+0x243e4>
  426d4c:	orr	w0, w0, #0x200
  426d50:	sturh	w0, [x21, #-18]
  426d54:	mov	w25, #0x1                   	// #1
  426d58:	b	426d10 <ferror@plt+0x243a0>
  426d5c:	mov	w25, #0x0                   	// #0
  426d60:	b	426d10 <ferror@plt+0x243a0>
  426d64:	ldrh	w0, [x20, #30]
  426d68:	and	w0, w0, #0xfffffffe
  426d6c:	strh	w0, [x20, #30]
  426d70:	b	426c78 <ferror@plt+0x24308>
  426d74:	stp	x8, x9, [x0]
  426d78:	add	w6, w6, #0x1
  426d7c:	ldr	x4, [x4, #16]
  426d80:	str	x4, [x0, #16]
  426d84:	b	426ce4 <ferror@plt+0x24374>
  426d88:	mov	x2, x24
  426d8c:	bl	4022e0 <memcpy@plt>
  426d90:	ldrb	w0, [x20, #19]
  426d94:	orr	w0, w0, #0x40
  426d98:	strb	w0, [x20, #19]
  426d9c:	mov	w21, #0x1                   	// #1
  426da0:	b	4266d4 <ferror@plt+0x23d64>
  426da4:	mov	x20, #0x0                   	// #0
  426da8:	b	4266d4 <ferror@plt+0x23d64>
  426dac:	ldrb	w0, [x22, #18]
  426db0:	and	w0, w0, #0x3
  426db4:	cmp	w0, #0x3
  426db8:	b.ne	426de0 <ferror@plt+0x24470>  // b.any
  426dbc:	ldrb	w0, [x19, #1143]
  426dc0:	cbz	w0, 426e78 <ferror@plt+0x24508>
  426dc4:	mov	w1, #0xb                   	// #11
  426dc8:	b	4265b8 <ferror@plt+0x23c48>
  426dcc:	ldrh	w0, [x22, #18]
  426dd0:	mov	w1, #0xb                   	// #11
  426dd4:	tst	x0, #0x20
  426dd8:	csel	w1, w1, wzr, eq  // eq = none
  426ddc:	b	4265b8 <ferror@plt+0x23c48>
  426de0:	tbnz	w1, #6, 426e78 <ferror@plt+0x24508>
  426de4:	ldr	x24, [x22, #24]
  426de8:	ldrb	w2, [x24, #18]
  426dec:	cbz	w2, 426e08 <ferror@plt+0x24498>
  426df0:	ldr	x3, [x19, #1048]
  426df4:	sub	w2, w2, #0x1
  426df8:	mov	x1, x24
  426dfc:	mov	x0, x19
  426e00:	blr	x3
  426e04:	strb	wzr, [x24, #18]
  426e08:	ldrh	w1, [x24, #16]
  426e0c:	ldrh	w0, [x20, #16]
  426e10:	cmp	w0, w1
  426e14:	b.ne	4265a4 <ferror@plt+0x23c34>  // b.any
  426e18:	ldrb	w1, [x24, #19]
  426e1c:	ldrb	w2, [x20, #19]
  426e20:	eor	w2, w1, w2
  426e24:	tst	w2, #0xc
  426e28:	b.ne	4265a4 <ferror@plt+0x23c34>  // b.any
  426e2c:	mov	w2, w0
  426e30:	sub	w0, w0, #0x1
  426e34:	cbz	w2, 426e58 <ferror@plt+0x244e8>
  426e38:	ldr	x4, [x20]
  426e3c:	ubfiz	x2, x0, #3, #32
  426e40:	ldr	x3, [x24]
  426e44:	ldr	x3, [x3, x2]
  426e48:	ldr	x2, [x4, x2]
  426e4c:	cmp	x3, x2
  426e50:	b.eq	426e2c <ferror@plt+0x244bc>  // b.none
  426e54:	b	4265a4 <ferror@plt+0x23c34>
  426e58:	and	w1, w1, #0x3
  426e5c:	cmp	w1, #0x2
  426e60:	b.ne	426f14 <ferror@plt+0x245a4>  // b.any
  426e64:	mov	x1, x20
  426e68:	mov	x0, x24
  426e6c:	bl	42b234 <ferror@plt+0x288c4>
  426e70:	tst	w0, #0xff
  426e74:	b.ne	4265a4 <ferror@plt+0x23c34>  // b.any
  426e78:	mov	x0, x22
  426e7c:	bl	426384 <ferror@plt+0x23a14>
  426e80:	ldrb	w0, [x22, #18]
  426e84:	mov	w1, #0x2                   	// #2
  426e88:	ldr	x19, [x22]
  426e8c:	str	x20, [x22, #24]
  426e90:	bfxil	w0, w1, #0, #2
  426e94:	strb	w0, [x22, #18]
  426e98:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  426e9c:	mov	x0, x19
  426ea0:	add	x1, x1, #0xf3b
  426ea4:	mov	x2, #0x7                   	// #7
  426ea8:	bl	4024e0 <strncmp@plt>
  426eac:	cbnz	w0, 426ef8 <ferror@plt+0x24588>
  426eb0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  426eb4:	mov	x0, x19
  426eb8:	add	x1, x1, #0xf43
  426ebc:	bl	4026d0 <strcmp@plt>
  426ec0:	cbz	w0, 426ef8 <ferror@plt+0x24588>
  426ec4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  426ec8:	mov	x0, x19
  426ecc:	add	x1, x1, #0xf58
  426ed0:	bl	4026d0 <strcmp@plt>
  426ed4:	cbz	w0, 426ef8 <ferror@plt+0x24588>
  426ed8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x19198>
  426edc:	mov	x0, x19
  426ee0:	add	x1, x1, #0xf6c
  426ee4:	bl	4026d0 <strcmp@plt>
  426ee8:	cbz	w0, 426ef8 <ferror@plt+0x24588>
  426eec:	ldrh	w0, [x22, #18]
  426ef0:	orr	w0, w0, #0x20
  426ef4:	strh	w0, [x22, #18]
  426ef8:	ldrh	w0, [x22, #18]
  426efc:	mov	w21, #0x1                   	// #1
  426f00:	ubfx	x1, x0, #2, #8
  426f04:	and	w1, w1, #0xffffffbf
  426f08:	bfi	w0, w1, #2, #8
  426f0c:	strh	w0, [x22, #18]
  426f10:	b	4266e8 <ferror@plt+0x23d78>
  426f14:	ldr	w0, [x20, #12]
  426f18:	ldr	w21, [x24, #12]
  426f1c:	cmp	w21, w0
  426f20:	b.ne	4265a4 <ferror@plt+0x23c34>  // b.any
  426f24:	sub	w21, w21, #0x1
  426f28:	mov	x23, #0x18                  	// #24
  426f2c:	cmn	w21, #0x1
  426f30:	b.eq	426e78 <ferror@plt+0x24508>  // b.none
  426f34:	mov	w0, w21
  426f38:	sub	w21, w21, #0x1
  426f3c:	madd	x0, x0, x23, x23
  426f40:	add	x1, x20, x0
  426f44:	add	x0, x24, x0
  426f48:	bl	41ffc4 <ferror@plt+0x1d654>
  426f4c:	cbnz	w0, 426f2c <ferror@plt+0x245bc>
  426f50:	b	4265a4 <ferror@plt+0x23c34>
  426f54:	mov	w21, #0x0                   	// #0
  426f58:	b	4266e8 <ferror@plt+0x23d78>
  426f5c:	ubfiz	x1, x23, #3, #32
  426f60:	mov	x0, x19
  426f64:	mov	x21, #0x0                   	// #0
  426f68:	bl	422b90 <ferror@plt+0x20220>
  426f6c:	mov	x24, x0
  426f70:	b	4268b8 <ferror@plt+0x23f48>
  426f74:	ldr	x0, [x1, #24]
  426f78:	add	w2, w2, #0x1
  426f7c:	strb	w2, [x0, #18]
  426f80:	ret
  426f84:	stp	x29, x30, [sp, #-48]!
  426f88:	mov	x29, sp
  426f8c:	stp	x19, x20, [sp, #16]
  426f90:	mov	x19, x0
  426f94:	mov	x20, x1
  426f98:	str	x21, [sp, #32]
  426f9c:	ldrh	w2, [x1, #18]
  426fa0:	orr	w2, w2, #0x80
  426fa4:	strh	w2, [x1, #18]
  426fa8:	and	w2, w2, #0x3
  426fac:	cmp	w2, #0x2
  426fb0:	b.eq	426fd4 <ferror@plt+0x24664>  // b.none
  426fb4:	cmp	w2, #0x3
  426fb8:	b.eq	426ff4 <ferror@plt+0x24684>  // b.none
  426fbc:	cbnz	w2, 42701c <ferror@plt+0x246ac>
  426fc0:	ldr	x3, [x0, #1016]
  426fc4:	cbz	x3, 427034 <ferror@plt+0x246c4>
  426fc8:	mov	x2, x1
  426fcc:	ldr	w1, [x0, #48]
  426fd0:	b	427008 <ferror@plt+0x24698>
  426fd4:	ldr	x21, [x1, #24]
  426fd8:	ldrb	w2, [x21, #18]
  426fdc:	cbz	w2, 426ff4 <ferror@plt+0x24684>
  426fe0:	ldr	x3, [x0, #1048]
  426fe4:	sub	w2, w2, #0x1
  426fe8:	mov	x1, x21
  426fec:	blr	x3
  426ff0:	strb	wzr, [x21, #18]
  426ff4:	ldr	x3, [x19, #1008]
  426ff8:	cbz	x3, 427034 <ferror@plt+0x246c4>
  426ffc:	ldr	w1, [x19, #48]
  427000:	mov	x2, x20
  427004:	mov	x0, x19
  427008:	ldp	x19, x20, [sp, #16]
  42700c:	mov	x16, x3
  427010:	ldr	x21, [sp, #32]
  427014:	ldp	x29, x30, [sp], #48
  427018:	br	x16
  42701c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  427020:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  427024:	add	x2, x2, #0xf83
  427028:	add	x0, x0, #0x9ee
  42702c:	mov	w1, #0xe0b                 	// #3595
  427030:	bl	402980 <ferror@plt+0x10>
  427034:	ldp	x19, x20, [sp, #16]
  427038:	ldr	x21, [sp, #32]
  42703c:	ldp	x29, x30, [sp], #48
  427040:	ret
  427044:	stp	x29, x30, [sp, #-272]!
  427048:	mov	x29, sp
  42704c:	stp	x19, x20, [sp, #16]
  427050:	mov	x20, x1
  427054:	mov	x19, x0
  427058:	stp	x21, x22, [sp, #32]
  42705c:	mov	w1, #0x1                   	// #1
  427060:	stp	x23, x24, [sp, #48]
  427064:	stp	x25, x26, [sp, #64]
  427068:	stp	x27, x28, [sp, #80]
  42706c:	strb	wzr, [x0, #19]
  427070:	strb	w1, [x0, #192]
  427074:	strb	wzr, [x0, #440]
  427078:	ldrb	w0, [x20, #18]
  42707c:	str	x2, [sp, #176]
  427080:	str	w3, [sp, #200]
  427084:	and	w0, w0, #0x3
  427088:	cmp	w0, #0x2
  42708c:	b.ne	4282ec <ferror@plt+0x2597c>  // b.any
  427090:	ldr	x0, [x20, #24]
  427094:	str	x0, [sp, #104]
  427098:	ldrb	w0, [x0, #19]
  42709c:	tbz	w0, #2, 428204 <ferror@plt+0x25894>
  4270a0:	ldrb	w0, [x19, #24]
  4270a4:	mov	x21, #0x0                   	// #0
  4270a8:	strb	w1, [x19, #25]
  4270ac:	add	w0, w0, #0x1
  4270b0:	strb	w0, [x19, #24]
  4270b4:	ldr	w0, [x19, #500]
  4270b8:	add	w0, w0, #0x1
  4270bc:	str	w0, [x19, #500]
  4270c0:	mov	x0, x19
  4270c4:	bl	4287a8 <ferror@plt+0x25e38>
  4270c8:	ldrb	w1, [x0, #4]
  4270cc:	cmp	w1, #0x53
  4270d0:	b.ne	4270f8 <ferror@plt+0x24788>  // b.any
  4270d4:	cbz	x21, 4270f0 <ferror@plt+0x24780>
  4270d8:	ldrh	w1, [x21, #6]
  4270dc:	tbnz	w1, #0, 4270c0 <ferror@plt+0x24750>
  4270e0:	ldr	x1, [x0, #8]
  4270e4:	cmp	x1, #0x0
  4270e8:	csel	x21, x21, x0, ne  // ne = any
  4270ec:	b	4270c0 <ferror@plt+0x24750>
  4270f0:	mov	x21, x0
  4270f4:	b	4270c0 <ferror@plt+0x24750>
  4270f8:	cmp	w1, #0x14
  4270fc:	b.ne	427558 <ferror@plt+0x24be8>  // b.any
  427100:	mov	w0, #0x2                   	// #2
  427104:	strb	w0, [x19, #25]
  427108:	mov	w1, #0x1c0                 	// #448
  42710c:	ldrb	w0, [x19, #1157]
  427110:	ldr	x25, [x20, #24]
  427114:	str	w0, [sp, #136]
  427118:	mov	x0, x19
  42711c:	ldrh	w21, [x25, #16]
  427120:	cmp	w21, #0x0
  427124:	csinc	w21, w21, wzr, ne  // ne = any
  427128:	umull	x1, w21, w1
  42712c:	bl	4204e0 <ferror@plt+0x1db70>
  427130:	str	x0, [sp, #112]
  427134:	mov	w2, #0x30                  	// #48
  427138:	mov	w1, #0x0                   	// #0
  42713c:	ldr	x26, [x0, #8]
  427140:	umull	x21, w21, w2
  427144:	mov	x0, x26
  427148:	mov	x2, x21
  42714c:	bl	402530 <memset@plt>
  427150:	add	x21, x26, x21
  427154:	ldr	x0, [sp, #112]
  427158:	mov	x22, x26
  42715c:	str	wzr, [sp, #124]
  427160:	mov	x24, x0
  427164:	str	x21, [x0, #16]
  427168:	mov	x21, #0x0                   	// #0
  42716c:	ldr	w0, [sp, #124]
  427170:	add	w0, w0, #0x1
  427174:	str	w0, [sp, #124]
  427178:	ldr	x0, [x24, #16]
  42717c:	str	x0, [x22]
  427180:	ldr	w0, [sp, #136]
  427184:	cbz	w0, 427194 <ferror@plt+0x24824>
  427188:	mov	x0, #0xc8                  	// #200
  42718c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  427190:	str	x0, [x22, #32]
  427194:	mov	w0, #0x32                  	// #50
  427198:	mov	w23, #0x0                   	// #0
  42719c:	mov	w27, #0x0                   	// #0
  4271a0:	str	w0, [sp, #128]
  4271a4:	ldr	x1, [x22]
  4271a8:	add	w0, w23, #0x2
  4271ac:	add	w28, w23, #0x2
  4271b0:	add	x0, x1, x0, lsl #3
  4271b4:	ldr	x1, [x24, #24]
  4271b8:	cmp	x1, x0
  4271bc:	b.cs	4271dc <ferror@plt+0x2486c>  // b.hs, b.nlast
  4271c0:	mov	x1, x24
  4271c4:	mov	x0, x19
  4271c8:	mov	x2, #0x1f40                	// #8000
  4271cc:	bl	42057c <ferror@plt+0x1dc0c>
  4271d0:	mov	x24, x0
  4271d4:	ldr	x0, [x0, #16]
  4271d8:	str	x0, [x22]
  4271dc:	ldr	w0, [sp, #136]
  4271e0:	cbz	w0, 42720c <ferror@plt+0x2489c>
  4271e4:	ldr	w0, [sp, #128]
  4271e8:	cmp	w28, w0
  4271ec:	b.ls	42720c <ferror@plt+0x2489c>  // b.plast
  4271f0:	add	w0, w0, #0x3e8
  4271f4:	str	w0, [sp, #128]
  4271f8:	ldr	x0, [sp, #128]
  4271fc:	ubfiz	x1, x0, #2, #32
  427200:	ldr	x0, [x22, #32]
  427204:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  427208:	str	x0, [x22, #32]
  42720c:	add	x1, sp, #0xf8
  427210:	mov	x0, x19
  427214:	bl	42834c <ferror@plt+0x259dc>
  427218:	mov	x28, x0
  42721c:	ldrb	w0, [x0, #4]
  427220:	cmp	w0, #0x53
  427224:	b.ne	427258 <ferror@plt+0x248e8>  // b.any
  427228:	cbz	w23, 4271a4 <ferror@plt+0x24834>
  42722c:	ldrb	w0, [x19, #1157]
  427230:	mov	w3, w23
  427234:	ldr	w2, [sp, #248]
  427238:	mov	x1, x28
  42723c:	cmp	w0, #0x0
  427240:	add	w23, w23, #0x1
  427244:	cset	w5, ne  // ne = any
  427248:	mov	x0, x22
  42724c:	mov	w4, #0x0                   	// #0
  427250:	bl	4253dc <ferror@plt+0x22a6c>
  427254:	b	4271a4 <ferror@plt+0x24834>
  427258:	cmp	w0, #0x14
  42725c:	b.ne	427268 <ferror@plt+0x248f8>  // b.any
  427260:	add	w27, w27, #0x1
  427264:	b	42722c <ferror@plt+0x248bc>
  427268:	cmp	w0, #0x15
  42726c:	b.ne	427280 <ferror@plt+0x24910>  // b.any
  427270:	sub	w0, w27, #0x1
  427274:	cbz	w27, 4272a4 <ferror@plt+0x24934>
  427278:	mov	w27, w0
  42727c:	b	42722c <ferror@plt+0x248bc>
  427280:	cmp	w0, #0x13
  427284:	b.ne	427380 <ferror@plt+0x24a10>  // b.any
  427288:	cbnz	w27, 42722c <ferror@plt+0x248bc>
  42728c:	ldrb	w0, [x25, #19]
  427290:	tbz	w0, #3, 4272a4 <ferror@plt+0x24934>
  427294:	ldrh	w0, [x25, #16]
  427298:	ldr	w1, [sp, #124]
  42729c:	cmp	w1, w0
  4272a0:	b.eq	42722c <ferror@plt+0x248bc>  // b.none
  4272a4:	cbz	w23, 4272c0 <ferror@plt+0x24950>
  4272a8:	ldr	x1, [x22]
  4272ac:	sub	w0, w23, #0x1
  4272b0:	ldr	x1, [x1, w0, uxtw #3]
  4272b4:	ldrb	w1, [x1, #4]
  4272b8:	cmp	w1, #0x53
  4272bc:	b.eq	427450 <ferror@plt+0x24ae0>  // b.none
  4272c0:	ldr	w2, [x19, #688]
  4272c4:	add	x1, x19, #0x2b0
  4272c8:	str	w23, [x22, #24]
  4272cc:	mov	w3, w23
  4272d0:	mov	w4, #0x0                   	// #0
  4272d4:	ldrb	w0, [x19, #1157]
  4272d8:	cmp	w0, #0x0
  4272dc:	mov	x0, x22
  4272e0:	cset	w5, ne  // ne = any
  4272e4:	bl	4253dc <ferror@plt+0x22a6c>
  4272e8:	ldrh	w1, [x25, #16]
  4272ec:	ldr	w0, [sp, #124]
  4272f0:	cmp	w0, w1
  4272f4:	b.hi	427314 <ferror@plt+0x249a4>  // b.pmore
  4272f8:	ldr	x0, [x22]
  4272fc:	add	w23, w23, #0x1
  427300:	add	x23, x0, x23, lsl #3
  427304:	mov	x0, x22
  427308:	add	x22, x22, #0x30
  42730c:	str	x23, [x24, #16]
  427310:	csel	x22, x22, x0, ne  // ne = any
  427314:	ldrb	w2, [x28, #4]
  427318:	sub	w0, w2, #0x15
  42731c:	and	w0, w0, #0xff
  427320:	cmp	w0, #0x1
  427324:	b.hi	42716c <ferror@plt+0x247fc>  // b.pmore
  427328:	cmp	w2, #0x16
  42732c:	b.ne	427458 <ferror@plt+0x24ae8>  // b.any
  427330:	ldr	x0, [x19, #136]
  427334:	ldr	x0, [x0, #8]
  427338:	cbnz	x0, 427344 <ferror@plt+0x249d4>
  42733c:	ldrb	w0, [x19, #16]
  427340:	cbz	w0, 427350 <ferror@plt+0x249e0>
  427344:	mov	x0, x19
  427348:	mov	w1, #0x1                   	// #1
  42734c:	bl	426104 <ferror@plt+0x23794>
  427350:	ldr	x3, [x20]
  427354:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  427358:	mov	x0, x19
  42735c:	add	x2, x2, #0xf99
  427360:	mov	w1, #0x3                   	// #3
  427364:	bl	419440 <ferror@plt+0x16ad0>
  427368:	ldr	x1, [sp, #112]
  42736c:	mov	x0, x19
  427370:	bl	4204c0 <ferror@plt+0x1db50>
  427374:	str	wzr, [sp, #124]
  427378:	str	xzr, [sp, #112]
  42737c:	b	4274cc <ferror@plt+0x24b5c>
  427380:	cmp	w0, #0x16
  427384:	b.eq	4272a4 <ferror@plt+0x24934>  // b.none
  427388:	cmp	w0, #0x25
  42738c:	b.ne	42739c <ferror@plt+0x24a2c>  // b.any
  427390:	ldrh	w0, [x28, #6]
  427394:	tbz	w0, #6, 42722c <ferror@plt+0x248bc>
  427398:	b	4272a4 <ferror@plt+0x24934>
  42739c:	cmp	w0, #0x51
  4273a0:	b.ne	42722c <ferror@plt+0x248bc>  // b.any
  4273a4:	mov	x0, x19
  4273a8:	bl	41fa48 <ferror@plt+0x1d0d8>
  4273ac:	ldp	x2, x3, [x28]
  4273b0:	stp	x2, x3, [x0]
  4273b4:	ldr	x1, [x28, #16]
  4273b8:	mov	x28, x0
  4273bc:	str	x1, [x0, #16]
  4273c0:	cbz	x21, 427420 <ferror@plt+0x24ab0>
  4273c4:	ldp	x1, x0, [x21, #16]
  4273c8:	sub	x0, x0, x1
  4273cc:	cmp	x0, #0x7
  4273d0:	b.ls	427434 <ferror@plt+0x24ac4>  // b.plast
  4273d4:	ldr	x0, [x21, #16]
  4273d8:	str	x28, [x0], #8
  4273dc:	str	x0, [x21, #16]
  4273e0:	ldrb	w0, [x28, #4]
  4273e4:	cmp	w0, #0x52
  4273e8:	b.eq	427408 <ferror@plt+0x24a98>  // b.none
  4273ec:	add	x1, sp, #0xf8
  4273f0:	mov	x0, x19
  4273f4:	bl	42834c <ferror@plt+0x259dc>
  4273f8:	mov	x28, x0
  4273fc:	ldrb	w0, [x0, #4]
  427400:	cmp	w0, #0x16
  427404:	b.ne	4273c0 <ferror@plt+0x24a50>  // b.any
  427408:	mov	w0, #0x201                 	// #513
  42740c:	strh	w0, [x19, #24]
  427410:	ldrb	w0, [x28, #4]
  427414:	cmp	w0, #0x16
  427418:	b.eq	4272a4 <ferror@plt+0x24934>  // b.none
  42741c:	b	4271a4 <ferror@plt+0x24834>
  427420:	mov	x0, x19
  427424:	mov	x1, #0x100                 	// #256
  427428:	bl	4204e0 <ferror@plt+0x1db70>
  42742c:	mov	x21, x0
  427430:	b	4273d4 <ferror@plt+0x24a64>
  427434:	ldr	x0, [x21, #8]
  427438:	sub	x1, x1, x0
  42743c:	mov	x0, x19
  427440:	lsl	x1, x1, #1
  427444:	bl	4204e0 <ferror@plt+0x1db70>
  427448:	str	x21, [x0]
  42744c:	b	42742c <ferror@plt+0x24abc>
  427450:	mov	w23, w0
  427454:	b	4272a4 <ferror@plt+0x24934>
  427458:	ldr	w0, [sp, #124]
  42745c:	cmp	w0, #0x1
  427460:	b.ne	427550 <ferror@plt+0x24be0>  // b.any
  427464:	cbnz	w1, 427550 <ferror@plt+0x24be0>
  427468:	ldr	w0, [x26, #24]
  42746c:	cmp	w0, #0x0
  427470:	cset	w22, ne  // ne = any
  427474:	mov	w3, w22
  427478:	mov	x2, x20
  42747c:	mov	x1, x25
  427480:	mov	x0, x19
  427484:	bl	425c3c <ferror@plt+0x232cc>
  427488:	tst	w0, #0xff
  42748c:	b.eq	427368 <ferror@plt+0x249f8>  // b.none
  427490:	ldrb	w0, [x25, #19]
  427494:	tbz	w0, #3, 4274cc <ferror@plt+0x24b5c>
  427498:	ldrh	w1, [x25, #16]
  42749c:	cmp	w22, w1
  4274a0:	b.cc	4274bc <ferror@plt+0x24b4c>  // b.lo, b.ul, b.last
  4274a4:	cmp	w22, #0x1
  4274a8:	b.ne	4274cc <ferror@plt+0x24b5c>  // b.any
  4274ac:	ldr	w0, [x26, #24]
  4274b0:	cbnz	w0, 4274cc <ferror@plt+0x24b5c>
  4274b4:	ldrb	w0, [x19, #1153]
  4274b8:	cbnz	w0, 4274cc <ferror@plt+0x24b5c>
  4274bc:	mov	w0, #0x30                  	// #48
  4274c0:	mov	x2, #0xffffffffffffffd0    	// #-48
  4274c4:	umaddl	x0, w0, w1, x2
  4274c8:	str	xzr, [x26, x0]
  4274cc:	ldr	w0, [x19, #500]
  4274d0:	strb	wzr, [x19, #25]
  4274d4:	sub	w0, w0, #0x1
  4274d8:	str	w0, [x19, #500]
  4274dc:	ldrb	w0, [x19, #24]
  4274e0:	sub	w0, w0, #0x1
  4274e4:	strb	w0, [x19, #24]
  4274e8:	ldr	x0, [sp, #112]
  4274ec:	cbnz	x0, 4275a0 <ferror@plt+0x24c30>
  4274f0:	ldrb	w0, [x19, #1138]
  4274f4:	cbz	w0, 42751c <ferror@plt+0x24bac>
  4274f8:	ldr	x0, [x20, #24]
  4274fc:	ldrb	w0, [x0, #19]
  427500:	tbnz	w0, #4, 42751c <ferror@plt+0x24bac>
  427504:	ldr	x3, [x20]
  427508:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x19198>
  42750c:	mov	x0, x19
  427510:	add	x2, x2, #0xfc8
  427514:	mov	w1, #0x6                   	// #6
  427518:	bl	4194ac <ferror@plt+0x16b3c>
  42751c:	cbz	x21, 42752c <ferror@plt+0x24bbc>
  427520:	mov	x1, x21
  427524:	mov	x0, x19
  427528:	bl	4204c0 <ferror@plt+0x1db50>
  42752c:	mov	w0, #0x0                   	// #0
  427530:	strb	wzr, [x19, #192]
  427534:	ldp	x19, x20, [sp, #16]
  427538:	ldp	x21, x22, [sp, #32]
  42753c:	ldp	x23, x24, [sp, #48]
  427540:	ldp	x25, x26, [sp, #64]
  427544:	ldp	x27, x28, [sp, #80]
  427548:	ldp	x29, x30, [sp], #272
  42754c:	ret
  427550:	ldr	w22, [sp, #124]
  427554:	b	427474 <ferror@plt+0x24b04>
  427558:	cmp	w1, #0x16
  42755c:	b.ne	427578 <ferror@plt+0x24c08>  // b.any
  427560:	add	x1, x19, #0x2b0
  427564:	cmp	x0, x1
  427568:	b.eq	427578 <ferror@plt+0x24c08>  // b.none
  42756c:	mov	x21, #0x0                   	// #0
  427570:	str	wzr, [sp, #124]
  427574:	b	427378 <ferror@plt+0x24a08>
  427578:	mov	x0, x19
  42757c:	mov	w1, #0x1                   	// #1
  427580:	bl	426104 <ferror@plt+0x23794>
  427584:	cbz	x21, 42756c <ferror@plt+0x24bfc>
  427588:	mov	x2, x21
  42758c:	mov	x0, x19
  427590:	mov	w3, #0x1                   	// #1
  427594:	mov	x1, #0x0                   	// #0
  427598:	bl	425d34 <ferror@plt+0x233c4>
  42759c:	b	42756c <ferror@plt+0x24bfc>
  4275a0:	ldr	x0, [sp, #104]
  4275a4:	ldrh	w0, [x0, #16]
  4275a8:	cbz	w0, 4280a8 <ferror@plt+0x25738>
  4275ac:	ldr	x0, [sp, #112]
  4275b0:	str	xzr, [sp, #216]
  4275b4:	ldr	x0, [x0, #8]
  4275b8:	str	x0, [sp, #136]
  4275bc:	ldr	x0, [sp, #104]
  4275c0:	bl	425750 <ferror@plt+0x22de0>
  4275c4:	mov	w25, w0
  4275c8:	mov	w23, w0
  4275cc:	ldr	x0, [sp, #104]
  4275d0:	add	x0, x0, #0x18
  4275d4:	str	x0, [sp, #128]
  4275d8:	mov	w0, #0x18                  	// #24
  4275dc:	ldr	x1, [sp, #128]
  4275e0:	mov	x24, x1
  4275e4:	umaddl	x0, w25, w0, x1
  4275e8:	str	x0, [sp, #160]
  4275ec:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  4275f0:	add	x0, x0, #0xe
  4275f4:	str	x0, [sp, #184]
  4275f8:	ldr	x0, [sp, #160]
  4275fc:	cmp	x0, x24
  427600:	b.ls	427a3c <ferror@plt+0x250cc>  // b.plast
  427604:	ldrb	w0, [x24, #4]
  427608:	cmp	w0, #0x50
  42760c:	b.ne	427a34 <ferror@plt+0x250c4>  // b.any
  427610:	ldr	w26, [x24, #8]
  427614:	add	w0, w23, #0x2
  427618:	str	w0, [sp, #144]
  42761c:	mov	w0, #0x30                  	// #48
  427620:	sub	w26, w26, #0x1
  427624:	add	w25, w25, #0x2
  427628:	umull	x26, w26, w0
  42762c:	ldr	x0, [sp, #136]
  427630:	add	x22, x0, x26
  427634:	ldrh	w0, [x24, #6]
  427638:	tbz	w0, #2, 4278c0 <ferror@plt+0x24f50>
  42763c:	ldr	x0, [x22, #16]
  427640:	cbnz	x0, 4278b4 <ferror@plt+0x24f44>
  427644:	ldr	x1, [x19, #64]
  427648:	ldr	x0, [x1, #24]
  42764c:	ldr	x1, [x1, #16]
  427650:	sub	x0, x0, x1
  427654:	cmp	x0, #0x2
  427658:	b.hi	42766c <ferror@plt+0x24cfc>  // b.pmore
  42765c:	add	x1, x19, #0x40
  427660:	mov	x0, x19
  427664:	mov	x2, #0x3                   	// #3
  427668:	bl	42068c <ferror@plt+0x1dd1c>
  42766c:	mov	x1, x19
  427670:	mov	x26, #0x0                   	// #0
  427674:	mov	w23, #0x0                   	// #0
  427678:	str	wzr, [sp, #152]
  42767c:	ldr	x0, [x1, #64]!
  427680:	str	x1, [sp, #168]
  427684:	ldr	x28, [x0, #16]
  427688:	mov	w0, #0x22                  	// #34
  42768c:	strb	w0, [x28], #1
  427690:	ldr	w0, [x22, #24]
  427694:	ldr	w1, [sp, #152]
  427698:	cmp	w0, w1
  42769c:	b.ls	427858 <ferror@plt+0x24ee8>  // b.plast
  4276a0:	ldr	x0, [x22]
  4276a4:	ldr	x27, [x0, w1, uxtw #3]
  4276a8:	ldrb	w0, [x27, #4]
  4276ac:	cmp	w0, #0x53
  4276b0:	b.ne	4276dc <ferror@plt+0x24d6c>  // b.any
  4276b4:	cbz	x26, 4276c8 <ferror@plt+0x24d58>
  4276b8:	ldrh	w0, [x26, #6]
  4276bc:	tbnz	w0, #0, 4276cc <ferror@plt+0x24d5c>
  4276c0:	ldr	x0, [x27, #8]
  4276c4:	cbnz	x0, 4276cc <ferror@plt+0x24d5c>
  4276c8:	ldr	x26, [x27, #8]
  4276cc:	ldr	w0, [sp, #152]
  4276d0:	add	w0, w0, #0x1
  4276d4:	str	w0, [sp, #152]
  4276d8:	b	427690 <ferror@plt+0x24d20>
  4276dc:	sub	w1, w0, #0x3e
  4276e0:	and	w1, w1, #0xff
  4276e4:	cmp	w1, #0x4
  4276e8:	b.hi	427804 <ferror@plt+0x24e94>  // b.pmore
  4276ec:	mov	w5, #0x1                   	// #1
  4276f0:	mov	x0, x27
  4276f4:	str	w5, [sp, #192]
  4276f8:	bl	41fbec <ferror@plt+0x1d27c>
  4276fc:	mov	w2, w0
  427700:	ldr	w5, [sp, #192]
  427704:	cbz	w5, 42770c <ferror@plt+0x24d9c>
  427708:	lsl	x2, x2, #2
  42770c:	ldr	x1, [x19, #64]
  427710:	add	x2, x2, #0x3
  427714:	ldr	x0, [x1, #24]
  427718:	sub	x0, x0, x28
  42771c:	cmp	x2, x0
  427720:	b.ls	427754 <ferror@plt+0x24de4>  // b.plast
  427724:	ldr	x0, [x1, #16]
  427728:	str	x2, [sp, #192]
  42772c:	ldr	x1, [sp, #168]
  427730:	sub	x28, x28, x0
  427734:	mov	x0, x19
  427738:	str	w5, [sp, #204]
  42773c:	bl	42068c <ferror@plt+0x1dd1c>
  427740:	ldr	x0, [x19, #64]
  427744:	ldr	w5, [sp, #204]
  427748:	ldr	x2, [sp, #192]
  42774c:	ldr	x0, [x0, #16]
  427750:	add	x28, x0, x28
  427754:	ldr	x1, [x19, #64]
  427758:	sub	x0, x28, #0x1
  42775c:	ldr	x1, [x1, #16]
  427760:	cmp	x1, x0
  427764:	b.eq	427788 <ferror@plt+0x24e18>  // b.none
  427768:	cmp	x26, #0x0
  42776c:	csel	x26, x26, x27, ne  // ne = any
  427770:	ldrh	w0, [x26, #6]
  427774:	tbz	w0, #0, 427788 <ferror@plt+0x24e18>
  427778:	mov	x4, x28
  42777c:	mov	w0, #0x20                  	// #32
  427780:	strb	w0, [x4], #1
  427784:	mov	x28, x4
  427788:	cbz	w5, 427830 <ferror@plt+0x24ec0>
  42778c:	mov	x1, x2
  427790:	mov	x0, x19
  427794:	bl	4204e0 <ferror@plt+0x1db70>
  427798:	mov	x26, x0
  42779c:	mov	x1, x27
  4277a0:	mov	w3, #0x1                   	// #1
  4277a4:	mov	x0, x19
  4277a8:	ldr	x6, [x26, #16]
  4277ac:	str	x6, [sp, #192]
  4277b0:	mov	x2, x6
  4277b4:	bl	41fca4 <ferror@plt+0x1d334>
  4277b8:	ldr	x6, [sp, #192]
  4277bc:	sub	w2, w0, w6
  4277c0:	mov	x1, x6
  4277c4:	mov	x0, x28
  4277c8:	bl	425834 <ferror@plt+0x22ec4>
  4277cc:	mov	x1, x26
  4277d0:	mov	x28, x0
  4277d4:	mov	x0, x19
  4277d8:	bl	4204c0 <ferror@plt+0x1db50>
  4277dc:	ldrb	w0, [x27, #4]
  4277e0:	cmp	w0, #0x3d
  4277e4:	b.ne	42784c <ferror@plt+0x24edc>  // b.any
  4277e8:	ldr	x0, [x27, #16]
  4277ec:	ldrb	w0, [x0]
  4277f0:	cmp	w0, #0x5c
  4277f4:	b.ne	42784c <ferror@plt+0x24edc>  // b.any
  4277f8:	add	w23, w23, #0x1
  4277fc:	mov	x26, #0x0                   	// #0
  427800:	b	4276cc <ferror@plt+0x24d5c>
  427804:	sub	w1, w0, #0x38
  427808:	and	w1, w1, #0xff
  42780c:	cmp	w1, #0x4
  427810:	b.ls	4276ec <ferror@plt+0x24d7c>  // b.plast
  427814:	bl	41a97c <ferror@plt+0x1800c>
  427818:	tst	w0, #0xff
  42781c:	b.ne	4276ec <ferror@plt+0x24d7c>  // b.any
  427820:	ldrb	w0, [x27, #4]
  427824:	bl	41a98c <ferror@plt+0x1801c>
  427828:	and	w5, w0, #0xff
  42782c:	b	4276f0 <ferror@plt+0x24d80>
  427830:	mov	x2, x28
  427834:	mov	x1, x27
  427838:	mov	x0, x19
  42783c:	mov	w3, #0x1                   	// #1
  427840:	bl	41fca4 <ferror@plt+0x1d334>
  427844:	mov	x28, x0
  427848:	b	4277dc <ferror@plt+0x24e6c>
  42784c:	mov	x26, #0x0                   	// #0
  427850:	mov	w23, #0x0                   	// #0
  427854:	b	4276cc <ferror@plt+0x24d5c>
  427858:	tbz	w23, #0, 427870 <ferror@plt+0x24f00>
  42785c:	ldr	x2, [sp, #184]
  427860:	mov	x0, x19
  427864:	sub	x28, x28, #0x1
  427868:	mov	w1, #0x0                   	// #0
  42786c:	bl	419440 <ferror@plt+0x16ad0>
  427870:	mov	x4, x28
  427874:	mov	w0, #0x22                  	// #34
  427878:	add	x26, x28, #0x1
  42787c:	strb	w0, [x4], #2
  427880:	ldr	x0, [x19, #64]
  427884:	ldr	x23, [x0, #16]
  427888:	str	x4, [x0, #16]
  42788c:	mov	x0, x19
  427890:	sub	x26, x26, x23
  427894:	bl	41fa48 <ferror@plt+0x1d0d8>
  427898:	mov	w1, #0x3e                  	// #62
  42789c:	strb	wzr, [x23, w26, uxtw]
  4278a0:	strb	w1, [x0, #4]
  4278a4:	strh	wzr, [x0, #6]
  4278a8:	str	w26, [x0, #8]
  4278ac:	str	x23, [x0, #16]
  4278b0:	str	x0, [x22, #16]
  4278b4:	ldr	w23, [sp, #144]
  4278b8:	add	x24, x24, #0x18
  4278bc:	b	4275f8 <ferror@plt+0x24c88>
  4278c0:	tbnz	w0, #3, 4278d8 <ferror@plt+0x24f68>
  4278c4:	ldr	x0, [sp, #128]
  4278c8:	cmp	x0, x24
  4278cc:	b.eq	4278ec <ferror@plt+0x24f7c>  // b.none
  4278d0:	ldurh	w0, [x24, #-18]
  4278d4:	tbz	w0, #3, 4278ec <ferror@plt+0x24f7c>
  4278d8:	ldr	w27, [x22, #24]
  4278dc:	add	w23, w23, #0x1
  4278e0:	add	w0, w23, w27
  4278e4:	str	w0, [sp, #144]
  4278e8:	b	4278b4 <ferror@plt+0x24f44>
  4278ec:	ldr	x0, [x22, #8]
  4278f0:	cbnz	x0, 427a28 <ferror@plt+0x250b8>
  4278f4:	ldr	w0, [x22, #24]
  4278f8:	cbz	w0, 427a28 <ferror@plt+0x250b8>
  4278fc:	ldrb	w0, [x19, #1138]
  427900:	strb	wzr, [x19, #1138]
  427904:	cmp	w0, #0x0
  427908:	ldrb	w27, [x19, #1157]
  42790c:	cset	w28, ne  // ne = any
  427910:	mov	x0, #0x800                 	// #2048
  427914:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  427918:	str	x0, [x22, #8]
  42791c:	ldrb	w0, [x19, #1157]
  427920:	cbz	w0, 427930 <ferror@plt+0x24fc0>
  427924:	mov	x0, #0x400                 	// #1024
  427928:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  42792c:	str	x0, [x22, #40]
  427930:	ldr	x0, [sp, #136]
  427934:	ldr	x4, [x0, x26]
  427938:	ldr	w26, [x22, #24]
  42793c:	add	w26, w26, #0x1
  427940:	cbz	w27, 4279f0 <ferror@plt+0x25080>
  427944:	ldr	x3, [x22, #32]
  427948:	mov	w5, w26
  42794c:	mov	x0, x19
  427950:	mov	x2, #0x0                   	// #0
  427954:	mov	x1, #0x0                   	// #0
  427958:	bl	4255c4 <ferror@plt+0x22c54>
  42795c:	mov	x26, #0x100                 	// #256
  427960:	ldr	w27, [x22, #28]
  427964:	add	w27, w27, #0x1
  427968:	cmp	x27, x26
  42796c:	b.ls	4279a4 <ferror@plt+0x25034>  // b.plast
  427970:	ldr	x0, [x22, #8]
  427974:	lsl	x1, x27, #4
  427978:	lsl	x26, x27, #1
  42797c:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  427980:	str	x0, [x22, #8]
  427984:	ldrb	w0, [x19, #1157]
  427988:	cbz	w0, 4279a4 <ferror@plt+0x25034>
  42798c:	ldr	x0, [x22, #40]
  427990:	lsl	x1, x27, #3
  427994:	cbnz	x0, 427a14 <ferror@plt+0x250a4>
  427998:	mov	x0, x1
  42799c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  4279a0:	str	x0, [x22, #40]
  4279a4:	add	x1, sp, #0xf8
  4279a8:	mov	x0, x19
  4279ac:	bl	42834c <ferror@plt+0x259dc>
  4279b0:	mov	x1, x0
  4279b4:	ldrb	w0, [x0, #4]
  4279b8:	cmp	w0, #0x16
  4279bc:	b.eq	427a1c <ferror@plt+0x250ac>  // b.none
  4279c0:	ldrb	w0, [x19, #1157]
  4279c4:	mov	w4, #0x2                   	// #2
  4279c8:	ldr	w3, [x22, #28]
  4279cc:	ldr	w2, [sp, #248]
  4279d0:	cmp	w0, #0x0
  4279d4:	cset	w5, ne  // ne = any
  4279d8:	mov	x0, x22
  4279dc:	bl	4253dc <ferror@plt+0x22a6c>
  4279e0:	ldr	w0, [x22, #28]
  4279e4:	add	w0, w0, #0x1
  4279e8:	str	w0, [x22, #28]
  4279ec:	b	427960 <ferror@plt+0x24ff0>
  4279f0:	add	x0, x19, #0x88
  4279f4:	str	x4, [sp, #144]
  4279f8:	bl	425574 <ferror@plt+0x22c04>
  4279fc:	stp	xzr, xzr, [x0, #32]
  427a00:	ldr	x4, [sp, #144]
  427a04:	str	wzr, [x0, #48]
  427a08:	add	x26, x4, w26, uxtw #3
  427a0c:	stp	x4, x26, [x0, #16]
  427a10:	b	42795c <ferror@plt+0x24fec>
  427a14:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  427a18:	b	4279a0 <ferror@plt+0x25030>
  427a1c:	mov	x0, x19
  427a20:	bl	425f94 <ferror@plt+0x23624>
  427a24:	strb	w28, [x19, #1138]
  427a28:	ldr	w27, [x22, #28]
  427a2c:	add	w23, w23, #0x1
  427a30:	b	4278e0 <ferror@plt+0x24f70>
  427a34:	str	w23, [sp, #144]
  427a38:	b	4278b4 <ferror@plt+0x24f44>
  427a3c:	ldrb	w0, [x19, #1157]
  427a40:	add	x2, sp, #0xd8
  427a44:	mov	w1, w23
  427a48:	str	w0, [sp, #144]
  427a4c:	cmp	w0, #0x0
  427a50:	mov	x0, x19
  427a54:	csel	x2, x2, xzr, ne  // ne = any
  427a58:	bl	4254b8 <ferror@plt+0x22b48>
  427a5c:	mov	x24, x0
  427a60:	ldr	x0, [x0, #8]
  427a64:	str	x0, [sp, #152]
  427a68:	ldr	w0, [sp, #144]
  427a6c:	cbz	w0, 427b8c <ferror@plt+0x2521c>
  427a70:	cmp	w0, #0x1
  427a74:	ldr	w2, [sp, #200]
  427a78:	ldr	x0, [x19, #40]
  427a7c:	csel	w3, w23, w25, ne  // ne = any
  427a80:	mov	x1, x20
  427a84:	bl	423278 <ferror@plt+0x20908>
  427a88:	mov	x27, x0
  427a8c:	ldr	x0, [sp, #104]
  427a90:	mov	x2, #0xffffffffffffffd0    	// #-48
  427a94:	ldr	x22, [sp, #128]
  427a98:	mov	x23, #0x0                   	// #0
  427a9c:	ldrh	w3, [x0, #16]
  427aa0:	mov	w26, #0x0                   	// #0
  427aa4:	ldrb	w1, [x0, #19]
  427aa8:	mov	w0, #0x30                  	// #48
  427aac:	str	x19, [sp, #224]
  427ab0:	strb	wzr, [sp, #234]
  427ab4:	umaddl	x0, w0, w3, x2
  427ab8:	ubfx	x1, x1, #3, #1
  427abc:	ldr	x2, [sp, #136]
  427ac0:	strb	w1, [sp, #233]
  427ac4:	str	wzr, [sp, #236]
  427ac8:	add	x0, x2, x0
  427acc:	str	xzr, [sp, #240]
  427ad0:	ldr	w0, [x0, #24]
  427ad4:	cmp	w0, #0x0
  427ad8:	cset	w0, ne  // ne = any
  427adc:	strb	w0, [sp, #232]
  427ae0:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  427ae4:	add	x0, x0, #0x89
  427ae8:	str	x0, [sp, #168]
  427aec:	ldr	x0, [sp, #160]
  427af0:	cmp	x0, x22
  427af4:	b.ls	42805c <ferror@plt+0x256ec>  // b.plast
  427af8:	mov	x1, x22
  427afc:	add	x0, sp, #0xe0
  427b00:	bl	428b04 <ferror@plt+0x26194>
  427b04:	cmp	w0, #0x2
  427b08:	b.eq	427c48 <ferror@plt+0x252d8>  // b.none
  427b0c:	cmp	w0, #0x3
  427b10:	b.ne	427b94 <ferror@plt+0x25224>  // b.any
  427b14:	ldr	x0, [sp, #128]
  427b18:	cmp	x0, x22
  427b1c:	b.eq	427b74 <ferror@plt+0x25204>  // b.none
  427b20:	ldurh	w0, [x22, #-18]
  427b24:	tbnz	w0, #3, 427b74 <ferror@plt+0x25204>
  427b28:	mov	x1, x22
  427b2c:	mov	x0, x19
  427b30:	bl	425488 <ferror@plt+0x22b18>
  427b34:	mov	x2, x0
  427b38:	ldr	x1, [sp, #128]
  427b3c:	mov	x5, x27
  427b40:	ldrb	w0, [x19, #1157]
  427b44:	sub	x6, x22, x1
  427b48:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  427b4c:	movk	x1, #0xaaab
  427b50:	ldr	w4, [x2]
  427b54:	asr	x6, x6, #3
  427b58:	cmp	w0, #0x2
  427b5c:	mov	w3, w4
  427b60:	mov	x0, x24
  427b64:	mul	x6, x6, x1
  427b68:	ldr	x1, [sp, #216]
  427b6c:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  427b70:	bl	4256b4 <ferror@plt+0x22d44>
  427b74:	ldp	x1, x0, [x24, #8]
  427b78:	sub	x23, x0, #0x8
  427b7c:	cmp	x0, x1
  427b80:	csel	x23, x23, xzr, ne  // ne = any
  427b84:	add	x22, x22, #0x18
  427b88:	b	427aec <ferror@plt+0x2517c>
  427b8c:	mov	x27, #0x0                   	// #0
  427b90:	b	427a8c <ferror@plt+0x2511c>
  427b94:	cmp	w0, #0x4
  427b98:	b.ne	427b84 <ferror@plt+0x25214>  // b.any
  427b9c:	ldp	x2, x1, [x24, #8]
  427ba0:	cmp	x1, x2
  427ba4:	b.eq	427bf0 <ferror@plt+0x25280>  // b.none
  427ba8:	sub	x1, x1, #0x8
  427bac:	cmp	x1, #0x0
  427bb0:	ccmp	x1, x23, #0x4, ne  // ne = any
  427bb4:	b.eq	427bf4 <ferror@plt+0x25284>  // b.none
  427bb8:	ldr	x0, [x1]
  427bbc:	ldrb	w0, [x0, #4]
  427bc0:	cmp	w0, #0x53
  427bc4:	b.ne	427bf4 <ferror@plt+0x25284>  // b.any
  427bc8:	ldr	x0, [x24, #16]
  427bcc:	cmp	x2, x0
  427bd0:	b.cs	427bdc <ferror@plt+0x2526c>  // b.hs, b.nlast
  427bd4:	sub	x0, x0, #0x8
  427bd8:	str	x0, [x24, #16]
  427bdc:	ldr	x0, [x24, #16]
  427be0:	sub	x1, x0, #0x8
  427be4:	cmp	x2, x0
  427be8:	csel	x1, x1, xzr, ne  // ne = any
  427bec:	b	427bac <ferror@plt+0x2523c>
  427bf0:	mov	x1, #0x0                   	// #0
  427bf4:	ldrh	w0, [x22, #6]
  427bf8:	tbz	w0, #3, 427c24 <ferror@plt+0x252b4>
  427bfc:	cbz	x1, 427c1c <ferror@plt+0x252ac>
  427c00:	ldr	x0, [x1]
  427c04:	ldrb	w0, [x0, #4]
  427c08:	cmp	w0, #0x53
  427c0c:	b.eq	427c1c <ferror@plt+0x252ac>  // b.none
  427c10:	add	x2, x22, #0x6
  427c14:	mov	x0, x19
  427c18:	bl	42564c <ferror@plt+0x22cdc>
  427c1c:	mov	x23, #0x0                   	// #0
  427c20:	b	427b84 <ferror@plt+0x25214>
  427c24:	ldr	w4, [x19, #664]
  427c28:	add	x2, x19, #0x298
  427c2c:	ldr	x1, [sp, #216]
  427c30:	mov	x0, x24
  427c34:	mov	w3, w4
  427c38:	mov	w6, #0x0                   	// #0
  427c3c:	mov	x5, #0x0                   	// #0
  427c40:	bl	4256b4 <ferror@plt+0x22d44>
  427c44:	b	427c1c <ferror@plt+0x252ac>
  427c48:	ldrb	w0, [x22, #4]
  427c4c:	ldrb	w1, [x19, #1157]
  427c50:	cmp	w0, #0x50
  427c54:	b.eq	427c9c <ferror@plt+0x2532c>  // b.none
  427c58:	ldr	x0, [sp, #128]
  427c5c:	cmp	w1, #0x2
  427c60:	ldr	w4, [x22]
  427c64:	mov	x5, x27
  427c68:	sub	x6, x22, x0
  427c6c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  427c70:	movk	x0, #0xaaab
  427c74:	mov	x2, x22
  427c78:	asr	x6, x6, #3
  427c7c:	mov	w3, w4
  427c80:	ldr	x1, [sp, #216]
  427c84:	mul	x6, x6, x0
  427c88:	mov	x0, x24
  427c8c:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  427c90:	add	w26, w26, #0x1
  427c94:	bl	4256b4 <ferror@plt+0x22d44>
  427c98:	b	427b84 <ferror@plt+0x25214>
  427c9c:	ldr	w0, [x22, #8]
  427ca0:	mov	w2, #0x30                  	// #48
  427ca4:	cmp	w1, #0x0
  427ca8:	sub	w0, w0, #0x1
  427cac:	cset	w1, ne  // ne = any
  427cb0:	umull	x0, w0, w2
  427cb4:	ldr	x2, [sp, #136]
  427cb8:	add	x3, x2, x0
  427cbc:	ldrh	w2, [x22, #6]
  427cc0:	tbz	w2, #2, 427e68 <ferror@plt+0x254f8>
  427cc4:	mov	x28, #0x0                   	// #0
  427cc8:	mov	w25, #0x1                   	// #1
  427ccc:	add	x4, x3, #0x10
  427cd0:	add	x0, sp, #0xf8
  427cd4:	mov	w2, #0x1                   	// #1
  427cd8:	bl	425420 <ferror@plt+0x22ab0>
  427cdc:	ldrb	w0, [x19, #16]
  427ce0:	cbz	w0, 427cec <ferror@plt+0x2537c>
  427ce4:	ldrb	w0, [x19, #17]
  427ce8:	cbz	w0, 427d60 <ferror@plt+0x253f0>
  427cec:	ldr	x0, [sp, #128]
  427cf0:	cmp	x0, x22
  427cf4:	b.eq	427d60 <ferror@plt+0x253f0>  // b.none
  427cf8:	ldurh	w0, [x22, #-18]
  427cfc:	tbnz	w0, #3, 427d60 <ferror@plt+0x253f0>
  427d00:	mov	x1, x23
  427d04:	mov	x0, x24
  427d08:	bl	42578c <ferror@plt+0x22e1c>
  427d0c:	tst	w0, #0xff
  427d10:	b.ne	427d60 <ferror@plt+0x253f0>  // b.any
  427d14:	mov	x1, x22
  427d18:	mov	x0, x19
  427d1c:	bl	425488 <ferror@plt+0x22b18>
  427d20:	mov	x2, x0
  427d24:	ldr	x1, [sp, #128]
  427d28:	mov	x5, x27
  427d2c:	ldrb	w0, [x19, #1157]
  427d30:	sub	x6, x22, x1
  427d34:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  427d38:	movk	x1, #0xaaab
  427d3c:	ldr	w4, [x2]
  427d40:	asr	x6, x6, #3
  427d44:	cmp	w0, #0x2
  427d48:	mov	w3, w4
  427d4c:	mov	x0, x24
  427d50:	mul	x6, x6, x1
  427d54:	ldr	x1, [sp, #216]
  427d58:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  427d5c:	bl	4256b4 <ferror@plt+0x22d44>
  427d60:	cbz	w25, 427f98 <ferror@plt+0x25628>
  427d64:	ldr	x0, [sp, #128]
  427d68:	mov	w9, #0x0                   	// #0
  427d6c:	sub	x8, x22, x0
  427d70:	mov	w0, #0xaaab                	// #43691
  427d74:	movk	w0, #0xaaaa, lsl #16
  427d78:	asr	x8, x8, #3
  427d7c:	mul	w8, w8, w0
  427d80:	ldr	w0, [sp, #144]
  427d84:	add	w6, w26, w9
  427d88:	ldr	x1, [sp, #216]
  427d8c:	cmp	w0, #0x1
  427d90:	ldrb	w0, [x19, #1157]
  427d94:	csel	w6, w6, w26, gt
  427d98:	cmp	w0, #0x1
  427d9c:	ldr	x0, [sp, #256]
  427da0:	csel	w6, w6, w8, hi  // hi = pmore
  427da4:	cbz	x0, 427f88 <ferror@plt+0x25618>
  427da8:	ldr	x2, [x0]
  427dac:	ldrb	w3, [sp, #248]
  427db0:	cbz	w3, 427f90 <ferror@plt+0x25620>
  427db4:	ldr	x0, [sp, #264]
  427db8:	mov	x5, x27
  427dbc:	ldr	w3, [x0]
  427dc0:	mov	x0, x24
  427dc4:	ldr	w4, [x22]
  427dc8:	str	w8, [sp, #184]
  427dcc:	str	w9, [sp, #192]
  427dd0:	bl	4256b4 <ferror@plt+0x22d44>
  427dd4:	add	x0, sp, #0xf8
  427dd8:	bl	425544 <ferror@plt+0x22bd4>
  427ddc:	ldr	w9, [sp, #192]
  427de0:	ldr	w8, [sp, #184]
  427de4:	add	w9, w9, #0x1
  427de8:	cmp	w25, w9
  427dec:	b.ne	427d80 <ferror@plt+0x25410>  // b.any
  427df0:	ldrh	w0, [x22, #6]
  427df4:	tbz	w0, #3, 427e08 <ferror@plt+0x25498>
  427df8:	ldp	x1, x0, [x24, #8]
  427dfc:	sub	x7, x0, #0x8
  427e00:	cmp	x0, x1
  427e04:	csel	x28, x7, xzr, ne  // ne = any
  427e08:	ldrb	w0, [x19, #16]
  427e0c:	cbnz	w0, 427e4c <ferror@plt+0x254dc>
  427e10:	ldrh	w0, [x22, #6]
  427e14:	tbnz	w0, #3, 427e4c <ferror@plt+0x254dc>
  427e18:	mov	x1, x23
  427e1c:	mov	x0, x24
  427e20:	bl	42578c <ferror@plt+0x22e1c>
  427e24:	tst	w0, #0xff
  427e28:	b.ne	427e4c <ferror@plt+0x254dc>  // b.any
  427e2c:	ldr	w4, [x19, #664]
  427e30:	add	x2, x19, #0x298
  427e34:	ldr	x1, [sp, #216]
  427e38:	mov	x0, x24
  427e3c:	mov	w3, w4
  427e40:	mov	w6, #0x0                   	// #0
  427e44:	mov	x5, #0x0                   	// #0
  427e48:	bl	4256b4 <ferror@plt+0x22d44>
  427e4c:	cbz	x28, 427e60 <ferror@plt+0x254f0>
  427e50:	add	x2, x22, #0x6
  427e54:	mov	x1, x28
  427e58:	mov	x0, x19
  427e5c:	bl	42564c <ferror@plt+0x22cdc>
  427e60:	add	w26, w26, w25
  427e64:	b	427b84 <ferror@plt+0x25214>
  427e68:	tbz	w2, #3, 427e8c <ferror@plt+0x2551c>
  427e6c:	ldr	x2, [sp, #136]
  427e70:	ldr	w25, [x3, #24]
  427e74:	ldr	x4, [x2, x0]
  427e78:	add	x0, sp, #0xf8
  427e7c:	mov	w2, #0x0                   	// #0
  427e80:	bl	425420 <ferror@plt+0x22ab0>
  427e84:	mov	x28, #0x0                   	// #0
  427e88:	b	427cdc <ferror@plt+0x2536c>
  427e8c:	ldr	x2, [sp, #128]
  427e90:	cmp	x2, x22
  427e94:	b.eq	427f34 <ferror@plt+0x255c4>  // b.none
  427e98:	ldurh	w2, [x22, #-18]
  427e9c:	tbz	w2, #3, 427f34 <ferror@plt+0x255c4>
  427ea0:	ldr	x2, [sp, #136]
  427ea4:	ldr	w25, [x3, #24]
  427ea8:	ldr	x4, [x2, x0]
  427eac:	add	x0, sp, #0xf8
  427eb0:	mov	w2, #0x0                   	// #0
  427eb4:	bl	425420 <ferror@plt+0x22ab0>
  427eb8:	ldp	x1, x0, [x24, #8]
  427ebc:	sub	x2, x0, x1
  427ec0:	tst	x2, #0x7fffffff8
  427ec4:	b.eq	427e84 <ferror@plt+0x25514>  // b.none
  427ec8:	cmp	x0, x1
  427ecc:	b.eq	428338 <ferror@plt+0x259c8>  // b.none
  427ed0:	ldur	x2, [x0, #-8]
  427ed4:	sub	x28, x0, #0x8
  427ed8:	ldrb	w2, [x2, #4]
  427edc:	cmp	w2, #0x13
  427ee0:	b.ne	427f24 <ferror@plt+0x255b4>  // b.any
  427ee4:	ldr	x2, [sp, #104]
  427ee8:	ldrb	w2, [x2, #19]
  427eec:	tbz	w2, #3, 427f24 <ferror@plt+0x255b4>
  427ef0:	ldr	x2, [sp, #104]
  427ef4:	ldr	w3, [x22, #8]
  427ef8:	ldrh	w2, [x2, #16]
  427efc:	cmp	w3, w2
  427f00:	b.ne	427f24 <ferror@plt+0x255b4>  // b.any
  427f04:	ldr	x2, [sp, #256]
  427f08:	cbz	x2, 427f14 <ferror@plt+0x255a4>
  427f0c:	ldr	x2, [x2]
  427f10:	cbnz	x2, 427cdc <ferror@plt+0x2536c>
  427f14:	cmp	x0, x1
  427f18:	b.ls	427e84 <ferror@plt+0x25514>  // b.plast
  427f1c:	str	x28, [x24, #16]
  427f20:	b	427e84 <ferror@plt+0x25514>
  427f24:	cmp	w25, #0x0
  427f28:	ccmp	x23, x28, #0x4, eq  // eq = none
  427f2c:	csel	x28, x28, xzr, ne  // ne = any
  427f30:	b	427cdc <ferror@plt+0x2536c>
  427f34:	ldr	x4, [x3, #8]
  427f38:	mov	w2, #0x2                   	// #2
  427f3c:	ldr	w25, [x3, #28]
  427f40:	add	x0, sp, #0xf8
  427f44:	bl	425420 <ferror@plt+0x22ab0>
  427f48:	mov	x1, x23
  427f4c:	mov	x0, x24
  427f50:	bl	42578c <ferror@plt+0x22e1c>
  427f54:	tst	w0, #0xff
  427f58:	b.eq	427e84 <ferror@plt+0x25514>  // b.none
  427f5c:	cbz	w25, 427e84 <ferror@plt+0x25514>
  427f60:	ldr	x0, [sp, #256]
  427f64:	cbz	x0, 428344 <ferror@plt+0x259d4>
  427f68:	ldr	x0, [x0]
  427f6c:	ldrb	w0, [x0, #4]
  427f70:	cmp	w0, #0x53
  427f74:	b.ne	427e84 <ferror@plt+0x25514>  // b.any
  427f78:	add	x0, sp, #0xf8
  427f7c:	sub	w25, w25, #0x1
  427f80:	bl	425544 <ferror@plt+0x22bd4>
  427f84:	b	427f5c <ferror@plt+0x255ec>
  427f88:	mov	x2, #0x0                   	// #0
  427f8c:	b	427dac <ferror@plt+0x2543c>
  427f90:	ldr	x0, [x0]
  427f94:	b	427db8 <ferror@plt+0x25448>
  427f98:	ldrb	w0, [x19, #1154]
  427f9c:	cbz	w0, 427fc4 <ferror@plt+0x25654>
  427fa0:	ldrb	w0, [x19, #1152]
  427fa4:	cbnz	w0, 427fc4 <ferror@plt+0x25654>
  427fa8:	ldr	x0, [sp, #104]
  427fac:	ldrb	w0, [x0, #19]
  427fb0:	tbnz	w0, #4, 427fc4 <ferror@plt+0x25654>
  427fb4:	ldr	x0, [x19]
  427fb8:	cbz	x0, 428010 <ferror@plt+0x256a0>
  427fbc:	ldrb	w0, [x0, #106]
  427fc0:	cbz	w0, 428010 <ferror@plt+0x256a0>
  427fc4:	ldrsb	w0, [x19, #1198]
  427fc8:	cmp	w0, #0x0
  427fcc:	b.le	427e08 <ferror@plt+0x25498>
  427fd0:	ldrb	w0, [x19, #1120]
  427fd4:	cbnz	w0, 427e08 <ferror@plt+0x25498>
  427fd8:	ldr	x0, [sp, #104]
  427fdc:	ldrb	w0, [x0, #19]
  427fe0:	tbnz	w0, #4, 427e08 <ferror@plt+0x25498>
  427fe4:	ldr	x0, [x19]
  427fe8:	cbz	x0, 427ff4 <ferror@plt+0x25684>
  427fec:	ldrb	w0, [x0, #106]
  427ff0:	cbnz	w0, 427e08 <ferror@plt+0x25498>
  427ff4:	ldr	w4, [x22, #8]
  427ff8:	mov	x0, x19
  427ffc:	ldr	x3, [x20]
  428000:	mov	w1, #0x16                  	// #22
  428004:	ldr	x2, [sp, #168]
  428008:	bl	4194ac <ferror@plt+0x16b3c>
  42800c:	b	427e08 <ferror@plt+0x25498>
  428010:	ldrb	w0, [x19, #1120]
  428014:	cbz	w0, 428038 <ferror@plt+0x256c8>
  428018:	ldr	w4, [x22, #8]
  42801c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  428020:	ldr	x3, [x20]
  428024:	add	x2, x2, #0x39
  428028:	mov	w1, #0x15                  	// #21
  42802c:	mov	x0, x19
  428030:	bl	41951c <ferror@plt+0x16bac>
  428034:	b	427e08 <ferror@plt+0x25498>
  428038:	ldrsb	w0, [x19, #1198]
  42803c:	cmp	w0, #0x0
  428040:	cbz	w0, 427e08 <ferror@plt+0x25498>
  428044:	cset	w1, gt
  428048:	ldr	w4, [x22, #8]
  42804c:	add	w1, w1, #0x15
  428050:	ldr	x3, [x20]
  428054:	ldr	x2, [sp, #168]
  428058:	b	42802c <ferror@plt+0x256bc>
  42805c:	ldp	x5, x22, [x24, #8]
  428060:	ldr	w0, [sp, #144]
  428064:	sub	x22, x22, x5
  428068:	lsr	x22, x22, #3
  42806c:	cbz	w0, 428100 <ferror@plt+0x25790>
  428070:	ldr	x4, [sp, #152]
  428074:	mov	w5, w22
  428078:	ldr	x3, [sp, #216]
  42807c:	mov	x2, x24
  428080:	mov	x1, x20
  428084:	mov	x0, x19
  428088:	bl	4255c4 <ferror@plt+0x22c54>
  42808c:	ldp	x1, x0, [x24, #8]
  428090:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x3e198>
  428094:	sub	x0, x0, x1
  428098:	ldr	w1, [x2, #1960]
  42809c:	lsr	x0, x0, #3
  4280a0:	add	w0, w1, w0
  4280a4:	str	w0, [x2, #1960]
  4280a8:	ldr	x0, [sp, #112]
  4280ac:	mov	w23, #0x0                   	// #0
  4280b0:	ldr	x22, [x0, #8]
  4280b4:	add	x22, x22, #0x8
  4280b8:	ldr	w0, [sp, #124]
  4280bc:	cmp	w23, w0
  4280c0:	b.eq	428120 <ferror@plt+0x257b0>  // b.none
  4280c4:	ldr	x0, [x22]
  4280c8:	cbz	x0, 4280d4 <ferror@plt+0x25764>
  4280cc:	bl	402730 <free@plt>
  4280d0:	str	xzr, [x22]
  4280d4:	ldr	x0, [x22, #24]
  4280d8:	cbz	x0, 4280e4 <ferror@plt+0x25774>
  4280dc:	bl	402730 <free@plt>
  4280e0:	str	xzr, [x22, #24]
  4280e4:	ldr	x0, [x22, #32]
  4280e8:	cbz	x0, 4280f4 <ferror@plt+0x25784>
  4280ec:	bl	402730 <free@plt>
  4280f0:	str	xzr, [x22, #32]
  4280f4:	add	w23, w23, #0x1
  4280f8:	add	x22, x22, #0x30
  4280fc:	b	4280b8 <ferror@plt+0x25748>
  428100:	add	x0, x19, #0x88
  428104:	bl	425574 <ferror@plt+0x22c04>
  428108:	ldr	x1, [sp, #152]
  42810c:	stp	x24, x20, [x0, #32]
  428110:	str	wzr, [x0, #48]
  428114:	add	x22, x1, w22, uxtw #3
  428118:	stp	x1, x22, [x0, #16]
  42811c:	b	42808c <ferror@plt+0x2571c>
  428120:	ldr	x0, [sp, #112]
  428124:	bl	4206e0 <ferror@plt+0x1dd70>
  428128:	ldrh	w0, [x20, #18]
  42812c:	ubfx	x1, x0, #2, #8
  428130:	orr	w2, w1, #0x10
  428134:	bfi	w0, w2, #2, #8
  428138:	strh	w0, [x20, #18]
  42813c:	tbnz	w1, #5, 42814c <ferror@plt+0x257dc>
  428140:	mov	x1, x20
  428144:	mov	x0, x19
  428148:	bl	426f84 <ferror@plt+0x24614>
  42814c:	ldr	x3, [x19, #1032]
  428150:	cbz	x3, 428164 <ferror@plt+0x257f4>
  428154:	ldr	w1, [sp, #200]
  428158:	mov	x2, x20
  42815c:	mov	x0, x19
  428160:	blr	x3
  428164:	ldr	x0, [sp, #104]
  428168:	ldr	x1, [sp, #104]
  42816c:	ldrb	w0, [x0, #19]
  428170:	orr	w0, w0, #0x20
  428174:	strb	w0, [x1, #19]
  428178:	ldrh	w0, [x1, #16]
  42817c:	cbnz	w0, 428238 <ferror@plt+0x258c8>
  428180:	mov	x0, x1
  428184:	bl	425750 <ferror@plt+0x22de0>
  428188:	mov	w24, w0
  42818c:	ldr	x0, [sp, #104]
  428190:	add	x22, x0, #0x18
  428194:	ldrb	w0, [x19, #1157]
  428198:	cbz	w0, 4282c8 <ferror@plt+0x25958>
  42819c:	add	x2, sp, #0xf8
  4281a0:	mov	w1, w24
  4281a4:	mov	x0, x19
  4281a8:	str	xzr, [sp, #248]
  4281ac:	bl	4254b8 <ferror@plt+0x22b48>
  4281b0:	mov	x23, x0
  4281b4:	ldr	w2, [sp, #200]
  4281b8:	mov	w3, w24
  4281bc:	ldr	x0, [x19, #40]
  4281c0:	mov	x1, x20
  4281c4:	mov	w25, #0x0                   	// #0
  4281c8:	bl	423278 <ferror@plt+0x20908>
  4281cc:	mov	x26, x0
  4281d0:	cmp	w24, w25
  4281d4:	ldr	x1, [sp, #248]
  4281d8:	b.eq	42820c <ferror@plt+0x2589c>  // b.none
  4281dc:	ldr	w4, [x22]
  4281e0:	mov	w6, w25
  4281e4:	mov	x2, x22
  4281e8:	mov	x5, x26
  4281ec:	mov	x0, x23
  4281f0:	mov	w3, w4
  4281f4:	add	w25, w25, #0x1
  4281f8:	add	x22, x22, #0x18
  4281fc:	bl	4256b4 <ferror@plt+0x22d44>
  428200:	b	4281d0 <ferror@plt+0x25860>
  428204:	mov	x21, #0x0                   	// #0
  428208:	b	428128 <ferror@plt+0x257b8>
  42820c:	ldr	x4, [x23, #8]
  428210:	mov	x3, x1
  428214:	mov	w5, w24
  428218:	mov	x2, x23
  42821c:	mov	x1, x20
  428220:	mov	x0, x19
  428224:	bl	4255c4 <ferror@plt+0x22c54>
  428228:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  42822c:	ldr	w0, [x1, #1960]
  428230:	add	w24, w0, w24
  428234:	str	w24, [x1, #1960]
  428238:	cbz	x21, 4282e0 <ferror@plt+0x25970>
  42823c:	ldrb	w0, [x19, #16]
  428240:	cbnz	w0, 428264 <ferror@plt+0x258f4>
  428244:	ldr	x1, [sp, #176]
  428248:	mov	x0, x19
  42824c:	bl	425488 <ferror@plt+0x22b18>
  428250:	mov	x2, x0
  428254:	mov	w3, #0x1                   	// #1
  428258:	mov	x0, x19
  42825c:	mov	x1, #0x0                   	// #0
  428260:	bl	425d34 <ferror@plt+0x233c4>
  428264:	adrp	x23, 478000 <_obstack_memory_used@@Base+0x3e198>
  428268:	add	x25, x19, #0x88
  42826c:	add	x23, x23, #0x7a8
  428270:	mov	x24, x21
  428274:	mov	x0, x25
  428278:	ldr	x21, [x21]
  42827c:	ldp	x22, x20, [x24, #8]
  428280:	str	xzr, [x24]
  428284:	bl	425574 <ferror@plt+0x22c04>
  428288:	str	x22, [x0, #16]
  42828c:	stp	x24, xzr, [x0, #32]
  428290:	sub	x20, x20, x22
  428294:	str	wzr, [x0, #48]
  428298:	asr	x20, x20, #3
  42829c:	add	x22, x22, w20, uxtw #3
  4282a0:	str	x22, [x0, #24]
  4282a4:	ldrb	w0, [x19, #1157]
  4282a8:	cbnz	w0, 4282b8 <ferror@plt+0x25948>
  4282ac:	ldr	w0, [x23]
  4282b0:	add	w20, w0, w20
  4282b4:	str	w20, [x23]
  4282b8:	cbnz	x21, 428270 <ferror@plt+0x25900>
  4282bc:	mov	w0, #0x2                   	// #2
  4282c0:	strb	wzr, [x19, #192]
  4282c4:	b	427534 <ferror@plt+0x24bc4>
  4282c8:	mov	w3, w24
  4282cc:	mov	x2, x22
  4282d0:	mov	x1, x20
  4282d4:	mov	x0, x19
  4282d8:	bl	425d34 <ferror@plt+0x233c4>
  4282dc:	b	428228 <ferror@plt+0x258b8>
  4282e0:	mov	w0, #0x1                   	// #1
  4282e4:	strb	wzr, [x19, #192]
  4282e8:	b	427534 <ferror@plt+0x24bc4>
  4282ec:	ldr	x1, [x19, #184]
  4282f0:	strb	wzr, [x19, #192]
  4282f4:	ldrb	w0, [x1, #18]
  4282f8:	and	w0, w0, #0x3
  4282fc:	cmp	w0, #0x2
  428300:	b.ne	428318 <ferror@plt+0x259a8>  // b.any
  428304:	ldr	x0, [x1, #24]
  428308:	ldrb	w0, [x0, #19]
  42830c:	tbz	w0, #2, 428318 <ferror@plt+0x259a8>
  428310:	ldrb	w0, [x19, #1157]
  428314:	cbnz	w0, 428330 <ferror@plt+0x259c0>
  428318:	ldr	w3, [x19, #176]
  42831c:	ldr	w2, [sp, #200]
  428320:	mov	x1, x20
  428324:	mov	x0, x19
  428328:	bl	425d98 <ferror@plt+0x23428>
  42832c:	b	427534 <ferror@plt+0x24bc4>
  428330:	ldr	w3, [sp, #200]
  428334:	b	42831c <ferror@plt+0x259ac>
  428338:	mov	x0, #0x0                   	// #0
  42833c:	ldr	x0, [x0]
  428340:	brk	#0x3e8
  428344:	ldrb	w0, [x0, #4]
  428348:	b	428340 <ferror@plt+0x259d0>
  42834c:	stp	x29, x30, [sp, #-112]!
  428350:	mov	x29, sp
  428354:	stp	x19, x20, [sp, #16]
  428358:	mov	x19, x0
  42835c:	stp	x23, x24, [sp, #48]
  428360:	mov	x24, x1
  428364:	stp	x25, x26, [sp, #64]
  428368:	adrp	x25, 478000 <_obstack_memory_used@@Base+0x3e198>
  42836c:	add	x25, x25, #0x7a8
  428370:	ldrb	w26, [x0, #192]
  428374:	stp	x21, x22, [sp, #32]
  428378:	mov	w22, #0x0                   	// #0
  42837c:	str	x27, [sp, #80]
  428380:	ldr	x21, [x19, #136]
  428384:	ldr	x0, [x21, #8]
  428388:	cbnz	x0, 428470 <ferror@plt+0x25b00>
  42838c:	mov	x0, x19
  428390:	bl	4228f4 <ferror@plt+0x1ff84>
  428394:	ldr	w22, [x0]
  428398:	mov	x20, x0
  42839c:	ldrb	w1, [x19, #16]
  4283a0:	ldrb	w0, [x20, #4]
  4283a4:	cbz	w1, 4283b0 <ferror@plt+0x25a40>
  4283a8:	cmp	w0, #0x4f
  4283ac:	b.eq	428380 <ferror@plt+0x25a10>  // b.none
  4283b0:	cmp	w0, #0x35
  4283b4:	b.ne	4284b0 <ferror@plt+0x25b40>  // b.any
  4283b8:	ldr	x4, [x20, #8]
  4283bc:	ldrb	w0, [x4, #18]
  4283c0:	tst	x0, #0x3
  4283c4:	b.eq	4284b0 <ferror@plt+0x25b40>  // b.none
  4283c8:	ldrh	w0, [x20, #6]
  4283cc:	tbnz	w0, #10, 4284b0 <ferror@plt+0x25b40>
  4283d0:	ldrh	w0, [x4, #18]
  4283d4:	ubfx	x2, x0, #2, #8
  4283d8:	tbnz	w0, #6, 428780 <ferror@plt+0x25e10>
  4283dc:	ldrb	w0, [x19, #192]
  4283e0:	cbnz	w0, 4283fc <ferror@plt+0x25a8c>
  4283e4:	ldr	x0, [x19, #136]
  4283e8:	bl	42546c <ferror@plt+0x22afc>
  4283ec:	cbnz	x0, 4283fc <ferror@plt+0x25a8c>
  4283f0:	ldr	w0, [x20]
  4283f4:	str	w0, [x19, #176]
  4283f8:	str	x4, [x19, #184]
  4283fc:	ldrb	w0, [x19, #24]
  428400:	cbnz	w0, 4284b0 <ferror@plt+0x25b40>
  428404:	tbz	w2, #6, 428770 <ferror@plt+0x25e00>
  428408:	ldr	x0, [x19, #992]
  42840c:	cbz	x0, 4284b0 <ferror@plt+0x25b40>
  428410:	mov	w1, #0x0                   	// #0
  428414:	mov	x0, x19
  428418:	bl	422a38 <ferror@plt+0x200c8>
  42841c:	ldrb	w1, [x0, #4]
  428420:	cmp	w1, #0x53
  428424:	b.eq	428720 <ferror@plt+0x25db0>  // b.none
  428428:	ldrb	w21, [x0, #6]
  42842c:	and	w21, w21, #0x1
  428430:	ldr	x2, [x19, #992]
  428434:	mov	x1, x20
  428438:	mov	x0, x19
  42843c:	blr	x2
  428440:	mov	x1, x0
  428444:	cbz	x0, 428728 <ferror@plt+0x25db8>
  428448:	mov	w3, w22
  42844c:	mov	x2, x20
  428450:	mov	x0, x19
  428454:	bl	427044 <ferror@plt+0x246d4>
  428458:	cbz	w0, 4284b0 <ferror@plt+0x25b40>
  42845c:	ldrb	w1, [x19, #16]
  428460:	cbnz	w1, 428380 <ferror@plt+0x25a10>
  428464:	cmp	w0, #0x2
  428468:	b.eq	428380 <ferror@plt+0x25a10>  // b.none
  42846c:	b	4286f4 <ferror@plt+0x25d84>
  428470:	ldr	w2, [x21, #48]
  428474:	cmp	w2, #0x1
  428478:	b.ne	42851c <ferror@plt+0x25bac>  // b.any
  42847c:	ldp	x20, x0, [x21, #16]
  428480:	cmp	x20, x0
  428484:	b.ne	42855c <ferror@plt+0x25bec>  // b.any
  428488:	ldr	x0, [x21, #40]
  42848c:	cbz	x0, 42849c <ferror@plt+0x25b2c>
  428490:	ldr	w0, [x25, #4]
  428494:	add	w0, w0, #0x1
  428498:	str	w0, [x25, #4]
  42849c:	mov	x0, x19
  4284a0:	bl	425f94 <ferror@plt+0x23624>
  4284a4:	ldrb	w0, [x19, #16]
  4284a8:	cbnz	w0, 428380 <ferror@plt+0x25a10>
  4284ac:	add	x20, x19, #0x298
  4284b0:	cbz	x24, 4284f8 <ferror@plt+0x25b88>
  4284b4:	cbnz	w22, 4284bc <ferror@plt+0x25b4c>
  4284b8:	ldr	w22, [x20]
  4284bc:	str	w22, [x24]
  4284c0:	ldrb	w0, [x19, #1157]
  4284c4:	cbnz	w0, 4284dc <ferror@plt+0x25b6c>
  4284c8:	ldr	x0, [x19, #136]
  4284cc:	bl	42546c <ferror@plt+0x22afc>
  4284d0:	cbz	x0, 4284dc <ferror@plt+0x25b6c>
  4284d4:	ldr	w0, [x19, #176]
  4284d8:	str	w0, [x24]
  4284dc:	ldrb	w1, [x19, #1160]
  4284e0:	ldr	w0, [x24]
  4284e4:	cbz	w1, 4284f4 <ferror@plt+0x25b84>
  4284e8:	ldrb	w1, [x19, #16]
  4284ec:	cbz	w1, 4284f4 <ferror@plt+0x25b84>
  4284f0:	ldr	w0, [x19, #48]
  4284f4:	str	w0, [x24]
  4284f8:	strb	w26, [x19, #192]
  4284fc:	mov	x0, x20
  428500:	ldp	x19, x20, [sp, #16]
  428504:	ldp	x21, x22, [sp, #32]
  428508:	ldp	x23, x24, [sp, #48]
  42850c:	ldp	x25, x26, [sp, #64]
  428510:	ldr	x27, [sp, #80]
  428514:	ldp	x29, x30, [sp], #112
  428518:	ret
  42851c:	tst	w2, #0xfffffffd
  428520:	b.ne	428544 <ferror@plt+0x25bd4>  // b.any
  428524:	ldp	x0, x1, [x21, #16]
  428528:	cmp	x0, x1
  42852c:	b.eq	428488 <ferror@plt+0x25b18>  // b.none
  428530:	add	x3, x0, #0x8
  428534:	cbnz	w2, 4285d4 <ferror@plt+0x25c64>
  428538:	ldr	x20, [x0]
  42853c:	ldr	w22, [x20]
  428540:	b	4285f8 <ferror@plt+0x25c88>
  428544:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  428548:	add	x2, x2, #0xd7
  42854c:	mov	w1, #0xa2f                 	// #2607
  428550:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x19198>
  428554:	add	x0, x0, #0x9ee
  428558:	bl	402980 <ferror@plt+0x10>
  42855c:	mov	x0, x20
  428560:	ldr	w22, [x0], #24
  428564:	str	x0, [x21, #16]
  428568:	ldrh	w0, [x20, #6]
  42856c:	tbz	w0, #3, 42839c <ferror@plt+0x25a2c>
  428570:	mov	x0, x21
  428574:	str	x20, [sp, #96]
  428578:	bl	42546c <ferror@plt+0x22afc>
  42857c:	cbz	x0, 428610 <ferror@plt+0x25ca0>
  428580:	cmp	w2, #0x2
  428584:	b.ne	428620 <ferror@plt+0x25cb0>  // b.any
  428588:	ldr	x0, [x21, #40]
  42858c:	ldr	x0, [x0, #16]
  428590:	ldur	w27, [x0, #-4]
  428594:	mov	x23, #0x0                   	// #0
  428598:	ldr	w0, [x21, #48]
  42859c:	cmp	w0, #0x1
  4285a0:	b.ne	428628 <ferror@plt+0x25cb8>  // b.any
  4285a4:	ldr	x23, [x21, #16]
  4285a8:	add	x0, x23, #0x18
  4285ac:	str	x0, [x21, #16]
  4285b0:	ldrb	w0, [x23, #4]
  4285b4:	cmp	w0, #0x53
  4285b8:	b.ne	42866c <ferror@plt+0x25cfc>  // b.any
  4285bc:	ldrh	w0, [x23, #6]
  4285c0:	tbz	w0, #3, 42866c <ferror@plt+0x25cfc>
  4285c4:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  4285c8:	mov	w1, #0x380                 	// #896
  4285cc:	add	x2, x2, #0x10e
  4285d0:	b	428550 <ferror@plt+0x25be0>
  4285d4:	cmp	w2, #0x2
  4285d8:	b.ne	428600 <ferror@plt+0x25c90>  // b.any
  4285dc:	ldr	x1, [x21, #40]
  4285e0:	ldr	x20, [x0]
  4285e4:	ldr	x0, [x1, #8]
  4285e8:	cbz	x0, 42853c <ferror@plt+0x25bcc>
  4285ec:	ldr	x0, [x1, #16]
  4285f0:	ldr	w22, [x0], #4
  4285f4:	str	x0, [x1, #16]
  4285f8:	str	x3, [x21, #16]
  4285fc:	b	428568 <ferror@plt+0x25bf8>
  428600:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  428604:	mov	w1, #0xa59                 	// #2649
  428608:	add	x2, x2, #0xee
  42860c:	b	428550 <ferror@plt+0x25be0>
  428610:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  428614:	mov	w1, #0x352                 	// #850
  428618:	add	x2, x2, #0x10e
  42861c:	b	428550 <ferror@plt+0x25be0>
  428620:	ldr	w27, [x19, #176]
  428624:	b	428594 <ferror@plt+0x25c24>
  428628:	cbnz	w0, 428640 <ferror@plt+0x25cd0>
  42862c:	ldr	x0, [x21, #16]
  428630:	add	x1, x0, #0x8
  428634:	str	x1, [x21, #16]
  428638:	ldr	x23, [x0]
  42863c:	b	4285b0 <ferror@plt+0x25c40>
  428640:	cmp	w0, #0x2
  428644:	b.ne	4285b0 <ferror@plt+0x25c40>  // b.any
  428648:	ldr	x0, [x21, #16]
  42864c:	add	x1, x0, #0x8
  428650:	str	x1, [x21, #16]
  428654:	ldr	x1, [x21, #40]
  428658:	ldr	x23, [x0]
  42865c:	ldr	x0, [x1, #16]
  428660:	add	x0, x0, #0x4
  428664:	str	x0, [x1, #16]
  428668:	b	4285b0 <ferror@plt+0x25c40>
  42866c:	mov	x3, x23
  428670:	add	x2, sp, #0x60
  428674:	mov	w1, w27
  428678:	mov	x0, x19
  42867c:	bl	4261c8 <ferror@plt+0x23858>
  428680:	tst	w0, #0xff
  428684:	b.eq	428690 <ferror@plt+0x25d20>  // b.none
  428688:	ldrh	w0, [x23, #6]
  42868c:	tbnz	w0, #3, 428598 <ferror@plt+0x25c28>
  428690:	ldr	w0, [x21, #48]
  428694:	cmp	w0, #0x2
  428698:	b.ne	428708 <ferror@plt+0x25d98>  // b.any
  42869c:	add	x2, sp, #0x68
  4286a0:	mov	x1, #0x1                   	// #1
  4286a4:	mov	x0, x19
  4286a8:	str	xzr, [sp, #104]
  4286ac:	bl	4254b8 <ferror@plt+0x22b48>
  4286b0:	mov	x23, x0
  4286b4:	ldp	x2, x1, [sp, #96]
  4286b8:	mov	w3, w27
  4286bc:	mov	x5, #0x0                   	// #0
  4286c0:	mov	w4, #0x0                   	// #0
  4286c4:	mov	w6, #0x0                   	// #0
  4286c8:	bl	4256b4 <ferror@plt+0x22d44>
  4286cc:	ldr	x0, [x21, #40]
  4286d0:	mov	x2, x23
  4286d4:	ldr	x4, [x23, #8]
  4286d8:	mov	w5, #0x1                   	// #1
  4286dc:	ldr	x1, [x0]
  4286e0:	mov	x0, x19
  4286e4:	ldr	x3, [sp, #104]
  4286e8:	bl	4255c4 <ferror@plt+0x22c54>
  4286ec:	ldrb	w0, [x19, #16]
  4286f0:	cbnz	w0, 428380 <ferror@plt+0x25a10>
  4286f4:	mov	x1, x20
  4286f8:	mov	x0, x19
  4286fc:	bl	425488 <ferror@plt+0x22b18>
  428700:	mov	x20, x0
  428704:	b	4284b0 <ferror@plt+0x25b40>
  428708:	ldr	x2, [sp, #96]
  42870c:	mov	x0, x19
  428710:	mov	w3, #0x1                   	// #1
  428714:	mov	x1, #0x0                   	// #0
  428718:	bl	425d34 <ferror@plt+0x233c4>
  42871c:	b	4286ec <ferror@plt+0x25d7c>
  428720:	mov	w21, #0x1                   	// #1
  428724:	b	428430 <ferror@plt+0x25ac0>
  428728:	cbz	w21, 4284b0 <ferror@plt+0x25b40>
  42872c:	mov	w1, #0x0                   	// #0
  428730:	mov	x0, x19
  428734:	bl	422a38 <ferror@plt+0x200c8>
  428738:	mov	x1, x0
  42873c:	ldrb	w0, [x0, #4]
  428740:	cmp	w0, #0x53
  428744:	b.eq	4284b0 <ferror@plt+0x25b40>  // b.none
  428748:	ldrh	w0, [x1, #6]
  42874c:	tbnz	w0, #0, 4284b0 <ferror@plt+0x25b40>
  428750:	mov	x0, x19
  428754:	bl	425488 <ferror@plt+0x22b18>
  428758:	mov	w3, #0x1                   	// #1
  42875c:	mov	x2, x0
  428760:	mov	x1, #0x0                   	// #0
  428764:	mov	x0, x19
  428768:	bl	425d34 <ferror@plt+0x233c4>
  42876c:	b	4284b0 <ferror@plt+0x25b40>
  428770:	mov	w3, w22
  428774:	mov	x2, x20
  428778:	mov	x1, x4
  42877c:	b	428450 <ferror@plt+0x25ae0>
  428780:	mov	x0, x19
  428784:	bl	41fa48 <ferror@plt+0x1d0d8>
  428788:	ldrb	w1, [x20, #4]
  42878c:	strb	w1, [x0, #4]
  428790:	ldrh	w1, [x20, #6]
  428794:	ldp	x2, x3, [x20, #8]
  428798:	orr	w1, w1, #0x400
  42879c:	strh	w1, [x0, #6]
  4287a0:	stp	x2, x3, [x0, #8]
  4287a4:	b	428700 <ferror@plt+0x25d90>
  4287a8:	mov	x1, #0x0                   	// #0
  4287ac:	b	42834c <ferror@plt+0x259dc>
  4287b0:	stp	x29, x30, [sp, #-32]!
  4287b4:	mov	x29, sp
  4287b8:	ldr	x1, [x0]
  4287bc:	str	x19, [sp, #16]
  4287c0:	mov	x19, x0
  4287c4:	ldrb	w0, [x1, #105]
  4287c8:	orr	w0, w0, #0x4
  4287cc:	strb	w0, [x1, #105]
  4287d0:	ldrb	w0, [x19, #27]
  4287d4:	add	w0, w0, #0x1
  4287d8:	strb	w0, [x19, #27]
  4287dc:	ldrb	w0, [x19, #24]
  4287e0:	add	w0, w0, #0x1
  4287e4:	strb	w0, [x19, #24]
  4287e8:	ldrb	w0, [x19, #1160]
  4287ec:	cbz	w0, 428824 <ferror@plt+0x25eb4>
  4287f0:	mov	x0, x19
  4287f4:	bl	42ae70 <ferror@plt+0x28500>
  4287f8:	tst	w0, #0xff
  4287fc:	b.ne	4287f0 <ferror@plt+0x25e80>  // b.any
  428800:	ldrb	w0, [x19, #27]
  428804:	sub	w0, w0, #0x1
  428808:	strb	w0, [x19, #27]
  42880c:	ldrb	w0, [x19, #24]
  428810:	sub	w0, w0, #0x1
  428814:	strb	w0, [x19, #24]
  428818:	ldr	x19, [sp, #16]
  42881c:	ldp	x29, x30, [sp], #32
  428820:	ret
  428824:	mov	x0, x19
  428828:	bl	4287a8 <ferror@plt+0x25e38>
  42882c:	ldrb	w0, [x0, #4]
  428830:	cmp	w0, #0x16
  428834:	b.ne	428824 <ferror@plt+0x25eb4>  // b.any
  428838:	b	428800 <ferror@plt+0x25e90>
  42883c:	b	42834c <ferror@plt+0x259dc>
  428840:	stp	x29, x30, [sp, #-96]!
  428844:	mov	x29, sp
  428848:	stp	x19, x20, [sp, #16]
  42884c:	mov	x20, x0
  428850:	ldr	w19, [x1, #8]
  428854:	stp	x23, x24, [sp, #48]
  428858:	mov	w0, #0xa                   	// #10
  42885c:	mov	x24, x1
  428860:	ldr	x23, [x1, #24]
  428864:	mul	w19, w19, w0
  428868:	stp	x21, x22, [sp, #32]
  42886c:	ldrb	w0, [x23, #19]
  428870:	stp	x25, x26, [sp, #64]
  428874:	stp	x27, x28, [sp, #80]
  428878:	tbz	w0, #2, 4288ac <ferror@plt+0x25f3c>
  42887c:	ldrh	w2, [x23, #16]
  428880:	add	w19, w19, #0x6
  428884:	mov	x0, #0x0                   	// #0
  428888:	cmp	w2, w0
  42888c:	b.ls	4288b0 <ferror@plt+0x25f40>  // b.plast
  428890:	ldr	x1, [x23]
  428894:	ldr	x1, [x1, x0, lsl #3]
  428898:	add	x0, x0, #0x1
  42889c:	ldr	w1, [x1, #8]
  4288a0:	add	w1, w1, #0x1
  4288a4:	add	w19, w19, w1
  4288a8:	b	428888 <ferror@plt+0x25f18>
  4288ac:	add	w19, w19, #0x2
  4288b0:	ldrb	w0, [x20, #1160]
  4288b4:	cbz	w0, 42896c <ferror@plt+0x25ffc>
  4288b8:	mov	x0, x23
  4288bc:	bl	42aed8 <ferror@plt+0x28568>
  4288c0:	add	w19, w19, w0
  4288c4:	ldr	w0, [x20, #512]
  4288c8:	cmp	w0, w19
  4288cc:	b.cs	4288e4 <ferror@plt+0x25f74>  // b.hs, b.nlast
  4288d0:	ldr	x0, [x20, #504]
  4288d4:	mov	w1, w19
  4288d8:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4288dc:	str	x0, [x20, #504]
  4288e0:	str	w19, [x20, #512]
  4288e4:	ldr	x0, [x20, #504]
  4288e8:	mov	x1, x24
  4288ec:	bl	41fc34 <ferror@plt+0x1d2c4>
  4288f0:	mov	x19, x0
  4288f4:	ldrb	w0, [x23, #19]
  4288f8:	tbz	w0, #2, 428a04 <ferror@plt+0x26094>
  4288fc:	mov	w0, #0x28                  	// #40
  428900:	mov	x21, #0x0                   	// #0
  428904:	mov	w26, #0x2e2e                	// #11822
  428908:	mov	w25, #0x2e                  	// #46
  42890c:	mov	w27, #0x2c                  	// #44
  428910:	strb	w0, [x19], #1
  428914:	ldrh	w0, [x23, #16]
  428918:	mov	w24, w21
  42891c:	cmp	w21, w0
  428920:	b.cs	4289fc <ferror@plt+0x2608c>  // b.hs, b.nlast
  428924:	ldr	x0, [x23]
  428928:	ldr	x22, [x0, x21, lsl #3]
  42892c:	ldr	x0, [x20, #1272]
  428930:	cmp	x0, x22
  428934:	b.eq	428950 <ferror@plt+0x25fe0>  // b.none
  428938:	ldr	w2, [x22, #8]
  42893c:	mov	x0, x19
  428940:	ldr	x1, [x22]
  428944:	bl	4022e0 <memcpy@plt>
  428948:	ldr	w0, [x22, #8]
  42894c:	add	x19, x19, x0
  428950:	ldrh	w0, [x23, #16]
  428954:	add	w24, w24, #0x1
  428958:	cmp	w0, w24
  42895c:	b.ls	4289e0 <ferror@plt+0x26070>  // b.plast
  428960:	strb	w27, [x19], #1
  428964:	add	x21, x21, #0x1
  428968:	b	428914 <ferror@plt+0x25fa4>
  42896c:	mov	x0, x23
  428970:	add	x21, x23, #0x18
  428974:	bl	425750 <ferror@plt+0x22de0>
  428978:	mov	w25, w0
  42897c:	mov	w22, #0x0                   	// #0
  428980:	mov	x26, #0x18                  	// #24
  428984:	cmp	w22, w25
  428988:	b.eq	4288c4 <ferror@plt+0x25f54>  // b.none
  42898c:	mov	w0, w22
  428990:	madd	x0, x0, x26, x23
  428994:	ldrb	w0, [x0, #28]
  428998:	cmp	w0, #0x50
  42899c:	b.ne	4289d4 <ferror@plt+0x26064>  // b.any
  4289a0:	ldr	x0, [x21, #16]
  4289a4:	ldr	w0, [x0, #8]
  4289a8:	ldrh	w2, [x21, #6]
  4289ac:	add	w19, w19, w0
  4289b0:	ubfx	x0, x2, #2, #1
  4289b4:	add	w19, w19, w0
  4289b8:	tbz	w2, #3, 4289c0 <ferror@plt+0x26050>
  4289bc:	add	w19, w19, #0x3
  4289c0:	and	w2, w2, #0x1
  4289c4:	add	w22, w22, #0x1
  4289c8:	add	w19, w19, w2
  4289cc:	add	x21, x21, #0x18
  4289d0:	b	428984 <ferror@plt+0x26014>
  4289d4:	mov	x0, x21
  4289d8:	bl	41fbec <ferror@plt+0x1d27c>
  4289dc:	b	4289a8 <ferror@plt+0x26038>
  4289e0:	ldrb	w0, [x23, #19]
  4289e4:	tbz	w0, #3, 428964 <ferror@plt+0x25ff4>
  4289e8:	mov	x0, x19
  4289ec:	strh	w26, [x0], #3
  4289f0:	strb	w25, [x19, #2]
  4289f4:	mov	x19, x0
  4289f8:	b	428964 <ferror@plt+0x25ff4>
  4289fc:	mov	w0, #0x29                  	// #41
  428a00:	strb	w0, [x19], #1
  428a04:	mov	w21, #0x20                  	// #32
  428a08:	strb	w21, [x19], #1
  428a0c:	ldrb	w0, [x20, #1160]
  428a10:	cbz	w0, 428a48 <ferror@plt+0x260d8>
  428a14:	mov	x1, x19
  428a18:	mov	x0, x23
  428a1c:	bl	42af34 <ferror@plt+0x285c4>
  428a20:	mov	x19, x0
  428a24:	strb	wzr, [x19]
  428a28:	ldp	x21, x22, [sp, #32]
  428a2c:	ldp	x23, x24, [sp, #48]
  428a30:	ldp	x25, x26, [sp, #64]
  428a34:	ldp	x27, x28, [sp, #80]
  428a38:	ldr	x0, [x20, #504]
  428a3c:	ldp	x19, x20, [sp, #16]
  428a40:	ldp	x29, x30, [sp], #96
  428a44:	ret
  428a48:	ldr	w0, [x23, #12]
  428a4c:	cbz	w0, 428a24 <ferror@plt+0x260b4>
  428a50:	mov	x0, x23
  428a54:	add	x27, x23, #0x18
  428a58:	bl	425750 <ferror@plt+0x22de0>
  428a5c:	mov	w22, w0
  428a60:	mov	w28, #0x0                   	// #0
  428a64:	mov	w24, #0x23                  	// #35
  428a68:	mov	x25, #0x18                  	// #24
  428a6c:	mov	w26, #0x2320                	// #8992
  428a70:	cmp	w28, w22
  428a74:	b.eq	428a24 <ferror@plt+0x260b4>  // b.none
  428a78:	ldrh	w0, [x27, #6]
  428a7c:	tbz	w0, #0, 428a84 <ferror@plt+0x26114>
  428a80:	strb	w21, [x19], #1
  428a84:	ldrh	w0, [x27, #6]
  428a88:	tbz	w0, #2, 428a90 <ferror@plt+0x26120>
  428a8c:	strb	w24, [x19], #1
  428a90:	mov	w0, w28
  428a94:	madd	x0, x0, x25, x23
  428a98:	ldrb	w0, [x0, #28]
  428a9c:	cmp	w0, #0x50
  428aa0:	b.ne	428ae8 <ferror@plt+0x26178>  // b.any
  428aa4:	ldr	x0, [x27, #16]
  428aa8:	ldr	w2, [x0, #8]
  428aac:	ldr	x1, [x0]
  428ab0:	mov	x0, x19
  428ab4:	bl	4022e0 <memcpy@plt>
  428ab8:	ldr	x0, [x27, #16]
  428abc:	ldr	w0, [x0, #8]
  428ac0:	add	x19, x19, x0
  428ac4:	ldrh	w0, [x27, #6]
  428ac8:	tbz	w0, #3, 428adc <ferror@plt+0x2616c>
  428acc:	mov	x0, x19
  428ad0:	strh	w26, [x0], #3
  428ad4:	strb	w24, [x19, #2]
  428ad8:	mov	x19, x0
  428adc:	add	w28, w28, #0x1
  428ae0:	add	x27, x27, #0x18
  428ae4:	b	428a70 <ferror@plt+0x26100>
  428ae8:	mov	x2, x19
  428aec:	mov	x1, x27
  428af0:	mov	x0, x20
  428af4:	mov	w3, #0x1                   	// #1
  428af8:	bl	41fca4 <ferror@plt+0x1d334>
  428afc:	mov	x19, x0
  428b00:	b	428ac4 <ferror@plt+0x26154>
  428b04:	mov	x4, x0
  428b08:	ldrb	w0, [x0, #9]
  428b0c:	cbz	w0, 428c60 <ferror@plt+0x262f0>
  428b10:	stp	x29, x30, [sp, #-16]!
  428b14:	mov	x29, sp
  428b18:	ldrb	w2, [x1, #4]
  428b1c:	ldr	w3, [x4, #12]
  428b20:	cmp	w2, #0x35
  428b24:	b.ne	428b78 <ferror@plt+0x26208>  // b.any
  428b28:	ldr	x0, [x4]
  428b2c:	ldr	x6, [x1, #8]
  428b30:	ldr	x5, [x0, #1280]
  428b34:	cmp	x6, x5
  428b38:	b.ne	428c30 <ferror@plt+0x262c0>  // b.any
  428b3c:	ldr	w2, [x1]
  428b40:	cmp	w3, #0x0
  428b44:	b.le	428b60 <ferror@plt+0x261f0>
  428b48:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x1a198>
  428b4c:	add	x3, x3, #0x14f
  428b50:	mov	w1, #0x3                   	// #3
  428b54:	bl	4197c8 <ferror@plt+0x16e58>
  428b58:	mov	w0, #0x0                   	// #0
  428b5c:	b	428b70 <ferror@plt+0x26200>
  428b60:	add	w0, w3, #0x1
  428b64:	str	w0, [x4, #12]
  428b68:	mov	w0, #0x3                   	// #3
  428b6c:	str	w2, [x4, #20]
  428b70:	ldp	x29, x30, [sp], #16
  428b74:	ret
  428b78:	cmp	w3, #0x1
  428b7c:	b.ne	428c38 <ferror@plt+0x262c8>  // b.any
  428b80:	cmp	w2, #0x14
  428b84:	b.eq	428ba0 <ferror@plt+0x26230>  // b.none
  428b88:	ldr	w2, [x4, #20]
  428b8c:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x1a198>
  428b90:	add	x3, x3, #0x179
  428b94:	mov	w1, #0x3                   	// #3
  428b98:	ldr	x0, [x4]
  428b9c:	b	428b54 <ferror@plt+0x261e4>
  428ba0:	mov	w0, #0x2                   	// #2
  428ba4:	str	w0, [x4, #12]
  428ba8:	mov	w0, #0x1                   	// #1
  428bac:	b	428b70 <ferror@plt+0x26200>
  428bb0:	mov	w0, #0x3                   	// #3
  428bb4:	str	w0, [x4, #12]
  428bb8:	ldrb	w3, [x4, #10]
  428bbc:	cmp	w2, #0x26
  428bc0:	strb	wzr, [x4, #10]
  428bc4:	b.ne	428be8 <ferror@plt+0x26278>  // b.any
  428bc8:	mov	w0, #0x1                   	// #1
  428bcc:	strb	w0, [x4, #10]
  428bd0:	ldr	w0, [x1]
  428bd4:	str	w0, [x4, #16]
  428bd8:	ldrb	w0, [x4, #8]
  428bdc:	cbz	w0, 428ba8 <ferror@plt+0x26238>
  428be0:	mov	w0, #0x2                   	// #2
  428be4:	b	428b70 <ferror@plt+0x26200>
  428be8:	cmp	w2, #0x14
  428bec:	b.ne	428c00 <ferror@plt+0x26290>  // b.any
  428bf0:	ldr	w0, [x4, #12]
  428bf4:	add	w0, w0, #0x1
  428bf8:	str	w0, [x4, #12]
  428bfc:	b	428bd8 <ferror@plt+0x26268>
  428c00:	cmp	w2, #0x15
  428c04:	b.ne	428bd8 <ferror@plt+0x26268>  // b.any
  428c08:	ldr	w0, [x4, #12]
  428c0c:	sub	w2, w0, #0x1
  428c10:	cmp	w0, #0x3
  428c14:	b.eq	428c20 <ferror@plt+0x262b0>  // b.none
  428c18:	str	w2, [x4, #12]
  428c1c:	b	428bd8 <ferror@plt+0x26268>
  428c20:	str	wzr, [x4, #12]
  428c24:	cbnz	w3, 428c50 <ferror@plt+0x262e0>
  428c28:	mov	w0, #0x4                   	// #4
  428c2c:	b	428b70 <ferror@plt+0x26200>
  428c30:	cmp	w3, #0x1
  428c34:	b.eq	428b88 <ferror@plt+0x26218>  // b.none
  428c38:	cmp	w3, #0x1
  428c3c:	b.le	428be0 <ferror@plt+0x26270>
  428c40:	cmp	w3, #0x2
  428c44:	b.ne	428bb8 <ferror@plt+0x26248>  // b.any
  428c48:	cmp	w2, #0x26
  428c4c:	b.ne	428bb0 <ferror@plt+0x26240>  // b.any
  428c50:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x1a198>
  428c54:	ldr	w2, [x1]
  428c58:	add	x3, x3, #0x1ac
  428c5c:	b	428b94 <ferror@plt+0x26224>
  428c60:	mov	w0, #0x2                   	// #2
  428c64:	ret
  428c68:	stp	x29, x30, [sp, #-48]!
  428c6c:	mov	x29, sp
  428c70:	stp	x19, x20, [sp, #16]
  428c74:	mov	x20, x0
  428c78:	mov	x19, x1
  428c7c:	ldr	x0, [x0, #32]
  428c80:	stp	x21, x22, [sp, #32]
  428c84:	cbz	x0, 428ce0 <ferror@plt+0x26370>
  428c88:	mov	w21, #0x0                   	// #0
  428c8c:	ldr	w0, [x20, #48]
  428c90:	cmp	w0, w21
  428c94:	b.ls	428ce0 <ferror@plt+0x26370>  // b.plast
  428c98:	ldp	x0, x1, [x20, #32]
  428c9c:	ubfiz	x22, x21, #3, #32
  428ca0:	ldr	x2, [x1, x22]
  428ca4:	mov	x1, x19
  428ca8:	ldr	x0, [x0, x22]
  428cac:	bl	438b08 <ferror@plt+0x36198>
  428cb0:	cbnz	w0, 428d2c <ferror@plt+0x263bc>
  428cb4:	ldr	x0, [x20, #40]
  428cb8:	ldr	x0, [x0, x22]
  428cbc:	add	x1, x19, x0
  428cc0:	ldrb	w2, [x19, x0]
  428cc4:	cmp	w2, #0x2f
  428cc8:	b.ne	428d2c <ferror@plt+0x263bc>  // b.any
  428ccc:	ldrb	w2, [x1, #1]
  428cd0:	cmp	w2, #0x2e
  428cd4:	b.eq	428d14 <ferror@plt+0x263a4>  // b.none
  428cd8:	add	x0, x0, #0x1
  428cdc:	add	x19, x19, x0
  428ce0:	mov	x0, x19
  428ce4:	ldrb	w1, [x0]
  428ce8:	cmp	w1, #0x2e
  428cec:	b.ne	428d34 <ferror@plt+0x263c4>  // b.any
  428cf0:	ldrb	w1, [x0, #1]
  428cf4:	cmp	w1, #0x2f
  428cf8:	b.ne	428d34 <ferror@plt+0x263c4>  // b.any
  428cfc:	add	x0, x0, #0x2
  428d00:	ldrb	w1, [x0]
  428d04:	cmp	w1, #0x2f
  428d08:	b.ne	428ce4 <ferror@plt+0x26374>  // b.any
  428d0c:	add	x0, x0, #0x1
  428d10:	b	428d00 <ferror@plt+0x26390>
  428d14:	ldrb	w2, [x1, #2]
  428d18:	cmp	w2, #0x2e
  428d1c:	b.ne	428cd8 <ferror@plt+0x26368>  // b.any
  428d20:	ldrb	w1, [x1, #3]
  428d24:	cmp	w1, #0x2f
  428d28:	b.ne	428cd8 <ferror@plt+0x26368>  // b.any
  428d2c:	add	w21, w21, #0x1
  428d30:	b	428c8c <ferror@plt+0x2631c>
  428d34:	ldp	x19, x20, [sp, #16]
  428d38:	ldp	x21, x22, [sp, #32]
  428d3c:	ldp	x29, x30, [sp], #48
  428d40:	ret
  428d44:	stp	x29, x30, [sp, #-32]!
  428d48:	mov	x3, x0
  428d4c:	mov	w1, #0x0                   	// #0
  428d50:	mov	x29, sp
  428d54:	str	x19, [sp, #16]
  428d58:	mov	x19, x0
  428d5c:	ldrb	w2, [x3]
  428d60:	add	w0, w1, #0x1
  428d64:	cbz	w2, 428dbc <ferror@plt+0x2644c>
  428d68:	cmp	w2, #0x24
  428d6c:	b.hi	428db0 <ferror@plt+0x26440>  // b.pmore
  428d70:	cmp	w2, #0x22
  428d74:	b.hi	428dac <ferror@plt+0x2643c>  // b.pmore
  428d78:	cmp	w2, #0x9
  428d7c:	b.eq	428d88 <ferror@plt+0x26418>  // b.none
  428d80:	cmp	w2, #0x20
  428d84:	b.ne	428db0 <ferror@plt+0x26440>  // b.any
  428d88:	sub	x0, x3, #0x1
  428d8c:	add	w1, w1, #0x1
  428d90:	cmp	x0, x19
  428d94:	b.cc	428db0 <ferror@plt+0x26440>  // b.lo, b.ul, b.last
  428d98:	ldrb	w2, [x0]
  428d9c:	cmp	w2, #0x5c
  428da0:	b.ne	428db0 <ferror@plt+0x26440>  // b.any
  428da4:	sub	x0, x0, #0x1
  428da8:	b	428d8c <ferror@plt+0x2641c>
  428dac:	mov	w1, w0
  428db0:	add	x3, x3, #0x1
  428db4:	add	w1, w1, #0x1
  428db8:	b	428d5c <ferror@plt+0x263ec>
  428dbc:	sxtw	x0, w0
  428dc0:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  428dc4:	mov	x3, x19
  428dc8:	mov	x1, x0
  428dcc:	mov	w5, #0x5c                  	// #92
  428dd0:	ldrb	w2, [x3]
  428dd4:	cbz	w2, 428e54 <ferror@plt+0x264e4>
  428dd8:	add	x4, x1, #0x1
  428ddc:	cmp	w2, #0x23
  428de0:	b.eq	428e4c <ferror@plt+0x264dc>  // b.none
  428de4:	b.hi	428e04 <ferror@plt+0x26494>  // b.pmore
  428de8:	cmp	w2, #0x9
  428dec:	b.eq	428e18 <ferror@plt+0x264a8>  // b.none
  428df0:	cmp	w2, #0x20
  428df4:	b.eq	428e18 <ferror@plt+0x264a8>  // b.none
  428df8:	add	x3, x3, #0x1
  428dfc:	strb	w2, [x1], #1
  428e00:	b	428dd0 <ferror@plt+0x26460>
  428e04:	cmp	w2, #0x24
  428e08:	b.ne	428df8 <ferror@plt+0x26488>  // b.any
  428e0c:	strb	w2, [x1]
  428e10:	mov	x1, x4
  428e14:	b	428df8 <ferror@plt+0x26488>
  428e18:	sub	x4, x3, #0x1
  428e1c:	mov	x6, x1
  428e20:	cmp	x4, x19
  428e24:	add	x1, x1, #0x1
  428e28:	b.cc	428e44 <ferror@plt+0x264d4>  // b.lo, b.ul, b.last
  428e2c:	ldrb	w7, [x4]
  428e30:	cmp	w7, #0x5c
  428e34:	b.ne	428e44 <ferror@plt+0x264d4>  // b.any
  428e38:	sub	x4, x4, #0x1
  428e3c:	sturb	w7, [x1, #-1]
  428e40:	b	428e1c <ferror@plt+0x264ac>
  428e44:	strb	w5, [x6]
  428e48:	b	428df8 <ferror@plt+0x26488>
  428e4c:	strb	w5, [x1]
  428e50:	b	428e10 <ferror@plt+0x264a0>
  428e54:	strb	wzr, [x1]
  428e58:	ldr	x19, [sp, #16]
  428e5c:	ldp	x29, x30, [sp], #32
  428e60:	ret
  428e64:	mov	x1, #0x38                  	// #56
  428e68:	mov	x0, #0x1                   	// #1
  428e6c:	b	439f74 <_obstack_memory_used@@Base+0x10c>
  428e70:	stp	x29, x30, [sp, #-32]!
  428e74:	mov	x29, sp
  428e78:	stp	x19, x20, [sp, #16]
  428e7c:	mov	x19, x0
  428e80:	ldr	x0, [x0]
  428e84:	cbz	x0, 428eb0 <ferror@plt+0x26540>
  428e88:	mov	w20, #0x0                   	// #0
  428e8c:	ldr	w1, [x19, #8]
  428e90:	ldr	x0, [x19]
  428e94:	cmp	w1, w20
  428e98:	b.ls	428eac <ferror@plt+0x2653c>  // b.plast
  428e9c:	ldr	x0, [x0, w20, uxtw #3]
  428ea0:	add	w20, w20, #0x1
  428ea4:	bl	402730 <free@plt>
  428ea8:	b	428e8c <ferror@plt+0x2651c>
  428eac:	bl	402730 <free@plt>
  428eb0:	ldr	x0, [x19, #16]
  428eb4:	cbz	x0, 428ee0 <ferror@plt+0x26570>
  428eb8:	mov	w20, #0x0                   	// #0
  428ebc:	ldr	w1, [x19, #24]
  428ec0:	ldr	x0, [x19, #16]
  428ec4:	cmp	w1, w20
  428ec8:	b.ls	428edc <ferror@plt+0x2656c>  // b.plast
  428ecc:	ldr	x0, [x0, w20, uxtw #3]
  428ed0:	add	w20, w20, #0x1
  428ed4:	bl	402730 <free@plt>
  428ed8:	b	428ebc <ferror@plt+0x2654c>
  428edc:	bl	402730 <free@plt>
  428ee0:	ldr	x0, [x19, #32]
  428ee4:	cbz	x0, 428f18 <ferror@plt+0x265a8>
  428ee8:	mov	w20, #0x0                   	// #0
  428eec:	ldr	w1, [x19, #48]
  428ef0:	ldr	x0, [x19, #32]
  428ef4:	cmp	w1, w20
  428ef8:	b.ls	428f0c <ferror@plt+0x2659c>  // b.plast
  428efc:	ldr	x0, [x0, w20, uxtw #3]
  428f00:	add	w20, w20, #0x1
  428f04:	bl	402730 <free@plt>
  428f08:	b	428eec <ferror@plt+0x2657c>
  428f0c:	bl	402730 <free@plt>
  428f10:	ldr	x0, [x19, #40]
  428f14:	bl	402730 <free@plt>
  428f18:	mov	x0, x19
  428f1c:	ldp	x19, x20, [sp, #16]
  428f20:	ldp	x29, x30, [sp], #32
  428f24:	b	402730 <free@plt>
  428f28:	stp	x29, x30, [sp, #-48]!
  428f2c:	mov	x29, sp
  428f30:	stp	x19, x20, [sp, #16]
  428f34:	mov	x19, x0
  428f38:	mov	w20, w2
  428f3c:	str	x21, [sp, #32]
  428f40:	mov	x21, x1
  428f44:	ldr	w1, [x0, #12]
  428f48:	ldr	w0, [x0, #8]
  428f4c:	cmp	w0, w1
  428f50:	b.ne	428f70 <ferror@plt+0x26600>  // b.any
  428f54:	add	w0, w0, #0x2
  428f58:	lsl	w0, w0, #1
  428f5c:	str	w0, [x19, #12]
  428f60:	lsl	x1, x0, #3
  428f64:	ldr	x0, [x19]
  428f68:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  428f6c:	str	x0, [x19]
  428f70:	mov	x1, x21
  428f74:	mov	x0, x19
  428f78:	bl	428c68 <ferror@plt+0x262f8>
  428f7c:	cbz	w20, 428fa8 <ferror@plt+0x26638>
  428f80:	bl	428d44 <ferror@plt+0x263d4>
  428f84:	ldr	w1, [x19, #8]
  428f88:	ldr	x2, [x19]
  428f8c:	add	w3, w1, #0x1
  428f90:	ldr	x21, [sp, #32]
  428f94:	str	w3, [x19, #8]
  428f98:	str	x0, [x2, w1, uxtw #3]
  428f9c:	ldp	x19, x20, [sp, #16]
  428fa0:	ldp	x29, x30, [sp], #48
  428fa4:	ret
  428fa8:	bl	43a064 <_obstack_memory_used@@Base+0x1fc>
  428fac:	b	428f84 <ferror@plt+0x26614>
  428fb0:	ldr	w2, [x0, #8]
  428fb4:	cbnz	w2, 42905c <ferror@plt+0x266ec>
  428fb8:	stp	x29, x30, [sp, #-48]!
  428fbc:	mov	x29, sp
  428fc0:	stp	x19, x20, [sp, #16]
  428fc4:	str	x21, [sp, #32]
  428fc8:	ldrb	w2, [x1]
  428fcc:	cbnz	w2, 428ff4 <ferror@plt+0x26684>
  428fd0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  428fd4:	add	x1, x1, #0xf1f
  428fd8:	mov	w2, #0x1                   	// #1
  428fdc:	bl	428f28 <ferror@plt+0x265b8>
  428fe0:	mov	sp, x29
  428fe4:	ldp	x19, x20, [sp, #16]
  428fe8:	ldr	x21, [sp, #32]
  428fec:	ldp	x29, x30, [sp], #48
  428ff0:	ret
  428ff4:	mov	x20, x0
  428ff8:	mov	x0, x1
  428ffc:	bl	439b18 <ferror@plt+0x371a8>
  429000:	mov	x21, x0
  429004:	bl	402330 <strlen@plt>
  429008:	add	x2, x0, #0x12
  42900c:	and	x2, x2, #0xfffffffffffffff0
  429010:	mov	x1, x21
  429014:	sub	sp, sp, x2
  429018:	mov	x19, sp
  42901c:	mov	x0, x19
  429020:	bl	4027b0 <strcpy@plt>
  429024:	mov	x0, x19
  429028:	mov	w1, #0x2e                  	// #46
  42902c:	bl	402610 <strrchr@plt>
  429030:	cbnz	x0, 429040 <ferror@plt+0x266d0>
  429034:	mov	x0, x19
  429038:	bl	402330 <strlen@plt>
  42903c:	add	x0, x19, x0
  429040:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  429044:	add	x1, x1, #0x280
  429048:	bl	4027b0 <strcpy@plt>
  42904c:	mov	x1, x19
  429050:	mov	x0, x20
  429054:	mov	w2, #0x1                   	// #1
  429058:	b	428fdc <ferror@plt+0x2666c>
  42905c:	ret
  429060:	stp	x29, x30, [sp, #-32]!
  429064:	mov	x29, sp
  429068:	stp	x19, x20, [sp, #16]
  42906c:	mov	x19, x0
  429070:	bl	428c68 <ferror@plt+0x262f8>
  429074:	bl	428d44 <ferror@plt+0x263d4>
  429078:	mov	x20, x0
  42907c:	ldp	w1, w0, [x19, #24]
  429080:	cmp	w1, w0
  429084:	b.ne	4290a4 <ferror@plt+0x26734>  // b.any
  429088:	add	w1, w1, #0x4
  42908c:	ldr	x0, [x19, #16]
  429090:	lsl	w1, w1, #1
  429094:	str	w1, [x19, #28]
  429098:	lsl	x1, x1, #3
  42909c:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4290a0:	str	x0, [x19, #16]
  4290a4:	ldr	w0, [x19, #24]
  4290a8:	ldr	x1, [x19, #16]
  4290ac:	add	w2, w0, #0x1
  4290b0:	str	w2, [x19, #24]
  4290b4:	str	x20, [x1, w0, uxtw #3]
  4290b8:	ldp	x19, x20, [sp, #16]
  4290bc:	ldp	x29, x30, [sp], #32
  4290c0:	ret
  4290c4:	stp	x29, x30, [sp, #-64]!
  4290c8:	mov	x29, sp
  4290cc:	stp	x19, x20, [sp, #16]
  4290d0:	mov	x19, x0
  4290d4:	stp	x21, x22, [sp, #32]
  4290d8:	mov	x21, x1
  4290dc:	str	x23, [sp, #48]
  4290e0:	ldrb	w0, [x21]
  4290e4:	cbz	w0, 429198 <ferror@plt+0x26828>
  4290e8:	mov	x20, x21
  4290ec:	ldrb	w0, [x20]
  4290f0:	cbz	w0, 429104 <ferror@plt+0x26794>
  4290f4:	cmp	w0, #0x3a
  4290f8:	b.eq	429104 <ferror@plt+0x26794>  // b.none
  4290fc:	add	x20, x20, #0x1
  429100:	b	4290ec <ferror@plt+0x2677c>
  429104:	sub	x22, x20, x21
  429108:	add	x0, x22, #0x1
  42910c:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  429110:	mov	x23, x0
  429114:	mov	x2, x22
  429118:	mov	x1, x21
  42911c:	bl	4022e0 <memcpy@plt>
  429120:	ldrb	w0, [x20]
  429124:	strb	wzr, [x23, x22]
  429128:	cmp	w0, #0x3a
  42912c:	b.ne	429134 <ferror@plt+0x267c4>  // b.any
  429130:	add	x20, x20, #0x1
  429134:	ldp	w1, w0, [x19, #48]
  429138:	cmp	w1, w0
  42913c:	b.ne	429170 <ferror@plt+0x26800>  // b.any
  429140:	add	w1, w1, #0x4
  429144:	ldr	x0, [x19, #32]
  429148:	lsl	w1, w1, #1
  42914c:	str	w1, [x19, #52]
  429150:	lsl	x1, x1, #3
  429154:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  429158:	str	x0, [x19, #32]
  42915c:	ldr	x0, [x19, #40]
  429160:	ldr	w1, [x19, #52]
  429164:	lsl	x1, x1, #3
  429168:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  42916c:	str	x0, [x19, #40]
  429170:	ldr	w1, [x19, #48]
  429174:	mov	x21, x20
  429178:	ldr	x2, [x19, #32]
  42917c:	ubfiz	x0, x1, #3, #32
  429180:	add	w1, w1, #0x1
  429184:	str	x23, [x2, x0]
  429188:	ldr	x2, [x19, #40]
  42918c:	str	x22, [x2, x0]
  429190:	str	w1, [x19, #48]
  429194:	b	4290e0 <ferror@plt+0x26770>
  429198:	ldp	x19, x20, [sp, #16]
  42919c:	ldp	x21, x22, [sp, #32]
  4291a0:	ldr	x23, [sp, #48]
  4291a4:	ldp	x29, x30, [sp], #64
  4291a8:	ret
  4291ac:	stp	x29, x30, [sp, #-80]!
  4291b0:	mov	x29, sp
  4291b4:	stp	x21, x22, [sp, #32]
  4291b8:	mov	x22, x0
  4291bc:	sub	w0, w2, #0x1
  4291c0:	cmp	w0, #0x20
  4291c4:	mov	w0, #0x22                  	// #34
  4291c8:	csel	w21, w2, w0, hi  // hi = pmore
  4291cc:	stp	x19, x20, [sp, #16]
  4291d0:	mov	x20, x1
  4291d4:	stp	x25, x26, [sp, #64]
  4291d8:	adrp	x25, 454000 <_obstack_memory_used@@Base+0x1a198>
  4291dc:	add	x25, x25, #0x283
  4291e0:	mov	w19, #0x0                   	// #0
  4291e4:	stp	x23, x24, [sp, #48]
  4291e8:	mov	w23, #0x0                   	// #0
  4291ec:	ldr	w0, [x22, #8]
  4291f0:	cmp	w0, w23
  4291f4:	b.ls	429258 <ferror@plt+0x268e8>  // b.plast
  4291f8:	ldr	x0, [x22]
  4291fc:	ubfiz	x26, x23, #3, #32
  429200:	ldr	x0, [x0, x26]
  429204:	bl	402330 <strlen@plt>
  429208:	mov	x24, x0
  42920c:	add	w19, w19, w0
  429210:	cbz	w23, 429230 <ferror@plt+0x268c0>
  429214:	cmp	w21, #0x0
  429218:	mov	x1, x20
  42921c:	ccmp	w21, w19, #0x2, ne  // ne = any
  429220:	b.cs	429248 <ferror@plt+0x268d8>  // b.hs, b.nlast
  429224:	add	w19, w24, #0x1
  429228:	mov	x0, x25
  42922c:	bl	402870 <fputs_unlocked@plt>
  429230:	ldr	x0, [x22]
  429234:	mov	x1, x20
  429238:	add	w23, w23, #0x1
  42923c:	ldr	x0, [x0, x26]
  429240:	bl	402870 <fputs_unlocked@plt>
  429244:	b	4291ec <ferror@plt+0x2687c>
  429248:	mov	w0, #0x20                  	// #32
  42924c:	add	w19, w19, #0x1
  429250:	bl	402430 <putc_unlocked@plt>
  429254:	b	429230 <ferror@plt+0x268c0>
  429258:	adrp	x25, 454000 <_obstack_memory_used@@Base+0x1a198>
  42925c:	add	w19, w19, #0x1
  429260:	add	x25, x25, #0x283
  429264:	mov	w23, #0x0                   	// #0
  429268:	mov	x1, x20
  42926c:	mov	w0, #0x3a                  	// #58
  429270:	bl	402430 <putc_unlocked@plt>
  429274:	ldr	w0, [x22, #24]
  429278:	cmp	w0, w23
  42927c:	b.ls	4292dc <ferror@plt+0x2696c>  // b.plast
  429280:	ldr	x0, [x22, #16]
  429284:	ubfiz	x26, x23, #3, #32
  429288:	ldr	x0, [x0, x26]
  42928c:	bl	402330 <strlen@plt>
  429290:	add	w19, w19, w0
  429294:	cmp	w21, #0x0
  429298:	mov	x24, x0
  42929c:	ccmp	w21, w19, #0x2, ne  // ne = any
  4292a0:	mov	x1, x20
  4292a4:	b.cs	4292cc <ferror@plt+0x2695c>  // b.hs, b.nlast
  4292a8:	add	w19, w24, #0x1
  4292ac:	mov	x0, x25
  4292b0:	bl	402870 <fputs_unlocked@plt>
  4292b4:	ldr	x0, [x22, #16]
  4292b8:	mov	x1, x20
  4292bc:	add	w23, w23, #0x1
  4292c0:	ldr	x0, [x0, x26]
  4292c4:	bl	402870 <fputs_unlocked@plt>
  4292c8:	b	429274 <ferror@plt+0x26904>
  4292cc:	mov	w0, #0x20                  	// #32
  4292d0:	add	w19, w19, #0x1
  4292d4:	bl	402430 <putc_unlocked@plt>
  4292d8:	b	4292b4 <ferror@plt+0x26944>
  4292dc:	mov	x1, x20
  4292e0:	mov	w0, #0xa                   	// #10
  4292e4:	ldp	x19, x20, [sp, #16]
  4292e8:	ldp	x21, x22, [sp, #32]
  4292ec:	ldp	x23, x24, [sp, #48]
  4292f0:	ldp	x25, x26, [sp, #64]
  4292f4:	ldp	x29, x30, [sp], #80
  4292f8:	b	402430 <putc_unlocked@plt>
  4292fc:	stp	x29, x30, [sp, #-48]!
  429300:	mov	x29, sp
  429304:	stp	x19, x20, [sp, #16]
  429308:	mov	x19, x1
  42930c:	mov	w20, #0x1                   	// #1
  429310:	str	x21, [sp, #32]
  429314:	mov	x21, x0
  429318:	ldr	w0, [x21, #24]
  42931c:	cmp	w0, w20
  429320:	b.ls	429360 <ferror@plt+0x269f0>  // b.plast
  429324:	mov	x1, x19
  429328:	mov	w0, #0xa                   	// #10
  42932c:	bl	402430 <putc_unlocked@plt>
  429330:	ldr	x0, [x21, #16]
  429334:	mov	x1, x19
  429338:	ldr	x0, [x0, w20, uxtw #3]
  42933c:	add	w20, w20, #0x1
  429340:	bl	402870 <fputs_unlocked@plt>
  429344:	mov	x1, x19
  429348:	mov	w0, #0x3a                  	// #58
  42934c:	bl	402430 <putc_unlocked@plt>
  429350:	mov	x1, x19
  429354:	mov	w0, #0xa                   	// #10
  429358:	bl	402430 <putc_unlocked@plt>
  42935c:	b	429318 <ferror@plt+0x269a8>
  429360:	ldp	x19, x20, [sp, #16]
  429364:	ldr	x21, [sp, #32]
  429368:	ldp	x29, x30, [sp], #48
  42936c:	ret
  429370:	stp	x29, x30, [sp, #-64]!
  429374:	mov	x3, x1
  429378:	mov	x2, #0x1                   	// #1
  42937c:	mov	x29, sp
  429380:	stp	x19, x20, [sp, #16]
  429384:	mov	x19, x0
  429388:	mov	x20, x1
  42938c:	add	x0, x0, #0x18
  429390:	mov	x1, #0x4                   	// #4
  429394:	stp	x21, x22, [sp, #32]
  429398:	bl	402310 <fwrite_unlocked@plt>
  42939c:	cmp	x0, #0x1
  4293a0:	b.ne	42940c <ferror@plt+0x26a9c>  // b.any
  4293a4:	mov	w21, #0x0                   	// #0
  4293a8:	ldr	w0, [x19, #24]
  4293ac:	cmp	w0, w21
  4293b0:	b.ls	429420 <ferror@plt+0x26ab0>  // b.plast
  4293b4:	ldr	x0, [x19, #16]
  4293b8:	ubfiz	x22, x21, #3, #32
  4293bc:	ldr	x0, [x0, x22]
  4293c0:	bl	402330 <strlen@plt>
  4293c4:	str	x0, [sp, #56]
  4293c8:	mov	x2, #0x1                   	// #1
  4293cc:	mov	x3, x20
  4293d0:	add	x0, sp, #0x38
  4293d4:	mov	x1, #0x8                   	// #8
  4293d8:	bl	402310 <fwrite_unlocked@plt>
  4293dc:	mov	x2, x0
  4293e0:	cmp	x0, #0x1
  4293e4:	b.ne	42940c <ferror@plt+0x26a9c>  // b.any
  4293e8:	ldr	x0, [x19, #16]
  4293ec:	mov	x3, x20
  4293f0:	ldr	x1, [sp, #56]
  4293f4:	ldr	x0, [x0, x22]
  4293f8:	bl	402310 <fwrite_unlocked@plt>
  4293fc:	cmp	x0, #0x1
  429400:	b.ne	42940c <ferror@plt+0x26a9c>  // b.any
  429404:	add	w21, w21, #0x1
  429408:	b	4293a8 <ferror@plt+0x26a38>
  42940c:	mov	w0, #0xffffffff            	// #-1
  429410:	ldp	x19, x20, [sp, #16]
  429414:	ldp	x21, x22, [sp, #32]
  429418:	ldp	x29, x30, [sp], #64
  42941c:	ret
  429420:	mov	w0, #0x0                   	// #0
  429424:	b	429410 <ferror@plt+0x26aa0>
  429428:	stp	x29, x30, [sp, #-80]!
  42942c:	mov	x3, x1
  429430:	mov	x29, sp
  429434:	stp	x19, x20, [sp, #16]
  429438:	mov	x20, x1
  42943c:	mov	x1, #0x1                   	// #1
  429440:	stp	x21, x22, [sp, #32]
  429444:	mov	x21, x2
  429448:	mov	x2, #0x4                   	// #4
  42944c:	stp	x23, x24, [sp, #48]
  429450:	mov	x24, x0
  429454:	add	x0, sp, #0x44
  429458:	bl	402680 <fread_unlocked@plt>
  42945c:	cmp	x0, #0x4
  429460:	b.ne	4294a8 <ferror@plt+0x26b38>  // b.any
  429464:	mov	x0, #0x200                 	// #512
  429468:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  42946c:	mov	x19, x0
  429470:	mov	x23, #0x200                 	// #512
  429474:	mov	w22, #0x0                   	// #0
  429478:	ldr	w0, [sp, #68]
  42947c:	cmp	w0, w22
  429480:	b.ls	429520 <ferror@plt+0x26bb0>  // b.plast
  429484:	mov	x3, x20
  429488:	add	x0, sp, #0x48
  42948c:	mov	x2, #0x8                   	// #8
  429490:	mov	x1, #0x1                   	// #1
  429494:	bl	402680 <fread_unlocked@plt>
  429498:	cmp	x0, #0x8
  42949c:	b.eq	4294b0 <ferror@plt+0x26b40>  // b.none
  4294a0:	mov	x0, x19
  4294a4:	bl	402730 <free@plt>
  4294a8:	mov	w0, #0xffffffff            	// #-1
  4294ac:	b	42952c <ferror@plt+0x26bbc>
  4294b0:	ldr	x0, [sp, #72]
  4294b4:	add	x1, x0, #0x1
  4294b8:	cmp	x1, x23
  4294bc:	b.ls	4294d4 <ferror@plt+0x26b64>  // b.plast
  4294c0:	add	x23, x0, #0x80
  4294c4:	mov	x0, x19
  4294c8:	mov	x1, x23
  4294cc:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  4294d0:	mov	x19, x0
  4294d4:	ldr	x2, [sp, #72]
  4294d8:	mov	x1, #0x1                   	// #1
  4294dc:	mov	x3, x20
  4294e0:	mov	x0, x19
  4294e4:	bl	402680 <fread_unlocked@plt>
  4294e8:	ldr	x1, [sp, #72]
  4294ec:	cmp	x0, x1
  4294f0:	b.ne	4294a0 <ferror@plt+0x26b30>  // b.any
  4294f4:	strb	wzr, [x19, x0]
  4294f8:	cbz	x21, 429518 <ferror@plt+0x26ba8>
  4294fc:	mov	x1, x21
  429500:	mov	x0, x19
  429504:	bl	438b04 <ferror@plt+0x36194>
  429508:	cbz	w0, 429518 <ferror@plt+0x26ba8>
  42950c:	mov	x1, x19
  429510:	mov	x0, x24
  429514:	bl	429060 <ferror@plt+0x266f0>
  429518:	add	w22, w22, #0x1
  42951c:	b	429478 <ferror@plt+0x26b08>
  429520:	mov	x0, x19
  429524:	bl	402730 <free@plt>
  429528:	mov	w0, #0x0                   	// #0
  42952c:	ldp	x19, x20, [sp, #16]
  429530:	ldp	x21, x22, [sp, #32]
  429534:	ldp	x23, x24, [sp, #48]
  429538:	ldp	x29, x30, [sp], #80
  42953c:	ret
  429540:	stp	x29, x30, [sp, #-48]!
  429544:	mov	x1, #0x90                  	// #144
  429548:	mov	x29, sp
  42954c:	str	x21, [sp, #32]
  429550:	mov	w21, #0x1                   	// #1
  429554:	stp	x19, x20, [sp, #16]
  429558:	lsl	w20, w21, w0
  42955c:	mov	x0, #0x1                   	// #1
  429560:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  429564:	mov	x19, x0
  429568:	adrp	x4, 402000 <memcpy@plt-0x2e0>
  42956c:	adrp	x3, 439000 <ferror@plt+0x36690>
  429570:	add	x4, x4, #0x730
  429574:	add	x3, x3, #0xf40
  429578:	mov	x2, #0x0                   	// #0
  42957c:	mov	x1, #0x0                   	// #0
  429580:	bl	439c78 <_obstack_begin@@Base>
  429584:	str	xzr, [x19, #48]
  429588:	mov	w0, w20
  42958c:	mov	x1, #0x8                   	// #8
  429590:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  429594:	str	x0, [x19, #88]
  429598:	mov	x0, x19
  42959c:	str	w20, [x19, #112]
  4295a0:	strb	w21, [x19, #136]
  4295a4:	ldp	x19, x20, [sp, #16]
  4295a8:	ldr	x21, [sp, #32]
  4295ac:	ldp	x29, x30, [sp], #48
  4295b0:	ret
  4295b4:	stp	x29, x30, [sp, #-32]!
  4295b8:	mov	x1, #0x0                   	// #0
  4295bc:	mov	x29, sp
  4295c0:	str	x19, [sp, #16]
  4295c4:	mov	x19, x0
  4295c8:	bl	439df4 <_obstack_free@@Base>
  4295cc:	ldrb	w0, [x19, #136]
  4295d0:	cbz	w0, 4295dc <ferror@plt+0x26c6c>
  4295d4:	ldr	x0, [x19, #88]
  4295d8:	bl	402730 <free@plt>
  4295dc:	mov	x0, x19
  4295e0:	ldr	x19, [sp, #16]
  4295e4:	ldp	x29, x30, [sp], #32
  4295e8:	b	402730 <free@plt>
  4295ec:	stp	x29, x30, [sp, #-112]!
  4295f0:	mov	x29, sp
  4295f4:	stp	x19, x20, [sp, #16]
  4295f8:	mov	x19, x0
  4295fc:	stp	x25, x26, [sp, #64]
  429600:	mov	x26, x1
  429604:	ldr	w25, [x0, #112]
  429608:	ldr	w0, [x0, #128]
  42960c:	stp	x21, x22, [sp, #32]
  429610:	mov	x21, x2
  429614:	add	w0, w0, #0x1
  429618:	stp	x23, x24, [sp, #48]
  42961c:	mov	w22, w3
  429620:	stp	x27, x28, [sp, #80]
  429624:	sub	w27, w25, #0x1
  429628:	and	w24, w27, w3
  42962c:	ldr	x28, [x19, #88]
  429630:	str	w0, [x19, #128]
  429634:	and	w0, w27, w3
  429638:	str	w4, [sp, #104]
  42963c:	ldr	x20, [x28, x0, lsl #3]
  429640:	cbz	x20, 4298a8 <ferror@plt+0x26f38>
  429644:	cmn	x20, #0x1
  429648:	b.eq	429678 <ferror@plt+0x26d08>  // b.none
  42964c:	ldr	w0, [x20, #12]
  429650:	cmp	w0, w3
  429654:	b.ne	429670 <ferror@plt+0x26d00>  // b.any
  429658:	ldr	w0, [x20, #8]
  42965c:	cmp	w0, w2
  429660:	b.ne	429670 <ferror@plt+0x26d00>  // b.any
  429664:	ldr	x0, [x20]
  429668:	bl	402690 <memcmp@plt>
  42966c:	cbz	w0, 4296f0 <ferror@plt+0x26d80>
  429670:	mov	w23, w25
  429674:	b	42967c <ferror@plt+0x26d0c>
  429678:	mov	w23, w24
  42967c:	add	w4, w22, w22, lsl #4
  429680:	and	w4, w4, w27
  429684:	orr	w4, w4, #0x1
  429688:	ldr	w0, [x19, #132]
  42968c:	add	w0, w0, #0x1
  429690:	str	w0, [x19, #132]
  429694:	add	w0, w24, w4
  429698:	and	w24, w27, w0
  42969c:	and	w0, w27, w0
  4296a0:	ldr	x20, [x28, x0, lsl #3]
  4296a4:	cbz	x20, 429710 <ferror@plt+0x26da0>
  4296a8:	cmn	x20, #0x1
  4296ac:	b.ne	4296bc <ferror@plt+0x26d4c>  // b.any
  4296b0:	cmp	w23, w25
  4296b4:	csel	w23, w23, w24, eq  // eq = none
  4296b8:	b	429688 <ferror@plt+0x26d18>
  4296bc:	ldr	w0, [x20, #12]
  4296c0:	cmp	w0, w22
  4296c4:	b.ne	429688 <ferror@plt+0x26d18>  // b.any
  4296c8:	ldr	w0, [x20, #8]
  4296cc:	cmp	w0, w21
  4296d0:	b.ne	429688 <ferror@plt+0x26d18>  // b.any
  4296d4:	ldr	x0, [x20]
  4296d8:	mov	x2, x21
  4296dc:	mov	x1, x26
  4296e0:	str	w4, [sp, #108]
  4296e4:	bl	402690 <memcmp@plt>
  4296e8:	ldr	w4, [sp, #108]
  4296ec:	cbnz	w0, 429688 <ferror@plt+0x26d18>
  4296f0:	mov	x0, x20
  4296f4:	ldp	x19, x20, [sp, #16]
  4296f8:	ldp	x21, x22, [sp, #32]
  4296fc:	ldp	x23, x24, [sp, #48]
  429700:	ldp	x25, x26, [sp, #64]
  429704:	ldp	x27, x28, [sp, #80]
  429708:	ldp	x29, x30, [sp], #112
  42970c:	ret
  429710:	ldr	w0, [sp, #104]
  429714:	cbnz	w0, 429720 <ferror@plt+0x26db0>
  429718:	mov	x20, #0x0                   	// #0
  42971c:	b	4296f0 <ferror@plt+0x26d80>
  429720:	cmp	w23, w25
  429724:	csel	w24, w24, w23, eq  // eq = none
  429728:	ldr	x1, [x19, #96]
  42972c:	mov	x0, x19
  429730:	blr	x1
  429734:	mov	x20, x0
  429738:	ldr	x0, [x19, #88]
  42973c:	ldr	x1, [x19, #104]
  429740:	str	x20, [x0, w24, uxtw #3]
  429744:	add	x0, x21, #0x1
  429748:	stp	w21, w22, [x20, #8]
  42974c:	cbz	x1, 429820 <ferror@plt+0x26eb0>
  429750:	blr	x1
  429754:	mov	x22, x0
  429758:	mov	x2, x21
  42975c:	mov	x1, x26
  429760:	bl	4022e0 <memcpy@plt>
  429764:	strb	wzr, [x22, x21]
  429768:	str	x22, [x20]
  42976c:	ldp	w0, w1, [x19, #112]
  429770:	add	w1, w1, #0x1
  429774:	str	w1, [x19, #116]
  429778:	lsl	w22, w0, #1
  42977c:	add	w0, w0, w0, lsl #1
  429780:	cmp	w0, w1, lsl #2
  429784:	b.hi	4296f0 <ferror@plt+0x26d80>  // b.pmore
  429788:	mov	w0, w22
  42978c:	mov	x1, #0x8                   	// #8
  429790:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  429794:	mov	x21, x0
  429798:	ldr	x0, [x19, #88]
  42979c:	sub	w2, w22, #0x1
  4297a0:	ldr	w5, [x19, #112]
  4297a4:	mov	x3, x0
  4297a8:	add	x5, x0, x5, lsl #3
  4297ac:	ldr	x7, [x3]
  4297b0:	sub	x1, x7, #0x1
  4297b4:	cmn	x1, #0x3
  4297b8:	b.hi	4297f4 <ferror@plt+0x26e84>  // b.pmore
  4297bc:	ldr	w1, [x7, #12]
  4297c0:	and	w4, w2, w1
  4297c4:	and	w6, w2, w1
  4297c8:	ldr	x4, [x21, x4, lsl #3]
  4297cc:	cbz	x4, 4297f0 <ferror@plt+0x26e80>
  4297d0:	add	w1, w1, w1, lsl #4
  4297d4:	and	w1, w1, w2
  4297d8:	orr	w1, w1, #0x1
  4297dc:	add	w4, w1, w6
  4297e0:	and	w6, w2, w4
  4297e4:	and	w4, w2, w4
  4297e8:	ldr	x4, [x21, x4, lsl #3]
  4297ec:	cbnz	x4, 4297dc <ferror@plt+0x26e6c>
  4297f0:	str	x7, [x21, w6, uxtw #3]
  4297f4:	add	x3, x3, #0x8
  4297f8:	cmp	x5, x3
  4297fc:	b.hi	4297ac <ferror@plt+0x26e3c>  // b.pmore
  429800:	ldrb	w1, [x19, #136]
  429804:	cbz	w1, 42980c <ferror@plt+0x26e9c>
  429808:	bl	402730 <free@plt>
  42980c:	mov	w0, #0x1                   	// #1
  429810:	str	x21, [x19, #88]
  429814:	str	w22, [x19, #112]
  429818:	strb	w0, [x19, #136]
  42981c:	b	4296f0 <ferror@plt+0x26d80>
  429820:	ldp	x2, x1, [x19, #24]
  429824:	sub	x1, x1, x2
  429828:	cmp	x1, x0
  42982c:	b.cs	42983c <ferror@plt+0x26ecc>  // b.hs, b.nlast
  429830:	mov	x1, x0
  429834:	mov	x0, x19
  429838:	bl	439ca4 <_obstack_newchunk@@Base>
  42983c:	ldr	x0, [x19, #24]
  429840:	mov	x2, x21
  429844:	mov	x1, x26
  429848:	bl	4022e0 <memcpy@plt>
  42984c:	ldr	x1, [x19, #24]
  429850:	add	x0, x1, x21
  429854:	add	x0, x0, #0x1
  429858:	str	x0, [x19, #24]
  42985c:	strb	wzr, [x1, x21]
  429860:	ldp	x2, x1, [x19, #16]
  429864:	cmp	x1, x2
  429868:	b.ne	429878 <ferror@plt+0x26f08>  // b.any
  42986c:	ldrb	w0, [x19, #80]
  429870:	orr	w0, w0, #0x2
  429874:	strb	w0, [x19, #80]
  429878:	ldr	x0, [x19, #48]
  42987c:	ldr	x3, [x19, #32]
  429880:	add	x1, x1, x0
  429884:	bic	x0, x1, x0
  429888:	ldr	x1, [x19, #8]
  42988c:	sub	x4, x0, x1
  429890:	sub	x1, x3, x1
  429894:	cmp	x4, x1
  429898:	csel	x0, x0, x3, ls  // ls = plast
  42989c:	stp	x0, x0, [x19, #16]
  4298a0:	str	x2, [x20]
  4298a4:	b	42976c <ferror@plt+0x26dfc>
  4298a8:	ldr	w0, [sp, #104]
  4298ac:	cbnz	w0, 429728 <ferror@plt+0x26db8>
  4298b0:	b	429718 <ferror@plt+0x26da8>
  4298b4:	mov	w4, w3
  4298b8:	mov	x6, #0x0                   	// #0
  4298bc:	mov	w5, #0x0                   	// #0
  4298c0:	mov	w7, #0x43                  	// #67
  4298c4:	cmp	x2, x6
  4298c8:	b.eq	4298e4 <ferror@plt+0x26f74>  // b.none
  4298cc:	mul	w5, w5, w7
  4298d0:	ldrb	w3, [x1, x6]
  4298d4:	add	x6, x6, #0x1
  4298d8:	sub	w5, w5, #0x71
  4298dc:	add	w5, w3, w5
  4298e0:	b	4298c4 <ferror@plt+0x26f54>
  4298e4:	add	w3, w5, w2
  4298e8:	b	4295ec <ferror@plt+0x26c7c>
  4298ec:	stp	x29, x30, [sp, #-64]!
  4298f0:	mov	x29, sp
  4298f4:	stp	x19, x20, [sp, #16]
  4298f8:	mov	x19, x0
  4298fc:	ldr	x20, [x0, #88]
  429900:	str	x23, [sp, #48]
  429904:	ldr	w23, [x0, #112]
  429908:	stp	x21, x22, [sp, #32]
  42990c:	mov	x21, x1
  429910:	mov	x22, x2
  429914:	add	x23, x20, x23, lsl #3
  429918:	ldr	x1, [x20]
  42991c:	sub	x0, x1, #0x1
  429920:	cmn	x0, #0x3
  429924:	b.ls	429948 <ferror@plt+0x26fd8>  // b.plast
  429928:	add	x20, x20, #0x8
  42992c:	cmp	x23, x20
  429930:	b.hi	429918 <ferror@plt+0x26fa8>  // b.pmore
  429934:	ldp	x19, x20, [sp, #16]
  429938:	ldp	x21, x22, [sp, #32]
  42993c:	ldr	x23, [sp, #48]
  429940:	ldp	x29, x30, [sp], #64
  429944:	ret
  429948:	ldr	x0, [x19, #120]
  42994c:	mov	x2, x22
  429950:	blr	x21
  429954:	cbnz	w0, 429928 <ferror@plt+0x26fb8>
  429958:	b	429934 <ferror@plt+0x26fc4>
  42995c:	stp	x29, x30, [sp, #-64]!
  429960:	mov	x29, sp
  429964:	stp	x19, x20, [sp, #16]
  429968:	mov	x20, x0
  42996c:	ldr	x19, [x0, #88]
  429970:	stp	x21, x22, [sp, #32]
  429974:	ldr	w21, [x0, #112]
  429978:	mov	x22, x1
  42997c:	stp	x23, x24, [sp, #48]
  429980:	mov	x23, x2
  429984:	add	x21, x19, x21, lsl #3
  429988:	mov	x24, #0xffffffffffffffff    	// #-1
  42998c:	ldr	x1, [x19]
  429990:	sub	x0, x1, #0x1
  429994:	cmn	x0, #0x3
  429998:	b.hi	4299b0 <ferror@plt+0x27040>  // b.pmore
  42999c:	ldr	x0, [x20, #120]
  4299a0:	mov	x2, x23
  4299a4:	blr	x22
  4299a8:	cbz	w0, 4299b0 <ferror@plt+0x27040>
  4299ac:	str	x24, [x19]
  4299b0:	add	x19, x19, #0x8
  4299b4:	cmp	x21, x19
  4299b8:	b.hi	42998c <ferror@plt+0x2701c>  // b.pmore
  4299bc:	ldp	x19, x20, [sp, #16]
  4299c0:	ldp	x21, x22, [sp, #32]
  4299c4:	ldp	x23, x24, [sp, #48]
  4299c8:	ldp	x29, x30, [sp], #64
  4299cc:	ret
  4299d0:	stp	x29, x30, [sp, #-64]!
  4299d4:	mov	x29, sp
  4299d8:	stp	x19, x20, [sp, #16]
  4299dc:	mov	x19, x0
  4299e0:	ldrb	w0, [x0, #136]
  4299e4:	stp	x21, x22, [sp, #32]
  4299e8:	mov	w20, w3
  4299ec:	mov	x22, x1
  4299f0:	str	x23, [sp, #48]
  4299f4:	mov	w21, w2
  4299f8:	and	w23, w4, #0xff
  4299fc:	cbz	w0, 429a08 <ferror@plt+0x27098>
  429a00:	ldr	x0, [x19, #88]
  429a04:	bl	402730 <free@plt>
  429a08:	strb	w23, [x19, #136]
  429a0c:	ldr	x23, [sp, #48]
  429a10:	str	x22, [x19, #88]
  429a14:	stp	w21, w20, [x19, #112]
  429a18:	ldp	x19, x20, [sp, #16]
  429a1c:	ldp	x21, x22, [sp, #32]
  429a20:	ldp	x29, x30, [sp], #64
  429a24:	ret
  429a28:	stp	x29, x30, [sp, #-112]!
  429a2c:	mov	x29, sp
  429a30:	ldr	w1, [x0, #112]
  429a34:	stp	x21, x22, [sp, #32]
  429a38:	mov	x22, x0
  429a3c:	ldr	x0, [x0, #88]
  429a40:	stp	d8, d9, [sp, #80]
  429a44:	movi	d9, #0x0
  429a48:	lsl	x21, x1, #3
  429a4c:	stp	x19, x20, [sp, #16]
  429a50:	add	x1, x0, x1, lsl #3
  429a54:	mov	x19, #0x0                   	// #0
  429a58:	stp	x23, x24, [sp, #48]
  429a5c:	mov	x24, #0x0                   	// #0
  429a60:	mov	x23, #0x0                   	// #0
  429a64:	stp	x25, x26, [sp, #64]
  429a68:	mov	x25, #0x0                   	// #0
  429a6c:	str	d10, [sp, #96]
  429a70:	ldr	x2, [x0]
  429a74:	cmn	x2, #0x1
  429a78:	b.ne	429c1c <ferror@plt+0x272ac>  // b.any
  429a7c:	add	x25, x25, #0x1
  429a80:	add	x0, x0, #0x8
  429a84:	cmp	x1, x0
  429a88:	b.hi	429a70 <ferror@plt+0x27100>  // b.pmore
  429a8c:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  429a90:	ldr	w26, [x22, #116]
  429a94:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429a98:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  429a9c:	ldr	x0, [x20, #1336]
  429aa0:	add	x2, x2, #0x288
  429aa4:	add	x1, x1, #0x291
  429aa8:	mov	w3, w26
  429aac:	bl	402940 <fprintf@plt>
  429ab0:	ucvtf	d0, x23
  429ab4:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  429ab8:	fmov	d1, x0
  429abc:	ucvtf	d10, w26
  429ac0:	ldr	x0, [x20, #1336]
  429ac4:	mov	x3, x23
  429ac8:	fmul	d0, d0, d1
  429acc:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429ad0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  429ad4:	add	x2, x2, #0x2a8
  429ad8:	add	x1, x1, #0x2b5
  429adc:	adrp	x23, 454000 <_obstack_memory_used@@Base+0x1a198>
  429ae0:	add	x23, x23, #0x29e
  429ae4:	fdiv	d0, d0, d10
  429ae8:	bl	402940 <fprintf@plt>
  429aec:	ldr	w3, [x22, #112]
  429af0:	mov	x1, x23
  429af4:	ldr	x0, [x20, #1336]
  429af8:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429afc:	add	x2, x2, #0x2c8
  429b00:	bl	402940 <fprintf@plt>
  429b04:	ldr	x0, [x20, #1336]
  429b08:	mov	x3, x25
  429b0c:	mov	x1, x23
  429b10:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429b14:	add	x2, x2, #0x2cf
  429b18:	adrp	x25, 454000 <_obstack_memory_used@@Base+0x1a198>
  429b1c:	bl	402940 <fprintf@plt>
  429b20:	add	x25, x25, #0x2e3
  429b24:	ldr	x0, [x22, #104]
  429b28:	cbz	x0, 429c5c <ferror@plt+0x272ec>
  429b2c:	mov	x1, #0x27ff                	// #10239
  429b30:	cmp	x19, x1
  429b34:	ldr	x0, [x20, #1336]
  429b38:	b.ls	429c50 <ferror@plt+0x272e0>  // b.plast
  429b3c:	mov	w1, #0x9fffff              	// #10485759
  429b40:	cmp	x19, x1
  429b44:	b.hi	429c44 <ferror@plt+0x272d4>  // b.pmore
  429b48:	lsr	x3, x19, #10
  429b4c:	mov	w4, #0x6b                  	// #107
  429b50:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429b54:	mov	x1, x25
  429b58:	add	x2, x2, #0x2d8
  429b5c:	bl	402940 <fprintf@plt>
  429b60:	mov	x1, #0x27ff                	// #10239
  429b64:	cmp	x21, x1
  429b68:	ldr	x0, [x20, #1336]
  429b6c:	b.ls	429cfc <ferror@plt+0x2738c>  // b.plast
  429b70:	mov	w1, #0x9fffff              	// #10485759
  429b74:	cmp	x21, x1
  429b78:	b.hi	429cf0 <ferror@plt+0x27380>  // b.pmore
  429b7c:	lsr	x21, x21, #10
  429b80:	mov	w4, #0x6b                  	// #107
  429b84:	mov	x3, x21
  429b88:	mov	x1, x25
  429b8c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429b90:	add	x2, x2, #0x31b
  429b94:	bl	402940 <fprintf@plt>
  429b98:	ldr	w0, [x22, #132]
  429b9c:	ucvtf	d8, x19
  429ba0:	adrp	x19, 454000 <_obstack_memory_used@@Base+0x1a198>
  429ba4:	add	x19, x19, #0x334
  429ba8:	mov	x1, x19
  429bac:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429bb0:	ucvtf	d1, w0
  429bb4:	ldr	w0, [x22, #128]
  429bb8:	fdiv	d8, d8, d10
  429bbc:	add	x2, x2, #0x327
  429bc0:	ucvtf	d0, w0
  429bc4:	ldr	x0, [x20, #1336]
  429bc8:	fdiv	d0, d1, d0
  429bcc:	bl	402940 <fprintf@plt>
  429bd0:	ldr	w0, [x22, #128]
  429bd4:	mov	x1, x19
  429bd8:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429bdc:	add	x2, x2, #0x33f
  429be0:	ucvtf	d0, w0
  429be4:	ldr	x0, [x20, #1336]
  429be8:	fdiv	d0, d10, d0
  429bec:	bl	402940 <fprintf@plt>
  429bf0:	fdiv	d0, d9, d10
  429bf4:	ldr	x0, [x20, #1336]
  429bf8:	fmsub	d0, d8, d8, d0
  429bfc:	fcmpe	d0, #0.0
  429c00:	b.pl	429d04 <ferror@plt+0x27394>  // b.nfrst
  429c04:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429c08:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  429c0c:	add	x2, x2, #0x34b
  429c10:	add	x0, x0, #0x357
  429c14:	mov	w1, #0x165                 	// #357
  429c18:	bl	402980 <ferror@plt+0x10>
  429c1c:	cbz	x2, 429a80 <ferror@plt+0x27110>
  429c20:	ldr	w2, [x2, #8]
  429c24:	add	x23, x23, #0x1
  429c28:	mov	w3, w2
  429c2c:	ucvtf	d0, w2
  429c30:	cmp	x24, w2, uxtw
  429c34:	add	x19, x19, w2, uxtw
  429c38:	csel	x24, x24, x3, cs  // cs = hs, nlast
  429c3c:	fmadd	d9, d0, d0, d9
  429c40:	b	429a80 <ferror@plt+0x27110>
  429c44:	lsr	x3, x19, #20
  429c48:	mov	w4, #0x4d                  	// #77
  429c4c:	b	429b50 <ferror@plt+0x271e0>
  429c50:	mov	x3, x19
  429c54:	mov	w4, #0x20                  	// #32
  429c58:	b	429b50 <ferror@plt+0x271e0>
  429c5c:	mov	x0, x22
  429c60:	bl	439e68 <_obstack_memory_used@@Base>
  429c64:	mov	x1, #0x27ff                	// #10239
  429c68:	sub	x5, x0, x19
  429c6c:	cmp	x19, x1
  429c70:	ldr	x0, [x20, #1336]
  429c74:	b.ls	429cd0 <ferror@plt+0x27360>  // b.plast
  429c78:	mov	w1, #0x9fffff              	// #10485759
  429c7c:	cmp	x19, x1
  429c80:	b.hi	429cc4 <ferror@plt+0x27354>  // b.pmore
  429c84:	lsr	x3, x19, #10
  429c88:	mov	w4, #0x6b                  	// #107
  429c8c:	mov	x1, #0x27ff                	// #10239
  429c90:	cmp	x5, x1
  429c94:	b.ls	429ce8 <ferror@plt+0x27378>  // b.plast
  429c98:	mov	w1, #0x9fffff              	// #10485759
  429c9c:	cmp	x5, x1
  429ca0:	b.hi	429cdc <ferror@plt+0x2736c>  // b.pmore
  429ca4:	lsr	x5, x5, #10
  429ca8:	mov	w6, #0x6b                  	// #107
  429cac:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429cb0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  429cb4:	add	x2, x2, #0x2ef
  429cb8:	add	x1, x1, #0x2fe
  429cbc:	bl	402940 <fprintf@plt>
  429cc0:	b	429b60 <ferror@plt+0x271f0>
  429cc4:	lsr	x3, x19, #20
  429cc8:	mov	w4, #0x4d                  	// #77
  429ccc:	b	429c8c <ferror@plt+0x2731c>
  429cd0:	mov	x3, x19
  429cd4:	mov	w4, #0x20                  	// #32
  429cd8:	b	429c8c <ferror@plt+0x2731c>
  429cdc:	lsr	x5, x5, #20
  429ce0:	mov	w6, #0x4d                  	// #77
  429ce4:	b	429cac <ferror@plt+0x2733c>
  429ce8:	mov	w6, #0x20                  	// #32
  429cec:	b	429cac <ferror@plt+0x2733c>
  429cf0:	lsr	x21, x21, #20
  429cf4:	mov	w4, #0x4d                  	// #77
  429cf8:	b	429b84 <ferror@plt+0x27214>
  429cfc:	mov	w4, #0x20                  	// #32
  429d00:	b	429b84 <ferror@plt+0x27214>
  429d04:	fcmp	d0, #0.0
  429d08:	b.eq	429d7c <ferror@plt+0x2740c>  // b.none
  429d0c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  429d10:	fmov	d1, d0
  429d14:	ldr	d3, [x1, #936]
  429d18:	fnmsub	d2, d1, d1, d0
  429d1c:	fadd	d4, d1, d1
  429d20:	fdiv	d2, d2, d4
  429d24:	fcmpe	d2, d3
  429d28:	fsub	d1, d1, d2
  429d2c:	b.gt	429d18 <ferror@plt+0x273a8>
  429d30:	fmov	d0, d8
  429d34:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429d38:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  429d3c:	add	x2, x2, #0x36d
  429d40:	add	x1, x1, #0x379
  429d44:	bl	402940 <fprintf@plt>
  429d48:	ldr	x0, [x20, #1336]
  429d4c:	mov	x3, x24
  429d50:	mov	x1, x23
  429d54:	ldr	d10, [sp, #96]
  429d58:	ldp	x19, x20, [sp, #16]
  429d5c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  429d60:	ldp	x21, x22, [sp, #32]
  429d64:	add	x2, x2, #0x395
  429d68:	ldp	x23, x24, [sp, #48]
  429d6c:	ldp	x25, x26, [sp, #64]
  429d70:	ldp	d8, d9, [sp, #80]
  429d74:	ldp	x29, x30, [sp], #112
  429d78:	b	402940 <fprintf@plt>
  429d7c:	movi	d1, #0x0
  429d80:	b	429d30 <ferror@plt+0x273c0>
  429d84:	ldp	w3, w2, [x0, #36]
  429d88:	add	w2, w2, #0x1
  429d8c:	str	w2, [x0, #40]
  429d90:	cmp	w2, w3
  429d94:	b.hi	429da0 <ferror@plt+0x27430>  // b.pmore
  429d98:	ldr	x0, [x0, #8]
  429d9c:	str	x1, [x0, w2, uxtw #3]
  429da0:	ret
  429da4:	ldrb	w6, [x3]
  429da8:	adrp	x7, 457000 <_obstack_memory_used@@Base+0x1d198>
  429dac:	mov	x4, x0
  429db0:	add	x7, x7, #0x21a
  429db4:	mov	w8, #0x20                  	// #32
  429db8:	cbz	x2, 429e30 <ferror@plt+0x274c0>
  429dbc:	ldrb	w9, [x1]
  429dc0:	ldrb	w5, [x1]
  429dc4:	ldrh	w9, [x7, x9, lsl #1]
  429dc8:	tst	w9, #0xc00
  429dcc:	b.eq	429dfc <ferror@plt+0x2748c>  // b.none
  429dd0:	cbnz	w6, 429e3c <ferror@plt+0x274cc>
  429dd4:	add	x1, x1, #0x1
  429dd8:	subs	x2, x2, #0x1
  429ddc:	b.eq	429df0 <ferror@plt+0x27480>  // b.none
  429de0:	ldrb	w5, [x1]
  429de4:	ldrh	w5, [x7, x5, lsl #1]
  429de8:	tst	w5, #0xc00
  429dec:	b.ne	429dd4 <ferror@plt+0x27464>  // b.any
  429df0:	strb	w8, [x4]
  429df4:	add	x4, x4, #0x1
  429df8:	b	429db8 <ferror@plt+0x27448>
  429dfc:	cmp	w5, #0x27
  429e00:	b.eq	429e0c <ferror@plt+0x2749c>  // b.none
  429e04:	cmp	w5, #0x22
  429e08:	b.ne	429e18 <ferror@plt+0x274a8>  // b.any
  429e0c:	cbz	w6, 429e28 <ferror@plt+0x274b8>
  429e10:	cmp	w5, w6
  429e14:	csel	w6, w6, wzr, ne  // ne = any
  429e18:	add	x1, x1, #0x1
  429e1c:	sub	x2, x2, #0x1
  429e20:	strb	w5, [x4]
  429e24:	b	429df4 <ferror@plt+0x27484>
  429e28:	mov	w6, w5
  429e2c:	b	429e18 <ferror@plt+0x274a8>
  429e30:	sub	x0, x4, x0
  429e34:	strb	w6, [x3]
  429e38:	ret
  429e3c:	cmp	w5, #0x27
  429e40:	b.eq	429e10 <ferror@plt+0x274a0>  // b.none
  429e44:	cmp	w5, #0x22
  429e48:	b.ne	429e18 <ferror@plt+0x274a8>  // b.any
  429e4c:	b	429e10 <ferror@plt+0x274a0>
  429e50:	stp	x29, x30, [sp, #-64]!
  429e54:	mov	x29, sp
  429e58:	stp	x19, x20, [sp, #16]
  429e5c:	mov	x20, x1
  429e60:	mov	x19, x0
  429e64:	stp	x21, x22, [sp, #32]
  429e68:	ldr	x1, [x0, #1312]
  429e6c:	ldr	x21, [x0, #1328]
  429e70:	sub	x21, x21, x1
  429e74:	ldrh	w1, [x20, #16]
  429e78:	str	x23, [sp, #48]
  429e7c:	cbnz	w1, 429ebc <ferror@plt+0x2754c>
  429e80:	add	x1, x21, #0x1
  429e84:	bl	420710 <ferror@plt+0x1dda0>
  429e88:	ldr	x1, [x19, #1312]
  429e8c:	mov	x22, x0
  429e90:	mov	x2, x21
  429e94:	bl	4022e0 <memcpy@plt>
  429e98:	mov	w0, #0xa                   	// #10
  429e9c:	strb	w0, [x22, x21]
  429ea0:	str	w21, [x20, #12]
  429ea4:	str	x22, [x20, #24]
  429ea8:	ldp	x19, x20, [sp, #16]
  429eac:	ldp	x21, x22, [sp, #32]
  429eb0:	ldr	x23, [sp, #48]
  429eb4:	ldp	x29, x30, [sp], #64
  429eb8:	ret
  429ebc:	ldr	x3, [x0, #56]
  429ec0:	mov	w22, w2
  429ec4:	add	x23, x21, #0xd
  429ec8:	ldr	w2, [x20, #12]
  429ecc:	and	x23, x23, #0xfffffffffffffff8
  429ed0:	ldr	x1, [x3, #24]
  429ed4:	add	x2, x2, x23
  429ed8:	ldr	x3, [x3, #16]
  429edc:	sub	x1, x1, x3
  429ee0:	cmp	x2, x1
  429ee4:	b.ls	429ef0 <ferror@plt+0x27580>  // b.plast
  429ee8:	add	x1, x0, #0x38
  429eec:	bl	42068c <ferror@plt+0x1dd1c>
  429ef0:	ldr	x0, [x19, #56]
  429ef4:	ldr	w2, [x20, #12]
  429ef8:	ldr	x1, [x0, #16]
  429efc:	str	x1, [x20, #24]
  429f00:	add	x0, x1, x2
  429f04:	str	w21, [x1, x2]
  429f08:	add	x0, x0, #0x6
  429f0c:	ldr	x1, [x19, #1312]
  429f10:	sturh	w22, [x0, #-2]
  429f14:	mov	x2, x21
  429f18:	bl	4022e0 <memcpy@plt>
  429f1c:	ldr	x0, [x19, #1312]
  429f20:	str	x0, [x19, #1328]
  429f24:	ldr	w0, [x20, #12]
  429f28:	add	w0, w0, w23
  429f2c:	str	w0, [x20, #12]
  429f30:	cbnz	w22, 429ea8 <ferror@plt+0x27538>
  429f34:	ldr	x1, [x19, #56]
  429f38:	ldr	x2, [x1, #16]
  429f3c:	add	x0, x2, w0, uxtw
  429f40:	str	x0, [x1, #16]
  429f44:	b	429ea8 <ferror@plt+0x27538>
  429f48:	stp	x29, x30, [sp, #-48]!
  429f4c:	mov	x29, sp
  429f50:	stp	x19, x20, [sp, #16]
  429f54:	mov	x20, x0
  429f58:	add	x19, x1, #0x3
  429f5c:	str	x21, [sp, #32]
  429f60:	ldr	x21, [x0, #1328]
  429f64:	ldr	x0, [x0, #1320]
  429f68:	sub	x0, x0, x21
  429f6c:	cmp	x0, x19
  429f70:	b.cs	429fa4 <ferror@plt+0x27634>  // b.hs, b.nlast
  429f74:	ldr	x0, [x20, #1312]
  429f78:	sub	x21, x21, x0
  429f7c:	add	x19, x19, x21
  429f80:	add	x19, x19, x19, lsl #1
  429f84:	lsr	x19, x19, #1
  429f88:	mov	x1, x19
  429f8c:	bl	439fc4 <_obstack_memory_used@@Base+0x15c>
  429f90:	add	x19, x0, x19
  429f94:	str	x0, [x20, #1312]
  429f98:	add	x0, x0, x21
  429f9c:	str	x19, [x20, #1320]
  429fa0:	str	x0, [x20, #1328]
  429fa4:	ldp	x19, x20, [sp, #16]
  429fa8:	ldr	x21, [sp, #32]
  429fac:	ldp	x29, x30, [sp], #48
  429fb0:	ret
  429fb4:	stp	x29, x30, [sp, #-64]!
  429fb8:	mov	x29, sp
  429fbc:	ldrb	w2, [x1, #18]
  429fc0:	stp	x19, x20, [sp, #16]
  429fc4:	mov	x20, x1
  429fc8:	and	w2, w2, #0x3
  429fcc:	stp	x21, x22, [sp, #32]
  429fd0:	cmp	w2, #0x3
  429fd4:	mov	x22, x0
  429fd8:	str	x23, [sp, #48]
  429fdc:	b.ne	42a03c <ferror@plt+0x276cc>  // b.any
  429fe0:	mov	w2, #0x0                   	// #0
  429fe4:	bl	42587c <ferror@plt+0x22f0c>
  429fe8:	mov	x23, x0
  429fec:	bl	402330 <strlen@plt>
  429ff0:	mov	x19, x0
  429ff4:	add	x1, x0, #0x1
  429ff8:	mov	x0, x22
  429ffc:	bl	420710 <ferror@plt+0x1dda0>
  42a000:	mov	x21, x0
  42a004:	mov	x2, x19
  42a008:	mov	x1, x23
  42a00c:	bl	4022e0 <memcpy@plt>
  42a010:	mov	w0, #0xa                   	// #10
  42a014:	strb	w0, [x21, x19]
  42a018:	mov	x3, x19
  42a01c:	mov	x2, x21
  42a020:	mov	x1, x20
  42a024:	mov	x0, x22
  42a028:	ldp	x19, x20, [sp, #16]
  42a02c:	ldp	x21, x22, [sp, #32]
  42a030:	ldr	x23, [sp, #48]
  42a034:	ldp	x29, x30, [sp], #64
  42a038:	b	425f3c <ferror@plt+0x235cc>
  42a03c:	ldr	x0, [x1, #24]
  42a040:	ldrb	w1, [x0, #19]
  42a044:	ldr	w19, [x0, #12]
  42a048:	orr	w1, w1, #0x20
  42a04c:	strb	w1, [x0, #19]
  42a050:	ldr	x21, [x0, #24]
  42a054:	b	42a018 <ferror@plt+0x276a8>
  42a058:	stp	x29, x30, [sp, #-32]!
  42a05c:	mov	w3, #0x204                 	// #516
  42a060:	mov	x29, sp
  42a064:	stp	x19, x20, [sp, #16]
  42a068:	mov	x19, x0
  42a06c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  42a070:	add	x0, x0, #0x21a
  42a074:	ldr	x20, [x19, #1328]
  42a078:	ldrb	w2, [x1], #1
  42a07c:	strb	w2, [x20], #1
  42a080:	ldrb	w2, [x1]
  42a084:	ldrh	w2, [x0, x2, lsl #1]
  42a088:	tst	w3, w2
  42a08c:	b.ne	42a078 <ferror@plt+0x27708>  // b.any
  42a090:	ldr	x0, [x19, #136]
  42a094:	mov	w3, #0x1                   	// #1
  42a098:	str	x1, [x0, #16]
  42a09c:	ldr	x0, [x19, #1088]
  42a0a0:	ldr	x1, [x19, #1328]
  42a0a4:	sub	x2, x20, x1
  42a0a8:	bl	4298b4 <ferror@plt+0x26f44>
  42a0ac:	str	x20, [x19, #1328]
  42a0b0:	ldp	x19, x20, [sp, #16]
  42a0b4:	ldp	x29, x30, [sp], #32
  42a0b8:	ret
  42a0bc:	stp	x29, x30, [sp, #-64]!
  42a0c0:	mov	x29, sp
  42a0c4:	stp	x19, x20, [sp, #16]
  42a0c8:	mov	x20, x1
  42a0cc:	mov	x19, x0
  42a0d0:	ldr	x1, [x0, #40]
  42a0d4:	stp	x23, x24, [sp, #48]
  42a0d8:	mov	w23, w2
  42a0dc:	stp	x21, x22, [sp, #32]
  42a0e0:	ldr	w24, [x1, #60]
  42a0e4:	ldr	x1, [x0, #136]
  42a0e8:	ldr	x22, [x0]
  42a0ec:	ldr	x1, [x1, #8]
  42a0f0:	str	x20, [x22]
  42a0f4:	cbz	x1, 42a18c <ferror@plt+0x2781c>
  42a0f8:	mov	x1, x20
  42a0fc:	add	x0, x20, #0x2
  42a100:	ldrb	w2, [x1, #1]!
  42a104:	cmp	w2, #0x2f
  42a108:	csel	x0, x0, x1, eq  // eq = none
  42a10c:	mov	x1, x0
  42a110:	ldrb	w3, [x1], #1
  42a114:	cmp	w3, #0x2f
  42a118:	b.ne	42a15c <ferror@plt+0x277ec>  // b.any
  42a11c:	ldurb	w0, [x1, #-2]
  42a120:	cmp	w0, #0x2a
  42a124:	b.ne	42a154 <ferror@plt+0x277e4>  // b.any
  42a128:	mov	w21, #0x0                   	// #0
  42a12c:	str	x1, [x22]
  42a130:	ldrb	w1, [x19, #16]
  42a134:	ldr	x0, [x19, #1328]
  42a138:	cbz	w1, 42a1bc <ferror@plt+0x2784c>
  42a13c:	cbz	w23, 42a19c <ferror@plt+0x2782c>
  42a140:	ldrb	w1, [x19, #1124]
  42a144:	cbz	w1, 42a1c4 <ferror@plt+0x27854>
  42a148:	sub	x0, x0, #0x1
  42a14c:	str	x0, [x19, #1328]
  42a150:	b	42a1a4 <ferror@plt+0x27834>
  42a154:	mov	x0, x1
  42a158:	b	42a10c <ferror@plt+0x2779c>
  42a15c:	cmp	w3, #0xa
  42a160:	b.ne	42a154 <ferror@plt+0x277e4>  // b.any
  42a164:	str	x0, [x22]
  42a168:	mov	w2, w24
  42a16c:	mov	x0, x19
  42a170:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x18198>
  42a174:	mov	w3, #0x0                   	// #0
  42a178:	add	x4, x4, #0xdbd
  42a17c:	mov	w1, #0x3                   	// #3
  42a180:	mov	w21, #0x1                   	// #1
  42a184:	bl	4195fc <ferror@plt+0x16c8c>
  42a188:	b	42a130 <ferror@plt+0x277c0>
  42a18c:	bl	41f6e8 <ferror@plt+0x1cd78>
  42a190:	ands	w21, w0, #0xff
  42a194:	b.eq	42a130 <ferror@plt+0x277c0>  // b.none
  42a198:	b	42a168 <ferror@plt+0x277f8>
  42a19c:	mov	w1, #0x20                  	// #32
  42a1a0:	sturb	w1, [x0, #-1]
  42a1a4:	ldr	x0, [x22]
  42a1a8:	ldp	x19, x20, [sp, #16]
  42a1ac:	ldp	x21, x22, [sp, #32]
  42a1b0:	ldp	x23, x24, [sp, #48]
  42a1b4:	ldp	x29, x30, [sp], #64
  42a1b8:	ret
  42a1bc:	ldrb	w1, [x19, #1123]
  42a1c0:	b	42a144 <ferror@plt+0x277d4>
  42a1c4:	ldr	x23, [x22]
  42a1c8:	mov	x1, x20
  42a1cc:	sub	x23, x23, x20
  42a1d0:	mov	x2, x23
  42a1d4:	bl	4022e0 <memcpy@plt>
  42a1d8:	ldr	x1, [x19, #1328]
  42a1dc:	add	x0, x1, x23
  42a1e0:	cbz	w21, 42a14c <ferror@plt+0x277dc>
  42a1e4:	add	x0, x0, #0x1
  42a1e8:	str	x0, [x19, #1328]
  42a1ec:	mov	w0, #0x2a                  	// #42
  42a1f0:	strb	w0, [x1, x23]
  42a1f4:	ldr	x0, [x19, #1328]
  42a1f8:	add	x1, x0, #0x1
  42a1fc:	str	x1, [x19, #1328]
  42a200:	mov	w1, #0x2f                  	// #47
  42a204:	strb	w1, [x0]
  42a208:	b	42a1a4 <ferror@plt+0x27834>
  42a20c:	stp	x29, x30, [sp, #-48]!
  42a210:	mov	x29, sp
  42a214:	stp	x19, x20, [sp, #16]
  42a218:	mov	x19, x0
  42a21c:	mov	w20, w2
  42a220:	ldr	x3, [x0, #1328]
  42a224:	str	x21, [sp, #32]
  42a228:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x1d198>
  42a22c:	add	x21, x21, #0x21a
  42a230:	mov	x0, x1
  42a234:	ldrb	w5, [x1], #1
  42a238:	mov	x4, x3
  42a23c:	strb	w5, [x3], #1
  42a240:	mov	x2, x5
  42a244:	ldrh	w5, [x21, x5, lsl #1]
  42a248:	tbnz	w5, #11, 42a230 <ferror@plt+0x278c0>
  42a24c:	cmp	w2, #0x2f
  42a250:	b.ne	42a280 <ferror@plt+0x27910>  // b.any
  42a254:	ldrb	w2, [x0, #1]
  42a258:	cmp	w2, #0x2a
  42a25c:	b.ne	42a280 <ferror@plt+0x27910>  // b.any
  42a260:	cbz	w20, 42a280 <ferror@plt+0x27910>
  42a264:	str	x3, [x19, #1328]
  42a268:	mov	x0, x19
  42a26c:	mov	w2, #0x0                   	// #0
  42a270:	bl	42a0bc <ferror@plt+0x2774c>
  42a274:	mov	x1, x0
  42a278:	ldr	x3, [x19, #1328]
  42a27c:	b	42a230 <ferror@plt+0x278c0>
  42a280:	ldr	x21, [sp, #32]
  42a284:	str	x4, [x19, #1328]
  42a288:	ldp	x19, x20, [sp, #16]
  42a28c:	ldp	x29, x30, [sp], #48
  42a290:	ret
  42a294:	ldrh	w2, [x1, #18]
  42a298:	tbz	w2, #6, 42a2e4 <ferror@plt+0x27974>
  42a29c:	ldrb	w2, [x1, #18]
  42a2a0:	and	w2, w2, #0x3
  42a2a4:	cmp	w2, #0x3
  42a2a8:	b.ne	42a2ec <ferror@plt+0x2797c>  // b.any
  42a2ac:	ldr	w2, [x1, #24]
  42a2b0:	cmp	w2, #0xa
  42a2b4:	cset	w2, eq  // eq = none
  42a2b8:	cbz	w2, 42a2fc <ferror@plt+0x2798c>
  42a2bc:	ldr	x2, [x0, #136]
  42a2c0:	mov	x3, #0x0                   	// #0
  42a2c4:	ldr	x4, [x2, #40]
  42a2c8:	add	x3, x3, #0x1
  42a2cc:	cmp	x4, x1
  42a2d0:	b.ne	42a2dc <ferror@plt+0x2796c>  // b.any
  42a2d4:	cmp	x3, #0x14
  42a2d8:	b.hi	42a2fc <ferror@plt+0x2798c>  // b.pmore
  42a2dc:	ldr	x2, [x2, #8]
  42a2e0:	cbnz	x2, 42a2c4 <ferror@plt+0x27954>
  42a2e4:	mov	w0, #0x0                   	// #0
  42a2e8:	ret
  42a2ec:	ldr	x2, [x1, #24]
  42a2f0:	ldrb	w2, [x2, #19]
  42a2f4:	ubfx	x2, x2, #2, #1
  42a2f8:	b	42a2b8 <ferror@plt+0x27948>
  42a2fc:	stp	x29, x30, [sp, #-16]!
  42a300:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  42a304:	add	x2, x2, #0x3b0
  42a308:	mov	x29, sp
  42a30c:	ldr	x3, [x1]
  42a310:	mov	w1, #0x3                   	// #3
  42a314:	bl	419440 <ferror@plt+0x16ad0>
  42a318:	mov	w0, #0x1                   	// #1
  42a31c:	ldp	x29, x30, [sp], #16
  42a320:	ret
  42a324:	ldr	x3, [x0]
  42a328:	ldr	x4, [x3]
  42a32c:	str	x4, [x0, #1344]
  42a330:	ldr	x4, [x3, #32]
  42a334:	str	x4, [x0, #1352]
  42a338:	ldr	x4, [x3, #16]
  42a33c:	str	x3, [x0, #8]
  42a340:	str	x4, [x0, #1360]
  42a344:	stp	x1, x1, [x3]
  42a348:	add	x1, x1, x2
  42a34c:	str	x1, [x3, #32]
  42a350:	strb	wzr, [x3, #104]
  42a354:	ret
  42a358:	ldr	x1, [x0, #8]
  42a35c:	ldr	x2, [x0, #1344]
  42a360:	str	x2, [x1]
  42a364:	ldr	x2, [x0, #1352]
  42a368:	str	x2, [x1, #32]
  42a36c:	ldr	x2, [x0, #1360]
  42a370:	str	x2, [x1, #8]
  42a374:	mov	w2, #0x1                   	// #1
  42a378:	strb	w2, [x1, #104]
  42a37c:	str	xzr, [x0, #8]
  42a380:	ret
  42a384:	stp	x29, x30, [sp, #-256]!
  42a388:	mov	x29, sp
  42a38c:	stp	x19, x20, [sp, #16]
  42a390:	stp	x21, x22, [sp, #32]
  42a394:	stp	x23, x24, [sp, #48]
  42a398:	stp	x25, x26, [sp, #64]
  42a39c:	mov	x26, x0
  42a3a0:	mov	x25, x1
  42a3a4:	stp	x27, x28, [sp, #80]
  42a3a8:	ldrb	w0, [x0, #19]
  42a3ac:	ldr	x1, [x26]
  42a3b0:	cmp	w0, #0x0
  42a3b4:	cset	w0, ne  // ne = any
  42a3b8:	str	w0, [sp, #112]
  42a3bc:	ldr	x0, [x26, #136]
  42a3c0:	ldr	x3, [x1]
  42a3c4:	stp	xzr, xzr, [sp, #176]
  42a3c8:	ldr	x1, [x1, #32]
  42a3cc:	str	xzr, [sp, #192]
  42a3d0:	str	wzr, [sp, #200]
  42a3d4:	stp	x3, x1, [x0, #16]
  42a3d8:	ands	w0, w2, #0xff
  42a3dc:	str	x3, [sp, #104]
  42a3e0:	str	w0, [sp, #116]
  42a3e4:	stp	xzr, xzr, [sp, #160]
  42a3e8:	b.ne	42a400 <ferror@plt+0x27a90>  // b.any
  42a3ec:	ldr	x0, [x26, #1312]
  42a3f0:	str	x0, [x26, #1328]
  42a3f4:	ldr	x0, [x26, #40]
  42a3f8:	ldr	w0, [x0, #60]
  42a3fc:	str	w0, [x26, #1336]
  42a400:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  42a404:	mov	w27, #0x0                   	// #0
  42a408:	add	x0, x0, #0x404
  42a40c:	mov	w20, #0x0                   	// #0
  42a410:	mov	w23, #0x0                   	// #0
  42a414:	str	x0, [sp, #120]
  42a418:	ldr	x22, [x26, #136]
  42a41c:	mov	x0, x26
  42a420:	ldp	x28, x1, [x22, #16]
  42a424:	sub	x1, x1, x28
  42a428:	bl	429f48 <ferror@plt+0x275d8>
  42a42c:	ldr	x24, [x26, #1328]
  42a430:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  42a434:	add	x0, x0, #0x21a
  42a438:	str	x0, [sp, #128]
  42a43c:	ldr	x0, [x22, #8]
  42a440:	cbnz	x0, 42a478 <ferror@plt+0x27b08>
  42a444:	ldr	w0, [sp, #116]
  42a448:	cbnz	w0, 42a478 <ferror@plt+0x27b08>
  42a44c:	ldr	x0, [x26]
  42a450:	ldr	w1, [x0, #56]
  42a454:	ldr	x4, [x0, #48]
  42a458:	lsl	x1, x1, #4
  42a45c:	ldr	x1, [x4, x1]
  42a460:	cmp	x1, x28
  42a464:	b.hi	42a478 <ferror@plt+0x27b08>  // b.pmore
  42a468:	str	x28, [x0]
  42a46c:	mov	w1, #0x0                   	// #0
  42a470:	mov	x0, x26
  42a474:	bl	41f4d4 <ferror@plt+0x1cb64>
  42a478:	mov	x19, x28
  42a47c:	mov	x21, x24
  42a480:	ldrb	w0, [x19], #1
  42a484:	strb	w0, [x21], #1
  42a488:	cmp	w0, #0x2f
  42a48c:	b.hi	42a52c <ferror@plt+0x27bbc>  // b.pmore
  42a490:	cmp	w0, #0x1f
  42a494:	b.hi	42a4f4 <ferror@plt+0x27b84>  // b.pmore
  42a498:	cmp	w0, #0xc
  42a49c:	b.ls	42a514 <ferror@plt+0x27ba4>  // b.plast
  42a4a0:	ldrb	w0, [x26, #16]
  42a4a4:	cbnz	w0, 42a4ac <ferror@plt+0x27b3c>
  42a4a8:	strb	wzr, [x26, #440]
  42a4ac:	cmp	w27, #0x8
  42a4b0:	b.hi	42a4cc <ferror@plt+0x27b5c>  // b.pmore
  42a4b4:	mov	x0, #0x16b                 	// #363
  42a4b8:	lsr	x0, x0, x27
  42a4bc:	mvn	x0, x0
  42a4c0:	and	w1, w0, #0x1
  42a4c4:	str	w1, [sp, #112]
  42a4c8:	tbz	w0, #0, 42a4ec <ferror@plt+0x27b7c>
  42a4cc:	str	wzr, [sp, #112]
  42a4d0:	b	42a4d8 <ferror@plt+0x27b68>
  42a4d4:	mov	w27, #0x6                   	// #6
  42a4d8:	mov	x24, x21
  42a4dc:	mov	x28, x19
  42a4e0:	b	42a43c <ferror@plt+0x27acc>
  42a4e4:	mov	w27, #0x3                   	// #3
  42a4e8:	b	42a4d8 <ferror@plt+0x27b68>
  42a4ec:	mov	w27, #0x0                   	// #0
  42a4f0:	b	42a4d8 <ferror@plt+0x27b68>
  42a4f4:	sub	w1, w0, #0x20
  42a4f8:	cmp	w1, #0xf
  42a4fc:	b.hi	42a4a0 <ferror@plt+0x27b30>  // b.pmore
  42a500:	ldr	x2, [sp, #120]
  42a504:	ldrh	w1, [x2, w1, uxtw #1]
  42a508:	adr	x2, 42a514 <ferror@plt+0x27ba4>
  42a50c:	add	x1, x2, w1, sxth #2
  42a510:	br	x1
  42a514:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42a518:	add	x1, x1, #0x424
  42a51c:	ldrb	w0, [x1, w0, uxtw]
  42a520:	adr	x1, 42a52c <ferror@plt+0x27bbc>
  42a524:	add	x0, x1, w0, sxtb #2
  42a528:	br	x0
  42a52c:	cmp	w0, #0x3e
  42a530:	b.eq	42a6a8 <ferror@plt+0x27d38>  // b.none
  42a534:	b.hi	42a554 <ferror@plt+0x27be4>  // b.pmore
  42a538:	cmp	w0, #0x3c
  42a53c:	b.ne	42a4a0 <ferror@plt+0x27b30>  // b.any
  42a540:	ldr	w0, [sp, #112]
  42a544:	cmp	w0, #0x0
  42a548:	mov	w0, #0x3e                  	// #62
  42a54c:	csel	w20, w20, w0, eq  // eq = none
  42a550:	b	42a4a0 <ferror@plt+0x27b30>
  42a554:	cmp	w0, #0x5c
  42a558:	b.eq	42a6c8 <ferror@plt+0x27d58>  // b.none
  42a55c:	b.hi	42a5e4 <ferror@plt+0x27c74>  // b.pmore
  42a560:	sub	w0, w0, #0x41
  42a564:	and	w0, w0, #0xff
  42a568:	cmp	w0, #0x19
  42a56c:	b.hi	42a4a0 <ferror@plt+0x27b30>  // b.pmore
  42a570:	ldrb	w0, [x26, #18]
  42a574:	cbnz	w0, 42a4a0 <ferror@plt+0x27b30>
  42a578:	cmp	w20, #0x0
  42a57c:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  42a580:	b.eq	42a4a0 <ferror@plt+0x27b30>  // b.none
  42a584:	str	x24, [x26, #1328]
  42a588:	mov	x1, x28
  42a58c:	mov	x0, x26
  42a590:	bl	42a058 <ferror@plt+0x276e8>
  42a594:	mov	x28, x0
  42a598:	ldrb	w0, [x0, #18]
  42a59c:	ldr	x19, [x22, #16]
  42a5a0:	ldr	x21, [x26, #1328]
  42a5a4:	tbz	w0, #1, 42a730 <ferror@plt+0x27dc0>
  42a5a8:	cmp	w27, #0x1
  42a5ac:	b.hi	42a730 <ferror@plt+0x27dc0>  // b.pmore
  42a5b0:	ldrb	w1, [x26, #24]
  42a5b4:	cbz	w1, 42a770 <ferror@plt+0x27e00>
  42a5b8:	cbz	x25, 42a73c <ferror@plt+0x27dcc>
  42a5bc:	and	w0, w0, #0x3
  42a5c0:	cmp	w0, #0x1
  42a5c4:	b.ne	42a734 <ferror@plt+0x27dc4>  // b.any
  42a5c8:	ldrh	w2, [x28, #24]
  42a5cc:	mov	x1, x25
  42a5d0:	str	x24, [x26, #1328]
  42a5d4:	mov	x0, x26
  42a5d8:	bl	429e50 <ferror@plt+0x274e0>
  42a5dc:	ldr	x21, [x26, #1312]
  42a5e0:	b	42a4a0 <ferror@plt+0x27b30>
  42a5e4:	cmp	w0, #0x5f
  42a5e8:	b.eq	42a570 <ferror@plt+0x27c00>  // b.none
  42a5ec:	sub	w0, w0, #0x61
  42a5f0:	b	42a564 <ferror@plt+0x27bf4>
  42a5f4:	ldr	x0, [x22, #8]
  42a5f8:	str	x24, [x26, #1328]
  42a5fc:	cbz	x0, 42a60c <ferror@plt+0x27c9c>
  42a600:	mov	x0, x26
  42a604:	bl	425f94 <ferror@plt+0x23624>
  42a608:	b	42a418 <ferror@plt+0x27aa8>
  42a60c:	ldr	x0, [x26]
  42a610:	ldr	w1, [sp, #116]
  42a614:	str	x19, [x0]
  42a618:	cbnz	w1, 42ae68 <ferror@plt+0x284f8>
  42a61c:	mov	w1, #0x1                   	// #1
  42a620:	strb	w1, [x0, #104]
  42a624:	ldr	x0, [x26, #40]
  42a628:	mov	w1, #0x18                  	// #24
  42a62c:	ldr	w2, [x0, #12]
  42a630:	ldr	w4, [x0, #60]
  42a634:	sub	w2, w2, #0x1
  42a638:	smull	x2, w2, w1
  42a63c:	ldr	x1, [x0]
  42a640:	add	x5, x1, x2
  42a644:	ldr	w1, [x1, x2]
  42a648:	mov	w2, #0x0                   	// #0
  42a64c:	sub	w4, w4, w1
  42a650:	ldrb	w1, [x5, #6]
  42a654:	lsr	w4, w4, w1
  42a658:	ldr	w1, [x5, #16]
  42a65c:	add	w1, w1, #0x1
  42a660:	add	w1, w4, w1
  42a664:	bl	42333c <ferror@plt+0x209cc>
  42a668:	sub	w0, w27, #0x1
  42a66c:	cmp	w0, #0x1
  42a670:	b.hi	42ae68 <ferror@plt+0x284f8>  // b.pmore
  42a674:	ldrb	w0, [x26, #16]
  42a678:	cbnz	w0, 42ae68 <ferror@plt+0x284f8>
  42a67c:	mov	x0, x26
  42a680:	bl	41fb50 <ferror@plt+0x1d1e0>
  42a684:	tst	w0, #0xff
  42a688:	b.eq	42ae68 <ferror@plt+0x284f8>  // b.none
  42a68c:	cmp	w27, #0x2
  42a690:	b.ne	42a69c <ferror@plt+0x27d2c>  // b.any
  42a694:	mov	w0, #0x20                  	// #32
  42a698:	strb	w0, [x24]
  42a69c:	ldr	x0, [x26]
  42a6a0:	ldr	x19, [x0]
  42a6a4:	b	42a4d8 <ferror@plt+0x27b68>
  42a6a8:	cmp	w20, #0x3e
  42a6ac:	csel	w20, w20, wzr, ne  // ne = any
  42a6b0:	b	42a4a0 <ferror@plt+0x27b30>
  42a6b4:	cmp	w20, w0
  42a6b8:	b.eq	42a8ac <ferror@plt+0x27f3c>  // b.none
  42a6bc:	cmp	w20, #0x0
  42a6c0:	csel	w20, w20, w0, ne  // ne = any
  42a6c4:	b	42a4a0 <ferror@plt+0x27b30>
  42a6c8:	ldrb	w1, [x28, #1]
  42a6cc:	sub	w0, w1, #0x22
  42a6d0:	and	w0, w0, #0xff
  42a6d4:	cmp	w0, #0x3a
  42a6d8:	b.hi	42a4a0 <ferror@plt+0x27b30>  // b.pmore
  42a6dc:	mov	x2, #0x21                  	// #33
  42a6e0:	movk	x2, #0x400, lsl #48
  42a6e4:	lsr	x0, x2, x0
  42a6e8:	tbz	w0, #0, 42a4a0 <ferror@plt+0x27b30>
  42a6ec:	add	x19, x28, #0x2
  42a6f0:	add	x21, x24, #0x2
  42a6f4:	strb	w1, [x24, #1]
  42a6f8:	b	42a4a0 <ferror@plt+0x27b30>
  42a6fc:	cbnz	w20, 42a4a0 <ferror@plt+0x27b30>
  42a700:	ldrb	w0, [x28, #1]
  42a704:	cmp	w0, #0x2a
  42a708:	b.ne	42a4a0 <ferror@plt+0x27b30>  // b.any
  42a70c:	cmp	x25, #0x0
  42a710:	str	x21, [x26, #1328]
  42a714:	mov	x1, x19
  42a718:	cset	w2, ne  // ne = any
  42a71c:	mov	x0, x26
  42a720:	bl	42a0bc <ferror@plt+0x2774c>
  42a724:	mov	x19, x0
  42a728:	ldr	x21, [x26, #1328]
  42a72c:	b	42a4d8 <ferror@plt+0x27b68>
  42a730:	cbnz	x25, 42a5bc <ferror@plt+0x27c4c>
  42a734:	cmp	w27, #0x5
  42a738:	b.eq	42a4d4 <ferror@plt+0x27b64>  // b.none
  42a73c:	ldrb	w0, [x26, #20]
  42a740:	cbz	w0, 42a4a0 <ferror@plt+0x27b30>
  42a744:	ldr	x0, [x26, #1248]
  42a748:	cmp	x0, x28
  42a74c:	b.eq	42a4e4 <ferror@plt+0x27b74>  // b.none
  42a750:	ldr	x0, [x26, #1288]
  42a754:	cmp	x0, x28
  42a758:	b.eq	42a768 <ferror@plt+0x27df8>  // b.none
  42a75c:	ldr	x0, [x26, #1296]
  42a760:	cmp	x0, x28
  42a764:	b.ne	42a4a0 <ferror@plt+0x27b30>  // b.any
  42a768:	mov	w27, #0x8                   	// #8
  42a76c:	b	42a4d8 <ferror@plt+0x27b68>
  42a770:	strb	wzr, [x26, #440]
  42a774:	and	w0, w0, #0x3
  42a778:	cmp	w0, #0x3
  42a77c:	b.ne	42a794 <ferror@plt+0x27e24>  // b.any
  42a780:	ldr	w0, [x28, #24]
  42a784:	cmp	w0, #0xa
  42a788:	b.ne	42a7f4 <ferror@plt+0x27e84>  // b.any
  42a78c:	mov	w27, #0x1                   	// #1
  42a790:	b	42a7a4 <ferror@plt+0x27e34>
  42a794:	ldr	x0, [x28, #24]
  42a798:	ldrb	w1, [x0, #19]
  42a79c:	tbz	w1, #2, 42a7f4 <ferror@plt+0x27e84>
  42a7a0:	ldrh	w27, [x0, #16]
  42a7a4:	ldr	x1, [sp, #160]
  42a7a8:	cbz	x1, 42a7b4 <ferror@plt+0x27e44>
  42a7ac:	mov	x0, x26
  42a7b0:	bl	4204c0 <ferror@plt+0x1db50>
  42a7b4:	add	w1, w27, #0x1
  42a7b8:	mov	x0, x26
  42a7bc:	ubfiz	x1, x1, #3, #17
  42a7c0:	bl	4204e0 <ferror@plt+0x1db70>
  42a7c4:	str	x0, [sp, #160]
  42a7c8:	ldr	x0, [x0, #16]
  42a7cc:	stp	x0, x28, [sp, #168]
  42a7d0:	ldr	x0, [x26, #1312]
  42a7d4:	stp	w27, wzr, [sp, #196]
  42a7d8:	mov	w27, #0x1                   	// #1
  42a7dc:	sub	x24, x24, x0
  42a7e0:	str	x24, [sp, #184]
  42a7e4:	ldr	x0, [x26, #40]
  42a7e8:	ldr	w0, [x0, #60]
  42a7ec:	str	w0, [sp, #192]
  42a7f0:	b	42a4d8 <ferror@plt+0x27b68>
  42a7f4:	mov	x1, x28
  42a7f8:	mov	x0, x26
  42a7fc:	bl	42a294 <ferror@plt+0x27924>
  42a800:	tst	w0, #0xff
  42a804:	b.ne	42a4a0 <ferror@plt+0x27b30>  // b.any
  42a808:	str	x24, [x26, #1328]
  42a80c:	mov	x1, x28
  42a810:	mov	x0, x26
  42a814:	mov	w27, #0x0                   	// #0
  42a818:	bl	429fb4 <ferror@plt+0x27644>
  42a81c:	b	42a418 <ferror@plt+0x27aa8>
  42a820:	cbnz	w20, 42a4a0 <ferror@plt+0x27b30>
  42a824:	add	w23, w23, #0x1
  42a828:	cmp	w27, #0x1
  42a82c:	b.ne	42a864 <ferror@plt+0x27ef4>  // b.any
  42a830:	ldr	x1, [sp, #176]
  42a834:	mov	x0, x26
  42a838:	bl	42a294 <ferror@plt+0x27924>
  42a83c:	tst	w0, #0xff
  42a840:	b.ne	42ae44 <ferror@plt+0x284d4>  // b.any
  42a844:	ldr	x1, [sp, #168]
  42a848:	mov	w23, w27
  42a84c:	ldr	x0, [sp, #184]
  42a850:	mov	w27, #0x2                   	// #2
  42a854:	ldr	x21, [x26, #1312]
  42a858:	str	x0, [x1]
  42a85c:	add	x21, x21, x0
  42a860:	b	42a4a0 <ferror@plt+0x27b30>
  42a864:	cmp	w27, #0x6
  42a868:	b.eq	42ae4c <ferror@plt+0x284dc>  // b.none
  42a86c:	cmp	w27, #0x3
  42a870:	b.eq	42ae54 <ferror@plt+0x284e4>  // b.none
  42a874:	cmp	w27, #0x8
  42a878:	mov	w0, #0x9                   	// #9
  42a87c:	csel	w27, w27, w0, ne  // ne = any
  42a880:	b	42a4a0 <ferror@plt+0x27b30>
  42a884:	cmp	w20, #0x0
  42a888:	ccmp	w27, #0x2, #0x0, eq  // eq = none
  42a88c:	b.ne	42a4a0 <ferror@plt+0x27b30>  // b.any
  42a890:	cmp	w23, #0x1
  42a894:	b.ne	42a8a8 <ferror@plt+0x27f38>  // b.any
  42a898:	ldr	x1, [x26, #1312]
  42a89c:	add	x0, sp, #0xa0
  42a8a0:	sub	x1, x21, x1
  42a8a4:	bl	429d84 <ferror@plt+0x27414>
  42a8a8:	mov	w27, #0x2                   	// #2
  42a8ac:	mov	w20, #0x0                   	// #0
  42a8b0:	b	42a4a0 <ferror@plt+0x27b30>
  42a8b4:	cbnz	w20, 42a4a0 <ferror@plt+0x27b30>
  42a8b8:	subs	w23, w23, #0x1
  42a8bc:	ccmp	w27, #0x2, #0x0, eq  // eq = none
  42a8c0:	b.ne	42acb8 <ferror@plt+0x28348>  // b.any
  42a8c4:	ldr	x2, [sp, #176]
  42a8c8:	ldr	x1, [x26, #1312]
  42a8cc:	ldrb	w0, [x2, #18]
  42a8d0:	sub	x1, x21, x1
  42a8d4:	and	w0, w0, #0x3
  42a8d8:	cmp	w0, #0x3
  42a8dc:	b.ne	42aaa8 <ferror@plt+0x28138>  // b.any
  42a8e0:	add	x0, sp, #0xa0
  42a8e4:	bl	429d84 <ferror@plt+0x27414>
  42a8e8:	ldp	w0, w3, [sp, #196]
  42a8ec:	stp	xzr, xzr, [sp, #224]
  42a8f0:	add	x1, sp, #0xd0
  42a8f4:	ldr	x2, [sp, #176]
  42a8f8:	stp	xzr, xzr, [sp, #208]
  42a8fc:	strh	w0, [sp, #224]
  42a900:	mov	x0, x26
  42a904:	stp	xzr, xzr, [sp, #240]
  42a908:	bl	425c3c <ferror@plt+0x232cc>
  42a90c:	tst	w0, #0xff
  42a910:	b.eq	42ae5c <ferror@plt+0x284ec>  // b.none
  42a914:	ldr	x0, [sp, #168]
  42a918:	mov	w24, #0xa                   	// #10
  42a91c:	ldr	x1, [sp, #184]
  42a920:	ldp	x2, x21, [x0]
  42a924:	ldr	x0, [x26, #1312]
  42a928:	add	x0, x0, x1
  42a92c:	str	x0, [x26, #1328]
  42a930:	str	x19, [x22, #16]
  42a934:	sub	x21, x21, x2
  42a938:	add	x1, x21, #0x2
  42a93c:	mov	x0, x26
  42a940:	bl	420710 <ferror@plt+0x1dda0>
  42a944:	mov	x23, x0
  42a948:	mov	w1, #0x28                  	// #40
  42a94c:	strb	w1, [x0], #1
  42a950:	mov	x2, x21
  42a954:	add	x21, x21, #0x1
  42a958:	ldr	x1, [sp, #168]
  42a95c:	ldr	x3, [x26, #1312]
  42a960:	ldr	x1, [x1]
  42a964:	add	x1, x3, x1
  42a968:	bl	4022e0 <memcpy@plt>
  42a96c:	strb	w24, [x23, x21]
  42a970:	add	x0, x23, x21
  42a974:	mov	w2, #0x1                   	// #1
  42a978:	ldp	x1, x27, [x26]
  42a97c:	ldr	x21, [x22, #24]
  42a980:	ldrb	w28, [x1, #104]
  42a984:	strb	wzr, [x1, #104]
  42a988:	ldp	x8, x5, [x1]
  42a98c:	stp	x23, x23, [x1]
  42a990:	ldr	x7, [x1, #32]
  42a994:	str	x0, [x1, #32]
  42a998:	stp	x7, x8, [sp, #144]
  42a99c:	ldrb	w0, [x26, #16]
  42a9a0:	strb	w2, [x26, #16]
  42a9a4:	cmp	w0, #0x0
  42a9a8:	mov	x0, x26
  42a9ac:	ldr	x9, [x22, #8]
  42a9b0:	str	x1, [x26, #8]
  42a9b4:	str	xzr, [x22, #8]
  42a9b8:	cset	w23, ne  // ne = any
  42a9bc:	mov	x1, #0x0                   	// #0
  42a9c0:	stp	x9, x5, [sp, #128]
  42a9c4:	bl	42a384 <ferror@plt+0x27a14>
  42a9c8:	strb	w23, [x26, #16]
  42a9cc:	mov	x0, x26
  42a9d0:	mov	x1, #0x1                   	// #1
  42a9d4:	bl	429f48 <ferror@plt+0x275d8>
  42a9d8:	ldr	x0, [x26, #1328]
  42a9dc:	strb	w24, [x0]
  42a9e0:	ldr	x1, [x26]
  42a9e4:	ldr	x2, [sp, #184]
  42a9e8:	ldr	x0, [x26, #1312]
  42a9ec:	add	x0, x0, x2
  42a9f0:	ldr	x2, [x26, #1328]
  42a9f4:	stp	x0, x0, [x1]
  42a9f8:	str	x2, [x1, #32]
  42a9fc:	ldr	x1, [sp, #176]
  42aa00:	stp	x0, x2, [x22, #16]
  42aa04:	mov	w2, #0x0                   	// #0
  42aa08:	ldrb	w0, [x26, #24]
  42aa0c:	add	w0, w0, #0x1
  42aa10:	strb	w0, [x26, #24]
  42aa14:	mov	x0, x26
  42aa18:	bl	42587c <ferror@plt+0x22f0c>
  42aa1c:	mov	x23, x0
  42aa20:	ldrb	w1, [x26, #24]
  42aa24:	ldp	x9, x5, [sp, #128]
  42aa28:	sub	w1, w1, #0x1
  42aa2c:	strb	w1, [x26, #24]
  42aa30:	ldr	x1, [x26]
  42aa34:	ldp	x7, x8, [sp, #144]
  42aa38:	ldr	x2, [sp, #184]
  42aa3c:	str	x9, [x22, #8]
  42aa40:	stp	x8, x5, [x1]
  42aa44:	str	x7, [x1, #32]
  42aa48:	strb	w28, [x1, #104]
  42aa4c:	ldr	x1, [x26, #1312]
  42aa50:	str	x27, [x26, #8]
  42aa54:	add	x1, x1, x2
  42aa58:	str	x1, [x26, #1328]
  42aa5c:	stp	x19, x21, [x22, #16]
  42aa60:	bl	402330 <strlen@plt>
  42aa64:	mov	x19, x0
  42aa68:	add	x1, x0, #0x1
  42aa6c:	mov	x0, x26
  42aa70:	bl	420710 <ferror@plt+0x1dda0>
  42aa74:	mov	x21, x0
  42aa78:	mov	x2, x19
  42aa7c:	mov	x1, x23
  42aa80:	bl	4022e0 <memcpy@plt>
  42aa84:	strb	w24, [x21, x19]
  42aa88:	mov	x3, x19
  42aa8c:	mov	x2, x21
  42aa90:	mov	x0, x26
  42aa94:	ldr	x1, [sp, #176]
  42aa98:	bl	425f3c <ferror@plt+0x235cc>
  42aa9c:	mov	w27, #0x0                   	// #0
  42aaa0:	mov	w23, #0x0                   	// #0
  42aaa4:	b	42a418 <ferror@plt+0x27aa8>
  42aaa8:	ldr	x4, [x2, #24]
  42aaac:	ldrb	w0, [x4, #19]
  42aab0:	orr	w0, w0, #0x20
  42aab4:	strb	w0, [x4, #19]
  42aab8:	add	x0, sp, #0xa0
  42aabc:	bl	429d84 <ferror@plt+0x27414>
  42aac0:	ldr	w0, [sp, #200]
  42aac4:	cmp	w0, #0x1
  42aac8:	b.ne	42aaf0 <ferror@plt+0x28180>  // b.any
  42aacc:	ldrh	w0, [x4, #16]
  42aad0:	cbnz	w0, 42aaf0 <ferror@plt+0x28180>
  42aad4:	ldr	x0, [sp, #184]
  42aad8:	add	x1, x0, #0x1
  42aadc:	ldr	x0, [x26, #1312]
  42aae0:	add	x0, x0, x1
  42aae4:	cmp	x21, x0
  42aae8:	b.ne	42aaf0 <ferror@plt+0x28180>  // b.any
  42aaec:	str	wzr, [sp, #200]
  42aaf0:	ldr	w3, [sp, #200]
  42aaf4:	mov	x1, x4
  42aaf8:	ldr	x2, [sp, #176]
  42aafc:	mov	x0, x26
  42ab00:	bl	425c3c <ferror@plt+0x232cc>
  42ab04:	tst	w0, #0xff
  42ab08:	b.eq	42ae5c <ferror@plt+0x284ec>  // b.none
  42ab0c:	ldr	x1, [sp, #184]
  42ab10:	ldr	x0, [x26, #1312]
  42ab14:	add	x0, x0, x1
  42ab18:	ldr	x1, [sp, #176]
  42ab1c:	ldr	x21, [x1, #24]
  42ab20:	str	x0, [x26, #1328]
  42ab24:	ldrh	w0, [x21, #16]
  42ab28:	str	x19, [x22, #16]
  42ab2c:	cbnz	w0, 42ab3c <ferror@plt+0x281cc>
  42ab30:	mov	x0, x26
  42ab34:	bl	429fb4 <ferror@plt+0x27644>
  42ab38:	b	42aa9c <ferror@plt+0x2812c>
  42ab3c:	ldr	x4, [x21, #24]
  42ab40:	mov	x1, #0x0                   	// #0
  42ab44:	ldr	x5, [sp, #168]
  42ab48:	ldrh	w0, [x4, #4]
  42ab4c:	ldr	w2, [x4]
  42ab50:	add	x1, x2, x1
  42ab54:	cbz	w0, 42ab84 <ferror@plt+0x28214>
  42ab58:	ubfiz	x0, x0, #3, #16
  42ab5c:	add	x2, x2, #0xd
  42ab60:	and	x2, x2, #0xfffffffffffffff8
  42ab64:	add	x4, x4, x2
  42ab68:	ldr	x3, [x5, x0]
  42ab6c:	add	x0, x5, x0
  42ab70:	sub	x3, x3, #0x1
  42ab74:	ldur	x0, [x0, #-8]
  42ab78:	sub	x0, x3, x0
  42ab7c:	add	x1, x1, x0, lsl #1
  42ab80:	b	42ab48 <ferror@plt+0x281d8>
  42ab84:	add	x1, x1, #0x1
  42ab88:	mov	x0, x26
  42ab8c:	bl	4204e0 <ferror@plt+0x1db70>
  42ab90:	mov	x19, x0
  42ab94:	ldr	x1, [x0, #16]
  42ab98:	mov	w7, #0x0                   	// #0
  42ab9c:	ldr	x0, [x21, #24]
  42aba0:	mov	x3, #0x0                   	// #0
  42aba4:	mov	w10, #0x5c                  	// #92
  42aba8:	mov	x5, x0
  42abac:	mov	x2, #0x0                   	// #0
  42abb0:	ldr	w4, [x5], #6
  42abb4:	add	x3, x3, x4
  42abb8:	cmp	x4, x2
  42abbc:	b.eq	42abdc <ferror@plt+0x2826c>  // b.none
  42abc0:	ldrb	w8, [x5, x2]
  42abc4:	cmp	w8, #0x22
  42abc8:	b.ne	42abd0 <ferror@plt+0x28260>  // b.any
  42abcc:	eor	w7, w7, #0x1
  42abd0:	strb	w8, [x1, x2]
  42abd4:	add	x2, x2, #0x1
  42abd8:	b	42abb8 <ferror@plt+0x28248>
  42abdc:	ldrh	w2, [x0, #4]
  42abe0:	add	x1, x1, x4
  42abe4:	cbz	w2, 42ac94 <ferror@plt+0x28324>
  42abe8:	ldr	x8, [sp, #168]
  42abec:	ubfiz	x2, x2, #3, #16
  42abf0:	ldr	x5, [x26, #1312]
  42abf4:	add	x4, x8, x2
  42abf8:	ldr	x2, [x8, x2]
  42abfc:	mov	w8, #0x0                   	// #0
  42ac00:	ldur	x4, [x4, #-8]
  42ac04:	sub	x2, x2, #0x1
  42ac08:	add	x4, x5, x4
  42ac0c:	add	x5, x5, x2
  42ac10:	mov	x2, x4
  42ac14:	cmp	x2, x5
  42ac18:	b.eq	42ac80 <ferror@plt+0x28310>  // b.none
  42ac1c:	cbz	w7, 42ac58 <ferror@plt+0x282e8>
  42ac20:	ldrb	w9, [x2]
  42ac24:	add	x11, x1, #0x1
  42ac28:	add	x12, x3, #0x1
  42ac2c:	cmp	w9, #0x22
  42ac30:	b.ne	42ac68 <ferror@plt+0x282f8>  // b.any
  42ac34:	cmp	x4, x2
  42ac38:	b.cs	42ac4c <ferror@plt+0x282dc>  // b.hs, b.nlast
  42ac3c:	ldurb	w3, [x2, #-1]
  42ac40:	cmp	w3, #0x5c
  42ac44:	b.eq	42ac4c <ferror@plt+0x282dc>  // b.none
  42ac48:	eor	w8, w8, #0x1
  42ac4c:	mov	x3, x12
  42ac50:	strb	w10, [x1]
  42ac54:	mov	x1, x11
  42ac58:	ldrb	w9, [x2], #1
  42ac5c:	add	x3, x3, #0x1
  42ac60:	strb	w9, [x1], #1
  42ac64:	b	42ac14 <ferror@plt+0x282a4>
  42ac68:	cbz	w8, 42ac58 <ferror@plt+0x282e8>
  42ac6c:	cmp	w9, #0x5c
  42ac70:	b.ne	42ac58 <ferror@plt+0x282e8>  // b.any
  42ac74:	mov	x3, x12
  42ac78:	strb	w9, [x1]
  42ac7c:	b	42ac54 <ferror@plt+0x282e4>
  42ac80:	ldr	w2, [x0]
  42ac84:	add	x2, x2, #0xd
  42ac88:	and	x2, x2, #0xfffffffffffffff8
  42ac8c:	add	x0, x0, x2
  42ac90:	b	42aba8 <ferror@plt+0x28238>
  42ac94:	mov	w0, #0xa                   	// #10
  42ac98:	strb	w0, [x1]
  42ac9c:	mov	x0, x26
  42aca0:	ldr	x2, [x19, #16]
  42aca4:	ldr	x1, [sp, #176]
  42aca8:	bl	425f3c <ferror@plt+0x235cc>
  42acac:	ldr	x0, [x26, #136]
  42acb0:	str	x19, [x0, #32]
  42acb4:	b	42aa9c <ferror@plt+0x2812c>
  42acb8:	cmp	w27, #0x9
  42acbc:	b.hi	42a4a0 <ferror@plt+0x27b30>  // b.pmore
  42acc0:	mov	x0, #0x290                 	// #656
  42acc4:	lsr	x0, x0, x27
  42acc8:	tst	x0, #0x1
  42accc:	csel	w27, w27, wzr, eq  // eq = none
  42acd0:	b	42a4a0 <ferror@plt+0x27b30>
  42acd4:	ldr	x0, [sp, #104]
  42acd8:	cmp	x0, x28
  42acdc:	b.ne	42ae14 <ferror@plt+0x284a4>  // b.any
  42ace0:	ldr	x0, [x26, #136]
  42ace4:	ldr	x0, [x0, #8]
  42ace8:	cbnz	x0, 42ae14 <ferror@plt+0x284a4>
  42acec:	ldrb	w0, [x26, #16]
  42acf0:	cbnz	w0, 42ae14 <ferror@plt+0x284a4>
  42acf4:	str	x21, [x26, #1328]
  42acf8:	mov	x1, x19
  42acfc:	mov	x0, x26
  42ad00:	mov	w2, #0x1                   	// #1
  42ad04:	bl	42a20c <ferror@plt+0x2789c>
  42ad08:	mov	x19, x0
  42ad0c:	ldrb	w0, [x0]
  42ad10:	ldr	x21, [x26, #1328]
  42ad14:	cmp	w0, #0xa
  42ad18:	b.ne	42adcc <ferror@plt+0x2845c>  // b.any
  42ad1c:	ldr	x0, [x26]
  42ad20:	mov	w1, #0x1                   	// #1
  42ad24:	strb	w1, [x0, #104]
  42ad28:	mov	w1, #0x18                  	// #24
  42ad2c:	ldr	x0, [x26, #40]
  42ad30:	ldr	w2, [x0, #12]
  42ad34:	ldr	w4, [x0, #60]
  42ad38:	sub	w2, w2, #0x1
  42ad3c:	smull	x2, w2, w1
  42ad40:	ldr	x1, [x0]
  42ad44:	add	x5, x1, x2
  42ad48:	ldr	w1, [x1, x2]
  42ad4c:	mov	w2, #0x0                   	// #0
  42ad50:	sub	w4, w4, w1
  42ad54:	ldrb	w1, [x5, #6]
  42ad58:	lsr	w4, w4, w1
  42ad5c:	ldr	w1, [x5, #16]
  42ad60:	add	w1, w1, #0x1
  42ad64:	add	w1, w4, w1
  42ad68:	bl	42333c <ferror@plt+0x209cc>
  42ad6c:	mov	w19, #0x0                   	// #0
  42ad70:	ldr	x1, [sp, #160]
  42ad74:	cbz	x1, 42ad80 <ferror@plt+0x28410>
  42ad78:	mov	x0, x26
  42ad7c:	bl	4204c0 <ferror@plt+0x1db50>
  42ad80:	cmp	w27, #0x2
  42ad84:	b.ne	42adac <ferror@plt+0x2843c>  // b.any
  42ad88:	ldr	x0, [sp, #176]
  42ad8c:	adrp	x4, 453000 <_obstack_memory_used@@Base+0x19198>
  42ad90:	ldr	w2, [sp, #192]
  42ad94:	add	x4, x4, #0xf99
  42ad98:	mov	w3, #0x0                   	// #0
  42ad9c:	mov	w1, #0x3                   	// #3
  42ada0:	ldr	x5, [x0]
  42ada4:	mov	x0, x26
  42ada8:	bl	4195fc <ferror@plt+0x16c8c>
  42adac:	mov	w0, w19
  42adb0:	ldp	x19, x20, [sp, #16]
  42adb4:	ldp	x21, x22, [sp, #32]
  42adb8:	ldp	x23, x24, [sp, #48]
  42adbc:	ldp	x25, x26, [sp, #64]
  42adc0:	ldp	x27, x28, [sp, #80]
  42adc4:	ldp	x29, x30, [sp], #256
  42adc8:	ret
  42adcc:	ldr	x1, [sp, #128]
  42add0:	ldrh	w1, [x1, w0, sxtw #1]
  42add4:	tbz	w1, #2, 42adfc <ferror@plt+0x2848c>
  42add8:	ldr	w2, [x26, #1116]
  42addc:	cmp	w2, #0x15
  42ade0:	b.eq	42adfc <ferror@plt+0x2848c>  // b.none
  42ade4:	ldr	x0, [x26]
  42ade8:	mov	w1, #0x0                   	// #0
  42adec:	str	x19, [x0]
  42adf0:	mov	x0, x26
  42adf4:	bl	417b68 <ferror@plt+0x151f8>
  42adf8:	b	42ad6c <ferror@plt+0x283fc>
  42adfc:	tbnz	w1, #9, 42ae2c <ferror@plt+0x284bc>
  42ae00:	cmp	w0, #0x24
  42ae04:	b.eq	42ae24 <ferror@plt+0x284b4>  // b.none
  42ae08:	ldr	w0, [x26, #1116]
  42ae0c:	cmp	w0, #0x15
  42ae10:	b.ne	42ade4 <ferror@plt+0x28474>  // b.any
  42ae14:	ldrb	w0, [x26, #20]
  42ae18:	cbz	w0, 42a4a0 <ferror@plt+0x27b30>
  42ae1c:	mov	w27, #0x5                   	// #5
  42ae20:	b	42a4d8 <ferror@plt+0x27b68>
  42ae24:	ldrb	w0, [x26, #1146]
  42ae28:	cbz	w0, 42ae08 <ferror@plt+0x28498>
  42ae2c:	mov	x1, x19
  42ae30:	mov	x0, x26
  42ae34:	bl	42a058 <ferror@plt+0x276e8>
  42ae38:	ldrb	w0, [x0, #16]
  42ae3c:	tbz	w0, #0, 42ae08 <ferror@plt+0x28498>
  42ae40:	b	42ade4 <ferror@plt+0x28474>
  42ae44:	mov	w27, #0x0                   	// #0
  42ae48:	b	42a4a0 <ferror@plt+0x27b30>
  42ae4c:	mov	w27, #0x7                   	// #7
  42ae50:	b	42a4a0 <ferror@plt+0x27b30>
  42ae54:	mov	w27, #0x4                   	// #4
  42ae58:	b	42a4a0 <ferror@plt+0x27b30>
  42ae5c:	mov	w27, #0x0                   	// #0
  42ae60:	mov	w23, #0x0                   	// #0
  42ae64:	b	42a4a0 <ferror@plt+0x27b30>
  42ae68:	mov	w19, #0x1                   	// #1
  42ae6c:	b	42ad70 <ferror@plt+0x28400>
  42ae70:	stp	x29, x30, [sp, #-32]!
  42ae74:	mov	x29, sp
  42ae78:	str	x19, [sp, #16]
  42ae7c:	mov	x19, x0
  42ae80:	ldr	x0, [x19]
  42ae84:	ldrb	w0, [x0, #104]
  42ae88:	cbnz	w0, 42aebc <ferror@plt+0x2854c>
  42ae8c:	mov	x0, x19
  42ae90:	mov	w2, #0x0                   	// #0
  42ae94:	mov	x1, #0x0                   	// #0
  42ae98:	bl	42a384 <ferror@plt+0x27a14>
  42ae9c:	tst	w0, #0xff
  42aea0:	b.eq	42ae80 <ferror@plt+0x28510>  // b.none
  42aea4:	ldrb	w0, [x19, #18]
  42aea8:	cbnz	w0, 42ae80 <ferror@plt+0x28510>
  42aeac:	ldr	x0, [x19]
  42aeb0:	cmp	x0, #0x0
  42aeb4:	cset	w0, ne  // ne = any
  42aeb8:	b	42aecc <ferror@plt+0x2855c>
  42aebc:	mov	x0, x19
  42aec0:	bl	41fb50 <ferror@plt+0x1d1e0>
  42aec4:	ands	w0, w0, #0xff
  42aec8:	b.ne	42ae8c <ferror@plt+0x2851c>  // b.any
  42aecc:	ldr	x19, [sp, #16]
  42aed0:	ldp	x29, x30, [sp], #32
  42aed4:	ret
  42aed8:	mov	x1, x0
  42aedc:	ldrb	w0, [x0, #19]
  42aee0:	tbz	w0, #2, 42af2c <ferror@plt+0x285bc>
  42aee4:	ldrh	w0, [x1, #16]
  42aee8:	cbz	w0, 42af2c <ferror@plt+0x285bc>
  42aeec:	ldr	x3, [x1, #24]
  42aef0:	mov	x0, #0x0                   	// #0
  42aef4:	mov	x6, #0xfffffffffffffff8    	// #-8
  42aef8:	ldrh	w4, [x3, #4]
  42aefc:	ldr	w2, [x3]
  42af00:	add	x0, x2, x0
  42af04:	cbz	w4, 42af30 <ferror@plt+0x285c0>
  42af08:	ldr	x5, [x1]
  42af0c:	add	x4, x6, w4, uxtw #3
  42af10:	add	x2, x2, #0xd
  42af14:	and	x2, x2, #0xfffffffffffffff8
  42af18:	ldr	x4, [x5, x4]
  42af1c:	add	x3, x3, x2
  42af20:	ldr	w4, [x4, #8]
  42af24:	add	x0, x4, x0
  42af28:	b	42aef8 <ferror@plt+0x28588>
  42af2c:	ldr	w0, [x1, #12]
  42af30:	ret
  42af34:	stp	x29, x30, [sp, #-48]!
  42af38:	mov	x3, x1
  42af3c:	mov	x29, sp
  42af40:	stp	x19, x20, [sp, #16]
  42af44:	mov	x19, x0
  42af48:	ldr	x20, [x0, #24]
  42af4c:	stp	x21, x22, [sp, #32]
  42af50:	ldrb	w0, [x0, #19]
  42af54:	tbz	w0, #2, 42afc4 <ferror@plt+0x28654>
  42af58:	ldrh	w0, [x19, #16]
  42af5c:	cbz	w0, 42afc4 <ferror@plt+0x28654>
  42af60:	mov	x21, #0xfffffffffffffff8    	// #-8
  42af64:	mov	x1, x20
  42af68:	mov	x0, x3
  42af6c:	ldr	w2, [x1], #6
  42af70:	bl	4022e0 <memcpy@plt>
  42af74:	mov	x3, x0
  42af78:	ldrh	w0, [x20, #4]
  42af7c:	ldr	w1, [x20]
  42af80:	add	x3, x3, x1
  42af84:	cbz	w0, 42afdc <ferror@plt+0x2866c>
  42af88:	ldr	x1, [x19]
  42af8c:	add	x0, x21, w0, uxtw #3
  42af90:	ldr	x22, [x1, x0]
  42af94:	mov	x0, x3
  42af98:	ldr	w2, [x22, #8]
  42af9c:	ldr	x1, [x22]
  42afa0:	bl	4022e0 <memcpy@plt>
  42afa4:	mov	x3, x0
  42afa8:	ldr	w0, [x20]
  42afac:	ldr	w1, [x22, #8]
  42afb0:	add	x0, x0, #0xd
  42afb4:	and	x0, x0, #0xfffffffffffffff8
  42afb8:	add	x3, x3, x1
  42afbc:	add	x20, x20, x0
  42afc0:	b	42af64 <ferror@plt+0x285f4>
  42afc4:	ldr	w2, [x19, #12]
  42afc8:	mov	x1, x20
  42afcc:	mov	x0, x3
  42afd0:	bl	4022e0 <memcpy@plt>
  42afd4:	ldr	w1, [x19, #12]
  42afd8:	add	x3, x0, x1
  42afdc:	mov	x0, x3
  42afe0:	ldp	x19, x20, [sp, #16]
  42afe4:	ldp	x21, x22, [sp, #32]
  42afe8:	ldp	x29, x30, [sp], #48
  42afec:	ret
  42aff0:	stp	x29, x30, [sp, #-64]!
  42aff4:	mov	x29, sp
  42aff8:	ldr	x2, [x0]
  42affc:	stp	x21, x22, [sp, #32]
  42b000:	ldr	x21, [x0, #136]
  42b004:	stp	x19, x20, [sp, #16]
  42b008:	mov	x19, x0
  42b00c:	stp	x23, x24, [sp, #48]
  42b010:	ldr	x1, [x0, #1312]
  42b014:	str	x1, [x0, #1328]
  42b018:	ldr	x1, [x2]
  42b01c:	ldr	x2, [x2, #32]
  42b020:	stp	x1, x2, [x21, #16]
  42b024:	sub	x1, x2, x1
  42b028:	bl	429f48 <ferror@plt+0x275d8>
  42b02c:	ldr	x0, [x21, #16]
  42b030:	ldrb	w0, [x0]
  42b034:	cmp	w0, #0x28
  42b038:	b.ne	42b1f0 <ferror@plt+0x28880>  // b.any
  42b03c:	ldr	x0, [x19, #136]
  42b040:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  42b044:	add	x24, x24, #0x21a
  42b048:	mov	w22, #0x0                   	// #0
  42b04c:	ldr	x1, [x0, #16]
  42b050:	add	x1, x1, #0x1
  42b054:	mov	x0, x19
  42b058:	mov	w2, #0x1                   	// #1
  42b05c:	bl	42a20c <ferror@plt+0x2789c>
  42b060:	mov	x20, x0
  42b064:	ldrb	w0, [x0]
  42b068:	ldrb	w1, [x20]
  42b06c:	ldrh	w1, [x24, x1, lsl #1]
  42b070:	tbnz	w1, #9, 42b084 <ferror@plt+0x28714>
  42b074:	cmp	w0, #0x24
  42b078:	b.ne	42b1dc <ferror@plt+0x2886c>  // b.any
  42b07c:	ldrb	w0, [x19, #1146]
  42b080:	cbz	w0, 42b0e4 <ferror@plt+0x28774>
  42b084:	mov	x1, x20
  42b088:	mov	x0, x19
  42b08c:	bl	42a058 <ferror@plt+0x276e8>
  42b090:	mov	x3, x0
  42b094:	mov	x2, x0
  42b098:	mov	w1, w22
  42b09c:	mov	x0, x19
  42b0a0:	bl	4263ac <ferror@plt+0x23a3c>
  42b0a4:	ands	w23, w0, #0xff
  42b0a8:	b.eq	42b0e4 <ferror@plt+0x28774>  // b.none
  42b0ac:	ldr	x0, [x19, #136]
  42b0b0:	mov	w2, #0x1                   	// #1
  42b0b4:	add	w22, w22, #0x1
  42b0b8:	ldr	x1, [x0, #16]
  42b0bc:	mov	x0, x19
  42b0c0:	bl	42a20c <ferror@plt+0x2789c>
  42b0c4:	mov	x20, x0
  42b0c8:	ldrb	w0, [x0]
  42b0cc:	cmp	w0, #0x2c
  42b0d0:	b.ne	42b0dc <ferror@plt+0x2876c>  // b.any
  42b0d4:	add	x1, x20, #0x1
  42b0d8:	b	42b054 <ferror@plt+0x286e4>
  42b0dc:	cmp	w0, #0x29
  42b0e0:	b.eq	42b0fc <ferror@plt+0x2878c>  // b.none
  42b0e4:	mov	w23, #0x0                   	// #0
  42b0e8:	mov	x0, x19
  42b0ec:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  42b0f0:	mov	w1, #0x3                   	// #3
  42b0f4:	add	x2, x2, #0x3df
  42b0f8:	bl	419440 <ferror@plt+0x16ad0>
  42b0fc:	ldr	x0, [x19, #136]
  42b100:	ldrb	w1, [x20]
  42b104:	cmp	w1, #0x29
  42b108:	cinc	x20, x20, eq  // eq = none
  42b10c:	str	x20, [x0, #16]
  42b110:	cbz	w23, 42b200 <ferror@plt+0x28890>
  42b114:	ubfiz	x1, x22, #3, #32
  42b118:	mov	x0, x19
  42b11c:	bl	422b90 <ferror@plt+0x20220>
  42b120:	mov	x23, x0
  42b124:	mov	w24, #0x1                   	// #1
  42b128:	mov	x1, #0x30                  	// #48
  42b12c:	mov	x0, x19
  42b130:	bl	422b38 <ferror@plt+0x201c8>
  42b134:	mov	x2, x0
  42b138:	mov	w1, #0x2                   	// #2
  42b13c:	mov	x0, x19
  42b140:	bl	4264d0 <ferror@plt+0x23b60>
  42b144:	mov	x20, x0
  42b148:	strh	w22, [x0, #16]
  42b14c:	ldrb	w0, [x0, #19]
  42b150:	str	x23, [x20]
  42b154:	bfi	w0, w24, #2, #1
  42b158:	strb	w0, [x20, #19]
  42b15c:	ldrb	w2, [x19, #1124]
  42b160:	mov	x0, x19
  42b164:	ldr	x23, [x19]
  42b168:	ldr	x1, [x21, #16]
  42b16c:	bl	42a20c <ferror@plt+0x2789c>
  42b170:	str	x0, [x23]
  42b174:	mov	x1, x20
  42b178:	mov	w2, #0x0                   	// #0
  42b17c:	ldrb	w0, [x19, #24]
  42b180:	add	w0, w0, #0x1
  42b184:	strb	w0, [x19, #24]
  42b188:	mov	x0, x19
  42b18c:	bl	42a384 <ferror@plt+0x27a14>
  42b190:	ldrb	w0, [x19, #24]
  42b194:	mov	w1, w22
  42b198:	sub	w0, w0, #0x1
  42b19c:	strb	w0, [x19, #24]
  42b1a0:	mov	x0, x19
  42b1a4:	bl	426490 <ferror@plt+0x23b20>
  42b1a8:	cbz	x20, 42b21c <ferror@plt+0x288ac>
  42b1ac:	ldr	x2, [x19, #1312]
  42b1b0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  42b1b4:	ldr	x0, [x19, #1328]
  42b1b8:	add	x1, x1, #0x21a
  42b1bc:	cmp	x0, x2
  42b1c0:	b.ls	42b208 <ferror@plt+0x28898>  // b.plast
  42b1c4:	ldurb	w3, [x0, #-1]
  42b1c8:	ldrh	w3, [x1, x3, lsl #1]
  42b1cc:	tst	w3, #0xc00
  42b1d0:	b.eq	42b208 <ferror@plt+0x28898>  // b.none
  42b1d4:	sub	x0, x0, #0x1
  42b1d8:	b	42b1bc <ferror@plt+0x2884c>
  42b1dc:	cmp	w0, #0x29
  42b1e0:	b.ne	42b0e4 <ferror@plt+0x28774>  // b.any
  42b1e4:	cbnz	w22, 42b0e4 <ferror@plt+0x28774>
  42b1e8:	mov	w23, #0x1                   	// #1
  42b1ec:	b	42b0fc <ferror@plt+0x2878c>
  42b1f0:	mov	w22, #0x0                   	// #0
  42b1f4:	mov	x23, #0x0                   	// #0
  42b1f8:	mov	w24, #0x0                   	// #0
  42b1fc:	b	42b128 <ferror@plt+0x287b8>
  42b200:	mov	x20, #0x0                   	// #0
  42b204:	b	42b15c <ferror@plt+0x287ec>
  42b208:	str	x0, [x19, #1328]
  42b20c:	mov	x1, x20
  42b210:	mov	x0, x19
  42b214:	mov	w2, #0x0                   	// #0
  42b218:	bl	429e50 <ferror@plt+0x274e0>
  42b21c:	mov	x0, x20
  42b220:	ldp	x19, x20, [sp, #16]
  42b224:	ldp	x21, x22, [sp, #32]
  42b228:	ldp	x23, x24, [sp, #48]
  42b22c:	ldp	x29, x30, [sp], #64
  42b230:	ret
  42b234:	stp	x29, x30, [sp, #-64]!
  42b238:	mov	x29, sp
  42b23c:	stp	x21, x22, [sp, #32]
  42b240:	mov	x21, x1
  42b244:	ldr	w1, [x0, #12]
  42b248:	stp	x19, x20, [sp, #16]
  42b24c:	mov	x20, x0
  42b250:	ldr	w0, [x21, #12]
  42b254:	add	w0, w1, w0
  42b258:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  42b25c:	ldrh	w1, [x20, #16]
  42b260:	mov	x19, x0
  42b264:	ldr	w2, [x20, #12]
  42b268:	strb	wzr, [sp, #62]
  42b26c:	strb	wzr, [sp, #63]
  42b270:	add	x22, x0, x2
  42b274:	cbz	w1, 42b324 <ferror@plt+0x289b4>
  42b278:	ldr	x20, [x20, #24]
  42b27c:	ldr	x21, [x21, #24]
  42b280:	ldrh	w1, [x20, #4]
  42b284:	ldrh	w0, [x21, #4]
  42b288:	cmp	w1, w0
  42b28c:	b.eq	42b2b0 <ferror@plt+0x28940>  // b.none
  42b290:	mov	w20, #0x1                   	// #1
  42b294:	mov	x0, x19
  42b298:	bl	402730 <free@plt>
  42b29c:	mov	w0, w20
  42b2a0:	ldp	x19, x20, [sp, #16]
  42b2a4:	ldp	x21, x22, [sp, #32]
  42b2a8:	ldp	x29, x30, [sp], #64
  42b2ac:	ret
  42b2b0:	mov	x1, x20
  42b2b4:	add	x3, sp, #0x3e
  42b2b8:	mov	x0, x19
  42b2bc:	ldr	w2, [x1], #6
  42b2c0:	bl	429da4 <ferror@plt+0x27434>
  42b2c4:	mov	x10, x0
  42b2c8:	mov	x1, x21
  42b2cc:	add	x3, sp, #0x3f
  42b2d0:	mov	x0, x22
  42b2d4:	ldr	w2, [x1], #6
  42b2d8:	bl	429da4 <ferror@plt+0x27434>
  42b2dc:	cmp	x10, x0
  42b2e0:	b.ne	42b290 <ferror@plt+0x28920>  // b.any
  42b2e4:	mov	x2, x10
  42b2e8:	mov	x1, x22
  42b2ec:	mov	x0, x19
  42b2f0:	bl	402690 <memcmp@plt>
  42b2f4:	cbnz	w0, 42b290 <ferror@plt+0x28920>
  42b2f8:	ldrh	w0, [x20, #4]
  42b2fc:	cbz	w0, 42b36c <ferror@plt+0x289fc>
  42b300:	ldr	w0, [x20]
  42b304:	add	x0, x0, #0xd
  42b308:	and	x0, x0, #0xfffffffffffffff8
  42b30c:	add	x20, x20, x0
  42b310:	ldr	w0, [x21]
  42b314:	add	x0, x0, #0xd
  42b318:	and	x0, x0, #0xfffffffffffffff8
  42b31c:	add	x21, x21, x0
  42b320:	b	42b280 <ferror@plt+0x28910>
  42b324:	ldr	x1, [x20, #24]
  42b328:	add	x3, sp, #0x3e
  42b32c:	bl	429da4 <ferror@plt+0x27434>
  42b330:	mov	x10, x0
  42b334:	ldr	w2, [x21, #12]
  42b338:	add	x3, sp, #0x3f
  42b33c:	ldr	x1, [x21, #24]
  42b340:	mov	x0, x22
  42b344:	bl	429da4 <ferror@plt+0x27434>
  42b348:	cmp	x10, x0
  42b34c:	b.ne	42b290 <ferror@plt+0x28920>  // b.any
  42b350:	mov	x2, x10
  42b354:	mov	x1, x22
  42b358:	mov	x0, x19
  42b35c:	bl	402690 <memcmp@plt>
  42b360:	cmp	w0, #0x0
  42b364:	cset	w20, ne  // ne = any
  42b368:	b	42b294 <ferror@plt+0x28924>
  42b36c:	mov	w20, #0x0                   	// #0
  42b370:	b	42b294 <ferror@plt+0x28924>
  42b374:	stp	x29, x30, [sp, #-48]!
  42b378:	mov	x29, sp
  42b37c:	stp	x19, x20, [sp, #16]
  42b380:	mov	x19, x0
  42b384:	str	x21, [sp, #32]
  42b388:	bl	421448 <ferror@plt+0x1ead8>
  42b38c:	ldrb	w0, [x0, #4]
  42b390:	cmp	w0, #0x25
  42b394:	b.eq	42b3b8 <ferror@plt+0x28a48>  // b.none
  42b398:	mov	w1, #0x1                   	// #1
  42b39c:	mov	x0, x19
  42b3a0:	bl	426104 <ferror@plt+0x23794>
  42b3a4:	mov	sp, x29
  42b3a8:	ldp	x19, x20, [sp, #16]
  42b3ac:	ldr	x21, [sp, #32]
  42b3b0:	ldp	x29, x30, [sp], #48
  42b3b4:	ret
  42b3b8:	mov	x0, x19
  42b3bc:	bl	421448 <ferror@plt+0x1ead8>
  42b3c0:	ldrb	w0, [x0, #4]
  42b3c4:	cmp	w0, #0x37
  42b3c8:	b.eq	42b3d4 <ferror@plt+0x28a64>  // b.none
  42b3cc:	mov	w1, #0x2                   	// #2
  42b3d0:	b	42b39c <ferror@plt+0x28a2c>
  42b3d4:	mov	x0, x19
  42b3d8:	bl	421448 <ferror@plt+0x1ead8>
  42b3dc:	mov	x20, x0
  42b3e0:	ldrb	w0, [x0, #4]
  42b3e4:	cmp	w0, #0x3e
  42b3e8:	b.ne	42b41c <ferror@plt+0x28aac>  // b.any
  42b3ec:	ldr	w2, [x20, #8]
  42b3f0:	cmp	w2, #0x4
  42b3f4:	b.ls	42b41c <ferror@plt+0x28aac>  // b.plast
  42b3f8:	ldr	x1, [x20, #16]
  42b3fc:	sub	w0, w2, #0x2
  42b400:	ldrb	w0, [x1, x0]
  42b404:	cmp	w0, #0x2f
  42b408:	b.ne	42b41c <ferror@plt+0x28aac>  // b.any
  42b40c:	sub	w0, w2, #0x3
  42b410:	ldrb	w3, [x1, x0]
  42b414:	cmp	w3, #0x2f
  42b418:	b.eq	42b424 <ferror@plt+0x28ab4>  // b.none
  42b41c:	mov	w1, #0x3                   	// #3
  42b420:	b	42b39c <ferror@plt+0x28a2c>
  42b424:	ldr	x21, [x19, #920]
  42b428:	cbz	x21, 42b3a4 <ferror@plt+0x28a34>
  42b42c:	add	x0, x0, #0xf
  42b430:	sub	w2, w2, #0x4
  42b434:	and	x0, x0, #0x1fffffff0
  42b438:	add	x1, x1, #0x1
  42b43c:	sub	sp, sp, x0
  42b440:	mov	x3, sp
  42b444:	mov	x0, x3
  42b448:	bl	4022e0 <memcpy@plt>
  42b44c:	mov	x3, x0
  42b450:	mov	x1, x0
  42b454:	ldr	w0, [x20, #8]
  42b458:	sub	w0, w0, #0x4
  42b45c:	strb	wzr, [x3, x0]
  42b460:	mov	x0, x19
  42b464:	blr	x21
  42b468:	b	42b3a4 <ferror@plt+0x28a34>
  42b46c:	str	w1, [x0, #1116]
  42b470:	sxtw	x1, w1
  42b474:	mov	x2, #0xf                   	// #15
  42b478:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x1a198>
  42b47c:	add	x3, x3, #0x648
  42b480:	mul	x2, x1, x2
  42b484:	add	x1, x3, x2
  42b488:	ldrb	w2, [x3, x2]
  42b48c:	strb	w2, [x0, #1152]
  42b490:	ldrb	w2, [x1, #1]
  42b494:	strb	w2, [x0, #1120]
  42b498:	ldrb	w2, [x1, #2]
  42b49c:	strb	w2, [x0, #1127]
  42b4a0:	ldrb	w2, [x1, #3]
  42b4a4:	strb	w2, [x0, #1147]
  42b4a8:	ldrb	w2, [x1, #4]
  42b4ac:	strb	w2, [x0, #1164]
  42b4b0:	ldrb	w2, [x1, #5]
  42b4b4:	strb	w2, [x0, #1153]
  42b4b8:	ldrb	w2, [x1, #6]
  42b4bc:	strb	w2, [x0, #1126]
  42b4c0:	ldrb	w2, [x1, #7]
  42b4c4:	strb	w2, [x0, #1128]
  42b4c8:	ldrb	w2, [x1, #8]
  42b4cc:	strb	w2, [x0, #1130]
  42b4d0:	ldrb	w2, [x1, #9]
  42b4d4:	strb	w2, [x0, #1161]
  42b4d8:	add	x2, x0, #0x400
  42b4dc:	ldrh	w3, [x1, #10]
  42b4e0:	sturh	w3, [x2, #141]
  42b4e4:	ldrb	w2, [x1, #12]
  42b4e8:	strb	w2, [x0, #1125]
  42b4ec:	ldrb	w2, [x1, #13]
  42b4f0:	ldrb	w1, [x1, #14]
  42b4f4:	strb	w2, [x0, #1129]
  42b4f8:	strb	w1, [x0, #1167]
  42b4fc:	ret
  42b500:	stp	x29, x30, [sp, #-64]!
  42b504:	mov	x29, sp
  42b508:	str	x23, [sp, #48]
  42b50c:	mov	w23, w0
  42b510:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  42b514:	stp	x21, x22, [sp, #32]
  42b518:	mov	x21, x1
  42b51c:	ldr	w1, [x0, #1968]
  42b520:	mov	x22, x2
  42b524:	stp	x19, x20, [sp, #16]
  42b528:	cbnz	w1, 42b588 <ferror@plt+0x28c18>
  42b52c:	mov	w1, #0x1                   	// #1
  42b530:	add	x19, x0, #0x7b0
  42b534:	str	w1, [x0, #1968]
  42b538:	bl	41f114 <ferror@plt+0x1c7a4>
  42b53c:	mov	w0, #0x7c                  	// #124
  42b540:	strb	w0, [x19, #37]
  42b544:	mov	w0, #0x5b5e                	// #23390
  42b548:	sturh	w0, [x19, #43]
  42b54c:	mov	w0, #0x5d                  	// #93
  42b550:	strb	w0, [x19, #45]
  42b554:	mov	w0, #0x5c                  	// #92
  42b558:	strb	w0, [x19, #51]
  42b55c:	mov	w0, #0x237b                	// #9083
  42b560:	strh	w0, [x19, #64]
  42b564:	mov	w0, #0x7d                  	// #125
  42b568:	strb	w0, [x19, #66]
  42b56c:	mov	w0, #0x7e                  	// #126
  42b570:	strb	w0, [x19, #49]
  42b574:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  42b578:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  42b57c:	add	x1, x1, #0xc48
  42b580:	add	x0, x0, #0xe08
  42b584:	bl	4024f0 <bindtextdomain@plt>
  42b588:	mov	x1, #0x588                 	// #1416
  42b58c:	mov	x0, #0x1                   	// #1
  42b590:	bl	439f74 <_obstack_memory_used@@Base+0x10c>
  42b594:	stp	xzr, xzr, [x0, #80]
  42b598:	mov	x19, x0
  42b59c:	stp	xzr, xzr, [x0, #96]
  42b5a0:	add	x20, x0, #0x50
  42b5a4:	mov	w1, w23
  42b5a8:	stp	xzr, xzr, [x0, #112]
  42b5ac:	str	xzr, [x0, #128]
  42b5b0:	bl	42b46c <ferror@plt+0x28afc>
  42b5b4:	add	x2, x0, #0x400
  42b5b8:	mov	w1, #0x101                 	// #257
  42b5bc:	mov	w0, #0x8                   	// #8
  42b5c0:	mov	w4, #0x102                 	// #258
  42b5c4:	mov	w3, #0x100                 	// #256
  42b5c8:	sturh	w1, [x2, #99]
  42b5cc:	str	w0, [x19, #1112]
  42b5d0:	mov	w0, #0xff                  	// #255
  42b5d4:	strh	w4, [x19, #1136]
  42b5d8:	strh	w0, [x19, #1198]
  42b5dc:	mov	w0, #0x1                   	// #1
  42b5e0:	strb	w0, [x19, #1132]
  42b5e4:	sturh	w3, [x2, #115]
  42b5e8:	strh	w1, [x19, #1142]
  42b5ec:	strb	wzr, [x19, #1144]
  42b5f0:	strb	w0, [x19, #1146]
  42b5f4:	strb	w0, [x19, #1148]
  42b5f8:	sturh	w4, [x2, #133]
  42b5fc:	mov	w2, #0x1                   	// #1
  42b600:	strh	w1, [x19, #1162]
  42b604:	mov	x1, #0x40                  	// #64
  42b608:	str	x1, [x19, #1208]
  42b60c:	mov	x1, #0x8                   	// #8
  42b610:	strb	wzr, [x19, #1134]
  42b614:	str	w2, [x19, #1192]
  42b618:	str	x1, [x19, #1216]
  42b61c:	mov	x1, #0x20                  	// #32
  42b620:	str	x1, [x19, #1224]
  42b624:	str	x1, [x19, #1232]
  42b628:	strh	w3, [x19, #1240]
  42b62c:	strb	w0, [x19, #1242]
  42b630:	strb	w2, [x19, #1245]
  42b634:	bl	412580 <ferror@plt+0xfc10>
  42b638:	str	x0, [x19, #1168]
  42b63c:	str	xzr, [x19, #1176]
  42b640:	bl	412580 <ferror@plt+0xfc10>
  42b644:	str	x0, [x19, #1184]
  42b648:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  42b64c:	add	x0, x0, #0xaab
  42b650:	str	x0, [x19, #224]
  42b654:	mov	w1, #0xfa                  	// #250
  42b658:	ldrb	w0, [x19, #1123]
  42b65c:	str	x22, [x19, #40]
  42b660:	add	x22, x19, #0x1c8
  42b664:	cmp	w0, #0x0
  42b668:	str	xzr, [x19, #672]
  42b66c:	cset	w0, eq  // eq = none
  42b670:	strb	w0, [x19, #21]
  42b674:	mov	w0, #0x53                  	// #83
  42b678:	strb	w0, [x19, #668]
  42b67c:	mov	w0, #0x16                  	// #22
  42b680:	strb	w0, [x19, #692]
  42b684:	strh	wzr, [x19, #694]
  42b688:	mov	x0, x22
  42b68c:	bl	41f968 <ferror@plt+0x1cff8>
  42b690:	stp	xzr, xzr, [x19, #80]
  42b694:	mov	x1, #0x0                   	// #0
  42b698:	ldr	x0, [x19, #472]
  42b69c:	str	xzr, [x19, #120]
  42b6a0:	str	x20, [x19, #136]
  42b6a4:	str	x0, [x19, #448]
  42b6a8:	mov	x0, x19
  42b6ac:	str	x22, [x19, #488]
  42b6b0:	bl	4204e0 <ferror@plt+0x1db70>
  42b6b4:	str	x0, [x19, #56]
  42b6b8:	mov	x1, #0x0                   	// #0
  42b6bc:	mov	x0, x19
  42b6c0:	bl	4204e0 <ferror@plt+0x1db70>
  42b6c4:	str	x0, [x19, #64]
  42b6c8:	mov	x0, #0xfffffffffffffffe    	// #-2
  42b6cc:	str	x0, [x19, #656]
  42b6d0:	str	xzr, [x19, #1400]
  42b6d4:	mov	x0, x19
  42b6d8:	str	wzr, [x19, #1408]
  42b6dc:	bl	41b408 <ferror@plt+0x18a98>
  42b6e0:	adrp	x4, 402000 <memcpy@plt-0x2e0>
  42b6e4:	adrp	x3, 439000 <ferror@plt+0x36690>
  42b6e8:	add	x4, x4, #0x730
  42b6ec:	add	x3, x3, #0xf40
  42b6f0:	mov	x2, #0x0                   	// #0
  42b6f4:	mov	x1, #0x0                   	// #0
  42b6f8:	add	x0, x19, #0x328
  42b6fc:	bl	439c78 <_obstack_begin@@Base>
  42b700:	mov	x0, x19
  42b704:	bl	41e2f0 <ferror@plt+0x1b980>
  42b708:	mov	x1, x21
  42b70c:	mov	x0, x19
  42b710:	bl	41ea80 <ferror@plt+0x1c110>
  42b714:	mov	x0, x19
  42b718:	ldp	x19, x20, [sp, #16]
  42b71c:	ldp	x21, x22, [sp, #32]
  42b720:	ldr	x23, [sp, #48]
  42b724:	ldp	x29, x30, [sp], #64
  42b728:	ret
  42b72c:	str	x1, [x0, #40]
  42b730:	ret
  42b734:	stp	x29, x30, [sp, #-48]!
  42b738:	mov	x29, sp
  42b73c:	stp	x19, x20, [sp, #16]
  42b740:	mov	x19, x0
  42b744:	ldr	x0, [x0, #1096]
  42b748:	stp	x21, x22, [sp, #32]
  42b74c:	bl	402730 <free@plt>
  42b750:	ldr	x0, [x19]
  42b754:	cbz	x0, 42b764 <ferror@plt+0x28df4>
  42b758:	mov	x0, x19
  42b75c:	bl	4187a8 <ferror@plt+0x15e38>
  42b760:	b	42b750 <ferror@plt+0x28de0>
  42b764:	ldr	x0, [x19, #1312]
  42b768:	bl	402730 <free@plt>
  42b76c:	ldr	x0, [x19, #504]
  42b770:	cbz	x0, 42b780 <ferror@plt+0x28e10>
  42b774:	bl	402730 <free@plt>
  42b778:	str	xzr, [x19, #504]
  42b77c:	str	wzr, [x19, #512]
  42b780:	ldr	x0, [x19, #712]
  42b784:	cbz	x0, 42b78c <ferror@plt+0x28e1c>
  42b788:	bl	428e70 <ferror@plt+0x26500>
  42b78c:	mov	x1, #0x0                   	// #0
  42b790:	add	x0, x19, #0x328
  42b794:	bl	439df4 <_obstack_free@@Base>
  42b798:	add	x22, x19, #0x1c8
  42b79c:	mov	x0, x19
  42b7a0:	bl	41ea30 <ferror@plt+0x1c0c0>
  42b7a4:	mov	x0, x19
  42b7a8:	bl	41e3d4 <ferror@plt+0x1ba64>
  42b7ac:	mov	x0, x19
  42b7b0:	bl	4120b0 <ferror@plt+0xf740>
  42b7b4:	ldr	x0, [x19, #56]
  42b7b8:	mov	x20, x22
  42b7bc:	bl	4206e0 <ferror@plt+0x1dd70>
  42b7c0:	ldr	x0, [x19, #64]
  42b7c4:	bl	4206e0 <ferror@plt+0x1dd70>
  42b7c8:	ldr	x0, [x19, #72]
  42b7cc:	bl	4206e0 <ferror@plt+0x1dd70>
  42b7d0:	mov	x21, x20
  42b7d4:	ldr	x20, [x20]
  42b7d8:	ldr	x0, [x21, #16]
  42b7dc:	bl	402730 <free@plt>
  42b7e0:	cmp	x22, x21
  42b7e4:	b.eq	42b7f0 <ferror@plt+0x28e80>  // b.none
  42b7e8:	mov	x0, x21
  42b7ec:	bl	402730 <free@plt>
  42b7f0:	cbnz	x20, 42b7d0 <ferror@plt+0x28e60>
  42b7f4:	ldr	x0, [x19, #80]
  42b7f8:	cbz	x0, 42b80c <ferror@plt+0x28e9c>
  42b7fc:	ldr	x20, [x0]
  42b800:	bl	402730 <free@plt>
  42b804:	mov	x0, x20
  42b808:	b	42b7f8 <ferror@plt+0x28e88>
  42b80c:	ldr	x0, [x19, #1384]
  42b810:	cbz	x0, 42b858 <ferror@plt+0x28ee8>
  42b814:	mov	x20, #0x0                   	// #0
  42b818:	ldr	w1, [x19, #1392]
  42b81c:	ldr	x0, [x19, #1384]
  42b820:	cmp	w1, w20
  42b824:	b.le	42b854 <ferror@plt+0x28ee4>
  42b828:	lsl	x1, x20, #4
  42b82c:	add	x20, x20, #0x1
  42b830:	ldr	x0, [x0, x1]
  42b834:	bl	402730 <free@plt>
  42b838:	b	42b818 <ferror@plt+0x28ea8>
  42b83c:	ldr	x20, [x19, #1400]
  42b840:	ldr	x0, [x20]
  42b844:	str	x0, [x19, #1400]
  42b848:	ldr	x0, [x20, #8]
  42b84c:	bl	402730 <free@plt>
  42b850:	mov	x0, x20
  42b854:	bl	402730 <free@plt>
  42b858:	ldr	x0, [x19, #1400]
  42b85c:	cbnz	x0, 42b83c <ferror@plt+0x28ecc>
  42b860:	mov	x0, x19
  42b864:	ldp	x19, x20, [sp, #16]
  42b868:	ldp	x21, x22, [sp, #32]
  42b86c:	ldp	x29, x30, [sp], #48
  42b870:	b	402730 <free@plt>
  42b874:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42b878:	add	x1, x1, #0x648
  42b87c:	add	x1, x1, #0x150
  42b880:	mov	x2, #0xb                   	// #11
  42b884:	ldrh	w3, [x1, #10]
  42b888:	cmp	w3, w0
  42b88c:	b.ne	42b898 <ferror@plt+0x28f28>  // b.any
  42b890:	ldr	x0, [x1]
  42b894:	ret
  42b898:	add	x1, x1, #0x10
  42b89c:	subs	x2, x2, #0x1
  42b8a0:	b.ne	42b884 <ferror@plt+0x28f14>  // b.any
  42b8a4:	mov	x0, #0x0                   	// #0
  42b8a8:	b	42b894 <ferror@plt+0x28f24>
  42b8ac:	stp	x29, x30, [sp, #-48]!
  42b8b0:	mov	x29, sp
  42b8b4:	stp	x19, x20, [sp, #16]
  42b8b8:	mov	x20, x0
  42b8bc:	str	x21, [sp, #32]
  42b8c0:	ldrb	w0, [x0, #1160]
  42b8c4:	cbnz	w0, 42b958 <ferror@plt+0x28fe8>
  42b8c8:	ldrb	w0, [x20, #1243]
  42b8cc:	cbz	w0, 42b960 <ferror@plt+0x28ff0>
  42b8d0:	ldrb	w0, [x20, #1153]
  42b8d4:	cmp	w0, #0x0
  42b8d8:	cset	x0, eq  // eq = none
  42b8dc:	add	x0, x0, #0xb
  42b8e0:	adrp	x19, 454000 <_obstack_memory_used@@Base+0x1a198>
  42b8e4:	add	x19, x19, #0x648
  42b8e8:	add	x19, x19, #0x200
  42b8ec:	add	x21, x19, x0, lsl #4
  42b8f0:	cmp	x21, x19
  42b8f4:	b.ls	42b968 <ferror@plt+0x28ff8>  // b.plast
  42b8f8:	ldrh	w0, [x19, #10]
  42b8fc:	cmp	w0, #0xa
  42b900:	b.ne	42b918 <ferror@plt+0x28fa8>  // b.any
  42b904:	ldr	w0, [x20, #1116]
  42b908:	cmp	w0, #0x15
  42b90c:	b.eq	42b950 <ferror@plt+0x28fe0>  // b.none
  42b910:	ldr	x0, [x20, #1040]
  42b914:	cbz	x0, 42b950 <ferror@plt+0x28fe0>
  42b918:	ldrh	w2, [x19, #8]
  42b91c:	mov	x0, x20
  42b920:	ldr	x1, [x19]
  42b924:	bl	41ea70 <ferror@plt+0x1c100>
  42b928:	ldrb	w1, [x0, #18]
  42b92c:	orr	w1, w1, #0x3
  42b930:	strb	w1, [x0, #18]
  42b934:	ldrb	w1, [x19, #12]
  42b938:	cbz	w1, 42b948 <ferror@plt+0x28fd8>
  42b93c:	ldrh	w1, [x0, #18]
  42b940:	orr	w1, w1, #0x20
  42b944:	strh	w1, [x0, #18]
  42b948:	ldrh	w1, [x19, #10]
  42b94c:	str	w1, [x0, #24]
  42b950:	add	x19, x19, #0x10
  42b954:	b	42b8f0 <ferror@plt+0x28f80>
  42b958:	mov	x0, #0xa                   	// #10
  42b95c:	b	42b8e0 <ferror@plt+0x28f70>
  42b960:	mov	x0, #0xb                   	// #11
  42b964:	b	42b8e0 <ferror@plt+0x28f70>
  42b968:	ldp	x19, x20, [sp, #16]
  42b96c:	ldr	x21, [sp, #32]
  42b970:	ldp	x29, x30, [sp], #48
  42b974:	ret
  42b978:	stp	x29, x30, [sp, #-32]!
  42b97c:	mov	x29, sp
  42b980:	stp	x19, x20, [sp, #16]
  42b984:	mov	x19, x0
  42b988:	mov	w20, w1
  42b98c:	bl	42b8ac <ferror@plt+0x28f3c>
  42b990:	ldrb	w0, [x19, #1160]
  42b994:	cbnz	w0, 42b9b8 <ferror@plt+0x29048>
  42b998:	ldrb	w0, [x19, #1243]
  42b99c:	cbz	w0, 42b9a8 <ferror@plt+0x29038>
  42b9a0:	ldrb	w0, [x19, #1153]
  42b9a4:	cbz	w0, 42b9b8 <ferror@plt+0x29048>
  42b9a8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42b9ac:	mov	x0, x19
  42b9b0:	add	x1, x1, #0x431
  42b9b4:	bl	41902c <ferror@plt+0x166bc>
  42b9b8:	ldrb	w1, [x19, #1120]
  42b9bc:	ldr	w0, [x19, #1116]
  42b9c0:	cbz	w1, 42baa8 <ferror@plt+0x29138>
  42b9c4:	sub	w1, w0, #0x13
  42b9c8:	cmp	w1, #0x1
  42b9cc:	b.hi	42ba54 <ferror@plt+0x290e4>  // b.pmore
  42b9d0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42b9d4:	add	x1, x1, #0x43c
  42b9d8:	mov	x0, x19
  42b9dc:	bl	41902c <ferror@plt+0x166bc>
  42b9e0:	ldrb	w0, [x19, #1128]
  42b9e4:	cbz	w0, 42ba20 <ferror@plt+0x290b0>
  42b9e8:	ldrb	w0, [x19, #1120]
  42b9ec:	cbz	w0, 42ba00 <ferror@plt+0x29090>
  42b9f0:	ldr	w0, [x19, #1116]
  42b9f4:	sub	w0, w0, #0xb
  42b9f8:	cmp	w0, #0x1
  42b9fc:	b.ls	42ba20 <ferror@plt+0x290b0>  // b.plast
  42ba00:	mov	x0, x19
  42ba04:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42ba08:	add	x1, x1, #0x52d
  42ba0c:	bl	41902c <ferror@plt+0x166bc>
  42ba10:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42ba14:	mov	x0, x19
  42ba18:	add	x1, x1, #0x53f
  42ba1c:	bl	41902c <ferror@plt+0x166bc>
  42ba20:	cbz	w20, 42bb38 <ferror@plt+0x291c8>
  42ba24:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42ba28:	add	x1, x1, #0x551
  42ba2c:	mov	x0, x19
  42ba30:	bl	41902c <ferror@plt+0x166bc>
  42ba34:	ldrb	w0, [x19, #1122]
  42ba38:	cbz	w0, 42bb44 <ferror@plt+0x291d4>
  42ba3c:	mov	x0, x19
  42ba40:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42ba44:	ldp	x19, x20, [sp, #16]
  42ba48:	add	x1, x1, #0x575
  42ba4c:	ldp	x29, x30, [sp], #32
  42ba50:	b	41902c <ferror@plt+0x166bc>
  42ba54:	sub	w1, w0, #0x11
  42ba58:	cmp	w1, #0x1
  42ba5c:	b.hi	42ba6c <ferror@plt+0x290fc>  // b.pmore
  42ba60:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42ba64:	add	x1, x1, #0x450
  42ba68:	b	42b9d8 <ferror@plt+0x29068>
  42ba6c:	sub	w1, w0, #0xf
  42ba70:	cmp	w1, #0x1
  42ba74:	b.hi	42ba84 <ferror@plt+0x29114>  // b.pmore
  42ba78:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42ba7c:	add	x1, x1, #0x464
  42ba80:	b	42b9d8 <ferror@plt+0x29068>
  42ba84:	sub	w0, w0, #0xd
  42ba88:	cmp	w0, #0x1
  42ba8c:	b.hi	42ba9c <ferror@plt+0x2912c>  // b.pmore
  42ba90:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42ba94:	add	x1, x1, #0x478
  42ba98:	b	42b9d8 <ferror@plt+0x29068>
  42ba9c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42baa0:	add	x1, x1, #0x48c
  42baa4:	b	42b9d8 <ferror@plt+0x29068>
  42baa8:	cmp	w0, #0x15
  42baac:	b.ne	42babc <ferror@plt+0x2914c>  // b.any
  42bab0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42bab4:	add	x1, x1, #0x4a0
  42bab8:	b	42b9d8 <ferror@plt+0x29068>
  42babc:	cmp	w0, #0x6
  42bac0:	b.ne	42bad0 <ferror@plt+0x29160>  // b.any
  42bac4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42bac8:	add	x1, x1, #0x4b0
  42bacc:	b	42b9d8 <ferror@plt+0x29068>
  42bad0:	cmp	w0, #0xa
  42bad4:	b.eq	42bae0 <ferror@plt+0x29170>  // b.none
  42bad8:	cmp	w0, #0x4
  42badc:	b.ne	42baec <ferror@plt+0x2917c>  // b.any
  42bae0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42bae4:	add	x1, x1, #0x4c9
  42bae8:	b	42b9d8 <ferror@plt+0x29068>
  42baec:	cmp	w0, #0x9
  42baf0:	b.eq	42bafc <ferror@plt+0x2918c>  // b.none
  42baf4:	cmp	w0, #0x3
  42baf8:	b.ne	42bb08 <ferror@plt+0x29198>  // b.any
  42bafc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42bb00:	add	x1, x1, #0x4e2
  42bb04:	b	42b9d8 <ferror@plt+0x29068>
  42bb08:	cmp	w0, #0x8
  42bb0c:	b.eq	42bb18 <ferror@plt+0x291a8>  // b.none
  42bb10:	cmp	w0, #0x2
  42bb14:	b.ne	42bb24 <ferror@plt+0x291b4>  // b.any
  42bb18:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42bb1c:	add	x1, x1, #0x4fb
  42bb20:	b	42b9d8 <ferror@plt+0x29068>
  42bb24:	ldrb	w0, [x19, #1152]
  42bb28:	cbz	w0, 42b9e0 <ferror@plt+0x29070>
  42bb2c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42bb30:	add	x1, x1, #0x514
  42bb34:	b	42b9d8 <ferror@plt+0x29068>
  42bb38:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42bb3c:	add	x1, x1, #0x563
  42bb40:	b	42ba2c <ferror@plt+0x290bc>
  42bb44:	ldp	x19, x20, [sp, #16]
  42bb48:	ldp	x29, x30, [sp], #32
  42bb4c:	ret
  42bb50:	stp	x29, x30, [sp, #-48]!
  42bb54:	mov	x29, sp
  42bb58:	stp	x19, x20, [sp, #16]
  42bb5c:	mov	x19, x0
  42bb60:	stp	x21, x22, [sp, #32]
  42bb64:	ldrb	w0, [x0, #1120]
  42bb68:	cbz	w0, 42bb70 <ferror@plt+0x29200>
  42bb6c:	strb	wzr, [x19, #1138]
  42bb70:	ldrb	w1, [x19, #1155]
  42bb74:	cbz	w1, 42bb8c <ferror@plt+0x2921c>
  42bb78:	ldrb	w1, [x19, #1244]
  42bb7c:	cbnz	w1, 42bb88 <ferror@plt+0x29218>
  42bb80:	mov	w1, #0x1                   	// #1
  42bb84:	strb	w1, [x19, #24]
  42bb88:	strb	wzr, [x19, #1160]
  42bb8c:	ldrb	w1, [x19, #1136]
  42bb90:	cmp	w1, #0x2
  42bb94:	b.ne	42bba8 <ferror@plt+0x29238>  // b.any
  42bb98:	ldrb	w1, [x19, #1125]
  42bb9c:	cmp	w1, #0x0
  42bba0:	cset	w1, eq  // eq = none
  42bba4:	strb	w1, [x19, #1136]
  42bba8:	ldrb	w1, [x19, #1160]
  42bbac:	cbz	w1, 42bbb8 <ferror@plt+0x29248>
  42bbb0:	strb	wzr, [x19, #1125]
  42bbb4:	strb	wzr, [x19, #1136]
  42bbb8:	cbz	w0, 42bc34 <ferror@plt+0x292c4>
  42bbbc:	ldrb	w0, [x19, #1158]
  42bbc0:	cmp	w0, #0x0
  42bbc4:	cset	w21, ne  // ne = any
  42bbc8:	ldrb	w0, [x19, #1159]
  42bbcc:	cbz	w0, 42bc3c <ferror@plt+0x292cc>
  42bbd0:	mov	w0, #0x84                  	// #132
  42bbd4:	orr	w21, w21, w0
  42bbd8:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x1a198>
  42bbdc:	add	x20, x20, #0x648
  42bbe0:	add	x20, x20, #0x150
  42bbe4:	mov	x22, #0xb                   	// #11
  42bbe8:	ldrh	w2, [x20, #8]
  42bbec:	mov	x0, x19
  42bbf0:	ldr	x1, [x20]
  42bbf4:	add	x20, x20, #0x10
  42bbf8:	bl	41ea70 <ferror@plt+0x1c100>
  42bbfc:	ldrh	w1, [x0, #18]
  42bc00:	subs	x22, x22, #0x1
  42bc04:	ubfx	x2, x1, #2, #8
  42bc08:	orr	w2, w21, w2
  42bc0c:	bfi	w1, w2, #2, #8
  42bc10:	strh	w1, [x0, #18]
  42bc14:	ldrb	w1, [x0, #16]
  42bc18:	and	w1, w1, #0xfffffffe
  42bc1c:	strb	w1, [x0, #16]
  42bc20:	ldurh	w2, [x20, #-6]
  42bc24:	bfi	w1, w2, #1, #7
  42bc28:	strb	w1, [x0, #16]
  42bc2c:	b.ne	42bbe8 <ferror@plt+0x29278>  // b.any
  42bc30:	b	42bc40 <ferror@plt+0x292d0>
  42bc34:	mov	w21, #0x0                   	// #0
  42bc38:	b	42bbc8 <ferror@plt+0x29258>
  42bc3c:	cbnz	w21, 42bbd8 <ferror@plt+0x29268>
  42bc40:	ldp	x19, x20, [sp, #16]
  42bc44:	ldp	x21, x22, [sp, #32]
  42bc48:	ldp	x29, x30, [sp], #48
  42bc4c:	ret
  42bc50:	stp	x29, x30, [sp, #-48]!
  42bc54:	mov	x29, sp
  42bc58:	stp	x19, x20, [sp, #16]
  42bc5c:	mov	x19, x0
  42bc60:	ldr	w0, [x0, #1200]
  42bc64:	str	x21, [sp, #32]
  42bc68:	mov	x20, x1
  42bc6c:	cbz	w0, 42bc8c <ferror@plt+0x2931c>
  42bc70:	ldr	x0, [x19, #712]
  42bc74:	cbnz	x0, 42bc80 <ferror@plt+0x29310>
  42bc78:	bl	428e64 <ferror@plt+0x264f4>
  42bc7c:	str	x0, [x19, #712]
  42bc80:	ldr	x0, [x19, #712]
  42bc84:	mov	x1, x20
  42bc88:	bl	428fb0 <ferror@plt+0x26640>
  42bc8c:	add	x2, x19, #0xd8
  42bc90:	mov	x1, x20
  42bc94:	mov	w6, #0x0                   	// #0
  42bc98:	mov	w5, #0x0                   	// #0
  42bc9c:	mov	w4, #0x0                   	// #0
  42bca0:	mov	w3, #0x0                   	// #0
  42bca4:	mov	x0, x19
  42bca8:	bl	41d5a8 <ferror@plt+0x1ac38>
  42bcac:	str	x0, [x19, #288]
  42bcb0:	bl	41d598 <ferror@plt+0x1ac28>
  42bcb4:	tst	w0, #0xff
  42bcb8:	b.ne	42bd7c <ferror@plt+0x2940c>  // b.any
  42bcbc:	ldr	x1, [x19, #288]
  42bcc0:	mov	x0, x19
  42bcc4:	mov	w3, #0x0                   	// #0
  42bcc8:	mov	w2, #0x0                   	// #0
  42bccc:	bl	41dd7c <ferror@plt+0x1b40c>
  42bcd0:	ldrb	w0, [x19, #1155]
  42bcd4:	cbz	w0, 42bd58 <ferror@plt+0x293e8>
  42bcd8:	mov	x0, x19
  42bcdc:	bl	421448 <ferror@plt+0x1ead8>
  42bce0:	mov	x20, x0
  42bce4:	ldrb	w0, [x0, #4]
  42bce8:	cmp	w0, #0x25
  42bcec:	b.ne	42bd6c <ferror@plt+0x293fc>  // b.any
  42bcf0:	mov	w0, #0x1                   	// #1
  42bcf4:	strb	w0, [x19, #16]
  42bcf8:	mov	x0, x19
  42bcfc:	bl	421448 <ferror@plt+0x1ead8>
  42bd00:	mov	x21, x0
  42bd04:	mov	w1, #0x1                   	// #1
  42bd08:	mov	x0, x19
  42bd0c:	bl	426104 <ferror@plt+0x23794>
  42bd10:	strb	wzr, [x19, #16]
  42bd14:	ldrb	w0, [x21, #4]
  42bd18:	cmp	w0, #0x37
  42bd1c:	b.ne	42bd6c <ferror@plt+0x293fc>  // b.any
  42bd20:	ldrh	w1, [x20, #6]
  42bd24:	mov	x0, x19
  42bd28:	and	w1, w1, #0x1
  42bd2c:	bl	417b68 <ferror@plt+0x151f8>
  42bd30:	cbz	w0, 42bd6c <ferror@plt+0x293fc>
  42bd34:	mov	x0, x19
  42bd38:	bl	42b374 <ferror@plt+0x28a04>
  42bd3c:	ldr	x1, [x19, #40]
  42bd40:	mov	w2, #0x18                  	// #24
  42bd44:	ldr	w0, [x1, #12]
  42bd48:	ldr	x1, [x1]
  42bd4c:	sub	w0, w0, #0x1
  42bd50:	smaddl	x0, w0, w2, x1
  42bd54:	ldr	x20, [x0, #8]
  42bd58:	mov	x0, x20
  42bd5c:	ldp	x19, x20, [sp, #16]
  42bd60:	ldr	x21, [sp, #32]
  42bd64:	ldp	x29, x30, [sp], #48
  42bd68:	ret
  42bd6c:	mov	x0, x19
  42bd70:	mov	w1, #0x1                   	// #1
  42bd74:	bl	426104 <ferror@plt+0x23794>
  42bd78:	b	42bd3c <ferror@plt+0x293cc>
  42bd7c:	mov	x20, #0x0                   	// #0
  42bd80:	b	42bd58 <ferror@plt+0x293e8>
  42bd84:	stp	x29, x30, [sp, #-32]!
  42bd88:	mov	x29, sp
  42bd8c:	stp	x19, x20, [sp, #16]
  42bd90:	mov	x20, x1
  42bd94:	mov	x19, x0
  42bd98:	ldrb	w1, [x0, #1151]
  42bd9c:	cbz	w1, 42bdb0 <ferror@plt+0x29440>
  42bda0:	adrp	x1, 425000 <ferror@plt+0x22690>
  42bda4:	mov	x2, #0x0                   	// #0
  42bda8:	add	x1, x1, #0x7b8
  42bdac:	bl	41ebf4 <ferror@plt+0x1c284>
  42bdb0:	ldr	x0, [x19]
  42bdb4:	cbz	x0, 42bdc4 <ferror@plt+0x29454>
  42bdb8:	mov	x0, x19
  42bdbc:	bl	4187a8 <ferror@plt+0x15e38>
  42bdc0:	b	42bdb0 <ferror@plt+0x29440>
  42bdc4:	ldr	w0, [x19, #1200]
  42bdc8:	cbz	w0, 42bdf4 <ferror@plt+0x29484>
  42bdcc:	cbz	x20, 42bdf4 <ferror@plt+0x29484>
  42bdd0:	ldr	x0, [x19, #712]
  42bdd4:	mov	x1, x20
  42bdd8:	mov	w2, #0x48                  	// #72
  42bddc:	bl	4291ac <ferror@plt+0x2683c>
  42bde0:	ldrb	w0, [x19, #1205]
  42bde4:	cbz	w0, 42bdf4 <ferror@plt+0x29484>
  42bde8:	ldr	x0, [x19, #712]
  42bdec:	mov	x1, x20
  42bdf0:	bl	4292fc <ferror@plt+0x2698c>
  42bdf4:	ldrb	w0, [x19, #1131]
  42bdf8:	cbz	w0, 42be0c <ferror@plt+0x2949c>
  42bdfc:	mov	x0, x19
  42be00:	ldp	x19, x20, [sp, #16]
  42be04:	ldp	x29, x30, [sp], #32
  42be08:	b	41e4fc <ferror@plt+0x1bb8c>
  42be0c:	ldp	x19, x20, [sp, #16]
  42be10:	ldp	x29, x30, [sp], #32
  42be14:	ret
  42be18:	stp	x29, x30, [sp, #-112]!
  42be1c:	mov	x29, sp
  42be20:	stp	x19, x20, [sp, #16]
  42be24:	add	x20, sp, #0x28
  42be28:	stp	xzr, xzr, [sp, #48]
  42be2c:	str	x0, [sp, #40]
  42be30:	mov	x0, x20
  42be34:	str	w1, [sp, #48]
  42be38:	mov	x1, #0x48                  	// #72
  42be3c:	stp	xzr, xzr, [sp, #64]
  42be40:	stp	xzr, xzr, [sp, #80]
  42be44:	stp	xzr, xzr, [sp, #96]
  42be48:	bl	42c0c0 <ferror@plt+0x29750>
  42be4c:	mov	x19, x0
  42be50:	cbz	x0, 42be60 <ferror@plt+0x294f0>
  42be54:	mov	x1, x20
  42be58:	mov	x2, #0x48                  	// #72
  42be5c:	bl	4022e0 <memcpy@plt>
  42be60:	mov	x0, x19
  42be64:	ldp	x19, x20, [sp, #16]
  42be68:	ldp	x29, x30, [sp], #112
  42be6c:	ret
  42be70:	stp	x29, x30, [sp, #-48]!
  42be74:	mov	x29, sp
  42be78:	str	x19, [sp, #16]
  42be7c:	mov	x19, x1
  42be80:	add	x1, sp, #0x2c
  42be84:	str	wzr, [sp, #44]
  42be88:	bl	4485a8 <_obstack_memory_used@@Base+0xe740>
  42be8c:	mov	x1, x0
  42be90:	ldr	w0, [x19]
  42be94:	cmp	w0, #0x0
  42be98:	b.le	42beb4 <ferror@plt+0x29544>
  42be9c:	sub	w0, w0, #0x1
  42bea0:	str	w0, [x19]
  42bea4:	mov	w0, #0x0                   	// #0
  42bea8:	ldr	x19, [sp, #16]
  42beac:	ldp	x29, x30, [sp], #48
  42beb0:	ret
  42beb4:	ldr	w0, [sp, #44]
  42beb8:	ldr	w2, [x19, #44]
  42bebc:	cmp	w0, #0x0
  42bec0:	cset	x0, eq  // eq = none
  42bec4:	sub	x1, x1, x0
  42bec8:	ldr	x5, [x19, #16]
  42becc:	ldr	x0, [x19, #32]
  42bed0:	cbnz	w2, 42befc <ferror@plt+0x2958c>
  42bed4:	mov	x4, #0x0                   	// #0
  42bed8:	mov	w3, #0x0                   	// #0
  42bedc:	mov	x2, #0x0                   	// #0
  42bee0:	blr	x5
  42bee4:	str	w0, [x19, #40]
  42bee8:	ldr	w0, [x19, #40]
  42beec:	cmp	w0, #0x0
  42bef0:	mov	w0, #0x5                   	// #5
  42bef4:	csel	w0, wzr, w0, eq  // eq = none
  42bef8:	b	42bea8 <ferror@plt+0x29538>
  42befc:	mov	x4, x0
  42bf00:	mov	x2, x5
  42bf04:	ldr	x0, [x19, #8]
  42bf08:	ldr	x3, [x19, #24]
  42bf0c:	bl	42c558 <ferror@plt+0x29be8>
  42bf10:	b	42bee4 <ferror@plt+0x29574>
  42bf14:	stp	x29, x30, [sp, #-80]!
  42bf18:	add	w1, w1, #0x1
  42bf1c:	mov	x29, sp
  42bf20:	str	x19, [sp, #16]
  42bf24:	mov	x19, x0
  42bf28:	str	w1, [sp, #32]
  42bf2c:	mov	x1, #0x1000                	// #4096
  42bf30:	stp	x0, x2, [sp, #40]
  42bf34:	mov	x2, #0x0                   	// #0
  42bf38:	stp	x3, x4, [sp, #56]
  42bf3c:	mov	x3, #0x0                   	// #0
  42bf40:	str	wzr, [sp, #72]
  42bf44:	bl	42c0c0 <ferror@plt+0x29750>
  42bf48:	cbnz	x0, 42bf70 <ferror@plt+0x29600>
  42bf4c:	str	wzr, [sp, #76]
  42bf50:	add	x1, sp, #0x20
  42bf54:	adrp	x0, 42b000 <ferror@plt+0x28690>
  42bf58:	add	x0, x0, #0xe70
  42bf5c:	bl	448bf0 <_obstack_memory_used@@Base+0xed88>
  42bf60:	ldr	w0, [sp, #72]
  42bf64:	ldr	x19, [sp, #16]
  42bf68:	ldp	x29, x30, [sp], #80
  42bf6c:	ret
  42bf70:	mov	x1, x0
  42bf74:	mov	x4, #0x0                   	// #0
  42bf78:	mov	x0, x19
  42bf7c:	mov	x3, #0x0                   	// #0
  42bf80:	mov	x2, #0x1000                	// #4096
  42bf84:	bl	42c004 <ferror@plt+0x29694>
  42bf88:	mov	w0, #0x1                   	// #1
  42bf8c:	str	w0, [sp, #76]
  42bf90:	b	42bf50 <ferror@plt+0x295e0>
  42bf94:	ldr	x4, [x0, #64]
  42bf98:	add	x5, x0, #0x40
  42bf9c:	mov	x3, #0x0                   	// #0
  42bfa0:	mov	x6, #0x0                   	// #0
  42bfa4:	cbnz	x4, 42bfd8 <ferror@plt+0x29668>
  42bfa8:	cmp	x6, #0xf
  42bfac:	b.ls	42bfc8 <ferror@plt+0x29658>  // b.plast
  42bfb0:	ldr	x4, [x3]
  42bfb4:	ldr	x5, [x4, #8]
  42bfb8:	cmp	x5, x2
  42bfbc:	b.cs	42bfd4 <ferror@plt+0x29664>  // b.hs, b.nlast
  42bfc0:	ldr	x4, [x4]
  42bfc4:	str	x4, [x3]
  42bfc8:	ldr	x3, [x0, #64]
  42bfcc:	stp	x3, x2, [x1]
  42bfd0:	str	x1, [x0, #64]
  42bfd4:	ret
  42bfd8:	cbz	x3, 42bff0 <ferror@plt+0x29680>
  42bfdc:	ldr	x7, [x3]
  42bfe0:	ldr	x8, [x4, #8]
  42bfe4:	ldr	x7, [x7, #8]
  42bfe8:	cmp	x8, x7
  42bfec:	csel	x5, x5, x3, cc  // cc = lo, ul, last
  42bff0:	mov	x3, x5
  42bff4:	add	x6, x6, #0x1
  42bff8:	mov	x5, x4
  42bffc:	ldr	x4, [x4]
  42c000:	b	42bfa4 <ferror@plt+0x29634>
  42c004:	stp	x29, x30, [sp, #-48]!
  42c008:	mov	x29, sp
  42c00c:	stp	x19, x20, [sp, #16]
  42c010:	mov	x19, x0
  42c014:	mov	x20, x2
  42c018:	str	x21, [sp, #32]
  42c01c:	mov	x0, #0xffff                	// #65535
  42c020:	mov	x21, x1
  42c024:	cmp	x2, x0
  42c028:	b.hi	42c07c <ferror@plt+0x2970c>  // b.pmore
  42c02c:	ldr	w0, [x19, #8]
  42c030:	cbz	w0, 42c0b4 <ferror@plt+0x29744>
  42c034:	add	x0, x19, #0x3c
  42c038:	mov	w2, #0x1                   	// #1
  42c03c:	ldxr	w1, [x0]
  42c040:	stxr	w3, w2, [x0]
  42c044:	cbnz	w3, 42c03c <ferror@plt+0x296cc>
  42c048:	dmb	ish
  42c04c:	cbnz	w1, 42c0a4 <ferror@plt+0x29734>
  42c050:	cmp	x20, #0xf
  42c054:	b.ls	42c068 <ferror@plt+0x296f8>  // b.plast
  42c058:	mov	x2, x20
  42c05c:	mov	x1, x21
  42c060:	mov	x0, x19
  42c064:	bl	42bf94 <ferror@plt+0x29624>
  42c068:	ldr	w0, [x19, #8]
  42c06c:	cbz	w0, 42c0a4 <ferror@plt+0x29734>
  42c070:	add	x19, x19, #0x3c
  42c074:	stlr	wzr, [x19]
  42c078:	b	42c0a4 <ferror@plt+0x29734>
  42c07c:	bl	4025b0 <getpagesize@plt>
  42c080:	sxtw	x0, w0
  42c084:	sub	x0, x0, #0x1
  42c088:	orr	x1, x21, x20
  42c08c:	tst	x0, x1
  42c090:	b.ne	42c02c <ferror@plt+0x296bc>  // b.any
  42c094:	mov	x1, x20
  42c098:	mov	x0, x21
  42c09c:	bl	402790 <munmap@plt>
  42c0a0:	cbnz	w0, 42c02c <ferror@plt+0x296bc>
  42c0a4:	ldp	x19, x20, [sp, #16]
  42c0a8:	ldr	x21, [sp, #32]
  42c0ac:	ldp	x29, x30, [sp], #48
  42c0b0:	ret
  42c0b4:	cmp	x20, #0xf
  42c0b8:	b.hi	42c058 <ferror@plt+0x296e8>  // b.pmore
  42c0bc:	b	42c0a4 <ferror@plt+0x29734>
  42c0c0:	stp	x29, x30, [sp, #-64]!
  42c0c4:	mov	x29, sp
  42c0c8:	stp	x21, x22, [sp, #32]
  42c0cc:	mov	x21, x0
  42c0d0:	ldr	w0, [x0, #8]
  42c0d4:	stp	x19, x20, [sp, #16]
  42c0d8:	mov	x19, x1
  42c0dc:	stp	x23, x24, [sp, #48]
  42c0e0:	mov	x23, x2
  42c0e4:	mov	x24, x3
  42c0e8:	cbnz	w0, 42c15c <ferror@plt+0x297ec>
  42c0ec:	ldr	x20, [x21, #64]
  42c0f0:	add	x0, x21, #0x40
  42c0f4:	cbz	x20, 42c130 <ferror@plt+0x297c0>
  42c0f8:	ldp	x1, x2, [x20]
  42c0fc:	cmp	x2, x19
  42c100:	b.cc	42c1dc <ferror@plt+0x2986c>  // b.lo, b.ul, b.last
  42c104:	add	x19, x19, #0x7
  42c108:	str	x1, [x0]
  42c10c:	and	x19, x19, #0xfffffffffffffff8
  42c110:	cmp	x2, x19
  42c114:	b.ls	42c130 <ferror@plt+0x297c0>  // b.plast
  42c118:	sub	x2, x2, x19
  42c11c:	cmp	x2, #0xf
  42c120:	b.ls	42c130 <ferror@plt+0x297c0>  // b.plast
  42c124:	add	x1, x20, x19
  42c128:	mov	x0, x21
  42c12c:	bl	42bf94 <ferror@plt+0x29624>
  42c130:	ldr	w0, [x21, #8]
  42c134:	cbz	w0, 42c140 <ferror@plt+0x297d0>
  42c138:	add	x0, x21, #0x3c
  42c13c:	stlr	wzr, [x0]
  42c140:	cbz	x20, 42c178 <ferror@plt+0x29808>
  42c144:	mov	x0, x20
  42c148:	ldp	x19, x20, [sp, #16]
  42c14c:	ldp	x21, x22, [sp, #32]
  42c150:	ldp	x23, x24, [sp, #48]
  42c154:	ldp	x29, x30, [sp], #64
  42c158:	ret
  42c15c:	add	x0, x21, #0x3c
  42c160:	mov	w2, #0x1                   	// #1
  42c164:	ldxr	w1, [x0]
  42c168:	stxr	w3, w2, [x0]
  42c16c:	cbnz	w3, 42c164 <ferror@plt+0x297f4>
  42c170:	dmb	ish
  42c174:	cbz	w1, 42c0ec <ferror@plt+0x2977c>
  42c178:	bl	4025b0 <getpagesize@plt>
  42c17c:	sub	x22, x19, #0x1
  42c180:	sxtw	x2, w0
  42c184:	add	x0, x22, w0, sxtw
  42c188:	neg	x22, x2
  42c18c:	mov	x5, #0x0                   	// #0
  42c190:	and	x22, x0, x22
  42c194:	mov	w4, #0xffffffff            	// #-1
  42c198:	mov	x1, x22
  42c19c:	mov	w3, #0x22                  	// #34
  42c1a0:	mov	w2, #0x3                   	// #3
  42c1a4:	mov	x0, #0x0                   	// #0
  42c1a8:	bl	4026f0 <mmap@plt>
  42c1ac:	mov	x20, x0
  42c1b0:	cmn	x0, #0x1
  42c1b4:	b.ne	42c1e8 <ferror@plt+0x29878>  // b.any
  42c1b8:	cbz	x23, 42c1d4 <ferror@plt+0x29864>
  42c1bc:	bl	4028c0 <__errno_location@plt>
  42c1c0:	ldr	w2, [x0]
  42c1c4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42c1c8:	mov	x0, x24
  42c1cc:	add	x1, x1, #0x908
  42c1d0:	blr	x23
  42c1d4:	mov	x20, #0x0                   	// #0
  42c1d8:	b	42c144 <ferror@plt+0x297d4>
  42c1dc:	mov	x0, x20
  42c1e0:	mov	x20, x1
  42c1e4:	b	42c0f4 <ferror@plt+0x29784>
  42c1e8:	add	x19, x19, #0x7
  42c1ec:	and	x19, x19, #0xfffffffffffffff8
  42c1f0:	cmp	x22, x19
  42c1f4:	b.ls	42c144 <ferror@plt+0x297d4>  // b.plast
  42c1f8:	add	x1, x0, x19
  42c1fc:	mov	x4, x24
  42c200:	mov	x3, x23
  42c204:	sub	x2, x22, x19
  42c208:	mov	x0, x21
  42c20c:	bl	42c004 <ferror@plt+0x29694>
  42c210:	b	42c144 <ferror@plt+0x297d4>
  42c214:	stp	x29, x30, [sp, #-96]!
  42c218:	mov	x29, sp
  42c21c:	stp	x23, x24, [sp, #48]
  42c220:	mov	x23, x0
  42c224:	ldr	x0, [x4, #16]
  42c228:	stp	x19, x20, [sp, #16]
  42c22c:	mov	x19, x4
  42c230:	stp	x21, x22, [sp, #32]
  42c234:	cmp	x0, x1
  42c238:	mov	x22, x1
  42c23c:	stp	x25, x26, [sp, #64]
  42c240:	str	x27, [sp, #80]
  42c244:	b.cs	42c2c0 <ferror@plt+0x29950>  // b.hs, b.nlast
  42c248:	ldr	x0, [x4, #8]
  42c24c:	mov	x24, x2
  42c250:	mov	x25, x3
  42c254:	add	x21, x1, x0
  42c258:	cbnz	x0, 42c2f8 <ferror@plt+0x29988>
  42c25c:	lsl	x20, x21, #4
  42c260:	mov	x3, x25
  42c264:	mov	x2, x24
  42c268:	mov	x1, x20
  42c26c:	mov	x0, x23
  42c270:	bl	42c0c0 <ferror@plt+0x29750>
  42c274:	mov	x21, x0
  42c278:	cbz	x0, 42c2d8 <ferror@plt+0x29968>
  42c27c:	ldr	x26, [x19]
  42c280:	cbz	x26, 42c2b0 <ferror@plt+0x29940>
  42c284:	ldr	x27, [x19, #8]
  42c288:	mov	x1, x26
  42c28c:	mov	x2, x27
  42c290:	bl	4022e0 <memcpy@plt>
  42c294:	ldr	x2, [x19, #16]
  42c298:	mov	x4, x25
  42c29c:	mov	x3, x24
  42c2a0:	mov	x1, x26
  42c2a4:	mov	x0, x23
  42c2a8:	add	x2, x27, x2
  42c2ac:	bl	42c004 <ferror@plt+0x29694>
  42c2b0:	ldr	x0, [x19, #8]
  42c2b4:	str	x21, [x19]
  42c2b8:	sub	x20, x20, x0
  42c2bc:	str	x20, [x19, #16]
  42c2c0:	ldp	x21, x0, [x19]
  42c2c4:	ldr	x1, [x19, #16]
  42c2c8:	add	x21, x21, x0
  42c2cc:	add	x0, x0, x22
  42c2d0:	sub	x22, x1, x22
  42c2d4:	stp	x0, x22, [x19, #8]
  42c2d8:	mov	x0, x21
  42c2dc:	ldp	x19, x20, [sp, #16]
  42c2e0:	ldp	x21, x22, [sp, #32]
  42c2e4:	ldp	x23, x24, [sp, #48]
  42c2e8:	ldp	x25, x26, [sp, #64]
  42c2ec:	ldr	x27, [sp, #80]
  42c2f0:	ldp	x29, x30, [sp], #96
  42c2f4:	ret
  42c2f8:	bl	4025b0 <getpagesize@plt>
  42c2fc:	lsl	x20, x21, #1
  42c300:	sxtw	x1, w0
  42c304:	cmp	x21, w0, sxtw
  42c308:	b.cs	42c318 <ferror@plt+0x299a8>  // b.hs, b.nlast
  42c30c:	cmp	x1, x20
  42c310:	csel	x20, x1, x20, ls  // ls = plast
  42c314:	b	42c260 <ferror@plt+0x298f0>
  42c318:	sub	x20, x20, #0x1
  42c31c:	add	x20, x20, x1
  42c320:	neg	x1, x1
  42c324:	and	x20, x20, x1
  42c328:	b	42c260 <ferror@plt+0x298f0>
  42c32c:	ldp	x0, x2, [x1]
  42c330:	add	x2, x0, x2
  42c334:	stp	x2, xzr, [x1]
  42c338:	ret
  42c33c:	stp	x29, x30, [sp, #-32]!
  42c340:	mov	x29, sp
  42c344:	ldr	x5, [x1, #8]
  42c348:	str	x19, [sp, #16]
  42c34c:	mov	x19, x1
  42c350:	add	x1, x5, #0x7
  42c354:	and	x1, x1, #0xfffffffffffffff8
  42c358:	ldr	x4, [x19, #16]
  42c35c:	ldr	x6, [x19]
  42c360:	add	x5, x5, x4
  42c364:	mov	x4, x3
  42c368:	mov	x3, x2
  42c36c:	sub	x2, x5, x1
  42c370:	add	x1, x6, x1
  42c374:	bl	42c004 <ferror@plt+0x29694>
  42c378:	str	xzr, [x19, #16]
  42c37c:	ldr	x0, [x19, #8]
  42c380:	cbnz	x0, 42c388 <ferror@plt+0x29a18>
  42c384:	str	xzr, [x19]
  42c388:	mov	w0, #0x1                   	// #1
  42c38c:	ldr	x19, [sp, #16]
  42c390:	ldp	x29, x30, [sp], #32
  42c394:	ret
  42c398:	stp	x29, x30, [sp, #-160]!
  42c39c:	mov	x29, sp
  42c3a0:	stp	x19, x20, [sp, #16]
  42c3a4:	mov	x19, x0
  42c3a8:	ldr	w0, [x0, #8]
  42c3ac:	stp	x21, x22, [sp, #32]
  42c3b0:	mov	x21, x1
  42c3b4:	mov	x22, x2
  42c3b8:	stp	x23, x24, [sp, #48]
  42c3bc:	stp	x25, x26, [sp, #64]
  42c3c0:	cbnz	w0, 42c42c <ferror@plt+0x29abc>
  42c3c4:	ldr	w0, [x19, #56]
  42c3c8:	cbnz	w0, 42c410 <ferror@plt+0x29aa0>
  42c3cc:	ldr	x0, [x19, #24]
  42c3d0:	str	x0, [sp, #88]
  42c3d4:	ldr	x0, [sp, #88]
  42c3d8:	cbnz	x0, 42c51c <ferror@plt+0x29bac>
  42c3dc:	adrp	x23, 454000 <_obstack_memory_used@@Base+0x1a198>
  42c3e0:	adrp	x24, 454000 <_obstack_memory_used@@Base+0x1a198>
  42c3e4:	add	x25, sp, #0x54
  42c3e8:	add	x23, x23, #0x99c
  42c3ec:	add	x24, x24, #0x920
  42c3f0:	mov	w26, #0x0                   	// #0
  42c3f4:	sub	w0, w26, #0x1
  42c3f8:	cmp	w0, #0x3
  42c3fc:	b.hi	42c44c <ferror@plt+0x29adc>  // b.pmore
  42c400:	ldrb	w0, [x23, w0, uxtw]
  42c404:	adr	x1, 42c410 <ferror@plt+0x29aa0>
  42c408:	add	x0, x1, w0, sxtb #2
  42c40c:	br	x0
  42c410:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42c414:	mov	x0, x22
  42c418:	add	x1, x1, #0x92f
  42c41c:	mov	w2, #0xffffffff            	// #-1
  42c420:	blr	x21
  42c424:	mov	w0, #0x0                   	// #0
  42c428:	b	42c4a8 <ferror@plt+0x29b38>
  42c42c:	add	x0, x19, #0x38
  42c430:	ldar	w0, [x0]
  42c434:	cbnz	w0, 42c410 <ferror@plt+0x29aa0>
  42c438:	ldr	w0, [x19, #8]
  42c43c:	cbz	w0, 42c3cc <ferror@plt+0x29a5c>
  42c440:	add	x0, x19, #0x18
  42c444:	ldar	x0, [x0]
  42c448:	b	42c3d0 <ferror@plt+0x29a60>
  42c44c:	ldr	x20, [x19]
  42c450:	cbz	x20, 42c478 <ferror@plt+0x29b08>
  42c454:	mov	x2, x22
  42c458:	mov	x3, x25
  42c45c:	mov	x1, x21
  42c460:	mov	x0, x20
  42c464:	bl	42c65c <ferror@plt+0x29cec>
  42c468:	mov	w2, w0
  42c46c:	tbz	w0, #31, 42c524 <ferror@plt+0x29bb4>
  42c470:	ldr	w0, [sp, #84]
  42c474:	cbz	w0, 42c498 <ferror@plt+0x29b28>
  42c478:	add	w26, w26, #0x1
  42c47c:	cmp	w26, #0x5
  42c480:	b.ne	42c3f4 <ferror@plt+0x29a84>  // b.any
  42c484:	ldr	x1, [x19]
  42c488:	cbz	x1, 42c4f8 <ferror@plt+0x29b88>
  42c48c:	mov	w2, #0x2                   	// #2
  42c490:	mov	x0, x22
  42c494:	blr	x21
  42c498:	ldr	w0, [x19, #8]
  42c49c:	cbnz	w0, 42c508 <ferror@plt+0x29b98>
  42c4a0:	mov	w1, #0x1                   	// #1
  42c4a4:	str	w1, [x19, #56]
  42c4a8:	ldp	x19, x20, [sp, #16]
  42c4ac:	ldp	x21, x22, [sp, #32]
  42c4b0:	ldp	x23, x24, [sp, #48]
  42c4b4:	ldp	x25, x26, [sp, #64]
  42c4b8:	ldp	x29, x30, [sp], #160
  42c4bc:	ret
  42c4c0:	bl	402470 <getpid@plt>
  42c4c4:	add	x20, sp, #0x60
  42c4c8:	sxtw	x3, w0
  42c4cc:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x1a198>
  42c4d0:	mov	x0, x20
  42c4d4:	add	x2, x2, #0x955
  42c4d8:	mov	x1, #0x40                  	// #64
  42c4dc:	bl	402420 <snprintf@plt>
  42c4e0:	b	42c454 <ferror@plt+0x29ae4>
  42c4e4:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x1a198>
  42c4e8:	add	x20, x20, #0x90d
  42c4ec:	b	42c454 <ferror@plt+0x29ae4>
  42c4f0:	mov	x20, x24
  42c4f4:	b	42c454 <ferror@plt+0x29ae4>
  42c4f8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42c4fc:	mov	w2, #0x0                   	// #0
  42c500:	add	x1, x1, #0x96c
  42c504:	b	42c490 <ferror@plt+0x29b20>
  42c508:	mov	w0, #0x1                   	// #1
  42c50c:	add	x19, x19, #0x38
  42c510:	stlr	w0, [x19]
  42c514:	b	42c424 <ferror@plt+0x29ab4>
  42c518:	str	x1, [x19, #24]
  42c51c:	mov	w0, #0x1                   	// #1
  42c520:	b	42c4a8 <ferror@plt+0x29b38>
  42c524:	add	x5, sp, #0x58
  42c528:	mov	x4, x22
  42c52c:	mov	x3, x21
  42c530:	mov	x1, x20
  42c534:	mov	x0, x19
  42c538:	bl	42f174 <ferror@plt+0x2c804>
  42c53c:	cbz	w0, 42c498 <ferror@plt+0x29b28>
  42c540:	ldr	w0, [x19, #8]
  42c544:	ldr	x1, [sp, #88]
  42c548:	cbz	w0, 42c518 <ferror@plt+0x29ba8>
  42c54c:	add	x19, x19, #0x18
  42c550:	stlr	x1, [x19]
  42c554:	b	42c51c <ferror@plt+0x29bac>
  42c558:	stp	x29, x30, [sp, #-64]!
  42c55c:	mov	x29, sp
  42c560:	stp	x19, x20, [sp, #16]
  42c564:	mov	x19, x0
  42c568:	mov	x20, x3
  42c56c:	stp	x21, x22, [sp, #32]
  42c570:	mov	x22, x1
  42c574:	mov	x21, x4
  42c578:	mov	x1, x3
  42c57c:	str	x23, [sp, #48]
  42c580:	mov	x23, x2
  42c584:	mov	x2, x4
  42c588:	bl	42c398 <ferror@plt+0x29a28>
  42c58c:	cbz	w0, 42c5c8 <ferror@plt+0x29c58>
  42c590:	ldr	w0, [x19, #56]
  42c594:	cbnz	w0, 42c5c8 <ferror@plt+0x29c58>
  42c598:	mov	x4, x21
  42c59c:	mov	x3, x20
  42c5a0:	mov	x2, x23
  42c5a4:	mov	x1, x22
  42c5a8:	mov	x0, x19
  42c5ac:	ldr	x5, [x19, #24]
  42c5b0:	ldp	x19, x20, [sp, #16]
  42c5b4:	mov	x16, x5
  42c5b8:	ldp	x21, x22, [sp, #32]
  42c5bc:	ldr	x23, [sp, #48]
  42c5c0:	ldp	x29, x30, [sp], #64
  42c5c4:	br	x16
  42c5c8:	mov	w0, #0x0                   	// #0
  42c5cc:	ldp	x19, x20, [sp, #16]
  42c5d0:	ldp	x21, x22, [sp, #32]
  42c5d4:	ldr	x23, [sp, #48]
  42c5d8:	ldp	x29, x30, [sp], #64
  42c5dc:	ret
  42c5e0:	stp	x29, x30, [sp, #-64]!
  42c5e4:	mov	x29, sp
  42c5e8:	stp	x19, x20, [sp, #16]
  42c5ec:	mov	x19, x0
  42c5f0:	mov	x20, x3
  42c5f4:	stp	x21, x22, [sp, #32]
  42c5f8:	mov	x22, x1
  42c5fc:	mov	x21, x4
  42c600:	mov	x1, x3
  42c604:	str	x23, [sp, #48]
  42c608:	mov	x23, x2
  42c60c:	mov	x2, x4
  42c610:	bl	42c398 <ferror@plt+0x29a28>
  42c614:	cbz	w0, 42c640 <ferror@plt+0x29cd0>
  42c618:	ldr	w0, [x19, #56]
  42c61c:	cbnz	w0, 42c654 <ferror@plt+0x29ce4>
  42c620:	ldr	x5, [x19, #40]
  42c624:	mov	x0, x19
  42c628:	mov	x4, x21
  42c62c:	mov	x3, x20
  42c630:	mov	x2, x23
  42c634:	mov	x1, x22
  42c638:	blr	x5
  42c63c:	mov	w0, #0x1                   	// #1
  42c640:	ldp	x19, x20, [sp, #16]
  42c644:	ldp	x21, x22, [sp, #32]
  42c648:	ldr	x23, [sp, #48]
  42c64c:	ldp	x29, x30, [sp], #64
  42c650:	ret
  42c654:	mov	w0, #0x0                   	// #0
  42c658:	b	42c640 <ferror@plt+0x29cd0>
  42c65c:	stp	x29, x30, [sp, #-64]!
  42c660:	mov	x29, sp
  42c664:	stp	x19, x20, [sp, #16]
  42c668:	mov	x20, x3
  42c66c:	stp	x21, x22, [sp, #32]
  42c670:	mov	x21, x0
  42c674:	mov	x22, x1
  42c678:	str	x23, [sp, #48]
  42c67c:	mov	x23, x2
  42c680:	cbz	x3, 42c688 <ferror@plt+0x29d18>
  42c684:	str	wzr, [x3]
  42c688:	mov	x0, x21
  42c68c:	mov	w1, #0x80000               	// #524288
  42c690:	bl	4024c0 <open@plt>
  42c694:	mov	w19, w0
  42c698:	tbz	w0, #31, 42c6e4 <ferror@plt+0x29d74>
  42c69c:	bl	4028c0 <__errno_location@plt>
  42c6a0:	ldr	w2, [x0]
  42c6a4:	cbz	x20, 42c6d4 <ferror@plt+0x29d64>
  42c6a8:	cmp	w2, #0x2
  42c6ac:	b.ne	42c6d4 <ferror@plt+0x29d64>  // b.any
  42c6b0:	mov	w0, #0x1                   	// #1
  42c6b4:	str	w0, [x20]
  42c6b8:	mov	w19, #0xffffffff            	// #-1
  42c6bc:	mov	w0, w19
  42c6c0:	ldp	x19, x20, [sp, #16]
  42c6c4:	ldp	x21, x22, [sp, #32]
  42c6c8:	ldr	x23, [sp, #48]
  42c6cc:	ldp	x29, x30, [sp], #64
  42c6d0:	ret
  42c6d4:	mov	x1, x21
  42c6d8:	mov	x0, x23
  42c6dc:	blr	x22
  42c6e0:	b	42c6b8 <ferror@plt+0x29d48>
  42c6e4:	mov	w2, #0x1                   	// #1
  42c6e8:	mov	w1, #0x2                   	// #2
  42c6ec:	bl	402780 <fcntl@plt>
  42c6f0:	b	42c6bc <ferror@plt+0x29d4c>
  42c6f4:	stp	x29, x30, [sp, #-32]!
  42c6f8:	mov	x29, sp
  42c6fc:	stp	x19, x20, [sp, #16]
  42c700:	mov	x19, x1
  42c704:	mov	x20, x2
  42c708:	bl	402600 <close@plt>
  42c70c:	tbz	w0, #31, 42c738 <ferror@plt+0x29dc8>
  42c710:	bl	4028c0 <__errno_location@plt>
  42c714:	ldr	w2, [x0]
  42c718:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42c71c:	mov	x0, x20
  42c720:	add	x1, x1, #0x9a0
  42c724:	blr	x19
  42c728:	mov	w0, #0x0                   	// #0
  42c72c:	ldp	x19, x20, [sp, #16]
  42c730:	ldp	x29, x30, [sp], #32
  42c734:	ret
  42c738:	mov	w0, #0x1                   	// #1
  42c73c:	b	42c72c <ferror@plt+0x29dbc>
  42c740:	stp	x29, x30, [sp, #-16]!
  42c744:	mov	x0, x4
  42c748:	mov	w2, #0xffffffff            	// #-1
  42c74c:	mov	x29, sp
  42c750:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42c754:	add	x1, x1, #0x9a6
  42c758:	blr	x3
  42c75c:	mov	w0, #0x0                   	// #0
  42c760:	ldp	x29, x30, [sp], #16
  42c764:	ret
  42c768:	mov	x16, x3
  42c76c:	mov	x0, x4
  42c770:	mov	w2, #0xffffffff            	// #-1
  42c774:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42c778:	add	x1, x1, #0x9c6
  42c77c:	br	x16
  42c780:	ldr	x2, [x0, #8]
  42c784:	ldr	x1, [x1, #8]
  42c788:	cmp	x2, x1
  42c78c:	cset	w0, hi  // hi = pmore
  42c790:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
  42c794:	ret
  42c798:	ldr	x2, [x0]
  42c79c:	ldr	x0, [x1, #8]
  42c7a0:	cmp	x0, x2
  42c7a4:	b.hi	42c7bc <ferror@plt+0x29e4c>  // b.pmore
  42c7a8:	ldr	x1, [x1, #16]
  42c7ac:	add	x0, x0, x1
  42c7b0:	cmp	x0, x2
  42c7b4:	cset	w0, ls  // ls = plast
  42c7b8:	ret
  42c7bc:	mov	w0, #0xffffffff            	// #-1
  42c7c0:	b	42c7b8 <ferror@plt+0x29e48>
  42c7c4:	stp	x29, x30, [sp, #-192]!
  42c7c8:	mov	x4, #0x0                   	// #0
  42c7cc:	mov	x29, sp
  42c7d0:	add	x6, sp, #0xa0
  42c7d4:	add	x8, sp, #0x80
  42c7d8:	stp	x19, x20, [sp, #16]
  42c7dc:	add	x20, x2, #0x1, lsl #12
  42c7e0:	add	x19, sp, #0x60
  42c7e4:	stp	x21, x22, [sp, #32]
  42c7e8:	stp	x23, x24, [sp, #48]
  42c7ec:	str	x25, [sp, #64]
  42c7f0:	stp	xzr, xzr, [sp, #96]
  42c7f4:	stp	xzr, xzr, [sp, #112]
  42c7f8:	ldrb	w7, [x0, x4]
  42c7fc:	cmp	w7, #0xf
  42c800:	b.ls	42c820 <ferror@plt+0x29eb0>  // b.plast
  42c804:	mov	w0, #0x0                   	// #0
  42c808:	ldp	x19, x20, [sp, #16]
  42c80c:	ldp	x21, x22, [sp, #32]
  42c810:	ldp	x23, x24, [sp, #48]
  42c814:	ldr	x25, [sp, #64]
  42c818:	ldp	x29, x30, [sp], #192
  42c81c:	ret
  42c820:	sbfiz	x5, x7, #1, #32
  42c824:	ldrh	w7, [x19, w7, sxtw #1]
  42c828:	and	w2, w4, #0xffff
  42c82c:	cbnz	w7, 42c98c <ferror@plt+0x2a01c>
  42c830:	strh	w2, [x8, x5]
  42c834:	strh	w2, [x6, x5]
  42c838:	ldrb	w2, [x0, x4]
  42c83c:	add	x4, x4, #0x1
  42c840:	cmp	x1, x4
  42c844:	lsl	x2, x2, #1
  42c848:	ldrh	w5, [x19, x2]
  42c84c:	add	w5, w5, #0x1
  42c850:	strh	w5, [x19, x2]
  42c854:	b.ne	42c7f8 <ferror@plt+0x29e88>  // b.any
  42c858:	mov	x0, x3
  42c85c:	mov	w1, #0x0                   	// #0
  42c860:	mov	x2, #0x800                 	// #2048
  42c864:	bl	402530 <memset@plt>
  42c868:	add	x12, sp, #0x80
  42c86c:	mov	x3, x0
  42c870:	mov	x0, #0x1                   	// #1
  42c874:	mov	w11, w0
  42c878:	mov	w1, #0x0                   	// #0
  42c87c:	ldrh	w4, [x19, x0, lsl #1]
  42c880:	cbz	w4, 42c8bc <ferror@plt+0x29f4c>
  42c884:	lsl	w5, w11, w0
  42c888:	cmp	w5, w4
  42c88c:	b.cc	42c804 <ferror@plt+0x29e94>  // b.lo, b.ul, b.last
  42c890:	ubfiz	w2, w0, #9, #7
  42c894:	sub	w9, w0, #0x1
  42c898:	sub	w2, w2, #0x200
  42c89c:	ldrh	w6, [x12, x0, lsl #1]
  42c8a0:	sxtw	x8, w5
  42c8a4:	and	w2, w2, #0xffff
  42c8a8:	and	x5, x4, #0xffff
  42c8ac:	lsl	w9, w11, w9
  42c8b0:	mov	x7, #0x0                   	// #0
  42c8b4:	cmp	x5, x7
  42c8b8:	b.hi	42c9a0 <ferror@plt+0x2a030>  // b.pmore
  42c8bc:	add	x0, x0, #0x1
  42c8c0:	cmp	x0, #0x9
  42c8c4:	b.ne	42c87c <ferror@plt+0x29f0c>  // b.any
  42c8c8:	add	x10, sp, #0x50
  42c8cc:	mov	x6, #0x0                   	// #0
  42c8d0:	mov	w9, #0x1                   	// #1
  42c8d4:	ldrh	w2, [x19, x0, lsl #1]
  42c8d8:	cbz	w2, 42c8f8 <ferror@plt+0x29f88>
  42c8dc:	sub	w11, w0, #0x1
  42c8e0:	mov	w4, #0x0                   	// #0
  42c8e4:	strh	w1, [x6, x10]
  42c8e8:	mov	w7, w4
  42c8ec:	cmp	x0, w4, uxtw
  42c8f0:	b.hi	42ca0c <ferror@plt+0x2a09c>  // b.pmore
  42c8f4:	cbnz	w2, 42c804 <ferror@plt+0x29e94>
  42c8f8:	add	x0, x0, #0x1
  42c8fc:	add	x6, x6, #0x2
  42c900:	cmp	x0, #0x10
  42c904:	b.ne	42c8d4 <ferror@plt+0x29f64>  // b.any
  42c908:	add	x17, sp, #0x80
  42c90c:	add	x18, sp, #0x50
  42c910:	mov	x11, #0x6                   	// #6
  42c914:	mov	x8, #0x0                   	// #0
  42c918:	mov	x0, #0xf                   	// #15
  42c91c:	mov	w12, #0x1                   	// #1
  42c920:	ldrh	w2, [x19, x0, lsl #1]
  42c924:	cbz	w2, 42c974 <ferror@plt+0x2a004>
  42c928:	sub	w1, w0, #0x8
  42c92c:	ubfiz	w15, w0, #9, #7
  42c930:	sub	w13, w15, #0x1, lsl #12
  42c934:	sub	w14, w0, #0x1
  42c938:	ldrh	w9, [x17, x0, lsl #1]
  42c93c:	lsl	w1, w12, w1
  42c940:	ldrh	w7, [x18, x11, lsl #1]
  42c944:	sub	x16, x0, #0x8
  42c948:	and	w13, w13, #0xffff
  42c94c:	and	x2, x2, #0xffff
  42c950:	sxtw	x30, w1
  42c954:	mov	w6, w1
  42c958:	lsl	w14, w12, w14
  42c95c:	mov	x1, #0x0                   	// #0
  42c960:	mov	x21, #0x0                   	// #0
  42c964:	mov	x5, #0x100                 	// #256
  42c968:	mov	x10, #0x0                   	// #0
  42c96c:	cmp	x2, x10
  42c970:	b.hi	42ca58 <ferror@plt+0x2a0e8>  // b.pmore
  42c974:	sub	x0, x0, #0x1
  42c978:	sub	x11, x11, #0x1
  42c97c:	cmp	x0, #0x8
  42c980:	b.ne	42c920 <ferror@plt+0x29fb0>  // b.any
  42c984:	mov	w0, #0x1                   	// #1
  42c988:	b	42c808 <ferror@plt+0x29e98>
  42c98c:	ldrh	w5, [x6, x5]
  42c990:	strh	w2, [x20, x5, lsl #1]
  42c994:	ldrb	w5, [x0, x4]
  42c998:	strh	w2, [x6, x5, lsl #1]
  42c99c:	b	42c838 <ferror@plt+0x29ec8>
  42c9a0:	tst	w6, #0xfe00
  42c9a4:	b.ne	42c804 <ferror@plt+0x29e94>  // b.any
  42c9a8:	orr	w10, w2, w6
  42c9ac:	mov	w4, w1
  42c9b0:	cmp	x4, #0xff
  42c9b4:	b.ls	42c9f0 <ferror@plt+0x2a080>  // b.plast
  42c9b8:	add	x7, x7, #0x1
  42c9bc:	cmp	x7, x5
  42c9c0:	b.cs	42c9cc <ferror@plt+0x2a05c>  // b.hs, b.nlast
  42c9c4:	ubfiz	x6, x6, #1, #16
  42c9c8:	ldrh	w6, [x20, x6]
  42c9cc:	mov	w4, w9
  42c9d0:	tst	w1, w4
  42c9d4:	b.ne	42ca04 <ferror@plt+0x2a094>  // b.any
  42c9d8:	cbz	w4, 42c9e8 <ferror@plt+0x2a078>
  42c9dc:	sub	w10, w4, #0x1
  42c9e0:	and	w1, w10, w1
  42c9e4:	add	w4, w4, w1
  42c9e8:	mov	w1, w4
  42c9ec:	b	42c8b4 <ferror@plt+0x29f44>
  42c9f0:	ldrh	w13, [x3, x4, lsl #1]
  42c9f4:	cbnz	w13, 42c804 <ferror@plt+0x29e94>
  42c9f8:	strh	w10, [x3, x4, lsl #1]
  42c9fc:	add	x4, x4, x8
  42ca00:	b	42c9b0 <ferror@plt+0x2a040>
  42ca04:	lsr	w4, w4, #1
  42ca08:	b	42c9d0 <ferror@plt+0x2a060>
  42ca0c:	lsr	w5, w2, w4
  42ca10:	tbz	w5, #0, 42ca40 <ferror@plt+0x2a0d0>
  42ca14:	sub	w5, w11, w4
  42ca18:	sub	x7, x0, x7
  42ca1c:	mov	w8, #0x0                   	// #0
  42ca20:	lsl	w5, w9, w5
  42ca24:	cmp	x7, w8, uxtw
  42ca28:	b.ls	42ca38 <ferror@plt+0x2a0c8>  // b.plast
  42ca2c:	tst	w1, w5
  42ca30:	b.ne	42ca48 <ferror@plt+0x2a0d8>  // b.any
  42ca34:	add	w1, w1, w5
  42ca38:	lsl	w5, w9, w4
  42ca3c:	bic	w2, w2, w5
  42ca40:	add	w4, w4, #0x1
  42ca44:	b	42c8e8 <ferror@plt+0x29f78>
  42ca48:	bic	w1, w1, w5
  42ca4c:	add	w8, w8, #0x1
  42ca50:	lsr	w5, w5, #1
  42ca54:	b	42ca24 <ferror@plt+0x2a0b4>
  42ca58:	and	x22, x7, #0xff
  42ca5c:	cmp	x5, w7, uxtb
  42ca60:	b.eq	42cafc <ferror@plt+0x2a18c>  // b.none
  42ca64:	ldrh	w1, [x3, x22, lsl #1]
  42ca68:	lsl	x4, x22, #1
  42ca6c:	cbnz	w1, 42cae4 <ferror@plt+0x2a174>
  42ca70:	tst	x8, #0xfffffffffffffe00
  42ca74:	b.ne	42c804 <ferror@plt+0x29e94>  // b.any
  42ca78:	add	w1, w15, w8
  42ca7c:	mov	x21, x8
  42ca80:	add	x8, x30, x8
  42ca84:	strh	w1, [x3, x4]
  42ca88:	mov	x1, x16
  42ca8c:	add	x5, x3, x21, lsl #1
  42ca90:	orr	w24, w13, w9
  42ca94:	lsr	w4, w7, #8
  42ca98:	add	x5, x5, #0x200
  42ca9c:	lsl	w23, w12, w1
  42caa0:	cmp	x23, x4
  42caa4:	b.hi	42cb04 <ferror@plt+0x2a194>  // b.pmore
  42caa8:	add	x10, x10, #0x1
  42caac:	cmp	x10, x2
  42cab0:	b.cs	42cabc <ferror@plt+0x2a14c>  // b.hs, b.nlast
  42cab4:	ubfiz	x9, x9, #1, #16
  42cab8:	ldrh	w9, [x20, x9]
  42cabc:	mov	w4, w14
  42cac0:	tst	w7, w4
  42cac4:	b.ne	42cb18 <ferror@plt+0x2a1a8>  // b.any
  42cac8:	cbz	w4, 42cad8 <ferror@plt+0x2a168>
  42cacc:	sub	w5, w4, #0x1
  42cad0:	and	w7, w5, w7
  42cad4:	add	w4, w4, w7
  42cad8:	mov	x5, x22
  42cadc:	mov	w7, w4
  42cae0:	b	42c96c <ferror@plt+0x29ffc>
  42cae4:	tbz	w1, #12, 42c804 <ferror@plt+0x29e94>
  42cae8:	and	x21, x1, #0x1ff
  42caec:	ubfx	x1, x1, #9, #3
  42caf0:	cmp	x1, x16
  42caf4:	b.cs	42ca8c <ferror@plt+0x2a11c>  // b.hs, b.nlast
  42caf8:	b	42c804 <ferror@plt+0x29e94>
  42cafc:	mov	x22, x5
  42cb00:	b	42ca8c <ferror@plt+0x2a11c>
  42cb04:	ldrh	w25, [x5, x4, lsl #1]
  42cb08:	cbnz	w25, 42c804 <ferror@plt+0x29e94>
  42cb0c:	strh	w24, [x5, x4, lsl #1]
  42cb10:	add	x4, x4, x6
  42cb14:	b	42caa0 <ferror@plt+0x2a130>
  42cb18:	lsr	w4, w4, #1
  42cb1c:	b	42cac0 <ferror@plt+0x2a150>
  42cb20:	ldr	w4, [x3]
  42cb24:	mov	x6, x1
  42cb28:	cmp	w4, #0xe
  42cb2c:	b.hi	42cb64 <ferror@plt+0x2a1f4>  // b.pmore
  42cb30:	ldr	x1, [x0]
  42cb34:	ldr	x7, [x2]
  42cb38:	sub	x6, x6, x1
  42cb3c:	cmp	x6, #0x3
  42cb40:	b.le	42cb6c <ferror@plt+0x2a1fc>
  42cb44:	ldr	w5, [x1], #4
  42cb48:	lsl	x5, x5, x4
  42cb4c:	orr	x5, x5, x7
  42cb50:	prfm	pldl1strm, [x1]
  42cb54:	add	w4, w4, #0x20
  42cb58:	str	x1, [x0]
  42cb5c:	str	x5, [x2]
  42cb60:	str	w4, [x3]
  42cb64:	mov	w0, #0x1                   	// #1
  42cb68:	ret
  42cb6c:	mov	w0, #0x0                   	// #0
  42cb70:	b	42cb68 <ferror@plt+0x2a1f8>
  42cb74:	stp	x29, x30, [sp, #-80]!
  42cb78:	mov	x29, sp
  42cb7c:	str	x1, [sp, #72]
  42cb80:	ldr	w1, [x0, #8]
  42cb84:	stp	x19, x20, [sp, #16]
  42cb88:	mov	x20, x2
  42cb8c:	stp	x21, x22, [sp, #32]
  42cb90:	mov	x21, x4
  42cb94:	str	x23, [sp, #48]
  42cb98:	cbnz	w1, 42cbfc <ferror@plt+0x2a28c>
  42cb9c:	ldr	x19, [x0, #48]
  42cba0:	adrp	x22, 42c000 <ferror@plt+0x29690>
  42cba4:	add	x23, sp, #0x48
  42cba8:	add	x22, x22, #0x798
  42cbac:	cbnz	x19, 42cbdc <ferror@plt+0x2a26c>
  42cbb0:	mov	x4, #0x0                   	// #0
  42cbb4:	mov	x3, #0x0                   	// #0
  42cbb8:	mov	x2, #0x0                   	// #0
  42cbbc:	ldr	x1, [sp, #72]
  42cbc0:	mov	x0, x21
  42cbc4:	blr	x20
  42cbc8:	ldp	x19, x20, [sp, #16]
  42cbcc:	ldp	x21, x22, [sp, #32]
  42cbd0:	ldr	x23, [sp, #48]
  42cbd4:	ldp	x29, x30, [sp], #80
  42cbd8:	ret
  42cbdc:	ldp	x1, x2, [x19, #8]
  42cbe0:	mov	x4, x22
  42cbe4:	mov	x0, x23
  42cbe8:	mov	x3, #0x18                  	// #24
  42cbec:	bl	402560 <bsearch@plt>
  42cbf0:	cbnz	x0, 42cc2c <ferror@plt+0x2a2bc>
  42cbf4:	ldr	x19, [x19]
  42cbf8:	b	42cbac <ferror@plt+0x2a23c>
  42cbfc:	adrp	x22, 42c000 <ferror@plt+0x29690>
  42cc00:	add	x19, x0, #0x30
  42cc04:	add	x22, x22, #0x798
  42cc08:	add	x23, sp, #0x48
  42cc0c:	ldar	x19, [x19]
  42cc10:	cbz	x19, 42cbb0 <ferror@plt+0x2a240>
  42cc14:	ldp	x1, x2, [x19, #8]
  42cc18:	mov	x4, x22
  42cc1c:	mov	x0, x23
  42cc20:	mov	x3, #0x18                  	// #24
  42cc24:	bl	402560 <bsearch@plt>
  42cc28:	cbz	x0, 42cc0c <ferror@plt+0x2a29c>
  42cc2c:	ldp	x2, x3, [x0]
  42cc30:	ldr	x4, [x0, #16]
  42cc34:	b	42cbbc <ferror@plt+0x2a24c>
  42cc38:	stp	x29, x30, [sp, #-144]!
  42cc3c:	mov	x29, sp
  42cc40:	stp	x27, x28, [sp, #80]
  42cc44:	add	x28, x2, x4
  42cc48:	mov	x27, x5
  42cc4c:	stp	x19, x20, [sp, #16]
  42cc50:	mov	x20, x6
  42cc54:	stp	x21, x22, [sp, #32]
  42cc58:	mov	x22, x2
  42cc5c:	mov	x21, x7
  42cc60:	stp	x23, x24, [sp, #48]
  42cc64:	mov	x23, x0
  42cc68:	mov	x0, x5
  42cc6c:	stp	x25, x26, [sp, #64]
  42cc70:	mov	x25, x4
  42cc74:	stp	x3, x1, [sp, #112]
  42cc78:	bl	402330 <strlen@plt>
  42cc7c:	mov	x24, x0
  42cc80:	add	x0, x28, x0
  42cc84:	mov	x3, x21
  42cc88:	add	x26, x0, #0x1
  42cc8c:	mov	x2, x20
  42cc90:	mov	x1, x26
  42cc94:	str	x0, [sp, #104]
  42cc98:	mov	x0, x23
  42cc9c:	bl	42c0c0 <ferror@plt+0x29750>
  42cca0:	cbz	x0, 42cd30 <ferror@plt+0x2a3c0>
  42cca4:	ldr	x8, [sp, #120]
  42cca8:	mov	x19, x0
  42ccac:	mov	x2, x22
  42ccb0:	mov	x1, x8
  42ccb4:	bl	4022e0 <memcpy@plt>
  42ccb8:	ldr	x1, [sp, #112]
  42ccbc:	mov	x2, x25
  42ccc0:	add	x0, x19, x22
  42ccc4:	bl	4022e0 <memcpy@plt>
  42ccc8:	mov	x2, x24
  42cccc:	mov	x1, x27
  42ccd0:	add	x0, x19, x28
  42ccd4:	bl	4022e0 <memcpy@plt>
  42ccd8:	ldr	x0, [sp, #104]
  42ccdc:	add	x3, sp, #0x8c
  42cce0:	mov	x2, x21
  42cce4:	mov	x1, x20
  42cce8:	strb	wzr, [x19, x0]
  42ccec:	mov	x0, x19
  42ccf0:	bl	42c65c <ferror@plt+0x29cec>
  42ccf4:	mov	w22, w0
  42ccf8:	mov	x4, x21
  42ccfc:	mov	x3, x20
  42cd00:	mov	x2, x26
  42cd04:	mov	x1, x19
  42cd08:	mov	x0, x23
  42cd0c:	bl	42c004 <ferror@plt+0x29694>
  42cd10:	mov	w0, w22
  42cd14:	ldp	x19, x20, [sp, #16]
  42cd18:	ldp	x21, x22, [sp, #32]
  42cd1c:	ldp	x23, x24, [sp, #48]
  42cd20:	ldp	x25, x26, [sp, #64]
  42cd24:	ldp	x27, x28, [sp, #80]
  42cd28:	ldp	x29, x30, [sp], #144
  42cd2c:	ret
  42cd30:	mov	w22, #0xffffffff            	// #-1
  42cd34:	b	42cd10 <ferror@plt+0x2a3a0>
  42cd38:	stp	x29, x30, [sp, #-256]!
  42cd3c:	mov	x29, sp
  42cd40:	stp	x21, x22, [sp, #32]
  42cd44:	mov	x21, x3
  42cd48:	mov	x22, x4
  42cd4c:	stp	x25, x26, [sp, #64]
  42cd50:	mov	x25, x1
  42cd54:	mov	x26, x2
  42cd58:	stp	x19, x20, [sp, #16]
  42cd5c:	mov	x20, x0
  42cd60:	add	x0, sp, #0x80
  42cd64:	stp	x23, x24, [sp, #48]
  42cd68:	mov	x24, #0x0                   	// #0
  42cd6c:	mov	x23, #0x0                   	// #0
  42cd70:	stp	x27, x28, [sp, #80]
  42cd74:	str	x0, [sp, #112]
  42cd78:	ldr	x1, [sp, #112]
  42cd7c:	mov	x0, x25
  42cd80:	bl	44a838 <_obstack_memory_used@@Base+0x109d0>
  42cd84:	tbnz	w0, #31, 42cde4 <ferror@plt+0x2a474>
  42cd88:	ldr	w0, [sp, #144]
  42cd8c:	and	w0, w0, #0xf000
  42cd90:	cmp	w0, #0xa, lsl #12
  42cd94:	b.ne	42cde4 <ferror@plt+0x2a474>  // b.any
  42cd98:	mov	x27, #0x80                  	// #128
  42cd9c:	mov	x3, x22
  42cda0:	mov	x2, x21
  42cda4:	mov	x1, x27
  42cda8:	mov	x0, x20
  42cdac:	bl	42c0c0 <ferror@plt+0x29750>
  42cdb0:	mov	x28, x0
  42cdb4:	cbz	x0, 42cde4 <ferror@plt+0x2a474>
  42cdb8:	mov	x1, x0
  42cdbc:	mov	x2, x27
  42cdc0:	mov	x0, x25
  42cdc4:	bl	4023b0 <readlink@plt>
  42cdc8:	tbz	x0, #63, 42ced0 <ferror@plt+0x2a560>
  42cdcc:	mov	x4, x22
  42cdd0:	mov	x3, x21
  42cdd4:	mov	x2, x27
  42cdd8:	mov	x1, x28
  42cddc:	mov	x0, x20
  42cde0:	bl	42c004 <ferror@plt+0x29694>
  42cde4:	mov	x0, x25
  42cde8:	mov	w1, #0x2f                  	// #47
  42cdec:	bl	402610 <strrchr@plt>
  42cdf0:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x17198>
  42cdf4:	cbz	x0, 42cfe0 <ferror@plt+0x2a670>
  42cdf8:	add	x0, x0, #0x1
  42cdfc:	sub	x27, x0, x25
  42ce00:	mov	x7, x22
  42ce04:	mov	x6, x21
  42ce08:	mov	x5, x26
  42ce0c:	add	x3, x3, #0xaab
  42ce10:	mov	x2, x27
  42ce14:	mov	x1, x25
  42ce18:	mov	x0, x20
  42ce1c:	mov	x4, #0x0                   	// #0
  42ce20:	bl	42cc38 <ferror@plt+0x2a2c8>
  42ce24:	mov	w19, w0
  42ce28:	tbz	w0, #31, 42ce8c <ferror@plt+0x2a51c>
  42ce2c:	mov	x7, x22
  42ce30:	mov	x6, x21
  42ce34:	mov	x5, x26
  42ce38:	mov	x2, x27
  42ce3c:	mov	x1, x25
  42ce40:	mov	x0, x20
  42ce44:	mov	x4, #0x7                   	// #7
  42ce48:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x1a198>
  42ce4c:	add	x3, x3, #0x9e8
  42ce50:	bl	42cc38 <ferror@plt+0x2a2c8>
  42ce54:	mov	w19, w0
  42ce58:	tbz	w0, #31, 42ce8c <ferror@plt+0x2a51c>
  42ce5c:	mov	x7, x22
  42ce60:	mov	x6, x21
  42ce64:	mov	x5, x26
  42ce68:	mov	x4, x27
  42ce6c:	mov	x3, x25
  42ce70:	mov	x0, x20
  42ce74:	mov	x2, #0xf                   	// #15
  42ce78:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42ce7c:	add	x1, x1, #0x9f0
  42ce80:	bl	42cc38 <ferror@plt+0x2a2c8>
  42ce84:	cmp	w0, #0x0
  42ce88:	csinv	w19, w0, wzr, ge  // ge = tcont
  42ce8c:	cmp	x23, #0x0
  42ce90:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  42ce94:	b.eq	42ceb0 <ferror@plt+0x2a540>  // b.none
  42ce98:	mov	x4, x22
  42ce9c:	mov	x3, x21
  42cea0:	mov	x2, x24
  42cea4:	mov	x1, x23
  42cea8:	mov	x0, x20
  42ceac:	bl	42c004 <ferror@plt+0x29694>
  42ceb0:	mov	w0, w19
  42ceb4:	ldp	x19, x20, [sp, #16]
  42ceb8:	ldp	x21, x22, [sp, #32]
  42cebc:	ldp	x23, x24, [sp, #48]
  42cec0:	ldp	x25, x26, [sp, #64]
  42cec4:	ldp	x27, x28, [sp, #80]
  42cec8:	ldp	x29, x30, [sp], #256
  42cecc:	ret
  42ced0:	sub	x1, x27, #0x1
  42ced4:	cmp	x1, x0
  42ced8:	b.ls	42cf18 <ferror@plt+0x2a5a8>  // b.plast
  42cedc:	strb	wzr, [x28, x0]
  42cee0:	ldrb	w0, [x28]
  42cee4:	cmp	w0, #0x2f
  42cee8:	b.ne	42cf38 <ferror@plt+0x2a5c8>  // b.any
  42ceec:	cbz	x23, 42cf08 <ferror@plt+0x2a598>
  42cef0:	mov	x4, x22
  42cef4:	mov	x3, x21
  42cef8:	mov	x2, x24
  42cefc:	mov	x1, x23
  42cf00:	mov	x0, x20
  42cf04:	bl	42c004 <ferror@plt+0x29694>
  42cf08:	mov	x24, x27
  42cf0c:	mov	x23, x28
  42cf10:	mov	x25, x28
  42cf14:	b	42cd78 <ferror@plt+0x2a408>
  42cf18:	mov	x2, x27
  42cf1c:	mov	x4, x22
  42cf20:	mov	x3, x21
  42cf24:	mov	x1, x28
  42cf28:	mov	x0, x20
  42cf2c:	lsl	x27, x27, #1
  42cf30:	bl	42c004 <ferror@plt+0x29694>
  42cf34:	b	42cd9c <ferror@plt+0x2a42c>
  42cf38:	mov	x0, x25
  42cf3c:	mov	w1, #0x2f                  	// #47
  42cf40:	bl	402610 <strrchr@plt>
  42cf44:	cbz	x0, 42ceec <ferror@plt+0x2a57c>
  42cf48:	add	x0, x0, #0x1
  42cf4c:	sub	x19, x0, x25
  42cf50:	mov	x0, x28
  42cf54:	bl	402330 <strlen@plt>
  42cf58:	add	x1, x19, #0x1
  42cf5c:	mov	x3, x22
  42cf60:	add	x0, x1, x0
  42cf64:	mov	x2, x21
  42cf68:	mov	x1, x0
  42cf6c:	str	x0, [sp, #104]
  42cf70:	mov	x0, x20
  42cf74:	bl	42c0c0 <ferror@plt+0x29750>
  42cf78:	str	x0, [sp, #120]
  42cf7c:	cbz	x0, 42cfec <ferror@plt+0x2a67c>
  42cf80:	mov	x2, x19
  42cf84:	mov	x1, x25
  42cf88:	bl	4022e0 <memcpy@plt>
  42cf8c:	mov	x0, x28
  42cf90:	bl	402330 <strlen@plt>
  42cf94:	mov	x2, x0
  42cf98:	ldr	x7, [sp, #120]
  42cf9c:	mov	x1, x28
  42cfa0:	add	x19, x7, x19
  42cfa4:	mov	x0, x19
  42cfa8:	bl	4022e0 <memcpy@plt>
  42cfac:	mov	x0, x28
  42cfb0:	bl	402330 <strlen@plt>
  42cfb4:	strb	wzr, [x19, x0]
  42cfb8:	mov	x2, x27
  42cfbc:	mov	x1, x28
  42cfc0:	mov	x4, x22
  42cfc4:	mov	x3, x21
  42cfc8:	mov	x0, x20
  42cfcc:	bl	42c004 <ferror@plt+0x29694>
  42cfd0:	ldr	x7, [sp, #120]
  42cfd4:	ldr	x27, [sp, #104]
  42cfd8:	mov	x28, x7
  42cfdc:	b	42ceec <ferror@plt+0x2a57c>
  42cfe0:	add	x25, x3, #0xaab
  42cfe4:	mov	x27, #0x0                   	// #0
  42cfe8:	b	42ce00 <ferror@plt+0x2a490>
  42cfec:	mov	w19, #0xffffffff            	// #-1
  42cff0:	b	42ce8c <ferror@plt+0x2a51c>
  42cff4:	stp	x29, x30, [sp, #-240]!
  42cff8:	mov	x29, sp
  42cffc:	stp	x21, x22, [sp, #32]
  42d000:	add	x21, x0, x1
  42d004:	mov	x22, x2
  42d008:	stp	x0, x1, [sp, #128]
  42d00c:	str	x0, [sp, #200]
  42d010:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  42d014:	add	x0, x0, #0xbf4
  42d018:	stp	x19, x20, [sp, #16]
  42d01c:	mov	x19, x3
  42d020:	mov	x20, x3
  42d024:	stp	x25, x26, [sp, #64]
  42d028:	mov	x26, x4
  42d02c:	stp	x27, x28, [sp, #80]
  42d030:	add	x27, x3, x4
  42d034:	str	x0, [sp, #144]
  42d038:	add	x0, x0, #0x200
  42d03c:	stp	x23, x24, [sp, #48]
  42d040:	str	x0, [sp, #152]
  42d044:	add	x0, sp, #0xd8
  42d048:	str	x0, [sp, #96]
  42d04c:	ldr	x0, [sp, #200]
  42d050:	sub	x1, x21, x0
  42d054:	cmp	x1, #0x4
  42d058:	b.gt	42d084 <ferror@plt+0x2a714>
  42d05c:	cmp	x27, x20
  42d060:	b.eq	42da88 <ferror@plt+0x2b118>  // b.none
  42d064:	mov	w0, #0x0                   	// #0
  42d068:	ldp	x19, x20, [sp, #16]
  42d06c:	ldp	x21, x22, [sp, #32]
  42d070:	ldp	x23, x24, [sp, #48]
  42d074:	ldp	x25, x26, [sp, #64]
  42d078:	ldp	x27, x28, [sp, #80]
  42d07c:	ldp	x29, x30, [sp], #240
  42d080:	ret
  42d084:	ldrb	w1, [x0]
  42d088:	and	w2, w1, #0xf
  42d08c:	cmp	w2, #0x8
  42d090:	b.ne	42d064 <ferror@plt+0x2a6f4>  // b.any
  42d094:	cmp	w1, #0x7f
  42d098:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d09c:	ldrb	w2, [x0, #1]
  42d0a0:	ldrh	w1, [x0]
  42d0a4:	rev16	w1, w1
  42d0a8:	tbnz	w2, #5, 42d064 <ferror@plt+0x2a6f4>
  42d0ac:	and	x1, x1, #0xffff
  42d0b0:	mov	x3, #0x1f                  	// #31
  42d0b4:	udiv	x2, x1, x3
  42d0b8:	msub	x1, x2, x3, x1
  42d0bc:	cbnz	x1, 42d064 <ferror@plt+0x2a6f4>
  42d0c0:	add	x0, x0, #0x2
  42d0c4:	str	wzr, [sp, #196]
  42d0c8:	stp	x0, xzr, [sp, #200]
  42d0cc:	ldr	x0, [sp, #200]
  42d0d0:	tst	x0, #0x3
  42d0d4:	b.ne	42d1e4 <ferror@plt+0x2a874>  // b.any
  42d0d8:	add	x23, sp, #0xc4
  42d0dc:	add	x24, sp, #0xd0
  42d0e0:	add	x25, sp, #0xc8
  42d0e4:	mov	x3, x23
  42d0e8:	mov	x2, x24
  42d0ec:	mov	x1, x21
  42d0f0:	mov	x0, x25
  42d0f4:	bl	42cb20 <ferror@plt+0x2a1b0>
  42d0f8:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d0fc:	ldr	x0, [sp, #208]
  42d100:	str	x0, [sp, #104]
  42d104:	ldr	w0, [sp, #104]
  42d108:	ubfx	w1, w0, #1, #2
  42d10c:	ldr	x0, [sp, #104]
  42d110:	cmp	w1, #0x3
  42d114:	lsr	x0, x0, #3
  42d118:	str	x0, [sp, #208]
  42d11c:	ldr	w0, [sp, #196]
  42d120:	sub	w0, w0, #0x3
  42d124:	str	w0, [sp, #196]
  42d128:	b.eq	42d064 <ferror@plt+0x2a6f4>  // b.none
  42d12c:	cbnz	w1, 42d238 <ferror@plt+0x2a8c8>
  42d130:	ldr	x1, [sp, #200]
  42d134:	mov	w2, #0x0                   	// #0
  42d138:	mov	x3, x1
  42d13c:	cmp	w0, #0x8
  42d140:	sub	x1, x1, #0x1
  42d144:	b.hi	42d208 <ferror@plt+0x2a898>  // b.pmore
  42d148:	cbz	w2, 42d150 <ferror@plt+0x2a7e0>
  42d14c:	str	x3, [sp, #200]
  42d150:	ldr	x1, [sp, #200]
  42d154:	str	wzr, [sp, #196]
  42d158:	str	xzr, [sp, #208]
  42d15c:	sub	x0, x21, x1
  42d160:	cmp	x0, #0x3
  42d164:	b.le	42d064 <ferror@plt+0x2a6f4>
  42d168:	ldrb	w0, [x1]
  42d16c:	add	x1, x1, #0x4
  42d170:	ldurb	w2, [x1, #-3]
  42d174:	ldurb	w3, [x1, #-2]
  42d178:	orr	w2, w0, w2, lsl #8
  42d17c:	ldurb	w0, [x1, #-1]
  42d180:	str	x1, [sp, #200]
  42d184:	orr	w0, w3, w0, lsl #8
  42d188:	mvn	w0, w0
  42d18c:	cmp	w2, w0, uxth
  42d190:	b.ne	42d064 <ferror@plt+0x2a6f4>  // b.any
  42d194:	sub	x0, x21, x1
  42d198:	cmp	w2, w0
  42d19c:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d1a0:	sub	x0, x27, x20
  42d1a4:	cmp	w2, w0
  42d1a8:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d1ac:	and	x23, x2, #0xffff
  42d1b0:	mov	x0, x20
  42d1b4:	mov	x2, x23
  42d1b8:	bl	4022e0 <memcpy@plt>
  42d1bc:	ldr	x2, [sp, #200]
  42d1c0:	add	x20, x20, x23
  42d1c4:	add	x2, x2, x23
  42d1c8:	str	x2, [sp, #200]
  42d1cc:	ldr	x0, [sp, #200]
  42d1d0:	tst	x0, #0x3
  42d1d4:	b.ne	42d214 <ferror@plt+0x2a8a4>  // b.any
  42d1d8:	ldr	x0, [sp, #104]
  42d1dc:	tbz	w0, #0, 42d0d8 <ferror@plt+0x2a768>
  42d1e0:	b	42d04c <ferror@plt+0x2a6dc>
  42d1e4:	ldrb	w2, [x0], #1
  42d1e8:	ldr	w1, [sp, #196]
  42d1ec:	lsl	x3, x2, x1
  42d1f0:	add	w1, w1, #0x8
  42d1f4:	ldr	x2, [sp, #208]
  42d1f8:	str	w1, [sp, #196]
  42d1fc:	orr	x2, x2, x3
  42d200:	stp	x0, x2, [sp, #200]
  42d204:	b	42d0cc <ferror@plt+0x2a75c>
  42d208:	sub	w0, w0, #0x8
  42d20c:	mov	w2, #0x1                   	// #1
  42d210:	b	42d138 <ferror@plt+0x2a7c8>
  42d214:	ldrb	w2, [x0], #1
  42d218:	ldr	w1, [sp, #196]
  42d21c:	lsl	x3, x2, x1
  42d220:	add	w1, w1, #0x8
  42d224:	ldr	x2, [sp, #208]
  42d228:	str	w1, [sp, #196]
  42d22c:	orr	x2, x2, x3
  42d230:	stp	x0, x2, [sp, #200]
  42d234:	b	42d1cc <ferror@plt+0x2a85c>
  42d238:	cmp	w1, #0x1
  42d23c:	b.eq	42d7e4 <ferror@plt+0x2ae74>  // b.none
  42d240:	mov	x1, x21
  42d244:	mov	x0, x25
  42d248:	bl	42cb20 <ferror@plt+0x2a1b0>
  42d24c:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d250:	ldr	x0, [sp, #208]
  42d254:	and	w28, w0, #0x1f
  42d258:	ubfx	w1, w0, #5, #5
  42d25c:	ubfx	w8, w0, #10, #4
  42d260:	lsr	x0, x0, #14
  42d264:	str	x0, [sp, #208]
  42d268:	ldr	w0, [sp, #196]
  42d26c:	add	w1, w1, #0x1
  42d270:	add	w28, w28, #0x101
  42d274:	str	w1, [sp, #112]
  42d278:	sub	w0, w0, #0xe
  42d27c:	str	w0, [sp, #196]
  42d280:	cmp	w28, #0x11e
  42d284:	mov	w0, w1
  42d288:	add	w8, w8, #0x4
  42d28c:	ccmp	w0, #0x1e, #0x2, ls  // ls = plast
  42d290:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d294:	ldr	x0, [sp, #96]
  42d298:	mov	x1, x21
  42d29c:	stp	xzr, xzr, [x0]
  42d2a0:	strh	wzr, [x0, #16]
  42d2a4:	strb	wzr, [x0, #18]
  42d2a8:	mov	x0, x25
  42d2ac:	bl	42cb20 <ferror@plt+0x2a1b0>
  42d2b0:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d2b4:	ldr	x0, [sp, #208]
  42d2b8:	cmp	w8, #0x4
  42d2bc:	and	w1, w0, #0x7
  42d2c0:	strb	w1, [sp, #232]
  42d2c4:	ubfx	w1, w0, #3, #3
  42d2c8:	strb	w1, [sp, #233]
  42d2cc:	ubfx	w1, w0, #6, #3
  42d2d0:	strb	w1, [sp, #234]
  42d2d4:	ubfx	w1, w0, #9, #3
  42d2d8:	strb	w1, [sp, #216]
  42d2dc:	ldr	w1, [sp, #196]
  42d2e0:	lsr	x2, x0, #12
  42d2e4:	str	x2, [sp, #208]
  42d2e8:	sub	w3, w1, #0xc
  42d2ec:	str	w3, [sp, #196]
  42d2f0:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d2f4:	and	w2, w2, #0x7
  42d2f8:	lsr	x0, x0, #15
  42d2fc:	sub	w1, w1, #0xf
  42d300:	str	w1, [sp, #196]
  42d304:	str	x0, [sp, #208]
  42d308:	cmp	w8, #0x5
  42d30c:	strb	w2, [sp, #224]
  42d310:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d314:	mov	x3, x23
  42d318:	mov	x2, x24
  42d31c:	mov	x1, x21
  42d320:	mov	x0, x25
  42d324:	bl	42cb20 <ferror@plt+0x2a1b0>
  42d328:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d32c:	ldr	x0, [sp, #208]
  42d330:	cmp	w8, #0x6
  42d334:	and	w1, w0, #0x7
  42d338:	strb	w1, [sp, #223]
  42d33c:	ldr	w1, [sp, #196]
  42d340:	lsr	x2, x0, #3
  42d344:	str	x2, [sp, #208]
  42d348:	sub	w3, w1, #0x3
  42d34c:	str	w3, [sp, #196]
  42d350:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d354:	and	w2, w2, #0x7
  42d358:	sub	w3, w1, #0x6
  42d35c:	str	w3, [sp, #196]
  42d360:	cmp	w8, #0x7
  42d364:	strb	w2, [sp, #225]
  42d368:	lsr	x2, x0, #6
  42d36c:	str	x2, [sp, #208]
  42d370:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d374:	and	w2, w2, #0x7
  42d378:	sub	w3, w1, #0x9
  42d37c:	str	w3, [sp, #196]
  42d380:	cmp	w8, #0x8
  42d384:	strb	w2, [sp, #222]
  42d388:	lsr	x2, x0, #9
  42d38c:	str	x2, [sp, #208]
  42d390:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d394:	and	w2, w2, #0x7
  42d398:	sub	w3, w1, #0xc
  42d39c:	str	w3, [sp, #196]
  42d3a0:	cmp	w8, #0x9
  42d3a4:	strb	w2, [sp, #226]
  42d3a8:	lsr	x2, x0, #12
  42d3ac:	str	x2, [sp, #208]
  42d3b0:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d3b4:	and	w2, w2, #0x7
  42d3b8:	lsr	x0, x0, #15
  42d3bc:	sub	w1, w1, #0xf
  42d3c0:	str	w1, [sp, #196]
  42d3c4:	str	x0, [sp, #208]
  42d3c8:	cmp	w8, #0xa
  42d3cc:	strb	w2, [sp, #221]
  42d3d0:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d3d4:	mov	x3, x23
  42d3d8:	mov	x2, x24
  42d3dc:	mov	x1, x21
  42d3e0:	mov	x0, x25
  42d3e4:	bl	42cb20 <ferror@plt+0x2a1b0>
  42d3e8:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d3ec:	ldr	x0, [sp, #208]
  42d3f0:	cmp	w8, #0xb
  42d3f4:	and	w1, w0, #0x7
  42d3f8:	strb	w1, [sp, #227]
  42d3fc:	ldr	w1, [sp, #196]
  42d400:	lsr	x2, x0, #3
  42d404:	str	x2, [sp, #208]
  42d408:	sub	w3, w1, #0x3
  42d40c:	str	w3, [sp, #196]
  42d410:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d414:	and	w2, w2, #0x7
  42d418:	sub	w3, w1, #0x6
  42d41c:	str	w3, [sp, #196]
  42d420:	cmp	w8, #0xc
  42d424:	strb	w2, [sp, #220]
  42d428:	lsr	x2, x0, #6
  42d42c:	str	x2, [sp, #208]
  42d430:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d434:	and	w2, w2, #0x7
  42d438:	sub	w3, w1, #0x9
  42d43c:	str	w3, [sp, #196]
  42d440:	cmp	w8, #0xd
  42d444:	strb	w2, [sp, #228]
  42d448:	lsr	x2, x0, #9
  42d44c:	str	x2, [sp, #208]
  42d450:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d454:	and	w2, w2, #0x7
  42d458:	sub	w3, w1, #0xc
  42d45c:	str	w3, [sp, #196]
  42d460:	cmp	w8, #0xe
  42d464:	strb	w2, [sp, #219]
  42d468:	lsr	x2, x0, #12
  42d46c:	str	x2, [sp, #208]
  42d470:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d474:	and	w2, w2, #0x7
  42d478:	lsr	x0, x0, #15
  42d47c:	sub	w1, w1, #0xf
  42d480:	str	w1, [sp, #196]
  42d484:	str	x0, [sp, #208]
  42d488:	cmp	w8, #0xf
  42d48c:	strb	w2, [sp, #229]
  42d490:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d494:	mov	x3, x23
  42d498:	mov	x2, x24
  42d49c:	mov	x1, x21
  42d4a0:	mov	x0, x25
  42d4a4:	bl	42cb20 <ferror@plt+0x2a1b0>
  42d4a8:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d4ac:	ldr	x0, [sp, #208]
  42d4b0:	cmp	w8, #0x10
  42d4b4:	and	w1, w0, #0x7
  42d4b8:	strb	w1, [sp, #218]
  42d4bc:	ldr	w1, [sp, #196]
  42d4c0:	lsr	x2, x0, #3
  42d4c4:	str	x2, [sp, #208]
  42d4c8:	sub	w3, w1, #0x3
  42d4cc:	str	w3, [sp, #196]
  42d4d0:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d4d4:	and	w2, w2, #0x7
  42d4d8:	sub	w3, w1, #0x6
  42d4dc:	str	w3, [sp, #196]
  42d4e0:	cmp	w8, #0x11
  42d4e4:	strb	w2, [sp, #230]
  42d4e8:	lsr	x2, x0, #6
  42d4ec:	str	x2, [sp, #208]
  42d4f0:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d4f4:	and	w2, w2, #0x7
  42d4f8:	sub	w3, w1, #0x9
  42d4fc:	str	w3, [sp, #196]
  42d500:	cmp	w8, #0x12
  42d504:	strb	w2, [sp, #217]
  42d508:	lsr	x2, x0, #9
  42d50c:	str	x2, [sp, #208]
  42d510:	b.eq	42d52c <ferror@plt+0x2abbc>  // b.none
  42d514:	and	w2, w2, #0x7
  42d518:	lsr	x0, x0, #12
  42d51c:	sub	w1, w1, #0xc
  42d520:	str	w1, [sp, #196]
  42d524:	str	x0, [sp, #208]
  42d528:	strb	w2, [sp, #231]
  42d52c:	ldr	x0, [sp, #96]
  42d530:	mov	x3, x22
  42d534:	mov	x2, x22
  42d538:	mov	x1, #0x13                  	// #19
  42d53c:	bl	42c7c4 <ferror@plt+0x29e54>
  42d540:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d544:	mov	x0, #0x1278                	// #4728
  42d548:	add	x6, x22, x0
  42d54c:	ldr	w0, [sp, #112]
  42d550:	mov	x4, x6
  42d554:	str	x0, [sp, #120]
  42d558:	add	x5, x28, x0
  42d55c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  42d560:	add	x5, x6, x5
  42d564:	add	x0, x0, #0xbec
  42d568:	str	x0, [sp, #112]
  42d56c:	cmp	x5, x4
  42d570:	b.hi	42d634 <ferror@plt+0x2acc4>  // b.pmore
  42d574:	add	x0, x22, #0x1, lsl #12
  42d578:	ldrb	w0, [x0, #888]
  42d57c:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d580:	mov	x3, x22
  42d584:	mov	x2, x22
  42d588:	mov	x1, x28
  42d58c:	mov	x0, x6
  42d590:	str	x6, [sp, #160]
  42d594:	bl	42c7c4 <ferror@plt+0x29e54>
  42d598:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d59c:	ldr	x1, [sp, #120]
  42d5a0:	add	x0, x22, #0x800
  42d5a4:	ldr	x6, [sp, #160]
  42d5a8:	mov	x3, x0
  42d5ac:	mov	x2, x22
  42d5b0:	str	x0, [sp, #112]
  42d5b4:	add	x0, x6, x28
  42d5b8:	bl	42c7c4 <ferror@plt+0x29e54>
  42d5bc:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d5c0:	str	x22, [sp, #120]
  42d5c4:	mov	x3, x23
  42d5c8:	mov	x2, x24
  42d5cc:	mov	x1, x21
  42d5d0:	mov	x0, x25
  42d5d4:	bl	42cb20 <ferror@plt+0x2a1b0>
  42d5d8:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d5dc:	ldr	x3, [sp, #208]
  42d5e0:	ldr	x1, [sp, #120]
  42d5e4:	and	x0, x3, #0xff
  42d5e8:	ldrh	w2, [x1, x0, lsl #1]
  42d5ec:	ldr	w0, [sp, #196]
  42d5f0:	and	w4, w2, #0x1ff
  42d5f4:	ubfx	x1, x2, #9, #3
  42d5f8:	tbnz	w2, #12, 42d7f8 <ferror@plt+0x2ae88>
  42d5fc:	add	w2, w1, #0x1
  42d600:	mov	w28, w4
  42d604:	sub	w0, w0, #0x1
  42d608:	lsr	x3, x3, x2
  42d60c:	str	x3, [sp, #208]
  42d610:	sub	w0, w0, w1
  42d614:	str	w0, [sp, #196]
  42d618:	cmp	w28, #0xff
  42d61c:	b.hi	42d834 <ferror@plt+0x2aec4>  // b.pmore
  42d620:	cmp	x27, x20
  42d624:	b.eq	42d064 <ferror@plt+0x2a6f4>  // b.none
  42d628:	strb	w28, [x20], #1
  42d62c:	prfm	pstl1keep, [x20]
  42d630:	b	42d5c4 <ferror@plt+0x2ac54>
  42d634:	mov	x3, x23
  42d638:	mov	x2, x24
  42d63c:	mov	x1, x21
  42d640:	mov	x0, x25
  42d644:	stp	x6, x5, [sp, #160]
  42d648:	str	x4, [sp, #176]
  42d64c:	bl	42cb20 <ferror@plt+0x2a1b0>
  42d650:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d654:	ldr	x0, [sp, #208]
  42d658:	and	x1, x0, #0xff
  42d65c:	ldrh	w3, [x22, x1, lsl #1]
  42d660:	tbnz	w3, #12, 42d064 <ferror@plt+0x2a6f4>
  42d664:	ubfx	x2, x3, #9, #3
  42d668:	tst	w3, #0x1f0
  42d66c:	add	w1, w2, #0x1
  42d670:	ldp	x6, x5, [sp, #160]
  42d674:	lsr	x0, x0, x1
  42d678:	ldr	w1, [sp, #196]
  42d67c:	str	x0, [sp, #208]
  42d680:	sub	w1, w1, w2
  42d684:	sub	w2, w1, #0x1
  42d688:	str	w2, [sp, #196]
  42d68c:	and	w2, w3, #0x1ff
  42d690:	ldr	x4, [sp, #176]
  42d694:	b.ne	42d6a0 <ferror@plt+0x2ad30>  // b.any
  42d698:	strb	w2, [x4], #1
  42d69c:	b	42d56c <ferror@plt+0x2abfc>
  42d6a0:	cmp	w2, #0x10
  42d6a4:	b.ne	42d714 <ferror@plt+0x2ada4>  // b.any
  42d6a8:	cmp	x6, x4
  42d6ac:	b.eq	42d064 <ferror@plt+0x2a6f4>  // b.none
  42d6b0:	and	w2, w0, #0x3
  42d6b4:	sub	w1, w1, #0x3
  42d6b8:	lsr	x0, x0, #2
  42d6bc:	str	w1, [sp, #196]
  42d6c0:	str	x0, [sp, #208]
  42d6c4:	add	w2, w2, #0x3
  42d6c8:	sub	x0, x5, x4
  42d6cc:	cmp	w2, w0
  42d6d0:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d6d4:	ldurb	w0, [x4, #-1]
  42d6d8:	cmp	w2, #0x5
  42d6dc:	b.eq	42d70c <ferror@plt+0x2ad9c>  // b.none
  42d6e0:	cmp	w2, #0x6
  42d6e4:	b.eq	42d708 <ferror@plt+0x2ad98>  // b.none
  42d6e8:	cmp	w2, #0x4
  42d6ec:	b.ne	42d6f4 <ferror@plt+0x2ad84>  // b.any
  42d6f0:	strb	w0, [x4], #1
  42d6f4:	add	x4, x4, #0x3
  42d6f8:	sturb	w0, [x4, #-3]
  42d6fc:	sturb	w0, [x4, #-2]
  42d700:	sturb	w0, [x4, #-1]
  42d704:	b	42d56c <ferror@plt+0x2abfc>
  42d708:	strb	w0, [x4], #1
  42d70c:	strb	w0, [x4], #1
  42d710:	b	42d6f0 <ferror@plt+0x2ad80>
  42d714:	cmp	w2, #0x11
  42d718:	b.ne	42d790 <ferror@plt+0x2ae20>  // b.any
  42d71c:	and	w2, w0, #0x7
  42d720:	sub	w1, w1, #0x4
  42d724:	lsr	x0, x0, #3
  42d728:	str	w1, [sp, #196]
  42d72c:	str	x0, [sp, #208]
  42d730:	add	w3, w2, #0x3
  42d734:	sub	x0, x5, x4
  42d738:	cmp	w3, w0
  42d73c:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d740:	sub	w0, w2, #0x1
  42d744:	cmp	w0, #0x6
  42d748:	b.hi	42d77c <ferror@plt+0x2ae0c>  // b.pmore
  42d74c:	ldr	x1, [sp, #112]
  42d750:	ldrb	w0, [x1, w0, uxtw]
  42d754:	adr	x1, 42d760 <ferror@plt+0x2adf0>
  42d758:	add	x0, x1, w0, sxtb #2
  42d75c:	br	x0
  42d760:	strb	wzr, [x4], #1
  42d764:	strb	wzr, [x4], #1
  42d768:	strb	wzr, [x4], #1
  42d76c:	strb	wzr, [x4], #1
  42d770:	strb	wzr, [x4], #1
  42d774:	strb	wzr, [x4], #1
  42d778:	strb	wzr, [x4], #1
  42d77c:	mov	x0, x4
  42d780:	strh	wzr, [x0], #3
  42d784:	strb	wzr, [x4, #2]
  42d788:	mov	x4, x0
  42d78c:	b	42d56c <ferror@plt+0x2abfc>
  42d790:	str	x6, [sp, #176]
  42d794:	cmp	w2, #0x12
  42d798:	b.ne	42d064 <ferror@plt+0x2a6f4>  // b.any
  42d79c:	and	w2, w0, #0x7f
  42d7a0:	sub	w1, w1, #0x8
  42d7a4:	lsr	x0, x0, #7
  42d7a8:	str	x5, [sp, #168]
  42d7ac:	str	w1, [sp, #196]
  42d7b0:	add	w2, w2, #0xb
  42d7b4:	str	x0, [sp, #208]
  42d7b8:	sub	x0, x5, x4
  42d7bc:	cmp	w2, w0
  42d7c0:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d7c4:	mov	x0, x4
  42d7c8:	mov	w1, #0x0                   	// #0
  42d7cc:	str	x2, [sp, #160]
  42d7d0:	bl	402530 <memset@plt>
  42d7d4:	ldp	x2, x5, [sp, #160]
  42d7d8:	ldr	x6, [sp, #176]
  42d7dc:	add	x4, x0, x2
  42d7e0:	b	42d56c <ferror@plt+0x2abfc>
  42d7e4:	ldr	x0, [sp, #144]
  42d7e8:	str	x0, [sp, #112]
  42d7ec:	ldr	x0, [sp, #152]
  42d7f0:	str	x0, [sp, #120]
  42d7f4:	b	42d5c4 <ferror@plt+0x2ac54>
  42d7f8:	mov	w2, #0x1                   	// #1
  42d7fc:	add	w4, w4, #0x100
  42d800:	lsl	w1, w2, w1
  42d804:	sub	w1, w1, #0x1
  42d808:	and	x1, x1, x3, lsr #8
  42d80c:	sub	w0, w0, #0x8
  42d810:	ldr	x2, [sp, #120]
  42d814:	add	x1, x1, w4, sxtw
  42d818:	ldrh	w4, [x2, x1, lsl #1]
  42d81c:	and	w28, w4, #0x1ff
  42d820:	ubfx	x1, x4, #9, #3
  42d824:	add	w2, w1, #0x8
  42d828:	lsr	x3, x3, x2
  42d82c:	str	x3, [sp, #208]
  42d830:	b	42d610 <ferror@plt+0x2aca0>
  42d834:	cmp	w28, #0x100
  42d838:	b.eq	42d1d8 <ferror@plt+0x2a868>  // b.none
  42d83c:	cmp	w28, #0x108
  42d840:	b.hi	42d8cc <ferror@plt+0x2af5c>  // b.pmore
  42d844:	sub	w28, w28, #0xfe
  42d848:	mov	x3, x23
  42d84c:	mov	x2, x24
  42d850:	mov	x1, x21
  42d854:	mov	x0, x25
  42d858:	bl	42cb20 <ferror@plt+0x2a1b0>
  42d85c:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d860:	ldr	x2, [sp, #208]
  42d864:	ldr	x1, [sp, #112]
  42d868:	and	x0, x2, #0xff
  42d86c:	ldrh	w5, [x1, x0, lsl #1]
  42d870:	ldr	w0, [sp, #196]
  42d874:	and	w3, w5, #0x1ff
  42d878:	ubfx	x1, x5, #9, #3
  42d87c:	tbnz	w5, #12, 42d94c <ferror@plt+0x2afdc>
  42d880:	mov	w8, w3
  42d884:	sub	w0, w0, #0x1
  42d888:	add	w3, w1, #0x1
  42d88c:	sub	w0, w0, w1
  42d890:	lsr	x2, x2, x3
  42d894:	str	x2, [sp, #208]
  42d898:	str	w0, [sp, #196]
  42d89c:	cbnz	w8, 42d98c <ferror@plt+0x2b01c>
  42d8a0:	cmp	x19, x20
  42d8a4:	b.eq	42d064 <ferror@plt+0x2a6f4>  // b.none
  42d8a8:	sub	x0, x27, x20
  42d8ac:	cmp	w28, w0
  42d8b0:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d8b4:	ldurb	w1, [x20, #-1]
  42d8b8:	mov	x2, x28
  42d8bc:	mov	x0, x20
  42d8c0:	bl	402530 <memset@plt>
  42d8c4:	add	x20, x20, x28
  42d8c8:	b	42d5c4 <ferror@plt+0x2ac54>
  42d8cc:	cmp	w28, #0x11d
  42d8d0:	b.eq	42d944 <ferror@plt+0x2afd4>  // b.none
  42d8d4:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d8d8:	mov	x3, x23
  42d8dc:	mov	x2, x24
  42d8e0:	mov	x1, x21
  42d8e4:	mov	x0, x25
  42d8e8:	bl	42cb20 <ferror@plt+0x2a1b0>
  42d8ec:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d8f0:	sub	w4, w28, #0x109
  42d8f4:	mov	w2, #0x1                   	// #1
  42d8f8:	ldr	x3, [sp, #208]
  42d8fc:	lsr	w0, w4, #2
  42d900:	add	w1, w0, #0x1
  42d904:	and	w4, w4, #0x3
  42d908:	lsl	w4, w4, w1
  42d90c:	add	w8, w4, #0xb
  42d910:	lsl	w4, w2, w0
  42d914:	mov	w0, #0xffffffff            	// #-1
  42d918:	sub	w4, w4, #0x1
  42d91c:	lsl	w2, w0, w1
  42d920:	ldr	w0, [sp, #196]
  42d924:	bic	w2, w3, w2
  42d928:	add	w4, w2, w4, lsl #3
  42d92c:	lsr	x3, x3, x1
  42d930:	add	w28, w4, w8
  42d934:	sub	w1, w0, w1
  42d938:	str	w1, [sp, #196]
  42d93c:	str	x3, [sp, #208]
  42d940:	b	42d848 <ferror@plt+0x2aed8>
  42d944:	mov	x28, #0x102                 	// #258
  42d948:	b	42d848 <ferror@plt+0x2aed8>
  42d94c:	mov	w4, #0x1                   	// #1
  42d950:	add	w3, w3, #0x100
  42d954:	lsl	w1, w4, w1
  42d958:	sub	w1, w1, #0x1
  42d95c:	and	x1, x1, x2, lsr #8
  42d960:	sub	w0, w0, #0x8
  42d964:	add	x1, x1, w3, sxtw
  42d968:	ldr	x3, [sp, #112]
  42d96c:	ldrh	w3, [x3, x1, lsl #1]
  42d970:	and	w8, w3, #0x1ff
  42d974:	ubfx	x5, x3, #9, #3
  42d978:	add	w1, w5, #0x8
  42d97c:	sub	w0, w0, w5
  42d980:	lsr	x2, x2, x1
  42d984:	str	x2, [sp, #208]
  42d988:	b	42d898 <ferror@plt+0x2af28>
  42d98c:	cmp	w8, #0x1d
  42d990:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d994:	cmp	w8, #0x3
  42d998:	b.hi	42d9dc <ferror@plt+0x2b06c>  // b.pmore
  42d99c:	add	w3, w8, #0x1
  42d9a0:	sub	x0, x20, x19
  42d9a4:	cmp	w3, w0
  42d9a8:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d9ac:	sub	x0, x27, x20
  42d9b0:	cmp	w28, w0
  42d9b4:	b.hi	42d064 <ferror@plt+0x2a6f4>  // b.pmore
  42d9b8:	mov	w5, w3
  42d9bc:	cmp	w28, w3
  42d9c0:	neg	x5, x5
  42d9c4:	b.hi	42da48 <ferror@plt+0x2b0d8>  // b.pmore
  42d9c8:	mov	x2, x28
  42d9cc:	add	x1, x20, x5
  42d9d0:	mov	x0, x20
  42d9d4:	bl	4022e0 <memcpy@plt>
  42d9d8:	b	42d8c4 <ferror@plt+0x2af54>
  42d9dc:	mov	x3, x23
  42d9e0:	mov	x2, x24
  42d9e4:	mov	x1, x21
  42d9e8:	mov	x0, x25
  42d9ec:	bl	42cb20 <ferror@plt+0x2a1b0>
  42d9f0:	cbz	w0, 42d064 <ferror@plt+0x2a6f4>
  42d9f4:	sub	w3, w8, #0x4
  42d9f8:	ldr	x5, [sp, #208]
  42d9fc:	lsr	w0, w3, #1
  42da00:	add	w2, w0, #0x1
  42da04:	and	w3, w3, #0x1
  42da08:	lsl	w3, w3, w2
  42da0c:	add	w1, w3, #0x5
  42da10:	mov	w3, #0x1                   	// #1
  42da14:	lsl	w3, w3, w0
  42da18:	mov	w0, #0xffffffff            	// #-1
  42da1c:	sub	w3, w3, #0x1
  42da20:	lsl	w0, w0, w2
  42da24:	bic	w0, w5, w0
  42da28:	lsr	x5, x5, x2
  42da2c:	add	w3, w0, w3, lsl #2
  42da30:	ldr	w0, [sp, #196]
  42da34:	add	w3, w3, w1
  42da38:	str	x5, [sp, #208]
  42da3c:	sub	w2, w0, w2
  42da40:	str	w2, [sp, #196]
  42da44:	b	42d9a0 <ferror@plt+0x2b030>
  42da48:	cmp	w3, w28
  42da4c:	add	x1, x20, x5
  42da50:	csel	w6, w3, w28, ls  // ls = plast
  42da54:	csel	w2, w3, w28, ls  // ls = plast
  42da58:	mov	x0, x20
  42da5c:	stp	x5, x2, [sp, #160]
  42da60:	str	w3, [sp, #176]
  42da64:	str	w6, [sp, #188]
  42da68:	bl	4022e0 <memcpy@plt>
  42da6c:	ldp	x5, x2, [sp, #160]
  42da70:	ldr	w6, [sp, #188]
  42da74:	ldr	w3, [sp, #176]
  42da78:	subs	w28, w28, w6
  42da7c:	add	x20, x20, x2
  42da80:	b.ne	42da48 <ferror@plt+0x2b0d8>  // b.any
  42da84:	b	42d5c4 <ferror@plt+0x2ac54>
  42da88:	ldp	x1, x0, [sp, #128]
  42da8c:	mov	w8, #0x0                   	// #0
  42da90:	sub	x0, x0, #0x4
  42da94:	add	x0, x1, x0
  42da98:	ldrb	w1, [x0], #1
  42da9c:	cmp	x21, x0
  42daa0:	orr	w8, w1, w8, lsl #8
  42daa4:	b.ne	42da98 <ferror@plt+0x2b128>  // b.any
  42daa8:	mov	w13, #0x0                   	// #0
  42daac:	mov	w12, #0x1                   	// #1
  42dab0:	mov	x15, #0x15af                	// #5551
  42dab4:	mov	x14, #0x15b0                	// #5552
  42dab8:	mov	w1, #0xfff1                	// #65521
  42dabc:	cmp	x26, x15
  42dac0:	b.hi	42db10 <ferror@plt+0x2b1a0>  // b.pmore
  42dac4:	and	x14, x26, #0xfffffffffffffff0
  42dac8:	lsr	x4, x26, #4
  42dacc:	add	x14, x19, x14
  42dad0:	cmp	x19, x14
  42dad4:	b.ne	42dbf8 <ferror@plt+0x2b288>  // b.any
  42dad8:	mov	x0, #0xfffffffffffffff0    	// #-16
  42dadc:	mov	x3, #0x0                   	// #0
  42dae0:	madd	x26, x4, x0, x26
  42dae4:	cmp	x26, w3, uxtw
  42dae8:	b.hi	42dcc0 <ferror@plt+0x2b350>  // b.pmore
  42daec:	mov	w2, #0xfff1                	// #65521
  42daf0:	udiv	w1, w13, w2
  42daf4:	udiv	w0, w12, w2
  42daf8:	msub	w1, w1, w2, w13
  42dafc:	msub	w2, w0, w2, w12
  42db00:	add	w1, w2, w1, lsl #16
  42db04:	cmp	w1, w8
  42db08:	cset	w0, eq  // eq = none
  42db0c:	b	42d068 <ferror@plt+0x2a6f8>
  42db10:	add	x16, x19, x14
  42db14:	ldrb	w11, [x19]
  42db18:	add	x19, x19, #0x10
  42db1c:	ldurb	w24, [x19, #-15]
  42db20:	ldurb	w4, [x19, #-14]
  42db24:	add	w11, w11, w12
  42db28:	add	w24, w24, w11
  42db2c:	ldurb	w10, [x19, #-12]
  42db30:	add	w3, w4, w24
  42db34:	ldurb	w4, [x19, #-13]
  42db38:	ldurb	w23, [x19, #-11]
  42db3c:	add	w11, w11, w24
  42db40:	add	w25, w4, w3
  42db44:	ldurb	w9, [x19, #-10]
  42db48:	add	w10, w10, w25
  42db4c:	ldurb	w22, [x19, #-9]
  42db50:	add	w23, w23, w10
  42db54:	ldurb	w7, [x19, #-8]
  42db58:	add	w9, w9, w23
  42db5c:	ldurb	w21, [x19, #-7]
  42db60:	add	w22, w22, w9
  42db64:	ldurb	w6, [x19, #-6]
  42db68:	add	w7, w7, w22
  42db6c:	ldurb	w20, [x19, #-5]
  42db70:	add	w21, w21, w7
  42db74:	ldurb	w5, [x19, #-4]
  42db78:	add	w6, w6, w21
  42db7c:	ldurb	w18, [x19, #-3]
  42db80:	add	w20, w20, w6
  42db84:	ldurb	w4, [x19, #-2]
  42db88:	add	w5, w5, w20
  42db8c:	add	w10, w10, w23
  42db90:	add	w18, w18, w5
  42db94:	add	w9, w9, w22
  42db98:	add	w0, w4, w18
  42db9c:	add	w4, w3, w25
  42dba0:	add	w4, w4, w11
  42dba4:	ldurb	w17, [x19, #-1]
  42dba8:	add	w4, w4, w10
  42dbac:	add	w7, w7, w21
  42dbb0:	add	w4, w4, w9
  42dbb4:	add	w6, w6, w20
  42dbb8:	add	w2, w4, w7
  42dbbc:	add	w5, w5, w18
  42dbc0:	add	w2, w2, w6
  42dbc4:	add	w4, w17, w0, lsl #1
  42dbc8:	add	w2, w2, w5
  42dbcc:	add	w12, w17, w0
  42dbd0:	add	w2, w2, w4
  42dbd4:	cmp	x19, x16
  42dbd8:	add	w13, w13, w2
  42dbdc:	b.ne	42db14 <ferror@plt+0x2b1a4>  // b.any
  42dbe0:	udiv	w0, w12, w1
  42dbe4:	sub	x26, x26, x14
  42dbe8:	msub	w12, w0, w1, w12
  42dbec:	udiv	w0, w13, w1
  42dbf0:	msub	w13, w0, w1, w13
  42dbf4:	b	42dabc <ferror@plt+0x2b14c>
  42dbf8:	ldrb	w1, [x19]
  42dbfc:	add	x19, x19, #0x10
  42dc00:	ldurb	w11, [x19, #-15]
  42dc04:	add	w2, w1, w12
  42dc08:	ldurb	w22, [x19, #-14]
  42dc0c:	add	w11, w11, w2
  42dc10:	ldurb	w10, [x19, #-13]
  42dc14:	ldurb	w21, [x19, #-12]
  42dc18:	add	w22, w22, w11
  42dc1c:	ldurb	w9, [x19, #-11]
  42dc20:	add	w10, w10, w22
  42dc24:	ldurb	w20, [x19, #-10]
  42dc28:	add	w21, w21, w10
  42dc2c:	ldurb	w7, [x19, #-9]
  42dc30:	add	w9, w9, w21
  42dc34:	ldurb	w18, [x19, #-8]
  42dc38:	add	w20, w20, w9
  42dc3c:	ldurb	w6, [x19, #-7]
  42dc40:	add	w7, w7, w20
  42dc44:	ldurb	w17, [x19, #-6]
  42dc48:	add	w18, w18, w7
  42dc4c:	add	w1, w2, w13
  42dc50:	ldurb	w5, [x19, #-5]
  42dc54:	add	w6, w6, w18
  42dc58:	add	w11, w11, w22
  42dc5c:	ldurb	w16, [x19, #-2]
  42dc60:	add	w17, w17, w6
  42dc64:	ldurb	w15, [x19, #-4]
  42dc68:	add	w1, w1, w11
  42dc6c:	ldurb	w3, [x19, #-3]
  42dc70:	add	w10, w10, w21
  42dc74:	add	w5, w5, w17
  42dc78:	add	w1, w1, w10
  42dc7c:	add	w9, w9, w20
  42dc80:	add	w15, w15, w5
  42dc84:	add	w1, w1, w9
  42dc88:	add	w7, w7, w18
  42dc8c:	add	w3, w3, w15
  42dc90:	add	w0, w1, w7
  42dc94:	add	w6, w6, w17
  42dc98:	ldurb	w2, [x19, #-1]
  42dc9c:	add	w0, w0, w6
  42dca0:	add	w5, w5, w15
  42dca4:	add	w12, w16, w3
  42dca8:	add	w0, w0, w5
  42dcac:	add	w3, w16, w3, lsl #1
  42dcb0:	add	w12, w2, w12
  42dcb4:	add	w0, w0, w3
  42dcb8:	add	w13, w12, w0
  42dcbc:	b	42dad0 <ferror@plt+0x2b160>
  42dcc0:	ldrb	w0, [x19, x3]
  42dcc4:	add	x3, x3, #0x1
  42dcc8:	add	w12, w12, w0
  42dccc:	add	w13, w13, w12
  42dcd0:	b	42dae4 <ferror@plt+0x2b174>
  42dcd4:	stp	x29, x30, [sp, #-80]!
  42dcd8:	mov	x29, sp
  42dcdc:	stp	x21, x22, [sp, #32]
  42dce0:	mov	x21, x1
  42dce4:	mov	x22, x7
  42dce8:	stp	x23, x24, [sp, #48]
  42dcec:	mov	x24, x2
  42dcf0:	mov	x23, x6
  42dcf4:	mov	x2, x4
  42dcf8:	str	x25, [sp, #64]
  42dcfc:	mov	x25, x3
  42dd00:	mov	x3, x5
  42dd04:	add	x5, x21, #0x4
  42dd08:	mov	x1, #0x0                   	// #0
  42dd0c:	stp	x19, x20, [sp, #16]
  42dd10:	mov	x19, #0x0                   	// #0
  42dd14:	ldrb	w4, [x5, x1]
  42dd18:	add	x1, x1, #0x1
  42dd1c:	cmp	x1, #0x8
  42dd20:	orr	x19, x4, x19, lsl #8
  42dd24:	b.ne	42dd14 <ferror@plt+0x2b3a4>  // b.any
  42dd28:	mov	x1, x19
  42dd2c:	bl	42c0c0 <ferror@plt+0x29750>
  42dd30:	mov	x20, x0
  42dd34:	cbz	x0, 42dd64 <ferror@plt+0x2b3f4>
  42dd38:	mov	x3, x0
  42dd3c:	mov	x4, x19
  42dd40:	mov	x2, x25
  42dd44:	sub	x1, x24, #0xc
  42dd48:	add	x0, x21, #0xc
  42dd4c:	bl	42cff4 <ferror@plt+0x2a684>
  42dd50:	cbz	w0, 42dd5c <ferror@plt+0x2b3ec>
  42dd54:	str	x20, [x23]
  42dd58:	str	x19, [x22]
  42dd5c:	mov	w0, #0x1                   	// #1
  42dd60:	b	42dd68 <ferror@plt+0x2b3f8>
  42dd64:	mov	w0, #0x0                   	// #0
  42dd68:	ldp	x19, x20, [sp, #16]
  42dd6c:	ldp	x21, x22, [sp, #32]
  42dd70:	ldp	x23, x24, [sp, #48]
  42dd74:	ldr	x25, [sp, #64]
  42dd78:	ldp	x29, x30, [sp], #80
  42dd7c:	ret
  42dd80:	sub	sp, sp, #0x4a0
  42dd84:	stp	x29, x30, [sp, #80]
  42dd88:	add	x29, sp, #0x50
  42dd8c:	stp	x27, x28, [sp, #160]
  42dd90:	mov	x27, x0
  42dd94:	ldr	w0, [sp, #1208]
  42dd98:	stp	x19, x20, [sp, #96]
  42dd9c:	mov	x19, x4
  42dda0:	mov	x20, x5
  42dda4:	stp	x21, x22, [sp, #112]
  42dda8:	stp	x23, x24, [sp, #128]
  42ddac:	mov	w24, w2
  42ddb0:	stp	x25, x26, [sp, #144]
  42ddb4:	stp	x3, x7, [sp, #240]
  42ddb8:	str	x6, [sp, #272]
  42ddbc:	str	x1, [sp, #296]
  42ddc0:	cbnz	w0, 42ddd0 <ferror@plt+0x2b460>
  42ddc4:	ldr	x0, [sp, #1184]
  42ddc8:	str	wzr, [x7]
  42ddcc:	str	wzr, [x0]
  42ddd0:	add	x25, sp, #0x198
  42ddd4:	mov	x5, x20
  42ddd8:	mov	x6, x25
  42dddc:	mov	x4, x19
  42dde0:	mov	w1, w24
  42dde4:	mov	x0, x27
  42dde8:	mov	x3, #0x40                  	// #64
  42ddec:	mov	x2, #0x0                   	// #0
  42ddf0:	bl	42f2e4 <ferror@plt+0x2c974>
  42ddf4:	cbz	w0, 42de98 <ferror@plt+0x2b528>
  42ddf8:	ldr	x0, [sp, #408]
  42ddfc:	add	x1, sp, #0x200
  42de00:	ldp	x2, x3, [x0]
  42de04:	stp	x2, x3, [x1, #160]
  42de08:	ldrb	w4, [x0, #6]
  42de0c:	ldp	x2, x3, [x0, #16]
  42de10:	stp	x2, x3, [x1, #176]
  42de14:	ldrb	w23, [x0, #4]
  42de18:	ldp	x2, x3, [x0, #32]
  42de1c:	stp	x2, x3, [x1, #192]
  42de20:	add	x1, sp, #0x2d0
  42de24:	ldp	x2, x3, [x0, #48]
  42de28:	str	w4, [sp, #184]
  42de2c:	stp	x2, x3, [x1]
  42de30:	ldrb	w1, [x0, #5]
  42de34:	str	w1, [sp, #316]
  42de38:	mov	x3, x20
  42de3c:	ldrh	w1, [x0, #18]
  42de40:	mov	x2, x19
  42de44:	str	w1, [sp, #376]
  42de48:	ldr	w1, [x0, #48]
  42de4c:	ldrh	w26, [x0, #16]
  42de50:	ldrh	w28, [x0, #60]
  42de54:	ldrh	w22, [x0, #62]
  42de58:	str	w1, [sp, #336]
  42de5c:	mov	x1, x25
  42de60:	ldr	x21, [x0, #40]
  42de64:	mov	x0, x27
  42de68:	bl	42f3a0 <ferror@plt+0x2ca30>
  42de6c:	ldr	w1, [sp, #672]
  42de70:	mov	w0, #0x457f                	// #17791
  42de74:	movk	w0, #0x464c, lsl #16
  42de78:	ldr	w4, [sp, #184]
  42de7c:	cmp	w1, w0
  42de80:	b.eq	42dea4 <ferror@plt+0x2b534>  // b.none
  42de84:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42de88:	add	x1, x1, #0xa00
  42de8c:	mov	w2, #0x0                   	// #0
  42de90:	mov	x0, x20
  42de94:	blr	x19
  42de98:	mov	w28, #0x0                   	// #0
  42de9c:	mov	x22, #0x0                   	// #0
  42dea0:	b	42e200 <ferror@plt+0x2b890>
  42dea4:	cmp	w4, #0x1
  42dea8:	b.eq	42debc <ferror@plt+0x2b54c>  // b.none
  42deac:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42deb0:	mov	w2, #0x0                   	// #0
  42deb4:	add	x1, x1, #0xa1b
  42deb8:	b	42de90 <ferror@plt+0x2b520>
  42debc:	cmp	w23, #0x2
  42dec0:	b.eq	42ded4 <ferror@plt+0x2b564>  // b.none
  42dec4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42dec8:	mov	w2, #0x0                   	// #0
  42decc:	add	x1, x1, #0xa47
  42ded0:	b	42de90 <ferror@plt+0x2b520>
  42ded4:	ldr	w0, [sp, #316]
  42ded8:	sub	w0, w0, #0x1
  42dedc:	and	w0, w0, #0xff
  42dee0:	cmp	w0, #0x1
  42dee4:	b.ls	42def8 <ferror@plt+0x2b588>  // b.plast
  42dee8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42deec:	mov	w2, #0x0                   	// #0
  42def0:	add	x1, x1, #0xa6f
  42def4:	b	42de90 <ferror@plt+0x2b520>
  42def8:	ldr	w0, [sp, #1200]
  42defc:	cbz	w0, 42df08 <ferror@plt+0x2b598>
  42df00:	cmp	w26, #0x3
  42df04:	b.eq	42ef2c <ferror@plt+0x2c5bc>  // b.none
  42df08:	mov	w0, w28
  42df0c:	str	w28, [sp, #192]
  42df10:	cmp	w0, #0x0
  42df14:	mov	w25, #0xffff                	// #65535
  42df18:	ccmp	w22, w25, #0x4, ne  // ne = any
  42df1c:	b.ne	42df9c <ferror@plt+0x2b62c>  // b.any
  42df20:	cbz	x21, 42df9c <ferror@plt+0x2b62c>
  42df24:	add	x23, sp, #0x360
  42df28:	mov	x5, x20
  42df2c:	mov	x6, x23
  42df30:	mov	x4, x19
  42df34:	mov	x2, x21
  42df38:	mov	w1, w24
  42df3c:	mov	x0, x27
  42df40:	mov	x3, #0x8                   	// #8
  42df44:	bl	42f2e4 <ferror@plt+0x2c974>
  42df48:	cbz	w0, 42de98 <ferror@plt+0x2b528>
  42df4c:	ldr	w1, [sp, #192]
  42df50:	ldr	x0, [sp, #864]
  42df54:	cbnz	w1, 42df68 <ferror@plt+0x2b5f8>
  42df58:	ldr	w1, [x0, #32]
  42df5c:	cmp	w22, w25
  42df60:	str	w1, [sp, #192]
  42df64:	b.ne	42df88 <ferror@plt+0x2b618>  // b.any
  42df68:	ldr	w22, [x0, #40]
  42df6c:	ldr	w0, [sp, #192]
  42df70:	cmp	w22, w0
  42df74:	mov	w0, #0xffff                	// #65535
  42df78:	ccmp	w22, w0, #0x0, cs  // cs = hs, nlast
  42df7c:	mov	w0, w22
  42df80:	sub	w22, w22, #0x100
  42df84:	csel	w22, w22, w0, hi  // hi = pmore
  42df88:	mov	x3, x20
  42df8c:	mov	x2, x19
  42df90:	mov	x1, x23
  42df94:	mov	x0, x27
  42df98:	bl	42f3a0 <ferror@plt+0x2ca30>
  42df9c:	ldr	w0, [sp, #192]
  42dfa0:	add	x6, sp, #0x1b0
  42dfa4:	mov	x5, x20
  42dfa8:	mov	x4, x19
  42dfac:	sub	w3, w0, #0x1
  42dfb0:	add	x2, x21, #0x40
  42dfb4:	mov	w1, w24
  42dfb8:	mov	x0, x27
  42dfbc:	lsl	x3, x3, #6
  42dfc0:	bl	42f2e4 <ferror@plt+0x2c974>
  42dfc4:	cbz	w0, 42de98 <ferror@plt+0x2b528>
  42dfc8:	ldr	x0, [sp, #432]
  42dfcc:	sub	w22, w22, #0x1
  42dfd0:	str	x0, [sp, #264]
  42dfd4:	add	x6, sp, #0x1c8
  42dfd8:	mov	x5, x20
  42dfdc:	mov	x4, x19
  42dfe0:	add	x22, x0, x22, lsl #6
  42dfe4:	mov	w1, w24
  42dfe8:	ldr	x2, [x22, #24]
  42dfec:	ldr	x0, [x22, #32]
  42dff0:	str	x0, [sp, #320]
  42dff4:	mov	x3, x0
  42dff8:	mov	x0, x27
  42dffc:	bl	42f2e4 <ferror@plt+0x2c974>
  42e000:	mov	w21, w0
  42e004:	cbz	w0, 42ef34 <ferror@plt+0x2c5c4>
  42e008:	add	x3, sp, #0x360
  42e00c:	mov	x2, #0x140                 	// #320
  42e010:	ldr	x0, [sp, #456]
  42e014:	mov	w1, #0x0                   	// #0
  42e018:	str	x0, [sp, #344]
  42e01c:	mov	x0, x3
  42e020:	bl	402530 <memset@plt>
  42e024:	mov	x3, x0
  42e028:	mov	w0, #0x1                   	// #1
  42e02c:	str	w0, [sp, #208]
  42e030:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x3c198>
  42e034:	add	x0, x0, #0xda0
  42e038:	ldr	x23, [sp, #264]
  42e03c:	str	x0, [sp, #352]
  42e040:	add	x0, sp, #0x270
  42e044:	mov	x22, #0x0                   	// #0
  42e048:	mov	w26, #0x0                   	// #0
  42e04c:	mov	w25, #0x0                   	// #0
  42e050:	str	wzr, [sp, #184]
  42e054:	str	wzr, [sp, #200]
  42e058:	str	wzr, [sp, #216]
  42e05c:	str	xzr, [sp, #224]
  42e060:	str	xzr, [sp, #256]
  42e064:	str	xzr, [sp, #280]
  42e068:	str	wzr, [sp, #288]
  42e06c:	str	wzr, [sp, #292]
  42e070:	str	xzr, [sp, #304]
  42e074:	str	wzr, [sp, #312]
  42e078:	str	x0, [sp, #328]
  42e07c:	add	x0, x0, #0x18
  42e080:	str	x3, [sp, #360]
  42e084:	str	x0, [sp, #368]
  42e088:	ldr	w0, [sp, #192]
  42e08c:	ldr	w1, [sp, #208]
  42e090:	cmp	w0, w1
  42e094:	b.hi	42e0f4 <ferror@plt+0x2b784>  // b.pmore
  42e098:	ldr	w0, [sp, #200]
  42e09c:	ldr	w1, [sp, #288]
  42e0a0:	cmp	w0, #0x0
  42e0a4:	csel	w0, w0, w1, ne  // ne = any
  42e0a8:	str	w0, [sp, #200]
  42e0ac:	cmp	w0, #0x0
  42e0b0:	ldr	w0, [sp, #1208]
  42e0b4:	eor	w0, w0, #0x1
  42e0b8:	and	w0, w0, #0x1
  42e0bc:	csel	w0, w0, wzr, ne  // ne = any
  42e0c0:	cbz	w0, 42e968 <ferror@plt+0x2bff8>
  42e0c4:	ldr	w0, [sp, #200]
  42e0c8:	sub	w21, w0, #0x1
  42e0cc:	ldr	x0, [sp, #264]
  42e0d0:	add	x21, x0, x21, lsl #6
  42e0d4:	ldr	w0, [sp, #192]
  42e0d8:	ldr	w23, [x21, #40]
  42e0dc:	cmp	w0, w23
  42e0e0:	b.hi	42e538 <ferror@plt+0x2bbc8>  // b.pmore
  42e0e4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42e0e8:	mov	w2, #0x0                   	// #0
  42e0ec:	add	x1, x1, #0xaf1
  42e0f0:	b	42e130 <ferror@plt+0x2b7c0>
  42e0f4:	ldr	w0, [x23, #4]
  42e0f8:	cmp	w0, #0x2
  42e0fc:	b.eq	42e250 <ferror@plt+0x2b8e0>  // b.none
  42e100:	cmp	w0, #0xb
  42e104:	ldr	w1, [sp, #208]
  42e108:	ldr	w0, [sp, #288]
  42e10c:	csel	w0, w0, w1, ne  // ne = any
  42e110:	str	w0, [sp, #288]
  42e114:	ldr	x1, [sp, #320]
  42e118:	ldr	w0, [x23]
  42e11c:	cmp	x0, x1
  42e120:	b.cc	42e25c <ferror@plt+0x2b8ec>  // b.lo, b.ul, b.last
  42e124:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42e128:	add	x1, x1, #0xa96
  42e12c:	mov	w2, #0x0                   	// #0
  42e130:	mov	w28, #0x0                   	// #0
  42e134:	mov	x0, x20
  42e138:	blr	x19
  42e13c:	mov	w7, #0x0                   	// #0
  42e140:	mov	w21, #0x1                   	// #1
  42e144:	mov	x3, x20
  42e148:	mov	x2, x19
  42e14c:	add	x1, sp, #0x1b0
  42e150:	mov	x0, x27
  42e154:	str	w7, [sp, #192]
  42e158:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e15c:	ldr	w7, [sp, #192]
  42e160:	cbz	w21, 42e180 <ferror@plt+0x2b810>
  42e164:	mov	x3, x20
  42e168:	mov	x2, x19
  42e16c:	add	x1, sp, #0x1c8
  42e170:	mov	x0, x27
  42e174:	str	w7, [sp, #192]
  42e178:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e17c:	ldr	w7, [sp, #192]
  42e180:	cbz	w7, 42e198 <ferror@plt+0x2b828>
  42e184:	mov	x3, x20
  42e188:	mov	x2, x19
  42e18c:	add	x1, sp, #0x1e0
  42e190:	mov	x0, x27
  42e194:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e198:	cbz	w28, 42e1b4 <ferror@plt+0x2b844>
  42e19c:	mov	w28, #0x0                   	// #0
  42e1a0:	mov	x3, x20
  42e1a4:	mov	x2, x19
  42e1a8:	add	x1, sp, #0x1f8
  42e1ac:	mov	x0, x27
  42e1b0:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e1b4:	cbz	w26, 42e1cc <ferror@plt+0x2b85c>
  42e1b8:	mov	x3, x20
  42e1bc:	mov	x2, x19
  42e1c0:	add	x1, sp, #0x228
  42e1c4:	mov	x0, x27
  42e1c8:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e1cc:	ldr	w0, [sp, #184]
  42e1d0:	cbz	w0, 42e1e8 <ferror@plt+0x2b878>
  42e1d4:	mov	x3, x20
  42e1d8:	mov	x2, x19
  42e1dc:	add	x1, sp, #0x240
  42e1e0:	mov	x0, x27
  42e1e4:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e1e8:	cbz	w25, 42e200 <ferror@plt+0x2b890>
  42e1ec:	mov	x3, x20
  42e1f0:	mov	x2, x19
  42e1f4:	add	x1, sp, #0x210
  42e1f8:	mov	x0, x27
  42e1fc:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e200:	cbz	w28, 42e218 <ferror@plt+0x2b8a8>
  42e204:	mov	x3, x20
  42e208:	mov	x2, x19
  42e20c:	add	x1, sp, #0x2e0
  42e210:	mov	x0, x27
  42e214:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e218:	cbz	x22, 42e230 <ferror@plt+0x2b8c0>
  42e21c:	mov	x3, x20
  42e220:	mov	x2, x19
  42e224:	add	x1, x22, #0x18
  42e228:	mov	x0, x27
  42e22c:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e230:	cmn	w24, #0x1
  42e234:	b.eq	42e248 <ferror@plt+0x2b8d8>  // b.none
  42e238:	mov	x2, x20
  42e23c:	mov	x1, x19
  42e240:	mov	w0, w24
  42e244:	bl	42c6f4 <ferror@plt+0x29d84>
  42e248:	mov	w22, #0x0                   	// #0
  42e24c:	b	42e9cc <ferror@plt+0x2c05c>
  42e250:	ldr	w0, [sp, #208]
  42e254:	str	w0, [sp, #200]
  42e258:	b	42e114 <ferror@plt+0x2b7a4>
  42e25c:	ldr	x1, [sp, #344]
  42e260:	mov	x21, #0x0                   	// #0
  42e264:	add	x0, x1, x0
  42e268:	str	x0, [sp, #232]
  42e26c:	ldr	x0, [sp, #352]
  42e270:	ldr	x1, [x0, x21, lsl #3]
  42e274:	ldr	x0, [sp, #232]
  42e278:	bl	4026d0 <strcmp@plt>
  42e27c:	cbnz	w0, 42e420 <ferror@plt+0x2bab0>
  42e280:	ldr	x2, [sp, #360]
  42e284:	sbfiz	x0, x21, #5, #32
  42e288:	ldr	x1, [x23, #24]
  42e28c:	str	x1, [x2, x0]
  42e290:	add	x1, sp, #0x368
  42e294:	ldr	x2, [x23, #32]
  42e298:	str	x2, [x1, x0]
  42e29c:	add	x2, sp, #0x378
  42e2a0:	ldr	x1, [x23, #8]
  42e2a4:	ubfx	w1, w1, #11, #1
  42e2a8:	str	w1, [x2, x0]
  42e2ac:	ldr	w0, [sp, #1208]
  42e2b0:	ldr	x1, [sp, #1216]
  42e2b4:	eor	w0, w0, #0x1
  42e2b8:	and	w0, w0, #0x1
  42e2bc:	cmp	x1, #0x0
  42e2c0:	csinc	w0, w0, wzr, eq  // eq = none
  42e2c4:	cbz	w0, 42e3a0 <ferror@plt+0x2ba30>
  42e2c8:	cbnz	w25, 42e3a0 <ferror@plt+0x2ba30>
  42e2cc:	ldr	x0, [sp, #232]
  42e2d0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42e2d4:	add	x1, x1, #0xab4
  42e2d8:	bl	4026d0 <strcmp@plt>
  42e2dc:	mov	w7, w0
  42e2e0:	cbnz	w0, 42e3a0 <ferror@plt+0x2ba30>
  42e2e4:	ldp	x2, x3, [x23, #24]
  42e2e8:	add	x6, sp, #0x210
  42e2ec:	mov	x5, x20
  42e2f0:	mov	x4, x19
  42e2f4:	mov	w1, w24
  42e2f8:	mov	x0, x27
  42e2fc:	str	w7, [sp, #380]
  42e300:	bl	42f2e4 <ferror@plt+0x2c974>
  42e304:	mov	w28, w0
  42e308:	cbz	w0, 42e13c <ferror@plt+0x2b7cc>
  42e30c:	ldr	x21, [sp, #528]
  42e310:	ldr	w7, [sp, #380]
  42e314:	ldr	w0, [x21, #8]
  42e318:	cmp	w0, #0x3
  42e31c:	b.ne	42e368 <ferror@plt+0x2b9f8>  // b.any
  42e320:	ldr	w0, [x21]
  42e324:	cmp	w0, #0x4
  42e328:	b.ne	42e368 <ferror@plt+0x2b9f8>  // b.any
  42e32c:	add	x0, x21, #0xc
  42e330:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42e334:	add	x1, x1, #0xac7
  42e338:	str	w7, [sp, #380]
  42e33c:	bl	4026d0 <strcmp@plt>
  42e340:	ldr	w7, [sp, #380]
  42e344:	cbnz	w0, 42e368 <ferror@plt+0x2b9f8>
  42e348:	ldr	w0, [x21, #4]
  42e34c:	ldr	x2, [x23, #32]
  42e350:	add	w1, w0, #0x10
  42e354:	cmp	x2, x1
  42e358:	b.hi	42e368 <ferror@plt+0x2b9f8>  // b.pmore
  42e35c:	add	x1, x21, #0x10
  42e360:	str	w0, [sp, #216]
  42e364:	str	x1, [sp, #256]
  42e368:	ldr	w0, [sp, #1224]
  42e36c:	cbz	w0, 42e39c <ferror@plt+0x2ba2c>
  42e370:	ldr	w0, [sp, #216]
  42e374:	ldr	w1, [sp, #1224]
  42e378:	cmp	w0, w1
  42e37c:	b.ne	42ef50 <ferror@plt+0x2c5e0>  // b.any
  42e380:	mov	x2, x0
  42e384:	str	w7, [sp, #380]
  42e388:	ldr	x0, [sp, #256]
  42e38c:	ldr	x1, [sp, #1216]
  42e390:	bl	402690 <memcmp@plt>
  42e394:	ldr	w7, [sp, #380]
  42e398:	cbnz	w0, 42ef50 <ferror@plt+0x2c5e0>
  42e39c:	mov	w25, #0x1                   	// #1
  42e3a0:	ldr	w0, [sp, #1208]
  42e3a4:	orr	w0, w26, w0
  42e3a8:	cbnz	w0, 42e434 <ferror@plt+0x2bac4>
  42e3ac:	ldr	x0, [sp, #232]
  42e3b0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42e3b4:	add	x1, x1, #0xacb
  42e3b8:	bl	4026d0 <strcmp@plt>
  42e3bc:	cbnz	w0, 42e430 <ferror@plt+0x2bac0>
  42e3c0:	ldp	x2, x3, [x23, #24]
  42e3c4:	add	x6, sp, #0x228
  42e3c8:	mov	x5, x20
  42e3cc:	mov	x4, x19
  42e3d0:	mov	w1, w24
  42e3d4:	mov	x0, x27
  42e3d8:	bl	42f2e4 <ferror@plt+0x2c974>
  42e3dc:	mov	w7, w0
  42e3e0:	cbz	w0, 42ef5c <ferror@plt+0x2c5ec>
  42e3e4:	ldr	x26, [x23, #32]
  42e3e8:	ldr	x21, [sp, #552]
  42e3ec:	mov	x1, x26
  42e3f0:	mov	x0, x21
  42e3f4:	bl	402380 <strnlen@plt>
  42e3f8:	add	x0, x0, #0x3
  42e3fc:	and	x0, x0, #0xfffffffffffffffc
  42e400:	add	x1, x0, #0x4
  42e404:	cmp	x26, x1
  42e408:	b.cc	42e418 <ferror@plt+0x2baa8>  // b.lo, b.ul, b.last
  42e40c:	ldr	w0, [x21, x0]
  42e410:	str	x21, [sp, #280]
  42e414:	str	w0, [sp, #292]
  42e418:	mov	w26, #0x1                   	// #1
  42e41c:	b	42e434 <ferror@plt+0x2bac4>
  42e420:	add	x21, x21, #0x1
  42e424:	cmp	x21, #0xa
  42e428:	b.ne	42e26c <ferror@plt+0x2b8fc>  // b.any
  42e42c:	b	42e2ac <ferror@plt+0x2b93c>
  42e430:	mov	w26, #0x0                   	// #0
  42e434:	ldr	w0, [sp, #184]
  42e438:	cbnz	w0, 42e4b0 <ferror@plt+0x2bb40>
  42e43c:	ldr	x0, [sp, #232]
  42e440:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42e444:	add	x1, x1, #0xada
  42e448:	bl	4026d0 <strcmp@plt>
  42e44c:	cbnz	w0, 42e4b0 <ferror@plt+0x2bb40>
  42e450:	ldp	x2, x3, [x23, #24]
  42e454:	add	x6, sp, #0x240
  42e458:	mov	x5, x20
  42e45c:	mov	x4, x19
  42e460:	mov	w1, w24
  42e464:	mov	x0, x27
  42e468:	bl	42f2e4 <ferror@plt+0x2c974>
  42e46c:	mov	w7, w0
  42e470:	cbz	w0, 42ef60 <ferror@plt+0x2c5f0>
  42e474:	ldr	x0, [sp, #576]
  42e478:	str	x0, [sp, #224]
  42e47c:	ldr	x21, [x23, #32]
  42e480:	mov	x1, x21
  42e484:	bl	402380 <strnlen@plt>
  42e488:	cmp	x21, x0
  42e48c:	b.ls	42e4a8 <ferror@plt+0x2bb38>  // b.plast
  42e490:	ldr	x1, [sp, #224]
  42e494:	add	x0, x0, #0x1
  42e498:	add	x1, x1, x0
  42e49c:	sub	w0, w21, w0
  42e4a0:	str	x1, [sp, #304]
  42e4a4:	str	w0, [sp, #312]
  42e4a8:	mov	w0, #0x1                   	// #1
  42e4ac:	str	w0, [sp, #184]
  42e4b0:	ldr	w0, [sp, #376]
  42e4b4:	cmp	w0, #0x15
  42e4b8:	b.ne	42e524 <ferror@plt+0x2bbb4>  // b.any
  42e4bc:	ldr	x0, [sp, #336]
  42e4c0:	tbnz	w0, #1, 42e524 <ferror@plt+0x2bbb4>
  42e4c4:	ldr	w21, [x23, #4]
  42e4c8:	cmp	w21, #0x1
  42e4cc:	b.ne	42e524 <ferror@plt+0x2bbb4>  // b.any
  42e4d0:	ldr	x0, [sp, #232]
  42e4d4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42e4d8:	add	x1, x1, #0xaec
  42e4dc:	bl	4026d0 <strcmp@plt>
  42e4e0:	cbnz	w0, 42e524 <ferror@plt+0x2bbb4>
  42e4e4:	ldp	x2, x3, [x23, #24]
  42e4e8:	mov	x5, x20
  42e4ec:	ldr	x6, [sp, #368]
  42e4f0:	mov	x4, x19
  42e4f4:	mov	w1, w24
  42e4f8:	mov	x0, x27
  42e4fc:	bl	42f2e4 <ferror@plt+0x2c974>
  42e500:	mov	w7, w0
  42e504:	cbz	w0, 42ef68 <ferror@plt+0x2c5f8>
  42e508:	ldr	x0, [x23, #16]
  42e50c:	str	x0, [sp, #624]
  42e510:	ldr	x22, [sp, #328]
  42e514:	ldr	x0, [sp, #648]
  42e518:	str	x0, [sp, #632]
  42e51c:	ldr	x0, [x23, #32]
  42e520:	str	x0, [sp, #640]
  42e524:	ldr	w0, [sp, #208]
  42e528:	add	x23, x23, #0x40
  42e52c:	add	w0, w0, #0x1
  42e530:	str	w0, [sp, #208]
  42e534:	b	42e088 <ferror@plt+0x2b718>
  42e538:	ldp	x2, x3, [x21, #24]
  42e53c:	add	x6, sp, #0x1e0
  42e540:	mov	x5, x20
  42e544:	mov	x4, x19
  42e548:	mov	w1, w24
  42e54c:	mov	x0, x27
  42e550:	bl	42f2e4 <ferror@plt+0x2c974>
  42e554:	mov	w7, w0
  42e558:	cbz	w0, 42ef60 <ferror@plt+0x2c5f0>
  42e55c:	ldr	x0, [sp, #264]
  42e560:	sub	w7, w23, #0x1
  42e564:	add	x6, sp, #0x1f8
  42e568:	mov	x5, x20
  42e56c:	mov	x4, x19
  42e570:	mov	w1, w24
  42e574:	add	x7, x0, x7, lsl #6
  42e578:	mov	x0, x27
  42e57c:	str	x7, [sp, #192]
  42e580:	ldp	x2, x3, [x7, #24]
  42e584:	bl	42f2e4 <ferror@plt+0x2c974>
  42e588:	mov	w28, w0
  42e58c:	cbz	w0, 42ef70 <ferror@plt+0x2c600>
  42e590:	mov	x3, x20
  42e594:	mov	x2, x19
  42e598:	mov	x0, x27
  42e59c:	mov	x1, #0x18                  	// #24
  42e5a0:	bl	42c0c0 <ferror@plt+0x29750>
  42e5a4:	mov	x28, x0
  42e5a8:	cbz	x0, 42e738 <ferror@plt+0x2bdc8>
  42e5ac:	ldr	x0, [x21, #32]
  42e5b0:	mov	x1, #0x18                  	// #24
  42e5b4:	ldr	x7, [sp, #192]
  42e5b8:	mov	x5, #0x0                   	// #0
  42e5bc:	udiv	x0, x0, x1
  42e5c0:	ldr	x23, [sp, #480]
  42e5c4:	ldr	x7, [x7, #32]
  42e5c8:	mov	x4, x23
  42e5cc:	madd	x0, x0, x1, x23
  42e5d0:	ldr	x8, [sp, #504]
  42e5d4:	cmp	x0, x4
  42e5d8:	b.ne	42e69c <ferror@plt+0x2bd2c>  // b.any
  42e5dc:	mov	x9, #0x18                  	// #24
  42e5e0:	mov	x3, x20
  42e5e4:	mov	x2, x19
  42e5e8:	mov	x0, x27
  42e5ec:	mul	x6, x5, x9
  42e5f0:	str	x8, [sp, #208]
  42e5f4:	stp	x6, x5, [sp, #192]
  42e5f8:	mov	x1, x6
  42e5fc:	str	x7, [sp, #232]
  42e600:	str	x4, [sp, #264]
  42e604:	bl	42c0c0 <ferror@plt+0x29750>
  42e608:	mov	x21, x0
  42e60c:	cbz	x0, 42e720 <ferror@plt+0x2bdb0>
  42e610:	ldp	x6, x5, [sp, #192]
  42e614:	mov	x9, #0x18                  	// #24
  42e618:	ldr	x8, [sp, #208]
  42e61c:	mov	w2, w9
  42e620:	ldr	x7, [sp, #232]
  42e624:	mov	w3, #0x0                   	// #0
  42e628:	ldr	x4, [sp, #264]
  42e62c:	cmp	x4, x23
  42e630:	b.ne	42e6c4 <ferror@plt+0x2bd54>  // b.any
  42e634:	mov	x1, x5
  42e638:	mov	x0, x21
  42e63c:	mov	x2, #0x18                  	// #24
  42e640:	adrp	x3, 42c000 <ferror@plt+0x29690>
  42e644:	add	x3, x3, #0x780
  42e648:	str	x5, [sp, #192]
  42e64c:	bl	4323ec <ferror@plt+0x2fa7c>
  42e650:	stp	xzr, x21, [x28]
  42e654:	add	x1, sp, #0x1e0
  42e658:	ldr	x5, [sp, #192]
  42e65c:	str	x5, [x28, #16]
  42e660:	mov	x0, x27
  42e664:	mov	x3, x20
  42e668:	mov	x2, x19
  42e66c:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e670:	ldr	x1, [sp, #248]
  42e674:	mov	w0, #0x1                   	// #1
  42e678:	str	w0, [x1]
  42e67c:	add	x1, x27, #0x30
  42e680:	ldr	w0, [x27, #8]
  42e684:	cbz	w0, 42e7a8 <ferror@plt+0x2be38>
  42e688:	mov	x0, x1
  42e68c:	ldar	x2, [x0]
  42e690:	cbz	x2, 42e948 <ferror@plt+0x2bfd8>
  42e694:	mov	x0, x2
  42e698:	b	42e68c <ferror@plt+0x2bd1c>
  42e69c:	ldrb	w1, [x4, #4]
  42e6a0:	and	w1, w1, #0xf
  42e6a4:	sub	w1, w1, #0x1
  42e6a8:	cmp	w1, #0x1
  42e6ac:	b.hi	42e6bc <ferror@plt+0x2bd4c>  // b.pmore
  42e6b0:	ldrh	w1, [x4, #6]
  42e6b4:	cbz	w1, 42e6bc <ferror@plt+0x2bd4c>
  42e6b8:	add	x5, x5, #0x1
  42e6bc:	add	x4, x4, #0x18
  42e6c0:	b	42e5d4 <ferror@plt+0x2bc64>
  42e6c4:	ldrb	w0, [x23, #4]
  42e6c8:	and	w0, w0, #0xf
  42e6cc:	sub	w0, w0, #0x1
  42e6d0:	cmp	w0, #0x1
  42e6d4:	b.hi	42e7a0 <ferror@plt+0x2be30>  // b.pmore
  42e6d8:	ldrh	w0, [x23, #6]
  42e6dc:	cbz	w0, 42e7a0 <ferror@plt+0x2be30>
  42e6e0:	ldr	w0, [x23]
  42e6e4:	cmp	x7, x0
  42e6e8:	b.hi	42e748 <ferror@plt+0x2bdd8>  // b.pmore
  42e6ec:	str	x6, [sp, #192]
  42e6f0:	mov	x0, x20
  42e6f4:	mov	w2, #0x0                   	// #0
  42e6f8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42e6fc:	add	x1, x1, #0xb1b
  42e700:	blr	x19
  42e704:	ldr	x6, [sp, #192]
  42e708:	mov	x4, x20
  42e70c:	mov	x3, x19
  42e710:	mov	x1, x21
  42e714:	mov	x0, x27
  42e718:	mov	x2, x6
  42e71c:	bl	42c004 <ferror@plt+0x29694>
  42e720:	mov	x4, x20
  42e724:	mov	x3, x19
  42e728:	mov	x1, x28
  42e72c:	mov	x0, x27
  42e730:	mov	x2, #0x18                  	// #24
  42e734:	bl	42c004 <ferror@plt+0x29694>
  42e738:	mov	w28, #0x1                   	// #1
  42e73c:	mov	w7, w28
  42e740:	mov	w21, w28
  42e744:	b	42e144 <ferror@plt+0x2b7d4>
  42e748:	umull	x1, w3, w2
  42e74c:	add	x0, x8, x0
  42e750:	add	x10, x21, x1
  42e754:	str	x0, [x21, x1]
  42e758:	ldr	x1, [x23, #8]
  42e75c:	cbz	x22, 42e788 <ferror@plt+0x2be18>
  42e760:	ldr	x0, [x22]
  42e764:	cmp	x0, x1
  42e768:	b.hi	42e788 <ferror@plt+0x2be18>  // b.pmore
  42e76c:	ldr	x9, [x22, #16]
  42e770:	add	x9, x0, x9
  42e774:	cmp	x9, x1
  42e778:	b.ls	42e788 <ferror@plt+0x2be18>  // b.plast
  42e77c:	sub	x1, x1, x0
  42e780:	ldr	x0, [x22, #8]
  42e784:	ldr	x1, [x0, x1]
  42e788:	add	w3, w3, #0x1
  42e78c:	ldr	x0, [sp, #240]
  42e790:	add	x1, x0, x1
  42e794:	str	x1, [x10, #8]
  42e798:	ldr	x0, [x23, #16]
  42e79c:	str	x0, [x10, #16]
  42e7a0:	add	x23, x23, #0x18
  42e7a4:	b	42e62c <ferror@plt+0x2bcbc>
  42e7a8:	ldr	x0, [x27, #48]
  42e7ac:	cbnz	x0, 42e93c <ferror@plt+0x2bfcc>
  42e7b0:	str	x28, [x1]
  42e7b4:	mov	w0, #0x1                   	// #1
  42e7b8:	str	w0, [sp, #192]
  42e7bc:	mov	x3, x20
  42e7c0:	mov	x2, x19
  42e7c4:	add	x1, sp, #0x1b0
  42e7c8:	mov	x0, x27
  42e7cc:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e7d0:	mov	x0, x27
  42e7d4:	mov	x3, x20
  42e7d8:	mov	x2, x19
  42e7dc:	add	x1, sp, #0x1c8
  42e7e0:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e7e4:	ldr	x0, [sp, #256]
  42e7e8:	cbz	x0, 42e9f0 <ferror@plt+0x2c080>
  42e7ec:	ldr	w21, [sp, #216]
  42e7f0:	mov	x5, #0x21                  	// #33
  42e7f4:	mov	x3, x20
  42e7f8:	mov	x2, x19
  42e7fc:	mov	x0, x27
  42e800:	add	x23, x5, w21, uxtw #1
  42e804:	mov	x1, x23
  42e808:	bl	42c0c0 <ferror@plt+0x29750>
  42e80c:	mov	x28, x0
  42e810:	cbz	x0, 42e9f0 <ferror@plt+0x2c080>
  42e814:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  42e818:	add	x0, x0, #0xb3c
  42e81c:	mov	w6, #0x2f                  	// #47
  42e820:	ldp	x2, x3, [x0]
  42e824:	stp	x2, x3, [x28]
  42e828:	ldr	x1, [x0, #16]
  42e82c:	str	x1, [x28, #16]
  42e830:	ldrb	w0, [x0, #24]
  42e834:	add	x1, x28, #0x19
  42e838:	mov	x2, #0x0                   	// #0
  42e83c:	strb	w0, [x28, #24]
  42e840:	cmp	x21, x2
  42e844:	b.hi	42e970 <ferror@plt+0x2c000>  // b.pmore
  42e848:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  42e84c:	add	x0, x0, #0xb56
  42e850:	strb	wzr, [x1, #6]
  42e854:	add	x3, sp, #0x2e0
  42e858:	ldr	w2, [x0]
  42e85c:	ldrh	w0, [x0, #4]
  42e860:	str	w2, [x1]
  42e864:	mov	x2, x20
  42e868:	strh	w0, [x1, #4]
  42e86c:	mov	x1, x19
  42e870:	mov	x0, x28
  42e874:	bl	42c65c <ferror@plt+0x29cec>
  42e878:	mov	w21, w0
  42e87c:	mov	x4, x20
  42e880:	mov	x3, x19
  42e884:	mov	x2, x23
  42e888:	mov	x1, x28
  42e88c:	mov	x0, x27
  42e890:	bl	42c004 <ferror@plt+0x29694>
  42e894:	tbnz	w21, #31, 42e9f0 <ferror@plt+0x2c080>
  42e898:	mov	x3, x20
  42e89c:	mov	x2, x19
  42e8a0:	add	x1, sp, #0x210
  42e8a4:	mov	x0, x27
  42e8a8:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e8ac:	cbz	w26, 42e8c4 <ferror@plt+0x2bf54>
  42e8b0:	mov	x3, x20
  42e8b4:	mov	x2, x19
  42e8b8:	add	x1, sp, #0x228
  42e8bc:	mov	x0, x27
  42e8c0:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e8c4:	ldr	w0, [sp, #184]
  42e8c8:	cbz	w0, 42e8e0 <ferror@plt+0x2bf70>
  42e8cc:	mov	x3, x20
  42e8d0:	mov	x2, x19
  42e8d4:	add	x1, sp, #0x240
  42e8d8:	mov	x0, x27
  42e8dc:	bl	42f3a0 <ferror@plt+0x2ca30>
  42e8e0:	ldp	x3, x7, [sp, #240]
  42e8e4:	mov	w0, #0x1                   	// #1
  42e8e8:	ldr	x6, [sp, #272]
  42e8ec:	str	w0, [sp, #24]
  42e8f0:	ldr	x0, [sp, #1184]
  42e8f4:	str	x0, [sp]
  42e8f8:	str	xzr, [sp, #8]
  42e8fc:	mov	w2, w21
  42e900:	str	wzr, [sp, #16]
  42e904:	mov	x5, x20
  42e908:	str	xzr, [sp, #32]
  42e90c:	mov	x4, x19
  42e910:	str	wzr, [sp, #40]
  42e914:	mov	x0, x27
  42e918:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x17198>
  42e91c:	add	x1, x1, #0xaab
  42e920:	bl	42dd80 <ferror@plt+0x2b410>
  42e924:	mov	w22, w0
  42e928:	mov	x2, x20
  42e92c:	mov	x1, x19
  42e930:	tbz	w0, #31, 42e9c4 <ferror@plt+0x2c054>
  42e934:	mov	w0, w21
  42e938:	b	42e9c8 <ferror@plt+0x2c058>
  42e93c:	mov	x1, x0
  42e940:	ldr	x0, [x0]
  42e944:	b	42e7ac <ferror@plt+0x2be3c>
  42e948:	ldxr	x2, [x0]
  42e94c:	cbnz	x2, 42e958 <ferror@plt+0x2bfe8>
  42e950:	stlxr	w3, x28, [x0]
  42e954:	cbnz	w3, 42e948 <ferror@plt+0x2bfd8>
  42e958:	dmb	ish
  42e95c:	cmp	x2, #0x0
  42e960:	b.eq	42e7b4 <ferror@plt+0x2be44>  // b.none
  42e964:	b	42e688 <ferror@plt+0x2bd18>
  42e968:	str	wzr, [sp, #192]
  42e96c:	b	42e7bc <ferror@plt+0x2be4c>
  42e970:	ldr	x0, [sp, #256]
  42e974:	ldrb	w0, [x0, x2]
  42e978:	lsr	w4, w0, #4
  42e97c:	and	w0, w0, #0xf
  42e980:	cmp	w4, #0x9
  42e984:	add	w7, w4, #0x30
  42e988:	add	w3, w4, #0x57
  42e98c:	add	w4, w0, #0x30
  42e990:	csel	w3, w3, w7, hi  // hi = pmore
  42e994:	cmp	w0, #0x9
  42e998:	strb	w3, [x1]
  42e99c:	add	w3, w0, #0x57
  42e9a0:	csel	w0, w3, w4, hi  // hi = pmore
  42e9a4:	strb	w0, [x1, #1]
  42e9a8:	cbz	x2, 42e9b8 <ferror@plt+0x2c048>
  42e9ac:	add	x1, x1, #0x2
  42e9b0:	add	x2, x2, #0x1
  42e9b4:	b	42e840 <ferror@plt+0x2bed0>
  42e9b8:	add	x1, x1, #0x3
  42e9bc:	sturb	w6, [x1, #-1]
  42e9c0:	b	42e9b0 <ferror@plt+0x2c040>
  42e9c4:	mov	w0, w24
  42e9c8:	bl	42c6f4 <ferror@plt+0x29d84>
  42e9cc:	mov	w0, w22
  42e9d0:	ldp	x29, x30, [sp, #80]
  42e9d4:	ldp	x19, x20, [sp, #96]
  42e9d8:	ldp	x21, x22, [sp, #112]
  42e9dc:	ldp	x23, x24, [sp, #128]
  42e9e0:	ldp	x25, x26, [sp, #144]
  42e9e4:	ldp	x27, x28, [sp, #160]
  42e9e8:	add	sp, sp, #0x4a0
  42e9ec:	ret
  42e9f0:	cbz	w25, 42ea08 <ferror@plt+0x2c098>
  42e9f4:	mov	x3, x20
  42e9f8:	mov	x2, x19
  42e9fc:	add	x1, sp, #0x210
  42ea00:	mov	x0, x27
  42ea04:	bl	42f3a0 <ferror@plt+0x2ca30>
  42ea08:	cbz	x22, 42ea20 <ferror@plt+0x2c0b0>
  42ea0c:	mov	x3, x20
  42ea10:	mov	x2, x19
  42ea14:	add	x1, x22, #0x18
  42ea18:	mov	x0, x27
  42ea1c:	bl	42f3a0 <ferror@plt+0x2ca30>
  42ea20:	ldr	x0, [sp, #280]
  42ea24:	cbz	x0, 42ea84 <ferror@plt+0x2c114>
  42ea28:	ldr	x1, [sp, #296]
  42ea2c:	mov	x2, x0
  42ea30:	mov	x4, x20
  42ea34:	mov	x3, x19
  42ea38:	mov	x0, x27
  42ea3c:	bl	42cd38 <ferror@plt+0x2a3c8>
  42ea40:	mov	w21, w0
  42ea44:	tbnz	w0, #31, 42ea84 <ferror@plt+0x2c114>
  42ea48:	ldr	w1, [sp, #292]
  42ea4c:	cbz	w1, 42e8b0 <ferror@plt+0x2bf40>
  42ea50:	add	x1, sp, #0x2e0
  42ea54:	bl	44a828 <_obstack_memory_used@@Base+0x109c0>
  42ea58:	tbz	w0, #31, 42eb3c <ferror@plt+0x2c1cc>
  42ea5c:	bl	4028c0 <__errno_location@plt>
  42ea60:	ldr	w2, [x0]
  42ea64:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42ea68:	mov	x0, x20
  42ea6c:	add	x1, x1, #0xb5d
  42ea70:	blr	x19
  42ea74:	mov	x2, x20
  42ea78:	mov	x1, x19
  42ea7c:	mov	w0, w21
  42ea80:	bl	42c6f4 <ferror@plt+0x29d84>
  42ea84:	cbz	w26, 42ea9c <ferror@plt+0x2c12c>
  42ea88:	mov	x3, x20
  42ea8c:	mov	x2, x19
  42ea90:	add	x1, sp, #0x228
  42ea94:	mov	x0, x27
  42ea98:	bl	42f3a0 <ferror@plt+0x2ca30>
  42ea9c:	ldr	x0, [sp, #224]
  42eaa0:	str	xzr, [sp, #392]
  42eaa4:	cbz	x0, 42ebc8 <ferror@plt+0x2c258>
  42eaa8:	ldr	x1, [sp, #296]
  42eaac:	mov	x2, x0
  42eab0:	mov	x4, x20
  42eab4:	mov	x3, x19
  42eab8:	mov	x0, x27
  42eabc:	bl	42cd38 <ferror@plt+0x2a3c8>
  42eac0:	mov	w21, w0
  42eac4:	tbnz	w0, #31, 42ebc8 <ferror@plt+0x2c258>
  42eac8:	mov	w2, w0
  42eacc:	ldr	w0, [sp, #312]
  42ead0:	str	w0, [sp, #40]
  42ead4:	mov	x5, x20
  42ead8:	ldr	x0, [sp, #304]
  42eadc:	str	x0, [sp, #32]
  42eae0:	ldp	x3, x7, [sp, #240]
  42eae4:	mov	w0, #0x1                   	// #1
  42eae8:	str	w0, [sp, #24]
  42eaec:	add	x0, sp, #0x188
  42eaf0:	ldr	x6, [sp, #272]
  42eaf4:	str	x0, [sp, #8]
  42eaf8:	ldr	x1, [sp, #296]
  42eafc:	mov	x4, x19
  42eb00:	ldr	x0, [sp, #1184]
  42eb04:	str	x0, [sp]
  42eb08:	str	wzr, [sp, #16]
  42eb0c:	mov	x0, x27
  42eb10:	bl	42dd80 <ferror@plt+0x2b410>
  42eb14:	mov	w22, w0
  42eb18:	mov	x3, x20
  42eb1c:	mov	x2, x19
  42eb20:	add	x1, sp, #0x240
  42eb24:	mov	x0, x27
  42eb28:	bl	42f3a0 <ferror@plt+0x2ca30>
  42eb2c:	tbz	w22, #31, 42ebe4 <ferror@plt+0x2c274>
  42eb30:	mov	x2, x20
  42eb34:	mov	x1, x19
  42eb38:	b	42e934 <ferror@plt+0x2bfc4>
  42eb3c:	ldr	x3, [sp, #784]
  42eb40:	add	x25, sp, #0x258
  42eb44:	mov	x6, x25
  42eb48:	mov	x5, x20
  42eb4c:	mov	x4, x19
  42eb50:	mov	w1, w21
  42eb54:	mov	x0, x27
  42eb58:	mov	x2, #0x0                   	// #0
  42eb5c:	bl	42f2e4 <ferror@plt+0x2c974>
  42eb60:	cbz	w0, 42ea74 <ferror@plt+0x2c104>
  42eb64:	ldr	x2, [sp, #600]
  42eb68:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  42eb6c:	ldr	x3, [sp, #784]
  42eb70:	add	x0, x0, #0xbf4
  42eb74:	add	x0, x0, #0x4e0
  42eb78:	mov	w22, #0xffffffff            	// #-1
  42eb7c:	add	x3, x2, x3
  42eb80:	cmp	x3, x2
  42eb84:	b.hi	42ebb0 <ferror@plt+0x2c240>  // b.pmore
  42eb88:	mov	x0, x27
  42eb8c:	mov	x3, x20
  42eb90:	mov	x2, x19
  42eb94:	mov	x1, x25
  42eb98:	bl	42f3a0 <ferror@plt+0x2ca30>
  42eb9c:	mvn	w22, w22
  42eba0:	ldr	w0, [sp, #292]
  42eba4:	cmp	w0, w22
  42eba8:	b.eq	42e8b0 <ferror@plt+0x2bf40>  // b.none
  42ebac:	b	42ea74 <ferror@plt+0x2c104>
  42ebb0:	ldrb	w1, [x2], #1
  42ebb4:	eor	w1, w1, w22
  42ebb8:	and	x1, x1, #0xff
  42ebbc:	ldr	w1, [x0, x1, lsl #2]
  42ebc0:	eor	w22, w1, w22, lsr #8
  42ebc4:	b	42eb80 <ferror@plt+0x2c210>
  42ebc8:	ldr	w0, [sp, #184]
  42ebcc:	cbz	w0, 42ebe4 <ferror@plt+0x2c274>
  42ebd0:	mov	x3, x20
  42ebd4:	mov	x2, x19
  42ebd8:	add	x1, sp, #0x240
  42ebdc:	mov	x0, x27
  42ebe0:	bl	42f3a0 <ferror@plt+0x2ca30>
  42ebe4:	add	x21, sp, #0x360
  42ebe8:	mov	w22, #0xa                   	// #10
  42ebec:	mov	x1, x21
  42ebf0:	mov	x3, #0x0                   	// #0
  42ebf4:	mov	x25, #0x0                   	// #0
  42ebf8:	ldr	x2, [x1, #8]
  42ebfc:	cbz	x2, 42ec1c <ferror@plt+0x2c2ac>
  42ec00:	ldr	x0, [x1]
  42ec04:	cbz	x25, 42ec54 <ferror@plt+0x2c2e4>
  42ec08:	cmp	x0, x25
  42ec0c:	csel	x25, x25, x0, ge  // ge = tcont
  42ec10:	add	x0, x0, x2
  42ec14:	cmp	x3, x0
  42ec18:	csel	x3, x3, x0, ge  // ge = tcont
  42ec1c:	add	x1, x1, #0x20
  42ec20:	subs	w22, w22, #0x1
  42ec24:	b.ne	42ebf8 <ferror@plt+0x2c288>  // b.any
  42ec28:	cmp	x25, #0x0
  42ec2c:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  42ec30:	b.ne	42ec5c <ferror@plt+0x2c2ec>  // b.any
  42ec34:	mov	x2, x20
  42ec38:	mov	x1, x19
  42ec3c:	mov	w0, w24
  42ec40:	bl	42c6f4 <ferror@plt+0x29d84>
  42ec44:	mov	w28, w0
  42ec48:	cbz	w0, 42ef88 <ferror@plt+0x2c618>
  42ec4c:	mov	w22, #0x1                   	// #1
  42ec50:	b	42e9cc <ferror@plt+0x2c05c>
  42ec54:	mov	x25, x0
  42ec58:	b	42ec10 <ferror@plt+0x2c2a0>
  42ec5c:	add	x26, sp, #0x2e0
  42ec60:	mov	x5, x20
  42ec64:	mov	x6, x26
  42ec68:	mov	x4, x19
  42ec6c:	sub	x3, x3, x25
  42ec70:	mov	x2, x25
  42ec74:	mov	w1, w24
  42ec78:	mov	x0, x27
  42ec7c:	bl	42f2e4 <ferror@plt+0x2c974>
  42ec80:	mov	w28, w0
  42ec84:	cbz	w0, 42ef88 <ferror@plt+0x2c618>
  42ec88:	mov	x2, x20
  42ec8c:	mov	x1, x19
  42ec90:	mov	w0, w24
  42ec94:	bl	42c6f4 <ferror@plt+0x29d84>
  42ec98:	cbz	w0, 42ef84 <ferror@plt+0x2c614>
  42ec9c:	ldr	x3, [sp, #736]
  42eca0:	mov	x0, x21
  42eca4:	mov	w2, #0x0                   	// #0
  42eca8:	ldr	x1, [x0, #8]
  42ecac:	cbnz	x1, 42eeb8 <ferror@plt+0x2c548>
  42ecb0:	str	xzr, [x0, #16]
  42ecb4:	add	w2, w2, #0x1
  42ecb8:	add	x0, x0, #0x20
  42ecbc:	cmp	w2, #0xa
  42ecc0:	b.ne	42eca8 <ferror@plt+0x2c338>  // b.any
  42ecc4:	adrp	x25, 454000 <_obstack_memory_used@@Base+0x1a198>
  42ecc8:	add	x0, x25, #0xb63
  42eccc:	mov	x28, x21
  42ecd0:	str	x0, [sp, #184]
  42ecd4:	add	x0, sp, #0x258
  42ecd8:	mov	w24, #0x5                   	// #5
  42ecdc:	mov	x23, #0x0                   	// #0
  42ece0:	str	x0, [sp, #200]
  42ece4:	add	x0, sp, #0x190
  42ece8:	str	x0, [sp, #208]
  42ecec:	ldr	x0, [x28, #8]
  42ecf0:	cbnz	x0, 42ed40 <ferror@plt+0x2c3d0>
  42ecf4:	ldr	x25, [x28, #168]
  42ecf8:	cbz	x25, 42ed40 <ferror@plt+0x2c3d0>
  42ecfc:	cbnz	x23, 42ed1c <ferror@plt+0x2c3ac>
  42ed00:	mov	x3, x20
  42ed04:	mov	x2, x19
  42ed08:	mov	x0, x27
  42ed0c:	mov	x1, #0x13b4                	// #5044
  42ed10:	bl	42c0c0 <ferror@plt+0x29750>
  42ed14:	mov	x23, x0
  42ed18:	cbz	x0, 42ef18 <ferror@plt+0x2c5a8>
  42ed1c:	str	xzr, [sp, #400]
  42ed20:	cmp	x25, #0xb
  42ed24:	str	xzr, [sp, #600]
  42ed28:	b.hi	42eed4 <ferror@plt+0x2c564>  // b.pmore
  42ed2c:	ldr	x0, [sp, #400]
  42ed30:	str	x0, [x28, #16]
  42ed34:	ldr	x0, [sp, #600]
  42ed38:	str	x0, [x28, #8]
  42ed3c:	str	wzr, [x28, #24]
  42ed40:	add	x28, x28, #0x20
  42ed44:	subs	w24, w24, #0x1
  42ed48:	b.ne	42ecec <ferror@plt+0x2c37c>  // b.any
  42ed4c:	mov	w0, #0x5                   	// #5
  42ed50:	str	w0, [sp, #184]
  42ed54:	ldr	x28, [x21, #8]
  42ed58:	cbz	x28, 42edec <ferror@plt+0x2c47c>
  42ed5c:	ldr	w0, [x21, #24]
  42ed60:	cbz	w0, 42edec <ferror@plt+0x2c47c>
  42ed64:	cbnz	x23, 42ed84 <ferror@plt+0x2c414>
  42ed68:	mov	x3, x20
  42ed6c:	mov	x2, x19
  42ed70:	mov	x0, x27
  42ed74:	mov	x1, #0x13b4                	// #5044
  42ed78:	bl	42c0c0 <ferror@plt+0x29750>
  42ed7c:	mov	x23, x0
  42ed80:	cbz	x0, 42ef18 <ferror@plt+0x2c5a8>
  42ed84:	cmp	x28, #0x17
  42ed88:	b.ls	42ef78 <ferror@plt+0x2c608>  // b.plast
  42ed8c:	ldr	x24, [x21, #16]
  42ed90:	ldr	w8, [x24]
  42ed94:	cmp	w8, #0x1
  42ed98:	b.ne	42ef78 <ferror@plt+0x2c608>  // b.any
  42ed9c:	ldr	x1, [x24, #8]
  42eda0:	mov	x3, x20
  42eda4:	mov	x2, x19
  42eda8:	mov	x0, x27
  42edac:	str	w8, [sp, #200]
  42edb0:	bl	42c0c0 <ferror@plt+0x29750>
  42edb4:	mov	x25, x0
  42edb8:	ldr	w8, [sp, #200]
  42edbc:	cbz	x0, 42efa4 <ferror@plt+0x2c634>
  42edc0:	ldr	x4, [x24, #8]
  42edc4:	mov	x3, x0
  42edc8:	mov	x2, x23
  42edcc:	sub	x1, x28, #0x18
  42edd0:	add	x0, x24, #0x18
  42edd4:	bl	42cff4 <ferror@plt+0x2a684>
  42edd8:	cbz	w0, 42ef78 <ferror@plt+0x2c608>
  42eddc:	ldr	x0, [x24, #8]
  42ede0:	sub	w22, w22, #0x1
  42ede4:	stp	x0, x25, [x21, #8]
  42ede8:	str	wzr, [x21, #24]
  42edec:	ldr	w0, [sp, #184]
  42edf0:	add	x21, x21, #0x20
  42edf4:	subs	w0, w0, #0x1
  42edf8:	str	w0, [sp, #184]
  42edfc:	b.ne	42ed54 <ferror@plt+0x2c3e4>  // b.any
  42ee00:	cbz	x23, 42ee1c <ferror@plt+0x2c4ac>
  42ee04:	mov	x4, x20
  42ee08:	mov	x3, x19
  42ee0c:	mov	x1, x23
  42ee10:	mov	x0, x27
  42ee14:	mov	x2, #0x13b4                	// #5044
  42ee18:	bl	42c004 <ferror@plt+0x29694>
  42ee1c:	cbnz	w22, 42ef24 <ferror@plt+0x2c5b4>
  42ee20:	mov	w28, #0x0                   	// #0
  42ee24:	mov	x3, x20
  42ee28:	mov	x2, x19
  42ee2c:	mov	x1, x26
  42ee30:	mov	x0, x27
  42ee34:	bl	42f3a0 <ferror@plt+0x2ca30>
  42ee38:	add	x0, sp, #0x368
  42ee3c:	ldr	x1, [sp, #240]
  42ee40:	ldp	x3, x2, [x0]
  42ee44:	ldp	x5, x4, [x0, #32]
  42ee48:	stp	x19, x20, [sp, #48]
  42ee4c:	ldr	x0, [sp, #1192]
  42ee50:	str	x0, [sp, #72]
  42ee54:	ldr	x0, [sp, #272]
  42ee58:	str	x0, [sp, #64]
  42ee5c:	ldr	x0, [sp, #392]
  42ee60:	str	x0, [sp, #40]
  42ee64:	ldr	w0, [sp, #316]
  42ee68:	ldr	x7, [sp, #936]
  42ee6c:	cmp	w0, #0x2
  42ee70:	cset	w0, eq  // eq = none
  42ee74:	str	w0, [sp, #32]
  42ee78:	ldr	x0, [sp, #1000]
  42ee7c:	str	x0, [sp, #24]
  42ee80:	ldr	x0, [sp, #1008]
  42ee84:	str	x0, [sp, #16]
  42ee88:	ldr	x6, [sp, #944]
  42ee8c:	ldr	x0, [sp, #968]
  42ee90:	str	x0, [sp, #8]
  42ee94:	ldr	x0, [sp, #976]
  42ee98:	str	x0, [sp]
  42ee9c:	mov	x0, x27
  42eea0:	bl	431cbc <ferror@plt+0x2f34c>
  42eea4:	cbz	w0, 42ef1c <ferror@plt+0x2c5ac>
  42eea8:	ldr	x0, [sp, #1184]
  42eeac:	mov	w22, #0x1                   	// #1
  42eeb0:	str	w22, [x0]
  42eeb4:	b	42e9cc <ferror@plt+0x2c05c>
  42eeb8:	ldr	x1, [x0]
  42eebc:	cmp	w2, #0x5
  42eec0:	cinc	w22, w22, cc  // cc = lo, ul, last
  42eec4:	sub	x1, x1, x25
  42eec8:	add	x1, x3, x1
  42eecc:	str	x1, [x0, #16]
  42eed0:	b	42ecb4 <ferror@plt+0x2c344>
  42eed4:	ldr	x11, [x28, #176]
  42eed8:	mov	x2, #0x4                   	// #4
  42eedc:	ldr	x1, [sp, #184]
  42eee0:	mov	x0, x11
  42eee4:	str	x11, [sp, #216]
  42eee8:	bl	402690 <memcmp@plt>
  42eeec:	cbnz	w0, 42ed2c <ferror@plt+0x2c3bc>
  42eef0:	ldp	x7, x6, [sp, #200]
  42eef4:	mov	x5, x20
  42eef8:	ldr	x11, [sp, #216]
  42eefc:	mov	x4, x19
  42ef00:	mov	x3, x23
  42ef04:	mov	x2, x25
  42ef08:	mov	x0, x27
  42ef0c:	mov	x1, x11
  42ef10:	bl	42dcd4 <ferror@plt+0x2b364>
  42ef14:	cbnz	w0, 42ed2c <ferror@plt+0x2c3bc>
  42ef18:	mov	w28, #0x1                   	// #1
  42ef1c:	mov	w24, #0xffffffff            	// #-1
  42ef20:	b	42ef88 <ferror@plt+0x2c618>
  42ef24:	mov	w28, #0x1                   	// #1
  42ef28:	b	42ee38 <ferror@plt+0x2c4c8>
  42ef2c:	mov	w22, #0xffffffff            	// #-1
  42ef30:	b	42e9cc <ferror@plt+0x2c05c>
  42ef34:	mov	w26, #0x0                   	// #0
  42ef38:	mov	w25, #0x0                   	// #0
  42ef3c:	mov	w28, #0x0                   	// #0
  42ef40:	mov	w7, #0x0                   	// #0
  42ef44:	mov	x22, #0x0                   	// #0
  42ef48:	str	wzr, [sp, #184]
  42ef4c:	b	42e144 <ferror@plt+0x2b7d4>
  42ef50:	mov	w28, #0x0                   	// #0
  42ef54:	mov	w25, #0x1                   	// #1
  42ef58:	b	42e140 <ferror@plt+0x2b7d0>
  42ef5c:	mov	w26, #0x0                   	// #0
  42ef60:	mov	w28, #0x0                   	// #0
  42ef64:	b	42e140 <ferror@plt+0x2b7d0>
  42ef68:	mov	w28, #0x0                   	// #0
  42ef6c:	b	42e144 <ferror@plt+0x2b7d4>
  42ef70:	mov	w7, #0x1                   	// #1
  42ef74:	b	42e140 <ferror@plt+0x2b7d0>
  42ef78:	mov	x0, #0x0                   	// #0
  42ef7c:	mov	x25, #0x0                   	// #0
  42ef80:	b	42ede0 <ferror@plt+0x2c470>
  42ef84:	mov	w28, #0x1                   	// #1
  42ef88:	ldr	w0, [sp, #192]
  42ef8c:	cbz	w0, 42de9c <ferror@plt+0x2b52c>
  42ef90:	mov	w26, #0x0                   	// #0
  42ef94:	mov	x22, #0x0                   	// #0
  42ef98:	mov	w25, #0x0                   	// #0
  42ef9c:	str	wzr, [sp, #184]
  42efa0:	b	42e1a0 <ferror@plt+0x2b830>
  42efa4:	mov	w28, w8
  42efa8:	b	42ef1c <ferror@plt+0x2c5ac>
  42efac:	sub	sp, sp, #0x70
  42efb0:	stp	x29, x30, [sp, #48]
  42efb4:	add	x29, sp, #0x30
  42efb8:	ldr	x1, [x0, #8]
  42efbc:	stp	x19, x20, [sp, #64]
  42efc0:	mov	x20, x0
  42efc4:	ldr	w0, [x2, #56]
  42efc8:	mov	x19, x2
  42efcc:	str	x21, [sp, #80]
  42efd0:	cmn	w0, #0x1
  42efd4:	cbz	x1, 42efe0 <ferror@plt+0x2c670>
  42efd8:	ldrb	w1, [x1]
  42efdc:	cbnz	w1, 42f050 <ferror@plt+0x2c6e0>
  42efe0:	b.eq	42f07c <ferror@plt+0x2c70c>  // b.none
  42efe4:	ldr	x21, [x19, #48]
  42efe8:	mov	w1, #0xffffffff            	// #-1
  42efec:	str	w1, [x19, #56]
  42eff0:	mov	w2, w0
  42eff4:	add	x1, sp, #0x64
  42eff8:	ldp	x0, x4, [x19]
  42effc:	add	x6, sp, #0x68
  42f000:	ldr	x3, [x20]
  42f004:	ldr	x5, [x19, #16]
  42f008:	ldr	x7, [x19, #32]
  42f00c:	stp	x1, xzr, [sp]
  42f010:	mov	x1, x21
  42f014:	str	wzr, [sp, #16]
  42f018:	str	wzr, [sp, #24]
  42f01c:	str	xzr, [sp, #32]
  42f020:	str	wzr, [sp, #40]
  42f024:	bl	42dd80 <ferror@plt+0x2b410>
  42f028:	cbz	w0, 42f07c <ferror@plt+0x2c70c>
  42f02c:	ldr	w0, [sp, #100]
  42f030:	cbz	w0, 42f07c <ferror@plt+0x2c70c>
  42f034:	ldr	x0, [x19, #40]
  42f038:	mov	w1, #0x1                   	// #1
  42f03c:	str	w1, [x0]
  42f040:	ldr	x0, [x19, #24]
  42f044:	ldr	x1, [sp, #104]
  42f048:	str	x1, [x0]
  42f04c:	b	42f07c <ferror@plt+0x2c70c>
  42f050:	b.eq	42f064 <ferror@plt+0x2c6f4>  // b.none
  42f054:	ldp	x1, x2, [x2, #8]
  42f058:	bl	42c6f4 <ferror@plt+0x29d84>
  42f05c:	mov	w0, #0xffffffff            	// #-1
  42f060:	str	w0, [x19, #56]
  42f064:	ldp	x1, x2, [x19, #8]
  42f068:	add	x3, sp, #0x60
  42f06c:	ldr	x21, [x20, #8]
  42f070:	mov	x0, x21
  42f074:	bl	42c65c <ferror@plt+0x29cec>
  42f078:	tbz	w0, #31, 42eff0 <ferror@plt+0x2c680>
  42f07c:	mov	w0, #0x0                   	// #0
  42f080:	ldp	x29, x30, [sp, #48]
  42f084:	ldp	x19, x20, [sp, #64]
  42f088:	ldr	x21, [sp, #80]
  42f08c:	add	sp, sp, #0x70
  42f090:	ret
  42f094:	stp	x29, x30, [sp, #-80]!
  42f098:	mov	x29, sp
  42f09c:	stp	x21, x22, [sp, #32]
  42f0a0:	mov	x21, x3
  42f0a4:	mov	x22, x4
  42f0a8:	mov	x3, x4
  42f0ac:	stp	x19, x20, [sp, #16]
  42f0b0:	mov	x19, x1
  42f0b4:	mov	x1, #0x13b4                	// #5044
  42f0b8:	stp	x23, x24, [sp, #48]
  42f0bc:	mov	x24, x2
  42f0c0:	mov	x23, x0
  42f0c4:	mov	x2, x21
  42f0c8:	stp	x25, x26, [sp, #64]
  42f0cc:	mov	x25, x5
  42f0d0:	mov	x26, x6
  42f0d4:	bl	42c0c0 <ferror@plt+0x29750>
  42f0d8:	cbz	x0, 42f16c <ferror@plt+0x2c7fc>
  42f0dc:	str	xzr, [x25]
  42f0e0:	mov	x20, x0
  42f0e4:	str	xzr, [x26]
  42f0e8:	cmp	x24, #0xb
  42f0ec:	b.ls	42f164 <ferror@plt+0x2c7f4>  // b.plast
  42f0f0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42f0f4:	mov	x0, x19
  42f0f8:	add	x1, x1, #0xb63
  42f0fc:	mov	x2, #0x4                   	// #4
  42f100:	bl	402690 <memcmp@plt>
  42f104:	cbnz	w0, 42f164 <ferror@plt+0x2c7f4>
  42f108:	mov	x1, x19
  42f10c:	mov	x7, x26
  42f110:	mov	x6, x25
  42f114:	mov	x5, x22
  42f118:	mov	x4, x21
  42f11c:	mov	x3, x20
  42f120:	mov	x2, x24
  42f124:	mov	x0, x23
  42f128:	bl	42dcd4 <ferror@plt+0x2b364>
  42f12c:	mov	w19, w0
  42f130:	mov	x4, x22
  42f134:	mov	x3, x21
  42f138:	mov	x1, x20
  42f13c:	mov	x0, x23
  42f140:	mov	x2, #0x13b4                	// #5044
  42f144:	bl	42c004 <ferror@plt+0x29694>
  42f148:	mov	w0, w19
  42f14c:	ldp	x19, x20, [sp, #16]
  42f150:	ldp	x21, x22, [sp, #32]
  42f154:	ldp	x23, x24, [sp, #48]
  42f158:	ldp	x25, x26, [sp, #64]
  42f15c:	ldp	x29, x30, [sp], #80
  42f160:	ret
  42f164:	mov	w19, #0x1                   	// #1
  42f168:	b	42f130 <ferror@plt+0x2c7c0>
  42f16c:	mov	w19, #0x0                   	// #0
  42f170:	b	42f148 <ferror@plt+0x2c7d8>
  42f174:	sub	sp, sp, #0xe0
  42f178:	stp	x29, x30, [sp, #48]
  42f17c:	add	x29, sp, #0x30
  42f180:	stp	x23, x24, [sp, #96]
  42f184:	mov	x23, x3
  42f188:	mov	x24, x1
  42f18c:	stp	x27, x28, [sp, #128]
  42f190:	adrp	x28, 42c000 <ferror@plt+0x29690>
  42f194:	add	x3, x28, #0x740
  42f198:	str	wzr, [sp, #24]
  42f19c:	add	x27, sp, #0x98
  42f1a0:	str	xzr, [sp, #32]
  42f1a4:	mov	x6, x27
  42f1a8:	str	wzr, [sp, #40]
  42f1ac:	stp	x25, x26, [sp, #112]
  42f1b0:	add	x25, sp, #0x94
  42f1b4:	add	x26, sp, #0x90
  42f1b8:	stp	x25, xzr, [sp]
  42f1bc:	mov	x7, x26
  42f1c0:	str	x3, [sp, #152]
  42f1c4:	mov	w3, #0x1                   	// #1
  42f1c8:	str	w3, [sp, #16]
  42f1cc:	mov	x3, #0x0                   	// #0
  42f1d0:	stp	x19, x20, [sp, #64]
  42f1d4:	mov	x20, x5
  42f1d8:	mov	x19, x0
  42f1dc:	mov	x5, x4
  42f1e0:	stp	x21, x22, [sp, #80]
  42f1e4:	mov	x22, x4
  42f1e8:	mov	w21, w2
  42f1ec:	mov	x4, x23
  42f1f0:	bl	42dd80 <ferror@plt+0x2b410>
  42f1f4:	cbz	w0, 42f2a4 <ferror@plt+0x2c934>
  42f1f8:	cmp	w0, #0x0
  42f1fc:	add	x1, sp, #0xa0
  42f200:	csinv	w21, w21, wzr, lt  // lt = tstop
  42f204:	adrp	x0, 42e000 <ferror@plt+0x2b690>
  42f208:	add	x0, x0, #0xfac
  42f20c:	stp	x19, x23, [sp, #160]
  42f210:	stp	x22, x27, [sp, #176]
  42f214:	stp	x26, x25, [sp, #192]
  42f218:	str	x24, [sp, #208]
  42f21c:	str	w21, [sp, #216]
  42f220:	bl	402710 <dl_iterate_phdr@plt>
  42f224:	ldr	w0, [x19, #8]
  42f228:	ldr	w1, [sp, #144]
  42f22c:	cbnz	w0, 42f25c <ferror@plt+0x2c8ec>
  42f230:	cbz	w1, 42f248 <ferror@plt+0x2c8d8>
  42f234:	adrp	x0, 42c000 <ferror@plt+0x29690>
  42f238:	add	x0, x0, #0xb74
  42f23c:	str	x0, [x19, #40]
  42f240:	ldr	x0, [x19, #24]
  42f244:	b	42f280 <ferror@plt+0x2c910>
  42f248:	ldr	x0, [x19, #40]
  42f24c:	cbnz	x0, 42f240 <ferror@plt+0x2c8d0>
  42f250:	adrp	x0, 42c000 <ferror@plt+0x29690>
  42f254:	add	x0, x0, #0x768
  42f258:	b	42f23c <ferror@plt+0x2c8cc>
  42f25c:	add	x0, x19, #0x28
  42f260:	cbz	w1, 42f2c4 <ferror@plt+0x2c954>
  42f264:	adrp	x1, 42c000 <ferror@plt+0x29690>
  42f268:	add	x1, x1, #0xb74
  42f26c:	stlr	x1, [x0]
  42f270:	ldr	w0, [x19, #8]
  42f274:	cbz	w0, 42f240 <ferror@plt+0x2c8d0>
  42f278:	add	x19, x19, #0x18
  42f27c:	ldar	x0, [x19]
  42f280:	str	x0, [x20]
  42f284:	ldr	x0, [x20]
  42f288:	cbz	x0, 42f298 <ferror@plt+0x2c928>
  42f28c:	add	x28, x28, #0x740
  42f290:	cmp	x0, x28
  42f294:	b.ne	42f2a0 <ferror@plt+0x2c930>  // b.any
  42f298:	ldr	x0, [sp, #152]
  42f29c:	str	x0, [x20]
  42f2a0:	mov	w0, #0x1                   	// #1
  42f2a4:	ldp	x29, x30, [sp, #48]
  42f2a8:	ldp	x19, x20, [sp, #64]
  42f2ac:	ldp	x21, x22, [sp, #80]
  42f2b0:	ldp	x23, x24, [sp, #96]
  42f2b4:	ldp	x25, x26, [sp, #112]
  42f2b8:	ldp	x27, x28, [sp, #128]
  42f2bc:	add	sp, sp, #0xe0
  42f2c0:	ret
  42f2c4:	adrp	x1, 42c000 <ferror@plt+0x29690>
  42f2c8:	add	x1, x1, #0x768
  42f2cc:	ldxr	x2, [x0]
  42f2d0:	cbnz	x2, 42f2dc <ferror@plt+0x2c96c>
  42f2d4:	stlxr	w3, x1, [x0]
  42f2d8:	cbnz	w3, 42f2cc <ferror@plt+0x2c95c>
  42f2dc:	dmb	ish
  42f2e0:	b	42f270 <ferror@plt+0x2c900>
  42f2e4:	stp	x29, x30, [sp, #-80]!
  42f2e8:	mov	x29, sp
  42f2ec:	stp	x19, x20, [sp, #16]
  42f2f0:	sub	x19, x3, #0x1
  42f2f4:	stp	x21, x22, [sp, #32]
  42f2f8:	mov	x21, x4
  42f2fc:	mov	x22, x5
  42f300:	stp	x23, x24, [sp, #48]
  42f304:	mov	x24, x2
  42f308:	mov	x23, x6
  42f30c:	str	x25, [sp, #64]
  42f310:	mov	w25, w1
  42f314:	bl	4025b0 <getpagesize@plt>
  42f318:	sxtw	x0, w0
  42f31c:	mov	w4, w25
  42f320:	mov	w3, #0x2                   	// #2
  42f324:	mov	w2, #0x1                   	// #1
  42f328:	udiv	x20, x24, x0
  42f32c:	msub	w20, w20, w0, w24
  42f330:	add	x1, x0, x20
  42f334:	neg	x0, x0
  42f338:	add	x19, x19, x1
  42f33c:	sub	x5, x24, x20
  42f340:	and	x19, x0, x19
  42f344:	mov	x0, #0x0                   	// #0
  42f348:	mov	x1, x19
  42f34c:	bl	4026f0 <mmap@plt>
  42f350:	cmn	x0, #0x1
  42f354:	b.ne	42f38c <ferror@plt+0x2ca1c>  // b.any
  42f358:	bl	4028c0 <__errno_location@plt>
  42f35c:	ldr	w2, [x0]
  42f360:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  42f364:	mov	x0, x22
  42f368:	add	x1, x1, #0x908
  42f36c:	blr	x21
  42f370:	mov	w0, #0x0                   	// #0
  42f374:	ldp	x19, x20, [sp, #16]
  42f378:	ldp	x21, x22, [sp, #32]
  42f37c:	ldp	x23, x24, [sp, #48]
  42f380:	ldr	x25, [sp, #64]
  42f384:	ldp	x29, x30, [sp], #80
  42f388:	ret
  42f38c:	add	x20, x0, x20
  42f390:	stp	x20, x0, [x23]
  42f394:	mov	w0, #0x1                   	// #1
  42f398:	str	x19, [x23, #16]
  42f39c:	b	42f374 <ferror@plt+0x2ca04>
  42f3a0:	mov	x4, x1
  42f3a4:	stp	x29, x30, [sp, #-32]!
  42f3a8:	mov	x29, sp
  42f3ac:	ldr	x0, [x4, #8]
  42f3b0:	stp	x19, x20, [sp, #16]
  42f3b4:	mov	x19, x2
  42f3b8:	ldr	x1, [x1, #16]
  42f3bc:	mov	x20, x3
  42f3c0:	bl	402790 <munmap@plt>
  42f3c4:	tbz	w0, #31, 42f3ec <ferror@plt+0x2ca7c>
  42f3c8:	bl	4028c0 <__errno_location@plt>
  42f3cc:	ldr	w2, [x0]
  42f3d0:	mov	x16, x19
  42f3d4:	mov	x0, x20
  42f3d8:	ldp	x19, x20, [sp, #16]
  42f3dc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  42f3e0:	ldp	x29, x30, [sp], #32
  42f3e4:	add	x1, x1, #0x4d4
  42f3e8:	br	x16
  42f3ec:	ldp	x19, x20, [sp, #16]
  42f3f0:	ldp	x29, x30, [sp], #32
  42f3f4:	ret
  42f3f8:	sub	w1, w1, #0x1
  42f3fc:	cmp	w1, #0x7
  42f400:	b.hi	42f444 <ferror@plt+0x2cad4>  // b.pmore
  42f404:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x1b198>
  42f408:	add	x2, x2, #0x4dc
  42f40c:	ldrb	w1, [x2, w1, uxtw]
  42f410:	adr	x2, 42f41c <ferror@plt+0x2caac>
  42f414:	add	x1, x2, w1, sxtb #2
  42f418:	br	x1
  42f41c:	cmp	x0, #0xff
  42f420:	cset	w0, eq  // eq = none
  42f424:	ret
  42f428:	mov	x1, #0xffff                	// #65535
  42f42c:	cmp	x0, x1
  42f430:	b	42f420 <ferror@plt+0x2cab0>
  42f434:	mov	x1, #0xffffffff            	// #4294967295
  42f438:	b	42f42c <ferror@plt+0x2cabc>
  42f43c:	cmn	x0, #0x1
  42f440:	b	42f420 <ferror@plt+0x2cab0>
  42f444:	mov	w0, #0x0                   	// #0
  42f448:	b	42f424 <ferror@plt+0x2cab4>
  42f44c:	ldr	x1, [x1]
  42f450:	ldr	x0, [x0]
  42f454:	ldr	x2, [x1, #24]
  42f458:	cmp	x2, x0
  42f45c:	b.hi	42f470 <ferror@plt+0x2cb00>  // b.pmore
  42f460:	ldr	x1, [x1, #32]
  42f464:	cmp	x1, x0
  42f468:	cset	w0, ls  // ls = plast
  42f46c:	ret
  42f470:	mov	w0, #0xffffffff            	// #-1
  42f474:	b	42f46c <ferror@plt+0x2cafc>
  42f478:	ldr	x0, [x0]
  42f47c:	ldr	x2, [x1]
  42f480:	cmp	x2, x0
  42f484:	b.hi	42f498 <ferror@plt+0x2cb28>  // b.pmore
  42f488:	ldr	x1, [x1, #8]
  42f48c:	cmp	x1, x0
  42f490:	cset	w0, ls  // ls = plast
  42f494:	ret
  42f498:	mov	w0, #0xffffffff            	// #-1
  42f49c:	b	42f494 <ferror@plt+0x2cb24>
  42f4a0:	ldr	x0, [x0]
  42f4a4:	ldr	x2, [x1]
  42f4a8:	cmp	x2, x0
  42f4ac:	b.hi	42f4c0 <ferror@plt+0x2cb50>  // b.pmore
  42f4b0:	ldr	x1, [x1, #8]
  42f4b4:	cmp	x1, x0
  42f4b8:	cset	w0, ls  // ls = plast
  42f4bc:	ret
  42f4c0:	mov	w0, #0xffffffff            	// #-1
  42f4c4:	b	42f4bc <ferror@plt+0x2cb4c>
  42f4c8:	ldr	x0, [x0]
  42f4cc:	ldr	x2, [x1]
  42f4d0:	cmp	x2, x0
  42f4d4:	b.hi	42f4e8 <ferror@plt+0x2cb78>  // b.pmore
  42f4d8:	ldr	x1, [x1, #24]
  42f4dc:	cmp	x1, x0
  42f4e0:	cset	w0, ls  // ls = plast
  42f4e4:	ret
  42f4e8:	mov	w0, #0xffffffff            	// #-1
  42f4ec:	b	42f4e4 <ferror@plt+0x2cb74>
  42f4f0:	ldr	x2, [x0]
  42f4f4:	ldr	x1, [x1]
  42f4f8:	cmp	x2, x1
  42f4fc:	cset	w0, hi  // hi = pmore
  42f500:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
  42f504:	ret
  42f508:	stp	x29, x30, [sp, #-80]!
  42f50c:	mov	x29, sp
  42f510:	stp	x21, x22, [sp, #32]
  42f514:	mov	x21, x2
  42f518:	ldr	x2, [x1, #32]
  42f51c:	stp	x19, x20, [sp, #16]
  42f520:	str	x23, [sp, #48]
  42f524:	str	x0, [sp, #72]
  42f528:	cbnz	x2, 42f544 <ferror@plt+0x2cbd4>
  42f52c:	mov	w0, #0x0                   	// #0
  42f530:	ldp	x19, x20, [sp, #16]
  42f534:	ldp	x21, x22, [sp, #32]
  42f538:	ldr	x23, [sp, #48]
  42f53c:	ldp	x29, x30, [sp], #80
  42f540:	ret
  42f544:	mov	x22, x1
  42f548:	mov	x23, x3
  42f54c:	ldr	x1, [x1, #24]
  42f550:	mov	x20, x4
  42f554:	mov	x19, x5
  42f558:	add	x0, sp, #0x48
  42f55c:	adrp	x4, 42f000 <ferror@plt+0x2c690>
  42f560:	mov	x3, #0x18                  	// #24
  42f564:	add	x4, x4, #0x478
  42f568:	bl	402560 <bsearch@plt>
  42f56c:	mov	x6, x0
  42f570:	cbz	x0, 42f52c <ferror@plt+0x2cbbc>
  42f574:	ldp	x2, x3, [x22, #24]
  42f578:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42f57c:	ldr	x0, [sp, #72]
  42f580:	movk	x4, #0xaaab
  42f584:	sub	x1, x6, x2
  42f588:	asr	x1, x1, #3
  42f58c:	mul	x1, x1, x4
  42f590:	add	x1, x1, #0x1
  42f594:	cmp	x1, x3
  42f598:	b.cs	42f5b4 <ferror@plt+0x2cc44>  // b.hs, b.nlast
  42f59c:	ldr	x1, [x6, #24]
  42f5a0:	cmp	x1, x0
  42f5a4:	b.hi	42f5b4 <ferror@plt+0x2cc44>  // b.pmore
  42f5a8:	ldr	x1, [x6, #32]
  42f5ac:	cmp	x0, x1
  42f5b0:	b.cc	42f604 <ferror@plt+0x2cc94>  // b.lo, b.ul, b.last
  42f5b4:	ldr	x22, [x6, #16]
  42f5b8:	mov	x5, x19
  42f5bc:	mov	x4, x20
  42f5c0:	mov	x3, x23
  42f5c4:	mov	x2, x21
  42f5c8:	mov	x1, x22
  42f5cc:	bl	42f508 <ferror@plt+0x2cb98>
  42f5d0:	cbnz	w0, 42f530 <ferror@plt+0x2cbc0>
  42f5d4:	ldr	w3, [x19]
  42f5d8:	mov	x0, x23
  42f5dc:	ldr	x2, [x20]
  42f5e0:	ldr	x4, [x22]
  42f5e4:	ldr	x1, [sp, #72]
  42f5e8:	blr	x21
  42f5ec:	cbnz	w0, 42f530 <ferror@plt+0x2cbc0>
  42f5f0:	ldr	x1, [x22, #8]
  42f5f4:	str	x1, [x20]
  42f5f8:	ldr	w1, [x22, #16]
  42f5fc:	str	w1, [x19]
  42f600:	b	42f530 <ferror@plt+0x2cbc0>
  42f604:	add	x6, x6, #0x18
  42f608:	b	42f584 <ferror@plt+0x2cc14>
  42f60c:	stp	x29, x30, [sp, #-48]!
  42f610:	mov	x29, sp
  42f614:	stp	x19, x20, [sp, #16]
  42f618:	mov	x19, x2
  42f61c:	mov	x2, x3
  42f620:	stp	x21, x22, [sp, #32]
  42f624:	mov	x3, x4
  42f628:	mov	x21, x5
  42f62c:	ldp	x22, x20, [x19]
  42f630:	add	x22, x1, x22
  42f634:	add	x20, x1, x20
  42f638:	ldr	x1, [x5, #24]
  42f63c:	cbz	x1, 42f69c <ferror@plt+0x2cd2c>
  42f640:	mov	x4, #0x18                  	// #24
  42f644:	ldr	x5, [x5]
  42f648:	mul	x1, x1, x4
  42f64c:	sub	x1, x1, #0x18
  42f650:	add	x1, x5, x1
  42f654:	ldr	x4, [x1, #8]
  42f658:	cmp	x22, x4
  42f65c:	b.eq	42f66c <ferror@plt+0x2ccfc>  // b.none
  42f660:	add	x5, x4, #0x1
  42f664:	cmp	x22, x5
  42f668:	b.ne	42f69c <ferror@plt+0x2cd2c>  // b.any
  42f66c:	ldr	x5, [x1, #16]
  42f670:	ldr	x6, [x19, #16]
  42f674:	cmp	x6, x5
  42f678:	b.ne	42f69c <ferror@plt+0x2cd2c>  // b.any
  42f67c:	cmp	x20, x4
  42f680:	b.ls	42f688 <ferror@plt+0x2cd18>  // b.plast
  42f684:	str	x20, [x1, #8]
  42f688:	mov	w0, #0x1                   	// #1
  42f68c:	ldp	x19, x20, [sp, #16]
  42f690:	ldp	x21, x22, [sp, #32]
  42f694:	ldp	x29, x30, [sp], #48
  42f698:	ret
  42f69c:	mov	x4, x21
  42f6a0:	mov	x1, #0x18                  	// #24
  42f6a4:	bl	42c214 <ferror@plt+0x298a4>
  42f6a8:	cbz	x0, 42f6d0 <ferror@plt+0x2cd60>
  42f6ac:	stp	x22, x20, [x19]
  42f6b0:	ldp	x2, x3, [x19]
  42f6b4:	stp	x2, x3, [x0]
  42f6b8:	ldr	x1, [x19, #16]
  42f6bc:	str	x1, [x0, #16]
  42f6c0:	ldr	x0, [x21, #24]
  42f6c4:	add	x0, x0, #0x1
  42f6c8:	str	x0, [x21, #24]
  42f6cc:	b	42f688 <ferror@plt+0x2cd18>
  42f6d0:	mov	w0, #0x0                   	// #0
  42f6d4:	b	42f68c <ferror@plt+0x2cd1c>
  42f6d8:	stp	x29, x30, [sp, #-240]!
  42f6dc:	mov	x3, x1
  42f6e0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x1b198>
  42f6e4:	mov	x29, sp
  42f6e8:	stp	x19, x20, [sp, #16]
  42f6ec:	mov	x19, x0
  42f6f0:	add	x20, sp, #0x28
  42f6f4:	ldp	x4, x0, [x0]
  42f6f8:	add	x2, x2, #0x558
  42f6fc:	ldr	x5, [x19, #16]
  42f700:	mov	x1, #0xc8                  	// #200
  42f704:	sub	w5, w5, w0
  42f708:	mov	x0, x20
  42f70c:	bl	402420 <snprintf@plt>
  42f710:	ldp	x3, x0, [x19, #40]
  42f714:	mov	x1, x20
  42f718:	mov	w2, #0x0                   	// #0
  42f71c:	blr	x3
  42f720:	ldp	x19, x20, [sp, #16]
  42f724:	ldp	x29, x30, [sp], #240
  42f728:	ret
  42f72c:	stp	x29, x30, [sp, #-48]!
  42f730:	mov	x29, sp
  42f734:	stp	x19, x20, [sp, #16]
  42f738:	mov	x20, x2
  42f73c:	mov	x19, x1
  42f740:	ldr	x2, [x1, #32]
  42f744:	stp	x21, x22, [sp, #32]
  42f748:	mov	x22, x0
  42f74c:	mov	x21, x3
  42f750:	cbz	x2, 42f768 <ferror@plt+0x2cdf8>
  42f754:	ldr	x1, [x1, #40]
  42f758:	mov	x4, x3
  42f75c:	lsl	x2, x2, #3
  42f760:	mov	x3, x20
  42f764:	bl	42c004 <ferror@plt+0x29694>
  42f768:	mov	x4, x21
  42f76c:	mov	x3, x20
  42f770:	mov	x0, x22
  42f774:	ldp	x21, x22, [sp, #32]
  42f778:	ldp	x2, x1, [x19, #48]
  42f77c:	ldp	x19, x20, [sp, #16]
  42f780:	ldp	x29, x30, [sp], #48
  42f784:	lsl	x2, x2, #3
  42f788:	b	42c004 <ferror@plt+0x29694>
  42f78c:	stp	x29, x30, [sp, #-64]!
  42f790:	mov	x29, sp
  42f794:	stp	x19, x20, [sp, #16]
  42f798:	mov	x20, x0
  42f79c:	mov	x19, x1
  42f7a0:	stp	x21, x22, [sp, #32]
  42f7a4:	mov	x21, x2
  42f7a8:	mov	x22, x3
  42f7ac:	str	x23, [sp, #48]
  42f7b0:	mov	x23, #0x0                   	// #0
  42f7b4:	ldp	x2, x1, [x19]
  42f7b8:	cmp	x2, x23
  42f7bc:	b.hi	42f7ec <ferror@plt+0x2ce7c>  // b.pmore
  42f7c0:	mov	x4, x22
  42f7c4:	mov	x3, x21
  42f7c8:	mov	x0, x20
  42f7cc:	lsl	x2, x2, #5
  42f7d0:	bl	42c004 <ferror@plt+0x29694>
  42f7d4:	ldp	x21, x22, [sp, #32]
  42f7d8:	ldr	x23, [sp, #48]
  42f7dc:	stp	xzr, xzr, [x19]
  42f7e0:	ldp	x19, x20, [sp, #16]
  42f7e4:	ldp	x29, x30, [sp], #64
  42f7e8:	ret
  42f7ec:	add	x1, x1, x23, lsl #5
  42f7f0:	mov	x4, x22
  42f7f4:	mov	x3, x21
  42f7f8:	mov	x0, x20
  42f7fc:	add	x23, x23, #0x1
  42f800:	ldp	x2, x1, [x1, #16]
  42f804:	lsl	x2, x2, #3
  42f808:	bl	42c004 <ferror@plt+0x29694>
  42f80c:	b	42f7b4 <ferror@plt+0x2ce44>
  42f810:	ldr	x3, [x0]
  42f814:	ldr	x2, [x1]
  42f818:	cmp	x3, x2
  42f81c:	b.cc	42f860 <ferror@plt+0x2cef0>  // b.lo, b.ul, b.last
  42f820:	b.hi	42f858 <ferror@plt+0x2cee8>  // b.pmore
  42f824:	ldr	x3, [x0, #8]
  42f828:	ldr	x2, [x1, #8]
  42f82c:	cmp	x3, x2
  42f830:	b.cc	42f858 <ferror@plt+0x2cee8>  // b.lo, b.ul, b.last
  42f834:	b.hi	42f860 <ferror@plt+0x2cef0>  // b.pmore
  42f838:	ldr	x0, [x0, #16]
  42f83c:	ldr	x2, [x0, #56]
  42f840:	ldr	x0, [x1, #16]
  42f844:	ldr	x1, [x0, #56]
  42f848:	cmp	x2, x1
  42f84c:	cset	w0, gt
  42f850:	csinv	w0, w0, wzr, ge  // ge = tcont
  42f854:	ret
  42f858:	mov	w0, #0x1                   	// #1
  42f85c:	b	42f854 <ferror@plt+0x2cee4>
  42f860:	mov	w0, #0xffffffff            	// #-1
  42f864:	b	42f854 <ferror@plt+0x2cee4>
  42f868:	ldr	x3, [x0]
  42f86c:	ldr	x2, [x1]
  42f870:	cmp	x3, x2
  42f874:	b.cc	42f894 <ferror@plt+0x2cf24>  // b.lo, b.ul, b.last
  42f878:	b.hi	42f89c <ferror@plt+0x2cf2c>  // b.pmore
  42f87c:	ldr	w2, [x0, #20]
  42f880:	ldr	w1, [x1, #20]
  42f884:	cmp	w2, w1
  42f888:	cset	w0, gt
  42f88c:	csinv	w0, w0, wzr, ge  // ge = tcont
  42f890:	ret
  42f894:	mov	w0, #0xffffffff            	// #-1
  42f898:	b	42f890 <ferror@plt+0x2cf20>
  42f89c:	mov	w0, #0x1                   	// #1
  42f8a0:	b	42f890 <ferror@plt+0x2cf20>
  42f8a4:	stp	x29, x30, [sp, #-80]!
  42f8a8:	mov	x5, x0
  42f8ac:	mov	x29, sp
  42f8b0:	stp	x19, x20, [sp, #16]
  42f8b4:	mov	x20, x2
  42f8b8:	ldr	x2, [x0]
  42f8bc:	str	x21, [sp, #32]
  42f8c0:	sub	x0, x1, #0x1
  42f8c4:	mov	x21, x3
  42f8c8:	cmp	x0, x2
  42f8cc:	b.cs	42f8ec <ferror@plt+0x2cf7c>  // b.hs, b.nlast
  42f8d0:	lsl	x0, x1, #5
  42f8d4:	ldr	x3, [x5, #8]
  42f8d8:	sub	x0, x0, #0x20
  42f8dc:	add	x19, x3, x0
  42f8e0:	ldr	x0, [x3, x0]
  42f8e4:	cmp	x0, x1
  42f8e8:	b.eq	42f92c <ferror@plt+0x2cfbc>  // b.none
  42f8ec:	add	x0, sp, #0x30
  42f8f0:	str	x1, [sp, #48]
  42f8f4:	ldr	x1, [x5, #8]
  42f8f8:	stp	xzr, xzr, [sp, #56]
  42f8fc:	adrp	x4, 42f000 <ferror@plt+0x2c690>
  42f900:	str	xzr, [x0, #24]
  42f904:	add	x4, x4, #0x4f0
  42f908:	mov	x3, #0x20                  	// #32
  42f90c:	bl	402560 <bsearch@plt>
  42f910:	mov	x19, x0
  42f914:	cbnz	x0, 42f92c <ferror@plt+0x2cfbc>
  42f918:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  42f91c:	mov	x0, x21
  42f920:	add	x1, x1, #0x567
  42f924:	mov	w2, #0x0                   	// #0
  42f928:	blr	x20
  42f92c:	mov	x0, x19
  42f930:	ldp	x19, x20, [sp, #16]
  42f934:	ldr	x21, [sp, #32]
  42f938:	ldp	x29, x30, [sp], #80
  42f93c:	ret
  42f940:	stp	x29, x30, [sp, #-64]!
  42f944:	mov	x29, sp
  42f948:	stp	x19, x20, [sp, #16]
  42f94c:	mov	x19, x7
  42f950:	mov	w20, w4
  42f954:	ldr	x7, [x7, #24]
  42f958:	stp	x21, x22, [sp, #32]
  42f95c:	mov	x22, x2
  42f960:	str	x23, [sp, #48]
  42f964:	mov	x21, x3
  42f968:	mov	x2, x5
  42f96c:	mov	x3, x6
  42f970:	mov	x23, x1
  42f974:	cbz	x7, 42f9b0 <ferror@plt+0x2d040>
  42f978:	mov	x1, #0x18                  	// #24
  42f97c:	ldr	x4, [x19]
  42f980:	mul	x7, x7, x1
  42f984:	sub	x7, x7, #0x18
  42f988:	add	x1, x4, x7
  42f98c:	ldr	x4, [x4, x7]
  42f990:	cmp	x4, x22
  42f994:	b.ne	42f9b0 <ferror@plt+0x2d040>  // b.any
  42f998:	ldr	x4, [x1, #8]
  42f99c:	cmp	x4, x21
  42f9a0:	b.ne	42f9b0 <ferror@plt+0x2d040>  // b.any
  42f9a4:	ldr	w1, [x1, #16]
  42f9a8:	cmp	w1, w20
  42f9ac:	b.eq	42f9dc <ferror@plt+0x2d06c>  // b.none
  42f9b0:	mov	x4, x19
  42f9b4:	mov	x1, #0x18                  	// #24
  42f9b8:	bl	42c214 <ferror@plt+0x298a4>
  42f9bc:	cbz	x0, 42f9f4 <ferror@plt+0x2d084>
  42f9c0:	ldr	x2, [x23]
  42f9c4:	ldr	x1, [x19, #24]
  42f9c8:	add	x22, x2, x22
  42f9cc:	stp	x22, x21, [x0]
  42f9d0:	stp	w20, w1, [x0, #16]
  42f9d4:	add	x1, x1, #0x1
  42f9d8:	str	x1, [x19, #24]
  42f9dc:	mov	w0, #0x1                   	// #1
  42f9e0:	ldp	x19, x20, [sp, #16]
  42f9e4:	ldp	x21, x22, [sp, #32]
  42f9e8:	ldr	x23, [sp, #48]
  42f9ec:	ldp	x29, x30, [sp], #64
  42f9f0:	ret
  42f9f4:	mov	w0, #0x0                   	// #0
  42f9f8:	b	42f9e0 <ferror@plt+0x2d070>
  42f9fc:	stp	x29, x30, [sp, #-48]!
  42fa00:	mov	x29, sp
  42fa04:	stp	x21, x22, [sp, #32]
  42fa08:	mov	x21, x3
  42fa0c:	add	x21, x21, x1
  42fa10:	stp	x19, x20, [sp, #16]
  42fa14:	add	x20, x4, x1
  42fa18:	mov	x22, x2
  42fa1c:	ldr	x1, [x7, #24]
  42fa20:	mov	x2, x5
  42fa24:	mov	x3, x6
  42fa28:	mov	x19, x7
  42fa2c:	cbz	x1, 42fa88 <ferror@plt+0x2d118>
  42fa30:	mov	x4, #0x18                  	// #24
  42fa34:	mul	x1, x1, x4
  42fa38:	ldr	x4, [x7]
  42fa3c:	sub	x1, x1, #0x18
  42fa40:	add	x1, x4, x1
  42fa44:	ldr	x4, [x1, #8]
  42fa48:	cmp	x21, x4
  42fa4c:	b.eq	42fa5c <ferror@plt+0x2d0ec>  // b.none
  42fa50:	add	x5, x4, #0x1
  42fa54:	cmp	x21, x5
  42fa58:	b.ne	42fa88 <ferror@plt+0x2d118>  // b.any
  42fa5c:	ldr	x5, [x1, #16]
  42fa60:	cmp	x5, x22
  42fa64:	b.ne	42fa88 <ferror@plt+0x2d118>  // b.any
  42fa68:	cmp	x20, x4
  42fa6c:	b.ls	42fa74 <ferror@plt+0x2d104>  // b.plast
  42fa70:	str	x20, [x1, #8]
  42fa74:	mov	w0, #0x1                   	// #1
  42fa78:	ldp	x19, x20, [sp, #16]
  42fa7c:	ldp	x21, x22, [sp, #32]
  42fa80:	ldp	x29, x30, [sp], #48
  42fa84:	ret
  42fa88:	mov	x4, x19
  42fa8c:	mov	x1, #0x18                  	// #24
  42fa90:	bl	42c214 <ferror@plt+0x298a4>
  42fa94:	cbz	x0, 42fab0 <ferror@plt+0x2d140>
  42fa98:	stp	x21, x20, [x0]
  42fa9c:	str	x22, [x0, #16]
  42faa0:	ldr	x0, [x19, #24]
  42faa4:	add	x0, x0, #0x1
  42faa8:	str	x0, [x19, #24]
  42faac:	b	42fa74 <ferror@plt+0x2d104>
  42fab0:	mov	w0, #0x0                   	// #0
  42fab4:	b	42fa78 <ferror@plt+0x2d108>
  42fab8:	stp	x29, x30, [sp, #-32]!
  42fabc:	mov	x29, sp
  42fac0:	ldr	x2, [x0, #24]
  42fac4:	stp	x19, x20, [sp, #16]
  42fac8:	mov	x19, x0
  42facc:	cmp	x1, x2
  42fad0:	b.hi	42faf8 <ferror@plt+0x2d188>  // b.pmore
  42fad4:	ldr	x0, [x0, #16]
  42fad8:	mov	w20, #0x1                   	// #1
  42fadc:	add	x0, x0, x1
  42fae0:	sub	x1, x2, x1
  42fae4:	stp	x0, x1, [x19, #16]
  42fae8:	mov	w0, w20
  42faec:	ldp	x19, x20, [sp, #16]
  42faf0:	ldp	x29, x30, [sp], #32
  42faf4:	ret
  42faf8:	ldr	w20, [x0, #56]
  42fafc:	cbnz	w20, 42fb18 <ferror@plt+0x2d1a8>
  42fb00:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  42fb04:	add	x1, x1, #0x581
  42fb08:	bl	42f6d8 <ferror@plt+0x2cd68>
  42fb0c:	mov	w0, #0x1                   	// #1
  42fb10:	str	w0, [x19, #56]
  42fb14:	b	42fae8 <ferror@plt+0x2d178>
  42fb18:	mov	w20, #0x0                   	// #0
  42fb1c:	b	42fae8 <ferror@plt+0x2d178>
  42fb20:	stp	x29, x30, [sp, #-32]!
  42fb24:	mov	x1, #0x4                   	// #4
  42fb28:	mov	x29, sp
  42fb2c:	stp	x19, x20, [sp, #16]
  42fb30:	mov	x19, x0
  42fb34:	ldr	x20, [x0, #16]
  42fb38:	bl	42fab8 <ferror@plt+0x2d148>
  42fb3c:	cbz	w0, 42fb5c <ferror@plt+0x2d1ec>
  42fb40:	ldr	w1, [x19, #32]
  42fb44:	ldr	w0, [x20]
  42fb48:	cbz	w1, 42fb50 <ferror@plt+0x2d1e0>
  42fb4c:	rev	w0, w0
  42fb50:	ldp	x19, x20, [sp, #16]
  42fb54:	ldp	x29, x30, [sp], #32
  42fb58:	ret
  42fb5c:	mov	w0, #0x0                   	// #0
  42fb60:	b	42fb50 <ferror@plt+0x2d1e0>
  42fb64:	stp	x29, x30, [sp, #-32]!
  42fb68:	mov	x1, #0x8                   	// #8
  42fb6c:	mov	x29, sp
  42fb70:	stp	x19, x20, [sp, #16]
  42fb74:	mov	x19, x0
  42fb78:	ldr	x20, [x0, #16]
  42fb7c:	bl	42fab8 <ferror@plt+0x2d148>
  42fb80:	cbz	w0, 42fba0 <ferror@plt+0x2d230>
  42fb84:	ldr	w1, [x19, #32]
  42fb88:	ldr	x0, [x20]
  42fb8c:	cbz	w1, 42fb94 <ferror@plt+0x2d224>
  42fb90:	rev	x0, x0
  42fb94:	ldp	x19, x20, [sp, #16]
  42fb98:	ldp	x29, x30, [sp], #32
  42fb9c:	ret
  42fba0:	mov	x0, #0x0                   	// #0
  42fba4:	b	42fb94 <ferror@plt+0x2d224>
  42fba8:	cbz	w1, 42fbb0 <ferror@plt+0x2d240>
  42fbac:	b	42fb64 <ferror@plt+0x2d1f4>
  42fbb0:	stp	x29, x30, [sp, #-16]!
  42fbb4:	mov	x29, sp
  42fbb8:	bl	42fb20 <ferror@plt+0x2d1b0>
  42fbbc:	mov	w0, w0
  42fbc0:	ldp	x29, x30, [sp], #16
  42fbc4:	ret
  42fbc8:	stp	x29, x30, [sp, #-32]!
  42fbcc:	mov	x1, #0x2                   	// #2
  42fbd0:	mov	x29, sp
  42fbd4:	stp	x19, x20, [sp, #16]
  42fbd8:	mov	x19, x0
  42fbdc:	ldr	x20, [x0, #16]
  42fbe0:	bl	42fab8 <ferror@plt+0x2d148>
  42fbe4:	cbz	w0, 42fc10 <ferror@plt+0x2d2a0>
  42fbe8:	ldrb	w1, [x20, #1]
  42fbec:	ldrb	w0, [x20]
  42fbf0:	ldr	w3, [x19, #32]
  42fbf4:	orr	w2, w1, w0, lsl #8
  42fbf8:	cmp	w3, #0x0
  42fbfc:	orr	w0, w0, w1, lsl #8
  42fc00:	csel	w0, w0, w2, eq  // eq = none
  42fc04:	ldp	x19, x20, [sp, #16]
  42fc08:	ldp	x29, x30, [sp], #32
  42fc0c:	ret
  42fc10:	mov	w0, #0x0                   	// #0
  42fc14:	b	42fc04 <ferror@plt+0x2d294>
  42fc18:	stp	x29, x30, [sp, #-32]!
  42fc1c:	mov	x1, #0x1                   	// #1
  42fc20:	mov	x29, sp
  42fc24:	str	x19, [sp, #16]
  42fc28:	ldr	x19, [x0, #16]
  42fc2c:	bl	42fab8 <ferror@plt+0x2d148>
  42fc30:	cbz	w0, 42fc44 <ferror@plt+0x2d2d4>
  42fc34:	ldrb	w0, [x19]
  42fc38:	ldr	x19, [sp, #16]
  42fc3c:	ldp	x29, x30, [sp], #32
  42fc40:	ret
  42fc44:	mov	w0, #0x0                   	// #0
  42fc48:	b	42fc38 <ferror@plt+0x2d2c8>
  42fc4c:	stp	x29, x30, [sp, #-16]!
  42fc50:	sub	w1, w1, #0x1
  42fc54:	cmp	w1, #0x7
  42fc58:	mov	x29, sp
  42fc5c:	b.hi	42fca8 <ferror@plt+0x2d338>  // b.pmore
  42fc60:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x1b198>
  42fc64:	add	x2, x2, #0x4e4
  42fc68:	ldrb	w1, [x2, w1, uxtw]
  42fc6c:	adr	x2, 42fc78 <ferror@plt+0x2d308>
  42fc70:	add	x1, x2, w1, sxtb #2
  42fc74:	br	x1
  42fc78:	bl	42fc18 <ferror@plt+0x2d2a8>
  42fc7c:	and	x0, x0, #0xff
  42fc80:	ldp	x29, x30, [sp], #16
  42fc84:	ret
  42fc88:	bl	42fbc8 <ferror@plt+0x2d258>
  42fc8c:	and	x0, x0, #0xffff
  42fc90:	b	42fc80 <ferror@plt+0x2d310>
  42fc94:	bl	42fb20 <ferror@plt+0x2d1b0>
  42fc98:	mov	w0, w0
  42fc9c:	b	42fc80 <ferror@plt+0x2d310>
  42fca0:	ldp	x29, x30, [sp], #16
  42fca4:	b	42fb64 <ferror@plt+0x2d1f4>
  42fca8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  42fcac:	add	x1, x1, #0x591
  42fcb0:	bl	42f6d8 <ferror@plt+0x2cd68>
  42fcb4:	mov	x0, #0x0                   	// #0
  42fcb8:	b	42fc80 <ferror@plt+0x2d310>
  42fcbc:	stp	x29, x30, [sp, #-64]!
  42fcc0:	mov	x29, sp
  42fcc4:	stp	x19, x20, [sp, #16]
  42fcc8:	mov	x19, x0
  42fccc:	mov	x20, #0x0                   	// #0
  42fcd0:	stp	x21, x22, [sp, #32]
  42fcd4:	adrp	x22, 455000 <_obstack_memory_used@@Base+0x1b198>
  42fcd8:	add	x22, x22, #0x5b2
  42fcdc:	mov	w21, #0x0                   	// #0
  42fce0:	stp	x23, x24, [sp, #48]
  42fce4:	mov	w24, #0x0                   	// #0
  42fce8:	mov	x0, x19
  42fcec:	mov	x1, #0x1                   	// #1
  42fcf0:	ldr	x23, [x19, #16]
  42fcf4:	bl	42fab8 <ferror@plt+0x2d148>
  42fcf8:	cbz	w0, 42fd4c <ferror@plt+0x2d3dc>
  42fcfc:	ldrb	w23, [x23]
  42fd00:	cmp	w21, #0x3f
  42fd04:	b.hi	42fd34 <ferror@plt+0x2d3c4>  // b.pmore
  42fd08:	and	x0, x23, #0x7f
  42fd0c:	lsl	x0, x0, x21
  42fd10:	orr	x20, x20, x0
  42fd14:	add	w21, w21, #0x7
  42fd18:	tbnz	w23, #7, 42fce8 <ferror@plt+0x2d378>
  42fd1c:	mov	x0, x20
  42fd20:	ldp	x19, x20, [sp, #16]
  42fd24:	ldp	x21, x22, [sp, #32]
  42fd28:	ldp	x23, x24, [sp, #48]
  42fd2c:	ldp	x29, x30, [sp], #64
  42fd30:	ret
  42fd34:	cbnz	w24, 42fd14 <ferror@plt+0x2d3a4>
  42fd38:	mov	x1, x22
  42fd3c:	mov	x0, x19
  42fd40:	mov	w24, #0x1                   	// #1
  42fd44:	bl	42f6d8 <ferror@plt+0x2cd68>
  42fd48:	b	42fd14 <ferror@plt+0x2d3a4>
  42fd4c:	mov	x20, #0x0                   	// #0
  42fd50:	b	42fd1c <ferror@plt+0x2d3ac>
  42fd54:	stp	x29, x30, [sp, #-64]!
  42fd58:	mov	x29, sp
  42fd5c:	stp	x21, x22, [sp, #32]
  42fd60:	mov	x21, x0
  42fd64:	stp	x23, x24, [sp, #48]
  42fd68:	adrp	x23, 455000 <_obstack_memory_used@@Base+0x1b198>
  42fd6c:	add	x23, x23, #0x5ab
  42fd70:	mov	w24, #0x0                   	// #0
  42fd74:	stp	x19, x20, [sp, #16]
  42fd78:	mov	w20, #0x0                   	// #0
  42fd7c:	mov	x19, #0x0                   	// #0
  42fd80:	mov	x0, x21
  42fd84:	mov	x1, #0x1                   	// #1
  42fd88:	ldr	x22, [x21, #16]
  42fd8c:	bl	42fab8 <ferror@plt+0x2d148>
  42fd90:	cbz	w0, 42fdfc <ferror@plt+0x2d48c>
  42fd94:	ldrb	w22, [x22]
  42fd98:	cmp	w20, #0x3f
  42fd9c:	b.hi	42fde4 <ferror@plt+0x2d474>  // b.pmore
  42fda0:	and	x0, x22, #0x7f
  42fda4:	lsl	x0, x0, x20
  42fda8:	orr	x19, x19, x0
  42fdac:	add	w20, w20, #0x7
  42fdb0:	tbnz	w22, #7, 42fd80 <ferror@plt+0x2d410>
  42fdb4:	tbz	w22, #6, 42fdcc <ferror@plt+0x2d45c>
  42fdb8:	cmp	w20, #0x3f
  42fdbc:	b.hi	42fdcc <ferror@plt+0x2d45c>  // b.pmore
  42fdc0:	mov	x0, #0xffffffffffffffff    	// #-1
  42fdc4:	lsl	x20, x0, x20
  42fdc8:	orr	x19, x19, x20
  42fdcc:	mov	x0, x19
  42fdd0:	ldp	x19, x20, [sp, #16]
  42fdd4:	ldp	x21, x22, [sp, #32]
  42fdd8:	ldp	x23, x24, [sp, #48]
  42fddc:	ldp	x29, x30, [sp], #64
  42fde0:	ret
  42fde4:	cbnz	w24, 42fdac <ferror@plt+0x2d43c>
  42fde8:	mov	x1, x23
  42fdec:	mov	x0, x21
  42fdf0:	mov	w24, #0x1                   	// #1
  42fdf4:	bl	42f6d8 <ferror@plt+0x2cd68>
  42fdf8:	b	42fdac <ferror@plt+0x2d43c>
  42fdfc:	mov	x0, #0x0                   	// #0
  42fe00:	b	42fdd0 <ferror@plt+0x2d460>
  42fe04:	stp	x29, x30, [sp, #-32]!
  42fe08:	mov	x29, sp
  42fe0c:	stp	x19, x20, [sp, #16]
  42fe10:	mov	x19, x0
  42fe14:	ldp	x20, x1, [x0, #16]
  42fe18:	mov	x0, x20
  42fe1c:	bl	402380 <strnlen@plt>
  42fe20:	add	x1, x0, #0x1
  42fe24:	mov	x0, x19
  42fe28:	bl	42fab8 <ferror@plt+0x2d148>
  42fe2c:	cmp	w0, #0x0
  42fe30:	csel	x0, x20, xzr, ne  // ne = any
  42fe34:	ldp	x19, x20, [sp, #16]
  42fe38:	ldp	x29, x30, [sp], #32
  42fe3c:	ret
  42fe40:	stp	x29, x30, [sp, #-96]!
  42fe44:	mov	x29, sp
  42fe48:	stp	x19, x20, [sp, #16]
  42fe4c:	mov	x20, x1
  42fe50:	ldr	x19, [sp, #96]
  42fe54:	stp	x21, x22, [sp, #32]
  42fe58:	mov	w21, w2
  42fe5c:	mov	x22, x7
  42fe60:	stp	x23, x24, [sp, #48]
  42fe64:	mov	x23, x5
  42fe68:	mov	x24, x6
  42fe6c:	stp	x25, x26, [sp, #64]
  42fe70:	mov	w26, w3
  42fe74:	mov	w25, w4
  42fe78:	str	x27, [sp, #80]
  42fe7c:	adrp	x27, 455000 <_obstack_memory_used@@Base+0x1b198>
  42fe80:	add	x27, x27, #0x4ec
  42fe84:	stp	xzr, xzr, [x19]
  42fe88:	cmp	w0, #0x20
  42fe8c:	b.hi	42feb0 <ferror@plt+0x2d540>  // b.pmore
  42fe90:	cbz	w0, 42fed0 <ferror@plt+0x2d560>
  42fe94:	sub	w0, w0, #0x1
  42fe98:	cmp	w0, #0x1f
  42fe9c:	b.hi	42fed0 <ferror@plt+0x2d560>  // b.pmore
  42fea0:	ldrh	w0, [x27, w0, uxtw #1]
  42fea4:	adr	x1, 42feb0 <ferror@plt+0x2d540>
  42fea8:	add	x0, x1, w0, sxth #2
  42feac:	br	x0
  42feb0:	mov	w1, #0x1f20                	// #7968
  42feb4:	cmp	w0, w1
  42feb8:	b.eq	43012c <ferror@plt+0x2d7bc>  // b.none
  42febc:	b.hi	42fedc <ferror@plt+0x2d56c>  // b.pmore
  42fec0:	mov	w1, #0xffffe0ff            	// #-7937
  42fec4:	add	w0, w0, w1
  42fec8:	cmp	w0, #0x1
  42fecc:	b.ls	430124 <ferror@plt+0x2d7b4>  // b.plast
  42fed0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  42fed4:	add	x1, x1, #0x608
  42fed8:	b	43006c <ferror@plt+0x2d6fc>
  42fedc:	mov	w1, #0x1f21                	// #7969
  42fee0:	cmp	w0, w1
  42fee4:	b.ne	42fed0 <ferror@plt+0x2d560>  // b.any
  42fee8:	mov	w1, w21
  42feec:	mov	x0, x20
  42fef0:	bl	42fba8 <ferror@plt+0x2d238>
  42fef4:	cbz	x22, 430140 <ferror@plt+0x2d7d0>
  42fef8:	ldr	x1, [x22, #112]
  42fefc:	cmp	x1, x0
  42ff00:	b.hi	430158 <ferror@plt+0x2d7e8>  // b.pmore
  42ff04:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  42ff08:	add	x1, x1, #0x5e6
  42ff0c:	b	43006c <ferror@plt+0x2d6fc>
  42ff10:	mov	w21, #0x1                   	// #1
  42ff14:	str	w21, [x19]
  42ff18:	mov	w1, w25
  42ff1c:	mov	x0, x20
  42ff20:	bl	42fc4c <ferror@plt+0x2d2dc>
  42ff24:	b	430048 <ferror@plt+0x2d6d8>
  42ff28:	mov	w0, #0xa                   	// #10
  42ff2c:	str	w0, [x19]
  42ff30:	mov	x0, x20
  42ff34:	bl	42fbc8 <ferror@plt+0x2d258>
  42ff38:	and	x1, x0, #0xffff
  42ff3c:	mov	x0, x20
  42ff40:	ldp	x19, x20, [sp, #16]
  42ff44:	ldp	x21, x22, [sp, #32]
  42ff48:	ldp	x23, x24, [sp, #48]
  42ff4c:	ldp	x25, x26, [sp, #64]
  42ff50:	ldr	x27, [sp, #80]
  42ff54:	ldp	x29, x30, [sp], #96
  42ff58:	b	42fab8 <ferror@plt+0x2d148>
  42ff5c:	mov	w0, #0xa                   	// #10
  42ff60:	str	w0, [x19]
  42ff64:	mov	x0, x20
  42ff68:	bl	42fb20 <ferror@plt+0x2d1b0>
  42ff6c:	mov	w1, w0
  42ff70:	b	42ff3c <ferror@plt+0x2d5cc>
  42ff74:	mov	w0, #0x2                   	// #2
  42ff78:	str	w0, [x19]
  42ff7c:	mov	x0, x20
  42ff80:	bl	42fbc8 <ferror@plt+0x2d258>
  42ff84:	and	x0, x0, #0xffff
  42ff88:	b	430048 <ferror@plt+0x2d6d8>
  42ff8c:	mov	w0, #0x2                   	// #2
  42ff90:	str	w0, [x19]
  42ff94:	mov	x0, x20
  42ff98:	bl	42fb20 <ferror@plt+0x2d1b0>
  42ff9c:	mov	w0, w0
  42ffa0:	b	430048 <ferror@plt+0x2d6d8>
  42ffa4:	mov	w0, #0x2                   	// #2
  42ffa8:	str	w0, [x19]
  42ffac:	mov	x0, x20
  42ffb0:	bl	42fb64 <ferror@plt+0x2d1f4>
  42ffb4:	b	430048 <ferror@plt+0x2d6d8>
  42ffb8:	mov	w0, #0x4                   	// #4
  42ffbc:	str	w0, [x19]
  42ffc0:	mov	x0, x20
  42ffc4:	bl	42fe04 <ferror@plt+0x2d494>
  42ffc8:	cmp	x0, #0x0
  42ffcc:	str	x0, [x19, #8]
  42ffd0:	cset	w0, ne  // ne = any
  42ffd4:	ldp	x19, x20, [sp, #16]
  42ffd8:	ldp	x21, x22, [sp, #32]
  42ffdc:	ldp	x23, x24, [sp, #48]
  42ffe0:	ldp	x25, x26, [sp, #64]
  42ffe4:	ldr	x27, [sp, #80]
  42ffe8:	ldp	x29, x30, [sp], #96
  42ffec:	ret
  42fff0:	mov	w0, #0xa                   	// #10
  42fff4:	str	w0, [x19]
  42fff8:	mov	x0, x20
  42fffc:	bl	42fcbc <ferror@plt+0x2d34c>
  430000:	mov	x1, x0
  430004:	b	42ff3c <ferror@plt+0x2d5cc>
  430008:	mov	w0, #0xa                   	// #10
  43000c:	str	w0, [x19]
  430010:	mov	x0, x20
  430014:	bl	42fc18 <ferror@plt+0x2d2a8>
  430018:	and	x1, x0, #0xff
  43001c:	b	42ff3c <ferror@plt+0x2d5cc>
  430020:	mov	w0, #0x2                   	// #2
  430024:	str	w0, [x19]
  430028:	mov	x0, x20
  43002c:	bl	42fc18 <ferror@plt+0x2d2a8>
  430030:	and	x0, x0, #0xff
  430034:	b	430048 <ferror@plt+0x2d6d8>
  430038:	mov	w0, #0x3                   	// #3
  43003c:	str	w0, [x19]
  430040:	mov	x0, x20
  430044:	bl	42fd54 <ferror@plt+0x2d3e4>
  430048:	str	x0, [x19, #8]
  43004c:	b	430144 <ferror@plt+0x2d7d4>
  430050:	mov	w1, w21
  430054:	mov	x0, x20
  430058:	bl	42fba8 <ferror@plt+0x2d238>
  43005c:	cmp	x24, x0
  430060:	b.hi	43007c <ferror@plt+0x2d70c>  // b.pmore
  430064:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  430068:	add	x1, x1, #0x5cc
  43006c:	mov	x0, x20
  430070:	bl	42f6d8 <ferror@plt+0x2cd68>
  430074:	mov	w0, #0x0                   	// #0
  430078:	b	42ffd4 <ferror@plt+0x2d664>
  43007c:	mov	w1, #0x4                   	// #4
  430080:	add	x0, x23, x0
  430084:	str	w1, [x19]
  430088:	b	430048 <ferror@plt+0x2d6d8>
  43008c:	mov	w0, #0x2                   	// #2
  430090:	str	w0, [x19]
  430094:	mov	x0, x20
  430098:	bl	42fcbc <ferror@plt+0x2d34c>
  43009c:	b	430048 <ferror@plt+0x2d6d8>
  4300a0:	mov	w0, #0x6                   	// #6
  4300a4:	str	w0, [x19]
  4300a8:	cmp	w26, #0x2
  4300ac:	b.eq	42ff18 <ferror@plt+0x2d5a8>  // b.none
  4300b0:	mov	w1, w21
  4300b4:	mov	x0, x20
  4300b8:	bl	42fba8 <ferror@plt+0x2d238>
  4300bc:	b	430048 <ferror@plt+0x2d6d8>
  4300c0:	mov	w0, #0x5                   	// #5
  4300c4:	b	430024 <ferror@plt+0x2d6b4>
  4300c8:	mov	w0, #0x5                   	// #5
  4300cc:	b	42ff78 <ferror@plt+0x2d608>
  4300d0:	mov	w0, #0x5                   	// #5
  4300d4:	b	42ff90 <ferror@plt+0x2d620>
  4300d8:	mov	w0, #0x5                   	// #5
  4300dc:	b	42ffa8 <ferror@plt+0x2d638>
  4300e0:	mov	w0, #0x5                   	// #5
  4300e4:	b	430090 <ferror@plt+0x2d720>
  4300e8:	mov	x0, x20
  4300ec:	bl	42fcbc <ferror@plt+0x2d34c>
  4300f0:	b	42fe84 <ferror@plt+0x2d514>
  4300f4:	mov	w0, #0x8                   	// #8
  4300f8:	str	w0, [x19]
  4300fc:	b	4300b0 <ferror@plt+0x2d740>
  430100:	mov	w0, #0xb                   	// #11
  430104:	b	42fff4 <ferror@plt+0x2d684>
  430108:	mov	w0, #0x2                   	// #2
  43010c:	str	w0, [x19]
  430110:	mov	x0, #0x1                   	// #1
  430114:	str	x0, [x19, #8]
  430118:	b	42ffd4 <ferror@plt+0x2d664>
  43011c:	mov	w0, #0x9                   	// #9
  430120:	b	42ffa8 <ferror@plt+0x2d638>
  430124:	mov	w0, #0x8                   	// #8
  430128:	b	430090 <ferror@plt+0x2d720>
  43012c:	mov	w1, w21
  430130:	mov	x0, x20
  430134:	bl	42fba8 <ferror@plt+0x2d238>
  430138:	str	x0, [x19, #8]
  43013c:	cbnz	x22, 43014c <ferror@plt+0x2d7dc>
  430140:	str	wzr, [x19]
  430144:	mov	w0, #0x1                   	// #1
  430148:	b	42ffd4 <ferror@plt+0x2d664>
  43014c:	mov	w0, #0x7                   	// #7
  430150:	str	w0, [x19]
  430154:	b	430144 <ferror@plt+0x2d7d4>
  430158:	mov	w1, #0x4                   	// #4
  43015c:	str	w1, [x19]
  430160:	ldr	x1, [x22, #104]
  430164:	add	x0, x1, x0
  430168:	b	430048 <ferror@plt+0x2d6d8>
  43016c:	sub	sp, sp, #0x170
  430170:	stp	x29, x30, [sp, #48]
  430174:	add	x29, sp, #0x30
  430178:	stp	x21, x22, [sp, #80]
  43017c:	ldp	x21, x22, [sp, #376]
  430180:	stp	x19, x20, [sp, #64]
  430184:	mov	x20, x2
  430188:	ldr	x19, [sp, #392]
  43018c:	stp	x23, x24, [sp, #96]
  430190:	add	x23, sp, #0xf0
  430194:	stp	x25, x26, [sp, #112]
  430198:	mov	x25, x0
  43019c:	mov	x26, x1
  4301a0:	stp	x27, x28, [sp, #128]
  4301a4:	add	x27, sp, #0x130
  4301a8:	stp	x5, x6, [sp, #160]
  4301ac:	stp	x3, x4, [sp, #176]
  4301b0:	str	w7, [sp, #224]
  4301b4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x1b198>
  4301b8:	add	x0, x0, #0x52c
  4301bc:	str	x0, [sp, #192]
  4301c0:	ldr	x0, [x20, #24]
  4301c4:	cbz	x0, 4301d8 <ferror@plt+0x2d868>
  4301c8:	mov	x0, x20
  4301cc:	bl	42fcbc <ferror@plt+0x2d34c>
  4301d0:	mov	x1, x0
  4301d4:	cbnz	x0, 4301fc <ferror@plt+0x2d88c>
  4301d8:	mov	w0, #0x1                   	// #1
  4301dc:	ldp	x29, x30, [sp, #48]
  4301e0:	ldp	x19, x20, [sp, #64]
  4301e4:	ldp	x21, x22, [sp, #80]
  4301e8:	ldp	x23, x24, [sp, #96]
  4301ec:	ldp	x25, x26, [sp, #112]
  4301f0:	ldp	x27, x28, [sp, #128]
  4301f4:	add	sp, sp, #0x170
  4301f8:	ret
  4301fc:	mov	x3, x22
  430200:	mov	x2, x21
  430204:	add	x0, x19, #0x58
  430208:	bl	42f8a4 <ferror@plt+0x2cf34>
  43020c:	mov	x28, x0
  430210:	cbnz	x0, 43021c <ferror@plt+0x2d8ac>
  430214:	mov	w0, #0x0                   	// #0
  430218:	b	4301dc <ferror@plt+0x2d86c>
  43021c:	ldr	x0, [sp, #408]
  430220:	cbz	x0, 430230 <ferror@plt+0x2d8c0>
  430224:	ldr	x1, [sp, #408]
  430228:	ldr	w0, [x28, #8]
  43022c:	str	w0, [x1]
  430230:	mov	x11, #0x0                   	// #0
  430234:	mov	x9, #0x0                   	// #0
  430238:	mov	w12, #0x0                   	// #0
  43023c:	mov	x10, #0x0                   	// #0
  430240:	mov	x24, #0x0                   	// #0
  430244:	stp	wzr, wzr, [sp, #148]
  430248:	str	wzr, [sp, #156]
  43024c:	ldr	x0, [x28, #16]
  430250:	cmp	x0, x11
  430254:	b.hi	4302ac <ferror@plt+0x2d93c>  // b.pmore
  430258:	ldr	w0, [x28, #8]
  43025c:	cmp	w0, #0x2e
  430260:	ccmp	w0, #0x11, #0x4, ne  // ne = any
  430264:	b.eq	430424 <ferror@plt+0x2dab4>  // b.none
  430268:	ldr	w0, [x28, #12]
  43026c:	cbz	w0, 4301c0 <ferror@plt+0x2d850>
  430270:	ldp	x5, x6, [sp, #160]
  430274:	stp	x21, x22, [sp, #8]
  430278:	ldr	w7, [sp, #224]
  43027c:	ldp	x3, x4, [sp, #176]
  430280:	str	xzr, [sp, #40]
  430284:	ldr	x0, [sp, #400]
  430288:	stp	x19, x0, [sp, #24]
  43028c:	mov	x2, x20
  430290:	ldr	x0, [sp, #368]
  430294:	str	x0, [sp]
  430298:	mov	x1, x26
  43029c:	mov	x0, x25
  4302a0:	bl	43016c <ferror@plt+0x2d7fc>
  4302a4:	cbnz	w0, 4301b4 <ferror@plt+0x2d844>
  4302a8:	b	430214 <ferror@plt+0x2d8a4>
  4302ac:	ldr	x0, [x28, #24]
  4302b0:	str	x27, [sp]
  4302b4:	ldp	x5, x6, [sp, #176]
  4302b8:	lsl	x13, x11, #3
  4302bc:	add	x0, x0, x11, lsl #3
  4302c0:	ldr	w4, [x19, #48]
  4302c4:	ldp	w3, w2, [x19, #40]
  4302c8:	mov	x1, x20
  4302cc:	ldr	w0, [x0, #4]
  4302d0:	ldr	x7, [sp, #368]
  4302d4:	stp	x11, x13, [sp, #200]
  4302d8:	str	x10, [sp, #216]
  4302dc:	str	w12, [sp, #228]
  4302e0:	str	x9, [sp, #232]
  4302e4:	bl	42fe40 <ferror@plt+0x2d4d0>
  4302e8:	cbz	w0, 4301dc <ferror@plt+0x2d86c>
  4302ec:	ldp	x11, x13, [sp, #200]
  4302f0:	ldr	x0, [x28, #24]
  4302f4:	ldr	w12, [sp, #228]
  4302f8:	ldr	x10, [sp, #216]
  4302fc:	ldr	w0, [x0, x13]
  430300:	ldr	x9, [sp, #232]
  430304:	cmp	w0, #0x1b
  430308:	b.hi	430344 <ferror@plt+0x2d9d4>  // b.pmore
  43030c:	cmp	w0, #0xf
  430310:	b.hi	430324 <ferror@plt+0x2d9b4>  // b.pmore
  430314:	cmp	w0, #0x3
  430318:	b.eq	4303dc <ferror@plt+0x2da6c>  // b.none
  43031c:	add	x11, x11, #0x1
  430320:	b	43024c <ferror@plt+0x2d8dc>
  430324:	sub	w0, w0, #0x10
  430328:	cmp	w0, #0xb
  43032c:	b.hi	43031c <ferror@plt+0x2d9ac>  // b.pmore
  430330:	ldr	x1, [sp, #192]
  430334:	ldrb	w0, [x1, w0, uxtw]
  430338:	adr	x1, 430344 <ferror@plt+0x2d9d4>
  43033c:	add	x0, x1, w0, sxtb #2
  430340:	br	x0
  430344:	cmp	w0, #0x55
  430348:	b.ne	43031c <ferror@plt+0x2d9ac>  // b.any
  43034c:	ldr	w0, [sp, #304]
  430350:	cmp	w0, #0x2
  430354:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  430358:	b.ne	43031c <ferror@plt+0x2d9ac>  // b.any
  43035c:	mov	w0, #0x1                   	// #1
  430360:	str	w0, [sp, #156]
  430364:	ldr	x9, [sp, #312]
  430368:	b	43031c <ferror@plt+0x2d9ac>
  43036c:	ldr	w0, [sp, #304]
  430370:	cmp	w0, #0x1
  430374:	b.ne	43031c <ferror@plt+0x2d9ac>  // b.any
  430378:	str	w0, [sp, #152]
  43037c:	ldr	x24, [sp, #312]
  430380:	b	43031c <ferror@plt+0x2d9ac>
  430384:	ldr	w0, [sp, #304]
  430388:	cmp	w0, #0x1
  43038c:	b.ne	43039c <ferror@plt+0x2da2c>  // b.any
  430390:	str	w0, [sp, #148]
  430394:	ldr	x10, [sp, #312]
  430398:	b	43031c <ferror@plt+0x2d9ac>
  43039c:	cmp	w0, #0x2
  4303a0:	b.ne	43031c <ferror@plt+0x2d9ac>  // b.any
  4303a4:	mov	w12, #0x1                   	// #1
  4303a8:	str	w12, [sp, #148]
  4303ac:	ldr	x10, [sp, #312]
  4303b0:	b	43031c <ferror@plt+0x2d9ac>
  4303b4:	ldr	w0, [x28, #8]
  4303b8:	cmp	w0, #0x11
  4303bc:	b.ne	43031c <ferror@plt+0x2d9ac>  // b.any
  4303c0:	ldr	w0, [sp, #304]
  4303c4:	cmp	w0, #0x2
  4303c8:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  4303cc:	b.ne	43031c <ferror@plt+0x2d9ac>  // b.any
  4303d0:	ldr	x0, [sp, #312]
  4303d4:	str	x0, [x19, #56]
  4303d8:	b	43031c <ferror@plt+0x2d9ac>
  4303dc:	ldr	w0, [x28, #8]
  4303e0:	cmp	w0, #0x11
  4303e4:	b.ne	43031c <ferror@plt+0x2d9ac>  // b.any
  4303e8:	ldr	w0, [sp, #304]
  4303ec:	cmp	w0, #0x4
  4303f0:	b.ne	43031c <ferror@plt+0x2d9ac>  // b.any
  4303f4:	ldr	x0, [sp, #312]
  4303f8:	str	x0, [x19, #64]
  4303fc:	b	43031c <ferror@plt+0x2d9ac>
  430400:	ldr	w0, [x28, #8]
  430404:	cmp	w0, #0x11
  430408:	b.ne	43031c <ferror@plt+0x2d9ac>  // b.any
  43040c:	ldr	w0, [sp, #304]
  430410:	cmp	w0, #0x4
  430414:	b.ne	43031c <ferror@plt+0x2d9ac>  // b.any
  430418:	ldr	x0, [sp, #312]
  43041c:	str	x0, [x19, #72]
  430420:	b	43031c <ferror@plt+0x2d9ac>
  430424:	ldr	w0, [sp, #156]
  430428:	cbz	w0, 43054c <ferror@plt+0x2dbdc>
  43042c:	ldr	x0, [sp, #168]
  430430:	cmp	x9, x0
  430434:	b.cc	430450 <ferror@plt+0x2dae0>  // b.lo, b.ul, b.last
  430438:	mov	x0, x22
  43043c:	mov	w2, #0x0                   	// #0
  430440:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  430444:	add	x1, x1, #0x6b1
  430448:	blr	x21
  43044c:	b	430214 <ferror@plt+0x2d8a4>
  430450:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  430454:	add	x0, x0, #0xb8e
  430458:	str	x0, [sp, #304]
  43045c:	ldr	x0, [sp, #160]
  430460:	str	x0, [sp, #312]
  430464:	stp	x21, x22, [sp, #344]
  430468:	add	x0, x0, x9
  43046c:	str	x0, [sp, #320]
  430470:	ldr	x0, [sp, #168]
  430474:	str	wzr, [sp, #360]
  430478:	sub	x9, x0, x9
  43047c:	ldr	w0, [sp, #224]
  430480:	str	x9, [sp, #328]
  430484:	str	w0, [sp, #336]
  430488:	ldr	w0, [sp, #360]
  43048c:	cbnz	w0, 430214 <ferror@plt+0x2d8a4>
  430490:	ldr	w1, [x19, #48]
  430494:	mov	x0, x27
  430498:	bl	42fc4c <ferror@plt+0x2d2dc>
  43049c:	mov	x2, x0
  4304a0:	ldr	w1, [x19, #48]
  4304a4:	mov	x0, x27
  4304a8:	str	x2, [sp, #200]
  4304ac:	bl	42fc4c <ferror@plt+0x2d2dc>
  4304b0:	mov	x3, x0
  4304b4:	ldr	x2, [sp, #200]
  4304b8:	orr	x0, x2, x0
  4304bc:	cbz	x0, 430520 <ferror@plt+0x2dbb0>
  4304c0:	ldr	w1, [x19, #48]
  4304c4:	mov	x0, x2
  4304c8:	bl	42f3f8 <ferror@plt+0x2ca88>
  4304cc:	ldr	x2, [sp, #200]
  4304d0:	cbnz	w0, 430518 <ferror@plt+0x2dba8>
  4304d4:	add	x0, sp, #0x200
  4304d8:	add	x2, x2, x24
  4304dc:	add	x3, x3, x24
  4304e0:	stp	x2, x3, [sp, #280]
  4304e4:	mov	x4, x22
  4304e8:	ldr	x5, [sp, #400]
  4304ec:	str	x19, [sp, #296]
  4304f0:	ldp	x0, x1, [x0, #-232]
  4304f4:	mov	x3, x21
  4304f8:	mov	x2, x23
  4304fc:	stp	x0, x1, [x23]
  430500:	mov	x1, x26
  430504:	mov	x0, x25
  430508:	str	x19, [x23, #16]
  43050c:	bl	42f60c <ferror@plt+0x2cc9c>
  430510:	cbnz	w0, 430488 <ferror@plt+0x2db18>
  430514:	b	4301dc <ferror@plt+0x2d86c>
  430518:	mov	x24, x3
  43051c:	b	430488 <ferror@plt+0x2db18>
  430520:	ldr	w0, [sp, #360]
  430524:	cbnz	w0, 430214 <ferror@plt+0x2d8a4>
  430528:	ldr	w0, [x28, #8]
  43052c:	cmp	w0, #0x11
  430530:	b.ne	430268 <ferror@plt+0x2d8f8>  // b.any
  430534:	ldr	w0, [sp, #156]
  430538:	cbnz	w0, 4301d8 <ferror@plt+0x2d868>
  43053c:	ldp	w1, w0, [sp, #148]
  430540:	tst	w0, w1
  430544:	b.eq	430268 <ferror@plt+0x2d8f8>  // b.none
  430548:	b	4301d8 <ferror@plt+0x2d868>
  43054c:	ldp	w1, w0, [sp, #148]
  430550:	tst	w0, w1
  430554:	b.eq	430528 <ferror@plt+0x2dbb8>  // b.none
  430558:	cbz	w12, 430560 <ferror@plt+0x2dbf0>
  43055c:	add	x10, x10, x24
  430560:	stp	x24, x10, [sp, #304]
  430564:	mov	x4, x22
  430568:	mov	x3, x21
  43056c:	ldr	x5, [sp, #400]
  430570:	str	x19, [sp, #320]
  430574:	ldp	x0, x1, [x27]
  430578:	mov	x2, x23
  43057c:	stp	x0, x1, [x23]
  430580:	mov	x1, x26
  430584:	mov	x0, x25
  430588:	str	x19, [x23, #16]
  43058c:	bl	42f60c <ferror@plt+0x2cc9c>
  430590:	cbnz	w0, 430528 <ferror@plt+0x2dbb8>
  430594:	b	4301dc <ferror@plt+0x2d86c>
  430598:	ldr	x3, [x0]
  43059c:	ldr	x2, [x1]
  4305a0:	cmp	x3, x2
  4305a4:	b.cc	4305dc <ferror@plt+0x2dc6c>  // b.lo, b.ul, b.last
  4305a8:	b.hi	4305d4 <ferror@plt+0x2dc64>  // b.pmore
  4305ac:	ldr	x3, [x0, #8]
  4305b0:	ldr	x2, [x1, #8]
  4305b4:	cmp	x3, x2
  4305b8:	b.cc	4305d4 <ferror@plt+0x2dc64>  // b.lo, b.ul, b.last
  4305bc:	b.hi	4305dc <ferror@plt+0x2dc6c>  // b.pmore
  4305c0:	ldr	x0, [x0, #16]
  4305c4:	ldr	x1, [x1, #16]
  4305c8:	ldr	x0, [x0]
  4305cc:	ldr	x1, [x1]
  4305d0:	b	4026d0 <strcmp@plt>
  4305d4:	mov	w0, #0x1                   	// #1
  4305d8:	ret
  4305dc:	mov	w0, #0xffffffff            	// #-1
  4305e0:	b	4305d8 <ferror@plt+0x2dc68>
  4305e4:	sub	sp, sp, #0xd0
  4305e8:	stp	x29, x30, [sp, #16]
  4305ec:	add	x29, sp, #0x10
  4305f0:	stp	x21, x22, [sp, #48]
  4305f4:	mov	x21, x0
  4305f8:	ldr	x0, [x1, #16]
  4305fc:	stp	x19, x20, [sp, #32]
  430600:	stp	x23, x24, [sp, #64]
  430604:	cmp	x0, x2
  430608:	mov	x23, x3
  43060c:	stp	x25, x26, [sp, #80]
  430610:	mov	x24, x4
  430614:	stp	x27, x28, [sp, #96]
  430618:	b.hi	430630 <ferror@plt+0x2dcc0>  // b.pmore
  43061c:	ldr	x4, [x1, #8]
  430620:	sub	x5, x2, x0
  430624:	mov	x20, x1
  430628:	cmp	x5, x4
  43062c:	b.cc	43064c <ferror@plt+0x2dcdc>  // b.lo, b.ul, b.last
  430630:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  430634:	mov	x0, x24
  430638:	add	x1, x1, #0x620
  43063c:	mov	w2, #0x0                   	// #0
  430640:	blr	x23
  430644:	mov	x19, #0x0                   	// #0
  430648:	b	430760 <ferror@plt+0x2ddf0>
  43064c:	ldr	x1, [x21, #56]
  430650:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x1a198>
  430654:	add	x3, x3, #0xb68
  430658:	stp	x3, x1, [sp, #144]
  43065c:	add	x0, x0, x4
  430660:	ldr	x1, [x20]
  430664:	sub	x0, x0, x2
  430668:	add	x26, sp, #0x90
  43066c:	str	x0, [sp, #168]
  430670:	add	x1, x1, x5
  430674:	ldr	w0, [x21, #120]
  430678:	str	x1, [sp, #160]
  43067c:	str	w0, [sp, #176]
  430680:	mov	x0, x26
  430684:	stp	x23, x24, [sp, #184]
  430688:	str	wzr, [sp, #200]
  43068c:	bl	42fcbc <ferror@plt+0x2d34c>
  430690:	mov	x1, x0
  430694:	cbnz	x0, 4306ac <ferror@plt+0x2dd3c>
  430698:	mov	x0, x26
  43069c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  4306a0:	add	x1, x1, #0x64e
  4306a4:	bl	42f6d8 <ferror@plt+0x2cd68>
  4306a8:	b	430644 <ferror@plt+0x2dcd4>
  4306ac:	mov	x3, x24
  4306b0:	mov	x2, x23
  4306b4:	add	x0, x20, #0x58
  4306b8:	bl	42f8a4 <ferror@plt+0x2cf34>
  4306bc:	mov	x22, x0
  4306c0:	cbz	x0, 430644 <ferror@plt+0x2dcd4>
  4306c4:	add	x27, sp, #0x80
  4306c8:	mov	x25, #0x0                   	// #0
  4306cc:	mov	x19, #0x0                   	// #0
  4306d0:	mov	w28, #0x2007                	// #8199
  4306d4:	ldr	x0, [x22, #16]
  4306d8:	cmp	x0, x25
  4306dc:	b.ls	430760 <ferror@plt+0x2ddf0>  // b.plast
  4306e0:	ldr	x0, [x22, #24]
  4306e4:	lsl	x8, x25, #3
  4306e8:	ldr	x7, [x21, #8]
  4306ec:	mov	x1, x26
  4306f0:	add	x0, x0, x25, lsl #3
  4306f4:	str	x8, [sp, #120]
  4306f8:	ldp	x5, x6, [x21, #104]
  4306fc:	str	x27, [sp]
  430700:	ldr	w0, [x0, #4]
  430704:	ldp	w3, w2, [x20, #40]
  430708:	ldr	w4, [x20, #48]
  43070c:	bl	42fe40 <ferror@plt+0x2d4d0>
  430710:	cbz	w0, 430644 <ferror@plt+0x2dcd4>
  430714:	ldr	x0, [x22, #24]
  430718:	ldr	x8, [sp, #120]
  43071c:	add	x1, x0, x8
  430720:	ldr	w0, [x0, x8]
  430724:	cmp	w0, #0x47
  430728:	b.eq	43079c <ferror@plt+0x2de2c>  // b.none
  43072c:	b.hi	430740 <ferror@plt+0x2ddd0>  // b.pmore
  430730:	cmp	w0, #0x3
  430734:	b.eq	430784 <ferror@plt+0x2de14>  // b.none
  430738:	add	x25, x25, #0x1
  43073c:	b	4306d4 <ferror@plt+0x2dd64>
  430740:	cmp	w0, #0x6e
  430744:	b.eq	430750 <ferror@plt+0x2dde0>  // b.none
  430748:	cmp	w0, w28
  43074c:	b.ne	430738 <ferror@plt+0x2ddc8>  // b.any
  430750:	ldr	w0, [sp, #128]
  430754:	cmp	w0, #0x4
  430758:	b.ne	430738 <ferror@plt+0x2ddc8>  // b.any
  43075c:	ldr	x19, [sp, #136]
  430760:	mov	x0, x19
  430764:	ldp	x29, x30, [sp, #16]
  430768:	ldp	x19, x20, [sp, #32]
  43076c:	ldp	x21, x22, [sp, #48]
  430770:	ldp	x23, x24, [sp, #64]
  430774:	ldp	x25, x26, [sp, #80]
  430778:	ldp	x27, x28, [sp, #96]
  43077c:	add	sp, sp, #0xd0
  430780:	ret
  430784:	cbnz	x19, 430738 <ferror@plt+0x2ddc8>
  430788:	ldr	w0, [sp, #128]
  43078c:	cmp	w0, #0x4
  430790:	b.ne	430738 <ferror@plt+0x2ddc8>  // b.any
  430794:	ldr	x19, [sp, #136]
  430798:	b	430738 <ferror@plt+0x2ddc8>
  43079c:	ldr	w0, [x1, #4]
  4307a0:	cmp	w0, #0x20
  4307a4:	b.eq	430738 <ferror@plt+0x2ddc8>  // b.none
  4307a8:	mov	x4, x24
  4307ac:	mov	x3, x23
  4307b0:	mov	x2, x27
  4307b4:	mov	x1, x20
  4307b8:	mov	x0, x21
  4307bc:	bl	4307cc <ferror@plt+0x2de5c>
  4307c0:	cmp	x0, #0x0
  4307c4:	csel	x19, x19, x0, eq  // eq = none
  4307c8:	b	430738 <ferror@plt+0x2ddc8>
  4307cc:	stp	x29, x30, [sp, #-64]!
  4307d0:	mov	x29, sp
  4307d4:	stp	x19, x20, [sp, #16]
  4307d8:	mov	x19, x2
  4307dc:	ldr	w2, [x2]
  4307e0:	stp	x21, x22, [sp, #32]
  4307e4:	mov	x20, x0
  4307e8:	mov	x21, x3
  4307ec:	mov	x22, x4
  4307f0:	cmp	w2, #0x6
  4307f4:	b.ne	430858 <ferror@plt+0x2dee8>  // b.any
  4307f8:	ldp	x1, x2, [x20, #40]
  4307fc:	adrp	x4, 42f000 <ferror@plt+0x2c690>
  430800:	ldr	x0, [x19, #8]
  430804:	add	x4, x4, #0x44c
  430808:	mov	x3, #0x8                   	// #8
  43080c:	str	x0, [sp, #56]
  430810:	add	x0, sp, #0x38
  430814:	bl	402560 <bsearch@plt>
  430818:	cbz	x0, 430828 <ferror@plt+0x2deb8>
  43081c:	ldr	x1, [x0]
  430820:	cbnz	x1, 430838 <ferror@plt+0x2dec8>
  430824:	mov	x0, #0x0                   	// #0
  430828:	ldp	x19, x20, [sp, #16]
  43082c:	ldp	x21, x22, [sp, #32]
  430830:	ldp	x29, x30, [sp], #64
  430834:	ret
  430838:	ldr	x2, [x19, #8]
  43083c:	mov	x4, x22
  430840:	ldr	x0, [x1, #24]
  430844:	mov	x3, x21
  430848:	sub	x2, x2, x0
  43084c:	mov	x0, x20
  430850:	bl	4305e4 <ferror@plt+0x2dc74>
  430854:	b	430828 <ferror@plt+0x2deb8>
  430858:	cmp	w2, #0x2
  43085c:	ccmp	w2, #0x5, #0x4, ne  // ne = any
  430860:	b.ne	43086c <ferror@plt+0x2defc>  // b.any
  430864:	ldr	x2, [x19, #8]
  430868:	b	430850 <ferror@plt+0x2dee0>
  43086c:	cmp	w2, #0x7
  430870:	b.ne	430824 <ferror@plt+0x2deb4>  // b.any
  430874:	ldr	x0, [x0, #8]
  430878:	adrp	x4, 42f000 <ferror@plt+0x2c690>
  43087c:	mov	x3, #0x8                   	// #8
  430880:	add	x4, x4, #0x44c
  430884:	ldp	x1, x2, [x0, #40]
  430888:	ldr	x0, [x19, #8]
  43088c:	str	x0, [sp, #56]
  430890:	add	x0, sp, #0x38
  430894:	bl	402560 <bsearch@plt>
  430898:	cbz	x0, 430828 <ferror@plt+0x2deb8>
  43089c:	ldr	x1, [x0]
  4308a0:	cbz	x1, 430824 <ferror@plt+0x2deb4>
  4308a4:	ldr	x2, [x19, #8]
  4308a8:	mov	x4, x22
  4308ac:	ldr	x0, [x1, #24]
  4308b0:	mov	x3, x21
  4308b4:	sub	x2, x2, x0
  4308b8:	ldr	x0, [x20, #8]
  4308bc:	b	430850 <ferror@plt+0x2dee0>
  4308c0:	sub	sp, sp, #0x120
  4308c4:	stp	x29, x30, [sp, #16]
  4308c8:	add	x29, sp, #0x10
  4308cc:	stp	x19, x20, [sp, #32]
  4308d0:	mov	x19, x6
  4308d4:	mov	x20, x7
  4308d8:	stp	x21, x22, [sp, #48]
  4308dc:	mov	x21, x1
  4308e0:	mov	x22, x2
  4308e4:	stp	x25, x26, [sp, #80]
  4308e8:	mov	x25, x4
  4308ec:	add	x26, sp, #0xe0
  4308f0:	stp	x23, x24, [sp, #64]
  4308f4:	mov	x24, x0
  4308f8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  4308fc:	add	x0, x0, #0xaab
  430900:	stp	x27, x28, [sp, #96]
  430904:	stp	x3, x5, [sp, #128]
  430908:	str	x0, [sp, #160]
  43090c:	ldr	x0, [x25, #24]
  430910:	cbz	x0, 430924 <ferror@plt+0x2dfb4>
  430914:	mov	x0, x25
  430918:	bl	42fcbc <ferror@plt+0x2d34c>
  43091c:	mov	x1, x0
  430920:	cbnz	x0, 430948 <ferror@plt+0x2dfd8>
  430924:	mov	w0, #0x1                   	// #1
  430928:	ldp	x29, x30, [sp, #16]
  43092c:	ldp	x19, x20, [sp, #32]
  430930:	ldp	x21, x22, [sp, #48]
  430934:	ldp	x23, x24, [sp, #64]
  430938:	ldp	x25, x26, [sp, #80]
  43093c:	ldp	x27, x28, [sp, #96]
  430940:	add	sp, sp, #0x120
  430944:	ret
  430948:	mov	x3, x20
  43094c:	mov	x2, x19
  430950:	add	x0, x22, #0x58
  430954:	bl	42f8a4 <ferror@plt+0x2cf34>
  430958:	mov	x23, x0
  43095c:	cbnz	x0, 430968 <ferror@plt+0x2dff8>
  430960:	mov	w0, #0x0                   	// #0
  430964:	b	430928 <ferror@plt+0x2dfb8>
  430968:	ldr	w0, [x0, #8]
  43096c:	cmp	w0, #0x2e
  430970:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  430974:	b.eq	430e94 <ferror@plt+0x2e524>  // b.none
  430978:	cmp	w0, #0x1d
  43097c:	b.ne	430a4c <ferror@plt+0x2e0dc>  // b.any
  430980:	ldr	x0, [sp, #296]
  430984:	mov	x3, x20
  430988:	mov	x2, x19
  43098c:	mov	x1, #0x28                  	// #40
  430990:	str	x0, [sp, #120]
  430994:	mov	x0, x24
  430998:	bl	42c0c0 <ferror@plt+0x29750>
  43099c:	mov	x27, x0
  4309a0:	cbz	x0, 430960 <ferror@plt+0x2dff0>
  4309a4:	mov	w28, #0x1                   	// #1
  4309a8:	stp	xzr, xzr, [x0]
  4309ac:	stp	xzr, xzr, [x0, #16]
  4309b0:	str	xzr, [x0, #32]
  4309b4:	mov	w10, #0x0                   	// #0
  4309b8:	mov	x14, #0x0                   	// #0
  4309bc:	mov	w13, #0x0                   	// #0
  4309c0:	mov	x12, #0x0                   	// #0
  4309c4:	mov	x15, #0x0                   	// #0
  4309c8:	mov	x11, #0x0                   	// #0
  4309cc:	stp	wzr, wzr, [sp, #148]
  4309d0:	str	wzr, [sp, #216]
  4309d4:	ldr	x0, [x23, #16]
  4309d8:	cmp	x0, x11
  4309dc:	b.hi	430a60 <ferror@plt+0x2e0f0>  // b.pmore
  4309e0:	cbz	w28, 430a08 <ferror@plt+0x2e098>
  4309e4:	ldr	x0, [x27]
  4309e8:	cbnz	x0, 430cc8 <ferror@plt+0x2e358>
  4309ec:	mov	w28, #0x0                   	// #0
  4309f0:	mov	x4, x20
  4309f4:	mov	x3, x19
  4309f8:	mov	x1, x27
  4309fc:	mov	x0, x24
  430a00:	mov	x2, #0x28                  	// #40
  430a04:	bl	42c004 <ferror@plt+0x29694>
  430a08:	ldr	w0, [x23, #12]
  430a0c:	cbz	w0, 43090c <ferror@plt+0x2df9c>
  430a10:	cbnz	w28, 430e18 <ferror@plt+0x2e4a8>
  430a14:	ldp	x3, x5, [sp, #128]
  430a18:	mov	x7, x20
  430a1c:	ldr	x0, [sp, #296]
  430a20:	str	x0, [sp, #8]
  430a24:	ldr	x0, [sp, #288]
  430a28:	str	x0, [sp]
  430a2c:	mov	x6, x19
  430a30:	mov	x4, x25
  430a34:	mov	x2, x22
  430a38:	mov	x1, x21
  430a3c:	mov	x0, x24
  430a40:	bl	4308c0 <ferror@plt+0x2df50>
  430a44:	cbnz	w0, 43090c <ferror@plt+0x2df9c>
  430a48:	b	430960 <ferror@plt+0x2dff0>
  430a4c:	ldr	x0, [sp, #288]
  430a50:	mov	w28, #0x0                   	// #0
  430a54:	mov	x27, #0x0                   	// #0
  430a58:	str	x0, [sp, #120]
  430a5c:	b	4309b4 <ferror@plt+0x2e044>
  430a60:	ldr	x0, [x23, #24]
  430a64:	lsl	x18, x11, #3
  430a68:	ldp	w3, w2, [x22, #40]
  430a6c:	mov	x1, x25
  430a70:	add	x0, x0, x11, lsl #3
  430a74:	ldr	w4, [x22, #48]
  430a78:	ldr	x7, [x21, #8]
  430a7c:	stp	x11, x18, [sp, #168]
  430a80:	ldp	x5, x6, [x21, #104]
  430a84:	str	x26, [sp]
  430a88:	stp	x15, x12, [sp, #184]
  430a8c:	ldr	w0, [x0, #4]
  430a90:	str	w13, [sp, #200]
  430a94:	str	x14, [sp, #208]
  430a98:	str	w10, [sp, #220]
  430a9c:	bl	42fe40 <ferror@plt+0x2d4d0>
  430aa0:	cbz	w0, 430960 <ferror@plt+0x2dff0>
  430aa4:	ldr	w0, [x23, #8]
  430aa8:	ldr	w13, [sp, #200]
  430aac:	ldr	w10, [sp, #220]
  430ab0:	cmp	w0, #0x11
  430ab4:	ldp	x11, x18, [sp, #168]
  430ab8:	ldp	x15, x12, [sp, #184]
  430abc:	ldr	x14, [sp, #208]
  430ac0:	b.ne	430ae8 <ferror@plt+0x2e178>  // b.any
  430ac4:	ldr	x0, [x23, #24]
  430ac8:	ldr	w0, [x0, x18]
  430acc:	cmp	w0, #0x11
  430ad0:	b.ne	430ae8 <ferror@plt+0x2e178>  // b.any
  430ad4:	ldr	w0, [sp, #224]
  430ad8:	cmp	w0, #0x1
  430adc:	b.ne	430ae8 <ferror@plt+0x2e178>  // b.any
  430ae0:	ldr	x0, [sp, #232]
  430ae4:	str	x0, [sp, #128]
  430ae8:	cbz	w28, 430b20 <ferror@plt+0x2e1b0>
  430aec:	ldr	x0, [x23, #24]
  430af0:	add	x1, x0, x18
  430af4:	ldr	w0, [x0, x18]
  430af8:	cmp	w0, #0x55
  430afc:	b.eq	430cac <ferror@plt+0x2e33c>  // b.none
  430b00:	b.hi	430b90 <ferror@plt+0x2e220>  // b.pmore
  430b04:	cmp	w0, #0x12
  430b08:	b.eq	430c80 <ferror@plt+0x2e310>  // b.none
  430b0c:	b.hi	430b28 <ferror@plt+0x2e1b8>  // b.pmore
  430b10:	cmp	w0, #0x3
  430b14:	b.eq	430c48 <ferror@plt+0x2e2d8>  // b.none
  430b18:	cmp	w0, #0x11
  430b1c:	b.eq	430c68 <ferror@plt+0x2e2f8>  // b.none
  430b20:	add	x11, x11, #0x1
  430b24:	b	4309d4 <ferror@plt+0x2e064>
  430b28:	cmp	w0, #0x31
  430b2c:	b.eq	430b38 <ferror@plt+0x2e1c8>  // b.none
  430b30:	cmp	w0, #0x47
  430b34:	b.ne	430b20 <ferror@plt+0x2e1b0>  // b.any
  430b38:	cbnz	w10, 430b20 <ferror@plt+0x2e1b0>
  430b3c:	ldr	w0, [x1, #4]
  430b40:	cmp	w0, #0x20
  430b44:	b.eq	430b88 <ferror@plt+0x2e218>  // b.none
  430b48:	mov	x4, x20
  430b4c:	mov	x3, x19
  430b50:	mov	x2, x26
  430b54:	mov	x1, x22
  430b58:	mov	x0, x21
  430b5c:	stp	x11, x15, [sp, #168]
  430b60:	str	x12, [sp, #184]
  430b64:	str	w13, [sp, #192]
  430b68:	str	x14, [sp, #200]
  430b6c:	bl	4307cc <ferror@plt+0x2de5c>
  430b70:	ldr	w13, [sp, #192]
  430b74:	ldp	x11, x15, [sp, #168]
  430b78:	ldr	x12, [sp, #184]
  430b7c:	ldr	x14, [sp, #200]
  430b80:	cbz	x0, 430b88 <ferror@plt+0x2e218>
  430b84:	str	x0, [x27]
  430b88:	mov	w10, #0x0                   	// #0
  430b8c:	b	430b20 <ferror@plt+0x2e1b0>
  430b90:	cmp	w0, #0x59
  430b94:	b.eq	430c30 <ferror@plt+0x2e2c0>  // b.none
  430b98:	b.hi	430bc4 <ferror@plt+0x2e254>  // b.pmore
  430b9c:	cmp	w0, #0x58
  430ba0:	b.ne	430b20 <ferror@plt+0x2e1b0>  // b.any
  430ba4:	ldr	w0, [sp, #224]
  430ba8:	cmp	w0, #0x2
  430bac:	b.ne	430b20 <ferror@plt+0x2e1b0>  // b.any
  430bb0:	ldr	x0, [sp, #232]
  430bb4:	cbnz	x0, 430bf4 <ferror@plt+0x2e284>
  430bb8:	ldr	x0, [sp, #160]
  430bbc:	str	x0, [x27, #8]
  430bc0:	b	430b20 <ferror@plt+0x2e1b0>
  430bc4:	cmp	w0, #0x6e
  430bc8:	b.eq	430bd8 <ferror@plt+0x2e268>  // b.none
  430bcc:	mov	w1, #0x2007                	// #8199
  430bd0:	cmp	w0, w1
  430bd4:	b.ne	430b20 <ferror@plt+0x2e1b0>  // b.any
  430bd8:	ldr	w0, [sp, #224]
  430bdc:	cmp	w0, #0x4
  430be0:	b.ne	430b20 <ferror@plt+0x2e1b0>  // b.any
  430be4:	ldr	x0, [sp, #232]
  430be8:	mov	w10, w28
  430bec:	str	x0, [x27]
  430bf0:	b	430b20 <ferror@plt+0x2e1b0>
  430bf4:	ldr	x2, [sp, #136]
  430bf8:	sub	x1, x0, #0x1
  430bfc:	ldr	x2, [x2, #48]
  430c00:	cmp	x1, x2
  430c04:	b.cc	430c1c <ferror@plt+0x2e2ac>  // b.lo, b.ul, b.last
  430c08:	mov	x0, x25
  430c0c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  430c10:	add	x1, x1, #0x677
  430c14:	bl	42f6d8 <ferror@plt+0x2cd68>
  430c18:	b	430960 <ferror@plt+0x2dff0>
  430c1c:	ldr	x1, [sp, #136]
  430c20:	ldr	x1, [x1, #56]
  430c24:	add	x0, x1, x0, lsl #3
  430c28:	ldur	x0, [x0, #-8]
  430c2c:	b	430bbc <ferror@plt+0x2e24c>
  430c30:	ldr	w0, [sp, #224]
  430c34:	cmp	w0, #0x2
  430c38:	b.ne	430b20 <ferror@plt+0x2e1b0>  // b.any
  430c3c:	ldr	x0, [sp, #232]
  430c40:	str	w0, [x27, #16]
  430c44:	b	430b20 <ferror@plt+0x2e1b0>
  430c48:	ldr	x0, [x27]
  430c4c:	cbnz	x0, 430b20 <ferror@plt+0x2e1b0>
  430c50:	ldr	w0, [sp, #224]
  430c54:	cmp	w0, #0x4
  430c58:	b.ne	430b20 <ferror@plt+0x2e1b0>  // b.any
  430c5c:	ldr	x0, [sp, #232]
  430c60:	str	x0, [x27]
  430c64:	b	430b20 <ferror@plt+0x2e1b0>
  430c68:	ldr	w0, [sp, #224]
  430c6c:	cmp	w0, #0x1
  430c70:	b.ne	430b20 <ferror@plt+0x2e1b0>  // b.any
  430c74:	str	w28, [sp, #152]
  430c78:	ldr	x15, [sp, #232]
  430c7c:	b	430b20 <ferror@plt+0x2e1b0>
  430c80:	ldr	w0, [sp, #224]
  430c84:	cmp	w0, #0x1
  430c88:	b.ne	430c98 <ferror@plt+0x2e328>  // b.any
  430c8c:	ldr	x12, [sp, #232]
  430c90:	mov	w13, w28
  430c94:	b	430b20 <ferror@plt+0x2e1b0>
  430c98:	cmp	w0, #0x2
  430c9c:	b.ne	430b20 <ferror@plt+0x2e1b0>  // b.any
  430ca0:	str	w28, [sp, #216]
  430ca4:	ldr	x12, [sp, #232]
  430ca8:	b	430c90 <ferror@plt+0x2e320>
  430cac:	ldr	w0, [sp, #224]
  430cb0:	cmp	w0, #0x2
  430cb4:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  430cb8:	b.ne	430b20 <ferror@plt+0x2e1b0>  // b.any
  430cbc:	str	w28, [sp, #148]
  430cc0:	ldr	x14, [sp, #232]
  430cc4:	b	430b20 <ferror@plt+0x2e1b0>
  430cc8:	ldr	w0, [sp, #148]
  430ccc:	cbz	w0, 430db8 <ferror@plt+0x2e448>
  430cd0:	ldr	x0, [x21, #96]
  430cd4:	cmp	x14, x0
  430cd8:	b.cc	430cf4 <ferror@plt+0x2e384>  // b.lo, b.ul, b.last
  430cdc:	mov	x0, x20
  430ce0:	mov	w2, #0x0                   	// #0
  430ce4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  430ce8:	add	x1, x1, #0x6a8
  430cec:	blr	x19
  430cf0:	b	430960 <ferror@plt+0x2dff0>
  430cf4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  430cf8:	add	x1, x1, #0xb8e
  430cfc:	str	x1, [sp, #224]
  430d00:	ldr	x1, [x21, #88]
  430d04:	str	x1, [sp, #232]
  430d08:	ldr	x28, [sp, #128]
  430d0c:	add	x1, x1, x14
  430d10:	sub	x14, x0, x14
  430d14:	ldr	w0, [x21, #120]
  430d18:	stp	x1, x14, [sp, #240]
  430d1c:	str	w0, [sp, #256]
  430d20:	stp	x19, x20, [sp, #264]
  430d24:	str	wzr, [sp, #280]
  430d28:	ldr	w0, [sp, #280]
  430d2c:	cbnz	w0, 430960 <ferror@plt+0x2dff0>
  430d30:	ldr	w1, [x22, #48]
  430d34:	mov	x0, x26
  430d38:	bl	42fc4c <ferror@plt+0x2d2dc>
  430d3c:	mov	x3, x0
  430d40:	ldr	w1, [x22, #48]
  430d44:	mov	x0, x26
  430d48:	str	x3, [sp, #152]
  430d4c:	bl	42fc4c <ferror@plt+0x2d2dc>
  430d50:	mov	x4, x0
  430d54:	ldr	x3, [sp, #152]
  430d58:	orr	x0, x3, x0
  430d5c:	cbz	x0, 430da8 <ferror@plt+0x2e438>
  430d60:	ldr	w1, [x22, #48]
  430d64:	mov	x0, x3
  430d68:	bl	42f3f8 <ferror@plt+0x2ca88>
  430d6c:	ldr	x3, [sp, #152]
  430d70:	cbnz	w0, 430da0 <ferror@plt+0x2e430>
  430d74:	ldr	x1, [x21, #16]
  430d78:	mov	x6, x20
  430d7c:	ldr	x7, [sp, #120]
  430d80:	mov	x5, x19
  430d84:	add	x4, x4, x28
  430d88:	add	x3, x3, x28
  430d8c:	mov	x2, x27
  430d90:	mov	x0, x24
  430d94:	bl	42f9fc <ferror@plt+0x2d08c>
  430d98:	cbnz	w0, 430d28 <ferror@plt+0x2e3b8>
  430d9c:	b	430960 <ferror@plt+0x2dff0>
  430da0:	mov	x28, x4
  430da4:	b	430d28 <ferror@plt+0x2e3b8>
  430da8:	ldr	w0, [sp, #280]
  430dac:	cbnz	w0, 430960 <ferror@plt+0x2dff0>
  430db0:	ldr	w28, [sp, #148]
  430db4:	b	430a08 <ferror@plt+0x2e098>
  430db8:	ldr	w0, [sp, #152]
  430dbc:	ands	w28, w0, w13
  430dc0:	b.eq	430dfc <ferror@plt+0x2e48c>  // b.none
  430dc4:	ldr	w0, [sp, #216]
  430dc8:	cbz	w0, 430dd0 <ferror@plt+0x2e460>
  430dcc:	add	x12, x12, x15
  430dd0:	ldr	x1, [x21, #16]
  430dd4:	mov	x6, x20
  430dd8:	ldr	x7, [sp, #120]
  430ddc:	mov	x5, x19
  430de0:	mov	x4, x12
  430de4:	mov	x3, x15
  430de8:	mov	x2, x27
  430dec:	mov	x0, x24
  430df0:	bl	42f9fc <ferror@plt+0x2d08c>
  430df4:	cbnz	w0, 430a08 <ferror@plt+0x2e098>
  430df8:	b	430960 <ferror@plt+0x2dff0>
  430dfc:	mov	x4, x20
  430e00:	mov	x3, x19
  430e04:	mov	x1, x27
  430e08:	mov	x0, x24
  430e0c:	mov	x2, #0x28                  	// #40
  430e10:	bl	42c004 <ferror@plt+0x29694>
  430e14:	b	430a08 <ferror@plt+0x2e098>
  430e18:	ldp	x3, x5, [sp, #128]
  430e1c:	stp	xzr, xzr, [x26]
  430e20:	mov	x7, x20
  430e24:	stp	xzr, xzr, [x26, #16]
  430e28:	mov	x6, x19
  430e2c:	mov	x4, x25
  430e30:	ldr	x0, [sp, #288]
  430e34:	stp	x0, x26, [sp]
  430e38:	mov	x2, x22
  430e3c:	mov	x1, x21
  430e40:	mov	x0, x24
  430e44:	bl	4308c0 <ferror@plt+0x2df50>
  430e48:	cbz	w0, 430960 <ferror@plt+0x2dff0>
  430e4c:	ldr	x0, [sp, #248]
  430e50:	cbz	x0, 43090c <ferror@plt+0x2df9c>
  430e54:	mov	x3, x20
  430e58:	mov	x2, x19
  430e5c:	mov	x1, x26
  430e60:	mov	x0, x24
  430e64:	bl	42c33c <ferror@plt+0x299cc>
  430e68:	cbz	w0, 430960 <ferror@plt+0x2dff0>
  430e6c:	ldr	x1, [sp, #248]
  430e70:	adrp	x3, 430000 <ferror@plt+0x2d690>
  430e74:	ldr	x23, [sp, #224]
  430e78:	add	x3, x3, #0x598
  430e7c:	mov	x2, #0x18                  	// #24
  430e80:	mov	x0, x23
  430e84:	bl	4323ec <ferror@plt+0x2fa7c>
  430e88:	ldr	x0, [sp, #248]
  430e8c:	stp	x23, x0, [x27, #24]
  430e90:	b	43090c <ferror@plt+0x2df9c>
  430e94:	cmp	w0, #0x1d
  430e98:	ldp	x1, x0, [sp, #288]
  430e9c:	csel	x0, x0, x1, eq  // eq = none
  430ea0:	b	430984 <ferror@plt+0x2e014>
  430ea4:	sub	sp, sp, #0x1d0
  430ea8:	stp	x29, x30, [sp, #16]
  430eac:	add	x29, sp, #0x10
  430eb0:	str	x2, [sp, #232]
  430eb4:	ldr	x2, [x1, #32]
  430eb8:	stp	x19, x20, [sp, #32]
  430ebc:	stp	x21, x22, [sp, #48]
  430ec0:	mov	x21, x0
  430ec4:	mov	w0, #0x1                   	// #1
  430ec8:	stp	x23, x24, [sp, #64]
  430ecc:	mov	x23, x1
  430ed0:	stp	x25, x26, [sp, #80]
  430ed4:	stp	x27, x28, [sp, #96]
  430ed8:	str	w0, [x6]
  430edc:	str	x3, [sp, #144]
  430ee0:	str	x6, [sp, #168]
  430ee4:	cbz	x2, 431074 <ferror@plt+0x2e704>
  430ee8:	ldr	x1, [x1, #24]
  430eec:	add	x0, sp, #0xe8
  430ef0:	mov	x24, x4
  430ef4:	mov	x22, x5
  430ef8:	adrp	x4, 42f000 <ferror@plt+0x2c690>
  430efc:	mov	x3, #0x18                  	// #24
  430f00:	add	x4, x4, #0x4a0
  430f04:	str	x0, [sp, #176]
  430f08:	bl	402560 <bsearch@plt>
  430f0c:	mov	x20, x0
  430f10:	cbz	x0, 431074 <ferror@plt+0x2e704>
  430f14:	ldp	x2, x3, [x23, #24]
  430f18:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  430f1c:	ldr	x1, [sp, #232]
  430f20:	movk	x4, #0xaaab
  430f24:	sub	x0, x20, x2
  430f28:	asr	x0, x0, #3
  430f2c:	mul	x0, x0, x4
  430f30:	add	x0, x0, #0x1
  430f34:	cmp	x0, x3
  430f38:	b.cs	430f54 <ferror@plt+0x2e5e4>  // b.hs, b.nlast
  430f3c:	ldr	x0, [x20, #24]
  430f40:	cmp	x0, x1
  430f44:	b.hi	430f54 <ferror@plt+0x2e5e4>  // b.pmore
  430f48:	ldr	x0, [x20, #32]
  430f4c:	cmp	x1, x0
  430f50:	b.cc	4310a0 <ferror@plt+0x2e730>  // b.lo, b.ul, b.last
  430f54:	ldr	x0, [x20, #16]
  430f58:	ldr	w3, [x21, #8]
  430f5c:	ldr	x1, [x0, #104]
  430f60:	str	x0, [sp, #120]
  430f64:	ldr	x0, [x23, #24]
  430f68:	cmp	x0, x20
  430f6c:	b.cs	430f8c <ferror@plt+0x2e61c>  // b.hs, b.nlast
  430f70:	ldur	x2, [x20, #-24]
  430f74:	ldr	x0, [sp, #232]
  430f78:	cmp	x2, x0
  430f7c:	b.hi	430f8c <ferror@plt+0x2e61c>  // b.pmore
  430f80:	ldur	x2, [x20, #-16]
  430f84:	cmp	x0, x2
  430f88:	b.cc	4310a8 <ferror@plt+0x2e738>  // b.lo, b.ul, b.last
  430f8c:	ldr	w0, [x21, #8]
  430f90:	cbz	w0, 430fa0 <ferror@plt+0x2e630>
  430f94:	ldr	x0, [sp, #120]
  430f98:	add	x0, x0, #0x68
  430f9c:	ldar	x1, [x0]
  430fa0:	cbnz	x1, 431ba8 <ferror@plt+0x2f238>
  430fa4:	ldr	x0, [x20, #16]
  430fa8:	stp	xzr, xzr, [sp, #272]
  430fac:	stp	xzr, xzr, [sp, #288]
  430fb0:	stp	xzr, xzr, [sp, #304]
  430fb4:	stp	xzr, xzr, [sp, #320]
  430fb8:	str	x0, [sp, #152]
  430fbc:	ldr	x2, [x0, #56]
  430fc0:	stp	xzr, xzr, [sp, #240]
  430fc4:	ldr	x0, [x23, #80]
  430fc8:	stp	xzr, xzr, [sp, #256]
  430fcc:	cmp	x2, x0
  430fd0:	b.cc	4310c8 <ferror@plt+0x2e758>  // b.lo, b.ul, b.last
  430fd4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  430fd8:	mov	x0, x22
  430fdc:	add	x1, x1, #0x6cc
  430fe0:	mov	w2, #0x0                   	// #0
  430fe4:	blr	x24
  430fe8:	ldp	x1, x0, [sp, #248]
  430fec:	mov	x3, x22
  430ff0:	mov	x2, x24
  430ff4:	mov	x19, #0x0                   	// #0
  430ff8:	mov	x26, #0x0                   	// #0
  430ffc:	mov	x25, #0x0                   	// #0
  431000:	add	x0, x0, x1
  431004:	add	x1, sp, #0xf0
  431008:	stp	xzr, x0, [sp, #248]
  43100c:	mov	x0, x21
  431010:	bl	42c33c <ferror@plt+0x299cc>
  431014:	add	x1, sp, #0x110
  431018:	mov	x0, x21
  43101c:	mov	x3, x22
  431020:	mov	x2, x24
  431024:	bl	42f72c <ferror@plt+0x2cdbc>
  431028:	mov	x1, #0xffffffffffffffff    	// #-1
  43102c:	mov	w0, #0x0                   	// #0
  431030:	ldr	w2, [x21, #8]
  431034:	cbnz	w2, 4319e4 <ferror@plt+0x2f074>
  431038:	ldr	x2, [sp, #120]
  43103c:	stp	x1, x26, [x2, #104]
  431040:	stp	x19, x25, [x2, #120]
  431044:	cmn	x1, #0x1
  431048:	b.ne	431a18 <ferror@plt+0x2f0a8>  // b.any
  43104c:	cbz	w0, 431bb0 <ferror@plt+0x2f240>
  431050:	ldr	x3, [sp, #144]
  431054:	mov	x5, x22
  431058:	ldr	x6, [sp, #168]
  43105c:	mov	x4, x24
  431060:	ldr	x2, [sp, #232]
  431064:	mov	x1, x23
  431068:	mov	x0, x21
  43106c:	bl	430ea4 <ferror@plt+0x2e534>
  431070:	b	431080 <ferror@plt+0x2e710>
  431074:	ldr	x0, [sp, #168]
  431078:	str	wzr, [x0]
  43107c:	mov	w0, #0x0                   	// #0
  431080:	ldp	x29, x30, [sp, #16]
  431084:	ldp	x19, x20, [sp, #32]
  431088:	ldp	x21, x22, [sp, #48]
  43108c:	ldp	x23, x24, [sp, #64]
  431090:	ldp	x25, x26, [sp, #80]
  431094:	ldp	x27, x28, [sp, #96]
  431098:	add	sp, sp, #0x1d0
  43109c:	ret
  4310a0:	add	x20, x20, #0x18
  4310a4:	b	430f24 <ferror@plt+0x2e5b4>
  4310a8:	cbz	w3, 4310b8 <ferror@plt+0x2e748>
  4310ac:	ldr	x0, [sp, #120]
  4310b0:	add	x0, x0, #0x68
  4310b4:	ldar	x1, [x0]
  4310b8:	cmn	x1, #0x1
  4310bc:	b.ne	430f8c <ferror@plt+0x2e61c>  // b.any
  4310c0:	sub	x20, x20, #0x18
  4310c4:	b	430f54 <ferror@plt+0x2e5e4>
  4310c8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  4310cc:	add	x1, x1, #0xb74
  4310d0:	str	x1, [sp, #336]
  4310d4:	sub	x0, x0, x2
  4310d8:	ldr	x1, [x23, #72]
  4310dc:	str	x1, [sp, #344]
  4310e0:	add	x19, sp, #0x150
  4310e4:	str	x0, [sp, #360]
  4310e8:	add	x1, x1, x2
  4310ec:	ldr	w0, [x23, #120]
  4310f0:	str	x1, [sp, #352]
  4310f4:	str	w0, [sp, #368]
  4310f8:	mov	x0, x19
  4310fc:	stp	x24, x22, [sp, #376]
  431100:	str	wzr, [sp, #392]
  431104:	bl	42fb20 <ferror@plt+0x2d1b0>
  431108:	mov	x1, #0xffffffff            	// #4294967295
  43110c:	mov	w2, w0
  431110:	cmp	x1, w0, uxtw
  431114:	b.ne	43115c <ferror@plt+0x2e7ec>  // b.any
  431118:	mov	x0, x19
  43111c:	bl	42fb64 <ferror@plt+0x2d1f4>
  431120:	mov	x2, x0
  431124:	mov	w25, #0x1                   	// #1
  431128:	mov	x0, x19
  43112c:	str	x2, [sp, #360]
  431130:	bl	42fbc8 <ferror@plt+0x2d258>
  431134:	and	w0, w0, #0xffff
  431138:	str	w0, [sp, #272]
  43113c:	sub	w0, w0, #0x2
  431140:	cmp	w0, #0x2
  431144:	b.ls	431164 <ferror@plt+0x2e7f4>  // b.plast
  431148:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  43114c:	add	x1, x1, #0x6ea
  431150:	mov	x0, x19
  431154:	bl	42f6d8 <ferror@plt+0x2cd68>
  431158:	b	430fe8 <ferror@plt+0x2e678>
  43115c:	mov	w25, #0x0                   	// #0
  431160:	b	431128 <ferror@plt+0x2e7b8>
  431164:	mov	w1, w25
  431168:	mov	x0, x19
  43116c:	bl	42fba8 <ferror@plt+0x2d238>
  431170:	add	x25, sp, #0x190
  431174:	ldp	x2, x3, [sp, #336]
  431178:	stp	x2, x3, [sp, #400]
  43117c:	mov	x1, x0
  431180:	ldp	x2, x3, [sp, #352]
  431184:	stp	x2, x3, [sp, #416]
  431188:	mov	x0, x19
  43118c:	ldp	x2, x3, [sp, #368]
  431190:	stp	x2, x3, [sp, #432]
  431194:	ldp	x2, x3, [sp, #384]
  431198:	str	x1, [sp, #424]
  43119c:	stp	x2, x3, [sp, #448]
  4311a0:	bl	42fab8 <ferror@plt+0x2d148>
  4311a4:	cbz	w0, 430fe8 <ferror@plt+0x2e678>
  4311a8:	mov	x0, x25
  4311ac:	bl	42fc18 <ferror@plt+0x2d2a8>
  4311b0:	and	w0, w0, #0xff
  4311b4:	str	w0, [sp, #276]
  4311b8:	ldr	w0, [sp, #272]
  4311bc:	cmp	w0, #0x3
  4311c0:	b.gt	4313a8 <ferror@plt+0x2ea38>
  4311c4:	mov	w0, #0x1                   	// #1
  4311c8:	str	w0, [sp, #280]
  4311cc:	mov	x0, x25
  4311d0:	bl	42fc18 <ferror@plt+0x2d2a8>
  4311d4:	mov	x0, x25
  4311d8:	mov	x1, #0x1                   	// #1
  4311dc:	ldr	x26, [sp, #416]
  4311e0:	bl	42fab8 <ferror@plt+0x2d148>
  4311e4:	cbz	w0, 4313b8 <ferror@plt+0x2ea48>
  4311e8:	ldrb	w0, [x26]
  4311ec:	eor	w0, w0, #0xffffff80
  4311f0:	sub	w0, w0, #0x80
  4311f4:	sxtb	w0, w0
  4311f8:	str	w0, [sp, #284]
  4311fc:	mov	x0, x25
  431200:	bl	42fc18 <ferror@plt+0x2d2a8>
  431204:	and	w0, w0, #0xff
  431208:	str	w0, [sp, #288]
  43120c:	mov	x0, x25
  431210:	bl	42fc18 <ferror@plt+0x2d2a8>
  431214:	and	w1, w0, #0xff
  431218:	ldr	x0, [sp, #416]
  43121c:	str	w1, [sp, #292]
  431220:	sub	w1, w1, #0x1
  431224:	str	x0, [sp, #296]
  431228:	mov	x0, x25
  43122c:	bl	42fab8 <ferror@plt+0x2d148>
  431230:	cbz	w0, 430fe8 <ferror@plt+0x2e678>
  431234:	ldp	x26, x28, [sp, #416]
  431238:	str	xzr, [sp, #304]
  43123c:	add	x28, x26, x28
  431240:	cmp	x28, x26
  431244:	ldr	x27, [sp, #304]
  431248:	b.ls	431254 <ferror@plt+0x2e8e4>  // b.plast
  43124c:	ldrb	w0, [x26]
  431250:	cbnz	w0, 4313c0 <ferror@plt+0x2ea50>
  431254:	str	xzr, [sp, #312]
  431258:	cbnz	x27, 4313e0 <ferror@plt+0x2ea70>
  43125c:	mov	x26, #0x0                   	// #0
  431260:	ldr	x0, [sp, #416]
  431264:	ldrb	w0, [x0]
  431268:	cbnz	w0, 4313fc <ferror@plt+0x2ea8c>
  43126c:	mov	x0, x25
  431270:	mov	x1, #0x1                   	// #1
  431274:	bl	42fab8 <ferror@plt+0x2d148>
  431278:	cbz	w0, 430fe8 <ferror@plt+0x2e678>
  43127c:	ldp	x26, x27, [sp, #416]
  431280:	str	xzr, [sp, #320]
  431284:	add	x27, x26, x27
  431288:	cmp	x27, x26
  43128c:	b.ls	431298 <ferror@plt+0x2e928>  // b.plast
  431290:	ldrb	w0, [x26]
  431294:	cbnz	w0, 431428 <ferror@plt+0x2eab8>
  431298:	ldp	x2, x3, [sp, #376]
  43129c:	mov	x0, x21
  4312a0:	ldr	x1, [sp, #320]
  4312a4:	lsl	x1, x1, #3
  4312a8:	bl	42c0c0 <ferror@plt+0x29750>
  4312ac:	str	x0, [sp, #328]
  4312b0:	cbz	x0, 430fe8 <ferror@plt+0x2e678>
  4312b4:	mov	x28, #0x0                   	// #0
  4312b8:	ldr	x1, [sp, #416]
  4312bc:	ldr	w0, [sp, #456]
  4312c0:	ldrb	w1, [x1]
  4312c4:	cbnz	w1, 4314a0 <ferror@plt+0x2eb30>
  4312c8:	cbnz	w0, 430fe8 <ferror@plt+0x2e678>
  4312cc:	ldr	x0, [sp, #320]
  4312d0:	cbz	x0, 43159c <ferror@plt+0x2ec2c>
  4312d4:	ldr	x0, [sp, #328]
  4312d8:	ldr	x0, [x0]
  4312dc:	str	x0, [sp, #160]
  4312e0:	mov	w0, #0x1                   	// #1
  4312e4:	str	w0, [sp, #136]
  4312e8:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x1b198>
  4312ec:	add	x0, x0, #0x540
  4312f0:	ldr	x27, [sp, #160]
  4312f4:	str	x0, [sp, #200]
  4312f8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  4312fc:	add	x0, x0, #0xaab
  431300:	mov	x26, #0x0                   	// #0
  431304:	str	wzr, [sp, #128]
  431308:	str	x0, [sp, #208]
  43130c:	add	x0, sp, #0xf0
  431310:	str	x0, [sp, #192]
  431314:	ldr	x0, [sp, #360]
  431318:	cbnz	x0, 4315a8 <ferror@plt+0x2ec38>
  43131c:	ldr	w0, [sp, #392]
  431320:	cbnz	w0, 430fe8 <ferror@plt+0x2e678>
  431324:	ldr	x0, [sp, #264]
  431328:	cbz	x0, 430fe8 <ferror@plt+0x2e678>
  43132c:	add	x26, sp, #0xf0
  431330:	mov	x3, x22
  431334:	mov	x4, x26
  431338:	mov	x2, x24
  43133c:	mov	x0, x21
  431340:	mov	x1, #0x18                  	// #24
  431344:	bl	42c214 <ferror@plt+0x298a4>
  431348:	cbz	x0, 430fe8 <ferror@plt+0x2e678>
  43134c:	mov	x1, #0xffffffffffffffff    	// #-1
  431350:	stp	x1, xzr, [x0]
  431354:	mov	x3, x22
  431358:	str	xzr, [x0, #16]
  43135c:	mov	x2, x24
  431360:	mov	x1, x26
  431364:	mov	x0, x21
  431368:	bl	42c33c <ferror@plt+0x299cc>
  43136c:	cbz	w0, 430fe8 <ferror@plt+0x2e678>
  431370:	ldr	x0, [sp, #240]
  431374:	mov	x2, #0x18                  	// #24
  431378:	ldr	x1, [sp, #264]
  43137c:	adrp	x3, 42f000 <ferror@plt+0x2c690>
  431380:	add	x3, x3, #0x868
  431384:	str	x0, [sp, #128]
  431388:	bl	4323ec <ferror@plt+0x2fa7c>
  43138c:	ldr	w0, [x21, #8]
  431390:	ldr	x2, [x20, #16]
  431394:	ldr	x26, [sp, #264]
  431398:	cbnz	w0, 4318c4 <ferror@plt+0x2ef54>
  43139c:	add	x8, x23, #0x80
  4313a0:	mov	x28, x8
  4313a4:	b	4318d4 <ferror@plt+0x2ef64>
  4313a8:	mov	x0, x25
  4313ac:	bl	42fc18 <ferror@plt+0x2d2a8>
  4313b0:	and	w0, w0, #0xff
  4313b4:	b	4311c8 <ferror@plt+0x2e858>
  4313b8:	mov	w0, #0x0                   	// #0
  4313bc:	b	4311f8 <ferror@plt+0x2e888>
  4313c0:	sub	x1, x28, x26
  4313c4:	mov	x0, x26
  4313c8:	bl	402380 <strnlen@plt>
  4313cc:	add	x0, x0, #0x1
  4313d0:	add	x27, x27, #0x1
  4313d4:	add	x26, x26, x0
  4313d8:	str	x27, [sp, #304]
  4313dc:	b	431240 <ferror@plt+0x2e8d0>
  4313e0:	ldp	x2, x3, [sp, #376]
  4313e4:	lsl	x1, x27, #3
  4313e8:	mov	x0, x21
  4313ec:	bl	42c0c0 <ferror@plt+0x29750>
  4313f0:	str	x0, [sp, #312]
  4313f4:	cbnz	x0, 43125c <ferror@plt+0x2e8ec>
  4313f8:	b	430fe8 <ferror@plt+0x2e678>
  4313fc:	ldr	w0, [sp, #456]
  431400:	cbnz	w0, 430fe8 <ferror@plt+0x2e678>
  431404:	ldr	x27, [sp, #312]
  431408:	mov	x0, x25
  43140c:	bl	42fe04 <ferror@plt+0x2d494>
  431410:	str	x0, [x27, x26]
  431414:	ldr	x0, [sp, #312]
  431418:	ldr	x0, [x0, x26]
  43141c:	add	x26, x26, #0x8
  431420:	cbnz	x0, 431260 <ferror@plt+0x2e8f0>
  431424:	b	430fe8 <ferror@plt+0x2e678>
  431428:	sub	x1, x27, x26
  43142c:	mov	x0, x26
  431430:	bl	402380 <strnlen@plt>
  431434:	add	x2, x0, #0x1
  431438:	add	x0, x26, x0
  43143c:	mov	x1, #0x1                   	// #1
  431440:	ldrsb	w3, [x0, x1]
  431444:	tbnz	w3, #31, 431488 <ferror@plt+0x2eb18>
  431448:	add	x1, x2, x1
  43144c:	mov	x0, #0x1                   	// #1
  431450:	add	x26, x26, x1
  431454:	sub	x2, x26, #0x1
  431458:	ldrsb	w1, [x2, x0]
  43145c:	tbnz	w1, #31, 431490 <ferror@plt+0x2eb20>
  431460:	add	x26, x26, x0
  431464:	mov	x0, #0x1                   	// #1
  431468:	sub	x2, x26, #0x1
  43146c:	ldrsb	w1, [x2, x0]
  431470:	tbnz	w1, #31, 431498 <ferror@plt+0x2eb28>
  431474:	add	x26, x26, x0
  431478:	ldr	x0, [sp, #320]
  43147c:	add	x0, x0, #0x1
  431480:	str	x0, [sp, #320]
  431484:	b	431288 <ferror@plt+0x2e918>
  431488:	add	x1, x1, #0x1
  43148c:	b	431440 <ferror@plt+0x2ead0>
  431490:	add	x0, x0, #0x1
  431494:	b	431458 <ferror@plt+0x2eae8>
  431498:	add	x0, x0, #0x1
  43149c:	b	43146c <ferror@plt+0x2eafc>
  4314a0:	cbnz	w0, 430fe8 <ferror@plt+0x2e678>
  4314a4:	mov	x0, x25
  4314a8:	bl	42fe04 <ferror@plt+0x2d494>
  4314ac:	mov	x27, x0
  4314b0:	cbz	x0, 430fe8 <ferror@plt+0x2e678>
  4314b4:	mov	x0, x25
  4314b8:	bl	42fcbc <ferror@plt+0x2d34c>
  4314bc:	ldrb	w1, [x27]
  4314c0:	cmp	w1, #0x2f
  4314c4:	b.eq	4314d8 <ferror@plt+0x2eb68>  // b.none
  4314c8:	cbnz	x0, 4314f8 <ferror@plt+0x2eb88>
  4314cc:	ldr	x0, [sp, #152]
  4314d0:	ldr	x4, [x0, #72]
  4314d4:	cbnz	x4, 431514 <ferror@plt+0x2eba4>
  4314d8:	ldr	x0, [sp, #328]
  4314dc:	str	x27, [x0, x28]
  4314e0:	mov	x0, x25
  4314e4:	bl	42fcbc <ferror@plt+0x2d34c>
  4314e8:	mov	x0, x25
  4314ec:	add	x28, x28, #0x8
  4314f0:	bl	42fcbc <ferror@plt+0x2d34c>
  4314f4:	b	4312b8 <ferror@plt+0x2e948>
  4314f8:	ldr	x2, [sp, #304]
  4314fc:	sub	x1, x0, #0x1
  431500:	cmp	x1, x2
  431504:	b.cs	431590 <ferror@plt+0x2ec20>  // b.hs, b.nlast
  431508:	ldr	x1, [sp, #312]
  43150c:	add	x0, x1, x0, lsl #3
  431510:	ldur	x4, [x0, #-8]
  431514:	mov	x0, x4
  431518:	str	x4, [sp, #160]
  43151c:	bl	402330 <strlen@plt>
  431520:	mov	x26, x0
  431524:	mov	x0, x27
  431528:	bl	402330 <strlen@plt>
  43152c:	add	x1, x26, x0
  431530:	ldp	x2, x3, [sp, #376]
  431534:	add	x1, x1, #0x2
  431538:	str	x0, [sp, #128]
  43153c:	mov	x0, x21
  431540:	bl	42c0c0 <ferror@plt+0x29750>
  431544:	str	x0, [sp, #136]
  431548:	cbz	x0, 430fe8 <ferror@plt+0x2e678>
  43154c:	ldr	x4, [sp, #160]
  431550:	mov	x2, x26
  431554:	mov	x1, x4
  431558:	bl	4022e0 <memcpy@plt>
  43155c:	ldp	x1, x3, [sp, #128]
  431560:	mov	w0, #0x2f                  	// #47
  431564:	str	x3, [sp, #128]
  431568:	strb	w0, [x3, x26]
  43156c:	add	x0, x26, #0x1
  431570:	add	x2, x1, #0x1
  431574:	add	x0, x3, x0
  431578:	mov	x1, x27
  43157c:	bl	4022e0 <memcpy@plt>
  431580:	ldr	x0, [sp, #328]
  431584:	ldr	x3, [sp, #128]
  431588:	str	x3, [x0, x28]
  43158c:	b	4314e0 <ferror@plt+0x2eb70>
  431590:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  431594:	add	x1, x1, #0x70a
  431598:	b	431150 <ferror@plt+0x2e7e0>
  43159c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x17198>
  4315a0:	add	x0, x0, #0xaab
  4315a4:	b	4312dc <ferror@plt+0x2e96c>
  4315a8:	mov	x0, x19
  4315ac:	bl	42fc18 <ferror@plt+0x2d2a8>
  4315b0:	ldr	w2, [sp, #292]
  4315b4:	and	w1, w0, #0xff
  4315b8:	cmp	w2, w0, uxtb
  4315bc:	b.hi	43162c <ferror@plt+0x2ecbc>  // b.pmore
  4315c0:	ldr	w5, [sp, #288]
  4315c4:	sub	w1, w1, w2
  4315c8:	ldr	w0, [sp, #128]
  4315cc:	ldr	w3, [sp, #276]
  4315d0:	ldr	x7, [sp, #192]
  4315d4:	udiv	w2, w1, w5
  4315d8:	add	w4, w2, w0
  4315dc:	ldr	w0, [sp, #280]
  4315e0:	msub	w1, w2, w5, w1
  4315e4:	ldr	w2, [sp, #284]
  4315e8:	ldp	x5, x6, [sp, #376]
  4315ec:	mul	w3, w4, w3
  4315f0:	add	w1, w1, w2
  4315f4:	udiv	w3, w3, w0
  4315f8:	add	x26, x26, x3
  4315fc:	udiv	w3, w4, w0
  431600:	msub	w0, w3, w0, w4
  431604:	str	w0, [sp, #128]
  431608:	ldr	w0, [sp, #136]
  43160c:	add	w4, w0, w1
  431610:	str	w4, [sp, #136]
  431614:	mov	x3, x27
  431618:	mov	x2, x26
  43161c:	add	x1, x23, #0x10
  431620:	mov	x0, x21
  431624:	bl	42f940 <ferror@plt+0x2cfd0>
  431628:	b	431314 <ferror@plt+0x2e9a4>
  43162c:	cbnz	w1, 431780 <ferror@plt+0x2ee10>
  431630:	mov	x0, x19
  431634:	bl	42fcbc <ferror@plt+0x2d34c>
  431638:	mov	x28, x0
  43163c:	mov	x0, x19
  431640:	bl	42fc18 <ferror@plt+0x2d2a8>
  431644:	and	w2, w0, #0xff
  431648:	sub	w2, w2, #0x1
  43164c:	cmp	w2, #0x3
  431650:	b.hi	43176c <ferror@plt+0x2edfc>  // b.pmore
  431654:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x1b198>
  431658:	add	x0, x0, #0x538
  43165c:	ldrh	w0, [x0, w2, uxtw #1]
  431660:	adr	x1, 43166c <ferror@plt+0x2ecfc>
  431664:	add	x0, x1, w0, sxth #2
  431668:	br	x0
  43166c:	ldr	x0, [sp, #152]
  431670:	ldr	w1, [x0, #48]
  431674:	mov	x0, x19
  431678:	bl	42fc4c <ferror@plt+0x2d2dc>
  43167c:	mov	x26, x0
  431680:	b	431314 <ferror@plt+0x2e9a4>
  431684:	mov	x0, x19
  431688:	bl	42fe04 <ferror@plt+0x2d494>
  43168c:	mov	x27, x0
  431690:	cbz	x0, 430fe8 <ferror@plt+0x2e678>
  431694:	mov	x0, x19
  431698:	bl	42fcbc <ferror@plt+0x2d34c>
  43169c:	mov	x28, x0
  4316a0:	mov	x0, x19
  4316a4:	bl	42fcbc <ferror@plt+0x2d34c>
  4316a8:	mov	x0, x19
  4316ac:	bl	42fcbc <ferror@plt+0x2d34c>
  4316b0:	ldrb	w0, [x27]
  4316b4:	cmp	w0, #0x2f
  4316b8:	b.eq	431314 <ferror@plt+0x2e9a4>  // b.none
  4316bc:	cbnz	w28, 431744 <ferror@plt+0x2edd4>
  4316c0:	ldr	x0, [sp, #152]
  4316c4:	ldr	x4, [x0, #72]
  4316c8:	mov	x0, x4
  4316cc:	str	x4, [sp, #224]
  4316d0:	bl	402330 <strlen@plt>
  4316d4:	mov	x28, x0
  4316d8:	mov	x0, x27
  4316dc:	bl	402330 <strlen@plt>
  4316e0:	add	x1, x28, x0
  4316e4:	ldp	x2, x3, [sp, #376]
  4316e8:	add	x1, x1, #0x2
  4316ec:	str	x0, [sp, #184]
  4316f0:	mov	x0, x21
  4316f4:	bl	42c0c0 <ferror@plt+0x29750>
  4316f8:	str	x0, [sp, #216]
  4316fc:	cbz	x0, 430fe8 <ferror@plt+0x2e678>
  431700:	ldr	x4, [sp, #224]
  431704:	mov	x2, x28
  431708:	mov	x1, x4
  43170c:	bl	4022e0 <memcpy@plt>
  431710:	ldr	x3, [sp, #216]
  431714:	mov	w0, #0x2f                  	// #47
  431718:	ldr	x1, [sp, #184]
  43171c:	str	x3, [sp, #184]
  431720:	strb	w0, [x3, x28]
  431724:	add	x0, x28, #0x1
  431728:	add	x2, x1, #0x1
  43172c:	add	x0, x3, x0
  431730:	mov	x1, x27
  431734:	bl	4022e0 <memcpy@plt>
  431738:	ldr	x3, [sp, #184]
  43173c:	mov	x27, x3
  431740:	b	431314 <ferror@plt+0x2e9a4>
  431744:	ldr	x0, [sp, #304]
  431748:	sub	w28, w28, #0x1
  43174c:	cmp	x28, x0
  431750:	b.cs	431760 <ferror@plt+0x2edf0>  // b.hs, b.nlast
  431754:	ldr	x0, [sp, #312]
  431758:	ldr	x4, [x0, x28, lsl #3]
  43175c:	b	4316c8 <ferror@plt+0x2ed58>
  431760:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  431764:	add	x1, x1, #0x740
  431768:	b	431150 <ferror@plt+0x2e7e0>
  43176c:	sub	x1, x28, #0x1
  431770:	mov	x0, x19
  431774:	bl	42fab8 <ferror@plt+0x2d148>
  431778:	cbnz	w0, 431314 <ferror@plt+0x2e9a4>
  43177c:	b	430fe8 <ferror@plt+0x2e678>
  431780:	sub	w1, w1, #0x1
  431784:	cmp	w1, #0xb
  431788:	b.hi	431888 <ferror@plt+0x2ef18>  // b.pmore
  43178c:	ldr	x0, [sp, #200]
  431790:	ldrh	w0, [x0, w1, uxtw #1]
  431794:	adr	x1, 4317a0 <ferror@plt+0x2ee30>
  431798:	add	x0, x1, w0, sxth #2
  43179c:	br	x0
  4317a0:	ldr	w4, [sp, #136]
  4317a4:	ldr	x7, [sp, #192]
  4317a8:	ldp	x5, x6, [sp, #376]
  4317ac:	b	431614 <ferror@plt+0x2eca4>
  4317b0:	mov	x0, x19
  4317b4:	bl	42fcbc <ferror@plt+0x2d34c>
  4317b8:	ldr	w1, [sp, #128]
  4317bc:	ldr	w2, [sp, #280]
  4317c0:	add	x0, x0, w1, uxtw
  4317c4:	ldr	w1, [sp, #276]
  4317c8:	mul	x1, x1, x0
  4317cc:	udiv	x1, x1, x2
  4317d0:	add	x26, x26, x1
  4317d4:	udiv	x1, x0, x2
  4317d8:	msub	w0, w1, w2, w0
  4317dc:	str	w0, [sp, #128]
  4317e0:	b	431314 <ferror@plt+0x2e9a4>
  4317e4:	mov	x0, x19
  4317e8:	bl	42fd54 <ferror@plt+0x2d3e4>
  4317ec:	ldr	w1, [sp, #136]
  4317f0:	add	w0, w1, w0
  4317f4:	str	w0, [sp, #136]
  4317f8:	b	431314 <ferror@plt+0x2e9a4>
  4317fc:	mov	x0, x19
  431800:	bl	42fcbc <ferror@plt+0x2d34c>
  431804:	cbz	x0, 4318bc <ferror@plt+0x2ef4c>
  431808:	ldr	x2, [sp, #320]
  43180c:	sub	x1, x0, #0x1
  431810:	cmp	x1, x2
  431814:	b.cc	431824 <ferror@plt+0x2eeb4>  // b.lo, b.ul, b.last
  431818:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  43181c:	add	x1, x1, #0x76f
  431820:	b	431150 <ferror@plt+0x2e7e0>
  431824:	ldr	x1, [sp, #328]
  431828:	add	x0, x1, x0, lsl #3
  43182c:	ldur	x27, [x0, #-8]
  431830:	b	431314 <ferror@plt+0x2e9a4>
  431834:	ldr	w1, [sp, #288]
  431838:	mov	w0, #0xff                  	// #255
  43183c:	sub	w0, w0, w2
  431840:	ldr	w2, [sp, #280]
  431844:	udiv	w0, w0, w1
  431848:	ldr	w1, [sp, #128]
  43184c:	add	w0, w0, w1
  431850:	ldr	w1, [sp, #276]
  431854:	mul	w1, w0, w1
  431858:	udiv	w1, w1, w2
  43185c:	add	x26, x26, x1
  431860:	udiv	w1, w0, w2
  431864:	b	4317d8 <ferror@plt+0x2ee68>
  431868:	mov	x0, x19
  43186c:	bl	42fbc8 <ferror@plt+0x2d258>
  431870:	add	x26, x26, w0, uxth
  431874:	str	wzr, [sp, #128]
  431878:	b	431314 <ferror@plt+0x2e9a4>
  43187c:	mov	x0, x19
  431880:	bl	42fcbc <ferror@plt+0x2d34c>
  431884:	b	431314 <ferror@plt+0x2e9a4>
  431888:	ldr	x0, [sp, #296]
  43188c:	ldrb	w28, [x0, w1, uxtw]
  431890:	cbz	w28, 431314 <ferror@plt+0x2e9a4>
  431894:	mov	x0, x19
  431898:	sub	w28, w28, #0x1
  43189c:	bl	42fcbc <ferror@plt+0x2d34c>
  4318a0:	b	431890 <ferror@plt+0x2ef20>
  4318a4:	mov	w0, #0x1                   	// #1
  4318a8:	mov	x26, #0x0                   	// #0
  4318ac:	str	wzr, [sp, #128]
  4318b0:	str	w0, [sp, #136]
  4318b4:	ldr	x27, [sp, #160]
  4318b8:	b	431314 <ferror@plt+0x2e9a4>
  4318bc:	ldr	x27, [sp, #208]
  4318c0:	b	431314 <ferror@plt+0x2e9a4>
  4318c4:	mov	x8, x19
  4318c8:	mov	x28, #0x0                   	// #0
  4318cc:	stp	xzr, xzr, [sp, #336]
  4318d0:	stp	xzr, xzr, [sp, #352]
  4318d4:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  4318d8:	add	x0, x0, #0xb68
  4318dc:	str	x0, [sp, #400]
  4318e0:	ldr	x0, [x23, #56]
  4318e4:	str	x0, [sp, #408]
  4318e8:	ldr	x0, [x2]
  4318ec:	str	x0, [sp, #416]
  4318f0:	ldr	x0, [x2, #8]
  4318f4:	add	x27, sp, #0x110
  4318f8:	str	x0, [sp, #424]
  4318fc:	ldr	w0, [x23, #120]
  431900:	str	w0, [sp, #432]
  431904:	stp	x24, x22, [sp, #440]
  431908:	str	wzr, [sp, #456]
  43190c:	ldr	x0, [sp, #424]
  431910:	cbnz	x0, 43197c <ferror@plt+0x2f00c>
  431914:	ldr	x25, [x8, #24]
  431918:	cbz	x25, 4319b4 <ferror@plt+0x2f044>
  43191c:	cbnz	x28, 4319c0 <ferror@plt+0x2f050>
  431920:	mov	x3, x22
  431924:	mov	x2, x24
  431928:	mov	x1, x19
  43192c:	mov	x0, x21
  431930:	str	x8, [sp, #136]
  431934:	bl	42c33c <ferror@plt+0x299cc>
  431938:	cbz	w0, 4319b4 <ferror@plt+0x2f044>
  43193c:	ldr	x8, [sp, #136]
  431940:	ldr	x19, [x8]
  431944:	adrp	x3, 430000 <ferror@plt+0x2d690>
  431948:	mov	x1, x25
  43194c:	add	x3, x3, #0x598
  431950:	mov	x0, x19
  431954:	mov	x2, #0x18                  	// #24
  431958:	bl	4323ec <ferror@plt+0x2fa7c>
  43195c:	mov	x1, x27
  431960:	mov	x0, x21
  431964:	mov	x3, x22
  431968:	mov	x2, x24
  43196c:	bl	42f72c <ferror@plt+0x2cdbc>
  431970:	mov	w0, #0x1                   	// #1
  431974:	ldr	x1, [sp, #128]
  431978:	b	431030 <ferror@plt+0x2e6c0>
  43197c:	stp	x8, x8, [sp]
  431980:	mov	x7, x22
  431984:	mov	x6, x24
  431988:	mov	x5, x27
  43198c:	mov	x4, x25
  431990:	mov	x1, x23
  431994:	mov	x0, x21
  431998:	mov	x3, #0x0                   	// #0
  43199c:	str	x2, [sp, #136]
  4319a0:	str	x8, [sp, #152]
  4319a4:	bl	4308c0 <ferror@plt+0x2df50>
  4319a8:	ldr	x2, [sp, #136]
  4319ac:	ldr	x8, [sp, #152]
  4319b0:	cbnz	w0, 43190c <ferror@plt+0x2ef9c>
  4319b4:	mov	x25, #0x0                   	// #0
  4319b8:	mov	x19, #0x0                   	// #0
  4319bc:	b	43195c <ferror@plt+0x2efec>
  4319c0:	mov	x3, x22
  4319c4:	mov	x2, x24
  4319c8:	mov	x1, x28
  4319cc:	mov	x0, x21
  4319d0:	bl	42c32c <ferror@plt+0x299bc>
  4319d4:	mov	x19, x0
  4319d8:	cbz	x0, 4319b4 <ferror@plt+0x2f044>
  4319dc:	str	xzr, [x28, #24]
  4319e0:	b	431944 <ferror@plt+0x2efd4>
  4319e4:	ldr	x2, [sp, #120]
  4319e8:	add	x2, x2, #0x70
  4319ec:	stlr	x26, [x2]
  4319f0:	ldr	x2, [sp, #120]
  4319f4:	add	x2, x2, #0x78
  4319f8:	stlr	x19, [x2]
  4319fc:	ldr	x2, [sp, #120]
  431a00:	add	x2, x2, #0x80
  431a04:	stlr	x25, [x2]
  431a08:	ldr	x2, [sp, #120]
  431a0c:	add	x2, x2, #0x68
  431a10:	stlr	x1, [x2]
  431a14:	b	431044 <ferror@plt+0x2e6d4>
  431a18:	ldr	x0, [x20, #16]
  431a1c:	adrp	x4, 42f000 <ferror@plt+0x2c690>
  431a20:	mov	x3, #0x18                  	// #24
  431a24:	add	x4, x4, #0x4c8
  431a28:	ldr	x2, [x0, #112]
  431a2c:	ldr	x0, [sp, #176]
  431a30:	bl	402560 <bsearch@plt>
  431a34:	mov	x19, x0
  431a38:	ldr	x0, [x20, #16]
  431a3c:	cbnz	x19, 431ae4 <ferror@plt+0x2f174>
  431a40:	ldr	x1, [x0, #80]
  431a44:	cbnz	x1, 431ad0 <ferror@plt+0x2f160>
  431a48:	ldr	x25, [x0, #64]
  431a4c:	cbz	x25, 431ac8 <ferror@plt+0x2f158>
  431a50:	ldrb	w1, [x25]
  431a54:	cmp	w1, #0x2f
  431a58:	b.eq	431ac8 <ferror@plt+0x2f158>  // b.none
  431a5c:	ldr	x26, [x0, #72]
  431a60:	cbz	x26, 431ac8 <ferror@plt+0x2f158>
  431a64:	mov	x0, x25
  431a68:	bl	402330 <strlen@plt>
  431a6c:	mov	x23, x0
  431a70:	mov	x0, x26
  431a74:	bl	402330 <strlen@plt>
  431a78:	add	x1, x23, x0
  431a7c:	mov	x19, x0
  431a80:	mov	x3, x22
  431a84:	mov	x0, x21
  431a88:	mov	x2, x24
  431a8c:	add	x1, x1, #0x2
  431a90:	bl	42c0c0 <ferror@plt+0x29750>
  431a94:	mov	x21, x0
  431a98:	cbz	x0, 431074 <ferror@plt+0x2e704>
  431a9c:	mov	x2, x19
  431aa0:	mov	x1, x26
  431aa4:	bl	4022e0 <memcpy@plt>
  431aa8:	mov	x1, x25
  431aac:	mov	x25, x21
  431ab0:	mov	w0, #0x2f                  	// #47
  431ab4:	strb	w0, [x21, x19]
  431ab8:	add	x19, x19, #0x1
  431abc:	add	x2, x23, #0x1
  431ac0:	add	x0, x21, x19
  431ac4:	bl	4022e0 <memcpy@plt>
  431ac8:	ldr	x0, [x20, #16]
  431acc:	str	x25, [x0, #80]
  431ad0:	ldr	x0, [x20, #16]
  431ad4:	mov	x4, #0x0                   	// #0
  431ad8:	mov	w3, #0x0                   	// #0
  431adc:	ldr	x2, [x0, #80]
  431ae0:	b	431bbc <ferror@plt+0x2f24c>
  431ae4:	ldr	x2, [x0, #128]
  431ae8:	cbnz	x2, 431afc <ferror@plt+0x2f18c>
  431aec:	ldr	w3, [x19, #16]
  431af0:	mov	x4, #0x0                   	// #0
  431af4:	ldr	x2, [x19, #8]
  431af8:	b	431bbc <ferror@plt+0x2f24c>
  431afc:	ldr	x1, [x0, #120]
  431b00:	adrp	x4, 42f000 <ferror@plt+0x2c690>
  431b04:	ldr	x0, [sp, #176]
  431b08:	add	x4, x4, #0x478
  431b0c:	mov	x3, #0x18                  	// #24
  431b10:	bl	402560 <bsearch@plt>
  431b14:	mov	x1, x0
  431b18:	cbz	x0, 431aec <ferror@plt+0x2f17c>
  431b1c:	ldr	x0, [x20, #16]
  431b20:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  431b24:	movk	x5, #0xaaab
  431b28:	ldp	x3, x4, [x0, #120]
  431b2c:	ldr	x0, [sp, #232]
  431b30:	sub	x2, x1, x3
  431b34:	asr	x2, x2, #3
  431b38:	mul	x2, x2, x5
  431b3c:	add	x2, x2, #0x1
  431b40:	cmp	x2, x4
  431b44:	b.cs	431b60 <ferror@plt+0x2f1f0>  // b.hs, b.nlast
  431b48:	ldr	x2, [x1, #24]
  431b4c:	cmp	x2, x0
  431b50:	b.hi	431b60 <ferror@plt+0x2f1f0>  // b.pmore
  431b54:	ldr	x2, [x1, #32]
  431b58:	cmp	x0, x2
  431b5c:	b.cc	431ba0 <ferror@plt+0x2f230>  // b.lo, b.ul, b.last
  431b60:	ldr	x2, [sp, #144]
  431b64:	add	x5, sp, #0x150
  431b68:	ldr	x20, [x1, #16]
  431b6c:	add	x4, sp, #0x190
  431b70:	ldr	x1, [x19, #8]
  431b74:	str	x1, [sp, #400]
  431b78:	ldr	w1, [x19, #16]
  431b7c:	mov	x3, x22
  431b80:	str	w1, [sp, #336]
  431b84:	mov	x1, x20
  431b88:	bl	42f508 <ferror@plt+0x2cb98>
  431b8c:	cbnz	w0, 431080 <ferror@plt+0x2e710>
  431b90:	ldr	w3, [sp, #336]
  431b94:	ldr	x4, [x20]
  431b98:	ldr	x2, [sp, #400]
  431b9c:	b	431bbc <ferror@plt+0x2f24c>
  431ba0:	add	x1, x1, #0x18
  431ba4:	b	431b30 <ferror@plt+0x2f1c0>
  431ba8:	cmn	x1, #0x1
  431bac:	b.ne	431a18 <ferror@plt+0x2f0a8>  // b.any
  431bb0:	mov	x4, #0x0                   	// #0
  431bb4:	mov	w3, #0x0                   	// #0
  431bb8:	mov	x2, #0x0                   	// #0
  431bbc:	ldr	x5, [sp, #144]
  431bc0:	mov	x0, x22
  431bc4:	ldr	x1, [sp, #232]
  431bc8:	blr	x5
  431bcc:	b	431080 <ferror@plt+0x2e710>
  431bd0:	stp	x29, x30, [sp, #-96]!
  431bd4:	mov	x29, sp
  431bd8:	stp	x19, x20, [sp, #16]
  431bdc:	mov	x19, x0
  431be0:	ldr	w0, [x0, #8]
  431be4:	stp	x21, x22, [sp, #32]
  431be8:	mov	x21, x2
  431bec:	mov	x22, x4
  431bf0:	stp	x23, x24, [sp, #48]
  431bf4:	mov	x23, x1
  431bf8:	mov	x24, x3
  431bfc:	str	x25, [sp, #64]
  431c00:	cbnz	w0, 431c7c <ferror@plt+0x2f30c>
  431c04:	ldr	x20, [x19, #32]
  431c08:	add	x25, sp, #0x5c
  431c0c:	cbnz	x20, 431c2c <ferror@plt+0x2f2bc>
  431c10:	mov	x1, x23
  431c14:	mov	x0, x22
  431c18:	mov	x4, #0x0                   	// #0
  431c1c:	mov	w3, #0x0                   	// #0
  431c20:	mov	x2, #0x0                   	// #0
  431c24:	blr	x21
  431c28:	b	431c5c <ferror@plt+0x2f2ec>
  431c2c:	mov	x6, x25
  431c30:	mov	x5, x22
  431c34:	mov	x4, x24
  431c38:	mov	x3, x21
  431c3c:	mov	x2, x23
  431c40:	mov	x1, x20
  431c44:	mov	x0, x19
  431c48:	bl	430ea4 <ferror@plt+0x2e534>
  431c4c:	cbnz	w0, 431c5c <ferror@plt+0x2f2ec>
  431c50:	ldr	w0, [sp, #92]
  431c54:	cbz	w0, 431c74 <ferror@plt+0x2f304>
  431c58:	mov	w0, #0x0                   	// #0
  431c5c:	ldp	x19, x20, [sp, #16]
  431c60:	ldp	x21, x22, [sp, #32]
  431c64:	ldp	x23, x24, [sp, #48]
  431c68:	ldr	x25, [sp, #64]
  431c6c:	ldp	x29, x30, [sp], #96
  431c70:	ret
  431c74:	ldr	x20, [x20]
  431c78:	b	431c0c <ferror@plt+0x2f29c>
  431c7c:	add	x20, x19, #0x20
  431c80:	add	x25, sp, #0x5c
  431c84:	ldar	x20, [x20]
  431c88:	cbz	x20, 431c10 <ferror@plt+0x2f2a0>
  431c8c:	mov	x6, x25
  431c90:	mov	x5, x22
  431c94:	mov	x4, x24
  431c98:	mov	x3, x21
  431c9c:	mov	x2, x23
  431ca0:	mov	x1, x20
  431ca4:	mov	x0, x19
  431ca8:	bl	430ea4 <ferror@plt+0x2e534>
  431cac:	cbnz	w0, 431c5c <ferror@plt+0x2f2ec>
  431cb0:	ldr	w0, [sp, #92]
  431cb4:	cbz	w0, 431c84 <ferror@plt+0x2f314>
  431cb8:	b	431c58 <ferror@plt+0x2f2e8>
  431cbc:	sub	sp, sp, #0x290
  431cc0:	stp	x29, x30, [sp, #48]
  431cc4:	add	x29, sp, #0x30
  431cc8:	stp	x19, x20, [sp, #64]
  431ccc:	mov	x20, x0
  431cd0:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x1a198>
  431cd4:	add	x0, x0, #0xb68
  431cd8:	stp	x21, x22, [sp, #80]
  431cdc:	add	x21, sp, #0x250
  431ce0:	stp	x23, x24, [sp, #96]
  431ce4:	add	x24, sp, #0x1d0
  431ce8:	stp	x25, x26, [sp, #112]
  431cec:	add	x25, sp, #0x190
  431cf0:	stp	x27, x28, [sp, #128]
  431cf4:	str	x2, [sp, #176]
  431cf8:	stp	x1, x3, [sp, #192]
  431cfc:	stp	x6, x7, [sp, #208]
  431d00:	stp	x4, x5, [sp, #256]
  431d04:	stp	xzr, xzr, [sp, #336]
  431d08:	stp	xzr, xzr, [sp, #352]
  431d0c:	stp	xzr, xzr, [sp, #368]
  431d10:	stp	xzr, xzr, [sp, #384]
  431d14:	stp	x0, x2, [sp, #400]
  431d18:	stp	x2, x3, [sp, #416]
  431d1c:	ldr	x22, [sp, #704]
  431d20:	ldr	x23, [sp, #712]
  431d24:	ldr	w0, [sp, #688]
  431d28:	str	w0, [sp, #432]
  431d2c:	add	x0, sp, #0x200
  431d30:	stp	xzr, xzr, [sp, #144]
  431d34:	stp	xzr, xzr, [x0, #-200]
  431d38:	add	x0, sp, #0x138
  431d3c:	str	x0, [sp, #272]
  431d40:	str	xzr, [sp, #328]
  431d44:	stp	x22, x23, [sp, #440]
  431d48:	str	wzr, [sp, #456]
  431d4c:	ldr	x0, [sp, #424]
  431d50:	ldr	w26, [sp, #456]
  431d54:	cbnz	x0, 431db4 <ferror@plt+0x2f444>
  431d58:	cbnz	w26, 431e50 <ferror@plt+0x2f4e0>
  431d5c:	add	x0, sp, #0x200
  431d60:	mov	x3, x23
  431d64:	mov	x2, x22
  431d68:	ldp	x0, x1, [x0, #-200]
  431d6c:	stp	x0, x1, [sp, #368]
  431d70:	ldr	x0, [sp, #328]
  431d74:	str	x0, [sp, #384]
  431d78:	ldr	x0, [sp, #144]
  431d7c:	add	x1, sp, #0x150
  431d80:	str	x0, [sp, #392]
  431d84:	mov	x0, x20
  431d88:	bl	42c33c <ferror@plt+0x299cc>
  431d8c:	cbnz	w0, 432290 <ferror@plt+0x2f920>
  431d90:	mov	w0, #0x0                   	// #0
  431d94:	ldp	x29, x30, [sp, #48]
  431d98:	ldp	x19, x20, [sp, #64]
  431d9c:	ldp	x21, x22, [sp, #80]
  431da0:	ldp	x23, x24, [sp, #96]
  431da4:	ldp	x25, x26, [sp, #112]
  431da8:	ldp	x27, x28, [sp, #128]
  431dac:	add	sp, sp, #0x290
  431db0:	ret
  431db4:	cbnz	w26, 431e50 <ferror@plt+0x2f4e0>
  431db8:	ldr	x0, [sp, #416]
  431dbc:	str	x0, [sp, #224]
  431dc0:	mov	x0, x25
  431dc4:	bl	42fb20 <ferror@plt+0x2d1b0>
  431dc8:	mov	w1, w0
  431dcc:	str	x1, [sp, #160]
  431dd0:	mov	x1, #0xffffffff            	// #4294967295
  431dd4:	cmp	x1, w0, uxtw
  431dd8:	b.ne	431dec <ferror@plt+0x2f47c>  // b.any
  431ddc:	mov	x0, x25
  431de0:	mov	w26, #0x1                   	// #1
  431de4:	bl	42fb64 <ferror@plt+0x2d1f4>
  431de8:	str	x0, [sp, #160]
  431dec:	ldp	x0, x1, [x25]
  431df0:	stp	x0, x1, [x24]
  431df4:	ldp	x0, x1, [x25, #16]
  431df8:	stp	x0, x1, [x24, #16]
  431dfc:	ldp	x0, x1, [x25, #32]
  431e00:	stp	x0, x1, [x24, #32]
  431e04:	ldp	x0, x1, [x25, #48]
  431e08:	stp	x0, x1, [x24, #48]
  431e0c:	ldr	x0, [sp, #160]
  431e10:	str	x0, [sp, #488]
  431e14:	mov	x1, x0
  431e18:	mov	x0, x25
  431e1c:	bl	42fab8 <ferror@plt+0x2d148>
  431e20:	cbz	w0, 431e50 <ferror@plt+0x2f4e0>
  431e24:	mov	x0, x24
  431e28:	bl	42fbc8 <ferror@plt+0x2d258>
  431e2c:	and	w0, w0, #0xffff
  431e30:	str	w0, [sp, #248]
  431e34:	sub	w0, w0, #0x2
  431e38:	cmp	w0, #0x2
  431e3c:	b.ls	431eec <ferror@plt+0x2f57c>  // b.plast
  431e40:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  431e44:	mov	x0, x24
  431e48:	add	x1, x1, #0x79a
  431e4c:	bl	42f6d8 <ferror@plt+0x2cd68>
  431e50:	ldr	x0, [sp, #144]
  431e54:	cbz	x0, 431ec0 <ferror@plt+0x2f550>
  431e58:	ldr	x21, [sp, #312]
  431e5c:	mov	x19, #0x0                   	// #0
  431e60:	ldr	x1, [x21, x19, lsl #3]
  431e64:	mov	x3, x23
  431e68:	mov	x2, x22
  431e6c:	mov	x0, x20
  431e70:	add	x1, x1, #0x58
  431e74:	bl	42f78c <ferror@plt+0x2ce1c>
  431e78:	ldr	x1, [x21, x19, lsl #3]
  431e7c:	mov	x0, x20
  431e80:	mov	x4, x23
  431e84:	mov	x3, x22
  431e88:	mov	x2, #0x88                  	// #136
  431e8c:	add	x19, x19, #0x1
  431e90:	bl	42c004 <ferror@plt+0x29694>
  431e94:	ldr	x0, [sp, #144]
  431e98:	cmp	x0, x19
  431e9c:	b.ne	431e60 <ferror@plt+0x2f4f0>  // b.any
  431ea0:	ldp	x1, x0, [sp, #320]
  431ea4:	mov	x3, x23
  431ea8:	mov	x2, x22
  431eac:	add	x0, x0, x1
  431eb0:	add	x1, sp, #0x138
  431eb4:	stp	xzr, x0, [sp, #320]
  431eb8:	mov	x0, x20
  431ebc:	bl	42c33c <ferror@plt+0x299cc>
  431ec0:	ldr	x0, [sp, #360]
  431ec4:	cbz	x0, 431d90 <ferror@plt+0x2f420>
  431ec8:	ldp	x1, x0, [sp, #344]
  431ecc:	mov	x3, x23
  431ed0:	mov	x2, x22
  431ed4:	add	x0, x0, x1
  431ed8:	add	x1, sp, #0x150
  431edc:	stp	xzr, x0, [sp, #344]
  431ee0:	mov	x0, x20
  431ee4:	bl	42c33c <ferror@plt+0x299cc>
  431ee8:	b	431d90 <ferror@plt+0x2f420>
  431eec:	ldr	x4, [sp, #272]
  431ef0:	mov	x3, x23
  431ef4:	mov	x2, x22
  431ef8:	mov	x0, x20
  431efc:	mov	x1, #0x8                   	// #8
  431f00:	bl	42c214 <ferror@plt+0x298a4>
  431f04:	mov	x27, x0
  431f08:	cbz	x0, 431e50 <ferror@plt+0x2f4e0>
  431f0c:	mov	x3, x23
  431f10:	mov	x2, x22
  431f14:	mov	x0, x20
  431f18:	mov	x1, #0x88                  	// #136
  431f1c:	bl	42c0c0 <ferror@plt+0x29750>
  431f20:	mov	x19, x0
  431f24:	cbz	x0, 431e50 <ferror@plt+0x2f4e0>
  431f28:	ldr	x0, [sp, #144]
  431f2c:	str	x19, [x27]
  431f30:	stp	xzr, xzr, [x19, #88]
  431f34:	mov	w1, w26
  431f38:	add	x0, x0, #0x1
  431f3c:	str	x0, [sp, #144]
  431f40:	add	x0, x19, #0x58
  431f44:	str	x0, [sp, #232]
  431f48:	mov	x0, x24
  431f4c:	bl	42fba8 <ferror@plt+0x2d238>
  431f50:	stp	xzr, xzr, [x19, #88]
  431f54:	ldr	x1, [sp, #216]
  431f58:	cmp	x1, x0
  431f5c:	b.hi	431f78 <ferror@plt+0x2f608>  // b.pmore
  431f60:	mov	x0, x23
  431f64:	mov	w2, #0x0                   	// #0
  431f68:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  431f6c:	add	x1, x1, #0x7b5
  431f70:	blr	x22
  431f74:	b	431e50 <ferror@plt+0x2f4e0>
  431f78:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  431f7c:	add	x1, x1, #0xb80
  431f80:	str	x1, [sp, #528]
  431f84:	mov	x27, #0x0                   	// #0
  431f88:	ldr	x1, [sp, #208]
  431f8c:	str	x1, [sp, #536]
  431f90:	str	x22, [sp, #568]
  431f94:	add	x1, x1, x0
  431f98:	str	x1, [sp, #544]
  431f9c:	ldr	x1, [sp, #216]
  431fa0:	str	x23, [sp, #576]
  431fa4:	str	wzr, [sp, #584]
  431fa8:	sub	x0, x1, x0
  431fac:	str	x0, [sp, #552]
  431fb0:	ldr	w0, [sp, #688]
  431fb4:	str	w0, [sp, #560]
  431fb8:	add	x0, sp, #0x200
  431fbc:	ldp	x0, x1, [x0, #16]
  431fc0:	stp	x0, x1, [x21]
  431fc4:	add	x0, sp, #0x200
  431fc8:	ldp	x0, x1, [x0, #32]
  431fcc:	stp	x0, x1, [x21, #16]
  431fd0:	add	x0, sp, #0x200
  431fd4:	ldp	x0, x1, [x0, #48]
  431fd8:	stp	x0, x1, [x21, #32]
  431fdc:	add	x0, sp, #0x200
  431fe0:	ldp	x0, x1, [x0, #64]
  431fe4:	stp	x0, x1, [x21, #48]
  431fe8:	mov	x0, x21
  431fec:	bl	42fcbc <ferror@plt+0x2d34c>
  431ff0:	ldr	w1, [sp, #648]
  431ff4:	cbnz	x0, 4320f4 <ferror@plt+0x2f784>
  431ff8:	cbnz	w1, 431e50 <ferror@plt+0x2f4e0>
  431ffc:	cbz	x27, 4321d4 <ferror@plt+0x2f864>
  432000:	lsl	x28, x27, #5
  432004:	mov	x3, x23
  432008:	mov	x2, x22
  43200c:	mov	x1, x28
  432010:	mov	x0, x20
  432014:	bl	42c0c0 <ferror@plt+0x29750>
  432018:	str	x0, [x19, #96]
  43201c:	cbz	x0, 431e50 <ferror@plt+0x2f4e0>
  432020:	str	x27, [x19, #88]
  432024:	add	x27, sp, #0x210
  432028:	mov	x2, x28
  43202c:	mov	x28, #0x0                   	// #0
  432030:	mov	w1, #0x0                   	// #0
  432034:	bl	402530 <memset@plt>
  432038:	ldr	w0, [sp, #584]
  43203c:	cbnz	w0, 4321a8 <ferror@plt+0x2f838>
  432040:	mov	x0, x27
  432044:	bl	42fcbc <ferror@plt+0x2d34c>
  432048:	str	x0, [sp, #184]
  43204c:	cbz	x0, 4321c0 <ferror@plt+0x2f850>
  432050:	mov	x0, x27
  432054:	bl	42fcbc <ferror@plt+0x2d34c>
  432058:	str	x0, [sp, #240]
  43205c:	mov	x0, x27
  432060:	bl	42fc18 <ferror@plt+0x2d2a8>
  432064:	and	w0, w0, #0xff
  432068:	str	w0, [sp, #252]
  43206c:	ldp	x0, x1, [x27]
  432070:	stp	x0, x1, [x21]
  432074:	ldp	x0, x1, [x27, #16]
  432078:	stp	x0, x1, [x21, #16]
  43207c:	ldp	x0, x1, [x27, #32]
  432080:	stp	x0, x1, [x21, #32]
  432084:	ldp	x0, x1, [x27, #48]
  432088:	stp	x0, x1, [x21, #48]
  43208c:	mov	x1, #0x0                   	// #0
  432090:	mov	x0, x21
  432094:	str	x1, [sp, #280]
  432098:	bl	42fcbc <ferror@plt+0x2d34c>
  43209c:	str	x0, [sp, #168]
  4320a0:	ldr	x1, [sp, #280]
  4320a4:	cbnz	x0, 432130 <ferror@plt+0x2f7c0>
  4320a8:	cbnz	x1, 432148 <ferror@plt+0x2f7d8>
  4320ac:	mov	x0, x27
  4320b0:	bl	42fcbc <ferror@plt+0x2d34c>
  4320b4:	mov	x0, x27
  4320b8:	bl	42fcbc <ferror@plt+0x2d34c>
  4320bc:	mov	x1, #0x0                   	// #0
  4320c0:	ldr	x2, [x19, #96]
  4320c4:	ldr	x3, [sp, #184]
  4320c8:	add	x0, x2, x28
  4320cc:	str	x3, [x2, x28]
  4320d0:	add	x28, x28, #0x20
  4320d4:	ldr	w2, [sp, #240]
  4320d8:	str	w2, [x0, #8]
  4320dc:	ldr	w2, [sp, #252]
  4320e0:	str	w2, [x0, #12]
  4320e4:	ldr	x2, [sp, #168]
  4320e8:	str	x2, [x0, #16]
  4320ec:	str	x1, [x0, #24]
  4320f0:	b	432038 <ferror@plt+0x2f6c8>
  4320f4:	cbnz	w1, 431e50 <ferror@plt+0x2f4e0>
  4320f8:	mov	x0, x21
  4320fc:	bl	42fcbc <ferror@plt+0x2d34c>
  432100:	add	x27, x27, #0x1
  432104:	mov	x0, x21
  432108:	bl	42fc18 <ferror@plt+0x2d2a8>
  43210c:	mov	x0, x21
  432110:	bl	42fcbc <ferror@plt+0x2d34c>
  432114:	cbnz	x0, 432124 <ferror@plt+0x2f7b4>
  432118:	mov	x0, x21
  43211c:	bl	42fcbc <ferror@plt+0x2d34c>
  432120:	b	431fe8 <ferror@plt+0x2f678>
  432124:	mov	x0, x21
  432128:	bl	42fcbc <ferror@plt+0x2d34c>
  43212c:	b	43210c <ferror@plt+0x2f79c>
  432130:	add	x1, x1, #0x1
  432134:	mov	x0, x21
  432138:	str	x1, [sp, #168]
  43213c:	bl	42fcbc <ferror@plt+0x2d34c>
  432140:	ldr	x1, [sp, #168]
  432144:	b	432090 <ferror@plt+0x2f720>
  432148:	lsl	x1, x1, #3
  43214c:	mov	x3, x23
  432150:	mov	x2, x22
  432154:	mov	x0, x20
  432158:	bl	42c0c0 <ferror@plt+0x29750>
  43215c:	mov	x1, x0
  432160:	cbz	x0, 4321a8 <ferror@plt+0x2f838>
  432164:	mov	x2, x0
  432168:	mov	x0, x27
  43216c:	stp	x1, x2, [sp, #288]
  432170:	bl	42fcbc <ferror@plt+0x2d34c>
  432174:	mov	x3, x0
  432178:	mov	x0, x27
  43217c:	str	x3, [sp, #280]
  432180:	bl	42fcbc <ferror@plt+0x2d34c>
  432184:	ldp	x3, x1, [sp, #280]
  432188:	cbz	x3, 4320c0 <ferror@plt+0x2f750>
  43218c:	ldr	x2, [sp, #296]
  432190:	stp	w3, w0, [x2]
  432194:	add	x2, x2, #0x8
  432198:	ldr	x0, [sp, #168]
  43219c:	add	x0, x0, #0x1
  4321a0:	str	x0, [sp, #168]
  4321a4:	b	432168 <ferror@plt+0x2f7f8>
  4321a8:	ldr	x1, [sp, #232]
  4321ac:	mov	x3, x23
  4321b0:	mov	x2, x22
  4321b4:	mov	x0, x20
  4321b8:	bl	42f78c <ferror@plt+0x2ce1c>
  4321bc:	b	431e50 <ferror@plt+0x2f4e0>
  4321c0:	ldp	x1, x0, [x19, #88]
  4321c4:	adrp	x3, 42f000 <ferror@plt+0x2c690>
  4321c8:	mov	x2, #0x20                  	// #32
  4321cc:	add	x3, x3, #0x4f0
  4321d0:	bl	4323ec <ferror@plt+0x2fa7c>
  4321d4:	mov	x0, x24
  4321d8:	bl	42fc18 <ferror@plt+0x2d2a8>
  4321dc:	and	w2, w0, #0xff
  4321e0:	mov	x1, #0x4                   	// #4
  4321e4:	ldr	x0, [sp, #152]
  4321e8:	cmp	w26, #0x0
  4321ec:	str	x0, [x19, #24]
  4321f0:	mov	x0, #0xc                   	// #12
  4321f4:	csel	x0, x0, x1, ne  // ne = any
  4321f8:	stp	w26, w2, [x19, #44]
  4321fc:	ldr	x1, [sp, #160]
  432200:	stp	xzr, xzr, [x19, #56]
  432204:	ldr	w7, [sp, #688]
  432208:	add	x0, x0, x1
  43220c:	stp	xzr, xzr, [x19, #72]
  432210:	mov	x2, x24
  432214:	ldr	x1, [sp, #152]
  432218:	stp	xzr, xzr, [x19, #104]
  43221c:	add	x0, x1, x0
  432220:	str	x0, [x19, #32]
  432224:	str	x0, [sp, #152]
  432228:	ldr	x0, [sp, #488]
  43222c:	str	x0, [x19, #8]
  432230:	ldr	x0, [sp, #224]
  432234:	stp	xzr, xzr, [x19, #120]
  432238:	ldr	x1, [sp, #480]
  43223c:	str	x1, [x19]
  432240:	sub	x1, x1, x0
  432244:	ldr	w0, [sp, #248]
  432248:	str	x1, [x19, #16]
  43224c:	add	x1, sp, #0x290
  432250:	str	w0, [x19, #40]
  432254:	add	x0, sp, #0x150
  432258:	stp	x19, x0, [sp, #24]
  43225c:	ldr	x0, [sp, #696]
  432260:	str	x0, [sp]
  432264:	stp	x22, x23, [sp, #8]
  432268:	mov	x0, x20
  43226c:	str	x21, [sp, #40]
  432270:	ldp	x5, x6, [x1]
  432274:	ldp	x3, x4, [x1, #16]
  432278:	ldr	x1, [sp, #192]
  43227c:	bl	43016c <ferror@plt+0x2d7fc>
  432280:	cbz	w0, 431e50 <ferror@plt+0x2f4e0>
  432284:	ldr	w0, [sp, #520]
  432288:	cbz	w0, 431d4c <ferror@plt+0x2f3dc>
  43228c:	b	431e50 <ferror@plt+0x2f4e0>
  432290:	mov	x3, x23
  432294:	mov	x2, x22
  432298:	add	x1, sp, #0x170
  43229c:	mov	x0, x20
  4322a0:	bl	42c33c <ferror@plt+0x299cc>
  4322a4:	cbz	w0, 431d90 <ferror@plt+0x2f420>
  4322a8:	ldp	x19, x25, [sp, #360]
  4322ac:	mov	x2, #0x18                  	// #24
  4322b0:	ldr	x21, [sp, #336]
  4322b4:	adrp	x3, 42f000 <ferror@plt+0x2c690>
  4322b8:	add	x3, x3, #0x810
  4322bc:	mov	x0, x21
  4322c0:	mov	x1, x19
  4322c4:	ldr	x24, [sp, #392]
  4322c8:	bl	4323ec <ferror@plt+0x2fa7c>
  4322cc:	mov	x3, x23
  4322d0:	mov	x2, x22
  4322d4:	mov	x0, x20
  4322d8:	mov	x1, #0xa0                  	// #160
  4322dc:	bl	42c0c0 <ferror@plt+0x29750>
  4322e0:	cbz	x0, 431d90 <ferror@plt+0x2f420>
  4322e4:	ldr	x1, [sp, #696]
  4322e8:	stp	xzr, x1, [x0]
  4322ec:	ldr	x1, [sp, #192]
  4322f0:	str	x1, [x0, #16]
  4322f4:	ldr	x1, [sp, #176]
  4322f8:	str	x1, [x0, #56]
  4322fc:	ldr	x1, [sp, #200]
  432300:	str	x1, [x0, #64]
  432304:	ldr	x1, [sp, #256]
  432308:	str	x1, [x0, #72]
  43230c:	ldr	x1, [sp, #264]
  432310:	str	x1, [x0, #80]
  432314:	ldr	x1, [sp, #656]
  432318:	str	x1, [x0, #88]
  43231c:	ldr	x1, [sp, #664]
  432320:	str	x1, [x0, #96]
  432324:	ldr	x1, [sp, #672]
  432328:	str	x1, [x0, #104]
  43232c:	ldr	x1, [sp, #680]
  432330:	str	x1, [x0, #112]
  432334:	ldr	w1, [sp, #688]
  432338:	str	w1, [x0, #120]
  43233c:	ldr	x1, [sp, #728]
  432340:	stp	x21, x19, [x0, #24]
  432344:	stp	x25, x24, [x0, #40]
  432348:	stp	xzr, xzr, [x0, #128]
  43234c:	stp	xzr, xzr, [x0, #144]
  432350:	cbz	x1, 432358 <ferror@plt+0x2f9e8>
  432354:	str	x0, [x1]
  432358:	ldr	w1, [x20, #8]
  43235c:	add	x2, x20, #0x20
  432360:	cbnz	w1, 4323b0 <ferror@plt+0x2fa40>
  432364:	ldr	x1, [x20, #32]
  432368:	cbnz	x1, 432388 <ferror@plt+0x2fa18>
  43236c:	str	x0, [x2]
  432370:	ldr	x1, [sp, #720]
  432374:	adrp	x0, 431000 <ferror@plt+0x2e690>
  432378:	add	x0, x0, #0xbd0
  43237c:	str	x0, [x1]
  432380:	mov	w0, #0x1                   	// #1
  432384:	b	431d94 <ferror@plt+0x2f424>
  432388:	mov	x2, x1
  43238c:	ldr	x1, [x1]
  432390:	b	432368 <ferror@plt+0x2f9f8>
  432394:	ldxr	x3, [x1]
  432398:	cbnz	x3, 4323a4 <ferror@plt+0x2fa34>
  43239c:	stlxr	w4, x0, [x1]
  4323a0:	cbnz	w4, 432394 <ferror@plt+0x2fa24>
  4323a4:	dmb	ish
  4323a8:	cmp	x3, #0x0
  4323ac:	b.eq	432370 <ferror@plt+0x2fa00>  // b.none
  4323b0:	mov	x1, x2
  4323b4:	ldar	x3, [x1]
  4323b8:	cbz	x3, 432394 <ferror@plt+0x2fa24>
  4323bc:	mov	x1, x3
  4323c0:	b	4323b4 <ferror@plt+0x2fa44>
  4323c4:	mov	x3, #0x0                   	// #0
  4323c8:	cmp	x3, x2
  4323cc:	b.ne	4323d4 <ferror@plt+0x2fa64>  // b.any
  4323d0:	ret
  4323d4:	ldrb	w5, [x1, x3]
  4323d8:	ldrb	w4, [x0, x3]
  4323dc:	strb	w5, [x0, x3]
  4323e0:	strb	w4, [x1, x3]
  4323e4:	add	x3, x3, #0x1
  4323e8:	b	4323c8 <ferror@plt+0x2fa58>
  4323ec:	stp	x29, x30, [sp, #-80]!
  4323f0:	mov	x29, sp
  4323f4:	stp	x19, x20, [sp, #16]
  4323f8:	mov	x20, x0
  4323fc:	mov	x19, x2
  432400:	stp	x21, x22, [sp, #32]
  432404:	mov	x22, x1
  432408:	stp	x23, x24, [sp, #48]
  43240c:	mov	x24, x3
  432410:	str	x25, [sp, #64]
  432414:	cmp	x22, #0x1
  432418:	b.ls	4324e8 <ferror@plt+0x2fb78>  // b.plast
  43241c:	lsr	x1, x22, #1
  432420:	add	x25, x20, x19
  432424:	mov	x21, #0x0                   	// #0
  432428:	mov	x23, #0x1                   	// #1
  43242c:	mov	x2, x19
  432430:	mov	x0, x20
  432434:	madd	x1, x1, x19, x20
  432438:	bl	4323c4 <ferror@plt+0x2fa54>
  43243c:	mov	x1, x25
  432440:	mov	x0, x20
  432444:	blr	x24
  432448:	cmp	w0, #0x0
  43244c:	b.le	43246c <ferror@plt+0x2fafc>
  432450:	add	x21, x21, #0x1
  432454:	cmp	x21, x23
  432458:	b.eq	43246c <ferror@plt+0x2fafc>  // b.none
  43245c:	madd	x0, x21, x19, x20
  432460:	mov	x2, x19
  432464:	mov	x1, x25
  432468:	bl	4323c4 <ferror@plt+0x2fa54>
  43246c:	add	x23, x23, #0x1
  432470:	add	x25, x25, x19
  432474:	cmp	x22, x23
  432478:	b.ne	43243c <ferror@plt+0x2facc>  // b.any
  43247c:	madd	x1, x21, x19, x19
  432480:	sub	x23, x22, #0x1
  432484:	sub	x23, x23, x21
  432488:	add	x25, x20, x1
  43248c:	cbnz	x21, 4324b0 <ferror@plt+0x2fb40>
  432490:	mov	x3, x24
  432494:	mov	x2, x19
  432498:	mov	x1, x21
  43249c:	mov	x0, x20
  4324a0:	bl	4323ec <ferror@plt+0x2fa7c>
  4324a4:	mov	x20, x25
  4324a8:	mov	x22, x23
  4324ac:	b	432414 <ferror@plt+0x2faa4>
  4324b0:	sub	x1, x1, x19
  4324b4:	mov	x2, x19
  4324b8:	add	x1, x20, x1
  4324bc:	mov	x0, x20
  4324c0:	bl	4323c4 <ferror@plt+0x2fa54>
  4324c4:	cmp	x22, x21, lsl #1
  4324c8:	b.hi	432490 <ferror@plt+0x2fb20>  // b.pmore
  4324cc:	mov	x1, x23
  4324d0:	mov	x0, x25
  4324d4:	mov	x3, x24
  4324d8:	mov	x25, x20
  4324dc:	mov	x23, x21
  4324e0:	bl	4323ec <ferror@plt+0x2fa7c>
  4324e4:	b	4324a4 <ferror@plt+0x2fb34>
  4324e8:	ldp	x19, x20, [sp, #16]
  4324ec:	ldp	x21, x22, [sp, #32]
  4324f0:	ldp	x23, x24, [sp, #48]
  4324f4:	ldr	x25, [sp, #64]
  4324f8:	ldp	x29, x30, [sp], #80
  4324fc:	ret
  432500:	sub	w0, w0, #0x1c
  432504:	cmp	w0, #0x34
  432508:	b.hi	432528 <ferror@plt+0x2fbb8>  // b.pmore
  43250c:	mov	x1, #0x1                   	// #1
  432510:	lsl	x0, x1, x0
  432514:	mov	x1, #0x1f                  	// #31
  432518:	movk	x1, #0x1a, lsl #48
  43251c:	tst	x0, x1
  432520:	cset	w0, ne  // ne = any
  432524:	ret
  432528:	mov	w0, #0x0                   	// #0
  43252c:	b	432524 <ferror@plt+0x2fbb4>
  432530:	mov	x1, x0
  432534:	ldp	w2, w0, [x0, #40]
  432538:	cmp	w2, w0
  43253c:	b.ge	43255c <ferror@plt+0x2fbec>  // b.tcont
  432540:	ldr	x3, [x1, #32]
  432544:	mov	w0, #0x18                  	// #24
  432548:	smaddl	x0, w2, w0, x3
  43254c:	add	w2, w2, #0x1
  432550:	str	wzr, [x0, #4]
  432554:	str	w2, [x1, #40]
  432558:	ret
  43255c:	mov	x0, #0x0                   	// #0
  432560:	b	432558 <ferror@plt+0x2fbe8>
  432564:	mov	x5, x2
  432568:	sub	w2, w1, #0x1
  43256c:	cmp	w2, #0x4f
  432570:	b.hi	4325a0 <ferror@plt+0x2fc30>  // b.pmore
  432574:	mov	w6, w1
  432578:	mov	x4, x3
  43257c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  432580:	add	x1, x1, #0x7d0
  432584:	ldrb	w1, [x1, w2, uxtw]
  432588:	adr	x2, 432594 <ferror@plt+0x2fc24>
  43258c:	add	x1, x2, w1, sxtb #2
  432590:	br	x1
  432594:	cmp	x5, #0x0
  432598:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  43259c:	b.ne	4325ac <ferror@plt+0x2fc3c>  // b.any
  4325a0:	mov	x0, #0x0                   	// #0
  4325a4:	ret
  4325a8:	cbz	x5, 4325a0 <ferror@plt+0x2fc30>
  4325ac:	stp	x29, x30, [sp, #-16]!
  4325b0:	mov	x29, sp
  4325b4:	bl	432530 <ferror@plt+0x2fbc0>
  4325b8:	cbz	x0, 4325c4 <ferror@plt+0x2fc54>
  4325bc:	str	w6, [x0]
  4325c0:	stp	x5, x4, [x0, #8]
  4325c4:	ldp	x29, x30, [sp], #16
  4325c8:	ret
  4325cc:	cbnz	x3, 4325ac <ferror@plt+0x2fc3c>
  4325d0:	b	4325a0 <ferror@plt+0x2fc30>
  4325d4:	mov	x4, x1
  4325d8:	stp	x29, x30, [sp, #-16]!
  4325dc:	mov	x29, sp
  4325e0:	bl	432530 <ferror@plt+0x2fbc0>
  4325e4:	cbz	x0, 4325f4 <ferror@plt+0x2fc84>
  4325e8:	mov	w1, #0x27                  	// #39
  4325ec:	str	w1, [x0]
  4325f0:	str	x4, [x0, #8]
  4325f4:	ldp	x29, x30, [sp], #16
  4325f8:	ret
  4325fc:	ldr	x4, [x0, #24]
  432600:	mov	x2, x1
  432604:	mov	w3, #0x4f                  	// #79
  432608:	ldrb	w1, [x4]
  43260c:	cmp	w1, #0x52
  432610:	ccmp	w1, w3, #0x4, ne  // ne = any
  432614:	b.ne	43264c <ferror@plt+0x2fcdc>  // b.any
  432618:	ldr	w3, [x0, #72]
  43261c:	cmp	w1, #0x52
  432620:	b.ne	432640 <ferror@plt+0x2fcd0>  // b.any
  432624:	add	w3, w3, #0x2
  432628:	mov	w1, #0x1f                  	// #31
  43262c:	add	x4, x4, #0x1
  432630:	str	x4, [x0, #24]
  432634:	str	w3, [x0, #72]
  432638:	mov	x3, #0x0                   	// #0
  43263c:	b	432564 <ferror@plt+0x2fbf4>
  432640:	add	w3, w3, #0x3
  432644:	mov	w1, #0x20                  	// #32
  432648:	b	43262c <ferror@plt+0x2fcbc>
  43264c:	mov	x0, x2
  432650:	ret
  432654:	cbz	x1, 43267c <ferror@plt+0x2fd0c>
  432658:	ldp	w2, w3, [x0, #56]
  43265c:	cmp	w2, w3
  432660:	b.ge	43267c <ferror@plt+0x2fd0c>  // b.tcont
  432664:	ldr	x3, [x0, #48]
  432668:	str	x1, [x3, w2, sxtw #3]
  43266c:	add	w2, w2, #0x1
  432670:	str	w2, [x0, #56]
  432674:	mov	w0, #0x1                   	// #1
  432678:	ret
  43267c:	mov	w0, #0x0                   	// #0
  432680:	b	432678 <ferror@plt+0x2fd08>
  432684:	stp	x29, x30, [sp, #-32]!
  432688:	mov	x29, sp
  43268c:	stp	x19, x20, [sp, #16]
  432690:	mov	x19, x1
  432694:	mov	x20, x0
  432698:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  43269c:	add	x1, x1, #0x820
  4326a0:	cbz	x19, 432708 <ferror@plt+0x2fd98>
  4326a4:	ldr	w0, [x19]
  4326a8:	sub	w0, w0, #0x1
  4326ac:	cmp	w0, #0x4f
  4326b0:	b.hi	432708 <ferror@plt+0x2fd98>  // b.pmore
  4326b4:	ldrb	w0, [x1, w0, uxtw]
  4326b8:	adr	x2, 4326c4 <ferror@plt+0x2fd54>
  4326bc:	add	x0, x2, w0, sxtb #2
  4326c0:	br	x0
  4326c4:	ldr	w0, [x20, #364]
  4326c8:	add	w0, w0, #0x1
  4326cc:	str	w0, [x20, #364]
  4326d0:	ldr	w0, [x20, #308]
  4326d4:	cmp	w0, #0x800
  4326d8:	b.gt	432708 <ferror@plt+0x2fd98>
  4326dc:	ldr	x1, [x19, #8]
  4326e0:	add	w0, w0, #0x1
  4326e4:	str	w0, [x20, #308]
  4326e8:	mov	x0, x20
  4326ec:	bl	432684 <ferror@plt+0x2fd14>
  4326f0:	ldr	x1, [x19, #16]
  4326f4:	mov	x0, x20
  4326f8:	bl	432684 <ferror@plt+0x2fd14>
  4326fc:	ldr	w0, [x20, #308]
  432700:	sub	w0, w0, #0x1
  432704:	str	w0, [x20, #308]
  432708:	ldp	x19, x20, [sp, #16]
  43270c:	ldp	x29, x30, [sp], #32
  432710:	ret
  432714:	ldr	x0, [x19, #8]
  432718:	ldr	w0, [x0]
  43271c:	cmp	w0, #0x5
  432720:	b.ne	4326d0 <ferror@plt+0x2fd60>  // b.any
  432724:	ldr	w0, [x20, #348]
  432728:	add	w0, w0, #0x1
  43272c:	str	w0, [x20, #348]
  432730:	b	4326d0 <ferror@plt+0x2fd60>
  432734:	ldr	x19, [x19, #16]
  432738:	b	4326a0 <ferror@plt+0x2fd30>
  43273c:	ldr	x19, [x19, #8]
  432740:	b	4326a0 <ferror@plt+0x2fd30>
  432744:	stp	x29, x30, [sp, #-32]!
  432748:	mov	x29, sp
  43274c:	ldr	x1, [x0, #256]
  432750:	str	x19, [sp, #16]
  432754:	mov	x19, x0
  432758:	strb	wzr, [x0, x1]
  43275c:	ldp	x3, x2, [x0, #272]
  432760:	blr	x3
  432764:	str	xzr, [x19, #256]
  432768:	ldr	x0, [x19, #320]
  43276c:	add	x0, x0, #0x1
  432770:	str	x0, [x19, #320]
  432774:	ldr	x19, [sp, #16]
  432778:	ldp	x29, x30, [sp], #32
  43277c:	ret
  432780:	stp	x29, x30, [sp, #-32]!
  432784:	mov	x29, sp
  432788:	stp	x19, x20, [sp, #16]
  43278c:	and	w20, w1, #0xff
  432790:	mov	x19, x0
  432794:	ldr	x1, [x0, #256]
  432798:	cmp	x1, #0xff
  43279c:	b.ne	4327a4 <ferror@plt+0x2fe34>  // b.any
  4327a0:	bl	432744 <ferror@plt+0x2fdd4>
  4327a4:	ldr	x0, [x19, #256]
  4327a8:	add	x1, x0, #0x1
  4327ac:	str	x1, [x19, #256]
  4327b0:	strb	w20, [x19, x0]
  4327b4:	strb	w20, [x19, #264]
  4327b8:	ldp	x19, x20, [sp, #16]
  4327bc:	ldp	x29, x30, [sp], #32
  4327c0:	ret
  4327c4:	stp	x29, x30, [sp, #-48]!
  4327c8:	mov	x29, sp
  4327cc:	stp	x19, x20, [sp, #16]
  4327d0:	mov	x19, x1
  4327d4:	add	x20, x1, x2
  4327d8:	str	x21, [sp, #32]
  4327dc:	mov	x21, x0
  4327e0:	cmp	x19, x20
  4327e4:	b.ne	4327f8 <ferror@plt+0x2fe88>  // b.any
  4327e8:	ldp	x19, x20, [sp, #16]
  4327ec:	ldr	x21, [sp, #32]
  4327f0:	ldp	x29, x30, [sp], #48
  4327f4:	ret
  4327f8:	ldrb	w1, [x19], #1
  4327fc:	mov	x0, x21
  432800:	bl	432780 <ferror@plt+0x2fe10>
  432804:	b	4327e0 <ferror@plt+0x2fe70>
  432808:	mov	x1, x0
  43280c:	mov	w0, #0x0                   	// #0
  432810:	cbz	x1, 432828 <ferror@plt+0x2feb8>
  432814:	ldr	w2, [x1]
  432818:	cmp	w2, #0x2f
  43281c:	b.ne	432828 <ferror@plt+0x2feb8>  // b.any
  432820:	ldr	x2, [x1, #8]
  432824:	cbnz	x2, 43282c <ferror@plt+0x2febc>
  432828:	ret
  43282c:	add	w0, w0, #0x1
  432830:	ldr	x1, [x1, #16]
  432834:	b	432810 <ferror@plt+0x2fea0>
  432838:	stp	x29, x30, [sp, #-32]!
  43283c:	mov	x29, sp
  432840:	stp	x19, x20, [sp, #16]
  432844:	mov	x20, x0
  432848:	mov	x19, x1
  43284c:	mov	x0, x1
  432850:	bl	402330 <strlen@plt>
  432854:	mov	x1, x19
  432858:	mov	x2, x0
  43285c:	mov	x0, x20
  432860:	ldp	x19, x20, [sp, #16]
  432864:	ldp	x29, x30, [sp], #32
  432868:	b	4327c4 <ferror@plt+0x2fe54>
  43286c:	stp	x29, x30, [sp, #-64]!
  432870:	mov	w2, w1
  432874:	adrp	x1, 44c000 <_obstack_memory_used@@Base+0x12198>
  432878:	mov	x29, sp
  43287c:	add	x1, x1, #0x2fc
  432880:	str	x19, [sp, #16]
  432884:	mov	x19, x0
  432888:	add	x0, sp, #0x20
  43288c:	bl	4023d0 <sprintf@plt>
  432890:	add	x1, sp, #0x20
  432894:	mov	x0, x19
  432898:	bl	432838 <ferror@plt+0x2fec8>
  43289c:	ldr	x19, [sp, #16]
  4328a0:	ldp	x29, x30, [sp], #64
  4328a4:	ret
  4328a8:	mov	x1, x0
  4328ac:	ldr	x0, [x0]
  4328b0:	ldrb	w3, [x0]
  4328b4:	cmp	w3, #0x6e
  4328b8:	b.ne	4328f4 <ferror@plt+0x2ff84>  // b.any
  4328bc:	add	x2, x0, #0x1
  4328c0:	str	x2, [x1]
  4328c4:	mov	w5, #0x1                   	// #1
  4328c8:	ldrb	w3, [x0, #1]
  4328cc:	mov	w0, #0x0                   	// #0
  4328d0:	mov	w6, #0x7fffffff            	// #2147483647
  4328d4:	mov	w4, #0xa                   	// #10
  4328d8:	sub	w2, w3, #0x30
  4328dc:	and	w7, w2, #0xff
  4328e0:	cmp	w7, #0x9
  4328e4:	b.ls	4328fc <ferror@plt+0x2ff8c>  // b.plast
  4328e8:	cbz	w5, 4328f0 <ferror@plt+0x2ff80>
  4328ec:	neg	w0, w0
  4328f0:	ret
  4328f4:	mov	w5, #0x0                   	// #0
  4328f8:	b	4328cc <ferror@plt+0x2ff5c>
  4328fc:	sub	w2, w6, w2
  432900:	udiv	w2, w2, w4
  432904:	cmp	w2, w0
  432908:	b.lt	432928 <ferror@plt+0x2ffb8>  // b.tstop
  43290c:	ldr	x2, [x1]
  432910:	madd	w0, w0, w4, w3
  432914:	add	x3, x2, #0x1
  432918:	str	x3, [x1]
  43291c:	sub	w0, w0, #0x30
  432920:	ldrb	w3, [x2, #1]
  432924:	b	4328d8 <ferror@plt+0x2ff68>
  432928:	mov	w0, #0xffffffff            	// #-1
  43292c:	b	4328f0 <ferror@plt+0x2ff80>
  432930:	mov	x4, x0
  432934:	stp	x29, x30, [sp, #-16]!
  432938:	mov	x29, sp
  43293c:	bl	432530 <ferror@plt+0x2fbc0>
  432940:	mov	x8, x0
  432944:	cbz	x0, 432960 <ferror@plt+0x2fff0>
  432948:	mov	w0, #0x42                  	// #66
  43294c:	str	w0, [x8]
  432950:	add	x0, x4, #0x18
  432954:	bl	4328a8 <ferror@plt+0x2ff38>
  432958:	sxtw	x0, w0
  43295c:	str	x0, [x8, #8]
  432960:	mov	x0, x8
  432964:	ldp	x29, x30, [sp], #16
  432968:	ret
  43296c:	mov	x8, x0
  432970:	ldr	x0, [x0, #24]
  432974:	ldrb	w0, [x0]
  432978:	cmp	w0, #0x5f
  43297c:	b.eq	4329d0 <ferror@plt+0x30060>  // b.none
  432980:	cmp	w0, #0x6e
  432984:	b.ne	43299c <ferror@plt+0x3002c>  // b.any
  432988:	mov	w0, #0xffffffff            	// #-1
  43298c:	ret
  432990:	mov	w0, #0xffffffff            	// #-1
  432994:	ldp	x29, x30, [sp], #16
  432998:	ret
  43299c:	stp	x29, x30, [sp, #-16]!
  4329a0:	add	x0, x8, #0x18
  4329a4:	mov	x29, sp
  4329a8:	bl	4328a8 <ferror@plt+0x2ff38>
  4329ac:	adds	w0, w0, #0x1
  4329b0:	b.mi	432990 <ferror@plt+0x30020>  // b.first
  4329b4:	ldr	x1, [x8, #24]
  4329b8:	ldrb	w2, [x1]
  4329bc:	cmp	w2, #0x5f
  4329c0:	b.ne	432990 <ferror@plt+0x30020>  // b.any
  4329c4:	add	x1, x1, #0x1
  4329c8:	str	x1, [x8, #24]
  4329cc:	b	432994 <ferror@plt+0x30024>
  4329d0:	ldr	x1, [x8, #24]
  4329d4:	mov	w0, #0x0                   	// #0
  4329d8:	ldrb	w2, [x1]
  4329dc:	cmp	w2, #0x5f
  4329e0:	b.ne	432988 <ferror@plt+0x30018>  // b.any
  4329e4:	add	x1, x1, #0x1
  4329e8:	str	x1, [x8, #24]
  4329ec:	ret
  4329f0:	ldr	x1, [x0, #24]
  4329f4:	ldrb	w2, [x1]
  4329f8:	cmp	w2, #0x54
  4329fc:	b.eq	432a14 <ferror@plt+0x300a4>  // b.none
  432a00:	mov	x0, #0x0                   	// #0
  432a04:	ret
  432a08:	mov	x0, #0x0                   	// #0
  432a0c:	ldp	x29, x30, [sp], #16
  432a10:	ret
  432a14:	stp	x29, x30, [sp, #-16]!
  432a18:	add	x1, x1, #0x1
  432a1c:	mov	x9, x0
  432a20:	mov	x29, sp
  432a24:	str	x1, [x0, #24]
  432a28:	bl	43296c <ferror@plt+0x2fffc>
  432a2c:	sxtw	x4, w0
  432a30:	tbnz	w4, #31, 432a08 <ferror@plt+0x30098>
  432a34:	mov	x0, x9
  432a38:	bl	432530 <ferror@plt+0x2fbc0>
  432a3c:	cbz	x0, 432a0c <ferror@plt+0x3009c>
  432a40:	mov	w1, #0x5                   	// #5
  432a44:	str	w1, [x0]
  432a48:	str	x4, [x0, #8]
  432a4c:	b	432a0c <ferror@plt+0x3009c>
  432a50:	mov	x8, x0
  432a54:	cbnz	w1, 432a84 <ferror@plt+0x30114>
  432a58:	ldr	x0, [x0, #24]
  432a5c:	ldrb	w1, [x0]
  432a60:	cbnz	w1, 432a78 <ferror@plt+0x30108>
  432a64:	mov	w0, #0x0                   	// #0
  432a68:	ret
  432a6c:	mov	w0, #0x0                   	// #0
  432a70:	ldp	x29, x30, [sp], #16
  432a74:	ret
  432a78:	add	x1, x0, #0x1
  432a7c:	str	x1, [x8, #24]
  432a80:	ldrb	w1, [x0]
  432a84:	stp	x29, x30, [sp, #-16]!
  432a88:	cmp	w1, #0x68
  432a8c:	mov	x29, sp
  432a90:	b.ne	432abc <ferror@plt+0x3014c>  // b.any
  432a94:	add	x0, x8, #0x18
  432a98:	bl	4328a8 <ferror@plt+0x2ff38>
  432a9c:	ldr	x0, [x8, #24]
  432aa0:	ldrb	w1, [x0]
  432aa4:	cmp	w1, #0x5f
  432aa8:	b.ne	432a6c <ferror@plt+0x300fc>  // b.any
  432aac:	add	x0, x0, #0x1
  432ab0:	str	x0, [x8, #24]
  432ab4:	mov	w0, #0x1                   	// #1
  432ab8:	b	432a70 <ferror@plt+0x30100>
  432abc:	cmp	w1, #0x76
  432ac0:	b.ne	432a6c <ferror@plt+0x300fc>  // b.any
  432ac4:	add	x9, x8, #0x18
  432ac8:	mov	x0, x9
  432acc:	bl	4328a8 <ferror@plt+0x2ff38>
  432ad0:	ldr	x0, [x8, #24]
  432ad4:	ldrb	w1, [x0]
  432ad8:	cmp	w1, #0x5f
  432adc:	b.ne	432a6c <ferror@plt+0x300fc>  // b.any
  432ae0:	add	x0, x0, #0x1
  432ae4:	str	x0, [x8, #24]
  432ae8:	mov	x0, x9
  432aec:	b	432a98 <ferror@plt+0x30128>
  432af0:	ldrb	w2, [x0]
  432af4:	sub	w1, w2, #0x4b
  432af8:	and	w1, w1, #0xff
  432afc:	cmp	w1, #0x27
  432b00:	b.ls	432b14 <ferror@plt+0x301a4>  // b.plast
  432b04:	cmp	w2, #0x44
  432b08:	b.eq	432b28 <ferror@plt+0x301b8>  // b.none
  432b0c:	mov	w0, #0x0                   	// #0
  432b10:	ret
  432b14:	mov	x0, #0x801                 	// #2049
  432b18:	movk	x0, #0x80, lsl #32
  432b1c:	lsr	x0, x0, x1
  432b20:	and	w0, w0, #0x1
  432b24:	b	432b10 <ferror@plt+0x301a0>
  432b28:	ldrb	w0, [x0, #1]
  432b2c:	and	w1, w0, #0xffffffdf
  432b30:	sub	w0, w0, #0x77
  432b34:	and	w0, w0, #0xff
  432b38:	cmp	w1, #0x4f
  432b3c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  432b40:	cset	w0, ls  // ls = plast
  432b44:	b	432b10 <ferror@plt+0x301a0>
  432b48:	ldr	x0, [x0]
  432b4c:	ldrb	w1, [x0, #1]
  432b50:	cmp	w1, #0x63
  432b54:	b.ne	432b80 <ferror@plt+0x30210>  // b.any
  432b58:	ldrb	w0, [x0]
  432b5c:	sub	w1, w0, #0x63
  432b60:	and	w1, w1, #0xff
  432b64:	cmp	w1, #0x1
  432b68:	b.ls	432b88 <ferror@plt+0x30218>  // b.plast
  432b6c:	sub	w0, w0, #0x72
  432b70:	and	w0, w0, #0xff
  432b74:	cmp	w0, #0x1
  432b78:	cset	w0, ls  // ls = plast
  432b7c:	ret
  432b80:	mov	w0, #0x0                   	// #0
  432b84:	b	432b7c <ferror@plt+0x3020c>
  432b88:	mov	w0, #0x1                   	// #1
  432b8c:	b	432b7c <ferror@plt+0x3020c>
  432b90:	mov	x8, x0
  432b94:	ldr	x0, [x0, #24]
  432b98:	ldrb	w1, [x0]
  432b9c:	cmp	w1, #0x5f
  432ba0:	b.eq	432bac <ferror@plt+0x3023c>  // b.none
  432ba4:	mov	w0, #0x1                   	// #1
  432ba8:	ret
  432bac:	stp	x29, x30, [sp, #-16]!
  432bb0:	add	x1, x0, #0x1
  432bb4:	mov	x29, sp
  432bb8:	str	x1, [x8, #24]
  432bbc:	ldrb	w1, [x0, #1]
  432bc0:	cmp	w1, #0x5f
  432bc4:	b.ne	432c10 <ferror@plt+0x302a0>  // b.any
  432bc8:	add	x0, x0, #0x2
  432bcc:	mov	w9, #0x2                   	// #2
  432bd0:	str	x0, [x8, #24]
  432bd4:	add	x0, x8, #0x18
  432bd8:	bl	4328a8 <ferror@plt+0x2ff38>
  432bdc:	tbnz	w0, #31, 432c18 <ferror@plt+0x302a8>
  432be0:	cmp	w9, #0x1
  432be4:	ccmp	w0, #0x9, #0x4, gt
  432be8:	b.le	432c04 <ferror@plt+0x30294>
  432bec:	ldr	x0, [x8, #24]
  432bf0:	ldrb	w1, [x0]
  432bf4:	cmp	w1, #0x5f
  432bf8:	b.ne	432c18 <ferror@plt+0x302a8>  // b.any
  432bfc:	add	x0, x0, #0x1
  432c00:	str	x0, [x8, #24]
  432c04:	mov	w0, #0x1                   	// #1
  432c08:	ldp	x29, x30, [sp], #16
  432c0c:	ret
  432c10:	mov	w9, #0x1                   	// #1
  432c14:	b	432bd4 <ferror@plt+0x30264>
  432c18:	mov	w0, #0x0                   	// #0
  432c1c:	b	432c08 <ferror@plt+0x30298>
  432c20:	cbnz	x0, 432c28 <ferror@plt+0x302b8>
  432c24:	ret
  432c28:	ldr	w2, [x0]
  432c2c:	cmp	w2, #0x2f
  432c30:	b.ne	432c54 <ferror@plt+0x302e4>  // b.any
  432c34:	cmp	w1, #0x0
  432c38:	b.le	432c48 <ferror@plt+0x302d8>
  432c3c:	sub	w1, w1, #0x1
  432c40:	ldr	x0, [x0, #16]
  432c44:	b	432c20 <ferror@plt+0x302b0>
  432c48:	b.ne	432c54 <ferror@plt+0x302e4>  // b.any
  432c4c:	ldr	x0, [x0, #8]
  432c50:	b	432c24 <ferror@plt+0x302b4>
  432c54:	mov	x0, #0x0                   	// #0
  432c58:	b	432c24 <ferror@plt+0x302b4>
  432c5c:	stp	x29, x30, [sp, #-32]!
  432c60:	mov	x29, sp
  432c64:	stp	x19, x20, [sp, #16]
  432c68:	mov	x19, x0
  432c6c:	ldr	w0, [x0, #24]
  432c70:	cbnz	w0, 432cb4 <ferror@plt+0x30344>
  432c74:	ldr	x20, [x19, #16]
  432c78:	mov	x0, #0x2                   	// #2
  432c7c:	cmp	x20, #0x0
  432c80:	csel	x20, x20, x0, ne  // ne = any
  432c84:	cmp	x20, x1
  432c88:	b.cc	432cc0 <ferror@plt+0x30350>  // b.lo, b.ul, b.last
  432c8c:	ldr	x0, [x19]
  432c90:	mov	x1, x20
  432c94:	bl	4025a0 <realloc@plt>
  432c98:	cbnz	x0, 432cc8 <ferror@plt+0x30358>
  432c9c:	ldr	x0, [x19]
  432ca0:	bl	402730 <free@plt>
  432ca4:	stp	xzr, xzr, [x19]
  432ca8:	mov	w0, #0x1                   	// #1
  432cac:	str	xzr, [x19, #16]
  432cb0:	str	w0, [x19, #24]
  432cb4:	ldp	x19, x20, [sp, #16]
  432cb8:	ldp	x29, x30, [sp], #32
  432cbc:	ret
  432cc0:	lsl	x20, x20, #1
  432cc4:	b	432c84 <ferror@plt+0x30314>
  432cc8:	str	x0, [x19]
  432ccc:	str	x20, [x19, #16]
  432cd0:	b	432cb4 <ferror@plt+0x30344>
  432cd4:	stp	x29, x30, [sp, #-48]!
  432cd8:	mov	x29, sp
  432cdc:	str	x21, [sp, #32]
  432ce0:	mov	x21, x0
  432ce4:	ldr	x0, [x2, #8]
  432ce8:	stp	x19, x20, [sp, #16]
  432cec:	mov	x20, x1
  432cf0:	add	x1, x1, #0x1
  432cf4:	mov	x19, x2
  432cf8:	add	x1, x1, x0
  432cfc:	ldr	x0, [x2, #16]
  432d00:	cmp	x1, x0
  432d04:	b.ls	432d10 <ferror@plt+0x303a0>  // b.plast
  432d08:	mov	x0, x2
  432d0c:	bl	432c5c <ferror@plt+0x302ec>
  432d10:	ldr	w0, [x19, #24]
  432d14:	cbnz	w0, 432d44 <ferror@plt+0x303d4>
  432d18:	ldp	x3, x0, [x19]
  432d1c:	mov	x2, x20
  432d20:	mov	x1, x21
  432d24:	add	x0, x3, x0
  432d28:	bl	4022e0 <memcpy@plt>
  432d2c:	ldp	x0, x1, [x19]
  432d30:	add	x0, x0, x20
  432d34:	strb	wzr, [x0, x1]
  432d38:	ldr	x1, [x19, #8]
  432d3c:	add	x20, x1, x20
  432d40:	str	x20, [x19, #8]
  432d44:	ldp	x19, x20, [sp, #16]
  432d48:	ldr	x21, [sp, #32]
  432d4c:	ldp	x29, x30, [sp], #48
  432d50:	ret
  432d54:	mov	x2, x0
  432d58:	ldr	x0, [x0, #288]
  432d5c:	cbnz	x0, 432d6c <ferror@plt+0x303fc>
  432d60:	mov	w1, #0x1                   	// #1
  432d64:	str	w1, [x2, #304]
  432d68:	ret
  432d6c:	ldr	x1, [x1]
  432d70:	ldr	x0, [x0, #8]
  432d74:	ldr	x0, [x0, #16]
  432d78:	tbnz	w1, #31, 432d68 <ferror@plt+0x303f8>
  432d7c:	b	432c20 <ferror@plt+0x302b0>
  432d80:	stp	x29, x30, [sp, #-64]!
  432d84:	mov	x29, sp
  432d88:	str	x23, [sp, #48]
  432d8c:	mov	x23, #0x8001                	// #32769
  432d90:	movk	x23, #0x410, lsl #16
  432d94:	stp	x19, x20, [sp, #16]
  432d98:	movk	x23, #0xc600, lsl #32
  432d9c:	mov	x20, x0
  432da0:	mov	x19, x1
  432da4:	stp	x21, x22, [sp, #32]
  432da8:	adrp	x21, 455000 <_obstack_memory_used@@Base+0x1b198>
  432dac:	add	x21, x21, #0x870
  432db0:	mov	x22, #0x1                   	// #1
  432db4:	movk	x23, #0x19, lsl #48
  432db8:	cbz	x19, 432e40 <ferror@plt+0x304d0>
  432dbc:	ldr	w1, [x19]
  432dc0:	cmp	w1, #0x8
  432dc4:	b.ls	432e00 <ferror@plt+0x30490>  // b.plast
  432dc8:	sub	w1, w1, #0x18
  432dcc:	cmp	w1, #0x34
  432dd0:	b.ls	432de8 <ferror@plt+0x30478>  // b.plast
  432dd4:	ldr	x1, [x19, #8]
  432dd8:	mov	x0, x20
  432ddc:	bl	432d80 <ferror@plt+0x30410>
  432de0:	cbz	x0, 432df8 <ferror@plt+0x30488>
  432de4:	b	432e2c <ferror@plt+0x304bc>
  432de8:	lsl	x1, x22, x1
  432dec:	tst	x1, x23
  432df0:	b.ne	432e40 <ferror@plt+0x304d0>  // b.any
  432df4:	tbz	w1, #27, 432dd4 <ferror@plt+0x30464>
  432df8:	ldr	x19, [x19, #16]
  432dfc:	b	432db8 <ferror@plt+0x30448>
  432e00:	ldrb	w0, [x21, w1, uxtw]
  432e04:	adr	x1, 432e10 <ferror@plt+0x304a0>
  432e08:	add	x0, x1, w0, sxtb #2
  432e0c:	br	x0
  432e10:	add	x1, x19, #0x8
  432e14:	mov	x0, x20
  432e18:	bl	432d54 <ferror@plt+0x303e4>
  432e1c:	cbz	x0, 432e40 <ferror@plt+0x304d0>
  432e20:	ldr	w1, [x0]
  432e24:	cmp	w1, #0x2f
  432e28:	b.ne	432e40 <ferror@plt+0x304d0>  // b.any
  432e2c:	ldp	x19, x20, [sp, #16]
  432e30:	ldp	x21, x22, [sp, #32]
  432e34:	ldr	x23, [sp, #48]
  432e38:	ldp	x29, x30, [sp], #64
  432e3c:	ret
  432e40:	mov	x0, #0x0                   	// #0
  432e44:	b	432e2c <ferror@plt+0x304bc>
  432e48:	stp	x29, x30, [sp, #-224]!
  432e4c:	mov	x29, sp
  432e50:	stp	x19, x20, [sp, #16]
  432e54:	mov	x19, x0
  432e58:	stp	x21, x22, [sp, #32]
  432e5c:	stp	x23, x24, [sp, #48]
  432e60:	str	x25, [sp, #64]
  432e64:	cbnz	x2, 432e88 <ferror@plt+0x30518>
  432e68:	mov	w0, #0x1                   	// #1
  432e6c:	str	w0, [x19, #304]
  432e70:	ldp	x19, x20, [sp, #16]
  432e74:	ldp	x21, x22, [sp, #32]
  432e78:	ldp	x23, x24, [sp, #48]
  432e7c:	ldr	x25, [sp, #64]
  432e80:	ldp	x29, x30, [sp], #224
  432e84:	ret
  432e88:	ldr	w22, [x0, #304]
  432e8c:	cbnz	w22, 432e70 <ferror@plt+0x30500>
  432e90:	ldr	w0, [x2]
  432e94:	mov	x20, x2
  432e98:	cmp	w0, #0x50
  432e9c:	b.hi	434050 <ferror@plt+0x316e0>  // b.pmore
  432ea0:	mov	w21, w1
  432ea4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  432ea8:	add	x1, x1, #0x87c
  432eac:	ldrh	w1, [x1, w0, uxtw #1]
  432eb0:	adr	x2, 432ebc <ferror@plt+0x3054c>
  432eb4:	add	x1, x2, w1, sxth #2
  432eb8:	br	x1
  432ebc:	ldrsw	x2, [x20, #16]
  432ec0:	ldr	x20, [x20, #8]
  432ec4:	tbnz	w21, #2, 432ed8 <ferror@plt+0x30568>
  432ec8:	mov	x1, x20
  432ecc:	mov	x0, x19
  432ed0:	bl	4327c4 <ferror@plt+0x2fe54>
  432ed4:	b	432e70 <ferror@plt+0x30500>
  432ed8:	add	x21, x20, x2
  432edc:	cmp	x21, x20
  432ee0:	b.ls	432e70 <ferror@plt+0x30500>  // b.plast
  432ee4:	sub	x0, x21, x20
  432ee8:	ldrb	w3, [x20]
  432eec:	cmp	x0, #0x3
  432ef0:	b.le	432f24 <ferror@plt+0x305b4>
  432ef4:	cmp	w3, #0x5f
  432ef8:	b.ne	432f24 <ferror@plt+0x305b4>  // b.any
  432efc:	ldrb	w0, [x20, #1]
  432f00:	cmp	w0, #0x5f
  432f04:	b.ne	432f24 <ferror@plt+0x305b4>  // b.any
  432f08:	ldrb	w0, [x20, #2]
  432f0c:	cmp	w0, #0x55
  432f10:	b.ne	432f24 <ferror@plt+0x305b4>  // b.any
  432f14:	add	x22, x20, #0x3
  432f18:	mov	x1, #0x0                   	// #0
  432f1c:	cmp	x21, x22
  432f20:	b.hi	432f38 <ferror@plt+0x305c8>  // b.pmore
  432f24:	mov	w1, w3
  432f28:	mov	x0, x19
  432f2c:	mov	x22, x20
  432f30:	bl	432780 <ferror@plt+0x2fe10>
  432f34:	b	432fa0 <ferror@plt+0x30630>
  432f38:	ldrb	w2, [x22]
  432f3c:	sub	w0, w2, #0x30
  432f40:	and	w4, w0, #0xff
  432f44:	cmp	w4, #0x9
  432f48:	b.ls	432f60 <ferror@plt+0x305f0>  // b.plast
  432f4c:	sub	w0, w2, #0x41
  432f50:	and	w0, w0, #0xff
  432f54:	cmp	w0, #0x5
  432f58:	b.hi	432f70 <ferror@plt+0x30600>  // b.pmore
  432f5c:	sub	w0, w2, #0x37
  432f60:	sxtw	x0, w0
  432f64:	add	x22, x22, #0x1
  432f68:	add	x1, x0, x1, lsl #4
  432f6c:	b	432f1c <ferror@plt+0x305ac>
  432f70:	sub	w0, w2, #0x61
  432f74:	and	w0, w0, #0xff
  432f78:	cmp	w0, #0x5
  432f7c:	b.hi	432f88 <ferror@plt+0x30618>  // b.pmore
  432f80:	sub	w0, w2, #0x57
  432f84:	b	432f60 <ferror@plt+0x305f0>
  432f88:	cmp	w2, #0x5f
  432f8c:	b.ne	432f24 <ferror@plt+0x305b4>  // b.any
  432f90:	cmp	x1, #0xff
  432f94:	b.hi	432f24 <ferror@plt+0x305b4>  // b.pmore
  432f98:	mov	x0, x19
  432f9c:	bl	432780 <ferror@plt+0x2fe10>
  432fa0:	add	x20, x22, #0x1
  432fa4:	b	432edc <ferror@plt+0x3056c>
  432fa8:	ldr	x2, [x20, #8]
  432fac:	mov	w1, w21
  432fb0:	mov	x0, x19
  432fb4:	bl	434658 <ferror@plt+0x31ce8>
  432fb8:	mov	x0, x19
  432fbc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  432fc0:	add	x1, x1, #0x6b0
  432fc4:	bl	432838 <ferror@plt+0x2fec8>
  432fc8:	ldr	x2, [x20, #16]
  432fcc:	mov	w1, w21
  432fd0:	mov	x0, x19
  432fd4:	bl	434658 <ferror@plt+0x31ce8>
  432fd8:	mov	x0, x19
  432fdc:	mov	w1, #0x5d                  	// #93
  432fe0:	bl	432780 <ferror@plt+0x2fe10>
  432fe4:	b	432e70 <ferror@plt+0x30500>
  432fe8:	ldr	x2, [x20, #8]
  432fec:	mov	w1, w21
  432ff0:	mov	x0, x19
  432ff4:	bl	434658 <ferror@plt+0x31ce8>
  432ff8:	tbnz	w21, #2, 433064 <ferror@plt+0x306f4>
  432ffc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433000:	mov	x0, x19
  433004:	add	x1, x1, #0x6c5
  433008:	bl	432838 <ferror@plt+0x2fec8>
  43300c:	ldr	x20, [x20, #16]
  433010:	ldr	w0, [x20]
  433014:	cmp	w0, #0x47
  433018:	b.ne	433050 <ferror@plt+0x306e0>  // b.any
  43301c:	mov	x0, x19
  433020:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433024:	add	x1, x1, #0x6b6
  433028:	bl	432838 <ferror@plt+0x2fec8>
  43302c:	ldr	w1, [x20, #16]
  433030:	mov	x0, x19
  433034:	add	w1, w1, #0x1
  433038:	bl	43286c <ferror@plt+0x2fefc>
  43303c:	mov	x0, x19
  433040:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433044:	add	x1, x1, #0x6c4
  433048:	bl	432838 <ferror@plt+0x2fec8>
  43304c:	ldr	x20, [x20, #8]
  433050:	mov	x2, x20
  433054:	mov	w1, w21
  433058:	mov	x0, x19
  43305c:	bl	434658 <ferror@plt+0x31ce8>
  433060:	b	432e70 <ferror@plt+0x30500>
  433064:	mov	x0, x19
  433068:	mov	w1, #0x2e                  	// #46
  43306c:	bl	432780 <ferror@plt+0x2fe10>
  433070:	b	43300c <ferror@plt+0x3069c>
  433074:	add	x3, sp, #0x60
  433078:	mov	w23, #0x0                   	// #0
  43307c:	mov	x2, x3
  433080:	ldr	x22, [x20, #8]
  433084:	ldr	x24, [x19, #296]
  433088:	str	xzr, [x19, #296]
  43308c:	cbz	x22, 433098 <ferror@plt+0x30728>
  433090:	cmp	w23, #0x4
  433094:	b.ne	4330a4 <ferror@plt+0x30734>  // b.any
  433098:	mov	w0, #0x1                   	// #1
  43309c:	str	w0, [x19, #304]
  4330a0:	b	432e70 <ferror@plt+0x30500>
  4330a4:	str	wzr, [x3, #16]
  4330a8:	add	w23, w23, #0x1
  4330ac:	ldp	x4, x0, [x19, #288]
  4330b0:	stp	x0, x22, [x3]
  4330b4:	ldr	w5, [x22]
  4330b8:	str	x4, [x3, #24]
  4330bc:	str	x3, [x19, #296]
  4330c0:	mov	w0, w5
  4330c4:	bl	432500 <ferror@plt+0x2fb90>
  4330c8:	add	x3, x3, #0x20
  4330cc:	cbz	w0, 4345a8 <ferror@plt+0x31c38>
  4330d0:	ldr	x22, [x22, #8]
  4330d4:	b	43308c <ferror@plt+0x3071c>
  4330d8:	cmp	w23, #0x4
  4330dc:	b.eq	433098 <ferror@plt+0x30728>  // b.none
  4330e0:	ldp	x0, x1, [x2, #-32]
  4330e4:	stur	x22, [x2, #-24]
  4330e8:	stp	x0, x1, [x2]
  4330ec:	sub	x3, x2, #0x20
  4330f0:	add	w23, w23, #0x1
  4330f4:	ldp	x0, x1, [x2, #-16]
  4330f8:	stur	wzr, [x2, #-16]
  4330fc:	stp	x4, x3, [x2, #-8]
  433100:	stp	x0, x1, [x2, #16]
  433104:	ldr	x22, [x22, #8]
  433108:	str	x2, [x19, #296]
  43310c:	add	x2, x2, #0x20
  433110:	b	4345d0 <ferror@plt+0x31c60>
  433114:	ldr	x22, [x20, #8]
  433118:	ldr	x24, [x19, #296]
  43311c:	str	xzr, [x19, #296]
  433120:	ldr	x23, [x19, #368]
  433124:	str	x20, [x19, #368]
  433128:	tbz	w21, #2, 433184 <ferror@plt+0x30814>
  43312c:	ldr	w0, [x22]
  433130:	cbnz	w0, 433184 <ferror@plt+0x30814>
  433134:	ldr	w0, [x22, #16]
  433138:	cmp	w0, #0x6
  43313c:	b.ne	433184 <ferror@plt+0x30814>  // b.any
  433140:	ldr	x0, [x22, #8]
  433144:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433148:	mov	x2, #0x6                   	// #6
  43314c:	add	x1, x1, #0x6c8
  433150:	bl	4024e0 <strncmp@plt>
  433154:	cbnz	w0, 433184 <ferror@plt+0x30814>
  433158:	ldr	x2, [x20, #16]
  43315c:	mov	w1, w21
  433160:	mov	x0, x19
  433164:	bl	434658 <ferror@plt+0x31ce8>
  433168:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  43316c:	mov	x0, x19
  433170:	add	x1, x1, #0xae1
  433174:	bl	432838 <ferror@plt+0x2fec8>
  433178:	str	x24, [x19, #296]
  43317c:	str	x23, [x19, #368]
  433180:	b	432e70 <ferror@plt+0x30500>
  433184:	mov	x0, x19
  433188:	mov	x2, x22
  43318c:	mov	w1, w21
  433190:	bl	434658 <ferror@plt+0x31ce8>
  433194:	ldrb	w0, [x19, #264]
  433198:	cmp	w0, #0x3c
  43319c:	b.ne	4331ac <ferror@plt+0x3083c>  // b.any
  4331a0:	mov	x0, x19
  4331a4:	mov	w1, #0x20                  	// #32
  4331a8:	bl	432780 <ferror@plt+0x2fe10>
  4331ac:	mov	x0, x19
  4331b0:	mov	w1, #0x3c                  	// #60
  4331b4:	bl	432780 <ferror@plt+0x2fe10>
  4331b8:	ldr	x2, [x20, #16]
  4331bc:	mov	x0, x19
  4331c0:	mov	w1, w21
  4331c4:	bl	434658 <ferror@plt+0x31ce8>
  4331c8:	ldrb	w0, [x19, #264]
  4331cc:	cmp	w0, #0x3e
  4331d0:	b.ne	4331e0 <ferror@plt+0x30870>  // b.any
  4331d4:	mov	x0, x19
  4331d8:	mov	w1, #0x20                  	// #32
  4331dc:	bl	432780 <ferror@plt+0x2fe10>
  4331e0:	mov	x0, x19
  4331e4:	mov	w1, #0x3e                  	// #62
  4331e8:	bl	432780 <ferror@plt+0x2fe10>
  4331ec:	b	433178 <ferror@plt+0x30808>
  4331f0:	ldr	w0, [x19, #312]
  4331f4:	cbz	w0, 433220 <ferror@plt+0x308b0>
  4331f8:	mov	x0, x19
  4331fc:	mov	x2, #0x5                   	// #5
  433200:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433204:	add	x1, x1, #0x6cf
  433208:	bl	4327c4 <ferror@plt+0x2fe54>
  43320c:	ldr	x1, [x20, #8]
  433210:	mov	x0, x19
  433214:	add	w1, w1, #0x1
  433218:	bl	43286c <ferror@plt+0x2fefc>
  43321c:	b	432e70 <ferror@plt+0x30500>
  433220:	add	x1, x20, #0x8
  433224:	mov	x0, x19
  433228:	bl	432d54 <ferror@plt+0x303e4>
  43322c:	mov	x2, x0
  433230:	cbz	x0, 432e68 <ferror@plt+0x304f8>
  433234:	ldr	w1, [x0]
  433238:	cmp	w1, #0x2f
  43323c:	b.ne	433254 <ferror@plt+0x308e4>  // b.any
  433240:	ldr	w1, [x19, #316]
  433244:	tbnz	w1, #31, 433254 <ferror@plt+0x308e4>
  433248:	bl	432c20 <ferror@plt+0x302b0>
  43324c:	mov	x2, x0
  433250:	cbz	x0, 432e68 <ferror@plt+0x304f8>
  433254:	ldr	x20, [x19, #288]
  433258:	mov	w1, w21
  43325c:	ldr	x0, [x20]
  433260:	str	x0, [x19, #288]
  433264:	mov	x0, x19
  433268:	bl	434658 <ferror@plt+0x31ce8>
  43326c:	str	x20, [x19, #288]
  433270:	b	432e70 <ferror@plt+0x30500>
  433274:	mov	x0, x19
  433278:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  43327c:	add	x1, x1, #0x6d5
  433280:	bl	432838 <ferror@plt+0x2fec8>
  433284:	ldr	x2, [x20, #8]
  433288:	mov	w1, w21
  43328c:	mov	x0, x19
  433290:	bl	434658 <ferror@plt+0x31ce8>
  433294:	b	432e70 <ferror@plt+0x30500>
  433298:	ldr	x2, [x20, #16]
  43329c:	mov	w1, w21
  4332a0:	mov	x0, x19
  4332a4:	bl	434658 <ferror@plt+0x31ce8>
  4332a8:	b	432e70 <ferror@plt+0x30500>
  4332ac:	mov	x0, x19
  4332b0:	mov	w1, #0x7e                  	// #126
  4332b4:	bl	432780 <ferror@plt+0x2fe10>
  4332b8:	ldr	x2, [x20, #16]
  4332bc:	mov	w1, w21
  4332c0:	mov	x0, x19
  4332c4:	bl	434658 <ferror@plt+0x31ce8>
  4332c8:	b	432e70 <ferror@plt+0x30500>
  4332cc:	mov	x0, x19
  4332d0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4332d4:	add	x1, x1, #0x70a
  4332d8:	bl	432838 <ferror@plt+0x2fec8>
  4332dc:	ldr	x2, [x20, #8]
  4332e0:	mov	w1, w21
  4332e4:	mov	x0, x19
  4332e8:	bl	434658 <ferror@plt+0x31ce8>
  4332ec:	b	432e70 <ferror@plt+0x30500>
  4332f0:	mov	x0, x19
  4332f4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4332f8:	add	x1, x1, #0x6f4
  4332fc:	bl	432838 <ferror@plt+0x2fec8>
  433300:	ldr	x2, [x20, #8]
  433304:	mov	w1, w21
  433308:	mov	x0, x19
  43330c:	bl	434658 <ferror@plt+0x31ce8>
  433310:	b	432e70 <ferror@plt+0x30500>
  433314:	mov	x0, x19
  433318:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  43331c:	add	x1, x1, #0x6fd
  433320:	bl	432838 <ferror@plt+0x2fec8>
  433324:	ldr	x2, [x20, #8]
  433328:	mov	w1, w21
  43332c:	mov	x0, x19
  433330:	bl	434658 <ferror@plt+0x31ce8>
  433334:	mov	x0, x19
  433338:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  43333c:	add	x1, x1, #0x716
  433340:	bl	432838 <ferror@plt+0x2fec8>
  433344:	ldr	x2, [x20, #16]
  433348:	mov	w1, w21
  43334c:	mov	x0, x19
  433350:	bl	434658 <ferror@plt+0x31ce8>
  433354:	b	432e70 <ferror@plt+0x30500>
  433358:	mov	x0, x19
  43335c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433360:	add	x1, x1, #0x71b
  433364:	bl	432838 <ferror@plt+0x2fec8>
  433368:	ldr	x2, [x20, #8]
  43336c:	mov	w1, w21
  433370:	mov	x0, x19
  433374:	bl	434658 <ferror@plt+0x31ce8>
  433378:	b	432e70 <ferror@plt+0x30500>
  43337c:	mov	x0, x19
  433380:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433384:	add	x1, x1, #0x729
  433388:	bl	432838 <ferror@plt+0x2fec8>
  43338c:	ldr	x2, [x20, #8]
  433390:	mov	w1, w21
  433394:	mov	x0, x19
  433398:	bl	434658 <ferror@plt+0x31ce8>
  43339c:	b	432e70 <ferror@plt+0x30500>
  4333a0:	mov	x0, x19
  4333a4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4333a8:	add	x1, x1, #0x73c
  4333ac:	bl	432838 <ferror@plt+0x2fec8>
  4333b0:	ldr	x2, [x20, #8]
  4333b4:	mov	w1, w21
  4333b8:	mov	x0, x19
  4333bc:	bl	434658 <ferror@plt+0x31ce8>
  4333c0:	b	432e70 <ferror@plt+0x30500>
  4333c4:	mov	x0, x19
  4333c8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4333cc:	add	x1, x1, #0x74d
  4333d0:	bl	432838 <ferror@plt+0x2fec8>
  4333d4:	ldr	x2, [x20, #8]
  4333d8:	mov	w1, w21
  4333dc:	mov	x0, x19
  4333e0:	bl	434658 <ferror@plt+0x31ce8>
  4333e4:	b	432e70 <ferror@plt+0x30500>
  4333e8:	mov	x0, x19
  4333ec:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4333f0:	add	x1, x1, #0x751
  4333f4:	bl	432838 <ferror@plt+0x2fec8>
  4333f8:	ldr	x2, [x20, #8]
  4333fc:	mov	w1, w21
  433400:	mov	x0, x19
  433404:	bl	434658 <ferror@plt+0x31ce8>
  433408:	b	432e70 <ferror@plt+0x30500>
  43340c:	mov	x0, x19
  433410:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433414:	add	x1, x1, #0x763
  433418:	bl	432838 <ferror@plt+0x2fec8>
  43341c:	ldr	x2, [x20, #8]
  433420:	mov	w1, w21
  433424:	mov	x0, x19
  433428:	bl	434658 <ferror@plt+0x31ce8>
  43342c:	b	432e70 <ferror@plt+0x30500>
  433430:	mov	x0, x19
  433434:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433438:	add	x1, x1, #0x77e
  43343c:	bl	432838 <ferror@plt+0x2fec8>
  433440:	ldr	x2, [x20, #8]
  433444:	mov	w1, w21
  433448:	mov	x0, x19
  43344c:	bl	434658 <ferror@plt+0x31ce8>
  433450:	b	432e70 <ferror@plt+0x30500>
  433454:	mov	x0, x19
  433458:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  43345c:	add	x1, x1, #0x78e
  433460:	bl	432838 <ferror@plt+0x2fec8>
  433464:	ldr	x2, [x20, #8]
  433468:	mov	w1, w21
  43346c:	mov	x0, x19
  433470:	bl	434658 <ferror@plt+0x31ce8>
  433474:	b	432e70 <ferror@plt+0x30500>
  433478:	mov	x0, x19
  43347c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433480:	add	x1, x1, #0x7a2
  433484:	bl	432838 <ferror@plt+0x2fec8>
  433488:	ldr	x2, [x20, #8]
  43348c:	mov	w1, w21
  433490:	mov	x0, x19
  433494:	bl	434658 <ferror@plt+0x31ce8>
  433498:	b	432e70 <ferror@plt+0x30500>
  43349c:	mov	x0, x19
  4334a0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4334a4:	add	x1, x1, #0x7b9
  4334a8:	bl	432838 <ferror@plt+0x2fec8>
  4334ac:	ldr	x2, [x20, #8]
  4334b0:	mov	w1, w21
  4334b4:	mov	x0, x19
  4334b8:	bl	434658 <ferror@plt+0x31ce8>
  4334bc:	b	432e70 <ferror@plt+0x30500>
  4334c0:	mov	x0, x19
  4334c4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4334c8:	add	x1, x1, #0x7d3
  4334cc:	bl	432838 <ferror@plt+0x2fec8>
  4334d0:	ldr	x2, [x20, #16]
  4334d4:	mov	w1, w21
  4334d8:	mov	x0, x19
  4334dc:	bl	434658 <ferror@plt+0x31ce8>
  4334e0:	mov	x0, x19
  4334e4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4334e8:	add	x1, x1, #0x6f7
  4334ec:	bl	432838 <ferror@plt+0x2fec8>
  4334f0:	ldr	x2, [x20, #8]
  4334f4:	mov	w1, w21
  4334f8:	mov	x0, x19
  4334fc:	bl	434658 <ferror@plt+0x31ce8>
  433500:	b	432e70 <ferror@plt+0x30500>
  433504:	mov	x0, x19
  433508:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  43350c:	add	x1, x1, #0x7e9
  433510:	bl	432838 <ferror@plt+0x2fec8>
  433514:	ldr	x2, [x20, #8]
  433518:	mov	w1, w21
  43351c:	mov	x0, x19
  433520:	bl	434658 <ferror@plt+0x31ce8>
  433524:	b	432e70 <ferror@plt+0x30500>
  433528:	mov	x0, x19
  43352c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433530:	add	x1, x1, #0x7ff
  433534:	bl	432838 <ferror@plt+0x2fec8>
  433538:	ldr	x2, [x20, #8]
  43353c:	mov	w1, w21
  433540:	mov	x0, x19
  433544:	bl	434658 <ferror@plt+0x31ce8>
  433548:	b	432e70 <ferror@plt+0x30500>
  43354c:	mov	x0, x19
  433550:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433554:	add	x1, x1, #0x7fb
  433558:	bl	432838 <ferror@plt+0x2fec8>
  43355c:	ldr	x2, [x20, #8]
  433560:	mov	w1, w21
  433564:	mov	x0, x19
  433568:	bl	434658 <ferror@plt+0x31ce8>
  43356c:	b	432e70 <ferror@plt+0x30500>
  433570:	ldrsw	x2, [x20, #16]
  433574:	mov	x0, x19
  433578:	ldr	x1, [x20, #8]
  43357c:	bl	4327c4 <ferror@plt+0x2fe54>
  433580:	b	432e70 <ferror@plt+0x30500>
  433584:	ldr	x2, [x19, #296]
  433588:	cbnz	x2, 4335ec <ferror@plt+0x30c7c>
  43358c:	mov	w22, #0x0                   	// #0
  433590:	ldr	x0, [x19, #296]
  433594:	stp	x0, x20, [sp, #96]
  433598:	add	x0, sp, #0x60
  43359c:	str	x0, [x19, #296]
  4335a0:	ldr	x0, [x19, #288]
  4335a4:	str	wzr, [sp, #112]
  4335a8:	str	x0, [sp, #120]
  4335ac:	cbnz	x2, 4335b4 <ferror@plt+0x30c44>
  4335b0:	ldr	x2, [x20, #8]
  4335b4:	mov	x0, x19
  4335b8:	mov	w1, w21
  4335bc:	bl	434658 <ferror@plt+0x31ce8>
  4335c0:	ldr	w0, [sp, #112]
  4335c4:	cbnz	w0, 4335d8 <ferror@plt+0x30c68>
  4335c8:	mov	x2, x20
  4335cc:	mov	w1, w21
  4335d0:	mov	x0, x19
  4335d4:	bl	4346e4 <ferror@plt+0x31d74>
  4335d8:	ldr	x0, [sp, #96]
  4335dc:	str	x0, [x19, #296]
  4335e0:	cbz	w22, 432e70 <ferror@plt+0x30500>
  4335e4:	str	x23, [x19, #288]
  4335e8:	b	432e70 <ferror@plt+0x30500>
  4335ec:	ldr	w22, [x2, #16]
  4335f0:	cbnz	w22, 433624 <ferror@plt+0x30cb4>
  4335f4:	ldr	x1, [x2, #8]
  4335f8:	ldr	w1, [x1]
  4335fc:	sub	w3, w1, #0x19
  433600:	cmp	w3, #0x2
  433604:	b.hi	43379c <ferror@plt+0x30e2c>  // b.pmore
  433608:	cmp	w0, w1
  43360c:	b.ne	433624 <ferror@plt+0x30cb4>  // b.any
  433610:	ldr	x2, [x20, #8]
  433614:	mov	w1, w21
  433618:	mov	x0, x19
  43361c:	bl	434658 <ferror@plt+0x31ce8>
  433620:	b	432e70 <ferror@plt+0x30500>
  433624:	ldr	x2, [x2]
  433628:	b	433588 <ferror@plt+0x30c18>
  43362c:	ldr	w22, [x19, #312]
  433630:	ldr	x2, [x20, #8]
  433634:	cbnz	w22, 43376c <ferror@plt+0x30dfc>
  433638:	ldr	w0, [x2]
  43363c:	cmp	w0, #0x5
  433640:	b.ne	433770 <ferror@plt+0x30e00>  // b.any
  433644:	ldr	w0, [x19, #344]
  433648:	mov	x1, #0x0                   	// #0
  43364c:	cmp	w0, w1
  433650:	b.gt	43366c <ferror@plt+0x30cfc>
  433654:	ldr	w1, [x19, #348]
  433658:	cmp	w0, w1
  43365c:	b.lt	433694 <ferror@plt+0x30d24>  // b.tstop
  433660:	mov	w0, #0x1                   	// #1
  433664:	str	w0, [x19, #304]
  433668:	b	432e70 <ferror@plt+0x30500>
  43366c:	ldr	x4, [x19, #336]
  433670:	lsl	x3, x1, #4
  433674:	ldr	x3, [x4, x3]
  433678:	add	x5, x4, x1, lsl #4
  43367c:	add	x1, x1, #0x1
  433680:	cmp	x2, x3
  433684:	b.ne	43364c <ferror@plt+0x30cdc>  // b.any
  433688:	ldr	x1, [x19, #328]
  43368c:	mov	x0, x1
  433690:	b	433754 <ferror@plt+0x30de4>
  433694:	ldr	x3, [x19, #336]
  433698:	sbfiz	x4, x0, #4, #32
  43369c:	add	x1, x3, w0, sxtw #4
  4336a0:	add	w0, w0, #0x1
  4336a4:	str	w0, [x19, #344]
  4336a8:	add	x0, x1, #0x8
  4336ac:	str	x2, [x3, x4]
  4336b0:	ldr	x4, [x19, #288]
  4336b4:	cbnz	x4, 4336fc <ferror@plt+0x30d8c>
  4336b8:	str	xzr, [x0]
  4336bc:	add	x1, x2, #0x8
  4336c0:	mov	x0, x19
  4336c4:	bl	432d54 <ferror@plt+0x303e4>
  4336c8:	mov	x2, x0
  4336cc:	cbz	x0, 4336f0 <ferror@plt+0x30d80>
  4336d0:	ldr	w1, [x0]
  4336d4:	cmp	w1, #0x2f
  4336d8:	b.ne	433770 <ferror@plt+0x30e00>  // b.any
  4336dc:	ldr	w1, [x19, #316]
  4336e0:	tbnz	w1, #31, 433770 <ferror@plt+0x30e00>
  4336e4:	bl	432c20 <ferror@plt+0x302b0>
  4336e8:	mov	x2, x0
  4336ec:	cbnz	x0, 433770 <ferror@plt+0x30e00>
  4336f0:	cbz	w22, 432e68 <ferror@plt+0x304f8>
  4336f4:	str	x23, [x19, #288]
  4336f8:	b	432e68 <ferror@plt+0x304f8>
  4336fc:	ldr	w3, [x19, #360]
  433700:	ldr	w1, [x19, #364]
  433704:	cmp	w3, w1
  433708:	b.ge	433660 <ferror@plt+0x30cf0>  // b.tcont
  43370c:	ldr	x1, [x19, #352]
  433710:	add	x1, x1, w3, sxtw #4
  433714:	add	w3, w3, #0x1
  433718:	str	w3, [x19, #360]
  43371c:	ldr	x3, [x4, #8]
  433720:	str	x3, [x1, #8]
  433724:	str	x1, [x0]
  433728:	mov	x0, x1
  43372c:	ldr	x4, [x4]
  433730:	b	4336b4 <ferror@plt+0x30d44>
  433734:	ldr	x3, [x0]
  433738:	cmp	x3, x2
  43373c:	b.eq	4336bc <ferror@plt+0x30d4c>  // b.none
  433740:	cmp	x3, x20
  433744:	b.ne	433750 <ferror@plt+0x30de0>  // b.any
  433748:	cmp	x0, x1
  43374c:	b.ne	4336bc <ferror@plt+0x30d4c>  // b.any
  433750:	ldr	x0, [x0, #8]
  433754:	cbnz	x0, 433734 <ferror@plt+0x30dc4>
  433758:	ldr	x0, [x5, #8]
  43375c:	mov	w22, #0x1                   	// #1
  433760:	ldr	x23, [x19, #288]
  433764:	str	x0, [x19, #288]
  433768:	b	4336bc <ferror@plt+0x30d4c>
  43376c:	mov	w22, #0x0                   	// #0
  433770:	ldr	w0, [x2]
  433774:	cmp	w0, #0x23
  433778:	b.eq	4337a4 <ferror@plt+0x30e34>  // b.none
  43377c:	ldr	w1, [x20]
  433780:	cmp	w0, w1
  433784:	b.eq	4337a4 <ferror@plt+0x30e34>  // b.none
  433788:	cmp	w0, #0x24
  43378c:	b.ne	43379c <ferror@plt+0x30e2c>  // b.any
  433790:	ldr	x2, [x2, #8]
  433794:	b	433590 <ferror@plt+0x30c20>
  433798:	mov	w22, #0x0                   	// #0
  43379c:	mov	x2, #0x0                   	// #0
  4337a0:	b	433590 <ferror@plt+0x30c20>
  4337a4:	mov	x20, x2
  4337a8:	b	43379c <ferror@plt+0x30e2c>
  4337ac:	ldr	x0, [x20, #8]
  4337b0:	tbnz	w21, #2, 4337c8 <ferror@plt+0x30e58>
  4337b4:	ldrsw	x2, [x0, #8]
  4337b8:	ldr	x1, [x0]
  4337bc:	mov	x0, x19
  4337c0:	bl	4327c4 <ferror@plt+0x2fe54>
  4337c4:	b	432e70 <ferror@plt+0x30500>
  4337c8:	ldrsw	x2, [x0, #24]
  4337cc:	ldr	x1, [x0, #16]
  4337d0:	mov	x0, x19
  4337d4:	bl	4327c4 <ferror@plt+0x2fe54>
  4337d8:	b	432e70 <ferror@plt+0x30500>
  4337dc:	ldr	x2, [x20, #8]
  4337e0:	mov	w1, w21
  4337e4:	mov	x0, x19
  4337e8:	bl	434658 <ferror@plt+0x31ce8>
  4337ec:	b	432e70 <ferror@plt+0x30500>
  4337f0:	and	w22, w21, #0x20
  4337f4:	tbz	w21, #5, 43380c <ferror@plt+0x30e9c>
  4337f8:	ldr	x3, [x19, #296]
  4337fc:	add	x2, x20, #0x10
  433800:	and	w1, w21, #0xffffff9f
  433804:	mov	x0, x19
  433808:	bl	4348ac <ferror@plt+0x31f3c>
  43380c:	ldr	x2, [x20, #8]
  433810:	cbz	x2, 433884 <ferror@plt+0x30f14>
  433814:	and	w1, w21, #0xffffff9f
  433818:	cbz	w22, 433828 <ferror@plt+0x30eb8>
  43381c:	mov	x0, x19
  433820:	bl	434658 <ferror@plt+0x31ce8>
  433824:	b	432e70 <ferror@plt+0x30500>
  433828:	tbnz	w21, #6, 43386c <ferror@plt+0x30efc>
  43382c:	ldr	x0, [x19, #296]
  433830:	stp	x0, x20, [sp, #96]
  433834:	add	x0, sp, #0x60
  433838:	str	x0, [x19, #296]
  43383c:	ldr	x0, [x19, #288]
  433840:	str	wzr, [sp, #112]
  433844:	str	x0, [sp, #120]
  433848:	mov	x0, x19
  43384c:	bl	434658 <ferror@plt+0x31ce8>
  433850:	ldr	x0, [sp, #96]
  433854:	str	x0, [x19, #296]
  433858:	ldr	w0, [sp, #112]
  43385c:	cbnz	w0, 432e70 <ferror@plt+0x30500>
  433860:	mov	x0, x19
  433864:	mov	w1, #0x20                  	// #32
  433868:	bl	432780 <ferror@plt+0x2fe10>
  43386c:	ldr	x3, [x19, #296]
  433870:	add	x2, x20, #0x10
  433874:	and	w1, w21, #0xffffff9f
  433878:	mov	x0, x19
  43387c:	bl	4348ac <ferror@plt+0x31f3c>
  433880:	b	432e70 <ferror@plt+0x30500>
  433884:	cbnz	w22, 432e70 <ferror@plt+0x30500>
  433888:	b	43386c <ferror@plt+0x30efc>
  43388c:	ldp	x0, x23, [x19, #288]
  433890:	mov	w22, #0x1                   	// #1
  433894:	mov	w6, w22
  433898:	str	x0, [sp, #120]
  43389c:	add	x4, sp, #0x60
  4338a0:	stp	x23, x20, [sp, #96]
  4338a4:	str	wzr, [sp, #112]
  4338a8:	mov	x0, x23
  4338ac:	str	x4, [x19, #296]
  4338b0:	cbz	x0, 4338c8 <ferror@plt+0x30f58>
  4338b4:	ldr	x1, [x0, #8]
  4338b8:	ldr	w1, [x1]
  4338bc:	sub	w1, w1, #0x19
  4338c0:	cmp	w1, #0x2
  4338c4:	b.ls	433908 <ferror@plt+0x30f98>  // b.plast
  4338c8:	ldr	x2, [x20, #16]
  4338cc:	mov	x0, x19
  4338d0:	mov	w1, w21
  4338d4:	bl	434658 <ferror@plt+0x31ce8>
  4338d8:	str	x23, [x19, #296]
  4338dc:	ldr	w0, [sp, #112]
  4338e0:	cbnz	w0, 432e70 <ferror@plt+0x30500>
  4338e4:	add	x23, sp, #0x68
  4338e8:	cmp	w22, #0x1
  4338ec:	b.ne	433958 <ferror@plt+0x30fe8>  // b.any
  4338f0:	ldr	x3, [x19, #296]
  4338f4:	add	x2, x20, #0x8
  4338f8:	mov	w1, w21
  4338fc:	mov	x0, x19
  433900:	bl	434b60 <ferror@plt+0x321f0>
  433904:	b	432e70 <ferror@plt+0x30500>
  433908:	ldr	w1, [x0, #16]
  43390c:	cbnz	w1, 433950 <ferror@plt+0x30fe0>
  433910:	cmp	w22, #0x3
  433914:	b.ls	433924 <ferror@plt+0x30fb4>  // b.plast
  433918:	mov	w0, #0x1                   	// #1
  43391c:	str	w0, [x19, #304]
  433920:	b	432e70 <ferror@plt+0x30500>
  433924:	ubfiz	x5, x22, #5, #32
  433928:	add	w22, w22, #0x1
  43392c:	add	x1, x4, x5
  433930:	ldp	x2, x3, [x0]
  433934:	stp	x2, x3, [x1]
  433938:	ldp	x2, x3, [x0, #16]
  43393c:	stp	x2, x3, [x1, #16]
  433940:	ldr	x2, [x19, #296]
  433944:	str	x2, [x4, x5]
  433948:	str	x1, [x19, #296]
  43394c:	str	w6, [x0, #16]
  433950:	ldr	x0, [x0]
  433954:	b	4338b0 <ferror@plt+0x30f40>
  433958:	sub	w22, w22, #0x1
  43395c:	mov	w1, w21
  433960:	ubfiz	x0, x22, #5, #32
  433964:	ldr	x2, [x23, x0]
  433968:	mov	x0, x19
  43396c:	bl	4346e4 <ferror@plt+0x31d74>
  433970:	b	4338e8 <ferror@plt+0x30f78>
  433974:	ldr	x2, [x20, #16]
  433978:	mov	w1, w21
  43397c:	ldr	x0, [x19, #296]
  433980:	stp	x0, x20, [sp, #96]
  433984:	add	x0, sp, #0x60
  433988:	str	x0, [x19, #296]
  43398c:	ldr	x0, [x19, #288]
  433990:	str	wzr, [sp, #112]
  433994:	str	x0, [sp, #120]
  433998:	mov	x0, x19
  43399c:	bl	434658 <ferror@plt+0x31ce8>
  4339a0:	ldr	w0, [sp, #112]
  4339a4:	cbnz	w0, 4339b8 <ferror@plt+0x31048>
  4339a8:	mov	x2, x20
  4339ac:	mov	w1, w21
  4339b0:	mov	x0, x19
  4339b4:	bl	4346e4 <ferror@plt+0x31d74>
  4339b8:	ldr	x0, [sp, #96]
  4339bc:	str	x0, [x19, #296]
  4339c0:	b	432e70 <ferror@plt+0x30500>
  4339c4:	ldrsh	w0, [x20, #18]
  4339c8:	cbz	w0, 4339dc <ferror@plt+0x3106c>
  4339cc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4339d0:	mov	x0, x19
  4339d4:	add	x1, x1, #0x816
  4339d8:	bl	432838 <ferror@plt+0x2fec8>
  4339dc:	ldr	x2, [x20, #8]
  4339e0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x1b198>
  4339e4:	add	x0, x0, #0xa88
  4339e8:	add	x0, x0, #0x100
  4339ec:	ldr	x1, [x2, #8]
  4339f0:	cmp	x1, x0
  4339f4:	b.eq	433a10 <ferror@plt+0x310a0>  // b.none
  4339f8:	mov	w1, w21
  4339fc:	mov	x0, x19
  433a00:	bl	434658 <ferror@plt+0x31ce8>
  433a04:	mov	x0, x19
  433a08:	mov	w1, #0x20                  	// #32
  433a0c:	bl	432780 <ferror@plt+0x2fe10>
  433a10:	ldrsh	w0, [x20, #16]
  433a14:	cbz	w0, 433a2c <ferror@plt+0x310bc>
  433a18:	mov	x0, x19
  433a1c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433a20:	add	x1, x1, #0x81c
  433a24:	bl	432838 <ferror@plt+0x2fec8>
  433a28:	b	432e70 <ferror@plt+0x30500>
  433a2c:	mov	x0, x19
  433a30:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433a34:	add	x1, x1, #0x823
  433a38:	bl	432838 <ferror@plt+0x2fec8>
  433a3c:	b	432e70 <ferror@plt+0x30500>
  433a40:	ldr	x2, [x20, #8]
  433a44:	cbz	x2, 433a54 <ferror@plt+0x310e4>
  433a48:	mov	w1, w21
  433a4c:	mov	x0, x19
  433a50:	bl	434658 <ferror@plt+0x31ce8>
  433a54:	ldr	x0, [x20, #16]
  433a58:	cbz	x0, 432e70 <ferror@plt+0x30500>
  433a5c:	ldr	x0, [x19, #256]
  433a60:	cmp	x0, #0xfd
  433a64:	b.ls	433a70 <ferror@plt+0x31100>  // b.plast
  433a68:	mov	x0, x19
  433a6c:	bl	432744 <ferror@plt+0x2fdd4>
  433a70:	mov	x0, x19
  433a74:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x10198>
  433a78:	add	x1, x1, #0x8c5
  433a7c:	bl	432838 <ferror@plt+0x2fec8>
  433a80:	ldr	x2, [x20, #16]
  433a84:	mov	x0, x19
  433a88:	mov	w1, w21
  433a8c:	ldr	x22, [x19, #256]
  433a90:	ldr	x23, [x19, #320]
  433a94:	bl	434658 <ferror@plt+0x31ce8>
  433a98:	ldr	x0, [x19, #320]
  433a9c:	cmp	x0, x23
  433aa0:	b.ne	432e70 <ferror@plt+0x30500>  // b.any
  433aa4:	ldr	x0, [x19, #256]
  433aa8:	cmp	x0, x22
  433aac:	b.ne	432e70 <ferror@plt+0x30500>  // b.any
  433ab0:	sub	x0, x0, #0x2
  433ab4:	str	x0, [x19, #256]
  433ab8:	b	432e70 <ferror@plt+0x30500>
  433abc:	ldp	x2, x20, [x20, #8]
  433ac0:	cbz	x2, 433ad0 <ferror@plt+0x31160>
  433ac4:	mov	w1, w21
  433ac8:	mov	x0, x19
  433acc:	bl	434658 <ferror@plt+0x31ce8>
  433ad0:	mov	x0, x19
  433ad4:	mov	w1, #0x7b                  	// #123
  433ad8:	bl	432780 <ferror@plt+0x2fe10>
  433adc:	mov	x2, x20
  433ae0:	mov	w1, w21
  433ae4:	mov	x0, x19
  433ae8:	bl	434658 <ferror@plt+0x31ce8>
  433aec:	mov	x0, x19
  433af0:	mov	w1, #0x7d                  	// #125
  433af4:	bl	432780 <ferror@plt+0x2fe10>
  433af8:	b	432e70 <ferror@plt+0x30500>
  433afc:	ldr	x21, [x20, #8]
  433b00:	mov	x0, x19
  433b04:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  433b08:	add	x1, x1, #0x712
  433b0c:	ldr	w20, [x21, #16]
  433b10:	bl	432838 <ferror@plt+0x2fec8>
  433b14:	ldr	x0, [x21, #8]
  433b18:	ldrb	w0, [x0]
  433b1c:	sub	w0, w0, #0x61
  433b20:	and	w0, w0, #0xff
  433b24:	cmp	w0, #0x19
  433b28:	b.hi	433b38 <ferror@plt+0x311c8>  // b.pmore
  433b2c:	mov	x0, x19
  433b30:	mov	w1, #0x20                  	// #32
  433b34:	bl	432780 <ferror@plt+0x2fe10>
  433b38:	ldr	x1, [x21, #8]
  433b3c:	add	x0, x1, w20, sxtw
  433b40:	ldurb	w0, [x0, #-1]
  433b44:	cmp	w0, #0x20
  433b48:	cset	w0, eq  // eq = none
  433b4c:	sub	w20, w20, w0
  433b50:	mov	x0, x19
  433b54:	sxtw	x2, w20
  433b58:	bl	4327c4 <ferror@plt+0x2fe54>
  433b5c:	b	432e70 <ferror@plt+0x30500>
  433b60:	mov	x0, x19
  433b64:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433b68:	add	x1, x1, #0x82a
  433b6c:	bl	432838 <ferror@plt+0x2fec8>
  433b70:	ldr	x2, [x20, #16]
  433b74:	mov	w1, w21
  433b78:	mov	x0, x19
  433b7c:	bl	434658 <ferror@plt+0x31ce8>
  433b80:	b	432e70 <ferror@plt+0x30500>
  433b84:	mov	x0, x19
  433b88:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433b8c:	add	x1, x1, #0x82a
  433b90:	bl	432838 <ferror@plt+0x2fec8>
  433b94:	ldr	x0, [x19, #368]
  433b98:	cbz	x0, 433bac <ferror@plt+0x3123c>
  433b9c:	ldr	x1, [x19, #288]
  433ba0:	stp	x1, x0, [sp, #96]
  433ba4:	add	x1, sp, #0x60
  433ba8:	str	x1, [x19, #288]
  433bac:	ldr	x2, [x20, #8]
  433bb0:	ldr	w0, [x2]
  433bb4:	cmp	w0, #0x4
  433bb8:	b.eq	433bdc <ferror@plt+0x3126c>  // b.none
  433bbc:	mov	x0, x19
  433bc0:	mov	w1, w21
  433bc4:	bl	434658 <ferror@plt+0x31ce8>
  433bc8:	ldr	x0, [x19, #368]
  433bcc:	cbz	x0, 432e70 <ferror@plt+0x30500>
  433bd0:	ldr	x0, [sp, #96]
  433bd4:	str	x0, [x19, #288]
  433bd8:	b	432e70 <ferror@plt+0x30500>
  433bdc:	ldr	x2, [x2, #8]
  433be0:	mov	x0, x19
  433be4:	mov	w1, w21
  433be8:	bl	434658 <ferror@plt+0x31ce8>
  433bec:	ldr	x0, [x19, #368]
  433bf0:	cbz	x0, 433bfc <ferror@plt+0x3128c>
  433bf4:	ldr	x0, [sp, #96]
  433bf8:	str	x0, [x19, #288]
  433bfc:	ldrb	w0, [x19, #264]
  433c00:	cmp	w0, #0x3c
  433c04:	b.ne	433c14 <ferror@plt+0x312a4>  // b.any
  433c08:	mov	x0, x19
  433c0c:	mov	w1, #0x20                  	// #32
  433c10:	bl	432780 <ferror@plt+0x2fe10>
  433c14:	mov	x0, x19
  433c18:	mov	w1, #0x3c                  	// #60
  433c1c:	bl	432780 <ferror@plt+0x2fe10>
  433c20:	ldr	x0, [x20, #8]
  433c24:	mov	w1, w21
  433c28:	ldr	x2, [x0, #16]
  433c2c:	mov	x0, x19
  433c30:	bl	434658 <ferror@plt+0x31ce8>
  433c34:	ldrb	w0, [x19, #264]
  433c38:	cmp	w0, #0x3e
  433c3c:	b.ne	433c4c <ferror@plt+0x312dc>  // b.any
  433c40:	mov	x0, x19
  433c44:	mov	w1, #0x20                  	// #32
  433c48:	bl	432780 <ferror@plt+0x2fe10>
  433c4c:	mov	x0, x19
  433c50:	mov	w1, #0x3e                  	// #62
  433c54:	bl	432780 <ferror@plt+0x2fe10>
  433c58:	b	432e70 <ferror@plt+0x30500>
  433c5c:	ldr	x2, [x20, #8]
  433c60:	mov	w1, w21
  433c64:	mov	x0, x19
  433c68:	bl	434c48 <ferror@plt+0x322d8>
  433c6c:	b	432e70 <ferror@plt+0x30500>
  433c70:	ldp	x23, x20, [x20, #8]
  433c74:	ldr	w0, [x23]
  433c78:	cmp	w0, #0x32
  433c7c:	b.ne	433d2c <ferror@plt+0x313bc>  // b.any
  433c80:	ldr	x0, [x23, #8]
  433c84:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  433c88:	add	x1, x1, #0xccd
  433c8c:	ldr	x22, [x0]
  433c90:	mov	x0, x22
  433c94:	bl	4026d0 <strcmp@plt>
  433c98:	cbnz	w0, 433cc8 <ferror@plt+0x31358>
  433c9c:	ldr	w0, [x20]
  433ca0:	cmp	w0, #0x3
  433ca4:	b.ne	433cc8 <ferror@plt+0x31358>  // b.any
  433ca8:	ldr	x0, [x20, #8]
  433cac:	ldr	w1, [x0]
  433cb0:	cmp	w1, #0x1
  433cb4:	b.ne	433cc8 <ferror@plt+0x31358>  // b.any
  433cb8:	ldr	x1, [x20, #16]
  433cbc:	ldr	w1, [x1]
  433cc0:	cmp	w1, #0x29
  433cc4:	csel	x20, x20, x0, ne  // ne = any
  433cc8:	ldr	w0, [x20]
  433ccc:	cmp	w0, #0x39
  433cd0:	b.ne	433cf8 <ferror@plt+0x31388>  // b.any
  433cd4:	ldr	x2, [x20, #8]
  433cd8:	mov	w1, w21
  433cdc:	mov	x0, x19
  433ce0:	bl	434c68 <ferror@plt+0x322f8>
  433ce4:	mov	x2, x23
  433ce8:	mov	w1, w21
  433cec:	mov	x0, x19
  433cf0:	bl	434c48 <ferror@plt+0x322d8>
  433cf4:	b	432e70 <ferror@plt+0x30500>
  433cf8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433cfc:	mov	x0, x22
  433d00:	add	x1, x1, #0x834
  433d04:	bl	4026d0 <strcmp@plt>
  433d08:	cbnz	w0, 433d60 <ferror@plt+0x313f0>
  433d0c:	mov	x1, x20
  433d10:	mov	x0, x19
  433d14:	bl	432d80 <ferror@plt+0x30410>
  433d18:	bl	432808 <ferror@plt+0x2fe98>
  433d1c:	mov	w1, w0
  433d20:	mov	x0, x19
  433d24:	bl	43286c <ferror@plt+0x2fefc>
  433d28:	b	432e70 <ferror@plt+0x30500>
  433d2c:	cmp	w0, #0x34
  433d30:	b.eq	433dcc <ferror@plt+0x3145c>  // b.none
  433d34:	mov	x22, #0x0                   	// #0
  433d38:	mov	x2, x23
  433d3c:	mov	w1, w21
  433d40:	mov	x0, x19
  433d44:	bl	434c48 <ferror@plt+0x322d8>
  433d48:	cbnz	x22, 433df8 <ferror@plt+0x31488>
  433d4c:	mov	x2, x20
  433d50:	mov	w1, w21
  433d54:	mov	x0, x19
  433d58:	bl	434c68 <ferror@plt+0x322f8>
  433d5c:	b	432e70 <ferror@plt+0x30500>
  433d60:	mov	x0, x22
  433d64:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433d68:	add	x1, x1, #0x837
  433d6c:	bl	4026d0 <strcmp@plt>
  433d70:	mov	w3, w0
  433d74:	cbnz	w0, 433d38 <ferror@plt+0x313c8>
  433d78:	ldr	w0, [x20]
  433d7c:	cmp	w0, #0x2f
  433d80:	b.ne	433db4 <ferror@plt+0x31444>  // b.any
  433d84:	ldr	x0, [x20, #8]
  433d88:	cbz	x0, 433db4 <ferror@plt+0x31444>
  433d8c:	ldr	w1, [x0]
  433d90:	cmp	w1, #0x4b
  433d94:	b.ne	433dc4 <ferror@plt+0x31454>  // b.any
  433d98:	ldr	x1, [x0, #8]
  433d9c:	mov	x0, x19
  433da0:	bl	432d80 <ferror@plt+0x30410>
  433da4:	bl	432808 <ferror@plt+0x2fe98>
  433da8:	add	w3, w3, w0
  433dac:	ldr	x20, [x20, #16]
  433db0:	cbnz	x20, 433d78 <ferror@plt+0x31408>
  433db4:	mov	w1, w3
  433db8:	mov	x0, x19
  433dbc:	bl	43286c <ferror@plt+0x2fefc>
  433dc0:	b	432e70 <ferror@plt+0x30500>
  433dc4:	add	w3, w3, #0x1
  433dc8:	b	433dac <ferror@plt+0x3143c>
  433dcc:	mov	x0, x19
  433dd0:	mov	w1, #0x28                  	// #40
  433dd4:	bl	432780 <ferror@plt+0x2fe10>
  433dd8:	ldr	x2, [x23, #8]
  433ddc:	mov	w1, w21
  433de0:	mov	x0, x19
  433de4:	bl	434658 <ferror@plt+0x31ce8>
  433de8:	mov	x0, x19
  433dec:	mov	w1, #0x29                  	// #41
  433df0:	bl	432780 <ferror@plt+0x2fe10>
  433df4:	b	433d4c <ferror@plt+0x313dc>
  433df8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433dfc:	mov	x0, x22
  433e00:	add	x1, x1, #0x83a
  433e04:	bl	4026d0 <strcmp@plt>
  433e08:	cbnz	w0, 433e20 <ferror@plt+0x314b0>
  433e0c:	mov	x2, x20
  433e10:	mov	w1, w21
  433e14:	mov	x0, x19
  433e18:	bl	434658 <ferror@plt+0x31ce8>
  433e1c:	b	432e70 <ferror@plt+0x30500>
  433e20:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433e24:	mov	x0, x22
  433e28:	add	x1, x1, #0xc0d
  433e2c:	bl	4026d0 <strcmp@plt>
  433e30:	cbnz	w0, 433d4c <ferror@plt+0x313dc>
  433e34:	mov	x0, x19
  433e38:	mov	w1, #0x28                  	// #40
  433e3c:	bl	432780 <ferror@plt+0x2fe10>
  433e40:	mov	x2, x20
  433e44:	mov	w1, w21
  433e48:	mov	x0, x19
  433e4c:	bl	434658 <ferror@plt+0x31ce8>
  433e50:	mov	x0, x19
  433e54:	mov	w1, #0x29                  	// #41
  433e58:	bl	432780 <ferror@plt+0x2fe10>
  433e5c:	b	432e70 <ferror@plt+0x30500>
  433e60:	ldr	x0, [x20, #16]
  433e64:	ldr	w0, [x0]
  433e68:	cmp	w0, #0x39
  433e6c:	b.ne	432e68 <ferror@plt+0x304f8>  // b.any
  433e70:	ldr	x2, [x20, #8]
  433e74:	ldr	x0, [x2, #8]
  433e78:	bl	432b48 <ferror@plt+0x301d8>
  433e7c:	cbz	w0, 433ee0 <ferror@plt+0x31570>
  433e80:	mov	w1, w21
  433e84:	mov	x0, x19
  433e88:	bl	434c48 <ferror@plt+0x322d8>
  433e8c:	mov	x0, x19
  433e90:	mov	w1, #0x3c                  	// #60
  433e94:	bl	432780 <ferror@plt+0x2fe10>
  433e98:	ldr	x0, [x20, #16]
  433e9c:	mov	w1, w21
  433ea0:	ldr	x2, [x0, #8]
  433ea4:	mov	x0, x19
  433ea8:	bl	434658 <ferror@plt+0x31ce8>
  433eac:	mov	x0, x19
  433eb0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  433eb4:	add	x1, x1, #0x83d
  433eb8:	bl	432838 <ferror@plt+0x2fec8>
  433ebc:	ldr	x0, [x20, #16]
  433ec0:	mov	w1, w21
  433ec4:	ldr	x2, [x0, #16]
  433ec8:	mov	x0, x19
  433ecc:	bl	434658 <ferror@plt+0x31ce8>
  433ed0:	mov	x0, x19
  433ed4:	mov	w1, #0x29                  	// #41
  433ed8:	bl	432780 <ferror@plt+0x2fe10>
  433edc:	b	432e70 <ferror@plt+0x30500>
  433ee0:	mov	x2, x20
  433ee4:	mov	w1, w21
  433ee8:	mov	x0, x19
  433eec:	bl	434cf4 <ferror@plt+0x32384>
  433ef0:	cbnz	w0, 432e70 <ferror@plt+0x30500>
  433ef4:	ldr	x0, [x20, #8]
  433ef8:	ldr	w1, [x0]
  433efc:	cmp	w1, #0x32
  433f00:	b.ne	433f30 <ferror@plt+0x315c0>  // b.any
  433f04:	ldr	x0, [x0, #8]
  433f08:	ldr	w1, [x0, #16]
  433f0c:	cmp	w1, #0x1
  433f10:	b.ne	433f30 <ferror@plt+0x315c0>  // b.any
  433f14:	ldr	x0, [x0, #8]
  433f18:	ldrb	w0, [x0]
  433f1c:	cmp	w0, #0x3e
  433f20:	b.ne	433f30 <ferror@plt+0x315c0>  // b.any
  433f24:	mov	x0, x19
  433f28:	mov	w1, #0x28                  	// #40
  433f2c:	bl	432780 <ferror@plt+0x2fe10>
  433f30:	ldr	x0, [x20, #8]
  433f34:	adrp	x22, 456000 <_obstack_memory_used@@Base+0x1c198>
  433f38:	add	x22, x22, #0x840
  433f3c:	mov	x1, x22
  433f40:	ldr	x0, [x0, #8]
  433f44:	ldr	x0, [x0]
  433f48:	bl	4026d0 <strcmp@plt>
  433f4c:	ldr	x1, [x20, #16]
  433f50:	ldr	x2, [x1, #8]
  433f54:	cbnz	w0, 433f80 <ferror@plt+0x31610>
  433f58:	ldr	w0, [x2]
  433f5c:	cmp	w0, #0x3
  433f60:	b.ne	433f80 <ferror@plt+0x31610>  // b.any
  433f64:	ldr	x0, [x2, #16]
  433f68:	ldr	w0, [x0]
  433f6c:	cmp	w0, #0x29
  433f70:	b.eq	433f7c <ferror@plt+0x3160c>  // b.none
  433f74:	mov	w0, #0x1                   	// #1
  433f78:	str	w0, [x19, #304]
  433f7c:	ldr	x2, [x2, #8]
  433f80:	mov	w1, w21
  433f84:	mov	x0, x19
  433f88:	bl	434c68 <ferror@plt+0x322f8>
  433f8c:	ldr	x23, [x20, #8]
  433f90:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  433f94:	add	x1, x1, #0x53e
  433f98:	ldr	x0, [x23, #8]
  433f9c:	ldr	x24, [x0]
  433fa0:	mov	x0, x24
  433fa4:	bl	4026d0 <strcmp@plt>
  433fa8:	cbnz	w0, 434018 <ferror@plt+0x316a8>
  433fac:	mov	x0, x19
  433fb0:	mov	w1, #0x5b                  	// #91
  433fb4:	bl	432780 <ferror@plt+0x2fe10>
  433fb8:	ldr	x0, [x20, #16]
  433fbc:	mov	w1, w21
  433fc0:	ldr	x2, [x0, #16]
  433fc4:	mov	x0, x19
  433fc8:	bl	434658 <ferror@plt+0x31ce8>
  433fcc:	mov	x0, x19
  433fd0:	mov	w1, #0x5d                  	// #93
  433fd4:	bl	432780 <ferror@plt+0x2fe10>
  433fd8:	ldr	x0, [x20, #8]
  433fdc:	ldr	w1, [x0]
  433fe0:	cmp	w1, #0x32
  433fe4:	b.ne	432e70 <ferror@plt+0x30500>  // b.any
  433fe8:	ldr	x0, [x0, #8]
  433fec:	ldr	w1, [x0, #16]
  433ff0:	cmp	w1, #0x1
  433ff4:	b.ne	432e70 <ferror@plt+0x30500>  // b.any
  433ff8:	ldr	x0, [x0, #8]
  433ffc:	ldrb	w0, [x0]
  434000:	cmp	w0, #0x3e
  434004:	b.ne	432e70 <ferror@plt+0x30500>  // b.any
  434008:	mov	x0, x19
  43400c:	mov	w1, #0x29                  	// #41
  434010:	bl	432780 <ferror@plt+0x2fe10>
  434014:	b	432e70 <ferror@plt+0x30500>
  434018:	mov	x1, x22
  43401c:	mov	x0, x24
  434020:	bl	4026d0 <strcmp@plt>
  434024:	cbz	w0, 434038 <ferror@plt+0x316c8>
  434028:	mov	x2, x23
  43402c:	mov	w1, w21
  434030:	mov	x0, x19
  434034:	bl	434c48 <ferror@plt+0x322d8>
  434038:	ldr	x0, [x20, #16]
  43403c:	mov	w1, w21
  434040:	ldr	x2, [x0, #16]
  434044:	mov	x0, x19
  434048:	bl	434c68 <ferror@plt+0x322f8>
  43404c:	b	433fd8 <ferror@plt+0x31668>
  434050:	mov	w0, #0x1                   	// #1
  434054:	str	w0, [x19, #304]
  434058:	b	432e70 <ferror@plt+0x30500>
  43405c:	ldr	x0, [x20, #16]
  434060:	ldr	w1, [x0]
  434064:	cmp	w1, #0x3b
  434068:	b.ne	432e68 <ferror@plt+0x304f8>  // b.any
  43406c:	ldr	x0, [x0, #16]
  434070:	ldr	w0, [x0]
  434074:	cmp	w0, #0x3c
  434078:	b.ne	432e68 <ferror@plt+0x304f8>  // b.any
  43407c:	mov	x2, x20
  434080:	mov	w1, w21
  434084:	mov	x0, x19
  434088:	bl	434cf4 <ferror@plt+0x32384>
  43408c:	cbnz	w0, 432e70 <ferror@plt+0x30500>
  434090:	ldp	x24, x0, [x20, #8]
  434094:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434098:	add	x1, x1, #0x843
  43409c:	ldp	x22, x0, [x0, #8]
  4340a0:	ldp	x23, x20, [x0, #8]
  4340a4:	ldr	x0, [x24, #8]
  4340a8:	ldr	x0, [x0]
  4340ac:	bl	4026d0 <strcmp@plt>
  4340b0:	cbnz	w0, 434108 <ferror@plt+0x31798>
  4340b4:	mov	x2, x22
  4340b8:	mov	w1, w21
  4340bc:	mov	x0, x19
  4340c0:	bl	434c68 <ferror@plt+0x322f8>
  4340c4:	mov	x2, x24
  4340c8:	mov	w1, w21
  4340cc:	mov	x0, x19
  4340d0:	bl	434c48 <ferror@plt+0x322d8>
  4340d4:	mov	x2, x23
  4340d8:	mov	w1, w21
  4340dc:	mov	x0, x19
  4340e0:	bl	434c68 <ferror@plt+0x322f8>
  4340e4:	mov	x0, x19
  4340e8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4340ec:	add	x1, x1, #0x846
  4340f0:	bl	432838 <ferror@plt+0x2fec8>
  4340f4:	mov	x2, x20
  4340f8:	mov	w1, w21
  4340fc:	mov	x0, x19
  434100:	bl	434c68 <ferror@plt+0x322f8>
  434104:	b	432e70 <ferror@plt+0x30500>
  434108:	mov	x0, x19
  43410c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434110:	add	x1, x1, #0x84a
  434114:	bl	432838 <ferror@plt+0x2fec8>
  434118:	ldr	x0, [x22, #8]
  43411c:	cbz	x0, 43413c <ferror@plt+0x317cc>
  434120:	mov	x2, x22
  434124:	mov	w1, w21
  434128:	mov	x0, x19
  43412c:	bl	434c68 <ferror@plt+0x322f8>
  434130:	mov	x0, x19
  434134:	mov	w1, #0x20                  	// #32
  434138:	bl	432780 <ferror@plt+0x2fe10>
  43413c:	mov	x2, x23
  434140:	mov	w1, w21
  434144:	mov	x0, x19
  434148:	bl	434658 <ferror@plt+0x31ce8>
  43414c:	cbz	x20, 432e70 <ferror@plt+0x30500>
  434150:	mov	x2, x20
  434154:	mov	w1, w21
  434158:	mov	x0, x19
  43415c:	bl	434c68 <ferror@plt+0x322f8>
  434160:	b	432e70 <ferror@plt+0x30500>
  434164:	ldr	x1, [x20, #8]
  434168:	ldr	w2, [x1]
  43416c:	cmp	w2, #0x27
  434170:	b.ne	43431c <ferror@plt+0x319ac>  // b.any
  434174:	ldr	x1, [x1, #8]
  434178:	ldr	w22, [x1, #28]
  43417c:	cmp	w22, #0x6
  434180:	b.hi	4341dc <ferror@plt+0x3186c>  // b.pmore
  434184:	cbz	w22, 4341e4 <ferror@plt+0x31874>
  434188:	ldr	x1, [x20, #16]
  43418c:	ldr	w1, [x1]
  434190:	cbnz	w1, 4341e4 <ferror@plt+0x31874>
  434194:	cmp	w0, #0x3e
  434198:	b.ne	4341a8 <ferror@plt+0x31838>  // b.any
  43419c:	mov	x0, x19
  4341a0:	mov	w1, #0x2d                  	// #45
  4341a4:	bl	432780 <ferror@plt+0x2fe10>
  4341a8:	ldr	x2, [x20, #16]
  4341ac:	mov	w1, w21
  4341b0:	mov	x0, x19
  4341b4:	sub	w22, w22, #0x2
  4341b8:	bl	434658 <ferror@plt+0x31ce8>
  4341bc:	cmp	w22, #0x4
  4341c0:	b.hi	432e70 <ferror@plt+0x30500>  // b.pmore
  4341c4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x1b198>
  4341c8:	add	x0, x0, #0x920
  4341cc:	ldrb	w0, [x0, w22, uxtw]
  4341d0:	adr	x1, 4341dc <ferror@plt+0x3186c>
  4341d4:	add	x0, x1, w0, sxtb #2
  4341d8:	br	x0
  4341dc:	cmp	w22, #0x7
  4341e0:	b.eq	4342bc <ferror@plt+0x3194c>  // b.none
  4341e4:	mov	x0, x19
  4341e8:	mov	w1, #0x28                  	// #40
  4341ec:	bl	432780 <ferror@plt+0x2fe10>
  4341f0:	ldr	x2, [x20, #8]
  4341f4:	mov	w1, w21
  4341f8:	mov	x0, x19
  4341fc:	bl	434658 <ferror@plt+0x31ce8>
  434200:	mov	x0, x19
  434204:	mov	w1, #0x29                  	// #41
  434208:	bl	432780 <ferror@plt+0x2fe10>
  43420c:	ldr	w0, [x20]
  434210:	cmp	w0, #0x3e
  434214:	b.ne	434224 <ferror@plt+0x318b4>  // b.any
  434218:	mov	x0, x19
  43421c:	mov	w1, #0x2d                  	// #45
  434220:	bl	432780 <ferror@plt+0x2fe10>
  434224:	cmp	w22, #0x8
  434228:	b.ne	434238 <ferror@plt+0x318c8>  // b.any
  43422c:	mov	x0, x19
  434230:	mov	w1, #0x5b                  	// #91
  434234:	bl	432780 <ferror@plt+0x2fe10>
  434238:	ldr	x2, [x20, #16]
  43423c:	mov	w1, w21
  434240:	mov	x0, x19
  434244:	bl	434658 <ferror@plt+0x31ce8>
  434248:	cmp	w22, #0x8
  43424c:	b.ne	432e70 <ferror@plt+0x30500>  // b.any
  434250:	mov	x0, x19
  434254:	mov	w1, #0x5d                  	// #93
  434258:	bl	432780 <ferror@plt+0x2fe10>
  43425c:	b	432e70 <ferror@plt+0x30500>
  434260:	mov	x0, x19
  434264:	mov	w1, #0x75                  	// #117
  434268:	bl	432780 <ferror@plt+0x2fe10>
  43426c:	b	432e70 <ferror@plt+0x30500>
  434270:	mov	x0, x19
  434274:	mov	w1, #0x6c                  	// #108
  434278:	bl	432780 <ferror@plt+0x2fe10>
  43427c:	b	432e70 <ferror@plt+0x30500>
  434280:	mov	x0, x19
  434284:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x1a198>
  434288:	add	x1, x1, #0x138
  43428c:	bl	432838 <ferror@plt+0x2fec8>
  434290:	b	432e70 <ferror@plt+0x30500>
  434294:	mov	x0, x19
  434298:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x10198>
  43429c:	add	x1, x1, #0xd9e
  4342a0:	bl	432838 <ferror@plt+0x2fec8>
  4342a4:	b	432e70 <ferror@plt+0x30500>
  4342a8:	mov	x0, x19
  4342ac:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4342b0:	add	x1, x1, #0x84f
  4342b4:	bl	432838 <ferror@plt+0x2fec8>
  4342b8:	b	432e70 <ferror@plt+0x30500>
  4342bc:	ldr	x1, [x20, #16]
  4342c0:	ldr	w2, [x1]
  4342c4:	cbnz	w2, 4341e4 <ferror@plt+0x31874>
  4342c8:	ldr	w2, [x1, #16]
  4342cc:	cmp	w2, #0x1
  4342d0:	b.ne	4341e4 <ferror@plt+0x31874>  // b.any
  4342d4:	cmp	w0, #0x3d
  4342d8:	b.ne	4341e4 <ferror@plt+0x31874>  // b.any
  4342dc:	ldr	x0, [x1, #8]
  4342e0:	ldrb	w0, [x0]
  4342e4:	cmp	w0, #0x30
  4342e8:	b.eq	434308 <ferror@plt+0x31998>  // b.none
  4342ec:	cmp	w0, #0x31
  4342f0:	b.ne	4341e4 <ferror@plt+0x31874>  // b.any
  4342f4:	mov	x0, x19
  4342f8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  4342fc:	add	x1, x1, #0x8fb
  434300:	bl	432838 <ferror@plt+0x2fec8>
  434304:	b	432e70 <ferror@plt+0x30500>
  434308:	mov	x0, x19
  43430c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  434310:	add	x1, x1, #0x900
  434314:	bl	432838 <ferror@plt+0x2fec8>
  434318:	b	432e70 <ferror@plt+0x30500>
  43431c:	mov	w22, #0x0                   	// #0
  434320:	b	4341e4 <ferror@plt+0x31874>
  434324:	ldr	w1, [x20, #8]
  434328:	mov	x0, x19
  43432c:	bl	43286c <ferror@plt+0x2fefc>
  434330:	b	432e70 <ferror@plt+0x30500>
  434334:	mov	x0, x19
  434338:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  43433c:	add	x1, x1, #0x853
  434340:	bl	432838 <ferror@plt+0x2fec8>
  434344:	ldr	x2, [x20, #8]
  434348:	mov	w1, w21
  43434c:	mov	x0, x19
  434350:	bl	434658 <ferror@plt+0x31ce8>
  434354:	b	432e70 <ferror@plt+0x30500>
  434358:	ldr	x2, [x20, #8]
  43435c:	mov	w1, w21
  434360:	mov	x0, x19
  434364:	bl	434658 <ferror@plt+0x31ce8>
  434368:	ldr	x2, [x20, #16]
  43436c:	mov	w1, w21
  434370:	mov	x0, x19
  434374:	bl	434658 <ferror@plt+0x31ce8>
  434378:	b	432e70 <ferror@plt+0x30500>
  43437c:	ldrb	w1, [x20, #8]
  434380:	mov	x0, x19
  434384:	bl	432780 <ferror@plt+0x2fe10>
  434388:	b	432e70 <ferror@plt+0x30500>
  43438c:	mov	x0, x19
  434390:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434394:	add	x1, x1, #0x862
  434398:	bl	432838 <ferror@plt+0x2fec8>
  43439c:	ldr	x2, [x20, #8]
  4343a0:	mov	w1, w21
  4343a4:	mov	x0, x19
  4343a8:	bl	434658 <ferror@plt+0x31ce8>
  4343ac:	mov	x0, x19
  4343b0:	mov	w1, #0x29                  	// #41
  4343b4:	bl	432780 <ferror@plt+0x2fe10>
  4343b8:	b	432e70 <ferror@plt+0x30500>
  4343bc:	ldr	x1, [x20, #8]
  4343c0:	mov	x0, x19
  4343c4:	bl	432d80 <ferror@plt+0x30410>
  4343c8:	cbnz	x0, 4343f0 <ferror@plt+0x31a80>
  4343cc:	ldr	x2, [x20, #8]
  4343d0:	mov	w1, w21
  4343d4:	mov	x0, x19
  4343d8:	bl	434c68 <ferror@plt+0x322f8>
  4343dc:	mov	x0, x19
  4343e0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4343e4:	add	x1, x1, #0x93a
  4343e8:	bl	432838 <ferror@plt+0x2fec8>
  4343ec:	b	432e70 <ferror@plt+0x30500>
  4343f0:	bl	432808 <ferror@plt+0x2fe98>
  4343f4:	mov	w23, w0
  4343f8:	sub	w25, w0, #0x1
  4343fc:	ldr	x24, [x20, #8]
  434400:	adrp	x20, 44a000 <_obstack_memory_used@@Base+0x10198>
  434404:	add	x20, x20, #0x8c5
  434408:	cmp	w22, w23
  43440c:	b.ge	432e70 <ferror@plt+0x30500>  // b.tcont
  434410:	str	w22, [x19, #316]
  434414:	mov	x2, x24
  434418:	mov	w1, w21
  43441c:	mov	x0, x19
  434420:	bl	434658 <ferror@plt+0x31ce8>
  434424:	cmp	w25, w22
  434428:	b.le	434438 <ferror@plt+0x31ac8>
  43442c:	mov	x1, x20
  434430:	mov	x0, x19
  434434:	bl	432838 <ferror@plt+0x2fec8>
  434438:	add	w22, w22, #0x1
  43443c:	b	434408 <ferror@plt+0x31a98>
  434440:	ldr	x20, [x20, #8]
  434444:	cbnz	x20, 43445c <ferror@plt+0x31aec>
  434448:	mov	x0, x19
  43444c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434450:	add	x1, x1, #0x86d
  434454:	bl	432838 <ferror@plt+0x2fec8>
  434458:	b	432e70 <ferror@plt+0x30500>
  43445c:	mov	x0, x19
  434460:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434464:	add	x1, x1, #0x872
  434468:	bl	432838 <ferror@plt+0x2fec8>
  43446c:	mov	w1, w20
  434470:	mov	x0, x19
  434474:	bl	43286c <ferror@plt+0x2fefc>
  434478:	mov	x0, x19
  43447c:	mov	w1, #0x7d                  	// #125
  434480:	bl	432780 <ferror@plt+0x2fe10>
  434484:	b	432e70 <ferror@plt+0x30500>
  434488:	mov	x0, x19
  43448c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434490:	add	x1, x1, #0x879
  434494:	bl	432838 <ferror@plt+0x2fec8>
  434498:	ldr	x2, [x20, #8]
  43449c:	mov	w1, w21
  4344a0:	mov	x0, x19
  4344a4:	bl	434658 <ferror@plt+0x31ce8>
  4344a8:	b	432e70 <ferror@plt+0x30500>
  4344ac:	mov	x0, x19
  4344b0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4344b4:	add	x1, x1, #0x897
  4344b8:	bl	432838 <ferror@plt+0x2fec8>
  4344bc:	ldr	x2, [x20, #8]
  4344c0:	mov	w1, w21
  4344c4:	mov	x0, x19
  4344c8:	bl	434658 <ferror@plt+0x31ce8>
  4344cc:	b	432e70 <ferror@plt+0x30500>
  4344d0:	mov	x0, x19
  4344d4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4344d8:	add	x1, x1, #0x8b4
  4344dc:	bl	432838 <ferror@plt+0x2fec8>
  4344e0:	ldr	w0, [x19, #312]
  4344e4:	mov	w1, w21
  4344e8:	ldr	x2, [x20, #8]
  4344ec:	add	w0, w0, #0x1
  4344f0:	str	w0, [x19, #312]
  4344f4:	mov	x0, x19
  4344f8:	bl	434658 <ferror@plt+0x31ce8>
  4344fc:	ldr	w0, [x19, #312]
  434500:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434504:	add	x1, x1, #0x8bd
  434508:	sub	w0, w0, #0x1
  43450c:	str	w0, [x19, #312]
  434510:	mov	x0, x19
  434514:	bl	432838 <ferror@plt+0x2fec8>
  434518:	ldr	w1, [x20, #16]
  43451c:	mov	x0, x19
  434520:	add	w1, w1, #0x1
  434524:	bl	43286c <ferror@plt+0x2fefc>
  434528:	mov	x0, x19
  43452c:	mov	w1, #0x7d                  	// #125
  434530:	bl	432780 <ferror@plt+0x2fe10>
  434534:	b	432e70 <ferror@plt+0x30500>
  434538:	mov	x0, x19
  43453c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434540:	add	x1, x1, #0x8c0
  434544:	bl	432838 <ferror@plt+0x2fec8>
  434548:	ldr	x1, [x20, #8]
  43454c:	mov	x0, x19
  434550:	add	w1, w1, #0x1
  434554:	bl	43286c <ferror@plt+0x2fefc>
  434558:	mov	x0, x19
  43455c:	mov	w1, #0x7d                  	// #125
  434560:	bl	432780 <ferror@plt+0x2fe10>
  434564:	b	432e70 <ferror@plt+0x30500>
  434568:	ldr	x2, [x20, #8]
  43456c:	mov	w1, w21
  434570:	mov	x0, x19
  434574:	bl	434658 <ferror@plt+0x31ce8>
  434578:	mov	x0, x19
  43457c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434580:	add	x1, x1, #0x8cf
  434584:	bl	432838 <ferror@plt+0x2fec8>
  434588:	ldr	x2, [x20, #16]
  43458c:	mov	w1, w21
  434590:	mov	x0, x19
  434594:	bl	434658 <ferror@plt+0x31ce8>
  434598:	mov	x0, x19
  43459c:	mov	w1, #0x5d                  	// #93
  4345a0:	bl	432780 <ferror@plt+0x2fe10>
  4345a4:	b	432e70 <ferror@plt+0x30500>
  4345a8:	cmp	w5, #0x2
  4345ac:	b.ne	4345dc <ferror@plt+0x31c6c>  // b.any
  4345b0:	ldr	x22, [x22, #16]
  4345b4:	ldr	w0, [x22]
  4345b8:	cmp	w0, #0x47
  4345bc:	b.ne	4345c8 <ferror@plt+0x31c58>  // b.any
  4345c0:	ldr	x22, [x22, #8]
  4345c4:	cbz	x22, 433098 <ferror@plt+0x30728>
  4345c8:	ubfiz	x0, x23, #5, #32
  4345cc:	add	x2, x2, x0
  4345d0:	ldr	w0, [x22]
  4345d4:	bl	432500 <ferror@plt+0x2fb90>
  4345d8:	cbnz	w0, 4330d8 <ferror@plt+0x30768>
  4345dc:	ldr	w0, [x22]
  4345e0:	cmp	w0, #0x4
  4345e4:	b.ne	4345f4 <ferror@plt+0x31c84>  // b.any
  4345e8:	add	x0, sp, #0x50
  4345ec:	stp	x4, x22, [sp, #80]
  4345f0:	str	x0, [x19, #288]
  4345f4:	ldr	x2, [x20, #16]
  4345f8:	mov	x0, x19
  4345fc:	mov	w1, w21
  434600:	bl	434658 <ferror@plt+0x31ce8>
  434604:	ldr	w0, [x22]
  434608:	cmp	w0, #0x4
  43460c:	b.ne	434618 <ferror@plt+0x31ca8>  // b.any
  434610:	ldr	x0, [sp, #80]
  434614:	str	x0, [x19, #288]
  434618:	add	x22, sp, #0x70
  43461c:	add	x25, sp, #0x68
  434620:	sub	w23, w23, #0x1
  434624:	ubfiz	x20, x23, #5, #32
  434628:	ldr	w0, [x22, x20]
  43462c:	cbnz	w0, 43464c <ferror@plt+0x31cdc>
  434630:	mov	x0, x19
  434634:	mov	w1, #0x20                  	// #32
  434638:	bl	432780 <ferror@plt+0x2fe10>
  43463c:	ldr	x2, [x25, x20]
  434640:	mov	w1, w21
  434644:	mov	x0, x19
  434648:	bl	4346e4 <ferror@plt+0x31d74>
  43464c:	cbnz	w23, 434620 <ferror@plt+0x31cb0>
  434650:	str	x24, [x19, #296]
  434654:	b	432e70 <ferror@plt+0x30500>
  434658:	stp	x29, x30, [sp, #-48]!
  43465c:	mov	x29, sp
  434660:	stp	x19, x20, [sp, #16]
  434664:	mov	x19, x0
  434668:	cbz	x2, 434688 <ferror@plt+0x31d18>
  43466c:	ldr	w4, [x2, #4]
  434670:	mov	x20, x2
  434674:	cmp	w4, #0x1
  434678:	b.gt	434688 <ferror@plt+0x31d18>
  43467c:	ldr	w3, [x0, #308]
  434680:	cmp	w3, #0x400
  434684:	b.le	43469c <ferror@plt+0x31d2c>
  434688:	mov	w0, #0x1                   	// #1
  43468c:	str	w0, [x19, #304]
  434690:	ldp	x19, x20, [sp, #16]
  434694:	ldp	x29, x30, [sp], #48
  434698:	ret
  43469c:	add	w4, w4, #0x1
  4346a0:	add	w3, w3, #0x1
  4346a4:	str	w4, [x2, #4]
  4346a8:	str	w3, [x0, #308]
  4346ac:	ldr	x3, [x0, #328]
  4346b0:	stp	x2, x3, [sp, #32]
  4346b4:	add	x3, sp, #0x20
  4346b8:	str	x3, [x0, #328]
  4346bc:	bl	432e48 <ferror@plt+0x304d8>
  4346c0:	ldr	x0, [sp, #40]
  4346c4:	str	x0, [x19, #328]
  4346c8:	ldr	w0, [x20, #4]
  4346cc:	sub	w0, w0, #0x1
  4346d0:	str	w0, [x20, #4]
  4346d4:	ldr	w0, [x19, #308]
  4346d8:	sub	w0, w0, #0x1
  4346dc:	str	w0, [x19, #308]
  4346e0:	b	434690 <ferror@plt+0x31d20>
  4346e4:	stp	x29, x30, [sp, #-48]!
  4346e8:	mov	x29, sp
  4346ec:	stp	x19, x20, [sp, #16]
  4346f0:	mov	x20, x2
  4346f4:	ldr	w2, [x2]
  4346f8:	str	x21, [sp, #32]
  4346fc:	cmp	w2, #0x3
  434700:	b.eq	434868 <ferror@plt+0x31ef8>  // b.none
  434704:	sub	w2, w2, #0x19
  434708:	mov	x19, x0
  43470c:	mov	w21, w1
  434710:	cmp	w2, #0x37
  434714:	b.hi	434894 <ferror@plt+0x31f24>  // b.pmore
  434718:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x1b198>
  43471c:	add	x0, x0, #0x928
  434720:	ldrb	w0, [x0, w2, uxtw]
  434724:	adr	x1, 434730 <ferror@plt+0x31dc0>
  434728:	add	x0, x1, w0, sxtb #2
  43472c:	br	x0
  434730:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434734:	add	x1, x1, #0x8d8
  434738:	mov	x0, x19
  43473c:	ldp	x19, x20, [sp, #16]
  434740:	ldr	x21, [sp, #32]
  434744:	ldp	x29, x30, [sp], #48
  434748:	b	432838 <ferror@plt+0x2fec8>
  43474c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434750:	add	x1, x1, #0x8e2
  434754:	b	434738 <ferror@plt+0x31dc8>
  434758:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  43475c:	add	x1, x1, #0x8ec
  434760:	b	434738 <ferror@plt+0x31dc8>
  434764:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434768:	add	x1, x1, #0x8f3
  43476c:	b	434738 <ferror@plt+0x31dc8>
  434770:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434774:	add	x1, x1, #0x905
  434778:	mov	x0, x19
  43477c:	bl	432838 <ferror@plt+0x2fec8>
  434780:	ldr	x0, [x20, #16]
  434784:	cbz	x0, 43489c <ferror@plt+0x31f2c>
  434788:	mov	x0, x19
  43478c:	mov	w1, #0x28                  	// #40
  434790:	bl	432780 <ferror@plt+0x2fe10>
  434794:	ldr	x2, [x20, #16]
  434798:	mov	w1, w21
  43479c:	mov	x0, x19
  4347a0:	bl	434658 <ferror@plt+0x31ce8>
  4347a4:	mov	w1, #0x29                  	// #41
  4347a8:	b	4347dc <ferror@plt+0x31e6c>
  4347ac:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4347b0:	add	x1, x1, #0x90f
  4347b4:	b	434778 <ferror@plt+0x31e08>
  4347b8:	mov	x0, x19
  4347bc:	mov	w1, #0x20                  	// #32
  4347c0:	bl	432780 <ferror@plt+0x2fe10>
  4347c4:	ldr	x2, [x20, #16]
  4347c8:	mov	w1, w21
  4347cc:	mov	x0, x19
  4347d0:	b	43486c <ferror@plt+0x31efc>
  4347d4:	tbnz	w21, #2, 43489c <ferror@plt+0x31f2c>
  4347d8:	mov	w1, #0x2a                  	// #42
  4347dc:	mov	x0, x19
  4347e0:	ldp	x19, x20, [sp, #16]
  4347e4:	ldr	x21, [sp, #32]
  4347e8:	ldp	x29, x30, [sp], #48
  4347ec:	b	432780 <ferror@plt+0x2fe10>
  4347f0:	mov	x0, x19
  4347f4:	mov	w1, #0x20                  	// #32
  4347f8:	bl	432780 <ferror@plt+0x2fe10>
  4347fc:	mov	w1, #0x26                  	// #38
  434800:	b	4347dc <ferror@plt+0x31e6c>
  434804:	mov	x0, x19
  434808:	mov	w1, #0x20                  	// #32
  43480c:	bl	432780 <ferror@plt+0x2fe10>
  434810:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x18198>
  434814:	add	x1, x1, #0xee5
  434818:	b	434738 <ferror@plt+0x31dc8>
  43481c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434820:	add	x1, x1, #0x916
  434824:	b	434738 <ferror@plt+0x31dc8>
  434828:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  43482c:	add	x1, x1, #0x91f
  434830:	b	434738 <ferror@plt+0x31dc8>
  434834:	ldrb	w0, [x19, #264]
  434838:	cmp	w0, #0x28
  43483c:	b.eq	43484c <ferror@plt+0x31edc>  // b.none
  434840:	mov	x0, x19
  434844:	mov	w1, #0x20                  	// #32
  434848:	bl	432780 <ferror@plt+0x2fe10>
  43484c:	ldr	x2, [x20, #8]
  434850:	mov	w1, w21
  434854:	mov	x0, x19
  434858:	bl	434658 <ferror@plt+0x31ce8>
  43485c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434860:	add	x1, x1, #0x92a
  434864:	b	434738 <ferror@plt+0x31dc8>
  434868:	ldr	x2, [x20, #8]
  43486c:	ldp	x19, x20, [sp, #16]
  434870:	ldr	x21, [sp, #32]
  434874:	ldp	x29, x30, [sp], #48
  434878:	b	434658 <ferror@plt+0x31ce8>
  43487c:	mov	x0, x19
  434880:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434884:	add	x1, x1, #0x92e
  434888:	bl	432838 <ferror@plt+0x2fec8>
  43488c:	ldr	x2, [x20, #8]
  434890:	b	434798 <ferror@plt+0x31e28>
  434894:	mov	x2, x20
  434898:	b	4347c8 <ferror@plt+0x31e58>
  43489c:	ldp	x19, x20, [sp, #16]
  4348a0:	ldr	x21, [sp, #32]
  4348a4:	ldp	x29, x30, [sp], #48
  4348a8:	ret
  4348ac:	stp	x29, x30, [sp, #-64]!
  4348b0:	mov	x29, sp
  4348b4:	stp	x19, x20, [sp, #16]
  4348b8:	mov	x19, x0
  4348bc:	mov	w20, w1
  4348c0:	mov	x0, x3
  4348c4:	stp	x21, x22, [sp, #32]
  4348c8:	mov	x22, x2
  4348cc:	mov	x21, x3
  4348d0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x1b198>
  4348d4:	add	x2, x2, #0x960
  4348d8:	stp	x23, x24, [sp, #48]
  4348dc:	cbnz	x0, 4348e8 <ferror@plt+0x31f78>
  4348e0:	mov	w23, #0x0                   	// #0
  4348e4:	b	434958 <ferror@plt+0x31fe8>
  4348e8:	ldr	w1, [x0, #16]
  4348ec:	cbnz	w1, 4348e0 <ferror@plt+0x31f70>
  4348f0:	ldr	x1, [x0, #8]
  4348f4:	ldr	w1, [x1]
  4348f8:	sub	w1, w1, #0x19
  4348fc:	cmp	w1, #0x12
  434900:	b.hi	434914 <ferror@plt+0x31fa4>  // b.pmore
  434904:	ldrb	w1, [x2, w1, uxtw]
  434908:	adr	x3, 434914 <ferror@plt+0x31fa4>
  43490c:	add	x1, x3, w1, sxtb #2
  434910:	br	x1
  434914:	ldr	x0, [x0]
  434918:	b	4348dc <ferror@plt+0x31f6c>
  43491c:	ldrb	w0, [x19, #264]
  434920:	and	w0, w0, #0xfffffffd
  434924:	and	w0, w0, #0xff
  434928:	cmp	w0, #0x28
  43492c:	b.eq	434948 <ferror@plt+0x31fd8>  // b.none
  434930:	ldrb	w0, [x19, #264]
  434934:	cmp	w0, #0x20
  434938:	b.eq	434948 <ferror@plt+0x31fd8>  // b.none
  43493c:	mov	x0, x19
  434940:	mov	w1, #0x20                  	// #32
  434944:	bl	432780 <ferror@plt+0x2fe10>
  434948:	mov	w23, #0x1                   	// #1
  43494c:	mov	x0, x19
  434950:	mov	w1, #0x28                  	// #40
  434954:	bl	432780 <ferror@plt+0x2fe10>
  434958:	ldr	x24, [x19, #296]
  43495c:	str	xzr, [x19, #296]
  434960:	mov	x2, x21
  434964:	mov	w1, w20
  434968:	mov	x0, x19
  43496c:	mov	w3, #0x0                   	// #0
  434970:	bl	4349dc <ferror@plt+0x3206c>
  434974:	cbz	w23, 434984 <ferror@plt+0x32014>
  434978:	mov	x0, x19
  43497c:	mov	w1, #0x29                  	// #41
  434980:	bl	432780 <ferror@plt+0x2fe10>
  434984:	mov	x0, x19
  434988:	mov	w1, #0x28                  	// #40
  43498c:	bl	432780 <ferror@plt+0x2fe10>
  434990:	ldr	x2, [x22]
  434994:	cbz	x2, 4349a4 <ferror@plt+0x32034>
  434998:	mov	w1, w20
  43499c:	mov	x0, x19
  4349a0:	bl	434658 <ferror@plt+0x31ce8>
  4349a4:	mov	x0, x19
  4349a8:	mov	w1, #0x29                  	// #41
  4349ac:	bl	432780 <ferror@plt+0x2fe10>
  4349b0:	mov	x2, x21
  4349b4:	mov	w1, w20
  4349b8:	mov	x0, x19
  4349bc:	mov	w3, #0x1                   	// #1
  4349c0:	bl	4349dc <ferror@plt+0x3206c>
  4349c4:	ldp	x21, x22, [sp, #32]
  4349c8:	str	x24, [x19, #296]
  4349cc:	ldp	x19, x20, [sp, #16]
  4349d0:	ldp	x23, x24, [sp, #48]
  4349d4:	ldp	x29, x30, [sp], #64
  4349d8:	ret
  4349dc:	stp	x29, x30, [sp, #-64]!
  4349e0:	mov	x29, sp
  4349e4:	stp	x19, x20, [sp, #16]
  4349e8:	mov	x19, x0
  4349ec:	mov	x20, x2
  4349f0:	stp	x21, x22, [sp, #32]
  4349f4:	mov	w21, w1
  4349f8:	stp	x23, x24, [sp, #48]
  4349fc:	mov	w23, w3
  434a00:	mov	w24, #0x1                   	// #1
  434a04:	cbz	x20, 434a68 <ferror@plt+0x320f8>
  434a08:	ldr	w0, [x19, #304]
  434a0c:	cbnz	w0, 434a68 <ferror@plt+0x320f8>
  434a10:	ldr	w0, [x20, #16]
  434a14:	cbnz	w0, 434a30 <ferror@plt+0x320c0>
  434a18:	ldr	x2, [x20, #8]
  434a1c:	ldr	w4, [x2]
  434a20:	cbnz	w23, 434a38 <ferror@plt+0x320c8>
  434a24:	mov	w0, w4
  434a28:	bl	432500 <ferror@plt+0x2fb90>
  434a2c:	cbz	w0, 434a38 <ferror@plt+0x320c8>
  434a30:	ldr	x20, [x20]
  434a34:	b	434a04 <ferror@plt+0x32094>
  434a38:	ldr	x0, [x20, #24]
  434a3c:	cmp	w4, #0x29
  434a40:	ldr	x22, [x19, #288]
  434a44:	str	w24, [x20, #16]
  434a48:	str	x0, [x19, #288]
  434a4c:	b.ne	434a7c <ferror@plt+0x3210c>  // b.any
  434a50:	ldr	x3, [x20]
  434a54:	add	x2, x2, #0x10
  434a58:	mov	w1, w21
  434a5c:	mov	x0, x19
  434a60:	bl	4348ac <ferror@plt+0x31f3c>
  434a64:	str	x22, [x19, #288]
  434a68:	ldp	x19, x20, [sp, #16]
  434a6c:	ldp	x21, x22, [sp, #32]
  434a70:	ldp	x23, x24, [sp, #48]
  434a74:	ldp	x29, x30, [sp], #64
  434a78:	ret
  434a7c:	cmp	w4, #0x2a
  434a80:	b.ne	434a9c <ferror@plt+0x3212c>  // b.any
  434a84:	ldr	x3, [x20]
  434a88:	add	x2, x2, #0x8
  434a8c:	mov	w1, w21
  434a90:	mov	x0, x19
  434a94:	bl	434b60 <ferror@plt+0x321f0>
  434a98:	b	434a64 <ferror@plt+0x320f4>
  434a9c:	cmp	w4, #0x2
  434aa0:	b.ne	434b4c <ferror@plt+0x321dc>  // b.any
  434aa4:	ldr	x2, [x2, #8]
  434aa8:	mov	w1, w21
  434aac:	ldr	x23, [x19, #296]
  434ab0:	str	xzr, [x19, #296]
  434ab4:	mov	x0, x19
  434ab8:	bl	434658 <ferror@plt+0x31ce8>
  434abc:	str	x23, [x19, #296]
  434ac0:	tbnz	w21, #2, 434b3c <ferror@plt+0x321cc>
  434ac4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434ac8:	mov	x0, x19
  434acc:	add	x1, x1, #0x6c5
  434ad0:	bl	432838 <ferror@plt+0x2fec8>
  434ad4:	ldr	x0, [x20, #8]
  434ad8:	ldr	x20, [x0, #16]
  434adc:	ldr	w0, [x20]
  434ae0:	cmp	w0, #0x47
  434ae4:	b.ne	434b1c <ferror@plt+0x321ac>  // b.any
  434ae8:	mov	x0, x19
  434aec:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434af0:	add	x1, x1, #0x6b6
  434af4:	bl	432838 <ferror@plt+0x2fec8>
  434af8:	ldr	w1, [x20, #16]
  434afc:	mov	x0, x19
  434b00:	add	w1, w1, #0x1
  434b04:	bl	43286c <ferror@plt+0x2fefc>
  434b08:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434b0c:	mov	x0, x19
  434b10:	add	x1, x1, #0x6c4
  434b14:	bl	432838 <ferror@plt+0x2fec8>
  434b18:	ldr	x20, [x20, #8]
  434b1c:	ldr	w0, [x20]
  434b20:	bl	432500 <ferror@plt+0x2fb90>
  434b24:	cbnz	w0, 434b18 <ferror@plt+0x321a8>
  434b28:	mov	x2, x20
  434b2c:	mov	w1, w21
  434b30:	mov	x0, x19
  434b34:	bl	434658 <ferror@plt+0x31ce8>
  434b38:	b	434a64 <ferror@plt+0x320f4>
  434b3c:	mov	x0, x19
  434b40:	mov	w1, #0x2e                  	// #46
  434b44:	bl	432780 <ferror@plt+0x2fe10>
  434b48:	b	434ad4 <ferror@plt+0x32164>
  434b4c:	mov	w1, w21
  434b50:	mov	x0, x19
  434b54:	bl	4346e4 <ferror@plt+0x31d74>
  434b58:	str	x22, [x19, #288]
  434b5c:	b	434a30 <ferror@plt+0x320c0>
  434b60:	stp	x29, x30, [sp, #-64]!
  434b64:	mov	x29, sp
  434b68:	stp	x19, x20, [sp, #16]
  434b6c:	mov	x19, x0
  434b70:	stp	x21, x22, [sp, #32]
  434b74:	mov	w21, w1
  434b78:	stp	x23, x24, [sp, #48]
  434b7c:	mov	x24, x2
  434b80:	cbnz	x3, 434bcc <ferror@plt+0x3225c>
  434b84:	mov	x0, x19
  434b88:	mov	w1, #0x20                  	// #32
  434b8c:	bl	432780 <ferror@plt+0x2fe10>
  434b90:	mov	x0, x19
  434b94:	mov	w1, #0x5b                  	// #91
  434b98:	bl	432780 <ferror@plt+0x2fe10>
  434b9c:	ldr	x2, [x24]
  434ba0:	cbz	x2, 434bb0 <ferror@plt+0x32240>
  434ba4:	mov	w1, w21
  434ba8:	mov	x0, x19
  434bac:	bl	434658 <ferror@plt+0x31ce8>
  434bb0:	mov	x0, x19
  434bb4:	mov	w1, #0x5d                  	// #93
  434bb8:	ldp	x19, x20, [sp, #16]
  434bbc:	ldp	x21, x22, [sp, #32]
  434bc0:	ldp	x23, x24, [sp, #48]
  434bc4:	ldp	x29, x30, [sp], #64
  434bc8:	b	432780 <ferror@plt+0x2fe10>
  434bcc:	mov	x20, x3
  434bd0:	mov	x0, x3
  434bd4:	ldr	w22, [x0, #16]
  434bd8:	cbnz	w22, 434c04 <ferror@plt+0x32294>
  434bdc:	ldr	x0, [x0, #8]
  434be0:	ldr	w0, [x0]
  434be4:	cmp	w0, #0x2a
  434be8:	b.eq	434c40 <ferror@plt+0x322d0>  // b.none
  434bec:	mov	x0, x19
  434bf0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434bf4:	mov	w23, #0x1                   	// #1
  434bf8:	add	x1, x1, #0x86a
  434bfc:	bl	432838 <ferror@plt+0x2fec8>
  434c00:	b	434c10 <ferror@plt+0x322a0>
  434c04:	ldr	x0, [x0]
  434c08:	cbnz	x0, 434bd4 <ferror@plt+0x32264>
  434c0c:	mov	w23, #0x0                   	// #0
  434c10:	mov	w22, #0x1                   	// #1
  434c14:	mov	x2, x20
  434c18:	mov	w1, w21
  434c1c:	mov	x0, x19
  434c20:	mov	w3, #0x0                   	// #0
  434c24:	bl	4349dc <ferror@plt+0x3206c>
  434c28:	cbz	w23, 434c38 <ferror@plt+0x322c8>
  434c2c:	mov	x0, x19
  434c30:	mov	w1, #0x29                  	// #41
  434c34:	bl	432780 <ferror@plt+0x2fe10>
  434c38:	cbnz	w22, 434b84 <ferror@plt+0x32214>
  434c3c:	b	434b90 <ferror@plt+0x32220>
  434c40:	mov	w23, #0x0                   	// #0
  434c44:	b	434c14 <ferror@plt+0x322a4>
  434c48:	ldr	w4, [x2]
  434c4c:	cmp	w4, #0x32
  434c50:	b.ne	434c64 <ferror@plt+0x322f4>  // b.any
  434c54:	ldr	x1, [x2, #8]
  434c58:	ldrsw	x2, [x1, #16]
  434c5c:	ldr	x1, [x1, #8]
  434c60:	b	4327c4 <ferror@plt+0x2fe54>
  434c64:	b	434658 <ferror@plt+0x31ce8>
  434c68:	stp	x29, x30, [sp, #-48]!
  434c6c:	mov	x29, sp
  434c70:	stp	x19, x20, [sp, #16]
  434c74:	mov	x19, x0
  434c78:	mov	x20, x2
  434c7c:	stp	x21, x22, [sp, #32]
  434c80:	mov	w21, w1
  434c84:	ldr	w1, [x2]
  434c88:	cmp	w1, #0x31
  434c8c:	b.hi	434ca0 <ferror@plt+0x32330>  // b.pmore
  434c90:	mov	x0, #0x43                  	// #67
  434c94:	movk	x0, #0x2, lsl #48
  434c98:	lsr	x0, x0, x1
  434c9c:	tbnz	w0, #0, 434cdc <ferror@plt+0x3236c>
  434ca0:	mov	w22, #0x0                   	// #0
  434ca4:	mov	x0, x19
  434ca8:	mov	w1, #0x28                  	// #40
  434cac:	bl	432780 <ferror@plt+0x2fe10>
  434cb0:	mov	x2, x20
  434cb4:	mov	w1, w21
  434cb8:	mov	x0, x19
  434cbc:	bl	434658 <ferror@plt+0x31ce8>
  434cc0:	cbnz	w22, 434ce4 <ferror@plt+0x32374>
  434cc4:	mov	x0, x19
  434cc8:	mov	w1, #0x29                  	// #41
  434ccc:	ldp	x19, x20, [sp, #16]
  434cd0:	ldp	x21, x22, [sp, #32]
  434cd4:	ldp	x29, x30, [sp], #48
  434cd8:	b	432780 <ferror@plt+0x2fe10>
  434cdc:	mov	w22, #0x1                   	// #1
  434ce0:	b	434cb0 <ferror@plt+0x32340>
  434ce4:	ldp	x19, x20, [sp, #16]
  434ce8:	ldp	x21, x22, [sp, #32]
  434cec:	ldp	x29, x30, [sp], #48
  434cf0:	ret
  434cf4:	stp	x29, x30, [sp, #-64]!
  434cf8:	mov	x29, sp
  434cfc:	stp	x19, x20, [sp, #16]
  434d00:	mov	x19, x0
  434d04:	mov	w20, w1
  434d08:	ldr	x0, [x2, #8]
  434d0c:	stp	x21, x22, [sp, #32]
  434d10:	stp	x23, x24, [sp, #48]
  434d14:	ldr	x0, [x0, #8]
  434d18:	ldr	x0, [x0]
  434d1c:	ldrb	w1, [x0]
  434d20:	cmp	w1, #0x66
  434d24:	b.ne	434e70 <ferror@plt+0x32500>  // b.any
  434d28:	ldr	x1, [x2, #16]
  434d2c:	ldp	x22, x21, [x1, #8]
  434d30:	ldr	w1, [x21]
  434d34:	cmp	w1, #0x3c
  434d38:	b.ne	434d8c <ferror@plt+0x3241c>  // b.any
  434d3c:	ldr	x23, [x21, #16]
  434d40:	ldr	x21, [x21, #8]
  434d44:	mov	w1, #0xffffffff            	// #-1
  434d48:	ldr	w24, [x19, #316]
  434d4c:	str	w1, [x19, #316]
  434d50:	ldrb	w0, [x0, #1]
  434d54:	cmp	w0, #0x6c
  434d58:	b.eq	434ddc <ferror@plt+0x3246c>  // b.none
  434d5c:	b.hi	434d94 <ferror@plt+0x32424>  // b.pmore
  434d60:	cmp	w0, #0x4c
  434d64:	b.eq	434e1c <ferror@plt+0x324ac>  // b.none
  434d68:	cmp	w0, #0x52
  434d6c:	b.eq	434e1c <ferror@plt+0x324ac>  // b.none
  434d70:	mov	w0, #0x1                   	// #1
  434d74:	str	w24, [x19, #316]
  434d78:	ldp	x19, x20, [sp, #16]
  434d7c:	ldp	x21, x22, [sp, #32]
  434d80:	ldp	x23, x24, [sp, #48]
  434d84:	ldp	x29, x30, [sp], #64
  434d88:	ret
  434d8c:	mov	x23, #0x0                   	// #0
  434d90:	b	434d44 <ferror@plt+0x323d4>
  434d94:	cmp	w0, #0x72
  434d98:	b.ne	434d70 <ferror@plt+0x32400>  // b.any
  434d9c:	mov	x0, x19
  434da0:	mov	w1, #0x28                  	// #40
  434da4:	bl	432780 <ferror@plt+0x2fe10>
  434da8:	mov	x2, x21
  434dac:	mov	w1, w20
  434db0:	mov	x0, x19
  434db4:	bl	434c68 <ferror@plt+0x322f8>
  434db8:	mov	x2, x22
  434dbc:	mov	w1, w20
  434dc0:	mov	x0, x19
  434dc4:	bl	434c48 <ferror@plt+0x322d8>
  434dc8:	mov	x0, x19
  434dcc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434dd0:	add	x1, x1, #0x93e
  434dd4:	bl	432838 <ferror@plt+0x2fec8>
  434dd8:	b	434d70 <ferror@plt+0x32400>
  434ddc:	mov	x0, x19
  434de0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434de4:	add	x1, x1, #0x939
  434de8:	bl	432838 <ferror@plt+0x2fec8>
  434dec:	mov	x2, x22
  434df0:	mov	w1, w20
  434df4:	mov	x0, x19
  434df8:	bl	434c48 <ferror@plt+0x322d8>
  434dfc:	mov	x2, x21
  434e00:	mov	w1, w20
  434e04:	mov	x0, x19
  434e08:	bl	434c68 <ferror@plt+0x322f8>
  434e0c:	mov	x0, x19
  434e10:	mov	w1, #0x29                  	// #41
  434e14:	bl	432780 <ferror@plt+0x2fe10>
  434e18:	b	434d70 <ferror@plt+0x32400>
  434e1c:	mov	x0, x19
  434e20:	mov	w1, #0x28                  	// #40
  434e24:	bl	432780 <ferror@plt+0x2fe10>
  434e28:	mov	x2, x21
  434e2c:	mov	w1, w20
  434e30:	mov	x0, x19
  434e34:	bl	434c68 <ferror@plt+0x322f8>
  434e38:	mov	x2, x22
  434e3c:	mov	w1, w20
  434e40:	mov	x0, x19
  434e44:	bl	434c48 <ferror@plt+0x322d8>
  434e48:	mov	x0, x19
  434e4c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434e50:	add	x1, x1, #0x93a
  434e54:	bl	432838 <ferror@plt+0x2fec8>
  434e58:	mov	x2, x22
  434e5c:	mov	w1, w20
  434e60:	mov	x0, x19
  434e64:	bl	434c48 <ferror@plt+0x322d8>
  434e68:	mov	x2, x23
  434e6c:	b	434e00 <ferror@plt+0x32490>
  434e70:	mov	w0, #0x0                   	// #0
  434e74:	b	434d78 <ferror@plt+0x32408>
  434e78:	cmp	x0, #0x0
  434e7c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  434e80:	b.eq	434e9c <ferror@plt+0x3252c>  // b.none
  434e84:	cmp	w2, #0x0
  434e88:	b.le	434e9c <ferror@plt+0x3252c>
  434e8c:	stp	xzr, x1, [x0]
  434e90:	str	w2, [x0, #16]
  434e94:	mov	w0, #0x1                   	// #1
  434e98:	ret
  434e9c:	mov	w0, #0x0                   	// #0
  434ea0:	b	434e98 <ferror@plt+0x32528>
  434ea4:	mov	x4, x1
  434ea8:	mov	w5, w2
  434eac:	stp	x29, x30, [sp, #-16]!
  434eb0:	mov	x29, sp
  434eb4:	bl	432530 <ferror@plt+0x2fbc0>
  434eb8:	mov	x3, x0
  434ebc:	mov	w2, w5
  434ec0:	mov	x1, x4
  434ec4:	bl	434e78 <ferror@plt+0x32508>
  434ec8:	cmp	w0, #0x0
  434ecc:	csel	x0, x3, xzr, ne  // ne = any
  434ed0:	ldp	x29, x30, [sp], #16
  434ed4:	ret
  434ed8:	stp	x29, x30, [sp, #-48]!
  434edc:	mov	x29, sp
  434ee0:	stp	x19, x20, [sp, #16]
  434ee4:	mov	x19, x0
  434ee8:	add	x0, x0, #0x18
  434eec:	str	x21, [sp, #32]
  434ef0:	bl	4328a8 <ferror@plt+0x2ff38>
  434ef4:	cmp	w0, #0x0
  434ef8:	b.le	434fd8 <ferror@plt+0x32668>
  434efc:	mov	w20, w0
  434f00:	sxtw	x1, w0
  434f04:	ldr	x0, [x19, #8]
  434f08:	ldr	x21, [x19, #24]
  434f0c:	sub	x0, x0, x21
  434f10:	cmp	x0, w20, sxtw
  434f14:	b.lt	434fd0 <ferror@plt+0x32660>  // b.tstop
  434f18:	ldr	w2, [x19, #16]
  434f1c:	add	x0, x21, x1
  434f20:	str	x0, [x19, #24]
  434f24:	tbz	w2, #2, 434f3c <ferror@plt+0x325cc>
  434f28:	ldrb	w1, [x21, x1]
  434f2c:	cmp	w1, #0x24
  434f30:	b.ne	434f3c <ferror@plt+0x325cc>  // b.any
  434f34:	add	x0, x0, #0x1
  434f38:	str	x0, [x19, #24]
  434f3c:	cmp	w20, #0x9
  434f40:	b.le	434fc4 <ferror@plt+0x32654>
  434f44:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434f48:	mov	x0, x21
  434f4c:	add	x1, x1, #0x943
  434f50:	mov	x2, #0x8                   	// #8
  434f54:	bl	402690 <memcmp@plt>
  434f58:	cbnz	w0, 434fc4 <ferror@plt+0x32654>
  434f5c:	ldrb	w0, [x21, #8]
  434f60:	sub	w0, w0, #0x24
  434f64:	and	w0, w0, #0xff
  434f68:	cmp	w0, #0x3b
  434f6c:	b.hi	434fc4 <ferror@plt+0x32654>  // b.pmore
  434f70:	mov	x1, #0x401                 	// #1025
  434f74:	movk	x1, #0x800, lsl #48
  434f78:	lsr	x0, x1, x0
  434f7c:	tbz	w0, #0, 434fc4 <ferror@plt+0x32654>
  434f80:	ldrb	w0, [x21, #9]
  434f84:	cmp	w0, #0x4e
  434f88:	b.ne	434fc4 <ferror@plt+0x32654>  // b.any
  434f8c:	ldr	w0, [x19, #72]
  434f90:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  434f94:	add	x1, x1, #0x94c
  434f98:	mov	w2, #0x15                  	// #21
  434f9c:	add	w0, w0, #0x16
  434fa0:	sub	w20, w0, w20
  434fa4:	str	w20, [x19, #72]
  434fa8:	mov	x0, x19
  434fac:	bl	434ea4 <ferror@plt+0x32534>
  434fb0:	str	x0, [x19, #64]
  434fb4:	ldp	x19, x20, [sp, #16]
  434fb8:	ldr	x21, [sp, #32]
  434fbc:	ldp	x29, x30, [sp], #48
  434fc0:	ret
  434fc4:	mov	w2, w20
  434fc8:	mov	x1, x21
  434fcc:	b	434fa8 <ferror@plt+0x32638>
  434fd0:	mov	x0, #0x0                   	// #0
  434fd4:	b	434fb0 <ferror@plt+0x32640>
  434fd8:	mov	x0, #0x0                   	// #0
  434fdc:	b	434fb4 <ferror@plt+0x32644>
  434fe0:	stp	x29, x30, [sp, #-48]!
  434fe4:	mov	x29, sp
  434fe8:	str	x21, [sp, #32]
  434fec:	ldr	x21, [x0, #64]
  434ff0:	stp	x19, x20, [sp, #16]
  434ff4:	mov	x19, x0
  434ff8:	mov	x20, x1
  434ffc:	ldr	x0, [x19, #24]
  435000:	ldrb	w1, [x0]
  435004:	cmp	w1, #0x42
  435008:	b.eq	435024 <ferror@plt+0x326b4>  // b.none
  43500c:	str	x21, [x19, #64]
  435010:	mov	x0, x20
  435014:	ldp	x19, x20, [sp, #16]
  435018:	ldr	x21, [sp, #32]
  43501c:	ldp	x29, x30, [sp], #48
  435020:	ret
  435024:	add	x0, x0, #0x1
  435028:	str	x0, [x19, #24]
  43502c:	mov	x0, x19
  435030:	bl	434ed8 <ferror@plt+0x32568>
  435034:	mov	x3, x0
  435038:	mov	x2, x20
  43503c:	mov	x0, x19
  435040:	mov	w1, #0x4c                  	// #76
  435044:	bl	432564 <ferror@plt+0x2fbf4>
  435048:	mov	x20, x0
  43504c:	b	434ffc <ferror@plt+0x3268c>
  435050:	stp	x29, x30, [sp, #-32]!
  435054:	mov	x29, sp
  435058:	ldr	x2, [x0, #24]
  43505c:	str	x19, [sp, #16]
  435060:	mov	x19, x0
  435064:	ldrb	w0, [x2]
  435068:	cmp	w0, #0x53
  43506c:	b.ne	435228 <ferror@plt+0x328b8>  // b.any
  435070:	add	x0, x2, #0x1
  435074:	str	x0, [x19, #24]
  435078:	ldrb	w0, [x2, #1]
  43507c:	cbz	w0, 435150 <ferror@plt+0x327e0>
  435080:	add	x0, x2, #0x2
  435084:	str	x0, [x19, #24]
  435088:	ldrb	w0, [x2, #1]
  43508c:	sub	w2, w0, #0x30
  435090:	and	w2, w2, #0xff
  435094:	cmp	w2, #0x2f
  435098:	b.hi	435150 <ferror@plt+0x327e0>  // b.pmore
  43509c:	mov	w3, #0xfffe03ff            	// #-130049
  4350a0:	movk	x3, #0x87ff, lsl #32
  4350a4:	lsr	x2, x3, x2
  4350a8:	tbz	w2, #0, 435150 <ferror@plt+0x327e0>
  4350ac:	cmp	w0, #0x5f
  4350b0:	b.ne	435128 <ferror@plt+0x327b8>  // b.any
  4350b4:	mov	w0, #0x0                   	// #0
  4350b8:	ldr	w1, [x19, #56]
  4350bc:	cmp	w1, w0
  4350c0:	b.ls	435228 <ferror@plt+0x328b8>  // b.plast
  4350c4:	ldr	x1, [x19, #48]
  4350c8:	ldr	x1, [x1, w0, uxtw #3]
  4350cc:	mov	x0, x1
  4350d0:	ldr	x19, [sp, #16]
  4350d4:	ldp	x29, x30, [sp], #32
  4350d8:	ret
  4350dc:	mov	w2, w1
  4350e0:	sub	w1, w0, #0x30
  4350e4:	and	w1, w1, #0xff
  4350e8:	cmp	w1, #0x9
  4350ec:	b.hi	435134 <ferror@plt+0x327c4>  // b.pmore
  4350f0:	madd	w0, w2, w3, w0
  4350f4:	sub	w1, w0, #0x30
  4350f8:	cmp	w2, w1
  4350fc:	b.hi	435228 <ferror@plt+0x328b8>  // b.pmore
  435100:	ldr	x2, [x19, #24]
  435104:	ldrb	w0, [x2]
  435108:	cbz	w0, 4350dc <ferror@plt+0x3276c>
  43510c:	add	x0, x2, #0x1
  435110:	str	x0, [x19, #24]
  435114:	ldrb	w0, [x2]
  435118:	cmp	w0, #0x5f
  43511c:	b.ne	4350dc <ferror@plt+0x3276c>  // b.any
  435120:	add	w0, w1, #0x1
  435124:	b	4350b8 <ferror@plt+0x32748>
  435128:	mov	w2, #0x0                   	// #0
  43512c:	mov	w3, #0x24                  	// #36
  435130:	b	4350e0 <ferror@plt+0x32770>
  435134:	sub	w1, w0, #0x41
  435138:	and	w1, w1, #0xff
  43513c:	cmp	w1, #0x19
  435140:	b.hi	435228 <ferror@plt+0x328b8>  // b.pmore
  435144:	madd	w0, w2, w3, w0
  435148:	sub	w1, w0, #0x37
  43514c:	b	4350f8 <ferror@plt+0x32788>
  435150:	ldr	w5, [x19, #16]
  435154:	and	w1, w1, #0x1
  435158:	ands	w2, w5, #0x8
  43515c:	csel	w1, w1, wzr, eq  // eq = none
  435160:	ubfx	x5, x5, #3, #1
  435164:	cbz	w1, 435180 <ferror@plt+0x32810>
  435168:	ldr	x1, [x19, #24]
  43516c:	ldrb	w1, [x1]
  435170:	sub	w1, w1, #0x43
  435174:	and	w1, w1, #0xff
  435178:	cmp	w1, #0x1
  43517c:	csinc	w5, w5, wzr, hi  // hi = pmore
  435180:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x1b198>
  435184:	add	x4, x4, #0xa88
  435188:	add	x4, x4, #0x440
  43518c:	mov	x1, #0x7                   	// #7
  435190:	ldrb	w2, [x4]
  435194:	cmp	w2, w0
  435198:	b.ne	43523c <ferror@plt+0x328cc>  // b.any
  43519c:	ldr	x6, [x4, #40]
  4351a0:	cbz	x6, 4351c8 <ferror@plt+0x32858>
  4351a4:	ldr	w7, [x4, #48]
  4351a8:	mov	x0, x19
  4351ac:	bl	432530 <ferror@plt+0x2fbc0>
  4351b0:	cbz	x0, 4351c4 <ferror@plt+0x32854>
  4351b4:	mov	w1, #0x18                  	// #24
  4351b8:	str	w1, [x0]
  4351bc:	str	x6, [x0, #8]
  4351c0:	str	w7, [x0, #16]
  4351c4:	str	x0, [x19, #64]
  4351c8:	cbz	w5, 435230 <ferror@plt+0x328c0>
  4351cc:	ldr	x5, [x4, #24]
  4351d0:	ldr	w4, [x4, #32]
  4351d4:	ldr	w0, [x19, #72]
  4351d8:	add	w0, w0, w4
  4351dc:	str	w0, [x19, #72]
  4351e0:	mov	x0, x19
  4351e4:	bl	432530 <ferror@plt+0x2fbc0>
  4351e8:	mov	x1, x0
  4351ec:	cbz	x0, 435200 <ferror@plt+0x32890>
  4351f0:	mov	w0, #0x18                  	// #24
  4351f4:	str	w0, [x1]
  4351f8:	str	x5, [x1, #8]
  4351fc:	str	w4, [x1, #16]
  435200:	ldr	x0, [x19, #24]
  435204:	ldrb	w0, [x0]
  435208:	cmp	w0, #0x42
  43520c:	b.ne	4350cc <ferror@plt+0x3275c>  // b.any
  435210:	mov	x0, x19
  435214:	bl	434fe0 <ferror@plt+0x32670>
  435218:	mov	x1, x0
  43521c:	mov	x0, x19
  435220:	bl	432654 <ferror@plt+0x2fce4>
  435224:	cbnz	w0, 4350cc <ferror@plt+0x3275c>
  435228:	mov	x1, #0x0                   	// #0
  43522c:	b	4350cc <ferror@plt+0x3275c>
  435230:	ldr	x5, [x4, #8]
  435234:	ldr	w4, [x4, #16]
  435238:	b	4351d4 <ferror@plt+0x32864>
  43523c:	add	x4, x4, #0x38
  435240:	subs	x1, x1, #0x1
  435244:	b.ne	435190 <ferror@plt+0x32820>  // b.any
  435248:	b	435228 <ferror@plt+0x328b8>
  43524c:	cmp	x0, #0x0
  435250:	ccmp	w1, #0x0, #0x1, ne  // ne = any
  435254:	b.lt	435274 <ferror@plt+0x32904>  // b.tstop
  435258:	cbz	x2, 435274 <ferror@plt+0x32904>
  43525c:	mov	x3, #0x33                  	// #51
  435260:	str	x3, [x0]
  435264:	str	w1, [x0, #8]
  435268:	str	x2, [x0, #16]
  43526c:	mov	w0, #0x1                   	// #1
  435270:	ret
  435274:	mov	w0, #0x0                   	// #0
  435278:	b	435270 <ferror@plt+0x32900>
  43527c:	cmp	x0, #0x0
  435280:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  435284:	b.eq	4352ac <ferror@plt+0x3293c>  // b.none
  435288:	sub	w3, w1, #0x1
  43528c:	cmp	w3, #0x4
  435290:	b.hi	4352ac <ferror@plt+0x3293c>  // b.pmore
  435294:	mov	x3, #0x7                   	// #7
  435298:	str	x3, [x0]
  43529c:	str	w1, [x0, #8]
  4352a0:	str	x2, [x0, #16]
  4352a4:	mov	w0, #0x1                   	// #1
  4352a8:	ret
  4352ac:	mov	w0, #0x0                   	// #0
  4352b0:	b	4352a8 <ferror@plt+0x32938>
  4352b4:	cmp	x0, #0x0
  4352b8:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  4352bc:	b.eq	4352e4 <ferror@plt+0x32974>  // b.none
  4352c0:	sub	w3, w1, #0x1
  4352c4:	cmp	w3, #0x4
  4352c8:	b.hi	4352e4 <ferror@plt+0x32974>  // b.pmore
  4352cc:	mov	x3, #0x8                   	// #8
  4352d0:	str	x3, [x0]
  4352d4:	str	w1, [x0, #8]
  4352d8:	str	x2, [x0, #16]
  4352dc:	mov	w0, #0x1                   	// #1
  4352e0:	ret
  4352e4:	mov	w0, #0x0                   	// #0
  4352e8:	b	4352e0 <ferror@plt+0x32970>
  4352ec:	stp	x29, x30, [sp, #-80]!
  4352f0:	mov	x29, sp
  4352f4:	ldr	x3, [x0, #24]
  4352f8:	stp	x19, x20, [sp, #16]
  4352fc:	mov	x19, x0
  435300:	mov	x0, x3
  435304:	stp	x21, x22, [sp, #32]
  435308:	str	x23, [sp, #48]
  43530c:	bl	432af0 <ferror@plt+0x30180>
  435310:	cbz	w0, 4353ac <ferror@plt+0x32a3c>
  435314:	add	x1, sp, #0x48
  435318:	mov	x0, x19
  43531c:	mov	w2, #0x0                   	// #0
  435320:	bl	437550 <ferror@plt+0x34be0>
  435324:	mov	x20, x0
  435328:	cbnz	x0, 435344 <ferror@plt+0x329d4>
  43532c:	mov	x0, #0x0                   	// #0
  435330:	ldp	x19, x20, [sp, #16]
  435334:	ldp	x21, x22, [sp, #32]
  435338:	ldr	x23, [sp, #48]
  43533c:	ldp	x29, x30, [sp], #80
  435340:	ret
  435344:	ldr	x0, [x19, #24]
  435348:	ldrb	w0, [x0]
  43534c:	cmp	w0, #0x46
  435350:	mov	x0, x19
  435354:	b.ne	4353a4 <ferror@plt+0x32a34>  // b.any
  435358:	bl	435ff4 <ferror@plt+0x33684>
  43535c:	str	x0, [x20]
  435360:	ldr	x0, [x20]
  435364:	cbz	x0, 43532c <ferror@plt+0x329bc>
  435368:	ldr	w1, [x0]
  43536c:	sub	w1, w1, #0x1f
  435370:	cmp	w1, #0x1
  435374:	b.hi	435390 <ferror@plt+0x32a20>  // b.pmore
  435378:	ldr	x2, [sp, #72]
  43537c:	ldr	x1, [x0, #8]
  435380:	str	x2, [x0, #8]
  435384:	ldr	x0, [x20]
  435388:	str	x0, [sp, #72]
  43538c:	str	x1, [x20]
  435390:	ldr	x1, [sp, #72]
  435394:	mov	x0, x19
  435398:	bl	432654 <ferror@plt+0x2fce4>
  43539c:	cbnz	w0, 435414 <ferror@plt+0x32aa4>
  4353a0:	b	43532c <ferror@plt+0x329bc>
  4353a4:	bl	4352ec <ferror@plt+0x3297c>
  4353a8:	b	43535c <ferror@plt+0x329ec>
  4353ac:	ldrb	w1, [x3]
  4353b0:	sub	w2, w1, #0x30
  4353b4:	cmp	w2, #0x4a
  4353b8:	b.hi	43532c <ferror@plt+0x329bc>  // b.pmore
  4353bc:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x1b198>
  4353c0:	add	x0, x0, #0x974
  4353c4:	ldrh	w0, [x0, w2, uxtw #1]
  4353c8:	adr	x2, 4353d4 <ferror@plt+0x32a64>
  4353cc:	add	x0, x2, w0, sxth #2
  4353d0:	br	x0
  4353d4:	sub	w1, w1, #0x61
  4353d8:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x1b198>
  4353dc:	add	x0, x0, #0xa88
  4353e0:	sbfiz	x1, x1, #5, #32
  4353e4:	add	x1, x0, x1
  4353e8:	mov	x0, x19
  4353ec:	bl	4325d4 <ferror@plt+0x2fc64>
  4353f0:	str	x0, [sp, #72]
  4353f4:	ldr	x1, [x0, #8]
  4353f8:	ldr	w0, [x19, #72]
  4353fc:	ldr	w1, [x1, #8]
  435400:	add	w0, w0, w1
  435404:	str	w0, [x19, #72]
  435408:	ldr	x0, [x19, #24]
  43540c:	add	x0, x0, #0x1
  435410:	str	x0, [x19, #24]
  435414:	ldr	x0, [sp, #72]
  435418:	b	435330 <ferror@plt+0x329c0>
  43541c:	add	x3, x3, #0x1
  435420:	str	x3, [x19, #24]
  435424:	mov	x0, x19
  435428:	bl	434ed8 <ferror@plt+0x32568>
  43542c:	mov	x2, x0
  435430:	mov	x3, #0x0                   	// #0
  435434:	mov	w1, #0x28                  	// #40
  435438:	mov	x0, x19
  43543c:	bl	432564 <ferror@plt+0x2fbf4>
  435440:	b	43544c <ferror@plt+0x32adc>
  435444:	mov	x0, x19
  435448:	bl	435ff4 <ferror@plt+0x33684>
  43544c:	str	x0, [sp, #72]
  435450:	b	435390 <ferror@plt+0x32a20>
  435454:	mov	x0, x19
  435458:	bl	4360ac <ferror@plt+0x3373c>
  43545c:	b	43544c <ferror@plt+0x32adc>
  435460:	add	x1, x3, #0x1
  435464:	str	x1, [x19, #24]
  435468:	ldrb	w0, [x3, #1]
  43546c:	cmp	w0, #0x5f
  435470:	b.eq	4354cc <ferror@plt+0x32b5c>  // b.none
  435474:	sub	w0, w0, #0x30
  435478:	and	w0, w0, #0xff
  43547c:	cmp	w0, #0x9
  435480:	b.hi	4354c0 <ferror@plt+0x32b50>  // b.pmore
  435484:	ldr	x0, [x19, #24]
  435488:	add	x2, x0, #0x1
  43548c:	str	x2, [x19, #24]
  435490:	ldrb	w0, [x0, #1]
  435494:	sub	w0, w0, #0x30
  435498:	and	w0, w0, #0xff
  43549c:	cmp	w0, #0x9
  4354a0:	b.ls	435484 <ferror@plt+0x32b14>  // b.plast
  4354a4:	sub	w2, w2, w1
  4354a8:	mov	x0, x19
  4354ac:	bl	434ea4 <ferror@plt+0x32534>
  4354b0:	mov	x20, x0
  4354b4:	cbnz	x0, 4354d0 <ferror@plt+0x32b60>
  4354b8:	mov	x0, #0x0                   	// #0
  4354bc:	b	43544c <ferror@plt+0x32adc>
  4354c0:	mov	x0, x19
  4354c4:	bl	4372f4 <ferror@plt+0x34984>
  4354c8:	b	4354b0 <ferror@plt+0x32b40>
  4354cc:	mov	x20, #0x0                   	// #0
  4354d0:	ldr	x0, [x19, #24]
  4354d4:	ldrb	w1, [x0]
  4354d8:	cmp	w1, #0x5f
  4354dc:	b.ne	4354b8 <ferror@plt+0x32b48>  // b.any
  4354e0:	add	x0, x0, #0x1
  4354e4:	str	x0, [x19, #24]
  4354e8:	mov	x0, x19
  4354ec:	bl	4352ec <ferror@plt+0x3297c>
  4354f0:	mov	x3, x0
  4354f4:	mov	x2, x20
  4354f8:	mov	w1, #0x2a                  	// #42
  4354fc:	b	435438 <ferror@plt+0x32ac8>
  435500:	add	x3, x3, #0x1
  435504:	str	x3, [x19, #24]
  435508:	mov	x0, x19
  43550c:	bl	4352ec <ferror@plt+0x3297c>
  435510:	mov	x20, x0
  435514:	cbz	x0, 4354b8 <ferror@plt+0x32b48>
  435518:	mov	x0, x19
  43551c:	bl	4352ec <ferror@plt+0x3297c>
  435520:	mov	x3, x0
  435524:	cbz	x0, 4354b8 <ferror@plt+0x32b48>
  435528:	mov	x2, x20
  43552c:	mov	w1, #0x2b                  	// #43
  435530:	b	435438 <ferror@plt+0x32ac8>
  435534:	mov	x0, x19
  435538:	bl	4329f0 <ferror@plt+0x30080>
  43553c:	ldr	x20, [x19, #24]
  435540:	str	x0, [sp, #72]
  435544:	mov	x1, x0
  435548:	ldrb	w0, [x20]
  43554c:	cmp	w0, #0x49
  435550:	b.ne	435390 <ferror@plt+0x32a20>  // b.any
  435554:	ldr	w0, [x19, #80]
  435558:	cbnz	w0, 435580 <ferror@plt+0x32c10>
  43555c:	mov	x0, x19
  435560:	bl	432654 <ferror@plt+0x2fce4>
  435564:	cbz	w0, 43532c <ferror@plt+0x329bc>
  435568:	ldr	x20, [sp, #72]
  43556c:	mov	x0, x19
  435570:	bl	437470 <ferror@plt+0x34b00>
  435574:	mov	x3, x0
  435578:	mov	x2, x20
  43557c:	b	4355c0 <ferror@plt+0x32c50>
  435580:	ldr	w23, [x19, #40]
  435584:	mov	x0, x19
  435588:	ldr	w22, [x19, #56]
  43558c:	ldr	w21, [x19, #72]
  435590:	bl	437470 <ferror@plt+0x34b00>
  435594:	mov	x4, x0
  435598:	ldr	x0, [x19, #24]
  43559c:	ldrb	w0, [x0]
  4355a0:	cmp	w0, #0x49
  4355a4:	b.ne	4355c8 <ferror@plt+0x32c58>  // b.any
  4355a8:	ldr	x1, [sp, #72]
  4355ac:	mov	x0, x19
  4355b0:	bl	432654 <ferror@plt+0x2fce4>
  4355b4:	cbz	w0, 43532c <ferror@plt+0x329bc>
  4355b8:	ldr	x2, [sp, #72]
  4355bc:	mov	x3, x4
  4355c0:	mov	w1, #0x4                   	// #4
  4355c4:	b	435438 <ferror@plt+0x32ac8>
  4355c8:	str	x20, [x19, #24]
  4355cc:	str	w23, [x19, #40]
  4355d0:	str	w22, [x19, #56]
  4355d4:	str	w21, [x19, #72]
  4355d8:	b	435390 <ferror@plt+0x32a20>
  4355dc:	ldrb	w0, [x3, #1]
  4355e0:	sub	w0, w0, #0x30
  4355e4:	and	w0, w0, #0xff
  4355e8:	cmp	w0, #0x2f
  4355ec:	b.hi	435600 <ferror@plt+0x32c90>  // b.pmore
  4355f0:	mov	w1, #0xfffe03ff            	// #-130049
  4355f4:	movk	x1, #0x87ff, lsl #32
  4355f8:	lsr	x0, x1, x0
  4355fc:	tbnz	w0, #0, 435620 <ferror@plt+0x32cb0>
  435600:	mov	x0, x19
  435604:	bl	4360ac <ferror@plt+0x3373c>
  435608:	str	x0, [sp, #72]
  43560c:	cbz	x0, 435390 <ferror@plt+0x32a20>
  435610:	ldr	w0, [x0]
  435614:	cmp	w0, #0x18
  435618:	b.ne	435390 <ferror@plt+0x32a20>  // b.any
  43561c:	b	435414 <ferror@plt+0x32aa4>
  435620:	mov	x0, x19
  435624:	mov	w1, #0x0                   	// #0
  435628:	bl	435050 <ferror@plt+0x326e0>
  43562c:	mov	x20, x0
  435630:	ldr	x0, [x19, #24]
  435634:	str	x20, [sp, #72]
  435638:	ldrb	w0, [x0]
  43563c:	cmp	w0, #0x49
  435640:	b.ne	435414 <ferror@plt+0x32aa4>  // b.any
  435644:	b	43556c <ferror@plt+0x32bfc>
  435648:	add	x3, x3, #0x1
  43564c:	str	x3, [x19, #24]
  435650:	mov	x0, x19
  435654:	bl	4352ec <ferror@plt+0x3297c>
  435658:	mov	x2, x0
  43565c:	mov	x3, #0x0                   	// #0
  435660:	mov	w1, #0x24                  	// #36
  435664:	b	435438 <ferror@plt+0x32ac8>
  435668:	add	x3, x3, #0x1
  43566c:	str	x3, [x19, #24]
  435670:	mov	x0, x19
  435674:	bl	4352ec <ferror@plt+0x3297c>
  435678:	mov	x2, x0
  43567c:	mov	x3, #0x0                   	// #0
  435680:	mov	w1, #0x22                  	// #34
  435684:	b	435438 <ferror@plt+0x32ac8>
  435688:	add	x3, x3, #0x1
  43568c:	str	x3, [x19, #24]
  435690:	mov	x0, x19
  435694:	bl	4352ec <ferror@plt+0x3297c>
  435698:	mov	x2, x0
  43569c:	mov	x3, #0x0                   	// #0
  4356a0:	mov	w1, #0x23                  	// #35
  4356a4:	b	435438 <ferror@plt+0x32ac8>
  4356a8:	add	x3, x3, #0x1
  4356ac:	str	x3, [x19, #24]
  4356b0:	mov	x0, x19
  4356b4:	bl	4352ec <ferror@plt+0x3297c>
  4356b8:	mov	x2, x0
  4356bc:	mov	x3, #0x0                   	// #0
  4356c0:	mov	w1, #0x25                  	// #37
  4356c4:	b	435438 <ferror@plt+0x32ac8>
  4356c8:	add	x3, x3, #0x1
  4356cc:	str	x3, [x19, #24]
  4356d0:	mov	x0, x19
  4356d4:	bl	4352ec <ferror@plt+0x3297c>
  4356d8:	mov	x2, x0
  4356dc:	mov	x3, #0x0                   	// #0
  4356e0:	mov	w1, #0x26                  	// #38
  4356e4:	b	435438 <ferror@plt+0x32ac8>
  4356e8:	add	x3, x3, #0x1
  4356ec:	str	x3, [x19, #24]
  4356f0:	mov	x0, x19
  4356f4:	bl	434ed8 <ferror@plt+0x32568>
  4356f8:	mov	x20, x0
  4356fc:	ldr	x0, [x19, #24]
  435700:	str	x20, [sp, #72]
  435704:	ldrb	w0, [x0]
  435708:	cmp	w0, #0x49
  43570c:	b.ne	435730 <ferror@plt+0x32dc0>  // b.any
  435710:	mov	x0, x19
  435714:	bl	437470 <ferror@plt+0x34b00>
  435718:	mov	x2, x20
  43571c:	mov	x3, x0
  435720:	mov	w1, #0x4                   	// #4
  435724:	mov	x0, x19
  435728:	bl	432564 <ferror@plt+0x2fbf4>
  43572c:	str	x0, [sp, #72]
  435730:	mov	x0, x19
  435734:	bl	4352ec <ferror@plt+0x3297c>
  435738:	mov	w1, #0x21                  	// #33
  43573c:	mov	x2, x0
  435740:	ldr	x3, [sp, #72]
  435744:	b	435438 <ferror@plt+0x32ac8>
  435748:	add	x0, x3, #0x1
  43574c:	str	x0, [x19, #24]
  435750:	ldrb	w0, [x3, #1]
  435754:	cbz	w0, 43532c <ferror@plt+0x329bc>
  435758:	add	x0, x3, #0x2
  43575c:	str	x0, [x19, #24]
  435760:	ldrb	w0, [x3, #1]
  435764:	cmp	w0, #0x46
  435768:	b.eq	4358c0 <ferror@plt+0x32f50>  // b.none
  43576c:	sub	w0, w0, #0x54
  435770:	and	w1, w0, #0xff
  435774:	cmp	w1, #0x22
  435778:	b.hi	43532c <ferror@plt+0x329bc>  // b.pmore
  43577c:	cmp	w0, #0x22
  435780:	b.hi	43532c <ferror@plt+0x329bc>  // b.pmore
  435784:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  435788:	add	x1, x1, #0xa0c
  43578c:	ldrh	w0, [x1, w0, uxtw #1]
  435790:	adr	x1, 43579c <ferror@plt+0x32e2c>
  435794:	add	x0, x1, w0, sxth #2
  435798:	br	x0
  43579c:	mov	x0, x19
  4357a0:	bl	4372f4 <ferror@plt+0x34984>
  4357a4:	mov	x3, #0x0                   	// #0
  4357a8:	mov	x2, x0
  4357ac:	mov	w1, #0x43                  	// #67
  4357b0:	mov	x0, x19
  4357b4:	bl	432564 <ferror@plt+0x2fbf4>
  4357b8:	str	x0, [sp, #72]
  4357bc:	cbz	x0, 435390 <ferror@plt+0x32a20>
  4357c0:	ldr	x0, [x19, #24]
  4357c4:	ldrb	w1, [x0]
  4357c8:	cbnz	w1, 4357d4 <ferror@plt+0x32e64>
  4357cc:	str	xzr, [sp, #72]
  4357d0:	b	435390 <ferror@plt+0x32a20>
  4357d4:	add	x1, x0, #0x1
  4357d8:	str	x1, [x19, #24]
  4357dc:	ldrb	w0, [x0]
  4357e0:	cmp	w0, #0x45
  4357e4:	b.ne	4357cc <ferror@plt+0x32e5c>  // b.any
  4357e8:	b	435390 <ferror@plt+0x32a20>
  4357ec:	mov	x0, x19
  4357f0:	bl	4352ec <ferror@plt+0x3297c>
  4357f4:	mov	x3, #0x0                   	// #0
  4357f8:	mov	x2, x0
  4357fc:	mov	w1, #0x4b                  	// #75
  435800:	b	435438 <ferror@plt+0x32ac8>
  435804:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  435808:	add	x1, x1, #0x962
  43580c:	mov	w2, #0x4                   	// #4
  435810:	mov	x0, x19
  435814:	bl	434ea4 <ferror@plt+0x32534>
  435818:	str	x0, [sp, #72]
  43581c:	b	435414 <ferror@plt+0x32aa4>
  435820:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  435824:	mov	w2, #0xe                   	// #14
  435828:	add	x1, x1, #0x967
  43582c:	b	435810 <ferror@plt+0x32ea0>
  435830:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  435834:	add	x1, x1, #0xa88
  435838:	add	x1, x1, #0x340
  43583c:	mov	x0, x19
  435840:	bl	4325d4 <ferror@plt+0x2fc64>
  435844:	str	x0, [sp, #72]
  435848:	ldr	x1, [x0, #8]
  43584c:	ldr	w0, [x19, #72]
  435850:	ldr	w1, [x1, #8]
  435854:	add	w0, w0, w1
  435858:	str	w0, [x19, #72]
  43585c:	b	435414 <ferror@plt+0x32aa4>
  435860:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  435864:	add	x1, x1, #0xa88
  435868:	add	x1, x1, #0x360
  43586c:	b	43583c <ferror@plt+0x32ecc>
  435870:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  435874:	add	x1, x1, #0xa88
  435878:	add	x1, x1, #0x380
  43587c:	b	43583c <ferror@plt+0x32ecc>
  435880:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  435884:	add	x1, x1, #0xa88
  435888:	add	x1, x1, #0x3a0
  43588c:	b	43583c <ferror@plt+0x32ecc>
  435890:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  435894:	add	x1, x1, #0xa88
  435898:	add	x1, x1, #0x3c0
  43589c:	b	43583c <ferror@plt+0x32ecc>
  4358a0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  4358a4:	add	x1, x1, #0xa88
  4358a8:	add	x1, x1, #0x3e0
  4358ac:	b	43583c <ferror@plt+0x32ecc>
  4358b0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  4358b4:	add	x1, x1, #0xa88
  4358b8:	add	x1, x1, #0x400
  4358bc:	b	43583c <ferror@plt+0x32ecc>
  4358c0:	mov	x0, x19
  4358c4:	bl	432530 <ferror@plt+0x2fbc0>
  4358c8:	mov	w1, #0x2c                  	// #44
  4358cc:	str	x0, [sp, #72]
  4358d0:	str	w1, [x0]
  4358d4:	ldr	x1, [x19, #24]
  4358d8:	ldrb	w1, [x1]
  4358dc:	sub	w1, w1, #0x30
  4358e0:	and	w1, w1, #0xff
  4358e4:	cmp	w1, #0x9
  4358e8:	cset	w2, ls  // ls = plast
  4358ec:	strh	w2, [x0, #16]
  4358f0:	b.hi	4358fc <ferror@plt+0x32f8c>  // b.pmore
  4358f4:	add	x0, x19, #0x18
  4358f8:	bl	4328a8 <ferror@plt+0x2ff38>
  4358fc:	ldr	x20, [sp, #72]
  435900:	mov	x0, x19
  435904:	bl	4352ec <ferror@plt+0x3297c>
  435908:	str	x0, [x20, #8]
  43590c:	ldr	x0, [sp, #72]
  435910:	ldr	x0, [x0, #8]
  435914:	cbz	x0, 43532c <ferror@plt+0x329bc>
  435918:	add	x0, x19, #0x18
  43591c:	bl	4328a8 <ferror@plt+0x2ff38>
  435920:	ldr	x1, [x19, #24]
  435924:	ldrb	w0, [x1]
  435928:	cbz	w0, 435938 <ferror@plt+0x32fc8>
  43592c:	add	x0, x1, #0x1
  435930:	str	x0, [x19, #24]
  435934:	ldrb	w0, [x1]
  435938:	cmp	w0, #0x73
  43593c:	ldr	x0, [sp, #72]
  435940:	cset	w1, eq  // eq = none
  435944:	strh	w1, [x0, #18]
  435948:	b	435414 <ferror@plt+0x32aa4>
  43594c:	ldrb	w0, [x3, #2]
  435950:	cmp	w0, #0x5f
  435954:	b.ne	4359b0 <ferror@plt+0x33040>  // b.any
  435958:	add	x3, x3, #0x3
  43595c:	str	x3, [x19, #24]
  435960:	mov	x0, x19
  435964:	bl	4372f4 <ferror@plt+0x34984>
  435968:	mov	x20, x0
  43596c:	cbz	x0, 4359a8 <ferror@plt+0x33038>
  435970:	ldr	x0, [x19, #24]
  435974:	ldrb	w1, [x0]
  435978:	cmp	w1, #0x5f
  43597c:	b.ne	4359bc <ferror@plt+0x3304c>  // b.any
  435980:	add	x0, x0, #0x1
  435984:	str	x0, [x19, #24]
  435988:	mov	x0, x19
  43598c:	bl	4352ec <ferror@plt+0x3297c>
  435990:	mov	x3, x0
  435994:	mov	x2, x20
  435998:	mov	x0, x19
  43599c:	mov	w1, #0x2d                  	// #45
  4359a0:	bl	432564 <ferror@plt+0x2fbf4>
  4359a4:	mov	x20, x0
  4359a8:	str	x20, [sp, #72]
  4359ac:	b	435390 <ferror@plt+0x32a20>
  4359b0:	mov	x0, x19
  4359b4:	bl	432930 <ferror@plt+0x2ffc0>
  4359b8:	b	435968 <ferror@plt+0x32ff8>
  4359bc:	mov	x20, #0x0                   	// #0
  4359c0:	b	4359a8 <ferror@plt+0x33038>
  4359c4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  4359c8:	add	x1, x1, #0xa88
  4359cc:	add	x1, x1, #0x420
  4359d0:	b	43583c <ferror@plt+0x32ecc>
  4359d4:	stp	x29, x30, [sp, #-64]!
  4359d8:	mov	x29, sp
  4359dc:	stp	x19, x20, [sp, #16]
  4359e0:	mov	x19, x0
  4359e4:	add	x20, sp, #0x38
  4359e8:	str	x21, [sp, #32]
  4359ec:	mov	w21, #0x4f                  	// #79
  4359f0:	str	xzr, [sp, #56]
  4359f4:	ldr	x1, [x19, #24]
  4359f8:	ldrb	w0, [x1]
  4359fc:	cmp	w0, #0x45
  435a00:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  435a04:	b.eq	435a6c <ferror@plt+0x330fc>  // b.none
  435a08:	cmp	w0, #0x2e
  435a0c:	b.eq	435a6c <ferror@plt+0x330fc>  // b.none
  435a10:	cmp	w0, #0x52
  435a14:	ccmp	w0, w21, #0x4, ne  // ne = any
  435a18:	b.ne	435a28 <ferror@plt+0x330b8>  // b.any
  435a1c:	ldrb	w0, [x1, #1]
  435a20:	cmp	w0, #0x45
  435a24:	b.eq	435a6c <ferror@plt+0x330fc>  // b.none
  435a28:	mov	x0, x19
  435a2c:	bl	4352ec <ferror@plt+0x3297c>
  435a30:	mov	x2, x0
  435a34:	cbnz	x0, 435a4c <ferror@plt+0x330dc>
  435a38:	mov	x0, #0x0                   	// #0
  435a3c:	ldp	x19, x20, [sp, #16]
  435a40:	ldr	x21, [sp, #32]
  435a44:	ldp	x29, x30, [sp], #64
  435a48:	ret
  435a4c:	mov	x0, x19
  435a50:	mov	x3, #0x0                   	// #0
  435a54:	mov	w1, #0x2e                  	// #46
  435a58:	bl	432564 <ferror@plt+0x2fbf4>
  435a5c:	str	x0, [x20]
  435a60:	cbz	x0, 435a38 <ferror@plt+0x330c8>
  435a64:	add	x20, x0, #0x10
  435a68:	b	4359f4 <ferror@plt+0x33084>
  435a6c:	ldr	x0, [sp, #56]
  435a70:	cbz	x0, 435a38 <ferror@plt+0x330c8>
  435a74:	ldr	x1, [x0, #16]
  435a78:	cbnz	x1, 435a3c <ferror@plt+0x330cc>
  435a7c:	ldr	x1, [x0, #8]
  435a80:	ldr	w2, [x1]
  435a84:	cmp	w2, #0x27
  435a88:	b.ne	435a3c <ferror@plt+0x330cc>  // b.any
  435a8c:	ldr	x2, [x1, #8]
  435a90:	ldr	w1, [x2, #28]
  435a94:	cmp	w1, #0x9
  435a98:	b.ne	435a3c <ferror@plt+0x330cc>  // b.any
  435a9c:	ldr	w2, [x2, #8]
  435aa0:	ldr	w1, [x19, #72]
  435aa4:	sub	w1, w1, w2
  435aa8:	str	w1, [x19, #72]
  435aac:	str	xzr, [x0, #8]
  435ab0:	b	435a3c <ferror@plt+0x330cc>
  435ab4:	stp	x29, x30, [sp, #-32]!
  435ab8:	mov	x29, sp
  435abc:	stp	x19, x20, [sp, #16]
  435ac0:	mov	x19, x0
  435ac4:	ldr	x0, [x0, #24]
  435ac8:	ldrb	w2, [x0]
  435acc:	cbz	w2, 435adc <ferror@plt+0x3316c>
  435ad0:	add	x1, x0, #0x1
  435ad4:	str	x1, [x19, #24]
  435ad8:	ldrb	w2, [x0]
  435adc:	ldr	x0, [x19, #24]
  435ae0:	ldrb	w3, [x0]
  435ae4:	cbz	w3, 435ba0 <ferror@plt+0x33230>
  435ae8:	add	x1, x0, #0x1
  435aec:	str	x1, [x19, #24]
  435af0:	cmp	w2, #0x76
  435af4:	ldrb	w3, [x0]
  435af8:	b.ne	435b48 <ferror@plt+0x331d8>  // b.any
  435afc:	sub	w20, w3, #0x30
  435b00:	and	w0, w20, #0xff
  435b04:	cmp	w0, #0x9
  435b08:	b.hi	435ba0 <ferror@plt+0x33230>  // b.pmore
  435b0c:	mov	x0, x19
  435b10:	bl	434ed8 <ferror@plt+0x32568>
  435b14:	mov	x5, x0
  435b18:	mov	x0, x19
  435b1c:	bl	432530 <ferror@plt+0x2fbc0>
  435b20:	mov	x4, x0
  435b24:	mov	x2, x5
  435b28:	mov	w1, w20
  435b2c:	bl	43524c <ferror@plt+0x328dc>
  435b30:	cbnz	w0, 435b38 <ferror@plt+0x331c8>
  435b34:	mov	x4, #0x0                   	// #0
  435b38:	mov	x0, x4
  435b3c:	ldp	x19, x20, [sp, #16]
  435b40:	ldp	x29, x30, [sp], #32
  435b44:	ret
  435b48:	cmp	w2, #0x63
  435b4c:	mov	w0, #0x76                  	// #118
  435b50:	ccmp	w3, w0, #0x0, eq  // eq = none
  435b54:	b.ne	435ba0 <ferror@plt+0x33230>  // b.any
  435b58:	ldp	w0, w20, [x19, #76]
  435b5c:	cmp	w0, #0x0
  435b60:	cset	w0, eq  // eq = none
  435b64:	str	w0, [x19, #80]
  435b68:	mov	x0, x19
  435b6c:	bl	4352ec <ferror@plt+0x3297c>
  435b70:	mov	x2, x0
  435b74:	ldr	w0, [x19, #80]
  435b78:	mov	x3, #0x0                   	// #0
  435b7c:	cbz	w0, 435b98 <ferror@plt+0x33228>
  435b80:	mov	w1, #0x35                  	// #53
  435b84:	mov	x0, x19
  435b88:	bl	432564 <ferror@plt+0x2fbf4>
  435b8c:	mov	x4, x0
  435b90:	str	w20, [x19, #80]
  435b94:	b	435b38 <ferror@plt+0x331c8>
  435b98:	mov	w1, #0x34                  	// #52
  435b9c:	b	435b84 <ferror@plt+0x33214>
  435ba0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  435ba4:	add	x1, x1, #0xa88
  435ba8:	add	x1, x1, #0x5c8
  435bac:	mov	w5, #0x43                  	// #67
  435bb0:	mov	w4, #0x0                   	// #0
  435bb4:	mov	w7, #0x2                   	// #2
  435bb8:	mov	w8, #0x18                  	// #24
  435bbc:	sub	w0, w5, w4
  435bc0:	sdiv	w0, w0, w7
  435bc4:	add	w0, w0, w4
  435bc8:	smull	x6, w0, w8
  435bcc:	add	x9, x1, x6
  435bd0:	ldr	x6, [x1, x6]
  435bd4:	ldrb	w10, [x6]
  435bd8:	cmp	w10, w2
  435bdc:	b.ne	435c0c <ferror@plt+0x3329c>  // b.any
  435be0:	ldrb	w6, [x6, #1]
  435be4:	cmp	w6, w3
  435be8:	b.ne	435c0c <ferror@plt+0x3329c>  // b.any
  435bec:	mov	x0, x19
  435bf0:	bl	432530 <ferror@plt+0x2fbc0>
  435bf4:	mov	x4, x0
  435bf8:	cbz	x0, 435b38 <ferror@plt+0x331c8>
  435bfc:	mov	w0, #0x32                  	// #50
  435c00:	str	w0, [x4]
  435c04:	str	x9, [x4, #8]
  435c08:	b	435b38 <ferror@plt+0x331c8>
  435c0c:	b.hi	435c18 <ferror@plt+0x332a8>  // b.pmore
  435c10:	add	w4, w0, #0x1
  435c14:	mov	w0, w5
  435c18:	cmp	w4, w0
  435c1c:	b.eq	435b34 <ferror@plt+0x331c4>  // b.none
  435c20:	mov	w5, w0
  435c24:	b	435bbc <ferror@plt+0x3324c>
  435c28:	stp	x29, x30, [sp, #-48]!
  435c2c:	mov	x29, sp
  435c30:	ldr	x3, [x0, #24]
  435c34:	stp	x19, x20, [sp, #16]
  435c38:	mov	x20, x0
  435c3c:	str	x21, [sp, #32]
  435c40:	ldrb	w1, [x3]
  435c44:	sub	w2, w1, #0x30
  435c48:	and	w2, w2, #0xff
  435c4c:	cmp	w2, #0x9
  435c50:	b.hi	435c84 <ferror@plt+0x33314>  // b.pmore
  435c54:	bl	434ed8 <ferror@plt+0x32568>
  435c58:	mov	x19, x0
  435c5c:	ldr	x0, [x20, #24]
  435c60:	ldrb	w0, [x0]
  435c64:	cmp	w0, #0x42
  435c68:	b.ne	435e74 <ferror@plt+0x33504>  // b.any
  435c6c:	mov	x1, x19
  435c70:	mov	x0, x20
  435c74:	ldp	x19, x20, [sp, #16]
  435c78:	ldr	x21, [sp, #32]
  435c7c:	ldp	x29, x30, [sp], #48
  435c80:	b	434fe0 <ferror@plt+0x32670>
  435c84:	sub	w2, w1, #0x61
  435c88:	and	w2, w2, #0xff
  435c8c:	cmp	w2, #0x19
  435c90:	b.hi	435d18 <ferror@plt+0x333a8>  // b.pmore
  435c94:	cmp	w1, #0x6f
  435c98:	b.ne	435cb0 <ferror@plt+0x33340>  // b.any
  435c9c:	ldrb	w0, [x3, #1]
  435ca0:	cmp	w0, #0x6e
  435ca4:	b.ne	435cb0 <ferror@plt+0x33340>  // b.any
  435ca8:	add	x3, x3, #0x2
  435cac:	str	x3, [x20, #24]
  435cb0:	mov	x0, x20
  435cb4:	bl	435ab4 <ferror@plt+0x33144>
  435cb8:	mov	x19, x0
  435cbc:	cbz	x0, 435d68 <ferror@plt+0x333f8>
  435cc0:	ldr	w0, [x0]
  435cc4:	cmp	w0, #0x32
  435cc8:	b.ne	435c5c <ferror@plt+0x332ec>  // b.any
  435ccc:	ldr	x2, [x19, #8]
  435cd0:	ldr	w0, [x20, #72]
  435cd4:	ldr	w1, [x2, #16]
  435cd8:	add	w0, w0, #0x7
  435cdc:	add	w0, w0, w1
  435ce0:	str	w0, [x20, #72]
  435ce4:	ldr	x0, [x2]
  435ce8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  435cec:	add	x1, x1, #0x976
  435cf0:	bl	4026d0 <strcmp@plt>
  435cf4:	cbnz	w0, 435c5c <ferror@plt+0x332ec>
  435cf8:	mov	x0, x20
  435cfc:	bl	434ed8 <ferror@plt+0x32568>
  435d00:	mov	x2, x19
  435d04:	mov	x3, x0
  435d08:	mov	w1, #0x37                  	// #55
  435d0c:	mov	x0, x20
  435d10:	bl	432564 <ferror@plt+0x2fbf4>
  435d14:	b	435c58 <ferror@plt+0x332e8>
  435d18:	sub	w2, w1, #0x43
  435d1c:	and	w2, w2, #0xff
  435d20:	cmp	w2, #0x1
  435d24:	b.hi	435e54 <ferror@plt+0x334e4>  // b.pmore
  435d28:	ldr	x5, [x0, #64]
  435d2c:	cbz	x5, 435d54 <ferror@plt+0x333e4>
  435d30:	ldr	w0, [x5]
  435d34:	cbnz	w0, 435d4c <ferror@plt+0x333dc>
  435d38:	ldr	w1, [x5, #16]
  435d3c:	ldr	w0, [x20, #72]
  435d40:	add	w0, w0, w1
  435d44:	str	w0, [x20, #72]
  435d48:	b	435d54 <ferror@plt+0x333e4>
  435d4c:	cmp	w0, #0x18
  435d50:	b.eq	435d38 <ferror@plt+0x333c8>  // b.none
  435d54:	ldrb	w0, [x3]
  435d58:	cmp	w0, #0x43
  435d5c:	b.eq	435d70 <ferror@plt+0x33400>  // b.none
  435d60:	cmp	w0, #0x44
  435d64:	b.eq	435de4 <ferror@plt+0x33474>  // b.none
  435d68:	mov	x19, #0x0                   	// #0
  435d6c:	b	435c5c <ferror@plt+0x332ec>
  435d70:	ldrb	w0, [x3, #1]
  435d74:	cmp	w0, #0x49
  435d78:	b.ne	435ddc <ferror@plt+0x3346c>  // b.any
  435d7c:	add	x3, x3, #0x1
  435d80:	str	x3, [x20, #24]
  435d84:	mov	w3, #0x1                   	// #1
  435d88:	ldr	x0, [x20, #24]
  435d8c:	ldrb	w1, [x0, #1]
  435d90:	sub	w2, w1, #0x31
  435d94:	and	w2, w2, #0xff
  435d98:	cmp	w2, #0x4
  435d9c:	b.hi	435d68 <ferror@plt+0x333f8>  // b.pmore
  435da0:	add	x0, x0, #0x2
  435da4:	str	x0, [x20, #24]
  435da8:	sub	w21, w1, #0x30
  435dac:	cbz	w3, 435db8 <ferror@plt+0x33448>
  435db0:	mov	x0, x20
  435db4:	bl	4352ec <ferror@plt+0x3297c>
  435db8:	ldr	x4, [x20, #64]
  435dbc:	mov	x0, x20
  435dc0:	bl	432530 <ferror@plt+0x2fbc0>
  435dc4:	mov	x19, x0
  435dc8:	mov	x2, x4
  435dcc:	mov	w1, w21
  435dd0:	bl	43527c <ferror@plt+0x3290c>
  435dd4:	cbnz	w0, 435c5c <ferror@plt+0x332ec>
  435dd8:	b	435d68 <ferror@plt+0x333f8>
  435ddc:	mov	w3, #0x0                   	// #0
  435de0:	b	435d88 <ferror@plt+0x33418>
  435de4:	ldrb	w0, [x3, #1]
  435de8:	sub	w0, w0, #0x30
  435dec:	cmp	w0, #0x5
  435df0:	b.hi	435d68 <ferror@plt+0x333f8>  // b.pmore
  435df4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x1b198>
  435df8:	add	x1, x1, #0xa54
  435dfc:	ldrb	w0, [x1, w0, uxtw]
  435e00:	adr	x1, 435e0c <ferror@plt+0x3349c>
  435e04:	add	x0, x1, w0, sxtb #2
  435e08:	br	x0
  435e0c:	mov	w4, #0x2                   	// #2
  435e10:	add	x3, x3, #0x2
  435e14:	str	x3, [x20, #24]
  435e18:	mov	x0, x20
  435e1c:	bl	432530 <ferror@plt+0x2fbc0>
  435e20:	mov	x19, x0
  435e24:	mov	x2, x5
  435e28:	mov	w1, w4
  435e2c:	bl	4352b4 <ferror@plt+0x32944>
  435e30:	b	435dd4 <ferror@plt+0x33464>
  435e34:	mov	w4, #0x3                   	// #3
  435e38:	b	435e10 <ferror@plt+0x334a0>
  435e3c:	mov	w4, #0x4                   	// #4
  435e40:	b	435e10 <ferror@plt+0x334a0>
  435e44:	mov	w4, #0x5                   	// #5
  435e48:	b	435e10 <ferror@plt+0x334a0>
  435e4c:	mov	w4, #0x1                   	// #1
  435e50:	b	435e10 <ferror@plt+0x334a0>
  435e54:	cmp	w1, #0x4c
  435e58:	b.ne	435e98 <ferror@plt+0x33528>  // b.any
  435e5c:	add	x3, x3, #0x1
  435e60:	str	x3, [x0, #24]
  435e64:	bl	434ed8 <ferror@plt+0x32568>
  435e68:	mov	x19, x0
  435e6c:	cbnz	x0, 435e88 <ferror@plt+0x33518>
  435e70:	mov	x19, #0x0                   	// #0
  435e74:	mov	x0, x19
  435e78:	ldp	x19, x20, [sp, #16]
  435e7c:	ldr	x21, [sp, #32]
  435e80:	ldp	x29, x30, [sp], #48
  435e84:	ret
  435e88:	mov	x0, x20
  435e8c:	bl	432b90 <ferror@plt+0x30220>
  435e90:	cbnz	w0, 435c5c <ferror@plt+0x332ec>
  435e94:	b	435e70 <ferror@plt+0x33500>
  435e98:	cmp	w1, #0x55
  435e9c:	b.ne	435e70 <ferror@plt+0x33500>  // b.any
  435ea0:	ldrb	w1, [x3, #1]
  435ea4:	cmp	w1, #0x6c
  435ea8:	b.eq	435efc <ferror@plt+0x3358c>  // b.none
  435eac:	cmp	w1, #0x74
  435eb0:	b.ne	435e70 <ferror@plt+0x33500>  // b.any
  435eb4:	add	x1, x3, #0x1
  435eb8:	str	x1, [x0, #24]
  435ebc:	ldrb	w1, [x3, #1]
  435ec0:	cmp	w1, #0x74
  435ec4:	b.ne	435d68 <ferror@plt+0x333f8>  // b.any
  435ec8:	add	x3, x3, #0x2
  435ecc:	str	x3, [x0, #24]
  435ed0:	bl	43296c <ferror@plt+0x2fffc>
  435ed4:	sxtw	x4, w0
  435ed8:	tbnz	w4, #31, 435d68 <ferror@plt+0x333f8>
  435edc:	mov	x0, x20
  435ee0:	bl	432530 <ferror@plt+0x2fbc0>
  435ee4:	mov	x19, x0
  435ee8:	cbz	x0, 435f6c <ferror@plt+0x335fc>
  435eec:	mov	w0, #0x48                  	// #72
  435ef0:	str	w0, [x19]
  435ef4:	str	x4, [x19, #8]
  435ef8:	b	435f6c <ferror@plt+0x335fc>
  435efc:	add	x1, x3, #0x1
  435f00:	str	x1, [x0, #24]
  435f04:	ldrb	w1, [x3, #1]
  435f08:	cmp	w1, #0x6c
  435f0c:	b.ne	435d68 <ferror@plt+0x333f8>  // b.any
  435f10:	add	x3, x3, #0x2
  435f14:	str	x3, [x0, #24]
  435f18:	bl	4359d4 <ferror@plt+0x33064>
  435f1c:	mov	x9, x0
  435f20:	cbz	x0, 435d68 <ferror@plt+0x333f8>
  435f24:	ldr	x0, [x20, #24]
  435f28:	ldrb	w1, [x0]
  435f2c:	cmp	w1, #0x45
  435f30:	b.ne	435d68 <ferror@plt+0x333f8>  // b.any
  435f34:	add	x0, x0, #0x1
  435f38:	str	x0, [x20, #24]
  435f3c:	mov	x0, x20
  435f40:	bl	43296c <ferror@plt+0x2fffc>
  435f44:	mov	w4, w0
  435f48:	tbnz	w0, #31, 435d68 <ferror@plt+0x333f8>
  435f4c:	mov	x0, x20
  435f50:	bl	432530 <ferror@plt+0x2fbc0>
  435f54:	mov	x19, x0
  435f58:	cbz	x0, 435f6c <ferror@plt+0x335fc>
  435f5c:	mov	w0, #0x46                  	// #70
  435f60:	str	w0, [x19]
  435f64:	str	x9, [x19, #8]
  435f68:	str	w4, [x19, #16]
  435f6c:	mov	x1, x19
  435f70:	mov	x0, x20
  435f74:	bl	432654 <ferror@plt+0x2fce4>
  435f78:	b	435dd4 <ferror@plt+0x33464>
  435f7c:	stp	x29, x30, [sp, #-32]!
  435f80:	mov	x29, sp
  435f84:	stp	x19, x20, [sp, #16]
  435f88:	mov	x19, x0
  435f8c:	ldr	x0, [x0, #24]
  435f90:	ldrb	w2, [x0]
  435f94:	cmp	w2, #0x4a
  435f98:	b.ne	435fc4 <ferror@plt+0x33654>  // b.any
  435f9c:	add	x0, x0, #0x1
  435fa0:	str	x0, [x19, #24]
  435fa4:	mov	x0, x19
  435fa8:	bl	4352ec <ferror@plt+0x3297c>
  435fac:	mov	x20, x0
  435fb0:	cbnz	x0, 435fcc <ferror@plt+0x3365c>
  435fb4:	mov	x0, #0x0                   	// #0
  435fb8:	ldp	x19, x20, [sp, #16]
  435fbc:	ldp	x29, x30, [sp], #32
  435fc0:	ret
  435fc4:	cbnz	w1, 435fa4 <ferror@plt+0x33634>
  435fc8:	mov	x20, #0x0                   	// #0
  435fcc:	mov	x0, x19
  435fd0:	bl	4359d4 <ferror@plt+0x33064>
  435fd4:	mov	x3, x0
  435fd8:	cbz	x0, 435fb4 <ferror@plt+0x33644>
  435fdc:	mov	x2, x20
  435fe0:	mov	x0, x19
  435fe4:	ldp	x19, x20, [sp, #16]
  435fe8:	mov	w1, #0x29                  	// #41
  435fec:	ldp	x29, x30, [sp], #32
  435ff0:	b	432564 <ferror@plt+0x2fbf4>
  435ff4:	stp	x29, x30, [sp, #-32]!
  435ff8:	mov	x29, sp
  435ffc:	str	x19, [sp, #16]
  436000:	mov	x19, x0
  436004:	ldr	w0, [x0, #16]
  436008:	tbnz	w0, #18, 436020 <ferror@plt+0x336b0>
  43600c:	ldr	w0, [x19, #84]
  436010:	cmp	w0, #0x800
  436014:	b.hi	4360a4 <ferror@plt+0x33734>  // b.pmore
  436018:	add	w0, w0, #0x1
  43601c:	str	w0, [x19, #84]
  436020:	ldr	x0, [x19, #24]
  436024:	ldrb	w1, [x0]
  436028:	cmp	w1, #0x46
  43602c:	b.eq	436054 <ferror@plt+0x336e4>  // b.none
  436030:	mov	x0, #0x0                   	// #0
  436034:	ldr	w1, [x19, #16]
  436038:	tbnz	w1, #18, 436048 <ferror@plt+0x336d8>
  43603c:	ldr	w1, [x19, #84]
  436040:	sub	w1, w1, #0x1
  436044:	str	w1, [x19, #84]
  436048:	ldr	x19, [sp, #16]
  43604c:	ldp	x29, x30, [sp], #32
  436050:	ret
  436054:	add	x1, x0, #0x1
  436058:	str	x1, [x19, #24]
  43605c:	add	x0, x0, #0x2
  436060:	ldurb	w2, [x0, #-1]
  436064:	cmp	w2, #0x59
  436068:	csel	x0, x0, x1, eq  // eq = none
  43606c:	str	x0, [x19, #24]
  436070:	mov	w1, #0x1                   	// #1
  436074:	mov	x0, x19
  436078:	bl	435f7c <ferror@plt+0x3360c>
  43607c:	mov	x1, x0
  436080:	mov	x0, x19
  436084:	bl	4325fc <ferror@plt+0x2fc8c>
  436088:	ldr	x1, [x19, #24]
  43608c:	ldrb	w2, [x1]
  436090:	cmp	w2, #0x45
  436094:	b.ne	436030 <ferror@plt+0x336c0>  // b.any
  436098:	add	x1, x1, #0x1
  43609c:	str	x1, [x19, #24]
  4360a0:	b	436034 <ferror@plt+0x336c4>
  4360a4:	mov	x0, #0x0                   	// #0
  4360a8:	b	436048 <ferror@plt+0x336d8>
  4360ac:	stp	x29, x30, [sp, #-96]!
  4360b0:	mov	x29, sp
  4360b4:	ldr	x1, [x0, #24]
  4360b8:	stp	x19, x20, [sp, #16]
  4360bc:	stp	x21, x22, [sp, #32]
  4360c0:	stp	x23, x24, [sp, #48]
  4360c4:	str	x25, [sp, #64]
  4360c8:	ldrb	w2, [x1]
  4360cc:	cmp	w2, #0x55
  4360d0:	b.eq	436438 <ferror@plt+0x33ac8>  // b.none
  4360d4:	mov	x19, x0
  4360d8:	b.hi	43611c <ferror@plt+0x337ac>  // b.pmore
  4360dc:	cmp	w2, #0x4e
  4360e0:	b.eq	4361c0 <ferror@plt+0x33850>  // b.none
  4360e4:	cmp	w2, #0x53
  4360e8:	b.eq	436444 <ferror@plt+0x33ad4>  // b.none
  4360ec:	mov	x0, x19
  4360f0:	bl	435c28 <ferror@plt+0x332b8>
  4360f4:	mov	x20, x0
  4360f8:	ldr	x0, [x19, #24]
  4360fc:	ldrb	w0, [x0]
  436100:	cmp	w0, #0x49
  436104:	b.ne	43638c <ferror@plt+0x33a1c>  // b.any
  436108:	mov	x1, x20
  43610c:	mov	x0, x19
  436110:	bl	432654 <ferror@plt+0x2fce4>
  436114:	cbnz	w0, 436474 <ferror@plt+0x33b04>
  436118:	b	4361dc <ferror@plt+0x3386c>
  43611c:	cmp	w2, #0x5a
  436120:	b.ne	4360ec <ferror@plt+0x3377c>  // b.any
  436124:	add	x1, x1, #0x1
  436128:	str	x1, [x0, #24]
  43612c:	mov	w1, #0x0                   	// #0
  436130:	bl	4364dc <ferror@plt+0x33b6c>
  436134:	mov	x20, x0
  436138:	cbz	x0, 4361dc <ferror@plt+0x3386c>
  43613c:	ldr	x1, [x19, #24]
  436140:	ldrb	w0, [x1]
  436144:	cmp	w0, #0x45
  436148:	b.ne	4361dc <ferror@plt+0x3386c>  // b.any
  43614c:	add	x0, x1, #0x1
  436150:	str	x0, [x19, #24]
  436154:	ldrb	w0, [x1, #1]
  436158:	cmp	w0, #0x73
  43615c:	b.ne	4363a8 <ferror@plt+0x33a38>  // b.any
  436160:	add	x1, x1, #0x2
  436164:	str	x1, [x19, #24]
  436168:	mov	x0, x19
  43616c:	bl	432b90 <ferror@plt+0x30220>
  436170:	cbz	w0, 4361dc <ferror@plt+0x3386c>
  436174:	mov	x0, x19
  436178:	mov	w2, #0xe                   	// #14
  43617c:	adrp	x1, 451000 <_obstack_memory_used@@Base+0x17198>
  436180:	add	x1, x1, #0xaf7
  436184:	bl	434ea4 <ferror@plt+0x32534>
  436188:	mov	x3, x0
  43618c:	ldr	w0, [x20]
  436190:	cmp	w0, #0x3
  436194:	b.ne	4361ac <ferror@plt+0x3383c>  // b.any
  436198:	ldr	x0, [x20, #16]
  43619c:	ldr	w1, [x0]
  4361a0:	cmp	w1, #0x29
  4361a4:	b.ne	4361ac <ferror@plt+0x3383c>  // b.any
  4361a8:	str	xzr, [x0, #8]
  4361ac:	mov	x2, x20
  4361b0:	mov	w1, #0x2                   	// #2
  4361b4:	mov	x0, x19
  4361b8:	bl	432564 <ferror@plt+0x2fbf4>
  4361bc:	b	43643c <ferror@plt+0x33acc>
  4361c0:	add	x1, x1, #0x1
  4361c4:	str	x1, [x0, #24]
  4361c8:	mov	w2, #0x1                   	// #1
  4361cc:	add	x1, sp, #0x58
  4361d0:	bl	437550 <ferror@plt+0x34be0>
  4361d4:	mov	x21, x0
  4361d8:	cbnz	x0, 4361e4 <ferror@plt+0x33874>
  4361dc:	mov	x20, #0x0                   	// #0
  4361e0:	b	43638c <ferror@plt+0x33a1c>
  4361e4:	mov	x24, #0x3ff                 	// #1023
  4361e8:	mov	x0, x19
  4361ec:	mov	x1, #0x0                   	// #0
  4361f0:	movk	x24, #0x1008, lsl #16
  4361f4:	bl	4325fc <ferror@plt+0x2fc8c>
  4361f8:	mov	x22, x0
  4361fc:	mov	x25, #0x0                   	// #0
  436200:	mov	w23, #0x1                   	// #1
  436204:	movk	x24, #0x20, lsl #32
  436208:	ldr	x1, [x19, #24]
  43620c:	ldrb	w20, [x1]
  436210:	cbnz	w20, 43621c <ferror@plt+0x338ac>
  436214:	str	xzr, [x21]
  436218:	b	4361dc <ferror@plt+0x3386c>
  43621c:	cmp	w20, #0x44
  436220:	b.ne	436274 <ferror@plt+0x33904>  // b.any
  436224:	ldrb	w0, [x1, #1]
  436228:	and	w0, w0, #0xffffffdf
  43622c:	and	w0, w0, #0xff
  436230:	cmp	w0, #0x54
  436234:	mov	x0, x19
  436238:	b.ne	43626c <ferror@plt+0x338fc>  // b.any
  43623c:	bl	4352ec <ferror@plt+0x3297c>
  436240:	mov	x4, x0
  436244:	cbnz	x25, 4362e0 <ferror@plt+0x33970>
  436248:	ldr	x0, [x19, #24]
  43624c:	ldrb	w0, [x0]
  436250:	cmp	w0, #0x45
  436254:	b.eq	4362c8 <ferror@plt+0x33958>  // b.none
  436258:	mov	x1, x4
  43625c:	mov	x0, x19
  436260:	bl	432654 <ferror@plt+0x2fce4>
  436264:	cbnz	w0, 4362c8 <ferror@plt+0x33958>
  436268:	b	436214 <ferror@plt+0x338a4>
  43626c:	bl	435c28 <ferror@plt+0x332b8>
  436270:	b	436240 <ferror@plt+0x338d0>
  436274:	sub	w0, w20, #0x30
  436278:	and	w2, w0, #0xff
  43627c:	cmp	w2, #0x26
  436280:	lsr	x0, x24, x0
  436284:	sub	w2, w20, #0x61
  436288:	mvn	x0, x0
  43628c:	and	w2, w2, #0xff
  436290:	and	w0, w0, #0x1
  436294:	csel	w0, w0, w23, cc  // cc = lo, ul, last
  436298:	cmp	w2, #0x19
  43629c:	cset	w2, ls  // ls = plast
  4362a0:	eor	w0, w0, #0x1
  4362a4:	orr	w0, w2, w0
  4362a8:	cbnz	w0, 4362d0 <ferror@plt+0x33960>
  4362ac:	cmp	w20, #0x53
  4362b0:	b.ne	4362e8 <ferror@plt+0x33978>  // b.any
  4362b4:	mov	x0, x19
  4362b8:	mov	w1, #0x1                   	// #1
  4362bc:	bl	435050 <ferror@plt+0x326e0>
  4362c0:	mov	x4, x0
  4362c4:	cbnz	x25, 4362e0 <ferror@plt+0x33970>
  4362c8:	mov	x25, x4
  4362cc:	b	436208 <ferror@plt+0x33898>
  4362d0:	mov	x0, x19
  4362d4:	bl	435c28 <ferror@plt+0x332b8>
  4362d8:	mov	x4, x0
  4362dc:	cbz	x25, 436318 <ferror@plt+0x339a8>
  4362e0:	mov	w1, #0x1                   	// #1
  4362e4:	b	436304 <ferror@plt+0x33994>
  4362e8:	cmp	w20, #0x49
  4362ec:	b.ne	436324 <ferror@plt+0x339b4>  // b.any
  4362f0:	cbz	x25, 436214 <ferror@plt+0x338a4>
  4362f4:	mov	x0, x19
  4362f8:	bl	437470 <ferror@plt+0x34b00>
  4362fc:	mov	x4, x0
  436300:	mov	w1, #0x4                   	// #4
  436304:	mov	x3, x4
  436308:	mov	x2, x25
  43630c:	mov	x0, x19
  436310:	bl	432564 <ferror@plt+0x2fbf4>
  436314:	mov	x4, x0
  436318:	cmp	w20, #0x53
  43631c:	b.ne	436248 <ferror@plt+0x338d8>  // b.any
  436320:	b	4362c8 <ferror@plt+0x33958>
  436324:	cmp	w20, #0x54
  436328:	b.ne	436338 <ferror@plt+0x339c8>  // b.any
  43632c:	mov	x0, x19
  436330:	bl	4329f0 <ferror@plt+0x30080>
  436334:	b	436240 <ferror@plt+0x338d0>
  436338:	cmp	w20, #0x45
  43633c:	b.eq	43635c <ferror@plt+0x339ec>  // b.none
  436340:	cmp	w20, #0x4d
  436344:	b.ne	436214 <ferror@plt+0x338a4>  // b.any
  436348:	cbz	x25, 436214 <ferror@plt+0x338a4>
  43634c:	add	x1, x1, #0x1
  436350:	mov	x4, x25
  436354:	str	x1, [x19, #24]
  436358:	b	4362c8 <ferror@plt+0x33958>
  43635c:	str	x25, [x21]
  436360:	cbz	x25, 4361dc <ferror@plt+0x3386c>
  436364:	cbz	x22, 436374 <ferror@plt+0x33a04>
  436368:	ldr	x0, [sp, #88]
  43636c:	str	x0, [x22, #8]
  436370:	str	x22, [sp, #88]
  436374:	ldrb	w0, [x1]
  436378:	cmp	w0, #0x45
  43637c:	b.ne	4361dc <ferror@plt+0x3386c>  // b.any
  436380:	ldr	x20, [sp, #88]
  436384:	add	x1, x1, #0x1
  436388:	str	x1, [x19, #24]
  43638c:	mov	x0, x20
  436390:	ldp	x19, x20, [sp, #16]
  436394:	ldp	x21, x22, [sp, #32]
  436398:	ldp	x23, x24, [sp, #48]
  43639c:	ldr	x25, [sp, #64]
  4363a0:	ldp	x29, x30, [sp], #96
  4363a4:	ret
  4363a8:	cmp	w0, #0x64
  4363ac:	b.ne	4363e8 <ferror@plt+0x33a78>  // b.any
  4363b0:	add	x1, x1, #0x2
  4363b4:	str	x1, [x19, #24]
  4363b8:	mov	x0, x19
  4363bc:	bl	43296c <ferror@plt+0x2fffc>
  4363c0:	mov	w21, w0
  4363c4:	tbnz	w0, #31, 4361dc <ferror@plt+0x3386c>
  4363c8:	mov	x0, x19
  4363cc:	bl	4360ac <ferror@plt+0x3373c>
  4363d0:	mov	x10, x0
  4363d4:	cbnz	x0, 4363f0 <ferror@plt+0x33a80>
  4363d8:	cmn	w21, #0x1
  4363dc:	b.ne	436414 <ferror@plt+0x33aa4>  // b.any
  4363e0:	mov	x3, x10
  4363e4:	b	43618c <ferror@plt+0x3381c>
  4363e8:	mov	w21, #0xffffffff            	// #-1
  4363ec:	b	4363c8 <ferror@plt+0x33a58>
  4363f0:	ldr	w0, [x0]
  4363f4:	cmp	w0, #0x46
  4363f8:	b.eq	4363d8 <ferror@plt+0x33a68>  // b.none
  4363fc:	cmp	w0, #0x48
  436400:	b.eq	4363d8 <ferror@plt+0x33a68>  // b.none
  436404:	mov	x0, x19
  436408:	bl	432b90 <ferror@plt+0x30220>
  43640c:	cbnz	w0, 4363d8 <ferror@plt+0x33a68>
  436410:	b	4361dc <ferror@plt+0x3386c>
  436414:	mov	x0, x19
  436418:	bl	432530 <ferror@plt+0x2fbc0>
  43641c:	mov	x3, x0
  436420:	cbz	x0, 43618c <ferror@plt+0x3381c>
  436424:	mov	w0, #0x47                  	// #71
  436428:	str	w0, [x3]
  43642c:	str	x10, [x3, #8]
  436430:	str	w21, [x3, #16]
  436434:	b	43618c <ferror@plt+0x3381c>
  436438:	bl	435c28 <ferror@plt+0x332b8>
  43643c:	mov	x20, x0
  436440:	b	43638c <ferror@plt+0x33a1c>
  436444:	ldrb	w2, [x1, #1]
  436448:	cmp	w2, #0x74
  43644c:	b.eq	43648c <ferror@plt+0x33b1c>  // b.none
  436450:	mov	w1, #0x0                   	// #0
  436454:	bl	435050 <ferror@plt+0x326e0>
  436458:	mov	x20, x0
  43645c:	mov	w0, #0x1                   	// #1
  436460:	ldr	x1, [x19, #24]
  436464:	ldrb	w1, [x1]
  436468:	cmp	w1, #0x49
  43646c:	b.ne	43638c <ferror@plt+0x33a1c>  // b.any
  436470:	cbz	w0, 436108 <ferror@plt+0x33798>
  436474:	mov	x0, x19
  436478:	bl	437470 <ferror@plt+0x34b00>
  43647c:	mov	x2, x20
  436480:	mov	x3, x0
  436484:	mov	w1, #0x4                   	// #4
  436488:	b	4361b4 <ferror@plt+0x33844>
  43648c:	add	x1, x1, #0x2
  436490:	str	x1, [x0, #24]
  436494:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  436498:	add	x1, x1, #0x979
  43649c:	mov	w2, #0x3                   	// #3
  4364a0:	bl	434ea4 <ferror@plt+0x32534>
  4364a4:	mov	x20, x0
  4364a8:	mov	x0, x19
  4364ac:	bl	435c28 <ferror@plt+0x332b8>
  4364b0:	mov	x3, x0
  4364b4:	mov	x2, x20
  4364b8:	mov	x0, x19
  4364bc:	mov	w1, #0x1                   	// #1
  4364c0:	bl	432564 <ferror@plt+0x2fbf4>
  4364c4:	mov	x20, x0
  4364c8:	ldr	w0, [x19, #72]
  4364cc:	add	w0, w0, #0x3
  4364d0:	str	w0, [x19, #72]
  4364d4:	mov	w0, #0x0                   	// #0
  4364d8:	b	436460 <ferror@plt+0x33af0>
  4364dc:	stp	x29, x30, [sp, #-48]!
  4364e0:	mov	w3, #0x54                  	// #84
  4364e4:	mov	x29, sp
  4364e8:	ldr	x2, [x0, #24]
  4364ec:	stp	x19, x20, [sp, #16]
  4364f0:	mov	x19, x0
  4364f4:	str	x21, [sp, #32]
  4364f8:	mov	w21, w1
  4364fc:	ldrb	w1, [x2]
  436500:	cmp	w1, #0x47
  436504:	ccmp	w1, w3, #0x4, ne  // ne = any
  436508:	b.ne	436984 <ferror@plt+0x34014>  // b.any
  43650c:	ldr	w3, [x0, #72]
  436510:	add	w1, w3, #0x14
  436514:	str	w1, [x0, #72]
  436518:	ldrb	w1, [x2]
  43651c:	cmp	w1, #0x54
  436520:	b.ne	43654c <ferror@plt+0x33bdc>  // b.any
  436524:	add	x1, x2, #0x1
  436528:	str	x1, [x0, #24]
  43652c:	ldrb	w1, [x2, #1]
  436530:	cbnz	w1, 4365ac <ferror@plt+0x33c3c>
  436534:	mov	x20, #0x0                   	// #0
  436538:	mov	x0, x20
  43653c:	ldp	x19, x20, [sp, #16]
  436540:	ldr	x21, [sp, #32]
  436544:	ldp	x29, x30, [sp], #48
  436548:	ret
  43654c:	cmp	w1, #0x47
  436550:	b.ne	436534 <ferror@plt+0x33bc4>  // b.any
  436554:	add	x1, x2, #0x1
  436558:	str	x1, [x0, #24]
  43655c:	ldrb	w1, [x2, #1]
  436560:	cbz	w1, 436534 <ferror@plt+0x33bc4>
  436564:	add	x1, x2, #0x2
  436568:	str	x1, [x0, #24]
  43656c:	ldrb	w1, [x2, #1]
  436570:	cmp	w1, #0x54
  436574:	b.eq	4368d0 <ferror@plt+0x33f60>  // b.none
  436578:	b.hi	4367d0 <ferror@plt+0x33e60>  // b.pmore
  43657c:	cmp	w1, #0x41
  436580:	b.eq	4368b8 <ferror@plt+0x33f48>  // b.none
  436584:	cmp	w1, #0x52
  436588:	b.ne	436534 <ferror@plt+0x33bc4>  // b.any
  43658c:	bl	4360ac <ferror@plt+0x3373c>
  436590:	mov	x9, x0
  436594:	mov	x0, x19
  436598:	bl	432930 <ferror@plt+0x2ffc0>
  43659c:	mov	x3, x0
  4365a0:	mov	x2, x9
  4365a4:	mov	w1, #0x16                  	// #22
  4365a8:	b	436658 <ferror@plt+0x33ce8>
  4365ac:	add	x1, x2, #0x2
  4365b0:	str	x1, [x0, #24]
  4365b4:	ldrb	w1, [x2, #1]
  4365b8:	cmp	w1, #0x57
  4365bc:	b.hi	4365ec <ferror@plt+0x33c7c>  // b.pmore
  4365c0:	cmp	w1, #0x40
  4365c4:	b.ls	436534 <ferror@plt+0x33bc4>  // b.plast
  4365c8:	sub	w1, w1, #0x41
  4365cc:	cmp	w1, #0x16
  4365d0:	b.hi	436534 <ferror@plt+0x33bc4>  // b.pmore
  4365d4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x1b198>
  4365d8:	add	x0, x0, #0xa5c
  4365dc:	ldrb	w0, [x0, w1, uxtw]
  4365e0:	adr	x1, 4365ec <ferror@plt+0x33c7c>
  4365e4:	add	x0, x1, w0, sxtb #2
  4365e8:	br	x0
  4365ec:	cmp	w1, #0x68
  4365f0:	b.eq	4366bc <ferror@plt+0x33d4c>  // b.none
  4365f4:	cmp	w1, #0x76
  4365f8:	b.eq	4366e0 <ferror@plt+0x33d70>  // b.none
  4365fc:	cmp	w1, #0x63
  436600:	b.ne	436534 <ferror@plt+0x33bc4>  // b.any
  436604:	mov	w1, #0x0                   	// #0
  436608:	bl	432a50 <ferror@plt+0x300e0>
  43660c:	cbz	w0, 436534 <ferror@plt+0x33bc4>
  436610:	mov	x0, x19
  436614:	mov	w1, #0x0                   	// #0
  436618:	bl	432a50 <ferror@plt+0x300e0>
  43661c:	cbz	w0, 436534 <ferror@plt+0x33bc4>
  436620:	mov	w1, #0x0                   	// #0
  436624:	mov	x0, x19
  436628:	bl	4364dc <ferror@plt+0x33b6c>
  43662c:	mov	x2, x0
  436630:	mov	x3, #0x0                   	// #0
  436634:	mov	w1, #0x11                  	// #17
  436638:	b	436658 <ferror@plt+0x33ce8>
  43663c:	add	w3, w3, #0xf
  436640:	str	w3, [x19, #72]
  436644:	mov	x0, x19
  436648:	bl	4352ec <ferror@plt+0x3297c>
  43664c:	mov	x2, x0
  436650:	mov	x3, #0x0                   	// #0
  436654:	mov	w1, #0x9                   	// #9
  436658:	mov	x0, x19
  43665c:	ldp	x19, x20, [sp, #16]
  436660:	ldr	x21, [sp, #32]
  436664:	ldp	x29, x30, [sp], #48
  436668:	b	432564 <ferror@plt+0x2fbf4>
  43666c:	add	w3, w3, #0xa
  436670:	str	w3, [x19, #72]
  436674:	mov	x0, x19
  436678:	bl	4352ec <ferror@plt+0x3297c>
  43667c:	mov	x2, x0
  436680:	mov	x3, #0x0                   	// #0
  436684:	mov	w1, #0xa                   	// #10
  436688:	b	436658 <ferror@plt+0x33ce8>
  43668c:	mov	x0, x19
  436690:	bl	4352ec <ferror@plt+0x3297c>
  436694:	mov	x3, #0x0                   	// #0
  436698:	mov	x2, x0
  43669c:	mov	w1, #0xc                   	// #12
  4366a0:	b	436658 <ferror@plt+0x33ce8>
  4366a4:	mov	x0, x19
  4366a8:	bl	4352ec <ferror@plt+0x3297c>
  4366ac:	mov	x3, #0x0                   	// #0
  4366b0:	mov	x2, x0
  4366b4:	mov	w1, #0xd                   	// #13
  4366b8:	b	436658 <ferror@plt+0x33ce8>
  4366bc:	bl	432a50 <ferror@plt+0x300e0>
  4366c0:	cbz	w0, 436534 <ferror@plt+0x33bc4>
  4366c4:	mov	w1, #0x0                   	// #0
  4366c8:	mov	x0, x19
  4366cc:	bl	4364dc <ferror@plt+0x33b6c>
  4366d0:	mov	x2, x0
  4366d4:	mov	x3, #0x0                   	// #0
  4366d8:	mov	w1, #0xf                   	// #15
  4366dc:	b	436658 <ferror@plt+0x33ce8>
  4366e0:	bl	432a50 <ferror@plt+0x300e0>
  4366e4:	cbz	w0, 436534 <ferror@plt+0x33bc4>
  4366e8:	mov	w1, #0x0                   	// #0
  4366ec:	mov	x0, x19
  4366f0:	bl	4364dc <ferror@plt+0x33b6c>
  4366f4:	mov	x2, x0
  4366f8:	mov	x3, #0x0                   	// #0
  4366fc:	mov	w1, #0x10                  	// #16
  436700:	b	436658 <ferror@plt+0x33ce8>
  436704:	mov	x0, x19
  436708:	bl	4352ec <ferror@plt+0x3297c>
  43670c:	mov	x20, x0
  436710:	add	x0, x19, #0x18
  436714:	bl	4328a8 <ferror@plt+0x2ff38>
  436718:	tbnz	w0, #31, 436534 <ferror@plt+0x33bc4>
  43671c:	ldr	x1, [x19, #24]
  436720:	ldrb	w0, [x1]
  436724:	cmp	w0, #0x5f
  436728:	b.ne	436534 <ferror@plt+0x33bc4>  // b.any
  43672c:	add	x1, x1, #0x1
  436730:	str	x1, [x19, #24]
  436734:	mov	x0, x19
  436738:	bl	4352ec <ferror@plt+0x3297c>
  43673c:	mov	x2, x0
  436740:	ldr	w1, [x19, #72]
  436744:	mov	x3, x20
  436748:	add	w1, w1, #0x5
  43674c:	str	w1, [x19, #72]
  436750:	mov	w1, #0xb                   	// #11
  436754:	b	436658 <ferror@plt+0x33ce8>
  436758:	mov	x0, x19
  43675c:	bl	4352ec <ferror@plt+0x3297c>
  436760:	mov	x3, #0x0                   	// #0
  436764:	mov	x2, x0
  436768:	mov	w1, #0xe                   	// #14
  43676c:	b	436658 <ferror@plt+0x33ce8>
  436770:	mov	x0, x19
  436774:	bl	4352ec <ferror@plt+0x3297c>
  436778:	mov	x3, #0x0                   	// #0
  43677c:	mov	x2, x0
  436780:	mov	w1, #0x12                  	// #18
  436784:	b	436658 <ferror@plt+0x33ce8>
  436788:	mov	x0, x19
  43678c:	bl	4360ac <ferror@plt+0x3373c>
  436790:	mov	x3, #0x0                   	// #0
  436794:	mov	x2, x0
  436798:	mov	w1, #0x14                  	// #20
  43679c:	b	436658 <ferror@plt+0x33ce8>
  4367a0:	mov	x0, x19
  4367a4:	bl	4360ac <ferror@plt+0x3373c>
  4367a8:	mov	x3, #0x0                   	// #0
  4367ac:	mov	x2, x0
  4367b0:	mov	w1, #0x15                  	// #21
  4367b4:	b	436658 <ferror@plt+0x33ce8>
  4367b8:	mov	x0, x19
  4367bc:	bl	437324 <ferror@plt+0x349b4>
  4367c0:	mov	x3, #0x0                   	// #0
  4367c4:	mov	x2, x0
  4367c8:	mov	w1, #0x30                  	// #48
  4367cc:	b	436658 <ferror@plt+0x33ce8>
  4367d0:	cmp	w1, #0x56
  4367d4:	b.eq	4368a4 <ferror@plt+0x33f34>  // b.none
  4367d8:	cmp	w1, #0x72
  4367dc:	b.ne	436534 <ferror@plt+0x33bc4>  // b.any
  4367e0:	add	x0, x0, #0x18
  4367e4:	bl	4328a8 <ferror@plt+0x2ff38>
  4367e8:	cmp	w0, #0x1
  4367ec:	b.le	436534 <ferror@plt+0x33bc4>
  4367f0:	ldr	x1, [x19, #24]
  4367f4:	ldrb	w2, [x1]
  4367f8:	cbz	w2, 436534 <ferror@plt+0x33bc4>
  4367fc:	add	x7, x1, #0x1
  436800:	str	x7, [x19, #24]
  436804:	ldrb	w1, [x1]
  436808:	cmp	w1, #0x5f
  43680c:	b.ne	436534 <ferror@plt+0x33bc4>  // b.any
  436810:	sub	w8, w0, #0x1
  436814:	mov	x9, #0x0                   	// #0
  436818:	mov	w10, #0x41                  	// #65
  43681c:	ldrb	w0, [x7]
  436820:	cbz	w0, 436534 <ferror@plt+0x33bc4>
  436824:	cmp	w0, #0x24
  436828:	b.ne	436938 <ferror@plt+0x33fc8>  // b.any
  43682c:	ldrb	w4, [x7, #1]
  436830:	cmp	w4, #0x53
  436834:	b.eq	436928 <ferror@plt+0x33fb8>  // b.none
  436838:	cmp	w4, #0x5f
  43683c:	b.eq	436930 <ferror@plt+0x33fc0>  // b.none
  436840:	cmp	w4, #0x24
  436844:	b.ne	436534 <ferror@plt+0x33bc4>  // b.any
  436848:	mov	x0, x19
  43684c:	bl	432530 <ferror@plt+0x2fbc0>
  436850:	cbz	x0, 43685c <ferror@plt+0x33eec>
  436854:	str	w10, [x0]
  436858:	str	w4, [x0, #8]
  43685c:	ldr	x7, [x19, #24]
  436860:	sub	w8, w8, #0x2
  436864:	add	x7, x7, #0x2
  436868:	str	x7, [x19, #24]
  43686c:	cbz	x0, 436534 <ferror@plt+0x33bc4>
  436870:	cbz	x9, 43688c <ferror@plt+0x33f1c>
  436874:	mov	x3, x0
  436878:	mov	x2, x9
  43687c:	mov	x0, x19
  436880:	mov	w1, #0x40                  	// #64
  436884:	bl	432564 <ferror@plt+0x2fbf4>
  436888:	cbz	x0, 436534 <ferror@plt+0x33bc4>
  43688c:	cmp	w8, #0x0
  436890:	b.gt	436920 <ferror@plt+0x33fb0>
  436894:	mov	x2, x0
  436898:	mov	x3, #0x0                   	// #0
  43689c:	mov	w1, #0x3f                  	// #63
  4368a0:	b	436658 <ferror@plt+0x33ce8>
  4368a4:	bl	4360ac <ferror@plt+0x3373c>
  4368a8:	mov	x2, x0
  4368ac:	mov	x3, #0x0                   	// #0
  4368b0:	mov	w1, #0x13                  	// #19
  4368b4:	b	436658 <ferror@plt+0x33ce8>
  4368b8:	mov	w1, #0x0                   	// #0
  4368bc:	bl	4364dc <ferror@plt+0x33b6c>
  4368c0:	mov	x3, #0x0                   	// #0
  4368c4:	mov	x2, x0
  4368c8:	mov	w1, #0x17                  	// #23
  4368cc:	b	436658 <ferror@plt+0x33ce8>
  4368d0:	ldrb	w1, [x2, #2]
  4368d4:	cbz	w1, 436904 <ferror@plt+0x33f94>
  4368d8:	add	x1, x2, #0x3
  4368dc:	str	x1, [x0, #24]
  4368e0:	ldrb	w1, [x2, #2]
  4368e4:	cmp	w1, #0x6e
  4368e8:	b.ne	436904 <ferror@plt+0x33f94>  // b.any
  4368ec:	mov	w1, #0x0                   	// #0
  4368f0:	bl	4364dc <ferror@plt+0x33b6c>
  4368f4:	mov	x3, #0x0                   	// #0
  4368f8:	mov	x2, x0
  4368fc:	mov	w1, #0x4a                  	// #74
  436900:	b	436658 <ferror@plt+0x33ce8>
  436904:	mov	w1, #0x0                   	// #0
  436908:	mov	x0, x19
  43690c:	bl	4364dc <ferror@plt+0x33b6c>
  436910:	mov	x2, x0
  436914:	mov	x3, #0x0                   	// #0
  436918:	mov	w1, #0x49                  	// #73
  43691c:	b	436658 <ferror@plt+0x33ce8>
  436920:	mov	x9, x0
  436924:	b	43681c <ferror@plt+0x33eac>
  436928:	mov	w4, #0x2f                  	// #47
  43692c:	b	436848 <ferror@plt+0x33ed8>
  436930:	mov	w4, #0x2e                  	// #46
  436934:	b	436848 <ferror@plt+0x33ed8>
  436938:	mov	x0, #0x0                   	// #0
  43693c:	ldrb	w1, [x7, x0]
  436940:	mov	w6, w0
  436944:	cbz	w1, 436960 <ferror@plt+0x33ff0>
  436948:	cmp	w1, #0x24
  43694c:	b.eq	436960 <ferror@plt+0x33ff0>  // b.none
  436950:	add	x0, x0, #0x1
  436954:	add	w6, w6, #0x1
  436958:	cmp	w8, w0
  43695c:	b.gt	43693c <ferror@plt+0x33fcc>
  436960:	mov	x1, x7
  436964:	mov	w2, w6
  436968:	mov	x0, x19
  43696c:	bl	434ea4 <ferror@plt+0x32534>
  436970:	ldr	x7, [x19, #24]
  436974:	sub	w8, w8, w6
  436978:	add	x7, x7, w6, sxtw
  43697c:	str	x7, [x19, #24]
  436980:	b	43686c <ferror@plt+0x33efc>
  436984:	bl	4360ac <ferror@plt+0x3373c>
  436988:	mov	x20, x0
  43698c:	cbz	x0, 436534 <ferror@plt+0x33bc4>
  436990:	cbz	w21, 43699c <ferror@plt+0x3402c>
  436994:	ldr	w0, [x19, #16]
  436998:	tbz	w0, #0, 4369ec <ferror@plt+0x3407c>
  43699c:	ldr	x0, [x19, #24]
  4369a0:	ldrb	w0, [x0]
  4369a4:	cmp	w0, #0x45
  4369a8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4369ac:	b.eq	436538 <ferror@plt+0x33bc8>  // b.none
  4369b0:	mov	x3, #0x1f                  	// #31
  4369b4:	mov	x2, x20
  4369b8:	mov	x1, #0x1                   	// #1
  4369bc:	movk	x3, #0x1a, lsl #48
  4369c0:	ldr	w0, [x2]
  4369c4:	cmp	w0, #0x4
  4369c8:	b.eq	436a40 <ferror@plt+0x340d0>  // b.none
  4369cc:	b.hi	436a20 <ferror@plt+0x340b0>  // b.pmore
  4369d0:	cmp	w0, #0x2
  4369d4:	b.ne	4369e0 <ferror@plt+0x34070>  // b.any
  4369d8:	ldr	x2, [x2, #16]
  4369dc:	cbnz	x2, 4369c0 <ferror@plt+0x34050>
  4369e0:	mov	w1, #0x0                   	// #0
  4369e4:	b	436a7c <ferror@plt+0x3410c>
  4369e8:	ldr	x20, [x20, #8]
  4369ec:	ldr	w2, [x20]
  4369f0:	mov	w0, w2
  4369f4:	bl	432500 <ferror@plt+0x2fb90>
  4369f8:	cbnz	w0, 4369e8 <ferror@plt+0x34078>
  4369fc:	cmp	w2, #0x2
  436a00:	b.ne	436538 <ferror@plt+0x33bc8>  // b.any
  436a04:	ldr	x2, [x20, #16]
  436a08:	ldr	w0, [x2]
  436a0c:	bl	432500 <ferror@plt+0x2fb90>
  436a10:	cbz	w0, 436538 <ferror@plt+0x33bc8>
  436a14:	ldr	x0, [x2, #8]
  436a18:	str	x0, [x20, #16]
  436a1c:	b	436a04 <ferror@plt+0x34094>
  436a20:	sub	w0, w0, #0x1c
  436a24:	cmp	w0, #0x34
  436a28:	b.hi	4369e0 <ferror@plt+0x34070>  // b.pmore
  436a2c:	lsl	x0, x1, x0
  436a30:	tst	x0, x3
  436a34:	b.eq	4369e0 <ferror@plt+0x34070>  // b.none
  436a38:	ldr	x2, [x2, #8]
  436a3c:	b	4369dc <ferror@plt+0x3406c>
  436a40:	ldr	x1, [x2, #8]
  436a44:	cbz	x1, 436a68 <ferror@plt+0x340f8>
  436a48:	ldr	w0, [x1]
  436a4c:	cmp	w0, #0x8
  436a50:	b.hi	436a70 <ferror@plt+0x34100>  // b.pmore
  436a54:	cmp	w0, #0x6
  436a58:	b.hi	436ac0 <ferror@plt+0x34150>  // b.pmore
  436a5c:	sub	w0, w0, #0x1
  436a60:	cmp	w0, #0x1
  436a64:	b.ls	436ab8 <ferror@plt+0x34148>  // b.plast
  436a68:	mov	w0, #0x0                   	// #0
  436a6c:	b	436a78 <ferror@plt+0x34108>
  436a70:	cmp	w0, #0x35
  436a74:	cset	w0, eq  // eq = none
  436a78:	eor	w1, w0, #0x1
  436a7c:	mov	x0, x19
  436a80:	bl	435f7c <ferror@plt+0x3360c>
  436a84:	mov	x3, x0
  436a88:	cbz	x0, 436534 <ferror@plt+0x33bc4>
  436a8c:	cbnz	w21, 436aac <ferror@plt+0x3413c>
  436a90:	ldr	w0, [x20]
  436a94:	cmp	w0, #0x2
  436a98:	b.ne	436aac <ferror@plt+0x3413c>  // b.any
  436a9c:	ldr	w0, [x3]
  436aa0:	cmp	w0, #0x29
  436aa4:	b.ne	436aac <ferror@plt+0x3413c>  // b.any
  436aa8:	str	xzr, [x3, #8]
  436aac:	mov	x2, x20
  436ab0:	mov	w1, #0x3                   	// #3
  436ab4:	b	436658 <ferror@plt+0x33ce8>
  436ab8:	ldr	x1, [x1, #16]
  436abc:	b	436a44 <ferror@plt+0x340d4>
  436ac0:	mov	w0, #0x1                   	// #1
  436ac4:	b	436a78 <ferror@plt+0x34108>
  436ac8:	stp	x29, x30, [sp, #-32]!
  436acc:	mov	x29, sp
  436ad0:	stp	x19, x20, [sp, #16]
  436ad4:	mov	x19, x0
  436ad8:	mov	w20, w1
  436adc:	ldr	x0, [x0, #24]
  436ae0:	ldrb	w1, [x0]
  436ae4:	cmp	w1, #0x5f
  436ae8:	b.ne	436b68 <ferror@plt+0x341f8>  // b.any
  436aec:	add	x0, x0, #0x1
  436af0:	str	x0, [x19, #24]
  436af4:	ldr	x0, [x19, #24]
  436af8:	ldrb	w1, [x0]
  436afc:	cmp	w1, #0x5a
  436b00:	b.ne	436b6c <ferror@plt+0x341fc>  // b.any
  436b04:	add	x0, x0, #0x1
  436b08:	str	x0, [x19, #24]
  436b0c:	mov	w1, w20
  436b10:	mov	x0, x19
  436b14:	bl	4364dc <ferror@plt+0x33b6c>
  436b18:	mov	x6, x0
  436b1c:	cbz	w20, 436b70 <ferror@plt+0x34200>
  436b20:	ldr	w0, [x19, #16]
  436b24:	tbz	w0, #0, 436b70 <ferror@plt+0x34200>
  436b28:	ldr	x1, [x19, #24]
  436b2c:	ldrb	w0, [x1]
  436b30:	cmp	w0, #0x2e
  436b34:	b.ne	436b70 <ferror@plt+0x34200>  // b.any
  436b38:	ldrb	w0, [x1, #1]
  436b3c:	sub	w2, w0, #0x61
  436b40:	cmp	w0, #0x5f
  436b44:	and	w2, w2, #0xff
  436b48:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  436b4c:	b.ls	436b80 <ferror@plt+0x34210>  // b.plast
  436b50:	sub	w0, w0, #0x30
  436b54:	and	w0, w0, #0xff
  436b58:	cmp	w0, #0x9
  436b5c:	b.hi	436b70 <ferror@plt+0x34200>  // b.pmore
  436b60:	mov	x2, x1
  436b64:	b	436b9c <ferror@plt+0x3422c>
  436b68:	cbz	w20, 436af4 <ferror@plt+0x34184>
  436b6c:	mov	x6, #0x0                   	// #0
  436b70:	mov	x0, x6
  436b74:	ldp	x19, x20, [sp, #16]
  436b78:	ldp	x29, x30, [sp], #32
  436b7c:	ret
  436b80:	add	x2, x1, #0x2
  436b84:	ldrb	w3, [x2]
  436b88:	sub	w0, w3, #0x61
  436b8c:	cmp	w3, #0x5f
  436b90:	and	w0, w0, #0xff
  436b94:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  436b98:	b.ls	436bd4 <ferror@plt+0x34264>  // b.plast
  436b9c:	ldrb	w0, [x2]
  436ba0:	cmp	w0, #0x2e
  436ba4:	b.eq	436bdc <ferror@plt+0x3426c>  // b.none
  436ba8:	str	x2, [x19, #24]
  436bac:	mov	x0, x19
  436bb0:	sub	w2, w2, w1
  436bb4:	bl	434ea4 <ferror@plt+0x32534>
  436bb8:	mov	x3, x0
  436bbc:	mov	x2, x6
  436bc0:	mov	x0, x19
  436bc4:	mov	w1, #0x4e                  	// #78
  436bc8:	bl	432564 <ferror@plt+0x2fbf4>
  436bcc:	mov	x6, x0
  436bd0:	b	436b28 <ferror@plt+0x341b8>
  436bd4:	add	x2, x2, #0x1
  436bd8:	b	436b84 <ferror@plt+0x34214>
  436bdc:	ldrb	w0, [x2, #1]
  436be0:	sub	w0, w0, #0x30
  436be4:	and	w0, w0, #0xff
  436be8:	cmp	w0, #0x9
  436bec:	b.hi	436ba8 <ferror@plt+0x34238>  // b.pmore
  436bf0:	add	x2, x2, #0x2
  436bf4:	ldrb	w0, [x2]
  436bf8:	sub	w0, w0, #0x30
  436bfc:	and	w0, w0, #0xff
  436c00:	cmp	w0, #0x9
  436c04:	b.hi	436b9c <ferror@plt+0x3422c>  // b.pmore
  436c08:	add	x2, x2, #0x1
  436c0c:	b	436bf4 <ferror@plt+0x34284>
  436c10:	ldr	x1, [x0, #24]
  436c14:	ldrb	w2, [x1]
  436c18:	cmp	w2, #0x4c
  436c1c:	b.eq	436c38 <ferror@plt+0x342c8>  // b.none
  436c20:	mov	x0, #0x0                   	// #0
  436c24:	ret
  436c28:	mov	x0, #0x0                   	// #0
  436c2c:	ldr	x19, [sp, #16]
  436c30:	ldp	x29, x30, [sp], #32
  436c34:	ret
  436c38:	stp	x29, x30, [sp, #-32]!
  436c3c:	add	x2, x1, #0x1
  436c40:	mov	x29, sp
  436c44:	str	x19, [sp, #16]
  436c48:	mov	x19, x0
  436c4c:	str	x2, [x0, #24]
  436c50:	mov	w2, #0x5a                  	// #90
  436c54:	ldrb	w1, [x1, #1]
  436c58:	cmp	w1, #0x5f
  436c5c:	ccmp	w1, w2, #0x4, ne  // ne = any
  436c60:	b.ne	436c88 <ferror@plt+0x34318>  // b.any
  436c64:	mov	w1, #0x0                   	// #0
  436c68:	bl	436ac8 <ferror@plt+0x34158>
  436c6c:	ldr	x1, [x19, #24]
  436c70:	ldrb	w2, [x1]
  436c74:	cmp	w2, #0x45
  436c78:	b.ne	436c28 <ferror@plt+0x342b8>  // b.any
  436c7c:	add	x1, x1, #0x1
  436c80:	str	x1, [x19, #24]
  436c84:	b	436c2c <ferror@plt+0x342bc>
  436c88:	bl	4352ec <ferror@plt+0x3297c>
  436c8c:	mov	x6, x0
  436c90:	cbz	x0, 436c28 <ferror@plt+0x342b8>
  436c94:	ldr	w0, [x0]
  436c98:	cmp	w0, #0x27
  436c9c:	b.ne	436cbc <ferror@plt+0x3434c>  // b.any
  436ca0:	ldr	x1, [x6, #8]
  436ca4:	ldr	w0, [x1, #28]
  436ca8:	cbz	w0, 436cbc <ferror@plt+0x3434c>
  436cac:	ldr	w1, [x1, #8]
  436cb0:	ldr	w0, [x19, #72]
  436cb4:	sub	w0, w0, w1
  436cb8:	str	w0, [x19, #72]
  436cbc:	ldr	x0, [x19, #24]
  436cc0:	ldrb	w1, [x0]
  436cc4:	cmp	w1, #0x6e
  436cc8:	b.ne	436d10 <ferror@plt+0x343a0>  // b.any
  436ccc:	add	x0, x0, #0x1
  436cd0:	mov	w7, #0x3e                  	// #62
  436cd4:	str	x0, [x19, #24]
  436cd8:	ldr	x1, [x19, #24]
  436cdc:	ldr	x2, [x19, #24]
  436ce0:	ldrb	w0, [x2]
  436ce4:	cmp	w0, #0x45
  436ce8:	b.ne	436d18 <ferror@plt+0x343a8>  // b.any
  436cec:	sub	w2, w2, w1
  436cf0:	mov	x0, x19
  436cf4:	bl	434ea4 <ferror@plt+0x32534>
  436cf8:	mov	x3, x0
  436cfc:	mov	x2, x6
  436d00:	mov	w1, w7
  436d04:	mov	x0, x19
  436d08:	bl	432564 <ferror@plt+0x2fbf4>
  436d0c:	b	436c6c <ferror@plt+0x342fc>
  436d10:	mov	w7, #0x3d                  	// #61
  436d14:	b	436cd8 <ferror@plt+0x34368>
  436d18:	cbz	w0, 436c28 <ferror@plt+0x342b8>
  436d1c:	add	x2, x2, #0x1
  436d20:	str	x2, [x19, #24]
  436d24:	b	436cdc <ferror@plt+0x3436c>
  436d28:	ldr	x1, [x0, #24]
  436d2c:	ldrb	w2, [x1]
  436d30:	cmp	w2, #0x4c
  436d34:	b.ne	436d3c <ferror@plt+0x343cc>  // b.any
  436d38:	b	436c10 <ferror@plt+0x342a0>
  436d3c:	cmp	w2, #0x54
  436d40:	b.ne	436d48 <ferror@plt+0x343d8>  // b.any
  436d44:	b	4329f0 <ferror@plt+0x30080>
  436d48:	stp	x29, x30, [sp, #-48]!
  436d4c:	cmp	w2, #0x73
  436d50:	mov	x29, sp
  436d54:	stp	x19, x20, [sp, #16]
  436d58:	mov	x19, x0
  436d5c:	stp	x21, x22, [sp, #32]
  436d60:	b.ne	436e04 <ferror@plt+0x34494>  // b.any
  436d64:	ldrb	w3, [x1, #1]
  436d68:	cmp	w3, #0x72
  436d6c:	b.ne	436de0 <ferror@plt+0x34470>  // b.any
  436d70:	add	x1, x1, #0x2
  436d74:	str	x1, [x0, #24]
  436d78:	bl	4352ec <ferror@plt+0x3297c>
  436d7c:	mov	x20, x0
  436d80:	mov	x0, x19
  436d84:	bl	435c28 <ferror@plt+0x332b8>
  436d88:	mov	x21, x0
  436d8c:	ldr	x0, [x19, #24]
  436d90:	ldrb	w0, [x0]
  436d94:	cmp	w0, #0x49
  436d98:	b.eq	436dbc <ferror@plt+0x3444c>  // b.none
  436d9c:	mov	x3, x21
  436da0:	mov	x2, x20
  436da4:	mov	w1, #0x1                   	// #1
  436da8:	mov	x0, x19
  436dac:	ldp	x19, x20, [sp, #16]
  436db0:	ldp	x21, x22, [sp, #32]
  436db4:	ldp	x29, x30, [sp], #48
  436db8:	b	432564 <ferror@plt+0x2fbf4>
  436dbc:	mov	x0, x19
  436dc0:	bl	437470 <ferror@plt+0x34b00>
  436dc4:	mov	x3, x0
  436dc8:	mov	x2, x21
  436dcc:	mov	x0, x19
  436dd0:	mov	w1, #0x4                   	// #4
  436dd4:	bl	432564 <ferror@plt+0x2fbf4>
  436dd8:	mov	x3, x0
  436ddc:	b	436da0 <ferror@plt+0x34430>
  436de0:	cmp	w3, #0x70
  436de4:	b.ne	436ef0 <ferror@plt+0x34580>  // b.any
  436de8:	add	x1, x1, #0x2
  436dec:	str	x1, [x0, #24]
  436df0:	bl	436d28 <ferror@plt+0x343b8>
  436df4:	mov	x2, x0
  436df8:	mov	x3, #0x0                   	// #0
  436dfc:	mov	w1, #0x4b                  	// #75
  436e00:	b	436da8 <ferror@plt+0x34438>
  436e04:	cmp	w2, #0x66
  436e08:	b.ne	436e8c <ferror@plt+0x3451c>  // b.any
  436e0c:	ldrb	w3, [x1, #1]
  436e10:	cmp	w3, #0x70
  436e14:	b.ne	436ef0 <ferror@plt+0x34580>  // b.any
  436e18:	add	x2, x1, #0x2
  436e1c:	str	x2, [x0, #24]
  436e20:	ldrb	w2, [x1, #2]
  436e24:	cmp	w2, #0x54
  436e28:	b.ne	436e6c <ferror@plt+0x344fc>  // b.any
  436e2c:	add	x1, x1, #0x3
  436e30:	mov	w4, #0x0                   	// #0
  436e34:	str	x1, [x0, #24]
  436e38:	mov	x0, x19
  436e3c:	bl	432530 <ferror@plt+0x2fbc0>
  436e40:	mov	x20, x0
  436e44:	cbz	x0, 436e58 <ferror@plt+0x344e8>
  436e48:	sxtw	x4, w4
  436e4c:	mov	w0, #0x6                   	// #6
  436e50:	str	w0, [x20]
  436e54:	str	x4, [x20, #8]
  436e58:	mov	x0, x20
  436e5c:	ldp	x19, x20, [sp, #16]
  436e60:	ldp	x21, x22, [sp, #32]
  436e64:	ldp	x29, x30, [sp], #48
  436e68:	ret
  436e6c:	bl	43296c <ferror@plt+0x2fffc>
  436e70:	mvn	x1, x0
  436e74:	tst	x1, #0x7fffffff
  436e78:	b.ne	436e84 <ferror@plt+0x34514>  // b.any
  436e7c:	mov	x20, #0x0                   	// #0
  436e80:	b	436e58 <ferror@plt+0x344e8>
  436e84:	add	w4, w0, #0x1
  436e88:	b	436e38 <ferror@plt+0x344c8>
  436e8c:	sub	w0, w2, #0x30
  436e90:	and	w0, w0, #0xff
  436e94:	cmp	w0, #0x9
  436e98:	b.ls	436eb8 <ferror@plt+0x34548>  // b.plast
  436e9c:	cmp	w2, #0x6f
  436ea0:	b.ne	436ef0 <ferror@plt+0x34580>  // b.any
  436ea4:	ldrb	w0, [x1, #1]
  436ea8:	cmp	w0, #0x6e
  436eac:	b.ne	436f58 <ferror@plt+0x345e8>  // b.any
  436eb0:	add	x1, x1, #0x2
  436eb4:	str	x1, [x19, #24]
  436eb8:	mov	x0, x19
  436ebc:	bl	435c28 <ferror@plt+0x332b8>
  436ec0:	mov	x20, x0
  436ec4:	cbz	x0, 436e7c <ferror@plt+0x3450c>
  436ec8:	ldr	x0, [x19, #24]
  436ecc:	ldrb	w0, [x0]
  436ed0:	cmp	w0, #0x49
  436ed4:	b.ne	436e58 <ferror@plt+0x344e8>  // b.any
  436ed8:	mov	x0, x19
  436edc:	bl	437470 <ferror@plt+0x34b00>
  436ee0:	mov	x2, x20
  436ee4:	mov	x3, x0
  436ee8:	mov	w1, #0x4                   	// #4
  436eec:	b	436da8 <ferror@plt+0x34438>
  436ef0:	cmp	w2, #0x69
  436ef4:	mov	w0, #0x74                  	// #116
  436ef8:	ccmp	w2, w0, #0x4, ne  // ne = any
  436efc:	b.ne	436f58 <ferror@plt+0x345e8>  // b.any
  436f00:	ldrb	w0, [x1, #1]
  436f04:	cmp	w0, #0x6c
  436f08:	b.ne	436f58 <ferror@plt+0x345e8>  // b.any
  436f0c:	add	x1, x1, #0x2
  436f10:	str	x1, [x19, #24]
  436f14:	cmp	w2, #0x74
  436f18:	b.ne	436f50 <ferror@plt+0x345e0>  // b.any
  436f1c:	mov	x0, x19
  436f20:	bl	4352ec <ferror@plt+0x3297c>
  436f24:	mov	x20, x0
  436f28:	ldr	x0, [x19, #24]
  436f2c:	ldrb	w0, [x0, #1]
  436f30:	cbz	w0, 436e7c <ferror@plt+0x3450c>
  436f34:	mov	w1, #0x45                  	// #69
  436f38:	mov	x0, x19
  436f3c:	bl	43749c <ferror@plt+0x34b2c>
  436f40:	mov	x3, x0
  436f44:	mov	x2, x20
  436f48:	mov	w1, #0x31                  	// #49
  436f4c:	b	436da8 <ferror@plt+0x34438>
  436f50:	mov	x20, #0x0                   	// #0
  436f54:	b	436f28 <ferror@plt+0x345b8>
  436f58:	mov	x0, x19
  436f5c:	bl	435ab4 <ferror@plt+0x33144>
  436f60:	mov	x20, x0
  436f64:	cbz	x0, 436e7c <ferror@plt+0x3450c>
  436f68:	ldr	w0, [x0]
  436f6c:	cmp	w0, #0x32
  436f70:	b.ne	436fc0 <ferror@plt+0x34650>  // b.any
  436f74:	ldr	x0, [x20, #8]
  436f78:	ldr	x21, [x0]
  436f7c:	ldr	w0, [x0, #16]
  436f80:	sub	w1, w0, #0x2
  436f84:	ldr	w0, [x19, #72]
  436f88:	add	w0, w0, w1
  436f8c:	str	w0, [x19, #72]
  436f90:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  436f94:	mov	x0, x21
  436f98:	add	x1, x1, #0xc0d
  436f9c:	bl	4026d0 <strcmp@plt>
  436fa0:	ldr	x1, [x20, #8]
  436fa4:	cbnz	w0, 436ff8 <ferror@plt+0x34688>
  436fa8:	mov	x0, x19
  436fac:	bl	4352ec <ferror@plt+0x3297c>
  436fb0:	mov	x3, x0
  436fb4:	mov	x2, x20
  436fb8:	mov	w1, #0x37                  	// #55
  436fbc:	b	436da8 <ferror@plt+0x34438>
  436fc0:	cmp	w0, #0x34
  436fc4:	b.eq	4370a0 <ferror@plt+0x34730>  // b.none
  436fc8:	b.hi	436e7c <ferror@plt+0x3450c>  // b.pmore
  436fcc:	cmp	w0, #0x33
  436fd0:	b.ne	436e7c <ferror@plt+0x3450c>  // b.any
  436fd4:	ldr	w1, [x20, #8]
  436fd8:	cmp	w1, #0x3
  436fdc:	b.hi	436e7c <ferror@plt+0x3450c>  // b.pmore
  436fe0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x1b198>
  436fe4:	add	x0, x0, #0xa74
  436fe8:	ldrb	w0, [x0, w1, uxtw]
  436fec:	adr	x1, 436ff8 <ferror@plt+0x34688>
  436ff0:	add	x0, x1, w0, sxtb #2
  436ff4:	br	x0
  436ff8:	ldr	w22, [x1, #20]
  436ffc:	cmp	w22, #0x3
  437000:	b.hi	436e7c <ferror@plt+0x3450c>  // b.pmore
  437004:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x1b198>
  437008:	add	x0, x0, #0xa78
  43700c:	ldrb	w0, [x0, w22, uxtw]
  437010:	adr	x1, 43701c <ferror@plt+0x346ac>
  437014:	add	x0, x1, w0, sxtb #2
  437018:	br	x0
  43701c:	mov	x2, x20
  437020:	mov	x3, #0x0                   	// #0
  437024:	mov	w1, #0x36                  	// #54
  437028:	b	436da8 <ferror@plt+0x34438>
  43702c:	ldrb	w0, [x21]
  437030:	mov	w1, #0x6d                  	// #109
  437034:	cmp	w0, #0x70
  437038:	ccmp	w0, w1, #0x4, ne  // ne = any
  43703c:	b.ne	437064 <ferror@plt+0x346f4>  // b.any
  437040:	ldrb	w1, [x21, #1]
  437044:	cmp	w1, w0
  437048:	b.ne	437064 <ferror@plt+0x346f4>  // b.any
  43704c:	ldr	x0, [x19, #24]
  437050:	ldrb	w1, [x0]
  437054:	cmp	w1, #0x5f
  437058:	b.ne	437068 <ferror@plt+0x346f8>  // b.any
  43705c:	add	x0, x0, #0x1
  437060:	str	x0, [x19, #24]
  437064:	mov	w22, #0x0                   	// #0
  437068:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  43706c:	mov	x0, x21
  437070:	add	x1, x1, #0x837
  437074:	bl	4026d0 <strcmp@plt>
  437078:	cbnz	w0, 4370cc <ferror@plt+0x3475c>
  43707c:	mov	x0, x19
  437080:	bl	4373b8 <ferror@plt+0x34a48>
  437084:	mov	x3, x0
  437088:	cbz	w22, 436fb4 <ferror@plt+0x34644>
  43708c:	mov	x2, x0
  437090:	mov	w1, #0x39                  	// #57
  437094:	mov	x0, x19
  437098:	bl	432564 <ferror@plt+0x2fbf4>
  43709c:	b	436fb0 <ferror@plt+0x34640>
  4370a0:	ldr	x0, [x19, #24]
  4370a4:	ldrb	w1, [x0]
  4370a8:	cmp	w1, #0x5f
  4370ac:	b.ne	4370c8 <ferror@plt+0x34758>  // b.any
  4370b0:	add	x0, x0, #0x1
  4370b4:	str	x0, [x19, #24]
  4370b8:	mov	w1, #0x45                  	// #69
  4370bc:	mov	x0, x19
  4370c0:	bl	43749c <ferror@plt+0x34b2c>
  4370c4:	b	436fb0 <ferror@plt+0x34640>
  4370c8:	mov	w22, #0x0                   	// #0
  4370cc:	mov	x0, x19
  4370d0:	bl	436d28 <ferror@plt+0x343b8>
  4370d4:	b	437084 <ferror@plt+0x34714>
  4370d8:	ldr	x0, [x20, #8]
  4370dc:	bl	432b48 <ferror@plt+0x301d8>
  4370e0:	cbz	w0, 437138 <ferror@plt+0x347c8>
  4370e4:	mov	x0, x19
  4370e8:	bl	4352ec <ferror@plt+0x3297c>
  4370ec:	mov	x22, x0
  4370f0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4370f4:	mov	x0, x21
  4370f8:	add	x1, x1, #0x840
  4370fc:	bl	4026d0 <strcmp@plt>
  437100:	cbnz	w0, 437158 <ferror@plt+0x347e8>
  437104:	mov	x0, x19
  437108:	mov	w1, #0x45                  	// #69
  43710c:	bl	43749c <ferror@plt+0x34b2c>
  437110:	mov	x21, x0
  437114:	mov	x3, x21
  437118:	mov	x2, x22
  43711c:	mov	w1, #0x39                  	// #57
  437120:	mov	x0, x19
  437124:	bl	432564 <ferror@plt+0x2fbf4>
  437128:	mov	x3, x0
  43712c:	mov	x2, x20
  437130:	mov	w1, #0x38                  	// #56
  437134:	b	436da8 <ferror@plt+0x34438>
  437138:	ldrb	w0, [x21]
  43713c:	cmp	w0, #0x66
  437140:	mov	x0, x19
  437144:	b.ne	437150 <ferror@plt+0x347e0>  // b.any
  437148:	bl	435ab4 <ferror@plt+0x33144>
  43714c:	b	4370ec <ferror@plt+0x3477c>
  437150:	bl	436d28 <ferror@plt+0x343b8>
  437154:	b	4370ec <ferror@plt+0x3477c>
  437158:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  43715c:	mov	x0, x21
  437160:	add	x1, x1, #0x97d
  437164:	bl	4026d0 <strcmp@plt>
  437168:	cbz	w0, 437180 <ferror@plt+0x34810>
  43716c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  437170:	mov	x0, x21
  437174:	add	x1, x1, #0x90c
  437178:	bl	4026d0 <strcmp@plt>
  43717c:	cbnz	w0, 4371bc <ferror@plt+0x3484c>
  437180:	mov	x0, x19
  437184:	bl	435c28 <ferror@plt+0x332b8>
  437188:	mov	x21, x0
  43718c:	ldr	x0, [x19, #24]
  437190:	ldrb	w0, [x0]
  437194:	cmp	w0, #0x49
  437198:	b.ne	437114 <ferror@plt+0x347a4>  // b.any
  43719c:	mov	x0, x19
  4371a0:	bl	437470 <ferror@plt+0x34b00>
  4371a4:	mov	x2, x21
  4371a8:	mov	x3, x0
  4371ac:	mov	w1, #0x4                   	// #4
  4371b0:	mov	x0, x19
  4371b4:	bl	432564 <ferror@plt+0x2fbf4>
  4371b8:	b	437110 <ferror@plt+0x347a0>
  4371bc:	mov	x0, x19
  4371c0:	bl	436d28 <ferror@plt+0x343b8>
  4371c4:	b	437110 <ferror@plt+0x347a0>
  4371c8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  4371cc:	mov	x0, x21
  4371d0:	add	x1, x1, #0x843
  4371d4:	bl	4026d0 <strcmp@plt>
  4371d8:	cbnz	w0, 437238 <ferror@plt+0x348c8>
  4371dc:	mov	x0, x19
  4371e0:	bl	436d28 <ferror@plt+0x343b8>
  4371e4:	mov	x21, x0
  4371e8:	mov	x0, x19
  4371ec:	bl	436d28 <ferror@plt+0x343b8>
  4371f0:	mov	x22, x0
  4371f4:	mov	x0, x19
  4371f8:	bl	436d28 <ferror@plt+0x343b8>
  4371fc:	cbz	x0, 436e7c <ferror@plt+0x3450c>
  437200:	mov	x3, x0
  437204:	mov	x2, x22
  437208:	mov	w1, #0x3c                  	// #60
  43720c:	mov	x0, x19
  437210:	bl	432564 <ferror@plt+0x2fbf4>
  437214:	mov	x3, x0
  437218:	mov	x2, x21
  43721c:	mov	w1, #0x3b                  	// #59
  437220:	mov	x0, x19
  437224:	bl	432564 <ferror@plt+0x2fbf4>
  437228:	mov	x2, x20
  43722c:	mov	x3, x0
  437230:	mov	w1, #0x3a                  	// #58
  437234:	b	436da8 <ferror@plt+0x34438>
  437238:	ldrb	w0, [x21]
  43723c:	cmp	w0, #0x66
  437240:	b.ne	437250 <ferror@plt+0x348e0>  // b.any
  437244:	mov	x0, x19
  437248:	bl	435ab4 <ferror@plt+0x33144>
  43724c:	b	4371e4 <ferror@plt+0x34874>
  437250:	cmp	w0, #0x6e
  437254:	b.ne	436e7c <ferror@plt+0x3450c>  // b.any
  437258:	ldrb	w0, [x21, #1]
  43725c:	mov	w1, #0x61                  	// #97
  437260:	cmp	w0, #0x77
  437264:	ccmp	w0, w1, #0x4, ne  // ne = any
  437268:	b.ne	436e7c <ferror@plt+0x3450c>  // b.any
  43726c:	mov	w1, #0x5f                  	// #95
  437270:	mov	x0, x19
  437274:	bl	43749c <ferror@plt+0x34b2c>
  437278:	mov	x21, x0
  43727c:	mov	x0, x19
  437280:	bl	4352ec <ferror@plt+0x3297c>
  437284:	mov	x22, x0
  437288:	ldr	x0, [x19, #24]
  43728c:	ldrb	w1, [x0]
  437290:	cmp	w1, #0x45
  437294:	b.ne	4372a8 <ferror@plt+0x34938>  // b.any
  437298:	add	x0, x0, #0x1
  43729c:	str	x0, [x19, #24]
  4372a0:	mov	x0, #0x0                   	// #0
  4372a4:	b	437200 <ferror@plt+0x34890>
  4372a8:	cmp	w1, #0x70
  4372ac:	b.ne	4372d4 <ferror@plt+0x34964>  // b.any
  4372b0:	ldrb	w1, [x0, #1]
  4372b4:	cmp	w1, #0x69
  4372b8:	b.ne	436e7c <ferror@plt+0x3450c>  // b.any
  4372bc:	add	x0, x0, #0x2
  4372c0:	str	x0, [x19, #24]
  4372c4:	mov	w1, #0x45                  	// #69
  4372c8:	mov	x0, x19
  4372cc:	bl	43749c <ferror@plt+0x34b2c>
  4372d0:	b	437200 <ferror@plt+0x34890>
  4372d4:	cmp	w1, #0x69
  4372d8:	b.ne	436e7c <ferror@plt+0x3450c>  // b.any
  4372dc:	ldrb	w0, [x0, #1]
  4372e0:	cmp	w0, #0x6c
  4372e4:	b.ne	436e7c <ferror@plt+0x3450c>  // b.any
  4372e8:	mov	x0, x19
  4372ec:	bl	436d28 <ferror@plt+0x343b8>
  4372f0:	b	437200 <ferror@plt+0x34890>
  4372f4:	stp	x29, x30, [sp, #-32]!
  4372f8:	mov	w1, #0x1                   	// #1
  4372fc:	mov	x29, sp
  437300:	stp	x19, x20, [sp, #16]
  437304:	mov	x19, x0
  437308:	ldr	w20, [x0, #76]
  43730c:	str	w1, [x0, #76]
  437310:	bl	436d28 <ferror@plt+0x343b8>
  437314:	str	w20, [x19, #76]
  437318:	ldp	x19, x20, [sp, #16]
  43731c:	ldp	x29, x30, [sp], #32
  437320:	ret
  437324:	ldr	x2, [x0, #24]
  437328:	ldrb	w1, [x2]
  43732c:	cmp	w1, #0x4c
  437330:	b.eq	4373a0 <ferror@plt+0x34a30>  // b.none
  437334:	stp	x29, x30, [sp, #-32]!
  437338:	mov	x29, sp
  43733c:	str	x19, [sp, #16]
  437340:	mov	x19, x0
  437344:	b.hi	437368 <ferror@plt+0x349f8>  // b.pmore
  437348:	sub	w1, w1, #0x49
  43734c:	and	w1, w1, #0xff
  437350:	cmp	w1, #0x1
  437354:	b.ls	4373a4 <ferror@plt+0x34a34>  // b.plast
  437358:	mov	x0, x19
  43735c:	ldr	x19, [sp, #16]
  437360:	ldp	x29, x30, [sp], #32
  437364:	b	4352ec <ferror@plt+0x3297c>
  437368:	cmp	w1, #0x58
  43736c:	b.ne	437358 <ferror@plt+0x349e8>  // b.any
  437370:	add	x2, x2, #0x1
  437374:	str	x2, [x0, #24]
  437378:	bl	4372f4 <ferror@plt+0x34984>
  43737c:	ldr	x1, [x19, #24]
  437380:	ldrb	w2, [x1]
  437384:	cmp	w2, #0x45
  437388:	b.ne	4373b0 <ferror@plt+0x34a40>  // b.any
  43738c:	add	x1, x1, #0x1
  437390:	str	x1, [x19, #24]
  437394:	ldr	x19, [sp, #16]
  437398:	ldp	x29, x30, [sp], #32
  43739c:	ret
  4373a0:	b	436c10 <ferror@plt+0x342a0>
  4373a4:	ldr	x19, [sp, #16]
  4373a8:	ldp	x29, x30, [sp], #32
  4373ac:	b	437470 <ferror@plt+0x34b00>
  4373b0:	mov	x0, #0x0                   	// #0
  4373b4:	b	437394 <ferror@plt+0x34a24>
  4373b8:	stp	x29, x30, [sp, #-64]!
  4373bc:	mov	x29, sp
  4373c0:	ldr	x1, [x0, #24]
  4373c4:	stp	x19, x20, [sp, #16]
  4373c8:	mov	x19, x0
  4373cc:	str	x21, [sp, #32]
  4373d0:	ldr	x21, [x0, #64]
  4373d4:	ldrb	w2, [x1]
  4373d8:	cmp	w2, #0x45
  4373dc:	b.ne	437404 <ferror@plt+0x34a94>  // b.any
  4373e0:	add	x1, x1, #0x1
  4373e4:	mov	x3, #0x0                   	// #0
  4373e8:	ldr	x21, [sp, #32]
  4373ec:	str	x1, [x0, #24]
  4373f0:	ldp	x19, x20, [sp, #16]
  4373f4:	mov	x2, #0x0                   	// #0
  4373f8:	ldp	x29, x30, [sp], #64
  4373fc:	mov	w1, #0x2f                  	// #47
  437400:	b	432564 <ferror@plt+0x2fbf4>
  437404:	add	x20, sp, #0x38
  437408:	str	xzr, [sp, #56]
  43740c:	mov	x0, x19
  437410:	bl	437324 <ferror@plt+0x349b4>
  437414:	mov	x2, x0
  437418:	cbnz	x0, 437430 <ferror@plt+0x34ac0>
  43741c:	mov	x0, #0x0                   	// #0
  437420:	ldp	x19, x20, [sp, #16]
  437424:	ldr	x21, [sp, #32]
  437428:	ldp	x29, x30, [sp], #64
  43742c:	ret
  437430:	mov	x0, x19
  437434:	mov	x3, #0x0                   	// #0
  437438:	mov	w1, #0x2f                  	// #47
  43743c:	bl	432564 <ferror@plt+0x2fbf4>
  437440:	str	x0, [x20]
  437444:	cbz	x0, 43741c <ferror@plt+0x34aac>
  437448:	add	x20, x0, #0x10
  43744c:	ldr	x0, [x19, #24]
  437450:	ldrb	w1, [x0]
  437454:	cmp	w1, #0x45
  437458:	b.ne	43740c <ferror@plt+0x34a9c>  // b.any
  43745c:	add	x0, x0, #0x1
  437460:	str	x0, [x19, #24]
  437464:	str	x21, [x19, #64]
  437468:	ldr	x0, [sp, #56]
  43746c:	b	437420 <ferror@plt+0x34ab0>
  437470:	ldr	x3, [x0, #24]
  437474:	ldrb	w1, [x3]
  437478:	sub	w1, w1, #0x49
  43747c:	and	w1, w1, #0xff
  437480:	cmp	w1, #0x1
  437484:	b.hi	437494 <ferror@plt+0x34b24>  // b.pmore
  437488:	add	x3, x3, #0x1
  43748c:	str	x3, [x0, #24]
  437490:	b	4373b8 <ferror@plt+0x34a48>
  437494:	mov	x0, #0x0                   	// #0
  437498:	ret
  43749c:	stp	x29, x30, [sp, #-64]!
  4374a0:	mov	x29, sp
  4374a4:	ldr	x2, [x0, #24]
  4374a8:	stp	x19, x20, [sp, #16]
  4374ac:	mov	x19, x0
  4374b0:	str	x21, [sp, #32]
  4374b4:	str	xzr, [sp, #56]
  4374b8:	ldrb	w3, [x2]
  4374bc:	cmp	w3, w1, uxtb
  4374c0:	b.ne	4374e8 <ferror@plt+0x34b78>  // b.any
  4374c4:	add	x2, x2, #0x1
  4374c8:	mov	x3, #0x0                   	// #0
  4374cc:	ldr	x21, [sp, #32]
  4374d0:	str	x2, [x0, #24]
  4374d4:	ldp	x19, x20, [sp, #16]
  4374d8:	mov	w1, #0x2e                  	// #46
  4374dc:	ldp	x29, x30, [sp], #64
  4374e0:	mov	x2, #0x0                   	// #0
  4374e4:	b	432564 <ferror@plt+0x2fbf4>
  4374e8:	and	w21, w1, #0xff
  4374ec:	add	x20, sp, #0x38
  4374f0:	mov	x0, x19
  4374f4:	bl	4372f4 <ferror@plt+0x34984>
  4374f8:	mov	x2, x0
  4374fc:	cbnz	x0, 437514 <ferror@plt+0x34ba4>
  437500:	mov	x0, #0x0                   	// #0
  437504:	ldp	x19, x20, [sp, #16]
  437508:	ldr	x21, [sp, #32]
  43750c:	ldp	x29, x30, [sp], #64
  437510:	ret
  437514:	mov	x0, x19
  437518:	mov	x3, #0x0                   	// #0
  43751c:	mov	w1, #0x2e                  	// #46
  437520:	bl	432564 <ferror@plt+0x2fbf4>
  437524:	str	x0, [x20]
  437528:	cbz	x0, 437500 <ferror@plt+0x34b90>
  43752c:	add	x20, x0, #0x10
  437530:	ldr	x0, [x19, #24]
  437534:	ldrb	w1, [x0]
  437538:	cmp	w1, w21
  43753c:	b.ne	4374f0 <ferror@plt+0x34b80>  // b.any
  437540:	add	x0, x0, #0x1
  437544:	str	x0, [x19, #24]
  437548:	ldr	x0, [sp, #56]
  43754c:	b	437504 <ferror@plt+0x34b94>
  437550:	stp	x29, x30, [sp, #-80]!
  437554:	cmp	w2, #0x0
  437558:	mov	x29, sp
  43755c:	stp	x19, x20, [sp, #16]
  437560:	mov	x19, x0
  437564:	mov	x20, x1
  437568:	ldr	x0, [x0, #24]
  43756c:	stp	x21, x22, [sp, #32]
  437570:	mov	w21, w2
  437574:	stp	x23, x24, [sp, #48]
  437578:	mov	x22, x1
  43757c:	mov	w24, #0x1d                  	// #29
  437580:	str	x25, [sp, #64]
  437584:	mov	w25, #0x1e                  	// #30
  437588:	mov	w23, #0x1c                  	// #28
  43758c:	ldrb	w3, [x0]
  437590:	mov	w0, #0x1b                  	// #27
  437594:	csel	w25, w25, w0, ne  // ne = any
  437598:	mov	w0, #0x1a                  	// #26
  43759c:	csel	w24, w24, w0, ne  // ne = any
  4375a0:	mov	w0, #0x19                  	// #25
  4375a4:	csel	w23, w23, w0, ne  // ne = any
  4375a8:	ldr	x4, [x19, #24]
  4375ac:	mov	x0, x4
  4375b0:	bl	432af0 <ferror@plt+0x30180>
  4375b4:	cbnz	w0, 43760c <ferror@plt+0x34c9c>
  4375b8:	cmp	w3, #0x46
  4375bc:	eor	w21, w21, #0x1
  4375c0:	cset	w0, eq  // eq = none
  4375c4:	tst	w21, w0
  4375c8:	b.eq	437778 <ferror@plt+0x34e08>  // b.none
  4375cc:	mov	w1, #0x1d                  	// #29
  4375d0:	mov	w2, #0x1e                  	// #30
  4375d4:	mov	w3, #0x1c                  	// #28
  4375d8:	cmp	x22, x20
  4375dc:	b.eq	437678 <ferror@plt+0x34d08>  // b.none
  4375e0:	ldr	x20, [x20]
  4375e4:	ldr	w0, [x20]
  4375e8:	cmp	w0, #0x1a
  4375ec:	b.eq	437780 <ferror@plt+0x34e10>  // b.none
  4375f0:	cmp	w0, #0x1b
  4375f4:	b.eq	437788 <ferror@plt+0x34e18>  // b.none
  4375f8:	cmp	w0, #0x19
  4375fc:	b.ne	437604 <ferror@plt+0x34c94>  // b.any
  437600:	str	w3, [x20]
  437604:	add	x20, x20, #0x8
  437608:	b	4375d8 <ferror@plt+0x34c68>
  43760c:	add	x0, x4, #0x1
  437610:	str	x0, [x19, #24]
  437614:	cmp	w3, #0x72
  437618:	b.ne	437634 <ferror@plt+0x34cc4>  // b.any
  43761c:	ldr	w0, [x19, #72]
  437620:	mov	w1, w23
  437624:	add	w0, w0, #0x9
  437628:	str	w0, [x19, #72]
  43762c:	mov	x3, #0x0                   	// #0
  437630:	b	4376bc <ferror@plt+0x34d4c>
  437634:	cmp	w3, #0x56
  437638:	b.ne	437650 <ferror@plt+0x34ce0>  // b.any
  43763c:	ldr	w0, [x19, #72]
  437640:	mov	w1, w24
  437644:	add	w0, w0, #0x9
  437648:	str	w0, [x19, #72]
  43764c:	b	43762c <ferror@plt+0x34cbc>
  437650:	cmp	w3, #0x4b
  437654:	b.ne	43766c <ferror@plt+0x34cfc>  // b.any
  437658:	ldr	w0, [x19, #72]
  43765c:	mov	w1, w25
  437660:	add	w0, w0, #0x6
  437664:	str	w0, [x19, #72]
  437668:	b	43762c <ferror@plt+0x34cbc>
  43766c:	ldrb	w0, [x4, #1]
  437670:	cbnz	w0, 437694 <ferror@plt+0x34d24>
  437674:	mov	x20, #0x0                   	// #0
  437678:	mov	x0, x20
  43767c:	ldp	x19, x20, [sp, #16]
  437680:	ldp	x21, x22, [sp, #32]
  437684:	ldp	x23, x24, [sp, #48]
  437688:	ldr	x25, [sp, #64]
  43768c:	ldp	x29, x30, [sp], #80
  437690:	ret
  437694:	add	x0, x4, #0x2
  437698:	str	x0, [x19, #24]
  43769c:	ldrb	w0, [x4, #1]
  4376a0:	cmp	w0, #0x78
  4376a4:	b.ne	4376e0 <ferror@plt+0x34d70>  // b.any
  4376a8:	ldr	w0, [x19, #72]
  4376ac:	mov	x3, #0x0                   	// #0
  4376b0:	mov	w1, #0x4d                  	// #77
  4376b4:	add	w0, w0, #0x11
  4376b8:	str	w0, [x19, #72]
  4376bc:	mov	x0, x19
  4376c0:	mov	x2, #0x0                   	// #0
  4376c4:	bl	432564 <ferror@plt+0x2fbf4>
  4376c8:	str	x0, [x22]
  4376cc:	cbz	x0, 437674 <ferror@plt+0x34d04>
  4376d0:	add	x22, x0, #0x8
  4376d4:	ldr	x0, [x19, #24]
  4376d8:	ldrb	w3, [x0]
  4376dc:	b	4375a8 <ferror@plt+0x34c38>
  4376e0:	and	w2, w0, #0xffffffdf
  4376e4:	and	w1, w2, #0xff
  4376e8:	cmp	w2, #0x4f
  4376ec:	b.ne	437734 <ferror@plt+0x34dc4>  // b.any
  4376f0:	ldr	w2, [x19, #72]
  4376f4:	cmp	w0, #0x4f
  4376f8:	add	w2, w2, #0x9
  4376fc:	str	w2, [x19, #72]
  437700:	b.ne	43762c <ferror@plt+0x34cbc>  // b.any
  437704:	mov	x0, x19
  437708:	bl	4372f4 <ferror@plt+0x34984>
  43770c:	mov	x3, x0
  437710:	cbz	x0, 437674 <ferror@plt+0x34d04>
  437714:	ldr	x0, [x19, #24]
  437718:	ldrb	w1, [x0]
  43771c:	cmp	w1, #0x45
  437720:	b.ne	437674 <ferror@plt+0x34d04>  // b.any
  437724:	add	x0, x0, #0x1
  437728:	mov	w1, #0x4f                  	// #79
  43772c:	str	x0, [x19, #24]
  437730:	b	4376bc <ferror@plt+0x34d4c>
  437734:	cmp	w0, #0x77
  437738:	b.ne	437674 <ferror@plt+0x34d04>  // b.any
  43773c:	ldr	w0, [x19, #72]
  437740:	add	w0, w0, #0x6
  437744:	str	w0, [x19, #72]
  437748:	mov	x0, x19
  43774c:	bl	4359d4 <ferror@plt+0x33064>
  437750:	mov	x3, x0
  437754:	cbz	x0, 437674 <ferror@plt+0x34d04>
  437758:	ldr	x0, [x19, #24]
  43775c:	ldrb	w1, [x0]
  437760:	cmp	w1, #0x45
  437764:	b.ne	437674 <ferror@plt+0x34d04>  // b.any
  437768:	add	x0, x0, #0x1
  43776c:	mov	w1, #0x50                  	// #80
  437770:	str	x0, [x19, #24]
  437774:	b	4376bc <ferror@plt+0x34d4c>
  437778:	mov	x20, x22
  43777c:	b	437678 <ferror@plt+0x34d08>
  437780:	str	w1, [x20]
  437784:	b	437604 <ferror@plt+0x34c94>
  437788:	str	w2, [x20]
  43778c:	b	437604 <ferror@plt+0x34c94>
  437790:	stp	x29, x30, [sp, #-416]!
  437794:	mov	w4, w0
  437798:	mov	x5, x1
  43779c:	mov	x29, sp
  4377a0:	str	x19, [sp, #16]
  4377a4:	add	x0, x29, #0x28
  4377a8:	str	xzr, [x29, #296]
  4377ac:	strb	wzr, [x29, #304]
  4377b0:	stp	x2, x3, [x29, #312]
  4377b4:	stp	xzr, xzr, [x29, #328]
  4377b8:	stp	xzr, xzr, [x29, #344]
  4377bc:	stp	xzr, xzr, [x29, #360]
  4377c0:	stp	xzr, xzr, [x29, #376]
  4377c4:	stp	xzr, xzr, [x29, #392]
  4377c8:	bl	432684 <ferror@plt+0x2fd14>
  4377cc:	ldr	w0, [x29, #348]
  4377d0:	cmp	w0, #0x7ff
  4377d4:	b.gt	4377dc <ferror@plt+0x34e6c>
  4377d8:	str	wzr, [x29, #348]
  4377dc:	ldr	w3, [x29, #388]
  4377e0:	mov	w0, #0x1                   	// #1
  4377e4:	ldr	w2, [x29, #404]
  4377e8:	mov	x19, sp
  4377ec:	cmp	w3, #0x0
  4377f0:	str	xzr, [x29, #408]
  4377f4:	mul	w2, w3, w2
  4377f8:	csel	w3, w3, w0, gt
  4377fc:	str	w2, [x29, #404]
  437800:	cmp	w2, #0x0
  437804:	sub	sp, sp, w3, sxtw #4
  437808:	csel	w2, w2, w0, gt
  43780c:	mov	x1, sp
  437810:	str	x1, [x29, #376]
  437814:	mov	w1, w4
  437818:	sub	sp, sp, w2, sxtw #4
  43781c:	mov	x2, x5
  437820:	mov	x0, sp
  437824:	str	x0, [x29, #392]
  437828:	add	x0, x29, #0x28
  43782c:	bl	434658 <ferror@plt+0x31ce8>
  437830:	add	x0, x29, #0x28
  437834:	mov	sp, x19
  437838:	bl	432744 <ferror@plt+0x2fdd4>
  43783c:	ldr	w0, [x29, #344]
  437840:	mov	sp, x29
  437844:	cmp	w0, #0x0
  437848:	cset	w0, eq  // eq = none
  43784c:	ldr	x19, [sp, #16]
  437850:	ldp	x29, x30, [sp], #416
  437854:	ret
  437858:	stp	x29, x30, [sp, #-80]!
  43785c:	mov	x29, sp
  437860:	stp	x19, x20, [sp, #16]
  437864:	mov	w20, w0
  437868:	mov	x19, x3
  43786c:	str	x21, [sp, #32]
  437870:	mov	x21, x1
  437874:	stp	xzr, xzr, [sp, #48]
  437878:	str	xzr, [sp, #64]
  43787c:	str	wzr, [sp, #72]
  437880:	cbz	w2, 437890 <ferror@plt+0x34f20>
  437884:	sxtw	x1, w2
  437888:	add	x0, sp, #0x30
  43788c:	bl	432c5c <ferror@plt+0x302ec>
  437890:	adrp	x2, 432000 <ferror@plt+0x2f690>
  437894:	add	x3, sp, #0x30
  437898:	add	x2, x2, #0xcd4
  43789c:	mov	x1, x21
  4378a0:	mov	w0, w20
  4378a4:	bl	437790 <ferror@plt+0x34e20>
  4378a8:	cbnz	w0, 4378cc <ferror@plt+0x34f5c>
  4378ac:	ldr	x0, [sp, #48]
  4378b0:	bl	402730 <free@plt>
  4378b4:	str	xzr, [x19]
  4378b8:	mov	x0, #0x0                   	// #0
  4378bc:	ldp	x19, x20, [sp, #16]
  4378c0:	ldr	x21, [sp, #32]
  4378c4:	ldp	x29, x30, [sp], #80
  4378c8:	ret
  4378cc:	ldr	w0, [sp, #72]
  4378d0:	cmp	w0, #0x0
  4378d4:	ldr	x0, [sp, #64]
  4378d8:	csinc	x0, x0, xzr, eq  // eq = none
  4378dc:	str	x0, [x19]
  4378e0:	ldr	x0, [sp, #48]
  4378e4:	b	4378bc <ferror@plt+0x34f4c>
  4378e8:	add	x4, x0, x2
  4378ec:	stp	x0, x4, [x3]
  4378f0:	str	w1, [x3, #16]
  4378f4:	str	x0, [x3, #24]
  4378f8:	lsl	w0, w2, #1
  4378fc:	str	wzr, [x3, #40]
  437900:	str	w0, [x3, #44]
  437904:	stp	wzr, w2, [x3, #56]
  437908:	stp	xzr, xzr, [x3, #64]
  43790c:	str	xzr, [x3, #80]
  437910:	ret
  437914:	stp	x29, x30, [sp, #-176]!
  437918:	mov	x29, sp
  43791c:	stp	x19, x20, [sp, #16]
  437920:	mov	x19, x0
  437924:	stp	x21, x22, [sp, #32]
  437928:	mov	w21, w1
  43792c:	mov	x22, x2
  437930:	stp	x23, x24, [sp, #48]
  437934:	mov	x23, x3
  437938:	str	x25, [sp, #64]
  43793c:	ldrb	w0, [x0]
  437940:	cmp	w0, #0x5f
  437944:	b.ne	437954 <ferror@plt+0x34fe4>  // b.any
  437948:	ldrb	w0, [x19, #1]
  43794c:	cmp	w0, #0x5a
  437950:	b.eq	437ac8 <ferror@plt+0x35158>  // b.none
  437954:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  437958:	mov	x0, x19
  43795c:	add	x1, x1, #0x943
  437960:	mov	x2, #0x8                   	// #8
  437964:	bl	4024e0 <strncmp@plt>
  437968:	cbnz	w0, 437aa4 <ferror@plt+0x35134>
  43796c:	ldrb	w0, [x19, #8]
  437970:	sub	w0, w0, #0x24
  437974:	and	w0, w0, #0xff
  437978:	cmp	w0, #0x3b
  43797c:	b.hi	437aa4 <ferror@plt+0x35134>  // b.pmore
  437980:	mov	x1, #0x401                 	// #1025
  437984:	movk	x1, #0x800, lsl #48
  437988:	lsr	x0, x1, x0
  43798c:	tbz	w0, #0, 437aa4 <ferror@plt+0x35134>
  437990:	ldrb	w0, [x19, #9]
  437994:	mov	w1, #0x49                  	// #73
  437998:	cmp	w0, #0x44
  43799c:	ccmp	w0, w1, #0x4, ne  // ne = any
  4379a0:	b.ne	437aa4 <ferror@plt+0x35134>  // b.any
  4379a4:	ldrb	w1, [x19, #10]
  4379a8:	cmp	w1, #0x5f
  4379ac:	b.ne	437aa4 <ferror@plt+0x35134>  // b.any
  4379b0:	cmp	w0, #0x49
  4379b4:	cset	w20, ne  // ne = any
  4379b8:	add	w20, w20, #0x2
  4379bc:	mov	x0, x19
  4379c0:	bl	402330 <strlen@plt>
  4379c4:	add	x3, x29, #0x58
  4379c8:	mov	x2, x0
  4379cc:	mov	w1, w21
  4379d0:	mov	x0, x19
  4379d4:	bl	4378e8 <ferror@plt+0x34f78>
  4379d8:	ldr	w0, [x29, #132]
  4379dc:	tbnz	w21, #18, 4379e8 <ferror@plt+0x35078>
  4379e0:	cmp	w0, #0x800
  4379e4:	b.hi	437aa8 <ferror@plt+0x35138>  // b.pmore
  4379e8:	mov	w1, #0x18                  	// #24
  4379ec:	mov	x24, sp
  4379f0:	cmp	w20, #0x1
  4379f4:	smull	x0, w0, w1
  4379f8:	add	x0, x0, #0xf
  4379fc:	and	x0, x0, #0xfffffffffffffff0
  437a00:	sub	sp, sp, x0
  437a04:	ldrsw	x0, [x29, #148]
  437a08:	mov	x1, sp
  437a0c:	str	x1, [x29, #120]
  437a10:	lsl	x0, x0, #3
  437a14:	add	x0, x0, #0xf
  437a18:	and	x0, x0, #0xfffffffffffffff0
  437a1c:	sub	sp, sp, x0
  437a20:	mov	x0, sp
  437a24:	str	x0, [x29, #136]
  437a28:	b.eq	437b14 <ferror@plt+0x351a4>  // b.none
  437a2c:	sub	w0, w20, #0x2
  437a30:	cmp	w0, #0x1
  437a34:	b.hi	437ad8 <ferror@plt+0x35168>  // b.pmore
  437a38:	ldr	x0, [x29, #112]
  437a3c:	cmp	w20, #0x2
  437a40:	cset	w19, ne  // ne = any
  437a44:	add	x25, x0, #0xb
  437a48:	str	x25, [x29, #112]
  437a4c:	add	w19, w19, #0x44
  437a50:	ldrb	w1, [x0, #11]
  437a54:	cmp	w1, #0x5f
  437a58:	b.eq	437b24 <ferror@plt+0x351b4>  // b.none
  437a5c:	mov	x0, x25
  437a60:	bl	402330 <strlen@plt>
  437a64:	mov	x1, x25
  437a68:	mov	w2, w0
  437a6c:	add	x0, x29, #0x58
  437a70:	bl	434ea4 <ferror@plt+0x32534>
  437a74:	mov	x2, x0
  437a78:	mov	w1, w19
  437a7c:	mov	x3, #0x0                   	// #0
  437a80:	add	x0, x29, #0x58
  437a84:	bl	432564 <ferror@plt+0x2fbf4>
  437a88:	mov	x19, x0
  437a8c:	ldr	x20, [x29, #112]
  437a90:	mov	x0, x20
  437a94:	bl	402330 <strlen@plt>
  437a98:	add	x20, x20, x0
  437a9c:	str	x20, [x29, #112]
  437aa0:	b	437ae4 <ferror@plt+0x35174>
  437aa4:	tbnz	w21, #4, 437ad0 <ferror@plt+0x35160>
  437aa8:	mov	w0, #0x0                   	// #0
  437aac:	mov	sp, x29
  437ab0:	ldp	x19, x20, [sp, #16]
  437ab4:	ldp	x21, x22, [sp, #32]
  437ab8:	ldp	x23, x24, [sp, #48]
  437abc:	ldr	x25, [sp, #64]
  437ac0:	ldp	x29, x30, [sp], #176
  437ac4:	ret
  437ac8:	mov	w20, #0x1                   	// #1
  437acc:	b	4379bc <ferror@plt+0x3504c>
  437ad0:	mov	w20, #0x0                   	// #0
  437ad4:	b	4379bc <ferror@plt+0x3504c>
  437ad8:	add	x0, x29, #0x58
  437adc:	bl	4352ec <ferror@plt+0x3297c>
  437ae0:	mov	x19, x0
  437ae4:	tbz	w21, #0, 437af4 <ferror@plt+0x35184>
  437ae8:	ldr	x0, [x29, #112]
  437aec:	ldrb	w0, [x0]
  437af0:	cbnz	w0, 437b48 <ferror@plt+0x351d8>
  437af4:	cbz	x19, 437b48 <ferror@plt+0x351d8>
  437af8:	mov	x3, x23
  437afc:	mov	x2, x22
  437b00:	mov	x1, x19
  437b04:	mov	w0, w21
  437b08:	bl	437790 <ferror@plt+0x34e20>
  437b0c:	mov	sp, x24
  437b10:	b	437aac <ferror@plt+0x3513c>
  437b14:	mov	w1, w20
  437b18:	add	x0, x29, #0x58
  437b1c:	bl	436ac8 <ferror@plt+0x34158>
  437b20:	b	437ae0 <ferror@plt+0x35170>
  437b24:	ldrb	w1, [x0, #12]
  437b28:	cmp	w1, #0x5a
  437b2c:	b.ne	437a5c <ferror@plt+0x350ec>  // b.any
  437b30:	add	x0, x0, #0xd
  437b34:	mov	w1, #0x0                   	// #0
  437b38:	str	x0, [x29, #112]
  437b3c:	add	x0, x29, #0x58
  437b40:	bl	4364dc <ferror@plt+0x33b6c>
  437b44:	b	437a74 <ferror@plt+0x35104>
  437b48:	mov	w0, #0x0                   	// #0
  437b4c:	b	437b0c <ferror@plt+0x3519c>
  437b50:	stp	x29, x30, [sp, #-64]!
  437b54:	mov	x29, sp
  437b58:	add	x3, sp, #0x20
  437b5c:	str	x19, [sp, #16]
  437b60:	mov	x19, x2
  437b64:	adrp	x2, 432000 <ferror@plt+0x2f690>
  437b68:	add	x2, x2, #0xcd4
  437b6c:	stp	xzr, xzr, [sp, #32]
  437b70:	str	xzr, [sp, #48]
  437b74:	str	wzr, [sp, #56]
  437b78:	bl	437914 <ferror@plt+0x34fa4>
  437b7c:	cbnz	w0, 437b9c <ferror@plt+0x3522c>
  437b80:	ldr	x0, [sp, #32]
  437b84:	bl	402730 <free@plt>
  437b88:	str	xzr, [x19]
  437b8c:	mov	x0, #0x0                   	// #0
  437b90:	ldr	x19, [sp, #16]
  437b94:	ldp	x29, x30, [sp], #64
  437b98:	ret
  437b9c:	ldr	w0, [sp, #56]
  437ba0:	cmp	w0, #0x0
  437ba4:	ldr	x0, [sp, #48]
  437ba8:	csinc	x0, x0, xzr, eq  // eq = none
  437bac:	str	x0, [x19]
  437bb0:	ldr	x0, [sp, #32]
  437bb4:	b	437b90 <ferror@plt+0x35220>
  437bb8:	stp	x29, x30, [sp, #-144]!
  437bbc:	mov	x29, sp
  437bc0:	stp	x19, x20, [sp, #16]
  437bc4:	mov	x19, x1
  437bc8:	mov	x20, x2
  437bcc:	str	x21, [sp, #32]
  437bd0:	mov	x21, x0
  437bd4:	str	wzr, [x1]
  437bd8:	str	wzr, [x2]
  437bdc:	bl	402330 <strlen@plt>
  437be0:	mov	x2, x0
  437be4:	add	x3, x29, #0x38
  437be8:	mov	x0, x21
  437bec:	mov	w1, #0x4000                	// #16384
  437bf0:	bl	4378e8 <ferror@plt+0x34f78>
  437bf4:	ldr	w0, [x29, #100]
  437bf8:	mov	w1, #0x18                  	// #24
  437bfc:	smull	x0, w0, w1
  437c00:	add	x0, x0, #0xf
  437c04:	and	x0, x0, #0xfffffffffffffff0
  437c08:	sub	sp, sp, x0
  437c0c:	ldrsw	x0, [x29, #116]
  437c10:	mov	x1, sp
  437c14:	str	x1, [x29, #88]
  437c18:	mov	w1, #0x1                   	// #1
  437c1c:	lsl	x0, x0, #3
  437c20:	add	x0, x0, #0xf
  437c24:	and	x0, x0, #0xfffffffffffffff0
  437c28:	sub	sp, sp, x0
  437c2c:	mov	x0, sp
  437c30:	str	x0, [x29, #104]
  437c34:	add	x0, x29, #0x38
  437c38:	bl	436ac8 <ferror@plt+0x34158>
  437c3c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x1b198>
  437c40:	add	x2, x2, #0xa7c
  437c44:	cbz	x0, 437c84 <ferror@plt+0x35314>
  437c48:	ldr	w1, [x0]
  437c4c:	sub	w1, w1, #0x1
  437c50:	cmp	w1, #0x7
  437c54:	b.hi	437ca4 <ferror@plt+0x35334>  // b.pmore
  437c58:	ldrb	w1, [x2, w1, uxtw]
  437c5c:	adr	x3, 437c68 <ferror@plt+0x352f8>
  437c60:	add	x1, x3, w1, sxtb #2
  437c64:	br	x1
  437c68:	ldr	x0, [x0, #8]
  437c6c:	b	437c44 <ferror@plt+0x352d4>
  437c70:	ldr	x0, [x0, #16]
  437c74:	b	437c44 <ferror@plt+0x352d4>
  437c78:	ldr	w0, [x0, #8]
  437c7c:	str	w0, [x19]
  437c80:	mov	w0, #0x1                   	// #1
  437c84:	mov	sp, x29
  437c88:	ldp	x19, x20, [sp, #16]
  437c8c:	ldr	x21, [sp, #32]
  437c90:	ldp	x29, x30, [sp], #144
  437c94:	ret
  437c98:	ldr	w0, [x0, #8]
  437c9c:	str	w0, [x20]
  437ca0:	b	437c80 <ferror@plt+0x35310>
  437ca4:	mov	w0, #0x0                   	// #0
  437ca8:	b	437c84 <ferror@plt+0x35314>
  437cac:	stp	x29, x30, [sp, #-32]!
  437cb0:	mov	x29, sp
  437cb4:	add	x2, sp, #0x18
  437cb8:	bl	437b50 <ferror@plt+0x351e0>
  437cbc:	ldp	x29, x30, [sp], #32
  437cc0:	ret
  437cc4:	b	437914 <ferror@plt+0x34fa4>
  437cc8:	stp	x29, x30, [sp, #-32]!
  437ccc:	mov	w1, #0x25                  	// #37
  437cd0:	mov	x29, sp
  437cd4:	add	x2, sp, #0x18
  437cd8:	bl	437b50 <ferror@plt+0x351e0>
  437cdc:	ldp	x29, x30, [sp], #32
  437ce0:	ret
  437ce4:	mov	x3, x2
  437ce8:	mov	x2, x1
  437cec:	mov	w1, #0x25                  	// #37
  437cf0:	b	437914 <ferror@plt+0x34fa4>
  437cf4:	stp	x29, x30, [sp, #-32]!
  437cf8:	mov	x29, sp
  437cfc:	add	x2, sp, #0x1c
  437d00:	add	x1, sp, #0x18
  437d04:	bl	437bb8 <ferror@plt+0x35248>
  437d08:	cmp	w0, #0x0
  437d0c:	ldr	w0, [sp, #24]
  437d10:	ldp	x29, x30, [sp], #32
  437d14:	csel	w0, w0, wzr, ne  // ne = any
  437d18:	ret
  437d1c:	stp	x29, x30, [sp, #-32]!
  437d20:	mov	x29, sp
  437d24:	add	x2, sp, #0x1c
  437d28:	add	x1, sp, #0x18
  437d2c:	bl	437bb8 <ferror@plt+0x35248>
  437d30:	cmp	w0, #0x0
  437d34:	ldr	w0, [sp, #28]
  437d38:	ldp	x29, x30, [sp], #32
  437d3c:	csel	w0, w0, wzr, ne  // ne = any
  437d40:	ret
  437d44:	mov	x1, #0x2301                	// #8961
  437d48:	str	xzr, [x0, #16]
  437d4c:	movk	x1, #0x6745, lsl #16
  437d50:	str	wzr, [x0, #24]
  437d54:	movk	x1, #0xab89, lsl #32
  437d58:	movk	x1, #0xefcd, lsl #48
  437d5c:	str	x1, [x0]
  437d60:	mov	x1, #0xdcfe                	// #56574
  437d64:	movk	x1, #0x98ba, lsl #16
  437d68:	movk	x1, #0x5476, lsl #32
  437d6c:	movk	x1, #0x1032, lsl #48
  437d70:	str	x1, [x0, #8]
  437d74:	ret
  437d78:	mov	x2, x0
  437d7c:	mov	x0, x1
  437d80:	ldp	x3, x1, [x2]
  437d84:	stp	x3, x1, [x0]
  437d88:	ret
  437d8c:	stp	x29, x30, [sp, #-112]!
  437d90:	and	x3, x1, #0xfffffffffffffffc
  437d94:	add	x3, x0, x3
  437d98:	mov	x29, sp
  437d9c:	ldr	w4, [x2, #16]
  437da0:	lsr	x5, x1, #32
  437da4:	str	x3, [sp, #104]
  437da8:	add	w4, w4, w1
  437dac:	ldr	w3, [x2, #20]
  437db0:	stp	x21, x22, [sp, #32]
  437db4:	cmp	x1, w4, uxtw
  437db8:	stp	x23, x24, [sp, #48]
  437dbc:	add	w3, w3, w5
  437dc0:	cinc	w1, w3, hi  // hi = pmore
  437dc4:	ldp	w23, w24, [x2, #8]
  437dc8:	stp	x25, x26, [sp, #64]
  437dcc:	ldp	w26, w22, [x2]
  437dd0:	stp	x27, x28, [sp, #80]
  437dd4:	mov	w27, #0xcde6                	// #52710
  437dd8:	mov	w28, #0x7d6                 	// #2006
  437ddc:	movk	w27, #0x21e1, lsl #16
  437de0:	movk	w28, #0xc337, lsl #16
  437de4:	stp	x19, x20, [sp, #16]
  437de8:	str	w4, [x2, #16]
  437dec:	str	w1, [x2, #20]
  437df0:	mov	w1, #0xa478                	// #42104
  437df4:	movk	w1, #0xd76a, lsl #16
  437df8:	add	w5, w26, w1
  437dfc:	mov	w1, #0xb756                	// #46934
  437e00:	movk	w1, #0xe8c7, lsl #16
  437e04:	add	w4, w24, w1
  437e08:	mov	w1, #0x70db                	// #28891
  437e0c:	movk	w1, #0x2420, lsl #16
  437e10:	add	w8, w23, w1
  437e14:	mov	w1, #0xceee                	// #52974
  437e18:	movk	w1, #0xc1bd, lsl #16
  437e1c:	add	w10, w22, w1
  437e20:	ldr	x1, [sp, #104]
  437e24:	cmp	x0, x1
  437e28:	b.cc	437e50 <ferror@plt+0x354e0>  // b.lo, b.ul, b.last
  437e2c:	stp	w26, w22, [x2]
  437e30:	stp	w23, w24, [x2, #8]
  437e34:	ldp	x19, x20, [sp, #16]
  437e38:	ldp	x21, x22, [sp, #32]
  437e3c:	ldp	x23, x24, [sp, #48]
  437e40:	ldp	x25, x26, [sp, #64]
  437e44:	ldp	x27, x28, [sp, #80]
  437e48:	ldp	x29, x30, [sp], #112
  437e4c:	ret
  437e50:	ldp	w14, w7, [x0]
  437e54:	eor	w3, w23, w24
  437e58:	and	w3, w3, w22
  437e5c:	mov	w6, #0xfaf                 	// #4015
  437e60:	eor	w3, w3, w24
  437e64:	movk	w6, #0xf57c, lsl #16
  437e68:	add	w3, w3, w14
  437e6c:	ldr	w11, [x0, #20]
  437e70:	add	w3, w3, w5
  437e74:	ldr	w20, [x0, #36]
  437e78:	ldp	w16, w9, [x0, #8]
  437e7c:	ror	w3, w3, #25
  437e80:	add	w1, w22, w3
  437e84:	eor	w3, w22, w23
  437e88:	and	w3, w3, w1
  437e8c:	mov	w12, #0xffff5bb1            	// #-42063
  437e90:	eor	w3, w3, w23
  437e94:	mov	w17, #0xd7be                	// #55230
  437e98:	add	w3, w3, w7
  437e9c:	movk	w17, #0x895c, lsl #16
  437ea0:	add	w3, w3, w4
  437ea4:	mov	w19, #0x7193                	// #29075
  437ea8:	movk	w19, #0xfd98, lsl #16
  437eac:	mov	w21, #0x438e                	// #17294
  437eb0:	movk	w21, #0xa679, lsl #16
  437eb4:	ror	w3, w3, #20
  437eb8:	add	w5, w1, w3
  437ebc:	eor	w3, w22, w1
  437ec0:	and	w3, w3, w5
  437ec4:	mov	w25, #0x821                 	// #2081
  437ec8:	eor	w3, w3, w22
  437ecc:	movk	w25, #0x49b4, lsl #16
  437ed0:	add	w3, w3, w16
  437ed4:	add	x0, x0, #0x40
  437ed8:	add	w3, w3, w8
  437edc:	ror	w3, w3, #15
  437ee0:	add	w4, w5, w3
  437ee4:	eor	w3, w1, w5
  437ee8:	and	w3, w3, w4
  437eec:	eor	w3, w3, w1
  437ef0:	add	w3, w3, w9
  437ef4:	add	w3, w3, w10
  437ef8:	ror	w3, w3, #10
  437efc:	add	w13, w4, w3
  437f00:	eor	w3, w5, w4
  437f04:	and	w3, w3, w13
  437f08:	eor	w3, w3, w5
  437f0c:	add	w3, w3, w1
  437f10:	ldur	w1, [x0, #-48]
  437f14:	add	w6, w1, w6
  437f18:	add	w3, w6, w3
  437f1c:	ror	w3, w3, #25
  437f20:	add	w6, w13, w3
  437f24:	eor	w3, w4, w13
  437f28:	and	w3, w3, w6
  437f2c:	eor	w3, w3, w4
  437f30:	add	w3, w3, w5
  437f34:	mov	w5, #0xc62a                	// #50730
  437f38:	movk	w5, #0x4787, lsl #16
  437f3c:	add	w18, w11, w5
  437f40:	add	w3, w18, w3
  437f44:	mov	w5, #0x4613                	// #17939
  437f48:	movk	w5, #0xa830, lsl #16
  437f4c:	ror	w3, w3, #20
  437f50:	add	w18, w6, w3
  437f54:	eor	w3, w13, w6
  437f58:	and	w3, w3, w18
  437f5c:	eor	w3, w3, w13
  437f60:	add	w3, w3, w4
  437f64:	ldur	w4, [x0, #-40]
  437f68:	add	w5, w4, w5
  437f6c:	add	w5, w5, w3
  437f70:	eor	w3, w6, w18
  437f74:	ror	w5, w5, #15
  437f78:	add	w8, w18, w5
  437f7c:	mov	w5, #0x9501                	// #38145
  437f80:	and	w3, w3, w8
  437f84:	movk	w5, #0xfd46, lsl #16
  437f88:	eor	w3, w3, w6
  437f8c:	add	w3, w3, w13
  437f90:	ldur	w13, [x0, #-36]
  437f94:	add	w5, w13, w5
  437f98:	add	w5, w5, w3
  437f9c:	eor	w3, w18, w8
  437fa0:	ror	w5, w5, #10
  437fa4:	add	w15, w8, w5
  437fa8:	mov	w5, #0x98d8                	// #39128
  437fac:	and	w3, w3, w15
  437fb0:	movk	w5, #0x6980, lsl #16
  437fb4:	eor	w3, w3, w18
  437fb8:	add	w3, w3, w6
  437fbc:	ldur	w6, [x0, #-32]
  437fc0:	add	w10, w6, w5
  437fc4:	mov	w5, #0xf7af                	// #63407
  437fc8:	add	w10, w10, w3
  437fcc:	eor	w3, w8, w15
  437fd0:	movk	w5, #0x8b44, lsl #16
  437fd4:	ror	w10, w10, #25
  437fd8:	add	w10, w15, w10
  437fdc:	and	w3, w3, w10
  437fe0:	eor	w3, w3, w8
  437fe4:	add	w3, w3, w18
  437fe8:	add	w18, w20, w5
  437fec:	add	w3, w18, w3
  437ff0:	eor	w5, w15, w10
  437ff4:	ror	w18, w3, #20
  437ff8:	add	w3, w10, w18
  437ffc:	and	w5, w5, w3
  438000:	eor	w5, w5, w15
  438004:	add	w5, w5, w8
  438008:	ldur	w8, [x0, #-24]
  43800c:	add	w12, w8, w12
  438010:	add	w12, w12, w5
  438014:	eor	w5, w10, w3
  438018:	ror	w12, w12, #15
  43801c:	add	w12, w3, w12
  438020:	and	w5, w5, w12
  438024:	eor	w5, w5, w10
  438028:	add	w5, w5, w15
  43802c:	ldur	w15, [x0, #-20]
  438030:	add	w18, w15, w17
  438034:	eor	w17, w3, w12
  438038:	add	w5, w18, w5
  43803c:	ror	w18, w5, #10
  438040:	add	w5, w12, w18
  438044:	mov	w18, #0x1122                	// #4386
  438048:	and	w17, w17, w5
  43804c:	movk	w18, #0x6b90, lsl #16
  438050:	eor	w17, w17, w3
  438054:	add	w17, w17, w10
  438058:	ldur	w10, [x0, #-16]
  43805c:	add	w18, w10, w18
  438060:	add	w17, w18, w17
  438064:	eor	w18, w12, w5
  438068:	ror	w17, w17, #25
  43806c:	add	w17, w5, w17
  438070:	and	w18, w18, w17
  438074:	eor	w18, w18, w12
  438078:	add	w18, w18, w3
  43807c:	ldur	w3, [x0, #-12]
  438080:	add	w19, w3, w19
  438084:	add	w19, w19, w18
  438088:	eor	w18, w5, w17
  43808c:	ror	w19, w19, #20
  438090:	add	w19, w17, w19
  438094:	and	w18, w18, w19
  438098:	eor	w18, w18, w5
  43809c:	add	w18, w18, w12
  4380a0:	ldur	w12, [x0, #-8]
  4380a4:	add	w21, w12, w21
  4380a8:	add	w21, w21, w18
  4380ac:	eor	w18, w17, w19
  4380b0:	ror	w21, w21, #15
  4380b4:	add	w21, w19, w21
  4380b8:	and	w18, w18, w21
  4380bc:	eor	w18, w18, w17
  4380c0:	add	w18, w18, w5
  4380c4:	ldur	w5, [x0, #-4]
  4380c8:	add	w25, w5, w25
  4380cc:	add	w18, w25, w18
  4380d0:	ror	w18, w18, #10
  4380d4:	add	w18, w21, w18
  4380d8:	eor	w25, w21, w18
  4380dc:	and	w25, w25, w19
  4380e0:	eor	w25, w25, w21
  4380e4:	add	w17, w25, w17
  4380e8:	mov	w25, #0x2562                	// #9570
  4380ec:	movk	w25, #0xf61e, lsl #16
  4380f0:	add	w25, w7, w25
  4380f4:	add	w17, w25, w17
  4380f8:	ror	w17, w17, #27
  4380fc:	add	w17, w18, w17
  438100:	eor	w25, w18, w17
  438104:	and	w25, w25, w21
  438108:	eor	w25, w25, w18
  43810c:	add	w19, w25, w19
  438110:	mov	w25, #0xb340                	// #45888
  438114:	movk	w25, #0xc040, lsl #16
  438118:	add	w25, w4, w25
  43811c:	add	w19, w25, w19
  438120:	ror	w19, w19, #23
  438124:	add	w19, w17, w19
  438128:	eor	w25, w17, w19
  43812c:	and	w25, w25, w18
  438130:	eor	w25, w25, w17
  438134:	add	w21, w25, w21
  438138:	mov	w25, #0x5a51                	// #23121
  43813c:	movk	w25, #0x265e, lsl #16
  438140:	add	w25, w15, w25
  438144:	add	w21, w25, w21
  438148:	ror	w21, w21, #18
  43814c:	add	w21, w19, w21
  438150:	eor	w25, w19, w21
  438154:	and	w25, w25, w17
  438158:	eor	w25, w25, w19
  43815c:	add	w18, w25, w18
  438160:	mov	w25, #0xc7aa                	// #51114
  438164:	movk	w25, #0xe9b6, lsl #16
  438168:	add	w25, w14, w25
  43816c:	add	w18, w25, w18
  438170:	ror	w18, w18, #12
  438174:	add	w18, w21, w18
  438178:	eor	w25, w21, w18
  43817c:	and	w25, w25, w19
  438180:	eor	w25, w25, w21
  438184:	add	w17, w25, w17
  438188:	mov	w25, #0x105d                	// #4189
  43818c:	movk	w25, #0xd62f, lsl #16
  438190:	add	w25, w11, w25
  438194:	add	w17, w25, w17
  438198:	ror	w17, w17, #27
  43819c:	add	w17, w18, w17
  4381a0:	eor	w25, w18, w17
  4381a4:	and	w25, w25, w21
  4381a8:	eor	w25, w25, w18
  4381ac:	add	w19, w25, w19
  4381b0:	mov	w25, #0x1453                	// #5203
  4381b4:	movk	w25, #0x244, lsl #16
  4381b8:	add	w25, w8, w25
  4381bc:	add	w19, w25, w19
  4381c0:	ror	w19, w19, #23
  4381c4:	add	w19, w17, w19
  4381c8:	eor	w25, w17, w19
  4381cc:	and	w25, w25, w18
  4381d0:	eor	w25, w25, w17
  4381d4:	add	w21, w25, w21
  4381d8:	mov	w25, #0xe681                	// #59009
  4381dc:	movk	w25, #0xd8a1, lsl #16
  4381e0:	add	w25, w5, w25
  4381e4:	add	w21, w25, w21
  4381e8:	ror	w21, w21, #18
  4381ec:	add	w21, w19, w21
  4381f0:	eor	w25, w19, w21
  4381f4:	and	w25, w25, w17
  4381f8:	eor	w25, w25, w19
  4381fc:	add	w18, w25, w18
  438200:	mov	w25, #0xfbc8                	// #64456
  438204:	movk	w25, #0xe7d3, lsl #16
  438208:	add	w25, w1, w25
  43820c:	add	w18, w25, w18
  438210:	ror	w18, w18, #12
  438214:	add	w18, w21, w18
  438218:	eor	w25, w21, w18
  43821c:	and	w25, w25, w19
  438220:	eor	w25, w25, w21
  438224:	add	w17, w25, w17
  438228:	add	w25, w20, w27
  43822c:	add	w17, w25, w17
  438230:	ror	w17, w17, #27
  438234:	add	w17, w18, w17
  438238:	eor	w25, w18, w17
  43823c:	and	w25, w25, w21
  438240:	eor	w25, w25, w18
  438244:	add	w19, w25, w19
  438248:	add	w25, w12, w28
  43824c:	add	w19, w25, w19
  438250:	ror	w19, w19, #23
  438254:	add	w19, w17, w19
  438258:	eor	w25, w17, w19
  43825c:	and	w25, w25, w18
  438260:	eor	w25, w25, w17
  438264:	add	w21, w25, w21
  438268:	mov	w25, #0xd87                 	// #3463
  43826c:	movk	w25, #0xf4d5, lsl #16
  438270:	add	w25, w9, w25
  438274:	add	w21, w25, w21
  438278:	ror	w21, w21, #18
  43827c:	add	w21, w19, w21
  438280:	eor	w25, w19, w21
  438284:	and	w25, w25, w17
  438288:	eor	w25, w25, w19
  43828c:	add	w18, w25, w18
  438290:	mov	w25, #0x14ed                	// #5357
  438294:	movk	w25, #0x455a, lsl #16
  438298:	add	w25, w6, w25
  43829c:	add	w18, w25, w18
  4382a0:	ror	w18, w18, #12
  4382a4:	add	w18, w21, w18
  4382a8:	eor	w25, w21, w18
  4382ac:	and	w25, w25, w19
  4382b0:	eor	w25, w25, w21
  4382b4:	add	w17, w25, w17
  4382b8:	mov	w25, #0xe905                	// #59653
  4382bc:	movk	w25, #0xa9e3, lsl #16
  4382c0:	add	w25, w3, w25
  4382c4:	add	w17, w25, w17
  4382c8:	ror	w17, w17, #27
  4382cc:	add	w17, w18, w17
  4382d0:	eor	w25, w18, w17
  4382d4:	and	w25, w25, w21
  4382d8:	eor	w25, w25, w18
  4382dc:	add	w19, w25, w19
  4382e0:	mov	w25, #0xa3f8                	// #41976
  4382e4:	movk	w25, #0xfcef, lsl #16
  4382e8:	add	w25, w16, w25
  4382ec:	add	w19, w25, w19
  4382f0:	ror	w19, w19, #23
  4382f4:	add	w19, w17, w19
  4382f8:	eor	w25, w17, w19
  4382fc:	and	w25, w25, w18
  438300:	eor	w25, w25, w17
  438304:	add	w21, w25, w21
  438308:	mov	w25, #0x2d9                 	// #729
  43830c:	movk	w25, #0x676f, lsl #16
  438310:	add	w25, w13, w25
  438314:	add	w21, w25, w21
  438318:	ror	w21, w21, #18
  43831c:	add	w21, w19, w21
  438320:	eor	w25, w19, w21
  438324:	and	w30, w25, w17
  438328:	eor	w30, w30, w19
  43832c:	add	w18, w30, w18
  438330:	mov	w30, #0x4c8a                	// #19594
  438334:	movk	w30, #0x8d2a, lsl #16
  438338:	add	w30, w10, w30
  43833c:	add	w18, w30, w18
  438340:	ror	w18, w18, #12
  438344:	add	w18, w21, w18
  438348:	eor	w25, w25, w18
  43834c:	add	w17, w25, w17
  438350:	sub	w25, w11, #0x5c, lsl #12
  438354:	sub	w25, w25, #0x6be
  438358:	add	w17, w25, w17
  43835c:	eor	w25, w21, w18
  438360:	ror	w17, w17, #28
  438364:	add	w17, w18, w17
  438368:	eor	w25, w25, w17
  43836c:	add	w19, w25, w19
  438370:	mov	w25, #0xf681                	// #63105
  438374:	movk	w25, #0x8771, lsl #16
  438378:	add	w25, w6, w25
  43837c:	add	w19, w25, w19
  438380:	eor	w25, w18, w17
  438384:	ror	w19, w19, #21
  438388:	add	w19, w17, w19
  43838c:	eor	w25, w25, w19
  438390:	add	w21, w25, w21
  438394:	mov	w25, #0x6122                	// #24866
  438398:	movk	w25, #0x6d9d, lsl #16
  43839c:	add	w25, w15, w25
  4383a0:	add	w21, w25, w21
  4383a4:	eor	w25, w17, w19
  4383a8:	ror	w21, w21, #16
  4383ac:	add	w21, w19, w21
  4383b0:	eor	w25, w25, w21
  4383b4:	add	w18, w25, w18
  4383b8:	mov	w25, #0x380c                	// #14348
  4383bc:	movk	w25, #0xfde5, lsl #16
  4383c0:	add	w25, w12, w25
  4383c4:	add	w25, w25, w18
  4383c8:	eor	w18, w19, w21
  4383cc:	ror	w25, w25, #9
  4383d0:	add	w25, w21, w25
  4383d4:	eor	w18, w18, w25
  4383d8:	add	w17, w18, w17
  4383dc:	mov	w18, #0xea44                	// #59972
  4383e0:	movk	w18, #0xa4be, lsl #16
  4383e4:	add	w18, w7, w18
  4383e8:	add	w17, w18, w17
  4383ec:	eor	w18, w21, w25
  4383f0:	ror	w17, w17, #28
  4383f4:	add	w17, w25, w17
  4383f8:	eor	w18, w18, w17
  4383fc:	add	w19, w18, w19
  438400:	mov	w18, #0xcfa9                	// #53161
  438404:	movk	w18, #0x4bde, lsl #16
  438408:	add	w18, w1, w18
  43840c:	add	w19, w18, w19
  438410:	eor	w18, w25, w17
  438414:	ror	w19, w19, #21
  438418:	add	w19, w17, w19
  43841c:	eor	w18, w18, w19
  438420:	add	w21, w18, w21
  438424:	mov	w18, #0x4b60                	// #19296
  438428:	movk	w18, #0xf6bb, lsl #16
  43842c:	add	w18, w13, w18
  438430:	add	w18, w18, w21
  438434:	eor	w21, w17, w19
  438438:	ror	w18, w18, #16
  43843c:	add	w18, w19, w18
  438440:	eor	w21, w21, w18
  438444:	add	w25, w21, w25
  438448:	mov	w21, #0xbc70                	// #48240
  43844c:	movk	w21, #0xbebf, lsl #16
  438450:	add	w21, w8, w21
  438454:	add	w25, w21, w25
  438458:	eor	w21, w19, w18
  43845c:	sub	w8, w8, #0x100, lsl #12
  438460:	sub	w8, w8, #0xb83
  438464:	ror	w25, w25, #9
  438468:	add	w25, w18, w25
  43846c:	eor	w21, w21, w25
  438470:	add	w17, w21, w17
  438474:	mov	w21, #0x7ec6                	// #32454
  438478:	movk	w21, #0x289b, lsl #16
  43847c:	add	w21, w3, w21
  438480:	add	w21, w21, w17
  438484:	eor	w17, w18, w25
  438488:	ror	w21, w21, #28
  43848c:	add	w21, w25, w21
  438490:	eor	w17, w17, w21
  438494:	add	w19, w17, w19
  438498:	mov	w17, #0x27fa                	// #10234
  43849c:	movk	w17, #0xeaa1, lsl #16
  4384a0:	add	w17, w14, w17
  4384a4:	add	w17, w17, w19
  4384a8:	eor	w19, w25, w21
  4384ac:	ror	w17, w17, #21
  4384b0:	add	w17, w21, w17
  4384b4:	eor	w19, w19, w17
  4384b8:	add	w18, w19, w18
  4384bc:	mov	w19, #0x3085                	// #12421
  4384c0:	movk	w19, #0xd4ef, lsl #16
  4384c4:	add	w19, w9, w19
  4384c8:	add	w19, w19, w18
  4384cc:	eor	w18, w21, w17
  4384d0:	ror	w19, w19, #16
  4384d4:	add	w19, w17, w19
  4384d8:	eor	w18, w18, w19
  4384dc:	add	w25, w18, w25
  4384e0:	mov	w18, #0x1d05                	// #7429
  4384e4:	movk	w18, #0x488, lsl #16
  4384e8:	add	w18, w4, w18
  4384ec:	add	w25, w18, w25
  4384f0:	eor	w18, w17, w19
  4384f4:	ror	w25, w25, #9
  4384f8:	add	w25, w19, w25
  4384fc:	eor	w18, w18, w25
  438500:	add	w21, w18, w21
  438504:	mov	w18, #0xd039                	// #53305
  438508:	movk	w18, #0xd9d4, lsl #16
  43850c:	add	w18, w20, w18
  438510:	add	w18, w18, w21
  438514:	eor	w21, w19, w25
  438518:	ror	w18, w18, #28
  43851c:	add	w18, w25, w18
  438520:	eor	w21, w21, w18
  438524:	add	w17, w21, w17
  438528:	mov	w21, #0x99e5                	// #39397
  43852c:	movk	w21, #0xe6db, lsl #16
  438530:	add	w21, w10, w21
  438534:	add	w21, w21, w17
  438538:	eor	w17, w25, w18
  43853c:	ror	w21, w21, #21
  438540:	add	w21, w18, w21
  438544:	eor	w17, w17, w21
  438548:	add	w19, w17, w19
  43854c:	mov	w17, #0x7cf8                	// #31992
  438550:	movk	w17, #0x1fa2, lsl #16
  438554:	add	w17, w5, w17
  438558:	add	w19, w17, w19
  43855c:	eor	w17, w18, w21
  438560:	ror	w19, w19, #16
  438564:	add	w19, w21, w19
  438568:	eor	w17, w17, w19
  43856c:	add	w25, w17, w25
  438570:	mov	w17, #0x5665                	// #22117
  438574:	movk	w17, #0xc4ac, lsl #16
  438578:	add	w17, w16, w17
  43857c:	add	w17, w17, w25
  438580:	ror	w17, w17, #9
  438584:	add	w17, w19, w17
  438588:	orn	w25, w17, w21
  43858c:	eor	w25, w25, w19
  438590:	add	w18, w25, w18
  438594:	mov	w25, #0x2244                	// #8772
  438598:	movk	w25, #0xf429, lsl #16
  43859c:	add	w14, w14, w25
  4385a0:	add	w18, w14, w18
  4385a4:	ror	w18, w18, #26
  4385a8:	add	w18, w17, w18
  4385ac:	orn	w14, w18, w19
  4385b0:	eor	w14, w14, w17
  4385b4:	add	w21, w14, w21
  4385b8:	mov	w14, #0xff97                	// #65431
  4385bc:	movk	w14, #0x432a, lsl #16
  4385c0:	add	w13, w13, w14
  4385c4:	add	w21, w13, w21
  4385c8:	ror	w21, w21, #22
  4385cc:	add	w21, w18, w21
  4385d0:	orn	w13, w21, w17
  4385d4:	eor	w13, w13, w18
  4385d8:	add	w19, w13, w19
  4385dc:	mov	w13, #0x23a7                	// #9127
  4385e0:	movk	w13, #0xab94, lsl #16
  4385e4:	add	w12, w12, w13
  4385e8:	add	w19, w12, w19
  4385ec:	ror	w19, w19, #17
  4385f0:	add	w19, w21, w19
  4385f4:	orn	w12, w19, w18
  4385f8:	eor	w12, w12, w21
  4385fc:	add	w17, w12, w17
  438600:	mov	w12, #0xa039                	// #41017
  438604:	movk	w12, #0xfc93, lsl #16
  438608:	add	w11, w11, w12
  43860c:	add	w17, w11, w17
  438610:	ror	w17, w17, #11
  438614:	add	w17, w19, w17
  438618:	orn	w11, w17, w21
  43861c:	eor	w11, w11, w19
  438620:	add	w18, w11, w18
  438624:	mov	w11, #0x59c3                	// #22979
  438628:	movk	w11, #0x655b, lsl #16
  43862c:	add	w10, w10, w11
  438630:	add	w18, w10, w18
  438634:	ror	w18, w18, #26
  438638:	add	w18, w17, w18
  43863c:	orn	w10, w18, w19
  438640:	eor	w10, w10, w17
  438644:	add	w21, w10, w21
  438648:	mov	w10, #0xcc92                	// #52370
  43864c:	movk	w10, #0x8f0c, lsl #16
  438650:	add	w9, w9, w10
  438654:	add	w21, w9, w21
  438658:	ror	w21, w21, #22
  43865c:	add	w21, w18, w21
  438660:	orn	w9, w21, w17
  438664:	eor	w9, w9, w18
  438668:	add	w19, w9, w19
  43866c:	add	w8, w8, w19
  438670:	ror	w8, w8, #17
  438674:	add	w8, w21, w8
  438678:	orn	w9, w8, w18
  43867c:	eor	w9, w9, w21
  438680:	add	w17, w9, w17
  438684:	mov	w9, #0x5dd1                	// #24017
  438688:	movk	w9, #0x8584, lsl #16
  43868c:	add	w7, w7, w9
  438690:	add	w17, w7, w17
  438694:	ror	w17, w17, #11
  438698:	add	w17, w8, w17
  43869c:	orn	w7, w17, w21
  4386a0:	eor	w7, w7, w8
  4386a4:	add	w18, w7, w18
  4386a8:	mov	w7, #0x7e4f                	// #32335
  4386ac:	movk	w7, #0x6fa8, lsl #16
  4386b0:	add	w6, w6, w7
  4386b4:	add	w18, w6, w18
  4386b8:	ror	w18, w18, #26
  4386bc:	add	w18, w17, w18
  4386c0:	orn	w6, w18, w8
  4386c4:	eor	w6, w6, w17
  4386c8:	add	w21, w6, w21
  4386cc:	mov	w6, #0xe6e0                	// #59104
  4386d0:	movk	w6, #0xfe2c, lsl #16
  4386d4:	add	w5, w5, w6
  4386d8:	add	w21, w5, w21
  4386dc:	ror	w21, w21, #22
  4386e0:	add	w21, w18, w21
  4386e4:	orn	w5, w21, w17
  4386e8:	eor	w5, w5, w18
  4386ec:	add	w8, w5, w8
  4386f0:	mov	w5, #0x4314                	// #17172
  4386f4:	movk	w5, #0xa301, lsl #16
  4386f8:	add	w4, w4, w5
  4386fc:	add	w8, w4, w8
  438700:	ror	w8, w8, #17
  438704:	add	w8, w21, w8
  438708:	orn	w4, w8, w18
  43870c:	eor	w4, w4, w21
  438710:	add	w17, w4, w17
  438714:	mov	w4, #0x11a1                	// #4513
  438718:	movk	w4, #0x4e08, lsl #16
  43871c:	add	w3, w3, w4
  438720:	add	w17, w3, w17
  438724:	ror	w17, w17, #11
  438728:	add	w17, w8, w17
  43872c:	orn	w3, w17, w21
  438730:	eor	w3, w3, w8
  438734:	add	w18, w3, w18
  438738:	mov	w3, #0x7e82                	// #32386
  43873c:	movk	w3, #0xf753, lsl #16
  438740:	add	w1, w1, w3
  438744:	add	w18, w1, w18
  438748:	ror	w18, w18, #26
  43874c:	add	w18, w17, w18
  438750:	orn	w1, w18, w8
  438754:	add	w26, w26, w18
  438758:	eor	w1, w1, w17
  43875c:	add	w21, w1, w21
  438760:	mov	w1, #0xf235                	// #62005
  438764:	movk	w1, #0xbd3a, lsl #16
  438768:	add	w15, w15, w1
  43876c:	add	w21, w15, w21
  438770:	ror	w21, w21, #22
  438774:	add	w21, w18, w21
  438778:	orn	w1, w21, w17
  43877c:	add	w24, w24, w21
  438780:	eor	w1, w1, w18
  438784:	add	w8, w1, w8
  438788:	mov	w1, #0xd2bb                	// #53947
  43878c:	movk	w1, #0x2ad7, lsl #16
  438790:	add	w16, w16, w1
  438794:	add	w8, w16, w8
  438798:	ror	w8, w8, #17
  43879c:	add	w8, w21, w8
  4387a0:	orn	w1, w8, w18
  4387a4:	add	w23, w23, w8
  4387a8:	eor	w1, w1, w21
  4387ac:	add	w17, w1, w17
  4387b0:	mov	w1, #0xd391                	// #54161
  4387b4:	movk	w1, #0xeb86, lsl #16
  4387b8:	add	w20, w20, w1
  4387bc:	add	w17, w20, w17
  4387c0:	ror	w17, w17, #11
  4387c4:	add	w17, w8, w17
  4387c8:	add	w22, w22, w17
  4387cc:	b	437df0 <ferror@plt+0x35480>
  4387d0:	stp	x29, x30, [sp, #-48]!
  4387d4:	mov	x29, sp
  4387d8:	stp	x19, x20, [sp, #16]
  4387dc:	mov	x19, x0
  4387e0:	ldr	w0, [x0, #24]
  4387e4:	stp	x21, x22, [sp, #32]
  4387e8:	mov	x22, x1
  4387ec:	ldr	w2, [x19, #16]
  4387f0:	adds	w2, w2, w0
  4387f4:	str	w2, [x19, #16]
  4387f8:	b.cc	438808 <ferror@plt+0x35e98>  // b.lo, b.ul, b.last
  4387fc:	ldr	w1, [x19, #20]
  438800:	add	w1, w1, #0x1
  438804:	str	w1, [x19, #20]
  438808:	cmp	w0, #0x38
  43880c:	mov	w20, #0x78                  	// #120
  438810:	mov	w21, w0
  438814:	sub	w1, w20, w0
  438818:	mov	w20, #0x38                  	// #56
  43881c:	sub	w20, w20, w0
  438820:	csel	x20, x20, x1, cc  // cc = lo, ul, last
  438824:	add	x0, x21, #0x1c
  438828:	mov	x2, x20
  43882c:	add	x0, x19, x0
  438830:	add	x20, x20, x21
  438834:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  438838:	add	x1, x1, #0xcb8
  43883c:	bl	4022e0 <memcpy@plt>
  438840:	ldr	w2, [x19, #16]
  438844:	add	x1, x19, x20
  438848:	lsl	w0, w2, #3
  43884c:	str	w0, [x1, #28]
  438850:	ldr	w0, [x19, #20]
  438854:	extr	w0, w0, w2, #29
  438858:	str	w0, [x1, #32]
  43885c:	mov	x2, x19
  438860:	add	x1, x20, #0x8
  438864:	add	x0, x19, #0x1c
  438868:	bl	437d8c <ferror@plt+0x3541c>
  43886c:	mov	x1, x22
  438870:	mov	x0, x19
  438874:	ldp	x19, x20, [sp, #16]
  438878:	ldp	x21, x22, [sp, #32]
  43887c:	ldp	x29, x30, [sp], #48
  438880:	b	437d78 <ferror@plt+0x35408>
  438884:	stp	x29, x30, [sp, #-80]!
  438888:	mov	x29, sp
  43888c:	stp	x21, x22, [sp, #32]
  438890:	ldr	w21, [x2, #24]
  438894:	stp	x19, x20, [sp, #16]
  438898:	mov	x19, x1
  43889c:	stp	x23, x24, [sp, #48]
  4388a0:	stp	x25, x26, [sp, #64]
  4388a4:	mov	x26, x0
  4388a8:	mov	x25, x2
  4388ac:	cbz	w21, 438930 <ferror@plt+0x35fc0>
  4388b0:	mov	x20, #0x80                  	// #128
  4388b4:	mov	w22, w21
  4388b8:	sub	x20, x20, w21, uxtw
  4388bc:	add	x0, x22, #0x1c
  4388c0:	cmp	x20, x1
  4388c4:	add	x0, x25, x0
  4388c8:	csel	x20, x20, x1, ls  // ls = plast
  4388cc:	mov	x1, x26
  4388d0:	mov	x2, x20
  4388d4:	add	x22, x22, x20
  4388d8:	bl	4022e0 <memcpy@plt>
  4388dc:	ldr	w1, [x25, #24]
  4388e0:	cmp	x22, #0x40
  4388e4:	add	w1, w1, w20
  4388e8:	str	w1, [x25, #24]
  4388ec:	b.ls	438928 <ferror@plt+0x35fb8>  // b.plast
  4388f0:	add	x23, x25, #0x1c
  4388f4:	and	x24, x22, #0xffffffffffffffc0
  4388f8:	mov	x2, x25
  4388fc:	mov	x1, x24
  438900:	mov	x0, x23
  438904:	bl	437d8c <ferror@plt+0x3541c>
  438908:	add	x1, x24, #0x1c
  43890c:	add	w21, w21, w20
  438910:	and	x2, x22, #0x3f
  438914:	add	x1, x25, x1
  438918:	mov	x0, x23
  43891c:	and	w21, w21, #0x3f
  438920:	bl	4022e0 <memcpy@plt>
  438924:	str	w21, [x25, #24]
  438928:	add	x26, x26, x20
  43892c:	sub	x19, x19, x20
  438930:	cmp	x19, #0x40
  438934:	b.ls	4389dc <ferror@plt+0x3606c>  // b.plast
  438938:	tst	x26, #0x3
  43893c:	b.eq	4389c0 <ferror@plt+0x36050>  // b.none
  438940:	mov	x20, x26
  438944:	add	x21, x25, #0x1c
  438948:	add	x22, x26, x19
  43894c:	ldp	x0, x1, [x20]
  438950:	stp	x0, x1, [x21]
  438954:	mov	x2, x25
  438958:	ldp	x0, x1, [x20, #16]
  43895c:	stp	x0, x1, [x21, #16]
  438960:	add	x20, x20, #0x40
  438964:	ldp	x0, x1, [x20, #-32]
  438968:	stp	x0, x1, [x21, #32]
  43896c:	ldp	x0, x1, [x20, #-16]
  438970:	stp	x0, x1, [x21, #48]
  438974:	mov	x0, x21
  438978:	mov	x1, #0x40                  	// #64
  43897c:	bl	437d8c <ferror@plt+0x3541c>
  438980:	sub	x0, x22, x20
  438984:	cmp	x0, #0x40
  438988:	b.hi	43894c <ferror@plt+0x35fdc>  // b.pmore
  43898c:	sub	x3, x19, #0x41
  438990:	sub	x19, x19, #0x40
  438994:	mov	x1, #0xffffffffffffffc0    	// #-64
  438998:	lsr	x3, x3, #6
  43899c:	add	x0, x3, #0x1
  4389a0:	madd	x19, x3, x1, x19
  4389a4:	add	x26, x26, x0, lsl #6
  4389a8:	mov	x2, x19
  4389ac:	mov	x1, x26
  4389b0:	add	x0, x25, #0x1c
  4389b4:	bl	4022e0 <memcpy@plt>
  4389b8:	str	w19, [x25, #24]
  4389bc:	b	4389e0 <ferror@plt+0x36070>
  4389c0:	and	x20, x19, #0xffffffffffffffc0
  4389c4:	mov	x0, x26
  4389c8:	and	x19, x19, #0x3f
  4389cc:	add	x26, x26, x20
  4389d0:	mov	x2, x25
  4389d4:	mov	x1, x20
  4389d8:	bl	437d8c <ferror@plt+0x3541c>
  4389dc:	cbnz	x19, 4389a8 <ferror@plt+0x36038>
  4389e0:	ldp	x19, x20, [sp, #16]
  4389e4:	ldp	x21, x22, [sp, #32]
  4389e8:	ldp	x23, x24, [sp, #48]
  4389ec:	ldp	x25, x26, [sp, #64]
  4389f0:	ldp	x29, x30, [sp], #80
  4389f4:	ret
  4389f8:	stp	x29, x30, [sp, #-192]!
  4389fc:	mov	x3, x0
  438a00:	mov	x4, x1
  438a04:	mov	x29, sp
  438a08:	add	x0, sp, #0x20
  438a0c:	str	x19, [sp, #16]
  438a10:	mov	x19, x2
  438a14:	bl	437d44 <ferror@plt+0x353d4>
  438a18:	add	x2, sp, #0x20
  438a1c:	mov	x1, x4
  438a20:	mov	x0, x3
  438a24:	bl	438884 <ferror@plt+0x35f14>
  438a28:	mov	x1, x19
  438a2c:	add	x0, sp, #0x20
  438a30:	bl	4387d0 <ferror@plt+0x35e60>
  438a34:	ldr	x19, [sp, #16]
  438a38:	ldp	x29, x30, [sp], #192
  438a3c:	ret
  438a40:	mov	x12, #0x1120                	// #4384
  438a44:	sub	sp, sp, x12
  438a48:	stp	x29, x30, [sp]
  438a4c:	mov	x29, sp
  438a50:	stp	x21, x22, [sp, #32]
  438a54:	mov	x22, #0x1000                	// #4096
  438a58:	mov	x21, x1
  438a5c:	stp	x19, x20, [sp, #16]
  438a60:	mov	x20, x0
  438a64:	add	x0, sp, #0x38
  438a68:	bl	437d44 <ferror@plt+0x353d4>
  438a6c:	mov	x19, #0x0                   	// #0
  438a70:	add	x0, sp, #0xd8
  438a74:	sub	x2, x22, x19
  438a78:	add	x0, x0, x19
  438a7c:	mov	x3, x20
  438a80:	mov	x1, #0x1                   	// #1
  438a84:	bl	402700 <fread@plt>
  438a88:	add	x19, x19, x0
  438a8c:	cmp	x19, #0xfff
  438a90:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
  438a94:	b.ne	438a70 <ferror@plt+0x36100>  // b.any
  438a98:	cbnz	x0, 438ab4 <ferror@plt+0x36144>
  438a9c:	mov	x0, x20
  438aa0:	bl	402970 <ferror@plt>
  438aa4:	mov	w20, w0
  438aa8:	cbz	w0, 438ac8 <ferror@plt+0x36158>
  438aac:	mov	w20, #0x1                   	// #1
  438ab0:	b	438ae8 <ferror@plt+0x36178>
  438ab4:	add	x2, sp, #0x38
  438ab8:	add	x0, sp, #0xd8
  438abc:	mov	x1, #0x1000                	// #4096
  438ac0:	bl	437d8c <ferror@plt+0x3541c>
  438ac4:	b	438a6c <ferror@plt+0x360fc>
  438ac8:	cbz	x19, 438adc <ferror@plt+0x3616c>
  438acc:	add	x2, sp, #0x38
  438ad0:	mov	x1, x19
  438ad4:	add	x0, sp, #0xd8
  438ad8:	bl	438884 <ferror@plt+0x35f14>
  438adc:	mov	x1, x21
  438ae0:	add	x0, sp, #0x38
  438ae4:	bl	4387d0 <ferror@plt+0x35e60>
  438ae8:	mov	w0, w20
  438aec:	mov	x12, #0x1120                	// #4384
  438af0:	ldp	x29, x30, [sp]
  438af4:	ldp	x19, x20, [sp, #16]
  438af8:	ldp	x21, x22, [sp, #32]
  438afc:	add	sp, sp, x12
  438b00:	ret
  438b04:	b	4026d0 <strcmp@plt>
  438b08:	b	4024e0 <strncmp@plt>
  438b0c:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x1d198>
  438b10:	add	x4, x4, #0x11a
  438b14:	mov	x3, x0
  438b18:	mov	w5, #0x2f                  	// #47
  438b1c:	mov	w0, #0x0                   	// #0
  438b20:	mov	w6, #0x43                  	// #67
  438b24:	ldrb	w2, [x3], #1
  438b28:	cbnz	w2, 438b30 <ferror@plt+0x361c0>
  438b2c:	ret
  438b30:	cmp	w2, #0x5c
  438b34:	mul	w1, w0, w6
  438b38:	csel	w2, w2, w5, ne  // ne = any
  438b3c:	sub	w1, w1, #0x71
  438b40:	ldrb	w0, [x4, w2, sxtw]
  438b44:	add	w0, w0, w1
  438b48:	b	438b24 <ferror@plt+0x361b4>
  438b4c:	stp	x29, x30, [sp, #-16]!
  438b50:	mov	x29, sp
  438b54:	bl	4026d0 <strcmp@plt>
  438b58:	cmp	w0, #0x0
  438b5c:	cset	w0, eq  // eq = none
  438b60:	ldp	x29, x30, [sp], #16
  438b64:	ret
  438b68:	stp	x29, x30, [sp, #-48]!
  438b6c:	mov	x29, sp
  438b70:	stp	x19, x20, [sp, #16]
  438b74:	mov	x19, x1
  438b78:	str	x21, [sp, #32]
  438b7c:	bl	439b1c <ferror@plt+0x371ac>
  438b80:	mov	x20, x0
  438b84:	mov	x0, x19
  438b88:	bl	439b1c <ferror@plt+0x371ac>
  438b8c:	mov	x1, x0
  438b90:	mov	x19, x0
  438b94:	mov	x0, x20
  438b98:	bl	438b4c <ferror@plt+0x361dc>
  438b9c:	mov	w21, w0
  438ba0:	mov	x0, x20
  438ba4:	bl	402730 <free@plt>
  438ba8:	mov	x0, x19
  438bac:	bl	402730 <free@plt>
  438bb0:	mov	w0, w21
  438bb4:	ldp	x19, x20, [sp, #16]
  438bb8:	ldr	x21, [sp, #32]
  438bbc:	ldp	x29, x30, [sp], #48
  438bc0:	ret
  438bc4:	cbz	x0, 438bd0 <ferror@plt+0x36260>
  438bc8:	mov	w1, #0x2                   	// #2
  438bcc:	b	402880 <__fsetlocking@plt>
  438bd0:	ret
  438bd4:	b	438bc4 <ferror@plt+0x36254>
  438bd8:	stp	x29, x30, [sp, #-16]!
  438bdc:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  438be0:	mov	x29, sp
  438be4:	ldr	x0, [x0, #1360]
  438be8:	bl	438bc4 <ferror@plt+0x36254>
  438bec:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  438bf0:	ldr	x0, [x0, #1352]
  438bf4:	bl	438bc4 <ferror@plt+0x36254>
  438bf8:	ldp	x29, x30, [sp], #16
  438bfc:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  438c00:	ldr	x0, [x0, #1336]
  438c04:	b	438bc4 <ferror@plt+0x36254>
  438c08:	stp	x29, x30, [sp, #-32]!
  438c0c:	mov	x29, sp
  438c10:	str	x19, [sp, #16]
  438c14:	bl	402490 <fopen@plt>
  438c18:	mov	x19, x0
  438c1c:	bl	438bc4 <ferror@plt+0x36254>
  438c20:	mov	x0, x19
  438c24:	ldr	x19, [sp, #16]
  438c28:	ldp	x29, x30, [sp], #32
  438c2c:	ret
  438c30:	stp	x29, x30, [sp, #-32]!
  438c34:	mov	x29, sp
  438c38:	str	x19, [sp, #16]
  438c3c:	bl	402540 <fdopen@plt>
  438c40:	mov	x19, x0
  438c44:	bl	438bc4 <ferror@plt+0x36254>
  438c48:	mov	x0, x19
  438c4c:	ldr	x19, [sp, #16]
  438c50:	ldp	x29, x30, [sp], #32
  438c54:	ret
  438c58:	stp	x29, x30, [sp, #-32]!
  438c5c:	mov	x29, sp
  438c60:	str	x19, [sp, #16]
  438c64:	bl	402750 <freopen@plt>
  438c68:	mov	x19, x0
  438c6c:	bl	438bc4 <ferror@plt+0x36254>
  438c70:	mov	x0, x19
  438c74:	ldr	x19, [sp, #16]
  438c78:	ldp	x29, x30, [sp], #32
  438c7c:	ret
  438c80:	cmp	x1, x0
  438c84:	cset	w0, eq  // eq = none
  438c88:	ret
  438c8c:	asr	x1, x0, #32
  438c90:	mov	w2, #0xadcc                	// #44492
  438c94:	sub	w1, w1, w0
  438c98:	movk	w2, #0xbdec, lsl #16
  438c9c:	add	w1, w1, w2
  438ca0:	mov	w2, #0x109a                	// #4250
  438ca4:	movk	w2, #0x2, lsl #16
  438ca8:	eor	w1, w1, w2
  438cac:	mov	w2, #0x2785                	// #10117
  438cb0:	mov	w3, #0x5234                	// #21044
  438cb4:	movk	w2, #0x5c24, lsl #16
  438cb8:	add	w0, w2, w0
  438cbc:	sub	w0, w0, w1
  438cc0:	movk	w3, #0x4213, lsl #16
  438cc4:	eor	w0, w0, w1, lsl #8
  438cc8:	sub	w3, w3, w1
  438ccc:	sub	w3, w3, w0
  438cd0:	sub	w1, w1, w0
  438cd4:	eor	w3, w3, w0, lsr #13
  438cd8:	sub	w1, w1, w3
  438cdc:	sub	w0, w0, w3
  438ce0:	eor	w1, w1, w3, lsr #12
  438ce4:	sub	w0, w0, w1
  438ce8:	sub	w3, w3, w1
  438cec:	eor	w0, w0, w1, lsl #16
  438cf0:	sub	w3, w3, w0
  438cf4:	sub	w1, w1, w0
  438cf8:	eor	w3, w3, w0, lsr #5
  438cfc:	sub	w1, w1, w3
  438d00:	sub	w2, w0, w3
  438d04:	eor	w1, w1, w3, lsr #3
  438d08:	sub	w2, w2, w1
  438d0c:	eor	w2, w2, w1, lsl #10
  438d10:	sub	w1, w3, w1
  438d14:	sub	w0, w1, w2
  438d18:	eor	w0, w0, w2, lsr #15
  438d1c:	ret
  438d20:	ubfiz	x1, x1, #4, #32
  438d24:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x1c198>
  438d28:	add	x4, x4, #0xd28
  438d2c:	add	w6, w0, #0x1
  438d30:	add	x5, x4, x1
  438d34:	ldr	w2, [x5, #8]
  438d38:	umull	x2, w0, w2
  438d3c:	lsr	x3, x2, #32
  438d40:	sub	w2, w0, w3
  438d44:	ldr	w0, [x5, #12]
  438d48:	add	w2, w3, w2, lsr #1
  438d4c:	lsr	w2, w2, w0
  438d50:	ldr	w0, [x4, x1]
  438d54:	sub	w0, w0, #0x2
  438d58:	msub	w0, w2, w0, w6
  438d5c:	ret
  438d60:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x1c198>
  438d64:	add	x4, x4, #0xd28
  438d68:	mov	x2, x0
  438d6c:	mov	w3, #0x0                   	// #0
  438d70:	mov	w0, #0x1e                  	// #30
  438d74:	cmp	w0, w3
  438d78:	b.ne	438dac <ferror@plt+0x3643c>  // b.any
  438d7c:	ubfiz	x1, x0, #4, #32
  438d80:	ldr	w1, [x4, x1]
  438d84:	cmp	x1, x2
  438d88:	b.cs	438dd8 <ferror@plt+0x36468>  // b.hs, b.nlast
  438d8c:	stp	x29, x30, [sp, #-16]!
  438d90:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  438d94:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  438d98:	mov	x29, sp
  438d9c:	ldr	x0, [x0, #1336]
  438da0:	add	x1, x1, #0xcf8
  438da4:	bl	402940 <fprintf@plt>
  438da8:	bl	402650 <abort@plt>
  438dac:	sub	w1, w0, w3
  438db0:	add	w5, w3, w1, lsr #1
  438db4:	add	w1, w3, w1, lsr #1
  438db8:	lsl	x1, x1, #4
  438dbc:	ldr	w1, [x4, x1]
  438dc0:	cmp	x1, x2
  438dc4:	b.cs	438dd0 <ferror@plt+0x36460>  // b.hs, b.nlast
  438dc8:	add	w3, w5, #0x1
  438dcc:	b	438d74 <ferror@plt+0x36404>
  438dd0:	mov	w0, w5
  438dd4:	b	438d74 <ferror@plt+0x36404>
  438dd8:	ret
  438ddc:	ubfiz	x1, x1, #4, #32
  438de0:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x1c198>
  438de4:	add	x4, x4, #0xd28
  438de8:	add	x5, x4, x1
  438dec:	ldr	w1, [x4, x1]
  438df0:	ldr	w2, [x5, #4]
  438df4:	umull	x2, w0, w2
  438df8:	lsr	x2, x2, #32
  438dfc:	sub	w3, w0, w2
  438e00:	add	w2, w2, w3, lsr #1
  438e04:	ldr	w3, [x5, #12]
  438e08:	lsr	w2, w2, w3
  438e0c:	msub	w0, w2, w1, w0
  438e10:	ret
  438e14:	stp	x29, x30, [sp, #-64]!
  438e18:	mov	x29, sp
  438e1c:	stp	x19, x20, [sp, #16]
  438e20:	mov	x19, x0
  438e24:	stp	x21, x22, [sp, #32]
  438e28:	ldr	w21, [x0, #104]
  438e2c:	ldp	x22, x20, [x0, #24]
  438e30:	ldp	x1, x0, [x0, #40]
  438e34:	str	x23, [sp, #48]
  438e38:	add	x23, x22, x20, lsl #3
  438e3c:	sub	x1, x1, x0
  438e40:	lsl	x0, x1, #1
  438e44:	cmp	x20, x1, lsl #1
  438e48:	b.cc	438e5c <ferror@plt+0x364ec>  // b.lo, b.ul, b.last
  438e4c:	cmp	x20, x1, lsl #3
  438e50:	b.ls	438e74 <ferror@plt+0x36504>  // b.plast
  438e54:	cmp	x20, #0x20
  438e58:	b.ls	438e74 <ferror@plt+0x36504>  // b.plast
  438e5c:	bl	438d60 <ferror@plt+0x363f0>
  438e60:	mov	w21, w0
  438e64:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x1c198>
  438e68:	add	x0, x0, #0xd28
  438e6c:	ubfiz	x1, x21, #4, #32
  438e70:	ldr	w20, [x0, x1]
  438e74:	ldr	x3, [x19, #88]
  438e78:	cbz	x3, 438efc <ferror@plt+0x3658c>
  438e7c:	ldr	x0, [x19, #80]
  438e80:	mov	x1, x20
  438e84:	mov	x2, #0x8                   	// #8
  438e88:	blr	x3
  438e8c:	cbz	x0, 438f8c <ferror@plt+0x3661c>
  438e90:	stp	x0, x20, [x19, #24]
  438e94:	mov	x20, x22
  438e98:	ldr	x0, [x19, #40]
  438e9c:	str	w21, [x19, #104]
  438ea0:	ldr	x1, [x19, #48]
  438ea4:	str	xzr, [x19, #48]
  438ea8:	sub	x0, x0, x1
  438eac:	str	x0, [x19, #40]
  438eb0:	ldr	x21, [x20]
  438eb4:	cmp	x21, #0x1
  438eb8:	b.ls	438f50 <ferror@plt+0x365e0>  // b.plast
  438ebc:	ldr	x1, [x19]
  438ec0:	mov	x0, x21
  438ec4:	blr	x1
  438ec8:	mov	w6, w0
  438ecc:	ldr	w10, [x19, #104]
  438ed0:	mov	w1, w10
  438ed4:	bl	438ddc <ferror@plt+0x3646c>
  438ed8:	mov	w7, w0
  438edc:	ldr	x8, [x19, #24]
  438ee0:	ubfiz	x0, x7, #3, #32
  438ee4:	add	x2, x8, x0
  438ee8:	ldr	x0, [x8, x0]
  438eec:	cbz	x0, 438f4c <ferror@plt+0x365dc>
  438ef0:	cmp	x0, #0x1
  438ef4:	b.ne	438f10 <ferror@plt+0x365a0>  // b.any
  438ef8:	bl	402650 <abort@plt>
  438efc:	ldr	x2, [x19, #64]
  438f00:	mov	x0, x20
  438f04:	mov	x1, #0x8                   	// #8
  438f08:	blr	x2
  438f0c:	b	438e8c <ferror@plt+0x3651c>
  438f10:	ldr	x9, [x19, #32]
  438f14:	mov	w1, w10
  438f18:	mov	w0, w6
  438f1c:	bl	438d20 <ferror@plt+0x363b0>
  438f20:	add	w7, w7, w0
  438f24:	cmp	x9, w7, uxtw
  438f28:	b.hi	438f30 <ferror@plt+0x365c0>  // b.pmore
  438f2c:	sub	w7, w7, w9
  438f30:	ubfiz	x1, x7, #3, #32
  438f34:	add	x2, x8, x1
  438f38:	ldr	x1, [x8, x1]
  438f3c:	cbz	x1, 438f4c <ferror@plt+0x365dc>
  438f40:	cmp	x1, #0x1
  438f44:	b.ne	438f20 <ferror@plt+0x365b0>  // b.any
  438f48:	b	438ef8 <ferror@plt+0x36588>
  438f4c:	str	x21, [x2]
  438f50:	add	x20, x20, #0x8
  438f54:	cmp	x23, x20
  438f58:	b.hi	438eb0 <ferror@plt+0x36540>  // b.pmore
  438f5c:	ldr	x1, [x19, #72]
  438f60:	cbz	x1, 438f74 <ferror@plt+0x36604>
  438f64:	mov	x0, x22
  438f68:	blr	x1
  438f6c:	mov	w0, #0x1                   	// #1
  438f70:	b	438f90 <ferror@plt+0x36620>
  438f74:	ldr	x2, [x19, #96]
  438f78:	cbz	x2, 438f6c <ferror@plt+0x365fc>
  438f7c:	ldr	x0, [x19, #80]
  438f80:	mov	x1, x22
  438f84:	blr	x2
  438f88:	b	438f6c <ferror@plt+0x365fc>
  438f8c:	mov	w0, #0x0                   	// #0
  438f90:	ldp	x19, x20, [sp, #16]
  438f94:	ldp	x21, x22, [sp, #32]
  438f98:	ldr	x23, [sp, #48]
  438f9c:	ldp	x29, x30, [sp], #64
  438fa0:	ret
  438fa4:	ldr	x0, [x0, #32]
  438fa8:	ret
  438fac:	ldp	x1, x0, [x0, #40]
  438fb0:	sub	x0, x1, x0
  438fb4:	ret
  438fb8:	stp	x29, x30, [sp, #-96]!
  438fbc:	mov	x29, sp
  438fc0:	stp	x19, x20, [sp, #16]
  438fc4:	stp	x21, x22, [sp, #32]
  438fc8:	mov	x21, x5
  438fcc:	stp	x23, x24, [sp, #48]
  438fd0:	mov	x24, x2
  438fd4:	mov	x23, x3
  438fd8:	stp	x25, x26, [sp, #64]
  438fdc:	mov	x25, x1
  438fe0:	stp	x27, x28, [sp, #80]
  438fe4:	mov	x27, x4
  438fe8:	mov	x28, x6
  438fec:	bl	438d60 <ferror@plt+0x363f0>
  438ff0:	mov	w22, w0
  438ff4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x1c198>
  438ff8:	add	x0, x0, #0xd28
  438ffc:	ubfiz	x1, x22, #4, #32
  439000:	mov	x2, #0x70                  	// #112
  439004:	ldr	w26, [x0, x1]
  439008:	mov	x0, x27
  43900c:	mov	x1, #0x1                   	// #1
  439010:	blr	x21
  439014:	cbnz	x0, 43903c <ferror@plt+0x366cc>
  439018:	mov	x20, #0x0                   	// #0
  43901c:	mov	x0, x20
  439020:	ldp	x19, x20, [sp, #16]
  439024:	ldp	x21, x22, [sp, #32]
  439028:	ldp	x23, x24, [sp, #48]
  43902c:	ldp	x25, x26, [sp, #64]
  439030:	ldp	x27, x28, [sp, #80]
  439034:	ldp	x29, x30, [sp], #96
  439038:	ret
  43903c:	mov	x19, x0
  439040:	mov	x1, x26
  439044:	mov	x0, x27
  439048:	mov	x2, #0x8                   	// #8
  43904c:	blr	x21
  439050:	mov	x20, x0
  439054:	str	x0, [x19, #24]
  439058:	cbnz	x0, 439070 <ferror@plt+0x36700>
  43905c:	cbz	x28, 439018 <ferror@plt+0x366a8>
  439060:	mov	x1, x19
  439064:	mov	x0, x27
  439068:	blr	x28
  43906c:	b	43901c <ferror@plt+0x366ac>
  439070:	mov	x20, x19
  439074:	stp	x25, x24, [x19]
  439078:	str	x23, [x19, #16]
  43907c:	str	x26, [x19, #32]
  439080:	stp	x27, x21, [x19, #80]
  439084:	str	x28, [x19, #96]
  439088:	str	w22, [x19, #104]
  43908c:	b	43901c <ferror@plt+0x366ac>
  439090:	stp	x29, x30, [sp, #-96]!
  439094:	mov	x29, sp
  439098:	stp	x19, x20, [sp, #16]
  43909c:	mov	x19, x4
  4390a0:	stp	x21, x22, [sp, #32]
  4390a4:	mov	x21, x5
  4390a8:	stp	x23, x24, [sp, #48]
  4390ac:	mov	x24, x2
  4390b0:	mov	x23, x3
  4390b4:	stp	x25, x26, [sp, #64]
  4390b8:	mov	x25, x1
  4390bc:	str	x27, [sp, #80]
  4390c0:	mov	x27, x6
  4390c4:	bl	438d60 <ferror@plt+0x363f0>
  4390c8:	mov	w22, w0
  4390cc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x1c198>
  4390d0:	add	x0, x0, #0xd28
  4390d4:	ubfiz	x1, x22, #4, #32
  4390d8:	ldr	w26, [x0, x1]
  4390dc:	mov	x1, #0x70                  	// #112
  4390e0:	mov	x0, #0x1                   	// #1
  4390e4:	blr	x19
  4390e8:	cbnz	x0, 439110 <ferror@plt+0x367a0>
  4390ec:	mov	x20, #0x0                   	// #0
  4390f0:	mov	x0, x20
  4390f4:	ldp	x19, x20, [sp, #16]
  4390f8:	ldp	x21, x22, [sp, #32]
  4390fc:	ldp	x23, x24, [sp, #48]
  439100:	ldp	x25, x26, [sp, #64]
  439104:	ldr	x27, [sp, #80]
  439108:	ldp	x29, x30, [sp], #96
  43910c:	ret
  439110:	mov	x19, x0
  439114:	mov	x1, #0x8                   	// #8
  439118:	mov	x0, x26
  43911c:	blr	x21
  439120:	mov	x20, x0
  439124:	str	x0, [x19, #24]
  439128:	cbnz	x0, 43913c <ferror@plt+0x367cc>
  43912c:	cbz	x27, 4390ec <ferror@plt+0x3677c>
  439130:	mov	x0, x19
  439134:	blr	x27
  439138:	b	4390f0 <ferror@plt+0x36780>
  43913c:	mov	x20, x19
  439140:	stp	x25, x24, [x19]
  439144:	str	x23, [x19, #16]
  439148:	str	x26, [x19, #32]
  43914c:	stp	x21, x27, [x19, #64]
  439150:	str	w22, [x19, #104]
  439154:	b	4390f0 <ferror@plt+0x36780>
  439158:	mov	x6, x5
  43915c:	mov	x5, x4
  439160:	b	439090 <ferror@plt+0x36720>
  439164:	stp	x1, x2, [x0]
  439168:	str	x3, [x0, #16]
  43916c:	stp	x4, x5, [x0, #80]
  439170:	str	x6, [x0, #96]
  439174:	ret
  439178:	adrp	x5, 402000 <memcpy@plt-0x2e0>
  43917c:	adrp	x4, 439000 <ferror@plt+0x36690>
  439180:	add	x5, x5, #0x730
  439184:	add	x4, x4, #0xf74
  439188:	b	439158 <ferror@plt+0x367e8>
  43918c:	adrp	x5, 402000 <memcpy@plt-0x2e0>
  439190:	adrp	x4, 402000 <memcpy@plt-0x2e0>
  439194:	add	x5, x5, #0x730
  439198:	add	x4, x4, #0x550
  43919c:	b	439158 <ferror@plt+0x367e8>
  4391a0:	stp	x29, x30, [sp, #-48]!
  4391a4:	mov	x29, sp
  4391a8:	stp	x19, x20, [sp, #16]
  4391ac:	mov	x19, x0
  4391b0:	str	x21, [sp, #32]
  4391b4:	ldr	x21, [x0, #24]
  4391b8:	ldr	x0, [x0, #16]
  4391bc:	cbnz	x0, 4391fc <ferror@plt+0x3688c>
  4391c0:	ldr	x1, [x19, #72]
  4391c4:	cbnz	x1, 439228 <ferror@plt+0x368b8>
  4391c8:	ldr	x2, [x19, #96]
  4391cc:	cbz	x2, 43924c <ferror@plt+0x368dc>
  4391d0:	ldr	x0, [x19, #80]
  4391d4:	mov	x1, x21
  4391d8:	blr	x2
  4391dc:	mov	x1, x19
  4391e0:	ldr	x21, [sp, #32]
  4391e4:	ldr	x0, [x19, #80]
  4391e8:	ldr	x2, [x19, #96]
  4391ec:	ldp	x19, x20, [sp, #16]
  4391f0:	mov	x16, x2
  4391f4:	ldp	x29, x30, [sp], #48
  4391f8:	br	x16
  4391fc:	ldr	x20, [x19, #32]
  439200:	sub	w20, w20, #0x1
  439204:	sxtw	x20, w20
  439208:	tbnz	w20, #31, 4391c0 <ferror@plt+0x36850>
  43920c:	ldr	x0, [x21, x20, lsl #3]
  439210:	cmp	x0, #0x1
  439214:	b.ls	439220 <ferror@plt+0x368b0>  // b.plast
  439218:	ldr	x1, [x19, #16]
  43921c:	blr	x1
  439220:	sub	x20, x20, #0x1
  439224:	b	439208 <ferror@plt+0x36898>
  439228:	mov	x0, x21
  43922c:	blr	x1
  439230:	mov	x0, x19
  439234:	ldr	x21, [sp, #32]
  439238:	ldr	x1, [x19, #72]
  43923c:	ldp	x19, x20, [sp, #16]
  439240:	mov	x16, x1
  439244:	ldp	x29, x30, [sp], #48
  439248:	br	x16
  43924c:	ldp	x19, x20, [sp, #16]
  439250:	ldr	x21, [sp, #32]
  439254:	ldp	x29, x30, [sp], #48
  439258:	ret
  43925c:	stp	x29, x30, [sp, #-48]!
  439260:	mov	x29, sp
  439264:	stp	x19, x20, [sp, #16]
  439268:	mov	x19, x0
  43926c:	stp	x21, x22, [sp, #32]
  439270:	ldp	x22, x21, [x0, #24]
  439274:	ldr	x0, [x0, #16]
  439278:	cbnz	x0, 439298 <ferror@plt+0x36928>
  43927c:	cmp	x21, #0x20, lsl #12
  439280:	b.hi	4392c0 <ferror@plt+0x36950>  // b.pmore
  439284:	lsl	x2, x21, #3
  439288:	mov	x0, x22
  43928c:	mov	w1, #0x0                   	// #0
  439290:	bl	402530 <memset@plt>
  439294:	b	439310 <ferror@plt+0x369a0>
  439298:	sub	w20, w21, #0x1
  43929c:	sxtw	x20, w20
  4392a0:	tbnz	w20, #31, 43927c <ferror@plt+0x3690c>
  4392a4:	ldr	x0, [x22, x20, lsl #3]
  4392a8:	cmp	x0, #0x1
  4392ac:	b.ls	4392b8 <ferror@plt+0x36948>  // b.plast
  4392b0:	ldr	x1, [x19, #16]
  4392b4:	blr	x1
  4392b8:	sub	x20, x20, #0x1
  4392bc:	b	4392a0 <ferror@plt+0x36930>
  4392c0:	mov	x0, #0x80                  	// #128
  4392c4:	bl	438d60 <ferror@plt+0x363f0>
  4392c8:	sbfiz	x1, x0, #4, #32
  4392cc:	mov	w21, w0
  4392d0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x1c198>
  4392d4:	add	x0, x0, #0xd28
  4392d8:	ldr	w20, [x0, x1]
  4392dc:	ldr	x1, [x19, #72]
  4392e0:	cbz	x1, 439324 <ferror@plt+0x369b4>
  4392e4:	ldr	x0, [x19, #24]
  4392e8:	blr	x1
  4392ec:	ldr	x3, [x19, #88]
  4392f0:	sxtw	x20, w20
  4392f4:	cbz	x3, 43933c <ferror@plt+0x369cc>
  4392f8:	ldr	x0, [x19, #80]
  4392fc:	mov	x1, x20
  439300:	mov	x2, #0x8                   	// #8
  439304:	blr	x3
  439308:	stp	x0, x20, [x19, #24]
  43930c:	str	w21, [x19, #104]
  439310:	ldp	x21, x22, [sp, #32]
  439314:	stp	xzr, xzr, [x19, #40]
  439318:	ldp	x19, x20, [sp, #16]
  43931c:	ldp	x29, x30, [sp], #48
  439320:	ret
  439324:	ldr	x2, [x19, #96]
  439328:	cbz	x2, 4392ec <ferror@plt+0x3697c>
  43932c:	ldr	x1, [x19, #24]
  439330:	ldr	x0, [x19, #80]
  439334:	blr	x2
  439338:	b	4392ec <ferror@plt+0x3697c>
  43933c:	ldr	x2, [x19, #64]
  439340:	mov	x0, x20
  439344:	mov	x1, #0x8                   	// #8
  439348:	blr	x2
  43934c:	b	439308 <ferror@plt+0x36998>
  439350:	stp	x29, x30, [sp, #-64]!
  439354:	mov	x29, sp
  439358:	stp	x19, x20, [sp, #16]
  43935c:	mov	x19, x0
  439360:	ldr	w0, [x0, #56]
  439364:	stp	x21, x22, [sp, #32]
  439368:	mov	x22, x1
  43936c:	ldr	w1, [x19, #104]
  439370:	stp	x23, x24, [sp, #48]
  439374:	add	w0, w0, #0x1
  439378:	mov	w23, w2
  43937c:	str	w0, [x19, #56]
  439380:	mov	w0, w2
  439384:	bl	438ddc <ferror@plt+0x3646c>
  439388:	mov	w21, w0
  43938c:	ldr	x0, [x19, #24]
  439390:	ldr	x20, [x0, w21, uxtw #3]
  439394:	cbnz	x20, 4393b4 <ferror@plt+0x36a44>
  439398:	mov	x20, #0x0                   	// #0
  43939c:	mov	x0, x20
  4393a0:	ldp	x19, x20, [sp, #16]
  4393a4:	ldp	x21, x22, [sp, #32]
  4393a8:	ldp	x23, x24, [sp, #48]
  4393ac:	ldp	x29, x30, [sp], #64
  4393b0:	ret
  4393b4:	cmp	x20, #0x1
  4393b8:	ldr	x24, [x19, #32]
  4393bc:	b.ne	439418 <ferror@plt+0x36aa8>  // b.any
  4393c0:	ldr	w1, [x19, #104]
  4393c4:	mov	w0, w23
  4393c8:	bl	438d20 <ferror@plt+0x363b0>
  4393cc:	mov	w23, w0
  4393d0:	ldr	w0, [x19, #60]
  4393d4:	add	w21, w21, w23
  4393d8:	add	w0, w0, #0x1
  4393dc:	str	w0, [x19, #60]
  4393e0:	cmp	x24, w21, uxtw
  4393e4:	b.hi	4393ec <ferror@plt+0x36a7c>  // b.pmore
  4393e8:	sub	w21, w21, w24
  4393ec:	ldr	x0, [x19, #24]
  4393f0:	ldr	x20, [x0, w21, uxtw #3]
  4393f4:	cbz	x20, 439398 <ferror@plt+0x36a28>
  4393f8:	cmp	x20, #0x1
  4393fc:	b.eq	4393d0 <ferror@plt+0x36a60>  // b.none
  439400:	ldr	x2, [x19, #8]
  439404:	mov	x1, x22
  439408:	mov	x0, x20
  43940c:	blr	x2
  439410:	cbz	w0, 4393d0 <ferror@plt+0x36a60>
  439414:	b	43939c <ferror@plt+0x36a2c>
  439418:	ldr	x2, [x19, #8]
  43941c:	mov	x1, x22
  439420:	mov	x0, x20
  439424:	blr	x2
  439428:	cbnz	w0, 43939c <ferror@plt+0x36a2c>
  43942c:	b	4393c0 <ferror@plt+0x36a50>
  439430:	stp	x29, x30, [sp, #-32]!
  439434:	mov	x29, sp
  439438:	stp	x19, x20, [sp, #16]
  43943c:	mov	x19, x0
  439440:	mov	x20, x1
  439444:	mov	x0, x1
  439448:	ldr	x1, [x19]
  43944c:	blr	x1
  439450:	mov	w2, w0
  439454:	mov	x1, x20
  439458:	mov	x0, x19
  43945c:	ldp	x19, x20, [sp, #16]
  439460:	ldp	x29, x30, [sp], #32
  439464:	b	439350 <ferror@plt+0x369e0>
  439468:	stp	x29, x30, [sp, #-80]!
  43946c:	cmp	w3, #0x1
  439470:	mov	x29, sp
  439474:	stp	x19, x20, [sp, #16]
  439478:	mov	x19, x0
  43947c:	stp	x21, x22, [sp, #32]
  439480:	mov	w22, w3
  439484:	stp	x23, x24, [sp, #48]
  439488:	mov	x24, x1
  43948c:	stp	x25, x26, [sp, #64]
  439490:	mov	w25, w2
  439494:	ldr	x23, [x0, #32]
  439498:	b.ne	4394d8 <ferror@plt+0x36b68>  // b.any
  43949c:	ldr	x2, [x0, #40]
  4394a0:	add	x1, x23, x23, lsl #1
  4394a4:	cmp	x1, x2, lsl #2
  4394a8:	b.hi	4394d8 <ferror@plt+0x36b68>  // b.pmore
  4394ac:	bl	438e14 <ferror@plt+0x364a4>
  4394b0:	cbnz	w0, 4394d4 <ferror@plt+0x36b64>
  4394b4:	mov	x20, #0x0                   	// #0
  4394b8:	mov	x0, x20
  4394bc:	ldp	x19, x20, [sp, #16]
  4394c0:	ldp	x21, x22, [sp, #32]
  4394c4:	ldp	x23, x24, [sp, #48]
  4394c8:	ldp	x25, x26, [sp, #64]
  4394cc:	ldp	x29, x30, [sp], #80
  4394d0:	ret
  4394d4:	ldr	x23, [x19, #32]
  4394d8:	mov	w0, w25
  4394dc:	ldr	w1, [x19, #104]
  4394e0:	bl	438ddc <ferror@plt+0x3646c>
  4394e4:	mov	w21, w0
  4394e8:	ldr	w0, [x19, #56]
  4394ec:	ubfiz	x26, x21, #3, #32
  4394f0:	add	w0, w0, #0x1
  4394f4:	str	w0, [x19, #56]
  4394f8:	ldr	x0, [x19, #24]
  4394fc:	add	x20, x0, x26
  439500:	ldr	x0, [x0, x26]
  439504:	cbz	x0, 4395bc <ferror@plt+0x36c4c>
  439508:	cmp	x0, #0x1
  43950c:	b.eq	439530 <ferror@plt+0x36bc0>  // b.none
  439510:	ldr	x2, [x19, #8]
  439514:	mov	x1, x24
  439518:	blr	x2
  43951c:	cbz	w0, 43952c <ferror@plt+0x36bbc>
  439520:	ldr	x20, [x19, #24]
  439524:	add	x20, x20, x26
  439528:	b	4394b8 <ferror@plt+0x36b48>
  43952c:	mov	x20, #0x0                   	// #0
  439530:	ldr	w1, [x19, #104]
  439534:	mov	w0, w25
  439538:	bl	438d20 <ferror@plt+0x363b0>
  43953c:	mov	w26, w0
  439540:	ldr	w0, [x19, #60]
  439544:	add	w21, w21, w26
  439548:	add	w0, w0, #0x1
  43954c:	str	w0, [x19, #60]
  439550:	cmp	x23, w21, uxtw
  439554:	b.hi	43955c <ferror@plt+0x36bec>  // b.pmore
  439558:	sub	w21, w21, w23
  43955c:	ldr	x0, [x19, #24]
  439560:	ubfiz	x25, x21, #3, #32
  439564:	add	x1, x0, x25
  439568:	ldr	x0, [x0, x25]
  43956c:	cbz	x0, 4395a0 <ferror@plt+0x36c30>
  439570:	cmp	x0, #0x1
  439574:	b.ne	439584 <ferror@plt+0x36c14>  // b.any
  439578:	cmp	x20, #0x0
  43957c:	csel	x20, x20, x1, ne  // ne = any
  439580:	b	439540 <ferror@plt+0x36bd0>
  439584:	ldr	x2, [x19, #8]
  439588:	mov	x1, x24
  43958c:	blr	x2
  439590:	cbz	w0, 439540 <ferror@plt+0x36bd0>
  439594:	ldr	x20, [x19, #24]
  439598:	add	x20, x20, x25
  43959c:	b	4394b8 <ferror@plt+0x36b48>
  4395a0:	cbz	w22, 4394b4 <ferror@plt+0x36b44>
  4395a4:	cbz	x20, 4395c0 <ferror@plt+0x36c50>
  4395a8:	ldr	x0, [x19, #48]
  4395ac:	sub	x0, x0, #0x1
  4395b0:	str	x0, [x19, #48]
  4395b4:	str	xzr, [x20]
  4395b8:	b	4394b8 <ferror@plt+0x36b48>
  4395bc:	cbz	w22, 4394b4 <ferror@plt+0x36b44>
  4395c0:	ldr	x20, [x19, #24]
  4395c4:	ldr	x0, [x19, #40]
  4395c8:	add	x20, x20, w21, uxtw #3
  4395cc:	add	x0, x0, #0x1
  4395d0:	str	x0, [x19, #40]
  4395d4:	b	4394b8 <ferror@plt+0x36b48>
  4395d8:	stp	x29, x30, [sp, #-48]!
  4395dc:	mov	x29, sp
  4395e0:	stp	x19, x20, [sp, #16]
  4395e4:	mov	x19, x0
  4395e8:	mov	x20, x1
  4395ec:	mov	x0, x1
  4395f0:	ldr	x1, [x19]
  4395f4:	str	x21, [sp, #32]
  4395f8:	mov	w21, w2
  4395fc:	blr	x1
  439600:	mov	w2, w0
  439604:	mov	w3, w21
  439608:	mov	x1, x20
  43960c:	mov	x0, x19
  439610:	ldp	x19, x20, [sp, #16]
  439614:	ldr	x21, [sp, #32]
  439618:	ldp	x29, x30, [sp], #48
  43961c:	b	439468 <ferror@plt+0x36af8>
  439620:	stp	x29, x30, [sp, #-32]!
  439624:	mov	w3, #0x0                   	// #0
  439628:	mov	x29, sp
  43962c:	stp	x19, x20, [sp, #16]
  439630:	mov	x19, x0
  439634:	bl	439468 <ferror@plt+0x36af8>
  439638:	cbz	x0, 439664 <ferror@plt+0x36cf4>
  43963c:	ldr	x1, [x19, #16]
  439640:	mov	x20, x0
  439644:	cbz	x1, 439650 <ferror@plt+0x36ce0>
  439648:	ldr	x0, [x0]
  43964c:	blr	x1
  439650:	mov	x0, #0x1                   	// #1
  439654:	str	x0, [x20]
  439658:	ldr	x0, [x19, #48]
  43965c:	add	x0, x0, #0x1
  439660:	str	x0, [x19, #48]
  439664:	ldp	x19, x20, [sp, #16]
  439668:	ldp	x29, x30, [sp], #32
  43966c:	ret
  439670:	stp	x29, x30, [sp, #-32]!
  439674:	mov	x29, sp
  439678:	stp	x19, x20, [sp, #16]
  43967c:	mov	x19, x0
  439680:	mov	x20, x1
  439684:	mov	x0, x1
  439688:	ldr	x1, [x19]
  43968c:	blr	x1
  439690:	mov	w2, w0
  439694:	mov	x1, x20
  439698:	mov	x0, x19
  43969c:	ldp	x19, x20, [sp, #16]
  4396a0:	ldp	x29, x30, [sp], #32
  4396a4:	b	439620 <ferror@plt+0x36cb0>
  4396a8:	stp	x29, x30, [sp, #-32]!
  4396ac:	mov	x29, sp
  4396b0:	stp	x19, x20, [sp, #16]
  4396b4:	mov	x20, x1
  4396b8:	ldr	x1, [x0, #24]
  4396bc:	cmp	x1, x20
  4396c0:	b.hi	4396e8 <ferror@plt+0x36d78>  // b.pmore
  4396c4:	mov	x19, x0
  4396c8:	ldr	x0, [x0, #32]
  4396cc:	add	x0, x1, x0, lsl #3
  4396d0:	cmp	x20, x0
  4396d4:	b.cs	4396e8 <ferror@plt+0x36d78>  // b.hs, b.nlast
  4396d8:	ldr	x0, [x20]
  4396dc:	cbz	x0, 4396e8 <ferror@plt+0x36d78>
  4396e0:	cmp	x0, #0x1
  4396e4:	b.ne	4396ec <ferror@plt+0x36d7c>  // b.any
  4396e8:	bl	402650 <abort@plt>
  4396ec:	ldr	x1, [x19, #16]
  4396f0:	cbz	x1, 4396f8 <ferror@plt+0x36d88>
  4396f4:	blr	x1
  4396f8:	mov	x0, #0x1                   	// #1
  4396fc:	str	x0, [x20]
  439700:	ldr	x0, [x19, #48]
  439704:	add	x0, x0, #0x1
  439708:	str	x0, [x19, #48]
  43970c:	ldp	x19, x20, [sp, #16]
  439710:	ldp	x29, x30, [sp], #32
  439714:	ret
  439718:	stp	x29, x30, [sp, #-48]!
  43971c:	mov	x29, sp
  439720:	stp	x19, x20, [sp, #16]
  439724:	mov	x20, x1
  439728:	stp	x21, x22, [sp, #32]
  43972c:	mov	x21, x2
  439730:	ldp	x19, x22, [x0, #24]
  439734:	add	x22, x19, x22, lsl #3
  439738:	ldr	x0, [x19]
  43973c:	cmp	x0, #0x1
  439740:	b.hi	439760 <ferror@plt+0x36df0>  // b.pmore
  439744:	add	x19, x19, #0x8
  439748:	cmp	x22, x19
  43974c:	b.hi	439738 <ferror@plt+0x36dc8>  // b.pmore
  439750:	ldp	x19, x20, [sp, #16]
  439754:	ldp	x21, x22, [sp, #32]
  439758:	ldp	x29, x30, [sp], #48
  43975c:	ret
  439760:	mov	x1, x21
  439764:	mov	x0, x19
  439768:	blr	x20
  43976c:	cbnz	w0, 439744 <ferror@plt+0x36dd4>
  439770:	b	439750 <ferror@plt+0x36de0>
  439774:	stp	x29, x30, [sp, #-48]!
  439778:	mov	x29, sp
  43977c:	stp	x19, x20, [sp, #16]
  439780:	mov	x20, x1
  439784:	mov	x19, x0
  439788:	ldp	x1, x3, [x0, #40]
  43978c:	str	x21, [sp, #32]
  439790:	mov	x21, x2
  439794:	ldr	x2, [x0, #32]
  439798:	sub	x1, x1, x3
  43979c:	cmp	x2, x1, lsl #3
  4397a0:	b.ls	4397b0 <ferror@plt+0x36e40>  // b.plast
  4397a4:	cmp	x2, #0x20
  4397a8:	b.ls	4397b0 <ferror@plt+0x36e40>  // b.plast
  4397ac:	bl	438e14 <ferror@plt+0x364a4>
  4397b0:	mov	x2, x21
  4397b4:	mov	x1, x20
  4397b8:	mov	x0, x19
  4397bc:	ldp	x19, x20, [sp, #16]
  4397c0:	ldr	x21, [sp, #32]
  4397c4:	ldp	x29, x30, [sp], #48
  4397c8:	b	439718 <ferror@plt+0x36da8>
  4397cc:	ldr	w1, [x0, #56]
  4397d0:	cbz	w1, 4397e8 <ferror@plt+0x36e78>
  4397d4:	ldr	w0, [x0, #60]
  4397d8:	ucvtf	d1, w1
  4397dc:	ucvtf	d0, w0
  4397e0:	fdiv	d0, d0, d1
  4397e4:	ret
  4397e8:	movi	d0, #0x0
  4397ec:	b	4397e4 <ferror@plt+0x36e74>
  4397f0:	mov	x2, x0
  4397f4:	mov	w3, #0x43                  	// #67
  4397f8:	mov	w0, #0x0                   	// #0
  4397fc:	ldrb	w1, [x2], #1
  439800:	cbnz	w1, 439808 <ferror@plt+0x36e98>
  439804:	ret
  439808:	sub	w1, w1, #0x71
  43980c:	madd	w0, w0, w3, w1
  439810:	b	4397fc <ferror@plt+0x36e8c>
  439814:	mov	w3, #0x79b9                	// #31161
  439818:	mov	w4, w1
  43981c:	movk	w3, #0x9e37, lsl #16
  439820:	tst	x0, #0x3
  439824:	mov	w5, w3
  439828:	b.eq	4399a4 <ferror@plt+0x37034>  // b.none
  43982c:	cmp	w4, #0xb
  439830:	b.ls	4399ac <ferror@plt+0x3703c>  // b.plast
  439834:	ldrb	w7, [x0, #6]
  439838:	sub	w4, w4, #0xc
  43983c:	ldrb	w6, [x0, #5]
  439840:	add	x0, x0, #0xc
  439844:	lsl	w7, w7, #16
  439848:	add	w6, w7, w6, lsl #8
  43984c:	ldurb	w7, [x0, #-8]
  439850:	add	w3, w7, w3
  439854:	ldurb	w7, [x0, #-2]
  439858:	add	w6, w6, w3
  43985c:	ldurb	w3, [x0, #-5]
  439860:	lsl	w7, w7, #16
  439864:	add	w3, w6, w3, lsl #24
  439868:	ldurb	w6, [x0, #-3]
  43986c:	add	w6, w7, w6, lsl #8
  439870:	ldurb	w7, [x0, #-4]
  439874:	add	w2, w7, w2
  439878:	ldurb	w7, [x0, #-10]
  43987c:	add	w6, w6, w2
  439880:	ldurb	w2, [x0, #-1]
  439884:	lsl	w7, w7, #16
  439888:	add	w2, w6, w2, lsl #24
  43988c:	ldurb	w6, [x0, #-11]
  439890:	add	w6, w7, w6, lsl #8
  439894:	ldurb	w7, [x0, #-12]
  439898:	add	w5, w7, w5
  43989c:	add	w5, w6, w5
  4398a0:	add	w6, w3, w2
  4398a4:	sub	w6, w5, w6
  4398a8:	ldurb	w5, [x0, #-9]
  4398ac:	sub	w3, w3, w2
  4398b0:	add	w5, w6, w5, lsl #24
  4398b4:	eor	w5, w5, w2, lsr #13
  4398b8:	sub	w3, w3, w5
  4398bc:	sub	w2, w2, w5
  4398c0:	eor	w3, w3, w5, lsl #8
  4398c4:	sub	w2, w2, w3
  4398c8:	sub	w5, w5, w3
  4398cc:	eor	w2, w2, w3, lsr #13
  4398d0:	sub	w5, w5, w2
  4398d4:	sub	w3, w3, w2
  4398d8:	eor	w5, w5, w2, lsr #12
  4398dc:	sub	w3, w3, w5
  4398e0:	sub	w2, w2, w5
  4398e4:	eor	w3, w3, w5, lsl #16
  4398e8:	sub	w2, w2, w3
  4398ec:	sub	w5, w5, w3
  4398f0:	eor	w2, w2, w3, lsr #5
  4398f4:	sub	w5, w5, w2
  4398f8:	sub	w3, w3, w2
  4398fc:	eor	w5, w5, w2, lsr #3
  439900:	sub	w3, w3, w5
  439904:	sub	w2, w2, w5
  439908:	eor	w3, w3, w5, lsl #10
  43990c:	sub	w2, w2, w3
  439910:	eor	w2, w2, w3, lsr #15
  439914:	b	43982c <ferror@plt+0x36ebc>
  439918:	ldr	w6, [x0]
  43991c:	sub	w4, w4, #0xc
  439920:	add	x0, x0, #0xc
  439924:	add	w5, w5, w6
  439928:	ldur	w6, [x0, #-8]
  43992c:	add	w3, w3, w6
  439930:	ldur	w6, [x0, #-4]
  439934:	add	w2, w2, w6
  439938:	add	w6, w3, w2
  43993c:	sub	w3, w3, w2
  439940:	sub	w5, w5, w6
  439944:	eor	w5, w5, w2, lsr #13
  439948:	sub	w3, w3, w5
  43994c:	sub	w2, w2, w5
  439950:	eor	w3, w3, w5, lsl #8
  439954:	sub	w2, w2, w3
  439958:	sub	w5, w5, w3
  43995c:	eor	w2, w2, w3, lsr #13
  439960:	sub	w5, w5, w2
  439964:	sub	w3, w3, w2
  439968:	eor	w5, w5, w2, lsr #12
  43996c:	sub	w3, w3, w5
  439970:	sub	w2, w2, w5
  439974:	eor	w3, w3, w5, lsl #16
  439978:	sub	w2, w2, w3
  43997c:	sub	w5, w5, w3
  439980:	eor	w2, w2, w3, lsr #5
  439984:	sub	w5, w5, w2
  439988:	sub	w3, w3, w2
  43998c:	eor	w5, w5, w2, lsr #3
  439990:	sub	w3, w3, w5
  439994:	sub	w2, w2, w5
  439998:	eor	w3, w3, w5, lsl #10
  43999c:	sub	w2, w2, w3
  4399a0:	eor	w2, w2, w3, lsr #15
  4399a4:	cmp	w4, #0xb
  4399a8:	b.hi	439918 <ferror@plt+0x36fa8>  // b.pmore
  4399ac:	sub	w4, w4, #0x1
  4399b0:	add	w1, w2, w1
  4399b4:	cmp	w4, #0xa
  4399b8:	b.hi	439a2c <ferror@plt+0x370bc>  // b.pmore
  4399bc:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x1c198>
  4399c0:	add	x2, x2, #0xd1c
  4399c4:	ldrb	w2, [x2, w4, uxtw]
  4399c8:	adr	x4, 4399d4 <ferror@plt+0x37064>
  4399cc:	add	x2, x4, w2, sxtb #2
  4399d0:	br	x2
  4399d4:	ldrb	w2, [x0, #10]
  4399d8:	add	w1, w1, w2, lsl #24
  4399dc:	ldrb	w2, [x0, #9]
  4399e0:	add	w1, w1, w2, lsl #16
  4399e4:	ldrb	w2, [x0, #8]
  4399e8:	add	w1, w1, w2, lsl #8
  4399ec:	ldrb	w2, [x0, #7]
  4399f0:	add	w3, w3, w2, lsl #24
  4399f4:	ldrb	w2, [x0, #6]
  4399f8:	add	w3, w3, w2, lsl #16
  4399fc:	ldrb	w2, [x0, #5]
  439a00:	add	w3, w3, w2, lsl #8
  439a04:	ldrb	w2, [x0, #4]
  439a08:	add	w3, w3, w2
  439a0c:	ldrb	w2, [x0, #3]
  439a10:	add	w5, w5, w2, lsl #24
  439a14:	ldrb	w2, [x0, #2]
  439a18:	add	w5, w5, w2, lsl #16
  439a1c:	ldrb	w2, [x0, #1]
  439a20:	add	w5, w5, w2, lsl #8
  439a24:	ldrb	w0, [x0]
  439a28:	add	w5, w5, w0
  439a2c:	add	w0, w3, w1
  439a30:	sub	w2, w3, w1
  439a34:	sub	w0, w5, w0
  439a38:	eor	w0, w0, w1, lsr #13
  439a3c:	sub	w2, w2, w0
  439a40:	sub	w1, w1, w0
  439a44:	eor	w2, w2, w0, lsl #8
  439a48:	sub	w1, w1, w2
  439a4c:	sub	w0, w0, w2
  439a50:	eor	w1, w1, w2, lsr #13
  439a54:	sub	w0, w0, w1
  439a58:	sub	w2, w2, w1
  439a5c:	eor	w0, w0, w1, lsr #12
  439a60:	sub	w2, w2, w0
  439a64:	sub	w1, w1, w0
  439a68:	eor	w2, w2, w0, lsl #16
  439a6c:	sub	w1, w1, w2
  439a70:	sub	w3, w0, w2
  439a74:	eor	w1, w1, w2, lsr #5
  439a78:	sub	w3, w3, w1
  439a7c:	sub	w0, w2, w1
  439a80:	eor	w3, w3, w1, lsr #3
  439a84:	sub	w0, w0, w3
  439a88:	sub	w1, w1, w3
  439a8c:	eor	w0, w0, w3, lsl #10
  439a90:	sub	w1, w1, w0
  439a94:	eor	w0, w1, w0, lsr #15
  439a98:	ret
  439a9c:	ret
  439aa0:	mov	x1, x0
  439aa4:	ldrb	w2, [x1]
  439aa8:	cbnz	w2, 439ab0 <ferror@plt+0x37140>
  439aac:	ret
  439ab0:	add	x1, x1, #0x1
  439ab4:	cmp	w2, #0x2f
  439ab8:	csel	x0, x0, x1, ne  // ne = any
  439abc:	b	439aa4 <ferror@plt+0x37134>
  439ac0:	ldrb	w2, [x0]
  439ac4:	mov	x1, x0
  439ac8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  439acc:	add	x0, x0, #0x21a
  439ad0:	ldrh	w0, [x0, x2, lsl #1]
  439ad4:	mov	w2, #0x88                  	// #136
  439ad8:	tst	w2, w0
  439adc:	b.eq	439af0 <ferror@plt+0x37180>  // b.none
  439ae0:	ldrb	w0, [x1, #1]
  439ae4:	cmp	w0, #0x3a
  439ae8:	b.ne	439af0 <ferror@plt+0x37180>  // b.any
  439aec:	add	x1, x1, #0x2
  439af0:	mov	x0, x1
  439af4:	mov	w3, #0x5c                  	// #92
  439af8:	ldrb	w2, [x1]
  439afc:	cbnz	w2, 439b04 <ferror@plt+0x37194>
  439b00:	ret
  439b04:	cmp	w2, #0x2f
  439b08:	add	x1, x1, #0x1
  439b0c:	ccmp	w2, w3, #0x4, ne  // ne = any
  439b10:	csel	x0, x0, x1, ne  // ne = any
  439b14:	b	439af8 <ferror@plt+0x37188>
  439b18:	b	439aa0 <ferror@plt+0x37130>
  439b1c:	mov	x12, #0x1020                	// #4128
  439b20:	sub	sp, sp, x12
  439b24:	add	x1, sp, #0x20
  439b28:	stp	x29, x30, [sp]
  439b2c:	mov	x29, sp
  439b30:	str	x19, [sp, #16]
  439b34:	mov	x19, x0
  439b38:	bl	402860 <realpath@plt>
  439b3c:	cmp	x0, #0x0
  439b40:	csel	x0, x0, x19, ne  // ne = any
  439b44:	bl	4025c0 <strdup@plt>
  439b48:	mov	x12, #0x1020                	// #4128
  439b4c:	ldp	x29, x30, [sp]
  439b50:	ldr	x19, [sp, #16]
  439b54:	add	sp, sp, x12
  439b58:	ret
  439b5c:	stp	x29, x30, [sp, #-16]!
  439b60:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  439b64:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1d198>
  439b68:	mov	x29, sp
  439b6c:	ldr	x0, [x0, #1336]
  439b70:	add	x2, x2, #0x8
  439b74:	adrp	x1, 44b000 <_obstack_memory_used@@Base+0x11198>
  439b78:	add	x1, x1, #0xb20
  439b7c:	bl	402940 <fprintf@plt>
  439b80:	mov	w0, #0x1                   	// #1
  439b84:	bl	402360 <exit@plt>
  439b88:	mov	x2, x0
  439b8c:	mov	x0, x1
  439b90:	ldrb	w4, [x2, #80]
  439b94:	ldr	x3, [x2, #56]
  439b98:	tbz	w4, #0, 439ba8 <ferror@plt+0x37238>
  439b9c:	ldr	x0, [x2, #72]
  439ba0:	mov	x16, x3
  439ba4:	br	x16
  439ba8:	mov	x16, x3
  439bac:	br	x16
  439bb0:	stp	x29, x30, [sp, #-48]!
  439bb4:	cmp	x2, #0x0
  439bb8:	mov	x29, sp
  439bbc:	stp	x19, x20, [sp, #16]
  439bc0:	mov	x20, x2
  439bc4:	mov	x2, #0x10                  	// #16
  439bc8:	csel	x20, x20, x2, ne  // ne = any
  439bcc:	cmp	x1, #0x0
  439bd0:	stp	x21, x22, [sp, #32]
  439bd4:	mov	x2, #0xfe0                 	// #4064
  439bd8:	sub	x22, x20, #0x1
  439bdc:	csel	x1, x1, x2, ne  // ne = any
  439be0:	str	x1, [x0]
  439be4:	str	x22, [x0, #48]
  439be8:	mov	x19, x0
  439bec:	bl	439b88 <ferror@plt+0x37218>
  439bf0:	mov	x21, x0
  439bf4:	cbnz	x0, 439c04 <ferror@plt+0x37294>
  439bf8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  439bfc:	ldr	x0, [x0, #1280]
  439c00:	blr	x0
  439c04:	add	x2, x21, #0x10
  439c08:	neg	x20, x20
  439c0c:	ldr	x0, [x19]
  439c10:	add	x2, x2, x22
  439c14:	and	x20, x2, x20
  439c18:	stp	x21, x20, [x19, #8]
  439c1c:	add	x0, x21, x0
  439c20:	str	x20, [x19, #24]
  439c24:	str	x0, [x21]
  439c28:	str	x0, [x19, #32]
  439c2c:	ldrb	w0, [x19, #80]
  439c30:	str	xzr, [x21, #8]
  439c34:	and	w0, w0, #0xfffffff9
  439c38:	strb	w0, [x19, #80]
  439c3c:	mov	w0, #0x1                   	// #1
  439c40:	ldp	x19, x20, [sp, #16]
  439c44:	ldp	x21, x22, [sp, #32]
  439c48:	ldp	x29, x30, [sp], #48
  439c4c:	ret
  439c50:	mov	x2, x0
  439c54:	mov	x0, x1
  439c58:	ldrb	w4, [x2, #80]
  439c5c:	ldr	x3, [x2, #64]
  439c60:	tbz	w4, #0, 439c70 <ferror@plt+0x37300>
  439c64:	ldr	x0, [x2, #72]
  439c68:	mov	x16, x3
  439c6c:	br	x16
  439c70:	mov	x16, x3
  439c74:	br	x16

0000000000439c78 <_obstack_begin@@Base>:
  439c78:	stp	x3, x4, [x0, #56]
  439c7c:	ldrb	w3, [x0, #80]
  439c80:	and	w3, w3, #0xfffffffe
  439c84:	strb	w3, [x0, #80]
  439c88:	b	439bb0 <ferror@plt+0x37240>

0000000000439c8c <_obstack_begin_1@@Base>:
  439c8c:	stp	x3, x4, [x0, #56]
  439c90:	ldrb	w3, [x0, #80]
  439c94:	str	x5, [x0, #72]
  439c98:	orr	w3, w3, #0x1
  439c9c:	strb	w3, [x0, #80]
  439ca0:	b	439bb0 <ferror@plt+0x37240>

0000000000439ca4 <_obstack_newchunk@@Base>:
  439ca4:	stp	x29, x30, [sp, #-64]!
  439ca8:	mov	x29, sp
  439cac:	stp	x19, x20, [sp, #16]
  439cb0:	mov	x19, x0
  439cb4:	ldp	x2, x20, [x0, #16]
  439cb8:	stp	x21, x22, [sp, #32]
  439cbc:	sub	x21, x20, x2
  439cc0:	ldr	x20, [x0, #48]
  439cc4:	adds	x1, x21, x1
  439cc8:	cset	x3, cs  // cs = hs, nlast
  439ccc:	str	x23, [sp, #48]
  439cd0:	adds	x1, x20, x1
  439cd4:	cset	x2, cs  // cs = hs, nlast
  439cd8:	cmp	x3, #0x0
  439cdc:	ccmp	x2, #0x0, #0x0, eq  // eq = none
  439ce0:	ldr	x23, [x0, #8]
  439ce4:	b.eq	439d04 <_obstack_newchunk@@Base+0x60>  // b.none
  439ce8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  439cec:	ldr	x0, [x0, #1280]
  439cf0:	blr	x0
  439cf4:	str	xzr, [x19, #8]
  439cf8:	mov	x0, #0x0                   	// #0
  439cfc:	str	x23, [x0, #8]
  439d00:	brk	#0x3e8
  439d04:	lsr	x20, x21, #3
  439d08:	add	x20, x20, #0x64
  439d0c:	add	x2, x20, x1
  439d10:	ldr	x20, [x0]
  439d14:	cmp	x20, x1
  439d18:	csel	x20, x20, x1, cs  // cs = hs, nlast
  439d1c:	cmp	x20, x2
  439d20:	csel	x20, x20, x2, cs  // cs = hs, nlast
  439d24:	mov	x1, x20
  439d28:	bl	439b88 <ferror@plt+0x37218>
  439d2c:	mov	x22, x0
  439d30:	cbz	x0, 439ce8 <_obstack_newchunk@@Base+0x44>
  439d34:	mov	x2, x0
  439d38:	str	x0, [x19, #8]
  439d3c:	ldr	x1, [x19, #16]
  439d40:	str	x23, [x0, #8]
  439d44:	add	x20, x0, x20
  439d48:	str	x20, [x19, #32]
  439d4c:	str	x20, [x2], #16
  439d50:	ldr	x20, [x19, #48]
  439d54:	add	x2, x2, x20
  439d58:	bic	x20, x2, x20
  439d5c:	mov	x2, x21
  439d60:	mov	x0, x20
  439d64:	bl	4022e0 <memcpy@plt>
  439d68:	ldrb	w0, [x19, #80]
  439d6c:	tbnz	w0, #1, 439da0 <_obstack_newchunk@@Base+0xfc>
  439d70:	ldr	x0, [x19, #48]
  439d74:	add	x1, x23, #0x10
  439d78:	add	x1, x1, x0
  439d7c:	bic	x0, x1, x0
  439d80:	ldr	x1, [x19, #16]
  439d84:	cmp	x1, x0
  439d88:	b.ne	439da0 <_obstack_newchunk@@Base+0xfc>  // b.any
  439d8c:	ldr	x0, [x23, #8]
  439d90:	str	x0, [x22, #8]
  439d94:	mov	x1, x23
  439d98:	mov	x0, x19
  439d9c:	bl	439c50 <ferror@plt+0x372e0>
  439da0:	ldrb	w0, [x19, #80]
  439da4:	ldr	x23, [sp, #48]
  439da8:	and	w0, w0, #0xfffffffd
  439dac:	str	x20, [x19, #16]
  439db0:	add	x20, x20, x21
  439db4:	strb	w0, [x19, #80]
  439db8:	ldp	x21, x22, [sp, #32]
  439dbc:	str	x20, [x19, #24]
  439dc0:	ldp	x19, x20, [sp, #16]
  439dc4:	ldp	x29, x30, [sp], #64
  439dc8:	ret

0000000000439dcc <_obstack_allocated_p@@Base>:
  439dcc:	ldr	x0, [x0, #8]
  439dd0:	cbz	x0, 439de8 <_obstack_allocated_p@@Base+0x1c>
  439dd4:	cmp	x0, x1
  439dd8:	b.cs	439dcc <_obstack_allocated_p@@Base>  // b.hs, b.nlast
  439ddc:	ldr	x2, [x0]
  439de0:	cmp	x2, x1
  439de4:	b.cc	439dcc <_obstack_allocated_p@@Base>  // b.lo, b.ul, b.last
  439de8:	cmp	x0, #0x0
  439dec:	cset	w0, ne  // ne = any
  439df0:	ret

0000000000439df4 <_obstack_free@@Base>:
  439df4:	stp	x29, x30, [sp, #-48]!
  439df8:	mov	x29, sp
  439dfc:	stp	x19, x20, [sp, #16]
  439e00:	mov	x19, x0
  439e04:	mov	x20, x1
  439e08:	ldr	x1, [x0, #8]
  439e0c:	str	x21, [sp, #32]
  439e10:	cbz	x1, 439e60 <_obstack_free@@Base+0x6c>
  439e14:	cmp	x1, x20
  439e18:	b.cs	439e40 <_obstack_free@@Base+0x4c>  // b.hs, b.nlast
  439e1c:	ldr	x0, [x1]
  439e20:	cmp	x0, x20
  439e24:	b.cc	439e40 <_obstack_free@@Base+0x4c>  // b.lo, b.ul, b.last
  439e28:	stp	x1, x20, [x19, #8]
  439e2c:	stp	x20, x0, [x19, #24]
  439e30:	ldp	x19, x20, [sp, #16]
  439e34:	ldr	x21, [sp, #32]
  439e38:	ldp	x29, x30, [sp], #48
  439e3c:	ret
  439e40:	mov	x0, x19
  439e44:	ldr	x21, [x1, #8]
  439e48:	bl	439c50 <ferror@plt+0x372e0>
  439e4c:	ldrb	w0, [x19, #80]
  439e50:	mov	x1, x21
  439e54:	orr	w0, w0, #0x2
  439e58:	strb	w0, [x19, #80]
  439e5c:	b	439e10 <_obstack_free@@Base+0x1c>
  439e60:	cbz	x20, 439e30 <_obstack_free@@Base+0x3c>
  439e64:	bl	402650 <abort@plt>

0000000000439e68 <_obstack_memory_used@@Base>:
  439e68:	ldr	x1, [x0, #8]
  439e6c:	mov	x0, #0x0                   	// #0
  439e70:	cbnz	x1, 439e78 <_obstack_memory_used@@Base+0x10>
  439e74:	ret
  439e78:	ldr	x2, [x1]
  439e7c:	sub	x2, x2, x1
  439e80:	add	x0, x0, x2
  439e84:	ldr	x1, [x1, #8]
  439e88:	b	439e70 <_obstack_memory_used@@Base+0x8>
  439e8c:	stp	x29, x30, [sp, #-32]!
  439e90:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  439e94:	mov	x29, sp
  439e98:	str	x19, [sp, #16]
  439e9c:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  439ea0:	str	x0, [x1, #1288]
  439ea4:	ldr	x0, [x19, #2232]
  439ea8:	cbnz	x0, 439eb4 <_obstack_memory_used@@Base+0x4c>
  439eac:	bl	402370 <sbrk@plt>
  439eb0:	str	x0, [x19, #2232]
  439eb4:	ldr	x19, [sp, #16]
  439eb8:	ldp	x29, x30, [sp], #32
  439ebc:	ret
  439ec0:	stp	x29, x30, [sp, #-32]!
  439ec4:	mov	x29, sp
  439ec8:	stp	x19, x20, [sp, #16]
  439ecc:	mov	x19, x0
  439ed0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  439ed4:	ldr	x20, [x0, #2232]
  439ed8:	mov	x0, #0x0                   	// #0
  439edc:	cbz	x20, 439f2c <_obstack_memory_used@@Base+0xc4>
  439ee0:	bl	402370 <sbrk@plt>
  439ee4:	sub	x5, x0, x20
  439ee8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  439eec:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x17198>
  439ef0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x1c198>
  439ef4:	add	x3, x3, #0xaab
  439ef8:	ldr	x2, [x0, #1288]
  439efc:	add	x1, x1, #0x847
  439f00:	mov	x4, x19
  439f04:	ldrb	w0, [x2]
  439f08:	cmp	w0, #0x0
  439f0c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  439f10:	csel	x3, x1, x3, ne  // ne = any
  439f14:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  439f18:	ldr	x0, [x0, #1336]
  439f1c:	add	x1, x1, #0x41a
  439f20:	bl	402940 <fprintf@plt>
  439f24:	mov	w0, #0x1                   	// #1
  439f28:	bl	43a444 <_obstack_memory_used@@Base+0x5dc>
  439f2c:	bl	402370 <sbrk@plt>
  439f30:	adrp	x5, 478000 <_obstack_memory_used@@Base+0x3e198>
  439f34:	add	x5, x5, #0x558
  439f38:	sub	x5, x0, x5
  439f3c:	b	439ee8 <_obstack_memory_used@@Base+0x80>
  439f40:	stp	x29, x30, [sp, #-32]!
  439f44:	cmp	x0, #0x0
  439f48:	mov	x29, sp
  439f4c:	str	x19, [sp, #16]
  439f50:	csinc	x19, x0, xzr, ne  // ne = any
  439f54:	mov	x0, x19
  439f58:	bl	4024b0 <malloc@plt>
  439f5c:	cbnz	x0, 439f68 <_obstack_memory_used@@Base+0x100>
  439f60:	mov	x0, x19
  439f64:	bl	439ec0 <_obstack_memory_used@@Base+0x58>
  439f68:	ldr	x19, [sp, #16]
  439f6c:	ldp	x29, x30, [sp], #32
  439f70:	ret
  439f74:	stp	x29, x30, [sp, #-32]!
  439f78:	cmp	x0, #0x0
  439f7c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  439f80:	mov	x29, sp
  439f84:	stp	x19, x20, [sp, #16]
  439f88:	b.ne	439fac <_obstack_memory_used@@Base+0x144>  // b.any
  439f8c:	mov	x19, #0x1                   	// #1
  439f90:	mov	x20, x19
  439f94:	mov	x1, x19
  439f98:	mov	x0, x20
  439f9c:	bl	402550 <calloc@plt>
  439fa0:	cbnz	x0, 439fb8 <_obstack_memory_used@@Base+0x150>
  439fa4:	mul	x0, x20, x19
  439fa8:	bl	439ec0 <_obstack_memory_used@@Base+0x58>
  439fac:	mov	x20, x0
  439fb0:	mov	x19, x1
  439fb4:	b	439f94 <_obstack_memory_used@@Base+0x12c>
  439fb8:	ldp	x19, x20, [sp, #16]
  439fbc:	ldp	x29, x30, [sp], #32
  439fc0:	ret
  439fc4:	stp	x29, x30, [sp, #-32]!
  439fc8:	cmp	x1, #0x0
  439fcc:	mov	x29, sp
  439fd0:	str	x19, [sp, #16]
  439fd4:	csinc	x19, x1, xzr, ne  // ne = any
  439fd8:	cbnz	x0, 439ff0 <_obstack_memory_used@@Base+0x188>
  439fdc:	mov	x0, x19
  439fe0:	bl	4024b0 <malloc@plt>
  439fe4:	cbnz	x0, 439ffc <_obstack_memory_used@@Base+0x194>
  439fe8:	mov	x0, x19
  439fec:	bl	439ec0 <_obstack_memory_used@@Base+0x58>
  439ff0:	mov	x1, x19
  439ff4:	bl	4025a0 <realloc@plt>
  439ff8:	b	439fe4 <_obstack_memory_used@@Base+0x17c>
  439ffc:	ldr	x19, [sp, #16]
  43a000:	ldp	x29, x30, [sp], #32
  43a004:	ret
  43a008:	stp	x29, x30, [sp, #-48]!
  43a00c:	mov	x29, sp
  43a010:	stp	x19, x20, [sp, #16]
  43a014:	mov	x19, x1
  43a018:	mov	x20, x2
  43a01c:	stp	x21, x22, [sp, #32]
  43a020:	mov	x22, x0
  43a024:	mov	x0, x2
  43a028:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  43a02c:	mov	x21, x0
  43a030:	cmp	x20, x19
  43a034:	b.ls	43a048 <_obstack_memory_used@@Base+0x1e0>  // b.plast
  43a038:	sub	x2, x20, x19
  43a03c:	add	x0, x0, x19
  43a040:	mov	w1, #0x0                   	// #0
  43a044:	bl	402530 <memset@plt>
  43a048:	mov	x2, x19
  43a04c:	mov	x1, x22
  43a050:	mov	x0, x21
  43a054:	ldp	x19, x20, [sp, #16]
  43a058:	ldp	x21, x22, [sp, #32]
  43a05c:	ldp	x29, x30, [sp], #48
  43a060:	b	4022e0 <memcpy@plt>
  43a064:	stp	x29, x30, [sp, #-32]!
  43a068:	mov	x29, sp
  43a06c:	stp	x19, x20, [sp, #16]
  43a070:	mov	x20, x0
  43a074:	bl	402330 <strlen@plt>
  43a078:	add	x19, x0, #0x1
  43a07c:	mov	x0, x19
  43a080:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  43a084:	mov	x2, x19
  43a088:	mov	x1, x20
  43a08c:	ldp	x19, x20, [sp, #16]
  43a090:	ldp	x29, x30, [sp], #32
  43a094:	b	4022e0 <memcpy@plt>
  43a098:	stp	x29, x30, [sp, #-32]!
  43a09c:	mov	x29, sp
  43a0a0:	stp	x19, x20, [sp, #16]
  43a0a4:	mov	w20, w0
  43a0a8:	bl	4025f0 <strerror@plt>
  43a0ac:	cbnz	x0, 43a0d0 <_obstack_memory_used@@Base+0x268>
  43a0b0:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  43a0b4:	add	x19, x19, #0x8c0
  43a0b8:	mov	w2, w20
  43a0bc:	mov	x0, x19
  43a0c0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  43a0c4:	add	x1, x1, #0x45e
  43a0c8:	bl	4023d0 <sprintf@plt>
  43a0cc:	mov	x0, x19
  43a0d0:	ldp	x19, x20, [sp, #16]
  43a0d4:	ldp	x29, x30, [sp], #32
  43a0d8:	ret
  43a0dc:	stp	x29, x30, [sp, #-32]!
  43a0e0:	mov	x29, sp
  43a0e4:	stp	x19, x20, [sp, #16]
  43a0e8:	mov	x20, x0
  43a0ec:	bl	402380 <strnlen@plt>
  43a0f0:	mov	x19, x0
  43a0f4:	add	x0, x0, #0x1
  43a0f8:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  43a0fc:	mov	x2, x19
  43a100:	mov	x1, x20
  43a104:	strb	wzr, [x0, x19]
  43a108:	ldp	x19, x20, [sp, #16]
  43a10c:	ldp	x29, x30, [sp], #32
  43a110:	b	4022e0 <memcpy@plt>
  43a114:	stp	x29, x30, [sp, #-80]!
  43a118:	mov	x29, sp
  43a11c:	ldp	x2, x3, [x1]
  43a120:	stp	x2, x3, [sp, #48]
  43a124:	ldp	x2, x3, [x1, #16]
  43a128:	stp	x19, x20, [sp, #16]
  43a12c:	mov	x19, x1
  43a130:	add	x1, sp, #0x30
  43a134:	str	x21, [sp, #32]
  43a138:	mov	x21, x0
  43a13c:	stp	x2, x3, [sp, #64]
  43a140:	bl	43a180 <_obstack_memory_used@@Base+0x318>
  43a144:	sxtw	x0, w0
  43a148:	bl	439f40 <_obstack_memory_used@@Base+0xd8>
  43a14c:	mov	x20, x0
  43a150:	ldp	x2, x3, [x19]
  43a154:	stp	x2, x3, [sp, #48]
  43a158:	mov	x1, x21
  43a15c:	ldp	x2, x3, [x19, #16]
  43a160:	stp	x2, x3, [sp, #64]
  43a164:	add	x2, sp, #0x30
  43a168:	bl	4027d0 <vsprintf@plt>
  43a16c:	mov	x0, x20
  43a170:	ldp	x19, x20, [sp, #16]
  43a174:	ldr	x21, [sp, #32]
  43a178:	ldp	x29, x30, [sp], #80
  43a17c:	ret
  43a180:	stp	x29, x30, [sp, #-112]!
  43a184:	mov	x29, sp
  43a188:	stp	x19, x20, [sp, #16]
  43a18c:	mov	x19, x1
  43a190:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  43a194:	stp	x21, x22, [sp, #32]
  43a198:	add	x20, x20, #0x475
  43a19c:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x1d198>
  43a1a0:	stp	x23, x24, [sp, #48]
  43a1a4:	add	x21, x21, #0x47b
  43a1a8:	str	x0, [sp, #72]
  43a1ac:	bl	402330 <strlen@plt>
  43a1b0:	add	w23, w0, #0x1
  43a1b4:	ldp	x0, x1, [x19]
  43a1b8:	stp	x0, x1, [sp, #80]
  43a1bc:	ldp	x0, x1, [x19, #16]
  43a1c0:	stp	x0, x1, [sp, #96]
  43a1c4:	ldr	x0, [sp, #72]
  43a1c8:	ldrb	w1, [x0]
  43a1cc:	cbnz	w1, 43a1e8 <_obstack_memory_used@@Base+0x380>
  43a1d0:	mov	w0, w23
  43a1d4:	ldp	x19, x20, [sp, #16]
  43a1d8:	ldp	x21, x22, [sp, #32]
  43a1dc:	ldp	x23, x24, [sp, #48]
  43a1e0:	ldp	x29, x30, [sp], #112
  43a1e4:	ret
  43a1e8:	add	x1, x0, #0x1
  43a1ec:	str	x1, [sp, #72]
  43a1f0:	ldrb	w0, [x0]
  43a1f4:	cmp	w0, #0x25
  43a1f8:	b.ne	43a1c4 <_obstack_memory_used@@Base+0x35c>  // b.any
  43a1fc:	ldr	x19, [sp, #72]
  43a200:	mov	x0, x20
  43a204:	ldrb	w22, [x19]
  43a208:	mov	w1, w22
  43a20c:	bl	402760 <strchr@plt>
  43a210:	cbnz	x0, 43a2f4 <_obstack_memory_used@@Base+0x48c>
  43a214:	cmp	w22, #0x2a
  43a218:	b.ne	43a31c <_obstack_memory_used@@Base+0x4b4>  // b.any
  43a21c:	ldr	w1, [sp, #104]
  43a220:	add	x19, x19, #0x1
  43a224:	str	x19, [sp, #72]
  43a228:	ldr	x0, [sp, #80]
  43a22c:	tbnz	w1, #31, 43a300 <_obstack_memory_used@@Base+0x498>
  43a230:	add	x1, x0, #0xb
  43a234:	and	x1, x1, #0xfffffffffffffff8
  43a238:	str	x1, [sp, #80]
  43a23c:	ldr	w19, [x0]
  43a240:	cmp	w19, #0x0
  43a244:	cneg	w19, w19, lt  // lt = tstop
  43a248:	add	w19, w19, w23
  43a24c:	ldr	x1, [sp, #72]
  43a250:	ldrb	w0, [x1]
  43a254:	cmp	w0, #0x2e
  43a258:	b.ne	43a2a0 <_obstack_memory_used@@Base+0x438>  // b.any
  43a25c:	add	x0, x1, #0x1
  43a260:	str	x0, [sp, #72]
  43a264:	ldrb	w2, [x1, #1]
  43a268:	cmp	w2, #0x2a
  43a26c:	b.ne	43a350 <_obstack_memory_used@@Base+0x4e8>  // b.any
  43a270:	add	x1, x1, #0x2
  43a274:	str	x1, [sp, #72]
  43a278:	ldr	w1, [sp, #104]
  43a27c:	ldr	x0, [sp, #80]
  43a280:	tbnz	w1, #31, 43a334 <_obstack_memory_used@@Base+0x4cc>
  43a284:	add	x1, x0, #0xb
  43a288:	and	x1, x1, #0xfffffffffffffff8
  43a28c:	str	x1, [sp, #80]
  43a290:	ldr	w0, [x0]
  43a294:	cmp	w0, #0x0
  43a298:	cneg	w0, w0, lt  // lt = tstop
  43a29c:	add	w19, w19, w0
  43a2a0:	ldr	x24, [sp, #72]
  43a2a4:	mov	x0, x21
  43a2a8:	ldrb	w22, [x24], #1
  43a2ac:	mov	w1, w22
  43a2b0:	bl	402760 <strchr@plt>
  43a2b4:	cbnz	x0, 43a360 <_obstack_memory_used@@Base+0x4f8>
  43a2b8:	add	w23, w19, #0x1e
  43a2bc:	cmp	w22, #0x78
  43a2c0:	b.hi	43a3b8 <_obstack_memory_used@@Base+0x550>  // b.pmore
  43a2c4:	cmp	w22, #0x57
  43a2c8:	b.hi	43a368 <_obstack_memory_used@@Base+0x500>  // b.pmore
  43a2cc:	and	w22, w22, #0xfffffffd
  43a2d0:	cmp	w22, #0x45
  43a2d4:	b.ne	43a3b8 <_obstack_memory_used@@Base+0x550>  // b.any
  43a2d8:	ldr	w1, [sp, #108]
  43a2dc:	ldr	x0, [sp, #80]
  43a2e0:	tbnz	w1, #31, 43a3c0 <_obstack_memory_used@@Base+0x558>
  43a2e4:	add	x0, x0, #0xf
  43a2e8:	and	x0, x0, #0xfffffffffffffff8
  43a2ec:	str	x0, [sp, #80]
  43a2f0:	b	43a3d0 <_obstack_memory_used@@Base+0x568>
  43a2f4:	add	x19, x19, #0x1
  43a2f8:	str	x19, [sp, #72]
  43a2fc:	b	43a1fc <_obstack_memory_used@@Base+0x394>
  43a300:	add	w2, w1, #0x8
  43a304:	str	w2, [sp, #104]
  43a308:	cmp	w2, #0x0
  43a30c:	b.gt	43a230 <_obstack_memory_used@@Base+0x3c8>
  43a310:	ldr	x0, [sp, #88]
  43a314:	add	x0, x0, w1, sxtw
  43a318:	b	43a23c <_obstack_memory_used@@Base+0x3d4>
  43a31c:	mov	x0, x19
  43a320:	add	x1, sp, #0x48
  43a324:	mov	w2, #0xa                   	// #10
  43a328:	bl	402320 <strtoul@plt>
  43a32c:	add	w19, w23, w0
  43a330:	b	43a24c <_obstack_memory_used@@Base+0x3e4>
  43a334:	add	w2, w1, #0x8
  43a338:	str	w2, [sp, #104]
  43a33c:	cmp	w2, #0x0
  43a340:	b.gt	43a284 <_obstack_memory_used@@Base+0x41c>
  43a344:	ldr	x0, [sp, #88]
  43a348:	add	x0, x0, w1, sxtw
  43a34c:	b	43a290 <_obstack_memory_used@@Base+0x428>
  43a350:	add	x1, sp, #0x48
  43a354:	mov	w2, #0xa                   	// #10
  43a358:	bl	402320 <strtoul@plt>
  43a35c:	b	43a29c <_obstack_memory_used@@Base+0x434>
  43a360:	str	x24, [sp, #72]
  43a364:	b	43a2a0 <_obstack_memory_used@@Base+0x438>
  43a368:	sub	w22, w22, #0x58
  43a36c:	cmp	w22, #0x20
  43a370:	b.hi	43a3b8 <_obstack_memory_used@@Base+0x550>  // b.pmore
  43a374:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43a378:	add	x0, x0, #0x480
  43a37c:	ldrb	w0, [x0, w22, uxtw]
  43a380:	adr	x1, 43a38c <_obstack_memory_used@@Base+0x524>
  43a384:	add	x0, x1, w0, sxtb #2
  43a388:	br	x0
  43a38c:	ldr	w0, [sp, #104]
  43a390:	ldr	x1, [sp, #80]
  43a394:	tbnz	w0, #31, 43a3a8 <_obstack_memory_used@@Base+0x540>
  43a398:	add	x1, x1, #0xb
  43a39c:	and	x1, x1, #0xfffffffffffffff8
  43a3a0:	str	x1, [sp, #80]
  43a3a4:	b	43a3b8 <_obstack_memory_used@@Base+0x550>
  43a3a8:	add	w0, w0, #0x8
  43a3ac:	str	w0, [sp, #104]
  43a3b0:	cmp	w0, #0x0
  43a3b4:	b.gt	43a398 <_obstack_memory_used@@Base+0x530>
  43a3b8:	str	x24, [sp, #72]
  43a3bc:	b	43a1c4 <_obstack_memory_used@@Base+0x35c>
  43a3c0:	add	w1, w1, #0x10
  43a3c4:	str	w1, [sp, #108]
  43a3c8:	cmp	w1, #0x0
  43a3cc:	b.gt	43a2e4 <_obstack_memory_used@@Base+0x47c>
  43a3d0:	add	w23, w19, #0x151
  43a3d4:	b	43a3b8 <_obstack_memory_used@@Base+0x550>
  43a3d8:	ldr	w1, [sp, #104]
  43a3dc:	ldr	x0, [sp, #80]
  43a3e0:	tbnz	w1, #31, 43a400 <_obstack_memory_used@@Base+0x598>
  43a3e4:	add	x1, x0, #0xf
  43a3e8:	and	x1, x1, #0xfffffffffffffff8
  43a3ec:	str	x1, [sp, #80]
  43a3f0:	ldr	x0, [x0]
  43a3f4:	bl	402330 <strlen@plt>
  43a3f8:	add	w23, w23, w0
  43a3fc:	b	43a3b8 <_obstack_memory_used@@Base+0x550>
  43a400:	add	w2, w1, #0x8
  43a404:	str	w2, [sp, #104]
  43a408:	cmp	w2, #0x0
  43a40c:	b.gt	43a3e4 <_obstack_memory_used@@Base+0x57c>
  43a410:	ldr	x0, [sp, #88]
  43a414:	add	x0, x0, w1, sxtw
  43a418:	b	43a3f0 <_obstack_memory_used@@Base+0x588>
  43a41c:	ldr	w0, [sp, #104]
  43a420:	ldr	x1, [sp, #80]
  43a424:	tbnz	w0, #31, 43a430 <_obstack_memory_used@@Base+0x5c8>
  43a428:	add	x1, x1, #0xf
  43a42c:	b	43a39c <_obstack_memory_used@@Base+0x534>
  43a430:	add	w0, w0, #0x8
  43a434:	str	w0, [sp, #104]
  43a438:	cmp	w0, #0x0
  43a43c:	b.gt	43a428 <_obstack_memory_used@@Base+0x5c0>
  43a440:	b	43a3b8 <_obstack_memory_used@@Base+0x550>
  43a444:	stp	x29, x30, [sp, #-32]!
  43a448:	mov	x29, sp
  43a44c:	str	x19, [sp, #16]
  43a450:	mov	w19, w0
  43a454:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  43a458:	ldr	x0, [x0, #2960]
  43a45c:	cbz	x0, 43a464 <_obstack_memory_used@@Base+0x5fc>
  43a460:	blr	x0
  43a464:	mov	w0, w19
  43a468:	bl	402360 <exit@plt>
  43a46c:	nop
  43a470:	b	43ad28 <_obstack_memory_used@@Base+0xec0>
  43a474:	nop
  43a478:	b	43ad30 <_obstack_memory_used@@Base+0xec8>
  43a47c:	nop
  43a480:	stp	x29, x30, [sp, #-64]!
  43a484:	mov	x29, sp
  43a488:	str	x23, [sp, #48]
  43a48c:	mov	x23, x0
  43a490:	ldarb	w0, [x0]
  43a494:	tst	w0, #0xff
  43a498:	b.ne	43a4f4 <_obstack_memory_used@@Base+0x68c>  // b.any
  43a49c:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x3d198>
  43a4a0:	ldr	x0, [x0, #3880]
  43a4a4:	cbz	x0, 43a504 <_obstack_memory_used@@Base+0x69c>
  43a4a8:	stp	x19, x20, [sp, #16]
  43a4ac:	mov	w19, #0x100                 	// #256
  43a4b0:	mov	w20, #0x1                   	// #1
  43a4b4:	stp	x21, x22, [sp, #32]
  43a4b8:	mov	w21, w19
  43a4bc:	ldaxr	w0, [x23]
  43a4c0:	cbnz	w0, 43a4cc <_obstack_memory_used@@Base+0x664>
  43a4c4:	stlxr	w1, w19, [x23]
  43a4c8:	cbnz	w1, 43a4bc <_obstack_memory_used@@Base+0x654>
  43a4cc:	cmp	w0, #0x0
  43a4d0:	b.ne	43a52c <_obstack_memory_used@@Base+0x6c4>  // b.any
  43a4d4:	mov	w0, #0x1                   	// #1
  43a4d8:	ldp	x19, x20, [sp, #16]
  43a4dc:	ldp	x21, x22, [sp, #32]
  43a4e0:	ldr	x23, [sp, #48]
  43a4e4:	ldp	x29, x30, [sp], #64
  43a4e8:	ret
  43a4ec:	ldp	x19, x20, [sp, #16]
  43a4f0:	ldp	x21, x22, [sp, #32]
  43a4f4:	mov	w0, #0x0                   	// #0
  43a4f8:	ldr	x23, [sp, #48]
  43a4fc:	ldp	x29, x30, [sp], #64
  43a500:	ret
  43a504:	ldrb	w0, [x23]
  43a508:	cbnz	w0, 43a4f4 <_obstack_memory_used@@Base+0x68c>
  43a50c:	ldrb	w0, [x23, #1]
  43a510:	cbnz	w0, 43a5a4 <_obstack_memory_used@@Base+0x73c>
  43a514:	mov	w2, #0x1                   	// #1
  43a518:	strb	w2, [x23, #1]
  43a51c:	mov	w0, #0x1                   	// #1
  43a520:	ldr	x23, [sp, #48]
  43a524:	ldp	x29, x30, [sp], #64
  43a528:	ret
  43a52c:	orr	w22, w19, #0x10000
  43a530:	mov	w3, w0
  43a534:	cmp	w20, w3
  43a538:	b.eq	43a4ec <_obstack_memory_used@@Base+0x684>  // b.none
  43a53c:	cmp	w19, w3
  43a540:	b.ne	43a560 <_obstack_memory_used@@Base+0x6f8>  // b.any
  43a544:	mov	w3, w22
  43a548:	ldaxr	w2, [x23]
  43a54c:	cmp	w2, w0
  43a550:	b.ne	43a55c <_obstack_memory_used@@Base+0x6f4>  // b.any
  43a554:	stlxr	w1, w22, [x23]
  43a558:	cbnz	w1, 43a548 <_obstack_memory_used@@Base+0x6e0>
  43a55c:	b.ne	43a594 <_obstack_memory_used@@Base+0x72c>  // b.any
  43a560:	mov	x1, x23
  43a564:	mov	w4, #0x0                   	// #0
  43a568:	mov	w2, #0x0                   	// #0
  43a56c:	mov	x0, #0x62                  	// #98
  43a570:	bl	402910 <syscall@plt>
  43a574:	ldaxr	w0, [x23]
  43a578:	cbnz	w0, 43a584 <_obstack_memory_used@@Base+0x71c>
  43a57c:	stlxr	w1, w21, [x23]
  43a580:	cbnz	w1, 43a574 <_obstack_memory_used@@Base+0x70c>
  43a584:	cmp	w0, #0x0
  43a588:	mov	w3, w0
  43a58c:	b.eq	43a4d4 <_obstack_memory_used@@Base+0x66c>  // b.none
  43a590:	b	43a534 <_obstack_memory_used@@Base+0x6cc>
  43a594:	cmp	w20, w2
  43a598:	b.eq	43a4ec <_obstack_memory_used@@Base+0x684>  // b.none
  43a59c:	cbnz	w2, 43a560 <_obstack_memory_used@@Base+0x6f8>
  43a5a0:	b	43a574 <_obstack_memory_used@@Base+0x70c>
  43a5a4:	mov	x0, #0x8                   	// #8
  43a5a8:	stp	x19, x20, [sp, #16]
  43a5ac:	stp	x21, x22, [sp, #32]
  43a5b0:	bl	43b0a0 <_obstack_memory_used@@Base+0x1238>
  43a5b4:	mov	x19, x0
  43a5b8:	bl	43a698 <_obstack_memory_used@@Base+0x830>
  43a5bc:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x3d198>
  43a5c0:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43a5c4:	mov	x0, x19
  43a5c8:	ldr	x2, [x2, #4016]
  43a5cc:	ldr	x1, [x1, #3896]
  43a5d0:	bl	43beb8 <_obstack_memory_used@@Base+0x2050>
  43a5d4:	nop
  43a5d8:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43a5dc:	ldr	x1, [x1, #3880]
  43a5e0:	cbnz	x1, 43a5ec <_obstack_memory_used@@Base+0x784>
  43a5e4:	strb	wzr, [x0, #1]
  43a5e8:	ret
  43a5ec:	ldaxr	w1, [x0]
  43a5f0:	stlxr	w2, wzr, [x0]
  43a5f4:	cbnz	w2, 43a5ec <_obstack_memory_used@@Base+0x784>
  43a5f8:	tbz	w1, #16, 43a5e8 <_obstack_memory_used@@Base+0x780>
  43a5fc:	mov	x1, x0
  43a600:	mov	w3, #0x7fffffff            	// #2147483647
  43a604:	mov	w2, #0x1                   	// #1
  43a608:	mov	x0, #0x62                  	// #98
  43a60c:	b	402910 <syscall@plt>
  43a610:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43a614:	ldr	x1, [x1, #3880]
  43a618:	cbz	x1, 43a634 <_obstack_memory_used@@Base+0x7cc>
  43a61c:	mov	w2, #0x1                   	// #1
  43a620:	ldaxr	w1, [x0]
  43a624:	stlxr	w3, w2, [x0]
  43a628:	cbnz	w3, 43a620 <_obstack_memory_used@@Base+0x7b8>
  43a62c:	tbnz	w1, #16, 43a644 <_obstack_memory_used@@Base+0x7dc>
  43a630:	ret
  43a634:	strb	wzr, [x0, #1]
  43a638:	mov	w1, #0x1                   	// #1
  43a63c:	stlrb	w1, [x0]
  43a640:	ret
  43a644:	mov	x1, x0
  43a648:	mov	w3, #0x7fffffff            	// #2147483647
  43a64c:	mov	x0, #0x62                  	// #98
  43a650:	b	402910 <syscall@plt>
  43a654:	nop
  43a658:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43a65c:	ldr	x1, [x1, #4056]
  43a660:	add	x1, x1, #0x10
  43a664:	str	x1, [x0]
  43a668:	b	43b1d8 <_obstack_memory_used@@Base+0x1370>
  43a66c:	nop
  43a670:	stp	x29, x30, [sp, #-32]!
  43a674:	mov	x29, sp
  43a678:	str	x19, [sp, #16]
  43a67c:	mov	x19, x0
  43a680:	bl	43a658 <_obstack_memory_used@@Base+0x7f0>
  43a684:	mov	x0, x19
  43a688:	mov	x1, #0x8                   	// #8
  43a68c:	ldr	x19, [sp, #16]
  43a690:	ldp	x29, x30, [sp], #32
  43a694:	b	43a470 <_obstack_memory_used@@Base+0x608>
  43a698:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43a69c:	ldr	x1, [x1, #4056]
  43a6a0:	add	x1, x1, #0x10
  43a6a4:	str	x1, [x0]
  43a6a8:	ret
  43a6ac:	nop
  43a6b0:	stp	x29, x30, [sp, #-32]!
  43a6b4:	cmp	x0, #0x0
  43a6b8:	mov	x29, sp
  43a6bc:	str	x19, [sp, #16]
  43a6c0:	csinc	x19, x0, xzr, ne  // ne = any
  43a6c4:	mov	x0, x19
  43a6c8:	bl	4024b0 <malloc@plt>
  43a6cc:	cbz	x0, 43a6dc <_obstack_memory_used@@Base+0x874>
  43a6d0:	ldr	x19, [sp, #16]
  43a6d4:	ldp	x29, x30, [sp], #32
  43a6d8:	ret
  43a6dc:	bl	43bfa8 <_obstack_memory_used@@Base+0x2140>
  43a6e0:	cbz	x0, 43a6ec <_obstack_memory_used@@Base+0x884>
  43a6e4:	blr	x0
  43a6e8:	b	43a6c4 <_obstack_memory_used@@Base+0x85c>
  43a6ec:	mov	x0, #0x8                   	// #8
  43a6f0:	bl	43b0a0 <_obstack_memory_used@@Base+0x1238>
  43a6f4:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x3d198>
  43a6f8:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x3d198>
  43a6fc:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43a700:	ldr	x3, [x3, #3992]
  43a704:	ldr	x2, [x2, #3920]
  43a708:	add	x3, x3, #0x10
  43a70c:	ldr	x1, [x1, #3904]
  43a710:	str	x3, [x0]
  43a714:	bl	43beb8 <_obstack_memory_used@@Base+0x2050>
  43a718:	b	43a6b0 <_obstack_memory_used@@Base+0x848>
  43a71c:	nop
  43a720:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43a724:	ldr	x1, [x1, #4008]
  43a728:	add	x1, x1, #0x10
  43a72c:	str	x1, [x0]
  43a730:	b	43aae8 <_obstack_memory_used@@Base+0xc80>
  43a734:	nop
  43a738:	stp	x29, x30, [sp, #-32]!
  43a73c:	mov	x29, sp
  43a740:	str	x19, [sp, #16]
  43a744:	mov	x19, x0
  43a748:	bl	43a720 <_obstack_memory_used@@Base+0x8b8>
  43a74c:	mov	x0, x19
  43a750:	mov	x1, #0x18                  	// #24
  43a754:	ldr	x19, [sp, #16]
  43a758:	ldp	x29, x30, [sp], #32
  43a75c:	b	43a470 <_obstack_memory_used@@Base+0x608>
  43a760:	stp	x29, x30, [sp, #-64]!
  43a764:	cmp	x4, x2
  43a768:	mov	x29, sp
  43a76c:	stp	x19, x20, [sp, #16]
  43a770:	mov	x19, x0
  43a774:	mov	x20, x1
  43a778:	b.eq	43a79c <_obstack_memory_used@@Base+0x934>  // b.none
  43a77c:	ldr	x0, [x19, #16]
  43a780:	mov	x1, x20
  43a784:	ldp	x19, x20, [sp, #16]
  43a788:	ldr	x5, [x0]
  43a78c:	ldr	x5, [x5, #64]
  43a790:	ldp	x29, x30, [sp], #64
  43a794:	mov	x16, x5
  43a798:	br	x16
  43a79c:	ldr	x1, [x3, #8]
  43a7a0:	ldr	x0, [x0, #8]
  43a7a4:	cmp	x0, x1
  43a7a8:	b.eq	43a7d0 <_obstack_memory_used@@Base+0x968>  // b.none
  43a7ac:	ldrb	w5, [x0]
  43a7b0:	cmp	w5, #0x2a
  43a7b4:	b.eq	43a77c <_obstack_memory_used@@Base+0x914>  // b.none
  43a7b8:	stp	x2, x3, [sp, #40]
  43a7bc:	str	x4, [sp, #56]
  43a7c0:	bl	4026d0 <strcmp@plt>
  43a7c4:	ldp	x2, x3, [sp, #40]
  43a7c8:	ldr	x4, [sp, #56]
  43a7cc:	cbnz	w0, 43a77c <_obstack_memory_used@@Base+0x914>
  43a7d0:	mov	w0, #0x6                   	// #6
  43a7d4:	ldp	x19, x20, [sp, #16]
  43a7d8:	ldp	x29, x30, [sp], #64
  43a7dc:	ret
  43a7e0:	stp	x29, x30, [sp, #-96]!
  43a7e4:	mov	x29, sp
  43a7e8:	stp	x21, x22, [sp, #32]
  43a7ec:	mov	x22, x3
  43a7f0:	mov	x21, x1
  43a7f4:	stp	x25, x26, [sp, #64]
  43a7f8:	mov	w26, w2
  43a7fc:	ldr	x25, [x0, #8]
  43a800:	stp	x19, x20, [sp, #16]
  43a804:	mov	x19, x4
  43a808:	ldr	x3, [x3, #8]
  43a80c:	stp	x23, x24, [sp, #48]
  43a810:	mov	x20, x7
  43a814:	mov	x23, x6
  43a818:	cmp	x25, x3
  43a81c:	b.eq	43a84c <_obstack_memory_used@@Base+0x9e4>  // b.none
  43a820:	stp	x27, x28, [sp, #80]
  43a824:	mov	x24, x5
  43a828:	mov	x27, x0
  43a82c:	ldrb	w28, [x25]
  43a830:	cmp	w28, #0x2a
  43a834:	b.eq	43a888 <_obstack_memory_used@@Base+0xa20>  // b.none
  43a838:	mov	x1, x3
  43a83c:	mov	x0, x25
  43a840:	bl	4026d0 <strcmp@plt>
  43a844:	cbnz	w0, 43a888 <_obstack_memory_used@@Base+0xa20>
  43a848:	ldp	x27, x28, [sp, #80]
  43a84c:	str	x19, [x20]
  43a850:	str	w26, [x20, #8]
  43a854:	tbnz	x21, #63, 43a8d8 <_obstack_memory_used@@Base+0xa70>
  43a858:	add	x1, x19, x21
  43a85c:	mov	w2, #0x6                   	// #6
  43a860:	cmp	x23, x1
  43a864:	mov	w0, #0x0                   	// #0
  43a868:	csinc	w2, w2, wzr, eq  // eq = none
  43a86c:	str	w2, [x20, #16]
  43a870:	ldp	x19, x20, [sp, #16]
  43a874:	ldp	x21, x22, [sp, #32]
  43a878:	ldp	x23, x24, [sp, #48]
  43a87c:	ldp	x25, x26, [sp, #64]
  43a880:	ldp	x29, x30, [sp], #96
  43a884:	ret
  43a888:	cmp	x19, x23
  43a88c:	b.eq	43a8f0 <_obstack_memory_used@@Base+0xa88>  // b.none
  43a890:	ldr	x0, [x27, #16]
  43a894:	mov	x7, x20
  43a898:	mov	x6, x23
  43a89c:	mov	x5, x24
  43a8a0:	mov	x4, x19
  43a8a4:	mov	x3, x22
  43a8a8:	ldr	x8, [x0]
  43a8ac:	mov	w2, w26
  43a8b0:	mov	x1, x21
  43a8b4:	ldp	x19, x20, [sp, #16]
  43a8b8:	ldp	x21, x22, [sp, #32]
  43a8bc:	ldp	x23, x24, [sp, #48]
  43a8c0:	ldp	x25, x26, [sp, #64]
  43a8c4:	ldp	x27, x28, [sp, #80]
  43a8c8:	ldp	x29, x30, [sp], #96
  43a8cc:	ldr	x8, [x8, #56]
  43a8d0:	mov	x16, x8
  43a8d4:	br	x16
  43a8d8:	cmn	x21, #0x2
  43a8dc:	mov	w0, #0x0                   	// #0
  43a8e0:	b.ne	43a870 <_obstack_memory_used@@Base+0xa08>  // b.any
  43a8e4:	mov	w1, #0x1                   	// #1
  43a8e8:	str	w1, [x20, #16]
  43a8ec:	b	43a870 <_obstack_memory_used@@Base+0xa08>
  43a8f0:	ldr	x1, [x24, #8]
  43a8f4:	cmp	x25, x1
  43a8f8:	b.eq	43a910 <_obstack_memory_used@@Base+0xaa8>  // b.none
  43a8fc:	cmp	w28, #0x2a
  43a900:	b.eq	43a890 <_obstack_memory_used@@Base+0xa28>  // b.none
  43a904:	mov	x0, x25
  43a908:	bl	4026d0 <strcmp@plt>
  43a90c:	cbnz	w0, 43a890 <_obstack_memory_used@@Base+0xa28>
  43a910:	mov	w0, #0x0                   	// #0
  43a914:	ldp	x27, x28, [sp, #80]
  43a918:	str	w26, [x20, #12]
  43a91c:	b	43a870 <_obstack_memory_used@@Base+0xa08>
  43a920:	stp	x29, x30, [sp, #-48]!
  43a924:	mov	x29, sp
  43a928:	stp	x19, x20, [sp, #16]
  43a92c:	mov	x19, x1
  43a930:	mov	x20, x2
  43a934:	stp	x21, x22, [sp, #32]
  43a938:	mov	x22, x0
  43a93c:	mov	x21, x3
  43a940:	bl	43ac08 <_obstack_memory_used@@Base+0xda0>
  43a944:	tst	w0, #0xff
  43a948:	b.ne	43a978 <_obstack_memory_used@@Base+0xb10>  // b.any
  43a94c:	ldr	x0, [x22, #16]
  43a950:	mov	x3, x21
  43a954:	mov	x2, x20
  43a958:	mov	x1, x19
  43a95c:	ldp	x19, x20, [sp, #16]
  43a960:	ldr	x4, [x0]
  43a964:	ldp	x21, x22, [sp, #32]
  43a968:	ldp	x29, x30, [sp], #48
  43a96c:	ldr	x4, [x4, #48]
  43a970:	mov	x16, x4
  43a974:	br	x16
  43a978:	ldp	x19, x20, [sp, #16]
  43a97c:	ldp	x21, x22, [sp, #32]
  43a980:	ldp	x29, x30, [sp], #48
  43a984:	ret
  43a988:	ret
  43a98c:	nop
  43a990:	mov	w0, #0x0                   	// #0
  43a994:	ret
  43a998:	mov	w0, #0x0                   	// #0
  43a99c:	ret
  43a9a0:	stp	x29, x30, [sp, #-32]!
  43a9a4:	mov	x29, sp
  43a9a8:	str	x19, [sp, #16]
  43a9ac:	mov	x19, x0
  43a9b0:	bl	43a988 <_obstack_memory_used@@Base+0xb20>
  43a9b4:	mov	x0, x19
  43a9b8:	mov	x1, #0x10                  	// #16
  43a9bc:	ldr	x19, [sp, #16]
  43a9c0:	ldp	x29, x30, [sp], #32
  43a9c4:	b	43a470 <_obstack_memory_used@@Base+0x608>
  43a9c8:	ldr	x2, [x0, #8]
  43a9cc:	ldr	x1, [x1, #8]
  43a9d0:	cmp	x2, x1
  43a9d4:	b.eq	43aa0c <_obstack_memory_used@@Base+0xba4>  // b.none
  43a9d8:	ldrb	w3, [x2]
  43a9dc:	mov	w0, #0x0                   	// #0
  43a9e0:	cmp	w3, #0x2a
  43a9e4:	b.eq	43aa08 <_obstack_memory_used@@Base+0xba0>  // b.none
  43a9e8:	stp	x29, x30, [sp, #-16]!
  43a9ec:	mov	x0, x2
  43a9f0:	mov	x29, sp
  43a9f4:	bl	4026d0 <strcmp@plt>
  43a9f8:	cmp	w0, #0x0
  43a9fc:	cset	w0, eq  // eq = none
  43aa00:	ldp	x29, x30, [sp], #16
  43aa04:	ret
  43aa08:	ret
  43aa0c:	mov	w0, #0x1                   	// #1
  43aa10:	ret
  43aa14:	nop
  43aa18:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43aa1c:	add	x0, x0, #0x508
  43aa20:	ret
  43aa24:	nop
  43aa28:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43aa2c:	ldr	x1, [x1, #3992]
  43aa30:	add	x1, x1, #0x10
  43aa34:	str	x1, [x0]
  43aa38:	b	43b1d8 <_obstack_memory_used@@Base+0x1370>
  43aa3c:	nop
  43aa40:	stp	x29, x30, [sp, #-32]!
  43aa44:	mov	x29, sp
  43aa48:	str	x19, [sp, #16]
  43aa4c:	mov	x19, x0
  43aa50:	bl	43aa28 <_obstack_memory_used@@Base+0xbc0>
  43aa54:	mov	x0, x19
  43aa58:	mov	x1, #0x8                   	// #8
  43aa5c:	ldr	x19, [sp, #16]
  43aa60:	ldp	x29, x30, [sp], #32
  43aa64:	b	43a470 <_obstack_memory_used@@Base+0x608>
  43aa68:	stp	x29, x30, [sp, #-64]!
  43aa6c:	mov	x29, sp
  43aa70:	ldr	x4, [x0]
  43aa74:	str	xzr, [sp, #40]
  43aa78:	str	xzr, [sp, #56]
  43aa7c:	add	x3, sp, #0x28
  43aa80:	ldr	x4, [x4, #48]
  43aa84:	str	x19, [sp, #16]
  43aa88:	mov	x19, x2
  43aa8c:	mov	x2, #0x1000000000          	// #68719476736
  43aa90:	str	x2, [sp, #48]
  43aa94:	ldr	x2, [x19]
  43aa98:	blr	x4
  43aa9c:	ldr	w0, [sp, #48]
  43aaa0:	and	w0, w0, #0x6
  43aaa4:	cmp	w0, #0x6
  43aaa8:	b.ne	43aac4 <_obstack_memory_used@@Base+0xc5c>  // b.any
  43aaac:	ldr	x1, [sp, #40]
  43aab0:	str	x1, [x19]
  43aab4:	mov	w0, #0x1                   	// #1
  43aab8:	ldr	x19, [sp, #16]
  43aabc:	ldp	x29, x30, [sp], #64
  43aac0:	ret
  43aac4:	mov	w0, #0x0                   	// #0
  43aac8:	ldr	x19, [sp, #16]
  43aacc:	ldp	x29, x30, [sp], #64
  43aad0:	ret
  43aad4:	nop
  43aad8:	cmp	x4, x2
  43aadc:	mov	w0, #0x6                   	// #6
  43aae0:	csinc	w0, w0, wzr, eq  // eq = none
  43aae4:	ret
  43aae8:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43aaec:	ldr	x1, [x1, #4048]
  43aaf0:	add	x1, x1, #0x10
  43aaf4:	str	x1, [x0]
  43aaf8:	b	43a988 <_obstack_memory_used@@Base+0xb20>
  43aafc:	nop
  43ab00:	stp	x29, x30, [sp, #-32]!
  43ab04:	mov	x29, sp
  43ab08:	str	x19, [sp, #16]
  43ab0c:	mov	x19, x0
  43ab10:	bl	43aae8 <_obstack_memory_used@@Base+0xc80>
  43ab14:	mov	x0, x19
  43ab18:	mov	x1, #0x10                  	// #16
  43ab1c:	ldr	x19, [sp, #16]
  43ab20:	ldp	x29, x30, [sp], #32
  43ab24:	b	43a470 <_obstack_memory_used@@Base+0x608>
  43ab28:	stp	x29, x30, [sp, #-64]!
  43ab2c:	cmp	x4, x6
  43ab30:	mov	x29, sp
  43ab34:	stp	x19, x20, [sp, #16]
  43ab38:	mov	x20, x4
  43ab3c:	mov	x19, x7
  43ab40:	stp	x21, x22, [sp, #32]
  43ab44:	mov	w21, w2
  43ab48:	ldr	x22, [x0, #8]
  43ab4c:	str	x23, [sp, #48]
  43ab50:	mov	x23, x3
  43ab54:	b.eq	43aba4 <_obstack_memory_used@@Base+0xd3c>  // b.none
  43ab58:	ldr	x1, [x3, #8]
  43ab5c:	cmp	x1, x22
  43ab60:	b.eq	43ab7c <_obstack_memory_used@@Base+0xd14>  // b.none
  43ab64:	ldrb	w0, [x22]
  43ab68:	cmp	w0, #0x2a
  43ab6c:	b.eq	43ab8c <_obstack_memory_used@@Base+0xd24>  // b.none
  43ab70:	mov	x0, x22
  43ab74:	bl	4026d0 <strcmp@plt>
  43ab78:	cbnz	w0, 43ab8c <_obstack_memory_used@@Base+0xd24>
  43ab7c:	mov	w0, #0x1                   	// #1
  43ab80:	str	x20, [x19]
  43ab84:	str	w21, [x19, #8]
  43ab88:	str	w0, [x19, #16]
  43ab8c:	mov	w0, #0x0                   	// #0
  43ab90:	ldp	x19, x20, [sp, #16]
  43ab94:	ldp	x21, x22, [sp, #32]
  43ab98:	ldr	x23, [sp, #48]
  43ab9c:	ldp	x29, x30, [sp], #64
  43aba0:	ret
  43aba4:	ldr	x1, [x5, #8]
  43aba8:	cmp	x1, x22
  43abac:	b.eq	43abe8 <_obstack_memory_used@@Base+0xd80>  // b.none
  43abb0:	ldrb	w0, [x22]
  43abb4:	cmp	w0, #0x2a
  43abb8:	b.eq	43abd8 <_obstack_memory_used@@Base+0xd70>  // b.none
  43abbc:	mov	x0, x22
  43abc0:	bl	4026d0 <strcmp@plt>
  43abc4:	cbz	w0, 43abe8 <_obstack_memory_used@@Base+0xd80>
  43abc8:	ldr	x1, [x23, #8]
  43abcc:	cmp	x22, x1
  43abd0:	b.ne	43ab70 <_obstack_memory_used@@Base+0xd08>  // b.any
  43abd4:	b	43ab7c <_obstack_memory_used@@Base+0xd14>
  43abd8:	ldr	x0, [x3, #8]
  43abdc:	cmp	x0, x22
  43abe0:	b.ne	43ab8c <_obstack_memory_used@@Base+0xd24>  // b.any
  43abe4:	b	43ab7c <_obstack_memory_used@@Base+0xd14>
  43abe8:	str	w21, [x19, #12]
  43abec:	mov	w0, #0x0                   	// #0
  43abf0:	ldp	x19, x20, [sp, #16]
  43abf4:	ldp	x21, x22, [sp, #32]
  43abf8:	ldr	x23, [sp, #48]
  43abfc:	ldp	x29, x30, [sp], #64
  43ac00:	ret
  43ac04:	nop
  43ac08:	stp	x29, x30, [sp, #-48]!
  43ac0c:	mov	x29, sp
  43ac10:	ldr	x0, [x0, #8]
  43ac14:	stp	x19, x20, [sp, #16]
  43ac18:	mov	x20, x2
  43ac1c:	ldr	x1, [x1, #8]
  43ac20:	str	x21, [sp, #32]
  43ac24:	mov	x19, x3
  43ac28:	cmp	x0, x1
  43ac2c:	b.eq	43ac48 <_obstack_memory_used@@Base+0xde0>  // b.none
  43ac30:	ldrb	w2, [x0]
  43ac34:	mov	w21, #0x0                   	// #0
  43ac38:	cmp	w2, #0x2a
  43ac3c:	b.eq	43ac60 <_obstack_memory_used@@Base+0xdf8>  // b.none
  43ac40:	bl	4026d0 <strcmp@plt>
  43ac44:	cbnz	w0, 43ac60 <_obstack_memory_used@@Base+0xdf8>
  43ac48:	mov	x0, #0x10                  	// #16
  43ac4c:	mov	w1, #0x6                   	// #6
  43ac50:	mov	w21, #0x1                   	// #1
  43ac54:	str	x20, [x19]
  43ac58:	str	w1, [x19, #8]
  43ac5c:	str	x0, [x19, #16]
  43ac60:	mov	w0, w21
  43ac64:	ldp	x19, x20, [sp, #16]
  43ac68:	ldr	x21, [sp, #32]
  43ac6c:	ldp	x29, x30, [sp], #48
  43ac70:	ret
  43ac74:	nop
  43ac78:	stp	x29, x30, [sp, #-48]!
  43ac7c:	mov	x29, sp
  43ac80:	stp	x19, x20, [sp, #16]
  43ac84:	mov	x20, x0
  43ac88:	mov	x19, x1
  43ac8c:	ldr	x0, [x0, #8]
  43ac90:	ldr	x1, [x1, #8]
  43ac94:	cmp	x0, x1
  43ac98:	b.eq	43ad00 <_obstack_memory_used@@Base+0xe98>  // b.none
  43ac9c:	stp	x21, x22, [sp, #32]
  43aca0:	mov	x22, x2
  43aca4:	mov	w21, w3
  43aca8:	ldrb	w2, [x0]
  43acac:	cmp	w2, #0x2a
  43acb0:	b.eq	43acd0 <_obstack_memory_used@@Base+0xe68>  // b.none
  43acb4:	bl	4026d0 <strcmp@plt>
  43acb8:	cbnz	w0, 43acd0 <_obstack_memory_used@@Base+0xe68>
  43acbc:	mov	w0, #0x1                   	// #1
  43acc0:	ldp	x19, x20, [sp, #16]
  43acc4:	ldp	x21, x22, [sp, #32]
  43acc8:	ldp	x29, x30, [sp], #48
  43accc:	ret
  43acd0:	cmp	w21, #0x3
  43acd4:	b.hi	43ad10 <_obstack_memory_used@@Base+0xea8>  // b.pmore
  43acd8:	ldr	x3, [x19]
  43acdc:	mov	x2, x22
  43ace0:	mov	x1, x20
  43ace4:	mov	x0, x19
  43ace8:	ldp	x19, x20, [sp, #16]
  43acec:	ldp	x21, x22, [sp, #32]
  43acf0:	ldp	x29, x30, [sp], #48
  43acf4:	ldr	x3, [x3, #40]
  43acf8:	mov	x16, x3
  43acfc:	br	x16
  43ad00:	mov	w0, #0x1                   	// #1
  43ad04:	ldp	x19, x20, [sp, #16]
  43ad08:	ldp	x29, x30, [sp], #48
  43ad0c:	ret
  43ad10:	mov	w0, #0x0                   	// #0
  43ad14:	ldp	x19, x20, [sp, #16]
  43ad18:	ldp	x21, x22, [sp, #32]
  43ad1c:	ldp	x29, x30, [sp], #48
  43ad20:	ret
  43ad24:	nop
  43ad28:	b	402730 <free@plt>
  43ad2c:	nop
  43ad30:	b	43ad28 <_obstack_memory_used@@Base+0xec0>
  43ad34:	nop
  43ad38:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43ad3c:	add	x0, x0, #0x550
  43ad40:	ret
  43ad44:	nop
  43ad48:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43ad4c:	add	x0, x0, #0x578
  43ad50:	ret
  43ad54:	nop
  43ad58:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43ad5c:	ldr	x1, [x1, #4000]
  43ad60:	add	x1, x1, #0x10
  43ad64:	str	x1, [x0]
  43ad68:	b	43b1d8 <_obstack_memory_used@@Base+0x1370>
  43ad6c:	nop
  43ad70:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43ad74:	ldr	x1, [x1, #3984]
  43ad78:	add	x1, x1, #0x10
  43ad7c:	str	x1, [x0]
  43ad80:	b	43b1d8 <_obstack_memory_used@@Base+0x1370>
  43ad84:	nop
  43ad88:	stp	x29, x30, [sp, #-32]!
  43ad8c:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43ad90:	mov	x29, sp
  43ad94:	ldr	x1, [x1, #4000]
  43ad98:	str	x19, [sp, #16]
  43ad9c:	mov	x19, x0
  43ada0:	add	x1, x1, #0x10
  43ada4:	str	x1, [x0]
  43ada8:	bl	43b1d8 <_obstack_memory_used@@Base+0x1370>
  43adac:	mov	x0, x19
  43adb0:	mov	x1, #0x8                   	// #8
  43adb4:	ldr	x19, [sp, #16]
  43adb8:	ldp	x29, x30, [sp], #32
  43adbc:	b	43a470 <_obstack_memory_used@@Base+0x608>
  43adc0:	stp	x29, x30, [sp, #-32]!
  43adc4:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43adc8:	mov	x29, sp
  43adcc:	ldr	x1, [x1, #3984]
  43add0:	str	x19, [sp, #16]
  43add4:	mov	x19, x0
  43add8:	add	x1, x1, #0x10
  43addc:	str	x1, [x0]
  43ade0:	bl	43b1d8 <_obstack_memory_used@@Base+0x1370>
  43ade4:	mov	x0, x19
  43ade8:	mov	x1, #0x8                   	// #8
  43adec:	ldr	x19, [sp, #16]
  43adf0:	ldp	x29, x30, [sp], #32
  43adf4:	b	43a470 <_obstack_memory_used@@Base+0x608>
  43adf8:	stp	x29, x30, [sp, #-48]!
  43adfc:	mov	x29, sp
  43ae00:	stp	x19, x20, [sp, #16]
  43ae04:	adrp	x20, 477000 <_obstack_memory_used@@Base+0x3d198>
  43ae08:	mov	x19, x0
  43ae0c:	ldr	x0, [x20, #3880]
  43ae10:	str	x21, [sp, #32]
  43ae14:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x3e198>
  43ae18:	cbz	x0, 43ae28 <_obstack_memory_used@@Base+0xfc0>
  43ae1c:	add	x0, x21, #0x8f0
  43ae20:	bl	402900 <pthread_mutex_lock@plt>
  43ae24:	cbnz	w0, 43af20 <_obstack_memory_used@@Base+0x10b8>
  43ae28:	add	x0, x21, #0x8f0
  43ae2c:	sub	x5, x19, #0x10
  43ae30:	ldr	x1, [x0, #48]
  43ae34:	cbz	x1, 43aeb0 <_obstack_memory_used@@Base+0x1048>
  43ae38:	ldur	x6, [x19, #-16]
  43ae3c:	add	x4, x5, x6
  43ae40:	cmp	x1, x4
  43ae44:	b.hi	43aeb0 <_obstack_memory_used@@Base+0x1048>  // b.pmore
  43ae48:	ldr	x2, [x1, #8]
  43ae4c:	b.eq	43af04 <_obstack_memory_used@@Base+0x109c>  // b.none
  43ae50:	add	x0, x0, #0x30
  43ae54:	cbnz	x2, 43ae70 <_obstack_memory_used@@Base+0x1008>
  43ae58:	b	43ae8c <_obstack_memory_used@@Base+0x1024>
  43ae5c:	ldr	x3, [x2, #8]
  43ae60:	add	x0, x1, #0x8
  43ae64:	cbz	x3, 43aeec <_obstack_memory_used@@Base+0x1084>
  43ae68:	mov	x1, x2
  43ae6c:	mov	x2, x3
  43ae70:	cmp	x4, x2
  43ae74:	b.cc	43ae5c <_obstack_memory_used@@Base+0xff4>  // b.lo, b.ul, b.last
  43ae78:	b.ne	43af18 <_obstack_memory_used@@Base+0x10b0>  // b.any
  43ae7c:	ldp	x2, x3, [x4]
  43ae80:	str	x3, [x1, #8]
  43ae84:	ldr	x1, [x0]
  43ae88:	add	x6, x6, x2
  43ae8c:	ldr	x2, [x1]
  43ae90:	add	x3, x1, x2
  43ae94:	cmp	x5, x3
  43ae98:	b.eq	43aee0 <_obstack_memory_used@@Base+0x1078>  // b.none
  43ae9c:	ldr	x1, [x1, #8]
  43aea0:	stp	x6, x1, [x19, #-16]
  43aea4:	ldr	x0, [x0]
  43aea8:	str	x5, [x0, #8]
  43aeac:	b	43aebc <_obstack_memory_used@@Base+0x1054>
  43aeb0:	add	x0, x21, #0x8f0
  43aeb4:	stur	x1, [x19, #-8]
  43aeb8:	str	x5, [x0, #48]
  43aebc:	ldr	x20, [x20, #3880]
  43aec0:	cbz	x20, 43aed0 <_obstack_memory_used@@Base+0x1068>
  43aec4:	add	x0, x21, #0x8f0
  43aec8:	bl	402920 <pthread_mutex_unlock@plt>
  43aecc:	cbnz	w0, 43af24 <_obstack_memory_used@@Base+0x10bc>
  43aed0:	ldp	x19, x20, [sp, #16]
  43aed4:	ldr	x21, [sp, #32]
  43aed8:	ldp	x29, x30, [sp], #48
  43aedc:	ret
  43aee0:	add	x6, x2, x6
  43aee4:	str	x6, [x1]
  43aee8:	b	43aebc <_obstack_memory_used@@Base+0x1054>
  43aeec:	ldr	x1, [x1, #8]
  43aef0:	ldr	x2, [x1]
  43aef4:	add	x3, x1, x2
  43aef8:	cmp	x5, x3
  43aefc:	b.ne	43ae9c <_obstack_memory_used@@Base+0x1034>  // b.any
  43af00:	b	43aee0 <_obstack_memory_used@@Base+0x1078>
  43af04:	ldr	x1, [x1]
  43af08:	add	x6, x1, x6
  43af0c:	stp	x6, x2, [x19, #-16]
  43af10:	str	x5, [x0, #48]
  43af14:	b	43aebc <_obstack_memory_used@@Base+0x1054>
  43af18:	ldr	x1, [x0]
  43af1c:	b	43ae8c <_obstack_memory_used@@Base+0x1024>
  43af20:	bl	4029ac <ferror@plt+0x3c>
  43af24:	mov	x0, #0x8                   	// #8
  43af28:	bl	43b0a0 <_obstack_memory_used@@Base+0x1238>
  43af2c:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x3d198>
  43af30:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x3d198>
  43af34:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43af38:	ldr	x3, [x3, #3984]
  43af3c:	ldr	x2, [x2, #4064]
  43af40:	add	x3, x3, #0x10
  43af44:	ldr	x1, [x1, #4040]
  43af48:	str	x3, [x0]
  43af4c:	bl	43beb8 <_obstack_memory_used@@Base+0x2050>
  43af50:	cmn	x1, #0x1
  43af54:	b.ne	43af5c <_obstack_memory_used@@Base+0x10f4>  // b.any
  43af58:	bl	43bc58 <_obstack_memory_used@@Base+0x1df0>
  43af5c:	bl	4489b8 <_obstack_memory_used@@Base+0xeb50>
  43af60:	stp	x29, x30, [sp, #-48]!
  43af64:	mov	x29, sp
  43af68:	stp	x19, x20, [sp, #16]
  43af6c:	adrp	x20, 477000 <_obstack_memory_used@@Base+0x3d198>
  43af70:	mov	x19, x0
  43af74:	ldr	x0, [x20, #3880]
  43af78:	str	x21, [sp, #32]
  43af7c:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x3e198>
  43af80:	cbz	x0, 43af90 <_obstack_memory_used@@Base+0x1128>
  43af84:	add	x0, x21, #0x8f0
  43af88:	bl	402900 <pthread_mutex_lock@plt>
  43af8c:	cbnz	w0, 43b02c <_obstack_memory_used@@Base+0x11c4>
  43af90:	add	x3, x21, #0x8f0
  43af94:	adds	x0, x19, #0x10
  43af98:	mov	x19, #0x10                  	// #16
  43af9c:	csel	x0, x0, x19, cc  // cc = lo, ul, last
  43afa0:	add	x0, x0, #0xf
  43afa4:	ldr	x19, [x3, #48]
  43afa8:	and	x0, x0, #0xfffffffffffffff0
  43afac:	cbz	x19, 43aff8 <_obstack_memory_used@@Base+0x1190>
  43afb0:	add	x3, x3, #0x30
  43afb4:	b	43afc0 <_obstack_memory_used@@Base+0x1158>
  43afb8:	add	x3, x2, #0x8
  43afbc:	cbz	x19, 43aff8 <_obstack_memory_used@@Base+0x1190>
  43afc0:	mov	x2, x19
  43afc4:	ldp	x1, x19, [x19]
  43afc8:	cmp	x0, x1
  43afcc:	b.hi	43afb8 <_obstack_memory_used@@Base+0x1150>  // b.pmore
  43afd0:	sub	x1, x1, x0
  43afd4:	cmp	x1, #0xf
  43afd8:	b.ls	43b020 <_obstack_memory_used@@Base+0x11b8>  // b.plast
  43afdc:	add	x4, x2, x0
  43afe0:	str	x19, [x4, #8]
  43afe4:	str	x1, [x2, x0]
  43afe8:	ldr	x2, [x3]
  43afec:	add	x19, x2, #0x10
  43aff0:	str	x0, [x2]
  43aff4:	str	x4, [x3]
  43aff8:	ldr	x20, [x20, #3880]
  43affc:	cbz	x20, 43b00c <_obstack_memory_used@@Base+0x11a4>
  43b000:	add	x0, x21, #0x8f0
  43b004:	bl	402920 <pthread_mutex_unlock@plt>
  43b008:	cbnz	w0, 43b030 <_obstack_memory_used@@Base+0x11c8>
  43b00c:	mov	x0, x19
  43b010:	ldp	x19, x20, [sp, #16]
  43b014:	ldr	x21, [sp, #32]
  43b018:	ldp	x29, x30, [sp], #48
  43b01c:	ret
  43b020:	str	x19, [x3]
  43b024:	add	x19, x2, #0x10
  43b028:	b	43aff8 <_obstack_memory_used@@Base+0x1190>
  43b02c:	bl	4029ac <ferror@plt+0x3c>
  43b030:	mov	x0, #0x8                   	// #8
  43b034:	bl	43b0a0 <_obstack_memory_used@@Base+0x1238>
  43b038:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x3d198>
  43b03c:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x3d198>
  43b040:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43b044:	ldr	x3, [x3, #3984]
  43b048:	ldr	x2, [x2, #4064]
  43b04c:	add	x3, x3, #0x10
  43b050:	ldr	x1, [x1, #4040]
  43b054:	str	x3, [x0]
  43b058:	bl	43beb8 <_obstack_memory_used@@Base+0x2050>
  43b05c:	cmn	x1, #0x1
  43b060:	b.ne	43b068 <_obstack_memory_used@@Base+0x1200>  // b.any
  43b064:	bl	43bc58 <_obstack_memory_used@@Base+0x1df0>
  43b068:	bl	4489b8 <_obstack_memory_used@@Base+0xeb50>
  43b06c:	nop
  43b070:	stp	x29, x30, [sp, #-32]!
  43b074:	mov	x29, sp
  43b078:	str	x19, [sp, #16]
  43b07c:	adrp	x19, 478000 <_obstack_memory_used@@Base+0x3e198>
  43b080:	add	x19, x19, #0x8f0
  43b084:	ldr	x0, [x19, #56]
  43b088:	cbz	x0, 43b094 <_obstack_memory_used@@Base+0x122c>
  43b08c:	bl	402730 <free@plt>
  43b090:	str	xzr, [x19, #56]
  43b094:	ldr	x19, [sp, #16]
  43b098:	ldp	x29, x30, [sp], #32
  43b09c:	ret
  43b0a0:	stp	x29, x30, [sp, #-32]!
  43b0a4:	mov	x29, sp
  43b0a8:	str	x19, [sp, #16]
  43b0ac:	add	x19, x0, #0x80
  43b0b0:	mov	x0, x19
  43b0b4:	bl	4024b0 <malloc@plt>
  43b0b8:	mov	x1, x0
  43b0bc:	cbz	x0, 43b0f0 <_obstack_memory_used@@Base+0x1288>
  43b0c0:	stp	xzr, xzr, [x1]
  43b0c4:	add	x0, x1, #0x80
  43b0c8:	stp	xzr, xzr, [x1, #16]
  43b0cc:	stp	xzr, xzr, [x1, #32]
  43b0d0:	stp	xzr, xzr, [x1, #48]
  43b0d4:	stp	xzr, xzr, [x1, #64]
  43b0d8:	stp	xzr, xzr, [x1, #80]
  43b0dc:	stp	xzr, xzr, [x1, #96]
  43b0e0:	stp	xzr, xzr, [x1, #112]
  43b0e4:	ldr	x19, [sp, #16]
  43b0e8:	ldp	x29, x30, [sp], #32
  43b0ec:	ret
  43b0f0:	mov	x0, x19
  43b0f4:	bl	43af60 <_obstack_memory_used@@Base+0x10f8>
  43b0f8:	mov	x1, x0
  43b0fc:	cbnz	x0, 43b0c0 <_obstack_memory_used@@Base+0x1258>
  43b100:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43b104:	nop
  43b108:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  43b10c:	add	x1, x1, #0x8f0
  43b110:	sub	x0, x0, #0x80
  43b114:	ldr	x2, [x1, #56]
  43b118:	cmp	x0, x2
  43b11c:	b.ls	43b144 <_obstack_memory_used@@Base+0x12dc>  // b.plast
  43b120:	ldr	x1, [x1, #64]
  43b124:	add	x2, x2, x1
  43b128:	cmp	x0, x2
  43b12c:	b.cs	43b144 <_obstack_memory_used@@Base+0x12dc>  // b.hs, b.nlast
  43b130:	stp	x29, x30, [sp, #-16]!
  43b134:	mov	x29, sp
  43b138:	bl	43adf8 <_obstack_memory_used@@Base+0xf90>
  43b13c:	ldp	x29, x30, [sp], #16
  43b140:	ret
  43b144:	b	402730 <free@plt>
  43b148:	stp	x29, x30, [sp, #-16]!
  43b14c:	mov	x0, #0x70                  	// #112
  43b150:	mov	x29, sp
  43b154:	bl	4024b0 <malloc@plt>
  43b158:	cbz	x0, 43b180 <_obstack_memory_used@@Base+0x1318>
  43b15c:	stp	xzr, xzr, [x0]
  43b160:	stp	xzr, xzr, [x0, #16]
  43b164:	stp	xzr, xzr, [x0, #32]
  43b168:	stp	xzr, xzr, [x0, #48]
  43b16c:	stp	xzr, xzr, [x0, #64]
  43b170:	stp	xzr, xzr, [x0, #80]
  43b174:	stp	xzr, xzr, [x0, #96]
  43b178:	ldp	x29, x30, [sp], #16
  43b17c:	ret
  43b180:	mov	x0, #0x70                  	// #112
  43b184:	bl	43af60 <_obstack_memory_used@@Base+0x10f8>
  43b188:	cbnz	x0, 43b15c <_obstack_memory_used@@Base+0x12f4>
  43b18c:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43b190:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x3e198>
  43b194:	add	x2, x2, #0x8f0
  43b198:	mov	x1, x0
  43b19c:	ldr	x3, [x2, #56]
  43b1a0:	cmp	x0, x3
  43b1a4:	b.ls	43b1cc <_obstack_memory_used@@Base+0x1364>  // b.plast
  43b1a8:	ldr	x2, [x2, #64]
  43b1ac:	add	x3, x3, x2
  43b1b0:	cmp	x0, x3
  43b1b4:	b.cs	43b1cc <_obstack_memory_used@@Base+0x1364>  // b.hs, b.nlast
  43b1b8:	stp	x29, x30, [sp, #-16]!
  43b1bc:	mov	x29, sp
  43b1c0:	bl	43adf8 <_obstack_memory_used@@Base+0xf90>
  43b1c4:	ldp	x29, x30, [sp], #16
  43b1c8:	ret
  43b1cc:	mov	x0, x1
  43b1d0:	b	402730 <free@plt>
  43b1d4:	nop
  43b1d8:	ret
  43b1dc:	nop
  43b1e0:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43b1e4:	ldr	x1, [x1, #3944]
  43b1e8:	add	x1, x1, #0x10
  43b1ec:	str	x1, [x0]
  43b1f0:	b	43b1d8 <_obstack_memory_used@@Base+0x1370>
  43b1f4:	nop
  43b1f8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43b1fc:	add	x0, x0, #0x5f8
  43b200:	ret
  43b204:	nop
  43b208:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43b20c:	add	x0, x0, #0x608
  43b210:	ret
  43b214:	nop
  43b218:	stp	x29, x30, [sp, #-32]!
  43b21c:	mov	x29, sp
  43b220:	str	x19, [sp, #16]
  43b224:	mov	x19, x0
  43b228:	bl	43b1d8 <_obstack_memory_used@@Base+0x1370>
  43b22c:	mov	x0, x19
  43b230:	mov	x1, #0x8                   	// #8
  43b234:	ldr	x19, [sp, #16]
  43b238:	ldp	x29, x30, [sp], #32
  43b23c:	b	43a470 <_obstack_memory_used@@Base+0x608>
  43b240:	stp	x29, x30, [sp, #-32]!
  43b244:	mov	x29, sp
  43b248:	str	x19, [sp, #16]
  43b24c:	mov	x19, x0
  43b250:	bl	43b1e0 <_obstack_memory_used@@Base+0x1378>
  43b254:	mov	x0, x19
  43b258:	mov	x1, #0x8                   	// #8
  43b25c:	ldr	x19, [sp, #16]
  43b260:	ldp	x29, x30, [sp], #32
  43b264:	b	43a470 <_obstack_memory_used@@Base+0x608>
  43b268:	ret
  43b26c:	nop
  43b270:	stp	x29, x30, [sp, #-32]!
  43b274:	mov	x29, sp
  43b278:	str	x19, [sp, #16]
  43b27c:	mov	x19, x0
  43b280:	bl	43b268 <_obstack_memory_used@@Base+0x1400>
  43b284:	mov	x0, x19
  43b288:	mov	x1, #0x8                   	// #8
  43b28c:	ldr	x19, [sp, #16]
  43b290:	ldp	x29, x30, [sp], #32
  43b294:	b	43a470 <_obstack_memory_used@@Base+0x608>
  43b298:	ret
  43b29c:	nop
  43b2a0:	stp	x29, x30, [sp, #-32]!
  43b2a4:	mov	x29, sp
  43b2a8:	str	x19, [sp, #16]
  43b2ac:	mov	x19, x0
  43b2b0:	bl	43b298 <_obstack_memory_used@@Base+0x1430>
  43b2b4:	mov	x0, x19
  43b2b8:	mov	x1, #0x8                   	// #8
  43b2bc:	ldr	x19, [sp, #16]
  43b2c0:	ldp	x29, x30, [sp], #32
  43b2c4:	b	43a470 <_obstack_memory_used@@Base+0x608>
  43b2c8:	ret
  43b2cc:	nop
  43b2d0:	b	43b1f8 <_obstack_memory_used@@Base+0x1390>
  43b2d4:	nop
  43b2d8:	ret
  43b2dc:	nop
  43b2e0:	b	43b208 <_obstack_memory_used@@Base+0x13a0>
  43b2e4:	nop
  43b2e8:	stp	x29, x30, [sp, #-64]!
  43b2ec:	mov	x29, sp
  43b2f0:	stp	x19, x20, [sp, #16]
  43b2f4:	mov	x19, x1
  43b2f8:	mov	x20, x0
  43b2fc:	mov	x0, x1
  43b300:	ldr	x1, [x1]
  43b304:	ldr	x1, [x1, #16]
  43b308:	str	x21, [sp, #32]
  43b30c:	mov	x21, x2
  43b310:	ldr	x2, [x2]
  43b314:	str	x2, [sp, #56]
  43b318:	blr	x1
  43b31c:	tst	w0, #0xff
  43b320:	b.eq	43b330 <_obstack_memory_used@@Base+0x14c8>  // b.none
  43b324:	ldr	x0, [sp, #56]
  43b328:	ldr	x0, [x0]
  43b32c:	str	x0, [sp, #56]
  43b330:	ldr	x4, [x20]
  43b334:	mov	x1, x19
  43b338:	mov	x0, x20
  43b33c:	add	x2, sp, #0x38
  43b340:	mov	w3, #0x1                   	// #1
  43b344:	ldr	x4, [x4, #32]
  43b348:	blr	x4
  43b34c:	tst	w0, #0xff
  43b350:	b.eq	43b35c <_obstack_memory_used@@Base+0x14f4>  // b.none
  43b354:	ldr	x1, [sp, #56]
  43b358:	str	x1, [x21]
  43b35c:	ldp	x19, x20, [sp, #16]
  43b360:	ldr	x21, [sp, #32]
  43b364:	ldp	x29, x30, [sp], #64
  43b368:	ret
  43b36c:	nop
  43b370:	and	w5, w0, #0xff
  43b374:	cmp	w5, #0x50
  43b378:	b.eq	43b490 <_obstack_memory_used@@Base+0x1628>  // b.none
  43b37c:	and	w4, w5, #0xf
  43b380:	cmp	w4, #0x4
  43b384:	b.eq	43b3a0 <_obstack_memory_used@@Base+0x1538>  // b.none
  43b388:	b.ls	43b3b4 <_obstack_memory_used@@Base+0x154c>  // b.plast
  43b38c:	cmp	w4, #0xb
  43b390:	b.eq	43b4b4 <_obstack_memory_used@@Base+0x164c>  // b.none
  43b394:	b.ls	43b410 <_obstack_memory_used@@Base+0x15a8>  // b.plast
  43b398:	cmp	w4, #0xc
  43b39c:	b.ne	43b4c4 <_obstack_memory_used@@Base+0x165c>  // b.any
  43b3a0:	mov	x0, x2
  43b3a4:	ldr	x4, [x0], #8
  43b3a8:	cbnz	x4, 43b470 <_obstack_memory_used@@Base+0x1608>
  43b3ac:	str	x4, [x3]
  43b3b0:	ret
  43b3b4:	cmp	w4, #0x2
  43b3b8:	b.eq	43b4a4 <_obstack_memory_used@@Base+0x163c>  // b.none
  43b3bc:	b.ls	43b3d8 <_obstack_memory_used@@Base+0x1570>  // b.plast
  43b3c0:	cmp	w4, #0x3
  43b3c4:	b.ne	43b4c4 <_obstack_memory_used@@Base+0x165c>  // b.any
  43b3c8:	mov	x0, x2
  43b3cc:	ldr	w4, [x0], #4
  43b3d0:	cbz	x4, 43b3ac <_obstack_memory_used@@Base+0x1544>
  43b3d4:	b	43b470 <_obstack_memory_used@@Base+0x1608>
  43b3d8:	cbz	w4, 43b3a0 <_obstack_memory_used@@Base+0x1538>
  43b3dc:	cmp	w4, #0x1
  43b3e0:	b.ne	43b4c4 <_obstack_memory_used@@Base+0x165c>  // b.any
  43b3e4:	mov	x0, x2
  43b3e8:	mov	x4, #0x0                   	// #0
  43b3ec:	mov	w7, #0x0                   	// #0
  43b3f0:	ldrb	w8, [x0], #1
  43b3f4:	and	x6, x8, #0x7f
  43b3f8:	lsl	x6, x6, x7
  43b3fc:	add	w7, w7, #0x7
  43b400:	orr	x4, x4, x6
  43b404:	tbnz	w8, #7, 43b3f0 <_obstack_memory_used@@Base+0x1588>
  43b408:	cbz	x4, 43b3ac <_obstack_memory_used@@Base+0x1544>
  43b40c:	b	43b470 <_obstack_memory_used@@Base+0x1608>
  43b410:	cmp	w4, #0x9
  43b414:	b.eq	43b430 <_obstack_memory_used@@Base+0x15c8>  // b.none
  43b418:	cmp	w4, #0xa
  43b41c:	b.ne	43b4c4 <_obstack_memory_used@@Base+0x165c>  // b.any
  43b420:	mov	x0, x2
  43b424:	ldrsh	x4, [x0], #2
  43b428:	cbz	x4, 43b3ac <_obstack_memory_used@@Base+0x1544>
  43b42c:	b	43b470 <_obstack_memory_used@@Base+0x1608>
  43b430:	mov	x0, x2
  43b434:	mov	x4, #0x0                   	// #0
  43b438:	mov	w7, #0x0                   	// #0
  43b43c:	ldrb	w8, [x0], #1
  43b440:	and	x6, x8, #0x7f
  43b444:	lsl	x6, x6, x7
  43b448:	add	w7, w7, #0x7
  43b44c:	orr	x4, x4, x6
  43b450:	tbnz	w8, #7, 43b43c <_obstack_memory_used@@Base+0x15d4>
  43b454:	cmp	w7, #0x3f
  43b458:	b.hi	43b3a8 <_obstack_memory_used@@Base+0x1540>  // b.pmore
  43b45c:	tbz	w8, #6, 43b3a8 <_obstack_memory_used@@Base+0x1540>
  43b460:	mov	x6, #0xffffffffffffffff    	// #-1
  43b464:	lsl	x7, x6, x7
  43b468:	orr	x4, x4, x7
  43b46c:	nop
  43b470:	and	w6, w5, #0x70
  43b474:	cmp	w6, #0x10
  43b478:	csel	x1, x2, x1, eq  // eq = none
  43b47c:	add	x4, x4, x1
  43b480:	tbz	w5, #7, 43b3ac <_obstack_memory_used@@Base+0x1544>
  43b484:	ldr	x4, [x4]
  43b488:	str	x4, [x3]
  43b48c:	ret
  43b490:	add	x0, x2, #0x7
  43b494:	and	x0, x0, #0xfffffffffffffff8
  43b498:	ldr	x4, [x0], #8
  43b49c:	str	x4, [x3]
  43b4a0:	ret
  43b4a4:	mov	x0, x2
  43b4a8:	ldrh	w4, [x0], #2
  43b4ac:	cbz	x4, 43b3ac <_obstack_memory_used@@Base+0x1544>
  43b4b0:	b	43b470 <_obstack_memory_used@@Base+0x1608>
  43b4b4:	mov	x0, x2
  43b4b8:	ldrsw	x4, [x0], #4
  43b4bc:	cbz	x4, 43b3ac <_obstack_memory_used@@Base+0x1544>
  43b4c0:	b	43b470 <_obstack_memory_used@@Base+0x1608>
  43b4c4:	stp	x29, x30, [sp, #-16]!
  43b4c8:	mov	x29, sp
  43b4cc:	bl	402650 <abort@plt>
  43b4d0:	stp	x29, x30, [sp, #-32]!
  43b4d4:	mov	x3, x0
  43b4d8:	mov	x29, sp
  43b4dc:	ldrb	w0, [x0, #40]
  43b4e0:	cmp	w0, #0xff
  43b4e4:	b.eq	43b570 <_obstack_memory_used@@Base+0x1708>  // b.none
  43b4e8:	and	w4, w0, #0x7
  43b4ec:	cmp	w4, #0x2
  43b4f0:	b.eq	43b550 <_obstack_memory_used@@Base+0x16e8>  // b.none
  43b4f4:	b.ls	43b520 <_obstack_memory_used@@Base+0x16b8>  // b.plast
  43b4f8:	cmp	w4, #0x3
  43b4fc:	neg	x2, x1, lsl #2
  43b500:	b.ne	43b544 <_obstack_memory_used@@Base+0x16dc>  // b.any
  43b504:	ldp	x1, x4, [x3, #16]
  43b508:	add	x3, sp, #0x18
  43b50c:	add	x2, x4, x2
  43b510:	bl	43b370 <_obstack_memory_used@@Base+0x1508>
  43b514:	ldr	x0, [sp, #24]
  43b518:	ldp	x29, x30, [sp], #32
  43b51c:	ret
  43b520:	cbnz	w4, 43b54c <_obstack_memory_used@@Base+0x16e4>
  43b524:	neg	x2, x1, lsl #3
  43b528:	ldp	x1, x4, [x3, #16]
  43b52c:	add	x3, sp, #0x18
  43b530:	add	x2, x4, x2
  43b534:	bl	43b370 <_obstack_memory_used@@Base+0x1508>
  43b538:	ldr	x0, [sp, #24]
  43b53c:	ldp	x29, x30, [sp], #32
  43b540:	ret
  43b544:	cmp	w4, #0x4
  43b548:	b.eq	43b524 <_obstack_memory_used@@Base+0x16bc>  // b.none
  43b54c:	bl	402650 <abort@plt>
  43b550:	neg	x2, x1, lsl #1
  43b554:	ldp	x1, x4, [x3, #16]
  43b558:	add	x3, sp, #0x18
  43b55c:	add	x2, x4, x2
  43b560:	bl	43b370 <_obstack_memory_used@@Base+0x1508>
  43b564:	ldr	x0, [sp, #24]
  43b568:	ldp	x29, x30, [sp], #32
  43b56c:	ret
  43b570:	ldp	x1, x4, [x3, #16]
  43b574:	mov	x2, #0x0                   	// #0
  43b578:	add	x3, sp, #0x18
  43b57c:	add	x2, x4, x2
  43b580:	bl	43b370 <_obstack_memory_used@@Base+0x1508>
  43b584:	ldr	x0, [sp, #24]
  43b588:	ldp	x29, x30, [sp], #32
  43b58c:	ret
  43b590:	stp	x29, x30, [sp, #-64]!
  43b594:	mov	x29, sp
  43b598:	stp	x21, x22, [sp, #32]
  43b59c:	mov	x22, x0
  43b5a0:	mvn	x0, x3
  43b5a4:	stp	x19, x20, [sp, #16]
  43b5a8:	add	x21, sp, #0x38
  43b5ac:	mov	x20, x1
  43b5b0:	ldr	x19, [x22, #24]
  43b5b4:	str	x2, [sp, #56]
  43b5b8:	add	x19, x19, x0
  43b5bc:	nop
  43b5c0:	mov	x1, #0x0                   	// #0
  43b5c4:	mov	w3, #0x0                   	// #0
  43b5c8:	ldrb	w4, [x19], #1
  43b5cc:	and	x2, x4, #0x7f
  43b5d0:	lsl	x2, x2, x3
  43b5d4:	add	w3, w3, #0x7
  43b5d8:	orr	x1, x1, x2
  43b5dc:	tbnz	w4, #7, 43b5c8 <_obstack_memory_used@@Base+0x1760>
  43b5e0:	cbz	x1, 43b610 <_obstack_memory_used@@Base+0x17a8>
  43b5e4:	mov	x0, x22
  43b5e8:	bl	43b4d0 <_obstack_memory_used@@Base+0x1668>
  43b5ec:	mov	x2, x21
  43b5f0:	mov	x1, x20
  43b5f4:	bl	43b2e8 <_obstack_memory_used@@Base+0x1480>
  43b5f8:	ands	w0, w0, #0xff
  43b5fc:	b.eq	43b5c0 <_obstack_memory_used@@Base+0x1758>  // b.none
  43b600:	ldp	x19, x20, [sp, #16]
  43b604:	ldp	x21, x22, [sp, #32]
  43b608:	ldp	x29, x30, [sp], #64
  43b60c:	ret
  43b610:	mov	w0, #0x0                   	// #0
  43b614:	ldp	x19, x20, [sp, #16]
  43b618:	ldp	x21, x22, [sp, #32]
  43b61c:	ldp	x29, x30, [sp], #64
  43b620:	ret
  43b624:	nop
  43b628:	and	w3, w0, #0xff
  43b62c:	cmp	w3, #0xff
  43b630:	b.eq	43b680 <_obstack_memory_used@@Base+0x1818>  // b.none
  43b634:	and	w2, w3, #0x70
  43b638:	mov	x0, x1
  43b63c:	cmp	w2, #0x30
  43b640:	b.eq	43b688 <_obstack_memory_used@@Base+0x1820>  // b.none
  43b644:	b.hi	43b654 <_obstack_memory_used@@Base+0x17ec>  // b.pmore
  43b648:	cmp	w2, #0x20
  43b64c:	b.ne	43b660 <_obstack_memory_used@@Base+0x17f8>  // b.any
  43b650:	b	448608 <_obstack_memory_used@@Base+0xe7a0>
  43b654:	cmp	w2, #0x40
  43b658:	b.ne	43b678 <_obstack_memory_used@@Base+0x1810>  // b.any
  43b65c:	b	4485d0 <_obstack_memory_used@@Base+0xe768>
  43b660:	b.hi	43b66c <_obstack_memory_used@@Base+0x1804>  // b.pmore
  43b664:	tst	w3, #0x60
  43b668:	b.eq	43b680 <_obstack_memory_used@@Base+0x1818>  // b.none
  43b66c:	stp	x29, x30, [sp, #-16]!
  43b670:	mov	x29, sp
  43b674:	bl	402650 <abort@plt>
  43b678:	cmp	w2, #0x50
  43b67c:	b.ne	43b66c <_obstack_memory_used@@Base+0x1804>  // b.any
  43b680:	mov	x0, #0x0                   	// #0
  43b684:	ret
  43b688:	b	448600 <_obstack_memory_used@@Base+0xe798>
  43b68c:	nop
  43b690:	stp	x29, x30, [sp, #-48]!
  43b694:	mov	x29, sp
  43b698:	stp	x19, x20, [sp, #16]
  43b69c:	mov	x19, x1
  43b6a0:	mov	x20, x2
  43b6a4:	stp	x21, x22, [sp, #32]
  43b6a8:	mov	x1, #0x0                   	// #0
  43b6ac:	mov	x21, x0
  43b6b0:	cbz	x0, 43b6bc <_obstack_memory_used@@Base+0x1854>
  43b6b4:	bl	4485d0 <_obstack_memory_used@@Base+0xe768>
  43b6b8:	mov	x1, x0
  43b6bc:	str	x1, [x20]
  43b6c0:	ldrb	w22, [x19], #1
  43b6c4:	cmp	w22, #0xff
  43b6c8:	b.ne	43b750 <_obstack_memory_used@@Base+0x18e8>  // b.any
  43b6cc:	mov	x0, x19
  43b6d0:	str	x1, [x20, #8]
  43b6d4:	ldrb	w1, [x0], #1
  43b6d8:	strb	w1, [x20, #40]
  43b6dc:	cmp	w1, #0xff
  43b6e0:	b.eq	43b788 <_obstack_memory_used@@Base+0x1920>  // b.none
  43b6e4:	mov	x5, #0x0                   	// #0
  43b6e8:	mov	w3, #0x0                   	// #0
  43b6ec:	nop
  43b6f0:	ldrb	w4, [x0], #1
  43b6f4:	and	x1, x4, #0x7f
  43b6f8:	lsl	x1, x1, x3
  43b6fc:	add	w3, w3, #0x7
  43b700:	orr	x5, x5, x1
  43b704:	tbnz	w4, #7, 43b6f0 <_obstack_memory_used@@Base+0x1888>
  43b708:	add	x5, x0, x5
  43b70c:	str	x5, [x20, #24]
  43b710:	ldrb	w1, [x0], #1
  43b714:	mov	x5, #0x0                   	// #0
  43b718:	mov	w3, #0x0                   	// #0
  43b71c:	strb	w1, [x20, #41]
  43b720:	ldrb	w4, [x0], #1
  43b724:	and	x1, x4, #0x7f
  43b728:	lsl	x1, x1, x3
  43b72c:	add	w3, w3, #0x7
  43b730:	orr	x5, x5, x1
  43b734:	tbnz	w4, #7, 43b720 <_obstack_memory_used@@Base+0x18b8>
  43b738:	add	x5, x0, x5
  43b73c:	ldp	x21, x22, [sp, #32]
  43b740:	str	x5, [x20, #32]
  43b744:	ldp	x19, x20, [sp, #16]
  43b748:	ldp	x29, x30, [sp], #48
  43b74c:	ret
  43b750:	mov	x1, x21
  43b754:	mov	w0, w22
  43b758:	bl	43b628 <_obstack_memory_used@@Base+0x17c0>
  43b75c:	mov	x1, x0
  43b760:	mov	x2, x19
  43b764:	mov	w0, w22
  43b768:	add	x3, x20, #0x8
  43b76c:	bl	43b370 <_obstack_memory_used@@Base+0x1508>
  43b770:	mov	x19, x0
  43b774:	mov	x0, x19
  43b778:	ldrb	w1, [x0], #1
  43b77c:	strb	w1, [x20, #40]
  43b780:	cmp	w1, #0xff
  43b784:	b.ne	43b6e4 <_obstack_memory_used@@Base+0x187c>  // b.any
  43b788:	str	xzr, [x20, #24]
  43b78c:	b	43b710 <_obstack_memory_used@@Base+0x18a8>
  43b790:	stp	x29, x30, [sp, #-240]!
  43b794:	cmp	w0, #0x1
  43b798:	mov	x29, sp
  43b79c:	str	wzr, [sp, #156]
  43b7a0:	str	xzr, [sp, #160]
  43b7a4:	b.ne	43b808 <_obstack_memory_used@@Base+0x19a0>  // b.any
  43b7a8:	stp	x19, x20, [sp, #16]
  43b7ac:	mov	x20, #0xd500                	// #54528
  43b7b0:	movk	x20, #0xbcd4, lsl #16
  43b7b4:	movk	x20, #0xaabc, lsl #32
  43b7b8:	stp	x21, x22, [sp, #32]
  43b7bc:	movk	x20, #0xb8b1, lsl #48
  43b7c0:	add	x0, x2, x20
  43b7c4:	stp	x23, x24, [sp, #48]
  43b7c8:	cmp	x0, #0x1
  43b7cc:	stp	x25, x26, [sp, #64]
  43b7d0:	mov	w22, w1
  43b7d4:	mov	x21, x3
  43b7d8:	stp	x27, x28, [sp, #80]
  43b7dc:	mov	x19, x4
  43b7e0:	str	x0, [sp, #104]
  43b7e4:	cset	w0, ls  // ls = plast
  43b7e8:	str	w0, [sp, #128]
  43b7ec:	cmp	w1, #0x6
  43b7f0:	csel	w27, w0, wzr, eq  // eq = none
  43b7f4:	cbz	w27, 43b814 <_obstack_memory_used@@Base+0x19ac>
  43b7f8:	ldur	x26, [x3, #-16]
  43b7fc:	cbnz	x26, 43b988 <_obstack_memory_used@@Base+0x1b20>
  43b800:	mov	x0, x21
  43b804:	bl	43bff8 <_obstack_memory_used@@Base+0x2190>
  43b808:	mov	w0, #0x3                   	// #3
  43b80c:	ldp	x29, x30, [sp], #240
  43b810:	ret
  43b814:	mov	x0, x4
  43b818:	bl	4485c8 <_obstack_memory_used@@Base+0xe760>
  43b81c:	str	x0, [sp, #112]
  43b820:	cbz	x0, 43b9ec <_obstack_memory_used@@Base+0x1b84>
  43b824:	ldr	x1, [sp, #112]
  43b828:	add	x0, sp, #0xc0
  43b82c:	mov	x2, x0
  43b830:	str	x0, [sp, #120]
  43b834:	mov	x0, x19
  43b838:	bl	43b690 <_obstack_memory_used@@Base+0x1828>
  43b83c:	mov	x20, x0
  43b840:	ldrb	w0, [sp, #232]
  43b844:	mov	x1, x19
  43b848:	bl	43b628 <_obstack_memory_used@@Base+0x17c0>
  43b84c:	mov	x3, x0
  43b850:	add	x1, sp, #0x9c
  43b854:	mov	x0, x19
  43b858:	str	x3, [sp, #208]
  43b85c:	bl	4485a8 <_obstack_memory_used@@Base+0xe740>
  43b860:	ldr	w3, [sp, #156]
  43b864:	ldr	x1, [sp, #224]
  43b868:	cmp	w3, #0x0
  43b86c:	cset	x3, eq  // eq = none
  43b870:	sub	x23, x0, x3
  43b874:	cmp	x20, x1
  43b878:	b.cs	43b950 <_obstack_memory_used@@Base+0x1ae8>  // b.hs, b.nlast
  43b87c:	add	x26, sp, #0xa8
  43b880:	add	x25, sp, #0xb0
  43b884:	add	x24, sp, #0xb8
  43b888:	ldrb	w28, [sp, #233]
  43b88c:	mov	x1, #0x0                   	// #0
  43b890:	mov	w0, w28
  43b894:	bl	43b628 <_obstack_memory_used@@Base+0x17c0>
  43b898:	mov	x2, x20
  43b89c:	mov	x3, x26
  43b8a0:	mov	x1, x0
  43b8a4:	mov	w0, w28
  43b8a8:	bl	43b370 <_obstack_memory_used@@Base+0x1508>
  43b8ac:	ldrb	w20, [sp, #233]
  43b8b0:	mov	x28, x0
  43b8b4:	mov	x1, #0x0                   	// #0
  43b8b8:	mov	w0, w20
  43b8bc:	bl	43b628 <_obstack_memory_used@@Base+0x17c0>
  43b8c0:	mov	x2, x28
  43b8c4:	mov	x3, x25
  43b8c8:	mov	x1, x0
  43b8cc:	mov	w0, w20
  43b8d0:	bl	43b370 <_obstack_memory_used@@Base+0x1508>
  43b8d4:	ldrb	w20, [sp, #233]
  43b8d8:	mov	x28, x0
  43b8dc:	mov	x1, #0x0                   	// #0
  43b8e0:	mov	w0, w20
  43b8e4:	bl	43b628 <_obstack_memory_used@@Base+0x17c0>
  43b8e8:	mov	x3, x24
  43b8ec:	mov	x1, x0
  43b8f0:	mov	x2, x28
  43b8f4:	mov	w0, w20
  43b8f8:	bl	43b370 <_obstack_memory_used@@Base+0x1508>
  43b8fc:	mov	x20, x0
  43b900:	mov	w3, #0x0                   	// #0
  43b904:	mov	x0, #0x0                   	// #0
  43b908:	ldrb	w4, [x20], #1
  43b90c:	and	x1, x4, #0x7f
  43b910:	lsl	x1, x1, x3
  43b914:	add	w3, w3, #0x7
  43b918:	orr	x0, x0, x1
  43b91c:	tbnz	w4, #7, 43b908 <_obstack_memory_used@@Base+0x1aa0>
  43b920:	ldr	x3, [sp, #168]
  43b924:	ldr	x1, [sp, #192]
  43b928:	add	x1, x1, x3
  43b92c:	cmp	x1, x23
  43b930:	b.hi	43b950 <_obstack_memory_used@@Base+0x1ae8>  // b.pmore
  43b934:	ldr	x3, [sp, #176]
  43b938:	add	x1, x1, x3
  43b93c:	cmp	x1, x23
  43b940:	b.hi	43b9cc <_obstack_memory_used@@Base+0x1b64>  // b.pmore
  43b944:	ldr	x0, [sp, #224]
  43b948:	cmp	x0, x20
  43b94c:	b.hi	43b888 <_obstack_memory_used@@Base+0x1a20>  // b.pmore
  43b950:	tbz	w22, #0, 43ba0c <_obstack_memory_used@@Base+0x1ba4>
  43b954:	mov	w24, #0x0                   	// #0
  43b958:	mov	x26, #0x0                   	// #0
  43b95c:	mov	x23, #0x0                   	// #0
  43b960:	ldr	x0, [sp, #104]
  43b964:	cmp	x0, #0x1
  43b968:	mov	w0, #0x6                   	// #6
  43b96c:	b.hi	43b9f0 <_obstack_memory_used@@Base+0x1b88>  // b.pmore
  43b970:	ldr	x2, [sp, #112]
  43b974:	stur	w24, [x21, #-36]
  43b978:	ldr	x1, [sp, #160]
  43b97c:	stp	x23, x2, [x21, #-32]
  43b980:	stp	x26, x1, [x21, #-16]
  43b984:	b	43b9f0 <_obstack_memory_used@@Base+0x1b88>
  43b988:	ldur	w24, [x3, #-36]
  43b98c:	ldur	x0, [x3, #-24]
  43b990:	str	x0, [sp, #112]
  43b994:	tbnz	w24, #31, 43ba20 <_obstack_memory_used@@Base+0x1bb8>
  43b998:	mov	x2, x21
  43b99c:	mov	x0, x19
  43b9a0:	mov	w1, #0x0                   	// #0
  43b9a4:	bl	448548 <_obstack_memory_used@@Base+0xe6e0>
  43b9a8:	sxtw	x2, w24
  43b9ac:	mov	x0, x19
  43b9b0:	mov	w1, #0x1                   	// #1
  43b9b4:	bl	448548 <_obstack_memory_used@@Base+0xe6e0>
  43b9b8:	mov	x0, x19
  43b9bc:	mov	x1, x26
  43b9c0:	bl	4485c0 <_obstack_memory_used@@Base+0xe758>
  43b9c4:	mov	w0, #0x7                   	// #7
  43b9c8:	b	43b9f0 <_obstack_memory_used@@Base+0x1b88>
  43b9cc:	ldr	x26, [sp, #184]
  43b9d0:	cbz	x26, 43b9ec <_obstack_memory_used@@Base+0x1b84>
  43b9d4:	ldr	x1, [sp, #200]
  43b9d8:	add	x26, x26, x1
  43b9dc:	cbnz	x0, 43ba58 <_obstack_memory_used@@Base+0x1bf0>
  43b9e0:	cbz	x26, 43b9ec <_obstack_memory_used@@Base+0x1b84>
  43b9e4:	and	w24, w22, #0x1
  43b9e8:	tbz	w22, #0, 43b998 <_obstack_memory_used@@Base+0x1b30>
  43b9ec:	mov	w0, #0x8                   	// #8
  43b9f0:	ldp	x19, x20, [sp, #16]
  43b9f4:	ldp	x21, x22, [sp, #32]
  43b9f8:	ldp	x23, x24, [sp, #48]
  43b9fc:	ldp	x25, x26, [sp, #64]
  43ba00:	ldp	x27, x28, [sp, #80]
  43ba04:	ldp	x29, x30, [sp], #240
  43ba08:	ret
  43ba0c:	tbnz	w22, #3, 43ba1c <_obstack_memory_used@@Base+0x1bb4>
  43ba10:	ldr	x0, [sp, #104]
  43ba14:	cmp	x0, #0x1
  43ba18:	b.ls	43b800 <_obstack_memory_used@@Base+0x1998>  // b.plast
  43ba1c:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43ba20:	ldr	x1, [sp, #112]
  43ba24:	add	x2, sp, #0xc0
  43ba28:	mov	x0, x19
  43ba2c:	bl	43b690 <_obstack_memory_used@@Base+0x1828>
  43ba30:	ldrb	w0, [sp, #232]
  43ba34:	mov	x1, x19
  43ba38:	bl	43b628 <_obstack_memory_used@@Base+0x17c0>
  43ba3c:	mov	x2, x0
  43ba40:	ldrb	w0, [sp, #232]
  43ba44:	mov	x1, x19
  43ba48:	str	x2, [sp, #208]
  43ba4c:	bl	43b628 <_obstack_memory_used@@Base+0x17c0>
  43ba50:	stur	x0, [x21, #-16]
  43ba54:	b	43b998 <_obstack_memory_used@@Base+0x1b30>
  43ba58:	ldr	x4, [sp, #224]
  43ba5c:	sub	x0, x0, #0x1
  43ba60:	add	x23, x4, x0
  43ba64:	cbz	x26, 43b9ec <_obstack_memory_used@@Base+0x1b84>
  43ba68:	cbz	x23, 43b9e4 <_obstack_memory_used@@Base+0x1b7c>
  43ba6c:	and	w0, w22, #0x8
  43ba70:	str	w0, [sp, #132]
  43ba74:	tbnz	w22, #3, 43bc24 <_obstack_memory_used@@Base+0x1dbc>
  43ba78:	ldr	x0, [sp, #104]
  43ba7c:	adrp	x6, 477000 <_obstack_memory_used@@Base+0x3d198>
  43ba80:	cmp	x0, #0x1
  43ba84:	ldr	x6, [x6, #3976]
  43ba88:	b.ls	43bc30 <_obstack_memory_used@@Base+0x1dc8>  // b.plast
  43ba8c:	add	x28, sp, #0xa0
  43ba90:	mov	x5, #0x1                   	// #1
  43ba94:	nop
  43ba98:	mov	x25, x23
  43ba9c:	mov	x24, #0x0                   	// #0
  43baa0:	mov	w1, #0x0                   	// #0
  43baa4:	nop
  43baa8:	ldrb	w2, [x25], #1
  43baac:	and	x0, x2, #0x7f
  43bab0:	lsl	x0, x0, x1
  43bab4:	add	w1, w1, #0x7
  43bab8:	orr	x24, x24, x0
  43babc:	tbnz	w2, #7, 43baa8 <_obstack_memory_used@@Base+0x1c40>
  43bac0:	cmp	w1, #0x3f
  43bac4:	b.hi	43badc <_obstack_memory_used@@Base+0x1c74>  // b.pmore
  43bac8:	lsl	x0, x5, x1
  43bacc:	neg	x0, x0
  43bad0:	orr	x0, x24, x0
  43bad4:	tst	x2, #0x40
  43bad8:	csel	x24, x0, x24, ne  // ne = any
  43badc:	mov	x8, x25
  43bae0:	mov	x20, #0x0                   	// #0
  43bae4:	mov	w1, #0x0                   	// #0
  43bae8:	ldrb	w2, [x8], #1
  43baec:	and	x0, x2, #0x7f
  43baf0:	lsl	x0, x0, x1
  43baf4:	add	w1, w1, #0x7
  43baf8:	orr	x20, x20, x0
  43bafc:	tbnz	w2, #7, 43bae8 <_obstack_memory_used@@Base+0x1c80>
  43bb00:	cmp	w1, #0x3f
  43bb04:	b.hi	43bb1c <_obstack_memory_used@@Base+0x1cb4>  // b.pmore
  43bb08:	lsl	x0, x5, x1
  43bb0c:	neg	x0, x0
  43bb10:	orr	x0, x20, x0
  43bb14:	tst	x2, #0x40
  43bb18:	csel	x20, x0, x20, ne  // ne = any
  43bb1c:	cmp	x24, #0x0
  43bb20:	cbz	x24, 43bbe4 <_obstack_memory_used@@Base+0x1d7c>
  43bb24:	b.gt	43bb88 <_obstack_memory_used@@Base+0x1d20>
  43bb28:	ldr	w0, [sp, #132]
  43bb2c:	cmp	w0, #0x0
  43bb30:	ldr	w0, [sp, #128]
  43bb34:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  43bb38:	ccmp	x6, #0x0, #0x4, ne  // ne = any
  43bb3c:	b.ne	43bbec <_obstack_memory_used@@Base+0x1d84>  // b.any
  43bb40:	ldr	x0, [sp, #216]
  43bb44:	mvn	x8, x24
  43bb48:	mov	x9, #0x0                   	// #0
  43bb4c:	mov	w1, #0x0                   	// #0
  43bb50:	add	x8, x0, x8
  43bb54:	nop
  43bb58:	ldrb	w2, [x8], #1
  43bb5c:	and	x0, x2, #0x7f
  43bb60:	lsl	x0, x0, x1
  43bb64:	add	w1, w1, #0x7
  43bb68:	orr	x9, x9, x0
  43bb6c:	tbnz	w2, #7, 43bb58 <_obstack_memory_used@@Base+0x1cf0>
  43bb70:	cmp	x9, #0x0
  43bb74:	cset	w0, eq  // eq = none
  43bb78:	cbnz	w0, 43bbc4 <_obstack_memory_used@@Base+0x1d5c>
  43bb7c:	cbz	x20, 43bc1c <_obstack_memory_used@@Base+0x1db4>
  43bb80:	add	x23, x25, x20
  43bb84:	b	43ba98 <_obstack_memory_used@@Base+0x1c30>
  43bb88:	ldr	x0, [sp, #120]
  43bb8c:	mov	x1, x24
  43bb90:	str	x6, [sp, #136]
  43bb94:	bl	43b4d0 <_obstack_memory_used@@Base+0x1668>
  43bb98:	cbz	x0, 43bbc4 <_obstack_memory_used@@Base+0x1d5c>
  43bb9c:	ldr	x6, [sp, #136]
  43bba0:	mov	x5, #0x1                   	// #1
  43bba4:	cbz	x6, 43bb7c <_obstack_memory_used@@Base+0x1d14>
  43bba8:	mov	x1, x6
  43bbac:	mov	x2, x28
  43bbb0:	bl	43b2e8 <_obstack_memory_used@@Base+0x1480>
  43bbb4:	tst	w0, #0xff
  43bbb8:	mov	x5, #0x1                   	// #1
  43bbbc:	ldr	x6, [sp, #136]
  43bbc0:	b.eq	43bb7c <_obstack_memory_used@@Base+0x1d14>  // b.none
  43bbc4:	tbnz	w22, #0, 43b960 <_obstack_memory_used@@Base+0x1af8>
  43bbc8:	ldr	w0, [sp, #132]
  43bbcc:	cbnz	w0, 43bbdc <_obstack_memory_used@@Base+0x1d74>
  43bbd0:	ldr	x0, [sp, #104]
  43bbd4:	cmp	x0, #0x1
  43bbd8:	b.ls	43b994 <_obstack_memory_used@@Base+0x1b2c>  // b.plast
  43bbdc:	tbz	w24, #31, 43b998 <_obstack_memory_used@@Base+0x1b30>
  43bbe0:	bl	43bde0 <_obstack_memory_used@@Base+0x1f78>
  43bbe4:	mov	w27, #0x1                   	// #1
  43bbe8:	b	43bb7c <_obstack_memory_used@@Base+0x1d14>
  43bbec:	ldr	x0, [sp, #120]
  43bbf0:	mov	x1, x6
  43bbf4:	ldr	x2, [sp, #160]
  43bbf8:	mov	x3, x24
  43bbfc:	str	x6, [sp, #136]
  43bc00:	bl	43b590 <_obstack_memory_used@@Base+0x1728>
  43bc04:	and	w0, w0, #0xff
  43bc08:	eor	w0, w0, #0x1
  43bc0c:	mov	x5, #0x1                   	// #1
  43bc10:	ldr	x6, [sp, #136]
  43bc14:	cbz	w0, 43bb7c <_obstack_memory_used@@Base+0x1d14>
  43bc18:	b	43bbc4 <_obstack_memory_used@@Base+0x1d5c>
  43bc1c:	cbnz	w27, 43b9e4 <_obstack_memory_used@@Base+0x1b7c>
  43bc20:	b	43b9ec <_obstack_memory_used@@Base+0x1b84>
  43bc24:	adrp	x6, 477000 <_obstack_memory_used@@Base+0x3d198>
  43bc28:	ldr	x6, [x6, #3952]
  43bc2c:	b	43ba8c <_obstack_memory_used@@Base+0x1c24>
  43bc30:	mov	x0, x21
  43bc34:	ldr	x1, [x0], #32
  43bc38:	tbz	w1, #0, 43bc40 <_obstack_memory_used@@Base+0x1dd8>
  43bc3c:	ldur	x0, [x21, #-80]
  43bc40:	ldur	x6, [x0, #-112]
  43bc44:	str	x0, [sp, #160]
  43bc48:	b	43ba8c <_obstack_memory_used@@Base+0x1c24>
  43bc4c:	bl	43c048 <_obstack_memory_used@@Base+0x21e0>
  43bc50:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43bc54:	nop
  43bc58:	stp	x29, x30, [sp, #-112]!
  43bc5c:	mov	x29, sp
  43bc60:	stp	x19, x20, [sp, #16]
  43bc64:	mov	x19, x0
  43bc68:	stp	x21, x22, [sp, #32]
  43bc6c:	str	x23, [sp, #48]
  43bc70:	bl	43c048 <_obstack_memory_used@@Base+0x21e0>
  43bc74:	ldp	x0, x21, [x19, #-64]
  43bc78:	ldur	x1, [x19, #-16]
  43bc7c:	str	x1, [sp, #80]
  43bc80:	ldur	w20, [x19, #-36]
  43bc84:	ldur	x19, [x19, #-24]
  43bc88:	bl	43bda0 <_obstack_memory_used@@Base+0x1f38>
  43bc8c:	bl	43c048 <_obstack_memory_used@@Base+0x21e0>
  43bc90:	bl	43c1b8 <_obstack_memory_used@@Base+0x2350>
  43bc94:	ldr	x22, [x0]
  43bc98:	ldr	x0, [x22, #80]
  43bc9c:	tbz	w0, #0, 43bd20 <_obstack_memory_used@@Base+0x1eb8>
  43bca0:	ldr	x22, [x22]
  43bca4:	add	x23, sp, #0x40
  43bca8:	mov	x1, x19
  43bcac:	mov	x2, x23
  43bcb0:	mov	x0, #0x0                   	// #0
  43bcb4:	bl	43b690 <_obstack_memory_used@@Base+0x1828>
  43bcb8:	ldur	x1, [x22, #-112]
  43bcbc:	sxtw	x20, w20
  43bcc0:	mov	x3, x20
  43bcc4:	mov	x2, x22
  43bcc8:	mov	x0, x23
  43bccc:	bl	43b590 <_obstack_memory_used@@Base+0x1728>
  43bcd0:	tst	w0, #0xff
  43bcd4:	b.ne	43bd3c <_obstack_memory_used@@Base+0x1ed4>  // b.any
  43bcd8:	adrp	x19, 477000 <_obstack_memory_used@@Base+0x3d198>
  43bcdc:	mov	x3, x20
  43bce0:	mov	x0, x23
  43bce4:	mov	x2, #0x0                   	// #0
  43bce8:	ldr	x1, [x19, #4024]
  43bcec:	bl	43b590 <_obstack_memory_used@@Base+0x1728>
  43bcf0:	tst	w0, #0xff
  43bcf4:	b.eq	43bd40 <_obstack_memory_used@@Base+0x1ed8>  // b.none
  43bcf8:	mov	x0, #0x8                   	// #8
  43bcfc:	bl	43b0a0 <_obstack_memory_used@@Base+0x1238>
  43bd00:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x3d198>
  43bd04:	adrp	x2, 477000 <_obstack_memory_used@@Base+0x3d198>
  43bd08:	ldr	x1, [x19, #4024]
  43bd0c:	ldr	x3, [x3, #3944]
  43bd10:	ldr	x2, [x2, #3936]
  43bd14:	add	x3, x3, #0x10
  43bd18:	str	x3, [x0]
  43bd1c:	bl	43beb8 <_obstack_memory_used@@Base+0x2050>
  43bd20:	add	x22, x22, #0x70
  43bd24:	b	43bca4 <_obstack_memory_used@@Base+0x1e3c>
  43bd28:	mov	x19, x0
  43bd2c:	bl	43c0e8 <_obstack_memory_used@@Base+0x2280>
  43bd30:	bl	43c0e8 <_obstack_memory_used@@Base+0x2280>
  43bd34:	mov	x0, x19
  43bd38:	bl	4489b8 <_obstack_memory_used@@Base+0xeb50>
  43bd3c:	bl	43bf18 <_obstack_memory_used@@Base+0x20b0>
  43bd40:	mov	x0, x21
  43bd44:	bl	43bd48 <_obstack_memory_used@@Base+0x1ee0>
  43bd48:	stp	x29, x30, [sp, #-16]!
  43bd4c:	mov	x29, sp
  43bd50:	blr	x0
  43bd54:	bl	402650 <abort@plt>
  43bd58:	bl	43c048 <_obstack_memory_used@@Base+0x21e0>
  43bd5c:	bl	402650 <abort@plt>
  43bd60:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43bd64:	mov	x2, x0
  43bd68:	ldr	x1, [x1, #3888]
  43bd6c:	ldaxr	x0, [x1]
  43bd70:	stlxr	w3, x2, [x1]
  43bd74:	cbnz	w3, 43bd6c <_obstack_memory_used@@Base+0x1f04>
  43bd78:	ret
  43bd7c:	nop
  43bd80:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x3d198>
  43bd84:	ldr	x0, [x0, #3888]
  43bd88:	ldar	x0, [x0]
  43bd8c:	ret
  43bd90:	stp	x29, x30, [sp, #-16]!
  43bd94:	mov	x29, sp
  43bd98:	bl	43bd80 <_obstack_memory_used@@Base+0x1f18>
  43bd9c:	bl	43bd48 <_obstack_memory_used@@Base+0x1ee0>
  43bda0:	stp	x29, x30, [sp, #-16]!
  43bda4:	mov	x29, sp
  43bda8:	blr	x0
  43bdac:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43bdb0:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x3d198>
  43bdb4:	mov	x2, x0
  43bdb8:	ldr	x1, [x1, #3968]
  43bdbc:	ldaxr	x0, [x1]
  43bdc0:	stlxr	w3, x2, [x1]
  43bdc4:	cbnz	w3, 43bdbc <_obstack_memory_used@@Base+0x1f54>
  43bdc8:	ret
  43bdcc:	nop
  43bdd0:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x3d198>
  43bdd4:	ldr	x0, [x0, #3968]
  43bdd8:	ldar	x0, [x0]
  43bddc:	ret
  43bde0:	stp	x29, x30, [sp, #-16]!
  43bde4:	mov	x29, sp
  43bde8:	bl	43bdd0 <_obstack_memory_used@@Base+0x1f68>
  43bdec:	bl	43bda0 <_obstack_memory_used@@Base+0x1f38>
  43bdf0:	stp	x29, x30, [sp, #-32]!
  43bdf4:	cmp	w0, #0x1
  43bdf8:	mov	x29, sp
  43bdfc:	b.hi	43be48 <_obstack_memory_used@@Base+0x1fe0>  // b.pmore
  43be00:	sub	x0, x1, #0x60
  43be04:	ldaxr	w2, [x0]
  43be08:	sub	w2, w2, #0x1
  43be0c:	stlxr	w3, w2, [x0]
  43be10:	cbnz	w3, 43be04 <_obstack_memory_used@@Base+0x1f9c>
  43be14:	cbnz	w2, 43be40 <_obstack_memory_used@@Base+0x1fd8>
  43be18:	ldur	x2, [x1, #-72]
  43be1c:	str	x19, [sp, #16]
  43be20:	add	x19, x1, #0x20
  43be24:	cbz	x2, 43be30 <_obstack_memory_used@@Base+0x1fc8>
  43be28:	mov	x0, x19
  43be2c:	blr	x2
  43be30:	mov	x0, x19
  43be34:	ldr	x19, [sp, #16]
  43be38:	ldp	x29, x30, [sp], #32
  43be3c:	b	43b108 <_obstack_memory_used@@Base+0x12a0>
  43be40:	ldp	x29, x30, [sp], #32
  43be44:	ret
  43be48:	ldur	x0, [x1, #-56]
  43be4c:	str	x19, [sp, #16]
  43be50:	bl	43bd48 <_obstack_memory_used@@Base+0x1ee0>
  43be54:	nop
  43be58:	stp	x29, x30, [sp, #-32]!
  43be5c:	mov	x29, sp
  43be60:	stp	x19, x20, [sp, #16]
  43be64:	mov	x19, x0
  43be68:	sub	x20, x0, #0x80
  43be6c:	stur	wzr, [x0, #-128]
  43be70:	stp	x1, x2, [x0, #-112]
  43be74:	bl	43bdd0 <_obstack_memory_used@@Base+0x1f68>
  43be78:	stur	x0, [x19, #-96]
  43be7c:	bl	43bd80 <_obstack_memory_used@@Base+0x1f18>
  43be80:	mov	x3, x0
  43be84:	mov	x2, #0x2b00                	// #11008
  43be88:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x1198>
  43be8c:	movk	x2, #0x432b, lsl #16
  43be90:	add	x1, x1, #0xdf0
  43be94:	movk	x2, #0x5543, lsl #32
  43be98:	stur	x3, [x19, #-88]
  43be9c:	movk	x2, #0x474e, lsl #48
  43bea0:	stp	x2, x1, [x19, #-32]
  43bea4:	mov	x0, x20
  43bea8:	ldp	x19, x20, [sp, #16]
  43beac:	ldp	x29, x30, [sp], #32
  43beb0:	ret
  43beb4:	nop
  43beb8:	stp	x29, x30, [sp, #-48]!
  43bebc:	mov	x29, sp
  43bec0:	stp	x19, x20, [sp, #16]
  43bec4:	mov	x19, x0
  43bec8:	mov	x20, x1
  43becc:	str	x21, [sp, #32]
  43bed0:	mov	x21, x2
  43bed4:	bl	43c1e0 <_obstack_memory_used@@Base+0x2378>
  43bed8:	mov	x3, x0
  43bedc:	mov	x2, x21
  43bee0:	mov	x1, x20
  43bee4:	mov	x0, x19
  43bee8:	ldr	w4, [x3, #8]
  43beec:	add	w4, w4, #0x1
  43bef0:	str	w4, [x3, #8]
  43bef4:	bl	43be58 <_obstack_memory_used@@Base+0x1ff0>
  43bef8:	mov	x19, x0
  43befc:	mov	w0, #0x1                   	// #1
  43bf00:	str	w0, [x19], #96
  43bf04:	mov	x0, x19
  43bf08:	bl	448728 <_obstack_memory_used@@Base+0xe8c0>
  43bf0c:	mov	x0, x19
  43bf10:	bl	43c048 <_obstack_memory_used@@Base+0x21e0>
  43bf14:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43bf18:	stp	x29, x30, [sp, #-32]!
  43bf1c:	mov	x29, sp
  43bf20:	str	x19, [sp, #16]
  43bf24:	bl	43c1e0 <_obstack_memory_used@@Base+0x2378>
  43bf28:	ldr	w2, [x0, #8]
  43bf2c:	ldr	x1, [x0]
  43bf30:	add	w2, w2, #0x1
  43bf34:	str	w2, [x0, #8]
  43bf38:	cbz	x1, 43bf74 <_obstack_memory_used@@Base+0x210c>
  43bf3c:	mov	x3, #0xd500                	// #54528
  43bf40:	ldr	x2, [x1, #80]
  43bf44:	movk	x3, #0xbcd4, lsl #16
  43bf48:	movk	x3, #0xaabc, lsl #32
  43bf4c:	movk	x3, #0xb8b1, lsl #48
  43bf50:	add	x2, x2, x3
  43bf54:	cmp	x2, #0x1
  43bf58:	b.ls	43bf78 <_obstack_memory_used@@Base+0x2110>  // b.plast
  43bf5c:	str	xzr, [x0]
  43bf60:	add	x19, x1, #0x50
  43bf64:	mov	x0, x19
  43bf68:	bl	448ac8 <_obstack_memory_used@@Base+0xec60>
  43bf6c:	mov	x0, x19
  43bf70:	bl	43c048 <_obstack_memory_used@@Base+0x21e0>
  43bf74:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43bf78:	ldr	w0, [x1, #40]
  43bf7c:	neg	w0, w0
  43bf80:	str	w0, [x1, #40]
  43bf84:	b	43bf60 <_obstack_memory_used@@Base+0x20f8>
  43bf88:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  43bf8c:	mov	x2, x0
  43bf90:	add	x1, x1, #0x938
  43bf94:	ldaxr	x0, [x1]
  43bf98:	stlxr	w3, x2, [x1]
  43bf9c:	cbnz	w3, 43bf94 <_obstack_memory_used@@Base+0x212c>
  43bfa0:	ret
  43bfa4:	nop
  43bfa8:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  43bfac:	add	x0, x0, #0x938
  43bfb0:	ldar	x0, [x0]
  43bfb4:	ret
  43bfb8:	stp	x29, x30, [sp, #-16]!
  43bfbc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  43bfc0:	add	x1, x1, #0x698
  43bfc4:	mov	x2, #0x1b                  	// #27
  43bfc8:	mov	x29, sp
  43bfcc:	mov	w0, #0x2                   	// #2
  43bfd0:	bl	402630 <write@plt>
  43bfd4:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43bfd8:	stp	x29, x30, [sp, #-16]!
  43bfdc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  43bfe0:	add	x1, x1, #0x6b8
  43bfe4:	mov	x2, #0x1e                  	// #30
  43bfe8:	mov	x29, sp
  43bfec:	mov	w0, #0x2                   	// #2
  43bff0:	bl	402630 <write@plt>
  43bff4:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43bff8:	stp	x29, x30, [sp, #-32]!
  43bffc:	mov	x29, sp
  43c000:	str	x19, [sp, #16]
  43c004:	cbz	x0, 43c030 <_obstack_memory_used@@Base+0x21c8>
  43c008:	mov	x19, x0
  43c00c:	bl	43c048 <_obstack_memory_used@@Base+0x21e0>
  43c010:	mov	x1, #0xd500                	// #54528
  43c014:	movk	x1, #0xbcd4, lsl #16
  43c018:	ldr	x0, [x19]
  43c01c:	movk	x1, #0xaabc, lsl #32
  43c020:	movk	x1, #0xb8b1, lsl #48
  43c024:	add	x0, x0, x1
  43c028:	cmp	x0, #0x1
  43c02c:	b.ls	43c034 <_obstack_memory_used@@Base+0x21cc>  // b.plast
  43c030:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43c034:	ldur	x0, [x19, #-56]
  43c038:	bl	43bd48 <_obstack_memory_used@@Base+0x1ee0>
  43c03c:	nop
  43c040:	ldur	x0, [x0, #-8]
  43c044:	ret
  43c048:	stp	x29, x30, [sp, #-32]!
  43c04c:	mov	x29, sp
  43c050:	str	x19, [sp, #16]
  43c054:	mov	x19, x0
  43c058:	bl	43c1e0 <_obstack_memory_used@@Base+0x2378>
  43c05c:	mov	x1, x0
  43c060:	mov	x2, x19
  43c064:	mov	x4, #0xd500                	// #54528
  43c068:	movk	x4, #0xbcd4, lsl #16
  43c06c:	movk	x4, #0xaabc, lsl #32
  43c070:	ldr	x3, [x2], #-80
  43c074:	movk	x4, #0xb8b1, lsl #48
  43c078:	ldr	x0, [x0]
  43c07c:	add	x3, x3, x4
  43c080:	cmp	x3, #0x1
  43c084:	b.ls	43c09c <_obstack_memory_used@@Base+0x2234>  // b.plast
  43c088:	cbnz	x0, 43c0e0 <_obstack_memory_used@@Base+0x2278>
  43c08c:	str	x2, [x1]
  43c090:	ldr	x19, [sp, #16]
  43c094:	ldp	x29, x30, [sp], #32
  43c098:	ret
  43c09c:	ldur	w3, [x19, #-40]
  43c0a0:	mov	w5, #0x1                   	// #1
  43c0a4:	ldr	w4, [x1, #8]
  43c0a8:	cmp	w3, #0x0
  43c0ac:	sub	w5, w5, w3
  43c0b0:	csinc	w3, w5, w3, lt  // lt = tstop
  43c0b4:	stur	w3, [x19, #-40]
  43c0b8:	sub	w3, w4, #0x1
  43c0bc:	str	w3, [x1, #8]
  43c0c0:	cmp	x0, x2
  43c0c4:	b.eq	43c0d0 <_obstack_memory_used@@Base+0x2268>  // b.none
  43c0c8:	stur	x0, [x19, #-48]
  43c0cc:	str	x2, [x1]
  43c0d0:	ldur	x0, [x19, #-8]
  43c0d4:	ldr	x19, [sp, #16]
  43c0d8:	ldp	x29, x30, [sp], #32
  43c0dc:	ret
  43c0e0:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43c0e4:	nop
  43c0e8:	stp	x29, x30, [sp, #-16]!
  43c0ec:	mov	x29, sp
  43c0f0:	bl	43c1b8 <_obstack_memory_used@@Base+0x2350>
  43c0f4:	ldr	x1, [x0]
  43c0f8:	cbz	x1, 43c138 <_obstack_memory_used@@Base+0x22d0>
  43c0fc:	mov	x3, #0xd500                	// #54528
  43c100:	ldr	x2, [x1, #80]
  43c104:	movk	x3, #0xbcd4, lsl #16
  43c108:	movk	x3, #0xaabc, lsl #32
  43c10c:	movk	x3, #0xb8b1, lsl #48
  43c110:	add	x2, x2, x3
  43c114:	cmp	x2, #0x1
  43c118:	b.hi	43c158 <_obstack_memory_used@@Base+0x22f0>  // b.pmore
  43c11c:	ldr	w2, [x1, #40]
  43c120:	tbnz	w2, #31, 43c140 <_obstack_memory_used@@Base+0x22d8>
  43c124:	subs	w2, w2, #0x1
  43c128:	b.eq	43c168 <_obstack_memory_used@@Base+0x2300>  // b.none
  43c12c:	cmn	w2, #0x1
  43c130:	b.eq	43c17c <_obstack_memory_used@@Base+0x2314>  // b.none
  43c134:	str	w2, [x1, #40]
  43c138:	ldp	x29, x30, [sp], #16
  43c13c:	ret
  43c140:	adds	w2, w2, #0x1
  43c144:	b.ne	43c134 <_obstack_memory_used@@Base+0x22cc>  // b.any
  43c148:	ldr	x3, [x1, #32]
  43c14c:	str	x3, [x0]
  43c150:	str	w2, [x1, #40]
  43c154:	b	43c138 <_obstack_memory_used@@Base+0x22d0>
  43c158:	str	xzr, [x0]
  43c15c:	add	x0, x1, #0x50
  43c160:	ldp	x29, x30, [sp], #16
  43c164:	b	448bd0 <_obstack_memory_used@@Base+0xed68>
  43c168:	ldr	x2, [x1, #32]
  43c16c:	str	x2, [x0]
  43c170:	add	x0, x1, #0x50
  43c174:	ldp	x29, x30, [sp], #16
  43c178:	b	448bd0 <_obstack_memory_used@@Base+0xed68>
  43c17c:	bl	43bd90 <_obstack_memory_used@@Base+0x1f28>
  43c180:	stp	x29, x30, [sp, #-16]!
  43c184:	mov	x29, sp
  43c188:	bl	43c1e0 <_obstack_memory_used@@Base+0x2378>
  43c18c:	ldr	w0, [x0, #8]
  43c190:	ldp	x29, x30, [sp], #16
  43c194:	cmp	w0, #0x0
  43c198:	cset	w0, ne  // ne = any
  43c19c:	ret
  43c1a0:	stp	x29, x30, [sp, #-16]!
  43c1a4:	mov	x29, sp
  43c1a8:	bl	43c1e0 <_obstack_memory_used@@Base+0x2378>
  43c1ac:	ldr	w0, [x0, #8]
  43c1b0:	ldp	x29, x30, [sp], #16
  43c1b4:	ret
  43c1b8:	stp	x29, x30, [sp, #-16]!
  43c1bc:	mrs	x1, tpidr_el0
  43c1c0:	movz	x0, #0x0, lsl #16
  43c1c4:	movk	x0, #0x10
  43c1c8:	nop
  43c1cc:	nop
  43c1d0:	mov	x29, sp
  43c1d4:	add	x0, x1, x0
  43c1d8:	ldp	x29, x30, [sp], #16
  43c1dc:	ret
  43c1e0:	stp	x29, x30, [sp, #-16]!
  43c1e4:	mrs	x1, tpidr_el0
  43c1e8:	movz	x0, #0x0, lsl #16
  43c1ec:	movk	x0, #0x10
  43c1f0:	nop
  43c1f4:	nop
  43c1f8:	mov	x29, sp
  43c1fc:	add	x0, x1, x0
  43c200:	ldp	x29, x30, [sp], #16
  43c204:	ret
  43c208:	stp	x29, x30, [sp, #-64]!
  43c20c:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  43c210:	mov	x29, sp
  43c214:	ldrb	w1, [x0, #2368]
  43c218:	cbnz	w1, 43c300 <_obstack_memory_used@@Base+0x2498>
  43c21c:	mov	w1, #0x1                   	// #1
  43c220:	strb	w1, [x0, #2368]
  43c224:	bl	446340 <_obstack_memory_used@@Base+0xc4d8>
  43c228:	cbz	x0, 43c2d4 <_obstack_memory_used@@Base+0x246c>
  43c22c:	stp	x19, x20, [sp, #16]
  43c230:	mov	w4, #0xffffffff            	// #-1
  43c234:	add	x3, sp, #0x3c
  43c238:	ldr	x19, [x0, #8]
  43c23c:	stp	x21, x22, [sp, #32]
  43c240:	adrp	x21, 477000 <_obstack_memory_used@@Base+0x3d198>
  43c244:	mov	x2, #0x0                   	// #0
  43c248:	mov	x1, #0x0                   	// #0
  43c24c:	ldrb	w0, [x19]
  43c250:	str	w4, [sp, #60]
  43c254:	cmp	w0, #0x2a
  43c258:	cinc	x19, x19, eq  // eq = none
  43c25c:	mov	x0, x19
  43c260:	bl	446178 <_obstack_memory_used@@Base+0xc310>
  43c264:	mov	x20, x0
  43c268:	ldr	x22, [x21, #3912]
  43c26c:	mov	x1, #0x1                   	// #1
  43c270:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43c274:	mov	x2, #0x30                  	// #48
  43c278:	add	x0, x0, #0x6f8
  43c27c:	ldr	x3, [x22]
  43c280:	bl	402770 <fwrite@plt>
  43c284:	ldr	w0, [sp, #60]
  43c288:	ldr	x1, [x22]
  43c28c:	cbz	w0, 43c2c8 <_obstack_memory_used@@Base+0x2460>
  43c290:	mov	x0, x19
  43c294:	bl	402340 <fputs@plt>
  43c298:	ldr	x3, [x21, #3912]
  43c29c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43c2a0:	mov	x2, #0x2                   	// #2
  43c2a4:	add	x0, x0, #0x730
  43c2a8:	mov	x1, #0x1                   	// #1
  43c2ac:	ldr	x3, [x3]
  43c2b0:	bl	402770 <fwrite@plt>
  43c2b4:	ldr	w0, [sp, #60]
  43c2b8:	cbnz	w0, 43c2c4 <_obstack_memory_used@@Base+0x245c>
  43c2bc:	mov	x0, x20
  43c2c0:	bl	402730 <free@plt>
  43c2c4:	bl	43bf18 <_obstack_memory_used@@Base+0x20b0>
  43c2c8:	mov	x0, x20
  43c2cc:	bl	402340 <fputs@plt>
  43c2d0:	b	43c298 <_obstack_memory_used@@Base+0x2430>
  43c2d4:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x3d198>
  43c2d8:	mov	x2, #0x2d                  	// #45
  43c2dc:	mov	x1, #0x1                   	// #1
  43c2e0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43c2e4:	ldr	x3, [x3, #3912]
  43c2e8:	add	x0, x0, #0x738
  43c2ec:	ldr	x3, [x3]
  43c2f0:	bl	402770 <fwrite@plt>
  43c2f4:	stp	x19, x20, [sp, #16]
  43c2f8:	stp	x21, x22, [sp, #32]
  43c2fc:	bl	402650 <abort@plt>
  43c300:	adrp	x3, 477000 <_obstack_memory_used@@Base+0x3d198>
  43c304:	mov	x2, #0x1d                  	// #29
  43c308:	mov	x1, #0x1                   	// #1
  43c30c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43c310:	ldr	x3, [x3, #3912]
  43c314:	add	x0, x0, #0x6d8
  43c318:	stp	x19, x20, [sp, #16]
  43c31c:	ldr	x3, [x3]
  43c320:	stp	x21, x22, [sp, #32]
  43c324:	bl	402770 <fwrite@plt>
  43c328:	bl	402650 <abort@plt>
  43c32c:	mov	x19, x1
  43c330:	cmp	x1, #0x1
  43c334:	b.ne	43c390 <_obstack_memory_used@@Base+0x2528>  // b.any
  43c338:	bl	43c048 <_obstack_memory_used@@Base+0x21e0>
  43c33c:	ldr	x1, [x0]
  43c340:	ldr	x1, [x1, #16]
  43c344:	blr	x1
  43c348:	mov	x20, x0
  43c34c:	ldr	x3, [x21, #3912]
  43c350:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43c354:	mov	x1, x19
  43c358:	add	x0, x0, #0x768
  43c35c:	mov	x2, #0xb                   	// #11
  43c360:	ldr	x3, [x3]
  43c364:	bl	402770 <fwrite@plt>
  43c368:	ldr	x1, [x21, #3912]
  43c36c:	mov	x0, x20
  43c370:	ldr	x1, [x1]
  43c374:	bl	402340 <fputs@plt>
  43c378:	ldr	x21, [x21, #3912]
  43c37c:	mov	w0, #0xa                   	// #10
  43c380:	ldr	x1, [x21]
  43c384:	bl	402400 <fputc@plt>
  43c388:	bl	43c0e8 <_obstack_memory_used@@Base+0x2280>
  43c38c:	bl	402650 <abort@plt>
  43c390:	bl	43c048 <_obstack_memory_used@@Base+0x21e0>
  43c394:	bl	43c0e8 <_obstack_memory_used@@Base+0x2280>
  43c398:	bl	402650 <abort@plt>
  43c39c:	mov	x19, x0
  43c3a0:	bl	43c0e8 <_obstack_memory_used@@Base+0x2280>
  43c3a4:	mov	x0, x19
  43c3a8:	bl	4489b8 <_obstack_memory_used@@Base+0xeb50>
  43c3ac:	nop
  43c3b0:	sub	w5, w1, #0x1
  43c3b4:	mov	x4, x0
  43c3b8:	cmp	w5, #0x4f
  43c3bc:	b.ls	43c3c8 <_obstack_memory_used@@Base+0x2560>  // b.plast
  43c3c0:	mov	x0, #0x0                   	// #0
  43c3c4:	ret
  43c3c8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43c3cc:	add	x0, x0, #0x774
  43c3d0:	ldrb	w0, [x0, w5, uxtw]
  43c3d4:	adr	x5, 43c3e0 <_obstack_memory_used@@Base+0x2578>
  43c3d8:	add	x0, x5, w0, sxtb #2
  43c3dc:	br	x0
  43c3e0:	cbz	x3, 43c3c0 <_obstack_memory_used@@Base+0x2558>
  43c3e4:	ldp	w0, w5, [x4, #40]
  43c3e8:	cmp	w0, w5
  43c3ec:	b.ge	43c3c0 <_obstack_memory_used@@Base+0x2558>  // b.tcont
  43c3f0:	mov	w5, #0x18                  	// #24
  43c3f4:	add	w7, w0, #0x1
  43c3f8:	ldr	x6, [x4, #32]
  43c3fc:	smull	x5, w0, w5
  43c400:	add	x0, x6, x5
  43c404:	str	wzr, [x0, #4]
  43c408:	str	w7, [x4, #40]
  43c40c:	str	w1, [x6, x5]
  43c410:	stp	x2, x3, [x0, #8]
  43c414:	ret
  43c418:	cbnz	x2, 43c3e4 <_obstack_memory_used@@Base+0x257c>
  43c41c:	mov	x0, #0x0                   	// #0
  43c420:	b	43c3c4 <_obstack_memory_used@@Base+0x255c>
  43c424:	cmp	x2, #0x0
  43c428:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  43c42c:	b.ne	43c3e4 <_obstack_memory_used@@Base+0x257c>  // b.any
  43c430:	mov	x0, #0x0                   	// #0
  43c434:	b	43c3c4 <_obstack_memory_used@@Base+0x255c>
  43c438:	ldr	x3, [x0, #24]
  43c43c:	mov	x2, x1
  43c440:	mov	w4, #0x4f                  	// #79
  43c444:	ldrb	w1, [x3]
  43c448:	cmp	w1, #0x52
  43c44c:	ccmp	w1, w4, #0x4, ne  // ne = any
  43c450:	b.ne	43c47c <_obstack_memory_used@@Base+0x2614>  // b.any
  43c454:	ldr	w5, [x0, #72]
  43c458:	cmp	w1, #0x52
  43c45c:	mov	w1, #0x20                  	// #32
  43c460:	add	w4, w5, #0x3
  43c464:	b.eq	43c484 <_obstack_memory_used@@Base+0x261c>  // b.none
  43c468:	add	x3, x3, #0x1
  43c46c:	str	x3, [x0, #24]
  43c470:	str	w4, [x0, #72]
  43c474:	mov	x3, #0x0                   	// #0
  43c478:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43c47c:	mov	x0, x2
  43c480:	ret
  43c484:	add	w4, w5, #0x2
  43c488:	add	x3, x3, #0x1
  43c48c:	str	x3, [x0, #24]
  43c490:	mov	w1, #0x1f                  	// #31
  43c494:	str	w4, [x0, #72]
  43c498:	mov	x3, #0x0                   	// #0
  43c49c:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43c4a0:	cbz	x1, 43c580 <_obstack_memory_used@@Base+0x2718>
  43c4a4:	stp	x29, x30, [sp, #-32]!
  43c4a8:	mov	x29, sp
  43c4ac:	stp	x19, x20, [sp, #16]
  43c4b0:	mov	x20, x0
  43c4b4:	mov	x19, x1
  43c4b8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1d198>
  43c4bc:	add	x0, x0, #0x7c4
  43c4c0:	ldr	w1, [x19]
  43c4c4:	sub	w1, w1, #0x1
  43c4c8:	cmp	w1, #0x4f
  43c4cc:	b.ls	43c4dc <_obstack_memory_used@@Base+0x2674>  // b.plast
  43c4d0:	ldp	x19, x20, [sp, #16]
  43c4d4:	ldp	x29, x30, [sp], #32
  43c4d8:	ret
  43c4dc:	ldrb	w1, [x0, w1, uxtw]
  43c4e0:	adr	x2, 43c4ec <_obstack_memory_used@@Base+0x2684>
  43c4e4:	add	x1, x2, w1, sxtb #2
  43c4e8:	br	x1
  43c4ec:	ldr	x0, [x19, #8]
  43c4f0:	ldr	w0, [x0]
  43c4f4:	cmp	w0, #0x5
  43c4f8:	b.ne	43c508 <_obstack_memory_used@@Base+0x26a0>  // b.any
  43c4fc:	ldr	w0, [x20, #348]
  43c500:	add	w0, w0, #0x1
  43c504:	str	w0, [x20, #348]
  43c508:	ldr	w0, [x20, #308]
  43c50c:	cmp	w0, #0x800
  43c510:	b.gt	43c4d0 <_obstack_memory_used@@Base+0x2668>
  43c514:	ldr	x1, [x19, #8]
  43c518:	add	w0, w0, #0x1
  43c51c:	str	w0, [x20, #308]
  43c520:	mov	x0, x20
  43c524:	bl	43c4a0 <_obstack_memory_used@@Base+0x2638>
  43c528:	ldr	x1, [x19, #16]
  43c52c:	mov	x0, x20
  43c530:	bl	43c4a0 <_obstack_memory_used@@Base+0x2638>
  43c534:	ldr	w0, [x20, #308]
  43c538:	sub	w0, w0, #0x1
  43c53c:	str	w0, [x20, #308]
  43c540:	ldp	x19, x20, [sp, #16]
  43c544:	ldp	x29, x30, [sp], #32
  43c548:	ret
  43c54c:	ldr	x19, [x19, #8]
  43c550:	cbnz	x19, 43c4c0 <_obstack_memory_used@@Base+0x2658>
  43c554:	b	43c4d0 <_obstack_memory_used@@Base+0x2668>
  43c558:	ldr	x19, [x19, #16]
  43c55c:	cbnz	x19, 43c4c0 <_obstack_memory_used@@Base+0x2658>
  43c560:	b	43c4d0 <_obstack_memory_used@@Base+0x2668>
  43c564:	ldr	w0, [x20, #364]
  43c568:	add	w0, w0, #0x1
  43c56c:	str	w0, [x20, #364]
  43c570:	ldr	w0, [x20, #308]
  43c574:	cmp	w0, #0x800
  43c578:	b.gt	43c4d0 <_obstack_memory_used@@Base+0x2668>
  43c57c:	b	43c514 <_obstack_memory_used@@Base+0x26ac>
  43c580:	ret
  43c584:	nop
  43c588:	cbz	x2, 43c628 <_obstack_memory_used@@Base+0x27c0>
  43c58c:	stp	x29, x30, [sp, #-48]!
  43c590:	mov	x29, sp
  43c594:	stp	x19, x20, [sp, #16]
  43c598:	mov	x20, x1
  43c59c:	mov	x19, x0
  43c5a0:	stp	x21, x22, [sp, #32]
  43c5a4:	add	x22, x1, x2
  43c5a8:	ldr	x1, [x0, #256]
  43c5ac:	b	43c5d0 <_obstack_memory_used@@Base+0x2768>
  43c5b0:	mov	x0, x1
  43c5b4:	add	x1, x1, #0x1
  43c5b8:	str	x1, [x19, #256]
  43c5bc:	add	x20, x20, #0x1
  43c5c0:	cmp	x20, x22
  43c5c4:	strb	w21, [x19, x0]
  43c5c8:	strb	w21, [x19, #264]
  43c5cc:	b.eq	43c618 <_obstack_memory_used@@Base+0x27b0>  // b.none
  43c5d0:	ldrb	w21, [x20]
  43c5d4:	cmp	x1, #0xff
  43c5d8:	b.ne	43c5b0 <_obstack_memory_used@@Base+0x2748>  // b.any
  43c5dc:	ldp	x3, x2, [x19, #272]
  43c5e0:	strb	wzr, [x19, #255]
  43c5e4:	mov	x0, x19
  43c5e8:	add	x20, x20, #0x1
  43c5ec:	blr	x3
  43c5f0:	ldr	x2, [x19, #320]
  43c5f4:	mov	x0, #0x0                   	// #0
  43c5f8:	mov	x1, #0x1                   	// #1
  43c5fc:	str	x1, [x19, #256]
  43c600:	add	x2, x2, x1
  43c604:	str	x2, [x19, #320]
  43c608:	strb	w21, [x19, x0]
  43c60c:	cmp	x20, x22
  43c610:	strb	w21, [x19, #264]
  43c614:	b.ne	43c5d0 <_obstack_memory_used@@Base+0x2768>  // b.any
  43c618:	ldp	x19, x20, [sp, #16]
  43c61c:	ldp	x21, x22, [sp, #32]
  43c620:	ldp	x29, x30, [sp], #48
  43c624:	ret
  43c628:	ret
  43c62c:	nop
  43c630:	ldr	x3, [x0]
  43c634:	mov	x6, x0
  43c638:	ldrb	w4, [x3]
  43c63c:	cmp	w4, #0x6e
  43c640:	b.eq	43c6cc <_obstack_memory_used@@Base+0x2864>  // b.none
  43c644:	sub	w0, w4, #0x30
  43c648:	and	w0, w0, #0xff
  43c64c:	cmp	w0, #0x9
  43c650:	b.hi	43c6f4 <_obstack_memory_used@@Base+0x288c>  // b.pmore
  43c654:	mov	w9, #0x0                   	// #0
  43c658:	mov	w8, #0xcccd                	// #52429
  43c65c:	add	x3, x3, #0x1
  43c660:	mov	w0, #0x0                   	// #0
  43c664:	mov	w7, #0x7fffffff            	// #2147483647
  43c668:	movk	w8, #0xcccc, lsl #16
  43c66c:	b	43c680 <_obstack_memory_used@@Base+0x2818>
  43c670:	umull	x1, w1, w8
  43c674:	lsr	x1, x1, #35
  43c678:	cmp	w1, w0
  43c67c:	b.lt	43c6c4 <_obstack_memory_used@@Base+0x285c>  // b.tstop
  43c680:	str	x3, [x6]
  43c684:	add	w0, w0, w0, lsl #2
  43c688:	add	x3, x3, #0x1
  43c68c:	ldurb	w1, [x3, #-1]
  43c690:	add	w5, w4, w0, lsl #1
  43c694:	sub	w0, w5, #0x30
  43c698:	sub	w2, w1, #0x30
  43c69c:	mov	w4, w1
  43c6a0:	sub	w1, w7, w2
  43c6a4:	and	w2, w2, #0xff
  43c6a8:	cmp	w2, #0x9
  43c6ac:	b.ls	43c670 <_obstack_memory_used@@Base+0x2808>  // b.plast
  43c6b0:	cmp	w9, #0x0
  43c6b4:	mov	w1, #0x30                  	// #48
  43c6b8:	sub	w5, w1, w5
  43c6bc:	csel	w0, w5, w0, ne  // ne = any
  43c6c0:	ret
  43c6c4:	mov	w0, #0xffffffff            	// #-1
  43c6c8:	ret
  43c6cc:	add	x1, x3, #0x1
  43c6d0:	str	x1, [x0]
  43c6d4:	ldrb	w4, [x3, #1]
  43c6d8:	sub	w0, w4, #0x30
  43c6dc:	and	w0, w0, #0xff
  43c6e0:	cmp	w0, #0x9
  43c6e4:	b.hi	43c6f4 <_obstack_memory_used@@Base+0x288c>  // b.pmore
  43c6e8:	mov	x3, x1
  43c6ec:	mov	w9, #0x1                   	// #1
  43c6f0:	b	43c658 <_obstack_memory_used@@Base+0x27f0>
  43c6f4:	mov	w0, #0x0                   	// #0
  43c6f8:	ret
  43c6fc:	nop
  43c700:	mov	x1, x0
  43c704:	ldr	w0, [x0, #40]
  43c708:	ldr	w2, [x1, #44]
  43c70c:	cmp	w0, w2
  43c710:	b.ge	43c75c <_obstack_memory_used@@Base+0x28f4>  // b.tcont
  43c714:	stp	x29, x30, [sp, #-16]!
  43c718:	mov	w2, #0x18                  	// #24
  43c71c:	add	w5, w0, #0x1
  43c720:	mov	x29, sp
  43c724:	ldr	x3, [x1, #32]
  43c728:	smull	x2, w0, w2
  43c72c:	mov	w4, #0x42                  	// #66
  43c730:	add	x0, x1, #0x18
  43c734:	add	x10, x3, x2
  43c738:	str	wzr, [x10, #4]
  43c73c:	str	w5, [x1, #40]
  43c740:	str	w4, [x3, x2]
  43c744:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43c748:	sxtw	x0, w0
  43c74c:	str	x0, [x10, #8]
  43c750:	mov	x0, x10
  43c754:	ldp	x29, x30, [sp], #16
  43c758:	ret
  43c75c:	mov	x10, #0x0                   	// #0
  43c760:	mov	x0, x10
  43c764:	ret
  43c768:	ldr	x1, [x0, #24]
  43c76c:	mov	x10, x0
  43c770:	ldrb	w0, [x1]
  43c774:	cmp	w0, #0x5f
  43c778:	b.eq	43c7bc <_obstack_memory_used@@Base+0x2954>  // b.none
  43c77c:	cmp	w0, #0x6e
  43c780:	b.eq	43c7d4 <_obstack_memory_used@@Base+0x296c>  // b.none
  43c784:	stp	x29, x30, [sp, #-16]!
  43c788:	add	x0, x10, #0x18
  43c78c:	mov	x29, sp
  43c790:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43c794:	adds	w0, w0, #0x1
  43c798:	b.mi	43c7cc <_obstack_memory_used@@Base+0x2964>  // b.first
  43c79c:	ldr	x1, [x10, #24]
  43c7a0:	ldrb	w2, [x1]
  43c7a4:	cmp	w2, #0x5f
  43c7a8:	b.ne	43c7cc <_obstack_memory_used@@Base+0x2964>  // b.any
  43c7ac:	add	x1, x1, #0x1
  43c7b0:	str	x1, [x10, #24]
  43c7b4:	ldp	x29, x30, [sp], #16
  43c7b8:	ret
  43c7bc:	add	x1, x1, #0x1
  43c7c0:	mov	w0, #0x0                   	// #0
  43c7c4:	str	x1, [x10, #24]
  43c7c8:	ret
  43c7cc:	mov	w0, #0xffffffff            	// #-1
  43c7d0:	b	43c7b4 <_obstack_memory_used@@Base+0x294c>
  43c7d4:	mov	w0, #0xffffffff            	// #-1
  43c7d8:	ret
  43c7dc:	nop
  43c7e0:	ldr	x1, [x0, #24]
  43c7e4:	ldrb	w2, [x1]
  43c7e8:	cmp	w2, #0x54
  43c7ec:	b.ne	43c858 <_obstack_memory_used@@Base+0x29f0>  // b.any
  43c7f0:	stp	x29, x30, [sp, #-16]!
  43c7f4:	add	x1, x1, #0x1
  43c7f8:	mov	x11, x0
  43c7fc:	mov	x29, sp
  43c800:	str	x1, [x0, #24]
  43c804:	bl	43c768 <_obstack_memory_used@@Base+0x2900>
  43c808:	tbnz	w0, #31, 43c84c <_obstack_memory_used@@Base+0x29e4>
  43c80c:	ldp	w1, w2, [x11, #40]
  43c810:	cmp	w1, w2
  43c814:	b.ge	43c84c <_obstack_memory_used@@Base+0x29e4>  // b.tcont
  43c818:	mov	w2, #0x18                  	// #24
  43c81c:	add	w5, w1, #0x1
  43c820:	ldr	x3, [x11, #32]
  43c824:	smull	x2, w1, w2
  43c828:	sxtw	x1, w0
  43c82c:	mov	w4, #0x5                   	// #5
  43c830:	add	x0, x3, x2
  43c834:	str	wzr, [x0, #4]
  43c838:	str	w5, [x11, #40]
  43c83c:	str	w4, [x3, x2]
  43c840:	str	x1, [x0, #8]
  43c844:	ldp	x29, x30, [sp], #16
  43c848:	ret
  43c84c:	mov	x0, #0x0                   	// #0
  43c850:	ldp	x29, x30, [sp], #16
  43c854:	ret
  43c858:	mov	x0, #0x0                   	// #0
  43c85c:	ret
  43c860:	mov	x10, x0
  43c864:	stp	x29, x30, [sp, #-16]!
  43c868:	add	x0, x0, #0x18
  43c86c:	mov	x29, sp
  43c870:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43c874:	cmp	w0, #0x0
  43c878:	b.le	43c970 <_obstack_memory_used@@Base+0x2b08>
  43c87c:	mov	w1, w0
  43c880:	sxtw	x3, w0
  43c884:	ldr	x0, [x10, #8]
  43c888:	ldr	x2, [x10, #24]
  43c88c:	sub	x0, x0, x2
  43c890:	cmp	x0, w1, sxtw
  43c894:	b.lt	43c968 <_obstack_memory_used@@Base+0x2b00>  // b.tstop
  43c898:	ldr	w0, [x10, #16]
  43c89c:	add	x3, x2, x3
  43c8a0:	str	x3, [x10, #24]
  43c8a4:	tbz	w0, #2, 43c8b4 <_obstack_memory_used@@Base+0x2a4c>
  43c8a8:	ldrb	w0, [x2, w1, sxtw]
  43c8ac:	cmp	w0, #0x24
  43c8b0:	b.eq	43c97c <_obstack_memory_used@@Base+0x2b14>  // b.none
  43c8b4:	ldp	w0, w3, [x10, #40]
  43c8b8:	cmp	w1, #0x9
  43c8bc:	b.gt	43c8f8 <_obstack_memory_used@@Base+0x2a90>
  43c8c0:	cmp	w3, w0
  43c8c4:	b.le	43c968 <_obstack_memory_used@@Base+0x2b00>
  43c8c8:	ldr	x4, [x10, #32]
  43c8cc:	mov	w5, #0x18                  	// #24
  43c8d0:	add	w3, w0, #0x1
  43c8d4:	smaddl	x0, w0, w5, x4
  43c8d8:	str	wzr, [x0, #4]
  43c8dc:	str	w3, [x10, #40]
  43c8e0:	cbz	x2, 43c968 <_obstack_memory_used@@Base+0x2b00>
  43c8e4:	stp	xzr, x2, [x0]
  43c8e8:	str	w1, [x0, #16]
  43c8ec:	str	x0, [x10, #64]
  43c8f0:	ldp	x29, x30, [sp], #16
  43c8f4:	ret
  43c8f8:	mov	x4, #0x475f                	// #18271
  43c8fc:	ldr	x5, [x2]
  43c900:	movk	x4, #0x4f4c, lsl #16
  43c904:	movk	x4, #0x4142, lsl #32
  43c908:	movk	x4, #0x5f4c, lsl #48
  43c90c:	cmp	x5, x4
  43c910:	b.ne	43c93c <_obstack_memory_used@@Base+0x2ad4>  // b.any
  43c914:	ldrb	w4, [x2, #8]
  43c918:	mov	w6, #0x5f                  	// #95
  43c91c:	mov	w5, #0x24                  	// #36
  43c920:	cmp	w4, #0x2e
  43c924:	ccmp	w4, w6, #0x4, ne  // ne = any
  43c928:	ccmp	w4, w5, #0x4, ne  // ne = any
  43c92c:	b.ne	43c93c <_obstack_memory_used@@Base+0x2ad4>  // b.any
  43c930:	ldrb	w4, [x2, #9]
  43c934:	cmp	w4, #0x4e
  43c938:	b.eq	43c994 <_obstack_memory_used@@Base+0x2b2c>  // b.none
  43c93c:	cmp	w3, w0
  43c940:	b.le	43c968 <_obstack_memory_used@@Base+0x2b00>
  43c944:	ldr	x4, [x10, #32]
  43c948:	mov	w5, #0x18                  	// #24
  43c94c:	add	w3, w0, #0x1
  43c950:	smaddl	x0, w0, w5, x4
  43c954:	str	wzr, [x0, #4]
  43c958:	str	w3, [x10, #40]
  43c95c:	stp	xzr, x2, [x0]
  43c960:	str	w1, [x0, #16]
  43c964:	b	43c8ec <_obstack_memory_used@@Base+0x2a84>
  43c968:	mov	x0, #0x0                   	// #0
  43c96c:	b	43c8ec <_obstack_memory_used@@Base+0x2a84>
  43c970:	mov	x0, #0x0                   	// #0
  43c974:	ldp	x29, x30, [sp], #16
  43c978:	ret
  43c97c:	add	x3, x3, #0x1
  43c980:	str	x3, [x10, #24]
  43c984:	cmp	w1, #0x9
  43c988:	ldp	w0, w3, [x10, #40]
  43c98c:	b.le	43c8c0 <_obstack_memory_used@@Base+0x2a58>
  43c990:	b	43c8f8 <_obstack_memory_used@@Base+0x2a90>
  43c994:	ldr	w2, [x10, #72]
  43c998:	cmp	w3, w0
  43c99c:	add	w2, w2, #0x16
  43c9a0:	sub	w1, w2, w1
  43c9a4:	str	w1, [x10, #72]
  43c9a8:	b.le	43c968 <_obstack_memory_used@@Base+0x2b00>
  43c9ac:	mov	w1, #0x18                  	// #24
  43c9b0:	add	w2, w0, #0x1
  43c9b4:	ldr	x3, [x10, #32]
  43c9b8:	smull	x1, w0, w1
  43c9bc:	str	w2, [x10, #40]
  43c9c0:	mov	w4, #0x15                  	// #21
  43c9c4:	add	x0, x3, x1
  43c9c8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1d198>
  43c9cc:	add	x2, x2, #0x9f0
  43c9d0:	str	xzr, [x3, x1]
  43c9d4:	str	x2, [x0, #8]
  43c9d8:	str	w4, [x0, #16]
  43c9dc:	b	43c8ec <_obstack_memory_used@@Base+0x2a84>
  43c9e0:	ldr	x3, [x0, #24]
  43c9e4:	mov	x11, x0
  43c9e8:	ldr	x13, [x0, #64]
  43c9ec:	mov	x12, x1
  43c9f0:	ldrb	w0, [x3]
  43c9f4:	cmp	w0, #0x42
  43c9f8:	b.ne	43ca50 <_obstack_memory_used@@Base+0x2be8>  // b.any
  43c9fc:	stp	x29, x30, [sp, #-16]!
  43ca00:	mov	x29, sp
  43ca04:	nop
  43ca08:	add	x3, x3, #0x1
  43ca0c:	str	x3, [x11, #24]
  43ca10:	mov	x0, x11
  43ca14:	bl	43c860 <_obstack_memory_used@@Base+0x29f8>
  43ca18:	mov	x3, x0
  43ca1c:	mov	x2, x12
  43ca20:	mov	x0, x11
  43ca24:	mov	w1, #0x4c                  	// #76
  43ca28:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43ca2c:	ldr	x3, [x11, #24]
  43ca30:	mov	x12, x0
  43ca34:	ldrb	w0, [x3]
  43ca38:	cmp	w0, #0x42
  43ca3c:	b.eq	43ca08 <_obstack_memory_used@@Base+0x2ba0>  // b.none
  43ca40:	str	x13, [x11, #64]
  43ca44:	mov	x0, x12
  43ca48:	ldp	x29, x30, [sp], #16
  43ca4c:	ret
  43ca50:	mov	x0, x1
  43ca54:	str	x13, [x11, #64]
  43ca58:	ret
  43ca5c:	nop
  43ca60:	mov	x14, x0
  43ca64:	ldr	x0, [x0, #24]
  43ca68:	ldrb	w2, [x0]
  43ca6c:	cmp	w2, #0x53
  43ca70:	b.ne	43cae0 <_obstack_memory_used@@Base+0x2c78>  // b.any
  43ca74:	add	x2, x0, #0x1
  43ca78:	str	x2, [x14, #24]
  43ca7c:	ldrb	w2, [x0, #1]
  43ca80:	cbnz	w2, 43cae8 <_obstack_memory_used@@Base+0x2c80>
  43ca84:	ldr	w0, [x14, #16]
  43ca88:	and	w1, w1, #0x1
  43ca8c:	ands	w3, w0, #0x8
  43ca90:	ubfx	x4, x0, #3, #1
  43ca94:	csel	w1, w1, wzr, eq  // eq = none
  43ca98:	cbz	w1, 43cab4 <_obstack_memory_used@@Base+0x2c4c>
  43ca9c:	ldr	x0, [x14, #24]
  43caa0:	ldrb	w0, [x0]
  43caa4:	sub	w0, w0, #0x43
  43caa8:	and	w0, w0, #0xff
  43caac:	cmp	w0, #0x1
  43cab0:	csinc	w4, w4, wzr, hi  // hi = pmore
  43cab4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x3c198>
  43cab8:	add	x0, x0, #0xdf0
  43cabc:	add	x3, x0, #0x188
  43cac0:	mov	w1, #0x74                  	// #116
  43cac4:	b	43cacc <_obstack_memory_used@@Base+0x2c64>
  43cac8:	ldrb	w1, [x0]
  43cacc:	cmp	w1, w2
  43cad0:	b.eq	43cbbc <_obstack_memory_used@@Base+0x2d54>  // b.none
  43cad4:	add	x0, x0, #0x38
  43cad8:	cmp	x0, x3
  43cadc:	b.ne	43cac8 <_obstack_memory_used@@Base+0x2c60>  // b.any
  43cae0:	mov	x0, #0x0                   	// #0
  43cae4:	ret
  43cae8:	add	x2, x0, #0x2
  43caec:	str	x2, [x14, #24]
  43caf0:	ldrb	w2, [x0, #1]
  43caf4:	sub	w5, w2, #0x30
  43caf8:	cmp	w2, #0x5f
  43cafc:	and	w0, w5, #0xff
  43cb00:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  43cb04:	b.hi	43cb2c <_obstack_memory_used@@Base+0x2cc4>  // b.pmore
  43cb08:	cmp	w2, #0x5f
  43cb0c:	mov	w1, #0x0                   	// #0
  43cb10:	b.ne	43cb40 <_obstack_memory_used@@Base+0x2cd8>  // b.any
  43cb14:	ldr	w0, [x14, #56]
  43cb18:	cmp	w0, w1
  43cb1c:	b.ls	43cae0 <_obstack_memory_used@@Base+0x2c78>  // b.plast
  43cb20:	ldr	x0, [x14, #48]
  43cb24:	ldr	x0, [x0, w1, uxtw #3]
  43cb28:	ret
  43cb2c:	sub	w0, w2, #0x41
  43cb30:	and	w0, w0, #0xff
  43cb34:	cmp	w0, #0x19
  43cb38:	b.hi	43ca84 <_obstack_memory_used@@Base+0x2c1c>  // b.pmore
  43cb3c:	nop
  43cb40:	mov	w3, #0x0                   	// #0
  43cb44:	nop
  43cb48:	add	w1, w3, w3, lsl #3
  43cb4c:	sub	w6, w2, #0x41
  43cb50:	mov	w4, w1
  43cb54:	and	w5, w5, #0xff
  43cb58:	add	w1, w2, w1, lsl #2
  43cb5c:	and	w6, w6, #0xff
  43cb60:	sub	w1, w1, #0x37
  43cb64:	add	w2, w2, w4, lsl #2
  43cb68:	cmp	w5, #0x9
  43cb6c:	b.hi	43cbb0 <_obstack_memory_used@@Base+0x2d48>  // b.pmore
  43cb70:	sub	w1, w2, #0x30
  43cb74:	cmp	w3, w1
  43cb78:	b.hi	43cae0 <_obstack_memory_used@@Base+0x2c78>  // b.pmore
  43cb7c:	ldr	x4, [x14, #24]
  43cb80:	mov	w3, w1
  43cb84:	add	x0, x4, #0x1
  43cb88:	ldrb	w2, [x4]
  43cb8c:	cbz	w2, 43cba0 <_obstack_memory_used@@Base+0x2d38>
  43cb90:	str	x0, [x14, #24]
  43cb94:	ldrb	w2, [x4]
  43cb98:	cmp	w2, #0x5f
  43cb9c:	b.eq	43cba8 <_obstack_memory_used@@Base+0x2d40>  // b.none
  43cba0:	sub	w5, w2, #0x30
  43cba4:	b	43cb48 <_obstack_memory_used@@Base+0x2ce0>
  43cba8:	add	w1, w1, #0x1
  43cbac:	b	43cb14 <_obstack_memory_used@@Base+0x2cac>
  43cbb0:	cmp	w6, #0x19
  43cbb4:	b.ls	43cb74 <_obstack_memory_used@@Base+0x2d0c>  // b.plast
  43cbb8:	b	43cae0 <_obstack_memory_used@@Base+0x2c78>
  43cbbc:	ldr	x5, [x0, #40]
  43cbc0:	ldp	w1, w3, [x14, #40]
  43cbc4:	cbz	x5, 43cc00 <_obstack_memory_used@@Base+0x2d98>
  43cbc8:	ldr	w9, [x0, #48]
  43cbcc:	cmp	w3, w1
  43cbd0:	b.le	43ccb8 <_obstack_memory_used@@Base+0x2e50>
  43cbd4:	mov	w8, #0x18                  	// #24
  43cbd8:	ldr	x7, [x14, #32]
  43cbdc:	smull	x6, w1, w8
  43cbe0:	add	w1, w1, #0x1
  43cbe4:	add	x2, x7, x6
  43cbe8:	str	wzr, [x2, #4]
  43cbec:	str	w1, [x14, #40]
  43cbf0:	str	w8, [x7, x6]
  43cbf4:	str	x5, [x2, #8]
  43cbf8:	str	w9, [x2, #16]
  43cbfc:	str	x2, [x14, #64]
  43cc00:	cbz	w4, 43cc5c <_obstack_memory_used@@Base+0x2df4>
  43cc04:	ldr	w2, [x0, #32]
  43cc08:	ldr	x5, [x0, #24]
  43cc0c:	cmp	w1, w3
  43cc10:	ldr	w0, [x14, #72]
  43cc14:	add	w0, w0, w2
  43cc18:	str	w0, [x14, #72]
  43cc1c:	b.ge	43ccb0 <_obstack_memory_used@@Base+0x2e48>  // b.tcont
  43cc20:	mov	w4, #0x18                  	// #24
  43cc24:	add	w6, w1, #0x1
  43cc28:	ldr	x3, [x14, #32]
  43cc2c:	smull	x1, w1, w4
  43cc30:	add	x0, x3, x1
  43cc34:	str	wzr, [x0, #4]
  43cc38:	str	w6, [x14, #40]
  43cc3c:	str	w4, [x3, x1]
  43cc40:	str	x5, [x0, #8]
  43cc44:	str	w2, [x0, #16]
  43cc48:	ldr	x1, [x14, #24]
  43cc4c:	ldrb	w1, [x1]
  43cc50:	cmp	w1, #0x42
  43cc54:	b.eq	43cc68 <_obstack_memory_used@@Base+0x2e00>  // b.none
  43cc58:	ret
  43cc5c:	ldr	w2, [x0, #16]
  43cc60:	ldr	x5, [x0, #8]
  43cc64:	b	43cc0c <_obstack_memory_used@@Base+0x2da4>
  43cc68:	stp	x29, x30, [sp, #-16]!
  43cc6c:	mov	x1, x0
  43cc70:	mov	x0, x14
  43cc74:	mov	x29, sp
  43cc78:	bl	43c9e0 <_obstack_memory_used@@Base+0x2b78>
  43cc7c:	cbz	x0, 43cca4 <_obstack_memory_used@@Base+0x2e3c>
  43cc80:	ldp	w1, w2, [x14, #56]
  43cc84:	cmp	w1, w2
  43cc88:	b.ge	43cca4 <_obstack_memory_used@@Base+0x2e3c>  // b.tcont
  43cc8c:	ldr	x3, [x14, #48]
  43cc90:	add	w2, w1, #0x1
  43cc94:	str	x0, [x3, w1, sxtw #3]
  43cc98:	str	w2, [x14, #56]
  43cc9c:	ldp	x29, x30, [sp], #16
  43cca0:	ret
  43cca4:	mov	x0, #0x0                   	// #0
  43cca8:	ldp	x29, x30, [sp], #16
  43ccac:	ret
  43ccb0:	mov	x0, #0x0                   	// #0
  43ccb4:	b	43cc48 <_obstack_memory_used@@Base+0x2de0>
  43ccb8:	mov	x2, #0x0                   	// #0
  43ccbc:	str	x2, [x14, #64]
  43ccc0:	b	43cc00 <_obstack_memory_used@@Base+0x2d98>
  43ccc4:	nop
  43ccc8:	mov	x10, x0
  43cccc:	cbnz	w1, 43cce8 <_obstack_memory_used@@Base+0x2e80>
  43ccd0:	ldr	x0, [x0, #24]
  43ccd4:	ldrb	w1, [x0]
  43ccd8:	cbz	w1, 43cd28 <_obstack_memory_used@@Base+0x2ec0>
  43ccdc:	add	x1, x0, #0x1
  43cce0:	str	x1, [x10, #24]
  43cce4:	ldrb	w1, [x0]
  43cce8:	stp	x29, x30, [sp, #-16]!
  43ccec:	cmp	w1, #0x68
  43ccf0:	mov	x29, sp
  43ccf4:	b.eq	43cd64 <_obstack_memory_used@@Base+0x2efc>  // b.none
  43ccf8:	cmp	w1, #0x76
  43ccfc:	b.ne	43cd1c <_obstack_memory_used@@Base+0x2eb4>  // b.any
  43cd00:	add	x11, x10, #0x18
  43cd04:	mov	x0, x11
  43cd08:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43cd0c:	ldr	x0, [x10, #24]
  43cd10:	ldrb	w1, [x0]
  43cd14:	cmp	w1, #0x5f
  43cd18:	b.eq	43cd30 <_obstack_memory_used@@Base+0x2ec8>  // b.none
  43cd1c:	mov	w0, #0x0                   	// #0
  43cd20:	ldp	x29, x30, [sp], #16
  43cd24:	ret
  43cd28:	mov	w0, #0x0                   	// #0
  43cd2c:	ret
  43cd30:	add	x0, x0, #0x1
  43cd34:	str	x0, [x10, #24]
  43cd38:	mov	x0, x11
  43cd3c:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43cd40:	ldr	x0, [x10, #24]
  43cd44:	ldrb	w1, [x0]
  43cd48:	cmp	w1, #0x5f
  43cd4c:	b.ne	43cd1c <_obstack_memory_used@@Base+0x2eb4>  // b.any
  43cd50:	add	x1, x0, #0x1
  43cd54:	str	x1, [x10, #24]
  43cd58:	mov	w0, #0x1                   	// #1
  43cd5c:	ldp	x29, x30, [sp], #16
  43cd60:	ret
  43cd64:	add	x0, x10, #0x18
  43cd68:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43cd6c:	b	43cd40 <_obstack_memory_used@@Base+0x2ed8>
  43cd70:	mov	x2, x0
  43cd74:	mov	w3, #0x56                  	// #86
  43cd78:	mov	w0, #0x4b                  	// #75
  43cd7c:	ldrb	w1, [x2]
  43cd80:	cmp	w1, #0x72
  43cd84:	ccmp	w1, w3, #0x4, ne  // ne = any
  43cd88:	ccmp	w1, w0, #0x4, ne  // ne = any
  43cd8c:	mov	w0, #0x1                   	// #1
  43cd90:	b.eq	43cda0 <_obstack_memory_used@@Base+0x2f38>  // b.none
  43cd94:	cmp	w1, #0x44
  43cd98:	mov	w0, #0x0                   	// #0
  43cd9c:	b.eq	43cda4 <_obstack_memory_used@@Base+0x2f3c>  // b.none
  43cda0:	ret
  43cda4:	ldrb	w0, [x2, #1]
  43cda8:	and	w1, w0, #0xffffffdf
  43cdac:	sub	w0, w0, #0x77
  43cdb0:	cmp	w1, #0x4f
  43cdb4:	and	w0, w0, #0xff
  43cdb8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  43cdbc:	cset	w0, ls  // ls = plast
  43cdc0:	ret
  43cdc4:	nop
  43cdc8:	ldr	x1, [x0, #24]
  43cdcc:	mov	x10, x0
  43cdd0:	ldrb	w0, [x1]
  43cdd4:	cmp	w0, #0x5f
  43cdd8:	b.eq	43cde4 <_obstack_memory_used@@Base+0x2f7c>  // b.none
  43cddc:	mov	w0, #0x1                   	// #1
  43cde0:	ret
  43cde4:	stp	x29, x30, [sp, #-16]!
  43cde8:	add	x0, x1, #0x1
  43cdec:	mov	x29, sp
  43cdf0:	str	x0, [x10, #24]
  43cdf4:	ldrb	w0, [x1, #1]
  43cdf8:	cmp	w0, #0x5f
  43cdfc:	b.eq	43ce20 <_obstack_memory_used@@Base+0x2fb8>  // b.none
  43ce00:	add	x0, x10, #0x18
  43ce04:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43ce08:	mov	w1, w0
  43ce0c:	mov	w0, #0x0                   	// #0
  43ce10:	tbnz	w1, #31, 43ce18 <_obstack_memory_used@@Base+0x2fb0>
  43ce14:	mov	w0, #0x1                   	// #1
  43ce18:	ldp	x29, x30, [sp], #16
  43ce1c:	ret
  43ce20:	mov	x0, x10
  43ce24:	add	x1, x1, #0x2
  43ce28:	str	x1, [x0, #24]!
  43ce2c:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43ce30:	tbnz	w0, #31, 43ce60 <_obstack_memory_used@@Base+0x2ff8>
  43ce34:	cmp	w0, #0x9
  43ce38:	b.le	43ce14 <_obstack_memory_used@@Base+0x2fac>
  43ce3c:	ldr	x1, [x10, #24]
  43ce40:	mov	w0, #0x0                   	// #0
  43ce44:	ldrb	w2, [x1]
  43ce48:	cmp	w2, #0x5f
  43ce4c:	b.ne	43ce18 <_obstack_memory_used@@Base+0x2fb0>  // b.any
  43ce50:	add	x1, x1, #0x1
  43ce54:	mov	w0, #0x1                   	// #1
  43ce58:	str	x1, [x10, #24]
  43ce5c:	b	43ce18 <_obstack_memory_used@@Base+0x2fb0>
  43ce60:	mov	w0, #0x0                   	// #0
  43ce64:	b	43ce18 <_obstack_memory_used@@Base+0x2fb0>
  43ce68:	cbnz	x0, 43ce84 <_obstack_memory_used@@Base+0x301c>
  43ce6c:	b	43ce90 <_obstack_memory_used@@Base+0x3028>
  43ce70:	cmp	w1, #0x0
  43ce74:	b.le	43ce98 <_obstack_memory_used@@Base+0x3030>
  43ce78:	ldr	x0, [x0, #16]
  43ce7c:	sub	w1, w1, #0x1
  43ce80:	cbz	x0, 43ce94 <_obstack_memory_used@@Base+0x302c>
  43ce84:	ldr	w2, [x0]
  43ce88:	cmp	w2, #0x2f
  43ce8c:	b.eq	43ce70 <_obstack_memory_used@@Base+0x3008>  // b.none
  43ce90:	mov	x0, #0x0                   	// #0
  43ce94:	ret
  43ce98:	b.ne	43ce90 <_obstack_memory_used@@Base+0x3028>  // b.any
  43ce9c:	ldr	x0, [x0, #8]
  43cea0:	ret
  43cea4:	nop
  43cea8:	mov	x2, x0
  43ceac:	ldr	x0, [x0, #288]
  43ceb0:	cbz	x0, 43cec8 <_obstack_memory_used@@Base+0x3060>
  43ceb4:	ldr	x1, [x1]
  43ceb8:	ldr	x0, [x0, #8]
  43cebc:	ldr	x0, [x0, #16]
  43cec0:	tbnz	w1, #31, 43ced0 <_obstack_memory_used@@Base+0x3068>
  43cec4:	b	43ce68 <_obstack_memory_used@@Base+0x3000>
  43cec8:	mov	w1, #0x1                   	// #1
  43cecc:	str	w1, [x2, #304]
  43ced0:	ret
  43ced4:	nop
  43ced8:	cbz	x1, 43cfac <_obstack_memory_used@@Base+0x3144>
  43cedc:	stp	x29, x30, [sp, #-48]!
  43cee0:	mov	x29, sp
  43cee4:	stp	x21, x22, [sp, #32]
  43cee8:	mov	x21, #0x8001                	// #32769
  43ceec:	movk	x21, #0x410, lsl #16
  43cef0:	movk	x21, #0xc600, lsl #32
  43cef4:	stp	x19, x20, [sp, #16]
  43cef8:	mov	x20, x0
  43cefc:	mov	x19, x1
  43cf00:	mov	x22, #0x1                   	// #1
  43cf04:	movk	x21, #0x19, lsl #48
  43cf08:	ldr	w2, [x19]
  43cf0c:	cmp	w2, #0x8
  43cf10:	b.eq	43cf28 <_obstack_memory_used@@Base+0x30c0>  // b.none
  43cf14:	b.hi	43cf7c <_obstack_memory_used@@Base+0x3114>  // b.pmore
  43cf18:	cmp	w2, #0x6
  43cf1c:	b.eq	43cf30 <_obstack_memory_used@@Base+0x30c8>  // b.none
  43cf20:	cmp	w2, #0x7
  43cf24:	b.ne	43cf44 <_obstack_memory_used@@Base+0x30dc>  // b.any
  43cf28:	ldr	x19, [x19, #16]
  43cf2c:	cbnz	x19, 43cf08 <_obstack_memory_used@@Base+0x30a0>
  43cf30:	mov	x0, #0x0                   	// #0
  43cf34:	ldp	x19, x20, [sp, #16]
  43cf38:	ldp	x21, x22, [sp, #32]
  43cf3c:	ldp	x29, x30, [sp], #48
  43cf40:	ret
  43cf44:	cbz	w2, 43cf30 <_obstack_memory_used@@Base+0x30c8>
  43cf48:	cmp	w2, #0x5
  43cf4c:	b.ne	43cf98 <_obstack_memory_used@@Base+0x3130>  // b.any
  43cf50:	add	x1, x19, #0x8
  43cf54:	mov	x0, x20
  43cf58:	bl	43cea8 <_obstack_memory_used@@Base+0x3040>
  43cf5c:	cbz	x0, 43cf30 <_obstack_memory_used@@Base+0x30c8>
  43cf60:	ldr	w1, [x0]
  43cf64:	cmp	w1, #0x2f
  43cf68:	b.ne	43cf30 <_obstack_memory_used@@Base+0x30c8>  // b.any
  43cf6c:	ldp	x19, x20, [sp, #16]
  43cf70:	ldp	x21, x22, [sp, #32]
  43cf74:	ldp	x29, x30, [sp], #48
  43cf78:	ret
  43cf7c:	sub	w2, w2, #0x18
  43cf80:	cmp	w2, #0x34
  43cf84:	b.hi	43cf98 <_obstack_memory_used@@Base+0x3130>  // b.pmore
  43cf88:	lsl	x2, x22, x2
  43cf8c:	tst	x2, x21
  43cf90:	b.ne	43cf30 <_obstack_memory_used@@Base+0x30c8>  // b.any
  43cf94:	tbnz	w2, #27, 43cf28 <_obstack_memory_used@@Base+0x30c0>
  43cf98:	ldr	x1, [x19, #8]
  43cf9c:	mov	x0, x20
  43cfa0:	bl	43ced8 <_obstack_memory_used@@Base+0x3070>
  43cfa4:	cbz	x0, 43cf28 <_obstack_memory_used@@Base+0x30c0>
  43cfa8:	b	43cf34 <_obstack_memory_used@@Base+0x30cc>
  43cfac:	mov	x0, #0x0                   	// #0
  43cfb0:	ret
  43cfb4:	nop
  43cfb8:	stp	x29, x30, [sp, #-48]!
  43cfbc:	mov	x29, sp
  43cfc0:	stp	x19, x20, [sp, #16]
  43cfc4:	mov	x19, x2
  43cfc8:	add	x2, x1, #0x1
  43cfcc:	stp	x21, x22, [sp, #32]
  43cfd0:	mov	x21, x1
  43cfd4:	mov	x22, x0
  43cfd8:	ldp	x1, x20, [x19, #8]
  43cfdc:	add	x1, x2, x1
  43cfe0:	ldr	w2, [x19, #24]
  43cfe4:	cmp	x1, x20
  43cfe8:	b.hi	43d02c <_obstack_memory_used@@Base+0x31c4>  // b.pmore
  43cfec:	cbnz	w2, 43d01c <_obstack_memory_used@@Base+0x31b4>
  43cff0:	ldp	x3, x0, [x19]
  43cff4:	mov	x1, x22
  43cff8:	mov	x2, x21
  43cffc:	add	x0, x3, x0
  43d000:	bl	4022e0 <memcpy@plt>
  43d004:	ldp	x0, x1, [x19]
  43d008:	add	x0, x0, x21
  43d00c:	strb	wzr, [x0, x1]
  43d010:	ldr	x1, [x19, #8]
  43d014:	add	x1, x1, x21
  43d018:	str	x1, [x19, #8]
  43d01c:	ldp	x19, x20, [sp, #16]
  43d020:	ldp	x21, x22, [sp, #32]
  43d024:	ldp	x29, x30, [sp], #48
  43d028:	ret
  43d02c:	cbnz	w2, 43d01c <_obstack_memory_used@@Base+0x31b4>
  43d030:	cbz	x20, 43d068 <_obstack_memory_used@@Base+0x3200>
  43d034:	nop
  43d038:	lsl	x20, x20, #1
  43d03c:	cmp	x1, x20
  43d040:	b.hi	43d038 <_obstack_memory_used@@Base+0x31d0>  // b.pmore
  43d044:	ldr	x0, [x19]
  43d048:	mov	x1, x20
  43d04c:	bl	4025a0 <realloc@plt>
  43d050:	cbz	x0, 43d078 <_obstack_memory_used@@Base+0x3210>
  43d054:	ldr	w2, [x19, #24]
  43d058:	str	x0, [x19]
  43d05c:	str	x20, [x19, #16]
  43d060:	cbz	w2, 43cff0 <_obstack_memory_used@@Base+0x3188>
  43d064:	b	43d01c <_obstack_memory_used@@Base+0x31b4>
  43d068:	cmp	x1, #0x2
  43d06c:	mov	x20, #0x2                   	// #2
  43d070:	b.hi	43d038 <_obstack_memory_used@@Base+0x31d0>  // b.pmore
  43d074:	b	43d044 <_obstack_memory_used@@Base+0x31dc>
  43d078:	ldr	x0, [x19]
  43d07c:	bl	402730 <free@plt>
  43d080:	stp	xzr, xzr, [x19]
  43d084:	mov	w0, #0x1                   	// #1
  43d088:	str	xzr, [x19, #16]
  43d08c:	str	w0, [x19, #24]
  43d090:	b	43d01c <_obstack_memory_used@@Base+0x31b4>
  43d094:	nop
  43d098:	stp	x29, x30, [sp, #-112]!
  43d09c:	mov	x29, sp
  43d0a0:	ldr	x2, [x0, #24]
  43d0a4:	stp	x19, x20, [sp, #16]
  43d0a8:	mov	x19, x0
  43d0ac:	str	xzr, [sp, #104]
  43d0b0:	ldrb	w3, [x2]
  43d0b4:	cmp	w3, w1, uxtb
  43d0b8:	b.eq	43d7b8 <_obstack_memory_used@@Base+0x3950>  // b.none
  43d0bc:	stp	x21, x22, [sp, #32]
  43d0c0:	add	x21, sp, #0x68
  43d0c4:	mov	w22, #0x1                   	// #1
  43d0c8:	stp	x23, x24, [sp, #48]
  43d0cc:	and	w23, w1, #0xff
  43d0d0:	mov	w24, #0x6d                  	// #109
  43d0d4:	stp	x25, x26, [sp, #64]
  43d0d8:	ldr	w25, [x19, #76]
  43d0dc:	str	w22, [x19, #76]
  43d0e0:	ldrb	w0, [x2]
  43d0e4:	cmp	w0, #0x4c
  43d0e8:	b.eq	43d2b8 <_obstack_memory_used@@Base+0x3450>  // b.none
  43d0ec:	cmp	w0, #0x54
  43d0f0:	b.eq	43d348 <_obstack_memory_used@@Base+0x34e0>  // b.none
  43d0f4:	cmp	w0, #0x73
  43d0f8:	b.eq	43d278 <_obstack_memory_used@@Base+0x3410>  // b.none
  43d0fc:	cmp	w0, #0x66
  43d100:	b.ne	43d19c <_obstack_memory_used@@Base+0x3334>  // b.any
  43d104:	ldrb	w0, [x2, #1]
  43d108:	cmp	w0, #0x70
  43d10c:	b.eq	43d358 <_obstack_memory_used@@Base+0x34f0>  // b.none
  43d110:	mov	x0, x19
  43d114:	bl	43fab8 <_obstack_memory_used@@Base+0x5c50>
  43d118:	mov	x20, x0
  43d11c:	cbz	x0, 43d17c <_obstack_memory_used@@Base+0x3314>
  43d120:	ldr	w0, [x0]
  43d124:	cmp	w0, #0x32
  43d128:	b.eq	43d3c0 <_obstack_memory_used@@Base+0x3558>  // b.none
  43d12c:	cmp	w0, #0x34
  43d130:	b.eq	43d7d8 <_obstack_memory_used@@Base+0x3970>  // b.none
  43d134:	b.hi	43d178 <_obstack_memory_used@@Base+0x3310>  // b.pmore
  43d138:	cmp	w0, #0x33
  43d13c:	b.ne	43d178 <_obstack_memory_used@@Base+0x3310>  // b.any
  43d140:	ldr	w0, [x20, #8]
  43d144:	cmp	w0, #0x2
  43d148:	b.eq	43d178 <_obstack_memory_used@@Base+0x3310>  // b.none
  43d14c:	b.gt	43d178 <_obstack_memory_used@@Base+0x3310>
  43d150:	cbnz	w0, 43d588 <_obstack_memory_used@@Base+0x3720>
  43d154:	mov	x2, x20
  43d158:	mov	x0, x19
  43d15c:	mov	x3, #0x0                   	// #0
  43d160:	mov	w1, #0x36                  	// #54
  43d164:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d168:	mov	x20, x0
  43d16c:	b	43d250 <_obstack_memory_used@@Base+0x33e8>
  43d170:	ldr	x27, [sp, #80]
  43d174:	nop
  43d178:	mov	x20, #0x0                   	// #0
  43d17c:	str	w25, [x19, #76]
  43d180:	mov	x0, x20
  43d184:	ldp	x19, x20, [sp, #16]
  43d188:	ldp	x21, x22, [sp, #32]
  43d18c:	ldp	x23, x24, [sp, #48]
  43d190:	ldp	x25, x26, [sp, #64]
  43d194:	ldp	x29, x30, [sp], #112
  43d198:	ret
  43d19c:	sub	w1, w0, #0x30
  43d1a0:	and	w1, w1, #0xff
  43d1a4:	cmp	w1, #0x9
  43d1a8:	b.hi	43d2c8 <_obstack_memory_used@@Base+0x3460>  // b.pmore
  43d1ac:	mov	x0, x19
  43d1b0:	bl	440180 <_obstack_memory_used@@Base+0x6318>
  43d1b4:	mov	x20, x0
  43d1b8:	cbz	x0, 43d17c <_obstack_memory_used@@Base+0x3314>
  43d1bc:	ldr	x0, [x19, #24]
  43d1c0:	ldrb	w1, [x0]
  43d1c4:	cmp	w1, #0x49
  43d1c8:	b.eq	43d228 <_obstack_memory_used@@Base+0x33c0>  // b.none
  43d1cc:	str	w25, [x19, #76]
  43d1d0:	mov	x2, x20
  43d1d4:	mov	x0, x19
  43d1d8:	mov	x3, #0x0                   	// #0
  43d1dc:	mov	w1, #0x2e                  	// #46
  43d1e0:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d1e4:	str	x0, [x21]
  43d1e8:	cbz	x0, 43d258 <_obstack_memory_used@@Base+0x33f0>
  43d1ec:	ldr	x2, [x19, #24]
  43d1f0:	add	x21, x0, #0x10
  43d1f4:	ldrb	w0, [x2]
  43d1f8:	cmp	w0, w23
  43d1fc:	b.ne	43d0d8 <_obstack_memory_used@@Base+0x3270>  // b.any
  43d200:	ldr	x20, [sp, #104]
  43d204:	add	x2, x2, #0x1
  43d208:	str	x2, [x19, #24]
  43d20c:	mov	x0, x20
  43d210:	ldp	x19, x20, [sp, #16]
  43d214:	ldp	x21, x22, [sp, #32]
  43d218:	ldp	x23, x24, [sp, #48]
  43d21c:	ldp	x25, x26, [sp, #64]
  43d220:	ldp	x29, x30, [sp], #112
  43d224:	ret
  43d228:	add	x0, x0, #0x1
  43d22c:	str	x0, [x19, #24]
  43d230:	mov	x0, x19
  43d234:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43d238:	mov	x3, x0
  43d23c:	mov	x2, x20
  43d240:	mov	x0, x19
  43d244:	mov	w1, #0x4                   	// #4
  43d248:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d24c:	mov	x20, x0
  43d250:	str	w25, [x19, #76]
  43d254:	cbnz	x20, 43d1d0 <_obstack_memory_used@@Base+0x3368>
  43d258:	mov	x20, #0x0                   	// #0
  43d25c:	mov	x0, x20
  43d260:	ldp	x19, x20, [sp, #16]
  43d264:	ldp	x21, x22, [sp, #32]
  43d268:	ldp	x23, x24, [sp, #48]
  43d26c:	ldp	x25, x26, [sp, #64]
  43d270:	ldp	x29, x30, [sp], #112
  43d274:	ret
  43d278:	ldrb	w0, [x2, #1]
  43d27c:	cmp	w0, #0x72
  43d280:	b.eq	43d508 <_obstack_memory_used@@Base+0x36a0>  // b.none
  43d284:	cmp	w0, #0x70
  43d288:	b.ne	43d110 <_obstack_memory_used@@Base+0x32a8>  // b.any
  43d28c:	add	x2, x2, #0x2
  43d290:	str	x2, [x19, #24]
  43d294:	mov	x0, x19
  43d298:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43d29c:	mov	x2, x0
  43d2a0:	mov	x3, #0x0                   	// #0
  43d2a4:	mov	x0, x19
  43d2a8:	mov	w1, #0x4b                  	// #75
  43d2ac:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d2b0:	mov	x20, x0
  43d2b4:	b	43d250 <_obstack_memory_used@@Base+0x33e8>
  43d2b8:	mov	x0, x19
  43d2bc:	bl	440660 <_obstack_memory_used@@Base+0x67f8>
  43d2c0:	mov	x20, x0
  43d2c4:	b	43d250 <_obstack_memory_used@@Base+0x33e8>
  43d2c8:	cmp	w0, #0x6f
  43d2cc:	b.ne	43d2e8 <_obstack_memory_used@@Base+0x3480>  // b.any
  43d2d0:	ldrb	w0, [x2, #1]
  43d2d4:	cmp	w0, #0x6e
  43d2d8:	b.ne	43d110 <_obstack_memory_used@@Base+0x32a8>  // b.any
  43d2dc:	add	x2, x2, #0x2
  43d2e0:	str	x2, [x19, #24]
  43d2e4:	b	43d1ac <_obstack_memory_used@@Base+0x3344>
  43d2e8:	cmp	w0, #0x69
  43d2ec:	mov	w1, #0x74                  	// #116
  43d2f0:	ccmp	w0, w1, #0x4, ne  // ne = any
  43d2f4:	b.ne	43d110 <_obstack_memory_used@@Base+0x32a8>  // b.any
  43d2f8:	ldrb	w1, [x2, #1]
  43d2fc:	cmp	w1, #0x6c
  43d300:	b.ne	43d110 <_obstack_memory_used@@Base+0x32a8>  // b.any
  43d304:	add	x1, x2, #0x2
  43d308:	str	x1, [x19, #24]
  43d30c:	cmp	w0, #0x74
  43d310:	mov	x20, #0x0                   	// #0
  43d314:	b.eq	43d658 <_obstack_memory_used@@Base+0x37f0>  // b.none
  43d318:	ldrb	w0, [x1, #1]
  43d31c:	cbz	w0, 43d178 <_obstack_memory_used@@Base+0x3310>
  43d320:	mov	w1, #0x45                  	// #69
  43d324:	mov	x0, x19
  43d328:	bl	43d098 <_obstack_memory_used@@Base+0x3230>
  43d32c:	mov	x3, x0
  43d330:	mov	x2, x20
  43d334:	mov	x0, x19
  43d338:	mov	w1, #0x31                  	// #49
  43d33c:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d340:	mov	x20, x0
  43d344:	b	43d250 <_obstack_memory_used@@Base+0x33e8>
  43d348:	mov	x0, x19
  43d34c:	bl	43c7e0 <_obstack_memory_used@@Base+0x2978>
  43d350:	mov	x20, x0
  43d354:	b	43d250 <_obstack_memory_used@@Base+0x33e8>
  43d358:	add	x0, x2, #0x2
  43d35c:	str	x0, [x19, #24]
  43d360:	ldrb	w0, [x2, #2]
  43d364:	cmp	w0, #0x54
  43d368:	b.eq	43d4f8 <_obstack_memory_used@@Base+0x3690>  // b.none
  43d36c:	mov	x0, x19
  43d370:	bl	43c768 <_obstack_memory_used@@Base+0x2900>
  43d374:	mvn	x1, x0
  43d378:	tst	x1, #0x7fffffff
  43d37c:	b.eq	43d178 <_obstack_memory_used@@Base+0x3310>  // b.none
  43d380:	add	w0, w0, #0x1
  43d384:	ldp	w1, w2, [x19, #40]
  43d388:	cmp	w1, w2
  43d38c:	b.ge	43d178 <_obstack_memory_used@@Base+0x3310>  // b.tcont
  43d390:	mov	w3, #0x18                  	// #24
  43d394:	add	w4, w1, #0x1
  43d398:	ldr	x2, [x19, #32]
  43d39c:	smull	x1, w1, w3
  43d3a0:	mov	w3, #0x6                   	// #6
  43d3a4:	sxtw	x0, w0
  43d3a8:	add	x20, x2, x1
  43d3ac:	str	wzr, [x20, #4]
  43d3b0:	str	w4, [x19, #40]
  43d3b4:	str	w3, [x2, x1]
  43d3b8:	str	x0, [x20, #8]
  43d3bc:	b	43d1cc <_obstack_memory_used@@Base+0x3364>
  43d3c0:	ldr	x2, [x20, #8]
  43d3c4:	ldr	w0, [x19, #72]
  43d3c8:	ldr	w1, [x2, #16]
  43d3cc:	ldr	x26, [x2]
  43d3d0:	sub	w1, w1, #0x2
  43d3d4:	add	w0, w0, w1
  43d3d8:	str	w0, [x19, #72]
  43d3dc:	ldrb	w1, [x26]
  43d3e0:	cmp	w1, #0x73
  43d3e4:	b.eq	43d4d4 <_obstack_memory_used@@Base+0x366c>  // b.none
  43d3e8:	str	x27, [sp, #80]
  43d3ec:	ldr	w27, [x2, #20]
  43d3f0:	cmp	w27, #0x1
  43d3f4:	b.eq	43d5a0 <_obstack_memory_used@@Base+0x3738>  // b.none
  43d3f8:	b.le	43d57c <_obstack_memory_used@@Base+0x3714>
  43d3fc:	cmp	w27, #0x2
  43d400:	b.eq	43d6c0 <_obstack_memory_used@@Base+0x3858>  // b.none
  43d404:	cmp	w27, #0x3
  43d408:	b.ne	43d170 <_obstack_memory_used@@Base+0x3308>  // b.any
  43d40c:	cmp	w1, #0x71
  43d410:	b.eq	43d674 <_obstack_memory_used@@Base+0x380c>  // b.none
  43d414:	ldrb	w0, [x26]
  43d418:	cmp	w0, #0x66
  43d41c:	b.eq	43d844 <_obstack_memory_used@@Base+0x39dc>  // b.none
  43d420:	cmp	w0, #0x6e
  43d424:	b.ne	43d6b0 <_obstack_memory_used@@Base+0x3848>  // b.any
  43d428:	ldrb	w0, [x26, #1]
  43d42c:	mov	w1, #0x61                  	// #97
  43d430:	cmp	w0, #0x77
  43d434:	ccmp	w0, w1, #0x4, ne  // ne = any
  43d438:	b.ne	43d6b0 <_obstack_memory_used@@Base+0x3848>  // b.any
  43d43c:	mov	w1, #0x5f                  	// #95
  43d440:	mov	x0, x19
  43d444:	bl	43d098 <_obstack_memory_used@@Base+0x3230>
  43d448:	mov	x26, x0
  43d44c:	mov	x0, x19
  43d450:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43d454:	ldr	x1, [x19, #24]
  43d458:	mov	x27, x0
  43d45c:	ldrb	w0, [x1]
  43d460:	cmp	w0, #0x45
  43d464:	b.eq	43d8a4 <_obstack_memory_used@@Base+0x3a3c>  // b.none
  43d468:	cmp	w0, #0x70
  43d46c:	b.eq	43d87c <_obstack_memory_used@@Base+0x3a14>  // b.none
  43d470:	cmp	w0, #0x69
  43d474:	b.ne	43d6b0 <_obstack_memory_used@@Base+0x3848>  // b.any
  43d478:	ldrb	w0, [x1, #1]
  43d47c:	cmp	w0, #0x6c
  43d480:	b.ne	43d6b0 <_obstack_memory_used@@Base+0x3848>  // b.any
  43d484:	mov	x0, x19
  43d488:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43d48c:	mov	x3, x0
  43d490:	mov	x2, x27
  43d494:	mov	w1, #0x3c                  	// #60
  43d498:	mov	x0, x19
  43d49c:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d4a0:	mov	x2, x26
  43d4a4:	mov	x3, x0
  43d4a8:	mov	w1, #0x3b                  	// #59
  43d4ac:	mov	x0, x19
  43d4b0:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d4b4:	mov	x3, x0
  43d4b8:	mov	x2, x20
  43d4bc:	mov	x0, x19
  43d4c0:	mov	w1, #0x3a                  	// #58
  43d4c4:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d4c8:	mov	x20, x0
  43d4cc:	ldr	x27, [sp, #80]
  43d4d0:	b	43d250 <_obstack_memory_used@@Base+0x33e8>
  43d4d4:	ldrb	w0, [x26, #1]
  43d4d8:	cmp	w0, #0x74
  43d4dc:	b.ne	43d3e8 <_obstack_memory_used@@Base+0x3580>  // b.any
  43d4e0:	ldrb	w0, [x26, #2]
  43d4e4:	cbnz	w0, 43d3e8 <_obstack_memory_used@@Base+0x3580>
  43d4e8:	mov	x0, x19
  43d4ec:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43d4f0:	mov	x3, x0
  43d4f4:	b	43d5e4 <_obstack_memory_used@@Base+0x377c>
  43d4f8:	add	x2, x2, #0x3
  43d4fc:	mov	w0, #0x0                   	// #0
  43d500:	str	x2, [x19, #24]
  43d504:	b	43d384 <_obstack_memory_used@@Base+0x351c>
  43d508:	add	x2, x2, #0x2
  43d50c:	str	x2, [x19, #24]
  43d510:	mov	x0, x19
  43d514:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43d518:	mov	x20, x0
  43d51c:	mov	x0, x19
  43d520:	bl	440180 <_obstack_memory_used@@Base+0x6318>
  43d524:	ldr	x1, [x19, #24]
  43d528:	mov	x26, x0
  43d52c:	mov	x3, x26
  43d530:	ldrb	w0, [x1]
  43d534:	cmp	w0, #0x49
  43d538:	b.ne	43d564 <_obstack_memory_used@@Base+0x36fc>  // b.any
  43d53c:	add	x1, x1, #0x1
  43d540:	str	x1, [x19, #24]
  43d544:	mov	x0, x19
  43d548:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43d54c:	mov	x3, x0
  43d550:	mov	x2, x26
  43d554:	mov	x0, x19
  43d558:	mov	w1, #0x4                   	// #4
  43d55c:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d560:	mov	x3, x0
  43d564:	mov	x2, x20
  43d568:	mov	x0, x19
  43d56c:	mov	w1, #0x1                   	// #1
  43d570:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d574:	mov	x20, x0
  43d578:	b	43d250 <_obstack_memory_used@@Base+0x33e8>
  43d57c:	cbnz	w27, 43d170 <_obstack_memory_used@@Base+0x3308>
  43d580:	ldr	x27, [sp, #80]
  43d584:	b	43d154 <_obstack_memory_used@@Base+0x32ec>
  43d588:	cmp	w0, #0x1
  43d58c:	b.ne	43d178 <_obstack_memory_used@@Base+0x3310>  // b.any
  43d590:	mov	x0, x19
  43d594:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43d598:	mov	x3, x0
  43d59c:	b	43d5e4 <_obstack_memory_used@@Base+0x377c>
  43d5a0:	ldrb	w0, [x26]
  43d5a4:	cmp	w0, #0x70
  43d5a8:	ccmp	w0, w24, #0x4, ne  // ne = any
  43d5ac:	b.eq	43d628 <_obstack_memory_used@@Base+0x37c0>  // b.none
  43d5b0:	mov	w27, #0x0                   	// #0
  43d5b4:	cmp	w1, #0x73
  43d5b8:	b.ne	43d5fc <_obstack_memory_used@@Base+0x3794>  // b.any
  43d5bc:	ldrb	w0, [x26, #1]
  43d5c0:	cmp	w0, #0x50
  43d5c4:	b.ne	43d5fc <_obstack_memory_used@@Base+0x3794>  // b.any
  43d5c8:	ldrb	w0, [x26, #2]
  43d5cc:	cbnz	w0, 43d5fc <_obstack_memory_used@@Base+0x3794>
  43d5d0:	mov	x0, x19
  43d5d4:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43d5d8:	mov	x3, x0
  43d5dc:	cbnz	w27, 43d60c <_obstack_memory_used@@Base+0x37a4>
  43d5e0:	ldr	x27, [sp, #80]
  43d5e4:	mov	x2, x20
  43d5e8:	mov	x0, x19
  43d5ec:	mov	w1, #0x37                  	// #55
  43d5f0:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d5f4:	mov	x20, x0
  43d5f8:	b	43d250 <_obstack_memory_used@@Base+0x33e8>
  43d5fc:	mov	x0, x19
  43d600:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43d604:	mov	x3, x0
  43d608:	cbz	w27, 43d5e0 <_obstack_memory_used@@Base+0x3778>
  43d60c:	mov	x2, x3
  43d610:	mov	x0, x19
  43d614:	mov	w1, #0x39                  	// #57
  43d618:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d61c:	mov	x3, x0
  43d620:	ldr	x27, [sp, #80]
  43d624:	b	43d5e4 <_obstack_memory_used@@Base+0x377c>
  43d628:	ldrb	w2, [x26, #1]
  43d62c:	cmp	w2, w0
  43d630:	b.ne	43d5b0 <_obstack_memory_used@@Base+0x3748>  // b.any
  43d634:	ldr	x0, [x19, #24]
  43d638:	ldrb	w2, [x0]
  43d63c:	cmp	w2, #0x5f
  43d640:	b.ne	43d5b4 <_obstack_memory_used@@Base+0x374c>  // b.any
  43d644:	add	x0, x0, #0x1
  43d648:	str	x0, [x19, #24]
  43d64c:	mov	w27, #0x0                   	// #0
  43d650:	ldrb	w1, [x26]
  43d654:	b	43d5b4 <_obstack_memory_used@@Base+0x374c>
  43d658:	mov	x0, x19
  43d65c:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43d660:	ldr	x1, [x19, #24]
  43d664:	mov	x20, x0
  43d668:	ldrb	w0, [x1, #1]
  43d66c:	cbnz	w0, 43d320 <_obstack_memory_used@@Base+0x34b8>
  43d670:	b	43d178 <_obstack_memory_used@@Base+0x3310>
  43d674:	ldrb	w0, [x26, #1]
  43d678:	cmp	w0, #0x75
  43d67c:	b.ne	43d414 <_obstack_memory_used@@Base+0x35ac>  // b.any
  43d680:	ldrb	w0, [x26, #2]
  43d684:	cbnz	w0, 43d414 <_obstack_memory_used@@Base+0x35ac>
  43d688:	mov	x0, x19
  43d68c:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43d690:	mov	x26, x0
  43d694:	mov	x0, x19
  43d698:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43d69c:	mov	x27, x0
  43d6a0:	mov	x0, x19
  43d6a4:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43d6a8:	mov	x3, x0
  43d6ac:	cbnz	x0, 43d490 <_obstack_memory_used@@Base+0x3628>
  43d6b0:	mov	x20, #0x0                   	// #0
  43d6b4:	ldr	x27, [sp, #80]
  43d6b8:	str	w25, [x19, #76]
  43d6bc:	b	43d180 <_obstack_memory_used@@Base+0x3318>
  43d6c0:	ldr	x0, [x20, #8]
  43d6c4:	ldr	x0, [x0]
  43d6c8:	ldrb	w1, [x0, #1]
  43d6cc:	cmp	w1, #0x63
  43d6d0:	b.eq	43d804 <_obstack_memory_used@@Base+0x399c>  // b.none
  43d6d4:	ldrb	w0, [x26]
  43d6d8:	cmp	w0, #0x66
  43d6dc:	b.eq	43d834 <_obstack_memory_used@@Base+0x39cc>  // b.none
  43d6e0:	mov	x0, x19
  43d6e4:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43d6e8:	mov	x27, x0
  43d6ec:	ldrb	w1, [x26]
  43d6f0:	cmp	w1, #0x63
  43d6f4:	b.ne	43d720 <_obstack_memory_used@@Base+0x38b8>  // b.any
  43d6f8:	ldrb	w0, [x26, #1]
  43d6fc:	cmp	w0, #0x6c
  43d700:	b.ne	43d720 <_obstack_memory_used@@Base+0x38b8>  // b.any
  43d704:	ldrb	w0, [x26, #2]
  43d708:	cbnz	w0, 43d720 <_obstack_memory_used@@Base+0x38b8>
  43d70c:	mov	x0, x19
  43d710:	mov	w1, #0x45                  	// #69
  43d714:	bl	43d098 <_obstack_memory_used@@Base+0x3230>
  43d718:	mov	x26, x0
  43d71c:	b	43d758 <_obstack_memory_used@@Base+0x38f0>
  43d720:	cmp	w1, #0x64
  43d724:	b.ne	43d78c <_obstack_memory_used@@Base+0x3924>  // b.any
  43d728:	ldrb	w0, [x26, #1]
  43d72c:	cmp	w0, #0x74
  43d730:	b.ne	43d78c <_obstack_memory_used@@Base+0x3924>  // b.any
  43d734:	ldrb	w0, [x26, #2]
  43d738:	cbnz	w0, 43d78c <_obstack_memory_used@@Base+0x3924>
  43d73c:	mov	x0, x19
  43d740:	bl	440180 <_obstack_memory_used@@Base+0x6318>
  43d744:	ldr	x1, [x19, #24]
  43d748:	mov	x26, x0
  43d74c:	ldrb	w0, [x1]
  43d750:	cmp	w0, #0x49
  43d754:	b.eq	43d850 <_obstack_memory_used@@Base+0x39e8>  // b.none
  43d758:	mov	x2, x27
  43d75c:	mov	x3, x26
  43d760:	mov	w1, #0x39                  	// #57
  43d764:	mov	x0, x19
  43d768:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d76c:	mov	x3, x0
  43d770:	mov	x2, x20
  43d774:	mov	x0, x19
  43d778:	mov	w1, #0x38                  	// #56
  43d77c:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d780:	mov	x20, x0
  43d784:	ldr	x27, [sp, #80]
  43d788:	b	43d250 <_obstack_memory_used@@Base+0x33e8>
  43d78c:	cmp	w1, #0x70
  43d790:	b.ne	43d7a8 <_obstack_memory_used@@Base+0x3940>  // b.any
  43d794:	ldrb	w0, [x26, #1]
  43d798:	cmp	w0, #0x74
  43d79c:	b.ne	43d7a8 <_obstack_memory_used@@Base+0x3940>  // b.any
  43d7a0:	ldrb	w0, [x26, #2]
  43d7a4:	cbz	w0, 43d73c <_obstack_memory_used@@Base+0x38d4>
  43d7a8:	mov	x0, x19
  43d7ac:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43d7b0:	mov	x26, x0
  43d7b4:	b	43d758 <_obstack_memory_used@@Base+0x38f0>
  43d7b8:	add	x2, x2, #0x1
  43d7bc:	str	x2, [x0, #24]
  43d7c0:	ldp	x19, x20, [sp, #16]
  43d7c4:	mov	x3, #0x0                   	// #0
  43d7c8:	ldp	x29, x30, [sp], #112
  43d7cc:	mov	w1, #0x2e                  	// #46
  43d7d0:	mov	x2, #0x0                   	// #0
  43d7d4:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d7d8:	ldr	x0, [x19, #24]
  43d7dc:	ldrb	w1, [x0]
  43d7e0:	cmp	w1, #0x5f
  43d7e4:	b.ne	43d590 <_obstack_memory_used@@Base+0x3728>  // b.any
  43d7e8:	add	x0, x0, #0x1
  43d7ec:	str	x0, [x19, #24]
  43d7f0:	mov	w1, #0x45                  	// #69
  43d7f4:	mov	x0, x19
  43d7f8:	bl	43d098 <_obstack_memory_used@@Base+0x3230>
  43d7fc:	mov	x3, x0
  43d800:	b	43d5e4 <_obstack_memory_used@@Base+0x377c>
  43d804:	ldrb	w0, [x0]
  43d808:	sub	w1, w0, #0x72
  43d80c:	sub	w0, w0, #0x63
  43d810:	and	w1, w1, #0xff
  43d814:	and	w0, w0, #0xff
  43d818:	cmp	w1, #0x1
  43d81c:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  43d820:	b.hi	43d6d4 <_obstack_memory_used@@Base+0x386c>  // b.pmore
  43d824:	mov	x0, x19
  43d828:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43d82c:	mov	x27, x0
  43d830:	b	43d6ec <_obstack_memory_used@@Base+0x3884>
  43d834:	mov	x0, x19
  43d838:	bl	43fab8 <_obstack_memory_used@@Base+0x5c50>
  43d83c:	mov	x27, x0
  43d840:	b	43d6ec <_obstack_memory_used@@Base+0x3884>
  43d844:	mov	x0, x19
  43d848:	bl	43fab8 <_obstack_memory_used@@Base+0x5c50>
  43d84c:	b	43d690 <_obstack_memory_used@@Base+0x3828>
  43d850:	add	x1, x1, #0x1
  43d854:	str	x1, [x19, #24]
  43d858:	mov	x0, x19
  43d85c:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43d860:	mov	x3, x0
  43d864:	mov	x2, x26
  43d868:	mov	x0, x19
  43d86c:	mov	w1, #0x4                   	// #4
  43d870:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d874:	mov	x26, x0
  43d878:	b	43d758 <_obstack_memory_used@@Base+0x38f0>
  43d87c:	ldrb	w0, [x1, #1]
  43d880:	cmp	w0, #0x69
  43d884:	b.ne	43d6b0 <_obstack_memory_used@@Base+0x3848>  // b.any
  43d888:	add	x1, x1, #0x2
  43d88c:	str	x1, [x19, #24]
  43d890:	mov	x0, x19
  43d894:	mov	w1, #0x45                  	// #69
  43d898:	bl	43d098 <_obstack_memory_used@@Base+0x3230>
  43d89c:	mov	x3, x0
  43d8a0:	b	43d490 <_obstack_memory_used@@Base+0x3628>
  43d8a4:	add	x1, x1, #0x1
  43d8a8:	mov	x3, #0x0                   	// #0
  43d8ac:	str	x1, [x19, #24]
  43d8b0:	b	43d490 <_obstack_memory_used@@Base+0x3628>
  43d8b4:	nop
  43d8b8:	ldr	x2, [x0, #24]
  43d8bc:	ldrb	w1, [x2]
  43d8c0:	cmp	w1, #0x4c
  43d8c4:	b.eq	43da54 <_obstack_memory_used@@Base+0x3bec>  // b.none
  43d8c8:	cmp	w1, #0x54
  43d8cc:	b.eq	43dad8 <_obstack_memory_used@@Base+0x3c70>  // b.none
  43d8d0:	stp	x29, x30, [sp, #-48]!
  43d8d4:	cmp	w1, #0x73
  43d8d8:	mov	x29, sp
  43d8dc:	stp	x19, x20, [sp, #16]
  43d8e0:	mov	x19, x0
  43d8e4:	b.eq	43d99c <_obstack_memory_used@@Base+0x3b34>  // b.none
  43d8e8:	cmp	w1, #0x66
  43d8ec:	b.eq	43d930 <_obstack_memory_used@@Base+0x3ac8>  // b.none
  43d8f0:	sub	w3, w1, #0x30
  43d8f4:	and	w3, w3, #0xff
  43d8f8:	cmp	w3, #0x9
  43d8fc:	b.hi	43da58 <_obstack_memory_used@@Base+0x3bf0>  // b.pmore
  43d900:	mov	x0, x19
  43d904:	bl	440180 <_obstack_memory_used@@Base+0x6318>
  43d908:	mov	x20, x0
  43d90c:	cbz	x0, 43da40 <_obstack_memory_used@@Base+0x3bd8>
  43d910:	ldr	x0, [x19, #24]
  43d914:	ldrb	w1, [x0]
  43d918:	cmp	w1, #0x49
  43d91c:	b.eq	43dbb0 <_obstack_memory_used@@Base+0x3d48>  // b.none
  43d920:	mov	x0, x20
  43d924:	ldp	x19, x20, [sp, #16]
  43d928:	ldp	x29, x30, [sp], #48
  43d92c:	ret
  43d930:	ldrb	w1, [x2, #1]
  43d934:	cmp	w1, #0x70
  43d938:	b.eq	43d9d8 <_obstack_memory_used@@Base+0x3b70>  // b.none
  43d93c:	mov	x0, x19
  43d940:	bl	43fab8 <_obstack_memory_used@@Base+0x5c50>
  43d944:	mov	x20, x0
  43d948:	cbz	x0, 43da40 <_obstack_memory_used@@Base+0x3bd8>
  43d94c:	ldr	w0, [x0]
  43d950:	cmp	w0, #0x32
  43d954:	b.eq	43dadc <_obstack_memory_used@@Base+0x3c74>  // b.none
  43d958:	cmp	w0, #0x34
  43d95c:	b.eq	43df08 <_obstack_memory_used@@Base+0x40a0>  // b.none
  43d960:	b.hi	43da40 <_obstack_memory_used@@Base+0x3bd8>  // b.pmore
  43d964:	cmp	w0, #0x33
  43d968:	b.ne	43da40 <_obstack_memory_used@@Base+0x3bd8>  // b.any
  43d96c:	ldr	w0, [x20, #8]
  43d970:	cmp	w0, #0x2
  43d974:	b.eq	43da40 <_obstack_memory_used@@Base+0x3bd8>  // b.none
  43d978:	b.gt	43da40 <_obstack_memory_used@@Base+0x3bd8>
  43d97c:	cbnz	w0, 43dca4 <_obstack_memory_used@@Base+0x3e3c>
  43d980:	mov	x2, x20
  43d984:	mov	x0, x19
  43d988:	ldp	x19, x20, [sp, #16]
  43d98c:	mov	x3, #0x0                   	// #0
  43d990:	ldp	x29, x30, [sp], #48
  43d994:	mov	w1, #0x36                  	// #54
  43d998:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d99c:	ldrb	w1, [x2, #1]
  43d9a0:	cmp	w1, #0x72
  43d9a4:	b.eq	43dbdc <_obstack_memory_used@@Base+0x3d74>  // b.none
  43d9a8:	cmp	w1, #0x70
  43d9ac:	b.ne	43d93c <_obstack_memory_used@@Base+0x3ad4>  // b.any
  43d9b0:	add	x2, x2, #0x2
  43d9b4:	str	x2, [x0, #24]
  43d9b8:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43d9bc:	mov	x2, x0
  43d9c0:	mov	x0, x19
  43d9c4:	mov	x3, #0x0                   	// #0
  43d9c8:	ldp	x19, x20, [sp, #16]
  43d9cc:	mov	w1, #0x4b                  	// #75
  43d9d0:	ldp	x29, x30, [sp], #48
  43d9d4:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43d9d8:	add	x1, x2, #0x2
  43d9dc:	str	x1, [x0, #24]
  43d9e0:	ldrb	w1, [x2, #2]
  43d9e4:	cmp	w1, #0x54
  43d9e8:	b.eq	43dd68 <_obstack_memory_used@@Base+0x3f00>  // b.none
  43d9ec:	bl	43c768 <_obstack_memory_used@@Base+0x2900>
  43d9f0:	mvn	x1, x0
  43d9f4:	add	w0, w0, #0x1
  43d9f8:	tst	x1, #0x7fffffff
  43d9fc:	b.eq	43da40 <_obstack_memory_used@@Base+0x3bd8>  // b.none
  43da00:	ldp	w1, w2, [x19, #40]
  43da04:	cmp	w1, w2
  43da08:	b.ge	43da40 <_obstack_memory_used@@Base+0x3bd8>  // b.tcont
  43da0c:	mov	w3, #0x18                  	// #24
  43da10:	add	w4, w1, #0x1
  43da14:	ldr	x2, [x19, #32]
  43da18:	smull	x1, w1, w3
  43da1c:	mov	w3, #0x6                   	// #6
  43da20:	sxtw	x0, w0
  43da24:	add	x20, x2, x1
  43da28:	str	wzr, [x20, #4]
  43da2c:	str	w4, [x19, #40]
  43da30:	str	w3, [x2, x1]
  43da34:	str	x0, [x20, #8]
  43da38:	b	43d920 <_obstack_memory_used@@Base+0x3ab8>
  43da3c:	ldp	x21, x22, [sp, #32]
  43da40:	mov	x20, #0x0                   	// #0
  43da44:	mov	x0, x20
  43da48:	ldp	x19, x20, [sp, #16]
  43da4c:	ldp	x29, x30, [sp], #48
  43da50:	ret
  43da54:	b	440660 <_obstack_memory_used@@Base+0x67f8>
  43da58:	cmp	w1, #0x6f
  43da5c:	b.ne	43da78 <_obstack_memory_used@@Base+0x3c10>  // b.any
  43da60:	ldrb	w0, [x2, #1]
  43da64:	cmp	w0, #0x6e
  43da68:	b.ne	43d93c <_obstack_memory_used@@Base+0x3ad4>  // b.any
  43da6c:	add	x2, x2, #0x2
  43da70:	str	x2, [x19, #24]
  43da74:	b	43d900 <_obstack_memory_used@@Base+0x3a98>
  43da78:	cmp	w1, #0x69
  43da7c:	mov	w3, #0x74                  	// #116
  43da80:	ccmp	w1, w3, #0x4, ne  // ne = any
  43da84:	b.ne	43d93c <_obstack_memory_used@@Base+0x3ad4>  // b.any
  43da88:	ldrb	w3, [x2, #1]
  43da8c:	cmp	w3, #0x6c
  43da90:	b.ne	43d93c <_obstack_memory_used@@Base+0x3ad4>  // b.any
  43da94:	add	x3, x2, #0x2
  43da98:	str	x3, [x0, #24]
  43da9c:	cmp	w1, #0x74
  43daa0:	mov	x20, #0x0                   	// #0
  43daa4:	b.eq	43dc94 <_obstack_memory_used@@Base+0x3e2c>  // b.none
  43daa8:	ldrb	w0, [x3, #1]
  43daac:	cbz	w0, 43da40 <_obstack_memory_used@@Base+0x3bd8>
  43dab0:	mov	x0, x19
  43dab4:	mov	w1, #0x45                  	// #69
  43dab8:	bl	43d098 <_obstack_memory_used@@Base+0x3230>
  43dabc:	mov	x3, x0
  43dac0:	mov	x2, x20
  43dac4:	mov	x0, x19
  43dac8:	ldp	x19, x20, [sp, #16]
  43dacc:	mov	w1, #0x31                  	// #49
  43dad0:	ldp	x29, x30, [sp], #48
  43dad4:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43dad8:	b	43c7e0 <_obstack_memory_used@@Base+0x2978>
  43dadc:	ldr	x2, [x20, #8]
  43dae0:	stp	x21, x22, [sp, #32]
  43dae4:	ldr	w0, [x19, #72]
  43dae8:	ldr	w1, [x2, #16]
  43daec:	ldr	x21, [x2]
  43daf0:	sub	w1, w1, #0x2
  43daf4:	add	w0, w0, w1
  43daf8:	str	w0, [x19, #72]
  43dafc:	ldrb	w1, [x21]
  43db00:	cmp	w1, #0x73
  43db04:	b.eq	43dc2c <_obstack_memory_used@@Base+0x3dc4>  // b.none
  43db08:	ldr	w22, [x2, #20]
  43db0c:	cmp	w22, #0x1
  43db10:	b.eq	43dcdc <_obstack_memory_used@@Base+0x3e74>  // b.none
  43db14:	b.le	43dcd0 <_obstack_memory_used@@Base+0x3e68>
  43db18:	cmp	w22, #0x2
  43db1c:	b.eq	43dd94 <_obstack_memory_used@@Base+0x3f2c>  // b.none
  43db20:	cmp	w22, #0x3
  43db24:	b.ne	43da3c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  43db28:	cmp	w1, #0x71
  43db2c:	b.ne	43de24 <_obstack_memory_used@@Base+0x3fbc>  // b.any
  43db30:	ldrb	w0, [x21, #1]
  43db34:	cmp	w0, #0x75
  43db38:	b.ne	43de24 <_obstack_memory_used@@Base+0x3fbc>  // b.any
  43db3c:	ldrb	w0, [x21, #2]
  43db40:	cbnz	w0, 43de24 <_obstack_memory_used@@Base+0x3fbc>
  43db44:	mov	x0, x19
  43db48:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43db4c:	mov	x21, x0
  43db50:	mov	x0, x19
  43db54:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43db58:	mov	x22, x0
  43db5c:	mov	x0, x19
  43db60:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43db64:	mov	x3, x0
  43db68:	cbz	x0, 43da3c <_obstack_memory_used@@Base+0x3bd4>
  43db6c:	mov	x2, x22
  43db70:	mov	x0, x19
  43db74:	mov	w1, #0x3c                  	// #60
  43db78:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43db7c:	mov	x2, x21
  43db80:	mov	x3, x0
  43db84:	mov	w1, #0x3b                  	// #59
  43db88:	mov	x0, x19
  43db8c:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43db90:	mov	x3, x0
  43db94:	mov	x2, x20
  43db98:	mov	x0, x19
  43db9c:	ldp	x19, x20, [sp, #16]
  43dba0:	mov	w1, #0x3a                  	// #58
  43dba4:	ldp	x21, x22, [sp, #32]
  43dba8:	ldp	x29, x30, [sp], #48
  43dbac:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43dbb0:	add	x0, x0, #0x1
  43dbb4:	str	x0, [x19, #24]
  43dbb8:	mov	x0, x19
  43dbbc:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43dbc0:	mov	x3, x0
  43dbc4:	mov	x2, x20
  43dbc8:	mov	x0, x19
  43dbcc:	ldp	x19, x20, [sp, #16]
  43dbd0:	mov	w1, #0x4                   	// #4
  43dbd4:	ldp	x29, x30, [sp], #48
  43dbd8:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43dbdc:	add	x2, x2, #0x2
  43dbe0:	stp	x21, x22, [sp, #32]
  43dbe4:	str	x2, [x0, #24]
  43dbe8:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43dbec:	mov	x20, x0
  43dbf0:	mov	x0, x19
  43dbf4:	bl	440180 <_obstack_memory_used@@Base+0x6318>
  43dbf8:	ldr	x1, [x19, #24]
  43dbfc:	mov	x21, x0
  43dc00:	mov	x3, x21
  43dc04:	ldrb	w0, [x1]
  43dc08:	cmp	w0, #0x49
  43dc0c:	b.eq	43dc68 <_obstack_memory_used@@Base+0x3e00>  // b.none
  43dc10:	mov	x2, x20
  43dc14:	mov	x0, x19
  43dc18:	ldp	x19, x20, [sp, #16]
  43dc1c:	mov	w1, #0x1                   	// #1
  43dc20:	ldp	x21, x22, [sp, #32]
  43dc24:	ldp	x29, x30, [sp], #48
  43dc28:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43dc2c:	ldrb	w0, [x21, #1]
  43dc30:	cmp	w0, #0x74
  43dc34:	b.ne	43db08 <_obstack_memory_used@@Base+0x3ca0>  // b.any
  43dc38:	ldrb	w0, [x21, #2]
  43dc3c:	cbnz	w0, 43db08 <_obstack_memory_used@@Base+0x3ca0>
  43dc40:	mov	x0, x19
  43dc44:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43dc48:	mov	x2, x20
  43dc4c:	mov	x3, x0
  43dc50:	mov	x0, x19
  43dc54:	mov	w1, #0x37                  	// #55
  43dc58:	ldp	x19, x20, [sp, #16]
  43dc5c:	ldp	x21, x22, [sp, #32]
  43dc60:	ldp	x29, x30, [sp], #48
  43dc64:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43dc68:	add	x1, x1, #0x1
  43dc6c:	str	x1, [x19, #24]
  43dc70:	mov	x0, x19
  43dc74:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43dc78:	mov	x3, x0
  43dc7c:	mov	x2, x21
  43dc80:	mov	x0, x19
  43dc84:	mov	w1, #0x4                   	// #4
  43dc88:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43dc8c:	mov	x3, x0
  43dc90:	b	43dc10 <_obstack_memory_used@@Base+0x3da8>
  43dc94:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43dc98:	mov	x20, x0
  43dc9c:	ldr	x3, [x19, #24]
  43dca0:	b	43daa8 <_obstack_memory_used@@Base+0x3c40>
  43dca4:	cmp	w0, #0x1
  43dca8:	b.ne	43da40 <_obstack_memory_used@@Base+0x3bd8>  // b.any
  43dcac:	mov	x0, x19
  43dcb0:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43dcb4:	mov	x3, x0
  43dcb8:	mov	x2, x20
  43dcbc:	mov	x0, x19
  43dcc0:	ldp	x19, x20, [sp, #16]
  43dcc4:	mov	w1, #0x37                  	// #55
  43dcc8:	ldp	x29, x30, [sp], #48
  43dccc:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43dcd0:	cbnz	w22, 43da3c <_obstack_memory_used@@Base+0x3bd4>
  43dcd4:	ldp	x21, x22, [sp, #32]
  43dcd8:	b	43d980 <_obstack_memory_used@@Base+0x3b18>
  43dcdc:	ldrb	w0, [x21]
  43dce0:	mov	w2, #0x6d                  	// #109
  43dce4:	cmp	w0, #0x70
  43dce8:	ccmp	w0, w2, #0x4, ne  // ne = any
  43dcec:	b.ne	43dcfc <_obstack_memory_used@@Base+0x3e94>  // b.any
  43dcf0:	ldrb	w2, [x21, #1]
  43dcf4:	cmp	w2, w0
  43dcf8:	b.eq	43dd34 <_obstack_memory_used@@Base+0x3ecc>  // b.none
  43dcfc:	mov	w22, #0x0                   	// #0
  43dd00:	cmp	w1, #0x73
  43dd04:	b.ne	43dd58 <_obstack_memory_used@@Base+0x3ef0>  // b.any
  43dd08:	ldrb	w0, [x21, #1]
  43dd0c:	cmp	w0, #0x50
  43dd10:	b.ne	43dd58 <_obstack_memory_used@@Base+0x3ef0>  // b.any
  43dd14:	ldrb	w0, [x21, #2]
  43dd18:	cbnz	w0, 43dd58 <_obstack_memory_used@@Base+0x3ef0>
  43dd1c:	mov	x0, x19
  43dd20:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43dd24:	mov	x3, x0
  43dd28:	cbnz	w22, 43dd78 <_obstack_memory_used@@Base+0x3f10>
  43dd2c:	ldp	x21, x22, [sp, #32]
  43dd30:	b	43dcb8 <_obstack_memory_used@@Base+0x3e50>
  43dd34:	ldr	x0, [x19, #24]
  43dd38:	ldrb	w2, [x0]
  43dd3c:	cmp	w2, #0x5f
  43dd40:	b.ne	43dd00 <_obstack_memory_used@@Base+0x3e98>  // b.any
  43dd44:	add	x0, x0, #0x1
  43dd48:	str	x0, [x19, #24]
  43dd4c:	mov	w22, #0x0                   	// #0
  43dd50:	ldrb	w1, [x21]
  43dd54:	b	43dd00 <_obstack_memory_used@@Base+0x3e98>
  43dd58:	mov	x0, x19
  43dd5c:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43dd60:	mov	x3, x0
  43dd64:	b	43dd28 <_obstack_memory_used@@Base+0x3ec0>
  43dd68:	add	x2, x2, #0x3
  43dd6c:	mov	w0, #0x0                   	// #0
  43dd70:	str	x2, [x19, #24]
  43dd74:	b	43da00 <_obstack_memory_used@@Base+0x3b98>
  43dd78:	mov	x2, x3
  43dd7c:	mov	x0, x19
  43dd80:	mov	w1, #0x39                  	// #57
  43dd84:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43dd88:	mov	x3, x0
  43dd8c:	ldp	x21, x22, [sp, #32]
  43dd90:	b	43dcb8 <_obstack_memory_used@@Base+0x3e50>
  43dd94:	ldr	x0, [x20, #8]
  43dd98:	ldr	x0, [x0]
  43dd9c:	ldrb	w1, [x0, #1]
  43dda0:	cmp	w1, #0x63
  43dda4:	b.eq	43df4c <_obstack_memory_used@@Base+0x40e4>  // b.none
  43dda8:	ldrb	w0, [x21]
  43ddac:	cmp	w0, #0x66
  43ddb0:	b.eq	43df7c <_obstack_memory_used@@Base+0x4114>  // b.none
  43ddb4:	mov	x0, x19
  43ddb8:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43ddbc:	mov	x22, x0
  43ddc0:	ldrb	w1, [x21]
  43ddc4:	cmp	w1, #0x63
  43ddc8:	b.ne	43dea4 <_obstack_memory_used@@Base+0x403c>  // b.any
  43ddcc:	ldrb	w0, [x21, #1]
  43ddd0:	cmp	w0, #0x6c
  43ddd4:	b.ne	43dea4 <_obstack_memory_used@@Base+0x403c>  // b.any
  43ddd8:	ldrb	w0, [x21, #2]
  43dddc:	cbnz	w0, 43dea4 <_obstack_memory_used@@Base+0x403c>
  43dde0:	mov	x0, x19
  43dde4:	mov	w1, #0x45                  	// #69
  43dde8:	bl	43d098 <_obstack_memory_used@@Base+0x3230>
  43ddec:	mov	x21, x0
  43ddf0:	mov	x3, x21
  43ddf4:	mov	x2, x22
  43ddf8:	mov	x0, x19
  43ddfc:	mov	w1, #0x39                  	// #57
  43de00:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43de04:	mov	x3, x0
  43de08:	mov	x2, x20
  43de0c:	mov	x0, x19
  43de10:	ldp	x19, x20, [sp, #16]
  43de14:	mov	w1, #0x38                  	// #56
  43de18:	ldp	x21, x22, [sp, #32]
  43de1c:	ldp	x29, x30, [sp], #48
  43de20:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43de24:	ldrb	w0, [x21]
  43de28:	cmp	w0, #0x66
  43de2c:	b.eq	43dfa4 <_obstack_memory_used@@Base+0x413c>  // b.none
  43de30:	cmp	w0, #0x6e
  43de34:	b.ne	43da3c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  43de38:	ldrb	w0, [x21, #1]
  43de3c:	mov	w1, #0x61                  	// #97
  43de40:	cmp	w0, #0x77
  43de44:	ccmp	w0, w1, #0x4, ne  // ne = any
  43de48:	b.ne	43da3c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  43de4c:	mov	w1, #0x5f                  	// #95
  43de50:	mov	x0, x19
  43de54:	bl	43d098 <_obstack_memory_used@@Base+0x3230>
  43de58:	mov	x21, x0
  43de5c:	mov	x0, x19
  43de60:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43de64:	ldr	x1, [x19, #24]
  43de68:	mov	x22, x0
  43de6c:	ldrb	w0, [x1]
  43de70:	cmp	w0, #0x45
  43de74:	b.eq	43dfd8 <_obstack_memory_used@@Base+0x4170>  // b.none
  43de78:	cmp	w0, #0x70
  43de7c:	b.eq	43dfb0 <_obstack_memory_used@@Base+0x4148>  // b.none
  43de80:	cmp	w0, #0x69
  43de84:	b.ne	43da3c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  43de88:	ldrb	w0, [x1, #1]
  43de8c:	cmp	w0, #0x6c
  43de90:	b.ne	43da3c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  43de94:	mov	x0, x19
  43de98:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43de9c:	mov	x3, x0
  43dea0:	b	43db6c <_obstack_memory_used@@Base+0x3d04>
  43dea4:	cmp	w1, #0x64
  43dea8:	b.ne	43df34 <_obstack_memory_used@@Base+0x40cc>  // b.any
  43deac:	ldrb	w0, [x21, #1]
  43deb0:	cmp	w0, #0x74
  43deb4:	b.ne	43df34 <_obstack_memory_used@@Base+0x40cc>  // b.any
  43deb8:	ldrb	w0, [x21, #2]
  43debc:	cbnz	w0, 43df34 <_obstack_memory_used@@Base+0x40cc>
  43dec0:	mov	x0, x19
  43dec4:	bl	440180 <_obstack_memory_used@@Base+0x6318>
  43dec8:	ldr	x1, [x19, #24]
  43decc:	mov	x21, x0
  43ded0:	ldrb	w0, [x1]
  43ded4:	cmp	w0, #0x49
  43ded8:	b.ne	43ddf0 <_obstack_memory_used@@Base+0x3f88>  // b.any
  43dedc:	add	x1, x1, #0x1
  43dee0:	str	x1, [x19, #24]
  43dee4:	mov	x0, x19
  43dee8:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43deec:	mov	x3, x0
  43def0:	mov	x2, x21
  43def4:	mov	x0, x19
  43def8:	mov	w1, #0x4                   	// #4
  43defc:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43df00:	mov	x21, x0
  43df04:	b	43ddf0 <_obstack_memory_used@@Base+0x3f88>
  43df08:	ldr	x0, [x19, #24]
  43df0c:	ldrb	w1, [x0]
  43df10:	cmp	w1, #0x5f
  43df14:	b.ne	43dcac <_obstack_memory_used@@Base+0x3e44>  // b.any
  43df18:	add	x0, x0, #0x1
  43df1c:	str	x0, [x19, #24]
  43df20:	mov	w1, #0x45                  	// #69
  43df24:	mov	x0, x19
  43df28:	bl	43d098 <_obstack_memory_used@@Base+0x3230>
  43df2c:	mov	x3, x0
  43df30:	b	43dcb8 <_obstack_memory_used@@Base+0x3e50>
  43df34:	cmp	w1, #0x70
  43df38:	b.eq	43df8c <_obstack_memory_used@@Base+0x4124>  // b.none
  43df3c:	mov	x0, x19
  43df40:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43df44:	mov	x21, x0
  43df48:	b	43ddf0 <_obstack_memory_used@@Base+0x3f88>
  43df4c:	ldrb	w0, [x0]
  43df50:	sub	w1, w0, #0x63
  43df54:	sub	w0, w0, #0x72
  43df58:	and	w1, w1, #0xff
  43df5c:	and	w0, w0, #0xff
  43df60:	cmp	w1, #0x1
  43df64:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  43df68:	b.hi	43dda8 <_obstack_memory_used@@Base+0x3f40>  // b.pmore
  43df6c:	mov	x0, x19
  43df70:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43df74:	mov	x22, x0
  43df78:	b	43ddc0 <_obstack_memory_used@@Base+0x3f58>
  43df7c:	mov	x0, x19
  43df80:	bl	43fab8 <_obstack_memory_used@@Base+0x5c50>
  43df84:	mov	x22, x0
  43df88:	b	43ddc0 <_obstack_memory_used@@Base+0x3f58>
  43df8c:	ldrb	w0, [x21, #1]
  43df90:	cmp	w0, #0x74
  43df94:	b.ne	43df3c <_obstack_memory_used@@Base+0x40d4>  // b.any
  43df98:	ldrb	w0, [x21, #2]
  43df9c:	cbz	w0, 43dec0 <_obstack_memory_used@@Base+0x4058>
  43dfa0:	b	43df3c <_obstack_memory_used@@Base+0x40d4>
  43dfa4:	mov	x0, x19
  43dfa8:	bl	43fab8 <_obstack_memory_used@@Base+0x5c50>
  43dfac:	b	43db4c <_obstack_memory_used@@Base+0x3ce4>
  43dfb0:	ldrb	w0, [x1, #1]
  43dfb4:	cmp	w0, #0x69
  43dfb8:	b.ne	43da3c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  43dfbc:	add	x1, x1, #0x2
  43dfc0:	str	x1, [x19, #24]
  43dfc4:	mov	x0, x19
  43dfc8:	mov	w1, #0x45                  	// #69
  43dfcc:	bl	43d098 <_obstack_memory_used@@Base+0x3230>
  43dfd0:	mov	x3, x0
  43dfd4:	b	43db6c <_obstack_memory_used@@Base+0x3d04>
  43dfd8:	add	x1, x1, #0x1
  43dfdc:	mov	x3, #0x0                   	// #0
  43dfe0:	str	x1, [x19, #24]
  43dfe4:	b	43db6c <_obstack_memory_used@@Base+0x3d04>
  43dfe8:	ldr	x2, [x0, #24]
  43dfec:	ldrb	w1, [x2]
  43dff0:	cmp	w1, #0x4c
  43dff4:	b.eq	43e080 <_obstack_memory_used@@Base+0x4218>  // b.none
  43dff8:	stp	x29, x30, [sp, #-32]!
  43dffc:	mov	x29, sp
  43e000:	stp	x19, x20, [sp, #16]
  43e004:	mov	x19, x0
  43e008:	b.hi	43e028 <_obstack_memory_used@@Base+0x41c0>  // b.pmore
  43e00c:	sub	w1, w1, #0x49
  43e010:	and	w1, w1, #0xff
  43e014:	cmp	w1, #0x1
  43e018:	b.hi	43e070 <_obstack_memory_used@@Base+0x4208>  // b.pmore
  43e01c:	ldp	x19, x20, [sp, #16]
  43e020:	ldp	x29, x30, [sp], #32
  43e024:	b	43e158 <_obstack_memory_used@@Base+0x42f0>
  43e028:	cmp	w1, #0x58
  43e02c:	b.ne	43e070 <_obstack_memory_used@@Base+0x4208>  // b.any
  43e030:	add	x2, x2, #0x1
  43e034:	ldr	w20, [x0, #76]
  43e038:	mov	w1, #0x1                   	// #1
  43e03c:	str	x2, [x0, #24]
  43e040:	str	w1, [x0, #76]
  43e044:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43e048:	str	w20, [x19, #76]
  43e04c:	ldr	x1, [x19, #24]
  43e050:	ldrb	w2, [x1]
  43e054:	cmp	w2, #0x45
  43e058:	b.ne	43e084 <_obstack_memory_used@@Base+0x421c>  // b.any
  43e05c:	add	x1, x1, #0x1
  43e060:	str	x1, [x19, #24]
  43e064:	ldp	x19, x20, [sp, #16]
  43e068:	ldp	x29, x30, [sp], #32
  43e06c:	ret
  43e070:	mov	x0, x19
  43e074:	ldp	x19, x20, [sp, #16]
  43e078:	ldp	x29, x30, [sp], #32
  43e07c:	b	43eed0 <_obstack_memory_used@@Base+0x5068>
  43e080:	b	440660 <_obstack_memory_used@@Base+0x67f8>
  43e084:	mov	x0, #0x0                   	// #0
  43e088:	b	43e064 <_obstack_memory_used@@Base+0x41fc>
  43e08c:	nop
  43e090:	stp	x29, x30, [sp, #-64]!
  43e094:	mov	x29, sp
  43e098:	ldr	x1, [x0, #24]
  43e09c:	stp	x19, x20, [sp, #16]
  43e0a0:	mov	x19, x0
  43e0a4:	str	x21, [sp, #32]
  43e0a8:	ldr	x21, [x0, #64]
  43e0ac:	ldrb	w2, [x1]
  43e0b0:	cmp	w2, #0x45
  43e0b4:	b.eq	43e134 <_obstack_memory_used@@Base+0x42cc>  // b.none
  43e0b8:	add	x20, sp, #0x38
  43e0bc:	str	xzr, [sp, #56]
  43e0c0:	b	43e0e4 <_obstack_memory_used@@Base+0x427c>
  43e0c4:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e0c8:	str	x0, [x20]
  43e0cc:	add	x20, x0, #0x10
  43e0d0:	cbz	x0, 43e100 <_obstack_memory_used@@Base+0x4298>
  43e0d4:	ldr	x1, [x19, #24]
  43e0d8:	ldrb	w0, [x1]
  43e0dc:	cmp	w0, #0x45
  43e0e0:	b.eq	43e114 <_obstack_memory_used@@Base+0x42ac>  // b.none
  43e0e4:	mov	x0, x19
  43e0e8:	bl	43dfe8 <_obstack_memory_used@@Base+0x4180>
  43e0ec:	mov	x3, #0x0                   	// #0
  43e0f0:	mov	x2, x0
  43e0f4:	mov	w1, #0x2f                  	// #47
  43e0f8:	mov	x0, x19
  43e0fc:	cbnz	x2, 43e0c4 <_obstack_memory_used@@Base+0x425c>
  43e100:	mov	x0, #0x0                   	// #0
  43e104:	ldp	x19, x20, [sp, #16]
  43e108:	ldr	x21, [sp, #32]
  43e10c:	ldp	x29, x30, [sp], #64
  43e110:	ret
  43e114:	add	x1, x1, #0x1
  43e118:	str	x1, [x19, #24]
  43e11c:	str	x21, [x19, #64]
  43e120:	ldp	x19, x20, [sp, #16]
  43e124:	ldr	x21, [sp, #32]
  43e128:	ldr	x0, [sp, #56]
  43e12c:	ldp	x29, x30, [sp], #64
  43e130:	ret
  43e134:	add	x1, x1, #0x1
  43e138:	mov	x3, #0x0                   	// #0
  43e13c:	ldr	x21, [sp, #32]
  43e140:	str	x1, [x0, #24]
  43e144:	ldp	x19, x20, [sp, #16]
  43e148:	mov	x2, #0x0                   	// #0
  43e14c:	ldp	x29, x30, [sp], #64
  43e150:	mov	w1, #0x2f                  	// #47
  43e154:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e158:	ldr	x3, [x0, #24]
  43e15c:	ldrb	w1, [x3]
  43e160:	sub	w1, w1, #0x49
  43e164:	and	w1, w1, #0xff
  43e168:	cmp	w1, #0x1
  43e16c:	b.hi	43e17c <_obstack_memory_used@@Base+0x4314>  // b.pmore
  43e170:	add	x3, x3, #0x1
  43e174:	str	x3, [x0, #24]
  43e178:	b	43e090 <_obstack_memory_used@@Base+0x4228>
  43e17c:	mov	x0, #0x0                   	// #0
  43e180:	ret
  43e184:	nop
  43e188:	stp	x29, x30, [sp, #-48]!
  43e18c:	mov	w3, #0x54                  	// #84
  43e190:	mov	x29, sp
  43e194:	ldr	x2, [x0, #24]
  43e198:	stp	x19, x20, [sp, #16]
  43e19c:	mov	x19, x0
  43e1a0:	str	x21, [sp, #32]
  43e1a4:	mov	w21, w1
  43e1a8:	ldrb	w1, [x2]
  43e1ac:	cmp	w1, #0x47
  43e1b0:	ccmp	w1, w3, #0x4, ne  // ne = any
  43e1b4:	b.ne	43e240 <_obstack_memory_used@@Base+0x43d8>  // b.any
  43e1b8:	ldr	w3, [x0, #72]
  43e1bc:	add	w1, w3, #0x14
  43e1c0:	str	w1, [x0, #72]
  43e1c4:	ldrb	w1, [x2]
  43e1c8:	cmp	w1, #0x54
  43e1cc:	b.eq	43e364 <_obstack_memory_used@@Base+0x44fc>  // b.none
  43e1d0:	cmp	w1, #0x47
  43e1d4:	b.ne	43e34c <_obstack_memory_used@@Base+0x44e4>  // b.any
  43e1d8:	add	x1, x2, #0x1
  43e1dc:	str	x1, [x0, #24]
  43e1e0:	ldrb	w1, [x2, #1]
  43e1e4:	cbz	w1, 43e34c <_obstack_memory_used@@Base+0x44e4>
  43e1e8:	add	x1, x2, #0x2
  43e1ec:	str	x1, [x0, #24]
  43e1f0:	ldrb	w1, [x2, #1]
  43e1f4:	cmp	w1, #0x54
  43e1f8:	b.eq	43e700 <_obstack_memory_used@@Base+0x4898>  // b.none
  43e1fc:	b.hi	43e3cc <_obstack_memory_used@@Base+0x4564>  // b.pmore
  43e200:	cmp	w1, #0x41
  43e204:	b.eq	43e748 <_obstack_memory_used@@Base+0x48e0>  // b.none
  43e208:	cmp	w1, #0x52
  43e20c:	b.ne	43e34c <_obstack_memory_used@@Base+0x44e4>  // b.any
  43e210:	bl	43e948 <_obstack_memory_used@@Base+0x4ae0>
  43e214:	mov	x11, x0
  43e218:	mov	x0, x19
  43e21c:	bl	43c700 <_obstack_memory_used@@Base+0x2898>
  43e220:	mov	x3, x0
  43e224:	mov	x0, x19
  43e228:	mov	x2, x11
  43e22c:	ldp	x19, x20, [sp, #16]
  43e230:	mov	w1, #0x16                  	// #22
  43e234:	ldr	x21, [sp, #32]
  43e238:	ldp	x29, x30, [sp], #48
  43e23c:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e240:	bl	43e948 <_obstack_memory_used@@Base+0x4ae0>
  43e244:	mov	x20, x0
  43e248:	cbz	x0, 43e34c <_obstack_memory_used@@Base+0x44e4>
  43e24c:	cbz	w21, 43e29c <_obstack_memory_used@@Base+0x4434>
  43e250:	ldr	w0, [x19, #16]
  43e254:	tbnz	w0, #0, 43e29c <_obstack_memory_used@@Base+0x4434>
  43e258:	mov	x1, #0x1f                  	// #31
  43e25c:	mov	x2, #0x1                   	// #1
  43e260:	movk	x1, #0x1a, lsl #48
  43e264:	ldr	w3, [x20]
  43e268:	sub	w0, w3, #0x1c
  43e26c:	cmp	w0, #0x34
  43e270:	b.hi	43e280 <_obstack_memory_used@@Base+0x4418>  // b.pmore
  43e274:	lsl	x0, x2, x0
  43e278:	tst	x0, x1
  43e27c:	b.ne	43e5b4 <_obstack_memory_used@@Base+0x474c>  // b.any
  43e280:	cmp	w3, #0x2
  43e284:	b.eq	43e5bc <_obstack_memory_used@@Base+0x4754>  // b.none
  43e288:	mov	x0, x20
  43e28c:	ldp	x19, x20, [sp, #16]
  43e290:	ldr	x21, [sp, #32]
  43e294:	ldp	x29, x30, [sp], #48
  43e298:	ret
  43e29c:	ldr	x0, [x19, #24]
  43e2a0:	ldrb	w0, [x0]
  43e2a4:	cmp	w0, #0x45
  43e2a8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43e2ac:	b.eq	43e288 <_obstack_memory_used@@Base+0x4420>  // b.none
  43e2b0:	mov	x1, #0x1f                  	// #31
  43e2b4:	mov	x4, x20
  43e2b8:	mov	x2, #0x1                   	// #1
  43e2bc:	movk	x1, #0x1a, lsl #48
  43e2c0:	ldr	w3, [x4]
  43e2c4:	cmp	w3, #0x4
  43e2c8:	b.eq	43e630 <_obstack_memory_used@@Base+0x47c8>  // b.none
  43e2cc:	sub	w0, w3, #0x1c
  43e2d0:	b.hi	43e4c0 <_obstack_memory_used@@Base+0x4658>  // b.pmore
  43e2d4:	cmp	w3, #0x2
  43e2d8:	b.ne	43e2e4 <_obstack_memory_used@@Base+0x447c>  // b.any
  43e2dc:	ldr	x4, [x4, #16]
  43e2e0:	cbnz	x4, 43e2c0 <_obstack_memory_used@@Base+0x4458>
  43e2e4:	mov	w1, #0x0                   	// #0
  43e2e8:	mov	x0, x19
  43e2ec:	bl	440010 <_obstack_memory_used@@Base+0x61a8>
  43e2f0:	mov	x3, x0
  43e2f4:	cbz	x0, 43e34c <_obstack_memory_used@@Base+0x44e4>
  43e2f8:	cbnz	w21, 43e318 <_obstack_memory_used@@Base+0x44b0>
  43e2fc:	ldr	w0, [x20]
  43e300:	cmp	w0, #0x2
  43e304:	b.ne	43e318 <_obstack_memory_used@@Base+0x44b0>  // b.any
  43e308:	ldr	w0, [x3]
  43e30c:	cmp	w0, #0x29
  43e310:	b.ne	43e318 <_obstack_memory_used@@Base+0x44b0>  // b.any
  43e314:	str	xzr, [x3, #8]
  43e318:	mov	x2, x20
  43e31c:	mov	x0, x19
  43e320:	ldp	x19, x20, [sp, #16]
  43e324:	mov	w1, #0x3                   	// #3
  43e328:	ldr	x21, [sp, #32]
  43e32c:	ldp	x29, x30, [sp], #48
  43e330:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e334:	cmp	w1, #0x68
  43e338:	b.eq	43e8dc <_obstack_memory_used@@Base+0x4a74>  // b.none
  43e33c:	cmp	w1, #0x76
  43e340:	b.ne	43e34c <_obstack_memory_used@@Base+0x44e4>  // b.any
  43e344:	bl	43ccc8 <_obstack_memory_used@@Base+0x2e60>
  43e348:	cbnz	w0, 43e604 <_obstack_memory_used@@Base+0x479c>
  43e34c:	mov	x20, #0x0                   	// #0
  43e350:	mov	x0, x20
  43e354:	ldp	x19, x20, [sp, #16]
  43e358:	ldr	x21, [sp, #32]
  43e35c:	ldp	x29, x30, [sp], #48
  43e360:	ret
  43e364:	add	x1, x2, #0x1
  43e368:	str	x1, [x0, #24]
  43e36c:	ldrb	w1, [x2, #1]
  43e370:	cbz	w1, 43e34c <_obstack_memory_used@@Base+0x44e4>
  43e374:	add	x1, x2, #0x2
  43e378:	str	x1, [x0, #24]
  43e37c:	ldrb	w1, [x2, #1]
  43e380:	cmp	w1, #0x53
  43e384:	b.eq	43e84c <_obstack_memory_used@@Base+0x49e4>  // b.none
  43e388:	b.hi	43e540 <_obstack_memory_used@@Base+0x46d8>  // b.pmore
  43e38c:	cmp	w1, #0x48
  43e390:	b.eq	43e828 <_obstack_memory_used@@Base+0x49c0>  // b.none
  43e394:	b.hi	43e50c <_obstack_memory_used@@Base+0x46a4>  // b.pmore
  43e398:	cmp	w1, #0x43
  43e39c:	b.eq	43e7c8 <_obstack_memory_used@@Base+0x4960>  // b.none
  43e3a0:	cmp	w1, #0x46
  43e3a4:	b.ne	43e4e0 <_obstack_memory_used@@Base+0x4678>  // b.any
  43e3a8:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43e3ac:	mov	x2, x0
  43e3b0:	mov	x0, x19
  43e3b4:	mov	x3, #0x0                   	// #0
  43e3b8:	ldp	x19, x20, [sp, #16]
  43e3bc:	mov	w1, #0xe                   	// #14
  43e3c0:	ldr	x21, [sp, #32]
  43e3c4:	ldp	x29, x30, [sp], #48
  43e3c8:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e3cc:	cmp	w1, #0x56
  43e3d0:	b.eq	43e6dc <_obstack_memory_used@@Base+0x4874>  // b.none
  43e3d4:	cmp	w1, #0x72
  43e3d8:	b.ne	43e34c <_obstack_memory_used@@Base+0x44e4>  // b.any
  43e3dc:	add	x0, x0, #0x18
  43e3e0:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43e3e4:	cmp	w0, #0x1
  43e3e8:	b.le	43e34c <_obstack_memory_used@@Base+0x44e4>
  43e3ec:	ldr	x1, [x19, #24]
  43e3f0:	ldrb	w2, [x1]
  43e3f4:	cbz	w2, 43e34c <_obstack_memory_used@@Base+0x44e4>
  43e3f8:	add	x8, x1, #0x1
  43e3fc:	str	x8, [x19, #24]
  43e400:	ldrb	w1, [x1]
  43e404:	cmp	w1, #0x5f
  43e408:	b.ne	43e34c <_obstack_memory_used@@Base+0x44e4>  // b.any
  43e40c:	sub	w9, w0, #0x1
  43e410:	mov	x2, #0x0                   	// #0
  43e414:	mov	w11, #0x18                  	// #24
  43e418:	mov	w10, #0x41                  	// #65
  43e41c:	ldrb	w0, [x8]
  43e420:	cbz	w0, 43e34c <_obstack_memory_used@@Base+0x44e4>
  43e424:	cmp	w0, #0x24
  43e428:	b.ne	43e674 <_obstack_memory_used@@Base+0x480c>  // b.any
  43e42c:	ldrb	w0, [x8, #1]
  43e430:	cmp	w0, #0x53
  43e434:	b.eq	43e780 <_obstack_memory_used@@Base+0x4918>  // b.none
  43e438:	cmp	w0, #0x5f
  43e43c:	b.eq	43e778 <_obstack_memory_used@@Base+0x4910>  // b.none
  43e440:	cmp	w0, #0x24
  43e444:	b.ne	43e34c <_obstack_memory_used@@Base+0x44e4>  // b.any
  43e448:	ldp	w1, w3, [x19, #40]
  43e44c:	ldr	x8, [x19, #24]
  43e450:	cmp	w1, w3
  43e454:	add	x8, x8, #0x2
  43e458:	b.ge	43e910 <_obstack_memory_used@@Base+0x4aa8>  // b.tcont
  43e45c:	ldr	x5, [x19, #32]
  43e460:	smull	x4, w1, w11
  43e464:	add	w1, w1, #0x1
  43e468:	sub	w9, w9, #0x2
  43e46c:	add	x3, x5, x4
  43e470:	str	wzr, [x3, #4]
  43e474:	str	w1, [x19, #40]
  43e478:	str	w10, [x5, x4]
  43e47c:	str	w0, [x3, #8]
  43e480:	str	x8, [x19, #24]
  43e484:	cbz	x2, 43e770 <_obstack_memory_used@@Base+0x4908>
  43e488:	mov	x0, x19
  43e48c:	mov	w1, #0x40                  	// #64
  43e490:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e494:	mov	x2, x0
  43e498:	cbz	x0, 43e34c <_obstack_memory_used@@Base+0x44e4>
  43e49c:	cmp	w9, #0x0
  43e4a0:	b.gt	43e41c <_obstack_memory_used@@Base+0x45b4>
  43e4a4:	mov	x0, x19
  43e4a8:	mov	x3, #0x0                   	// #0
  43e4ac:	ldp	x19, x20, [sp, #16]
  43e4b0:	mov	w1, #0x3f                  	// #63
  43e4b4:	ldr	x21, [sp, #32]
  43e4b8:	ldp	x29, x30, [sp], #48
  43e4bc:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e4c0:	cmp	w0, #0x34
  43e4c4:	b.hi	43e2e4 <_obstack_memory_used@@Base+0x447c>  // b.pmore
  43e4c8:	lsl	x0, x2, x0
  43e4cc:	tst	x0, x1
  43e4d0:	b.eq	43e2e4 <_obstack_memory_used@@Base+0x447c>  // b.none
  43e4d4:	ldr	x4, [x4, #8]
  43e4d8:	cbnz	x4, 43e2c0 <_obstack_memory_used@@Base+0x4458>
  43e4dc:	b	43e2e4 <_obstack_memory_used@@Base+0x447c>
  43e4e0:	cmp	w1, #0x41
  43e4e4:	b.ne	43e34c <_obstack_memory_used@@Base+0x44e4>  // b.any
  43e4e8:	bl	43dfe8 <_obstack_memory_used@@Base+0x4180>
  43e4ec:	mov	x2, x0
  43e4f0:	mov	x0, x19
  43e4f4:	mov	x3, #0x0                   	// #0
  43e4f8:	ldp	x19, x20, [sp, #16]
  43e4fc:	mov	w1, #0x30                  	// #48
  43e500:	ldr	x21, [sp, #32]
  43e504:	ldp	x29, x30, [sp], #48
  43e508:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e50c:	cmp	w1, #0x49
  43e510:	b.eq	43e8b8 <_obstack_memory_used@@Base+0x4a50>  // b.none
  43e514:	cmp	w1, #0x4a
  43e518:	b.ne	43e34c <_obstack_memory_used@@Base+0x44e4>  // b.any
  43e51c:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43e520:	mov	x2, x0
  43e524:	mov	x0, x19
  43e528:	mov	x3, #0x0                   	// #0
  43e52c:	ldp	x19, x20, [sp, #16]
  43e530:	mov	w1, #0x12                  	// #18
  43e534:	ldr	x21, [sp, #32]
  43e538:	ldp	x29, x30, [sp], #48
  43e53c:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e540:	cmp	w1, #0x63
  43e544:	b.eq	43e870 <_obstack_memory_used@@Base+0x4a08>  // b.none
  43e548:	b.hi	43e334 <_obstack_memory_used@@Base+0x44cc>  // b.pmore
  43e54c:	cmp	w1, #0x56
  43e550:	b.eq	43e79c <_obstack_memory_used@@Base+0x4934>  // b.none
  43e554:	cmp	w1, #0x57
  43e558:	b.ne	43e580 <_obstack_memory_used@@Base+0x4718>  // b.any
  43e55c:	bl	43e948 <_obstack_memory_used@@Base+0x4ae0>
  43e560:	mov	x2, x0
  43e564:	mov	x0, x19
  43e568:	mov	x3, #0x0                   	// #0
  43e56c:	ldp	x19, x20, [sp, #16]
  43e570:	mov	w1, #0x15                  	// #21
  43e574:	ldr	x21, [sp, #32]
  43e578:	ldp	x29, x30, [sp], #48
  43e57c:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e580:	cmp	w1, #0x54
  43e584:	b.ne	43e34c <_obstack_memory_used@@Base+0x44e4>  // b.any
  43e588:	add	w3, w3, #0xa
  43e58c:	str	w3, [x0, #72]
  43e590:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43e594:	mov	x2, x0
  43e598:	mov	x0, x19
  43e59c:	mov	x3, #0x0                   	// #0
  43e5a0:	ldp	x19, x20, [sp, #16]
  43e5a4:	mov	w1, #0xa                   	// #10
  43e5a8:	ldr	x21, [sp, #32]
  43e5ac:	ldp	x29, x30, [sp], #48
  43e5b0:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e5b4:	ldr	x20, [x20, #8]
  43e5b8:	b	43e264 <_obstack_memory_used@@Base+0x43fc>
  43e5bc:	ldr	x3, [x20, #16]
  43e5c0:	mov	x1, #0x1f                  	// #31
  43e5c4:	mov	x2, #0x1                   	// #1
  43e5c8:	movk	x1, #0x1a, lsl #48
  43e5cc:	ldr	w0, [x3]
  43e5d0:	sub	w0, w0, #0x1c
  43e5d4:	cmp	w0, #0x34
  43e5d8:	b.hi	43e288 <_obstack_memory_used@@Base+0x4420>  // b.pmore
  43e5dc:	lsl	x0, x2, x0
  43e5e0:	tst	x0, x1
  43e5e4:	b.eq	43e288 <_obstack_memory_used@@Base+0x4420>  // b.none
  43e5e8:	ldr	x3, [x3, #8]
  43e5ec:	str	x3, [x20, #16]
  43e5f0:	ldr	w0, [x3]
  43e5f4:	sub	w0, w0, #0x1c
  43e5f8:	cmp	w0, #0x34
  43e5fc:	b.ls	43e5dc <_obstack_memory_used@@Base+0x4774>  // b.plast
  43e600:	b	43e288 <_obstack_memory_used@@Base+0x4420>
  43e604:	mov	x0, x19
  43e608:	mov	w1, #0x0                   	// #0
  43e60c:	bl	43e188 <_obstack_memory_used@@Base+0x4320>
  43e610:	mov	x2, x0
  43e614:	mov	x0, x19
  43e618:	mov	x3, #0x0                   	// #0
  43e61c:	ldp	x19, x20, [sp, #16]
  43e620:	mov	w1, #0x10                  	// #16
  43e624:	ldr	x21, [sp, #32]
  43e628:	ldp	x29, x30, [sp], #48
  43e62c:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e630:	ldr	x1, [x4, #8]
  43e634:	cbz	x1, 43e660 <_obstack_memory_used@@Base+0x47f8>
  43e638:	ldr	w0, [x1]
  43e63c:	sub	w2, w0, #0x1
  43e640:	cmp	w0, #0x8
  43e644:	b.hi	43e668 <_obstack_memory_used@@Base+0x4800>  // b.pmore
  43e648:	cmp	w0, #0x6
  43e64c:	b.hi	43e2e4 <_obstack_memory_used@@Base+0x447c>  // b.pmore
  43e650:	cmp	w2, #0x1
  43e654:	b.hi	43e660 <_obstack_memory_used@@Base+0x47f8>  // b.pmore
  43e658:	ldr	x1, [x1, #16]
  43e65c:	cbnz	x1, 43e638 <_obstack_memory_used@@Base+0x47d0>
  43e660:	mov	w1, #0x1                   	// #1
  43e664:	b	43e2e8 <_obstack_memory_used@@Base+0x4480>
  43e668:	cmp	w0, #0x35
  43e66c:	cset	w1, ne  // ne = any
  43e670:	b	43e2e8 <_obstack_memory_used@@Base+0x4480>
  43e674:	mov	x1, #0x1                   	// #1
  43e678:	b	43e680 <_obstack_memory_used@@Base+0x4818>
  43e67c:	mov	x1, x4
  43e680:	cmp	w9, w1
  43e684:	mov	w5, w1
  43e688:	b.le	43e6a0 <_obstack_memory_used@@Base+0x4838>
  43e68c:	ldrb	w3, [x8, x1]
  43e690:	add	x4, x1, #0x1
  43e694:	cmp	w3, #0x24
  43e698:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  43e69c:	b.ne	43e67c <_obstack_memory_used@@Base+0x4814>  // b.any
  43e6a0:	ldp	w3, w0, [x19, #40]
  43e6a4:	cmp	w3, w0
  43e6a8:	b.ge	43e788 <_obstack_memory_used@@Base+0x4920>  // b.tcont
  43e6ac:	ldr	x4, [x19, #32]
  43e6b0:	add	w0, w3, #0x1
  43e6b4:	sub	w9, w9, w5
  43e6b8:	smaddl	x3, w3, w11, x4
  43e6bc:	str	wzr, [x3, #4]
  43e6c0:	str	w0, [x19, #40]
  43e6c4:	stp	xzr, x8, [x3]
  43e6c8:	ldr	x8, [x19, #24]
  43e6cc:	str	w5, [x3, #16]
  43e6d0:	add	x8, x8, x1
  43e6d4:	str	x8, [x19, #24]
  43e6d8:	b	43e484 <_obstack_memory_used@@Base+0x461c>
  43e6dc:	bl	43e948 <_obstack_memory_used@@Base+0x4ae0>
  43e6e0:	mov	x2, x0
  43e6e4:	mov	x0, x19
  43e6e8:	mov	x3, #0x0                   	// #0
  43e6ec:	ldp	x19, x20, [sp, #16]
  43e6f0:	mov	w1, #0x13                  	// #19
  43e6f4:	ldr	x21, [sp, #32]
  43e6f8:	ldp	x29, x30, [sp], #48
  43e6fc:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e700:	ldrb	w1, [x2, #2]
  43e704:	cbz	w1, 43e71c <_obstack_memory_used@@Base+0x48b4>
  43e708:	add	x1, x2, #0x3
  43e70c:	str	x1, [x0, #24]
  43e710:	ldrb	w1, [x2, #2]
  43e714:	cmp	w1, #0x6e
  43e718:	b.eq	43e91c <_obstack_memory_used@@Base+0x4ab4>  // b.none
  43e71c:	mov	x0, x19
  43e720:	mov	w1, #0x0                   	// #0
  43e724:	bl	43e188 <_obstack_memory_used@@Base+0x4320>
  43e728:	mov	x2, x0
  43e72c:	mov	x0, x19
  43e730:	mov	x3, #0x0                   	// #0
  43e734:	ldp	x19, x20, [sp, #16]
  43e738:	mov	w1, #0x49                  	// #73
  43e73c:	ldr	x21, [sp, #32]
  43e740:	ldp	x29, x30, [sp], #48
  43e744:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e748:	mov	w1, #0x0                   	// #0
  43e74c:	bl	43e188 <_obstack_memory_used@@Base+0x4320>
  43e750:	mov	x2, x0
  43e754:	mov	x0, x19
  43e758:	ldp	x19, x20, [sp, #16]
  43e75c:	mov	x3, #0x0                   	// #0
  43e760:	ldr	x21, [sp, #32]
  43e764:	mov	w1, #0x17                  	// #23
  43e768:	ldp	x29, x30, [sp], #48
  43e76c:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e770:	mov	x2, x3
  43e774:	b	43e49c <_obstack_memory_used@@Base+0x4634>
  43e778:	mov	w0, #0x2e                  	// #46
  43e77c:	b	43e448 <_obstack_memory_used@@Base+0x45e0>
  43e780:	mov	w0, #0x2f                  	// #47
  43e784:	b	43e448 <_obstack_memory_used@@Base+0x45e0>
  43e788:	ldr	x0, [x19, #24]
  43e78c:	mov	x20, #0x0                   	// #0
  43e790:	add	x1, x0, x1
  43e794:	str	x1, [x19, #24]
  43e798:	b	43e288 <_obstack_memory_used@@Base+0x4420>
  43e79c:	add	w3, w3, #0xf
  43e7a0:	str	w3, [x0, #72]
  43e7a4:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43e7a8:	mov	x2, x0
  43e7ac:	mov	x0, x19
  43e7b0:	mov	x3, #0x0                   	// #0
  43e7b4:	ldp	x19, x20, [sp, #16]
  43e7b8:	mov	w1, #0x9                   	// #9
  43e7bc:	ldr	x21, [sp, #32]
  43e7c0:	ldp	x29, x30, [sp], #48
  43e7c4:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e7c8:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43e7cc:	mov	x20, x0
  43e7d0:	add	x0, x19, #0x18
  43e7d4:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43e7d8:	tbnz	w0, #31, 43e34c <_obstack_memory_used@@Base+0x44e4>
  43e7dc:	ldr	x0, [x19, #24]
  43e7e0:	ldrb	w1, [x0]
  43e7e4:	cmp	w1, #0x5f
  43e7e8:	b.ne	43e34c <_obstack_memory_used@@Base+0x44e4>  // b.any
  43e7ec:	add	x0, x0, #0x1
  43e7f0:	str	x0, [x19, #24]
  43e7f4:	mov	x0, x19
  43e7f8:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43e7fc:	mov	x2, x0
  43e800:	ldr	w1, [x19, #72]
  43e804:	mov	x3, x20
  43e808:	ldr	x21, [sp, #32]
  43e80c:	add	w1, w1, #0x5
  43e810:	str	w1, [x19, #72]
  43e814:	mov	x0, x19
  43e818:	ldp	x19, x20, [sp, #16]
  43e81c:	mov	w1, #0xb                   	// #11
  43e820:	ldp	x29, x30, [sp], #48
  43e824:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e828:	bl	43e948 <_obstack_memory_used@@Base+0x4ae0>
  43e82c:	mov	x2, x0
  43e830:	mov	x0, x19
  43e834:	mov	x3, #0x0                   	// #0
  43e838:	ldp	x19, x20, [sp, #16]
  43e83c:	mov	w1, #0x14                  	// #20
  43e840:	ldr	x21, [sp, #32]
  43e844:	ldp	x29, x30, [sp], #48
  43e848:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e84c:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43e850:	mov	x2, x0
  43e854:	mov	x0, x19
  43e858:	mov	x3, #0x0                   	// #0
  43e85c:	ldp	x19, x20, [sp, #16]
  43e860:	mov	w1, #0xd                   	// #13
  43e864:	ldr	x21, [sp, #32]
  43e868:	ldp	x29, x30, [sp], #48
  43e86c:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e870:	mov	w1, #0x0                   	// #0
  43e874:	bl	43ccc8 <_obstack_memory_used@@Base+0x2e60>
  43e878:	cbz	w0, 43e34c <_obstack_memory_used@@Base+0x44e4>
  43e87c:	mov	x0, x19
  43e880:	mov	w1, #0x0                   	// #0
  43e884:	bl	43ccc8 <_obstack_memory_used@@Base+0x2e60>
  43e888:	cbz	w0, 43e34c <_obstack_memory_used@@Base+0x44e4>
  43e88c:	mov	x0, x19
  43e890:	mov	w1, #0x0                   	// #0
  43e894:	bl	43e188 <_obstack_memory_used@@Base+0x4320>
  43e898:	mov	x2, x0
  43e89c:	mov	x0, x19
  43e8a0:	mov	x3, #0x0                   	// #0
  43e8a4:	ldp	x19, x20, [sp, #16]
  43e8a8:	mov	w1, #0x11                  	// #17
  43e8ac:	ldr	x21, [sp, #32]
  43e8b0:	ldp	x29, x30, [sp], #48
  43e8b4:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e8b8:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43e8bc:	mov	x2, x0
  43e8c0:	mov	x0, x19
  43e8c4:	mov	x3, #0x0                   	// #0
  43e8c8:	ldp	x19, x20, [sp, #16]
  43e8cc:	mov	w1, #0xc                   	// #12
  43e8d0:	ldr	x21, [sp, #32]
  43e8d4:	ldp	x29, x30, [sp], #48
  43e8d8:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e8dc:	bl	43ccc8 <_obstack_memory_used@@Base+0x2e60>
  43e8e0:	cbz	w0, 43e34c <_obstack_memory_used@@Base+0x44e4>
  43e8e4:	mov	x0, x19
  43e8e8:	mov	w1, #0x0                   	// #0
  43e8ec:	bl	43e188 <_obstack_memory_used@@Base+0x4320>
  43e8f0:	mov	x2, x0
  43e8f4:	mov	x0, x19
  43e8f8:	mov	x3, #0x0                   	// #0
  43e8fc:	ldp	x19, x20, [sp, #16]
  43e900:	mov	w1, #0xf                   	// #15
  43e904:	ldr	x21, [sp, #32]
  43e908:	ldp	x29, x30, [sp], #48
  43e90c:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e910:	mov	x20, #0x0                   	// #0
  43e914:	str	x8, [x19, #24]
  43e918:	b	43e288 <_obstack_memory_used@@Base+0x4420>
  43e91c:	mov	w1, #0x0                   	// #0
  43e920:	bl	43e188 <_obstack_memory_used@@Base+0x4320>
  43e924:	mov	x2, x0
  43e928:	mov	x0, x19
  43e92c:	ldp	x19, x20, [sp, #16]
  43e930:	mov	x3, #0x0                   	// #0
  43e934:	ldr	x21, [sp, #32]
  43e938:	mov	w1, #0x4a                  	// #74
  43e93c:	ldp	x29, x30, [sp], #48
  43e940:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e944:	nop
  43e948:	stp	x29, x30, [sp, #-112]!
  43e94c:	mov	x29, sp
  43e950:	ldr	x2, [x0, #24]
  43e954:	stp	x19, x20, [sp, #16]
  43e958:	ldrb	w1, [x2]
  43e95c:	cmp	w1, #0x55
  43e960:	b.eq	43eb48 <_obstack_memory_used@@Base+0x4ce0>  // b.none
  43e964:	mov	x19, x0
  43e968:	b.hi	43ea18 <_obstack_memory_used@@Base+0x4bb0>  // b.pmore
  43e96c:	cmp	w1, #0x4e
  43e970:	b.eq	43eb60 <_obstack_memory_used@@Base+0x4cf8>  // b.none
  43e974:	cmp	w1, #0x53
  43e978:	b.ne	43eae8 <_obstack_memory_used@@Base+0x4c80>  // b.any
  43e97c:	ldrb	w1, [x2, #1]
  43e980:	cmp	w1, #0x74
  43e984:	b.ne	43eaa8 <_obstack_memory_used@@Base+0x4c40>  // b.any
  43e988:	ldp	w0, w1, [x0, #40]
  43e98c:	add	x2, x2, #0x2
  43e990:	str	x2, [x19, #24]
  43e994:	cmp	w0, w1
  43e998:	b.ge	43ee1c <_obstack_memory_used@@Base+0x4fb4>  // b.tcont
  43e99c:	mov	w3, #0x18                  	// #24
  43e9a0:	add	w1, w0, #0x1
  43e9a4:	ldr	x2, [x19, #32]
  43e9a8:	smull	x0, w0, w3
  43e9ac:	str	w1, [x19, #40]
  43e9b0:	mov	w3, #0x3                   	// #3
  43e9b4:	add	x20, x2, x0
  43e9b8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  43e9bc:	add	x1, x1, #0xa18
  43e9c0:	str	xzr, [x2, x0]
  43e9c4:	str	x1, [x20, #8]
  43e9c8:	str	w3, [x20, #16]
  43e9cc:	mov	x0, x19
  43e9d0:	bl	440180 <_obstack_memory_used@@Base+0x6318>
  43e9d4:	mov	x2, x20
  43e9d8:	mov	x3, x0
  43e9dc:	mov	w1, #0x1                   	// #1
  43e9e0:	mov	x0, x19
  43e9e4:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43e9e8:	mov	x20, x0
  43e9ec:	ldr	w1, [x19, #72]
  43e9f0:	ldr	x2, [x19, #24]
  43e9f4:	add	w1, w1, #0x3
  43e9f8:	str	w1, [x19, #72]
  43e9fc:	ldrb	w0, [x2]
  43ea00:	cmp	w0, #0x49
  43ea04:	b.eq	43edc8 <_obstack_memory_used@@Base+0x4f60>  // b.none
  43ea08:	mov	x0, x20
  43ea0c:	ldp	x19, x20, [sp, #16]
  43ea10:	ldp	x29, x30, [sp], #112
  43ea14:	ret
  43ea18:	cmp	w1, #0x5a
  43ea1c:	b.ne	43eae8 <_obstack_memory_used@@Base+0x4c80>  // b.any
  43ea20:	add	x2, x2, #0x1
  43ea24:	str	x2, [x0, #24]
  43ea28:	mov	w1, #0x0                   	// #0
  43ea2c:	bl	43e188 <_obstack_memory_used@@Base+0x4320>
  43ea30:	mov	x20, x0
  43ea34:	cbz	x0, 43eae0 <_obstack_memory_used@@Base+0x4c78>
  43ea38:	ldr	x0, [x19, #24]
  43ea3c:	ldrb	w1, [x0]
  43ea40:	cmp	w1, #0x45
  43ea44:	b.ne	43eae0 <_obstack_memory_used@@Base+0x4c78>  // b.any
  43ea48:	add	x1, x0, #0x1
  43ea4c:	str	x1, [x19, #24]
  43ea50:	ldrb	w1, [x0, #1]
  43ea54:	cmp	w1, #0x73
  43ea58:	b.eq	43ee44 <_obstack_memory_used@@Base+0x4fdc>  // b.none
  43ea5c:	cmp	w1, #0x64
  43ea60:	b.eq	43ecec <_obstack_memory_used@@Base+0x4e84>  // b.none
  43ea64:	mov	x0, x19
  43ea68:	bl	43e948 <_obstack_memory_used@@Base+0x4ae0>
  43ea6c:	mov	x3, x0
  43ea70:	cbz	x0, 43ea84 <_obstack_memory_used@@Base+0x4c1c>
  43ea74:	ldr	w0, [x0]
  43ea78:	sub	w0, w0, #0x46
  43ea7c:	tst	w0, #0xfffffffd
  43ea80:	b.ne	43ee98 <_obstack_memory_used@@Base+0x5030>  // b.any
  43ea84:	ldr	w0, [x20]
  43ea88:	cmp	w0, #0x3
  43ea8c:	b.eq	43ee04 <_obstack_memory_used@@Base+0x4f9c>  // b.none
  43ea90:	mov	x2, x20
  43ea94:	mov	x0, x19
  43ea98:	mov	w1, #0x2                   	// #2
  43ea9c:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43eaa0:	mov	x20, x0
  43eaa4:	b	43ea08 <_obstack_memory_used@@Base+0x4ba0>
  43eaa8:	mov	w1, #0x0                   	// #0
  43eaac:	bl	43ca60 <_obstack_memory_used@@Base+0x2bf8>
  43eab0:	ldr	x1, [x19, #24]
  43eab4:	mov	x20, x0
  43eab8:	ldrb	w0, [x1]
  43eabc:	cmp	w0, #0x49
  43eac0:	b.ne	43ea08 <_obstack_memory_used@@Base+0x4ba0>  // b.any
  43eac4:	mov	x0, x19
  43eac8:	b	43eb28 <_obstack_memory_used@@Base+0x4cc0>
  43eacc:	mov	x0, x19
  43ead0:	bl	43cdc8 <_obstack_memory_used@@Base+0x2f60>
  43ead4:	cbnz	w0, 43ed28 <_obstack_memory_used@@Base+0x4ec0>
  43ead8:	ldp	x21, x22, [sp, #32]
  43eadc:	nop
  43eae0:	mov	x20, #0x0                   	// #0
  43eae4:	b	43ea08 <_obstack_memory_used@@Base+0x4ba0>
  43eae8:	mov	x0, x19
  43eaec:	bl	440180 <_obstack_memory_used@@Base+0x6318>
  43eaf0:	ldr	x1, [x19, #24]
  43eaf4:	mov	x20, x0
  43eaf8:	ldrb	w0, [x1]
  43eafc:	cmp	w0, #0x49
  43eb00:	b.ne	43ea08 <_obstack_memory_used@@Base+0x4ba0>  // b.any
  43eb04:	cbz	x20, 43eae0 <_obstack_memory_used@@Base+0x4c78>
  43eb08:	ldp	w1, w0, [x19, #56]
  43eb0c:	cmp	w1, w0
  43eb10:	b.ge	43eae0 <_obstack_memory_used@@Base+0x4c78>  // b.tcont
  43eb14:	ldr	x3, [x19, #48]
  43eb18:	mov	x0, x19
  43eb1c:	add	w2, w1, #0x1
  43eb20:	str	x20, [x3, w1, sxtw #3]
  43eb24:	str	w2, [x19, #56]
  43eb28:	bl	43e158 <_obstack_memory_used@@Base+0x42f0>
  43eb2c:	mov	x3, x0
  43eb30:	mov	x2, x20
  43eb34:	mov	x0, x19
  43eb38:	mov	w1, #0x4                   	// #4
  43eb3c:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43eb40:	mov	x20, x0
  43eb44:	b	43ea08 <_obstack_memory_used@@Base+0x4ba0>
  43eb48:	bl	440180 <_obstack_memory_used@@Base+0x6318>
  43eb4c:	mov	x20, x0
  43eb50:	mov	x0, x20
  43eb54:	ldp	x19, x20, [sp, #16]
  43eb58:	ldp	x29, x30, [sp], #112
  43eb5c:	ret
  43eb60:	stp	x21, x22, [sp, #32]
  43eb64:	add	x2, x2, #0x1
  43eb68:	add	x1, sp, #0x68
  43eb6c:	str	x2, [x0, #24]
  43eb70:	mov	w2, #0x1                   	// #1
  43eb74:	bl	43fd80 <_obstack_memory_used@@Base+0x5f18>
  43eb78:	mov	x22, x0
  43eb7c:	cbz	x0, 43edf8 <_obstack_memory_used@@Base+0x4f90>
  43eb80:	mov	x1, #0x0                   	// #0
  43eb84:	mov	x0, x19
  43eb88:	stp	x23, x24, [sp, #48]
  43eb8c:	bl	43c438 <_obstack_memory_used@@Base+0x25d0>
  43eb90:	mov	x23, x0
  43eb94:	ldr	x1, [x19, #24]
  43eb98:	ldrb	w20, [x1]
  43eb9c:	cbz	w20, 43ec54 <_obstack_memory_used@@Base+0x4dec>
  43eba0:	mov	x21, #0x0                   	// #0
  43eba4:	mov	w24, #0x4c                  	// #76
  43eba8:	stp	x25, x26, [sp, #64]
  43ebac:	mov	w25, #0x55                  	// #85
  43ebb0:	cmp	w20, #0x44
  43ebb4:	b.eq	43ec68 <_obstack_memory_used@@Base+0x4e00>  // b.none
  43ebb8:	sub	w2, w20, #0x30
  43ebbc:	sub	w0, w20, #0x61
  43ebc0:	and	w2, w2, #0xff
  43ebc4:	and	w0, w0, #0xff
  43ebc8:	cmp	w2, #0x9
  43ebcc:	mov	x26, x21
  43ebd0:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  43ebd4:	b.ls	43ebe8 <_obstack_memory_used@@Base+0x4d80>  // b.plast
  43ebd8:	cmp	w20, #0x43
  43ebdc:	ccmp	w20, w25, #0x4, ne  // ne = any
  43ebe0:	ccmp	w20, w24, #0x4, ne  // ne = any
  43ebe4:	b.ne	43ecb4 <_obstack_memory_used@@Base+0x4e4c>  // b.any
  43ebe8:	mov	x0, x19
  43ebec:	bl	440180 <_obstack_memory_used@@Base+0x6318>
  43ebf0:	mov	x21, x0
  43ebf4:	cbz	x26, 43ec10 <_obstack_memory_used@@Base+0x4da8>
  43ebf8:	mov	w1, #0x1                   	// #1
  43ebfc:	mov	x3, x21
  43ec00:	mov	x2, x26
  43ec04:	mov	x0, x19
  43ec08:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43ec0c:	mov	x21, x0
  43ec10:	cmp	w20, #0x53
  43ec14:	ldr	x1, [x19, #24]
  43ec18:	b.eq	43ec48 <_obstack_memory_used@@Base+0x4de0>  // b.none
  43ec1c:	ldrb	w20, [x1]
  43ec20:	cmp	w20, #0x45
  43ec24:	b.eq	43ec9c <_obstack_memory_used@@Base+0x4e34>  // b.none
  43ec28:	cbz	x21, 43ec50 <_obstack_memory_used@@Base+0x4de8>
  43ec2c:	ldp	w0, w2, [x19, #56]
  43ec30:	cmp	w0, w2
  43ec34:	b.ge	43ec50 <_obstack_memory_used@@Base+0x4de8>  // b.tcont
  43ec38:	ldr	x3, [x19, #48]
  43ec3c:	add	w2, w0, #0x1
  43ec40:	str	x21, [x3, w0, sxtw #3]
  43ec44:	str	w2, [x19, #56]
  43ec48:	ldrb	w20, [x1]
  43ec4c:	cbnz	w20, 43ebb0 <_obstack_memory_used@@Base+0x4d48>
  43ec50:	ldp	x25, x26, [sp, #64]
  43ec54:	mov	x20, #0x0                   	// #0
  43ec58:	ldp	x23, x24, [sp, #48]
  43ec5c:	str	xzr, [x22]
  43ec60:	ldp	x21, x22, [sp, #32]
  43ec64:	b	43ea08 <_obstack_memory_used@@Base+0x4ba0>
  43ec68:	ldrb	w0, [x1, #1]
  43ec6c:	and	w0, w0, #0xffffffdf
  43ec70:	and	w0, w0, #0xff
  43ec74:	cmp	w0, #0x54
  43ec78:	mov	x0, x19
  43ec7c:	b.ne	43eca4 <_obstack_memory_used@@Base+0x4e3c>  // b.any
  43ec80:	mov	x26, x21
  43ec84:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43ec88:	mov	x21, x0
  43ec8c:	mov	w1, #0x1                   	// #1
  43ec90:	cbnz	x26, 43ebfc <_obstack_memory_used@@Base+0x4d94>
  43ec94:	ldr	x1, [x19, #24]
  43ec98:	b	43ec1c <_obstack_memory_used@@Base+0x4db4>
  43ec9c:	mov	x26, x21
  43eca0:	b	43ebd8 <_obstack_memory_used@@Base+0x4d70>
  43eca4:	mov	x26, x21
  43eca8:	bl	440180 <_obstack_memory_used@@Base+0x6318>
  43ecac:	mov	x21, x0
  43ecb0:	b	43ec8c <_obstack_memory_used@@Base+0x4e24>
  43ecb4:	cmp	w20, #0x53
  43ecb8:	b.eq	43ed68 <_obstack_memory_used@@Base+0x4f00>  // b.none
  43ecbc:	cmp	w20, #0x49
  43ecc0:	b.eq	43ee24 <_obstack_memory_used@@Base+0x4fbc>  // b.none
  43ecc4:	cmp	w20, #0x54
  43ecc8:	b.eq	43eec0 <_obstack_memory_used@@Base+0x5058>  // b.none
  43eccc:	cmp	w20, #0x45
  43ecd0:	b.eq	43ed84 <_obstack_memory_used@@Base+0x4f1c>  // b.none
  43ecd4:	cmp	w20, #0x4d
  43ecd8:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  43ecdc:	b.eq	43ec50 <_obstack_memory_used@@Base+0x4de8>  // b.none
  43ece0:	add	x1, x1, #0x1
  43ece4:	str	x1, [x19, #24]
  43ece8:	b	43ec48 <_obstack_memory_used@@Base+0x4de0>
  43ecec:	stp	x21, x22, [sp, #32]
  43ecf0:	add	x0, x0, #0x2
  43ecf4:	str	x0, [x19, #24]
  43ecf8:	mov	x0, x19
  43ecfc:	bl	43c768 <_obstack_memory_used@@Base+0x2900>
  43ed00:	mov	w21, w0
  43ed04:	tbnz	w0, #31, 43ead8 <_obstack_memory_used@@Base+0x4c70>
  43ed08:	mov	x0, x19
  43ed0c:	bl	43e948 <_obstack_memory_used@@Base+0x4ae0>
  43ed10:	mov	x11, x0
  43ed14:	cbz	x0, 43ed28 <_obstack_memory_used@@Base+0x4ec0>
  43ed18:	ldr	w0, [x0]
  43ed1c:	sub	w0, w0, #0x46
  43ed20:	tst	w0, #0xfffffffd
  43ed24:	b.ne	43eacc <_obstack_memory_used@@Base+0x4c64>  // b.any
  43ed28:	ldp	w1, w0, [x19, #40]
  43ed2c:	cmp	w1, w0
  43ed30:	b.ge	43eeb4 <_obstack_memory_used@@Base+0x504c>  // b.tcont
  43ed34:	mov	w2, #0x18                  	// #24
  43ed38:	add	w4, w1, #0x1
  43ed3c:	ldr	x0, [x19, #32]
  43ed40:	smull	x1, w1, w2
  43ed44:	mov	w2, #0x47                  	// #71
  43ed48:	add	x3, x0, x1
  43ed4c:	str	wzr, [x3, #4]
  43ed50:	str	w4, [x19, #40]
  43ed54:	str	w2, [x0, x1]
  43ed58:	str	x11, [x3, #8]
  43ed5c:	str	w21, [x3, #16]
  43ed60:	ldp	x21, x22, [sp, #32]
  43ed64:	b	43ea84 <_obstack_memory_used@@Base+0x4c1c>
  43ed68:	mov	x0, x19
  43ed6c:	mov	w1, #0x1                   	// #1
  43ed70:	bl	43ca60 <_obstack_memory_used@@Base+0x2bf8>
  43ed74:	mov	x21, x0
  43ed78:	cbnz	x26, 43ebf8 <_obstack_memory_used@@Base+0x4d90>
  43ed7c:	ldr	x1, [x19, #24]
  43ed80:	b	43ec48 <_obstack_memory_used@@Base+0x4de0>
  43ed84:	str	x21, [x22]
  43ed88:	cbz	x21, 43edf0 <_obstack_memory_used@@Base+0x4f88>
  43ed8c:	cbz	x23, 43ed9c <_obstack_memory_used@@Base+0x4f34>
  43ed90:	ldr	x0, [sp, #104]
  43ed94:	str	x0, [x23, #8]
  43ed98:	str	x23, [sp, #104]
  43ed9c:	ldr	x0, [x19, #24]
  43eda0:	ldrb	w1, [x0]
  43eda4:	cmp	w1, #0x45
  43eda8:	b.ne	43edf0 <_obstack_memory_used@@Base+0x4f88>  // b.any
  43edac:	add	x0, x0, #0x1
  43edb0:	ldp	x21, x22, [sp, #32]
  43edb4:	ldp	x23, x24, [sp, #48]
  43edb8:	ldp	x25, x26, [sp, #64]
  43edbc:	str	x0, [x19, #24]
  43edc0:	ldr	x20, [sp, #104]
  43edc4:	b	43ea08 <_obstack_memory_used@@Base+0x4ba0>
  43edc8:	cbz	x20, 43eae0 <_obstack_memory_used@@Base+0x4c78>
  43edcc:	ldp	w0, w1, [x19, #56]
  43edd0:	cmp	w0, w1
  43edd4:	b.ge	43eae0 <_obstack_memory_used@@Base+0x4c78>  // b.tcont
  43edd8:	ldr	x2, [x19, #48]
  43eddc:	add	w1, w0, #0x1
  43ede0:	str	x20, [x2, w0, sxtw #3]
  43ede4:	mov	x0, x19
  43ede8:	str	w1, [x19, #56]
  43edec:	b	43eb28 <_obstack_memory_used@@Base+0x4cc0>
  43edf0:	ldp	x23, x24, [sp, #48]
  43edf4:	ldp	x25, x26, [sp, #64]
  43edf8:	mov	x20, #0x0                   	// #0
  43edfc:	ldp	x21, x22, [sp, #32]
  43ee00:	b	43ea08 <_obstack_memory_used@@Base+0x4ba0>
  43ee04:	ldr	x0, [x20, #16]
  43ee08:	ldr	w1, [x0]
  43ee0c:	cmp	w1, #0x29
  43ee10:	b.ne	43ea90 <_obstack_memory_used@@Base+0x4c28>  // b.any
  43ee14:	str	xzr, [x0, #8]
  43ee18:	b	43ea90 <_obstack_memory_used@@Base+0x4c28>
  43ee1c:	mov	x20, #0x0                   	// #0
  43ee20:	b	43e9cc <_obstack_memory_used@@Base+0x4b64>
  43ee24:	cbz	x21, 43ec50 <_obstack_memory_used@@Base+0x4de8>
  43ee28:	add	x1, x1, #0x1
  43ee2c:	str	x1, [x19, #24]
  43ee30:	mov	x0, x19
  43ee34:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43ee38:	mov	x21, x0
  43ee3c:	mov	w1, #0x4                   	// #4
  43ee40:	b	43ebfc <_obstack_memory_used@@Base+0x4d94>
  43ee44:	add	x0, x0, #0x2
  43ee48:	str	x0, [x19, #24]
  43ee4c:	mov	x0, x19
  43ee50:	bl	43cdc8 <_obstack_memory_used@@Base+0x2f60>
  43ee54:	cbz	w0, 43eae0 <_obstack_memory_used@@Base+0x4c78>
  43ee58:	ldp	w0, w1, [x19, #40]
  43ee5c:	cmp	w0, w1
  43ee60:	b.ge	43eeb8 <_obstack_memory_used@@Base+0x5050>  // b.tcont
  43ee64:	mov	w3, #0x18                  	// #24
  43ee68:	add	w1, w0, #0x1
  43ee6c:	ldr	x2, [x19, #32]
  43ee70:	smull	x0, w0, w3
  43ee74:	str	w1, [x19, #40]
  43ee78:	mov	w4, #0xe                   	// #14
  43ee7c:	add	x3, x2, x0
  43ee80:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  43ee84:	add	x1, x1, #0xa08
  43ee88:	str	xzr, [x2, x0]
  43ee8c:	str	x1, [x3, #8]
  43ee90:	str	w4, [x3, #16]
  43ee94:	b	43ea84 <_obstack_memory_used@@Base+0x4c1c>
  43ee98:	mov	x0, x19
  43ee9c:	str	x3, [sp, #88]
  43eea0:	bl	43cdc8 <_obstack_memory_used@@Base+0x2f60>
  43eea4:	ldr	x3, [sp, #88]
  43eea8:	cbnz	w0, 43ea84 <_obstack_memory_used@@Base+0x4c1c>
  43eeac:	mov	x20, #0x0                   	// #0
  43eeb0:	b	43ea08 <_obstack_memory_used@@Base+0x4ba0>
  43eeb4:	ldp	x21, x22, [sp, #32]
  43eeb8:	mov	x3, #0x0                   	// #0
  43eebc:	b	43ea84 <_obstack_memory_used@@Base+0x4c1c>
  43eec0:	mov	x0, x19
  43eec4:	bl	43c7e0 <_obstack_memory_used@@Base+0x2978>
  43eec8:	mov	x21, x0
  43eecc:	b	43ec8c <_obstack_memory_used@@Base+0x4e24>
  43eed0:	stp	x29, x30, [sp, #-80]!
  43eed4:	mov	x29, sp
  43eed8:	ldr	x4, [x0, #24]
  43eedc:	stp	x19, x20, [sp, #16]
  43eee0:	mov	x19, x0
  43eee4:	mov	x0, x4
  43eee8:	bl	43cd70 <_obstack_memory_used@@Base+0x2f08>
  43eeec:	cbnz	w0, 43ef2c <_obstack_memory_used@@Base+0x50c4>
  43eef0:	ldrb	w1, [x4]
  43eef4:	sub	w0, w1, #0x30
  43eef8:	cmp	w0, #0x4a
  43eefc:	b.ls	43ef14 <_obstack_memory_used@@Base+0x50ac>  // b.plast
  43ef00:	mov	x20, #0x0                   	// #0
  43ef04:	mov	x0, x20
  43ef08:	ldp	x19, x20, [sp, #16]
  43ef0c:	ldp	x29, x30, [sp], #80
  43ef10:	ret
  43ef14:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1d198>
  43ef18:	add	x2, x2, #0x814
  43ef1c:	ldrh	w0, [x2, w0, uxtw #1]
  43ef20:	adr	x2, 43ef2c <_obstack_memory_used@@Base+0x50c4>
  43ef24:	add	x0, x2, w0, sxth #2
  43ef28:	br	x0
  43ef2c:	add	x1, sp, #0x48
  43ef30:	mov	x0, x19
  43ef34:	mov	w2, #0x0                   	// #0
  43ef38:	stp	x21, x22, [sp, #32]
  43ef3c:	bl	43fd80 <_obstack_memory_used@@Base+0x5f18>
  43ef40:	mov	x21, x0
  43ef44:	cbz	x0, 43efd8 <_obstack_memory_used@@Base+0x5170>
  43ef48:	ldr	x0, [x19, #24]
  43ef4c:	ldrb	w0, [x0]
  43ef50:	cmp	w0, #0x46
  43ef54:	mov	x0, x19
  43ef58:	b.eq	43efcc <_obstack_memory_used@@Base+0x5164>  // b.none
  43ef5c:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43ef60:	str	x0, [x21]
  43ef64:	cbz	x0, 43efd8 <_obstack_memory_used@@Base+0x5170>
  43ef68:	ldr	w1, [x0]
  43ef6c:	ldr	x20, [sp, #72]
  43ef70:	sub	w1, w1, #0x1f
  43ef74:	cmp	w1, #0x1
  43ef78:	b.ls	43efb0 <_obstack_memory_used@@Base+0x5148>  // b.plast
  43ef7c:	cbz	x20, 43efd8 <_obstack_memory_used@@Base+0x5170>
  43ef80:	ldp	w0, w1, [x19, #56]
  43ef84:	cmp	w0, w1
  43ef88:	b.ge	43efd8 <_obstack_memory_used@@Base+0x5170>  // b.tcont
  43ef8c:	ldr	x2, [x19, #48]
  43ef90:	add	w1, w0, #0x1
  43ef94:	ldp	x21, x22, [sp, #32]
  43ef98:	str	x20, [x2, w0, sxtw #3]
  43ef9c:	mov	x0, x20
  43efa0:	str	w1, [x19, #56]
  43efa4:	ldp	x19, x20, [sp, #16]
  43efa8:	ldp	x29, x30, [sp], #80
  43efac:	ret
  43efb0:	ldr	x1, [x0, #8]
  43efb4:	str	x20, [x0, #8]
  43efb8:	ldr	x0, [x21]
  43efbc:	str	x0, [sp, #72]
  43efc0:	str	x1, [x21]
  43efc4:	ldr	x20, [sp, #72]
  43efc8:	b	43ef7c <_obstack_memory_used@@Base+0x5114>
  43efcc:	bl	4400a0 <_obstack_memory_used@@Base+0x6238>
  43efd0:	str	x0, [x21]
  43efd4:	b	43ef64 <_obstack_memory_used@@Base+0x50fc>
  43efd8:	ldp	x21, x22, [sp, #32]
  43efdc:	b	43ef00 <_obstack_memory_used@@Base+0x5098>
  43efe0:	ldp	w2, w3, [x19, #40]
  43efe4:	sub	w1, w1, #0x61
  43efe8:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x3c198>
  43efec:	add	x0, x0, #0xdf0
  43eff0:	sbfiz	x1, x1, #5, #32
  43eff4:	add	x0, x0, #0x188
  43eff8:	add	x1, x0, x1
  43effc:	cmp	w2, w3
  43f000:	b.ge	43faa0 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  43f004:	mov	w0, #0x18                  	// #24
  43f008:	add	w6, w2, #0x1
  43f00c:	ldr	x3, [x19, #32]
  43f010:	smull	x2, w2, w0
  43f014:	ldr	w7, [x1, #8]
  43f018:	mov	w5, #0x27                  	// #39
  43f01c:	add	x20, x3, x2
  43f020:	ldr	w0, [x19, #72]
  43f024:	add	x4, x4, #0x1
  43f028:	add	w0, w0, w7
  43f02c:	str	wzr, [x20, #4]
  43f030:	str	w6, [x19, #40]
  43f034:	str	w5, [x3, x2]
  43f038:	str	x1, [x20, #8]
  43f03c:	str	x4, [x19, #24]
  43f040:	str	w0, [x19, #72]
  43f044:	b	43ef04 <_obstack_memory_used@@Base+0x509c>
  43f048:	mov	x0, x19
  43f04c:	bl	43e948 <_obstack_memory_used@@Base+0x4ae0>
  43f050:	mov	x20, x0
  43f054:	str	x0, [sp, #72]
  43f058:	cbz	x20, 43ef00 <_obstack_memory_used@@Base+0x5098>
  43f05c:	ldp	w0, w1, [x19, #56]
  43f060:	cmp	w0, w1
  43f064:	b.ge	43ef00 <_obstack_memory_used@@Base+0x5098>  // b.tcont
  43f068:	ldr	x2, [x19, #48]
  43f06c:	add	w1, w0, #0x1
  43f070:	str	x20, [x2, w0, sxtw #3]
  43f074:	str	w1, [x19, #56]
  43f078:	ldr	x20, [sp, #72]
  43f07c:	mov	x0, x20
  43f080:	ldp	x19, x20, [sp, #16]
  43f084:	ldp	x29, x30, [sp], #80
  43f088:	ret
  43f08c:	mov	x0, x19
  43f090:	bl	4400a0 <_obstack_memory_used@@Base+0x6238>
  43f094:	mov	x20, x0
  43f098:	str	x0, [sp, #72]
  43f09c:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f0a0:	add	x4, x4, #0x1
  43f0a4:	str	x4, [x19, #24]
  43f0a8:	mov	x0, x19
  43f0ac:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f0b0:	mov	x2, x0
  43f0b4:	mov	x3, #0x0                   	// #0
  43f0b8:	mov	x0, x19
  43f0bc:	mov	w1, #0x26                  	// #38
  43f0c0:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f0c4:	mov	x20, x0
  43f0c8:	str	x0, [sp, #72]
  43f0cc:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f0d0:	add	x4, x4, #0x1
  43f0d4:	str	x4, [x19, #24]
  43f0d8:	mov	x0, x19
  43f0dc:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f0e0:	mov	x2, x0
  43f0e4:	mov	x3, #0x0                   	// #0
  43f0e8:	mov	x0, x19
  43f0ec:	mov	w1, #0x24                  	// #36
  43f0f0:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f0f4:	mov	x20, x0
  43f0f8:	str	x0, [sp, #72]
  43f0fc:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f100:	add	x4, x4, #0x1
  43f104:	str	x4, [x19, #24]
  43f108:	mov	x0, x19
  43f10c:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f110:	mov	x2, x0
  43f114:	mov	x3, #0x0                   	// #0
  43f118:	mov	x0, x19
  43f11c:	mov	w1, #0x25                  	// #37
  43f120:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f124:	mov	x20, x0
  43f128:	str	x0, [sp, #72]
  43f12c:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f130:	add	x0, x4, #0x1
  43f134:	str	x0, [x19, #24]
  43f138:	ldrb	w0, [x4, #1]
  43f13c:	cbz	w0, 43ef00 <_obstack_memory_used@@Base+0x5098>
  43f140:	add	x0, x4, #0x2
  43f144:	str	x0, [x19, #24]
  43f148:	ldrb	w0, [x4, #1]
  43f14c:	cmp	w0, #0x68
  43f150:	b.eq	43f8c8 <_obstack_memory_used@@Base+0x5a60>  // b.none
  43f154:	b.hi	43f4ac <_obstack_memory_used@@Base+0x5644>  // b.pmore
  43f158:	cmp	w0, #0x63
  43f15c:	b.eq	43f888 <_obstack_memory_used@@Base+0x5a20>  // b.none
  43f160:	b.ls	43f45c <_obstack_memory_used@@Base+0x55f4>  // b.plast
  43f164:	cmp	w0, #0x65
  43f168:	b.eq	43f968 <_obstack_memory_used@@Base+0x5b00>  // b.none
  43f16c:	cmp	w0, #0x66
  43f170:	b.ne	43f6c8 <_obstack_memory_used@@Base+0x5860>  // b.any
  43f174:	ldp	w0, w1, [x19, #40]
  43f178:	cmp	w0, w1
  43f17c:	b.ge	43faa0 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  43f180:	mov	w1, #0x18                  	// #24
  43f184:	add	w5, w0, #0x1
  43f188:	ldr	x3, [x19, #32]
  43f18c:	smull	x0, w0, w1
  43f190:	ldr	w2, [x19, #72]
  43f194:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x3c198>
  43f198:	add	x1, x1, #0xdf0
  43f19c:	add	x20, x3, x0
  43f1a0:	add	x1, x1, #0x4c8
  43f1a4:	mov	w4, #0x27                  	// #39
  43f1a8:	str	wzr, [x20, #4]
  43f1ac:	add	w2, w2, #0x9
  43f1b0:	str	w5, [x19, #40]
  43f1b4:	str	w4, [x3, x0]
  43f1b8:	str	x1, [x20, #8]
  43f1bc:	str	w2, [x19, #72]
  43f1c0:	b	43ef04 <_obstack_memory_used@@Base+0x509c>
  43f1c4:	add	x4, x4, #0x1
  43f1c8:	str	x4, [x19, #24]
  43f1cc:	mov	x0, x19
  43f1d0:	bl	43c860 <_obstack_memory_used@@Base+0x29f8>
  43f1d4:	str	x0, [sp, #72]
  43f1d8:	ldr	x1, [x19, #24]
  43f1dc:	mov	x20, x0
  43f1e0:	ldrb	w0, [x1]
  43f1e4:	cmp	w0, #0x49
  43f1e8:	b.eq	43f7a8 <_obstack_memory_used@@Base+0x5940>  // b.none
  43f1ec:	mov	x0, x19
  43f1f0:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f1f4:	ldr	x3, [sp, #72]
  43f1f8:	mov	x2, x0
  43f1fc:	mov	w1, #0x21                  	// #33
  43f200:	mov	x0, x19
  43f204:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f208:	mov	x20, x0
  43f20c:	str	x0, [sp, #72]
  43f210:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f214:	add	x4, x4, #0x1
  43f218:	str	x4, [x19, #24]
  43f21c:	mov	x0, x19
  43f220:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f224:	mov	x2, x0
  43f228:	mov	x3, #0x0                   	// #0
  43f22c:	mov	x0, x19
  43f230:	mov	w1, #0x22                  	// #34
  43f234:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f238:	mov	x20, x0
  43f23c:	str	x0, [sp, #72]
  43f240:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f244:	ldrb	w0, [x4, #1]
  43f248:	sub	w1, w0, #0x30
  43f24c:	cmp	w0, #0x5f
  43f250:	and	w1, w1, #0xff
  43f254:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  43f258:	b.ls	43f26c <_obstack_memory_used@@Base+0x5404>  // b.plast
  43f25c:	sub	w0, w0, #0x41
  43f260:	and	w0, w0, #0xff
  43f264:	cmp	w0, #0x19
  43f268:	b.hi	43f784 <_obstack_memory_used@@Base+0x591c>  // b.pmore
  43f26c:	mov	w1, #0x0                   	// #0
  43f270:	mov	x0, x19
  43f274:	bl	43ca60 <_obstack_memory_used@@Base+0x2bf8>
  43f278:	str	x0, [sp, #72]
  43f27c:	ldr	x1, [x19, #24]
  43f280:	mov	x20, x0
  43f284:	ldrb	w0, [x1]
  43f288:	cmp	w0, #0x49
  43f28c:	b.ne	43ef04 <_obstack_memory_used@@Base+0x509c>  // b.any
  43f290:	add	x1, x1, #0x1
  43f294:	str	x1, [x19, #24]
  43f298:	mov	x0, x19
  43f29c:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43f2a0:	mov	x3, x0
  43f2a4:	mov	x2, x20
  43f2a8:	mov	x0, x19
  43f2ac:	mov	w1, #0x4                   	// #4
  43f2b0:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f2b4:	mov	x20, x0
  43f2b8:	str	x0, [sp, #72]
  43f2bc:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f2c0:	mov	x0, x19
  43f2c4:	stp	x21, x22, [sp, #32]
  43f2c8:	bl	43c7e0 <_obstack_memory_used@@Base+0x2978>
  43f2cc:	ldr	x21, [x19, #24]
  43f2d0:	str	x0, [sp, #72]
  43f2d4:	mov	x20, x0
  43f2d8:	ldrb	w0, [x21]
  43f2dc:	cmp	w0, #0x49
  43f2e0:	b.eq	43f708 <_obstack_memory_used@@Base+0x58a0>  // b.none
  43f2e4:	ldp	x21, x22, [sp, #32]
  43f2e8:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f2ec:	add	x4, x4, #0x1
  43f2f0:	str	x4, [x19, #24]
  43f2f4:	mov	x0, x19
  43f2f8:	bl	43c860 <_obstack_memory_used@@Base+0x29f8>
  43f2fc:	mov	x2, x0
  43f300:	mov	x3, #0x0                   	// #0
  43f304:	mov	x0, x19
  43f308:	mov	w1, #0x28                  	// #40
  43f30c:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f310:	mov	x20, x0
  43f314:	str	x0, [sp, #72]
  43f318:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f31c:	add	x4, x4, #0x1
  43f320:	str	x4, [x19, #24]
  43f324:	mov	x0, x19
  43f328:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f32c:	mov	x2, x0
  43f330:	mov	x3, #0x0                   	// #0
  43f334:	mov	x0, x19
  43f338:	mov	w1, #0x23                  	// #35
  43f33c:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f340:	mov	x20, x0
  43f344:	str	x0, [sp, #72]
  43f348:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f34c:	add	x3, x4, #0x1
  43f350:	str	x3, [x19, #24]
  43f354:	ldrb	w0, [x4, #1]
  43f358:	cmp	w0, #0x5f
  43f35c:	b.eq	43f77c <_obstack_memory_used@@Base+0x5914>  // b.none
  43f360:	sub	w0, w0, #0x30
  43f364:	and	w0, w0, #0xff
  43f368:	cmp	w0, #0x9
  43f36c:	b.hi	43f7d4 <_obstack_memory_used@@Base+0x596c>  // b.pmore
  43f370:	mov	x1, x3
  43f374:	nop
  43f378:	mov	x4, x1
  43f37c:	add	x1, x1, #0x1
  43f380:	str	x1, [x19, #24]
  43f384:	ldrb	w0, [x1]
  43f388:	sub	w0, w0, #0x30
  43f38c:	and	w0, w0, #0xff
  43f390:	cmp	w0, #0x9
  43f394:	b.ls	43f378 <_obstack_memory_used@@Base+0x5510>  // b.plast
  43f398:	ldp	w0, w5, [x19, #40]
  43f39c:	sub	x2, x1, x3
  43f3a0:	cmp	w0, w5
  43f3a4:	b.ge	43ef00 <_obstack_memory_used@@Base+0x5098>  // b.tcont
  43f3a8:	mov	w7, #0x18                  	// #24
  43f3ac:	add	w6, w0, #0x1
  43f3b0:	ldr	x5, [x19, #32]
  43f3b4:	smull	x0, w0, w7
  43f3b8:	cmp	w2, #0x0
  43f3bc:	add	x20, x5, x0
  43f3c0:	str	wzr, [x20, #4]
  43f3c4:	str	w6, [x19, #40]
  43f3c8:	b.le	43ef00 <_obstack_memory_used@@Base+0x5098>
  43f3cc:	str	xzr, [x5, x0]
  43f3d0:	str	x3, [x20, #8]
  43f3d4:	str	w2, [x20, #16]
  43f3d8:	ldrb	w0, [x4, #1]
  43f3dc:	mov	x3, x1
  43f3e0:	cmp	w0, #0x5f
  43f3e4:	b.ne	43ef00 <_obstack_memory_used@@Base+0x5098>  // b.any
  43f3e8:	add	x3, x3, #0x1
  43f3ec:	str	x3, [x19, #24]
  43f3f0:	mov	x0, x19
  43f3f4:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f3f8:	mov	x3, x0
  43f3fc:	mov	x2, x20
  43f400:	mov	x0, x19
  43f404:	mov	w1, #0x2a                  	// #42
  43f408:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f40c:	mov	x20, x0
  43f410:	str	x0, [sp, #72]
  43f414:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f418:	add	x4, x4, #0x1
  43f41c:	str	x4, [x19, #24]
  43f420:	mov	x0, x19
  43f424:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f428:	mov	x20, x0
  43f42c:	cbz	x0, 43ef00 <_obstack_memory_used@@Base+0x5098>
  43f430:	mov	x0, x19
  43f434:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f438:	mov	x3, x0
  43f43c:	cbz	x0, 43ef00 <_obstack_memory_used@@Base+0x5098>
  43f440:	mov	x2, x20
  43f444:	mov	x0, x19
  43f448:	mov	w1, #0x2b                  	// #43
  43f44c:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f450:	mov	x20, x0
  43f454:	str	x0, [sp, #72]
  43f458:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f45c:	cmp	w0, #0x54
  43f460:	b.eq	43f52c <_obstack_memory_used@@Base+0x56c4>  // b.none
  43f464:	cmp	w0, #0x61
  43f468:	b.ne	43f5c0 <_obstack_memory_used@@Base+0x5758>  // b.any
  43f46c:	ldp	w0, w1, [x19, #40]
  43f470:	cmp	w0, w1
  43f474:	b.ge	43ef00 <_obstack_memory_used@@Base+0x5098>  // b.tcont
  43f478:	mov	w3, #0x18                  	// #24
  43f47c:	add	w1, w0, #0x1
  43f480:	ldr	x2, [x19, #32]
  43f484:	smull	x0, w0, w3
  43f488:	str	w1, [x19, #40]
  43f48c:	mov	w3, #0x4                   	// #4
  43f490:	add	x20, x2, x0
  43f494:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  43f498:	add	x1, x1, #0xa20
  43f49c:	str	xzr, [x2, x0]
  43f4a0:	str	x1, [x20, #8]
  43f4a4:	str	w3, [x20, #16]
  43f4a8:	b	43ef04 <_obstack_memory_used@@Base+0x509c>
  43f4ac:	cmp	w0, #0x73
  43f4b0:	b.eq	43f850 <_obstack_memory_used@@Base+0x59e8>  // b.none
  43f4b4:	b.ls	43f588 <_obstack_memory_used@@Base+0x5720>  // b.plast
  43f4b8:	cmp	w0, #0x75
  43f4bc:	b.eq	43f9b8 <_obstack_memory_used@@Base+0x5b50>  // b.none
  43f4c0:	cmp	w0, #0x76
  43f4c4:	b.ne	43f524 <_obstack_memory_used@@Base+0x56bc>  // b.any
  43f4c8:	ldrb	w0, [x4, #2]
  43f4cc:	cmp	w0, #0x5f
  43f4d0:	b.eq	43fa50 <_obstack_memory_used@@Base+0x5be8>  // b.none
  43f4d4:	mov	x0, x19
  43f4d8:	bl	43c700 <_obstack_memory_used@@Base+0x2898>
  43f4dc:	mov	x20, x0
  43f4e0:	cbz	x20, 43ef00 <_obstack_memory_used@@Base+0x5098>
  43f4e4:	ldr	x0, [x19, #24]
  43f4e8:	ldrb	w1, [x0]
  43f4ec:	cmp	w1, #0x5f
  43f4f0:	b.ne	43ef00 <_obstack_memory_used@@Base+0x5098>  // b.any
  43f4f4:	add	x0, x0, #0x1
  43f4f8:	str	x0, [x19, #24]
  43f4fc:	mov	x0, x19
  43f500:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f504:	mov	x3, x0
  43f508:	mov	x2, x20
  43f50c:	mov	x0, x19
  43f510:	mov	w1, #0x2d                  	// #45
  43f514:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f518:	mov	x20, x0
  43f51c:	str	x0, [sp, #72]
  43f520:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f524:	cmp	w0, #0x74
  43f528:	b.ne	43ef00 <_obstack_memory_used@@Base+0x5098>  // b.any
  43f52c:	ldr	w20, [x19, #76]
  43f530:	mov	w0, #0x1                   	// #1
  43f534:	str	w0, [x19, #76]
  43f538:	mov	x0, x19
  43f53c:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43f540:	str	w20, [x19, #76]
  43f544:	mov	x2, x0
  43f548:	mov	x3, #0x0                   	// #0
  43f54c:	mov	x0, x19
  43f550:	mov	w1, #0x43                  	// #67
  43f554:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f558:	str	x0, [sp, #72]
  43f55c:	mov	x20, x0
  43f560:	cbz	x0, 43ef00 <_obstack_memory_used@@Base+0x5098>
  43f564:	ldr	x0, [x19, #24]
  43f568:	ldrb	w1, [x0]
  43f56c:	cbz	w1, 43ef00 <_obstack_memory_used@@Base+0x5098>
  43f570:	add	x1, x0, #0x1
  43f574:	str	x1, [x19, #24]
  43f578:	ldrb	w0, [x0]
  43f57c:	cmp	w0, #0x45
  43f580:	b.ne	43ef00 <_obstack_memory_used@@Base+0x5098>  // b.any
  43f584:	b	43f05c <_obstack_memory_used@@Base+0x51f4>
  43f588:	cmp	w0, #0x6e
  43f58c:	b.eq	43f918 <_obstack_memory_used@@Base+0x5ab0>  // b.none
  43f590:	cmp	w0, #0x70
  43f594:	b.ne	43f670 <_obstack_memory_used@@Base+0x5808>  // b.any
  43f598:	mov	x0, x19
  43f59c:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f5a0:	mov	x3, #0x0                   	// #0
  43f5a4:	mov	x2, x0
  43f5a8:	mov	w1, #0x4b                  	// #75
  43f5ac:	mov	x0, x19
  43f5b0:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f5b4:	mov	x20, x0
  43f5b8:	str	x0, [sp, #72]
  43f5bc:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f5c0:	cmp	w0, #0x46
  43f5c4:	b.ne	43ef00 <_obstack_memory_used@@Base+0x5098>  // b.any
  43f5c8:	ldp	w0, w1, [x19, #40]
  43f5cc:	cmp	w0, w1
  43f5d0:	b.ge	43fa8c <_obstack_memory_used@@Base+0x5c24>  // b.tcont
  43f5d4:	mov	w2, #0x18                  	// #24
  43f5d8:	add	w3, w0, #0x1
  43f5dc:	ldr	x1, [x19, #32]
  43f5e0:	smull	x0, w0, w2
  43f5e4:	mov	w2, #0x2c                  	// #44
  43f5e8:	add	x20, x1, x0
  43f5ec:	str	wzr, [x20, #4]
  43f5f0:	str	w3, [x19, #40]
  43f5f4:	str	x20, [sp, #72]
  43f5f8:	str	w2, [x1, x0]
  43f5fc:	ldrb	w0, [x4, #2]
  43f600:	sub	w0, w0, #0x30
  43f604:	and	w0, w0, #0xff
  43f608:	cmp	w0, #0x9
  43f60c:	cset	w1, ls  // ls = plast
  43f610:	strh	w1, [x20, #16]
  43f614:	b.hi	43f624 <_obstack_memory_used@@Base+0x57bc>  // b.pmore
  43f618:	add	x0, x19, #0x18
  43f61c:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43f620:	ldr	x20, [sp, #72]
  43f624:	mov	x0, x19
  43f628:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43f62c:	str	x0, [x20, #8]
  43f630:	ldr	x1, [sp, #72]
  43f634:	ldr	x0, [x1, #8]
  43f638:	cbz	x0, 43ef00 <_obstack_memory_used@@Base+0x5098>
  43f63c:	add	x0, x19, #0x18
  43f640:	bl	43c630 <_obstack_memory_used@@Base+0x27c8>
  43f644:	ldr	x1, [x19, #24]
  43f648:	ldrb	w0, [x1]
  43f64c:	cbz	w0, 43f65c <_obstack_memory_used@@Base+0x57f4>
  43f650:	add	x0, x1, #0x1
  43f654:	str	x0, [x19, #24]
  43f658:	ldrb	w0, [x1]
  43f65c:	ldr	x20, [sp, #72]
  43f660:	cmp	w0, #0x73
  43f664:	cset	w0, eq  // eq = none
  43f668:	strh	w0, [x20, #18]
  43f66c:	b	43ef04 <_obstack_memory_used@@Base+0x509c>
  43f670:	cmp	w0, #0x69
  43f674:	b.ne	43ef00 <_obstack_memory_used@@Base+0x5098>  // b.any
  43f678:	ldp	w0, w1, [x19, #40]
  43f67c:	cmp	w0, w1
  43f680:	b.ge	43faa0 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  43f684:	mov	w1, #0x18                  	// #24
  43f688:	add	w5, w0, #0x1
  43f68c:	ldr	x3, [x19, #32]
  43f690:	smull	x0, w0, w1
  43f694:	ldr	w2, [x19, #72]
  43f698:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x3c198>
  43f69c:	add	x1, x1, #0xdf0
  43f6a0:	add	x20, x3, x0
  43f6a4:	add	x1, x1, #0x588
  43f6a8:	mov	w4, #0x27                  	// #39
  43f6ac:	str	wzr, [x20, #4]
  43f6b0:	add	w2, w2, #0x8
  43f6b4:	str	w5, [x19, #40]
  43f6b8:	str	w4, [x3, x0]
  43f6bc:	str	x1, [x20, #8]
  43f6c0:	str	w2, [x19, #72]
  43f6c4:	b	43ef04 <_obstack_memory_used@@Base+0x509c>
  43f6c8:	cmp	w0, #0x64
  43f6cc:	b.ne	43ef00 <_obstack_memory_used@@Base+0x5098>  // b.any
  43f6d0:	ldp	w0, w1, [x19, #40]
  43f6d4:	cmp	w0, w1
  43f6d8:	b.ge	43faa0 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  43f6dc:	mov	w1, #0x18                  	// #24
  43f6e0:	add	w5, w0, #0x1
  43f6e4:	ldr	x3, [x19, #32]
  43f6e8:	smull	x0, w0, w1
  43f6ec:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x3c198>
  43f6f0:	add	x1, x1, #0xdf0
  43f6f4:	ldr	w2, [x19, #72]
  43f6f8:	add	x1, x1, #0x4e8
  43f6fc:	add	x20, x3, x0
  43f700:	mov	w4, #0x27                  	// #39
  43f704:	b	43f1a8 <_obstack_memory_used@@Base+0x5340>
  43f708:	ldr	w0, [x19, #80]
  43f70c:	cbnz	w0, 43f800 <_obstack_memory_used@@Base+0x5998>
  43f710:	cbz	x20, 43efd8 <_obstack_memory_used@@Base+0x5170>
  43f714:	ldp	w0, w1, [x19, #56]
  43f718:	cmp	w0, w1
  43f71c:	b.ge	43efd8 <_obstack_memory_used@@Base+0x5170>  // b.tcont
  43f720:	ldr	x2, [x19, #48]
  43f724:	add	w1, w0, #0x1
  43f728:	mov	x3, #0x0                   	// #0
  43f72c:	str	x20, [x2, w0, sxtw #3]
  43f730:	str	w1, [x19, #56]
  43f734:	ldrb	w0, [x21]
  43f738:	sub	w0, w0, #0x49
  43f73c:	and	w0, w0, #0xff
  43f740:	cmp	w0, #0x1
  43f744:	b.hi	43f75c <_obstack_memory_used@@Base+0x58f4>  // b.pmore
  43f748:	add	x21, x21, #0x1
  43f74c:	str	x21, [x19, #24]
  43f750:	mov	x0, x19
  43f754:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43f758:	mov	x3, x0
  43f75c:	mov	x2, x20
  43f760:	mov	x0, x19
  43f764:	mov	w1, #0x4                   	// #4
  43f768:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f76c:	mov	x20, x0
  43f770:	str	x0, [sp, #72]
  43f774:	ldp	x21, x22, [sp, #32]
  43f778:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f77c:	mov	x20, #0x0                   	// #0
  43f780:	b	43f3e8 <_obstack_memory_used@@Base+0x5580>
  43f784:	mov	x0, x19
  43f788:	bl	43e948 <_obstack_memory_used@@Base+0x4ae0>
  43f78c:	str	x0, [sp, #72]
  43f790:	mov	x20, x0
  43f794:	cbz	x0, 43ef00 <_obstack_memory_used@@Base+0x5098>
  43f798:	ldr	w0, [x0]
  43f79c:	cmp	w0, #0x18
  43f7a0:	b.ne	43f05c <_obstack_memory_used@@Base+0x51f4>  // b.any
  43f7a4:	b	43ef04 <_obstack_memory_used@@Base+0x509c>
  43f7a8:	add	x1, x1, #0x1
  43f7ac:	str	x1, [x19, #24]
  43f7b0:	mov	x0, x19
  43f7b4:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43f7b8:	mov	x3, x0
  43f7bc:	mov	x2, x20
  43f7c0:	mov	x0, x19
  43f7c4:	mov	w1, #0x4                   	// #4
  43f7c8:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43f7cc:	str	x0, [sp, #72]
  43f7d0:	b	43f1ec <_obstack_memory_used@@Base+0x5384>
  43f7d4:	ldr	w20, [x19, #76]
  43f7d8:	mov	w0, #0x1                   	// #1
  43f7dc:	str	w0, [x19, #76]
  43f7e0:	mov	x0, x19
  43f7e4:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43f7e8:	str	w20, [x19, #76]
  43f7ec:	mov	x20, x0
  43f7f0:	cbz	x0, 43ef00 <_obstack_memory_used@@Base+0x5098>
  43f7f4:	ldr	x1, [x19, #24]
  43f7f8:	ldrb	w0, [x1]
  43f7fc:	b	43f3dc <_obstack_memory_used@@Base+0x5574>
  43f800:	ldr	w22, [x19, #56]
  43f804:	add	x0, x21, #0x1
  43f808:	ldr	w20, [x19, #72]
  43f80c:	str	x23, [sp, #48]
  43f810:	str	x0, [x19, #24]
  43f814:	mov	x0, x19
  43f818:	ldr	w23, [x19, #40]
  43f81c:	bl	43e090 <_obstack_memory_used@@Base+0x4228>
  43f820:	ldr	x1, [x19, #24]
  43f824:	ldrb	w1, [x1]
  43f828:	cmp	w1, #0x49
  43f82c:	b.eq	43fa08 <_obstack_memory_used@@Base+0x5ba0>  // b.none
  43f830:	str	x21, [x19, #24]
  43f834:	str	w23, [x19, #40]
  43f838:	str	w22, [x19, #56]
  43f83c:	str	w20, [x19, #72]
  43f840:	ldp	x21, x22, [sp, #32]
  43f844:	ldr	x23, [sp, #48]
  43f848:	ldr	x20, [sp, #72]
  43f84c:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43f850:	ldp	w0, w1, [x19, #40]
  43f854:	cmp	w0, w1
  43f858:	b.ge	43faa0 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  43f85c:	mov	w1, #0x18                  	// #24
  43f860:	add	w5, w0, #0x1
  43f864:	ldr	x3, [x19, #32]
  43f868:	smull	x0, w0, w1
  43f86c:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x3c198>
  43f870:	add	x1, x1, #0xdf0
  43f874:	ldr	w2, [x19, #72]
  43f878:	add	x1, x1, #0x568
  43f87c:	add	x20, x3, x0
  43f880:	mov	w4, #0x27                  	// #39
  43f884:	b	43f6ac <_obstack_memory_used@@Base+0x5844>
  43f888:	ldp	w0, w1, [x19, #40]
  43f88c:	cmp	w0, w1
  43f890:	b.ge	43ef00 <_obstack_memory_used@@Base+0x5098>  // b.tcont
  43f894:	mov	w3, #0x18                  	// #24
  43f898:	add	w1, w0, #0x1
  43f89c:	ldr	x2, [x19, #32]
  43f8a0:	smull	x0, w0, w3
  43f8a4:	str	w1, [x19, #40]
  43f8a8:	mov	w3, #0xe                   	// #14
  43f8ac:	add	x20, x2, x0
  43f8b0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  43f8b4:	add	x1, x1, #0xa28
  43f8b8:	str	xzr, [x2, x0]
  43f8bc:	str	x1, [x20, #8]
  43f8c0:	str	w3, [x20, #16]
  43f8c4:	b	43ef04 <_obstack_memory_used@@Base+0x509c>
  43f8c8:	ldp	w0, w1, [x19, #40]
  43f8cc:	cmp	w0, w1
  43f8d0:	b.ge	43faa0 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  43f8d4:	mov	w1, #0x18                  	// #24
  43f8d8:	add	w5, w0, #0x1
  43f8dc:	ldr	x3, [x19, #32]
  43f8e0:	smull	x0, w0, w1
  43f8e4:	ldr	w2, [x19, #72]
  43f8e8:	mov	w4, #0x27                  	// #39
  43f8ec:	add	x20, x3, x0
  43f8f0:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x3c198>
  43f8f4:	add	x1, x1, #0xdf0
  43f8f8:	add	w2, w2, #0x4
  43f8fc:	add	x1, x1, #0x528
  43f900:	str	wzr, [x20, #4]
  43f904:	str	w5, [x19, #40]
  43f908:	str	w4, [x3, x0]
  43f90c:	str	x1, [x20, #8]
  43f910:	str	w2, [x19, #72]
  43f914:	b	43ef04 <_obstack_memory_used@@Base+0x509c>
  43f918:	ldp	w0, w1, [x19, #40]
  43f91c:	cmp	w0, w1
  43f920:	b.ge	43faa0 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  43f924:	mov	w1, #0x18                  	// #24
  43f928:	add	w5, w0, #0x1
  43f92c:	ldr	x3, [x19, #32]
  43f930:	smull	x0, w0, w1
  43f934:	ldr	w2, [x19, #72]
  43f938:	mov	w4, #0x27                  	// #39
  43f93c:	add	x20, x3, x0
  43f940:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x3c198>
  43f944:	add	x1, x1, #0xdf0
  43f948:	add	w2, w2, #0x11
  43f94c:	add	x1, x1, #0x5a8
  43f950:	str	wzr, [x20, #4]
  43f954:	str	w5, [x19, #40]
  43f958:	str	w4, [x3, x0]
  43f95c:	str	x1, [x20, #8]
  43f960:	str	w2, [x19, #72]
  43f964:	b	43ef04 <_obstack_memory_used@@Base+0x509c>
  43f968:	ldp	w0, w1, [x19, #40]
  43f96c:	cmp	w0, w1
  43f970:	b.ge	43faa0 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  43f974:	mov	w1, #0x18                  	// #24
  43f978:	add	w5, w0, #0x1
  43f97c:	ldr	x3, [x19, #32]
  43f980:	smull	x0, w0, w1
  43f984:	ldr	w2, [x19, #72]
  43f988:	mov	w4, #0x27                  	// #39
  43f98c:	add	x20, x3, x0
  43f990:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x3c198>
  43f994:	add	x1, x1, #0xdf0
  43f998:	add	w2, w2, #0xa
  43f99c:	add	x1, x1, #0x508
  43f9a0:	str	wzr, [x20, #4]
  43f9a4:	str	w5, [x19, #40]
  43f9a8:	str	w4, [x3, x0]
  43f9ac:	str	x1, [x20, #8]
  43f9b0:	str	w2, [x19, #72]
  43f9b4:	b	43ef04 <_obstack_memory_used@@Base+0x509c>
  43f9b8:	ldp	w0, w1, [x19, #40]
  43f9bc:	cmp	w0, w1
  43f9c0:	b.ge	43faa0 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  43f9c4:	mov	w1, #0x18                  	// #24
  43f9c8:	add	w5, w0, #0x1
  43f9cc:	ldr	x3, [x19, #32]
  43f9d0:	smull	x0, w0, w1
  43f9d4:	ldr	w2, [x19, #72]
  43f9d8:	mov	w4, #0x27                  	// #39
  43f9dc:	add	x20, x3, x0
  43f9e0:	adrp	x1, 476000 <_obstack_memory_used@@Base+0x3c198>
  43f9e4:	add	x1, x1, #0xdf0
  43f9e8:	add	w2, w2, #0x7
  43f9ec:	add	x1, x1, #0x548
  43f9f0:	str	wzr, [x20, #4]
  43f9f4:	str	w5, [x19, #40]
  43f9f8:	str	w4, [x3, x0]
  43f9fc:	str	x1, [x20, #8]
  43fa00:	str	w2, [x19, #72]
  43fa04:	b	43ef04 <_obstack_memory_used@@Base+0x509c>
  43fa08:	ldr	x2, [sp, #72]
  43fa0c:	cbz	x2, 43fa80 <_obstack_memory_used@@Base+0x5c18>
  43fa10:	ldp	w4, w1, [x19, #56]
  43fa14:	cmp	w4, w1
  43fa18:	b.ge	43fa80 <_obstack_memory_used@@Base+0x5c18>  // b.tcont
  43fa1c:	ldr	x6, [x19, #48]
  43fa20:	add	w5, w4, #0x1
  43fa24:	mov	x3, x0
  43fa28:	mov	w1, #0x4                   	// #4
  43fa2c:	mov	x0, x19
  43fa30:	str	x2, [x6, w4, sxtw #3]
  43fa34:	str	w5, [x19, #56]
  43fa38:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43fa3c:	mov	x20, x0
  43fa40:	str	x0, [sp, #72]
  43fa44:	ldp	x21, x22, [sp, #32]
  43fa48:	ldr	x23, [sp, #48]
  43fa4c:	b	43f058 <_obstack_memory_used@@Base+0x51f0>
  43fa50:	add	x4, x4, #0x3
  43fa54:	stp	x21, x22, [sp, #32]
  43fa58:	mov	w1, #0x1                   	// #1
  43fa5c:	ldr	w21, [x19, #76]
  43fa60:	mov	x0, x19
  43fa64:	str	x4, [x19, #24]
  43fa68:	str	w1, [x19, #76]
  43fa6c:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43fa70:	mov	x20, x0
  43fa74:	str	w21, [x19, #76]
  43fa78:	ldp	x21, x22, [sp, #32]
  43fa7c:	b	43f4e0 <_obstack_memory_used@@Base+0x5678>
  43fa80:	ldp	x21, x22, [sp, #32]
  43fa84:	ldr	x23, [sp, #48]
  43fa88:	b	43ef00 <_obstack_memory_used@@Base+0x5098>
  43fa8c:	mov	x0, #0x0                   	// #0
  43fa90:	stp	x21, x22, [sp, #32]
  43fa94:	str	x23, [sp, #48]
  43fa98:	str	wzr, [x0]
  43fa9c:	brk	#0x3e8
  43faa0:	mov	x0, #0x0                   	// #0
  43faa4:	str	xzr, [sp, #72]
  43faa8:	stp	x21, x22, [sp, #32]
  43faac:	str	x23, [sp, #48]
  43fab0:	ldr	x0, [x0, #8]
  43fab4:	brk	#0x3e8
  43fab8:	stp	x29, x30, [sp, #-32]!
  43fabc:	mov	x29, sp
  43fac0:	ldr	x1, [x0, #24]
  43fac4:	stp	x19, x20, [sp, #16]
  43fac8:	mov	x19, x0
  43facc:	ldrb	w10, [x1]
  43fad0:	cbz	w10, 43fb94 <_obstack_memory_used@@Base+0x5d2c>
  43fad4:	add	x2, x1, #0x1
  43fad8:	str	x2, [x0, #24]
  43fadc:	ldrb	w10, [x1, #1]
  43fae0:	ldrb	w8, [x1]
  43fae4:	cbnz	w10, 43fb9c <_obstack_memory_used@@Base+0x5d34>
  43fae8:	adrp	x5, 476000 <_obstack_memory_used@@Base+0x3c198>
  43faec:	add	x5, x5, #0xdf0
  43faf0:	add	x5, x5, #0x5c8
  43faf4:	mov	w4, #0x43                  	// #67
  43faf8:	mov	w2, #0x0                   	// #0
  43fafc:	mov	w7, #0x18                  	// #24
  43fb00:	sub	w1, w4, w2
  43fb04:	add	w1, w1, w1, lsr #31
  43fb08:	add	w1, w2, w1, asr #1
  43fb0c:	smull	x3, w1, w7
  43fb10:	add	x9, x5, x3
  43fb14:	ldr	x3, [x5, x3]
  43fb18:	ldrb	w6, [x3]
  43fb1c:	cmp	w6, w8
  43fb20:	b.eq	43fb44 <_obstack_memory_used@@Base+0x5cdc>  // b.none
  43fb24:	b.ls	43fb8c <_obstack_memory_used@@Base+0x5d24>  // b.plast
  43fb28:	mov	w4, w1
  43fb2c:	cmp	w2, w4
  43fb30:	b.ne	43fb00 <_obstack_memory_used@@Base+0x5c98>  // b.any
  43fb34:	mov	x0, #0x0                   	// #0
  43fb38:	ldp	x19, x20, [sp, #16]
  43fb3c:	ldp	x29, x30, [sp], #32
  43fb40:	ret
  43fb44:	ldrb	w3, [x3, #1]
  43fb48:	cmp	w3, w10
  43fb4c:	b.ne	43fb24 <_obstack_memory_used@@Base+0x5cbc>  // b.any
  43fb50:	ldp	w0, w1, [x19, #40]
  43fb54:	cmp	w0, w1
  43fb58:	b.ge	43fb34 <_obstack_memory_used@@Base+0x5ccc>  // b.tcont
  43fb5c:	ldr	x2, [x19, #32]
  43fb60:	smull	x7, w0, w7
  43fb64:	add	w1, w0, #0x1
  43fb68:	mov	w3, #0x32                  	// #50
  43fb6c:	add	x0, x2, x7
  43fb70:	str	wzr, [x0, #4]
  43fb74:	str	w1, [x19, #40]
  43fb78:	str	w3, [x2, x7]
  43fb7c:	str	x9, [x0, #8]
  43fb80:	ldp	x19, x20, [sp, #16]
  43fb84:	ldp	x29, x30, [sp], #32
  43fb88:	ret
  43fb8c:	add	w2, w1, #0x1
  43fb90:	b	43fb2c <_obstack_memory_used@@Base+0x5cc4>
  43fb94:	mov	w8, #0x0                   	// #0
  43fb98:	b	43fae8 <_obstack_memory_used@@Base+0x5c80>
  43fb9c:	add	x2, x1, #0x2
  43fba0:	str	x2, [x0, #24]
  43fba4:	cmp	w8, #0x76
  43fba8:	ldrb	w10, [x1, #1]
  43fbac:	b.ne	43fc08 <_obstack_memory_used@@Base+0x5da0>  // b.any
  43fbb0:	sub	w11, w10, #0x30
  43fbb4:	and	w1, w11, #0xff
  43fbb8:	cmp	w1, #0x9
  43fbbc:	b.hi	43fae8 <_obstack_memory_used@@Base+0x5c80>  // b.pmore
  43fbc0:	bl	43c860 <_obstack_memory_used@@Base+0x29f8>
  43fbc4:	mov	x2, x0
  43fbc8:	ldp	w1, w0, [x19, #40]
  43fbcc:	cmp	w1, w0
  43fbd0:	b.ge	43fb34 <_obstack_memory_used@@Base+0x5ccc>  // b.tcont
  43fbd4:	mov	w0, #0x18                  	// #24
  43fbd8:	add	w4, w1, #0x1
  43fbdc:	ldr	x3, [x19, #32]
  43fbe0:	smull	x1, w1, w0
  43fbe4:	add	x0, x3, x1
  43fbe8:	str	wzr, [x0, #4]
  43fbec:	str	w4, [x19, #40]
  43fbf0:	cbz	x2, 43fb34 <_obstack_memory_used@@Base+0x5ccc>
  43fbf4:	mov	x4, #0x33                  	// #51
  43fbf8:	str	x4, [x3, x1]
  43fbfc:	str	w11, [x0, #8]
  43fc00:	str	x2, [x0, #16]
  43fc04:	b	43fb38 <_obstack_memory_used@@Base+0x5cd0>
  43fc08:	cmp	w10, #0x76
  43fc0c:	mov	w1, #0x63                  	// #99
  43fc10:	ccmp	w8, w1, #0x0, eq  // eq = none
  43fc14:	b.ne	43fae8 <_obstack_memory_used@@Base+0x5c80>  // b.any
  43fc18:	ldp	w1, w20, [x0, #76]
  43fc1c:	cmp	w1, #0x0
  43fc20:	cset	w1, eq  // eq = none
  43fc24:	str	w1, [x0, #80]
  43fc28:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43fc2c:	mov	x2, x0
  43fc30:	ldr	w1, [x19, #80]
  43fc34:	mov	x3, #0x0                   	// #0
  43fc38:	cbz	w1, 43fc58 <_obstack_memory_used@@Base+0x5df0>
  43fc3c:	mov	x0, x19
  43fc40:	mov	w1, #0x35                  	// #53
  43fc44:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43fc48:	str	w20, [x19, #80]
  43fc4c:	ldp	x19, x20, [sp, #16]
  43fc50:	ldp	x29, x30, [sp], #32
  43fc54:	ret
  43fc58:	mov	x0, x19
  43fc5c:	mov	w1, #0x34                  	// #52
  43fc60:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43fc64:	str	w20, [x19, #80]
  43fc68:	b	43fc4c <_obstack_memory_used@@Base+0x5de4>
  43fc6c:	nop
  43fc70:	stp	x29, x30, [sp, #-64]!
  43fc74:	mov	x29, sp
  43fc78:	stp	x19, x20, [sp, #16]
  43fc7c:	mov	x19, x0
  43fc80:	mov	w0, #0x2e                  	// #46
  43fc84:	str	xzr, [sp, #56]
  43fc88:	ldr	x2, [x19, #24]
  43fc8c:	ldrb	w1, [x2]
  43fc90:	cmp	w1, #0x45
  43fc94:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  43fc98:	ccmp	w1, w0, #0x4, ne  // ne = any
  43fc9c:	b.eq	43fd30 <_obstack_memory_used@@Base+0x5ec8>  // b.none
  43fca0:	add	x20, sp, #0x38
  43fca4:	stp	x21, x22, [sp, #32]
  43fca8:	mov	w22, w0
  43fcac:	mov	w21, #0x4f                  	// #79
  43fcb0:	cmp	w1, #0x52
  43fcb4:	mov	x0, x19
  43fcb8:	ccmp	w1, w21, #0x4, ne  // ne = any
  43fcbc:	b.ne	43fccc <_obstack_memory_used@@Base+0x5e64>  // b.any
  43fcc0:	ldrb	w1, [x2, #1]
  43fcc4:	cmp	w1, #0x45
  43fcc8:	b.eq	43fd0c <_obstack_memory_used@@Base+0x5ea4>  // b.none
  43fccc:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  43fcd0:	mov	x2, x0
  43fcd4:	mov	x3, #0x0                   	// #0
  43fcd8:	mov	x0, x19
  43fcdc:	mov	w1, #0x2e                  	// #46
  43fce0:	cbz	x2, 43fd2c <_obstack_memory_used@@Base+0x5ec4>
  43fce4:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43fce8:	str	x0, [x20]
  43fcec:	add	x20, x0, #0x10
  43fcf0:	cbz	x0, 43fd2c <_obstack_memory_used@@Base+0x5ec4>
  43fcf4:	ldr	x2, [x19, #24]
  43fcf8:	ldrb	w1, [x2]
  43fcfc:	cmp	w1, #0x45
  43fd00:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  43fd04:	ccmp	w1, w22, #0x4, ne  // ne = any
  43fd08:	b.ne	43fcb0 <_obstack_memory_used@@Base+0x5e48>  // b.any
  43fd0c:	ldr	x0, [sp, #56]
  43fd10:	cbz	x0, 43fd2c <_obstack_memory_used@@Base+0x5ec4>
  43fd14:	ldr	x1, [x0, #16]
  43fd18:	cbz	x1, 43fd40 <_obstack_memory_used@@Base+0x5ed8>
  43fd1c:	ldp	x21, x22, [sp, #32]
  43fd20:	ldp	x19, x20, [sp, #16]
  43fd24:	ldp	x29, x30, [sp], #64
  43fd28:	ret
  43fd2c:	ldp	x21, x22, [sp, #32]
  43fd30:	mov	x0, #0x0                   	// #0
  43fd34:	ldp	x19, x20, [sp, #16]
  43fd38:	ldp	x29, x30, [sp], #64
  43fd3c:	ret
  43fd40:	ldr	x1, [x0, #8]
  43fd44:	ldr	w2, [x1]
  43fd48:	cmp	w2, #0x27
  43fd4c:	b.ne	43fd1c <_obstack_memory_used@@Base+0x5eb4>  // b.any
  43fd50:	ldr	x1, [x1, #8]
  43fd54:	ldr	w2, [x1, #28]
  43fd58:	cmp	w2, #0x9
  43fd5c:	b.ne	43fd1c <_obstack_memory_used@@Base+0x5eb4>  // b.any
  43fd60:	ldr	w2, [x1, #8]
  43fd64:	ldr	w1, [x19, #72]
  43fd68:	ldp	x21, x22, [sp, #32]
  43fd6c:	sub	w1, w1, w2
  43fd70:	str	w1, [x19, #72]
  43fd74:	str	xzr, [x0, #8]
  43fd78:	b	43fd20 <_obstack_memory_used@@Base+0x5eb8>
  43fd7c:	nop
  43fd80:	stp	x29, x30, [sp, #-96]!
  43fd84:	cmp	w2, #0x0
  43fd88:	mov	x29, sp
  43fd8c:	stp	x19, x20, [sp, #16]
  43fd90:	mov	x19, x0
  43fd94:	mov	w0, #0x1b                  	// #27
  43fd98:	stp	x21, x22, [sp, #32]
  43fd9c:	mov	x20, x1
  43fda0:	mov	w22, #0x1c                  	// #28
  43fda4:	ldr	x4, [x19, #24]
  43fda8:	stp	x23, x24, [sp, #48]
  43fdac:	mov	w23, #0x1d                  	// #29
  43fdb0:	stp	x25, x26, [sp, #64]
  43fdb4:	mov	w25, #0x1e                  	// #30
  43fdb8:	csel	w25, w25, w0, ne  // ne = any
  43fdbc:	ldrb	w5, [x4]
  43fdc0:	mov	w0, #0x1a                  	// #26
  43fdc4:	csel	w23, w23, w0, ne  // ne = any
  43fdc8:	mov	w0, #0x19                  	// #25
  43fdcc:	mov	w24, w2
  43fdd0:	csel	w22, w22, w0, ne  // ne = any
  43fdd4:	mov	x21, x1
  43fdd8:	mov	x0, x4
  43fddc:	mov	w26, #0x1                   	// #1
  43fde0:	bl	43cd70 <_obstack_memory_used@@Base+0x2f08>
  43fde4:	cbz	w0, 43ff00 <_obstack_memory_used@@Base+0x6098>
  43fde8:	add	x0, x4, #0x1
  43fdec:	str	x0, [x19, #24]
  43fdf0:	cmp	w5, #0x72
  43fdf4:	b.eq	43fec0 <_obstack_memory_used@@Base+0x6058>  // b.none
  43fdf8:	cmp	w5, #0x56
  43fdfc:	b.eq	43ff60 <_obstack_memory_used@@Base+0x60f8>  // b.none
  43fe00:	cmp	w5, #0x4b
  43fe04:	b.eq	43ff78 <_obstack_memory_used@@Base+0x6110>  // b.none
  43fe08:	ldrb	w0, [x4, #1]
  43fe0c:	cbz	w0, 43fea0 <_obstack_memory_used@@Base+0x6038>
  43fe10:	add	x0, x4, #0x2
  43fe14:	str	x0, [x19, #24]
  43fe18:	ldrb	w0, [x4, #1]
  43fe1c:	cmp	w0, #0x78
  43fe20:	b.eq	43ff90 <_obstack_memory_used@@Base+0x6128>  // b.none
  43fe24:	and	w1, w0, #0xffffffdf
  43fe28:	cmp	w1, #0x4f
  43fe2c:	and	w1, w1, #0xff
  43fe30:	b.ne	43ffa8 <_obstack_memory_used@@Base+0x6140>  // b.any
  43fe34:	ldr	w2, [x19, #72]
  43fe38:	cmp	w0, #0x4f
  43fe3c:	add	w0, w2, #0x9
  43fe40:	str	w0, [x19, #72]
  43fe44:	b.ne	43ffec <_obstack_memory_used@@Base+0x6184>  // b.any
  43fe48:	str	x27, [sp, #80]
  43fe4c:	mov	x0, x19
  43fe50:	ldr	w27, [x19, #76]
  43fe54:	str	w26, [x19, #76]
  43fe58:	bl	43d8b8 <_obstack_memory_used@@Base+0x3a50>
  43fe5c:	str	w27, [x19, #76]
  43fe60:	mov	x3, x0
  43fe64:	cbz	x0, 440004 <_obstack_memory_used@@Base+0x619c>
  43fe68:	ldr	x0, [x19, #24]
  43fe6c:	ldrb	w1, [x0]
  43fe70:	cmp	w1, #0x45
  43fe74:	b.ne	440004 <_obstack_memory_used@@Base+0x619c>  // b.any
  43fe78:	add	x0, x0, #0x1
  43fe7c:	mov	w1, #0x4f                  	// #79
  43fe80:	ldr	x27, [sp, #80]
  43fe84:	str	x0, [x19, #24]
  43fe88:	mov	x2, #0x0                   	// #0
  43fe8c:	mov	x0, x19
  43fe90:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43fe94:	str	x0, [x20]
  43fe98:	cbnz	x0, 43fee8 <_obstack_memory_used@@Base+0x6080>
  43fe9c:	nop
  43fea0:	mov	x20, #0x0                   	// #0
  43fea4:	mov	x0, x20
  43fea8:	ldp	x19, x20, [sp, #16]
  43feac:	ldp	x21, x22, [sp, #32]
  43feb0:	ldp	x23, x24, [sp, #48]
  43feb4:	ldp	x25, x26, [sp, #64]
  43feb8:	ldp	x29, x30, [sp], #96
  43febc:	ret
  43fec0:	ldr	w0, [x19, #72]
  43fec4:	mov	w1, w22
  43fec8:	mov	x3, #0x0                   	// #0
  43fecc:	add	w0, w0, #0x9
  43fed0:	str	w0, [x19, #72]
  43fed4:	mov	x0, x19
  43fed8:	mov	x2, #0x0                   	// #0
  43fedc:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  43fee0:	str	x0, [x20]
  43fee4:	cbz	x0, 43fea0 <_obstack_memory_used@@Base+0x6038>
  43fee8:	ldr	x4, [x19, #24]
  43feec:	add	x20, x0, #0x8
  43fef0:	mov	x0, x4
  43fef4:	ldrb	w5, [x4]
  43fef8:	bl	43cd70 <_obstack_memory_used@@Base+0x2f08>
  43fefc:	cbnz	w0, 43fde8 <_obstack_memory_used@@Base+0x5f80>
  43ff00:	cmp	w5, #0x46
  43ff04:	eor	w24, w24, #0x1
  43ff08:	cset	w0, eq  // eq = none
  43ff0c:	tst	w24, w0
  43ff10:	b.eq	43fea4 <_obstack_memory_used@@Base+0x603c>  // b.none
  43ff14:	cmp	x20, x21
  43ff18:	b.eq	43fea4 <_obstack_memory_used@@Base+0x603c>  // b.none
  43ff1c:	mov	w3, #0x1d                  	// #29
  43ff20:	mov	w2, #0x1e                  	// #30
  43ff24:	mov	w1, #0x1c                  	// #28
  43ff28:	b	43ff40 <_obstack_memory_used@@Base+0x60d8>
  43ff2c:	cmp	w0, #0x19
  43ff30:	b.eq	43fffc <_obstack_memory_used@@Base+0x6194>  // b.none
  43ff34:	add	x21, x21, #0x8
  43ff38:	cmp	x20, x21
  43ff3c:	b.eq	43fea4 <_obstack_memory_used@@Base+0x603c>  // b.none
  43ff40:	ldr	x21, [x21]
  43ff44:	ldr	w0, [x21]
  43ff48:	cmp	w0, #0x1a
  43ff4c:	b.eq	43fff4 <_obstack_memory_used@@Base+0x618c>  // b.none
  43ff50:	cmp	w0, #0x1b
  43ff54:	b.ne	43ff2c <_obstack_memory_used@@Base+0x60c4>  // b.any
  43ff58:	str	w2, [x21]
  43ff5c:	b	43ff34 <_obstack_memory_used@@Base+0x60cc>
  43ff60:	ldr	w0, [x19, #72]
  43ff64:	mov	w1, w23
  43ff68:	mov	x3, #0x0                   	// #0
  43ff6c:	add	w0, w0, #0x9
  43ff70:	str	w0, [x19, #72]
  43ff74:	b	43fed4 <_obstack_memory_used@@Base+0x606c>
  43ff78:	ldr	w0, [x19, #72]
  43ff7c:	mov	w1, w25
  43ff80:	mov	x3, #0x0                   	// #0
  43ff84:	add	w0, w0, #0x6
  43ff88:	str	w0, [x19, #72]
  43ff8c:	b	43fed4 <_obstack_memory_used@@Base+0x606c>
  43ff90:	ldr	w0, [x19, #72]
  43ff94:	mov	x3, #0x0                   	// #0
  43ff98:	mov	w1, #0x4d                  	// #77
  43ff9c:	add	w0, w0, #0x11
  43ffa0:	str	w0, [x19, #72]
  43ffa4:	b	43fed4 <_obstack_memory_used@@Base+0x606c>
  43ffa8:	cmp	w0, #0x77
  43ffac:	b.ne	43fea0 <_obstack_memory_used@@Base+0x6038>  // b.any
  43ffb0:	ldr	w1, [x19, #72]
  43ffb4:	mov	x0, x19
  43ffb8:	add	w1, w1, #0x6
  43ffbc:	str	w1, [x19, #72]
  43ffc0:	bl	43fc70 <_obstack_memory_used@@Base+0x5e08>
  43ffc4:	mov	x3, x0
  43ffc8:	cbz	x0, 43fea0 <_obstack_memory_used@@Base+0x6038>
  43ffcc:	ldr	x0, [x19, #24]
  43ffd0:	ldrb	w1, [x0]
  43ffd4:	cmp	w1, #0x45
  43ffd8:	b.ne	43fea0 <_obstack_memory_used@@Base+0x6038>  // b.any
  43ffdc:	add	x0, x0, #0x1
  43ffe0:	mov	w1, #0x50                  	// #80
  43ffe4:	str	x0, [x19, #24]
  43ffe8:	b	43fed4 <_obstack_memory_used@@Base+0x606c>
  43ffec:	mov	x3, #0x0                   	// #0
  43fff0:	b	43fed4 <_obstack_memory_used@@Base+0x606c>
  43fff4:	str	w3, [x21]
  43fff8:	b	43ff34 <_obstack_memory_used@@Base+0x60cc>
  43fffc:	str	w1, [x21]
  440000:	b	43ff34 <_obstack_memory_used@@Base+0x60cc>
  440004:	ldr	x27, [sp, #80]
  440008:	b	43fea0 <_obstack_memory_used@@Base+0x6038>
  44000c:	nop
  440010:	stp	x29, x30, [sp, #-32]!
  440014:	mov	x29, sp
  440018:	stp	x19, x20, [sp, #16]
  44001c:	mov	x19, x0
  440020:	ldr	x0, [x0, #24]
  440024:	ldrb	w2, [x0]
  440028:	cmp	w2, #0x4a
  44002c:	b.eq	440090 <_obstack_memory_used@@Base+0x6228>  // b.none
  440030:	cbz	w1, 44006c <_obstack_memory_used@@Base+0x6204>
  440034:	mov	x0, x19
  440038:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  44003c:	mov	x20, x0
  440040:	cbz	x0, 440080 <_obstack_memory_used@@Base+0x6218>
  440044:	mov	x0, x19
  440048:	bl	43fc70 <_obstack_memory_used@@Base+0x5e08>
  44004c:	mov	x3, x0
  440050:	cbz	x0, 440080 <_obstack_memory_used@@Base+0x6218>
  440054:	mov	x2, x20
  440058:	mov	x0, x19
  44005c:	ldp	x19, x20, [sp, #16]
  440060:	mov	w1, #0x29                  	// #41
  440064:	ldp	x29, x30, [sp], #32
  440068:	b	43c3b0 <_obstack_memory_used@@Base+0x2548>
  44006c:	mov	x0, x19
  440070:	mov	x20, #0x0                   	// #0
  440074:	bl	43fc70 <_obstack_memory_used@@Base+0x5e08>
  440078:	mov	x3, x0
  44007c:	cbnz	x0, 440054 <_obstack_memory_used@@Base+0x61ec>
  440080:	mov	x0, #0x0                   	// #0
  440084:	ldp	x19, x20, [sp, #16]
  440088:	ldp	x29, x30, [sp], #32
  44008c:	ret
  440090:	add	x0, x0, #0x1
  440094:	str	x0, [x19, #24]
  440098:	b	440034 <_obstack_memory_used@@Base+0x61cc>
  44009c:	nop
  4400a0:	stp	x29, x30, [sp, #-32]!
  4400a4:	mov	x29, sp
  4400a8:	str	x19, [sp, #16]
  4400ac:	mov	x19, x0
  4400b0:	ldr	w0, [x0, #16]
  4400b4:	tbnz	w0, #18, 4400f0 <_obstack_memory_used@@Base+0x6288>
  4400b8:	ldr	w1, [x19, #84]
  4400bc:	cmp	w1, #0x800
  4400c0:	b.hi	440100 <_obstack_memory_used@@Base+0x6298>  // b.pmore
  4400c4:	ldr	x2, [x19, #24]
  4400c8:	add	w0, w1, #0x1
  4400cc:	str	w0, [x19, #84]
  4400d0:	mov	x0, #0x0                   	// #0
  4400d4:	ldrb	w3, [x2]
  4400d8:	cmp	w3, #0x46
  4400dc:	b.eq	440110 <_obstack_memory_used@@Base+0x62a8>  // b.none
  4400e0:	str	w1, [x19, #84]
  4400e4:	ldr	x19, [sp, #16]
  4400e8:	ldp	x29, x30, [sp], #32
  4400ec:	ret
  4400f0:	ldr	x2, [x19, #24]
  4400f4:	ldrb	w0, [x2]
  4400f8:	cmp	w0, #0x46
  4400fc:	b.eq	440110 <_obstack_memory_used@@Base+0x62a8>  // b.none
  440100:	mov	x0, #0x0                   	// #0
  440104:	ldr	x19, [sp, #16]
  440108:	ldp	x29, x30, [sp], #32
  44010c:	ret
  440110:	add	x4, x2, #0x1
  440114:	str	x4, [x19, #24]
  440118:	add	x3, x2, #0x2
  44011c:	mov	w1, #0x1                   	// #1
  440120:	ldrb	w2, [x2, #1]
  440124:	mov	x0, x19
  440128:	cmp	w2, #0x59
  44012c:	csel	x2, x3, x4, eq  // eq = none
  440130:	str	x2, [x19, #24]
  440134:	bl	440010 <_obstack_memory_used@@Base+0x61a8>
  440138:	mov	x1, x0
  44013c:	mov	x0, x19
  440140:	bl	43c438 <_obstack_memory_used@@Base+0x25d0>
  440144:	ldr	x1, [x19, #24]
  440148:	ldrb	w2, [x1]
  44014c:	cmp	w2, #0x45
  440150:	b.eq	440170 <_obstack_memory_used@@Base+0x6308>  // b.none
  440154:	mov	x0, #0x0                   	// #0
  440158:	ldr	w1, [x19, #16]
  44015c:	tbnz	w1, #18, 440104 <_obstack_memory_used@@Base+0x629c>
  440160:	ldr	w1, [x19, #84]
  440164:	sub	w1, w1, #0x1
  440168:	str	w1, [x19, #84]
  44016c:	b	4400e4 <_obstack_memory_used@@Base+0x627c>
  440170:	add	x1, x1, #0x1
  440174:	str	x1, [x19, #24]
  440178:	b	440158 <_obstack_memory_used@@Base+0x62f0>
  44017c:	nop
  440180:	stp	x29, x30, [sp, #-48]!
  440184:	mov	x29, sp
  440188:	ldr	x3, [x0, #24]
  44018c:	stp	x19, x20, [sp, #16]
  440190:	mov	x19, x0
  440194:	ldrb	w2, [x3]
  440198:	sub	w1, w2, #0x30
  44019c:	and	w1, w1, #0xff
  4401a0:	cmp	w1, #0x9
  4401a4:	b.ls	4402b4 <_obstack_memory_used@@Base+0x644c>  // b.plast
  4401a8:	sub	w1, w2, #0x61
  4401ac:	and	w1, w1, #0xff
  4401b0:	cmp	w1, #0x19
  4401b4:	b.hi	4401fc <_obstack_memory_used@@Base+0x6394>  // b.pmore
  4401b8:	cmp	w2, #0x6f
  4401bc:	b.eq	44037c <_obstack_memory_used@@Base+0x6514>  // b.none
  4401c0:	mov	x0, x19
  4401c4:	bl	43fab8 <_obstack_memory_used@@Base+0x5c50>
  4401c8:	mov	x20, x0
  4401cc:	cbz	x0, 4401dc <_obstack_memory_used@@Base+0x6374>
  4401d0:	ldr	w0, [x0]
  4401d4:	cmp	w0, #0x32
  4401d8:	b.eq	4402e0 <_obstack_memory_used@@Base+0x6478>  // b.none
  4401dc:	ldr	x0, [x19, #24]
  4401e0:	ldrb	w1, [x0]
  4401e4:	cmp	w1, #0x42
  4401e8:	b.eq	4402cc <_obstack_memory_used@@Base+0x6464>  // b.none
  4401ec:	mov	x0, x20
  4401f0:	ldp	x19, x20, [sp, #16]
  4401f4:	ldp	x29, x30, [sp], #48
  4401f8:	ret
  4401fc:	sub	w1, w2, #0x43
  440200:	and	w1, w1, #0xff
  440204:	cmp	w1, #0x1
  440208:	b.ls	440394 <_obstack_memory_used@@Base+0x652c>  // b.plast
  44020c:	cmp	w2, #0x4c
  440210:	b.eq	440348 <_obstack_memory_used@@Base+0x64e0>  // b.none
  440214:	cmp	w2, #0x55
  440218:	b.ne	440368 <_obstack_memory_used@@Base+0x6500>  // b.any
  44021c:	ldrb	w1, [x3, #1]
  440220:	cmp	w1, #0x6c
  440224:	b.eq	440458 <_obstack_memory_used@@Base+0x65f0>  // b.none
  440228:	cmp	w1, #0x74
  44022c:	b.ne	440368 <_obstack_memory_used@@Base+0x6500>  // b.any
  440230:	add	x1, x3, #0x1
  440234:	str	x1, [x0, #24]
  440238:	mov	x20, #0x0                   	// #0
  44023c:	ldrb	w1, [x3, #1]
  440240:	cmp	w1, #0x74
  440244:	b.ne	4401e4 <_obstack_memory_used@@Base+0x637c>  // b.any
  440248:	add	x3, x3, #0x2
  44024c:	str	x3, [x0, #24]
  440250:	bl	43c768 <_obstack_memory_used@@Base+0x2900>
  440254:	tbnz	w0, #31, 4401dc <_obstack_memory_used@@Base+0x6374>
  440258:	ldp	w1, w2, [x19, #40]
  44025c:	cmp	w1, w2
  440260:	b.ge	440620 <_obstack_memory_used@@Base+0x67b8>  // b.tcont
  440264:	ldp	x7, x3, [x19, #24]
  440268:	mov	w2, #0x18                  	// #24
  44026c:	add	w6, w1, #0x1
  440270:	mov	w4, #0x48                  	// #72
  440274:	smull	x1, w1, w2
  440278:	sxtw	x0, w0
  44027c:	ldp	w2, w5, [x19, #56]
  440280:	add	x20, x3, x1
  440284:	cmp	w2, w5
  440288:	str	wzr, [x20, #4]
  44028c:	str	w6, [x19, #40]
  440290:	str	w4, [x3, x1]
  440294:	str	x0, [x20, #8]
  440298:	b.ge	440614 <_obstack_memory_used@@Base+0x67ac>  // b.tcont
  44029c:	ldr	x1, [x19, #48]
  4402a0:	add	w0, w2, #0x1
  4402a4:	str	x20, [x1, w2, sxtw #3]
  4402a8:	str	w0, [x19, #56]
  4402ac:	ldrb	w1, [x7]
  4402b0:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  4402b4:	bl	43c860 <_obstack_memory_used@@Base+0x29f8>
  4402b8:	mov	x20, x0
  4402bc:	ldr	x3, [x19, #24]
  4402c0:	ldrb	w1, [x3]
  4402c4:	cmp	w1, #0x42
  4402c8:	b.ne	4401ec <_obstack_memory_used@@Base+0x6384>  // b.any
  4402cc:	mov	x1, x20
  4402d0:	mov	x0, x19
  4402d4:	ldp	x19, x20, [sp, #16]
  4402d8:	ldp	x29, x30, [sp], #48
  4402dc:	b	43c9e0 <_obstack_memory_used@@Base+0x2b78>
  4402e0:	ldr	x1, [x20, #8]
  4402e4:	ldr	w0, [x19, #72]
  4402e8:	ldr	x2, [x1]
  4402ec:	add	w0, w0, #0x7
  4402f0:	ldr	w1, [x1, #16]
  4402f4:	add	w0, w0, w1
  4402f8:	str	w0, [x19, #72]
  4402fc:	ldrb	w0, [x2]
  440300:	cmp	w0, #0x6c
  440304:	b.ne	4401dc <_obstack_memory_used@@Base+0x6374>  // b.any
  440308:	ldrb	w0, [x2, #1]
  44030c:	cmp	w0, #0x69
  440310:	b.ne	4401dc <_obstack_memory_used@@Base+0x6374>  // b.any
  440314:	ldrb	w0, [x2, #2]
  440318:	cbnz	w0, 4401dc <_obstack_memory_used@@Base+0x6374>
  44031c:	mov	x0, x19
  440320:	bl	43c860 <_obstack_memory_used@@Base+0x29f8>
  440324:	mov	x2, x20
  440328:	mov	x3, x0
  44032c:	mov	w1, #0x37                  	// #55
  440330:	mov	x0, x19
  440334:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  440338:	mov	x20, x0
  44033c:	ldr	x3, [x19, #24]
  440340:	ldrb	w1, [x3]
  440344:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  440348:	add	x3, x3, #0x1
  44034c:	str	x3, [x0, #24]
  440350:	bl	43c860 <_obstack_memory_used@@Base+0x29f8>
  440354:	mov	x20, x0
  440358:	cbz	x0, 440368 <_obstack_memory_used@@Base+0x6500>
  44035c:	mov	x0, x19
  440360:	bl	43cdc8 <_obstack_memory_used@@Base+0x2f60>
  440364:	cbnz	w0, 4401dc <_obstack_memory_used@@Base+0x6374>
  440368:	mov	x20, #0x0                   	// #0
  44036c:	mov	x0, x20
  440370:	ldp	x19, x20, [sp, #16]
  440374:	ldp	x29, x30, [sp], #48
  440378:	ret
  44037c:	ldrb	w0, [x3, #1]
  440380:	cmp	w0, #0x6e
  440384:	b.ne	4401c0 <_obstack_memory_used@@Base+0x6358>  // b.any
  440388:	add	x3, x3, #0x2
  44038c:	str	x3, [x19, #24]
  440390:	b	4401c0 <_obstack_memory_used@@Base+0x6358>
  440394:	ldr	x0, [x0, #64]
  440398:	cbz	x0, 4403ac <_obstack_memory_used@@Base+0x6544>
  44039c:	ldr	w1, [x0]
  4403a0:	cbz	w1, 440428 <_obstack_memory_used@@Base+0x65c0>
  4403a4:	cmp	w1, #0x18
  4403a8:	b.eq	440428 <_obstack_memory_used@@Base+0x65c0>  // b.none
  4403ac:	cmp	w2, #0x43
  4403b0:	b.eq	440508 <_obstack_memory_used@@Base+0x66a0>  // b.none
  4403b4:	ldrb	w1, [x3, #1]
  4403b8:	cmp	w1, #0x32
  4403bc:	b.eq	44060c <_obstack_memory_used@@Base+0x67a4>  // b.none
  4403c0:	b.hi	44057c <_obstack_memory_used@@Base+0x6714>  // b.pmore
  4403c4:	cmp	w1, #0x30
  4403c8:	b.eq	4405a8 <_obstack_memory_used@@Base+0x6740>  // b.none
  4403cc:	cmp	w1, #0x31
  4403d0:	mov	w4, #0x2                   	// #2
  4403d4:	b.ne	440590 <_obstack_memory_used@@Base+0x6728>  // b.any
  4403d8:	add	x1, x3, #0x2
  4403dc:	ldr	w2, [x19, #44]
  4403e0:	str	x1, [x19, #24]
  4403e4:	ldr	w1, [x19, #40]
  4403e8:	cmp	w1, w2
  4403ec:	b.ge	44059c <_obstack_memory_used@@Base+0x6734>  // b.tcont
  4403f0:	mov	w6, #0x18                  	// #24
  4403f4:	add	w5, w1, #0x1
  4403f8:	ldr	x2, [x19, #32]
  4403fc:	smull	x1, w1, w6
  440400:	add	x20, x2, x1
  440404:	str	wzr, [x20, #4]
  440408:	str	w5, [x19, #40]
  44040c:	cbz	x0, 44059c <_obstack_memory_used@@Base+0x6734>
  440410:	mov	x5, #0x8                   	// #8
  440414:	str	x5, [x2, x1]
  440418:	str	w4, [x20, #8]
  44041c:	str	x0, [x20, #16]
  440420:	ldrb	w1, [x3, #2]
  440424:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  440428:	ldr	w2, [x0, #16]
  44042c:	ldr	w1, [x19, #72]
  440430:	add	w1, w1, w2
  440434:	str	w1, [x19, #72]
  440438:	ldrb	w1, [x3]
  44043c:	cmp	w1, #0x43
  440440:	mov	w2, w1
  440444:	b.eq	440508 <_obstack_memory_used@@Base+0x66a0>  // b.none
  440448:	cmp	w1, #0x44
  44044c:	b.eq	4403b4 <_obstack_memory_used@@Base+0x654c>  // b.none
  440450:	mov	x20, #0x0                   	// #0
  440454:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  440458:	add	x1, x3, #0x1
  44045c:	str	x1, [x0, #24]
  440460:	mov	x20, #0x0                   	// #0
  440464:	ldrb	w1, [x3, #1]
  440468:	cmp	w1, #0x6c
  44046c:	b.ne	4401e4 <_obstack_memory_used@@Base+0x637c>  // b.any
  440470:	add	x3, x3, #0x2
  440474:	str	x3, [x0, #24]
  440478:	bl	43fc70 <_obstack_memory_used@@Base+0x5e08>
  44047c:	mov	x11, x0
  440480:	ldr	x0, [x19, #24]
  440484:	ldrb	w1, [x0]
  440488:	cbz	x11, 4401e4 <_obstack_memory_used@@Base+0x637c>
  44048c:	cmp	w1, #0x45
  440490:	b.ne	4401e4 <_obstack_memory_used@@Base+0x637c>  // b.any
  440494:	add	x0, x0, #0x1
  440498:	str	x0, [x19, #24]
  44049c:	mov	x0, x19
  4404a0:	bl	43c768 <_obstack_memory_used@@Base+0x2900>
  4404a4:	tbnz	w0, #31, 440620 <_obstack_memory_used@@Base+0x67b8>
  4404a8:	ldp	w1, w2, [x19, #40]
  4404ac:	ldr	x4, [x19, #24]
  4404b0:	cmp	w1, w2
  4404b4:	b.ge	440630 <_obstack_memory_used@@Base+0x67c8>  // b.tcont
  4404b8:	mov	w2, #0x18                  	// #24
  4404bc:	add	w6, w1, #0x1
  4404c0:	ldr	x3, [x19, #32]
  4404c4:	smull	x1, w1, w2
  4404c8:	ldp	w2, w7, [x19, #56]
  4404cc:	add	x20, x3, x1
  4404d0:	mov	w5, #0x46                  	// #70
  4404d4:	cmp	w2, w7
  4404d8:	str	wzr, [x20, #4]
  4404dc:	str	w6, [x19, #40]
  4404e0:	str	w5, [x3, x1]
  4404e4:	str	x11, [x20, #8]
  4404e8:	str	w0, [x20, #16]
  4404ec:	b.ge	440630 <_obstack_memory_used@@Base+0x67c8>  // b.tcont
  4404f0:	ldr	x1, [x19, #48]
  4404f4:	add	w0, w2, #0x1
  4404f8:	str	x20, [x1, w2, sxtw #3]
  4404fc:	str	w0, [x19, #56]
  440500:	ldrb	w1, [x4]
  440504:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  440508:	str	x21, [sp, #32]
  44050c:	ldrb	w1, [x3, #1]
  440510:	cmp	w1, #0x49
  440514:	b.eq	4405b8 <_obstack_memory_used@@Base+0x6750>  // b.none
  440518:	sub	w2, w1, #0x31
  44051c:	and	w2, w2, #0xff
  440520:	cmp	w2, #0x4
  440524:	b.hi	440600 <_obstack_memory_used@@Base+0x6798>  // b.pmore
  440528:	sub	w21, w1, #0x30
  44052c:	add	x3, x3, #0x2
  440530:	str	x3, [x19, #24]
  440534:	ldp	w1, w2, [x19, #40]
  440538:	cmp	w1, w2
  44053c:	b.ge	44063c <_obstack_memory_used@@Base+0x67d4>  // b.tcont
  440540:	mov	w4, #0x18                  	// #24
  440544:	add	w3, w1, #0x1
  440548:	smull	x1, w1, w4
  44054c:	ldp	x4, x2, [x19, #24]
  440550:	add	x20, x2, x1
  440554:	str	wzr, [x20, #4]
  440558:	str	w3, [x19, #40]
  44055c:	cbz	x0, 4405f0 <_obstack_memory_used@@Base+0x6788>
  440560:	mov	x3, #0x7                   	// #7
  440564:	str	x3, [x2, x1]
  440568:	str	w21, [x20, #8]
  44056c:	str	x0, [x20, #16]
  440570:	ldr	x21, [sp, #32]
  440574:	ldrb	w1, [x4]
  440578:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  44057c:	cmp	w1, #0x34
  440580:	b.eq	4405b0 <_obstack_memory_used@@Base+0x6748>  // b.none
  440584:	cmp	w1, #0x35
  440588:	mov	w4, #0x5                   	// #5
  44058c:	b.eq	4403d8 <_obstack_memory_used@@Base+0x6570>  // b.none
  440590:	mov	w1, w2
  440594:	mov	x20, #0x0                   	// #0
  440598:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  44059c:	ldrb	w1, [x3, #2]
  4405a0:	mov	x20, #0x0                   	// #0
  4405a4:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  4405a8:	mov	w4, #0x1                   	// #1
  4405ac:	b	4403d8 <_obstack_memory_used@@Base+0x6570>
  4405b0:	mov	w4, #0x4                   	// #4
  4405b4:	b	4403d8 <_obstack_memory_used@@Base+0x6570>
  4405b8:	add	x0, x3, #0x1
  4405bc:	str	x0, [x19, #24]
  4405c0:	ldrb	w1, [x3, #2]
  4405c4:	sub	w0, w1, #0x31
  4405c8:	and	w0, w0, #0xff
  4405cc:	cmp	w0, #0x4
  4405d0:	b.hi	440650 <_obstack_memory_used@@Base+0x67e8>  // b.pmore
  4405d4:	add	x3, x3, #0x3
  4405d8:	str	x3, [x19, #24]
  4405dc:	sub	w21, w1, #0x30
  4405e0:	mov	x0, x19
  4405e4:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  4405e8:	ldr	x0, [x19, #64]
  4405ec:	b	440534 <_obstack_memory_used@@Base+0x66cc>
  4405f0:	ldrb	w1, [x4]
  4405f4:	mov	x20, #0x0                   	// #0
  4405f8:	ldr	x21, [sp, #32]
  4405fc:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  440600:	mov	x20, #0x0                   	// #0
  440604:	ldr	x21, [sp, #32]
  440608:	b	44036c <_obstack_memory_used@@Base+0x6504>
  44060c:	mov	w4, #0x3                   	// #3
  440610:	b	4403d8 <_obstack_memory_used@@Base+0x6570>
  440614:	ldrb	w1, [x7]
  440618:	mov	x20, #0x0                   	// #0
  44061c:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  440620:	ldr	x0, [x19, #24]
  440624:	mov	x20, #0x0                   	// #0
  440628:	ldrb	w1, [x0]
  44062c:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  440630:	ldrb	w1, [x4]
  440634:	mov	x20, #0x0                   	// #0
  440638:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  44063c:	ldr	x0, [x19, #24]
  440640:	mov	x20, #0x0                   	// #0
  440644:	ldr	x21, [sp, #32]
  440648:	ldrb	w1, [x0]
  44064c:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  440650:	ldrb	w1, [x3, #1]
  440654:	mov	x20, #0x0                   	// #0
  440658:	ldr	x21, [sp, #32]
  44065c:	b	4401e4 <_obstack_memory_used@@Base+0x637c>
  440660:	ldr	x2, [x0, #24]
  440664:	ldrb	w1, [x2]
  440668:	cmp	w1, #0x4c
  44066c:	b.ne	440754 <_obstack_memory_used@@Base+0x68ec>  // b.any
  440670:	stp	x29, x30, [sp, #-32]!
  440674:	add	x1, x2, #0x1
  440678:	mov	w4, #0x5a                  	// #90
  44067c:	mov	x29, sp
  440680:	str	x19, [sp, #16]
  440684:	mov	x19, x0
  440688:	str	x1, [x0, #24]
  44068c:	ldrb	w3, [x2, #1]
  440690:	cmp	w3, #0x5f
  440694:	ccmp	w3, w4, #0x4, ne  // ne = any
  440698:	b.eq	440714 <_obstack_memory_used@@Base+0x68ac>  // b.none
  44069c:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  4406a0:	mov	x2, x0
  4406a4:	cbz	x0, 440704 <_obstack_memory_used@@Base+0x689c>
  4406a8:	ldr	w0, [x0]
  4406ac:	cmp	w0, #0x27
  4406b0:	b.eq	4407cc <_obstack_memory_used@@Base+0x6964>  // b.none
  4406b4:	ldr	x0, [x19, #24]
  4406b8:	mov	w1, #0x3d                  	// #61
  4406bc:	ldrb	w4, [x0]
  4406c0:	cmp	w4, #0x6e
  4406c4:	b.ne	4406dc <_obstack_memory_used@@Base+0x6874>  // b.any
  4406c8:	add	x3, x0, #0x1
  4406cc:	str	x3, [x19, #24]
  4406d0:	mov	w1, #0x3e                  	// #62
  4406d4:	ldrb	w4, [x0, #1]
  4406d8:	mov	x0, x3
  4406dc:	cmp	w4, #0x45
  4406e0:	b.eq	4407f4 <_obstack_memory_used@@Base+0x698c>  // b.none
  4406e4:	add	x3, x0, #0x1
  4406e8:	b	4406fc <_obstack_memory_used@@Base+0x6894>
  4406ec:	str	x3, [x19, #24]
  4406f0:	ldrb	w4, [x3], #1
  4406f4:	cmp	w4, #0x45
  4406f8:	b.eq	440778 <_obstack_memory_used@@Base+0x6910>  // b.none
  4406fc:	mov	x5, x3
  440700:	cbnz	w4, 4406ec <_obstack_memory_used@@Base+0x6884>
  440704:	mov	x0, #0x0                   	// #0
  440708:	ldr	x19, [sp, #16]
  44070c:	ldp	x29, x30, [sp], #32
  440710:	ret
  440714:	cmp	w3, #0x5f
  440718:	b.eq	44075c <_obstack_memory_used@@Base+0x68f4>  // b.none
  44071c:	add	x1, x1, #0x1
  440720:	str	x1, [x19, #24]
  440724:	mov	x0, x19
  440728:	mov	w1, #0x0                   	// #0
  44072c:	bl	43e188 <_obstack_memory_used@@Base+0x4320>
  440730:	ldr	x1, [x19, #24]
  440734:	ldrb	w2, [x1]
  440738:	cmp	w2, #0x45
  44073c:	b.ne	440704 <_obstack_memory_used@@Base+0x689c>  // b.any
  440740:	add	x1, x1, #0x1
  440744:	str	x1, [x19, #24]
  440748:	ldr	x19, [sp, #16]
  44074c:	ldp	x29, x30, [sp], #32
  440750:	ret
  440754:	mov	x0, #0x0                   	// #0
  440758:	ret
  44075c:	add	x1, x2, #0x2
  440760:	str	x1, [x19, #24]
  440764:	mov	x0, #0x0                   	// #0
  440768:	ldrb	w2, [x2, #2]
  44076c:	cmp	w2, w4
  440770:	b.ne	440738 <_obstack_memory_used@@Base+0x68d0>  // b.any
  440774:	b	44071c <_obstack_memory_used@@Base+0x68b4>
  440778:	sub	w5, w5, w0
  44077c:	ldp	w3, w4, [x19, #40]
  440780:	cmp	w3, w4
  440784:	b.ge	4407ec <_obstack_memory_used@@Base+0x6984>  // b.tcont
  440788:	mov	w4, #0x18                  	// #24
  44078c:	add	w7, w3, #0x1
  440790:	ldr	x6, [x19, #32]
  440794:	smull	x4, w3, w4
  440798:	cmp	w5, #0x0
  44079c:	add	x3, x6, x4
  4407a0:	str	wzr, [x3, #4]
  4407a4:	str	w7, [x19, #40]
  4407a8:	b.le	4407ec <_obstack_memory_used@@Base+0x6984>
  4407ac:	str	xzr, [x6, x4]
  4407b0:	str	x0, [x3, #8]
  4407b4:	str	w5, [x3, #16]
  4407b8:	mov	x0, x19
  4407bc:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  4407c0:	ldr	x1, [x19, #24]
  4407c4:	ldrb	w2, [x1]
  4407c8:	b	440738 <_obstack_memory_used@@Base+0x68d0>
  4407cc:	ldr	x0, [x2, #8]
  4407d0:	ldr	w1, [x0, #28]
  4407d4:	cbz	w1, 4406b4 <_obstack_memory_used@@Base+0x684c>
  4407d8:	ldr	w1, [x0, #8]
  4407dc:	ldr	w0, [x19, #72]
  4407e0:	sub	w0, w0, w1
  4407e4:	str	w0, [x19, #72]
  4407e8:	b	4406b4 <_obstack_memory_used@@Base+0x684c>
  4407ec:	mov	x3, #0x0                   	// #0
  4407f0:	b	4407b8 <_obstack_memory_used@@Base+0x6950>
  4407f4:	mov	w5, #0x0                   	// #0
  4407f8:	b	44077c <_obstack_memory_used@@Base+0x6914>
  4407fc:	nop
  440800:	stp	x29, x30, [sp, #-224]!
  440804:	mov	x29, sp
  440808:	stp	x19, x20, [sp, #16]
  44080c:	mov	x19, x0
  440810:	cbz	x2, 440898 <_obstack_memory_used@@Base+0x6a30>
  440814:	stp	x21, x22, [sp, #32]
  440818:	ldr	w22, [x0, #304]
  44081c:	cbnz	w22, 440860 <_obstack_memory_used@@Base+0x69f8>
  440820:	ldr	w0, [x2]
  440824:	mov	x20, x2
  440828:	cmp	w0, #0x50
  44082c:	b.ls	440840 <_obstack_memory_used@@Base+0x69d8>  // b.plast
  440830:	mov	w0, #0x1                   	// #1
  440834:	ldp	x21, x22, [sp, #32]
  440838:	str	w0, [x19, #304]
  44083c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  440840:	mov	w21, w1
  440844:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  440848:	add	x1, x1, #0x8ac
  44084c:	stp	x23, x24, [sp, #48]
  440850:	ldrh	w1, [x1, w0, uxtw #1]
  440854:	adr	x2, 440860 <_obstack_memory_used@@Base+0x69f8>
  440858:	add	x1, x2, w1, sxth #2
  44085c:	br	x1
  440860:	ldp	x21, x22, [sp, #32]
  440864:	ldp	x19, x20, [sp, #16]
  440868:	ldp	x29, x30, [sp], #224
  44086c:	ret
  440870:	ldr	x0, [x20, #16]
  440874:	ldr	w1, [x0]
  440878:	cmp	w1, #0x3b
  44087c:	b.ne	440890 <_obstack_memory_used@@Base+0x6a28>  // b.any
  440880:	ldr	x0, [x0, #16]
  440884:	ldr	w0, [x0]
  440888:	cmp	w0, #0x3c
  44088c:	b.eq	443d78 <_obstack_memory_used@@Base+0x9f10>  // b.none
  440890:	ldp	x21, x22, [sp, #32]
  440894:	ldp	x23, x24, [sp, #48]
  440898:	mov	w0, #0x1                   	// #1
  44089c:	str	w0, [x19, #304]
  4408a0:	ldp	x19, x20, [sp, #16]
  4408a4:	ldp	x29, x30, [sp], #224
  4408a8:	ret
  4408ac:	ldp	x1, x2, [x19, #288]
  4408b0:	add	x0, sp, #0x60
  4408b4:	stp	x2, x20, [sp, #96]
  4408b8:	str	wzr, [sp, #112]
  4408bc:	str	x1, [sp, #120]
  4408c0:	str	x0, [x19, #296]
  4408c4:	ldr	x2, [x20, #8]
  4408c8:	mov	x0, x19
  4408cc:	mov	w1, w21
  4408d0:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4408d4:	ldr	w0, [sp, #112]
  4408d8:	cbz	w0, 442c84 <_obstack_memory_used@@Base+0x8e1c>
  4408dc:	ldr	x0, [sp, #96]
  4408e0:	str	x0, [x19, #296]
  4408e4:	cbz	w22, 4424b8 <_obstack_memory_used@@Base+0x8650>
  4408e8:	ldp	x21, x22, [sp, #32]
  4408ec:	str	x23, [x19, #288]
  4408f0:	ldp	x23, x24, [sp, #48]
  4408f4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4408f8:	ldr	x4, [x19, #296]
  4408fc:	cbz	x4, 440a38 <_obstack_memory_used@@Base+0x6bd0>
  440900:	mov	x1, x4
  440904:	nop
  440908:	ldr	w2, [x1, #16]
  44090c:	cbnz	w2, 44092c <_obstack_memory_used@@Base+0x6ac4>
  440910:	ldr	x2, [x1, #8]
  440914:	ldr	w2, [x2]
  440918:	sub	w3, w2, #0x19
  44091c:	cmp	w3, #0x2
  440920:	b.hi	4438d8 <_obstack_memory_used@@Base+0x9a70>  // b.pmore
  440924:	cmp	w0, w2
  440928:	b.eq	4438f8 <_obstack_memory_used@@Base+0x9a90>  // b.none
  44092c:	ldr	x1, [x1]
  440930:	cbnz	x1, 440908 <_obstack_memory_used@@Base+0x6aa0>
  440934:	b	440a38 <_obstack_memory_used@@Base+0x6bd0>
  440938:	ldp	x23, x24, [sp, #48]
  44093c:	b	440830 <_obstack_memory_used@@Base+0x69c8>
  440940:	ldr	x2, [x20, #8]
  440944:	mov	w22, #0x0                   	// #0
  440948:	ldr	w1, [x2]
  44094c:	cmp	w1, #0x27
  440950:	b.eq	443160 <_obstack_memory_used@@Base+0x92f8>  // b.none
  440954:	ldr	x1, [x19, #256]
  440958:	add	x0, x1, #0x1
  44095c:	cmp	x1, #0xff
  440960:	b.ne	44098c <_obstack_memory_used@@Base+0x6b24>  // b.any
  440964:	ldp	x3, x2, [x19, #272]
  440968:	strb	wzr, [x19, #255]
  44096c:	mov	x0, x19
  440970:	blr	x3
  440974:	ldr	x3, [x19, #320]
  440978:	mov	x0, #0x1                   	// #1
  44097c:	mov	x1, #0x0                   	// #0
  440980:	add	x3, x3, x0
  440984:	ldr	x2, [x20, #8]
  440988:	str	x3, [x19, #320]
  44098c:	str	x0, [x19, #256]
  440990:	mov	w0, #0x28                  	// #40
  440994:	strb	w0, [x19, x1]
  440998:	mov	w1, w21
  44099c:	strb	w0, [x19, #264]
  4409a0:	mov	x0, x19
  4409a4:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4409a8:	ldr	x1, [x19, #256]
  4409ac:	cmp	x1, #0xff
  4409b0:	b.eq	443850 <_obstack_memory_used@@Base+0x99e8>  // b.none
  4409b4:	add	x3, x1, #0x1
  4409b8:	str	x3, [x19, #256]
  4409bc:	mov	w0, #0x29                  	// #41
  4409c0:	strb	w0, [x19, x1]
  4409c4:	strb	w0, [x19, #264]
  4409c8:	ldr	w0, [x20]
  4409cc:	cmp	w0, #0x3e
  4409d0:	b.eq	443914 <_obstack_memory_used@@Base+0x9aac>  // b.none
  4409d4:	cmp	w22, #0x8
  4409d8:	b.eq	4436f4 <_obstack_memory_used@@Base+0x988c>  // b.none
  4409dc:	ldr	x2, [x20, #16]
  4409e0:	mov	w1, w21
  4409e4:	mov	x0, x19
  4409e8:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4409ec:	ldp	x21, x22, [sp, #32]
  4409f0:	ldp	x23, x24, [sp, #48]
  4409f4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4409f8:	ldr	w2, [x19, #312]
  4409fc:	ldr	x0, [x20, #8]
  440a00:	ldr	w1, [x0]
  440a04:	cbnz	w2, 440a14 <_obstack_memory_used@@Base+0x6bac>
  440a08:	cmp	w1, #0x5
  440a0c:	mov	w22, #0x0                   	// #0
  440a10:	b.eq	443cd4 <_obstack_memory_used@@Base+0x9e6c>  // b.none
  440a14:	cmp	w1, #0x23
  440a18:	ldr	x4, [x19, #296]
  440a1c:	b.eq	442d2c <_obstack_memory_used@@Base+0x8ec4>  // b.none
  440a20:	ldr	w2, [x20]
  440a24:	cmp	w2, w1
  440a28:	b.eq	442d2c <_obstack_memory_used@@Base+0x8ec4>  // b.none
  440a2c:	cmp	w1, #0x24
  440a30:	b.eq	442494 <_obstack_memory_used@@Base+0x862c>  // b.none
  440a34:	nop
  440a38:	ldr	x1, [x19, #288]
  440a3c:	add	x0, sp, #0x60
  440a40:	stp	x4, x20, [sp, #96]
  440a44:	str	wzr, [sp, #112]
  440a48:	str	x1, [sp, #120]
  440a4c:	str	x0, [x19, #296]
  440a50:	b	4408c4 <_obstack_memory_used@@Base+0x6a5c>
  440a54:	ldr	x2, [x20, #8]
  440a58:	mov	w1, w21
  440a5c:	mov	x0, x19
  440a60:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  440a64:	tbz	w21, #2, 443698 <_obstack_memory_used@@Base+0x9830>
  440a68:	ldr	x1, [x19, #256]
  440a6c:	add	x0, x1, #0x1
  440a70:	cmp	x1, #0xff
  440a74:	b.ne	440a9c <_obstack_memory_used@@Base+0x6c34>  // b.any
  440a78:	ldp	x3, x2, [x19, #272]
  440a7c:	strb	wzr, [x19, #255]
  440a80:	mov	x0, x19
  440a84:	blr	x3
  440a88:	ldr	x2, [x19, #320]
  440a8c:	mov	x0, #0x1                   	// #1
  440a90:	mov	x1, #0x0                   	// #0
  440a94:	add	x2, x2, x0
  440a98:	str	x2, [x19, #320]
  440a9c:	str	x0, [x19, #256]
  440aa0:	mov	w0, #0x2e                  	// #46
  440aa4:	strb	w0, [x19, x1]
  440aa8:	strb	w0, [x19, #264]
  440aac:	ldr	x23, [x20, #16]
  440ab0:	ldr	w0, [x23]
  440ab4:	cmp	w0, #0x47
  440ab8:	b.eq	443950 <_obstack_memory_used@@Base+0x9ae8>  // b.none
  440abc:	mov	x2, x23
  440ac0:	mov	w1, w21
  440ac4:	mov	x0, x19
  440ac8:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  440acc:	ldp	x21, x22, [sp, #32]
  440ad0:	ldp	x23, x24, [sp, #48]
  440ad4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  440ad8:	ldp	x3, x4, [x19, #288]
  440adc:	add	x0, sp, #0x60
  440ae0:	ldr	x2, [x20, #16]
  440ae4:	str	x0, [x19, #296]
  440ae8:	mov	w1, w21
  440aec:	mov	x0, x19
  440af0:	stp	x4, x20, [sp, #96]
  440af4:	str	wzr, [sp, #112]
  440af8:	str	x3, [sp, #120]
  440afc:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  440b00:	ldr	w0, [sp, #112]
  440b04:	cbz	w0, 443614 <_obstack_memory_used@@Base+0x97ac>
  440b08:	ldr	x0, [sp, #96]
  440b0c:	ldp	x21, x22, [sp, #32]
  440b10:	ldp	x23, x24, [sp, #48]
  440b14:	str	x0, [x19, #296]
  440b18:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  440b1c:	ldr	x2, [x20, #8]
  440b20:	cbz	x2, 440b30 <_obstack_memory_used@@Base+0x6cc8>
  440b24:	mov	w1, w21
  440b28:	mov	x0, x19
  440b2c:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  440b30:	ldr	x0, [x20, #16]
  440b34:	cbz	x0, 4438c0 <_obstack_memory_used@@Base+0x9a58>
  440b38:	ldr	x22, [x19, #256]
  440b3c:	cmp	x22, #0xfd
  440b40:	b.ls	440b6c <_obstack_memory_used@@Base+0x6d04>  // b.plast
  440b44:	strb	wzr, [x19, x22]
  440b48:	mov	x1, x22
  440b4c:	mov	x0, x19
  440b50:	mov	x22, #0x0                   	// #0
  440b54:	ldp	x3, x2, [x19, #272]
  440b58:	blr	x3
  440b5c:	str	xzr, [x19, #256]
  440b60:	ldr	x0, [x19, #320]
  440b64:	add	x0, x0, #0x1
  440b68:	str	x0, [x19, #320]
  440b6c:	mov	w23, #0x2c                  	// #44
  440b70:	mov	x24, #0x0                   	// #0
  440b74:	b	440b98 <_obstack_memory_used@@Base+0x6d30>
  440b78:	mov	x0, x22
  440b7c:	add	x22, x22, #0x1
  440b80:	str	x22, [x19, #256]
  440b84:	strb	w23, [x19, x0]
  440b88:	strb	w23, [x19, #264]
  440b8c:	mov	w23, #0x20                  	// #32
  440b90:	cbnz	x24, 442ccc <_obstack_memory_used@@Base+0x8e64>
  440b94:	mov	x24, #0x1                   	// #1
  440b98:	cmp	x22, #0xff
  440b9c:	b.ne	440b78 <_obstack_memory_used@@Base+0x6d10>  // b.any
  440ba0:	ldp	x3, x2, [x19, #272]
  440ba4:	strb	wzr, [x19, #255]
  440ba8:	mov	x1, x22
  440bac:	mov	x0, x19
  440bb0:	mov	x22, #0x1                   	// #1
  440bb4:	blr	x3
  440bb8:	ldr	x1, [x19, #320]
  440bbc:	mov	x0, #0x0                   	// #0
  440bc0:	add	x1, x1, x22
  440bc4:	str	x1, [x19, #320]
  440bc8:	b	440b80 <_obstack_memory_used@@Base+0x6d18>
  440bcc:	ldr	x2, [x20, #16]
  440bd0:	mov	w1, w21
  440bd4:	mov	x0, x19
  440bd8:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  440bdc:	ldp	x21, x22, [sp, #32]
  440be0:	ldp	x23, x24, [sp, #48]
  440be4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  440be8:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  440bec:	add	x24, x24, #0xd08
  440bf0:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  440bf4:	add	x24, x24, #0x1c
  440bf8:	add	x22, x22, #0xd09
  440bfc:	mov	w23, #0x67                  	// #103
  440c00:	ldr	x1, [x19, #256]
  440c04:	b	440c28 <_obstack_memory_used@@Base+0x6dc0>
  440c08:	mov	x0, x1
  440c0c:	add	x1, x1, #0x1
  440c10:	str	x1, [x19, #256]
  440c14:	cmp	x22, x24
  440c18:	strb	w23, [x19, x0]
  440c1c:	strb	w23, [x19, #264]
  440c20:	b.eq	4428cc <_obstack_memory_used@@Base+0x8a64>  // b.none
  440c24:	ldrb	w23, [x22], #1
  440c28:	cmp	x1, #0xff
  440c2c:	b.ne	440c08 <_obstack_memory_used@@Base+0x6da0>  // b.any
  440c30:	ldp	x3, x2, [x19, #272]
  440c34:	strb	wzr, [x19, #255]
  440c38:	mov	x0, x19
  440c3c:	blr	x3
  440c40:	ldr	x2, [x19, #320]
  440c44:	mov	x1, #0x1                   	// #1
  440c48:	mov	x0, #0x0                   	// #0
  440c4c:	add	x2, x2, x1
  440c50:	str	x2, [x19, #320]
  440c54:	b	440c10 <_obstack_memory_used@@Base+0x6da8>
  440c58:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  440c5c:	add	x22, x22, #0xd28
  440c60:	add	x24, x22, #0x8
  440c64:	mov	w23, #0x7b                  	// #123
  440c68:	ldr	x1, [x19, #256]
  440c6c:	b	440c94 <_obstack_memory_used@@Base+0x6e2c>
  440c70:	mov	x0, x1
  440c74:	add	x1, x1, #0x1
  440c78:	str	x1, [x19, #256]
  440c7c:	add	x22, x22, #0x1
  440c80:	strb	w23, [x19, x0]
  440c84:	cmp	x24, x22
  440c88:	strb	w23, [x19, #264]
  440c8c:	b.eq	4428e8 <_obstack_memory_used@@Base+0x8a80>  // b.none
  440c90:	ldrb	w23, [x22]
  440c94:	cmp	x1, #0xff
  440c98:	b.ne	440c70 <_obstack_memory_used@@Base+0x6e08>  // b.any
  440c9c:	ldp	x3, x2, [x19, #272]
  440ca0:	strb	wzr, [x19, #255]
  440ca4:	mov	x0, x19
  440ca8:	blr	x3
  440cac:	ldr	x2, [x19, #320]
  440cb0:	mov	x1, #0x1                   	// #1
  440cb4:	mov	x0, #0x0                   	// #0
  440cb8:	add	x2, x2, x1
  440cbc:	str	x2, [x19, #320]
  440cc0:	b	440c78 <_obstack_memory_used@@Base+0x6e10>
  440cc4:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x1d198>
  440cc8:	add	x23, x23, #0xd38
  440ccc:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x1d198>
  440cd0:	add	x23, x23, #0xe
  440cd4:	add	x21, x21, #0xd39
  440cd8:	mov	w22, #0x7b                  	// #123
  440cdc:	ldr	x1, [x19, #256]
  440ce0:	b	440d04 <_obstack_memory_used@@Base+0x6e9c>
  440ce4:	mov	x0, x1
  440ce8:	add	x1, x1, #0x1
  440cec:	str	x1, [x19, #256]
  440cf0:	cmp	x23, x21
  440cf4:	strb	w22, [x19, x0]
  440cf8:	strb	w22, [x19, #264]
  440cfc:	b.eq	4427dc <_obstack_memory_used@@Base+0x8974>  // b.none
  440d00:	ldrb	w22, [x21], #1
  440d04:	cmp	x1, #0xff
  440d08:	b.ne	440ce4 <_obstack_memory_used@@Base+0x6e7c>  // b.any
  440d0c:	ldp	x3, x2, [x19, #272]
  440d10:	strb	wzr, [x19, #255]
  440d14:	mov	x0, x19
  440d18:	blr	x3
  440d1c:	ldr	x2, [x19, #320]
  440d20:	mov	x1, #0x1                   	// #1
  440d24:	mov	x0, #0x0                   	// #0
  440d28:	add	x2, x2, x1
  440d2c:	str	x2, [x19, #320]
  440d30:	b	440cec <_obstack_memory_used@@Base+0x6e84>
  440d34:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  440d38:	add	x24, x24, #0xc00
  440d3c:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  440d40:	add	x24, x24, #0x16
  440d44:	add	x22, x22, #0xc01
  440d48:	mov	w23, #0x74                  	// #116
  440d4c:	ldr	x1, [x19, #256]
  440d50:	b	440d74 <_obstack_memory_used@@Base+0x6f0c>
  440d54:	mov	x0, x1
  440d58:	add	x1, x1, #0x1
  440d5c:	str	x1, [x19, #256]
  440d60:	cmp	x24, x22
  440d64:	strb	w23, [x19, x0]
  440d68:	strb	w23, [x19, #264]
  440d6c:	b.eq	4428b0 <_obstack_memory_used@@Base+0x8a48>  // b.none
  440d70:	ldrb	w23, [x22], #1
  440d74:	cmp	x1, #0xff
  440d78:	b.ne	440d54 <_obstack_memory_used@@Base+0x6eec>  // b.any
  440d7c:	ldp	x3, x2, [x19, #272]
  440d80:	strb	wzr, [x19, #255]
  440d84:	mov	x0, x19
  440d88:	blr	x3
  440d8c:	ldr	x2, [x19, #320]
  440d90:	mov	x1, #0x1                   	// #1
  440d94:	mov	x0, #0x0                   	// #0
  440d98:	add	x2, x2, x1
  440d9c:	str	x2, [x19, #320]
  440da0:	b	440d5c <_obstack_memory_used@@Base+0x6ef4>
  440da4:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  440da8:	add	x24, x24, #0xa78
  440dac:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  440db0:	add	x24, x24, #0x1e
  440db4:	add	x22, x22, #0xa79
  440db8:	mov	w23, #0x74                  	// #116
  440dbc:	ldr	x1, [x19, #256]
  440dc0:	b	440de4 <_obstack_memory_used@@Base+0x6f7c>
  440dc4:	mov	x0, x1
  440dc8:	add	x1, x1, #0x1
  440dcc:	str	x1, [x19, #256]
  440dd0:	cmp	x24, x22
  440dd4:	strb	w23, [x19, x0]
  440dd8:	strb	w23, [x19, #264]
  440ddc:	b.eq	4427c0 <_obstack_memory_used@@Base+0x8958>  // b.none
  440de0:	ldrb	w23, [x22], #1
  440de4:	cmp	x1, #0xff
  440de8:	b.ne	440dc4 <_obstack_memory_used@@Base+0x6f5c>  // b.any
  440dec:	ldp	x3, x2, [x19, #272]
  440df0:	strb	wzr, [x19, #255]
  440df4:	mov	x0, x19
  440df8:	blr	x3
  440dfc:	ldr	x2, [x19, #320]
  440e00:	mov	x1, #0x1                   	// #1
  440e04:	mov	x0, #0x0                   	// #0
  440e08:	add	x2, x2, x1
  440e0c:	str	x2, [x19, #320]
  440e10:	b	440dcc <_obstack_memory_used@@Base+0x6f64>
  440e14:	ldp	x2, x20, [x20, #8]
  440e18:	cbz	x2, 440e28 <_obstack_memory_used@@Base+0x6fc0>
  440e1c:	mov	w1, w21
  440e20:	mov	x0, x19
  440e24:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  440e28:	ldr	x1, [x19, #256]
  440e2c:	add	x0, x1, #0x1
  440e30:	cmp	x1, #0xff
  440e34:	b.ne	440e5c <_obstack_memory_used@@Base+0x6ff4>  // b.any
  440e38:	ldp	x3, x2, [x19, #272]
  440e3c:	strb	wzr, [x19, #255]
  440e40:	mov	x0, x19
  440e44:	blr	x3
  440e48:	ldr	x2, [x19, #320]
  440e4c:	mov	x0, #0x1                   	// #1
  440e50:	mov	x1, #0x0                   	// #0
  440e54:	add	x2, x2, x0
  440e58:	str	x2, [x19, #320]
  440e5c:	str	x0, [x19, #256]
  440e60:	mov	w0, #0x7b                  	// #123
  440e64:	strb	w0, [x19, x1]
  440e68:	mov	x2, x20
  440e6c:	strb	w0, [x19, #264]
  440e70:	mov	w1, w21
  440e74:	mov	x0, x19
  440e78:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  440e7c:	ldr	x1, [x19, #256]
  440e80:	add	x0, x1, #0x1
  440e84:	cmp	x1, #0xff
  440e88:	b.ne	440eb0 <_obstack_memory_used@@Base+0x7048>  // b.any
  440e8c:	ldp	x3, x2, [x19, #272]
  440e90:	strb	wzr, [x19, #255]
  440e94:	mov	x0, x19
  440e98:	blr	x3
  440e9c:	ldr	x2, [x19, #320]
  440ea0:	mov	x0, #0x1                   	// #1
  440ea4:	mov	x1, #0x0                   	// #0
  440ea8:	add	x2, x2, x0
  440eac:	str	x2, [x19, #320]
  440eb0:	str	x0, [x19, #256]
  440eb4:	mov	w0, #0x7d                  	// #125
  440eb8:	strb	w0, [x19, x1]
  440ebc:	strb	w0, [x19, #264]
  440ec0:	ldp	x21, x22, [sp, #32]
  440ec4:	ldp	x23, x24, [sp, #48]
  440ec8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  440ecc:	ldr	x22, [x20, #8]
  440ed0:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  440ed4:	add	x20, x20, #0xc50
  440ed8:	mov	w21, #0x6f                  	// #111
  440edc:	add	x24, x20, #0x8
  440ee0:	ldr	w23, [x22, #16]
  440ee4:	ldr	x1, [x19, #256]
  440ee8:	b	440f10 <_obstack_memory_used@@Base+0x70a8>
  440eec:	mov	x0, x1
  440ef0:	add	x1, x1, #0x1
  440ef4:	str	x1, [x19, #256]
  440ef8:	add	x20, x20, #0x1
  440efc:	strb	w21, [x19, x0]
  440f00:	cmp	x24, x20
  440f04:	strb	w21, [x19, #264]
  440f08:	b.eq	4426e4 <_obstack_memory_used@@Base+0x887c>  // b.none
  440f0c:	ldrb	w21, [x20]
  440f10:	cmp	x1, #0xff
  440f14:	b.ne	440eec <_obstack_memory_used@@Base+0x7084>  // b.any
  440f18:	ldp	x3, x2, [x19, #272]
  440f1c:	strb	wzr, [x19, #255]
  440f20:	mov	x0, x19
  440f24:	blr	x3
  440f28:	ldr	x2, [x19, #320]
  440f2c:	mov	x1, #0x1                   	// #1
  440f30:	mov	x0, #0x0                   	// #0
  440f34:	add	x2, x2, x1
  440f38:	str	x2, [x19, #320]
  440f3c:	b	440ef4 <_obstack_memory_used@@Base+0x708c>
  440f40:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  440f44:	add	x22, x22, #0xc60
  440f48:	add	x24, x22, #0x9
  440f4c:	mov	w23, #0x6f                  	// #111
  440f50:	ldr	x1, [x19, #256]
  440f54:	b	440f7c <_obstack_memory_used@@Base+0x7114>
  440f58:	mov	x0, x1
  440f5c:	add	x1, x1, #0x1
  440f60:	str	x1, [x19, #256]
  440f64:	add	x22, x22, #0x1
  440f68:	strb	w23, [x19, x0]
  440f6c:	cmp	x22, x24
  440f70:	strb	w23, [x19, #264]
  440f74:	b.eq	442524 <_obstack_memory_used@@Base+0x86bc>  // b.none
  440f78:	ldrb	w23, [x22]
  440f7c:	cmp	x1, #0xff
  440f80:	b.ne	440f58 <_obstack_memory_used@@Base+0x70f0>  // b.any
  440f84:	ldp	x3, x2, [x19, #272]
  440f88:	strb	wzr, [x19, #255]
  440f8c:	mov	x0, x19
  440f90:	blr	x3
  440f94:	ldr	x2, [x19, #320]
  440f98:	mov	x1, #0x1                   	// #1
  440f9c:	mov	x0, #0x0                   	// #0
  440fa0:	add	x2, x2, x1
  440fa4:	str	x2, [x19, #320]
  440fa8:	b	440f60 <_obstack_memory_used@@Base+0x70f8>
  440fac:	ldr	x2, [x20, #8]
  440fb0:	mov	w1, w21
  440fb4:	mov	x0, x19
  440fb8:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  440fbc:	add	x22, x22, #0xd48
  440fc0:	mov	w23, #0x20                  	// #32
  440fc4:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  440fc8:	add	x24, x22, #0x8
  440fcc:	ldr	x1, [x19, #256]
  440fd0:	b	440ff8 <_obstack_memory_used@@Base+0x7190>
  440fd4:	mov	x0, x1
  440fd8:	add	x1, x1, #0x1
  440fdc:	str	x1, [x19, #256]
  440fe0:	add	x22, x22, #0x1
  440fe4:	strb	w23, [x19, x0]
  440fe8:	cmp	x24, x22
  440fec:	strb	w23, [x19, #264]
  440ff0:	b.eq	4424c4 <_obstack_memory_used@@Base+0x865c>  // b.none
  440ff4:	ldrb	w23, [x22]
  440ff8:	cmp	x1, #0xff
  440ffc:	b.ne	440fd4 <_obstack_memory_used@@Base+0x716c>  // b.any
  441000:	ldp	x3, x2, [x19, #272]
  441004:	strb	wzr, [x19, #255]
  441008:	mov	x0, x19
  44100c:	blr	x3
  441010:	ldr	x2, [x19, #320]
  441014:	mov	x1, #0x1                   	// #1
  441018:	mov	x0, #0x0                   	// #0
  44101c:	add	x2, x2, x1
  441020:	str	x2, [x19, #320]
  441024:	b	440fdc <_obstack_memory_used@@Base+0x7174>
  441028:	ldr	x2, [x20, #8]
  44102c:	mov	w1, w21
  441030:	mov	x0, x19
  441034:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  441038:	ldp	x21, x22, [sp, #32]
  44103c:	ldp	x23, x24, [sp, #48]
  441040:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  441044:	and	w22, w21, #0xffffff9f
  441048:	ldr	x3, [x19, #296]
  44104c:	tbnz	w21, #5, 443820 <_obstack_memory_used@@Base+0x99b8>
  441050:	ldr	x2, [x20, #8]
  441054:	cbz	x2, 44105c <_obstack_memory_used@@Base+0x71f4>
  441058:	tbz	w21, #6, 443b54 <_obstack_memory_used@@Base+0x9cec>
  44105c:	mov	w1, w22
  441060:	add	x2, x20, #0x10
  441064:	mov	x0, x19
  441068:	bl	444ea8 <_obstack_memory_used@@Base+0xb040>
  44106c:	ldp	x21, x22, [sp, #32]
  441070:	ldp	x23, x24, [sp, #48]
  441074:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  441078:	ldr	x23, [x20, #8]
  44107c:	ldr	x1, [x19, #256]
  441080:	cbz	x23, 442eec <_obstack_memory_used@@Base+0x9084>
  441084:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  441088:	add	x20, x20, #0xcd8
  44108c:	add	x22, x20, #0x6
  441090:	mov	w21, #0x7b                  	// #123
  441094:	b	4410bc <_obstack_memory_used@@Base+0x7254>
  441098:	mov	x0, x1
  44109c:	add	x1, x1, #0x1
  4410a0:	str	x1, [x19, #256]
  4410a4:	add	x20, x20, #0x1
  4410a8:	strb	w21, [x19, x0]
  4410ac:	cmp	x22, x20
  4410b0:	strb	w21, [x19, #264]
  4410b4:	b.eq	442f60 <_obstack_memory_used@@Base+0x90f8>  // b.none
  4410b8:	ldrb	w21, [x20]
  4410bc:	cmp	x1, #0xff
  4410c0:	b.ne	441098 <_obstack_memory_used@@Base+0x7230>  // b.any
  4410c4:	ldp	x3, x2, [x19, #272]
  4410c8:	strb	wzr, [x19, #255]
  4410cc:	mov	x0, x19
  4410d0:	blr	x3
  4410d4:	ldr	x2, [x19, #320]
  4410d8:	mov	x1, #0x1                   	// #1
  4410dc:	mov	x0, #0x0                   	// #0
  4410e0:	add	x2, x2, x1
  4410e4:	str	x2, [x19, #320]
  4410e8:	b	4410a0 <_obstack_memory_used@@Base+0x7238>
  4410ec:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  4410f0:	add	x24, x24, #0xbe8
  4410f4:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  4410f8:	add	x24, x24, #0x11
  4410fc:	add	x22, x22, #0xbe9
  441100:	mov	w23, #0x68                  	// #104
  441104:	ldr	x1, [x19, #256]
  441108:	b	44112c <_obstack_memory_used@@Base+0x72c4>
  44110c:	mov	x0, x1
  441110:	add	x1, x1, #0x1
  441114:	str	x1, [x19, #256]
  441118:	cmp	x22, x24
  44111c:	strb	w23, [x19, x0]
  441120:	strb	w23, [x19, #264]
  441124:	b.eq	442b8c <_obstack_memory_used@@Base+0x8d24>  // b.none
  441128:	ldrb	w23, [x22], #1
  44112c:	cmp	x1, #0xff
  441130:	b.ne	44110c <_obstack_memory_used@@Base+0x72a4>  // b.any
  441134:	ldp	x3, x2, [x19, #272]
  441138:	strb	wzr, [x19, #255]
  44113c:	mov	x0, x19
  441140:	blr	x3
  441144:	ldr	x2, [x19, #320]
  441148:	mov	x1, #0x1                   	// #1
  44114c:	mov	x0, #0x0                   	// #0
  441150:	add	x2, x2, x1
  441154:	str	x2, [x19, #320]
  441158:	b	441114 <_obstack_memory_used@@Base+0x72ac>
  44115c:	ldrsw	x22, [x20, #16]
  441160:	ldr	x20, [x20, #8]
  441164:	cbz	x22, 444054 <_obstack_memory_used@@Base+0xa1ec>
  441168:	add	x22, x20, x22
  44116c:	ldr	x1, [x19, #256]
  441170:	b	441194 <_obstack_memory_used@@Base+0x732c>
  441174:	mov	x0, x1
  441178:	add	x1, x1, #0x1
  44117c:	str	x1, [x19, #256]
  441180:	add	x20, x20, #0x1
  441184:	strb	w21, [x19, x0]
  441188:	cmp	x22, x20
  44118c:	strb	w21, [x19, #264]
  441190:	b.eq	442c98 <_obstack_memory_used@@Base+0x8e30>  // b.none
  441194:	ldrb	w21, [x20]
  441198:	cmp	x1, #0xff
  44119c:	b.ne	441174 <_obstack_memory_used@@Base+0x730c>  // b.any
  4411a0:	ldp	x3, x2, [x19, #272]
  4411a4:	strb	wzr, [x19, #255]
  4411a8:	mov	x0, x19
  4411ac:	blr	x3
  4411b0:	ldr	x2, [x19, #320]
  4411b4:	mov	x1, #0x1                   	// #1
  4411b8:	mov	x0, #0x0                   	// #0
  4411bc:	add	x2, x2, x1
  4411c0:	str	x2, [x19, #320]
  4411c4:	b	44117c <_obstack_memory_used@@Base+0x7314>
  4411c8:	ldp	x1, x5, [x19, #288]
  4411cc:	add	x23, sp, #0x60
  4411d0:	stp	x5, x20, [sp, #96]
  4411d4:	mov	w22, #0x1                   	// #1
  4411d8:	mov	w6, w22
  4411dc:	str	wzr, [sp, #112]
  4411e0:	str	x1, [sp, #120]
  4411e4:	str	x23, [x19, #296]
  4411e8:	mov	x24, x5
  4411ec:	mov	x0, x5
  4411f0:	mov	x5, x23
  4411f4:	cbnz	x24, 441240 <_obstack_memory_used@@Base+0x73d8>
  4411f8:	b	444384 <_obstack_memory_used@@Base+0xa51c>
  4411fc:	ldr	w1, [x0, #16]
  441200:	cbnz	w1, 441238 <_obstack_memory_used@@Base+0x73d0>
  441204:	cmp	w22, #0x3
  441208:	b.hi	443b40 <_obstack_memory_used@@Base+0x9cd8>  // b.pmore
  44120c:	ubfiz	x1, x22, #5, #32
  441210:	add	w22, w22, #0x1
  441214:	add	x4, x23, x1
  441218:	ldp	x2, x3, [x0]
  44121c:	stp	x2, x3, [x4]
  441220:	ldp	x2, x3, [x0, #16]
  441224:	stp	x2, x3, [x4, #16]
  441228:	str	x5, [x23, x1]
  44122c:	mov	x5, x4
  441230:	str	x4, [x19, #296]
  441234:	str	w6, [x0, #16]
  441238:	ldr	x0, [x0]
  44123c:	cbz	x0, 441254 <_obstack_memory_used@@Base+0x73ec>
  441240:	ldr	x1, [x0, #8]
  441244:	ldr	w1, [x1]
  441248:	sub	w1, w1, #0x19
  44124c:	cmp	w1, #0x2
  441250:	b.ls	4411fc <_obstack_memory_used@@Base+0x7394>  // b.plast
  441254:	ldr	x2, [x20, #16]
  441258:	mov	x0, x19
  44125c:	mov	w1, w21
  441260:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  441264:	str	x24, [x19, #296]
  441268:	ldr	w0, [sp, #112]
  44126c:	cbnz	w0, 4438cc <_obstack_memory_used@@Base+0x9a64>
  441270:	ubfiz	x0, x22, #5, #32
  441274:	cmp	w22, #0x1
  441278:	add	x23, x23, x0
  44127c:	b.eq	4412a0 <_obstack_memory_used@@Base+0x7438>  // b.none
  441280:	ldur	x2, [x23, #-24]
  441284:	sub	w22, w22, #0x1
  441288:	mov	w1, w21
  44128c:	mov	x0, x19
  441290:	sub	x23, x23, #0x20
  441294:	bl	4446a8 <_obstack_memory_used@@Base+0xa840>
  441298:	cmp	w22, #0x1
  44129c:	b.ne	441280 <_obstack_memory_used@@Base+0x7418>  // b.any
  4412a0:	ldr	x3, [x19, #296]
  4412a4:	mov	w1, w21
  4412a8:	add	x2, x20, #0x8
  4412ac:	mov	x0, x19
  4412b0:	bl	445528 <_obstack_memory_used@@Base+0xb6c0>
  4412b4:	ldp	x21, x22, [sp, #32]
  4412b8:	ldp	x23, x24, [sp, #48]
  4412bc:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4412c0:	ldrsh	w0, [x20, #18]
  4412c4:	cbnz	w0, 443628 <_obstack_memory_used@@Base+0x97c0>
  4412c8:	ldr	x2, [x20, #8]
  4412cc:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x3c198>
  4412d0:	add	x0, x0, #0xdf0
  4412d4:	add	x0, x0, #0x288
  4412d8:	ldr	x1, [x2, #8]
  4412dc:	cmp	x1, x0
  4412e0:	b.eq	44311c <_obstack_memory_used@@Base+0x92b4>  // b.none
  4412e4:	mov	w1, w21
  4412e8:	mov	x0, x19
  4412ec:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4412f0:	ldr	x0, [x19, #256]
  4412f4:	add	x1, x0, #0x1
  4412f8:	cmp	x0, #0xff
  4412fc:	b.ne	441328 <_obstack_memory_used@@Base+0x74c0>  // b.any
  441300:	ldp	x3, x2, [x19, #272]
  441304:	strb	wzr, [x19, #255]
  441308:	mov	x1, x0
  44130c:	mov	x0, x19
  441310:	blr	x3
  441314:	ldr	x2, [x19, #320]
  441318:	mov	x1, #0x1                   	// #1
  44131c:	mov	x0, #0x0                   	// #0
  441320:	add	x2, x2, x1
  441324:	str	x2, [x19, #320]
  441328:	str	x1, [x19, #256]
  44132c:	mov	w2, #0x20                  	// #32
  441330:	strb	w2, [x19, x0]
  441334:	strb	w2, [x19, #264]
  441338:	ldrsh	w0, [x20, #16]
  44133c:	cbnz	w0, 443030 <_obstack_memory_used@@Base+0x91c8>
  441340:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  441344:	add	x20, x20, #0xc40
  441348:	add	x22, x20, #0x6
  44134c:	mov	w21, #0x5f                  	// #95
  441350:	b	441378 <_obstack_memory_used@@Base+0x7510>
  441354:	mov	x0, x1
  441358:	add	x1, x1, #0x1
  44135c:	str	x1, [x19, #256]
  441360:	add	x20, x20, #0x1
  441364:	strb	w21, [x19, x0]
  441368:	cmp	x20, x22
  44136c:	strb	w21, [x19, #264]
  441370:	b.eq	4430a4 <_obstack_memory_used@@Base+0x923c>  // b.none
  441374:	ldrb	w21, [x20]
  441378:	cmp	x1, #0xff
  44137c:	b.ne	441354 <_obstack_memory_used@@Base+0x74ec>  // b.any
  441380:	ldp	x3, x2, [x19, #272]
  441384:	strb	wzr, [x19, #255]
  441388:	mov	x0, x19
  44138c:	blr	x3
  441390:	ldr	x2, [x19, #320]
  441394:	mov	x1, #0x1                   	// #1
  441398:	mov	x0, #0x0                   	// #0
  44139c:	add	x2, x2, x1
  4413a0:	str	x2, [x19, #320]
  4413a4:	b	44135c <_obstack_memory_used@@Base+0x74f4>
  4413a8:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  4413ac:	add	x24, x24, #0xb20
  4413b0:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  4413b4:	add	x24, x24, #0x15
  4413b8:	add	x22, x22, #0xb21
  4413bc:	mov	w23, #0x6e                  	// #110
  4413c0:	ldr	x1, [x19, #256]
  4413c4:	b	4413e8 <_obstack_memory_used@@Base+0x7580>
  4413c8:	mov	x0, x1
  4413cc:	add	x1, x1, #0x1
  4413d0:	str	x1, [x19, #256]
  4413d4:	cmp	x24, x22
  4413d8:	strb	w23, [x19, x0]
  4413dc:	strb	w23, [x19, #264]
  4413e0:	b.eq	442ba8 <_obstack_memory_used@@Base+0x8d40>  // b.none
  4413e4:	ldrb	w23, [x22], #1
  4413e8:	cmp	x1, #0xff
  4413ec:	b.ne	4413c8 <_obstack_memory_used@@Base+0x7560>  // b.any
  4413f0:	ldp	x3, x2, [x19, #272]
  4413f4:	strb	wzr, [x19, #255]
  4413f8:	mov	x0, x19
  4413fc:	blr	x3
  441400:	ldr	x2, [x19, #320]
  441404:	mov	x1, #0x1                   	// #1
  441408:	mov	x0, #0x0                   	// #0
  44140c:	add	x2, x2, x1
  441410:	str	x2, [x19, #320]
  441414:	b	4413d0 <_obstack_memory_used@@Base+0x7568>
  441418:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  44141c:	add	x24, x24, #0xb38
  441420:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  441424:	add	x24, x24, #0x11
  441428:	add	x22, x22, #0xb39
  44142c:	mov	w23, #0x76                  	// #118
  441430:	ldr	x1, [x19, #256]
  441434:	b	441458 <_obstack_memory_used@@Base+0x75f0>
  441438:	mov	x0, x1
  44143c:	add	x1, x1, #0x1
  441440:	str	x1, [x19, #256]
  441444:	cmp	x24, x22
  441448:	strb	w23, [x19, x0]
  44144c:	strb	w23, [x19, #264]
  441450:	b.eq	442bc4 <_obstack_memory_used@@Base+0x8d5c>  // b.none
  441454:	ldrb	w23, [x22], #1
  441458:	cmp	x1, #0xff
  44145c:	b.ne	441438 <_obstack_memory_used@@Base+0x75d0>  // b.any
  441460:	ldp	x3, x2, [x19, #272]
  441464:	strb	wzr, [x19, #255]
  441468:	mov	x0, x19
  44146c:	blr	x3
  441470:	ldr	x2, [x19, #320]
  441474:	mov	x1, #0x1                   	// #1
  441478:	mov	x0, #0x0                   	// #0
  44147c:	add	x2, x2, x1
  441480:	str	x2, [x19, #320]
  441484:	b	441440 <_obstack_memory_used@@Base+0x75d8>
  441488:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  44148c:	add	x24, x24, #0xb50
  441490:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  441494:	add	x24, x24, #0x1a
  441498:	add	x22, x22, #0xb51
  44149c:	mov	w23, #0x63                  	// #99
  4414a0:	ldr	x1, [x19, #256]
  4414a4:	b	4414c8 <_obstack_memory_used@@Base+0x7660>
  4414a8:	mov	x0, x1
  4414ac:	add	x1, x1, #0x1
  4414b0:	str	x1, [x19, #256]
  4414b4:	cmp	x24, x22
  4414b8:	strb	w23, [x19, x0]
  4414bc:	strb	w23, [x19, #264]
  4414c0:	b.eq	442be0 <_obstack_memory_used@@Base+0x8d78>  // b.none
  4414c4:	ldrb	w23, [x22], #1
  4414c8:	cmp	x1, #0xff
  4414cc:	b.ne	4414a8 <_obstack_memory_used@@Base+0x7640>  // b.any
  4414d0:	ldp	x3, x2, [x19, #272]
  4414d4:	strb	wzr, [x19, #255]
  4414d8:	mov	x0, x19
  4414dc:	blr	x3
  4414e0:	ldr	x2, [x19, #320]
  4414e4:	mov	x1, #0x1                   	// #1
  4414e8:	mov	x0, #0x0                   	// #0
  4414ec:	add	x2, x2, x1
  4414f0:	str	x2, [x19, #320]
  4414f4:	b	4414b0 <_obstack_memory_used@@Base+0x7648>
  4414f8:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  4414fc:	add	x24, x24, #0xb70
  441500:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  441504:	add	x24, x24, #0xf
  441508:	add	x22, x22, #0xb71
  44150c:	mov	w23, #0x6a                  	// #106
  441510:	ldr	x1, [x19, #256]
  441514:	b	441538 <_obstack_memory_used@@Base+0x76d0>
  441518:	mov	x0, x1
  44151c:	add	x1, x1, #0x1
  441520:	str	x1, [x19, #256]
  441524:	cmp	x22, x24
  441528:	strb	w23, [x19, x0]
  44152c:	strb	w23, [x19, #264]
  441530:	b.eq	442540 <_obstack_memory_used@@Base+0x86d8>  // b.none
  441534:	ldrb	w23, [x22], #1
  441538:	cmp	x1, #0xff
  44153c:	b.ne	441518 <_obstack_memory_used@@Base+0x76b0>  // b.any
  441540:	ldp	x3, x2, [x19, #272]
  441544:	strb	wzr, [x19, #255]
  441548:	mov	x0, x19
  44154c:	blr	x3
  441550:	ldr	x2, [x19, #320]
  441554:	mov	x1, #0x1                   	// #1
  441558:	mov	x0, #0x0                   	// #0
  44155c:	add	x2, x2, x1
  441560:	str	x2, [x19, #320]
  441564:	b	441520 <_obstack_memory_used@@Base+0x76b8>
  441568:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  44156c:	add	x24, x24, #0xbd0
  441570:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  441574:	add	x24, x24, #0x15
  441578:	add	x22, x22, #0xbd1
  44157c:	mov	w23, #0x72                  	// #114
  441580:	ldr	x1, [x19, #256]
  441584:	b	4415a8 <_obstack_memory_used@@Base+0x7740>
  441588:	mov	x0, x1
  44158c:	add	x1, x1, #0x1
  441590:	str	x1, [x19, #256]
  441594:	cmp	x24, x22
  441598:	strb	w23, [x19, x0]
  44159c:	strb	w23, [x19, #264]
  4415a0:	b.eq	442578 <_obstack_memory_used@@Base+0x8710>  // b.none
  4415a4:	ldrb	w23, [x22], #1
  4415a8:	cmp	x1, #0xff
  4415ac:	b.ne	441588 <_obstack_memory_used@@Base+0x7720>  // b.any
  4415b0:	ldp	x3, x2, [x19, #272]
  4415b4:	strb	wzr, [x19, #255]
  4415b8:	mov	x0, x19
  4415bc:	blr	x3
  4415c0:	ldr	x2, [x19, #320]
  4415c4:	mov	x1, #0x1                   	// #1
  4415c8:	mov	x0, #0x0                   	// #0
  4415cc:	add	x2, x2, x1
  4415d0:	str	x2, [x19, #320]
  4415d4:	b	441590 <_obstack_memory_used@@Base+0x7728>
  4415d8:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  4415dc:	add	x24, x24, #0xb98
  4415e0:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  4415e4:	add	x24, x24, #0x16
  4415e8:	add	x22, x22, #0xb99
  4415ec:	mov	w23, #0x54                  	// #84
  4415f0:	ldr	x1, [x19, #256]
  4415f4:	b	441618 <_obstack_memory_used@@Base+0x77b0>
  4415f8:	mov	x0, x1
  4415fc:	add	x1, x1, #0x1
  441600:	str	x1, [x19, #256]
  441604:	cmp	x22, x24
  441608:	strb	w23, [x19, x0]
  44160c:	strb	w23, [x19, #264]
  441610:	b.eq	442b38 <_obstack_memory_used@@Base+0x8cd0>  // b.none
  441614:	ldrb	w23, [x22], #1
  441618:	cmp	x1, #0xff
  44161c:	b.ne	4415f8 <_obstack_memory_used@@Base+0x7790>  // b.any
  441620:	ldp	x3, x2, [x19, #272]
  441624:	strb	wzr, [x19, #255]
  441628:	mov	x0, x19
  44162c:	blr	x3
  441630:	ldr	x2, [x19, #320]
  441634:	mov	x1, #0x1                   	// #1
  441638:	mov	x0, #0x0                   	// #0
  44163c:	add	x2, x2, x1
  441640:	str	x2, [x19, #320]
  441644:	b	441600 <_obstack_memory_used@@Base+0x7798>
  441648:	ldr	x1, [x20, #8]
  44164c:	mov	x0, x19
  441650:	mov	w24, #0x0                   	// #0
  441654:	bl	43ced8 <_obstack_memory_used@@Base+0x3070>
  441658:	cbz	x0, 44406c <_obstack_memory_used@@Base+0xa204>
  44165c:	stp	x25, x26, [sp, #64]
  441660:	ldr	w1, [x0]
  441664:	cmp	w1, #0x2f
  441668:	b.ne	442d14 <_obstack_memory_used@@Base+0x8eac>  // b.any
  44166c:	ldr	x1, [x0, #8]
  441670:	cbz	x1, 442d14 <_obstack_memory_used@@Base+0x8eac>
  441674:	ldr	x0, [x0, #16]
  441678:	add	w24, w24, #0x1
  44167c:	cbnz	x0, 441660 <_obstack_memory_used@@Base+0x77f8>
  441680:	ldr	x25, [x20, #8]
  441684:	sub	w26, w24, #0x1
  441688:	b	441698 <_obstack_memory_used@@Base+0x7830>
  44168c:	add	w22, w22, #0x1
  441690:	cmp	w22, w24
  441694:	b.ge	442cbc <_obstack_memory_used@@Base+0x8e54>  // b.tcont
  441698:	str	w22, [x19, #316]
  44169c:	mov	x2, x25
  4416a0:	mov	w1, w21
  4416a4:	mov	x0, x19
  4416a8:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4416ac:	cmp	w26, w22
  4416b0:	b.le	44168c <_obstack_memory_used@@Base+0x7824>
  4416b4:	mov	w20, #0x2c                  	// #44
  4416b8:	mov	x23, #0x0                   	// #0
  4416bc:	ldr	x1, [x19, #256]
  4416c0:	b	4416e4 <_obstack_memory_used@@Base+0x787c>
  4416c4:	mov	x0, x1
  4416c8:	add	x1, x1, #0x1
  4416cc:	str	x1, [x19, #256]
  4416d0:	strb	w20, [x19, x0]
  4416d4:	strb	w20, [x19, #264]
  4416d8:	mov	w20, #0x20                  	// #32
  4416dc:	cbnz	x23, 44168c <_obstack_memory_used@@Base+0x7824>
  4416e0:	mov	x23, #0x1                   	// #1
  4416e4:	cmp	x1, #0xff
  4416e8:	b.ne	4416c4 <_obstack_memory_used@@Base+0x785c>  // b.any
  4416ec:	ldp	x3, x2, [x19, #272]
  4416f0:	strb	wzr, [x19, #255]
  4416f4:	mov	x0, x19
  4416f8:	blr	x3
  4416fc:	ldr	x2, [x19, #320]
  441700:	mov	x1, #0x1                   	// #1
  441704:	mov	x0, #0x0                   	// #0
  441708:	add	x2, x2, x1
  44170c:	str	x2, [x19, #320]
  441710:	b	4416cc <_obstack_memory_used@@Base+0x7864>
  441714:	ldr	x2, [x20, #8]
  441718:	mov	w1, w21
  44171c:	mov	x0, x19
  441720:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  441724:	add	x24, x24, #0xa38
  441728:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  44172c:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  441730:	add	x24, x24, #0x5
  441734:	add	x22, x22, #0xa39
  441738:	mov	w23, #0x5b                  	// #91
  44173c:	ldr	x1, [x19, #256]
  441740:	b	441764 <_obstack_memory_used@@Base+0x78fc>
  441744:	mov	x0, x1
  441748:	add	x1, x1, #0x1
  44174c:	str	x1, [x19, #256]
  441750:	cmp	x24, x22
  441754:	strb	w23, [x19, x0]
  441758:	strb	w23, [x19, #264]
  44175c:	b.eq	442684 <_obstack_memory_used@@Base+0x881c>  // b.none
  441760:	ldrb	w23, [x22], #1
  441764:	cmp	x1, #0xff
  441768:	b.ne	441744 <_obstack_memory_used@@Base+0x78dc>  // b.any
  44176c:	ldp	x3, x2, [x19, #272]
  441770:	strb	wzr, [x19, #255]
  441774:	mov	x0, x19
  441778:	blr	x3
  44177c:	ldr	x2, [x19, #320]
  441780:	mov	x1, #0x1                   	// #1
  441784:	mov	x0, #0x0                   	// #0
  441788:	add	x2, x2, x1
  44178c:	str	x2, [x19, #320]
  441790:	b	44174c <_obstack_memory_used@@Base+0x78e4>
  441794:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  441798:	add	x24, x24, #0xc18
  44179c:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  4417a0:	add	x24, x24, #0x1a
  4417a4:	add	x22, x22, #0xc19
  4417a8:	mov	w23, #0x6e                  	// #110
  4417ac:	ldr	x1, [x19, #256]
  4417b0:	b	4417d4 <_obstack_memory_used@@Base+0x796c>
  4417b4:	mov	x0, x1
  4417b8:	add	x1, x1, #0x1
  4417bc:	str	x1, [x19, #256]
  4417c0:	cmp	x24, x22
  4417c4:	strb	w23, [x19, x0]
  4417c8:	strb	w23, [x19, #264]
  4417cc:	b.eq	44264c <_obstack_memory_used@@Base+0x87e4>  // b.none
  4417d0:	ldrb	w23, [x22], #1
  4417d4:	cmp	x1, #0xff
  4417d8:	b.ne	4417b4 <_obstack_memory_used@@Base+0x794c>  // b.any
  4417dc:	ldp	x3, x2, [x19, #272]
  4417e0:	strb	wzr, [x19, #255]
  4417e4:	mov	x0, x19
  4417e8:	blr	x3
  4417ec:	ldr	x2, [x19, #320]
  4417f0:	mov	x1, #0x1                   	// #1
  4417f4:	mov	x0, #0x0                   	// #0
  4417f8:	add	x2, x2, x1
  4417fc:	str	x2, [x19, #320]
  441800:	b	4417bc <_obstack_memory_used@@Base+0x7954>
  441804:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  441808:	add	x24, x24, #0xb80
  44180c:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  441810:	add	x24, x24, #0x13
  441814:	add	x22, x22, #0xb81
  441818:	mov	w23, #0x67                  	// #103
  44181c:	ldr	x1, [x19, #256]
  441820:	b	441844 <_obstack_memory_used@@Base+0x79dc>
  441824:	mov	x0, x1
  441828:	add	x1, x1, #0x1
  44182c:	str	x1, [x19, #256]
  441830:	cmp	x24, x22
  441834:	strb	w23, [x19, x0]
  441838:	strb	w23, [x19, #264]
  44183c:	b.eq	44255c <_obstack_memory_used@@Base+0x86f4>  // b.none
  441840:	ldrb	w23, [x22], #1
  441844:	cmp	x1, #0xff
  441848:	b.ne	441824 <_obstack_memory_used@@Base+0x79bc>  // b.any
  44184c:	ldp	x3, x2, [x19, #272]
  441850:	strb	wzr, [x19, #255]
  441854:	mov	x0, x19
  441858:	blr	x3
  44185c:	ldr	x2, [x19, #320]
  441860:	mov	x1, #0x1                   	// #1
  441864:	mov	x0, #0x0                   	// #0
  441868:	add	x2, x2, x1
  44186c:	str	x2, [x19, #320]
  441870:	b	44182c <_obstack_memory_used@@Base+0x79c4>
  441874:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  441878:	add	x24, x24, #0xbb0
  44187c:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  441880:	add	x24, x24, #0x19
  441884:	add	x22, x22, #0xbb1
  441888:	mov	w23, #0x54                  	// #84
  44188c:	ldr	x1, [x19, #256]
  441890:	b	4418b4 <_obstack_memory_used@@Base+0x7a4c>
  441894:	mov	x0, x1
  441898:	add	x1, x1, #0x1
  44189c:	str	x1, [x19, #256]
  4418a0:	cmp	x24, x22
  4418a4:	strb	w23, [x19, x0]
  4418a8:	strb	w23, [x19, #264]
  4418ac:	b.eq	442b54 <_obstack_memory_used@@Base+0x8cec>  // b.none
  4418b0:	ldrb	w23, [x22], #1
  4418b4:	cmp	x1, #0xff
  4418b8:	b.ne	441894 <_obstack_memory_used@@Base+0x7a2c>  // b.any
  4418bc:	ldp	x3, x2, [x19, #272]
  4418c0:	strb	wzr, [x19, #255]
  4418c4:	mov	x0, x19
  4418c8:	blr	x3
  4418cc:	ldr	x2, [x19, #320]
  4418d0:	mov	x1, #0x1                   	// #1
  4418d4:	mov	x0, #0x0                   	// #0
  4418d8:	add	x2, x2, x1
  4418dc:	str	x2, [x19, #320]
  4418e0:	b	44189c <_obstack_memory_used@@Base+0x7a34>
  4418e4:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  4418e8:	add	x22, x22, #0xaa8
  4418ec:	add	x24, x22, #0x8
  4418f0:	mov	w23, #0x56                  	// #86
  4418f4:	ldr	x1, [x19, #256]
  4418f8:	b	441920 <_obstack_memory_used@@Base+0x7ab8>
  4418fc:	mov	x0, x1
  441900:	add	x1, x1, #0x1
  441904:	str	x1, [x19, #256]
  441908:	add	x22, x22, #0x1
  44190c:	strb	w23, [x19, x0]
  441910:	cmp	x24, x22
  441914:	strb	w23, [x19, #264]
  441918:	b.eq	442aa0 <_obstack_memory_used@@Base+0x8c38>  // b.none
  44191c:	ldrb	w23, [x22]
  441920:	cmp	x1, #0xff
  441924:	b.ne	4418fc <_obstack_memory_used@@Base+0x7a94>  // b.any
  441928:	ldp	x3, x2, [x19, #272]
  44192c:	strb	wzr, [x19, #255]
  441930:	mov	x0, x19
  441934:	blr	x3
  441938:	ldr	x2, [x19, #320]
  44193c:	mov	x1, #0x1                   	// #1
  441940:	mov	x0, #0x0                   	// #0
  441944:	add	x2, x2, x1
  441948:	str	x2, [x19, #320]
  44194c:	b	441904 <_obstack_memory_used@@Base+0x7a9c>
  441950:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  441954:	add	x24, x24, #0xab8
  441958:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  44195c:	add	x24, x24, #0x18
  441960:	add	x22, x22, #0xab9
  441964:	mov	w23, #0x63                  	// #99
  441968:	ldr	x1, [x19, #256]
  44196c:	b	441990 <_obstack_memory_used@@Base+0x7b28>
  441970:	mov	x0, x1
  441974:	add	x1, x1, #0x1
  441978:	str	x1, [x19, #256]
  44197c:	cmp	x24, x22
  441980:	strb	w23, [x19, x0]
  441984:	strb	w23, [x19, #264]
  441988:	b.eq	442abc <_obstack_memory_used@@Base+0x8c54>  // b.none
  44198c:	ldrb	w23, [x22], #1
  441990:	cmp	x1, #0xff
  441994:	b.ne	441970 <_obstack_memory_used@@Base+0x7b08>  // b.any
  441998:	ldp	x3, x2, [x19, #272]
  44199c:	strb	wzr, [x19, #255]
  4419a0:	mov	x0, x19
  4419a4:	blr	x3
  4419a8:	ldr	x2, [x19, #320]
  4419ac:	mov	x1, #0x1                   	// #1
  4419b0:	mov	x0, #0x0                   	// #0
  4419b4:	add	x2, x2, x1
  4419b8:	str	x2, [x19, #320]
  4419bc:	b	441978 <_obstack_memory_used@@Base+0x7b10>
  4419c0:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  4419c4:	add	x24, x24, #0xae0
  4419c8:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  4419cc:	add	x24, x24, #0xd
  4419d0:	add	x22, x22, #0xae1
  4419d4:	mov	w23, #0x74                  	// #116
  4419d8:	ldr	x1, [x19, #256]
  4419dc:	b	441a00 <_obstack_memory_used@@Base+0x7b98>
  4419e0:	mov	x0, x1
  4419e4:	add	x1, x1, #0x1
  4419e8:	str	x1, [x19, #256]
  4419ec:	cmp	x24, x22
  4419f0:	strb	w23, [x19, x0]
  4419f4:	strb	w23, [x19, #264]
  4419f8:	b.eq	442614 <_obstack_memory_used@@Base+0x87ac>  // b.none
  4419fc:	ldrb	w23, [x22], #1
  441a00:	cmp	x1, #0xff
  441a04:	b.ne	4419e0 <_obstack_memory_used@@Base+0x7b78>  // b.any
  441a08:	ldp	x3, x2, [x19, #272]
  441a0c:	strb	wzr, [x19, #255]
  441a10:	mov	x0, x19
  441a14:	blr	x3
  441a18:	ldr	x2, [x19, #320]
  441a1c:	mov	x1, #0x1                   	// #1
  441a20:	mov	x0, #0x0                   	// #0
  441a24:	add	x2, x2, x1
  441a28:	str	x2, [x19, #320]
  441a2c:	b	4419e8 <_obstack_memory_used@@Base+0x7b80>
  441a30:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  441a34:	add	x24, x24, #0xaf0
  441a38:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  441a3c:	add	x24, x24, #0x12
  441a40:	add	x22, x22, #0xaf1
  441a44:	mov	w23, #0x74                  	// #116
  441a48:	ldr	x1, [x19, #256]
  441a4c:	b	441a70 <_obstack_memory_used@@Base+0x7c08>
  441a50:	mov	x0, x1
  441a54:	add	x1, x1, #0x1
  441a58:	str	x1, [x19, #256]
  441a5c:	cmp	x24, x22
  441a60:	strb	w23, [x19, x0]
  441a64:	strb	w23, [x19, #264]
  441a68:	b.eq	442630 <_obstack_memory_used@@Base+0x87c8>  // b.none
  441a6c:	ldrb	w23, [x22], #1
  441a70:	cmp	x1, #0xff
  441a74:	b.ne	441a50 <_obstack_memory_used@@Base+0x7be8>  // b.any
  441a78:	ldp	x3, x2, [x19, #272]
  441a7c:	strb	wzr, [x19, #255]
  441a80:	mov	x0, x19
  441a84:	blr	x3
  441a88:	ldr	x2, [x19, #320]
  441a8c:	mov	x1, #0x1                   	// #1
  441a90:	mov	x0, #0x0                   	// #0
  441a94:	add	x2, x2, x1
  441a98:	str	x2, [x19, #320]
  441a9c:	b	441a58 <_obstack_memory_used@@Base+0x7bf0>
  441aa0:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  441aa4:	add	x24, x24, #0xb08
  441aa8:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  441aac:	add	x24, x24, #0x10
  441ab0:	add	x22, x22, #0xb09
  441ab4:	mov	w23, #0x74                  	// #116
  441ab8:	ldr	x1, [x19, #256]
  441abc:	b	441ae0 <_obstack_memory_used@@Base+0x7c78>
  441ac0:	mov	x0, x1
  441ac4:	add	x1, x1, #0x1
  441ac8:	str	x1, [x19, #256]
  441acc:	cmp	x24, x22
  441ad0:	strb	w23, [x19, x0]
  441ad4:	strb	w23, [x19, #264]
  441ad8:	b.eq	442a84 <_obstack_memory_used@@Base+0x8c1c>  // b.none
  441adc:	ldrb	w23, [x22], #1
  441ae0:	cmp	x1, #0xff
  441ae4:	b.ne	441ac0 <_obstack_memory_used@@Base+0x7c58>  // b.any
  441ae8:	ldp	x3, x2, [x19, #272]
  441aec:	strb	wzr, [x19, #255]
  441af0:	mov	x0, x19
  441af4:	blr	x3
  441af8:	ldr	x2, [x19, #320]
  441afc:	mov	x1, #0x1                   	// #1
  441b00:	mov	x0, #0x0                   	// #0
  441b04:	add	x2, x2, x1
  441b08:	str	x2, [x19, #320]
  441b0c:	b	441ac8 <_obstack_memory_used@@Base+0x7c60>
  441b10:	stp	x25, x26, [sp, #64]
  441b14:	ldr	x25, [x20, #8]
  441b18:	ldr	x22, [x19, #296]
  441b1c:	str	xzr, [x19, #296]
  441b20:	cbz	x25, 443bd8 <_obstack_memory_used@@Base+0x9d70>
  441b24:	add	x23, sp, #0x60
  441b28:	mov	x2, #0x1f                  	// #31
  441b2c:	ldr	x6, [x19, #288]
  441b30:	mov	x3, x23
  441b34:	mov	x0, #0x0                   	// #0
  441b38:	mov	w24, #0x0                   	// #0
  441b3c:	mov	x1, #0x1                   	// #1
  441b40:	movk	x2, #0x1a, lsl #48
  441b44:	str	wzr, [x3, #16]
  441b48:	add	w24, w24, #0x1
  441b4c:	str	x0, [x3]
  441b50:	mov	x4, x3
  441b54:	ldr	w5, [x25]
  441b58:	str	x25, [x3, #8]
  441b5c:	str	x6, [x3, #24]
  441b60:	sub	w0, w5, #0x1c
  441b64:	cmp	w0, #0x34
  441b68:	b.hi	441b78 <_obstack_memory_used@@Base+0x7d10>  // b.pmore
  441b6c:	lsl	x0, x1, x0
  441b70:	tst	x0, x2
  441b74:	b.ne	442cf8 <_obstack_memory_used@@Base+0x8e90>  // b.any
  441b78:	str	x3, [x19, #296]
  441b7c:	cmp	w5, #0x2
  441b80:	b.eq	443ab8 <_obstack_memory_used@@Base+0x9c50>  // b.none
  441b84:	cmp	w5, #0x4
  441b88:	b.ne	441b98 <_obstack_memory_used@@Base+0x7d30>  // b.any
  441b8c:	add	x0, sp, #0x50
  441b90:	stp	x6, x25, [sp, #80]
  441b94:	str	x0, [x19, #288]
  441b98:	ldr	x2, [x20, #16]
  441b9c:	mov	x0, x19
  441ba0:	mov	w1, w21
  441ba4:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  441ba8:	ldr	w0, [x25]
  441bac:	cmp	w0, #0x4
  441bb0:	b.ne	441bbc <_obstack_memory_used@@Base+0x7d54>  // b.any
  441bb4:	ldr	x0, [sp, #80]
  441bb8:	str	x0, [x19, #288]
  441bbc:	sub	w20, w24, #0x1
  441bc0:	mov	w24, #0x20                  	// #32
  441bc4:	ubfiz	x0, x20, #5, #32
  441bc8:	add	x23, x23, x0
  441bcc:	b	441bd4 <_obstack_memory_used@@Base+0x7d6c>
  441bd0:	sub	w20, w20, #0x1
  441bd4:	ldr	w0, [x23, #16]
  441bd8:	cbnz	w0, 441c30 <_obstack_memory_used@@Base+0x7dc8>
  441bdc:	ldr	x0, [x19, #256]
  441be0:	add	x1, x0, #0x1
  441be4:	cmp	x0, #0xff
  441be8:	b.ne	441c14 <_obstack_memory_used@@Base+0x7dac>  // b.any
  441bec:	ldp	x3, x2, [x19, #272]
  441bf0:	strb	wzr, [x19, #255]
  441bf4:	mov	x1, x0
  441bf8:	mov	x0, x19
  441bfc:	blr	x3
  441c00:	ldr	x2, [x19, #320]
  441c04:	mov	x1, #0x1                   	// #1
  441c08:	mov	x0, #0x0                   	// #0
  441c0c:	add	x2, x2, x1
  441c10:	str	x2, [x19, #320]
  441c14:	str	x1, [x19, #256]
  441c18:	mov	w1, w21
  441c1c:	ldr	x2, [x23, #8]
  441c20:	strb	w24, [x19, x0]
  441c24:	strb	w24, [x19, #264]
  441c28:	mov	x0, x19
  441c2c:	bl	4446a8 <_obstack_memory_used@@Base+0xa840>
  441c30:	sub	x23, x23, #0x20
  441c34:	cbnz	w20, 441bd0 <_obstack_memory_used@@Base+0x7d68>
  441c38:	ldp	x23, x24, [sp, #48]
  441c3c:	ldp	x25, x26, [sp, #64]
  441c40:	str	x22, [x19, #296]
  441c44:	ldp	x21, x22, [sp, #32]
  441c48:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  441c4c:	ldr	x22, [x20, #8]
  441c50:	ldr	x24, [x19, #296]
  441c54:	str	xzr, [x19, #296]
  441c58:	ldr	x23, [x19, #368]
  441c5c:	str	x20, [x19, #368]
  441c60:	tbz	w21, #2, 441c78 <_obstack_memory_used@@Base+0x7e10>
  441c64:	ldr	w0, [x22]
  441c68:	cbnz	w0, 441c78 <_obstack_memory_used@@Base+0x7e10>
  441c6c:	ldr	w0, [x22, #16]
  441c70:	cmp	w0, #0x6
  441c74:	b.eq	443f70 <_obstack_memory_used@@Base+0xa108>  // b.none
  441c78:	mov	x0, x19
  441c7c:	mov	x2, x22
  441c80:	mov	w1, w21
  441c84:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  441c88:	ldrb	w0, [x19, #264]
  441c8c:	cmp	w0, #0x3c
  441c90:	b.eq	4437d8 <_obstack_memory_used@@Base+0x9970>  // b.none
  441c94:	ldr	x1, [x19, #256]
  441c98:	add	x0, x1, #0x1
  441c9c:	cmp	x1, #0xff
  441ca0:	b.ne	441cc8 <_obstack_memory_used@@Base+0x7e60>  // b.any
  441ca4:	ldp	x3, x2, [x19, #272]
  441ca8:	strb	wzr, [x19, #255]
  441cac:	mov	x0, x19
  441cb0:	blr	x3
  441cb4:	ldr	x2, [x19, #320]
  441cb8:	mov	x0, #0x1                   	// #1
  441cbc:	mov	x1, #0x0                   	// #0
  441cc0:	add	x2, x2, x0
  441cc4:	str	x2, [x19, #320]
  441cc8:	str	x0, [x19, #256]
  441ccc:	mov	w0, #0x3c                  	// #60
  441cd0:	strb	w0, [x19, x1]
  441cd4:	mov	w1, w21
  441cd8:	strb	w0, [x19, #264]
  441cdc:	mov	x0, x19
  441ce0:	ldr	x2, [x20, #16]
  441ce4:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  441ce8:	ldrb	w0, [x19, #264]
  441cec:	cmp	w0, #0x3e
  441cf0:	b.eq	443790 <_obstack_memory_used@@Base+0x9928>  // b.none
  441cf4:	ldr	x1, [x19, #256]
  441cf8:	add	x0, x1, #0x1
  441cfc:	cmp	x1, #0xff
  441d00:	b.ne	441d28 <_obstack_memory_used@@Base+0x7ec0>  // b.any
  441d04:	ldp	x3, x2, [x19, #272]
  441d08:	strb	wzr, [x19, #255]
  441d0c:	mov	x0, x19
  441d10:	blr	x3
  441d14:	ldr	x2, [x19, #320]
  441d18:	mov	x0, #0x1                   	// #1
  441d1c:	mov	x1, #0x0                   	// #0
  441d20:	add	x2, x2, x0
  441d24:	str	x2, [x19, #320]
  441d28:	str	x0, [x19, #256]
  441d2c:	mov	w0, #0x3e                  	// #62
  441d30:	strb	w0, [x19, x1]
  441d34:	strb	w0, [x19, #264]
  441d38:	ldp	x21, x22, [sp, #32]
  441d3c:	str	x24, [x19, #296]
  441d40:	str	x23, [x19, #368]
  441d44:	ldp	x23, x24, [sp, #48]
  441d48:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  441d4c:	ldr	w0, [x19, #312]
  441d50:	cbz	w0, 442e1c <_obstack_memory_used@@Base+0x8fb4>
  441d54:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x1d198>
  441d58:	add	x23, x23, #0xa70
  441d5c:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x1d198>
  441d60:	add	x23, x23, #0x5
  441d64:	add	x21, x21, #0xa71
  441d68:	mov	w22, #0x61                  	// #97
  441d6c:	ldr	x1, [x19, #256]
  441d70:	b	441d94 <_obstack_memory_used@@Base+0x7f2c>
  441d74:	mov	x0, x1
  441d78:	add	x1, x1, #0x1
  441d7c:	str	x1, [x19, #256]
  441d80:	cmp	x23, x21
  441d84:	strb	w22, [x19, x0]
  441d88:	strb	w22, [x19, #264]
  441d8c:	b.eq	442e64 <_obstack_memory_used@@Base+0x8ffc>  // b.none
  441d90:	ldrb	w22, [x21], #1
  441d94:	cmp	x1, #0xff
  441d98:	b.ne	441d74 <_obstack_memory_used@@Base+0x7f0c>  // b.any
  441d9c:	ldp	x3, x2, [x19, #272]
  441da0:	strb	wzr, [x19, #255]
  441da4:	mov	x0, x19
  441da8:	blr	x3
  441dac:	ldr	x2, [x19, #320]
  441db0:	mov	x1, #0x1                   	// #1
  441db4:	mov	x0, #0x0                   	// #0
  441db8:	add	x2, x2, x1
  441dbc:	str	x2, [x19, #320]
  441dc0:	b	441d7c <_obstack_memory_used@@Base+0x7f14>
  441dc4:	ldr	x1, [x19, #256]
  441dc8:	add	x0, x1, #0x1
  441dcc:	cmp	x1, #0xff
  441dd0:	b.ne	441df8 <_obstack_memory_used@@Base+0x7f90>  // b.any
  441dd4:	ldp	x3, x2, [x19, #272]
  441dd8:	strb	wzr, [x19, #255]
  441ddc:	mov	x0, x19
  441de0:	blr	x3
  441de4:	ldr	x2, [x19, #320]
  441de8:	mov	x0, #0x1                   	// #1
  441dec:	mov	x1, #0x0                   	// #0
  441df0:	add	x2, x2, x0
  441df4:	str	x2, [x19, #320]
  441df8:	str	x0, [x19, #256]
  441dfc:	mov	w0, #0x7e                  	// #126
  441e00:	strb	w0, [x19, x1]
  441e04:	mov	w1, w21
  441e08:	strb	w0, [x19, #264]
  441e0c:	mov	x0, x19
  441e10:	ldr	x2, [x20, #16]
  441e14:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  441e18:	ldp	x21, x22, [sp, #32]
  441e1c:	ldp	x23, x24, [sp, #48]
  441e20:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  441e24:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  441e28:	add	x24, x24, #0xa98
  441e2c:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  441e30:	add	x24, x24, #0xb
  441e34:	add	x22, x22, #0xa99
  441e38:	mov	w23, #0x76                  	// #118
  441e3c:	ldr	x1, [x19, #256]
  441e40:	b	441e64 <_obstack_memory_used@@Base+0x7ffc>
  441e44:	mov	x0, x1
  441e48:	add	x1, x1, #0x1
  441e4c:	str	x1, [x19, #256]
  441e50:	cmp	x24, x22
  441e54:	strb	w23, [x19, x0]
  441e58:	strb	w23, [x19, #264]
  441e5c:	b.eq	4425f8 <_obstack_memory_used@@Base+0x8790>  // b.none
  441e60:	ldrb	w23, [x22], #1
  441e64:	cmp	x1, #0xff
  441e68:	b.ne	441e44 <_obstack_memory_used@@Base+0x7fdc>  // b.any
  441e6c:	ldp	x3, x2, [x19, #272]
  441e70:	strb	wzr, [x19, #255]
  441e74:	mov	x0, x19
  441e78:	blr	x3
  441e7c:	ldr	x2, [x19, #320]
  441e80:	mov	x1, #0x1                   	// #1
  441e84:	mov	x0, #0x0                   	// #0
  441e88:	add	x2, x2, x1
  441e8c:	str	x2, [x19, #320]
  441e90:	b	441e4c <_obstack_memory_used@@Base+0x7fe4>
  441e94:	ldr	x0, [x20, #16]
  441e98:	ldr	w0, [x0]
  441e9c:	cmp	w0, #0x39
  441ea0:	b.ne	440890 <_obstack_memory_used@@Base+0x6a28>  // b.any
  441ea4:	ldr	x2, [x20, #8]
  441ea8:	ldr	x0, [x2, #8]
  441eac:	ldr	x0, [x0]
  441eb0:	ldrb	w1, [x0, #1]
  441eb4:	cmp	w1, #0x63
  441eb8:	b.eq	443bf0 <_obstack_memory_used@@Base+0x9d88>  // b.none
  441ebc:	add	x3, x20, #0x10
  441ec0:	mov	w1, w21
  441ec4:	mov	x0, x19
  441ec8:	bl	445960 <_obstack_memory_used@@Base+0xbaf8>
  441ecc:	cbnz	w0, 443f58 <_obstack_memory_used@@Base+0xa0f0>
  441ed0:	ldr	x0, [x20, #8]
  441ed4:	ldr	w1, [x0]
  441ed8:	cmp	w1, #0x32
  441edc:	b.eq	4440cc <_obstack_memory_used@@Base+0xa264>  // b.none
  441ee0:	ldr	x0, [x0, #8]
  441ee4:	ldr	x1, [x0]
  441ee8:	ldrb	w0, [x1]
  441eec:	subs	w0, w0, #0x63
  441ef0:	b.ne	441f04 <_obstack_memory_used@@Base+0x809c>  // b.any
  441ef4:	ldrb	w0, [x1, #1]
  441ef8:	subs	w0, w0, #0x6c
  441efc:	b.ne	441f04 <_obstack_memory_used@@Base+0x809c>  // b.any
  441f00:	ldrb	w0, [x1, #2]
  441f04:	ldr	x1, [x20, #16]
  441f08:	ldr	x2, [x1, #8]
  441f0c:	cbnz	w0, 441f1c <_obstack_memory_used@@Base+0x80b4>
  441f10:	ldr	w0, [x2]
  441f14:	cmp	w0, #0x3
  441f18:	b.eq	444190 <_obstack_memory_used@@Base+0xa328>  // b.none
  441f1c:	mov	w1, w21
  441f20:	mov	x0, x19
  441f24:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  441f28:	ldr	x2, [x20, #8]
  441f2c:	ldr	x0, [x2, #8]
  441f30:	ldr	x0, [x0]
  441f34:	ldrb	w1, [x0]
  441f38:	cmp	w1, #0x69
  441f3c:	b.ne	443ea8 <_obstack_memory_used@@Base+0xa040>  // b.any
  441f40:	ldrb	w3, [x0, #1]
  441f44:	cmp	w3, #0x78
  441f48:	b.ne	443ea8 <_obstack_memory_used@@Base+0xa040>  // b.any
  441f4c:	ldrb	w3, [x0, #2]
  441f50:	cbnz	w3, 443ea8 <_obstack_memory_used@@Base+0xa040>
  441f54:	ldr	x1, [x19, #256]
  441f58:	cmp	x1, #0xff
  441f5c:	b.ne	441f84 <_obstack_memory_used@@Base+0x811c>  // b.any
  441f60:	ldp	x3, x2, [x19, #272]
  441f64:	strb	wzr, [x19, #255]
  441f68:	mov	x0, x19
  441f6c:	blr	x3
  441f70:	str	xzr, [x19, #256]
  441f74:	ldr	x0, [x19, #320]
  441f78:	mov	x1, #0x0                   	// #0
  441f7c:	add	x0, x0, #0x1
  441f80:	str	x0, [x19, #320]
  441f84:	add	x0, x1, #0x1
  441f88:	str	x0, [x19, #256]
  441f8c:	mov	w0, #0x5b                  	// #91
  441f90:	strb	w0, [x19, x1]
  441f94:	strb	w0, [x19, #264]
  441f98:	mov	w1, w21
  441f9c:	mov	x0, x19
  441fa0:	ldr	x2, [x20, #16]
  441fa4:	ldr	x2, [x2, #16]
  441fa8:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  441fac:	ldr	x1, [x19, #256]
  441fb0:	cmp	x1, #0xff
  441fb4:	b.ne	441fdc <_obstack_memory_used@@Base+0x8174>  // b.any
  441fb8:	ldp	x3, x2, [x19, #272]
  441fbc:	strb	wzr, [x19, #255]
  441fc0:	mov	x0, x19
  441fc4:	blr	x3
  441fc8:	str	xzr, [x19, #256]
  441fcc:	ldr	x0, [x19, #320]
  441fd0:	mov	x1, #0x0                   	// #0
  441fd4:	add	x0, x0, #0x1
  441fd8:	str	x0, [x19, #320]
  441fdc:	add	x0, x1, #0x1
  441fe0:	str	x0, [x19, #256]
  441fe4:	mov	w0, #0x5d                  	// #93
  441fe8:	strb	w0, [x19, x1]
  441fec:	strb	w0, [x19, #264]
  441ff0:	ldr	x0, [x20, #8]
  441ff4:	ldr	w1, [x0]
  441ff8:	cmp	w1, #0x32
  441ffc:	b.eq	4440b0 <_obstack_memory_used@@Base+0xa248>  // b.none
  442000:	ldp	x21, x22, [sp, #32]
  442004:	ldp	x23, x24, [sp, #48]
  442008:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  44200c:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  442010:	add	x24, x24, #0xcb0
  442014:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  442018:	add	x24, x24, #0xe
  44201c:	add	x22, x22, #0xcb1
  442020:	mov	w23, #0x6a                  	// #106
  442024:	ldr	x1, [x19, #256]
  442028:	b	44204c <_obstack_memory_used@@Base+0x81e4>
  44202c:	mov	x0, x1
  442030:	add	x1, x1, #0x1
  442034:	str	x1, [x19, #256]
  442038:	cmp	x24, x22
  44203c:	strb	w23, [x19, x0]
  442040:	strb	w23, [x19, #264]
  442044:	b.eq	442bfc <_obstack_memory_used@@Base+0x8d94>  // b.none
  442048:	ldrb	w23, [x22], #1
  44204c:	cmp	x1, #0xff
  442050:	b.ne	44202c <_obstack_memory_used@@Base+0x81c4>  // b.any
  442054:	ldp	x3, x2, [x19, #272]
  442058:	strb	wzr, [x19, #255]
  44205c:	mov	x0, x19
  442060:	blr	x3
  442064:	ldr	x2, [x19, #320]
  442068:	mov	x1, #0x1                   	// #1
  44206c:	mov	x0, #0x0                   	// #0
  442070:	add	x2, x2, x1
  442074:	str	x2, [x19, #320]
  442078:	b	442034 <_obstack_memory_used@@Base+0x81cc>
  44207c:	ldr	x2, [x20, #8]
  442080:	mov	w1, w21
  442084:	mov	x0, x19
  442088:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  44208c:	ldr	x2, [x20, #16]
  442090:	mov	w1, w21
  442094:	mov	x0, x19
  442098:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  44209c:	ldp	x21, x22, [sp, #32]
  4420a0:	ldp	x23, x24, [sp, #48]
  4420a4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4420a8:	ldr	x1, [x19, #256]
  4420ac:	ldrb	w20, [x20, #8]
  4420b0:	add	x0, x1, #0x1
  4420b4:	cmp	x1, #0xff
  4420b8:	b.ne	4420e0 <_obstack_memory_used@@Base+0x8278>  // b.any
  4420bc:	ldp	x3, x2, [x19, #272]
  4420c0:	strb	wzr, [x19, #255]
  4420c4:	mov	x0, x19
  4420c8:	blr	x3
  4420cc:	ldr	x2, [x19, #320]
  4420d0:	mov	x0, #0x1                   	// #1
  4420d4:	mov	x1, #0x0                   	// #0
  4420d8:	add	x2, x2, x0
  4420dc:	str	x2, [x19, #320]
  4420e0:	str	x0, [x19, #256]
  4420e4:	strb	w20, [x19, x1]
  4420e8:	strb	w20, [x19, #264]
  4420ec:	ldp	x21, x22, [sp, #32]
  4420f0:	ldp	x23, x24, [sp, #48]
  4420f4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4420f8:	ldr	w2, [x20, #8]
  4420fc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  442100:	add	x1, x1, #0xa50
  442104:	add	x20, sp, #0x60
  442108:	mov	x0, x20
  44210c:	bl	4023d0 <sprintf@plt>
  442110:	mov	x0, x20
  442114:	bl	402330 <strlen@plt>
  442118:	cbz	x0, 444048 <_obstack_memory_used@@Base+0xa1e0>
  44211c:	add	x22, x20, x0
  442120:	ldr	x1, [x19, #256]
  442124:	b	442148 <_obstack_memory_used@@Base+0x82e0>
  442128:	mov	x0, x1
  44212c:	add	x1, x1, #0x1
  442130:	str	x1, [x19, #256]
  442134:	add	x20, x20, #0x1
  442138:	strb	w21, [x19, x0]
  44213c:	cmp	x20, x22
  442140:	strb	w21, [x19, #264]
  442144:	b.eq	442cb0 <_obstack_memory_used@@Base+0x8e48>  // b.none
  442148:	ldrb	w21, [x20]
  44214c:	cmp	x1, #0xff
  442150:	b.ne	442128 <_obstack_memory_used@@Base+0x82c0>  // b.any
  442154:	ldp	x3, x2, [x19, #272]
  442158:	strb	wzr, [x19, #255]
  44215c:	mov	x0, x19
  442160:	blr	x3
  442164:	ldr	x2, [x19, #320]
  442168:	mov	x1, #0x1                   	// #1
  44216c:	mov	x0, #0x0                   	// #0
  442170:	add	x2, x2, x1
  442174:	str	x2, [x19, #320]
  442178:	b	442130 <_obstack_memory_used@@Base+0x82c8>
  44217c:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  442180:	add	x24, x24, #0xcc0
  442184:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  442188:	add	x24, x24, #0xa
  44218c:	add	x22, x22, #0xcc1
  442190:	mov	w23, #0x64                  	// #100
  442194:	ldr	x1, [x19, #256]
  442198:	b	4421bc <_obstack_memory_used@@Base+0x8354>
  44219c:	mov	x0, x1
  4421a0:	add	x1, x1, #0x1
  4421a4:	str	x1, [x19, #256]
  4421a8:	cmp	x22, x24
  4421ac:	strb	w23, [x19, x0]
  4421b0:	strb	w23, [x19, #264]
  4421b4:	b.eq	442a24 <_obstack_memory_used@@Base+0x8bbc>  // b.none
  4421b8:	ldrb	w23, [x22], #1
  4421bc:	cmp	x1, #0xff
  4421c0:	b.ne	44219c <_obstack_memory_used@@Base+0x8334>  // b.any
  4421c4:	ldp	x3, x2, [x19, #272]
  4421c8:	strb	wzr, [x19, #255]
  4421cc:	mov	x0, x19
  4421d0:	blr	x3
  4421d4:	ldr	x2, [x19, #320]
  4421d8:	mov	x1, #0x1                   	// #1
  4421dc:	mov	x0, #0x0                   	// #0
  4421e0:	add	x2, x2, x1
  4421e4:	str	x2, [x19, #320]
  4421e8:	b	4421a4 <_obstack_memory_used@@Base+0x833c>
  4421ec:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  4421f0:	add	x24, x24, #0xce8
  4421f4:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  4421f8:	add	x24, x24, #0x1d
  4421fc:	add	x22, x22, #0xce9
  442200:	mov	w23, #0x67                  	// #103
  442204:	ldr	x1, [x19, #256]
  442208:	b	44222c <_obstack_memory_used@@Base+0x83c4>
  44220c:	mov	x0, x1
  442210:	add	x1, x1, #0x1
  442214:	str	x1, [x19, #256]
  442218:	cmp	x22, x24
  44221c:	strb	w23, [x19, x0]
  442220:	strb	w23, [x19, #264]
  442224:	b.eq	442c68 <_obstack_memory_used@@Base+0x8e00>  // b.none
  442228:	ldrb	w23, [x22], #1
  44222c:	cmp	x1, #0xff
  442230:	b.ne	44220c <_obstack_memory_used@@Base+0x83a4>  // b.any
  442234:	ldp	x3, x2, [x19, #272]
  442238:	strb	wzr, [x19, #255]
  44223c:	mov	x0, x19
  442240:	blr	x3
  442244:	ldr	x2, [x19, #320]
  442248:	mov	x1, #0x1                   	// #1
  44224c:	mov	x0, #0x0                   	// #0
  442250:	add	x2, x2, x1
  442254:	str	x2, [x19, #320]
  442258:	b	442214 <_obstack_memory_used@@Base+0x83ac>
  44225c:	ldrsw	x22, [x20, #16]
  442260:	ldr	x20, [x20, #8]
  442264:	tbnz	w21, #2, 442d34 <_obstack_memory_used@@Base+0x8ecc>
  442268:	cbz	x22, 444178 <_obstack_memory_used@@Base+0xa310>
  44226c:	add	x22, x20, x22
  442270:	ldr	x1, [x19, #256]
  442274:	b	442298 <_obstack_memory_used@@Base+0x8430>
  442278:	mov	x0, x1
  44227c:	add	x1, x1, #0x1
  442280:	str	x1, [x19, #256]
  442284:	add	x20, x20, #0x1
  442288:	strb	w21, [x19, x0]
  44228c:	cmp	x22, x20
  442290:	strb	w21, [x19, #264]
  442294:	b.eq	44313c <_obstack_memory_used@@Base+0x92d4>  // b.none
  442298:	ldrb	w21, [x20]
  44229c:	cmp	x1, #0xff
  4422a0:	b.ne	442278 <_obstack_memory_used@@Base+0x8410>  // b.any
  4422a4:	ldp	x3, x2, [x19, #272]
  4422a8:	strb	wzr, [x19, #255]
  4422ac:	mov	x0, x19
  4422b0:	blr	x3
  4422b4:	ldr	x2, [x19, #320]
  4422b8:	mov	x1, #0x1                   	// #1
  4422bc:	mov	x0, #0x0                   	// #0
  4422c0:	add	x2, x2, x1
  4422c4:	str	x2, [x19, #320]
  4422c8:	b	442280 <_obstack_memory_used@@Base+0x8418>
  4422cc:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  4422d0:	add	x22, x22, #0xc60
  4422d4:	add	x24, x22, #0x9
  4422d8:	mov	w23, #0x6f                  	// #111
  4422dc:	ldr	x1, [x19, #256]
  4422e0:	b	442308 <_obstack_memory_used@@Base+0x84a0>
  4422e4:	mov	x0, x1
  4422e8:	add	x1, x1, #0x1
  4422ec:	str	x1, [x19, #256]
  4422f0:	add	x22, x22, #0x1
  4422f4:	strb	w23, [x19, x0]
  4422f8:	cmp	x22, x24
  4422fc:	strb	w23, [x19, #264]
  442300:	b.eq	442c18 <_obstack_memory_used@@Base+0x8db0>  // b.none
  442304:	ldrb	w23, [x22]
  442308:	cmp	x1, #0xff
  44230c:	b.ne	4422e4 <_obstack_memory_used@@Base+0x847c>  // b.any
  442310:	ldp	x3, x2, [x19, #272]
  442314:	strb	wzr, [x19, #255]
  442318:	mov	x0, x19
  44231c:	blr	x3
  442320:	ldr	x2, [x19, #320]
  442324:	mov	x1, #0x1                   	// #1
  442328:	mov	x0, #0x0                   	// #0
  44232c:	add	x2, x2, x1
  442330:	str	x2, [x19, #320]
  442334:	b	4422ec <_obstack_memory_used@@Base+0x8484>
  442338:	ldr	x2, [x20, #8]
  44233c:	mov	w1, w21
  442340:	mov	x0, x19
  442344:	bl	4457b0 <_obstack_memory_used@@Base+0xb948>
  442348:	ldp	x21, x22, [sp, #32]
  44234c:	ldp	x23, x24, [sp, #48]
  442350:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442354:	ldp	x22, x20, [x20, #8]
  442358:	ldr	w0, [x22]
  44235c:	cmp	w0, #0x32
  442360:	b.eq	443284 <_obstack_memory_used@@Base+0x941c>  // b.none
  442364:	cmp	w0, #0x34
  442368:	b.ne	4445cc <_obstack_memory_used@@Base+0xa764>  // b.any
  44236c:	ldr	x1, [x19, #256]
  442370:	add	x0, x1, #0x1
  442374:	cmp	x1, #0xff
  442378:	b.ne	4423a0 <_obstack_memory_used@@Base+0x8538>  // b.any
  44237c:	ldp	x3, x2, [x19, #272]
  442380:	strb	wzr, [x19, #255]
  442384:	mov	x0, x19
  442388:	blr	x3
  44238c:	ldr	x2, [x19, #320]
  442390:	mov	x0, #0x1                   	// #1
  442394:	mov	x1, #0x0                   	// #0
  442398:	add	x2, x2, x0
  44239c:	str	x2, [x19, #320]
  4423a0:	str	x0, [x19, #256]
  4423a4:	mov	w0, #0x28                  	// #40
  4423a8:	strb	w0, [x19, x1]
  4423ac:	mov	w1, w21
  4423b0:	strb	w0, [x19, #264]
  4423b4:	mov	x0, x19
  4423b8:	ldr	x2, [x22, #8]
  4423bc:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4423c0:	ldr	x1, [x19, #256]
  4423c4:	add	x0, x1, #0x1
  4423c8:	cmp	x1, #0xff
  4423cc:	b.ne	4423f4 <_obstack_memory_used@@Base+0x858c>  // b.any
  4423d0:	ldp	x3, x2, [x19, #272]
  4423d4:	strb	wzr, [x19, #255]
  4423d8:	mov	x0, x19
  4423dc:	blr	x3
  4423e0:	ldr	x2, [x19, #320]
  4423e4:	mov	x0, #0x1                   	// #1
  4423e8:	mov	x1, #0x0                   	// #0
  4423ec:	add	x2, x2, x0
  4423f0:	str	x2, [x19, #320]
  4423f4:	str	x0, [x19, #256]
  4423f8:	mov	w0, #0x29                  	// #41
  4423fc:	strb	w0, [x19, x1]
  442400:	strb	w0, [x19, #264]
  442404:	mov	w1, w21
  442408:	mov	x2, x20
  44240c:	mov	x0, x19
  442410:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  442414:	ldp	x21, x22, [sp, #32]
  442418:	ldp	x23, x24, [sp, #48]
  44241c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442420:	ldr	x0, [x20, #8]
  442424:	tbnz	w21, #2, 4430b0 <_obstack_memory_used@@Base+0x9248>
  442428:	ldrsw	x22, [x0, #8]
  44242c:	ldr	x20, [x0]
  442430:	cbz	x22, 444298 <_obstack_memory_used@@Base+0xa430>
  442434:	add	x22, x20, x22
  442438:	ldr	x1, [x19, #256]
  44243c:	b	442460 <_obstack_memory_used@@Base+0x85f8>
  442440:	mov	x0, x1
  442444:	add	x1, x1, #0x1
  442448:	str	x1, [x19, #256]
  44244c:	add	x20, x20, #0x1
  442450:	strb	w21, [x19, x0]
  442454:	cmp	x22, x20
  442458:	strb	w21, [x19, #264]
  44245c:	b.eq	443124 <_obstack_memory_used@@Base+0x92bc>  // b.none
  442460:	ldrb	w21, [x20]
  442464:	cmp	x1, #0xff
  442468:	b.ne	442440 <_obstack_memory_used@@Base+0x85d8>  // b.any
  44246c:	ldp	x3, x2, [x19, #272]
  442470:	strb	wzr, [x19, #255]
  442474:	mov	x0, x19
  442478:	blr	x3
  44247c:	ldr	x2, [x19, #320]
  442480:	mov	x1, #0x1                   	// #1
  442484:	mov	x0, #0x0                   	// #0
  442488:	add	x2, x2, x1
  44248c:	str	x2, [x19, #320]
  442490:	b	442448 <_obstack_memory_used@@Base+0x85e0>
  442494:	ldr	x2, [x0, #8]
  442498:	add	x0, sp, #0x60
  44249c:	ldr	x1, [x19, #288]
  4424a0:	stp	x4, x20, [sp, #96]
  4424a4:	str	wzr, [sp, #112]
  4424a8:	str	x1, [sp, #120]
  4424ac:	str	x0, [x19, #296]
  4424b0:	cbnz	x2, 4408c8 <_obstack_memory_used@@Base+0x6a60>
  4424b4:	b	4408c4 <_obstack_memory_used@@Base+0x6a5c>
  4424b8:	ldp	x21, x22, [sp, #32]
  4424bc:	ldp	x23, x24, [sp, #48]
  4424c0:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4424c4:	ldr	x2, [x20, #16]
  4424c8:	mov	w1, w21
  4424cc:	mov	x0, x19
  4424d0:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4424d4:	ldr	x1, [x19, #256]
  4424d8:	add	x0, x1, #0x1
  4424dc:	cmp	x1, #0xff
  4424e0:	b.ne	442508 <_obstack_memory_used@@Base+0x86a0>  // b.any
  4424e4:	ldp	x3, x2, [x19, #272]
  4424e8:	strb	wzr, [x19, #255]
  4424ec:	mov	x0, x19
  4424f0:	blr	x3
  4424f4:	ldr	x2, [x19, #320]
  4424f8:	mov	x0, #0x1                   	// #1
  4424fc:	mov	x1, #0x0                   	// #0
  442500:	add	x2, x2, x0
  442504:	str	x2, [x19, #320]
  442508:	str	x0, [x19, #256]
  44250c:	mov	w0, #0x5d                  	// #93
  442510:	strb	w0, [x19, x1]
  442514:	strb	w0, [x19, #264]
  442518:	ldp	x21, x22, [sp, #32]
  44251c:	ldp	x23, x24, [sp, #48]
  442520:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442524:	ldr	x2, [x20, #16]
  442528:	mov	w1, w21
  44252c:	mov	x0, x19
  442530:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442534:	ldp	x21, x22, [sp, #32]
  442538:	ldp	x23, x24, [sp, #48]
  44253c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442540:	ldr	x2, [x20, #8]
  442544:	mov	w1, w21
  442548:	mov	x0, x19
  44254c:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442550:	ldp	x21, x22, [sp, #32]
  442554:	ldp	x23, x24, [sp, #48]
  442558:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  44255c:	ldr	x2, [x20, #8]
  442560:	mov	w1, w21
  442564:	mov	x0, x19
  442568:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  44256c:	ldp	x21, x22, [sp, #32]
  442570:	ldp	x23, x24, [sp, #48]
  442574:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442578:	ldr	x2, [x20, #16]
  44257c:	mov	w1, w21
  442580:	mov	x0, x19
  442584:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  442588:	add	x24, x24, #0xae8
  44258c:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  442590:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442594:	add	x24, x24, #0x5
  442598:	add	x22, x22, #0xae9
  44259c:	mov	w23, #0x20                  	// #32
  4425a0:	ldr	x1, [x19, #256]
  4425a4:	b	4425c8 <_obstack_memory_used@@Base+0x8760>
  4425a8:	mov	x0, x1
  4425ac:	add	x1, x1, #0x1
  4425b0:	str	x1, [x19, #256]
  4425b4:	cmp	x22, x24
  4425b8:	strb	w23, [x19, x0]
  4425bc:	strb	w23, [x19, #264]
  4425c0:	b.eq	442668 <_obstack_memory_used@@Base+0x8800>  // b.none
  4425c4:	ldrb	w23, [x22], #1
  4425c8:	cmp	x1, #0xff
  4425cc:	b.ne	4425a8 <_obstack_memory_used@@Base+0x8740>  // b.any
  4425d0:	ldp	x3, x2, [x19, #272]
  4425d4:	strb	wzr, [x19, #255]
  4425d8:	mov	x0, x19
  4425dc:	blr	x3
  4425e0:	ldr	x2, [x19, #320]
  4425e4:	mov	x1, #0x1                   	// #1
  4425e8:	mov	x0, #0x0                   	// #0
  4425ec:	add	x2, x2, x1
  4425f0:	str	x2, [x19, #320]
  4425f4:	b	4425b0 <_obstack_memory_used@@Base+0x8748>
  4425f8:	ldr	x2, [x20, #8]
  4425fc:	mov	w1, w21
  442600:	mov	x0, x19
  442604:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442608:	ldp	x21, x22, [sp, #32]
  44260c:	ldp	x23, x24, [sp, #48]
  442610:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442614:	ldr	x2, [x20, #8]
  442618:	mov	w1, w21
  44261c:	mov	x0, x19
  442620:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442624:	ldp	x21, x22, [sp, #32]
  442628:	ldp	x23, x24, [sp, #48]
  44262c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442630:	ldr	x2, [x20, #8]
  442634:	mov	w1, w21
  442638:	mov	x0, x19
  44263c:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442640:	ldp	x21, x22, [sp, #32]
  442644:	ldp	x23, x24, [sp, #48]
  442648:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  44264c:	ldr	x2, [x20, #8]
  442650:	mov	w1, w21
  442654:	mov	x0, x19
  442658:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  44265c:	ldp	x21, x22, [sp, #32]
  442660:	ldp	x23, x24, [sp, #48]
  442664:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442668:	ldr	x2, [x20, #8]
  44266c:	mov	w1, w21
  442670:	mov	x0, x19
  442674:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442678:	ldp	x21, x22, [sp, #32]
  44267c:	ldp	x23, x24, [sp, #48]
  442680:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442684:	ldr	x2, [x20, #16]
  442688:	mov	w1, w21
  44268c:	mov	x0, x19
  442690:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442694:	ldr	x1, [x19, #256]
  442698:	add	x0, x1, #0x1
  44269c:	cmp	x1, #0xff
  4426a0:	b.ne	4426c8 <_obstack_memory_used@@Base+0x8860>  // b.any
  4426a4:	ldp	x3, x2, [x19, #272]
  4426a8:	strb	wzr, [x19, #255]
  4426ac:	mov	x0, x19
  4426b0:	blr	x3
  4426b4:	ldr	x2, [x19, #320]
  4426b8:	mov	x0, #0x1                   	// #1
  4426bc:	mov	x1, #0x0                   	// #0
  4426c0:	add	x2, x2, x0
  4426c4:	str	x2, [x19, #320]
  4426c8:	str	x0, [x19, #256]
  4426cc:	mov	w0, #0x5d                  	// #93
  4426d0:	strb	w0, [x19, x1]
  4426d4:	strb	w0, [x19, #264]
  4426d8:	ldp	x21, x22, [sp, #32]
  4426dc:	ldp	x23, x24, [sp, #48]
  4426e0:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4426e4:	ldr	x20, [x22, #8]
  4426e8:	ldrb	w0, [x20]
  4426ec:	sub	w0, w0, #0x61
  4426f0:	and	w0, w0, #0xff
  4426f4:	cmp	w0, #0x19
  4426f8:	b.hi	442740 <_obstack_memory_used@@Base+0x88d8>  // b.pmore
  4426fc:	add	x0, x1, #0x1
  442700:	cmp	x1, #0xff
  442704:	b.ne	442730 <_obstack_memory_used@@Base+0x88c8>  // b.any
  442708:	ldp	x3, x2, [x19, #272]
  44270c:	strb	wzr, [x19, #255]
  442710:	mov	x0, x19
  442714:	blr	x3
  442718:	ldr	x2, [x19, #320]
  44271c:	mov	x0, #0x1                   	// #1
  442720:	mov	x1, #0x0                   	// #0
  442724:	add	x2, x2, x0
  442728:	ldr	x20, [x22, #8]
  44272c:	str	x2, [x19, #320]
  442730:	str	x0, [x19, #256]
  442734:	mov	w0, #0x20                  	// #32
  442738:	strb	w0, [x19, x1]
  44273c:	strb	w0, [x19, #264]
  442740:	sxtw	x22, w23
  442744:	sub	w0, w23, #0x1
  442748:	add	x1, x20, x22
  44274c:	sxtw	x0, w0
  442750:	ldurb	w1, [x1, #-1]
  442754:	cmp	w1, #0x20
  442758:	csel	x22, x22, x0, ne  // ne = any
  44275c:	cbz	x22, 44403c <_obstack_memory_used@@Base+0xa1d4>
  442760:	add	x22, x20, x22
  442764:	ldr	x1, [x19, #256]
  442768:	b	44278c <_obstack_memory_used@@Base+0x8924>
  44276c:	mov	x0, x1
  442770:	add	x1, x1, #0x1
  442774:	str	x1, [x19, #256]
  442778:	add	x20, x20, #0x1
  44277c:	strb	w21, [x19, x0]
  442780:	cmp	x22, x20
  442784:	strb	w21, [x19, #264]
  442788:	b.eq	442ca4 <_obstack_memory_used@@Base+0x8e3c>  // b.none
  44278c:	ldrb	w21, [x20]
  442790:	cmp	x1, #0xff
  442794:	b.ne	44276c <_obstack_memory_used@@Base+0x8904>  // b.any
  442798:	ldp	x3, x2, [x19, #272]
  44279c:	strb	wzr, [x19, #255]
  4427a0:	mov	x0, x19
  4427a4:	blr	x3
  4427a8:	ldr	x2, [x19, #320]
  4427ac:	mov	x1, #0x1                   	// #1
  4427b0:	mov	x0, #0x0                   	// #0
  4427b4:	add	x2, x2, x1
  4427b8:	str	x2, [x19, #320]
  4427bc:	b	442774 <_obstack_memory_used@@Base+0x890c>
  4427c0:	ldr	x2, [x20, #8]
  4427c4:	mov	w1, w21
  4427c8:	mov	x0, x19
  4427cc:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4427d0:	ldp	x21, x22, [sp, #32]
  4427d4:	ldp	x23, x24, [sp, #48]
  4427d8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4427dc:	ldr	x2, [x20, #8]
  4427e0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  4427e4:	add	x1, x1, #0xa50
  4427e8:	add	x20, sp, #0x60
  4427ec:	add	w2, w2, #0x1
  4427f0:	mov	x0, x20
  4427f4:	bl	4023d0 <sprintf@plt>
  4427f8:	mov	x0, x20
  4427fc:	bl	402330 <strlen@plt>
  442800:	ldr	x1, [x19, #256]
  442804:	cbz	x0, 442864 <_obstack_memory_used@@Base+0x89fc>
  442808:	add	x22, x20, x0
  44280c:	b	442830 <_obstack_memory_used@@Base+0x89c8>
  442810:	mov	x0, x1
  442814:	add	x1, x1, #0x1
  442818:	str	x1, [x19, #256]
  44281c:	add	x20, x20, #0x1
  442820:	strb	w21, [x19, x0]
  442824:	cmp	x22, x20
  442828:	strb	w21, [x19, #264]
  44282c:	b.eq	442864 <_obstack_memory_used@@Base+0x89fc>  // b.none
  442830:	ldrb	w21, [x20]
  442834:	cmp	x1, #0xff
  442838:	b.ne	442810 <_obstack_memory_used@@Base+0x89a8>  // b.any
  44283c:	ldp	x3, x2, [x19, #272]
  442840:	strb	wzr, [x19, #255]
  442844:	mov	x0, x19
  442848:	blr	x3
  44284c:	ldr	x2, [x19, #320]
  442850:	mov	x1, #0x1                   	// #1
  442854:	mov	x0, #0x0                   	// #0
  442858:	add	x2, x2, x1
  44285c:	str	x2, [x19, #320]
  442860:	b	442818 <_obstack_memory_used@@Base+0x89b0>
  442864:	add	x0, x1, #0x1
  442868:	cmp	x1, #0xff
  44286c:	b.ne	442894 <_obstack_memory_used@@Base+0x8a2c>  // b.any
  442870:	ldp	x3, x2, [x19, #272]
  442874:	strb	wzr, [x19, #255]
  442878:	mov	x0, x19
  44287c:	blr	x3
  442880:	ldr	x2, [x19, #320]
  442884:	mov	x0, #0x1                   	// #1
  442888:	mov	x1, #0x0                   	// #0
  44288c:	add	x2, x2, x0
  442890:	str	x2, [x19, #320]
  442894:	str	x0, [x19, #256]
  442898:	mov	w0, #0x7d                  	// #125
  44289c:	strb	w0, [x19, x1]
  4428a0:	strb	w0, [x19, #264]
  4428a4:	ldp	x21, x22, [sp, #32]
  4428a8:	ldp	x23, x24, [sp, #48]
  4428ac:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4428b0:	ldr	x2, [x20, #8]
  4428b4:	mov	w1, w21
  4428b8:	mov	x0, x19
  4428bc:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4428c0:	ldp	x21, x22, [sp, #32]
  4428c4:	ldp	x23, x24, [sp, #48]
  4428c8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4428cc:	ldr	x2, [x20, #8]
  4428d0:	mov	w1, w21
  4428d4:	mov	x0, x19
  4428d8:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4428dc:	ldp	x21, x22, [sp, #32]
  4428e0:	ldp	x23, x24, [sp, #48]
  4428e4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4428e8:	ldr	w3, [x19, #312]
  4428ec:	mov	w1, w21
  4428f0:	ldr	x2, [x20, #8]
  4428f4:	add	w3, w3, #0x1
  4428f8:	str	w3, [x19, #312]
  4428fc:	mov	x0, x19
  442900:	mov	w21, #0x29                  	// #41
  442904:	mov	x22, #0x0                   	// #0
  442908:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  44290c:	ldr	w0, [x19, #312]
  442910:	ldr	x1, [x19, #256]
  442914:	sub	w0, w0, #0x1
  442918:	str	w0, [x19, #312]
  44291c:	b	442944 <_obstack_memory_used@@Base+0x8adc>
  442920:	mov	x0, x1
  442924:	add	x1, x1, #0x1
  442928:	str	x1, [x19, #256]
  44292c:	cmp	x22, #0x1
  442930:	strb	w21, [x19, x0]
  442934:	strb	w21, [x19, #264]
  442938:	mov	w21, #0x23                  	// #35
  44293c:	b.eq	442974 <_obstack_memory_used@@Base+0x8b0c>  // b.none
  442940:	mov	x22, #0x1                   	// #1
  442944:	cmp	x1, #0xff
  442948:	b.ne	442920 <_obstack_memory_used@@Base+0x8ab8>  // b.any
  44294c:	ldp	x3, x2, [x19, #272]
  442950:	strb	wzr, [x19, #255]
  442954:	mov	x0, x19
  442958:	blr	x3
  44295c:	ldr	x2, [x19, #320]
  442960:	mov	x1, #0x1                   	// #1
  442964:	mov	x0, #0x0                   	// #0
  442968:	add	x2, x2, x1
  44296c:	str	x2, [x19, #320]
  442970:	b	442928 <_obstack_memory_used@@Base+0x8ac0>
  442974:	ldr	w2, [x20, #16]
  442978:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  44297c:	add	x1, x1, #0xa50
  442980:	add	x20, sp, #0x60
  442984:	add	w2, w2, #0x1
  442988:	mov	x0, x20
  44298c:	bl	4023d0 <sprintf@plt>
  442990:	mov	x0, x20
  442994:	bl	402330 <strlen@plt>
  442998:	ldr	x1, [x19, #256]
  44299c:	cbz	x0, 4429fc <_obstack_memory_used@@Base+0x8b94>
  4429a0:	add	x23, x20, x0
  4429a4:	b	4429c8 <_obstack_memory_used@@Base+0x8b60>
  4429a8:	mov	x0, x1
  4429ac:	add	x1, x1, #0x1
  4429b0:	str	x1, [x19, #256]
  4429b4:	add	x20, x20, #0x1
  4429b8:	strb	w21, [x19, x0]
  4429bc:	cmp	x23, x20
  4429c0:	strb	w21, [x19, #264]
  4429c4:	b.eq	4429fc <_obstack_memory_used@@Base+0x8b94>  // b.none
  4429c8:	ldrb	w21, [x20]
  4429cc:	cmp	x1, #0xff
  4429d0:	b.ne	4429a8 <_obstack_memory_used@@Base+0x8b40>  // b.any
  4429d4:	ldp	x3, x2, [x19, #272]
  4429d8:	strb	wzr, [x19, #255]
  4429dc:	mov	x0, x19
  4429e0:	blr	x3
  4429e4:	ldr	x2, [x19, #320]
  4429e8:	mov	x1, #0x1                   	// #1
  4429ec:	mov	x0, #0x0                   	// #0
  4429f0:	add	x2, x2, x1
  4429f4:	str	x2, [x19, #320]
  4429f8:	b	4429b0 <_obstack_memory_used@@Base+0x8b48>
  4429fc:	cmp	x1, #0xff
  442a00:	b.eq	443260 <_obstack_memory_used@@Base+0x93f8>  // b.none
  442a04:	add	x22, x1, #0x1
  442a08:	str	x22, [x19, #256]
  442a0c:	mov	w0, #0x7d                  	// #125
  442a10:	strb	w0, [x19, x1]
  442a14:	strb	w0, [x19, #264]
  442a18:	ldp	x21, x22, [sp, #32]
  442a1c:	ldp	x23, x24, [sp, #48]
  442a20:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442a24:	ldr	x2, [x20, #8]
  442a28:	mov	w1, w21
  442a2c:	mov	x0, x19
  442a30:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442a34:	ldr	x1, [x19, #256]
  442a38:	add	x0, x1, #0x1
  442a3c:	cmp	x1, #0xff
  442a40:	b.ne	442a68 <_obstack_memory_used@@Base+0x8c00>  // b.any
  442a44:	ldp	x3, x2, [x19, #272]
  442a48:	strb	wzr, [x19, #255]
  442a4c:	mov	x0, x19
  442a50:	blr	x3
  442a54:	ldr	x2, [x19, #320]
  442a58:	mov	x0, #0x1                   	// #1
  442a5c:	mov	x1, #0x0                   	// #0
  442a60:	add	x2, x2, x0
  442a64:	str	x2, [x19, #320]
  442a68:	str	x0, [x19, #256]
  442a6c:	mov	w0, #0x29                  	// #41
  442a70:	strb	w0, [x19, x1]
  442a74:	strb	w0, [x19, #264]
  442a78:	ldp	x21, x22, [sp, #32]
  442a7c:	ldp	x23, x24, [sp, #48]
  442a80:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442a84:	ldr	x2, [x20, #8]
  442a88:	mov	w1, w21
  442a8c:	mov	x0, x19
  442a90:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442a94:	ldp	x21, x22, [sp, #32]
  442a98:	ldp	x23, x24, [sp, #48]
  442a9c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442aa0:	ldr	x2, [x20, #8]
  442aa4:	mov	w1, w21
  442aa8:	mov	x0, x19
  442aac:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442ab0:	ldp	x21, x22, [sp, #32]
  442ab4:	ldp	x23, x24, [sp, #48]
  442ab8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442abc:	ldr	x2, [x20, #8]
  442ac0:	mov	w1, w21
  442ac4:	mov	x0, x19
  442ac8:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  442acc:	add	x22, x22, #0xad8
  442ad0:	mov	w23, #0x2d                  	// #45
  442ad4:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442ad8:	add	x24, x22, #0x4
  442adc:	ldr	x1, [x19, #256]
  442ae0:	b	442b08 <_obstack_memory_used@@Base+0x8ca0>
  442ae4:	mov	x0, x1
  442ae8:	add	x1, x1, #0x1
  442aec:	str	x1, [x19, #256]
  442af0:	add	x22, x22, #0x1
  442af4:	strb	w23, [x19, x0]
  442af8:	cmp	x24, x22
  442afc:	strb	w23, [x19, #264]
  442b00:	b.eq	442b70 <_obstack_memory_used@@Base+0x8d08>  // b.none
  442b04:	ldrb	w23, [x22]
  442b08:	cmp	x1, #0xff
  442b0c:	b.ne	442ae4 <_obstack_memory_used@@Base+0x8c7c>  // b.any
  442b10:	ldp	x3, x2, [x19, #272]
  442b14:	strb	wzr, [x19, #255]
  442b18:	mov	x0, x19
  442b1c:	blr	x3
  442b20:	ldr	x2, [x19, #320]
  442b24:	mov	x1, #0x1                   	// #1
  442b28:	mov	x0, #0x0                   	// #0
  442b2c:	add	x2, x2, x1
  442b30:	str	x2, [x19, #320]
  442b34:	b	442aec <_obstack_memory_used@@Base+0x8c84>
  442b38:	ldr	x2, [x20, #8]
  442b3c:	mov	w1, w21
  442b40:	mov	x0, x19
  442b44:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442b48:	ldp	x21, x22, [sp, #32]
  442b4c:	ldp	x23, x24, [sp, #48]
  442b50:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442b54:	ldr	x2, [x20, #8]
  442b58:	mov	w1, w21
  442b5c:	mov	x0, x19
  442b60:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442b64:	ldp	x21, x22, [sp, #32]
  442b68:	ldp	x23, x24, [sp, #48]
  442b6c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442b70:	ldr	x2, [x20, #16]
  442b74:	mov	w1, w21
  442b78:	mov	x0, x19
  442b7c:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442b80:	ldp	x21, x22, [sp, #32]
  442b84:	ldp	x23, x24, [sp, #48]
  442b88:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442b8c:	ldr	x2, [x20, #8]
  442b90:	mov	w1, w21
  442b94:	mov	x0, x19
  442b98:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442b9c:	ldp	x21, x22, [sp, #32]
  442ba0:	ldp	x23, x24, [sp, #48]
  442ba4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442ba8:	ldr	x2, [x20, #8]
  442bac:	mov	w1, w21
  442bb0:	mov	x0, x19
  442bb4:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442bb8:	ldp	x21, x22, [sp, #32]
  442bbc:	ldp	x23, x24, [sp, #48]
  442bc0:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442bc4:	ldr	x2, [x20, #8]
  442bc8:	mov	w1, w21
  442bcc:	mov	x0, x19
  442bd0:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442bd4:	ldp	x21, x22, [sp, #32]
  442bd8:	ldp	x23, x24, [sp, #48]
  442bdc:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442be0:	ldr	x2, [x20, #8]
  442be4:	mov	w1, w21
  442be8:	mov	x0, x19
  442bec:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442bf0:	ldp	x21, x22, [sp, #32]
  442bf4:	ldp	x23, x24, [sp, #48]
  442bf8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442bfc:	ldr	x2, [x20, #8]
  442c00:	mov	w1, w21
  442c04:	mov	x0, x19
  442c08:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442c0c:	ldp	x21, x22, [sp, #32]
  442c10:	ldp	x23, x24, [sp, #48]
  442c14:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442c18:	ldr	x1, [x19, #368]
  442c1c:	cbz	x1, 442c30 <_obstack_memory_used@@Base+0x8dc8>
  442c20:	ldr	x2, [x19, #288]
  442c24:	add	x0, sp, #0x60
  442c28:	stp	x2, x1, [sp, #96]
  442c2c:	str	x0, [x19, #288]
  442c30:	ldr	x2, [x20, #8]
  442c34:	ldr	w0, [x2]
  442c38:	cmp	w0, #0x4
  442c3c:	b.eq	443528 <_obstack_memory_used@@Base+0x96c0>  // b.none
  442c40:	mov	x0, x19
  442c44:	mov	w1, w21
  442c48:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442c4c:	ldr	x0, [x19, #368]
  442c50:	cbz	x0, 443944 <_obstack_memory_used@@Base+0x9adc>
  442c54:	ldr	x0, [sp, #96]
  442c58:	ldp	x21, x22, [sp, #32]
  442c5c:	ldp	x23, x24, [sp, #48]
  442c60:	str	x0, [x19, #288]
  442c64:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442c68:	ldr	x2, [x20, #8]
  442c6c:	mov	w1, w21
  442c70:	mov	x0, x19
  442c74:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442c78:	ldp	x21, x22, [sp, #32]
  442c7c:	ldp	x23, x24, [sp, #48]
  442c80:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442c84:	mov	x2, x20
  442c88:	mov	w1, w21
  442c8c:	mov	x0, x19
  442c90:	bl	4446a8 <_obstack_memory_used@@Base+0xa840>
  442c94:	b	4408dc <_obstack_memory_used@@Base+0x6a74>
  442c98:	ldp	x21, x22, [sp, #32]
  442c9c:	ldp	x23, x24, [sp, #48]
  442ca0:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442ca4:	ldp	x21, x22, [sp, #32]
  442ca8:	ldp	x23, x24, [sp, #48]
  442cac:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442cb0:	ldp	x21, x22, [sp, #32]
  442cb4:	ldp	x23, x24, [sp, #48]
  442cb8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442cbc:	ldp	x21, x22, [sp, #32]
  442cc0:	ldp	x23, x24, [sp, #48]
  442cc4:	ldp	x25, x26, [sp, #64]
  442cc8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442ccc:	ldr	x2, [x20, #16]
  442cd0:	mov	x0, x19
  442cd4:	mov	w1, w21
  442cd8:	ldr	x20, [x19, #320]
  442cdc:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442ce0:	ldr	x0, [x19, #320]
  442ce4:	cmp	x0, x20
  442ce8:	b.eq	4438e0 <_obstack_memory_used@@Base+0x9a78>  // b.none
  442cec:	ldp	x21, x22, [sp, #32]
  442cf0:	ldp	x23, x24, [sp, #48]
  442cf4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442cf8:	ldr	x25, [x25, #8]
  442cfc:	cbz	x25, 443bd4 <_obstack_memory_used@@Base+0x9d6c>
  442d00:	add	x3, x3, #0x20
  442d04:	cmp	w24, #0x4
  442d08:	b.eq	4438a8 <_obstack_memory_used@@Base+0x9a40>  // b.none
  442d0c:	mov	x0, x4
  442d10:	b	441b44 <_obstack_memory_used@@Base+0x7cdc>
  442d14:	ldr	x25, [x20, #8]
  442d18:	cbnz	w24, 441684 <_obstack_memory_used@@Base+0x781c>
  442d1c:	ldp	x21, x22, [sp, #32]
  442d20:	ldp	x23, x24, [sp, #48]
  442d24:	ldp	x25, x26, [sp, #64]
  442d28:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442d2c:	mov	x20, x0
  442d30:	b	440a38 <_obstack_memory_used@@Base+0x6bd0>
  442d34:	add	x21, x20, x22
  442d38:	cmp	x21, x20
  442d3c:	b.ls	444184 <_obstack_memory_used@@Base+0xa31c>  // b.plast
  442d40:	mov	w23, #0x5f                  	// #95
  442d44:	b	442d94 <_obstack_memory_used@@Base+0x8f2c>
  442d48:	ldr	x1, [x19, #256]
  442d4c:	add	x0, x1, #0x1
  442d50:	cmp	x1, #0xff
  442d54:	b.ne	442d7c <_obstack_memory_used@@Base+0x8f14>  // b.any
  442d58:	ldp	x3, x2, [x19, #272]
  442d5c:	strb	wzr, [x19, #255]
  442d60:	mov	x0, x19
  442d64:	blr	x3
  442d68:	ldr	x2, [x19, #320]
  442d6c:	mov	x0, #0x1                   	// #1
  442d70:	mov	x1, #0x0                   	// #0
  442d74:	add	x2, x2, x0
  442d78:	str	x2, [x19, #320]
  442d7c:	str	x0, [x19, #256]
  442d80:	strb	w22, [x19, x1]
  442d84:	strb	w22, [x19, #264]
  442d88:	add	x20, x20, #0x1
  442d8c:	cmp	x21, x20
  442d90:	b.ls	443148 <_obstack_memory_used@@Base+0x92e0>  // b.plast
  442d94:	sub	x0, x21, x20
  442d98:	ldrb	w22, [x20]
  442d9c:	cmp	x0, #0x3
  442da0:	b.le	442d48 <_obstack_memory_used@@Base+0x8ee0>
  442da4:	cmp	w22, #0x5f
  442da8:	b.ne	442d48 <_obstack_memory_used@@Base+0x8ee0>  // b.any
  442dac:	ldrb	w0, [x20, #1]
  442db0:	cmp	w0, #0x5f
  442db4:	b.ne	442d48 <_obstack_memory_used@@Base+0x8ee0>  // b.any
  442db8:	ldrb	w0, [x20, #2]
  442dbc:	cmp	w0, #0x55
  442dc0:	b.ne	442d48 <_obstack_memory_used@@Base+0x8ee0>  // b.any
  442dc4:	add	x24, x20, #0x3
  442dc8:	cmp	x21, x24
  442dcc:	b.ls	442d48 <_obstack_memory_used@@Base+0x8ee0>  // b.plast
  442dd0:	mov	x2, #0x0                   	// #0
  442dd4:	b	442df0 <_obstack_memory_used@@Base+0x8f88>
  442dd8:	mov	w0, w1
  442ddc:	sxtw	x0, w0
  442de0:	add	x24, x24, #0x1
  442de4:	add	x2, x0, x2, lsl #4
  442de8:	cmp	x21, x24
  442dec:	b.eq	442d48 <_obstack_memory_used@@Base+0x8ee0>  // b.none
  442df0:	ldrb	w0, [x24]
  442df4:	sub	w1, w0, #0x30
  442df8:	and	w3, w1, #0xff
  442dfc:	cmp	w3, #0x9
  442e00:	b.ls	442dd8 <_obstack_memory_used@@Base+0x8f70>  // b.plast
  442e04:	sub	w1, w0, #0x41
  442e08:	and	w1, w1, #0xff
  442e0c:	cmp	w1, #0x5
  442e10:	b.hi	443e14 <_obstack_memory_used@@Base+0x9fac>  // b.pmore
  442e14:	sub	w0, w0, #0x37
  442e18:	b	442ddc <_obstack_memory_used@@Base+0x8f74>
  442e1c:	add	x1, x20, #0x8
  442e20:	mov	x0, x19
  442e24:	bl	43cea8 <_obstack_memory_used@@Base+0x3040>
  442e28:	mov	x2, x0
  442e2c:	cbz	x0, 440890 <_obstack_memory_used@@Base+0x6a28>
  442e30:	ldr	w1, [x0]
  442e34:	cmp	w1, #0x2f
  442e38:	b.eq	443e90 <_obstack_memory_used@@Base+0xa028>  // b.none
  442e3c:	ldr	x20, [x19, #288]
  442e40:	mov	w1, w21
  442e44:	mov	x0, x19
  442e48:	ldr	x3, [x20]
  442e4c:	str	x3, [x19, #288]
  442e50:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  442e54:	ldp	x21, x22, [sp, #32]
  442e58:	ldp	x23, x24, [sp, #48]
  442e5c:	str	x20, [x19, #288]
  442e60:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442e64:	ldr	x2, [x20, #8]
  442e68:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  442e6c:	add	x1, x1, #0xa50
  442e70:	add	x20, sp, #0x60
  442e74:	add	w2, w2, #0x1
  442e78:	mov	x0, x20
  442e7c:	bl	4023d0 <sprintf@plt>
  442e80:	mov	x0, x20
  442e84:	bl	402330 <strlen@plt>
  442e88:	cbz	x0, 44428c <_obstack_memory_used@@Base+0xa424>
  442e8c:	add	x22, x20, x0
  442e90:	ldr	x1, [x19, #256]
  442e94:	b	442eb8 <_obstack_memory_used@@Base+0x9050>
  442e98:	mov	x0, x1
  442e9c:	add	x1, x1, #0x1
  442ea0:	str	x1, [x19, #256]
  442ea4:	add	x20, x20, #0x1
  442ea8:	strb	w21, [x19, x0]
  442eac:	cmp	x22, x20
  442eb0:	strb	w21, [x19, #264]
  442eb4:	b.eq	443154 <_obstack_memory_used@@Base+0x92ec>  // b.none
  442eb8:	ldrb	w21, [x20]
  442ebc:	cmp	x1, #0xff
  442ec0:	b.ne	442e98 <_obstack_memory_used@@Base+0x9030>  // b.any
  442ec4:	ldp	x3, x2, [x19, #272]
  442ec8:	strb	wzr, [x19, #255]
  442ecc:	mov	x0, x19
  442ed0:	blr	x3
  442ed4:	ldr	x2, [x19, #320]
  442ed8:	mov	x1, #0x1                   	// #1
  442edc:	mov	x0, #0x0                   	// #0
  442ee0:	add	x2, x2, x1
  442ee4:	str	x2, [x19, #320]
  442ee8:	b	442ea0 <_obstack_memory_used@@Base+0x9038>
  442eec:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  442ef0:	add	x20, x20, #0xce0
  442ef4:	add	x22, x20, #0x4
  442ef8:	mov	w21, #0x74                  	// #116
  442efc:	b	442f24 <_obstack_memory_used@@Base+0x90bc>
  442f00:	mov	x0, x1
  442f04:	add	x1, x1, #0x1
  442f08:	str	x1, [x19, #256]
  442f0c:	add	x20, x20, #0x1
  442f10:	strb	w21, [x19, x0]
  442f14:	cmp	x20, x22
  442f18:	strb	w21, [x19, #264]
  442f1c:	b.eq	442f54 <_obstack_memory_used@@Base+0x90ec>  // b.none
  442f20:	ldrb	w21, [x20]
  442f24:	cmp	x1, #0xff
  442f28:	b.ne	442f00 <_obstack_memory_used@@Base+0x9098>  // b.any
  442f2c:	ldp	x3, x2, [x19, #272]
  442f30:	strb	wzr, [x19, #255]
  442f34:	mov	x0, x19
  442f38:	blr	x3
  442f3c:	ldr	x2, [x19, #320]
  442f40:	mov	x1, #0x1                   	// #1
  442f44:	mov	x0, #0x0                   	// #0
  442f48:	add	x2, x2, x1
  442f4c:	str	x2, [x19, #320]
  442f50:	b	442f08 <_obstack_memory_used@@Base+0x90a0>
  442f54:	ldp	x21, x22, [sp, #32]
  442f58:	ldp	x23, x24, [sp, #48]
  442f5c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  442f60:	mov	w2, w23
  442f64:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  442f68:	add	x1, x1, #0xa50
  442f6c:	add	x20, sp, #0x60
  442f70:	mov	x0, x20
  442f74:	bl	4023d0 <sprintf@plt>
  442f78:	mov	x0, x20
  442f7c:	bl	402330 <strlen@plt>
  442f80:	ldr	x1, [x19, #256]
  442f84:	cbz	x0, 442fe4 <_obstack_memory_used@@Base+0x917c>
  442f88:	add	x22, x20, x0
  442f8c:	b	442fb0 <_obstack_memory_used@@Base+0x9148>
  442f90:	mov	x0, x1
  442f94:	add	x1, x1, #0x1
  442f98:	str	x1, [x19, #256]
  442f9c:	add	x20, x20, #0x1
  442fa0:	strb	w21, [x19, x0]
  442fa4:	cmp	x20, x22
  442fa8:	strb	w21, [x19, #264]
  442fac:	b.eq	442fe4 <_obstack_memory_used@@Base+0x917c>  // b.none
  442fb0:	ldrb	w21, [x20]
  442fb4:	cmp	x1, #0xff
  442fb8:	b.ne	442f90 <_obstack_memory_used@@Base+0x9128>  // b.any
  442fbc:	ldp	x3, x2, [x19, #272]
  442fc0:	strb	wzr, [x19, #255]
  442fc4:	mov	x0, x19
  442fc8:	blr	x3
  442fcc:	ldr	x2, [x19, #320]
  442fd0:	mov	x1, #0x1                   	// #1
  442fd4:	mov	x0, #0x0                   	// #0
  442fd8:	add	x2, x2, x1
  442fdc:	str	x2, [x19, #320]
  442fe0:	b	442f98 <_obstack_memory_used@@Base+0x9130>
  442fe4:	add	x0, x1, #0x1
  442fe8:	cmp	x1, #0xff
  442fec:	b.ne	443014 <_obstack_memory_used@@Base+0x91ac>  // b.any
  442ff0:	ldp	x3, x2, [x19, #272]
  442ff4:	strb	wzr, [x19, #255]
  442ff8:	mov	x0, x19
  442ffc:	blr	x3
  443000:	ldr	x2, [x19, #320]
  443004:	mov	x0, #0x1                   	// #1
  443008:	mov	x1, #0x0                   	// #0
  44300c:	add	x2, x2, x0
  443010:	str	x2, [x19, #320]
  443014:	str	x0, [x19, #256]
  443018:	mov	w0, #0x7d                  	// #125
  44301c:	strb	w0, [x19, x1]
  443020:	strb	w0, [x19, #264]
  443024:	ldp	x21, x22, [sp, #32]
  443028:	ldp	x23, x24, [sp, #48]
  44302c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443030:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  443034:	add	x20, x20, #0xc48
  443038:	add	x22, x20, #0x6
  44303c:	mov	w21, #0x5f                  	// #95
  443040:	b	443068 <_obstack_memory_used@@Base+0x9200>
  443044:	mov	x0, x1
  443048:	add	x1, x1, #0x1
  44304c:	str	x1, [x19, #256]
  443050:	add	x20, x20, #0x1
  443054:	strb	w21, [x19, x0]
  443058:	cmp	x20, x22
  44305c:	strb	w21, [x19, #264]
  443060:	b.eq	443098 <_obstack_memory_used@@Base+0x9230>  // b.none
  443064:	ldrb	w21, [x20]
  443068:	cmp	x1, #0xff
  44306c:	b.ne	443044 <_obstack_memory_used@@Base+0x91dc>  // b.any
  443070:	ldp	x3, x2, [x19, #272]
  443074:	strb	wzr, [x19, #255]
  443078:	mov	x0, x19
  44307c:	blr	x3
  443080:	ldr	x2, [x19, #320]
  443084:	mov	x1, #0x1                   	// #1
  443088:	mov	x0, #0x0                   	// #0
  44308c:	add	x2, x2, x1
  443090:	str	x2, [x19, #320]
  443094:	b	44304c <_obstack_memory_used@@Base+0x91e4>
  443098:	ldp	x21, x22, [sp, #32]
  44309c:	ldp	x23, x24, [sp, #48]
  4430a0:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4430a4:	ldp	x21, x22, [sp, #32]
  4430a8:	ldp	x23, x24, [sp, #48]
  4430ac:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4430b0:	ldrsw	x22, [x0, #24]
  4430b4:	ldr	x20, [x0, #16]
  4430b8:	cbz	x22, 44416c <_obstack_memory_used@@Base+0xa304>
  4430bc:	add	x22, x20, x22
  4430c0:	ldr	x1, [x19, #256]
  4430c4:	b	4430e8 <_obstack_memory_used@@Base+0x9280>
  4430c8:	mov	x0, x1
  4430cc:	add	x1, x1, #0x1
  4430d0:	str	x1, [x19, #256]
  4430d4:	add	x20, x20, #0x1
  4430d8:	strb	w21, [x19, x0]
  4430dc:	cmp	x20, x22
  4430e0:	strb	w21, [x19, #264]
  4430e4:	b.eq	443130 <_obstack_memory_used@@Base+0x92c8>  // b.none
  4430e8:	ldrb	w21, [x20]
  4430ec:	cmp	x1, #0xff
  4430f0:	b.ne	4430c8 <_obstack_memory_used@@Base+0x9260>  // b.any
  4430f4:	ldp	x3, x2, [x19, #272]
  4430f8:	strb	wzr, [x19, #255]
  4430fc:	mov	x0, x19
  443100:	blr	x3
  443104:	ldr	x2, [x19, #320]
  443108:	mov	x1, #0x1                   	// #1
  44310c:	mov	x0, #0x0                   	// #0
  443110:	add	x2, x2, x1
  443114:	str	x2, [x19, #320]
  443118:	b	4430d0 <_obstack_memory_used@@Base+0x9268>
  44311c:	ldr	x1, [x19, #256]
  443120:	b	441338 <_obstack_memory_used@@Base+0x74d0>
  443124:	ldp	x21, x22, [sp, #32]
  443128:	ldp	x23, x24, [sp, #48]
  44312c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443130:	ldp	x21, x22, [sp, #32]
  443134:	ldp	x23, x24, [sp, #48]
  443138:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  44313c:	ldp	x21, x22, [sp, #32]
  443140:	ldp	x23, x24, [sp, #48]
  443144:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443148:	ldp	x21, x22, [sp, #32]
  44314c:	ldp	x23, x24, [sp, #48]
  443150:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443154:	ldp	x21, x22, [sp, #32]
  443158:	ldp	x23, x24, [sp, #48]
  44315c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443160:	ldr	x1, [x2, #8]
  443164:	ldr	w22, [x1, #28]
  443168:	cmp	w22, #0x6
  44316c:	b.hi	443204 <_obstack_memory_used@@Base+0x939c>  // b.pmore
  443170:	cbz	w22, 440954 <_obstack_memory_used@@Base+0x6aec>
  443174:	ldr	x1, [x20, #16]
  443178:	ldr	w1, [x1]
  44317c:	cbnz	w1, 440954 <_obstack_memory_used@@Base+0x6aec>
  443180:	cmp	w0, #0x3e
  443184:	b.eq	444508 <_obstack_memory_used@@Base+0xa6a0>  // b.none
  443188:	ldr	x2, [x20, #16]
  44318c:	mov	w1, w21
  443190:	mov	x0, x19
  443194:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  443198:	cmp	w22, #0x4
  44319c:	b.eq	4444e8 <_obstack_memory_used@@Base+0xa680>  // b.none
  4431a0:	b.hi	4443ac <_obstack_memory_used@@Base+0xa544>  // b.pmore
  4431a4:	cmp	w22, #0x2
  4431a8:	b.eq	444498 <_obstack_memory_used@@Base+0xa630>  // b.none
  4431ac:	cmp	w22, #0x3
  4431b0:	b.ne	4445e0 <_obstack_memory_used@@Base+0xa778>  // b.any
  4431b4:	ldr	x1, [x19, #256]
  4431b8:	cmp	x1, #0xff
  4431bc:	b.ne	4431e4 <_obstack_memory_used@@Base+0x937c>  // b.any
  4431c0:	ldp	x3, x2, [x19, #272]
  4431c4:	strb	wzr, [x19, #255]
  4431c8:	mov	x0, x19
  4431cc:	blr	x3
  4431d0:	str	xzr, [x19, #256]
  4431d4:	ldr	x0, [x19, #320]
  4431d8:	mov	x1, #0x0                   	// #0
  4431dc:	add	x0, x0, #0x1
  4431e0:	str	x0, [x19, #320]
  4431e4:	add	x0, x1, #0x1
  4431e8:	str	x0, [x19, #256]
  4431ec:	mov	w0, #0x6c                  	// #108
  4431f0:	strb	w0, [x19, x1]
  4431f4:	strb	w0, [x19, #264]
  4431f8:	ldp	x21, x22, [sp, #32]
  4431fc:	ldp	x23, x24, [sp, #48]
  443200:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443204:	cmp	w22, #0x7
  443208:	b.ne	440954 <_obstack_memory_used@@Base+0x6aec>  // b.any
  44320c:	ldr	x1, [x20, #16]
  443210:	ldr	w3, [x1]
  443214:	cbnz	w3, 440954 <_obstack_memory_used@@Base+0x6aec>
  443218:	ldr	w3, [x1, #16]
  44321c:	cmp	w0, #0x3d
  443220:	ccmp	w3, #0x1, #0x0, eq  // eq = none
  443224:	b.ne	440954 <_obstack_memory_used@@Base+0x6aec>  // b.any
  443228:	ldr	x0, [x1, #8]
  44322c:	ldrb	w0, [x0]
  443230:	cmp	w0, #0x30
  443234:	b.eq	4445ec <_obstack_memory_used@@Base+0xa784>  // b.none
  443238:	cmp	w0, #0x31
  44323c:	b.ne	440954 <_obstack_memory_used@@Base+0x6aec>  // b.any
  443240:	mov	x0, x19
  443244:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  443248:	mov	x2, #0x4                   	// #4
  44324c:	add	x1, x1, #0xca8
  443250:	bl	43c588 <_obstack_memory_used@@Base+0x2720>
  443254:	ldp	x21, x22, [sp, #32]
  443258:	ldp	x23, x24, [sp, #48]
  44325c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443260:	ldp	x3, x2, [x19, #272]
  443264:	strb	wzr, [x19, #255]
  443268:	mov	x0, x19
  44326c:	blr	x3
  443270:	ldr	x0, [x19, #320]
  443274:	mov	x1, #0x0                   	// #0
  443278:	add	x0, x0, #0x1
  44327c:	str	x0, [x19, #320]
  443280:	b	442a08 <_obstack_memory_used@@Base+0x8ba0>
  443284:	ldr	x0, [x22, #8]
  443288:	ldr	x23, [x0]
  44328c:	ldrb	w0, [x23]
  443290:	subs	w1, w0, #0x61
  443294:	b.ne	4432a8 <_obstack_memory_used@@Base+0x9440>  // b.any
  443298:	ldrb	w1, [x23, #1]
  44329c:	subs	w1, w1, #0x64
  4432a0:	b.ne	4432a8 <_obstack_memory_used@@Base+0x9440>  // b.any
  4432a4:	ldrb	w1, [x23, #2]
  4432a8:	ldr	w2, [x20]
  4432ac:	cbnz	w1, 4432b8 <_obstack_memory_used@@Base+0x9450>
  4432b0:	cmp	w2, #0x3
  4432b4:	b.eq	4442b0 <_obstack_memory_used@@Base+0xa448>  // b.none
  4432b8:	cmp	w2, #0x39
  4432bc:	b.eq	444358 <_obstack_memory_used@@Base+0xa4f0>  // b.none
  4432c0:	cmp	w0, #0x73
  4432c4:	b.ne	443394 <_obstack_memory_used@@Base+0x952c>  // b.any
  4432c8:	ldrb	w1, [x23, #1]
  4432cc:	cmp	w1, #0x5a
  4432d0:	b.ne	4433e0 <_obstack_memory_used@@Base+0x9578>  // b.any
  4432d4:	ldrb	w3, [x23, #2]
  4432d8:	cbnz	w3, 4433e0 <_obstack_memory_used@@Base+0x9578>
  4432dc:	mov	x1, x20
  4432e0:	mov	x0, x19
  4432e4:	bl	43ced8 <_obstack_memory_used@@Base+0x3070>
  4432e8:	cbnz	x0, 443304 <_obstack_memory_used@@Base+0x949c>
  4432ec:	b	443310 <_obstack_memory_used@@Base+0x94a8>
  4432f0:	ldr	x1, [x0, #8]
  4432f4:	cbz	x1, 443310 <_obstack_memory_used@@Base+0x94a8>
  4432f8:	ldr	x0, [x0, #16]
  4432fc:	add	w3, w3, #0x1
  443300:	cbz	x0, 443310 <_obstack_memory_used@@Base+0x94a8>
  443304:	ldr	w1, [x0]
  443308:	cmp	w1, #0x2f
  44330c:	b.eq	4432f0 <_obstack_memory_used@@Base+0x9488>  // b.none
  443310:	mov	w2, w3
  443314:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  443318:	add	x1, x1, #0xa50
  44331c:	add	x20, sp, #0x60
  443320:	mov	x0, x20
  443324:	bl	4023d0 <sprintf@plt>
  443328:	mov	x0, x20
  44332c:	bl	402330 <strlen@plt>
  443330:	cbz	x0, 444464 <_obstack_memory_used@@Base+0xa5fc>
  443334:	add	x22, x20, x0
  443338:	ldr	x1, [x19, #256]
  44333c:	b	443360 <_obstack_memory_used@@Base+0x94f8>
  443340:	mov	x0, x1
  443344:	add	x1, x1, #0x1
  443348:	str	x1, [x19, #256]
  44334c:	add	x20, x20, #0x1
  443350:	strb	w21, [x19, x0]
  443354:	cmp	x20, x22
  443358:	strb	w21, [x19, #264]
  44335c:	b.eq	444268 <_obstack_memory_used@@Base+0xa400>  // b.none
  443360:	ldrb	w21, [x20]
  443364:	cmp	x1, #0xff
  443368:	b.ne	443340 <_obstack_memory_used@@Base+0x94d8>  // b.any
  44336c:	ldp	x3, x2, [x19, #272]
  443370:	strb	wzr, [x19, #255]
  443374:	mov	x0, x19
  443378:	blr	x3
  44337c:	ldr	x2, [x19, #320]
  443380:	mov	x1, #0x1                   	// #1
  443384:	mov	x0, #0x0                   	// #0
  443388:	add	x2, x2, x1
  44338c:	str	x2, [x19, #320]
  443390:	b	443348 <_obstack_memory_used@@Base+0x94e0>
  443394:	mov	x0, x19
  443398:	mov	x2, x22
  44339c:	mov	w1, w21
  4433a0:	bl	4457b0 <_obstack_memory_used@@Base+0xb948>
  4433a4:	ldrb	w0, [x23]
  4433a8:	cmp	w0, #0x67
  4433ac:	b.ne	443470 <_obstack_memory_used@@Base+0x9608>  // b.any
  4433b0:	ldrb	w1, [x23, #1]
  4433b4:	cmp	w1, #0x73
  4433b8:	b.ne	443470 <_obstack_memory_used@@Base+0x9608>  // b.any
  4433bc:	ldrb	w1, [x23, #2]
  4433c0:	cbnz	w1, 443470 <_obstack_memory_used@@Base+0x9608>
  4433c4:	mov	w1, w21
  4433c8:	mov	x2, x20
  4433cc:	mov	x0, x19
  4433d0:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4433d4:	ldp	x21, x22, [sp, #32]
  4433d8:	ldp	x23, x24, [sp, #48]
  4433dc:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4433e0:	cmp	w0, #0x73
  4433e4:	b.ne	443394 <_obstack_memory_used@@Base+0x952c>  // b.any
  4433e8:	ldrb	w0, [x23, #1]
  4433ec:	cmp	w0, #0x50
  4433f0:	b.ne	443394 <_obstack_memory_used@@Base+0x952c>  // b.any
  4433f4:	ldrb	w0, [x23, #2]
  4433f8:	mov	w3, #0x0                   	// #0
  4433fc:	cbz	w0, 443410 <_obstack_memory_used@@Base+0x95a8>
  443400:	b	443394 <_obstack_memory_used@@Base+0x952c>
  443404:	add	w3, w3, #0x1
  443408:	ldr	x20, [x20, #16]
  44340c:	cbz	x20, 443ed4 <_obstack_memory_used@@Base+0xa06c>
  443410:	ldr	w0, [x20]
  443414:	cmp	w0, #0x2f
  443418:	b.ne	443ed4 <_obstack_memory_used@@Base+0xa06c>  // b.any
  44341c:	ldr	x0, [x20, #8]
  443420:	cbz	x0, 443ed4 <_obstack_memory_used@@Base+0xa06c>
  443424:	ldr	w1, [x0]
  443428:	cmp	w1, #0x4b
  44342c:	b.ne	443404 <_obstack_memory_used@@Base+0x959c>  // b.any
  443430:	ldr	x1, [x0, #8]
  443434:	mov	x0, x19
  443438:	bl	43ced8 <_obstack_memory_used@@Base+0x3070>
  44343c:	mov	w1, #0x0                   	// #0
  443440:	cbnz	x0, 44345c <_obstack_memory_used@@Base+0x95f4>
  443444:	b	443468 <_obstack_memory_used@@Base+0x9600>
  443448:	ldr	x2, [x0, #8]
  44344c:	cbz	x2, 443468 <_obstack_memory_used@@Base+0x9600>
  443450:	ldr	x0, [x0, #16]
  443454:	add	w1, w1, #0x1
  443458:	cbz	x0, 443468 <_obstack_memory_used@@Base+0x9600>
  44345c:	ldr	w2, [x0]
  443460:	cmp	w2, #0x2f
  443464:	b.eq	443448 <_obstack_memory_used@@Base+0x95e0>  // b.none
  443468:	add	w3, w3, w1
  44346c:	b	443408 <_obstack_memory_used@@Base+0x95a0>
  443470:	cmp	w0, #0x73
  443474:	b.ne	442404 <_obstack_memory_used@@Base+0x859c>  // b.any
  443478:	ldrb	w0, [x23, #1]
  44347c:	cmp	w0, #0x74
  443480:	b.ne	442404 <_obstack_memory_used@@Base+0x859c>  // b.any
  443484:	ldrb	w0, [x23, #2]
  443488:	cbnz	w0, 442404 <_obstack_memory_used@@Base+0x859c>
  44348c:	ldr	x1, [x19, #256]
  443490:	cmp	x1, #0xff
  443494:	b.ne	4434b8 <_obstack_memory_used@@Base+0x9650>  // b.any
  443498:	ldp	x3, x2, [x19, #272]
  44349c:	strb	wzr, [x19, #255]
  4434a0:	mov	x0, x19
  4434a4:	blr	x3
  4434a8:	ldr	x0, [x19, #320]
  4434ac:	mov	x1, #0x0                   	// #0
  4434b0:	add	x0, x0, #0x1
  4434b4:	str	x0, [x19, #320]
  4434b8:	add	x0, x1, #0x1
  4434bc:	str	x0, [x19, #256]
  4434c0:	mov	w0, #0x28                  	// #40
  4434c4:	strb	w0, [x19, x1]
  4434c8:	strb	w0, [x19, #264]
  4434cc:	mov	w1, w21
  4434d0:	mov	x2, x20
  4434d4:	mov	x0, x19
  4434d8:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4434dc:	ldr	x1, [x19, #256]
  4434e0:	cmp	x1, #0xff
  4434e4:	b.ne	443508 <_obstack_memory_used@@Base+0x96a0>  // b.any
  4434e8:	ldp	x3, x2, [x19, #272]
  4434ec:	strb	wzr, [x19, #255]
  4434f0:	mov	x0, x19
  4434f4:	blr	x3
  4434f8:	ldr	x0, [x19, #320]
  4434fc:	mov	x1, #0x0                   	// #0
  443500:	add	x0, x0, #0x1
  443504:	str	x0, [x19, #320]
  443508:	add	x0, x1, #0x1
  44350c:	str	x0, [x19, #256]
  443510:	mov	w0, #0x29                  	// #41
  443514:	strb	w0, [x19, x1]
  443518:	strb	w0, [x19, #264]
  44351c:	ldp	x21, x22, [sp, #32]
  443520:	ldp	x23, x24, [sp, #48]
  443524:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443528:	ldr	x2, [x2, #8]
  44352c:	mov	x0, x19
  443530:	mov	w1, w21
  443534:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  443538:	ldr	x0, [x19, #368]
  44353c:	cbz	x0, 443548 <_obstack_memory_used@@Base+0x96e0>
  443540:	ldr	x0, [sp, #96]
  443544:	str	x0, [x19, #288]
  443548:	ldr	x1, [x19, #256]
  44354c:	ldrb	w2, [x19, #264]
  443550:	mov	x0, x1
  443554:	cmp	w2, #0x3c
  443558:	b.eq	443fb0 <_obstack_memory_used@@Base+0xa148>  // b.none
  44355c:	add	x1, x0, #0x1
  443560:	cmp	x0, #0xff
  443564:	b.ne	443590 <_obstack_memory_used@@Base+0x9728>  // b.any
  443568:	ldp	x3, x2, [x19, #272]
  44356c:	strb	wzr, [x19, #255]
  443570:	mov	x1, x0
  443574:	mov	x0, x19
  443578:	blr	x3
  44357c:	ldr	x2, [x19, #320]
  443580:	mov	x1, #0x1                   	// #1
  443584:	mov	x0, #0x0                   	// #0
  443588:	add	x2, x2, x1
  44358c:	str	x2, [x19, #320]
  443590:	str	x1, [x19, #256]
  443594:	mov	w2, #0x3c                  	// #60
  443598:	strb	w2, [x19, x0]
  44359c:	mov	w1, w21
  4435a0:	strb	w2, [x19, #264]
  4435a4:	mov	x0, x19
  4435a8:	ldr	x2, [x20, #8]
  4435ac:	ldr	x2, [x2, #16]
  4435b0:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4435b4:	ldrb	w0, [x19, #264]
  4435b8:	cmp	w0, #0x3e
  4435bc:	b.eq	443ff4 <_obstack_memory_used@@Base+0xa18c>  // b.none
  4435c0:	ldr	x0, [x19, #256]
  4435c4:	add	x1, x0, #0x1
  4435c8:	cmp	x0, #0xff
  4435cc:	b.ne	4435f8 <_obstack_memory_used@@Base+0x9790>  // b.any
  4435d0:	ldp	x3, x2, [x19, #272]
  4435d4:	strb	wzr, [x19, #255]
  4435d8:	mov	x1, x0
  4435dc:	mov	x0, x19
  4435e0:	blr	x3
  4435e4:	ldr	x2, [x19, #320]
  4435e8:	mov	x1, #0x1                   	// #1
  4435ec:	mov	x0, #0x0                   	// #0
  4435f0:	add	x2, x2, x1
  4435f4:	str	x2, [x19, #320]
  4435f8:	str	x1, [x19, #256]
  4435fc:	mov	w1, #0x3e                  	// #62
  443600:	strb	w1, [x19, x0]
  443604:	strb	w1, [x19, #264]
  443608:	ldp	x21, x22, [sp, #32]
  44360c:	ldp	x23, x24, [sp, #48]
  443610:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443614:	mov	x2, x20
  443618:	mov	w1, w21
  44361c:	mov	x0, x19
  443620:	bl	4446a8 <_obstack_memory_used@@Base+0xa840>
  443624:	b	440b08 <_obstack_memory_used@@Base+0x6ca0>
  443628:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  44362c:	add	x24, x24, #0xc38
  443630:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  443634:	add	x24, x24, #0x5
  443638:	add	x22, x22, #0xc39
  44363c:	mov	w23, #0x5f                  	// #95
  443640:	ldr	x1, [x19, #256]
  443644:	b	443668 <_obstack_memory_used@@Base+0x9800>
  443648:	mov	x0, x1
  44364c:	add	x1, x1, #0x1
  443650:	str	x1, [x19, #256]
  443654:	cmp	x24, x22
  443658:	strb	w23, [x19, x0]
  44365c:	strb	w23, [x19, #264]
  443660:	b.eq	4412c8 <_obstack_memory_used@@Base+0x7460>  // b.none
  443664:	ldrb	w23, [x22], #1
  443668:	cmp	x1, #0xff
  44366c:	b.ne	443648 <_obstack_memory_used@@Base+0x97e0>  // b.any
  443670:	ldp	x3, x2, [x19, #272]
  443674:	strb	wzr, [x19, #255]
  443678:	mov	x0, x19
  44367c:	blr	x3
  443680:	ldr	x2, [x19, #320]
  443684:	mov	x1, #0x1                   	// #1
  443688:	mov	x0, #0x0                   	// #0
  44368c:	add	x2, x2, x1
  443690:	str	x2, [x19, #320]
  443694:	b	443650 <_obstack_memory_used@@Base+0x97e8>
  443698:	mov	x23, #0x0                   	// #0
  44369c:	mov	w22, #0x3a                  	// #58
  4436a0:	ldr	x1, [x19, #256]
  4436a4:	b	4436c4 <_obstack_memory_used@@Base+0x985c>
  4436a8:	mov	x0, x1
  4436ac:	add	x1, x1, #0x1
  4436b0:	str	x1, [x19, #256]
  4436b4:	strb	w22, [x19, x0]
  4436b8:	strb	w22, [x19, #264]
  4436bc:	cbnz	x23, 440aac <_obstack_memory_used@@Base+0x6c44>
  4436c0:	mov	x23, #0x1                   	// #1
  4436c4:	cmp	x1, #0xff
  4436c8:	b.ne	4436a8 <_obstack_memory_used@@Base+0x9840>  // b.any
  4436cc:	ldp	x3, x2, [x19, #272]
  4436d0:	strb	wzr, [x19, #255]
  4436d4:	mov	x0, x19
  4436d8:	blr	x3
  4436dc:	ldr	x2, [x19, #320]
  4436e0:	mov	x1, #0x1                   	// #1
  4436e4:	mov	x0, #0x0                   	// #0
  4436e8:	add	x2, x2, x1
  4436ec:	str	x2, [x19, #320]
  4436f0:	b	4436b0 <_obstack_memory_used@@Base+0x9848>
  4436f4:	ldr	x1, [x19, #256]
  4436f8:	cmp	x1, #0xff
  4436fc:	b.ne	443720 <_obstack_memory_used@@Base+0x98b8>  // b.any
  443700:	ldp	x3, x2, [x19, #272]
  443704:	strb	wzr, [x19, #255]
  443708:	mov	x0, x19
  44370c:	blr	x3
  443710:	ldr	x0, [x19, #320]
  443714:	mov	x1, #0x0                   	// #0
  443718:	add	x0, x0, #0x1
  44371c:	str	x0, [x19, #320]
  443720:	add	x0, x1, #0x1
  443724:	str	x0, [x19, #256]
  443728:	mov	w0, #0x5b                  	// #91
  44372c:	strb	w0, [x19, x1]
  443730:	strb	w0, [x19, #264]
  443734:	mov	w1, w21
  443738:	mov	x0, x19
  44373c:	ldr	x2, [x20, #16]
  443740:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  443744:	ldr	x1, [x19, #256]
  443748:	cmp	x1, #0xff
  44374c:	b.ne	443770 <_obstack_memory_used@@Base+0x9908>  // b.any
  443750:	ldp	x3, x2, [x19, #272]
  443754:	strb	wzr, [x19, #255]
  443758:	mov	x0, x19
  44375c:	blr	x3
  443760:	ldr	x0, [x19, #320]
  443764:	mov	x1, #0x0                   	// #0
  443768:	add	x0, x0, #0x1
  44376c:	str	x0, [x19, #320]
  443770:	add	x0, x1, #0x1
  443774:	str	x0, [x19, #256]
  443778:	mov	w0, #0x5d                  	// #93
  44377c:	strb	w0, [x19, x1]
  443780:	strb	w0, [x19, #264]
  443784:	ldp	x21, x22, [sp, #32]
  443788:	ldp	x23, x24, [sp, #48]
  44378c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443790:	ldr	x0, [x19, #256]
  443794:	cmp	x0, #0xff
  443798:	b.ne	4437c0 <_obstack_memory_used@@Base+0x9958>  // b.any
  44379c:	ldp	x3, x2, [x19, #272]
  4437a0:	strb	wzr, [x19, #255]
  4437a4:	mov	x1, x0
  4437a8:	mov	x0, x19
  4437ac:	blr	x3
  4437b0:	ldr	x1, [x19, #320]
  4437b4:	mov	x0, #0x0                   	// #0
  4437b8:	add	x1, x1, #0x1
  4437bc:	str	x1, [x19, #320]
  4437c0:	add	x1, x0, #0x1
  4437c4:	str	x1, [x19, #256]
  4437c8:	mov	w2, #0x20                  	// #32
  4437cc:	strb	w2, [x19, x0]
  4437d0:	strb	w2, [x19, #264]
  4437d4:	b	441cf8 <_obstack_memory_used@@Base+0x7e90>
  4437d8:	ldr	x0, [x19, #256]
  4437dc:	cmp	x0, #0xff
  4437e0:	b.ne	443808 <_obstack_memory_used@@Base+0x99a0>  // b.any
  4437e4:	ldp	x3, x2, [x19, #272]
  4437e8:	strb	wzr, [x19, #255]
  4437ec:	mov	x1, x0
  4437f0:	mov	x0, x19
  4437f4:	blr	x3
  4437f8:	ldr	x1, [x19, #320]
  4437fc:	mov	x0, #0x0                   	// #0
  443800:	add	x1, x1, #0x1
  443804:	str	x1, [x19, #320]
  443808:	add	x1, x0, #0x1
  44380c:	str	x1, [x19, #256]
  443810:	mov	w2, #0x20                  	// #32
  443814:	strb	w2, [x19, x0]
  443818:	strb	w2, [x19, #264]
  44381c:	b	441c98 <_obstack_memory_used@@Base+0x7e30>
  443820:	add	x2, x20, #0x10
  443824:	mov	w1, w22
  443828:	mov	x0, x19
  44382c:	bl	444ea8 <_obstack_memory_used@@Base+0xb040>
  443830:	ldr	x2, [x20, #8]
  443834:	cbz	x2, 444060 <_obstack_memory_used@@Base+0xa1f8>
  443838:	mov	w1, w22
  44383c:	mov	x0, x19
  443840:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  443844:	ldp	x21, x22, [sp, #32]
  443848:	ldp	x23, x24, [sp, #48]
  44384c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443850:	ldp	x3, x2, [x19, #272]
  443854:	strb	wzr, [x19, #255]
  443858:	mov	x0, x19
  44385c:	blr	x3
  443860:	ldr	x0, [x19, #320]
  443864:	mov	w1, #0x29                  	// #41
  443868:	strb	w1, [x19]
  44386c:	strb	w1, [x19, #264]
  443870:	mov	x1, #0x1                   	// #1
  443874:	add	x0, x0, x1
  443878:	str	x1, [x19, #256]
  44387c:	str	x0, [x19, #320]
  443880:	ldr	w0, [x20]
  443884:	cmp	w0, #0x3e
  443888:	b.ne	4409d4 <_obstack_memory_used@@Base+0x6b6c>  // b.any
  44388c:	ldr	x1, [x19, #256]
  443890:	mov	w0, #0x2d                  	// #45
  443894:	add	x2, x1, #0x1
  443898:	str	x2, [x19, #256]
  44389c:	strb	w0, [x19, x1]
  4438a0:	strb	w0, [x19, #264]
  4438a4:	b	4409d4 <_obstack_memory_used@@Base+0x6b6c>
  4438a8:	ldp	x21, x22, [sp, #32]
  4438ac:	ldp	x23, x24, [sp, #48]
  4438b0:	ldp	x25, x26, [sp, #64]
  4438b4:	str	x4, [x19, #296]
  4438b8:	str	w1, [x19, #304]
  4438bc:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4438c0:	ldp	x21, x22, [sp, #32]
  4438c4:	ldp	x23, x24, [sp, #48]
  4438c8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4438cc:	ldp	x21, x22, [sp, #32]
  4438d0:	ldp	x23, x24, [sp, #48]
  4438d4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4438d8:	mov	w22, #0x0                   	// #0
  4438dc:	b	440a38 <_obstack_memory_used@@Base+0x6bd0>
  4438e0:	ldr	x0, [x19, #256]
  4438e4:	cmp	x0, x22
  4438e8:	b.eq	44409c <_obstack_memory_used@@Base+0xa234>  // b.none
  4438ec:	ldp	x21, x22, [sp, #32]
  4438f0:	ldp	x23, x24, [sp, #48]
  4438f4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4438f8:	ldr	x2, [x20, #8]
  4438fc:	mov	w1, w21
  443900:	mov	x0, x19
  443904:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  443908:	ldp	x21, x22, [sp, #32]
  44390c:	ldp	x23, x24, [sp, #48]
  443910:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443914:	cmp	x3, #0xff
  443918:	b.ne	44388c <_obstack_memory_used@@Base+0x9a24>  // b.any
  44391c:	ldp	x4, x2, [x19, #272]
  443920:	strb	wzr, [x19, #255]
  443924:	mov	x0, x19
  443928:	mov	x1, x3
  44392c:	blr	x4
  443930:	str	xzr, [x19, #256]
  443934:	ldr	x0, [x19, #320]
  443938:	add	x0, x0, #0x1
  44393c:	str	x0, [x19, #320]
  443940:	b	44388c <_obstack_memory_used@@Base+0x9a24>
  443944:	ldp	x21, x22, [sp, #32]
  443948:	ldp	x23, x24, [sp, #48]
  44394c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443950:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  443954:	add	x24, x24, #0xa40
  443958:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  44395c:	add	x24, x24, #0xd
  443960:	add	x22, x22, #0xa41
  443964:	mov	w20, #0x7b                  	// #123
  443968:	ldr	x1, [x19, #256]
  44396c:	b	443990 <_obstack_memory_used@@Base+0x9b28>
  443970:	mov	x0, x1
  443974:	add	x1, x1, #0x1
  443978:	str	x1, [x19, #256]
  44397c:	cmp	x24, x22
  443980:	strb	w20, [x19, x0]
  443984:	strb	w20, [x19, #264]
  443988:	b.eq	4439c0 <_obstack_memory_used@@Base+0x9b58>  // b.none
  44398c:	ldrb	w20, [x22], #1
  443990:	cmp	x1, #0xff
  443994:	b.ne	443970 <_obstack_memory_used@@Base+0x9b08>  // b.any
  443998:	ldp	x3, x2, [x19, #272]
  44399c:	strb	wzr, [x19, #255]
  4439a0:	mov	x0, x19
  4439a4:	blr	x3
  4439a8:	ldr	x2, [x19, #320]
  4439ac:	mov	x1, #0x1                   	// #1
  4439b0:	mov	x0, #0x0                   	// #0
  4439b4:	add	x2, x2, x1
  4439b8:	str	x2, [x19, #320]
  4439bc:	b	443978 <_obstack_memory_used@@Base+0x9b10>
  4439c0:	ldr	w2, [x23, #16]
  4439c4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  4439c8:	add	x1, x1, #0xa50
  4439cc:	add	x20, sp, #0x60
  4439d0:	add	w2, w2, #0x1
  4439d4:	mov	x0, x20
  4439d8:	bl	4023d0 <sprintf@plt>
  4439dc:	mov	x0, x20
  4439e0:	bl	402330 <strlen@plt>
  4439e4:	ldr	x1, [x19, #256]
  4439e8:	cbz	x0, 443a48 <_obstack_memory_used@@Base+0x9be0>
  4439ec:	add	x24, x20, x0
  4439f0:	b	443a14 <_obstack_memory_used@@Base+0x9bac>
  4439f4:	mov	x0, x1
  4439f8:	add	x1, x1, #0x1
  4439fc:	str	x1, [x19, #256]
  443a00:	add	x20, x20, #0x1
  443a04:	strb	w22, [x19, x0]
  443a08:	cmp	x24, x20
  443a0c:	strb	w22, [x19, #264]
  443a10:	b.eq	443a48 <_obstack_memory_used@@Base+0x9be0>  // b.none
  443a14:	ldrb	w22, [x20]
  443a18:	cmp	x1, #0xff
  443a1c:	b.ne	4439f4 <_obstack_memory_used@@Base+0x9b8c>  // b.any
  443a20:	ldp	x3, x2, [x19, #272]
  443a24:	strb	wzr, [x19, #255]
  443a28:	mov	x0, x19
  443a2c:	blr	x3
  443a30:	ldr	x2, [x19, #320]
  443a34:	mov	x1, #0x1                   	// #1
  443a38:	mov	x0, #0x0                   	// #0
  443a3c:	add	x2, x2, x1
  443a40:	str	x2, [x19, #320]
  443a44:	b	4439fc <_obstack_memory_used@@Base+0x9b94>
  443a48:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  443a4c:	add	x20, x20, #0xa58
  443a50:	add	x24, x20, #0x3
  443a54:	mov	w22, #0x7d                  	// #125
  443a58:	b	443a80 <_obstack_memory_used@@Base+0x9c18>
  443a5c:	mov	x0, x1
  443a60:	add	x1, x1, #0x1
  443a64:	str	x1, [x19, #256]
  443a68:	add	x20, x20, #0x1
  443a6c:	strb	w22, [x19, x0]
  443a70:	cmp	x24, x20
  443a74:	strb	w22, [x19, #264]
  443a78:	b.eq	443ab0 <_obstack_memory_used@@Base+0x9c48>  // b.none
  443a7c:	ldrb	w22, [x20]
  443a80:	cmp	x1, #0xff
  443a84:	b.ne	443a5c <_obstack_memory_used@@Base+0x9bf4>  // b.any
  443a88:	ldp	x3, x2, [x19, #272]
  443a8c:	strb	wzr, [x19, #255]
  443a90:	mov	x0, x19
  443a94:	blr	x3
  443a98:	ldr	x2, [x19, #320]
  443a9c:	mov	x1, #0x1                   	// #1
  443aa0:	mov	x0, #0x0                   	// #0
  443aa4:	add	x2, x2, x1
  443aa8:	str	x2, [x19, #320]
  443aac:	b	443a64 <_obstack_memory_used@@Base+0x9bfc>
  443ab0:	ldr	x23, [x23, #8]
  443ab4:	b	440abc <_obstack_memory_used@@Base+0x6c54>
  443ab8:	ldr	x25, [x25, #16]
  443abc:	ldr	w5, [x25]
  443ac0:	cmp	w5, #0x47
  443ac4:	b.eq	44415c <_obstack_memory_used@@Base+0xa2f4>  // b.none
  443ac8:	ubfiz	x3, x24, #5, #32
  443acc:	sub	w0, w5, #0x1c
  443ad0:	mov	x1, #0x1f                  	// #31
  443ad4:	add	x3, x23, x3
  443ad8:	cmp	w0, #0x34
  443adc:	mov	x2, #0x1                   	// #1
  443ae0:	movk	x1, #0x1a, lsl #48
  443ae4:	b.hi	441b84 <_obstack_memory_used@@Base+0x7d1c>  // b.pmore
  443ae8:	lsl	x0, x2, x0
  443aec:	tst	x0, x1
  443af0:	b.eq	441b84 <_obstack_memory_used@@Base+0x7d1c>  // b.none
  443af4:	cmp	w24, #0x4
  443af8:	b.eq	443bd8 <_obstack_memory_used@@Base+0x9d70>  // b.none
  443afc:	ldp	x8, x9, [x3, #-32]
  443b00:	stur	x25, [x3, #-24]
  443b04:	ldp	x4, x5, [x3, #-16]
  443b08:	stur	wzr, [x3, #-16]
  443b0c:	stp	x8, x9, [x3]
  443b10:	sub	x0, x3, #0x20
  443b14:	add	w24, w24, #0x1
  443b18:	ldr	x25, [x25, #8]
  443b1c:	stp	x4, x5, [x3, #16]
  443b20:	ldr	w5, [x25]
  443b24:	stp	x6, x0, [x3, #-8]
  443b28:	sub	w0, w5, #0x1c
  443b2c:	str	x3, [x19, #296]
  443b30:	cmp	w0, #0x34
  443b34:	add	x3, x3, #0x20
  443b38:	b.ls	443ae8 <_obstack_memory_used@@Base+0x9c80>  // b.plast
  443b3c:	b	441b84 <_obstack_memory_used@@Base+0x7d1c>
  443b40:	mov	w0, #0x1                   	// #1
  443b44:	ldp	x21, x22, [sp, #32]
  443b48:	ldp	x23, x24, [sp, #48]
  443b4c:	str	w0, [x19, #304]
  443b50:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443b54:	ldr	x4, [x19, #288]
  443b58:	add	x0, sp, #0x60
  443b5c:	str	x0, [x19, #296]
  443b60:	mov	w1, w22
  443b64:	mov	x0, x19
  443b68:	stp	x3, x20, [sp, #96]
  443b6c:	str	wzr, [sp, #112]
  443b70:	str	x4, [sp, #120]
  443b74:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  443b78:	ldr	w0, [sp, #112]
  443b7c:	ldr	x1, [sp, #96]
  443b80:	str	x1, [x19, #296]
  443b84:	cbnz	w0, 4442a4 <_obstack_memory_used@@Base+0xa43c>
  443b88:	ldr	x1, [x19, #256]
  443b8c:	cmp	x1, #0xff
  443b90:	b.ne	443bb8 <_obstack_memory_used@@Base+0x9d50>  // b.any
  443b94:	ldp	x3, x2, [x19, #272]
  443b98:	strb	wzr, [x19, #255]
  443b9c:	mov	x0, x19
  443ba0:	blr	x3
  443ba4:	str	xzr, [x19, #256]
  443ba8:	ldr	x0, [x19, #320]
  443bac:	mov	x1, #0x0                   	// #0
  443bb0:	add	x0, x0, #0x1
  443bb4:	str	x0, [x19, #320]
  443bb8:	add	x0, x1, #0x1
  443bbc:	str	x0, [x19, #256]
  443bc0:	mov	w0, #0x20                  	// #32
  443bc4:	strb	w0, [x19, x1]
  443bc8:	strb	w0, [x19, #264]
  443bcc:	ldr	x3, [x19, #296]
  443bd0:	b	44105c <_obstack_memory_used@@Base+0x71f4>
  443bd4:	str	x3, [x19, #296]
  443bd8:	mov	w0, #0x1                   	// #1
  443bdc:	ldp	x21, x22, [sp, #32]
  443be0:	ldp	x23, x24, [sp, #48]
  443be4:	ldp	x25, x26, [sp, #64]
  443be8:	str	w0, [x19, #304]
  443bec:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443bf0:	ldrb	w0, [x0]
  443bf4:	sub	w1, w0, #0x63
  443bf8:	sub	w0, w0, #0x72
  443bfc:	and	w1, w1, #0xff
  443c00:	and	w0, w0, #0xff
  443c04:	cmp	w1, #0x1
  443c08:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  443c0c:	b.hi	441ebc <_obstack_memory_used@@Base+0x8054>  // b.pmore
  443c10:	mov	w1, w21
  443c14:	mov	x0, x19
  443c18:	bl	4457b0 <_obstack_memory_used@@Base+0xb948>
  443c1c:	ldr	x1, [x19, #256]
  443c20:	cmp	x1, #0xff
  443c24:	b.ne	443c4c <_obstack_memory_used@@Base+0x9de4>  // b.any
  443c28:	ldp	x3, x2, [x19, #272]
  443c2c:	strb	wzr, [x19, #255]
  443c30:	mov	x0, x19
  443c34:	blr	x3
  443c38:	str	xzr, [x19, #256]
  443c3c:	ldr	x0, [x19, #320]
  443c40:	mov	x1, #0x0                   	// #0
  443c44:	add	x0, x0, #0x1
  443c48:	str	x0, [x19, #320]
  443c4c:	add	x0, x1, #0x1
  443c50:	str	x0, [x19, #256]
  443c54:	mov	w0, #0x3c                  	// #60
  443c58:	strb	w0, [x19, x1]
  443c5c:	strb	w0, [x19, #264]
  443c60:	mov	w1, w21
  443c64:	mov	x0, x19
  443c68:	mov	w22, #0x3e                  	// #62
  443c6c:	ldr	x2, [x20, #16]
  443c70:	mov	x23, #0x0                   	// #0
  443c74:	ldr	x2, [x2, #8]
  443c78:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  443c7c:	ldr	x1, [x19, #256]
  443c80:	b	443ca4 <_obstack_memory_used@@Base+0x9e3c>
  443c84:	mov	x0, x1
  443c88:	add	x1, x1, #0x1
  443c8c:	str	x1, [x19, #256]
  443c90:	strb	w22, [x19, x0]
  443c94:	strb	w22, [x19, #264]
  443c98:	mov	w22, #0x28                  	// #40
  443c9c:	cbnz	x23, 443e2c <_obstack_memory_used@@Base+0x9fc4>
  443ca0:	mov	x23, #0x1                   	// #1
  443ca4:	cmp	x1, #0xff
  443ca8:	b.ne	443c84 <_obstack_memory_used@@Base+0x9e1c>  // b.any
  443cac:	ldp	x3, x2, [x19, #272]
  443cb0:	strb	wzr, [x19, #255]
  443cb4:	mov	x0, x19
  443cb8:	blr	x3
  443cbc:	ldr	x2, [x19, #320]
  443cc0:	mov	x1, #0x1                   	// #1
  443cc4:	mov	x0, #0x0                   	// #0
  443cc8:	add	x2, x2, x1
  443ccc:	str	x2, [x19, #320]
  443cd0:	b	443c8c <_obstack_memory_used@@Base+0x9e24>
  443cd4:	ldr	w4, [x19, #344]
  443cd8:	ldr	x5, [x19, #336]
  443cdc:	cmp	w4, #0x0
  443ce0:	b.le	4442d4 <_obstack_memory_used@@Base+0xa46c>
  443ce4:	sub	w3, w4, #0x1
  443ce8:	add	x1, x5, #0x10
  443cec:	mov	x2, x5
  443cf0:	add	x3, x1, w3, uxtw #4
  443cf4:	b	443d04 <_obstack_memory_used@@Base+0x9e9c>
  443cf8:	add	x2, x2, #0x10
  443cfc:	cmp	x3, x2
  443d00:	b.eq	4442d4 <_obstack_memory_used@@Base+0xa46c>  // b.none
  443d04:	ldr	x1, [x2]
  443d08:	cmp	x0, x1
  443d0c:	b.ne	443cf8 <_obstack_memory_used@@Base+0x9e90>  // b.any
  443d10:	ldr	x4, [x19, #328]
  443d14:	mov	x1, x4
  443d18:	cbnz	x4, 443d34 <_obstack_memory_used@@Base+0x9ecc>
  443d1c:	b	444138 <_obstack_memory_used@@Base+0xa2d0>
  443d20:	cmp	x3, x20
  443d24:	ccmp	x4, x1, #0x4, eq  // eq = none
  443d28:	b.ne	443d40 <_obstack_memory_used@@Base+0x9ed8>  // b.any
  443d2c:	ldr	x1, [x1, #8]
  443d30:	cbz	x1, 444138 <_obstack_memory_used@@Base+0xa2d0>
  443d34:	ldr	x3, [x1]
  443d38:	cmp	x3, x0
  443d3c:	b.ne	443d20 <_obstack_memory_used@@Base+0x9eb8>  // b.any
  443d40:	add	x1, x0, #0x8
  443d44:	mov	x0, x19
  443d48:	bl	43cea8 <_obstack_memory_used@@Base+0x3040>
  443d4c:	cbz	x0, 440890 <_obstack_memory_used@@Base+0x6a28>
  443d50:	mov	w22, #0x0                   	// #0
  443d54:	ldr	w1, [x0]
  443d58:	cmp	w1, #0x2f
  443d5c:	b.ne	440a14 <_obstack_memory_used@@Base+0x6bac>  // b.any
  443d60:	ldr	w1, [x19, #316]
  443d64:	tbnz	w1, #31, 444470 <_obstack_memory_used@@Base+0xa608>
  443d68:	bl	43ce68 <_obstack_memory_used@@Base+0x3000>
  443d6c:	cbz	x0, 444484 <_obstack_memory_used@@Base+0xa61c>
  443d70:	ldr	w1, [x0]
  443d74:	b	440a14 <_obstack_memory_used@@Base+0x6bac>
  443d78:	ldr	x2, [x20, #8]
  443d7c:	add	x3, x20, #0x10
  443d80:	mov	w1, w21
  443d84:	mov	x0, x19
  443d88:	bl	445960 <_obstack_memory_used@@Base+0xbaf8>
  443d8c:	cbnz	w0, 44425c <_obstack_memory_used@@Base+0xa3f4>
  443d90:	ldp	x24, x3, [x20, #8]
  443d94:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  443d98:	add	x1, x1, #0xc70
  443d9c:	ldr	x0, [x24, #8]
  443da0:	ldp	x22, x2, [x3, #8]
  443da4:	ldr	x0, [x0]
  443da8:	ldp	x23, x20, [x2, #8]
  443dac:	bl	4026d0 <strcmp@plt>
  443db0:	cbnz	w0, 4441bc <_obstack_memory_used@@Base+0xa354>
  443db4:	mov	x2, x22
  443db8:	mov	w1, w21
  443dbc:	mov	x0, x19
  443dc0:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  443dc4:	mov	x2, x24
  443dc8:	mov	w1, w21
  443dcc:	mov	x0, x19
  443dd0:	bl	4457b0 <_obstack_memory_used@@Base+0xb948>
  443dd4:	mov	x2, x23
  443dd8:	mov	w1, w21
  443ddc:	mov	x0, x19
  443de0:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  443de4:	mov	x0, x19
  443de8:	mov	x2, #0x3                   	// #3
  443dec:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  443df0:	add	x1, x1, #0xc78
  443df4:	bl	43c588 <_obstack_memory_used@@Base+0x2720>
  443df8:	mov	w1, w21
  443dfc:	mov	x2, x20
  443e00:	mov	x0, x19
  443e04:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  443e08:	ldp	x21, x22, [sp, #32]
  443e0c:	ldp	x23, x24, [sp, #48]
  443e10:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443e14:	sub	w1, w0, #0x61
  443e18:	and	w1, w1, #0xff
  443e1c:	cmp	w1, #0x5
  443e20:	b.hi	4443e0 <_obstack_memory_used@@Base+0xa578>  // b.pmore
  443e24:	sub	w0, w0, #0x57
  443e28:	b	442ddc <_obstack_memory_used@@Base+0x8f74>
  443e2c:	ldr	x2, [x20, #16]
  443e30:	mov	w1, w21
  443e34:	mov	x0, x19
  443e38:	ldr	x2, [x2, #16]
  443e3c:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  443e40:	ldr	x1, [x19, #256]
  443e44:	cmp	x1, #0xff
  443e48:	b.ne	443e70 <_obstack_memory_used@@Base+0xa008>  // b.any
  443e4c:	ldp	x3, x2, [x19, #272]
  443e50:	strb	wzr, [x19, #255]
  443e54:	mov	x0, x19
  443e58:	blr	x3
  443e5c:	str	xzr, [x19, #256]
  443e60:	ldr	x0, [x19, #320]
  443e64:	mov	x1, #0x0                   	// #0
  443e68:	add	x0, x0, #0x1
  443e6c:	str	x0, [x19, #320]
  443e70:	add	x0, x1, #0x1
  443e74:	str	x0, [x19, #256]
  443e78:	mov	w0, #0x29                  	// #41
  443e7c:	strb	w0, [x19, x1]
  443e80:	strb	w0, [x19, #264]
  443e84:	ldp	x21, x22, [sp, #32]
  443e88:	ldp	x23, x24, [sp, #48]
  443e8c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443e90:	ldr	w1, [x19, #316]
  443e94:	tbnz	w1, #31, 442e3c <_obstack_memory_used@@Base+0x8fd4>
  443e98:	bl	43ce68 <_obstack_memory_used@@Base+0x3000>
  443e9c:	mov	x2, x0
  443ea0:	cbnz	x0, 442e3c <_obstack_memory_used@@Base+0x8fd4>
  443ea4:	b	440890 <_obstack_memory_used@@Base+0x6a28>
  443ea8:	cmp	w1, #0x63
  443eac:	b.eq	444274 <_obstack_memory_used@@Base+0xa40c>  // b.none
  443eb0:	mov	w1, w21
  443eb4:	mov	x0, x19
  443eb8:	bl	4457b0 <_obstack_memory_used@@Base+0xb948>
  443ebc:	ldr	x2, [x20, #16]
  443ec0:	mov	w1, w21
  443ec4:	mov	x0, x19
  443ec8:	ldr	x2, [x2, #16]
  443ecc:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  443ed0:	b	441ff0 <_obstack_memory_used@@Base+0x8188>
  443ed4:	mov	w2, w3
  443ed8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  443edc:	add	x1, x1, #0xa50
  443ee0:	add	x20, sp, #0x60
  443ee4:	mov	x0, x20
  443ee8:	bl	4023d0 <sprintf@plt>
  443eec:	mov	x0, x20
  443ef0:	bl	402330 <strlen@plt>
  443ef4:	cbz	x0, 444550 <_obstack_memory_used@@Base+0xa6e8>
  443ef8:	add	x22, x20, x0
  443efc:	ldr	x1, [x19, #256]
  443f00:	b	443f24 <_obstack_memory_used@@Base+0xa0bc>
  443f04:	mov	x0, x1
  443f08:	add	x1, x1, #0x1
  443f0c:	str	x1, [x19, #256]
  443f10:	add	x20, x20, #0x1
  443f14:	strb	w21, [x19, x0]
  443f18:	cmp	x22, x20
  443f1c:	strb	w21, [x19, #264]
  443f20:	b.eq	443f64 <_obstack_memory_used@@Base+0xa0fc>  // b.none
  443f24:	ldrb	w21, [x20]
  443f28:	cmp	x1, #0xff
  443f2c:	b.ne	443f04 <_obstack_memory_used@@Base+0xa09c>  // b.any
  443f30:	ldp	x3, x2, [x19, #272]
  443f34:	strb	wzr, [x19, #255]
  443f38:	mov	x0, x19
  443f3c:	blr	x3
  443f40:	ldr	x2, [x19, #320]
  443f44:	mov	x1, #0x1                   	// #1
  443f48:	mov	x0, #0x0                   	// #0
  443f4c:	add	x2, x2, x1
  443f50:	str	x2, [x19, #320]
  443f54:	b	443f0c <_obstack_memory_used@@Base+0xa0a4>
  443f58:	ldp	x21, x22, [sp, #32]
  443f5c:	ldp	x23, x24, [sp, #48]
  443f60:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443f64:	ldp	x21, x22, [sp, #32]
  443f68:	ldp	x23, x24, [sp, #48]
  443f6c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  443f70:	ldr	x0, [x22, #8]
  443f74:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  443f78:	mov	x2, #0x6                   	// #6
  443f7c:	add	x1, x1, #0xa60
  443f80:	bl	4024e0 <strncmp@plt>
  443f84:	cbnz	w0, 441c78 <_obstack_memory_used@@Base+0x7e10>
  443f88:	ldr	x2, [x20, #16]
  443f8c:	mov	w1, w21
  443f90:	mov	x0, x19
  443f94:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  443f98:	mov	x0, x19
  443f9c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  443fa0:	mov	x2, #0x2                   	// #2
  443fa4:	add	x1, x1, #0xa68
  443fa8:	bl	43c588 <_obstack_memory_used@@Base+0x2720>
  443fac:	b	441d38 <_obstack_memory_used@@Base+0x7ed0>
  443fb0:	cmp	x1, #0xff
  443fb4:	b.ne	443fdc <_obstack_memory_used@@Base+0xa174>  // b.any
  443fb8:	ldp	x3, x2, [x19, #272]
  443fbc:	strb	wzr, [x19, #255]
  443fc0:	mov	x0, x19
  443fc4:	blr	x3
  443fc8:	str	xzr, [x19, #256]
  443fcc:	ldr	x0, [x19, #320]
  443fd0:	mov	x1, #0x0                   	// #0
  443fd4:	add	x0, x0, #0x1
  443fd8:	str	x0, [x19, #320]
  443fdc:	add	x0, x1, #0x1
  443fe0:	str	x0, [x19, #256]
  443fe4:	mov	w2, #0x20                  	// #32
  443fe8:	strb	w2, [x19, x1]
  443fec:	strb	w2, [x19, #264]
  443ff0:	b	44355c <_obstack_memory_used@@Base+0x96f4>
  443ff4:	ldr	x1, [x19, #256]
  443ff8:	cmp	x1, #0xff
  443ffc:	b.ne	444024 <_obstack_memory_used@@Base+0xa1bc>  // b.any
  444000:	ldp	x3, x2, [x19, #272]
  444004:	strb	wzr, [x19, #255]
  444008:	mov	x0, x19
  44400c:	blr	x3
  444010:	str	xzr, [x19, #256]
  444014:	ldr	x0, [x19, #320]
  444018:	mov	x1, #0x0                   	// #0
  44401c:	add	x0, x0, #0x1
  444020:	str	x0, [x19, #320]
  444024:	add	x0, x1, #0x1
  444028:	str	x0, [x19, #256]
  44402c:	mov	w2, #0x20                  	// #32
  444030:	strb	w2, [x19, x1]
  444034:	strb	w2, [x19, #264]
  444038:	b	4435c4 <_obstack_memory_used@@Base+0x975c>
  44403c:	ldp	x21, x22, [sp, #32]
  444040:	ldp	x23, x24, [sp, #48]
  444044:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444048:	ldp	x21, x22, [sp, #32]
  44404c:	ldp	x23, x24, [sp, #48]
  444050:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444054:	ldp	x21, x22, [sp, #32]
  444058:	ldp	x23, x24, [sp, #48]
  44405c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444060:	ldp	x21, x22, [sp, #32]
  444064:	ldp	x23, x24, [sp, #48]
  444068:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  44406c:	ldr	x2, [x20, #8]
  444070:	mov	w1, w21
  444074:	mov	x0, x19
  444078:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  44407c:	mov	x0, x19
  444080:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  444084:	mov	x2, #0x3                   	// #3
  444088:	add	x1, x1, #0xcd0
  44408c:	bl	43c588 <_obstack_memory_used@@Base+0x2720>
  444090:	ldp	x21, x22, [sp, #32]
  444094:	ldp	x23, x24, [sp, #48]
  444098:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  44409c:	sub	x22, x22, #0x2
  4440a0:	ldp	x23, x24, [sp, #48]
  4440a4:	str	x22, [x19, #256]
  4440a8:	ldp	x21, x22, [sp, #32]
  4440ac:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4440b0:	ldr	x0, [x0, #8]
  4440b4:	ldr	w1, [x0, #16]
  4440b8:	cmp	w1, #0x1
  4440bc:	b.eq	444440 <_obstack_memory_used@@Base+0xa5d8>  // b.none
  4440c0:	ldp	x21, x22, [sp, #32]
  4440c4:	ldp	x23, x24, [sp, #48]
  4440c8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4440cc:	ldr	x1, [x0, #8]
  4440d0:	ldr	w2, [x1, #16]
  4440d4:	cmp	w2, #0x1
  4440d8:	b.ne	441ee0 <_obstack_memory_used@@Base+0x8078>  // b.any
  4440dc:	ldr	x1, [x1, #8]
  4440e0:	ldrb	w1, [x1]
  4440e4:	cmp	w1, #0x3e
  4440e8:	b.ne	441ee0 <_obstack_memory_used@@Base+0x8078>  // b.any
  4440ec:	ldr	x1, [x19, #256]
  4440f0:	cmp	x1, #0xff
  4440f4:	b.ne	44411c <_obstack_memory_used@@Base+0xa2b4>  // b.any
  4440f8:	ldp	x3, x2, [x19, #272]
  4440fc:	strb	wzr, [x19, #255]
  444100:	mov	x0, x19
  444104:	blr	x3
  444108:	str	xzr, [x19, #256]
  44410c:	ldr	x0, [x19, #320]
  444110:	mov	x1, #0x0                   	// #0
  444114:	add	x0, x0, #0x1
  444118:	str	x0, [x19, #320]
  44411c:	add	x0, x1, #0x1
  444120:	str	x0, [x19, #256]
  444124:	mov	w0, #0x28                  	// #40
  444128:	strb	w0, [x19, x1]
  44412c:	strb	w0, [x19, #264]
  444130:	ldr	x0, [x20, #8]
  444134:	b	441ee0 <_obstack_memory_used@@Base+0x8078>
  444138:	ldr	x2, [x2, #8]
  44413c:	add	x1, x0, #0x8
  444140:	ldr	x23, [x19, #288]
  444144:	str	x2, [x19, #288]
  444148:	mov	x0, x19
  44414c:	bl	43cea8 <_obstack_memory_used@@Base+0x3040>
  444150:	cbz	x0, 444488 <_obstack_memory_used@@Base+0xa620>
  444154:	mov	w22, #0x1                   	// #1
  444158:	b	443d54 <_obstack_memory_used@@Base+0x9eec>
  44415c:	ldr	x25, [x25, #8]
  444160:	cbz	x25, 443bd8 <_obstack_memory_used@@Base+0x9d70>
  444164:	ldr	w5, [x25]
  444168:	b	443ac8 <_obstack_memory_used@@Base+0x9c60>
  44416c:	ldp	x21, x22, [sp, #32]
  444170:	ldp	x23, x24, [sp, #48]
  444174:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444178:	ldp	x21, x22, [sp, #32]
  44417c:	ldp	x23, x24, [sp, #48]
  444180:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444184:	ldp	x21, x22, [sp, #32]
  444188:	ldp	x23, x24, [sp, #48]
  44418c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444190:	ldr	x0, [x2, #16]
  444194:	ldr	w0, [x0]
  444198:	cmp	w0, #0x29
  44419c:	b.eq	4441a8 <_obstack_memory_used@@Base+0xa340>  // b.none
  4441a0:	mov	w0, #0x1                   	// #1
  4441a4:	str	w0, [x19, #304]
  4441a8:	ldr	x2, [x2, #8]
  4441ac:	mov	w1, w21
  4441b0:	mov	x0, x19
  4441b4:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  4441b8:	b	441f28 <_obstack_memory_used@@Base+0x80c0>
  4441bc:	mov	x0, x19
  4441c0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  4441c4:	mov	x2, #0x4                   	// #4
  4441c8:	add	x1, x1, #0xc80
  4441cc:	bl	43c588 <_obstack_memory_used@@Base+0x2720>
  4441d0:	ldr	x0, [x22, #8]
  4441d4:	cbz	x0, 44422c <_obstack_memory_used@@Base+0xa3c4>
  4441d8:	mov	w1, w21
  4441dc:	mov	x2, x22
  4441e0:	mov	x0, x19
  4441e4:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  4441e8:	ldr	x1, [x19, #256]
  4441ec:	cmp	x1, #0xff
  4441f0:	b.ne	444218 <_obstack_memory_used@@Base+0xa3b0>  // b.any
  4441f4:	ldp	x3, x2, [x19, #272]
  4441f8:	strb	wzr, [x19, #255]
  4441fc:	mov	x0, x19
  444200:	blr	x3
  444204:	str	xzr, [x19, #256]
  444208:	ldr	x0, [x19, #320]
  44420c:	mov	x1, #0x0                   	// #0
  444210:	add	x0, x0, #0x1
  444214:	str	x0, [x19, #320]
  444218:	add	x0, x1, #0x1
  44421c:	str	x0, [x19, #256]
  444220:	mov	w0, #0x20                  	// #32
  444224:	strb	w0, [x19, x1]
  444228:	strb	w0, [x19, #264]
  44422c:	mov	x2, x23
  444230:	mov	w1, w21
  444234:	mov	x0, x19
  444238:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  44423c:	cbz	x20, 4443d4 <_obstack_memory_used@@Base+0xa56c>
  444240:	mov	w1, w21
  444244:	mov	x2, x20
  444248:	mov	x0, x19
  44424c:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  444250:	ldp	x21, x22, [sp, #32]
  444254:	ldp	x23, x24, [sp, #48]
  444258:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  44425c:	ldp	x21, x22, [sp, #32]
  444260:	ldp	x23, x24, [sp, #48]
  444264:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444268:	ldp	x21, x22, [sp, #32]
  44426c:	ldp	x23, x24, [sp, #48]
  444270:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444274:	ldrb	w1, [x0, #1]
  444278:	cmp	w1, #0x6c
  44427c:	b.ne	443eb0 <_obstack_memory_used@@Base+0xa048>  // b.any
  444280:	ldrb	w0, [x0, #2]
  444284:	cbz	w0, 443ebc <_obstack_memory_used@@Base+0xa054>
  444288:	b	443eb0 <_obstack_memory_used@@Base+0xa048>
  44428c:	ldp	x21, x22, [sp, #32]
  444290:	ldp	x23, x24, [sp, #48]
  444294:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444298:	ldp	x21, x22, [sp, #32]
  44429c:	ldp	x23, x24, [sp, #48]
  4442a0:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4442a4:	ldp	x21, x22, [sp, #32]
  4442a8:	ldp	x23, x24, [sp, #48]
  4442ac:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4442b0:	ldr	x1, [x20, #8]
  4442b4:	ldr	w2, [x1]
  4442b8:	cmp	w2, #0x1
  4442bc:	b.ne	4432c0 <_obstack_memory_used@@Base+0x9458>  // b.any
  4442c0:	ldr	x2, [x20, #16]
  4442c4:	ldr	w2, [x2]
  4442c8:	cmp	w2, #0x29
  4442cc:	csel	x20, x20, x1, ne  // ne = any
  4442d0:	b	4432c0 <_obstack_memory_used@@Base+0x9458>
  4442d4:	ldr	w1, [x19, #348]
  4442d8:	cmp	w4, w1
  4442dc:	b.ge	444344 <_obstack_memory_used@@Base+0xa4dc>  // b.tcont
  4442e0:	sbfiz	x1, x4, #4, #32
  4442e4:	add	w2, w4, #0x1
  4442e8:	ldr	x3, [x19, #288]
  4442ec:	str	w2, [x19, #344]
  4442f0:	str	x0, [x5, x1]
  4442f4:	add	x1, x5, w4, sxtw #4
  4442f8:	add	x1, x1, #0x8
  4442fc:	cbz	x3, 44445c <_obstack_memory_used@@Base+0xa5f4>
  444300:	ldr	w2, [x19, #360]
  444304:	ldr	w6, [x19, #364]
  444308:	sbfiz	x5, x2, #4, #32
  44430c:	b	44433c <_obstack_memory_used@@Base+0xa4d4>
  444310:	ldr	x4, [x19, #352]
  444314:	add	w2, w2, #0x1
  444318:	ldr	x7, [x3, #8]
  44431c:	add	x4, x4, x5
  444320:	str	w2, [x19, #360]
  444324:	add	x5, x5, #0x10
  444328:	str	x7, [x4, #8]
  44432c:	str	x4, [x1]
  444330:	mov	x1, x4
  444334:	ldr	x3, [x3]
  444338:	cbz	x3, 44445c <_obstack_memory_used@@Base+0xa5f4>
  44433c:	cmp	w6, w2
  444340:	b.gt	444310 <_obstack_memory_used@@Base+0xa4a8>
  444344:	mov	w0, #0x1                   	// #1
  444348:	ldp	x21, x22, [sp, #32]
  44434c:	ldp	x23, x24, [sp, #48]
  444350:	str	w0, [x19, #304]
  444354:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444358:	ldr	x2, [x20, #8]
  44435c:	mov	w1, w21
  444360:	mov	x0, x19
  444364:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  444368:	mov	x2, x22
  44436c:	mov	w1, w21
  444370:	mov	x0, x19
  444374:	bl	4457b0 <_obstack_memory_used@@Base+0xb948>
  444378:	ldp	x21, x22, [sp, #32]
  44437c:	ldp	x23, x24, [sp, #48]
  444380:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444384:	ldr	x2, [x20, #16]
  444388:	mov	x0, x19
  44438c:	mov	w1, w21
  444390:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  444394:	str	xzr, [x19, #296]
  444398:	ldr	w0, [sp, #112]
  44439c:	cbz	w0, 4412a0 <_obstack_memory_used@@Base+0x7438>
  4443a0:	ldp	x21, x22, [sp, #32]
  4443a4:	ldp	x23, x24, [sp, #48]
  4443a8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4443ac:	cmp	w22, #0x5
  4443b0:	b.eq	44455c <_obstack_memory_used@@Base+0xa6f4>  // b.none
  4443b4:	mov	x0, x19
  4443b8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  4443bc:	mov	x2, #0x3                   	// #3
  4443c0:	add	x1, x1, #0xc98
  4443c4:	bl	43c588 <_obstack_memory_used@@Base+0x2720>
  4443c8:	ldp	x21, x22, [sp, #32]
  4443cc:	ldp	x23, x24, [sp, #48]
  4443d0:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4443d4:	ldp	x21, x22, [sp, #32]
  4443d8:	ldp	x23, x24, [sp, #48]
  4443dc:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4443e0:	cmp	x21, x24
  4443e4:	b.ls	442d48 <_obstack_memory_used@@Base+0x8ee0>  // b.plast
  4443e8:	cmp	x2, #0xff
  4443ec:	ccmp	w0, w23, #0x0, ls  // ls = plast
  4443f0:	b.ne	442d48 <_obstack_memory_used@@Base+0x8ee0>  // b.any
  4443f4:	ldr	x1, [x19, #256]
  4443f8:	and	w22, w2, #0xff
  4443fc:	cmp	x1, #0xff
  444400:	b.ne	444428 <_obstack_memory_used@@Base+0xa5c0>  // b.any
  444404:	ldp	x3, x2, [x19, #272]
  444408:	strb	wzr, [x19, #255]
  44440c:	mov	x0, x19
  444410:	blr	x3
  444414:	str	xzr, [x19, #256]
  444418:	ldr	x0, [x19, #320]
  44441c:	mov	x1, #0x0                   	// #0
  444420:	add	x0, x0, #0x1
  444424:	str	x0, [x19, #320]
  444428:	add	x0, x1, #0x1
  44442c:	str	x0, [x19, #256]
  444430:	strb	w22, [x19, x1]
  444434:	mov	x20, x24
  444438:	strb	w22, [x19, #264]
  44443c:	b	442d88 <_obstack_memory_used@@Base+0x8f20>
  444440:	ldr	x0, [x0, #8]
  444444:	ldrb	w0, [x0]
  444448:	cmp	w0, #0x3e
  44444c:	b.eq	44457c <_obstack_memory_used@@Base+0xa714>  // b.none
  444450:	ldp	x21, x22, [sp, #32]
  444454:	ldp	x23, x24, [sp, #48]
  444458:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  44445c:	str	xzr, [x1]
  444460:	b	443d40 <_obstack_memory_used@@Base+0x9ed8>
  444464:	ldp	x21, x22, [sp, #32]
  444468:	ldp	x23, x24, [sp, #48]
  44446c:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444470:	ldr	w1, [x20]
  444474:	ldr	x4, [x19, #296]
  444478:	cmp	w1, #0x2f
  44447c:	csel	x20, x20, x0, ne  // ne = any
  444480:	b	440a38 <_obstack_memory_used@@Base+0x6bd0>
  444484:	cbz	w22, 440890 <_obstack_memory_used@@Base+0x6a28>
  444488:	ldp	x21, x22, [sp, #32]
  44448c:	str	x23, [x19, #288]
  444490:	ldp	x23, x24, [sp, #48]
  444494:	b	440898 <_obstack_memory_used@@Base+0x6a30>
  444498:	ldr	x1, [x19, #256]
  44449c:	cmp	x1, #0xff
  4444a0:	b.ne	4444c8 <_obstack_memory_used@@Base+0xa660>  // b.any
  4444a4:	ldp	x3, x2, [x19, #272]
  4444a8:	strb	wzr, [x19, #255]
  4444ac:	mov	x0, x19
  4444b0:	blr	x3
  4444b4:	str	xzr, [x19, #256]
  4444b8:	ldr	x0, [x19, #320]
  4444bc:	mov	x1, #0x0                   	// #0
  4444c0:	add	x0, x0, #0x1
  4444c4:	str	x0, [x19, #320]
  4444c8:	add	x0, x1, #0x1
  4444cc:	str	x0, [x19, #256]
  4444d0:	mov	w0, #0x75                  	// #117
  4444d4:	strb	w0, [x19, x1]
  4444d8:	strb	w0, [x19, #264]
  4444dc:	ldp	x21, x22, [sp, #32]
  4444e0:	ldp	x23, x24, [sp, #48]
  4444e4:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4444e8:	mov	x0, x19
  4444ec:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  4444f0:	mov	x2, #0x2                   	// #2
  4444f4:	add	x1, x1, #0xc88
  4444f8:	bl	43c588 <_obstack_memory_used@@Base+0x2720>
  4444fc:	ldp	x21, x22, [sp, #32]
  444500:	ldp	x23, x24, [sp, #48]
  444504:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  444508:	ldr	x1, [x19, #256]
  44450c:	cmp	x1, #0xff
  444510:	b.ne	444538 <_obstack_memory_used@@Base+0xa6d0>  // b.any
  444514:	ldp	x3, x2, [x19, #272]
  444518:	strb	wzr, [x19, #255]
  44451c:	mov	x0, x19
  444520:	blr	x3
  444524:	str	xzr, [x19, #256]
  444528:	ldr	x0, [x19, #320]
  44452c:	mov	x1, #0x0                   	// #0
  444530:	add	x0, x0, #0x1
  444534:	str	x0, [x19, #320]
  444538:	add	x0, x1, #0x1
  44453c:	str	x0, [x19, #256]
  444540:	mov	w0, #0x2d                  	// #45
  444544:	strb	w0, [x19, x1]
  444548:	strb	w0, [x19, #264]
  44454c:	b	443188 <_obstack_memory_used@@Base+0x9320>
  444550:	ldp	x21, x22, [sp, #32]
  444554:	ldp	x23, x24, [sp, #48]
  444558:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  44455c:	mov	x0, x19
  444560:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  444564:	mov	x2, #0x2                   	// #2
  444568:	add	x1, x1, #0xc90
  44456c:	bl	43c588 <_obstack_memory_used@@Base+0x2720>
  444570:	ldp	x21, x22, [sp, #32]
  444574:	ldp	x23, x24, [sp, #48]
  444578:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  44457c:	ldr	x1, [x19, #256]
  444580:	cmp	x1, #0xff
  444584:	b.ne	4445ac <_obstack_memory_used@@Base+0xa744>  // b.any
  444588:	ldp	x3, x2, [x19, #272]
  44458c:	strb	wzr, [x19, #255]
  444590:	mov	x0, x19
  444594:	blr	x3
  444598:	str	xzr, [x19, #256]
  44459c:	ldr	x0, [x19, #320]
  4445a0:	mov	x1, #0x0                   	// #0
  4445a4:	add	x0, x0, #0x1
  4445a8:	str	x0, [x19, #320]
  4445ac:	add	x0, x1, #0x1
  4445b0:	str	x0, [x19, #256]
  4445b4:	mov	w0, #0x29                  	// #41
  4445b8:	strb	w0, [x19, x1]
  4445bc:	strb	w0, [x19, #264]
  4445c0:	ldp	x21, x22, [sp, #32]
  4445c4:	ldp	x23, x24, [sp, #48]
  4445c8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4445cc:	mov	x2, x22
  4445d0:	mov	w1, w21
  4445d4:	mov	x0, x19
  4445d8:	bl	4457b0 <_obstack_memory_used@@Base+0xb948>
  4445dc:	b	442404 <_obstack_memory_used@@Base+0x859c>
  4445e0:	ldp	x21, x22, [sp, #32]
  4445e4:	ldp	x23, x24, [sp, #48]
  4445e8:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  4445ec:	mov	x0, x19
  4445f0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  4445f4:	mov	x2, #0x5                   	// #5
  4445f8:	add	x1, x1, #0xca0
  4445fc:	bl	43c588 <_obstack_memory_used@@Base+0x2720>
  444600:	ldp	x21, x22, [sp, #32]
  444604:	ldp	x23, x24, [sp, #48]
  444608:	b	440864 <_obstack_memory_used@@Base+0x69fc>
  44460c:	nop
  444610:	stp	x29, x30, [sp, #-48]!
  444614:	mov	x29, sp
  444618:	stp	x19, x20, [sp, #16]
  44461c:	mov	x20, x0
  444620:	cbz	x2, 444690 <_obstack_memory_used@@Base+0xa828>
  444624:	ldr	w3, [x2, #4]
  444628:	mov	x19, x2
  44462c:	cmp	w3, #0x1
  444630:	b.gt	444690 <_obstack_memory_used@@Base+0xa828>
  444634:	ldr	w4, [x0, #308]
  444638:	cmp	w4, #0x400
  44463c:	b.gt	444690 <_obstack_memory_used@@Base+0xa828>
  444640:	add	w3, w3, #0x1
  444644:	add	w4, w4, #0x1
  444648:	str	w3, [x2, #4]
  44464c:	add	x3, sp, #0x20
  444650:	str	w4, [x0, #308]
  444654:	ldr	x4, [x0, #328]
  444658:	str	x3, [x0, #328]
  44465c:	stp	x2, x4, [sp, #32]
  444660:	bl	440800 <_obstack_memory_used@@Base+0x6998>
  444664:	ldr	w1, [x19, #4]
  444668:	ldr	x0, [sp, #40]
  44466c:	str	x0, [x20, #328]
  444670:	ldr	w0, [x20, #308]
  444674:	sub	w1, w1, #0x1
  444678:	str	w1, [x19, #4]
  44467c:	sub	w0, w0, #0x1
  444680:	str	w0, [x20, #308]
  444684:	ldp	x19, x20, [sp, #16]
  444688:	ldp	x29, x30, [sp], #48
  44468c:	ret
  444690:	mov	w0, #0x1                   	// #1
  444694:	str	w0, [x20, #304]
  444698:	ldp	x19, x20, [sp, #16]
  44469c:	ldp	x29, x30, [sp], #48
  4446a0:	ret
  4446a4:	nop
  4446a8:	stp	x29, x30, [sp, #-64]!
  4446ac:	mov	x29, sp
  4446b0:	stp	x19, x20, [sp, #16]
  4446b4:	mov	x19, x0
  4446b8:	ldr	w0, [x2]
  4446bc:	stp	x21, x22, [sp, #32]
  4446c0:	mov	x20, x2
  4446c4:	sub	w0, w0, #0x3
  4446c8:	mov	w21, w1
  4446cc:	cmp	w0, #0x4d
  4446d0:	b.ls	4446f0 <_obstack_memory_used@@Base+0xa888>  // b.plast
  4446d4:	mov	x2, x20
  4446d8:	mov	w1, w21
  4446dc:	mov	x0, x19
  4446e0:	ldp	x19, x20, [sp, #16]
  4446e4:	ldp	x21, x22, [sp, #32]
  4446e8:	ldp	x29, x30, [sp], #64
  4446ec:	b	444610 <_obstack_memory_used@@Base+0xa7a8>
  4446f0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  4446f4:	add	x1, x1, #0x950
  4446f8:	ldrh	w0, [x1, w0, uxtw #1]
  4446fc:	adr	x1, 444708 <_obstack_memory_used@@Base+0xa8a0>
  444700:	add	x0, x1, w0, sxth #2
  444704:	br	x0
  444708:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  44470c:	add	x20, x20, #0xd58
  444710:	add	x22, x20, #0x9
  444714:	mov	w21, #0x20                  	// #32
  444718:	ldr	x1, [x19, #256]
  44471c:	b	444744 <_obstack_memory_used@@Base+0xa8dc>
  444720:	mov	x0, x1
  444724:	add	x1, x1, #0x1
  444728:	str	x1, [x19, #256]
  44472c:	add	x20, x20, #0x1
  444730:	strb	w21, [x19, x0]
  444734:	cmp	x22, x20
  444738:	strb	w21, [x19, #264]
  44473c:	b.eq	4448fc <_obstack_memory_used@@Base+0xaa94>  // b.none
  444740:	ldrb	w21, [x20]
  444744:	cmp	x1, #0xff
  444748:	b.ne	444720 <_obstack_memory_used@@Base+0xa8b8>  // b.any
  44474c:	ldp	x3, x2, [x19, #272]
  444750:	strb	wzr, [x19, #255]
  444754:	mov	x0, x19
  444758:	blr	x3
  44475c:	ldr	x2, [x19, #320]
  444760:	mov	x1, #0x1                   	// #1
  444764:	mov	x0, #0x0                   	// #0
  444768:	add	x2, x2, x1
  44476c:	str	x2, [x19, #320]
  444770:	b	444728 <_obstack_memory_used@@Base+0xa8c0>
  444774:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  444778:	add	x20, x20, #0xd68
  44477c:	add	x22, x20, #0x9
  444780:	mov	w21, #0x20                  	// #32
  444784:	ldr	x1, [x19, #256]
  444788:	b	4447b0 <_obstack_memory_used@@Base+0xa948>
  44478c:	mov	x0, x1
  444790:	add	x1, x1, #0x1
  444794:	str	x1, [x19, #256]
  444798:	add	x20, x20, #0x1
  44479c:	strb	w21, [x19, x0]
  4447a0:	cmp	x20, x22
  4447a4:	strb	w21, [x19, #264]
  4447a8:	b.eq	4448fc <_obstack_memory_used@@Base+0xaa94>  // b.none
  4447ac:	ldrb	w21, [x20]
  4447b0:	cmp	x1, #0xff
  4447b4:	b.ne	44478c <_obstack_memory_used@@Base+0xa924>  // b.any
  4447b8:	ldp	x3, x2, [x19, #272]
  4447bc:	strb	wzr, [x19, #255]
  4447c0:	mov	x0, x19
  4447c4:	blr	x3
  4447c8:	ldr	x2, [x19, #320]
  4447cc:	mov	x1, #0x1                   	// #1
  4447d0:	mov	x0, #0x0                   	// #0
  4447d4:	add	x2, x2, x1
  4447d8:	str	x2, [x19, #320]
  4447dc:	b	444794 <_obstack_memory_used@@Base+0xa92c>
  4447e0:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  4447e4:	add	x20, x20, #0xd78
  4447e8:	add	x22, x20, #0x6
  4447ec:	mov	w21, #0x20                  	// #32
  4447f0:	ldr	x1, [x19, #256]
  4447f4:	b	44481c <_obstack_memory_used@@Base+0xa9b4>
  4447f8:	mov	x0, x1
  4447fc:	add	x1, x1, #0x1
  444800:	str	x1, [x19, #256]
  444804:	add	x20, x20, #0x1
  444808:	strb	w21, [x19, x0]
  44480c:	cmp	x22, x20
  444810:	strb	w21, [x19, #264]
  444814:	b.eq	4448fc <_obstack_memory_used@@Base+0xaa94>  // b.none
  444818:	ldrb	w21, [x20]
  44481c:	cmp	x1, #0xff
  444820:	b.ne	4447f8 <_obstack_memory_used@@Base+0xa990>  // b.any
  444824:	ldp	x3, x2, [x19, #272]
  444828:	strb	wzr, [x19, #255]
  44482c:	mov	x0, x19
  444830:	blr	x3
  444834:	ldr	x2, [x19, #320]
  444838:	mov	x1, #0x1                   	// #1
  44483c:	mov	x0, #0x0                   	// #0
  444840:	add	x2, x2, x1
  444844:	str	x2, [x19, #320]
  444848:	b	444800 <_obstack_memory_used@@Base+0xa998>
  44484c:	ldr	x2, [x2, #8]
  444850:	b	4446d8 <_obstack_memory_used@@Base+0xa870>
  444854:	ldr	x0, [x19, #256]
  444858:	cmp	x0, #0xff
  44485c:	b.eq	444e18 <_obstack_memory_used@@Base+0xafb0>  // b.none
  444860:	add	x1, x0, #0x1
  444864:	str	x1, [x19, #256]
  444868:	mov	w2, #0x20                  	// #32
  44486c:	strb	w2, [x19, x0]
  444870:	strb	w2, [x19, #264]
  444874:	b	444a64 <_obstack_memory_used@@Base+0xabfc>
  444878:	ldr	x0, [x19, #256]
  44487c:	add	x1, x0, #0x1
  444880:	cmp	x0, #0xff
  444884:	b.eq	444e70 <_obstack_memory_used@@Base+0xb008>  // b.none
  444888:	str	x1, [x19, #256]
  44488c:	mov	w2, #0x20                  	// #32
  444890:	strb	w2, [x19, x0]
  444894:	strb	w2, [x19, #264]
  444898:	mov	x21, #0x0                   	// #0
  44489c:	mov	w20, #0x26                  	// #38
  4448a0:	b	4448c0 <_obstack_memory_used@@Base+0xaa58>
  4448a4:	mov	x0, x1
  4448a8:	add	x1, x1, #0x1
  4448ac:	str	x1, [x19, #256]
  4448b0:	strb	w20, [x19, x0]
  4448b4:	strb	w20, [x19, #264]
  4448b8:	cbnz	x21, 4448fc <_obstack_memory_used@@Base+0xaa94>
  4448bc:	mov	x21, #0x1                   	// #1
  4448c0:	cmp	x1, #0xff
  4448c4:	b.ne	4448a4 <_obstack_memory_used@@Base+0xaa3c>  // b.any
  4448c8:	ldp	x3, x2, [x19, #272]
  4448cc:	strb	wzr, [x19, #255]
  4448d0:	mov	x0, x19
  4448d4:	blr	x3
  4448d8:	ldr	x2, [x19, #320]
  4448dc:	mov	x0, #0x0                   	// #0
  4448e0:	mov	x1, #0x1                   	// #1
  4448e4:	str	x1, [x19, #256]
  4448e8:	add	x2, x2, x1
  4448ec:	str	x2, [x19, #320]
  4448f0:	strb	w20, [x19, x0]
  4448f4:	strb	w20, [x19, #264]
  4448f8:	cbz	x21, 4448bc <_obstack_memory_used@@Base+0xaa54>
  4448fc:	ldp	x19, x20, [sp, #16]
  444900:	ldp	x21, x22, [sp, #32]
  444904:	ldp	x29, x30, [sp], #64
  444908:	ret
  44490c:	ldr	x1, [x19, #256]
  444910:	add	x0, x1, #0x1
  444914:	cmp	x1, #0xff
  444918:	b.eq	444e48 <_obstack_memory_used@@Base+0xafe0>  // b.none
  44491c:	str	x0, [x19, #256]
  444920:	mov	w0, #0x20                  	// #32
  444924:	strb	w0, [x19, x1]
  444928:	mov	w1, w21
  44492c:	strb	w0, [x19, #264]
  444930:	mov	x0, x19
  444934:	ldr	x2, [x20, #16]
  444938:	ldp	x19, x20, [sp, #16]
  44493c:	ldp	x21, x22, [sp, #32]
  444940:	ldp	x29, x30, [sp], #64
  444944:	b	444610 <_obstack_memory_used@@Base+0xa7a8>
  444948:	tbnz	w21, #2, 4448fc <_obstack_memory_used@@Base+0xaa94>
  44494c:	ldr	x1, [x19, #256]
  444950:	add	x0, x1, #0x1
  444954:	cmp	x1, #0xff
  444958:	b.ne	444980 <_obstack_memory_used@@Base+0xab18>  // b.any
  44495c:	ldp	x3, x2, [x19, #272]
  444960:	strb	wzr, [x19, #255]
  444964:	mov	x0, x19
  444968:	blr	x3
  44496c:	ldr	x2, [x19, #320]
  444970:	mov	x0, #0x1                   	// #1
  444974:	mov	x1, #0x0                   	// #0
  444978:	add	x2, x2, x0
  44497c:	str	x2, [x19, #320]
  444980:	str	x0, [x19, #256]
  444984:	mov	w0, #0x2a                  	// #42
  444988:	strb	w0, [x19, x1]
  44498c:	strb	w0, [x19, #264]
  444990:	b	4448fc <_obstack_memory_used@@Base+0xaa94>
  444994:	ldrb	w0, [x19, #264]
  444998:	cmp	w0, #0x28
  44499c:	b.eq	4449e4 <_obstack_memory_used@@Base+0xab7c>  // b.none
  4449a0:	ldr	x1, [x19, #256]
  4449a4:	add	x0, x1, #0x1
  4449a8:	cmp	x1, #0xff
  4449ac:	b.ne	4449d4 <_obstack_memory_used@@Base+0xab6c>  // b.any
  4449b0:	ldp	x3, x2, [x19, #272]
  4449b4:	strb	wzr, [x19, #255]
  4449b8:	mov	x0, x19
  4449bc:	blr	x3
  4449c0:	ldr	x2, [x19, #320]
  4449c4:	mov	x0, #0x1                   	// #1
  4449c8:	mov	x1, #0x0                   	// #0
  4449cc:	add	x2, x2, x0
  4449d0:	str	x2, [x19, #320]
  4449d4:	str	x0, [x19, #256]
  4449d8:	mov	w0, #0x20                  	// #32
  4449dc:	strb	w0, [x19, x1]
  4449e0:	strb	w0, [x19, #264]
  4449e4:	ldr	x2, [x20, #8]
  4449e8:	mov	w1, w21
  4449ec:	mov	x0, x19
  4449f0:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  4449f4:	add	x20, x20, #0xdd0
  4449f8:	mov	w21, #0x3a                  	// #58
  4449fc:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  444a00:	add	x22, x20, #0x3
  444a04:	ldr	x1, [x19, #256]
  444a08:	b	444a30 <_obstack_memory_used@@Base+0xabc8>
  444a0c:	mov	x0, x1
  444a10:	add	x1, x1, #0x1
  444a14:	str	x1, [x19, #256]
  444a18:	add	x20, x20, #0x1
  444a1c:	strb	w21, [x19, x0]
  444a20:	cmp	x22, x20
  444a24:	strb	w21, [x19, #264]
  444a28:	b.eq	4448fc <_obstack_memory_used@@Base+0xaa94>  // b.none
  444a2c:	ldrb	w21, [x20]
  444a30:	cmp	x1, #0xff
  444a34:	b.ne	444a0c <_obstack_memory_used@@Base+0xaba4>  // b.any
  444a38:	ldp	x3, x2, [x19, #272]
  444a3c:	strb	wzr, [x19, #255]
  444a40:	mov	x0, x19
  444a44:	blr	x3
  444a48:	ldr	x2, [x19, #320]
  444a4c:	mov	x1, #0x1                   	// #1
  444a50:	mov	x0, #0x0                   	// #0
  444a54:	add	x2, x2, x1
  444a58:	str	x2, [x19, #320]
  444a5c:	b	444a14 <_obstack_memory_used@@Base+0xabac>
  444a60:	ldr	x1, [x19, #256]
  444a64:	cmp	x1, #0xff
  444a68:	b.eq	444df0 <_obstack_memory_used@@Base+0xaf88>  // b.none
  444a6c:	add	x0, x1, #0x1
  444a70:	str	x0, [x19, #256]
  444a74:	mov	w0, #0x26                  	// #38
  444a78:	strb	w0, [x19, x1]
  444a7c:	strb	w0, [x19, #264]
  444a80:	ldp	x19, x20, [sp, #16]
  444a84:	ldp	x21, x22, [sp, #32]
  444a88:	ldp	x29, x30, [sp], #64
  444a8c:	ret
  444a90:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  444a94:	add	x22, x22, #0xda8
  444a98:	stp	x23, x24, [sp, #48]
  444a9c:	add	x24, x22, #0x6
  444aa0:	mov	w23, #0x20                  	// #32
  444aa4:	ldr	x1, [x19, #256]
  444aa8:	b	444ad0 <_obstack_memory_used@@Base+0xac68>
  444aac:	mov	x0, x1
  444ab0:	add	x1, x1, #0x1
  444ab4:	str	x1, [x19, #256]
  444ab8:	add	x22, x22, #0x1
  444abc:	strb	w23, [x19, x0]
  444ac0:	cmp	x24, x22
  444ac4:	strb	w23, [x19, #264]
  444ac8:	b.eq	444d38 <_obstack_memory_used@@Base+0xaed0>  // b.none
  444acc:	ldrb	w23, [x22]
  444ad0:	cmp	x1, #0xff
  444ad4:	b.ne	444aac <_obstack_memory_used@@Base+0xac44>  // b.any
  444ad8:	ldp	x3, x2, [x19, #272]
  444adc:	strb	wzr, [x19, #255]
  444ae0:	mov	x0, x19
  444ae4:	blr	x3
  444ae8:	ldr	x2, [x19, #320]
  444aec:	mov	x1, #0x1                   	// #1
  444af0:	mov	x0, #0x0                   	// #0
  444af4:	add	x2, x2, x1
  444af8:	str	x2, [x19, #320]
  444afc:	b	444ab4 <_obstack_memory_used@@Base+0xac4c>
  444b00:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  444b04:	add	x22, x22, #0xd98
  444b08:	stp	x23, x24, [sp, #48]
  444b0c:	add	x24, x22, #0x9
  444b10:	mov	w23, #0x20                  	// #32
  444b14:	ldr	x1, [x19, #256]
  444b18:	b	444b40 <_obstack_memory_used@@Base+0xacd8>
  444b1c:	mov	x0, x1
  444b20:	add	x1, x1, #0x1
  444b24:	str	x1, [x19, #256]
  444b28:	add	x22, x22, #0x1
  444b2c:	strb	w23, [x19, x0]
  444b30:	cmp	x22, x24
  444b34:	strb	w23, [x19, #264]
  444b38:	b.eq	444d38 <_obstack_memory_used@@Base+0xaed0>  // b.none
  444b3c:	ldrb	w23, [x22]
  444b40:	cmp	x1, #0xff
  444b44:	b.ne	444b1c <_obstack_memory_used@@Base+0xacb4>  // b.any
  444b48:	ldp	x3, x2, [x19, #272]
  444b4c:	strb	wzr, [x19, #255]
  444b50:	mov	x0, x19
  444b54:	blr	x3
  444b58:	ldr	x2, [x19, #320]
  444b5c:	mov	x1, #0x1                   	// #1
  444b60:	mov	x0, #0x0                   	// #0
  444b64:	add	x2, x2, x1
  444b68:	str	x2, [x19, #320]
  444b6c:	b	444b24 <_obstack_memory_used@@Base+0xacbc>
  444b70:	stp	x23, x24, [sp, #48]
  444b74:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  444b78:	add	x24, x24, #0xdd8
  444b7c:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  444b80:	add	x24, x24, #0xa
  444b84:	add	x22, x22, #0xdd9
  444b88:	mov	w23, #0x20                  	// #32
  444b8c:	ldr	x1, [x19, #256]
  444b90:	b	444bb4 <_obstack_memory_used@@Base+0xad4c>
  444b94:	mov	x0, x1
  444b98:	add	x1, x1, #0x1
  444b9c:	str	x1, [x19, #256]
  444ba0:	cmp	x22, x24
  444ba4:	strb	w23, [x19, x0]
  444ba8:	strb	w23, [x19, #264]
  444bac:	b.eq	444de8 <_obstack_memory_used@@Base+0xaf80>  // b.none
  444bb0:	ldrb	w23, [x22], #1
  444bb4:	cmp	x1, #0xff
  444bb8:	b.ne	444b94 <_obstack_memory_used@@Base+0xad2c>  // b.any
  444bbc:	ldp	x3, x2, [x19, #272]
  444bc0:	strb	wzr, [x19, #255]
  444bc4:	mov	x0, x19
  444bc8:	blr	x3
  444bcc:	ldr	x2, [x19, #320]
  444bd0:	mov	x1, #0x1                   	// #1
  444bd4:	mov	x0, #0x0                   	// #0
  444bd8:	add	x2, x2, x1
  444bdc:	str	x2, [x19, #320]
  444be0:	b	444b9c <_obstack_memory_used@@Base+0xad34>
  444be4:	ldr	x1, [x19, #256]
  444be8:	b	444898 <_obstack_memory_used@@Base+0xaa30>
  444bec:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  444bf0:	add	x20, x20, #0xdb0
  444bf4:	add	x22, x20, #0x8
  444bf8:	mov	w21, #0x63                  	// #99
  444bfc:	ldr	x1, [x19, #256]
  444c00:	b	444c28 <_obstack_memory_used@@Base+0xadc0>
  444c04:	mov	x0, x1
  444c08:	add	x1, x1, #0x1
  444c0c:	str	x1, [x19, #256]
  444c10:	add	x20, x20, #0x1
  444c14:	strb	w21, [x19, x0]
  444c18:	cmp	x22, x20
  444c1c:	strb	w21, [x19, #264]
  444c20:	b.eq	4448fc <_obstack_memory_used@@Base+0xaa94>  // b.none
  444c24:	ldrb	w21, [x20]
  444c28:	cmp	x1, #0xff
  444c2c:	b.ne	444c04 <_obstack_memory_used@@Base+0xad9c>  // b.any
  444c30:	ldp	x3, x2, [x19, #272]
  444c34:	strb	wzr, [x19, #255]
  444c38:	mov	x0, x19
  444c3c:	blr	x3
  444c40:	ldr	x2, [x19, #320]
  444c44:	mov	x1, #0x1                   	// #1
  444c48:	mov	x0, #0x0                   	// #0
  444c4c:	add	x2, x2, x1
  444c50:	str	x2, [x19, #320]
  444c54:	b	444c0c <_obstack_memory_used@@Base+0xada4>
  444c58:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  444c5c:	add	x22, x22, #0xdc0
  444c60:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  444c64:	add	x22, x22, #0xa
  444c68:	add	x20, x20, #0xdc1
  444c6c:	mov	w21, #0x69                  	// #105
  444c70:	ldr	x1, [x19, #256]
  444c74:	b	444c98 <_obstack_memory_used@@Base+0xae30>
  444c78:	mov	x0, x1
  444c7c:	add	x1, x1, #0x1
  444c80:	str	x1, [x19, #256]
  444c84:	cmp	x20, x22
  444c88:	strb	w21, [x19, x0]
  444c8c:	strb	w21, [x19, #264]
  444c90:	b.eq	4448fc <_obstack_memory_used@@Base+0xaa94>  // b.none
  444c94:	ldrb	w21, [x20], #1
  444c98:	cmp	x1, #0xff
  444c9c:	b.ne	444c78 <_obstack_memory_used@@Base+0xae10>  // b.any
  444ca0:	ldp	x3, x2, [x19, #272]
  444ca4:	strb	wzr, [x19, #255]
  444ca8:	mov	x0, x19
  444cac:	blr	x3
  444cb0:	ldr	x2, [x19, #320]
  444cb4:	mov	x1, #0x1                   	// #1
  444cb8:	mov	x0, #0x0                   	// #0
  444cbc:	add	x2, x2, x1
  444cc0:	str	x2, [x19, #320]
  444cc4:	b	444c80 <_obstack_memory_used@@Base+0xae18>
  444cc8:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  444ccc:	add	x22, x22, #0xd80
  444cd0:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  444cd4:	add	x22, x22, #0x11
  444cd8:	add	x20, x20, #0xd81
  444cdc:	mov	w21, #0x20                  	// #32
  444ce0:	ldr	x1, [x19, #256]
  444ce4:	b	444d08 <_obstack_memory_used@@Base+0xaea0>
  444ce8:	mov	x0, x1
  444cec:	add	x1, x1, #0x1
  444cf0:	str	x1, [x19, #256]
  444cf4:	cmp	x22, x20
  444cf8:	strb	w21, [x19, x0]
  444cfc:	strb	w21, [x19, #264]
  444d00:	b.eq	4448fc <_obstack_memory_used@@Base+0xaa94>  // b.none
  444d04:	ldrb	w21, [x20], #1
  444d08:	cmp	x1, #0xff
  444d0c:	b.ne	444ce8 <_obstack_memory_used@@Base+0xae80>  // b.any
  444d10:	ldp	x3, x2, [x19, #272]
  444d14:	strb	wzr, [x19, #255]
  444d18:	mov	x0, x19
  444d1c:	blr	x3
  444d20:	ldr	x2, [x19, #320]
  444d24:	mov	x1, #0x1                   	// #1
  444d28:	mov	x0, #0x0                   	// #0
  444d2c:	add	x2, x2, x1
  444d30:	str	x2, [x19, #320]
  444d34:	b	444cf0 <_obstack_memory_used@@Base+0xae88>
  444d38:	ldr	x2, [x20, #16]
  444d3c:	cbz	x2, 444e9c <_obstack_memory_used@@Base+0xb034>
  444d40:	add	x0, x1, #0x1
  444d44:	cmp	x1, #0xff
  444d48:	b.ne	444d74 <_obstack_memory_used@@Base+0xaf0c>  // b.any
  444d4c:	ldp	x3, x2, [x19, #272]
  444d50:	strb	wzr, [x19, #255]
  444d54:	mov	x0, x19
  444d58:	blr	x3
  444d5c:	ldr	x3, [x19, #320]
  444d60:	mov	x0, #0x1                   	// #1
  444d64:	mov	x1, #0x0                   	// #0
  444d68:	add	x3, x3, x0
  444d6c:	ldr	x2, [x20, #16]
  444d70:	str	x3, [x19, #320]
  444d74:	str	x0, [x19, #256]
  444d78:	mov	w0, #0x28                  	// #40
  444d7c:	strb	w0, [x19, x1]
  444d80:	strb	w0, [x19, #264]
  444d84:	mov	w1, w21
  444d88:	mov	x0, x19
  444d8c:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  444d90:	ldr	x1, [x19, #256]
  444d94:	add	x0, x1, #0x1
  444d98:	cmp	x1, #0xff
  444d9c:	b.ne	444dc4 <_obstack_memory_used@@Base+0xaf5c>  // b.any
  444da0:	ldp	x3, x2, [x19, #272]
  444da4:	strb	wzr, [x19, #255]
  444da8:	mov	x0, x19
  444dac:	blr	x3
  444db0:	ldr	x2, [x19, #320]
  444db4:	mov	x0, #0x1                   	// #1
  444db8:	mov	x1, #0x0                   	// #0
  444dbc:	add	x2, x2, x0
  444dc0:	str	x2, [x19, #320]
  444dc4:	str	x0, [x19, #256]
  444dc8:	mov	w0, #0x29                  	// #41
  444dcc:	strb	w0, [x19, x1]
  444dd0:	strb	w0, [x19, #264]
  444dd4:	ldp	x19, x20, [sp, #16]
  444dd8:	ldp	x21, x22, [sp, #32]
  444ddc:	ldp	x23, x24, [sp, #48]
  444de0:	ldp	x29, x30, [sp], #64
  444de4:	ret
  444de8:	ldr	x2, [x20, #8]
  444dec:	b	444d84 <_obstack_memory_used@@Base+0xaf1c>
  444df0:	ldp	x3, x2, [x19, #272]
  444df4:	strb	wzr, [x19, #255]
  444df8:	mov	x0, x19
  444dfc:	blr	x3
  444e00:	ldr	x2, [x19, #320]
  444e04:	mov	x0, #0x1                   	// #1
  444e08:	mov	x1, #0x0                   	// #0
  444e0c:	add	x2, x2, x0
  444e10:	str	x2, [x19, #320]
  444e14:	b	444a70 <_obstack_memory_used@@Base+0xac08>
  444e18:	ldp	x3, x2, [x19, #272]
  444e1c:	strb	wzr, [x19, #255]
  444e20:	mov	x1, x0
  444e24:	mov	x0, x19
  444e28:	blr	x3
  444e2c:	ldr	x0, [x19, #320]
  444e30:	mov	w2, #0x20                  	// #32
  444e34:	mov	x1, #0x1                   	// #1
  444e38:	strb	w2, [x19]
  444e3c:	add	x0, x0, x1
  444e40:	str	x0, [x19, #320]
  444e44:	b	444a6c <_obstack_memory_used@@Base+0xac04>
  444e48:	ldp	x3, x2, [x19, #272]
  444e4c:	strb	wzr, [x19, #255]
  444e50:	mov	x0, x19
  444e54:	blr	x3
  444e58:	ldr	x2, [x19, #320]
  444e5c:	mov	x0, #0x1                   	// #1
  444e60:	mov	x1, #0x0                   	// #0
  444e64:	add	x2, x2, x0
  444e68:	str	x2, [x19, #320]
  444e6c:	b	44491c <_obstack_memory_used@@Base+0xaab4>
  444e70:	ldp	x3, x2, [x19, #272]
  444e74:	strb	wzr, [x19, #255]
  444e78:	mov	x1, x0
  444e7c:	mov	x0, x19
  444e80:	blr	x3
  444e84:	ldr	x2, [x19, #320]
  444e88:	mov	x1, #0x1                   	// #1
  444e8c:	mov	x0, #0x0                   	// #0
  444e90:	add	x2, x2, x1
  444e94:	str	x2, [x19, #320]
  444e98:	b	444888 <_obstack_memory_used@@Base+0xaa20>
  444e9c:	ldp	x23, x24, [sp, #48]
  444ea0:	b	4448fc <_obstack_memory_used@@Base+0xaa94>
  444ea4:	nop
  444ea8:	stp	x29, x30, [sp, #-64]!
  444eac:	mov	x29, sp
  444eb0:	stp	x19, x20, [sp, #16]
  444eb4:	mov	x19, x0
  444eb8:	mov	x20, x3
  444ebc:	stp	x21, x22, [sp, #32]
  444ec0:	mov	x21, x2
  444ec4:	stp	x23, x24, [sp, #48]
  444ec8:	mov	w23, w1
  444ecc:	cbz	x3, 444f10 <_obstack_memory_used@@Base+0xb0a8>
  444ed0:	mov	x2, #0xe000000             	// #234881024
  444ed4:	mov	x4, #0x1                   	// #1
  444ed8:	movk	x2, #0x862, lsl #32
  444edc:	ldr	w0, [x3, #16]
  444ee0:	cbnz	w0, 444f10 <_obstack_memory_used@@Base+0xb0a8>
  444ee4:	ldr	x0, [x3, #8]
  444ee8:	ldr	w0, [x0]
  444eec:	cmp	w0, #0x2b
  444ef0:	b.hi	444f08 <_obstack_memory_used@@Base+0xb0a0>  // b.pmore
  444ef4:	lsl	x0, x4, x0
  444ef8:	tst	x0, x2
  444efc:	b.ne	444fd8 <_obstack_memory_used@@Base+0xb170>  // b.any
  444f00:	tst	x0, #0x1c00000000
  444f04:	b.ne	4450a4 <_obstack_memory_used@@Base+0xb23c>  // b.any
  444f08:	ldr	x3, [x3]
  444f0c:	cbnz	x3, 444edc <_obstack_memory_used@@Base+0xb074>
  444f10:	ldr	x22, [x19, #296]
  444f14:	str	xzr, [x19, #296]
  444f18:	mov	w1, w23
  444f1c:	mov	x2, x20
  444f20:	mov	x0, x19
  444f24:	mov	w3, #0x0                   	// #0
  444f28:	bl	445158 <_obstack_memory_used@@Base+0xb2f0>
  444f2c:	ldr	x1, [x19, #256]
  444f30:	cmp	x1, #0xff
  444f34:	b.eq	445068 <_obstack_memory_used@@Base+0xb200>  // b.none
  444f38:	add	x0, x1, #0x1
  444f3c:	str	x0, [x19, #256]
  444f40:	mov	w2, #0x28                  	// #40
  444f44:	strb	w2, [x19, x1]
  444f48:	strb	w2, [x19, #264]
  444f4c:	ldr	x2, [x21]
  444f50:	cbz	x2, 444f64 <_obstack_memory_used@@Base+0xb0fc>
  444f54:	mov	x0, x19
  444f58:	mov	w1, w23
  444f5c:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  444f60:	ldr	x0, [x19, #256]
  444f64:	cmp	x0, #0xff
  444f68:	b.eq	444fac <_obstack_memory_used@@Base+0xb144>  // b.none
  444f6c:	add	x1, x0, #0x1
  444f70:	str	x1, [x19, #256]
  444f74:	mov	w3, #0x29                  	// #41
  444f78:	strb	w3, [x19, x0]
  444f7c:	mov	x2, x20
  444f80:	strb	w3, [x19, #264]
  444f84:	mov	w1, w23
  444f88:	mov	x0, x19
  444f8c:	mov	w3, #0x1                   	// #1
  444f90:	bl	445158 <_obstack_memory_used@@Base+0xb2f0>
  444f94:	ldp	x23, x24, [sp, #48]
  444f98:	str	x22, [x19, #296]
  444f9c:	ldp	x19, x20, [sp, #16]
  444fa0:	ldp	x21, x22, [sp, #32]
  444fa4:	ldp	x29, x30, [sp], #64
  444fa8:	ret
  444fac:	ldp	x3, x2, [x19, #272]
  444fb0:	strb	wzr, [x19, #255]
  444fb4:	mov	x1, x0
  444fb8:	mov	x0, x19
  444fbc:	blr	x3
  444fc0:	ldr	x2, [x19, #320]
  444fc4:	mov	x1, #0x1                   	// #1
  444fc8:	mov	x0, #0x0                   	// #0
  444fcc:	add	x2, x2, x1
  444fd0:	str	x2, [x19, #320]
  444fd4:	b	444f70 <_obstack_memory_used@@Base+0xb108>
  444fd8:	ldrb	w0, [x19, #264]
  444fdc:	ldr	x1, [x19, #256]
  444fe0:	cmp	w0, #0x20
  444fe4:	b.eq	445008 <_obstack_memory_used@@Base+0xb1a0>  // b.none
  444fe8:	cmp	x1, #0xff
  444fec:	b.eq	4450e8 <_obstack_memory_used@@Base+0xb280>  // b.none
  444ff0:	add	x2, x1, #0x1
  444ff4:	str	x2, [x19, #256]
  444ff8:	mov	w0, #0x20                  	// #32
  444ffc:	strb	w0, [x19, x1]
  445000:	mov	x1, x2
  445004:	strb	w0, [x19, #264]
  445008:	cmp	x1, #0xff
  44500c:	b.eq	4450c0 <_obstack_memory_used@@Base+0xb258>  // b.none
  445010:	add	x0, x1, #0x1
  445014:	str	x0, [x19, #256]
  445018:	mov	w24, #0x28                  	// #40
  44501c:	strb	w24, [x19, x1]
  445020:	mov	x0, x19
  445024:	strb	w24, [x19, #264]
  445028:	mov	x2, x20
  44502c:	ldr	x22, [x19, #296]
  445030:	str	xzr, [x19, #296]
  445034:	mov	w1, w23
  445038:	mov	w3, #0x0                   	// #0
  44503c:	bl	445158 <_obstack_memory_used@@Base+0xb2f0>
  445040:	ldr	x0, [x19, #256]
  445044:	cmp	x0, #0xff
  445048:	b.eq	445114 <_obstack_memory_used@@Base+0xb2ac>  // b.none
  44504c:	add	x1, x0, #0x1
  445050:	str	x1, [x19, #256]
  445054:	mov	w2, #0x29                  	// #41
  445058:	strb	w2, [x19, x0]
  44505c:	strb	w2, [x19, #264]
  445060:	cmp	x1, #0xff
  445064:	b.ne	444f38 <_obstack_memory_used@@Base+0xb0d0>  // b.any
  445068:	ldp	x3, x2, [x19, #272]
  44506c:	strb	wzr, [x19, #255]
  445070:	mov	x0, x19
  445074:	blr	x3
  445078:	mov	w1, #0x28                  	// #40
  44507c:	strb	w1, [x19]
  445080:	strb	w1, [x19, #264]
  445084:	mov	x0, #0x1                   	// #1
  445088:	ldr	x1, [x19, #320]
  44508c:	ldr	x2, [x21]
  445090:	add	x1, x1, x0
  445094:	str	x0, [x19, #256]
  445098:	str	x1, [x19, #320]
  44509c:	cbnz	x2, 444f54 <_obstack_memory_used@@Base+0xb0ec>
  4450a0:	b	444f6c <_obstack_memory_used@@Base+0xb104>
  4450a4:	ldrb	w0, [x19, #264]
  4450a8:	ldr	x1, [x19, #256]
  4450ac:	and	w2, w0, #0xfffffffd
  4450b0:	cmp	w2, #0x28
  4450b4:	b.ne	444fe0 <_obstack_memory_used@@Base+0xb178>  // b.any
  4450b8:	cmp	x1, #0xff
  4450bc:	b.ne	445010 <_obstack_memory_used@@Base+0xb1a8>  // b.any
  4450c0:	ldp	x3, x2, [x19, #272]
  4450c4:	strb	wzr, [x19, #255]
  4450c8:	mov	x0, x19
  4450cc:	blr	x3
  4450d0:	ldr	x2, [x19, #320]
  4450d4:	mov	x0, #0x1                   	// #1
  4450d8:	mov	x1, #0x0                   	// #0
  4450dc:	add	x2, x2, x0
  4450e0:	str	x2, [x19, #320]
  4450e4:	b	445014 <_obstack_memory_used@@Base+0xb1ac>
  4450e8:	ldp	x3, x2, [x19, #272]
  4450ec:	strb	wzr, [x19, #255]
  4450f0:	mov	x0, x19
  4450f4:	blr	x3
  4450f8:	ldr	x0, [x19, #320]
  4450fc:	mov	w2, #0x20                  	// #32
  445100:	mov	x1, #0x1                   	// #1
  445104:	strb	w2, [x19]
  445108:	add	x0, x0, x1
  44510c:	str	x0, [x19, #320]
  445110:	b	445010 <_obstack_memory_used@@Base+0xb1a8>
  445114:	ldp	x3, x2, [x19, #272]
  445118:	strb	wzr, [x19, #255]
  44511c:	mov	x1, x0
  445120:	mov	x0, x19
  445124:	blr	x3
  445128:	strb	w24, [x19, #264]
  44512c:	mov	w0, #0x2829                	// #10281
  445130:	strh	w0, [x19]
  445134:	ldr	x1, [x19, #320]
  445138:	mov	x0, #0x2                   	// #2
  44513c:	ldr	x2, [x21]
  445140:	add	x1, x1, #0x1
  445144:	str	x0, [x19, #256]
  445148:	str	x1, [x19, #320]
  44514c:	cbnz	x2, 444f54 <_obstack_memory_used@@Base+0xb0ec>
  445150:	b	444f6c <_obstack_memory_used@@Base+0xb104>
  445154:	nop
  445158:	cbz	x2, 4453b4 <_obstack_memory_used@@Base+0xb54c>
  44515c:	stp	x29, x30, [sp, #-112]!
  445160:	mov	x29, sp
  445164:	stp	x23, x24, [sp, #48]
  445168:	mov	x24, #0x1f                  	// #31
  44516c:	movk	x24, #0x1a, lsl #48
  445170:	stp	x19, x20, [sp, #16]
  445174:	mov	w20, w1
  445178:	mov	x19, x2
  44517c:	stp	x21, x22, [sp, #32]
  445180:	mov	w21, w3
  445184:	mov	w22, #0x1                   	// #1
  445188:	stp	x25, x26, [sp, #64]
  44518c:	mov	x26, x0
  445190:	mov	x25, #0x1                   	// #1
  445194:	b	4451d8 <_obstack_memory_used@@Base+0xb370>
  445198:	ldr	x1, [x19, #24]
  44519c:	cmp	w5, #0x29
  4451a0:	ldr	x23, [x26, #288]
  4451a4:	str	w22, [x19, #16]
  4451a8:	str	x1, [x26, #288]
  4451ac:	b.eq	445224 <_obstack_memory_used@@Base+0xb3bc>  // b.none
  4451b0:	cmp	w5, #0x2a
  4451b4:	b.eq	445254 <_obstack_memory_used@@Base+0xb3ec>  // b.none
  4451b8:	cmp	w5, #0x2
  4451bc:	b.eq	445284 <_obstack_memory_used@@Base+0xb41c>  // b.none
  4451c0:	mov	w1, w20
  4451c4:	mov	x0, x26
  4451c8:	bl	4446a8 <_obstack_memory_used@@Base+0xa840>
  4451cc:	str	x23, [x26, #288]
  4451d0:	ldr	x19, [x19]
  4451d4:	cbz	x19, 44523c <_obstack_memory_used@@Base+0xb3d4>
  4451d8:	ldr	w2, [x26, #304]
  4451dc:	cbnz	w2, 44523c <_obstack_memory_used@@Base+0xb3d4>
  4451e0:	ldr	w2, [x19, #16]
  4451e4:	cbnz	w2, 4451d0 <_obstack_memory_used@@Base+0xb368>
  4451e8:	ldr	x2, [x19, #8]
  4451ec:	ldr	w5, [x2]
  4451f0:	cbnz	w21, 445198 <_obstack_memory_used@@Base+0xb330>
  4451f4:	sub	w4, w5, #0x1c
  4451f8:	cmp	w4, #0x34
  4451fc:	b.hi	445198 <_obstack_memory_used@@Base+0xb330>  // b.pmore
  445200:	lsl	x4, x25, x4
  445204:	tst	x4, x24
  445208:	b.ne	4451d0 <_obstack_memory_used@@Base+0xb368>  // b.any
  44520c:	ldr	x1, [x19, #24]
  445210:	cmp	w5, #0x29
  445214:	ldr	x23, [x26, #288]
  445218:	str	w22, [x19, #16]
  44521c:	str	x1, [x26, #288]
  445220:	b.ne	4451b0 <_obstack_memory_used@@Base+0xb348>  // b.any
  445224:	ldr	x3, [x19]
  445228:	add	x2, x2, #0x10
  44522c:	mov	w1, w20
  445230:	mov	x0, x26
  445234:	bl	444ea8 <_obstack_memory_used@@Base+0xb040>
  445238:	str	x23, [x26, #288]
  44523c:	ldp	x19, x20, [sp, #16]
  445240:	ldp	x21, x22, [sp, #32]
  445244:	ldp	x23, x24, [sp, #48]
  445248:	ldp	x25, x26, [sp, #64]
  44524c:	ldp	x29, x30, [sp], #112
  445250:	ret
  445254:	ldr	x3, [x19]
  445258:	mov	w1, w20
  44525c:	mov	x0, x26
  445260:	add	x2, x2, #0x8
  445264:	bl	445528 <_obstack_memory_used@@Base+0xb6c0>
  445268:	str	x23, [x26, #288]
  44526c:	ldp	x19, x20, [sp, #16]
  445270:	ldp	x21, x22, [sp, #32]
  445274:	ldp	x23, x24, [sp, #48]
  445278:	ldp	x25, x26, [sp, #64]
  44527c:	ldp	x29, x30, [sp], #112
  445280:	ret
  445284:	ldr	x2, [x2, #8]
  445288:	mov	w1, w20
  44528c:	ldr	x21, [x26, #296]
  445290:	str	xzr, [x26, #296]
  445294:	mov	x0, x26
  445298:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  44529c:	str	x21, [x26, #296]
  4452a0:	tbz	w20, #2, 445358 <_obstack_memory_used@@Base+0xb4f0>
  4452a4:	ldr	x1, [x26, #256]
  4452a8:	add	x0, x1, #0x1
  4452ac:	cmp	x1, #0xff
  4452b0:	b.ne	4452d8 <_obstack_memory_used@@Base+0xb470>  // b.any
  4452b4:	ldp	x3, x2, [x26, #272]
  4452b8:	strb	wzr, [x26, #255]
  4452bc:	mov	x0, x26
  4452c0:	blr	x3
  4452c4:	ldr	x2, [x26, #320]
  4452c8:	mov	x0, #0x1                   	// #1
  4452cc:	mov	x1, #0x0                   	// #0
  4452d0:	add	x2, x2, x0
  4452d4:	str	x2, [x26, #320]
  4452d8:	str	x0, [x26, #256]
  4452dc:	mov	w0, #0x2e                  	// #46
  4452e0:	strb	w0, [x26, x1]
  4452e4:	strb	w0, [x26, #264]
  4452e8:	ldr	x0, [x19, #8]
  4452ec:	ldr	x21, [x0, #16]
  4452f0:	ldr	w2, [x21]
  4452f4:	cmp	w2, #0x47
  4452f8:	b.eq	4453b8 <_obstack_memory_used@@Base+0xb550>  // b.none
  4452fc:	mov	x1, #0x1f                  	// #31
  445300:	mov	x3, #0x1                   	// #1
  445304:	movk	x1, #0x1a, lsl #48
  445308:	sub	w2, w2, #0x1c
  44530c:	cmp	w2, #0x34
  445310:	b.hi	445320 <_obstack_memory_used@@Base+0xb4b8>  // b.pmore
  445314:	lsl	x2, x3, x2
  445318:	tst	x2, x1
  44531c:	b.ne	44534c <_obstack_memory_used@@Base+0xb4e4>  // b.any
  445320:	mov	x2, x21
  445324:	mov	w1, w20
  445328:	mov	x0, x26
  44532c:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  445330:	str	x23, [x26, #288]
  445334:	ldp	x19, x20, [sp, #16]
  445338:	ldp	x21, x22, [sp, #32]
  44533c:	ldp	x23, x24, [sp, #48]
  445340:	ldp	x25, x26, [sp, #64]
  445344:	ldp	x29, x30, [sp], #112
  445348:	ret
  44534c:	ldr	x21, [x21, #8]
  445350:	ldr	w2, [x21]
  445354:	b	445308 <_obstack_memory_used@@Base+0xb4a0>
  445358:	mov	x22, #0x0                   	// #0
  44535c:	mov	w21, #0x3a                  	// #58
  445360:	ldr	x1, [x26, #256]
  445364:	b	445384 <_obstack_memory_used@@Base+0xb51c>
  445368:	mov	x0, x1
  44536c:	add	x1, x1, #0x1
  445370:	str	x1, [x26, #256]
  445374:	strb	w21, [x26, x0]
  445378:	strb	w21, [x26, #264]
  44537c:	cbnz	x22, 4452e8 <_obstack_memory_used@@Base+0xb480>
  445380:	mov	x22, #0x1                   	// #1
  445384:	cmp	x1, #0xff
  445388:	b.ne	445368 <_obstack_memory_used@@Base+0xb500>  // b.any
  44538c:	ldp	x3, x2, [x26, #272]
  445390:	strb	wzr, [x26, #255]
  445394:	mov	x0, x26
  445398:	blr	x3
  44539c:	ldr	x2, [x26, #320]
  4453a0:	mov	x1, #0x1                   	// #1
  4453a4:	mov	x0, #0x0                   	// #0
  4453a8:	add	x2, x2, x1
  4453ac:	str	x2, [x26, #320]
  4453b0:	b	445370 <_obstack_memory_used@@Base+0xb508>
  4453b4:	ret
  4453b8:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1d198>
  4453bc:	add	x24, x24, #0xa40
  4453c0:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1d198>
  4453c4:	add	x24, x24, #0xd
  4453c8:	add	x22, x22, #0xa41
  4453cc:	mov	w19, #0x7b                  	// #123
  4453d0:	ldr	x1, [x26, #256]
  4453d4:	b	4453f8 <_obstack_memory_used@@Base+0xb590>
  4453d8:	mov	x0, x1
  4453dc:	add	x1, x1, #0x1
  4453e0:	str	x1, [x26, #256]
  4453e4:	cmp	x22, x24
  4453e8:	strb	w19, [x26, x0]
  4453ec:	strb	w19, [x26, #264]
  4453f0:	b.eq	445428 <_obstack_memory_used@@Base+0xb5c0>  // b.none
  4453f4:	ldrb	w19, [x22], #1
  4453f8:	cmp	x1, #0xff
  4453fc:	b.ne	4453d8 <_obstack_memory_used@@Base+0xb570>  // b.any
  445400:	ldp	x3, x2, [x26, #272]
  445404:	strb	wzr, [x26, #255]
  445408:	mov	x0, x26
  44540c:	blr	x3
  445410:	ldr	x2, [x26, #320]
  445414:	mov	x1, #0x1                   	// #1
  445418:	mov	x0, #0x0                   	// #0
  44541c:	add	x2, x2, x1
  445420:	str	x2, [x26, #320]
  445424:	b	4453e0 <_obstack_memory_used@@Base+0xb578>
  445428:	ldr	w2, [x21, #16]
  44542c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  445430:	add	x1, x1, #0xa50
  445434:	add	x19, sp, #0x50
  445438:	add	w2, w2, #0x1
  44543c:	mov	x0, x19
  445440:	bl	4023d0 <sprintf@plt>
  445444:	mov	x0, x19
  445448:	bl	402330 <strlen@plt>
  44544c:	ldr	x1, [x26, #256]
  445450:	cbz	x0, 4454b0 <_obstack_memory_used@@Base+0xb648>
  445454:	add	x24, x19, x0
  445458:	b	44547c <_obstack_memory_used@@Base+0xb614>
  44545c:	mov	x0, x1
  445460:	add	x1, x1, #0x1
  445464:	str	x1, [x26, #256]
  445468:	add	x19, x19, #0x1
  44546c:	strb	w22, [x26, x0]
  445470:	cmp	x24, x19
  445474:	strb	w22, [x26, #264]
  445478:	b.eq	4454b0 <_obstack_memory_used@@Base+0xb648>  // b.none
  44547c:	ldrb	w22, [x19]
  445480:	cmp	x1, #0xff
  445484:	b.ne	44545c <_obstack_memory_used@@Base+0xb5f4>  // b.any
  445488:	ldp	x3, x2, [x26, #272]
  44548c:	strb	wzr, [x26, #255]
  445490:	mov	x0, x26
  445494:	blr	x3
  445498:	ldr	x2, [x26, #320]
  44549c:	mov	x1, #0x1                   	// #1
  4454a0:	mov	x0, #0x0                   	// #0
  4454a4:	add	x2, x2, x1
  4454a8:	str	x2, [x26, #320]
  4454ac:	b	445464 <_obstack_memory_used@@Base+0xb5fc>
  4454b0:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x1d198>
  4454b4:	add	x19, x19, #0xa58
  4454b8:	add	x24, x19, #0x3
  4454bc:	mov	w22, #0x7d                  	// #125
  4454c0:	b	4454e8 <_obstack_memory_used@@Base+0xb680>
  4454c4:	mov	x0, x1
  4454c8:	add	x1, x1, #0x1
  4454cc:	str	x1, [x26, #256]
  4454d0:	add	x19, x19, #0x1
  4454d4:	strb	w22, [x26, x0]
  4454d8:	cmp	x24, x19
  4454dc:	strb	w22, [x26, #264]
  4454e0:	b.eq	445518 <_obstack_memory_used@@Base+0xb6b0>  // b.none
  4454e4:	ldrb	w22, [x19]
  4454e8:	cmp	x1, #0xff
  4454ec:	b.ne	4454c4 <_obstack_memory_used@@Base+0xb65c>  // b.any
  4454f0:	ldp	x3, x2, [x26, #272]
  4454f4:	strb	wzr, [x26, #255]
  4454f8:	mov	x0, x26
  4454fc:	blr	x3
  445500:	ldr	x2, [x26, #320]
  445504:	mov	x1, #0x1                   	// #1
  445508:	mov	x0, #0x0                   	// #0
  44550c:	add	x2, x2, x1
  445510:	str	x2, [x26, #320]
  445514:	b	4454cc <_obstack_memory_used@@Base+0xb664>
  445518:	ldr	x21, [x21, #8]
  44551c:	ldr	w2, [x21]
  445520:	b	4452fc <_obstack_memory_used@@Base+0xb494>
  445524:	nop
  445528:	stp	x29, x30, [sp, #-64]!
  44552c:	mov	x29, sp
  445530:	stp	x19, x20, [sp, #16]
  445534:	mov	x19, x0
  445538:	mov	x20, x3
  44553c:	stp	x21, x22, [sp, #32]
  445540:	mov	x0, x3
  445544:	mov	w21, w1
  445548:	stp	x23, x24, [sp, #48]
  44554c:	mov	x22, x2
  445550:	cbz	x3, 44557c <_obstack_memory_used@@Base+0xb714>
  445554:	nop
  445558:	ldr	w4, [x0, #16]
  44555c:	cbz	w4, 445668 <_obstack_memory_used@@Base+0xb800>
  445560:	ldr	x0, [x0]
  445564:	cbnz	x0, 445558 <_obstack_memory_used@@Base+0xb6f0>
  445568:	mov	x2, x20
  44556c:	mov	w1, w21
  445570:	mov	x0, x19
  445574:	mov	w3, #0x0                   	// #0
  445578:	bl	445158 <_obstack_memory_used@@Base+0xb2f0>
  44557c:	ldr	x23, [x19, #256]
  445580:	cmp	x23, #0xff
  445584:	b.eq	445694 <_obstack_memory_used@@Base+0xb82c>  // b.none
  445588:	add	x1, x23, #0x1
  44558c:	str	x1, [x19, #256]
  445590:	mov	w0, #0x20                  	// #32
  445594:	strb	w0, [x19, x23]
  445598:	strb	w0, [x19, #264]
  44559c:	cmp	x1, #0xff
  4455a0:	b.eq	44562c <_obstack_memory_used@@Base+0xb7c4>  // b.none
  4455a4:	add	x0, x1, #0x1
  4455a8:	str	x0, [x19, #256]
  4455ac:	mov	w2, #0x5b                  	// #91
  4455b0:	strb	w2, [x19, x1]
  4455b4:	strb	w2, [x19, #264]
  4455b8:	ldr	x2, [x22]
  4455bc:	cbz	x2, 4455d0 <_obstack_memory_used@@Base+0xb768>
  4455c0:	mov	x0, x19
  4455c4:	mov	w1, w21
  4455c8:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4455cc:	ldr	x0, [x19, #256]
  4455d0:	cmp	x0, #0xff
  4455d4:	b.eq	445600 <_obstack_memory_used@@Base+0xb798>  // b.none
  4455d8:	add	x1, x0, #0x1
  4455dc:	str	x1, [x19, #256]
  4455e0:	mov	w1, #0x5d                  	// #93
  4455e4:	strb	w1, [x19, x0]
  4455e8:	strb	w1, [x19, #264]
  4455ec:	ldp	x19, x20, [sp, #16]
  4455f0:	ldp	x21, x22, [sp, #32]
  4455f4:	ldp	x23, x24, [sp, #48]
  4455f8:	ldp	x29, x30, [sp], #64
  4455fc:	ret
  445600:	ldp	x3, x2, [x19, #272]
  445604:	strb	wzr, [x19, #255]
  445608:	mov	x1, x0
  44560c:	mov	x0, x19
  445610:	blr	x3
  445614:	ldr	x2, [x19, #320]
  445618:	mov	x1, #0x1                   	// #1
  44561c:	mov	x0, #0x0                   	// #0
  445620:	add	x2, x2, x1
  445624:	str	x2, [x19, #320]
  445628:	b	4455dc <_obstack_memory_used@@Base+0xb774>
  44562c:	ldp	x3, x2, [x19, #272]
  445630:	strb	wzr, [x19, #255]
  445634:	mov	x0, x19
  445638:	blr	x3
  44563c:	mov	w1, #0x5b                  	// #91
  445640:	strb	w1, [x19]
  445644:	strb	w1, [x19, #264]
  445648:	mov	x0, #0x1                   	// #1
  44564c:	ldr	x1, [x19, #320]
  445650:	ldr	x2, [x22]
  445654:	add	x1, x1, x0
  445658:	str	x0, [x19, #256]
  44565c:	str	x1, [x19, #320]
  445660:	cbnz	x2, 4455c0 <_obstack_memory_used@@Base+0xb758>
  445664:	b	4455d8 <_obstack_memory_used@@Base+0xb770>
  445668:	ldr	x0, [x0, #8]
  44566c:	ldr	w0, [x0]
  445670:	cmp	w0, #0x2a
  445674:	b.ne	4456d8 <_obstack_memory_used@@Base+0xb870>  // b.any
  445678:	mov	w1, w21
  44567c:	mov	x2, x20
  445680:	mov	x0, x19
  445684:	mov	w3, #0x0                   	// #0
  445688:	bl	445158 <_obstack_memory_used@@Base+0xb2f0>
  44568c:	ldr	x1, [x19, #256]
  445690:	b	44559c <_obstack_memory_used@@Base+0xb734>
  445694:	ldp	x3, x2, [x19, #272]
  445698:	strb	wzr, [x19, #255]
  44569c:	mov	x1, x23
  4456a0:	mov	x0, x19
  4456a4:	blr	x3
  4456a8:	mov	w1, #0x5b20                	// #23328
  4456ac:	mov	w0, #0x5b                  	// #91
  4456b0:	strh	w1, [x19]
  4456b4:	strb	w0, [x19, #264]
  4456b8:	mov	x0, #0x2                   	// #2
  4456bc:	ldr	x1, [x19, #320]
  4456c0:	ldr	x2, [x22]
  4456c4:	add	x1, x1, #0x1
  4456c8:	str	x0, [x19, #256]
  4456cc:	str	x1, [x19, #320]
  4456d0:	cbnz	x2, 4455c0 <_obstack_memory_used@@Base+0xb758>
  4456d4:	b	4455d8 <_obstack_memory_used@@Base+0xb770>
  4456d8:	mov	w24, #0x20                  	// #32
  4456dc:	mov	x23, #0x0                   	// #0
  4456e0:	ldr	x1, [x19, #256]
  4456e4:	b	44570c <_obstack_memory_used@@Base+0xb8a4>
  4456e8:	mov	x0, x1
  4456ec:	add	x1, x1, #0x1
  4456f0:	str	x1, [x19, #256]
  4456f4:	cmp	x23, #0x1
  4456f8:	strb	w24, [x19, x0]
  4456fc:	strb	w24, [x19, #264]
  445700:	mov	w24, #0x28                  	// #40
  445704:	b.eq	445750 <_obstack_memory_used@@Base+0xb8e8>  // b.none
  445708:	mov	x23, #0x1                   	// #1
  44570c:	cmp	x1, #0xff
  445710:	b.ne	4456e8 <_obstack_memory_used@@Base+0xb880>  // b.any
  445714:	ldp	x3, x2, [x19, #272]
  445718:	strb	wzr, [x19, #255]
  44571c:	mov	x0, x19
  445720:	blr	x3
  445724:	ldr	x2, [x19, #320]
  445728:	mov	x0, #0x0                   	// #0
  44572c:	mov	x1, #0x1                   	// #1
  445730:	str	x1, [x19, #256]
  445734:	add	x2, x2, x1
  445738:	str	x2, [x19, #320]
  44573c:	strb	w24, [x19, x0]
  445740:	cmp	x23, #0x1
  445744:	strb	w24, [x19, #264]
  445748:	mov	w24, #0x28                  	// #40
  44574c:	b.ne	445708 <_obstack_memory_used@@Base+0xb8a0>  // b.any
  445750:	mov	w1, w21
  445754:	mov	x2, x20
  445758:	mov	x0, x19
  44575c:	mov	w3, #0x0                   	// #0
  445760:	bl	445158 <_obstack_memory_used@@Base+0xb2f0>
  445764:	ldr	x1, [x19, #256]
  445768:	cmp	x1, #0xff
  44576c:	b.eq	445788 <_obstack_memory_used@@Base+0xb920>  // b.none
  445770:	add	x23, x1, #0x1
  445774:	str	x23, [x19, #256]
  445778:	mov	w0, #0x29                  	// #41
  44577c:	strb	w0, [x19, x1]
  445780:	strb	w0, [x19, #264]
  445784:	b	445580 <_obstack_memory_used@@Base+0xb718>
  445788:	ldp	x3, x2, [x19, #272]
  44578c:	strb	wzr, [x19, #255]
  445790:	mov	x0, x19
  445794:	blr	x3
  445798:	ldr	x0, [x19, #320]
  44579c:	mov	w1, #0x29                  	// #41
  4457a0:	strb	w1, [x19]
  4457a4:	add	x0, x0, #0x1
  4457a8:	str	x0, [x19, #320]
  4457ac:	b	445588 <_obstack_memory_used@@Base+0xb720>
  4457b0:	ldr	w4, [x2]
  4457b4:	cmp	w4, #0x32
  4457b8:	b.eq	4457c0 <_obstack_memory_used@@Base+0xb958>  // b.none
  4457bc:	b	444610 <_obstack_memory_used@@Base+0xa7a8>
  4457c0:	stp	x29, x30, [sp, #-48]!
  4457c4:	mov	x29, sp
  4457c8:	stp	x19, x20, [sp, #16]
  4457cc:	mov	x19, x0
  4457d0:	ldr	x0, [x2, #8]
  4457d4:	stp	x21, x22, [sp, #32]
  4457d8:	ldrsw	x22, [x0, #16]
  4457dc:	ldr	x20, [x0, #8]
  4457e0:	cbz	x22, 445858 <_obstack_memory_used@@Base+0xb9f0>
  4457e4:	add	x22, x20, x22
  4457e8:	ldr	x1, [x19, #256]
  4457ec:	b	445810 <_obstack_memory_used@@Base+0xb9a8>
  4457f0:	mov	x2, x1
  4457f4:	add	x1, x1, #0x1
  4457f8:	str	x1, [x19, #256]
  4457fc:	add	x20, x20, #0x1
  445800:	cmp	x20, x22
  445804:	strb	w21, [x19, x2]
  445808:	strb	w21, [x19, #264]
  44580c:	b.eq	445858 <_obstack_memory_used@@Base+0xb9f0>  // b.none
  445810:	ldrb	w21, [x20]
  445814:	cmp	x1, #0xff
  445818:	b.ne	4457f0 <_obstack_memory_used@@Base+0xb988>  // b.any
  44581c:	ldp	x3, x2, [x19, #272]
  445820:	strb	wzr, [x19, #255]
  445824:	mov	x0, x19
  445828:	add	x20, x20, #0x1
  44582c:	blr	x3
  445830:	ldr	x0, [x19, #320]
  445834:	mov	x2, #0x0                   	// #0
  445838:	mov	x1, #0x1                   	// #1
  44583c:	str	x1, [x19, #256]
  445840:	add	x0, x0, x1
  445844:	str	x0, [x19, #320]
  445848:	strb	w21, [x19, x2]
  44584c:	cmp	x20, x22
  445850:	strb	w21, [x19, #264]
  445854:	b.ne	445810 <_obstack_memory_used@@Base+0xb9a8>  // b.any
  445858:	ldp	x19, x20, [sp, #16]
  44585c:	ldp	x21, x22, [sp, #32]
  445860:	ldp	x29, x30, [sp], #48
  445864:	ret
  445868:	stp	x29, x30, [sp, #-48]!
  44586c:	mov	x29, sp
  445870:	str	x21, [sp, #32]
  445874:	mov	w21, w1
  445878:	ldr	w1, [x2]
  44587c:	stp	x19, x20, [sp, #16]
  445880:	mov	x20, x2
  445884:	cmp	w1, #0x31
  445888:	mov	x19, x0
  44588c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  445890:	b.ls	445920 <_obstack_memory_used@@Base+0xbab8>  // b.plast
  445894:	cmp	w1, #0x6
  445898:	b.eq	445920 <_obstack_memory_used@@Base+0xbab8>  // b.none
  44589c:	ldr	x1, [x0, #256]
  4458a0:	cmp	x1, #0xff
  4458a4:	b.eq	44593c <_obstack_memory_used@@Base+0xbad4>  // b.none
  4458a8:	add	x0, x1, #0x1
  4458ac:	str	x0, [x19, #256]
  4458b0:	mov	w0, #0x28                  	// #40
  4458b4:	strb	w0, [x19, x1]
  4458b8:	mov	x2, x20
  4458bc:	strb	w0, [x19, #264]
  4458c0:	mov	w1, w21
  4458c4:	mov	x0, x19
  4458c8:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  4458cc:	ldr	x1, [x19, #256]
  4458d0:	add	x0, x1, #0x1
  4458d4:	cmp	x1, #0xff
  4458d8:	b.ne	445900 <_obstack_memory_used@@Base+0xba98>  // b.any
  4458dc:	ldp	x3, x2, [x19, #272]
  4458e0:	strb	wzr, [x19, #255]
  4458e4:	mov	x0, x19
  4458e8:	blr	x3
  4458ec:	ldr	x2, [x19, #320]
  4458f0:	mov	x0, #0x1                   	// #1
  4458f4:	mov	x1, #0x0                   	// #0
  4458f8:	add	x2, x2, x0
  4458fc:	str	x2, [x19, #320]
  445900:	str	x0, [x19, #256]
  445904:	mov	w0, #0x29                  	// #41
  445908:	strb	w0, [x19, x1]
  44590c:	strb	w0, [x19, #264]
  445910:	ldp	x19, x20, [sp, #16]
  445914:	ldr	x21, [sp, #32]
  445918:	ldp	x29, x30, [sp], #48
  44591c:	ret
  445920:	mov	x2, x20
  445924:	mov	w1, w21
  445928:	mov	x0, x19
  44592c:	ldp	x19, x20, [sp, #16]
  445930:	ldr	x21, [sp, #32]
  445934:	ldp	x29, x30, [sp], #48
  445938:	b	444610 <_obstack_memory_used@@Base+0xa7a8>
  44593c:	ldp	x3, x2, [x0, #272]
  445940:	strb	wzr, [x0, #255]
  445944:	blr	x3
  445948:	ldr	x2, [x19, #320]
  44594c:	mov	x0, #0x1                   	// #1
  445950:	mov	x1, #0x0                   	// #0
  445954:	add	x2, x2, x0
  445958:	str	x2, [x19, #320]
  44595c:	b	4458ac <_obstack_memory_used@@Base+0xba44>
  445960:	stp	x29, x30, [sp, #-80]!
  445964:	mov	x29, sp
  445968:	stp	x19, x20, [sp, #16]
  44596c:	mov	x19, x0
  445970:	ldr	x0, [x2, #8]
  445974:	stp	x21, x22, [sp, #32]
  445978:	mov	w22, w1
  44597c:	ldr	x0, [x0]
  445980:	ldrb	w1, [x0]
  445984:	cmp	w1, #0x66
  445988:	b.ne	445b1c <_obstack_memory_used@@Base+0xbcb4>  // b.any
  44598c:	ldr	x1, [x3]
  445990:	stp	x23, x24, [sp, #48]
  445994:	stp	x25, x26, [sp, #64]
  445998:	mov	x25, #0x0                   	// #0
  44599c:	ldp	x23, x26, [x1, #8]
  4459a0:	ldr	w1, [x26]
  4459a4:	cmp	w1, #0x3c
  4459a8:	b.eq	445be4 <_obstack_memory_used@@Base+0xbd7c>  // b.none
  4459ac:	ldr	w21, [x19, #316]
  4459b0:	mov	w1, #0xffffffff            	// #-1
  4459b4:	str	w1, [x19, #316]
  4459b8:	ldrb	w0, [x0, #1]
  4459bc:	cmp	w0, #0x6c
  4459c0:	b.eq	445c04 <_obstack_memory_used@@Base+0xbd9c>  // b.none
  4459c4:	b.hi	445b30 <_obstack_memory_used@@Base+0xbcc8>  // b.pmore
  4459c8:	cmp	w0, #0x4c
  4459cc:	b.eq	4459d8 <_obstack_memory_used@@Base+0xbb70>  // b.none
  4459d0:	cmp	w0, #0x52
  4459d4:	b.ne	445afc <_obstack_memory_used@@Base+0xbc94>  // b.any
  4459d8:	ldr	x1, [x19, #256]
  4459dc:	add	x0, x1, #0x1
  4459e0:	cmp	x1, #0xff
  4459e4:	b.eq	445cc4 <_obstack_memory_used@@Base+0xbe5c>  // b.none
  4459e8:	str	x0, [x19, #256]
  4459ec:	mov	w0, #0x28                  	// #40
  4459f0:	strb	w0, [x19, x1]
  4459f4:	mov	x2, x26
  4459f8:	strb	w0, [x19, #264]
  4459fc:	mov	w1, w22
  445a00:	mov	x0, x19
  445a04:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  445a08:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  445a0c:	add	x20, x20, #0xcd0
  445a10:	mov	w1, w22
  445a14:	mov	x2, x23
  445a18:	mov	x0, x19
  445a1c:	bl	4457b0 <_obstack_memory_used@@Base+0xb948>
  445a20:	add	x26, x20, #0x3
  445a24:	mov	w24, #0x2e                  	// #46
  445a28:	ldr	x1, [x19, #256]
  445a2c:	b	445a54 <_obstack_memory_used@@Base+0xbbec>
  445a30:	mov	x0, x1
  445a34:	add	x1, x1, #0x1
  445a38:	str	x1, [x19, #256]
  445a3c:	add	x20, x20, #0x1
  445a40:	cmp	x26, x20
  445a44:	strb	w24, [x19, x0]
  445a48:	strb	w24, [x19, #264]
  445a4c:	b.eq	445a98 <_obstack_memory_used@@Base+0xbc30>  // b.none
  445a50:	ldrb	w24, [x20]
  445a54:	cmp	x1, #0xff
  445a58:	b.ne	445a30 <_obstack_memory_used@@Base+0xbbc8>  // b.any
  445a5c:	ldp	x3, x2, [x19, #272]
  445a60:	strb	wzr, [x19, #255]
  445a64:	mov	x0, x19
  445a68:	add	x20, x20, #0x1
  445a6c:	blr	x3
  445a70:	ldr	x2, [x19, #320]
  445a74:	mov	x0, #0x0                   	// #0
  445a78:	mov	x1, #0x1                   	// #1
  445a7c:	str	x1, [x19, #256]
  445a80:	add	x2, x2, x1
  445a84:	str	x2, [x19, #320]
  445a88:	strb	w24, [x19, x0]
  445a8c:	cmp	x26, x20
  445a90:	strb	w24, [x19, #264]
  445a94:	b.ne	445a50 <_obstack_memory_used@@Base+0xbbe8>  // b.any
  445a98:	mov	x2, x23
  445a9c:	mov	w1, w22
  445aa0:	mov	x0, x19
  445aa4:	bl	4457b0 <_obstack_memory_used@@Base+0xb948>
  445aa8:	mov	x2, x25
  445aac:	mov	w1, w22
  445ab0:	mov	x0, x19
  445ab4:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  445ab8:	ldr	x1, [x19, #256]
  445abc:	add	x0, x1, #0x1
  445ac0:	cmp	x1, #0xff
  445ac4:	b.ne	445aec <_obstack_memory_used@@Base+0xbc84>  // b.any
  445ac8:	ldp	x3, x2, [x19, #272]
  445acc:	strb	wzr, [x19, #255]
  445ad0:	mov	x0, x19
  445ad4:	blr	x3
  445ad8:	ldr	x2, [x19, #320]
  445adc:	mov	x0, #0x1                   	// #1
  445ae0:	mov	x1, #0x0                   	// #0
  445ae4:	add	x2, x2, x0
  445ae8:	str	x2, [x19, #320]
  445aec:	str	x0, [x19, #256]
  445af0:	mov	w0, #0x29                  	// #41
  445af4:	strb	w0, [x19, x1]
  445af8:	strb	w0, [x19, #264]
  445afc:	ldp	x23, x24, [sp, #48]
  445b00:	mov	w0, #0x1                   	// #1
  445b04:	ldp	x25, x26, [sp, #64]
  445b08:	str	w21, [x19, #316]
  445b0c:	ldp	x19, x20, [sp, #16]
  445b10:	ldp	x21, x22, [sp, #32]
  445b14:	ldp	x29, x30, [sp], #80
  445b18:	ret
  445b1c:	mov	w0, #0x0                   	// #0
  445b20:	ldp	x19, x20, [sp, #16]
  445b24:	ldp	x21, x22, [sp, #32]
  445b28:	ldp	x29, x30, [sp], #80
  445b2c:	ret
  445b30:	cmp	w0, #0x72
  445b34:	b.ne	445afc <_obstack_memory_used@@Base+0xbc94>  // b.any
  445b38:	ldr	x1, [x19, #256]
  445b3c:	add	x0, x1, #0x1
  445b40:	cmp	x1, #0xff
  445b44:	b.eq	445c9c <_obstack_memory_used@@Base+0xbe34>  // b.none
  445b48:	str	x0, [x19, #256]
  445b4c:	mov	w0, #0x28                  	// #40
  445b50:	strb	w0, [x19, x1]
  445b54:	mov	x2, x26
  445b58:	strb	w0, [x19, #264]
  445b5c:	mov	w1, w22
  445b60:	mov	x0, x19
  445b64:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  445b68:	bl	445868 <_obstack_memory_used@@Base+0xba00>
  445b6c:	add	x20, x20, #0xdf0
  445b70:	mov	w1, w22
  445b74:	mov	x2, x23
  445b78:	mov	x0, x19
  445b7c:	bl	4457b0 <_obstack_memory_used@@Base+0xb948>
  445b80:	add	x22, x20, #0x4
  445b84:	mov	w24, #0x2e                  	// #46
  445b88:	ldr	x1, [x19, #256]
  445b8c:	b	445bb4 <_obstack_memory_used@@Base+0xbd4c>
  445b90:	mov	x0, x1
  445b94:	add	x1, x1, #0x1
  445b98:	str	x1, [x19, #256]
  445b9c:	add	x20, x20, #0x1
  445ba0:	strb	w24, [x19, x0]
  445ba4:	cmp	x20, x22
  445ba8:	strb	w24, [x19, #264]
  445bac:	b.eq	445afc <_obstack_memory_used@@Base+0xbc94>  // b.none
  445bb0:	ldrb	w24, [x20]
  445bb4:	cmp	x1, #0xff
  445bb8:	b.ne	445b90 <_obstack_memory_used@@Base+0xbd28>  // b.any
  445bbc:	ldp	x3, x2, [x19, #272]
  445bc0:	strb	wzr, [x19, #255]
  445bc4:	mov	x0, x19
  445bc8:	blr	x3
  445bcc:	ldr	x2, [x19, #320]
  445bd0:	mov	x1, #0x1                   	// #1
  445bd4:	mov	x0, #0x0                   	// #0
  445bd8:	add	x2, x2, x1
  445bdc:	str	x2, [x19, #320]
  445be0:	b	445b98 <_obstack_memory_used@@Base+0xbd30>
  445be4:	ldr	w21, [x19, #316]
  445be8:	mov	w1, #0xffffffff            	// #-1
  445bec:	ldr	x25, [x26, #16]
  445bf0:	ldr	x26, [x26, #8]
  445bf4:	str	w1, [x19, #316]
  445bf8:	ldrb	w0, [x0, #1]
  445bfc:	cmp	w0, #0x6c
  445c00:	b.ne	4459c4 <_obstack_memory_used@@Base+0xbb5c>  // b.any
  445c04:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1d198>
  445c08:	add	x20, x20, #0xde8
  445c0c:	add	x25, x20, #0x4
  445c10:	mov	w24, #0x28                  	// #40
  445c14:	ldr	x1, [x19, #256]
  445c18:	b	445c40 <_obstack_memory_used@@Base+0xbdd8>
  445c1c:	mov	x0, x1
  445c20:	add	x1, x1, #0x1
  445c24:	str	x1, [x19, #256]
  445c28:	add	x20, x20, #0x1
  445c2c:	cmp	x25, x20
  445c30:	strb	w24, [x19, x0]
  445c34:	strb	w24, [x19, #264]
  445c38:	b.eq	445c84 <_obstack_memory_used@@Base+0xbe1c>  // b.none
  445c3c:	ldrb	w24, [x20]
  445c40:	cmp	x1, #0xff
  445c44:	b.ne	445c1c <_obstack_memory_used@@Base+0xbdb4>  // b.any
  445c48:	ldp	x3, x2, [x19, #272]
  445c4c:	strb	wzr, [x19, #255]
  445c50:	mov	x0, x19
  445c54:	add	x20, x20, #0x1
  445c58:	blr	x3
  445c5c:	ldr	x2, [x19, #320]
  445c60:	mov	x0, #0x0                   	// #0
  445c64:	mov	x1, #0x1                   	// #1
  445c68:	str	x1, [x19, #256]
  445c6c:	add	x2, x2, x1
  445c70:	str	x2, [x19, #320]
  445c74:	strb	w24, [x19, x0]
  445c78:	cmp	x25, x20
  445c7c:	strb	w24, [x19, #264]
  445c80:	b.ne	445c3c <_obstack_memory_used@@Base+0xbdd4>  // b.any
  445c84:	mov	x2, x23
  445c88:	mov	w1, w22
  445c8c:	mov	x0, x19
  445c90:	bl	4457b0 <_obstack_memory_used@@Base+0xb948>
  445c94:	mov	x2, x26
  445c98:	b	445aac <_obstack_memory_used@@Base+0xbc44>
  445c9c:	ldp	x3, x2, [x19, #272]
  445ca0:	strb	wzr, [x19, #255]
  445ca4:	mov	x0, x19
  445ca8:	blr	x3
  445cac:	ldr	x2, [x19, #320]
  445cb0:	mov	x0, #0x1                   	// #1
  445cb4:	mov	x1, #0x0                   	// #0
  445cb8:	add	x2, x2, x0
  445cbc:	str	x2, [x19, #320]
  445cc0:	b	445b48 <_obstack_memory_used@@Base+0xbce0>
  445cc4:	ldp	x3, x2, [x19, #272]
  445cc8:	strb	wzr, [x19, #255]
  445ccc:	mov	x0, x19
  445cd0:	blr	x3
  445cd4:	ldr	x2, [x19, #320]
  445cd8:	mov	x0, #0x1                   	// #1
  445cdc:	mov	x1, #0x0                   	// #0
  445ce0:	add	x2, x2, x0
  445ce4:	str	x2, [x19, #320]
  445ce8:	b	4459e8 <_obstack_memory_used@@Base+0xbb80>
  445cec:	nop
  445cf0:	sub	sp, sp, #0x230
  445cf4:	stp	x29, x30, [sp]
  445cf8:	mov	x29, sp
  445cfc:	stp	x19, x20, [sp, #16]
  445d00:	mov	x19, x0
  445d04:	mov	x20, x1
  445d08:	stp	x21, x22, [sp, #32]
  445d0c:	mov	x21, x2
  445d10:	stp	x23, x24, [sp, #48]
  445d14:	stp	x25, x26, [sp, #64]
  445d18:	str	x27, [sp, #80]
  445d1c:	ldrb	w24, [x0]
  445d20:	cmp	w24, #0x5f
  445d24:	b.eq	445ed0 <_obstack_memory_used@@Base+0xc068>  // b.none
  445d28:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1d198>
  445d2c:	mov	x0, x19
  445d30:	add	x1, x1, #0xdf8
  445d34:	mov	x2, #0x8                   	// #8
  445d38:	mov	w23, #0x0                   	// #0
  445d3c:	bl	4024e0 <strncmp@plt>
  445d40:	cbnz	w0, 445d90 <_obstack_memory_used@@Base+0xbf28>
  445d44:	ldrb	w0, [x19, #8]
  445d48:	mov	w2, #0x5f                  	// #95
  445d4c:	mov	w1, #0x24                  	// #36
  445d50:	cmp	w0, #0x2e
  445d54:	ccmp	w0, w2, #0x4, ne  // ne = any
  445d58:	ccmp	w0, w1, #0x4, ne  // ne = any
  445d5c:	b.ne	445d90 <_obstack_memory_used@@Base+0xbf28>  // b.any
  445d60:	ldrb	w0, [x19, #9]
  445d64:	mov	w1, #0x49                  	// #73
  445d68:	cmp	w0, #0x44
  445d6c:	ccmp	w0, w1, #0x4, ne  // ne = any
  445d70:	b.ne	445d90 <_obstack_memory_used@@Base+0xbf28>  // b.any
  445d74:	ldrb	w1, [x19, #10]
  445d78:	cmp	w1, w2
  445d7c:	b.ne	445d90 <_obstack_memory_used@@Base+0xbf28>  // b.any
  445d80:	cmp	w0, #0x49
  445d84:	cset	w23, ne  // ne = any
  445d88:	add	w23, w23, #0x2
  445d8c:	nop
  445d90:	mov	x0, x19
  445d94:	bl	402330 <strlen@plt>
  445d98:	mov	x3, x0
  445d9c:	mov	w1, #0x11                  	// #17
  445da0:	add	x0, x19, x0
  445da4:	stp	x19, x0, [x29, #96]
  445da8:	lsl	w4, w3, #1
  445dac:	str	w1, [x29, #112]
  445db0:	cmp	w4, #0x800
  445db4:	str	x19, [x29, #120]
  445db8:	mov	w0, #0x0                   	// #0
  445dbc:	stp	wzr, w4, [x29, #136]
  445dc0:	stp	wzr, w3, [x29, #152]
  445dc4:	stp	xzr, xzr, [x29, #160]
  445dc8:	str	xzr, [x29, #176]
  445dcc:	b.hi	445eac <_obstack_memory_used@@Base+0xc044>  // b.pmore
  445dd0:	mov	x22, sp
  445dd4:	mov	w27, #0x18                  	// #24
  445dd8:	sbfiz	x3, x3, #3, #32
  445ddc:	cmp	w23, #0x1
  445de0:	add	x3, x3, #0xf
  445de4:	smsubl	x0, w4, w27, x22
  445de8:	and	x3, x3, #0xfffffffffffffff0
  445dec:	mov	sp, x0
  445df0:	mov	x25, sp
  445df4:	sub	sp, sp, x3
  445df8:	mov	x0, sp
  445dfc:	str	x25, [x29, #128]
  445e00:	str	x0, [x29, #144]
  445e04:	b.eq	445f10 <_obstack_memory_used@@Base+0xc0a8>  // b.none
  445e08:	sub	w0, w23, #0x2
  445e0c:	cmp	w0, #0x1
  445e10:	b.hi	445f54 <_obstack_memory_used@@Base+0xc0ec>  // b.pmore
  445e14:	cmp	w23, #0x2
  445e18:	ldrb	w0, [x19, #11]
  445e1c:	add	x24, x19, #0xb
  445e20:	str	x24, [x29, #120]
  445e24:	cset	w1, ne  // ne = any
  445e28:	cmp	w0, #0x5f
  445e2c:	add	w23, w1, #0x44
  445e30:	b.eq	445ee4 <_obstack_memory_used@@Base+0xc07c>  // b.none
  445e34:	cmp	w4, #0x0
  445e38:	b.le	446038 <_obstack_memory_used@@Base+0xc1d0>
  445e3c:	mov	x0, x24
  445e40:	bl	402330 <strlen@plt>
  445e44:	mov	w1, #0x1                   	// #1
  445e48:	str	wzr, [x25, #4]
  445e4c:	str	w1, [x29, #136]
  445e50:	cmp	w0, #0x0
  445e54:	b.le	446038 <_obstack_memory_used@@Base+0xc1d0>
  445e58:	add	x26, x29, #0x60
  445e5c:	str	wzr, [x25]
  445e60:	str	x24, [x25, #8]
  445e64:	str	w0, [x25, #16]
  445e68:	mov	w1, w23
  445e6c:	mov	x2, x25
  445e70:	mov	x3, #0x0                   	// #0
  445e74:	mov	x0, x26
  445e78:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  445e7c:	mov	x19, x0
  445e80:	ldr	x23, [x29, #120]
  445e84:	mov	x0, x23
  445e88:	bl	402330 <strlen@plt>
  445e8c:	add	x1, x23, x0
  445e90:	str	x1, [x29, #120]
  445e94:	ldrb	w0, [x23, x0]
  445e98:	cmp	w0, #0x0
  445e9c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  445ea0:	b.ne	445f74 <_obstack_memory_used@@Base+0xc10c>  // b.any
  445ea4:	mov	sp, x22
  445ea8:	mov	w0, #0x0                   	// #0
  445eac:	mov	sp, x29
  445eb0:	ldp	x29, x30, [sp]
  445eb4:	ldp	x19, x20, [sp, #16]
  445eb8:	ldp	x21, x22, [sp, #32]
  445ebc:	ldp	x23, x24, [sp, #48]
  445ec0:	ldp	x25, x26, [sp, #64]
  445ec4:	ldr	x27, [sp, #80]
  445ec8:	add	sp, sp, #0x230
  445ecc:	ret
  445ed0:	ldrb	w0, [x0, #1]
  445ed4:	mov	w23, #0x1                   	// #1
  445ed8:	cmp	w0, #0x5a
  445edc:	b.ne	445d28 <_obstack_memory_used@@Base+0xbec0>  // b.any
  445ee0:	b	445d90 <_obstack_memory_used@@Base+0xbf28>
  445ee4:	ldrb	w0, [x19, #12]
  445ee8:	cmp	w0, #0x5a
  445eec:	b.ne	445e34 <_obstack_memory_used@@Base+0xbfcc>  // b.any
  445ef0:	add	x26, x29, #0x60
  445ef4:	add	x19, x19, #0xd
  445ef8:	mov	x0, x26
  445efc:	mov	w1, #0x0                   	// #0
  445f00:	str	x19, [x29, #120]
  445f04:	bl	43e188 <_obstack_memory_used@@Base+0x4320>
  445f08:	mov	x25, x0
  445f0c:	b	445e68 <_obstack_memory_used@@Base+0xc000>
  445f10:	cmp	w24, #0x5f
  445f14:	b.ne	445ea4 <_obstack_memory_used@@Base+0xc03c>  // b.any
  445f18:	ldrb	w0, [x19, #1]
  445f1c:	cmp	w0, #0x5a
  445f20:	b.ne	445ea4 <_obstack_memory_used@@Base+0xc03c>  // b.any
  445f24:	add	x26, x29, #0x60
  445f28:	add	x19, x19, #0x2
  445f2c:	mov	w1, w23
  445f30:	mov	x0, x26
  445f34:	str	x19, [x29, #120]
  445f38:	bl	43e188 <_obstack_memory_used@@Base+0x4320>
  445f3c:	ldr	w3, [x29, #112]
  445f40:	mov	x19, x0
  445f44:	tbnz	w3, #0, 446044 <_obstack_memory_used@@Base+0xc1dc>
  445f48:	ldr	x0, [x29, #120]
  445f4c:	ldrb	w0, [x0]
  445f50:	b	445e98 <_obstack_memory_used@@Base+0xc030>
  445f54:	add	x0, x29, #0x60
  445f58:	bl	43eed0 <_obstack_memory_used@@Base+0x5068>
  445f5c:	ldr	x3, [x29, #120]
  445f60:	mov	x19, x0
  445f64:	ldrb	w0, [x3]
  445f68:	cmp	w0, #0x0
  445f6c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  445f70:	b.eq	445ea4 <_obstack_memory_used@@Base+0xc03c>  // b.none
  445f74:	add	x2, x29, #0x208
  445f78:	add	x23, x29, #0xb8
  445f7c:	mov	x0, x23
  445f80:	mov	x1, x19
  445f84:	str	xzr, [x29, #440]
  445f88:	stp	xzr, xzr, [x2]
  445f8c:	stp	xzr, xzr, [x2, #16]
  445f90:	strb	wzr, [x29, #448]
  445f94:	stp	x20, x21, [x29, #456]
  445f98:	stp	xzr, xzr, [x29, #472]
  445f9c:	stp	xzr, xzr, [x29, #488]
  445fa0:	stp	xzr, xzr, [x29, #504]
  445fa4:	bl	43c4a0 <_obstack_memory_used@@Base+0x2638>
  445fa8:	ldr	w0, [x29, #492]
  445fac:	cmp	w0, #0x7ff
  445fb0:	b.gt	445fb8 <_obstack_memory_used@@Base+0xc150>
  445fb4:	str	wzr, [x29, #492]
  445fb8:	ldr	w3, [x29, #532]
  445fbc:	mov	w4, #0x1                   	// #1
  445fc0:	ldr	w6, [x29, #548]
  445fc4:	mov	x20, sp
  445fc8:	cmp	w3, #0x0
  445fcc:	mov	x2, x19
  445fd0:	csel	w5, w3, w4, gt
  445fd4:	mov	x0, x23
  445fd8:	mov	w1, #0x11                  	// #17
  445fdc:	str	xzr, [x29, #552]
  445fe0:	mul	w3, w3, w6
  445fe4:	sub	sp, sp, w5, sxtw #4
  445fe8:	str	w3, [x29, #548]
  445fec:	mov	x5, sp
  445ff0:	cmp	w3, #0x0
  445ff4:	str	x5, [x29, #520]
  445ff8:	csel	w3, w3, w4, gt
  445ffc:	sub	sp, sp, w3, sxtw #4
  446000:	mov	x3, sp
  446004:	str	x3, [x29, #536]
  446008:	bl	444610 <_obstack_memory_used@@Base+0xa7a8>
  44600c:	mov	sp, x20
  446010:	ldr	x1, [x29, #440]
  446014:	mov	x0, x23
  446018:	ldp	x3, x2, [x29, #456]
  44601c:	strb	wzr, [x23, x1]
  446020:	blr	x3
  446024:	ldr	w0, [x29, #488]
  446028:	mov	sp, x22
  44602c:	cmp	w0, #0x0
  446030:	cset	w0, eq  // eq = none
  446034:	b	445eac <_obstack_memory_used@@Base+0xc044>
  446038:	add	x26, x29, #0x60
  44603c:	mov	x25, #0x0                   	// #0
  446040:	b	445e68 <_obstack_memory_used@@Base+0xc000>
  446044:	ldr	x6, [x29, #120]
  446048:	ldrb	w0, [x6]
  44604c:	cmp	w0, #0x2e
  446050:	b.ne	445e98 <_obstack_memory_used@@Base+0xc030>  // b.any
  446054:	nop
  446058:	ldrb	w0, [x6, #1]
  44605c:	sub	w1, w0, #0x61
  446060:	cmp	w0, #0x5f
  446064:	and	w1, w1, #0xff
  446068:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  44606c:	b.ls	44614c <_obstack_memory_used@@Base+0xc2e4>  // b.plast
  446070:	sub	w0, w0, #0x30
  446074:	and	w0, w0, #0xff
  446078:	cmp	w0, #0x9
  44607c:	ldrb	w0, [x6]
  446080:	b.hi	445e98 <_obstack_memory_used@@Base+0xc030>  // b.pmore
  446084:	mov	x3, x6
  446088:	cmp	w0, #0x2e
  44608c:	b.ne	4460dc <_obstack_memory_used@@Base+0xc274>  // b.any
  446090:	ldrb	w4, [x3, #1]
  446094:	sub	w4, w4, #0x30
  446098:	and	w4, w4, #0xff
  44609c:	cmp	w4, #0x9
  4460a0:	b.hi	4460dc <_obstack_memory_used@@Base+0xc274>  // b.pmore
  4460a4:	ldrb	w4, [x3, #2]
  4460a8:	add	x3, x3, #0x2
  4460ac:	sub	w5, w4, #0x30
  4460b0:	and	w5, w5, #0xff
  4460b4:	cmp	w5, #0x9
  4460b8:	b.hi	4460d4 <_obstack_memory_used@@Base+0xc26c>  // b.pmore
  4460bc:	nop
  4460c0:	ldrb	w4, [x3, #1]!
  4460c4:	sub	w5, w4, #0x30
  4460c8:	and	w5, w5, #0xff
  4460cc:	cmp	w5, #0x9
  4460d0:	b.ls	4460c0 <_obstack_memory_used@@Base+0xc258>  // b.plast
  4460d4:	cmp	w4, #0x2e
  4460d8:	b.eq	446090 <_obstack_memory_used@@Base+0xc228>  // b.none
  4460dc:	ldp	w0, w1, [x29, #136]
  4460e0:	str	x3, [x29, #120]
  4460e4:	sub	x4, x3, x6
  4460e8:	cmp	w0, w1
  4460ec:	b.ge	446144 <_obstack_memory_used@@Base+0xc2dc>  // b.tcont
  4460f0:	ldr	x2, [x29, #128]
  4460f4:	smull	x1, w0, w27
  4460f8:	add	w0, w0, #0x1
  4460fc:	cmp	w4, #0x0
  446100:	add	x3, x2, x1
  446104:	str	wzr, [x3, #4]
  446108:	str	w0, [x29, #136]
  44610c:	b.le	446144 <_obstack_memory_used@@Base+0xc2dc>
  446110:	str	xzr, [x2, x1]
  446114:	str	x6, [x3, #8]
  446118:	str	w4, [x3, #16]
  44611c:	mov	x2, x19
  446120:	mov	x0, x26
  446124:	mov	w1, #0x4e                  	// #78
  446128:	bl	43c3b0 <_obstack_memory_used@@Base+0x2548>
  44612c:	ldr	x6, [x29, #120]
  446130:	mov	x19, x0
  446134:	ldrb	w0, [x6]
  446138:	cmp	w0, #0x2e
  44613c:	b.eq	446058 <_obstack_memory_used@@Base+0xc1f0>  // b.none
  446140:	b	445e98 <_obstack_memory_used@@Base+0xc030>
  446144:	mov	x3, #0x0                   	// #0
  446148:	b	44611c <_obstack_memory_used@@Base+0xc2b4>
  44614c:	ldrb	w0, [x6, #2]
  446150:	add	x3, x6, #0x2
  446154:	b	44615c <_obstack_memory_used@@Base+0xc2f4>
  446158:	ldrb	w0, [x3, #1]!
  44615c:	sub	w1, w0, #0x61
  446160:	cmp	w0, #0x5f
  446164:	and	w1, w1, #0xff
  446168:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  44616c:	b.ls	446158 <_obstack_memory_used@@Base+0xc2f0>  // b.plast
  446170:	b	446088 <_obstack_memory_used@@Base+0xc220>
  446174:	nop
  446178:	stp	x29, x30, [sp, #-96]!
  44617c:	mov	x29, sp
  446180:	stp	x21, x22, [sp, #32]
  446184:	mov	x21, x3
  446188:	cbz	x0, 446258 <_obstack_memory_used@@Base+0xc3f0>
  44618c:	stp	x19, x20, [sp, #16]
  446190:	cmp	x1, #0x0
  446194:	mov	x19, x1
  446198:	mov	x20, x2
  44619c:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  4461a0:	b.eq	446254 <_obstack_memory_used@@Base+0xc3ec>  // b.none
  4461a4:	adrp	x1, 43c000 <_obstack_memory_used@@Base+0x2198>
  4461a8:	add	x2, sp, #0x40
  4461ac:	add	x1, x1, #0xfb8
  4461b0:	stp	xzr, xzr, [sp, #64]
  4461b4:	str	xzr, [sp, #80]
  4461b8:	str	wzr, [sp, #88]
  4461bc:	bl	445cf0 <_obstack_memory_used@@Base+0xbe88>
  4461c0:	cbz	w0, 4462ac <_obstack_memory_used@@Base+0xc444>
  4461c4:	ldr	w0, [sp, #88]
  4461c8:	str	x23, [sp, #48]
  4461cc:	ldr	x22, [sp, #64]
  4461d0:	cbnz	w0, 446230 <_obstack_memory_used@@Base+0xc3c8>
  4461d4:	ldr	x23, [sp, #80]
  4461d8:	cbz	x22, 4462d0 <_obstack_memory_used@@Base+0xc468>
  4461dc:	cbz	x19, 4462a0 <_obstack_memory_used@@Base+0xc438>
  4461e0:	mov	x0, x22
  4461e4:	bl	402330 <strlen@plt>
  4461e8:	ldr	x1, [x20]
  4461ec:	cmp	x0, x1
  4461f0:	b.cs	446278 <_obstack_memory_used@@Base+0xc410>  // b.hs, b.nlast
  4461f4:	add	x2, x0, #0x1
  4461f8:	mov	x1, x22
  4461fc:	mov	x0, x19
  446200:	bl	4022e0 <memcpy@plt>
  446204:	mov	x0, x22
  446208:	mov	x22, x19
  44620c:	bl	402730 <free@plt>
  446210:	cbz	x21, 446288 <_obstack_memory_used@@Base+0xc420>
  446214:	ldp	x19, x20, [sp, #16]
  446218:	ldr	x23, [sp, #48]
  44621c:	str	wzr, [x21]
  446220:	mov	x0, x22
  446224:	ldp	x21, x22, [sp, #32]
  446228:	ldp	x29, x30, [sp], #96
  44622c:	ret
  446230:	mov	x23, #0x1                   	// #1
  446234:	cbnz	x22, 4461dc <_obstack_memory_used@@Base+0xc374>
  446238:	cbz	x21, 4462f4 <_obstack_memory_used@@Base+0xc48c>
  44623c:	mov	w0, #0xffffffff            	// #-1
  446240:	mov	x22, #0x0                   	// #0
  446244:	ldp	x19, x20, [sp, #16]
  446248:	ldr	x23, [sp, #48]
  44624c:	str	w0, [x21]
  446250:	b	446220 <_obstack_memory_used@@Base+0xc3b8>
  446254:	ldp	x19, x20, [sp, #16]
  446258:	cbz	x21, 4462bc <_obstack_memory_used@@Base+0xc454>
  44625c:	mov	w0, #0xfffffffd            	// #-3
  446260:	str	w0, [x21]
  446264:	mov	x22, #0x0                   	// #0
  446268:	mov	x0, x22
  44626c:	ldp	x21, x22, [sp, #32]
  446270:	ldp	x29, x30, [sp], #96
  446274:	ret
  446278:	mov	x0, x19
  44627c:	bl	402730 <free@plt>
  446280:	str	x23, [x20]
  446284:	cbnz	x21, 446214 <_obstack_memory_used@@Base+0xc3ac>
  446288:	mov	x0, x22
  44628c:	ldp	x19, x20, [sp, #16]
  446290:	ldp	x21, x22, [sp, #32]
  446294:	ldr	x23, [sp, #48]
  446298:	ldp	x29, x30, [sp], #96
  44629c:	ret
  4462a0:	cbz	x20, 446210 <_obstack_memory_used@@Base+0xc3a8>
  4462a4:	str	x23, [x20]
  4462a8:	b	446284 <_obstack_memory_used@@Base+0xc41c>
  4462ac:	ldr	x0, [sp, #64]
  4462b0:	bl	402730 <free@plt>
  4462b4:	cbnz	x21, 4462e0 <_obstack_memory_used@@Base+0xc478>
  4462b8:	ldp	x19, x20, [sp, #16]
  4462bc:	mov	x22, #0x0                   	// #0
  4462c0:	mov	x0, x22
  4462c4:	ldp	x21, x22, [sp, #32]
  4462c8:	ldp	x29, x30, [sp], #96
  4462cc:	ret
  4462d0:	cbz	x21, 4462f4 <_obstack_memory_used@@Base+0xc48c>
  4462d4:	cmp	x23, #0x1
  4462d8:	b.eq	44623c <_obstack_memory_used@@Base+0xc3d4>  // b.none
  4462dc:	ldr	x23, [sp, #48]
  4462e0:	mov	w0, #0xfffffffe            	// #-2
  4462e4:	mov	x22, #0x0                   	// #0
  4462e8:	ldp	x19, x20, [sp, #16]
  4462ec:	str	w0, [x21]
  4462f0:	b	446220 <_obstack_memory_used@@Base+0xc3b8>
  4462f4:	mov	x22, #0x0                   	// #0
  4462f8:	ldp	x19, x20, [sp, #16]
  4462fc:	ldr	x23, [sp, #48]
  446300:	b	4462c0 <_obstack_memory_used@@Base+0xc458>
  446304:	nop
  446308:	cmp	x0, #0x0
  44630c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  446310:	b.eq	446334 <_obstack_memory_used@@Base+0xc4cc>  // b.none
  446314:	stp	x29, x30, [sp, #-16]!
  446318:	mov	x29, sp
  44631c:	bl	445cf0 <_obstack_memory_used@@Base+0xbe88>
  446320:	cmp	w0, #0x0
  446324:	ldp	x29, x30, [sp], #16
  446328:	mov	w0, #0xfffffffe            	// #-2
  44632c:	csel	w0, wzr, w0, ne  // ne = any
  446330:	ret
  446334:	mov	w0, #0xfffffffd            	// #-3
  446338:	ret
  44633c:	nop
  446340:	stp	x29, x30, [sp, #-16]!
  446344:	mov	x29, sp
  446348:	bl	43c1e0 <_obstack_memory_used@@Base+0x2378>
  44634c:	ldr	x0, [x0]
  446350:	cbz	x0, 446364 <_obstack_memory_used@@Base+0xc4fc>
  446354:	ldr	x1, [x0, #80]
  446358:	ldr	x0, [x0]
  44635c:	tbz	w1, #0, 446364 <_obstack_memory_used@@Base+0xc4fc>
  446360:	ldur	x0, [x0, #-112]
  446364:	ldp	x29, x30, [sp], #16
  446368:	ret
  44636c:	nop
  446370:	and	w5, w0, #0xff
  446374:	cmp	w5, #0x50
  446378:	b.eq	446490 <_obstack_memory_used@@Base+0xc628>  // b.none
  44637c:	and	w4, w5, #0xf
  446380:	cmp	w4, #0x4
  446384:	b.eq	4463a0 <_obstack_memory_used@@Base+0xc538>  // b.none
  446388:	b.ls	4463b4 <_obstack_memory_used@@Base+0xc54c>  // b.plast
  44638c:	cmp	w4, #0xb
  446390:	b.eq	4464b4 <_obstack_memory_used@@Base+0xc64c>  // b.none
  446394:	b.ls	446410 <_obstack_memory_used@@Base+0xc5a8>  // b.plast
  446398:	cmp	w4, #0xc
  44639c:	b.ne	4464c4 <_obstack_memory_used@@Base+0xc65c>  // b.any
  4463a0:	mov	x0, x2
  4463a4:	ldr	x4, [x0], #8
  4463a8:	cbnz	x4, 446470 <_obstack_memory_used@@Base+0xc608>
  4463ac:	str	x4, [x3]
  4463b0:	ret
  4463b4:	cmp	w4, #0x2
  4463b8:	b.eq	4464a4 <_obstack_memory_used@@Base+0xc63c>  // b.none
  4463bc:	b.ls	4463d8 <_obstack_memory_used@@Base+0xc570>  // b.plast
  4463c0:	cmp	w4, #0x3
  4463c4:	b.ne	4464c4 <_obstack_memory_used@@Base+0xc65c>  // b.any
  4463c8:	mov	x0, x2
  4463cc:	ldr	w4, [x0], #4
  4463d0:	cbz	x4, 4463ac <_obstack_memory_used@@Base+0xc544>
  4463d4:	b	446470 <_obstack_memory_used@@Base+0xc608>
  4463d8:	cbz	w4, 4463a0 <_obstack_memory_used@@Base+0xc538>
  4463dc:	cmp	w4, #0x1
  4463e0:	b.ne	4464c4 <_obstack_memory_used@@Base+0xc65c>  // b.any
  4463e4:	mov	x0, x2
  4463e8:	mov	x4, #0x0                   	// #0
  4463ec:	mov	w7, #0x0                   	// #0
  4463f0:	ldrb	w8, [x0], #1
  4463f4:	and	x6, x8, #0x7f
  4463f8:	lsl	x6, x6, x7
  4463fc:	add	w7, w7, #0x7
  446400:	orr	x4, x4, x6
  446404:	tbnz	w8, #7, 4463f0 <_obstack_memory_used@@Base+0xc588>
  446408:	cbz	x4, 4463ac <_obstack_memory_used@@Base+0xc544>
  44640c:	b	446470 <_obstack_memory_used@@Base+0xc608>
  446410:	cmp	w4, #0x9
  446414:	b.eq	446430 <_obstack_memory_used@@Base+0xc5c8>  // b.none
  446418:	cmp	w4, #0xa
  44641c:	b.ne	4464c4 <_obstack_memory_used@@Base+0xc65c>  // b.any
  446420:	mov	x0, x2
  446424:	ldrsh	x4, [x0], #2
  446428:	cbz	x4, 4463ac <_obstack_memory_used@@Base+0xc544>
  44642c:	b	446470 <_obstack_memory_used@@Base+0xc608>
  446430:	mov	x0, x2
  446434:	mov	x4, #0x0                   	// #0
  446438:	mov	w7, #0x0                   	// #0
  44643c:	ldrb	w8, [x0], #1
  446440:	and	x6, x8, #0x7f
  446444:	lsl	x6, x6, x7
  446448:	add	w7, w7, #0x7
  44644c:	orr	x4, x4, x6
  446450:	tbnz	w8, #7, 44643c <_obstack_memory_used@@Base+0xc5d4>
  446454:	cmp	w7, #0x3f
  446458:	b.hi	4463a8 <_obstack_memory_used@@Base+0xc540>  // b.pmore
  44645c:	tbz	w8, #6, 4463a8 <_obstack_memory_used@@Base+0xc540>
  446460:	mov	x6, #0xffffffffffffffff    	// #-1
  446464:	lsl	x7, x6, x7
  446468:	orr	x4, x4, x7
  44646c:	nop
  446470:	and	w6, w5, #0x70
  446474:	cmp	w6, #0x10
  446478:	csel	x1, x2, x1, eq  // eq = none
  44647c:	add	x4, x4, x1
  446480:	tbz	w5, #7, 4463ac <_obstack_memory_used@@Base+0xc544>
  446484:	ldr	x4, [x4]
  446488:	str	x4, [x3]
  44648c:	ret
  446490:	add	x0, x2, #0x7
  446494:	and	x0, x0, #0xfffffffffffffff8
  446498:	ldr	x4, [x0], #8
  44649c:	str	x4, [x3]
  4464a0:	ret
  4464a4:	mov	x0, x2
  4464a8:	ldrh	w4, [x0], #2
  4464ac:	cbz	x4, 4463ac <_obstack_memory_used@@Base+0xc544>
  4464b0:	b	446470 <_obstack_memory_used@@Base+0xc608>
  4464b4:	mov	x0, x2
  4464b8:	ldrsw	x4, [x0], #4
  4464bc:	cbz	x4, 4463ac <_obstack_memory_used@@Base+0xc544>
  4464c0:	b	446470 <_obstack_memory_used@@Base+0xc608>
  4464c4:	stp	x29, x30, [sp, #-16]!
  4464c8:	mov	x29, sp
  4464cc:	bl	402650 <abort@plt>
  4464d0:	and	w0, w0, #0xff
  4464d4:	cmp	w0, #0xff
  4464d8:	b.eq	446524 <_obstack_memory_used@@Base+0xc6bc>  // b.none
  4464dc:	and	w2, w0, #0x70
  4464e0:	cmp	w2, #0x30
  4464e4:	b.eq	44653c <_obstack_memory_used@@Base+0xc6d4>  // b.none
  4464e8:	b.hi	4464fc <_obstack_memory_used@@Base+0xc694>  // b.pmore
  4464ec:	cmp	w2, #0x20
  4464f0:	b.ne	44650c <_obstack_memory_used@@Base+0xc6a4>  // b.any
  4464f4:	ldr	x0, [x1, #808]
  4464f8:	ret
  4464fc:	cmp	w2, #0x40
  446500:	b.ne	44652c <_obstack_memory_used@@Base+0xc6c4>  // b.any
  446504:	ldr	x0, [x1, #824]
  446508:	ret
  44650c:	b.hi	446518 <_obstack_memory_used@@Base+0xc6b0>  // b.pmore
  446510:	tst	w0, #0x60
  446514:	b.eq	446524 <_obstack_memory_used@@Base+0xc6bc>  // b.none
  446518:	stp	x29, x30, [sp, #-16]!
  44651c:	mov	x29, sp
  446520:	bl	402650 <abort@plt>
  446524:	mov	x0, #0x0                   	// #0
  446528:	ret
  44652c:	cmp	w2, #0x50
  446530:	mov	x0, #0x0                   	// #0
  446534:	b.ne	446518 <_obstack_memory_used@@Base+0xc6b0>  // b.any
  446538:	ret
  44653c:	ldr	x0, [x1, #816]
  446540:	ret
  446544:	nop
  446548:	str	xzr, [x3, #1568]
  44654c:	cmp	x0, x1
  446550:	b.cs	446ce0 <_obstack_memory_used@@Base+0xce78>  // b.hs, b.nlast
  446554:	stp	x29, x30, [sp, #-112]!
  446558:	mov	x29, sp
  44655c:	stp	x21, x22, [sp, #32]
  446560:	mov	x21, x2
  446564:	mov	x22, x1
  446568:	stp	x19, x20, [sp, #16]
  44656c:	mov	x20, x3
  446570:	ldr	x2, [x21, #792]
  446574:	stp	x23, x24, [sp, #48]
  446578:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x1e198>
  44657c:	ldr	x5, [x21, #832]
  446580:	stp	x25, x26, [sp, #64]
  446584:	add	x23, x23, #0x53c
  446588:	ldr	x1, [x20, #1608]
  44658c:	stp	x27, x28, [sp, #80]
  446590:	add	x5, x2, x5, lsr #63
  446594:	add	x27, x29, #0x68
  446598:	cmp	x1, x5
  44659c:	mov	x25, #0x0                   	// #0
  4465a0:	mov	w24, #0x1                   	// #1
  4465a4:	mov	w26, #0x5                   	// #5
  4465a8:	b.cs	446678 <_obstack_memory_used@@Base+0xc810>  // b.hs, b.nlast
  4465ac:	nop
  4465b0:	mov	x19, x0
  4465b4:	ldrb	w4, [x19], #1
  4465b8:	and	w5, w4, #0xc0
  4465bc:	cmp	w5, #0x40
  4465c0:	b.eq	446b74 <_obstack_memory_used@@Base+0xcd0c>  // b.none
  4465c4:	cmp	w5, #0x80
  4465c8:	b.eq	446b98 <_obstack_memory_used@@Base+0xcd30>  // b.none
  4465cc:	cmp	w5, #0xc0
  4465d0:	b.eq	446b88 <_obstack_memory_used@@Base+0xcd20>  // b.none
  4465d4:	cmp	w4, #0x2f
  4465d8:	b.hi	446cf0 <_obstack_memory_used@@Base+0xce88>  // b.pmore
  4465dc:	ldrh	w2, [x23, w4, uxtw #1]
  4465e0:	adr	x3, 4465ec <_obstack_memory_used@@Base+0xc784>
  4465e4:	add	x2, x3, w2, sxth #2
  4465e8:	br	x2
  4465ec:	mov	x1, #0x0                   	// #0
  4465f0:	mov	w0, #0x0                   	// #0
  4465f4:	ldrb	w3, [x19], #1
  4465f8:	and	x2, x3, #0x7f
  4465fc:	lsl	x2, x2, x0
  446600:	add	w0, w0, #0x7
  446604:	orr	x1, x1, x2
  446608:	tbnz	w3, #7, 4465f4 <_obstack_memory_used@@Base+0xc78c>
  44660c:	mov	x4, #0x0                   	// #0
  446610:	mov	w2, #0x0                   	// #0
  446614:	nop
  446618:	ldrb	w3, [x19], #1
  44661c:	and	x0, x3, #0x7f
  446620:	lsl	x0, x0, x2
  446624:	add	w2, w2, #0x7
  446628:	orr	x4, x4, x0
  44662c:	tbnz	w3, #7, 446618 <_obstack_memory_used@@Base+0xc7b0>
  446630:	ldr	x0, [x20, #1624]
  446634:	cmp	x1, #0x61
  446638:	mul	x4, x4, x0
  44663c:	b.hi	446654 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  446640:	lsl	x1, x1, #4
  446644:	neg	x4, x4
  446648:	add	x0, x20, x1
  44664c:	str	w24, [x0, #8]
  446650:	str	x4, [x20, x1]
  446654:	cmp	x22, x19
  446658:	b.ls	446678 <_obstack_memory_used@@Base+0xc810>  // b.plast
  44665c:	ldr	x2, [x21, #792]
  446660:	mov	x0, x19
  446664:	ldr	x5, [x21, #832]
  446668:	ldr	x1, [x20, #1608]
  44666c:	add	x5, x2, x5, lsr #63
  446670:	cmp	x1, x5
  446674:	b.cc	4465b0 <_obstack_memory_used@@Base+0xc748>  // b.lo, b.ul, b.last
  446678:	mov	sp, x29
  44667c:	ldp	x19, x20, [sp, #16]
  446680:	ldp	x21, x22, [sp, #32]
  446684:	ldp	x23, x24, [sp, #48]
  446688:	ldp	x25, x26, [sp, #64]
  44668c:	ldp	x27, x28, [sp, #80]
  446690:	ldp	x29, x30, [sp], #112
  446694:	ret
  446698:	mov	x1, #0x0                   	// #0
  44669c:	mov	w0, #0x0                   	// #0
  4466a0:	ldrb	w3, [x19], #1
  4466a4:	and	x2, x3, #0x7f
  4466a8:	lsl	x2, x2, x0
  4466ac:	add	w0, w0, #0x7
  4466b0:	orr	x1, x1, x2
  4466b4:	tbnz	w3, #7, 4466a0 <_obstack_memory_used@@Base+0xc838>
  4466b8:	str	x1, [x21, #848]
  4466bc:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  4466c0:	mov	x1, #0x0                   	// #0
  4466c4:	mov	w0, #0x0                   	// #0
  4466c8:	ldrb	w3, [x19], #1
  4466cc:	and	x2, x3, #0x7f
  4466d0:	lsl	x2, x2, x0
  4466d4:	add	w0, w0, #0x7
  4466d8:	orr	x1, x1, x2
  4466dc:	tbnz	w3, #7, 4466c8 <_obstack_memory_used@@Base+0xc860>
  4466e0:	cmp	x1, #0x61
  4466e4:	b.hi	4466f8 <_obstack_memory_used@@Base+0xc890>  // b.pmore
  4466e8:	lsl	x1, x1, #4
  4466ec:	add	x0, x20, x1
  4466f0:	str	w26, [x0, #8]
  4466f4:	str	x19, [x20, x1]
  4466f8:	mov	x3, #0x0                   	// #0
  4466fc:	mov	w1, #0x0                   	// #0
  446700:	ldrb	w2, [x19], #1
  446704:	and	x0, x2, #0x7f
  446708:	lsl	x0, x0, x1
  44670c:	add	w1, w1, #0x7
  446710:	orr	x3, x3, x0
  446714:	tbnz	w2, #7, 446700 <_obstack_memory_used@@Base+0xc898>
  446718:	add	x19, x19, x3
  44671c:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446720:	mov	x1, #0x0                   	// #0
  446724:	mov	w0, #0x0                   	// #0
  446728:	ldrb	w3, [x19], #1
  44672c:	and	x2, x3, #0x7f
  446730:	lsl	x2, x2, x0
  446734:	add	w0, w0, #0x7
  446738:	orr	x1, x1, x2
  44673c:	tbnz	w3, #7, 446728 <_obstack_memory_used@@Base+0xc8c0>
  446740:	mov	x4, #0x0                   	// #0
  446744:	mov	w2, #0x0                   	// #0
  446748:	ldrb	w3, [x19], #1
  44674c:	and	x0, x3, #0x7f
  446750:	lsl	x0, x0, x2
  446754:	add	w2, w2, #0x7
  446758:	orr	x4, x4, x0
  44675c:	tbnz	w3, #7, 446748 <_obstack_memory_used@@Base+0xc8e0>
  446760:	cmp	w2, #0x3f
  446764:	b.hi	44677c <_obstack_memory_used@@Base+0xc914>  // b.pmore
  446768:	mov	x0, #0xffffffffffffffff    	// #-1
  44676c:	tst	x3, #0x40
  446770:	lsl	x0, x0, x2
  446774:	orr	x0, x4, x0
  446778:	csel	x4, x0, x4, ne  // ne = any
  44677c:	ldr	x0, [x20, #1624]
  446780:	cmp	x1, #0x61
  446784:	mul	x4, x4, x0
  446788:	b.hi	446654 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  44678c:	lsl	x1, x1, #4
  446790:	mov	w2, #0x4                   	// #4
  446794:	add	x0, x20, x1
  446798:	str	w2, [x0, #8]
  44679c:	str	x4, [x20, x1]
  4467a0:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  4467a4:	mov	x1, #0x0                   	// #0
  4467a8:	mov	w0, #0x0                   	// #0
  4467ac:	ldrb	w3, [x19], #1
  4467b0:	and	x2, x3, #0x7f
  4467b4:	lsl	x2, x2, x0
  4467b8:	add	w0, w0, #0x7
  4467bc:	orr	x1, x1, x2
  4467c0:	tbnz	w3, #7, 4467ac <_obstack_memory_used@@Base+0xc944>
  4467c4:	mov	x4, #0x0                   	// #0
  4467c8:	mov	w2, #0x0                   	// #0
  4467cc:	nop
  4467d0:	ldrb	w3, [x19], #1
  4467d4:	and	x0, x3, #0x7f
  4467d8:	lsl	x0, x0, x2
  4467dc:	add	w2, w2, #0x7
  4467e0:	orr	x4, x4, x0
  4467e4:	tbnz	w3, #7, 4467d0 <_obstack_memory_used@@Base+0xc968>
  4467e8:	b	44677c <_obstack_memory_used@@Base+0xc914>
  4467ec:	mov	x1, #0x0                   	// #0
  4467f0:	mov	w0, #0x0                   	// #0
  4467f4:	ldrb	w3, [x19], #1
  4467f8:	and	x2, x3, #0x7f
  4467fc:	lsl	x2, x2, x0
  446800:	add	w0, w0, #0x7
  446804:	orr	x1, x1, x2
  446808:	tbnz	w3, #7, 4467f4 <_obstack_memory_used@@Base+0xc98c>
  44680c:	cmp	w0, #0x3f
  446810:	b.hi	446828 <_obstack_memory_used@@Base+0xc9c0>  // b.pmore
  446814:	mov	x2, #0xffffffffffffffff    	// #-1
  446818:	tst	x3, #0x40
  44681c:	lsl	x0, x2, x0
  446820:	orr	x0, x1, x0
  446824:	csel	x1, x0, x1, ne  // ne = any
  446828:	ldr	x0, [x20, #1624]
  44682c:	mul	x1, x0, x1
  446830:	str	x1, [x20, #1576]
  446834:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446838:	mov	x1, #0x0                   	// #0
  44683c:	mov	w0, #0x0                   	// #0
  446840:	ldrb	w3, [x19], #1
  446844:	and	x2, x3, #0x7f
  446848:	lsl	x2, x2, x0
  44684c:	add	w0, w0, #0x7
  446850:	orr	x1, x1, x2
  446854:	tbnz	w3, #7, 446840 <_obstack_memory_used@@Base+0xc9d8>
  446858:	mov	x3, #0x0                   	// #0
  44685c:	mov	w2, #0x0                   	// #0
  446860:	str	x1, [x20, #1584]
  446864:	nop
  446868:	ldrb	w1, [x19], #1
  44686c:	and	x0, x1, #0x7f
  446870:	lsl	x0, x0, x2
  446874:	add	w2, w2, #0x7
  446878:	orr	x3, x3, x0
  44687c:	tbnz	w1, #7, 446868 <_obstack_memory_used@@Base+0xca00>
  446880:	cmp	w2, #0x3f
  446884:	b.hi	44689c <_obstack_memory_used@@Base+0xca34>  // b.pmore
  446888:	mov	x0, #0xffffffffffffffff    	// #-1
  44688c:	tst	x1, #0x40
  446890:	lsl	x0, x0, x2
  446894:	orr	x0, x3, x0
  446898:	csel	x3, x0, x3, ne  // ne = any
  44689c:	ldr	x0, [x20, #1624]
  4468a0:	str	w24, [x20, #1600]
  4468a4:	mul	x3, x0, x3
  4468a8:	str	x3, [x20, #1576]
  4468ac:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  4468b0:	mov	x1, #0x0                   	// #0
  4468b4:	mov	w0, #0x0                   	// #0
  4468b8:	ldrb	w3, [x19], #1
  4468bc:	and	x2, x3, #0x7f
  4468c0:	lsl	x2, x2, x0
  4468c4:	add	w0, w0, #0x7
  4468c8:	orr	x1, x1, x2
  4468cc:	tbnz	w3, #7, 4468b8 <_obstack_memory_used@@Base+0xca50>
  4468d0:	mov	x4, #0x0                   	// #0
  4468d4:	mov	w2, #0x0                   	// #0
  4468d8:	ldrb	w3, [x19], #1
  4468dc:	and	x0, x3, #0x7f
  4468e0:	lsl	x0, x0, x2
  4468e4:	add	w2, w2, #0x7
  4468e8:	orr	x4, x4, x0
  4468ec:	tbnz	w3, #7, 4468d8 <_obstack_memory_used@@Base+0xca70>
  4468f0:	cmp	w2, #0x3f
  4468f4:	b.hi	44690c <_obstack_memory_used@@Base+0xcaa4>  // b.pmore
  4468f8:	mov	x0, #0xffffffffffffffff    	// #-1
  4468fc:	tst	x3, #0x40
  446900:	lsl	x0, x0, x2
  446904:	orr	x0, x4, x0
  446908:	csel	x4, x0, x4, ne  // ne = any
  44690c:	ldr	x0, [x20, #1624]
  446910:	cmp	x1, #0x61
  446914:	mul	x4, x4, x0
  446918:	b.hi	446654 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  44691c:	lsl	x1, x1, #4
  446920:	add	x0, x20, x1
  446924:	str	w24, [x0, #8]
  446928:	str	x4, [x20, x1]
  44692c:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446930:	mov	x1, #0x0                   	// #0
  446934:	mov	w0, #0x0                   	// #0
  446938:	ldrb	w3, [x19], #1
  44693c:	and	x2, x3, #0x7f
  446940:	lsl	x2, x2, x0
  446944:	add	w0, w0, #0x7
  446948:	orr	x1, x1, x2
  44694c:	tbnz	w3, #7, 446938 <_obstack_memory_used@@Base+0xcad0>
  446950:	cmp	x1, #0x61
  446954:	b.hi	44696c <_obstack_memory_used@@Base+0xcb04>  // b.pmore
  446958:	lsl	x1, x1, #4
  44695c:	mov	w2, #0x3                   	// #3
  446960:	add	x0, x20, x1
  446964:	str	w2, [x0, #8]
  446968:	str	x19, [x20, x1]
  44696c:	mov	x3, #0x0                   	// #0
  446970:	mov	w1, #0x0                   	// #0
  446974:	nop
  446978:	ldrb	w2, [x19], #1
  44697c:	and	x0, x2, #0x7f
  446980:	lsl	x0, x0, x1
  446984:	add	w1, w1, #0x7
  446988:	orr	x3, x3, x0
  44698c:	tbnz	w2, #7, 446978 <_obstack_memory_used@@Base+0xcb10>
  446990:	add	x19, x19, x3
  446994:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446998:	mov	x1, #0x0                   	// #0
  44699c:	mov	w0, #0x0                   	// #0
  4469a0:	ldrb	w3, [x19], #1
  4469a4:	and	x2, x3, #0x7f
  4469a8:	lsl	x2, x2, x0
  4469ac:	add	w0, w0, #0x7
  4469b0:	orr	x1, x1, x2
  4469b4:	tbnz	w3, #7, 4469a0 <_obstack_memory_used@@Base+0xcb38>
  4469b8:	str	x1, [x20, #1576]
  4469bc:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  4469c0:	mov	x1, #0x0                   	// #0
  4469c4:	mov	w0, #0x0                   	// #0
  4469c8:	ldrb	w3, [x19], #1
  4469cc:	and	x2, x3, #0x7f
  4469d0:	lsl	x2, x2, x0
  4469d4:	add	w0, w0, #0x7
  4469d8:	orr	x1, x1, x2
  4469dc:	tbnz	w3, #7, 4469c8 <_obstack_memory_used@@Base+0xcb60>
  4469e0:	str	x1, [x20, #1584]
  4469e4:	str	w24, [x20, #1600]
  4469e8:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  4469ec:	mov	x1, #0x0                   	// #0
  4469f0:	mov	w0, #0x0                   	// #0
  4469f4:	ldrb	w3, [x19], #1
  4469f8:	and	x2, x3, #0x7f
  4469fc:	lsl	x2, x2, x0
  446a00:	add	w0, w0, #0x7
  446a04:	orr	x1, x1, x2
  446a08:	tbnz	w3, #7, 4469f4 <_obstack_memory_used@@Base+0xcb8c>
  446a0c:	mov	x3, #0x0                   	// #0
  446a10:	mov	w2, #0x0                   	// #0
  446a14:	str	x1, [x20, #1584]
  446a18:	ldrb	w1, [x19], #1
  446a1c:	and	x0, x1, #0x7f
  446a20:	lsl	x0, x0, x2
  446a24:	add	w2, w2, #0x7
  446a28:	orr	x3, x3, x0
  446a2c:	tbnz	w1, #7, 446a18 <_obstack_memory_used@@Base+0xcbb0>
  446a30:	str	x3, [x20, #1576]
  446a34:	str	w24, [x20, #1600]
  446a38:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446a3c:	mov	x1, #0x0                   	// #0
  446a40:	mov	w0, #0x0                   	// #0
  446a44:	ldrb	w3, [x19], #1
  446a48:	and	x2, x3, #0x7f
  446a4c:	lsl	x2, x2, x0
  446a50:	add	w0, w0, #0x7
  446a54:	orr	x1, x1, x2
  446a58:	tbnz	w3, #7, 446a44 <_obstack_memory_used@@Base+0xcbdc>
  446a5c:	mov	x4, #0x0                   	// #0
  446a60:	mov	w2, #0x0                   	// #0
  446a64:	nop
  446a68:	ldrb	w3, [x19], #1
  446a6c:	and	x0, x3, #0x7f
  446a70:	lsl	x0, x0, x2
  446a74:	add	w2, w2, #0x7
  446a78:	orr	x4, x4, x0
  446a7c:	tbnz	w3, #7, 446a68 <_obstack_memory_used@@Base+0xcc00>
  446a80:	cmp	x1, #0x61
  446a84:	b.hi	446654 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  446a88:	lsl	x1, x1, #4
  446a8c:	mov	w2, #0x2                   	// #2
  446a90:	add	x0, x20, x1
  446a94:	str	w2, [x0, #8]
  446a98:	str	x4, [x20, x1]
  446a9c:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446aa0:	mov	x1, #0x0                   	// #0
  446aa4:	mov	w0, #0x0                   	// #0
  446aa8:	ldrb	w3, [x19], #1
  446aac:	and	x2, x3, #0x7f
  446ab0:	lsl	x2, x2, x0
  446ab4:	add	w0, w0, #0x7
  446ab8:	orr	x1, x1, x2
  446abc:	tbnz	w3, #7, 446aa8 <_obstack_memory_used@@Base+0xcc40>
  446ac0:	cmp	x1, #0x61
  446ac4:	b.hi	446654 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  446ac8:	add	x1, x20, x1, lsl #4
  446acc:	str	wzr, [x1, #8]
  446ad0:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446ad4:	mov	x1, #0x0                   	// #0
  446ad8:	mov	w0, #0x0                   	// #0
  446adc:	ldrb	w3, [x19], #1
  446ae0:	and	x2, x3, #0x7f
  446ae4:	lsl	x2, x2, x0
  446ae8:	add	w0, w0, #0x7
  446aec:	orr	x1, x1, x2
  446af0:	tbnz	w3, #7, 446adc <_obstack_memory_used@@Base+0xcc74>
  446af4:	cmp	x1, #0x61
  446af8:	b.hi	446654 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  446afc:	add	x1, x20, x1, lsl #4
  446b00:	mov	w0, #0x6                   	// #6
  446b04:	str	w0, [x1, #8]
  446b08:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446b0c:	mov	x1, #0x0                   	// #0
  446b10:	mov	w0, #0x0                   	// #0
  446b14:	ldrb	w3, [x19], #1
  446b18:	and	x2, x3, #0x7f
  446b1c:	lsl	x2, x2, x0
  446b20:	add	w0, w0, #0x7
  446b24:	orr	x1, x1, x2
  446b28:	tbnz	w3, #7, 446b14 <_obstack_memory_used@@Base+0xccac>
  446b2c:	b	446ac0 <_obstack_memory_used@@Base+0xcc58>
  446b30:	mov	x1, #0x0                   	// #0
  446b34:	mov	w0, #0x0                   	// #0
  446b38:	ldrb	w3, [x19], #1
  446b3c:	and	x2, x3, #0x7f
  446b40:	lsl	x2, x2, x0
  446b44:	add	w0, w0, #0x7
  446b48:	orr	x1, x1, x2
  446b4c:	tbnz	w3, #7, 446b38 <_obstack_memory_used@@Base+0xccd0>
  446b50:	mov	x4, #0x0                   	// #0
  446b54:	mov	w2, #0x0                   	// #0
  446b58:	ldrb	w3, [x19], #1
  446b5c:	and	x0, x3, #0x7f
  446b60:	lsl	x0, x0, x2
  446b64:	add	w2, w2, #0x7
  446b68:	orr	x4, x4, x0
  446b6c:	tbnz	w3, #7, 446b58 <_obstack_memory_used@@Base+0xccf0>
  446b70:	b	44690c <_obstack_memory_used@@Base+0xcaa4>
  446b74:	ldr	x0, [x20, #1632]
  446b78:	and	x4, x4, #0x3f
  446b7c:	madd	x4, x4, x0, x1
  446b80:	str	x4, [x20, #1608]
  446b84:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446b88:	ubfiz	x4, x4, #4, #6
  446b8c:	add	x4, x20, x4
  446b90:	str	wzr, [x4, #8]
  446b94:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446b98:	and	w4, w4, #0x3f
  446b9c:	mov	x1, #0x0                   	// #0
  446ba0:	mov	w5, #0x0                   	// #0
  446ba4:	nop
  446ba8:	ldrb	w6, [x19], #1
  446bac:	and	x0, x6, #0x7f
  446bb0:	lsl	x0, x0, x5
  446bb4:	add	w5, w5, #0x7
  446bb8:	orr	x1, x1, x0
  446bbc:	tbnz	w6, #7, 446ba8 <_obstack_memory_used@@Base+0xcd40>
  446bc0:	ubfiz	x4, x4, #4, #6
  446bc4:	ldr	x2, [x20, #1624]
  446bc8:	add	x0, x20, x4
  446bcc:	mul	x1, x1, x2
  446bd0:	str	w24, [x0, #8]
  446bd4:	str	x1, [x20, x4]
  446bd8:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446bdc:	ldr	x0, [x20, #544]
  446be0:	eor	x0, x0, #0x1
  446be4:	str	x0, [x20, #544]
  446be8:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446bec:	ldrb	w28, [x20, #1648]
  446bf0:	mov	x1, x21
  446bf4:	mov	w0, w28
  446bf8:	bl	4464d0 <_obstack_memory_used@@Base+0xc668>
  446bfc:	mov	x2, x19
  446c00:	mov	x1, x0
  446c04:	mov	x3, x27
  446c08:	mov	w0, w28
  446c0c:	bl	446370 <_obstack_memory_used@@Base+0xc508>
  446c10:	mov	x19, x0
  446c14:	ldr	x1, [x29, #104]
  446c18:	str	x1, [x20, #1608]
  446c1c:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446c20:	ldrb	w2, [x0, #1]
  446c24:	add	x19, x0, #0x2
  446c28:	ldr	x0, [x20, #1632]
  446c2c:	madd	x1, x2, x0, x1
  446c30:	str	x1, [x20, #1608]
  446c34:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446c38:	ldurh	w2, [x0, #1]
  446c3c:	add	x19, x0, #0x3
  446c40:	ldr	x0, [x20, #1632]
  446c44:	madd	x1, x2, x0, x1
  446c48:	str	x1, [x20, #1608]
  446c4c:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446c50:	ldur	w2, [x0, #1]
  446c54:	add	x19, x0, #0x5
  446c58:	ldr	x0, [x20, #1632]
  446c5c:	madd	x1, x2, x0, x1
  446c60:	str	x1, [x20, #1608]
  446c64:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446c68:	cbz	x25, 446ce4 <_obstack_memory_used@@Base+0xce7c>
  446c6c:	mov	x3, x25
  446c70:	ldr	x25, [x25, #1568]
  446c74:	mov	x1, x20
  446c78:	mov	x0, x3
  446c7c:	mov	x2, #0x648                 	// #1608
  446c80:	bl	4022e0 <memcpy@plt>
  446c84:	str	x0, [x20, #1568]
  446c88:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446c8c:	ldr	x28, [x20, #1568]
  446c90:	mov	x0, x20
  446c94:	mov	x2, #0x648                 	// #1608
  446c98:	mov	x1, x28
  446c9c:	bl	4022e0 <memcpy@plt>
  446ca0:	str	x25, [x28, #1568]
  446ca4:	mov	x25, x28
  446ca8:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446cac:	mov	w0, #0x2                   	// #2
  446cb0:	mov	x3, #0x0                   	// #0
  446cb4:	mov	w1, #0x0                   	// #0
  446cb8:	str	x19, [x20, #1592]
  446cbc:	str	w0, [x20, #1600]
  446cc0:	ldrb	w2, [x19], #1
  446cc4:	and	x0, x2, #0x7f
  446cc8:	lsl	x0, x0, x1
  446ccc:	add	w1, w1, #0x7
  446cd0:	orr	x3, x3, x0
  446cd4:	tbnz	w2, #7, 446cc0 <_obstack_memory_used@@Base+0xce58>
  446cd8:	add	x19, x19, x3
  446cdc:	b	446654 <_obstack_memory_used@@Base+0xc7ec>
  446ce0:	ret
  446ce4:	sub	sp, sp, #0x650
  446ce8:	mov	x3, sp
  446cec:	b	446c74 <_obstack_memory_used@@Base+0xce0c>
  446cf0:	bl	402650 <abort@plt>
  446cf4:	nop
  446cf8:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x3e198>
  446cfc:	add	x1, x2, #0x948
  446d00:	mov	w0, #0x8                   	// #8
  446d04:	strb	w0, [x2, #2376]
  446d08:	strb	w0, [x1, #1]
  446d0c:	strb	w0, [x1, #2]
  446d10:	strb	w0, [x1, #3]
  446d14:	strb	w0, [x1, #4]
  446d18:	strb	w0, [x1, #5]
  446d1c:	strb	w0, [x1, #6]
  446d20:	strb	w0, [x1, #7]
  446d24:	strb	w0, [x1, #8]
  446d28:	strb	w0, [x1, #9]
  446d2c:	strb	w0, [x1, #10]
  446d30:	strb	w0, [x1, #11]
  446d34:	strb	w0, [x1, #12]
  446d38:	strb	w0, [x1, #13]
  446d3c:	strb	w0, [x1, #14]
  446d40:	strb	w0, [x1, #15]
  446d44:	strb	w0, [x1, #16]
  446d48:	strb	w0, [x1, #17]
  446d4c:	strb	w0, [x1, #18]
  446d50:	strb	w0, [x1, #19]
  446d54:	strb	w0, [x1, #20]
  446d58:	strb	w0, [x1, #21]
  446d5c:	strb	w0, [x1, #22]
  446d60:	strb	w0, [x1, #23]
  446d64:	strb	w0, [x1, #24]
  446d68:	strb	w0, [x1, #25]
  446d6c:	strb	w0, [x1, #26]
  446d70:	strb	w0, [x1, #27]
  446d74:	strb	w0, [x1, #28]
  446d78:	strb	w0, [x1, #29]
  446d7c:	strb	w0, [x1, #30]
  446d80:	strb	w0, [x1, #31]
  446d84:	strb	w0, [x1, #64]
  446d88:	strb	w0, [x1, #46]
  446d8c:	strb	w0, [x1, #65]
  446d90:	strb	w0, [x1, #66]
  446d94:	strb	w0, [x1, #67]
  446d98:	strb	w0, [x1, #68]
  446d9c:	strb	w0, [x1, #69]
  446da0:	strb	w0, [x1, #70]
  446da4:	strb	w0, [x1, #71]
  446da8:	strb	w0, [x1, #72]
  446dac:	strb	w0, [x1, #73]
  446db0:	strb	w0, [x1, #74]
  446db4:	strb	w0, [x1, #75]
  446db8:	strb	w0, [x1, #76]
  446dbc:	strb	w0, [x1, #77]
  446dc0:	strb	w0, [x1, #78]
  446dc4:	strb	w0, [x1, #79]
  446dc8:	strb	w0, [x1, #80]
  446dcc:	strb	w0, [x1, #81]
  446dd0:	strb	w0, [x1, #82]
  446dd4:	strb	w0, [x1, #83]
  446dd8:	strb	w0, [x1, #84]
  446ddc:	strb	w0, [x1, #85]
  446de0:	strb	w0, [x1, #86]
  446de4:	strb	w0, [x1, #87]
  446de8:	strb	w0, [x1, #88]
  446dec:	strb	w0, [x1, #89]
  446df0:	strb	w0, [x1, #90]
  446df4:	strb	w0, [x1, #91]
  446df8:	strb	w0, [x1, #92]
  446dfc:	strb	w0, [x1, #93]
  446e00:	strb	w0, [x1, #94]
  446e04:	strb	w0, [x1, #95]
  446e08:	strb	w0, [x1, #48]
  446e0c:	strb	w0, [x1, #49]
  446e10:	strb	w0, [x1, #50]
  446e14:	strb	w0, [x1, #51]
  446e18:	strb	w0, [x1, #52]
  446e1c:	strb	w0, [x1, #53]
  446e20:	strb	w0, [x1, #54]
  446e24:	strb	w0, [x1, #55]
  446e28:	strb	w0, [x1, #56]
  446e2c:	strb	w0, [x1, #57]
  446e30:	strb	w0, [x1, #58]
  446e34:	strb	w0, [x1, #59]
  446e38:	strb	w0, [x1, #60]
  446e3c:	strb	w0, [x1, #61]
  446e40:	strb	w0, [x1, #62]
  446e44:	strb	w0, [x1, #63]
  446e48:	strb	w0, [x1, #96]
  446e4c:	ret
  446e50:	stp	x29, x30, [sp, #-112]!
  446e54:	mov	x2, #0x680                 	// #1664
  446e58:	mov	x29, sp
  446e5c:	stp	x19, x20, [sp, #16]
  446e60:	mov	x20, x0
  446e64:	mov	x19, x1
  446e68:	mov	x0, x1
  446e6c:	mov	w1, #0x0                   	// #0
  446e70:	bl	402530 <memset@plt>
  446e74:	str	xzr, [x20, #800]
  446e78:	ldr	x2, [x20, #792]
  446e7c:	str	xzr, [x20, #848]
  446e80:	cbz	x2, 4471f4 <_obstack_memory_used@@Base+0xd38c>
  446e84:	ldr	d0, [x20, #832]
  446e88:	add	x1, x20, #0x328
  446e8c:	stp	x21, x22, [sp, #32]
  446e90:	cmge	d0, d0, #0
  446e94:	fmov	x0, d0
  446e98:	add	x0, x2, x0
  446e9c:	bl	44a590 <_obstack_memory_used@@Base+0x10728>
  446ea0:	mov	x22, x0
  446ea4:	cbz	x0, 447258 <_obstack_memory_used@@Base+0xd3f0>
  446ea8:	ldrsw	x1, [x0, #4]
  446eac:	stp	x23, x24, [sp, #48]
  446eb0:	add	x23, x0, #0x4
  446eb4:	sub	x23, x23, x1
  446eb8:	ldr	x0, [x20, #824]
  446ebc:	str	x0, [x19, #1608]
  446ec0:	add	x21, x23, #0x9
  446ec4:	mov	x0, x21
  446ec8:	bl	402330 <strlen@plt>
  446ecc:	ldrb	w1, [x23, #9]
  446ed0:	add	x2, x0, #0x1
  446ed4:	add	x2, x21, x2
  446ed8:	cmp	w1, #0x65
  446edc:	b.eq	4470c8 <_obstack_memory_used@@Base+0xd260>  // b.none
  446ee0:	ldrb	w6, [x23, #8]
  446ee4:	ldrb	w3, [x2]
  446ee8:	cmp	w6, #0x3
  446eec:	b.hi	447338 <_obstack_memory_used@@Base+0xd4d0>  // b.pmore
  446ef0:	stp	x25, x26, [sp, #64]
  446ef4:	stp	x27, x28, [sp, #80]
  446ef8:	mov	x5, #0x0                   	// #0
  446efc:	mov	w4, #0x0                   	// #0
  446f00:	b	446f08 <_obstack_memory_used@@Base+0xd0a0>
  446f04:	ldrb	w3, [x2]
  446f08:	and	x1, x3, #0x7f
  446f0c:	add	x2, x2, #0x1
  446f10:	lsl	x1, x1, x4
  446f14:	add	w4, w4, #0x7
  446f18:	orr	x5, x5, x1
  446f1c:	tbnz	w3, #7, 446f04 <_obstack_memory_used@@Base+0xd09c>
  446f20:	mov	x0, #0x0                   	// #0
  446f24:	mov	w3, #0x0                   	// #0
  446f28:	str	x5, [x19, #1632]
  446f2c:	nop
  446f30:	mov	x5, x2
  446f34:	ldrb	w4, [x2], #1
  446f38:	and	x1, x4, #0x7f
  446f3c:	lsl	x1, x1, x3
  446f40:	add	w3, w3, #0x7
  446f44:	orr	x0, x0, x1
  446f48:	tbnz	w4, #7, 446f30 <_obstack_memory_used@@Base+0xd0c8>
  446f4c:	cmp	w3, #0x3f
  446f50:	b.hi	446f68 <_obstack_memory_used@@Base+0xd100>  // b.pmore
  446f54:	mov	x1, #0xffffffffffffffff    	// #-1
  446f58:	tst	x4, #0x40
  446f5c:	lsl	x3, x1, x3
  446f60:	orr	x3, x0, x3
  446f64:	csel	x0, x3, x0, ne  // ne = any
  446f68:	str	x0, [x19, #1624]
  446f6c:	cmp	w6, #0x1
  446f70:	mov	x4, #0x0                   	// #0
  446f74:	mov	w3, #0x0                   	// #0
  446f78:	b.eq	4470e4 <_obstack_memory_used@@Base+0xd27c>  // b.none
  446f7c:	nop
  446f80:	ldrb	w0, [x2], #1
  446f84:	and	x1, x0, #0x7f
  446f88:	lsl	x1, x1, x3
  446f8c:	add	w3, w3, #0x7
  446f90:	orr	x4, x4, x1
  446f94:	tbnz	w0, #7, 446f80 <_obstack_memory_used@@Base+0xd118>
  446f98:	mov	w0, #0xffffffff            	// #-1
  446f9c:	str	x4, [x19, #1640]
  446fa0:	strb	w0, [x19, #1649]
  446fa4:	ldrb	w3, [x21]
  446fa8:	cmp	w3, #0x7a
  446fac:	b.eq	447104 <_obstack_memory_used@@Base+0xd29c>  // b.none
  446fb0:	mov	x24, #0x0                   	// #0
  446fb4:	cbz	w3, 44739c <_obstack_memory_used@@Base+0xd534>
  446fb8:	add	x21, x21, #0x1
  446fbc:	add	x25, sp, #0x68
  446fc0:	mov	w26, #0x1                   	// #1
  446fc4:	b	446fec <_obstack_memory_used@@Base+0xd184>
  446fc8:	cmp	w3, #0x52
  446fcc:	b.eq	447148 <_obstack_memory_used@@Base+0xd2e0>  // b.none
  446fd0:	cmp	w3, #0x50
  446fd4:	b.eq	447154 <_obstack_memory_used@@Base+0xd2ec>  // b.none
  446fd8:	cmp	w3, #0x53
  446fdc:	b.ne	447208 <_obstack_memory_used@@Base+0xd3a0>  // b.any
  446fe0:	strb	w26, [x19, #1651]
  446fe4:	ldrb	w3, [x21], #1
  446fe8:	cbz	w3, 447004 <_obstack_memory_used@@Base+0xd19c>
  446fec:	cmp	w3, #0x4c
  446ff0:	b.ne	446fc8 <_obstack_memory_used@@Base+0xd160>  // b.any
  446ff4:	ldrb	w0, [x2], #1
  446ff8:	strb	w0, [x19, #1649]
  446ffc:	ldrb	w3, [x21], #1
  447000:	cbnz	w3, 446fec <_obstack_memory_used@@Base+0xd184>
  447004:	cbz	x24, 447204 <_obstack_memory_used@@Base+0xd39c>
  447008:	ldr	w1, [x23]
  44700c:	mov	x0, x24
  447010:	mov	x3, x19
  447014:	mov	x2, x20
  447018:	add	x1, x1, #0x4
  44701c:	add	x1, x23, x1
  447020:	bl	446548 <_obstack_memory_used@@Base+0xc6e0>
  447024:	ldrb	w0, [x19, #1648]
  447028:	cmp	w0, #0xff
  44702c:	b.eq	447330 <_obstack_memory_used@@Base+0xd4c8>  // b.none
  447030:	and	w0, w0, #0x7
  447034:	cmp	w0, #0x2
  447038:	b.eq	447328 <_obstack_memory_used@@Base+0xd4c0>  // b.none
  44703c:	b.ls	44719c <_obstack_memory_used@@Base+0xd334>  // b.plast
  447040:	cmp	w0, #0x3
  447044:	mov	x21, #0x10                  	// #16
  447048:	b.ne	44718c <_obstack_memory_used@@Base+0xd324>  // b.any
  44704c:	ldrb	w0, [x19, #1650]
  447050:	add	x21, x22, x21
  447054:	ldrb	w24, [x19, #1649]
  447058:	cbz	w0, 4471b4 <_obstack_memory_used@@Base+0xd34c>
  44705c:	mov	x0, #0x0                   	// #0
  447060:	mov	w2, #0x0                   	// #0
  447064:	nop
  447068:	ldrb	w3, [x21], #1
  44706c:	and	x1, x3, #0x7f
  447070:	lsl	x1, x1, x2
  447074:	add	w2, w2, #0x7
  447078:	orr	x0, x0, x1
  44707c:	tbnz	w3, #7, 447068 <_obstack_memory_used@@Base+0xd200>
  447080:	add	x23, x21, x0
  447084:	cmp	w24, #0xff
  447088:	b.ne	44722c <_obstack_memory_used@@Base+0xd3c4>  // b.any
  44708c:	ldr	w1, [x22]
  447090:	mov	x0, x23
  447094:	mov	x3, x19
  447098:	mov	x2, x20
  44709c:	add	x1, x1, #0x4
  4470a0:	add	x1, x22, x1
  4470a4:	bl	446548 <_obstack_memory_used@@Base+0xc6e0>
  4470a8:	ldp	x21, x22, [sp, #32]
  4470ac:	mov	w0, #0x0                   	// #0
  4470b0:	ldp	x23, x24, [sp, #48]
  4470b4:	ldp	x25, x26, [sp, #64]
  4470b8:	ldp	x27, x28, [sp, #80]
  4470bc:	ldp	x19, x20, [sp, #16]
  4470c0:	ldp	x29, x30, [sp], #112
  4470c4:	ret
  4470c8:	ldrb	w0, [x23, #10]
  4470cc:	cmp	w0, #0x68
  4470d0:	b.ne	446ee0 <_obstack_memory_used@@Base+0xd078>  // b.any
  4470d4:	ldr	x0, [x2], #8
  4470d8:	add	x21, x23, #0xb
  4470dc:	str	x0, [x19, #1656]
  4470e0:	b	446ee0 <_obstack_memory_used@@Base+0xd078>
  4470e4:	ldrb	w0, [x2]
  4470e8:	add	x2, x5, #0x2
  4470ec:	str	x0, [x19, #1640]
  4470f0:	mov	w0, #0xffffffff            	// #-1
  4470f4:	strb	w0, [x19, #1649]
  4470f8:	ldrb	w3, [x21]
  4470fc:	cmp	w3, #0x7a
  447100:	b.ne	446fb0 <_obstack_memory_used@@Base+0xd148>  // b.any
  447104:	mov	x0, #0x0                   	// #0
  447108:	mov	w3, #0x0                   	// #0
  44710c:	nop
  447110:	ldrb	w4, [x2], #1
  447114:	and	x1, x4, #0x7f
  447118:	lsl	x1, x1, x3
  44711c:	add	w3, w3, #0x7
  447120:	orr	x0, x0, x1
  447124:	tbnz	w4, #7, 447110 <_obstack_memory_used@@Base+0xd2a8>
  447128:	mov	w1, #0x1                   	// #1
  44712c:	strb	w1, [x19, #1650]
  447130:	add	x24, x2, x0
  447134:	add	x0, x21, #0x1
  447138:	ldrb	w3, [x21, #1]
  44713c:	cbz	w3, 447008 <_obstack_memory_used@@Base+0xd1a0>
  447140:	mov	x21, x0
  447144:	b	446fb8 <_obstack_memory_used@@Base+0xd150>
  447148:	ldrb	w0, [x2], #1
  44714c:	strb	w0, [x19, #1648]
  447150:	b	446fe4 <_obstack_memory_used@@Base+0xd17c>
  447154:	mov	x27, x2
  447158:	mov	x1, x20
  44715c:	ldrb	w28, [x27], #1
  447160:	mov	w0, w28
  447164:	bl	4464d0 <_obstack_memory_used@@Base+0xc668>
  447168:	mov	x2, x27
  44716c:	mov	x1, x0
  447170:	mov	x3, x25
  447174:	mov	w0, w28
  447178:	bl	446370 <_obstack_memory_used@@Base+0xc508>
  44717c:	mov	x2, x0
  447180:	ldr	x1, [sp, #104]
  447184:	str	x1, [x19, #1616]
  447188:	b	446fe4 <_obstack_memory_used@@Base+0xd17c>
  44718c:	cmp	w0, #0x4
  447190:	mov	x21, #0x18                  	// #24
  447194:	b.eq	44704c <_obstack_memory_used@@Base+0xd1e4>  // b.none
  447198:	bl	402650 <abort@plt>
  44719c:	mov	x21, #0x18                  	// #24
  4471a0:	cbnz	w0, 447198 <_obstack_memory_used@@Base+0xd330>
  4471a4:	ldrb	w0, [x19, #1650]
  4471a8:	add	x21, x22, x21
  4471ac:	ldrb	w24, [x19, #1649]
  4471b0:	cbnz	w0, 44705c <_obstack_memory_used@@Base+0xd1f4>
  4471b4:	mov	x23, x21
  4471b8:	cmp	w24, #0xff
  4471bc:	b.eq	44708c <_obstack_memory_used@@Base+0xd224>  // b.none
  4471c0:	mov	x1, x20
  4471c4:	mov	w0, w24
  4471c8:	bl	4464d0 <_obstack_memory_used@@Base+0xc668>
  4471cc:	mov	x1, x0
  4471d0:	mov	x2, x21
  4471d4:	mov	w0, w24
  4471d8:	add	x3, sp, #0x68
  4471dc:	bl	446370 <_obstack_memory_used@@Base+0xc508>
  4471e0:	ldr	x1, [sp, #104]
  4471e4:	mov	x23, x0
  4471e8:	str	x1, [x20, #800]
  4471ec:	b	44708c <_obstack_memory_used@@Base+0xd224>
  4471f0:	ldp	x21, x22, [sp, #32]
  4471f4:	mov	w0, #0x5                   	// #5
  4471f8:	ldp	x19, x20, [sp, #16]
  4471fc:	ldp	x29, x30, [sp], #112
  447200:	ret
  447204:	mov	x24, x2
  447208:	cbnz	x24, 447008 <_obstack_memory_used@@Base+0xd1a0>
  44720c:	ldp	x25, x26, [sp, #64]
  447210:	ldp	x27, x28, [sp, #80]
  447214:	mov	w0, #0x3                   	// #3
  447218:	ldp	x19, x20, [sp, #16]
  44721c:	ldp	x21, x22, [sp, #32]
  447220:	ldp	x23, x24, [sp, #48]
  447224:	ldp	x29, x30, [sp], #112
  447228:	ret
  44722c:	mov	x1, x20
  447230:	mov	w0, w24
  447234:	bl	4464d0 <_obstack_memory_used@@Base+0xc668>
  447238:	mov	x1, x0
  44723c:	mov	x2, x21
  447240:	mov	w0, w24
  447244:	add	x3, sp, #0x68
  447248:	bl	446370 <_obstack_memory_used@@Base+0xc508>
  44724c:	ldr	x0, [sp, #104]
  447250:	str	x0, [x20, #800]
  447254:	b	44708c <_obstack_memory_used@@Base+0xd224>
  447258:	ldr	x0, [x20, #792]
  44725c:	mov	w1, #0x1168                	// #4456
  447260:	movk	w1, #0xd280, lsl #16
  447264:	ldr	w2, [x0]
  447268:	cmp	w2, w1
  44726c:	b.ne	4471f0 <_obstack_memory_used@@Base+0xd388>  // b.any
  447270:	ldr	w1, [x0, #4]
  447274:	mov	w0, #0x1                   	// #1
  447278:	movk	w0, #0xd400, lsl #16
  44727c:	cmp	w1, w0
  447280:	b.ne	4471f0 <_obstack_memory_used@@Base+0xd388>  // b.any
  447284:	ldr	x6, [x20, #784]
  447288:	mov	w3, #0x1                   	// #1
  44728c:	mov	x1, x19
  447290:	mov	w2, w3
  447294:	add	x8, x6, #0x130
  447298:	mov	x4, #0x1f                  	// #31
  44729c:	mov	x5, #0x130                 	// #304
  4472a0:	mov	x0, #0x8                   	// #8
  4472a4:	str	x5, [x19, #1576]
  4472a8:	str	x4, [x19, #1584]
  4472ac:	str	w3, [x19, #1600]
  4472b0:	str	w2, [x1, #8]
  4472b4:	str	x0, [x1], #16
  4472b8:	add	x0, x0, #0x8
  4472bc:	cmp	x0, #0x100
  4472c0:	b.ne	4472b0 <_obstack_memory_used@@Base+0xd448>  // b.any
  4472c4:	ldr	w0, [x6, #592]
  4472c8:	add	x5, x6, #0x250
  4472cc:	cbz	w0, 44735c <_obstack_memory_used@@Base+0xd4f4>
  4472d0:	mov	w7, #0x8001                	// #32769
  4472d4:	add	x4, x19, #0x600
  4472d8:	add	x9, x6, x19
  4472dc:	movk	w7, #0x4650, lsl #16
  4472e0:	mov	w3, #0x1                   	// #1
  4472e4:	b	4472f8 <_obstack_memory_used@@Base+0xd490>
  4472e8:	ldr	w0, [x5, #4]
  4472ec:	add	x5, x5, x0
  4472f0:	ldr	w0, [x5]
  4472f4:	cbz	w0, 44735c <_obstack_memory_used@@Base+0xd4f4>
  4472f8:	cmp	w0, w7
  4472fc:	b.ne	4472e8 <_obstack_memory_used@@Base+0xd480>  // b.any
  447300:	sub	x2, x5, #0x520
  447304:	add	x0, x19, #0x400
  447308:	sub	x2, x2, x9
  44730c:	nop
  447310:	str	w3, [x0, #8]
  447314:	add	x1, x2, x0
  447318:	str	x1, [x0], #16
  44731c:	cmp	x4, x0
  447320:	b.ne	447310 <_obstack_memory_used@@Base+0xd4a8>  // b.any
  447324:	b	4472e8 <_obstack_memory_used@@Base+0xd480>
  447328:	mov	x21, #0xc                   	// #12
  44732c:	b	44704c <_obstack_memory_used@@Base+0xd1e4>
  447330:	mov	x21, #0x8                   	// #8
  447334:	b	44704c <_obstack_memory_used@@Base+0xd1e4>
  447338:	cmp	w3, #0x8
  44733c:	b.ne	447214 <_obstack_memory_used@@Base+0xd3ac>  // b.any
  447340:	ldrb	w0, [x2, #1]
  447344:	cbnz	w0, 447214 <_obstack_memory_used@@Base+0xd3ac>
  447348:	stp	x25, x26, [sp, #64]
  44734c:	add	x2, x2, #0x2
  447350:	stp	x27, x28, [sp, #80]
  447354:	ldrb	w3, [x2]
  447358:	b	446ef8 <_obstack_memory_used@@Base+0xd090>
  44735c:	mov	w3, #0x1                   	// #1
  447360:	strb	w3, [x19, #1651]
  447364:	add	x1, x6, #0x230
  447368:	mov	w5, #0x4                   	// #4
  44736c:	ldr	x2, [x8, #264]
  447370:	sub	x1, x1, x8
  447374:	mov	x4, #0x60                  	// #96
  447378:	mov	w0, #0x0                   	// #0
  44737c:	sub	x8, x2, x8
  447380:	ldp	x21, x22, [sp, #32]
  447384:	str	x1, [x19, #496]
  447388:	str	w3, [x19, #504]
  44738c:	str	x8, [x19, #1536]
  447390:	str	w5, [x19, #1544]
  447394:	str	x4, [x19, #1640]
  447398:	b	4470bc <_obstack_memory_used@@Base+0xd254>
  44739c:	mov	x24, x2
  4473a0:	b	447008 <_obstack_memory_used@@Base+0xd1a0>
  4473a4:	nop
  4473a8:	stp	x29, x30, [sp, #-80]!
  4473ac:	mov	x29, sp
  4473b0:	stp	x21, x22, [sp, #32]
  4473b4:	mov	x21, x0
  4473b8:	ldr	x0, [x1, #832]
  4473bc:	stp	x19, x20, [sp, #16]
  4473c0:	mov	x20, x1
  4473c4:	stp	x23, x24, [sp, #48]
  4473c8:	tbz	x0, #62, 4473d4 <_obstack_memory_used@@Base+0xd56c>
  4473cc:	ldrb	w1, [x1, #887]
  4473d0:	cbnz	w1, 4473dc <_obstack_memory_used@@Base+0xd574>
  4473d4:	ldr	x1, [x20, #248]
  4473d8:	cbz	x1, 447498 <_obstack_memory_used@@Base+0xd630>
  4473dc:	adrp	x24, 478000 <_obstack_memory_used@@Base+0x3e198>
  4473e0:	add	x23, x21, #0x358
  4473e4:	add	x24, x24, #0x948
  4473e8:	add	x22, x20, #0x358
  4473ec:	mov	x19, #0x0                   	// #0
  4473f0:	b	447414 <_obstack_memory_used@@Base+0xd5ac>
  4473f4:	cbz	x0, 447408 <_obstack_memory_used@@Base+0xd5a0>
  4473f8:	ldrb	w2, [x19, x24]
  4473fc:	cmp	w2, #0x8
  447400:	b.ne	447504 <_obstack_memory_used@@Base+0xd69c>  // b.any
  447404:	str	x1, [x0]
  447408:	add	x19, x19, #0x1
  44740c:	cmp	x19, #0x61
  447410:	b.eq	447450 <_obstack_memory_used@@Base+0xd5e8>  // b.none
  447414:	ldrb	w2, [x23, x19]
  447418:	ldr	x0, [x21, x19, lsl #3]
  44741c:	ldr	x1, [x20, x19, lsl #3]
  447420:	cbnz	w2, 447504 <_obstack_memory_used@@Base+0xd69c>
  447424:	ldrb	w2, [x22, x19]
  447428:	cbnz	w2, 4473f4 <_obstack_memory_used@@Base+0xd58c>
  44742c:	cmp	x1, #0x0
  447430:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  447434:	ccmp	x0, x1, #0x4, ne  // ne = any
  447438:	b.eq	447408 <_obstack_memory_used@@Base+0xd5a0>  // b.none
  44743c:	ldrb	w2, [x24, x19]
  447440:	add	x19, x19, #0x1
  447444:	bl	4022e0 <memcpy@plt>
  447448:	cmp	x19, #0x61
  44744c:	b.ne	447414 <_obstack_memory_used@@Base+0xd5ac>  // b.any
  447450:	ldr	x0, [x21, #832]
  447454:	tbz	x0, #62, 447460 <_obstack_memory_used@@Base+0xd5f8>
  447458:	ldrb	w0, [x21, #887]
  44745c:	cbnz	w0, 447480 <_obstack_memory_used@@Base+0xd618>
  447460:	ldr	x1, [x21, #248]
  447464:	mov	x0, #0x0                   	// #0
  447468:	cbz	x1, 4474c4 <_obstack_memory_used@@Base+0xd65c>
  44746c:	ldp	x19, x20, [sp, #16]
  447470:	ldp	x21, x22, [sp, #32]
  447474:	ldp	x23, x24, [sp, #48]
  447478:	ldp	x29, x30, [sp], #80
  44747c:	ret
  447480:	mov	x0, #0x0                   	// #0
  447484:	ldp	x19, x20, [sp, #16]
  447488:	ldp	x21, x22, [sp, #32]
  44748c:	ldp	x23, x24, [sp, #48]
  447490:	ldp	x29, x30, [sp], #80
  447494:	ret
  447498:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  44749c:	ldr	x2, [x20, #784]
  4474a0:	ldrb	w1, [x1, #2407]
  4474a4:	cmp	w1, #0x8
  4474a8:	b.ne	447504 <_obstack_memory_used@@Base+0xd69c>  // b.any
  4474ac:	str	x2, [sp, #72]
  4474b0:	tbz	x0, #62, 4474b8 <_obstack_memory_used@@Base+0xd650>
  4474b4:	strb	wzr, [x20, #887]
  4474b8:	add	x0, sp, #0x48
  4474bc:	str	x0, [x20, #248]
  4474c0:	b	4473dc <_obstack_memory_used@@Base+0xd574>
  4474c4:	ldr	x1, [x20, #832]
  4474c8:	ldr	x0, [x20, #248]
  4474cc:	tbnz	x1, #62, 4474f8 <_obstack_memory_used@@Base+0xd690>
  4474d0:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  4474d4:	ldrb	w1, [x1, #2407]
  4474d8:	cmp	w1, #0x8
  4474dc:	b.ne	447504 <_obstack_memory_used@@Base+0xd69c>  // b.any
  4474e0:	ldr	x0, [x0]
  4474e4:	ldr	x2, [x21, #784]
  4474e8:	ldr	x1, [x20, #848]
  4474ec:	sub	x0, x0, x2
  4474f0:	add	x0, x0, x1
  4474f4:	b	44746c <_obstack_memory_used@@Base+0xd604>
  4474f8:	ldrb	w1, [x20, #887]
  4474fc:	cbz	w1, 4474d0 <_obstack_memory_used@@Base+0xd668>
  447500:	b	4474e4 <_obstack_memory_used@@Base+0xd67c>
  447504:	bl	402650 <abort@plt>
  447508:	sub	sp, sp, #0x260
  44750c:	cmp	x0, x1
  447510:	stp	x29, x30, [sp]
  447514:	mov	x29, sp
  447518:	str	x3, [sp, #96]
  44751c:	b.cs	447974 <_obstack_memory_used@@Base+0xdb0c>  // b.hs, b.nlast
  447520:	stp	x19, x20, [sp, #16]
  447524:	mov	x19, x0
  447528:	mov	w20, #0x1                   	// #1
  44752c:	stp	x21, x22, [sp, #32]
  447530:	mov	x21, x1
  447534:	add	x22, sp, #0x60
  447538:	stp	x23, x24, [sp, #48]
  44753c:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x1e198>
  447540:	mov	x24, x2
  447544:	add	x23, x23, #0x59c
  447548:	stp	x25, x26, [sp, #64]
  44754c:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x1e198>
  447550:	add	x25, x25, #0x77c
  447554:	nop
  447558:	mov	x4, x19
  44755c:	ldrb	w5, [x4], #1
  447560:	sub	w0, w5, #0x3
  447564:	cmp	w0, #0xee
  447568:	b.ls	447570 <_obstack_memory_used@@Base+0xd708>  // b.plast
  44756c:	bl	402650 <abort@plt>
  447570:	ldrh	w0, [x23, w0, uxtw #1]
  447574:	adr	x1, 447580 <_obstack_memory_used@@Base+0xd718>
  447578:	add	x0, x1, w0, sxth #2
  44757c:	br	x0
  447580:	mov	x3, #0x0                   	// #0
  447584:	mov	w1, #0x0                   	// #0
  447588:	ldrb	w2, [x4], #1
  44758c:	and	x0, x2, #0x7f
  447590:	lsl	x0, x0, x1
  447594:	add	w1, w1, #0x7
  447598:	orr	x3, x3, x0
  44759c:	tbnz	w2, #7, 447588 <_obstack_memory_used@@Base+0xd720>
  4475a0:	cmp	w1, #0x3f
  4475a4:	b.ls	447908 <_obstack_memory_used@@Base+0xdaa0>  // b.plast
  4475a8:	sub	w5, w5, #0x70
  4475ac:	cmp	w5, #0x61
  4475b0:	b.gt	44756c <_obstack_memory_used@@Base+0xd704>
  4475b4:	ldr	x2, [x24, #832]
  4475b8:	sxtw	x1, w5
  4475bc:	ldr	x0, [x24, x1, lsl #3]
  4475c0:	tbz	x2, #62, 4475d0 <_obstack_memory_used@@Base+0xd768>
  4475c4:	add	x1, x24, x1
  4475c8:	ldrb	w1, [x1, #856]
  4475cc:	cbnz	w1, 4475f0 <_obstack_memory_used@@Base+0xd788>
  4475d0:	cmp	w5, #0x2e
  4475d4:	b.eq	447968 <_obstack_memory_used@@Base+0xdb00>  // b.none
  4475d8:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  4475dc:	add	x1, x1, #0x948
  4475e0:	ldrb	w1, [x1, w5, sxtw]
  4475e4:	cmp	w1, #0x8
  4475e8:	b.ne	44756c <_obstack_memory_used@@Base+0xd704>  // b.any
  4475ec:	ldr	x0, [x0]
  4475f0:	add	x0, x3, x0
  4475f4:	mov	w3, w20
  4475f8:	mov	x19, x4
  4475fc:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447600:	mov	w3, w20
  447604:	add	x19, x19, #0x9
  447608:	ldur	x0, [x19, #-8]
  44760c:	nop
  447610:	cmp	w3, #0x3f
  447614:	b.gt	44756c <_obstack_memory_used@@Base+0xd704>
  447618:	add	w20, w3, #0x1
  44761c:	str	x0, [x22, w3, sxtw #3]
  447620:	cmp	x21, x19
  447624:	b.hi	447558 <_obstack_memory_used@@Base+0xd6f0>  // b.pmore
  447628:	cbz	w20, 44756c <_obstack_memory_used@@Base+0xd704>
  44762c:	sub	w20, w20, #0x1
  447630:	add	x0, sp, #0x60
  447634:	ldp	x29, x30, [sp]
  447638:	ldr	x0, [x0, w20, sxtw #3]
  44763c:	ldp	x19, x20, [sp, #16]
  447640:	ldp	x21, x22, [sp, #32]
  447644:	ldp	x23, x24, [sp, #48]
  447648:	ldp	x25, x26, [sp, #64]
  44764c:	add	sp, sp, #0x260
  447650:	ret
  447654:	sub	w5, w5, #0x50
  447658:	cmp	w5, #0x61
  44765c:	b.gt	44756c <_obstack_memory_used@@Base+0xd704>
  447660:	ldr	x2, [x24, #832]
  447664:	sxtw	x1, w5
  447668:	ldr	x0, [x24, x1, lsl #3]
  44766c:	tbz	x2, #62, 44767c <_obstack_memory_used@@Base+0xd814>
  447670:	add	x1, x24, x1
  447674:	ldrb	w1, [x1, #856]
  447678:	cbnz	w1, 4475f4 <_obstack_memory_used@@Base+0xd78c>
  44767c:	cmp	w5, #0x2e
  447680:	b.eq	447954 <_obstack_memory_used@@Base+0xdaec>  // b.none
  447684:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  447688:	add	x1, x1, #0x948
  44768c:	ldrb	w1, [x1, w5, sxtw]
  447690:	cmp	w1, #0x8
  447694:	b.ne	44756c <_obstack_memory_used@@Base+0xd704>  // b.any
  447698:	mov	w3, w20
  44769c:	mov	x19, x4
  4476a0:	ldr	x0, [x0]
  4476a4:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  4476a8:	sub	w0, w5, #0x30
  4476ac:	mov	w3, w20
  4476b0:	mov	x19, x4
  4476b4:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  4476b8:	cmp	w20, #0x1
  4476bc:	b.le	44756c <_obstack_memory_used@@Base+0xd704>
  4476c0:	sub	w3, w20, #0x2
  4476c4:	sub	w20, w20, #0x1
  4476c8:	sub	w5, w5, #0x1a
  4476cc:	cmp	w5, #0x14
  4476d0:	ldr	x1, [x22, w20, sxtw #3]
  4476d4:	ldr	x0, [x22, w3, sxtw #3]
  4476d8:	b.hi	44756c <_obstack_memory_used@@Base+0xd704>  // b.pmore
  4476dc:	ldrh	w2, [x25, w5, uxtw #1]
  4476e0:	adr	x5, 4476ec <_obstack_memory_used@@Base+0xd884>
  4476e4:	add	x2, x5, w2, sxth #2
  4476e8:	br	x2
  4476ec:	cbz	w20, 44756c <_obstack_memory_used@@Base+0xd704>
  4476f0:	sub	w3, w20, #0x1
  4476f4:	cmp	w5, #0x20
  4476f8:	ldr	x0, [x22, w3, sxtw #3]
  4476fc:	b.eq	447c50 <_obstack_memory_used@@Base+0xdde8>  // b.none
  447700:	b.hi	447720 <_obstack_memory_used@@Base+0xd8b8>  // b.pmore
  447704:	cmp	w5, #0x19
  447708:	b.eq	447984 <_obstack_memory_used@@Base+0xdb1c>  // b.none
  44770c:	cmp	w5, #0x1f
  447710:	b.ne	4478f4 <_obstack_memory_used@@Base+0xda8c>  // b.any
  447714:	neg	x0, x0
  447718:	mov	x19, x4
  44771c:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447720:	cmp	w5, #0x23
  447724:	b.eq	447928 <_obstack_memory_used@@Base+0xdac0>  // b.none
  447728:	cmp	w5, #0x94
  44772c:	b.ne	44756c <_obstack_memory_used@@Base+0xd704>  // b.any
  447730:	ldrb	w1, [x19, #1]
  447734:	add	x19, x19, #0x2
  447738:	cmp	w1, #0x4
  44773c:	b.eq	447b40 <_obstack_memory_used@@Base+0xdcd8>  // b.none
  447740:	b.hi	447c6c <_obstack_memory_used@@Base+0xde04>  // b.pmore
  447744:	cmp	w1, #0x1
  447748:	b.ne	447c5c <_obstack_memory_used@@Base+0xddf4>  // b.any
  44774c:	ldrb	w0, [x0]
  447750:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447754:	cmp	w20, #0x2
  447758:	b.le	44756c <_obstack_memory_used@@Base+0xd704>
  44775c:	sub	w1, w20, #0x2
  447760:	sub	w2, w20, #0x1
  447764:	sub	w0, w20, #0x3
  447768:	mov	x19, x4
  44776c:	sxtw	x1, w1
  447770:	sxtw	x2, w2
  447774:	sxtw	x0, w0
  447778:	ldr	x5, [x22, x1, lsl #3]
  44777c:	ldr	x3, [x22, x2, lsl #3]
  447780:	ldr	x4, [x22, x0, lsl #3]
  447784:	str	x5, [x22, x2, lsl #3]
  447788:	str	x4, [x22, x1, lsl #3]
  44778c:	str	x3, [x22, x0, lsl #3]
  447790:	b	447620 <_obstack_memory_used@@Base+0xd7b8>
  447794:	cmp	w20, #0x1
  447798:	b.le	44756c <_obstack_memory_used@@Base+0xd704>
  44779c:	sub	w0, w20, #0x2
  4477a0:	sub	w1, w20, #0x1
  4477a4:	mov	x19, x4
  4477a8:	sxtw	x0, w0
  4477ac:	sxtw	x1, w1
  4477b0:	ldr	x3, [x22, x0, lsl #3]
  4477b4:	ldr	x2, [x22, x1, lsl #3]
  4477b8:	str	x3, [x22, x1, lsl #3]
  4477bc:	str	x2, [x22, x0, lsl #3]
  4477c0:	b	447620 <_obstack_memory_used@@Base+0xd7b8>
  4477c4:	ldrb	w3, [x19, #1]
  4477c8:	sub	w1, w20, #0x1
  4477cc:	add	x19, x19, #0x2
  4477d0:	sxtw	x2, w1
  4477d4:	cmp	x3, w1, sxtw
  4477d8:	b.ge	44756c <_obstack_memory_used@@Base+0xd704>  // b.tcont
  4477dc:	sub	x1, x2, x3
  4477e0:	mov	w3, w20
  4477e4:	ldr	x0, [x22, x1, lsl #3]
  4477e8:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  4477ec:	cmp	w20, #0x1
  4477f0:	b.le	44756c <_obstack_memory_used@@Base+0xd704>
  4477f4:	sub	w0, w20, #0x2
  4477f8:	mov	x19, x4
  4477fc:	mov	w3, w20
  447800:	ldr	x0, [x22, w0, sxtw #3]
  447804:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447808:	cbz	w20, 44756c <_obstack_memory_used@@Base+0xd704>
  44780c:	sub	w20, w20, #0x1
  447810:	mov	x19, x4
  447814:	b	447620 <_obstack_memory_used@@Base+0xd7b8>
  447818:	cbz	w20, 44756c <_obstack_memory_used@@Base+0xd704>
  44781c:	sub	w0, w20, #0x1
  447820:	mov	x19, x4
  447824:	mov	w3, w20
  447828:	ldr	x0, [x22, w0, sxtw #3]
  44782c:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447830:	ldursh	x1, [x19, #1]
  447834:	add	x19, x19, #0x3
  447838:	add	x19, x19, x1
  44783c:	b	447620 <_obstack_memory_used@@Base+0xd7b8>
  447840:	ldrb	w0, [x19, #1]
  447844:	mov	w3, w20
  447848:	add	x19, x19, #0x2
  44784c:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447850:	ldrb	w26, [x19, #1]
  447854:	mov	x1, x24
  447858:	mov	w0, w26
  44785c:	bl	4464d0 <_obstack_memory_used@@Base+0xc668>
  447860:	add	x2, x19, #0x2
  447864:	mov	x1, x0
  447868:	add	x3, sp, #0x58
  44786c:	mov	w0, w26
  447870:	bl	446370 <_obstack_memory_used@@Base+0xc508>
  447874:	mov	x19, x0
  447878:	mov	w3, w20
  44787c:	ldr	x0, [sp, #88]
  447880:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447884:	cbz	w20, 44756c <_obstack_memory_used@@Base+0xd704>
  447888:	sub	w20, w20, #0x1
  44788c:	add	x1, x19, #0x3
  447890:	ldr	x0, [x22, w20, sxtw #3]
  447894:	cbz	x0, 447920 <_obstack_memory_used@@Base+0xdab8>
  447898:	ldursh	x19, [x19, #1]
  44789c:	add	x19, x1, x19
  4478a0:	b	447620 <_obstack_memory_used@@Base+0xd7b8>
  4478a4:	ldursw	x0, [x19, #1]
  4478a8:	mov	w3, w20
  4478ac:	add	x19, x19, #0x5
  4478b0:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  4478b4:	ldur	w0, [x19, #1]
  4478b8:	mov	w3, w20
  4478bc:	add	x19, x19, #0x5
  4478c0:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  4478c4:	ldursh	x0, [x19, #1]
  4478c8:	mov	w3, w20
  4478cc:	add	x19, x19, #0x3
  4478d0:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  4478d4:	ldurh	w0, [x19, #1]
  4478d8:	mov	w3, w20
  4478dc:	add	x19, x19, #0x3
  4478e0:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  4478e4:	ldrsb	x0, [x19, #1]
  4478e8:	mov	w3, w20
  4478ec:	add	x19, x19, #0x2
  4478f0:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  4478f4:	cmp	w5, #0x6
  4478f8:	b.ne	44756c <_obstack_memory_used@@Base+0xd704>  // b.any
  4478fc:	mov	x19, x4
  447900:	ldr	x0, [x0]
  447904:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447908:	mov	x0, #0xffffffffffffffff    	// #-1
  44790c:	tst	x2, #0x40
  447910:	lsl	x0, x0, x1
  447914:	orr	x0, x3, x0
  447918:	csel	x3, x0, x3, ne  // ne = any
  44791c:	b	4475a8 <_obstack_memory_used@@Base+0xd740>
  447920:	mov	x19, x1
  447924:	b	447620 <_obstack_memory_used@@Base+0xd7b8>
  447928:	mov	x6, #0x0                   	// #0
  44792c:	mov	w2, #0x0                   	// #0
  447930:	ldrb	w5, [x4], #1
  447934:	and	x1, x5, #0x7f
  447938:	lsl	x1, x1, x2
  44793c:	add	w2, w2, #0x7
  447940:	orr	x6, x6, x1
  447944:	tbnz	w5, #7, 447930 <_obstack_memory_used@@Base+0xdac8>
  447948:	add	x0, x0, x6
  44794c:	mov	x19, x4
  447950:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447954:	cntd	x0
  447958:	mov	w3, w20
  44795c:	mov	x19, x4
  447960:	sxtw	x0, w0
  447964:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447968:	cntd	x0
  44796c:	sxtw	x0, w0
  447970:	b	4475f0 <_obstack_memory_used@@Base+0xd788>
  447974:	mov	x0, x3
  447978:	ldp	x29, x30, [sp]
  44797c:	add	sp, sp, #0x260
  447980:	ret
  447984:	cmp	x0, #0x0
  447988:	mov	x19, x4
  44798c:	cneg	x0, x0, lt  // lt = tstop
  447990:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447994:	mov	x19, x4
  447998:	mov	w1, #0x0                   	// #0
  44799c:	mov	x4, #0x0                   	// #0
  4479a0:	ldrb	w2, [x19], #1
  4479a4:	and	x0, x2, #0x7f
  4479a8:	lsl	x0, x0, x1
  4479ac:	add	w1, w1, #0x7
  4479b0:	orr	x4, x4, x0
  4479b4:	tbnz	w2, #7, 4479a0 <_obstack_memory_used@@Base+0xdb38>
  4479b8:	mov	x3, #0x0                   	// #0
  4479bc:	mov	w1, #0x0                   	// #0
  4479c0:	ldrb	w2, [x19], #1
  4479c4:	and	x0, x2, #0x7f
  4479c8:	lsl	x0, x0, x1
  4479cc:	add	w1, w1, #0x7
  4479d0:	orr	x3, x3, x0
  4479d4:	tbnz	w2, #7, 4479c0 <_obstack_memory_used@@Base+0xdb58>
  4479d8:	cmp	w1, #0x3f
  4479dc:	b.hi	4479f4 <_obstack_memory_used@@Base+0xdb8c>  // b.pmore
  4479e0:	mov	x0, #0xffffffffffffffff    	// #-1
  4479e4:	tst	x2, #0x40
  4479e8:	lsl	x0, x0, x1
  4479ec:	orr	x0, x3, x0
  4479f0:	csel	x3, x0, x3, ne  // ne = any
  4479f4:	cmp	w4, #0x61
  4479f8:	mov	w1, w4
  4479fc:	b.gt	44756c <_obstack_memory_used@@Base+0xd704>
  447a00:	ldr	x2, [x24, #832]
  447a04:	sxtw	x4, w4
  447a08:	ldr	x0, [x24, x4, lsl #3]
  447a0c:	tbz	x2, #62, 447a1c <_obstack_memory_used@@Base+0xdbb4>
  447a10:	add	x4, x24, x4
  447a14:	ldrb	w2, [x4, #856]
  447a18:	cbnz	w2, 447a3c <_obstack_memory_used@@Base+0xdbd4>
  447a1c:	cmp	w1, #0x2e
  447a20:	b.eq	447c30 <_obstack_memory_used@@Base+0xddc8>  // b.none
  447a24:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x3e198>
  447a28:	add	x2, x2, #0x948
  447a2c:	ldrb	w1, [x2, w1, sxtw]
  447a30:	cmp	w1, #0x8
  447a34:	b.ne	44756c <_obstack_memory_used@@Base+0xd704>  // b.any
  447a38:	ldr	x0, [x0]
  447a3c:	add	x0, x3, x0
  447a40:	mov	w3, w20
  447a44:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447a48:	mov	x19, x4
  447a4c:	mov	x0, #0x0                   	// #0
  447a50:	mov	w2, #0x0                   	// #0
  447a54:	nop
  447a58:	ldrb	w4, [x19], #1
  447a5c:	and	x1, x4, #0x7f
  447a60:	lsl	x1, x1, x2
  447a64:	add	w2, w2, #0x7
  447a68:	orr	x0, x0, x1
  447a6c:	tbnz	w4, #7, 447a58 <_obstack_memory_used@@Base+0xdbf0>
  447a70:	mov	w3, w20
  447a74:	cmp	w2, #0x3f
  447a78:	b.hi	447610 <_obstack_memory_used@@Base+0xd7a8>  // b.pmore
  447a7c:	tbz	w4, #6, 447610 <_obstack_memory_used@@Base+0xd7a8>
  447a80:	mov	x1, #0xffffffffffffffff    	// #-1
  447a84:	lsl	x2, x1, x2
  447a88:	orr	x0, x0, x2
  447a8c:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447a90:	mov	x19, x4
  447a94:	mov	x0, #0x0                   	// #0
  447a98:	mov	w2, #0x0                   	// #0
  447a9c:	nop
  447aa0:	ldrb	w3, [x19], #1
  447aa4:	and	x1, x3, #0x7f
  447aa8:	lsl	x1, x1, x2
  447aac:	add	w2, w2, #0x7
  447ab0:	orr	x0, x0, x1
  447ab4:	tbnz	w3, #7, 447aa0 <_obstack_memory_used@@Base+0xdc38>
  447ab8:	mov	w3, w20
  447abc:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447ac0:	mov	x19, x4
  447ac4:	mov	x3, #0x0                   	// #0
  447ac8:	mov	w1, #0x0                   	// #0
  447acc:	nop
  447ad0:	ldrb	w2, [x19], #1
  447ad4:	and	x0, x2, #0x7f
  447ad8:	lsl	x0, x0, x1
  447adc:	add	w1, w1, #0x7
  447ae0:	orr	x3, x3, x0
  447ae4:	tbnz	w2, #7, 447ad0 <_obstack_memory_used@@Base+0xdc68>
  447ae8:	cmp	w3, #0x61
  447aec:	mov	w1, w3
  447af0:	b.gt	44756c <_obstack_memory_used@@Base+0xd704>
  447af4:	ldr	x2, [x24, #832]
  447af8:	sxtw	x3, w3
  447afc:	ldr	x0, [x24, x3, lsl #3]
  447b00:	tbz	x2, #62, 447b10 <_obstack_memory_used@@Base+0xdca8>
  447b04:	add	x3, x24, x3
  447b08:	ldrb	w2, [x3, #856]
  447b0c:	cbnz	w2, 447a40 <_obstack_memory_used@@Base+0xdbd8>
  447b10:	cmp	w1, #0x2e
  447b14:	b.eq	447c40 <_obstack_memory_used@@Base+0xddd8>  // b.none
  447b18:	adrp	x2, 478000 <_obstack_memory_used@@Base+0x3e198>
  447b1c:	add	x2, x2, #0x948
  447b20:	ldrb	w1, [x2, w1, sxtw]
  447b24:	cmp	w1, #0x8
  447b28:	b.ne	44756c <_obstack_memory_used@@Base+0xd704>  // b.any
  447b2c:	mov	w3, w20
  447b30:	ldr	x0, [x0]
  447b34:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447b38:	mov	x19, x4
  447b3c:	b	447620 <_obstack_memory_used@@Base+0xd7b8>
  447b40:	ldr	w0, [x0]
  447b44:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447b48:	cmp	x0, x1
  447b4c:	mov	x19, x4
  447b50:	cset	x0, ne  // ne = any
  447b54:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447b58:	cmp	x0, x1
  447b5c:	mov	x19, x4
  447b60:	cset	x0, lt  // lt = tstop
  447b64:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447b68:	cmp	x0, x1
  447b6c:	mov	x19, x4
  447b70:	cset	x0, le
  447b74:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447b78:	cmp	x0, x1
  447b7c:	mov	x19, x4
  447b80:	cset	x0, gt
  447b84:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447b88:	cmp	x0, x1
  447b8c:	mov	x19, x4
  447b90:	cset	x0, ge  // ge = tcont
  447b94:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447b98:	cmp	x0, x1
  447b9c:	mov	x19, x4
  447ba0:	cset	x0, eq  // eq = none
  447ba4:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447ba8:	eor	x0, x0, x1
  447bac:	mov	x19, x4
  447bb0:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447bb4:	mov	x19, x4
  447bb8:	asr	x0, x0, x1
  447bbc:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447bc0:	mov	x19, x4
  447bc4:	lsr	x0, x0, x1
  447bc8:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447bcc:	mov	x19, x4
  447bd0:	lsl	x0, x0, x1
  447bd4:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447bd8:	add	x0, x0, x1
  447bdc:	mov	x19, x4
  447be0:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447be4:	orr	x0, x0, x1
  447be8:	mov	x19, x4
  447bec:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447bf0:	mul	x0, x0, x1
  447bf4:	mov	x19, x4
  447bf8:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447bfc:	udiv	x2, x0, x1
  447c00:	mov	x19, x4
  447c04:	msub	x0, x2, x1, x0
  447c08:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447c0c:	sub	x0, x0, x1
  447c10:	mov	x19, x4
  447c14:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447c18:	sdiv	x0, x0, x1
  447c1c:	mov	x19, x4
  447c20:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447c24:	and	x0, x0, x1
  447c28:	mov	x19, x4
  447c2c:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447c30:	cntd	x0
  447c34:	sxtw	x0, w0
  447c38:	add	x0, x3, x0
  447c3c:	b	447a40 <_obstack_memory_used@@Base+0xdbd8>
  447c40:	cntd	x0
  447c44:	mov	w3, w20
  447c48:	sxtw	x0, w0
  447c4c:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447c50:	mvn	x0, x0
  447c54:	mov	x19, x4
  447c58:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447c5c:	cmp	w1, #0x2
  447c60:	b.ne	44756c <_obstack_memory_used@@Base+0xd704>  // b.any
  447c64:	ldrh	w0, [x0]
  447c68:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447c6c:	cmp	w1, #0x8
  447c70:	b.ne	44756c <_obstack_memory_used@@Base+0xd704>  // b.any
  447c74:	ldr	x0, [x0]
  447c78:	b	447610 <_obstack_memory_used@@Base+0xd7a8>
  447c7c:	nop
  447c80:	sub	sp, sp, #0x440
  447c84:	mov	x2, #0x3c0                 	// #960
  447c88:	stp	x29, x30, [sp]
  447c8c:	mov	x29, sp
  447c90:	stp	x27, x28, [sp, #80]
  447c94:	add	x28, sp, #0x80
  447c98:	mov	x27, x0
  447c9c:	stp	x19, x20, [sp, #16]
  447ca0:	stp	x21, x22, [sp, #32]
  447ca4:	stp	x23, x24, [sp, #48]
  447ca8:	stp	x25, x26, [sp, #64]
  447cac:	str	x1, [sp, #104]
  447cb0:	mov	x1, x0
  447cb4:	mov	x0, x28
  447cb8:	bl	4022e0 <memcpy@plt>
  447cbc:	ldr	x1, [sp, #960]
  447cc0:	tbz	x1, #62, 447ccc <_obstack_memory_used@@Base+0xde64>
  447cc4:	ldrb	w0, [sp, #1015]
  447cc8:	cbnz	w0, 447cd4 <_obstack_memory_used@@Base+0xde6c>
  447ccc:	ldr	x0, [x28, #248]
  447cd0:	cbz	x0, 447fa0 <_obstack_memory_used@@Base+0xe138>
  447cd4:	ldr	x0, [x27, #832]
  447cd8:	tbz	x0, #62, 447ce0 <_obstack_memory_used@@Base+0xde78>
  447cdc:	strb	wzr, [x27, #887]
  447ce0:	ldr	x0, [sp, #104]
  447ce4:	ldr	w0, [x0, #1600]
  447ce8:	str	xzr, [x27, #248]
  447cec:	cmp	w0, #0x1
  447cf0:	b.ne	447d40 <_obstack_memory_used@@Base+0xded8>  // b.any
  447cf4:	ldr	x0, [sp, #104]
  447cf8:	ldr	x0, [x0, #1584]
  447cfc:	cmp	w0, #0x61
  447d00:	b.gt	447f08 <_obstack_memory_used@@Base+0xe0a0>
  447d04:	sxtw	x2, w0
  447d08:	ldr	x3, [x28, x2, lsl #3]
  447d0c:	tbnz	x1, #62, 447f80 <_obstack_memory_used@@Base+0xe118>
  447d10:	cmp	w0, #0x2e
  447d14:	b.eq	447f94 <_obstack_memory_used@@Base+0xe12c>  // b.none
  447d18:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  447d1c:	add	x0, x0, #0x948
  447d20:	ldrb	w0, [x0, x2]
  447d24:	cmp	w0, #0x8
  447d28:	b.ne	447f08 <_obstack_memory_used@@Base+0xe0a0>  // b.any
  447d2c:	ldr	x3, [x3]
  447d30:	ldr	x0, [sp, #104]
  447d34:	ldr	x0, [x0, #1576]
  447d38:	add	x22, x3, x0
  447d3c:	b	447d84 <_obstack_memory_used@@Base+0xdf1c>
  447d40:	cmp	w0, #0x2
  447d44:	b.ne	447f08 <_obstack_memory_used@@Base+0xe0a0>  // b.any
  447d48:	ldr	x0, [sp, #104]
  447d4c:	mov	x1, #0x0                   	// #0
  447d50:	mov	w3, #0x0                   	// #0
  447d54:	ldr	x0, [x0, #1592]
  447d58:	ldrb	w4, [x0], #1
  447d5c:	and	x2, x4, #0x7f
  447d60:	lsl	x2, x2, x3
  447d64:	add	w3, w3, #0x7
  447d68:	orr	x1, x1, x2
  447d6c:	tbnz	w4, #7, 447d58 <_obstack_memory_used@@Base+0xdef0>
  447d70:	add	x1, x0, x1
  447d74:	mov	x2, x28
  447d78:	mov	x3, #0x0                   	// #0
  447d7c:	bl	447508 <_obstack_memory_used@@Base+0xd6a0>
  447d80:	mov	x22, x0
  447d84:	ldr	x25, [sp, #104]
  447d88:	adrp	x23, 478000 <_obstack_memory_used@@Base+0x3e198>
  447d8c:	add	x26, x27, #0x358
  447d90:	add	x20, x23, #0x948
  447d94:	add	x21, sp, #0x3d8
  447d98:	mov	x24, #0x0                   	// #0
  447d9c:	mov	w19, #0x1                   	// #1
  447da0:	str	x22, [x27, #784]
  447da4:	nop
  447da8:	ldr	w2, [x25, #8]
  447dac:	cmp	w2, #0x3
  447db0:	b.eq	447e54 <_obstack_memory_used@@Base+0xdfec>  // b.none
  447db4:	b.hi	447e98 <_obstack_memory_used@@Base+0xe030>  // b.pmore
  447db8:	cmp	w2, #0x1
  447dbc:	b.eq	447f0c <_obstack_memory_used@@Base+0xe0a4>  // b.none
  447dc0:	cmp	w2, #0x2
  447dc4:	b.ne	447dec <_obstack_memory_used@@Base+0xdf84>  // b.any
  447dc8:	ldr	x0, [x25]
  447dcc:	ldrb	w2, [x21, w0, sxtw]
  447dd0:	sxtw	x1, w0
  447dd4:	cbnz	w2, 447f24 <_obstack_memory_used@@Base+0xe0bc>
  447dd8:	ldr	x2, [x27, #832]
  447ddc:	ldr	x0, [x28, x1, lsl #3]
  447de0:	tbnz	x2, #62, 447e90 <_obstack_memory_used@@Base+0xe028>
  447de4:	nop
  447de8:	str	x0, [x27, x24, lsl #3]
  447dec:	add	x24, x24, #0x1
  447df0:	add	x25, x25, #0x10
  447df4:	cmp	x24, #0x62
  447df8:	add	x26, x26, #0x1
  447dfc:	b.ne	447da8 <_obstack_memory_used@@Base+0xdf40>  // b.any
  447e00:	ldr	x3, [sp, #104]
  447e04:	ldr	x0, [x27, #832]
  447e08:	ldrb	w2, [x3, #1651]
  447e0c:	orr	x1, x0, #0x8000000000000000
  447e10:	and	x0, x0, #0x7fffffffffffffff
  447e14:	cmp	w2, #0x0
  447e18:	csel	x0, x0, x1, eq  // eq = none
  447e1c:	ldp	x29, x30, [sp]
  447e20:	orr	x1, x0, #0x2000000000000000
  447e24:	ldp	x19, x20, [sp, #16]
  447e28:	ldp	x21, x22, [sp, #32]
  447e2c:	ldp	x23, x24, [sp, #48]
  447e30:	ldp	x25, x26, [sp, #64]
  447e34:	str	x0, [x27, #832]
  447e38:	ldr	x2, [x3, #544]
  447e3c:	tst	x2, #0x1
  447e40:	csel	x0, x1, x0, ne  // ne = any
  447e44:	str	x0, [x27, #832]
  447e48:	ldp	x27, x28, [sp, #80]
  447e4c:	add	sp, sp, #0x440
  447e50:	ret
  447e54:	ldr	x0, [x25]
  447e58:	mov	x1, #0x0                   	// #0
  447e5c:	mov	w4, #0x0                   	// #0
  447e60:	ldrb	w5, [x0], #1
  447e64:	and	x2, x5, #0x7f
  447e68:	lsl	x2, x2, x4
  447e6c:	add	w4, w4, #0x7
  447e70:	orr	x1, x1, x2
  447e74:	tbnz	w5, #7, 447e60 <_obstack_memory_used@@Base+0xdff8>
  447e78:	add	x1, x0, x1
  447e7c:	mov	x3, x22
  447e80:	mov	x2, x28
  447e84:	bl	447508 <_obstack_memory_used@@Base+0xd6a0>
  447e88:	ldr	x1, [x27, #832]
  447e8c:	tbz	x1, #62, 447de8 <_obstack_memory_used@@Base+0xdf80>
  447e90:	strb	wzr, [x26]
  447e94:	b	447de8 <_obstack_memory_used@@Base+0xdf80>
  447e98:	cmp	w2, #0x4
  447e9c:	b.eq	447ef4 <_obstack_memory_used@@Base+0xe08c>  // b.none
  447ea0:	cmp	w2, #0x5
  447ea4:	b.ne	447dec <_obstack_memory_used@@Base+0xdf84>  // b.any
  447ea8:	ldr	x0, [x25]
  447eac:	mov	x1, #0x0                   	// #0
  447eb0:	mov	w4, #0x0                   	// #0
  447eb4:	nop
  447eb8:	ldrb	w5, [x0], #1
  447ebc:	and	x2, x5, #0x7f
  447ec0:	lsl	x2, x2, x4
  447ec4:	add	w4, w4, #0x7
  447ec8:	orr	x1, x1, x2
  447ecc:	tbnz	w5, #7, 447eb8 <_obstack_memory_used@@Base+0xe050>
  447ed0:	add	x1, x0, x1
  447ed4:	mov	x3, x22
  447ed8:	mov	x2, x28
  447edc:	bl	447508 <_obstack_memory_used@@Base+0xd6a0>
  447ee0:	ldrb	w1, [x24, x20]
  447ee4:	cmp	w1, #0x8
  447ee8:	b.hi	447f08 <_obstack_memory_used@@Base+0xe0a0>  // b.pmore
  447eec:	strb	w19, [x26]
  447ef0:	b	447de8 <_obstack_memory_used@@Base+0xdf80>
  447ef4:	ldr	x0, [x25]
  447ef8:	ldrb	w1, [x24, x20]
  447efc:	add	x0, x22, x0
  447f00:	cmp	w1, #0x8
  447f04:	b.ls	447eec <_obstack_memory_used@@Base+0xe084>  // b.plast
  447f08:	bl	402650 <abort@plt>
  447f0c:	ldr	x1, [x27, #832]
  447f10:	ldr	x0, [x25]
  447f14:	add	x0, x22, x0
  447f18:	tbz	x1, #62, 447de8 <_obstack_memory_used@@Base+0xdf80>
  447f1c:	strb	wzr, [x26]
  447f20:	b	447de8 <_obstack_memory_used@@Base+0xdf80>
  447f24:	cmp	w0, #0x61
  447f28:	b.gt	447f08 <_obstack_memory_used@@Base+0xe0a0>
  447f2c:	ldr	x4, [sp, #960]
  447f30:	ldr	x2, [x28, x1, lsl #3]
  447f34:	tbz	x4, #62, 447f58 <_obstack_memory_used@@Base+0xe0f0>
  447f38:	mov	x0, x2
  447f3c:	nop
  447f40:	add	x1, x23, #0x948
  447f44:	ldrb	w1, [x24, x1]
  447f48:	cmp	w1, #0x8
  447f4c:	b.hi	447f08 <_obstack_memory_used@@Base+0xe0a0>  // b.pmore
  447f50:	strb	w19, [x26]
  447f54:	b	447de8 <_obstack_memory_used@@Base+0xdf80>
  447f58:	cmp	w0, #0x2e
  447f5c:	b.eq	447f74 <_obstack_memory_used@@Base+0xe10c>  // b.none
  447f60:	ldrb	w0, [x20, x1]
  447f64:	cmp	w0, #0x8
  447f68:	b.ne	447f08 <_obstack_memory_used@@Base+0xe0a0>  // b.any
  447f6c:	ldr	x0, [x2]
  447f70:	b	447f40 <_obstack_memory_used@@Base+0xe0d8>
  447f74:	cntd	x0
  447f78:	sxtw	x0, w0
  447f7c:	b	447f40 <_obstack_memory_used@@Base+0xe0d8>
  447f80:	add	x1, sp, #0x3d8
  447f84:	ldrb	w1, [x1, x2]
  447f88:	cbnz	w1, 447d30 <_obstack_memory_used@@Base+0xdec8>
  447f8c:	cmp	w0, #0x2e
  447f90:	b.ne	447d18 <_obstack_memory_used@@Base+0xdeb0>  // b.any
  447f94:	cntd	x0
  447f98:	sxtw	x3, w0
  447f9c:	b	447d30 <_obstack_memory_used@@Base+0xdec8>
  447fa0:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  447fa4:	ldr	x2, [x27, #784]
  447fa8:	ldrb	w0, [x0, #2407]
  447fac:	cmp	w0, #0x8
  447fb0:	b.ne	447f08 <_obstack_memory_used@@Base+0xe0a0>  // b.any
  447fb4:	str	x2, [sp, #120]
  447fb8:	tbz	x1, #62, 447fc0 <_obstack_memory_used@@Base+0xe158>
  447fbc:	strb	wzr, [sp, #1015]
  447fc0:	add	x0, sp, #0x78
  447fc4:	str	x0, [x28, #248]
  447fc8:	b	447cd4 <_obstack_memory_used@@Base+0xde6c>
  447fcc:	nop
  447fd0:	sub	sp, sp, #0x6d0
  447fd4:	stp	x29, x30, [sp]
  447fd8:	mov	x29, sp
  447fdc:	xpaclri
  447fe0:	stp	x19, x20, [sp, #16]
  447fe4:	mov	x19, x0
  447fe8:	mov	x20, x30
  447fec:	stp	x21, x22, [sp, #32]
  447ff0:	mov	x22, x1
  447ff4:	mov	x21, x2
  447ff8:	mov	w1, #0x0                   	// #0
  447ffc:	mov	x2, #0x3c0                 	// #960
  448000:	str	x23, [sp, #48]
  448004:	bl	402530 <memset@plt>
  448008:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  44800c:	str	x20, [x19, #792]
  448010:	str	x0, [x19, #832]
  448014:	add	x23, sp, #0x50
  448018:	mov	x1, x23
  44801c:	mov	x0, x19
  448020:	bl	446e50 <_obstack_memory_used@@Base+0xcfe8>
  448024:	cbnz	w0, 448218 <_obstack_memory_used@@Base+0xe3b0>
  448028:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x3d198>
  44802c:	adrp	x20, 478000 <_obstack_memory_used@@Base+0x3e198>
  448030:	ldr	x0, [x0, #3880]
  448034:	cbz	x0, 4480bc <_obstack_memory_used@@Base+0xe254>
  448038:	add	x0, x20, #0x948
  44803c:	adrp	x1, 446000 <_obstack_memory_used@@Base+0xc198>
  448040:	add	x0, x0, #0x64
  448044:	add	x1, x1, #0xcf8
  448048:	bl	4026a0 <pthread_once@plt>
  44804c:	cbnz	w0, 4480bc <_obstack_memory_used@@Base+0xe254>
  448050:	add	x20, x20, #0x948
  448054:	ldrb	w0, [x20, #31]
  448058:	cmp	w0, #0x8
  44805c:	b.ne	448218 <_obstack_memory_used@@Base+0xe3b0>  // b.any
  448060:	ldr	x0, [x19, #832]
  448064:	str	x22, [sp, #72]
  448068:	tbz	x0, #62, 448070 <_obstack_memory_used@@Base+0xe208>
  44806c:	strb	wzr, [x19, #887]
  448070:	add	x0, sp, #0x48
  448074:	mov	x3, #0x1f                  	// #31
  448078:	mov	w2, #0x1                   	// #1
  44807c:	str	x0, [x19, #248]
  448080:	mov	x1, x23
  448084:	mov	x0, x19
  448088:	str	xzr, [sp, #1656]
  44808c:	str	x3, [sp, #1664]
  448090:	str	w2, [sp, #1680]
  448094:	bl	447c80 <_obstack_memory_used@@Base+0xde18>
  448098:	mov	x30, x21
  44809c:	xpaclri
  4480a0:	ldp	x21, x22, [sp, #32]
  4480a4:	ldr	x23, [sp, #48]
  4480a8:	str	x30, [x19, #792]
  4480ac:	ldp	x29, x30, [sp]
  4480b0:	ldp	x19, x20, [sp, #16]
  4480b4:	add	sp, sp, #0x6d0
  4480b8:	ret
  4480bc:	ldrb	w0, [x20, #2376]
  4480c0:	add	x3, x20, #0x948
  4480c4:	cbnz	w0, 448050 <_obstack_memory_used@@Base+0xe1e8>
  4480c8:	mov	w4, #0x8                   	// #8
  4480cc:	strb	w4, [x20, #2376]
  4480d0:	strb	w4, [x3, #1]
  4480d4:	strb	w4, [x3, #2]
  4480d8:	strb	w4, [x3, #3]
  4480dc:	strb	w4, [x3, #4]
  4480e0:	strb	w4, [x3, #5]
  4480e4:	strb	w4, [x3, #6]
  4480e8:	strb	w4, [x3, #7]
  4480ec:	strb	w4, [x3, #8]
  4480f0:	strb	w4, [x3, #9]
  4480f4:	strb	w4, [x3, #10]
  4480f8:	strb	w4, [x3, #11]
  4480fc:	strb	w4, [x3, #12]
  448100:	strb	w4, [x3, #13]
  448104:	strb	w4, [x3, #14]
  448108:	strb	w4, [x3, #15]
  44810c:	strb	w4, [x3, #16]
  448110:	strb	w4, [x3, #17]
  448114:	strb	w4, [x3, #18]
  448118:	strb	w4, [x3, #19]
  44811c:	strb	w4, [x3, #20]
  448120:	strb	w4, [x3, #21]
  448124:	strb	w4, [x3, #22]
  448128:	strb	w4, [x3, #23]
  44812c:	strb	w4, [x3, #24]
  448130:	strb	w4, [x3, #25]
  448134:	strb	w4, [x3, #26]
  448138:	strb	w4, [x3, #27]
  44813c:	strb	w4, [x3, #28]
  448140:	strb	w4, [x3, #29]
  448144:	strb	w4, [x3, #30]
  448148:	strb	w4, [x3, #31]
  44814c:	strb	w4, [x3, #64]
  448150:	strb	w4, [x3, #46]
  448154:	strb	w4, [x3, #65]
  448158:	strb	w4, [x3, #66]
  44815c:	strb	w4, [x3, #67]
  448160:	strb	w4, [x3, #68]
  448164:	strb	w4, [x3, #69]
  448168:	strb	w4, [x3, #70]
  44816c:	strb	w4, [x3, #71]
  448170:	strb	w4, [x3, #72]
  448174:	strb	w4, [x3, #73]
  448178:	strb	w4, [x3, #74]
  44817c:	strb	w4, [x3, #75]
  448180:	strb	w4, [x3, #76]
  448184:	strb	w4, [x3, #77]
  448188:	strb	w4, [x3, #78]
  44818c:	strb	w4, [x3, #79]
  448190:	strb	w4, [x3, #80]
  448194:	strb	w4, [x3, #81]
  448198:	strb	w4, [x3, #82]
  44819c:	strb	w4, [x3, #83]
  4481a0:	strb	w4, [x3, #84]
  4481a4:	strb	w4, [x3, #85]
  4481a8:	strb	w4, [x3, #86]
  4481ac:	strb	w4, [x3, #87]
  4481b0:	strb	w4, [x3, #88]
  4481b4:	strb	w4, [x3, #89]
  4481b8:	strb	w4, [x3, #90]
  4481bc:	strb	w4, [x3, #91]
  4481c0:	strb	w4, [x3, #92]
  4481c4:	strb	w4, [x3, #93]
  4481c8:	strb	w4, [x3, #94]
  4481cc:	strb	w4, [x3, #95]
  4481d0:	strb	w4, [x3, #48]
  4481d4:	strb	w4, [x3, #49]
  4481d8:	strb	w4, [x3, #50]
  4481dc:	strb	w4, [x3, #51]
  4481e0:	strb	w4, [x3, #52]
  4481e4:	strb	w4, [x3, #53]
  4481e8:	strb	w4, [x3, #54]
  4481ec:	strb	w4, [x3, #55]
  4481f0:	strb	w4, [x3, #56]
  4481f4:	strb	w4, [x3, #57]
  4481f8:	strb	w4, [x3, #58]
  4481fc:	strb	w4, [x3, #59]
  448200:	strb	w4, [x3, #60]
  448204:	strb	w4, [x3, #61]
  448208:	strb	w4, [x3, #62]
  44820c:	strb	w4, [x3, #63]
  448210:	strb	w4, [x3, #96]
  448214:	b	448050 <_obstack_memory_used@@Base+0xe1e8>
  448218:	bl	402650 <abort@plt>
  44821c:	nop
  448220:	stp	x29, x30, [sp, #-32]!
  448224:	mov	x29, sp
  448228:	stp	x19, x20, [sp, #16]
  44822c:	mov	x20, x1
  448230:	mov	x19, x0
  448234:	bl	447c80 <_obstack_memory_used@@Base+0xde18>
  448238:	ldr	x0, [x20, #1640]
  44823c:	add	x1, x20, x0, lsl #4
  448240:	ldr	w1, [x1, #8]
  448244:	cmp	w1, #0x6
  448248:	b.ne	44825c <_obstack_memory_used@@Base+0xe3f4>  // b.any
  44824c:	str	xzr, [x19, #792]
  448250:	ldp	x19, x20, [sp, #16]
  448254:	ldp	x29, x30, [sp], #32
  448258:	ret
  44825c:	cmp	w0, #0x61
  448260:	b.gt	4482d0 <_obstack_memory_used@@Base+0xe468>
  448264:	ldr	x2, [x19, #832]
  448268:	sxtw	x1, w0
  44826c:	ldr	x17, [x19, x1, lsl #3]
  448270:	tbz	x2, #62, 448280 <_obstack_memory_used@@Base+0xe418>
  448274:	add	x2, x19, x1
  448278:	ldrb	w2, [x2, #856]
  44827c:	cbnz	w2, 4482a0 <_obstack_memory_used@@Base+0xe438>
  448280:	cmp	w0, #0x2e
  448284:	b.eq	4482c4 <_obstack_memory_used@@Base+0xe45c>  // b.none
  448288:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  44828c:	add	x0, x0, #0x948
  448290:	ldrb	w0, [x0, x1]
  448294:	cmp	w0, #0x8
  448298:	b.ne	4482d0 <_obstack_memory_used@@Base+0xe468>  // b.any
  44829c:	ldr	x17, [x17]
  4482a0:	ldr	x0, [x20, #544]
  4482a4:	str	x17, [x19, #792]
  4482a8:	tbz	w0, #0, 4482b4 <_obstack_memory_used@@Base+0xe44c>
  4482ac:	ldr	x16, [x19, #784]
  4482b0:	autia1716
  4482b4:	str	x17, [x19, #792]
  4482b8:	ldp	x19, x20, [sp, #16]
  4482bc:	ldp	x29, x30, [sp], #32
  4482c0:	ret
  4482c4:	cntd	x0
  4482c8:	sxtw	x17, w0
  4482cc:	b	4482a0 <_obstack_memory_used@@Base+0xe438>
  4482d0:	bl	402650 <abort@plt>
  4482d4:	nop
  4482d8:	sub	sp, sp, #0x6c0
  4482dc:	stp	x29, x30, [sp]
  4482e0:	mov	x29, sp
  4482e4:	stp	x19, x20, [sp, #16]
  4482e8:	mov	x19, x1
  4482ec:	stp	x21, x22, [sp, #32]
  4482f0:	mov	x21, x0
  4482f4:	add	x22, sp, #0x40
  4482f8:	stp	x23, x24, [sp, #48]
  4482fc:	mov	x24, x2
  448300:	mov	x23, #0x1                   	// #1
  448304:	nop
  448308:	mov	x1, x22
  44830c:	mov	x0, x19
  448310:	bl	446e50 <_obstack_memory_used@@Base+0xcfe8>
  448314:	ldr	x3, [x19, #784]
  448318:	ldr	x1, [x19, #832]
  44831c:	ldr	x2, [x21, #24]
  448320:	sub	x1, x3, x1, lsr #63
  448324:	cmp	x2, x1
  448328:	cset	w20, eq  // eq = none
  44832c:	lsl	w20, w20, #2
  448330:	cbnz	w0, 44837c <_obstack_memory_used@@Base+0xe514>
  448334:	ldr	x5, [sp, #1680]
  448338:	cbz	x5, 448364 <_obstack_memory_used@@Base+0xe4fc>
  44833c:	ldr	x2, [x21]
  448340:	mov	x4, x19
  448344:	mov	x3, x21
  448348:	orr	w1, w20, #0x2
  44834c:	mov	w0, #0x1                   	// #1
  448350:	blr	x5
  448354:	cmp	w0, #0x7
  448358:	b.eq	448398 <_obstack_memory_used@@Base+0xe530>  // b.none
  44835c:	cmp	w0, #0x8
  448360:	b.ne	44837c <_obstack_memory_used@@Base+0xe514>  // b.any
  448364:	cbnz	w20, 4483b4 <_obstack_memory_used@@Base+0xe54c>
  448368:	add	x23, x23, #0x1
  44836c:	mov	x1, x22
  448370:	mov	x0, x19
  448374:	bl	448220 <_obstack_memory_used@@Base+0xe3b8>
  448378:	b	448308 <_obstack_memory_used@@Base+0xe4a0>
  44837c:	mov	w0, #0x2                   	// #2
  448380:	ldp	x29, x30, [sp]
  448384:	ldp	x19, x20, [sp, #16]
  448388:	ldp	x21, x22, [sp, #32]
  44838c:	ldp	x23, x24, [sp, #48]
  448390:	add	sp, sp, #0x6c0
  448394:	ret
  448398:	str	x23, [x24]
  44839c:	ldp	x29, x30, [sp]
  4483a0:	ldp	x19, x20, [sp, #16]
  4483a4:	ldp	x21, x22, [sp, #32]
  4483a8:	ldp	x23, x24, [sp, #48]
  4483ac:	add	sp, sp, #0x6c0
  4483b0:	ret
  4483b4:	bl	402650 <abort@plt>
  4483b8:	sub	sp, sp, #0x6d0
  4483bc:	stp	x29, x30, [sp]
  4483c0:	mov	x29, sp
  4483c4:	stp	x19, x20, [sp, #16]
  4483c8:	mov	x20, x0
  4483cc:	stp	x21, x22, [sp, #32]
  4483d0:	mov	x21, x1
  4483d4:	add	x22, sp, #0x50
  4483d8:	stp	x23, x24, [sp, #48]
  4483dc:	mov	x23, #0x1                   	// #1
  4483e0:	stp	x25, x26, [sp, #64]
  4483e4:	mov	x26, x2
  4483e8:	ldp	x25, x24, [x0, #16]
  4483ec:	b	448440 <_obstack_memory_used@@Base+0xe5d8>
  4483f0:	blr	x25
  4483f4:	mov	w2, w0
  4483f8:	mov	x4, x21
  4483fc:	mov	x3, x20
  448400:	mov	w1, #0xa                   	// #10
  448404:	mov	w0, #0x1                   	// #1
  448408:	cbnz	w2, 44848c <_obstack_memory_used@@Base+0xe624>
  44840c:	ldr	x5, [sp, #1696]
  448410:	cbz	x5, 448430 <_obstack_memory_used@@Base+0xe5c8>
  448414:	ldr	x2, [x20]
  448418:	blr	x5
  44841c:	mov	w19, w0
  448420:	cmp	w0, #0x7
  448424:	b.eq	4484b0 <_obstack_memory_used@@Base+0xe648>  // b.none
  448428:	cmp	w0, #0x8
  44842c:	b.ne	44848c <_obstack_memory_used@@Base+0xe624>  // b.any
  448430:	add	x23, x23, #0x1
  448434:	mov	x1, x22
  448438:	mov	x0, x21
  44843c:	bl	448220 <_obstack_memory_used@@Base+0xe3b8>
  448440:	mov	x1, x22
  448444:	mov	x0, x21
  448448:	bl	446e50 <_obstack_memory_used@@Base+0xcfe8>
  44844c:	cmp	w0, #0x0
  448450:	mov	w19, w0
  448454:	mov	x5, x24
  448458:	mov	x4, x21
  44845c:	ccmp	w0, #0x5, #0x4, ne  // ne = any
  448460:	b.ne	44848c <_obstack_memory_used@@Base+0xe624>  // b.any
  448464:	cmp	w0, #0x5
  448468:	mov	x3, x20
  44846c:	mov	w1, #0xa                   	// #10
  448470:	mov	w0, #0x1                   	// #1
  448474:	ldr	x2, [x20]
  448478:	b.ne	4483f0 <_obstack_memory_used@@Base+0xe588>  // b.any
  44847c:	mov	w1, #0x1a                  	// #26
  448480:	mov	w0, #0x1                   	// #1
  448484:	blr	x25
  448488:	cbz	w0, 4484b0 <_obstack_memory_used@@Base+0xe648>
  44848c:	mov	w19, #0x2                   	// #2
  448490:	mov	w0, w19
  448494:	ldp	x29, x30, [sp]
  448498:	ldp	x19, x20, [sp, #16]
  44849c:	ldp	x21, x22, [sp, #32]
  4484a0:	ldp	x23, x24, [sp, #48]
  4484a4:	ldp	x25, x26, [sp, #64]
  4484a8:	add	sp, sp, #0x6d0
  4484ac:	ret
  4484b0:	str	x23, [x26]
  4484b4:	mov	w0, w19
  4484b8:	ldp	x29, x30, [sp]
  4484bc:	ldp	x19, x20, [sp, #16]
  4484c0:	ldp	x21, x22, [sp, #32]
  4484c4:	ldp	x23, x24, [sp, #48]
  4484c8:	ldp	x25, x26, [sp, #64]
  4484cc:	add	sp, sp, #0x6d0
  4484d0:	ret
  4484d4:	nop
  4484d8:	cmp	w1, #0x61
  4484dc:	b.gt	448534 <_obstack_memory_used@@Base+0xe6cc>
  4484e0:	ldr	x4, [x0, #832]
  4484e4:	sxtw	x3, w1
  4484e8:	ldr	x2, [x0, x3, lsl #3]
  4484ec:	tbz	x4, #62, 4484fc <_obstack_memory_used@@Base+0xe694>
  4484f0:	add	x0, x0, x3
  4484f4:	ldrb	w0, [x0, #856]
  4484f8:	cbnz	w0, 44852c <_obstack_memory_used@@Base+0xe6c4>
  4484fc:	cmp	w1, #0x2e
  448500:	b.eq	448520 <_obstack_memory_used@@Base+0xe6b8>  // b.none
  448504:	adrp	x0, 478000 <_obstack_memory_used@@Base+0x3e198>
  448508:	add	x0, x0, #0x948
  44850c:	ldrb	w0, [x0, w1, sxtw]
  448510:	cmp	w0, #0x8
  448514:	b.ne	448534 <_obstack_memory_used@@Base+0xe6cc>  // b.any
  448518:	ldr	x0, [x2]
  44851c:	ret
  448520:	cntd	x0
  448524:	sxtw	x0, w0
  448528:	ret
  44852c:	mov	x0, x2
  448530:	ret
  448534:	stp	x29, x30, [sp, #-16]!
  448538:	mov	x29, sp
  44853c:	bl	402650 <abort@plt>
  448540:	ldr	x0, [x0, #784]
  448544:	ret
  448548:	cmp	w1, #0x61
  44854c:	b.gt	448590 <_obstack_memory_used@@Base+0xe728>
  448550:	ldr	x5, [x0, #832]
  448554:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x3e198>
  448558:	add	x3, x3, #0x948
  44855c:	sxtw	x4, w1
  448560:	ldrb	w1, [x3, w1, sxtw]
  448564:	tbz	x5, #62, 448574 <_obstack_memory_used@@Base+0xe70c>
  448568:	add	x3, x0, x4
  44856c:	ldrb	w3, [x3, #856]
  448570:	cbnz	w3, 448588 <_obstack_memory_used@@Base+0xe720>
  448574:	cmp	w1, #0x8
  448578:	ldr	x0, [x0, x4, lsl #3]
  44857c:	b.ne	448590 <_obstack_memory_used@@Base+0xe728>  // b.any
  448580:	str	x2, [x0]
  448584:	ret
  448588:	str	x2, [x0, x4, lsl #3]
  44858c:	ret
  448590:	stp	x29, x30, [sp, #-16]!
  448594:	mov	x29, sp
  448598:	bl	402650 <abort@plt>
  44859c:	nop
  4485a0:	ldr	x0, [x0, #792]
  4485a4:	ret
  4485a8:	ldr	x2, [x0, #832]
  4485ac:	ldr	x0, [x0, #792]
  4485b0:	lsr	x2, x2, #63
  4485b4:	str	w2, [x1]
  4485b8:	ret
  4485bc:	nop
  4485c0:	str	x1, [x0, #792]
  4485c4:	ret
  4485c8:	ldr	x0, [x0, #800]
  4485cc:	ret
  4485d0:	ldr	x0, [x0, #824]
  4485d4:	ret
  4485d8:	stp	x29, x30, [sp, #-48]!
  4485dc:	sub	x0, x0, #0x1
  4485e0:	mov	x29, sp
  4485e4:	add	x1, sp, #0x18
  4485e8:	bl	44a590 <_obstack_memory_used@@Base+0x10728>
  4485ec:	ldr	x1, [sp, #40]
  4485f0:	cmp	x0, #0x0
  4485f4:	ldp	x29, x30, [sp], #48
  4485f8:	csel	x0, x1, x0, ne  // ne = any
  4485fc:	ret
  448600:	ldr	x0, [x0, #816]
  448604:	ret
  448608:	ldr	x0, [x0, #808]
  44860c:	ret
  448610:	sub	sp, sp, #0xa70
  448614:	mov	x2, #0x3c0                 	// #960
  448618:	add	x3, sp, #0x30
  44861c:	stp	x29, x30, [sp]
  448620:	mov	x29, sp
  448624:	stp	x19, x20, [sp, #16]
  448628:	mov	x20, x1
  44862c:	mov	w1, #0x0                   	// #0
  448630:	str	x21, [sp, #32]
  448634:	mov	x21, x0
  448638:	mov	x0, x3
  44863c:	bl	402530 <memset@plt>
  448640:	mov	x2, #0x4000000000000000    	// #4611686018427387904
  448644:	add	x19, sp, #0x3f0
  448648:	add	x21, x21, #0x1
  44864c:	mov	x1, x19
  448650:	str	x21, [sp, #840]
  448654:	str	x2, [sp, #880]
  448658:	bl	446e50 <_obstack_memory_used@@Base+0xcfe8>
  44865c:	cbnz	w0, 448708 <_obstack_memory_used@@Base+0xe8a0>
  448660:	ldr	w0, [sp, #2608]
  448664:	cmp	w0, #0x2
  448668:	b.eq	448708 <_obstack_memory_used@@Base+0xe8a0>  // b.none
  44866c:	sub	x4, x20, x20, lsl #3
  448670:	mov	x1, #0xffffffffffffe680    	// #-6528
  448674:	mov	x0, x19
  448678:	add	x5, x19, #0x620
  44867c:	add	x4, x4, x1
  448680:	add	x2, x20, #0x334
  448684:	b	44869c <_obstack_memory_used@@Base+0xe834>
  448688:	str	xzr, [x4, x2, lsl #3]
  44868c:	add	x0, x0, #0x10
  448690:	add	x2, x2, #0x1
  448694:	cmp	x0, x5
  448698:	b.eq	4486cc <_obstack_memory_used@@Base+0xe864>  // b.none
  44869c:	ldrb	w3, [x0, #8]
  4486a0:	strb	w3, [x2]
  4486a4:	cmp	w3, #0x1
  4486a8:	b.eq	4486b4 <_obstack_memory_used@@Base+0xe84c>  // b.none
  4486ac:	cmp	w3, #0x2
  4486b0:	b.ne	448688 <_obstack_memory_used@@Base+0xe820>  // b.any
  4486b4:	ldr	x3, [x0]
  4486b8:	str	x3, [x4, x2, lsl #3]
  4486bc:	add	x0, x0, #0x10
  4486c0:	add	x2, x2, #0x1
  4486c4:	cmp	x0, x5
  4486c8:	b.ne	44869c <_obstack_memory_used@@Base+0xe834>  // b.any
  4486cc:	ldr	x1, [sp, #896]
  4486d0:	mov	x0, x20
  4486d4:	ldr	x2, [sp, #2584]
  4486d8:	stp	x2, x1, [x20, #16]
  4486dc:	ldr	x2, [sp, #2592]
  4486e0:	strh	w2, [x20, #816]
  4486e4:	ldr	x1, [sp, #2648]
  4486e8:	strh	w1, [x20, #818]
  4486ec:	ldr	x2, [sp, #2664]
  4486f0:	str	x2, [x20, #8]
  4486f4:	ldp	x29, x30, [sp]
  4486f8:	ldp	x19, x20, [sp, #16]
  4486fc:	ldr	x21, [sp, #32]
  448700:	add	sp, sp, #0xa70
  448704:	ret
  448708:	mov	x0, #0x0                   	// #0
  44870c:	ldp	x29, x30, [sp]
  448710:	ldp	x19, x20, [sp, #16]
  448714:	ldr	x21, [sp, #32]
  448718:	add	sp, sp, #0xa70
  44871c:	ret
  448720:	ret
  448724:	nop
  448728:	sub	sp, sp, #0xec0
  44872c:	stp	x29, x30, [sp]
  448730:	mov	x29, sp
  448734:	stp	x21, x22, [sp, #64]
  448738:	add	x21, sp, #0xc0
  44873c:	add	x22, sp, #0x840
  448740:	stp	x0, x1, [sp, #16]
  448744:	add	x1, sp, #0xec0
  448748:	stp	x2, x3, [sp, #32]
  44874c:	mov	x2, x30
  448750:	stp	x19, x20, [sp, #48]
  448754:	mov	x20, x0
  448758:	add	x19, sp, #0x480
  44875c:	mov	x0, x21
  448760:	stp	x23, x24, [sp, #80]
  448764:	stp	x25, x26, [sp, #96]
  448768:	stp	x27, x28, [sp, #112]
  44876c:	stp	d8, d9, [sp, #128]
  448770:	stp	d10, d11, [sp, #144]
  448774:	stp	d12, d13, [sp, #160]
  448778:	stp	d14, d15, [sp, #176]
  44877c:	bl	447fd0 <_obstack_memory_used@@Base+0xe168>
  448780:	mov	x1, x21
  448784:	mov	x0, x19
  448788:	mov	x2, #0x3c0                 	// #960
  44878c:	bl	4022e0 <memcpy@plt>
  448790:	b	4487c4 <_obstack_memory_used@@Base+0xe95c>
  448794:	cbnz	w2, 448830 <_obstack_memory_used@@Base+0xe9c8>
  448798:	ldr	x5, [sp, #3728]
  44879c:	cbz	x5, 4487b8 <_obstack_memory_used@@Base+0xe950>
  4487a0:	ldr	x2, [x20]
  4487a4:	blr	x5
  4487a8:	cmp	w0, #0x6
  4487ac:	b.eq	448838 <_obstack_memory_used@@Base+0xe9d0>  // b.none
  4487b0:	cmp	w0, #0x8
  4487b4:	b.ne	448830 <_obstack_memory_used@@Base+0xe9c8>  // b.any
  4487b8:	mov	x1, x22
  4487bc:	mov	x0, x19
  4487c0:	bl	448220 <_obstack_memory_used@@Base+0xe3b8>
  4487c4:	mov	x1, x22
  4487c8:	mov	x0, x19
  4487cc:	bl	446e50 <_obstack_memory_used@@Base+0xcfe8>
  4487d0:	mov	w2, w0
  4487d4:	mov	w1, #0x1                   	// #1
  4487d8:	mov	x4, x19
  4487dc:	mov	x3, x20
  4487e0:	mov	w0, w1
  4487e4:	cmp	w2, #0x5
  4487e8:	b.ne	448794 <_obstack_memory_used@@Base+0xe92c>  // b.any
  4487ec:	mov	x4, #0x0                   	// #0
  4487f0:	mov	w0, w2
  4487f4:	ldp	x29, x30, [sp]
  4487f8:	ldp	x0, x1, [sp, #16]
  4487fc:	ldp	x2, x3, [sp, #32]
  448800:	ldp	x19, x20, [sp, #48]
  448804:	ldp	x21, x22, [sp, #64]
  448808:	ldp	x23, x24, [sp, #80]
  44880c:	ldp	x25, x26, [sp, #96]
  448810:	ldp	x27, x28, [sp, #112]
  448814:	ldp	d8, d9, [sp, #128]
  448818:	ldp	d10, d11, [sp, #144]
  44881c:	ldp	d12, d13, [sp, #160]
  448820:	ldp	d14, d15, [sp, #176]
  448824:	add	sp, sp, #0xec0
  448828:	add	sp, sp, x4
  44882c:	ret
  448830:	mov	w2, #0x3                   	// #3
  448834:	b	4487ec <_obstack_memory_used@@Base+0xe984>
  448838:	ldr	x4, [sp, #1936]
  44883c:	mov	x1, x21
  448840:	ldr	x3, [sp, #1984]
  448844:	mov	x2, #0x3c0                 	// #960
  448848:	mov	x0, x19
  44884c:	sub	x3, x4, x3, lsr #63
  448850:	stp	xzr, x3, [x20, #16]
  448854:	bl	4022e0 <memcpy@plt>
  448858:	mov	x2, x22
  44885c:	mov	x1, x19
  448860:	mov	x0, x20
  448864:	bl	4482d8 <_obstack_memory_used@@Base+0xe470>
  448868:	mov	w2, w0
  44886c:	cmp	w0, #0x7
  448870:	b.ne	4487ec <_obstack_memory_used@@Base+0xe984>  // b.any
  448874:	mov	x1, x19
  448878:	mov	x0, x21
  44887c:	bl	4473a8 <_obstack_memory_used@@Base+0xd540>
  448880:	mov	x4, x0
  448884:	ldr	x2, [sp, #1024]
  448888:	ldr	x1, [sp, #1944]
  44888c:	tbz	x2, #61, 4488a0 <_obstack_memory_used@@Base+0xea38>
  448890:	mov	x17, x1
  448894:	ldr	x16, [sp, #976]
  448898:	pacia1716
  44889c:	mov	x1, x17
  4488a0:	ldr	x0, [sp, #1936]
  4488a4:	bl	448720 <_obstack_memory_used@@Base+0xe8b8>
  4488a8:	str	x1, [x29, #8]
  4488ac:	b	4487f0 <_obstack_memory_used@@Base+0xe988>
  4488b0:	sub	sp, sp, #0x850
  4488b4:	stp	x29, x30, [sp]
  4488b8:	mov	x29, sp
  4488bc:	stp	x19, x20, [sp, #48]
  4488c0:	mov	x19, x0
  4488c4:	mov	x20, x2
  4488c8:	stp	x21, x22, [sp, #64]
  4488cc:	add	x22, sp, #0xd0
  4488d0:	mov	x21, x1
  4488d4:	stp	x0, x1, [sp, #16]
  4488d8:	mov	x0, x22
  4488dc:	add	x1, sp, #0x850
  4488e0:	stp	x2, x3, [sp, #32]
  4488e4:	mov	x2, x30
  4488e8:	stp	x23, x24, [sp, #80]
  4488ec:	add	x23, sp, #0x490
  4488f0:	stp	x25, x26, [sp, #96]
  4488f4:	stp	x27, x28, [sp, #112]
  4488f8:	stp	d8, d9, [sp, #128]
  4488fc:	stp	d10, d11, [sp, #144]
  448900:	stp	d12, d13, [sp, #160]
  448904:	stp	d14, d15, [sp, #176]
  448908:	bl	447fd0 <_obstack_memory_used@@Base+0xe168>
  44890c:	mov	x1, x22
  448910:	mov	x2, #0x3c0                 	// #960
  448914:	mov	x0, x23
  448918:	bl	4022e0 <memcpy@plt>
  44891c:	stp	x21, x20, [x19, #16]
  448920:	mov	x0, x19
  448924:	mov	x1, x23
  448928:	add	x2, sp, #0xc8
  44892c:	bl	4483b8 <_obstack_memory_used@@Base+0xe550>
  448930:	cmp	w0, #0x7
  448934:	mov	x4, #0x0                   	// #0
  448938:	b.eq	448978 <_obstack_memory_used@@Base+0xeb10>  // b.none
  44893c:	ldp	x29, x30, [sp]
  448940:	ldp	x0, x1, [sp, #16]
  448944:	ldp	x2, x3, [sp, #32]
  448948:	ldp	x19, x20, [sp, #48]
  44894c:	ldp	x21, x22, [sp, #64]
  448950:	ldp	x23, x24, [sp, #80]
  448954:	ldp	x25, x26, [sp, #96]
  448958:	ldp	x27, x28, [sp, #112]
  44895c:	ldp	d8, d9, [sp, #128]
  448960:	ldp	d10, d11, [sp, #144]
  448964:	ldp	d12, d13, [sp, #160]
  448968:	ldp	d14, d15, [sp, #176]
  44896c:	add	sp, sp, #0x850
  448970:	add	sp, sp, x4
  448974:	ret
  448978:	mov	x1, x23
  44897c:	mov	x0, x22
  448980:	bl	4473a8 <_obstack_memory_used@@Base+0xd540>
  448984:	mov	x4, x0
  448988:	ldr	x2, [sp, #1040]
  44898c:	ldr	x1, [sp, #1960]
  448990:	tbz	x2, #61, 4489a4 <_obstack_memory_used@@Base+0xeb3c>
  448994:	mov	x17, x1
  448998:	ldr	x16, [sp, #992]
  44899c:	pacia1716
  4489a0:	mov	x1, x17
  4489a4:	ldr	x0, [sp, #1952]
  4489a8:	bl	448720 <_obstack_memory_used@@Base+0xe8b8>
  4489ac:	str	x1, [x29, #8]
  4489b0:	b	44893c <_obstack_memory_used@@Base+0xead4>
  4489b4:	nop
  4489b8:	sub	sp, sp, #0x850
  4489bc:	stp	x29, x30, [sp]
  4489c0:	mov	x29, sp
  4489c4:	stp	x19, x20, [sp, #48]
  4489c8:	mov	x19, x0
  4489cc:	add	x20, sp, #0xd0
  4489d0:	stp	x0, x1, [sp, #16]
  4489d4:	mov	x0, x20
  4489d8:	add	x1, sp, #0x850
  4489dc:	stp	x2, x3, [sp, #32]
  4489e0:	mov	x2, x30
  4489e4:	stp	x21, x22, [sp, #64]
  4489e8:	add	x21, sp, #0x490
  4489ec:	stp	x23, x24, [sp, #80]
  4489f0:	stp	x25, x26, [sp, #96]
  4489f4:	stp	x27, x28, [sp, #112]
  4489f8:	stp	d8, d9, [sp, #128]
  4489fc:	stp	d10, d11, [sp, #144]
  448a00:	stp	d12, d13, [sp, #160]
  448a04:	stp	d14, d15, [sp, #176]
  448a08:	bl	447fd0 <_obstack_memory_used@@Base+0xe168>
  448a0c:	mov	x1, x20
  448a10:	mov	x0, x21
  448a14:	mov	x2, #0x3c0                 	// #960
  448a18:	bl	4022e0 <memcpy@plt>
  448a1c:	ldr	x0, [x19, #16]
  448a20:	cbnz	x0, 448ab0 <_obstack_memory_used@@Base+0xec48>
  448a24:	mov	x0, x19
  448a28:	add	x2, sp, #0xc8
  448a2c:	mov	x1, x21
  448a30:	bl	4482d8 <_obstack_memory_used@@Base+0xe470>
  448a34:	cmp	w0, #0x7
  448a38:	b.ne	448ac4 <_obstack_memory_used@@Base+0xec5c>  // b.any
  448a3c:	mov	x1, x21
  448a40:	mov	x0, x20
  448a44:	bl	4473a8 <_obstack_memory_used@@Base+0xd540>
  448a48:	mov	x4, x0
  448a4c:	ldr	x2, [sp, #1040]
  448a50:	ldr	x1, [sp, #1960]
  448a54:	tbz	x2, #61, 448a68 <_obstack_memory_used@@Base+0xec00>
  448a58:	mov	x17, x1
  448a5c:	ldr	x16, [sp, #992]
  448a60:	pacia1716
  448a64:	mov	x1, x17
  448a68:	ldr	x0, [sp, #1952]
  448a6c:	bl	448720 <_obstack_memory_used@@Base+0xe8b8>
  448a70:	str	x1, [x29, #8]
  448a74:	ldp	x29, x30, [sp]
  448a78:	ldp	x0, x1, [sp, #16]
  448a7c:	ldp	x2, x3, [sp, #32]
  448a80:	ldp	x19, x20, [sp, #48]
  448a84:	ldp	x21, x22, [sp, #64]
  448a88:	ldp	x23, x24, [sp, #80]
  448a8c:	ldp	x25, x26, [sp, #96]
  448a90:	ldp	x27, x28, [sp, #112]
  448a94:	ldp	d8, d9, [sp, #128]
  448a98:	ldp	d10, d11, [sp, #144]
  448a9c:	ldp	d12, d13, [sp, #160]
  448aa0:	ldp	d14, d15, [sp, #176]
  448aa4:	add	sp, sp, #0x850
  448aa8:	add	sp, sp, x4
  448aac:	ret
  448ab0:	mov	x0, x19
  448ab4:	add	x2, sp, #0xc8
  448ab8:	mov	x1, x21
  448abc:	bl	4483b8 <_obstack_memory_used@@Base+0xe550>
  448ac0:	b	448a34 <_obstack_memory_used@@Base+0xebcc>
  448ac4:	bl	402650 <abort@plt>
  448ac8:	sub	sp, sp, #0x850
  448acc:	stp	x29, x30, [sp]
  448ad0:	mov	x29, sp
  448ad4:	stp	x0, x1, [sp, #16]
  448ad8:	ldr	x1, [x0, #16]
  448adc:	stp	x2, x3, [sp, #32]
  448ae0:	stp	x19, x20, [sp, #48]
  448ae4:	mov	x19, x0
  448ae8:	stp	x21, x22, [sp, #64]
  448aec:	stp	x23, x24, [sp, #80]
  448af0:	stp	x25, x26, [sp, #96]
  448af4:	stp	x27, x28, [sp, #112]
  448af8:	stp	d8, d9, [sp, #128]
  448afc:	stp	d10, d11, [sp, #144]
  448b00:	stp	d12, d13, [sp, #160]
  448b04:	stp	d14, d15, [sp, #176]
  448b08:	cbnz	x1, 448b50 <_obstack_memory_used@@Base+0xece8>
  448b0c:	bl	448728 <_obstack_memory_used@@Base+0xe8c0>
  448b10:	mov	x4, #0x0                   	// #0
  448b14:	ldp	x29, x30, [sp]
  448b18:	ldp	x0, x1, [sp, #16]
  448b1c:	ldp	x2, x3, [sp, #32]
  448b20:	ldp	x19, x20, [sp, #48]
  448b24:	ldp	x21, x22, [sp, #64]
  448b28:	ldp	x23, x24, [sp, #80]
  448b2c:	ldp	x25, x26, [sp, #96]
  448b30:	ldp	x27, x28, [sp, #112]
  448b34:	ldp	d8, d9, [sp, #128]
  448b38:	ldp	d10, d11, [sp, #144]
  448b3c:	ldp	d12, d13, [sp, #160]
  448b40:	ldp	d14, d15, [sp, #176]
  448b44:	add	sp, sp, #0x850
  448b48:	add	sp, sp, x4
  448b4c:	ret
  448b50:	add	x20, sp, #0xd0
  448b54:	mov	x2, x30
  448b58:	mov	x0, x20
  448b5c:	add	x1, sp, #0x850
  448b60:	add	x21, sp, #0x490
  448b64:	bl	447fd0 <_obstack_memory_used@@Base+0xe168>
  448b68:	mov	x1, x20
  448b6c:	mov	x2, #0x3c0                 	// #960
  448b70:	mov	x0, x21
  448b74:	bl	4022e0 <memcpy@plt>
  448b78:	mov	x0, x19
  448b7c:	mov	x1, x21
  448b80:	add	x2, sp, #0xc8
  448b84:	bl	4483b8 <_obstack_memory_used@@Base+0xe550>
  448b88:	cmp	w0, #0x7
  448b8c:	b.ne	448bcc <_obstack_memory_used@@Base+0xed64>  // b.any
  448b90:	mov	x1, x21
  448b94:	mov	x0, x20
  448b98:	bl	4473a8 <_obstack_memory_used@@Base+0xd540>
  448b9c:	mov	x4, x0
  448ba0:	ldr	x2, [sp, #1040]
  448ba4:	ldr	x1, [sp, #1960]
  448ba8:	tbz	x2, #61, 448bbc <_obstack_memory_used@@Base+0xed54>
  448bac:	mov	x17, x1
  448bb0:	ldr	x16, [sp, #992]
  448bb4:	pacia1716
  448bb8:	mov	x1, x17
  448bbc:	ldr	x0, [sp, #1952]
  448bc0:	bl	448720 <_obstack_memory_used@@Base+0xe8b8>
  448bc4:	str	x1, [x29, #8]
  448bc8:	b	448b14 <_obstack_memory_used@@Base+0xecac>
  448bcc:	bl	402650 <abort@plt>
  448bd0:	ldr	x2, [x0, #8]
  448bd4:	mov	x1, x0
  448bd8:	cbz	x2, 448be8 <_obstack_memory_used@@Base+0xed80>
  448bdc:	mov	x16, x2
  448be0:	mov	w0, #0x1                   	// #1
  448be4:	br	x16
  448be8:	ret
  448bec:	nop
  448bf0:	sub	sp, sp, #0xae0
  448bf4:	mov	x2, x30
  448bf8:	stp	x29, x30, [sp]
  448bfc:	mov	x29, sp
  448c00:	stp	x19, x20, [sp, #16]
  448c04:	add	x20, sp, #0xa0
  448c08:	stp	x21, x22, [sp, #32]
  448c0c:	mov	x22, x1
  448c10:	add	x21, sp, #0x460
  448c14:	add	x1, sp, #0xae0
  448c18:	stp	x23, x24, [sp, #48]
  448c1c:	mov	x23, x0
  448c20:	mov	x0, x20
  448c24:	stp	x25, x26, [sp, #64]
  448c28:	stp	x27, x28, [sp, #80]
  448c2c:	stp	d8, d9, [sp, #96]
  448c30:	stp	d10, d11, [sp, #112]
  448c34:	stp	d12, d13, [sp, #128]
  448c38:	stp	d14, d15, [sp, #144]
  448c3c:	bl	447fd0 <_obstack_memory_used@@Base+0xe168>
  448c40:	b	448c60 <_obstack_memory_used@@Base+0xedf8>
  448c44:	blr	x23
  448c48:	cbnz	w0, 448c84 <_obstack_memory_used@@Base+0xee1c>
  448c4c:	cmp	w19, #0x5
  448c50:	b.eq	448c88 <_obstack_memory_used@@Base+0xee20>  // b.none
  448c54:	mov	x1, x21
  448c58:	mov	x0, x20
  448c5c:	bl	448220 <_obstack_memory_used@@Base+0xe3b8>
  448c60:	mov	x1, x21
  448c64:	mov	x0, x20
  448c68:	bl	446e50 <_obstack_memory_used@@Base+0xcfe8>
  448c6c:	mov	w19, w0
  448c70:	cmp	w0, #0x0
  448c74:	mov	x1, x22
  448c78:	mov	x0, x20
  448c7c:	ccmp	w19, #0x5, #0x4, ne  // ne = any
  448c80:	b.eq	448c44 <_obstack_memory_used@@Base+0xeddc>  // b.none
  448c84:	mov	w19, #0x3                   	// #3
  448c88:	mov	w0, w19
  448c8c:	ldp	x29, x30, [sp]
  448c90:	ldp	x19, x20, [sp, #16]
  448c94:	ldp	x21, x22, [sp, #32]
  448c98:	ldp	x23, x24, [sp, #48]
  448c9c:	ldp	x25, x26, [sp, #64]
  448ca0:	ldp	x27, x28, [sp, #80]
  448ca4:	ldp	d8, d9, [sp, #96]
  448ca8:	ldp	d10, d11, [sp, #112]
  448cac:	ldp	d12, d13, [sp, #128]
  448cb0:	ldp	d14, d15, [sp, #144]
  448cb4:	add	sp, sp, #0xae0
  448cb8:	ret
  448cbc:	nop
  448cc0:	ldr	x3, [x1, #8]
  448cc4:	mov	w4, #0x1                   	// #1
  448cc8:	ldr	x1, [x2, #8]
  448ccc:	cmp	x3, x1
  448cd0:	csetm	w0, cc  // cc = lo, ul, last
  448cd4:	csel	w0, w0, w4, ls  // ls = plast
  448cd8:	ret
  448cdc:	nop
  448ce0:	stp	x29, x30, [sp, #-112]!
  448ce4:	mov	x29, sp
  448ce8:	stp	x21, x22, [sp, #32]
  448cec:	lsl	w21, w3, #1
  448cf0:	stp	x25, x26, [sp, #64]
  448cf4:	add	w25, w21, #0x1
  448cf8:	cmp	w25, w4
  448cfc:	b.ge	448dd4 <_obstack_memory_used@@Base+0xef6c>  // b.tcont
  448d00:	mov	w22, w3
  448d04:	stp	x19, x20, [sp, #16]
  448d08:	mov	x20, x2
  448d0c:	stp	x23, x24, [sp, #48]
  448d10:	mov	w23, w4
  448d14:	mov	x24, x1
  448d18:	stp	x27, x28, [sp, #80]
  448d1c:	mov	x27, x0
  448d20:	b	448d78 <_obstack_memory_used@@Base+0xef10>
  448d24:	ldr	x2, [x20, x26]
  448d28:	blr	x24
  448d2c:	ldr	x3, [sp, #104]
  448d30:	tbnz	w0, #31, 448de4 <_obstack_memory_used@@Base+0xef7c>
  448d34:	ldr	x1, [x20, x28, lsl #3]
  448d38:	mov	w21, w25
  448d3c:	sxtw	x26, w22
  448d40:	mov	x2, x1
  448d44:	mov	w22, w21
  448d48:	mov	x0, x27
  448d4c:	lsl	w21, w21, #1
  448d50:	ldr	x1, [x20, x26, lsl #3]
  448d54:	blr	x24
  448d58:	tbz	w0, #31, 448dc8 <_obstack_memory_used@@Base+0xef60>
  448d5c:	ldr	x1, [x19]
  448d60:	add	w25, w21, #0x1
  448d64:	ldr	x0, [x20, x26, lsl #3]
  448d68:	str	x1, [x20, x26, lsl #3]
  448d6c:	str	x0, [x19]
  448d70:	cmp	w23, w25
  448d74:	b.le	448dc8 <_obstack_memory_used@@Base+0xef60>
  448d78:	sbfiz	x19, x25, #3, #32
  448d7c:	sxtw	x28, w25
  448d80:	add	x26, x19, #0x8
  448d84:	add	w21, w25, #0x1
  448d88:	add	x3, x20, x26
  448d8c:	str	x3, [sp, #104]
  448d90:	cmp	w21, w23
  448d94:	add	x19, x20, x19
  448d98:	mov	x0, x27
  448d9c:	ldr	x1, [x20, x28, lsl #3]
  448da0:	b.lt	448d24 <_obstack_memory_used@@Base+0xeebc>  // b.tstop
  448da4:	sxtw	x26, w22
  448da8:	mov	x2, x1
  448dac:	mov	w21, w25
  448db0:	mov	x0, x27
  448db4:	mov	w22, w21
  448db8:	ldr	x1, [x20, x26, lsl #3]
  448dbc:	lsl	w21, w21, #1
  448dc0:	blr	x24
  448dc4:	tbnz	w0, #31, 448d5c <_obstack_memory_used@@Base+0xeef4>
  448dc8:	ldp	x19, x20, [sp, #16]
  448dcc:	ldp	x23, x24, [sp, #48]
  448dd0:	ldp	x27, x28, [sp, #80]
  448dd4:	ldp	x21, x22, [sp, #32]
  448dd8:	ldp	x25, x26, [sp, #64]
  448ddc:	ldp	x29, x30, [sp], #112
  448de0:	ret
  448de4:	mov	x19, x3
  448de8:	ldr	x1, [x20, x26]
  448dec:	b	448d3c <_obstack_memory_used@@Base+0xeed4>
  448df0:	stp	x29, x30, [sp, #-80]!
  448df4:	mov	x29, sp
  448df8:	stp	x19, x20, [sp, #16]
  448dfc:	ldr	x19, [x2, #8]
  448e00:	stp	x21, x22, [sp, #32]
  448e04:	mov	x22, x2
  448e08:	stp	x23, x24, [sp, #48]
  448e0c:	add	x21, x2, #0x10
  448e10:	lsr	x20, x19, #1
  448e14:	mov	x23, x0
  448e18:	mov	x24, x1
  448e1c:	subs	w20, w20, #0x1
  448e20:	b.mi	448e58 <_obstack_memory_used@@Base+0xeff0>  // b.first
  448e24:	str	x25, [sp, #64]
  448e28:	mov	w25, w19
  448e2c:	nop
  448e30:	mov	w3, w20
  448e34:	mov	w4, w25
  448e38:	mov	x2, x21
  448e3c:	sub	w20, w20, #0x1
  448e40:	mov	x1, x24
  448e44:	mov	x0, x23
  448e48:	bl	448ce0 <_obstack_memory_used@@Base+0xee78>
  448e4c:	cmn	w20, #0x1
  448e50:	b.ne	448e30 <_obstack_memory_used@@Base+0xefc8>  // b.any
  448e54:	ldr	x25, [sp, #64]
  448e58:	sub	w19, w19, #0x1
  448e5c:	cmp	w19, #0x0
  448e60:	sxtw	x19, w19
  448e64:	b.le	448e9c <_obstack_memory_used@@Base+0xf034>
  448e68:	ldr	x1, [x21, x19, lsl #3]
  448e6c:	mov	w4, w19
  448e70:	ldr	x0, [x22, #16]
  448e74:	str	x1, [x22, #16]
  448e78:	str	x0, [x21, x19, lsl #3]
  448e7c:	mov	x2, x21
  448e80:	sub	x19, x19, #0x1
  448e84:	mov	x1, x24
  448e88:	mov	x0, x23
  448e8c:	mov	w3, #0x0                   	// #0
  448e90:	bl	448ce0 <_obstack_memory_used@@Base+0xee78>
  448e94:	cmp	w19, #0x0
  448e98:	b.gt	448e68 <_obstack_memory_used@@Base+0xf000>
  448e9c:	ldp	x19, x20, [sp, #16]
  448ea0:	ldp	x21, x22, [sp, #32]
  448ea4:	ldp	x23, x24, [sp, #48]
  448ea8:	ldp	x29, x30, [sp], #80
  448eac:	ret
  448eb0:	and	w0, w0, #0xff
  448eb4:	cmp	w0, #0xff
  448eb8:	b.eq	448f08 <_obstack_memory_used@@Base+0xf0a0>  // b.none
  448ebc:	and	w1, w0, #0x7
  448ec0:	cmp	w1, #0x2
  448ec4:	b.eq	448f00 <_obstack_memory_used@@Base+0xf098>  // b.none
  448ec8:	b.ls	448ef4 <_obstack_memory_used@@Base+0xf08c>  // b.plast
  448ecc:	cmp	w1, #0x3
  448ed0:	mov	w0, #0x4                   	// #4
  448ed4:	b.ne	448edc <_obstack_memory_used@@Base+0xf074>  // b.any
  448ed8:	ret
  448edc:	cmp	w1, w0
  448ee0:	mov	w0, #0x8                   	// #8
  448ee4:	b.eq	448ed8 <_obstack_memory_used@@Base+0xf070>  // b.none
  448ee8:	stp	x29, x30, [sp, #-16]!
  448eec:	mov	x29, sp
  448ef0:	bl	402650 <abort@plt>
  448ef4:	mov	w0, #0x8                   	// #8
  448ef8:	cbnz	w1, 448ee8 <_obstack_memory_used@@Base+0xf080>
  448efc:	ret
  448f00:	mov	w0, w1
  448f04:	ret
  448f08:	mov	w0, #0x0                   	// #0
  448f0c:	ret
  448f10:	and	w5, w0, #0xff
  448f14:	cmp	w5, #0x50
  448f18:	b.eq	449030 <_obstack_memory_used@@Base+0xf1c8>  // b.none
  448f1c:	and	w4, w5, #0xf
  448f20:	cmp	w4, #0x4
  448f24:	b.eq	448f40 <_obstack_memory_used@@Base+0xf0d8>  // b.none
  448f28:	b.ls	448f54 <_obstack_memory_used@@Base+0xf0ec>  // b.plast
  448f2c:	cmp	w4, #0xb
  448f30:	b.eq	449054 <_obstack_memory_used@@Base+0xf1ec>  // b.none
  448f34:	b.ls	448fb0 <_obstack_memory_used@@Base+0xf148>  // b.plast
  448f38:	cmp	w4, #0xc
  448f3c:	b.ne	449064 <_obstack_memory_used@@Base+0xf1fc>  // b.any
  448f40:	mov	x0, x2
  448f44:	ldr	x4, [x0], #8
  448f48:	cbnz	x4, 449010 <_obstack_memory_used@@Base+0xf1a8>
  448f4c:	str	x4, [x3]
  448f50:	ret
  448f54:	cmp	w4, #0x2
  448f58:	b.eq	449044 <_obstack_memory_used@@Base+0xf1dc>  // b.none
  448f5c:	b.ls	448f78 <_obstack_memory_used@@Base+0xf110>  // b.plast
  448f60:	cmp	w4, #0x3
  448f64:	b.ne	449064 <_obstack_memory_used@@Base+0xf1fc>  // b.any
  448f68:	mov	x0, x2
  448f6c:	ldr	w4, [x0], #4
  448f70:	cbz	x4, 448f4c <_obstack_memory_used@@Base+0xf0e4>
  448f74:	b	449010 <_obstack_memory_used@@Base+0xf1a8>
  448f78:	cbz	w4, 448f40 <_obstack_memory_used@@Base+0xf0d8>
  448f7c:	cmp	w4, #0x1
  448f80:	b.ne	449064 <_obstack_memory_used@@Base+0xf1fc>  // b.any
  448f84:	mov	x0, x2
  448f88:	mov	x4, #0x0                   	// #0
  448f8c:	mov	w7, #0x0                   	// #0
  448f90:	ldrb	w8, [x0], #1
  448f94:	and	x6, x8, #0x7f
  448f98:	lsl	x6, x6, x7
  448f9c:	add	w7, w7, #0x7
  448fa0:	orr	x4, x4, x6
  448fa4:	tbnz	w8, #7, 448f90 <_obstack_memory_used@@Base+0xf128>
  448fa8:	cbz	x4, 448f4c <_obstack_memory_used@@Base+0xf0e4>
  448fac:	b	449010 <_obstack_memory_used@@Base+0xf1a8>
  448fb0:	cmp	w4, #0x9
  448fb4:	b.eq	448fd0 <_obstack_memory_used@@Base+0xf168>  // b.none
  448fb8:	cmp	w4, #0xa
  448fbc:	b.ne	449064 <_obstack_memory_used@@Base+0xf1fc>  // b.any
  448fc0:	mov	x0, x2
  448fc4:	ldrsh	x4, [x0], #2
  448fc8:	cbz	x4, 448f4c <_obstack_memory_used@@Base+0xf0e4>
  448fcc:	b	449010 <_obstack_memory_used@@Base+0xf1a8>
  448fd0:	mov	x0, x2
  448fd4:	mov	x4, #0x0                   	// #0
  448fd8:	mov	w7, #0x0                   	// #0
  448fdc:	ldrb	w8, [x0], #1
  448fe0:	and	x6, x8, #0x7f
  448fe4:	lsl	x6, x6, x7
  448fe8:	add	w7, w7, #0x7
  448fec:	orr	x4, x4, x6
  448ff0:	tbnz	w8, #7, 448fdc <_obstack_memory_used@@Base+0xf174>
  448ff4:	cmp	w7, #0x3f
  448ff8:	b.hi	448f48 <_obstack_memory_used@@Base+0xf0e0>  // b.pmore
  448ffc:	tbz	w8, #6, 448f48 <_obstack_memory_used@@Base+0xf0e0>
  449000:	mov	x6, #0xffffffffffffffff    	// #-1
  449004:	lsl	x7, x6, x7
  449008:	orr	x4, x4, x7
  44900c:	nop
  449010:	and	w6, w5, #0x70
  449014:	cmp	w6, #0x10
  449018:	csel	x1, x2, x1, eq  // eq = none
  44901c:	add	x4, x4, x1
  449020:	tbz	w5, #7, 448f4c <_obstack_memory_used@@Base+0xf0e4>
  449024:	ldr	x4, [x4]
  449028:	str	x4, [x3]
  44902c:	ret
  449030:	add	x0, x2, #0x7
  449034:	and	x0, x0, #0xfffffffffffffff8
  449038:	ldr	x4, [x0], #8
  44903c:	str	x4, [x3]
  449040:	ret
  449044:	mov	x0, x2
  449048:	ldrh	w4, [x0], #2
  44904c:	cbz	x4, 448f4c <_obstack_memory_used@@Base+0xf0e4>
  449050:	b	449010 <_obstack_memory_used@@Base+0xf1a8>
  449054:	mov	x0, x2
  449058:	ldrsw	x4, [x0], #4
  44905c:	cbz	x4, 448f4c <_obstack_memory_used@@Base+0xf0e4>
  449060:	b	449010 <_obstack_memory_used@@Base+0xf1a8>
  449064:	stp	x29, x30, [sp, #-16]!
  449068:	mov	x29, sp
  44906c:	bl	402650 <abort@plt>
  449070:	stp	x29, x30, [sp, #-48]!
  449074:	mov	x29, sp
  449078:	stp	x19, x20, [sp, #16]
  44907c:	mov	x20, x0
  449080:	add	x19, x0, #0x9
  449084:	mov	x0, x19
  449088:	bl	402330 <strlen@plt>
  44908c:	ldrb	w3, [x20, #8]
  449090:	add	x0, x0, #0x1
  449094:	add	x2, x19, x0
  449098:	cmp	w3, #0x3
  44909c:	b.hi	449168 <_obstack_memory_used@@Base+0xf300>  // b.pmore
  4490a0:	ldrb	w0, [x20, #9]
  4490a4:	cmp	w0, #0x7a
  4490a8:	b.eq	4490bc <_obstack_memory_used@@Base+0xf254>  // b.none
  4490ac:	mov	w0, #0x0                   	// #0
  4490b0:	ldp	x19, x20, [sp, #16]
  4490b4:	ldp	x29, x30, [sp], #48
  4490b8:	ret
  4490bc:	ldrsb	w1, [x2], #1
  4490c0:	tbnz	w1, #31, 4490bc <_obstack_memory_used@@Base+0xf254>
  4490c4:	nop
  4490c8:	mov	x0, x2
  4490cc:	ldrsb	w1, [x2], #1
  4490d0:	tbnz	w1, #31, 4490c8 <_obstack_memory_used@@Base+0xf260>
  4490d4:	cmp	w3, #0x1
  4490d8:	b.eq	449160 <_obstack_memory_used@@Base+0xf2f8>  // b.none
  4490dc:	nop
  4490e0:	ldrsb	w0, [x2], #1
  4490e4:	tbnz	w0, #31, 4490e0 <_obstack_memory_used@@Base+0xf278>
  4490e8:	add	x19, x20, #0xa
  4490ec:	nop
  4490f0:	ldrsb	w1, [x2], #1
  4490f4:	tbnz	w1, #31, 4490f0 <_obstack_memory_used@@Base+0xf288>
  4490f8:	ldrb	w0, [x20, #10]
  4490fc:	add	x20, sp, #0x28
  449100:	cmp	w0, #0x52
  449104:	b.ne	449124 <_obstack_memory_used@@Base+0xf2bc>  // b.any
  449108:	b	449150 <_obstack_memory_used@@Base+0xf2e8>
  44910c:	add	x2, x2, #0x1
  449110:	cmp	w0, #0x4c
  449114:	b.ne	4490ac <_obstack_memory_used@@Base+0xf244>  // b.any
  449118:	ldrb	w0, [x19, #1]!
  44911c:	cmp	w0, #0x52
  449120:	b.eq	449150 <_obstack_memory_used@@Base+0xf2e8>  // b.none
  449124:	cmp	w0, #0x50
  449128:	b.ne	44910c <_obstack_memory_used@@Base+0xf2a4>  // b.any
  44912c:	ldrb	w0, [x2], #1
  449130:	mov	x3, x20
  449134:	mov	x1, #0x0                   	// #0
  449138:	and	w0, w0, #0x7f
  44913c:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449140:	mov	x2, x0
  449144:	ldrb	w0, [x19, #1]!
  449148:	cmp	w0, #0x52
  44914c:	b.ne	449124 <_obstack_memory_used@@Base+0xf2bc>  // b.any
  449150:	ldrb	w0, [x2]
  449154:	ldp	x19, x20, [sp, #16]
  449158:	ldp	x29, x30, [sp], #48
  44915c:	ret
  449160:	add	x2, x0, #0x2
  449164:	b	4490e8 <_obstack_memory_used@@Base+0xf280>
  449168:	ldrb	w1, [x19, x0]
  44916c:	mov	w0, #0xff                  	// #255
  449170:	cmp	w1, #0x8
  449174:	b.ne	4490b0 <_obstack_memory_used@@Base+0xf248>  // b.any
  449178:	ldrb	w1, [x2, #1]
  44917c:	cbnz	w1, 4490b0 <_obstack_memory_used@@Base+0xf248>
  449180:	add	x2, x2, #0x2
  449184:	b	4490a0 <_obstack_memory_used@@Base+0xf238>
  449188:	and	w0, w0, #0xff
  44918c:	cmp	w0, #0xff
  449190:	b.eq	4491c8 <_obstack_memory_used@@Base+0xf360>  // b.none
  449194:	and	w3, w0, #0x70
  449198:	cmp	w3, #0x20
  44919c:	b.eq	4491e0 <_obstack_memory_used@@Base+0xf378>  // b.none
  4491a0:	b.ls	4491b4 <_obstack_memory_used@@Base+0xf34c>  // b.plast
  4491a4:	cmp	w3, #0x30
  4491a8:	b.ne	4491d0 <_obstack_memory_used@@Base+0xf368>  // b.any
  4491ac:	ldr	x0, [x2]
  4491b0:	ret
  4491b4:	tst	w0, #0x60
  4491b8:	b.eq	4491c8 <_obstack_memory_used@@Base+0xf360>  // b.none
  4491bc:	stp	x29, x30, [sp, #-16]!
  4491c0:	mov	x29, sp
  4491c4:	bl	402650 <abort@plt>
  4491c8:	mov	x0, #0x0                   	// #0
  4491cc:	ret
  4491d0:	cmp	w3, #0x50
  4491d4:	mov	x0, #0x0                   	// #0
  4491d8:	b.ne	4491bc <_obstack_memory_used@@Base+0xf354>  // b.any
  4491dc:	ret
  4491e0:	ldr	x0, [x1]
  4491e4:	ret
  4491e8:	stp	x29, x30, [sp, #-64]!
  4491ec:	mov	x29, sp
  4491f0:	stp	x21, x22, [sp, #32]
  4491f4:	mov	x22, x2
  4491f8:	ldrh	w21, [x0, #32]
  4491fc:	add	x2, x0, #0x10
  449200:	stp	x19, x20, [sp, #16]
  449204:	mov	x19, x0
  449208:	ubfx	x21, x21, #3, #8
  44920c:	mov	x20, x1
  449210:	add	x1, x0, #0x8
  449214:	mov	w0, w21
  449218:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  44921c:	add	x2, x20, #0x8
  449220:	mov	x20, x0
  449224:	mov	x1, x20
  449228:	add	x3, sp, #0x30
  44922c:	mov	w0, w21
  449230:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449234:	ldrh	w0, [x19, #32]
  449238:	add	x2, x22, #0x8
  44923c:	mov	x1, x20
  449240:	add	x3, sp, #0x38
  449244:	ubfx	x0, x0, #3, #8
  449248:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  44924c:	ldp	x2, x1, [sp, #48]
  449250:	mov	w3, #0x1                   	// #1
  449254:	ldp	x19, x20, [sp, #16]
  449258:	ldp	x21, x22, [sp, #32]
  44925c:	cmp	x2, x1
  449260:	csetm	w0, cc  // cc = lo, ul, last
  449264:	csel	w0, w0, w3, ls  // ls = plast
  449268:	ldp	x29, x30, [sp], #64
  44926c:	ret
  449270:	stp	x29, x30, [sp, #-128]!
  449274:	mov	x29, sp
  449278:	stp	x21, x22, [sp, #32]
  44927c:	add	x22, x0, #0x8
  449280:	stp	x23, x24, [sp, #48]
  449284:	add	x23, x0, #0x10
  449288:	stp	x25, x26, [sp, #64]
  44928c:	mov	x26, x0
  449290:	ldrh	w0, [x0, #32]
  449294:	stp	x19, x20, [sp, #16]
  449298:	mov	x19, x1
  44929c:	mov	x20, x2
  4492a0:	ubfx	x24, x0, #3, #8
  4492a4:	mov	x1, x22
  4492a8:	mov	x2, x23
  4492ac:	mov	x0, x24
  4492b0:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  4492b4:	ldr	w1, [x19]
  4492b8:	cbz	w1, 44934c <_obstack_memory_used@@Base+0xf4e4>
  4492bc:	stp	x27, x28, [sp, #80]
  4492c0:	add	x27, sp, #0x70
  4492c4:	mov	x25, x0
  4492c8:	mov	x21, #0x0                   	// #0
  4492cc:	add	x0, sp, #0x78
  4492d0:	str	x0, [sp, #104]
  4492d4:	nop
  4492d8:	ldr	w1, [x19, #4]
  4492dc:	cbz	w1, 449334 <_obstack_memory_used@@Base+0xf4cc>
  4492e0:	ldrb	w0, [x26, #32]
  4492e4:	tbz	w0, #2, 449318 <_obstack_memory_used@@Base+0xf4b0>
  4492e8:	add	x28, x19, #0x4
  4492ec:	sub	x28, x28, w1, sxtw
  4492f0:	cmp	x28, x21
  4492f4:	b.eq	449318 <_obstack_memory_used@@Base+0xf4b0>  // b.none
  4492f8:	mov	x0, x28
  4492fc:	bl	449070 <_obstack_memory_used@@Base+0xf208>
  449300:	mov	x2, x23
  449304:	mov	w24, w0
  449308:	mov	x1, x22
  44930c:	mov	x21, x28
  449310:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  449314:	mov	x25, x0
  449318:	cbnz	w24, 449368 <_obstack_memory_used@@Base+0xf500>
  44931c:	ldp	x1, x0, [x19, #8]
  449320:	stp	x1, x0, [sp, #112]
  449324:	cbz	x1, 449334 <_obstack_memory_used@@Base+0xf4cc>
  449328:	sub	x1, x20, x1
  44932c:	cmp	x1, x0
  449330:	b.cc	4493d0 <_obstack_memory_used@@Base+0xf568>  // b.lo, b.ul, b.last
  449334:	ldr	w1, [x19]
  449338:	add	x1, x1, #0x4
  44933c:	add	x19, x19, x1
  449340:	ldr	w1, [x19]
  449344:	cbnz	w1, 4492d8 <_obstack_memory_used@@Base+0xf470>
  449348:	ldp	x27, x28, [sp, #80]
  44934c:	mov	x0, #0x0                   	// #0
  449350:	ldp	x19, x20, [sp, #16]
  449354:	ldp	x21, x22, [sp, #32]
  449358:	ldp	x23, x24, [sp, #48]
  44935c:	ldp	x25, x26, [sp, #64]
  449360:	ldp	x29, x30, [sp], #128
  449364:	ret
  449368:	and	w28, w24, #0xff
  44936c:	mov	x3, x27
  449370:	add	x2, x19, #0x8
  449374:	mov	x1, x25
  449378:	mov	w0, w28
  44937c:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449380:	ldr	x3, [sp, #104]
  449384:	mov	x2, x0
  449388:	mov	x1, #0x0                   	// #0
  44938c:	and	w0, w28, #0xf
  449390:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449394:	mov	w0, w28
  449398:	bl	448eb0 <_obstack_memory_used@@Base+0xf048>
  44939c:	lsl	w2, w0, #3
  4493a0:	cmp	w0, #0x8
  4493a4:	mov	x0, #0x1                   	// #1
  4493a8:	ldr	x1, [sp, #112]
  4493ac:	lsl	x2, x0, x2
  4493b0:	sub	x2, x2, #0x1
  4493b4:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  4493b8:	tst	x1, x2
  4493bc:	b.eq	449334 <_obstack_memory_used@@Base+0xf4cc>  // b.none
  4493c0:	ldr	x0, [sp, #120]
  4493c4:	sub	x1, x20, x1
  4493c8:	cmp	x1, x0
  4493cc:	b.cs	449334 <_obstack_memory_used@@Base+0xf4cc>  // b.hs, b.nlast
  4493d0:	mov	x0, x19
  4493d4:	ldp	x19, x20, [sp, #16]
  4493d8:	ldp	x21, x22, [sp, #32]
  4493dc:	ldp	x23, x24, [sp, #48]
  4493e0:	ldp	x25, x26, [sp, #64]
  4493e4:	ldp	x27, x28, [sp, #80]
  4493e8:	ldp	x29, x30, [sp], #128
  4493ec:	ret
  4493f0:	stp	x29, x30, [sp, #-80]!
  4493f4:	add	x3, x1, #0x4
  4493f8:	mov	x29, sp
  4493fc:	stp	x21, x22, [sp, #32]
  449400:	mov	x21, x1
  449404:	ldrsw	x1, [x1, #4]
  449408:	stp	x19, x20, [sp, #16]
  44940c:	mov	x20, x2
  449410:	add	x19, x0, #0x10
  449414:	str	x23, [sp, #48]
  449418:	add	x23, x0, #0x8
  44941c:	sub	x0, x3, x1
  449420:	bl	449070 <_obstack_memory_used@@Base+0xf208>
  449424:	and	w22, w0, #0xff
  449428:	mov	x2, x19
  44942c:	mov	x1, x23
  449430:	mov	w0, w22
  449434:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  449438:	mov	x1, x0
  44943c:	add	x3, sp, #0x40
  449440:	add	x2, x21, #0x8
  449444:	mov	w0, w22
  449448:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  44944c:	add	x1, x20, #0x4
  449450:	ldrsw	x0, [x20, #4]
  449454:	sub	x0, x1, x0
  449458:	bl	449070 <_obstack_memory_used@@Base+0xf208>
  44945c:	mov	x2, x19
  449460:	and	w19, w0, #0xff
  449464:	mov	x1, x23
  449468:	mov	w0, w19
  44946c:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  449470:	mov	x1, x0
  449474:	add	x2, x20, #0x8
  449478:	add	x3, sp, #0x48
  44947c:	mov	w0, w19
  449480:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449484:	ldp	x2, x1, [sp, #64]
  449488:	mov	w3, #0x1                   	// #1
  44948c:	ldp	x19, x20, [sp, #16]
  449490:	ldp	x21, x22, [sp, #32]
  449494:	cmp	x2, x1
  449498:	csetm	w0, cc  // cc = lo, ul, last
  44949c:	csel	w0, w0, w3, ls  // ls = plast
  4494a0:	ldr	x23, [sp, #48]
  4494a4:	ldp	x29, x30, [sp], #80
  4494a8:	ret
  4494ac:	nop
  4494b0:	stp	x29, x30, [sp, #-112]!
  4494b4:	mov	x29, sp
  4494b8:	stp	x21, x22, [sp, #32]
  4494bc:	mov	x21, x0
  4494c0:	ldr	w0, [x1]
  4494c4:	cbz	w0, 449628 <_obstack_memory_used@@Base+0xf7c0>
  4494c8:	stp	x19, x20, [sp, #16]
  4494cc:	mov	x19, x1
  4494d0:	mov	w20, #0x0                   	// #0
  4494d4:	stp	x25, x26, [sp, #64]
  4494d8:	add	x25, sp, #0x68
  4494dc:	add	x26, x21, #0x8
  4494e0:	stp	x27, x28, [sp, #80]
  4494e4:	add	x27, x21, #0x10
  4494e8:	mov	x22, #0x0                   	// #0
  4494ec:	mov	x4, #0x0                   	// #0
  4494f0:	stp	x23, x24, [sp, #48]
  4494f4:	mov	x23, #0x0                   	// #0
  4494f8:	ldr	w2, [x19, #4]
  4494fc:	cbz	w2, 4495c4 <_obstack_memory_used@@Base+0xf75c>
  449500:	add	x28, x19, #0x4
  449504:	and	w24, w20, #0xff
  449508:	sub	x28, x28, w2, sxtw
  44950c:	cmp	x28, x4
  449510:	b.eq	449568 <_obstack_memory_used@@Base+0xf700>  // b.none
  449514:	mov	x0, x28
  449518:	bl	449070 <_obstack_memory_used@@Base+0xf208>
  44951c:	mov	w20, w0
  449520:	cmp	w0, #0xff
  449524:	b.eq	449604 <_obstack_memory_used@@Base+0xf79c>  // b.none
  449528:	and	w24, w0, #0xff
  44952c:	mov	x2, x27
  449530:	mov	w0, w24
  449534:	mov	x1, x26
  449538:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  44953c:	mov	x23, x0
  449540:	ldrh	w2, [x21, #32]
  449544:	and	w0, w2, #0x7f8
  449548:	cmp	w0, #0x7f8
  44954c:	b.eq	4495f8 <_obstack_memory_used@@Base+0xf790>  // b.none
  449550:	ubfx	x2, x2, #3, #8
  449554:	cmp	w2, w20
  449558:	b.eq	449568 <_obstack_memory_used@@Base+0xf700>  // b.none
  44955c:	ldrb	w0, [x21, #32]
  449560:	orr	w0, w0, #0x4
  449564:	strb	w0, [x21, #32]
  449568:	mov	x3, x25
  44956c:	add	x2, x19, #0x8
  449570:	mov	x1, x23
  449574:	mov	w0, w24
  449578:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  44957c:	mov	w0, w24
  449580:	bl	448eb0 <_obstack_memory_used@@Base+0xf048>
  449584:	lsl	w2, w0, #3
  449588:	cmp	w0, #0x8
  44958c:	mov	x0, #0x1                   	// #1
  449590:	ldr	x3, [sp, #104]
  449594:	lsl	x2, x0, x2
  449598:	sub	x2, x2, #0x1
  44959c:	mov	x4, x28
  4495a0:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  4495a4:	tst	x3, x2
  4495a8:	b.eq	4495c4 <_obstack_memory_used@@Base+0xf75c>  // b.none
  4495ac:	ldr	x0, [x21]
  4495b0:	add	x22, x22, #0x1
  4495b4:	cmp	x0, x3
  4495b8:	b.ls	4495c0 <_obstack_memory_used@@Base+0xf758>  // b.plast
  4495bc:	str	x3, [x21]
  4495c0:	mov	x4, x28
  4495c4:	ldr	w2, [x19]
  4495c8:	add	x2, x2, #0x4
  4495cc:	add	x19, x19, x2
  4495d0:	ldr	w0, [x19]
  4495d4:	cbnz	w0, 4494f8 <_obstack_memory_used@@Base+0xf690>
  4495d8:	ldp	x19, x20, [sp, #16]
  4495dc:	ldp	x23, x24, [sp, #48]
  4495e0:	ldp	x25, x26, [sp, #64]
  4495e4:	ldp	x27, x28, [sp, #80]
  4495e8:	mov	x0, x22
  4495ec:	ldp	x21, x22, [sp, #32]
  4495f0:	ldp	x29, x30, [sp], #112
  4495f4:	ret
  4495f8:	bfi	w2, w24, #3, #8
  4495fc:	strh	w2, [x21, #32]
  449600:	b	449568 <_obstack_memory_used@@Base+0xf700>
  449604:	mov	x22, #0xffffffffffffffff    	// #-1
  449608:	mov	x0, x22
  44960c:	ldp	x19, x20, [sp, #16]
  449610:	ldp	x21, x22, [sp, #32]
  449614:	ldp	x23, x24, [sp, #48]
  449618:	ldp	x25, x26, [sp, #64]
  44961c:	ldp	x27, x28, [sp, #80]
  449620:	ldp	x29, x30, [sp], #112
  449624:	ret
  449628:	mov	x22, #0x0                   	// #0
  44962c:	b	4495e8 <_obstack_memory_used@@Base+0xf780>
  449630:	stp	x29, x30, [sp, #-112]!
  449634:	mov	x29, sp
  449638:	stp	x21, x22, [sp, #32]
  44963c:	add	x21, x0, #0x8
  449640:	add	x22, x0, #0x10
  449644:	stp	x27, x28, [sp, #80]
  449648:	mov	x28, x0
  44964c:	ldrh	w0, [x0, #32]
  449650:	stp	x19, x20, [sp, #16]
  449654:	mov	x19, x2
  449658:	mov	x20, x1
  44965c:	stp	x25, x26, [sp, #64]
  449660:	ubfx	x26, x0, #3, #8
  449664:	mov	x2, x22
  449668:	mov	x1, x21
  44966c:	mov	x0, x26
  449670:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  449674:	ldr	w2, [x19]
  449678:	cbz	w2, 449710 <_obstack_memory_used@@Base+0xf8a8>
  44967c:	add	x25, sp, #0x68
  449680:	stp	x23, x24, [sp, #48]
  449684:	mov	x24, x0
  449688:	mov	x23, #0x0                   	// #0
  44968c:	nop
  449690:	ldr	w2, [x19, #4]
  449694:	cbz	w2, 4496f8 <_obstack_memory_used@@Base+0xf890>
  449698:	ldrb	w0, [x28, #32]
  44969c:	tbz	w0, #2, 4496d0 <_obstack_memory_used@@Base+0xf868>
  4496a0:	add	x27, x19, #0x4
  4496a4:	sub	x27, x27, w2, sxtw
  4496a8:	cmp	x27, x23
  4496ac:	b.eq	4496d0 <_obstack_memory_used@@Base+0xf868>  // b.none
  4496b0:	mov	x0, x27
  4496b4:	bl	449070 <_obstack_memory_used@@Base+0xf208>
  4496b8:	mov	x2, x22
  4496bc:	mov	w26, w0
  4496c0:	mov	x1, x21
  4496c4:	mov	x23, x27
  4496c8:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  4496cc:	mov	x24, x0
  4496d0:	cbnz	w26, 449728 <_obstack_memory_used@@Base+0xf8c0>
  4496d4:	ldr	x0, [x19, #8]
  4496d8:	cbz	x0, 4496f8 <_obstack_memory_used@@Base+0xf890>
  4496dc:	ldr	x2, [x20]
  4496e0:	cbz	x2, 4496f8 <_obstack_memory_used@@Base+0xf890>
  4496e4:	ldr	x3, [x2, #8]
  4496e8:	add	x0, x3, #0x2
  4496ec:	add	x3, x3, #0x1
  4496f0:	str	x3, [x2, #8]
  4496f4:	str	x19, [x2, x0, lsl #3]
  4496f8:	ldr	w2, [x19]
  4496fc:	add	x2, x2, #0x4
  449700:	add	x19, x19, x2
  449704:	ldr	w2, [x19]
  449708:	cbnz	w2, 449690 <_obstack_memory_used@@Base+0xf828>
  44970c:	ldp	x23, x24, [sp, #48]
  449710:	ldp	x19, x20, [sp, #16]
  449714:	ldp	x21, x22, [sp, #32]
  449718:	ldp	x25, x26, [sp, #64]
  44971c:	ldp	x27, x28, [sp, #80]
  449720:	ldp	x29, x30, [sp], #112
  449724:	ret
  449728:	mov	x3, x25
  44972c:	add	x2, x19, #0x8
  449730:	mov	x1, x24
  449734:	and	w27, w26, #0xff
  449738:	mov	w0, w27
  44973c:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449740:	mov	w0, w27
  449744:	bl	448eb0 <_obstack_memory_used@@Base+0xf048>
  449748:	lsl	w2, w0, #3
  44974c:	cmp	w0, #0x8
  449750:	mov	x0, #0x1                   	// #1
  449754:	ldr	x3, [sp, #104]
  449758:	lsl	x2, x0, x2
  44975c:	sub	x2, x2, #0x1
  449760:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  449764:	tst	x2, x3
  449768:	b.ne	4496dc <_obstack_memory_used@@Base+0xf874>  // b.any
  44976c:	b	4496f8 <_obstack_memory_used@@Base+0xf890>
  449770:	stp	x29, x30, [sp, #-128]!
  449774:	cmp	x1, #0x2f
  449778:	mov	x29, sp
  44977c:	stp	x19, x20, [sp, #16]
  449780:	mov	x19, x2
  449784:	ldr	w2, [x2, #40]
  449788:	ldr	x13, [x0]
  44978c:	ccmp	w2, #0x0, #0x4, hi  // hi = pmore
  449790:	ldr	x3, [x0, #16]
  449794:	b.ne	4498d4 <_obstack_memory_used@@Base+0xfa6c>  // b.any
  449798:	cmp	x1, #0x19
  44979c:	b.ls	4498ac <_obstack_memory_used@@Base+0xfa44>  // b.plast
  4497a0:	mov	x10, #0x0                   	// #0
  4497a4:	mov	x15, #0x0                   	// #0
  4497a8:	ldrh	w4, [x0, #24]
  4497ac:	cbz	w4, 4498c4 <_obstack_memory_used@@Base+0xfa5c>
  4497b0:	mov	w0, #0x38                  	// #56
  4497b4:	mov	w7, #0xe550                	// #58704
  4497b8:	mov	x11, #0x0                   	// #0
  4497bc:	mov	x12, #0x0                   	// #0
  4497c0:	umaddl	x4, w4, w0, x3
  4497c4:	mov	x8, #0x0                   	// #0
  4497c8:	mov	x6, #0x0                   	// #0
  4497cc:	mov	x9, #0x0                   	// #0
  4497d0:	movk	w7, #0x6474, lsl #16
  4497d4:	mov	x14, #0x1                   	// #1
  4497d8:	b	4497f8 <_obstack_memory_used@@Base+0xf990>
  4497dc:	cmp	w0, w7
  4497e0:	b.eq	4498bc <_obstack_memory_used@@Base+0xfa54>  // b.none
  4497e4:	cmp	w0, #0x2
  4497e8:	csel	x6, x6, x3, ne  // ne = any
  4497ec:	add	x3, x3, #0x38
  4497f0:	cmp	x4, x3
  4497f4:	b.eq	449840 <_obstack_memory_used@@Base+0xf9d8>  // b.none
  4497f8:	ldr	w0, [x3]
  4497fc:	cmp	w0, #0x1
  449800:	b.ne	4497dc <_obstack_memory_used@@Base+0xf974>  // b.any
  449804:	ldr	x0, [x3, #16]
  449808:	ldr	x5, [x19]
  44980c:	add	x0, x13, x0
  449810:	cmp	x5, x0
  449814:	b.cc	4497ec <_obstack_memory_used@@Base+0xf984>  // b.lo, b.ul, b.last
  449818:	ldr	x2, [x3, #40]
  44981c:	add	x3, x3, #0x38
  449820:	add	x2, x0, x2
  449824:	cmp	x5, x2
  449828:	csel	x11, x11, x2, cs  // cs = hs, nlast
  44982c:	csel	x12, x12, x0, cs  // cs = hs, nlast
  449830:	csel	x8, x8, x14, cs  // cs = hs, nlast
  449834:	cmp	x4, x3
  449838:	b.ne	4497f8 <_obstack_memory_used@@Base+0xf990>  // b.any
  44983c:	nop
  449840:	cbz	x8, 4498c4 <_obstack_memory_used@@Base+0xfa5c>
  449844:	cmp	x1, #0x2f
  449848:	b.ls	449884 <_obstack_memory_used@@Base+0xfa1c>  // b.plast
  44984c:	adrp	x1, 478000 <_obstack_memory_used@@Base+0x3e198>
  449850:	add	x1, x1, #0x9b0
  449854:	cmp	x10, #0x0
  449858:	ccmp	x15, #0x0, #0x4, ne  // ne = any
  44985c:	ldr	x0, [x1, #8]
  449860:	b.eq	449878 <_obstack_memory_used@@Base+0xfa10>  // b.none
  449864:	ldr	x2, [x10, #40]
  449868:	str	x2, [x15, #40]
  44986c:	str	x0, [x10, #40]
  449870:	mov	x0, x10
  449874:	str	x10, [x1, #8]
  449878:	stp	x12, x11, [x0]
  44987c:	stp	x13, x9, [x0, #16]
  449880:	str	x6, [x0, #32]
  449884:	cbz	x9, 4498c4 <_obstack_memory_used@@Base+0xfa5c>
  449888:	ldr	x0, [x9, #16]
  44988c:	add	x20, x13, x0
  449890:	ldrb	w0, [x13, x0]
  449894:	cmp	w0, #0x1
  449898:	b.eq	449934 <_obstack_memory_used@@Base+0xfacc>  // b.none
  44989c:	mov	w0, #0x1                   	// #1
  4498a0:	ldp	x19, x20, [sp, #16]
  4498a4:	ldp	x29, x30, [sp], #128
  4498a8:	ret
  4498ac:	mov	w0, #0xffffffff            	// #-1
  4498b0:	ldp	x19, x20, [sp, #16]
  4498b4:	ldp	x29, x30, [sp], #128
  4498b8:	ret
  4498bc:	mov	x9, x3
  4498c0:	b	4497ec <_obstack_memory_used@@Base+0xf984>
  4498c4:	mov	w0, #0x0                   	// #0
  4498c8:	ldp	x19, x20, [sp, #16]
  4498cc:	ldp	x29, x30, [sp], #128
  4498d0:	ret
  4498d4:	ldp	x6, x7, [x0, #32]
  4498d8:	adrp	x4, 478000 <_obstack_memory_used@@Base+0x3e198>
  4498dc:	adrp	x5, 478000 <_obstack_memory_used@@Base+0x3e198>
  4498e0:	ldr	x2, [x4, #1328]
  4498e4:	cmp	x6, x2
  4498e8:	b.eq	449a08 <_obstack_memory_used@@Base+0xfba0>  // b.none
  4498ec:	add	x2, x5, #0x9b0
  4498f0:	str	x6, [x4, #1328]
  4498f4:	add	x4, x2, #0x40
  4498f8:	add	x2, x2, #0x1c0
  4498fc:	str	x7, [x5, #2480]
  449900:	stp	xzr, xzr, [x4, #-48]
  449904:	stur	x4, [x4, #-8]
  449908:	add	x4, x4, #0x30
  44990c:	cmp	x2, x4
  449910:	b.ne	449900 <_obstack_memory_used@@Base+0xfa98>  // b.any
  449914:	add	x5, x5, #0x9b0
  449918:	mov	x10, #0x0                   	// #0
  44991c:	add	x2, x5, #0x10
  449920:	mov	x15, #0x0                   	// #0
  449924:	str	xzr, [x5, #392]
  449928:	str	x2, [x5, #8]
  44992c:	str	wzr, [x19, #40]
  449930:	b	4497a8 <_obstack_memory_used@@Base+0xf940>
  449934:	stp	x21, x22, [sp, #32]
  449938:	add	x22, x19, #0x8
  44993c:	mov	x1, x22
  449940:	stp	x23, x24, [sp, #48]
  449944:	add	x23, x19, #0x10
  449948:	mov	x2, x23
  44994c:	ldrb	w21, [x20, #1]
  449950:	mov	w0, w21
  449954:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  449958:	add	x3, sp, #0x40
  44995c:	mov	x1, x0
  449960:	add	x2, x20, #0x4
  449964:	mov	w0, w21
  449968:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  44996c:	ldrb	w24, [x20, #2]
  449970:	mov	x21, x0
  449974:	cmp	w24, #0xff
  449978:	b.eq	449988 <_obstack_memory_used@@Base+0xfb20>  // b.none
  44997c:	ldrb	w0, [x20, #3]
  449980:	cmp	w0, #0x3b
  449984:	b.eq	449a68 <_obstack_memory_used@@Base+0xfc00>  // b.none
  449988:	ldr	x2, [x19]
  44998c:	mov	x3, #0x4                   	// #4
  449990:	ldp	x5, x4, [x19, #8]
  449994:	add	x0, sp, #0x50
  449998:	ldr	x1, [sp, #64]
  44999c:	stp	xzr, x5, [sp, #80]
  4499a0:	stp	x4, x1, [sp, #96]
  4499a4:	str	x3, [sp, #112]
  4499a8:	bl	449270 <_obstack_memory_used@@Base+0xf408>
  4499ac:	str	x0, [x19, #32]
  4499b0:	cbz	x0, 449b80 <_obstack_memory_used@@Base+0xfd18>
  4499b4:	ldrsw	x1, [x0, #4]
  4499b8:	add	x0, x0, #0x4
  4499bc:	sub	x0, x0, x1
  4499c0:	bl	449070 <_obstack_memory_used@@Base+0xf208>
  4499c4:	and	w20, w0, #0xff
  4499c8:	mov	x2, x23
  4499cc:	mov	x1, x22
  4499d0:	mov	w0, w20
  4499d4:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  4499d8:	ldr	x2, [x19, #32]
  4499dc:	mov	x1, x0
  4499e0:	add	x3, sp, #0x48
  4499e4:	mov	w0, w20
  4499e8:	add	x2, x2, #0x8
  4499ec:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  4499f0:	ldr	x1, [sp, #72]
  4499f4:	mov	w0, #0x1                   	// #1
  4499f8:	ldp	x21, x22, [sp, #32]
  4499fc:	ldp	x23, x24, [sp, #48]
  449a00:	str	x1, [x19, #24]
  449a04:	b	4498b0 <_obstack_memory_used@@Base+0xfa48>
  449a08:	ldr	x2, [x5, #2480]
  449a0c:	add	x8, x5, #0x9b0
  449a10:	cmp	x2, x7
  449a14:	b.ne	4498ec <_obstack_memory_used@@Base+0xfa84>  // b.any
  449a18:	ldr	x7, [x8, #8]
  449a1c:	cbz	x7, 4497a0 <_obstack_memory_used@@Base+0xf938>
  449a20:	mov	x10, x7
  449a24:	mov	x15, #0x0                   	// #0
  449a28:	ldr	x6, [x19]
  449a2c:	ldp	x2, x4, [x10]
  449a30:	cmp	x6, x2
  449a34:	b.cc	449a40 <_obstack_memory_used@@Base+0xfbd8>  // b.lo, b.ul, b.last
  449a38:	cmp	x6, x4
  449a3c:	b.cc	449b98 <_obstack_memory_used@@Base+0xfd30>  // b.lo, b.ul, b.last
  449a40:	orr	x2, x2, x4
  449a44:	cbz	x2, 4497a8 <_obstack_memory_used@@Base+0xf940>
  449a48:	ldr	x2, [x10, #40]
  449a4c:	cbz	x2, 4497a8 <_obstack_memory_used@@Base+0xf940>
  449a50:	mov	x15, x10
  449a54:	mov	x10, x2
  449a58:	ldp	x2, x4, [x10]
  449a5c:	cmp	x6, x2
  449a60:	b.cc	449a40 <_obstack_memory_used@@Base+0xfbd8>  // b.lo, b.ul, b.last
  449a64:	b	449a38 <_obstack_memory_used@@Base+0xfbd0>
  449a68:	mov	x2, x23
  449a6c:	mov	x1, x22
  449a70:	mov	w0, w24
  449a74:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  449a78:	add	x3, sp, #0x48
  449a7c:	mov	x1, x0
  449a80:	mov	x2, x21
  449a84:	mov	w0, w24
  449a88:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449a8c:	ldr	x3, [sp, #72]
  449a90:	cbz	x3, 449b70 <_obstack_memory_used@@Base+0xfd08>
  449a94:	ands	x5, x0, #0x3
  449a98:	ldr	x2, [x19]
  449a9c:	b.ne	44998c <_obstack_memory_used@@Base+0xfb24>  // b.any
  449aa0:	ldrsw	x1, [x0]
  449aa4:	add	x1, x1, x20
  449aa8:	cmp	x1, x2
  449aac:	b.hi	449b70 <_obstack_memory_used@@Base+0xfd08>  // b.pmore
  449ab0:	sub	x3, x3, #0x1
  449ab4:	lsl	x1, x3, #3
  449ab8:	add	x21, x0, x1
  449abc:	ldrsw	x1, [x0, x1]
  449ac0:	add	x1, x1, x20
  449ac4:	cmp	x1, x2
  449ac8:	b.ls	449b0c <_obstack_memory_used@@Base+0xfca4>  // b.plast
  449acc:	cmp	x5, x3
  449ad0:	b.cs	449bbc <_obstack_memory_used@@Base+0xfd54>  // b.hs, b.nlast
  449ad4:	add	x1, x5, x3
  449ad8:	lsr	x1, x1, #1
  449adc:	lsl	x4, x1, #3
  449ae0:	add	x21, x0, x4
  449ae4:	ldrsw	x4, [x0, x4]
  449ae8:	add	x4, x4, x20
  449aec:	cmp	x4, x2
  449af0:	b.hi	449b90 <_obstack_memory_used@@Base+0xfd28>  // b.pmore
  449af4:	add	x5, x1, #0x1
  449af8:	lsl	x1, x5, #3
  449afc:	ldrsw	x1, [x0, x1]
  449b00:	add	x1, x1, x20
  449b04:	cmp	x1, x2
  449b08:	b.ls	449acc <_obstack_memory_used@@Base+0xfc64>  // b.plast
  449b0c:	ldrsw	x22, [x21, #4]
  449b10:	add	x22, x22, x20
  449b14:	add	x1, x22, #0x4
  449b18:	ldrsw	x0, [x22, #4]
  449b1c:	sub	x0, x1, x0
  449b20:	bl	449070 <_obstack_memory_used@@Base+0xf208>
  449b24:	and	w23, w0, #0xff
  449b28:	mov	w0, w23
  449b2c:	bl	448eb0 <_obstack_memory_used@@Base+0xf048>
  449b30:	mov	w2, w0
  449b34:	mov	x1, #0x0                   	// #0
  449b38:	add	x2, x2, #0x8
  449b3c:	add	x3, sp, #0x50
  449b40:	add	x2, x22, x2
  449b44:	and	w0, w23, #0xf
  449b48:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449b4c:	ldrsw	x0, [x21]
  449b50:	ldr	x1, [sp, #80]
  449b54:	add	x20, x0, x20
  449b58:	ldr	x2, [x19]
  449b5c:	add	x0, x20, x1
  449b60:	cmp	x2, x0
  449b64:	b.cs	449b6c <_obstack_memory_used@@Base+0xfd04>  // b.hs, b.nlast
  449b68:	str	x22, [x19, #32]
  449b6c:	str	x20, [x19, #24]
  449b70:	mov	w0, #0x1                   	// #1
  449b74:	ldp	x21, x22, [sp, #32]
  449b78:	ldp	x23, x24, [sp, #48]
  449b7c:	b	4498b0 <_obstack_memory_used@@Base+0xfa48>
  449b80:	mov	w0, #0x1                   	// #1
  449b84:	ldp	x21, x22, [sp, #32]
  449b88:	ldp	x23, x24, [sp, #48]
  449b8c:	b	4498a0 <_obstack_memory_used@@Base+0xfa38>
  449b90:	mov	x3, x1
  449b94:	b	449acc <_obstack_memory_used@@Base+0xfc64>
  449b98:	cmp	x10, x7
  449b9c:	ldp	x13, x9, [x10, #16]
  449ba0:	b.eq	449884 <_obstack_memory_used@@Base+0xfa1c>  // b.none
  449ba4:	add	x5, x5, #0x9b0
  449ba8:	ldr	x0, [x10, #40]
  449bac:	str	x0, [x15, #40]
  449bb0:	str	x10, [x5, #8]
  449bb4:	str	x7, [x10, #40]
  449bb8:	b	449884 <_obstack_memory_used@@Base+0xfa1c>
  449bbc:	bl	402650 <abort@plt>
  449bc0:	stp	x29, x30, [sp, #-160]!
  449bc4:	mov	x29, sp
  449bc8:	stp	x19, x20, [sp, #16]
  449bcc:	mov	x19, x1
  449bd0:	ldrb	w1, [x0, #32]
  449bd4:	stp	x23, x24, [sp, #48]
  449bd8:	mov	x24, x0
  449bdc:	tbz	w1, #0, 449c48 <_obstack_memory_used@@Base+0xfde0>
  449be0:	stp	x27, x28, [sp, #80]
  449be4:	ldr	x27, [x24, #24]
  449be8:	tbnz	w1, #2, 449cbc <_obstack_memory_used@@Base+0xfe54>
  449bec:	ldrh	w0, [x24, #32]
  449bf0:	tst	w0, #0x7f8
  449bf4:	b.ne	449e1c <_obstack_memory_used@@Base+0xffb4>  // b.any
  449bf8:	mov	x2, #0x0                   	// #0
  449bfc:	ldr	x1, [x27, #8]
  449c00:	b	449c24 <_obstack_memory_used@@Base+0xfdbc>
  449c04:	add	x0, x1, x2
  449c08:	lsr	x0, x0, #1
  449c0c:	add	x3, x0, #0x2
  449c10:	ldr	x20, [x27, x3, lsl #3]
  449c14:	ldr	x3, [x20, #8]
  449c18:	cmp	x19, x3
  449c1c:	b.cs	449ca4 <_obstack_memory_used@@Base+0xfe3c>  // b.hs, b.nlast
  449c20:	mov	x1, x0
  449c24:	cmp	x1, x2
  449c28:	b.hi	449c04 <_obstack_memory_used@@Base+0xfd9c>  // b.pmore
  449c2c:	ldp	x27, x28, [sp, #80]
  449c30:	mov	x20, #0x0                   	// #0
  449c34:	mov	x0, x20
  449c38:	ldp	x19, x20, [sp, #16]
  449c3c:	ldp	x23, x24, [sp, #48]
  449c40:	ldp	x29, x30, [sp], #160
  449c44:	ret
  449c48:	stp	x25, x26, [sp, #64]
  449c4c:	ldr	w25, [x0, #32]
  449c50:	stp	x21, x22, [sp, #32]
  449c54:	tst	x25, #0xfffff800
  449c58:	lsr	w25, w25, #11
  449c5c:	b.ne	449ec4 <_obstack_memory_used@@Base+0x1005c>  // b.any
  449c60:	ldr	x20, [x0, #24]
  449c64:	tbz	w1, #1, 449d74 <_obstack_memory_used@@Base+0xff0c>
  449c68:	ldr	x1, [x20]
  449c6c:	cbnz	x1, 449c80 <_obstack_memory_used@@Base+0xfe18>
  449c70:	b	449da0 <_obstack_memory_used@@Base+0xff38>
  449c74:	ldr	x1, [x20, #8]!
  449c78:	add	x25, x25, x0
  449c7c:	cbz	x1, 449d88 <_obstack_memory_used@@Base+0xff20>
  449c80:	mov	x0, x24
  449c84:	bl	4494b0 <_obstack_memory_used@@Base+0xf648>
  449c88:	cmn	x0, #0x1
  449c8c:	b.ne	449c74 <_obstack_memory_used@@Base+0xfe0c>  // b.any
  449c90:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1e198>
  449c94:	mov	x1, #0x7f8                 	// #2040
  449c98:	add	x0, x0, #0x7a8
  449c9c:	stp	x0, x1, [x24, #24]
  449ca0:	b	449da0 <_obstack_memory_used@@Base+0xff38>
  449ca4:	ldr	x2, [x20, #16]
  449ca8:	add	x3, x3, x2
  449cac:	cmp	x19, x3
  449cb0:	b.cc	44a198 <_obstack_memory_used@@Base+0x10330>  // b.lo, b.ul, b.last
  449cb4:	add	x2, x0, #0x1
  449cb8:	b	449c24 <_obstack_memory_used@@Base+0xfdbc>
  449cbc:	ldr	x28, [x27, #8]
  449cc0:	cbz	x28, 449c2c <_obstack_memory_used@@Base+0xfdc4>
  449cc4:	add	x0, x24, #0x8
  449cc8:	add	x23, sp, #0x88
  449ccc:	stp	x21, x22, [sp, #32]
  449cd0:	add	x22, sp, #0x90
  449cd4:	stp	x25, x26, [sp, #64]
  449cd8:	add	x26, x24, #0x10
  449cdc:	mov	x25, #0x0                   	// #0
  449ce0:	str	x0, [sp, #96]
  449ce4:	b	449d04 <_obstack_memory_used@@Base+0xfe9c>
  449ce8:	ldr	x1, [sp, #144]
  449cec:	add	x0, x0, x1
  449cf0:	cmp	x0, x19
  449cf4:	b.hi	44a190 <_obstack_memory_used@@Base+0x10328>  // b.pmore
  449cf8:	add	x25, x24, #0x1
  449cfc:	cmp	x25, x28
  449d00:	b.cs	449e0c <_obstack_memory_used@@Base+0xffa4>  // b.hs, b.nlast
  449d04:	add	x24, x25, x28
  449d08:	lsr	x24, x24, #1
  449d0c:	add	x0, x24, #0x2
  449d10:	ldr	x20, [x27, x0, lsl #3]
  449d14:	add	x1, x20, #0x4
  449d18:	ldrsw	x0, [x20, #4]
  449d1c:	sub	x0, x1, x0
  449d20:	bl	449070 <_obstack_memory_used@@Base+0xf208>
  449d24:	ldr	x1, [sp, #96]
  449d28:	and	w21, w0, #0xff
  449d2c:	mov	x2, x26
  449d30:	mov	w0, w21
  449d34:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  449d38:	mov	x1, x0
  449d3c:	mov	x3, x23
  449d40:	add	x2, x20, #0x8
  449d44:	mov	w0, w21
  449d48:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449d4c:	mov	x3, x22
  449d50:	mov	x2, x0
  449d54:	mov	x1, #0x0                   	// #0
  449d58:	and	w0, w21, #0xf
  449d5c:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449d60:	ldr	x0, [sp, #136]
  449d64:	cmp	x0, x19
  449d68:	b.ls	449ce8 <_obstack_memory_used@@Base+0xfe80>  // b.plast
  449d6c:	mov	x28, x24
  449d70:	b	449cfc <_obstack_memory_used@@Base+0xfe94>
  449d74:	mov	x1, x20
  449d78:	bl	4494b0 <_obstack_memory_used@@Base+0xf648>
  449d7c:	mov	x25, x0
  449d80:	cmn	x0, #0x1
  449d84:	b.eq	449c90 <_obstack_memory_used@@Base+0xfe28>  // b.none
  449d88:	ldr	w0, [x24, #32]
  449d8c:	tst	x25, #0xffffffffffe00000
  449d90:	b.eq	44a1d4 <_obstack_memory_used@@Base+0x1036c>  // b.none
  449d94:	and	w0, w0, #0x7ff
  449d98:	str	w0, [x24, #32]
  449d9c:	cbnz	x25, 449ec4 <_obstack_memory_used@@Base+0x1005c>
  449da0:	ldr	x0, [x24]
  449da4:	cmp	x0, x19
  449da8:	b.hi	449e00 <_obstack_memory_used@@Base+0xff98>  // b.pmore
  449dac:	ldrb	w1, [x24, #32]
  449db0:	ldr	x21, [x24, #24]
  449db4:	tbnz	w1, #0, 44a218 <_obstack_memory_used@@Base+0x103b0>
  449db8:	tbz	w1, #1, 44a170 <_obstack_memory_used@@Base+0x10308>
  449dbc:	ldr	x1, [x21]
  449dc0:	cbnz	x1, 449dd0 <_obstack_memory_used@@Base+0xff68>
  449dc4:	b	449e00 <_obstack_memory_used@@Base+0xff98>
  449dc8:	ldr	x1, [x21, #8]!
  449dcc:	cbz	x1, 449e00 <_obstack_memory_used@@Base+0xff98>
  449dd0:	mov	x2, x19
  449dd4:	mov	x0, x24
  449dd8:	bl	449270 <_obstack_memory_used@@Base+0xf408>
  449ddc:	mov	x20, x0
  449de0:	cbz	x0, 449dc8 <_obstack_memory_used@@Base+0xff60>
  449de4:	mov	x0, x20
  449de8:	ldp	x19, x20, [sp, #16]
  449dec:	ldp	x21, x22, [sp, #32]
  449df0:	ldp	x23, x24, [sp, #48]
  449df4:	ldp	x25, x26, [sp, #64]
  449df8:	ldp	x29, x30, [sp], #160
  449dfc:	ret
  449e00:	ldp	x21, x22, [sp, #32]
  449e04:	ldp	x25, x26, [sp, #64]
  449e08:	b	449c30 <_obstack_memory_used@@Base+0xfdc8>
  449e0c:	ldp	x21, x22, [sp, #32]
  449e10:	ldp	x25, x26, [sp, #64]
  449e14:	ldp	x27, x28, [sp, #80]
  449e18:	b	449c30 <_obstack_memory_used@@Base+0xfdc8>
  449e1c:	stp	x25, x26, [sp, #64]
  449e20:	ubfx	x25, x0, #3, #8
  449e24:	add	x2, x24, #0x10
  449e28:	add	x1, x24, #0x8
  449e2c:	mov	x0, x25
  449e30:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  449e34:	mov	x24, x0
  449e38:	ldr	x28, [x27, #8]
  449e3c:	cbz	x28, 449e10 <_obstack_memory_used@@Base+0xffa8>
  449e40:	and	w0, w25, #0xf
  449e44:	add	x23, sp, #0x88
  449e48:	mov	x26, #0x0                   	// #0
  449e4c:	stp	x21, x22, [sp, #32]
  449e50:	add	x22, sp, #0x90
  449e54:	str	w0, [sp, #96]
  449e58:	b	449e78 <_obstack_memory_used@@Base+0x10010>
  449e5c:	ldr	x1, [sp, #144]
  449e60:	add	x0, x0, x1
  449e64:	cmp	x0, x19
  449e68:	b.hi	44a190 <_obstack_memory_used@@Base+0x10328>  // b.pmore
  449e6c:	add	x26, x21, #0x1
  449e70:	cmp	x26, x28
  449e74:	b.cs	449e0c <_obstack_memory_used@@Base+0xffa4>  // b.hs, b.nlast
  449e78:	add	x21, x28, x26
  449e7c:	mov	x3, x23
  449e80:	mov	x1, x24
  449e84:	mov	w0, w25
  449e88:	lsr	x21, x21, #1
  449e8c:	add	x2, x21, #0x2
  449e90:	ldr	x20, [x27, x2, lsl #3]
  449e94:	add	x2, x20, #0x8
  449e98:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449e9c:	mov	x2, x0
  449ea0:	ldrb	w0, [sp, #96]
  449ea4:	mov	x3, x22
  449ea8:	mov	x1, #0x0                   	// #0
  449eac:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  449eb0:	ldr	x0, [sp, #136]
  449eb4:	cmp	x0, x19
  449eb8:	b.ls	449e5c <_obstack_memory_used@@Base+0xfff4>  // b.plast
  449ebc:	mov	x28, x21
  449ec0:	b	449e70 <_obstack_memory_used@@Base+0x10008>
  449ec4:	add	x20, x25, #0x2
  449ec8:	lsl	x20, x20, #3
  449ecc:	mov	x0, x20
  449ed0:	bl	4024b0 <malloc@plt>
  449ed4:	str	x0, [sp, #144]
  449ed8:	mov	x1, x0
  449edc:	cbz	x0, 449da0 <_obstack_memory_used@@Base+0xff38>
  449ee0:	str	xzr, [x1, #8]
  449ee4:	mov	x0, x20
  449ee8:	bl	4024b0 <malloc@plt>
  449eec:	str	x0, [sp, #152]
  449ef0:	cbz	x0, 449ef8 <_obstack_memory_used@@Base+0x10090>
  449ef4:	str	xzr, [x0, #8]
  449ef8:	ldrb	w0, [x24, #32]
  449efc:	ldr	x20, [x24, #24]
  449f00:	tbz	w0, #1, 44a1ac <_obstack_memory_used@@Base+0x10344>
  449f04:	ldr	x2, [x20]
  449f08:	cbz	x2, 44a210 <_obstack_memory_used@@Base+0x103a8>
  449f0c:	add	x22, sp, #0x90
  449f10:	mov	x1, x22
  449f14:	mov	x0, x24
  449f18:	bl	449630 <_obstack_memory_used@@Base+0xf7c8>
  449f1c:	ldr	x2, [x20, #8]!
  449f20:	cbnz	x2, 449f10 <_obstack_memory_used@@Base+0x100a8>
  449f24:	ldr	x0, [sp, #144]
  449f28:	str	x0, [sp, #96]
  449f2c:	str	x0, [sp, #120]
  449f30:	cbz	x0, 449f40 <_obstack_memory_used@@Base+0x100d8>
  449f34:	ldr	x0, [x0, #8]
  449f38:	cmp	x0, x25
  449f3c:	b.ne	44a210 <_obstack_memory_used@@Base+0x103a8>  // b.any
  449f40:	ldrb	w0, [x24, #32]
  449f44:	tbnz	w0, #2, 44a1a0 <_obstack_memory_used@@Base+0x10338>
  449f48:	ldrh	w1, [x24, #32]
  449f4c:	adrp	x0, 449000 <_obstack_memory_used@@Base+0xf198>
  449f50:	adrp	x20, 448000 <_obstack_memory_used@@Base+0xe198>
  449f54:	add	x0, x0, #0x1e8
  449f58:	tst	w1, #0x7f8
  449f5c:	add	x20, x20, #0xcc0
  449f60:	csel	x20, x20, x0, eq  // eq = none
  449f64:	ldr	x22, [sp, #152]
  449f68:	cbz	x22, 44a1c0 <_obstack_memory_used@@Base+0x10358>
  449f6c:	ldr	x1, [sp, #96]
  449f70:	stp	x27, x28, [sp, #80]
  449f74:	ldr	x0, [x1, #8]
  449f78:	str	x0, [sp, #104]
  449f7c:	cbz	x0, 44a200 <_obstack_memory_used@@Base+0x10398>
  449f80:	adrp	x3, 478000 <_obstack_memory_used@@Base+0x3e198>
  449f84:	add	x3, x3, #0x9b0
  449f88:	add	x0, x0, #0x1
  449f8c:	add	x28, x1, #0x10
  449f90:	add	x27, x3, #0x190
  449f94:	mov	x21, x28
  449f98:	mov	x23, x27
  449f9c:	lsl	x0, x0, #3
  449fa0:	mov	x26, #0x10                  	// #16
  449fa4:	str	x0, [sp, #112]
  449fa8:	ldr	x0, [sp, #112]
  449fac:	str	x27, [x22, x26]
  449fb0:	cmp	x0, x26
  449fb4:	b.eq	44a010 <_obstack_memory_used@@Base+0x101a8>  // b.none
  449fb8:	cmp	x21, x23
  449fbc:	mov	x27, x21
  449fc0:	b.ne	449fe0 <_obstack_memory_used@@Base+0x10178>  // b.any
  449fc4:	b	44a000 <_obstack_memory_used@@Base+0x10198>
  449fc8:	sub	x3, x27, x28
  449fcc:	add	x0, x22, x3
  449fd0:	ldr	x27, [x0, #16]
  449fd4:	str	xzr, [x0, #16]
  449fd8:	cmp	x27, x23
  449fdc:	b.eq	44a000 <_obstack_memory_used@@Base+0x10198>  // b.none
  449fe0:	ldr	x2, [x27]
  449fe4:	mov	x0, x24
  449fe8:	ldr	x1, [x21, #8]
  449fec:	blr	x20
  449ff0:	tbnz	w0, #31, 449fc8 <_obstack_memory_used@@Base+0x10160>
  449ff4:	add	x21, x21, #0x8
  449ff8:	add	x26, x26, #0x8
  449ffc:	b	449fa8 <_obstack_memory_used@@Base+0x10140>
  44a000:	mov	x27, x23
  44a004:	add	x21, x21, #0x8
  44a008:	add	x26, x26, #0x8
  44a00c:	b	449fa8 <_obstack_memory_used@@Base+0x10140>
  44a010:	add	x6, x22, #0x10
  44a014:	mov	x5, #0x0                   	// #0
  44a018:	mov	x3, #0x0                   	// #0
  44a01c:	mov	x0, #0x0                   	// #0
  44a020:	b	44a044 <_obstack_memory_used@@Base+0x101dc>
  44a024:	ldr	x4, [sp, #96]
  44a028:	add	x1, x3, #0x2
  44a02c:	add	x3, x3, #0x1
  44a030:	str	x2, [x4, x1, lsl #3]
  44a034:	ldr	x1, [sp, #104]
  44a038:	add	x0, x0, #0x1
  44a03c:	cmp	x1, x0
  44a040:	b.eq	44a060 <_obstack_memory_used@@Base+0x101f8>  // b.none
  44a044:	ldr	x1, [x6, x0, lsl #3]
  44a048:	ldr	x2, [x28, x0, lsl #3]
  44a04c:	cbnz	x1, 44a024 <_obstack_memory_used@@Base+0x101bc>
  44a050:	add	x1, x5, #0x2
  44a054:	add	x5, x5, #0x1
  44a058:	str	x2, [x22, x1, lsl #3]
  44a05c:	b	44a034 <_obstack_memory_used@@Base+0x101cc>
  44a060:	ldp	x0, x2, [sp, #144]
  44a064:	str	x0, [sp, #96]
  44a068:	ldr	x0, [sp, #120]
  44a06c:	str	x3, [x0, #8]
  44a070:	ldr	x0, [sp, #96]
  44a074:	str	x5, [x22, #8]
  44a078:	ldr	x1, [x2, #8]
  44a07c:	ldr	x0, [x0, #8]
  44a080:	add	x0, x0, x1
  44a084:	cmp	x0, x25
  44a088:	b.ne	44a214 <_obstack_memory_used@@Base+0x103ac>  // b.any
  44a08c:	mov	x1, x20
  44a090:	mov	x0, x24
  44a094:	bl	448df0 <_obstack_memory_used@@Base+0xef88>
  44a098:	ldr	x25, [sp, #152]
  44a09c:	ldr	x22, [x25, #8]
  44a0a0:	cbz	x22, 44a144 <_obstack_memory_used@@Base+0x102dc>
  44a0a4:	ldr	x0, [sp, #144]
  44a0a8:	str	x0, [sp, #96]
  44a0ac:	add	x27, x0, #0x10
  44a0b0:	ldr	x28, [x0, #8]
  44a0b4:	nop
  44a0b8:	add	x0, x25, x22, lsl #3
  44a0bc:	sub	x23, x22, #0x1
  44a0c0:	ldr	x26, [x0, #8]
  44a0c4:	cbz	x28, 44a1e0 <_obstack_memory_used@@Base+0x10378>
  44a0c8:	add	x22, x22, x28
  44a0cc:	mov	x21, x28
  44a0d0:	sub	x22, x22, #0x1
  44a0d4:	b	44a0e8 <_obstack_memory_used@@Base+0x10280>
  44a0d8:	ldr	x0, [x27, x21, lsl #3]
  44a0dc:	str	x0, [x27, x22, lsl #3]
  44a0e0:	sub	x22, x22, #0x1
  44a0e4:	cbz	x21, 44a120 <_obstack_memory_used@@Base+0x102b8>
  44a0e8:	mov	x28, x21
  44a0ec:	sub	x21, x21, #0x1
  44a0f0:	mov	x2, x26
  44a0f4:	mov	x0, x24
  44a0f8:	ldr	x1, [x27, x21, lsl #3]
  44a0fc:	blr	x20
  44a100:	cmp	w0, #0x0
  44a104:	b.gt	44a0d8 <_obstack_memory_used@@Base+0x10270>
  44a108:	ldr	x0, [sp, #96]
  44a10c:	add	x22, x22, #0x2
  44a110:	str	x26, [x0, x22, lsl #3]
  44a114:	cbz	x23, 44a12c <_obstack_memory_used@@Base+0x102c4>
  44a118:	mov	x22, x23
  44a11c:	b	44a0b8 <_obstack_memory_used@@Base+0x10250>
  44a120:	mov	x22, x23
  44a124:	mov	x28, #0x0                   	// #0
  44a128:	b	44a108 <_obstack_memory_used@@Base+0x102a0>
  44a12c:	ldr	x2, [sp, #96]
  44a130:	ldr	x1, [x25, #8]
  44a134:	ldr	x0, [x2, #8]
  44a138:	ldr	x25, [sp, #152]
  44a13c:	add	x0, x0, x1
  44a140:	str	x0, [x2, #8]
  44a144:	mov	x0, x25
  44a148:	bl	402730 <free@plt>
  44a14c:	ldp	x27, x28, [sp, #80]
  44a150:	ldr	x1, [sp, #144]
  44a154:	ldrb	w0, [x24, #32]
  44a158:	ldr	x2, [x24, #24]
  44a15c:	str	x2, [x1]
  44a160:	orr	w0, w0, #0x1
  44a164:	str	x1, [x24, #24]
  44a168:	strb	w0, [x24, #32]
  44a16c:	b	449da0 <_obstack_memory_used@@Base+0xff38>
  44a170:	mov	x1, x21
  44a174:	mov	x2, x19
  44a178:	mov	x0, x24
  44a17c:	bl	449270 <_obstack_memory_used@@Base+0xf408>
  44a180:	mov	x20, x0
  44a184:	ldp	x21, x22, [sp, #32]
  44a188:	ldp	x25, x26, [sp, #64]
  44a18c:	b	449c34 <_obstack_memory_used@@Base+0xfdcc>
  44a190:	ldp	x21, x22, [sp, #32]
  44a194:	ldp	x25, x26, [sp, #64]
  44a198:	ldp	x27, x28, [sp, #80]
  44a19c:	b	449c34 <_obstack_memory_used@@Base+0xfdcc>
  44a1a0:	adrp	x20, 449000 <_obstack_memory_used@@Base+0xf198>
  44a1a4:	add	x20, x20, #0x3f0
  44a1a8:	b	449f64 <_obstack_memory_used@@Base+0x100fc>
  44a1ac:	mov	x2, x20
  44a1b0:	add	x1, sp, #0x90
  44a1b4:	mov	x0, x24
  44a1b8:	bl	449630 <_obstack_memory_used@@Base+0xf7c8>
  44a1bc:	b	449f24 <_obstack_memory_used@@Base+0x100bc>
  44a1c0:	ldr	x2, [sp, #96]
  44a1c4:	mov	x1, x20
  44a1c8:	mov	x0, x24
  44a1cc:	bl	448df0 <_obstack_memory_used@@Base+0xef88>
  44a1d0:	b	44a150 <_obstack_memory_used@@Base+0x102e8>
  44a1d4:	bfi	w0, w25, #11, #21
  44a1d8:	str	w0, [x24, #32]
  44a1dc:	b	449d9c <_obstack_memory_used@@Base+0xff34>
  44a1e0:	ldr	x2, [sp, #96]
  44a1e4:	add	x1, x22, #0x1
  44a1e8:	str	x26, [x2, x1, lsl #3]
  44a1ec:	cbz	x23, 44a12c <_obstack_memory_used@@Base+0x102c4>
  44a1f0:	sub	x23, x22, #0x2
  44a1f4:	mov	x22, x23
  44a1f8:	ldr	x26, [x0]
  44a1fc:	b	44a108 <_obstack_memory_used@@Base+0x102a0>
  44a200:	mov	x2, x22
  44a204:	mov	x5, #0x0                   	// #0
  44a208:	mov	x3, #0x0                   	// #0
  44a20c:	b	44a068 <_obstack_memory_used@@Base+0x10200>
  44a210:	stp	x27, x28, [sp, #80]
  44a214:	bl	402650 <abort@plt>
  44a218:	ldp	x21, x22, [sp, #32]
  44a21c:	ldp	x25, x26, [sp, #64]
  44a220:	b	449be0 <_obstack_memory_used@@Base+0xfd78>
  44a224:	nop
  44a228:	stp	x29, x30, [sp, #-48]!
  44a22c:	mov	x5, #0xffffffffffffffff    	// #-1
  44a230:	mov	x4, #0x7f8                 	// #2040
  44a234:	mov	x29, sp
  44a238:	stp	x19, x20, [sp, #16]
  44a23c:	adrp	x20, 477000 <_obstack_memory_used@@Base+0x3d198>
  44a240:	mov	x19, x1
  44a244:	ldr	x1, [x20, #3880]
  44a248:	str	x21, [sp, #32]
  44a24c:	stp	x5, x2, [x19]
  44a250:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x3e198>
  44a254:	stp	x3, x0, [x19, #16]
  44a258:	str	x4, [x19, #32]
  44a25c:	cbz	x1, 44a26c <_obstack_memory_used@@Base+0x10404>
  44a260:	add	x0, x21, #0x9b0
  44a264:	add	x0, x0, #0x198
  44a268:	bl	402900 <pthread_mutex_lock@plt>
  44a26c:	add	x1, x21, #0x9b0
  44a270:	ldr	w0, [x1, #464]
  44a274:	ldr	x2, [x1, #456]
  44a278:	str	x2, [x19, #40]
  44a27c:	str	x19, [x1, #456]
  44a280:	cbz	w0, 44a2b4 <_obstack_memory_used@@Base+0x1044c>
  44a284:	ldr	x20, [x20, #3880]
  44a288:	cbz	x20, 44a2a4 <_obstack_memory_used@@Base+0x1043c>
  44a28c:	add	x0, x21, #0x9b0
  44a290:	ldp	x19, x20, [sp, #16]
  44a294:	add	x0, x0, #0x198
  44a298:	ldr	x21, [sp, #32]
  44a29c:	ldp	x29, x30, [sp], #48
  44a2a0:	b	402920 <pthread_mutex_unlock@plt>
  44a2a4:	ldp	x19, x20, [sp, #16]
  44a2a8:	ldr	x21, [sp, #32]
  44a2ac:	ldp	x29, x30, [sp], #48
  44a2b0:	ret
  44a2b4:	add	x1, x1, #0x1d0
  44a2b8:	mov	w0, #0x1                   	// #1
  44a2bc:	str	w0, [x1]
  44a2c0:	b	44a284 <_obstack_memory_used@@Base+0x1041c>
  44a2c4:	nop
  44a2c8:	cbz	x0, 44a2d8 <_obstack_memory_used@@Base+0x10470>
  44a2cc:	ldr	w4, [x0]
  44a2d0:	cbz	w4, 44a2d8 <_obstack_memory_used@@Base+0x10470>
  44a2d4:	b	44a228 <_obstack_memory_used@@Base+0x103c0>
  44a2d8:	ret
  44a2dc:	nop
  44a2e0:	cbz	x0, 44a2f8 <_obstack_memory_used@@Base+0x10490>
  44a2e4:	ldr	w2, [x0]
  44a2e8:	cbz	w2, 44a2f8 <_obstack_memory_used@@Base+0x10490>
  44a2ec:	mov	x3, #0x0                   	// #0
  44a2f0:	mov	x2, #0x0                   	// #0
  44a2f4:	b	44a228 <_obstack_memory_used@@Base+0x103c0>
  44a2f8:	ret
  44a2fc:	nop
  44a300:	stp	x29, x30, [sp, #-32]!
  44a304:	mov	x29, sp
  44a308:	str	x19, [sp, #16]
  44a30c:	mov	x19, x0
  44a310:	ldr	w0, [x0]
  44a314:	cbnz	w0, 44a324 <_obstack_memory_used@@Base+0x104bc>
  44a318:	ldr	x19, [sp, #16]
  44a31c:	ldp	x29, x30, [sp], #32
  44a320:	ret
  44a324:	mov	x0, #0x30                  	// #48
  44a328:	bl	4024b0 <malloc@plt>
  44a32c:	mov	x1, x0
  44a330:	mov	x0, x19
  44a334:	ldr	x19, [sp, #16]
  44a338:	mov	x3, #0x0                   	// #0
  44a33c:	ldp	x29, x30, [sp], #32
  44a340:	mov	x2, #0x0                   	// #0
  44a344:	b	44a228 <_obstack_memory_used@@Base+0x103c0>
  44a348:	stp	x29, x30, [sp, #-48]!
  44a34c:	mov	x5, #0xffffffffffffffff    	// #-1
  44a350:	mov	x4, #0x7fa                 	// #2042
  44a354:	mov	x29, sp
  44a358:	stp	x19, x20, [sp, #16]
  44a35c:	adrp	x20, 477000 <_obstack_memory_used@@Base+0x3d198>
  44a360:	mov	x19, x1
  44a364:	ldr	x1, [x20, #3880]
  44a368:	str	x21, [sp, #32]
  44a36c:	stp	x5, x2, [x19]
  44a370:	adrp	x21, 478000 <_obstack_memory_used@@Base+0x3e198>
  44a374:	stp	x3, x0, [x19, #16]
  44a378:	str	x4, [x19, #32]
  44a37c:	cbz	x1, 44a38c <_obstack_memory_used@@Base+0x10524>
  44a380:	add	x0, x21, #0x9b0
  44a384:	add	x0, x0, #0x198
  44a388:	bl	402900 <pthread_mutex_lock@plt>
  44a38c:	add	x1, x21, #0x9b0
  44a390:	ldr	w0, [x1, #464]
  44a394:	ldr	x2, [x1, #456]
  44a398:	str	x2, [x19, #40]
  44a39c:	str	x19, [x1, #456]
  44a3a0:	cbz	w0, 44a3d4 <_obstack_memory_used@@Base+0x1056c>
  44a3a4:	ldr	x20, [x20, #3880]
  44a3a8:	cbz	x20, 44a3c4 <_obstack_memory_used@@Base+0x1055c>
  44a3ac:	add	x0, x21, #0x9b0
  44a3b0:	ldp	x19, x20, [sp, #16]
  44a3b4:	add	x0, x0, #0x198
  44a3b8:	ldr	x21, [sp, #32]
  44a3bc:	ldp	x29, x30, [sp], #48
  44a3c0:	b	402920 <pthread_mutex_unlock@plt>
  44a3c4:	ldp	x19, x20, [sp, #16]
  44a3c8:	ldr	x21, [sp, #32]
  44a3cc:	ldp	x29, x30, [sp], #48
  44a3d0:	ret
  44a3d4:	add	x1, x1, #0x1d0
  44a3d8:	mov	w0, #0x1                   	// #1
  44a3dc:	str	w0, [x1]
  44a3e0:	b	44a3a4 <_obstack_memory_used@@Base+0x1053c>
  44a3e4:	nop
  44a3e8:	mov	x3, #0x0                   	// #0
  44a3ec:	mov	x2, #0x0                   	// #0
  44a3f0:	b	44a348 <_obstack_memory_used@@Base+0x104e0>
  44a3f4:	nop
  44a3f8:	stp	x29, x30, [sp, #-32]!
  44a3fc:	mov	x29, sp
  44a400:	str	x19, [sp, #16]
  44a404:	mov	x19, x0
  44a408:	mov	x0, #0x30                  	// #48
  44a40c:	bl	4024b0 <malloc@plt>
  44a410:	mov	x1, x0
  44a414:	mov	x0, x19
  44a418:	ldr	x19, [sp, #16]
  44a41c:	mov	x3, #0x0                   	// #0
  44a420:	ldp	x29, x30, [sp], #32
  44a424:	mov	x2, #0x0                   	// #0
  44a428:	b	44a348 <_obstack_memory_used@@Base+0x104e0>
  44a42c:	nop
  44a430:	stp	x29, x30, [sp, #-48]!
  44a434:	mov	x29, sp
  44a438:	stp	x19, x20, [sp, #16]
  44a43c:	cbz	x0, 44a508 <_obstack_memory_used@@Base+0x106a0>
  44a440:	mov	x20, x0
  44a444:	ldr	w0, [x0]
  44a448:	cbz	w0, 44a508 <_obstack_memory_used@@Base+0x106a0>
  44a44c:	stp	x21, x22, [sp, #32]
  44a450:	adrp	x21, 477000 <_obstack_memory_used@@Base+0x3d198>
  44a454:	adrp	x22, 478000 <_obstack_memory_used@@Base+0x3e198>
  44a458:	ldr	x0, [x21, #3880]
  44a45c:	cbz	x0, 44a46c <_obstack_memory_used@@Base+0x10604>
  44a460:	add	x0, x22, #0x9b0
  44a464:	add	x0, x0, #0x198
  44a468:	bl	402900 <pthread_mutex_lock@plt>
  44a46c:	add	x2, x22, #0x9b0
  44a470:	ldr	x1, [x2, #456]
  44a474:	cbz	x1, 44a4bc <_obstack_memory_used@@Base+0x10654>
  44a478:	add	x2, x2, #0x1c8
  44a47c:	b	44a488 <_obstack_memory_used@@Base+0x10620>
  44a480:	add	x2, x19, #0x28
  44a484:	cbz	x1, 44a4bc <_obstack_memory_used@@Base+0x10654>
  44a488:	ldr	x0, [x1, #24]
  44a48c:	mov	x19, x1
  44a490:	ldr	x1, [x1, #40]
  44a494:	cmp	x20, x0
  44a498:	b.ne	44a480 <_obstack_memory_used@@Base+0x10618>  // b.any
  44a49c:	str	x1, [x2]
  44a4a0:	ldr	x21, [x21, #3880]
  44a4a4:	cbnz	x21, 44a51c <_obstack_memory_used@@Base+0x106b4>
  44a4a8:	mov	x0, x19
  44a4ac:	ldp	x19, x20, [sp, #16]
  44a4b0:	ldp	x21, x22, [sp, #32]
  44a4b4:	ldp	x29, x30, [sp], #48
  44a4b8:	ret
  44a4bc:	add	x2, x22, #0x9b0
  44a4c0:	ldr	x19, [x2, #472]
  44a4c4:	cbz	x19, 44a53c <_obstack_memory_used@@Base+0x106d4>
  44a4c8:	add	x2, x2, #0x1d8
  44a4cc:	b	44a4e8 <_obstack_memory_used@@Base+0x10680>
  44a4d0:	ldr	x1, [x0]
  44a4d4:	cmp	x20, x1
  44a4d8:	b.eq	44a554 <_obstack_memory_used@@Base+0x106ec>  // b.none
  44a4dc:	add	x2, x19, #0x28
  44a4e0:	ldr	x19, [x19, #40]
  44a4e4:	cbz	x19, 44a53c <_obstack_memory_used@@Base+0x106d4>
  44a4e8:	ldrb	w1, [x19, #32]
  44a4ec:	ldr	x0, [x19, #24]
  44a4f0:	tbnz	w1, #0, 44a4d0 <_obstack_memory_used@@Base+0x10668>
  44a4f4:	cmp	x20, x0
  44a4f8:	b.ne	44a4dc <_obstack_memory_used@@Base+0x10674>  // b.any
  44a4fc:	ldr	x0, [x19, #40]
  44a500:	str	x0, [x2]
  44a504:	b	44a4a0 <_obstack_memory_used@@Base+0x10638>
  44a508:	mov	x19, #0x0                   	// #0
  44a50c:	mov	x0, x19
  44a510:	ldp	x19, x20, [sp, #16]
  44a514:	ldp	x29, x30, [sp], #48
  44a518:	ret
  44a51c:	add	x0, x22, #0x9b0
  44a520:	add	x0, x0, #0x198
  44a524:	bl	402920 <pthread_mutex_unlock@plt>
  44a528:	mov	x0, x19
  44a52c:	ldp	x19, x20, [sp, #16]
  44a530:	ldp	x21, x22, [sp, #32]
  44a534:	ldp	x29, x30, [sp], #48
  44a538:	ret
  44a53c:	ldr	x21, [x21, #3880]
  44a540:	cbz	x21, 44a550 <_obstack_memory_used@@Base+0x106e8>
  44a544:	add	x0, x22, #0x9b0
  44a548:	add	x0, x0, #0x198
  44a54c:	bl	402920 <pthread_mutex_unlock@plt>
  44a550:	bl	402650 <abort@plt>
  44a554:	ldr	x1, [x19, #40]
  44a558:	str	x1, [x2]
  44a55c:	bl	402730 <free@plt>
  44a560:	b	44a4a0 <_obstack_memory_used@@Base+0x10638>
  44a564:	nop
  44a568:	b	44a430 <_obstack_memory_used@@Base+0x105c8>
  44a56c:	nop
  44a570:	ldr	w1, [x0]
  44a574:	cbnz	w1, 44a57c <_obstack_memory_used@@Base+0x10714>
  44a578:	ret
  44a57c:	stp	x29, x30, [sp, #-16]!
  44a580:	mov	x29, sp
  44a584:	bl	44a430 <_obstack_memory_used@@Base+0x105c8>
  44a588:	ldp	x29, x30, [sp], #16
  44a58c:	b	402730 <free@plt>
  44a590:	stp	x29, x30, [sp, #-128]!
  44a594:	mov	x29, sp
  44a598:	stp	x23, x24, [sp, #48]
  44a59c:	adrp	x23, 478000 <_obstack_memory_used@@Base+0x3e198>
  44a5a0:	add	x2, x23, #0x9b0
  44a5a4:	stp	x19, x20, [sp, #16]
  44a5a8:	mov	x20, x0
  44a5ac:	add	x0, x2, #0x1d0
  44a5b0:	stp	x21, x22, [sp, #32]
  44a5b4:	mov	x22, x1
  44a5b8:	ldr	w0, [x0]
  44a5bc:	cbnz	w0, 44a620 <_obstack_memory_used@@Base+0x107b8>
  44a5c0:	mov	w2, #0x1                   	// #1
  44a5c4:	adrp	x0, 449000 <_obstack_memory_used@@Base+0xf198>
  44a5c8:	add	x1, sp, #0x50
  44a5cc:	add	x0, x0, #0x770
  44a5d0:	stp	x20, xzr, [sp, #80]
  44a5d4:	stp	xzr, xzr, [sp, #96]
  44a5d8:	str	xzr, [sp, #112]
  44a5dc:	str	w2, [sp, #120]
  44a5e0:	bl	402710 <dl_iterate_phdr@plt>
  44a5e4:	tbnz	w0, #31, 44a734 <_obstack_memory_used@@Base+0x108cc>
  44a5e8:	ldr	x21, [sp, #112]
  44a5ec:	cbz	x21, 44a608 <_obstack_memory_used@@Base+0x107a0>
  44a5f0:	ldr	x0, [sp, #88]
  44a5f4:	str	x0, [x22]
  44a5f8:	ldr	x0, [sp, #96]
  44a5fc:	str	x0, [x22, #8]
  44a600:	ldr	x0, [sp, #104]
  44a604:	str	x0, [x22, #16]
  44a608:	mov	x0, x21
  44a60c:	ldp	x19, x20, [sp, #16]
  44a610:	ldp	x21, x22, [sp, #32]
  44a614:	ldp	x23, x24, [sp, #48]
  44a618:	ldp	x29, x30, [sp], #128
  44a61c:	ret
  44a620:	stp	x25, x26, [sp, #64]
  44a624:	adrp	x25, 477000 <_obstack_memory_used@@Base+0x3d198>
  44a628:	ldr	x0, [x25, #3880]
  44a62c:	cbz	x0, 44a638 <_obstack_memory_used@@Base+0x107d0>
  44a630:	add	x0, x2, #0x198
  44a634:	bl	402900 <pthread_mutex_lock@plt>
  44a638:	add	x0, x23, #0x9b0
  44a63c:	ldr	x19, [x0, #472]
  44a640:	cbnz	x19, 44a650 <_obstack_memory_used@@Base+0x107e8>
  44a644:	b	44a6cc <_obstack_memory_used@@Base+0x10864>
  44a648:	ldr	x19, [x19, #40]
  44a64c:	cbz	x19, 44a6cc <_obstack_memory_used@@Base+0x10864>
  44a650:	ldr	x0, [x19]
  44a654:	cmp	x20, x0
  44a658:	b.cc	44a648 <_obstack_memory_used@@Base+0x107e0>  // b.lo, b.ul, b.last
  44a65c:	mov	x1, x20
  44a660:	mov	x0, x19
  44a664:	bl	449bc0 <_obstack_memory_used@@Base+0xfd58>
  44a668:	mov	x21, x0
  44a66c:	cbz	x0, 44a6cc <_obstack_memory_used@@Base+0x10864>
  44a670:	ldr	x25, [x25, #3880]
  44a674:	cbnz	x25, 44a73c <_obstack_memory_used@@Base+0x108d4>
  44a678:	ldrb	w0, [x19, #32]
  44a67c:	ldr	x1, [x19, #8]
  44a680:	str	x1, [x22]
  44a684:	ldr	x1, [x19, #16]
  44a688:	str	x1, [x22, #8]
  44a68c:	tbnz	w0, #2, 44a74c <_obstack_memory_used@@Base+0x108e4>
  44a690:	ldrh	w20, [x19, #32]
  44a694:	ubfx	x20, x20, #3, #8
  44a698:	add	x2, x19, #0x10
  44a69c:	add	x1, x19, #0x8
  44a6a0:	mov	w0, w20
  44a6a4:	bl	449188 <_obstack_memory_used@@Base+0xf320>
  44a6a8:	add	x3, sp, #0x50
  44a6ac:	mov	x1, x0
  44a6b0:	add	x2, x21, #0x8
  44a6b4:	mov	w0, w20
  44a6b8:	bl	448f10 <_obstack_memory_used@@Base+0xf0a8>
  44a6bc:	ldr	x0, [sp, #80]
  44a6c0:	ldp	x25, x26, [sp, #64]
  44a6c4:	str	x0, [x22, #16]
  44a6c8:	b	44a608 <_obstack_memory_used@@Base+0x107a0>
  44a6cc:	add	x24, x23, #0x9b0
  44a6d0:	add	x26, x24, #0x1d8
  44a6d4:	nop
  44a6d8:	ldr	x19, [x24, #456]
  44a6dc:	cbz	x19, 44a764 <_obstack_memory_used@@Base+0x108fc>
  44a6e0:	ldr	x2, [x19, #40]
  44a6e4:	mov	x1, x20
  44a6e8:	mov	x0, x19
  44a6ec:	str	x2, [x24, #456]
  44a6f0:	bl	449bc0 <_obstack_memory_used@@Base+0xfd58>
  44a6f4:	mov	x21, x0
  44a6f8:	ldr	x2, [x24, #472]
  44a6fc:	cbz	x2, 44a77c <_obstack_memory_used@@Base+0x10914>
  44a700:	mov	x0, x26
  44a704:	ldr	x3, [x19]
  44a708:	b	44a718 <_obstack_memory_used@@Base+0x108b0>
  44a70c:	add	x0, x2, #0x28
  44a710:	ldr	x2, [x2, #40]
  44a714:	cbz	x2, 44a724 <_obstack_memory_used@@Base+0x108bc>
  44a718:	ldr	x1, [x2]
  44a71c:	cmp	x1, x3
  44a720:	b.cs	44a70c <_obstack_memory_used@@Base+0x108a4>  // b.hs, b.nlast
  44a724:	str	x2, [x19, #40]
  44a728:	str	x19, [x0]
  44a72c:	cbz	x21, 44a6d8 <_obstack_memory_used@@Base+0x10870>
  44a730:	b	44a670 <_obstack_memory_used@@Base+0x10808>
  44a734:	mov	x21, #0x0                   	// #0
  44a738:	b	44a608 <_obstack_memory_used@@Base+0x107a0>
  44a73c:	add	x0, x23, #0x9b0
  44a740:	add	x0, x0, #0x198
  44a744:	bl	402920 <pthread_mutex_unlock@plt>
  44a748:	b	44a678 <_obstack_memory_used@@Base+0x10810>
  44a74c:	add	x1, x21, #0x4
  44a750:	ldrsw	x0, [x21, #4]
  44a754:	sub	x0, x1, x0
  44a758:	bl	449070 <_obstack_memory_used@@Base+0xf208>
  44a75c:	and	w20, w0, #0xff
  44a760:	b	44a698 <_obstack_memory_used@@Base+0x10830>
  44a764:	ldr	x25, [x25, #3880]
  44a768:	cbz	x25, 44a784 <_obstack_memory_used@@Base+0x1091c>
  44a76c:	add	x0, x24, #0x198
  44a770:	bl	402920 <pthread_mutex_unlock@plt>
  44a774:	ldp	x25, x26, [sp, #64]
  44a778:	b	44a5c0 <_obstack_memory_used@@Base+0x10758>
  44a77c:	mov	x0, x26
  44a780:	b	44a724 <_obstack_memory_used@@Base+0x108bc>
  44a784:	ldp	x25, x26, [sp, #64]
  44a788:	b	44a5c0 <_obstack_memory_used@@Base+0x10758>
  44a78c:	nop
  44a790:	stp	x29, x30, [sp, #-64]!
  44a794:	mov	x29, sp
  44a798:	stp	x19, x20, [sp, #16]
  44a79c:	adrp	x20, 476000 <_obstack_memory_used@@Base+0x3c198>
  44a7a0:	add	x20, x20, #0xd98
  44a7a4:	stp	x21, x22, [sp, #32]
  44a7a8:	adrp	x21, 476000 <_obstack_memory_used@@Base+0x3c198>
  44a7ac:	add	x21, x21, #0xd78
  44a7b0:	sub	x20, x20, x21
  44a7b4:	mov	w22, w0
  44a7b8:	stp	x23, x24, [sp, #48]
  44a7bc:	mov	x23, x1
  44a7c0:	mov	x24, x2
  44a7c4:	bl	4022a0 <memcpy@plt-0x40>
  44a7c8:	cmp	xzr, x20, asr #3
  44a7cc:	b.eq	44a7f8 <_obstack_memory_used@@Base+0x10990>  // b.none
  44a7d0:	asr	x20, x20, #3
  44a7d4:	mov	x19, #0x0                   	// #0
  44a7d8:	ldr	x3, [x21, x19, lsl #3]
  44a7dc:	mov	x2, x24
  44a7e0:	add	x19, x19, #0x1
  44a7e4:	mov	x1, x23
  44a7e8:	mov	w0, w22
  44a7ec:	blr	x3
  44a7f0:	cmp	x20, x19
  44a7f4:	b.ne	44a7d8 <_obstack_memory_used@@Base+0x10970>  // b.any
  44a7f8:	ldp	x19, x20, [sp, #16]
  44a7fc:	ldp	x21, x22, [sp, #32]
  44a800:	ldp	x23, x24, [sp, #48]
  44a804:	ldp	x29, x30, [sp], #64
  44a808:	ret
  44a80c:	nop
  44a810:	ret
  44a814:	nop
  44a818:	mov	x2, x1
  44a81c:	mov	x1, x0
  44a820:	mov	w0, #0x0                   	// #0
  44a824:	b	4028f0 <__xstat@plt>
  44a828:	mov	x2, x1
  44a82c:	mov	w1, w0
  44a830:	mov	w0, #0x0                   	// #0
  44a834:	b	402840 <__fxstat@plt>
  44a838:	mov	x2, x1
  44a83c:	mov	x1, x0
  44a840:	mov	w0, #0x0                   	// #0
  44a844:	b	4027e0 <__lxstat@plt>

Disassembly of section .fini:

000000000044a848 <.fini>:
  44a848:	stp	x29, x30, [sp, #-16]!
  44a84c:	mov	x29, sp
  44a850:	ldp	x29, x30, [sp], #16
  44a854:	ret
