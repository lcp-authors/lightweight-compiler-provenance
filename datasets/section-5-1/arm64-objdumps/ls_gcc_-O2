
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ls_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402370 <.init>:
  402370:	stp	x29, x30, [sp, #-16]!
  402374:	mov	x29, sp
  402378:	bl	404174 <__fxstatat@plt+0x1724>
  40237c:	ldp	x29, x30, [sp], #16
  402380:	ret

Disassembly of section .plt:

0000000000402390 <mbrtowc@plt-0x20>:
  402390:	stp	x16, x30, [sp, #-16]!
  402394:	adrp	x16, 42e000 <_obstack_memory_used@@Base+0x1ace0>
  402398:	ldr	x17, [x16, #4088]
  40239c:	add	x16, x16, #0xff8
  4023a0:	br	x17
  4023a4:	nop
  4023a8:	nop
  4023ac:	nop

00000000004023b0 <mbrtowc@plt>:
  4023b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16]
  4023b8:	add	x16, x16, #0x0
  4023bc:	br	x17

00000000004023c0 <memcpy@plt>:
  4023c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #8]
  4023c8:	add	x16, x16, #0x8
  4023cc:	br	x17

00000000004023d0 <memmove@plt>:
  4023d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #16]
  4023d8:	add	x16, x16, #0x10
  4023dc:	br	x17

00000000004023e0 <cap_to_text@plt>:
  4023e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #24]
  4023e8:	add	x16, x16, #0x18
  4023ec:	br	x17

00000000004023f0 <_exit@plt>:
  4023f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #32]
  4023f8:	add	x16, x16, #0x20
  4023fc:	br	x17

0000000000402400 <getcwd@plt>:
  402400:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #40]
  402408:	add	x16, x16, #0x28
  40240c:	br	x17

0000000000402410 <fwrite_unlocked@plt>:
  402410:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #48]
  402418:	add	x16, x16, #0x30
  40241c:	br	x17

0000000000402420 <strtoul@plt>:
  402420:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #56]
  402428:	add	x16, x16, #0x38
  40242c:	br	x17

0000000000402430 <strlen@plt>:
  402430:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #64]
  402438:	add	x16, x16, #0x40
  40243c:	br	x17

0000000000402440 <__sprintf_chk@plt>:
  402440:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #72]
  402448:	add	x16, x16, #0x48
  40244c:	br	x17

0000000000402450 <mbstowcs@plt>:
  402450:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #80]
  402458:	add	x16, x16, #0x50
  40245c:	br	x17

0000000000402460 <exit@plt>:
  402460:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #88]
  402468:	add	x16, x16, #0x58
  40246c:	br	x17

0000000000402470 <_setjmp@plt>:
  402470:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #96]
  402478:	add	x16, x16, #0x60
  40247c:	br	x17

0000000000402480 <raise@plt>:
  402480:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #104]
  402488:	add	x16, x16, #0x68
  40248c:	br	x17

0000000000402490 <error@plt>:
  402490:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #112]
  402498:	add	x16, x16, #0x70
  40249c:	br	x17

00000000004024a0 <sigprocmask@plt>:
  4024a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #120]
  4024a8:	add	x16, x16, #0x78
  4024ac:	br	x17

00000000004024b0 <localtime_r@plt>:
  4024b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #128]
  4024b8:	add	x16, x16, #0x80
  4024bc:	br	x17

00000000004024c0 <setenv@plt>:
  4024c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #136]
  4024c8:	add	x16, x16, #0x88
  4024cc:	br	x17

00000000004024d0 <readlink@plt>:
  4024d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #144]
  4024d8:	add	x16, x16, #0x90
  4024dc:	br	x17

00000000004024e0 <getgrnam@plt>:
  4024e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #152]
  4024e8:	add	x16, x16, #0x98
  4024ec:	br	x17

00000000004024f0 <opendir@plt>:
  4024f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #160]
  4024f8:	add	x16, x16, #0xa0
  4024fc:	br	x17

0000000000402500 <strftime@plt>:
  402500:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #168]
  402508:	add	x16, x16, #0xa8
  40250c:	br	x17

0000000000402510 <__cxa_atexit@plt>:
  402510:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #176]
  402518:	add	x16, x16, #0xb0
  40251c:	br	x17

0000000000402520 <iswcntrl@plt>:
  402520:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #184]
  402528:	add	x16, x16, #0xb8
  40252c:	br	x17

0000000000402530 <clock_gettime@plt>:
  402530:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #192]
  402538:	add	x16, x16, #0xc0
  40253c:	br	x17

0000000000402540 <lseek@plt>:
  402540:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #200]
  402548:	add	x16, x16, #0xc8
  40254c:	br	x17

0000000000402550 <__fpending@plt>:
  402550:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #208]
  402558:	add	x16, x16, #0xd0
  40255c:	br	x17

0000000000402560 <__ctype_tolower_loc@plt>:
  402560:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #216]
  402568:	add	x16, x16, #0xd8
  40256c:	br	x17

0000000000402570 <snprintf@plt>:
  402570:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #224]
  402578:	add	x16, x16, #0xe0
  40257c:	br	x17

0000000000402580 <localeconv@plt>:
  402580:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #232]
  402588:	add	x16, x16, #0xe8
  40258c:	br	x17

0000000000402590 <fileno@plt>:
  402590:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #240]
  402598:	add	x16, x16, #0xf0
  40259c:	br	x17

00000000004025a0 <__memcpy_chk@plt>:
  4025a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #248]
  4025a8:	add	x16, x16, #0xf8
  4025ac:	br	x17

00000000004025b0 <signal@plt>:
  4025b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #256]
  4025b8:	add	x16, x16, #0x100
  4025bc:	br	x17

00000000004025c0 <__snprintf_chk@plt>:
  4025c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #264]
  4025c8:	add	x16, x16, #0x108
  4025cc:	br	x17

00000000004025d0 <fclose@plt>:
  4025d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #272]
  4025d8:	add	x16, x16, #0x110
  4025dc:	br	x17

00000000004025e0 <nl_langinfo@plt>:
  4025e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #280]
  4025e8:	add	x16, x16, #0x118
  4025ec:	br	x17

00000000004025f0 <malloc@plt>:
  4025f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #288]
  4025f8:	add	x16, x16, #0x120
  4025fc:	br	x17

0000000000402600 <wcwidth@plt>:
  402600:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #296]
  402608:	add	x16, x16, #0x128
  40260c:	br	x17

0000000000402610 <tzset@plt>:
  402610:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #304]
  402618:	add	x16, x16, #0x130
  40261c:	br	x17

0000000000402620 <wcswidth@plt>:
  402620:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #312]
  402628:	add	x16, x16, #0x138
  40262c:	br	x17

0000000000402630 <sigemptyset@plt>:
  402630:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #320]
  402638:	add	x16, x16, #0x140
  40263c:	br	x17

0000000000402640 <strncmp@plt>:
  402640:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #328]
  402648:	add	x16, x16, #0x148
  40264c:	br	x17

0000000000402650 <bindtextdomain@plt>:
  402650:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #336]
  402658:	add	x16, x16, #0x150
  40265c:	br	x17

0000000000402660 <__libc_start_main@plt>:
  402660:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #344]
  402668:	add	x16, x16, #0x158
  40266c:	br	x17

0000000000402670 <__printf_chk@plt>:
  402670:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #352]
  402678:	add	x16, x16, #0x160
  40267c:	br	x17

0000000000402680 <memset@plt>:
  402680:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #360]
  402688:	add	x16, x16, #0x168
  40268c:	br	x17

0000000000402690 <getpwnam@plt>:
  402690:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #368]
  402698:	add	x16, x16, #0x170
  40269c:	br	x17

00000000004026a0 <gmtime_r@plt>:
  4026a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #376]
  4026a8:	add	x16, x16, #0x178
  4026ac:	br	x17

00000000004026b0 <__strtoul_internal@plt>:
  4026b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #384]
  4026b8:	add	x16, x16, #0x180
  4026bc:	br	x17

00000000004026c0 <calloc@plt>:
  4026c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #392]
  4026c8:	add	x16, x16, #0x188
  4026cc:	br	x17

00000000004026d0 <readdir@plt>:
  4026d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #400]
  4026d8:	add	x16, x16, #0x190
  4026dc:	br	x17

00000000004026e0 <realloc@plt>:
  4026e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #408]
  4026e8:	add	x16, x16, #0x198
  4026ec:	br	x17

00000000004026f0 <__ctype_toupper_loc@plt>:
  4026f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #416]
  4026f8:	add	x16, x16, #0x1a0
  4026fc:	br	x17

0000000000402700 <closedir@plt>:
  402700:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #424]
  402708:	add	x16, x16, #0x1a8
  40270c:	br	x17

0000000000402710 <sigaction@plt>:
  402710:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #432]
  402718:	add	x16, x16, #0x1b0
  40271c:	br	x17

0000000000402720 <strrchr@plt>:
  402720:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #440]
  402728:	add	x16, x16, #0x1b8
  40272c:	br	x17

0000000000402730 <tcgetpgrp@plt>:
  402730:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #448]
  402738:	add	x16, x16, #0x1c0
  40273c:	br	x17

0000000000402740 <__gmon_start__@plt>:
  402740:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #456]
  402748:	add	x16, x16, #0x1c8
  40274c:	br	x17

0000000000402750 <mktime@plt>:
  402750:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #464]
  402758:	add	x16, x16, #0x1d0
  40275c:	br	x17

0000000000402760 <abort@plt>:
  402760:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #472]
  402768:	add	x16, x16, #0x1d8
  40276c:	br	x17

0000000000402770 <mbsinit@plt>:
  402770:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #480]
  402778:	add	x16, x16, #0x1e0
  40277c:	br	x17

0000000000402780 <__overflow@plt>:
  402780:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #488]
  402788:	add	x16, x16, #0x1e8
  40278c:	br	x17

0000000000402790 <getxattr@plt>:
  402790:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #496]
  402798:	add	x16, x16, #0x1f0
  40279c:	br	x17

00000000004027a0 <memcmp@plt>:
  4027a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #504]
  4027a8:	add	x16, x16, #0x1f8
  4027ac:	br	x17

00000000004027b0 <textdomain@plt>:
  4027b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #512]
  4027b8:	add	x16, x16, #0x200
  4027bc:	br	x17

00000000004027c0 <stpncpy@plt>:
  4027c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #520]
  4027c8:	add	x16, x16, #0x208
  4027cc:	br	x17

00000000004027d0 <getopt_long@plt>:
  4027d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #528]
  4027d8:	add	x16, x16, #0x210
  4027dc:	br	x17

00000000004027e0 <__fprintf_chk@plt>:
  4027e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #536]
  4027e8:	add	x16, x16, #0x218
  4027ec:	br	x17

00000000004027f0 <sigismember@plt>:
  4027f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #544]
  4027f8:	add	x16, x16, #0x220
  4027fc:	br	x17

0000000000402800 <strcmp@plt>:
  402800:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #552]
  402808:	add	x16, x16, #0x228
  40280c:	br	x17

0000000000402810 <getpwuid@plt>:
  402810:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #560]
  402818:	add	x16, x16, #0x230
  40281c:	br	x17

0000000000402820 <__ctype_b_loc@plt>:
  402820:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #568]
  402828:	add	x16, x16, #0x238
  40282c:	br	x17

0000000000402830 <fseeko@plt>:
  402830:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #576]
  402838:	add	x16, x16, #0x240
  40283c:	br	x17

0000000000402840 <free@plt>:
  402840:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #584]
  402848:	add	x16, x16, #0x248
  40284c:	br	x17

0000000000402850 <__ctype_get_mb_cur_max@plt>:
  402850:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #592]
  402858:	add	x16, x16, #0x250
  40285c:	br	x17

0000000000402860 <mempcpy@plt>:
  402860:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #600]
  402868:	add	x16, x16, #0x258
  40286c:	br	x17

0000000000402870 <strspn@plt>:
  402870:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #608]
  402878:	add	x16, x16, #0x260
  40287c:	br	x17

0000000000402880 <strchr@plt>:
  402880:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #616]
  402888:	add	x16, x16, #0x268
  40288c:	br	x17

0000000000402890 <fwrite@plt>:
  402890:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #624]
  402898:	add	x16, x16, #0x270
  40289c:	br	x17

00000000004028a0 <fnmatch@plt>:
  4028a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #632]
  4028a8:	add	x16, x16, #0x278
  4028ac:	br	x17

00000000004028b0 <fflush_unlocked@plt>:
  4028b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #640]
  4028b8:	add	x16, x16, #0x280
  4028bc:	br	x17

00000000004028c0 <fflush@plt>:
  4028c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #648]
  4028c8:	add	x16, x16, #0x288
  4028cc:	br	x17

00000000004028d0 <strcpy@plt>:
  4028d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #656]
  4028d8:	add	x16, x16, #0x290
  4028dc:	br	x17

00000000004028e0 <dirfd@plt>:
  4028e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #664]
  4028e8:	add	x16, x16, #0x298
  4028ec:	br	x17

00000000004028f0 <unsetenv@plt>:
  4028f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #672]
  4028f8:	add	x16, x16, #0x2a0
  4028fc:	br	x17

0000000000402900 <__lxstat@plt>:
  402900:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #680]
  402908:	add	x16, x16, #0x2a8
  40290c:	br	x17

0000000000402910 <cap_get_file@plt>:
  402910:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #688]
  402918:	add	x16, x16, #0x2b0
  40291c:	br	x17

0000000000402920 <isatty@plt>:
  402920:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #696]
  402928:	add	x16, x16, #0x2b8
  40292c:	br	x17

0000000000402930 <wcstombs@plt>:
  402930:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #704]
  402938:	add	x16, x16, #0x2c0
  40293c:	br	x17

0000000000402940 <gethostname@plt>:
  402940:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #712]
  402948:	add	x16, x16, #0x2c8
  40294c:	br	x17

0000000000402950 <cap_free@plt>:
  402950:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #720]
  402958:	add	x16, x16, #0x2d0
  40295c:	br	x17

0000000000402960 <__fxstat@plt>:
  402960:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #728]
  402968:	add	x16, x16, #0x2d8
  40296c:	br	x17

0000000000402970 <dcgettext@plt>:
  402970:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #736]
  402978:	add	x16, x16, #0x2e0
  40297c:	br	x17

0000000000402980 <fputs_unlocked@plt>:
  402980:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #744]
  402988:	add	x16, x16, #0x2e8
  40298c:	br	x17

0000000000402990 <strcoll@plt>:
  402990:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #752]
  402998:	add	x16, x16, #0x2f0
  40299c:	br	x17

00000000004029a0 <__freading@plt>:
  4029a0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #760]
  4029a8:	add	x16, x16, #0x2f8
  4029ac:	br	x17

00000000004029b0 <sigaddset@plt>:
  4029b0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #768]
  4029b8:	add	x16, x16, #0x300
  4029bc:	br	x17

00000000004029c0 <iswprint@plt>:
  4029c0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #776]
  4029c8:	add	x16, x16, #0x308
  4029cc:	br	x17

00000000004029d0 <__assert_fail@plt>:
  4029d0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #784]
  4029d8:	add	x16, x16, #0x310
  4029dc:	br	x17

00000000004029e0 <__errno_location@plt>:
  4029e0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #792]
  4029e8:	add	x16, x16, #0x318
  4029ec:	br	x17

00000000004029f0 <getenv@plt>:
  4029f0:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #800]
  4029f8:	add	x16, x16, #0x320
  4029fc:	br	x17

0000000000402a00 <__xstat@plt>:
  402a00:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #808]
  402a08:	add	x16, x16, #0x328
  402a0c:	br	x17

0000000000402a10 <getgrgid@plt>:
  402a10:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #816]
  402a18:	add	x16, x16, #0x330
  402a1c:	br	x17

0000000000402a20 <timegm@plt>:
  402a20:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #824]
  402a28:	add	x16, x16, #0x338
  402a2c:	br	x17

0000000000402a30 <ioctl@plt>:
  402a30:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #832]
  402a38:	add	x16, x16, #0x340
  402a3c:	br	x17

0000000000402a40 <setlocale@plt>:
  402a40:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #840]
  402a48:	add	x16, x16, #0x348
  402a4c:	br	x17

0000000000402a50 <__fxstatat@plt>:
  402a50:	adrp	x16, 42f000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #848]
  402a58:	add	x16, x16, #0x350
  402a5c:	br	x17

Disassembly of section .text:

0000000000402a60 <_obstack_begin@@Base-0x106b0>:
  402a60:	stp	x29, x30, [sp, #-160]!
  402a64:	mov	x29, sp
  402a68:	stp	x23, x24, [sp, #48]
  402a6c:	mov	w23, w0
  402a70:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  402a74:	stp	x19, x20, [sp, #16]
  402a78:	add	x19, x0, #0x5c8
  402a7c:	adrp	x20, 415000 <_obstack_memory_used@@Base+0x1ce0>
  402a80:	ldr	x0, [x1]
  402a84:	stp	x21, x22, [sp, #32]
  402a88:	mov	x22, x1
  402a8c:	stp	x25, x26, [sp, #64]
  402a90:	add	x20, x20, #0x2d0
  402a94:	mov	w21, #0x2                   	// #2
  402a98:	stp	x27, x28, [sp, #80]
  402a9c:	bl	40fc68 <__fxstatat@plt+0xd218>
  402aa0:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2ce0>
  402aa4:	add	x0, x0, #0xf0
  402aa8:	str	x0, [sp, #96]
  402aac:	mov	x1, x0
  402ab0:	mov	w0, #0x6                   	// #6
  402ab4:	bl	402a40 <setlocale@plt>
  402ab8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  402abc:	add	x1, x1, #0x400
  402ac0:	mov	x0, x20
  402ac4:	bl	402650 <bindtextdomain@plt>
  402ac8:	mov	x0, x20
  402acc:	adrp	x20, 430000 <__progname@@GLIBC_2.17+0xa48>
  402ad0:	bl	4027b0 <textdomain@plt>
  402ad4:	add	x20, x20, #0x6c8
  402ad8:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  402adc:	adrp	x0, 40b000 <__fxstatat@plt+0x85b0>
  402ae0:	add	x0, x0, #0xf0
  402ae4:	str	w21, [x1, #1320]
  402ae8:	bl	415278 <_obstack_memory_used@@Base+0x1f58>
  402aec:	adrp	x4, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  402af0:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  402af4:	mov	x2, #0xffffffffffffffff    	// #-1
  402af8:	mov	w1, #0x1                   	// #1
  402afc:	ldr	w24, [x4, #1300]
  402b00:	sturb	w1, [x20, #-47]
  402b04:	str	xzr, [x19, #3096]
  402b08:	cmp	w24, w21
  402b0c:	str	wzr, [x19, #3760]
  402b10:	strb	wzr, [x19, #3905]
  402b14:	str	x3, [x19, #4032]
  402b18:	str	x2, [x19, #4040]
  402b1c:	b.eq	4036fc <__fxstatat@plt+0xcac>  // b.none
  402b20:	cmp	w24, #0x3
  402b24:	b.ne	402ca4 <__fxstatat@plt+0x254>  // b.any
  402b28:	mov	w1, #0x7                   	// #7
  402b2c:	mov	x0, #0x0                   	// #0
  402b30:	str	wzr, [x19, #3940]
  402b34:	bl	411138 <__fxstatat@plt+0xe6e8>
  402b38:	mov	w1, #0x1                   	// #1
  402b3c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  402b40:	add	x0, x0, #0x418
  402b44:	stur	w1, [x20, #-180]
  402b48:	sturb	wzr, [x20, #-144]
  402b4c:	sturb	wzr, [x20, #-48]
  402b50:	str	wzr, [x20, #56]
  402b54:	stp	xzr, xzr, [x20, #64]
  402b58:	str	wzr, [x19, #3392]
  402b5c:	str	wzr, [x19, #3720]
  402b60:	strb	wzr, [x19, #3725]
  402b64:	strb	wzr, [x19, #3752]
  402b68:	str	wzr, [x19, #3764]
  402b6c:	strb	wzr, [x19, #3936]
  402b70:	strb	wzr, [x19, #3948]
  402b74:	strb	wzr, [x19, #3972]
  402b78:	bl	4029f0 <getenv@plt>
  402b7c:	mov	x21, x0
  402b80:	cbz	x0, 402bb0 <__fxstatat@plt+0x160>
  402b84:	adrp	x24, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  402b88:	add	x24, x24, #0x1e0
  402b8c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  402b90:	mov	x2, x24
  402b94:	add	x1, x1, #0x208
  402b98:	mov	x3, #0x4                   	// #4
  402b9c:	bl	40a6d0 <__fxstatat@plt+0x7c80>
  402ba0:	tbnz	w0, #31, 4035f4 <__fxstatat@plt+0xba4>
  402ba4:	ldr	w1, [x24, w0, sxtw #2]
  402ba8:	mov	x0, #0x0                   	// #0
  402bac:	bl	411138 <__fxstatat@plt+0xe6e8>
  402bb0:	mov	x1, #0x50                  	// #80
  402bb4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  402bb8:	add	x0, x0, #0x470
  402bbc:	str	x1, [x19, #8]
  402bc0:	bl	4029f0 <getenv@plt>
  402bc4:	mov	x21, x0
  402bc8:	cbz	x0, 402bd4 <__fxstatat@plt+0x184>
  402bcc:	ldrb	w1, [x0]
  402bd0:	cbnz	w1, 403650 <__fxstatat@plt+0xc00>
  402bd4:	add	x2, sp, #0x90
  402bd8:	mov	x1, #0x5413                	// #21523
  402bdc:	mov	w0, #0x1                   	// #1
  402be0:	bl	402a30 <ioctl@plt>
  402be4:	cmn	w0, #0x1
  402be8:	b.eq	402bf4 <__fxstatat@plt+0x1a4>  // b.none
  402bec:	ldrh	w0, [sp, #146]
  402bf0:	cbnz	w0, 4035e8 <__fxstatat@plt+0xb98>
  402bf4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  402bf8:	add	x0, x0, #0x4b8
  402bfc:	bl	4029f0 <getenv@plt>
  402c00:	mov	x21, x0
  402c04:	mov	x1, #0x8                   	// #8
  402c08:	str	x1, [x19, #3736]
  402c0c:	cbz	x0, 402c30 <__fxstatat@plt+0x1e0>
  402c10:	add	x3, sp, #0x90
  402c14:	mov	x4, #0x0                   	// #0
  402c18:	mov	w2, #0x0                   	// #0
  402c1c:	mov	x1, #0x0                   	// #0
  402c20:	bl	412360 <__fxstatat@plt+0xf910>
  402c24:	cbnz	w0, 40374c <__fxstatat@plt+0xcfc>
  402c28:	ldr	x0, [sp, #144]
  402c2c:	str	x0, [x19, #3736]
  402c30:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x3ce0>
  402c34:	adrp	x25, 417000 <_obstack_memory_used@@Base+0x3ce0>
  402c38:	adrp	x24, 417000 <_obstack_memory_used@@Base+0x3ce0>
  402c3c:	add	x21, x21, #0xf08
  402c40:	add	x25, x25, #0x500
  402c44:	add	x24, x24, #0xce0
  402c48:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  402c4c:	mov	w27, #0x0                   	// #0
  402c50:	add	x0, x0, #0x368
  402c54:	mov	x28, #0x0                   	// #0
  402c58:	mov	w26, #0xffffffff            	// #-1
  402c5c:	str	wzr, [sp, #104]
  402c60:	str	x0, [sp, #112]
  402c64:	add	x4, sp, #0x90
  402c68:	add	x3, x21, #0x308
  402c6c:	mov	x2, x25
  402c70:	mov	x1, x22
  402c74:	mov	w0, w23
  402c78:	str	w26, [sp, #144]
  402c7c:	bl	4027d0 <getopt_long@plt>
  402c80:	cmn	w0, #0x1
  402c84:	b.eq	402cd8 <__fxstatat@plt+0x288>  // b.none
  402c88:	add	w0, w0, #0x3
  402c8c:	cmp	w0, #0x113
  402c90:	b.hi	403e98 <__fxstatat@plt+0x1448>  // b.pmore
  402c94:	ldrh	w0, [x24, w0, uxtw #1]
  402c98:	adr	x1, 402ca4 <__fxstatat@plt+0x254>
  402c9c:	add	x0, x1, w0, sxth #2
  402ca0:	br	x0
  402ca4:	cmp	w24, #0x1
  402ca8:	b.ne	404120 <__fxstatat@plt+0x16d0>  // b.any
  402cac:	mov	w0, w24
  402cb0:	bl	402920 <isatty@plt>
  402cb4:	cbnz	w0, 40387c <__fxstatat@plt+0xe2c>
  402cb8:	str	w24, [x19, #3940]
  402cbc:	b	402b38 <__fxstatat@plt+0xe8>
  402cc0:	mov	w27, #0x1                   	// #1
  402cc4:	b	402c64 <__fxstatat@plt+0x214>
  402cc8:	mov	w0, #0x1                   	// #1
  402ccc:	strb	w0, [x19, #3752]
  402cd0:	str	wzr, [x19, #3940]
  402cd4:	b	402c64 <__fxstatat@plt+0x214>
  402cd8:	ldr	x0, [x19, #3960]
  402cdc:	cbz	x0, 403784 <__fxstatat@plt+0xd34>
  402ce0:	ldr	x2, [x19, #8]
  402ce4:	mov	x1, #0x3                   	// #3
  402ce8:	mov	x0, #0x0                   	// #0
  402cec:	udiv	x1, x2, x1
  402cf0:	add	x3, x1, x1, lsl #1
  402cf4:	cmp	x2, x3
  402cf8:	cinc	x1, x1, ne  // ne = any
  402cfc:	stur	x1, [x20, #-216]
  402d00:	bl	411118 <__fxstatat@plt+0xe6c8>
  402d04:	mov	w24, w0
  402d08:	ldr	w1, [x19, #3940]
  402d0c:	cmp	w1, #0x4
  402d10:	ccmp	w1, #0x1, #0x4, ne  // ne = any
  402d14:	b.ne	40362c <__fxstatat@plt+0xbdc>  // b.any
  402d18:	mov	w1, #0x0                   	// #0
  402d1c:	mov	x0, #0x0                   	// #0
  402d20:	strb	w1, [x19, #3906]
  402d24:	bl	4110c8 <__fxstatat@plt+0xe678>
  402d28:	str	x0, [x19, #3104]
  402d2c:	cmp	w24, #0x7
  402d30:	b.eq	403cfc <__fxstatat@plt+0x12ac>  // b.none
  402d34:	ldr	w0, [x19, #3764]
  402d38:	cmp	w0, #0x1
  402d3c:	b.ls	402d6c <__fxstatat@plt+0x31c>  // b.plast
  402d40:	sub	w0, w0, #0x2
  402d44:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  402d48:	add	x1, x1, #0x620
  402d4c:	add	x24, x0, x1
  402d50:	ldrb	w1, [x1, x0]
  402d54:	cbz	w1, 402d6c <__fxstatat@plt+0x31c>
  402d58:	ldr	x0, [x19, #3104]
  402d5c:	mov	w2, #0x1                   	// #1
  402d60:	bl	411158 <__fxstatat@plt+0xe708>
  402d64:	ldrb	w1, [x24, #1]!
  402d68:	cbnz	w1, 402d58 <__fxstatat@plt+0x308>
  402d6c:	mov	x0, #0x0                   	// #0
  402d70:	bl	4110c8 <__fxstatat@plt+0xe678>
  402d74:	mov	w2, #0x1                   	// #1
  402d78:	mov	w1, #0x3a                  	// #58
  402d7c:	str	x0, [x20, #48]
  402d80:	bl	411158 <__fxstatat@plt+0xe708>
  402d84:	ldrb	w0, [x19, #3920]
  402d88:	cbz	w0, 402d98 <__fxstatat@plt+0x348>
  402d8c:	ldr	w0, [x19, #3940]
  402d90:	cbz	w0, 4036bc <__fxstatat@plt+0xc6c>
  402d94:	strb	wzr, [x19, #3920]
  402d98:	ldr	w1, [sp, #104]
  402d9c:	ldr	w0, [x19, #3720]
  402da0:	cmp	w1, #0x0
  402da4:	ldr	w1, [x19, #3940]
  402da8:	sub	w0, w0, #0x1
  402dac:	ccmp	w0, #0x1, #0x2, eq  // eq = none
  402db0:	b.ls	403da8 <__fxstatat@plt+0x1358>  // b.plast
  402db4:	cbz	w1, 4036c4 <__fxstatat@plt+0xc74>
  402db8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  402dbc:	ldr	w24, [x0, #1448]
  402dc0:	ldrb	w0, [x19, #3904]
  402dc4:	cbnz	w0, 4038e0 <__fxstatat@plt+0xe90>
  402dc8:	ldrb	w0, [x19, #3724]
  402dcc:	cbz	w0, 402dd8 <__fxstatat@plt+0x388>
  402dd0:	mov	w0, #0x1                   	// #1
  402dd4:	sturb	w0, [x20, #-176]
  402dd8:	ldur	w0, [x20, #-180]
  402ddc:	cmp	w0, #0x1
  402de0:	b.eq	4038b0 <__fxstatat@plt+0xe60>  // b.none
  402de4:	ldurb	w0, [x20, #-48]
  402de8:	cbz	w0, 402e38 <__fxstatat@plt+0x3e8>
  402dec:	adrp	x4, 404000 <__fxstatat@plt+0x15b0>
  402df0:	adrp	x3, 404000 <__fxstatat@plt+0x15b0>
  402df4:	add	x4, x4, #0x538
  402df8:	add	x3, x3, #0x240
  402dfc:	adrp	x2, 404000 <__fxstatat@plt+0x15b0>
  402e00:	mov	x1, #0x0                   	// #0
  402e04:	add	x2, x2, #0x230
  402e08:	mov	x0, #0x1e                  	// #30
  402e0c:	bl	40c510 <__fxstatat@plt+0x9ac0>
  402e10:	str	x0, [x19, #3728]
  402e14:	cbz	x0, 4040c8 <__fxstatat@plt+0x1678>
  402e18:	adrp	x4, 402000 <mbrtowc@plt-0x3b0>
  402e1c:	adrp	x3, 402000 <mbrtowc@plt-0x3b0>
  402e20:	add	x4, x4, #0x840
  402e24:	add	x3, x3, #0x5f0
  402e28:	sub	x0, x20, #0x88
  402e2c:	mov	x2, #0x0                   	// #0
  402e30:	mov	x1, #0x0                   	// #0
  402e34:	bl	413110 <_obstack_begin@@Base>
  402e38:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  402e3c:	add	x0, x0, #0x760
  402e40:	bl	4029f0 <getenv@plt>
  402e44:	bl	413428 <_obstack_memory_used@@Base+0x108>
  402e48:	str	x0, [x19, #4024]
  402e4c:	ldr	w1, [x19, #3392]
  402e50:	sub	w1, w1, #0x2
  402e54:	tst	w1, #0xfffffffd
  402e58:	b.eq	402e64 <__fxstatat@plt+0x414>  // b.none
  402e5c:	ldr	w0, [x19, #3940]
  402e60:	cbnz	w0, 4037d0 <__fxstatat@plt+0xd80>
  402e64:	mov	w1, #0x1                   	// #1
  402e68:	mov	w0, #0x0                   	// #0
  402e6c:	sturb	w1, [x20, #-183]
  402e70:	ldrb	w1, [x19, #3920]
  402e74:	and	w0, w0, #0x1
  402e78:	sturb	w0, [x20, #-182]
  402e7c:	cbnz	w1, 403bac <__fxstatat@plt+0x115c>
  402e80:	ldurb	w0, [x20, #-184]
  402e84:	cbnz	w0, 403b08 <__fxstatat@plt+0x10b8>
  402e88:	mov	x1, #0x64                  	// #100
  402e8c:	mov	x0, #0x47e0                	// #18400
  402e90:	stur	x1, [x20, #-192]
  402e94:	sub	w25, w23, w24
  402e98:	bl	411e78 <__fxstatat@plt+0xf428>
  402e9c:	str	xzr, [x19, #3368]
  402ea0:	str	x0, [x19, #3400]
  402ea4:	bl	407e40 <__fxstatat@plt+0x53f0>
  402ea8:	cmp	w25, #0x0
  402eac:	b.le	403710 <__fxstatat@plt+0xcc0>
  402eb0:	sxtw	x24, w24
  402eb4:	nop
  402eb8:	ldr	x0, [x22, x24, lsl #3]
  402ebc:	mov	w2, #0x1                   	// #1
  402ec0:	ldr	x3, [sp, #96]
  402ec4:	add	x24, x24, #0x1
  402ec8:	mov	w1, #0x0                   	// #0
  402ecc:	bl	407f40 <__fxstatat@plt+0x54f0>
  402ed0:	cmp	w23, w24
  402ed4:	b.gt	402eb8 <__fxstatat@plt+0x468>
  402ed8:	ldr	x0, [x19, #3368]
  402edc:	cbnz	x0, 403ab4 <__fxstatat@plt+0x1064>
  402ee0:	cmp	w25, #0x1
  402ee4:	b.le	403734 <__fxstatat@plt+0xce4>
  402ee8:	ldr	x22, [x19, #3096]
  402eec:	cbz	x22, 402f94 <__fxstatat@plt+0x544>
  402ef0:	mov	w23, #0x1                   	// #1
  402ef4:	b	402f28 <__fxstatat@plt+0x4d8>
  402ef8:	ldrb	w2, [x22, #16]
  402efc:	ldr	x1, [x22, #8]
  402f00:	bl	408a30 <__fxstatat@plt+0x5fe0>
  402f04:	ldr	x0, [x22]
  402f08:	bl	402840 <free@plt>
  402f0c:	ldr	x0, [x22, #8]
  402f10:	bl	402840 <free@plt>
  402f14:	mov	x0, x22
  402f18:	bl	402840 <free@plt>
  402f1c:	ldr	x22, [x19, #3096]
  402f20:	sturb	w23, [x20, #-47]
  402f24:	cbz	x22, 402f94 <__fxstatat@plt+0x544>
  402f28:	ldr	x1, [x19, #3728]
  402f2c:	ldr	x0, [x22, #24]
  402f30:	str	x0, [x19, #3096]
  402f34:	ldr	x0, [x22]
  402f38:	cbz	x1, 402ef8 <__fxstatat@plt+0x4a8>
  402f3c:	cbnz	x0, 402ef8 <__fxstatat@plt+0x4a8>
  402f40:	ldp	x0, x2, [x20, #-120]
  402f44:	sub	x0, x2, x0
  402f48:	cmp	x0, #0xf
  402f4c:	b.ls	4040cc <__fxstatat@plt+0x167c>  // b.plast
  402f50:	ldp	x4, x3, [x2, #-16]
  402f54:	sub	x2, x2, #0x10
  402f58:	mov	x0, x1
  402f5c:	add	x1, sp, #0x90
  402f60:	stur	x2, [x20, #-112]
  402f64:	stp	x4, x3, [sp, #144]
  402f68:	bl	40cab0 <__fxstatat@plt+0xa060>
  402f6c:	cbz	x0, 4040e8 <__fxstatat@plt+0x1698>
  402f70:	bl	402840 <free@plt>
  402f74:	ldr	x0, [x22]
  402f78:	bl	402840 <free@plt>
  402f7c:	ldr	x0, [x22, #8]
  402f80:	bl	402840 <free@plt>
  402f84:	mov	x0, x22
  402f88:	bl	402840 <free@plt>
  402f8c:	ldr	x22, [x19, #3096]
  402f90:	cbnz	x22, 402f28 <__fxstatat@plt+0x4d8>
  402f94:	ldrb	w0, [x19, #3904]
  402f98:	cbz	w0, 402fa4 <__fxstatat@plt+0x554>
  402f9c:	ldrb	w0, [x19, #3768]
  402fa0:	cbnz	w0, 403804 <__fxstatat@plt+0xdb4>
  402fa4:	ldrb	w0, [x19, #3920]
  402fa8:	cbnz	w0, 403bf0 <__fxstatat@plt+0x11a0>
  402fac:	ldr	x20, [x19, #3728]
  402fb0:	cbz	x20, 402fc8 <__fxstatat@plt+0x578>
  402fb4:	mov	x0, x20
  402fb8:	bl	40c0a0 <__fxstatat@plt+0x9650>
  402fbc:	cbnz	x0, 404104 <__fxstatat@plt+0x16b4>
  402fc0:	mov	x0, x20
  402fc4:	bl	40c6a8 <__fxstatat@plt+0x9c58>
  402fc8:	ldr	w0, [x19, #3760]
  402fcc:	ldp	x19, x20, [sp, #16]
  402fd0:	ldp	x21, x22, [sp, #32]
  402fd4:	ldp	x23, x24, [sp, #48]
  402fd8:	ldp	x25, x26, [sp, #64]
  402fdc:	ldp	x27, x28, [sp, #80]
  402fe0:	ldp	x29, x30, [sp], #160
  402fe4:	ret
  402fe8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  402fec:	ldr	x28, [x0, #1440]
  402ff0:	b	402c64 <__fxstatat@plt+0x214>
  402ff4:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  402ff8:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  402ffc:	add	x3, x21, #0x8d0
  403000:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403004:	ldr	x5, [x2, #1312]
  403008:	add	x0, x0, #0x580
  40300c:	ldr	x1, [x1, #1440]
  403010:	add	x2, x21, #0x8e8
  403014:	mov	x4, #0x4                   	// #4
  403018:	str	x3, [sp, #120]
  40301c:	bl	40a9d0 <__fxstatat@plt+0x7f80>
  403020:	ldr	x3, [sp, #120]
  403024:	ldr	w0, [x3, x0, lsl #2]
  403028:	str	w0, [x19, #3720]
  40302c:	b	402c64 <__fxstatat@plt+0x214>
  403030:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403034:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403038:	mov	w6, #0x1                   	// #1
  40303c:	add	x3, x21, #0x888
  403040:	ldr	x5, [x2, #1312]
  403044:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403048:	ldr	x1, [x1, #1440]
  40304c:	add	x0, x0, #0x578
  403050:	add	x2, x21, #0x8a0
  403054:	mov	x4, #0x4                   	// #4
  403058:	str	w6, [sp, #104]
  40305c:	str	x3, [sp, #120]
  403060:	bl	40a9d0 <__fxstatat@plt+0x7f80>
  403064:	ldr	x3, [sp, #120]
  403068:	ldr	w0, [x3, x0, lsl #2]
  40306c:	str	w0, [x19, #3392]
  403070:	b	402c64 <__fxstatat@plt+0x214>
  403074:	mov	w0, #0x90                  	// #144
  403078:	ldr	x2, [sp, #112]
  40307c:	mov	x1, #0x1                   	// #1
  403080:	str	x1, [x19, #3960]
  403084:	str	w0, [x19, #3968]
  403088:	str	x1, [x2, #408]
  40308c:	str	w0, [x19, #4016]
  403090:	b	402c64 <__fxstatat@plt+0x214>
  403094:	strb	wzr, [x19, #3905]
  403098:	b	402c64 <__fxstatat@plt+0x214>
  40309c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4030a0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4030a4:	mov	x4, #0x4                   	// #4
  4030a8:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  4030ac:	ldr	x5, [x1, #1312]
  4030b0:	add	x3, x3, #0x1e0
  4030b4:	ldr	x1, [x0, #1440]
  4030b8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  4030bc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4030c0:	add	x2, x2, #0x208
  4030c4:	add	x0, x0, #0x5c8
  4030c8:	bl	40a9d0 <__fxstatat@plt+0x7f80>
  4030cc:	mov	x1, x0
  4030d0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  4030d4:	add	x3, x2, #0x1e0
  4030d8:	mov	x0, #0x0                   	// #0
  4030dc:	ldr	w1, [x3, x1, lsl #2]
  4030e0:	bl	411138 <__fxstatat@plt+0xe6e8>
  4030e4:	b	402c64 <__fxstatat@plt+0x214>
  4030e8:	adrp	x3, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4030ec:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4030f0:	add	x2, x21, #0xa00
  4030f4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4030f8:	ldr	x5, [x3, #1312]
  4030fc:	add	x0, x0, #0x5b0
  403100:	ldr	x1, [x1, #1440]
  403104:	add	x3, x21, #0x9f0
  403108:	mov	x4, #0x4                   	// #4
  40310c:	str	x2, [sp, #120]
  403110:	bl	40a9d0 <__fxstatat@plt+0x7f80>
  403114:	ldr	x2, [sp, #120]
  403118:	add	x0, x2, x0, lsl #2
  40311c:	ldur	w0, [x0, #-16]
  403120:	str	w0, [x19, #3764]
  403124:	b	402c64 <__fxstatat@plt+0x214>
  403128:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40312c:	ldr	x1, [x0, #1440]
  403130:	cbz	x1, 4036b0 <__fxstatat@plt+0xc60>
  403134:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403138:	add	x3, x21, #0x978
  40313c:	add	x2, x21, #0x9a0
  403140:	mov	x4, #0x4                   	// #4
  403144:	ldr	x5, [x0, #1312]
  403148:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40314c:	add	x0, x0, #0x5a0
  403150:	str	x3, [sp, #120]
  403154:	bl	40a9d0 <__fxstatat@plt+0x7f80>
  403158:	ldr	x3, [sp, #120]
  40315c:	ldr	w0, [x3, x0, lsl #2]
  403160:	cmp	w0, #0x1
  403164:	b.eq	4036b0 <__fxstatat@plt+0xc60>  // b.none
  403168:	cmp	w0, #0x2
  40316c:	b.eq	403ff8 <__fxstatat@plt+0x15a8>  // b.none
  403170:	mov	w0, #0x0                   	// #0
  403174:	sturb	w0, [x20, #-184]
  403178:	b	402c64 <__fxstatat@plt+0x214>
  40317c:	mov	x0, #0x10                  	// #16
  403180:	bl	411e78 <__fxstatat@plt+0xf428>
  403184:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403188:	ldr	x2, [x1, #1440]
  40318c:	ldr	x1, [x20, #72]
  403190:	stp	x2, x1, [x0]
  403194:	str	x0, [x20, #72]
  403198:	b	402c64 <__fxstatat@plt+0x214>
  40319c:	mov	w0, #0x1                   	// #1
  4031a0:	strb	w0, [x19, #3724]
  4031a4:	b	402c64 <__fxstatat@plt+0x214>
  4031a8:	adrp	x28, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4031ac:	add	x28, x28, #0x3e0
  4031b0:	str	wzr, [x19, #3940]
  4031b4:	b	402c64 <__fxstatat@plt+0x214>
  4031b8:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4031bc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4031c0:	add	x3, x21, #0x918
  4031c4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4031c8:	ldr	x5, [x2, #1312]
  4031cc:	add	x0, x0, #0x588
  4031d0:	ldr	x1, [x1, #1440]
  4031d4:	add	x2, x21, #0x938
  4031d8:	mov	x4, #0x4                   	// #4
  4031dc:	str	x3, [sp, #120]
  4031e0:	bl	40a9d0 <__fxstatat@plt+0x7f80>
  4031e4:	ldr	x3, [sp, #120]
  4031e8:	ldr	w0, [x3, x0, lsl #2]
  4031ec:	str	w0, [x19, #3940]
  4031f0:	b	402c64 <__fxstatat@plt+0x214>
  4031f4:	mov	w0, #0x2                   	// #2
  4031f8:	str	w0, [x19, #3764]
  4031fc:	b	402c64 <__fxstatat@plt+0x214>
  403200:	mov	w0, #0x4                   	// #4
  403204:	stur	w0, [x20, #-180]
  403208:	b	402c64 <__fxstatat@plt+0x214>
  40320c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403210:	ldr	x1, [x0, #1440]
  403214:	cbz	x1, 4036a0 <__fxstatat@plt+0xc50>
  403218:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40321c:	add	x3, x21, #0x978
  403220:	add	x2, x21, #0x9a0
  403224:	mov	x4, #0x4                   	// #4
  403228:	ldr	x5, [x0, #1312]
  40322c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403230:	add	x0, x0, #0x598
  403234:	str	x3, [sp, #120]
  403238:	bl	40a9d0 <__fxstatat@plt+0x7f80>
  40323c:	ldr	x3, [sp, #120]
  403240:	ldr	w0, [x3, x0, lsl #2]
  403244:	cmp	w0, #0x1
  403248:	b.eq	4036a0 <__fxstatat@plt+0xc50>  // b.none
  40324c:	cmp	w0, #0x2
  403250:	b.eq	403694 <__fxstatat@plt+0xc44>  // b.none
  403254:	strb	wzr, [x19, #3904]
  403258:	b	402c64 <__fxstatat@plt+0x214>
  40325c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403260:	add	x2, x19, #0xf78
  403264:	add	x1, x19, #0xf80
  403268:	ldr	x0, [x0, #1440]
  40326c:	bl	40d4c0 <__fxstatat@plt+0xaa70>
  403270:	cbnz	w0, 4040ac <__fxstatat@plt+0x165c>
  403274:	ldr	x1, [sp, #112]
  403278:	ldr	x0, [x19, #3960]
  40327c:	str	x0, [x1, #408]
  403280:	ldr	w0, [x19, #3968]
  403284:	str	w0, [x19, #4016]
  403288:	b	402c64 <__fxstatat@plt+0x214>
  40328c:	mov	w0, #0x3                   	// #3
  403290:	mov	w1, #0x1                   	// #1
  403294:	str	w1, [sp, #104]
  403298:	str	w0, [x19, #3392]
  40329c:	b	402c64 <__fxstatat@plt+0x214>
  4032a0:	mov	w0, #0x2                   	// #2
  4032a4:	str	w0, [x19, #3720]
  4032a8:	b	402c64 <__fxstatat@plt+0x214>
  4032ac:	mov	w0, #0x4                   	// #4
  4032b0:	mov	w1, #0x1                   	// #1
  4032b4:	str	w1, [sp, #104]
  4032b8:	str	w0, [x19, #3392]
  4032bc:	b	402c64 <__fxstatat@plt+0x214>
  4032c0:	mov	w0, #0x1                   	// #1
  4032c4:	strb	w0, [x19, #3948]
  4032c8:	b	402c64 <__fxstatat@plt+0x214>
  4032cc:	mov	w0, #0x3                   	// #3
  4032d0:	str	w0, [x19, #3940]
  4032d4:	b	402c64 <__fxstatat@plt+0x214>
  4032d8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4032dc:	ldr	x0, [x0, #1440]
  4032e0:	bl	4045b0 <__fxstatat@plt+0x1b60>
  4032e4:	tst	w0, #0xff
  4032e8:	b.ne	402c64 <__fxstatat@plt+0x214>  // b.any
  4032ec:	mov	w2, #0x5                   	// #5
  4032f0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4032f4:	mov	x0, #0x0                   	// #0
  4032f8:	add	x1, x1, #0x530
  4032fc:	bl	402970 <dcgettext@plt>
  403300:	mov	x19, x0
  403304:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403308:	add	x0, x0, #0x5a0
  40330c:	ldr	x0, [x0]
  403310:	bl	411778 <__fxstatat@plt+0xed28>
  403314:	mov	x4, x0
  403318:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40331c:	mov	x3, x19
  403320:	add	x2, x2, #0x548
  403324:	mov	w1, #0x0                   	// #0
  403328:	mov	w0, #0x2                   	// #2
  40332c:	bl	402490 <error@plt>
  403330:	mov	w0, #0x1                   	// #1
  403334:	strb	w0, [x19, #3988]
  403338:	b	402c64 <__fxstatat@plt+0x214>
  40333c:	mov	w0, #0x1                   	// #1
  403340:	strb	w0, [x19, #3725]
  403344:	b	402c64 <__fxstatat@plt+0x214>
  403348:	mov	w0, #0x1                   	// #1
  40334c:	strb	w0, [x19, #3905]
  403350:	b	402c64 <__fxstatat@plt+0x214>
  403354:	mov	w0, #0x1                   	// #1
  403358:	str	w0, [x19, #3764]
  40335c:	b	402c64 <__fxstatat@plt+0x214>
  403360:	ldr	x0, [sp, #112]
  403364:	str	wzr, [x19, #3940]
  403368:	strb	wzr, [x0, #401]
  40336c:	b	402c64 <__fxstatat@plt+0x214>
  403370:	mov	w0, #0x4                   	// #4
  403374:	str	w0, [x19, #3940]
  403378:	b	402c64 <__fxstatat@plt+0x214>
  40337c:	mov	w0, #0x1                   	// #1
  403380:	strb	w0, [x19, #3936]
  403384:	b	402c64 <__fxstatat@plt+0x214>
  403388:	mov	w0, #0xb0                  	// #176
  40338c:	b	403078 <__fxstatat@plt+0x628>
  403390:	ldr	x0, [sp, #112]
  403394:	str	wzr, [x19, #3940]
  403398:	strb	wzr, [x0, #400]
  40339c:	b	402c64 <__fxstatat@plt+0x214>
  4033a0:	ldr	w0, [x19, #3940]
  4033a4:	mov	w1, #0x2                   	// #2
  4033a8:	str	w1, [x20, #56]
  4033ac:	str	w26, [x19, #3392]
  4033b0:	cbz	w0, 403c48 <__fxstatat@plt+0x11f8>
  4033b4:	mov	w0, #0x1                   	// #1
  4033b8:	sturb	wzr, [x20, #-184]
  4033bc:	str	w0, [sp, #104]
  4033c0:	strb	wzr, [x19, #3904]
  4033c4:	strb	wzr, [x19, #3948]
  4033c8:	b	402c64 <__fxstatat@plt+0x214>
  4033cc:	mov	w0, #0x1                   	// #1
  4033d0:	sturb	w0, [x20, #-144]
  4033d4:	b	402c64 <__fxstatat@plt+0x214>
  4033d8:	mov	w0, #0x1                   	// #1
  4033dc:	str	w0, [x19, #3720]
  4033e0:	b	402c64 <__fxstatat@plt+0x214>
  4033e4:	mov	w1, #0x7                   	// #7
  4033e8:	mov	x0, #0x0                   	// #0
  4033ec:	bl	411138 <__fxstatat@plt+0xe6e8>
  4033f0:	b	402c64 <__fxstatat@plt+0x214>
  4033f4:	mov	w0, #0x2                   	// #2
  4033f8:	str	w0, [x20, #56]
  4033fc:	b	402c64 <__fxstatat@plt+0x214>
  403400:	mov	w0, #0x1                   	// #1
  403404:	strb	w0, [x19, #3972]
  403408:	b	402c64 <__fxstatat@plt+0x214>
  40340c:	mov	w0, #0x1                   	// #1
  403410:	str	w0, [sp, #104]
  403414:	str	w0, [x19, #3392]
  403418:	b	402c64 <__fxstatat@plt+0x214>
  40341c:	mov	w0, #0x1                   	// #1
  403420:	str	w0, [sp, #104]
  403424:	str	w26, [x19, #3392]
  403428:	b	402c64 <__fxstatat@plt+0x214>
  40342c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403430:	mov	w2, #0x5                   	// #5
  403434:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403438:	add	x1, x1, #0x560
  40343c:	ldr	x3, [x0, #1440]
  403440:	mov	x0, #0x0                   	// #0
  403444:	str	x3, [sp, #120]
  403448:	bl	402970 <dcgettext@plt>
  40344c:	mov	x5, x0
  403450:	ldr	x4, [sp, #96]
  403454:	mov	w6, #0x2                   	// #2
  403458:	ldr	x3, [sp, #120]
  40345c:	mov	x2, #0x0                   	// #0
  403460:	mov	w1, #0x0                   	// #0
  403464:	mov	x0, x3
  403468:	mov	x3, #0xffffffffffffffff    	// #-1
  40346c:	bl	412118 <__fxstatat@plt+0xf6c8>
  403470:	str	x0, [x19, #3736]
  403474:	b	402c64 <__fxstatat@plt+0x214>
  403478:	mov	w0, #0x2                   	// #2
  40347c:	mov	w1, #0x1                   	// #1
  403480:	str	w1, [sp, #104]
  403484:	str	w0, [x19, #3392]
  403488:	b	402c64 <__fxstatat@plt+0x214>
  40348c:	mov	w0, #0x1                   	// #1
  403490:	sturb	w0, [x20, #-48]
  403494:	b	402c64 <__fxstatat@plt+0x214>
  403498:	mov	w1, #0x5                   	// #5
  40349c:	mov	x0, #0x0                   	// #0
  4034a0:	bl	411138 <__fxstatat@plt+0xe6e8>
  4034a4:	b	402c64 <__fxstatat@plt+0x214>
  4034a8:	mov	w1, #0x0                   	// #0
  4034ac:	mov	x0, #0x0                   	// #0
  4034b0:	bl	411138 <__fxstatat@plt+0xe6e8>
  4034b4:	b	402c64 <__fxstatat@plt+0x214>
  4034b8:	mov	w0, #0x5                   	// #5
  4034bc:	stur	w0, [x20, #-180]
  4034c0:	b	402c64 <__fxstatat@plt+0x214>
  4034c4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4034c8:	mov	x0, #0x10                  	// #16
  4034cc:	ldr	x2, [x1, #1440]
  4034d0:	str	x2, [sp, #120]
  4034d4:	bl	411e78 <__fxstatat@plt+0xf428>
  4034d8:	ldr	x1, [x20, #64]
  4034dc:	str	x0, [x20, #64]
  4034e0:	ldr	x2, [sp, #120]
  4034e4:	stp	x2, x1, [x0]
  4034e8:	b	402c64 <__fxstatat@plt+0x214>
  4034ec:	mov	w0, #0x3                   	// #3
  4034f0:	stur	w0, [x20, #-180]
  4034f4:	b	402c64 <__fxstatat@plt+0x214>
  4034f8:	ldr	x0, [sp, #112]
  4034fc:	strb	wzr, [x0, #401]
  403500:	b	402c64 <__fxstatat@plt+0x214>
  403504:	mov	w0, #0x3                   	// #3
  403508:	str	w0, [x19, #3764]
  40350c:	b	402c64 <__fxstatat@plt+0x214>
  403510:	mov	w0, #0x1                   	// #1
  403514:	strb	w0, [x19, #3920]
  403518:	b	402c64 <__fxstatat@plt+0x214>
  40351c:	mov	w0, #0x2                   	// #2
  403520:	str	w0, [x19, #3940]
  403524:	b	402c64 <__fxstatat@plt+0x214>
  403528:	mov	x0, #0x10                  	// #16
  40352c:	bl	411e78 <__fxstatat@plt+0xf428>
  403530:	mov	x1, x0
  403534:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403538:	ldr	x3, [x20, #64]
  40353c:	add	x2, x2, #0x550
  403540:	stp	x2, x3, [x1]
  403544:	mov	x0, #0x10                  	// #16
  403548:	str	x1, [x20, #64]
  40354c:	bl	411e78 <__fxstatat@plt+0xf428>
  403550:	ldr	x2, [x20, #64]
  403554:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403558:	add	x1, x1, #0x558
  40355c:	stp	x1, x2, [x0]
  403560:	str	x0, [x20, #64]
  403564:	b	402c64 <__fxstatat@plt+0x214>
  403568:	mov	w0, #0x1                   	// #1
  40356c:	str	w0, [x20, #56]
  403570:	b	402c64 <__fxstatat@plt+0x214>
  403574:	ldr	w0, [x19, #3940]
  403578:	cbz	w0, 402c64 <__fxstatat@plt+0x214>
  40357c:	mov	w0, #0x1                   	// #1
  403580:	str	w0, [x19, #3940]
  403584:	b	402c64 <__fxstatat@plt+0x214>
  403588:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40358c:	ldr	w1, [x0, #1300]
  403590:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403594:	cmp	w1, #0x1
  403598:	ldr	x0, [x0, #1456]
  40359c:	b.eq	403c3c <__fxstatat@plt+0x11ec>  // b.none
  4035a0:	cmp	w1, #0x2
  4035a4:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4035a8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4035ac:	add	x2, x2, #0x518
  4035b0:	add	x1, x1, #0x510
  4035b4:	csel	x1, x1, x2, eq  // eq = none
  4035b8:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4035bc:	adrp	x5, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4035c0:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4035c4:	add	x5, x5, #0x5d8
  4035c8:	ldr	x3, [x2, #1304]
  4035cc:	add	x4, x4, #0x5e8
  4035d0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4035d4:	add	x2, x2, #0x328
  4035d8:	mov	x6, #0x0                   	// #0
  4035dc:	bl	411d30 <__fxstatat@plt+0xf2e0>
  4035e0:	mov	w0, #0x0                   	// #0
  4035e4:	bl	402460 <exit@plt>
  4035e8:	and	x0, x0, #0xffff
  4035ec:	str	x0, [x19, #8]
  4035f0:	b	402bf4 <__fxstatat@plt+0x1a4>
  4035f4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4035f8:	add	x1, x1, #0x428
  4035fc:	mov	w2, #0x5                   	// #5
  403600:	mov	x0, #0x0                   	// #0
  403604:	bl	402970 <dcgettext@plt>
  403608:	mov	x24, x0
  40360c:	mov	x0, x21
  403610:	bl	411778 <__fxstatat@plt+0xed28>
  403614:	mov	x2, x24
  403618:	mov	x3, x0
  40361c:	mov	w1, #0x0                   	// #0
  403620:	mov	w0, #0x0                   	// #0
  403624:	bl	402490 <error@plt>
  403628:	b	402bb0 <__fxstatat@plt+0x160>
  40362c:	ldr	x0, [x19, #8]
  403630:	cmp	x0, #0x0
  403634:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  403638:	b.ne	402d18 <__fxstatat@plt+0x2c8>  // b.any
  40363c:	and	w0, w24, #0xfffffffd
  403640:	cmp	w0, #0x1
  403644:	ccmp	w24, #0x6, #0x4, ne  // ne = any
  403648:	cset	w1, eq  // eq = none
  40364c:	b	402d1c <__fxstatat@plt+0x2cc>
  403650:	bl	4045b0 <__fxstatat@plt+0x1b60>
  403654:	tst	w0, #0xff
  403658:	b.ne	402bd4 <__fxstatat@plt+0x184>  // b.any
  40365c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403660:	add	x1, x1, #0x478
  403664:	mov	w2, #0x5                   	// #5
  403668:	mov	x0, #0x0                   	// #0
  40366c:	bl	402970 <dcgettext@plt>
  403670:	mov	x24, x0
  403674:	mov	x0, x21
  403678:	bl	411778 <__fxstatat@plt+0xed28>
  40367c:	mov	x2, x24
  403680:	mov	x3, x0
  403684:	mov	w1, #0x0                   	// #0
  403688:	mov	w0, #0x0                   	// #0
  40368c:	bl	402490 <error@plt>
  403690:	b	402bd4 <__fxstatat@plt+0x184>
  403694:	mov	w0, #0x1                   	// #1
  403698:	bl	402920 <isatty@plt>
  40369c:	cbz	w0, 403254 <__fxstatat@plt+0x804>
  4036a0:	mov	w0, #0x1                   	// #1
  4036a4:	str	xzr, [x19, #3736]
  4036a8:	strb	w0, [x19, #3904]
  4036ac:	b	402c64 <__fxstatat@plt+0x214>
  4036b0:	mov	w0, #0x1                   	// #1
  4036b4:	sturb	w0, [x20, #-184]
  4036b8:	b	402c64 <__fxstatat@plt+0x214>
  4036bc:	ldurb	w0, [x20, #-184]
  4036c0:	cbnz	w0, 402d94 <__fxstatat@plt+0x344>
  4036c4:	cbz	x28, 403ea8 <__fxstatat@plt+0x1458>
  4036c8:	add	x24, x21, #0xa28
  4036cc:	b	4036d4 <__fxstatat@plt+0xc84>
  4036d0:	add	x28, x28, #0x6
  4036d4:	mov	x1, x24
  4036d8:	mov	x0, x28
  4036dc:	mov	x2, #0x6                   	// #6
  4036e0:	bl	402640 <strncmp@plt>
  4036e4:	cbnz	w0, 403c94 <__fxstatat@plt+0x1244>
  4036e8:	mov	w0, #0x2                   	// #2
  4036ec:	bl	40bbd8 <__fxstatat@plt+0x9188>
  4036f0:	tst	w0, #0xff
  4036f4:	b.ne	4036d0 <__fxstatat@plt+0xc80>  // b.any
  4036f8:	b	402db8 <__fxstatat@plt+0x368>
  4036fc:	mov	w1, #0x7                   	// #7
  403700:	mov	x0, #0x0                   	// #0
  403704:	str	w24, [x19, #3940]
  403708:	bl	411138 <__fxstatat@plt+0xe6e8>
  40370c:	b	402b38 <__fxstatat@plt+0xe8>
  403710:	ldurb	w0, [x20, #-144]
  403714:	cbnz	w0, 403894 <__fxstatat@plt+0xe44>
  403718:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40371c:	mov	w2, #0x1                   	// #1
  403720:	add	x0, x0, #0x768
  403724:	mov	x1, #0x0                   	// #0
  403728:	bl	404868 <__fxstatat@plt+0x1e18>
  40372c:	ldr	x0, [x19, #3368]
  403730:	cbnz	x0, 403ab4 <__fxstatat@plt+0x1064>
  403734:	ldr	x22, [x19, #3096]
  403738:	cbz	x22, 402f94 <__fxstatat@plt+0x544>
  40373c:	ldr	x0, [x22, #24]
  403740:	cbnz	x0, 402ef0 <__fxstatat@plt+0x4a0>
  403744:	sturb	wzr, [x20, #-47]
  403748:	b	402ef0 <__fxstatat@plt+0x4a0>
  40374c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403750:	add	x1, x1, #0x4c0
  403754:	mov	w2, #0x5                   	// #5
  403758:	mov	x0, #0x0                   	// #0
  40375c:	bl	402970 <dcgettext@plt>
  403760:	mov	x24, x0
  403764:	mov	x0, x21
  403768:	bl	411778 <__fxstatat@plt+0xed28>
  40376c:	mov	x2, x24
  403770:	mov	x3, x0
  403774:	mov	w1, #0x0                   	// #0
  403778:	mov	w0, #0x0                   	// #0
  40377c:	bl	402490 <error@plt>
  403780:	b	402c30 <__fxstatat@plt+0x1e0>
  403784:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403788:	add	x0, x0, #0x600
  40378c:	bl	4029f0 <getenv@plt>
  403790:	mov	x24, x0
  403794:	add	x2, x19, #0xf78
  403798:	add	x1, x19, #0xf80
  40379c:	bl	40d4c0 <__fxstatat@plt+0xaa70>
  4037a0:	cbz	x24, 404010 <__fxstatat@plt+0x15c0>
  4037a4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4037a8:	mov	x2, x0
  4037ac:	ldr	w0, [x19, #3968]
  4037b0:	ldr	x1, [x19, #3960]
  4037b4:	str	x1, [x2, #1280]
  4037b8:	str	w0, [x19, #4016]
  4037bc:	cbz	w27, 402ce0 <__fxstatat@plt+0x290>
  4037c0:	mov	x0, #0x400                 	// #1024
  4037c4:	str	x0, [x19, #3960]
  4037c8:	str	wzr, [x19, #3968]
  4037cc:	b	402ce0 <__fxstatat@plt+0x290>
  4037d0:	ldrb	w0, [x19, #3972]
  4037d4:	cbnz	w0, 402e64 <__fxstatat@plt+0x414>
  4037d8:	ldrb	w0, [x19, #3948]
  4037dc:	cbnz	w0, 402e64 <__fxstatat@plt+0x414>
  4037e0:	ldurb	w0, [x20, #-48]
  4037e4:	sturb	wzr, [x20, #-183]
  4037e8:	cbnz	w0, 4037fc <__fxstatat@plt+0xdac>
  4037ec:	ldrb	w0, [x19, #3904]
  4037f0:	cbnz	w0, 4037fc <__fxstatat@plt+0xdac>
  4037f4:	ldr	w0, [x19, #3764]
  4037f8:	cbz	w0, 403ed4 <__fxstatat@plt+0x1484>
  4037fc:	mov	w0, #0x1                   	// #1
  403800:	b	402e70 <__fxstatat@plt+0x420>
  403804:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403808:	add	x1, x0, #0x368
  40380c:	ldr	x0, [x0, #872]
  403810:	cmp	x0, #0x2
  403814:	b.ne	40382c <__fxstatat@plt+0xddc>  // b.any
  403818:	ldr	x2, [x1, #8]
  40381c:	mov	w0, #0x5b1b                	// #23323
  403820:	ldrh	w2, [x2]
  403824:	cmp	w2, w0
  403828:	b.eq	403edc <__fxstatat@plt+0x148c>  // b.none
  40382c:	bl	405a58 <__fxstatat@plt+0x3008>
  403830:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403834:	add	x22, x21, #0x1d0
  403838:	add	x25, x21, #0x200
  40383c:	add	x24, x19, #0xec0
  403840:	ldr	x0, [x0, #1456]
  403844:	bl	4028b0 <fflush_unlocked@plt>
  403848:	b	403858 <__fxstatat@plt+0xe08>
  40384c:	add	x22, x22, #0x4
  403850:	cmp	x22, x25
  403854:	b.eq	403c64 <__fxstatat@plt+0x1214>  // b.none
  403858:	ldr	w23, [x22]
  40385c:	mov	x0, x24
  403860:	mov	w1, w23
  403864:	bl	4027f0 <sigismember@plt>
  403868:	cbz	w0, 40384c <__fxstatat@plt+0xdfc>
  40386c:	mov	w0, w23
  403870:	mov	x1, #0x0                   	// #0
  403874:	bl	4025b0 <signal@plt>
  403878:	b	40384c <__fxstatat@plt+0xdfc>
  40387c:	mov	w1, #0x3                   	// #3
  403880:	mov	x0, #0x0                   	// #0
  403884:	str	w21, [x19, #3940]
  403888:	bl	411138 <__fxstatat@plt+0xe6e8>
  40388c:	strb	w24, [x19, #3905]
  403890:	b	402b38 <__fxstatat@plt+0xe8>
  403894:	ldr	x3, [sp, #96]
  403898:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40389c:	mov	w2, #0x1                   	// #1
  4038a0:	mov	w1, #0x3                   	// #3
  4038a4:	add	x0, x0, #0x768
  4038a8:	bl	407f40 <__fxstatat@plt+0x54f0>
  4038ac:	b	40372c <__fxstatat@plt+0xcdc>
  4038b0:	ldurb	w0, [x20, #-144]
  4038b4:	cbnz	w0, 403cf0 <__fxstatat@plt+0x12a0>
  4038b8:	ldr	w0, [x19, #3764]
  4038bc:	cmp	w0, #0x3
  4038c0:	b.eq	403cf0 <__fxstatat@plt+0x12a0>  // b.none
  4038c4:	ldr	w2, [x19, #3940]
  4038c8:	mov	w0, #0x2                   	// #2
  4038cc:	mov	w1, #0x4                   	// #4
  4038d0:	cmp	w2, #0x0
  4038d4:	csel	w0, w0, w1, eq  // eq = none
  4038d8:	stur	w0, [x20, #-180]
  4038dc:	b	402de4 <__fxstatat@plt+0x394>
  4038e0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4038e4:	add	x0, x0, #0x710
  4038e8:	bl	4029f0 <getenv@plt>
  4038ec:	str	x0, [sp, #136]
  4038f0:	cbz	x0, 403d0c <__fxstatat@plt+0x12bc>
  4038f4:	ldrb	w1, [x0]
  4038f8:	cbz	w1, 403d0c <__fxstatat@plt+0x12bc>
  4038fc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403900:	add	x1, x1, #0x860
  403904:	adrp	x27, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403908:	add	x27, x27, #0x3f8
  40390c:	ldrh	w2, [x1]
  403910:	ldrb	w1, [x1, #2]
  403914:	strh	w2, [sp, #128]
  403918:	strb	w1, [sp, #130]
  40391c:	bl	4120a0 <__fxstatat@plt+0xf650>
  403920:	str	x0, [x20, #80]
  403924:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403928:	add	x1, x1, #0x368
  40392c:	str	x1, [sp, #104]
  403930:	str	x0, [sp, #144]
  403934:	ldr	x0, [sp, #136]
  403938:	ldrb	w1, [x0]
  40393c:	cmp	w1, #0x2a
  403940:	b.eq	403f28 <__fxstatat@plt+0x14d8>  // b.none
  403944:	cmp	w1, #0x3a
  403948:	b.eq	403f1c <__fxstatat@plt+0x14cc>  // b.none
  40394c:	cbz	w1, 403a58 <__fxstatat@plt+0x1008>
  403950:	add	x1, x0, #0x1
  403954:	str	x1, [sp, #136]
  403958:	ldrb	w1, [x0]
  40395c:	strb	w1, [sp, #128]
  403960:	ldrb	w1, [x0, #1]
  403964:	cbz	w1, 403a10 <__fxstatat@plt+0xfc0>
  403968:	add	x1, x0, #0x2
  40396c:	str	x1, [sp, #136]
  403970:	add	x1, x0, #0x3
  403974:	ldrb	w2, [x0, #1]
  403978:	strb	w2, [sp, #129]
  40397c:	str	x1, [sp, #136]
  403980:	ldrb	w0, [x0, #2]
  403984:	cmp	w0, #0x3d
  403988:	b.ne	403a10 <__fxstatat@plt+0xfc0>  // b.any
  40398c:	mov	x1, x27
  403990:	add	x26, x21, #0xa40
  403994:	mov	x28, #0x0                   	// #0
  403998:	b	4039a8 <__fxstatat@plt+0xf58>
  40399c:	add	x28, x28, #0x1
  4039a0:	ldr	x1, [x26, x28, lsl #3]
  4039a4:	cbz	x1, 4039dc <__fxstatat@plt+0xf8c>
  4039a8:	add	x0, sp, #0x80
  4039ac:	bl	402800 <strcmp@plt>
  4039b0:	cbnz	w0, 40399c <__fxstatat@plt+0xf4c>
  4039b4:	ldr	x0, [sp, #104]
  4039b8:	add	x1, sp, #0x88
  4039bc:	ldr	x4, [sp, #144]
  4039c0:	mov	w2, #0x0                   	// #0
  4039c4:	add	x3, x0, w28, sxtw #4
  4039c8:	add	x0, sp, #0x90
  4039cc:	str	x4, [x3, #8]
  4039d0:	bl	404288 <__fxstatat@plt+0x1838>
  4039d4:	tst	w0, #0xff
  4039d8:	b.ne	403934 <__fxstatat@plt+0xee4>  // b.any
  4039dc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4039e0:	add	x1, x1, #0x740
  4039e4:	mov	w2, #0x5                   	// #5
  4039e8:	mov	x0, #0x0                   	// #0
  4039ec:	bl	402970 <dcgettext@plt>
  4039f0:	mov	x25, x0
  4039f4:	add	x0, sp, #0x80
  4039f8:	bl	411778 <__fxstatat@plt+0xed28>
  4039fc:	mov	x2, x25
  403a00:	mov	x3, x0
  403a04:	mov	w1, #0x0                   	// #0
  403a08:	mov	w0, #0x0                   	// #0
  403a0c:	bl	402490 <error@plt>
  403a10:	mov	w2, #0x5                   	// #5
  403a14:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403a18:	mov	x0, #0x0                   	// #0
  403a1c:	add	x1, x1, #0x828
  403a20:	bl	402970 <dcgettext@plt>
  403a24:	mov	x2, x0
  403a28:	mov	w1, #0x0                   	// #0
  403a2c:	mov	w0, #0x0                   	// #0
  403a30:	bl	402490 <error@plt>
  403a34:	ldr	x0, [x20, #80]
  403a38:	bl	402840 <free@plt>
  403a3c:	ldr	x0, [x19, #3928]
  403a40:	cbz	x0, 403a54 <__fxstatat@plt+0x1004>
  403a44:	ldr	x25, [x0, #32]
  403a48:	bl	402840 <free@plt>
  403a4c:	mov	x0, x25
  403a50:	b	403a40 <__fxstatat@plt+0xff0>
  403a54:	strb	wzr, [x19, #3904]
  403a58:	ldr	x0, [sp, #104]
  403a5c:	ldr	x2, [x0, #112]
  403a60:	cmp	x2, #0x6
  403a64:	b.eq	403efc <__fxstatat@plt+0x14ac>  // b.none
  403a68:	ldrb	w0, [x19, #3724]
  403a6c:	cbnz	w0, 402dd0 <__fxstatat@plt+0x380>
  403a70:	ldrb	w0, [x19, #3904]
  403a74:	cbz	w0, 402dd8 <__fxstatat@plt+0x388>
  403a78:	mov	w0, #0xd                   	// #13
  403a7c:	bl	404540 <__fxstatat@plt+0x1af0>
  403a80:	tst	w0, #0xff
  403a84:	b.ne	402dd0 <__fxstatat@plt+0x380>  // b.any
  403a88:	mov	w0, #0xe                   	// #14
  403a8c:	bl	404540 <__fxstatat@plt+0x1af0>
  403a90:	tst	w0, #0xff
  403a94:	b.ne	403ec8 <__fxstatat@plt+0x1478>  // b.any
  403a98:	mov	w0, #0xc                   	// #12
  403a9c:	bl	404540 <__fxstatat@plt+0x1af0>
  403aa0:	tst	w0, #0xff
  403aa4:	b.eq	402dd8 <__fxstatat@plt+0x388>  // b.none
  403aa8:	ldr	w0, [x19, #3940]
  403aac:	cbz	w0, 402dd0 <__fxstatat@plt+0x380>
  403ab0:	b	402dd8 <__fxstatat@plt+0x388>
  403ab4:	bl	404a70 <__fxstatat@plt+0x2020>
  403ab8:	ldurb	w0, [x20, #-144]
  403abc:	cbz	w0, 403e0c <__fxstatat@plt+0x13bc>
  403ac0:	ldr	x0, [x19, #3368]
  403ac4:	cbz	x0, 402ee0 <__fxstatat@plt+0x490>
  403ac8:	bl	4075f8 <__fxstatat@plt+0x4ba8>
  403acc:	ldr	x0, [x19, #3096]
  403ad0:	cbz	x0, 402f94 <__fxstatat@plt+0x544>
  403ad4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403ad8:	ldr	x0, [x0, #1456]
  403adc:	ldp	x1, x2, [x0, #40]
  403ae0:	cmp	x2, x1
  403ae4:	b.ls	40406c <__fxstatat@plt+0x161c>  // b.plast
  403ae8:	add	x2, x1, #0x1
  403aec:	str	x2, [x0, #40]
  403af0:	mov	w0, #0xa                   	// #10
  403af4:	strb	w0, [x1]
  403af8:	ldr	x0, [x19, #3744]
  403afc:	add	x0, x0, #0x1
  403b00:	str	x0, [x19, #3744]
  403b04:	b	402ee8 <__fxstatat@plt+0x498>
  403b08:	add	x4, x19, #0xc28
  403b0c:	mov	x0, #0x0                   	// #0
  403b10:	b	403b60 <__fxstatat@plt+0x1110>
  403b14:	cmp	w0, #0x40
  403b18:	mov	w1, #0x1                   	// #1
  403b1c:	b.gt	403b48 <__fxstatat@plt+0x10f8>
  403b20:	sub	w2, w0, #0x30
  403b24:	cmp	w2, #0x9
  403b28:	b.ls	403b48 <__fxstatat@plt+0x10f8>  // b.plast
  403b2c:	sub	w3, w3, #0x2d
  403b30:	cmp	w0, #0x7e
  403b34:	ccmp	w3, #0x1, #0x0, ne  // ne = any
  403b38:	mov	w1, #0x1                   	// #1
  403b3c:	b.ls	403b48 <__fxstatat@plt+0x10f8>  // b.plast
  403b40:	cmp	w0, #0x5f
  403b44:	cset	w1, eq  // eq = none
  403b48:	ldrb	w2, [x0, x4]
  403b4c:	orr	w1, w1, w2
  403b50:	strb	w1, [x0, x4]
  403b54:	add	x0, x0, #0x1
  403b58:	cmp	x0, #0x100
  403b5c:	b.eq	403b94 <__fxstatat@plt+0x1144>  // b.none
  403b60:	cmp	x0, #0x5a
  403b64:	mov	w3, w0
  403b68:	b.ls	403b14 <__fxstatat@plt+0x10c4>  // b.plast
  403b6c:	sub	w2, w0, #0x61
  403b70:	mov	w1, #0x1                   	// #1
  403b74:	cmp	w2, #0x19
  403b78:	b.hi	403b2c <__fxstatat@plt+0x10dc>  // b.pmore
  403b7c:	ldrb	w2, [x0, x4]
  403b80:	orr	w1, w1, w2
  403b84:	strb	w1, [x0, x4]
  403b88:	add	x0, x0, #0x1
  403b8c:	cmp	x0, #0x100
  403b90:	b.ne	403b60 <__fxstatat@plt+0x1110>  // b.any
  403b94:	bl	4122a8 <__fxstatat@plt+0xf858>
  403b98:	cmp	x0, #0x0
  403b9c:	ldr	x1, [sp, #96]
  403ba0:	csel	x0, x1, x0, eq  // eq = none
  403ba4:	str	x0, [x19, #3912]
  403ba8:	b	402e88 <__fxstatat@plt+0x438>
  403bac:	adrp	x26, 402000 <mbrtowc@plt-0x3b0>
  403bb0:	adrp	x25, 402000 <mbrtowc@plt-0x3b0>
  403bb4:	add	x26, x26, #0x840
  403bb8:	add	x25, x25, #0x5f0
  403bbc:	mov	x4, x26
  403bc0:	mov	x3, x25
  403bc4:	add	x0, x19, #0xfd0
  403bc8:	mov	x2, #0x0                   	// #0
  403bcc:	mov	x1, #0x0                   	// #0
  403bd0:	bl	413110 <_obstack_begin@@Base>
  403bd4:	mov	x4, x26
  403bd8:	mov	x3, x25
  403bdc:	sub	x0, x20, #0x28
  403be0:	mov	x2, #0x0                   	// #0
  403be4:	mov	x1, #0x0                   	// #0
  403be8:	bl	413110 <_obstack_begin@@Base>
  403bec:	b	402e80 <__fxstatat@plt+0x430>
  403bf0:	add	x1, x19, #0xfd0
  403bf4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403bf8:	add	x0, x0, #0x7b0
  403bfc:	bl	404f00 <__fxstatat@plt+0x24b0>
  403c00:	sub	x1, x20, #0x28
  403c04:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403c08:	add	x0, x0, #0x7c0
  403c0c:	bl	404f00 <__fxstatat@plt+0x24b0>
  403c10:	ldr	x0, [x19, #3104]
  403c14:	bl	411118 <__fxstatat@plt+0xe6c8>
  403c18:	mov	w3, w0
  403c1c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  403c20:	add	x2, x2, #0x208
  403c24:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403c28:	mov	w0, #0x1                   	// #1
  403c2c:	add	x1, x1, #0x7d0
  403c30:	ldr	x2, [x2, w3, uxtw #3]
  403c34:	bl	402670 <__printf_chk@plt>
  403c38:	b	402fac <__fxstatat@plt+0x55c>
  403c3c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  403c40:	add	x1, x1, #0x508
  403c44:	b	4035b8 <__fxstatat@plt+0xb68>
  403c48:	mov	w0, #0x1                   	// #1
  403c4c:	bl	402920 <isatty@plt>
  403c50:	cmp	w0, #0x0
  403c54:	cset	w0, ne  // ne = any
  403c58:	add	w0, w0, #0x1
  403c5c:	str	w0, [x19, #3940]
  403c60:	b	4033b4 <__fxstatat@plt+0x964>
  403c64:	ldr	w22, [x19, #3756]
  403c68:	cbz	w22, 403c80 <__fxstatat@plt+0x1230>
  403c6c:	nop
  403c70:	mov	w0, #0x13                  	// #19
  403c74:	bl	402480 <raise@plt>
  403c78:	subs	w22, w22, #0x1
  403c7c:	b.ne	403c70 <__fxstatat@plt+0x1220>  // b.any
  403c80:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403c84:	ldr	w0, [x0, #1480]
  403c88:	cbz	w0, 402fa4 <__fxstatat@plt+0x554>
  403c8c:	bl	402480 <raise@plt>
  403c90:	b	402fa4 <__fxstatat@plt+0x554>
  403c94:	ldrb	w0, [x28]
  403c98:	cmp	w0, #0x2b
  403c9c:	b.eq	403fb4 <__fxstatat@plt+0x1564>  // b.none
  403ca0:	add	x24, x21, #0x2e0
  403ca4:	add	x2, x21, #0xa30
  403ca8:	mov	x1, x24
  403cac:	mov	x0, x28
  403cb0:	mov	x3, #0x4                   	// #4
  403cb4:	bl	40a6d0 <__fxstatat@plt+0x7c80>
  403cb8:	tbnz	x0, #63, 403e1c <__fxstatat@plt+0x13cc>
  403cbc:	cmp	x0, #0x2
  403cc0:	b.eq	404040 <__fxstatat@plt+0x15f0>  // b.none
  403cc4:	b.gt	403db8 <__fxstatat@plt+0x1368>
  403cc8:	cbz	x0, 404024 <__fxstatat@plt+0x15d4>
  403ccc:	cmp	x0, #0x1
  403cd0:	b.ne	403ce8 <__fxstatat@plt+0x1298>  // b.any
  403cd4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403cd8:	add	x1, x1, #0x368
  403cdc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403ce0:	add	x0, x0, #0x6e0
  403ce4:	stp	x0, x0, [x1, #384]
  403ce8:	bl	404618 <__fxstatat@plt+0x1bc8>
  403cec:	b	402db8 <__fxstatat@plt+0x368>
  403cf0:	mov	w0, #0x2                   	// #2
  403cf4:	stur	w0, [x20, #-180]
  403cf8:	b	402de4 <__fxstatat@plt+0x394>
  403cfc:	mov	w2, #0x1                   	// #1
  403d00:	mov	w1, #0x20                  	// #32
  403d04:	bl	411158 <__fxstatat@plt+0xe708>
  403d08:	b	402d34 <__fxstatat@plt+0x2e4>
  403d0c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403d10:	add	x0, x0, #0x720
  403d14:	bl	4029f0 <getenv@plt>
  403d18:	cbz	x0, 403d24 <__fxstatat@plt+0x12d4>
  403d1c:	ldrb	w0, [x0]
  403d20:	cbnz	w0, 403a68 <__fxstatat@plt+0x1018>
  403d24:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403d28:	add	x0, x0, #0x730
  403d2c:	bl	4029f0 <getenv@plt>
  403d30:	str	x0, [sp, #104]
  403d34:	cbz	x0, 403fac <__fxstatat@plt+0x155c>
  403d38:	ldr	x0, [sp, #104]
  403d3c:	ldrb	w0, [x0]
  403d40:	cbz	w0, 403fac <__fxstatat@plt+0x155c>
  403d44:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x4ce0>
  403d48:	add	x25, x25, #0xa28
  403d4c:	adrp	x26, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403d50:	mov	x28, x25
  403d54:	add	x26, x26, #0x738
  403d58:	mov	x27, #0x10c3                	// #4291
  403d5c:	b	403d7c <__fxstatat@plt+0x132c>
  403d60:	mov	x0, x28
  403d64:	bl	402430 <strlen@plt>
  403d68:	add	x0, x0, #0x1
  403d6c:	add	x28, x28, x0
  403d70:	sub	x0, x28, x25
  403d74:	cmp	x0, x27
  403d78:	b.hi	403fac <__fxstatat@plt+0x155c>  // b.pmore
  403d7c:	mov	x1, x26
  403d80:	mov	x0, x28
  403d84:	mov	x2, #0x5                   	// #5
  403d88:	bl	402640 <strncmp@plt>
  403d8c:	cbnz	w0, 403d60 <__fxstatat@plt+0x1310>
  403d90:	ldr	x1, [sp, #104]
  403d94:	add	x0, x28, #0x5
  403d98:	mov	w2, #0x0                   	// #0
  403d9c:	bl	4028a0 <fnmatch@plt>
  403da0:	cbnz	w0, 403d60 <__fxstatat@plt+0x1310>
  403da4:	b	403a68 <__fxstatat@plt+0x1018>
  403da8:	cbz	w1, 4036c4 <__fxstatat@plt+0xc74>
  403dac:	mov	w0, #0x4                   	// #4
  403db0:	str	w0, [x19, #3392]
  403db4:	b	402db8 <__fxstatat@plt+0x368>
  403db8:	cmp	x0, #0x3
  403dbc:	b.ne	403ce8 <__fxstatat@plt+0x1298>  // b.any
  403dc0:	mov	w0, #0x2                   	// #2
  403dc4:	bl	40bbd8 <__fxstatat@plt+0x9188>
  403dc8:	tst	w0, #0xff
  403dcc:	b.eq	403ce8 <__fxstatat@plt+0x1298>  // b.none
  403dd0:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403dd4:	add	x24, x1, #0x368
  403dd8:	mov	w2, #0x2                   	// #2
  403ddc:	mov	x0, #0x0                   	// #0
  403de0:	ldr	x1, [x24, #384]
  403de4:	bl	402970 <dcgettext@plt>
  403de8:	mov	x3, x0
  403dec:	ldr	x1, [x24, #392]
  403df0:	mov	w2, #0x2                   	// #2
  403df4:	mov	x0, #0x0                   	// #0
  403df8:	str	x3, [x24, #384]
  403dfc:	bl	402970 <dcgettext@plt>
  403e00:	str	x0, [x24, #392]
  403e04:	bl	404618 <__fxstatat@plt+0x1bc8>
  403e08:	b	402db8 <__fxstatat@plt+0x368>
  403e0c:	mov	w1, #0x1                   	// #1
  403e10:	mov	x0, #0x0                   	// #0
  403e14:	bl	404c70 <__fxstatat@plt+0x2220>
  403e18:	b	403ac0 <__fxstatat@plt+0x1070>
  403e1c:	mov	x2, x0
  403e20:	mov	x1, x28
  403e24:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403e28:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403e2c:	add	x0, x0, #0x658
  403e30:	bl	40a7f8 <__fxstatat@plt+0x7da8>
  403e34:	mov	w2, #0x5                   	// #5
  403e38:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403e3c:	mov	x0, #0x0                   	// #0
  403e40:	add	x1, x1, #0x668
  403e44:	bl	402970 <dcgettext@plt>
  403e48:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403e4c:	ldr	x1, [x19, #1432]
  403e50:	add	x20, x20, #0x680
  403e54:	add	x19, x19, #0x598
  403e58:	bl	402980 <fputs_unlocked@plt>
  403e5c:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403e60:	add	x3, x3, #0x3e0
  403e64:	ldr	x0, [x19]
  403e68:	mov	x2, x20
  403e6c:	mov	w1, #0x1                   	// #1
  403e70:	bl	4027e0 <__fprintf_chk@plt>
  403e74:	ldr	x3, [x24, #8]!
  403e78:	cbnz	x3, 403e64 <__fxstatat@plt+0x1414>
  403e7c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403e80:	mov	w2, #0x5                   	// #5
  403e84:	add	x1, x1, #0x690
  403e88:	mov	x0, #0x0                   	// #0
  403e8c:	bl	402970 <dcgettext@plt>
  403e90:	ldr	x1, [x19]
  403e94:	bl	402980 <fputs_unlocked@plt>
  403e98:	mov	w0, #0x2                   	// #2
  403e9c:	bl	409f70 <__fxstatat@plt+0x7520>
  403ea0:	mov	w0, #0x0                   	// #0
  403ea4:	bl	409f70 <__fxstatat@plt+0x7520>
  403ea8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403eac:	add	x0, x0, #0x628
  403eb0:	bl	4029f0 <getenv@plt>
  403eb4:	mov	x28, x0
  403eb8:	cbnz	x0, 4036c8 <__fxstatat@plt+0xc78>
  403ebc:	adrp	x28, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403ec0:	add	x28, x28, #0x3f0
  403ec4:	b	403ca0 <__fxstatat@plt+0x1250>
  403ec8:	ldrb	w0, [x19, #3921]
  403ecc:	cbnz	w0, 402dd0 <__fxstatat@plt+0x380>
  403ed0:	b	403a98 <__fxstatat@plt+0x1048>
  403ed4:	ldrb	w0, [x19, #3724]
  403ed8:	b	402e70 <__fxstatat@plt+0x420>
  403edc:	ldr	x0, [x1, #16]
  403ee0:	cmp	x0, #0x1
  403ee4:	b.ne	40382c <__fxstatat@plt+0xddc>  // b.any
  403ee8:	ldr	x0, [x1, #24]
  403eec:	ldrb	w0, [x0]
  403ef0:	cmp	w0, #0x6d
  403ef4:	b.ne	40382c <__fxstatat@plt+0xddc>  // b.any
  403ef8:	b	403830 <__fxstatat@plt+0xde0>
  403efc:	ldr	x0, [x0, #120]
  403f00:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  403f04:	add	x1, x1, #0x758
  403f08:	bl	402640 <strncmp@plt>
  403f0c:	cbnz	w0, 403a68 <__fxstatat@plt+0x1018>
  403f10:	mov	w0, #0x1                   	// #1
  403f14:	strb	w0, [x19, #3921]
  403f18:	b	403a68 <__fxstatat@plt+0x1018>
  403f1c:	add	x0, x0, #0x1
  403f20:	str	x0, [sp, #136]
  403f24:	b	403934 <__fxstatat@plt+0xee4>
  403f28:	mov	x0, #0x28                  	// #40
  403f2c:	bl	411e78 <__fxstatat@plt+0xf428>
  403f30:	mov	x18, x0
  403f34:	mov	x3, x0
  403f38:	ldp	x0, x5, [sp, #136]
  403f3c:	add	x1, sp, #0x88
  403f40:	ldr	x4, [x19, #3928]
  403f44:	mov	w2, #0x1                   	// #1
  403f48:	str	x5, [x18, #8]
  403f4c:	str	x4, [x18, #32]
  403f50:	add	x0, x0, #0x1
  403f54:	str	x0, [sp, #136]
  403f58:	add	x0, sp, #0x90
  403f5c:	str	x18, [x19, #3928]
  403f60:	bl	404288 <__fxstatat@plt+0x1838>
  403f64:	tst	w0, #0xff
  403f68:	b.eq	403a10 <__fxstatat@plt+0xfc0>  // b.none
  403f6c:	ldr	x0, [sp, #136]
  403f70:	add	x1, x0, #0x1
  403f74:	str	x1, [sp, #136]
  403f78:	ldrb	w0, [x0]
  403f7c:	cmp	w0, #0x3d
  403f80:	b.ne	403a10 <__fxstatat@plt+0xfc0>  // b.any
  403f84:	ldr	x4, [sp, #144]
  403f88:	add	x3, x18, #0x10
  403f8c:	add	x1, sp, #0x88
  403f90:	add	x0, sp, #0x90
  403f94:	mov	w2, #0x0                   	// #0
  403f98:	str	x4, [x18, #24]
  403f9c:	bl	404288 <__fxstatat@plt+0x1838>
  403fa0:	tst	w0, #0xff
  403fa4:	b.ne	403934 <__fxstatat@plt+0xee4>  // b.any
  403fa8:	b	403a10 <__fxstatat@plt+0xfc0>
  403fac:	strb	wzr, [x19, #3904]
  403fb0:	b	403a68 <__fxstatat@plt+0x1018>
  403fb4:	add	x28, x28, #0x1
  403fb8:	mov	w1, #0xa                   	// #10
  403fbc:	mov	x0, x28
  403fc0:	bl	402880 <strchr@plt>
  403fc4:	mov	x24, x0
  403fc8:	cbz	x0, 404064 <__fxstatat@plt+0x1614>
  403fcc:	add	x25, x0, #0x1
  403fd0:	mov	w1, #0xa                   	// #10
  403fd4:	mov	x0, x25
  403fd8:	bl	402880 <strchr@plt>
  403fdc:	cbnz	x0, 404078 <__fxstatat@plt+0x1628>
  403fe0:	strb	wzr, [x24]
  403fe4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  403fe8:	add	x0, x1, #0x368
  403fec:	stp	x28, x25, [x0, #384]
  403ff0:	bl	404618 <__fxstatat@plt+0x1bc8>
  403ff4:	b	402db8 <__fxstatat@plt+0x368>
  403ff8:	mov	w0, #0x1                   	// #1
  403ffc:	bl	402920 <isatty@plt>
  404000:	cmp	w0, #0x0
  404004:	cset	w0, ne  // ne = any
  404008:	sturb	w0, [x20, #-184]
  40400c:	b	402c64 <__fxstatat@plt+0x214>
  404010:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  404014:	add	x0, x0, #0x610
  404018:	bl	4029f0 <getenv@plt>
  40401c:	cbnz	x0, 4037a4 <__fxstatat@plt+0xd54>
  404020:	b	4037bc <__fxstatat@plt+0xd6c>
  404024:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404028:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40402c:	add	x1, x1, #0x368
  404030:	add	x0, x0, #0x6c8
  404034:	stp	x0, x0, [x1, #384]
  404038:	bl	404618 <__fxstatat@plt+0x1bc8>
  40403c:	b	402db8 <__fxstatat@plt+0x368>
  404040:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404044:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  404048:	add	x2, x1, #0x368
  40404c:	add	x0, x0, #0x700
  404050:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  404054:	add	x1, x1, #0x6f0
  404058:	stp	x1, x0, [x2, #384]
  40405c:	bl	404618 <__fxstatat@plt+0x1bc8>
  404060:	b	402db8 <__fxstatat@plt+0x368>
  404064:	mov	x25, x28
  404068:	b	403fe4 <__fxstatat@plt+0x1594>
  40406c:	mov	w1, #0xa                   	// #10
  404070:	bl	402780 <__overflow@plt>
  404074:	b	403af8 <__fxstatat@plt+0x10a8>
  404078:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40407c:	add	x1, x1, #0x638
  404080:	mov	w2, #0x5                   	// #5
  404084:	mov	x0, #0x0                   	// #0
  404088:	bl	402970 <dcgettext@plt>
  40408c:	mov	x19, x0
  404090:	mov	x0, x28
  404094:	bl	411778 <__fxstatat@plt+0xed28>
  404098:	mov	x2, x19
  40409c:	mov	x3, x0
  4040a0:	mov	w1, #0x0                   	// #0
  4040a4:	mov	w0, #0x2                   	// #2
  4040a8:	bl	402490 <error@plt>
  4040ac:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4040b0:	add	x2, x2, #0x5a0
  4040b4:	ldr	w1, [sp, #144]
  4040b8:	add	x3, x21, #0x308
  4040bc:	ldr	x4, [x2]
  4040c0:	mov	w2, #0x0                   	// #0
  4040c4:	bl	412900 <__fxstatat@plt+0xfeb0>
  4040c8:	bl	4120d0 <__fxstatat@plt+0xf680>
  4040cc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4040d0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4040d4:	add	x3, x21, #0xb08
  4040d8:	add	x1, x1, #0x360
  4040dc:	add	x0, x0, #0x770
  4040e0:	mov	w2, #0x403                 	// #1027
  4040e4:	bl	4029d0 <__assert_fail@plt>
  4040e8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4040ec:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4040f0:	add	x3, x21, #0xb18
  4040f4:	add	x1, x1, #0x360
  4040f8:	add	x0, x0, #0x7a8
  4040fc:	mov	w2, #0x640                 	// #1600
  404100:	bl	4029d0 <__assert_fail@plt>
  404104:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  404108:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40410c:	add	x3, x21, #0xb18
  404110:	add	x1, x1, #0x360
  404114:	add	x0, x0, #0x7f8
  404118:	mov	w2, #0x674                 	// #1652
  40411c:	bl	4029d0 <__assert_fail@plt>
  404120:	bl	402760 <abort@plt>
  404124:	mov	x29, #0x0                   	// #0
  404128:	mov	x30, #0x0                   	// #0
  40412c:	mov	x5, x0
  404130:	ldr	x1, [sp]
  404134:	add	x2, sp, #0x8
  404138:	mov	x6, sp
  40413c:	movz	x0, #0x0, lsl #48
  404140:	movk	x0, #0x0, lsl #32
  404144:	movk	x0, #0x40, lsl #16
  404148:	movk	x0, #0x2a60
  40414c:	movz	x3, #0x0, lsl #48
  404150:	movk	x3, #0x0, lsl #32
  404154:	movk	x3, #0x41, lsl #16
  404158:	movk	x3, #0x51f0
  40415c:	movz	x4, #0x0, lsl #48
  404160:	movk	x4, #0x0, lsl #32
  404164:	movk	x4, #0x41, lsl #16
  404168:	movk	x4, #0x5270
  40416c:	bl	402660 <__libc_start_main@plt>
  404170:	bl	402760 <abort@plt>
  404174:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x1ace0>
  404178:	ldr	x0, [x0, #4064]
  40417c:	cbz	x0, 404184 <__fxstatat@plt+0x1734>
  404180:	b	402740 <__gmon_start__@plt>
  404184:	ret
  404188:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40418c:	add	x0, x0, #0x590
  404190:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404194:	add	x1, x1, #0x590
  404198:	cmp	x1, x0
  40419c:	b.eq	4041b4 <__fxstatat@plt+0x1764>  // b.none
  4041a0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4041a4:	ldr	x1, [x1, #680]
  4041a8:	cbz	x1, 4041b4 <__fxstatat@plt+0x1764>
  4041ac:	mov	x16, x1
  4041b0:	br	x16
  4041b4:	ret
  4041b8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4041bc:	add	x0, x0, #0x590
  4041c0:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4041c4:	add	x1, x1, #0x590
  4041c8:	sub	x1, x1, x0
  4041cc:	lsr	x2, x1, #63
  4041d0:	add	x1, x2, x1, asr #3
  4041d4:	cmp	xzr, x1, asr #1
  4041d8:	asr	x1, x1, #1
  4041dc:	b.eq	4041f4 <__fxstatat@plt+0x17a4>  // b.none
  4041e0:	adrp	x2, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4041e4:	ldr	x2, [x2, #688]
  4041e8:	cbz	x2, 4041f4 <__fxstatat@plt+0x17a4>
  4041ec:	mov	x16, x2
  4041f0:	br	x16
  4041f4:	ret
  4041f8:	stp	x29, x30, [sp, #-32]!
  4041fc:	mov	x29, sp
  404200:	str	x19, [sp, #16]
  404204:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404208:	ldrb	w0, [x19, #1472]
  40420c:	cbnz	w0, 40421c <__fxstatat@plt+0x17cc>
  404210:	bl	404188 <__fxstatat@plt+0x1738>
  404214:	mov	w0, #0x1                   	// #1
  404218:	strb	w0, [x19, #1472]
  40421c:	ldr	x19, [sp, #16]
  404220:	ldp	x29, x30, [sp], #32
  404224:	ret
  404228:	b	4041b8 <__fxstatat@plt+0x1768>
  40422c:	nop
  404230:	ldr	x0, [x0]
  404234:	udiv	x2, x0, x1
  404238:	msub	x0, x2, x1, x0
  40423c:	ret
  404240:	ldr	x3, [x0]
  404244:	ldr	x2, [x1]
  404248:	cmp	x3, x2
  40424c:	b.eq	404258 <__fxstatat@plt+0x1808>  // b.none
  404250:	mov	w0, #0x0                   	// #0
  404254:	ret
  404258:	ldr	x2, [x0, #8]
  40425c:	ldr	x0, [x1, #8]
  404260:	cmp	x2, x0
  404264:	cset	w0, eq  // eq = none
  404268:	ret
  40426c:	nop
  404270:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404274:	ldr	w2, [x1, #1480]
  404278:	cbnz	w2, 404280 <__fxstatat@plt+0x1830>
  40427c:	str	w0, [x1, #1480]
  404280:	ret
  404284:	nop
  404288:	mov	x10, x0
  40428c:	mov	x9, #0x0                   	// #0
  404290:	ldr	x6, [x1]
  404294:	and	w0, w2, #0xff
  404298:	ldr	x7, [x10]
  40429c:	mov	w14, #0x7f                  	// #127
  4042a0:	mov	w13, #0x9                   	// #9
  4042a4:	mov	w12, #0xa                   	// #10
  4042a8:	mov	w11, #0x20                  	// #32
  4042ac:	mov	w2, #0x7f                  	// #127
  4042b0:	ldrb	w4, [x6]
  4042b4:	cmp	w4, #0x5c
  4042b8:	b.eq	4042e4 <__fxstatat@plt+0x1894>  // b.none
  4042bc:	b.hi	40431c <__fxstatat@plt+0x18cc>  // b.pmore
  4042c0:	cmp	w4, #0x3d
  4042c4:	b.eq	4044ac <__fxstatat@plt+0x1a5c>  // b.none
  4042c8:	b.ls	404354 <__fxstatat@plt+0x1904>  // b.plast
  4042cc:	add	x6, x6, #0x1
  4042d0:	strb	w4, [x7], #1
  4042d4:	add	x9, x9, #0x1
  4042d8:	ldrb	w4, [x6]
  4042dc:	cmp	w4, #0x5c
  4042e0:	b.ne	4042bc <__fxstatat@plt+0x186c>  // b.any
  4042e4:	ldrb	w4, [x6, #1]
  4042e8:	add	x6, x6, #0x2
  4042ec:	cmp	w4, #0x65
  4042f0:	b.eq	40452c <__fxstatat@plt+0x1adc>  // b.none
  4042f4:	b.hi	404374 <__fxstatat@plt+0x1924>  // b.pmore
  4042f8:	cmp	w4, #0x58
  4042fc:	b.eq	4044cc <__fxstatat@plt+0x1a7c>  // b.none
  404300:	b.ls	40444c <__fxstatat@plt+0x19fc>  // b.plast
  404304:	cmp	w4, #0x61
  404308:	b.eq	4044a4 <__fxstatat@plt+0x1a54>  // b.none
  40430c:	cmp	w4, #0x62
  404310:	b.ne	404440 <__fxstatat@plt+0x19f0>  // b.any
  404314:	mov	w4, #0x8                   	// #8
  404318:	b	404348 <__fxstatat@plt+0x18f8>
  40431c:	cmp	w4, #0x5e
  404320:	b.ne	4042cc <__fxstatat@plt+0x187c>  // b.any
  404324:	ldrb	w4, [x6, #1]
  404328:	add	x8, x6, #0x1
  40432c:	sub	w5, w4, #0x40
  404330:	and	w5, w5, #0xff
  404334:	cmp	w5, #0x3e
  404338:	b.hi	404480 <__fxstatat@plt+0x1a30>  // b.pmore
  40433c:	and	w4, w4, #0x1f
  404340:	add	x6, x6, #0x2
  404344:	nop
  404348:	add	x9, x9, #0x1
  40434c:	strb	w4, [x7], #1
  404350:	b	4042b0 <__fxstatat@plt+0x1860>
  404354:	cbz	w4, 404360 <__fxstatat@plt+0x1910>
  404358:	cmp	w4, #0x3a
  40435c:	b.ne	4042cc <__fxstatat@plt+0x187c>  // b.any
  404360:	mov	w0, #0x1                   	// #1
  404364:	str	x7, [x10]
  404368:	str	x6, [x1]
  40436c:	str	x9, [x3]
  404370:	ret
  404374:	cmp	w4, #0x72
  404378:	b.eq	4044c4 <__fxstatat@plt+0x1a74>  // b.none
  40437c:	b.ls	404420 <__fxstatat@plt+0x19d0>  // b.plast
  404380:	cmp	w4, #0x76
  404384:	b.eq	40449c <__fxstatat@plt+0x1a4c>  // b.none
  404388:	cmp	w4, #0x78
  40438c:	mov	w5, #0x0                   	// #0
  404390:	b.ne	404434 <__fxstatat@plt+0x19e4>  // b.any
  404394:	ldrb	w4, [x6]
  404398:	sub	w15, w4, #0x30
  40439c:	cmp	w4, #0x46
  4043a0:	add	w8, w4, w5, lsl #4
  4043a4:	and	w15, w15, #0xff
  4043a8:	b.hi	4043e4 <__fxstatat@plt+0x1994>  // b.pmore
  4043ac:	cmp	w4, #0x40
  4043b0:	and	w8, w8, #0xff
  4043b4:	b.hi	404408 <__fxstatat@plt+0x19b8>  // b.pmore
  4043b8:	sub	w8, w8, #0x30
  4043bc:	cmp	w15, #0x9
  4043c0:	b.hi	4043fc <__fxstatat@plt+0x19ac>  // b.pmore
  4043c4:	ldrb	w4, [x6, #1]
  4043c8:	and	w5, w8, #0xff
  4043cc:	add	x6, x6, #0x1
  4043d0:	sub	w15, w4, #0x30
  4043d4:	cmp	w4, #0x46
  4043d8:	add	w8, w4, w5, lsl #4
  4043dc:	and	w15, w15, #0xff
  4043e0:	b.ls	4043ac <__fxstatat@plt+0x195c>  // b.plast
  4043e4:	sub	w4, w4, #0x61
  4043e8:	and	w8, w8, #0xff
  4043ec:	and	w4, w4, #0xff
  4043f0:	sub	w8, w8, #0x57
  4043f4:	cmp	w4, #0x5
  4043f8:	b.ls	4043c4 <__fxstatat@plt+0x1974>  // b.plast
  4043fc:	add	x9, x9, #0x1
  404400:	strb	w5, [x7], #1
  404404:	b	4042b0 <__fxstatat@plt+0x1860>
  404408:	add	w5, w4, w5, lsl #4
  40440c:	add	x6, x6, #0x1
  404410:	and	w5, w5, #0xff
  404414:	sub	w5, w5, #0x37
  404418:	and	w5, w5, #0xff
  40441c:	b	404394 <__fxstatat@plt+0x1944>
  404420:	cmp	w4, #0x66
  404424:	b.eq	404494 <__fxstatat@plt+0x1a44>  // b.none
  404428:	cmp	w4, #0x6e
  40442c:	csel	w4, w4, w12, ne  // ne = any
  404430:	b	404348 <__fxstatat@plt+0x18f8>
  404434:	cmp	w4, #0x74
  404438:	csel	w4, w4, w13, ne  // ne = any
  40443c:	b	404348 <__fxstatat@plt+0x18f8>
  404440:	cmp	w4, #0x5f
  404444:	csel	w4, w4, w11, ne  // ne = any
  404448:	b	404348 <__fxstatat@plt+0x18f8>
  40444c:	cmp	w4, #0x37
  404450:	b.hi	404474 <__fxstatat@plt+0x1a24>  // b.pmore
  404454:	cmp	w4, #0x2f
  404458:	b.hi	4044d4 <__fxstatat@plt+0x1a84>  // b.pmore
  40445c:	cbnz	w4, 404348 <__fxstatat@plt+0x18f8>
  404460:	mov	w0, #0x0                   	// #0
  404464:	str	x7, [x10]
  404468:	str	x6, [x1]
  40446c:	str	x9, [x3]
  404470:	ret
  404474:	cmp	w4, #0x3f
  404478:	csel	w4, w4, w2, ne  // ne = any
  40447c:	b	404348 <__fxstatat@plt+0x18f8>
  404480:	cmp	w4, #0x3f
  404484:	b.eq	4044b4 <__fxstatat@plt+0x1a64>  // b.none
  404488:	mov	x6, x8
  40448c:	mov	w0, #0x0                   	// #0
  404490:	b	404464 <__fxstatat@plt+0x1a14>
  404494:	mov	w4, #0xc                   	// #12
  404498:	b	404348 <__fxstatat@plt+0x18f8>
  40449c:	mov	w4, #0xb                   	// #11
  4044a0:	b	404348 <__fxstatat@plt+0x18f8>
  4044a4:	mov	w4, #0x7                   	// #7
  4044a8:	b	404348 <__fxstatat@plt+0x18f8>
  4044ac:	cbnz	w0, 404364 <__fxstatat@plt+0x1914>
  4044b0:	b	4042cc <__fxstatat@plt+0x187c>
  4044b4:	add	x9, x9, #0x1
  4044b8:	mov	x6, x8
  4044bc:	strb	w14, [x7], #1
  4044c0:	b	4042b0 <__fxstatat@plt+0x1860>
  4044c4:	mov	w4, #0xd                   	// #13
  4044c8:	b	404348 <__fxstatat@plt+0x18f8>
  4044cc:	mov	w5, #0x0                   	// #0
  4044d0:	b	404394 <__fxstatat@plt+0x1944>
  4044d4:	ldrb	w5, [x6]
  4044d8:	sub	w4, w4, #0x30
  4044dc:	and	w4, w4, #0xff
  4044e0:	sub	w8, w5, #0x30
  4044e4:	add	w5, w5, w4, lsl #3
  4044e8:	and	w8, w8, #0xff
  4044ec:	and	w5, w5, #0xff
  4044f0:	cmp	w8, #0x7
  4044f4:	sub	w5, w5, #0x30
  4044f8:	b.hi	404348 <__fxstatat@plt+0x18f8>  // b.pmore
  4044fc:	nop
  404500:	add	x6, x6, #0x1
  404504:	and	w4, w5, #0xff
  404508:	ldrb	w5, [x6]
  40450c:	sub	w8, w5, #0x30
  404510:	add	w5, w5, w4, lsl #3
  404514:	and	w8, w8, #0xff
  404518:	and	w5, w5, #0xff
  40451c:	cmp	w8, #0x7
  404520:	sub	w5, w5, #0x30
  404524:	b.ls	404500 <__fxstatat@plt+0x1ab0>  // b.plast
  404528:	b	404348 <__fxstatat@plt+0x18f8>
  40452c:	mov	w4, #0x1b                  	// #27
  404530:	b	404348 <__fxstatat@plt+0x18f8>
  404534:	nop
  404538:	b	402840 <free@plt>
  40453c:	nop
  404540:	ubfiz	x0, x0, #4, #32
  404544:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404548:	add	x1, x1, #0x368
  40454c:	add	x2, x1, x0
  404550:	ldr	x0, [x1, x0]
  404554:	cbz	x0, 404574 <__fxstatat@plt+0x1b24>
  404558:	cmp	x0, #0x1
  40455c:	ldr	x1, [x2, #8]
  404560:	b.eq	40457c <__fxstatat@plt+0x1b2c>  // b.none
  404564:	cmp	x0, #0x2
  404568:	mov	w0, #0x1                   	// #1
  40456c:	b.eq	40458c <__fxstatat@plt+0x1b3c>  // b.none
  404570:	ret
  404574:	mov	w0, #0x0                   	// #0
  404578:	ret
  40457c:	ldrb	w0, [x1]
  404580:	cmp	w0, #0x30
  404584:	cset	w0, ne  // ne = any
  404588:	ret
  40458c:	ldrb	w0, [x1]
  404590:	subs	w0, w0, #0x30
  404594:	b.ne	4045a0 <__fxstatat@plt+0x1b50>  // b.any
  404598:	ldrb	w0, [x1, #1]
  40459c:	sub	w0, w0, #0x30
  4045a0:	cmp	w0, #0x0
  4045a4:	cset	w0, ne  // ne = any
  4045a8:	ret
  4045ac:	nop
  4045b0:	stp	x29, x30, [sp, #-32]!
  4045b4:	adrp	x4, 416000 <_obstack_memory_used@@Base+0x2ce0>
  4045b8:	mov	w2, #0x0                   	// #0
  4045bc:	mov	x29, sp
  4045c0:	add	x3, sp, #0x18
  4045c4:	add	x4, x4, #0xf0
  4045c8:	mov	x1, #0x0                   	// #0
  4045cc:	bl	4129a0 <__fxstatat@plt+0xff50>
  4045d0:	cbz	w0, 4045fc <__fxstatat@plt+0x1bac>
  4045d4:	cmp	w0, #0x1
  4045d8:	b.ne	4045f0 <__fxstatat@plt+0x1ba0>  // b.any
  4045dc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4045e0:	mov	x2, #0xffffffffffffffff    	// #-1
  4045e4:	str	x2, [x1, #1488]
  4045e8:	ldp	x29, x30, [sp], #32
  4045ec:	ret
  4045f0:	mov	w0, #0x0                   	// #0
  4045f4:	ldp	x29, x30, [sp], #32
  4045f8:	ret
  4045fc:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404600:	mov	w0, #0x1                   	// #1
  404604:	ldr	x2, [sp, #24]
  404608:	str	x2, [x1, #1488]
  40460c:	ldp	x29, x30, [sp], #32
  404610:	ret
  404614:	nop
  404618:	sub	sp, sp, #0x6b0
  40461c:	mov	x2, #0x0                   	// #0
  404620:	stp	x29, x30, [sp, #16]
  404624:	add	x29, sp, #0x10
  404628:	stp	x21, x22, [sp, #48]
  40462c:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404630:	add	x22, x22, #0x368
  404634:	add	x3, x22, #0x180
  404638:	stp	x23, x24, [sp, #64]
  40463c:	add	x23, sp, #0xa0
  404640:	ldr	x1, [x2, x3]
  404644:	ldrb	w0, [x1]
  404648:	cbnz	w0, 404658 <__fxstatat@plt+0x1c08>
  40464c:	b	404740 <__fxstatat@plt+0x1cf0>
  404650:	add	x1, x1, #0x1
  404654:	cbz	w0, 404740 <__fxstatat@plt+0x1cf0>
  404658:	cmp	w0, #0x25
  40465c:	ldrb	w0, [x1, #1]
  404660:	b.ne	404650 <__fxstatat@plt+0x1c00>  // b.any
  404664:	cmp	w0, #0x25
  404668:	b.eq	40472c <__fxstatat@plt+0x1cdc>  // b.none
  40466c:	cmp	w0, #0x62
  404670:	b.ne	404650 <__fxstatat@plt+0x1c00>  // b.any
  404674:	str	x1, [x23, x2]
  404678:	add	x2, x2, #0x8
  40467c:	cmp	x2, #0x10
  404680:	b.ne	404640 <__fxstatat@plt+0x1bf0>  // b.any
  404684:	ldr	x0, [sp, #160]
  404688:	mov	x24, #0xc                   	// #12
  40468c:	cbz	x0, 404760 <__fxstatat@plt+0x1d10>
  404690:	stp	x19, x20, [sp, #32]
  404694:	mov	w19, #0xe                   	// #14
  404698:	add	x21, sp, #0xb0
  40469c:	movk	w19, #0x2, lsl #16
  4046a0:	mov	x20, #0x0                   	// #0
  4046a4:	nop
  4046a8:	mov	w0, w19
  4046ac:	str	x24, [sp, #152]
  4046b0:	bl	4025e0 <nl_langinfo@plt>
  4046b4:	add	w19, w19, #0x1
  4046b8:	mov	w1, #0x25                  	// #37
  4046bc:	str	x0, [sp, #120]
  4046c0:	bl	402880 <strchr@plt>
  4046c4:	cbnz	x0, 404748 <__fxstatat@plt+0x1cf8>
  4046c8:	bl	402820 <__ctype_b_loc@plt>
  4046cc:	ldr	x1, [sp, #120]
  4046d0:	mov	x2, #0x80                  	// #128
  4046d4:	ldr	x4, [x0]
  4046d8:	add	x3, sp, #0x98
  4046dc:	ldrb	w6, [x1]
  4046e0:	mov	w5, #0x0                   	// #0
  4046e4:	ldr	x0, [sp, #120]
  4046e8:	mov	x1, x21
  4046ec:	add	x21, x21, x2
  4046f0:	ldrh	w4, [x4, x6, lsl #1]
  4046f4:	ubfx	x4, x4, #11, #1
  4046f8:	bl	40db48 <__fxstatat@plt+0xb0f8>
  4046fc:	sub	w1, w19, #0x20, lsl #12
  404700:	cmp	x0, #0x7f
  404704:	b.hi	404748 <__fxstatat@plt+0x1cf8>  // b.pmore
  404708:	ldr	x0, [sp, #152]
  40470c:	cmp	x20, x0
  404710:	csel	x20, x20, x0, cs  // cs = hs, nlast
  404714:	subs	w1, w1, #0x1a
  404718:	b.ne	4046a8 <__fxstatat@plt+0x1c58>  // b.any
  40471c:	cmp	x24, x20
  404720:	b.ls	40476c <__fxstatat@plt+0x1d1c>  // b.plast
  404724:	mov	x24, x20
  404728:	b	404694 <__fxstatat@plt+0x1c44>
  40472c:	ldrb	w0, [x1, #2]
  404730:	add	x1, x1, #0x1
  404734:	add	x1, x1, #0x1
  404738:	cbnz	w0, 404658 <__fxstatat@plt+0x1c08>
  40473c:	nop
  404740:	mov	x1, #0x0                   	// #0
  404744:	b	404674 <__fxstatat@plt+0x1c24>
  404748:	ldp	x19, x20, [sp, #32]
  40474c:	ldp	x29, x30, [sp, #16]
  404750:	ldp	x21, x22, [sp, #48]
  404754:	ldp	x23, x24, [sp, #64]
  404758:	add	sp, sp, #0x6b0
  40475c:	ret
  404760:	ldr	x0, [sp, #168]
  404764:	cbnz	x0, 404690 <__fxstatat@plt+0x1c40>
  404768:	b	40474c <__fxstatat@plt+0x1cfc>
  40476c:	stp	x27, x28, [sp, #96]
  404770:	adrp	x27, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404774:	add	x0, x27, #0x5c8
  404778:	adrp	x20, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40477c:	add	x21, sp, #0x6b0
  404780:	add	x20, x20, #0x348
  404784:	str	x0, [sp, #136]
  404788:	add	x0, x0, #0x10
  40478c:	mov	x24, #0x0                   	// #0
  404790:	stp	x25, x26, [sp, #80]
  404794:	adrp	x26, 417000 <_obstack_memory_used@@Base+0x3ce0>
  404798:	str	x0, [sp, #120]
  40479c:	add	x0, x26, #0x4b0
  4047a0:	str	x0, [sp, #128]
  4047a4:	add	x0, x22, #0x180
  4047a8:	add	x19, sp, #0xb0
  4047ac:	ldr	x25, [x23, x24, lsl #3]
  4047b0:	ldr	x26, [x0, x24, lsl #3]
  4047b4:	ldr	x28, [sp, #120]
  4047b8:	sub	x27, x25, x26
  4047bc:	b	4047e8 <__fxstatat@plt+0x1d98>
  4047c0:	cmp	x27, #0x80
  4047c4:	b.gt	404828 <__fxstatat@plt+0x1dd8>
  4047c8:	str	x10, [sp]
  4047cc:	add	x19, x19, #0x80
  4047d0:	bl	4025c0 <__snprintf_chk@plt>
  4047d4:	cmp	w0, #0x7f
  4047d8:	b.hi	404828 <__fxstatat@plt+0x1dd8>  // b.pmore
  4047dc:	cmp	x19, x21
  4047e0:	add	x28, x28, #0x80
  4047e4:	b.eq	404838 <__fxstatat@plt+0x1de8>  // b.none
  4047e8:	add	x10, x25, #0x2
  4047ec:	mov	x7, x19
  4047f0:	mov	x0, x28
  4047f4:	mov	x6, x26
  4047f8:	mov	w5, w27
  4047fc:	mov	x4, x20
  404800:	mov	x3, #0xffffffffffffffff    	// #-1
  404804:	mov	w2, #0x1                   	// #1
  404808:	mov	x1, #0x80                  	// #128
  40480c:	cbnz	x25, 4047c0 <__fxstatat@plt+0x1d70>
  404810:	ldr	x2, [sp, #128]
  404814:	mov	x3, x26
  404818:	add	x19, x19, #0x80
  40481c:	bl	402570 <snprintf@plt>
  404820:	cmp	w0, #0x7f
  404824:	b.ls	4047dc <__fxstatat@plt+0x1d8c>  // b.plast
  404828:	ldp	x19, x20, [sp, #32]
  40482c:	ldp	x25, x26, [sp, #80]
  404830:	ldp	x27, x28, [sp, #96]
  404834:	b	40474c <__fxstatat@plt+0x1cfc>
  404838:	ldr	x0, [sp, #120]
  40483c:	add	x0, x0, #0x600
  404840:	str	x0, [sp, #120]
  404844:	cbnz	x24, 404850 <__fxstatat@plt+0x1e00>
  404848:	mov	x24, #0x1                   	// #1
  40484c:	b	4047a4 <__fxstatat@plt+0x1d54>
  404850:	ldr	x0, [sp, #136]
  404854:	ldp	x19, x20, [sp, #32]
  404858:	ldp	x25, x26, [sp, #80]
  40485c:	ldp	x27, x28, [sp, #96]
  404860:	strb	w24, [x0, #3088]
  404864:	b	40474c <__fxstatat@plt+0x1cfc>
  404868:	stp	x29, x30, [sp, #-48]!
  40486c:	mov	x29, sp
  404870:	stp	x19, x20, [sp, #16]
  404874:	mov	x20, x0
  404878:	mov	x0, #0x20                  	// #32
  40487c:	stp	x21, x22, [sp, #32]
  404880:	mov	x21, x1
  404884:	and	w22, w2, #0xff
  404888:	bl	411e78 <__fxstatat@plt+0xf428>
  40488c:	mov	x19, x0
  404890:	cbz	x21, 4048a0 <__fxstatat@plt+0x1e50>
  404894:	mov	x0, x21
  404898:	bl	4120a0 <__fxstatat@plt+0xf650>
  40489c:	mov	x21, x0
  4048a0:	str	x21, [x19, #8]
  4048a4:	cbz	x20, 4048b4 <__fxstatat@plt+0x1e64>
  4048a8:	mov	x0, x20
  4048ac:	bl	4120a0 <__fxstatat@plt+0xf650>
  4048b0:	mov	x20, x0
  4048b4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4048b8:	add	x0, x0, #0x5c8
  4048bc:	strb	w22, [x19, #16]
  4048c0:	ldp	x21, x22, [sp, #32]
  4048c4:	str	x20, [x19]
  4048c8:	ldr	x1, [x0, #3096]
  4048cc:	str	x19, [x0, #3096]
  4048d0:	str	x1, [x19, #24]
  4048d4:	ldp	x19, x20, [sp, #16]
  4048d8:	ldp	x29, x30, [sp], #48
  4048dc:	ret
  4048e0:	ldr	x0, [x0]
  4048e4:	ldr	x1, [x1]
  4048e8:	b	402800 <strcmp@plt>
  4048ec:	nop
  4048f0:	mov	x2, x1
  4048f4:	ldr	x1, [x0]
  4048f8:	ldr	x0, [x2]
  4048fc:	b	402800 <strcmp@plt>
  404900:	stp	x29, x30, [sp, #-48]!
  404904:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  404908:	mov	x2, x0
  40490c:	mov	x29, sp
  404910:	ldr	x4, [x1, #488]
  404914:	stp	x19, x20, [sp, #16]
  404918:	mov	x19, x0
  40491c:	mov	x1, #0x2                   	// #2
  404920:	add	x0, sp, #0x28
  404924:	mov	x3, #0xffffffffffffffff    	// #-1
  404928:	bl	411200 <__fxstatat@plt+0xe7b0>
  40492c:	ldrb	w1, [x19]
  404930:	mov	x20, x0
  404934:	ldrb	w0, [sp, #40]
  404938:	cmp	w1, w0
  40493c:	b.eq	404950 <__fxstatat@plt+0x1f00>  // b.none
  404940:	mov	w0, #0x1                   	// #1
  404944:	ldp	x19, x20, [sp, #16]
  404948:	ldp	x29, x30, [sp], #48
  40494c:	ret
  404950:	mov	x0, x19
  404954:	bl	402430 <strlen@plt>
  404958:	cmp	x0, x20
  40495c:	cset	w0, ne  // ne = any
  404960:	ldp	x19, x20, [sp, #16]
  404964:	ldp	x29, x30, [sp], #48
  404968:	ret
  40496c:	nop
  404970:	stp	x29, x30, [sp, #-64]!
  404974:	mov	x29, sp
  404978:	stp	x19, x20, [sp, #16]
  40497c:	mov	x20, x0
  404980:	stp	x21, x22, [sp, #32]
  404984:	stp	x23, x24, [sp, #48]
  404988:	and	w23, w1, #0xff
  40498c:	bl	402430 <strlen@plt>
  404990:	add	x1, x0, #0x1
  404994:	lsl	x0, x1, #1
  404998:	lsr	x2, x1, #63
  40499c:	adds	x0, x0, x1
  4049a0:	cinc	x1, x2, cs  // cs = hs, nlast
  4049a4:	cmp	x1, #0x0
  4049a8:	cset	x1, ne  // ne = any
  4049ac:	tbnz	x0, #63, 404a6c <__fxstatat@plt+0x201c>
  4049b0:	cbnz	x1, 404a6c <__fxstatat@plt+0x201c>
  4049b4:	bl	411e78 <__fxstatat@plt+0xf428>
  4049b8:	mov	x22, x0
  4049bc:	ldrb	w4, [x20]
  4049c0:	cbz	w4, 404a4c <__fxstatat@plt+0x1ffc>
  4049c4:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4049c8:	add	x21, x21, #0x5c8
  4049cc:	adrp	x24, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4049d0:	add	x21, x21, #0xc28
  4049d4:	mov	x19, x0
  4049d8:	add	x24, x24, #0x358
  4049dc:	b	4049ec <__fxstatat@plt+0x1f9c>
  4049e0:	strb	w4, [x19], #1
  4049e4:	ldrb	w4, [x20]
  4049e8:	cbz	w4, 404a24 <__fxstatat@plt+0x1fd4>
  4049ec:	cmp	w4, #0x2f
  4049f0:	add	x20, x20, #0x1
  4049f4:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  4049f8:	b.ne	404a40 <__fxstatat@plt+0x1ff0>  // b.any
  4049fc:	ldrb	w1, [x21, w4, sxtw]
  404a00:	cbnz	w1, 4049e0 <__fxstatat@plt+0x1f90>
  404a04:	mov	x0, x19
  404a08:	mov	x3, x24
  404a0c:	mov	x2, #0xffffffffffffffff    	// #-1
  404a10:	mov	w1, #0x1                   	// #1
  404a14:	bl	402440 <__sprintf_chk@plt>
  404a18:	add	x19, x19, #0x3
  404a1c:	ldrb	w4, [x20]
  404a20:	cbnz	w4, 4049ec <__fxstatat@plt+0x1f9c>
  404a24:	strb	wzr, [x19]
  404a28:	mov	x0, x22
  404a2c:	ldp	x19, x20, [sp, #16]
  404a30:	ldp	x21, x22, [sp, #32]
  404a34:	ldp	x23, x24, [sp, #48]
  404a38:	ldp	x29, x30, [sp], #64
  404a3c:	ret
  404a40:	mov	w0, #0x2f                  	// #47
  404a44:	strb	w0, [x19], #1
  404a48:	b	4049e4 <__fxstatat@plt+0x1f94>
  404a4c:	mov	x19, x0
  404a50:	mov	x0, x22
  404a54:	strb	wzr, [x19]
  404a58:	ldp	x19, x20, [sp, #16]
  404a5c:	ldp	x21, x22, [sp, #32]
  404a60:	ldp	x23, x24, [sp, #48]
  404a64:	ldp	x29, x30, [sp], #64
  404a68:	ret
  404a6c:	bl	4120d0 <__fxstatat@plt+0xf680>
  404a70:	stp	x29, x30, [sp, #-32]!
  404a74:	mov	x29, sp
  404a78:	stp	x19, x20, [sp, #16]
  404a7c:	adrp	x20, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404a80:	add	x20, x20, #0x5c8
  404a84:	ldr	x19, [x20, #3368]
  404a88:	ldr	x0, [x20, #3376]
  404a8c:	add	x1, x19, x19, lsr #1
  404a90:	cmp	x1, x0
  404a94:	b.hi	404b8c <__fxstatat@plt+0x213c>  // b.pmore
  404a98:	cbz	x19, 404ac0 <__fxstatat@plt+0x2070>
  404a9c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404aa0:	add	x1, x1, #0x5c8
  404aa4:	ldr	x0, [x1, #3384]
  404aa8:	ldr	x1, [x1, #3400]
  404aac:	add	x2, x0, x19, lsl #3
  404ab0:	str	x1, [x0], #8
  404ab4:	add	x1, x1, #0xb8
  404ab8:	cmp	x0, x2
  404abc:	b.ne	404ab0 <__fxstatat@plt+0x2060>  // b.any
  404ac0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404ac4:	add	x0, x0, #0x5c8
  404ac8:	ldr	w1, [x0, #3392]
  404acc:	cmn	w1, #0x1
  404ad0:	b.eq	404b74 <__fxstatat@plt+0x2124>  // b.none
  404ad4:	add	x0, x0, #0xd50
  404ad8:	bl	402470 <_setjmp@plt>
  404adc:	adrp	x3, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404ae0:	add	x3, x3, #0x5c8
  404ae4:	mov	w2, w0
  404ae8:	ldr	w4, [x3, #3392]
  404aec:	cbz	w0, 404b80 <__fxstatat@plt+0x2130>
  404af0:	cmp	w4, #0x3
  404af4:	b.eq	404bd8 <__fxstatat@plt+0x2188>  // b.none
  404af8:	ldr	x1, [x3, #3368]
  404afc:	ldr	x0, [x3, #3384]
  404b00:	cbz	x1, 404b24 <__fxstatat@plt+0x20d4>
  404b04:	ldr	x3, [x3, #3400]
  404b08:	mov	x2, #0x0                   	// #0
  404b0c:	nop
  404b10:	str	x3, [x0, x2, lsl #3]
  404b14:	add	x2, x2, #0x1
  404b18:	cmp	x2, x1
  404b1c:	add	x3, x3, #0xb8
  404b20:	b.ne	404b10 <__fxstatat@plt+0x20c0>  // b.any
  404b24:	mov	w2, #0x1                   	// #1
  404b28:	cmp	w4, #0x4
  404b2c:	mov	w3, #0x0                   	// #0
  404b30:	b.ne	404b3c <__fxstatat@plt+0x20ec>  // b.any
  404b34:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  404b38:	ldr	w3, [x3, #1104]
  404b3c:	adrp	x5, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404b40:	add	x5, x5, #0x5c8
  404b44:	add	w4, w4, w3
  404b48:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x3ce0>
  404b4c:	add	x3, x3, #0xf08
  404b50:	lsl	x4, x4, #1
  404b54:	ldrb	w6, [x5, #3725]
  404b58:	add	x2, x4, w2, sxtw
  404b5c:	ldrb	w4, [x5, #3724]
  404b60:	add	x3, x3, #0x10
  404b64:	add	x2, x6, x2, lsl #1
  404b68:	add	x2, x4, x2, lsl #1
  404b6c:	ldr	x2, [x3, x2, lsl #3]
  404b70:	bl	40e378 <__fxstatat@plt+0xb928>
  404b74:	ldp	x19, x20, [sp, #16]
  404b78:	ldp	x29, x30, [sp], #32
  404b7c:	ret
  404b80:	ldr	x1, [x3, #3368]
  404b84:	ldr	x0, [x3, #3384]
  404b88:	b	404b28 <__fxstatat@plt+0x20d8>
  404b8c:	ldr	x0, [x20, #3384]
  404b90:	bl	402840 <free@plt>
  404b94:	mov	x0, #0x18                  	// #24
  404b98:	umulh	x1, x19, x0
  404b9c:	mul	x0, x19, x0
  404ba0:	cmp	x1, #0x0
  404ba4:	cset	x1, ne  // ne = any
  404ba8:	cmp	x0, #0x0
  404bac:	csinc	x1, x1, xzr, ge  // ge = tcont
  404bb0:	cbnz	x1, 404bd4 <__fxstatat@plt+0x2184>
  404bb4:	add	x19, x19, x19, lsl #1
  404bb8:	lsl	x0, x19, #3
  404bbc:	bl	411e78 <__fxstatat@plt+0xf428>
  404bc0:	ldr	x19, [x20, #3368]
  404bc4:	str	x0, [x20, #3384]
  404bc8:	add	x0, x19, x19, lsl #1
  404bcc:	str	x0, [x20, #3376]
  404bd0:	b	404a98 <__fxstatat@plt+0x2048>
  404bd4:	bl	4120d0 <__fxstatat@plt+0xf680>
  404bd8:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x3ce0>
  404bdc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  404be0:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1ce0>
  404be4:	add	x3, x3, #0xf08
  404be8:	add	x1, x1, #0x360
  404bec:	add	x0, x0, #0x370
  404bf0:	mov	w2, #0xeea                 	// #3818
  404bf4:	bl	4029d0 <__assert_fail@plt>
  404bf8:	stp	x29, x30, [sp, #-32]!
  404bfc:	mov	x29, sp
  404c00:	stp	x19, x20, [sp, #16]
  404c04:	mov	x19, x0
  404c08:	mov	x20, x1
  404c0c:	bl	4029e0 <__errno_location@plt>
  404c10:	mov	x2, x0
  404c14:	mov	x1, x20
  404c18:	mov	x0, x19
  404c1c:	ldp	x19, x20, [sp, #16]
  404c20:	str	wzr, [x2]
  404c24:	ldp	x29, x30, [sp], #32
  404c28:	b	402990 <strcoll@plt>
  404c2c:	nop
  404c30:	ldr	x0, [x0]
  404c34:	ldr	x1, [x1]
  404c38:	b	404bf8 <__fxstatat@plt+0x21a8>
  404c3c:	nop
  404c40:	mov	x2, x1
  404c44:	ldr	x1, [x0]
  404c48:	ldr	x0, [x2]
  404c4c:	b	404bf8 <__fxstatat@plt+0x21a8>
  404c50:	mov	x2, x1
  404c54:	ldr	x1, [x0]
  404c58:	ldr	x0, [x2]
  404c5c:	b	40b828 <__fxstatat@plt+0x8dd8>
  404c60:	ldr	x0, [x0]
  404c64:	ldr	x1, [x1]
  404c68:	b	40b828 <__fxstatat@plt+0x8dd8>
  404c6c:	nop
  404c70:	stp	x29, x30, [sp, #-64]!
  404c74:	mov	x29, sp
  404c78:	stp	x19, x20, [sp, #16]
  404c7c:	stp	x21, x22, [sp, #32]
  404c80:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404c84:	mov	x22, x0
  404c88:	stp	x23, x24, [sp, #48]
  404c8c:	add	x21, x21, #0x5c8
  404c90:	and	w23, w1, #0xff
  404c94:	cbz	x0, 404cb0 <__fxstatat@plt+0x2260>
  404c98:	ldr	x0, [x21, #3728]
  404c9c:	cbz	x0, 404cb0 <__fxstatat@plt+0x2260>
  404ca0:	mov	x1, x22
  404ca4:	mov	w2, #0x0                   	// #0
  404ca8:	mov	x0, #0x0                   	// #0
  404cac:	bl	404868 <__fxstatat@plt+0x1e18>
  404cb0:	ldr	x0, [x21, #3368]
  404cb4:	sub	x19, x0, #0x1
  404cb8:	cbnz	x0, 404d24 <__fxstatat@plt+0x22d4>
  404cbc:	b	404df8 <__fxstatat@plt+0x23a8>
  404cc0:	mov	x0, x24
  404cc4:	bl	40b290 <__fxstatat@plt+0x8840>
  404cc8:	ldrb	w1, [x0]
  404ccc:	cmp	w1, #0x2e
  404cd0:	b.eq	404dd8 <__fxstatat@plt+0x2388>  // b.none
  404cd4:	ldrb	w3, [x24]
  404cd8:	mov	x0, x22
  404cdc:	mov	x1, x24
  404ce0:	mov	x2, #0x0                   	// #0
  404ce4:	cmp	w3, #0x2f
  404ce8:	b.eq	404d44 <__fxstatat@plt+0x22f4>  // b.none
  404cec:	bl	40b640 <__fxstatat@plt+0x8bf0>
  404cf0:	mov	x24, x0
  404cf4:	ldr	x1, [x20, #8]
  404cf8:	mov	w2, w23
  404cfc:	bl	404868 <__fxstatat@plt+0x1e18>
  404d00:	mov	x0, x24
  404d04:	bl	402840 <free@plt>
  404d08:	ldr	w0, [x20, #152]
  404d0c:	cmp	w0, #0x9
  404d10:	b.eq	404d60 <__fxstatat@plt+0x2310>  // b.none
  404d14:	nop
  404d18:	sub	x19, x19, #0x1
  404d1c:	cmn	x19, #0x1
  404d20:	b.eq	404d88 <__fxstatat@plt+0x2338>  // b.none
  404d24:	ldr	x1, [x21, #3384]
  404d28:	ldr	x20, [x1, x19, lsl #3]
  404d2c:	ldr	w1, [x20, #152]
  404d30:	cmp	w1, #0x3
  404d34:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  404d38:	b.ne	404d18 <__fxstatat@plt+0x22c8>  // b.any
  404d3c:	ldr	x24, [x20]
  404d40:	cbnz	x22, 404cc0 <__fxstatat@plt+0x2270>
  404d44:	ldr	x1, [x20, #8]
  404d48:	mov	x0, x24
  404d4c:	mov	w2, w23
  404d50:	bl	404868 <__fxstatat@plt+0x1e18>
  404d54:	ldr	w0, [x20, #152]
  404d58:	cmp	w0, #0x9
  404d5c:	b.ne	404d18 <__fxstatat@plt+0x22c8>  // b.any
  404d60:	ldr	x0, [x20]
  404d64:	sub	x19, x19, #0x1
  404d68:	bl	402840 <free@plt>
  404d6c:	ldr	x0, [x20, #8]
  404d70:	bl	402840 <free@plt>
  404d74:	ldr	x0, [x20, #16]
  404d78:	bl	402840 <free@plt>
  404d7c:	cmn	x19, #0x1
  404d80:	b.ne	404d24 <__fxstatat@plt+0x22d4>  // b.any
  404d84:	nop
  404d88:	ldr	x4, [x21, #3368]
  404d8c:	cbz	x4, 404df8 <__fxstatat@plt+0x23a8>
  404d90:	ldr	x3, [x21, #3384]
  404d94:	mov	x1, #0x0                   	// #0
  404d98:	mov	x0, #0x0                   	// #0
  404d9c:	nop
  404da0:	ldr	x2, [x3, x0, lsl #3]
  404da4:	str	x2, [x3, x1, lsl #3]
  404da8:	add	x0, x0, #0x1
  404dac:	ldr	w2, [x2, #152]
  404db0:	cmp	w2, #0x9
  404db4:	cinc	x1, x1, ne  // ne = any
  404db8:	cmp	x4, x0
  404dbc:	b.ne	404da0 <__fxstatat@plt+0x2350>  // b.any
  404dc0:	str	x1, [x21, #3368]
  404dc4:	ldp	x19, x20, [sp, #16]
  404dc8:	ldp	x21, x22, [sp, #32]
  404dcc:	ldp	x23, x24, [sp, #48]
  404dd0:	ldp	x29, x30, [sp], #64
  404dd4:	ret
  404dd8:	ldrb	w1, [x0, #1]
  404ddc:	cmp	w1, #0x2e
  404de0:	cinc	x1, x0, eq  // eq = none
  404de4:	ldrb	w0, [x1, #1]
  404de8:	cmp	w0, #0x2f
  404dec:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404df0:	b.eq	404d18 <__fxstatat@plt+0x22c8>  // b.none
  404df4:	b	404cd4 <__fxstatat@plt+0x2284>
  404df8:	mov	x1, #0x0                   	// #0
  404dfc:	str	x1, [x21, #3368]
  404e00:	ldp	x19, x20, [sp, #16]
  404e04:	ldp	x21, x22, [sp, #32]
  404e08:	ldp	x23, x24, [sp, #48]
  404e0c:	ldp	x29, x30, [sp], #64
  404e10:	ret
  404e14:	nop
  404e18:	cmp	x0, x1
  404e1c:	b.cs	404efc <__fxstatat@plt+0x24ac>  // b.hs, b.nlast
  404e20:	stp	x29, x30, [sp, #-80]!
  404e24:	mov	x29, sp
  404e28:	stp	x19, x20, [sp, #16]
  404e2c:	mov	x19, x0
  404e30:	stp	x21, x22, [sp, #32]
  404e34:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404e38:	mov	x21, x1
  404e3c:	add	x22, x22, #0x5c8
  404e40:	stp	x23, x24, [sp, #48]
  404e44:	adrp	x23, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404e48:	mov	w24, #0x20                  	// #32
  404e4c:	add	x23, x23, #0x5b0
  404e50:	str	x25, [sp, #64]
  404e54:	mov	w25, #0x9                   	// #9
  404e58:	b	404e90 <__fxstatat@plt+0x2440>
  404e5c:	udiv	x4, x21, x3
  404e60:	udiv	x1, x20, x3
  404e64:	cmp	x4, x1
  404e68:	b.ls	404ea4 <__fxstatat@plt+0x2454>  // b.plast
  404e6c:	cmp	x2, x5
  404e70:	b.cs	404eec <__fxstatat@plt+0x249c>  // b.hs, b.nlast
  404e74:	add	x1, x2, #0x1
  404e78:	str	x1, [x0, #40]
  404e7c:	strb	w25, [x2]
  404e80:	udiv	x19, x19, x3
  404e84:	madd	x19, x19, x3, x3
  404e88:	cmp	x19, x21
  404e8c:	b.cs	404ec4 <__fxstatat@plt+0x2474>  // b.hs, b.nlast
  404e90:	ldr	x0, [x23]
  404e94:	add	x20, x19, #0x1
  404e98:	ldr	x3, [x22, #3736]
  404e9c:	ldp	x2, x5, [x0, #40]
  404ea0:	cbnz	x3, 404e5c <__fxstatat@plt+0x240c>
  404ea4:	cmp	x2, x5
  404ea8:	b.cs	404edc <__fxstatat@plt+0x248c>  // b.hs, b.nlast
  404eac:	add	x1, x2, #0x1
  404eb0:	mov	x19, x20
  404eb4:	str	x1, [x0, #40]
  404eb8:	strb	w24, [x2]
  404ebc:	cmp	x19, x21
  404ec0:	b.cc	404e90 <__fxstatat@plt+0x2440>  // b.lo, b.ul, b.last
  404ec4:	ldp	x19, x20, [sp, #16]
  404ec8:	ldp	x21, x22, [sp, #32]
  404ecc:	ldp	x23, x24, [sp, #48]
  404ed0:	ldr	x25, [sp, #64]
  404ed4:	ldp	x29, x30, [sp], #80
  404ed8:	ret
  404edc:	mov	w1, #0x20                  	// #32
  404ee0:	mov	x19, x20
  404ee4:	bl	402780 <__overflow@plt>
  404ee8:	b	404ebc <__fxstatat@plt+0x246c>
  404eec:	mov	w1, #0x9                   	// #9
  404ef0:	bl	402780 <__overflow@plt>
  404ef4:	ldr	x3, [x22, #3736]
  404ef8:	b	404e80 <__fxstatat@plt+0x2430>
  404efc:	ret
  404f00:	stp	x29, x30, [sp, #-48]!
  404f04:	mov	x2, x1
  404f08:	mov	x29, sp
  404f0c:	stp	x19, x20, [sp, #16]
  404f10:	ldp	x19, x1, [x1, #16]
  404f14:	sub	x20, x1, x19
  404f18:	cmp	x20, #0x7
  404f1c:	b.ls	404fac <__fxstatat@plt+0x255c>  // b.plast
  404f20:	stp	x21, x22, [sp, #32]
  404f24:	cmp	x1, x19
  404f28:	b.eq	404fb8 <__fxstatat@plt+0x2568>  // b.none
  404f2c:	ldr	x3, [x2, #48]
  404f30:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404f34:	ldr	x4, [x2, #8]
  404f38:	add	x1, x1, x3
  404f3c:	ldr	x5, [x2, #32]
  404f40:	bic	x3, x1, x3
  404f44:	sub	x6, x3, x4
  404f48:	and	x20, x20, #0xfffffffffffffff8
  404f4c:	sub	x4, x5, x4
  404f50:	adrp	x21, 415000 <_obstack_memory_used@@Base+0x1ce0>
  404f54:	cmp	x6, x4
  404f58:	add	x20, x19, x20
  404f5c:	ldr	x1, [x22, #1456]
  404f60:	csel	x3, x3, x5, ls  // ls = plast
  404f64:	stp	x3, x3, [x2, #16]
  404f68:	add	x21, x21, #0x390
  404f6c:	bl	402980 <fputs_unlocked@plt>
  404f70:	ldr	x2, [x19], #8
  404f74:	mov	x1, x21
  404f78:	mov	w0, #0x1                   	// #1
  404f7c:	bl	402670 <__printf_chk@plt>
  404f80:	cmp	x19, x20
  404f84:	b.ne	404f70 <__fxstatat@plt+0x2520>  // b.any
  404f88:	ldr	x0, [x22, #1456]
  404f8c:	ldp	x1, x2, [x0, #40]
  404f90:	cmp	x1, x2
  404f94:	b.cs	404fc8 <__fxstatat@plt+0x2578>  // b.hs, b.nlast
  404f98:	add	x2, x1, #0x1
  404f9c:	str	x2, [x0, #40]
  404fa0:	mov	w0, #0xa                   	// #10
  404fa4:	strb	w0, [x1]
  404fa8:	ldp	x21, x22, [sp, #32]
  404fac:	ldp	x19, x20, [sp, #16]
  404fb0:	ldp	x29, x30, [sp], #48
  404fb4:	ret
  404fb8:	ldrb	w3, [x2, #80]
  404fbc:	orr	w3, w3, #0x2
  404fc0:	strb	w3, [x2, #80]
  404fc4:	b	404f2c <__fxstatat@plt+0x24dc>
  404fc8:	ldp	x19, x20, [sp, #16]
  404fcc:	mov	w1, #0xa                   	// #10
  404fd0:	ldp	x21, x22, [sp, #32]
  404fd4:	ldp	x29, x30, [sp], #48
  404fd8:	b	402780 <__overflow@plt>
  404fdc:	nop
  404fe0:	stp	x29, x30, [sp, #-48]!
  404fe4:	mov	x29, sp
  404fe8:	stp	x19, x20, [sp, #16]
  404fec:	mov	w19, w2
  404ff0:	stp	x21, x22, [sp, #32]
  404ff4:	cbz	x0, 40508c <__fxstatat@plt+0x263c>
  404ff8:	adrp	x20, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  404ffc:	mov	x22, x0
  405000:	mov	w1, #0x0                   	// #0
  405004:	bl	40e110 <__fxstatat@plt+0xb6c0>
  405008:	ldr	x1, [x20, #1456]
  40500c:	subs	w19, w19, w0
  405010:	csel	w19, w19, wzr, pl  // pl = nfrst
  405014:	mov	x0, x22
  405018:	add	x20, x20, #0x5b0
  40501c:	mov	w21, #0x20                  	// #32
  405020:	bl	402980 <fputs_unlocked@plt>
  405024:	mov	x0, x22
  405028:	bl	402430 <strlen@plt>
  40502c:	add	x22, x0, w19, sxtw
  405030:	ldr	x0, [x20]
  405034:	ldp	x1, x2, [x0, #40]
  405038:	add	x3, x1, #0x1
  40503c:	cmp	x1, x2
  405040:	b.cs	405080 <__fxstatat@plt+0x2630>  // b.hs, b.nlast
  405044:	str	x3, [x0, #40]
  405048:	strb	w21, [x1]
  40504c:	sub	w19, w19, #0x1
  405050:	cmn	w19, #0x1
  405054:	b.ne	405030 <__fxstatat@plt+0x25e0>  // b.any
  405058:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40505c:	add	x1, x1, #0x5c8
  405060:	ldr	x19, [x1, #3744]
  405064:	add	x19, x19, #0x1
  405068:	add	x19, x19, x22
  40506c:	ldp	x21, x22, [sp, #32]
  405070:	str	x19, [x1, #3744]
  405074:	ldp	x19, x20, [sp, #16]
  405078:	ldp	x29, x30, [sp], #48
  40507c:	ret
  405080:	mov	w1, #0x20                  	// #32
  405084:	bl	402780 <__overflow@plt>
  405088:	b	40504c <__fxstatat@plt+0x25fc>
  40508c:	mov	x3, x1
  405090:	sxtw	x22, w2
  405094:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  405098:	mov	w0, #0x1                   	// #1
  40509c:	add	x1, x1, #0x398
  4050a0:	bl	402670 <__printf_chk@plt>
  4050a4:	b	405058 <__fxstatat@plt+0x2608>
  4050a8:	stp	x29, x30, [sp, #-32]!
  4050ac:	tst	w2, #0xff
  4050b0:	mov	x29, sp
  4050b4:	stp	x19, x20, [sp, #16]
  4050b8:	mov	w20, w1
  4050bc:	mov	w19, w0
  4050c0:	b.eq	4050ec <__fxstatat@plt+0x269c>  // b.none
  4050c4:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  4050c8:	mov	x3, #0x0                   	// #0
  4050cc:	ldrb	w1, [x1, #1136]
  4050d0:	cbz	w1, 40510c <__fxstatat@plt+0x26bc>
  4050d4:	mov	w2, w20
  4050d8:	mov	w1, w19
  4050dc:	ldp	x19, x20, [sp, #16]
  4050e0:	mov	x0, x3
  4050e4:	ldp	x29, x30, [sp], #32
  4050e8:	b	404fe0 <__fxstatat@plt+0x2590>
  4050ec:	mov	w2, w20
  4050f0:	mov	w1, w19
  4050f4:	ldp	x19, x20, [sp, #16]
  4050f8:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4050fc:	ldp	x29, x30, [sp], #32
  405100:	add	x3, x3, #0x3a0
  405104:	mov	x0, x3
  405108:	b	404fe0 <__fxstatat@plt+0x2590>
  40510c:	bl	40d690 <__fxstatat@plt+0xac40>
  405110:	mov	x3, x0
  405114:	mov	w2, w20
  405118:	mov	w1, w19
  40511c:	ldp	x19, x20, [sp, #16]
  405120:	mov	x0, x3
  405124:	ldp	x29, x30, [sp], #32
  405128:	b	404fe0 <__fxstatat@plt+0x2590>
  40512c:	nop
  405130:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  405134:	add	x1, x0, #0x5c8
  405138:	ldr	w0, [x0, #1480]
  40513c:	cbnz	w0, 40514c <__fxstatat@plt+0x26fc>
  405140:	ldr	w0, [x1, #3756]
  405144:	add	w0, w0, #0x1
  405148:	str	w0, [x1, #3756]
  40514c:	ret
  405150:	stp	x29, x30, [sp, #-48]!
  405154:	mov	x29, sp
  405158:	stp	x19, x20, [sp, #16]
  40515c:	mov	x20, x2
  405160:	mov	x19, x1
  405164:	str	x21, [sp, #32]
  405168:	and	w21, w0, #0xff
  40516c:	bl	4029e0 <__errno_location@plt>
  405170:	mov	x2, x0
  405174:	mov	x1, x20
  405178:	mov	w0, #0x4                   	// #4
  40517c:	ldr	w20, [x2]
  405180:	bl	411530 <__fxstatat@plt+0xeae0>
  405184:	mov	x2, x19
  405188:	mov	x3, x0
  40518c:	mov	w1, w20
  405190:	mov	w0, #0x0                   	// #0
  405194:	bl	402490 <error@plt>
  405198:	cbz	w21, 4051b8 <__fxstatat@plt+0x2768>
  40519c:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  4051a0:	mov	w1, #0x2                   	// #2
  4051a4:	str	w1, [x0, #1144]
  4051a8:	ldp	x19, x20, [sp, #16]
  4051ac:	ldr	x21, [sp, #32]
  4051b0:	ldp	x29, x30, [sp], #48
  4051b4:	ret
  4051b8:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4051bc:	add	x0, x0, #0x5c8
  4051c0:	ldr	w1, [x0, #3760]
  4051c4:	cbnz	w1, 4051a8 <__fxstatat@plt+0x2758>
  4051c8:	mov	w1, #0x1                   	// #1
  4051cc:	str	w1, [x0, #3760]
  4051d0:	ldp	x19, x20, [sp, #16]
  4051d4:	ldr	x21, [sp, #32]
  4051d8:	ldp	x29, x30, [sp], #48
  4051dc:	ret
  4051e0:	ldr	x3, [x0, #72]
  4051e4:	ldr	x2, [x1, #72]
  4051e8:	cmp	x3, x2
  4051ec:	b.gt	405208 <__fxstatat@plt+0x27b8>
  4051f0:	b.ne	405200 <__fxstatat@plt+0x27b0>  // b.any
  4051f4:	ldr	x0, [x0]
  4051f8:	ldr	x1, [x1]
  4051fc:	b	402800 <strcmp@plt>
  405200:	cset	w0, lt  // lt = tstop
  405204:	ret
  405208:	mov	w0, #0xffffffff            	// #-1
  40520c:	ret
  405210:	ldr	w4, [x1, #152]
  405214:	ldr	w3, [x0, #152]
  405218:	cmp	w4, #0x9
  40521c:	cset	w2, eq  // eq = none
  405220:	cmp	w4, #0x3
  405224:	csinc	w2, w2, wzr, ne  // ne = any
  405228:	cmp	w3, #0x3
  40522c:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  405230:	b.eq	405250 <__fxstatat@plt+0x2800>  // b.none
  405234:	ldr	w3, [x0, #156]
  405238:	and	w3, w3, #0xf000
  40523c:	cbz	w2, 40526c <__fxstatat@plt+0x281c>
  405240:	cmp	w3, #0x4, lsl #12
  405244:	b.eq	405284 <__fxstatat@plt+0x2834>  // b.none
  405248:	mov	w0, #0x1                   	// #1
  40524c:	ret
  405250:	cbnz	w2, 405284 <__fxstatat@plt+0x2834>
  405254:	ldr	w2, [x1, #156]
  405258:	and	w2, w2, #0xf000
  40525c:	cmp	w2, #0x4, lsl #12
  405260:	b.eq	405284 <__fxstatat@plt+0x2834>  // b.none
  405264:	mov	w0, #0xffffffff            	// #-1
  405268:	ret
  40526c:	ldr	w2, [x1, #156]
  405270:	and	w2, w2, #0xf000
  405274:	cmp	w2, #0x4, lsl #12
  405278:	b.eq	405240 <__fxstatat@plt+0x27f0>  // b.none
  40527c:	cmp	w3, #0x4, lsl #12
  405280:	b.eq	405264 <__fxstatat@plt+0x2814>  // b.none
  405284:	ldr	x0, [x0]
  405288:	ldr	x1, [x1]
  40528c:	b	404bf8 <__fxstatat@plt+0x21a8>
  405290:	ldr	w4, [x1, #152]
  405294:	ldr	w3, [x0, #152]
  405298:	cmp	w4, #0x9
  40529c:	cset	w2, eq  // eq = none
  4052a0:	cmp	w4, #0x3
  4052a4:	csinc	w2, w2, wzr, ne  // ne = any
  4052a8:	cmp	w3, #0x3
  4052ac:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  4052b0:	b.eq	4052d0 <__fxstatat@plt+0x2880>  // b.none
  4052b4:	ldr	w3, [x0, #156]
  4052b8:	and	w3, w3, #0xf000
  4052bc:	cbz	w2, 4052f8 <__fxstatat@plt+0x28a8>
  4052c0:	cmp	w3, #0x4, lsl #12
  4052c4:	b.eq	4052d4 <__fxstatat@plt+0x2884>  // b.none
  4052c8:	mov	w0, #0x1                   	// #1
  4052cc:	ret
  4052d0:	cbz	w2, 4052e0 <__fxstatat@plt+0x2890>
  4052d4:	ldr	x0, [x0]
  4052d8:	ldr	x1, [x1]
  4052dc:	b	402800 <strcmp@plt>
  4052e0:	ldr	w2, [x1, #156]
  4052e4:	and	w2, w2, #0xf000
  4052e8:	cmp	w2, #0x4, lsl #12
  4052ec:	b.eq	4052d4 <__fxstatat@plt+0x2884>  // b.none
  4052f0:	mov	w0, #0xffffffff            	// #-1
  4052f4:	ret
  4052f8:	ldr	w2, [x1, #156]
  4052fc:	and	w2, w2, #0xf000
  405300:	cmp	w2, #0x4, lsl #12
  405304:	b.eq	4052c0 <__fxstatat@plt+0x2870>  // b.none
  405308:	cmp	w3, #0x4, lsl #12
  40530c:	b.eq	4052f0 <__fxstatat@plt+0x28a0>  // b.none
  405310:	ldr	x0, [x0]
  405314:	ldr	x1, [x1]
  405318:	b	402800 <strcmp@plt>
  40531c:	nop
  405320:	ldr	w4, [x1, #152]
  405324:	mov	x2, x1
  405328:	ldr	w3, [x0, #152]
  40532c:	cmp	w4, #0x9
  405330:	cset	w1, eq  // eq = none
  405334:	cmp	w4, #0x3
  405338:	csinc	w1, w1, wzr, ne  // ne = any
  40533c:	cmp	w3, #0x3
  405340:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  405344:	b.eq	405364 <__fxstatat@plt+0x2914>  // b.none
  405348:	ldr	w3, [x0, #156]
  40534c:	and	w3, w3, #0xf000
  405350:	cbz	w1, 405380 <__fxstatat@plt+0x2930>
  405354:	cmp	w3, #0x4, lsl #12
  405358:	b.eq	405398 <__fxstatat@plt+0x2948>  // b.none
  40535c:	mov	w0, #0x1                   	// #1
  405360:	ret
  405364:	cbnz	w1, 405398 <__fxstatat@plt+0x2948>
  405368:	ldr	w1, [x2, #156]
  40536c:	and	w1, w1, #0xf000
  405370:	cmp	w1, #0x4, lsl #12
  405374:	b.eq	405398 <__fxstatat@plt+0x2948>  // b.none
  405378:	mov	w0, #0xffffffff            	// #-1
  40537c:	ret
  405380:	ldr	w1, [x2, #156]
  405384:	and	w1, w1, #0xf000
  405388:	cmp	w1, #0x4, lsl #12
  40538c:	b.eq	405354 <__fxstatat@plt+0x2904>  // b.none
  405390:	cmp	w3, #0x4, lsl #12
  405394:	b.eq	405378 <__fxstatat@plt+0x2928>  // b.none
  405398:	ldr	x1, [x0]
  40539c:	ldr	x0, [x2]
  4053a0:	b	404bf8 <__fxstatat@plt+0x21a8>
  4053a4:	nop
  4053a8:	ldr	w4, [x1, #152]
  4053ac:	mov	x2, x1
  4053b0:	ldr	w3, [x0, #152]
  4053b4:	cmp	w4, #0x9
  4053b8:	cset	w1, eq  // eq = none
  4053bc:	cmp	w4, #0x3
  4053c0:	csinc	w1, w1, wzr, ne  // ne = any
  4053c4:	cmp	w3, #0x3
  4053c8:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  4053cc:	b.eq	4053ec <__fxstatat@plt+0x299c>  // b.none
  4053d0:	ldr	w3, [x0, #156]
  4053d4:	and	w3, w3, #0xf000
  4053d8:	cbz	w1, 405414 <__fxstatat@plt+0x29c4>
  4053dc:	cmp	w3, #0x4, lsl #12
  4053e0:	b.eq	4053f0 <__fxstatat@plt+0x29a0>  // b.none
  4053e4:	mov	w0, #0x1                   	// #1
  4053e8:	ret
  4053ec:	cbz	w1, 4053fc <__fxstatat@plt+0x29ac>
  4053f0:	ldr	x1, [x0]
  4053f4:	ldr	x0, [x2]
  4053f8:	b	402800 <strcmp@plt>
  4053fc:	ldr	w1, [x2, #156]
  405400:	and	w1, w1, #0xf000
  405404:	cmp	w1, #0x4, lsl #12
  405408:	b.eq	4053f0 <__fxstatat@plt+0x29a0>  // b.none
  40540c:	mov	w0, #0xffffffff            	// #-1
  405410:	ret
  405414:	ldr	w1, [x2, #156]
  405418:	and	w1, w1, #0xf000
  40541c:	cmp	w1, #0x4, lsl #12
  405420:	b.eq	4053dc <__fxstatat@plt+0x298c>  // b.none
  405424:	cmp	w3, #0x4, lsl #12
  405428:	b.eq	40540c <__fxstatat@plt+0x29bc>  // b.none
  40542c:	ldr	x1, [x0]
  405430:	ldr	x0, [x2]
  405434:	b	402800 <strcmp@plt>
  405438:	ands	w4, w0, #0xff
  40543c:	b.eq	405464 <__fxstatat@plt+0x2a14>  // b.none
  405440:	and	w3, w1, #0xf000
  405444:	cmp	w3, #0x8, lsl #12
  405448:	b.ne	4054d4 <__fxstatat@plt+0x2a84>  // b.any
  40544c:	adrp	x2, 430000 <__progname@@GLIBC_2.17+0xa48>
  405450:	mov	w0, #0x0                   	// #0
  405454:	ldr	w2, [x2, #1148]
  405458:	cmp	w2, #0x3
  40545c:	b.eq	405504 <__fxstatat@plt+0x2ab4>  // b.none
  405460:	ret
  405464:	cmp	w2, #0x5
  405468:	mov	w0, #0x0                   	// #0
  40546c:	b.eq	405460 <__fxstatat@plt+0x2a10>  // b.none
  405470:	cmp	w2, #0x3
  405474:	cset	w3, eq  // eq = none
  405478:	cmp	w2, #0x9
  40547c:	csinc	w3, w3, wzr, ne  // ne = any
  405480:	mov	w0, #0x2f                  	// #47
  405484:	cbnz	w3, 405460 <__fxstatat@plt+0x2a10>
  405488:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  40548c:	mov	w0, #0x0                   	// #0
  405490:	ldr	w3, [x3, #1148]
  405494:	cmp	w3, #0x1
  405498:	b.eq	405460 <__fxstatat@plt+0x2a10>  // b.none
  40549c:	cbz	w4, 4054e0 <__fxstatat@plt+0x2a90>
  4054a0:	and	w1, w1, #0xf000
  4054a4:	mov	w0, #0x40                  	// #64
  4054a8:	cmp	w1, #0xa, lsl #12
  4054ac:	b.eq	405460 <__fxstatat@plt+0x2a10>  // b.none
  4054b0:	cmp	w1, #0x1, lsl #12
  4054b4:	mov	w0, #0x7c                  	// #124
  4054b8:	b.eq	405460 <__fxstatat@plt+0x2a10>  // b.none
  4054bc:	cmp	w1, #0xc, lsl #12
  4054c0:	cset	w0, eq  // eq = none
  4054c4:	cmp	w0, #0x0
  4054c8:	mov	w0, #0x3d                  	// #61
  4054cc:	csel	w0, wzr, w0, eq  // eq = none
  4054d0:	ret
  4054d4:	cmp	w3, #0x4, lsl #12
  4054d8:	cset	w3, eq  // eq = none
  4054dc:	b	405480 <__fxstatat@plt+0x2a30>
  4054e0:	cmp	w2, #0x6
  4054e4:	mov	w0, #0x40                  	// #64
  4054e8:	b.eq	405460 <__fxstatat@plt+0x2a10>  // b.none
  4054ec:	cmp	w2, #0x1
  4054f0:	mov	w0, #0x7c                  	// #124
  4054f4:	b.eq	405460 <__fxstatat@plt+0x2a10>  // b.none
  4054f8:	cmp	w2, #0x7
  4054fc:	cset	w0, eq  // eq = none
  405500:	b	4054c4 <__fxstatat@plt+0x2a74>
  405504:	mov	w0, #0x49                  	// #73
  405508:	tst	w1, w0
  40550c:	mov	w0, #0x2a                  	// #42
  405510:	csel	w0, wzr, w0, eq  // eq = none
  405514:	ret
  405518:	stp	x29, x30, [sp, #-32]!
  40551c:	mov	x29, sp
  405520:	str	x19, [sp, #16]
  405524:	bl	405438 <__fxstatat@plt+0x29e8>
  405528:	ands	w19, w0, #0xff
  40552c:	b.eq	405564 <__fxstatat@plt+0x2b14>  // b.none
  405530:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  405534:	ldr	x1, [x1, #1456]
  405538:	ldp	x2, x3, [x1, #40]
  40553c:	cmp	x2, x3
  405540:	b.cs	405578 <__fxstatat@plt+0x2b28>  // b.hs, b.nlast
  405544:	add	x3, x2, #0x1
  405548:	str	x3, [x1, #40]
  40554c:	strb	w0, [x2]
  405550:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  405554:	add	x0, x0, #0x5c8
  405558:	ldr	x1, [x0, #3744]
  40555c:	add	x1, x1, #0x1
  405560:	str	x1, [x0, #3744]
  405564:	cmp	w19, #0x0
  405568:	cset	w0, ne  // ne = any
  40556c:	ldr	x19, [sp, #16]
  405570:	ldp	x29, x30, [sp], #32
  405574:	ret
  405578:	mov	x0, x1
  40557c:	mov	w1, w19
  405580:	bl	402780 <__overflow@plt>
  405584:	b	405550 <__fxstatat@plt+0x2b00>
  405588:	mov	x2, x0
  40558c:	ldr	w4, [x1, #152]
  405590:	cmp	w4, #0x9
  405594:	ldr	w3, [x2, #152]
  405598:	cset	w0, eq  // eq = none
  40559c:	cmp	w4, #0x3
  4055a0:	csinc	w0, w0, wzr, ne  // ne = any
  4055a4:	cmp	w3, #0x3
  4055a8:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  4055ac:	b.eq	4055cc <__fxstatat@plt+0x2b7c>  // b.none
  4055b0:	ldr	w3, [x2, #156]
  4055b4:	and	w3, w3, #0xf000
  4055b8:	cbz	w0, 4055e8 <__fxstatat@plt+0x2b98>
  4055bc:	cmp	w3, #0x4, lsl #12
  4055c0:	b.eq	405600 <__fxstatat@plt+0x2bb0>  // b.none
  4055c4:	mov	w0, #0x1                   	// #1
  4055c8:	ret
  4055cc:	cbnz	w0, 405600 <__fxstatat@plt+0x2bb0>
  4055d0:	ldr	w0, [x1, #156]
  4055d4:	and	w0, w0, #0xf000
  4055d8:	cmp	w0, #0x4, lsl #12
  4055dc:	b.eq	405600 <__fxstatat@plt+0x2bb0>  // b.none
  4055e0:	mov	w0, #0xffffffff            	// #-1
  4055e4:	ret
  4055e8:	ldr	w0, [x1, #156]
  4055ec:	and	w0, w0, #0xf000
  4055f0:	cmp	w0, #0x4, lsl #12
  4055f4:	b.eq	4055bc <__fxstatat@plt+0x2b6c>  // b.none
  4055f8:	cmp	w3, #0x4, lsl #12
  4055fc:	b.eq	4055e0 <__fxstatat@plt+0x2b90>  // b.none
  405600:	ldr	x3, [x1, #96]
  405604:	ldr	x0, [x2, #96]
  405608:	cmp	x3, x0
  40560c:	b.lt	4055e0 <__fxstatat@plt+0x2b90>  // b.tstop
  405610:	b.gt	4055c4 <__fxstatat@plt+0x2b74>
  405614:	ldr	x0, [x1, #104]
  405618:	ldr	x3, [x2, #104]
  40561c:	subs	w0, w0, w3
  405620:	b.ne	4055c8 <__fxstatat@plt+0x2b78>  // b.any
  405624:	ldr	x1, [x1]
  405628:	ldr	x0, [x2]
  40562c:	b	402800 <strcmp@plt>
  405630:	ldr	w4, [x1, #152]
  405634:	mov	x2, x1
  405638:	ldr	w3, [x0, #152]
  40563c:	cmp	w4, #0x9
  405640:	cset	w1, eq  // eq = none
  405644:	cmp	w4, #0x3
  405648:	csinc	w1, w1, wzr, ne  // ne = any
  40564c:	cmp	w3, #0x3
  405650:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  405654:	b.eq	405674 <__fxstatat@plt+0x2c24>  // b.none
  405658:	ldr	w3, [x0, #156]
  40565c:	and	w3, w3, #0xf000
  405660:	cbz	w1, 40569c <__fxstatat@plt+0x2c4c>
  405664:	cmp	w3, #0x4, lsl #12
  405668:	b.eq	405678 <__fxstatat@plt+0x2c28>  // b.none
  40566c:	mov	w0, #0x1                   	// #1
  405670:	ret
  405674:	cbz	w1, 405684 <__fxstatat@plt+0x2c34>
  405678:	ldr	x1, [x0]
  40567c:	ldr	x0, [x2]
  405680:	b	40b828 <__fxstatat@plt+0x8dd8>
  405684:	ldr	w1, [x2, #156]
  405688:	and	w1, w1, #0xf000
  40568c:	cmp	w1, #0x4, lsl #12
  405690:	b.eq	405678 <__fxstatat@plt+0x2c28>  // b.none
  405694:	mov	w0, #0xffffffff            	// #-1
  405698:	ret
  40569c:	ldr	w1, [x2, #156]
  4056a0:	and	w1, w1, #0xf000
  4056a4:	cmp	w1, #0x4, lsl #12
  4056a8:	b.eq	405664 <__fxstatat@plt+0x2c14>  // b.none
  4056ac:	cmp	w3, #0x4, lsl #12
  4056b0:	b.eq	405694 <__fxstatat@plt+0x2c44>  // b.none
  4056b4:	ldr	x1, [x0]
  4056b8:	ldr	x0, [x2]
  4056bc:	b	40b828 <__fxstatat@plt+0x8dd8>
  4056c0:	ldr	w4, [x1, #152]
  4056c4:	ldr	w3, [x0, #152]
  4056c8:	cmp	w4, #0x9
  4056cc:	cset	w2, eq  // eq = none
  4056d0:	cmp	w4, #0x3
  4056d4:	csinc	w2, w2, wzr, ne  // ne = any
  4056d8:	cmp	w3, #0x3
  4056dc:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  4056e0:	b.eq	405700 <__fxstatat@plt+0x2cb0>  // b.none
  4056e4:	ldr	w3, [x0, #156]
  4056e8:	and	w3, w3, #0xf000
  4056ec:	cbz	w2, 405728 <__fxstatat@plt+0x2cd8>
  4056f0:	cmp	w3, #0x4, lsl #12
  4056f4:	b.eq	405704 <__fxstatat@plt+0x2cb4>  // b.none
  4056f8:	mov	w0, #0x1                   	// #1
  4056fc:	ret
  405700:	cbz	w2, 405710 <__fxstatat@plt+0x2cc0>
  405704:	ldr	x0, [x0]
  405708:	ldr	x1, [x1]
  40570c:	b	40b828 <__fxstatat@plt+0x8dd8>
  405710:	ldr	w2, [x1, #156]
  405714:	and	w2, w2, #0xf000
  405718:	cmp	w2, #0x4, lsl #12
  40571c:	b.eq	405704 <__fxstatat@plt+0x2cb4>  // b.none
  405720:	mov	w0, #0xffffffff            	// #-1
  405724:	ret
  405728:	ldr	w2, [x1, #156]
  40572c:	and	w2, w2, #0xf000
  405730:	cmp	w2, #0x4, lsl #12
  405734:	b.eq	4056f0 <__fxstatat@plt+0x2ca0>  // b.none
  405738:	cmp	w3, #0x4, lsl #12
  40573c:	b.eq	405720 <__fxstatat@plt+0x2cd0>  // b.none
  405740:	ldr	x0, [x0]
  405744:	ldr	x1, [x1]
  405748:	b	40b828 <__fxstatat@plt+0x8dd8>
  40574c:	nop
  405750:	stp	x29, x30, [sp, #-48]!
  405754:	mov	x29, sp
  405758:	ldr	w3, [x1, #152]
  40575c:	ldr	w2, [x0, #152]
  405760:	cmp	w3, #0x9
  405764:	stp	x19, x20, [sp, #16]
  405768:	mov	x19, x0
  40576c:	cset	w0, eq  // eq = none
  405770:	cmp	w3, #0x3
  405774:	csinc	w0, w0, wzr, ne  // ne = any
  405778:	cmp	w2, #0x3
  40577c:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  405780:	b.eq	4057a8 <__fxstatat@plt+0x2d58>  // b.none
  405784:	ldr	w2, [x19, #156]
  405788:	and	w2, w2, #0xf000
  40578c:	cbz	w0, 4057cc <__fxstatat@plt+0x2d7c>
  405790:	cmp	w2, #0x4, lsl #12
  405794:	b.eq	4057e4 <__fxstatat@plt+0x2d94>  // b.none
  405798:	mov	w0, #0x1                   	// #1
  40579c:	ldp	x19, x20, [sp, #16]
  4057a0:	ldp	x29, x30, [sp], #48
  4057a4:	ret
  4057a8:	cbnz	w0, 4057e4 <__fxstatat@plt+0x2d94>
  4057ac:	ldr	w0, [x1, #156]
  4057b0:	and	w0, w0, #0xf000
  4057b4:	cmp	w0, #0x4, lsl #12
  4057b8:	b.eq	4057e4 <__fxstatat@plt+0x2d94>  // b.none
  4057bc:	mov	w0, #0xffffffff            	// #-1
  4057c0:	ldp	x19, x20, [sp, #16]
  4057c4:	ldp	x29, x30, [sp], #48
  4057c8:	ret
  4057cc:	ldr	w0, [x1, #156]
  4057d0:	and	w0, w0, #0xf000
  4057d4:	cmp	w0, #0x4, lsl #12
  4057d8:	b.eq	405790 <__fxstatat@plt+0x2d40>  // b.none
  4057dc:	cmp	w2, #0x4, lsl #12
  4057e0:	b.eq	4057bc <__fxstatat@plt+0x2d6c>  // b.none
  4057e4:	ldr	x20, [x1]
  4057e8:	mov	w1, #0x2e                  	// #46
  4057ec:	str	x21, [sp, #32]
  4057f0:	mov	x0, x20
  4057f4:	bl	402720 <strrchr@plt>
  4057f8:	ldr	x21, [x19]
  4057fc:	mov	w1, #0x2e                  	// #46
  405800:	mov	x19, x0
  405804:	mov	x0, x21
  405808:	bl	402720 <strrchr@plt>
  40580c:	mov	x1, x0
  405810:	cbz	x19, 405840 <__fxstatat@plt+0x2df0>
  405814:	cmp	x0, #0x0
  405818:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40581c:	add	x0, x0, #0xf0
  405820:	csel	x1, x0, x1, eq  // eq = none
  405824:	mov	x0, x19
  405828:	bl	402800 <strcmp@plt>
  40582c:	cbz	w0, 40584c <__fxstatat@plt+0x2dfc>
  405830:	ldp	x19, x20, [sp, #16]
  405834:	ldr	x21, [sp, #32]
  405838:	ldp	x29, x30, [sp], #48
  40583c:	ret
  405840:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x2ce0>
  405844:	add	x19, x19, #0xf0
  405848:	cbnz	x0, 405824 <__fxstatat@plt+0x2dd4>
  40584c:	mov	x1, x21
  405850:	mov	x0, x20
  405854:	ldp	x19, x20, [sp, #16]
  405858:	ldr	x21, [sp, #32]
  40585c:	ldp	x29, x30, [sp], #48
  405860:	b	402800 <strcmp@plt>
  405864:	nop
  405868:	stp	x29, x30, [sp, #-32]!
  40586c:	mov	x29, sp
  405870:	str	x19, [sp, #16]
  405874:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  405878:	add	x19, x19, #0x368
  40587c:	ldr	x0, [x19, #40]
  405880:	cbz	x0, 405898 <__fxstatat@plt+0x2e48>
  405884:	add	x1, x19, #0x28
  405888:	add	x0, x19, #0x20
  40588c:	ldr	x19, [sp, #16]
  405890:	ldp	x29, x30, [sp], #32
  405894:	b	4058c8 <__fxstatat@plt+0x2e78>
  405898:	add	x1, x19, #0x8
  40589c:	mov	x0, x19
  4058a0:	bl	4058c8 <__fxstatat@plt+0x2e78>
  4058a4:	add	x1, x19, #0x38
  4058a8:	add	x0, x19, #0x30
  4058ac:	bl	4058c8 <__fxstatat@plt+0x2e78>
  4058b0:	add	x1, x19, #0x18
  4058b4:	add	x0, x19, #0x10
  4058b8:	ldr	x19, [sp, #16]
  4058bc:	ldp	x29, x30, [sp], #32
  4058c0:	b	4058c8 <__fxstatat@plt+0x2e78>
  4058c4:	nop
  4058c8:	stp	x29, x30, [sp, #-256]!
  4058cc:	mov	x29, sp
  4058d0:	stp	x19, x20, [sp, #16]
  4058d4:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4058d8:	add	x19, x19, #0x5c8
  4058dc:	stp	x23, x24, [sp, #48]
  4058e0:	mov	x23, x0
  4058e4:	ldrb	w0, [x19, #3768]
  4058e8:	stp	x21, x22, [sp, #32]
  4058ec:	mov	x22, x1
  4058f0:	cbz	w0, 405920 <__fxstatat@plt+0x2ed0>
  4058f4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4058f8:	mov	x2, #0x1                   	// #1
  4058fc:	ldr	x1, [x23]
  405900:	ldr	x3, [x0, #1456]
  405904:	ldr	x0, [x22]
  405908:	bl	402410 <fwrite_unlocked@plt>
  40590c:	ldp	x19, x20, [sp, #16]
  405910:	ldp	x21, x22, [sp, #32]
  405914:	ldp	x23, x24, [sp, #48]
  405918:	ldp	x29, x30, [sp], #256
  40591c:	ret
  405920:	mov	w1, #0x1                   	// #1
  405924:	mov	w0, #0x1                   	// #1
  405928:	strb	w1, [x19, #3768]
  40592c:	bl	402730 <tcgetpgrp@plt>
  405930:	tbz	w0, #31, 40593c <__fxstatat@plt+0x2eec>
  405934:	bl	405868 <__fxstatat@plt+0x2e18>
  405938:	b	4058f4 <__fxstatat@plt+0x2ea4>
  40593c:	adrp	x24, 417000 <_obstack_memory_used@@Base+0x3ce0>
  405940:	add	x24, x24, #0xf08
  405944:	add	x20, x24, #0x1d0
  405948:	stp	x25, x26, [sp, #64]
  40594c:	add	x26, x19, #0xec0
  405950:	mov	x0, x26
  405954:	add	x24, x24, #0x200
  405958:	mov	x21, x20
  40595c:	mov	w25, #0x14                  	// #20
  405960:	str	x27, [sp, #80]
  405964:	bl	402630 <sigemptyset@plt>
  405968:	b	405970 <__fxstatat@plt+0x2f20>
  40596c:	ldr	w25, [x21]
  405970:	add	x2, sp, #0x68
  405974:	mov	x1, #0x0                   	// #0
  405978:	mov	w0, w25
  40597c:	bl	402710 <sigaction@plt>
  405980:	ldr	x2, [sp, #104]
  405984:	add	x21, x21, #0x4
  405988:	mov	w1, w25
  40598c:	mov	x0, x26
  405990:	cmp	x2, #0x1
  405994:	b.eq	40599c <__fxstatat@plt+0x2f4c>  // b.none
  405998:	bl	4029b0 <sigaddset@plt>
  40599c:	cmp	x24, x21
  4059a0:	b.ne	40596c <__fxstatat@plt+0x2f1c>  // b.any
  4059a4:	add	x19, x19, #0xec0
  4059a8:	adrp	x27, 404000 <__fxstatat@plt+0x15b0>
  4059ac:	adrp	x26, 405000 <__fxstatat@plt+0x25b0>
  4059b0:	mov	w6, #0x10000000            	// #268435456
  4059b4:	mov	x25, x19
  4059b8:	add	x27, x27, #0x270
  4059bc:	ldp	x2, x3, [x19]
  4059c0:	stp	x2, x3, [sp, #112]
  4059c4:	add	x26, x26, #0x130
  4059c8:	ldp	x0, x1, [x19, #16]
  4059cc:	stp	x0, x1, [sp, #128]
  4059d0:	mov	w21, #0x14                  	// #20
  4059d4:	ldp	x4, x5, [x19, #32]
  4059d8:	stp	x4, x5, [sp, #144]
  4059dc:	ldp	x2, x3, [x19, #48]
  4059e0:	stp	x2, x3, [sp, #160]
  4059e4:	ldp	x0, x1, [x19, #64]
  4059e8:	stp	x0, x1, [sp, #176]
  4059ec:	ldp	x4, x5, [x19, #80]
  4059f0:	stp	x4, x5, [sp, #192]
  4059f4:	ldp	x2, x3, [x19, #96]
  4059f8:	stp	x2, x3, [sp, #208]
  4059fc:	ldp	x0, x1, [x19, #112]
  405a00:	stp	x0, x1, [sp, #224]
  405a04:	str	w6, [sp, #240]
  405a08:	b	405a10 <__fxstatat@plt+0x2fc0>
  405a0c:	ldr	w21, [x20]
  405a10:	mov	w1, w21
  405a14:	mov	x0, x25
  405a18:	bl	4027f0 <sigismember@plt>
  405a1c:	add	x20, x20, #0x4
  405a20:	cmp	w21, #0x14
  405a24:	cbz	w0, 405a40 <__fxstatat@plt+0x2ff0>
  405a28:	csel	x3, x26, x27, eq  // eq = none
  405a2c:	mov	w0, w21
  405a30:	add	x1, sp, #0x68
  405a34:	mov	x2, #0x0                   	// #0
  405a38:	str	x3, [sp, #104]
  405a3c:	bl	402710 <sigaction@plt>
  405a40:	cmp	x24, x20
  405a44:	b.ne	405a0c <__fxstatat@plt+0x2fbc>  // b.any
  405a48:	ldp	x25, x26, [sp, #64]
  405a4c:	ldr	x27, [sp, #80]
  405a50:	bl	405868 <__fxstatat@plt+0x2e18>
  405a54:	b	4058f4 <__fxstatat@plt+0x2ea4>
  405a58:	stp	x29, x30, [sp, #-32]!
  405a5c:	mov	x29, sp
  405a60:	str	x19, [sp, #16]
  405a64:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  405a68:	add	x19, x19, #0x368
  405a6c:	add	x1, x19, #0x8
  405a70:	mov	x0, x19
  405a74:	bl	4058c8 <__fxstatat@plt+0x2e78>
  405a78:	add	x1, x19, #0x18
  405a7c:	add	x0, x19, #0x10
  405a80:	ldr	x19, [sp, #16]
  405a84:	ldp	x29, x30, [sp], #32
  405a88:	b	4058c8 <__fxstatat@plt+0x2e78>
  405a8c:	nop
  405a90:	stp	x29, x30, [sp, #-176]!
  405a94:	mov	x29, sp
  405a98:	stp	x19, x20, [sp, #16]
  405a9c:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  405aa0:	add	x19, x19, #0x5c8
  405aa4:	stp	x21, x22, [sp, #32]
  405aa8:	add	x22, x19, #0xec0
  405aac:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  405ab0:	b	405afc <__fxstatat@plt+0x30ac>
  405ab4:	ldr	x0, [x21, #1456]
  405ab8:	bl	4028b0 <fflush_unlocked@plt>
  405abc:	mov	x1, x22
  405ac0:	add	x2, sp, #0x30
  405ac4:	mov	w0, #0x0                   	// #0
  405ac8:	bl	4024a0 <sigprocmask@plt>
  405acc:	ldr	w20, [x19]
  405ad0:	ldr	w0, [x19, #3756]
  405ad4:	sub	w1, w0, #0x1
  405ad8:	cbz	w0, 405b1c <__fxstatat@plt+0x30cc>
  405adc:	mov	w20, #0x13                  	// #19
  405ae0:	str	w1, [x19, #3756]
  405ae4:	mov	w0, w20
  405ae8:	bl	402480 <raise@plt>
  405aec:	add	x1, sp, #0x30
  405af0:	mov	x2, #0x0                   	// #0
  405af4:	mov	w0, #0x2                   	// #2
  405af8:	bl	4024a0 <sigprocmask@plt>
  405afc:	ldr	w0, [x19]
  405b00:	cbnz	w0, 405b0c <__fxstatat@plt+0x30bc>
  405b04:	ldr	w0, [x19, #3756]
  405b08:	cbz	w0, 405b2c <__fxstatat@plt+0x30dc>
  405b0c:	ldrb	w0, [x19, #3768]
  405b10:	cbz	w0, 405ab4 <__fxstatat@plt+0x3064>
  405b14:	bl	405a58 <__fxstatat@plt+0x3008>
  405b18:	b	405ab4 <__fxstatat@plt+0x3064>
  405b1c:	mov	w0, w20
  405b20:	mov	x1, #0x0                   	// #0
  405b24:	bl	4025b0 <signal@plt>
  405b28:	b	405ae4 <__fxstatat@plt+0x3094>
  405b2c:	ldp	x19, x20, [sp, #16]
  405b30:	ldp	x21, x22, [sp, #32]
  405b34:	ldp	x29, x30, [sp], #176
  405b38:	ret
  405b3c:	nop
  405b40:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  405b44:	ldrb	w0, [x0, #1288]
  405b48:	cbnz	w0, 405b50 <__fxstatat@plt+0x3100>
  405b4c:	ret
  405b50:	stp	x29, x30, [sp, #-32]!
  405b54:	mov	w0, #0x4                   	// #4
  405b58:	mov	x29, sp
  405b5c:	bl	404540 <__fxstatat@plt+0x1af0>
  405b60:	tst	w0, #0xff
  405b64:	b.ne	405b70 <__fxstatat@plt+0x3120>  // b.any
  405b68:	ldp	x29, x30, [sp], #32
  405b6c:	ret
  405b70:	str	x19, [sp, #16]
  405b74:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  405b78:	add	x19, x19, #0x368
  405b7c:	add	x1, x19, #0x8
  405b80:	mov	x0, x19
  405b84:	bl	4058c8 <__fxstatat@plt+0x2e78>
  405b88:	add	x1, x19, #0x48
  405b8c:	add	x0, x19, #0x40
  405b90:	bl	4058c8 <__fxstatat@plt+0x2e78>
  405b94:	add	x1, x19, #0x18
  405b98:	add	x0, x19, #0x10
  405b9c:	ldr	x19, [sp, #16]
  405ba0:	ldp	x29, x30, [sp], #32
  405ba4:	b	4058c8 <__fxstatat@plt+0x2e78>
  405ba8:	stp	x29, x30, [sp, #-144]!
  405bac:	mov	x29, sp
  405bb0:	stp	x23, x24, [sp, #48]
  405bb4:	adrp	x23, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  405bb8:	add	x23, x23, #0x5c8
  405bbc:	stp	x19, x20, [sp, #16]
  405bc0:	mov	x20, x1
  405bc4:	stp	x21, x22, [sp, #32]
  405bc8:	mov	x21, x2
  405bcc:	stp	x25, x26, [sp, #64]
  405bd0:	mov	x25, x4
  405bd4:	stp	x27, x28, [sp, #80]
  405bd8:	mov	w27, w3
  405bdc:	stp	x0, x5, [sp, #112]
  405be0:	ldr	x22, [x0]
  405be4:	mov	x0, x2
  405be8:	bl	411118 <__fxstatat@plt+0xe6c8>
  405bec:	cmp	w0, #0x2
  405bf0:	ldrb	w0, [x23, #3905]
  405bf4:	cset	w24, ls  // ls = plast
  405bf8:	ands	w0, w24, w0
  405bfc:	str	w0, [sp, #108]
  405c00:	b.ne	405d54 <__fxstatat@plt+0x3304>  // b.any
  405c04:	mov	w28, #0x0                   	// #0
  405c08:	cbz	w27, 405cd4 <__fxstatat@plt+0x3284>
  405c0c:	mov	x1, #0x2000                	// #8192
  405c10:	mov	x4, x21
  405c14:	mov	x2, x20
  405c18:	mov	x0, x22
  405c1c:	mov	x3, #0xffffffffffffffff    	// #-1
  405c20:	bl	411200 <__fxstatat@plt+0xe7b0>
  405c24:	mov	x1, #0x1fff                	// #8191
  405c28:	mov	x27, x0
  405c2c:	cmp	x0, x1
  405c30:	b.hi	405f28 <__fxstatat@plt+0x34d8>  // b.pmore
  405c34:	mov	w0, #0x1                   	// #1
  405c38:	ldrb	w1, [x20]
  405c3c:	str	w0, [sp, #108]
  405c40:	ldrb	w0, [x22]
  405c44:	cmp	w1, w0
  405c48:	b.eq	405ea0 <__fxstatat@plt+0x3450>  // b.none
  405c4c:	cbnz	w28, 405f64 <__fxstatat@plt+0x3514>
  405c50:	cbz	x25, 405ce8 <__fxstatat@plt+0x3298>
  405c54:	bl	402850 <__ctype_get_mb_cur_max@plt>
  405c58:	cmp	x0, #0x1
  405c5c:	b.hi	405ed0 <__fxstatat@plt+0x3480>  // b.pmore
  405c60:	add	x20, x22, x27
  405c64:	cmp	x20, x22
  405c68:	b.ls	405f50 <__fxstatat@plt+0x3500>  // b.plast
  405c6c:	bl	402820 <__ctype_b_loc@plt>
  405c70:	mov	x19, #0x0                   	// #0
  405c74:	ldr	x0, [x0]
  405c78:	mov	x2, x22
  405c7c:	nop
  405c80:	ldrb	w1, [x2], #1
  405c84:	cmp	x20, x2
  405c88:	ldrh	w1, [x0, x1, lsl #1]
  405c8c:	ubfx	x1, x1, #14, #1
  405c90:	add	x19, x19, x1
  405c94:	b.ne	405c80 <__fxstatat@plt+0x3230>  // b.any
  405c98:	ldrb	w0, [x23, #3906]
  405c9c:	cbnz	w0, 405d34 <__fxstatat@plt+0x32e4>
  405ca0:	ldr	x0, [sp, #120]
  405ca4:	strb	wzr, [x0]
  405ca8:	str	x19, [x25]
  405cac:	ldr	x0, [sp, #112]
  405cb0:	ldp	x19, x20, [sp, #16]
  405cb4:	ldp	x23, x24, [sp, #48]
  405cb8:	ldp	x25, x26, [sp, #64]
  405cbc:	str	x22, [x0]
  405cc0:	mov	x0, x27
  405cc4:	ldp	x21, x22, [sp, #32]
  405cc8:	ldp	x27, x28, [sp, #80]
  405ccc:	ldp	x29, x30, [sp], #144
  405cd0:	ret
  405cd4:	mov	x0, x20
  405cd8:	mov	x22, x20
  405cdc:	bl	402430 <strlen@plt>
  405ce0:	mov	x27, x0
  405ce4:	cbnz	x25, 405c54 <__fxstatat@plt+0x3204>
  405ce8:	ldrb	w0, [x23, #3906]
  405cec:	cbnz	w0, 405d34 <__fxstatat@plt+0x32e4>
  405cf0:	ldr	x0, [sp, #120]
  405cf4:	strb	wzr, [x0]
  405cf8:	b	405cac <__fxstatat@plt+0x325c>
  405cfc:	sub	w2, w0, #0x25
  405d00:	and	w2, w2, #0xff
  405d04:	cmp	w2, #0x1a
  405d08:	b.hi	405dd4 <__fxstatat@plt+0x3384>  // b.pmore
  405d0c:	mov	x4, x24
  405d10:	add	x28, x28, #0x1
  405d14:	add	x19, x19, #0x1
  405d18:	strb	w0, [x4], #1
  405d1c:	mov	x24, x4
  405d20:	cmp	x20, x28
  405d24:	b.hi	405db0 <__fxstatat@plt+0x3360>  // b.pmore
  405d28:	sub	x27, x24, x22
  405d2c:	ldrb	w1, [x23, #3906]
  405d30:	cbz	w1, 405d44 <__fxstatat@plt+0x32f4>
  405d34:	ldr	w0, [sp, #108]
  405d38:	ldrb	w1, [x23, #3907]
  405d3c:	eor	w24, w0, #0x1
  405d40:	and	w1, w24, w1
  405d44:	ldr	x0, [sp, #120]
  405d48:	strb	w1, [x0]
  405d4c:	cbnz	x25, 405ca8 <__fxstatat@plt+0x3258>
  405d50:	b	405cac <__fxstatat@plt+0x325c>
  405d54:	cbnz	w27, 405f6c <__fxstatat@plt+0x351c>
  405d58:	mov	x0, x20
  405d5c:	bl	402430 <strlen@plt>
  405d60:	mov	x1, #0x1fff                	// #8191
  405d64:	mov	x19, x0
  405d68:	cmp	x0, x1
  405d6c:	add	x21, x0, #0x1
  405d70:	b.hi	405f18 <__fxstatat@plt+0x34c8>  // b.pmore
  405d74:	mov	x2, x21
  405d78:	mov	x1, x20
  405d7c:	mov	x0, x22
  405d80:	str	wzr, [sp, #108]
  405d84:	bl	4023c0 <memcpy@plt>
  405d88:	bl	402850 <__ctype_get_mb_cur_max@plt>
  405d8c:	add	x20, x22, x19
  405d90:	cmp	x0, #0x1
  405d94:	b.ls	405e64 <__fxstatat@plt+0x3414>  // b.plast
  405d98:	cmp	x20, x22
  405d9c:	b.ls	405f58 <__fxstatat@plt+0x3508>  // b.plast
  405da0:	mov	x24, x22
  405da4:	mov	x28, x22
  405da8:	mov	x19, #0x0                   	// #0
  405dac:	mov	x27, #0x1                   	// #1
  405db0:	ldrb	w0, [x28]
  405db4:	cmp	w0, #0x5f
  405db8:	b.hi	405ebc <__fxstatat@plt+0x346c>  // b.pmore
  405dbc:	cmp	w0, #0x40
  405dc0:	b.hi	405d0c <__fxstatat@plt+0x32bc>  // b.pmore
  405dc4:	cmp	w0, #0x23
  405dc8:	b.hi	405cfc <__fxstatat@plt+0x32ac>  // b.pmore
  405dcc:	cmp	w0, #0x1f
  405dd0:	b.hi	405d0c <__fxstatat@plt+0x32bc>  // b.pmore
  405dd4:	str	xzr, [sp, #136]
  405dd8:	b	405dfc <__fxstatat@plt+0x33ac>
  405ddc:	mov	w0, #0x3f                  	// #63
  405de0:	add	x28, x28, x26
  405de4:	add	x19, x19, #0x1
  405de8:	strb	w0, [x24]
  405dec:	mov	x24, x21
  405df0:	add	x0, sp, #0x88
  405df4:	bl	402770 <mbsinit@plt>
  405df8:	cbnz	w0, 405d20 <__fxstatat@plt+0x32d0>
  405dfc:	add	x3, sp, #0x88
  405e00:	sub	x2, x20, x28
  405e04:	mov	x1, x28
  405e08:	add	x0, sp, #0x84
  405e0c:	add	x21, x24, #0x1
  405e10:	bl	412f48 <__fxstatat@plt+0x104f8>
  405e14:	cmn	x0, #0x1
  405e18:	b.eq	405ee8 <__fxstatat@plt+0x3498>  // b.none
  405e1c:	cmn	x0, #0x2
  405e20:	b.eq	405f00 <__fxstatat@plt+0x34b0>  // b.none
  405e24:	cmp	x0, #0x0
  405e28:	csel	x26, x0, x27, ne  // ne = any
  405e2c:	ldr	w0, [sp, #132]
  405e30:	bl	402600 <wcwidth@plt>
  405e34:	tbnz	w0, #31, 405ddc <__fxstatat@plt+0x338c>
  405e38:	mov	x2, #0x0                   	// #0
  405e3c:	nop
  405e40:	ldrb	w5, [x28, x2]
  405e44:	strb	w5, [x24, x2]
  405e48:	add	x2, x2, #0x1
  405e4c:	cmp	x26, x2
  405e50:	b.ne	405e40 <__fxstatat@plt+0x33f0>  // b.any
  405e54:	add	x28, x28, x26
  405e58:	add	x24, x24, x26
  405e5c:	add	x19, x19, w0, sxtw
  405e60:	b	405df0 <__fxstatat@plt+0x33a0>
  405e64:	cmp	x20, x22
  405e68:	b.ls	405e98 <__fxstatat@plt+0x3448>  // b.plast
  405e6c:	bl	402820 <__ctype_b_loc@plt>
  405e70:	mov	x1, x22
  405e74:	mov	w4, #0x3f                  	// #63
  405e78:	ldrb	w3, [x1]
  405e7c:	ldr	x2, [x0]
  405e80:	ldrh	w2, [x2, x3, lsl #1]
  405e84:	tbnz	w2, #14, 405e8c <__fxstatat@plt+0x343c>
  405e88:	strb	w4, [x1]
  405e8c:	add	x1, x1, #0x1
  405e90:	cmp	x1, x20
  405e94:	b.ne	405e78 <__fxstatat@plt+0x3428>  // b.any
  405e98:	mov	x27, x19
  405e9c:	b	405d2c <__fxstatat@plt+0x32dc>
  405ea0:	mov	x0, x20
  405ea4:	bl	402430 <strlen@plt>
  405ea8:	cmp	x27, x0
  405eac:	cset	w0, ne  // ne = any
  405eb0:	str	w0, [sp, #108]
  405eb4:	cbz	w28, 405c50 <__fxstatat@plt+0x3200>
  405eb8:	b	405f64 <__fxstatat@plt+0x3514>
  405ebc:	sub	w2, w0, #0x61
  405ec0:	and	w2, w2, #0xff
  405ec4:	cmp	w2, #0x1d
  405ec8:	b.ls	405d0c <__fxstatat@plt+0x32bc>  // b.plast
  405ecc:	b	405dd4 <__fxstatat@plt+0x3384>
  405ed0:	mov	x1, x27
  405ed4:	mov	x0, x22
  405ed8:	mov	w2, #0x0                   	// #0
  405edc:	bl	40df28 <__fxstatat@plt+0xb4d8>
  405ee0:	sxtw	x19, w0
  405ee4:	b	405c98 <__fxstatat@plt+0x3248>
  405ee8:	mov	w0, #0x3f                  	// #63
  405eec:	add	x28, x28, #0x1
  405ef0:	add	x19, x19, #0x1
  405ef4:	strb	w0, [x24]
  405ef8:	mov	x24, x21
  405efc:	b	405d20 <__fxstatat@plt+0x32d0>
  405f00:	mov	w0, #0x3f                  	// #63
  405f04:	add	x19, x19, #0x1
  405f08:	mov	x28, x20
  405f0c:	strb	w0, [x24]
  405f10:	mov	x24, x21
  405f14:	b	405d20 <__fxstatat@plt+0x32d0>
  405f18:	mov	x0, x21
  405f1c:	bl	411e78 <__fxstatat@plt+0xf428>
  405f20:	mov	x22, x0
  405f24:	b	405d74 <__fxstatat@plt+0x3324>
  405f28:	add	x24, x0, #0x1
  405f2c:	mov	x0, x24
  405f30:	bl	411e78 <__fxstatat@plt+0xf428>
  405f34:	mov	x1, x24
  405f38:	mov	x4, x21
  405f3c:	mov	x22, x0
  405f40:	mov	x2, x20
  405f44:	mov	x3, #0xffffffffffffffff    	// #-1
  405f48:	bl	411200 <__fxstatat@plt+0xe7b0>
  405f4c:	b	405c34 <__fxstatat@plt+0x31e4>
  405f50:	mov	x19, #0x0                   	// #0
  405f54:	b	405c98 <__fxstatat@plt+0x3248>
  405f58:	mov	x27, #0x0                   	// #0
  405f5c:	mov	x19, #0x0                   	// #0
  405f60:	b	405d2c <__fxstatat@plt+0x32dc>
  405f64:	mov	x19, x27
  405f68:	b	405d88 <__fxstatat@plt+0x3338>
  405f6c:	mov	w28, #0x1                   	// #1
  405f70:	b	405c0c <__fxstatat@plt+0x31bc>
  405f74:	nop
  405f78:	mov	x12, #0x2080                	// #8320
  405f7c:	sub	sp, sp, x12
  405f80:	stp	x29, x30, [sp]
  405f84:	mov	x29, sp
  405f88:	stp	x23, x24, [sp, #48]
  405f8c:	mov	x24, x0
  405f90:	mov	w0, w2
  405f94:	mov	x23, x3
  405f98:	mov	x2, x1
  405f9c:	mov	w3, w0
  405fa0:	mov	x1, x24
  405fa4:	add	x0, sp, #0x78
  405fa8:	stp	x19, x20, [sp, #16]
  405fac:	and	w19, w4, #0xff
  405fb0:	mov	x20, x5
  405fb4:	mov	x4, #0x0                   	// #0
  405fb8:	add	x5, sp, #0x77
  405fbc:	stp	x21, x22, [sp, #32]
  405fc0:	mov	x22, x6
  405fc4:	stp	x25, x26, [sp, #64]
  405fc8:	add	x26, sp, #0x80
  405fcc:	stp	x27, x28, [sp, #80]
  405fd0:	str	x26, [sp, #120]
  405fd4:	bl	405ba8 <__fxstatat@plt+0x3158>
  405fd8:	ldrb	w1, [sp, #119]
  405fdc:	mov	x21, x0
  405fe0:	tst	w19, w1
  405fe4:	b.ne	406234 <__fxstatat@plt+0x37e4>  // b.any
  405fe8:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  405fec:	add	x19, x19, #0x5c8
  405ff0:	adrp	x25, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  405ff4:	cbz	x23, 406034 <__fxstatat@plt+0x35e4>
  405ff8:	mov	w0, #0x4                   	// #4
  405ffc:	bl	404540 <__fxstatat@plt+0x1af0>
  406000:	tst	w0, #0xff
  406004:	b.ne	406270 <__fxstatat@plt+0x3820>  // b.any
  406008:	adrp	x27, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40600c:	add	x27, x27, #0x368
  406010:	add	x1, x27, #0x8
  406014:	mov	x0, x27
  406018:	bl	4058c8 <__fxstatat@plt+0x2e78>
  40601c:	add	x1, x23, #0x8
  406020:	mov	x0, x23
  406024:	bl	4058c8 <__fxstatat@plt+0x2e78>
  406028:	add	x1, x27, #0x18
  40602c:	add	x0, x27, #0x10
  406030:	bl	4058c8 <__fxstatat@plt+0x2e78>
  406034:	cbz	x22, 4061fc <__fxstatat@plt+0x37ac>
  406038:	ldrb	w27, [x19, #3906]
  40603c:	cbnz	w27, 406190 <__fxstatat@plt+0x3740>
  406040:	mov	x6, x21
  406044:	mov	x7, #0x0                   	// #0
  406048:	ldr	x0, [x19, #3912]
  40604c:	mov	w1, #0x0                   	// #0
  406050:	stp	x6, x7, [sp, #96]
  406054:	bl	404970 <__fxstatat@plt+0x1f20>
  406058:	mov	x28, x0
  40605c:	mov	w1, #0x1                   	// #1
  406060:	mov	x0, x22
  406064:	bl	404970 <__fxstatat@plt+0x1f20>
  406068:	ldrb	w8, [x0]
  40606c:	adrp	x5, 417000 <_obstack_memory_used@@Base+0x3ce0>
  406070:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x2ce0>
  406074:	add	x5, x5, #0x7b8
  406078:	cmp	w8, #0x2f
  40607c:	add	x3, x3, #0xf0
  406080:	mov	x4, x0
  406084:	mov	x2, x28
  406088:	csel	x3, x3, x5, eq  // eq = none
  40608c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406090:	add	x1, x1, #0x3a8
  406094:	mov	x23, x0
  406098:	mov	w0, #0x1                   	// #1
  40609c:	bl	402670 <__printf_chk@plt>
  4060a0:	mov	x0, x28
  4060a4:	bl	402840 <free@plt>
  4060a8:	mov	x0, x23
  4060ac:	bl	402840 <free@plt>
  4060b0:	ldp	x6, x7, [sp, #96]
  4060b4:	cbz	x20, 40620c <__fxstatat@plt+0x37bc>
  4060b8:	ldrb	w0, [x19, #3920]
  4060bc:	cbz	w0, 4060e4 <__fxstatat@plt+0x3694>
  4060c0:	ldp	x1, x0, [x20, #24]
  4060c4:	sub	x0, x0, x1
  4060c8:	cmp	x0, #0x7
  4060cc:	b.ls	406278 <__fxstatat@plt+0x3828>  // b.plast
  4060d0:	ldr	x0, [x19, #3744]
  4060d4:	str	x0, [x1]
  4060d8:	ldr	x0, [x20, #24]
  4060dc:	add	x0, x0, #0x8
  4060e0:	str	x0, [x20, #24]
  4060e4:	ldr	x3, [x25, #1456]
  4060e8:	mov	x1, #0x1                   	// #1
  4060ec:	ldr	x0, [sp, #120]
  4060f0:	mov	x2, x6
  4060f4:	add	x0, x0, x7
  4060f8:	bl	402410 <fwrite_unlocked@plt>
  4060fc:	ldr	x0, [x19, #3744]
  406100:	ldrb	w1, [x19, #3920]
  406104:	add	x0, x21, x0
  406108:	str	x0, [x19, #3744]
  40610c:	cbz	w1, 406130 <__fxstatat@plt+0x36e0>
  406110:	ldp	x2, x1, [x20, #24]
  406114:	sub	x1, x1, x2
  406118:	cmp	x1, #0x7
  40611c:	b.ls	406294 <__fxstatat@plt+0x3844>  // b.plast
  406120:	str	x0, [x2]
  406124:	ldr	x0, [x20, #24]
  406128:	add	x0, x0, #0x8
  40612c:	str	x0, [x20, #24]
  406130:	cbz	x22, 406150 <__fxstatat@plt+0x3700>
  406134:	ldr	x3, [x25, #1456]
  406138:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40613c:	mov	x2, #0x6                   	// #6
  406140:	add	x0, x0, #0x3c0
  406144:	mov	x1, #0x1                   	// #1
  406148:	bl	402410 <fwrite_unlocked@plt>
  40614c:	cbnz	w27, 4061d0 <__fxstatat@plt+0x3780>
  406150:	ldr	x0, [sp, #120]
  406154:	cmp	x0, x24
  406158:	ccmp	x26, x0, #0x4, ne  // ne = any
  40615c:	b.eq	406164 <__fxstatat@plt+0x3714>  // b.none
  406160:	bl	402840 <free@plt>
  406164:	ldrb	w0, [sp, #119]
  406168:	mov	x12, #0x2080                	// #8320
  40616c:	ldp	x29, x30, [sp]
  406170:	add	x0, x0, x21
  406174:	ldp	x19, x20, [sp, #16]
  406178:	ldp	x21, x22, [sp, #32]
  40617c:	ldp	x23, x24, [sp, #48]
  406180:	ldp	x25, x26, [sp, #64]
  406184:	ldp	x27, x28, [sp, #80]
  406188:	add	sp, sp, x12
  40618c:	ret
  406190:	ldrb	w27, [x19, #3907]
  406194:	cbz	w27, 406040 <__fxstatat@plt+0x35f0>
  406198:	ldrb	w0, [sp, #119]
  40619c:	cbnz	w0, 4062ac <__fxstatat@plt+0x385c>
  4061a0:	ldr	x0, [x25, #1456]
  4061a4:	sub	x6, x21, #0x2
  4061a8:	ldr	x1, [sp, #120]
  4061ac:	ldp	x2, x3, [x0, #40]
  4061b0:	ldrb	w1, [x1]
  4061b4:	cmp	x2, x3
  4061b8:	b.cs	4062d0 <__fxstatat@plt+0x3880>  // b.hs, b.nlast
  4061bc:	add	x3, x2, #0x1
  4061c0:	str	x3, [x0, #40]
  4061c4:	mov	x7, #0x1                   	// #1
  4061c8:	strb	w1, [x2]
  4061cc:	b	406048 <__fxstatat@plt+0x35f8>
  4061d0:	ldr	x0, [x25, #1456]
  4061d4:	ldr	x1, [sp, #120]
  4061d8:	ldp	x2, x3, [x0, #40]
  4061dc:	add	x1, x1, x21
  4061e0:	ldurb	w1, [x1, #-1]
  4061e4:	cmp	x2, x3
  4061e8:	b.cs	4062bc <__fxstatat@plt+0x386c>  // b.hs, b.nlast
  4061ec:	add	x3, x2, #0x1
  4061f0:	str	x3, [x0, #40]
  4061f4:	strb	w1, [x2]
  4061f8:	b	406150 <__fxstatat@plt+0x3700>
  4061fc:	mov	x6, x21
  406200:	mov	x7, #0x0                   	// #0
  406204:	mov	w27, #0x0                   	// #0
  406208:	cbnz	x20, 4060b8 <__fxstatat@plt+0x3668>
  40620c:	ldr	x3, [x25, #1456]
  406210:	mov	x2, x6
  406214:	ldr	x0, [sp, #120]
  406218:	mov	x1, #0x1                   	// #1
  40621c:	add	x0, x0, x7
  406220:	bl	402410 <fwrite_unlocked@plt>
  406224:	ldr	x0, [x19, #3744]
  406228:	add	x0, x0, x21
  40622c:	str	x0, [x19, #3744]
  406230:	b	406130 <__fxstatat@plt+0x36e0>
  406234:	adrp	x25, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  406238:	ldr	x0, [x25, #1456]
  40623c:	ldp	x1, x2, [x0, #40]
  406240:	cmp	x1, x2
  406244:	b.cs	4062c4 <__fxstatat@plt+0x3874>  // b.hs, b.nlast
  406248:	add	x2, x1, #0x1
  40624c:	str	x2, [x0, #40]
  406250:	mov	w0, #0x20                  	// #32
  406254:	strb	w0, [x1]
  406258:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40625c:	add	x19, x19, #0x5c8
  406260:	ldr	x0, [x19, #3744]
  406264:	add	x0, x0, #0x1
  406268:	str	x0, [x19, #3744]
  40626c:	b	405ff4 <__fxstatat@plt+0x35a4>
  406270:	bl	405a58 <__fxstatat@plt+0x3008>
  406274:	b	406008 <__fxstatat@plt+0x35b8>
  406278:	mov	x1, #0x8                   	// #8
  40627c:	mov	x0, x20
  406280:	stp	x6, x7, [sp, #96]
  406284:	bl	413140 <_obstack_newchunk@@Base>
  406288:	ldr	x1, [x20, #24]
  40628c:	ldp	x6, x7, [sp, #96]
  406290:	b	4060d0 <__fxstatat@plt+0x3680>
  406294:	mov	x0, x20
  406298:	mov	x1, #0x8                   	// #8
  40629c:	bl	413140 <_obstack_newchunk@@Base>
  4062a0:	ldr	x2, [x20, #24]
  4062a4:	ldr	x0, [x19, #3744]
  4062a8:	b	406120 <__fxstatat@plt+0x36d0>
  4062ac:	mov	x6, x21
  4062b0:	mov	x7, #0x0                   	// #0
  4062b4:	mov	w27, #0x0                   	// #0
  4062b8:	b	406048 <__fxstatat@plt+0x35f8>
  4062bc:	bl	402780 <__overflow@plt>
  4062c0:	b	406150 <__fxstatat@plt+0x3700>
  4062c4:	mov	w1, #0x20                  	// #32
  4062c8:	bl	402780 <__overflow@plt>
  4062cc:	b	406258 <__fxstatat@plt+0x3808>
  4062d0:	mov	x7, #0x1                   	// #1
  4062d4:	stp	x7, x6, [sp, #96]
  4062d8:	bl	402780 <__overflow@plt>
  4062dc:	ldp	x7, x6, [sp, #96]
  4062e0:	b	406048 <__fxstatat@plt+0x35f8>
  4062e4:	nop
  4062e8:	stp	x29, x30, [sp, #-80]!
  4062ec:	mov	x29, sp
  4062f0:	stp	x25, x26, [sp, #64]
  4062f4:	adrp	x26, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4062f8:	add	x26, x26, #0x5c8
  4062fc:	stp	x19, x20, [sp, #16]
  406300:	mov	x19, x0
  406304:	stp	x21, x22, [sp, #32]
  406308:	mov	x21, x3
  40630c:	ldrb	w0, [x26, #3904]
  406310:	stp	x23, x24, [sp, #48]
  406314:	mov	x24, x2
  406318:	ands	w23, w1, #0xff
  40631c:	b.eq	406390 <__fxstatat@plt+0x3940>  // b.none
  406320:	ldr	x25, [x19, #8]
  406324:	cbnz	w0, 40636c <__fxstatat@plt+0x391c>
  406328:	ldr	w2, [x19, #180]
  40632c:	mov	x5, x24
  406330:	ldr	x6, [x19, #16]
  406334:	eor	w4, w23, #0x1
  406338:	ldr	x1, [x26, #3104]
  40633c:	mov	x3, #0x0                   	// #0
  406340:	mov	x0, x25
  406344:	bl	405f78 <__fxstatat@plt+0x3528>
  406348:	mov	x19, x0
  40634c:	bl	405a90 <__fxstatat@plt+0x3040>
  406350:	mov	x0, x19
  406354:	ldp	x19, x20, [sp, #16]
  406358:	ldp	x21, x22, [sp, #32]
  40635c:	ldp	x23, x24, [sp, #48]
  406360:	ldp	x25, x26, [sp, #64]
  406364:	ldp	x29, x30, [sp], #80
  406368:	ret
  40636c:	ldrb	w0, [x19, #169]
  406370:	ldr	w4, [x19, #156]
  406374:	cbnz	w0, 40648c <__fxstatat@plt+0x3a3c>
  406378:	mov	w0, #0xc                   	// #12
  40637c:	bl	404540 <__fxstatat@plt+0x1af0>
  406380:	tst	w0, #0xff
  406384:	b.ne	406544 <__fxstatat@plt+0x3af4>  // b.any
  406388:	mov	w0, #0xffffffff            	// #-1
  40638c:	b	4063a8 <__fxstatat@plt+0x3958>
  406390:	ldr	x25, [x19]
  406394:	cbz	w0, 406328 <__fxstatat@plt+0x38d8>
  406398:	ldrb	w1, [x26, #3921]
  40639c:	ldrb	w0, [x19, #169]
  4063a0:	cbnz	w1, 4064ec <__fxstatat@plt+0x3a9c>
  4063a4:	ldr	w4, [x19, #40]
  4063a8:	ldrb	w1, [x19, #168]
  4063ac:	cbnz	w1, 406498 <__fxstatat@plt+0x3a48>
  4063b0:	ldr	w2, [x19, #152]
  4063b4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4063b8:	add	x1, x1, #0xf08
  4063bc:	add	x1, x1, #0x200
  4063c0:	ldr	w3, [x1, x2, lsl #2]
  4063c4:	cmp	w3, #0x7
  4063c8:	cset	w1, eq  // eq = none
  4063cc:	cmp	w3, #0x5
  4063d0:	b.eq	4064f8 <__fxstatat@plt+0x3aa8>  // b.none
  4063d4:	cmp	w0, #0x0
  4063d8:	ubfiz	x3, x3, #4, #32
  4063dc:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  4063e0:	b.eq	406404 <__fxstatat@plt+0x39b4>  // b.none
  4063e4:	ldrb	w0, [x26, #3921]
  4063e8:	mov	x3, #0xd0                  	// #208
  4063ec:	cbnz	w0, 406404 <__fxstatat@plt+0x39b4>
  4063f0:	mov	w0, #0xd                   	// #13
  4063f4:	bl	404540 <__fxstatat@plt+0x1af0>
  4063f8:	tst	w0, #0xff
  4063fc:	mov	x1, #0x70                  	// #112
  406400:	csel	x3, x3, x1, ne  // ne = any
  406404:	adrp	x20, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  406408:	add	x20, x20, #0x368
  40640c:	add	x3, x20, x3
  406410:	ldr	x0, [x3, #8]
  406414:	cbnz	x0, 40642c <__fxstatat@plt+0x39dc>
  406418:	mov	w0, #0x4                   	// #4
  40641c:	bl	404540 <__fxstatat@plt+0x1af0>
  406420:	tst	w0, #0xff
  406424:	b.eq	406328 <__fxstatat@plt+0x38d8>  // b.none
  406428:	mov	x3, #0x0                   	// #0
  40642c:	ldr	w2, [x19, #180]
  406430:	mov	x5, x24
  406434:	ldr	x6, [x19, #16]
  406438:	eor	w4, w23, #0x1
  40643c:	ldr	x1, [x26, #3104]
  406440:	mov	x0, x25
  406444:	bl	405f78 <__fxstatat@plt+0x3528>
  406448:	mov	x19, x0
  40644c:	bl	405a90 <__fxstatat@plt+0x3040>
  406450:	bl	405868 <__fxstatat@plt+0x2e18>
  406454:	ldr	x0, [x26, #8]
  406458:	cbz	x0, 406350 <__fxstatat@plt+0x3900>
  40645c:	sub	x1, x21, #0x1
  406460:	udiv	x21, x21, x0
  406464:	add	x1, x1, x19
  406468:	udiv	x0, x1, x0
  40646c:	cmp	x21, x0
  406470:	b.eq	406350 <__fxstatat@plt+0x3900>  // b.none
  406474:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  406478:	add	x0, x0, #0x368
  40647c:	add	x1, x0, #0x178
  406480:	add	x0, x0, #0x170
  406484:	bl	4058c8 <__fxstatat@plt+0x2e78>
  406488:	b	406350 <__fxstatat@plt+0x3900>
  40648c:	ldrb	w1, [x19, #168]
  406490:	mov	w0, #0x0                   	// #0
  406494:	cbz	w1, 4063b0 <__fxstatat@plt+0x3960>
  406498:	and	w2, w4, #0xf000
  40649c:	cmp	w2, #0x8, lsl #12
  4064a0:	b.eq	40654c <__fxstatat@plt+0x3afc>  // b.none
  4064a4:	cmp	w2, #0x4, lsl #12
  4064a8:	b.eq	4065a4 <__fxstatat@plt+0x3b54>  // b.none
  4064ac:	cmp	w2, #0xa, lsl #12
  4064b0:	b.eq	406604 <__fxstatat@plt+0x3bb4>  // b.none
  4064b4:	cmp	w2, #0x1, lsl #12
  4064b8:	mov	x3, #0x80                  	// #128
  4064bc:	b.eq	406404 <__fxstatat@plt+0x39b4>  // b.none
  4064c0:	cmp	w2, #0xc, lsl #12
  4064c4:	mov	x3, #0x90                  	// #144
  4064c8:	b.eq	406404 <__fxstatat@plt+0x39b4>  // b.none
  4064cc:	cmp	w2, #0x6, lsl #12
  4064d0:	mov	x3, #0xa0                  	// #160
  4064d4:	b.eq	406404 <__fxstatat@plt+0x39b4>  // b.none
  4064d8:	cmp	w2, #0x2, lsl #12
  4064dc:	mov	x3, #0xb0                  	// #176
  4064e0:	mov	x0, #0xd0                  	// #208
  4064e4:	csel	x3, x3, x0, eq  // eq = none
  4064e8:	b	406404 <__fxstatat@plt+0x39b4>
  4064ec:	cbz	w0, 4063a4 <__fxstatat@plt+0x3954>
  4064f0:	ldr	w4, [x19, #156]
  4064f4:	b	4063a8 <__fxstatat@plt+0x3958>
  4064f8:	mov	x0, x25
  4064fc:	bl	402430 <strlen@plt>
  406500:	ldr	x20, [x26, #3928]
  406504:	mov	x22, x0
  406508:	cbz	x20, 406534 <__fxstatat@plt+0x3ae4>
  40650c:	nop
  406510:	ldr	x2, [x20]
  406514:	subs	x0, x22, x2
  406518:	b.cc	40652c <__fxstatat@plt+0x3adc>  // b.lo, b.ul, b.last
  40651c:	ldr	x1, [x20, #8]
  406520:	add	x0, x25, x0
  406524:	bl	40aac0 <__fxstatat@plt+0x8070>
  406528:	cbz	w0, 40653c <__fxstatat@plt+0x3aec>
  40652c:	ldr	x20, [x20, #32]
  406530:	cbnz	x20, 406510 <__fxstatat@plt+0x3ac0>
  406534:	mov	x3, #0x50                  	// #80
  406538:	b	406404 <__fxstatat@plt+0x39b4>
  40653c:	add	x3, x20, #0x10
  406540:	b	406410 <__fxstatat@plt+0x39c0>
  406544:	mov	x3, #0xc0                  	// #192
  406548:	b	406404 <__fxstatat@plt+0x39b4>
  40654c:	tbz	w4, #11, 406568 <__fxstatat@plt+0x3b18>
  406550:	mov	w0, #0x10                  	// #16
  406554:	bl	404540 <__fxstatat@plt+0x1af0>
  406558:	tst	w0, #0xff
  40655c:	b.eq	406568 <__fxstatat@plt+0x3b18>  // b.none
  406560:	mov	x3, #0x100                 	// #256
  406564:	b	406404 <__fxstatat@plt+0x39b4>
  406568:	tbnz	w4, #10, 40658c <__fxstatat@plt+0x3b3c>
  40656c:	mov	w0, #0x15                  	// #21
  406570:	bl	404540 <__fxstatat@plt+0x1af0>
  406574:	tst	w0, #0xff
  406578:	b.eq	40660c <__fxstatat@plt+0x3bbc>  // b.none
  40657c:	ldrb	w0, [x19, #176]
  406580:	cbz	w0, 40660c <__fxstatat@plt+0x3bbc>
  406584:	mov	x3, #0x150                 	// #336
  406588:	b	406404 <__fxstatat@plt+0x39b4>
  40658c:	mov	w0, #0x11                  	// #17
  406590:	bl	404540 <__fxstatat@plt+0x1af0>
  406594:	tst	w0, #0xff
  406598:	b.eq	40656c <__fxstatat@plt+0x3b1c>  // b.none
  40659c:	mov	x3, #0x110                 	// #272
  4065a0:	b	406404 <__fxstatat@plt+0x39b4>
  4065a4:	mov	w0, #0x202                 	// #514
  4065a8:	and	w0, w4, w0
  4065ac:	cmp	w0, #0x202
  4065b0:	b.eq	4065ec <__fxstatat@plt+0x3b9c>  // b.none
  4065b4:	tbz	w4, #1, 4065cc <__fxstatat@plt+0x3b7c>
  4065b8:	mov	w0, #0x13                  	// #19
  4065bc:	bl	404540 <__fxstatat@plt+0x1af0>
  4065c0:	mov	x3, #0x130                 	// #304
  4065c4:	tst	w0, #0xff
  4065c8:	b.ne	406404 <__fxstatat@plt+0x39b4>  // b.any
  4065cc:	mov	x3, #0x60                  	// #96
  4065d0:	tbz	w4, #9, 406404 <__fxstatat@plt+0x39b4>
  4065d4:	mov	w0, #0x12                  	// #18
  4065d8:	bl	404540 <__fxstatat@plt+0x1af0>
  4065dc:	tst	w0, #0xff
  4065e0:	mov	x1, #0x120                 	// #288
  4065e4:	csel	x3, x1, x3, ne  // ne = any
  4065e8:	b	406404 <__fxstatat@plt+0x39b4>
  4065ec:	mov	w0, #0x14                  	// #20
  4065f0:	bl	404540 <__fxstatat@plt+0x1af0>
  4065f4:	mov	x3, #0x140                 	// #320
  4065f8:	tst	w0, #0xff
  4065fc:	b.ne	406404 <__fxstatat@plt+0x39b4>  // b.any
  406600:	b	4065b4 <__fxstatat@plt+0x3b64>
  406604:	mov	w3, #0x7                   	// #7
  406608:	b	4063d4 <__fxstatat@plt+0x3984>
  40660c:	mov	w0, #0x49                  	// #73
  406610:	tst	w4, w0
  406614:	b.eq	406630 <__fxstatat@plt+0x3be0>  // b.none
  406618:	mov	w0, #0xe                   	// #14
  40661c:	bl	404540 <__fxstatat@plt+0x1af0>
  406620:	tst	w0, #0xff
  406624:	b.eq	406630 <__fxstatat@plt+0x3be0>  // b.none
  406628:	mov	x3, #0xe0                  	// #224
  40662c:	b	406404 <__fxstatat@plt+0x39b4>
  406630:	ldr	w0, [x19, #44]
  406634:	cmp	w0, #0x1
  406638:	b.ls	4064f8 <__fxstatat@plt+0x3aa8>  // b.plast
  40663c:	mov	w0, #0x16                  	// #22
  406640:	bl	404540 <__fxstatat@plt+0x1af0>
  406644:	tst	w0, #0xff
  406648:	b.eq	4064f8 <__fxstatat@plt+0x3aa8>  // b.none
  40664c:	mov	x3, #0x160                 	// #352
  406650:	b	406404 <__fxstatat@plt+0x39b4>
  406654:	nop
  406658:	sub	sp, sp, #0x2d0
  40665c:	stp	x29, x30, [sp]
  406660:	mov	x29, sp
  406664:	stp	x19, x20, [sp, #16]
  406668:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40666c:	add	x19, x19, #0x5c8
  406670:	mov	x20, x0
  406674:	stp	x21, x22, [sp, #32]
  406678:	mov	x21, x1
  40667c:	bl	405b40 <__fxstatat@plt+0x30f0>
  406680:	ldrb	w0, [x19, #3936]
  406684:	cbz	w0, 4066bc <__fxstatat@plt+0x3c6c>
  406688:	ldr	w0, [x19, #3940]
  40668c:	mov	w2, #0x0                   	// #0
  406690:	cmp	w0, #0x4
  406694:	b.eq	40669c <__fxstatat@plt+0x3c4c>  // b.none
  406698:	ldr	w2, [x19, #3944]
  40669c:	ldrb	w0, [x20, #168]
  4066a0:	cbnz	w0, 406764 <__fxstatat@plt+0x3d14>
  4066a4:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4066a8:	add	x3, x3, #0x3a0
  4066ac:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4066b0:	mov	w0, #0x1                   	// #1
  4066b4:	add	x1, x1, #0x3c8
  4066b8:	bl	402670 <__printf_chk@plt>
  4066bc:	ldrb	w0, [x19, #3948]
  4066c0:	cbz	w0, 4066fc <__fxstatat@plt+0x3cac>
  4066c4:	ldr	w0, [x19, #3940]
  4066c8:	mov	w22, #0x0                   	// #0
  4066cc:	cmp	w0, #0x4
  4066d0:	b.eq	4066d8 <__fxstatat@plt+0x3c88>  // b.none
  4066d4:	ldr	w22, [x19, #3952]
  4066d8:	ldrb	w0, [x20, #168]
  4066dc:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4066e0:	add	x3, x3, #0x3a0
  4066e4:	cbnz	w0, 4067b8 <__fxstatat@plt+0x3d68>
  4066e8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4066ec:	mov	w2, w22
  4066f0:	add	x1, x1, #0x3c8
  4066f4:	mov	w0, #0x1                   	// #1
  4066f8:	bl	402670 <__printf_chk@plt>
  4066fc:	ldrb	w0, [x19, #3972]
  406700:	cbz	w0, 40672c <__fxstatat@plt+0x3cdc>
  406704:	ldr	w0, [x19, #3940]
  406708:	mov	w2, #0x0                   	// #0
  40670c:	cmp	w0, #0x4
  406710:	b.eq	406718 <__fxstatat@plt+0x3cc8>  // b.none
  406714:	ldr	w2, [x19, #3976]
  406718:	ldr	x3, [x20, #160]
  40671c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406720:	mov	w0, #0x1                   	// #1
  406724:	add	x1, x1, #0x3c8
  406728:	bl	402670 <__printf_chk@plt>
  40672c:	mov	w1, #0x0                   	// #0
  406730:	mov	x3, x21
  406734:	mov	x0, x20
  406738:	mov	x2, #0x0                   	// #0
  40673c:	bl	4062e8 <__fxstatat@plt+0x3898>
  406740:	ldr	w1, [x19, #3764]
  406744:	mov	x19, x0
  406748:	cbnz	w1, 40678c <__fxstatat@plt+0x3d3c>
  40674c:	mov	x0, x19
  406750:	ldp	x29, x30, [sp]
  406754:	ldp	x19, x20, [sp, #16]
  406758:	ldp	x21, x22, [sp, #32]
  40675c:	add	sp, sp, #0x2d0
  406760:	ret
  406764:	ldr	x0, [x20, #32]
  406768:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40676c:	add	x3, x3, #0x3a0
  406770:	cbz	x0, 4066ac <__fxstatat@plt+0x3c5c>
  406774:	add	x1, sp, #0x40
  406778:	str	w2, [sp, #60]
  40677c:	bl	40db08 <__fxstatat@plt+0xb0b8>
  406780:	mov	x3, x0
  406784:	ldr	w2, [sp, #60]
  406788:	b	4066ac <__fxstatat@plt+0x3c5c>
  40678c:	ldr	w1, [x20, #40]
  406790:	ldr	w2, [x20, #152]
  406794:	ldrb	w0, [x20, #168]
  406798:	bl	405518 <__fxstatat@plt+0x2ac8>
  40679c:	add	x19, x19, w0, uxtb
  4067a0:	mov	x0, x19
  4067a4:	ldp	x29, x30, [sp]
  4067a8:	ldp	x19, x20, [sp, #16]
  4067ac:	ldp	x21, x22, [sp, #32]
  4067b0:	add	sp, sp, #0x2d0
  4067b4:	ret
  4067b8:	ldr	w2, [x19, #3968]
  4067bc:	mov	x3, #0x200                 	// #512
  4067c0:	ldr	x0, [x20, #88]
  4067c4:	add	x1, sp, #0x40
  4067c8:	ldr	x4, [x19, #3960]
  4067cc:	bl	40cd18 <__fxstatat@plt+0xa2c8>
  4067d0:	mov	x3, x0
  4067d4:	b	4066e8 <__fxstatat@plt+0x3c98>
  4067d8:	mov	x12, #0x1340                	// #4928
  4067dc:	sub	sp, sp, x12
  4067e0:	stp	x29, x30, [sp]
  4067e4:	mov	x29, sp
  4067e8:	stp	x19, x20, [sp, #16]
  4067ec:	mov	x20, x0
  4067f0:	ldrb	w0, [x0, #168]
  4067f4:	stp	x21, x22, [sp, #32]
  4067f8:	stp	x23, x24, [sp, #48]
  4067fc:	stp	x25, x26, [sp, #64]
  406800:	cbz	w0, 406b48 <__fxstatat@plt+0x40f8>
  406804:	adrp	x25, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  406808:	add	x25, x25, #0x5c8
  40680c:	add	x23, sp, #0x80
  406810:	add	x0, x20, #0x18
  406814:	mov	x1, x23
  406818:	bl	40b638 <__fxstatat@plt+0x8be8>
  40681c:	ldrb	w0, [x25, #3980]
  406820:	cbnz	w0, 406b88 <__fxstatat@plt+0x4138>
  406824:	strb	wzr, [sp, #138]
  406828:	ldr	w0, [x25, #3720]
  40682c:	cmp	w0, #0x1
  406830:	b.eq	406bb0 <__fxstatat@plt+0x4160>  // b.none
  406834:	cmp	w0, #0x2
  406838:	b.ne	406ad4 <__fxstatat@plt+0x4084>  // b.any
  40683c:	ldr	x0, [x20, #96]
  406840:	str	x0, [sp, #144]
  406844:	ldr	x0, [x20, #104]
  406848:	str	x0, [sp, #152]
  40684c:	ldrb	w0, [x25, #3936]
  406850:	ldrb	w1, [x20, #168]
  406854:	cbnz	w0, 406af4 <__fxstatat@plt+0x40a4>
  406858:	add	x22, sp, #0x500
  40685c:	mov	x19, x22
  406860:	ldrb	w0, [x25, #3948]
  406864:	cbz	w0, 4068d8 <__fxstatat@plt+0x3e88>
  406868:	adrp	x24, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40686c:	add	x24, x24, #0x3a0
  406870:	cbnz	w1, 406ea8 <__fxstatat@plt+0x4458>
  406874:	ldr	w21, [x25, #3952]
  406878:	mov	w1, #0x0                   	// #0
  40687c:	mov	x0, x24
  406880:	bl	40e110 <__fxstatat@plt+0xb6c0>
  406884:	sub	w1, w21, w0
  406888:	cmp	w1, #0x0
  40688c:	b.le	4068c0 <__fxstatat@plt+0x3e70>
  406890:	sub	w2, w1, #0x1
  406894:	mov	x1, x19
  406898:	mov	x3, x2
  40689c:	add	x2, x2, #0x1
  4068a0:	add	x2, x19, x2
  4068a4:	mov	w4, #0x20                  	// #32
  4068a8:	strb	w4, [x1], #1
  4068ac:	cmp	x1, x2
  4068b0:	b.ne	4068a8 <__fxstatat@plt+0x3e58>  // b.any
  4068b4:	sxtw	x1, w3
  4068b8:	add	x1, x1, #0x1
  4068bc:	add	x19, x19, x1
  4068c0:	ldrb	w0, [x24], #1
  4068c4:	strb	w0, [x19], #1
  4068c8:	cbnz	w0, 4068c0 <__fxstatat@plt+0x3e70>
  4068cc:	ldrb	w1, [x20, #168]
  4068d0:	mov	w0, #0x20                  	// #32
  4068d4:	sturb	w0, [x19, #-1]
  4068d8:	adrp	x6, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4068dc:	ldr	w21, [x25, #3984]
  4068e0:	add	x6, x6, #0x3a0
  4068e4:	cbnz	w1, 406c00 <__fxstatat@plt+0x41b0>
  4068e8:	mov	x4, x23
  4068ec:	mov	w5, w21
  4068f0:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4068f4:	add	x3, x3, #0x3d0
  4068f8:	mov	w1, #0x1                   	// #1
  4068fc:	mov	x2, #0xffffffffffffffff    	// #-1
  406900:	mov	x0, x19
  406904:	bl	402440 <__sprintf_chk@plt>
  406908:	mov	x0, x19
  40690c:	bl	402430 <strlen@plt>
  406910:	ldrb	w1, [x25, #3920]
  406914:	add	x19, x19, x0
  406918:	adrp	x23, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40691c:	cbnz	w1, 406bd8 <__fxstatat@plt+0x4188>
  406920:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  406924:	add	x21, x21, #0x368
  406928:	ldrb	w0, [x21, #400]
  40692c:	cbnz	w0, 406940 <__fxstatat@plt+0x3ef0>
  406930:	ldrb	w0, [x21, #401]
  406934:	cbnz	w0, 406940 <__fxstatat@plt+0x3ef0>
  406938:	ldrb	w0, [x25, #3988]
  40693c:	cbz	w0, 406e10 <__fxstatat@plt+0x43c0>
  406940:	ldr	x1, [x23, #1456]
  406944:	mov	x0, x22
  406948:	sub	x19, x19, x22
  40694c:	bl	402980 <fputs_unlocked@plt>
  406950:	ldr	x1, [x25, #3744]
  406954:	ldrb	w0, [x21, #400]
  406958:	add	x19, x19, x1
  40695c:	str	x19, [x25, #3744]
  406960:	cbnz	w0, 406dc4 <__fxstatat@plt+0x4374>
  406964:	ldrb	w0, [x21, #401]
  406968:	cbnz	w0, 406d9c <__fxstatat@plt+0x434c>
  40696c:	ldrb	w0, [x25, #3988]
  406970:	cbnz	w0, 406d88 <__fxstatat@plt+0x4338>
  406974:	ldrb	w0, [x25, #3972]
  406978:	mov	x19, x22
  40697c:	cbnz	w0, 406d74 <__fxstatat@plt+0x4324>
  406980:	ldrb	w0, [x20, #168]
  406984:	cbz	w0, 406b3c <__fxstatat@plt+0x40ec>
  406988:	ldr	w0, [x20, #40]
  40698c:	mov	w1, #0xb000                	// #45056
  406990:	and	w0, w0, w1
  406994:	cmp	w0, #0x2, lsl #12
  406998:	b.eq	406ec8 <__fxstatat@plt+0x4478>  // b.none
  40699c:	ldr	w2, [x25, #4016]
  4069a0:	add	x1, sp, #0x110
  4069a4:	ldr	x0, [x20, #72]
  4069a8:	mov	x3, #0x1                   	// #1
  4069ac:	ldr	x4, [x21, #408]
  4069b0:	bl	40cd18 <__fxstatat@plt+0xa2c8>
  4069b4:	mov	x26, x0
  4069b8:	ldr	w24, [x25, #4008]
  4069bc:	mov	w1, #0x0                   	// #0
  4069c0:	mov	x0, x26
  4069c4:	bl	40e110 <__fxstatat@plt+0xb6c0>
  4069c8:	sub	w1, w24, w0
  4069cc:	cmp	w1, #0x0
  4069d0:	b.le	406a08 <__fxstatat@plt+0x3fb8>
  4069d4:	sub	w2, w1, #0x1
  4069d8:	mov	x1, x19
  4069dc:	mov	x3, x2
  4069e0:	add	x2, x2, #0x1
  4069e4:	add	x2, x19, x2
  4069e8:	mov	w4, #0x20                  	// #32
  4069ec:	nop
  4069f0:	strb	w4, [x1], #1
  4069f4:	cmp	x1, x2
  4069f8:	b.ne	4069f0 <__fxstatat@plt+0x3fa0>  // b.any
  4069fc:	sxtw	x1, w3
  406a00:	add	x1, x1, #0x1
  406a04:	add	x19, x19, x1
  406a08:	ldrb	w0, [x26], #1
  406a0c:	strb	w0, [x19], #1
  406a10:	cbnz	w0, 406a08 <__fxstatat@plt+0x3fb8>
  406a14:	mov	w0, #0x20                  	// #32
  406a18:	sturb	w0, [x19, #-1]
  406a1c:	ldrb	w0, [x20, #168]
  406a20:	mov	w1, #0x1                   	// #1
  406a24:	strb	w1, [x19]
  406a28:	cbnz	w0, 406c14 <__fxstatat@plt+0x41c4>
  406a2c:	ldr	w24, [x21, #416]
  406a30:	tbz	w24, #31, 406e90 <__fxstatat@plt+0x4440>
  406a34:	ldr	x0, [x25, #4024]
  406a38:	add	x2, sp, #0xd8
  406a3c:	add	x1, sp, #0x78
  406a40:	str	xzr, [sp, #120]
  406a44:	bl	413760 <_obstack_memory_used@@Base+0x440>
  406a48:	cbz	x0, 406e84 <__fxstatat@plt+0x4434>
  406a4c:	ldrb	w0, [x25, #3088]
  406a50:	ldr	x4, [x25, #4024]
  406a54:	cbnz	w0, 406fa0 <__fxstatat@plt+0x4550>
  406a58:	ldr	x2, [x21, #384]
  406a5c:	add	x3, sp, #0xd8
  406a60:	add	x0, sp, #0x110
  406a64:	mov	w5, #0x0                   	// #0
  406a68:	mov	x1, #0x3e9                 	// #1001
  406a6c:	bl	40fc30 <__fxstatat@plt+0xd1e0>
  406a70:	cbz	x0, 406e84 <__fxstatat@plt+0x4434>
  406a74:	mov	x1, x0
  406a78:	mov	w2, #0x0                   	// #0
  406a7c:	add	x0, sp, #0x110
  406a80:	bl	40df28 <__fxstatat@plt+0xb4d8>
  406a84:	str	w0, [x21, #416]
  406a88:	mov	w24, w0
  406a8c:	tbnz	w24, #31, 406f94 <__fxstatat@plt+0x4544>
  406a90:	ldrb	w0, [x20, #168]
  406a94:	cbz	w0, 406e90 <__fxstatat@plt+0x4440>
  406a98:	ldr	x0, [sp, #144]
  406a9c:	add	x1, sp, #0x110
  406aa0:	bl	40da88 <__fxstatat@plt+0xb038>
  406aa4:	mov	x5, x0
  406aa8:	mov	w4, w24
  406aac:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406ab0:	add	x3, x3, #0x3c8
  406ab4:	mov	x2, #0xffffffffffffffff    	// #-1
  406ab8:	mov	w1, #0x1                   	// #1
  406abc:	mov	x0, x19
  406ac0:	bl	402440 <__sprintf_chk@plt>
  406ac4:	mov	x0, x19
  406ac8:	bl	402430 <strlen@plt>
  406acc:	add	x19, x19, x0
  406ad0:	b	406cac <__fxstatat@plt+0x425c>
  406ad4:	cbnz	w0, 406bd0 <__fxstatat@plt+0x4180>
  406ad8:	ldr	x0, [x20, #112]
  406adc:	str	x0, [sp, #144]
  406ae0:	ldr	x0, [x20, #120]
  406ae4:	str	x0, [sp, #152]
  406ae8:	ldrb	w0, [x25, #3936]
  406aec:	ldrb	w1, [x20, #168]
  406af0:	cbz	w0, 406858 <__fxstatat@plt+0x3e08>
  406af4:	ldr	w4, [x25, #3944]
  406af8:	cbz	w1, 406dd8 <__fxstatat@plt+0x4388>
  406afc:	ldr	x0, [x20, #32]
  406b00:	adrp	x5, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406b04:	add	x5, x5, #0x3a0
  406b08:	cbnz	x0, 406e28 <__fxstatat@plt+0x43d8>
  406b0c:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406b10:	add	x3, x3, #0x3c8
  406b14:	add	x22, sp, #0x500
  406b18:	mov	w1, #0x1                   	// #1
  406b1c:	mov	x2, #0xe3b                 	// #3643
  406b20:	mov	x0, x22
  406b24:	bl	402440 <__sprintf_chk@plt>
  406b28:	mov	x0, x22
  406b2c:	bl	402430 <strlen@plt>
  406b30:	ldrb	w1, [x20, #168]
  406b34:	add	x19, x22, x0
  406b38:	b	406860 <__fxstatat@plt+0x3e10>
  406b3c:	adrp	x26, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406b40:	add	x26, x26, #0x3a0
  406b44:	b	4069b8 <__fxstatat@plt+0x3f68>
  406b48:	ldr	w2, [x20, #152]
  406b4c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  406b50:	add	x0, x0, #0xf08
  406b54:	adrp	x25, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  406b58:	add	x0, x0, #0x228
  406b5c:	add	x25, x25, #0x5c8
  406b60:	add	x23, sp, #0x80
  406b64:	mov	x1, #0x3f3f3f3f3f3f3f3f    	// #4557430888798830399
  406b68:	stur	x1, [sp, #129]
  406b6c:	mov	w1, #0x3f3f                	// #16191
  406b70:	ldrb	w0, [x0, x2]
  406b74:	strb	w0, [sp, #128]
  406b78:	ldrb	w0, [x25, #3980]
  406b7c:	sturh	w1, [x23, #9]
  406b80:	strb	wzr, [sp, #139]
  406b84:	cbz	w0, 406824 <__fxstatat@plt+0x3dd4>
  406b88:	ldr	w0, [x20, #172]
  406b8c:	cmp	w0, #0x1
  406b90:	b.eq	406e9c <__fxstatat@plt+0x444c>  // b.none
  406b94:	cmp	w0, #0x2
  406b98:	b.ne	406828 <__fxstatat@plt+0x3dd8>  // b.any
  406b9c:	mov	w0, #0x2b                  	// #43
  406ba0:	strb	w0, [sp, #138]
  406ba4:	ldr	w0, [x25, #3720]
  406ba8:	cmp	w0, #0x1
  406bac:	b.ne	406834 <__fxstatat@plt+0x3de4>  // b.any
  406bb0:	ldr	x0, [x20, #128]
  406bb4:	str	x0, [sp, #144]
  406bb8:	ldr	x0, [x20, #136]
  406bbc:	str	x0, [sp, #152]
  406bc0:	ldrb	w0, [x25, #3936]
  406bc4:	ldrb	w1, [x20, #168]
  406bc8:	cbz	w0, 406858 <__fxstatat@plt+0x3e08>
  406bcc:	b	406af4 <__fxstatat@plt+0x40a4>
  406bd0:	str	x27, [sp, #80]
  406bd4:	bl	402760 <abort@plt>
  406bd8:	ldr	x3, [x23, #1456]
  406bdc:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406be0:	mov	x2, #0x2                   	// #2
  406be4:	add	x0, x0, #0x3d8
  406be8:	mov	x1, #0x1                   	// #1
  406bec:	bl	402410 <fwrite_unlocked@plt>
  406bf0:	ldr	x0, [x25, #3744]
  406bf4:	add	x0, x0, #0x2
  406bf8:	str	x0, [x25, #3744]
  406bfc:	b	406920 <__fxstatat@plt+0x3ed0>
  406c00:	ldr	w0, [x20, #44]
  406c04:	add	x1, sp, #0x110
  406c08:	bl	40db08 <__fxstatat@plt+0xb0b8>
  406c0c:	mov	x6, x0
  406c10:	b	4068e8 <__fxstatat@plt+0x3e98>
  406c14:	ldr	x0, [x25, #4024]
  406c18:	add	x2, sp, #0xa0
  406c1c:	add	x1, sp, #0x90
  406c20:	bl	413760 <_obstack_memory_used@@Base+0x440>
  406c24:	cbz	x0, 406c9c <__fxstatat@plt+0x424c>
  406c28:	ldp	x2, x5, [sp, #144]
  406c2c:	ldr	x1, [x25, #4032]
  406c30:	ldr	x3, [x25, #4040]
  406c34:	cmp	x1, x2
  406c38:	b.lt	406f6c <__fxstatat@plt+0x451c>  // b.tstop
  406c3c:	b.gt	406e40 <__fxstatat@plt+0x43f0>
  406c40:	cmp	w3, w5
  406c44:	mov	w0, w5
  406c48:	b.mi	406f6c <__fxstatat@plt+0x451c>  // b.first
  406c4c:	sub	x1, x1, #0xf0c, lsl #12
  406c50:	sub	x1, x1, #0x2ac
  406c54:	cmp	x1, x2
  406c58:	b.lt	406e78 <__fxstatat@plt+0x4428>  // b.tstop
  406c5c:	mov	x0, #0x0                   	// #0
  406c60:	ldrb	w1, [x25, #3088]
  406c64:	ldr	x4, [x25, #4024]
  406c68:	cbz	w1, 406f60 <__fxstatat@plt+0x4510>
  406c6c:	ldrsw	x1, [sp, #176]
  406c70:	mov	w3, #0xc                   	// #12
  406c74:	add	x2, x25, #0x10
  406c78:	smaddl	x0, w0, w3, x1
  406c7c:	add	x2, x2, x0, lsl #7
  406c80:	add	x3, sp, #0xa0
  406c84:	mov	x0, x19
  406c88:	mov	x1, #0x3e9                 	// #1001
  406c8c:	bl	40fc30 <__fxstatat@plt+0xd1e0>
  406c90:	cbz	x0, 406c9c <__fxstatat@plt+0x424c>
  406c94:	add	x19, x19, x0
  406c98:	b	406ca4 <__fxstatat@plt+0x4254>
  406c9c:	ldrb	w0, [x19]
  406ca0:	cbnz	w0, 406fcc <__fxstatat@plt+0x457c>
  406ca4:	mov	w0, #0x20                  	// #32
  406ca8:	strh	w0, [x19], #1
  406cac:	ldr	x1, [x23, #1456]
  406cb0:	mov	x0, x22
  406cb4:	sub	x19, x19, x22
  406cb8:	bl	402980 <fputs_unlocked@plt>
  406cbc:	ldr	x4, [x25, #3744]
  406cc0:	add	x2, x25, #0xfd0
  406cc4:	mov	x3, x19
  406cc8:	mov	x0, x20
  406ccc:	add	x4, x4, x19
  406cd0:	mov	w1, #0x0                   	// #0
  406cd4:	str	x4, [x25, #3744]
  406cd8:	bl	4062e8 <__fxstatat@plt+0x3898>
  406cdc:	mov	x21, x0
  406ce0:	ldr	w2, [x20, #152]
  406ce4:	cmp	w2, #0x6
  406ce8:	b.eq	406d14 <__fxstatat@plt+0x42c4>  // b.none
  406cec:	ldr	w0, [x25, #3764]
  406cf0:	cbnz	w0, 406de4 <__fxstatat@plt+0x4394>
  406cf4:	mov	x12, #0x1340                	// #4928
  406cf8:	ldp	x29, x30, [sp]
  406cfc:	ldp	x19, x20, [sp, #16]
  406d00:	ldp	x21, x22, [sp, #32]
  406d04:	ldp	x23, x24, [sp, #48]
  406d08:	ldp	x25, x26, [sp, #64]
  406d0c:	add	sp, sp, x12
  406d10:	ret
  406d14:	ldr	x0, [x20, #8]
  406d18:	cbz	x0, 406cf4 <__fxstatat@plt+0x42a4>
  406d1c:	ldr	x3, [x23, #1456]
  406d20:	mov	x2, #0x4                   	// #4
  406d24:	mov	x1, #0x1                   	// #1
  406d28:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406d2c:	add	x0, x0, #0x3f0
  406d30:	bl	402410 <fwrite_unlocked@plt>
  406d34:	ldr	x4, [x25, #3744]
  406d38:	add	x3, x21, #0x4
  406d3c:	add	x3, x3, x19
  406d40:	mov	x0, x20
  406d44:	add	x4, x4, #0x4
  406d48:	mov	x2, #0x0                   	// #0
  406d4c:	mov	w1, #0x1                   	// #1
  406d50:	str	x4, [x25, #3744]
  406d54:	bl	4062e8 <__fxstatat@plt+0x3898>
  406d58:	ldr	w0, [x25, #3764]
  406d5c:	cbz	w0, 406cf4 <__fxstatat@plt+0x42a4>
  406d60:	ldr	w1, [x20, #156]
  406d64:	mov	w2, #0x0                   	// #0
  406d68:	mov	w0, #0x1                   	// #1
  406d6c:	bl	405518 <__fxstatat@plt+0x2ac8>
  406d70:	b	406cf4 <__fxstatat@plt+0x42a4>
  406d74:	ldr	w2, [x25, #3976]
  406d78:	mov	x1, #0x0                   	// #0
  406d7c:	ldr	x0, [x20, #160]
  406d80:	bl	404fe0 <__fxstatat@plt+0x2590>
  406d84:	b	406980 <__fxstatat@plt+0x3f30>
  406d88:	ldrb	w2, [x20, #168]
  406d8c:	ldr	w0, [x20, #48]
  406d90:	ldr	w1, [x25, #4000]
  406d94:	bl	4050a8 <__fxstatat@plt+0x2658>
  406d98:	b	406974 <__fxstatat@plt+0x3f24>
  406d9c:	ldrb	w0, [x20, #168]
  406da0:	ldr	w19, [x20, #52]
  406da4:	ldr	w2, [x25, #3996]
  406da8:	cbz	w0, 406e1c <__fxstatat@plt+0x43cc>
  406dac:	ldrb	w1, [x25, #3752]
  406db0:	mov	x0, #0x0                   	// #0
  406db4:	cbz	w1, 406fb0 <__fxstatat@plt+0x4560>
  406db8:	mov	w1, w19
  406dbc:	bl	404fe0 <__fxstatat@plt+0x2590>
  406dc0:	b	40696c <__fxstatat@plt+0x3f1c>
  406dc4:	ldrb	w2, [x20, #168]
  406dc8:	ldr	w0, [x20, #48]
  406dcc:	ldr	w1, [x25, #3992]
  406dd0:	bl	4050a8 <__fxstatat@plt+0x2658>
  406dd4:	b	406964 <__fxstatat@plt+0x3f14>
  406dd8:	adrp	x5, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406ddc:	add	x5, x5, #0x3a0
  406de0:	b	406b0c <__fxstatat@plt+0x40bc>
  406de4:	ldr	w1, [x20, #40]
  406de8:	ldrb	w0, [x20, #168]
  406dec:	bl	405518 <__fxstatat@plt+0x2ac8>
  406df0:	mov	x12, #0x1340                	// #4928
  406df4:	ldp	x29, x30, [sp]
  406df8:	ldp	x19, x20, [sp, #16]
  406dfc:	ldp	x21, x22, [sp, #32]
  406e00:	ldp	x23, x24, [sp, #48]
  406e04:	ldp	x25, x26, [sp, #64]
  406e08:	add	sp, sp, x12
  406e0c:	ret
  406e10:	ldrb	w0, [x25, #3972]
  406e14:	cbz	w0, 406980 <__fxstatat@plt+0x3f30>
  406e18:	b	406940 <__fxstatat@plt+0x3ef0>
  406e1c:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406e20:	add	x0, x0, #0x3a0
  406e24:	b	406db8 <__fxstatat@plt+0x4368>
  406e28:	add	x1, sp, #0x110
  406e2c:	str	w4, [sp, #108]
  406e30:	bl	40db08 <__fxstatat@plt+0xb0b8>
  406e34:	mov	x5, x0
  406e38:	ldr	w4, [sp, #108]
  406e3c:	b	406b0c <__fxstatat@plt+0x40bc>
  406e40:	sub	x0, x1, #0xf0c, lsl #12
  406e44:	sub	x0, x0, #0x2ac
  406e48:	cmp	x0, x2
  406e4c:	b.lt	406fc4 <__fxstatat@plt+0x4574>  // b.tstop
  406e50:	cmp	x0, x2
  406e54:	mov	x0, #0x0                   	// #0
  406e58:	b.gt	406c60 <__fxstatat@plt+0x4210>
  406e5c:	cmp	w3, w5
  406e60:	b.pl	406c60 <__fxstatat@plt+0x4210>  // b.nfrst
  406e64:	cmp	x2, x1
  406e68:	b.lt	406fc4 <__fxstatat@plt+0x4574>  // b.tstop
  406e6c:	mov	x0, #0x0                   	// #0
  406e70:	b.gt	406c60 <__fxstatat@plt+0x4210>
  406e74:	mov	w0, w5
  406e78:	sub	w0, w0, w3
  406e7c:	lsr	w0, w0, #31
  406e80:	b	406c60 <__fxstatat@plt+0x4210>
  406e84:	ldr	w24, [x21, #416]
  406e88:	tbz	w24, #31, 406a90 <__fxstatat@plt+0x4040>
  406e8c:	b	406f94 <__fxstatat@plt+0x4544>
  406e90:	adrp	x5, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406e94:	add	x5, x5, #0x3a0
  406e98:	b	406aa8 <__fxstatat@plt+0x4058>
  406e9c:	mov	w0, #0x2e                  	// #46
  406ea0:	strb	w0, [sp, #138]
  406ea4:	b	406828 <__fxstatat@plt+0x3dd8>
  406ea8:	ldr	w2, [x25, #3968]
  406eac:	add	x1, sp, #0x110
  406eb0:	ldr	x0, [x20, #88]
  406eb4:	mov	x3, #0x200                 	// #512
  406eb8:	ldr	x4, [x25, #3960]
  406ebc:	bl	40cd18 <__fxstatat@plt+0xa2c8>
  406ec0:	mov	x24, x0
  406ec4:	b	406874 <__fxstatat@plt+0x3e24>
  406ec8:	ldr	w24, [x25, #4004]
  406ecc:	add	x1, sp, #0xd8
  406ed0:	ldr	w4, [x25, #4012]
  406ed4:	ldr	x3, [x20, #56]
  406ed8:	add	w0, w24, #0x2
  406edc:	ldr	w2, [x25, #4008]
  406ee0:	add	w0, w0, w4
  406ee4:	str	x27, [sp, #80]
  406ee8:	subs	w2, w2, w0
  406eec:	lsr	x4, x3, #32
  406ef0:	csel	w2, w2, wzr, pl  // pl = nfrst
  406ef4:	ubfx	w3, w3, #8, #12
  406ef8:	and	w0, w4, #0xfffff000
  406efc:	add	w24, w2, w24
  406f00:	orr	w0, w0, w3
  406f04:	bl	40db08 <__fxstatat@plt+0xb0b8>
  406f08:	mov	x26, x0
  406f0c:	ldr	x2, [x20, #56]
  406f10:	add	x1, sp, #0x110
  406f14:	ldr	w27, [x25, #4012]
  406f18:	lsr	x0, x2, #12
  406f1c:	bfxil	x0, x2, #0, #8
  406f20:	bl	40db08 <__fxstatat@plt+0xb0b8>
  406f24:	mov	w6, w27
  406f28:	mov	x7, x0
  406f2c:	mov	w4, w24
  406f30:	mov	x0, x19
  406f34:	mov	x5, x26
  406f38:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  406f3c:	mov	x2, #0xffffffffffffffff    	// #-1
  406f40:	add	x3, x3, #0x3e0
  406f44:	mov	w1, #0x1                   	// #1
  406f48:	bl	402440 <__sprintf_chk@plt>
  406f4c:	ldrsw	x0, [x25, #4008]
  406f50:	ldr	x27, [sp, #80]
  406f54:	add	x0, x0, #0x1
  406f58:	add	x19, x19, x0
  406f5c:	b	406a1c <__fxstatat@plt+0x3fcc>
  406f60:	add	x0, x21, x0, lsl #3
  406f64:	ldr	x2, [x0, #384]
  406f68:	b	406c80 <__fxstatat@plt+0x4230>
  406f6c:	add	x24, x25, #0x1, lsl #12
  406f70:	add	x0, x25, #0xfc0
  406f74:	bl	40bba8 <__fxstatat@plt+0x9158>
  406f78:	ldp	x2, x5, [sp, #144]
  406f7c:	ldp	x1, x3, [x24, #-64]
  406f80:	sub	x0, x1, #0xf0c, lsl #12
  406f84:	sub	x0, x0, #0x2ac
  406f88:	cmp	x0, x2
  406f8c:	b.ge	406e50 <__fxstatat@plt+0x4400>  // b.tcont
  406f90:	b	406e64 <__fxstatat@plt+0x4414>
  406f94:	mov	w24, #0x0                   	// #0
  406f98:	str	wzr, [x21, #416]
  406f9c:	b	406a90 <__fxstatat@plt+0x4040>
  406fa0:	ldrsw	x2, [sp, #232]
  406fa4:	add	x0, x25, #0x10
  406fa8:	add	x2, x0, x2, lsl #7
  406fac:	b	406a5c <__fxstatat@plt+0x400c>
  406fb0:	mov	w0, w19
  406fb4:	str	w2, [sp, #108]
  406fb8:	bl	40d890 <__fxstatat@plt+0xae40>
  406fbc:	ldr	w2, [sp, #108]
  406fc0:	b	406db8 <__fxstatat@plt+0x4368>
  406fc4:	mov	x0, #0x1                   	// #1
  406fc8:	b	406c60 <__fxstatat@plt+0x4210>
  406fcc:	ldr	w24, [x21, #416]
  406fd0:	tbz	w24, #31, 406a90 <__fxstatat@plt+0x4040>
  406fd4:	b	406a34 <__fxstatat@plt+0x3fe4>
  406fd8:	mov	x12, #0x2040                	// #8256
  406fdc:	sub	sp, sp, x12
  406fe0:	mov	w3, w2
  406fe4:	add	x5, sp, #0x2f
  406fe8:	mov	x2, x1
  406fec:	add	x4, sp, #0x38
  406ff0:	stp	x29, x30, [sp]
  406ff4:	mov	x29, sp
  406ff8:	mov	x1, x0
  406ffc:	stp	x19, x20, [sp, #16]
  407000:	mov	x19, x0
  407004:	add	x20, sp, #0x40
  407008:	add	x0, sp, #0x30
  40700c:	str	x20, [sp, #48]
  407010:	bl	405ba8 <__fxstatat@plt+0x3158>
  407014:	ldr	x0, [sp, #48]
  407018:	cmp	x20, x0
  40701c:	ccmp	x0, x19, #0x4, ne  // ne = any
  407020:	b.eq	407028 <__fxstatat@plt+0x45d8>  // b.none
  407024:	bl	402840 <free@plt>
  407028:	ldr	x0, [sp, #56]
  40702c:	mov	x12, #0x2040                	// #8256
  407030:	ldrb	w1, [sp, #47]
  407034:	ldp	x29, x30, [sp]
  407038:	add	x0, x1, x0
  40703c:	ldp	x19, x20, [sp, #16]
  407040:	add	sp, sp, x12
  407044:	ret
  407048:	sub	sp, sp, #0x2c0
  40704c:	stp	x29, x30, [sp]
  407050:	mov	x29, sp
  407054:	stp	x19, x20, [sp, #16]
  407058:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40705c:	add	x19, x19, #0x5c8
  407060:	str	x21, [sp, #32]
  407064:	mov	x21, x0
  407068:	ldrb	w0, [x19, #3936]
  40706c:	cbz	w0, 4070ec <__fxstatat@plt+0x469c>
  407070:	ldr	w0, [x19, #3940]
  407074:	cmp	w0, #0x4
  407078:	b.eq	407160 <__fxstatat@plt+0x4710>  // b.none
  40707c:	ldrb	w0, [x19, #3948]
  407080:	ldrsw	x20, [x19, #3944]
  407084:	add	x20, x20, #0x1
  407088:	cbz	w0, 407154 <__fxstatat@plt+0x4704>
  40708c:	ldrsw	x0, [x19, #3952]
  407090:	add	x0, x0, #0x1
  407094:	add	x20, x20, x0
  407098:	ldrb	w0, [x19, #3972]
  40709c:	cbnz	w0, 407138 <__fxstatat@plt+0x46e8>
  4070a0:	ldr	w2, [x21, #180]
  4070a4:	ldr	x0, [x21]
  4070a8:	ldr	x1, [x19, #3104]
  4070ac:	bl	406fd8 <__fxstatat@plt+0x4588>
  4070b0:	add	x20, x20, x0
  4070b4:	ldr	w1, [x19, #3764]
  4070b8:	cbz	w1, 4070d4 <__fxstatat@plt+0x4684>
  4070bc:	ldrb	w0, [x21, #168]
  4070c0:	ldr	w1, [x21, #40]
  4070c4:	ldr	w2, [x21, #152]
  4070c8:	bl	405438 <__fxstatat@plt+0x29e8>
  4070cc:	tst	w0, #0xff
  4070d0:	cinc	x20, x20, ne  // ne = any
  4070d4:	mov	x0, x20
  4070d8:	ldp	x29, x30, [sp]
  4070dc:	ldp	x19, x20, [sp, #16]
  4070e0:	ldr	x21, [sp, #32]
  4070e4:	add	sp, sp, #0x2c0
  4070e8:	ret
  4070ec:	mov	x20, #0x0                   	// #0
  4070f0:	ldrb	w0, [x19, #3948]
  4070f4:	cbz	w0, 407098 <__fxstatat@plt+0x4648>
  4070f8:	ldr	w0, [x19, #3940]
  4070fc:	cmp	w0, #0x4
  407100:	b.ne	40708c <__fxstatat@plt+0x463c>  // b.any
  407104:	ldrb	w1, [x21, #168]
  407108:	mov	x0, #0x2                   	// #2
  40710c:	cbz	w1, 407094 <__fxstatat@plt+0x4644>
  407110:	ldr	w2, [x19, #3968]
  407114:	add	x1, sp, #0x30
  407118:	ldr	x0, [x21, #88]
  40711c:	mov	x3, #0x200                 	// #512
  407120:	ldr	x4, [x19, #3960]
  407124:	bl	40cd18 <__fxstatat@plt+0xa2c8>
  407128:	bl	402430 <strlen@plt>
  40712c:	add	x0, x0, #0x1
  407130:	add	x20, x20, x0
  407134:	b	407098 <__fxstatat@plt+0x4648>
  407138:	ldr	w0, [x19, #3940]
  40713c:	cmp	w0, #0x4
  407140:	b.eq	407178 <__fxstatat@plt+0x4728>  // b.none
  407144:	ldrsw	x0, [x19, #3976]
  407148:	add	x0, x0, #0x1
  40714c:	add	x20, x20, x0
  407150:	b	4070a0 <__fxstatat@plt+0x4650>
  407154:	ldrb	w0, [x19, #3972]
  407158:	cbnz	w0, 407144 <__fxstatat@plt+0x46f4>
  40715c:	b	4070a0 <__fxstatat@plt+0x4650>
  407160:	ldr	x0, [x21, #32]
  407164:	add	x1, sp, #0x30
  407168:	bl	40db08 <__fxstatat@plt+0xb0b8>
  40716c:	bl	402430 <strlen@plt>
  407170:	add	x20, x0, #0x1
  407174:	b	4070f0 <__fxstatat@plt+0x46a0>
  407178:	ldr	x0, [x21, #160]
  40717c:	bl	402430 <strlen@plt>
  407180:	add	x0, x0, #0x1
  407184:	add	x20, x20, x0
  407188:	b	4070a0 <__fxstatat@plt+0x4650>
  40718c:	nop
  407190:	stp	x29, x30, [sp, #-64]!
  407194:	mov	x29, sp
  407198:	stp	x19, x20, [sp, #16]
  40719c:	adrp	x19, 430000 <__progname@@GLIBC_2.17+0xa48>
  4071a0:	add	x19, x19, #0x6c8
  4071a4:	stp	x21, x22, [sp, #32]
  4071a8:	and	w22, w0, #0xff
  4071ac:	str	x23, [sp, #48]
  4071b0:	adrp	x23, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4071b4:	add	x23, x23, #0x5c8
  4071b8:	ldp	x1, x0, [x19, #-216]
  4071bc:	ldr	x9, [x23, #3368]
  4071c0:	cmp	x9, x1
  4071c4:	csel	x20, x9, x1, ls  // ls = plast
  4071c8:	cmp	x20, x0
  4071cc:	b.ls	407298 <__fxstatat@plt+0x4848>  // b.plast
  4071d0:	cmp	x20, x1, lsr #1
  4071d4:	ldur	x0, [x19, #-200]
  4071d8:	b.cc	4073ec <__fxstatat@plt+0x499c>  // b.lo, b.ul, b.last
  4071dc:	mov	x2, #0x18                  	// #24
  4071e0:	umulh	x3, x1, x2
  4071e4:	mul	x2, x1, x2
  4071e8:	cmp	x3, #0x0
  4071ec:	cset	x3, ne  // ne = any
  4071f0:	tbnz	x2, #63, 407420 <__fxstatat@plt+0x49d0>
  4071f4:	cbnz	x3, 407420 <__fxstatat@plt+0x49d0>
  4071f8:	add	x1, x1, x1, lsl #1
  4071fc:	lsl	x1, x1, #3
  407200:	bl	411ed8 <__fxstatat@plt+0xf488>
  407204:	ldur	x21, [x19, #-216]
  407208:	stur	x0, [x19, #-200]
  40720c:	ldur	x0, [x19, #-208]
  407210:	add	x2, x0, #0x1
  407214:	sub	x0, x21, x0
  407218:	adds	x2, x21, x2
  40721c:	mul	x1, x0, x2
  407220:	b.cs	407420 <__fxstatat@plt+0x49d0>  // b.hs, b.nlast
  407224:	udiv	x0, x1, x0
  407228:	cmp	x2, x0
  40722c:	b.ne	407420 <__fxstatat@plt+0x49d0>  // b.any
  407230:	cmp	xzr, x1, lsr #62
  407234:	lsr	x1, x1, #1
  407238:	cset	x2, ne  // ne = any
  40723c:	lsl	x0, x1, #3
  407240:	tbnz	x1, #60, 407420 <__fxstatat@plt+0x49d0>
  407244:	cbnz	x2, 407420 <__fxstatat@plt+0x49d0>
  407248:	bl	411e78 <__fxstatat@plt+0xf428>
  40724c:	ldur	x1, [x19, #-208]
  407250:	cmp	x21, x1
  407254:	b.ls	407290 <__fxstatat@plt+0x4840>  // b.plast
  407258:	ldur	x4, [x19, #-200]
  40725c:	add	x2, x1, x1, lsl #1
  407260:	add	x3, x21, #0x1
  407264:	add	x1, x1, #0x1
  407268:	lsl	x3, x3, #3
  40726c:	lsl	x1, x1, #3
  407270:	add	x2, x4, x2, lsl #3
  407274:	nop
  407278:	str	x0, [x2, #16]
  40727c:	add	x0, x0, x1
  407280:	add	x1, x1, #0x8
  407284:	add	x2, x2, #0x18
  407288:	cmp	x1, x3
  40728c:	b.ne	407278 <__fxstatat@plt+0x4828>  // b.any
  407290:	ldr	x9, [x23, #3368]
  407294:	stur	x21, [x19, #-208]
  407298:	cbz	x20, 4072e8 <__fxstatat@plt+0x4898>
  40729c:	ldur	x5, [x19, #-200]
  4072a0:	mov	x7, #0x3                   	// #3
  4072a4:	mov	x4, x7
  4072a8:	mov	x6, #0x0                   	// #0
  4072ac:	mov	w8, #0x1                   	// #1
  4072b0:	ldr	x3, [x5, #16]
  4072b4:	mov	x2, x6
  4072b8:	add	x6, x6, #0x1
  4072bc:	mov	x0, #0x0                   	// #0
  4072c0:	strb	w8, [x5]
  4072c4:	str	x7, [x5, #8]
  4072c8:	str	x4, [x3, x0, lsl #3]
  4072cc:	cmp	x2, x0
  4072d0:	add	x0, x0, #0x1
  4072d4:	b.ne	4072c8 <__fxstatat@plt+0x4878>  // b.any
  4072d8:	add	x5, x5, #0x18
  4072dc:	add	x7, x7, #0x3
  4072e0:	cmp	x20, x6
  4072e4:	b.ne	4072b0 <__fxstatat@plt+0x4860>  // b.any
  4072e8:	mov	x21, #0x0                   	// #0
  4072ec:	cbz	x9, 4073a4 <__fxstatat@plt+0x4954>
  4072f0:	ldr	x0, [x23, #3384]
  4072f4:	ldr	x0, [x0, x21, lsl #3]
  4072f8:	bl	407048 <__fxstatat@plt+0x45f8>
  4072fc:	cbz	x20, 407390 <__fxstatat@plt+0x4940>
  407300:	add	x8, x0, #0x2
  407304:	mov	x1, #0x0                   	// #0
  407308:	ldur	x2, [x19, #-200]
  40730c:	ldr	x10, [x23, #8]
  407310:	ldr	x9, [x23, #3368]
  407314:	b	407370 <__fxstatat@plt+0x4920>
  407318:	add	x3, x9, x1
  40731c:	sub	x3, x3, #0x1
  407320:	udiv	x3, x3, x1
  407324:	udiv	x3, x21, x3
  407328:	ldr	x6, [x2, #16]
  40732c:	cmp	x3, x4
  407330:	csel	x4, x8, x0, ne  // ne = any
  407334:	ldr	x7, [x6, x3, lsl #3]
  407338:	cmp	x7, x4
  40733c:	b.cs	407364 <__fxstatat@plt+0x4914>  // b.hs, b.nlast
  407340:	ldr	x5, [x2, #8]
  407344:	sub	x5, x5, x7
  407348:	add	x5, x5, x4
  40734c:	str	x5, [x2, #8]
  407350:	str	x4, [x6, x3, lsl #3]
  407354:	ldr	x3, [x2, #8]
  407358:	cmp	x3, x10
  40735c:	cset	w3, cc  // cc = lo, ul, last
  407360:	strb	w3, [x2]
  407364:	add	x2, x2, #0x18
  407368:	cmp	x20, x1
  40736c:	b.eq	407398 <__fxstatat@plt+0x4948>  // b.none
  407370:	ldrb	w3, [x2]
  407374:	mov	x4, x1
  407378:	add	x1, x1, #0x1
  40737c:	cbz	w3, 407364 <__fxstatat@plt+0x4914>
  407380:	cbnz	w22, 407318 <__fxstatat@plt+0x48c8>
  407384:	udiv	x3, x21, x1
  407388:	msub	x3, x3, x1, x21
  40738c:	b	407328 <__fxstatat@plt+0x48d8>
  407390:	ldr	x9, [x23, #3368]
  407394:	nop
  407398:	add	x21, x21, #0x1
  40739c:	cmp	x21, x9
  4073a0:	b.cc	4072f0 <__fxstatat@plt+0x48a0>  // b.lo, b.ul, b.last
  4073a4:	cmp	x20, #0x1
  4073a8:	b.ls	4073d4 <__fxstatat@plt+0x4984>  // b.plast
  4073ac:	ldur	x1, [x19, #-200]
  4073b0:	add	x0, x20, x20, lsl #1
  4073b4:	add	x0, x1, x0, lsl #3
  4073b8:	b	4073cc <__fxstatat@plt+0x497c>
  4073bc:	sub	x20, x20, #0x1
  4073c0:	sub	x0, x0, #0x18
  4073c4:	cmp	x20, #0x1
  4073c8:	b.eq	4073d4 <__fxstatat@plt+0x4984>  // b.none
  4073cc:	ldurb	w1, [x0, #-24]
  4073d0:	cbz	w1, 4073bc <__fxstatat@plt+0x496c>
  4073d4:	mov	x0, x20
  4073d8:	ldp	x19, x20, [sp, #16]
  4073dc:	ldp	x21, x22, [sp, #32]
  4073e0:	ldr	x23, [sp, #48]
  4073e4:	ldp	x29, x30, [sp], #64
  4073e8:	ret
  4073ec:	mov	x1, #0x30                  	// #48
  4073f0:	umulh	x2, x20, x1
  4073f4:	mul	x1, x20, x1
  4073f8:	cmp	x2, #0x0
  4073fc:	cset	x2, ne  // ne = any
  407400:	tbnz	x1, #63, 407420 <__fxstatat@plt+0x49d0>
  407404:	cbnz	x2, 407420 <__fxstatat@plt+0x49d0>
  407408:	lsl	x21, x20, #1
  40740c:	add	x1, x21, x20
  407410:	lsl	x1, x1, #4
  407414:	bl	411ed8 <__fxstatat@plt+0xf488>
  407418:	stur	x0, [x19, #-200]
  40741c:	b	40720c <__fxstatat@plt+0x47bc>
  407420:	bl	4120d0 <__fxstatat@plt+0xf680>
  407424:	nop
  407428:	stp	x29, x30, [sp, #-96]!
  40742c:	mov	x29, sp
  407430:	stp	x19, x20, [sp, #16]
  407434:	adrp	x20, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  407438:	add	x20, x20, #0x5c8
  40743c:	stp	x25, x26, [sp, #64]
  407440:	and	w25, w0, #0xff
  407444:	ldr	x0, [x20, #3368]
  407448:	stp	x23, x24, [sp, #48]
  40744c:	adrp	x24, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  407450:	cbz	x0, 40753c <__fxstatat@plt+0x4aec>
  407454:	mov	x19, #0x0                   	// #0
  407458:	stp	x21, x22, [sp, #32]
  40745c:	mov	x22, #0x0                   	// #0
  407460:	str	x27, [sp, #80]
  407464:	b	40748c <__fxstatat@plt+0x4a3c>
  407468:	mov	x21, x22
  40746c:	cbnz	x19, 4075b4 <__fxstatat@plt+0x4b64>
  407470:	mov	x1, x21
  407474:	mov	x0, x23
  407478:	bl	406658 <__fxstatat@plt+0x3c08>
  40747c:	add	x19, x19, #0x1
  407480:	ldr	x0, [x20, #3368]
  407484:	cmp	x0, x19
  407488:	b.ls	407534 <__fxstatat@plt+0x4ae4>  // b.plast
  40748c:	ldr	x0, [x20, #8]
  407490:	ldr	x1, [x20, #3384]
  407494:	ldr	x23, [x1, x19, lsl #3]
  407498:	cbz	x0, 407468 <__fxstatat@plt+0x4a18>
  40749c:	mov	x0, x23
  4074a0:	bl	407048 <__fxstatat@plt+0x45f8>
  4074a4:	cbz	x19, 4075d4 <__fxstatat@plt+0x4b84>
  4074a8:	ldr	x1, [x20, #8]
  4074ac:	add	x21, x22, #0x2
  4074b0:	add	x2, x0, x21
  4074b4:	cbz	x1, 407570 <__fxstatat@plt+0x4b20>
  4074b8:	cmp	x1, x2
  4074bc:	b.ls	4075c0 <__fxstatat@plt+0x4b70>  // b.plast
  4074c0:	mov	x1, #0xfffffffffffffffd    	// #-3
  4074c4:	sub	x1, x1, x0
  4074c8:	cmp	x1, x22
  4074cc:	b.cs	407570 <__fxstatat@plt+0x4b20>  // b.hs, b.nlast
  4074d0:	mov	w26, #0xa                   	// #10
  4074d4:	mov	x22, x0
  4074d8:	mov	w27, w26
  4074dc:	mov	x21, #0x0                   	// #0
  4074e0:	ldr	x0, [x24, #1456]
  4074e4:	ldp	x1, x2, [x0, #40]
  4074e8:	cmp	x1, x2
  4074ec:	b.cs	407590 <__fxstatat@plt+0x4b40>  // b.hs, b.nlast
  4074f0:	add	x2, x1, #0x1
  4074f4:	str	x2, [x0, #40]
  4074f8:	strb	w25, [x1]
  4074fc:	ldr	x0, [x24, #1456]
  407500:	ldp	x1, x2, [x0, #40]
  407504:	cmp	x1, x2
  407508:	b.cs	4075a8 <__fxstatat@plt+0x4b58>  // b.hs, b.nlast
  40750c:	add	x2, x1, #0x1
  407510:	str	x2, [x0, #40]
  407514:	strb	w27, [x1]
  407518:	mov	x0, x23
  40751c:	mov	x1, x21
  407520:	add	x19, x19, #0x1
  407524:	bl	406658 <__fxstatat@plt+0x3c08>
  407528:	ldr	x0, [x20, #3368]
  40752c:	cmp	x0, x19
  407530:	b.hi	40748c <__fxstatat@plt+0x4a3c>  // b.pmore
  407534:	ldp	x21, x22, [sp, #32]
  407538:	ldr	x27, [sp, #80]
  40753c:	ldr	x0, [x24, #1456]
  407540:	ldp	x1, x2, [x0, #40]
  407544:	cmp	x1, x2
  407548:	b.cs	4075e0 <__fxstatat@plt+0x4b90>  // b.hs, b.nlast
  40754c:	add	x2, x1, #0x1
  407550:	str	x2, [x0, #40]
  407554:	mov	w0, #0xa                   	// #10
  407558:	strb	w0, [x1]
  40755c:	ldp	x19, x20, [sp, #16]
  407560:	ldp	x23, x24, [sp, #48]
  407564:	ldp	x25, x26, [sp, #64]
  407568:	ldp	x29, x30, [sp], #96
  40756c:	ret
  407570:	mov	x22, x2
  407574:	nop
  407578:	ldr	x0, [x24, #1456]
  40757c:	mov	w26, #0x20                  	// #32
  407580:	mov	w27, w26
  407584:	ldp	x1, x2, [x0, #40]
  407588:	cmp	x1, x2
  40758c:	b.cc	4074f0 <__fxstatat@plt+0x4aa0>  // b.lo, b.ul, b.last
  407590:	mov	w1, w25
  407594:	bl	402780 <__overflow@plt>
  407598:	ldr	x0, [x24, #1456]
  40759c:	ldp	x1, x2, [x0, #40]
  4075a0:	cmp	x1, x2
  4075a4:	b.cc	40750c <__fxstatat@plt+0x4abc>  // b.lo, b.ul, b.last
  4075a8:	mov	w1, w26
  4075ac:	bl	402780 <__overflow@plt>
  4075b0:	b	407470 <__fxstatat@plt+0x4a20>
  4075b4:	add	x22, x22, #0x2
  4075b8:	mov	x21, x22
  4075bc:	b	407578 <__fxstatat@plt+0x4b28>
  4075c0:	mov	w26, #0xa                   	// #10
  4075c4:	mov	x22, x0
  4075c8:	mov	w27, w26
  4075cc:	mov	x21, #0x0                   	// #0
  4075d0:	b	4074e0 <__fxstatat@plt+0x4a90>
  4075d4:	mov	x21, x22
  4075d8:	add	x22, x0, x22
  4075dc:	b	407470 <__fxstatat@plt+0x4a20>
  4075e0:	ldp	x19, x20, [sp, #16]
  4075e4:	mov	w1, #0xa                   	// #10
  4075e8:	ldp	x23, x24, [sp, #48]
  4075ec:	ldp	x25, x26, [sp, #64]
  4075f0:	ldp	x29, x30, [sp], #96
  4075f4:	b	402780 <__overflow@plt>
  4075f8:	stp	x29, x30, [sp, #-96]!
  4075fc:	mov	x29, sp
  407600:	stp	x19, x20, [sp, #16]
  407604:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  407608:	add	x19, x19, #0x5c8
  40760c:	ldr	w0, [x19, #3940]
  407610:	cmp	w0, #0x2
  407614:	b.eq	407714 <__fxstatat@plt+0x4cc4>  // b.none
  407618:	b.ls	40763c <__fxstatat@plt+0x4bec>  // b.plast
  40761c:	cmp	w0, #0x3
  407620:	b.eq	40781c <__fxstatat@plt+0x4dcc>  // b.none
  407624:	cmp	w0, #0x4
  407628:	b.ne	4076a0 <__fxstatat@plt+0x4c50>  // b.any
  40762c:	ldp	x19, x20, [sp, #16]
  407630:	mov	w0, #0x2c                  	// #44
  407634:	ldp	x29, x30, [sp], #96
  407638:	b	407428 <__fxstatat@plt+0x49d8>
  40763c:	stp	x21, x22, [sp, #32]
  407640:	cbz	w0, 4076ac <__fxstatat@plt+0x4c5c>
  407644:	ldr	x0, [x19, #3368]
  407648:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40764c:	mov	x20, #0x0                   	// #0
  407650:	add	x21, x21, #0x5b0
  407654:	mov	w22, #0xa                   	// #10
  407658:	cbz	x0, 40769c <__fxstatat@plt+0x4c4c>
  40765c:	nop
  407660:	ldr	x0, [x19, #3384]
  407664:	mov	x1, #0x0                   	// #0
  407668:	ldr	x0, [x0, x20, lsl #3]
  40766c:	bl	406658 <__fxstatat@plt+0x3c08>
  407670:	ldr	x0, [x21]
  407674:	ldp	x1, x2, [x0, #40]
  407678:	add	x3, x1, #0x1
  40767c:	cmp	x1, x2
  407680:	b.cs	407928 <__fxstatat@plt+0x4ed8>  // b.hs, b.nlast
  407684:	str	x3, [x0, #40]
  407688:	strb	w22, [x1]
  40768c:	ldr	x0, [x19, #3368]
  407690:	add	x20, x20, #0x1
  407694:	cmp	x0, x20
  407698:	b.hi	407660 <__fxstatat@plt+0x4c10>  // b.pmore
  40769c:	ldp	x21, x22, [sp, #32]
  4076a0:	ldp	x19, x20, [sp, #16]
  4076a4:	ldp	x29, x30, [sp], #96
  4076a8:	ret
  4076ac:	ldr	x0, [x19, #3368]
  4076b0:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4076b4:	mov	x20, #0x0                   	// #0
  4076b8:	add	x21, x21, #0x5b0
  4076bc:	mov	w22, #0xa                   	// #10
  4076c0:	cbz	x0, 40769c <__fxstatat@plt+0x4c4c>
  4076c4:	nop
  4076c8:	bl	405b40 <__fxstatat@plt+0x30f0>
  4076cc:	ldr	x0, [x19, #3384]
  4076d0:	ldr	x0, [x0, x20, lsl #3]
  4076d4:	bl	4067d8 <__fxstatat@plt+0x3d88>
  4076d8:	ldr	x0, [x21]
  4076dc:	ldp	x1, x2, [x0, #40]
  4076e0:	add	x3, x1, #0x1
  4076e4:	cmp	x1, x2
  4076e8:	b.cs	40791c <__fxstatat@plt+0x4ecc>  // b.hs, b.nlast
  4076ec:	str	x3, [x0, #40]
  4076f0:	strb	w22, [x1]
  4076f4:	ldr	x0, [x19, #3744]
  4076f8:	add	x20, x20, #0x1
  4076fc:	ldr	x1, [x19, #3368]
  407700:	add	x0, x0, #0x1
  407704:	str	x0, [x19, #3744]
  407708:	cmp	x1, x20
  40770c:	b.hi	4076c8 <__fxstatat@plt+0x4c78>  // b.pmore
  407710:	b	40769c <__fxstatat@plt+0x4c4c>
  407714:	ldr	x0, [x19, #8]
  407718:	cbz	x0, 40780c <__fxstatat@plt+0x4dbc>
  40771c:	mov	w0, #0x1                   	// #1
  407720:	stp	x21, x22, [sp, #32]
  407724:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  407728:	stp	x23, x24, [sp, #48]
  40772c:	add	x21, x21, #0x5b0
  407730:	mov	x23, #0x0                   	// #0
  407734:	stp	x25, x26, [sp, #64]
  407738:	bl	407190 <__fxstatat@plt+0x4740>
  40773c:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  407740:	ldr	x2, [x19, #3368]
  407744:	ldr	x25, [x1, #1536]
  407748:	add	x1, x0, x0, lsl #1
  40774c:	udiv	x24, x2, x0
  407750:	lsl	x1, x1, #3
  407754:	sub	x1, x1, #0x18
  407758:	add	x25, x25, x1
  40775c:	msub	x0, x24, x0, x2
  407760:	cmp	x0, #0x0
  407764:	cinc	x24, x24, ne  // ne = any
  407768:	cbz	x24, 407980 <__fxstatat@plt+0x4f30>
  40776c:	stp	x27, x28, [sp, #80]
  407770:	mov	x28, x23
  407774:	mov	x22, #0x0                   	// #0
  407778:	mov	x27, #0x0                   	// #0
  40777c:	b	407788 <__fxstatat@plt+0x4d38>
  407780:	mov	x1, x27
  407784:	bl	404e18 <__fxstatat@plt+0x23c8>
  407788:	ldr	x0, [x19, #3384]
  40778c:	ldr	x26, [x0, x28, lsl #3]
  407790:	add	x28, x28, x24
  407794:	mov	x0, x26
  407798:	bl	407048 <__fxstatat@plt+0x45f8>
  40779c:	ldr	x3, [x25, #16]
  4077a0:	mov	x1, x27
  4077a4:	mov	x20, x0
  4077a8:	mov	x0, x26
  4077ac:	ldr	x26, [x3, x22]
  4077b0:	bl	406658 <__fxstatat@plt+0x3c08>
  4077b4:	ldr	x1, [x19, #3368]
  4077b8:	add	x0, x20, x27
  4077bc:	add	x22, x22, #0x8
  4077c0:	add	x27, x27, x26
  4077c4:	cmp	x28, x1
  4077c8:	b.cc	407780 <__fxstatat@plt+0x4d30>  // b.lo, b.ul, b.last
  4077cc:	ldr	x0, [x21]
  4077d0:	ldp	x1, x2, [x0, #40]
  4077d4:	cmp	x1, x2
  4077d8:	b.cs	407968 <__fxstatat@plt+0x4f18>  // b.hs, b.nlast
  4077dc:	add	x2, x1, #0x1
  4077e0:	str	x2, [x0, #40]
  4077e4:	mov	w0, #0xa                   	// #10
  4077e8:	strb	w0, [x1]
  4077ec:	add	x23, x23, #0x1
  4077f0:	cmp	x24, x23
  4077f4:	b.ne	407770 <__fxstatat@plt+0x4d20>  // b.any
  4077f8:	ldp	x21, x22, [sp, #32]
  4077fc:	ldp	x23, x24, [sp, #48]
  407800:	ldp	x25, x26, [sp, #64]
  407804:	ldp	x27, x28, [sp, #80]
  407808:	b	4076a0 <__fxstatat@plt+0x4c50>
  40780c:	ldp	x19, x20, [sp, #16]
  407810:	mov	w0, #0x20                  	// #32
  407814:	ldp	x29, x30, [sp], #96
  407818:	b	407428 <__fxstatat@plt+0x49d8>
  40781c:	ldr	x0, [x19, #8]
  407820:	cbz	x0, 40780c <__fxstatat@plt+0x4dbc>
  407824:	mov	w0, #0x0                   	// #0
  407828:	stp	x21, x22, [sp, #32]
  40782c:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  407830:	stp	x23, x24, [sp, #48]
  407834:	stp	x25, x26, [sp, #64]
  407838:	stp	x27, x28, [sp, #80]
  40783c:	bl	407190 <__fxstatat@plt+0x4740>
  407840:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  407844:	ldr	x2, [x19, #3384]
  407848:	mov	x24, x0
  40784c:	add	x0, x0, x0, lsl #1
  407850:	ldr	x25, [x1, #1536]
  407854:	lsl	x0, x0, #3
  407858:	sub	x0, x0, #0x18
  40785c:	ldr	x20, [x2]
  407860:	add	x25, x25, x0
  407864:	mov	x0, x20
  407868:	bl	407048 <__fxstatat@plt+0x45f8>
  40786c:	ldr	x2, [x25, #16]
  407870:	mov	x23, x0
  407874:	mov	x1, #0x0                   	// #0
  407878:	mov	x0, x20
  40787c:	ldr	x28, [x2]
  407880:	bl	406658 <__fxstatat@plt+0x3c08>
  407884:	ldr	x0, [x19, #3368]
  407888:	cmp	x0, #0x1
  40788c:	b.ls	407934 <__fxstatat@plt+0x4ee4>  // b.plast
  407890:	mov	x27, #0x0                   	// #0
  407894:	mov	x20, #0x1                   	// #1
  407898:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40789c:	mov	w26, #0xa                   	// #10
  4078a0:	b	4078fc <__fxstatat@plt+0x4eac>
  4078a4:	ldr	x0, [x21, #1456]
  4078a8:	mov	x27, #0x0                   	// #0
  4078ac:	ldp	x1, x2, [x0, #40]
  4078b0:	add	x3, x1, #0x1
  4078b4:	cmp	x1, x2
  4078b8:	b.cs	407974 <__fxstatat@plt+0x4f24>  // b.hs, b.nlast
  4078bc:	str	x3, [x0, #40]
  4078c0:	strb	w26, [x1]
  4078c4:	ldr	x0, [x19, #3384]
  4078c8:	mov	x1, x27
  4078cc:	ldr	x23, [x0, x20, lsl #3]
  4078d0:	add	x20, x20, #0x1
  4078d4:	mov	x0, x23
  4078d8:	bl	406658 <__fxstatat@plt+0x3c08>
  4078dc:	mov	x0, x23
  4078e0:	bl	407048 <__fxstatat@plt+0x45f8>
  4078e4:	ldr	x1, [x25, #16]
  4078e8:	mov	x23, x0
  4078ec:	ldr	x0, [x19, #3368]
  4078f0:	ldr	x28, [x1, x22, lsl #3]
  4078f4:	cmp	x20, x0
  4078f8:	b.cs	407934 <__fxstatat@plt+0x4ee4>  // b.hs, b.nlast
  4078fc:	udiv	x22, x20, x24
  407900:	msub	x22, x22, x24, x20
  407904:	cbz	x22, 4078a4 <__fxstatat@plt+0x4e54>
  407908:	add	x0, x23, x27
  40790c:	add	x27, x27, x28
  407910:	mov	x1, x27
  407914:	bl	404e18 <__fxstatat@plt+0x23c8>
  407918:	b	4078c4 <__fxstatat@plt+0x4e74>
  40791c:	mov	w1, #0xa                   	// #10
  407920:	bl	402780 <__overflow@plt>
  407924:	b	4076f4 <__fxstatat@plt+0x4ca4>
  407928:	mov	w1, #0xa                   	// #10
  40792c:	bl	402780 <__overflow@plt>
  407930:	b	40768c <__fxstatat@plt+0x4c3c>
  407934:	ldr	x0, [x21, #1456]
  407938:	ldp	x1, x2, [x0, #40]
  40793c:	cmp	x1, x2
  407940:	b.cs	407990 <__fxstatat@plt+0x4f40>  // b.hs, b.nlast
  407944:	add	x2, x1, #0x1
  407948:	str	x2, [x0, #40]
  40794c:	mov	w0, #0xa                   	// #10
  407950:	strb	w0, [x1]
  407954:	ldp	x21, x22, [sp, #32]
  407958:	ldp	x23, x24, [sp, #48]
  40795c:	ldp	x25, x26, [sp, #64]
  407960:	ldp	x27, x28, [sp, #80]
  407964:	b	4076a0 <__fxstatat@plt+0x4c50>
  407968:	mov	w1, #0xa                   	// #10
  40796c:	bl	402780 <__overflow@plt>
  407970:	b	4077ec <__fxstatat@plt+0x4d9c>
  407974:	mov	w1, #0xa                   	// #10
  407978:	bl	402780 <__overflow@plt>
  40797c:	b	4078c4 <__fxstatat@plt+0x4e74>
  407980:	ldp	x21, x22, [sp, #32]
  407984:	ldp	x23, x24, [sp, #48]
  407988:	ldp	x25, x26, [sp, #64]
  40798c:	b	4076a0 <__fxstatat@plt+0x4c50>
  407990:	ldp	x19, x20, [sp, #16]
  407994:	mov	w1, #0xa                   	// #10
  407998:	ldp	x21, x22, [sp, #32]
  40799c:	ldp	x23, x24, [sp, #48]
  4079a0:	ldp	x25, x26, [sp, #64]
  4079a4:	ldp	x27, x28, [sp, #80]
  4079a8:	ldp	x29, x30, [sp], #96
  4079ac:	b	402780 <__overflow@plt>
  4079b0:	ldr	w4, [x1, #152]
  4079b4:	mov	x2, x1
  4079b8:	ldr	w3, [x0, #152]
  4079bc:	cmp	w4, #0x9
  4079c0:	cset	w1, eq  // eq = none
  4079c4:	cmp	w4, #0x3
  4079c8:	csinc	w1, w1, wzr, ne  // ne = any
  4079cc:	cmp	w3, #0x3
  4079d0:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  4079d4:	b.eq	4079f4 <__fxstatat@plt+0x4fa4>  // b.none
  4079d8:	ldr	w3, [x0, #156]
  4079dc:	and	w3, w3, #0xf000
  4079e0:	cbz	w1, 407a20 <__fxstatat@plt+0x4fd0>
  4079e4:	cmp	w3, #0x4, lsl #12
  4079e8:	b.eq	4079f8 <__fxstatat@plt+0x4fa8>  // b.none
  4079ec:	mov	w0, #0x1                   	// #1
  4079f0:	ret
  4079f4:	cbz	w1, 407a40 <__fxstatat@plt+0x4ff0>
  4079f8:	ldr	x1, [x0, #72]
  4079fc:	ldr	x3, [x2, #72]
  407a00:	cmp	x3, x1
  407a04:	b.gt	407a38 <__fxstatat@plt+0x4fe8>
  407a08:	b.ne	407a18 <__fxstatat@plt+0x4fc8>  // b.any
  407a0c:	ldr	x1, [x0]
  407a10:	ldr	x0, [x2]
  407a14:	b	402800 <strcmp@plt>
  407a18:	cset	w0, lt  // lt = tstop
  407a1c:	ret
  407a20:	ldr	w1, [x2, #156]
  407a24:	and	w1, w1, #0xf000
  407a28:	cmp	w1, #0x4, lsl #12
  407a2c:	b.eq	4079e4 <__fxstatat@plt+0x4f94>  // b.none
  407a30:	cmp	w3, #0x4, lsl #12
  407a34:	b.ne	4079f8 <__fxstatat@plt+0x4fa8>  // b.any
  407a38:	mov	w0, #0xffffffff            	// #-1
  407a3c:	ret
  407a40:	ldr	w1, [x2, #156]
  407a44:	and	w1, w1, #0xf000
  407a48:	cmp	w1, #0x4, lsl #12
  407a4c:	b.eq	4079f8 <__fxstatat@plt+0x4fa8>  // b.none
  407a50:	mov	w0, #0xffffffff            	// #-1
  407a54:	b	407a3c <__fxstatat@plt+0x4fec>
  407a58:	ldr	x3, [x0, #72]
  407a5c:	ldr	x2, [x1, #72]
  407a60:	cmp	x3, x2
  407a64:	b.gt	407a80 <__fxstatat@plt+0x5030>
  407a68:	b.ne	407a78 <__fxstatat@plt+0x5028>  // b.any
  407a6c:	ldr	x0, [x0]
  407a70:	ldr	x1, [x1]
  407a74:	b	404bf8 <__fxstatat@plt+0x21a8>
  407a78:	cset	w0, lt  // lt = tstop
  407a7c:	ret
  407a80:	mov	w0, #0xffffffff            	// #-1
  407a84:	ret
  407a88:	ldr	w4, [x1, #152]
  407a8c:	ldr	w3, [x0, #152]
  407a90:	cmp	w4, #0x3
  407a94:	cset	w2, eq  // eq = none
  407a98:	cmp	w4, #0x9
  407a9c:	csinc	w2, w2, wzr, ne  // ne = any
  407aa0:	cmp	w3, #0x3
  407aa4:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  407aa8:	b.eq	407ac8 <__fxstatat@plt+0x5078>  // b.none
  407aac:	ldr	w3, [x0, #156]
  407ab0:	and	w3, w3, #0xf000
  407ab4:	cbz	w2, 407af4 <__fxstatat@plt+0x50a4>
  407ab8:	cmp	w3, #0x4, lsl #12
  407abc:	b.eq	407acc <__fxstatat@plt+0x507c>  // b.none
  407ac0:	mov	w0, #0x1                   	// #1
  407ac4:	ret
  407ac8:	cbz	w2, 407b18 <__fxstatat@plt+0x50c8>
  407acc:	ldr	x3, [x0, #72]
  407ad0:	ldr	x2, [x1, #72]
  407ad4:	cmp	x3, x2
  407ad8:	b.gt	407b10 <__fxstatat@plt+0x50c0>
  407adc:	b.ne	407aec <__fxstatat@plt+0x509c>  // b.any
  407ae0:	ldr	x0, [x0]
  407ae4:	ldr	x1, [x1]
  407ae8:	b	404bf8 <__fxstatat@plt+0x21a8>
  407aec:	cset	w0, lt  // lt = tstop
  407af0:	ret
  407af4:	ldr	w2, [x1, #156]
  407af8:	and	w2, w2, #0xf000
  407afc:	cmp	w2, #0x4, lsl #12
  407b00:	b.eq	407ab8 <__fxstatat@plt+0x5068>  // b.none
  407b04:	cmp	w3, #0x4, lsl #12
  407b08:	b.ne	407acc <__fxstatat@plt+0x507c>  // b.any
  407b0c:	nop
  407b10:	mov	w0, #0xffffffff            	// #-1
  407b14:	ret
  407b18:	ldr	w2, [x1, #156]
  407b1c:	and	w2, w2, #0xf000
  407b20:	cmp	w2, #0x4, lsl #12
  407b24:	b.eq	407acc <__fxstatat@plt+0x507c>  // b.none
  407b28:	mov	w0, #0xffffffff            	// #-1
  407b2c:	b	407b14 <__fxstatat@plt+0x50c4>
  407b30:	ldr	w4, [x1, #152]
  407b34:	ldr	w3, [x0, #152]
  407b38:	cmp	w4, #0x9
  407b3c:	cset	w2, eq  // eq = none
  407b40:	cmp	w4, #0x3
  407b44:	csinc	w2, w2, wzr, ne  // ne = any
  407b48:	cmp	w3, #0x3
  407b4c:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  407b50:	b.eq	407b70 <__fxstatat@plt+0x5120>  // b.none
  407b54:	ldr	w3, [x0, #156]
  407b58:	and	w3, w3, #0xf000
  407b5c:	cbz	w2, 407b9c <__fxstatat@plt+0x514c>
  407b60:	cmp	w3, #0x4, lsl #12
  407b64:	b.eq	407b74 <__fxstatat@plt+0x5124>  // b.none
  407b68:	mov	w0, #0x1                   	// #1
  407b6c:	ret
  407b70:	cbz	w2, 407bc0 <__fxstatat@plt+0x5170>
  407b74:	ldr	x3, [x0, #72]
  407b78:	ldr	x2, [x1, #72]
  407b7c:	cmp	x3, x2
  407b80:	b.gt	407bb8 <__fxstatat@plt+0x5168>
  407b84:	b.ne	407b94 <__fxstatat@plt+0x5144>  // b.any
  407b88:	ldr	x0, [x0]
  407b8c:	ldr	x1, [x1]
  407b90:	b	402800 <strcmp@plt>
  407b94:	cset	w0, lt  // lt = tstop
  407b98:	ret
  407b9c:	ldr	w2, [x1, #156]
  407ba0:	and	w2, w2, #0xf000
  407ba4:	cmp	w2, #0x4, lsl #12
  407ba8:	b.eq	407b60 <__fxstatat@plt+0x5110>  // b.none
  407bac:	cmp	w3, #0x4, lsl #12
  407bb0:	b.ne	407b74 <__fxstatat@plt+0x5124>  // b.any
  407bb4:	nop
  407bb8:	mov	w0, #0xffffffff            	// #-1
  407bbc:	ret
  407bc0:	ldr	w2, [x1, #156]
  407bc4:	and	w2, w2, #0xf000
  407bc8:	cmp	w2, #0x4, lsl #12
  407bcc:	b.eq	407b74 <__fxstatat@plt+0x5124>  // b.none
  407bd0:	mov	w0, #0xffffffff            	// #-1
  407bd4:	b	407bbc <__fxstatat@plt+0x516c>
  407bd8:	ldr	w4, [x1, #152]
  407bdc:	mov	x2, x1
  407be0:	ldr	w3, [x0, #152]
  407be4:	cmp	w4, #0x3
  407be8:	cset	w1, eq  // eq = none
  407bec:	cmp	w4, #0x9
  407bf0:	csinc	w1, w1, wzr, ne  // ne = any
  407bf4:	cmp	w3, #0x3
  407bf8:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  407bfc:	b.eq	407c1c <__fxstatat@plt+0x51cc>  // b.none
  407c00:	ldr	w3, [x0, #156]
  407c04:	and	w3, w3, #0xf000
  407c08:	cbz	w1, 407c48 <__fxstatat@plt+0x51f8>
  407c0c:	cmp	w3, #0x4, lsl #12
  407c10:	b.eq	407c20 <__fxstatat@plt+0x51d0>  // b.none
  407c14:	mov	w0, #0x1                   	// #1
  407c18:	ret
  407c1c:	cbz	w1, 407c68 <__fxstatat@plt+0x5218>
  407c20:	ldr	x1, [x0, #72]
  407c24:	ldr	x3, [x2, #72]
  407c28:	cmp	x3, x1
  407c2c:	b.gt	407c60 <__fxstatat@plt+0x5210>
  407c30:	b.ne	407c40 <__fxstatat@plt+0x51f0>  // b.any
  407c34:	ldr	x1, [x0]
  407c38:	ldr	x0, [x2]
  407c3c:	b	404bf8 <__fxstatat@plt+0x21a8>
  407c40:	cset	w0, lt  // lt = tstop
  407c44:	ret
  407c48:	ldr	w1, [x2, #156]
  407c4c:	and	w1, w1, #0xf000
  407c50:	cmp	w1, #0x4, lsl #12
  407c54:	b.eq	407c0c <__fxstatat@plt+0x51bc>  // b.none
  407c58:	cmp	w3, #0x4, lsl #12
  407c5c:	b.ne	407c20 <__fxstatat@plt+0x51d0>  // b.any
  407c60:	mov	w0, #0xffffffff            	// #-1
  407c64:	ret
  407c68:	ldr	w1, [x2, #156]
  407c6c:	and	w1, w1, #0xf000
  407c70:	cmp	w1, #0x4, lsl #12
  407c74:	b.eq	407c20 <__fxstatat@plt+0x51d0>  // b.none
  407c78:	mov	w0, #0xffffffff            	// #-1
  407c7c:	b	407c64 <__fxstatat@plt+0x5214>
  407c80:	mov	x2, x1
  407c84:	ldr	x1, [x0, #72]
  407c88:	ldr	x3, [x2, #72]
  407c8c:	cmp	x3, x1
  407c90:	b.gt	407cac <__fxstatat@plt+0x525c>
  407c94:	b.ne	407ca4 <__fxstatat@plt+0x5254>  // b.any
  407c98:	ldr	x1, [x0]
  407c9c:	ldr	x0, [x2]
  407ca0:	b	404bf8 <__fxstatat@plt+0x21a8>
  407ca4:	cset	w0, lt  // lt = tstop
  407ca8:	ret
  407cac:	mov	w0, #0xffffffff            	// #-1
  407cb0:	ret
  407cb4:	nop
  407cb8:	mov	x2, x1
  407cbc:	ldr	x1, [x0, #72]
  407cc0:	ldr	x3, [x2, #72]
  407cc4:	cmp	x3, x1
  407cc8:	b.gt	407ce4 <__fxstatat@plt+0x5294>
  407ccc:	b.ne	407cdc <__fxstatat@plt+0x528c>  // b.any
  407cd0:	ldr	x1, [x0]
  407cd4:	ldr	x0, [x2]
  407cd8:	b	402800 <strcmp@plt>
  407cdc:	cset	w0, lt  // lt = tstop
  407ce0:	ret
  407ce4:	mov	w0, #0xffffffff            	// #-1
  407ce8:	ret
  407cec:	nop
  407cf0:	mov	x2, x0
  407cf4:	ldr	w4, [x1, #152]
  407cf8:	cmp	w4, #0x9
  407cfc:	ldr	w3, [x2, #152]
  407d00:	cset	w0, eq  // eq = none
  407d04:	cmp	w4, #0x3
  407d08:	csinc	w0, w0, wzr, ne  // ne = any
  407d0c:	cmp	w3, #0x3
  407d10:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  407d14:	b.eq	407d34 <__fxstatat@plt+0x52e4>  // b.none
  407d18:	ldr	w3, [x2, #156]
  407d1c:	and	w3, w3, #0xf000
  407d20:	cbz	w0, 407d50 <__fxstatat@plt+0x5300>
  407d24:	cmp	w3, #0x4, lsl #12
  407d28:	b.eq	407d68 <__fxstatat@plt+0x5318>  // b.none
  407d2c:	mov	w0, #0x1                   	// #1
  407d30:	ret
  407d34:	cbnz	w0, 407d68 <__fxstatat@plt+0x5318>
  407d38:	ldr	w0, [x1, #156]
  407d3c:	and	w0, w0, #0xf000
  407d40:	cmp	w0, #0x4, lsl #12
  407d44:	b.eq	407d68 <__fxstatat@plt+0x5318>  // b.none
  407d48:	mov	w0, #0xffffffff            	// #-1
  407d4c:	ret
  407d50:	ldr	w0, [x1, #156]
  407d54:	and	w0, w0, #0xf000
  407d58:	cmp	w0, #0x4, lsl #12
  407d5c:	b.eq	407d24 <__fxstatat@plt+0x52d4>  // b.none
  407d60:	cmp	w3, #0x4, lsl #12
  407d64:	b.eq	407d48 <__fxstatat@plt+0x52f8>  // b.none
  407d68:	ldr	x3, [x1, #128]
  407d6c:	ldr	x0, [x2, #128]
  407d70:	cmp	x3, x0
  407d74:	b.lt	407d48 <__fxstatat@plt+0x52f8>  // b.tstop
  407d78:	b.gt	407d2c <__fxstatat@plt+0x52dc>
  407d7c:	ldr	x0, [x1, #136]
  407d80:	ldr	x3, [x2, #136]
  407d84:	subs	w0, w0, w3
  407d88:	b.ne	407d30 <__fxstatat@plt+0x52e0>  // b.any
  407d8c:	ldr	x1, [x1]
  407d90:	ldr	x0, [x2]
  407d94:	b	402800 <strcmp@plt>
  407d98:	mov	x2, x0
  407d9c:	ldr	w4, [x1, #152]
  407da0:	cmp	w4, #0x9
  407da4:	ldr	w3, [x2, #152]
  407da8:	cset	w0, eq  // eq = none
  407dac:	cmp	w4, #0x3
  407db0:	csinc	w0, w0, wzr, ne  // ne = any
  407db4:	cmp	w3, #0x3
  407db8:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  407dbc:	b.eq	407ddc <__fxstatat@plt+0x538c>  // b.none
  407dc0:	ldr	w3, [x2, #156]
  407dc4:	and	w3, w3, #0xf000
  407dc8:	cbz	w0, 407df8 <__fxstatat@plt+0x53a8>
  407dcc:	cmp	w3, #0x4, lsl #12
  407dd0:	b.eq	407e10 <__fxstatat@plt+0x53c0>  // b.none
  407dd4:	mov	w0, #0x1                   	// #1
  407dd8:	ret
  407ddc:	cbnz	w0, 407e10 <__fxstatat@plt+0x53c0>
  407de0:	ldr	w0, [x1, #156]
  407de4:	and	w0, w0, #0xf000
  407de8:	cmp	w0, #0x4, lsl #12
  407dec:	b.eq	407e10 <__fxstatat@plt+0x53c0>  // b.none
  407df0:	mov	w0, #0xffffffff            	// #-1
  407df4:	ret
  407df8:	ldr	w0, [x1, #156]
  407dfc:	and	w0, w0, #0xf000
  407e00:	cmp	w0, #0x4, lsl #12
  407e04:	b.eq	407dcc <__fxstatat@plt+0x537c>  // b.none
  407e08:	cmp	w3, #0x4, lsl #12
  407e0c:	b.eq	407df0 <__fxstatat@plt+0x53a0>  // b.none
  407e10:	ldr	x3, [x1, #112]
  407e14:	ldr	x0, [x2, #112]
  407e18:	cmp	x3, x0
  407e1c:	b.lt	407df0 <__fxstatat@plt+0x53a0>  // b.tstop
  407e20:	b.gt	407dd4 <__fxstatat@plt+0x5384>
  407e24:	ldr	x0, [x1, #120]
  407e28:	ldr	x3, [x2, #120]
  407e2c:	subs	w0, w0, w3
  407e30:	b.ne	407dd8 <__fxstatat@plt+0x5388>  // b.any
  407e34:	ldr	x1, [x1]
  407e38:	ldr	x0, [x2]
  407e3c:	b	402800 <strcmp@plt>
  407e40:	stp	x29, x30, [sp, #-48]!
  407e44:	mov	x29, sp
  407e48:	stp	x21, x22, [sp, #32]
  407e4c:	adrp	x21, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  407e50:	add	x21, x21, #0x5c8
  407e54:	ldr	x22, [x21, #3368]
  407e58:	cbz	x22, 407e90 <__fxstatat@plt+0x5440>
  407e5c:	stp	x19, x20, [sp, #16]
  407e60:	ldr	x20, [x21, #3384]
  407e64:	add	x22, x20, x22, lsl #3
  407e68:	ldr	x19, [x20], #8
  407e6c:	ldr	x0, [x19]
  407e70:	bl	402840 <free@plt>
  407e74:	ldr	x0, [x19, #8]
  407e78:	bl	402840 <free@plt>
  407e7c:	ldr	x0, [x19, #16]
  407e80:	bl	402840 <free@plt>
  407e84:	cmp	x20, x22
  407e88:	b.ne	407e68 <__fxstatat@plt+0x5418>  // b.any
  407e8c:	ldp	x19, x20, [sp, #16]
  407e90:	add	x0, x21, #0xfa0
  407e94:	str	xzr, [x21, #3368]
  407e98:	strb	wzr, [x21, #3907]
  407e9c:	stp	wzr, wzr, [x0, #-8]
  407ea0:	stp	wzr, wzr, [x0]
  407ea4:	str	wzr, [x21, #3944]
  407ea8:	str	wzr, [x21, #3952]
  407eac:	str	wzr, [x21, #3976]
  407eb0:	strb	wzr, [x21, #3980]
  407eb4:	str	wzr, [x21, #3984]
  407eb8:	str	wzr, [x21, #4008]
  407ebc:	str	wzr, [x21, #4012]
  407ec0:	ldp	x21, x22, [sp, #32]
  407ec4:	ldp	x29, x30, [sp], #48
  407ec8:	ret
  407ecc:	nop
  407ed0:	stp	x29, x30, [sp, #-64]!
  407ed4:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  407ed8:	mov	x29, sp
  407edc:	ldrb	w1, [x1, #1136]
  407ee0:	str	x19, [sp, #16]
  407ee4:	mov	w19, w0
  407ee8:	cbz	w1, 407f1c <__fxstatat@plt+0x54cc>
  407eec:	mov	w4, w19
  407ef0:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  407ef4:	add	x3, x3, #0x3f8
  407ef8:	mov	x2, #0x15                  	// #21
  407efc:	mov	w1, #0x1                   	// #1
  407f00:	add	x0, sp, #0x28
  407f04:	bl	402440 <__sprintf_chk@plt>
  407f08:	add	x0, sp, #0x28
  407f0c:	bl	402430 <strlen@plt>
  407f10:	ldr	x19, [sp, #16]
  407f14:	ldp	x29, x30, [sp], #64
  407f18:	ret
  407f1c:	bl	40d690 <__fxstatat@plt+0xac40>
  407f20:	cbz	x0, 407eec <__fxstatat@plt+0x549c>
  407f24:	mov	w1, #0x0                   	// #0
  407f28:	bl	40e110 <__fxstatat@plt+0xb6c0>
  407f2c:	cmp	w0, #0x0
  407f30:	csel	w0, w0, wzr, ge  // ge = tcont
  407f34:	ldr	x19, [sp, #16]
  407f38:	ldp	x29, x30, [sp], #64
  407f3c:	ret
  407f40:	sub	sp, sp, #0x320
  407f44:	stp	x29, x30, [sp]
  407f48:	mov	x29, sp
  407f4c:	stp	x19, x20, [sp, #16]
  407f50:	adrp	x20, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  407f54:	add	x20, x20, #0x5c8
  407f58:	stp	x23, x24, [sp, #48]
  407f5c:	adrp	x24, 430000 <__progname@@GLIBC_2.17+0xa48>
  407f60:	add	x24, x24, #0x6c8
  407f64:	stp	x21, x22, [sp, #32]
  407f68:	mov	x21, x0
  407f6c:	mov	w22, w1
  407f70:	ldur	x0, [x24, #-192]
  407f74:	stp	x25, x26, [sp, #64]
  407f78:	and	w23, w2, #0xff
  407f7c:	ldr	x4, [x20, #3368]
  407f80:	stp	x27, x28, [sp, #80]
  407f84:	mov	x26, x3
  407f88:	cmp	x4, x0
  407f8c:	ldr	x0, [x20, #3400]
  407f90:	b.ne	407fd8 <__fxstatat@plt+0x5588>  // b.any
  407f94:	mov	x1, #0x170                 	// #368
  407f98:	umulh	x2, x4, x1
  407f9c:	mul	x1, x4, x1
  407fa0:	cmp	x2, #0x0
  407fa4:	cset	x2, ne  // ne = any
  407fa8:	tbnz	x1, #63, 408a2c <__fxstatat@plt+0x5fdc>
  407fac:	cbnz	x2, 408a2c <__fxstatat@plt+0x5fdc>
  407fb0:	add	x1, x4, x4, lsl #1
  407fb4:	lsl	x1, x1, #3
  407fb8:	sub	x1, x1, x4
  407fbc:	lsl	x1, x1, #4
  407fc0:	bl	411ed8 <__fxstatat@plt+0xf488>
  407fc4:	ldur	x1, [x24, #-192]
  407fc8:	str	x0, [x20, #3400]
  407fcc:	ldr	x4, [x20, #3368]
  407fd0:	lsl	x1, x1, #1
  407fd4:	stur	x1, [x24, #-192]
  407fd8:	add	x19, x4, x4, lsl #1
  407fdc:	ldrb	w1, [x20, #3907]
  407fe0:	mov	w2, #0xffffffff            	// #-1
  407fe4:	lsl	x19, x19, #3
  407fe8:	sub	x4, x19, x4
  407fec:	add	x19, x0, x4, lsl #3
  407ff0:	stp	xzr, xzr, [x19, #144]
  407ff4:	str	xzr, [x19, #176]
  407ff8:	stp	xzr, xzr, [x19]
  407ffc:	stp	xzr, xzr, [x19, #16]
  408000:	stp	xzr, xzr, [x19, #32]
  408004:	stp	xzr, xzr, [x19, #48]
  408008:	stp	xzr, xzr, [x19, #64]
  40800c:	stp	xzr, xzr, [x19, #80]
  408010:	stp	xzr, xzr, [x19, #96]
  408014:	stp	xzr, xzr, [x19, #112]
  408018:	stp	xzr, xzr, [x19, #128]
  40801c:	str	w22, [x19, #152]
  408020:	stp	xzr, xzr, [x19, #160]
  408024:	str	w2, [x19, #180]
  408028:	cbnz	w1, 408034 <__fxstatat@plt+0x55e4>
  40802c:	ldrb	w0, [x20, #3906]
  408030:	cbnz	w0, 408544 <__fxstatat@plt+0x5af4>
  408034:	ldurb	w4, [x24, #-184]
  408038:	cbz	w23, 408174 <__fxstatat@plt+0x5724>
  40803c:	ldrb	w25, [x21]
  408040:	mov	x27, x21
  408044:	cmp	w25, #0x2f
  408048:	b.eq	408054 <__fxstatat@plt+0x5604>  // b.none
  40804c:	ldrb	w28, [x26]
  408050:	cbnz	w28, 4081ec <__fxstatat@plt+0x579c>
  408054:	cbnz	w4, 40828c <__fxstatat@plt+0x583c>
  408058:	ldur	w25, [x24, #-180]
  40805c:	add	x26, x19, #0x18
  408060:	cmp	w25, #0x4
  408064:	b.hi	408424 <__fxstatat@plt+0x59d4>  // b.pmore
  408068:	cmp	w25, #0x2
  40806c:	b.hi	4084dc <__fxstatat@plt+0x5a8c>  // b.pmore
  408070:	mov	x2, x26
  408074:	mov	x1, x27
  408078:	mov	w0, #0x0                   	// #0
  40807c:	bl	402900 <__lxstat@plt>
  408080:	cbnz	w0, 408440 <__fxstatat@plt+0x59f0>
  408084:	mov	w0, #0x1                   	// #1
  408088:	strb	w0, [x19, #168]
  40808c:	cmp	w22, #0x5
  408090:	b.eq	408470 <__fxstatat@plt+0x5a20>  // b.none
  408094:	ldr	w0, [x19, #40]
  408098:	and	w0, w0, #0xf000
  40809c:	cmp	w0, #0x8, lsl #12
  4080a0:	b.eq	408470 <__fxstatat@plt+0x5a20>  // b.none
  4080a4:	ldr	w25, [x20, #3940]
  4080a8:	cbz	w25, 4080b4 <__fxstatat@plt+0x5664>
  4080ac:	ldrb	w0, [x20, #3972]
  4080b0:	cbz	w0, 4080f0 <__fxstatat@plt+0x56a0>
  4080b4:	bl	4029e0 <__errno_location@plt>
  4080b8:	mov	x22, x0
  4080bc:	ldur	x28, [x24, #-160]
  4080c0:	mov	w0, #0x5f                  	// #95
  4080c4:	ldr	x2, [x19, #24]
  4080c8:	cmp	x2, x28
  4080cc:	b.eq	4080d4 <__fxstatat@plt+0x5684>  // b.none
  4080d0:	stur	x2, [x24, #-160]
  4080d4:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4080d8:	add	x1, x1, #0x368
  4080dc:	str	w0, [x22]
  4080e0:	add	x1, x1, #0x1a8
  4080e4:	str	x1, [x19, #160]
  4080e8:	cbz	w25, 4085b8 <__fxstatat@plt+0x5b68>
  4080ec:	str	wzr, [x19, #172]
  4080f0:	ldr	w0, [x19, #40]
  4080f4:	and	w0, w0, #0xf000
  4080f8:	cmp	w0, #0xa, lsl #12
  4080fc:	b.eq	408608 <__fxstatat@plt+0x5bb8>  // b.none
  408100:	cmp	w0, #0x4, lsl #12
  408104:	b.eq	4086e8 <__fxstatat@plt+0x5c98>  // b.none
  408108:	mov	w0, #0x5                   	// #5
  40810c:	str	w0, [x19, #152]
  408110:	ldr	w0, [x20, #3940]
  408114:	ldr	x25, [x19, #88]
  408118:	cbz	w0, 4082c4 <__fxstatat@plt+0x5874>
  40811c:	ldrb	w0, [x20, #3948]
  408120:	cbnz	w0, 4082c4 <__fxstatat@plt+0x5874>
  408124:	ldrb	w0, [x20, #3972]
  408128:	cbnz	w0, 408328 <__fxstatat@plt+0x58d8>
  40812c:	ldrb	w0, [x20, #3936]
  408130:	cbnz	w0, 408400 <__fxstatat@plt+0x59b0>
  408134:	mov	x0, x21
  408138:	bl	4120a0 <__fxstatat@plt+0xf650>
  40813c:	str	x0, [x19]
  408140:	ldr	x0, [x20, #3368]
  408144:	add	x0, x0, #0x1
  408148:	str	x0, [x20, #3368]
  40814c:	mov	sp, x29
  408150:	mov	x0, x25
  408154:	ldp	x29, x30, [sp]
  408158:	ldp	x19, x20, [sp, #16]
  40815c:	ldp	x21, x22, [sp, #32]
  408160:	ldp	x23, x24, [sp, #48]
  408164:	ldp	x25, x26, [sp, #64]
  408168:	ldp	x27, x28, [sp, #80]
  40816c:	add	sp, sp, #0x320
  408170:	ret
  408174:	cbnz	w4, 408514 <__fxstatat@plt+0x5ac4>
  408178:	ldurb	w0, [x24, #-183]
  40817c:	cbnz	w0, 4081d0 <__fxstatat@plt+0x5780>
  408180:	cmp	w22, #0x3
  408184:	b.eq	4088b8 <__fxstatat@plt+0x5e68>  // b.none
  408188:	ldrb	w0, [x20, #3936]
  40818c:	cbnz	w0, 408788 <__fxstatat@plt+0x5d38>
  408190:	ldurb	w1, [x24, #-182]
  408194:	cbz	w1, 4087dc <__fxstatat@plt+0x5d8c>
  408198:	cmp	w22, #0x0
  40819c:	cset	w1, eq  // eq = none
  4081a0:	cmp	w1, #0x0
  4081a4:	ccmp	w22, #0x6, #0x4, eq  // eq = none
  4081a8:	b.ne	4089a8 <__fxstatat@plt+0x5f58>  // b.any
  4081ac:	ldur	w2, [x24, #-180]
  4081b0:	cmp	w2, #0x5
  4081b4:	b.eq	408984 <__fxstatat@plt+0x5f34>  // b.none
  4081b8:	ldrb	w2, [x20, #3921]
  4081bc:	cbnz	w2, 4081d0 <__fxstatat@plt+0x5780>
  4081c0:	ldurb	w2, [x24, #-176]
  4081c4:	cbnz	w2, 4081d0 <__fxstatat@plt+0x5780>
  4081c8:	cbz	w0, 40899c <__fxstatat@plt+0x5f4c>
  4081cc:	nop
  4081d0:	ldrb	w25, [x21]
  4081d4:	mov	x27, x21
  4081d8:	cmp	w25, #0x2f
  4081dc:	b.eq	408058 <__fxstatat@plt+0x5608>  // b.none
  4081e0:	ldrb	w28, [x26]
  4081e4:	mov	x27, x21
  4081e8:	cbz	w28, 408058 <__fxstatat@plt+0x5608>
  4081ec:	mov	x0, x21
  4081f0:	str	w4, [x29, #108]
  4081f4:	bl	402430 <strlen@plt>
  4081f8:	mov	x27, x0
  4081fc:	mov	x0, x26
  408200:	bl	402430 <strlen@plt>
  408204:	add	x27, x27, x0
  408208:	ldrb	w1, [x26, #1]
  40820c:	add	x27, x27, #0x11
  408210:	ldr	w4, [x29, #108]
  408214:	and	x27, x27, #0xfffffffffffffff0
  408218:	cmp	w28, #0x2e
  40821c:	sub	sp, sp, x27
  408220:	mov	x27, sp
  408224:	b.eq	4085ac <__fxstatat@plt+0x5b5c>  // b.none
  408228:	mov	x3, x27
  40822c:	mov	x0, x26
  408230:	b	408240 <__fxstatat@plt+0x57f0>
  408234:	mov	w28, w1
  408238:	ldrb	w1, [x0, #1]
  40823c:	mov	x3, x2
  408240:	mov	x2, x3
  408244:	add	x0, x0, #0x1
  408248:	strb	w28, [x2], #1
  40824c:	cbnz	w1, 408234 <__fxstatat@plt+0x57e4>
  408250:	cmp	x26, x0
  408254:	b.cs	408270 <__fxstatat@plt+0x5820>  // b.hs, b.nlast
  408258:	ldurb	w0, [x0, #-1]
  40825c:	cmp	w0, #0x2f
  408260:	b.eq	408270 <__fxstatat@plt+0x5820>  // b.none
  408264:	mov	w0, #0x2f                  	// #47
  408268:	strb	w0, [x2]
  40826c:	add	x2, x3, #0x2
  408270:	cbz	w25, 408284 <__fxstatat@plt+0x5834>
  408274:	mov	x0, x21
  408278:	strb	w25, [x2], #1
  40827c:	ldrb	w25, [x0, #1]!
  408280:	cbnz	w25, 408278 <__fxstatat@plt+0x5828>
  408284:	strb	wzr, [x2]
  408288:	cbz	w4, 408058 <__fxstatat@plt+0x5608>
  40828c:	mov	x0, x27
  408290:	mov	w1, #0x2                   	// #2
  408294:	bl	40ab38 <__fxstatat@plt+0x80e8>
  408298:	str	x0, [x19, #16]
  40829c:	cbnz	x0, 408058 <__fxstatat@plt+0x5608>
  4082a0:	mov	w2, #0x5                   	// #5
  4082a4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4082a8:	add	x1, x1, #0x400
  4082ac:	bl	402970 <dcgettext@plt>
  4082b0:	mov	x2, x27
  4082b4:	mov	x1, x0
  4082b8:	mov	w0, w23
  4082bc:	bl	405150 <__fxstatat@plt+0x2700>
  4082c0:	b	408058 <__fxstatat@plt+0x5608>
  4082c4:	ldr	w2, [x20, #3968]
  4082c8:	mov	x3, #0x200                 	// #512
  4082cc:	ldr	x4, [x20, #3960]
  4082d0:	add	x23, x29, #0x90
  4082d4:	mov	x1, x23
  4082d8:	mov	x0, x25
  4082dc:	bl	40cd18 <__fxstatat@plt+0xa2c8>
  4082e0:	mov	w1, #0x0                   	// #0
  4082e4:	bl	40e110 <__fxstatat@plt+0xb6c0>
  4082e8:	ldr	w1, [x20, #3952]
  4082ec:	cmp	w0, w1
  4082f0:	b.le	4082f8 <__fxstatat@plt+0x58a8>
  4082f4:	str	w0, [x20, #3952]
  4082f8:	ldr	w0, [x20, #3940]
  4082fc:	cbnz	w0, 408124 <__fxstatat@plt+0x56d4>
  408300:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  408304:	add	x22, x22, #0x368
  408308:	ldrb	w0, [x22, #400]
  40830c:	cbnz	w0, 40876c <__fxstatat@plt+0x5d1c>
  408310:	ldrb	w0, [x22, #401]
  408314:	cbnz	w0, 408728 <__fxstatat@plt+0x5cd8>
  408318:	ldrb	w0, [x20, #3988]
  40831c:	cbnz	w0, 40870c <__fxstatat@plt+0x5cbc>
  408320:	ldrb	w0, [x20, #3972]
  408324:	cbz	w0, 40833c <__fxstatat@plt+0x58ec>
  408328:	ldr	x0, [x19, #160]
  40832c:	bl	402430 <strlen@plt>
  408330:	ldr	w1, [x20, #3976]
  408334:	cmp	w0, w1
  408338:	b.gt	408564 <__fxstatat@plt+0x5b14>
  40833c:	ldr	w0, [x20, #3940]
  408340:	cbnz	w0, 40812c <__fxstatat@plt+0x56dc>
  408344:	ldr	w0, [x19, #44]
  408348:	add	x1, x29, #0x78
  40834c:	bl	40db08 <__fxstatat@plt+0xb0b8>
  408350:	bl	402430 <strlen@plt>
  408354:	ldr	w1, [x20, #3984]
  408358:	cmp	w0, w1
  40835c:	b.le	408364 <__fxstatat@plt+0x5914>
  408360:	str	w0, [x20, #3984]
  408364:	ldr	w0, [x19, #40]
  408368:	mov	w1, #0xb000                	// #45056
  40836c:	and	w0, w0, w1
  408370:	cmp	w0, #0x2, lsl #12
  408374:	b.ne	40856c <__fxstatat@plt+0x5b1c>  // b.any
  408378:	ldr	x0, [x19, #56]
  40837c:	add	x23, x29, #0x90
  408380:	mov	x1, x23
  408384:	lsr	x2, x0, #32
  408388:	ubfx	w0, w0, #8, #12
  40838c:	and	w2, w2, #0xfffff000
  408390:	orr	w0, w2, w0
  408394:	bl	40db08 <__fxstatat@plt+0xb0b8>
  408398:	bl	402430 <strlen@plt>
  40839c:	ldr	w1, [x20, #4004]
  4083a0:	cmp	w0, w1
  4083a4:	b.le	4083ac <__fxstatat@plt+0x595c>
  4083a8:	str	w0, [x20, #4004]
  4083ac:	ldr	x2, [x19, #56]
  4083b0:	mov	x1, x23
  4083b4:	lsr	x0, x2, #12
  4083b8:	bfxil	x0, x2, #0, #8
  4083bc:	bl	40db08 <__fxstatat@plt+0xb0b8>
  4083c0:	bl	402430 <strlen@plt>
  4083c4:	ldr	w1, [x20, #4012]
  4083c8:	cmp	w0, w1
  4083cc:	b.le	4083d8 <__fxstatat@plt+0x5988>
  4083d0:	mov	w1, w0
  4083d4:	str	w0, [x20, #4012]
  4083d8:	ldr	w0, [x20, #4004]
  4083dc:	ldr	w2, [x20, #4008]
  4083e0:	add	w0, w0, #0x2
  4083e4:	add	w0, w0, w1
  4083e8:	cmp	w0, w2
  4083ec:	b.le	40812c <__fxstatat@plt+0x56dc>
  4083f0:	str	w0, [x20, #4008]
  4083f4:	ldrb	w0, [x20, #3936]
  4083f8:	cbz	w0, 408134 <__fxstatat@plt+0x56e4>
  4083fc:	nop
  408400:	ldr	x0, [x19, #32]
  408404:	add	x1, x29, #0x90
  408408:	bl	40db08 <__fxstatat@plt+0xb0b8>
  40840c:	bl	402430 <strlen@plt>
  408410:	ldr	w1, [x20, #3944]
  408414:	cmp	w0, w1
  408418:	b.le	408134 <__fxstatat@plt+0x56e4>
  40841c:	str	w0, [x20, #3944]
  408420:	b	408134 <__fxstatat@plt+0x56e4>
  408424:	cmp	w25, #0x5
  408428:	b.ne	408070 <__fxstatat@plt+0x5620>  // b.any
  40842c:	mov	x2, x26
  408430:	mov	x1, x27
  408434:	mov	w0, #0x0                   	// #0
  408438:	bl	402a00 <__xstat@plt>
  40843c:	cbz	w0, 408084 <__fxstatat@plt+0x5634>
  408440:	mov	w2, #0x5                   	// #5
  408444:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  408448:	mov	x0, #0x0                   	// #0
  40844c:	add	x1, x1, #0x418
  408450:	bl	402970 <dcgettext@plt>
  408454:	mov	x25, #0x0                   	// #0
  408458:	mov	x1, x0
  40845c:	mov	x2, x27
  408460:	mov	w0, w23
  408464:	bl	405150 <__fxstatat@plt+0x2700>
  408468:	cbnz	w23, 40814c <__fxstatat@plt+0x56fc>
  40846c:	b	408134 <__fxstatat@plt+0x56e4>
  408470:	ldrb	w0, [x20, #3904]
  408474:	cbz	w0, 4080a4 <__fxstatat@plt+0x5654>
  408478:	mov	w0, #0x15                  	// #21
  40847c:	bl	404540 <__fxstatat@plt+0x1af0>
  408480:	ands	w22, w0, #0xff
  408484:	b.eq	4080a4 <__fxstatat@plt+0x5654>  // b.none
  408488:	ldur	x0, [x24, #-168]
  40848c:	ldr	x1, [x19, #24]
  408490:	cmp	x1, x0
  408494:	b.eq	40883c <__fxstatat@plt+0x5dec>  // b.none
  408498:	mov	x0, x27
  40849c:	bl	402910 <cap_get_file@plt>
  4084a0:	mov	x25, x0
  4084a4:	cbz	x0, 408854 <__fxstatat@plt+0x5e04>
  4084a8:	mov	x1, #0x0                   	// #0
  4084ac:	bl	4023e0 <cap_to_text@plt>
  4084b0:	mov	x1, x0
  4084b4:	mov	x0, x25
  4084b8:	mov	x25, x1
  4084bc:	bl	402950 <cap_free@plt>
  4084c0:	cbz	x25, 408854 <__fxstatat@plt+0x5e04>
  4084c4:	ldrb	w28, [x25]
  4084c8:	mov	x0, x25
  4084cc:	bl	402950 <cap_free@plt>
  4084d0:	cbz	w28, 408854 <__fxstatat@plt+0x5e04>
  4084d4:	strb	w22, [x19, #176]
  4084d8:	b	4080a4 <__fxstatat@plt+0x5654>
  4084dc:	cbz	w23, 408070 <__fxstatat@plt+0x5620>
  4084e0:	mov	x2, x26
  4084e4:	mov	x1, x27
  4084e8:	mov	w0, #0x0                   	// #0
  4084ec:	bl	402a00 <__xstat@plt>
  4084f0:	cmp	w25, #0x3
  4084f4:	b.eq	40850c <__fxstatat@plt+0x5abc>  // b.none
  4084f8:	tbnz	w0, #31, 4087a0 <__fxstatat@plt+0x5d50>
  4084fc:	ldr	w1, [x19, #40]
  408500:	and	w1, w1, #0xf000
  408504:	cmp	w1, #0x4, lsl #12
  408508:	b.ne	408070 <__fxstatat@plt+0x5620>  // b.any
  40850c:	cbz	w0, 408084 <__fxstatat@plt+0x5634>
  408510:	b	4087b0 <__fxstatat@plt+0x5d60>
  408514:	ldrb	w25, [x21]
  408518:	cmp	w25, #0x2f
  40851c:	b.eq	4085a4 <__fxstatat@plt+0x5b54>  // b.none
  408520:	ldrb	w28, [x26]
  408524:	mov	x27, x21
  408528:	cbnz	w28, 4081ec <__fxstatat@plt+0x579c>
  40852c:	mov	x0, x27
  408530:	mov	w1, #0x2                   	// #2
  408534:	bl	40ab38 <__fxstatat@plt+0x80e8>
  408538:	str	x0, [x19, #16]
  40853c:	cbnz	x0, 408058 <__fxstatat@plt+0x5608>
  408540:	b	4082a0 <__fxstatat@plt+0x5850>
  408544:	mov	x0, x21
  408548:	bl	404900 <__fxstatat@plt+0x1eb0>
  40854c:	and	w0, w0, #0xff
  408550:	str	w0, [x19, #180]
  408554:	cbz	w0, 408034 <__fxstatat@plt+0x55e4>
  408558:	mov	w0, #0x1                   	// #1
  40855c:	strb	w0, [x20, #3907]
  408560:	b	408034 <__fxstatat@plt+0x55e4>
  408564:	str	w0, [x20, #3976]
  408568:	b	40833c <__fxstatat@plt+0x58ec>
  40856c:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  408570:	ldr	w2, [x20, #4016]
  408574:	ldr	x0, [x19, #72]
  408578:	mov	x3, #0x1                   	// #1
  40857c:	ldr	x4, [x1, #1280]
  408580:	add	x1, x29, #0x90
  408584:	bl	40cd18 <__fxstatat@plt+0xa2c8>
  408588:	mov	w1, #0x0                   	// #0
  40858c:	bl	40e110 <__fxstatat@plt+0xb6c0>
  408590:	ldr	w1, [x20, #4008]
  408594:	cmp	w0, w1
  408598:	b.le	40812c <__fxstatat@plt+0x56dc>
  40859c:	str	w0, [x20, #4008]
  4085a0:	b	4083f4 <__fxstatat@plt+0x59a4>
  4085a4:	mov	x27, x21
  4085a8:	b	40828c <__fxstatat@plt+0x583c>
  4085ac:	mov	x2, x27
  4085b0:	cbz	w1, 408270 <__fxstatat@plt+0x5820>
  4085b4:	b	408228 <__fxstatat@plt+0x57d8>
  4085b8:	ldur	x0, [x24, #-152]
  4085bc:	cmp	x2, x0
  4085c0:	b.eq	408954 <__fxstatat@plt+0x5f04>  // b.none
  4085c4:	str	wzr, [x22]
  4085c8:	mov	x1, x26
  4085cc:	mov	x0, x27
  4085d0:	bl	40b328 <__fxstatat@plt+0x88d8>
  4085d4:	cmp	w0, #0x0
  4085d8:	b.le	4087e4 <__fxstatat@plt+0x5d94>
  4085dc:	mov	w1, #0x2                   	// #2
  4085e0:	mov	w0, #0x1                   	// #1
  4085e4:	str	w1, [x19, #172]
  4085e8:	strb	w0, [x20, #3980]
  4085ec:	nop
  4085f0:	ldr	w0, [x19, #40]
  4085f4:	and	w0, w0, #0xf000
  4085f8:	cmp	w0, #0xa, lsl #12
  4085fc:	b.ne	408100 <__fxstatat@plt+0x56b0>  // b.any
  408600:	ldr	w0, [x20, #3940]
  408604:	cbz	w0, 408610 <__fxstatat@plt+0x5bc0>
  408608:	ldurb	w0, [x24, #-176]
  40860c:	cbz	w0, 4086b4 <__fxstatat@plt+0x5c64>
  408610:	ldr	x1, [x19, #72]
  408614:	mov	x0, x27
  408618:	bl	40a598 <__fxstatat@plt+0x7b48>
  40861c:	str	x0, [x19, #8]
  408620:	mov	x22, x0
  408624:	cbz	x0, 408888 <__fxstatat@plt+0x5e38>
  408628:	ldrb	w0, [x22]
  40862c:	cmp	w0, #0x2f
  408630:	b.eq	408974 <__fxstatat@plt+0x5f24>  // b.none
  408634:	mov	x0, x27
  408638:	bl	40b1d0 <__fxstatat@plt+0x8780>
  40863c:	mov	x26, x0
  408640:	mov	x0, x22
  408644:	cbz	x26, 40890c <__fxstatat@plt+0x5ebc>
  408648:	bl	402430 <strlen@plt>
  40864c:	add	x1, x26, #0x2
  408650:	add	x0, x1, x0
  408654:	bl	411e78 <__fxstatat@plt+0xf428>
  408658:	mov	x25, x0
  40865c:	add	x2, x27, x26
  408660:	mov	x1, x27
  408664:	ldurb	w2, [x2, #-1]
  408668:	cmp	w2, #0x2f
  40866c:	cinc	x2, x26, ne  // ne = any
  408670:	bl	4027c0 <stpncpy@plt>
  408674:	mov	x1, x22
  408678:	bl	4028d0 <strcpy@plt>
  40867c:	cbz	x25, 4088b0 <__fxstatat@plt+0x5e60>
  408680:	ldr	w0, [x19, #180]
  408684:	cbz	w0, 408938 <__fxstatat@plt+0x5ee8>
  408688:	ldr	w0, [x20, #3764]
  40868c:	cmp	w0, #0x1
  408690:	b.hi	4086c0 <__fxstatat@plt+0x5c70>  // b.pmore
  408694:	ldurb	w0, [x24, #-176]
  408698:	cbnz	w0, 4086c0 <__fxstatat@plt+0x5c70>
  40869c:	mov	x0, x25
  4086a0:	bl	402840 <free@plt>
  4086a4:	ldr	w0, [x19, #40]
  4086a8:	and	w0, w0, #0xf000
  4086ac:	cmp	w0, #0xa, lsl #12
  4086b0:	b.ne	408100 <__fxstatat@plt+0x56b0>  // b.any
  4086b4:	mov	w0, #0x6                   	// #6
  4086b8:	str	w0, [x19, #152]
  4086bc:	b	408110 <__fxstatat@plt+0x56c0>
  4086c0:	add	x2, x29, #0x90
  4086c4:	mov	x1, x25
  4086c8:	mov	w0, #0x0                   	// #0
  4086cc:	bl	402a00 <__xstat@plt>
  4086d0:	cbnz	w0, 40869c <__fxstatat@plt+0x5c4c>
  4086d4:	ldr	w1, [x29, #160]
  4086d8:	mov	w0, #0x1                   	// #1
  4086dc:	str	w1, [x19, #156]
  4086e0:	strb	w0, [x19, #169]
  4086e4:	b	40869c <__fxstatat@plt+0x5c4c>
  4086e8:	cbz	w23, 408700 <__fxstatat@plt+0x5cb0>
  4086ec:	ldurb	w0, [x24, #-144]
  4086f0:	cbnz	w0, 408700 <__fxstatat@plt+0x5cb0>
  4086f4:	mov	w0, #0x9                   	// #9
  4086f8:	str	w0, [x19, #152]
  4086fc:	b	408110 <__fxstatat@plt+0x56c0>
  408700:	mov	w0, #0x3                   	// #3
  408704:	str	w0, [x19, #152]
  408708:	b	408110 <__fxstatat@plt+0x56c0>
  40870c:	ldr	w0, [x19, #48]
  408710:	bl	407ed0 <__fxstatat@plt+0x5480>
  408714:	ldr	w1, [x20, #4000]
  408718:	cmp	w0, w1
  40871c:	b.le	408320 <__fxstatat@plt+0x58d0>
  408720:	str	w0, [x20, #4000]
  408724:	b	408320 <__fxstatat@plt+0x58d0>
  408728:	ldrb	w0, [x20, #3752]
  40872c:	ldr	w22, [x19, #52]
  408730:	cbz	w0, 408918 <__fxstatat@plt+0x5ec8>
  408734:	mov	w4, w22
  408738:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40873c:	add	x3, x3, #0x3f8
  408740:	mov	x2, #0x15                  	// #21
  408744:	mov	w1, #0x1                   	// #1
  408748:	mov	x0, x23
  40874c:	bl	402440 <__sprintf_chk@plt>
  408750:	mov	x0, x23
  408754:	bl	402430 <strlen@plt>
  408758:	ldr	w1, [x20, #3996]
  40875c:	cmp	w1, w0
  408760:	b.ge	408318 <__fxstatat@plt+0x58c8>  // b.tcont
  408764:	str	w0, [x20, #3996]
  408768:	b	408318 <__fxstatat@plt+0x58c8>
  40876c:	ldr	w0, [x19, #48]
  408770:	bl	407ed0 <__fxstatat@plt+0x5480>
  408774:	ldr	w1, [x20, #3992]
  408778:	cmp	w0, w1
  40877c:	b.le	408310 <__fxstatat@plt+0x58c0>
  408780:	str	w0, [x20, #3992]
  408784:	b	408310 <__fxstatat@plt+0x58c0>
  408788:	cmp	w22, #0x0
  40878c:	cset	w1, eq  // eq = none
  408790:	cmp	w1, #0x0
  408794:	ccmp	w22, #0x6, #0x4, eq  // eq = none
  408798:	b.ne	4081d0 <__fxstatat@plt+0x5780>  // b.any
  40879c:	b	4081ac <__fxstatat@plt+0x575c>
  4087a0:	bl	4029e0 <__errno_location@plt>
  4087a4:	ldr	w0, [x0]
  4087a8:	cmp	w0, #0x2
  4087ac:	b.eq	408070 <__fxstatat@plt+0x5620>  // b.none
  4087b0:	mov	w2, #0x5                   	// #5
  4087b4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  4087b8:	mov	x0, #0x0                   	// #0
  4087bc:	add	x1, x1, #0x418
  4087c0:	bl	402970 <dcgettext@plt>
  4087c4:	mov	x25, #0x0                   	// #0
  4087c8:	mov	x1, x0
  4087cc:	mov	x2, x27
  4087d0:	mov	w0, #0x1                   	// #1
  4087d4:	bl	405150 <__fxstatat@plt+0x2700>
  4087d8:	b	40814c <__fxstatat@plt+0x56fc>
  4087dc:	mov	x25, #0x0                   	// #0
  4087e0:	b	408134 <__fxstatat@plt+0x56e4>
  4087e4:	ldr	w2, [x22]
  4087e8:	sub	w1, w2, #0x16
  4087ec:	cmp	w2, #0x5f
  4087f0:	and	w1, w1, #0xffffffef
  4087f4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4087f8:	b.ne	408804 <__fxstatat@plt+0x5db4>  // b.any
  4087fc:	ldr	x1, [x19, #24]
  408800:	stur	x1, [x24, #-152]
  408804:	str	wzr, [x19, #172]
  408808:	cbz	w0, 4085f0 <__fxstatat@plt+0x5ba0>
  40880c:	ldr	w22, [x22]
  408810:	mov	x2, x27
  408814:	mov	w1, #0x3                   	// #3
  408818:	mov	w0, #0x0                   	// #0
  40881c:	bl	411600 <__fxstatat@plt+0xebb0>
  408820:	mov	x3, x0
  408824:	mov	w1, w22
  408828:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40882c:	mov	w0, #0x0                   	// #0
  408830:	add	x2, x2, #0x4b0
  408834:	bl	402490 <error@plt>
  408838:	b	4085f0 <__fxstatat@plt+0x5ba0>
  40883c:	bl	4029e0 <__errno_location@plt>
  408840:	mov	w22, #0x0                   	// #0
  408844:	mov	w1, #0x5f                  	// #95
  408848:	str	w1, [x0]
  40884c:	strb	w22, [x19, #176]
  408850:	b	4080a4 <__fxstatat@plt+0x5654>
  408854:	bl	4029e0 <__errno_location@plt>
  408858:	ldr	w1, [x0]
  40885c:	sub	w0, w1, #0x16
  408860:	tst	w0, #0xffffffef
  408864:	cset	w0, eq  // eq = none
  408868:	cmp	w1, #0x5f
  40886c:	csinc	w22, w0, wzr, ne  // ne = any
  408870:	cbz	w22, 4084d4 <__fxstatat@plt+0x5a84>
  408874:	ldr	x0, [x19, #24]
  408878:	mov	w22, #0x0                   	// #0
  40887c:	stur	x0, [x24, #-168]
  408880:	strb	w22, [x19, #176]
  408884:	b	4080a4 <__fxstatat@plt+0x5654>
  408888:	mov	w2, #0x5                   	// #5
  40888c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  408890:	add	x1, x1, #0x430
  408894:	bl	402970 <dcgettext@plt>
  408898:	mov	x2, x27
  40889c:	mov	x1, x0
  4088a0:	mov	w0, w23
  4088a4:	bl	405150 <__fxstatat@plt+0x2700>
  4088a8:	ldr	x22, [x19, #8]
  4088ac:	cbnz	x22, 408628 <__fxstatat@plt+0x5bd8>
  4088b0:	mov	x25, #0x0                   	// #0
  4088b4:	b	40869c <__fxstatat@plt+0x5c4c>
  4088b8:	ldrb	w0, [x20, #3904]
  4088bc:	cbz	w0, 408188 <__fxstatat@plt+0x5738>
  4088c0:	mov	w0, #0x13                  	// #19
  4088c4:	str	w4, [x29, #108]
  4088c8:	bl	404540 <__fxstatat@plt+0x1af0>
  4088cc:	tst	w0, #0xff
  4088d0:	ldr	w4, [x29, #108]
  4088d4:	b.ne	4081d0 <__fxstatat@plt+0x5780>  // b.any
  4088d8:	mov	w0, #0x12                  	// #18
  4088dc:	str	w4, [x29, #108]
  4088e0:	bl	404540 <__fxstatat@plt+0x1af0>
  4088e4:	tst	w0, #0xff
  4088e8:	ldr	w4, [x29, #108]
  4088ec:	b.ne	4081d0 <__fxstatat@plt+0x5780>  // b.any
  4088f0:	mov	w0, #0x14                  	// #20
  4088f4:	str	w4, [x29, #108]
  4088f8:	bl	404540 <__fxstatat@plt+0x1af0>
  4088fc:	tst	w0, #0xff
  408900:	ldr	w4, [x29, #108]
  408904:	b.ne	4081d0 <__fxstatat@plt+0x5780>  // b.any
  408908:	b	408188 <__fxstatat@plt+0x5738>
  40890c:	bl	4120a0 <__fxstatat@plt+0xf650>
  408910:	mov	x25, x0
  408914:	b	40867c <__fxstatat@plt+0x5c2c>
  408918:	mov	w0, w22
  40891c:	bl	40d890 <__fxstatat@plt+0xae40>
  408920:	cbz	x0, 408734 <__fxstatat@plt+0x5ce4>
  408924:	mov	w1, #0x0                   	// #0
  408928:	bl	40e110 <__fxstatat@plt+0xb6c0>
  40892c:	cmp	w0, #0x0
  408930:	csel	w0, w0, wzr, ge  // ge = tcont
  408934:	b	408758 <__fxstatat@plt+0x5d08>
  408938:	ldr	x0, [x19, #8]
  40893c:	bl	404900 <__fxstatat@plt+0x1eb0>
  408940:	tst	w0, #0xff
  408944:	b.eq	408688 <__fxstatat@plt+0x5c38>  // b.none
  408948:	mov	w0, #0xffffffff            	// #-1
  40894c:	str	w0, [x19, #180]
  408950:	b	408688 <__fxstatat@plt+0x5c38>
  408954:	mov	w0, #0x5f                  	// #95
  408958:	str	w0, [x22]
  40895c:	str	wzr, [x19, #172]
  408960:	ldr	w0, [x19, #40]
  408964:	and	w0, w0, #0xf000
  408968:	cmp	w0, #0xa, lsl #12
  40896c:	b.ne	408100 <__fxstatat@plt+0x56b0>  // b.any
  408970:	b	408610 <__fxstatat@plt+0x5bc0>
  408974:	mov	x0, x22
  408978:	bl	4120a0 <__fxstatat@plt+0xf650>
  40897c:	mov	x25, x0
  408980:	b	40867c <__fxstatat@plt+0x5c2c>
  408984:	ldrb	w25, [x21]
  408988:	cmp	w25, #0x2f
  40898c:	b.ne	4081e0 <__fxstatat@plt+0x5790>  // b.any
  408990:	add	x26, x19, #0x18
  408994:	mov	x27, x21
  408998:	b	40842c <__fxstatat@plt+0x59dc>
  40899c:	ldurb	w0, [x24, #-182]
  4089a0:	cbz	w0, 4087dc <__fxstatat@plt+0x5d8c>
  4089a4:	cbnz	w1, 4081d0 <__fxstatat@plt+0x5780>
  4089a8:	cmp	w22, #0x5
  4089ac:	mov	x25, #0x0                   	// #0
  4089b0:	b.ne	408134 <__fxstatat@plt+0x56e4>  // b.any
  4089b4:	ldr	w0, [x20, #3764]
  4089b8:	cmp	w0, #0x3
  4089bc:	b.eq	4081d0 <__fxstatat@plt+0x5780>  // b.none
  4089c0:	ldrb	w0, [x20, #3904]
  4089c4:	str	w4, [x29, #108]
  4089c8:	cbz	w0, 408134 <__fxstatat@plt+0x56e4>
  4089cc:	mov	w0, #0xe                   	// #14
  4089d0:	bl	404540 <__fxstatat@plt+0x1af0>
  4089d4:	ldr	w4, [x29, #108]
  4089d8:	tst	w0, #0xff
  4089dc:	b.ne	4081d0 <__fxstatat@plt+0x5780>  // b.any
  4089e0:	mov	w0, #0x10                  	// #16
  4089e4:	str	w4, [x29, #108]
  4089e8:	bl	404540 <__fxstatat@plt+0x1af0>
  4089ec:	tst	w0, #0xff
  4089f0:	ldr	w4, [x29, #108]
  4089f4:	b.ne	4081d0 <__fxstatat@plt+0x5780>  // b.any
  4089f8:	mov	w0, #0x11                  	// #17
  4089fc:	str	w4, [x29, #108]
  408a00:	bl	404540 <__fxstatat@plt+0x1af0>
  408a04:	tst	w0, #0xff
  408a08:	ldr	w4, [x29, #108]
  408a0c:	b.ne	4081d0 <__fxstatat@plt+0x5780>  // b.any
  408a10:	mov	w0, #0x15                  	// #21
  408a14:	str	w4, [x29, #108]
  408a18:	bl	404540 <__fxstatat@plt+0x1af0>
  408a1c:	tst	w0, #0xff
  408a20:	ldr	w4, [x29, #108]
  408a24:	b.ne	4081d0 <__fxstatat@plt+0x5780>  // b.any
  408a28:	b	408134 <__fxstatat@plt+0x56e4>
  408a2c:	bl	4120d0 <__fxstatat@plt+0xf680>
  408a30:	sub	sp, sp, #0x300
  408a34:	stp	x29, x30, [sp]
  408a38:	mov	x29, sp
  408a3c:	stp	x23, x24, [sp, #48]
  408a40:	mov	x24, x0
  408a44:	and	w0, w2, #0xff
  408a48:	stp	x19, x20, [sp, #16]
  408a4c:	mov	x19, x1
  408a50:	str	w0, [sp, #100]
  408a54:	bl	4029e0 <__errno_location@plt>
  408a58:	mov	x20, x0
  408a5c:	mov	x0, x24
  408a60:	str	wzr, [x20]
  408a64:	bl	4024f0 <opendir@plt>
  408a68:	cbz	x0, 40903c <__fxstatat@plt+0x65ec>
  408a6c:	stp	x21, x22, [sp, #32]
  408a70:	adrp	x22, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  408a74:	add	x22, x22, #0x5c8
  408a78:	stp	x25, x26, [sp, #64]
  408a7c:	mov	x23, x0
  408a80:	ldr	x1, [x22, #3728]
  408a84:	cbz	x1, 408f38 <__fxstatat@plt+0x64e8>
  408a88:	bl	4028e0 <dirfd@plt>
  408a8c:	mov	w1, w0
  408a90:	add	x2, sp, #0x70
  408a94:	tbnz	w0, #31, 408b44 <__fxstatat@plt+0x60f4>
  408a98:	mov	w0, #0x0                   	// #0
  408a9c:	bl	402960 <__fxstat@plt>
  408aa0:	lsr	w0, w0, #31
  408aa4:	cbnz	w0, 408b58 <__fxstatat@plt+0x6108>
  408aa8:	mov	x0, #0x10                  	// #16
  408aac:	ldp	x25, x26, [sp, #112]
  408ab0:	bl	411e78 <__fxstatat@plt+0xf428>
  408ab4:	mov	x21, x0
  408ab8:	mov	x1, x0
  408abc:	ldr	x0, [x22, #3728]
  408ac0:	stp	x26, x25, [x21]
  408ac4:	bl	40ca68 <__fxstatat@plt+0xa018>
  408ac8:	cbz	x0, 40908c <__fxstatat@plt+0x663c>
  408acc:	cmp	x21, x0
  408ad0:	b.eq	408ba0 <__fxstatat@plt+0x6150>  // b.none
  408ad4:	mov	x0, x21
  408ad8:	bl	402840 <free@plt>
  408adc:	mov	w2, #0x5                   	// #5
  408ae0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  408ae4:	mov	x0, #0x0                   	// #0
  408ae8:	add	x1, x1, #0x498
  408aec:	bl	402970 <dcgettext@plt>
  408af0:	mov	x19, x0
  408af4:	mov	x2, x24
  408af8:	mov	w1, #0x3                   	// #3
  408afc:	mov	w0, #0x0                   	// #0
  408b00:	bl	411600 <__fxstatat@plt+0xebb0>
  408b04:	mov	x2, x19
  408b08:	mov	x3, x0
  408b0c:	mov	w1, #0x0                   	// #0
  408b10:	mov	w0, #0x0                   	// #0
  408b14:	bl	402490 <error@plt>
  408b18:	mov	x0, x23
  408b1c:	bl	402700 <closedir@plt>
  408b20:	mov	w0, #0x2                   	// #2
  408b24:	str	w0, [x22, #3760]
  408b28:	ldp	x21, x22, [sp, #32]
  408b2c:	ldp	x25, x26, [sp, #64]
  408b30:	ldp	x29, x30, [sp]
  408b34:	ldp	x19, x20, [sp, #16]
  408b38:	ldp	x23, x24, [sp, #48]
  408b3c:	add	sp, sp, #0x300
  408b40:	ret
  408b44:	mov	x1, x24
  408b48:	mov	w0, #0x0                   	// #0
  408b4c:	bl	402a00 <__xstat@plt>
  408b50:	lsr	w0, w0, #31
  408b54:	cbz	w0, 408aa8 <__fxstatat@plt+0x6058>
  408b58:	mov	w2, #0x5                   	// #5
  408b5c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  408b60:	mov	x0, #0x0                   	// #0
  408b64:	add	x1, x1, #0x470
  408b68:	bl	402970 <dcgettext@plt>
  408b6c:	mov	x1, x0
  408b70:	ldrb	w0, [sp, #100]
  408b74:	mov	x2, x24
  408b78:	bl	405150 <__fxstatat@plt+0x2700>
  408b7c:	mov	x0, x23
  408b80:	bl	402700 <closedir@plt>
  408b84:	ldp	x29, x30, [sp]
  408b88:	ldp	x19, x20, [sp, #16]
  408b8c:	ldp	x21, x22, [sp, #32]
  408b90:	ldp	x23, x24, [sp, #48]
  408b94:	ldp	x25, x26, [sp, #64]
  408b98:	add	sp, sp, #0x300
  408b9c:	ret
  408ba0:	adrp	x21, 430000 <__progname@@GLIBC_2.17+0xa48>
  408ba4:	add	x21, x21, #0x6c8
  408ba8:	stp	x27, x28, [sp, #80]
  408bac:	sub	x0, x21, #0x88
  408bb0:	ldp	x1, x2, [x21, #-112]
  408bb4:	ldp	x25, x26, [sp, #112]
  408bb8:	sub	x2, x2, x1
  408bbc:	cmp	x2, #0xf
  408bc0:	b.ls	408f48 <__fxstatat@plt+0x64f8>  // b.plast
  408bc4:	add	x0, x1, #0x10
  408bc8:	stur	x0, [x21, #-112]
  408bcc:	stp	x26, x25, [x1]
  408bd0:	bl	407e40 <__fxstatat@plt+0x53f0>
  408bd4:	ldurb	w0, [x21, #-48]
  408bd8:	cbnz	w0, 408dd0 <__fxstatat@plt+0x6380>
  408bdc:	ldurb	w0, [x21, #-47]
  408be0:	cbnz	w0, 408dd0 <__fxstatat@plt+0x6380>
  408be4:	adrp	x28, 417000 <_obstack_memory_used@@Base+0x3ce0>
  408be8:	add	x28, x28, #0xf08
  408bec:	str	wzr, [x20]
  408bf0:	add	x0, x28, #0x238
  408bf4:	adrp	x26, 415000 <_obstack_memory_used@@Base+0x1ce0>
  408bf8:	mov	x25, #0x0                   	// #0
  408bfc:	add	x26, x26, #0x4d0
  408c00:	str	x0, [sp, #104]
  408c04:	mov	x0, x23
  408c08:	bl	4026d0 <readdir@plt>
  408c0c:	mov	x19, x0
  408c10:	cbz	x0, 408c78 <__fxstatat@plt+0x6228>
  408c14:	nop
  408c18:	add	x28, x0, #0x13
  408c1c:	ldr	w0, [x21, #56]
  408c20:	cmp	w0, #0x2
  408c24:	b.eq	408e98 <__fxstatat@plt+0x6448>  // b.none
  408c28:	ldrb	w1, [x19, #19]
  408c2c:	cmp	w1, #0x2e
  408c30:	b.eq	408e7c <__fxstatat@plt+0x642c>  // b.none
  408c34:	cbnz	w0, 408e98 <__fxstatat@plt+0x6448>
  408c38:	ldr	x27, [x21, #72]
  408c3c:	cbnz	x27, 408c4c <__fxstatat@plt+0x61fc>
  408c40:	b	408e98 <__fxstatat@plt+0x6448>
  408c44:	ldr	x27, [x27, #8]
  408c48:	cbz	x27, 408e98 <__fxstatat@plt+0x6448>
  408c4c:	ldr	x0, [x27]
  408c50:	mov	x1, x28
  408c54:	mov	w2, #0x4                   	// #4
  408c58:	bl	4028a0 <fnmatch@plt>
  408c5c:	cbnz	w0, 408c44 <__fxstatat@plt+0x61f4>
  408c60:	bl	405a90 <__fxstatat@plt+0x3040>
  408c64:	str	wzr, [x20]
  408c68:	mov	x0, x23
  408c6c:	bl	4026d0 <readdir@plt>
  408c70:	mov	x19, x0
  408c74:	cbnz	x0, 408c18 <__fxstatat@plt+0x61c8>
  408c78:	ldr	w1, [x20]
  408c7c:	cbz	w1, 408ca8 <__fxstatat@plt+0x6258>
  408c80:	mov	x1, x26
  408c84:	mov	w2, #0x5                   	// #5
  408c88:	bl	402970 <dcgettext@plt>
  408c8c:	mov	x1, x0
  408c90:	ldrb	w0, [sp, #100]
  408c94:	mov	x2, x24
  408c98:	bl	405150 <__fxstatat@plt+0x2700>
  408c9c:	ldr	w0, [x20]
  408ca0:	cmp	w0, #0x4b
  408ca4:	b.eq	408c60 <__fxstatat@plt+0x6210>  // b.none
  408ca8:	mov	x0, x23
  408cac:	bl	402700 <closedir@plt>
  408cb0:	cbnz	w0, 408f8c <__fxstatat@plt+0x653c>
  408cb4:	bl	404a70 <__fxstatat@plt+0x2020>
  408cb8:	ldurb	w0, [x21, #-48]
  408cbc:	cbnz	w0, 408f7c <__fxstatat@plt+0x652c>
  408cc0:	ldr	w0, [x22, #3940]
  408cc4:	cbz	w0, 408cd0 <__fxstatat@plt+0x6280>
  408cc8:	ldrb	w0, [x22, #3948]
  408ccc:	cbz	w0, 408da8 <__fxstatat@plt+0x6358>
  408cd0:	ldrb	w0, [x22, #3920]
  408cd4:	adrp	x26, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  408cd8:	cbnz	w0, 408fb4 <__fxstatat@plt+0x6564>
  408cdc:	mov	w2, #0x5                   	// #5
  408ce0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  408ce4:	mov	x0, #0x0                   	// #0
  408ce8:	add	x1, x1, #0x500
  408cec:	bl	402970 <dcgettext@plt>
  408cf0:	mov	x19, x0
  408cf4:	ldr	x1, [x26, #1456]
  408cf8:	bl	402980 <fputs_unlocked@plt>
  408cfc:	mov	x0, x19
  408d00:	bl	402430 <strlen@plt>
  408d04:	ldr	x2, [x26, #1456]
  408d08:	ldr	x1, [x22, #3744]
  408d0c:	ldr	x3, [x2, #40]
  408d10:	add	x1, x1, x0
  408d14:	ldr	x0, [x2, #48]
  408d18:	str	x1, [x22, #3744]
  408d1c:	cmp	x3, x0
  408d20:	b.cs	40906c <__fxstatat@plt+0x661c>  // b.hs, b.nlast
  408d24:	add	x0, x3, #0x1
  408d28:	str	x0, [x2, #40]
  408d2c:	mov	w0, #0x20                  	// #32
  408d30:	strb	w0, [x3]
  408d34:	ldr	x5, [x22, #3744]
  408d38:	mov	x3, #0x200                 	// #512
  408d3c:	ldr	w2, [x22, #3968]
  408d40:	add	x1, sp, #0x70
  408d44:	ldr	x4, [x22, #3960]
  408d48:	add	x5, x5, #0x1
  408d4c:	mov	x0, x25
  408d50:	str	x5, [x22, #3744]
  408d54:	bl	40cd18 <__fxstatat@plt+0xa2c8>
  408d58:	mov	x19, x0
  408d5c:	ldr	x1, [x26, #1456]
  408d60:	bl	402980 <fputs_unlocked@plt>
  408d64:	mov	x0, x19
  408d68:	bl	402430 <strlen@plt>
  408d6c:	ldr	x2, [x26, #1456]
  408d70:	ldr	x1, [x22, #3744]
  408d74:	ldr	x3, [x2, #40]
  408d78:	add	x1, x1, x0
  408d7c:	ldr	x0, [x2, #48]
  408d80:	str	x1, [x22, #3744]
  408d84:	cmp	x3, x0
  408d88:	b.cs	40907c <__fxstatat@plt+0x662c>  // b.hs, b.nlast
  408d8c:	add	x0, x3, #0x1
  408d90:	str	x0, [x2, #40]
  408d94:	mov	w0, #0xa                   	// #10
  408d98:	strb	w0, [x3]
  408d9c:	ldr	x0, [x22, #3744]
  408da0:	add	x0, x0, #0x1
  408da4:	str	x0, [x22, #3744]
  408da8:	ldr	x0, [x22, #3368]
  408dac:	cbnz	x0, 408f58 <__fxstatat@plt+0x6508>
  408db0:	ldp	x29, x30, [sp]
  408db4:	ldp	x19, x20, [sp, #16]
  408db8:	ldp	x21, x22, [sp, #32]
  408dbc:	ldp	x23, x24, [sp, #48]
  408dc0:	ldp	x25, x26, [sp, #64]
  408dc4:	ldp	x27, x28, [sp, #80]
  408dc8:	add	sp, sp, #0x300
  408dcc:	ret
  408dd0:	adrp	x25, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  408dd4:	add	x25, x25, #0x368
  408dd8:	adrp	x26, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  408ddc:	ldrb	w0, [x25, #426]
  408de0:	cbnz	w0, 408e10 <__fxstatat@plt+0x63c0>
  408de4:	ldr	x0, [x26, #1456]
  408de8:	ldp	x1, x2, [x0, #40]
  408dec:	cmp	x1, x2
  408df0:	b.cs	409060 <__fxstatat@plt+0x6610>  // b.hs, b.nlast
  408df4:	add	x2, x1, #0x1
  408df8:	str	x2, [x0, #40]
  408dfc:	mov	w0, #0xa                   	// #10
  408e00:	strb	w0, [x1]
  408e04:	ldr	x0, [x22, #3744]
  408e08:	add	x0, x0, #0x1
  408e0c:	str	x0, [x22, #3744]
  408e10:	ldrb	w0, [x22, #3920]
  408e14:	strb	wzr, [x25, #426]
  408e18:	cbnz	w0, 409014 <__fxstatat@plt+0x65c4>
  408e1c:	ldurb	w0, [x21, #-184]
  408e20:	mov	x25, #0x0                   	// #0
  408e24:	cbnz	w0, 408fdc <__fxstatat@plt+0x658c>
  408e28:	ldr	x1, [x21, #48]
  408e2c:	cmp	x19, #0x0
  408e30:	mov	x6, x25
  408e34:	sub	x5, x21, #0x28
  408e38:	mov	w4, #0x1                   	// #1
  408e3c:	mov	x3, #0x0                   	// #0
  408e40:	mov	w2, #0xffffffff            	// #-1
  408e44:	csel	x0, x19, x24, ne  // ne = any
  408e48:	bl	405f78 <__fxstatat@plt+0x3528>
  408e4c:	mov	x0, x25
  408e50:	bl	402840 <free@plt>
  408e54:	ldr	x3, [x26, #1456]
  408e58:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1ce0>
  408e5c:	mov	x2, #0x2                   	// #2
  408e60:	add	x0, x0, #0x4c8
  408e64:	mov	x1, #0x1                   	// #1
  408e68:	bl	402410 <fwrite_unlocked@plt>
  408e6c:	ldr	x0, [x22, #3744]
  408e70:	add	x0, x0, #0x2
  408e74:	str	x0, [x22, #3744]
  408e78:	b	408be4 <__fxstatat@plt+0x6194>
  408e7c:	cbz	w0, 408c60 <__fxstatat@plt+0x6210>
  408e80:	ldrb	w0, [x19, #20]
  408e84:	cmp	w0, #0x2e
  408e88:	cinc	x0, x28, eq  // eq = none
  408e8c:	ldrb	w0, [x0, #1]
  408e90:	cbz	w0, 408c60 <__fxstatat@plt+0x6210>
  408e94:	nop
  408e98:	ldr	x27, [x21, #64]
  408e9c:	cbnz	x27, 408eac <__fxstatat@plt+0x645c>
  408ea0:	b	408ec4 <__fxstatat@plt+0x6474>
  408ea4:	ldr	x27, [x27, #8]
  408ea8:	cbz	x27, 408ec4 <__fxstatat@plt+0x6474>
  408eac:	ldr	x0, [x27]
  408eb0:	mov	x1, x28
  408eb4:	mov	w2, #0x4                   	// #4
  408eb8:	bl	4028a0 <fnmatch@plt>
  408ebc:	cbnz	w0, 408ea4 <__fxstatat@plt+0x6454>
  408ec0:	b	408c60 <__fxstatat@plt+0x6210>
  408ec4:	ldrb	w0, [x19, #18]
  408ec8:	mov	w1, #0x0                   	// #0
  408ecc:	sub	w0, w0, #0x1
  408ed0:	and	w0, w0, #0xff
  408ed4:	cmp	w0, #0xd
  408ed8:	b.hi	408ee8 <__fxstatat@plt+0x6498>  // b.pmore
  408edc:	ldr	x1, [sp, #104]
  408ee0:	and	x0, x0, #0xff
  408ee4:	ldr	w1, [x1, x0, lsl #2]
  408ee8:	mov	x0, x28
  408eec:	mov	x3, x24
  408ef0:	mov	w2, #0x0                   	// #0
  408ef4:	bl	407f40 <__fxstatat@plt+0x54f0>
  408ef8:	ldr	w1, [x22, #3940]
  408efc:	add	x25, x25, x0
  408f00:	cmp	w1, #0x1
  408f04:	b.ne	408c60 <__fxstatat@plt+0x6210>  // b.any
  408f08:	ldr	w0, [x22, #3392]
  408f0c:	cmn	w0, #0x1
  408f10:	b.ne	408c60 <__fxstatat@plt+0x6210>  // b.any
  408f14:	ldrb	w0, [x22, #3948]
  408f18:	cbnz	w0, 408c60 <__fxstatat@plt+0x6210>
  408f1c:	ldurb	w0, [x21, #-48]
  408f20:	cbnz	w0, 408c60 <__fxstatat@plt+0x6210>
  408f24:	bl	404a70 <__fxstatat@plt+0x2020>
  408f28:	bl	4075f8 <__fxstatat@plt+0x4ba8>
  408f2c:	bl	407e40 <__fxstatat@plt+0x53f0>
  408f30:	bl	405a90 <__fxstatat@plt+0x3040>
  408f34:	b	408c64 <__fxstatat@plt+0x6214>
  408f38:	adrp	x21, 430000 <__progname@@GLIBC_2.17+0xa48>
  408f3c:	add	x21, x21, #0x6c8
  408f40:	stp	x27, x28, [sp, #80]
  408f44:	b	408bd0 <__fxstatat@plt+0x6180>
  408f48:	mov	x1, #0x10                  	// #16
  408f4c:	bl	413140 <_obstack_newchunk@@Base>
  408f50:	ldur	x1, [x21, #-112]
  408f54:	b	408bc4 <__fxstatat@plt+0x6174>
  408f58:	bl	4075f8 <__fxstatat@plt+0x4ba8>
  408f5c:	ldp	x29, x30, [sp]
  408f60:	ldp	x19, x20, [sp, #16]
  408f64:	ldp	x21, x22, [sp, #32]
  408f68:	ldp	x23, x24, [sp, #48]
  408f6c:	ldp	x25, x26, [sp, #64]
  408f70:	ldp	x27, x28, [sp, #80]
  408f74:	add	sp, sp, #0x300
  408f78:	ret
  408f7c:	mov	x0, x24
  408f80:	mov	w1, #0x0                   	// #0
  408f84:	bl	404c70 <__fxstatat@plt+0x2220>
  408f88:	b	408cc0 <__fxstatat@plt+0x6270>
  408f8c:	mov	w2, #0x5                   	// #5
  408f90:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  408f94:	mov	x0, #0x0                   	// #0
  408f98:	add	x1, x1, #0x4e8
  408f9c:	bl	402970 <dcgettext@plt>
  408fa0:	mov	x1, x0
  408fa4:	ldrb	w0, [sp, #100]
  408fa8:	mov	x2, x24
  408fac:	bl	405150 <__fxstatat@plt+0x2700>
  408fb0:	b	408cb4 <__fxstatat@plt+0x6264>
  408fb4:	ldr	x3, [x26, #1456]
  408fb8:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1ce0>
  408fbc:	mov	x2, #0x2                   	// #2
  408fc0:	add	x0, x0, #0x3d8
  408fc4:	mov	x1, #0x1                   	// #1
  408fc8:	bl	402410 <fwrite_unlocked@plt>
  408fcc:	ldr	x0, [x22, #3744]
  408fd0:	add	x0, x0, #0x2
  408fd4:	str	x0, [x22, #3744]
  408fd8:	b	408cdc <__fxstatat@plt+0x628c>
  408fdc:	mov	x0, x24
  408fe0:	mov	w1, #0x2                   	// #2
  408fe4:	bl	40ab38 <__fxstatat@plt+0x80e8>
  408fe8:	mov	x25, x0
  408fec:	cbnz	x0, 408e28 <__fxstatat@plt+0x63d8>
  408ff0:	mov	w2, #0x5                   	// #5
  408ff4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  408ff8:	add	x1, x1, #0x400
  408ffc:	bl	402970 <dcgettext@plt>
  409000:	mov	x1, x0
  409004:	ldrb	w0, [sp, #100]
  409008:	mov	x2, x24
  40900c:	bl	405150 <__fxstatat@plt+0x2700>
  409010:	b	408e28 <__fxstatat@plt+0x63d8>
  409014:	ldr	x3, [x26, #1456]
  409018:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40901c:	mov	x2, #0x2                   	// #2
  409020:	add	x0, x0, #0x3d8
  409024:	mov	x1, #0x1                   	// #1
  409028:	bl	402410 <fwrite_unlocked@plt>
  40902c:	ldr	x0, [x22, #3744]
  409030:	add	x0, x0, #0x2
  409034:	str	x0, [x22, #3744]
  409038:	b	408e1c <__fxstatat@plt+0x63cc>
  40903c:	mov	w2, #0x5                   	// #5
  409040:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  409044:	add	x1, x1, #0x450
  409048:	bl	402970 <dcgettext@plt>
  40904c:	mov	x1, x0
  409050:	ldrb	w0, [sp, #100]
  409054:	mov	x2, x24
  409058:	bl	405150 <__fxstatat@plt+0x2700>
  40905c:	b	408b30 <__fxstatat@plt+0x60e0>
  409060:	mov	w1, #0xa                   	// #10
  409064:	bl	402780 <__overflow@plt>
  409068:	b	408e04 <__fxstatat@plt+0x63b4>
  40906c:	mov	x0, x2
  409070:	mov	w1, #0x20                  	// #32
  409074:	bl	402780 <__overflow@plt>
  409078:	b	408d34 <__fxstatat@plt+0x62e4>
  40907c:	mov	x0, x2
  409080:	mov	w1, #0xa                   	// #10
  409084:	bl	402780 <__overflow@plt>
  409088:	b	408d9c <__fxstatat@plt+0x634c>
  40908c:	stp	x27, x28, [sp, #80]
  409090:	bl	4120d0 <__fxstatat@plt+0xf680>
  409094:	nop
  409098:	mov	x2, x0
  40909c:	ldr	x3, [x1, #128]
  4090a0:	ldr	x0, [x0, #128]
  4090a4:	cmp	x3, x0
  4090a8:	b.lt	4090d4 <__fxstatat@plt+0x6684>  // b.tstop
  4090ac:	b.gt	4090cc <__fxstatat@plt+0x667c>
  4090b0:	ldr	x0, [x1, #136]
  4090b4:	ldr	x3, [x2, #136]
  4090b8:	subs	w0, w0, w3
  4090bc:	b.ne	4090d0 <__fxstatat@plt+0x6680>  // b.any
  4090c0:	ldr	x1, [x1]
  4090c4:	ldr	x0, [x2]
  4090c8:	b	404bf8 <__fxstatat@plt+0x21a8>
  4090cc:	mov	w0, #0x1                   	// #1
  4090d0:	ret
  4090d4:	mov	w0, #0xffffffff            	// #-1
  4090d8:	ret
  4090dc:	nop
  4090e0:	mov	x2, x0
  4090e4:	ldr	x3, [x1, #96]
  4090e8:	ldr	x0, [x0, #96]
  4090ec:	cmp	x3, x0
  4090f0:	b.lt	40911c <__fxstatat@plt+0x66cc>  // b.tstop
  4090f4:	b.gt	409114 <__fxstatat@plt+0x66c4>
  4090f8:	ldr	x0, [x1, #104]
  4090fc:	ldr	x3, [x2, #104]
  409100:	subs	w0, w0, w3
  409104:	b.ne	409118 <__fxstatat@plt+0x66c8>  // b.any
  409108:	ldr	x1, [x1]
  40910c:	ldr	x0, [x2]
  409110:	b	404bf8 <__fxstatat@plt+0x21a8>
  409114:	mov	w0, #0x1                   	// #1
  409118:	ret
  40911c:	mov	w0, #0xffffffff            	// #-1
  409120:	ret
  409124:	nop
  409128:	mov	x2, x0
  40912c:	ldr	x3, [x1, #112]
  409130:	ldr	x0, [x0, #112]
  409134:	cmp	x3, x0
  409138:	b.lt	409164 <__fxstatat@plt+0x6714>  // b.tstop
  40913c:	b.gt	40915c <__fxstatat@plt+0x670c>
  409140:	ldr	x0, [x1, #120]
  409144:	ldr	x3, [x2, #120]
  409148:	subs	w0, w0, w3
  40914c:	b.ne	409160 <__fxstatat@plt+0x6710>  // b.any
  409150:	ldr	x1, [x1]
  409154:	ldr	x0, [x2]
  409158:	b	404bf8 <__fxstatat@plt+0x21a8>
  40915c:	mov	w0, #0x1                   	// #1
  409160:	ret
  409164:	mov	w0, #0xffffffff            	// #-1
  409168:	ret
  40916c:	nop
  409170:	mov	x3, x0
  409174:	mov	x2, x1
  409178:	ldr	x0, [x1, #96]
  40917c:	ldr	x1, [x3, #96]
  409180:	cmp	x1, x0
  409184:	b.lt	4091b0 <__fxstatat@plt+0x6760>  // b.tstop
  409188:	b.gt	4091a8 <__fxstatat@plt+0x6758>
  40918c:	ldr	x1, [x2, #104]
  409190:	ldr	x0, [x3, #104]
  409194:	subs	w0, w0, w1
  409198:	b.ne	4091ac <__fxstatat@plt+0x675c>  // b.any
  40919c:	ldr	x0, [x2]
  4091a0:	ldr	x1, [x3]
  4091a4:	b	404bf8 <__fxstatat@plt+0x21a8>
  4091a8:	mov	w0, #0x1                   	// #1
  4091ac:	ret
  4091b0:	mov	w0, #0xffffffff            	// #-1
  4091b4:	ret
  4091b8:	mov	x3, x0
  4091bc:	mov	x2, x1
  4091c0:	ldr	x0, [x1, #128]
  4091c4:	ldr	x1, [x3, #128]
  4091c8:	cmp	x1, x0
  4091cc:	b.lt	4091f8 <__fxstatat@plt+0x67a8>  // b.tstop
  4091d0:	b.gt	4091f0 <__fxstatat@plt+0x67a0>
  4091d4:	ldr	x1, [x2, #136]
  4091d8:	ldr	x0, [x3, #136]
  4091dc:	subs	w0, w0, w1
  4091e0:	b.ne	4091f4 <__fxstatat@plt+0x67a4>  // b.any
  4091e4:	ldr	x0, [x2]
  4091e8:	ldr	x1, [x3]
  4091ec:	b	404bf8 <__fxstatat@plt+0x21a8>
  4091f0:	mov	w0, #0x1                   	// #1
  4091f4:	ret
  4091f8:	mov	w0, #0xffffffff            	// #-1
  4091fc:	ret
  409200:	mov	x3, x0
  409204:	mov	x2, x1
  409208:	ldr	x0, [x1, #112]
  40920c:	ldr	x1, [x3, #112]
  409210:	cmp	x1, x0
  409214:	b.lt	409240 <__fxstatat@plt+0x67f0>  // b.tstop
  409218:	b.gt	409238 <__fxstatat@plt+0x67e8>
  40921c:	ldr	x1, [x2, #120]
  409220:	ldr	x0, [x3, #120]
  409224:	subs	w0, w0, w1
  409228:	b.ne	40923c <__fxstatat@plt+0x67ec>  // b.any
  40922c:	ldr	x0, [x2]
  409230:	ldr	x1, [x3]
  409234:	b	404bf8 <__fxstatat@plt+0x21a8>
  409238:	mov	w0, #0x1                   	// #1
  40923c:	ret
  409240:	mov	w0, #0xffffffff            	// #-1
  409244:	ret
  409248:	mov	x2, x0
  40924c:	ldr	x3, [x1, #128]
  409250:	ldr	x0, [x0, #128]
  409254:	cmp	x3, x0
  409258:	b.lt	409284 <__fxstatat@plt+0x6834>  // b.tstop
  40925c:	b.gt	40927c <__fxstatat@plt+0x682c>
  409260:	ldr	x0, [x1, #136]
  409264:	ldr	x3, [x2, #136]
  409268:	subs	w0, w0, w3
  40926c:	b.ne	409280 <__fxstatat@plt+0x6830>  // b.any
  409270:	ldr	x1, [x1]
  409274:	ldr	x0, [x2]
  409278:	b	402800 <strcmp@plt>
  40927c:	mov	w0, #0x1                   	// #1
  409280:	ret
  409284:	mov	w0, #0xffffffff            	// #-1
  409288:	ret
  40928c:	nop
  409290:	mov	x3, x0
  409294:	mov	x2, x1
  409298:	ldr	x0, [x1, #128]
  40929c:	ldr	x1, [x3, #128]
  4092a0:	cmp	x1, x0
  4092a4:	b.lt	4092d0 <__fxstatat@plt+0x6880>  // b.tstop
  4092a8:	b.gt	4092c8 <__fxstatat@plt+0x6878>
  4092ac:	ldr	x1, [x2, #136]
  4092b0:	ldr	x0, [x3, #136]
  4092b4:	subs	w0, w0, w1
  4092b8:	b.ne	4092cc <__fxstatat@plt+0x687c>  // b.any
  4092bc:	ldr	x0, [x2]
  4092c0:	ldr	x1, [x3]
  4092c4:	b	402800 <strcmp@plt>
  4092c8:	mov	w0, #0x1                   	// #1
  4092cc:	ret
  4092d0:	mov	w0, #0xffffffff            	// #-1
  4092d4:	ret
  4092d8:	mov	x2, x0
  4092dc:	ldr	x3, [x1, #96]
  4092e0:	ldr	x0, [x0, #96]
  4092e4:	cmp	x3, x0
  4092e8:	b.lt	409314 <__fxstatat@plt+0x68c4>  // b.tstop
  4092ec:	b.gt	40930c <__fxstatat@plt+0x68bc>
  4092f0:	ldr	x0, [x1, #104]
  4092f4:	ldr	x3, [x2, #104]
  4092f8:	subs	w0, w0, w3
  4092fc:	b.ne	409310 <__fxstatat@plt+0x68c0>  // b.any
  409300:	ldr	x1, [x1]
  409304:	ldr	x0, [x2]
  409308:	b	402800 <strcmp@plt>
  40930c:	mov	w0, #0x1                   	// #1
  409310:	ret
  409314:	mov	w0, #0xffffffff            	// #-1
  409318:	ret
  40931c:	nop
  409320:	mov	x2, x0
  409324:	ldr	x3, [x1, #112]
  409328:	ldr	x0, [x0, #112]
  40932c:	cmp	x3, x0
  409330:	b.lt	40935c <__fxstatat@plt+0x690c>  // b.tstop
  409334:	b.gt	409354 <__fxstatat@plt+0x6904>
  409338:	ldr	x0, [x1, #120]
  40933c:	ldr	x3, [x2, #120]
  409340:	subs	w0, w0, w3
  409344:	b.ne	409358 <__fxstatat@plt+0x6908>  // b.any
  409348:	ldr	x1, [x1]
  40934c:	ldr	x0, [x2]
  409350:	b	402800 <strcmp@plt>
  409354:	mov	w0, #0x1                   	// #1
  409358:	ret
  40935c:	mov	w0, #0xffffffff            	// #-1
  409360:	ret
  409364:	nop
  409368:	mov	x3, x0
  40936c:	mov	x2, x1
  409370:	ldr	x0, [x1, #96]
  409374:	ldr	x1, [x3, #96]
  409378:	cmp	x1, x0
  40937c:	b.lt	4093a8 <__fxstatat@plt+0x6958>  // b.tstop
  409380:	b.gt	4093a0 <__fxstatat@plt+0x6950>
  409384:	ldr	x1, [x2, #104]
  409388:	ldr	x0, [x3, #104]
  40938c:	subs	w0, w0, w1
  409390:	b.ne	4093a4 <__fxstatat@plt+0x6954>  // b.any
  409394:	ldr	x0, [x2]
  409398:	ldr	x1, [x3]
  40939c:	b	402800 <strcmp@plt>
  4093a0:	mov	w0, #0x1                   	// #1
  4093a4:	ret
  4093a8:	mov	w0, #0xffffffff            	// #-1
  4093ac:	ret
  4093b0:	mov	x3, x0
  4093b4:	mov	x2, x1
  4093b8:	ldr	x0, [x1, #112]
  4093bc:	ldr	x1, [x3, #112]
  4093c0:	cmp	x1, x0
  4093c4:	b.lt	4093f0 <__fxstatat@plt+0x69a0>  // b.tstop
  4093c8:	b.gt	4093e8 <__fxstatat@plt+0x6998>
  4093cc:	ldr	x1, [x2, #120]
  4093d0:	ldr	x0, [x3, #120]
  4093d4:	subs	w0, w0, w1
  4093d8:	b.ne	4093ec <__fxstatat@plt+0x699c>  // b.any
  4093dc:	ldr	x0, [x2]
  4093e0:	ldr	x1, [x3]
  4093e4:	b	402800 <strcmp@plt>
  4093e8:	mov	w0, #0x1                   	// #1
  4093ec:	ret
  4093f0:	mov	w0, #0xffffffff            	// #-1
  4093f4:	ret
  4093f8:	mov	x2, x0
  4093fc:	ldr	w4, [x1, #152]
  409400:	cmp	w4, #0x9
  409404:	ldr	w3, [x2, #152]
  409408:	cset	w0, eq  // eq = none
  40940c:	cmp	w4, #0x3
  409410:	csinc	w0, w0, wzr, ne  // ne = any
  409414:	cmp	w3, #0x3
  409418:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  40941c:	b.eq	40943c <__fxstatat@plt+0x69ec>  // b.none
  409420:	ldr	w3, [x2, #156]
  409424:	and	w3, w3, #0xf000
  409428:	cbz	w0, 409458 <__fxstatat@plt+0x6a08>
  40942c:	cmp	w3, #0x4, lsl #12
  409430:	b.eq	409470 <__fxstatat@plt+0x6a20>  // b.none
  409434:	mov	w0, #0x1                   	// #1
  409438:	ret
  40943c:	cbnz	w0, 409470 <__fxstatat@plt+0x6a20>
  409440:	ldr	w0, [x1, #156]
  409444:	and	w0, w0, #0xf000
  409448:	cmp	w0, #0x4, lsl #12
  40944c:	b.eq	409470 <__fxstatat@plt+0x6a20>  // b.none
  409450:	mov	w0, #0xffffffff            	// #-1
  409454:	ret
  409458:	ldr	w0, [x1, #156]
  40945c:	and	w0, w0, #0xf000
  409460:	cmp	w0, #0x4, lsl #12
  409464:	b.eq	40942c <__fxstatat@plt+0x69dc>  // b.none
  409468:	cmp	w3, #0x4, lsl #12
  40946c:	b.eq	409450 <__fxstatat@plt+0x6a00>  // b.none
  409470:	ldr	x3, [x1, #128]
  409474:	ldr	x0, [x2, #128]
  409478:	cmp	x3, x0
  40947c:	b.lt	409450 <__fxstatat@plt+0x6a00>  // b.tstop
  409480:	b.gt	409434 <__fxstatat@plt+0x69e4>
  409484:	ldr	x0, [x1, #136]
  409488:	ldr	x3, [x2, #136]
  40948c:	subs	w0, w0, w3
  409490:	b.ne	409438 <__fxstatat@plt+0x69e8>  // b.any
  409494:	ldr	x1, [x1]
  409498:	ldr	x0, [x2]
  40949c:	b	404bf8 <__fxstatat@plt+0x21a8>
  4094a0:	mov	x2, x0
  4094a4:	ldr	w4, [x1, #152]
  4094a8:	cmp	w4, #0x9
  4094ac:	ldr	w3, [x2, #152]
  4094b0:	cset	w0, eq  // eq = none
  4094b4:	cmp	w4, #0x3
  4094b8:	csinc	w0, w0, wzr, ne  // ne = any
  4094bc:	cmp	w3, #0x3
  4094c0:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  4094c4:	b.eq	4094e4 <__fxstatat@plt+0x6a94>  // b.none
  4094c8:	ldr	w3, [x2, #156]
  4094cc:	and	w3, w3, #0xf000
  4094d0:	cbz	w0, 409500 <__fxstatat@plt+0x6ab0>
  4094d4:	cmp	w3, #0x4, lsl #12
  4094d8:	b.eq	409518 <__fxstatat@plt+0x6ac8>  // b.none
  4094dc:	mov	w0, #0x1                   	// #1
  4094e0:	ret
  4094e4:	cbnz	w0, 409518 <__fxstatat@plt+0x6ac8>
  4094e8:	ldr	w0, [x1, #156]
  4094ec:	and	w0, w0, #0xf000
  4094f0:	cmp	w0, #0x4, lsl #12
  4094f4:	b.eq	409518 <__fxstatat@plt+0x6ac8>  // b.none
  4094f8:	mov	w0, #0xffffffff            	// #-1
  4094fc:	ret
  409500:	ldr	w0, [x1, #156]
  409504:	and	w0, w0, #0xf000
  409508:	cmp	w0, #0x4, lsl #12
  40950c:	b.eq	4094d4 <__fxstatat@plt+0x6a84>  // b.none
  409510:	cmp	w3, #0x4, lsl #12
  409514:	b.eq	4094f8 <__fxstatat@plt+0x6aa8>  // b.none
  409518:	ldr	x3, [x1, #96]
  40951c:	ldr	x0, [x2, #96]
  409520:	cmp	x3, x0
  409524:	b.lt	4094f8 <__fxstatat@plt+0x6aa8>  // b.tstop
  409528:	b.gt	4094dc <__fxstatat@plt+0x6a8c>
  40952c:	ldr	x0, [x1, #104]
  409530:	ldr	x3, [x2, #104]
  409534:	subs	w0, w0, w3
  409538:	b.ne	4094e0 <__fxstatat@plt+0x6a90>  // b.any
  40953c:	ldr	x1, [x1]
  409540:	ldr	x0, [x2]
  409544:	b	404bf8 <__fxstatat@plt+0x21a8>
  409548:	mov	x3, x1
  40954c:	ldr	w1, [x0, #152]
  409550:	mov	x2, x0
  409554:	ldr	w4, [x3, #152]
  409558:	cmp	w4, #0x9
  40955c:	cset	w0, eq  // eq = none
  409560:	cmp	w4, #0x3
  409564:	csinc	w0, w0, wzr, ne  // ne = any
  409568:	cmp	w1, #0x3
  40956c:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  409570:	b.eq	409590 <__fxstatat@plt+0x6b40>  // b.none
  409574:	ldr	w1, [x2, #156]
  409578:	and	w1, w1, #0xf000
  40957c:	cbz	w0, 4095ac <__fxstatat@plt+0x6b5c>
  409580:	cmp	w1, #0x4, lsl #12
  409584:	b.eq	4095c4 <__fxstatat@plt+0x6b74>  // b.none
  409588:	mov	w0, #0x1                   	// #1
  40958c:	ret
  409590:	cbnz	w0, 4095c4 <__fxstatat@plt+0x6b74>
  409594:	ldr	w0, [x3, #156]
  409598:	and	w0, w0, #0xf000
  40959c:	cmp	w0, #0x4, lsl #12
  4095a0:	b.eq	4095c4 <__fxstatat@plt+0x6b74>  // b.none
  4095a4:	mov	w0, #0xffffffff            	// #-1
  4095a8:	ret
  4095ac:	ldr	w0, [x3, #156]
  4095b0:	and	w0, w0, #0xf000
  4095b4:	cmp	w0, #0x4, lsl #12
  4095b8:	b.eq	409580 <__fxstatat@plt+0x6b30>  // b.none
  4095bc:	cmp	w1, #0x4, lsl #12
  4095c0:	b.eq	4095a4 <__fxstatat@plt+0x6b54>  // b.none
  4095c4:	ldr	x1, [x2, #96]
  4095c8:	ldr	x0, [x3, #96]
  4095cc:	cmp	x1, x0
  4095d0:	b.lt	4095a4 <__fxstatat@plt+0x6b54>  // b.tstop
  4095d4:	b.gt	409588 <__fxstatat@plt+0x6b38>
  4095d8:	ldr	x0, [x2, #104]
  4095dc:	ldr	x1, [x3, #104]
  4095e0:	subs	w0, w0, w1
  4095e4:	b.ne	40958c <__fxstatat@plt+0x6b3c>  // b.any
  4095e8:	ldr	x1, [x2]
  4095ec:	ldr	x0, [x3]
  4095f0:	b	404bf8 <__fxstatat@plt+0x21a8>
  4095f4:	nop
  4095f8:	mov	x2, x0
  4095fc:	ldr	w4, [x1, #152]
  409600:	cmp	w4, #0x9
  409604:	ldr	w3, [x2, #152]
  409608:	cset	w0, eq  // eq = none
  40960c:	cmp	w4, #0x3
  409610:	csinc	w0, w0, wzr, ne  // ne = any
  409614:	cmp	w3, #0x3
  409618:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  40961c:	b.eq	40963c <__fxstatat@plt+0x6bec>  // b.none
  409620:	ldr	w3, [x2, #156]
  409624:	and	w3, w3, #0xf000
  409628:	cbz	w0, 409658 <__fxstatat@plt+0x6c08>
  40962c:	cmp	w3, #0x4, lsl #12
  409630:	b.eq	409670 <__fxstatat@plt+0x6c20>  // b.none
  409634:	mov	w0, #0x1                   	// #1
  409638:	ret
  40963c:	cbnz	w0, 409670 <__fxstatat@plt+0x6c20>
  409640:	ldr	w0, [x1, #156]
  409644:	and	w0, w0, #0xf000
  409648:	cmp	w0, #0x4, lsl #12
  40964c:	b.eq	409670 <__fxstatat@plt+0x6c20>  // b.none
  409650:	mov	w0, #0xffffffff            	// #-1
  409654:	ret
  409658:	ldr	w0, [x1, #156]
  40965c:	and	w0, w0, #0xf000
  409660:	cmp	w0, #0x4, lsl #12
  409664:	b.eq	40962c <__fxstatat@plt+0x6bdc>  // b.none
  409668:	cmp	w3, #0x4, lsl #12
  40966c:	b.eq	409650 <__fxstatat@plt+0x6c00>  // b.none
  409670:	ldr	x3, [x1, #112]
  409674:	ldr	x0, [x2, #112]
  409678:	cmp	x3, x0
  40967c:	b.lt	409650 <__fxstatat@plt+0x6c00>  // b.tstop
  409680:	b.gt	409634 <__fxstatat@plt+0x6be4>
  409684:	ldr	x0, [x1, #120]
  409688:	ldr	x3, [x2, #120]
  40968c:	subs	w0, w0, w3
  409690:	b.ne	409638 <__fxstatat@plt+0x6be8>  // b.any
  409694:	ldr	x1, [x1]
  409698:	ldr	x0, [x2]
  40969c:	b	404bf8 <__fxstatat@plt+0x21a8>
  4096a0:	mov	x3, x1
  4096a4:	ldr	w1, [x0, #152]
  4096a8:	mov	x2, x0
  4096ac:	ldr	w4, [x3, #152]
  4096b0:	cmp	w4, #0x9
  4096b4:	cset	w0, eq  // eq = none
  4096b8:	cmp	w4, #0x3
  4096bc:	csinc	w0, w0, wzr, ne  // ne = any
  4096c0:	cmp	w1, #0x3
  4096c4:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  4096c8:	b.eq	4096e8 <__fxstatat@plt+0x6c98>  // b.none
  4096cc:	ldr	w1, [x2, #156]
  4096d0:	and	w1, w1, #0xf000
  4096d4:	cbz	w0, 409704 <__fxstatat@plt+0x6cb4>
  4096d8:	cmp	w1, #0x4, lsl #12
  4096dc:	b.eq	40971c <__fxstatat@plt+0x6ccc>  // b.none
  4096e0:	mov	w0, #0x1                   	// #1
  4096e4:	ret
  4096e8:	cbnz	w0, 40971c <__fxstatat@plt+0x6ccc>
  4096ec:	ldr	w0, [x3, #156]
  4096f0:	and	w0, w0, #0xf000
  4096f4:	cmp	w0, #0x4, lsl #12
  4096f8:	b.eq	40971c <__fxstatat@plt+0x6ccc>  // b.none
  4096fc:	mov	w0, #0xffffffff            	// #-1
  409700:	ret
  409704:	ldr	w0, [x3, #156]
  409708:	and	w0, w0, #0xf000
  40970c:	cmp	w0, #0x4, lsl #12
  409710:	b.eq	4096d8 <__fxstatat@plt+0x6c88>  // b.none
  409714:	cmp	w1, #0x4, lsl #12
  409718:	b.eq	4096fc <__fxstatat@plt+0x6cac>  // b.none
  40971c:	ldr	x1, [x2, #112]
  409720:	ldr	x0, [x3, #112]
  409724:	cmp	x1, x0
  409728:	b.lt	4096fc <__fxstatat@plt+0x6cac>  // b.tstop
  40972c:	b.gt	4096e0 <__fxstatat@plt+0x6c90>
  409730:	ldr	x0, [x2, #120]
  409734:	ldr	x1, [x3, #120]
  409738:	subs	w0, w0, w1
  40973c:	b.ne	4096e4 <__fxstatat@plt+0x6c94>  // b.any
  409740:	ldr	x1, [x2]
  409744:	ldr	x0, [x3]
  409748:	b	404bf8 <__fxstatat@plt+0x21a8>
  40974c:	nop
  409750:	mov	x3, x1
  409754:	ldr	w1, [x0, #152]
  409758:	mov	x2, x0
  40975c:	ldr	w4, [x3, #152]
  409760:	cmp	w4, #0x9
  409764:	cset	w0, eq  // eq = none
  409768:	cmp	w4, #0x3
  40976c:	csinc	w0, w0, wzr, ne  // ne = any
  409770:	cmp	w1, #0x3
  409774:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  409778:	b.eq	409798 <__fxstatat@plt+0x6d48>  // b.none
  40977c:	ldr	w1, [x2, #156]
  409780:	and	w1, w1, #0xf000
  409784:	cbz	w0, 4097b4 <__fxstatat@plt+0x6d64>
  409788:	cmp	w1, #0x4, lsl #12
  40978c:	b.eq	4097cc <__fxstatat@plt+0x6d7c>  // b.none
  409790:	mov	w0, #0x1                   	// #1
  409794:	ret
  409798:	cbnz	w0, 4097cc <__fxstatat@plt+0x6d7c>
  40979c:	ldr	w0, [x3, #156]
  4097a0:	and	w0, w0, #0xf000
  4097a4:	cmp	w0, #0x4, lsl #12
  4097a8:	b.eq	4097cc <__fxstatat@plt+0x6d7c>  // b.none
  4097ac:	mov	w0, #0xffffffff            	// #-1
  4097b0:	ret
  4097b4:	ldr	w0, [x3, #156]
  4097b8:	and	w0, w0, #0xf000
  4097bc:	cmp	w0, #0x4, lsl #12
  4097c0:	b.eq	409788 <__fxstatat@plt+0x6d38>  // b.none
  4097c4:	cmp	w1, #0x4, lsl #12
  4097c8:	b.eq	4097ac <__fxstatat@plt+0x6d5c>  // b.none
  4097cc:	ldr	x1, [x2, #128]
  4097d0:	ldr	x0, [x3, #128]
  4097d4:	cmp	x1, x0
  4097d8:	b.lt	4097ac <__fxstatat@plt+0x6d5c>  // b.tstop
  4097dc:	b.gt	409790 <__fxstatat@plt+0x6d40>
  4097e0:	ldr	x0, [x2, #136]
  4097e4:	ldr	x1, [x3, #136]
  4097e8:	subs	w0, w0, w1
  4097ec:	b.ne	409794 <__fxstatat@plt+0x6d44>  // b.any
  4097f0:	ldr	x1, [x2]
  4097f4:	ldr	x0, [x3]
  4097f8:	b	404bf8 <__fxstatat@plt+0x21a8>
  4097fc:	nop
  409800:	stp	x29, x30, [sp, #-48]!
  409804:	mov	x29, sp
  409808:	stp	x19, x20, [sp, #16]
  40980c:	mov	x20, x0
  409810:	ldr	x0, [x0]
  409814:	str	x21, [sp, #32]
  409818:	mov	x21, x1
  40981c:	mov	w1, #0x2e                  	// #46
  409820:	bl	402720 <strrchr@plt>
  409824:	mov	x19, x0
  409828:	ldr	x0, [x21]
  40982c:	mov	w1, #0x2e                  	// #46
  409830:	bl	402720 <strrchr@plt>
  409834:	mov	x1, x0
  409838:	cmp	x19, #0x0
  40983c:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x2ce0>
  409840:	add	x3, x3, #0xf0
  409844:	csel	x19, x3, x19, eq  // eq = none
  409848:	cmp	x0, #0x0
  40984c:	csel	x1, x3, x1, eq  // eq = none
  409850:	mov	x0, x19
  409854:	bl	404bf8 <__fxstatat@plt+0x21a8>
  409858:	cbnz	w0, 409874 <__fxstatat@plt+0x6e24>
  40985c:	ldr	x0, [x20]
  409860:	ldr	x1, [x21]
  409864:	ldp	x19, x20, [sp, #16]
  409868:	ldr	x21, [sp, #32]
  40986c:	ldp	x29, x30, [sp], #48
  409870:	b	404bf8 <__fxstatat@plt+0x21a8>
  409874:	ldp	x19, x20, [sp, #16]
  409878:	ldr	x21, [sp, #32]
  40987c:	ldp	x29, x30, [sp], #48
  409880:	ret
  409884:	nop
  409888:	stp	x29, x30, [sp, #-48]!
  40988c:	mov	x29, sp
  409890:	stp	x19, x20, [sp, #16]
  409894:	mov	x20, x1
  409898:	mov	w1, #0x2e                  	// #46
  40989c:	str	x21, [sp, #32]
  4098a0:	mov	x21, x0
  4098a4:	ldr	x0, [x20]
  4098a8:	bl	402720 <strrchr@plt>
  4098ac:	mov	x19, x0
  4098b0:	ldr	x0, [x21]
  4098b4:	mov	w1, #0x2e                  	// #46
  4098b8:	bl	402720 <strrchr@plt>
  4098bc:	mov	x1, x0
  4098c0:	cmp	x19, #0x0
  4098c4:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x2ce0>
  4098c8:	add	x3, x3, #0xf0
  4098cc:	csel	x19, x3, x19, eq  // eq = none
  4098d0:	cmp	x0, #0x0
  4098d4:	csel	x1, x3, x1, eq  // eq = none
  4098d8:	mov	x0, x19
  4098dc:	bl	404bf8 <__fxstatat@plt+0x21a8>
  4098e0:	cbnz	w0, 4098fc <__fxstatat@plt+0x6eac>
  4098e4:	ldr	x0, [x20]
  4098e8:	ldr	x1, [x21]
  4098ec:	ldp	x19, x20, [sp, #16]
  4098f0:	ldr	x21, [sp, #32]
  4098f4:	ldp	x29, x30, [sp], #48
  4098f8:	b	404bf8 <__fxstatat@plt+0x21a8>
  4098fc:	ldp	x19, x20, [sp, #16]
  409900:	ldr	x21, [sp, #32]
  409904:	ldp	x29, x30, [sp], #48
  409908:	ret
  40990c:	nop
  409910:	mov	x3, x1
  409914:	ldr	w1, [x0, #152]
  409918:	mov	x2, x0
  40991c:	ldr	w4, [x3, #152]
  409920:	cmp	w4, #0x9
  409924:	cset	w0, eq  // eq = none
  409928:	cmp	w4, #0x3
  40992c:	csinc	w0, w0, wzr, ne  // ne = any
  409930:	cmp	w1, #0x3
  409934:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  409938:	b.eq	409958 <__fxstatat@plt+0x6f08>  // b.none
  40993c:	ldr	w1, [x2, #156]
  409940:	and	w1, w1, #0xf000
  409944:	cbz	w0, 409974 <__fxstatat@plt+0x6f24>
  409948:	cmp	w1, #0x4, lsl #12
  40994c:	b.eq	40998c <__fxstatat@plt+0x6f3c>  // b.none
  409950:	mov	w0, #0x1                   	// #1
  409954:	ret
  409958:	cbnz	w0, 40998c <__fxstatat@plt+0x6f3c>
  40995c:	ldr	w0, [x3, #156]
  409960:	and	w0, w0, #0xf000
  409964:	cmp	w0, #0x4, lsl #12
  409968:	b.eq	40998c <__fxstatat@plt+0x6f3c>  // b.none
  40996c:	mov	w0, #0xffffffff            	// #-1
  409970:	ret
  409974:	ldr	w0, [x3, #156]
  409978:	and	w0, w0, #0xf000
  40997c:	cmp	w0, #0x4, lsl #12
  409980:	b.eq	409948 <__fxstatat@plt+0x6ef8>  // b.none
  409984:	cmp	w1, #0x4, lsl #12
  409988:	b.eq	40996c <__fxstatat@plt+0x6f1c>  // b.none
  40998c:	ldr	x1, [x2, #112]
  409990:	ldr	x0, [x3, #112]
  409994:	cmp	x1, x0
  409998:	b.lt	40996c <__fxstatat@plt+0x6f1c>  // b.tstop
  40999c:	b.gt	409950 <__fxstatat@plt+0x6f00>
  4099a0:	ldr	x0, [x2, #120]
  4099a4:	ldr	x1, [x3, #120]
  4099a8:	subs	w0, w0, w1
  4099ac:	b.ne	409954 <__fxstatat@plt+0x6f04>  // b.any
  4099b0:	ldr	x1, [x2]
  4099b4:	ldr	x0, [x3]
  4099b8:	b	402800 <strcmp@plt>
  4099bc:	nop
  4099c0:	mov	x3, x1
  4099c4:	ldr	w1, [x0, #152]
  4099c8:	mov	x2, x0
  4099cc:	ldr	w4, [x3, #152]
  4099d0:	cmp	w4, #0x9
  4099d4:	cset	w0, eq  // eq = none
  4099d8:	cmp	w4, #0x3
  4099dc:	csinc	w0, w0, wzr, ne  // ne = any
  4099e0:	cmp	w1, #0x3
  4099e4:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  4099e8:	b.eq	409a08 <__fxstatat@plt+0x6fb8>  // b.none
  4099ec:	ldr	w1, [x2, #156]
  4099f0:	and	w1, w1, #0xf000
  4099f4:	cbz	w0, 409a24 <__fxstatat@plt+0x6fd4>
  4099f8:	cmp	w1, #0x4, lsl #12
  4099fc:	b.eq	409a3c <__fxstatat@plt+0x6fec>  // b.none
  409a00:	mov	w0, #0x1                   	// #1
  409a04:	ret
  409a08:	cbnz	w0, 409a3c <__fxstatat@plt+0x6fec>
  409a0c:	ldr	w0, [x3, #156]
  409a10:	and	w0, w0, #0xf000
  409a14:	cmp	w0, #0x4, lsl #12
  409a18:	b.eq	409a3c <__fxstatat@plt+0x6fec>  // b.none
  409a1c:	mov	w0, #0xffffffff            	// #-1
  409a20:	ret
  409a24:	ldr	w0, [x3, #156]
  409a28:	and	w0, w0, #0xf000
  409a2c:	cmp	w0, #0x4, lsl #12
  409a30:	b.eq	4099f8 <__fxstatat@plt+0x6fa8>  // b.none
  409a34:	cmp	w1, #0x4, lsl #12
  409a38:	b.eq	409a1c <__fxstatat@plt+0x6fcc>  // b.none
  409a3c:	ldr	x1, [x2, #128]
  409a40:	ldr	x0, [x3, #128]
  409a44:	cmp	x1, x0
  409a48:	b.lt	409a1c <__fxstatat@plt+0x6fcc>  // b.tstop
  409a4c:	b.gt	409a00 <__fxstatat@plt+0x6fb0>
  409a50:	ldr	x0, [x2, #136]
  409a54:	ldr	x1, [x3, #136]
  409a58:	subs	w0, w0, w1
  409a5c:	b.ne	409a04 <__fxstatat@plt+0x6fb4>  // b.any
  409a60:	ldr	x1, [x2]
  409a64:	ldr	x0, [x3]
  409a68:	b	402800 <strcmp@plt>
  409a6c:	nop
  409a70:	mov	x3, x1
  409a74:	ldr	w1, [x0, #152]
  409a78:	mov	x2, x0
  409a7c:	ldr	w4, [x3, #152]
  409a80:	cmp	w4, #0x9
  409a84:	cset	w0, eq  // eq = none
  409a88:	cmp	w4, #0x3
  409a8c:	csinc	w0, w0, wzr, ne  // ne = any
  409a90:	cmp	w1, #0x3
  409a94:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  409a98:	b.eq	409ab8 <__fxstatat@plt+0x7068>  // b.none
  409a9c:	ldr	w1, [x2, #156]
  409aa0:	and	w1, w1, #0xf000
  409aa4:	cbz	w0, 409ad4 <__fxstatat@plt+0x7084>
  409aa8:	cmp	w1, #0x4, lsl #12
  409aac:	b.eq	409aec <__fxstatat@plt+0x709c>  // b.none
  409ab0:	mov	w0, #0x1                   	// #1
  409ab4:	ret
  409ab8:	cbnz	w0, 409aec <__fxstatat@plt+0x709c>
  409abc:	ldr	w0, [x3, #156]
  409ac0:	and	w0, w0, #0xf000
  409ac4:	cmp	w0, #0x4, lsl #12
  409ac8:	b.eq	409aec <__fxstatat@plt+0x709c>  // b.none
  409acc:	mov	w0, #0xffffffff            	// #-1
  409ad0:	ret
  409ad4:	ldr	w0, [x3, #156]
  409ad8:	and	w0, w0, #0xf000
  409adc:	cmp	w0, #0x4, lsl #12
  409ae0:	b.eq	409aa8 <__fxstatat@plt+0x7058>  // b.none
  409ae4:	cmp	w1, #0x4, lsl #12
  409ae8:	b.eq	409acc <__fxstatat@plt+0x707c>  // b.none
  409aec:	ldr	x1, [x2, #96]
  409af0:	ldr	x0, [x3, #96]
  409af4:	cmp	x1, x0
  409af8:	b.lt	409acc <__fxstatat@plt+0x707c>  // b.tstop
  409afc:	b.gt	409ab0 <__fxstatat@plt+0x7060>
  409b00:	ldr	x0, [x2, #104]
  409b04:	ldr	x1, [x3, #104]
  409b08:	subs	w0, w0, w1
  409b0c:	b.ne	409ab4 <__fxstatat@plt+0x7064>  // b.any
  409b10:	ldr	x1, [x2]
  409b14:	ldr	x0, [x3]
  409b18:	b	402800 <strcmp@plt>
  409b1c:	nop
  409b20:	stp	x29, x30, [sp, #-48]!
  409b24:	mov	x2, x1
  409b28:	mov	w1, #0x2e                  	// #46
  409b2c:	mov	x29, sp
  409b30:	stp	x19, x20, [sp, #16]
  409b34:	mov	x19, x0
  409b38:	ldr	x20, [x2]
  409b3c:	str	x21, [sp, #32]
  409b40:	mov	x0, x20
  409b44:	bl	402720 <strrchr@plt>
  409b48:	ldr	x21, [x19]
  409b4c:	mov	w1, #0x2e                  	// #46
  409b50:	mov	x19, x0
  409b54:	mov	x0, x21
  409b58:	bl	402720 <strrchr@plt>
  409b5c:	mov	x1, x0
  409b60:	cbz	x19, 409b90 <__fxstatat@plt+0x7140>
  409b64:	cmp	x0, #0x0
  409b68:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2ce0>
  409b6c:	add	x0, x0, #0xf0
  409b70:	csel	x1, x0, x1, eq  // eq = none
  409b74:	mov	x0, x19
  409b78:	bl	402800 <strcmp@plt>
  409b7c:	cbz	w0, 409b9c <__fxstatat@plt+0x714c>
  409b80:	ldp	x19, x20, [sp, #16]
  409b84:	ldr	x21, [sp, #32]
  409b88:	ldp	x29, x30, [sp], #48
  409b8c:	ret
  409b90:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x2ce0>
  409b94:	add	x19, x19, #0xf0
  409b98:	cbnz	x0, 409b74 <__fxstatat@plt+0x7124>
  409b9c:	mov	x1, x21
  409ba0:	mov	x0, x20
  409ba4:	ldp	x19, x20, [sp, #16]
  409ba8:	ldr	x21, [sp, #32]
  409bac:	ldp	x29, x30, [sp], #48
  409bb0:	b	402800 <strcmp@plt>
  409bb4:	nop
  409bb8:	stp	x29, x30, [sp, #-48]!
  409bbc:	mov	x29, sp
  409bc0:	stp	x19, x20, [sp, #16]
  409bc4:	mov	x19, x1
  409bc8:	mov	w1, #0x2e                  	// #46
  409bcc:	ldr	x20, [x0]
  409bd0:	str	x21, [sp, #32]
  409bd4:	mov	x0, x20
  409bd8:	bl	402720 <strrchr@plt>
  409bdc:	ldr	x21, [x19]
  409be0:	mov	w1, #0x2e                  	// #46
  409be4:	mov	x19, x0
  409be8:	mov	x0, x21
  409bec:	bl	402720 <strrchr@plt>
  409bf0:	mov	x1, x0
  409bf4:	cbz	x19, 409c24 <__fxstatat@plt+0x71d4>
  409bf8:	cmp	x0, #0x0
  409bfc:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2ce0>
  409c00:	add	x0, x0, #0xf0
  409c04:	csel	x1, x0, x1, eq  // eq = none
  409c08:	mov	x0, x19
  409c0c:	bl	402800 <strcmp@plt>
  409c10:	cbz	w0, 409c30 <__fxstatat@plt+0x71e0>
  409c14:	ldp	x19, x20, [sp, #16]
  409c18:	ldr	x21, [sp, #32]
  409c1c:	ldp	x29, x30, [sp], #48
  409c20:	ret
  409c24:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x2ce0>
  409c28:	add	x19, x19, #0xf0
  409c2c:	cbnz	x0, 409c08 <__fxstatat@plt+0x71b8>
  409c30:	mov	x1, x21
  409c34:	mov	x0, x20
  409c38:	ldp	x19, x20, [sp, #16]
  409c3c:	ldr	x21, [sp, #32]
  409c40:	ldp	x29, x30, [sp], #48
  409c44:	b	402800 <strcmp@plt>
  409c48:	stp	x29, x30, [sp, #-48]!
  409c4c:	mov	x29, sp
  409c50:	ldr	w2, [x1, #152]
  409c54:	stp	x19, x20, [sp, #16]
  409c58:	mov	x20, x1
  409c5c:	cmp	w2, #0x9
  409c60:	ldr	w1, [x0, #152]
  409c64:	mov	x19, x0
  409c68:	cset	w0, eq  // eq = none
  409c6c:	cmp	w2, #0x3
  409c70:	csinc	w0, w0, wzr, ne  // ne = any
  409c74:	cmp	w1, #0x3
  409c78:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  409c7c:	b.eq	409ca4 <__fxstatat@plt+0x7254>  // b.none
  409c80:	ldr	w1, [x19, #156]
  409c84:	and	w1, w1, #0xf000
  409c88:	cbz	w0, 409cc8 <__fxstatat@plt+0x7278>
  409c8c:	cmp	w1, #0x4, lsl #12
  409c90:	b.eq	409ce0 <__fxstatat@plt+0x7290>  // b.none
  409c94:	mov	w0, #0x1                   	// #1
  409c98:	ldp	x19, x20, [sp, #16]
  409c9c:	ldp	x29, x30, [sp], #48
  409ca0:	ret
  409ca4:	cbnz	w0, 409ce0 <__fxstatat@plt+0x7290>
  409ca8:	ldr	w0, [x20, #156]
  409cac:	and	w0, w0, #0xf000
  409cb0:	cmp	w0, #0x4, lsl #12
  409cb4:	b.eq	409ce0 <__fxstatat@plt+0x7290>  // b.none
  409cb8:	mov	w0, #0xffffffff            	// #-1
  409cbc:	ldp	x19, x20, [sp, #16]
  409cc0:	ldp	x29, x30, [sp], #48
  409cc4:	ret
  409cc8:	ldr	w0, [x20, #156]
  409ccc:	and	w0, w0, #0xf000
  409cd0:	cmp	w0, #0x4, lsl #12
  409cd4:	b.eq	409c8c <__fxstatat@plt+0x723c>  // b.none
  409cd8:	cmp	w1, #0x4, lsl #12
  409cdc:	b.eq	409cb8 <__fxstatat@plt+0x7268>  // b.none
  409ce0:	ldr	x0, [x20]
  409ce4:	mov	w1, #0x2e                  	// #46
  409ce8:	str	x21, [sp, #32]
  409cec:	bl	402720 <strrchr@plt>
  409cf0:	mov	x21, x0
  409cf4:	ldr	x0, [x19]
  409cf8:	mov	w1, #0x2e                  	// #46
  409cfc:	bl	402720 <strrchr@plt>
  409d00:	mov	x1, x0
  409d04:	cmp	x21, #0x0
  409d08:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x2ce0>
  409d0c:	add	x2, x2, #0xf0
  409d10:	csel	x21, x2, x21, eq  // eq = none
  409d14:	cmp	x0, #0x0
  409d18:	csel	x1, x2, x1, eq  // eq = none
  409d1c:	mov	x0, x21
  409d20:	bl	404bf8 <__fxstatat@plt+0x21a8>
  409d24:	cbnz	w0, 409d40 <__fxstatat@plt+0x72f0>
  409d28:	ldr	x1, [x19]
  409d2c:	ldr	x0, [x20]
  409d30:	ldp	x19, x20, [sp, #16]
  409d34:	ldr	x21, [sp, #32]
  409d38:	ldp	x29, x30, [sp], #48
  409d3c:	b	404bf8 <__fxstatat@plt+0x21a8>
  409d40:	ldp	x19, x20, [sp, #16]
  409d44:	ldr	x21, [sp, #32]
  409d48:	ldp	x29, x30, [sp], #48
  409d4c:	ret
  409d50:	stp	x29, x30, [sp, #-48]!
  409d54:	mov	x29, sp
  409d58:	ldr	w2, [x1, #152]
  409d5c:	stp	x19, x20, [sp, #16]
  409d60:	mov	x20, x1
  409d64:	cmp	w2, #0x9
  409d68:	ldr	w1, [x0, #152]
  409d6c:	mov	x19, x0
  409d70:	cset	w0, eq  // eq = none
  409d74:	cmp	w2, #0x3
  409d78:	csinc	w0, w0, wzr, ne  // ne = any
  409d7c:	cmp	w1, #0x3
  409d80:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  409d84:	b.eq	409dac <__fxstatat@plt+0x735c>  // b.none
  409d88:	ldr	w1, [x19, #156]
  409d8c:	and	w1, w1, #0xf000
  409d90:	cbz	w0, 409dd0 <__fxstatat@plt+0x7380>
  409d94:	cmp	w1, #0x4, lsl #12
  409d98:	b.eq	409de8 <__fxstatat@plt+0x7398>  // b.none
  409d9c:	mov	w0, #0x1                   	// #1
  409da0:	ldp	x19, x20, [sp, #16]
  409da4:	ldp	x29, x30, [sp], #48
  409da8:	ret
  409dac:	cbnz	w0, 409de8 <__fxstatat@plt+0x7398>
  409db0:	ldr	w0, [x20, #156]
  409db4:	and	w0, w0, #0xf000
  409db8:	cmp	w0, #0x4, lsl #12
  409dbc:	b.eq	409de8 <__fxstatat@plt+0x7398>  // b.none
  409dc0:	mov	w0, #0xffffffff            	// #-1
  409dc4:	ldp	x19, x20, [sp, #16]
  409dc8:	ldp	x29, x30, [sp], #48
  409dcc:	ret
  409dd0:	ldr	w0, [x20, #156]
  409dd4:	and	w0, w0, #0xf000
  409dd8:	cmp	w0, #0x4, lsl #12
  409ddc:	b.eq	409d94 <__fxstatat@plt+0x7344>  // b.none
  409de0:	cmp	w1, #0x4, lsl #12
  409de4:	b.eq	409dc0 <__fxstatat@plt+0x7370>  // b.none
  409de8:	ldr	x0, [x19]
  409dec:	mov	w1, #0x2e                  	// #46
  409df0:	str	x21, [sp, #32]
  409df4:	bl	402720 <strrchr@plt>
  409df8:	mov	x21, x0
  409dfc:	ldr	x0, [x20]
  409e00:	mov	w1, #0x2e                  	// #46
  409e04:	bl	402720 <strrchr@plt>
  409e08:	mov	x1, x0
  409e0c:	cmp	x21, #0x0
  409e10:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x2ce0>
  409e14:	add	x2, x2, #0xf0
  409e18:	csel	x21, x2, x21, eq  // eq = none
  409e1c:	cmp	x0, #0x0
  409e20:	csel	x1, x2, x1, eq  // eq = none
  409e24:	mov	x0, x21
  409e28:	bl	404bf8 <__fxstatat@plt+0x21a8>
  409e2c:	cbnz	w0, 409e48 <__fxstatat@plt+0x73f8>
  409e30:	ldr	x0, [x19]
  409e34:	ldr	x1, [x20]
  409e38:	ldp	x19, x20, [sp, #16]
  409e3c:	ldr	x21, [sp, #32]
  409e40:	ldp	x29, x30, [sp], #48
  409e44:	b	404bf8 <__fxstatat@plt+0x21a8>
  409e48:	ldp	x19, x20, [sp, #16]
  409e4c:	ldr	x21, [sp, #32]
  409e50:	ldp	x29, x30, [sp], #48
  409e54:	ret
  409e58:	stp	x29, x30, [sp, #-48]!
  409e5c:	mov	x29, sp
  409e60:	ldr	w3, [x1, #152]
  409e64:	ldr	w2, [x0, #152]
  409e68:	cmp	w3, #0x9
  409e6c:	stp	x19, x20, [sp, #16]
  409e70:	mov	x19, x1
  409e74:	cset	w1, eq  // eq = none
  409e78:	cmp	w3, #0x3
  409e7c:	csinc	w1, w1, wzr, ne  // ne = any
  409e80:	cmp	w2, #0x3
  409e84:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  409e88:	b.eq	409eb0 <__fxstatat@plt+0x7460>  // b.none
  409e8c:	ldr	w2, [x0, #156]
  409e90:	and	w2, w2, #0xf000
  409e94:	cbz	w1, 409ed4 <__fxstatat@plt+0x7484>
  409e98:	cmp	w2, #0x4, lsl #12
  409e9c:	b.eq	409eec <__fxstatat@plt+0x749c>  // b.none
  409ea0:	mov	w0, #0x1                   	// #1
  409ea4:	ldp	x19, x20, [sp, #16]
  409ea8:	ldp	x29, x30, [sp], #48
  409eac:	ret
  409eb0:	cbnz	w1, 409eec <__fxstatat@plt+0x749c>
  409eb4:	ldr	w1, [x19, #156]
  409eb8:	and	w1, w1, #0xf000
  409ebc:	cmp	w1, #0x4, lsl #12
  409ec0:	b.eq	409eec <__fxstatat@plt+0x749c>  // b.none
  409ec4:	mov	w0, #0xffffffff            	// #-1
  409ec8:	ldp	x19, x20, [sp, #16]
  409ecc:	ldp	x29, x30, [sp], #48
  409ed0:	ret
  409ed4:	ldr	w1, [x19, #156]
  409ed8:	and	w1, w1, #0xf000
  409edc:	cmp	w1, #0x4, lsl #12
  409ee0:	b.eq	409e98 <__fxstatat@plt+0x7448>  // b.none
  409ee4:	cmp	w2, #0x4, lsl #12
  409ee8:	b.eq	409ec4 <__fxstatat@plt+0x7474>  // b.none
  409eec:	ldr	x20, [x0]
  409ef0:	mov	w1, #0x2e                  	// #46
  409ef4:	str	x21, [sp, #32]
  409ef8:	mov	x0, x20
  409efc:	bl	402720 <strrchr@plt>
  409f00:	ldr	x21, [x19]
  409f04:	mov	w1, #0x2e                  	// #46
  409f08:	mov	x19, x0
  409f0c:	mov	x0, x21
  409f10:	bl	402720 <strrchr@plt>
  409f14:	mov	x1, x0
  409f18:	cbz	x19, 409f48 <__fxstatat@plt+0x74f8>
  409f1c:	cmp	x0, #0x0
  409f20:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2ce0>
  409f24:	add	x0, x0, #0xf0
  409f28:	csel	x1, x0, x1, eq  // eq = none
  409f2c:	mov	x0, x19
  409f30:	bl	402800 <strcmp@plt>
  409f34:	cbz	w0, 409f54 <__fxstatat@plt+0x7504>
  409f38:	ldp	x19, x20, [sp, #16]
  409f3c:	ldr	x21, [sp, #32]
  409f40:	ldp	x29, x30, [sp], #48
  409f44:	ret
  409f48:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x2ce0>
  409f4c:	add	x19, x19, #0xf0
  409f50:	cbnz	x0, 409f2c <__fxstatat@plt+0x74dc>
  409f54:	mov	x1, x21
  409f58:	mov	x0, x20
  409f5c:	ldp	x19, x20, [sp, #16]
  409f60:	ldr	x21, [sp, #32]
  409f64:	ldp	x29, x30, [sp], #48
  409f68:	b	402800 <strcmp@plt>
  409f6c:	nop
  409f70:	stp	x29, x30, [sp, #-176]!
  409f74:	mov	x29, sp
  409f78:	stp	x19, x20, [sp, #16]
  409f7c:	mov	w20, w0
  409f80:	stp	x21, x22, [sp, #32]
  409f84:	str	x23, [sp, #48]
  409f88:	cbz	w0, 409fc8 <__fxstatat@plt+0x7578>
  409f8c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  409f90:	mov	w2, #0x5                   	// #5
  409f94:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  409f98:	add	x1, x1, #0x530
  409f9c:	ldr	x19, [x0, #1432]
  409fa0:	mov	x0, #0x0                   	// #0
  409fa4:	bl	402970 <dcgettext@plt>
  409fa8:	mov	x2, x0
  409fac:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  409fb0:	mov	x0, x19
  409fb4:	mov	w1, #0x1                   	// #1
  409fb8:	ldr	x3, [x3, #1872]
  409fbc:	bl	4027e0 <__fprintf_chk@plt>
  409fc0:	mov	w0, w20
  409fc4:	bl	402460 <exit@plt>
  409fc8:	mov	w2, #0x5                   	// #5
  409fcc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  409fd0:	mov	x0, #0x0                   	// #0
  409fd4:	add	x1, x1, #0x558
  409fd8:	bl	402970 <dcgettext@plt>
  409fdc:	adrp	x19, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  409fe0:	adrp	x2, 430000 <__progname@@GLIBC_2.17+0xa48>
  409fe4:	mov	x1, x0
  409fe8:	mov	w0, #0x1                   	// #1
  409fec:	ldr	x2, [x2, #1872]
  409ff0:	bl	402670 <__printf_chk@plt>
  409ff4:	mov	w2, #0x5                   	// #5
  409ff8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  409ffc:	mov	x0, #0x0                   	// #0
  40a000:	add	x1, x1, #0x580
  40a004:	bl	402970 <dcgettext@plt>
  40a008:	ldr	x1, [x19, #1456]
  40a00c:	bl	402980 <fputs_unlocked@plt>
  40a010:	mov	w2, #0x5                   	// #5
  40a014:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a018:	mov	x0, #0x0                   	// #0
  40a01c:	add	x1, x1, #0x610
  40a020:	bl	402970 <dcgettext@plt>
  40a024:	ldr	x1, [x19, #1456]
  40a028:	bl	402980 <fputs_unlocked@plt>
  40a02c:	mov	w2, #0x5                   	// #5
  40a030:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a034:	mov	x0, #0x0                   	// #0
  40a038:	add	x1, x1, #0x660
  40a03c:	bl	402970 <dcgettext@plt>
  40a040:	ldr	x1, [x19, #1456]
  40a044:	bl	402980 <fputs_unlocked@plt>
  40a048:	mov	w2, #0x5                   	// #5
  40a04c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a050:	mov	x0, #0x0                   	// #0
  40a054:	add	x1, x1, #0x770
  40a058:	bl	402970 <dcgettext@plt>
  40a05c:	ldr	x1, [x19, #1456]
  40a060:	bl	402980 <fputs_unlocked@plt>
  40a064:	mov	w2, #0x5                   	// #5
  40a068:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a06c:	mov	x0, #0x0                   	// #0
  40a070:	add	x1, x1, #0x810
  40a074:	bl	402970 <dcgettext@plt>
  40a078:	ldr	x1, [x19, #1456]
  40a07c:	bl	402980 <fputs_unlocked@plt>
  40a080:	mov	w2, #0x5                   	// #5
  40a084:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a088:	mov	x0, #0x0                   	// #0
  40a08c:	add	x1, x1, #0x980
  40a090:	bl	402970 <dcgettext@plt>
  40a094:	ldr	x1, [x19, #1456]
  40a098:	bl	402980 <fputs_unlocked@plt>
  40a09c:	mov	w2, #0x5                   	// #5
  40a0a0:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a0a4:	mov	x0, #0x0                   	// #0
  40a0a8:	add	x1, x1, #0xaf0
  40a0ac:	bl	402970 <dcgettext@plt>
  40a0b0:	ldr	x1, [x19, #1456]
  40a0b4:	bl	402980 <fputs_unlocked@plt>
  40a0b8:	mov	w2, #0x5                   	// #5
  40a0bc:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a0c0:	mov	x0, #0x0                   	// #0
  40a0c4:	add	x1, x1, #0xc98
  40a0c8:	bl	402970 <dcgettext@plt>
  40a0cc:	ldr	x1, [x19, #1456]
  40a0d0:	bl	402980 <fputs_unlocked@plt>
  40a0d4:	mov	w2, #0x5                   	// #5
  40a0d8:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a0dc:	mov	x0, #0x0                   	// #0
  40a0e0:	add	x1, x1, #0xcd8
  40a0e4:	bl	402970 <dcgettext@plt>
  40a0e8:	ldr	x1, [x19, #1456]
  40a0ec:	bl	402980 <fputs_unlocked@plt>
  40a0f0:	mov	w2, #0x5                   	// #5
  40a0f4:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a0f8:	mov	x0, #0x0                   	// #0
  40a0fc:	add	x1, x1, #0xdd0
  40a100:	bl	402970 <dcgettext@plt>
  40a104:	ldr	x1, [x19, #1456]
  40a108:	bl	402980 <fputs_unlocked@plt>
  40a10c:	mov	w2, #0x5                   	// #5
  40a110:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a114:	mov	x0, #0x0                   	// #0
  40a118:	add	x1, x1, #0xe20
  40a11c:	bl	402970 <dcgettext@plt>
  40a120:	ldr	x1, [x19, #1456]
  40a124:	bl	402980 <fputs_unlocked@plt>
  40a128:	mov	w2, #0x5                   	// #5
  40a12c:	adrp	x1, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a130:	mov	x0, #0x0                   	// #0
  40a134:	add	x1, x1, #0xeb8
  40a138:	bl	402970 <dcgettext@plt>
  40a13c:	ldr	x1, [x19, #1456]
  40a140:	bl	402980 <fputs_unlocked@plt>
  40a144:	mov	w2, #0x5                   	// #5
  40a148:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a14c:	mov	x0, #0x0                   	// #0
  40a150:	add	x1, x1, #0x60
  40a154:	bl	402970 <dcgettext@plt>
  40a158:	ldr	x1, [x19, #1456]
  40a15c:	bl	402980 <fputs_unlocked@plt>
  40a160:	mov	w2, #0x5                   	// #5
  40a164:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a168:	mov	x0, #0x0                   	// #0
  40a16c:	add	x1, x1, #0xf8
  40a170:	bl	402970 <dcgettext@plt>
  40a174:	ldr	x1, [x19, #1456]
  40a178:	bl	402980 <fputs_unlocked@plt>
  40a17c:	mov	w2, #0x5                   	// #5
  40a180:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a184:	mov	x0, #0x0                   	// #0
  40a188:	add	x1, x1, #0x260
  40a18c:	bl	402970 <dcgettext@plt>
  40a190:	ldr	x1, [x19, #1456]
  40a194:	bl	402980 <fputs_unlocked@plt>
  40a198:	mov	w2, #0x5                   	// #5
  40a19c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a1a0:	mov	x0, #0x0                   	// #0
  40a1a4:	add	x1, x1, #0x2f8
  40a1a8:	bl	402970 <dcgettext@plt>
  40a1ac:	ldr	x1, [x19, #1456]
  40a1b0:	bl	402980 <fputs_unlocked@plt>
  40a1b4:	mov	w2, #0x5                   	// #5
  40a1b8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a1bc:	mov	x0, #0x0                   	// #0
  40a1c0:	add	x1, x1, #0x460
  40a1c4:	bl	402970 <dcgettext@plt>
  40a1c8:	ldr	x1, [x19, #1456]
  40a1cc:	bl	402980 <fputs_unlocked@plt>
  40a1d0:	mov	w2, #0x5                   	// #5
  40a1d4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a1d8:	mov	x0, #0x0                   	// #0
  40a1dc:	add	x1, x1, #0x590
  40a1e0:	bl	402970 <dcgettext@plt>
  40a1e4:	ldr	x1, [x19, #1456]
  40a1e8:	bl	402980 <fputs_unlocked@plt>
  40a1ec:	mov	w2, #0x5                   	// #5
  40a1f0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a1f4:	mov	x0, #0x0                   	// #0
  40a1f8:	add	x1, x1, #0x7e0
  40a1fc:	bl	402970 <dcgettext@plt>
  40a200:	ldr	x1, [x19, #1456]
  40a204:	bl	402980 <fputs_unlocked@plt>
  40a208:	mov	w2, #0x5                   	// #5
  40a20c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a210:	mov	x0, #0x0                   	// #0
  40a214:	add	x1, x1, #0x8a8
  40a218:	bl	402970 <dcgettext@plt>
  40a21c:	ldr	x1, [x19, #1456]
  40a220:	bl	402980 <fputs_unlocked@plt>
  40a224:	mov	w2, #0x5                   	// #5
  40a228:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a22c:	mov	x0, #0x0                   	// #0
  40a230:	add	x1, x1, #0xab0
  40a234:	bl	402970 <dcgettext@plt>
  40a238:	ldr	x1, [x19, #1456]
  40a23c:	bl	402980 <fputs_unlocked@plt>
  40a240:	mov	w2, #0x5                   	// #5
  40a244:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a248:	mov	x0, #0x0                   	// #0
  40a24c:	add	x1, x1, #0xb00
  40a250:	bl	402970 <dcgettext@plt>
  40a254:	ldr	x1, [x19, #1456]
  40a258:	bl	402980 <fputs_unlocked@plt>
  40a25c:	mov	w2, #0x5                   	// #5
  40a260:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a264:	mov	x0, #0x0                   	// #0
  40a268:	add	x1, x1, #0xb90
  40a26c:	bl	402970 <dcgettext@plt>
  40a270:	ldr	x1, [x19, #1456]
  40a274:	bl	402980 <fputs_unlocked@plt>
  40a278:	mov	w2, #0x5                   	// #5
  40a27c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a280:	mov	x0, #0x0                   	// #0
  40a284:	add	x1, x1, #0xd08
  40a288:	bl	402970 <dcgettext@plt>
  40a28c:	ldr	x1, [x19, #1456]
  40a290:	bl	402980 <fputs_unlocked@plt>
  40a294:	mov	w2, #0x5                   	// #5
  40a298:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a29c:	mov	x0, #0x0                   	// #0
  40a2a0:	add	x1, x1, #0xe78
  40a2a4:	bl	402970 <dcgettext@plt>
  40a2a8:	ldr	x1, [x19, #1456]
  40a2ac:	bl	402980 <fputs_unlocked@plt>
  40a2b0:	mov	w2, #0x5                   	// #5
  40a2b4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a2b8:	mov	x0, #0x0                   	// #0
  40a2bc:	add	x1, x1, #0xea8
  40a2c0:	bl	402970 <dcgettext@plt>
  40a2c4:	ldr	x1, [x19, #1456]
  40a2c8:	bl	402980 <fputs_unlocked@plt>
  40a2cc:	mov	w2, #0x5                   	// #5
  40a2d0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a2d4:	mov	x0, #0x0                   	// #0
  40a2d8:	add	x1, x1, #0xee0
  40a2dc:	bl	402970 <dcgettext@plt>
  40a2e0:	ldr	x1, [x19, #1456]
  40a2e4:	bl	402980 <fputs_unlocked@plt>
  40a2e8:	mov	w2, #0x5                   	// #5
  40a2ec:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a2f0:	mov	x0, #0x0                   	// #0
  40a2f4:	add	x1, x1, #0xfb8
  40a2f8:	bl	402970 <dcgettext@plt>
  40a2fc:	ldr	x1, [x19, #1456]
  40a300:	bl	402980 <fputs_unlocked@plt>
  40a304:	mov	w2, #0x5                   	// #5
  40a308:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a30c:	mov	x0, #0x0                   	// #0
  40a310:	add	x1, x1, #0x130
  40a314:	bl	402970 <dcgettext@plt>
  40a318:	ldr	x1, [x19, #1456]
  40a31c:	bl	402980 <fputs_unlocked@plt>
  40a320:	mov	w2, #0x5                   	// #5
  40a324:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a328:	mov	x0, #0x0                   	// #0
  40a32c:	add	x1, x1, #0x250
  40a330:	bl	402970 <dcgettext@plt>
  40a334:	ldr	x1, [x19, #1456]
  40a338:	bl	402980 <fputs_unlocked@plt>
  40a33c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40a340:	ldr	w0, [x0, #1300]
  40a344:	cmp	w0, #0x1
  40a348:	b.eq	40a494 <__fxstatat@plt+0x7a44>  // b.none
  40a34c:	cmp	w0, #0x2
  40a350:	adrp	x21, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a354:	adrp	x0, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a358:	add	x21, x21, #0x510
  40a35c:	add	x0, x0, #0x518
  40a360:	csel	x21, x21, x0, eq  // eq = none
  40a364:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a368:	add	x2, x2, #0xf08
  40a36c:	add	x2, x2, #0x270
  40a370:	add	x22, sp, #0x40
  40a374:	ldr	x1, [x2]
  40a378:	ldr	x0, [x2, #8]
  40a37c:	stp	x1, x0, [sp, #64]
  40a380:	ldp	x4, x5, [x2, #16]
  40a384:	stp	x4, x5, [sp, #80]
  40a388:	ldp	x4, x5, [x2, #32]
  40a38c:	stp	x4, x5, [sp, #96]
  40a390:	ldp	x4, x5, [x2, #48]
  40a394:	stp	x4, x5, [sp, #112]
  40a398:	ldp	x4, x5, [x2, #64]
  40a39c:	stp	x4, x5, [sp, #128]
  40a3a0:	ldp	x4, x5, [x2, #80]
  40a3a4:	stp	x4, x5, [sp, #144]
  40a3a8:	ldp	x2, x3, [x2, #96]
  40a3ac:	stp	x2, x3, [sp, #160]
  40a3b0:	cbnz	x1, 40a3c0 <__fxstatat@plt+0x7970>
  40a3b4:	b	40a3cc <__fxstatat@plt+0x797c>
  40a3b8:	ldr	x1, [x22, #16]!
  40a3bc:	cbz	x1, 40a3cc <__fxstatat@plt+0x797c>
  40a3c0:	mov	x0, x21
  40a3c4:	bl	402800 <strcmp@plt>
  40a3c8:	cbnz	w0, 40a3b8 <__fxstatat@plt+0x7968>
  40a3cc:	ldr	x23, [x22, #8]
  40a3d0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a3d4:	mov	w2, #0x5                   	// #5
  40a3d8:	add	x1, x1, #0x2e8
  40a3dc:	mov	x0, #0x0                   	// #0
  40a3e0:	cbz	x23, 40a4c4 <__fxstatat@plt+0x7a74>
  40a3e4:	bl	402970 <dcgettext@plt>
  40a3e8:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a3ec:	add	x22, x22, #0x300
  40a3f0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a3f4:	mov	x3, x22
  40a3f8:	add	x2, x2, #0x328
  40a3fc:	mov	x1, x0
  40a400:	mov	w0, #0x1                   	// #1
  40a404:	bl	402670 <__printf_chk@plt>
  40a408:	mov	x1, #0x0                   	// #0
  40a40c:	mov	w0, #0x5                   	// #5
  40a410:	bl	402a40 <setlocale@plt>
  40a414:	cbz	x0, 40a42c <__fxstatat@plt+0x79dc>
  40a418:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a41c:	mov	x2, #0x3                   	// #3
  40a420:	add	x1, x1, #0x338
  40a424:	bl	402640 <strncmp@plt>
  40a428:	cbnz	w0, 40a4a4 <__fxstatat@plt+0x7a54>
  40a42c:	mov	w2, #0x5                   	// #5
  40a430:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a434:	mov	x0, #0x0                   	// #0
  40a438:	add	x1, x1, #0x388
  40a43c:	bl	402970 <dcgettext@plt>
  40a440:	mov	x1, x0
  40a444:	mov	x3, x21
  40a448:	mov	x2, x22
  40a44c:	mov	w0, #0x1                   	// #1
  40a450:	bl	402670 <__printf_chk@plt>
  40a454:	mov	w2, #0x5                   	// #5
  40a458:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a45c:	mov	x0, #0x0                   	// #0
  40a460:	add	x1, x1, #0x3a8
  40a464:	bl	402970 <dcgettext@plt>
  40a468:	mov	x1, x0
  40a46c:	cmp	x21, x23
  40a470:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40a474:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a478:	add	x2, x2, #0xf0
  40a47c:	add	x3, x3, #0x520
  40a480:	csel	x3, x3, x2, eq  // eq = none
  40a484:	mov	x2, x23
  40a488:	mov	w0, #0x1                   	// #1
  40a48c:	bl	402670 <__printf_chk@plt>
  40a490:	b	409fc0 <__fxstatat@plt+0x7570>
  40a494:	adrp	x21, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a498:	add	x21, x21, #0x508
  40a49c:	b	40a364 <__fxstatat@plt+0x7914>
  40a4a0:	mov	x23, x21
  40a4a4:	mov	w2, #0x5                   	// #5
  40a4a8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a4ac:	mov	x0, #0x0                   	// #0
  40a4b0:	add	x1, x1, #0x340
  40a4b4:	bl	402970 <dcgettext@plt>
  40a4b8:	ldr	x1, [x19, #1456]
  40a4bc:	bl	402980 <fputs_unlocked@plt>
  40a4c0:	b	40a42c <__fxstatat@plt+0x79dc>
  40a4c4:	bl	402970 <dcgettext@plt>
  40a4c8:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a4cc:	add	x22, x22, #0x300
  40a4d0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a4d4:	mov	x3, x22
  40a4d8:	add	x2, x2, #0x328
  40a4dc:	mov	x1, x0
  40a4e0:	mov	w0, #0x1                   	// #1
  40a4e4:	bl	402670 <__printf_chk@plt>
  40a4e8:	mov	x1, #0x0                   	// #0
  40a4ec:	mov	w0, #0x5                   	// #5
  40a4f0:	bl	402a40 <setlocale@plt>
  40a4f4:	cbz	x0, 40a55c <__fxstatat@plt+0x7b0c>
  40a4f8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a4fc:	mov	x2, #0x3                   	// #3
  40a500:	add	x1, x1, #0x338
  40a504:	bl	402640 <strncmp@plt>
  40a508:	cbnz	w0, 40a4a0 <__fxstatat@plt+0x7a50>
  40a50c:	mov	w2, #0x5                   	// #5
  40a510:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a514:	mov	x0, #0x0                   	// #0
  40a518:	add	x1, x1, #0x388
  40a51c:	bl	402970 <dcgettext@plt>
  40a520:	mov	x1, x0
  40a524:	mov	x2, x22
  40a528:	mov	x3, x21
  40a52c:	mov	w0, #0x1                   	// #1
  40a530:	bl	402670 <__printf_chk@plt>
  40a534:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a538:	add	x1, x1, #0x3a8
  40a53c:	mov	w2, #0x5                   	// #5
  40a540:	mov	x0, #0x0                   	// #0
  40a544:	bl	402970 <dcgettext@plt>
  40a548:	mov	x23, x21
  40a54c:	adrp	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  40a550:	mov	x1, x0
  40a554:	add	x3, x3, #0x520
  40a558:	b	40a484 <__fxstatat@plt+0x7a34>
  40a55c:	mov	w2, #0x5                   	// #5
  40a560:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a564:	add	x1, x1, #0x388
  40a568:	bl	402970 <dcgettext@plt>
  40a56c:	mov	x2, x22
  40a570:	mov	x1, x0
  40a574:	mov	x3, x21
  40a578:	mov	w0, #0x1                   	// #1
  40a57c:	bl	402670 <__printf_chk@plt>
  40a580:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40a584:	mov	w2, #0x5                   	// #5
  40a588:	add	x1, x1, #0x3a8
  40a58c:	mov	x0, #0x0                   	// #0
  40a590:	b	40a544 <__fxstatat@plt+0x7af4>
  40a594:	nop
  40a598:	stp	x29, x30, [sp, #-64]!
  40a59c:	cmp	x1, #0x401
  40a5a0:	mov	x29, sp
  40a5a4:	stp	x19, x20, [sp, #16]
  40a5a8:	mov	x19, #0x401                 	// #1025
  40a5ac:	csinc	x19, x19, x1, cs  // cs = hs, nlast
  40a5b0:	stp	x21, x22, [sp, #32]
  40a5b4:	mov	x22, x0
  40a5b8:	stp	x23, x24, [sp, #48]
  40a5bc:	mov	x23, #0x3fffffffffffffff    	// #4611686018427387903
  40a5c0:	mov	x24, #0x7ffffffffffffffe    	// #9223372036854775806
  40a5c4:	nop
  40a5c8:	mov	x0, x19
  40a5cc:	bl	4025f0 <malloc@plt>
  40a5d0:	mov	x20, x0
  40a5d4:	mov	x2, x19
  40a5d8:	mov	x0, x22
  40a5dc:	mov	x1, x20
  40a5e0:	cbz	x20, 40a628 <__fxstatat@plt+0x7bd8>
  40a5e4:	bl	4024d0 <readlink@plt>
  40a5e8:	mov	x21, x0
  40a5ec:	tbnz	x0, #63, 40a674 <__fxstatat@plt+0x7c24>
  40a5f0:	mov	x0, x20
  40a5f4:	cmp	x19, x21
  40a5f8:	b.hi	40a6a8 <__fxstatat@plt+0x7c58>  // b.pmore
  40a5fc:	bl	402840 <free@plt>
  40a600:	cmp	x19, x23
  40a604:	b.hi	40a640 <__fxstatat@plt+0x7bf0>  // b.pmore
  40a608:	lsl	x19, x19, #1
  40a60c:	mov	x0, x19
  40a610:	bl	4025f0 <malloc@plt>
  40a614:	mov	x20, x0
  40a618:	mov	x2, x19
  40a61c:	mov	x0, x22
  40a620:	mov	x1, x20
  40a624:	cbnz	x20, 40a5e4 <__fxstatat@plt+0x7b94>
  40a628:	mov	x0, x20
  40a62c:	ldp	x19, x20, [sp, #16]
  40a630:	ldp	x21, x22, [sp, #32]
  40a634:	ldp	x23, x24, [sp, #48]
  40a638:	ldp	x29, x30, [sp], #64
  40a63c:	ret
  40a640:	cmp	x19, x24
  40a644:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
  40a648:	b.ls	40a5c8 <__fxstatat@plt+0x7b78>  // b.plast
  40a64c:	bl	4029e0 <__errno_location@plt>
  40a650:	mov	x20, #0x0                   	// #0
  40a654:	mov	w1, #0xc                   	// #12
  40a658:	str	w1, [x0]
  40a65c:	mov	x0, x20
  40a660:	ldp	x19, x20, [sp, #16]
  40a664:	ldp	x21, x22, [sp, #32]
  40a668:	ldp	x23, x24, [sp, #48]
  40a66c:	ldp	x29, x30, [sp], #64
  40a670:	ret
  40a674:	bl	4029e0 <__errno_location@plt>
  40a678:	ldr	w0, [x0]
  40a67c:	cmp	w0, #0x22
  40a680:	b.eq	40a5f0 <__fxstatat@plt+0x7ba0>  // b.none
  40a684:	mov	x0, x20
  40a688:	mov	x20, #0x0                   	// #0
  40a68c:	bl	402840 <free@plt>
  40a690:	mov	x0, x20
  40a694:	ldp	x19, x20, [sp, #16]
  40a698:	ldp	x21, x22, [sp, #32]
  40a69c:	ldp	x23, x24, [sp, #48]
  40a6a0:	ldp	x29, x30, [sp], #64
  40a6a4:	ret
  40a6a8:	strb	wzr, [x20, x21]
  40a6ac:	mov	x0, x20
  40a6b0:	ldp	x19, x20, [sp, #16]
  40a6b4:	ldp	x21, x22, [sp, #32]
  40a6b8:	ldp	x23, x24, [sp, #48]
  40a6bc:	ldp	x29, x30, [sp], #64
  40a6c0:	ret
  40a6c4:	nop
  40a6c8:	mov	w0, #0x1                   	// #1
  40a6cc:	b	409f70 <__fxstatat@plt+0x7520>
  40a6d0:	stp	x29, x30, [sp, #-96]!
  40a6d4:	mov	x29, sp
  40a6d8:	stp	x23, x24, [sp, #48]
  40a6dc:	mov	x24, x1
  40a6e0:	stp	x21, x22, [sp, #32]
  40a6e4:	mov	x21, x3
  40a6e8:	stp	x25, x26, [sp, #64]
  40a6ec:	mov	x26, x2
  40a6f0:	mov	x25, x0
  40a6f4:	stp	x27, x28, [sp, #80]
  40a6f8:	bl	402430 <strlen@plt>
  40a6fc:	ldr	x28, [x24]
  40a700:	cbz	x28, 40a7f0 <__fxstatat@plt+0x7da0>
  40a704:	mov	x22, x0
  40a708:	mov	w27, #0x0                   	// #0
  40a70c:	mov	x23, #0xffffffffffffffff    	// #-1
  40a710:	stp	x19, x20, [sp, #16]
  40a714:	mov	x20, x26
  40a718:	mov	x19, #0x0                   	// #0
  40a71c:	b	40a740 <__fxstatat@plt+0x7cf0>
  40a720:	cbz	x26, 40a7c4 <__fxstatat@plt+0x7d74>
  40a724:	bl	4027a0 <memcmp@plt>
  40a728:	cmp	w0, #0x0
  40a72c:	csinc	w27, w27, wzr, eq  // eq = none
  40a730:	add	x19, x19, #0x1
  40a734:	add	x20, x20, x21
  40a738:	ldr	x28, [x24, x19, lsl #3]
  40a73c:	cbz	x28, 40a798 <__fxstatat@plt+0x7d48>
  40a740:	mov	x1, x25
  40a744:	mov	x2, x22
  40a748:	mov	x0, x28
  40a74c:	bl	402640 <strncmp@plt>
  40a750:	mov	w1, w0
  40a754:	mov	x0, x28
  40a758:	cbnz	w1, 40a730 <__fxstatat@plt+0x7ce0>
  40a75c:	bl	402430 <strlen@plt>
  40a760:	mov	x3, x0
  40a764:	mov	x2, x21
  40a768:	madd	x0, x23, x21, x26
  40a76c:	mov	x1, x20
  40a770:	cmp	x3, x22
  40a774:	b.eq	40a7cc <__fxstatat@plt+0x7d7c>  // b.none
  40a778:	cmn	x23, #0x1
  40a77c:	b.ne	40a720 <__fxstatat@plt+0x7cd0>  // b.any
  40a780:	mov	x23, x19
  40a784:	add	x19, x19, #0x1
  40a788:	add	x20, x20, x21
  40a78c:	ldr	x28, [x24, x19, lsl #3]
  40a790:	cbnz	x28, 40a740 <__fxstatat@plt+0x7cf0>
  40a794:	nop
  40a798:	ldp	x19, x20, [sp, #16]
  40a79c:	cmp	w27, #0x0
  40a7a0:	mov	x0, #0xfffffffffffffffe    	// #-2
  40a7a4:	csel	x23, x23, x0, eq  // eq = none
  40a7a8:	mov	x0, x23
  40a7ac:	ldp	x21, x22, [sp, #32]
  40a7b0:	ldp	x23, x24, [sp, #48]
  40a7b4:	ldp	x25, x26, [sp, #64]
  40a7b8:	ldp	x27, x28, [sp, #80]
  40a7bc:	ldp	x29, x30, [sp], #96
  40a7c0:	ret
  40a7c4:	mov	w27, #0x1                   	// #1
  40a7c8:	b	40a730 <__fxstatat@plt+0x7ce0>
  40a7cc:	mov	x23, x19
  40a7d0:	mov	x0, x23
  40a7d4:	ldp	x19, x20, [sp, #16]
  40a7d8:	ldp	x21, x22, [sp, #32]
  40a7dc:	ldp	x23, x24, [sp, #48]
  40a7e0:	ldp	x25, x26, [sp, #64]
  40a7e4:	ldp	x27, x28, [sp, #80]
  40a7e8:	ldp	x29, x30, [sp], #96
  40a7ec:	ret
  40a7f0:	mov	x23, #0xffffffffffffffff    	// #-1
  40a7f4:	b	40a7a8 <__fxstatat@plt+0x7d58>
  40a7f8:	stp	x29, x30, [sp, #-48]!
  40a7fc:	cmn	x2, #0x1
  40a800:	mov	x29, sp
  40a804:	stp	x19, x20, [sp, #16]
  40a808:	mov	x20, x0
  40a80c:	str	x21, [sp, #32]
  40a810:	mov	x21, x1
  40a814:	b.eq	40a874 <__fxstatat@plt+0x7e24>  // b.none
  40a818:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40a81c:	mov	w2, #0x5                   	// #5
  40a820:	add	x1, x1, #0xb18
  40a824:	mov	x0, #0x0                   	// #0
  40a828:	bl	402970 <dcgettext@plt>
  40a82c:	mov	x19, x0
  40a830:	mov	x2, x21
  40a834:	mov	w1, #0x8                   	// #8
  40a838:	mov	w0, #0x0                   	// #0
  40a83c:	bl	4114a0 <__fxstatat@plt+0xea50>
  40a840:	mov	x1, x20
  40a844:	mov	x20, x0
  40a848:	mov	w0, #0x1                   	// #1
  40a84c:	bl	411760 <__fxstatat@plt+0xed10>
  40a850:	mov	x3, x20
  40a854:	mov	x2, x19
  40a858:	ldp	x19, x20, [sp, #16]
  40a85c:	mov	x4, x0
  40a860:	ldr	x21, [sp, #32]
  40a864:	mov	w1, #0x0                   	// #0
  40a868:	ldp	x29, x30, [sp], #48
  40a86c:	mov	w0, #0x0                   	// #0
  40a870:	b	402490 <error@plt>
  40a874:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40a878:	mov	w2, #0x5                   	// #5
  40a87c:	add	x1, x1, #0xaf8
  40a880:	mov	x0, #0x0                   	// #0
  40a884:	bl	402970 <dcgettext@plt>
  40a888:	mov	x19, x0
  40a88c:	b	40a830 <__fxstatat@plt+0x7de0>
  40a890:	stp	x29, x30, [sp, #-112]!
  40a894:	mov	x29, sp
  40a898:	stp	x27, x28, [sp, #80]
  40a89c:	adrp	x28, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40a8a0:	stp	x19, x20, [sp, #16]
  40a8a4:	mov	x20, x1
  40a8a8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40a8ac:	add	x1, x1, #0xb38
  40a8b0:	stp	x21, x22, [sp, #32]
  40a8b4:	mov	x22, x2
  40a8b8:	mov	w2, #0x5                   	// #5
  40a8bc:	stp	x23, x24, [sp, #48]
  40a8c0:	mov	x24, x0
  40a8c4:	mov	x0, #0x0                   	// #0
  40a8c8:	bl	402970 <dcgettext@plt>
  40a8cc:	ldr	x1, [x28, #1432]
  40a8d0:	bl	402980 <fputs_unlocked@plt>
  40a8d4:	ldr	x21, [x24]
  40a8d8:	cbz	x21, 40a950 <__fxstatat@plt+0x7f00>
  40a8dc:	adrp	x27, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40a8e0:	add	x27, x27, #0xb58
  40a8e4:	stp	x25, x26, [sp, #64]
  40a8e8:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40a8ec:	add	x25, x28, #0x598
  40a8f0:	add	x26, x26, #0xb50
  40a8f4:	mov	x23, #0x0                   	// #0
  40a8f8:	mov	x19, #0x0                   	// #0
  40a8fc:	nop
  40a900:	cbz	x19, 40a918 <__fxstatat@plt+0x7ec8>
  40a904:	mov	x2, x22
  40a908:	mov	x1, x20
  40a90c:	mov	x0, x23
  40a910:	bl	4027a0 <memcmp@plt>
  40a914:	cbz	w0, 40a988 <__fxstatat@plt+0x7f38>
  40a918:	ldr	x23, [x25]
  40a91c:	mov	x0, x21
  40a920:	bl	411778 <__fxstatat@plt+0xed28>
  40a924:	mov	x3, x0
  40a928:	mov	x2, x26
  40a92c:	mov	x0, x23
  40a930:	mov	w1, #0x1                   	// #1
  40a934:	mov	x23, x20
  40a938:	bl	4027e0 <__fprintf_chk@plt>
  40a93c:	add	x19, x19, #0x1
  40a940:	add	x20, x20, x22
  40a944:	ldr	x21, [x24, x19, lsl #3]
  40a948:	cbnz	x21, 40a900 <__fxstatat@plt+0x7eb0>
  40a94c:	ldp	x25, x26, [sp, #64]
  40a950:	ldr	x0, [x28, #1432]
  40a954:	ldp	x1, x2, [x0, #40]
  40a958:	cmp	x1, x2
  40a95c:	b.cs	40a9b4 <__fxstatat@plt+0x7f64>  // b.hs, b.nlast
  40a960:	add	x2, x1, #0x1
  40a964:	str	x2, [x0, #40]
  40a968:	mov	w0, #0xa                   	// #10
  40a96c:	strb	w0, [x1]
  40a970:	ldp	x19, x20, [sp, #16]
  40a974:	ldp	x21, x22, [sp, #32]
  40a978:	ldp	x23, x24, [sp, #48]
  40a97c:	ldp	x27, x28, [sp, #80]
  40a980:	ldp	x29, x30, [sp], #112
  40a984:	ret
  40a988:	ldr	x1, [x25]
  40a98c:	mov	x0, x21
  40a990:	str	x1, [sp, #104]
  40a994:	bl	411778 <__fxstatat@plt+0xed28>
  40a998:	mov	x3, x0
  40a99c:	ldr	x1, [sp, #104]
  40a9a0:	mov	x2, x27
  40a9a4:	mov	x0, x1
  40a9a8:	mov	w1, #0x1                   	// #1
  40a9ac:	bl	4027e0 <__fprintf_chk@plt>
  40a9b0:	b	40a93c <__fxstatat@plt+0x7eec>
  40a9b4:	ldp	x19, x20, [sp, #16]
  40a9b8:	mov	w1, #0xa                   	// #10
  40a9bc:	ldp	x21, x22, [sp, #32]
  40a9c0:	ldp	x23, x24, [sp, #48]
  40a9c4:	ldp	x27, x28, [sp, #80]
  40a9c8:	ldp	x29, x30, [sp], #112
  40a9cc:	b	402780 <__overflow@plt>
  40a9d0:	stp	x29, x30, [sp, #-64]!
  40a9d4:	mov	x29, sp
  40a9d8:	stp	x19, x20, [sp, #16]
  40a9dc:	mov	x19, x2
  40a9e0:	mov	x20, x3
  40a9e4:	stp	x21, x22, [sp, #32]
  40a9e8:	mov	x22, x1
  40a9ec:	mov	x21, x4
  40a9f0:	mov	x3, x4
  40a9f4:	mov	x2, x20
  40a9f8:	mov	x1, x19
  40a9fc:	stp	x23, x24, [sp, #48]
  40aa00:	mov	x24, x0
  40aa04:	mov	x23, x5
  40aa08:	mov	x0, x22
  40aa0c:	bl	40a6d0 <__fxstatat@plt+0x7c80>
  40aa10:	tbnz	x0, #63, 40aa28 <__fxstatat@plt+0x7fd8>
  40aa14:	ldp	x19, x20, [sp, #16]
  40aa18:	ldp	x21, x22, [sp, #32]
  40aa1c:	ldp	x23, x24, [sp, #48]
  40aa20:	ldp	x29, x30, [sp], #64
  40aa24:	ret
  40aa28:	mov	x2, x0
  40aa2c:	mov	x1, x22
  40aa30:	mov	x0, x24
  40aa34:	bl	40a7f8 <__fxstatat@plt+0x7da8>
  40aa38:	mov	x0, x19
  40aa3c:	mov	x2, x21
  40aa40:	mov	x1, x20
  40aa44:	bl	40a890 <__fxstatat@plt+0x7e40>
  40aa48:	blr	x23
  40aa4c:	mov	x0, #0xffffffffffffffff    	// #-1
  40aa50:	b	40aa14 <__fxstatat@plt+0x7fc4>
  40aa54:	nop
  40aa58:	stp	x29, x30, [sp, #-64]!
  40aa5c:	mov	x29, sp
  40aa60:	stp	x21, x22, [sp, #32]
  40aa64:	ldr	x22, [x1]
  40aa68:	cbz	x22, 40aab0 <__fxstatat@plt+0x8060>
  40aa6c:	mov	x21, x3
  40aa70:	stp	x19, x20, [sp, #16]
  40aa74:	mov	x19, x2
  40aa78:	add	x20, x1, #0x8
  40aa7c:	str	x23, [sp, #48]
  40aa80:	mov	x23, x0
  40aa84:	b	40aa94 <__fxstatat@plt+0x8044>
  40aa88:	ldr	x22, [x20], #8
  40aa8c:	add	x19, x19, x21
  40aa90:	cbz	x22, 40aaa8 <__fxstatat@plt+0x8058>
  40aa94:	mov	x2, x21
  40aa98:	mov	x1, x19
  40aa9c:	mov	x0, x23
  40aaa0:	bl	4027a0 <memcmp@plt>
  40aaa4:	cbnz	w0, 40aa88 <__fxstatat@plt+0x8038>
  40aaa8:	ldp	x19, x20, [sp, #16]
  40aaac:	ldr	x23, [sp, #48]
  40aab0:	mov	x0, x22
  40aab4:	ldp	x21, x22, [sp, #32]
  40aab8:	ldp	x29, x30, [sp], #64
  40aabc:	ret
  40aac0:	cmp	x2, #0x0
  40aac4:	ccmp	x0, x1, #0x4, ne  // ne = any
  40aac8:	b.eq	40ab30 <__fxstatat@plt+0x80e0>  // b.none
  40aacc:	sub	x7, x2, #0x1
  40aad0:	mov	x2, #0x0                   	// #0
  40aad4:	b	40aae8 <__fxstatat@plt+0x8098>
  40aad8:	cbz	w5, 40ab28 <__fxstatat@plt+0x80d8>
  40aadc:	add	x2, x2, #0x1
  40aae0:	cmp	w4, w3
  40aae4:	b.ne	40ab28 <__fxstatat@plt+0x80d8>  // b.any
  40aae8:	ldrb	w4, [x0, x2]
  40aaec:	sub	w3, w4, #0x41
  40aaf0:	mov	w5, w4
  40aaf4:	cmp	w3, #0x19
  40aaf8:	b.hi	40ab04 <__fxstatat@plt+0x80b4>  // b.pmore
  40aafc:	add	w5, w4, #0x20
  40ab00:	and	w4, w5, #0xff
  40ab04:	ldrb	w3, [x1, x2]
  40ab08:	sub	w8, w3, #0x41
  40ab0c:	mov	w6, w3
  40ab10:	cmp	w8, #0x19
  40ab14:	b.hi	40ab20 <__fxstatat@plt+0x80d0>  // b.pmore
  40ab18:	add	w6, w3, #0x20
  40ab1c:	and	w3, w6, #0xff
  40ab20:	cmp	x2, x7
  40ab24:	b.ne	40aad8 <__fxstatat@plt+0x8088>  // b.any
  40ab28:	sub	w0, w5, w6
  40ab2c:	ret
  40ab30:	mov	w0, #0x0                   	// #0
  40ab34:	ret
  40ab38:	stp	x29, x30, [sp, #-272]!
  40ab3c:	mov	x29, sp
  40ab40:	stp	x19, x20, [sp, #16]
  40ab44:	stp	x21, x22, [sp, #32]
  40ab48:	and	w21, w1, #0x3
  40ab4c:	stp	x25, x26, [sp, #64]
  40ab50:	mov	x25, x0
  40ab54:	sub	w0, w21, #0x1
  40ab58:	tst	w0, w21
  40ab5c:	b.ne	40af54 <__fxstatat@plt+0x8504>  // b.any
  40ab60:	cbz	x25, 40af54 <__fxstatat@plt+0x8504>
  40ab64:	stp	x23, x24, [sp, #48]
  40ab68:	ldrb	w23, [x25]
  40ab6c:	cbz	w23, 40afe4 <__fxstatat@plt+0x8594>
  40ab70:	stp	x27, x28, [sp, #80]
  40ab74:	mov	w22, w1
  40ab78:	cmp	w23, #0x2f
  40ab7c:	b.eq	40ad8c <__fxstatat@plt+0x833c>  // b.none
  40ab80:	bl	412260 <__fxstatat@plt+0xf810>
  40ab84:	mov	x19, x0
  40ab88:	cbz	x0, 40b02c <__fxstatat@plt+0x85dc>
  40ab8c:	bl	402430 <strlen@plt>
  40ab90:	mov	x28, x0
  40ab94:	cmp	x0, #0xfff
  40ab98:	b.ls	40b010 <__fxstatat@plt+0x85c0>  // b.plast
  40ab9c:	add	x28, x19, x0
  40aba0:	mov	x20, x28
  40aba4:	ldrb	w3, [x25]
  40aba8:	cbz	w3, 40b0c4 <__fxstatat@plt+0x8674>
  40abac:	and	w22, w22, #0x4
  40abb0:	adrp	x26, 40c000 <__fxstatat@plt+0x95b0>
  40abb4:	adrp	x0, 40c000 <__fxstatat@plt+0x95b0>
  40abb8:	add	x1, x26, #0xc90
  40abbc:	add	x0, x0, #0xc38
  40abc0:	mov	x23, #0x0                   	// #0
  40abc4:	stp	x25, xzr, [sp, #104]
  40abc8:	stp	xzr, x1, [sp, #120]
  40abcc:	str	x0, [sp, #136]
  40abd0:	mov	w0, w3
  40abd4:	cmp	w3, #0x2f
  40abd8:	b.ne	40abf0 <__fxstatat@plt+0x81a0>  // b.any
  40abdc:	nop
  40abe0:	ldrb	w0, [x25, #1]!
  40abe4:	cmp	w0, #0x2f
  40abe8:	b.eq	40abe0 <__fxstatat@plt+0x8190>  // b.none
  40abec:	cbz	w0, 40ad00 <__fxstatat@plt+0x82b0>
  40abf0:	mov	x26, x25
  40abf4:	nop
  40abf8:	mov	x27, x26
  40abfc:	ldrb	w3, [x26, #1]!
  40ac00:	cmp	w3, #0x2f
  40ac04:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  40ac08:	b.ne	40abf8 <__fxstatat@plt+0x81a8>  // b.any
  40ac0c:	cmp	x26, x25
  40ac10:	b.eq	40ad00 <__fxstatat@plt+0x82b0>  // b.none
  40ac14:	sub	x24, x26, x25
  40ac18:	cmp	x24, #0x1
  40ac1c:	b.eq	40add4 <__fxstatat@plt+0x8384>  // b.none
  40ac20:	cmp	w0, #0x2e
  40ac24:	ccmp	x24, #0x2, #0x0, eq  // eq = none
  40ac28:	b.eq	40af0c <__fxstatat@plt+0x84bc>  // b.none
  40ac2c:	ldurb	w0, [x28, #-1]
  40ac30:	cmp	w0, #0x2f
  40ac34:	b.eq	40ac48 <__fxstatat@plt+0x81f8>  // b.none
  40ac38:	mov	x6, x28
  40ac3c:	mov	w0, #0x2f                  	// #47
  40ac40:	strb	w0, [x6], #1
  40ac44:	mov	x28, x6
  40ac48:	add	x0, x28, x24
  40ac4c:	cmp	x20, x0
  40ac50:	b.hi	40ac84 <__fxstatat@plt+0x8234>  // b.pmore
  40ac54:	sub	x1, x20, x19
  40ac58:	cmp	x24, #0x1, lsl #12
  40ac5c:	add	x20, x24, x1
  40ac60:	add	x1, x1, #0x1, lsl #12
  40ac64:	csinc	x20, x1, x20, lt  // lt = tstop
  40ac68:	mov	x0, x19
  40ac6c:	mov	x1, x20
  40ac70:	bl	411ed8 <__fxstatat@plt+0xf488>
  40ac74:	sub	x6, x28, x19
  40ac78:	add	x20, x0, x20
  40ac7c:	mov	x19, x0
  40ac80:	add	x28, x0, x6
  40ac84:	mov	x0, x28
  40ac88:	mov	x1, x25
  40ac8c:	mov	x2, x24
  40ac90:	bl	4023c0 <memcpy@plt>
  40ac94:	strb	wzr, [x0, x24]
  40ac98:	cmp	w22, #0x0
  40ac9c:	ccmp	w21, #0x2, #0x0, ne  // ne = any
  40aca0:	add	x28, x0, x24
  40aca4:	b.eq	40ace0 <__fxstatat@plt+0x8290>  // b.none
  40aca8:	add	x2, sp, #0x90
  40acac:	mov	x1, x19
  40acb0:	mov	w0, #0x0                   	// #0
  40acb4:	cbz	w22, 40ade8 <__fxstatat@plt+0x8398>
  40acb8:	bl	402a00 <__xstat@plt>
  40acbc:	cmp	w0, #0x0
  40acc0:	cset	w0, ne  // ne = any
  40acc4:	cbz	w0, 40adb8 <__fxstatat@plt+0x8368>
  40acc8:	bl	4029e0 <__errno_location@plt>
  40accc:	ldr	w24, [x0]
  40acd0:	mov	x25, x0
  40acd4:	cbz	w21, 40afac <__fxstatat@plt+0x855c>
  40acd8:	cmp	w21, #0x1
  40acdc:	b.eq	40ad5c <__fxstatat@plt+0x830c>  // b.none
  40ace0:	str	wzr, [sp, #160]
  40ace4:	ldrb	w0, [x26]
  40ace8:	cmp	w0, #0x0
  40acec:	ccmp	w21, #0x2, #0x4, ne  // ne = any
  40acf0:	b.ne	40afa0 <__fxstatat@plt+0x8550>  // b.any
  40acf4:	ldrb	w3, [x26]
  40acf8:	mov	x25, x26
  40acfc:	cbnz	w3, 40abd0 <__fxstatat@plt+0x8180>
  40ad00:	add	x0, x19, #0x1
  40ad04:	cmp	x28, x0
  40ad08:	b.ls	40ad18 <__fxstatat@plt+0x82c8>  // b.plast
  40ad0c:	ldurb	w0, [x28, #-1]
  40ad10:	cmp	w0, #0x2f
  40ad14:	b.eq	40b078 <__fxstatat@plt+0x8628>  // b.none
  40ad18:	add	x0, x28, #0x1
  40ad1c:	strb	wzr, [x28]
  40ad20:	cmp	x0, x20
  40ad24:	b.eq	40ad3c <__fxstatat@plt+0x82ec>  // b.none
  40ad28:	sub	x1, x28, x19
  40ad2c:	mov	x0, x19
  40ad30:	add	x1, x1, #0x1
  40ad34:	bl	411ed8 <__fxstatat@plt+0xf488>
  40ad38:	mov	x19, x0
  40ad3c:	ldr	x0, [sp, #112]
  40ad40:	bl	402840 <free@plt>
  40ad44:	cbz	x23, 40b02c <__fxstatat@plt+0x85dc>
  40ad48:	mov	x0, x23
  40ad4c:	bl	40c6a8 <__fxstatat@plt+0x9c58>
  40ad50:	ldp	x23, x24, [sp, #48]
  40ad54:	ldp	x27, x28, [sp, #80]
  40ad58:	b	40aef4 <__fxstatat@plt+0x84a4>
  40ad5c:	mov	x0, x26
  40ad60:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40ad64:	add	x1, x1, #0x7b8
  40ad68:	bl	402870 <strspn@plt>
  40ad6c:	ldrb	w0, [x26, x0]
  40ad70:	cmp	w0, #0x0
  40ad74:	ccmp	w24, #0x2, #0x0, eq  // eq = none
  40ad78:	b.ne	40afac <__fxstatat@plt+0x855c>  // b.any
  40ad7c:	ldrb	w3, [x27, #1]
  40ad80:	mov	x25, x26
  40ad84:	cbnz	w3, 40abd0 <__fxstatat@plt+0x8180>
  40ad88:	b	40ad00 <__fxstatat@plt+0x82b0>
  40ad8c:	mov	x0, #0x1000                	// #4096
  40ad90:	bl	411e78 <__fxstatat@plt+0xf428>
  40ad94:	mov	x28, x0
  40ad98:	ldrb	w3, [x25]
  40ad9c:	mov	x19, x0
  40ada0:	add	x20, x0, #0x1, lsl #12
  40ada4:	strb	w23, [x28], #1
  40ada8:	cbnz	w3, 40abac <__fxstatat@plt+0x815c>
  40adac:	mov	x23, #0x0                   	// #0
  40adb0:	str	xzr, [sp, #112]
  40adb4:	b	40ad18 <__fxstatat@plt+0x82c8>
  40adb8:	ldr	w0, [sp, #160]
  40adbc:	and	w0, w0, #0xf000
  40adc0:	cmp	w0, #0xa, lsl #12
  40adc4:	b.eq	40adf8 <__fxstatat@plt+0x83a8>  // b.none
  40adc8:	cmp	w0, #0x4, lsl #12
  40adcc:	b.eq	40acf4 <__fxstatat@plt+0x82a4>  // b.none
  40add0:	b	40ace4 <__fxstatat@plt+0x8294>
  40add4:	cmp	w0, #0x2e
  40add8:	b.ne	40ac2c <__fxstatat@plt+0x81dc>  // b.any
  40addc:	mov	x25, x26
  40ade0:	cbnz	w3, 40abd0 <__fxstatat@plt+0x8180>
  40ade4:	b	40ad00 <__fxstatat@plt+0x82b0>
  40ade8:	bl	402900 <__lxstat@plt>
  40adec:	cmp	w0, #0x0
  40adf0:	cset	w0, ne  // ne = any
  40adf4:	b	40acc4 <__fxstatat@plt+0x8274>
  40adf8:	cbz	x23, 40af7c <__fxstatat@plt+0x852c>
  40adfc:	ldr	x1, [sp, #104]
  40ae00:	add	x2, sp, #0x90
  40ae04:	mov	x0, x23
  40ae08:	bl	40b490 <__fxstatat@plt+0x8a40>
  40ae0c:	tst	w0, #0xff
  40ae10:	b.ne	40aeb8 <__fxstatat@plt+0x8468>  // b.any
  40ae14:	ldr	x1, [sp, #104]
  40ae18:	add	x2, sp, #0x90
  40ae1c:	mov	x0, x23
  40ae20:	bl	40b408 <__fxstatat@plt+0x89b8>
  40ae24:	ldr	x1, [sp, #192]
  40ae28:	mov	x0, x19
  40ae2c:	bl	40a598 <__fxstatat@plt+0x7b48>
  40ae30:	mov	x25, x0
  40ae34:	cbz	x0, 40b04c <__fxstatat@plt+0x85fc>
  40ae38:	bl	402430 <strlen@plt>
  40ae3c:	mov	x24, x0
  40ae40:	mov	x0, x26
  40ae44:	bl	402430 <strlen@plt>
  40ae48:	mov	x27, x0
  40ae4c:	add	x1, x24, x0
  40ae50:	ldr	x0, [sp, #120]
  40ae54:	cbz	x0, 40afc4 <__fxstatat@plt+0x8574>
  40ae58:	ldr	x0, [sp, #120]
  40ae5c:	add	x1, x1, #0x1
  40ae60:	cmp	x1, x0
  40ae64:	b.hi	40b084 <__fxstatat@plt+0x8634>  // b.pmore
  40ae68:	mov	x1, x26
  40ae6c:	add	x2, x27, #0x1
  40ae70:	ldr	x26, [sp, #112]
  40ae74:	add	x0, x26, x24
  40ae78:	bl	4023d0 <memmove@plt>
  40ae7c:	mov	x1, x25
  40ae80:	mov	x2, x24
  40ae84:	mov	x0, x26
  40ae88:	bl	4023c0 <memcpy@plt>
  40ae8c:	ldrb	w1, [x25]
  40ae90:	str	x0, [sp, #104]
  40ae94:	add	x0, x19, #0x1
  40ae98:	cmp	w1, #0x2f
  40ae9c:	b.eq	40b06c <__fxstatat@plt+0x861c>  // b.none
  40aea0:	cmp	x28, x0
  40aea4:	b.hi	40b09c <__fxstatat@plt+0x864c>  // b.pmore
  40aea8:	mov	x0, x25
  40aeac:	ldr	x26, [sp, #104]
  40aeb0:	bl	402840 <free@plt>
  40aeb4:	b	40acf4 <__fxstatat@plt+0x82a4>
  40aeb8:	cmp	w21, #0x2
  40aebc:	b.eq	40ad7c <__fxstatat@plt+0x832c>  // b.none
  40aec0:	bl	4029e0 <__errno_location@plt>
  40aec4:	mov	x25, x0
  40aec8:	mov	w24, #0x28                  	// #40
  40aecc:	ldr	x0, [sp, #112]
  40aed0:	bl	402840 <free@plt>
  40aed4:	mov	x0, x19
  40aed8:	bl	402840 <free@plt>
  40aedc:	mov	x0, x23
  40aee0:	bl	40c6a8 <__fxstatat@plt+0x9c58>
  40aee4:	ldp	x27, x28, [sp, #80]
  40aee8:	str	w24, [x25]
  40aeec:	ldp	x23, x24, [sp, #48]
  40aef0:	mov	x19, #0x0                   	// #0
  40aef4:	mov	x0, x19
  40aef8:	ldp	x19, x20, [sp, #16]
  40aefc:	ldp	x21, x22, [sp, #32]
  40af00:	ldp	x25, x26, [sp, #64]
  40af04:	ldp	x29, x30, [sp], #272
  40af08:	ret
  40af0c:	ldrb	w0, [x25, #1]
  40af10:	cmp	w0, #0x2e
  40af14:	b.ne	40ac2c <__fxstatat@plt+0x81dc>  // b.any
  40af18:	add	x0, x19, #0x1
  40af1c:	mov	x25, x26
  40af20:	cmp	x28, x0
  40af24:	b.ls	40acfc <__fxstatat@plt+0x82ac>  // b.plast
  40af28:	sub	x28, x28, #0x1
  40af2c:	cmp	x28, x19
  40af30:	b.ls	40acfc <__fxstatat@plt+0x82ac>  // b.plast
  40af34:	ldurb	w0, [x28, #-1]
  40af38:	cmp	w0, #0x2f
  40af3c:	b.eq	40addc <__fxstatat@plt+0x838c>  // b.none
  40af40:	sub	x28, x28, #0x1
  40af44:	cmp	x28, x19
  40af48:	b.ne	40af34 <__fxstatat@plt+0x84e4>  // b.any
  40af4c:	mov	x25, x26
  40af50:	b	40ade0 <__fxstatat@plt+0x8390>
  40af54:	bl	4029e0 <__errno_location@plt>
  40af58:	mov	x19, #0x0                   	// #0
  40af5c:	mov	w1, #0x16                  	// #22
  40af60:	str	w1, [x0]
  40af64:	mov	x0, x19
  40af68:	ldp	x19, x20, [sp, #16]
  40af6c:	ldp	x21, x22, [sp, #32]
  40af70:	ldp	x25, x26, [sp, #64]
  40af74:	ldp	x29, x30, [sp], #272
  40af78:	ret
  40af7c:	ldp	x4, x3, [sp, #128]
  40af80:	adrp	x2, 40c000 <__fxstatat@plt+0x95b0>
  40af84:	mov	x1, #0x0                   	// #0
  40af88:	add	x2, x2, #0xbb0
  40af8c:	mov	x0, #0x7                   	// #7
  40af90:	bl	40c510 <__fxstatat@plt+0x9ac0>
  40af94:	mov	x23, x0
  40af98:	cbnz	x0, 40adfc <__fxstatat@plt+0x83ac>
  40af9c:	bl	4120d0 <__fxstatat@plt+0xf680>
  40afa0:	bl	4029e0 <__errno_location@plt>
  40afa4:	mov	x25, x0
  40afa8:	mov	w24, #0x14                  	// #20
  40afac:	ldr	x0, [sp, #112]
  40afb0:	bl	402840 <free@plt>
  40afb4:	mov	x0, x19
  40afb8:	bl	402840 <free@plt>
  40afbc:	cbz	x23, 40aee4 <__fxstatat@plt+0x8494>
  40afc0:	b	40aedc <__fxstatat@plt+0x848c>
  40afc4:	add	x1, x1, #0x1
  40afc8:	mov	x0, #0x1000                	// #4096
  40afcc:	cmp	x1, x0
  40afd0:	csel	x0, x1, x0, cs  // cs = hs, nlast
  40afd4:	str	x0, [sp, #120]
  40afd8:	bl	411e78 <__fxstatat@plt+0xf428>
  40afdc:	str	x0, [sp, #112]
  40afe0:	b	40ae68 <__fxstatat@plt+0x8418>
  40afe4:	bl	4029e0 <__errno_location@plt>
  40afe8:	mov	x19, #0x0                   	// #0
  40afec:	mov	w1, #0x2                   	// #2
  40aff0:	ldp	x23, x24, [sp, #48]
  40aff4:	str	w1, [x0]
  40aff8:	mov	x0, x19
  40affc:	ldp	x19, x20, [sp, #16]
  40b000:	ldp	x21, x22, [sp, #32]
  40b004:	ldp	x25, x26, [sp, #64]
  40b008:	ldp	x29, x30, [sp], #272
  40b00c:	ret
  40b010:	mov	x0, x19
  40b014:	mov	x1, #0x1000                	// #4096
  40b018:	bl	411ed8 <__fxstatat@plt+0xf488>
  40b01c:	mov	x19, x0
  40b020:	add	x28, x0, x28
  40b024:	add	x20, x0, #0x1, lsl #12
  40b028:	b	40aba4 <__fxstatat@plt+0x8154>
  40b02c:	mov	x0, x19
  40b030:	ldp	x19, x20, [sp, #16]
  40b034:	ldp	x21, x22, [sp, #32]
  40b038:	ldp	x23, x24, [sp, #48]
  40b03c:	ldp	x25, x26, [sp, #64]
  40b040:	ldp	x27, x28, [sp, #80]
  40b044:	ldp	x29, x30, [sp], #272
  40b048:	ret
  40b04c:	bl	4029e0 <__errno_location@plt>
  40b050:	ldr	w24, [x0]
  40b054:	mov	x25, x0
  40b058:	cmp	w21, #0x2
  40b05c:	b.ne	40aecc <__fxstatat@plt+0x847c>  // b.any
  40b060:	cmp	w24, #0xc
  40b064:	b.ne	40ad7c <__fxstatat@plt+0x832c>  // b.any
  40b068:	b	40aecc <__fxstatat@plt+0x847c>
  40b06c:	mov	x28, x0
  40b070:	strb	w1, [x19]
  40b074:	b	40aea8 <__fxstatat@plt+0x8458>
  40b078:	mov	x0, x28
  40b07c:	sub	x28, x28, #0x1
  40b080:	b	40ad1c <__fxstatat@plt+0x82cc>
  40b084:	ldr	x0, [sp, #112]
  40b088:	str	x1, [sp, #104]
  40b08c:	bl	411ed8 <__fxstatat@plt+0xf488>
  40b090:	ldr	x1, [sp, #104]
  40b094:	stp	x0, x1, [sp, #112]
  40b098:	b	40ae68 <__fxstatat@plt+0x8418>
  40b09c:	sub	x28, x28, #0x1
  40b0a0:	cmp	x19, x28
  40b0a4:	b.cs	40aea8 <__fxstatat@plt+0x8458>  // b.hs, b.nlast
  40b0a8:	ldurb	w0, [x28, #-1]
  40b0ac:	cmp	w0, #0x2f
  40b0b0:	b.eq	40aea8 <__fxstatat@plt+0x8458>  // b.none
  40b0b4:	sub	x28, x28, #0x1
  40b0b8:	cmp	x19, x28
  40b0bc:	b.ne	40b0a8 <__fxstatat@plt+0x8658>  // b.any
  40b0c0:	b	40aea8 <__fxstatat@plt+0x8458>
  40b0c4:	mov	x23, #0x0                   	// #0
  40b0c8:	str	xzr, [sp, #112]
  40b0cc:	b	40ad00 <__fxstatat@plt+0x82b0>
  40b0d0:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40b0d4:	str	x0, [x1, #1824]
  40b0d8:	ret
  40b0dc:	nop
  40b0e0:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40b0e4:	strb	w0, [x1, #1832]
  40b0e8:	ret
  40b0ec:	nop
  40b0f0:	stp	x29, x30, [sp, #-48]!
  40b0f4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40b0f8:	mov	x29, sp
  40b0fc:	ldr	x0, [x0, #1456]
  40b100:	bl	413990 <_obstack_memory_used@@Base+0x670>
  40b104:	cbz	w0, 40b13c <__fxstatat@plt+0x86ec>
  40b108:	stp	x19, x20, [sp, #16]
  40b10c:	adrp	x20, 430000 <__progname@@GLIBC_2.17+0xa48>
  40b110:	add	x0, x20, #0x720
  40b114:	str	x21, [sp, #32]
  40b118:	ldrb	w21, [x0, #8]
  40b11c:	bl	4029e0 <__errno_location@plt>
  40b120:	mov	x19, x0
  40b124:	cbz	w21, 40b154 <__fxstatat@plt+0x8704>
  40b128:	ldr	w0, [x0]
  40b12c:	cmp	w0, #0x20
  40b130:	b.ne	40b154 <__fxstatat@plt+0x8704>  // b.any
  40b134:	ldp	x19, x20, [sp, #16]
  40b138:	ldr	x21, [sp, #32]
  40b13c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40b140:	ldr	x0, [x0, #1432]
  40b144:	bl	413990 <_obstack_memory_used@@Base+0x670>
  40b148:	cbnz	w0, 40b1a8 <__fxstatat@plt+0x8758>
  40b14c:	ldp	x29, x30, [sp], #48
  40b150:	ret
  40b154:	mov	w2, #0x5                   	// #5
  40b158:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40b15c:	mov	x0, #0x0                   	// #0
  40b160:	add	x1, x1, #0xb60
  40b164:	bl	402970 <dcgettext@plt>
  40b168:	ldr	x2, [x20, #1824]
  40b16c:	mov	x20, x0
  40b170:	cbz	x2, 40b1b4 <__fxstatat@plt+0x8764>
  40b174:	ldr	w19, [x19]
  40b178:	mov	x0, x2
  40b17c:	bl	4115e8 <__fxstatat@plt+0xeb98>
  40b180:	mov	x3, x0
  40b184:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40b188:	mov	w1, w19
  40b18c:	mov	x4, x20
  40b190:	add	x2, x2, #0x548
  40b194:	mov	w0, #0x0                   	// #0
  40b198:	bl	402490 <error@plt>
  40b19c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40b1a0:	ldr	w0, [x0, #1320]
  40b1a4:	bl	4023f0 <_exit@plt>
  40b1a8:	stp	x19, x20, [sp, #16]
  40b1ac:	str	x21, [sp, #32]
  40b1b0:	b	40b19c <__fxstatat@plt+0x874c>
  40b1b4:	ldr	w1, [x19]
  40b1b8:	mov	x3, x0
  40b1bc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40b1c0:	mov	w0, #0x0                   	// #0
  40b1c4:	add	x2, x2, #0x4b0
  40b1c8:	bl	402490 <error@plt>
  40b1cc:	b	40b19c <__fxstatat@plt+0x874c>
  40b1d0:	stp	x29, x30, [sp, #-32]!
  40b1d4:	mov	x29, sp
  40b1d8:	stp	x19, x20, [sp, #16]
  40b1dc:	mov	x19, x0
  40b1e0:	ldrb	w1, [x0]
  40b1e4:	cmp	w1, #0x2f
  40b1e8:	cset	x20, eq  // eq = none
  40b1ec:	bl	40b290 <__fxstatat@plt+0x8840>
  40b1f0:	sub	x0, x0, x19
  40b1f4:	b	40b208 <__fxstatat@plt+0x87b8>
  40b1f8:	ldrb	w2, [x19, x1]
  40b1fc:	cmp	w2, #0x2f
  40b200:	b.ne	40b214 <__fxstatat@plt+0x87c4>  // b.any
  40b204:	mov	x0, x1
  40b208:	sub	x1, x0, #0x1
  40b20c:	cmp	x0, x20
  40b210:	b.hi	40b1f8 <__fxstatat@plt+0x87a8>  // b.pmore
  40b214:	ldp	x19, x20, [sp, #16]
  40b218:	ldp	x29, x30, [sp], #32
  40b21c:	ret
  40b220:	stp	x29, x30, [sp, #-48]!
  40b224:	mov	x29, sp
  40b228:	stp	x19, x20, [sp, #16]
  40b22c:	str	x21, [sp, #32]
  40b230:	mov	x21, x0
  40b234:	bl	40b1d0 <__fxstatat@plt+0x8780>
  40b238:	cmp	x0, #0x0
  40b23c:	mov	x19, x0
  40b240:	add	x0, x0, #0x1
  40b244:	cinc	x0, x0, eq  // eq = none
  40b248:	bl	4025f0 <malloc@plt>
  40b24c:	mov	x20, x0
  40b250:	cbz	x0, 40b268 <__fxstatat@plt+0x8818>
  40b254:	mov	x1, x21
  40b258:	mov	x2, x19
  40b25c:	bl	4023c0 <memcpy@plt>
  40b260:	cbz	x19, 40b27c <__fxstatat@plt+0x882c>
  40b264:	strb	wzr, [x20, x19]
  40b268:	mov	x0, x20
  40b26c:	ldp	x19, x20, [sp, #16]
  40b270:	ldr	x21, [sp, #32]
  40b274:	ldp	x29, x30, [sp], #48
  40b278:	ret
  40b27c:	mov	w0, #0x2e                  	// #46
  40b280:	mov	x19, #0x1                   	// #1
  40b284:	strb	w0, [x20]
  40b288:	b	40b264 <__fxstatat@plt+0x8814>
  40b28c:	nop
  40b290:	ldrb	w1, [x0]
  40b294:	cmp	w1, #0x2f
  40b298:	b.ne	40b2ac <__fxstatat@plt+0x885c>  // b.any
  40b29c:	nop
  40b2a0:	ldrb	w1, [x0, #1]!
  40b2a4:	cmp	w1, #0x2f
  40b2a8:	b.eq	40b2a0 <__fxstatat@plt+0x8850>  // b.none
  40b2ac:	cbz	w1, 40b2e4 <__fxstatat@plt+0x8894>
  40b2b0:	mov	x2, x0
  40b2b4:	mov	w3, #0x0                   	// #0
  40b2b8:	b	40b2d0 <__fxstatat@plt+0x8880>
  40b2bc:	cbz	w3, 40b2c8 <__fxstatat@plt+0x8878>
  40b2c0:	mov	x0, x2
  40b2c4:	mov	w3, #0x0                   	// #0
  40b2c8:	ldrb	w1, [x2, #1]!
  40b2cc:	cbz	w1, 40b2e4 <__fxstatat@plt+0x8894>
  40b2d0:	cmp	w1, #0x2f
  40b2d4:	b.ne	40b2bc <__fxstatat@plt+0x886c>  // b.any
  40b2d8:	ldrb	w1, [x2, #1]!
  40b2dc:	mov	w3, #0x1                   	// #1
  40b2e0:	cbnz	w1, 40b2d0 <__fxstatat@plt+0x8880>
  40b2e4:	ret
  40b2e8:	stp	x29, x30, [sp, #-32]!
  40b2ec:	mov	x29, sp
  40b2f0:	str	x19, [sp, #16]
  40b2f4:	mov	x19, x0
  40b2f8:	bl	402430 <strlen@plt>
  40b2fc:	subs	x1, x0, #0x1
  40b300:	b.ls	40b310 <__fxstatat@plt+0x88c0>  // b.plast
  40b304:	ldrb	w2, [x19, x1]
  40b308:	cmp	w2, #0x2f
  40b30c:	b.eq	40b31c <__fxstatat@plt+0x88cc>  // b.none
  40b310:	ldr	x19, [sp, #16]
  40b314:	ldp	x29, x30, [sp], #32
  40b318:	ret
  40b31c:	mov	x0, x1
  40b320:	b	40b2fc <__fxstatat@plt+0x88ac>
  40b324:	nop
  40b328:	stp	x29, x30, [sp, #-32]!
  40b32c:	mov	x29, sp
  40b330:	stp	x19, x20, [sp, #16]
  40b334:	mov	x19, x1
  40b338:	ldr	w1, [x1, #16]
  40b33c:	and	w1, w1, #0xf000
  40b340:	cmp	w1, #0xa, lsl #12
  40b344:	b.ne	40b358 <__fxstatat@plt+0x8908>  // b.any
  40b348:	mov	w0, #0x0                   	// #0
  40b34c:	ldp	x19, x20, [sp, #16]
  40b350:	ldp	x29, x30, [sp], #32
  40b354:	ret
  40b358:	mov	x20, x0
  40b35c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40b360:	mov	x3, #0x0                   	// #0
  40b364:	add	x1, x1, #0xb70
  40b368:	mov	x2, #0x0                   	// #0
  40b36c:	bl	402790 <getxattr@plt>
  40b370:	cmp	x0, #0x0
  40b374:	b.lt	40b38c <__fxstatat@plt+0x893c>  // b.tstop
  40b378:	b.eq	40b3b4 <__fxstatat@plt+0x8964>  // b.none
  40b37c:	mov	w0, #0x1                   	// #1
  40b380:	ldp	x19, x20, [sp, #16]
  40b384:	ldp	x29, x30, [sp], #32
  40b388:	ret
  40b38c:	bl	4029e0 <__errno_location@plt>
  40b390:	ldr	w0, [x0]
  40b394:	cmp	w0, #0x3d
  40b398:	b.eq	40b3b4 <__fxstatat@plt+0x8964>  // b.none
  40b39c:	bl	413950 <_obstack_memory_used@@Base+0x630>
  40b3a0:	and	w0, w0, #0xff
  40b3a4:	neg	w0, w0
  40b3a8:	ldp	x19, x20, [sp, #16]
  40b3ac:	ldp	x29, x30, [sp], #32
  40b3b0:	ret
  40b3b4:	ldr	w0, [x19, #16]
  40b3b8:	and	w0, w0, #0xf000
  40b3bc:	cmp	w0, #0x4, lsl #12
  40b3c0:	b.ne	40b348 <__fxstatat@plt+0x88f8>  // b.any
  40b3c4:	mov	x0, x20
  40b3c8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40b3cc:	mov	x3, #0x0                   	// #0
  40b3d0:	add	x1, x1, #0xb88
  40b3d4:	mov	x2, #0x0                   	// #0
  40b3d8:	bl	402790 <getxattr@plt>
  40b3dc:	cmp	x0, #0x0
  40b3e0:	b.lt	40b3f0 <__fxstatat@plt+0x89a0>  // b.tstop
  40b3e4:	b.eq	40b348 <__fxstatat@plt+0x88f8>  // b.none
  40b3e8:	mov	w0, #0x1                   	// #1
  40b3ec:	b	40b380 <__fxstatat@plt+0x8930>
  40b3f0:	bl	4029e0 <__errno_location@plt>
  40b3f4:	ldr	w0, [x0]
  40b3f8:	cmp	w0, #0x3d
  40b3fc:	b.ne	40b39c <__fxstatat@plt+0x894c>  // b.any
  40b400:	b	40b348 <__fxstatat@plt+0x88f8>
  40b404:	nop
  40b408:	cbz	x0, 40b488 <__fxstatat@plt+0x8a38>
  40b40c:	stp	x29, x30, [sp, #-48]!
  40b410:	mov	x29, sp
  40b414:	stp	x21, x22, [sp, #32]
  40b418:	mov	x21, x2
  40b41c:	mov	x22, x1
  40b420:	stp	x19, x20, [sp, #16]
  40b424:	mov	x20, x0
  40b428:	mov	x0, #0x18                  	// #24
  40b42c:	bl	411e78 <__fxstatat@plt+0xf428>
  40b430:	mov	x19, x0
  40b434:	mov	x0, x22
  40b438:	bl	4120a0 <__fxstatat@plt+0xf650>
  40b43c:	ldp	x2, x3, [x21]
  40b440:	mov	x4, x0
  40b444:	stp	x4, x3, [x19]
  40b448:	mov	x1, x19
  40b44c:	mov	x0, x20
  40b450:	str	x2, [x19, #16]
  40b454:	bl	40ca68 <__fxstatat@plt+0xa018>
  40b458:	cbz	x0, 40b48c <__fxstatat@plt+0x8a3c>
  40b45c:	cmp	x19, x0
  40b460:	b.eq	40b478 <__fxstatat@plt+0x8a28>  // b.none
  40b464:	mov	x0, x19
  40b468:	ldp	x19, x20, [sp, #16]
  40b46c:	ldp	x21, x22, [sp, #32]
  40b470:	ldp	x29, x30, [sp], #48
  40b474:	b	40cc90 <__fxstatat@plt+0xa240>
  40b478:	ldp	x19, x20, [sp, #16]
  40b47c:	ldp	x21, x22, [sp, #32]
  40b480:	ldp	x29, x30, [sp], #48
  40b484:	ret
  40b488:	ret
  40b48c:	bl	4120d0 <__fxstatat@plt+0xf680>
  40b490:	cbz	x0, 40b4c4 <__fxstatat@plt+0x8a74>
  40b494:	stp	x29, x30, [sp, #-48]!
  40b498:	mov	x3, x1
  40b49c:	mov	x29, sp
  40b4a0:	ldp	x4, x2, [x2]
  40b4a4:	add	x1, sp, #0x18
  40b4a8:	stp	x3, x2, [sp, #24]
  40b4ac:	str	x4, [sp, #40]
  40b4b0:	bl	40c278 <__fxstatat@plt+0x9828>
  40b4b4:	cmp	x0, #0x0
  40b4b8:	cset	w0, ne  // ne = any
  40b4bc:	ldp	x29, x30, [sp], #48
  40b4c0:	ret
  40b4c4:	mov	w0, #0x0                   	// #0
  40b4c8:	ret
  40b4cc:	nop
  40b4d0:	and	w3, w0, #0xf000
  40b4d4:	mov	w2, #0x2d                  	// #45
  40b4d8:	cmp	w3, #0x8, lsl #12
  40b4dc:	b.eq	40b52c <__fxstatat@plt+0x8adc>  // b.none
  40b4e0:	cmp	w3, #0x4, lsl #12
  40b4e4:	mov	w2, #0x64                  	// #100
  40b4e8:	b.eq	40b52c <__fxstatat@plt+0x8adc>  // b.none
  40b4ec:	cmp	w3, #0x6, lsl #12
  40b4f0:	mov	w2, #0x62                  	// #98
  40b4f4:	b.eq	40b52c <__fxstatat@plt+0x8adc>  // b.none
  40b4f8:	cmp	w3, #0x2, lsl #12
  40b4fc:	mov	w2, #0x63                  	// #99
  40b500:	b.eq	40b52c <__fxstatat@plt+0x8adc>  // b.none
  40b504:	cmp	w3, #0xa, lsl #12
  40b508:	mov	w2, #0x6c                  	// #108
  40b50c:	b.eq	40b52c <__fxstatat@plt+0x8adc>  // b.none
  40b510:	cmp	w3, #0x1, lsl #12
  40b514:	mov	w2, #0x70                  	// #112
  40b518:	b.eq	40b52c <__fxstatat@plt+0x8adc>  // b.none
  40b51c:	cmp	w3, #0xc, lsl #12
  40b520:	mov	w2, #0x73                  	// #115
  40b524:	mov	w3, #0x3f                  	// #63
  40b528:	csel	w2, w2, w3, eq  // eq = none
  40b52c:	tst	x0, #0x100
  40b530:	mov	w6, #0x2d                  	// #45
  40b534:	mov	w4, #0x72                  	// #114
  40b538:	csel	w4, w4, w6, ne  // ne = any
  40b53c:	tst	x0, #0x80
  40b540:	mov	w3, #0x77                  	// #119
  40b544:	csel	w3, w3, w6, ne  // ne = any
  40b548:	strb	w2, [x1]
  40b54c:	strb	w4, [x1, #1]
  40b550:	and	w2, w0, #0x40
  40b554:	strb	w3, [x1, #2]
  40b558:	tbz	w0, #11, 40b5fc <__fxstatat@plt+0x8bac>
  40b55c:	cmp	w2, #0x0
  40b560:	mov	w5, #0x73                  	// #115
  40b564:	mov	w2, #0x53                  	// #83
  40b568:	csel	w5, w5, w2, ne  // ne = any
  40b56c:	tst	x0, #0x20
  40b570:	mov	w6, #0x2d                  	// #45
  40b574:	mov	w3, #0x72                  	// #114
  40b578:	csel	w3, w3, w6, ne  // ne = any
  40b57c:	tst	x0, #0x10
  40b580:	mov	w2, #0x77                  	// #119
  40b584:	csel	w2, w2, w6, ne  // ne = any
  40b588:	strb	w5, [x1, #3]
  40b58c:	strb	w3, [x1, #4]
  40b590:	and	w3, w0, #0x8
  40b594:	strb	w2, [x1, #5]
  40b598:	tbz	w0, #10, 40b60c <__fxstatat@plt+0x8bbc>
  40b59c:	cmp	w3, #0x0
  40b5a0:	mov	w4, #0x73                  	// #115
  40b5a4:	mov	w2, #0x53                  	// #83
  40b5a8:	csel	w4, w4, w2, ne  // ne = any
  40b5ac:	tst	x0, #0x4
  40b5b0:	mov	w5, #0x2d                  	// #45
  40b5b4:	mov	w3, #0x72                  	// #114
  40b5b8:	csel	w3, w3, w5, ne  // ne = any
  40b5bc:	tst	x0, #0x2
  40b5c0:	mov	w2, #0x77                  	// #119
  40b5c4:	csel	w2, w2, w5, ne  // ne = any
  40b5c8:	strb	w4, [x1, #6]
  40b5cc:	strb	w3, [x1, #7]
  40b5d0:	and	w3, w0, #0x1
  40b5d4:	strb	w2, [x1, #8]
  40b5d8:	tbz	w0, #9, 40b61c <__fxstatat@plt+0x8bcc>
  40b5dc:	cmp	w3, #0x0
  40b5e0:	mov	w2, #0x54                  	// #84
  40b5e4:	mov	w0, #0x74                  	// #116
  40b5e8:	csel	w0, w0, w2, ne  // ne = any
  40b5ec:	mov	w2, #0x20                  	// #32
  40b5f0:	strb	w0, [x1, #9]
  40b5f4:	strh	w2, [x1, #10]
  40b5f8:	ret
  40b5fc:	cmp	w2, #0x0
  40b600:	mov	w5, #0x78                  	// #120
  40b604:	csel	w5, w5, w6, ne  // ne = any
  40b608:	b	40b56c <__fxstatat@plt+0x8b1c>
  40b60c:	cmp	w3, #0x0
  40b610:	mov	w4, #0x78                  	// #120
  40b614:	csel	w4, w4, w6, ne  // ne = any
  40b618:	b	40b5ac <__fxstatat@plt+0x8b5c>
  40b61c:	cmp	w3, #0x0
  40b620:	mov	w2, #0x20                  	// #32
  40b624:	mov	w0, #0x78                  	// #120
  40b628:	csel	w0, w0, w5, ne  // ne = any
  40b62c:	strb	w0, [x1, #9]
  40b630:	strh	w2, [x1, #10]
  40b634:	ret
  40b638:	ldr	w0, [x0, #16]
  40b63c:	b	40b4d0 <__fxstatat@plt+0x8a80>
  40b640:	stp	x29, x30, [sp, #-16]!
  40b644:	mov	x29, sp
  40b648:	bl	40b660 <__fxstatat@plt+0x8c10>
  40b64c:	cbz	x0, 40b658 <__fxstatat@plt+0x8c08>
  40b650:	ldp	x29, x30, [sp], #16
  40b654:	ret
  40b658:	bl	4120d0 <__fxstatat@plt+0xf680>
  40b65c:	nop
  40b660:	stp	x29, x30, [sp, #-80]!
  40b664:	mov	x29, sp
  40b668:	stp	x19, x20, [sp, #16]
  40b66c:	stp	x21, x22, [sp, #32]
  40b670:	mov	x21, x1
  40b674:	mov	x22, x0
  40b678:	stp	x23, x24, [sp, #48]
  40b67c:	mov	x23, x2
  40b680:	stp	x25, x26, [sp, #64]
  40b684:	bl	40b290 <__fxstatat@plt+0x8840>
  40b688:	mov	x20, x0
  40b68c:	bl	40b2e8 <__fxstatat@plt+0x8898>
  40b690:	mov	x19, x0
  40b694:	mov	x0, x21
  40b698:	bl	402430 <strlen@plt>
  40b69c:	sub	x3, x20, x22
  40b6a0:	mov	x24, x0
  40b6a4:	add	x26, x3, x19
  40b6a8:	add	x1, x0, #0x1
  40b6ac:	cbz	x19, 40b734 <__fxstatat@plt+0x8ce4>
  40b6b0:	add	x0, x22, x26
  40b6b4:	ldurb	w0, [x0, #-1]
  40b6b8:	cmp	w0, #0x2f
  40b6bc:	b.eq	40b758 <__fxstatat@plt+0x8d08>  // b.none
  40b6c0:	ldrb	w0, [x21]
  40b6c4:	cmp	w0, #0x2f
  40b6c8:	b.eq	40b758 <__fxstatat@plt+0x8d08>  // b.none
  40b6cc:	add	x0, x26, #0x1
  40b6d0:	mov	x19, #0x1                   	// #1
  40b6d4:	mov	w25, #0x2f                  	// #47
  40b6d8:	add	x0, x1, x0
  40b6dc:	bl	4025f0 <malloc@plt>
  40b6e0:	mov	x20, x0
  40b6e4:	cbz	x0, 40b718 <__fxstatat@plt+0x8cc8>
  40b6e8:	mov	x1, x22
  40b6ec:	mov	x2, x26
  40b6f0:	bl	402860 <mempcpy@plt>
  40b6f4:	mov	x1, x0
  40b6f8:	add	x0, x0, x19
  40b6fc:	strb	w25, [x1]
  40b700:	cbz	x23, 40b708 <__fxstatat@plt+0x8cb8>
  40b704:	str	x0, [x23]
  40b708:	mov	x2, x24
  40b70c:	mov	x1, x21
  40b710:	bl	402860 <mempcpy@plt>
  40b714:	strb	wzr, [x0]
  40b718:	mov	x0, x20
  40b71c:	ldp	x19, x20, [sp, #16]
  40b720:	ldp	x21, x22, [sp, #32]
  40b724:	ldp	x23, x24, [sp, #48]
  40b728:	ldp	x25, x26, [sp, #64]
  40b72c:	ldp	x29, x30, [sp], #80
  40b730:	ret
  40b734:	ldrb	w2, [x21]
  40b738:	mov	x0, x26
  40b73c:	mov	w25, #0x0                   	// #0
  40b740:	cmp	w2, #0x2f
  40b744:	b.ne	40b6d8 <__fxstatat@plt+0x8c88>  // b.any
  40b748:	add	x0, x3, #0x1
  40b74c:	mov	x19, #0x1                   	// #1
  40b750:	mov	w25, #0x2e                  	// #46
  40b754:	b	40b6d8 <__fxstatat@plt+0x8c88>
  40b758:	mov	x0, x26
  40b75c:	mov	x19, #0x0                   	// #0
  40b760:	mov	w25, #0x0                   	// #0
  40b764:	b	40b6d8 <__fxstatat@plt+0x8c88>
  40b768:	ldr	x2, [x0]
  40b76c:	mov	x5, x0
  40b770:	ldrb	w1, [x2]
  40b774:	cbz	w1, 40b81c <__fxstatat@plt+0x8dcc>
  40b778:	mov	w4, #0x0                   	// #0
  40b77c:	mov	x0, #0x0                   	// #0
  40b780:	cbz	w4, 40b7cc <__fxstatat@plt+0x8d7c>
  40b784:	cmp	w1, #0x5a
  40b788:	b.hi	40b7ac <__fxstatat@plt+0x8d5c>  // b.pmore
  40b78c:	cmp	w1, #0x41
  40b790:	mov	w4, #0x0                   	// #0
  40b794:	csel	x0, x0, xzr, cs  // cs = hs, nlast
  40b798:	add	x2, x2, #0x1
  40b79c:	str	x2, [x5]
  40b7a0:	ldrb	w1, [x2]
  40b7a4:	cbnz	w1, 40b780 <__fxstatat@plt+0x8d30>
  40b7a8:	ret
  40b7ac:	sub	w3, w1, #0x61
  40b7b0:	mov	w4, #0x0                   	// #0
  40b7b4:	and	w3, w3, #0xff
  40b7b8:	cmp	w3, #0x19
  40b7bc:	b.ls	40b798 <__fxstatat@plt+0x8d48>  // b.plast
  40b7c0:	cmp	w1, #0x7e
  40b7c4:	csel	x0, x0, xzr, eq  // eq = none
  40b7c8:	b	40b798 <__fxstatat@plt+0x8d48>
  40b7cc:	cmp	w1, #0x2e
  40b7d0:	b.eq	40b80c <__fxstatat@plt+0x8dbc>  // b.none
  40b7d4:	cmp	w1, #0x5a
  40b7d8:	b.hi	40b7f8 <__fxstatat@plt+0x8da8>  // b.pmore
  40b7dc:	cmp	w1, #0x40
  40b7e0:	b.hi	40b798 <__fxstatat@plt+0x8d48>  // b.pmore
  40b7e4:	sub	w1, w1, #0x30
  40b7e8:	and	w1, w1, #0xff
  40b7ec:	cmp	w1, #0xa
  40b7f0:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
  40b7f4:	b	40b798 <__fxstatat@plt+0x8d48>
  40b7f8:	sub	w3, w1, #0x61
  40b7fc:	and	w3, w3, #0xff
  40b800:	cmp	w3, #0x19
  40b804:	b.hi	40b7c0 <__fxstatat@plt+0x8d70>  // b.pmore
  40b808:	b	40b798 <__fxstatat@plt+0x8d48>
  40b80c:	cmp	x0, #0x0
  40b810:	mov	w4, #0x1                   	// #1
  40b814:	csel	x0, x0, x2, ne  // ne = any
  40b818:	b	40b798 <__fxstatat@plt+0x8d48>
  40b81c:	mov	x0, #0x0                   	// #0
  40b820:	ret
  40b824:	nop
  40b828:	stp	x29, x30, [sp, #-80]!
  40b82c:	mov	x29, sp
  40b830:	stp	x19, x20, [sp, #16]
  40b834:	mov	x19, x1
  40b838:	stp	x21, x22, [sp, #32]
  40b83c:	mov	x22, x0
  40b840:	bl	402800 <strcmp@plt>
  40b844:	mov	w20, w0
  40b848:	cbz	w0, 40b884 <__fxstatat@plt+0x8e34>
  40b84c:	ldrb	w1, [x22]
  40b850:	cbz	w1, 40ba40 <__fxstatat@plt+0x8ff0>
  40b854:	ldrb	w0, [x19]
  40b858:	cbz	w0, 40b880 <__fxstatat@plt+0x8e30>
  40b85c:	cmp	w1, #0x2e
  40b860:	b.ne	40b86c <__fxstatat@plt+0x8e1c>  // b.any
  40b864:	ldrb	w2, [x22, #1]
  40b868:	cbz	w2, 40ba40 <__fxstatat@plt+0x8ff0>
  40b86c:	ldrb	w2, [x19]
  40b870:	cmp	w2, #0x2e
  40b874:	b.ne	40b898 <__fxstatat@plt+0x8e48>  // b.any
  40b878:	ldrb	w2, [x19, #1]
  40b87c:	cbnz	w2, 40b898 <__fxstatat@plt+0x8e48>
  40b880:	mov	w20, #0x1                   	// #1
  40b884:	mov	w0, w20
  40b888:	ldp	x19, x20, [sp, #16]
  40b88c:	ldp	x21, x22, [sp, #32]
  40b890:	ldp	x29, x30, [sp], #80
  40b894:	ret
  40b898:	ldrb	w3, [x22]
  40b89c:	mov	w2, #0x2e                  	// #46
  40b8a0:	cmp	w2, w3
  40b8a4:	b.ne	40b8bc <__fxstatat@plt+0x8e6c>  // b.any
  40b8a8:	ldrb	w3, [x22, #1]
  40b8ac:	cmp	w2, w3
  40b8b0:	b.ne	40b8bc <__fxstatat@plt+0x8e6c>  // b.any
  40b8b4:	ldrb	w2, [x22, #2]
  40b8b8:	cbz	w2, 40ba40 <__fxstatat@plt+0x8ff0>
  40b8bc:	ldrb	w3, [x19]
  40b8c0:	mov	w2, #0x2e                  	// #46
  40b8c4:	cmp	w2, w3
  40b8c8:	b.eq	40ba04 <__fxstatat@plt+0x8fb4>  // b.none
  40b8cc:	cmp	w1, #0x2e
  40b8d0:	cset	w2, eq  // eq = none
  40b8d4:	cmp	w0, #0x2e
  40b8d8:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  40b8dc:	b.ne	40ba40 <__fxstatat@plt+0x8ff0>  // b.any
  40b8e0:	cmp	w0, #0x2e
  40b8e4:	cset	w0, eq  // eq = none
  40b8e8:	cmp	w1, #0x2e
  40b8ec:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40b8f0:	b.ne	40b880 <__fxstatat@plt+0x8e30>  // b.any
  40b8f4:	str	x23, [sp, #48]
  40b8f8:	cmp	w0, #0x0
  40b8fc:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  40b900:	b.ne	40bb84 <__fxstatat@plt+0x9134>  // b.any
  40b904:	add	x0, sp, #0x40
  40b908:	stp	x22, x19, [sp, #64]
  40b90c:	bl	40b768 <__fxstatat@plt+0x8d18>
  40b910:	mov	x21, x0
  40b914:	add	x0, sp, #0x48
  40b918:	bl	40b768 <__fxstatat@plt+0x8d18>
  40b91c:	cbz	x21, 40bb48 <__fxstatat@plt+0x90f8>
  40b920:	sub	x21, x21, x22
  40b924:	cbz	x0, 40bb9c <__fxstatat@plt+0x914c>
  40b928:	sub	x23, x0, x19
  40b92c:	cmp	x21, x23
  40b930:	b.eq	40bb60 <__fxstatat@plt+0x9110>  // b.none
  40b934:	mov	x3, #0x0                   	// #0
  40b938:	mov	x1, #0x0                   	// #0
  40b93c:	cmp	x21, x1
  40b940:	ccmp	x23, x3, #0x2, ls  // ls = plast
  40b944:	b.ls	40bb94 <__fxstatat@plt+0x9144>  // b.plast
  40b948:	sub	x6, x3, x1
  40b94c:	cmp	x21, x1
  40b950:	b.ls	40b9b4 <__fxstatat@plt+0x8f64>  // b.plast
  40b954:	ldrb	w0, [x22, x1]
  40b958:	sub	w2, w0, #0x30
  40b95c:	cmp	w2, #0x9
  40b960:	b.ls	40b9b4 <__fxstatat@plt+0x8f64>  // b.plast
  40b964:	mov	w2, w0
  40b968:	cmp	w0, #0x5a
  40b96c:	b.hi	40bb04 <__fxstatat@plt+0x90b4>  // b.pmore
  40b970:	cmp	w0, #0x40
  40b974:	b.hi	40ba1c <__fxstatat@plt+0x8fcc>  // b.pmore
  40b978:	add	w2, w0, #0x100
  40b97c:	add	x0, x1, x6
  40b980:	cmp	x23, x0
  40b984:	b.eq	40bb30 <__fxstatat@plt+0x90e0>  // b.none
  40b988:	ldrb	w4, [x19, x3]
  40b98c:	sub	w0, w4, #0x30
  40b990:	cmp	w0, #0x9
  40b994:	mov	w0, #0x0                   	// #0
  40b998:	b.hi	40b9e8 <__fxstatat@plt+0x8f98>  // b.pmore
  40b99c:	cmp	w0, w2
  40b9a0:	b.ne	40bb2c <__fxstatat@plt+0x90dc>  // b.any
  40b9a4:	add	x1, x1, #0x1
  40b9a8:	add	x3, x3, #0x1
  40b9ac:	cmp	x21, x1
  40b9b0:	b.hi	40b954 <__fxstatat@plt+0x8f04>  // b.pmore
  40b9b4:	ldrb	w4, [x19, x3]
  40b9b8:	cmp	x23, x3
  40b9bc:	b.ls	40ba4c <__fxstatat@plt+0x8ffc>  // b.plast
  40b9c0:	sub	w0, w4, #0x30
  40b9c4:	cmp	w0, #0x9
  40b9c8:	b.ls	40ba4c <__fxstatat@plt+0x8ffc>  // b.plast
  40b9cc:	cmp	x21, x1
  40b9d0:	b.eq	40bb24 <__fxstatat@plt+0x90d4>  // b.none
  40b9d4:	ldrb	w0, [x22, x1]
  40b9d8:	mov	w2, #0x0                   	// #0
  40b9dc:	sub	w5, w0, #0x30
  40b9e0:	cmp	w5, #0x9
  40b9e4:	b.hi	40b964 <__fxstatat@plt+0x8f14>  // b.pmore
  40b9e8:	cmp	w4, #0x5a
  40b9ec:	mov	w0, w4
  40b9f0:	b.hi	40bae0 <__fxstatat@plt+0x9090>  // b.pmore
  40b9f4:	cmp	w4, #0x40
  40b9f8:	b.hi	40b99c <__fxstatat@plt+0x8f4c>  // b.pmore
  40b9fc:	add	w0, w4, #0x100
  40ba00:	b	40b99c <__fxstatat@plt+0x8f4c>
  40ba04:	ldrb	w3, [x19, #1]
  40ba08:	cmp	w2, w3
  40ba0c:	b.ne	40b8cc <__fxstatat@plt+0x8e7c>  // b.any
  40ba10:	ldrb	w2, [x19, #2]
  40ba14:	cbz	w2, 40b880 <__fxstatat@plt+0x8e30>
  40ba18:	b	40b8cc <__fxstatat@plt+0x8e7c>
  40ba1c:	add	x4, x1, x6
  40ba20:	mov	w0, #0x0                   	// #0
  40ba24:	cmp	x23, x4
  40ba28:	b.ne	40b988 <__fxstatat@plt+0x8f38>  // b.any
  40ba2c:	b	40b99c <__fxstatat@plt+0x8f4c>
  40ba30:	sub	w4, w4, #0x30
  40ba34:	cmp	w4, #0x9
  40ba38:	b.hi	40b93c <__fxstatat@plt+0x8eec>  // b.pmore
  40ba3c:	ldr	x23, [sp, #48]
  40ba40:	mov	w20, #0xffffffff            	// #-1
  40ba44:	b	40b884 <__fxstatat@plt+0x8e34>
  40ba48:	add	x1, x1, #0x1
  40ba4c:	ldrb	w5, [x22, x1]
  40ba50:	cmp	w5, #0x30
  40ba54:	b.eq	40ba48 <__fxstatat@plt+0x8ff8>  // b.none
  40ba58:	cmp	w4, #0x30
  40ba5c:	b.ne	40ba70 <__fxstatat@plt+0x9020>  // b.any
  40ba60:	add	x3, x3, #0x1
  40ba64:	ldrb	w4, [x19, x3]
  40ba68:	cmp	w4, #0x30
  40ba6c:	b.eq	40ba60 <__fxstatat@plt+0x9010>  // b.none
  40ba70:	sub	w0, w5, #0x30
  40ba74:	cmp	w0, #0x9
  40ba78:	b.hi	40ba30 <__fxstatat@plt+0x8fe0>  // b.pmore
  40ba7c:	sub	x0, x3, x1
  40ba80:	mov	w6, #0x0                   	// #0
  40ba84:	add	x2, x19, x0
  40ba88:	mov	x0, x1
  40ba8c:	add	x0, x0, #0x1
  40ba90:	sub	w8, w5, w4
  40ba94:	sub	w4, w4, #0x30
  40ba98:	sub	x7, x0, x1
  40ba9c:	cmp	w4, #0x9
  40baa0:	b.hi	40bb40 <__fxstatat@plt+0x90f0>  // b.pmore
  40baa4:	ldrb	w5, [x22, x0]
  40baa8:	cmp	w6, #0x0
  40baac:	csel	w6, w8, w6, eq  // eq = none
  40bab0:	ldrb	w4, [x2, x0]
  40bab4:	sub	w8, w5, #0x30
  40bab8:	add	x7, x7, x3
  40babc:	cmp	w8, #0x9
  40bac0:	b.ls	40ba8c <__fxstatat@plt+0x903c>  // b.plast
  40bac4:	sub	w4, w4, #0x30
  40bac8:	cmp	w4, #0x9
  40bacc:	b.ls	40ba3c <__fxstatat@plt+0x8fec>  // b.plast
  40bad0:	cbnz	w6, 40bb90 <__fxstatat@plt+0x9140>
  40bad4:	mov	x1, x0
  40bad8:	mov	x3, x7
  40badc:	b	40b93c <__fxstatat@plt+0x8eec>
  40bae0:	sub	w5, w4, #0x61
  40bae4:	and	w5, w5, #0xff
  40bae8:	cmp	w5, #0x19
  40baec:	b.ls	40b99c <__fxstatat@plt+0x8f4c>  // b.plast
  40baf0:	cmp	w4, #0x7e
  40baf4:	mov	w0, #0xffffffff            	// #-1
  40baf8:	b.eq	40b99c <__fxstatat@plt+0x8f4c>  // b.none
  40bafc:	add	w0, w4, #0x100
  40bb00:	b	40b99c <__fxstatat@plt+0x8f4c>
  40bb04:	sub	w4, w0, #0x61
  40bb08:	and	w4, w4, #0xff
  40bb0c:	cmp	w4, #0x19
  40bb10:	b.ls	40ba1c <__fxstatat@plt+0x8fcc>  // b.plast
  40bb14:	cmp	w0, #0x7e
  40bb18:	mov	w2, #0xffffffff            	// #-1
  40bb1c:	b.eq	40b97c <__fxstatat@plt+0x8f2c>  // b.none
  40bb20:	b	40b978 <__fxstatat@plt+0x8f28>
  40bb24:	mov	w2, #0x0                   	// #0
  40bb28:	b	40b9e8 <__fxstatat@plt+0x8f98>
  40bb2c:	sub	w2, w2, w0
  40bb30:	cmp	w2, #0x0
  40bb34:	csel	w20, w20, w2, eq  // eq = none
  40bb38:	ldr	x23, [sp, #48]
  40bb3c:	b	40b884 <__fxstatat@plt+0x8e34>
  40bb40:	ldr	x23, [sp, #48]
  40bb44:	b	40b880 <__fxstatat@plt+0x8e30>
  40bb48:	ldr	x21, [sp, #64]
  40bb4c:	sub	x21, x21, x22
  40bb50:	cbnz	x0, 40b928 <__fxstatat@plt+0x8ed8>
  40bb54:	ldr	x23, [sp, #72]
  40bb58:	sub	x23, x23, x19
  40bb5c:	b	40b934 <__fxstatat@plt+0x8ee4>
  40bb60:	mov	x2, x21
  40bb64:	mov	x1, x19
  40bb68:	mov	x0, x22
  40bb6c:	bl	402640 <strncmp@plt>
  40bb70:	cbnz	w0, 40b934 <__fxstatat@plt+0x8ee4>
  40bb74:	ldp	x21, x23, [sp, #64]
  40bb78:	sub	x21, x21, x22
  40bb7c:	sub	x23, x23, x19
  40bb80:	b	40b934 <__fxstatat@plt+0x8ee4>
  40bb84:	add	x22, x22, #0x1
  40bb88:	add	x19, x19, #0x1
  40bb8c:	b	40b904 <__fxstatat@plt+0x8eb4>
  40bb90:	mov	w20, w6
  40bb94:	ldr	x23, [sp, #48]
  40bb98:	b	40b884 <__fxstatat@plt+0x8e34>
  40bb9c:	ldr	x23, [sp, #72]
  40bba0:	sub	x23, x23, x19
  40bba4:	b	40b92c <__fxstatat@plt+0x8edc>
  40bba8:	mov	x1, x0
  40bbac:	mov	w0, #0x0                   	// #0
  40bbb0:	b	402530 <clock_gettime@plt>
  40bbb4:	nop
  40bbb8:	stp	x29, x30, [sp, #-32]!
  40bbbc:	mov	w0, #0x0                   	// #0
  40bbc0:	mov	x29, sp
  40bbc4:	add	x1, sp, #0x10
  40bbc8:	bl	402530 <clock_gettime@plt>
  40bbcc:	ldp	x0, x1, [sp, #16]
  40bbd0:	ldp	x29, x30, [sp], #32
  40bbd4:	ret
  40bbd8:	stp	x29, x30, [sp, #-16]!
  40bbdc:	mov	x1, #0x0                   	// #0
  40bbe0:	mov	x29, sp
  40bbe4:	bl	402a40 <setlocale@plt>
  40bbe8:	mov	w1, #0x1                   	// #1
  40bbec:	cbz	x0, 40bc10 <__fxstatat@plt+0x91c0>
  40bbf0:	ldrb	w1, [x0]
  40bbf4:	cmp	w1, #0x43
  40bbf8:	b.eq	40bc1c <__fxstatat@plt+0x91cc>  // b.none
  40bbfc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40bc00:	add	x1, x1, #0xba8
  40bc04:	bl	402800 <strcmp@plt>
  40bc08:	cmp	w0, #0x0
  40bc0c:	cset	w1, ne  // ne = any
  40bc10:	mov	w0, w1
  40bc14:	ldp	x29, x30, [sp], #16
  40bc18:	ret
  40bc1c:	ldrb	w2, [x0, #1]
  40bc20:	mov	w1, #0x0                   	// #0
  40bc24:	cbnz	w2, 40bbfc <__fxstatat@plt+0x91ac>
  40bc28:	mov	w0, w1
  40bc2c:	ldp	x29, x30, [sp], #16
  40bc30:	ret
  40bc34:	nop
  40bc38:	ror	x2, x0, #3
  40bc3c:	udiv	x0, x2, x1
  40bc40:	msub	x0, x0, x1, x2
  40bc44:	ret
  40bc48:	cmp	x1, x0
  40bc4c:	cset	w0, eq  // eq = none
  40bc50:	ret
  40bc54:	nop
  40bc58:	stp	x29, x30, [sp, #-32]!
  40bc5c:	mov	x29, sp
  40bc60:	str	x19, [sp, #16]
  40bc64:	mov	x19, x0
  40bc68:	mov	x0, x1
  40bc6c:	ldr	x1, [x19, #16]
  40bc70:	ldr	x2, [x19, #48]
  40bc74:	blr	x2
  40bc78:	ldr	x1, [x19, #16]
  40bc7c:	cmp	x1, x0
  40bc80:	b.ls	40bc98 <__fxstatat@plt+0x9248>  // b.plast
  40bc84:	ldr	x1, [x19]
  40bc88:	ldr	x19, [sp, #16]
  40bc8c:	add	x0, x1, x0, lsl #4
  40bc90:	ldp	x29, x30, [sp], #32
  40bc94:	ret
  40bc98:	bl	402760 <abort@plt>
  40bc9c:	nop
  40bca0:	stp	x29, x30, [sp, #-64]!
  40bca4:	mov	x29, sp
  40bca8:	str	x23, [sp, #48]
  40bcac:	mov	x23, x2
  40bcb0:	stp	x19, x20, [sp, #16]
  40bcb4:	mov	x20, x1
  40bcb8:	stp	x21, x22, [sp, #32]
  40bcbc:	and	w22, w3, #0xff
  40bcc0:	mov	x21, x0
  40bcc4:	bl	40bc58 <__fxstatat@plt+0x9208>
  40bcc8:	str	x0, [x23]
  40bccc:	ldr	x1, [x0]
  40bcd0:	cbz	x1, 40bd5c <__fxstatat@plt+0x930c>
  40bcd4:	mov	x19, x0
  40bcd8:	cmp	x1, x20
  40bcdc:	b.eq	40bdb4 <__fxstatat@plt+0x9364>  // b.none
  40bce0:	ldr	x2, [x21, #56]
  40bce4:	mov	x0, x20
  40bce8:	blr	x2
  40bcec:	tst	w0, #0xff
  40bcf0:	b.eq	40bd54 <__fxstatat@plt+0x9304>  // b.none
  40bcf4:	ldr	x0, [x19]
  40bcf8:	cbz	w22, 40bd60 <__fxstatat@plt+0x9310>
  40bcfc:	ldr	x1, [x19, #8]
  40bd00:	cbz	x1, 40bdac <__fxstatat@plt+0x935c>
  40bd04:	ldp	x2, x3, [x1]
  40bd08:	stp	x2, x3, [x19]
  40bd0c:	str	xzr, [x1]
  40bd10:	ldp	x19, x20, [sp, #16]
  40bd14:	ldr	x2, [x21, #72]
  40bd18:	str	x2, [x1, #8]
  40bd1c:	str	x1, [x21, #72]
  40bd20:	ldp	x21, x22, [sp, #32]
  40bd24:	ldr	x23, [sp, #48]
  40bd28:	ldp	x29, x30, [sp], #64
  40bd2c:	ret
  40bd30:	ldr	x1, [x2]
  40bd34:	mov	x0, x20
  40bd38:	cmp	x1, x20
  40bd3c:	b.eq	40bd74 <__fxstatat@plt+0x9324>  // b.none
  40bd40:	ldr	x2, [x21, #56]
  40bd44:	blr	x2
  40bd48:	tst	w0, #0xff
  40bd4c:	b.ne	40bd74 <__fxstatat@plt+0x9324>  // b.any
  40bd50:	ldr	x19, [x19, #8]
  40bd54:	ldr	x2, [x19, #8]
  40bd58:	cbnz	x2, 40bd30 <__fxstatat@plt+0x92e0>
  40bd5c:	mov	x0, #0x0                   	// #0
  40bd60:	ldp	x19, x20, [sp, #16]
  40bd64:	ldp	x21, x22, [sp, #32]
  40bd68:	ldr	x23, [sp, #48]
  40bd6c:	ldp	x29, x30, [sp], #64
  40bd70:	ret
  40bd74:	ldr	x1, [x19, #8]
  40bd78:	ldr	x0, [x1]
  40bd7c:	cbz	w22, 40bd60 <__fxstatat@plt+0x9310>
  40bd80:	ldr	x2, [x1, #8]
  40bd84:	str	x2, [x19, #8]
  40bd88:	str	xzr, [x1]
  40bd8c:	ldp	x19, x20, [sp, #16]
  40bd90:	ldr	x2, [x21, #72]
  40bd94:	str	x2, [x1, #8]
  40bd98:	str	x1, [x21, #72]
  40bd9c:	ldp	x21, x22, [sp, #32]
  40bda0:	ldr	x23, [sp, #48]
  40bda4:	ldp	x29, x30, [sp], #64
  40bda8:	ret
  40bdac:	str	xzr, [x19]
  40bdb0:	b	40bd60 <__fxstatat@plt+0x9310>
  40bdb4:	mov	x0, x1
  40bdb8:	b	40bcf8 <__fxstatat@plt+0x92a8>
  40bdbc:	nop
  40bdc0:	ldr	x3, [x0]
  40bdc4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40bdc8:	add	x2, x2, #0xc20
  40bdcc:	mov	x1, x0
  40bdd0:	cmp	x3, x2
  40bdd4:	b.eq	40be5c <__fxstatat@plt+0x940c>  // b.none
  40bdd8:	mov	w0, #0xcccd                	// #52429
  40bddc:	ldr	s1, [x3, #8]
  40bde0:	movk	w0, #0x3dcc, lsl #16
  40bde4:	fmov	s0, w0
  40bde8:	fcmpe	s1, s0
  40bdec:	b.le	40be50 <__fxstatat@plt+0x9400>
  40bdf0:	mov	w0, #0x6666                	// #26214
  40bdf4:	movk	w0, #0x3f66, lsl #16
  40bdf8:	fmov	s2, w0
  40bdfc:	fcmpe	s1, s2
  40be00:	b.pl	40be50 <__fxstatat@plt+0x9400>  // b.nfrst
  40be04:	mov	w0, #0xcccd                	// #52429
  40be08:	ldr	s3, [x3, #12]
  40be0c:	movk	w0, #0x3f8c, lsl #16
  40be10:	fmov	s2, w0
  40be14:	fcmpe	s3, s2
  40be18:	b.le	40be50 <__fxstatat@plt+0x9400>
  40be1c:	ldr	s2, [x3]
  40be20:	fcmpe	s2, #0.0
  40be24:	b.lt	40be50 <__fxstatat@plt+0x9400>  // b.tstop
  40be28:	fadd	s0, s2, s0
  40be2c:	ldr	s2, [x3, #4]
  40be30:	fcmpe	s0, s2
  40be34:	b.pl	40be50 <__fxstatat@plt+0x9400>  // b.nfrst
  40be38:	fmov	s3, #1.000000000000000000e+00
  40be3c:	fcmpe	s2, s3
  40be40:	b.hi	40be50 <__fxstatat@plt+0x9400>  // b.pmore
  40be44:	fcmpe	s1, s0
  40be48:	mov	w0, #0x1                   	// #1
  40be4c:	b.gt	40be58 <__fxstatat@plt+0x9408>
  40be50:	mov	w0, #0x0                   	// #0
  40be54:	str	x2, [x1]
  40be58:	ret
  40be5c:	mov	w0, #0x1                   	// #1
  40be60:	ret
  40be64:	nop
  40be68:	tst	w1, #0xff
  40be6c:	b.ne	40be90 <__fxstatat@plt+0x9440>  // b.any
  40be70:	ucvtf	s1, x0
  40be74:	mov	w0, #0x5f800000            	// #1602224128
  40be78:	fmov	s2, w0
  40be7c:	mov	x0, #0x0                   	// #0
  40be80:	fdiv	s0, s1, s0
  40be84:	fcmpe	s0, s2
  40be88:	b.ge	40bf10 <__fxstatat@plt+0x94c0>  // b.tcont
  40be8c:	fcvtzu	x0, s0
  40be90:	cmp	x0, #0xa
  40be94:	mov	x1, #0xa                   	// #10
  40be98:	csel	x0, x0, x1, cs  // cs = hs, nlast
  40be9c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40bea0:	orr	x0, x0, #0x1
  40bea4:	movk	x5, #0xaaab
  40bea8:	cmn	x0, #0x1
  40beac:	b.eq	40bf0c <__fxstatat@plt+0x94bc>  // b.none
  40beb0:	umulh	x1, x0, x5
  40beb4:	cmp	x0, #0x9
  40beb8:	and	x2, x1, #0xfffffffffffffffe
  40bebc:	add	x1, x2, x1, lsr #1
  40bec0:	sub	x1, x0, x1
  40bec4:	b.ls	40befc <__fxstatat@plt+0x94ac>  // b.plast
  40bec8:	cbz	x1, 40bf00 <__fxstatat@plt+0x94b0>
  40becc:	mov	x4, #0x10                  	// #16
  40bed0:	mov	x3, #0x9                   	// #9
  40bed4:	mov	x2, #0x3                   	// #3
  40bed8:	b	40bee0 <__fxstatat@plt+0x9490>
  40bedc:	cbz	x1, 40bf00 <__fxstatat@plt+0x94b0>
  40bee0:	add	x2, x2, #0x2
  40bee4:	add	x3, x3, x4
  40bee8:	cmp	x0, x3
  40beec:	add	x4, x4, #0x8
  40bef0:	udiv	x1, x0, x2
  40bef4:	msub	x1, x1, x2, x0
  40bef8:	b.hi	40bedc <__fxstatat@plt+0x948c>  // b.pmore
  40befc:	cbnz	x1, 40bf14 <__fxstatat@plt+0x94c4>
  40bf00:	add	x0, x0, #0x2
  40bf04:	cmn	x0, #0x1
  40bf08:	b.ne	40beb0 <__fxstatat@plt+0x9460>  // b.any
  40bf0c:	mov	x0, #0x0                   	// #0
  40bf10:	ret
  40bf14:	cmp	xzr, x0, lsr #61
  40bf18:	cset	x1, ne  // ne = any
  40bf1c:	tbnz	x0, #60, 40bf0c <__fxstatat@plt+0x94bc>
  40bf20:	cbnz	x1, 40bf0c <__fxstatat@plt+0x94bc>
  40bf24:	ret
  40bf28:	stp	x29, x30, [sp, #-64]!
  40bf2c:	mov	x29, sp
  40bf30:	stp	x19, x20, [sp, #16]
  40bf34:	mov	x20, x0
  40bf38:	stp	x21, x22, [sp, #32]
  40bf3c:	ldp	x22, x0, [x1]
  40bf40:	stp	x23, x24, [sp, #48]
  40bf44:	mov	x23, x1
  40bf48:	and	w24, w2, #0xff
  40bf4c:	cmp	x22, x0
  40bf50:	b.cc	40bf64 <__fxstatat@plt+0x9514>  // b.lo, b.ul, b.last
  40bf54:	b	40bfc4 <__fxstatat@plt+0x9574>
  40bf58:	add	x22, x22, #0x10
  40bf5c:	cmp	x0, x22
  40bf60:	b.ls	40bfc4 <__fxstatat@plt+0x9574>  // b.plast
  40bf64:	ldr	x21, [x22]
  40bf68:	cbz	x21, 40bf58 <__fxstatat@plt+0x9508>
  40bf6c:	ldr	x19, [x22, #8]
  40bf70:	cbz	x19, 40bfac <__fxstatat@plt+0x955c>
  40bf74:	nop
  40bf78:	ldr	x21, [x19]
  40bf7c:	mov	x0, x20
  40bf80:	mov	x1, x21
  40bf84:	bl	40bc58 <__fxstatat@plt+0x9208>
  40bf88:	ldr	x3, [x0]
  40bf8c:	mov	x2, x19
  40bf90:	ldr	x19, [x19, #8]
  40bf94:	cbz	x3, 40bfe0 <__fxstatat@plt+0x9590>
  40bf98:	ldr	x1, [x0, #8]
  40bf9c:	str	x1, [x2, #8]
  40bfa0:	str	x2, [x0, #8]
  40bfa4:	cbnz	x19, 40bf78 <__fxstatat@plt+0x9528>
  40bfa8:	ldr	x21, [x22]
  40bfac:	str	xzr, [x22, #8]
  40bfb0:	cbz	w24, 40c008 <__fxstatat@plt+0x95b8>
  40bfb4:	ldr	x0, [x23, #8]
  40bfb8:	add	x22, x22, #0x10
  40bfbc:	cmp	x0, x22
  40bfc0:	b.hi	40bf64 <__fxstatat@plt+0x9514>  // b.pmore
  40bfc4:	mov	w24, #0x1                   	// #1
  40bfc8:	mov	w0, w24
  40bfcc:	ldp	x19, x20, [sp, #16]
  40bfd0:	ldp	x21, x22, [sp, #32]
  40bfd4:	ldp	x23, x24, [sp, #48]
  40bfd8:	ldp	x29, x30, [sp], #64
  40bfdc:	ret
  40bfe0:	ldr	x1, [x20, #24]
  40bfe4:	str	x21, [x0]
  40bfe8:	add	x1, x1, #0x1
  40bfec:	str	x1, [x20, #24]
  40bff0:	str	xzr, [x2]
  40bff4:	ldr	x0, [x20, #72]
  40bff8:	str	x0, [x2, #8]
  40bffc:	str	x2, [x20, #72]
  40c000:	cbnz	x19, 40bf78 <__fxstatat@plt+0x9528>
  40c004:	b	40bfa8 <__fxstatat@plt+0x9558>
  40c008:	mov	x1, x21
  40c00c:	mov	x0, x20
  40c010:	bl	40bc58 <__fxstatat@plt+0x9208>
  40c014:	mov	x19, x0
  40c018:	ldr	x0, [x0]
  40c01c:	cbz	x0, 40c054 <__fxstatat@plt+0x9604>
  40c020:	ldr	x0, [x20, #72]
  40c024:	cbz	x0, 40c068 <__fxstatat@plt+0x9618>
  40c028:	ldr	x1, [x0, #8]
  40c02c:	str	x1, [x20, #72]
  40c030:	ldr	x1, [x19, #8]
  40c034:	stp	x21, x1, [x0]
  40c038:	str	x0, [x19, #8]
  40c03c:	ldr	x1, [x23, #24]
  40c040:	str	xzr, [x22]
  40c044:	sub	x1, x1, #0x1
  40c048:	str	x1, [x23, #24]
  40c04c:	ldr	x0, [x23, #8]
  40c050:	b	40bf58 <__fxstatat@plt+0x9508>
  40c054:	ldr	x0, [x20, #24]
  40c058:	str	x21, [x19]
  40c05c:	add	x0, x0, #0x1
  40c060:	str	x0, [x20, #24]
  40c064:	b	40c03c <__fxstatat@plt+0x95ec>
  40c068:	mov	x0, #0x10                  	// #16
  40c06c:	bl	4025f0 <malloc@plt>
  40c070:	cbnz	x0, 40c030 <__fxstatat@plt+0x95e0>
  40c074:	mov	w0, w24
  40c078:	ldp	x19, x20, [sp, #16]
  40c07c:	ldp	x21, x22, [sp, #32]
  40c080:	ldp	x23, x24, [sp, #48]
  40c084:	ldp	x29, x30, [sp], #64
  40c088:	ret
  40c08c:	nop
  40c090:	ldr	x0, [x0, #16]
  40c094:	ret
  40c098:	ldr	x0, [x0, #24]
  40c09c:	ret
  40c0a0:	ldr	x0, [x0, #32]
  40c0a4:	ret
  40c0a8:	ldp	x3, x4, [x0]
  40c0ac:	mov	x0, #0x0                   	// #0
  40c0b0:	cmp	x3, x4
  40c0b4:	b.cc	40c0c8 <__fxstatat@plt+0x9678>  // b.lo, b.ul, b.last
  40c0b8:	b	40c100 <__fxstatat@plt+0x96b0>
  40c0bc:	add	x3, x3, #0x10
  40c0c0:	cmp	x3, x4
  40c0c4:	b.cs	40c100 <__fxstatat@plt+0x96b0>  // b.hs, b.nlast
  40c0c8:	ldr	x1, [x3]
  40c0cc:	cbz	x1, 40c0bc <__fxstatat@plt+0x966c>
  40c0d0:	ldr	x1, [x3, #8]
  40c0d4:	mov	x2, #0x1                   	// #1
  40c0d8:	cbz	x1, 40c0ec <__fxstatat@plt+0x969c>
  40c0dc:	nop
  40c0e0:	ldr	x1, [x1, #8]
  40c0e4:	add	x2, x2, #0x1
  40c0e8:	cbnz	x1, 40c0e0 <__fxstatat@plt+0x9690>
  40c0ec:	cmp	x0, x2
  40c0f0:	add	x3, x3, #0x10
  40c0f4:	csel	x0, x0, x2, cs  // cs = hs, nlast
  40c0f8:	cmp	x3, x4
  40c0fc:	b.cc	40c0c8 <__fxstatat@plt+0x9678>  // b.lo, b.ul, b.last
  40c100:	ret
  40c104:	nop
  40c108:	ldp	x3, x4, [x0]
  40c10c:	mov	x6, x0
  40c110:	mov	x2, #0x0                   	// #0
  40c114:	mov	x5, #0x0                   	// #0
  40c118:	cmp	x3, x4
  40c11c:	b.cc	40c130 <__fxstatat@plt+0x96e0>  // b.lo, b.ul, b.last
  40c120:	b	40c160 <__fxstatat@plt+0x9710>
  40c124:	add	x3, x3, #0x10
  40c128:	cmp	x3, x4
  40c12c:	b.cs	40c160 <__fxstatat@plt+0x9710>  // b.hs, b.nlast
  40c130:	ldr	x1, [x3]
  40c134:	cbz	x1, 40c124 <__fxstatat@plt+0x96d4>
  40c138:	ldr	x1, [x3, #8]
  40c13c:	add	x5, x5, #0x1
  40c140:	add	x2, x2, #0x1
  40c144:	cbz	x1, 40c124 <__fxstatat@plt+0x96d4>
  40c148:	ldr	x1, [x1, #8]
  40c14c:	add	x2, x2, #0x1
  40c150:	cbnz	x1, 40c148 <__fxstatat@plt+0x96f8>
  40c154:	add	x3, x3, #0x10
  40c158:	cmp	x3, x4
  40c15c:	b.cc	40c130 <__fxstatat@plt+0x96e0>  // b.lo, b.ul, b.last
  40c160:	ldr	x1, [x6, #24]
  40c164:	mov	w0, #0x0                   	// #0
  40c168:	cmp	x1, x5
  40c16c:	b.eq	40c174 <__fxstatat@plt+0x9724>  // b.none
  40c170:	ret
  40c174:	ldr	x0, [x6, #32]
  40c178:	cmp	x0, x2
  40c17c:	cset	w0, eq  // eq = none
  40c180:	ret
  40c184:	nop
  40c188:	stp	x29, x30, [sp, #-48]!
  40c18c:	mov	x29, sp
  40c190:	ldp	x4, x5, [x0]
  40c194:	stp	x19, x20, [sp, #16]
  40c198:	mov	x20, x1
  40c19c:	stp	x21, x22, [sp, #32]
  40c1a0:	mov	x19, #0x0                   	// #0
  40c1a4:	ldp	x21, x22, [x0, #16]
  40c1a8:	cmp	x4, x5
  40c1ac:	ldr	x3, [x0, #32]
  40c1b0:	b.cc	40c1c4 <__fxstatat@plt+0x9774>  // b.lo, b.ul, b.last
  40c1b4:	b	40c1f8 <__fxstatat@plt+0x97a8>
  40c1b8:	add	x4, x4, #0x10
  40c1bc:	cmp	x4, x5
  40c1c0:	b.cs	40c1f8 <__fxstatat@plt+0x97a8>  // b.hs, b.nlast
  40c1c4:	ldr	x0, [x4]
  40c1c8:	cbz	x0, 40c1b8 <__fxstatat@plt+0x9768>
  40c1cc:	ldr	x0, [x4, #8]
  40c1d0:	mov	x2, #0x1                   	// #1
  40c1d4:	cbz	x0, 40c1e4 <__fxstatat@plt+0x9794>
  40c1d8:	ldr	x0, [x0, #8]
  40c1dc:	add	x2, x2, #0x1
  40c1e0:	cbnz	x0, 40c1d8 <__fxstatat@plt+0x9788>
  40c1e4:	cmp	x19, x2
  40c1e8:	add	x4, x4, #0x10
  40c1ec:	csel	x19, x19, x2, cs  // cs = hs, nlast
  40c1f0:	cmp	x4, x5
  40c1f4:	b.cc	40c1c4 <__fxstatat@plt+0x9774>  // b.lo, b.ul, b.last
  40c1f8:	mov	x0, x20
  40c1fc:	mov	w1, #0x1                   	// #1
  40c200:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40c204:	add	x2, x2, #0xbb0
  40c208:	bl	4027e0 <__fprintf_chk@plt>
  40c20c:	mov	x3, x21
  40c210:	mov	x0, x20
  40c214:	mov	w1, #0x1                   	// #1
  40c218:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40c21c:	add	x2, x2, #0xbc8
  40c220:	bl	4027e0 <__fprintf_chk@plt>
  40c224:	ucvtf	d1, x22
  40c228:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  40c22c:	fmov	d2, x0
  40c230:	ucvtf	d0, x21
  40c234:	mov	x3, x22
  40c238:	mov	x0, x20
  40c23c:	mov	w1, #0x1                   	// #1
  40c240:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40c244:	fmul	d1, d1, d2
  40c248:	add	x2, x2, #0xbe0
  40c24c:	fdiv	d0, d1, d0
  40c250:	bl	4027e0 <__fprintf_chk@plt>
  40c254:	mov	x3, x19
  40c258:	mov	x0, x20
  40c25c:	ldp	x19, x20, [sp, #16]
  40c260:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40c264:	ldp	x21, x22, [sp, #32]
  40c268:	add	x2, x2, #0xc08
  40c26c:	ldp	x29, x30, [sp], #48
  40c270:	mov	w1, #0x1                   	// #1
  40c274:	b	4027e0 <__fprintf_chk@plt>
  40c278:	stp	x29, x30, [sp, #-48]!
  40c27c:	mov	x29, sp
  40c280:	stp	x19, x20, [sp, #16]
  40c284:	mov	x20, x1
  40c288:	str	x21, [sp, #32]
  40c28c:	mov	x21, x0
  40c290:	bl	40bc58 <__fxstatat@plt+0x9208>
  40c294:	ldr	x1, [x0]
  40c298:	cbz	x1, 40c2cc <__fxstatat@plt+0x987c>
  40c29c:	mov	x19, x0
  40c2a0:	b	40c2a8 <__fxstatat@plt+0x9858>
  40c2a4:	ldr	x1, [x19]
  40c2a8:	mov	x0, x20
  40c2ac:	cmp	x1, x20
  40c2b0:	b.eq	40c2e4 <__fxstatat@plt+0x9894>  // b.none
  40c2b4:	ldr	x2, [x21, #56]
  40c2b8:	blr	x2
  40c2bc:	tst	w0, #0xff
  40c2c0:	b.ne	40c2e0 <__fxstatat@plt+0x9890>  // b.any
  40c2c4:	ldr	x19, [x19, #8]
  40c2c8:	cbnz	x19, 40c2a4 <__fxstatat@plt+0x9854>
  40c2cc:	mov	x0, #0x0                   	// #0
  40c2d0:	ldp	x19, x20, [sp, #16]
  40c2d4:	ldr	x21, [sp, #32]
  40c2d8:	ldp	x29, x30, [sp], #48
  40c2dc:	ret
  40c2e0:	ldr	x20, [x19]
  40c2e4:	mov	x0, x20
  40c2e8:	ldp	x19, x20, [sp, #16]
  40c2ec:	ldr	x21, [sp, #32]
  40c2f0:	ldp	x29, x30, [sp], #48
  40c2f4:	ret
  40c2f8:	ldr	x1, [x0, #32]
  40c2fc:	cbz	x1, 40c328 <__fxstatat@plt+0x98d8>
  40c300:	ldp	x1, x2, [x0]
  40c304:	cmp	x1, x2
  40c308:	b.cc	40c31c <__fxstatat@plt+0x98cc>  // b.lo, b.ul, b.last
  40c30c:	b	40c330 <__fxstatat@plt+0x98e0>
  40c310:	add	x1, x1, #0x10
  40c314:	cmp	x1, x2
  40c318:	b.cs	40c330 <__fxstatat@plt+0x98e0>  // b.hs, b.nlast
  40c31c:	ldr	x0, [x1]
  40c320:	cbz	x0, 40c310 <__fxstatat@plt+0x98c0>
  40c324:	ret
  40c328:	mov	x0, #0x0                   	// #0
  40c32c:	ret
  40c330:	stp	x29, x30, [sp, #-16]!
  40c334:	mov	x29, sp
  40c338:	bl	402760 <abort@plt>
  40c33c:	nop
  40c340:	stp	x29, x30, [sp, #-32]!
  40c344:	mov	x29, sp
  40c348:	stp	x19, x20, [sp, #16]
  40c34c:	mov	x20, x0
  40c350:	mov	x19, x1
  40c354:	bl	40bc58 <__fxstatat@plt+0x9208>
  40c358:	mov	x3, x0
  40c35c:	mov	x2, x0
  40c360:	b	40c368 <__fxstatat@plt+0x9918>
  40c364:	cbz	x2, 40c378 <__fxstatat@plt+0x9928>
  40c368:	ldp	x4, x2, [x2]
  40c36c:	cmp	x4, x19
  40c370:	b.ne	40c364 <__fxstatat@plt+0x9914>  // b.any
  40c374:	cbnz	x2, 40c3a4 <__fxstatat@plt+0x9954>
  40c378:	ldr	x1, [x20, #8]
  40c37c:	b	40c388 <__fxstatat@plt+0x9938>
  40c380:	ldr	x0, [x3]
  40c384:	cbnz	x0, 40c398 <__fxstatat@plt+0x9948>
  40c388:	add	x3, x3, #0x10
  40c38c:	cmp	x1, x3
  40c390:	b.hi	40c380 <__fxstatat@plt+0x9930>  // b.pmore
  40c394:	mov	x0, #0x0                   	// #0
  40c398:	ldp	x19, x20, [sp, #16]
  40c39c:	ldp	x29, x30, [sp], #32
  40c3a0:	ret
  40c3a4:	ldr	x0, [x2]
  40c3a8:	ldp	x19, x20, [sp, #16]
  40c3ac:	ldp	x29, x30, [sp], #32
  40c3b0:	ret
  40c3b4:	nop
  40c3b8:	ldp	x5, x3, [x0]
  40c3bc:	mov	x6, x0
  40c3c0:	cmp	x3, x5
  40c3c4:	b.ls	40c414 <__fxstatat@plt+0x99c4>  // b.plast
  40c3c8:	sub	x4, x1, #0x8
  40c3cc:	mov	x0, #0x0                   	// #0
  40c3d0:	ldr	x1, [x5]
  40c3d4:	cbnz	x1, 40c3e8 <__fxstatat@plt+0x9998>
  40c3d8:	add	x5, x5, #0x10
  40c3dc:	cmp	x3, x5
  40c3e0:	b.hi	40c3d0 <__fxstatat@plt+0x9980>  // b.pmore
  40c3e4:	ret
  40c3e8:	mov	x1, x5
  40c3ec:	nop
  40c3f0:	cmp	x2, x0
  40c3f4:	b.ls	40c3e4 <__fxstatat@plt+0x9994>  // b.plast
  40c3f8:	add	x0, x0, #0x1
  40c3fc:	ldr	x3, [x1]
  40c400:	str	x3, [x4, x0, lsl #3]
  40c404:	ldr	x1, [x1, #8]
  40c408:	cbnz	x1, 40c3f0 <__fxstatat@plt+0x99a0>
  40c40c:	ldr	x3, [x6, #8]
  40c410:	b	40c3d8 <__fxstatat@plt+0x9988>
  40c414:	mov	x0, #0x0                   	// #0
  40c418:	ret
  40c41c:	nop
  40c420:	stp	x29, x30, [sp, #-64]!
  40c424:	mov	x29, sp
  40c428:	stp	x21, x22, [sp, #32]
  40c42c:	mov	x21, x1
  40c430:	stp	x23, x24, [sp, #48]
  40c434:	ldp	x23, x1, [x0]
  40c438:	stp	x19, x20, [sp, #16]
  40c43c:	cmp	x1, x23
  40c440:	b.ls	40c4ac <__fxstatat@plt+0x9a5c>  // b.plast
  40c444:	mov	x24, x0
  40c448:	mov	x22, x2
  40c44c:	mov	x20, #0x0                   	// #0
  40c450:	ldr	x0, [x23]
  40c454:	cbnz	x0, 40c47c <__fxstatat@plt+0x9a2c>
  40c458:	add	x23, x23, #0x10
  40c45c:	cmp	x1, x23
  40c460:	b.hi	40c450 <__fxstatat@plt+0x9a00>  // b.pmore
  40c464:	mov	x0, x20
  40c468:	ldp	x19, x20, [sp, #16]
  40c46c:	ldp	x21, x22, [sp, #32]
  40c470:	ldp	x23, x24, [sp, #48]
  40c474:	ldp	x29, x30, [sp], #64
  40c478:	ret
  40c47c:	mov	x19, x23
  40c480:	b	40c488 <__fxstatat@plt+0x9a38>
  40c484:	ldr	x0, [x19]
  40c488:	mov	x1, x22
  40c48c:	blr	x21
  40c490:	tst	w0, #0xff
  40c494:	b.eq	40c464 <__fxstatat@plt+0x9a14>  // b.none
  40c498:	ldr	x19, [x19, #8]
  40c49c:	add	x20, x20, #0x1
  40c4a0:	cbnz	x19, 40c484 <__fxstatat@plt+0x9a34>
  40c4a4:	ldr	x1, [x24, #8]
  40c4a8:	b	40c458 <__fxstatat@plt+0x9a08>
  40c4ac:	mov	x20, #0x0                   	// #0
  40c4b0:	b	40c464 <__fxstatat@plt+0x9a14>
  40c4b4:	nop
  40c4b8:	ldrb	w4, [x0]
  40c4bc:	mov	x2, #0x0                   	// #0
  40c4c0:	cbz	w4, 40c4e4 <__fxstatat@plt+0x9a94>
  40c4c4:	nop
  40c4c8:	lsl	x3, x2, #5
  40c4cc:	sub	x2, x3, x2
  40c4d0:	add	x2, x2, w4, uxtb
  40c4d4:	ldrb	w4, [x0, #1]!
  40c4d8:	udiv	x3, x2, x1
  40c4dc:	msub	x2, x3, x1, x2
  40c4e0:	cbnz	w4, 40c4c8 <__fxstatat@plt+0x9a78>
  40c4e4:	mov	x0, x2
  40c4e8:	ret
  40c4ec:	nop
  40c4f0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40c4f4:	add	x1, x1, #0xc20
  40c4f8:	ldp	x2, x3, [x1]
  40c4fc:	stp	x2, x3, [x0]
  40c500:	ldr	w1, [x1, #16]
  40c504:	str	w1, [x0, #16]
  40c508:	ret
  40c50c:	nop
  40c510:	stp	x29, x30, [sp, #-64]!
  40c514:	cmp	x2, #0x0
  40c518:	mov	x29, sp
  40c51c:	stp	x21, x22, [sp, #32]
  40c520:	mov	x22, x2
  40c524:	adrp	x2, 40b000 <__fxstatat@plt+0x85b0>
  40c528:	add	x2, x2, #0xc38
  40c52c:	stp	x19, x20, [sp, #16]
  40c530:	csel	x22, x2, x22, eq  // eq = none
  40c534:	cmp	x3, #0x0
  40c538:	adrp	x2, 40b000 <__fxstatat@plt+0x85b0>
  40c53c:	add	x2, x2, #0xc48
  40c540:	mov	x20, x1
  40c544:	csel	x21, x2, x3, eq  // eq = none
  40c548:	stp	x23, x24, [sp, #48]
  40c54c:	mov	x24, x0
  40c550:	mov	x23, x4
  40c554:	mov	x0, #0x50                  	// #80
  40c558:	bl	4025f0 <malloc@plt>
  40c55c:	mov	x19, x0
  40c560:	cbz	x0, 40c5c4 <__fxstatat@plt+0x9b74>
  40c564:	cmp	x20, #0x0
  40c568:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40c56c:	add	x1, x1, #0xc20
  40c570:	csel	x20, x1, x20, eq  // eq = none
  40c574:	str	x20, [x0, #40]!
  40c578:	bl	40bdc0 <__fxstatat@plt+0x9370>
  40c57c:	tst	w0, #0xff
  40c580:	b.eq	40c5dc <__fxstatat@plt+0x9b8c>  // b.none
  40c584:	ldrb	w1, [x20, #16]
  40c588:	mov	x0, x24
  40c58c:	ldr	s0, [x20, #8]
  40c590:	bl	40be68 <__fxstatat@plt+0x9418>
  40c594:	str	x0, [x19, #16]
  40c598:	mov	x20, x0
  40c59c:	cbz	x0, 40c5dc <__fxstatat@plt+0x9b8c>
  40c5a0:	mov	x1, #0x10                  	// #16
  40c5a4:	bl	4026c0 <calloc@plt>
  40c5a8:	str	x0, [x19]
  40c5ac:	cbz	x0, 40c5dc <__fxstatat@plt+0x9b8c>
  40c5b0:	add	x20, x0, x20, lsl #4
  40c5b4:	str	x20, [x19, #8]
  40c5b8:	stp	xzr, xzr, [x19, #24]
  40c5bc:	stp	x22, x21, [x19, #48]
  40c5c0:	stp	x23, xzr, [x19, #64]
  40c5c4:	mov	x0, x19
  40c5c8:	ldp	x19, x20, [sp, #16]
  40c5cc:	ldp	x21, x22, [sp, #32]
  40c5d0:	ldp	x23, x24, [sp, #48]
  40c5d4:	ldp	x29, x30, [sp], #64
  40c5d8:	ret
  40c5dc:	mov	x0, x19
  40c5e0:	mov	x19, #0x0                   	// #0
  40c5e4:	bl	402840 <free@plt>
  40c5e8:	mov	x0, x19
  40c5ec:	ldp	x19, x20, [sp, #16]
  40c5f0:	ldp	x21, x22, [sp, #32]
  40c5f4:	ldp	x23, x24, [sp, #48]
  40c5f8:	ldp	x29, x30, [sp], #64
  40c5fc:	ret
  40c600:	stp	x29, x30, [sp, #-48]!
  40c604:	mov	x29, sp
  40c608:	ldr	x1, [x0, #8]
  40c60c:	str	x21, [sp, #32]
  40c610:	ldr	x21, [x0]
  40c614:	stp	x19, x20, [sp, #16]
  40c618:	mov	x20, x0
  40c61c:	cmp	x21, x1
  40c620:	b.cc	40c634 <__fxstatat@plt+0x9be4>  // b.lo, b.ul, b.last
  40c624:	b	40c690 <__fxstatat@plt+0x9c40>
  40c628:	add	x21, x21, #0x10
  40c62c:	cmp	x1, x21
  40c630:	b.ls	40c690 <__fxstatat@plt+0x9c40>  // b.plast
  40c634:	ldr	x0, [x21]
  40c638:	cbz	x0, 40c628 <__fxstatat@plt+0x9bd8>
  40c63c:	ldr	x19, [x21, #8]
  40c640:	ldr	x1, [x20, #64]
  40c644:	cbz	x19, 40c670 <__fxstatat@plt+0x9c20>
  40c648:	cbz	x1, 40c658 <__fxstatat@plt+0x9c08>
  40c64c:	ldr	x0, [x19]
  40c650:	blr	x1
  40c654:	ldr	x1, [x20, #64]
  40c658:	ldr	x0, [x19, #8]
  40c65c:	ldr	x2, [x20, #72]
  40c660:	stp	xzr, x2, [x19]
  40c664:	str	x19, [x20, #72]
  40c668:	mov	x19, x0
  40c66c:	cbnz	x0, 40c648 <__fxstatat@plt+0x9bf8>
  40c670:	cbz	x1, 40c67c <__fxstatat@plt+0x9c2c>
  40c674:	ldr	x0, [x21]
  40c678:	blr	x1
  40c67c:	stp	xzr, xzr, [x21]
  40c680:	add	x21, x21, #0x10
  40c684:	ldr	x1, [x20, #8]
  40c688:	cmp	x1, x21
  40c68c:	b.hi	40c634 <__fxstatat@plt+0x9be4>  // b.pmore
  40c690:	ldr	x21, [sp, #32]
  40c694:	stp	xzr, xzr, [x20, #24]
  40c698:	ldp	x19, x20, [sp, #16]
  40c69c:	ldp	x29, x30, [sp], #48
  40c6a0:	ret
  40c6a4:	nop
  40c6a8:	stp	x29, x30, [sp, #-48]!
  40c6ac:	mov	x29, sp
  40c6b0:	str	x21, [sp, #32]
  40c6b4:	mov	x21, x0
  40c6b8:	ldr	x0, [x0, #64]
  40c6bc:	stp	x19, x20, [sp, #16]
  40c6c0:	ldp	x20, x1, [x21]
  40c6c4:	cbz	x0, 40c720 <__fxstatat@plt+0x9cd0>
  40c6c8:	ldr	x0, [x21, #32]
  40c6cc:	cbz	x0, 40c720 <__fxstatat@plt+0x9cd0>
  40c6d0:	cmp	x20, x1
  40c6d4:	b.cc	40c6e8 <__fxstatat@plt+0x9c98>  // b.lo, b.ul, b.last
  40c6d8:	b	40c750 <__fxstatat@plt+0x9d00>
  40c6dc:	add	x20, x20, #0x10
  40c6e0:	cmp	x1, x20
  40c6e4:	b.ls	40c71c <__fxstatat@plt+0x9ccc>  // b.plast
  40c6e8:	ldr	x0, [x20]
  40c6ec:	cbz	x0, 40c6dc <__fxstatat@plt+0x9c8c>
  40c6f0:	mov	x19, x20
  40c6f4:	b	40c6fc <__fxstatat@plt+0x9cac>
  40c6f8:	ldr	x0, [x19]
  40c6fc:	ldr	x1, [x21, #64]
  40c700:	blr	x1
  40c704:	ldr	x19, [x19, #8]
  40c708:	cbnz	x19, 40c6f8 <__fxstatat@plt+0x9ca8>
  40c70c:	ldr	x1, [x21, #8]
  40c710:	add	x20, x20, #0x10
  40c714:	cmp	x1, x20
  40c718:	b.hi	40c6e8 <__fxstatat@plt+0x9c98>  // b.pmore
  40c71c:	ldr	x20, [x21]
  40c720:	cmp	x20, x1
  40c724:	b.cs	40c750 <__fxstatat@plt+0x9d00>  // b.hs, b.nlast
  40c728:	ldr	x19, [x20, #8]
  40c72c:	cbz	x19, 40c744 <__fxstatat@plt+0x9cf4>
  40c730:	mov	x0, x19
  40c734:	ldr	x19, [x19, #8]
  40c738:	bl	402840 <free@plt>
  40c73c:	cbnz	x19, 40c730 <__fxstatat@plt+0x9ce0>
  40c740:	ldr	x1, [x21, #8]
  40c744:	add	x20, x20, #0x10
  40c748:	cmp	x1, x20
  40c74c:	b.hi	40c728 <__fxstatat@plt+0x9cd8>  // b.pmore
  40c750:	ldr	x19, [x21, #72]
  40c754:	cbz	x19, 40c768 <__fxstatat@plt+0x9d18>
  40c758:	mov	x0, x19
  40c75c:	ldr	x19, [x19, #8]
  40c760:	bl	402840 <free@plt>
  40c764:	cbnz	x19, 40c758 <__fxstatat@plt+0x9d08>
  40c768:	ldr	x0, [x21]
  40c76c:	bl	402840 <free@plt>
  40c770:	mov	x0, x21
  40c774:	ldp	x19, x20, [sp, #16]
  40c778:	ldr	x21, [sp, #32]
  40c77c:	ldp	x29, x30, [sp], #48
  40c780:	b	402840 <free@plt>
  40c784:	nop
  40c788:	stp	x29, x30, [sp, #-128]!
  40c78c:	mov	x29, sp
  40c790:	stp	x19, x20, [sp, #16]
  40c794:	mov	x19, x0
  40c798:	mov	x0, x1
  40c79c:	str	x21, [sp, #32]
  40c7a0:	ldr	x21, [x19, #40]
  40c7a4:	ldrb	w1, [x21, #16]
  40c7a8:	ldr	s0, [x21, #8]
  40c7ac:	bl	40be68 <__fxstatat@plt+0x9418>
  40c7b0:	cbz	x0, 40c878 <__fxstatat@plt+0x9e28>
  40c7b4:	ldr	x1, [x19, #16]
  40c7b8:	mov	x20, x0
  40c7bc:	cmp	x1, x0
  40c7c0:	b.eq	40c860 <__fxstatat@plt+0x9e10>  // b.none
  40c7c4:	mov	x1, #0x10                  	// #16
  40c7c8:	bl	4026c0 <calloc@plt>
  40c7cc:	str	x0, [sp, #48]
  40c7d0:	cbz	x0, 40c878 <__fxstatat@plt+0x9e28>
  40c7d4:	ldp	x7, x6, [x19, #48]
  40c7d8:	add	x3, x0, x20, lsl #4
  40c7dc:	ldp	x5, x4, [x19, #64]
  40c7e0:	add	x0, sp, #0x30
  40c7e4:	mov	x1, x19
  40c7e8:	mov	w2, #0x0                   	// #0
  40c7ec:	stp	x3, x20, [sp, #56]
  40c7f0:	stp	xzr, xzr, [sp, #72]
  40c7f4:	stp	x21, x7, [sp, #88]
  40c7f8:	stp	x6, x5, [sp, #104]
  40c7fc:	str	x4, [sp, #120]
  40c800:	bl	40bf28 <__fxstatat@plt+0x94d8>
  40c804:	ands	w20, w0, #0xff
  40c808:	b.ne	40c890 <__fxstatat@plt+0x9e40>  // b.any
  40c80c:	ldr	x0, [sp, #120]
  40c810:	str	x0, [x19, #72]
  40c814:	add	x1, sp, #0x30
  40c818:	mov	x0, x19
  40c81c:	mov	w2, #0x1                   	// #1
  40c820:	bl	40bf28 <__fxstatat@plt+0x94d8>
  40c824:	tst	w0, #0xff
  40c828:	b.eq	40c8d4 <__fxstatat@plt+0x9e84>  // b.none
  40c82c:	add	x1, sp, #0x30
  40c830:	mov	x0, x19
  40c834:	mov	w2, #0x0                   	// #0
  40c838:	bl	40bf28 <__fxstatat@plt+0x94d8>
  40c83c:	tst	w0, #0xff
  40c840:	b.eq	40c8d4 <__fxstatat@plt+0x9e84>  // b.none
  40c844:	ldr	x0, [sp, #48]
  40c848:	bl	402840 <free@plt>
  40c84c:	mov	w0, w20
  40c850:	ldp	x19, x20, [sp, #16]
  40c854:	ldr	x21, [sp, #32]
  40c858:	ldp	x29, x30, [sp], #128
  40c85c:	ret
  40c860:	mov	w20, #0x1                   	// #1
  40c864:	mov	w0, w20
  40c868:	ldp	x19, x20, [sp, #16]
  40c86c:	ldr	x21, [sp, #32]
  40c870:	ldp	x29, x30, [sp], #128
  40c874:	ret
  40c878:	mov	w20, #0x0                   	// #0
  40c87c:	mov	w0, w20
  40c880:	ldp	x19, x20, [sp, #16]
  40c884:	ldr	x21, [sp, #32]
  40c888:	ldp	x29, x30, [sp], #128
  40c88c:	ret
  40c890:	ldr	x0, [x19]
  40c894:	bl	402840 <free@plt>
  40c898:	ldr	x0, [sp, #48]
  40c89c:	str	x0, [x19]
  40c8a0:	ldr	x0, [sp, #56]
  40c8a4:	str	x0, [x19, #8]
  40c8a8:	ldr	x0, [sp, #64]
  40c8ac:	str	x0, [x19, #16]
  40c8b0:	ldr	x0, [sp, #72]
  40c8b4:	str	x0, [x19, #24]
  40c8b8:	ldr	x0, [sp, #120]
  40c8bc:	str	x0, [x19, #72]
  40c8c0:	mov	w0, w20
  40c8c4:	ldp	x19, x20, [sp, #16]
  40c8c8:	ldr	x21, [sp, #32]
  40c8cc:	ldp	x29, x30, [sp], #128
  40c8d0:	ret
  40c8d4:	bl	402760 <abort@plt>
  40c8d8:	stp	x29, x30, [sp, #-64]!
  40c8dc:	mov	x29, sp
  40c8e0:	stp	x19, x20, [sp, #16]
  40c8e4:	str	x21, [sp, #32]
  40c8e8:	cbz	x1, 40ca64 <__fxstatat@plt+0xa014>
  40c8ec:	mov	w3, #0x0                   	// #0
  40c8f0:	mov	x20, x2
  40c8f4:	mov	x19, x0
  40c8f8:	mov	x21, x1
  40c8fc:	add	x2, sp, #0x38
  40c900:	bl	40bca0 <__fxstatat@plt+0x9250>
  40c904:	mov	x3, x0
  40c908:	cbz	x0, 40c928 <__fxstatat@plt+0x9ed8>
  40c90c:	mov	w0, #0x0                   	// #0
  40c910:	cbz	x20, 40c918 <__fxstatat@plt+0x9ec8>
  40c914:	str	x3, [x20]
  40c918:	ldp	x19, x20, [sp, #16]
  40c91c:	ldr	x21, [sp, #32]
  40c920:	ldp	x29, x30, [sp], #64
  40c924:	ret
  40c928:	ldr	x0, [x19, #16]
  40c92c:	ldr	x1, [x19, #40]
  40c930:	ucvtf	s0, x0
  40c934:	ldr	x0, [x19, #24]
  40c938:	ldr	s2, [x1, #8]
  40c93c:	ucvtf	s1, x0
  40c940:	fmul	s0, s0, s2
  40c944:	fcmpe	s1, s0
  40c948:	b.gt	40c994 <__fxstatat@plt+0x9f44>
  40c94c:	ldr	x20, [sp, #56]
  40c950:	ldr	x0, [x20]
  40c954:	cbz	x0, 40c9f4 <__fxstatat@plt+0x9fa4>
  40c958:	ldr	x0, [x19, #72]
  40c95c:	cbz	x0, 40ca1c <__fxstatat@plt+0x9fcc>
  40c960:	ldr	x1, [x0, #8]
  40c964:	str	x1, [x19, #72]
  40c968:	ldr	x2, [x20, #8]
  40c96c:	ldr	x1, [x19, #32]
  40c970:	stp	x21, x2, [x0]
  40c974:	str	x0, [x20, #8]
  40c978:	add	x1, x1, #0x1
  40c97c:	str	x1, [x19, #32]
  40c980:	mov	w0, #0x1                   	// #1
  40c984:	ldp	x19, x20, [sp, #16]
  40c988:	ldr	x21, [sp, #32]
  40c98c:	ldp	x29, x30, [sp], #64
  40c990:	ret
  40c994:	add	x0, x19, #0x28
  40c998:	bl	40bdc0 <__fxstatat@plt+0x9370>
  40c99c:	ldr	x0, [x19, #16]
  40c9a0:	ldr	x1, [x19, #40]
  40c9a4:	ucvtf	s0, x0
  40c9a8:	ldr	x0, [x19, #24]
  40c9ac:	ldr	s2, [x1, #8]
  40c9b0:	ucvtf	s1, x0
  40c9b4:	fmul	s3, s2, s0
  40c9b8:	fcmpe	s1, s3
  40c9bc:	b.le	40c94c <__fxstatat@plt+0x9efc>
  40c9c0:	ldrb	w0, [x1, #16]
  40c9c4:	ldr	s1, [x1, #12]
  40c9c8:	fmul	s0, s0, s1
  40c9cc:	cbz	w0, 40ca30 <__fxstatat@plt+0x9fe0>
  40c9d0:	mov	w0, #0x5f800000            	// #1602224128
  40c9d4:	fmov	s1, w0
  40c9d8:	fcmpe	s0, s1
  40c9dc:	b.lt	40ca38 <__fxstatat@plt+0x9fe8>  // b.tstop
  40c9e0:	mov	w0, #0xffffffff            	// #-1
  40c9e4:	ldp	x19, x20, [sp, #16]
  40c9e8:	ldr	x21, [sp, #32]
  40c9ec:	ldp	x29, x30, [sp], #64
  40c9f0:	ret
  40c9f4:	ldp	x2, x1, [x19, #24]
  40c9f8:	str	x21, [x20]
  40c9fc:	mov	w0, #0x1                   	// #1
  40ca00:	ldr	x21, [sp, #32]
  40ca04:	add	x2, x2, #0x1
  40ca08:	add	x1, x1, #0x1
  40ca0c:	stp	x2, x1, [x19, #24]
  40ca10:	ldp	x19, x20, [sp, #16]
  40ca14:	ldp	x29, x30, [sp], #64
  40ca18:	ret
  40ca1c:	mov	x0, #0x10                  	// #16
  40ca20:	bl	4025f0 <malloc@plt>
  40ca24:	cbnz	x0, 40c968 <__fxstatat@plt+0x9f18>
  40ca28:	mov	w0, #0xffffffff            	// #-1
  40ca2c:	b	40c9e4 <__fxstatat@plt+0x9f94>
  40ca30:	fmul	s0, s0, s2
  40ca34:	b	40c9d0 <__fxstatat@plt+0x9f80>
  40ca38:	fcvtzu	x1, s0
  40ca3c:	mov	x0, x19
  40ca40:	bl	40c788 <__fxstatat@plt+0x9d38>
  40ca44:	tst	w0, #0xff
  40ca48:	b.eq	40c9e0 <__fxstatat@plt+0x9f90>  // b.none
  40ca4c:	add	x2, sp, #0x38
  40ca50:	mov	x1, x21
  40ca54:	mov	x0, x19
  40ca58:	mov	w3, #0x0                   	// #0
  40ca5c:	bl	40bca0 <__fxstatat@plt+0x9250>
  40ca60:	cbz	x0, 40c94c <__fxstatat@plt+0x9efc>
  40ca64:	bl	402760 <abort@plt>
  40ca68:	stp	x29, x30, [sp, #-48]!
  40ca6c:	mov	x29, sp
  40ca70:	add	x2, sp, #0x28
  40ca74:	str	x19, [sp, #16]
  40ca78:	mov	x19, x1
  40ca7c:	bl	40c8d8 <__fxstatat@plt+0x9e88>
  40ca80:	cmn	w0, #0x1
  40ca84:	b.eq	40caa0 <__fxstatat@plt+0xa050>  // b.none
  40ca88:	ldr	x1, [sp, #40]
  40ca8c:	cmp	w0, #0x0
  40ca90:	csel	x0, x1, x19, eq  // eq = none
  40ca94:	ldr	x19, [sp, #16]
  40ca98:	ldp	x29, x30, [sp], #48
  40ca9c:	ret
  40caa0:	mov	x0, #0x0                   	// #0
  40caa4:	ldr	x19, [sp, #16]
  40caa8:	ldp	x29, x30, [sp], #48
  40caac:	ret
  40cab0:	stp	x29, x30, [sp, #-64]!
  40cab4:	mov	w3, #0x1                   	// #1
  40cab8:	mov	x29, sp
  40cabc:	add	x2, sp, #0x38
  40cac0:	stp	x19, x20, [sp, #16]
  40cac4:	mov	x19, x0
  40cac8:	bl	40bca0 <__fxstatat@plt+0x9250>
  40cacc:	mov	x20, x0
  40cad0:	cbz	x0, 40caec <__fxstatat@plt+0xa09c>
  40cad4:	ldr	x1, [sp, #56]
  40cad8:	ldr	x0, [x19, #32]
  40cadc:	ldr	x1, [x1]
  40cae0:	sub	x0, x0, #0x1
  40cae4:	str	x0, [x19, #32]
  40cae8:	cbz	x1, 40cafc <__fxstatat@plt+0xa0ac>
  40caec:	mov	x0, x20
  40caf0:	ldp	x19, x20, [sp, #16]
  40caf4:	ldp	x29, x30, [sp], #64
  40caf8:	ret
  40cafc:	ldr	x0, [x19, #16]
  40cb00:	ldr	x1, [x19, #40]
  40cb04:	ucvtf	s1, x0
  40cb08:	ldr	x0, [x19, #24]
  40cb0c:	ldr	s0, [x1]
  40cb10:	sub	x0, x0, #0x1
  40cb14:	str	x0, [x19, #24]
  40cb18:	fmul	s1, s1, s0
  40cb1c:	ucvtf	s0, x0
  40cb20:	fcmpe	s0, s1
  40cb24:	b.pl	40caec <__fxstatat@plt+0xa09c>  // b.nfrst
  40cb28:	add	x0, x19, #0x28
  40cb2c:	bl	40bdc0 <__fxstatat@plt+0x9370>
  40cb30:	ldr	x0, [x19, #16]
  40cb34:	ldr	x1, [x19, #40]
  40cb38:	ucvtf	s0, x0
  40cb3c:	ldr	x0, [x19, #24]
  40cb40:	ldr	s1, [x1]
  40cb44:	ucvtf	s2, x0
  40cb48:	fmul	s1, s0, s1
  40cb4c:	fcmpe	s2, s1
  40cb50:	b.pl	40caec <__fxstatat@plt+0xa09c>  // b.nfrst
  40cb54:	ldrb	w0, [x1, #16]
  40cb58:	ldr	s1, [x1, #4]
  40cb5c:	fmul	s0, s0, s1
  40cb60:	cbnz	w0, 40cb6c <__fxstatat@plt+0xa11c>
  40cb64:	ldr	s1, [x1, #8]
  40cb68:	fmul	s0, s0, s1
  40cb6c:	fcvtzu	x1, s0
  40cb70:	mov	x0, x19
  40cb74:	bl	40c788 <__fxstatat@plt+0x9d38>
  40cb78:	tst	w0, #0xff
  40cb7c:	b.ne	40caec <__fxstatat@plt+0xa09c>  // b.any
  40cb80:	str	x21, [sp, #32]
  40cb84:	ldr	x21, [x19, #72]
  40cb88:	cbz	x21, 40cba0 <__fxstatat@plt+0xa150>
  40cb8c:	nop
  40cb90:	mov	x0, x21
  40cb94:	ldr	x21, [x21, #8]
  40cb98:	bl	402840 <free@plt>
  40cb9c:	cbnz	x21, 40cb90 <__fxstatat@plt+0xa140>
  40cba0:	ldr	x21, [sp, #32]
  40cba4:	str	xzr, [x19, #72]
  40cba8:	b	40caec <__fxstatat@plt+0xa09c>
  40cbac:	nop
  40cbb0:	stp	x29, x30, [sp, #-32]!
  40cbb4:	mov	x29, sp
  40cbb8:	stp	x19, x20, [sp, #16]
  40cbbc:	mov	x20, x0
  40cbc0:	mov	x19, x1
  40cbc4:	ldr	x0, [x0]
  40cbc8:	bl	413a20 <_obstack_memory_used@@Base+0x700>
  40cbcc:	ldr	x1, [x20, #8]
  40cbd0:	eor	x0, x0, x1
  40cbd4:	udiv	x1, x0, x19
  40cbd8:	msub	x0, x1, x19, x0
  40cbdc:	ldp	x19, x20, [sp, #16]
  40cbe0:	ldp	x29, x30, [sp], #32
  40cbe4:	ret
  40cbe8:	ldr	x0, [x0, #8]
  40cbec:	udiv	x2, x0, x1
  40cbf0:	msub	x0, x2, x1, x0
  40cbf4:	ret
  40cbf8:	mov	x2, x0
  40cbfc:	ldr	x0, [x1, #8]
  40cc00:	ldr	x3, [x2, #8]
  40cc04:	cmp	x3, x0
  40cc08:	b.eq	40cc14 <__fxstatat@plt+0xa1c4>  // b.none
  40cc0c:	mov	w0, #0x0                   	// #0
  40cc10:	ret
  40cc14:	ldr	x3, [x1, #16]
  40cc18:	mov	w0, #0x0                   	// #0
  40cc1c:	ldr	x4, [x2, #16]
  40cc20:	cmp	x4, x3
  40cc24:	b.ne	40cc10 <__fxstatat@plt+0xa1c0>  // b.any
  40cc28:	ldr	x1, [x1]
  40cc2c:	ldr	x0, [x2]
  40cc30:	b	411910 <__fxstatat@plt+0xeec0>
  40cc34:	nop
  40cc38:	mov	x2, x0
  40cc3c:	ldr	x3, [x0, #8]
  40cc40:	ldr	x0, [x1, #8]
  40cc44:	cmp	x3, x0
  40cc48:	b.eq	40cc54 <__fxstatat@plt+0xa204>  // b.none
  40cc4c:	mov	w0, #0x0                   	// #0
  40cc50:	ret
  40cc54:	ldr	x3, [x1, #16]
  40cc58:	mov	w0, #0x0                   	// #0
  40cc5c:	ldr	x4, [x2, #16]
  40cc60:	cmp	x4, x3
  40cc64:	b.eq	40cc6c <__fxstatat@plt+0xa21c>  // b.none
  40cc68:	ret
  40cc6c:	stp	x29, x30, [sp, #-16]!
  40cc70:	mov	x29, sp
  40cc74:	ldr	x1, [x1]
  40cc78:	ldr	x0, [x2]
  40cc7c:	bl	402800 <strcmp@plt>
  40cc80:	cmp	w0, #0x0
  40cc84:	cset	w0, eq  // eq = none
  40cc88:	ldp	x29, x30, [sp], #16
  40cc8c:	ret
  40cc90:	stp	x29, x30, [sp, #-32]!
  40cc94:	mov	x29, sp
  40cc98:	str	x19, [sp, #16]
  40cc9c:	mov	x19, x0
  40cca0:	ldr	x0, [x0]
  40cca4:	bl	402840 <free@plt>
  40cca8:	mov	x0, x19
  40ccac:	ldr	x19, [sp, #16]
  40ccb0:	ldp	x29, x30, [sp], #32
  40ccb4:	b	402840 <free@plt>
  40ccb8:	stp	x29, x30, [sp, #-48]!
  40ccbc:	mov	x29, sp
  40ccc0:	stp	x19, x20, [sp, #16]
  40ccc4:	mov	w19, w0
  40ccc8:	str	q0, [sp, #32]
  40cccc:	bl	414fc0 <_obstack_memory_used@@Base+0x1ca0>
  40ccd0:	mov	x20, x0
  40ccd4:	bl	4150e0 <_obstack_memory_used@@Base+0x1dc0>
  40ccd8:	mov	v2.16b, v0.16b
  40ccdc:	cbnz	w19, 40cd04 <__fxstatat@plt+0xa2b4>
  40cce0:	ldr	q0, [sp, #32]
  40cce4:	mov	v1.16b, v2.16b
  40cce8:	str	q2, [sp, #32]
  40ccec:	bl	414528 <_obstack_memory_used@@Base+0x1208>
  40ccf0:	ldr	q2, [sp, #32]
  40ccf4:	cbz	w0, 40cd04 <__fxstatat@plt+0xa2b4>
  40ccf8:	add	x0, x20, #0x1
  40ccfc:	bl	4150e0 <_obstack_memory_used@@Base+0x1dc0>
  40cd00:	mov	v2.16b, v0.16b
  40cd04:	mov	v0.16b, v2.16b
  40cd08:	ldp	x19, x20, [sp, #16]
  40cd0c:	ldp	x29, x30, [sp], #48
  40cd10:	ret
  40cd14:	nop
  40cd18:	stp	x29, x30, [sp, #-224]!
  40cd1c:	mov	x29, sp
  40cd20:	stp	x21, x22, [sp, #32]
  40cd24:	mov	w21, w2
  40cd28:	ands	w2, w2, #0x20
  40cd2c:	stp	x19, x20, [sp, #16]
  40cd30:	mov	x19, x0
  40cd34:	mov	w0, #0x3e8                 	// #1000
  40cd38:	stp	x25, x26, [sp, #64]
  40cd3c:	mov	w26, #0x400                 	// #1024
  40cd40:	csel	w0, w26, w0, ne  // ne = any
  40cd44:	mov	x20, x3
  40cd48:	stp	x23, x24, [sp, #48]
  40cd4c:	mov	x23, x1
  40cd50:	stp	x27, x28, [sp, #80]
  40cd54:	and	w27, w21, #0x3
  40cd58:	str	x4, [sp, #136]
  40cd5c:	stp	w0, w2, [sp, #168]
  40cd60:	bl	402580 <localeconv@plt>
  40cd64:	ldr	x28, [x0]
  40cd68:	mov	x25, x0
  40cd6c:	mov	x0, x28
  40cd70:	bl	402430 <strlen@plt>
  40cd74:	mov	x26, x0
  40cd78:	sub	x0, x0, #0x1
  40cd7c:	cmp	x0, #0xf
  40cd80:	b.ls	40cd90 <__fxstatat@plt+0xa340>  // b.plast
  40cd84:	adrp	x28, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40cd88:	add	x28, x28, #0x768
  40cd8c:	mov	x26, #0x1                   	// #1
  40cd90:	ldp	x24, x25, [x25, #8]
  40cd94:	add	x0, x23, #0x287
  40cd98:	str	x0, [sp, #160]
  40cd9c:	mov	x0, x24
  40cda0:	bl	402430 <strlen@plt>
  40cda4:	ldr	x1, [sp, #136]
  40cda8:	cmp	x0, #0x10
  40cdac:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40cdb0:	add	x0, x0, #0xf0
  40cdb4:	csel	x24, x0, x24, hi  // hi = pmore
  40cdb8:	cmp	x1, x20
  40cdbc:	b.hi	40cfc0 <__fxstatat@plt+0xa570>  // b.pmore
  40cdc0:	udiv	x0, x20, x1
  40cdc4:	msub	x1, x0, x1, x20
  40cdc8:	cbnz	x1, 40cddc <__fxstatat@plt+0xa38c>
  40cdcc:	mul	x4, x19, x0
  40cdd0:	udiv	x0, x4, x0
  40cdd4:	cmp	x0, x19
  40cdd8:	b.eq	40d238 <__fxstatat@plt+0xa7e8>  // b.none
  40cddc:	mov	x0, x20
  40cde0:	bl	4150e0 <_obstack_memory_used@@Base+0x1dc0>
  40cde4:	ldr	x0, [sp, #136]
  40cde8:	str	q0, [sp, #96]
  40cdec:	bl	4150e0 <_obstack_memory_used@@Base+0x1dc0>
  40cdf0:	mov	v1.16b, v0.16b
  40cdf4:	ldr	q2, [sp, #96]
  40cdf8:	mov	v0.16b, v2.16b
  40cdfc:	bl	413c08 <_obstack_memory_used@@Base+0x8e8>
  40ce00:	mov	x0, x19
  40ce04:	str	q0, [sp, #96]
  40ce08:	bl	4150e0 <_obstack_memory_used@@Base+0x1dc0>
  40ce0c:	mov	v1.16b, v0.16b
  40ce10:	ldr	q2, [sp, #96]
  40ce14:	mov	v0.16b, v2.16b
  40ce18:	bl	414770 <_obstack_memory_used@@Base+0x1450>
  40ce1c:	str	q0, [sp, #144]
  40ce20:	tbz	w21, #4, 40d08c <__fxstatat@plt+0xa63c>
  40ce24:	ldr	w0, [sp, #168]
  40ce28:	mov	w19, #0x0                   	// #0
  40ce2c:	bl	414f58 <_obstack_memory_used@@Base+0x1c38>
  40ce30:	str	q0, [sp, #96]
  40ce34:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40ce38:	add	x0, x0, #0xc90
  40ce3c:	ldr	q2, [x0]
  40ce40:	ldr	q1, [sp, #96]
  40ce44:	mov	v0.16b, v2.16b
  40ce48:	add	w19, w19, #0x1
  40ce4c:	bl	414770 <_obstack_memory_used@@Base+0x1450>
  40ce50:	str	q0, [sp, #112]
  40ce54:	ldr	q1, [sp, #96]
  40ce58:	bl	414770 <_obstack_memory_used@@Base+0x1450>
  40ce5c:	ldr	q1, [sp, #144]
  40ce60:	bl	414630 <_obstack_memory_used@@Base+0x1310>
  40ce64:	cmp	w0, #0x0
  40ce68:	ldr	q2, [sp, #112]
  40ce6c:	b.gt	40ce78 <__fxstatat@plt+0xa428>
  40ce70:	cmp	w19, #0x8
  40ce74:	b.ne	40ce40 <__fxstatat@plt+0xa3f0>  // b.any
  40ce78:	ldr	q0, [sp, #144]
  40ce7c:	mov	v1.16b, v2.16b
  40ce80:	add	x20, x26, #0x1
  40ce84:	bl	413c08 <_obstack_memory_used@@Base+0x8e8>
  40ce88:	str	q0, [sp, #96]
  40ce8c:	ldr	w0, [sp, #172]
  40ce90:	cmp	w0, #0x0
  40ce94:	cset	x28, eq  // eq = none
  40ce98:	cmp	w27, #0x1
  40ce9c:	add	x28, x28, #0x1
  40cea0:	add	x28, x28, x20
  40cea4:	b.eq	40d2fc <__fxstatat@plt+0xa8ac>  // b.none
  40cea8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40ceac:	add	x0, x0, #0xc80
  40ceb0:	ldr	q1, [x0]
  40ceb4:	bl	414630 <_obstack_memory_used@@Base+0x1310>
  40ceb8:	ldr	q0, [sp, #96]
  40cebc:	tbz	w0, #31, 40cec8 <__fxstatat@plt+0xa478>
  40cec0:	mov	w0, w27
  40cec4:	bl	40ccb8 <__fxstatat@plt+0xa268>
  40cec8:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40cecc:	add	x3, x3, #0xc40
  40ced0:	mov	x2, #0xffffffffffffffff    	// #-1
  40ced4:	mov	w1, #0x1                   	// #1
  40ced8:	mov	x0, x23
  40cedc:	bl	402440 <__sprintf_chk@plt>
  40cee0:	mov	x0, x23
  40cee4:	bl	402430 <strlen@plt>
  40cee8:	mov	x2, x0
  40ceec:	cmp	x0, x28
  40cef0:	b.ls	40d208 <__fxstatat@plt+0xa7b8>  // b.plast
  40cef4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40cef8:	add	x0, x0, #0xca0
  40cefc:	ldr	q0, [sp, #96]
  40cf00:	ldr	q1, [x0]
  40cf04:	bl	414770 <_obstack_memory_used@@Base+0x1450>
  40cf08:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40cf0c:	add	x0, x0, #0xc80
  40cf10:	str	q0, [sp, #96]
  40cf14:	ldr	q1, [x0]
  40cf18:	bl	414630 <_obstack_memory_used@@Base+0x1310>
  40cf1c:	ldr	q0, [sp, #96]
  40cf20:	tbz	w0, #31, 40cf2c <__fxstatat@plt+0xa4dc>
  40cf24:	mov	w0, w27
  40cf28:	bl	40ccb8 <__fxstatat@plt+0xa268>
  40cf2c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40cf30:	add	x0, x0, #0xca0
  40cf34:	ldr	q1, [x0]
  40cf38:	bl	413c08 <_obstack_memory_used@@Base+0x8e8>
  40cf3c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40cf40:	add	x3, x3, #0xc38
  40cf44:	mov	x2, #0xffffffffffffffff    	// #-1
  40cf48:	mov	w1, #0x1                   	// #1
  40cf4c:	mov	x0, x23
  40cf50:	bl	402440 <__sprintf_chk@plt>
  40cf54:	mov	x0, x23
  40cf58:	bl	402430 <strlen@plt>
  40cf5c:	mov	x2, x0
  40cf60:	mov	x20, x0
  40cf64:	ldr	x0, [sp, #160]
  40cf68:	mov	x1, x23
  40cf6c:	sub	x27, x0, x2
  40cf70:	add	x20, x27, x20
  40cf74:	mov	x0, x27
  40cf78:	bl	4023d0 <memmove@plt>
  40cf7c:	tbnz	w21, #2, 40d0f4 <__fxstatat@plt+0xa6a4>
  40cf80:	tbz	w21, #7, 40cf98 <__fxstatat@plt+0xa548>
  40cf84:	cmn	w19, #0x1
  40cf88:	b.eq	40d26c <__fxstatat@plt+0xa81c>  // b.none
  40cf8c:	and	w0, w21, #0x100
  40cf90:	orr	w1, w0, w19
  40cf94:	cbnz	w1, 40d340 <__fxstatat@plt+0xa8f0>
  40cf98:	ldr	x0, [sp, #160]
  40cf9c:	strb	wzr, [x0]
  40cfa0:	mov	x0, x27
  40cfa4:	ldp	x19, x20, [sp, #16]
  40cfa8:	ldp	x21, x22, [sp, #32]
  40cfac:	ldp	x23, x24, [sp, #48]
  40cfb0:	ldp	x25, x26, [sp, #64]
  40cfb4:	ldp	x27, x28, [sp, #80]
  40cfb8:	ldp	x29, x30, [sp], #224
  40cfbc:	ret
  40cfc0:	cbz	x20, 40cddc <__fxstatat@plt+0xa38c>
  40cfc4:	ldr	x0, [sp, #136]
  40cfc8:	udiv	x5, x0, x20
  40cfcc:	msub	x0, x5, x20, x0
  40cfd0:	cbnz	x0, 40cddc <__fxstatat@plt+0xa38c>
  40cfd4:	udiv	x4, x19, x5
  40cfd8:	msub	x19, x4, x5, x19
  40cfdc:	add	x19, x19, x19, lsl #2
  40cfe0:	lsl	x2, x19, #1
  40cfe4:	udiv	x1, x2, x5
  40cfe8:	msub	x2, x1, x5, x2
  40cfec:	mov	w3, w1
  40cff0:	lsl	x2, x2, #1
  40cff4:	cmp	x5, x2
  40cff8:	b.ls	40d348 <__fxstatat@plt+0xa8f8>  // b.plast
  40cffc:	cmp	x2, #0x0
  40d000:	cset	w1, ne  // ne = any
  40d004:	and	w22, w21, #0x10
  40d008:	tbz	w21, #4, 40d248 <__fxstatat@plt+0xa7f8>
  40d00c:	ldr	w0, [sp, #168]
  40d010:	mov	w19, #0x0                   	// #0
  40d014:	mov	w6, w0
  40d018:	cmp	x4, w0, uxtw
  40d01c:	b.cs	40d1bc <__fxstatat@plt+0xa76c>  // b.hs, b.nlast
  40d020:	cmp	w27, #0x1
  40d024:	ldr	x20, [sp, #160]
  40d028:	b.eq	40d250 <__fxstatat@plt+0xa800>  // b.none
  40d02c:	cbnz	w27, 40d050 <__fxstatat@plt+0xa600>
  40d030:	add	w1, w1, w3
  40d034:	cmp	w1, #0x0
  40d038:	b.le	40d050 <__fxstatat@plt+0xa600>
  40d03c:	add	x4, x4, #0x1
  40d040:	cbz	w22, 40d050 <__fxstatat@plt+0xa600>
  40d044:	ldr	w0, [sp, #168]
  40d048:	cmp	x4, w0, uxtw
  40d04c:	b.eq	40d388 <__fxstatat@plt+0xa938>  // b.none
  40d050:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  40d054:	mov	x27, x20
  40d058:	movk	x2, #0xcccd
  40d05c:	nop
  40d060:	umulh	x1, x4, x2
  40d064:	cmp	x4, #0x9
  40d068:	lsr	x1, x1, #3
  40d06c:	add	x0, x1, x1, lsl #2
  40d070:	sub	x0, x4, x0, lsl #1
  40d074:	mov	x4, x1
  40d078:	add	w0, w0, #0x30
  40d07c:	strb	w0, [x27, #-1]!
  40d080:	b.hi	40d060 <__fxstatat@plt+0xa610>  // b.pmore
  40d084:	tbz	w21, #2, 40cf80 <__fxstatat@plt+0xa530>
  40d088:	b	40d0f4 <__fxstatat@plt+0xa6a4>
  40d08c:	cmp	w27, #0x1
  40d090:	b.eq	40d0a8 <__fxstatat@plt+0xa658>  // b.none
  40d094:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40d098:	add	x0, x0, #0xc80
  40d09c:	ldr	q1, [x0]
  40d0a0:	bl	414630 <_obstack_memory_used@@Base+0x1310>
  40d0a4:	tbnz	w0, #31, 40d224 <__fxstatat@plt+0xa7d4>
  40d0a8:	ldr	q0, [sp, #144]
  40d0ac:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40d0b0:	add	x3, x3, #0xc38
  40d0b4:	mov	x2, #0xffffffffffffffff    	// #-1
  40d0b8:	mov	w1, #0x1                   	// #1
  40d0bc:	mov	x0, x23
  40d0c0:	bl	402440 <__sprintf_chk@plt>
  40d0c4:	mov	w19, #0xffffffff            	// #-1
  40d0c8:	mov	x0, x23
  40d0cc:	bl	402430 <strlen@plt>
  40d0d0:	mov	x2, x0
  40d0d4:	mov	x20, x0
  40d0d8:	ldr	x0, [sp, #160]
  40d0dc:	mov	x1, x23
  40d0e0:	sub	x27, x0, x2
  40d0e4:	add	x20, x27, x20
  40d0e8:	mov	x0, x27
  40d0ec:	bl	4023d0 <memmove@plt>
  40d0f0:	tbz	w21, #2, 40cf80 <__fxstatat@plt+0xa530>
  40d0f4:	mov	x0, x24
  40d0f8:	sub	x26, x20, x27
  40d0fc:	bl	402430 <strlen@plt>
  40d100:	mov	x22, #0xffffffffffffffff    	// #-1
  40d104:	mov	x28, x0
  40d108:	mov	x1, x27
  40d10c:	mov	x2, x26
  40d110:	add	x0, sp, #0xb0
  40d114:	mov	x3, #0x29                  	// #41
  40d118:	bl	4025a0 <__memcpy_chk@plt>
  40d11c:	b	40d154 <__fxstatat@plt+0xa704>
  40d120:	sub	x26, x26, x22
  40d124:	add	x0, sp, #0xb0
  40d128:	add	x1, x0, x26
  40d12c:	sub	x27, x20, x22
  40d130:	mov	x2, x22
  40d134:	sub	x20, x27, x28
  40d138:	mov	x0, x27
  40d13c:	bl	4023c0 <memcpy@plt>
  40d140:	cbz	x26, 40cf80 <__fxstatat@plt+0xa530>
  40d144:	mov	x2, x28
  40d148:	mov	x1, x24
  40d14c:	mov	x0, x20
  40d150:	bl	4023c0 <memcpy@plt>
  40d154:	ldrb	w0, [x25]
  40d158:	cmp	x22, x26
  40d15c:	csel	x22, x22, x26, ls  // ls = plast
  40d160:	cbz	w0, 40d120 <__fxstatat@plt+0xa6d0>
  40d164:	and	x4, x0, #0xff
  40d168:	cmp	w0, #0xff
  40d16c:	b.eq	40d18c <__fxstatat@plt+0xa73c>  // b.none
  40d170:	cmp	x26, w0, uxtb
  40d174:	add	x0, sp, #0xb0
  40d178:	csel	x22, x4, x26, cs  // cs = hs, nlast
  40d17c:	add	x25, x25, #0x1
  40d180:	sub	x26, x26, x22
  40d184:	add	x1, x0, x26
  40d188:	b	40d12c <__fxstatat@plt+0xa6dc>
  40d18c:	mov	x22, x26
  40d190:	add	x1, sp, #0xb0
  40d194:	add	x25, x25, #0x1
  40d198:	mov	x26, #0x0                   	// #0
  40d19c:	b	40d12c <__fxstatat@plt+0xa6dc>
  40d1a0:	cmp	w1, #0x0
  40d1a4:	cset	w1, ne  // ne = any
  40d1a8:	add	w19, w19, #0x1
  40d1ac:	cmp	x6, x2
  40d1b0:	b.hi	40d3c4 <__fxstatat@plt+0xa974>  // b.pmore
  40d1b4:	cmp	w19, #0x8
  40d1b8:	b.eq	40d020 <__fxstatat@plt+0xa5d0>  // b.none
  40d1bc:	udiv	x2, x4, x6
  40d1c0:	ldr	w5, [sp, #168]
  40d1c4:	asr	w8, w1, #1
  40d1c8:	msub	x0, x2, x6, x4
  40d1cc:	mov	x4, x2
  40d1d0:	add	w0, w0, w0, lsl #2
  40d1d4:	add	w0, w3, w0, lsl #1
  40d1d8:	udiv	w7, w0, w5
  40d1dc:	msub	w0, w7, w5, w0
  40d1e0:	mov	w3, w7
  40d1e4:	add	w0, w8, w0, lsl #1
  40d1e8:	add	w1, w1, w0
  40d1ec:	cmp	w5, w0
  40d1f0:	b.hi	40d1a0 <__fxstatat@plt+0xa750>  // b.pmore
  40d1f4:	ldr	w0, [sp, #168]
  40d1f8:	cmp	w0, w1
  40d1fc:	cset	w1, cc  // cc = lo, ul, last
  40d200:	add	w1, w1, #0x2
  40d204:	b	40d1a8 <__fxstatat@plt+0xa758>
  40d208:	tbz	w21, #3, 40d21c <__fxstatat@plt+0xa7cc>
  40d20c:	add	x0, x23, x2
  40d210:	ldurb	w0, [x0, #-1]
  40d214:	cmp	w0, #0x30
  40d218:	b.eq	40d368 <__fxstatat@plt+0xa918>  // b.none
  40d21c:	sub	x20, x2, x20
  40d220:	b	40d0d8 <__fxstatat@plt+0xa688>
  40d224:	ldr	q0, [sp, #144]
  40d228:	mov	w0, w27
  40d22c:	bl	40ccb8 <__fxstatat@plt+0xa268>
  40d230:	str	q0, [sp, #144]
  40d234:	b	40d0a8 <__fxstatat@plt+0xa658>
  40d238:	and	w22, w21, #0x10
  40d23c:	mov	w1, #0x0                   	// #0
  40d240:	mov	w3, #0x0                   	// #0
  40d244:	tbnz	w21, #4, 40d00c <__fxstatat@plt+0xa5bc>
  40d248:	mov	w19, #0xffffffff            	// #-1
  40d24c:	b	40d020 <__fxstatat@plt+0xa5d0>
  40d250:	and	x0, x4, #0x1
  40d254:	add	x1, x0, w1, sxtw
  40d258:	cmp	x1, #0x0
  40d25c:	cinc	w1, w3, ne  // ne = any
  40d260:	cmp	w1, #0x5
  40d264:	b.gt	40d03c <__fxstatat@plt+0xa5ec>
  40d268:	b	40d050 <__fxstatat@plt+0xa600>
  40d26c:	ldr	x0, [sp, #136]
  40d270:	cmp	x0, #0x1
  40d274:	b.ls	40d45c <__fxstatat@plt+0xaa0c>  // b.plast
  40d278:	ldr	w26, [sp, #168]
  40d27c:	mov	w19, #0x1                   	// #1
  40d280:	mov	x0, #0x1                   	// #1
  40d284:	nop
  40d288:	ldr	x1, [sp, #136]
  40d28c:	mul	x0, x0, x26
  40d290:	cmp	x1, x0
  40d294:	b.ls	40d2a4 <__fxstatat@plt+0xa854>  // b.plast
  40d298:	add	w19, w19, #0x1
  40d29c:	cmp	w19, #0x8
  40d2a0:	b.ne	40d288 <__fxstatat@plt+0xa838>  // b.any
  40d2a4:	and	w0, w21, #0x100
  40d2a8:	tbz	w21, #6, 40d2c0 <__fxstatat@plt+0xa870>
  40d2ac:	add	x1, x23, #0x288
  40d2b0:	str	x1, [sp, #160]
  40d2b4:	mov	w1, #0x20                  	// #32
  40d2b8:	strb	w1, [x23, #647]
  40d2bc:	cbz	w19, 40d4a8 <__fxstatat@plt+0xaa58>
  40d2c0:	ldr	w3, [sp, #172]
  40d2c4:	cmp	w3, #0x0
  40d2c8:	ccmp	w19, #0x1, #0x0, eq  // eq = none
  40d2cc:	b.eq	40d3ac <__fxstatat@plt+0xa95c>  // b.none
  40d2d0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40d2d4:	add	x2, x2, #0xcb0
  40d2d8:	ldr	x1, [sp, #160]
  40d2dc:	ldrb	w2, [x2, w19, sxtw]
  40d2e0:	strb	w2, [x1], #1
  40d2e4:	cbz	w0, 40d3bc <__fxstatat@plt+0xa96c>
  40d2e8:	cbnz	w3, 40d354 <__fxstatat@plt+0xa904>
  40d2ec:	mov	w0, #0x42                  	// #66
  40d2f0:	strb	w0, [x1], #1
  40d2f4:	str	x1, [sp, #160]
  40d2f8:	b	40cf98 <__fxstatat@plt+0xa548>
  40d2fc:	mov	w1, w27
  40d300:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40d304:	add	x3, x3, #0xc40
  40d308:	mov	x2, #0xffffffffffffffff    	// #-1
  40d30c:	mov	x0, x23
  40d310:	bl	402440 <__sprintf_chk@plt>
  40d314:	mov	x0, x23
  40d318:	bl	402430 <strlen@plt>
  40d31c:	mov	x2, x0
  40d320:	cmp	x0, x28
  40d324:	b.ls	40d208 <__fxstatat@plt+0xa7b8>  // b.plast
  40d328:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40d32c:	add	x0, x0, #0xca0
  40d330:	ldr	q0, [sp, #96]
  40d334:	ldr	q1, [x0]
  40d338:	bl	414770 <_obstack_memory_used@@Base+0x1450>
  40d33c:	b	40cf2c <__fxstatat@plt+0xa4dc>
  40d340:	tbz	w21, #6, 40d2bc <__fxstatat@plt+0xa86c>
  40d344:	b	40d2ac <__fxstatat@plt+0xa85c>
  40d348:	cset	w2, cc  // cc = lo, ul, last
  40d34c:	add	w1, w2, #0x2
  40d350:	b	40d004 <__fxstatat@plt+0xa5b4>
  40d354:	ldr	x2, [sp, #160]
  40d358:	mov	w0, #0x69                  	// #105
  40d35c:	add	x1, x2, #0x2
  40d360:	strb	w0, [x2, #1]
  40d364:	b	40d2ec <__fxstatat@plt+0xa89c>
  40d368:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40d36c:	add	x0, x0, #0xca0
  40d370:	ldr	q0, [sp, #96]
  40d374:	ldr	q1, [x0]
  40d378:	bl	414770 <_obstack_memory_used@@Base+0x1450>
  40d37c:	cmp	w27, #0x1
  40d380:	b.ne	40cf08 <__fxstatat@plt+0xa4b8>  // b.any
  40d384:	b	40cf2c <__fxstatat@plt+0xa4dc>
  40d388:	cmp	w19, #0x8
  40d38c:	b.eq	40d050 <__fxstatat@plt+0xa600>  // b.none
  40d390:	add	w19, w19, #0x1
  40d394:	tbz	w21, #3, 40d478 <__fxstatat@plt+0xaa28>
  40d398:	mov	w0, #0x31                  	// #49
  40d39c:	sturb	w0, [x20, #-1]
  40d3a0:	sub	x27, x20, #0x1
  40d3a4:	tbz	w21, #2, 40cf80 <__fxstatat@plt+0xa530>
  40d3a8:	b	40d0f4 <__fxstatat@plt+0xa6a4>
  40d3ac:	ldr	x1, [sp, #160]
  40d3b0:	mov	w2, #0x6b                  	// #107
  40d3b4:	strb	w2, [x1], #1
  40d3b8:	cbnz	w0, 40d2ec <__fxstatat@plt+0xa89c>
  40d3bc:	str	x1, [sp, #160]
  40d3c0:	b	40cf98 <__fxstatat@plt+0xa548>
  40d3c4:	cmp	x2, #0x9
  40d3c8:	b.hi	40d020 <__fxstatat@plt+0xa5d0>  // b.pmore
  40d3cc:	cmp	w27, #0x1
  40d3d0:	b.eq	40d448 <__fxstatat@plt+0xa9f8>  // b.none
  40d3d4:	cmp	w27, #0x0
  40d3d8:	cset	w0, eq  // eq = none
  40d3dc:	cmp	w1, #0x0
  40d3e0:	cset	w3, gt
  40d3e4:	and	w0, w0, w3
  40d3e8:	cbnz	w0, 40d434 <__fxstatat@plt+0xa9e4>
  40d3ec:	cbnz	w7, 40d4b4 <__fxstatat@plt+0xaa64>
  40d3f0:	ldr	x20, [sp, #160]
  40d3f4:	tbnz	w21, #3, 40d424 <__fxstatat@plt+0xa9d4>
  40d3f8:	mov	w0, #0x30                  	// #48
  40d3fc:	add	x20, x23, #0x286
  40d400:	strb	w0, [x23, #646]
  40d404:	sub	x20, x20, x26
  40d408:	mov	x1, x28
  40d40c:	mov	x2, x26
  40d410:	mov	x0, x20
  40d414:	str	x4, [sp, #96]
  40d418:	bl	4023c0 <memcpy@plt>
  40d41c:	ldr	x4, [sp, #96]
  40d420:	mov	w1, #0x0                   	// #0
  40d424:	cmp	w27, #0x1
  40d428:	b.eq	40d050 <__fxstatat@plt+0xa600>  // b.none
  40d42c:	mov	w3, #0x0                   	// #0
  40d430:	b	40d02c <__fxstatat@plt+0xa5dc>
  40d434:	cmp	w7, #0x9
  40d438:	b.eq	40d464 <__fxstatat@plt+0xaa14>  // b.none
  40d43c:	add	w0, w7, #0x31
  40d440:	and	w0, w0, #0xff
  40d444:	b	40d3fc <__fxstatat@plt+0xa9ac>
  40d448:	and	w0, w7, #0x1
  40d44c:	add	w0, w0, w1
  40d450:	cmp	w0, #0x2
  40d454:	cset	w0, gt
  40d458:	b	40d3e8 <__fxstatat@plt+0xa998>
  40d45c:	mov	w19, #0x0                   	// #0
  40d460:	b	40cf8c <__fxstatat@plt+0xa53c>
  40d464:	cmp	x2, #0x9
  40d468:	add	x4, x2, #0x1
  40d46c:	b.eq	40d49c <__fxstatat@plt+0xaa4c>  // b.none
  40d470:	mov	w1, #0x0                   	// #0
  40d474:	b	40d3f0 <__fxstatat@plt+0xa9a0>
  40d478:	mvn	x0, x26
  40d47c:	mov	w1, #0x30                  	// #48
  40d480:	sturb	w1, [x20, #-1]
  40d484:	add	x20, x20, x0
  40d488:	mov	x1, x28
  40d48c:	mov	x2, x26
  40d490:	mov	x0, x20
  40d494:	bl	4023c0 <memcpy@plt>
  40d498:	b	40d398 <__fxstatat@plt+0xa948>
  40d49c:	mov	w1, #0x0                   	// #0
  40d4a0:	ldr	x20, [sp, #160]
  40d4a4:	b	40d424 <__fxstatat@plt+0xa9d4>
  40d4a8:	ldr	x1, [sp, #160]
  40d4ac:	cbnz	w0, 40d2ec <__fxstatat@plt+0xa89c>
  40d4b0:	b	40cf98 <__fxstatat@plt+0xa548>
  40d4b4:	add	w0, w7, #0x30
  40d4b8:	and	w0, w0, #0xff
  40d4bc:	b	40d3fc <__fxstatat@plt+0xa9ac>
  40d4c0:	stp	x29, x30, [sp, #-80]!
  40d4c4:	mov	x29, sp
  40d4c8:	stp	x19, x20, [sp, #16]
  40d4cc:	mov	x19, x0
  40d4d0:	mov	x20, x2
  40d4d4:	stp	x21, x22, [sp, #32]
  40d4d8:	mov	x21, x1
  40d4dc:	cbz	x0, 40d61c <__fxstatat@plt+0xabcc>
  40d4e0:	str	x23, [sp, #48]
  40d4e4:	mov	w23, #0x0                   	// #0
  40d4e8:	ldrb	w0, [x19]
  40d4ec:	cmp	w0, #0x27
  40d4f0:	b.ne	40d4fc <__fxstatat@plt+0xaaac>  // b.any
  40d4f4:	add	x19, x19, #0x1
  40d4f8:	mov	w23, #0x4                   	// #4
  40d4fc:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40d500:	add	x22, x3, #0xcb0
  40d504:	add	x2, x22, #0x10
  40d508:	add	x1, x22, #0x18
  40d50c:	mov	x0, x19
  40d510:	mov	x3, #0x4                   	// #4
  40d514:	bl	40a6d0 <__fxstatat@plt+0x7c80>
  40d518:	tbnz	w0, #31, 40d54c <__fxstatat@plt+0xaafc>
  40d51c:	add	x3, x22, w0, sxtw #2
  40d520:	mov	x0, #0x1                   	// #1
  40d524:	ldr	w1, [x3, #16]
  40d528:	orr	w1, w23, w1
  40d52c:	ldr	x23, [sp, #48]
  40d530:	str	x0, [x20]
  40d534:	mov	w0, #0x0                   	// #0
  40d538:	str	w1, [x21]
  40d53c:	ldp	x19, x20, [sp, #16]
  40d540:	ldp	x21, x22, [sp, #32]
  40d544:	ldp	x29, x30, [sp], #80
  40d548:	ret
  40d54c:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40d550:	mov	x3, x20
  40d554:	add	x4, x4, #0xc68
  40d558:	add	x1, sp, #0x48
  40d55c:	mov	x0, x19
  40d560:	mov	w2, #0x0                   	// #0
  40d564:	bl	4129a0 <__fxstatat@plt+0xff50>
  40d568:	cbnz	w0, 40d5d8 <__fxstatat@plt+0xab88>
  40d56c:	ldrb	w1, [x19]
  40d570:	sub	w1, w1, #0x30
  40d574:	and	w1, w1, #0xff
  40d578:	cmp	w1, #0x9
  40d57c:	b.ls	40d5b8 <__fxstatat@plt+0xab68>  // b.plast
  40d580:	ldr	x1, [sp, #72]
  40d584:	b	40d59c <__fxstatat@plt+0xab4c>
  40d588:	ldrb	w3, [x19, #1]!
  40d58c:	sub	w3, w3, #0x30
  40d590:	and	w3, w3, #0xff
  40d594:	cmp	w3, #0x9
  40d598:	b.ls	40d5b8 <__fxstatat@plt+0xab68>  // b.plast
  40d59c:	cmp	x1, x19
  40d5a0:	b.ne	40d588 <__fxstatat@plt+0xab38>  // b.any
  40d5a4:	ldurb	w2, [x1, #-1]
  40d5a8:	cmp	w2, #0x42
  40d5ac:	b.eq	40d668 <__fxstatat@plt+0xac18>  // b.none
  40d5b0:	orr	w23, w23, #0x80
  40d5b4:	orr	w23, w23, #0x20
  40d5b8:	ldr	x1, [x20]
  40d5bc:	str	w23, [x21]
  40d5c0:	cbz	x1, 40d5e4 <__fxstatat@plt+0xab94>
  40d5c4:	ldp	x19, x20, [sp, #16]
  40d5c8:	ldp	x21, x22, [sp, #32]
  40d5cc:	ldr	x23, [sp, #48]
  40d5d0:	ldp	x29, x30, [sp], #80
  40d5d4:	ret
  40d5d8:	ldr	x1, [x20]
  40d5dc:	str	wzr, [x21]
  40d5e0:	cbnz	x1, 40d5c4 <__fxstatat@plt+0xab74>
  40d5e4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40d5e8:	add	x0, x0, #0xc58
  40d5ec:	bl	4029f0 <getenv@plt>
  40d5f0:	cmp	x0, #0x0
  40d5f4:	mov	x2, #0x400                 	// #1024
  40d5f8:	mov	x1, #0x200                 	// #512
  40d5fc:	csel	x1, x1, x2, ne  // ne = any
  40d600:	mov	w0, #0x4                   	// #4
  40d604:	ldr	x23, [sp, #48]
  40d608:	str	x1, [x20]
  40d60c:	ldp	x19, x20, [sp, #16]
  40d610:	ldp	x21, x22, [sp, #32]
  40d614:	ldp	x29, x30, [sp], #80
  40d618:	ret
  40d61c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  40d620:	add	x0, x0, #0x610
  40d624:	bl	4029f0 <getenv@plt>
  40d628:	mov	x19, x0
  40d62c:	cbnz	x0, 40d4e0 <__fxstatat@plt+0xaa90>
  40d630:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40d634:	add	x0, x0, #0xc48
  40d638:	bl	4029f0 <getenv@plt>
  40d63c:	mov	x19, x0
  40d640:	cbnz	x0, 40d4e0 <__fxstatat@plt+0xaa90>
  40d644:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40d648:	add	x0, x0, #0xc58
  40d64c:	bl	4029f0 <getenv@plt>
  40d650:	cbz	x0, 40d67c <__fxstatat@plt+0xac2c>
  40d654:	mov	x0, #0x200                 	// #512
  40d658:	str	x0, [x20]
  40d65c:	mov	w0, #0x0                   	// #0
  40d660:	str	wzr, [x21]
  40d664:	b	40d53c <__fxstatat@plt+0xaaec>
  40d668:	ldurb	w1, [x1, #-2]
  40d66c:	orr	w23, w23, #0x180
  40d670:	cmp	w1, #0x69
  40d674:	b.ne	40d5b8 <__fxstatat@plt+0xab68>  // b.any
  40d678:	b	40d5b4 <__fxstatat@plt+0xab64>
  40d67c:	mov	x0, #0x400                 	// #1024
  40d680:	str	x0, [x20]
  40d684:	mov	w0, #0x0                   	// #0
  40d688:	str	wzr, [x21]
  40d68c:	b	40d53c <__fxstatat@plt+0xaaec>
  40d690:	stp	x29, x30, [sp, #-48]!
  40d694:	mov	x29, sp
  40d698:	stp	x21, x22, [sp, #32]
  40d69c:	adrp	x21, 430000 <__progname@@GLIBC_2.17+0xa48>
  40d6a0:	stp	x19, x20, [sp, #16]
  40d6a4:	mov	w20, w0
  40d6a8:	ldr	x19, [x21, #1840]
  40d6ac:	cbnz	x19, 40d6bc <__fxstatat@plt+0xac6c>
  40d6b0:	b	40d6e4 <__fxstatat@plt+0xac94>
  40d6b4:	ldr	x19, [x19, #8]
  40d6b8:	cbz	x19, 40d6e4 <__fxstatat@plt+0xac94>
  40d6bc:	ldr	w1, [x19]
  40d6c0:	cmp	w1, w20
  40d6c4:	b.ne	40d6b4 <__fxstatat@plt+0xac64>  // b.any
  40d6c8:	ldrb	w0, [x19, #16]!
  40d6cc:	ldp	x21, x22, [sp, #32]
  40d6d0:	cmp	w0, #0x0
  40d6d4:	csel	x0, x19, xzr, ne  // ne = any
  40d6d8:	ldp	x19, x20, [sp, #16]
  40d6dc:	ldp	x29, x30, [sp], #48
  40d6e0:	ret
  40d6e4:	mov	w0, w20
  40d6e8:	bl	402810 <getpwuid@plt>
  40d6ec:	cbz	x0, 40d740 <__fxstatat@plt+0xacf0>
  40d6f0:	ldr	x22, [x0]
  40d6f4:	mov	x0, x22
  40d6f8:	bl	402430 <strlen@plt>
  40d6fc:	add	x0, x0, #0x18
  40d700:	and	x0, x0, #0xfffffffffffffff8
  40d704:	bl	411e78 <__fxstatat@plt+0xf428>
  40d708:	mov	x19, x0
  40d70c:	str	w20, [x0], #16
  40d710:	mov	x1, x22
  40d714:	bl	4028d0 <strcpy@plt>
  40d718:	ldr	x0, [x21, #1840]
  40d71c:	str	x0, [x19, #8]
  40d720:	str	x19, [x21, #1840]
  40d724:	ldrb	w0, [x19, #16]!
  40d728:	ldp	x21, x22, [sp, #32]
  40d72c:	cmp	w0, #0x0
  40d730:	csel	x0, x19, xzr, ne  // ne = any
  40d734:	ldp	x19, x20, [sp, #16]
  40d738:	ldp	x29, x30, [sp], #48
  40d73c:	ret
  40d740:	adrp	x22, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40d744:	mov	x0, #0x18                  	// #24
  40d748:	add	x22, x22, #0xf0
  40d74c:	b	40d704 <__fxstatat@plt+0xacb4>
  40d750:	stp	x29, x30, [sp, #-64]!
  40d754:	mov	x29, sp
  40d758:	stp	x21, x22, [sp, #32]
  40d75c:	adrp	x22, 430000 <__progname@@GLIBC_2.17+0xa48>
  40d760:	stp	x19, x20, [sp, #16]
  40d764:	mov	x20, x0
  40d768:	ldr	x19, [x22, #1840]
  40d76c:	cbz	x19, 40d7b0 <__fxstatat@plt+0xad60>
  40d770:	ldrb	w21, [x0]
  40d774:	b	40d780 <__fxstatat@plt+0xad30>
  40d778:	ldr	x19, [x19, #8]
  40d77c:	cbz	x19, 40d7b0 <__fxstatat@plt+0xad60>
  40d780:	ldrb	w2, [x19, #16]
  40d784:	cmp	w2, w21
  40d788:	b.ne	40d778 <__fxstatat@plt+0xad28>  // b.any
  40d78c:	mov	x1, x20
  40d790:	add	x0, x19, #0x10
  40d794:	bl	402800 <strcmp@plt>
  40d798:	cbnz	w0, 40d778 <__fxstatat@plt+0xad28>
  40d79c:	mov	x0, x19
  40d7a0:	ldp	x19, x20, [sp, #16]
  40d7a4:	ldp	x21, x22, [sp, #32]
  40d7a8:	ldp	x29, x30, [sp], #64
  40d7ac:	ret
  40d7b0:	str	x23, [sp, #48]
  40d7b4:	add	x23, x22, #0x730
  40d7b8:	ldr	x19, [x23, #8]
  40d7bc:	cbz	x19, 40d808 <__fxstatat@plt+0xadb8>
  40d7c0:	ldrb	w21, [x20]
  40d7c4:	b	40d7d0 <__fxstatat@plt+0xad80>
  40d7c8:	ldr	x19, [x19, #8]
  40d7cc:	cbz	x19, 40d808 <__fxstatat@plt+0xadb8>
  40d7d0:	ldrb	w2, [x19, #16]
  40d7d4:	cmp	w2, w21
  40d7d8:	b.ne	40d7c8 <__fxstatat@plt+0xad78>  // b.any
  40d7dc:	mov	x1, x20
  40d7e0:	add	x0, x19, #0x10
  40d7e4:	bl	402800 <strcmp@plt>
  40d7e8:	cbnz	w0, 40d7c8 <__fxstatat@plt+0xad78>
  40d7ec:	mov	x19, #0x0                   	// #0
  40d7f0:	mov	x0, x19
  40d7f4:	ldp	x19, x20, [sp, #16]
  40d7f8:	ldp	x21, x22, [sp, #32]
  40d7fc:	ldr	x23, [sp, #48]
  40d800:	ldp	x29, x30, [sp], #64
  40d804:	ret
  40d808:	mov	x0, x20
  40d80c:	bl	402690 <getpwnam@plt>
  40d810:	mov	x19, x0
  40d814:	mov	x0, x20
  40d818:	bl	402430 <strlen@plt>
  40d81c:	add	x0, x0, #0x18
  40d820:	and	x0, x0, #0xfffffffffffffff8
  40d824:	bl	411e78 <__fxstatat@plt+0xf428>
  40d828:	mov	x1, x20
  40d82c:	mov	x20, x0
  40d830:	add	x0, x0, #0x10
  40d834:	bl	4028d0 <strcpy@plt>
  40d838:	cbz	x19, 40d86c <__fxstatat@plt+0xae1c>
  40d83c:	ldr	x0, [x22, #1840]
  40d840:	str	x20, [x22, #1840]
  40d844:	ldr	w1, [x19, #16]
  40d848:	mov	x19, x20
  40d84c:	ldr	x23, [sp, #48]
  40d850:	str	w1, [x20]
  40d854:	str	x0, [x20, #8]
  40d858:	mov	x0, x19
  40d85c:	ldp	x19, x20, [sp, #16]
  40d860:	ldp	x21, x22, [sp, #32]
  40d864:	ldp	x29, x30, [sp], #64
  40d868:	ret
  40d86c:	ldr	x0, [x23, #8]
  40d870:	str	x0, [x20, #8]
  40d874:	mov	x0, x19
  40d878:	str	x20, [x23, #8]
  40d87c:	ldp	x19, x20, [sp, #16]
  40d880:	ldp	x21, x22, [sp, #32]
  40d884:	ldr	x23, [sp, #48]
  40d888:	ldp	x29, x30, [sp], #64
  40d88c:	ret
  40d890:	stp	x29, x30, [sp, #-48]!
  40d894:	mov	x29, sp
  40d898:	stp	x21, x22, [sp, #32]
  40d89c:	adrp	x21, 430000 <__progname@@GLIBC_2.17+0xa48>
  40d8a0:	add	x21, x21, #0x730
  40d8a4:	stp	x19, x20, [sp, #16]
  40d8a8:	mov	w20, w0
  40d8ac:	ldr	x19, [x21, #16]
  40d8b0:	cbnz	x19, 40d8c0 <__fxstatat@plt+0xae70>
  40d8b4:	b	40d8e8 <__fxstatat@plt+0xae98>
  40d8b8:	ldr	x19, [x19, #8]
  40d8bc:	cbz	x19, 40d8e8 <__fxstatat@plt+0xae98>
  40d8c0:	ldr	w1, [x19]
  40d8c4:	cmp	w1, w20
  40d8c8:	b.ne	40d8b8 <__fxstatat@plt+0xae68>  // b.any
  40d8cc:	ldrb	w0, [x19, #16]!
  40d8d0:	ldp	x21, x22, [sp, #32]
  40d8d4:	cmp	w0, #0x0
  40d8d8:	csel	x0, x19, xzr, ne  // ne = any
  40d8dc:	ldp	x19, x20, [sp, #16]
  40d8e0:	ldp	x29, x30, [sp], #48
  40d8e4:	ret
  40d8e8:	mov	w0, w20
  40d8ec:	bl	402a10 <getgrgid@plt>
  40d8f0:	cbz	x0, 40d944 <__fxstatat@plt+0xaef4>
  40d8f4:	ldr	x22, [x0]
  40d8f8:	mov	x0, x22
  40d8fc:	bl	402430 <strlen@plt>
  40d900:	add	x0, x0, #0x18
  40d904:	and	x0, x0, #0xfffffffffffffff8
  40d908:	bl	411e78 <__fxstatat@plt+0xf428>
  40d90c:	mov	x19, x0
  40d910:	str	w20, [x0], #16
  40d914:	mov	x1, x22
  40d918:	bl	4028d0 <strcpy@plt>
  40d91c:	ldr	x0, [x21, #16]
  40d920:	str	x0, [x19, #8]
  40d924:	str	x19, [x21, #16]
  40d928:	ldrb	w0, [x19, #16]!
  40d92c:	ldp	x21, x22, [sp, #32]
  40d930:	cmp	w0, #0x0
  40d934:	csel	x0, x19, xzr, ne  // ne = any
  40d938:	ldp	x19, x20, [sp, #16]
  40d93c:	ldp	x29, x30, [sp], #48
  40d940:	ret
  40d944:	adrp	x22, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40d948:	mov	x0, #0x18                  	// #24
  40d94c:	add	x22, x22, #0xf0
  40d950:	b	40d908 <__fxstatat@plt+0xaeb8>
  40d954:	nop
  40d958:	stp	x29, x30, [sp, #-48]!
  40d95c:	mov	x29, sp
  40d960:	stp	x21, x22, [sp, #32]
  40d964:	adrp	x22, 430000 <__progname@@GLIBC_2.17+0xa48>
  40d968:	add	x22, x22, #0x730
  40d96c:	stp	x19, x20, [sp, #16]
  40d970:	mov	x20, x0
  40d974:	ldr	x19, [x22, #16]
  40d978:	cbz	x19, 40d9bc <__fxstatat@plt+0xaf6c>
  40d97c:	ldrb	w21, [x0]
  40d980:	b	40d98c <__fxstatat@plt+0xaf3c>
  40d984:	ldr	x19, [x19, #8]
  40d988:	cbz	x19, 40d9bc <__fxstatat@plt+0xaf6c>
  40d98c:	ldrb	w2, [x19, #16]
  40d990:	cmp	w2, w21
  40d994:	b.ne	40d984 <__fxstatat@plt+0xaf34>  // b.any
  40d998:	mov	x1, x20
  40d99c:	add	x0, x19, #0x10
  40d9a0:	bl	402800 <strcmp@plt>
  40d9a4:	cbnz	w0, 40d984 <__fxstatat@plt+0xaf34>
  40d9a8:	mov	x0, x19
  40d9ac:	ldp	x19, x20, [sp, #16]
  40d9b0:	ldp	x21, x22, [sp, #32]
  40d9b4:	ldp	x29, x30, [sp], #48
  40d9b8:	ret
  40d9bc:	ldr	x19, [x22, #24]
  40d9c0:	cbz	x19, 40da08 <__fxstatat@plt+0xafb8>
  40d9c4:	ldrb	w21, [x20]
  40d9c8:	b	40d9d4 <__fxstatat@plt+0xaf84>
  40d9cc:	ldr	x19, [x19, #8]
  40d9d0:	cbz	x19, 40da08 <__fxstatat@plt+0xafb8>
  40d9d4:	ldrb	w2, [x19, #16]
  40d9d8:	cmp	w2, w21
  40d9dc:	b.ne	40d9cc <__fxstatat@plt+0xaf7c>  // b.any
  40d9e0:	mov	x1, x20
  40d9e4:	add	x0, x19, #0x10
  40d9e8:	bl	402800 <strcmp@plt>
  40d9ec:	cbnz	w0, 40d9cc <__fxstatat@plt+0xaf7c>
  40d9f0:	mov	x19, #0x0                   	// #0
  40d9f4:	mov	x0, x19
  40d9f8:	ldp	x19, x20, [sp, #16]
  40d9fc:	ldp	x21, x22, [sp, #32]
  40da00:	ldp	x29, x30, [sp], #48
  40da04:	ret
  40da08:	mov	x0, x20
  40da0c:	bl	4024e0 <getgrnam@plt>
  40da10:	mov	x19, x0
  40da14:	mov	x0, x20
  40da18:	bl	402430 <strlen@plt>
  40da1c:	add	x0, x0, #0x18
  40da20:	and	x0, x0, #0xfffffffffffffff8
  40da24:	bl	411e78 <__fxstatat@plt+0xf428>
  40da28:	mov	x1, x20
  40da2c:	mov	x20, x0
  40da30:	add	x0, x0, #0x10
  40da34:	bl	4028d0 <strcpy@plt>
  40da38:	cbz	x19, 40da68 <__fxstatat@plt+0xb018>
  40da3c:	ldr	w1, [x19, #16]
  40da40:	mov	x19, x20
  40da44:	ldr	x0, [x22, #16]
  40da48:	str	w1, [x20]
  40da4c:	str	x0, [x20, #8]
  40da50:	mov	x0, x19
  40da54:	str	x20, [x22, #16]
  40da58:	ldp	x19, x20, [sp, #16]
  40da5c:	ldp	x21, x22, [sp, #32]
  40da60:	ldp	x29, x30, [sp], #48
  40da64:	ret
  40da68:	ldr	x0, [x22, #24]
  40da6c:	str	x0, [x20, #8]
  40da70:	mov	x0, x19
  40da74:	str	x20, [x22, #24]
  40da78:	ldp	x19, x20, [sp, #16]
  40da7c:	ldp	x21, x22, [sp, #32]
  40da80:	ldp	x29, x30, [sp], #48
  40da84:	ret
  40da88:	strb	wzr, [x1, #20]
  40da8c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  40da90:	mov	x2, x0
  40da94:	movk	x4, #0xcccd
  40da98:	add	x0, x1, #0x14
  40da9c:	tbnz	x2, #63, 40dac4 <__fxstatat@plt+0xb074>
  40daa0:	umulh	x3, x2, x4
  40daa4:	lsr	x3, x3, #3
  40daa8:	add	x1, x3, x3, lsl #2
  40daac:	sub	x1, x2, x1, lsl #1
  40dab0:	mov	x2, x3
  40dab4:	add	w1, w1, #0x30
  40dab8:	strb	w1, [x0, #-1]!
  40dabc:	cbnz	x3, 40daa0 <__fxstatat@plt+0xb050>
  40dac0:	ret
  40dac4:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  40dac8:	mov	w5, #0x30                  	// #48
  40dacc:	movk	x6, #0x6667
  40dad0:	smulh	x1, x2, x6
  40dad4:	mov	x4, x0
  40dad8:	asr	x1, x1, #2
  40dadc:	sub	x1, x1, x2, asr #63
  40dae0:	add	x3, x1, x1, lsl #2
  40dae4:	sub	x3, x2, x3, lsl #1
  40dae8:	mov	x2, x1
  40daec:	sub	w1, w5, w3
  40daf0:	strb	w1, [x0, #-1]!
  40daf4:	cbnz	x2, 40dad0 <__fxstatat@plt+0xb080>
  40daf8:	mov	w1, #0x2d                  	// #45
  40dafc:	sturb	w1, [x0, #-1]
  40db00:	sub	x0, x4, #0x2
  40db04:	ret
  40db08:	mov	x3, x0
  40db0c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  40db10:	add	x0, x1, #0x14
  40db14:	movk	x4, #0xcccd
  40db18:	strb	wzr, [x1, #20]
  40db1c:	nop
  40db20:	umulh	x2, x3, x4
  40db24:	cmp	x3, #0x9
  40db28:	lsr	x2, x2, #3
  40db2c:	add	x1, x2, x2, lsl #2
  40db30:	sub	x1, x3, x1, lsl #1
  40db34:	mov	x3, x2
  40db38:	add	w1, w1, #0x30
  40db3c:	strb	w1, [x0, #-1]!
  40db40:	b.hi	40db20 <__fxstatat@plt+0xb0d0>  // b.pmore
  40db44:	ret
  40db48:	stp	x29, x30, [sp, #-112]!
  40db4c:	mov	x29, sp
  40db50:	stp	x19, x20, [sp, #16]
  40db54:	mov	x20, x1
  40db58:	mov	x19, x2
  40db5c:	stp	x21, x22, [sp, #32]
  40db60:	mov	x22, x3
  40db64:	mov	w21, w5
  40db68:	stp	x23, x24, [sp, #48]
  40db6c:	mov	w23, w4
  40db70:	stp	x25, x26, [sp, #64]
  40db74:	mov	x26, x0
  40db78:	stp	x27, x28, [sp, #80]
  40db7c:	bl	402430 <strlen@plt>
  40db80:	mov	x27, x0
  40db84:	tbz	w21, #1, 40dcb4 <__fxstatat@plt+0xb264>
  40db88:	mov	x28, x27
  40db8c:	mov	x25, #0x0                   	// #0
  40db90:	mov	x24, #0x0                   	// #0
  40db94:	ldr	x0, [x22]
  40db98:	cmp	x0, x28
  40db9c:	b.cs	40dc90 <__fxstatat@plt+0xb240>  // b.hs, b.nlast
  40dba0:	mov	x27, x0
  40dba4:	mov	x1, #0x0                   	// #0
  40dba8:	str	x0, [x22]
  40dbac:	cbz	w23, 40dca8 <__fxstatat@plt+0xb258>
  40dbb0:	cmp	w23, #0x1
  40dbb4:	mov	x22, #0x0                   	// #0
  40dbb8:	b.eq	40dbc8 <__fxstatat@plt+0xb178>  // b.none
  40dbbc:	lsr	x22, x1, #1
  40dbc0:	and	x1, x1, #0x1
  40dbc4:	add	x1, x1, x22
  40dbc8:	add	x23, x1, x27
  40dbcc:	tbz	w21, #2, 40dbd8 <__fxstatat@plt+0xb188>
  40dbd0:	mov	x23, x27
  40dbd4:	mov	x1, #0x0                   	// #0
  40dbd8:	tst	x21, #0x8
  40dbdc:	csel	x22, x22, xzr, eq  // eq = none
  40dbe0:	cbz	x19, 40dc58 <__fxstatat@plt+0xb208>
  40dbe4:	sub	x19, x19, #0x1
  40dbe8:	cmp	x1, #0x0
  40dbec:	add	x19, x20, x19
  40dbf0:	mov	x0, x20
  40dbf4:	ccmp	x20, x19, #0x2, ne  // ne = any
  40dbf8:	b.cs	40dc14 <__fxstatat@plt+0xb1c4>  // b.hs, b.nlast
  40dbfc:	mov	w3, #0x20                  	// #32
  40dc00:	strb	w3, [x0], #1
  40dc04:	sub	x2, x20, x0
  40dc08:	cmn	x2, x1
  40dc0c:	ccmp	x19, x0, #0x0, ne  // ne = any
  40dc10:	b.hi	40dc00 <__fxstatat@plt+0xb1b0>  // b.pmore
  40dc14:	sub	x2, x19, x0
  40dc18:	strb	wzr, [x0]
  40dc1c:	cmp	x2, x27
  40dc20:	mov	x1, x26
  40dc24:	csel	x2, x2, x27, ls  // ls = plast
  40dc28:	bl	402860 <mempcpy@plt>
  40dc2c:	mov	x1, x0
  40dc30:	cmp	x22, #0x0
  40dc34:	ccmp	x19, x0, #0x0, ne  // ne = any
  40dc38:	b.ls	40dc54 <__fxstatat@plt+0xb204>  // b.plast
  40dc3c:	mov	w3, #0x20                  	// #32
  40dc40:	strb	w3, [x1], #1
  40dc44:	sub	x2, x22, x1
  40dc48:	cmn	x0, x2
  40dc4c:	ccmp	x19, x1, #0x0, ne  // ne = any
  40dc50:	b.hi	40dc40 <__fxstatat@plt+0xb1f0>  // b.pmore
  40dc54:	strb	wzr, [x1]
  40dc58:	add	x22, x22, x23
  40dc5c:	mov	x0, x25
  40dc60:	bl	402840 <free@plt>
  40dc64:	mov	x0, x24
  40dc68:	bl	402840 <free@plt>
  40dc6c:	mov	x0, x22
  40dc70:	ldp	x19, x20, [sp, #16]
  40dc74:	ldp	x21, x22, [sp, #32]
  40dc78:	ldp	x23, x24, [sp, #48]
  40dc7c:	ldp	x25, x26, [sp, #64]
  40dc80:	ldp	x27, x28, [sp, #80]
  40dc84:	ldp	x29, x30, [sp], #112
  40dc88:	ret
  40dc8c:	mov	x24, #0x0                   	// #0
  40dc90:	cmp	x28, x0
  40dc94:	b.cs	40de34 <__fxstatat@plt+0xb3e4>  // b.hs, b.nlast
  40dc98:	sub	x1, x0, x28
  40dc9c:	mov	x0, x28
  40dca0:	str	x0, [x22]
  40dca4:	cbnz	w23, 40dbb0 <__fxstatat@plt+0xb160>
  40dca8:	mov	x22, x1
  40dcac:	mov	x1, #0x0                   	// #0
  40dcb0:	b	40dbc8 <__fxstatat@plt+0xb178>
  40dcb4:	bl	402850 <__ctype_get_mb_cur_max@plt>
  40dcb8:	cmp	x0, #0x1
  40dcbc:	b.ls	40db88 <__fxstatat@plt+0xb138>  // b.plast
  40dcc0:	mov	x1, x26
  40dcc4:	mov	x2, #0x0                   	// #0
  40dcc8:	mov	x0, #0x0                   	// #0
  40dccc:	bl	402450 <mbstowcs@plt>
  40dcd0:	cmn	x0, #0x1
  40dcd4:	b.ne	40dcec <__fxstatat@plt+0xb29c>  // b.any
  40dcd8:	tbnz	w21, #0, 40db88 <__fxstatat@plt+0xb138>
  40dcdc:	mov	x25, #0x0                   	// #0
  40dce0:	mov	x24, #0x0                   	// #0
  40dce4:	mov	x22, #0xffffffffffffffff    	// #-1
  40dce8:	b	40dc5c <__fxstatat@plt+0xb20c>
  40dcec:	add	x28, x0, #0x1
  40dcf0:	lsl	x24, x28, #2
  40dcf4:	mov	x0, x24
  40dcf8:	bl	4025f0 <malloc@plt>
  40dcfc:	mov	x25, x0
  40dd00:	cbz	x0, 40ddfc <__fxstatat@plt+0xb3ac>
  40dd04:	mov	x2, x28
  40dd08:	mov	x1, x26
  40dd0c:	bl	402450 <mbstowcs@plt>
  40dd10:	cbz	x0, 40de00 <__fxstatat@plt+0xb3b0>
  40dd14:	add	x24, x25, x24
  40dd18:	stur	wzr, [x24, #-4]
  40dd1c:	ldr	w0, [x25]
  40dd20:	cbz	w0, 40de0c <__fxstatat@plt+0xb3bc>
  40dd24:	mov	x24, x25
  40dd28:	str	wzr, [sp, #104]
  40dd2c:	nop
  40dd30:	bl	4029c0 <iswprint@plt>
  40dd34:	cbnz	w0, 40dd48 <__fxstatat@plt+0xb2f8>
  40dd38:	mov	w0, #0x1                   	// #1
  40dd3c:	str	w0, [sp, #104]
  40dd40:	mov	w0, #0xfffd                	// #65533
  40dd44:	str	w0, [x24]
  40dd48:	ldr	w0, [x24, #4]!
  40dd4c:	cbnz	w0, 40dd30 <__fxstatat@plt+0xb2e0>
  40dd50:	mov	x1, x28
  40dd54:	mov	x0, x25
  40dd58:	bl	402620 <wcswidth@plt>
  40dd5c:	sxtw	x28, w0
  40dd60:	ldr	w0, [sp, #104]
  40dd64:	cbz	w0, 40de1c <__fxstatat@plt+0xb3cc>
  40dd68:	mov	x1, x25
  40dd6c:	mov	x2, #0x0                   	// #0
  40dd70:	mov	x0, #0x0                   	// #0
  40dd74:	bl	402930 <wcstombs@plt>
  40dd78:	add	x0, x0, #0x1
  40dd7c:	str	x0, [sp, #104]
  40dd80:	ldr	x0, [sp, #104]
  40dd84:	bl	4025f0 <malloc@plt>
  40dd88:	mov	x24, x0
  40dd8c:	cbz	x0, 40de40 <__fxstatat@plt+0xb3f0>
  40dd90:	ldr	w0, [x25]
  40dd94:	mov	x27, x25
  40dd98:	mov	x28, #0x0                   	// #0
  40dd9c:	ldr	x26, [x22]
  40dda0:	cbnz	w0, 40ddb4 <__fxstatat@plt+0xb364>
  40dda4:	b	40dddc <__fxstatat@plt+0xb38c>
  40dda8:	ldr	w0, [x27, #4]!
  40ddac:	mov	x28, x1
  40ddb0:	cbz	w0, 40dddc <__fxstatat@plt+0xb38c>
  40ddb4:	bl	402600 <wcwidth@plt>
  40ddb8:	sxtw	x1, w0
  40ddbc:	cmn	w0, #0x1
  40ddc0:	b.ne	40ddd0 <__fxstatat@plt+0xb380>  // b.any
  40ddc4:	mov	w0, #0xfffd                	// #65533
  40ddc8:	mov	x1, #0x1                   	// #1
  40ddcc:	str	w0, [x27]
  40ddd0:	add	x1, x1, x28
  40ddd4:	cmp	x26, x1
  40ddd8:	b.cs	40dda8 <__fxstatat@plt+0xb358>  // b.hs, b.nlast
  40dddc:	ldr	x2, [sp, #104]
  40dde0:	str	wzr, [x27]
  40dde4:	mov	x1, x25
  40dde8:	mov	x0, x24
  40ddec:	mov	x26, x24
  40ddf0:	bl	402930 <wcstombs@plt>
  40ddf4:	mov	x27, x0
  40ddf8:	b	40db94 <__fxstatat@plt+0xb144>
  40ddfc:	tbz	w21, #0, 40dcdc <__fxstatat@plt+0xb28c>
  40de00:	mov	x28, x27
  40de04:	mov	x24, #0x0                   	// #0
  40de08:	b	40db94 <__fxstatat@plt+0xb144>
  40de0c:	mov	x1, x28
  40de10:	mov	x0, x25
  40de14:	bl	402620 <wcswidth@plt>
  40de18:	sxtw	x28, w0
  40de1c:	ldr	x0, [x22]
  40de20:	cmp	x0, x28
  40de24:	b.cs	40dc8c <__fxstatat@plt+0xb23c>  // b.hs, b.nlast
  40de28:	add	x0, x27, #0x1
  40de2c:	str	x0, [sp, #104]
  40de30:	b	40dd80 <__fxstatat@plt+0xb330>
  40de34:	mov	x0, x28
  40de38:	mov	x1, #0x0                   	// #0
  40de3c:	b	40dba8 <__fxstatat@plt+0xb158>
  40de40:	tbnz	w21, #0, 40db94 <__fxstatat@plt+0xb144>
  40de44:	mov	x22, #0xffffffffffffffff    	// #-1
  40de48:	b	40dc5c <__fxstatat@plt+0xb20c>
  40de4c:	nop
  40de50:	stp	x29, x30, [sp, #-80]!
  40de54:	mov	x29, sp
  40de58:	str	x25, [sp, #64]
  40de5c:	ldr	x25, [x1]
  40de60:	stp	x21, x22, [sp, #32]
  40de64:	mov	x21, x1
  40de68:	mov	w22, w3
  40de6c:	stp	x23, x24, [sp, #48]
  40de70:	mov	x24, x0
  40de74:	mov	w23, w2
  40de78:	mov	x0, x25
  40de7c:	stp	x19, x20, [sp, #16]
  40de80:	mov	x19, #0x0                   	// #0
  40de84:	nop
  40de88:	add	x20, x0, #0x1
  40de8c:	mov	x1, x20
  40de90:	mov	x0, x19
  40de94:	bl	4026e0 <realloc@plt>
  40de98:	mov	x1, x0
  40de9c:	mov	x6, x19
  40dea0:	mov	w5, w22
  40dea4:	mov	w4, w23
  40dea8:	mov	x3, x21
  40deac:	mov	x2, x20
  40deb0:	mov	x0, x24
  40deb4:	mov	x19, x1
  40deb8:	cbz	x1, 40df18 <__fxstatat@plt+0xb4c8>
  40debc:	str	x25, [x21]
  40dec0:	bl	40db48 <__fxstatat@plt+0xb0f8>
  40dec4:	cmn	x0, #0x1
  40dec8:	b.eq	40def0 <__fxstatat@plt+0xb4a0>  // b.none
  40decc:	cmp	x20, x0
  40ded0:	b.ls	40de88 <__fxstatat@plt+0xb438>  // b.plast
  40ded4:	mov	x0, x19
  40ded8:	ldp	x19, x20, [sp, #16]
  40dedc:	ldp	x21, x22, [sp, #32]
  40dee0:	ldp	x23, x24, [sp, #48]
  40dee4:	ldr	x25, [sp, #64]
  40dee8:	ldp	x29, x30, [sp], #80
  40deec:	ret
  40def0:	mov	x0, x19
  40def4:	mov	x19, #0x0                   	// #0
  40def8:	bl	402840 <free@plt>
  40defc:	mov	x0, x19
  40df00:	ldp	x19, x20, [sp, #16]
  40df04:	ldp	x21, x22, [sp, #32]
  40df08:	ldp	x23, x24, [sp, #48]
  40df0c:	ldr	x25, [sp, #64]
  40df10:	ldp	x29, x30, [sp], #80
  40df14:	ret
  40df18:	mov	x0, x6
  40df1c:	bl	402840 <free@plt>
  40df20:	b	40ded4 <__fxstatat@plt+0xb484>
  40df24:	nop
  40df28:	stp	x29, x30, [sp, #-96]!
  40df2c:	mov	x29, sp
  40df30:	stp	x19, x20, [sp, #16]
  40df34:	add	x20, x0, x1
  40df38:	stp	x21, x22, [sp, #32]
  40df3c:	mov	w22, w2
  40df40:	stp	x23, x24, [sp, #48]
  40df44:	mov	x24, x0
  40df48:	bl	402850 <__ctype_get_mb_cur_max@plt>
  40df4c:	cmp	x0, #0x1
  40df50:	b.ls	40e084 <__fxstatat@plt+0xb634>  // b.plast
  40df54:	cmp	x24, x20
  40df58:	b.cs	40e108 <__fxstatat@plt+0xb6b8>  // b.hs, b.nlast
  40df5c:	and	w23, w22, #0x2
  40df60:	mov	w19, #0x0                   	// #0
  40df64:	mov	x21, #0x1                   	// #1
  40df68:	stp	x25, x26, [sp, #64]
  40df6c:	nop
  40df70:	ldrb	w3, [x24]
  40df74:	cmp	w3, #0x5f
  40df78:	b.hi	40e070 <__fxstatat@plt+0xb620>  // b.pmore
  40df7c:	cmp	w3, #0x40
  40df80:	b.hi	40e044 <__fxstatat@plt+0xb5f4>  // b.pmore
  40df84:	cmp	w3, #0x23
  40df88:	b.hi	40e034 <__fxstatat@plt+0xb5e4>  // b.pmore
  40df8c:	cmp	w3, #0x1f
  40df90:	b.hi	40e044 <__fxstatat@plt+0xb5f4>  // b.pmore
  40df94:	mov	w26, #0x7fffffff            	// #2147483647
  40df98:	str	xzr, [sp, #88]
  40df9c:	b	40dfbc <__fxstatat@plt+0xb56c>
  40dfa0:	cmp	w1, w0
  40dfa4:	b.lt	40e014 <__fxstatat@plt+0xb5c4>  // b.tstop
  40dfa8:	add	w19, w19, w0
  40dfac:	add	x24, x24, x25
  40dfb0:	add	x0, sp, #0x58
  40dfb4:	bl	402770 <mbsinit@plt>
  40dfb8:	cbnz	w0, 40e04c <__fxstatat@plt+0xb5fc>
  40dfbc:	add	x3, sp, #0x58
  40dfc0:	sub	x2, x20, x24
  40dfc4:	mov	x1, x24
  40dfc8:	add	x0, sp, #0x54
  40dfcc:	bl	412f48 <__fxstatat@plt+0x104f8>
  40dfd0:	cmn	x0, #0x1
  40dfd4:	b.eq	40e0d4 <__fxstatat@plt+0xb684>  // b.none
  40dfd8:	cmn	x0, #0x2
  40dfdc:	b.eq	40e0f8 <__fxstatat@plt+0xb6a8>  // b.none
  40dfe0:	cmp	x0, #0x0
  40dfe4:	csel	x25, x0, x21, ne  // ne = any
  40dfe8:	ldr	w0, [sp, #84]
  40dfec:	bl	402600 <wcwidth@plt>
  40dff0:	sub	w1, w26, w19
  40dff4:	tbz	w0, #31, 40dfa0 <__fxstatat@plt+0xb550>
  40dff8:	cbnz	w23, 40e0d8 <__fxstatat@plt+0xb688>
  40dffc:	ldr	w0, [sp, #84]
  40e000:	bl	402520 <iswcntrl@plt>
  40e004:	cbnz	w0, 40dfac <__fxstatat@plt+0xb55c>
  40e008:	cmp	w19, w26
  40e00c:	add	w19, w19, #0x1
  40e010:	b.ne	40dfac <__fxstatat@plt+0xb55c>  // b.any
  40e014:	ldp	x25, x26, [sp, #64]
  40e018:	mov	w19, #0x7fffffff            	// #2147483647
  40e01c:	mov	w0, w19
  40e020:	ldp	x19, x20, [sp, #16]
  40e024:	ldp	x21, x22, [sp, #32]
  40e028:	ldp	x23, x24, [sp, #48]
  40e02c:	ldp	x29, x30, [sp], #96
  40e030:	ret
  40e034:	sub	w3, w3, #0x25
  40e038:	and	w3, w3, #0xff
  40e03c:	cmp	w3, #0x1a
  40e040:	b.hi	40df94 <__fxstatat@plt+0xb544>  // b.pmore
  40e044:	add	x24, x24, #0x1
  40e048:	add	w19, w19, #0x1
  40e04c:	cmp	x24, x20
  40e050:	b.cc	40df70 <__fxstatat@plt+0xb520>  // b.lo, b.ul, b.last
  40e054:	mov	w0, w19
  40e058:	ldp	x19, x20, [sp, #16]
  40e05c:	ldp	x21, x22, [sp, #32]
  40e060:	ldp	x23, x24, [sp, #48]
  40e064:	ldp	x25, x26, [sp, #64]
  40e068:	ldp	x29, x30, [sp], #96
  40e06c:	ret
  40e070:	sub	w3, w3, #0x61
  40e074:	and	w3, w3, #0xff
  40e078:	cmp	w3, #0x1d
  40e07c:	b.ls	40e044 <__fxstatat@plt+0xb5f4>  // b.plast
  40e080:	b	40df94 <__fxstatat@plt+0xb544>
  40e084:	cmp	x24, x20
  40e088:	b.cs	40e108 <__fxstatat@plt+0xb6b8>  // b.hs, b.nlast
  40e08c:	bl	402820 <__ctype_b_loc@plt>
  40e090:	and	w22, w22, #0x2
  40e094:	mov	w19, #0x0                   	// #0
  40e098:	mov	w2, #0x7fffffff            	// #2147483647
  40e09c:	ldr	x1, [x0]
  40e0a0:	b	40e0bc <__fxstatat@plt+0xb66c>
  40e0a4:	tbnz	w0, #1, 40e0b4 <__fxstatat@plt+0xb664>
  40e0a8:	cmp	w19, w2
  40e0ac:	b.eq	40e01c <__fxstatat@plt+0xb5cc>  // b.none
  40e0b0:	add	w19, w19, #0x1
  40e0b4:	cmp	x20, x24
  40e0b8:	b.eq	40e01c <__fxstatat@plt+0xb5cc>  // b.none
  40e0bc:	ldrb	w0, [x24], #1
  40e0c0:	ldrh	w0, [x1, x0, lsl #1]
  40e0c4:	tbnz	w0, #14, 40e0a8 <__fxstatat@plt+0xb658>
  40e0c8:	cbz	w22, 40e0a4 <__fxstatat@plt+0xb654>
  40e0cc:	mov	w19, #0xffffffff            	// #-1
  40e0d0:	b	40e01c <__fxstatat@plt+0xb5cc>
  40e0d4:	tbz	w22, #0, 40e044 <__fxstatat@plt+0xb5f4>
  40e0d8:	mov	w19, #0xffffffff            	// #-1
  40e0dc:	mov	w0, w19
  40e0e0:	ldp	x19, x20, [sp, #16]
  40e0e4:	ldp	x21, x22, [sp, #32]
  40e0e8:	ldp	x23, x24, [sp, #48]
  40e0ec:	ldp	x25, x26, [sp, #64]
  40e0f0:	ldp	x29, x30, [sp], #96
  40e0f4:	ret
  40e0f8:	tbnz	w22, #0, 40e0d8 <__fxstatat@plt+0xb688>
  40e0fc:	add	w19, w19, #0x1
  40e100:	mov	x24, x20
  40e104:	b	40e04c <__fxstatat@plt+0xb5fc>
  40e108:	mov	w19, #0x0                   	// #0
  40e10c:	b	40e01c <__fxstatat@plt+0xb5cc>
  40e110:	stp	x29, x30, [sp, #-32]!
  40e114:	mov	x29, sp
  40e118:	stp	x19, x20, [sp, #16]
  40e11c:	mov	w20, w1
  40e120:	mov	x19, x0
  40e124:	bl	402430 <strlen@plt>
  40e128:	mov	x1, x0
  40e12c:	mov	w2, w20
  40e130:	mov	x0, x19
  40e134:	ldp	x19, x20, [sp, #16]
  40e138:	ldp	x29, x30, [sp], #32
  40e13c:	b	40df28 <__fxstatat@plt+0xb4d8>
  40e140:	stp	x29, x30, [sp, #-112]!
  40e144:	cmp	x1, #0x2
  40e148:	mov	x29, sp
  40e14c:	stp	x19, x20, [sp, #16]
  40e150:	mov	x20, x0
  40e154:	stp	x23, x24, [sp, #48]
  40e158:	mov	x23, x3
  40e15c:	b.hi	40e1a8 <__fxstatat@plt+0xb758>  // b.pmore
  40e160:	b.eq	40e174 <__fxstatat@plt+0xb724>  // b.none
  40e164:	ldp	x19, x20, [sp, #16]
  40e168:	ldp	x23, x24, [sp, #48]
  40e16c:	ldp	x29, x30, [sp], #112
  40e170:	ret
  40e174:	stp	x21, x22, [sp, #32]
  40e178:	ldp	x19, x21, [x0]
  40e17c:	mov	x0, x19
  40e180:	mov	x1, x21
  40e184:	blr	x3
  40e188:	cmp	w0, #0x0
  40e18c:	b.le	40e300 <__fxstatat@plt+0xb8b0>
  40e190:	stp	x21, x19, [x20]
  40e194:	ldp	x19, x20, [sp, #16]
  40e198:	ldp	x21, x22, [sp, #32]
  40e19c:	ldp	x23, x24, [sp, #48]
  40e1a0:	ldp	x29, x30, [sp], #112
  40e1a4:	ret
  40e1a8:	stp	x25, x26, [sp, #64]
  40e1ac:	lsr	x26, x1, #1
  40e1b0:	mov	x25, x1
  40e1b4:	add	x0, x0, x26, lsl #3
  40e1b8:	sub	x1, x1, x26
  40e1bc:	stp	x21, x22, [sp, #32]
  40e1c0:	stp	x27, x28, [sp, #80]
  40e1c4:	mov	x27, x2
  40e1c8:	bl	40e140 <__fxstatat@plt+0xb6f0>
  40e1cc:	cmp	x25, #0x3
  40e1d0:	b.ne	40e254 <__fxstatat@plt+0xb804>  // b.any
  40e1d4:	ldr	x28, [x20]
  40e1d8:	str	x28, [x27]
  40e1dc:	ldr	x22, [x20, x26, lsl #3]
  40e1e0:	mov	x0, x28
  40e1e4:	mov	x19, #0x0                   	// #0
  40e1e8:	mov	x21, x26
  40e1ec:	mov	x1, x22
  40e1f0:	blr	x23
  40e1f4:	mov	x24, #0x0                   	// #0
  40e1f8:	cmp	w0, #0x0
  40e1fc:	add	x0, x19, #0x1
  40e200:	b.le	40e238 <__fxstatat@plt+0xb7e8>
  40e204:	nop
  40e208:	str	x22, [x20, x19, lsl #3]
  40e20c:	add	x21, x21, #0x1
  40e210:	cmp	x25, x21
  40e214:	b.eq	40e308 <__fxstatat@plt+0xb8b8>  // b.none
  40e218:	ldr	x22, [x20, x21, lsl #3]
  40e21c:	mov	x19, x0
  40e220:	mov	x1, x22
  40e224:	mov	x0, x28
  40e228:	blr	x23
  40e22c:	cmp	w0, #0x0
  40e230:	add	x0, x19, #0x1
  40e234:	b.gt	40e208 <__fxstatat@plt+0xb7b8>
  40e238:	str	x28, [x20, x19, lsl #3]
  40e23c:	add	x24, x24, #0x1
  40e240:	cmp	x26, x24
  40e244:	b.eq	40e35c <__fxstatat@plt+0xb90c>  // b.none
  40e248:	mov	x19, x0
  40e24c:	ldr	x28, [x27, x24, lsl #3]
  40e250:	b	40e220 <__fxstatat@plt+0xb7d0>
  40e254:	lsr	x0, x25, #2
  40e258:	mov	x3, x23
  40e25c:	mov	x19, x0
  40e260:	sub	x1, x26, x0
  40e264:	mov	x2, x27
  40e268:	add	x0, x20, x0, lsl #3
  40e26c:	str	x19, [sp, #104]
  40e270:	bl	40e140 <__fxstatat@plt+0xb6f0>
  40e274:	mov	x1, x19
  40e278:	mov	x3, x23
  40e27c:	mov	x2, x27
  40e280:	mov	x0, x20
  40e284:	bl	40e140 <__fxstatat@plt+0xb6f0>
  40e288:	mov	x21, x19
  40e28c:	ldr	x28, [x20]
  40e290:	mov	x24, #0x0                   	// #0
  40e294:	ldr	x22, [x20, x19, lsl #3]
  40e298:	mov	x19, x27
  40e29c:	nop
  40e2a0:	mov	x1, x22
  40e2a4:	mov	x0, x28
  40e2a8:	add	x19, x19, #0x8
  40e2ac:	blr	x23
  40e2b0:	cmp	w0, #0x0
  40e2b4:	b.le	40e2e4 <__fxstatat@plt+0xb894>
  40e2b8:	stur	x22, [x19, #-8]
  40e2bc:	add	x21, x21, #0x1
  40e2c0:	cmp	x26, x21
  40e2c4:	b.eq	40e33c <__fxstatat@plt+0xb8ec>  // b.none
  40e2c8:	ldr	x22, [x20, x21, lsl #3]
  40e2cc:	mov	x0, x28
  40e2d0:	add	x19, x19, #0x8
  40e2d4:	mov	x1, x22
  40e2d8:	blr	x23
  40e2dc:	cmp	w0, #0x0
  40e2e0:	b.gt	40e2b8 <__fxstatat@plt+0xb868>
  40e2e4:	ldr	x0, [sp, #104]
  40e2e8:	stur	x28, [x19, #-8]
  40e2ec:	add	x24, x24, #0x1
  40e2f0:	cmp	x0, x24
  40e2f4:	b.eq	40e334 <__fxstatat@plt+0xb8e4>  // b.none
  40e2f8:	ldr	x28, [x20, x24, lsl #3]
  40e2fc:	b	40e2a0 <__fxstatat@plt+0xb850>
  40e300:	ldp	x21, x22, [sp, #32]
  40e304:	b	40e164 <__fxstatat@plt+0xb714>
  40e308:	sub	x2, x26, x24
  40e30c:	add	x1, x27, x24, lsl #3
  40e310:	add	x0, x20, x0, lsl #3
  40e314:	ldp	x19, x20, [sp, #16]
  40e318:	lsl	x2, x2, #3
  40e31c:	ldp	x21, x22, [sp, #32]
  40e320:	ldp	x23, x24, [sp, #48]
  40e324:	ldp	x25, x26, [sp, #64]
  40e328:	ldp	x27, x28, [sp, #80]
  40e32c:	ldp	x29, x30, [sp], #112
  40e330:	b	4023c0 <memcpy@plt>
  40e334:	mov	x24, x21
  40e338:	str	x26, [sp, #104]
  40e33c:	ldr	x0, [sp, #104]
  40e340:	add	x1, x20, x24, lsl #3
  40e344:	sub	x2, x0, x24
  40e348:	mov	x0, x19
  40e34c:	lsl	x2, x2, #3
  40e350:	bl	4023c0 <memcpy@plt>
  40e354:	ldr	x28, [x27]
  40e358:	b	40e1dc <__fxstatat@plt+0xb78c>
  40e35c:	ldp	x19, x20, [sp, #16]
  40e360:	ldp	x21, x22, [sp, #32]
  40e364:	ldp	x23, x24, [sp, #48]
  40e368:	ldp	x25, x26, [sp, #64]
  40e36c:	ldp	x27, x28, [sp, #80]
  40e370:	ldp	x29, x30, [sp], #112
  40e374:	ret
  40e378:	mov	x3, x2
  40e37c:	add	x2, x0, x1, lsl #3
  40e380:	b	40e140 <__fxstatat@plt+0xb6f0>
  40e384:	nop
  40e388:	stp	x29, x30, [sp, #-48]!
  40e38c:	mov	x29, sp
  40e390:	stp	x19, x20, [sp, #16]
  40e394:	mov	x20, x0
  40e398:	cbz	x2, 40e3d0 <__fxstatat@plt+0xb980>
  40e39c:	sub	x19, x2, #0x1
  40e3a0:	str	x21, [sp, #32]
  40e3a4:	mov	x21, x1
  40e3a8:	bl	402560 <__ctype_tolower_loc@plt>
  40e3ac:	nop
  40e3b0:	ldrb	w3, [x21, x19]
  40e3b4:	ldr	x2, [x0]
  40e3b8:	ldr	w2, [x2, x3, lsl #2]
  40e3bc:	strb	w2, [x20, x19]
  40e3c0:	sub	x19, x19, #0x1
  40e3c4:	cmn	x19, #0x1
  40e3c8:	b.ne	40e3b0 <__fxstatat@plt+0xb960>  // b.any
  40e3cc:	ldr	x21, [sp, #32]
  40e3d0:	mov	x0, x20
  40e3d4:	ldp	x19, x20, [sp, #16]
  40e3d8:	ldp	x29, x30, [sp], #48
  40e3dc:	ret
  40e3e0:	stp	x29, x30, [sp, #-48]!
  40e3e4:	mov	x29, sp
  40e3e8:	stp	x19, x20, [sp, #16]
  40e3ec:	mov	x20, x0
  40e3f0:	cbz	x2, 40e428 <__fxstatat@plt+0xb9d8>
  40e3f4:	sub	x19, x2, #0x1
  40e3f8:	str	x21, [sp, #32]
  40e3fc:	mov	x21, x1
  40e400:	bl	4026f0 <__ctype_toupper_loc@plt>
  40e404:	nop
  40e408:	ldrb	w3, [x21, x19]
  40e40c:	ldr	x2, [x0]
  40e410:	ldr	w2, [x2, x3, lsl #2]
  40e414:	strb	w2, [x20, x19]
  40e418:	sub	x19, x19, #0x1
  40e41c:	cmn	x19, #0x1
  40e420:	b.ne	40e408 <__fxstatat@plt+0xb9b8>  // b.any
  40e424:	ldr	x21, [sp, #32]
  40e428:	mov	x0, x20
  40e42c:	ldp	x19, x20, [sp, #16]
  40e430:	ldp	x29, x30, [sp], #48
  40e434:	ret
  40e438:	sub	sp, sp, #0x4f0
  40e43c:	adrp	x11, 416000 <_obstack_memory_used@@Base+0x2ce0>
  40e440:	add	x11, x11, #0xf0
  40e444:	stp	x29, x30, [sp, #16]
  40e448:	add	x29, sp, #0x10
  40e44c:	stp	x23, x24, [sp, #64]
  40e450:	mov	x24, x1
  40e454:	ldr	x23, [x3, #48]
  40e458:	stp	x19, x20, [sp, #32]
  40e45c:	mov	x20, x2
  40e460:	stp	x21, x22, [sp, #48]
  40e464:	cmp	x23, #0x0
  40e468:	csel	x23, x11, x23, eq  // eq = none
  40e46c:	stp	x25, x26, [sp, #80]
  40e470:	mov	x22, x0
  40e474:	mov	w19, w6
  40e478:	stp	x27, x28, [sp, #96]
  40e47c:	and	w25, w4, #0xff
  40e480:	ldr	w27, [x3, #8]
  40e484:	str	x7, [sp, #120]
  40e488:	str	w5, [sp, #140]
  40e48c:	cmp	w27, #0xc
  40e490:	b.le	40e54c <__fxstatat@plt+0xbafc>
  40e494:	sub	w27, w27, #0xc
  40e498:	ldrb	w0, [x20]
  40e49c:	cbz	w0, 40f630 <__fxstatat@plt+0xcbe0>
  40e4a0:	add	x1, sp, #0xda
  40e4a4:	mov	x26, #0x2500                	// #9472
  40e4a8:	mov	x21, #0x0                   	// #0
  40e4ac:	movk	x26, #0x1000, lsl #48
  40e4b0:	str	x1, [sp, #112]
  40e4b4:	add	x1, sp, #0xf1
  40e4b8:	str	x1, [sp, #128]
  40e4bc:	cmp	w0, #0x25
  40e4c0:	b.eq	40e580 <__fxstatat@plt+0xbb30>  // b.none
  40e4c4:	cmp	w19, #0x0
  40e4c8:	sub	x0, x24, x21
  40e4cc:	csel	w28, w19, wzr, ge  // ge = tcont
  40e4d0:	sxtw	x28, w28
  40e4d4:	cmp	x28, #0x0
  40e4d8:	csinc	x28, x28, xzr, ne  // ne = any
  40e4dc:	cmp	x0, x28
  40e4e0:	b.ls	40e524 <__fxstatat@plt+0xbad4>  // b.plast
  40e4e4:	cbz	x22, 40e4f8 <__fxstatat@plt+0xbaa8>
  40e4e8:	cmp	w19, #0x1
  40e4ec:	b.gt	40e55c <__fxstatat@plt+0xbb0c>
  40e4f0:	ldrb	w0, [x20]
  40e4f4:	strb	w0, [x22], #1
  40e4f8:	add	x21, x21, x28
  40e4fc:	mov	x4, x20
  40e500:	ldrb	w0, [x4, #1]
  40e504:	add	x20, x4, #0x1
  40e508:	mov	w19, #0xffffffff            	// #-1
  40e50c:	cbnz	w0, 40e4bc <__fxstatat@plt+0xba6c>
  40e510:	cmp	x22, #0x0
  40e514:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  40e518:	b.eq	40e528 <__fxstatat@plt+0xbad8>  // b.none
  40e51c:	strb	wzr, [x22]
  40e520:	b	40e528 <__fxstatat@plt+0xbad8>
  40e524:	mov	x21, #0x0                   	// #0
  40e528:	mov	x0, x21
  40e52c:	ldp	x29, x30, [sp, #16]
  40e530:	ldp	x19, x20, [sp, #32]
  40e534:	ldp	x21, x22, [sp, #48]
  40e538:	ldp	x23, x24, [sp, #64]
  40e53c:	ldp	x25, x26, [sp, #80]
  40e540:	ldp	x27, x28, [sp, #96]
  40e544:	add	sp, sp, #0x4f0
  40e548:	ret
  40e54c:	cmp	w27, #0x0
  40e550:	mov	w0, #0xc                   	// #12
  40e554:	csel	w27, w27, w0, ne  // ne = any
  40e558:	b	40e498 <__fxstatat@plt+0xba48>
  40e55c:	sxtw	x2, w19
  40e560:	mov	x0, x22
  40e564:	sub	x2, x2, #0x1
  40e568:	mov	w1, #0x20                  	// #32
  40e56c:	add	x22, x22, x2
  40e570:	str	x3, [sp, #144]
  40e574:	bl	402680 <memset@plt>
  40e578:	ldr	x3, [sp, #144]
  40e57c:	b	40e4f0 <__fxstatat@plt+0xbaa0>
  40e580:	mov	w12, w25
  40e584:	mov	w4, #0x0                   	// #0
  40e588:	mov	w5, #0x0                   	// #0
  40e58c:	mov	x7, #0x1                   	// #1
  40e590:	ldrb	w1, [x20, #1]!
  40e594:	sub	w0, w1, #0x23
  40e598:	mov	w28, w1
  40e59c:	and	w0, w0, #0xff
  40e5a0:	cmp	w0, #0x3c
  40e5a4:	b.hi	40e5c0 <__fxstatat@plt+0xbb70>  // b.pmore
  40e5a8:	lsl	x0, x7, x0
  40e5ac:	tst	x0, x26
  40e5b0:	b.ne	40e6bc <__fxstatat@plt+0xbc6c>  // b.any
  40e5b4:	tbnz	x0, #59, 40e6b4 <__fxstatat@plt+0xbc64>
  40e5b8:	and	w2, w0, #0x1
  40e5bc:	tbnz	w0, #0, 40e6ac <__fxstatat@plt+0xbc5c>
  40e5c0:	sub	w0, w1, #0x30
  40e5c4:	cmp	w0, #0x9
  40e5c8:	b.ls	40e6e8 <__fxstatat@plt+0xbc98>  // b.plast
  40e5cc:	cmp	w1, #0x45
  40e5d0:	b.eq	40e6dc <__fxstatat@plt+0xbc8c>  // b.none
  40e5d4:	cmp	w1, #0x4f
  40e5d8:	b.eq	40e6dc <__fxstatat@plt+0xbc8c>  // b.none
  40e5dc:	mov	w28, #0x0                   	// #0
  40e5e0:	cmp	w1, #0x7a
  40e5e4:	b.ls	40e6c4 <__fxstatat@plt+0xbc74>  // b.plast
  40e5e8:	sub	x0, x20, #0x1
  40e5ec:	add	w2, w20, #0x1
  40e5f0:	mov	x6, x0
  40e5f4:	sub	w28, w2, w0
  40e5f8:	ldrb	w1, [x0], #-1
  40e5fc:	cmp	w1, #0x25
  40e600:	b.ne	40e5f0 <__fxstatat@plt+0xbba0>  // b.any
  40e604:	cmp	w19, #0x0
  40e608:	sxtw	x28, w28
  40e60c:	csel	w0, w19, wzr, ge  // ge = tcont
  40e610:	mov	x4, x20
  40e614:	sub	x2, x24, x21
  40e618:	sxtw	x0, w0
  40e61c:	cmp	x0, x28
  40e620:	csel	x7, x0, x28, cs  // cs = hs, nlast
  40e624:	cmp	x7, x2
  40e628:	b.cs	40e524 <__fxstatat@plt+0xbad4>  // b.hs, b.nlast
  40e62c:	cbz	x22, 40e6a4 <__fxstatat@plt+0xbc54>
  40e630:	cmp	x28, x0
  40e634:	b.cs	40e67c <__fxstatat@plt+0xbc2c>  // b.hs, b.nlast
  40e638:	sxtw	x2, w19
  40e63c:	stp	x6, x4, [sp, #144]
  40e640:	cmp	w5, #0x30
  40e644:	str	w12, [sp, #160]
  40e648:	mov	w0, #0x2b                  	// #43
  40e64c:	stp	x7, x3, [sp, #168]
  40e650:	sub	x2, x2, x28
  40e654:	ccmp	w5, w0, #0x4, ne  // ne = any
  40e658:	add	x5, x22, x2
  40e65c:	mov	x0, x22
  40e660:	b.ne	40f69c <__fxstatat@plt+0xcc4c>  // b.any
  40e664:	mov	x22, x5
  40e668:	mov	w1, #0x30                  	// #48
  40e66c:	bl	402680 <memset@plt>
  40e670:	ldp	x6, x4, [sp, #144]
  40e674:	ldp	x7, x3, [sp, #168]
  40e678:	ldr	w12, [sp, #160]
  40e67c:	stp	x4, x7, [sp, #144]
  40e680:	mov	x1, x6
  40e684:	mov	x2, x28
  40e688:	str	x3, [sp, #160]
  40e68c:	mov	x0, x22
  40e690:	cbz	w12, 40f61c <__fxstatat@plt+0xcbcc>
  40e694:	bl	40e3e0 <__fxstatat@plt+0xb990>
  40e698:	add	x22, x22, x28
  40e69c:	ldp	x4, x7, [sp, #144]
  40e6a0:	ldr	x3, [sp, #160]
  40e6a4:	add	x21, x21, x7
  40e6a8:	b	40e500 <__fxstatat@plt+0xbab0>
  40e6ac:	mov	w4, w2
  40e6b0:	b	40e590 <__fxstatat@plt+0xbb40>
  40e6b4:	mov	w12, #0x1                   	// #1
  40e6b8:	b	40e590 <__fxstatat@plt+0xbb40>
  40e6bc:	mov	w5, w1
  40e6c0:	b	40e590 <__fxstatat@plt+0xbb40>
  40e6c4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40e6c8:	add	x0, x0, #0xd18
  40e6cc:	ldrh	w0, [x0, w1, uxtw #1]
  40e6d0:	adr	x2, 40e6dc <__fxstatat@plt+0xbc8c>
  40e6d4:	add	x0, x2, w0, sxth #2
  40e6d8:	br	x0
  40e6dc:	ldrb	w1, [x20, #1]
  40e6e0:	add	x20, x20, #0x1
  40e6e4:	b	40e5e0 <__fxstatat@plt+0xbb90>
  40e6e8:	mov	w6, #0xcccc                	// #52428
  40e6ec:	mov	w19, #0x0                   	// #0
  40e6f0:	movk	w6, #0xccc, lsl #16
  40e6f4:	ldrb	w1, [x20, #1]
  40e6f8:	cmp	w19, w6
  40e6fc:	add	x7, x20, #0x1
  40e700:	sub	w0, w1, #0x30
  40e704:	b.gt	40e738 <__fxstatat@plt+0xbce8>
  40e708:	ldrb	w2, [x20]
  40e70c:	b.eq	40e730 <__fxstatat@plt+0xbce0>  // b.none
  40e710:	add	w19, w19, w19, lsl #2
  40e714:	sub	w2, w2, #0x30
  40e718:	mov	x20, x7
  40e71c:	add	w19, w2, w19, lsl #1
  40e720:	cmp	w0, #0x9
  40e724:	b.ls	40e6f4 <__fxstatat@plt+0xbca4>  // b.plast
  40e728:	mov	w28, w1
  40e72c:	b	40e5cc <__fxstatat@plt+0xbb7c>
  40e730:	cmp	w2, #0x37
  40e734:	b.ls	40e710 <__fxstatat@plt+0xbcc0>  // b.plast
  40e738:	cmp	w0, #0x9
  40e73c:	b.hi	40f558 <__fxstatat@plt+0xcb08>  // b.pmore
  40e740:	ldrb	w1, [x20, #2]!
  40e744:	mov	w19, #0x7fffffff            	// #2147483647
  40e748:	sub	w0, w1, #0x30
  40e74c:	b	40e720 <__fxstatat@plt+0xbcd0>
  40e750:	cmp	w28, #0x4f
  40e754:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40e758:	str	wzr, [sp, #160]
  40e75c:	mov	w0, #0x2520                	// #9504
  40e760:	strh	w0, [sp, #216]
  40e764:	cbnz	w28, 40fc28 <__fxstatat@plt+0xd1d8>
  40e768:	ldr	x0, [sp, #112]
  40e76c:	mov	x4, x20
  40e770:	strb	w1, [x0]
  40e774:	add	x2, sp, #0xd8
  40e778:	strb	wzr, [x0, #1]
  40e77c:	mov	x1, #0x400                 	// #1024
  40e780:	add	x0, sp, #0xf0
  40e784:	stp	x3, x4, [sp, #144]
  40e788:	str	w12, [sp, #168]
  40e78c:	str	w5, [sp, #176]
  40e790:	bl	402500 <strftime@plt>
  40e794:	ldp	x3, x4, [sp, #144]
  40e798:	cbz	x0, 40e500 <__fxstatat@plt+0xbab0>
  40e79c:	cmp	w19, #0x0
  40e7a0:	sub	x20, x0, #0x1
  40e7a4:	csel	w0, w19, wzr, ge  // ge = tcont
  40e7a8:	sub	x1, x24, x21
  40e7ac:	sxtw	x0, w0
  40e7b0:	cmp	x20, x0
  40e7b4:	csel	x7, x20, x0, cs  // cs = hs, nlast
  40e7b8:	cmp	x1, x7
  40e7bc:	b.ls	40e524 <__fxstatat@plt+0xbad4>  // b.plast
  40e7c0:	cbz	x22, 40e6a4 <__fxstatat@plt+0xbc54>
  40e7c4:	cmp	w28, #0x0
  40e7c8:	ldr	w12, [sp, #168]
  40e7cc:	ccmp	x20, x0, #0x2, eq  // eq = none
  40e7d0:	b.cs	40e81c <__fxstatat@plt+0xbdcc>  // b.hs, b.nlast
  40e7d4:	ldr	w5, [sp, #176]
  40e7d8:	sxtw	x2, w19
  40e7dc:	str	x4, [sp, #144]
  40e7e0:	mov	w0, #0x2b                  	// #43
  40e7e4:	str	w12, [sp, #152]
  40e7e8:	cmp	w5, #0x30
  40e7ec:	stp	x7, x3, [sp, #168]
  40e7f0:	sub	x2, x2, x20
  40e7f4:	ccmp	w5, w0, #0x4, ne  // ne = any
  40e7f8:	add	x5, x22, x2
  40e7fc:	mov	x0, x22
  40e800:	b.ne	40f664 <__fxstatat@plt+0xcc14>  // b.any
  40e804:	mov	x22, x5
  40e808:	mov	w1, #0x30                  	// #48
  40e80c:	bl	402680 <memset@plt>
  40e810:	ldp	x7, x3, [sp, #168]
  40e814:	ldr	w12, [sp, #152]
  40e818:	ldr	x4, [sp, #144]
  40e81c:	stp	x4, x7, [sp, #144]
  40e820:	ldr	w0, [sp, #160]
  40e824:	str	x3, [sp, #160]
  40e828:	mov	x2, x20
  40e82c:	ldr	x1, [sp, #128]
  40e830:	cbnz	w0, 40f64c <__fxstatat@plt+0xcbfc>
  40e834:	mov	x0, x22
  40e838:	cbz	w12, 40f638 <__fxstatat@plt+0xcbe8>
  40e83c:	bl	40e3e0 <__fxstatat@plt+0xb990>
  40e840:	add	x22, x22, x20
  40e844:	ldp	x4, x7, [sp, #144]
  40e848:	ldr	x3, [sp, #160]
  40e84c:	add	x21, x21, x7
  40e850:	b	40e500 <__fxstatat@plt+0xbab0>
  40e854:	cmp	w28, #0x45
  40e858:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40e85c:	ldp	w7, w2, [x3, #20]
  40e860:	mov	w0, #0x2493                	// #9363
  40e864:	ldr	w13, [x3, #28]
  40e868:	movk	w0, #0x9249, lsl #16
  40e86c:	cmp	w7, #0x0
  40e870:	mov	w15, #0xffffff9c            	// #-100
  40e874:	sub	w14, w13, w2
  40e878:	mov	w4, #0x12c                 	// #300
  40e87c:	add	w14, w14, #0x17e
  40e880:	csel	w4, w4, w15, lt  // lt = tstop
  40e884:	add	w4, w7, w4
  40e888:	smull	x0, w14, w0
  40e88c:	lsr	x0, x0, #32
  40e890:	add	w0, w14, w0
  40e894:	asr	w0, w0, #2
  40e898:	sub	w0, w0, w14, asr #31
  40e89c:	lsl	w15, w0, #3
  40e8a0:	sub	w0, w15, w0
  40e8a4:	sub	w0, w14, w0
  40e8a8:	sub	w0, w13, w0
  40e8ac:	adds	w0, w0, #0x3
  40e8b0:	b.mi	40f928 <__fxstatat@plt+0xced8>  // b.first
  40e8b4:	tst	x4, #0x3
  40e8b8:	mov	w14, #0x16d                 	// #365
  40e8bc:	b.ne	40e904 <__fxstatat@plt+0xbeb4>  // b.any
  40e8c0:	mov	w16, #0x5c29                	// #23593
  40e8c4:	mov	w14, #0xb850                	// #47184
  40e8c8:	movk	w16, #0xc28f, lsl #16
  40e8cc:	movk	w14, #0x51e, lsl #16
  40e8d0:	mov	w15, #0x5c28                	// #23592
  40e8d4:	madd	w4, w4, w16, w14
  40e8d8:	movk	w15, #0x28f, lsl #16
  40e8dc:	mov	w14, #0x16e                 	// #366
  40e8e0:	ror	w16, w4, #2
  40e8e4:	cmp	w16, w15
  40e8e8:	b.hi	40e904 <__fxstatat@plt+0xbeb4>  // b.pmore
  40e8ec:	mov	w14, #0xd70a                	// #55050
  40e8f0:	ror	w4, w4, #4
  40e8f4:	movk	w14, #0xa3, lsl #16
  40e8f8:	cmp	w4, w14
  40e8fc:	cset	w14, ls  // ls = plast
  40e900:	add	w14, w14, #0x16d
  40e904:	sub	w13, w13, w14
  40e908:	mov	w4, #0x2493                	// #9363
  40e90c:	sub	w2, w13, w2
  40e910:	movk	w4, #0x9249, lsl #16
  40e914:	add	w2, w2, #0x17e
  40e918:	smull	x4, w2, w4
  40e91c:	lsr	x4, x4, #32
  40e920:	add	w4, w2, w4
  40e924:	asr	w4, w4, #2
  40e928:	sub	w4, w4, w2, asr #31
  40e92c:	lsl	w14, w4, #3
  40e930:	sub	w4, w14, w4
  40e934:	sub	w2, w2, w4
  40e938:	sub	w2, w13, w2
  40e93c:	adds	w2, w2, #0x3
  40e940:	csel	w0, w0, w2, mi  // mi = first
  40e944:	cmp	w2, #0x0
  40e948:	cset	w4, ge  // ge = tcont
  40e94c:	cmp	w1, #0x47
  40e950:	b.eq	40fa4c <__fxstatat@plt+0xcffc>  // b.none
  40e954:	cmp	w1, #0x67
  40e958:	b.ne	40fa24 <__fxstatat@plt+0xcfd4>  // b.any
  40e95c:	mov	w0, #0x851f                	// #34079
  40e960:	mov	w14, #0x64                  	// #100
  40e964:	movk	w0, #0x51eb, lsl #16
  40e968:	smull	x13, w7, w0
  40e96c:	asr	x13, x13, #37
  40e970:	sub	w13, w13, w7, asr #31
  40e974:	msub	w13, w13, w14, w7
  40e978:	add	w13, w13, w4
  40e97c:	smull	x0, w13, w0
  40e980:	asr	x2, x0, #37
  40e984:	sub	w0, w2, w13, asr #31
  40e988:	msub	w0, w0, w14, w13
  40e98c:	tbnz	w0, #31, 40fbd8 <__fxstatat@plt+0xd188>
  40e990:	mov	w2, w0
  40e994:	cbnz	w5, 40f918 <__fxstatat@plt+0xcec8>
  40e998:	ldr	w5, [sp, #140]
  40e99c:	mov	w4, #0x1                   	// #1
  40e9a0:	cmp	w5, #0x2b
  40e9a4:	b.eq	40fb68 <__fxstatat@plt+0xd118>  // b.none
  40e9a8:	mov	w15, #0x0                   	// #0
  40e9ac:	mov	w14, #0x0                   	// #0
  40e9b0:	mov	w13, #0x2                   	// #2
  40e9b4:	mov	w7, #0x0                   	// #0
  40e9b8:	cmp	w28, #0x4f
  40e9bc:	ccmp	w4, #0x0, #0x4, eq  // eq = none
  40e9c0:	b.eq	40ee48 <__fxstatat@plt+0xc3f8>  // b.none
  40e9c4:	mov	w0, #0x2520                	// #9504
  40e9c8:	str	wzr, [sp, #160]
  40e9cc:	strh	w0, [sp, #216]
  40e9d0:	mov	x4, x20
  40e9d4:	add	x0, sp, #0xdb
  40e9d8:	strb	w28, [sp, #218]
  40e9dc:	mov	w28, w13
  40e9e0:	b	40e770 <__fxstatat@plt+0xbd20>
  40e9e4:	cbnz	w28, 40e5e8 <__fxstatat@plt+0xbb98>
  40e9e8:	cmp	w4, #0x0
  40e9ec:	mov	w0, #0x2520                	// #9504
  40e9f0:	csel	w12, w12, w4, eq  // eq = none
  40e9f4:	mov	w28, #0x0                   	// #0
  40e9f8:	mov	x4, x20
  40e9fc:	str	wzr, [sp, #160]
  40ea00:	strh	w0, [sp, #216]
  40ea04:	ldr	x0, [sp, #112]
  40ea08:	b	40e770 <__fxstatat@plt+0xbd20>
  40ea0c:	cmp	w4, #0x0
  40ea10:	csel	w12, w12, w4, eq  // eq = none
  40ea14:	cmp	w28, #0x45
  40ea18:	b.ne	40e758 <__fxstatat@plt+0xbd08>  // b.any
  40ea1c:	b	40e5e8 <__fxstatat@plt+0xbb98>
  40ea20:	cmp	w28, #0x45
  40ea24:	b.eq	40f810 <__fxstatat@plt+0xcdc0>  // b.none
  40ea28:	ldr	w2, [x3, #20]
  40ea2c:	mov	w0, #0x851f                	// #34079
  40ea30:	movk	w0, #0x51eb, lsl #16
  40ea34:	mov	w4, #0x64                  	// #100
  40ea38:	smull	x0, w2, w0
  40ea3c:	asr	x0, x0, #37
  40ea40:	sub	w0, w0, w2, asr #31
  40ea44:	msub	w0, w0, w4, w2
  40ea48:	tbz	w0, #31, 40e990 <__fxstatat@plt+0xbf40>
  40ea4c:	cmn	w2, #0x76d
  40ea50:	add	w2, w0, w4
  40ea54:	csneg	w0, w2, w0, gt
  40ea58:	b	40e990 <__fxstatat@plt+0xbf40>
  40ea5c:	cmp	w28, #0x45
  40ea60:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40ea64:	ldr	w0, [x3, #8]
  40ea68:	mov	w13, #0x2                   	// #2
  40ea6c:	nop
  40ea70:	mvn	w4, w0
  40ea74:	mov	w2, w0
  40ea78:	lsr	w14, w0, #31
  40ea7c:	mov	w7, #0x0                   	// #0
  40ea80:	lsr	w4, w4, #31
  40ea84:	mov	w15, #0x0                   	// #0
  40ea88:	b	40e9b8 <__fxstatat@plt+0xbf68>
  40ea8c:	cbnz	w28, 40e5e8 <__fxstatat@plt+0xbb98>
  40ea90:	cmp	w5, #0x0
  40ea94:	ccmp	w19, #0x0, #0x0, eq  // eq = none
  40ea98:	b.lt	40f9c0 <__fxstatat@plt+0xcf70>  // b.tstop
  40ea9c:	subs	w6, w19, #0x6
  40eaa0:	adrp	x28, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40eaa4:	csel	w6, w6, wzr, pl  // pl = nfrst
  40eaa8:	add	x28, x28, #0xcf0
  40eaac:	ldr	x7, [sp, #120]
  40eab0:	mov	w4, w12
  40eab4:	ldr	x0, [sp, #1264]
  40eab8:	str	x0, [sp]
  40eabc:	ldr	w0, [sp, #1272]
  40eac0:	mov	x1, #0xffffffffffffffff    	// #-1
  40eac4:	str	w0, [sp, #8]
  40eac8:	mov	x2, x28
  40eacc:	mov	x0, #0x0                   	// #0
  40ead0:	str	x3, [sp, #144]
  40ead4:	str	w12, [sp, #152]
  40ead8:	str	w5, [sp, #160]
  40eadc:	str	w6, [sp, #168]
  40eae0:	bl	40e438 <__fxstatat@plt+0xb9e8>
  40eae4:	cmp	w19, #0x0
  40eae8:	sub	x7, x24, x21
  40eaec:	csel	w1, w19, wzr, ge  // ge = tcont
  40eaf0:	mov	x4, x0
  40eaf4:	sxtw	x1, w1
  40eaf8:	cmp	x0, x1
  40eafc:	csel	x13, x0, x1, cs  // cs = hs, nlast
  40eb00:	cmp	x7, x13
  40eb04:	b.ls	40e524 <__fxstatat@plt+0xbad4>  // b.plast
  40eb08:	ldr	x3, [sp, #144]
  40eb0c:	cbz	x22, 40ebb4 <__fxstatat@plt+0xc164>
  40eb10:	ldr	w12, [sp, #152]
  40eb14:	cmp	x0, x1
  40eb18:	ldr	w5, [sp, #160]
  40eb1c:	ldr	w6, [sp, #168]
  40eb20:	b.cs	40eb80 <__fxstatat@plt+0xc130>  // b.hs, b.nlast
  40eb24:	sxtw	x2, w19
  40eb28:	str	x7, [sp, #144]
  40eb2c:	str	w5, [sp, #152]
  40eb30:	sub	x2, x2, x0
  40eb34:	str	w12, [sp, #160]
  40eb38:	mov	w0, #0x2b                  	// #43
  40eb3c:	str	w6, [sp, #168]
  40eb40:	cmp	w5, #0x30
  40eb44:	stp	x4, x13, [sp, #176]
  40eb48:	ccmp	w5, w0, #0x4, ne  // ne = any
  40eb4c:	add	x14, x22, x2
  40eb50:	str	x3, [sp, #192]
  40eb54:	mov	x0, x22
  40eb58:	b.ne	40f820 <__fxstatat@plt+0xcdd0>  // b.any
  40eb5c:	mov	x22, x14
  40eb60:	mov	w1, #0x30                  	// #48
  40eb64:	bl	402680 <memset@plt>
  40eb68:	ldp	x4, x13, [sp, #176]
  40eb6c:	ldr	w5, [sp, #152]
  40eb70:	ldr	w12, [sp, #160]
  40eb74:	ldr	w6, [sp, #168]
  40eb78:	ldr	x7, [sp, #144]
  40eb7c:	ldr	x3, [sp, #192]
  40eb80:	mov	x0, x22
  40eb84:	ldr	x1, [sp, #1264]
  40eb88:	str	x1, [sp]
  40eb8c:	ldr	w1, [sp, #1272]
  40eb90:	add	x22, x22, x4
  40eb94:	str	w1, [sp, #8]
  40eb98:	mov	x1, x7
  40eb9c:	ldr	x7, [sp, #120]
  40eba0:	mov	w4, w12
  40eba4:	mov	x2, x28
  40eba8:	stp	x3, x13, [sp, #144]
  40ebac:	bl	40e438 <__fxstatat@plt+0xb9e8>
  40ebb0:	ldp	x3, x13, [sp, #144]
  40ebb4:	add	x21, x21, x13
  40ebb8:	mov	x4, x20
  40ebbc:	b	40e500 <__fxstatat@plt+0xbab0>
  40ebc0:	cmp	w28, #0x45
  40ebc4:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40ebc8:	ldr	w0, [x3, #4]
  40ebcc:	mov	w13, #0x2                   	// #2
  40ebd0:	b	40ea70 <__fxstatat@plt+0xc020>
  40ebd4:	cmp	w28, #0x45
  40ebd8:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40ebdc:	mov	w0, w27
  40ebe0:	mov	w13, #0x2                   	// #2
  40ebe4:	b	40ea70 <__fxstatat@plt+0xc020>
  40ebe8:	cmp	w19, #0x0
  40ebec:	mov	x6, #0x1                   	// #1
  40ebf0:	csel	w0, w19, wzr, ge  // ge = tcont
  40ebf4:	sub	x2, x24, x21
  40ebf8:	sxtw	x0, w0
  40ebfc:	cmp	x0, #0x0
  40ec00:	csel	x7, x0, x6, ne  // ne = any
  40ec04:	cbnz	w28, 40fbc8 <__fxstatat@plt+0xd178>
  40ec08:	cmp	x2, x7
  40ec0c:	b.ls	40e524 <__fxstatat@plt+0xbad4>  // b.plast
  40ec10:	cbz	x22, 40ec58 <__fxstatat@plt+0xc208>
  40ec14:	cmp	w19, #0x1
  40ec18:	b.le	40ec54 <__fxstatat@plt+0xc204>
  40ec1c:	sxtw	x2, w19
  40ec20:	stp	x7, x3, [sp, #144]
  40ec24:	mov	w0, #0x2b                  	// #43
  40ec28:	cmp	w5, #0x30
  40ec2c:	sub	x2, x2, #0x1
  40ec30:	ccmp	w5, w0, #0x4, ne  // ne = any
  40ec34:	add	x19, x22, x2
  40ec38:	mov	x0, x22
  40ec3c:	b.ne	40fba4 <__fxstatat@plt+0xd154>  // b.any
  40ec40:	mov	w1, #0x30                  	// #48
  40ec44:	bl	402680 <memset@plt>
  40ec48:	ldp	x7, x3, [sp, #144]
  40ec4c:	mov	x22, x19
  40ec50:	ldrb	w1, [x20]
  40ec54:	strb	w1, [x22], #1
  40ec58:	add	x21, x21, x7
  40ec5c:	mov	x4, x20
  40ec60:	b	40e500 <__fxstatat@plt+0xbab0>
  40ec64:	ldurb	w1, [x20, #-1]
  40ec68:	sub	x6, x20, #0x1
  40ec6c:	cmp	w19, #0x0
  40ec70:	sub	x2, x24, x21
  40ec74:	csel	w0, w19, wzr, ge  // ge = tcont
  40ec78:	cmp	w1, #0x25
  40ec7c:	sxtw	x0, w0
  40ec80:	b.ne	40fc20 <__fxstatat@plt+0xd1d0>  // b.any
  40ec84:	cmp	x0, #0x0
  40ec88:	mov	x28, #0x1                   	// #1
  40ec8c:	mov	x4, x6
  40ec90:	csel	x7, x0, x28, ne  // ne = any
  40ec94:	b	40e624 <__fxstatat@plt+0xbbd4>
  40ec98:	cmp	w28, #0x45
  40ec9c:	b.eq	40f810 <__fxstatat@plt+0xcdc0>  // b.none
  40eca0:	ldr	w7, [x3, #20]
  40eca4:	mov	w4, #0x851f                	// #34079
  40eca8:	movk	w4, #0x51eb, lsl #16
  40ecac:	mov	w2, #0x64                  	// #100
  40ecb0:	smull	x4, w7, w4
  40ecb4:	asr	x4, x4, #37
  40ecb8:	sub	w4, w4, w7, asr #31
  40ecbc:	add	w0, w4, #0x13
  40ecc0:	msub	w4, w4, w2, w7
  40ecc4:	cmp	w4, #0x0
  40ecc8:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  40eccc:	cset	w2, gt
  40ecd0:	cmn	w7, #0x76c
  40ecd4:	cset	w14, lt  // lt = tstop
  40ecd8:	sub	w2, w0, w2
  40ecdc:	cset	w4, ge  // ge = tcont
  40ece0:	cbnz	w5, 40fa10 <__fxstatat@plt+0xcfc0>
  40ece4:	ldr	w0, [sp, #140]
  40ece8:	cmp	w0, #0x2b
  40ecec:	b.eq	40fa18 <__fxstatat@plt+0xcfc8>  // b.none
  40ecf0:	ldr	w5, [sp, #140]
  40ecf4:	mov	w15, #0x0                   	// #0
  40ecf8:	mov	w13, #0x2                   	// #2
  40ecfc:	b	40e9b4 <__fxstatat@plt+0xbf64>
  40ed00:	cbnz	w28, 40e5e8 <__fxstatat@plt+0xbb98>
  40ed04:	adrp	x28, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40ed08:	mov	w6, #0xffffffff            	// #-1
  40ed0c:	add	x28, x28, #0xce0
  40ed10:	b	40eaac <__fxstatat@plt+0xc05c>
  40ed14:	cmp	w28, #0x45
  40ed18:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40ed1c:	cmp	w4, #0x0
  40ed20:	str	wzr, [sp, #160]
  40ed24:	csel	w12, w12, w4, eq  // eq = none
  40ed28:	b	40e75c <__fxstatat@plt+0xbd0c>
  40ed2c:	cmp	w4, #0x0
  40ed30:	mov	x0, x23
  40ed34:	csel	w12, w12, wzr, eq  // eq = none
  40ed38:	str	w12, [sp, #144]
  40ed3c:	str	x3, [sp, #152]
  40ed40:	str	w12, [sp, #160]
  40ed44:	str	w4, [sp, #168]
  40ed48:	str	w5, [sp, #176]
  40ed4c:	bl	402430 <strlen@plt>
  40ed50:	cmp	w19, #0x0
  40ed54:	mov	x28, x0
  40ed58:	csel	w0, w19, wzr, ge  // ge = tcont
  40ed5c:	sub	x1, x24, x21
  40ed60:	sxtw	x0, w0
  40ed64:	cmp	x28, x0
  40ed68:	csel	x2, x28, x0, cs  // cs = hs, nlast
  40ed6c:	str	x2, [sp, #144]
  40ed70:	cmp	x1, x2
  40ed74:	b.ls	40e524 <__fxstatat@plt+0xbad4>  // b.plast
  40ed78:	ldr	x3, [sp, #152]
  40ed7c:	cbz	x22, 40edfc <__fxstatat@plt+0xc3ac>
  40ed80:	ldr	w12, [sp, #160]
  40ed84:	cmp	x28, x0
  40ed88:	ldr	w4, [sp, #168]
  40ed8c:	b.cs	40edd8 <__fxstatat@plt+0xc388>  // b.hs, b.nlast
  40ed90:	ldr	w5, [sp, #176]
  40ed94:	sxtw	x2, w19
  40ed98:	str	w12, [sp, #152]
  40ed9c:	mov	w0, #0x2b                  	// #43
  40eda0:	str	w4, [sp, #160]
  40eda4:	cmp	w5, #0x30
  40eda8:	str	x3, [sp, #168]
  40edac:	sub	x2, x2, x28
  40edb0:	ccmp	w5, w0, #0x4, ne  // ne = any
  40edb4:	add	x5, x22, x2
  40edb8:	mov	x0, x22
  40edbc:	b.ne	40fb88 <__fxstatat@plt+0xd138>  // b.any
  40edc0:	mov	x22, x5
  40edc4:	mov	w1, #0x30                  	// #48
  40edc8:	bl	402680 <memset@plt>
  40edcc:	ldr	w12, [sp, #152]
  40edd0:	ldr	w4, [sp, #160]
  40edd4:	ldr	x3, [sp, #168]
  40edd8:	str	x3, [sp, #152]
  40eddc:	mov	x2, x28
  40ede0:	mov	x1, x23
  40ede4:	mov	x0, x22
  40ede8:	cbnz	w4, 40fac8 <__fxstatat@plt+0xd078>
  40edec:	cbz	w12, 40fabc <__fxstatat@plt+0xd06c>
  40edf0:	bl	40e3e0 <__fxstatat@plt+0xb990>
  40edf4:	ldr	x3, [sp, #152]
  40edf8:	add	x22, x22, x28
  40edfc:	ldr	x0, [sp, #144]
  40ee00:	mov	x4, x20
  40ee04:	add	x21, x21, x0
  40ee08:	b	40e500 <__fxstatat@plt+0xbab0>
  40ee0c:	cmp	w28, #0x45
  40ee10:	b.eq	40f810 <__fxstatat@plt+0xcdc0>  // b.none
  40ee14:	cmp	w28, #0x4f
  40ee18:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40ee1c:	ldr	w0, [x3, #20]
  40ee20:	adds	w2, w0, #0x76c
  40ee24:	cset	w14, lt  // lt = tstop
  40ee28:	cset	w4, ge  // ge = tcont
  40ee2c:	cbnz	w5, 40f8dc <__fxstatat@plt+0xce8c>
  40ee30:	ldr	w5, [sp, #140]
  40ee34:	cmp	w5, #0x2b
  40ee38:	b.eq	40fbbc <__fxstatat@plt+0xd16c>  // b.none
  40ee3c:	mov	w7, #0x0                   	// #0
  40ee40:	mov	w15, #0x0                   	// #0
  40ee44:	mov	w13, #0x4                   	// #4
  40ee48:	cmp	w14, #0x0
  40ee4c:	cneg	w2, w2, ne  // ne = any
  40ee50:	mov	w6, #0xcccd                	// #52429
  40ee54:	add	x28, sp, #0xef
  40ee58:	mov	w16, #0x3a                  	// #58
  40ee5c:	movk	w6, #0xcccc, lsl #16
  40ee60:	b	40ee98 <__fxstatat@plt+0xc448>
  40ee64:	sub	x28, x28, #0x2
  40ee68:	strb	w16, [x28, #1]
  40ee6c:	umull	x1, w2, w6
  40ee70:	asr	w7, w7, #1
  40ee74:	cmp	w7, #0x0
  40ee78:	ccmp	w2, #0x9, #0x2, eq  // eq = none
  40ee7c:	lsr	x1, x1, #35
  40ee80:	add	w0, w1, w1, lsl #2
  40ee84:	sub	w0, w2, w0, lsl #1
  40ee88:	add	w0, w0, #0x30
  40ee8c:	sturb	w0, [x4, #-1]
  40ee90:	b.ls	40f41c <__fxstatat@plt+0xc9cc>  // b.plast
  40ee94:	mov	w2, w1
  40ee98:	sub	x4, x28, #0x1
  40ee9c:	tbnz	w7, #0, 40ee64 <__fxstatat@plt+0xc414>
  40eea0:	mov	x0, x4
  40eea4:	mov	x4, x28
  40eea8:	mov	x28, x0
  40eeac:	b	40ee6c <__fxstatat@plt+0xc41c>
  40eeb0:	ldp	x6, x7, [x3]
  40eeb4:	stp	x6, x7, [sp, #240]
  40eeb8:	add	x1, sp, #0xf0
  40eebc:	ldp	x14, x15, [x3, #16]
  40eec0:	str	x3, [sp, #144]
  40eec4:	ldp	x6, x7, [x3, #32]
  40eec8:	str	w5, [sp, #152]
  40eecc:	ldr	x2, [x3, #48]
  40eed0:	str	w12, [sp, #160]
  40eed4:	ldr	x0, [sp, #1264]
  40eed8:	stp	x14, x15, [sp, #256]
  40eedc:	add	x28, sp, #0xef
  40eee0:	stp	x6, x7, [sp, #272]
  40eee4:	str	x2, [sp, #288]
  40eee8:	bl	413820 <_obstack_memory_used@@Base+0x500>
  40eeec:	ldr	w5, [sp, #152]
  40eef0:	mov	x13, #0x6666666666666666    	// #7378697629483820646
  40eef4:	ldr	w12, [sp, #160]
  40eef8:	mov	x6, x0
  40eefc:	ldr	x3, [sp, #144]
  40ef00:	mov	x1, x0
  40ef04:	movk	x13, #0x6667
  40ef08:	mov	w7, #0x30                  	// #48
  40ef0c:	nop
  40ef10:	smulh	x2, x1, x13
  40ef14:	asr	x4, x1, #63
  40ef18:	cmp	x6, #0x0
  40ef1c:	asr	x2, x2, #2
  40ef20:	sub	x0, x2, x4
  40ef24:	add	x0, x0, x0, lsl #2
  40ef28:	sub	x0, x1, x0, lsl #1
  40ef2c:	and	w1, w0, #0xff
  40ef30:	add	w1, w1, #0x30
  40ef34:	sub	w0, w7, w0, uxtb
  40ef38:	and	w1, w1, #0xff
  40ef3c:	and	w0, w0, #0xff
  40ef40:	csel	w0, w1, w0, ge  // ge = tcont
  40ef44:	strb	w0, [x28, #-1]!
  40ef48:	subs	x1, x2, x4
  40ef4c:	b.ne	40ef10 <__fxstatat@plt+0xc4c0>  // b.any
  40ef50:	cmp	w19, #0x0
  40ef54:	csinc	w13, w19, wzr, gt
  40ef58:	tbnz	x6, #63, 40f568 <__fxstatat@plt+0xcb18>
  40ef5c:	add	x6, sp, #0xef
  40ef60:	cmp	w5, #0x2d
  40ef64:	sub	x6, x6, x28
  40ef68:	sub	x0, x24, x21
  40ef6c:	b.eq	40ef7c <__fxstatat@plt+0xc52c>  // b.none
  40ef70:	sub	w4, w13, w6
  40ef74:	cmp	w4, #0x0
  40ef78:	b.gt	40fa88 <__fxstatat@plt+0xd038>
  40ef7c:	cmp	w19, #0x0
  40ef80:	mov	x4, x20
  40ef84:	csel	w7, w19, wzr, ge  // ge = tcont
  40ef88:	sxtw	x7, w7
  40ef8c:	cmp	x6, x7
  40ef90:	csel	x20, x6, x7, cs  // cs = hs, nlast
  40ef94:	cmp	x20, x0
  40ef98:	b.cs	40e524 <__fxstatat@plt+0xbad4>  // b.hs, b.nlast
  40ef9c:	cbz	x22, 40f018 <__fxstatat@plt+0xc5c8>
  40efa0:	cmp	w13, #0x0
  40efa4:	ccmp	x6, x7, #0x2, eq  // eq = none
  40efa8:	b.cs	40eff0 <__fxstatat@plt+0xc5a0>  // b.hs, b.nlast
  40efac:	sxtw	x2, w19
  40efb0:	str	x4, [sp, #144]
  40efb4:	str	w12, [sp, #152]
  40efb8:	cmp	w5, #0x30
  40efbc:	stp	x6, x3, [sp, #160]
  40efc0:	mov	w0, #0x2b                  	// #43
  40efc4:	sub	x2, x2, x6
  40efc8:	ccmp	w5, w0, #0x4, ne  // ne = any
  40efcc:	add	x5, x22, x2
  40efd0:	mov	x0, x22
  40efd4:	b.ne	40f680 <__fxstatat@plt+0xcc30>  // b.any
  40efd8:	mov	x22, x5
  40efdc:	mov	w1, #0x30                  	// #48
  40efe0:	bl	402680 <memset@plt>
  40efe4:	ldp	x6, x3, [sp, #160]
  40efe8:	ldr	w12, [sp, #152]
  40efec:	ldr	x4, [sp, #144]
  40eff0:	stp	x6, x4, [sp, #144]
  40eff4:	mov	x1, x28
  40eff8:	str	x3, [sp, #160]
  40effc:	mov	x2, x6
  40f000:	mov	x0, x22
  40f004:	cbz	w12, 40f608 <__fxstatat@plt+0xcbb8>
  40f008:	bl	40e3e0 <__fxstatat@plt+0xb990>
  40f00c:	ldp	x6, x4, [sp, #144]
  40f010:	ldr	x3, [sp, #160]
  40f014:	add	x22, x22, x6
  40f018:	add	x21, x21, x20
  40f01c:	b	40e500 <__fxstatat@plt+0xbab0>
  40f020:	ldr	w0, [x3, #24]
  40f024:	mov	w2, #0x2493                	// #9363
  40f028:	movk	w2, #0x9249, lsl #16
  40f02c:	mov	w13, #0x1                   	// #1
  40f030:	add	w0, w0, #0x6
  40f034:	smull	x2, w0, w2
  40f038:	lsr	x2, x2, #32
  40f03c:	add	w2, w0, w2
  40f040:	asr	w2, w2, #2
  40f044:	sub	w2, w2, w0, asr #31
  40f048:	lsl	w4, w2, #3
  40f04c:	sub	w2, w4, w2
  40f050:	sub	w0, w0, w2
  40f054:	add	w0, w0, w13
  40f058:	b	40ea70 <__fxstatat@plt+0xc020>
  40f05c:	cmp	w19, #0x0
  40f060:	sub	x0, x24, x21
  40f064:	csel	w28, w19, wzr, ge  // ge = tcont
  40f068:	sxtw	x28, w28
  40f06c:	cmp	x28, #0x0
  40f070:	csinc	x28, x28, xzr, ne  // ne = any
  40f074:	cmp	x0, x28
  40f078:	b.ls	40e524 <__fxstatat@plt+0xbad4>  // b.plast
  40f07c:	cbz	x22, 40e4f8 <__fxstatat@plt+0xbaa8>
  40f080:	cmp	w19, #0x1
  40f084:	b.le	40f0bc <__fxstatat@plt+0xc66c>
  40f088:	sxtw	x2, w19
  40f08c:	str	x3, [sp, #144]
  40f090:	mov	w0, #0x2b                  	// #43
  40f094:	cmp	w5, #0x30
  40f098:	sub	x2, x2, #0x1
  40f09c:	ccmp	w5, w0, #0x4, ne  // ne = any
  40f0a0:	add	x4, x22, x2
  40f0a4:	mov	x0, x22
  40f0a8:	b.ne	40fb74 <__fxstatat@plt+0xd124>  // b.any
  40f0ac:	mov	x22, x4
  40f0b0:	mov	w1, #0x30                  	// #48
  40f0b4:	bl	402680 <memset@plt>
  40f0b8:	ldr	x3, [sp, #144]
  40f0bc:	mov	w0, #0x9                   	// #9
  40f0c0:	strb	w0, [x22], #1
  40f0c4:	b	40e4f8 <__fxstatat@plt+0xbaa8>
  40f0c8:	cmp	w28, #0x45
  40f0cc:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40f0d0:	ldr	w0, [x3, #24]
  40f0d4:	mov	w13, #0x1                   	// #1
  40f0d8:	b	40ea70 <__fxstatat@plt+0xc020>
  40f0dc:	ldr	w0, [x3, #16]
  40f0e0:	cmp	w28, #0x4f
  40f0e4:	mov	w13, #0x1                   	// #1
  40f0e8:	b.eq	40e9c4 <__fxstatat@plt+0xbf74>  // b.none
  40f0ec:	mov	w1, #0xb                   	// #11
  40f0f0:	mov	w15, #0x0                   	// #0
  40f0f4:	mov	w14, #0x0                   	// #0
  40f0f8:	mov	w7, #0x0                   	// #0
  40f0fc:	mul	w0, w0, w1
  40f100:	asr	w0, w0, #5
  40f104:	add	w2, w0, w13
  40f108:	b	40ee50 <__fxstatat@plt+0xc400>
  40f10c:	cmp	w19, #0x0
  40f110:	sub	x0, x24, x21
  40f114:	csel	w28, w19, wzr, ge  // ge = tcont
  40f118:	sxtw	x28, w28
  40f11c:	cmp	x28, #0x0
  40f120:	csinc	x28, x28, xzr, ne  // ne = any
  40f124:	cmp	x0, x28
  40f128:	b.ls	40e524 <__fxstatat@plt+0xbad4>  // b.plast
  40f12c:	cbz	x22, 40e4f8 <__fxstatat@plt+0xbaa8>
  40f130:	cmp	w19, #0x1
  40f134:	b.le	40f16c <__fxstatat@plt+0xc71c>
  40f138:	sxtw	x2, w19
  40f13c:	str	x3, [sp, #144]
  40f140:	mov	w0, #0x2b                  	// #43
  40f144:	cmp	w5, #0x30
  40f148:	sub	x2, x2, #0x1
  40f14c:	ccmp	w5, w0, #0x4, ne  // ne = any
  40f150:	add	x4, x22, x2
  40f154:	mov	x0, x22
  40f158:	b.ne	40fad4 <__fxstatat@plt+0xd084>  // b.any
  40f15c:	mov	x22, x4
  40f160:	mov	w1, #0x30                  	// #48
  40f164:	bl	402680 <memset@plt>
  40f168:	ldr	x3, [sp, #144]
  40f16c:	mov	w0, #0xa                   	// #10
  40f170:	strb	w0, [x22], #1
  40f174:	b	40e4f8 <__fxstatat@plt+0xbaa8>
  40f178:	cmp	w28, #0x45
  40f17c:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40f180:	ldr	w0, [x3, #16]
  40f184:	mov	w7, #0x0                   	// #0
  40f188:	mov	w15, #0x0                   	// #0
  40f18c:	mov	w13, #0x2                   	// #2
  40f190:	adds	w2, w0, #0x1
  40f194:	cset	w14, lt  // lt = tstop
  40f198:	cset	w4, ge  // ge = tcont
  40f19c:	b	40e9b8 <__fxstatat@plt+0xbf68>
  40f1a0:	cmp	w28, #0x45
  40f1a4:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40f1a8:	mov	w0, w27
  40f1ac:	cmp	w5, #0x0
  40f1b0:	mov	w2, #0x5f                  	// #95
  40f1b4:	mov	w13, #0x2                   	// #2
  40f1b8:	csel	w5, w5, w2, ne  // ne = any
  40f1bc:	b	40ea70 <__fxstatat@plt+0xc020>
  40f1c0:	cmp	w28, #0x45
  40f1c4:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40f1c8:	ldr	w0, [x3, #8]
  40f1cc:	b	40f1ac <__fxstatat@plt+0xc75c>
  40f1d0:	cmp	w28, #0x45
  40f1d4:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40f1d8:	ldp	w7, w0, [x3, #24]
  40f1dc:	mov	w2, #0x2493                	// #9363
  40f1e0:	movk	w2, #0x9249, lsl #16
  40f1e4:	mov	w13, #0x2                   	// #2
  40f1e8:	add	w7, w7, #0x6
  40f1ec:	smull	x4, w7, w2
  40f1f0:	lsr	x4, x4, #32
  40f1f4:	add	w4, w7, w4
  40f1f8:	asr	w4, w4, #2
  40f1fc:	sub	w4, w4, w7, asr #31
  40f200:	lsl	w14, w4, #3
  40f204:	sub	w4, w14, w4
  40f208:	sub	w7, w7, w4
  40f20c:	sub	w0, w0, w7
  40f210:	add	w0, w0, #0x7
  40f214:	smull	x2, w0, w2
  40f218:	lsr	x2, x2, #32
  40f21c:	add	w2, w0, w2
  40f220:	asr	w2, w2, #2
  40f224:	sub	w0, w2, w0, asr #31
  40f228:	b	40ea70 <__fxstatat@plt+0xc020>
  40f22c:	cmp	w28, #0x45
  40f230:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40f234:	ldp	w4, w0, [x3, #24]
  40f238:	mov	w2, #0x2493                	// #9363
  40f23c:	movk	w2, #0x9249, lsl #16
  40f240:	mov	w13, #0x2                   	// #2
  40f244:	sub	w0, w0, w4
  40f248:	b	40f210 <__fxstatat@plt+0xc7c0>
  40f24c:	cmp	w28, #0x45
  40f250:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40f254:	ldr	w0, [x3]
  40f258:	mov	w13, #0x2                   	// #2
  40f25c:	b	40ea70 <__fxstatat@plt+0xc020>
  40f260:	cmp	w28, #0x45
  40f264:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40f268:	cmn	w19, #0x1
  40f26c:	b.ne	40f9d4 <__fxstatat@plt+0xcf84>  // b.any
  40f270:	mov	w19, #0x9                   	// #9
  40f274:	ldr	w0, [sp, #1272]
  40f278:	mov	w13, w19
  40f27c:	b	40ea70 <__fxstatat@plt+0xc020>
  40f280:	cmp	w28, #0x45
  40f284:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40f288:	ldr	w0, [x3, #28]
  40f28c:	mov	w7, #0x0                   	// #0
  40f290:	mov	w15, #0x0                   	// #0
  40f294:	mov	w13, #0x3                   	// #3
  40f298:	adds	w2, w0, #0x1
  40f29c:	cset	w14, lt  // lt = tstop
  40f2a0:	cset	w4, ge  // ge = tcont
  40f2a4:	b	40e9b8 <__fxstatat@plt+0xbf68>
  40f2a8:	cmp	w28, #0x45
  40f2ac:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40f2b0:	ldr	w0, [x3, #12]
  40f2b4:	mov	w13, #0x2                   	// #2
  40f2b8:	b	40ea70 <__fxstatat@plt+0xc020>
  40f2bc:	cmp	w28, #0x45
  40f2c0:	b.eq	40e5e8 <__fxstatat@plt+0xbb98>  // b.none
  40f2c4:	ldr	w0, [x3, #12]
  40f2c8:	b	40f1ac <__fxstatat@plt+0xc75c>
  40f2cc:	ldrb	w0, [x20, #1]
  40f2d0:	add	x4, x20, #0x1
  40f2d4:	mov	x13, #0x1                   	// #1
  40f2d8:	cmp	w0, #0x3a
  40f2dc:	b.eq	40f404 <__fxstatat@plt+0xc9b4>  // b.none
  40f2e0:	cmp	w0, #0x7a
  40f2e4:	b.ne	40e5e8 <__fxstatat@plt+0xbb98>  // b.any
  40f2e8:	ldr	w0, [x3, #32]
  40f2ec:	tbnz	w0, #31, 40e500 <__fxstatat@plt+0xbab0>
  40f2f0:	ldr	x2, [x3, #40]
  40f2f4:	mov	w14, #0x1                   	// #1
  40f2f8:	cmp	w2, #0x0
  40f2fc:	b.lt	40f314 <__fxstatat@plt+0xc8c4>  // b.tstop
  40f300:	mov	w14, #0x0                   	// #0
  40f304:	b.ne	40f314 <__fxstatat@plt+0xc8c4>  // b.any
  40f308:	ldrb	w0, [x23]
  40f30c:	cmp	w0, #0x2d
  40f310:	cset	w14, eq  // eq = none
  40f314:	mov	w7, #0x8889                	// #34953
  40f318:	asr	w16, w2, #31
  40f31c:	movk	w7, #0x8888, lsl #16
  40f320:	mov	w0, #0xb3c5                	// #46021
  40f324:	movk	w0, #0x91a2, lsl #16
  40f328:	cmp	x13, #0x2
  40f32c:	smull	x15, w2, w7
  40f330:	smull	x0, w2, w0
  40f334:	lsr	x15, x15, #32
  40f338:	add	w15, w15, w2
  40f33c:	lsr	x0, x0, #32
  40f340:	add	w0, w0, w2
  40f344:	asr	w15, w15, #5
  40f348:	sub	w15, w15, w16
  40f34c:	asr	w0, w0, #11
  40f350:	sub	w0, w0, w16
  40f354:	lsl	w16, w15, #4
  40f358:	smull	x7, w15, w7
  40f35c:	sub	w16, w16, w15
  40f360:	sub	w16, w2, w16, lsl #2
  40f364:	lsr	x7, x7, #32
  40f368:	add	w7, w15, w7
  40f36c:	asr	w7, w7, #5
  40f370:	sub	w7, w7, w15, asr #31
  40f374:	lsl	w2, w7, #4
  40f378:	sub	w7, w2, w7
  40f37c:	sub	w7, w15, w7, lsl #2
  40f380:	b.eq	40fa90 <__fxstatat@plt+0xd040>  // b.none
  40f384:	b.hi	40f7ec <__fxstatat@plt+0xcd9c>  // b.pmore
  40f388:	cbz	x13, 40fae8 <__fxstatat@plt+0xd098>
  40f38c:	mov	w2, #0x64                  	// #100
  40f390:	mov	x20, x4
  40f394:	mov	w15, #0x1                   	// #1
  40f398:	eor	w4, w14, #0x1
  40f39c:	madd	w2, w0, w2, w7
  40f3a0:	mov	w13, #0x6                   	// #6
  40f3a4:	mov	w7, #0x4                   	// #4
  40f3a8:	b	40e9b8 <__fxstatat@plt+0xbf68>
  40f3ac:	mov	x4, x20
  40f3b0:	mov	x13, #0x0                   	// #0
  40f3b4:	b	40f2e8 <__fxstatat@plt+0xc898>
  40f3b8:	adrp	x28, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40f3bc:	mov	w6, #0xffffffff            	// #-1
  40f3c0:	add	x28, x28, #0xd10
  40f3c4:	b	40eaac <__fxstatat@plt+0xc05c>
  40f3c8:	str	wzr, [sp, #160]
  40f3cc:	ldr	w0, [sp, #160]
  40f3d0:	cmp	w4, #0x0
  40f3d4:	csel	w12, w12, wzr, eq  // eq = none
  40f3d8:	mov	w1, #0x70                  	// #112
  40f3dc:	csel	w0, w0, w4, eq  // eq = none
  40f3e0:	str	w0, [sp, #160]
  40f3e4:	b	40e75c <__fxstatat@plt+0xbd0c>
  40f3e8:	mov	w0, #0x1                   	// #1
  40f3ec:	str	w0, [sp, #160]
  40f3f0:	b	40f3cc <__fxstatat@plt+0xc97c>
  40f3f4:	adrp	x28, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40f3f8:	mov	w6, #0xffffffff            	// #-1
  40f3fc:	add	x28, x28, #0xd00
  40f400:	b	40eaac <__fxstatat@plt+0xc05c>
  40f404:	add	x13, x13, #0x1
  40f408:	add	x4, x20, x13
  40f40c:	ldrb	w0, [x20, x13]
  40f410:	cmp	w0, #0x3a
  40f414:	b.ne	40f2e0 <__fxstatat@plt+0xc890>  // b.any
  40f418:	b	40f404 <__fxstatat@plt+0xc9b4>
  40f41c:	cmp	w19, w13
  40f420:	csel	w13, w19, w13, ge  // ge = tcont
  40f424:	cbnz	w14, 40f568 <__fxstatat@plt+0xcb18>
  40f428:	cbz	w15, 40ef5c <__fxstatat@plt+0xc50c>
  40f42c:	cmp	w5, #0x2d
  40f430:	mov	w14, #0x2b                  	// #43
  40f434:	b.eq	40f818 <__fxstatat@plt+0xcdc8>  // b.none
  40f438:	add	x6, sp, #0xef
  40f43c:	sub	w4, w13, #0x1
  40f440:	sub	x6, x6, x28
  40f444:	sub	x0, x24, x21
  40f448:	sub	w4, w4, w6
  40f44c:	cmp	w4, #0x0
  40f450:	b.le	40f6b8 <__fxstatat@plt+0xcc68>
  40f454:	cmp	w5, #0x5f
  40f458:	b.eq	40f75c <__fxstatat@plt+0xcd0c>  // b.none
  40f45c:	cmp	x0, w13, sxtw
  40f460:	b.ls	40e524 <__fxstatat@plt+0xbad4>  // b.plast
  40f464:	cbz	w14, 40f7e0 <__fxstatat@plt+0xcd90>
  40f468:	cmp	w19, #0x0
  40f46c:	csel	w1, w19, wzr, ge  // ge = tcont
  40f470:	sxtw	x1, w1
  40f474:	cmp	x1, #0x0
  40f478:	csinc	x2, x1, xzr, ne  // ne = any
  40f47c:	cmp	x2, x0
  40f480:	b.cs	40e524 <__fxstatat@plt+0xbad4>  // b.hs, b.nlast
  40f484:	sxtw	x4, w4
  40f488:	add	x21, x21, x2
  40f48c:	cbz	x22, 40f538 <__fxstatat@plt+0xcae8>
  40f490:	cmp	w13, #0x0
  40f494:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  40f498:	b.ls	40f4f8 <__fxstatat@plt+0xcaa8>  // b.plast
  40f49c:	sxtw	x2, w19
  40f4a0:	str	w5, [sp, #144]
  40f4a4:	str	w12, [sp, #152]
  40f4a8:	mov	w0, #0x2b                  	// #43
  40f4ac:	str	w13, [sp, #160]
  40f4b0:	cmp	w5, #0x30
  40f4b4:	str	x4, [sp, #168]
  40f4b8:	sub	x2, x2, #0x1
  40f4bc:	str	w14, [sp, #176]
  40f4c0:	ccmp	w5, w0, #0x4, ne  // ne = any
  40f4c4:	str	x3, [sp, #184]
  40f4c8:	add	x6, x22, x2
  40f4cc:	mov	x0, x22
  40f4d0:	b.ne	40fb3c <__fxstatat@plt+0xd0ec>  // b.any
  40f4d4:	mov	x22, x6
  40f4d8:	mov	w1, #0x30                  	// #48
  40f4dc:	bl	402680 <memset@plt>
  40f4e0:	ldr	w5, [sp, #144]
  40f4e4:	ldr	w12, [sp, #152]
  40f4e8:	ldr	w13, [sp, #160]
  40f4ec:	ldr	w14, [sp, #176]
  40f4f0:	ldr	x4, [sp, #168]
  40f4f4:	ldr	x3, [sp, #184]
  40f4f8:	strb	w14, [x22], #1
  40f4fc:	mov	x0, x22
  40f500:	mov	x2, x4
  40f504:	add	x22, x22, x4
  40f508:	mov	w1, #0x30                  	// #48
  40f50c:	str	x4, [sp, #144]
  40f510:	str	w5, [sp, #152]
  40f514:	str	w12, [sp, #160]
  40f518:	str	w13, [sp, #168]
  40f51c:	str	x3, [sp, #176]
  40f520:	bl	402680 <memset@plt>
  40f524:	ldr	w5, [sp, #152]
  40f528:	ldr	w12, [sp, #160]
  40f52c:	ldr	w13, [sp, #168]
  40f530:	ldr	x4, [sp, #144]
  40f534:	ldr	x3, [sp, #176]
  40f538:	add	x21, x21, x4
  40f53c:	add	x6, sp, #0xef
  40f540:	mov	x4, x20
  40f544:	sub	x0, x24, x21
  40f548:	sub	x6, x6, x28
  40f54c:	mov	x7, #0x0                   	// #0
  40f550:	mov	w19, #0x0                   	// #0
  40f554:	b	40ef8c <__fxstatat@plt+0xc53c>
  40f558:	mov	x20, x7
  40f55c:	mov	w28, w1
  40f560:	mov	w19, #0x7fffffff            	// #2147483647
  40f564:	b	40e5cc <__fxstatat@plt+0xbb7c>
  40f568:	cmp	w5, #0x2d
  40f56c:	mov	w14, #0x2d                  	// #45
  40f570:	b.ne	40f438 <__fxstatat@plt+0xc9e8>  // b.any
  40f574:	cmp	w19, #0x0
  40f578:	sub	x0, x24, x21
  40f57c:	csel	w7, w19, wzr, ge  // ge = tcont
  40f580:	sxtw	x7, w7
  40f584:	cmp	x7, #0x0
  40f588:	csinc	x4, x7, xzr, ne  // ne = any
  40f58c:	cmp	x0, x4
  40f590:	b.ls	40e524 <__fxstatat@plt+0xbad4>  // b.plast
  40f594:	cbz	x22, 40f5a8 <__fxstatat@plt+0xcb58>
  40f598:	cmp	w13, #0x0
  40f59c:	ccmp	x7, #0x1, #0x0, eq  // eq = none
  40f5a0:	b.hi	40f5c4 <__fxstatat@plt+0xcb74>  // b.pmore
  40f5a4:	strb	w5, [x22], #1
  40f5a8:	add	x21, x21, x4
  40f5ac:	add	x6, sp, #0xef
  40f5b0:	mov	x4, x20
  40f5b4:	sub	x0, x24, x21
  40f5b8:	sub	x6, x6, x28
  40f5bc:	mov	w5, #0x2d                  	// #45
  40f5c0:	b	40ef8c <__fxstatat@plt+0xc53c>
  40f5c4:	sxtw	x2, w19
  40f5c8:	mov	x0, x22
  40f5cc:	sub	x2, x2, #0x1
  40f5d0:	mov	w1, #0x20                  	// #32
  40f5d4:	add	x22, x22, x2
  40f5d8:	str	w12, [sp, #144]
  40f5dc:	str	w13, [sp, #152]
  40f5e0:	stp	x7, x4, [sp, #160]
  40f5e4:	str	w5, [sp, #176]
  40f5e8:	str	x3, [sp, #184]
  40f5ec:	bl	402680 <memset@plt>
  40f5f0:	ldr	w12, [sp, #144]
  40f5f4:	ldr	w13, [sp, #152]
  40f5f8:	ldr	w5, [sp, #176]
  40f5fc:	ldp	x7, x4, [sp, #160]
  40f600:	ldr	x3, [sp, #184]
  40f604:	b	40f5a4 <__fxstatat@plt+0xcb54>
  40f608:	bl	4023c0 <memcpy@plt>
  40f60c:	ldp	x6, x4, [sp, #144]
  40f610:	ldr	x3, [sp, #160]
  40f614:	add	x22, x22, x6
  40f618:	b	40f018 <__fxstatat@plt+0xc5c8>
  40f61c:	bl	4023c0 <memcpy@plt>
  40f620:	add	x22, x22, x28
  40f624:	ldp	x4, x7, [sp, #144]
  40f628:	ldr	x3, [sp, #160]
  40f62c:	b	40e6a4 <__fxstatat@plt+0xbc54>
  40f630:	mov	x21, #0x0                   	// #0
  40f634:	b	40e510 <__fxstatat@plt+0xbac0>
  40f638:	bl	4023c0 <memcpy@plt>
  40f63c:	add	x22, x22, x20
  40f640:	ldp	x4, x7, [sp, #144]
  40f644:	ldr	x3, [sp, #160]
  40f648:	b	40e84c <__fxstatat@plt+0xbdfc>
  40f64c:	mov	x0, x22
  40f650:	bl	40e388 <__fxstatat@plt+0xb938>
  40f654:	add	x22, x22, x20
  40f658:	ldp	x4, x7, [sp, #144]
  40f65c:	ldr	x3, [sp, #160]
  40f660:	b	40e84c <__fxstatat@plt+0xbdfc>
  40f664:	mov	x22, x5
  40f668:	mov	w1, #0x20                  	// #32
  40f66c:	bl	402680 <memset@plt>
  40f670:	ldr	w12, [sp, #152]
  40f674:	ldr	x4, [sp, #144]
  40f678:	ldp	x7, x3, [sp, #168]
  40f67c:	b	40e81c <__fxstatat@plt+0xbdcc>
  40f680:	mov	x22, x5
  40f684:	mov	w1, #0x20                  	// #32
  40f688:	bl	402680 <memset@plt>
  40f68c:	ldr	w12, [sp, #152]
  40f690:	ldr	x4, [sp, #144]
  40f694:	ldp	x6, x3, [sp, #160]
  40f698:	b	40eff0 <__fxstatat@plt+0xc5a0>
  40f69c:	mov	x22, x5
  40f6a0:	mov	w1, #0x20                  	// #32
  40f6a4:	bl	402680 <memset@plt>
  40f6a8:	ldr	w12, [sp, #160]
  40f6ac:	ldp	x6, x4, [sp, #144]
  40f6b0:	ldp	x7, x3, [sp, #168]
  40f6b4:	b	40e67c <__fxstatat@plt+0xbc2c>
  40f6b8:	cmp	w19, #0x0
  40f6bc:	csel	w7, w19, wzr, ge  // ge = tcont
  40f6c0:	sxtw	x7, w7
  40f6c4:	cmp	x7, #0x0
  40f6c8:	csinc	x4, x7, xzr, ne  // ne = any
  40f6cc:	cmp	x4, x0
  40f6d0:	b.cs	40e524 <__fxstatat@plt+0xbad4>  // b.hs, b.nlast
  40f6d4:	cbz	x22, 40f74c <__fxstatat@plt+0xccfc>
  40f6d8:	cmp	w13, #0x0
  40f6dc:	ccmp	x7, #0x1, #0x0, eq  // eq = none
  40f6e0:	b.ls	40f748 <__fxstatat@plt+0xccf8>  // b.plast
  40f6e4:	sxtw	x2, w19
  40f6e8:	str	w5, [sp, #144]
  40f6ec:	str	w12, [sp, #152]
  40f6f0:	mov	w0, #0x2b                  	// #43
  40f6f4:	str	w13, [sp, #160]
  40f6f8:	cmp	w5, #0x30
  40f6fc:	stp	x4, x7, [sp, #168]
  40f700:	sub	x2, x2, #0x1
  40f704:	ccmp	w5, w0, #0x4, ne  // ne = any
  40f708:	str	x6, [sp, #184]
  40f70c:	add	x15, x22, x2
  40f710:	str	w14, [sp, #192]
  40f714:	mov	x0, x22
  40f718:	str	x3, [sp, #200]
  40f71c:	b.ne	40fb10 <__fxstatat@plt+0xd0c0>  // b.any
  40f720:	mov	x22, x15
  40f724:	mov	w1, #0x30                  	// #48
  40f728:	bl	402680 <memset@plt>
  40f72c:	ldp	x4, x7, [sp, #168]
  40f730:	ldr	w5, [sp, #144]
  40f734:	ldr	w12, [sp, #152]
  40f738:	ldr	w13, [sp, #160]
  40f73c:	ldr	w14, [sp, #192]
  40f740:	ldr	x6, [sp, #184]
  40f744:	ldr	x3, [sp, #200]
  40f748:	strb	w14, [x22], #1
  40f74c:	add	x21, x21, x4
  40f750:	mov	x4, x20
  40f754:	sub	x0, x24, x21
  40f758:	b	40ef8c <__fxstatat@plt+0xc53c>
  40f75c:	cmp	x0, w4, sxtw
  40f760:	sxtw	x2, w4
  40f764:	b.ls	40e524 <__fxstatat@plt+0xbad4>  // b.plast
  40f768:	cbz	x22, 40f7b4 <__fxstatat@plt+0xcd64>
  40f76c:	mov	x0, x22
  40f770:	mov	w1, #0x20                  	// #32
  40f774:	add	x22, x22, x2
  40f778:	str	x2, [sp, #144]
  40f77c:	str	w5, [sp, #152]
  40f780:	str	w12, [sp, #160]
  40f784:	str	w13, [sp, #168]
  40f788:	str	w14, [sp, #176]
  40f78c:	str	w4, [sp, #184]
  40f790:	str	x3, [sp, #192]
  40f794:	bl	402680 <memset@plt>
  40f798:	ldr	w5, [sp, #152]
  40f79c:	ldr	w12, [sp, #160]
  40f7a0:	ldr	w13, [sp, #168]
  40f7a4:	ldr	w14, [sp, #176]
  40f7a8:	ldr	w4, [sp, #184]
  40f7ac:	ldr	x2, [sp, #144]
  40f7b0:	ldr	x3, [sp, #192]
  40f7b4:	add	x21, x21, x2
  40f7b8:	cmp	w19, w4
  40f7bc:	b.le	40f8d0 <__fxstatat@plt+0xce80>
  40f7c0:	sub	w19, w19, w4
  40f7c4:	sxtw	x7, w19
  40f7c8:	sub	x0, x24, x21
  40f7cc:	cbnz	w14, 40f848 <__fxstatat@plt+0xcdf8>
  40f7d0:	add	x6, sp, #0xef
  40f7d4:	mov	x4, x20
  40f7d8:	sub	x6, x6, x28
  40f7dc:	b	40ef8c <__fxstatat@plt+0xc53c>
  40f7e0:	sxtw	x4, w4
  40f7e4:	cbz	x22, 40f538 <__fxstatat@plt+0xcae8>
  40f7e8:	b	40f4fc <__fxstatat@plt+0xcaac>
  40f7ec:	cmp	x13, #0x3
  40f7f0:	b.ne	40fb04 <__fxstatat@plt+0xd0b4>  // b.any
  40f7f4:	cbnz	w16, 40fa90 <__fxstatat@plt+0xd040>
  40f7f8:	cbnz	w7, 40f38c <__fxstatat@plt+0xc93c>
  40f7fc:	mov	x20, x4
  40f800:	mov	w2, w0
  40f804:	eor	w4, w14, #0x1
  40f808:	mov	w15, #0x1                   	// #1
  40f80c:	b	40e9b8 <__fxstatat@plt+0xbf68>
  40f810:	mov	w13, #0x0                   	// #0
  40f814:	b	40e9c4 <__fxstatat@plt+0xbf74>
  40f818:	mov	w5, #0x2b                  	// #43
  40f81c:	b	40f574 <__fxstatat@plt+0xcb24>
  40f820:	mov	x22, x14
  40f824:	mov	w1, #0x20                  	// #32
  40f828:	bl	402680 <memset@plt>
  40f82c:	ldr	w5, [sp, #152]
  40f830:	ldr	w12, [sp, #160]
  40f834:	ldr	w6, [sp, #168]
  40f838:	ldr	x7, [sp, #144]
  40f83c:	ldp	x4, x13, [sp, #176]
  40f840:	ldr	x3, [sp, #192]
  40f844:	b	40eb80 <__fxstatat@plt+0xc130>
  40f848:	cmp	x7, #0x0
  40f84c:	csinc	x4, x7, xzr, ne  // ne = any
  40f850:	cmp	x4, x0
  40f854:	b.cs	40e524 <__fxstatat@plt+0xbad4>  // b.hs, b.nlast
  40f858:	cbz	x22, 40f86c <__fxstatat@plt+0xce1c>
  40f85c:	cmp	w13, #0x0
  40f860:	ccmp	x7, #0x1, #0x0, eq  // eq = none
  40f864:	b.hi	40f884 <__fxstatat@plt+0xce34>  // b.pmore
  40f868:	strb	w14, [x22], #1
  40f86c:	add	x21, x21, x4
  40f870:	add	x6, sp, #0xef
  40f874:	mov	x4, x20
  40f878:	sub	x0, x24, x21
  40f87c:	sub	x6, x6, x28
  40f880:	b	40ef8c <__fxstatat@plt+0xc53c>
  40f884:	sxtw	x2, w19
  40f888:	mov	x0, x22
  40f88c:	sub	x2, x2, #0x1
  40f890:	mov	w1, #0x20                  	// #32
  40f894:	add	x22, x22, x2
  40f898:	str	w5, [sp, #144]
  40f89c:	str	w12, [sp, #152]
  40f8a0:	str	w13, [sp, #160]
  40f8a4:	stp	x4, x7, [sp, #168]
  40f8a8:	str	w14, [sp, #184]
  40f8ac:	str	x3, [sp, #192]
  40f8b0:	bl	402680 <memset@plt>
  40f8b4:	ldr	w5, [sp, #144]
  40f8b8:	ldr	w12, [sp, #152]
  40f8bc:	ldr	w13, [sp, #160]
  40f8c0:	ldr	w14, [sp, #184]
  40f8c4:	ldp	x4, x7, [sp, #168]
  40f8c8:	ldr	x3, [sp, #192]
  40f8cc:	b	40f868 <__fxstatat@plt+0xce18>
  40f8d0:	mov	x7, #0x0                   	// #0
  40f8d4:	mov	w19, #0x0                   	// #0
  40f8d8:	b	40f7c8 <__fxstatat@plt+0xcd78>
  40f8dc:	cmp	w5, #0x2b
  40f8e0:	mov	w15, #0x0                   	// #0
  40f8e4:	mov	w13, #0x4                   	// #4
  40f8e8:	mov	w0, #0x270f                	// #9999
  40f8ec:	b.ne	40e9b4 <__fxstatat@plt+0xbf64>  // b.any
  40f8f0:	cmp	w0, w2
  40f8f4:	mov	w15, #0x1                   	// #1
  40f8f8:	mov	w5, #0x2b                  	// #43
  40f8fc:	b.cc	40e9b4 <__fxstatat@plt+0xbf64>  // b.lo, b.ul, b.last
  40f900:	cmp	w19, w13
  40f904:	mov	w5, #0x2b                  	// #43
  40f908:	cset	w15, gt
  40f90c:	b	40e9b4 <__fxstatat@plt+0xbf64>
  40f910:	add	w2, w0, #0x64
  40f914:	cbz	w5, 40fbf0 <__fxstatat@plt+0xd1a0>
  40f918:	cmp	w5, #0x2b
  40f91c:	b.eq	40fb64 <__fxstatat@plt+0xd114>  // b.none
  40f920:	mov	w4, #0x1                   	// #1
  40f924:	b	40e9a8 <__fxstatat@plt+0xbf58>
  40f928:	sub	w4, w4, #0x1
  40f92c:	mov	w0, #0x16d                 	// #365
  40f930:	tst	x4, #0x3
  40f934:	b.ne	40f97c <__fxstatat@plt+0xcf2c>  // b.any
  40f938:	mov	w14, #0x5c29                	// #23593
  40f93c:	mov	w0, #0xb850                	// #47184
  40f940:	movk	w0, #0x51e, lsl #16
  40f944:	movk	w14, #0xc28f, lsl #16
  40f948:	mov	w15, #0x5c28                	// #23592
  40f94c:	madd	w14, w4, w14, w0
  40f950:	movk	w15, #0x28f, lsl #16
  40f954:	mov	w0, #0x16e                 	// #366
  40f958:	ror	w14, w14, #2
  40f95c:	cmp	w14, w15
  40f960:	b.hi	40f97c <__fxstatat@plt+0xcf2c>  // b.pmore
  40f964:	mov	w14, #0x190                 	// #400
  40f968:	sdiv	w0, w4, w14
  40f96c:	msub	w4, w0, w14, w4
  40f970:	cmp	w4, #0x0
  40f974:	cset	w0, eq  // eq = none
  40f978:	add	w0, w0, #0x16d
  40f97c:	add	w13, w13, w0
  40f980:	mov	w0, #0x2493                	// #9363
  40f984:	sub	w2, w13, w2
  40f988:	movk	w0, #0x9249, lsl #16
  40f98c:	add	w2, w2, #0x17e
  40f990:	mov	w4, #0xffffffff            	// #-1
  40f994:	smull	x0, w2, w0
  40f998:	lsr	x0, x0, #32
  40f99c:	add	w0, w2, w0
  40f9a0:	asr	w0, w0, #2
  40f9a4:	sub	w0, w0, w2, asr #31
  40f9a8:	lsl	w14, w0, #3
  40f9ac:	sub	w0, w14, w0
  40f9b0:	sub	w2, w2, w0
  40f9b4:	sub	w2, w13, w2
  40f9b8:	add	w0, w2, #0x3
  40f9bc:	b	40e94c <__fxstatat@plt+0xbefc>
  40f9c0:	adrp	x28, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40f9c4:	mov	w6, #0x4                   	// #4
  40f9c8:	add	x28, x28, #0xcf0
  40f9cc:	mov	w5, #0x2b                  	// #43
  40f9d0:	b	40eaac <__fxstatat@plt+0xc05c>
  40f9d4:	cmp	w19, #0x8
  40f9d8:	b.gt	40fc14 <__fxstatat@plt+0xd1c4>
  40f9dc:	ldr	w0, [sp, #1272]
  40f9e0:	mov	w7, #0x6667                	// #26215
  40f9e4:	mov	w4, w19
  40f9e8:	movk	w7, #0x6666, lsl #16
  40f9ec:	nop
  40f9f0:	smull	x2, w0, w7
  40f9f4:	add	w4, w4, #0x1
  40f9f8:	cmp	w4, #0x9
  40f9fc:	asr	x2, x2, #34
  40fa00:	sub	w0, w2, w0, asr #31
  40fa04:	b.ne	40f9f0 <__fxstatat@plt+0xcfa0>  // b.any
  40fa08:	mov	w13, w19
  40fa0c:	b	40ea70 <__fxstatat@plt+0xc020>
  40fa10:	cmp	w5, #0x2b
  40fa14:	b.ne	40ecf4 <__fxstatat@plt+0xc2a4>  // b.any
  40fa18:	mov	w13, #0x2                   	// #2
  40fa1c:	mov	w0, #0x63                  	// #99
  40fa20:	b	40f8f0 <__fxstatat@plt+0xcea0>
  40fa24:	mov	w2, #0x2493                	// #9363
  40fa28:	mov	w13, #0x2                   	// #2
  40fa2c:	movk	w2, #0x9249, lsl #16
  40fa30:	smull	x2, w0, w2
  40fa34:	lsr	x2, x2, #32
  40fa38:	add	w2, w0, w2
  40fa3c:	asr	w2, w2, #2
  40fa40:	sub	w0, w2, w0, asr #31
  40fa44:	add	w0, w0, #0x1
  40fa48:	b	40ea70 <__fxstatat@plt+0xc020>
  40fa4c:	mov	w13, #0xfffff894            	// #-1900
  40fa50:	sub	w13, w13, w4
  40fa54:	cmp	w7, w13
  40fa58:	add	w0, w7, #0x76c
  40fa5c:	add	w2, w0, w4
  40fa60:	cset	w14, lt  // lt = tstop
  40fa64:	cset	w4, ge  // ge = tcont
  40fa68:	cbnz	w5, 40f8dc <__fxstatat@plt+0xce8c>
  40fa6c:	ldr	w0, [sp, #140]
  40fa70:	cmp	w0, #0x2b
  40fa74:	b.eq	40fbbc <__fxstatat@plt+0xd16c>  // b.none
  40fa78:	mov	w5, w0
  40fa7c:	mov	w15, #0x0                   	// #0
  40fa80:	mov	w13, #0x4                   	// #4
  40fa84:	b	40e9b4 <__fxstatat@plt+0xbf64>
  40fa88:	mov	w14, #0x0                   	// #0
  40fa8c:	b	40f454 <__fxstatat@plt+0xca04>
  40fa90:	mov	w13, #0x64                  	// #100
  40fa94:	mov	w2, #0x2710                	// #10000
  40fa98:	mov	x20, x4
  40fa9c:	mov	w15, #0x1                   	// #1
  40faa0:	mul	w7, w7, w13
  40faa4:	eor	w4, w14, #0x1
  40faa8:	madd	w0, w0, w2, w7
  40faac:	mov	w13, #0x9                   	// #9
  40fab0:	mov	w7, #0x14                  	// #20
  40fab4:	add	w2, w0, w16
  40fab8:	b	40e9b8 <__fxstatat@plt+0xbf68>
  40fabc:	bl	4023c0 <memcpy@plt>
  40fac0:	ldr	x3, [sp, #152]
  40fac4:	b	40edf8 <__fxstatat@plt+0xc3a8>
  40fac8:	bl	40e388 <__fxstatat@plt+0xb938>
  40facc:	ldr	x3, [sp, #152]
  40fad0:	b	40edf8 <__fxstatat@plt+0xc3a8>
  40fad4:	mov	x22, x4
  40fad8:	mov	w1, #0x20                  	// #32
  40fadc:	bl	402680 <memset@plt>
  40fae0:	ldr	x3, [sp, #144]
  40fae4:	b	40f16c <__fxstatat@plt+0xc71c>
  40fae8:	mov	w2, #0x64                  	// #100
  40faec:	mov	x20, x4
  40faf0:	mov	w15, #0x1                   	// #1
  40faf4:	eor	w4, w14, #0x1
  40faf8:	madd	w2, w0, w2, w7
  40fafc:	mov	w13, #0x5                   	// #5
  40fb00:	b	40e9b4 <__fxstatat@plt+0xbf64>
  40fb04:	ldrb	w1, [x4]
  40fb08:	mov	x6, x4
  40fb0c:	b	40ec6c <__fxstatat@plt+0xc21c>
  40fb10:	mov	x22, x15
  40fb14:	mov	w1, #0x20                  	// #32
  40fb18:	bl	402680 <memset@plt>
  40fb1c:	ldr	w5, [sp, #144]
  40fb20:	ldr	w12, [sp, #152]
  40fb24:	ldr	w13, [sp, #160]
  40fb28:	ldr	w14, [sp, #192]
  40fb2c:	ldp	x4, x7, [sp, #168]
  40fb30:	ldr	x6, [sp, #184]
  40fb34:	ldr	x3, [sp, #200]
  40fb38:	b	40f748 <__fxstatat@plt+0xccf8>
  40fb3c:	mov	x22, x6
  40fb40:	mov	w1, #0x20                  	// #32
  40fb44:	bl	402680 <memset@plt>
  40fb48:	ldr	w5, [sp, #144]
  40fb4c:	ldr	w12, [sp, #152]
  40fb50:	ldr	w13, [sp, #160]
  40fb54:	ldr	w14, [sp, #176]
  40fb58:	ldr	x4, [sp, #168]
  40fb5c:	ldr	x3, [sp, #184]
  40fb60:	b	40f4f8 <__fxstatat@plt+0xcaa8>
  40fb64:	mov	w4, #0x1                   	// #1
  40fb68:	mov	w14, #0x0                   	// #0
  40fb6c:	mov	w13, #0x2                   	// #2
  40fb70:	b	40f900 <__fxstatat@plt+0xceb0>
  40fb74:	mov	x22, x4
  40fb78:	mov	w1, #0x20                  	// #32
  40fb7c:	bl	402680 <memset@plt>
  40fb80:	ldr	x3, [sp, #144]
  40fb84:	b	40f0bc <__fxstatat@plt+0xc66c>
  40fb88:	mov	x22, x5
  40fb8c:	mov	w1, #0x20                  	// #32
  40fb90:	bl	402680 <memset@plt>
  40fb94:	ldr	w12, [sp, #152]
  40fb98:	ldr	w4, [sp, #160]
  40fb9c:	ldr	x3, [sp, #168]
  40fba0:	b	40edd8 <__fxstatat@plt+0xc388>
  40fba4:	mov	w1, #0x20                  	// #32
  40fba8:	bl	402680 <memset@plt>
  40fbac:	ldrb	w1, [x20]
  40fbb0:	mov	x22, x19
  40fbb4:	ldp	x7, x3, [sp, #144]
  40fbb8:	b	40ec54 <__fxstatat@plt+0xc204>
  40fbbc:	mov	w13, #0x4                   	// #4
  40fbc0:	mov	w0, #0x270f                	// #9999
  40fbc4:	b	40f8f0 <__fxstatat@plt+0xcea0>
  40fbc8:	mov	x28, x6
  40fbcc:	mov	x4, x20
  40fbd0:	mov	x6, x20
  40fbd4:	b	40e624 <__fxstatat@plt+0xbbd4>
  40fbd8:	mov	w2, #0xfffff894            	// #-1900
  40fbdc:	sub	w2, w2, w4
  40fbe0:	cmp	w7, w2
  40fbe4:	b.ge	40f910 <__fxstatat@plt+0xcec0>  // b.tcont
  40fbe8:	neg	w2, w0
  40fbec:	cbnz	w5, 40f918 <__fxstatat@plt+0xcec8>
  40fbf0:	ldr	w0, [sp, #140]
  40fbf4:	cmp	w0, #0x2b
  40fbf8:	b.eq	40fb64 <__fxstatat@plt+0xd114>  // b.none
  40fbfc:	mov	w5, w0
  40fc00:	mov	w4, #0x1                   	// #1
  40fc04:	mov	w15, #0x0                   	// #0
  40fc08:	mov	w14, #0x0                   	// #0
  40fc0c:	mov	w13, #0x2                   	// #2
  40fc10:	b	40e9b4 <__fxstatat@plt+0xbf64>
  40fc14:	ldr	w0, [sp, #1272]
  40fc18:	mov	w13, w19
  40fc1c:	b	40ea70 <__fxstatat@plt+0xc020>
  40fc20:	mov	x20, x6
  40fc24:	b	40e5e8 <__fxstatat@plt+0xbb98>
  40fc28:	mov	w13, #0x0                   	// #0
  40fc2c:	b	40e9d0 <__fxstatat@plt+0xbf80>
  40fc30:	sub	sp, sp, #0x30
  40fc34:	mov	w6, #0xffffffff            	// #-1
  40fc38:	add	x7, sp, #0x2f
  40fc3c:	stp	x29, x30, [sp, #16]
  40fc40:	add	x29, sp, #0x10
  40fc44:	str	x4, [sp]
  40fc48:	mov	w4, #0x0                   	// #0
  40fc4c:	str	w5, [sp, #8]
  40fc50:	mov	w5, #0x0                   	// #0
  40fc54:	strb	wzr, [sp, #47]
  40fc58:	bl	40e438 <__fxstatat@plt+0xb9e8>
  40fc5c:	ldp	x29, x30, [sp, #16]
  40fc60:	add	sp, sp, #0x30
  40fc64:	ret
  40fc68:	stp	x29, x30, [sp, #-48]!
  40fc6c:	mov	x29, sp
  40fc70:	stp	x19, x20, [sp, #16]
  40fc74:	cbz	x0, 40fd4c <__fxstatat@plt+0xd2fc>
  40fc78:	mov	x19, x0
  40fc7c:	mov	w1, #0x2f                  	// #47
  40fc80:	bl	402720 <strrchr@plt>
  40fc84:	mov	x20, x0
  40fc88:	cbz	x0, 40fcec <__fxstatat@plt+0xd29c>
  40fc8c:	str	x21, [sp, #32]
  40fc90:	add	x21, x0, #0x1
  40fc94:	sub	x0, x21, x19
  40fc98:	cmp	x0, #0x6
  40fc9c:	b.le	40fd08 <__fxstatat@plt+0xd2b8>
  40fca0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40fca4:	sub	x0, x20, #0x6
  40fca8:	add	x1, x1, #0xe48
  40fcac:	mov	x2, #0x7                   	// #7
  40fcb0:	bl	402640 <strncmp@plt>
  40fcb4:	cbnz	w0, 40fd08 <__fxstatat@plt+0xd2b8>
  40fcb8:	ldrb	w0, [x20, #1]
  40fcbc:	cmp	w0, #0x6c
  40fcc0:	b.ne	40fd28 <__fxstatat@plt+0xd2d8>  // b.any
  40fcc4:	ldrb	w0, [x21, #1]
  40fcc8:	cmp	w0, #0x74
  40fccc:	b.ne	40fd28 <__fxstatat@plt+0xd2d8>  // b.any
  40fcd0:	ldrb	w0, [x21, #2]
  40fcd4:	cmp	w0, #0x2d
  40fcd8:	b.ne	40fd28 <__fxstatat@plt+0xd2d8>  // b.any
  40fcdc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40fce0:	add	x19, x20, #0x4
  40fce4:	ldr	x21, [sp, #32]
  40fce8:	str	x19, [x0, #1464]
  40fcec:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40fcf0:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40fcf4:	str	x19, [x1, #1872]
  40fcf8:	str	x19, [x0, #1424]
  40fcfc:	ldp	x19, x20, [sp, #16]
  40fd00:	ldp	x29, x30, [sp], #48
  40fd04:	ret
  40fd08:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40fd0c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40fd10:	ldr	x21, [sp, #32]
  40fd14:	str	x19, [x1, #1872]
  40fd18:	str	x19, [x0, #1424]
  40fd1c:	ldp	x19, x20, [sp, #16]
  40fd20:	ldp	x29, x30, [sp], #48
  40fd24:	ret
  40fd28:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  40fd2c:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40fd30:	mov	x19, x21
  40fd34:	str	x19, [x1, #1872]
  40fd38:	str	x19, [x0, #1424]
  40fd3c:	ldp	x19, x20, [sp, #16]
  40fd40:	ldr	x21, [sp, #32]
  40fd44:	ldp	x29, x30, [sp], #48
  40fd48:	ret
  40fd4c:	adrp	x3, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  40fd50:	mov	x2, #0x37                  	// #55
  40fd54:	mov	x1, #0x1                   	// #1
  40fd58:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40fd5c:	ldr	x3, [x3, #1432]
  40fd60:	add	x0, x0, #0xe10
  40fd64:	str	x21, [sp, #32]
  40fd68:	bl	402890 <fwrite@plt>
  40fd6c:	bl	402760 <abort@plt>
  40fd70:	stp	xzr, xzr, [x8]
  40fd74:	cmp	w0, #0xa
  40fd78:	stp	xzr, xzr, [x8, #16]
  40fd7c:	stp	xzr, xzr, [x8, #32]
  40fd80:	str	xzr, [x8, #48]
  40fd84:	b.eq	40fd90 <__fxstatat@plt+0xd340>  // b.none
  40fd88:	str	w0, [x8]
  40fd8c:	ret
  40fd90:	stp	x29, x30, [sp, #-16]!
  40fd94:	mov	x29, sp
  40fd98:	bl	402760 <abort@plt>
  40fd9c:	nop
  40fda0:	stp	x29, x30, [sp, #-48]!
  40fda4:	mov	w2, #0x5                   	// #5
  40fda8:	mov	x29, sp
  40fdac:	stp	x19, x20, [sp, #16]
  40fdb0:	mov	x20, x0
  40fdb4:	str	x21, [sp, #32]
  40fdb8:	mov	w21, w1
  40fdbc:	mov	x1, x0
  40fdc0:	mov	x0, #0x0                   	// #0
  40fdc4:	bl	402970 <dcgettext@plt>
  40fdc8:	mov	x19, x0
  40fdcc:	cmp	x20, x0
  40fdd0:	b.eq	40fde8 <__fxstatat@plt+0xd398>  // b.none
  40fdd4:	mov	x0, x19
  40fdd8:	ldp	x19, x20, [sp, #16]
  40fddc:	ldr	x21, [sp, #32]
  40fde0:	ldp	x29, x30, [sp], #48
  40fde4:	ret
  40fde8:	bl	413a58 <_obstack_memory_used@@Base+0x738>
  40fdec:	ldrb	w1, [x0]
  40fdf0:	and	w1, w1, #0xffffffdf
  40fdf4:	cmp	w1, #0x55
  40fdf8:	b.ne	40fe5c <__fxstatat@plt+0xd40c>  // b.any
  40fdfc:	ldrb	w1, [x0, #1]
  40fe00:	and	w1, w1, #0xffffffdf
  40fe04:	cmp	w1, #0x54
  40fe08:	b.ne	40fed8 <__fxstatat@plt+0xd488>  // b.any
  40fe0c:	ldrb	w1, [x0, #2]
  40fe10:	and	w1, w1, #0xffffffdf
  40fe14:	cmp	w1, #0x46
  40fe18:	b.ne	40fed8 <__fxstatat@plt+0xd488>  // b.any
  40fe1c:	ldrb	w1, [x0, #3]
  40fe20:	cmp	w1, #0x2d
  40fe24:	b.ne	40fed8 <__fxstatat@plt+0xd488>  // b.any
  40fe28:	ldrb	w1, [x0, #4]
  40fe2c:	cmp	w1, #0x38
  40fe30:	b.ne	40fed8 <__fxstatat@plt+0xd488>  // b.any
  40fe34:	ldrb	w0, [x0, #5]
  40fe38:	cbnz	w0, 40fed8 <__fxstatat@plt+0xd488>
  40fe3c:	ldrb	w1, [x19]
  40fe40:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40fe44:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40fe48:	add	x0, x0, #0xe58
  40fe4c:	cmp	w1, #0x60
  40fe50:	add	x19, x19, #0xe70
  40fe54:	csel	x19, x19, x0, eq  // eq = none
  40fe58:	b	40fdd4 <__fxstatat@plt+0xd384>
  40fe5c:	cmp	w1, #0x47
  40fe60:	b.ne	40fed8 <__fxstatat@plt+0xd488>  // b.any
  40fe64:	ldrb	w1, [x0, #1]
  40fe68:	and	w1, w1, #0xffffffdf
  40fe6c:	cmp	w1, #0x42
  40fe70:	b.ne	40fed8 <__fxstatat@plt+0xd488>  // b.any
  40fe74:	ldrb	w1, [x0, #2]
  40fe78:	cmp	w1, #0x31
  40fe7c:	b.ne	40fed8 <__fxstatat@plt+0xd488>  // b.any
  40fe80:	ldrb	w1, [x0, #3]
  40fe84:	cmp	w1, #0x38
  40fe88:	b.ne	40fed8 <__fxstatat@plt+0xd488>  // b.any
  40fe8c:	ldrb	w1, [x0, #4]
  40fe90:	cmp	w1, #0x30
  40fe94:	b.ne	40fed8 <__fxstatat@plt+0xd488>  // b.any
  40fe98:	ldrb	w1, [x0, #5]
  40fe9c:	cmp	w1, #0x33
  40fea0:	b.ne	40fed8 <__fxstatat@plt+0xd488>  // b.any
  40fea4:	ldrb	w1, [x0, #6]
  40fea8:	cmp	w1, #0x30
  40feac:	b.ne	40fed8 <__fxstatat@plt+0xd488>  // b.any
  40feb0:	ldrb	w0, [x0, #7]
  40feb4:	cbnz	w0, 40fed8 <__fxstatat@plt+0xd488>
  40feb8:	ldrb	w1, [x19]
  40febc:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40fec0:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40fec4:	add	x0, x0, #0xe60
  40fec8:	cmp	w1, #0x60
  40fecc:	add	x19, x19, #0xe68
  40fed0:	csel	x19, x19, x0, eq  // eq = none
  40fed4:	b	40fdd4 <__fxstatat@plt+0xd384>
  40fed8:	cmp	w21, #0x9
  40fedc:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40fee0:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40fee4:	add	x0, x0, #0xe78
  40fee8:	add	x19, x19, #0xe50
  40feec:	csel	x19, x19, x0, eq  // eq = none
  40fef0:	mov	x0, x19
  40fef4:	ldp	x19, x20, [sp, #16]
  40fef8:	ldr	x21, [sp, #32]
  40fefc:	ldp	x29, x30, [sp], #48
  40ff00:	ret
  40ff04:	nop
  40ff08:	sub	sp, sp, #0xf0
  40ff0c:	stp	x29, x30, [sp, #16]
  40ff10:	add	x29, sp, #0x10
  40ff14:	stp	x19, x20, [sp, #32]
  40ff18:	mov	w19, w5
  40ff1c:	and	w20, w5, #0x2
  40ff20:	stp	x21, x22, [sp, #48]
  40ff24:	stp	x23, x24, [sp, #64]
  40ff28:	mov	x23, x1
  40ff2c:	stp	x25, x26, [sp, #80]
  40ff30:	mov	w26, w4
  40ff34:	mov	x25, x3
  40ff38:	stp	x27, x28, [sp, #96]
  40ff3c:	mov	x28, x0
  40ff40:	mov	x27, x2
  40ff44:	str	x6, [sp, #112]
  40ff48:	str	w5, [sp, #200]
  40ff4c:	str	x7, [sp, #208]
  40ff50:	bl	402850 <__ctype_get_mb_cur_max@plt>
  40ff54:	mov	x1, x19
  40ff58:	str	x0, [sp, #192]
  40ff5c:	cmp	w26, #0x4
  40ff60:	ubfx	x11, x1, #1, #1
  40ff64:	ldr	x6, [sp, #112]
  40ff68:	b.eq	410c00 <__fxstatat@plt+0xe1b0>  // b.none
  40ff6c:	b.ls	40ffd4 <__fxstatat@plt+0xd584>  // b.plast
  40ff70:	cmp	w26, #0x7
  40ff74:	b.eq	410a90 <__fxstatat@plt+0xe040>  // b.none
  40ff78:	b.ls	4106fc <__fxstatat@plt+0xdcac>  // b.plast
  40ff7c:	sub	w0, w26, #0x8
  40ff80:	cmp	w0, #0x2
  40ff84:	b.hi	410f1c <__fxstatat@plt+0xe4cc>  // b.pmore
  40ff88:	cmp	w26, #0xa
  40ff8c:	b.ne	410b04 <__fxstatat@plt+0xe0b4>  // b.any
  40ff90:	mov	x19, #0x0                   	// #0
  40ff94:	cbz	w20, 410d7c <__fxstatat@plt+0xe32c>
  40ff98:	ldr	x0, [sp, #240]
  40ff9c:	str	w11, [sp, #136]
  40ffa0:	str	x6, [sp, #144]
  40ffa4:	bl	402430 <strlen@plt>
  40ffa8:	mov	x12, x0
  40ffac:	ldr	x0, [sp, #240]
  40ffb0:	mov	w10, #0x1                   	// #1
  40ffb4:	ldr	w11, [sp, #136]
  40ffb8:	mov	w5, w10
  40ffbc:	mov	w7, #0x0                   	// #0
  40ffc0:	str	x0, [sp, #112]
  40ffc4:	str	wzr, [sp, #120]
  40ffc8:	str	xzr, [sp, #128]
  40ffcc:	ldr	x6, [sp, #144]
  40ffd0:	b	410018 <__fxstatat@plt+0xd5c8>
  40ffd4:	cmp	w26, #0x1
  40ffd8:	b.eq	410a5c <__fxstatat@plt+0xe00c>  // b.none
  40ffdc:	b.ls	4106d0 <__fxstatat@plt+0xdc80>  // b.plast
  40ffe0:	cmp	w26, #0x2
  40ffe4:	b.eq	410c24 <__fxstatat@plt+0xe1d4>  // b.none
  40ffe8:	mov	w10, #0x1                   	// #1
  40ffec:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x5ce0>
  40fff0:	mov	w11, w10
  40fff4:	mov	w5, w10
  40fff8:	add	x0, x26, #0xe78
  40fffc:	mov	w7, #0x0                   	// #0
  410000:	mov	x12, #0x1                   	// #1
  410004:	mov	x19, #0x0                   	// #0
  410008:	mov	w26, #0x2                   	// #2
  41000c:	str	x0, [sp, #112]
  410010:	str	wzr, [sp, #120]
  410014:	str	xzr, [sp, #128]
  410018:	mov	w22, w5
  41001c:	mov	w24, w7
  410020:	mov	x20, #0x0                   	// #0
  410024:	nop
  410028:	cmp	x25, x20
  41002c:	cset	w21, ne  // ne = any
  410030:	cmn	x25, #0x1
  410034:	b.eq	410104 <__fxstatat@plt+0xd6b4>  // b.none
  410038:	cbz	w21, 410114 <__fxstatat@plt+0xd6c4>
  41003c:	cmp	w26, #0x2
  410040:	add	x3, x27, x20
  410044:	cset	w5, ne  // ne = any
  410048:	ands	w5, w22, w5
  41004c:	b.eq	41061c <__fxstatat@plt+0xdbcc>  // b.none
  410050:	cbz	x12, 410310 <__fxstatat@plt+0xd8c0>
  410054:	cmp	x12, #0x1
  410058:	add	x1, x20, x12
  41005c:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  410060:	b.ne	410098 <__fxstatat@plt+0xd648>  // b.any
  410064:	mov	x0, x27
  410068:	str	x1, [sp, #136]
  41006c:	str	w5, [sp, #144]
  410070:	stp	x3, x12, [sp, #152]
  410074:	stp	w11, w10, [sp, #172]
  410078:	str	x6, [sp, #184]
  41007c:	bl	402430 <strlen@plt>
  410080:	ldp	x3, x12, [sp, #152]
  410084:	mov	x25, x0
  410088:	ldr	w5, [sp, #144]
  41008c:	ldp	w11, w10, [sp, #172]
  410090:	ldr	x1, [sp, #136]
  410094:	ldr	x6, [sp, #184]
  410098:	cmp	x1, x25
  41009c:	b.hi	410310 <__fxstatat@plt+0xd8c0>  // b.pmore
  4100a0:	ldr	x1, [sp, #112]
  4100a4:	mov	x2, x12
  4100a8:	mov	x0, x3
  4100ac:	stp	x3, x12, [sp, #136]
  4100b0:	str	w5, [sp, #152]
  4100b4:	str	w11, [sp, #160]
  4100b8:	str	w10, [sp, #172]
  4100bc:	str	x6, [sp, #176]
  4100c0:	bl	4027a0 <memcmp@plt>
  4100c4:	ldr	w5, [sp, #152]
  4100c8:	ldr	w11, [sp, #160]
  4100cc:	ldr	w10, [sp, #172]
  4100d0:	ldp	x3, x12, [sp, #136]
  4100d4:	ldr	x6, [sp, #176]
  4100d8:	cbnz	w0, 410310 <__fxstatat@plt+0xd8c0>
  4100dc:	cbnz	w11, 410408 <__fxstatat@plt+0xd9b8>
  4100e0:	ldrb	w4, [x3]
  4100e4:	cmp	w4, #0x7e
  4100e8:	b.hi	410320 <__fxstatat@plt+0xd8d0>  // b.pmore
  4100ec:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  4100f0:	add	x0, x0, #0xee0
  4100f4:	ldrh	w0, [x0, w4, uxtw #1]
  4100f8:	adr	x1, 410104 <__fxstatat@plt+0xd6b4>
  4100fc:	add	x0, x1, w0, sxth #2
  410100:	br	x0
  410104:	ldrb	w0, [x27, x20]
  410108:	cmp	w0, #0x0
  41010c:	cset	w21, ne  // ne = any
  410110:	cbnz	w21, 41003c <__fxstatat@plt+0xd5ec>
  410114:	cmp	w26, #0x2
  410118:	mov	w5, w22
  41011c:	cset	w0, eq  // eq = none
  410120:	mov	w7, w24
  410124:	cmp	w0, #0x0
  410128:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  41012c:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  410130:	b.eq	410ec4 <__fxstatat@plt+0xe474>  // b.none
  410134:	eor	w11, w11, #0x1
  410138:	ands	w0, w0, w11
  41013c:	b.eq	410e24 <__fxstatat@plt+0xe3d4>  // b.none
  410140:	ldr	w1, [sp, #120]
  410144:	cbz	w1, 410e28 <__fxstatat@plt+0xe3d8>
  410148:	cbnz	w10, 410e80 <__fxstatat@plt+0xe430>
  41014c:	ldr	x2, [sp, #128]
  410150:	cmp	x23, #0x0
  410154:	cset	w0, eq  // eq = none
  410158:	cmp	x2, #0x0
  41015c:	mov	x1, x2
  410160:	csel	w0, w0, wzr, ne  // ne = any
  410164:	cbz	w0, 410eb0 <__fxstatat@plt+0xe460>
  410168:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x5ce0>
  41016c:	mov	x12, #0x1                   	// #1
  410170:	mov	w11, #0x0                   	// #0
  410174:	mov	x19, x12
  410178:	str	w0, [sp, #120]
  41017c:	mov	w0, #0x27                  	// #39
  410180:	strb	w0, [x28]
  410184:	ldr	x23, [sp, #128]
  410188:	str	x1, [sp, #128]
  41018c:	add	x1, x26, #0xe78
  410190:	mov	w26, #0x2                   	// #2
  410194:	str	x1, [sp, #112]
  410198:	b	410018 <__fxstatat@plt+0xd5c8>
  41019c:	mov	w0, w5
  4101a0:	mov	w21, w5
  4101a4:	mov	w5, w0
  4101a8:	mov	w1, #0x0                   	// #0
  4101ac:	nop
  4101b0:	cbz	x6, 4102c8 <__fxstatat@plt+0xd878>
  4101b4:	ubfx	x0, x4, #5, #8
  4101b8:	ldr	w0, [x6, x0, lsl #2]
  4101bc:	lsr	w0, w0, w4
  4101c0:	tbz	w0, #0, 4102c8 <__fxstatat@plt+0xd878>
  4101c4:	cmp	w26, #0x2
  4101c8:	cset	w0, eq  // eq = none
  4101cc:	cbnz	w11, 410548 <__fxstatat@plt+0xdaf8>
  4101d0:	eor	w1, w24, #0x1
  4101d4:	ands	w0, w0, w1
  4101d8:	b.eq	41021c <__fxstatat@plt+0xd7cc>  // b.none
  4101dc:	cmp	x23, x19
  4101e0:	b.ls	4101ec <__fxstatat@plt+0xd79c>  // b.plast
  4101e4:	mov	w1, #0x27                  	// #39
  4101e8:	strb	w1, [x28, x19]
  4101ec:	add	x1, x19, #0x1
  4101f0:	cmp	x23, x1
  4101f4:	b.ls	410200 <__fxstatat@plt+0xd7b0>  // b.plast
  4101f8:	mov	w2, #0x24                  	// #36
  4101fc:	strb	w2, [x28, x1]
  410200:	add	x1, x19, #0x2
  410204:	cmp	x23, x1
  410208:	b.ls	410214 <__fxstatat@plt+0xd7c4>  // b.plast
  41020c:	mov	w2, #0x27                  	// #39
  410210:	strb	w2, [x28, x1]
  410214:	add	x19, x19, #0x3
  410218:	mov	w24, w0
  41021c:	cmp	x19, x23
  410220:	b.cs	41022c <__fxstatat@plt+0xd7dc>  // b.hs, b.nlast
  410224:	mov	w0, #0x5c                  	// #92
  410228:	strb	w0, [x28, x19]
  41022c:	add	x19, x19, #0x1
  410230:	add	x20, x20, #0x1
  410234:	cmp	x19, x23
  410238:	b.cs	410240 <__fxstatat@plt+0xd7f0>  // b.hs, b.nlast
  41023c:	strb	w4, [x28, x19]
  410240:	cmp	w21, #0x0
  410244:	add	x19, x19, #0x1
  410248:	csel	w10, w10, wzr, ne  // ne = any
  41024c:	b	410028 <__fxstatat@plt+0xd5d8>
  410250:	cbnz	w11, 410e6c <__fxstatat@plt+0xe41c>
  410254:	ldr	x1, [sp, #128]
  410258:	cmp	x23, #0x0
  41025c:	mov	x0, #0x0                   	// #0
  410260:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  410264:	b.eq	4102a8 <__fxstatat@plt+0xd858>  // b.none
  410268:	cmp	x23, x19
  41026c:	b.ls	410278 <__fxstatat@plt+0xd828>  // b.plast
  410270:	mov	w0, #0x27                  	// #39
  410274:	strb	w0, [x28, x19]
  410278:	add	x0, x19, #0x1
  41027c:	cmp	x23, x0
  410280:	b.ls	41028c <__fxstatat@plt+0xd83c>  // b.plast
  410284:	mov	w1, #0x5c                  	// #92
  410288:	strb	w1, [x28, x0]
  41028c:	add	x1, x19, #0x2
  410290:	mov	x0, x23
  410294:	cmp	x23, x1
  410298:	b.ls	410efc <__fxstatat@plt+0xe4ac>  // b.plast
  41029c:	ldr	x23, [sp, #128]
  4102a0:	mov	w2, #0x27                  	// #39
  4102a4:	strb	w2, [x28, x1]
  4102a8:	add	x19, x19, #0x3
  4102ac:	str	x23, [sp, #128]
  4102b0:	mov	x23, x0
  4102b4:	mov	w1, #0x0                   	// #0
  4102b8:	mov	w24, #0x0                   	// #0
  4102bc:	mov	w4, #0x27                  	// #39
  4102c0:	str	w21, [sp, #120]
  4102c4:	nop
  4102c8:	cbnz	w5, 4101c4 <__fxstatat@plt+0xd774>
  4102cc:	eor	w1, w1, #0x1
  4102d0:	add	x20, x20, #0x1
  4102d4:	and	w1, w24, w1
  4102d8:	and	w1, w1, #0xff
  4102dc:	cbz	w1, 410234 <__fxstatat@plt+0xd7e4>
  4102e0:	cmp	x23, x19
  4102e4:	b.ls	4102f0 <__fxstatat@plt+0xd8a0>  // b.plast
  4102e8:	mov	w0, #0x27                  	// #39
  4102ec:	strb	w0, [x28, x19]
  4102f0:	add	x0, x19, #0x1
  4102f4:	cmp	x23, x0
  4102f8:	b.ls	410304 <__fxstatat@plt+0xd8b4>  // b.plast
  4102fc:	mov	w1, #0x27                  	// #39
  410300:	strb	w1, [x28, x0]
  410304:	add	x19, x19, #0x2
  410308:	mov	w24, #0x0                   	// #0
  41030c:	b	410234 <__fxstatat@plt+0xd7e4>
  410310:	ldrb	w4, [x3]
  410314:	cmp	w4, #0x7e
  410318:	b.ls	4106a4 <__fxstatat@plt+0xdc54>  // b.plast
  41031c:	mov	w5, #0x0                   	// #0
  410320:	ldr	x0, [sp, #192]
  410324:	cmp	x0, #0x1
  410328:	b.ne	4107d0 <__fxstatat@plt+0xdd80>  // b.any
  41032c:	str	w4, [sp, #136]
  410330:	str	w5, [sp, #144]
  410334:	str	x12, [sp, #152]
  410338:	str	w11, [sp, #160]
  41033c:	str	w10, [sp, #172]
  410340:	str	x6, [sp, #176]
  410344:	bl	402820 <__ctype_b_loc@plt>
  410348:	ldr	w4, [sp, #136]
  41034c:	ldr	x0, [x0]
  410350:	ldr	w5, [sp, #144]
  410354:	ldr	w11, [sp, #160]
  410358:	ldrh	w21, [x0, w4, uxtw #1]
  41035c:	ldr	w10, [sp, #172]
  410360:	ands	w0, w21, #0x4000
  410364:	cset	w2, eq  // eq = none
  410368:	ubfx	x21, x21, #14, #1
  41036c:	ldr	x12, [sp, #152]
  410370:	and	w2, w22, w2
  410374:	ldr	x6, [sp, #176]
  410378:	ldr	x8, [sp, #192]
  41037c:	cbnz	w2, 410be4 <__fxstatat@plt+0xe194>
  410380:	cmp	w26, #0x2
  410384:	cset	w1, eq  // eq = none
  410388:	eor	w0, w22, #0x1
  41038c:	orr	w1, w1, w0
  410390:	cbz	w1, 4101b0 <__fxstatat@plt+0xd760>
  410394:	mov	w1, #0x0                   	// #0
  410398:	cbnz	w11, 4101b0 <__fxstatat@plt+0xd760>
  41039c:	nop
  4103a0:	cbnz	w5, 4101c4 <__fxstatat@plt+0xd774>
  4103a4:	b	4102cc <__fxstatat@plt+0xd87c>
  4103a8:	mov	w5, #0x0                   	// #0
  4103ac:	cmp	x25, #0x1
  4103b0:	cset	w0, ne  // ne = any
  4103b4:	cmn	x25, #0x1
  4103b8:	b.ne	4103c8 <__fxstatat@plt+0xd978>  // b.any
  4103bc:	ldrb	w0, [x27, #1]
  4103c0:	cmp	w0, #0x0
  4103c4:	cset	w0, ne  // ne = any
  4103c8:	cmp	w26, #0x2
  4103cc:	cset	w1, eq  // eq = none
  4103d0:	cbz	w0, 4103e4 <__fxstatat@plt+0xd994>
  4103d4:	mov	w21, #0x0                   	// #0
  4103d8:	b	410388 <__fxstatat@plt+0xd938>
  4103dc:	cmp	w26, #0x2
  4103e0:	cset	w1, eq  // eq = none
  4103e4:	cbnz	x20, 4103d4 <__fxstatat@plt+0xd984>
  4103e8:	cmp	w11, #0x0
  4103ec:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4103f0:	b.eq	410388 <__fxstatat@plt+0xd938>  // b.none
  4103f4:	mov	w5, w22
  4103f8:	mov	w26, #0x2                   	// #2
  4103fc:	cmp	w5, #0x0
  410400:	mov	w0, #0x4                   	// #4
  410404:	csel	w26, w26, w0, eq  // eq = none
  410408:	ldr	x7, [sp, #208]
  41040c:	mov	w4, w26
  410410:	ldr	x0, [sp, #240]
  410414:	str	x0, [sp]
  410418:	ldr	w0, [sp, #200]
  41041c:	mov	x3, x25
  410420:	mov	x2, x27
  410424:	mov	x1, x23
  410428:	and	w5, w0, #0xfffffffd
  41042c:	mov	x6, #0x0                   	// #0
  410430:	mov	x0, x28
  410434:	bl	40ff08 <__fxstatat@plt+0xd4b8>
  410438:	mov	x19, x0
  41043c:	mov	x0, x19
  410440:	ldp	x29, x30, [sp, #16]
  410444:	ldp	x19, x20, [sp, #32]
  410448:	ldp	x21, x22, [sp, #48]
  41044c:	ldp	x23, x24, [sp, #64]
  410450:	ldp	x25, x26, [sp, #80]
  410454:	ldp	x27, x28, [sp, #96]
  410458:	add	sp, sp, #0xf0
  41045c:	ret
  410460:	mov	w5, #0x0                   	// #0
  410464:	cmp	w26, #0x2
  410468:	b.eq	4107a0 <__fxstatat@plt+0xdd50>  // b.none
  41046c:	cmp	w22, #0x0
  410470:	mov	w4, #0x5c                  	// #92
  410474:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  410478:	mov	w0, w4
  41047c:	ccmp	x12, #0x0, #0x4, ne  // ne = any
  410480:	b.ne	410ad0 <__fxstatat@plt+0xe080>  // b.any
  410484:	cbnz	w22, 410b40 <__fxstatat@plt+0xe0f0>
  410488:	mov	w21, #0x0                   	// #0
  41048c:	mov	w1, #0x0                   	// #0
  410490:	cbnz	w11, 4101b0 <__fxstatat@plt+0xd760>
  410494:	b	4103a0 <__fxstatat@plt+0xd950>
  410498:	mov	w5, #0x0                   	// #0
  41049c:	cmp	w26, #0x2
  4104a0:	b.eq	4107b8 <__fxstatat@plt+0xdd68>  // b.none
  4104a4:	cmp	w26, #0x5
  4104a8:	b.ne	4104d0 <__fxstatat@plt+0xda80>  // b.any
  4104ac:	ldr	x0, [sp, #200]
  4104b0:	tbz	w0, #2, 4104d0 <__fxstatat@plt+0xda80>
  4104b4:	add	x7, x20, #0x2
  4104b8:	cmp	x7, x25
  4104bc:	b.cs	4104d0 <__fxstatat@plt+0xda80>  // b.hs, b.nlast
  4104c0:	ldrb	w4, [x3, #1]
  4104c4:	cmp	w4, #0x3f
  4104c8:	b.eq	410cac <__fxstatat@plt+0xe25c>  // b.none
  4104cc:	nop
  4104d0:	mov	w1, #0x0                   	// #0
  4104d4:	mov	w21, #0x0                   	// #0
  4104d8:	mov	w4, #0x3f                  	// #63
  4104dc:	b	410388 <__fxstatat@plt+0xd938>
  4104e0:	mov	w5, #0x0                   	// #0
  4104e4:	cmp	w26, #0x2
  4104e8:	b.eq	410250 <__fxstatat@plt+0xd800>  // b.none
  4104ec:	mov	w1, #0x0                   	// #0
  4104f0:	mov	w4, #0x27                  	// #39
  4104f4:	str	w21, [sp, #120]
  4104f8:	b	410388 <__fxstatat@plt+0xd938>
  4104fc:	mov	w0, #0x74                  	// #116
  410500:	cmp	w11, #0x0
  410504:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  410508:	b.eq	4103f4 <__fxstatat@plt+0xd9a4>  // b.none
  41050c:	cbz	w22, 410488 <__fxstatat@plt+0xda38>
  410510:	b	410b40 <__fxstatat@plt+0xe0f0>
  410514:	mov	w4, #0x62                  	// #98
  410518:	cmp	w26, #0x2
  41051c:	cset	w0, eq  // eq = none
  410520:	cbnz	w11, 410548 <__fxstatat@plt+0xdaf8>
  410524:	mov	w21, #0x0                   	// #0
  410528:	b	41021c <__fxstatat@plt+0xd7cc>
  41052c:	mov	w4, #0x66                  	// #102
  410530:	b	410518 <__fxstatat@plt+0xdac8>
  410534:	mov	w4, #0x6e                  	// #110
  410538:	mov	w21, #0x0                   	// #0
  41053c:	cmp	w26, #0x2
  410540:	cset	w0, eq  // eq = none
  410544:	cbz	w11, 4101d0 <__fxstatat@plt+0xd780>
  410548:	and	w5, w22, w0
  41054c:	b	4103fc <__fxstatat@plt+0xd9ac>
  410550:	mov	w4, #0x72                  	// #114
  410554:	mov	w21, #0x0                   	// #0
  410558:	b	41053c <__fxstatat@plt+0xdaec>
  41055c:	mov	w4, #0x61                  	// #97
  410560:	b	410518 <__fxstatat@plt+0xdac8>
  410564:	cbnz	w11, 410e74 <__fxstatat@plt+0xe424>
  410568:	mov	w5, #0x0                   	// #0
  41056c:	cmp	w26, #0x2
  410570:	eor	w1, w24, #0x1
  410574:	cset	w0, eq  // eq = none
  410578:	ands	w1, w0, w1
  41057c:	b.eq	410780 <__fxstatat@plt+0xdd30>  // b.none
  410580:	cmp	x23, x19
  410584:	b.ls	410590 <__fxstatat@plt+0xdb40>  // b.plast
  410588:	mov	w2, #0x27                  	// #39
  41058c:	strb	w2, [x28, x19]
  410590:	add	x2, x19, #0x1
  410594:	cmp	x23, x2
  410598:	b.ls	4105a4 <__fxstatat@plt+0xdb54>  // b.plast
  41059c:	mov	w3, #0x24                  	// #36
  4105a0:	strb	w3, [x28, x2]
  4105a4:	add	x2, x19, #0x2
  4105a8:	cmp	x23, x2
  4105ac:	b.ls	4105b8 <__fxstatat@plt+0xdb68>  // b.plast
  4105b0:	mov	w3, #0x27                  	// #39
  4105b4:	strb	w3, [x28, x2]
  4105b8:	add	x2, x19, #0x3
  4105bc:	cmp	x23, x2
  4105c0:	b.ls	410ab8 <__fxstatat@plt+0xe068>  // b.plast
  4105c4:	mov	w24, w1
  4105c8:	mov	w1, #0x5c                  	// #92
  4105cc:	strb	w1, [x28, x2]
  4105d0:	cmp	w26, #0x2
  4105d4:	add	x19, x2, #0x1
  4105d8:	b.eq	410c98 <__fxstatat@plt+0xe248>  // b.none
  4105dc:	add	x1, x20, #0x1
  4105e0:	mov	w4, #0x30                  	// #48
  4105e4:	cmp	x1, x25
  4105e8:	b.cs	410600 <__fxstatat@plt+0xdbb0>  // b.hs, b.nlast
  4105ec:	ldrb	w1, [x27, x1]
  4105f0:	sub	w1, w1, #0x30
  4105f4:	and	w1, w1, #0xff
  4105f8:	cmp	w1, #0x9
  4105fc:	b.ls	410b4c <__fxstatat@plt+0xe0fc>  // b.plast
  410600:	eor	w1, w22, #0x1
  410604:	orr	w0, w0, w1
  410608:	mov	w1, w21
  41060c:	mov	w21, #0x0                   	// #0
  410610:	cbz	w0, 4101b0 <__fxstatat@plt+0xd760>
  410614:	cbnz	w5, 4101c4 <__fxstatat@plt+0xd774>
  410618:	b	4102cc <__fxstatat@plt+0xd87c>
  41061c:	ldrb	w4, [x27, x20]
  410620:	cmp	w4, #0x7e
  410624:	b.hi	410320 <__fxstatat@plt+0xd8d0>  // b.pmore
  410628:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  41062c:	add	x0, x0, #0xfe0
  410630:	ldrh	w0, [x0, w4, uxtw #1]
  410634:	adr	x1, 410640 <__fxstatat@plt+0xdbf0>
  410638:	add	x0, x1, w0, sxth #2
  41063c:	br	x0
  410640:	cmp	w26, #0x2
  410644:	mov	w21, #0x0                   	// #0
  410648:	cset	w1, eq  // eq = none
  41064c:	cmp	w11, #0x0
  410650:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  410654:	b.eq	410388 <__fxstatat@plt+0xd938>  // b.none
  410658:	b	4103f4 <__fxstatat@plt+0xd9a4>
  41065c:	cmp	w26, #0x2
  410660:	cset	w1, eq  // eq = none
  410664:	cmp	w11, #0x0
  410668:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  41066c:	b.eq	410388 <__fxstatat@plt+0xd938>  // b.none
  410670:	b	4103f4 <__fxstatat@plt+0xd9a4>
  410674:	cbnz	w22, 410564 <__fxstatat@plt+0xdb14>
  410678:	ldr	x0, [sp, #200]
  41067c:	mov	w5, #0x0                   	// #0
  410680:	tbz	w0, #0, 410488 <__fxstatat@plt+0xda38>
  410684:	add	x20, x20, #0x1
  410688:	b	410028 <__fxstatat@plt+0xd5d8>
  41068c:	mov	w0, #0x66                  	// #102
  410690:	cbz	w22, 410488 <__fxstatat@plt+0xda38>
  410694:	b	410b40 <__fxstatat@plt+0xe0f0>
  410698:	mov	w0, #0x62                  	// #98
  41069c:	cbz	w22, 410488 <__fxstatat@plt+0xda38>
  4106a0:	b	410b40 <__fxstatat@plt+0xe0f0>
  4106a4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  4106a8:	add	x0, x0, #0xe0
  4106ac:	ldrh	w0, [x0, w4, uxtw #1]
  4106b0:	adr	x1, 4106bc <__fxstatat@plt+0xdc6c>
  4106b4:	add	x0, x1, w0, sxth #2
  4106b8:	br	x0
  4106bc:	mov	w0, #0x0                   	// #0
  4106c0:	b	4101a0 <__fxstatat@plt+0xd750>
  4106c4:	mov	w0, #0x0                   	// #0
  4106c8:	mov	w5, #0x0                   	// #0
  4106cc:	b	4101a0 <__fxstatat@plt+0xd750>
  4106d0:	cbnz	w26, 410f1c <__fxstatat@plt+0xe4cc>
  4106d4:	mov	w10, #0x1                   	// #1
  4106d8:	mov	w7, #0x0                   	// #0
  4106dc:	mov	w11, #0x0                   	// #0
  4106e0:	mov	w5, #0x0                   	// #0
  4106e4:	mov	x12, #0x0                   	// #0
  4106e8:	mov	x19, #0x0                   	// #0
  4106ec:	str	xzr, [sp, #112]
  4106f0:	str	wzr, [sp, #120]
  4106f4:	str	xzr, [sp, #128]
  4106f8:	b	410018 <__fxstatat@plt+0xd5c8>
  4106fc:	cmp	w26, #0x5
  410700:	b.ne	410744 <__fxstatat@plt+0xdcf4>  // b.any
  410704:	cbnz	w20, 410d3c <__fxstatat@plt+0xe2ec>
  410708:	cbz	x23, 410c68 <__fxstatat@plt+0xe218>
  41070c:	mov	w0, #0x22                  	// #34
  410710:	mov	w10, #0x1                   	// #1
  410714:	mov	x12, #0x1                   	// #1
  410718:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  41071c:	mov	w5, w10
  410720:	add	x1, x1, #0xe50
  410724:	mov	x19, x12
  410728:	mov	w7, #0x0                   	// #0
  41072c:	mov	w11, #0x0                   	// #0
  410730:	strb	w0, [x28]
  410734:	str	x1, [sp, #112]
  410738:	str	wzr, [sp, #120]
  41073c:	str	xzr, [sp, #128]
  410740:	b	410018 <__fxstatat@plt+0xd5c8>
  410744:	cmp	w26, #0x6
  410748:	b.ne	410f1c <__fxstatat@plt+0xe4cc>  // b.any
  41074c:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x5ce0>
  410750:	mov	w10, #0x1                   	// #1
  410754:	add	x0, x26, #0xe50
  410758:	mov	w11, w10
  41075c:	mov	w5, w10
  410760:	mov	w7, #0x0                   	// #0
  410764:	mov	x12, #0x1                   	// #1
  410768:	mov	x19, #0x0                   	// #0
  41076c:	mov	w26, #0x5                   	// #5
  410770:	str	x0, [sp, #112]
  410774:	str	wzr, [sp, #120]
  410778:	str	xzr, [sp, #128]
  41077c:	b	410018 <__fxstatat@plt+0xd5c8>
  410780:	mov	x2, x19
  410784:	cmp	x23, x19
  410788:	b.ls	4105d0 <__fxstatat@plt+0xdb80>  // b.plast
  41078c:	mov	w1, w24
  410790:	mov	w24, w1
  410794:	mov	w1, #0x5c                  	// #92
  410798:	strb	w1, [x28, x2]
  41079c:	b	4105d0 <__fxstatat@plt+0xdb80>
  4107a0:	cbnz	w11, 410e6c <__fxstatat@plt+0xe41c>
  4107a4:	add	x20, x20, #0x1
  4107a8:	mov	w1, w24
  4107ac:	mov	w21, #0x0                   	// #0
  4107b0:	mov	w4, #0x5c                  	// #92
  4107b4:	b	4102dc <__fxstatat@plt+0xd88c>
  4107b8:	cbnz	w11, 410e6c <__fxstatat@plt+0xe41c>
  4107bc:	mov	w21, #0x0                   	// #0
  4107c0:	mov	w1, #0x0                   	// #0
  4107c4:	mov	w4, #0x3f                  	// #63
  4107c8:	cbnz	w5, 4101c4 <__fxstatat@plt+0xd774>
  4107cc:	b	4102cc <__fxstatat@plt+0xd87c>
  4107d0:	str	xzr, [sp, #232]
  4107d4:	cmn	x25, #0x1
  4107d8:	b.ne	410818 <__fxstatat@plt+0xddc8>  // b.any
  4107dc:	mov	x0, x27
  4107e0:	str	w4, [sp, #136]
  4107e4:	str	w5, [sp, #144]
  4107e8:	str	x12, [sp, #152]
  4107ec:	str	w11, [sp, #160]
  4107f0:	str	w10, [sp, #172]
  4107f4:	str	x6, [sp, #176]
  4107f8:	bl	402430 <strlen@plt>
  4107fc:	ldr	w4, [sp, #136]
  410800:	mov	x25, x0
  410804:	ldr	w5, [sp, #144]
  410808:	ldr	w11, [sp, #160]
  41080c:	ldr	w10, [sp, #172]
  410810:	ldr	x12, [sp, #152]
  410814:	ldr	x6, [sp, #176]
  410818:	mov	x8, #0x0                   	// #0
  41081c:	str	x19, [sp, #184]
  410820:	mov	w19, w21
  410824:	mov	x21, x8
  410828:	str	w11, [sp, #136]
  41082c:	str	x12, [sp, #144]
  410830:	str	w24, [sp, #152]
  410834:	str	w10, [sp, #160]
  410838:	stp	w4, w5, [sp, #172]
  41083c:	str	x6, [sp, #216]
  410840:	add	x24, x20, x21
  410844:	add	x3, sp, #0xe8
  410848:	sub	x2, x25, x24
  41084c:	add	x1, x27, x24
  410850:	add	x0, sp, #0xe4
  410854:	bl	412f48 <__fxstatat@plt+0x104f8>
  410858:	mov	x13, #0x2b                  	// #43
  41085c:	mov	x3, x0
  410860:	movk	x13, #0x2, lsl #32
  410864:	cbz	x0, 4108ac <__fxstatat@plt+0xde5c>
  410868:	cmn	x0, #0x1
  41086c:	b.eq	410da4 <__fxstatat@plt+0xe354>  // b.none
  410870:	cmn	x0, #0x2
  410874:	mov	x7, #0x1                   	// #1
  410878:	b.eq	410dd0 <__fxstatat@plt+0xe380>  // b.none
  41087c:	ldr	w0, [sp, #136]
  410880:	cmp	w0, #0x0
  410884:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  410888:	b.eq	410a10 <__fxstatat@plt+0xdfc0>  // b.none
  41088c:	ldr	w0, [sp, #228]
  410890:	add	x21, x21, x3
  410894:	bl	4029c0 <iswprint@plt>
  410898:	cmp	w0, #0x0
  41089c:	csel	w19, w19, wzr, ne  // ne = any
  4108a0:	add	x0, sp, #0xe8
  4108a4:	bl	402770 <mbsinit@plt>
  4108a8:	cbz	w0, 410840 <__fxstatat@plt+0xddf0>
  4108ac:	eor	w2, w19, #0x1
  4108b0:	mov	x8, x21
  4108b4:	ldr	w11, [sp, #136]
  4108b8:	mov	w21, w19
  4108bc:	ldr	w24, [sp, #152]
  4108c0:	and	w2, w22, w2
  4108c4:	ldr	w10, [sp, #160]
  4108c8:	ldp	w4, w5, [sp, #172]
  4108cc:	ldr	x12, [sp, #144]
  4108d0:	ldr	x19, [sp, #184]
  4108d4:	ldr	x6, [sp, #216]
  4108d8:	cmp	x8, #0x1
  4108dc:	b.ls	41037c <__fxstatat@plt+0xd92c>  // b.plast
  4108e0:	add	x8, x8, x20
  4108e4:	mov	w14, #0x0                   	// #0
  4108e8:	mov	w3, #0x27                  	// #39
  4108ec:	mov	w7, #0x5c                  	// #92
  4108f0:	mov	w9, #0x24                  	// #36
  4108f4:	cbz	w2, 4109b4 <__fxstatat@plt+0xdf64>
  4108f8:	cmp	w26, #0x2
  4108fc:	cset	w0, eq  // eq = none
  410900:	cbnz	w11, 410bf8 <__fxstatat@plt+0xe1a8>
  410904:	eor	w1, w24, #0x1
  410908:	ands	w0, w0, w1
  41090c:	b.eq	410944 <__fxstatat@plt+0xdef4>  // b.none
  410910:	cmp	x23, x19
  410914:	b.ls	41091c <__fxstatat@plt+0xdecc>  // b.plast
  410918:	strb	w3, [x28, x19]
  41091c:	add	x1, x19, #0x1
  410920:	cmp	x23, x1
  410924:	b.ls	41092c <__fxstatat@plt+0xdedc>  // b.plast
  410928:	strb	w9, [x28, x1]
  41092c:	add	x1, x19, #0x2
  410930:	cmp	x23, x1
  410934:	b.ls	41093c <__fxstatat@plt+0xdeec>  // b.plast
  410938:	strb	w3, [x28, x1]
  41093c:	add	x19, x19, #0x3
  410940:	mov	w24, w0
  410944:	cmp	x23, x19
  410948:	b.ls	410950 <__fxstatat@plt+0xdf00>  // b.plast
  41094c:	strb	w7, [x28, x19]
  410950:	add	x0, x19, #0x1
  410954:	cmp	x23, x0
  410958:	b.ls	410968 <__fxstatat@plt+0xdf18>  // b.plast
  41095c:	lsr	w1, w4, #6
  410960:	add	w1, w1, #0x30
  410964:	strb	w1, [x28, x0]
  410968:	add	x0, x19, #0x2
  41096c:	cmp	x23, x0
  410970:	b.ls	410980 <__fxstatat@plt+0xdf30>  // b.plast
  410974:	ubfx	x1, x4, #3, #3
  410978:	add	w1, w1, #0x30
  41097c:	strb	w1, [x28, x0]
  410980:	and	w4, w4, #0x7
  410984:	add	x20, x20, #0x1
  410988:	add	w4, w4, #0x30
  41098c:	cmp	x20, x8
  410990:	add	x19, x19, #0x3
  410994:	b.cs	410234 <__fxstatat@plt+0xd7e4>  // b.hs, b.nlast
  410998:	mov	w14, w2
  41099c:	cmp	x23, x19
  4109a0:	b.ls	4109a8 <__fxstatat@plt+0xdf58>  // b.plast
  4109a4:	strb	w4, [x28, x19]
  4109a8:	ldrb	w4, [x27, x20]
  4109ac:	add	x19, x19, #0x1
  4109b0:	cbnz	w2, 4108f8 <__fxstatat@plt+0xdea8>
  4109b4:	eor	w0, w14, #0x1
  4109b8:	and	w0, w24, w0
  4109bc:	and	w0, w0, #0xff
  4109c0:	cbz	w5, 4109d4 <__fxstatat@plt+0xdf84>
  4109c4:	cmp	x23, x19
  4109c8:	b.ls	4109d0 <__fxstatat@plt+0xdf80>  // b.plast
  4109cc:	strb	w7, [x28, x19]
  4109d0:	add	x19, x19, #0x1
  4109d4:	add	x20, x20, #0x1
  4109d8:	cmp	x20, x8
  4109dc:	b.cs	410bf0 <__fxstatat@plt+0xe1a0>  // b.hs, b.nlast
  4109e0:	cbz	w0, 410c60 <__fxstatat@plt+0xe210>
  4109e4:	cmp	x23, x19
  4109e8:	b.ls	4109f0 <__fxstatat@plt+0xdfa0>  // b.plast
  4109ec:	strb	w3, [x28, x19]
  4109f0:	add	x0, x19, #0x1
  4109f4:	cmp	x23, x0
  4109f8:	b.ls	410a00 <__fxstatat@plt+0xdfb0>  // b.plast
  4109fc:	strb	w3, [x28, x0]
  410a00:	add	x19, x19, #0x2
  410a04:	mov	w5, #0x0                   	// #0
  410a08:	mov	w24, #0x0                   	// #0
  410a0c:	b	41099c <__fxstatat@plt+0xdf4c>
  410a10:	cmp	x3, #0x1
  410a14:	b.eq	41088c <__fxstatat@plt+0xde3c>  // b.none
  410a18:	add	x2, x24, #0x1
  410a1c:	add	x0, x27, x3
  410a20:	add	x2, x27, x2
  410a24:	add	x9, x0, x24
  410a28:	b	410a38 <__fxstatat@plt+0xdfe8>
  410a2c:	add	x2, x2, #0x1
  410a30:	cmp	x9, x2
  410a34:	b.eq	41088c <__fxstatat@plt+0xde3c>  // b.none
  410a38:	ldrb	w0, [x2]
  410a3c:	sub	w0, w0, #0x5b
  410a40:	and	w0, w0, #0xff
  410a44:	cmp	w0, #0x21
  410a48:	b.hi	410a2c <__fxstatat@plt+0xdfdc>  // b.pmore
  410a4c:	lsl	x0, x7, x0
  410a50:	tst	x0, x13
  410a54:	b.eq	410a2c <__fxstatat@plt+0xdfdc>  // b.none
  410a58:	b	4103f4 <__fxstatat@plt+0xd9a4>
  410a5c:	mov	w10, w26
  410a60:	mov	w11, w26
  410a64:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x5ce0>
  410a68:	add	x0, x26, #0xe78
  410a6c:	str	x0, [sp, #112]
  410a70:	str	wzr, [sp, #120]
  410a74:	mov	w7, #0x0                   	// #0
  410a78:	mov	w5, #0x0                   	// #0
  410a7c:	mov	x12, #0x1                   	// #1
  410a80:	mov	x19, #0x0                   	// #0
  410a84:	mov	w26, #0x2                   	// #2
  410a88:	str	xzr, [sp, #128]
  410a8c:	b	410018 <__fxstatat@plt+0xd5c8>
  410a90:	mov	w10, #0x1                   	// #1
  410a94:	mov	w7, #0x0                   	// #0
  410a98:	mov	w5, w10
  410a9c:	mov	w11, #0x0                   	// #0
  410aa0:	mov	x12, #0x0                   	// #0
  410aa4:	mov	x19, #0x0                   	// #0
  410aa8:	str	xzr, [sp, #112]
  410aac:	str	wzr, [sp, #120]
  410ab0:	str	xzr, [sp, #128]
  410ab4:	b	410018 <__fxstatat@plt+0xd5c8>
  410ab8:	add	x19, x19, #0x4
  410abc:	mov	w24, w1
  410ac0:	mov	w21, #0x0                   	// #0
  410ac4:	mov	w4, #0x30                  	// #48
  410ac8:	cbnz	w5, 4101c4 <__fxstatat@plt+0xd774>
  410acc:	b	4102cc <__fxstatat@plt+0xd87c>
  410ad0:	add	x20, x20, #0x1
  410ad4:	mov	w1, w24
  410ad8:	mov	w21, #0x0                   	// #0
  410adc:	b	4102dc <__fxstatat@plt+0xd88c>
  410ae0:	mov	w0, w5
  410ae4:	mov	w5, #0x0                   	// #0
  410ae8:	b	4101a0 <__fxstatat@plt+0xd750>
  410aec:	mov	w0, #0x0                   	// #0
  410af0:	cbnz	x20, 410bd4 <__fxstatat@plt+0xe184>
  410af4:	mov	w21, w5
  410af8:	mov	w1, #0x0                   	// #0
  410afc:	mov	w5, w0
  410b00:	b	410388 <__fxstatat@plt+0xd938>
  410b04:	mov	w1, w26
  410b08:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  410b0c:	add	x0, x0, #0xe80
  410b10:	str	w11, [sp, #112]
  410b14:	str	x6, [sp, #120]
  410b18:	bl	40fda0 <__fxstatat@plt+0xd350>
  410b1c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x5ce0>
  410b20:	str	x0, [sp, #208]
  410b24:	add	x0, x1, #0xe78
  410b28:	mov	w1, w26
  410b2c:	bl	40fda0 <__fxstatat@plt+0xd350>
  410b30:	str	x0, [sp, #240]
  410b34:	ldr	w11, [sp, #112]
  410b38:	ldr	x6, [sp, #120]
  410b3c:	b	40ff90 <__fxstatat@plt+0xd540>
  410b40:	mov	w4, w0
  410b44:	mov	w21, #0x0                   	// #0
  410b48:	b	41053c <__fxstatat@plt+0xdaec>
  410b4c:	cmp	x23, x19
  410b50:	b.ls	410b58 <__fxstatat@plt+0xe108>  // b.plast
  410b54:	strb	w4, [x28, x19]
  410b58:	add	x1, x2, #0x2
  410b5c:	cmp	x23, x1
  410b60:	b.ls	410b6c <__fxstatat@plt+0xe11c>  // b.plast
  410b64:	mov	w3, #0x30                  	// #48
  410b68:	strb	w3, [x28, x1]
  410b6c:	add	x19, x2, #0x3
  410b70:	mov	w4, #0x30                  	// #48
  410b74:	b	410600 <__fxstatat@plt+0xdbb0>
  410b78:	mov	w0, #0x76                  	// #118
  410b7c:	cbz	w22, 410488 <__fxstatat@plt+0xda38>
  410b80:	b	410b40 <__fxstatat@plt+0xe0f0>
  410b84:	mov	w0, #0x72                  	// #114
  410b88:	b	410500 <__fxstatat@plt+0xdab0>
  410b8c:	mov	w0, #0x61                  	// #97
  410b90:	cbz	w22, 410488 <__fxstatat@plt+0xda38>
  410b94:	b	410b40 <__fxstatat@plt+0xe0f0>
  410b98:	mov	w0, #0x6e                  	// #110
  410b9c:	b	410500 <__fxstatat@plt+0xdab0>
  410ba0:	mov	w0, #0x0                   	// #0
  410ba4:	mov	w21, w5
  410ba8:	mov	w1, #0x0                   	// #0
  410bac:	mov	w5, w0
  410bb0:	mov	w4, #0x20                  	// #32
  410bb4:	b	410388 <__fxstatat@plt+0xd938>
  410bb8:	mov	w5, #0x0                   	// #0
  410bbc:	mov	w0, #0x74                  	// #116
  410bc0:	b	410500 <__fxstatat@plt+0xdab0>
  410bc4:	mov	w5, #0x0                   	// #0
  410bc8:	mov	w0, #0x76                  	// #118
  410bcc:	cbz	w22, 410488 <__fxstatat@plt+0xda38>
  410bd0:	b	410b40 <__fxstatat@plt+0xe0f0>
  410bd4:	mov	w5, w0
  410bd8:	mov	w21, #0x0                   	// #0
  410bdc:	mov	w1, #0x0                   	// #0
  410be0:	b	4101b0 <__fxstatat@plt+0xd760>
  410be4:	mov	w2, w22
  410be8:	mov	w21, #0x0                   	// #0
  410bec:	b	4108e0 <__fxstatat@plt+0xde90>
  410bf0:	mov	w1, w0
  410bf4:	b	4102dc <__fxstatat@plt+0xd88c>
  410bf8:	mov	w5, w0
  410bfc:	b	4103fc <__fxstatat@plt+0xd9ac>
  410c00:	mov	w5, #0x1                   	// #1
  410c04:	cbz	w20, 410c2c <__fxstatat@plt+0xe1dc>
  410c08:	mov	w10, #0x1                   	// #1
  410c0c:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x5ce0>
  410c10:	mov	w11, w10
  410c14:	add	x0, x26, #0xe78
  410c18:	str	x0, [sp, #112]
  410c1c:	str	wzr, [sp, #120]
  410c20:	b	410a74 <__fxstatat@plt+0xe024>
  410c24:	cbnz	w20, 410ecc <__fxstatat@plt+0xe47c>
  410c28:	mov	w5, #0x0                   	// #0
  410c2c:	cbnz	x23, 410f04 <__fxstatat@plt+0xe4b4>
  410c30:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x5ce0>
  410c34:	mov	x12, #0x1                   	// #1
  410c38:	add	x0, x26, #0xe78
  410c3c:	mov	x19, x12
  410c40:	mov	w10, #0x1                   	// #1
  410c44:	mov	w7, #0x0                   	// #0
  410c48:	mov	w11, #0x0                   	// #0
  410c4c:	mov	w26, #0x2                   	// #2
  410c50:	str	x0, [sp, #112]
  410c54:	str	wzr, [sp, #120]
  410c58:	str	xzr, [sp, #128]
  410c5c:	b	410018 <__fxstatat@plt+0xd5c8>
  410c60:	mov	w5, #0x0                   	// #0
  410c64:	b	41099c <__fxstatat@plt+0xdf4c>
  410c68:	mov	w10, #0x1                   	// #1
  410c6c:	mov	x12, #0x1                   	// #1
  410c70:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  410c74:	mov	w5, w10
  410c78:	add	x0, x0, #0xe50
  410c7c:	mov	x19, x12
  410c80:	mov	w7, #0x0                   	// #0
  410c84:	mov	w11, #0x0                   	// #0
  410c88:	str	x0, [sp, #112]
  410c8c:	str	wzr, [sp, #120]
  410c90:	str	xzr, [sp, #128]
  410c94:	b	410018 <__fxstatat@plt+0xd5c8>
  410c98:	mov	w1, w21
  410c9c:	mov	w4, #0x30                  	// #48
  410ca0:	mov	w21, #0x0                   	// #0
  410ca4:	cbnz	w5, 4101c4 <__fxstatat@plt+0xd774>
  410ca8:	b	4102cc <__fxstatat@plt+0xd87c>
  410cac:	ldrb	w3, [x27, x7]
  410cb0:	cmp	w3, #0x3e
  410cb4:	b.hi	410eb8 <__fxstatat@plt+0xe468>  // b.pmore
  410cb8:	mov	x0, #0x1                   	// #1
  410cbc:	mov	x2, #0xa38200000000        	// #179778741075968
  410cc0:	movk	x2, #0x7000, lsl #48
  410cc4:	lsl	x0, x0, x3
  410cc8:	mov	w1, #0x0                   	// #0
  410ccc:	tst	x0, x2
  410cd0:	mov	w21, #0x0                   	// #0
  410cd4:	b.eq	410388 <__fxstatat@plt+0xd938>  // b.none
  410cd8:	cbnz	w11, 410408 <__fxstatat@plt+0xd9b8>
  410cdc:	cmp	x23, x19
  410ce0:	b.ls	410ce8 <__fxstatat@plt+0xe298>  // b.plast
  410ce4:	strb	w4, [x28, x19]
  410ce8:	add	x0, x19, #0x1
  410cec:	cmp	x23, x0
  410cf0:	b.ls	410cfc <__fxstatat@plt+0xe2ac>  // b.plast
  410cf4:	mov	w1, #0x22                  	// #34
  410cf8:	strb	w1, [x28, x0]
  410cfc:	add	x0, x19, #0x2
  410d00:	cmp	x23, x0
  410d04:	b.ls	410d10 <__fxstatat@plt+0xe2c0>  // b.plast
  410d08:	mov	w1, #0x22                  	// #34
  410d0c:	strb	w1, [x28, x0]
  410d10:	add	x0, x19, #0x3
  410d14:	cmp	x23, x0
  410d18:	b.ls	410d24 <__fxstatat@plt+0xe2d4>  // b.plast
  410d1c:	mov	w1, #0x3f                  	// #63
  410d20:	strb	w1, [x28, x0]
  410d24:	add	x19, x19, #0x4
  410d28:	mov	w4, w3
  410d2c:	mov	x20, x7
  410d30:	mov	w0, #0x0                   	// #0
  410d34:	mov	w21, #0x0                   	// #0
  410d38:	b	410600 <__fxstatat@plt+0xdbb0>
  410d3c:	mov	w10, #0x1                   	// #1
  410d40:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  410d44:	mov	w11, w10
  410d48:	add	x0, x0, #0xe50
  410d4c:	mov	w5, w10
  410d50:	mov	w7, #0x0                   	// #0
  410d54:	mov	x12, #0x1                   	// #1
  410d58:	mov	x19, #0x0                   	// #0
  410d5c:	str	x0, [sp, #112]
  410d60:	str	wzr, [sp, #120]
  410d64:	str	xzr, [sp, #128]
  410d68:	b	410018 <__fxstatat@plt+0xd5c8>
  410d6c:	mov	w0, w5
  410d70:	b	410af0 <__fxstatat@plt+0xe0a0>
  410d74:	mov	w0, w5
  410d78:	b	410ba4 <__fxstatat@plt+0xe154>
  410d7c:	ldr	x1, [sp, #208]
  410d80:	ldrb	w0, [x1]
  410d84:	cbz	w0, 40ff98 <__fxstatat@plt+0xd548>
  410d88:	cmp	x23, x19
  410d8c:	b.ls	410d94 <__fxstatat@plt+0xe344>  // b.plast
  410d90:	strb	w0, [x28, x19]
  410d94:	add	x19, x19, #0x1
  410d98:	ldrb	w0, [x1, x19]
  410d9c:	cbnz	w0, 410d88 <__fxstatat@plt+0xe338>
  410da0:	b	40ff98 <__fxstatat@plt+0xd548>
  410da4:	mov	x8, x21
  410da8:	ldr	w11, [sp, #136]
  410dac:	ldr	w24, [sp, #152]
  410db0:	mov	w2, w22
  410db4:	ldr	w10, [sp, #160]
  410db8:	mov	w21, #0x0                   	// #0
  410dbc:	ldp	w4, w5, [sp, #172]
  410dc0:	ldr	x12, [sp, #144]
  410dc4:	ldr	x19, [sp, #184]
  410dc8:	ldr	x6, [sp, #216]
  410dcc:	b	4108d8 <__fxstatat@plt+0xde88>
  410dd0:	mov	x9, x24
  410dd4:	cmp	x24, x25
  410dd8:	ldr	w11, [sp, #136]
  410ddc:	mov	x8, x21
  410de0:	ldr	w24, [sp, #152]
  410de4:	ldr	w10, [sp, #160]
  410de8:	ldp	w4, w5, [sp, #172]
  410dec:	ldr	x12, [sp, #144]
  410df0:	ldr	x19, [sp, #184]
  410df4:	ldr	x6, [sp, #216]
  410df8:	b.cc	410e10 <__fxstatat@plt+0xe3c0>  // b.lo, b.ul, b.last
  410dfc:	b	410e18 <__fxstatat@plt+0xe3c8>
  410e00:	add	x8, x8, #0x1
  410e04:	add	x9, x20, x8
  410e08:	cmp	x25, x9
  410e0c:	b.ls	410e18 <__fxstatat@plt+0xe3c8>  // b.plast
  410e10:	ldrb	w0, [x27, x9]
  410e14:	cbnz	w0, 410e00 <__fxstatat@plt+0xe3b0>
  410e18:	mov	w2, w22
  410e1c:	mov	w21, #0x0                   	// #0
  410e20:	b	4108d8 <__fxstatat@plt+0xde88>
  410e24:	mov	w0, w11
  410e28:	ldr	x1, [sp, #112]
  410e2c:	cmp	x1, #0x0
  410e30:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  410e34:	b.eq	410e5c <__fxstatat@plt+0xe40c>  // b.none
  410e38:	ldrb	w0, [x1]
  410e3c:	cbz	w0, 410e5c <__fxstatat@plt+0xe40c>
  410e40:	sub	x26, x1, x19
  410e44:	cmp	x23, x19
  410e48:	b.ls	410e50 <__fxstatat@plt+0xe400>  // b.plast
  410e4c:	strb	w0, [x28, x19]
  410e50:	add	x19, x19, #0x1
  410e54:	ldrb	w0, [x26, x19]
  410e58:	cbnz	w0, 410e44 <__fxstatat@plt+0xe3f4>
  410e5c:	cmp	x23, x19
  410e60:	b.ls	41043c <__fxstatat@plt+0xd9ec>  // b.plast
  410e64:	strb	wzr, [x28, x19]
  410e68:	b	41043c <__fxstatat@plt+0xd9ec>
  410e6c:	mov	w5, w22
  410e70:	b	4103fc <__fxstatat@plt+0xd9ac>
  410e74:	cmp	w26, #0x2
  410e78:	cset	w5, eq  // eq = none
  410e7c:	b	4103fc <__fxstatat@plt+0xd9ac>
  410e80:	ldr	w5, [sp, #200]
  410e84:	mov	x3, x25
  410e88:	ldr	x1, [sp, #128]
  410e8c:	mov	x2, x27
  410e90:	ldr	x7, [sp, #208]
  410e94:	mov	w4, #0x5                   	// #5
  410e98:	ldr	x0, [sp, #240]
  410e9c:	str	x0, [sp]
  410ea0:	mov	x0, x28
  410ea4:	bl	40ff08 <__fxstatat@plt+0xd4b8>
  410ea8:	mov	x19, x0
  410eac:	b	41043c <__fxstatat@plt+0xd9ec>
  410eb0:	ldr	w0, [sp, #120]
  410eb4:	b	410e28 <__fxstatat@plt+0xe3d8>
  410eb8:	mov	w1, #0x0                   	// #0
  410ebc:	mov	w21, #0x0                   	// #0
  410ec0:	b	410388 <__fxstatat@plt+0xd938>
  410ec4:	mov	w26, #0x2                   	// #2
  410ec8:	b	4103fc <__fxstatat@plt+0xd9ac>
  410ecc:	mov	w10, #0x1                   	// #1
  410ed0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x5ce0>
  410ed4:	mov	w11, w10
  410ed8:	add	x0, x0, #0xe78
  410edc:	mov	w7, #0x0                   	// #0
  410ee0:	mov	w5, #0x0                   	// #0
  410ee4:	mov	x12, #0x1                   	// #1
  410ee8:	mov	x19, #0x0                   	// #0
  410eec:	str	x0, [sp, #112]
  410ef0:	str	wzr, [sp, #120]
  410ef4:	str	xzr, [sp, #128]
  410ef8:	b	410018 <__fxstatat@plt+0xd5c8>
  410efc:	ldr	x23, [sp, #128]
  410f00:	b	4102a8 <__fxstatat@plt+0xd858>
  410f04:	mov	w7, #0x0                   	// #0
  410f08:	mov	w0, #0x0                   	// #0
  410f0c:	mov	w10, #0x1                   	// #1
  410f10:	mov	x1, #0x0                   	// #0
  410f14:	str	x23, [sp, #128]
  410f18:	b	410168 <__fxstatat@plt+0xd718>
  410f1c:	bl	402760 <abort@plt>
  410f20:	sub	sp, sp, #0x80
  410f24:	stp	x29, x30, [sp, #16]
  410f28:	add	x29, sp, #0x10
  410f2c:	stp	x19, x20, [sp, #32]
  410f30:	mov	w19, w0
  410f34:	mov	x20, x3
  410f38:	stp	x21, x22, [sp, #48]
  410f3c:	stp	x23, x24, [sp, #64]
  410f40:	mov	x23, x1
  410f44:	mov	x24, x2
  410f48:	stp	x25, x26, [sp, #80]
  410f4c:	stp	x27, x28, [sp, #96]
  410f50:	bl	4029e0 <__errno_location@plt>
  410f54:	mov	x22, x0
  410f58:	ldr	w0, [x0]
  410f5c:	adrp	x27, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  410f60:	str	w0, [sp, #116]
  410f64:	ldr	x21, [x27, #1328]
  410f68:	tbnz	w19, #31, 4110c0 <__fxstatat@plt+0xe670>
  410f6c:	add	x26, x27, #0x530
  410f70:	ldr	w0, [x26, #8]
  410f74:	cmp	w0, w19
  410f78:	b.gt	410fc8 <__fxstatat@plt+0xe578>
  410f7c:	mov	w0, #0x7fffffff            	// #2147483647
  410f80:	cmp	w19, w0
  410f84:	b.eq	4110bc <__fxstatat@plt+0xe66c>  // b.none
  410f88:	add	w28, w19, #0x1
  410f8c:	add	x0, x26, #0x10
  410f90:	cmp	x21, x0
  410f94:	sbfiz	x1, x28, #4, #32
  410f98:	b.eq	4110a0 <__fxstatat@plt+0xe650>  // b.none
  410f9c:	mov	x0, x21
  410fa0:	bl	411ed8 <__fxstatat@plt+0xf488>
  410fa4:	mov	x21, x0
  410fa8:	str	x0, [x27, #1328]
  410fac:	ldr	w0, [x26, #8]
  410fb0:	mov	w1, #0x0                   	// #0
  410fb4:	sub	w2, w28, w0
  410fb8:	add	x0, x21, w0, sxtw #4
  410fbc:	sbfiz	x2, x2, #4, #32
  410fc0:	bl	402680 <memset@plt>
  410fc4:	str	w28, [x26, #8]
  410fc8:	sbfiz	x19, x19, #4, #32
  410fcc:	add	x26, x20, #0x8
  410fd0:	add	x0, x21, x19
  410fd4:	str	x0, [sp, #120]
  410fd8:	ldp	w4, w5, [x20]
  410fdc:	mov	x6, x26
  410fe0:	ldr	x7, [x20, #40]
  410fe4:	orr	w25, w5, #0x1
  410fe8:	ldr	x27, [x21, x19]
  410fec:	mov	x3, x24
  410ff0:	ldr	x28, [x0, #8]
  410ff4:	mov	x1, x27
  410ff8:	ldr	x0, [x20, #48]
  410ffc:	str	x0, [sp]
  411000:	mov	x2, x23
  411004:	mov	w5, w25
  411008:	mov	x0, x28
  41100c:	bl	40ff08 <__fxstatat@plt+0xd4b8>
  411010:	cmp	x27, x0
  411014:	b.hi	411074 <__fxstatat@plt+0xe624>  // b.pmore
  411018:	add	x27, x0, #0x1
  41101c:	str	x27, [x21, x19]
  411020:	adrp	x0, 430000 <__progname@@GLIBC_2.17+0xa48>
  411024:	add	x0, x0, #0x758
  411028:	cmp	x28, x0
  41102c:	b.eq	411038 <__fxstatat@plt+0xe5e8>  // b.none
  411030:	mov	x0, x28
  411034:	bl	402840 <free@plt>
  411038:	mov	x0, x27
  41103c:	bl	411e78 <__fxstatat@plt+0xf428>
  411040:	ldr	x1, [sp, #120]
  411044:	mov	x28, x0
  411048:	ldr	w4, [x20]
  41104c:	mov	x6, x26
  411050:	ldr	x7, [x20, #40]
  411054:	str	x0, [x1, #8]
  411058:	ldr	x1, [x20, #48]
  41105c:	str	x1, [sp]
  411060:	mov	w5, w25
  411064:	mov	x3, x24
  411068:	mov	x2, x23
  41106c:	mov	x1, x27
  411070:	bl	40ff08 <__fxstatat@plt+0xd4b8>
  411074:	ldr	w0, [sp, #116]
  411078:	ldp	x29, x30, [sp, #16]
  41107c:	ldp	x19, x20, [sp, #32]
  411080:	ldp	x23, x24, [sp, #64]
  411084:	ldp	x25, x26, [sp, #80]
  411088:	str	w0, [x22]
  41108c:	mov	x0, x28
  411090:	ldp	x21, x22, [sp, #48]
  411094:	ldp	x27, x28, [sp, #96]
  411098:	add	sp, sp, #0x80
  41109c:	ret
  4110a0:	mov	x0, #0x0                   	// #0
  4110a4:	bl	411ed8 <__fxstatat@plt+0xf488>
  4110a8:	mov	x21, x0
  4110ac:	str	x0, [x27, #1328]
  4110b0:	ldp	x0, x1, [x26, #16]
  4110b4:	stp	x0, x1, [x21]
  4110b8:	b	410fac <__fxstatat@plt+0xe55c>
  4110bc:	bl	4120d0 <__fxstatat@plt+0xf680>
  4110c0:	bl	402760 <abort@plt>
  4110c4:	nop
  4110c8:	stp	x29, x30, [sp, #-48]!
  4110cc:	mov	x29, sp
  4110d0:	stp	x19, x20, [sp, #16]
  4110d4:	mov	x20, x0
  4110d8:	str	x21, [sp, #32]
  4110dc:	bl	4029e0 <__errno_location@plt>
  4110e0:	adrp	x2, 430000 <__progname@@GLIBC_2.17+0xa48>
  4110e4:	mov	x19, x0
  4110e8:	add	x2, x2, #0x758
  4110ec:	cmp	x20, #0x0
  4110f0:	add	x2, x2, #0x100
  4110f4:	mov	x1, #0x38                  	// #56
  4110f8:	ldr	w21, [x19]
  4110fc:	csel	x0, x2, x20, eq  // eq = none
  411100:	bl	412070 <__fxstatat@plt+0xf620>
  411104:	str	w21, [x19]
  411108:	ldp	x19, x20, [sp, #16]
  41110c:	ldr	x21, [sp, #32]
  411110:	ldp	x29, x30, [sp], #48
  411114:	ret
  411118:	adrp	x1, 430000 <__progname@@GLIBC_2.17+0xa48>
  41111c:	add	x1, x1, #0x758
  411120:	cmp	x0, #0x0
  411124:	add	x1, x1, #0x100
  411128:	csel	x0, x1, x0, eq  // eq = none
  41112c:	ldr	w0, [x0]
  411130:	ret
  411134:	nop
  411138:	adrp	x2, 430000 <__progname@@GLIBC_2.17+0xa48>
  41113c:	add	x2, x2, #0x758
  411140:	cmp	x0, #0x0
  411144:	add	x2, x2, #0x100
  411148:	csel	x0, x2, x0, eq  // eq = none
  41114c:	str	w1, [x0]
  411150:	ret
  411154:	nop
  411158:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  41115c:	add	x3, x3, #0x758
  411160:	cmp	x0, #0x0
  411164:	add	x3, x3, #0x100
  411168:	csel	x0, x3, x0, eq  // eq = none
  41116c:	ubfx	x4, x1, #5, #3
  411170:	add	x3, x0, #0x8
  411174:	and	w1, w1, #0x1f
  411178:	ldr	w5, [x3, x4, lsl #2]
  41117c:	lsr	w0, w5, w1
  411180:	eor	w2, w0, w2
  411184:	and	w2, w2, #0x1
  411188:	and	w0, w0, #0x1
  41118c:	lsl	w2, w2, w1
  411190:	eor	w2, w2, w5
  411194:	str	w2, [x3, x4, lsl #2]
  411198:	ret
  41119c:	nop
  4111a0:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  4111a4:	add	x3, x3, #0x758
  4111a8:	cmp	x0, #0x0
  4111ac:	add	x3, x3, #0x100
  4111b0:	csel	x2, x3, x0, eq  // eq = none
  4111b4:	ldr	w0, [x2, #4]
  4111b8:	str	w1, [x2, #4]
  4111bc:	ret
  4111c0:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  4111c4:	add	x3, x3, #0x758
  4111c8:	cmp	x0, #0x0
  4111cc:	add	x3, x3, #0x100
  4111d0:	csel	x0, x3, x0, eq  // eq = none
  4111d4:	mov	w3, #0xa                   	// #10
  4111d8:	cmp	x1, #0x0
  4111dc:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  4111e0:	str	w3, [x0]
  4111e4:	b.eq	4111f0 <__fxstatat@plt+0xe7a0>  // b.none
  4111e8:	stp	x1, x2, [x0, #40]
  4111ec:	ret
  4111f0:	stp	x29, x30, [sp, #-16]!
  4111f4:	mov	x29, sp
  4111f8:	bl	402760 <abort@plt>
  4111fc:	nop
  411200:	sub	sp, sp, #0x50
  411204:	adrp	x5, 430000 <__progname@@GLIBC_2.17+0xa48>
  411208:	stp	x29, x30, [sp, #16]
  41120c:	add	x29, sp, #0x10
  411210:	stp	x19, x20, [sp, #32]
  411214:	mov	x19, x4
  411218:	add	x4, x5, #0x758
  41121c:	cmp	x19, #0x0
  411220:	add	x4, x4, #0x100
  411224:	csel	x19, x4, x19, eq  // eq = none
  411228:	mov	x20, x3
  41122c:	stp	x21, x22, [sp, #48]
  411230:	mov	x21, x0
  411234:	mov	x22, x1
  411238:	str	x23, [sp, #64]
  41123c:	mov	x23, x2
  411240:	bl	4029e0 <__errno_location@plt>
  411244:	ldp	x7, x8, [x19, #40]
  411248:	mov	x3, x20
  41124c:	mov	x20, x0
  411250:	mov	x0, x21
  411254:	ldp	w4, w5, [x19]
  411258:	mov	x2, x23
  41125c:	ldr	w21, [x20]
  411260:	mov	x1, x22
  411264:	str	x8, [sp]
  411268:	add	x6, x19, #0x8
  41126c:	bl	40ff08 <__fxstatat@plt+0xd4b8>
  411270:	ldp	x29, x30, [sp, #16]
  411274:	ldr	x23, [sp, #64]
  411278:	str	w21, [x20]
  41127c:	ldp	x19, x20, [sp, #32]
  411280:	ldp	x21, x22, [sp, #48]
  411284:	add	sp, sp, #0x50
  411288:	ret
  41128c:	nop
  411290:	sub	sp, sp, #0x70
  411294:	adrp	x4, 430000 <__progname@@GLIBC_2.17+0xa48>
  411298:	add	x4, x4, #0x758
  41129c:	cmp	x3, #0x0
  4112a0:	add	x4, x4, #0x100
  4112a4:	stp	x29, x30, [sp, #16]
  4112a8:	add	x29, sp, #0x10
  4112ac:	stp	x19, x20, [sp, #32]
  4112b0:	csel	x19, x4, x3, eq  // eq = none
  4112b4:	mov	x20, x2
  4112b8:	stp	x21, x22, [sp, #48]
  4112bc:	mov	x22, x0
  4112c0:	stp	x23, x24, [sp, #64]
  4112c4:	mov	x23, x1
  4112c8:	stp	x25, x26, [sp, #80]
  4112cc:	stp	x27, x28, [sp, #96]
  4112d0:	bl	4029e0 <__errno_location@plt>
  4112d4:	ldr	w28, [x0]
  4112d8:	ldp	w4, w5, [x19]
  4112dc:	mov	x21, x0
  4112e0:	ldp	x7, x0, [x19, #40]
  4112e4:	cmp	x20, #0x0
  4112e8:	cset	w24, eq  // eq = none
  4112ec:	add	x27, x19, #0x8
  4112f0:	orr	w24, w24, w5
  4112f4:	mov	x6, x27
  4112f8:	mov	x3, x23
  4112fc:	mov	x2, x22
  411300:	mov	w5, w24
  411304:	str	x0, [sp]
  411308:	mov	x1, #0x0                   	// #0
  41130c:	mov	x0, #0x0                   	// #0
  411310:	bl	40ff08 <__fxstatat@plt+0xd4b8>
  411314:	add	x26, x0, #0x1
  411318:	mov	x25, x0
  41131c:	mov	x0, x26
  411320:	bl	411e78 <__fxstatat@plt+0xf428>
  411324:	ldp	x7, x1, [x19, #40]
  411328:	mov	w5, w24
  41132c:	ldr	w4, [x19]
  411330:	mov	x6, x27
  411334:	str	x1, [sp]
  411338:	mov	x3, x23
  41133c:	mov	x2, x22
  411340:	mov	x19, x0
  411344:	mov	x1, x26
  411348:	bl	40ff08 <__fxstatat@plt+0xd4b8>
  41134c:	str	w28, [x21]
  411350:	cbz	x20, 411358 <__fxstatat@plt+0xe908>
  411354:	str	x25, [x20]
  411358:	mov	x0, x19
  41135c:	ldp	x29, x30, [sp, #16]
  411360:	ldp	x19, x20, [sp, #32]
  411364:	ldp	x21, x22, [sp, #48]
  411368:	ldp	x23, x24, [sp, #64]
  41136c:	ldp	x25, x26, [sp, #80]
  411370:	ldp	x27, x28, [sp, #96]
  411374:	add	sp, sp, #0x70
  411378:	ret
  41137c:	nop
  411380:	mov	x3, x2
  411384:	mov	x2, #0x0                   	// #0
  411388:	b	411290 <__fxstatat@plt+0xe840>
  41138c:	nop
  411390:	stp	x29, x30, [sp, #-64]!
  411394:	mov	x29, sp
  411398:	stp	x21, x22, [sp, #32]
  41139c:	str	x23, [sp, #48]
  4113a0:	adrp	x23, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4113a4:	add	x22, x23, #0x530
  4113a8:	stp	x19, x20, [sp, #16]
  4113ac:	ldr	x21, [x23, #1328]
  4113b0:	ldr	w20, [x22, #8]
  4113b4:	cmp	w20, #0x1
  4113b8:	b.le	4113e0 <__fxstatat@plt+0xe990>
  4113bc:	sub	w0, w20, #0x2
  4113c0:	add	x20, x21, #0x28
  4113c4:	add	x19, x21, #0x18
  4113c8:	add	x20, x20, w0, uxtw #4
  4113cc:	nop
  4113d0:	ldr	x0, [x19], #16
  4113d4:	bl	402840 <free@plt>
  4113d8:	cmp	x19, x20
  4113dc:	b.ne	4113d0 <__fxstatat@plt+0xe980>  // b.any
  4113e0:	ldr	x0, [x21, #8]
  4113e4:	adrp	x19, 430000 <__progname@@GLIBC_2.17+0xa48>
  4113e8:	add	x19, x19, #0x758
  4113ec:	cmp	x0, x19
  4113f0:	b.eq	411400 <__fxstatat@plt+0xe9b0>  // b.none
  4113f4:	bl	402840 <free@plt>
  4113f8:	mov	x0, #0x100                 	// #256
  4113fc:	stp	x0, x19, [x22, #16]
  411400:	add	x19, x22, #0x10
  411404:	cmp	x21, x19
  411408:	b.eq	411418 <__fxstatat@plt+0xe9c8>  // b.none
  41140c:	mov	x0, x21
  411410:	bl	402840 <free@plt>
  411414:	str	x19, [x23, #1328]
  411418:	mov	w0, #0x1                   	// #1
  41141c:	str	w0, [x22, #8]
  411420:	ldp	x19, x20, [sp, #16]
  411424:	ldp	x21, x22, [sp, #32]
  411428:	ldr	x23, [sp, #48]
  41142c:	ldp	x29, x30, [sp], #64
  411430:	ret
  411434:	nop
  411438:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  41143c:	add	x3, x3, #0x758
  411440:	add	x3, x3, #0x100
  411444:	mov	x2, #0xffffffffffffffff    	// #-1
  411448:	b	410f20 <__fxstatat@plt+0xe4d0>
  41144c:	nop
  411450:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  411454:	add	x3, x3, #0x758
  411458:	add	x3, x3, #0x100
  41145c:	b	410f20 <__fxstatat@plt+0xe4d0>
  411460:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  411464:	add	x3, x3, #0x758
  411468:	mov	x1, x0
  41146c:	add	x3, x3, #0x100
  411470:	mov	x2, #0xffffffffffffffff    	// #-1
  411474:	mov	w0, #0x0                   	// #0
  411478:	b	410f20 <__fxstatat@plt+0xe4d0>
  41147c:	nop
  411480:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  411484:	add	x3, x3, #0x758
  411488:	mov	x2, x1
  41148c:	add	x3, x3, #0x100
  411490:	mov	x1, x0
  411494:	mov	w0, #0x0                   	// #0
  411498:	b	410f20 <__fxstatat@plt+0xe4d0>
  41149c:	nop
  4114a0:	stp	x29, x30, [sp, #-96]!
  4114a4:	add	x8, sp, #0x28
  4114a8:	mov	x29, sp
  4114ac:	stp	x19, x20, [sp, #16]
  4114b0:	mov	x20, x2
  4114b4:	mov	w19, w0
  4114b8:	mov	w0, w1
  4114bc:	bl	40fd70 <__fxstatat@plt+0xd320>
  4114c0:	add	x3, sp, #0x28
  4114c4:	mov	x1, x20
  4114c8:	mov	w0, w19
  4114cc:	mov	x2, #0xffffffffffffffff    	// #-1
  4114d0:	bl	410f20 <__fxstatat@plt+0xe4d0>
  4114d4:	ldp	x19, x20, [sp, #16]
  4114d8:	ldp	x29, x30, [sp], #96
  4114dc:	ret
  4114e0:	stp	x29, x30, [sp, #-112]!
  4114e4:	add	x8, sp, #0x38
  4114e8:	mov	x29, sp
  4114ec:	stp	x19, x20, [sp, #16]
  4114f0:	mov	x20, x2
  4114f4:	mov	w19, w0
  4114f8:	mov	w0, w1
  4114fc:	str	x21, [sp, #32]
  411500:	mov	x21, x3
  411504:	bl	40fd70 <__fxstatat@plt+0xd320>
  411508:	add	x3, sp, #0x38
  41150c:	mov	x2, x21
  411510:	mov	x1, x20
  411514:	mov	w0, w19
  411518:	bl	410f20 <__fxstatat@plt+0xe4d0>
  41151c:	ldp	x19, x20, [sp, #16]
  411520:	ldr	x21, [sp, #32]
  411524:	ldp	x29, x30, [sp], #112
  411528:	ret
  41152c:	nop
  411530:	mov	x2, x1
  411534:	mov	w1, w0
  411538:	mov	w0, #0x0                   	// #0
  41153c:	b	4114a0 <__fxstatat@plt+0xea50>
  411540:	mov	x4, x1
  411544:	mov	x3, x2
  411548:	mov	w1, w0
  41154c:	mov	x2, x4
  411550:	mov	w0, #0x0                   	// #0
  411554:	b	4114e0 <__fxstatat@plt+0xea90>
  411558:	adrp	x3, 430000 <__progname@@GLIBC_2.17+0xa48>
  41155c:	add	x3, x3, #0x758
  411560:	stp	x29, x30, [sp, #-80]!
  411564:	add	x5, x3, #0x100
  411568:	ubfx	x7, x2, #5, #3
  41156c:	mov	x29, sp
  411570:	ldp	x8, x9, [x3, #256]
  411574:	stp	x8, x9, [sp, #24]
  411578:	add	x6, sp, #0x20
  41157c:	and	w8, w2, #0x1f
  411580:	add	x4, sp, #0x18
  411584:	ldp	x2, x3, [x3, #272]
  411588:	stp	x2, x3, [sp, #40]
  41158c:	ldp	x2, x3, [x5, #32]
  411590:	stp	x2, x3, [sp, #56]
  411594:	mov	x2, x1
  411598:	mov	x3, x4
  41159c:	ldr	x1, [x5, #48]
  4115a0:	str	x1, [sp, #72]
  4115a4:	mov	x1, x0
  4115a8:	mov	w0, #0x0                   	// #0
  4115ac:	ldr	w5, [x6, x7, lsl #2]
  4115b0:	lsr	w4, w5, w8
  4115b4:	mvn	w4, w4
  4115b8:	and	w4, w4, #0x1
  4115bc:	lsl	w4, w4, w8
  4115c0:	eor	w4, w4, w5
  4115c4:	str	w4, [x6, x7, lsl #2]
  4115c8:	bl	410f20 <__fxstatat@plt+0xe4d0>
  4115cc:	ldp	x29, x30, [sp], #80
  4115d0:	ret
  4115d4:	nop
  4115d8:	mov	w2, w1
  4115dc:	mov	x1, #0xffffffffffffffff    	// #-1
  4115e0:	b	411558 <__fxstatat@plt+0xeb08>
  4115e4:	nop
  4115e8:	mov	w2, #0x3a                  	// #58
  4115ec:	mov	x1, #0xffffffffffffffff    	// #-1
  4115f0:	b	411558 <__fxstatat@plt+0xeb08>
  4115f4:	nop
  4115f8:	mov	w2, #0x3a                  	// #58
  4115fc:	b	411558 <__fxstatat@plt+0xeb08>
  411600:	stp	x29, x30, [sp, #-160]!
  411604:	mov	x29, sp
  411608:	add	x8, sp, #0x20
  41160c:	stp	x19, x20, [sp, #16]
  411610:	mov	x20, x2
  411614:	mov	w19, w0
  411618:	mov	w0, w1
  41161c:	bl	40fd70 <__fxstatat@plt+0xd320>
  411620:	ldp	x0, x1, [sp, #32]
  411624:	stp	x0, x1, [sp, #104]
  411628:	add	x3, sp, #0x68
  41162c:	ldr	w2, [sp, #116]
  411630:	mov	x1, x20
  411634:	ldp	x6, x7, [sp, #48]
  411638:	mvn	w4, w2
  41163c:	ldp	x8, x9, [sp, #64]
  411640:	and	w4, w4, #0x4000000
  411644:	ldr	x5, [sp, #80]
  411648:	eor	w4, w4, w2
  41164c:	mov	w0, w19
  411650:	mov	x2, #0xffffffffffffffff    	// #-1
  411654:	str	w4, [sp, #116]
  411658:	stp	x6, x7, [sp, #120]
  41165c:	stp	x8, x9, [sp, #136]
  411660:	str	x5, [sp, #152]
  411664:	bl	410f20 <__fxstatat@plt+0xe4d0>
  411668:	ldp	x19, x20, [sp, #16]
  41166c:	ldp	x29, x30, [sp], #160
  411670:	ret
  411674:	nop
  411678:	adrp	x5, 430000 <__progname@@GLIBC_2.17+0xa48>
  41167c:	add	x5, x5, #0x758
  411680:	stp	x29, x30, [sp, #-80]!
  411684:	mov	x6, x1
  411688:	mov	w1, #0xa                   	// #10
  41168c:	mov	x29, sp
  411690:	ldp	x8, x9, [x5, #256]
  411694:	stp	x8, x9, [sp, #24]
  411698:	cmp	x6, #0x0
  41169c:	str	w1, [sp, #24]
  4116a0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  4116a4:	ldp	x10, x11, [x5, #272]
  4116a8:	stp	x10, x11, [sp, #40]
  4116ac:	ldp	x8, x9, [x5, #288]
  4116b0:	stp	x8, x9, [sp, #56]
  4116b4:	ldr	x1, [x5, #304]
  4116b8:	str	x1, [sp, #72]
  4116bc:	b.eq	4116e0 <__fxstatat@plt+0xec90>  // b.none
  4116c0:	mov	x5, x2
  4116c4:	mov	x1, x3
  4116c8:	mov	x2, x4
  4116cc:	add	x3, sp, #0x18
  4116d0:	stp	x6, x5, [sp, #64]
  4116d4:	bl	410f20 <__fxstatat@plt+0xe4d0>
  4116d8:	ldp	x29, x30, [sp], #80
  4116dc:	ret
  4116e0:	bl	402760 <abort@plt>
  4116e4:	nop
  4116e8:	mov	x4, #0xffffffffffffffff    	// #-1
  4116ec:	b	411678 <__fxstatat@plt+0xec28>
  4116f0:	mov	x4, x1
  4116f4:	mov	x3, x2
  4116f8:	mov	x1, x0
  4116fc:	mov	x2, x4
  411700:	mov	w0, #0x0                   	// #0
  411704:	mov	x4, #0xffffffffffffffff    	// #-1
  411708:	b	411678 <__fxstatat@plt+0xec28>
  41170c:	nop
  411710:	mov	x4, x1
  411714:	mov	x5, x2
  411718:	mov	x1, x0
  41171c:	mov	x2, x4
  411720:	mov	w0, #0x0                   	// #0
  411724:	mov	x4, x3
  411728:	mov	x3, x5
  41172c:	b	411678 <__fxstatat@plt+0xec28>
  411730:	adrp	x3, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  411734:	add	x3, x3, #0x530
  411738:	add	x3, x3, #0x20
  41173c:	b	410f20 <__fxstatat@plt+0xe4d0>
  411740:	adrp	x3, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  411744:	add	x3, x3, #0x530
  411748:	mov	x2, x1
  41174c:	add	x3, x3, #0x20
  411750:	mov	x1, x0
  411754:	mov	w0, #0x0                   	// #0
  411758:	b	410f20 <__fxstatat@plt+0xe4d0>
  41175c:	nop
  411760:	adrp	x3, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  411764:	add	x3, x3, #0x530
  411768:	add	x3, x3, #0x20
  41176c:	mov	x2, #0xffffffffffffffff    	// #-1
  411770:	b	410f20 <__fxstatat@plt+0xe4d0>
  411774:	nop
  411778:	adrp	x3, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  41177c:	add	x3, x3, #0x530
  411780:	mov	x1, x0
  411784:	add	x3, x3, #0x20
  411788:	mov	x2, #0xffffffffffffffff    	// #-1
  41178c:	mov	w0, #0x0                   	// #0
  411790:	b	410f20 <__fxstatat@plt+0xe4d0>
  411794:	nop
  411798:	stp	x29, x30, [sp, #-336]!
  41179c:	mov	x29, sp
  4117a0:	stp	x19, x20, [sp, #16]
  4117a4:	stp	x21, x22, [sp, #32]
  4117a8:	mov	x22, x3
  4117ac:	stp	x23, x24, [sp, #48]
  4117b0:	mov	x23, x1
  4117b4:	mov	w24, w2
  4117b8:	str	x25, [sp, #64]
  4117bc:	mov	w25, w0
  4117c0:	mov	x0, x1
  4117c4:	bl	40b290 <__fxstatat@plt+0x8840>
  4117c8:	mov	x19, x0
  4117cc:	mov	x0, x22
  4117d0:	bl	40b290 <__fxstatat@plt+0x8840>
  4117d4:	mov	x20, x0
  4117d8:	mov	x0, x19
  4117dc:	bl	40b2e8 <__fxstatat@plt+0x8898>
  4117e0:	mov	x21, x0
  4117e4:	mov	x0, x20
  4117e8:	bl	40b2e8 <__fxstatat@plt+0x8898>
  4117ec:	cmp	x21, x0
  4117f0:	b.eq	411814 <__fxstatat@plt+0xedc4>  // b.none
  4117f4:	mov	w19, #0x0                   	// #0
  4117f8:	mov	w0, w19
  4117fc:	ldp	x19, x20, [sp, #16]
  411800:	ldp	x21, x22, [sp, #32]
  411804:	ldp	x23, x24, [sp, #48]
  411808:	ldr	x25, [sp, #64]
  41180c:	ldp	x29, x30, [sp], #336
  411810:	ret
  411814:	mov	x2, x21
  411818:	mov	x1, x20
  41181c:	mov	x0, x19
  411820:	bl	4027a0 <memcmp@plt>
  411824:	cbnz	w0, 4117f4 <__fxstatat@plt+0xeda4>
  411828:	mov	x0, x23
  41182c:	bl	413a00 <_obstack_memory_used@@Base+0x6e0>
  411830:	mov	w1, w25
  411834:	mov	x19, x0
  411838:	mov	x2, x0
  41183c:	add	x3, sp, #0x50
  411840:	mov	w4, #0x100                 	// #256
  411844:	mov	w0, #0x0                   	// #0
  411848:	bl	402a50 <__fxstatat@plt>
  41184c:	cbnz	w0, 4118ec <__fxstatat@plt+0xee9c>
  411850:	mov	x0, x19
  411854:	bl	402840 <free@plt>
  411858:	mov	x0, x22
  41185c:	bl	413a00 <_obstack_memory_used@@Base+0x6e0>
  411860:	mov	w1, w24
  411864:	mov	x20, x0
  411868:	mov	x2, x0
  41186c:	add	x3, sp, #0xd0
  411870:	mov	w4, #0x100                 	// #256
  411874:	mov	w0, #0x0                   	// #0
  411878:	bl	402a50 <__fxstatat@plt>
  41187c:	cbnz	w0, 4118c8 <__fxstatat@plt+0xee78>
  411880:	ldr	x1, [sp, #88]
  411884:	mov	w19, #0x0                   	// #0
  411888:	ldr	x0, [sp, #216]
  41188c:	cmp	x1, x0
  411890:	b.ne	4118a4 <__fxstatat@plt+0xee54>  // b.any
  411894:	ldr	x1, [sp, #80]
  411898:	ldr	x0, [sp, #208]
  41189c:	cmp	x1, x0
  4118a0:	cset	w19, eq  // eq = none
  4118a4:	mov	x0, x20
  4118a8:	bl	402840 <free@plt>
  4118ac:	mov	w0, w19
  4118b0:	ldp	x19, x20, [sp, #16]
  4118b4:	ldp	x21, x22, [sp, #32]
  4118b8:	ldp	x23, x24, [sp, #48]
  4118bc:	ldr	x25, [sp, #64]
  4118c0:	ldp	x29, x30, [sp], #336
  4118c4:	ret
  4118c8:	bl	4029e0 <__errno_location@plt>
  4118cc:	mov	x1, x0
  4118d0:	mov	x3, x20
  4118d4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4118d8:	mov	w0, #0x1                   	// #1
  4118dc:	add	x2, x2, #0x4b0
  4118e0:	ldr	w1, [x1]
  4118e4:	bl	402490 <error@plt>
  4118e8:	b	411880 <__fxstatat@plt+0xee30>
  4118ec:	bl	4029e0 <__errno_location@plt>
  4118f0:	mov	x1, x0
  4118f4:	mov	x3, x19
  4118f8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4118fc:	mov	w0, #0x1                   	// #1
  411900:	add	x2, x2, #0x4b0
  411904:	ldr	w1, [x1]
  411908:	bl	402490 <error@plt>
  41190c:	b	411850 <__fxstatat@plt+0xee00>
  411910:	mov	x3, x1
  411914:	mov	w2, #0xffffff9c            	// #-100
  411918:	mov	x1, x0
  41191c:	mov	w0, w2
  411920:	b	411798 <__fxstatat@plt+0xed48>
  411924:	nop
  411928:	sub	sp, sp, #0x50
  41192c:	stp	x29, x30, [sp, #32]
  411930:	add	x29, sp, #0x20
  411934:	stp	x19, x20, [sp, #48]
  411938:	mov	x19, x5
  41193c:	mov	x20, x4
  411940:	str	x21, [sp, #64]
  411944:	mov	x5, x3
  411948:	mov	x21, x0
  41194c:	cbz	x1, 411b28 <__fxstatat@plt+0xf0d8>
  411950:	mov	x4, x2
  411954:	mov	x3, x1
  411958:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  41195c:	mov	w1, #0x1                   	// #1
  411960:	add	x2, x2, #0x260
  411964:	bl	4027e0 <__fprintf_chk@plt>
  411968:	mov	w2, #0x5                   	// #5
  41196c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411970:	mov	x0, #0x0                   	// #0
  411974:	add	x1, x1, #0x278
  411978:	bl	402970 <dcgettext@plt>
  41197c:	mov	x3, x0
  411980:	mov	w4, #0x7e3                 	// #2019
  411984:	mov	w1, #0x1                   	// #1
  411988:	mov	x0, x21
  41198c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411990:	add	x2, x2, #0x570
  411994:	bl	4027e0 <__fprintf_chk@plt>
  411998:	mov	w2, #0x5                   	// #5
  41199c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  4119a0:	mov	x0, #0x0                   	// #0
  4119a4:	add	x1, x1, #0x280
  4119a8:	bl	402970 <dcgettext@plt>
  4119ac:	mov	x1, x21
  4119b0:	bl	402980 <fputs_unlocked@plt>
  4119b4:	cmp	x19, #0x5
  4119b8:	b.eq	411b44 <__fxstatat@plt+0xf0f4>  // b.none
  4119bc:	b.hi	411a10 <__fxstatat@plt+0xefc0>  // b.pmore
  4119c0:	cmp	x19, #0x2
  4119c4:	b.eq	411b84 <__fxstatat@plt+0xf134>  // b.none
  4119c8:	b.ls	411a84 <__fxstatat@plt+0xf034>  // b.plast
  4119cc:	cmp	x19, #0x3
  4119d0:	b.eq	411c04 <__fxstatat@plt+0xf1b4>  // b.none
  4119d4:	mov	w2, #0x5                   	// #5
  4119d8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  4119dc:	mov	x0, #0x0                   	// #0
  4119e0:	add	x1, x1, #0x398
  4119e4:	bl	402970 <dcgettext@plt>
  4119e8:	mov	x2, x0
  4119ec:	ldp	x3, x4, [x20]
  4119f0:	mov	x0, x21
  4119f4:	ldp	x5, x6, [x20, #16]
  4119f8:	mov	w1, #0x1                   	// #1
  4119fc:	ldp	x29, x30, [sp, #32]
  411a00:	ldp	x19, x20, [sp, #48]
  411a04:	ldr	x21, [sp, #64]
  411a08:	add	sp, sp, #0x50
  411a0c:	b	4027e0 <__fprintf_chk@plt>
  411a10:	cmp	x19, #0x8
  411a14:	b.eq	411c40 <__fxstatat@plt+0xf1f0>  // b.none
  411a18:	b.ls	411ac8 <__fxstatat@plt+0xf078>  // b.plast
  411a1c:	cmp	x19, #0x9
  411a20:	b.ne	411bf4 <__fxstatat@plt+0xf1a4>  // b.any
  411a24:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411a28:	add	x1, x1, #0x468
  411a2c:	mov	w2, #0x5                   	// #5
  411a30:	mov	x0, #0x0                   	// #0
  411a34:	bl	402970 <dcgettext@plt>
  411a38:	ldp	x7, x8, [x20, #32]
  411a3c:	mov	x2, x0
  411a40:	ldp	x3, x4, [x20]
  411a44:	mov	x0, x21
  411a48:	ldp	x5, x6, [x20, #16]
  411a4c:	str	x8, [sp]
  411a50:	mov	w1, #0x1                   	// #1
  411a54:	ldr	x8, [x20, #48]
  411a58:	str	x8, [sp, #8]
  411a5c:	ldr	x8, [x20, #56]
  411a60:	str	x8, [sp, #16]
  411a64:	ldr	x8, [x20, #64]
  411a68:	str	x8, [sp, #24]
  411a6c:	bl	4027e0 <__fprintf_chk@plt>
  411a70:	ldp	x29, x30, [sp, #32]
  411a74:	ldp	x19, x20, [sp, #48]
  411a78:	ldr	x21, [sp, #64]
  411a7c:	add	sp, sp, #0x50
  411a80:	ret
  411a84:	cbz	x19, 411b14 <__fxstatat@plt+0xf0c4>
  411a88:	cmp	x19, #0x1
  411a8c:	b.ne	411bf4 <__fxstatat@plt+0xf1a4>  // b.any
  411a90:	mov	w2, #0x5                   	// #5
  411a94:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411a98:	mov	x0, #0x0                   	// #0
  411a9c:	add	x1, x1, #0x350
  411aa0:	bl	402970 <dcgettext@plt>
  411aa4:	mov	x2, x0
  411aa8:	mov	w1, w19
  411aac:	mov	x0, x21
  411ab0:	ldr	x3, [x20]
  411ab4:	ldp	x29, x30, [sp, #32]
  411ab8:	ldp	x19, x20, [sp, #48]
  411abc:	ldr	x21, [sp, #64]
  411ac0:	add	sp, sp, #0x50
  411ac4:	b	4027e0 <__fprintf_chk@plt>
  411ac8:	cmp	x19, #0x6
  411acc:	b.eq	411bbc <__fxstatat@plt+0xf16c>  // b.none
  411ad0:	cmp	x19, #0x7
  411ad4:	b.ne	411bf4 <__fxstatat@plt+0xf1a4>  // b.any
  411ad8:	mov	w2, #0x5                   	// #5
  411adc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411ae0:	mov	x0, #0x0                   	// #0
  411ae4:	add	x1, x1, #0x408
  411ae8:	bl	402970 <dcgettext@plt>
  411aec:	mov	x2, x0
  411af0:	ldp	x7, x8, [x20, #32]
  411af4:	mov	x0, x21
  411af8:	ldp	x3, x4, [x20]
  411afc:	mov	w1, #0x1                   	// #1
  411b00:	ldp	x5, x6, [x20, #16]
  411b04:	str	x8, [sp]
  411b08:	ldr	x8, [x20, #48]
  411b0c:	str	x8, [sp, #8]
  411b10:	bl	4027e0 <__fprintf_chk@plt>
  411b14:	ldp	x29, x30, [sp, #32]
  411b18:	ldp	x19, x20, [sp, #48]
  411b1c:	ldr	x21, [sp, #64]
  411b20:	add	sp, sp, #0x50
  411b24:	ret
  411b28:	mov	x4, x3
  411b2c:	mov	w1, #0x1                   	// #1
  411b30:	mov	x3, x2
  411b34:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411b38:	add	x2, x2, #0x270
  411b3c:	bl	4027e0 <__fprintf_chk@plt>
  411b40:	b	411968 <__fxstatat@plt+0xef18>
  411b44:	mov	w2, w19
  411b48:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411b4c:	mov	x0, #0x0                   	// #0
  411b50:	add	x1, x1, #0x3b8
  411b54:	bl	402970 <dcgettext@plt>
  411b58:	mov	x2, x0
  411b5c:	ldp	x3, x4, [x20]
  411b60:	mov	x0, x21
  411b64:	ldp	x5, x6, [x20, #16]
  411b68:	mov	w1, #0x1                   	// #1
  411b6c:	ldp	x29, x30, [sp, #32]
  411b70:	ldr	x7, [x20, #32]
  411b74:	ldp	x19, x20, [sp, #48]
  411b78:	ldr	x21, [sp, #64]
  411b7c:	add	sp, sp, #0x50
  411b80:	b	4027e0 <__fprintf_chk@plt>
  411b84:	mov	w2, #0x5                   	// #5
  411b88:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411b8c:	mov	x0, #0x0                   	// #0
  411b90:	add	x1, x1, #0x360
  411b94:	bl	402970 <dcgettext@plt>
  411b98:	mov	x2, x0
  411b9c:	ldp	x3, x4, [x20]
  411ba0:	mov	x0, x21
  411ba4:	ldp	x29, x30, [sp, #32]
  411ba8:	mov	w1, #0x1                   	// #1
  411bac:	ldp	x19, x20, [sp, #48]
  411bb0:	ldr	x21, [sp, #64]
  411bb4:	add	sp, sp, #0x50
  411bb8:	b	4027e0 <__fprintf_chk@plt>
  411bbc:	mov	w2, #0x5                   	// #5
  411bc0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411bc4:	mov	x0, #0x0                   	// #0
  411bc8:	add	x1, x1, #0x3e0
  411bcc:	bl	402970 <dcgettext@plt>
  411bd0:	mov	x2, x0
  411bd4:	ldp	x3, x4, [x20]
  411bd8:	mov	x0, x21
  411bdc:	ldp	x5, x6, [x20, #16]
  411be0:	mov	w1, #0x1                   	// #1
  411be4:	ldp	x7, x8, [x20, #32]
  411be8:	str	x8, [sp]
  411bec:	bl	4027e0 <__fprintf_chk@plt>
  411bf0:	b	411b14 <__fxstatat@plt+0xf0c4>
  411bf4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411bf8:	mov	w2, #0x5                   	// #5
  411bfc:	add	x1, x1, #0x4a0
  411c00:	b	411a30 <__fxstatat@plt+0xefe0>
  411c04:	mov	w2, #0x5                   	// #5
  411c08:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411c0c:	mov	x0, #0x0                   	// #0
  411c10:	add	x1, x1, #0x378
  411c14:	bl	402970 <dcgettext@plt>
  411c18:	mov	x2, x0
  411c1c:	ldp	x3, x4, [x20]
  411c20:	mov	x0, x21
  411c24:	ldr	x5, [x20, #16]
  411c28:	mov	w1, #0x1                   	// #1
  411c2c:	ldp	x29, x30, [sp, #32]
  411c30:	ldp	x19, x20, [sp, #48]
  411c34:	ldr	x21, [sp, #64]
  411c38:	add	sp, sp, #0x50
  411c3c:	b	4027e0 <__fprintf_chk@plt>
  411c40:	mov	w2, #0x5                   	// #5
  411c44:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411c48:	mov	x0, #0x0                   	// #0
  411c4c:	add	x1, x1, #0x438
  411c50:	bl	402970 <dcgettext@plt>
  411c54:	mov	x2, x0
  411c58:	ldp	x7, x8, [x20, #32]
  411c5c:	mov	x0, x21
  411c60:	ldp	x3, x4, [x20]
  411c64:	mov	w1, #0x1                   	// #1
  411c68:	ldp	x5, x6, [x20, #16]
  411c6c:	str	x8, [sp]
  411c70:	ldr	x8, [x20, #48]
  411c74:	str	x8, [sp, #8]
  411c78:	ldr	x8, [x20, #56]
  411c7c:	str	x8, [sp, #16]
  411c80:	bl	4027e0 <__fprintf_chk@plt>
  411c84:	b	411b14 <__fxstatat@plt+0xf0c4>
  411c88:	ldr	x5, [x4]
  411c8c:	cbz	x5, 411ca8 <__fxstatat@plt+0xf258>
  411c90:	mov	x5, #0x0                   	// #0
  411c94:	nop
  411c98:	add	x5, x5, #0x1
  411c9c:	ldr	x6, [x4, x5, lsl #3]
  411ca0:	cbnz	x6, 411c98 <__fxstatat@plt+0xf248>
  411ca4:	b	411928 <__fxstatat@plt+0xeed8>
  411ca8:	mov	x5, #0x0                   	// #0
  411cac:	b	411928 <__fxstatat@plt+0xeed8>
  411cb0:	stp	x29, x30, [sp, #-96]!
  411cb4:	mov	x5, #0x0                   	// #0
  411cb8:	mov	x29, sp
  411cbc:	add	x8, sp, #0x10
  411cc0:	ldr	w7, [x4, #24]
  411cc4:	ldp	x6, x11, [x4]
  411cc8:	b	411cf0 <__fxstatat@plt+0xf2a0>
  411ccc:	mov	x4, x6
  411cd0:	add	x8, x8, #0x8
  411cd4:	and	x6, x10, #0xfffffffffffffff8
  411cd8:	ldr	x4, [x4]
  411cdc:	stur	x4, [x8, #-8]
  411ce0:	cbz	x4, 411d20 <__fxstatat@plt+0xf2d0>
  411ce4:	add	x5, x5, #0x1
  411ce8:	cmp	x5, #0xa
  411cec:	b.eq	411d20 <__fxstatat@plt+0xf2d0>  // b.none
  411cf0:	add	x10, x6, #0xf
  411cf4:	add	w9, w7, #0x8
  411cf8:	tbz	w7, #31, 411ccc <__fxstatat@plt+0xf27c>
  411cfc:	add	x4, x11, w7, sxtw
  411d00:	add	x10, x6, #0xf
  411d04:	mov	w7, w9
  411d08:	cmp	w9, #0x0
  411d0c:	b.gt	411ccc <__fxstatat@plt+0xf27c>
  411d10:	ldr	x4, [x4]
  411d14:	str	x4, [x8]
  411d18:	add	x8, x8, #0x8
  411d1c:	cbnz	x4, 411ce4 <__fxstatat@plt+0xf294>
  411d20:	add	x4, sp, #0x10
  411d24:	bl	411928 <__fxstatat@plt+0xeed8>
  411d28:	ldp	x29, x30, [sp], #96
  411d2c:	ret
  411d30:	stp	x29, x30, [sp, #-288]!
  411d34:	mov	w12, #0xffffffe0            	// #-32
  411d38:	mov	w13, #0xffffff80            	// #-128
  411d3c:	mov	x29, sp
  411d40:	add	x14, sp, #0x100
  411d44:	add	x11, sp, #0x120
  411d48:	add	x9, sp, #0x30
  411d4c:	mov	w8, w12
  411d50:	mov	x10, #0x0                   	// #0
  411d54:	stp	x11, x11, [sp, #16]
  411d58:	str	x14, [sp, #32]
  411d5c:	stp	w12, w13, [sp, #40]
  411d60:	str	q0, [sp, #128]
  411d64:	str	q1, [sp, #144]
  411d68:	str	q2, [sp, #160]
  411d6c:	str	q3, [sp, #176]
  411d70:	str	q4, [sp, #192]
  411d74:	str	q5, [sp, #208]
  411d78:	str	q6, [sp, #224]
  411d7c:	str	q7, [sp, #240]
  411d80:	stp	x4, x5, [sp, #256]
  411d84:	stp	x6, x7, [sp, #272]
  411d88:	b	411db0 <__fxstatat@plt+0xf360>
  411d8c:	mov	x4, x11
  411d90:	add	x9, x9, #0x8
  411d94:	add	x11, x11, #0x8
  411d98:	ldr	x4, [x4]
  411d9c:	stur	x4, [x9, #-8]
  411da0:	cbz	x4, 411ddc <__fxstatat@plt+0xf38c>
  411da4:	add	x10, x10, #0x1
  411da8:	cmp	x10, #0xa
  411dac:	b.eq	411ddc <__fxstatat@plt+0xf38c>  // b.none
  411db0:	add	w5, w8, #0x8
  411db4:	tbz	w8, #31, 411d8c <__fxstatat@plt+0xf33c>
  411db8:	add	x4, sp, #0x120
  411dbc:	cmp	w5, #0x0
  411dc0:	add	x4, x4, w8, sxtw
  411dc4:	mov	w8, w5
  411dc8:	b.gt	411d8c <__fxstatat@plt+0xf33c>
  411dcc:	ldr	x4, [x4]
  411dd0:	str	x4, [x9]
  411dd4:	add	x9, x9, #0x8
  411dd8:	cbnz	x4, 411da4 <__fxstatat@plt+0xf354>
  411ddc:	add	x4, sp, #0x30
  411de0:	mov	x5, x10
  411de4:	bl	411928 <__fxstatat@plt+0xeed8>
  411de8:	ldp	x29, x30, [sp], #288
  411dec:	ret
  411df0:	stp	x29, x30, [sp, #-16]!
  411df4:	mov	w2, #0x5                   	// #5
  411df8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411dfc:	mov	x29, sp
  411e00:	add	x1, x1, #0x4e0
  411e04:	mov	x0, #0x0                   	// #0
  411e08:	bl	402970 <dcgettext@plt>
  411e0c:	mov	x1, x0
  411e10:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411e14:	mov	w0, #0x1                   	// #1
  411e18:	add	x2, x2, #0x4f8
  411e1c:	bl	402670 <__printf_chk@plt>
  411e20:	mov	w2, #0x5                   	// #5
  411e24:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411e28:	mov	x0, #0x0                   	// #0
  411e2c:	add	x1, x1, #0x510
  411e30:	bl	402970 <dcgettext@plt>
  411e34:	mov	x1, x0
  411e38:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x3ce0>
  411e3c:	add	x3, x3, #0x300
  411e40:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  411e44:	mov	w0, #0x1                   	// #1
  411e48:	add	x2, x2, #0x328
  411e4c:	bl	402670 <__printf_chk@plt>
  411e50:	mov	w2, #0x5                   	// #5
  411e54:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  411e58:	mov	x0, #0x0                   	// #0
  411e5c:	add	x1, x1, #0x528
  411e60:	bl	402970 <dcgettext@plt>
  411e64:	ldp	x29, x30, [sp], #16
  411e68:	adrp	x1, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  411e6c:	ldr	x1, [x1, #1456]
  411e70:	b	402980 <fputs_unlocked@plt>
  411e74:	nop
  411e78:	stp	x29, x30, [sp, #-32]!
  411e7c:	mov	x29, sp
  411e80:	str	x19, [sp, #16]
  411e84:	mov	x19, x0
  411e88:	bl	4025f0 <malloc@plt>
  411e8c:	cmp	x0, #0x0
  411e90:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  411e94:	b.ne	411ea4 <__fxstatat@plt+0xf454>  // b.any
  411e98:	ldr	x19, [sp, #16]
  411e9c:	ldp	x29, x30, [sp], #32
  411ea0:	ret
  411ea4:	bl	4120d0 <__fxstatat@plt+0xf680>
  411ea8:	umulh	x2, x0, x1
  411eac:	mul	x0, x0, x1
  411eb0:	cmp	x2, #0x0
  411eb4:	cset	x1, ne  // ne = any
  411eb8:	tbnz	x0, #63, 411ec4 <__fxstatat@plt+0xf474>
  411ebc:	cbnz	x1, 411ec4 <__fxstatat@plt+0xf474>
  411ec0:	b	411e78 <__fxstatat@plt+0xf428>
  411ec4:	stp	x29, x30, [sp, #-16]!
  411ec8:	mov	x29, sp
  411ecc:	bl	4120d0 <__fxstatat@plt+0xf680>
  411ed0:	b	411e78 <__fxstatat@plt+0xf428>
  411ed4:	nop
  411ed8:	stp	x29, x30, [sp, #-32]!
  411edc:	cmp	x1, #0x0
  411ee0:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  411ee4:	mov	x29, sp
  411ee8:	b.ne	411f10 <__fxstatat@plt+0xf4c0>  // b.any
  411eec:	str	x19, [sp, #16]
  411ef0:	mov	x19, x1
  411ef4:	bl	4026e0 <realloc@plt>
  411ef8:	cmp	x0, #0x0
  411efc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  411f00:	b.ne	411f20 <__fxstatat@plt+0xf4d0>  // b.any
  411f04:	ldr	x19, [sp, #16]
  411f08:	ldp	x29, x30, [sp], #32
  411f0c:	ret
  411f10:	bl	402840 <free@plt>
  411f14:	mov	x0, #0x0                   	// #0
  411f18:	ldp	x29, x30, [sp], #32
  411f1c:	ret
  411f20:	bl	4120d0 <__fxstatat@plt+0xf680>
  411f24:	nop
  411f28:	umulh	x3, x1, x2
  411f2c:	mul	x1, x1, x2
  411f30:	cmp	x3, #0x0
  411f34:	cset	x2, ne  // ne = any
  411f38:	tbnz	x1, #63, 411f44 <__fxstatat@plt+0xf4f4>
  411f3c:	cbnz	x2, 411f44 <__fxstatat@plt+0xf4f4>
  411f40:	b	411ed8 <__fxstatat@plt+0xf488>
  411f44:	stp	x29, x30, [sp, #-16]!
  411f48:	mov	x29, sp
  411f4c:	bl	4120d0 <__fxstatat@plt+0xf680>
  411f50:	mov	x4, x1
  411f54:	ldr	x3, [x1]
  411f58:	cbz	x0, 411f84 <__fxstatat@plt+0xf534>
  411f5c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  411f60:	movk	x1, #0x5554
  411f64:	udiv	x1, x1, x2
  411f68:	cmp	x1, x3
  411f6c:	b.ls	411fa0 <__fxstatat@plt+0xf550>  // b.plast
  411f70:	add	x1, x3, #0x1
  411f74:	add	x3, x1, x3, lsr #1
  411f78:	mul	x1, x3, x2
  411f7c:	str	x3, [x4]
  411f80:	b	411ed8 <__fxstatat@plt+0xf488>
  411f84:	cbz	x3, 411fac <__fxstatat@plt+0xf55c>
  411f88:	umulh	x5, x3, x2
  411f8c:	mul	x1, x3, x2
  411f90:	cmp	x5, #0x0
  411f94:	cset	x2, ne  // ne = any
  411f98:	tbnz	x1, #63, 411fa0 <__fxstatat@plt+0xf550>
  411f9c:	cbz	x2, 411f7c <__fxstatat@plt+0xf52c>
  411fa0:	stp	x29, x30, [sp, #-16]!
  411fa4:	mov	x29, sp
  411fa8:	bl	4120d0 <__fxstatat@plt+0xf680>
  411fac:	mov	x3, #0x80                  	// #128
  411fb0:	cmp	x2, x3
  411fb4:	udiv	x3, x3, x2
  411fb8:	cinc	x3, x3, hi  // hi = pmore
  411fbc:	b	411f88 <__fxstatat@plt+0xf538>
  411fc0:	mov	x2, x1
  411fc4:	ldr	x1, [x1]
  411fc8:	cbz	x0, 411fec <__fxstatat@plt+0xf59c>
  411fcc:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  411fd0:	movk	x3, #0x5553
  411fd4:	cmp	x1, x3
  411fd8:	b.hi	412004 <__fxstatat@plt+0xf5b4>  // b.pmore
  411fdc:	add	x3, x1, #0x1
  411fe0:	add	x1, x3, x1, lsr #1
  411fe4:	str	x1, [x2]
  411fe8:	b	411ed8 <__fxstatat@plt+0xf488>
  411fec:	cmp	x1, #0x0
  411ff0:	cbnz	x1, 412000 <__fxstatat@plt+0xf5b0>
  411ff4:	mov	x1, #0x80                  	// #128
  411ff8:	str	x1, [x2]
  411ffc:	b	411ed8 <__fxstatat@plt+0xf488>
  412000:	b.ge	411fe4 <__fxstatat@plt+0xf594>  // b.tcont
  412004:	stp	x29, x30, [sp, #-16]!
  412008:	mov	x29, sp
  41200c:	bl	4120d0 <__fxstatat@plt+0xf680>
  412010:	stp	x29, x30, [sp, #-32]!
  412014:	mov	x29, sp
  412018:	str	x19, [sp, #16]
  41201c:	mov	x19, x0
  412020:	bl	411e78 <__fxstatat@plt+0xf428>
  412024:	mov	x2, x19
  412028:	mov	w1, #0x0                   	// #0
  41202c:	ldr	x19, [sp, #16]
  412030:	ldp	x29, x30, [sp], #32
  412034:	b	402680 <memset@plt>
  412038:	umulh	x4, x0, x1
  41203c:	stp	x29, x30, [sp, #-16]!
  412040:	mul	x2, x0, x1
  412044:	cmp	x4, #0x0
  412048:	mov	x29, sp
  41204c:	cset	x3, ne  // ne = any
  412050:	tbnz	x2, #63, 412068 <__fxstatat@plt+0xf618>
  412054:	cbnz	x3, 412068 <__fxstatat@plt+0xf618>
  412058:	bl	4026c0 <calloc@plt>
  41205c:	cbz	x0, 412068 <__fxstatat@plt+0xf618>
  412060:	ldp	x29, x30, [sp], #16
  412064:	ret
  412068:	bl	4120d0 <__fxstatat@plt+0xf680>
  41206c:	nop
  412070:	stp	x29, x30, [sp, #-32]!
  412074:	mov	x29, sp
  412078:	stp	x19, x20, [sp, #16]
  41207c:	mov	x19, x1
  412080:	mov	x20, x0
  412084:	mov	x0, x1
  412088:	bl	411e78 <__fxstatat@plt+0xf428>
  41208c:	mov	x2, x19
  412090:	mov	x1, x20
  412094:	ldp	x19, x20, [sp, #16]
  412098:	ldp	x29, x30, [sp], #32
  41209c:	b	4023c0 <memcpy@plt>
  4120a0:	stp	x29, x30, [sp, #-32]!
  4120a4:	mov	x29, sp
  4120a8:	str	x19, [sp, #16]
  4120ac:	mov	x19, x0
  4120b0:	bl	402430 <strlen@plt>
  4120b4:	mov	x1, x0
  4120b8:	mov	x0, x19
  4120bc:	add	x1, x1, #0x1
  4120c0:	ldr	x19, [sp, #16]
  4120c4:	ldp	x29, x30, [sp], #32
  4120c8:	b	412070 <__fxstatat@plt+0xf620>
  4120cc:	nop
  4120d0:	stp	x29, x30, [sp, #-32]!
  4120d4:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  4120d8:	mov	w2, #0x5                   	// #5
  4120dc:	mov	x29, sp
  4120e0:	str	x19, [sp, #16]
  4120e4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  4120e8:	ldr	w19, [x0, #1320]
  4120ec:	add	x1, x1, #0x5a0
  4120f0:	mov	x0, #0x0                   	// #0
  4120f4:	bl	402970 <dcgettext@plt>
  4120f8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4120fc:	mov	x3, x0
  412100:	add	x2, x2, #0x4b0
  412104:	mov	w0, w19
  412108:	mov	w1, #0x0                   	// #0
  41210c:	bl	402490 <error@plt>
  412110:	bl	402760 <abort@plt>
  412114:	nop
  412118:	stp	x29, x30, [sp, #-80]!
  41211c:	mov	x29, sp
  412120:	stp	x19, x20, [sp, #16]
  412124:	mov	w19, w6
  412128:	stp	x21, x22, [sp, #32]
  41212c:	mov	x22, x5
  412130:	mov	x21, x0
  412134:	stp	x23, x24, [sp, #48]
  412138:	mov	x24, x2
  41213c:	mov	x23, x3
  412140:	mov	w2, w1
  412144:	add	x3, sp, #0x48
  412148:	mov	x1, #0x0                   	// #0
  41214c:	bl	4129a0 <__fxstatat@plt+0xff50>
  412150:	cbnz	w0, 412188 <__fxstatat@plt+0xf738>
  412154:	ldr	x20, [sp, #72]
  412158:	cmp	x20, x24
  41215c:	ccmp	x20, x23, #0x2, cs  // cs = hs, nlast
  412160:	b.ls	4121dc <__fxstatat@plt+0xf78c>  // b.plast
  412164:	bl	4029e0 <__errno_location@plt>
  412168:	mov	x1, #0x3fffffff            	// #1073741823
  41216c:	cmp	x20, x1
  412170:	b.ls	4121f4 <__fxstatat@plt+0xf7a4>  // b.plast
  412174:	mov	w20, #0x4b                  	// #75
  412178:	str	w20, [x0]
  41217c:	cbnz	w19, 4121b4 <__fxstatat@plt+0xf764>
  412180:	mov	w19, #0x1                   	// #1
  412184:	b	4121b4 <__fxstatat@plt+0xf764>
  412188:	mov	w20, w0
  41218c:	bl	4029e0 <__errno_location@plt>
  412190:	cmp	w20, #0x1
  412194:	b.eq	412208 <__fxstatat@plt+0xf7b8>  // b.none
  412198:	cmp	w20, #0x3
  41219c:	b.eq	412220 <__fxstatat@plt+0xf7d0>  // b.none
  4121a0:	ldr	w20, [x0]
  4121a4:	cmp	w19, #0x0
  4121a8:	csinc	w19, w19, wzr, ne  // ne = any
  4121ac:	cmp	w20, #0x16
  4121b0:	csel	w20, w20, wzr, ne  // ne = any
  4121b4:	mov	x0, x21
  4121b8:	bl	411778 <__fxstatat@plt+0xed28>
  4121bc:	mov	w1, w20
  4121c0:	mov	x4, x0
  4121c4:	mov	x3, x22
  4121c8:	mov	w0, w19
  4121cc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x3ce0>
  4121d0:	add	x2, x2, #0x548
  4121d4:	bl	402490 <error@plt>
  4121d8:	ldr	x20, [sp, #72]
  4121dc:	mov	x0, x20
  4121e0:	ldp	x19, x20, [sp, #16]
  4121e4:	ldp	x21, x22, [sp, #32]
  4121e8:	ldp	x23, x24, [sp, #48]
  4121ec:	ldp	x29, x30, [sp], #80
  4121f0:	ret
  4121f4:	mov	w20, #0x22                  	// #34
  4121f8:	str	w20, [x0]
  4121fc:	cbnz	w19, 4121b4 <__fxstatat@plt+0xf764>
  412200:	mov	w19, #0x1                   	// #1
  412204:	b	4121b4 <__fxstatat@plt+0xf764>
  412208:	cmp	w19, #0x0
  41220c:	mov	w1, #0x4b                  	// #75
  412210:	csel	w19, w19, w20, ne  // ne = any
  412214:	mov	w20, w1
  412218:	str	w1, [x0]
  41221c:	b	4121b4 <__fxstatat@plt+0xf764>
  412220:	str	wzr, [x0]
  412224:	mov	w20, #0x0                   	// #0
  412228:	cbnz	w19, 4121b4 <__fxstatat@plt+0xf764>
  41222c:	mov	w20, w19
  412230:	mov	w19, #0x1                   	// #1
  412234:	b	4121b4 <__fxstatat@plt+0xf764>
  412238:	mov	x8, x2
  41223c:	mov	x6, x3
  412240:	mov	x7, x4
  412244:	mov	x2, x1
  412248:	mov	x4, x6
  41224c:	mov	x3, x8
  412250:	mov	w6, w5
  412254:	mov	w1, #0xa                   	// #10
  412258:	mov	x5, x7
  41225c:	b	412118 <__fxstatat@plt+0xf6c8>
  412260:	stp	x29, x30, [sp, #-32]!
  412264:	mov	x1, #0x0                   	// #0
  412268:	mov	x0, #0x0                   	// #0
  41226c:	mov	x29, sp
  412270:	str	x19, [sp, #16]
  412274:	bl	402400 <getcwd@plt>
  412278:	mov	x19, x0
  41227c:	cbz	x0, 412290 <__fxstatat@plt+0xf840>
  412280:	mov	x0, x19
  412284:	ldr	x19, [sp, #16]
  412288:	ldp	x29, x30, [sp], #32
  41228c:	ret
  412290:	bl	4029e0 <__errno_location@plt>
  412294:	ldr	w0, [x0]
  412298:	cmp	w0, #0xc
  41229c:	b.ne	412280 <__fxstatat@plt+0xf830>  // b.any
  4122a0:	bl	4120d0 <__fxstatat@plt+0xf680>
  4122a4:	nop
  4122a8:	stp	x29, x30, [sp, #-64]!
  4122ac:	mov	x0, #0x22                  	// #34
  4122b0:	mov	x29, sp
  4122b4:	stp	x19, x20, [sp, #16]
  4122b8:	mov	x19, #0x0                   	// #0
  4122bc:	str	x21, [sp, #32]
  4122c0:	str	x0, [sp, #56]
  4122c4:	bl	4029e0 <__errno_location@plt>
  4122c8:	mov	x21, x0
  4122cc:	nop
  4122d0:	mov	x0, x19
  4122d4:	add	x1, sp, #0x38
  4122d8:	bl	411fc0 <__fxstatat@plt+0xf570>
  4122dc:	mov	x19, x0
  4122e0:	ldr	x1, [sp, #56]
  4122e4:	sub	x20, x1, #0x2
  4122e8:	sub	x1, x1, #0x1
  4122ec:	strb	wzr, [x0, x20]
  4122f0:	str	wzr, [x21]
  4122f4:	bl	402940 <gethostname@plt>
  4122f8:	cbnz	w0, 412318 <__fxstatat@plt+0xf8c8>
  4122fc:	ldrb	w0, [x19, x20]
  412300:	cbnz	w0, 4122d0 <__fxstatat@plt+0xf880>
  412304:	mov	x0, x19
  412308:	ldp	x19, x20, [sp, #16]
  41230c:	ldr	x21, [sp, #32]
  412310:	ldp	x29, x30, [sp], #64
  412314:	ret
  412318:	ldr	w20, [x21]
  41231c:	cmp	w20, #0x24
  412320:	ccmp	w20, #0x0, #0x4, ne  // ne = any
  412324:	cset	w1, ne  // ne = any
  412328:	cmp	w20, #0x16
  41232c:	ccmp	w20, #0xc, #0x4, ne  // ne = any
  412330:	csel	w1, w1, wzr, ne  // ne = any
  412334:	cbz	w1, 4122d0 <__fxstatat@plt+0xf880>
  412338:	mov	x0, x19
  41233c:	bl	402840 <free@plt>
  412340:	str	w20, [x21]
  412344:	mov	x19, #0x0                   	// #0
  412348:	mov	x0, x19
  41234c:	ldp	x19, x20, [sp, #16]
  412350:	ldr	x21, [sp, #32]
  412354:	ldp	x29, x30, [sp], #64
  412358:	ret
  41235c:	nop
  412360:	stp	x29, x30, [sp, #-112]!
  412364:	cmp	w2, #0x24
  412368:	mov	x29, sp
  41236c:	stp	x19, x20, [sp, #16]
  412370:	stp	x21, x22, [sp, #32]
  412374:	stp	x23, x24, [sp, #48]
  412378:	stp	x25, x26, [sp, #64]
  41237c:	stp	x27, x28, [sp, #80]
  412380:	b.hi	4128a0 <__fxstatat@plt+0xfe50>  // b.pmore
  412384:	cmp	x1, #0x0
  412388:	mov	x19, x0
  41238c:	add	x0, sp, #0x68
  412390:	mov	x21, x3
  412394:	csel	x25, x0, x1, eq  // eq = none
  412398:	mov	w22, w2
  41239c:	mov	x23, x4
  4123a0:	bl	4029e0 <__errno_location@plt>
  4123a4:	str	wzr, [x0]
  4123a8:	mov	x20, x0
  4123ac:	bl	402820 <__ctype_b_loc@plt>
  4123b0:	ldrb	w3, [x19]
  4123b4:	mov	x5, x19
  4123b8:	ldr	x1, [x0]
  4123bc:	b	4123c4 <__fxstatat@plt+0xf974>
  4123c0:	ldrb	w3, [x5, #1]!
  4123c4:	ubfiz	x4, x3, #1, #8
  4123c8:	ldrh	w4, [x1, x4]
  4123cc:	tbnz	w4, #13, 4123c0 <__fxstatat@plt+0xf970>
  4123d0:	cmp	w3, #0x2d
  4123d4:	b.eq	412450 <__fxstatat@plt+0xfa00>  // b.none
  4123d8:	mov	w2, w22
  4123dc:	mov	x1, x25
  4123e0:	mov	x0, x19
  4123e4:	bl	402420 <strtoul@plt>
  4123e8:	ldr	x28, [x25]
  4123ec:	mov	x26, x0
  4123f0:	cmp	x28, x19
  4123f4:	b.eq	412444 <__fxstatat@plt+0xf9f4>  // b.none
  4123f8:	ldr	w0, [x20]
  4123fc:	cbz	w0, 41243c <__fxstatat@plt+0xf9ec>
  412400:	cmp	w0, #0x22
  412404:	mov	w27, #0x1                   	// #1
  412408:	b.ne	412450 <__fxstatat@plt+0xfa00>  // b.any
  41240c:	cbz	x23, 412418 <__fxstatat@plt+0xf9c8>
  412410:	ldrb	w24, [x28]
  412414:	cbnz	w24, 412520 <__fxstatat@plt+0xfad0>
  412418:	str	x26, [x21]
  41241c:	mov	w0, w27
  412420:	ldp	x19, x20, [sp, #16]
  412424:	ldp	x21, x22, [sp, #32]
  412428:	ldp	x23, x24, [sp, #48]
  41242c:	ldp	x25, x26, [sp, #64]
  412430:	ldp	x27, x28, [sp, #80]
  412434:	ldp	x29, x30, [sp], #112
  412438:	ret
  41243c:	mov	w27, #0x0                   	// #0
  412440:	b	41240c <__fxstatat@plt+0xf9bc>
  412444:	cbz	x23, 412450 <__fxstatat@plt+0xfa00>
  412448:	ldrb	w24, [x19]
  41244c:	cbnz	w24, 412474 <__fxstatat@plt+0xfa24>
  412450:	mov	w27, #0x4                   	// #4
  412454:	mov	w0, w27
  412458:	ldp	x19, x20, [sp, #16]
  41245c:	ldp	x21, x22, [sp, #32]
  412460:	ldp	x23, x24, [sp, #48]
  412464:	ldp	x25, x26, [sp, #64]
  412468:	ldp	x27, x28, [sp, #80]
  41246c:	ldp	x29, x30, [sp], #112
  412470:	ret
  412474:	mov	w1, w24
  412478:	mov	x0, x23
  41247c:	mov	w27, #0x0                   	// #0
  412480:	mov	x26, #0x1                   	// #1
  412484:	bl	402880 <strchr@plt>
  412488:	cbz	x0, 412450 <__fxstatat@plt+0xfa00>
  41248c:	sub	w2, w24, #0x45
  412490:	and	w2, w2, #0xff
  412494:	cmp	w2, #0x2f
  412498:	b.hi	412538 <__fxstatat@plt+0xfae8>  // b.pmore
  41249c:	mov	x3, #0x8945                	// #35141
  4124a0:	mov	x19, #0x1                   	// #1
  4124a4:	movk	x3, #0x30, lsl #16
  4124a8:	lsl	x2, x19, x2
  4124ac:	movk	x3, #0x8144, lsl #32
  4124b0:	mov	w22, w19
  4124b4:	tst	x2, x3
  4124b8:	mov	x20, #0x400                 	// #1024
  4124bc:	b.ne	4126a0 <__fxstatat@plt+0xfc50>  // b.any
  4124c0:	cmp	w24, #0x5a
  4124c4:	b.eq	412854 <__fxstatat@plt+0xfe04>  // b.none
  4124c8:	b.hi	4125d4 <__fxstatat@plt+0xfb84>  // b.pmore
  4124cc:	cmp	w24, #0x4d
  4124d0:	b.eq	41267c <__fxstatat@plt+0xfc2c>  // b.none
  4124d4:	b.hi	412568 <__fxstatat@plt+0xfb18>  // b.pmore
  4124d8:	cmp	w24, #0x45
  4124dc:	b.eq	4127fc <__fxstatat@plt+0xfdac>  // b.none
  4124e0:	b.ls	412544 <__fxstatat@plt+0xfaf4>  // b.plast
  4124e4:	cmp	w24, #0x47
  4124e8:	b.eq	4125f0 <__fxstatat@plt+0xfba0>  // b.none
  4124ec:	cmp	w24, #0x4b
  4124f0:	b.ne	412530 <__fxstatat@plt+0xfae0>  // b.any
  4124f4:	sxtw	x19, w22
  4124f8:	umulh	x0, x26, x20
  4124fc:	cbnz	x0, 412694 <__fxstatat@plt+0xfc44>
  412500:	mul	x26, x26, x20
  412504:	add	x0, x28, x19
  412508:	str	x0, [x25]
  41250c:	orr	w0, w27, #0x2
  412510:	ldrb	w1, [x28, x19]
  412514:	cmp	w1, #0x0
  412518:	csel	w27, w0, w27, ne  // ne = any
  41251c:	b	412418 <__fxstatat@plt+0xf9c8>
  412520:	mov	w1, w24
  412524:	mov	x0, x23
  412528:	bl	402880 <strchr@plt>
  41252c:	cbnz	x0, 41248c <__fxstatat@plt+0xfa3c>
  412530:	orr	w27, w27, #0x2
  412534:	b	412418 <__fxstatat@plt+0xf9c8>
  412538:	mov	w22, #0x1                   	// #1
  41253c:	mov	x20, #0x400                 	// #1024
  412540:	b	4124c0 <__fxstatat@plt+0xfa70>
  412544:	sxtw	x19, w22
  412548:	cmp	w24, #0x42
  41254c:	b.ne	412530 <__fxstatat@plt+0xfae0>  // b.any
  412550:	lsr	x0, x26, #54
  412554:	lsl	x26, x26, #10
  412558:	cmp	x0, #0x0
  41255c:	csinc	w27, w27, wzr, eq  // eq = none
  412560:	csinv	x26, x26, xzr, eq  // eq = none
  412564:	b	412504 <__fxstatat@plt+0xfab4>
  412568:	cmp	w24, #0x54
  41256c:	b.eq	41282c <__fxstatat@plt+0xfddc>  // b.none
  412570:	sxtw	x19, w22
  412574:	cmp	w24, #0x59
  412578:	b.ne	4125a4 <__fxstatat@plt+0xfb54>  // b.any
  41257c:	mov	w0, #0x8                   	// #8
  412580:	mov	w2, #0x0                   	// #0
  412584:	nop
  412588:	umulh	x1, x26, x20
  41258c:	cbnz	x1, 4128f0 <__fxstatat@plt+0xfea0>
  412590:	mul	x26, x26, x20
  412594:	subs	w0, w0, #0x1
  412598:	b.ne	412588 <__fxstatat@plt+0xfb38>  // b.any
  41259c:	orr	w27, w27, w2
  4125a0:	b	412504 <__fxstatat@plt+0xfab4>
  4125a4:	sxtw	x19, w22
  4125a8:	cmp	w24, #0x50
  4125ac:	b.ne	412530 <__fxstatat@plt+0xfae0>  // b.any
  4125b0:	mov	w0, #0x5                   	// #5
  4125b4:	mov	w2, #0x0                   	// #0
  4125b8:	umulh	x1, x26, x20
  4125bc:	cbnz	x1, 4128e4 <__fxstatat@plt+0xfe94>
  4125c0:	mul	x26, x26, x20
  4125c4:	subs	w0, w0, #0x1
  4125c8:	b.ne	4125b8 <__fxstatat@plt+0xfb68>  // b.any
  4125cc:	orr	w27, w27, w2
  4125d0:	b	412504 <__fxstatat@plt+0xfab4>
  4125d4:	cmp	w24, #0x6b
  4125d8:	b.eq	4124f4 <__fxstatat@plt+0xfaa4>  // b.none
  4125dc:	b.hi	412648 <__fxstatat@plt+0xfbf8>  // b.pmore
  4125e0:	cmp	w24, #0x63
  4125e4:	b.eq	412824 <__fxstatat@plt+0xfdd4>  // b.none
  4125e8:	cmp	w24, #0x67
  4125ec:	b.ne	412624 <__fxstatat@plt+0xfbd4>  // b.any
  4125f0:	sxtw	x19, w22
  4125f4:	umulh	x0, x26, x20
  4125f8:	cbnz	x0, 412890 <__fxstatat@plt+0xfe40>
  4125fc:	mul	x26, x26, x20
  412600:	umulh	x0, x26, x20
  412604:	cbnz	x0, 412890 <__fxstatat@plt+0xfe40>
  412608:	mul	x26, x26, x20
  41260c:	umulh	x0, x26, x20
  412610:	cbnz	x0, 412890 <__fxstatat@plt+0xfe40>
  412614:	mov	w0, #0x0                   	// #0
  412618:	mul	x26, x26, x20
  41261c:	orr	w27, w27, w0
  412620:	b	412504 <__fxstatat@plt+0xfab4>
  412624:	sxtw	x19, w22
  412628:	cmp	w24, #0x62
  41262c:	b.ne	412530 <__fxstatat@plt+0xfae0>  // b.any
  412630:	lsr	x0, x26, #55
  412634:	lsl	x26, x26, #9
  412638:	cmp	x0, #0x0
  41263c:	csinc	w27, w27, wzr, eq  // eq = none
  412640:	csinv	x26, x26, xzr, eq  // eq = none
  412644:	b	412504 <__fxstatat@plt+0xfab4>
  412648:	cmp	w24, #0x74
  41264c:	b.eq	41282c <__fxstatat@plt+0xfddc>  // b.none
  412650:	cmp	w24, #0x77
  412654:	sxtw	x19, w22
  412658:	b.ne	412674 <__fxstatat@plt+0xfc24>  // b.any
  41265c:	lsr	x0, x26, #63
  412660:	lsl	x26, x26, #1
  412664:	cmp	x0, #0x0
  412668:	csinc	w27, w27, wzr, eq  // eq = none
  41266c:	csinv	x26, x26, xzr, eq  // eq = none
  412670:	b	412504 <__fxstatat@plt+0xfab4>
  412674:	cmp	w24, #0x6d
  412678:	b.ne	412530 <__fxstatat@plt+0xfae0>  // b.any
  41267c:	sxtw	x19, w22
  412680:	umulh	x0, x26, x20
  412684:	cbnz	x0, 412694 <__fxstatat@plt+0xfc44>
  412688:	mul	x26, x26, x20
  41268c:	umulh	x0, x26, x20
  412690:	cbz	x0, 412500 <__fxstatat@plt+0xfab0>
  412694:	mov	w27, #0x1                   	// #1
  412698:	mov	x26, #0xffffffffffffffff    	// #-1
  41269c:	b	412504 <__fxstatat@plt+0xfab4>
  4126a0:	mov	x0, x23
  4126a4:	mov	w1, #0x30                  	// #48
  4126a8:	bl	402880 <strchr@plt>
  4126ac:	cbz	x0, 4124c0 <__fxstatat@plt+0xfa70>
  4126b0:	ldrb	w0, [x28, #1]
  4126b4:	cmp	w0, #0x44
  4126b8:	b.eq	41274c <__fxstatat@plt+0xfcfc>  // b.none
  4126bc:	cmp	w0, #0x69
  4126c0:	b.eq	41270c <__fxstatat@plt+0xfcbc>  // b.none
  4126c4:	cmp	w0, #0x42
  4126c8:	b.eq	41274c <__fxstatat@plt+0xfcfc>  // b.none
  4126cc:	cmp	w24, #0x5a
  4126d0:	b.eq	412720 <__fxstatat@plt+0xfcd0>  // b.none
  4126d4:	b.hi	412774 <__fxstatat@plt+0xfd24>  // b.pmore
  4126d8:	cmp	w24, #0x4d
  4126dc:	b.eq	41276c <__fxstatat@plt+0xfd1c>  // b.none
  4126e0:	b.hi	4127a0 <__fxstatat@plt+0xfd50>  // b.pmore
  4126e4:	cmp	w24, #0x45
  4126e8:	b.eq	41287c <__fxstatat@plt+0xfe2c>  // b.none
  4126ec:	b.ls	4127bc <__fxstatat@plt+0xfd6c>  // b.plast
  4126f0:	cmp	w24, #0x47
  4126f4:	b.eq	41285c <__fxstatat@plt+0xfe0c>  // b.none
  4126f8:	cmp	w24, #0x4b
  4126fc:	b.ne	412530 <__fxstatat@plt+0xfae0>  // b.any
  412700:	mov	x19, #0x1                   	// #1
  412704:	mov	x20, #0x400                 	// #1024
  412708:	b	4124f8 <__fxstatat@plt+0xfaa8>
  41270c:	ldrb	w1, [x28, #2]
  412710:	mov	w0, #0x3                   	// #3
  412714:	cmp	w1, #0x42
  412718:	csel	w22, w19, w0, ne  // ne = any
  41271c:	b	4124c0 <__fxstatat@plt+0xfa70>
  412720:	mov	x20, #0x400                 	// #1024
  412724:	mov	w0, #0x7                   	// #7
  412728:	mov	w2, #0x0                   	// #0
  41272c:	nop
  412730:	umulh	x1, x26, x20
  412734:	cbnz	x1, 4128cc <__fxstatat@plt+0xfe7c>
  412738:	mul	x26, x26, x20
  41273c:	subs	w0, w0, #0x1
  412740:	b.ne	412730 <__fxstatat@plt+0xfce0>  // b.any
  412744:	orr	w27, w27, w2
  412748:	b	412504 <__fxstatat@plt+0xfab4>
  41274c:	mov	w22, #0x2                   	// #2
  412750:	mov	x20, #0x3e8                 	// #1000
  412754:	b	4124c0 <__fxstatat@plt+0xfa70>
  412758:	cmp	w24, #0x6b
  41275c:	b.eq	412700 <__fxstatat@plt+0xfcb0>  // b.none
  412760:	cmp	w24, #0x6d
  412764:	mov	x19, #0x1                   	// #1
  412768:	b.ne	412530 <__fxstatat@plt+0xfae0>  // b.any
  41276c:	mov	x20, #0x400                 	// #1024
  412770:	b	412680 <__fxstatat@plt+0xfc30>
  412774:	cmp	w24, #0x67
  412778:	b.eq	412888 <__fxstatat@plt+0xfe38>  // b.none
  41277c:	b.ls	4127d0 <__fxstatat@plt+0xfd80>  // b.plast
  412780:	cmp	w24, #0x74
  412784:	b.eq	412870 <__fxstatat@plt+0xfe20>  // b.none
  412788:	b.ls	412758 <__fxstatat@plt+0xfd08>  // b.plast
  41278c:	cmp	w24, #0x77
  412790:	mov	x19, #0x1                   	// #1
  412794:	b.eq	41265c <__fxstatat@plt+0xfc0c>  // b.none
  412798:	orr	w27, w27, #0x2
  41279c:	b	412418 <__fxstatat@plt+0xf9c8>
  4127a0:	cmp	w24, #0x54
  4127a4:	b.eq	412870 <__fxstatat@plt+0xfe20>  // b.none
  4127a8:	cmp	w24, #0x59
  4127ac:	b.ne	4127e8 <__fxstatat@plt+0xfd98>  // b.any
  4127b0:	mov	x19, #0x1                   	// #1
  4127b4:	mov	x20, #0x400                 	// #1024
  4127b8:	b	41257c <__fxstatat@plt+0xfb2c>
  4127bc:	cmp	w24, #0x42
  4127c0:	mov	x19, #0x1                   	// #1
  4127c4:	b.eq	412550 <__fxstatat@plt+0xfb00>  // b.none
  4127c8:	orr	w27, w27, #0x2
  4127cc:	b	412418 <__fxstatat@plt+0xf9c8>
  4127d0:	cmp	w24, #0x62
  4127d4:	b.eq	412868 <__fxstatat@plt+0xfe18>  // b.none
  4127d8:	cmp	w24, #0x63
  4127dc:	mov	x19, #0x1                   	// #1
  4127e0:	b.eq	412504 <__fxstatat@plt+0xfab4>  // b.none
  4127e4:	b	412530 <__fxstatat@plt+0xfae0>
  4127e8:	cmp	w24, #0x50
  4127ec:	b.ne	412530 <__fxstatat@plt+0xfae0>  // b.any
  4127f0:	mov	x19, #0x1                   	// #1
  4127f4:	mov	x20, #0x400                 	// #1024
  4127f8:	b	4125b0 <__fxstatat@plt+0xfb60>
  4127fc:	sxtw	x19, w22
  412800:	mov	w0, #0x6                   	// #6
  412804:	mov	w2, #0x0                   	// #0
  412808:	umulh	x1, x26, x20
  41280c:	cbnz	x1, 4128c0 <__fxstatat@plt+0xfe70>
  412810:	mul	x26, x26, x20
  412814:	subs	w0, w0, #0x1
  412818:	b.ne	412808 <__fxstatat@plt+0xfdb8>  // b.any
  41281c:	orr	w27, w27, w2
  412820:	b	412504 <__fxstatat@plt+0xfab4>
  412824:	sxtw	x19, w22
  412828:	b	412504 <__fxstatat@plt+0xfab4>
  41282c:	sxtw	x19, w22
  412830:	mov	w0, #0x4                   	// #4
  412834:	mov	w2, #0x0                   	// #0
  412838:	umulh	x1, x26, x20
  41283c:	cbnz	x1, 4128d8 <__fxstatat@plt+0xfe88>
  412840:	mul	x26, x26, x20
  412844:	subs	w0, w0, #0x1
  412848:	b.ne	412838 <__fxstatat@plt+0xfde8>  // b.any
  41284c:	orr	w27, w27, w2
  412850:	b	412504 <__fxstatat@plt+0xfab4>
  412854:	sxtw	x19, w22
  412858:	b	412724 <__fxstatat@plt+0xfcd4>
  41285c:	mov	x19, #0x1                   	// #1
  412860:	mov	x20, #0x400                 	// #1024
  412864:	b	4125f4 <__fxstatat@plt+0xfba4>
  412868:	mov	x19, #0x1                   	// #1
  41286c:	b	412630 <__fxstatat@plt+0xfbe0>
  412870:	mov	x19, #0x1                   	// #1
  412874:	mov	x20, #0x400                 	// #1024
  412878:	b	412830 <__fxstatat@plt+0xfde0>
  41287c:	mov	x19, #0x1                   	// #1
  412880:	mov	x20, #0x400                 	// #1024
  412884:	b	412800 <__fxstatat@plt+0xfdb0>
  412888:	mov	x20, #0x400                 	// #1024
  41288c:	b	4125f4 <__fxstatat@plt+0xfba4>
  412890:	mov	w0, #0x1                   	// #1
  412894:	mov	x26, #0xffffffffffffffff    	// #-1
  412898:	orr	w27, w27, w0
  41289c:	b	412504 <__fxstatat@plt+0xfab4>
  4128a0:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  4128a4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  4128a8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  4128ac:	add	x3, x3, #0x5f0
  4128b0:	add	x1, x1, #0x5b8
  4128b4:	add	x0, x0, #0x5c8
  4128b8:	mov	w2, #0x54                  	// #84
  4128bc:	bl	4029d0 <__assert_fail@plt>
  4128c0:	mov	w2, #0x1                   	// #1
  4128c4:	mov	x26, #0xffffffffffffffff    	// #-1
  4128c8:	b	412814 <__fxstatat@plt+0xfdc4>
  4128cc:	mov	w2, #0x1                   	// #1
  4128d0:	mov	x26, #0xffffffffffffffff    	// #-1
  4128d4:	b	41273c <__fxstatat@plt+0xfcec>
  4128d8:	mov	w2, #0x1                   	// #1
  4128dc:	mov	x26, #0xffffffffffffffff    	// #-1
  4128e0:	b	412844 <__fxstatat@plt+0xfdf4>
  4128e4:	mov	w2, #0x1                   	// #1
  4128e8:	mov	x26, #0xffffffffffffffff    	// #-1
  4128ec:	b	4125c4 <__fxstatat@plt+0xfb74>
  4128f0:	mov	w2, #0x1                   	// #1
  4128f4:	mov	x26, #0xffffffffffffffff    	// #-1
  4128f8:	b	412594 <__fxstatat@plt+0xfb44>
  4128fc:	nop
  412900:	stp	x29, x30, [sp, #-64]!
  412904:	adrp	x5, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  412908:	sub	w0, w0, #0x1
  41290c:	mov	x29, sp
  412910:	stp	x21, x22, [sp, #32]
  412914:	cmp	w0, #0x3
  412918:	ldr	w21, [x5, #1320]
  41291c:	stp	x19, x20, [sp, #16]
  412920:	b.hi	412978 <__fxstatat@plt+0xff28>  // b.pmore
  412924:	mov	w6, w1
  412928:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  41292c:	add	x1, x1, #0x670
  412930:	mov	x20, x4
  412934:	sxtw	x4, w6
  412938:	ldr	x1, [x1, w0, uxtw #3]
  41293c:	tbnz	w6, #31, 41297c <__fxstatat@plt+0xff2c>
  412940:	lsl	x4, x4, #5
  412944:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  412948:	add	x19, x19, #0x600
  41294c:	ldr	x22, [x3, x4]
  412950:	mov	w2, #0x5                   	// #5
  412954:	mov	x0, #0x0                   	// #0
  412958:	bl	402970 <dcgettext@plt>
  41295c:	mov	x5, x20
  412960:	mov	x2, x0
  412964:	mov	x4, x22
  412968:	mov	x3, x19
  41296c:	mov	w0, w21
  412970:	mov	w1, #0x0                   	// #0
  412974:	bl	402490 <error@plt>
  412978:	bl	402760 <abort@plt>
  41297c:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  412980:	add	x19, x19, #0x600
  412984:	and	w2, w2, #0xff
  412988:	sub	x19, x19, x4
  41298c:	add	x22, sp, #0x38
  412990:	strb	w2, [sp, #56]
  412994:	strb	wzr, [sp, #57]
  412998:	b	412950 <__fxstatat@plt+0xff00>
  41299c:	nop
  4129a0:	stp	x29, x30, [sp, #-112]!
  4129a4:	cmp	w2, #0x24
  4129a8:	mov	x29, sp
  4129ac:	stp	x19, x20, [sp, #16]
  4129b0:	stp	x21, x22, [sp, #32]
  4129b4:	stp	x23, x24, [sp, #48]
  4129b8:	b.hi	412ed0 <__fxstatat@plt+0x10480>  // b.pmore
  4129bc:	cmp	x1, #0x0
  4129c0:	mov	x19, x0
  4129c4:	add	x0, sp, #0x68
  4129c8:	mov	x21, x3
  4129cc:	csel	x24, x0, x1, eq  // eq = none
  4129d0:	mov	w22, w2
  4129d4:	mov	x23, x4
  4129d8:	stp	x27, x28, [sp, #80]
  4129dc:	bl	4029e0 <__errno_location@plt>
  4129e0:	str	wzr, [x0]
  4129e4:	mov	x20, x0
  4129e8:	bl	402820 <__ctype_b_loc@plt>
  4129ec:	ldrb	w3, [x19]
  4129f0:	mov	x5, x19
  4129f4:	ldr	x1, [x0]
  4129f8:	b	412a00 <__fxstatat@plt+0xffb0>
  4129fc:	ldrb	w3, [x5, #1]!
  412a00:	ubfiz	x4, x3, #1, #8
  412a04:	ldrh	w4, [x1, x4]
  412a08:	tbnz	w4, #13, 4129fc <__fxstatat@plt+0xffac>
  412a0c:	cmp	w3, #0x2d
  412a10:	b.eq	412a98 <__fxstatat@plt+0x10048>  // b.none
  412a14:	mov	w2, w22
  412a18:	mov	x1, x24
  412a1c:	mov	x0, x19
  412a20:	mov	w3, #0x0                   	// #0
  412a24:	stp	x25, x26, [sp, #64]
  412a28:	bl	4026b0 <__strtoul_internal@plt>
  412a2c:	mov	x26, x0
  412a30:	ldr	x28, [x24]
  412a34:	cmp	x28, x19
  412a38:	b.eq	412a88 <__fxstatat@plt+0x10038>  // b.none
  412a3c:	ldr	w0, [x20]
  412a40:	cbz	w0, 412a80 <__fxstatat@plt+0x10030>
  412a44:	cmp	w0, #0x22
  412a48:	mov	w27, #0x1                   	// #1
  412a4c:	b.ne	412a94 <__fxstatat@plt+0x10044>  // b.any
  412a50:	cbz	x23, 412a5c <__fxstatat@plt+0x1000c>
  412a54:	ldrb	w25, [x28]
  412a58:	cbnz	w25, 412d34 <__fxstatat@plt+0x102e4>
  412a5c:	str	x26, [x21]
  412a60:	mov	w0, w27
  412a64:	ldp	x19, x20, [sp, #16]
  412a68:	ldp	x21, x22, [sp, #32]
  412a6c:	ldp	x23, x24, [sp, #48]
  412a70:	ldp	x25, x26, [sp, #64]
  412a74:	ldp	x27, x28, [sp, #80]
  412a78:	ldp	x29, x30, [sp], #112
  412a7c:	ret
  412a80:	mov	w27, #0x0                   	// #0
  412a84:	b	412a50 <__fxstatat@plt+0x10000>
  412a88:	cbz	x23, 412a94 <__fxstatat@plt+0x10044>
  412a8c:	ldrb	w25, [x19]
  412a90:	cbnz	w25, 412ab8 <__fxstatat@plt+0x10068>
  412a94:	ldp	x25, x26, [sp, #64]
  412a98:	mov	w27, #0x4                   	// #4
  412a9c:	mov	w0, w27
  412aa0:	ldp	x19, x20, [sp, #16]
  412aa4:	ldp	x21, x22, [sp, #32]
  412aa8:	ldp	x23, x24, [sp, #48]
  412aac:	ldp	x27, x28, [sp, #80]
  412ab0:	ldp	x29, x30, [sp], #112
  412ab4:	ret
  412ab8:	mov	w1, w25
  412abc:	mov	x0, x23
  412ac0:	mov	w27, #0x0                   	// #0
  412ac4:	mov	x26, #0x1                   	// #1
  412ac8:	bl	402880 <strchr@plt>
  412acc:	cbz	x0, 412a94 <__fxstatat@plt+0x10044>
  412ad0:	sub	w2, w25, #0x45
  412ad4:	and	w2, w2, #0xff
  412ad8:	cmp	w2, #0x2f
  412adc:	b.hi	412b64 <__fxstatat@plt+0x10114>  // b.pmore
  412ae0:	mov	x3, #0x8945                	// #35141
  412ae4:	mov	x19, #0x1                   	// #1
  412ae8:	movk	x3, #0x30, lsl #16
  412aec:	lsl	x2, x19, x2
  412af0:	movk	x3, #0x8144, lsl #32
  412af4:	mov	w22, w19
  412af8:	tst	x2, x3
  412afc:	mov	x20, #0x400                 	// #1024
  412b00:	b.ne	412cc8 <__fxstatat@plt+0x10278>  // b.any
  412b04:	cmp	w25, #0x5a
  412b08:	b.eq	412e94 <__fxstatat@plt+0x10444>  // b.none
  412b0c:	b.hi	412bfc <__fxstatat@plt+0x101ac>  // b.pmore
  412b10:	cmp	w25, #0x4d
  412b14:	b.eq	412ca4 <__fxstatat@plt+0x10254>  // b.none
  412b18:	b.hi	412b94 <__fxstatat@plt+0x10144>  // b.pmore
  412b1c:	cmp	w25, #0x45
  412b20:	b.eq	412e44 <__fxstatat@plt+0x103f4>  // b.none
  412b24:	b.ls	412b70 <__fxstatat@plt+0x10120>  // b.plast
  412b28:	cmp	w25, #0x47
  412b2c:	b.eq	412c18 <__fxstatat@plt+0x101c8>  // b.none
  412b30:	cmp	w25, #0x4b
  412b34:	b.ne	412d44 <__fxstatat@plt+0x102f4>  // b.any
  412b38:	sxtw	x19, w22
  412b3c:	umulh	x0, x26, x20
  412b40:	cbnz	x0, 412cbc <__fxstatat@plt+0x1026c>
  412b44:	mul	x26, x26, x20
  412b48:	add	x0, x28, x19
  412b4c:	str	x0, [x24]
  412b50:	orr	w0, w27, #0x2
  412b54:	ldrb	w1, [x28, x19]
  412b58:	cmp	w1, #0x0
  412b5c:	csel	w27, w0, w27, ne  // ne = any
  412b60:	b	412a5c <__fxstatat@plt+0x1000c>
  412b64:	mov	w22, #0x1                   	// #1
  412b68:	mov	x20, #0x400                 	// #1024
  412b6c:	b	412b04 <__fxstatat@plt+0x100b4>
  412b70:	sxtw	x19, w22
  412b74:	cmp	w25, #0x42
  412b78:	b.ne	412d44 <__fxstatat@plt+0x102f4>  // b.any
  412b7c:	lsr	x0, x26, #54
  412b80:	lsl	x26, x26, #10
  412b84:	cmp	x0, #0x0
  412b88:	csinc	w27, w27, wzr, eq  // eq = none
  412b8c:	csinv	x26, x26, xzr, eq  // eq = none
  412b90:	b	412b48 <__fxstatat@plt+0x100f8>
  412b94:	cmp	w25, #0x54
  412b98:	b.eq	412e6c <__fxstatat@plt+0x1041c>  // b.none
  412b9c:	sxtw	x19, w22
  412ba0:	cmp	w25, #0x59
  412ba4:	b.ne	412bcc <__fxstatat@plt+0x1017c>  // b.any
  412ba8:	mov	w0, #0x8                   	// #8
  412bac:	mov	w2, #0x0                   	// #0
  412bb0:	umulh	x1, x26, x20
  412bb4:	cbnz	x1, 412f14 <__fxstatat@plt+0x104c4>
  412bb8:	mul	x26, x26, x20
  412bbc:	subs	w0, w0, #0x1
  412bc0:	b.ne	412bb0 <__fxstatat@plt+0x10160>  // b.any
  412bc4:	orr	w27, w27, w2
  412bc8:	b	412b48 <__fxstatat@plt+0x100f8>
  412bcc:	sxtw	x19, w22
  412bd0:	cmp	w25, #0x50
  412bd4:	b.ne	412d44 <__fxstatat@plt+0x102f4>  // b.any
  412bd8:	mov	w0, #0x5                   	// #5
  412bdc:	mov	w2, #0x0                   	// #0
  412be0:	umulh	x1, x26, x20
  412be4:	cbnz	x1, 412f08 <__fxstatat@plt+0x104b8>
  412be8:	mul	x26, x26, x20
  412bec:	subs	w0, w0, #0x1
  412bf0:	b.ne	412be0 <__fxstatat@plt+0x10190>  // b.any
  412bf4:	orr	w27, w27, w2
  412bf8:	b	412b48 <__fxstatat@plt+0x100f8>
  412bfc:	cmp	w25, #0x6b
  412c00:	b.eq	412b38 <__fxstatat@plt+0x100e8>  // b.none
  412c04:	b.hi	412c70 <__fxstatat@plt+0x10220>  // b.pmore
  412c08:	cmp	w25, #0x63
  412c0c:	b.eq	412e3c <__fxstatat@plt+0x103ec>  // b.none
  412c10:	cmp	w25, #0x67
  412c14:	b.ne	412c4c <__fxstatat@plt+0x101fc>  // b.any
  412c18:	sxtw	x19, w22
  412c1c:	umulh	x0, x26, x20
  412c20:	cbnz	x0, 412ef8 <__fxstatat@plt+0x104a8>
  412c24:	mul	x26, x26, x20
  412c28:	umulh	x0, x26, x20
  412c2c:	cbnz	x0, 412ef8 <__fxstatat@plt+0x104a8>
  412c30:	mul	x26, x26, x20
  412c34:	umulh	x0, x26, x20
  412c38:	cbnz	x0, 412ef8 <__fxstatat@plt+0x104a8>
  412c3c:	mov	w0, #0x0                   	// #0
  412c40:	mul	x26, x26, x20
  412c44:	orr	w27, w27, w0
  412c48:	b	412b48 <__fxstatat@plt+0x100f8>
  412c4c:	sxtw	x19, w22
  412c50:	cmp	w25, #0x62
  412c54:	b.ne	412d44 <__fxstatat@plt+0x102f4>  // b.any
  412c58:	lsr	x0, x26, #55
  412c5c:	lsl	x26, x26, #9
  412c60:	cmp	x0, #0x0
  412c64:	csinc	w27, w27, wzr, eq  // eq = none
  412c68:	csinv	x26, x26, xzr, eq  // eq = none
  412c6c:	b	412b48 <__fxstatat@plt+0x100f8>
  412c70:	cmp	w25, #0x74
  412c74:	b.eq	412e6c <__fxstatat@plt+0x1041c>  // b.none
  412c78:	cmp	w25, #0x77
  412c7c:	sxtw	x19, w22
  412c80:	b.ne	412c9c <__fxstatat@plt+0x1024c>  // b.any
  412c84:	lsr	x0, x26, #63
  412c88:	lsl	x26, x26, #1
  412c8c:	cmp	x0, #0x0
  412c90:	csinc	w27, w27, wzr, eq  // eq = none
  412c94:	csinv	x26, x26, xzr, eq  // eq = none
  412c98:	b	412b48 <__fxstatat@plt+0x100f8>
  412c9c:	cmp	w25, #0x6d
  412ca0:	b.ne	412d44 <__fxstatat@plt+0x102f4>  // b.any
  412ca4:	sxtw	x19, w22
  412ca8:	umulh	x0, x26, x20
  412cac:	cbnz	x0, 412cbc <__fxstatat@plt+0x1026c>
  412cb0:	mul	x26, x26, x20
  412cb4:	umulh	x0, x26, x20
  412cb8:	cbz	x0, 412b44 <__fxstatat@plt+0x100f4>
  412cbc:	mov	w27, #0x1                   	// #1
  412cc0:	mov	x26, #0xffffffffffffffff    	// #-1
  412cc4:	b	412b48 <__fxstatat@plt+0x100f8>
  412cc8:	mov	x0, x23
  412ccc:	mov	w1, #0x30                  	// #48
  412cd0:	bl	402880 <strchr@plt>
  412cd4:	cbz	x0, 412b04 <__fxstatat@plt+0x100b4>
  412cd8:	ldrb	w0, [x28, #1]
  412cdc:	cmp	w0, #0x44
  412ce0:	b.eq	412d8c <__fxstatat@plt+0x1033c>  // b.none
  412ce4:	cmp	w0, #0x69
  412ce8:	b.eq	412d4c <__fxstatat@plt+0x102fc>  // b.none
  412cec:	cmp	w0, #0x42
  412cf0:	b.eq	412d8c <__fxstatat@plt+0x1033c>  // b.none
  412cf4:	cmp	w25, #0x5a
  412cf8:	b.eq	412d60 <__fxstatat@plt+0x10310>  // b.none
  412cfc:	b.hi	412db4 <__fxstatat@plt+0x10364>  // b.pmore
  412d00:	cmp	w25, #0x4d
  412d04:	b.eq	412dac <__fxstatat@plt+0x1035c>  // b.none
  412d08:	b.hi	412de0 <__fxstatat@plt+0x10390>  // b.pmore
  412d0c:	cmp	w25, #0x45
  412d10:	b.eq	412ebc <__fxstatat@plt+0x1046c>  // b.none
  412d14:	b.ls	412dfc <__fxstatat@plt+0x103ac>  // b.plast
  412d18:	cmp	w25, #0x47
  412d1c:	b.eq	412e9c <__fxstatat@plt+0x1044c>  // b.none
  412d20:	cmp	w25, #0x4b
  412d24:	b.ne	412d44 <__fxstatat@plt+0x102f4>  // b.any
  412d28:	mov	x19, #0x1                   	// #1
  412d2c:	mov	x20, #0x400                 	// #1024
  412d30:	b	412b3c <__fxstatat@plt+0x100ec>
  412d34:	mov	w1, w25
  412d38:	mov	x0, x23
  412d3c:	bl	402880 <strchr@plt>
  412d40:	cbnz	x0, 412ad0 <__fxstatat@plt+0x10080>
  412d44:	orr	w27, w27, #0x2
  412d48:	b	412a5c <__fxstatat@plt+0x1000c>
  412d4c:	ldrb	w1, [x28, #2]
  412d50:	mov	w0, #0x3                   	// #3
  412d54:	cmp	w1, #0x42
  412d58:	csel	w22, w19, w0, ne  // ne = any
  412d5c:	b	412b04 <__fxstatat@plt+0x100b4>
  412d60:	mov	x20, #0x400                 	// #1024
  412d64:	mov	w0, #0x7                   	// #7
  412d68:	mov	w2, #0x0                   	// #0
  412d6c:	nop
  412d70:	umulh	x1, x26, x20
  412d74:	cbnz	x1, 412f2c <__fxstatat@plt+0x104dc>
  412d78:	mul	x26, x26, x20
  412d7c:	subs	w0, w0, #0x1
  412d80:	b.ne	412d70 <__fxstatat@plt+0x10320>  // b.any
  412d84:	orr	w27, w27, w2
  412d88:	b	412b48 <__fxstatat@plt+0x100f8>
  412d8c:	mov	w22, #0x2                   	// #2
  412d90:	mov	x20, #0x3e8                 	// #1000
  412d94:	b	412b04 <__fxstatat@plt+0x100b4>
  412d98:	cmp	w25, #0x6b
  412d9c:	b.eq	412d28 <__fxstatat@plt+0x102d8>  // b.none
  412da0:	cmp	w25, #0x6d
  412da4:	mov	x19, #0x1                   	// #1
  412da8:	b.ne	412d44 <__fxstatat@plt+0x102f4>  // b.any
  412dac:	mov	x20, #0x400                 	// #1024
  412db0:	b	412ca8 <__fxstatat@plt+0x10258>
  412db4:	cmp	w25, #0x67
  412db8:	b.eq	412ec8 <__fxstatat@plt+0x10478>  // b.none
  412dbc:	b.ls	412e10 <__fxstatat@plt+0x103c0>  // b.plast
  412dc0:	cmp	w25, #0x74
  412dc4:	b.eq	412eb0 <__fxstatat@plt+0x10460>  // b.none
  412dc8:	b.ls	412d98 <__fxstatat@plt+0x10348>  // b.plast
  412dcc:	cmp	w25, #0x77
  412dd0:	mov	x19, #0x1                   	// #1
  412dd4:	b.eq	412c84 <__fxstatat@plt+0x10234>  // b.none
  412dd8:	orr	w27, w27, #0x2
  412ddc:	b	412a5c <__fxstatat@plt+0x1000c>
  412de0:	cmp	w25, #0x54
  412de4:	b.eq	412eb0 <__fxstatat@plt+0x10460>  // b.none
  412de8:	cmp	w25, #0x59
  412dec:	b.ne	412e28 <__fxstatat@plt+0x103d8>  // b.any
  412df0:	mov	x19, #0x1                   	// #1
  412df4:	mov	x20, #0x400                 	// #1024
  412df8:	b	412ba8 <__fxstatat@plt+0x10158>
  412dfc:	cmp	w25, #0x42
  412e00:	mov	x19, #0x1                   	// #1
  412e04:	b.eq	412b7c <__fxstatat@plt+0x1012c>  // b.none
  412e08:	orr	w27, w27, #0x2
  412e0c:	b	412a5c <__fxstatat@plt+0x1000c>
  412e10:	cmp	w25, #0x62
  412e14:	b.eq	412ea8 <__fxstatat@plt+0x10458>  // b.none
  412e18:	cmp	w25, #0x63
  412e1c:	mov	x19, #0x1                   	// #1
  412e20:	b.eq	412b48 <__fxstatat@plt+0x100f8>  // b.none
  412e24:	b	412d44 <__fxstatat@plt+0x102f4>
  412e28:	cmp	w25, #0x50
  412e2c:	b.ne	412d44 <__fxstatat@plt+0x102f4>  // b.any
  412e30:	mov	x19, #0x1                   	// #1
  412e34:	mov	x20, #0x400                 	// #1024
  412e38:	b	412bd8 <__fxstatat@plt+0x10188>
  412e3c:	sxtw	x19, w22
  412e40:	b	412b48 <__fxstatat@plt+0x100f8>
  412e44:	sxtw	x19, w22
  412e48:	mov	w0, #0x6                   	// #6
  412e4c:	mov	w2, #0x0                   	// #0
  412e50:	umulh	x1, x26, x20
  412e54:	cbnz	x1, 412f20 <__fxstatat@plt+0x104d0>
  412e58:	mul	x26, x26, x20
  412e5c:	subs	w0, w0, #0x1
  412e60:	b.ne	412e50 <__fxstatat@plt+0x10400>  // b.any
  412e64:	orr	w27, w27, w2
  412e68:	b	412b48 <__fxstatat@plt+0x100f8>
  412e6c:	sxtw	x19, w22
  412e70:	mov	w0, #0x4                   	// #4
  412e74:	mov	w2, #0x0                   	// #0
  412e78:	umulh	x1, x26, x20
  412e7c:	cbnz	x1, 412f38 <__fxstatat@plt+0x104e8>
  412e80:	mul	x26, x26, x20
  412e84:	subs	w0, w0, #0x1
  412e88:	b.ne	412e78 <__fxstatat@plt+0x10428>  // b.any
  412e8c:	orr	w27, w27, w2
  412e90:	b	412b48 <__fxstatat@plt+0x100f8>
  412e94:	sxtw	x19, w22
  412e98:	b	412d64 <__fxstatat@plt+0x10314>
  412e9c:	mov	x19, #0x1                   	// #1
  412ea0:	mov	x20, #0x400                 	// #1024
  412ea4:	b	412c1c <__fxstatat@plt+0x101cc>
  412ea8:	mov	x19, #0x1                   	// #1
  412eac:	b	412c58 <__fxstatat@plt+0x10208>
  412eb0:	mov	x19, #0x1                   	// #1
  412eb4:	mov	x20, #0x400                 	// #1024
  412eb8:	b	412e70 <__fxstatat@plt+0x10420>
  412ebc:	mov	x19, #0x1                   	// #1
  412ec0:	mov	x20, #0x400                 	// #1024
  412ec4:	b	412e48 <__fxstatat@plt+0x103f8>
  412ec8:	mov	x20, #0x400                 	// #1024
  412ecc:	b	412c1c <__fxstatat@plt+0x101cc>
  412ed0:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  412ed4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  412ed8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  412edc:	add	x3, x3, #0x690
  412ee0:	add	x1, x1, #0x5b8
  412ee4:	add	x0, x0, #0x5c8
  412ee8:	mov	w2, #0x54                  	// #84
  412eec:	stp	x25, x26, [sp, #64]
  412ef0:	stp	x27, x28, [sp, #80]
  412ef4:	bl	4029d0 <__assert_fail@plt>
  412ef8:	mov	w0, #0x1                   	// #1
  412efc:	mov	x26, #0xffffffffffffffff    	// #-1
  412f00:	orr	w27, w27, w0
  412f04:	b	412b48 <__fxstatat@plt+0x100f8>
  412f08:	mov	w2, #0x1                   	// #1
  412f0c:	mov	x26, #0xffffffffffffffff    	// #-1
  412f10:	b	412bec <__fxstatat@plt+0x1019c>
  412f14:	mov	w2, #0x1                   	// #1
  412f18:	mov	x26, #0xffffffffffffffff    	// #-1
  412f1c:	b	412bbc <__fxstatat@plt+0x1016c>
  412f20:	mov	w2, #0x1                   	// #1
  412f24:	mov	x26, #0xffffffffffffffff    	// #-1
  412f28:	b	412e5c <__fxstatat@plt+0x1040c>
  412f2c:	mov	w2, #0x1                   	// #1
  412f30:	mov	x26, #0xffffffffffffffff    	// #-1
  412f34:	b	412d7c <__fxstatat@plt+0x1032c>
  412f38:	mov	w2, #0x1                   	// #1
  412f3c:	mov	x26, #0xffffffffffffffff    	// #-1
  412f40:	b	412e84 <__fxstatat@plt+0x10434>
  412f44:	nop
  412f48:	stp	x29, x30, [sp, #-64]!
  412f4c:	cmp	x0, #0x0
  412f50:	add	x4, sp, #0x3c
  412f54:	mov	x29, sp
  412f58:	stp	x19, x20, [sp, #16]
  412f5c:	csel	x19, x4, x0, eq  // eq = none
  412f60:	mov	x20, x2
  412f64:	mov	x0, x19
  412f68:	str	x21, [sp, #32]
  412f6c:	mov	x21, x1
  412f70:	bl	4023b0 <mbrtowc@plt>
  412f74:	cmp	x20, #0x0
  412f78:	mov	x20, x0
  412f7c:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  412f80:	b.hi	412f98 <__fxstatat@plt+0x10548>  // b.pmore
  412f84:	mov	x0, x20
  412f88:	ldp	x19, x20, [sp, #16]
  412f8c:	ldr	x21, [sp, #32]
  412f90:	ldp	x29, x30, [sp], #64
  412f94:	ret
  412f98:	mov	w0, #0x0                   	// #0
  412f9c:	bl	40bbd8 <__fxstatat@plt+0x9188>
  412fa0:	tst	w0, #0xff
  412fa4:	b.ne	412f84 <__fxstatat@plt+0x10534>  // b.any
  412fa8:	ldrb	w0, [x21]
  412fac:	mov	x20, #0x1                   	// #1
  412fb0:	str	w0, [x19]
  412fb4:	mov	x0, x20
  412fb8:	ldp	x19, x20, [sp, #16]
  412fbc:	ldr	x21, [sp, #32]
  412fc0:	ldp	x29, x30, [sp], #64
  412fc4:	ret
  412fc8:	stp	x29, x30, [sp, #-32]!
  412fcc:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  412fd0:	mov	w2, #0x5                   	// #5
  412fd4:	mov	x29, sp
  412fd8:	str	x19, [sp, #16]
  412fdc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  412fe0:	ldr	x19, [x0, #1432]
  412fe4:	add	x1, x1, #0x5a0
  412fe8:	mov	x0, #0x0                   	// #0
  412fec:	bl	402970 <dcgettext@plt>
  412ff0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  412ff4:	mov	x3, x0
  412ff8:	add	x2, x2, #0x268
  412ffc:	mov	x0, x19
  413000:	mov	w1, #0x1                   	// #1
  413004:	bl	4027e0 <__fprintf_chk@plt>
  413008:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  41300c:	ldr	w0, [x0, #1320]
  413010:	bl	402460 <exit@plt>
  413014:	nop
  413018:	mov	x2, x0
  41301c:	mov	x0, x1
  413020:	ldrb	w4, [x2, #80]
  413024:	ldr	x3, [x2, #56]
  413028:	tbz	w4, #0, 413038 <__fxstatat@plt+0x105e8>
  41302c:	ldr	x0, [x2, #72]
  413030:	mov	x16, x3
  413034:	br	x16
  413038:	mov	x16, x3
  41303c:	br	x16
  413040:	mov	x2, x0
  413044:	mov	x0, x1
  413048:	ldrb	w4, [x2, #80]
  41304c:	ldr	x3, [x2, #64]
  413050:	tbz	w4, #0, 413060 <__fxstatat@plt+0x10610>
  413054:	ldr	x0, [x2, #72]
  413058:	mov	x16, x3
  41305c:	br	x16
  413060:	mov	x16, x3
  413064:	br	x16
  413068:	stp	x29, x30, [sp, #-48]!
  41306c:	mov	x29, sp
  413070:	stp	x19, x20, [sp, #16]
  413074:	mov	x19, x0
  413078:	str	x21, [sp, #32]
  41307c:	cbz	x2, 4130f8 <__fxstatat@plt+0x106a8>
  413080:	mov	x20, x2
  413084:	sub	x21, x2, #0x1
  413088:	cmp	x1, #0x0
  41308c:	mov	x0, #0xfe0                 	// #4064
  413090:	csel	x1, x1, x0, ne  // ne = any
  413094:	str	x1, [x19]
  413098:	str	x21, [x19, #48]
  41309c:	mov	x0, x19
  4130a0:	bl	413018 <__fxstatat@plt+0x105c8>
  4130a4:	str	x0, [x19, #8]
  4130a8:	mov	x1, x0
  4130ac:	cbz	x0, 413104 <__fxstatat@plt+0x106b4>
  4130b0:	add	x2, x0, #0x10
  4130b4:	neg	x20, x20
  4130b8:	ldr	x0, [x19]
  4130bc:	add	x2, x2, x21
  4130c0:	and	x20, x2, x20
  4130c4:	ldr	x21, [sp, #32]
  4130c8:	stp	x20, x20, [x19, #16]
  4130cc:	add	x2, x1, x0
  4130d0:	str	x2, [x1]
  4130d4:	mov	w0, #0x1                   	// #1
  4130d8:	str	x2, [x19, #32]
  4130dc:	ldrb	w2, [x19, #80]
  4130e0:	str	xzr, [x1, #8]
  4130e4:	and	w1, w2, #0xfffffff9
  4130e8:	strb	w1, [x19, #80]
  4130ec:	ldp	x19, x20, [sp, #16]
  4130f0:	ldp	x29, x30, [sp], #48
  4130f4:	ret
  4130f8:	mov	x21, #0xf                   	// #15
  4130fc:	mov	x20, #0x10                  	// #16
  413100:	b	413088 <__fxstatat@plt+0x10638>
  413104:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  413108:	ldr	x0, [x0, #1416]
  41310c:	blr	x0

0000000000413110 <_obstack_begin@@Base>:
  413110:	ldrb	w6, [x0, #80]
  413114:	stp	x3, x4, [x0, #56]
  413118:	and	w6, w6, #0xfffffffe
  41311c:	strb	w6, [x0, #80]
  413120:	b	413068 <__fxstatat@plt+0x10618>
  413124:	nop

0000000000413128 <_obstack_begin_1@@Base>:
  413128:	ldrb	w7, [x0, #80]
  41312c:	stp	x3, x4, [x0, #56]
  413130:	orr	w7, w7, #0x1
  413134:	str	x5, [x0, #72]
  413138:	strb	w7, [x0, #80]
  41313c:	b	413068 <__fxstatat@plt+0x10618>

0000000000413140 <_obstack_newchunk@@Base>:
  413140:	stp	x29, x30, [sp, #-64]!
  413144:	mov	x29, sp
  413148:	stp	x21, x22, [sp, #32]
  41314c:	ldp	x2, x21, [x0, #16]
  413150:	stp	x19, x20, [sp, #16]
  413154:	ldr	x4, [x0, #48]
  413158:	ldr	x3, [x0]
  41315c:	sub	x21, x21, x2
  413160:	adds	x1, x21, x1
  413164:	str	x23, [sp, #48]
  413168:	cset	x2, cs  // cs = hs, nlast
  41316c:	lsr	x20, x21, #3
  413170:	adds	x4, x4, x1
  413174:	add	x20, x20, #0x64
  413178:	cset	x1, cs  // cs = hs, nlast
  41317c:	cmp	x3, x4
  413180:	csel	x3, x3, x4, cs  // cs = hs, nlast
  413184:	add	x4, x20, x4
  413188:	cmp	x3, x4
  41318c:	csel	x20, x3, x4, cs  // cs = hs, nlast
  413190:	cmp	x2, #0x0
  413194:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  413198:	ldr	x23, [x0, #8]
  41319c:	b.ne	413248 <_obstack_newchunk@@Base+0x108>  // b.any
  4131a0:	mov	x19, x0
  4131a4:	mov	x1, x20
  4131a8:	bl	413018 <__fxstatat@plt+0x105c8>
  4131ac:	mov	x22, x0
  4131b0:	cbz	x0, 413248 <_obstack_newchunk@@Base+0x108>
  4131b4:	str	x0, [x19, #8]
  4131b8:	add	x3, x0, x20
  4131bc:	ldr	x1, [x19, #16]
  4131c0:	mov	x2, x21
  4131c4:	ldr	x20, [x19, #48]
  4131c8:	str	x23, [x0, #8]
  4131cc:	str	x3, [x19, #32]
  4131d0:	str	x3, [x0], #16
  4131d4:	add	x0, x0, x20
  4131d8:	bic	x20, x0, x20
  4131dc:	mov	x0, x20
  4131e0:	bl	4023c0 <memcpy@plt>
  4131e4:	ldrb	w0, [x19, #80]
  4131e8:	tbnz	w0, #1, 413208 <_obstack_newchunk@@Base+0xc8>
  4131ec:	ldr	x1, [x19, #48]
  4131f0:	add	x0, x23, #0x10
  4131f4:	ldr	x2, [x19, #16]
  4131f8:	add	x0, x0, x1
  4131fc:	bic	x0, x0, x1
  413200:	cmp	x2, x0
  413204:	b.eq	413230 <_obstack_newchunk@@Base+0xf0>  // b.none
  413208:	ldrb	w0, [x19, #80]
  41320c:	add	x21, x20, x21
  413210:	ldr	x23, [sp, #48]
  413214:	and	w0, w0, #0xfffffffd
  413218:	stp	x20, x21, [x19, #16]
  41321c:	strb	w0, [x19, #80]
  413220:	ldp	x19, x20, [sp, #16]
  413224:	ldp	x21, x22, [sp, #32]
  413228:	ldp	x29, x30, [sp], #64
  41322c:	ret
  413230:	ldr	x0, [x23, #8]
  413234:	str	x0, [x22, #8]
  413238:	mov	x1, x23
  41323c:	mov	x0, x19
  413240:	bl	413040 <__fxstatat@plt+0x105f0>
  413244:	b	413208 <_obstack_newchunk@@Base+0xc8>
  413248:	adrp	x0, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  41324c:	ldr	x0, [x0, #1416]
  413250:	blr	x0
  413254:	nop

0000000000413258 <_obstack_allocated_p@@Base>:
  413258:	ldr	x0, [x0, #8]
  41325c:	cbz	x0, 413280 <_obstack_allocated_p@@Base+0x28>
  413260:	cmp	x1, x0
  413264:	b.ls	413274 <_obstack_allocated_p@@Base+0x1c>  // b.plast
  413268:	ldr	x2, [x0]
  41326c:	cmp	x2, x1
  413270:	b.cs	413284 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  413274:	ldr	x0, [x0, #8]
  413278:	cbnz	x0, 413260 <_obstack_allocated_p@@Base+0x8>
  41327c:	mov	w0, #0x0                   	// #0
  413280:	ret
  413284:	mov	w0, #0x1                   	// #1
  413288:	ret
  41328c:	nop

0000000000413290 <_obstack_free@@Base>:
  413290:	stp	x29, x30, [sp, #-48]!
  413294:	mov	x29, sp
  413298:	str	x21, [sp, #32]
  41329c:	mov	x21, x1
  4132a0:	ldr	x1, [x0, #8]
  4132a4:	cbz	x1, 4132ec <_obstack_free@@Base+0x5c>
  4132a8:	stp	x19, x20, [sp, #16]
  4132ac:	mov	x20, x0
  4132b0:	b	4132b8 <_obstack_free@@Base+0x28>
  4132b4:	mov	x1, x19
  4132b8:	cmp	x1, x21
  4132bc:	b.cs	4132cc <_obstack_free@@Base+0x3c>  // b.hs, b.nlast
  4132c0:	ldr	x0, [x1]
  4132c4:	cmp	x0, x21
  4132c8:	b.cs	4132fc <_obstack_free@@Base+0x6c>  // b.hs, b.nlast
  4132cc:	mov	x0, x20
  4132d0:	ldr	x19, [x1, #8]
  4132d4:	bl	413040 <__fxstatat@plt+0x105f0>
  4132d8:	ldrb	w2, [x20, #80]
  4132dc:	orr	w2, w2, #0x2
  4132e0:	strb	w2, [x20, #80]
  4132e4:	cbnz	x19, 4132b4 <_obstack_free@@Base+0x24>
  4132e8:	ldp	x19, x20, [sp, #16]
  4132ec:	cbnz	x21, 413314 <_obstack_free@@Base+0x84>
  4132f0:	ldr	x21, [sp, #32]
  4132f4:	ldp	x29, x30, [sp], #48
  4132f8:	ret
  4132fc:	stp	x1, x21, [x20, #8]
  413300:	stp	x21, x0, [x20, #24]
  413304:	ldp	x19, x20, [sp, #16]
  413308:	ldr	x21, [sp, #32]
  41330c:	ldp	x29, x30, [sp], #48
  413310:	ret
  413314:	stp	x19, x20, [sp, #16]
  413318:	bl	402760 <abort@plt>
  41331c:	nop

0000000000413320 <_obstack_memory_used@@Base>:
  413320:	ldr	x1, [x0, #8]
  413324:	mov	x0, #0x0                   	// #0
  413328:	cbz	x1, 413344 <_obstack_memory_used@@Base+0x24>
  41332c:	nop
  413330:	ldr	x2, [x1]
  413334:	sub	x2, x2, x1
  413338:	ldr	x1, [x1, #8]
  41333c:	add	x0, x0, x2
  413340:	cbnz	x1, 413330 <_obstack_memory_used@@Base+0x10>
  413344:	ret
  413348:	mov	x1, x0
  41334c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x3ce0>
  413350:	cbz	x1, 413360 <_obstack_memory_used@@Base+0x40>
  413354:	add	x0, x0, #0x760
  413358:	mov	w2, #0x1                   	// #1
  41335c:	b	4024c0 <setenv@plt>
  413360:	add	x0, x0, #0x760
  413364:	b	4028f0 <unsetenv@plt>
  413368:	cbz	x0, 41339c <_obstack_memory_used@@Base+0x7c>
  41336c:	stp	x29, x30, [sp, #-32]!
  413370:	mov	x29, sp
  413374:	str	x19, [sp, #16]
  413378:	mov	x19, x0
  41337c:	nop
  413380:	mov	x0, x19
  413384:	ldr	x19, [x19]
  413388:	bl	402840 <free@plt>
  41338c:	cbnz	x19, 413380 <_obstack_memory_used@@Base+0x60>
  413390:	ldr	x19, [sp, #16]
  413394:	ldp	x29, x30, [sp], #32
  413398:	ret
  41339c:	ret
  4133a0:	stp	x29, x30, [sp, #-48]!
  4133a4:	mov	x29, sp
  4133a8:	stp	x19, x20, [sp, #16]
  4133ac:	mov	x19, x0
  4133b0:	stp	x21, x22, [sp, #32]
  4133b4:	bl	4029e0 <__errno_location@plt>
  4133b8:	mov	x20, x0
  4133bc:	ldrb	w0, [x19, #8]
  4133c0:	add	x1, x19, #0x9
  4133c4:	cmp	w0, #0x0
  4133c8:	ldr	w21, [x20]
  4133cc:	csel	x0, x1, xzr, ne  // ne = any
  4133d0:	bl	413348 <_obstack_memory_used@@Base+0x28>
  4133d4:	cbz	w0, 413400 <_obstack_memory_used@@Base+0xe0>
  4133d8:	ldr	w21, [x20]
  4133dc:	mov	x0, x19
  4133e0:	bl	413368 <_obstack_memory_used@@Base+0x48>
  4133e4:	str	w21, [x20]
  4133e8:	mov	w22, #0x0                   	// #0
  4133ec:	mov	w0, w22
  4133f0:	ldp	x19, x20, [sp, #16]
  4133f4:	ldp	x21, x22, [sp, #32]
  4133f8:	ldp	x29, x30, [sp], #48
  4133fc:	ret
  413400:	bl	402610 <tzset@plt>
  413404:	mov	w22, #0x1                   	// #1
  413408:	mov	x0, x19
  41340c:	bl	413368 <_obstack_memory_used@@Base+0x48>
  413410:	str	w21, [x20]
  413414:	mov	w0, w22
  413418:	ldp	x19, x20, [sp, #16]
  41341c:	ldp	x21, x22, [sp, #32]
  413420:	ldp	x29, x30, [sp], #48
  413424:	ret
  413428:	stp	x29, x30, [sp, #-48]!
  41342c:	mov	x29, sp
  413430:	stp	x19, x20, [sp, #16]
  413434:	cbz	x0, 4134a0 <_obstack_memory_used@@Base+0x180>
  413438:	str	x21, [sp, #32]
  41343c:	mov	x21, x0
  413440:	bl	402430 <strlen@plt>
  413444:	add	x20, x0, #0x1
  413448:	mov	x0, #0x76                  	// #118
  41344c:	cmp	x20, x0
  413450:	csel	x0, x20, x0, cs  // cs = hs, nlast
  413454:	add	x0, x0, #0x11
  413458:	and	x0, x0, #0xfffffffffffffff8
  41345c:	bl	4025f0 <malloc@plt>
  413460:	mov	x19, x0
  413464:	cbz	x0, 41348c <_obstack_memory_used@@Base+0x16c>
  413468:	add	x3, x0, #0x9
  41346c:	mov	w0, #0x1                   	// #1
  413470:	str	xzr, [x19]
  413474:	mov	x1, x21
  413478:	strh	w0, [x19, #8]
  41347c:	mov	x2, x20
  413480:	mov	x0, x3
  413484:	bl	4023c0 <memcpy@plt>
  413488:	strb	wzr, [x0, x20]
  41348c:	ldr	x21, [sp, #32]
  413490:	mov	x0, x19
  413494:	ldp	x19, x20, [sp, #16]
  413498:	ldp	x29, x30, [sp], #48
  41349c:	ret
  4134a0:	mov	x0, #0x80                  	// #128
  4134a4:	bl	4025f0 <malloc@plt>
  4134a8:	mov	x19, x0
  4134ac:	cbz	x0, 413490 <_obstack_memory_used@@Base+0x170>
  4134b0:	str	xzr, [x19]
  4134b4:	mov	x0, x19
  4134b8:	strh	wzr, [x19, #8]
  4134bc:	ldp	x19, x20, [sp, #16]
  4134c0:	ldp	x29, x30, [sp], #48
  4134c4:	ret
  4134c8:	stp	x29, x30, [sp, #-64]!
  4134cc:	mov	x29, sp
  4134d0:	stp	x23, x24, [sp, #48]
  4134d4:	ldr	x23, [x1, #48]
  4134d8:	cbz	x23, 4135c4 <_obstack_memory_used@@Base+0x2a4>
  4134dc:	stp	x19, x20, [sp, #16]
  4134e0:	cmp	x1, x23
  4134e4:	mov	x20, x0
  4134e8:	stp	x21, x22, [sp, #32]
  4134ec:	mov	x22, x1
  4134f0:	b.hi	413504 <_obstack_memory_used@@Base+0x1e4>  // b.pmore
  4134f4:	add	x1, x1, #0x38
  4134f8:	mov	w0, #0x1                   	// #1
  4134fc:	cmp	x23, x1
  413500:	b.cc	4135b0 <_obstack_memory_used@@Base+0x290>  // b.lo, b.ul, b.last
  413504:	ldrb	w0, [x23]
  413508:	add	x19, x20, #0x9
  41350c:	cbz	w0, 4135a4 <_obstack_memory_used@@Base+0x284>
  413510:	mov	x1, x23
  413514:	mov	x0, x19
  413518:	bl	402800 <strcmp@plt>
  41351c:	add	x21, x20, #0x9
  413520:	mov	w2, w0
  413524:	mov	x0, x19
  413528:	cbz	w2, 413588 <_obstack_memory_used@@Base+0x268>
  41352c:	ldrb	w1, [x19]
  413530:	cmp	x21, x19
  413534:	cbnz	w1, 413544 <_obstack_memory_used@@Base+0x224>
  413538:	b.ne	4135d4 <_obstack_memory_used@@Base+0x2b4>  // b.any
  41353c:	ldrb	w1, [x20, #8]
  413540:	cbz	w1, 4135d4 <_obstack_memory_used@@Base+0x2b4>
  413544:	bl	402430 <strlen@plt>
  413548:	add	x0, x0, #0x1
  41354c:	add	x19, x19, x0
  413550:	ldrb	w0, [x19]
  413554:	cbnz	w0, 413510 <_obstack_memory_used@@Base+0x1f0>
  413558:	ldr	x0, [x20]
  41355c:	cbz	x0, 413510 <_obstack_memory_used@@Base+0x1f0>
  413560:	add	x19, x0, #0x9
  413564:	mov	x20, x0
  413568:	mov	x1, x23
  41356c:	mov	x0, x19
  413570:	bl	402800 <strcmp@plt>
  413574:	add	x21, x20, #0x9
  413578:	mov	w2, w0
  41357c:	mov	x0, x19
  413580:	cbnz	w2, 41352c <_obstack_memory_used@@Base+0x20c>
  413584:	nop
  413588:	str	x19, [x22, #48]
  41358c:	mov	w0, #0x1                   	// #1
  413590:	ldp	x19, x20, [sp, #16]
  413594:	ldp	x21, x22, [sp, #32]
  413598:	ldp	x23, x24, [sp, #48]
  41359c:	ldp	x29, x30, [sp], #64
  4135a0:	ret
  4135a4:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x2ce0>
  4135a8:	add	x19, x19, #0xf0
  4135ac:	b	413588 <_obstack_memory_used@@Base+0x268>
  4135b0:	ldp	x19, x20, [sp, #16]
  4135b4:	ldp	x21, x22, [sp, #32]
  4135b8:	ldp	x23, x24, [sp, #48]
  4135bc:	ldp	x29, x30, [sp], #64
  4135c0:	ret
  4135c4:	mov	w0, #0x1                   	// #1
  4135c8:	ldp	x23, x24, [sp, #48]
  4135cc:	ldp	x29, x30, [sp], #64
  4135d0:	ret
  4135d4:	mov	x0, x23
  4135d8:	sub	x21, x19, x21
  4135dc:	bl	402430 <strlen@plt>
  4135e0:	add	x24, x0, #0x1
  4135e4:	mvn	x0, x21
  4135e8:	cmp	x0, x24
  4135ec:	b.cc	413614 <_obstack_memory_used@@Base+0x2f4>  // b.lo, b.ul, b.last
  4135f0:	add	x21, x24, x21
  4135f4:	cmp	x21, #0x76
  4135f8:	b.hi	413634 <_obstack_memory_used@@Base+0x314>  // b.pmore
  4135fc:	mov	x1, x23
  413600:	mov	x2, x24
  413604:	mov	x0, x19
  413608:	bl	4023c0 <memcpy@plt>
  41360c:	strb	wzr, [x19, x24]
  413610:	b	413588 <_obstack_memory_used@@Base+0x268>
  413614:	bl	4029e0 <__errno_location@plt>
  413618:	mov	x1, x0
  41361c:	mov	w2, #0xc                   	// #12
  413620:	mov	w0, #0x0                   	// #0
  413624:	ldp	x19, x20, [sp, #16]
  413628:	ldp	x21, x22, [sp, #32]
  41362c:	str	w2, [x1]
  413630:	b	413598 <_obstack_memory_used@@Base+0x278>
  413634:	mov	x0, x23
  413638:	bl	413428 <_obstack_memory_used@@Base+0x108>
  41363c:	str	x0, [x20]
  413640:	cbz	x0, 413650 <_obstack_memory_used@@Base+0x330>
  413644:	add	x19, x0, #0x9
  413648:	strb	wzr, [x0, #8]
  41364c:	b	413588 <_obstack_memory_used@@Base+0x268>
  413650:	mov	w0, #0x0                   	// #0
  413654:	ldp	x19, x20, [sp, #16]
  413658:	ldp	x21, x22, [sp, #32]
  41365c:	b	413598 <_obstack_memory_used@@Base+0x278>
  413660:	stp	x29, x30, [sp, #-48]!
  413664:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x3ce0>
  413668:	mov	x29, sp
  41366c:	stp	x19, x20, [sp, #16]
  413670:	mov	x19, x0
  413674:	add	x0, x1, #0x760
  413678:	str	x21, [sp, #32]
  41367c:	bl	4029f0 <getenv@plt>
  413680:	mov	x20, x0
  413684:	cbz	x0, 413718 <_obstack_memory_used@@Base+0x3f8>
  413688:	ldrb	w0, [x19, #8]
  41368c:	cbnz	w0, 4136f0 <_obstack_memory_used@@Base+0x3d0>
  413690:	mov	x0, x20
  413694:	bl	413428 <_obstack_memory_used@@Base+0x108>
  413698:	mov	x21, x0
  41369c:	cbz	x0, 4136dc <_obstack_memory_used@@Base+0x3bc>
  4136a0:	ldrb	w0, [x19, #8]
  4136a4:	add	x19, x19, #0x9
  4136a8:	cmp	w0, #0x0
  4136ac:	csel	x0, x19, xzr, ne  // ne = any
  4136b0:	bl	413348 <_obstack_memory_used@@Base+0x28>
  4136b4:	cbz	w0, 413738 <_obstack_memory_used@@Base+0x418>
  4136b8:	bl	4029e0 <__errno_location@plt>
  4136bc:	ldr	w20, [x0]
  4136c0:	mov	x19, x0
  4136c4:	cmp	x21, #0x1
  4136c8:	b.eq	4136d4 <_obstack_memory_used@@Base+0x3b4>  // b.none
  4136cc:	mov	x0, x21
  4136d0:	bl	413368 <_obstack_memory_used@@Base+0x48>
  4136d4:	mov	x21, #0x0                   	// #0
  4136d8:	str	w20, [x19]
  4136dc:	mov	x0, x21
  4136e0:	ldp	x19, x20, [sp, #16]
  4136e4:	ldr	x21, [sp, #32]
  4136e8:	ldp	x29, x30, [sp], #48
  4136ec:	ret
  4136f0:	mov	x1, x20
  4136f4:	add	x0, x19, #0x9
  4136f8:	mov	x21, #0x1                   	// #1
  4136fc:	bl	402800 <strcmp@plt>
  413700:	cbnz	w0, 413690 <_obstack_memory_used@@Base+0x370>
  413704:	mov	x0, x21
  413708:	ldp	x19, x20, [sp, #16]
  41370c:	ldr	x21, [sp, #32]
  413710:	ldp	x29, x30, [sp], #48
  413714:	ret
  413718:	ldrb	w0, [x19, #8]
  41371c:	mov	x21, #0x1                   	// #1
  413720:	cbnz	w0, 413690 <_obstack_memory_used@@Base+0x370>
  413724:	mov	x0, x21
  413728:	ldp	x19, x20, [sp, #16]
  41372c:	ldr	x21, [sp, #32]
  413730:	ldp	x29, x30, [sp], #48
  413734:	ret
  413738:	bl	402610 <tzset@plt>
  41373c:	mov	x0, x21
  413740:	ldp	x19, x20, [sp, #16]
  413744:	ldr	x21, [sp, #32]
  413748:	ldp	x29, x30, [sp], #48
  41374c:	ret
  413750:	cmp	x0, #0x1
  413754:	b.eq	41375c <_obstack_memory_used@@Base+0x43c>  // b.none
  413758:	b	413368 <_obstack_memory_used@@Base+0x48>
  41375c:	ret
  413760:	stp	x29, x30, [sp, #-48]!
  413764:	mov	x29, sp
  413768:	stp	x19, x20, [sp, #16]
  41376c:	mov	x19, x2
  413770:	stp	x21, x22, [sp, #32]
  413774:	mov	x22, x1
  413778:	cbz	x0, 413808 <_obstack_memory_used@@Base+0x4e8>
  41377c:	mov	x20, x0
  413780:	bl	413660 <_obstack_memory_used@@Base+0x340>
  413784:	mov	x21, x0
  413788:	cbz	x0, 4137dc <_obstack_memory_used@@Base+0x4bc>
  41378c:	mov	x0, x22
  413790:	mov	x1, x19
  413794:	bl	4024b0 <localtime_r@plt>
  413798:	cbz	x0, 4137cc <_obstack_memory_used@@Base+0x4ac>
  41379c:	mov	x0, x20
  4137a0:	mov	x1, x19
  4137a4:	bl	4134c8 <_obstack_memory_used@@Base+0x1a8>
  4137a8:	tst	w0, #0xff
  4137ac:	b.eq	4137cc <_obstack_memory_used@@Base+0x4ac>  // b.none
  4137b0:	cmp	x21, #0x1
  4137b4:	b.ne	4137f0 <_obstack_memory_used@@Base+0x4d0>  // b.any
  4137b8:	mov	x0, x19
  4137bc:	ldp	x19, x20, [sp, #16]
  4137c0:	ldp	x21, x22, [sp, #32]
  4137c4:	ldp	x29, x30, [sp], #48
  4137c8:	ret
  4137cc:	cmp	x21, #0x1
  4137d0:	b.eq	4137dc <_obstack_memory_used@@Base+0x4bc>  // b.none
  4137d4:	mov	x0, x21
  4137d8:	bl	4133a0 <_obstack_memory_used@@Base+0x80>
  4137dc:	mov	x0, #0x0                   	// #0
  4137e0:	ldp	x19, x20, [sp, #16]
  4137e4:	ldp	x21, x22, [sp, #32]
  4137e8:	ldp	x29, x30, [sp], #48
  4137ec:	ret
  4137f0:	mov	x0, x21
  4137f4:	bl	4133a0 <_obstack_memory_used@@Base+0x80>
  4137f8:	tst	w0, #0xff
  4137fc:	b.eq	4137dc <_obstack_memory_used@@Base+0x4bc>  // b.none
  413800:	mov	x0, x19
  413804:	b	4137bc <_obstack_memory_used@@Base+0x49c>
  413808:	mov	x0, x22
  41380c:	mov	x1, x2
  413810:	ldp	x19, x20, [sp, #16]
  413814:	ldp	x21, x22, [sp, #32]
  413818:	ldp	x29, x30, [sp], #48
  41381c:	b	4026a0 <gmtime_r@plt>
  413820:	stp	x29, x30, [sp, #-112]!
  413824:	mov	x29, sp
  413828:	stp	x19, x20, [sp, #16]
  41382c:	mov	x19, x1
  413830:	cbz	x0, 413930 <_obstack_memory_used@@Base+0x610>
  413834:	mov	x20, x0
  413838:	str	x21, [sp, #32]
  41383c:	bl	413660 <_obstack_memory_used@@Base+0x340>
  413840:	mov	x21, x0
  413844:	cbz	x0, 413944 <_obstack_memory_used@@Base+0x624>
  413848:	mov	x0, x19
  41384c:	bl	402750 <mktime@plt>
  413850:	str	x0, [sp, #48]
  413854:	cmn	x0, #0x1
  413858:	b.eq	4138a4 <_obstack_memory_used@@Base+0x584>  // b.none
  41385c:	mov	x1, x19
  413860:	mov	x0, x20
  413864:	bl	4134c8 <_obstack_memory_used@@Base+0x1a8>
  413868:	tst	w0, #0xff
  41386c:	b.ne	413878 <_obstack_memory_used@@Base+0x558>  // b.any
  413870:	mov	x0, #0xffffffffffffffff    	// #-1
  413874:	str	x0, [sp, #48]
  413878:	cmp	x21, #0x1
  41387c:	b.eq	413890 <_obstack_memory_used@@Base+0x570>  // b.none
  413880:	mov	x0, x21
  413884:	bl	4133a0 <_obstack_memory_used@@Base+0x80>
  413888:	tst	w0, #0xff
  41388c:	b.eq	413944 <_obstack_memory_used@@Base+0x624>  // b.none
  413890:	ldr	x21, [sp, #32]
  413894:	ldr	x0, [sp, #48]
  413898:	ldp	x19, x20, [sp, #16]
  41389c:	ldp	x29, x30, [sp], #112
  4138a0:	ret
  4138a4:	add	x1, sp, #0x38
  4138a8:	add	x0, sp, #0x30
  4138ac:	bl	4024b0 <localtime_r@plt>
  4138b0:	cbz	x0, 413878 <_obstack_memory_used@@Base+0x558>
  4138b4:	ldr	w1, [x19, #32]
  4138b8:	ldr	w0, [sp, #88]
  4138bc:	cmp	w1, #0x0
  4138c0:	cset	w3, eq  // eq = none
  4138c4:	cmp	w0, #0x0
  4138c8:	cset	w2, eq  // eq = none
  4138cc:	cmp	w3, w2
  4138d0:	b.eq	4138e0 <_obstack_memory_used@@Base+0x5c0>  // b.none
  4138d4:	cmp	w1, #0x0
  4138d8:	ccmp	w0, #0x0, #0x1, ge  // ge = tcont
  4138dc:	b.ge	413878 <_obstack_memory_used@@Base+0x558>  // b.tcont
  4138e0:	ldp	w3, w6, [sp, #64]
  4138e4:	ldp	w2, w4, [x19, #8]
  4138e8:	ldp	w5, w1, [sp, #72]
  4138ec:	eor	w2, w2, w3
  4138f0:	ldr	w0, [x19, #16]
  4138f4:	eor	w4, w4, w6
  4138f8:	ldr	w3, [x19, #20]
  4138fc:	orr	w2, w2, w4
  413900:	eor	w0, w0, w5
  413904:	eor	w3, w3, w1
  413908:	ldp	w6, w5, [sp, #56]
  41390c:	orr	w0, w0, w3
  413910:	ldp	w1, w3, [x19]
  413914:	orr	w0, w0, w2
  413918:	eor	w1, w1, w6
  41391c:	eor	w2, w3, w5
  413920:	orr	w1, w1, w2
  413924:	orr	w0, w0, w1
  413928:	cbz	w0, 41385c <_obstack_memory_used@@Base+0x53c>
  41392c:	b	413878 <_obstack_memory_used@@Base+0x558>
  413930:	mov	x0, x1
  413934:	bl	402a20 <timegm@plt>
  413938:	ldp	x19, x20, [sp, #16]
  41393c:	ldp	x29, x30, [sp], #112
  413940:	ret
  413944:	mov	x0, #0xffffffffffffffff    	// #-1
  413948:	ldr	x21, [sp, #32]
  41394c:	b	413898 <_obstack_memory_used@@Base+0x578>
  413950:	mov	w1, w0
  413954:	cmp	w0, #0x26
  413958:	b.eq	413984 <_obstack_memory_used@@Base+0x664>  // b.none
  41395c:	b.gt	413978 <_obstack_memory_used@@Base+0x658>
  413960:	cmp	w0, #0x10
  413964:	mov	w0, #0x0                   	// #0
  413968:	b.eq	413974 <_obstack_memory_used@@Base+0x654>  // b.none
  41396c:	cmp	w1, #0x16
  413970:	cset	w0, ne  // ne = any
  413974:	ret
  413978:	cmp	w0, #0x5f
  41397c:	cset	w0, ne  // ne = any
  413980:	ret
  413984:	mov	w0, #0x0                   	// #0
  413988:	ret
  41398c:	nop
  413990:	stp	x29, x30, [sp, #-32]!
  413994:	mov	x29, sp
  413998:	stp	x19, x20, [sp, #16]
  41399c:	mov	x19, x0
  4139a0:	bl	402550 <__fpending@plt>
  4139a4:	mov	x20, x0
  4139a8:	mov	x0, x19
  4139ac:	ldr	w19, [x19]
  4139b0:	and	w19, w19, #0x20
  4139b4:	bl	413a98 <_obstack_memory_used@@Base+0x778>
  4139b8:	cbnz	w19, 4139e0 <_obstack_memory_used@@Base+0x6c0>
  4139bc:	cbz	w0, 4139d4 <_obstack_memory_used@@Base+0x6b4>
  4139c0:	cbnz	x20, 4139f8 <_obstack_memory_used@@Base+0x6d8>
  4139c4:	bl	4029e0 <__errno_location@plt>
  4139c8:	ldr	w0, [x0]
  4139cc:	cmp	w0, #0x9
  4139d0:	csetm	w0, ne  // ne = any
  4139d4:	ldp	x19, x20, [sp, #16]
  4139d8:	ldp	x29, x30, [sp], #32
  4139dc:	ret
  4139e0:	cbnz	w0, 4139f8 <_obstack_memory_used@@Base+0x6d8>
  4139e4:	bl	4029e0 <__errno_location@plt>
  4139e8:	mov	x1, x0
  4139ec:	mov	w0, #0xffffffff            	// #-1
  4139f0:	str	wzr, [x1]
  4139f4:	b	4139d4 <_obstack_memory_used@@Base+0x6b4>
  4139f8:	mov	w0, #0xffffffff            	// #-1
  4139fc:	b	4139d4 <_obstack_memory_used@@Base+0x6b4>
  413a00:	stp	x29, x30, [sp, #-16]!
  413a04:	mov	x29, sp
  413a08:	bl	40b220 <__fxstatat@plt+0x87d0>
  413a0c:	cbz	x0, 413a18 <_obstack_memory_used@@Base+0x6f8>
  413a10:	ldp	x29, x30, [sp], #16
  413a14:	ret
  413a18:	bl	4120d0 <__fxstatat@plt+0xf680>
  413a1c:	nop
  413a20:	ldrb	w3, [x0]
  413a24:	cbz	w3, 413a4c <_obstack_memory_used@@Base+0x72c>
  413a28:	mov	x2, #0x0                   	// #0
  413a2c:	nop
  413a30:	ror	x2, x2, #55
  413a34:	add	x2, x2, w3, uxtb
  413a38:	ldrb	w3, [x0, #1]!
  413a3c:	cbnz	w3, 413a30 <_obstack_memory_used@@Base+0x710>
  413a40:	udiv	x0, x2, x1
  413a44:	msub	x0, x0, x1, x2
  413a48:	ret
  413a4c:	mov	x0, #0x0                   	// #0
  413a50:	ret
  413a54:	nop
  413a58:	stp	x29, x30, [sp, #-16]!
  413a5c:	mov	w0, #0xe                   	// #14
  413a60:	mov	x29, sp
  413a64:	bl	4025e0 <nl_langinfo@plt>
  413a68:	cbz	x0, 413a88 <_obstack_memory_used@@Base+0x768>
  413a6c:	ldrb	w2, [x0]
  413a70:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  413a74:	add	x1, x1, #0x6a0
  413a78:	cmp	w2, #0x0
  413a7c:	csel	x0, x1, x0, eq  // eq = none
  413a80:	ldp	x29, x30, [sp], #16
  413a84:	ret
  413a88:	ldp	x29, x30, [sp], #16
  413a8c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x6ce0>
  413a90:	add	x0, x0, #0x6a0
  413a94:	ret
  413a98:	stp	x29, x30, [sp, #-32]!
  413a9c:	mov	x29, sp
  413aa0:	stp	x19, x20, [sp, #16]
  413aa4:	mov	x19, x0
  413aa8:	bl	402590 <fileno@plt>
  413aac:	tbnz	w0, #31, 413b08 <_obstack_memory_used@@Base+0x7e8>
  413ab0:	mov	x0, x19
  413ab4:	bl	4029a0 <__freading@plt>
  413ab8:	cbnz	w0, 413aec <_obstack_memory_used@@Base+0x7cc>
  413abc:	mov	x0, x19
  413ac0:	bl	413b28 <_obstack_memory_used@@Base+0x808>
  413ac4:	cbz	w0, 413b08 <_obstack_memory_used@@Base+0x7e8>
  413ac8:	bl	4029e0 <__errno_location@plt>
  413acc:	mov	x20, x0
  413ad0:	mov	x0, x19
  413ad4:	ldr	w19, [x20]
  413ad8:	bl	4025d0 <fclose@plt>
  413adc:	cbnz	w19, 413b18 <_obstack_memory_used@@Base+0x7f8>
  413ae0:	ldp	x19, x20, [sp, #16]
  413ae4:	ldp	x29, x30, [sp], #32
  413ae8:	ret
  413aec:	mov	x0, x19
  413af0:	bl	402590 <fileno@plt>
  413af4:	mov	w2, #0x1                   	// #1
  413af8:	mov	x1, #0x0                   	// #0
  413afc:	bl	402540 <lseek@plt>
  413b00:	cmn	x0, #0x1
  413b04:	b.ne	413abc <_obstack_memory_used@@Base+0x79c>  // b.any
  413b08:	mov	x0, x19
  413b0c:	ldp	x19, x20, [sp, #16]
  413b10:	ldp	x29, x30, [sp], #32
  413b14:	b	4025d0 <fclose@plt>
  413b18:	mov	w0, #0xffffffff            	// #-1
  413b1c:	str	w19, [x20]
  413b20:	b	413ae0 <_obstack_memory_used@@Base+0x7c0>
  413b24:	nop
  413b28:	stp	x29, x30, [sp, #-32]!
  413b2c:	mov	x29, sp
  413b30:	str	x19, [sp, #16]
  413b34:	mov	x19, x0
  413b38:	cbz	x0, 413b4c <_obstack_memory_used@@Base+0x82c>
  413b3c:	bl	4029a0 <__freading@plt>
  413b40:	cbz	w0, 413b4c <_obstack_memory_used@@Base+0x82c>
  413b44:	ldr	w0, [x19]
  413b48:	tbnz	w0, #8, 413b5c <_obstack_memory_used@@Base+0x83c>
  413b4c:	mov	x0, x19
  413b50:	ldr	x19, [sp, #16]
  413b54:	ldp	x29, x30, [sp], #32
  413b58:	b	4028c0 <fflush@plt>
  413b5c:	mov	x0, x19
  413b60:	mov	w2, #0x1                   	// #1
  413b64:	mov	x1, #0x0                   	// #0
  413b68:	bl	413b80 <_obstack_memory_used@@Base+0x860>
  413b6c:	mov	x0, x19
  413b70:	ldr	x19, [sp, #16]
  413b74:	ldp	x29, x30, [sp], #32
  413b78:	b	4028c0 <fflush@plt>
  413b7c:	nop
  413b80:	stp	x29, x30, [sp, #-48]!
  413b84:	mov	x29, sp
  413b88:	ldp	x3, x4, [x0, #8]
  413b8c:	str	x19, [sp, #16]
  413b90:	mov	x19, x0
  413b94:	cmp	x4, x3
  413b98:	b.eq	413bac <_obstack_memory_used@@Base+0x88c>  // b.none
  413b9c:	mov	x0, x19
  413ba0:	ldr	x19, [sp, #16]
  413ba4:	ldp	x29, x30, [sp], #48
  413ba8:	b	402830 <fseeko@plt>
  413bac:	ldp	x3, x4, [x0, #32]
  413bb0:	cmp	x4, x3
  413bb4:	b.ne	413b9c <_obstack_memory_used@@Base+0x87c>  // b.any
  413bb8:	ldr	x3, [x0, #72]
  413bbc:	cbnz	x3, 413b9c <_obstack_memory_used@@Base+0x87c>
  413bc0:	str	x1, [sp, #32]
  413bc4:	str	w2, [sp, #44]
  413bc8:	bl	402590 <fileno@plt>
  413bcc:	ldr	w2, [sp, #44]
  413bd0:	ldr	x1, [sp, #32]
  413bd4:	bl	402540 <lseek@plt>
  413bd8:	mov	x1, x0
  413bdc:	cmn	x0, #0x1
  413be0:	b.eq	413bf8 <_obstack_memory_used@@Base+0x8d8>  // b.none
  413be4:	ldr	w2, [x19]
  413be8:	mov	w0, #0x0                   	// #0
  413bec:	str	x1, [x19, #144]
  413bf0:	and	w1, w2, #0xffffffef
  413bf4:	str	w1, [x19]
  413bf8:	ldr	x19, [sp, #16]
  413bfc:	ldp	x29, x30, [sp], #48
  413c00:	ret
  413c04:	nop
  413c08:	stp	x29, x30, [sp, #-48]!
  413c0c:	mov	x29, sp
  413c10:	str	q0, [sp, #16]
  413c14:	str	q1, [sp, #32]
  413c18:	ldp	x2, x0, [sp, #16]
  413c1c:	ldp	x5, x3, [sp, #32]
  413c20:	mrs	x10, fpcr
  413c24:	lsr	x1, x0, #63
  413c28:	ubfx	x6, x0, #0, #48
  413c2c:	and	w13, w1, #0xff
  413c30:	mov	x14, x1
  413c34:	ubfx	x7, x0, #48, #15
  413c38:	cbz	w7, 414058 <_obstack_memory_used@@Base+0xd38>
  413c3c:	mov	w4, #0x7fff                	// #32767
  413c40:	cmp	w7, w4
  413c44:	b.eq	4140a0 <_obstack_memory_used@@Base+0xd80>  // b.none
  413c48:	and	x7, x7, #0xffff
  413c4c:	extr	x6, x6, x2, #61
  413c50:	mov	x15, #0xffffffffffffc001    	// #-16383
  413c54:	orr	x4, x6, #0x8000000000000
  413c58:	add	x7, x7, x15
  413c5c:	lsl	x2, x2, #3
  413c60:	mov	x1, #0x0                   	// #0
  413c64:	mov	x16, #0x0                   	// #0
  413c68:	mov	w0, #0x0                   	// #0
  413c6c:	lsr	x8, x3, #63
  413c70:	ubfx	x6, x3, #0, #48
  413c74:	and	w15, w8, #0xff
  413c78:	ubfx	x9, x3, #48, #15
  413c7c:	cbz	w9, 414014 <_obstack_memory_used@@Base+0xcf4>
  413c80:	mov	w11, #0x7fff                	// #32767
  413c84:	cmp	w9, w11
  413c88:	b.eq	413d4c <_obstack_memory_used@@Base+0xa2c>  // b.none
  413c8c:	and	x9, x9, #0xffff
  413c90:	extr	x6, x6, x5, #61
  413c94:	mov	x12, #0xffffffffffffc001    	// #-16383
  413c98:	orr	x6, x6, #0x8000000000000
  413c9c:	add	x9, x9, x12
  413ca0:	lsl	x5, x5, #3
  413ca4:	sub	x7, x7, x9
  413ca8:	mov	x9, #0x0                   	// #0
  413cac:	eor	w11, w13, w15
  413cb0:	cmp	x1, #0x9
  413cb4:	and	x3, x11, #0xff
  413cb8:	mov	x12, x3
  413cbc:	b.gt	413fec <_obstack_memory_used@@Base+0xccc>
  413cc0:	cmp	x1, #0x7
  413cc4:	b.gt	4141ac <_obstack_memory_used@@Base+0xe8c>
  413cc8:	cmp	x1, #0x3
  413ccc:	b.eq	413ce8 <_obstack_memory_used@@Base+0x9c8>  // b.none
  413cd0:	b.le	413fbc <_obstack_memory_used@@Base+0xc9c>
  413cd4:	cmp	x1, #0x5
  413cd8:	b.eq	413ffc <_obstack_memory_used@@Base+0xcdc>  // b.none
  413cdc:	b.le	413de0 <_obstack_memory_used@@Base+0xac0>
  413ce0:	cmp	x1, #0x6
  413ce4:	b.eq	413db0 <_obstack_memory_used@@Base+0xa90>  // b.none
  413ce8:	cmp	x9, #0x1
  413cec:	b.eq	414130 <_obstack_memory_used@@Base+0xe10>  // b.none
  413cf0:	cbz	x9, 413d04 <_obstack_memory_used@@Base+0x9e4>
  413cf4:	cmp	x9, #0x2
  413cf8:	b.eq	414334 <_obstack_memory_used@@Base+0x1014>  // b.none
  413cfc:	cmp	x9, #0x3
  413d00:	b.eq	41431c <_obstack_memory_used@@Base+0xffc>  // b.none
  413d04:	mov	x1, #0x3fff                	// #16383
  413d08:	mov	x12, x8
  413d0c:	add	x3, x7, x1
  413d10:	cmp	x3, #0x0
  413d14:	b.le	4141f0 <_obstack_memory_used@@Base+0xed0>
  413d18:	tst	x5, #0x7
  413d1c:	b.ne	414160 <_obstack_memory_used@@Base+0xe40>  // b.any
  413d20:	and	w11, w12, #0x1
  413d24:	tbz	x6, #52, 413d30 <_obstack_memory_used@@Base+0xa10>
  413d28:	and	x6, x6, #0xffefffffffffffff
  413d2c:	add	x3, x7, #0x4, lsl #12
  413d30:	mov	x1, #0x7ffe                	// #32766
  413d34:	cmp	x3, x1
  413d38:	b.gt	4142d8 <_obstack_memory_used@@Base+0xfb8>
  413d3c:	and	w1, w3, #0x7fff
  413d40:	extr	x2, x6, x5, #3
  413d44:	ubfx	x6, x6, #3, #48
  413d48:	b	413dbc <_obstack_memory_used@@Base+0xa9c>
  413d4c:	mov	x9, #0xffffffffffff8001    	// #-32767
  413d50:	orr	x3, x6, x5
  413d54:	add	x7, x7, x9
  413d58:	cbz	x3, 4140d4 <_obstack_memory_used@@Base+0xdb4>
  413d5c:	tst	x6, #0x800000000000
  413d60:	orr	x1, x1, #0x3
  413d64:	csinc	w0, w0, wzr, ne  // ne = any
  413d68:	mov	x9, #0x3                   	// #3
  413d6c:	eor	w11, w13, w15
  413d70:	cmp	x1, #0x9
  413d74:	and	x3, x11, #0xff
  413d78:	mov	x12, x3
  413d7c:	b.le	413cc0 <_obstack_memory_used@@Base+0x9a0>
  413d80:	cmp	x1, #0xf
  413d84:	b.ne	413fec <_obstack_memory_used@@Base+0xccc>  // b.any
  413d88:	tbz	x4, #47, 414198 <_obstack_memory_used@@Base+0xe78>
  413d8c:	tbnz	x6, #47, 414198 <_obstack_memory_used@@Base+0xe78>
  413d90:	orr	x6, x6, #0x800000000000
  413d94:	mov	w11, w15
  413d98:	and	x6, x6, #0xffffffffffff
  413d9c:	mov	x2, x5
  413da0:	mov	w1, #0x7fff                	// #32767
  413da4:	b	413dbc <_obstack_memory_used@@Base+0xa9c>
  413da8:	cmp	x1, #0x2
  413dac:	b.ne	413de8 <_obstack_memory_used@@Base+0xac8>  // b.any
  413db0:	mov	w1, #0x0                   	// #0
  413db4:	mov	x6, #0x0                   	// #0
  413db8:	mov	x2, #0x0                   	// #0
  413dbc:	mov	x5, #0x0                   	// #0
  413dc0:	orr	w1, w1, w11, lsl #15
  413dc4:	bfxil	x5, x6, #0, #48
  413dc8:	fmov	d0, x2
  413dcc:	bfi	x5, x1, #48, #16
  413dd0:	fmov	v0.d[1], x5
  413dd4:	cbnz	w0, 413fdc <_obstack_memory_used@@Base+0xcbc>
  413dd8:	ldp	x29, x30, [sp], #48
  413ddc:	ret
  413de0:	cmp	x1, #0x4
  413de4:	b.eq	413db0 <_obstack_memory_used@@Base+0xa90>  // b.none
  413de8:	cmp	x4, x6
  413dec:	b.ls	414144 <_obstack_memory_used@@Base+0xe24>  // b.plast
  413df0:	lsr	x3, x4, #1
  413df4:	extr	x8, x4, x2, #1
  413df8:	lsl	x2, x2, #63
  413dfc:	ubfx	x14, x6, #20, #32
  413e00:	extr	x9, x6, x5, #52
  413e04:	lsl	x13, x5, #12
  413e08:	and	x15, x9, #0xffffffff
  413e0c:	udiv	x5, x3, x14
  413e10:	msub	x3, x5, x14, x3
  413e14:	mul	x1, x15, x5
  413e18:	extr	x3, x3, x8, #32
  413e1c:	cmp	x1, x3
  413e20:	b.ls	413e34 <_obstack_memory_used@@Base+0xb14>  // b.plast
  413e24:	adds	x3, x9, x3
  413e28:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  413e2c:	b.hi	414414 <_obstack_memory_used@@Base+0x10f4>  // b.pmore
  413e30:	sub	x5, x5, #0x1
  413e34:	sub	x3, x3, x1
  413e38:	mov	x4, x8
  413e3c:	udiv	x1, x3, x14
  413e40:	msub	x3, x1, x14, x3
  413e44:	mul	x6, x15, x1
  413e48:	bfi	x4, x3, #32, #32
  413e4c:	cmp	x6, x4
  413e50:	b.ls	413e64 <_obstack_memory_used@@Base+0xb44>  // b.plast
  413e54:	adds	x4, x9, x4
  413e58:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  413e5c:	b.hi	414408 <_obstack_memory_used@@Base+0x10e8>  // b.pmore
  413e60:	sub	x1, x1, #0x1
  413e64:	orr	x8, x1, x5, lsl #32
  413e68:	and	x17, x13, #0xffffffff
  413e6c:	and	x1, x8, #0xffffffff
  413e70:	lsr	x16, x13, #32
  413e74:	lsr	x5, x8, #32
  413e78:	sub	x4, x4, x6
  413e7c:	mov	x18, #0x100000000           	// #4294967296
  413e80:	mul	x3, x1, x17
  413e84:	mul	x30, x5, x17
  413e88:	madd	x6, x16, x1, x30
  413e8c:	and	x1, x3, #0xffffffff
  413e90:	mul	x5, x5, x16
  413e94:	add	x3, x6, x3, lsr #32
  413e98:	add	x6, x5, x18
  413e9c:	cmp	x30, x3
  413ea0:	csel	x5, x6, x5, hi  // hi = pmore
  413ea4:	add	x1, x1, x3, lsl #32
  413ea8:	add	x5, x5, x3, lsr #32
  413eac:	cmp	x4, x5
  413eb0:	b.cc	4141bc <_obstack_memory_used@@Base+0xe9c>  // b.lo, b.ul, b.last
  413eb4:	ccmp	x2, x1, #0x2, eq  // eq = none
  413eb8:	mov	x6, x8
  413ebc:	b.cc	4141bc <_obstack_memory_used@@Base+0xe9c>  // b.lo, b.ul, b.last
  413ec0:	subs	x8, x2, x1
  413ec4:	mov	x3, #0x3fff                	// #16383
  413ec8:	cmp	x2, x1
  413ecc:	add	x3, x7, x3
  413ed0:	sbc	x4, x4, x5
  413ed4:	cmp	x9, x4
  413ed8:	b.eq	414420 <_obstack_memory_used@@Base+0x1100>  // b.none
  413edc:	udiv	x5, x4, x14
  413ee0:	msub	x4, x5, x14, x4
  413ee4:	mul	x2, x15, x5
  413ee8:	extr	x1, x4, x8, #32
  413eec:	cmp	x2, x1
  413ef0:	b.ls	413f04 <_obstack_memory_used@@Base+0xbe4>  // b.plast
  413ef4:	adds	x1, x9, x1
  413ef8:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  413efc:	b.hi	4144d8 <_obstack_memory_used@@Base+0x11b8>  // b.pmore
  413f00:	sub	x5, x5, #0x1
  413f04:	sub	x1, x1, x2
  413f08:	udiv	x2, x1, x14
  413f0c:	msub	x1, x2, x14, x1
  413f10:	mul	x15, x15, x2
  413f14:	bfi	x8, x1, #32, #32
  413f18:	mov	x1, x8
  413f1c:	cmp	x15, x8
  413f20:	b.ls	413f34 <_obstack_memory_used@@Base+0xc14>  // b.plast
  413f24:	adds	x1, x9, x8
  413f28:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  413f2c:	b.hi	4144e4 <_obstack_memory_used@@Base+0x11c4>  // b.pmore
  413f30:	sub	x2, x2, #0x1
  413f34:	orr	x5, x2, x5, lsl #32
  413f38:	mov	x11, #0x100000000           	// #4294967296
  413f3c:	and	x4, x5, #0xffffffff
  413f40:	sub	x1, x1, x15
  413f44:	lsr	x14, x5, #32
  413f48:	mul	x2, x17, x4
  413f4c:	mul	x17, x14, x17
  413f50:	madd	x4, x16, x4, x17
  413f54:	and	x8, x2, #0xffffffff
  413f58:	mul	x16, x16, x14
  413f5c:	add	x2, x4, x2, lsr #32
  413f60:	add	x4, x16, x11
  413f64:	cmp	x17, x2
  413f68:	csel	x16, x4, x16, hi  // hi = pmore
  413f6c:	add	x4, x8, x2, lsl #32
  413f70:	add	x16, x16, x2, lsr #32
  413f74:	cmp	x1, x16
  413f78:	b.cs	414358 <_obstack_memory_used@@Base+0x1038>  // b.hs, b.nlast
  413f7c:	adds	x2, x9, x1
  413f80:	sub	x8, x5, #0x1
  413f84:	mov	x1, x2
  413f88:	b.cs	413f9c <_obstack_memory_used@@Base+0xc7c>  // b.hs, b.nlast
  413f8c:	cmp	x2, x16
  413f90:	b.cc	414458 <_obstack_memory_used@@Base+0x1138>  // b.lo, b.ul, b.last
  413f94:	ccmp	x13, x4, #0x2, eq  // eq = none
  413f98:	b.cc	414458 <_obstack_memory_used@@Base+0x1138>  // b.lo, b.ul, b.last
  413f9c:	cmp	x13, x4
  413fa0:	mov	x5, x8
  413fa4:	cset	w2, ne  // ne = any
  413fa8:	cmp	w2, #0x0
  413fac:	orr	x2, x5, #0x1
  413fb0:	ccmp	x1, x16, #0x0, eq  // eq = none
  413fb4:	csel	x5, x2, x5, ne  // ne = any
  413fb8:	b	413d10 <_obstack_memory_used@@Base+0x9f0>
  413fbc:	cmp	x1, #0x1
  413fc0:	b.ne	413da8 <_obstack_memory_used@@Base+0xa88>  // b.any
  413fc4:	mov	x4, #0x0                   	// #0
  413fc8:	fmov	d0, x4
  413fcc:	lsl	x3, x3, #63
  413fd0:	orr	w0, w0, #0x2
  413fd4:	orr	x5, x3, #0x7fff000000000000
  413fd8:	fmov	v0.d[1], x5
  413fdc:	str	q0, [sp, #16]
  413fe0:	bl	415180 <_obstack_memory_used@@Base+0x1e60>
  413fe4:	ldr	q0, [sp, #16]
  413fe8:	b	413dd8 <_obstack_memory_used@@Base+0xab8>
  413fec:	cmp	x1, #0xb
  413ff0:	b.gt	4140c0 <_obstack_memory_used@@Base+0xda0>
  413ff4:	cmp	x1, #0xa
  413ff8:	b.ne	413ce8 <_obstack_memory_used@@Base+0x9c8>  // b.any
  413ffc:	mov	w11, #0x0                   	// #0
  414000:	mov	x6, #0xffffffffffff        	// #281474976710655
  414004:	mov	x2, #0xffffffffffffffff    	// #-1
  414008:	mov	w0, #0x1                   	// #1
  41400c:	mov	w1, #0x7fff                	// #32767
  414010:	b	413dbc <_obstack_memory_used@@Base+0xa9c>
  414014:	orr	x3, x6, x5
  414018:	cbz	x3, 414100 <_obstack_memory_used@@Base+0xde0>
  41401c:	cbz	x6, 4142b4 <_obstack_memory_used@@Base+0xf94>
  414020:	clz	x3, x6
  414024:	sub	x9, x3, #0xf
  414028:	add	w12, w9, #0x3
  41402c:	mov	w11, #0x3d                  	// #61
  414030:	sub	w9, w11, w9
  414034:	lsl	x6, x6, x12
  414038:	lsr	x9, x5, x9
  41403c:	orr	x6, x9, x6
  414040:	lsl	x5, x5, x12
  414044:	add	x7, x3, x7
  414048:	mov	x11, #0x3fef                	// #16367
  41404c:	mov	x9, #0x0                   	// #0
  414050:	add	x7, x7, x11
  414054:	b	413cac <_obstack_memory_used@@Base+0x98c>
  414058:	orr	x4, x6, x2
  41405c:	cbz	x4, 4140e8 <_obstack_memory_used@@Base+0xdc8>
  414060:	cbz	x6, 414290 <_obstack_memory_used@@Base+0xf70>
  414064:	clz	x0, x6
  414068:	sub	x4, x0, #0xf
  41406c:	add	w7, w4, #0x3
  414070:	mov	w1, #0x3d                  	// #61
  414074:	sub	w4, w1, w4
  414078:	lsl	x6, x6, x7
  41407c:	lsr	x4, x2, x4
  414080:	orr	x4, x4, x6
  414084:	lsl	x2, x2, x7
  414088:	mov	x7, #0xffffffffffffc011    	// #-16367
  41408c:	mov	x1, #0x0                   	// #0
  414090:	sub	x7, x7, x0
  414094:	mov	x16, #0x0                   	// #0
  414098:	mov	w0, #0x0                   	// #0
  41409c:	b	413c6c <_obstack_memory_used@@Base+0x94c>
  4140a0:	orr	x4, x6, x2
  4140a4:	cbnz	x4, 414114 <_obstack_memory_used@@Base+0xdf4>
  4140a8:	mov	x2, #0x0                   	// #0
  4140ac:	mov	x1, #0x8                   	// #8
  4140b0:	mov	x7, #0x7fff                	// #32767
  4140b4:	mov	x16, #0x2                   	// #2
  4140b8:	mov	w0, #0x0                   	// #0
  4140bc:	b	413c6c <_obstack_memory_used@@Base+0x94c>
  4140c0:	mov	x6, x4
  4140c4:	mov	x5, x2
  4140c8:	mov	x8, x14
  4140cc:	mov	x9, x16
  4140d0:	b	413ce8 <_obstack_memory_used@@Base+0x9c8>
  4140d4:	orr	x1, x1, #0x2
  4140d8:	mov	x6, #0x0                   	// #0
  4140dc:	mov	x5, #0x0                   	// #0
  4140e0:	mov	x9, #0x2                   	// #2
  4140e4:	b	413d6c <_obstack_memory_used@@Base+0xa4c>
  4140e8:	mov	x2, #0x0                   	// #0
  4140ec:	mov	x1, #0x4                   	// #4
  4140f0:	mov	x7, #0x0                   	// #0
  4140f4:	mov	x16, #0x1                   	// #1
  4140f8:	mov	w0, #0x0                   	// #0
  4140fc:	b	413c6c <_obstack_memory_used@@Base+0x94c>
  414100:	orr	x1, x1, #0x1
  414104:	mov	x6, #0x0                   	// #0
  414108:	mov	x5, #0x0                   	// #0
  41410c:	mov	x9, #0x1                   	// #1
  414110:	b	413cac <_obstack_memory_used@@Base+0x98c>
  414114:	lsr	x0, x6, #47
  414118:	mov	x4, x6
  41411c:	eor	w0, w0, #0x1
  414120:	mov	x1, #0xc                   	// #12
  414124:	mov	x7, #0x7fff                	// #32767
  414128:	mov	x16, #0x3                   	// #3
  41412c:	b	413c6c <_obstack_memory_used@@Base+0x94c>
  414130:	mov	w11, w8
  414134:	mov	w1, #0x0                   	// #0
  414138:	mov	x6, #0x0                   	// #0
  41413c:	mov	x2, #0x0                   	// #0
  414140:	b	413dbc <_obstack_memory_used@@Base+0xa9c>
  414144:	ccmp	x5, x2, #0x2, eq  // eq = none
  414148:	b.ls	413df0 <_obstack_memory_used@@Base+0xad0>  // b.plast
  41414c:	mov	x8, x2
  414150:	sub	x7, x7, #0x1
  414154:	mov	x3, x4
  414158:	mov	x2, #0x0                   	// #0
  41415c:	b	413dfc <_obstack_memory_used@@Base+0xadc>
  414160:	and	x1, x10, #0xc00000
  414164:	orr	w0, w0, #0x10
  414168:	cmp	x1, #0x400, lsl #12
  41416c:	b.eq	4144c0 <_obstack_memory_used@@Base+0x11a0>  // b.none
  414170:	cmp	x1, #0x800, lsl #12
  414174:	b.eq	4143d4 <_obstack_memory_used@@Base+0x10b4>  // b.none
  414178:	cbnz	x1, 413d20 <_obstack_memory_used@@Base+0xa00>
  41417c:	and	x1, x5, #0xf
  414180:	and	w11, w12, #0x1
  414184:	cmp	x1, #0x4
  414188:	b.eq	413d24 <_obstack_memory_used@@Base+0xa04>  // b.none
  41418c:	adds	x5, x5, #0x4
  414190:	cinc	x6, x6, cs  // cs = hs, nlast
  414194:	b	413d24 <_obstack_memory_used@@Base+0xa04>
  414198:	orr	x6, x4, #0x800000000000
  41419c:	mov	w11, w13
  4141a0:	and	x6, x6, #0xffffffffffff
  4141a4:	mov	w1, #0x7fff                	// #32767
  4141a8:	b	413dbc <_obstack_memory_used@@Base+0xa9c>
  4141ac:	mov	w1, #0x7fff                	// #32767
  4141b0:	mov	x6, #0x0                   	// #0
  4141b4:	mov	x2, #0x0                   	// #0
  4141b8:	b	413dbc <_obstack_memory_used@@Base+0xa9c>
  4141bc:	adds	x3, x2, x13
  4141c0:	sub	x6, x8, #0x1
  4141c4:	adc	x4, x4, x9
  4141c8:	cset	x18, cs  // cs = hs, nlast
  4141cc:	mov	x2, x3
  4141d0:	cmp	x9, x4
  4141d4:	b.cs	414348 <_obstack_memory_used@@Base+0x1028>  // b.hs, b.nlast
  4141d8:	cmp	x5, x4
  4141dc:	b.ls	414370 <_obstack_memory_used@@Base+0x1050>  // b.plast
  4141e0:	adds	x2, x13, x3
  4141e4:	sub	x6, x8, #0x2
  4141e8:	adc	x4, x4, x9
  4141ec:	b	413ec0 <_obstack_memory_used@@Base+0xba0>
  4141f0:	mov	x1, #0x1                   	// #1
  4141f4:	sub	x1, x1, x3
  4141f8:	cmp	x1, #0x74
  4141fc:	and	w11, w12, #0x1
  414200:	b.le	41421c <_obstack_memory_used@@Base+0xefc>
  414204:	orr	x2, x5, x6
  414208:	cbnz	x2, 41443c <_obstack_memory_used@@Base+0x111c>
  41420c:	orr	w0, w0, #0x8
  414210:	mov	w1, #0x0                   	// #0
  414214:	mov	x6, #0x0                   	// #0
  414218:	b	414300 <_obstack_memory_used@@Base+0xfe0>
  41421c:	cmp	x1, #0x3f
  414220:	b.le	41437c <_obstack_memory_used@@Base+0x105c>
  414224:	mov	w2, #0x80                  	// #128
  414228:	sub	w2, w2, w1
  41422c:	cmp	x1, #0x40
  414230:	sub	w1, w1, #0x40
  414234:	lsl	x2, x6, x2
  414238:	orr	x2, x5, x2
  41423c:	csel	x5, x2, x5, ne  // ne = any
  414240:	lsr	x6, x6, x1
  414244:	cmp	x5, #0x0
  414248:	cset	x2, ne  // ne = any
  41424c:	orr	x2, x2, x6
  414250:	ands	x6, x2, #0x7
  414254:	b.eq	4143b0 <_obstack_memory_used@@Base+0x1090>  // b.none
  414258:	mov	x6, #0x0                   	// #0
  41425c:	and	x10, x10, #0xc00000
  414260:	orr	w0, w0, #0x10
  414264:	cmp	x10, #0x400, lsl #12
  414268:	b.eq	4144fc <_obstack_memory_used@@Base+0x11dc>  // b.none
  41426c:	cmp	x10, #0x800, lsl #12
  414270:	b.eq	414510 <_obstack_memory_used@@Base+0x11f0>  // b.none
  414274:	cbz	x10, 414478 <_obstack_memory_used@@Base+0x1158>
  414278:	tbnz	x6, #51, 414490 <_obstack_memory_used@@Base+0x1170>
  41427c:	orr	w0, w0, #0x8
  414280:	extr	x2, x6, x2, #3
  414284:	mov	w1, #0x0                   	// #0
  414288:	ubfx	x6, x6, #3, #48
  41428c:	b	414300 <_obstack_memory_used@@Base+0xfe0>
  414290:	clz	x7, x2
  414294:	add	x4, x7, #0x31
  414298:	add	x0, x7, #0x40
  41429c:	cmp	x4, #0x3c
  4142a0:	b.le	41406c <_obstack_memory_used@@Base+0xd4c>
  4142a4:	sub	w4, w4, #0x3d
  4142a8:	lsl	x4, x2, x4
  4142ac:	mov	x2, #0x0                   	// #0
  4142b0:	b	414088 <_obstack_memory_used@@Base+0xd68>
  4142b4:	clz	x3, x5
  4142b8:	add	x9, x3, #0x31
  4142bc:	add	x3, x3, #0x40
  4142c0:	cmp	x9, #0x3c
  4142c4:	b.le	414028 <_obstack_memory_used@@Base+0xd08>
  4142c8:	sub	w6, w9, #0x3d
  4142cc:	lsl	x6, x5, x6
  4142d0:	mov	x5, #0x0                   	// #0
  4142d4:	b	414044 <_obstack_memory_used@@Base+0xd24>
  4142d8:	and	x2, x10, #0xc00000
  4142dc:	cmp	x2, #0x400, lsl #12
  4142e0:	b.eq	4144a4 <_obstack_memory_used@@Base+0x1184>  // b.none
  4142e4:	cmp	x2, #0x800, lsl #12
  4142e8:	b.eq	4143ec <_obstack_memory_used@@Base+0x10cc>  // b.none
  4142ec:	cbz	x2, 4143c8 <_obstack_memory_used@@Base+0x10a8>
  4142f0:	mov	x6, #0xffffffffffff        	// #281474976710655
  4142f4:	mov	x2, #0xffffffffffffffff    	// #-1
  4142f8:	mov	w3, #0x14                  	// #20
  4142fc:	orr	w0, w0, w3
  414300:	mov	x5, #0x0                   	// #0
  414304:	orr	w1, w1, w11, lsl #15
  414308:	bfxil	x5, x6, #0, #48
  41430c:	fmov	d0, x2
  414310:	bfi	x5, x1, #48, #16
  414314:	fmov	v0.d[1], x5
  414318:	b	413fdc <_obstack_memory_used@@Base+0xcbc>
  41431c:	orr	x6, x6, #0x800000000000
  414320:	mov	w11, w8
  414324:	and	x6, x6, #0xffffffffffff
  414328:	mov	x2, x5
  41432c:	mov	w1, #0x7fff                	// #32767
  414330:	b	413dbc <_obstack_memory_used@@Base+0xa9c>
  414334:	mov	w11, w8
  414338:	mov	w1, #0x7fff                	// #32767
  41433c:	mov	x6, #0x0                   	// #0
  414340:	mov	x2, #0x0                   	// #0
  414344:	b	413dbc <_obstack_memory_used@@Base+0xa9c>
  414348:	cmp	x18, #0x0
  41434c:	ccmp	x9, x4, #0x0, eq  // eq = none
  414350:	b.ne	413ec0 <_obstack_memory_used@@Base+0xba0>  // b.any
  414354:	b	4141d8 <_obstack_memory_used@@Base+0xeb8>
  414358:	cmp	x4, #0x0
  41435c:	cset	w2, ne  // ne = any
  414360:	cmp	w2, #0x0
  414364:	ccmp	x1, x16, #0x0, ne  // ne = any
  414368:	b.ne	413fa8 <_obstack_memory_used@@Base+0xc88>  // b.any
  41436c:	b	413f7c <_obstack_memory_used@@Base+0xc5c>
  414370:	ccmp	x1, x3, #0x0, eq  // eq = none
  414374:	b.ls	413ec0 <_obstack_memory_used@@Base+0xba0>  // b.plast
  414378:	b	4141e0 <_obstack_memory_used@@Base+0xec0>
  41437c:	mov	w2, #0x40                  	// #64
  414380:	sub	w2, w2, w1
  414384:	lsr	x4, x5, x1
  414388:	lsl	x5, x5, x2
  41438c:	cmp	x5, #0x0
  414390:	cset	x3, ne  // ne = any
  414394:	lsl	x2, x6, x2
  414398:	orr	x2, x2, x4
  41439c:	lsr	x6, x6, x1
  4143a0:	orr	x2, x2, x3
  4143a4:	tst	x2, #0x7
  4143a8:	b.ne	41425c <_obstack_memory_used@@Base+0xf3c>  // b.any
  4143ac:	tbnz	x6, #51, 41451c <_obstack_memory_used@@Base+0x11fc>
  4143b0:	mov	w1, #0x0                   	// #0
  4143b4:	extr	x2, x6, x2, #3
  4143b8:	ubfx	x6, x6, #3, #48
  4143bc:	tbz	w10, #11, 413dbc <_obstack_memory_used@@Base+0xa9c>
  4143c0:	orr	w0, w0, #0x8
  4143c4:	b	414300 <_obstack_memory_used@@Base+0xfe0>
  4143c8:	mov	w1, #0x7fff                	// #32767
  4143cc:	mov	x6, #0x0                   	// #0
  4143d0:	b	4142f8 <_obstack_memory_used@@Base+0xfd8>
  4143d4:	mov	w11, #0x0                   	// #0
  4143d8:	cbz	x12, 413d24 <_obstack_memory_used@@Base+0xa04>
  4143dc:	adds	x5, x5, #0x8
  4143e0:	mov	w11, #0x1                   	// #1
  4143e4:	cinc	x6, x6, cs  // cs = hs, nlast
  4143e8:	b	413d24 <_obstack_memory_used@@Base+0xa04>
  4143ec:	cmp	x12, #0x0
  4143f0:	mov	w2, #0x7fff                	// #32767
  4143f4:	mov	x6, #0xffffffffffff        	// #281474976710655
  4143f8:	csel	w1, w1, w2, eq  // eq = none
  4143fc:	csel	x6, x6, xzr, eq  // eq = none
  414400:	csetm	x2, eq  // eq = none
  414404:	b	4142f8 <_obstack_memory_used@@Base+0xfd8>
  414408:	sub	x1, x1, #0x2
  41440c:	add	x4, x4, x9
  414410:	b	413e64 <_obstack_memory_used@@Base+0xb44>
  414414:	sub	x5, x5, #0x2
  414418:	add	x3, x3, x9
  41441c:	b	413e34 <_obstack_memory_used@@Base+0xb14>
  414420:	cmp	x3, #0x0
  414424:	mov	x5, #0xffffffffffffffff    	// #-1
  414428:	b.gt	414160 <_obstack_memory_used@@Base+0xe40>
  41442c:	mov	x1, #0x1                   	// #1
  414430:	sub	x1, x1, x3
  414434:	cmp	x1, #0x74
  414438:	b.le	41421c <_obstack_memory_used@@Base+0xefc>
  41443c:	and	x10, x10, #0xc00000
  414440:	orr	w0, w0, #0x10
  414444:	cmp	x10, #0x400, lsl #12
  414448:	b.eq	4144f0 <_obstack_memory_used@@Base+0x11d0>  // b.none
  41444c:	cmp	x10, #0x800, lsl #12
  414450:	csel	x2, x12, xzr, eq  // eq = none
  414454:	b	41420c <_obstack_memory_used@@Base+0xeec>
  414458:	lsl	x8, x13, #1
  41445c:	sub	x5, x5, #0x2
  414460:	cmp	x13, x8
  414464:	cinc	x1, x9, hi  // hi = pmore
  414468:	cmp	x4, x8
  41446c:	add	x1, x2, x1
  414470:	cset	w2, ne  // ne = any
  414474:	b	413fa8 <_obstack_memory_used@@Base+0xc88>
  414478:	and	x1, x2, #0xf
  41447c:	cmp	x1, #0x4
  414480:	b.eq	41448c <_obstack_memory_used@@Base+0x116c>  // b.none
  414484:	adds	x2, x2, #0x4
  414488:	cinc	x6, x6, cs  // cs = hs, nlast
  41448c:	tbz	x6, #51, 41427c <_obstack_memory_used@@Base+0xf5c>
  414490:	orr	w0, w0, #0x8
  414494:	mov	w1, #0x1                   	// #1
  414498:	mov	x6, #0x0                   	// #0
  41449c:	mov	x2, #0x0                   	// #0
  4144a0:	b	414300 <_obstack_memory_used@@Base+0xfe0>
  4144a4:	cmp	x12, #0x0
  4144a8:	mov	w2, #0x7fff                	// #32767
  4144ac:	mov	x6, #0xffffffffffff        	// #281474976710655
  4144b0:	csel	w1, w1, w2, ne  // ne = any
  4144b4:	csel	x6, x6, xzr, ne  // ne = any
  4144b8:	csetm	x2, ne  // ne = any
  4144bc:	b	4142f8 <_obstack_memory_used@@Base+0xfd8>
  4144c0:	mov	w11, #0x1                   	// #1
  4144c4:	cbnz	x12, 413d24 <_obstack_memory_used@@Base+0xa04>
  4144c8:	adds	x5, x5, #0x8
  4144cc:	mov	w11, #0x0                   	// #0
  4144d0:	cinc	x6, x6, cs  // cs = hs, nlast
  4144d4:	b	413d24 <_obstack_memory_used@@Base+0xa04>
  4144d8:	sub	x5, x5, #0x2
  4144dc:	add	x1, x1, x9
  4144e0:	b	413f04 <_obstack_memory_used@@Base+0xbe4>
  4144e4:	sub	x2, x2, #0x2
  4144e8:	add	x1, x1, x9
  4144ec:	b	413f34 <_obstack_memory_used@@Base+0xc14>
  4144f0:	mov	x2, #0x1                   	// #1
  4144f4:	sub	x2, x2, x12
  4144f8:	b	41420c <_obstack_memory_used@@Base+0xeec>
  4144fc:	cbnz	x12, 41448c <_obstack_memory_used@@Base+0x116c>
  414500:	adds	x2, x2, #0x8
  414504:	cinc	x6, x6, cs  // cs = hs, nlast
  414508:	tbnz	x6, #51, 414490 <_obstack_memory_used@@Base+0x1170>
  41450c:	b	41427c <_obstack_memory_used@@Base+0xf5c>
  414510:	cbnz	x12, 414500 <_obstack_memory_used@@Base+0x11e0>
  414514:	tbnz	x6, #51, 414490 <_obstack_memory_used@@Base+0x1170>
  414518:	b	41427c <_obstack_memory_used@@Base+0xf5c>
  41451c:	orr	w0, w0, #0x10
  414520:	b	414490 <_obstack_memory_used@@Base+0x1170>
  414524:	nop
  414528:	stp	x29, x30, [sp, #-48]!
  41452c:	mov	x29, sp
  414530:	str	q0, [sp, #16]
  414534:	str	q1, [sp, #32]
  414538:	ldp	x6, x1, [sp, #16]
  41453c:	ldp	x7, x0, [sp, #32]
  414540:	mrs	x2, fpcr
  414544:	ubfx	x4, x1, #48, #15
  414548:	lsr	x2, x1, #63
  41454c:	lsr	x3, x0, #63
  414550:	ubfx	x9, x0, #0, #48
  414554:	mov	x5, #0x7fff                	// #32767
  414558:	mov	x10, x6
  41455c:	cmp	x4, x5
  414560:	and	w2, w2, #0xff
  414564:	ubfx	x1, x1, #0, #48
  414568:	and	w3, w3, #0xff
  41456c:	ubfx	x0, x0, #48, #15
  414570:	b.eq	4145a4 <_obstack_memory_used@@Base+0x1284>  // b.none
  414574:	cmp	x0, x5
  414578:	b.eq	414590 <_obstack_memory_used@@Base+0x1270>  // b.none
  41457c:	cmp	x4, x0
  414580:	mov	w0, #0x1                   	// #1
  414584:	b.eq	4145bc <_obstack_memory_used@@Base+0x129c>  // b.none
  414588:	ldp	x29, x30, [sp], #48
  41458c:	ret
  414590:	orr	x8, x9, x7
  414594:	cbnz	x8, 414620 <_obstack_memory_used@@Base+0x1300>
  414598:	mov	w0, #0x1                   	// #1
  41459c:	ldp	x29, x30, [sp], #48
  4145a0:	ret
  4145a4:	orr	x5, x1, x6
  4145a8:	cbnz	x5, 4145f0 <_obstack_memory_used@@Base+0x12d0>
  4145ac:	cmp	x0, x4
  4145b0:	b.ne	414598 <_obstack_memory_used@@Base+0x1278>  // b.any
  4145b4:	orr	x8, x9, x7
  4145b8:	cbnz	x8, 414620 <_obstack_memory_used@@Base+0x1300>
  4145bc:	cmp	x1, x9
  4145c0:	mov	w0, #0x1                   	// #1
  4145c4:	ccmp	x6, x7, #0x0, eq  // eq = none
  4145c8:	b.ne	414588 <_obstack_memory_used@@Base+0x1268>  // b.any
  4145cc:	cmp	w2, w3
  4145d0:	mov	w0, #0x0                   	// #0
  4145d4:	b.eq	414588 <_obstack_memory_used@@Base+0x1268>  // b.none
  4145d8:	mov	w0, #0x1                   	// #1
  4145dc:	cbnz	x4, 414588 <_obstack_memory_used@@Base+0x1268>
  4145e0:	orr	x1, x1, x10
  4145e4:	cmp	x1, #0x0
  4145e8:	cset	w0, ne  // ne = any
  4145ec:	b	414588 <_obstack_memory_used@@Base+0x1268>
  4145f0:	tst	x1, #0x800000000000
  4145f4:	b.ne	41460c <_obstack_memory_used@@Base+0x12ec>  // b.any
  4145f8:	mov	w0, #0x1                   	// #1
  4145fc:	bl	415180 <_obstack_memory_used@@Base+0x1e60>
  414600:	mov	w0, #0x1                   	// #1
  414604:	ldp	x29, x30, [sp], #48
  414608:	ret
  41460c:	cmp	x0, x4
  414610:	mov	w0, #0x1                   	// #1
  414614:	b.ne	414588 <_obstack_memory_used@@Base+0x1268>  // b.any
  414618:	orr	x8, x9, x7
  41461c:	cbz	x8, 414588 <_obstack_memory_used@@Base+0x1268>
  414620:	tst	x9, #0x800000000000
  414624:	b.eq	4145f8 <_obstack_memory_used@@Base+0x12d8>  // b.none
  414628:	b	414598 <_obstack_memory_used@@Base+0x1278>
  41462c:	nop
  414630:	stp	x29, x30, [sp, #-48]!
  414634:	mov	x29, sp
  414638:	str	q0, [sp, #16]
  41463c:	str	q1, [sp, #32]
  414640:	ldp	x8, x1, [sp, #16]
  414644:	ldp	x9, x0, [sp, #32]
  414648:	mrs	x2, fpcr
  41464c:	ubfx	x4, x1, #48, #15
  414650:	ubfx	x10, x1, #0, #48
  414654:	lsr	x2, x1, #63
  414658:	mov	x5, #0x7fff                	// #32767
  41465c:	mov	x6, x8
  414660:	cmp	x4, x5
  414664:	ubfx	x11, x0, #0, #48
  414668:	ubfx	x7, x0, #48, #15
  41466c:	lsr	x1, x0, #63
  414670:	mov	x3, x9
  414674:	b.eq	4146ac <_obstack_memory_used@@Base+0x138c>  // b.none
  414678:	cmp	x7, x5
  41467c:	b.eq	4146bc <_obstack_memory_used@@Base+0x139c>  // b.none
  414680:	cbnz	x4, 4146e8 <_obstack_memory_used@@Base+0x13c8>
  414684:	orr	x6, x10, x8
  414688:	cmp	x6, #0x0
  41468c:	cset	w0, eq  // eq = none
  414690:	cbnz	x7, 4146d4 <_obstack_memory_used@@Base+0x13b4>
  414694:	orr	x3, x11, x9
  414698:	cbnz	x3, 4146d4 <_obstack_memory_used@@Base+0x13b4>
  41469c:	mov	w0, #0x0                   	// #0
  4146a0:	cbnz	x6, 4146fc <_obstack_memory_used@@Base+0x13dc>
  4146a4:	ldp	x29, x30, [sp], #48
  4146a8:	ret
  4146ac:	orr	x0, x10, x8
  4146b0:	cbnz	x0, 414710 <_obstack_memory_used@@Base+0x13f0>
  4146b4:	cmp	x7, x4
  4146b8:	b.ne	4146e8 <_obstack_memory_used@@Base+0x13c8>  // b.any
  4146bc:	orr	x3, x11, x3
  4146c0:	cbnz	x3, 414710 <_obstack_memory_used@@Base+0x13f0>
  4146c4:	cbnz	x4, 4146f4 <_obstack_memory_used@@Base+0x13d4>
  4146c8:	orr	x6, x10, x6
  4146cc:	cmp	x6, #0x0
  4146d0:	cset	w0, eq  // eq = none
  4146d4:	cbz	w0, 4146f4 <_obstack_memory_used@@Base+0x13d4>
  4146d8:	cmp	x1, #0x0
  4146dc:	csinv	w0, w0, wzr, ne  // ne = any
  4146e0:	ldp	x29, x30, [sp], #48
  4146e4:	ret
  4146e8:	cbnz	x7, 4146f4 <_obstack_memory_used@@Base+0x13d4>
  4146ec:	orr	x3, x11, x3
  4146f0:	cbz	x3, 4146fc <_obstack_memory_used@@Base+0x13dc>
  4146f4:	cmp	x2, x1
  4146f8:	b.eq	414724 <_obstack_memory_used@@Base+0x1404>  // b.none
  4146fc:	cmp	x2, #0x0
  414700:	mov	w0, #0xffffffff            	// #-1
  414704:	cneg	w0, w0, eq  // eq = none
  414708:	ldp	x29, x30, [sp], #48
  41470c:	ret
  414710:	mov	w0, #0x1                   	// #1
  414714:	bl	415180 <_obstack_memory_used@@Base+0x1e60>
  414718:	mov	w0, #0x2                   	// #2
  41471c:	ldp	x29, x30, [sp], #48
  414720:	ret
  414724:	cmp	x4, x7
  414728:	b.gt	4146fc <_obstack_memory_used@@Base+0x13dc>
  41472c:	b.lt	414760 <_obstack_memory_used@@Base+0x1440>  // b.tstop
  414730:	cmp	x10, x11
  414734:	b.hi	4146fc <_obstack_memory_used@@Base+0x13dc>  // b.pmore
  414738:	cset	w0, eq  // eq = none
  41473c:	cmp	w0, #0x0
  414740:	ccmp	x8, x9, #0x0, ne  // ne = any
  414744:	b.hi	4146fc <_obstack_memory_used@@Base+0x13dc>  // b.pmore
  414748:	cmp	x10, x11
  41474c:	b.cc	414760 <_obstack_memory_used@@Base+0x1440>  // b.lo, b.ul, b.last
  414750:	cmp	w0, #0x0
  414754:	mov	w0, #0x0                   	// #0
  414758:	ccmp	x8, x9, #0x2, ne  // ne = any
  41475c:	b.cs	4146a4 <_obstack_memory_used@@Base+0x1384>  // b.hs, b.nlast
  414760:	cmp	x2, #0x0
  414764:	mov	w0, #0x1                   	// #1
  414768:	cneg	w0, w0, eq  // eq = none
  41476c:	b	4146a4 <_obstack_memory_used@@Base+0x1384>
  414770:	stp	x29, x30, [sp, #-80]!
  414774:	mov	x29, sp
  414778:	str	q0, [sp, #48]
  41477c:	str	q1, [sp, #64]
  414780:	ldp	x1, x0, [sp, #48]
  414784:	ldp	x6, x2, [sp, #64]
  414788:	mrs	x11, fpcr
  41478c:	lsr	x3, x0, #63
  414790:	ubfx	x7, x0, #0, #48
  414794:	and	w12, w3, #0xff
  414798:	mov	x14, x3
  41479c:	ubfx	x3, x0, #48, #15
  4147a0:	cbz	w3, 414b48 <_obstack_memory_used@@Base+0x1828>
  4147a4:	mov	w4, #0x7fff                	// #32767
  4147a8:	cmp	w3, w4
  4147ac:	b.eq	414bec <_obstack_memory_used@@Base+0x18cc>  // b.none
  4147b0:	and	x3, x3, #0xffff
  4147b4:	extr	x4, x7, x1, #61
  4147b8:	mov	x18, #0xffffffffffffc001    	// #-16383
  4147bc:	orr	x7, x4, #0x8000000000000
  4147c0:	add	x3, x3, x18
  4147c4:	lsl	x5, x1, #3
  4147c8:	mov	x16, #0x0                   	// #0
  4147cc:	mov	x1, #0x0                   	// #0
  4147d0:	mov	w0, #0x0                   	// #0
  4147d4:	lsr	x8, x2, #63
  4147d8:	ubfx	x4, x2, #0, #48
  4147dc:	and	w15, w8, #0xff
  4147e0:	mov	x13, x8
  4147e4:	ubfx	x9, x2, #48, #15
  4147e8:	cbz	w9, 414ba8 <_obstack_memory_used@@Base+0x1888>
  4147ec:	mov	w8, #0x7fff                	// #32767
  4147f0:	cmp	w9, w8
  4147f4:	b.eq	414878 <_obstack_memory_used@@Base+0x1558>  // b.none
  4147f8:	and	x9, x9, #0xffff
  4147fc:	mov	x17, #0xffffffffffffc001    	// #-16383
  414800:	add	x9, x9, x17
  414804:	extr	x2, x4, x6, #61
  414808:	add	x9, x9, x3
  41480c:	lsl	x6, x6, #3
  414810:	orr	x4, x2, #0x8000000000000
  414814:	mov	x2, #0x0                   	// #0
  414818:	eor	w8, w12, w15
  41481c:	cmp	x1, #0xa
  414820:	and	w10, w8, #0xff
  414824:	add	x3, x9, #0x1
  414828:	and	x8, x8, #0xff
  41482c:	b.le	4148b0 <_obstack_memory_used@@Base+0x1590>
  414830:	cmp	x1, #0xb
  414834:	b.eq	414f48 <_obstack_memory_used@@Base+0x1c28>  // b.none
  414838:	mov	w15, w12
  41483c:	mov	x13, x14
  414840:	mov	w10, w15
  414844:	cmp	x16, #0x2
  414848:	b.eq	414c0c <_obstack_memory_used@@Base+0x18ec>  // b.none
  41484c:	mov	x4, x7
  414850:	mov	x6, x5
  414854:	mov	x2, x16
  414858:	mov	x8, x13
  41485c:	cmp	x2, #0x3
  414860:	b.ne	4148cc <_obstack_memory_used@@Base+0x15ac>  // b.any
  414864:	orr	x4, x4, #0x800000000000
  414868:	mov	x5, x6
  41486c:	and	x4, x4, #0xffffffffffff
  414870:	mov	w1, #0x7fff                	// #32767
  414874:	b	4148e0 <_obstack_memory_used@@Base+0x15c0>
  414878:	mov	x8, #0x7fff                	// #32767
  41487c:	orr	x2, x4, x6
  414880:	add	x9, x3, x8
  414884:	cbnz	x2, 414904 <_obstack_memory_used@@Base+0x15e4>
  414888:	eor	w8, w12, w15
  41488c:	orr	x1, x1, #0x2
  414890:	and	w10, w8, #0xff
  414894:	cmp	x1, #0xa
  414898:	add	x3, x3, #0x8, lsl #12
  41489c:	and	x8, x8, #0xff
  4148a0:	mov	x6, #0x0                   	// #0
  4148a4:	b.gt	414ebc <_obstack_memory_used@@Base+0x1b9c>
  4148a8:	mov	x4, #0x0                   	// #0
  4148ac:	mov	x2, #0x2                   	// #2
  4148b0:	cmp	x1, #0x2
  4148b4:	b.gt	41492c <_obstack_memory_used@@Base+0x160c>
  4148b8:	sub	x1, x1, #0x1
  4148bc:	cmp	x1, #0x1
  4148c0:	b.hi	414968 <_obstack_memory_used@@Base+0x1648>  // b.pmore
  4148c4:	cmp	x2, #0x2
  4148c8:	b.eq	414c0c <_obstack_memory_used@@Base+0x18ec>  // b.none
  4148cc:	cmp	x2, #0x1
  4148d0:	b.ne	414ac8 <_obstack_memory_used@@Base+0x17a8>  // b.any
  4148d4:	mov	w1, #0x0                   	// #0
  4148d8:	mov	x4, #0x0                   	// #0
  4148dc:	mov	x5, #0x0                   	// #0
  4148e0:	mov	x3, #0x0                   	// #0
  4148e4:	orr	w1, w1, w10, lsl #15
  4148e8:	bfxil	x3, x4, #0, #48
  4148ec:	fmov	d0, x5
  4148f0:	bfi	x3, x1, #48, #16
  4148f4:	fmov	v0.d[1], x3
  4148f8:	cbnz	w0, 414d38 <_obstack_memory_used@@Base+0x1a18>
  4148fc:	ldp	x29, x30, [sp], #80
  414900:	ret
  414904:	tst	x4, #0x800000000000
  414908:	eor	w8, w12, w15
  41490c:	orr	x1, x1, #0x3
  414910:	csinc	w0, w0, wzr, ne  // ne = any
  414914:	and	w10, w8, #0xff
  414918:	add	x3, x3, #0x8, lsl #12
  41491c:	cmp	x1, #0xa
  414920:	and	x8, x8, #0xff
  414924:	mov	x2, #0x3                   	// #3
  414928:	b.gt	414f3c <_obstack_memory_used@@Base+0x1c1c>
  41492c:	mov	x12, #0x1                   	// #1
  414930:	mov	x14, #0x530                 	// #1328
  414934:	lsl	x1, x12, x1
  414938:	tst	x1, x14
  41493c:	b.ne	414b3c <_obstack_memory_used@@Base+0x181c>  // b.any
  414940:	mov	x14, #0x240                 	// #576
  414944:	tst	x1, x14
  414948:	b.ne	414b24 <_obstack_memory_used@@Base+0x1804>  // b.any
  41494c:	mov	x12, #0x88                  	// #136
  414950:	tst	x1, x12
  414954:	b.eq	414968 <_obstack_memory_used@@Base+0x1648>  // b.none
  414958:	mov	x7, x4
  41495c:	mov	x5, x6
  414960:	mov	x16, x2
  414964:	b	414840 <_obstack_memory_used@@Base+0x1520>
  414968:	lsr	x13, x5, #32
  41496c:	and	x12, x6, #0xffffffff
  414970:	and	x15, x5, #0xffffffff
  414974:	lsr	x6, x6, #32
  414978:	and	x18, x4, #0xffffffff
  41497c:	lsr	x2, x4, #32
  414980:	mul	x4, x13, x12
  414984:	stp	x21, x22, [sp, #32]
  414988:	lsr	x22, x7, #32
  41498c:	and	x5, x7, #0xffffffff
  414990:	mul	x16, x12, x15
  414994:	madd	x7, x6, x15, x4
  414998:	stp	x19, x20, [sp, #16]
  41499c:	mul	x1, x13, x18
  4149a0:	mul	x17, x15, x18
  4149a4:	and	x30, x16, #0xffffffff
  4149a8:	madd	x15, x2, x15, x1
  4149ac:	add	x16, x7, x16, lsr #32
  4149b0:	mul	x21, x22, x12
  4149b4:	cmp	x4, x16
  4149b8:	mul	x20, x22, x18
  4149bc:	mov	x14, #0x100000000           	// #4294967296
  4149c0:	mul	x19, x13, x6
  4149c4:	add	x15, x15, x17, lsr #32
  4149c8:	mul	x12, x12, x5
  4149cc:	and	x17, x17, #0xffffffff
  4149d0:	mul	x18, x5, x18
  4149d4:	add	x4, x19, x14
  4149d8:	madd	x7, x6, x5, x21
  4149dc:	csel	x19, x4, x19, hi  // hi = pmore
  4149e0:	madd	x5, x2, x5, x20
  4149e4:	cmp	x1, x15
  4149e8:	mul	x13, x13, x2
  4149ec:	add	x17, x17, x15, lsl #32
  4149f0:	mul	x6, x6, x22
  4149f4:	add	x7, x7, x12, lsr #32
  4149f8:	add	x5, x5, x18, lsr #32
  4149fc:	add	x4, x13, x14
  414a00:	mul	x2, x2, x22
  414a04:	csel	x13, x4, x13, hi  // hi = pmore
  414a08:	and	x1, x18, #0xffffffff
  414a0c:	cmp	x21, x7
  414a10:	add	x4, x6, x14
  414a14:	add	x30, x30, x16, lsl #32
  414a18:	csel	x6, x4, x6, hi  // hi = pmore
  414a1c:	add	x13, x13, x15, lsr #32
  414a20:	cmp	x20, x5
  414a24:	add	x1, x1, x5, lsl #32
  414a28:	add	x16, x17, x16, lsr #32
  414a2c:	add	x14, x2, x14
  414a30:	csel	x2, x14, x2, hi  // hi = pmore
  414a34:	add	x16, x19, x16
  414a38:	adds	x1, x1, x13
  414a3c:	and	x12, x12, #0xffffffff
  414a40:	cset	x13, cs  // cs = hs, nlast
  414a44:	cmp	x16, x17
  414a48:	cset	x4, cc  // cc = lo, ul, last
  414a4c:	add	x12, x12, x7, lsl #32
  414a50:	adds	x1, x1, x4
  414a54:	lsr	x5, x5, #32
  414a58:	cset	x4, cs  // cs = hs, nlast
  414a5c:	cmp	x13, #0x0
  414a60:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  414a64:	add	x7, x6, x7, lsr #32
  414a68:	cinc	x5, x5, ne  // ne = any
  414a6c:	adds	x6, x16, x12
  414a70:	cset	x4, cs  // cs = hs, nlast
  414a74:	adds	x1, x1, x7
  414a78:	cset	x7, cs  // cs = hs, nlast
  414a7c:	adds	x4, x1, x4
  414a80:	cset	x1, cs  // cs = hs, nlast
  414a84:	cmp	x7, #0x0
  414a88:	orr	x30, x30, x6, lsl #13
  414a8c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  414a90:	cinc	x1, x2, ne  // ne = any
  414a94:	cmp	x30, #0x0
  414a98:	add	x1, x1, x5
  414a9c:	cset	x2, ne  // ne = any
  414aa0:	orr	x6, x2, x6, lsr #51
  414aa4:	orr	x6, x6, x4, lsl #13
  414aa8:	extr	x4, x1, x4, #51
  414aac:	tbz	x1, #39, 414dc0 <_obstack_memory_used@@Base+0x1aa0>
  414ab0:	ldp	x19, x20, [sp, #16]
  414ab4:	and	x1, x6, #0x1
  414ab8:	ldp	x21, x22, [sp, #32]
  414abc:	orr	x6, x1, x6, lsr #1
  414ac0:	orr	x6, x6, x4, lsl #63
  414ac4:	lsr	x4, x4, #1
  414ac8:	mov	x1, #0x3fff                	// #16383
  414acc:	add	x2, x3, x1
  414ad0:	cmp	x2, #0x0
  414ad4:	b.le	414c6c <_obstack_memory_used@@Base+0x194c>
  414ad8:	tst	x6, #0x7
  414adc:	b.eq	414afc <_obstack_memory_used@@Base+0x17dc>  // b.none
  414ae0:	and	x1, x11, #0xc00000
  414ae4:	orr	w0, w0, #0x10
  414ae8:	cmp	x1, #0x400, lsl #12
  414aec:	b.eq	414eb4 <_obstack_memory_used@@Base+0x1b94>  // b.none
  414af0:	cmp	x1, #0x800, lsl #12
  414af4:	b.eq	414e5c <_obstack_memory_used@@Base+0x1b3c>  // b.none
  414af8:	cbz	x1, 414e44 <_obstack_memory_used@@Base+0x1b24>
  414afc:	tbz	x4, #52, 414b08 <_obstack_memory_used@@Base+0x17e8>
  414b00:	and	x4, x4, #0xffefffffffffffff
  414b04:	add	x2, x3, #0x4, lsl #12
  414b08:	mov	x1, #0x7ffe                	// #32766
  414b0c:	cmp	x2, x1
  414b10:	b.gt	414d94 <_obstack_memory_used@@Base+0x1a74>
  414b14:	and	w1, w2, #0x7fff
  414b18:	extr	x5, x4, x6, #3
  414b1c:	ubfx	x4, x4, #3, #48
  414b20:	b	4148e0 <_obstack_memory_used@@Base+0x15c0>
  414b24:	mov	w0, w12
  414b28:	mov	w10, #0x0                   	// #0
  414b2c:	mov	x4, #0xffffffffffff        	// #281474976710655
  414b30:	mov	x5, #0xffffffffffffffff    	// #-1
  414b34:	mov	w1, #0x7fff                	// #32767
  414b38:	b	4148e0 <_obstack_memory_used@@Base+0x15c0>
  414b3c:	mov	w15, w10
  414b40:	mov	x13, x8
  414b44:	b	414840 <_obstack_memory_used@@Base+0x1520>
  414b48:	orr	x5, x7, x1
  414b4c:	cbz	x5, 414c54 <_obstack_memory_used@@Base+0x1934>
  414b50:	cbz	x7, 414d70 <_obstack_memory_used@@Base+0x1a50>
  414b54:	clz	x0, x7
  414b58:	sub	x4, x0, #0xf
  414b5c:	add	w5, w4, #0x3
  414b60:	mov	w3, #0x3d                  	// #61
  414b64:	sub	w3, w3, w4
  414b68:	lsl	x4, x7, x5
  414b6c:	lsr	x3, x1, x3
  414b70:	orr	x7, x3, x4
  414b74:	lsl	x5, x1, x5
  414b78:	lsr	x8, x2, #63
  414b7c:	mov	x3, #0xffffffffffffc011    	// #-16367
  414b80:	ubfx	x4, x2, #0, #48
  414b84:	sub	x3, x3, x0
  414b88:	and	w15, w8, #0xff
  414b8c:	mov	x13, x8
  414b90:	ubfx	x9, x2, #48, #15
  414b94:	mov	x1, #0x0                   	// #0
  414b98:	mov	x16, #0x0                   	// #0
  414b9c:	mov	w0, #0x0                   	// #0
  414ba0:	cbnz	w9, 4147ec <_obstack_memory_used@@Base+0x14cc>
  414ba4:	nop
  414ba8:	orr	x2, x4, x6
  414bac:	cbz	x2, 414c1c <_obstack_memory_used@@Base+0x18fc>
  414bb0:	cbz	x4, 414d4c <_obstack_memory_used@@Base+0x1a2c>
  414bb4:	clz	x9, x4
  414bb8:	sub	x2, x9, #0xf
  414bbc:	add	w10, w2, #0x3
  414bc0:	mov	w8, #0x3d                  	// #61
  414bc4:	sub	w8, w8, w2
  414bc8:	lsl	x2, x4, x10
  414bcc:	lsr	x8, x6, x8
  414bd0:	orr	x4, x8, x2
  414bd4:	lsl	x6, x6, x10
  414bd8:	sub	x9, x3, x9
  414bdc:	mov	x10, #0xffffffffffffc011    	// #-16367
  414be0:	mov	x2, #0x0                   	// #0
  414be4:	add	x9, x9, x10
  414be8:	b	414818 <_obstack_memory_used@@Base+0x14f8>
  414bec:	orr	x5, x7, x1
  414bf0:	cbnz	x5, 414c34 <_obstack_memory_used@@Base+0x1914>
  414bf4:	mov	x7, #0x0                   	// #0
  414bf8:	mov	x1, #0x8                   	// #8
  414bfc:	mov	x3, #0x7fff                	// #32767
  414c00:	mov	x16, #0x2                   	// #2
  414c04:	mov	w0, #0x0                   	// #0
  414c08:	b	4147d4 <_obstack_memory_used@@Base+0x14b4>
  414c0c:	mov	w1, #0x7fff                	// #32767
  414c10:	mov	x4, #0x0                   	// #0
  414c14:	mov	x5, #0x0                   	// #0
  414c18:	b	4148e0 <_obstack_memory_used@@Base+0x15c0>
  414c1c:	orr	x1, x1, #0x1
  414c20:	mov	x9, x3
  414c24:	mov	x4, #0x0                   	// #0
  414c28:	mov	x6, #0x0                   	// #0
  414c2c:	mov	x2, #0x1                   	// #1
  414c30:	b	414818 <_obstack_memory_used@@Base+0x14f8>
  414c34:	lsr	x0, x7, #47
  414c38:	mov	x5, x1
  414c3c:	eor	x0, x0, #0x1
  414c40:	mov	x1, #0xc                   	// #12
  414c44:	and	w0, w0, #0x1
  414c48:	mov	x3, #0x7fff                	// #32767
  414c4c:	mov	x16, #0x3                   	// #3
  414c50:	b	4147d4 <_obstack_memory_used@@Base+0x14b4>
  414c54:	mov	x7, #0x0                   	// #0
  414c58:	mov	x1, #0x4                   	// #4
  414c5c:	mov	x3, #0x0                   	// #0
  414c60:	mov	x16, #0x1                   	// #1
  414c64:	mov	w0, #0x0                   	// #0
  414c68:	b	4147d4 <_obstack_memory_used@@Base+0x14b4>
  414c6c:	mov	x1, #0x1                   	// #1
  414c70:	sub	x2, x1, x2
  414c74:	cmp	x2, #0x74
  414c78:	b.gt	414cf0 <_obstack_memory_used@@Base+0x19d0>
  414c7c:	cmp	x2, #0x3f
  414c80:	b.le	414dd0 <_obstack_memory_used@@Base+0x1ab0>
  414c84:	mov	w1, #0x80                  	// #128
  414c88:	sub	w1, w1, w2
  414c8c:	cmp	x2, #0x40
  414c90:	sub	w2, w2, #0x40
  414c94:	lsl	x1, x4, x1
  414c98:	orr	x1, x6, x1
  414c9c:	csel	x6, x1, x6, ne  // ne = any
  414ca0:	lsr	x2, x4, x2
  414ca4:	cmp	x6, #0x0
  414ca8:	cset	x5, ne  // ne = any
  414cac:	orr	x5, x5, x2
  414cb0:	ands	x2, x5, #0x7
  414cb4:	b.eq	414e04 <_obstack_memory_used@@Base+0x1ae4>  // b.none
  414cb8:	mov	x2, #0x0                   	// #0
  414cbc:	and	x11, x11, #0xc00000
  414cc0:	orr	w0, w0, #0x10
  414cc4:	cmp	x11, #0x400, lsl #12
  414cc8:	b.eq	414f14 <_obstack_memory_used@@Base+0x1bf4>  // b.none
  414ccc:	cmp	x11, #0x800, lsl #12
  414cd0:	b.eq	414f28 <_obstack_memory_used@@Base+0x1c08>  // b.none
  414cd4:	cbz	x11, 414e6c <_obstack_memory_used@@Base+0x1b4c>
  414cd8:	tbnz	x2, #51, 414e84 <_obstack_memory_used@@Base+0x1b64>
  414cdc:	ubfx	x4, x2, #3, #48
  414ce0:	extr	x5, x2, x5, #3
  414ce4:	orr	w0, w0, #0x8
  414ce8:	mov	w1, #0x0                   	// #0
  414cec:	b	414d20 <_obstack_memory_used@@Base+0x1a00>
  414cf0:	orr	x5, x6, x4
  414cf4:	cbz	x5, 414d14 <_obstack_memory_used@@Base+0x19f4>
  414cf8:	and	x11, x11, #0xc00000
  414cfc:	orr	w0, w0, #0x10
  414d00:	cmp	x11, #0x400, lsl #12
  414d04:	sub	x5, x1, x8
  414d08:	b.eq	414d14 <_obstack_memory_used@@Base+0x19f4>  // b.none
  414d0c:	cmp	x11, #0x800, lsl #12
  414d10:	csel	x5, x8, xzr, eq  // eq = none
  414d14:	orr	w0, w0, #0x8
  414d18:	mov	w1, #0x0                   	// #0
  414d1c:	mov	x4, #0x0                   	// #0
  414d20:	mov	x3, #0x0                   	// #0
  414d24:	fmov	d0, x5
  414d28:	bfxil	x3, x4, #0, #48
  414d2c:	bfi	x3, x1, #48, #15
  414d30:	bfi	x3, x10, #63, #1
  414d34:	fmov	v0.d[1], x3
  414d38:	str	q0, [sp, #48]
  414d3c:	bl	415180 <_obstack_memory_used@@Base+0x1e60>
  414d40:	ldr	q0, [sp, #48]
  414d44:	ldp	x29, x30, [sp], #80
  414d48:	ret
  414d4c:	clz	x9, x6
  414d50:	add	x2, x9, #0x31
  414d54:	add	x9, x9, #0x40
  414d58:	cmp	x2, #0x3c
  414d5c:	b.le	414bbc <_obstack_memory_used@@Base+0x189c>
  414d60:	sub	w2, w2, #0x3d
  414d64:	lsl	x4, x6, x2
  414d68:	mov	x6, #0x0                   	// #0
  414d6c:	b	414bd8 <_obstack_memory_used@@Base+0x18b8>
  414d70:	clz	x3, x1
  414d74:	add	x4, x3, #0x31
  414d78:	add	x0, x3, #0x40
  414d7c:	cmp	x4, #0x3c
  414d80:	b.le	414b5c <_obstack_memory_used@@Base+0x183c>
  414d84:	sub	w4, w4, #0x3d
  414d88:	mov	x5, #0x0                   	// #0
  414d8c:	lsl	x7, x1, x4
  414d90:	b	414b78 <_obstack_memory_used@@Base+0x1858>
  414d94:	and	x5, x11, #0xc00000
  414d98:	cmp	x5, #0x400, lsl #12
  414d9c:	b.eq	414e98 <_obstack_memory_used@@Base+0x1b78>  // b.none
  414da0:	cmp	x5, #0x800, lsl #12
  414da4:	b.eq	414e28 <_obstack_memory_used@@Base+0x1b08>  // b.none
  414da8:	cbz	x5, 414e1c <_obstack_memory_used@@Base+0x1afc>
  414dac:	mov	x4, #0xffffffffffff        	// #281474976710655
  414db0:	mov	x5, #0xffffffffffffffff    	// #-1
  414db4:	mov	w2, #0x14                  	// #20
  414db8:	orr	w0, w0, w2
  414dbc:	b	414d20 <_obstack_memory_used@@Base+0x1a00>
  414dc0:	mov	x3, x9
  414dc4:	ldp	x19, x20, [sp, #16]
  414dc8:	ldp	x21, x22, [sp, #32]
  414dcc:	b	414ac8 <_obstack_memory_used@@Base+0x17a8>
  414dd0:	mov	w1, #0x40                  	// #64
  414dd4:	sub	w1, w1, w2
  414dd8:	lsr	x3, x6, x2
  414ddc:	lsl	x6, x6, x1
  414de0:	cmp	x6, #0x0
  414de4:	lsl	x5, x4, x1
  414de8:	cset	x1, ne  // ne = any
  414dec:	orr	x5, x5, x3
  414df0:	lsr	x2, x4, x2
  414df4:	orr	x5, x5, x1
  414df8:	tst	x5, #0x7
  414dfc:	b.ne	414cbc <_obstack_memory_used@@Base+0x199c>  // b.any
  414e00:	tbnz	x2, #51, 414f34 <_obstack_memory_used@@Base+0x1c14>
  414e04:	ubfx	x4, x2, #3, #48
  414e08:	extr	x5, x2, x5, #3
  414e0c:	mov	w1, #0x0                   	// #0
  414e10:	tbz	w11, #11, 4148e0 <_obstack_memory_used@@Base+0x15c0>
  414e14:	orr	w0, w0, #0x8
  414e18:	b	414d20 <_obstack_memory_used@@Base+0x1a00>
  414e1c:	mov	w1, #0x7fff                	// #32767
  414e20:	mov	x4, #0x0                   	// #0
  414e24:	b	414db4 <_obstack_memory_used@@Base+0x1a94>
  414e28:	cmp	x8, #0x0
  414e2c:	mov	w2, #0x7fff                	// #32767
  414e30:	mov	x4, #0xffffffffffff        	// #281474976710655
  414e34:	csel	w1, w1, w2, eq  // eq = none
  414e38:	csel	x4, x4, xzr, eq  // eq = none
  414e3c:	csetm	x5, eq  // eq = none
  414e40:	b	414db4 <_obstack_memory_used@@Base+0x1a94>
  414e44:	and	x1, x6, #0xf
  414e48:	cmp	x1, #0x4
  414e4c:	b.eq	414afc <_obstack_memory_used@@Base+0x17dc>  // b.none
  414e50:	adds	x6, x6, #0x4
  414e54:	cinc	x4, x4, cs  // cs = hs, nlast
  414e58:	b	414afc <_obstack_memory_used@@Base+0x17dc>
  414e5c:	cbz	x8, 414afc <_obstack_memory_used@@Base+0x17dc>
  414e60:	adds	x6, x6, #0x8
  414e64:	cinc	x4, x4, cs  // cs = hs, nlast
  414e68:	b	414afc <_obstack_memory_used@@Base+0x17dc>
  414e6c:	and	x1, x5, #0xf
  414e70:	cmp	x1, #0x4
  414e74:	b.eq	414e80 <_obstack_memory_used@@Base+0x1b60>  // b.none
  414e78:	adds	x5, x5, #0x4
  414e7c:	cinc	x2, x2, cs  // cs = hs, nlast
  414e80:	tbz	x2, #51, 414cdc <_obstack_memory_used@@Base+0x19bc>
  414e84:	orr	w0, w0, #0x8
  414e88:	mov	w1, #0x1                   	// #1
  414e8c:	mov	x4, #0x0                   	// #0
  414e90:	mov	x5, #0x0                   	// #0
  414e94:	b	414d20 <_obstack_memory_used@@Base+0x1a00>
  414e98:	cmp	x8, #0x0
  414e9c:	mov	w2, #0x7fff                	// #32767
  414ea0:	mov	x4, #0xffffffffffff        	// #281474976710655
  414ea4:	csel	w1, w1, w2, ne  // ne = any
  414ea8:	csel	x4, x4, xzr, ne  // ne = any
  414eac:	csetm	x5, ne  // ne = any
  414eb0:	b	414db4 <_obstack_memory_used@@Base+0x1a94>
  414eb4:	cbnz	x8, 414afc <_obstack_memory_used@@Base+0x17dc>
  414eb8:	b	414e60 <_obstack_memory_used@@Base+0x1b40>
  414ebc:	mov	x4, #0x2                   	// #2
  414ec0:	cmp	x1, #0xf
  414ec4:	b.ne	414ee8 <_obstack_memory_used@@Base+0x1bc8>  // b.any
  414ec8:	tbz	x7, #47, 414f00 <_obstack_memory_used@@Base+0x1be0>
  414ecc:	tbnz	x2, #47, 414f00 <_obstack_memory_used@@Base+0x1be0>
  414ed0:	orr	x4, x2, #0x800000000000
  414ed4:	mov	w10, w15
  414ed8:	and	x4, x4, #0xffffffffffff
  414edc:	mov	x5, x6
  414ee0:	mov	w1, #0x7fff                	// #32767
  414ee4:	b	4148e0 <_obstack_memory_used@@Base+0x15c0>
  414ee8:	cmp	x1, #0xb
  414eec:	b.ne	414838 <_obstack_memory_used@@Base+0x1518>  // b.any
  414ef0:	mov	x7, x2
  414ef4:	mov	x5, x6
  414ef8:	mov	x16, x4
  414efc:	b	414840 <_obstack_memory_used@@Base+0x1520>
  414f00:	orr	x4, x7, #0x800000000000
  414f04:	mov	w10, w12
  414f08:	and	x4, x4, #0xffffffffffff
  414f0c:	mov	w1, #0x7fff                	// #32767
  414f10:	b	4148e0 <_obstack_memory_used@@Base+0x15c0>
  414f14:	cbnz	x8, 414e80 <_obstack_memory_used@@Base+0x1b60>
  414f18:	adds	x5, x5, #0x8
  414f1c:	cinc	x2, x2, cs  // cs = hs, nlast
  414f20:	tbnz	x2, #51, 414e84 <_obstack_memory_used@@Base+0x1b64>
  414f24:	b	414cdc <_obstack_memory_used@@Base+0x19bc>
  414f28:	cbnz	x8, 414f18 <_obstack_memory_used@@Base+0x1bf8>
  414f2c:	tbnz	x2, #51, 414e84 <_obstack_memory_used@@Base+0x1b64>
  414f30:	b	414cdc <_obstack_memory_used@@Base+0x19bc>
  414f34:	orr	w0, w0, #0x10
  414f38:	b	414e84 <_obstack_memory_used@@Base+0x1b64>
  414f3c:	mov	x2, x4
  414f40:	mov	x4, #0x3                   	// #3
  414f44:	b	414ec0 <_obstack_memory_used@@Base+0x1ba0>
  414f48:	mov	w10, w15
  414f4c:	mov	x8, x13
  414f50:	b	41485c <_obstack_memory_used@@Base+0x153c>
  414f54:	nop
  414f58:	cbz	w0, 414f9c <_obstack_memory_used@@Base+0x1c7c>
  414f5c:	mov	w0, w0
  414f60:	mov	w1, #0x403e                	// #16446
  414f64:	clz	x3, x0
  414f68:	mov	w2, #0x402f                	// #16431
  414f6c:	sub	w1, w1, w3
  414f70:	mov	x3, #0x0                   	// #0
  414f74:	sub	w2, w2, w1
  414f78:	and	w1, w1, #0x7fff
  414f7c:	lsl	x0, x0, x2
  414f80:	and	x0, x0, #0xffffffffffff
  414f84:	mov	x2, #0x0                   	// #0
  414f88:	fmov	d0, x2
  414f8c:	bfxil	x3, x0, #0, #48
  414f90:	bfi	x3, x1, #48, #16
  414f94:	fmov	v0.d[1], x3
  414f98:	ret
  414f9c:	mov	x0, #0x0                   	// #0
  414fa0:	mov	x3, #0x0                   	// #0
  414fa4:	bfxil	x3, x0, #0, #48
  414fa8:	mov	x2, #0x0                   	// #0
  414fac:	fmov	d0, x2
  414fb0:	mov	w1, #0x0                   	// #0
  414fb4:	bfi	x3, x1, #48, #16
  414fb8:	fmov	v0.d[1], x3
  414fbc:	ret
  414fc0:	stp	x29, x30, [sp, #-48]!
  414fc4:	mov	x29, sp
  414fc8:	str	x19, [sp, #16]
  414fcc:	str	q0, [sp, #32]
  414fd0:	ldr	x19, [sp, #32]
  414fd4:	ldr	x1, [sp, #40]
  414fd8:	mrs	x0, fpcr
  414fdc:	ubfx	x3, x1, #48, #15
  414fe0:	mov	x2, x19
  414fe4:	mov	x4, #0x3ffe                	// #16382
  414fe8:	ubfx	x19, x1, #0, #48
  414fec:	cmp	x3, x4
  414ff0:	b.gt	41501c <_obstack_memory_used@@Base+0x1cfc>
  414ff4:	cbnz	x3, 415000 <_obstack_memory_used@@Base+0x1ce0>
  414ff8:	orr	x19, x2, x19
  414ffc:	cbz	x19, 41500c <_obstack_memory_used@@Base+0x1cec>
  415000:	mov	w0, #0x10                  	// #16
  415004:	mov	x19, #0x0                   	// #0
  415008:	bl	415180 <_obstack_memory_used@@Base+0x1e60>
  41500c:	mov	x0, x19
  415010:	ldr	x19, [sp, #16]
  415014:	ldp	x29, x30, [sp], #48
  415018:	ret
  41501c:	lsr	x0, x1, #63
  415020:	mov	x4, #0x403f                	// #16447
  415024:	and	w0, w0, #0xff
  415028:	and	x5, x0, #0xff
  41502c:	sub	x4, x4, x5
  415030:	cmp	x4, x3
  415034:	b.le	415088 <_obstack_memory_used@@Base+0x1d68>
  415038:	cbnz	x5, 41509c <_obstack_memory_used@@Base+0x1d7c>
  41503c:	mov	x1, x3
  415040:	mov	x0, #0x406f                	// #16495
  415044:	sub	x3, x0, x3
  415048:	orr	x4, x19, #0x1000000000000
  41504c:	cmp	x3, #0x3f
  415050:	b.gt	4150ac <_obstack_memory_used@@Base+0x1d8c>
  415054:	mov	w3, #0xffffbfd1            	// #-16431
  415058:	add	w3, w1, w3
  41505c:	sub	w1, w0, w1
  415060:	lsl	x0, x2, x3
  415064:	cmp	x0, #0x0
  415068:	lsr	x19, x2, x1
  41506c:	cset	w0, ne  // ne = any
  415070:	lsl	x4, x4, x3
  415074:	orr	x19, x19, x4
  415078:	cbz	w0, 41500c <_obstack_memory_used@@Base+0x1cec>
  41507c:	mov	w0, #0x10                  	// #16
  415080:	bl	415180 <_obstack_memory_used@@Base+0x1e60>
  415084:	b	41500c <_obstack_memory_used@@Base+0x1cec>
  415088:	eor	w19, w0, #0x1
  41508c:	mov	w0, #0x1                   	// #1
  415090:	sbfx	x19, x19, #0, #1
  415094:	bl	415180 <_obstack_memory_used@@Base+0x1e60>
  415098:	b	41500c <_obstack_memory_used@@Base+0x1cec>
  41509c:	mov	w0, #0x1                   	// #1
  4150a0:	mov	x19, #0x0                   	// #0
  4150a4:	bl	415180 <_obstack_memory_used@@Base+0x1e60>
  4150a8:	b	41500c <_obstack_memory_used@@Base+0x1cec>
  4150ac:	mov	w0, #0xffffc011            	// #-16367
  4150b0:	add	w5, w1, w0
  4150b4:	mov	w0, #0x402f                	// #16431
  4150b8:	cmp	x3, #0x40
  4150bc:	sub	w1, w0, w1
  4150c0:	lsl	x0, x4, x5
  4150c4:	orr	x0, x2, x0
  4150c8:	csel	x2, x0, x2, ne  // ne = any
  4150cc:	lsr	x19, x4, x1
  4150d0:	cmp	x2, #0x0
  4150d4:	cset	w0, ne  // ne = any
  4150d8:	b	415078 <_obstack_memory_used@@Base+0x1d58>
  4150dc:	nop
  4150e0:	cbz	x0, 415134 <_obstack_memory_used@@Base+0x1e14>
  4150e4:	clz	x2, x0
  4150e8:	mov	w1, #0x403e                	// #16446
  4150ec:	sub	w1, w1, w2
  4150f0:	mov	x2, #0x406f                	// #16495
  4150f4:	and	w4, w1, #0x7fff
  4150f8:	sub	x3, x2, w1, sxtw
  4150fc:	cmp	x3, #0x3f
  415100:	b.gt	415154 <_obstack_memory_used@@Base+0x1e34>
  415104:	sub	w2, w2, w1
  415108:	mov	w3, #0xffffbfd1            	// #-16431
  41510c:	add	w1, w1, w3
  415110:	mov	x3, #0x0                   	// #0
  415114:	lsr	x1, x0, x1
  415118:	and	x1, x1, #0xffffffffffff
  41511c:	lsl	x0, x0, x2
  415120:	fmov	d0, x0
  415124:	bfxil	x3, x1, #0, #48
  415128:	bfi	x3, x4, #48, #16
  41512c:	fmov	v0.d[1], x3
  415130:	ret
  415134:	mov	x1, #0x0                   	// #0
  415138:	mov	x3, #0x0                   	// #0
  41513c:	bfxil	x3, x1, #0, #48
  415140:	fmov	d0, x0
  415144:	mov	w4, #0x0                   	// #0
  415148:	bfi	x3, x4, #48, #16
  41514c:	fmov	v0.d[1], x3
  415150:	ret
  415154:	mov	w2, #0x402f                	// #16431
  415158:	sub	w1, w2, w1
  41515c:	mov	x3, #0x0                   	// #0
  415160:	lsl	x1, x0, x1
  415164:	and	x1, x1, #0xffffffffffff
  415168:	mov	x0, #0x0                   	// #0
  41516c:	fmov	d0, x0
  415170:	bfxil	x3, x1, #0, #48
  415174:	bfi	x3, x4, #48, #16
  415178:	fmov	v0.d[1], x3
  41517c:	ret
  415180:	tbz	w0, #0, 415190 <_obstack_memory_used@@Base+0x1e70>
  415184:	movi	v1.2s, #0x0
  415188:	fdiv	s0, s1, s1
  41518c:	mrs	x1, fpsr
  415190:	tbz	w0, #1, 4151a4 <_obstack_memory_used@@Base+0x1e84>
  415194:	fmov	s1, #1.000000000000000000e+00
  415198:	movi	v2.2s, #0x0
  41519c:	fdiv	s0, s1, s2
  4151a0:	mrs	x1, fpsr
  4151a4:	tbz	w0, #2, 4151c4 <_obstack_memory_used@@Base+0x1ea4>
  4151a8:	mov	w2, #0xc5ae                	// #50606
  4151ac:	mov	w1, #0x7f7fffff            	// #2139095039
  4151b0:	movk	w2, #0x749d, lsl #16
  4151b4:	fmov	s1, w1
  4151b8:	fmov	s2, w2
  4151bc:	fadd	s0, s1, s2
  4151c0:	mrs	x1, fpsr
  4151c4:	tbz	w0, #3, 4151d4 <_obstack_memory_used@@Base+0x1eb4>
  4151c8:	movi	v1.2s, #0x80, lsl #16
  4151cc:	fmul	s0, s1, s1
  4151d0:	mrs	x1, fpsr
  4151d4:	tbz	w0, #4, 4151ec <_obstack_memory_used@@Base+0x1ecc>
  4151d8:	mov	w0, #0x7f7fffff            	// #2139095039
  4151dc:	fmov	s2, #1.000000000000000000e+00
  4151e0:	fmov	s1, w0
  4151e4:	fsub	s0, s1, s2
  4151e8:	mrs	x0, fpsr
  4151ec:	ret
  4151f0:	stp	x29, x30, [sp, #-64]!
  4151f4:	mov	x29, sp
  4151f8:	stp	x19, x20, [sp, #16]
  4151fc:	adrp	x20, 42e000 <_obstack_memory_used@@Base+0x1ace0>
  415200:	add	x20, x20, #0xde0
  415204:	stp	x21, x22, [sp, #32]
  415208:	adrp	x21, 42e000 <_obstack_memory_used@@Base+0x1ace0>
  41520c:	add	x21, x21, #0xdd8
  415210:	sub	x20, x20, x21
  415214:	mov	w22, w0
  415218:	stp	x23, x24, [sp, #48]
  41521c:	mov	x23, x1
  415220:	mov	x24, x2
  415224:	bl	402370 <mbrtowc@plt-0x40>
  415228:	cmp	xzr, x20, asr #3
  41522c:	b.eq	415258 <_obstack_memory_used@@Base+0x1f38>  // b.none
  415230:	asr	x20, x20, #3
  415234:	mov	x19, #0x0                   	// #0
  415238:	ldr	x3, [x21, x19, lsl #3]
  41523c:	mov	x2, x24
  415240:	add	x19, x19, #0x1
  415244:	mov	x1, x23
  415248:	mov	w0, w22
  41524c:	blr	x3
  415250:	cmp	x20, x19
  415254:	b.ne	415238 <_obstack_memory_used@@Base+0x1f18>  // b.any
  415258:	ldp	x19, x20, [sp, #16]
  41525c:	ldp	x21, x22, [sp, #32]
  415260:	ldp	x23, x24, [sp, #48]
  415264:	ldp	x29, x30, [sp], #64
  415268:	ret
  41526c:	nop
  415270:	ret
  415274:	nop
  415278:	adrp	x2, 42f000 <_obstack_memory_used@@Base+0x1bce0>
  41527c:	mov	x1, #0x0                   	// #0
  415280:	ldr	x2, [x2, #864]
  415284:	b	402510 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000415288 <.fini>:
  415288:	stp	x29, x30, [sp, #-16]!
  41528c:	mov	x29, sp
  415290:	ldp	x29, x30, [sp], #16
  415294:	ret
