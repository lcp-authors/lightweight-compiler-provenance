
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_posixsubprocess.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001270 <.init>:
    1270:	stp	x29, x30, [sp, #-16]!
    1274:	mov	x29, sp
    1278:	bl	1560 <PySequence_Fast@plt+0x10>
    127c:	ldp	x29, x30, [sp], #16
    1280:	ret

Disassembly of section .plt:

0000000000001290 <_exit@plt-0x20>:
    1290:	stp	x16, x30, [sp, #-16]!
    1294:	adrp	x16, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    1298:	ldr	x17, [x16, #4088]
    129c:	add	x16, x16, #0xff8
    12a0:	br	x17
    12a4:	nop
    12a8:	nop
    12ac:	nop

00000000000012b0 <_exit@plt>:
    12b0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    12b4:	ldr	x17, [x16]
    12b8:	add	x16, x16, #0x0
    12bc:	br	x17

00000000000012c0 <strlen@plt>:
    12c0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    12c4:	ldr	x17, [x16, #8]
    12c8:	add	x16, x16, #0x8
    12cc:	br	x17

00000000000012d0 <dup@plt>:
    12d0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    12d4:	ldr	x17, [x16, #16]
    12d8:	add	x16, x16, #0x10
    12dc:	br	x17

00000000000012e0 <_Py_write_noraise@plt>:
    12e0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    12e4:	ldr	x17, [x16, #24]
    12e8:	add	x16, x16, #0x18
    12ec:	br	x17

00000000000012f0 <PyErr_Restore@plt>:
    12f0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    12f4:	ldr	x17, [x16, #32]
    12f8:	add	x16, x16, #0x20
    12fc:	br	x17

0000000000001300 <PyErr_SetFromErrno@plt>:
    1300:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1304:	ldr	x17, [x16, #40]
    1308:	add	x16, x16, #0x28
    130c:	br	x17

0000000000001310 <__cxa_finalize@plt>:
    1310:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1314:	ldr	x17, [x16, #48]
    1318:	add	x16, x16, #0x30
    131c:	br	x17

0000000000001320 <_Py_set_inheritable_async_safe@plt>:
    1320:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1324:	ldr	x17, [x16, #56]
    1328:	add	x16, x16, #0x38
    132c:	br	x17

0000000000001330 <fork@plt>:
    1330:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1334:	ldr	x17, [x16, #64]
    1338:	add	x16, x16, #0x40
    133c:	br	x17

0000000000001340 <_Py_Dealloc@plt>:
    1340:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1344:	ldr	x17, [x16, #72]
    1348:	add	x16, x16, #0x48
    134c:	br	x17

0000000000001350 <PyUnicode_FSConverter@plt>:
    1350:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1354:	ldr	x17, [x16, #80]
    1358:	add	x16, x16, #0x50
    135c:	br	x17

0000000000001360 <PyErr_SetString@plt>:
    1360:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1364:	ldr	x17, [x16, #88]
    1368:	add	x16, x16, #0x58
    136c:	br	x17

0000000000001370 <PyOS_AfterFork_Parent@plt>:
    1370:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1374:	ldr	x17, [x16, #96]
    1378:	add	x16, x16, #0x60
    137c:	br	x17

0000000000001380 <PyInterpreterState_Main@plt>:
    1380:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1384:	ldr	x17, [x16, #104]
    1388:	add	x16, x16, #0x68
    138c:	br	x17

0000000000001390 <PyLong_FromLong@plt>:
    1390:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1394:	ldr	x17, [x16, #112]
    1398:	add	x16, x16, #0x70
    139c:	br	x17

00000000000013a0 <execv@plt>:
    13a0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    13a4:	ldr	x17, [x16, #120]
    13a8:	add	x16, x16, #0x78
    13ac:	br	x17

00000000000013b0 <_Py_RestoreSignals@plt>:
    13b0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    13b4:	ldr	x17, [x16, #128]
    13b8:	add	x16, x16, #0x80
    13bc:	br	x17

00000000000013c0 <close@plt>:
    13c0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    13c4:	ldr	x17, [x16, #136]
    13c8:	add	x16, x16, #0x88
    13cc:	br	x17

00000000000013d0 <__gmon_start__@plt>:
    13d0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    13d4:	ldr	x17, [x16, #144]
    13d8:	add	x16, x16, #0x90
    13dc:	br	x17

00000000000013e0 <PyTuple_New@plt>:
    13e0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    13e4:	ldr	x17, [x16, #152]
    13e8:	add	x16, x16, #0x98
    13ec:	br	x17

00000000000013f0 <PyModule_Create2@plt>:
    13f0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    13f4:	ldr	x17, [x16, #160]
    13f8:	add	x16, x16, #0xa0
    13fc:	br	x17

0000000000001400 <PyLong_AsLong@plt>:
    1400:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1404:	ldr	x17, [x16, #168]
    1408:	add	x16, x16, #0xa8
    140c:	br	x17

0000000000001410 <PyImport_ImportModule@plt>:
    1410:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1414:	ldr	x17, [x16, #176]
    1418:	add	x16, x16, #0xb0
    141c:	br	x17

0000000000001420 <PyOS_AfterFork_Child@plt>:
    1420:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1424:	ldr	x17, [x16, #184]
    1428:	add	x16, x16, #0xb8
    142c:	br	x17

0000000000001430 <PyObject_IsTrue@plt>:
    1430:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1434:	ldr	x17, [x16, #192]
    1438:	add	x16, x16, #0xc0
    143c:	br	x17

0000000000001440 <PyArg_ParseTuple@plt>:
    1440:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1444:	ldr	x17, [x16, #200]
    1448:	add	x16, x16, #0xc8
    144c:	br	x17

0000000000001450 <chdir@plt>:
    1450:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1454:	ldr	x17, [x16, #208]
    1458:	add	x16, x16, #0xd0
    145c:	br	x17

0000000000001460 <_PyObject_CallMethodId@plt>:
    1460:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1464:	ldr	x17, [x16, #216]
    1468:	add	x16, x16, #0xd8
    146c:	br	x17

0000000000001470 <PyOS_BeforeFork@plt>:
    1470:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1474:	ldr	x17, [x16, #224]
    1478:	add	x16, x16, #0xe0
    147c:	br	x17

0000000000001480 <_PySequence_BytesToCharpArray@plt>:
    1480:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1484:	ldr	x17, [x16, #232]
    1488:	add	x16, x16, #0xe8
    148c:	br	x17

0000000000001490 <execve@plt>:
    1490:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1494:	ldr	x17, [x16, #240]
    1498:	add	x16, x16, #0xf0
    149c:	br	x17

00000000000014a0 <_PyInterpreterState_Get@plt>:
    14a0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    14a4:	ldr	x17, [x16, #248]
    14a8:	add	x16, x16, #0xf8
    14ac:	br	x17

00000000000014b0 <PyErr_Fetch@plt>:
    14b0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    14b4:	ldr	x17, [x16, #256]
    14b8:	add	x16, x16, #0x100
    14bc:	br	x17

00000000000014c0 <sysconf@plt>:
    14c0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    14c4:	ldr	x17, [x16, #264]
    14c8:	add	x16, x16, #0x108
    14cc:	br	x17

00000000000014d0 <PyBytes_AsString@plt>:
    14d0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    14d4:	ldr	x17, [x16, #272]
    14d8:	add	x16, x16, #0x110
    14dc:	br	x17

00000000000014e0 <setsid@plt>:
    14e0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    14e4:	ldr	x17, [x16, #280]
    14e8:	add	x16, x16, #0x118
    14ec:	br	x17

00000000000014f0 <PyObject_Call@plt>:
    14f0:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    14f4:	ldr	x17, [x16, #288]
    14f8:	add	x16, x16, #0x120
    14fc:	br	x17

0000000000001500 <_Py_FreeCharPArray@plt>:
    1500:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1504:	ldr	x17, [x16, #296]
    1508:	add	x16, x16, #0x128
    150c:	br	x17

0000000000001510 <dup2@plt>:
    1510:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1514:	ldr	x17, [x16, #304]
    1518:	add	x16, x16, #0x130
    151c:	br	x17

0000000000001520 <_Py_open_noraise@plt>:
    1520:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1524:	ldr	x17, [x16, #312]
    1528:	add	x16, x16, #0x138
    152c:	br	x17

0000000000001530 <__errno_location@plt>:
    1530:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1534:	ldr	x17, [x16, #320]
    1538:	add	x16, x16, #0x140
    153c:	br	x17

0000000000001540 <syscall@plt>:
    1540:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1544:	ldr	x17, [x16, #328]
    1548:	add	x16, x16, #0x148
    154c:	br	x17

0000000000001550 <PySequence_Fast@plt>:
    1550:	adrp	x16, 13000 <_exit@GLIBC_2.17>
    1554:	ldr	x17, [x16, #336]
    1558:	add	x16, x16, #0x150
    155c:	br	x17

Disassembly of section .text:

0000000000001560 <PyInit__posixsubprocess@@Base-0xe10>:
    1560:	adrp	x0, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    1564:	ldr	x0, [x0, #4040]
    1568:	cbz	x0, 1570 <PySequence_Fast@plt+0x20>
    156c:	b	13d0 <__gmon_start__@plt>
    1570:	ret
    1574:	nop
    1578:	adrp	x0, 13000 <PyInit__posixsubprocess@@Base+0x10c90>
    157c:	add	x0, x0, #0x250
    1580:	adrp	x1, 13000 <PyInit__posixsubprocess@@Base+0x10c90>
    1584:	add	x1, x1, #0x250
    1588:	cmp	x1, x0
    158c:	b.eq	15a4 <PySequence_Fast@plt+0x54>  // b.none
    1590:	adrp	x1, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    1594:	ldr	x1, [x1, #3992]
    1598:	cbz	x1, 15a4 <PySequence_Fast@plt+0x54>
    159c:	mov	x16, x1
    15a0:	br	x16
    15a4:	ret
    15a8:	adrp	x0, 13000 <PyInit__posixsubprocess@@Base+0x10c90>
    15ac:	add	x0, x0, #0x250
    15b0:	adrp	x1, 13000 <PyInit__posixsubprocess@@Base+0x10c90>
    15b4:	add	x1, x1, #0x250
    15b8:	sub	x1, x1, x0
    15bc:	lsr	x2, x1, #63
    15c0:	add	x1, x2, x1, asr #3
    15c4:	cmp	xzr, x1, asr #1
    15c8:	asr	x1, x1, #1
    15cc:	b.eq	15e4 <PySequence_Fast@plt+0x94>  // b.none
    15d0:	adrp	x2, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    15d4:	ldr	x2, [x2, #4064]
    15d8:	cbz	x2, 15e4 <PySequence_Fast@plt+0x94>
    15dc:	mov	x16, x2
    15e0:	br	x16
    15e4:	ret
    15e8:	stp	x29, x30, [sp, #-32]!
    15ec:	mov	x29, sp
    15f0:	str	x19, [sp, #16]
    15f4:	adrp	x19, 13000 <PyInit__posixsubprocess@@Base+0x10c90>
    15f8:	ldrb	w0, [x19, #592]
    15fc:	cbnz	w0, 1624 <PySequence_Fast@plt+0xd4>
    1600:	adrp	x0, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    1604:	ldr	x0, [x0, #4008]
    1608:	cbz	x0, 1618 <PySequence_Fast@plt+0xc8>
    160c:	adrp	x0, 13000 <PyInit__posixsubprocess@@Base+0x10c90>
    1610:	ldr	x0, [x0, #344]
    1614:	bl	1310 <__cxa_finalize@plt>
    1618:	bl	1578 <PySequence_Fast@plt+0x28>
    161c:	mov	w0, #0x1                   	// #1
    1620:	strb	w0, [x19, #592]
    1624:	ldr	x19, [sp, #16]
    1628:	ldp	x29, x30, [sp], #32
    162c:	ret
    1630:	b	15a8 <PySequence_Fast@plt+0x58>
    1634:	nop
    1638:	stp	x29, x30, [sp, #-64]!
    163c:	mov	x29, sp
    1640:	add	x2, sp, #0x38
    1644:	add	x1, sp, #0x30
    1648:	stp	x19, x20, [sp, #16]
    164c:	mov	x19, x0
    1650:	add	x0, sp, #0x28
    1654:	bl	14b0 <PyErr_Fetch@plt>
    1658:	mov	x0, x19
    165c:	mov	x2, #0x0                   	// #0
    1660:	adrp	x1, 13000 <PyInit__posixsubprocess@@Base+0x10c90>
    1664:	add	x1, x1, #0x160
    1668:	bl	1460 <_PyObject_CallMethodId@plt>
    166c:	mov	x19, x0
    1670:	ldr	x2, [sp, #40]
    1674:	cbz	x2, 1684 <PySequence_Fast@plt+0x134>
    1678:	mov	x0, x2
    167c:	ldp	x1, x2, [sp, #48]
    1680:	bl	12f0 <PyErr_Restore@plt>
    1684:	cbz	x19, 16c4 <PySequence_Fast@plt+0x174>
    1688:	ldr	x0, [x19]
    168c:	mov	w20, #0x0                   	// #0
    1690:	sub	x0, x0, #0x1
    1694:	str	x0, [x19]
    1698:	cbz	x0, 16ac <PySequence_Fast@plt+0x15c>
    169c:	mov	w0, w20
    16a0:	ldp	x19, x20, [sp, #16]
    16a4:	ldp	x29, x30, [sp], #64
    16a8:	ret
    16ac:	mov	x0, x19
    16b0:	bl	1340 <_Py_Dealloc@plt>
    16b4:	mov	w0, w20
    16b8:	ldp	x19, x20, [sp, #16]
    16bc:	ldp	x29, x30, [sp], #64
    16c0:	ret
    16c4:	mov	w20, #0x1                   	// #1
    16c8:	mov	w0, w20
    16cc:	ldp	x19, x20, [sp, #16]
    16d0:	ldp	x29, x30, [sp], #64
    16d4:	ret
    16d8:	stp	x29, x30, [sp, #-400]!
    16dc:	adrp	x1, 2000 <PySequence_Fast@plt+0xab0>
    16e0:	mov	x29, sp
    16e4:	stp	x19, x20, [sp, #16]
    16e8:	mov	x20, x0
    16ec:	add	x0, x1, #0x398
    16f0:	mov	w1, #0x0                   	// #0
    16f4:	stp	x21, x22, [sp, #32]
    16f8:	stp	x23, x24, [sp, #48]
    16fc:	bl	1520 <_Py_open_noraise@plt>
    1700:	cmn	w0, #0x1
    1704:	str	w0, [sp, #108]
    1708:	b.eq	1848 <PySequence_Fast@plt+0x2f8>  // b.none
    170c:	ldr	w1, [sp, #108]
    1710:	add	x22, sp, #0x78
    1714:	mov	x2, x22
    1718:	mov	x3, #0x118                 	// #280
    171c:	mov	x0, #0x3d                  	// #61
    1720:	stp	x25, x26, [sp, #64]
    1724:	stp	x27, x28, [sp, #80]
    1728:	bl	1540 <syscall@plt>
    172c:	mov	x21, x0
    1730:	cmp	w0, #0x0
    1734:	b.le	17c4 <PySequence_Fast@plt+0x274>
    1738:	mov	w28, #0x0                   	// #0
    173c:	nop
    1740:	add	x23, x22, w28, sxtw
    1744:	add	x2, x23, #0x13
    1748:	ldrb	w1, [x23, #19]
    174c:	sub	w0, w1, #0x30
    1750:	and	w0, w0, #0xff
    1754:	cmp	w0, #0x9
    1758:	b.hi	1794 <PySequence_Fast@plt+0x244>  // b.pmore
    175c:	mov	w19, #0x0                   	// #0
    1760:	add	w19, w19, w19, lsl #2
    1764:	add	w19, w1, w19, lsl #1
    1768:	ldrb	w1, [x2, #1]!
    176c:	sub	w19, w19, #0x30
    1770:	sub	w0, w1, #0x30
    1774:	and	w0, w0, #0xff
    1778:	cmp	w0, #0x9
    177c:	b.ls	1760 <PySequence_Fast@plt+0x210>  // b.plast
    1780:	cbnz	w1, 1794 <PySequence_Fast@plt+0x244>
    1784:	ldr	w0, [sp, #108]
    1788:	cmp	w0, w19
    178c:	ccmp	w19, #0x2, #0x4, ne  // ne = any
    1790:	b.gt	17e8 <PySequence_Fast@plt+0x298>
    1794:	ldrh	w0, [x23, #16]
    1798:	add	w28, w28, w0
    179c:	cmp	w28, w21
    17a0:	b.lt	1740 <PySequence_Fast@plt+0x1f0>  // b.tstop
    17a4:	ldr	w1, [sp, #108]
    17a8:	mov	x2, x22
    17ac:	mov	x3, #0x118                 	// #280
    17b0:	mov	x0, #0x3d                  	// #61
    17b4:	bl	1540 <syscall@plt>
    17b8:	mov	x21, x0
    17bc:	cmp	w0, #0x0
    17c0:	b.gt	1738 <PySequence_Fast@plt+0x1e8>
    17c4:	ldr	w0, [sp, #108]
    17c8:	bl	13c0 <close@plt>
    17cc:	ldp	x25, x26, [sp, #64]
    17d0:	ldp	x27, x28, [sp, #80]
    17d4:	ldp	x19, x20, [sp, #16]
    17d8:	ldp	x21, x22, [sp, #32]
    17dc:	ldp	x23, x24, [sp, #48]
    17e0:	ldp	x29, x30, [sp], #400
    17e4:	ret
    17e8:	ldr	x25, [x20, #16]
    17ec:	sxtw	x26, w19
    17f0:	mov	x27, #0x0                   	// #0
    17f4:	subs	x25, x25, #0x1
    17f8:	b.pl	180c <PySequence_Fast@plt+0x2bc>  // b.nfrst
    17fc:	b	183c <PySequence_Fast@plt+0x2ec>
    1800:	add	x27, x24, #0x1
    1804:	cmp	x27, x25
    1808:	b.gt	183c <PySequence_Fast@plt+0x2ec>
    180c:	add	x0, x27, x25
    1810:	add	x0, x0, x0, lsr #63
    1814:	asr	x24, x0, #1
    1818:	add	x0, x20, x24, lsl #3
    181c:	ldr	x0, [x0, #24]
    1820:	bl	1400 <PyLong_AsLong@plt>
    1824:	cmp	x0, x26
    1828:	b.eq	1794 <PySequence_Fast@plt+0x244>  // b.none
    182c:	b.lt	1800 <PySequence_Fast@plt+0x2b0>  // b.tstop
    1830:	sub	x25, x24, #0x1
    1834:	cmp	x27, x25
    1838:	b.le	180c <PySequence_Fast@plt+0x2bc>
    183c:	mov	w0, w19
    1840:	bl	13c0 <close@plt>
    1844:	b	1794 <PySequence_Fast@plt+0x244>
    1848:	mov	w0, #0x4                   	// #4
    184c:	bl	14c0 <sysconf@plt>
    1850:	mov	x22, x0
    1854:	cmn	x0, #0x1
    1858:	ldr	x24, [x20, #16]
    185c:	b.eq	1910 <PySequence_Fast@plt+0x3c0>  // b.none
    1860:	cmp	x24, #0x0
    1864:	b.le	1924 <PySequence_Fast@plt+0x3d4>
    1868:	add	x20, x20, #0x18
    186c:	mov	x19, #0x3                   	// #3
    1870:	stp	x25, x26, [sp, #64]
    1874:	mov	x25, #0x0                   	// #0
    1878:	b	1888 <PySequence_Fast@plt+0x338>
    187c:	add	x25, x25, #0x1
    1880:	cmp	x24, x25
    1884:	b.le	18d0 <PySequence_Fast@plt+0x380>
    1888:	ldr	x0, [x20, x25, lsl #3]
    188c:	bl	1400 <PyLong_AsLong@plt>
    1890:	mov	x21, x0
    1894:	mov	w23, w0
    1898:	cmp	x19, w0, sxtw
    189c:	b.gt	187c <PySequence_Fast@plt+0x32c>
    18a0:	cmp	w0, w19
    18a4:	b.le	18bc <PySequence_Fast@plt+0x36c>
    18a8:	mov	w0, w19
    18ac:	add	w19, w19, #0x1
    18b0:	bl	13c0 <close@plt>
    18b4:	cmp	w23, w19
    18b8:	b.ne	18a8 <PySequence_Fast@plt+0x358>  // b.any
    18bc:	add	w19, w21, #0x1
    18c0:	add	x25, x25, #0x1
    18c4:	cmp	x24, x25
    18c8:	sxtw	x19, w19
    18cc:	b.gt	1888 <PySequence_Fast@plt+0x338>
    18d0:	ldp	x25, x26, [sp, #64]
    18d4:	cmp	x19, x22
    18d8:	b.gt	17d4 <PySequence_Fast@plt+0x284>
    18dc:	cmp	x22, x19
    18e0:	b.le	17d4 <PySequence_Fast@plt+0x284>
    18e4:	mov	w0, w19
    18e8:	add	w19, w19, #0x1
    18ec:	bl	13c0 <close@plt>
    18f0:	cmp	x22, w19, sxtw
    18f4:	b.le	17d4 <PySequence_Fast@plt+0x284>
    18f8:	mov	w0, w19
    18fc:	add	w19, w19, #0x1
    1900:	bl	13c0 <close@plt>
    1904:	cmp	x22, w19, sxtw
    1908:	b.gt	18e4 <PySequence_Fast@plt+0x394>
    190c:	b	17d4 <PySequence_Fast@plt+0x284>
    1910:	cmp	x24, #0x0
    1914:	mov	x22, #0x100                 	// #256
    1918:	mov	w19, #0x3                   	// #3
    191c:	b.gt	1868 <PySequence_Fast@plt+0x318>
    1920:	b	18e4 <PySequence_Fast@plt+0x394>
    1924:	mov	x19, #0x3                   	// #3
    1928:	b	18d4 <PySequence_Fast@plt+0x384>
    192c:	nop
    1930:	sub	sp, sp, #0x190
    1934:	adrp	x5, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    1938:	add	x8, sp, #0x160
    193c:	add	x9, sp, #0x144
    1940:	add	x10, sp, #0x140
    1944:	add	x11, sp, #0x124
    1948:	stp	x29, x30, [sp, #96]
    194c:	add	x29, sp, #0x60
    1950:	add	x12, sp, #0x120
    1954:	ldr	x5, [x5, #4000]
    1958:	add	x13, sp, #0x11c
    195c:	add	x2, sp, #0x138
    1960:	add	x3, sp, #0x134
    1964:	add	x4, sp, #0x130
    1968:	add	x6, sp, #0x12c
    196c:	add	x7, sp, #0x128
    1970:	add	x0, sp, #0x158
    1974:	stp	x0, x13, [sp]
    1978:	mov	x0, x1
    197c:	adrp	x1, 2000 <PySequence_Fast@plt+0xab0>
    1980:	stp	x12, x11, [sp, #16]
    1984:	add	x1, x1, #0x3d0
    1988:	stp	x7, x6, [sp, #32]
    198c:	add	x7, sp, #0x170
    1990:	add	x6, sp, #0x150
    1994:	stp	x4, x3, [sp, #48]
    1998:	add	x4, sp, #0x13c
    199c:	add	x3, sp, #0x148
    19a0:	stp	x2, x10, [sp, #64]
    19a4:	add	x2, sp, #0x168
    19a8:	stp	x9, x8, [sp, #80]
    19ac:	stp	x19, x20, [sp, #112]
    19b0:	bl	1440 <PyArg_ParseTuple@plt>
    19b4:	cbz	w0, 1ab0 <PySequence_Fast@plt+0x560>
    19b8:	adrp	x19, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    19bc:	ldr	x1, [sp, #352]
    19c0:	ldr	x0, [x19, #4048]
    19c4:	cmp	x1, x0
    19c8:	b.eq	19e0 <PySequence_Fast@plt+0x490>  // b.none
    19cc:	bl	14a0 <_PyInterpreterState_Get@plt>
    19d0:	mov	x20, x0
    19d4:	bl	1380 <PyInterpreterState_Main@plt>
    19d8:	cmp	x20, x0
    19dc:	b.ne	1ac8 <PySequence_Fast@plt+0x578>  // b.any
    19e0:	ldr	w0, [sp, #316]
    19e4:	cbz	w0, 19f4 <PySequence_Fast@plt+0x4a4>
    19e8:	ldr	w0, [sp, #312]
    19ec:	cmp	w0, #0x2
    19f0:	b.le	1e44 <PySequence_Fast@plt+0x8f4>
    19f4:	stp	x21, x22, [sp, #128]
    19f8:	ldr	x21, [sp, #336]
    19fc:	stp	x23, x24, [sp, #144]
    1a00:	ldr	x0, [x21, #16]
    1a04:	cmp	x0, #0x0
    1a08:	b.le	1ae8 <PySequence_Fast@plt+0x598>
    1a0c:	add	x24, x21, #0x18
    1a10:	mov	x22, #0xffffffffffffffff    	// #-1
    1a14:	mov	x20, #0x0                   	// #0
    1a18:	mov	x23, #0x7fffffff            	// #2147483647
    1a1c:	b	1a34 <PySequence_Fast@plt+0x4e4>
    1a20:	ldr	x1, [x21, #16]
    1a24:	add	x20, x20, #0x1
    1a28:	cmp	x20, x1
    1a2c:	b.ge	1ae8 <PySequence_Fast@plt+0x598>  // b.tcont
    1a30:	mov	x22, x0
    1a34:	ldr	x0, [x24, x20, lsl #3]
    1a38:	ldr	x1, [x0, #8]
    1a3c:	ldr	x1, [x1, #168]
    1a40:	tbz	w1, #24, 1a54 <PySequence_Fast@plt+0x504>
    1a44:	bl	1400 <PyLong_AsLong@plt>
    1a48:	cmp	x0, x22
    1a4c:	ccmp	x0, x23, #0x2, gt
    1a50:	b.ls	1a20 <PySequence_Fast@plt+0x4d0>  // b.plast
    1a54:	adrp	x0, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    1a58:	adrp	x1, 2000 <PySequence_Fast@plt+0xab0>
    1a5c:	add	x1, x1, #0x4b8
    1a60:	mov	x20, #0x0                   	// #0
    1a64:	ldr	x0, [x0, #4024]
    1a68:	ldr	x0, [x0]
    1a6c:	bl	1360 <PyErr_SetString@plt>
    1a70:	ldp	x21, x22, [sp, #128]
    1a74:	ldp	x23, x24, [sp, #144]
    1a78:	mov	x0, x20
    1a7c:	ldp	x29, x30, [sp, #96]
    1a80:	ldp	x19, x20, [sp, #112]
    1a84:	add	sp, sp, #0x190
    1a88:	ret
    1a8c:	ldr	x0, [x26]
    1a90:	sub	x0, x0, #0x1
    1a94:	str	x0, [x26]
    1a98:	cbz	x0, 1e90 <PySequence_Fast@plt+0x940>
    1a9c:	nop
    1aa0:	ldp	x21, x22, [sp, #128]
    1aa4:	ldp	x23, x24, [sp, #144]
    1aa8:	ldp	x25, x26, [sp, #160]
    1aac:	ldp	x27, x28, [sp, #176]
    1ab0:	mov	x20, #0x0                   	// #0
    1ab4:	mov	x0, x20
    1ab8:	ldp	x29, x30, [sp, #96]
    1abc:	ldp	x19, x20, [sp, #112]
    1ac0:	add	sp, sp, #0x190
    1ac4:	ret
    1ac8:	adrp	x0, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    1acc:	adrp	x1, 2000 <PySequence_Fast@plt+0xab0>
    1ad0:	mov	x20, #0x0                   	// #0
    1ad4:	add	x1, x1, #0x3f0
    1ad8:	ldr	x0, [x0, #4016]
    1adc:	ldr	x0, [x0]
    1ae0:	bl	1360 <PyErr_SetString@plt>
    1ae4:	b	1a78 <PySequence_Fast@plt+0x528>
    1ae8:	ldr	x0, [x19, #4048]
    1aec:	stp	x25, x26, [sp, #160]
    1af0:	mov	x26, #0x0                   	// #0
    1af4:	ldr	x1, [sp, #352]
    1af8:	stp	x27, x28, [sp, #176]
    1afc:	mov	w27, #0x0                   	// #0
    1b00:	cmp	x1, x0
    1b04:	b.eq	1b84 <PySequence_Fast@plt+0x634>  // b.none
    1b08:	adrp	x0, 2000 <PySequence_Fast@plt+0xab0>
    1b0c:	add	x0, x0, #0x440
    1b10:	bl	1410 <PyImport_ImportModule@plt>
    1b14:	mov	x26, x0
    1b18:	cbz	x0, 1aa0 <PySequence_Fast@plt+0x550>
    1b1c:	adrp	x21, 13000 <PyInit__posixsubprocess@@Base+0x10c90>
    1b20:	add	x1, x21, #0x160
    1b24:	add	x1, x1, #0x18
    1b28:	mov	x2, #0x0                   	// #0
    1b2c:	bl	1460 <_PyObject_CallMethodId@plt>
    1b30:	mov	x20, x0
    1b34:	cbz	x0, 1a8c <PySequence_Fast@plt+0x53c>
    1b38:	bl	1430 <PyObject_IsTrue@plt>
    1b3c:	mov	w27, w0
    1b40:	ldr	x1, [x20]
    1b44:	sub	x0, x1, #0x1
    1b48:	str	x0, [x20]
    1b4c:	cbz	x0, 1d3c <PySequence_Fast@plt+0x7ec>
    1b50:	cmn	w27, #0x1
    1b54:	b.eq	1c8c <PySequence_Fast@plt+0x73c>  // b.none
    1b58:	add	x1, x21, #0x160
    1b5c:	mov	x0, x26
    1b60:	add	x1, x1, #0x30
    1b64:	mov	x2, #0x0                   	// #0
    1b68:	bl	1460 <_PyObject_CallMethodId@plt>
    1b6c:	mov	x20, x0
    1b70:	cbz	x0, 1a8c <PySequence_Fast@plt+0x53c>
    1b74:	ldr	x1, [x0]
    1b78:	sub	x1, x1, #0x1
    1b7c:	str	x1, [x0]
    1b80:	cbz	x1, 1e30 <PySequence_Fast@plt+0x8e0>
    1b84:	ldr	x0, [sp, #328]
    1b88:	bl	1480 <_PySequence_BytesToCharpArray@plt>
    1b8c:	mov	x20, x0
    1b90:	cbz	x0, 1c80 <PySequence_Fast@plt+0x730>
    1b94:	ldr	x1, [x19, #4048]
    1b98:	ldr	x0, [sp, #360]
    1b9c:	cmp	x0, x1
    1ba0:	b.eq	1cd8 <PySequence_Fast@plt+0x788>  // b.none
    1ba4:	adrp	x1, 2000 <PySequence_Fast@plt+0xab0>
    1ba8:	add	x1, x1, #0x448
    1bac:	bl	1550 <PySequence_Fast@plt>
    1bb0:	mov	x25, x0
    1bb4:	cbz	x0, 1d2c <PySequence_Fast@plt+0x7dc>
    1bb8:	ldr	x22, [x0, #16]
    1bbc:	mov	x0, x22
    1bc0:	bl	13e0 <PyTuple_New@plt>
    1bc4:	mov	x23, x0
    1bc8:	cbz	x0, 2154 <PySequence_Fast@plt+0xc04>
    1bcc:	cmp	x22, #0x0
    1bd0:	mov	x21, #0x0                   	// #0
    1bd4:	b.le	1ec8 <PySequence_Fast@plt+0x978>
    1bd8:	add	x0, x25, #0x18
    1bdc:	add	x28, sp, #0x180
    1be0:	add	x24, x23, #0x18
    1be4:	str	x0, [sp, #192]
    1be8:	b	1c14 <PySequence_Fast@plt+0x6c4>
    1bec:	ldr	x1, [x25, #24]
    1bf0:	ldr	x0, [x1, x21, lsl #3]
    1bf4:	mov	x1, x28
    1bf8:	bl	1350 <PyUnicode_FSConverter@plt>
    1bfc:	cbz	w0, 1c50 <PySequence_Fast@plt+0x700>
    1c00:	ldr	x1, [sp, #384]
    1c04:	str	x1, [x24, x21, lsl #3]
    1c08:	add	x21, x21, #0x1
    1c0c:	cmp	x22, x21
    1c10:	b.eq	1ec8 <PySequence_Fast@plt+0x978>  // b.none
    1c14:	ldr	x2, [x25, #16]
    1c18:	cmp	x2, x22
    1c1c:	b.ne	1c38 <PySequence_Fast@plt+0x6e8>  // b.any
    1c20:	ldr	x1, [x25, #8]
    1c24:	ldr	x1, [x1, #168]
    1c28:	tbnz	w1, #25, 1bec <PySequence_Fast@plt+0x69c>
    1c2c:	ldr	x0, [sp, #192]
    1c30:	ldr	x0, [x0, x21, lsl #3]
    1c34:	b	1bf4 <PySequence_Fast@plt+0x6a4>
    1c38:	adrp	x0, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    1c3c:	adrp	x1, 2000 <PySequence_Fast@plt+0xab0>
    1c40:	add	x1, x1, #0x460
    1c44:	ldr	x0, [x0, #4016]
    1c48:	ldr	x0, [x0]
    1c4c:	bl	1360 <PyErr_SetString@plt>
    1c50:	mov	x0, x20
    1c54:	bl	1500 <_Py_FreeCharPArray@plt>
    1c58:	ldr	x1, [x23]
    1c5c:	sub	x1, x1, #0x1
    1c60:	str	x1, [x23]
    1c64:	cbz	x1, 1e38 <PySequence_Fast@plt+0x8e8>
    1c68:	ldr	x1, [x25]
    1c6c:	sub	x1, x1, #0x1
    1c70:	str	x1, [x25]
    1c74:	cbnz	x1, 1c80 <PySequence_Fast@plt+0x730>
    1c78:	mov	x0, x25
    1c7c:	bl	1340 <_Py_Dealloc@plt>
    1c80:	cbnz	w27, 1ccc <PySequence_Fast@plt+0x77c>
    1c84:	nop
    1c88:	cbz	x26, 1aa0 <PySequence_Fast@plt+0x550>
    1c8c:	ldr	x0, [x26]
    1c90:	sub	x0, x0, #0x1
    1c94:	str	x0, [x26]
    1c98:	cbnz	x0, 1aa0 <PySequence_Fast@plt+0x550>
    1c9c:	mov	x0, x26
    1ca0:	mov	x20, #0x0                   	// #0
    1ca4:	bl	1340 <_Py_Dealloc@plt>
    1ca8:	mov	x0, x20
    1cac:	ldp	x29, x30, [sp, #96]
    1cb0:	ldp	x19, x20, [sp, #112]
    1cb4:	ldp	x21, x22, [sp, #128]
    1cb8:	ldp	x23, x24, [sp, #144]
    1cbc:	ldp	x25, x26, [sp, #160]
    1cc0:	ldp	x27, x28, [sp, #176]
    1cc4:	add	sp, sp, #0x190
    1cc8:	ret
    1ccc:	mov	x0, x26
    1cd0:	bl	1638 <PySequence_Fast@plt+0xe8>
    1cd4:	b	1c88 <PySequence_Fast@plt+0x738>
    1cd8:	mov	x22, #0x0                   	// #0
    1cdc:	ldr	x1, [x19, #4048]
    1ce0:	ldr	x0, [sp, #344]
    1ce4:	cmp	x0, x1
    1ce8:	b.eq	1d48 <PySequence_Fast@plt+0x7f8>  // b.none
    1cec:	bl	1480 <_PySequence_BytesToCharpArray@plt>
    1cf0:	mov	x21, x0
    1cf4:	cbz	x0, 1d20 <PySequence_Fast@plt+0x7d0>
    1cf8:	ldr	x1, [x19, #4048]
    1cfc:	ldr	x0, [sp, #368]
    1d00:	cmp	x0, x1
    1d04:	b.eq	1d50 <PySequence_Fast@plt+0x800>  // b.none
    1d08:	add	x1, sp, #0x178
    1d0c:	bl	1350 <PyUnicode_FSConverter@plt>
    1d10:	cbnz	w0, 1e64 <PySequence_Fast@plt+0x914>
    1d14:	cbz	x21, 1d20 <PySequence_Fast@plt+0x7d0>
    1d18:	mov	x0, x21
    1d1c:	bl	1500 <_Py_FreeCharPArray@plt>
    1d20:	cbz	x22, 1d2c <PySequence_Fast@plt+0x7dc>
    1d24:	mov	x0, x22
    1d28:	bl	1500 <_Py_FreeCharPArray@plt>
    1d2c:	mov	x0, x20
    1d30:	bl	1500 <_Py_FreeCharPArray@plt>
    1d34:	cbz	w27, 1c88 <PySequence_Fast@plt+0x738>
    1d38:	b	1ccc <PySequence_Fast@plt+0x77c>
    1d3c:	mov	x0, x20
    1d40:	bl	1340 <_Py_Dealloc@plt>
    1d44:	b	1b50 <PySequence_Fast@plt+0x600>
    1d48:	mov	x21, #0x0                   	// #0
    1d4c:	b	1cf8 <PySequence_Fast@plt+0x7a8>
    1d50:	mov	x25, #0x0                   	// #0
    1d54:	str	xzr, [sp, #376]
    1d58:	ldr	x0, [x19, #4048]
    1d5c:	ldr	x1, [sp, #352]
    1d60:	cmp	x1, x0
    1d64:	b.eq	1ebc <PySequence_Fast@plt+0x96c>  // b.none
    1d68:	mov	x0, #0x0                   	// #0
    1d6c:	bl	13e0 <PyTuple_New@plt>
    1d70:	mov	x24, x0
    1d74:	cbz	x0, 1d14 <PySequence_Fast@plt+0x7c4>
    1d78:	mov	w28, #0x1                   	// #1
    1d7c:	bl	1470 <PyOS_BeforeFork@plt>
    1d80:	bl	1330 <fork@plt>
    1d84:	mov	w23, w0
    1d88:	cbz	w0, 1f48 <PySequence_Fast@plt+0x9f8>
    1d8c:	cmn	w0, #0x1
    1d90:	mov	w19, #0x0                   	// #0
    1d94:	b.ne	1da0 <PySequence_Fast@plt+0x850>  // b.any
    1d98:	bl	1530 <__errno_location@plt>
    1d9c:	ldr	w19, [x0]
    1da0:	ldr	x0, [sp, #376]
    1da4:	cbz	x0, 1db8 <PySequence_Fast@plt+0x868>
    1da8:	ldr	x1, [x0]
    1dac:	sub	x1, x1, #0x1
    1db0:	str	x1, [x0]
    1db4:	cbz	x1, 1ea4 <PySequence_Fast@plt+0x954>
    1db8:	cbnz	w28, 1e88 <PySequence_Fast@plt+0x938>
    1dbc:	cbz	x21, 1dc8 <PySequence_Fast@plt+0x878>
    1dc0:	mov	x0, x21
    1dc4:	bl	1500 <_Py_FreeCharPArray@plt>
    1dc8:	cbz	x22, 1dd4 <PySequence_Fast@plt+0x884>
    1dcc:	mov	x0, x22
    1dd0:	bl	1500 <_Py_FreeCharPArray@plt>
    1dd4:	mov	x0, x20
    1dd8:	bl	1500 <_Py_FreeCharPArray@plt>
    1ddc:	cbnz	w27, 1e74 <PySequence_Fast@plt+0x924>
    1de0:	cbz	x24, 1df4 <PySequence_Fast@plt+0x8a4>
    1de4:	ldr	x0, [x24]
    1de8:	sub	x0, x0, #0x1
    1dec:	str	x0, [x24]
    1df0:	cbz	x0, 1e98 <PySequence_Fast@plt+0x948>
    1df4:	cbz	x26, 1e08 <PySequence_Fast@plt+0x8b8>
    1df8:	ldr	x0, [x26]
    1dfc:	sub	x0, x0, #0x1
    1e00:	str	x0, [x26]
    1e04:	cbz	x0, 1eb0 <PySequence_Fast@plt+0x960>
    1e08:	cmn	w23, #0x1
    1e0c:	b.eq	1f18 <PySequence_Fast@plt+0x9c8>  // b.none
    1e10:	sxtw	x0, w23
    1e14:	bl	1390 <PyLong_FromLong@plt>
    1e18:	mov	x20, x0
    1e1c:	ldp	x21, x22, [sp, #128]
    1e20:	ldp	x23, x24, [sp, #144]
    1e24:	ldp	x25, x26, [sp, #160]
    1e28:	ldp	x27, x28, [sp, #176]
    1e2c:	b	1a78 <PySequence_Fast@plt+0x528>
    1e30:	bl	1340 <_Py_Dealloc@plt>
    1e34:	b	1b84 <PySequence_Fast@plt+0x634>
    1e38:	mov	x0, x23
    1e3c:	bl	1340 <_Py_Dealloc@plt>
    1e40:	b	1c68 <PySequence_Fast@plt+0x718>
    1e44:	adrp	x0, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    1e48:	adrp	x1, 2000 <PySequence_Fast@plt+0xab0>
    1e4c:	mov	x20, #0x0                   	// #0
    1e50:	add	x1, x1, #0x420
    1e54:	ldr	x0, [x0, #4024]
    1e58:	ldr	x0, [x0]
    1e5c:	bl	1360 <PyErr_SetString@plt>
    1e60:	b	1a78 <PySequence_Fast@plt+0x528>
    1e64:	ldr	x0, [sp, #376]
    1e68:	bl	14d0 <PyBytes_AsString@plt>
    1e6c:	mov	x25, x0
    1e70:	b	1d58 <PySequence_Fast@plt+0x808>
    1e74:	mov	x0, x26
    1e78:	bl	1638 <PySequence_Fast@plt+0xe8>
    1e7c:	cmp	w0, #0x0
    1e80:	csinv	w23, w23, wzr, eq  // eq = none
    1e84:	b	1de0 <PySequence_Fast@plt+0x890>
    1e88:	bl	1370 <PyOS_AfterFork_Parent@plt>
    1e8c:	b	1dbc <PySequence_Fast@plt+0x86c>
    1e90:	mov	x0, x26
    1e94:	b	1ca4 <PySequence_Fast@plt+0x754>
    1e98:	mov	x0, x24
    1e9c:	bl	1340 <_Py_Dealloc@plt>
    1ea0:	b	1df4 <PySequence_Fast@plt+0x8a4>
    1ea4:	bl	1340 <_Py_Dealloc@plt>
    1ea8:	cbz	w28, 1dbc <PySequence_Fast@plt+0x86c>
    1eac:	b	1e88 <PySequence_Fast@plt+0x938>
    1eb0:	mov	x0, x26
    1eb4:	bl	1340 <_Py_Dealloc@plt>
    1eb8:	b	1e08 <PySequence_Fast@plt+0x8b8>
    1ebc:	mov	w28, #0x0                   	// #0
    1ec0:	mov	x24, #0x0                   	// #0
    1ec4:	b	1d80 <PySequence_Fast@plt+0x830>
    1ec8:	mov	x0, x23
    1ecc:	bl	1480 <_PySequence_BytesToCharpArray@plt>
    1ed0:	ldr	x1, [x23]
    1ed4:	mov	x22, x0
    1ed8:	sub	x0, x1, #0x1
    1edc:	str	x0, [x23]
    1ee0:	cbz	x0, 1f0c <PySequence_Fast@plt+0x9bc>
    1ee4:	ldr	x0, [x25]
    1ee8:	sub	x0, x0, #0x1
    1eec:	str	x0, [x25]
    1ef0:	cbz	x0, 1efc <PySequence_Fast@plt+0x9ac>
    1ef4:	cbnz	x22, 1cdc <PySequence_Fast@plt+0x78c>
    1ef8:	b	1d2c <PySequence_Fast@plt+0x7dc>
    1efc:	mov	x0, x25
    1f00:	bl	1340 <_Py_Dealloc@plt>
    1f04:	cbnz	x22, 1cdc <PySequence_Fast@plt+0x78c>
    1f08:	b	1d2c <PySequence_Fast@plt+0x7dc>
    1f0c:	mov	x0, x23
    1f10:	bl	1340 <_Py_Dealloc@plt>
    1f14:	b	1ee4 <PySequence_Fast@plt+0x994>
    1f18:	bl	1530 <__errno_location@plt>
    1f1c:	str	w19, [x0]
    1f20:	adrp	x1, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    1f24:	mov	x20, #0x0                   	// #0
    1f28:	ldr	x1, [x1, #4032]
    1f2c:	ldr	x0, [x1]
    1f30:	bl	1300 <PyErr_SetFromErrno@plt>
    1f34:	ldp	x21, x22, [sp, #128]
    1f38:	ldp	x23, x24, [sp, #144]
    1f3c:	ldp	x25, x26, [sp, #160]
    1f40:	ldp	x27, x28, [sp, #176]
    1f44:	b	1a78 <PySequence_Fast@plt+0x528>
    1f48:	ldr	x0, [x19, #4048]
    1f4c:	ldr	x1, [sp, #352]
    1f50:	str	x1, [sp, #192]
    1f54:	cmp	x1, x0
    1f58:	b.eq	1f68 <PySequence_Fast@plt+0xa18>  // b.none
    1f5c:	bl	1420 <PyOS_AfterFork_Child@plt>
    1f60:	ldr	x0, [sp, #352]
    1f64:	str	x0, [sp, #192]
    1f68:	ldr	x0, [sp, #336]
    1f6c:	str	x0, [sp, #232]
    1f70:	ldr	w28, [sp, #312]
    1f74:	mov	x3, #0x0                   	// #0
    1f78:	add	x1, x0, #0x18
    1f7c:	str	x1, [sp, #248]
    1f80:	ldr	w1, [sp, #284]
    1f84:	str	w1, [sp, #200]
    1f88:	ldr	w1, [sp, #288]
    1f8c:	str	w1, [sp, #204]
    1f90:	sxtw	x1, w28
    1f94:	str	x1, [sp, #256]
    1f98:	ldr	w1, [sp, #292]
    1f9c:	str	w1, [sp, #208]
    1fa0:	ldr	w1, [sp, #300]
    1fa4:	str	w1, [sp, #212]
    1fa8:	ldr	w1, [sp, #308]
    1fac:	str	w1, [sp, #216]
    1fb0:	ldr	w1, [sp, #316]
    1fb4:	ldr	w27, [sp, #296]
    1fb8:	ldr	w26, [sp, #304]
    1fbc:	str	w1, [sp, #220]
    1fc0:	ldr	w1, [sp, #320]
    1fc4:	str	w1, [sp, #224]
    1fc8:	ldr	w1, [sp, #324]
    1fcc:	ldr	x0, [x0, #16]
    1fd0:	str	w1, [sp, #228]
    1fd4:	str	x0, [sp, #240]
    1fd8:	ldr	x0, [sp, #240]
    1fdc:	cmp	x0, x3
    1fe0:	b.le	2020 <PySequence_Fast@plt+0xad0>
    1fe4:	ldr	x0, [sp, #248]
    1fe8:	str	x3, [sp, #264]
    1fec:	ldr	x0, [x0, x3, lsl #3]
    1ff0:	bl	1400 <PyLong_AsLong@plt>
    1ff4:	ldp	x1, x3, [sp, #256]
    1ff8:	cmp	x0, x1
    1ffc:	b.eq	2018 <PySequence_Fast@plt+0xac8>  // b.none
    2000:	mov	x2, #0x0                   	// #0
    2004:	mov	w1, #0x1                   	// #1
    2008:	str	x3, [sp, #264]
    200c:	bl	1320 <_Py_set_inheritable_async_safe@plt>
    2010:	ldr	x3, [sp, #264]
    2014:	tbnz	w0, #31, 20b4 <PySequence_Fast@plt+0xb64>
    2018:	add	x3, x3, #0x1
    201c:	b	1fd8 <PySequence_Fast@plt+0xa88>
    2020:	ldr	w0, [sp, #204]
    2024:	cmn	w0, #0x1
    2028:	b.eq	203c <PySequence_Fast@plt+0xaec>  // b.none
    202c:	ldr	w0, [sp, #204]
    2030:	bl	13c0 <close@plt>
    2034:	cmn	w0, #0x1
    2038:	b.eq	20b4 <PySequence_Fast@plt+0xb64>  // b.none
    203c:	ldr	w0, [sp, #208]
    2040:	cmn	w0, #0x1
    2044:	b.eq	2058 <PySequence_Fast@plt+0xb08>  // b.none
    2048:	ldr	w0, [sp, #208]
    204c:	bl	13c0 <close@plt>
    2050:	cmn	w0, #0x1
    2054:	b.eq	20b4 <PySequence_Fast@plt+0xb64>  // b.none
    2058:	ldr	w0, [sp, #212]
    205c:	cmn	w0, #0x1
    2060:	b.eq	2074 <PySequence_Fast@plt+0xb24>  // b.none
    2064:	ldr	w0, [sp, #212]
    2068:	bl	13c0 <close@plt>
    206c:	cmn	w0, #0x1
    2070:	b.eq	20b4 <PySequence_Fast@plt+0xb64>  // b.none
    2074:	ldr	w0, [sp, #216]
    2078:	bl	13c0 <close@plt>
    207c:	cmn	w0, #0x1
    2080:	b.eq	20b4 <PySequence_Fast@plt+0xb64>  // b.none
    2084:	cbz	w27, 22d8 <PySequence_Fast@plt+0xd88>
    2088:	cmp	w26, #0x1
    208c:	b.hi	2160 <PySequence_Fast@plt+0xc10>  // b.pmore
    2090:	mov	w0, w26
    2094:	bl	12d0 <dup@plt>
    2098:	mov	w26, w0
    209c:	cmn	w0, #0x1
    20a0:	b.eq	20b4 <PySequence_Fast@plt+0xb64>  // b.none
    20a4:	mov	x2, #0x0                   	// #0
    20a8:	mov	w1, #0x0                   	// #0
    20ac:	bl	1320 <_Py_set_inheritable_async_safe@plt>
    20b0:	tbz	w0, #31, 2088 <PySequence_Fast@plt+0xb38>
    20b4:	adrp	x20, 2000 <PySequence_Fast@plt+0xab0>
    20b8:	add	x20, x20, #0x488
    20bc:	bl	1530 <__errno_location@plt>
    20c0:	ldr	w19, [x0]
    20c4:	cbz	w19, 22f0 <PySequence_Fast@plt+0xda0>
    20c8:	mov	x2, #0x8                   	// #8
    20cc:	mov	w0, w28
    20d0:	adrp	x1, 2000 <PySequence_Fast@plt+0xab0>
    20d4:	add	x1, x1, #0x480
    20d8:	bl	12e0 <_Py_write_noraise@plt>
    20dc:	adrp	x2, 12000 <PyInit__posixsubprocess@@Base+0xfc90>
    20e0:	add	x0, sp, #0x180
    20e4:	mov	x3, #0x9                   	// #9
    20e8:	add	x1, x0, x3
    20ec:	ldr	x2, [x2, #4056]
    20f0:	mov	w5, #0x10                  	// #16
    20f4:	ldr	x4, [x2]
    20f8:	negs	w2, w19
    20fc:	and	w6, w19, #0xf
    2100:	and	w2, w2, #0xf
    2104:	sdiv	w19, w19, w5
    2108:	csneg	w2, w6, w2, mi  // mi = first
    210c:	ldrb	w2, [x4, w2, sxtw]
    2110:	strb	w2, [x1, #-1]!
    2114:	cbz	w19, 2124 <PySequence_Fast@plt+0xbd4>
    2118:	subs	x3, x3, #0x1
    211c:	b.ne	20f8 <PySequence_Fast@plt+0xba8>  // b.any
    2120:	mov	x1, x0
    2124:	add	x0, x0, #0x9
    2128:	sub	x2, x0, x1
    212c:	mov	w0, w28
    2130:	bl	12e0 <_Py_write_noraise@plt>
    2134:	adrp	x1, 2000 <PySequence_Fast@plt+0xab0>
    2138:	mov	w0, w28
    213c:	add	x1, x1, #0x490
    2140:	mov	x2, #0x1                   	// #1
    2144:	bl	12e0 <_Py_write_noraise@plt>
    2148:	cbz	w23, 2320 <PySequence_Fast@plt+0xdd0>
    214c:	mov	w0, #0xff                  	// #255
    2150:	bl	12b0 <_exit@plt>
    2154:	mov	x0, x20
    2158:	bl	1500 <_Py_FreeCharPArray@plt>
    215c:	b	1c68 <PySequence_Fast@plt+0x718>
    2160:	ldr	w0, [sp, #200]
    2164:	cbz	w0, 2278 <PySequence_Fast@plt+0xd28>
    2168:	ldr	w0, [sp, #200]
    216c:	cmn	w0, #0x1
    2170:	b.eq	2184 <PySequence_Fast@plt+0xc34>  // b.none
    2174:	mov	w1, #0x0                   	// #0
    2178:	bl	1510 <dup2@plt>
    217c:	cmn	w0, #0x1
    2180:	b.eq	20b4 <PySequence_Fast@plt+0xb64>  // b.none
    2184:	cmp	w27, #0x1
    2188:	b.eq	2260 <PySequence_Fast@plt+0xd10>  // b.none
    218c:	cmn	w27, #0x1
    2190:	b.eq	21a8 <PySequence_Fast@plt+0xc58>  // b.none
    2194:	mov	w0, w27
    2198:	mov	w1, #0x1                   	// #1
    219c:	bl	1510 <dup2@plt>
    21a0:	cmn	w0, #0x1
    21a4:	b.eq	20b4 <PySequence_Fast@plt+0xb64>  // b.none
    21a8:	cmp	w26, #0x2
    21ac:	b.eq	228c <PySequence_Fast@plt+0xd3c>  // b.none
    21b0:	cmn	w26, #0x1
    21b4:	b.eq	21cc <PySequence_Fast@plt+0xc7c>  // b.none
    21b8:	mov	w0, w26
    21bc:	mov	w1, #0x2                   	// #2
    21c0:	bl	1510 <dup2@plt>
    21c4:	cmn	w0, #0x1
    21c8:	b.eq	20b4 <PySequence_Fast@plt+0xb64>  // b.none
    21cc:	cbz	x25, 21e0 <PySequence_Fast@plt+0xc90>
    21d0:	mov	x0, x25
    21d4:	bl	1450 <chdir@plt>
    21d8:	cmn	w0, #0x1
    21dc:	b.eq	20b4 <PySequence_Fast@plt+0xb64>  // b.none
    21e0:	ldr	w0, [sp, #224]
    21e4:	cbnz	w0, 2348 <PySequence_Fast@plt+0xdf8>
    21e8:	ldr	w0, [sp, #228]
    21ec:	cbnz	w0, 2338 <PySequence_Fast@plt+0xde8>
    21f0:	ldr	x19, [x19, #4048]
    21f4:	ldr	x0, [sp, #192]
    21f8:	cmp	x0, x19
    21fc:	cset	w25, ne  // ne = any
    2200:	cmp	x24, #0x0
    2204:	csel	w25, w25, wzr, ne  // ne = any
    2208:	bl	1530 <__errno_location@plt>
    220c:	mov	x19, x0
    2210:	cbnz	w25, 22b0 <PySequence_Fast@plt+0xd60>
    2214:	ldr	w0, [sp, #220]
    2218:	cbnz	w0, 22a4 <PySequence_Fast@plt+0xd54>
    221c:	mov	w24, #0x0                   	// #0
    2220:	b	2248 <PySequence_Fast@plt+0xcf8>
    2224:	mov	x2, x21
    2228:	mov	x1, x22
    222c:	bl	1490 <execve@plt>
    2230:	ldr	w0, [x19]
    2234:	add	w24, w24, #0x1
    2238:	cmp	w0, #0x2
    223c:	ccmp	w0, #0x14, #0x4, ne  // ne = any
    2240:	ccmp	w23, #0x0, #0x0, ne  // ne = any
    2244:	csel	w23, w0, w23, eq  // eq = none
    2248:	ldr	x0, [x20, w24, sxtw #3]
    224c:	cbz	x0, 2350 <PySequence_Fast@plt+0xe00>
    2250:	cbnz	x21, 2224 <PySequence_Fast@plt+0xcd4>
    2254:	mov	x1, x22
    2258:	bl	13a0 <execv@plt>
    225c:	b	2230 <PySequence_Fast@plt+0xce0>
    2260:	mov	w1, w27
    2264:	mov	w0, w27
    2268:	mov	x2, #0x0                   	// #0
    226c:	bl	1320 <_Py_set_inheritable_async_safe@plt>
    2270:	tbz	w0, #31, 21a8 <PySequence_Fast@plt+0xc58>
    2274:	b	20b4 <PySequence_Fast@plt+0xb64>
    2278:	mov	x2, #0x0                   	// #0
    227c:	mov	w1, #0x1                   	// #1
    2280:	bl	1320 <_Py_set_inheritable_async_safe@plt>
    2284:	tbz	w0, #31, 2184 <PySequence_Fast@plt+0xc34>
    2288:	b	20b4 <PySequence_Fast@plt+0xb64>
    228c:	mov	w0, w26
    2290:	mov	x2, #0x0                   	// #0
    2294:	mov	w1, #0x1                   	// #1
    2298:	bl	1320 <_Py_set_inheritable_async_safe@plt>
    229c:	tbz	w0, #31, 21cc <PySequence_Fast@plt+0xc7c>
    22a0:	b	20b4 <PySequence_Fast@plt+0xb64>
    22a4:	ldr	x0, [sp, #232]
    22a8:	bl	16d8 <PySequence_Fast@plt+0x188>
    22ac:	b	221c <PySequence_Fast@plt+0xccc>
    22b0:	ldr	x0, [sp, #192]
    22b4:	mov	x1, x24
    22b8:	mov	x2, #0x0                   	// #0
    22bc:	bl	14f0 <PyObject_Call@plt>
    22c0:	cbnz	x0, 2214 <PySequence_Fast@plt+0xcc4>
    22c4:	adrp	x20, 2000 <PySequence_Fast@plt+0xab0>
    22c8:	mov	w23, #0x1                   	// #1
    22cc:	add	x20, x20, #0x3a8
    22d0:	str	wzr, [x19]
    22d4:	b	20bc <PySequence_Fast@plt+0xb6c>
    22d8:	mov	w0, #0x0                   	// #0
    22dc:	bl	12d0 <dup@plt>
    22e0:	mov	w27, w0
    22e4:	cmn	w0, #0x1
    22e8:	b.ne	20a4 <PySequence_Fast@plt+0xb54>  // b.any
    22ec:	b	20b4 <PySequence_Fast@plt+0xb64>
    22f0:	adrp	x1, 2000 <PySequence_Fast@plt+0xab0>
    22f4:	add	x1, x1, #0x4a0
    22f8:	mov	x2, #0x12                  	// #18
    22fc:	mov	w0, w28
    2300:	bl	12e0 <_Py_write_noraise@plt>
    2304:	mov	x0, x20
    2308:	bl	12c0 <strlen@plt>
    230c:	mov	x1, x20
    2310:	mov	x2, x0
    2314:	mov	w0, w28
    2318:	bl	12e0 <_Py_write_noraise@plt>
    231c:	b	214c <PySequence_Fast@plt+0xbfc>
    2320:	mov	w0, w28
    2324:	adrp	x1, 2000 <PySequence_Fast@plt+0xab0>
    2328:	mov	x2, #0x6                   	// #6
    232c:	add	x1, x1, #0x498
    2330:	bl	12e0 <_Py_write_noraise@plt>
    2334:	b	214c <PySequence_Fast@plt+0xbfc>
    2338:	bl	14e0 <setsid@plt>
    233c:	cmn	w0, #0x1
    2340:	b.ne	21f0 <PySequence_Fast@plt+0xca0>  // b.any
    2344:	b	20b4 <PySequence_Fast@plt+0xb64>
    2348:	bl	13b0 <_Py_RestoreSignals@plt>
    234c:	b	21e8 <PySequence_Fast@plt+0xc98>
    2350:	adrp	x20, 2000 <PySequence_Fast@plt+0xab0>
    2354:	add	x20, x20, #0x488
    2358:	cbz	w23, 2368 <PySequence_Fast@plt+0xe18>
    235c:	str	w23, [x19]
    2360:	mov	w23, #0x1                   	// #1
    2364:	b	20bc <PySequence_Fast@plt+0xb6c>
    2368:	mov	w23, #0x1                   	// #1
    236c:	b	20bc <PySequence_Fast@plt+0xb6c>

0000000000002370 <PyInit__posixsubprocess@@Base>:
    2370:	adrp	x0, 13000 <PyInit__posixsubprocess@@Base+0x10c90>
    2374:	add	x0, x0, #0x160
    2378:	add	x0, x0, #0x48
    237c:	mov	w1, #0x3f5                 	// #1013
    2380:	b	13f0 <PyModule_Create2@plt>

Disassembly of section .fini:

0000000000002384 <.fini>:
    2384:	stp	x29, x30, [sp, #-16]!
    2388:	mov	x29, sp
    238c:	ldp	x29, x30, [sp], #16
    2390:	ret
