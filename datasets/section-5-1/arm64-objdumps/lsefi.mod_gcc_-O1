
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lsefi.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x210>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #32]
   8:	add	x29, sp, #0x20
   c:	add	x3, sp, #0xa8
  10:	mov	x2, #0x0                   	// #0
  14:	mov	x1, #0x0                   	// #0
  18:	mov	w0, #0x0                   	// #0
  1c:	bl	0 <grub_efi_locate_handle>
  20:	str	x0, [sp, #136]
  24:	ldr	x0, [sp, #168]
  28:	cbz	x0, 1c4 <grub_mod_init-0x4c>
  2c:	stp	x19, x20, [sp, #48]
  30:	stp	x21, x22, [sp, #64]
  34:	stp	x23, x24, [sp, #80]
  38:	stp	x25, x26, [sp, #96]
  3c:	stp	x27, x28, [sp, #112]
  40:	mov	w25, #0x0                   	// #0
  44:	mov	x0, #0x0                   	// #0
  48:	adrp	x28, 0 <grub_mod_init-0x210>
  4c:	adrp	x27, 0 <grub_mod_init-0x210>
  50:	b	74 <grub_mod_init-0x19c>
  54:	adrp	x0, 0 <grub_mod_init-0x210>
  58:	ldr	x0, [x0]
  5c:	bl	0 <grub_printf>
  60:	add	w25, w25, #0x1
  64:	mov	w0, w25
  68:	ldr	x1, [sp, #168]
  6c:	cmp	x1, w25, uxtw
  70:	b.ls	1b0 <grub_mod_init-0x60>  // b.plast
  74:	ldr	x1, [sp, #136]
  78:	ldr	x20, [x1, x0, lsl #3]
  7c:	mov	x1, x20
  80:	ldr	x0, [x28]
  84:	bl	0 <grub_printf>
  88:	mov	x0, x20
  8c:	bl	0 <grub_efi_get_device_path>
  90:	mov	x19, x0
  94:	cbz	x0, ac <grub_mod_init-0x164>
  98:	adrp	x0, 0 <grub_mod_init-0x210>
  9c:	ldr	x0, [x0]
  a0:	bl	0 <grub_printf>
  a4:	mov	x0, x19
  a8:	bl	0 <grub_efi_print_device_path>
  ac:	adrp	x0, 0 <grub_mod_init-0x210>
  b0:	ldr	x0, [x0]
  b4:	ldr	x0, [x0]
  b8:	ldr	x0, [x0, #96]
  bc:	ldr	x3, [x0, #304]
  c0:	add	x2, sp, #0x98
  c4:	add	x1, sp, #0xa0
  c8:	mov	x0, x20
  cc:	blr	x3
  d0:	cbnz	x0, 54 <grub_mod_init-0x1bc>
  d4:	ldr	x0, [sp, #152]
  d8:	mov	w23, #0x0                   	// #0
  dc:	mov	x21, #0x0                   	// #0
  e0:	adrp	x24, 0 <grub_mod_init-0x210>
  e4:	mov	x22, #0x10                  	// #16
  e8:	adrp	x26, 0 <grub_mod_init-0x210>
  ec:	cbnz	x0, 12c <grub_mod_init-0xe4>
  f0:	b	60 <grub_mod_init-0x1b0>
  f4:	cmp	w19, #0x27
  f8:	b.hi	160 <grub_mod_init-0xb0>  // b.pmore
  fc:	ldr	x1, [x24]
 100:	ubfiz	x0, x19, #1, #32
 104:	add	x19, x0, w19, uxtw
 108:	add	x19, x1, x19, lsl #3
 10c:	ldr	x1, [x19, #16]
 110:	ldr	x0, [x26]
 114:	bl	0 <grub_printf>
 118:	add	w23, w23, #0x1
 11c:	mov	w21, w23
 120:	ldr	x0, [sp, #152]
 124:	cmp	x0, w23, uxtw
 128:	b.ls	60 <grub_mod_init-0x1b0>  // b.plast
 12c:	lsl	x21, x21, #3
 130:	ldr	x20, [x24]
 134:	mov	w19, #0x0                   	// #0
 138:	mov	x2, x22
 13c:	mov	x1, x20
 140:	ldr	x0, [sp, #160]
 144:	ldr	x0, [x0, x21]
 148:	bl	0 <grub_memcmp>
 14c:	cbz	w0, f4 <grub_mod_init-0x11c>
 150:	add	w19, w19, #0x1
 154:	add	x20, x20, #0x18
 158:	cmp	w19, #0x28
 15c:	b.ne	138 <grub_mod_init-0xd8>  // b.any
 160:	ldr	x0, [sp, #160]
 164:	ldr	x0, [x0, x21]
 168:	ldrb	w7, [x0, #11]
 16c:	ldrb	w6, [x0, #10]
 170:	ldrb	w5, [x0, #9]
 174:	ldrb	w4, [x0, #8]
 178:	ldrh	w3, [x0, #6]
 17c:	ldrh	w2, [x0, #4]
 180:	ldr	w1, [x0]
 184:	ldrb	w8, [x0, #15]
 188:	str	w8, [sp, #24]
 18c:	ldrb	w8, [x0, #14]
 190:	str	w8, [sp, #16]
 194:	ldrb	w8, [x0, #13]
 198:	str	w8, [sp, #8]
 19c:	ldrb	w0, [x0, #12]
 1a0:	str	w0, [sp]
 1a4:	ldr	x0, [x27]
 1a8:	bl	0 <grub_printf>
 1ac:	b	118 <grub_mod_init-0xf8>
 1b0:	ldp	x19, x20, [sp, #48]
 1b4:	ldp	x21, x22, [sp, #64]
 1b8:	ldp	x23, x24, [sp, #80]
 1bc:	ldp	x25, x26, [sp, #96]
 1c0:	ldp	x27, x28, [sp, #112]
 1c4:	mov	w0, #0x0                   	// #0
 1c8:	ldp	x29, x30, [sp, #32]
 1cc:	add	sp, sp, #0xb0
 1d0:	ret
 1d4:	nop
	...

0000000000000210 <grub_mod_init>:
 210:	stp	x29, x30, [sp, #-16]!
 214:	mov	x29, sp
 218:	mov	w4, #0x0                   	// #0
 21c:	adrp	x0, 0 <grub_mod_init-0x210>
 220:	ldr	x3, [x0]
 224:	mov	x2, #0x0                   	// #0
 228:	adrp	x0, 0 <grub_mod_init-0x210>
 22c:	ldr	x1, [x0]
 230:	adrp	x0, 0 <grub_mod_init-0x210>
 234:	ldr	x0, [x0]
 238:	bl	0 <grub_register_command_prio>
 23c:	adrp	x1, 0 <grub_mod_init-0x210>
 240:	ldr	x1, [x1]
 244:	str	x0, [x1]
 248:	ldp	x29, x30, [sp], #16
 24c:	ret
	...

0000000000000270 <grub_mod_fini>:
 270:	stp	x29, x30, [sp, #-16]!
 274:	mov	x29, sp
 278:	adrp	x0, 0 <grub_mod_init-0x210>
 27c:	ldr	x0, [x0]
 280:	ldr	x0, [x0]
 284:	bl	0 <grub_unregister_command>
 288:	ldp	x29, x30, [sp], #16
 28c:	ret
	...
