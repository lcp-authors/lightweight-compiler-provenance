
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libmpfr.so.6.0.2_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000b9c8 <.init>:
    b9c8:	stp	x29, x30, [sp, #-16]!
    b9cc:	mov	x29, sp
    b9d0:	bl	169b8 <mpfr_mpz_clear@@Base+0x68>
    b9d4:	ldp	x29, x30, [sp], #16
    b9d8:	ret

Disassembly of section .plt:

000000000000b9e0 <mpfr_agm@plt-0x20>:
    b9e0:	stp	x16, x30, [sp, #-16]!
    b9e4:	adrp	x16, 81000 <__gmpfr_l2b@@Base+0x200>
    b9e8:	ldr	x17, [x16, #4088]
    b9ec:	add	x16, x16, #0xff8
    b9f0:	br	x17
    b9f4:	nop
    b9f8:	nop
    b9fc:	nop

000000000000ba00 <mpfr_agm@plt>:
    ba00:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ba04:	ldr	x17, [x16]
    ba08:	add	x16, x16, #0x0
    ba0c:	br	x17

000000000000ba10 <memcpy@plt>:
    ba10:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ba14:	ldr	x17, [x16, #8]
    ba18:	add	x16, x16, #0x8
    ba1c:	br	x17

000000000000ba20 <__gmpz_get_si@plt>:
    ba20:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ba24:	ldr	x17, [x16, #16]
    ba28:	add	x16, x16, #0x10
    ba2c:	br	x17

000000000000ba30 <__gmpz_tdiv_r_2exp@plt>:
    ba30:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ba34:	ldr	x17, [x16, #24]
    ba38:	add	x16, x16, #0x18
    ba3c:	br	x17

000000000000ba40 <mpfr_set_ld@plt>:
    ba40:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ba44:	ldr	x17, [x16, #32]
    ba48:	add	x16, x16, #0x20
    ba4c:	br	x17

000000000000ba50 <mpfr_mul_ui@plt>:
    ba50:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ba54:	ldr	x17, [x16, #40]
    ba58:	add	x16, x16, #0x28
    ba5c:	br	x17

000000000000ba60 <__gmpn_tdiv_qr@plt>:
    ba60:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ba64:	ldr	x17, [x16, #48]
    ba68:	add	x16, x16, #0x30
    ba6c:	br	x17

000000000000ba70 <mpfr_cot@plt>:
    ba70:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ba74:	ldr	x17, [x16, #56]
    ba78:	add	x16, x16, #0x38
    ba7c:	br	x17

000000000000ba80 <mpfr_set_si_2exp@plt>:
    ba80:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ba84:	ldr	x17, [x16, #64]
    ba88:	add	x16, x16, #0x40
    ba8c:	br	x17

000000000000ba90 <__gmpz_scan1@plt>:
    ba90:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ba94:	ldr	x17, [x16, #72]
    ba98:	add	x16, x16, #0x48
    ba9c:	br	x17

000000000000baa0 <mpfr_random_deviate_value@plt>:
    baa0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    baa4:	ldr	x17, [x16, #80]
    baa8:	add	x16, x16, #0x50
    baac:	br	x17

000000000000bab0 <strlen@plt>:
    bab0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bab4:	ldr	x17, [x16, #88]
    bab8:	add	x16, x16, #0x58
    babc:	br	x17

000000000000bac0 <fputs@plt>:
    bac0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bac4:	ldr	x17, [x16, #96]
    bac8:	add	x16, x16, #0x60
    bacc:	br	x17

000000000000bad0 <__gmpz_tdiv_qr@plt>:
    bad0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bad4:	ldr	x17, [x16, #104]
    bad8:	add	x16, x16, #0x68
    badc:	br	x17

000000000000bae0 <__gmpn_copyd@plt>:
    bae0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bae4:	ldr	x17, [x16, #112]
    bae8:	add	x16, x16, #0x70
    baec:	br	x17

000000000000baf0 <mpfr_cosh@plt>:
    baf0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    baf4:	ldr	x17, [x16, #120]
    baf8:	add	x16, x16, #0x78
    bafc:	br	x17

000000000000bb00 <mpfr_tanh@plt>:
    bb00:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bb04:	ldr	x17, [x16, #128]
    bb08:	add	x16, x16, #0x80
    bb0c:	br	x17

000000000000bb10 <mpfr_free_cache@plt>:
    bb10:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bb14:	ldr	x17, [x16, #136]
    bb18:	add	x16, x16, #0x88
    bb1c:	br	x17

000000000000bb20 <mpfr_ui_pow_ui@plt>:
    bb20:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bb24:	ldr	x17, [x16, #144]
    bb28:	add	x16, x16, #0x90
    bb2c:	br	x17

000000000000bb30 <__gmpz_tdiv_q@plt>:
    bb30:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bb34:	ldr	x17, [x16, #152]
    bb38:	add	x16, x16, #0x98
    bb3c:	br	x17

000000000000bb40 <__gmpfr_ceil_exp2@plt>:
    bb40:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bb44:	ldr	x17, [x16, #160]
    bb48:	add	x16, x16, #0xa0
    bb4c:	br	x17

000000000000bb50 <mpfr_set_nan@plt>:
    bb50:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bb54:	ldr	x17, [x16, #168]
    bb58:	add	x16, x16, #0xa8
    bb5c:	br	x17

000000000000bb60 <__gmpz_cdiv_q_2exp@plt>:
    bb60:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bb64:	ldr	x17, [x16, #176]
    bb68:	add	x16, x16, #0xb0
    bb6c:	br	x17

000000000000bb70 <mpfr_sub@plt>:
    bb70:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bb74:	ldr	x17, [x16, #184]
    bb78:	add	x16, x16, #0xb8
    bb7c:	br	x17

000000000000bb80 <__gmpn_set_str@plt>:
    bb80:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bb84:	ldr	x17, [x16, #192]
    bb88:	add	x16, x16, #0xc0
    bb8c:	br	x17

000000000000bb90 <mpfr_mul_2si@plt>:
    bb90:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bb94:	ldr	x17, [x16, #200]
    bb98:	add	x16, x16, #0xc8
    bb9c:	br	x17

000000000000bba0 <mpfr_gamma_one_and_two_third@plt>:
    bba0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bba4:	ldr	x17, [x16, #208]
    bba8:	add	x16, x16, #0xd0
    bbac:	br	x17

000000000000bbb0 <mpfr_cmp_z@plt>:
    bbb0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bbb4:	ldr	x17, [x16, #216]
    bbb8:	add	x16, x16, #0xd8
    bbbc:	br	x17

000000000000bbc0 <mpfr_fits_intmax_p@plt>:
    bbc0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bbc4:	ldr	x17, [x16, #224]
    bbc8:	add	x16, x16, #0xe0
    bbcc:	br	x17

000000000000bbd0 <mpfr_init@plt>:
    bbd0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bbd4:	ldr	x17, [x16, #232]
    bbd8:	add	x16, x16, #0xe8
    bbdc:	br	x17

000000000000bbe0 <mpfr_tan@plt>:
    bbe0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bbe4:	ldr	x17, [x16, #240]
    bbe8:	add	x16, x16, #0xf0
    bbec:	br	x17

000000000000bbf0 <mpfr_fdump@plt>:
    bbf0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bbf4:	ldr	x17, [x16, #248]
    bbf8:	add	x16, x16, #0xf8
    bbfc:	br	x17

000000000000bc00 <__gmpz_cmpabs_ui@plt>:
    bc00:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bc04:	ldr	x17, [x16, #256]
    bc08:	add	x16, x16, #0x100
    bc0c:	br	x17

000000000000bc10 <mpfr_strtofr@plt>:
    bc10:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bc14:	ldr	x17, [x16, #264]
    bc18:	add	x16, x16, #0x108
    bc1c:	br	x17

000000000000bc20 <mpfr_vasnprintf_aux@plt>:
    bc20:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bc24:	ldr	x17, [x16, #272]
    bc28:	add	x16, x16, #0x110
    bc2c:	br	x17

000000000000bc30 <__gmpz_sub_ui@plt>:
    bc30:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bc34:	ldr	x17, [x16, #280]
    bc38:	add	x16, x16, #0x118
    bc3c:	br	x17

000000000000bc40 <mpfr_ubf_zexp2exp@plt>:
    bc40:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bc44:	ldr	x17, [x16, #288]
    bc48:	add	x16, x16, #0x120
    bc4c:	br	x17

000000000000bc50 <__gmp_get_memory_functions@plt>:
    bc50:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bc54:	ldr	x17, [x16, #296]
    bc58:	add	x16, x16, #0x128
    bc5c:	br	x17

000000000000bc60 <__gmpz_sqrt@plt>:
    bc60:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bc64:	ldr	x17, [x16, #304]
    bc68:	add	x16, x16, #0x130
    bc6c:	br	x17

000000000000bc70 <__gmpfr_int_ceil_log2@plt>:
    bc70:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bc74:	ldr	x17, [x16, #312]
    bc78:	add	x16, x16, #0x138
    bc7c:	br	x17

000000000000bc80 <mpfr_mulhigh_n@plt>:
    bc80:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bc84:	ldr	x17, [x16, #320]
    bc88:	add	x16, x16, #0x140
    bc8c:	br	x17

000000000000bc90 <mpfr_set_erangeflag@plt>:
    bc90:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bc94:	ldr	x17, [x16, #328]
    bc98:	add	x16, x16, #0x148
    bc9c:	br	x17

000000000000bca0 <mpfr_get_ui@plt>:
    bca0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bca4:	ldr	x17, [x16, #336]
    bca8:	add	x16, x16, #0x150
    bcac:	br	x17

000000000000bcb0 <__gmpz_set_ui@plt>:
    bcb0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bcb4:	ldr	x17, [x16, #344]
    bcb8:	add	x16, x16, #0x158
    bcbc:	br	x17

000000000000bcc0 <__gmpn_lshift@plt>:
    bcc0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bcc4:	ldr	x17, [x16, #352]
    bcc8:	add	x16, x16, #0x160
    bccc:	br	x17

000000000000bcd0 <__gmpfr_floor_log2@plt>:
    bcd0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bcd4:	ldr	x17, [x16, #360]
    bcd8:	add	x16, x16, #0x168
    bcdc:	br	x17

000000000000bce0 <__gmpn_rshift@plt>:
    bce0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bce4:	ldr	x17, [x16, #368]
    bce8:	add	x16, x16, #0x170
    bcec:	br	x17

000000000000bcf0 <mpfr_cmp_d@plt>:
    bcf0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bcf4:	ldr	x17, [x16, #376]
    bcf8:	add	x16, x16, #0x178
    bcfc:	br	x17

000000000000bd00 <__cxa_finalize@plt>:
    bd00:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bd04:	ldr	x17, [x16, #384]
    bd08:	add	x16, x16, #0x180
    bd0c:	br	x17

000000000000bd10 <sprintf@plt>:
    bd10:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bd14:	ldr	x17, [x16, #392]
    bd18:	add	x16, x16, #0x188
    bd1c:	br	x17

000000000000bd20 <putc@plt>:
    bd20:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bd24:	ldr	x17, [x16, #400]
    bd28:	add	x16, x16, #0x190
    bd2c:	br	x17

000000000000bd30 <mpfr_get_d@plt>:
    bd30:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bd34:	ldr	x17, [x16, #408]
    bd38:	add	x16, x16, #0x198
    bd3c:	br	x17

000000000000bd40 <mpfr_set_f@plt>:
    bd40:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bd44:	ldr	x17, [x16, #416]
    bd48:	add	x16, x16, #0x1a0
    bd4c:	br	x17

000000000000bd50 <mpfr_mul@plt>:
    bd50:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bd54:	ldr	x17, [x16, #424]
    bd58:	add	x16, x16, #0x1a8
    bd5c:	br	x17

000000000000bd60 <mpfr_sub_z@plt>:
    bd60:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bd64:	ldr	x17, [x16, #432]
    bd68:	add	x16, x16, #0x1b0
    bd6c:	br	x17

000000000000bd70 <mpfr_neg@plt>:
    bd70:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bd74:	ldr	x17, [x16, #440]
    bd78:	add	x16, x16, #0x1b8
    bd7c:	br	x17

000000000000bd80 <mpfr_exp10@plt>:
    bd80:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bd84:	ldr	x17, [x16, #448]
    bd88:	add	x16, x16, #0x1c0
    bd8c:	br	x17

000000000000bd90 <mpfr_pow@plt>:
    bd90:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bd94:	ldr	x17, [x16, #456]
    bd98:	add	x16, x16, #0x1c8
    bd9c:	br	x17

000000000000bda0 <fputc@plt>:
    bda0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bda4:	ldr	x17, [x16, #464]
    bda8:	add	x16, x16, #0x1d0
    bdac:	br	x17

000000000000bdb0 <mpfr_cmp2@plt>:
    bdb0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bdb4:	ldr	x17, [x16, #472]
    bdb8:	add	x16, x16, #0x1d8
    bdbc:	br	x17

000000000000bdc0 <mpfr_tmp_allocate@plt>:
    bdc0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bdc4:	ldr	x17, [x16, #480]
    bdc8:	add	x16, x16, #0x1e0
    bdcc:	br	x17

000000000000bdd0 <mpfr_nextbelow@plt>:
    bdd0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bdd4:	ldr	x17, [x16, #488]
    bdd8:	add	x16, x16, #0x1e8
    bddc:	br	x17

000000000000bde0 <__gmpz_sub@plt>:
    bde0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bde4:	ldr	x17, [x16, #496]
    bde8:	add	x16, x16, #0x1f0
    bdec:	br	x17

000000000000bdf0 <mpfr_random_deviate_clear@plt>:
    bdf0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bdf4:	ldr	x17, [x16, #504]
    bdf8:	add	x16, x16, #0x1f8
    bdfc:	br	x17

000000000000be00 <mpfr_get_z@plt>:
    be00:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    be04:	ldr	x17, [x16, #512]
    be08:	add	x16, x16, #0x200
    be0c:	br	x17

000000000000be10 <__gmpn_com@plt>:
    be10:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    be14:	ldr	x17, [x16, #520]
    be18:	add	x16, x16, #0x208
    be1c:	br	x17

000000000000be20 <mpfr_exp_3@plt>:
    be20:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    be24:	ldr	x17, [x16, #528]
    be28:	add	x16, x16, #0x210
    be2c:	br	x17

000000000000be30 <__gmpz_fdiv_q@plt>:
    be30:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    be34:	ldr	x17, [x16, #536]
    be38:	add	x16, x16, #0x218
    be3c:	br	x17

000000000000be40 <mpfr_set_d@plt>:
    be40:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    be44:	ldr	x17, [x16, #544]
    be48:	add	x16, x16, #0x220
    be4c:	br	x17

000000000000be50 <mpfr_fits_ulong_p@plt>:
    be50:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    be54:	ldr	x17, [x16, #552]
    be58:	add	x16, x16, #0x228
    be5c:	br	x17

000000000000be60 <__gmpn_sub_n@plt>:
    be60:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    be64:	ldr	x17, [x16, #560]
    be68:	add	x16, x16, #0x230
    be6c:	br	x17

000000000000be70 <mpfr_clear_cache@plt>:
    be70:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    be74:	ldr	x17, [x16, #568]
    be78:	add	x16, x16, #0x238
    be7c:	br	x17

000000000000be80 <mpfr_div_ui2@plt>:
    be80:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    be84:	ldr	x17, [x16, #576]
    be88:	add	x16, x16, #0x240
    be8c:	br	x17

000000000000be90 <__gmpz_fits_slong_p@plt>:
    be90:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    be94:	ldr	x17, [x16, #584]
    be98:	add	x16, x16, #0x248
    be9c:	br	x17

000000000000bea0 <localeconv@plt>:
    bea0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bea4:	ldr	x17, [x16, #592]
    bea8:	add	x16, x16, #0x250
    beac:	br	x17

000000000000beb0 <__gmpz_cdiv_q_ui@plt>:
    beb0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    beb4:	ldr	x17, [x16, #600]
    beb8:	add	x16, x16, #0x258
    bebc:	br	x17

000000000000bec0 <mpfr_frac@plt>:
    bec0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bec4:	ldr	x17, [x16, #608]
    bec8:	add	x16, x16, #0x260
    becc:	br	x17

000000000000bed0 <mpfr_set_prec@plt>:
    bed0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bed4:	ldr	x17, [x16, #616]
    bed8:	add	x16, x16, #0x268
    bedc:	br	x17

000000000000bee0 <__gmpz_cmpabs@plt>:
    bee0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bee4:	ldr	x17, [x16, #624]
    bee8:	add	x16, x16, #0x270
    beec:	br	x17

000000000000bef0 <mpfr_pow_z@plt>:
    bef0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bef4:	ldr	x17, [x16, #632]
    bef8:	add	x16, x16, #0x278
    befc:	br	x17

000000000000bf00 <mpfr_powerof2_raw@plt>:
    bf00:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bf04:	ldr	x17, [x16, #640]
    bf08:	add	x16, x16, #0x280
    bf0c:	br	x17

000000000000bf10 <__gmpz_setbit@plt>:
    bf10:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bf14:	ldr	x17, [x16, #648]
    bf18:	add	x16, x16, #0x288
    bf1c:	br	x17

000000000000bf20 <__gmpfr_isqrt@plt>:
    bf20:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bf24:	ldr	x17, [x16, #656]
    bf28:	add	x16, x16, #0x290
    bf2c:	br	x17

000000000000bf30 <mpfr_rint_trunc@plt>:
    bf30:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bf34:	ldr	x17, [x16, #664]
    bf38:	add	x16, x16, #0x298
    bf3c:	br	x17

000000000000bf40 <mpfr_overflow@plt>:
    bf40:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bf44:	ldr	x17, [x16, #672]
    bf48:	add	x16, x16, #0x2a0
    bf4c:	br	x17

000000000000bf50 <mpfr_cmp_ui_2exp@plt>:
    bf50:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bf54:	ldr	x17, [x16, #680]
    bf58:	add	x16, x16, #0x2a8
    bf5c:	br	x17

000000000000bf60 <__gmpz_divexact@plt>:
    bf60:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bf64:	ldr	x17, [x16, #688]
    bf68:	add	x16, x16, #0x2b0
    bf6c:	br	x17

000000000000bf70 <mpfr_pow_ui@plt>:
    bf70:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bf74:	ldr	x17, [x16, #696]
    bf78:	add	x16, x16, #0x2b8
    bf7c:	br	x17

000000000000bf80 <mpfr_ubf_mul_exact@plt>:
    bf80:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bf84:	ldr	x17, [x16, #704]
    bf88:	add	x16, x16, #0x2c0
    bf8c:	br	x17

000000000000bf90 <mpfr_mpz_init@plt>:
    bf90:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bf94:	ldr	x17, [x16, #712]
    bf98:	add	x16, x16, #0x2c8
    bf9c:	br	x17

000000000000bfa0 <__gmpz_set@plt>:
    bfa0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bfa4:	ldr	x17, [x16, #720]
    bfa8:	add	x16, x16, #0x2d0
    bfac:	br	x17

000000000000bfb0 <mpfr_bernoulli_freecache@plt>:
    bfb0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bfb4:	ldr	x17, [x16, #728]
    bfb8:	add	x16, x16, #0x2d8
    bfbc:	br	x17

000000000000bfc0 <__gmpz_fac_ui@plt>:
    bfc0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bfc4:	ldr	x17, [x16, #736]
    bfc8:	add	x16, x16, #0x2e0
    bfcc:	br	x17

000000000000bfd0 <__gmpfr_vasprintf@plt>:
    bfd0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bfd4:	ldr	x17, [x16, #744]
    bfd8:	add	x16, x16, #0x2e8
    bfdc:	br	x17

000000000000bfe0 <__gmpz_tstbit@plt>:
    bfe0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bfe4:	ldr	x17, [x16, #752]
    bfe8:	add	x16, x16, #0x2f0
    bfec:	br	x17

000000000000bff0 <__gmpz_mul@plt>:
    bff0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    bff4:	ldr	x17, [x16, #760]
    bff8:	add	x16, x16, #0x2f8
    bffc:	br	x17

000000000000c000 <__gmpfr_set_uj_2exp@plt>:
    c000:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c004:	ldr	x17, [x16, #768]
    c008:	add	x16, x16, #0x300
    c00c:	br	x17

000000000000c010 <mpfr_fits_uintmax_p@plt>:
    c010:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c014:	ldr	x17, [x16, #776]
    c018:	add	x16, x16, #0x308
    c01c:	br	x17

000000000000c020 <mpfr_sincos_fast@plt>:
    c020:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c024:	ldr	x17, [x16, #784]
    c028:	add	x16, x16, #0x310
    c02c:	br	x17

000000000000c030 <mpfr_z_sub@plt>:
    c030:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c034:	ldr	x17, [x16, #792]
    c038:	add	x16, x16, #0x318
    c03c:	br	x17

000000000000c040 <__gmpz_tdiv_q_ui@plt>:
    c040:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c044:	ldr	x17, [x16, #800]
    c048:	add	x16, x16, #0x320
    c04c:	br	x17

000000000000c050 <__gmp_vasprintf@plt>:
    c050:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c054:	ldr	x17, [x16, #808]
    c058:	add	x16, x16, #0x328
    c05c:	br	x17

000000000000c060 <mpfr_sub_si@plt>:
    c060:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c064:	ldr	x17, [x16, #816]
    c068:	add	x16, x16, #0x330
    c06c:	br	x17

000000000000c070 <mpfr_clear@plt>:
    c070:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c074:	ldr	x17, [x16, #824]
    c078:	add	x16, x16, #0x338
    c07c:	br	x17

000000000000c080 <__gmpfr_set_sj@plt>:
    c080:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c084:	ldr	x17, [x16, #832]
    c088:	add	x16, x16, #0x340
    c08c:	br	x17

000000000000c090 <mpfr_log@plt>:
    c090:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c094:	ldr	x17, [x16, #840]
    c098:	add	x16, x16, #0x348
    c09c:	br	x17

000000000000c0a0 <mpfr_lgamma@plt>:
    c0a0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c0a4:	ldr	x17, [x16, #848]
    c0a8:	add	x16, x16, #0x350
    c0ac:	br	x17

000000000000c0b0 <__gmpfr_cuberoot@plt>:
    c0b0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c0b4:	ldr	x17, [x16, #856]
    c0b8:	add	x16, x16, #0x358
    c0bc:	br	x17

000000000000c0c0 <__gmp_asprintf@plt>:
    c0c0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c0c4:	ldr	x17, [x16, #864]
    c0c8:	add	x16, x16, #0x360
    c0cc:	br	x17

000000000000c0d0 <mpfr_setmax@plt>:
    c0d0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c0d4:	ldr	x17, [x16, #872]
    c0d8:	add	x16, x16, #0x368
    c0dc:	br	x17

000000000000c0e0 <__gmpz_swap@plt>:
    c0e0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c0e4:	ldr	x17, [x16, #880]
    c0e8:	add	x16, x16, #0x370
    c0ec:	br	x17

000000000000c0f0 <mpfr_sub1sp@plt>:
    c0f0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c0f4:	ldr	x17, [x16, #888]
    c0f8:	add	x16, x16, #0x378
    c0fc:	br	x17

000000000000c100 <__gmpz_mul_ui@plt>:
    c100:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c104:	ldr	x17, [x16, #896]
    c108:	add	x16, x16, #0x380
    c10c:	br	x17

000000000000c110 <memset@plt>:
    c110:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c114:	ldr	x17, [x16, #904]
    c118:	add	x16, x16, #0x388
    c11c:	br	x17

000000000000c120 <mpfr_nextabove@plt>:
    c120:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c124:	ldr	x17, [x16, #912]
    c128:	add	x16, x16, #0x390
    c12c:	br	x17

000000000000c130 <__gmpz_fdiv_q_2exp@plt>:
    c130:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c134:	ldr	x17, [x16, #920]
    c138:	add	x16, x16, #0x398
    c13c:	br	x17

000000000000c140 <mpfr_divhigh_n@plt>:
    c140:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c144:	ldr	x17, [x16, #928]
    c148:	add	x16, x16, #0x3a0
    c14c:	br	x17

000000000000c150 <mpfr_random_deviate_init@plt>:
    c150:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c154:	ldr	x17, [x16, #936]
    c158:	add	x16, x16, #0x3a8
    c15c:	br	x17

000000000000c160 <mpfr_integer_p@plt>:
    c160:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c164:	ldr	x17, [x16, #944]
    c168:	add	x16, x16, #0x3b0
    c16c:	br	x17

000000000000c170 <mpfr_mpz_clear@plt>:
    c170:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c174:	ldr	x17, [x16, #952]
    c178:	add	x16, x16, #0x3b8
    c17c:	br	x17

000000000000c180 <__gmpf_set_ui@plt>:
    c180:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c184:	ldr	x17, [x16, #960]
    c188:	add	x16, x16, #0x3c0
    c18c:	br	x17

000000000000c190 <mpfr_get_si@plt>:
    c190:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c194:	ldr	x17, [x16, #968]
    c198:	add	x16, x16, #0x3c8
    c19c:	br	x17

000000000000c1a0 <mpfr_add@plt>:
    c1a0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c1a4:	ldr	x17, [x16, #976]
    c1a8:	add	x16, x16, #0x3d0
    c1ac:	br	x17

000000000000c1b0 <mpfr_clears@plt>:
    c1b0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c1b4:	ldr	x17, [x16, #984]
    c1b8:	add	x16, x16, #0x3d8
    c1bc:	br	x17

000000000000c1c0 <mpfr_reallocate_func@plt>:
    c1c0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c1c4:	ldr	x17, [x16, #992]
    c1c8:	add	x16, x16, #0x3e0
    c1cc:	br	x17

000000000000c1d0 <mpfr_log2@plt>:
    c1d0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c1d4:	ldr	x17, [x16, #1000]
    c1d8:	add	x16, x16, #0x3e8
    c1dc:	br	x17

000000000000c1e0 <mpfr_erf@plt>:
    c1e0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c1e4:	ldr	x17, [x16, #1008]
    c1e8:	add	x16, x16, #0x3f0
    c1ec:	br	x17

000000000000c1f0 <mpfr_set@plt>:
    c1f0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c1f4:	ldr	x17, [x16, #1016]
    c1f8:	add	x16, x16, #0x3f8
    c1fc:	br	x17

000000000000c200 <__gmpz_mul_2exp@plt>:
    c200:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c204:	ldr	x17, [x16, #1024]
    c208:	add	x16, x16, #0x400
    c20c:	br	x17

000000000000c210 <mpfr_floor@plt>:
    c210:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c214:	ldr	x17, [x16, #1032]
    c218:	add	x16, x16, #0x408
    c21c:	br	x17

000000000000c220 <mpfr_round@plt>:
    c220:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c224:	ldr	x17, [x16, #1040]
    c228:	add	x16, x16, #0x410
    c22c:	br	x17

000000000000c230 <mpfr_free_pool@plt>:
    c230:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c234:	ldr	x17, [x16, #1048]
    c238:	add	x16, x16, #0x418
    c23c:	br	x17

000000000000c240 <mpfr_set_z@plt>:
    c240:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c244:	ldr	x17, [x16, #1056]
    c248:	add	x16, x16, #0x420
    c24c:	br	x17

000000000000c250 <mpfr_fma@plt>:
    c250:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c254:	ldr	x17, [x16, #1064]
    c258:	add	x16, x16, #0x428
    c25c:	br	x17

000000000000c260 <mpfr_add_ui@plt>:
    c260:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c264:	ldr	x17, [x16, #1072]
    c268:	add	x16, x16, #0x430
    c26c:	br	x17

000000000000c270 <mpfr_clear_flags@plt>:
    c270:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c274:	ldr	x17, [x16, #1080]
    c278:	add	x16, x16, #0x438
    c27c:	br	x17

000000000000c280 <mpfr_roundeven@plt>:
    c280:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c284:	ldr	x17, [x16, #1088]
    c288:	add	x16, x16, #0x440
    c28c:	br	x17

000000000000c290 <__gmpz_addmul@plt>:
    c290:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c294:	ldr	x17, [x16, #1096]
    c298:	add	x16, x16, #0x448
    c29c:	br	x17

000000000000c2a0 <getc@plt>:
    c2a0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c2a4:	ldr	x17, [x16, #1104]
    c2a8:	add	x16, x16, #0x450
    c2ac:	br	x17

000000000000c2b0 <mpfr_setmin@plt>:
    c2b0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c2b4:	ldr	x17, [x16, #1112]
    c2b8:	add	x16, x16, #0x458
    c2bc:	br	x17

000000000000c2c0 <mpfr_mul_2ui@plt>:
    c2c0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c2c4:	ldr	x17, [x16, #1120]
    c2c8:	add	x16, x16, #0x460
    c2cc:	br	x17

000000000000c2d0 <__gmp_urandomm_ui@plt>:
    c2d0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c2d4:	ldr	x17, [x16, #1128]
    c2d8:	add	x16, x16, #0x468
    c2dc:	br	x17

000000000000c2e0 <__gmpz_root@plt>:
    c2e0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c2e4:	ldr	x17, [x16, #1136]
    c2e8:	add	x16, x16, #0x470
    c2ec:	br	x17

000000000000c2f0 <mpfr_ui_div@plt>:
    c2f0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c2f4:	ldr	x17, [x16, #1144]
    c2f8:	add	x16, x16, #0x478
    c2fc:	br	x17

000000000000c300 <mpfr_rint@plt>:
    c300:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c304:	ldr	x17, [x16, #1152]
    c308:	add	x16, x16, #0x480
    c30c:	br	x17

000000000000c310 <mpfr_random_deviate_tstbit@plt>:
    c310:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c314:	ldr	x17, [x16, #1160]
    c318:	add	x16, x16, #0x488
    c31c:	br	x17

000000000000c320 <mpfr_sinh@plt>:
    c320:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c324:	ldr	x17, [x16, #1168]
    c328:	add	x16, x16, #0x490
    c32c:	br	x17

000000000000c330 <__gmpz_pow_ui@plt>:
    c330:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c334:	ldr	x17, [x16, #1176]
    c338:	add	x16, x16, #0x498
    c33c:	br	x17

000000000000c340 <mpfr_set_str_binary@plt>:
    c340:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c344:	ldr	x17, [x16, #1184]
    c348:	add	x16, x16, #0x4a0
    c34c:	br	x17

000000000000c350 <mpfr_can_round_raw@plt>:
    c350:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c354:	ldr	x17, [x16, #1192]
    c358:	add	x16, x16, #0x4a8
    c35c:	br	x17

000000000000c360 <__gmpz_add_ui@plt>:
    c360:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c364:	ldr	x17, [x16, #1200]
    c368:	add	x16, x16, #0x4b0
    c36c:	br	x17

000000000000c370 <mpfr_round_p@plt>:
    c370:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c374:	ldr	x17, [x16, #1208]
    c378:	add	x16, x16, #0x4b8
    c37c:	br	x17

000000000000c380 <mpfr_cache@plt>:
    c380:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c384:	ldr	x17, [x16, #1216]
    c388:	add	x16, x16, #0x4c0
    c38c:	br	x17

000000000000c390 <__gmon_start__@plt>:
    c390:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c394:	ldr	x17, [x16, #1224]
    c398:	add	x16, x16, #0x4c8
    c39c:	br	x17

000000000000c3a0 <mpfr_add_d@plt>:
    c3a0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c3a4:	ldr	x17, [x16, #1232]
    c3a8:	add	x16, x16, #0x4d0
    c3ac:	br	x17

000000000000c3b0 <__gmpn_sqr@plt>:
    c3b0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c3b4:	ldr	x17, [x16, #1240]
    c3b8:	add	x16, x16, #0x4d8
    c3bc:	br	x17

000000000000c3c0 <mpfr_underflow@plt>:
    c3c0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c3c4:	ldr	x17, [x16, #1248]
    c3c8:	add	x16, x16, #0x4e0
    c3cc:	br	x17

000000000000c3d0 <mpfr_cmp_si_2exp@plt>:
    c3d0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c3d4:	ldr	x17, [x16, #1256]
    c3d8:	add	x16, x16, #0x4e8
    c3dc:	br	x17

000000000000c3e0 <abort@plt>:
    c3e0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c3e4:	ldr	x17, [x16, #1264]
    c3e8:	add	x16, x16, #0x4f0
    c3ec:	br	x17

000000000000c3f0 <mpfr_trunc@plt>:
    c3f0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c3f4:	ldr	x17, [x16, #1272]
    c3f8:	add	x16, x16, #0x4f8
    c3fc:	br	x17

000000000000c400 <mpfr_sqr@plt>:
    c400:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c404:	ldr	x17, [x16, #1280]
    c408:	add	x16, x16, #0x500
    c40c:	br	x17

000000000000c410 <mpfr_tmp_free@plt>:
    c410:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c414:	ldr	x17, [x16, #1288]
    c418:	add	x16, x16, #0x508
    c41c:	br	x17

000000000000c420 <mpfr_div_2si@plt>:
    c420:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c424:	ldr	x17, [x16, #1296]
    c428:	add	x16, x16, #0x510
    c42c:	br	x17

000000000000c430 <mpfr_cos@plt>:
    c430:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c434:	ldr	x17, [x16, #1304]
    c438:	add	x16, x16, #0x518
    c43c:	br	x17

000000000000c440 <__gmpz_realloc2@plt>:
    c440:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c444:	ldr	x17, [x16, #1312]
    c448:	add	x16, x16, #0x520
    c44c:	br	x17

000000000000c450 <mpfr_sin@plt>:
    c450:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c454:	ldr	x17, [x16, #1320]
    c458:	add	x16, x16, #0x528
    c45c:	br	x17

000000000000c460 <mpfr_nexttozero@plt>:
    c460:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c464:	ldr	x17, [x16, #1328]
    c468:	add	x16, x16, #0x530
    c46c:	br	x17

000000000000c470 <__gmpn_mul_n@plt>:
    c470:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c474:	ldr	x17, [x16, #1336]
    c478:	add	x16, x16, #0x538
    c47c:	br	x17

000000000000c480 <mpfr_add_z@plt>:
    c480:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c484:	ldr	x17, [x16, #1344]
    c488:	add	x16, x16, #0x540
    c48c:	br	x17

000000000000c490 <mpfr_sqrhigh_n@plt>:
    c490:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c494:	ldr	x17, [x16, #1352]
    c498:	add	x16, x16, #0x548
    c49c:	br	x17

000000000000c4a0 <mpfr_swap@plt>:
    c4a0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c4a4:	ldr	x17, [x16, #1360]
    c4a8:	add	x16, x16, #0x550
    c4ac:	br	x17

000000000000c4b0 <__gmpz_scan0@plt>:
    c4b0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c4b4:	ldr	x17, [x16, #1368]
    c4b8:	add	x16, x16, #0x558
    c4bc:	br	x17

000000000000c4c0 <__gmpn_submul_1@plt>:
    c4c0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c4c4:	ldr	x17, [x16, #1376]
    c4c8:	add	x16, x16, #0x560
    c4cc:	br	x17

000000000000c4d0 <mpfr_mul_z@plt>:
    c4d0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c4d4:	ldr	x17, [x16, #1384]
    c4d8:	add	x16, x16, #0x568
    c4dc:	br	x17

000000000000c4e0 <__gmpz_ui_pow_ui@plt>:
    c4e0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c4e4:	ldr	x17, [x16, #1392]
    c4e8:	add	x16, x16, #0x570
    c4ec:	br	x17

000000000000c4f0 <mpfr_set_z_2exp@plt>:
    c4f0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c4f4:	ldr	x17, [x16, #1400]
    c4f8:	add	x16, x16, #0x578
    c4fc:	br	x17

000000000000c500 <mpfr_get_str@plt>:
    c500:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c504:	ldr	x17, [x16, #1408]
    c508:	add	x16, x16, #0x580
    c50c:	br	x17

000000000000c510 <mpfr_remquo@plt>:
    c510:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c514:	ldr	x17, [x16, #1416]
    c518:	add	x16, x16, #0x588
    c51c:	br	x17

000000000000c520 <__gmpn_copyi@plt>:
    c520:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c524:	ldr	x17, [x16, #1424]
    c528:	add	x16, x16, #0x590
    c52c:	br	x17

000000000000c530 <mpfr_sub_ui@plt>:
    c530:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c534:	ldr	x17, [x16, #1432]
    c538:	add	x16, x16, #0x598
    c53c:	br	x17

000000000000c540 <mpfr_round_near_x@plt>:
    c540:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c544:	ldr	x17, [x16, #1440]
    c548:	add	x16, x16, #0x5a0
    c54c:	br	x17

000000000000c550 <__gmp_fprintf@plt>:
    c550:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c554:	ldr	x17, [x16, #1448]
    c558:	add	x16, x16, #0x5a8
    c55c:	br	x17

000000000000c560 <__gmpq_set_ui@plt>:
    c560:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c564:	ldr	x17, [x16, #1456]
    c568:	add	x16, x16, #0x5b0
    c56c:	br	x17

000000000000c570 <__gmpz_divexact_ui@plt>:
    c570:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c574:	ldr	x17, [x16, #1464]
    c578:	add	x16, x16, #0x5b8
    c57c:	br	x17

000000000000c580 <mpfr_get_ld@plt>:
    c580:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c584:	ldr	x17, [x16, #1472]
    c588:	add	x16, x16, #0x5c0
    c58c:	br	x17

000000000000c590 <mpfr_random_deviate_swap@plt>:
    c590:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c594:	ldr	x17, [x16, #1480]
    c598:	add	x16, x16, #0x5c8
    c59c:	br	x17

000000000000c5a0 <__gmpn_add_n@plt>:
    c5a0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c5a4:	ldr	x17, [x16, #1488]
    c5a8:	add	x16, x16, #0x5d0
    c5ac:	br	x17

000000000000c5b0 <mpfr_set_inf@plt>:
    c5b0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c5b4:	ldr	x17, [x16, #1496]
    c5b8:	add	x16, x16, #0x5d8
    c5bc:	br	x17

000000000000c5c0 <mpfr_yn@plt>:
    c5c0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c5c4:	ldr	x17, [x16, #1504]
    c5c8:	add	x16, x16, #0x5e0
    c5cc:	br	x17

000000000000c5d0 <mpfr_si_sub@plt>:
    c5d0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c5d4:	ldr	x17, [x16, #1512]
    c5d8:	add	x16, x16, #0x5e8
    c5dc:	br	x17

000000000000c5e0 <__gmpn_get_str@plt>:
    c5e0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c5e4:	ldr	x17, [x16, #1520]
    c5e8:	add	x16, x16, #0x5f0
    c5ec:	br	x17

000000000000c5f0 <mpfr_set_ui_2exp@plt>:
    c5f0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c5f4:	ldr	x17, [x16, #1528]
    c5f8:	add	x16, x16, #0x5f8
    c5fc:	br	x17

000000000000c600 <mpfr_lngamma@plt>:
    c600:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c604:	ldr	x17, [x16, #1536]
    c608:	add	x16, x16, #0x600
    c60c:	br	x17

000000000000c610 <__gmpz_fdiv_q_ui@plt>:
    c610:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c614:	ldr	x17, [x16, #1544]
    c618:	add	x16, x16, #0x608
    c61c:	br	x17

000000000000c620 <mpfr_div@plt>:
    c620:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c624:	ldr	x17, [x16, #1552]
    c628:	add	x16, x16, #0x610
    c62c:	br	x17

000000000000c630 <__ctype_b_loc@plt>:
    c630:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c634:	ldr	x17, [x16, #1560]
    c638:	add	x16, x16, #0x618
    c63c:	br	x17

000000000000c640 <__gmpz_clear@plt>:
    c640:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c644:	ldr	x17, [x16, #1568]
    c648:	add	x16, x16, #0x620
    c64c:	br	x17

000000000000c650 <strtol@plt>:
    c650:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c654:	ldr	x17, [x16, #1576]
    c658:	add	x16, x16, #0x628
    c65c:	br	x17

000000000000c660 <fread@plt>:
    c660:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c664:	ldr	x17, [x16, #1584]
    c668:	add	x16, x16, #0x630
    c66c:	br	x17

000000000000c670 <mpfr_nexttoinf@plt>:
    c670:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c674:	ldr	x17, [x16, #1592]
    c678:	add	x16, x16, #0x638
    c67c:	br	x17

000000000000c680 <__gmpz_mul_si@plt>:
    c680:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c684:	ldr	x17, [x16, #1600]
    c688:	add	x16, x16, #0x640
    c68c:	br	x17

000000000000c690 <mpfr_atan@plt>:
    c690:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c694:	ldr	x17, [x16, #1608]
    c698:	add	x16, x16, #0x648
    c69c:	br	x17

000000000000c6a0 <mpfr_set4@plt>:
    c6a0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c6a4:	ldr	x17, [x16, #1616]
    c6a8:	add	x16, x16, #0x650
    c6ac:	br	x17

000000000000c6b0 <mpfr_rootn_ui@plt>:
    c6b0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c6b4:	ldr	x17, [x16, #1624]
    c6b8:	add	x16, x16, #0x658
    c6bc:	br	x17

000000000000c6c0 <mpfr_set_str@plt>:
    c6c0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c6c4:	ldr	x17, [x16, #1632]
    c6c8:	add	x16, x16, #0x660
    c6cc:	br	x17

000000000000c6d0 <__gmpf_neg@plt>:
    c6d0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c6d4:	ldr	x17, [x16, #1640]
    c6d8:	add	x16, x16, #0x668
    c6dc:	br	x17

000000000000c6e0 <mpfr_fac_ui@plt>:
    c6e0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c6e4:	ldr	x17, [x16, #1648]
    c6e8:	add	x16, x16, #0x670
    c6ec:	br	x17

000000000000c6f0 <mpfr_pow_general@plt>:
    c6f0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c6f4:	ldr	x17, [x16, #1656]
    c6f8:	add	x16, x16, #0x678
    c6fc:	br	x17

000000000000c700 <mpfr_log1p@plt>:
    c700:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c704:	ldr	x17, [x16, #1664]
    c708:	add	x16, x16, #0x680
    c70c:	br	x17

000000000000c710 <mpfr_sgn@plt>:
    c710:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c714:	ldr	x17, [x16, #1672]
    c718:	add	x16, x16, #0x688
    c71c:	br	x17

000000000000c720 <mpfr_round_raw_4@plt>:
    c720:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c724:	ldr	x17, [x16, #1680]
    c728:	add	x16, x16, #0x690
    c72c:	br	x17

000000000000c730 <ungetc@plt>:
    c730:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c734:	ldr	x17, [x16, #1688]
    c738:	add	x16, x16, #0x698
    c73c:	br	x17

000000000000c740 <__gmpz_tdiv_q_2exp@plt>:
    c740:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c744:	ldr	x17, [x16, #1696]
    c748:	add	x16, x16, #0x6a0
    c74c:	br	x17

000000000000c750 <mpfr_exp@plt>:
    c750:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c754:	ldr	x17, [x16, #1704]
    c758:	add	x16, x16, #0x6a8
    c75c:	br	x17

000000000000c760 <mpfr_round_raw_2@plt>:
    c760:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c764:	ldr	x17, [x16, #1712]
    c768:	add	x16, x16, #0x6b0
    c76c:	br	x17

000000000000c770 <__gmpz_cdiv_q@plt>:
    c770:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c774:	ldr	x17, [x16, #1720]
    c778:	add	x16, x16, #0x6b8
    c77c:	br	x17

000000000000c780 <mpfr_add1@plt>:
    c780:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c784:	ldr	x17, [x16, #1728]
    c788:	add	x16, x16, #0x6c0
    c78c:	br	x17

000000000000c790 <mpfr_fits_slong_p@plt>:
    c790:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c794:	ldr	x17, [x16, #1736]
    c798:	add	x16, x16, #0x6c8
    c79c:	br	x17

000000000000c7a0 <__gmpn_mul@plt>:
    c7a0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c7a4:	ldr	x17, [x16, #1744]
    c7a8:	add	x16, x16, #0x6d0
    c7ac:	br	x17

000000000000c7b0 <mpfr_gamma@plt>:
    c7b0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c7b4:	ldr	x17, [x16, #1752]
    c7b8:	add	x16, x16, #0x6d8
    c7bc:	br	x17

000000000000c7c0 <__gmpn_divrem_1@plt>:
    c7c0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c7c4:	ldr	x17, [x16, #1760]
    c7c8:	add	x16, x16, #0x6e0
    c7cc:	br	x17

000000000000c7d0 <mpfr_powerof2_raw2@plt>:
    c7d0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c7d4:	ldr	x17, [x16, #1768]
    c7d8:	add	x16, x16, #0x6e8
    c7dc:	br	x17

000000000000c7e0 <mpfr_random_deviate_reset@plt>:
    c7e0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c7e4:	ldr	x17, [x16, #1776]
    c7e8:	add	x16, x16, #0x6f0
    c7ec:	br	x17

000000000000c7f0 <mpfr_add_si@plt>:
    c7f0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c7f4:	ldr	x17, [x16, #1784]
    c7f8:	add	x16, x16, #0x6f8
    c7fc:	br	x17

000000000000c800 <__gmpz_cmp_si@plt>:
    c800:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c804:	ldr	x17, [x16, #1792]
    c808:	add	x16, x16, #0x700
    c80c:	br	x17

000000000000c810 <mpfr_rand_raw@plt>:
    c810:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c814:	ldr	x17, [x16, #1800]
    c818:	add	x16, x16, #0x708
    c81c:	br	x17

000000000000c820 <mpfr_div_si@plt>:
    c820:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c824:	ldr	x17, [x16, #1808]
    c828:	add	x16, x16, #0x710
    c82c:	br	x17

000000000000c830 <mpfr_bernoulli_cache@plt>:
    c830:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c834:	ldr	x17, [x16, #1816]
    c838:	add	x16, x16, #0x718
    c83c:	br	x17

000000000000c840 <mpfr_sqrt_ui@plt>:
    c840:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c844:	ldr	x17, [x16, #1824]
    c848:	add	x16, x16, #0x720
    c84c:	br	x17

000000000000c850 <mpfr_set_q@plt>:
    c850:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c854:	ldr	x17, [x16, #1832]
    c858:	add	x16, x16, #0x728
    c85c:	br	x17

000000000000c860 <__gmpn_popcount@plt>:
    c860:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c864:	ldr	x17, [x16, #1840]
    c868:	add	x16, x16, #0x730
    c86c:	br	x17

000000000000c870 <mpfr_exp_2@plt>:
    c870:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c874:	ldr	x17, [x16, #1848]
    c878:	add	x16, x16, #0x738
    c87c:	br	x17

000000000000c880 <__gmpz_submul@plt>:
    c880:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c884:	ldr	x17, [x16, #1856]
    c888:	add	x16, x16, #0x740
    c88c:	br	x17

000000000000c890 <mpfr_free_str@plt>:
    c890:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c894:	ldr	x17, [x16, #1864]
    c898:	add	x16, x16, #0x748
    c89c:	br	x17

000000000000c8a0 <__gmpz_mod@plt>:
    c8a0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c8a4:	ldr	x17, [x16, #1872]
    c8a8:	add	x16, x16, #0x750
    c8ac:	br	x17

000000000000c8b0 <mpfr_si_div@plt>:
    c8b0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c8b4:	ldr	x17, [x16, #1880]
    c8b8:	add	x16, x16, #0x758
    c8bc:	br	x17

000000000000c8c0 <fwrite@plt>:
    c8c0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c8c4:	ldr	x17, [x16, #1888]
    c8c8:	add	x16, x16, #0x760
    c8cc:	br	x17

000000000000c8d0 <__gmpz_cmp@plt>:
    c8d0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c8d4:	ldr	x17, [x16, #1896]
    c8d8:	add	x16, x16, #0x768
    c8dc:	br	x17

000000000000c8e0 <mpfr_abort_prec_max@plt>:
    c8e0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c8e4:	ldr	x17, [x16, #1904]
    c8e8:	add	x16, x16, #0x770
    c8ec:	br	x17

000000000000c8f0 <mpfr_div_2ui@plt>:
    c8f0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c8f4:	ldr	x17, [x16, #1912]
    c8f8:	add	x16, x16, #0x778
    c8fc:	br	x17

000000000000c900 <mpfr_mpz_init2@plt>:
    c900:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c904:	ldr	x17, [x16, #1920]
    c908:	add	x16, x16, #0x780
    c90c:	br	x17

000000000000c910 <strcpy@plt>:
    c910:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c914:	ldr	x17, [x16, #1928]
    c918:	add	x16, x16, #0x788
    c91c:	br	x17

000000000000c920 <__gmpfr_set_sj_2exp@plt>:
    c920:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c924:	ldr	x17, [x16, #1936]
    c928:	add	x16, x16, #0x790
    c92c:	br	x17

000000000000c930 <mpfr_sqrt@plt>:
    c930:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c934:	ldr	x17, [x16, #1944]
    c938:	add	x16, x16, #0x798
    c93c:	br	x17

000000000000c940 <strncat@plt>:
    c940:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c944:	ldr	x17, [x16, #1952]
    c948:	add	x16, x16, #0x7a0
    c94c:	br	x17

000000000000c950 <__gmpfr_ceil_log2@plt>:
    c950:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c954:	ldr	x17, [x16, #1960]
    c958:	add	x16, x16, #0x7a8
    c95c:	br	x17

000000000000c960 <mpfr_mul_si@plt>:
    c960:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c964:	ldr	x17, [x16, #1968]
    c968:	add	x16, x16, #0x7b0
    c96c:	br	x17

000000000000c970 <mpfr_prec_round@plt>:
    c970:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c974:	ldr	x17, [x16, #1976]
    c978:	add	x16, x16, #0x7b8
    c97c:	br	x17

000000000000c980 <mpfr_ceil@plt>:
    c980:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c984:	ldr	x17, [x16, #1984]
    c988:	add	x16, x16, #0x7c0
    c98c:	br	x17

000000000000c990 <mpfr_min_prec@plt>:
    c990:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c994:	ldr	x17, [x16, #1992]
    c998:	add	x16, x16, #0x7c8
    c99c:	br	x17

000000000000c9a0 <mpfr_cmp3@plt>:
    c9a0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c9a4:	ldr	x17, [x16, #2000]
    c9a8:	add	x16, x16, #0x7d0
    c9ac:	br	x17

000000000000c9b0 <mpfr_cmpabs@plt>:
    c9b0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c9b4:	ldr	x17, [x16, #2008]
    c9b8:	add	x16, x16, #0x7d8
    c9bc:	br	x17

000000000000c9c0 <__gmpz_add@plt>:
    c9c0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c9c4:	ldr	x17, [x16, #2016]
    c9c8:	add	x16, x16, #0x7e0
    c9cc:	br	x17

000000000000c9d0 <mpfr_extract@plt>:
    c9d0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c9d4:	ldr	x17, [x16, #2024]
    c9d8:	add	x16, x16, #0x7e8
    c9dc:	br	x17

000000000000c9e0 <mpfr_eint@plt>:
    c9e0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c9e4:	ldr	x17, [x16, #2032]
    c9e8:	add	x16, x16, #0x7f0
    c9ec:	br	x17

000000000000c9f0 <mpfr_digamma@plt>:
    c9f0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    c9f4:	ldr	x17, [x16, #2040]
    c9f8:	add	x16, x16, #0x7f8
    c9fc:	br	x17

000000000000ca00 <mpfr_less_p@plt>:
    ca00:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ca04:	ldr	x17, [x16, #2048]
    ca08:	add	x16, x16, #0x800
    ca0c:	br	x17

000000000000ca10 <mpfr_ui_pow@plt>:
    ca10:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ca14:	ldr	x17, [x16, #2056]
    ca18:	add	x16, x16, #0x808
    ca1c:	br	x17

000000000000ca20 <mpfr_round_raw@plt>:
    ca20:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ca24:	ldr	x17, [x16, #2064]
    ca28:	add	x16, x16, #0x810
    ca2c:	br	x17

000000000000ca30 <mpfr_random_deviate_less@plt>:
    ca30:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ca34:	ldr	x17, [x16, #2072]
    ca38:	add	x16, x16, #0x818
    ca3c:	br	x17

000000000000ca40 <__gmpn_perfect_square_p@plt>:
    ca40:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ca44:	ldr	x17, [x16, #2080]
    ca48:	add	x16, x16, #0x820
    ca4c:	br	x17

000000000000ca50 <mpfr_ui_sub@plt>:
    ca50:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ca54:	ldr	x17, [x16, #2088]
    ca58:	add	x16, x16, #0x828
    ca5c:	br	x17

000000000000ca60 <mpfr_equal_p@plt>:
    ca60:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ca64:	ldr	x17, [x16, #2096]
    ca68:	add	x16, x16, #0x830
    ca6c:	br	x17

000000000000ca70 <mpfr_sub1@plt>:
    ca70:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ca74:	ldr	x17, [x16, #2104]
    ca78:	add	x16, x16, #0x838
    ca7c:	br	x17

000000000000ca80 <mpfr_init2@plt>:
    ca80:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ca84:	ldr	x17, [x16, #2112]
    ca88:	add	x16, x16, #0x840
    ca8c:	br	x17

000000000000ca90 <__gmpz_init2@plt>:
    ca90:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ca94:	ldr	x17, [x16, #2120]
    ca98:	add	x16, x16, #0x848
    ca9c:	br	x17

000000000000caa0 <__gmpn_scan1@plt>:
    caa0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    caa4:	ldr	x17, [x16, #2128]
    caa8:	add	x16, x16, #0x850
    caac:	br	x17

000000000000cab0 <mpfr_ubf_exp_less_p@plt>:
    cab0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cab4:	ldr	x17, [x16, #2136]
    cab8:	add	x16, x16, #0x858
    cabc:	br	x17

000000000000cac0 <mpfr_get_z_2exp@plt>:
    cac0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cac4:	ldr	x17, [x16, #2144]
    cac8:	add	x16, x16, #0x860
    cacc:	br	x17

000000000000cad0 <strncpy@plt>:
    cad0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cad4:	ldr	x17, [x16, #2152]
    cad8:	add	x16, x16, #0x868
    cadc:	br	x17

000000000000cae0 <mpfr_set_1_2@plt>:
    cae0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cae4:	ldr	x17, [x16, #2160]
    cae8:	add	x16, x16, #0x870
    caec:	br	x17

000000000000caf0 <__gmpq_div_2exp@plt>:
    caf0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    caf4:	ldr	x17, [x16, #2168]
    caf8:	add	x16, x16, #0x878
    cafc:	br	x17

000000000000cb00 <mpfr_ubf_diff_exp@plt>:
    cb00:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cb04:	ldr	x17, [x16, #2176]
    cb08:	add	x16, x16, #0x880
    cb0c:	br	x17

000000000000cb10 <__gmp_urandomb_ui@plt>:
    cb10:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cb14:	ldr	x17, [x16, #2184]
    cb18:	add	x16, x16, #0x888
    cb1c:	br	x17

000000000000cb20 <__gmpz_cmp_ui@plt>:
    cb20:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cb24:	ldr	x17, [x16, #2192]
    cb28:	add	x16, x16, #0x890
    cb2c:	br	x17

000000000000cb30 <mpfr_check_range@plt>:
    cb30:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cb34:	ldr	x17, [x16, #2200]
    cb38:	add	x16, x16, #0x898
    cb3c:	br	x17

000000000000cb40 <mpfr_assert_fail@plt>:
    cb40:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cb44:	ldr	x17, [x16, #2208]
    cb48:	add	x16, x16, #0x8a0
    cb4c:	br	x17

000000000000cb50 <__gmpz_init@plt>:
    cb50:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cb54:	ldr	x17, [x16, #2216]
    cb58:	add	x16, x16, #0x8a8
    cb5c:	br	x17

000000000000cb60 <__gmpz_sizeinbase@plt>:
    cb60:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cb64:	ldr	x17, [x16, #2224]
    cb68:	add	x16, x16, #0x8b0
    cb6c:	br	x17

000000000000cb70 <__gmpz_set_si@plt>:
    cb70:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cb74:	ldr	x17, [x16, #2232]
    cb78:	add	x16, x16, #0x8b8
    cb7c:	br	x17

000000000000cb80 <mpfr_ceil_mul@plt>:
    cb80:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cb84:	ldr	x17, [x16, #2240]
    cb88:	add	x16, x16, #0x8c0
    cb8c:	br	x17

000000000000cb90 <mpfr_number_p@plt>:
    cb90:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cb94:	ldr	x17, [x16, #2248]
    cb98:	add	x16, x16, #0x8c8
    cb9c:	br	x17

000000000000cba0 <mpfr_scale2@plt>:
    cba0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cba4:	ldr	x17, [x16, #2256]
    cba8:	add	x16, x16, #0x8d0
    cbac:	br	x17

000000000000cbb0 <mpfr_add1sp@plt>:
    cbb0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cbb4:	ldr	x17, [x16, #2264]
    cbb8:	add	x16, x16, #0x8d8
    cbbc:	br	x17

000000000000cbc0 <__gmpz_powm_ui@plt>:
    cbc0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cbc4:	ldr	x17, [x16, #2272]
    cbc8:	add	x16, x16, #0x8e0
    cbcc:	br	x17

000000000000cbd0 <mpfr_get_d_2exp@plt>:
    cbd0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cbd4:	ldr	x17, [x16, #2280]
    cbd8:	add	x16, x16, #0x8e8
    cbdc:	br	x17

000000000000cbe0 <mpfr_mpn_exp@plt>:
    cbe0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cbe4:	ldr	x17, [x16, #2288]
    cbe8:	add	x16, x16, #0x8f0
    cbec:	br	x17

000000000000cbf0 <printf@plt>:
    cbf0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cbf4:	ldr	x17, [x16, #2296]
    cbf8:	add	x16, x16, #0x8f8
    cbfc:	br	x17

000000000000cc00 <__errno_location@plt>:
    cc00:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cc04:	ldr	x17, [x16, #2304]
    cc08:	add	x16, x16, #0x900
    cc0c:	br	x17

000000000000cc10 <mpfr_jn@plt>:
    cc10:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cc14:	ldr	x17, [x16, #2312]
    cc18:	add	x16, x16, #0x908
    cc1c:	br	x17

000000000000cc20 <mpfr_free_func@plt>:
    cc20:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cc24:	ldr	x17, [x16, #2320]
    cc28:	add	x16, x16, #0x910
    cc2c:	br	x17

000000000000cc30 <__gmpz_addmul_ui@plt>:
    cc30:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cc34:	ldr	x17, [x16, #2328]
    cc38:	add	x16, x16, #0x918
    cc3c:	br	x17

000000000000cc40 <mpfr_sin_cos@plt>:
    cc40:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cc44:	ldr	x17, [x16, #2336]
    cc48:	add	x16, x16, #0x920
    cc4c:	br	x17

000000000000cc50 <mpfr_inits2@plt>:
    cc50:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cc54:	ldr	x17, [x16, #2344]
    cc58:	add	x16, x16, #0x928
    cc5c:	br	x17

000000000000cc60 <mpfr_div_ui@plt>:
    cc60:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cc64:	ldr	x17, [x16, #2352]
    cc68:	add	x16, x16, #0x930
    cc6c:	br	x17

000000000000cc70 <mpfr_fmodquo@plt>:
    cc70:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cc74:	ldr	x17, [x16, #2360]
    cc78:	add	x16, x16, #0x938
    cc7c:	br	x17

000000000000cc80 <mpfr_div_z@plt>:
    cc80:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cc84:	ldr	x17, [x16, #2368]
    cc88:	add	x16, x16, #0x940
    cc8c:	br	x17

000000000000cc90 <mpfr_exp2@plt>:
    cc90:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cc94:	ldr	x17, [x16, #2376]
    cc98:	add	x16, x16, #0x948
    cc9c:	br	x17

000000000000cca0 <mpfr_odd_p@plt>:
    cca0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cca4:	ldr	x17, [x16, #2384]
    cca8:	add	x16, x16, #0x950
    ccac:	br	x17

000000000000ccb0 <__gmpn_divrem@plt>:
    ccb0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ccb4:	ldr	x17, [x16, #2392]
    ccb8:	add	x16, x16, #0x958
    ccbc:	br	x17

000000000000ccc0 <__gmpn_sqrtrem@plt>:
    ccc0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ccc4:	ldr	x17, [x16, #2400]
    ccc8:	add	x16, x16, #0x960
    cccc:	br	x17

000000000000ccd0 <__gmpn_addmul_1@plt>:
    ccd0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ccd4:	ldr	x17, [x16, #2408]
    ccd8:	add	x16, x16, #0x968
    ccdc:	br	x17

000000000000cce0 <fprintf@plt>:
    cce0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cce4:	ldr	x17, [x16, #2416]
    cce8:	add	x16, x16, #0x970
    ccec:	br	x17

000000000000ccf0 <mpfr_allocate_func@plt>:
    ccf0:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    ccf4:	ldr	x17, [x16, #2424]
    ccf8:	add	x16, x16, #0x978
    ccfc:	br	x17

000000000000cd00 <__gmpz_urandomb@plt>:
    cd00:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cd04:	ldr	x17, [x16, #2432]
    cd08:	add	x16, x16, #0x980
    cd0c:	br	x17

000000000000cd10 <mpfr_remainder@plt>:
    cd10:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cd14:	ldr	x17, [x16, #2440]
    cd18:	add	x16, x16, #0x988
    cd1c:	br	x17

000000000000cd20 <mpfr_cbrt@plt>:
    cd20:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cd24:	ldr	x17, [x16, #2448]
    cd28:	add	x16, x16, #0x990
    cd2c:	br	x17

000000000000cd30 <__gmpn_mul_1@plt>:
    cd30:	adrp	x16, 82000 <mpfr_agm@@Base+0x6b130>
    cd34:	ldr	x17, [x16, #2456]
    cd38:	add	x16, x16, #0x998
    cd3c:	br	x17

000000000000cd40 <__gmpfr_emin@plt>:
    cd40:	stp	x2, x3, [sp, #-16]!
    cd44:	adrp	x2, 81000 <__gmpfr_l2b@@Base+0x200>
    cd48:	adrp	x3, 81000 <__gmpfr_l2b@@Base+0x200>
    cd4c:	ldr	x2, [x2, #4064]

000000000000cd50 <__gmpfr_emax@plt>:
    cd50:	add	x3, x3, #0xfe8
    cd54:	br	x2
    cd58:	nop
    cd5c:	nop

Disassembly of section .text:

000000000000cd60 <mpfr_get_emin@@Base>:
    cd60:	stp	x29, x30, [sp, #-16]!
    cd64:	mrs	x1, tpidr_el0
    cd68:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    cd6c:	ldr	x2, [x0, #2512]
    cd70:	add	x0, x0, #0x9d0
    cd74:	blr	x2
    cd78:	mov	x29, sp
    cd7c:	ldp	x29, x30, [sp], #16
    cd80:	ldr	x0, [x1, x0]
    cd84:	ret

000000000000cd88 <mpfr_get_emin_min@@Base>:
    cd88:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    cd8c:	ret

000000000000cd90 <mpfr_get_emin_max@@Base>:
    cd90:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    cd94:	ret

000000000000cd98 <mpfr_get_emax@@Base>:
    cd98:	stp	x29, x30, [sp, #-16]!
    cd9c:	mrs	x1, tpidr_el0
    cda0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    cda4:	ldr	x2, [x0, #2544]
    cda8:	add	x0, x0, #0x9f0
    cdac:	blr	x2
    cdb0:	mov	x29, sp
    cdb4:	ldp	x29, x30, [sp], #16
    cdb8:	ldr	x0, [x1, x0]
    cdbc:	ret

000000000000cdc0 <mpfr_get_emax_min@@Base>:
    cdc0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    cdc4:	ret

000000000000cdc8 <mpfr_get_emax_max@@Base>:
    cdc8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    cdcc:	ret

000000000000cdd0 <mpfr_flags_clear@@Base>:
    cdd0:	mrs	x1, tpidr_el0
    cdd4:	stp	x29, x30, [sp, #-16]!
    cdd8:	mov	w2, w0
    cddc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    cde0:	ldr	x3, [x0, #2576]
    cde4:	add	x0, x0, #0xa10
    cde8:	blr	x3
    cdec:	add	x0, x1, x0
    cdf0:	mov	x29, sp
    cdf4:	eor	w2, w2, #0x3f
    cdf8:	ldr	w1, [x0]
    cdfc:	and	w2, w2, w1
    ce00:	str	w2, [x0]
    ce04:	ldp	x29, x30, [sp], #16
    ce08:	ret

000000000000ce0c <mpfr_flags_set@@Base>:
    ce0c:	mrs	x1, tpidr_el0
    ce10:	stp	x29, x30, [sp, #-16]!
    ce14:	mov	w2, w0
    ce18:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    ce1c:	ldr	x3, [x0, #2576]
    ce20:	add	x0, x0, #0xa10
    ce24:	blr	x3
    ce28:	add	x0, x1, x0
    ce2c:	mov	x29, sp
    ce30:	ldr	w1, [x0]
    ce34:	orr	w1, w1, w2
    ce38:	str	w1, [x0]
    ce3c:	ldp	x29, x30, [sp], #16
    ce40:	ret

000000000000ce44 <mpfr_flags_test@@Base>:
    ce44:	mrs	x1, tpidr_el0
    ce48:	stp	x29, x30, [sp, #-16]!
    ce4c:	mov	w2, w0
    ce50:	mov	x29, sp
    ce54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    ce58:	ldr	x3, [x0, #2576]
    ce5c:	add	x0, x0, #0xa10
    ce60:	blr	x3
    ce64:	ldr	w0, [x1, x0]
    ce68:	ldp	x29, x30, [sp], #16
    ce6c:	and	w0, w2, w0
    ce70:	ret

000000000000ce74 <mpfr_flags_save@@Base>:
    ce74:	stp	x29, x30, [sp, #-16]!
    ce78:	mrs	x1, tpidr_el0
    ce7c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    ce80:	ldr	x2, [x0, #2576]
    ce84:	add	x0, x0, #0xa10
    ce88:	blr	x2
    ce8c:	mov	x29, sp
    ce90:	ldr	w0, [x1, x0]
    ce94:	ldp	x29, x30, [sp], #16
    ce98:	ret

000000000000ce9c <mpfr_flags_restore@@Base>:
    ce9c:	mrs	x2, tpidr_el0
    cea0:	stp	x29, x30, [sp, #-16]!
    cea4:	mov	w4, w0
    cea8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    ceac:	ldr	x3, [x0, #2576]
    ceb0:	add	x0, x0, #0xa10
    ceb4:	blr	x3
    ceb8:	add	x0, x2, x0
    cebc:	mov	x29, sp
    cec0:	eor	w2, w1, #0x3f
    cec4:	and	w1, w1, w4
    cec8:	ldr	w3, [x0]
    cecc:	and	w2, w2, w3
    ced0:	orr	w1, w2, w1
    ced4:	str	w1, [x0]
    ced8:	ldp	x29, x30, [sp], #16
    cedc:	ret

000000000000cee0 <mpfr_clear_underflow@@Base>:
    cee0:	mrs	x1, tpidr_el0
    cee4:	stp	x29, x30, [sp, #-16]!
    cee8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    ceec:	ldr	x2, [x0, #2576]
    cef0:	add	x0, x0, #0xa10
    cef4:	blr	x2
    cef8:	add	x0, x1, x0
    cefc:	mov	x29, sp
    cf00:	ldr	w1, [x0]
    cf04:	and	w1, w1, #0x3e
    cf08:	str	w1, [x0]
    cf0c:	ldp	x29, x30, [sp], #16
    cf10:	ret

000000000000cf14 <mpfr_clear_overflow@@Base>:
    cf14:	mrs	x1, tpidr_el0
    cf18:	stp	x29, x30, [sp, #-16]!
    cf1c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    cf20:	ldr	x2, [x0, #2576]
    cf24:	add	x0, x0, #0xa10
    cf28:	blr	x2
    cf2c:	add	x0, x1, x0
    cf30:	mov	x29, sp
    cf34:	mov	w2, #0x3d                  	// #61
    cf38:	ldr	w1, [x0]
    cf3c:	and	w1, w1, w2
    cf40:	str	w1, [x0]
    cf44:	ldp	x29, x30, [sp], #16
    cf48:	ret

000000000000cf4c <mpfr_clear_divby0@@Base>:
    cf4c:	mrs	x1, tpidr_el0
    cf50:	stp	x29, x30, [sp, #-16]!
    cf54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    cf58:	ldr	x2, [x0, #2576]
    cf5c:	add	x0, x0, #0xa10
    cf60:	blr	x2
    cf64:	add	x0, x1, x0
    cf68:	mov	x29, sp
    cf6c:	ldr	w1, [x0]
    cf70:	and	w1, w1, #0x1f
    cf74:	str	w1, [x0]
    cf78:	ldp	x29, x30, [sp], #16
    cf7c:	ret

000000000000cf80 <mpfr_clear_nanflag@@Base>:
    cf80:	mrs	x1, tpidr_el0
    cf84:	stp	x29, x30, [sp, #-16]!
    cf88:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    cf8c:	ldr	x2, [x0, #2576]
    cf90:	add	x0, x0, #0xa10
    cf94:	blr	x2
    cf98:	add	x0, x1, x0
    cf9c:	mov	x29, sp
    cfa0:	mov	w2, #0x3b                  	// #59
    cfa4:	ldr	w1, [x0]
    cfa8:	and	w1, w1, w2
    cfac:	str	w1, [x0]
    cfb0:	ldp	x29, x30, [sp], #16
    cfb4:	ret

000000000000cfb8 <mpfr_clear_inexflag@@Base>:
    cfb8:	mrs	x1, tpidr_el0
    cfbc:	stp	x29, x30, [sp, #-16]!
    cfc0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    cfc4:	ldr	x2, [x0, #2576]
    cfc8:	add	x0, x0, #0xa10
    cfcc:	blr	x2
    cfd0:	add	x0, x1, x0
    cfd4:	mov	x29, sp
    cfd8:	mov	w2, #0x37                  	// #55
    cfdc:	ldr	w1, [x0]
    cfe0:	and	w1, w1, w2
    cfe4:	str	w1, [x0]
    cfe8:	ldp	x29, x30, [sp], #16
    cfec:	ret

000000000000cff0 <mpfr_clear_erangeflag@@Base>:
    cff0:	mrs	x1, tpidr_el0
    cff4:	stp	x29, x30, [sp, #-16]!
    cff8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    cffc:	ldr	x2, [x0, #2576]
    d000:	add	x0, x0, #0xa10
    d004:	blr	x2
    d008:	add	x0, x1, x0
    d00c:	mov	x29, sp
    d010:	mov	w2, #0x2f                  	// #47
    d014:	ldr	w1, [x0]
    d018:	and	w1, w1, w2
    d01c:	str	w1, [x0]
    d020:	ldp	x29, x30, [sp], #16
    d024:	ret

000000000000d028 <mpfr_set_underflow@@Base>:
    d028:	mrs	x1, tpidr_el0
    d02c:	stp	x29, x30, [sp, #-16]!
    d030:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d034:	ldr	x2, [x0, #2576]
    d038:	add	x0, x0, #0xa10
    d03c:	blr	x2
    d040:	add	x0, x1, x0
    d044:	mov	x29, sp
    d048:	ldr	w1, [x0]
    d04c:	orr	w1, w1, #0x1
    d050:	str	w1, [x0]
    d054:	ldp	x29, x30, [sp], #16
    d058:	ret

000000000000d05c <mpfr_set_overflow@@Base>:
    d05c:	mrs	x1, tpidr_el0
    d060:	stp	x29, x30, [sp, #-16]!
    d064:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d068:	ldr	x2, [x0, #2576]
    d06c:	add	x0, x0, #0xa10
    d070:	blr	x2
    d074:	add	x0, x1, x0
    d078:	mov	x29, sp
    d07c:	ldr	w1, [x0]
    d080:	orr	w1, w1, #0x2
    d084:	str	w1, [x0]
    d088:	ldp	x29, x30, [sp], #16
    d08c:	ret

000000000000d090 <mpfr_set_divby0@@Base>:
    d090:	mrs	x1, tpidr_el0
    d094:	stp	x29, x30, [sp, #-16]!
    d098:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d09c:	ldr	x2, [x0, #2576]
    d0a0:	add	x0, x0, #0xa10
    d0a4:	blr	x2
    d0a8:	add	x0, x1, x0
    d0ac:	mov	x29, sp
    d0b0:	ldr	w1, [x0]
    d0b4:	orr	w1, w1, #0x20
    d0b8:	str	w1, [x0]
    d0bc:	ldp	x29, x30, [sp], #16
    d0c0:	ret

000000000000d0c4 <mpfr_set_nanflag@@Base>:
    d0c4:	mrs	x1, tpidr_el0
    d0c8:	stp	x29, x30, [sp, #-16]!
    d0cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d0d0:	ldr	x2, [x0, #2576]
    d0d4:	add	x0, x0, #0xa10
    d0d8:	blr	x2
    d0dc:	add	x0, x1, x0
    d0e0:	mov	x29, sp
    d0e4:	ldr	w1, [x0]
    d0e8:	orr	w1, w1, #0x4
    d0ec:	str	w1, [x0]
    d0f0:	ldp	x29, x30, [sp], #16
    d0f4:	ret

000000000000d0f8 <mpfr_set_inexflag@@Base>:
    d0f8:	mrs	x1, tpidr_el0
    d0fc:	stp	x29, x30, [sp, #-16]!
    d100:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d104:	ldr	x2, [x0, #2576]
    d108:	add	x0, x0, #0xa10
    d10c:	blr	x2
    d110:	add	x0, x1, x0
    d114:	mov	x29, sp
    d118:	ldr	w1, [x0]
    d11c:	orr	w1, w1, #0x8
    d120:	str	w1, [x0]
    d124:	ldp	x29, x30, [sp], #16
    d128:	ret

000000000000d12c <mpfr_set_erangeflag@@Base>:
    d12c:	mrs	x1, tpidr_el0
    d130:	stp	x29, x30, [sp, #-16]!
    d134:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d138:	ldr	x2, [x0, #2576]
    d13c:	add	x0, x0, #0xa10
    d140:	blr	x2
    d144:	add	x0, x1, x0
    d148:	mov	x29, sp
    d14c:	ldr	w1, [x0]
    d150:	orr	w1, w1, #0x10
    d154:	str	w1, [x0]
    d158:	ldp	x29, x30, [sp], #16
    d15c:	ret

000000000000d160 <mpfr_underflow_p@@Base>:
    d160:	mrs	x1, tpidr_el0
    d164:	stp	x29, x30, [sp, #-16]!
    d168:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d16c:	ldr	x2, [x0, #2576]
    d170:	add	x0, x0, #0xa10
    d174:	blr	x2
    d178:	mov	x29, sp
    d17c:	ldr	w0, [x1, x0]
    d180:	ldp	x29, x30, [sp], #16
    d184:	and	w0, w0, #0x1
    d188:	ret

000000000000d18c <mpfr_overflow_p@@Base>:
    d18c:	mrs	x1, tpidr_el0
    d190:	stp	x29, x30, [sp, #-16]!
    d194:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d198:	ldr	x2, [x0, #2576]
    d19c:	add	x0, x0, #0xa10
    d1a0:	blr	x2
    d1a4:	mov	x29, sp
    d1a8:	ldr	w0, [x1, x0]
    d1ac:	ldp	x29, x30, [sp], #16
    d1b0:	and	w0, w0, #0x2
    d1b4:	ret

000000000000d1b8 <mpfr_divby0_p@@Base>:
    d1b8:	mrs	x1, tpidr_el0
    d1bc:	stp	x29, x30, [sp, #-16]!
    d1c0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d1c4:	ldr	x2, [x0, #2576]
    d1c8:	add	x0, x0, #0xa10
    d1cc:	blr	x2
    d1d0:	mov	x29, sp
    d1d4:	ldr	w0, [x1, x0]
    d1d8:	ldp	x29, x30, [sp], #16
    d1dc:	and	w0, w0, #0x20
    d1e0:	ret

000000000000d1e4 <mpfr_nanflag_p@@Base>:
    d1e4:	mrs	x1, tpidr_el0
    d1e8:	stp	x29, x30, [sp, #-16]!
    d1ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d1f0:	ldr	x2, [x0, #2576]
    d1f4:	add	x0, x0, #0xa10
    d1f8:	blr	x2
    d1fc:	mov	x29, sp
    d200:	ldr	w0, [x1, x0]
    d204:	ldp	x29, x30, [sp], #16
    d208:	and	w0, w0, #0x4
    d20c:	ret

000000000000d210 <mpfr_inexflag_p@@Base>:
    d210:	mrs	x1, tpidr_el0
    d214:	stp	x29, x30, [sp, #-16]!
    d218:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d21c:	ldr	x2, [x0, #2576]
    d220:	add	x0, x0, #0xa10
    d224:	blr	x2
    d228:	mov	x29, sp
    d22c:	ldr	w0, [x1, x0]
    d230:	ldp	x29, x30, [sp], #16
    d234:	and	w0, w0, #0x8
    d238:	ret

000000000000d23c <mpfr_erangeflag_p@@Base>:
    d23c:	mrs	x1, tpidr_el0
    d240:	stp	x29, x30, [sp, #-16]!
    d244:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d248:	ldr	x2, [x0, #2576]
    d24c:	add	x0, x0, #0xa10
    d250:	blr	x2
    d254:	mov	x29, sp
    d258:	ldr	w0, [x1, x0]
    d25c:	ldp	x29, x30, [sp], #16
    d260:	and	w0, w0, #0x10
    d264:	ret

000000000000d268 <mpfr_underflow@@Base>:
    d268:	stp	x29, x30, [sp, #-48]!
    d26c:	cmp	w1, #0x1
    d270:	mov	x29, sp
    d274:	stp	x19, x20, [sp, #16]
    d278:	mov	w20, w2
    d27c:	mrs	x19, tpidr_el0
    d280:	str	x21, [sp, #32]
    d284:	mov	x21, x0
    d288:	b.eq	d298 <mpfr_underflow@@Base+0x30>  // b.none
    d28c:	add	w1, w1, w2, lsr #31
    d290:	cmp	w1, #0x3
    d294:	b.ne	d2a8 <mpfr_underflow@@Base+0x40>  // b.any
    d298:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d29c:	mov	w1, #0xffffffff            	// #-1
    d2a0:	str	x0, [x21, #16]
    d2a4:	b	d2c8 <mpfr_underflow@@Base+0x60>
    d2a8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d2ac:	ldr	x1, [x0, #2512]
    d2b0:	add	x0, x0, #0x9d0
    d2b4:	blr	x1
    d2b8:	ldr	x1, [x19, x0]
    d2bc:	mov	x0, x21
    d2c0:	bl	c2b0 <mpfr_setmin@plt>
    d2c4:	mov	w1, #0x1                   	// #1
    d2c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d2cc:	ldr	x2, [x0, #2576]
    d2d0:	add	x0, x0, #0xa10
    d2d4:	blr	x2
    d2d8:	add	x19, x19, x0
    d2dc:	mov	w2, #0x9                   	// #9
    d2e0:	str	w20, [x21, #8]
    d2e4:	cmp	w20, #0x0
    d2e8:	ldr	w0, [x19]
    d2ec:	orr	w0, w0, w2
    d2f0:	str	w0, [x19]
    d2f4:	b.gt	d2fc <mpfr_underflow@@Base+0x94>
    d2f8:	neg	w1, w1
    d2fc:	mov	w0, w1
    d300:	ldp	x19, x20, [sp, #16]
    d304:	ldr	x21, [sp, #32]
    d308:	ldp	x29, x30, [sp], #48
    d30c:	ret

000000000000d310 <mpfr_overflow@@Base>:
    d310:	stp	x29, x30, [sp, #-48]!
    d314:	cmp	w1, #0x1
    d318:	mov	x29, sp
    d31c:	stp	x19, x20, [sp, #16]
    d320:	mov	w20, w2
    d324:	mrs	x19, tpidr_el0
    d328:	str	x21, [sp, #32]
    d32c:	mov	x21, x0
    d330:	b.eq	d340 <mpfr_overflow@@Base+0x30>  // b.none
    d334:	add	w1, w1, w2, lsr #31
    d338:	cmp	w1, #0x3
    d33c:	b.ne	d364 <mpfr_overflow@@Base+0x54>  // b.any
    d340:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d344:	ldr	x1, [x0, #2544]
    d348:	add	x0, x0, #0x9f0
    d34c:	blr	x1
    d350:	ldr	x1, [x19, x0]
    d354:	mov	x0, x21
    d358:	bl	c0d0 <mpfr_setmax@plt>
    d35c:	mov	w1, #0xffffffff            	// #-1
    d360:	b	d370 <mpfr_overflow@@Base+0x60>
    d364:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    d368:	mov	w1, #0x1                   	// #1
    d36c:	str	x0, [x21, #16]
    d370:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d374:	ldr	x2, [x0, #2576]
    d378:	add	x0, x0, #0xa10
    d37c:	blr	x2
    d380:	add	x19, x19, x0
    d384:	mov	w2, #0xa                   	// #10
    d388:	str	w20, [x21, #8]
    d38c:	cmp	w20, #0x0
    d390:	ldr	w0, [x19]
    d394:	orr	w0, w0, w2
    d398:	str	w0, [x19]
    d39c:	b.gt	d3a4 <mpfr_overflow@@Base+0x94>
    d3a0:	neg	w1, w1
    d3a4:	mov	w0, w1
    d3a8:	ldp	x19, x20, [sp, #16]
    d3ac:	ldr	x21, [sp, #32]
    d3b0:	ldp	x29, x30, [sp], #48
    d3b4:	ret

000000000000d3b8 <mpfr_assert_fail@@Base>:
    d3b8:	stp	x29, x30, [sp, #-48]!
    d3bc:	mov	x29, sp
    d3c0:	stp	x19, x20, [sp, #16]
    d3c4:	adrp	x19, 81000 <__gmpfr_l2b@@Base+0x200>
    d3c8:	stp	x21, x22, [sp, #32]
    d3cc:	mov	x21, x2
    d3d0:	cbz	x0, d414 <mpfr_assert_fail@@Base+0x5c>
    d3d4:	mov	w20, w1
    d3d8:	ldrb	w1, [x0]
    d3dc:	cbz	w1, d414 <mpfr_assert_fail@@Base+0x5c>
    d3e0:	ldr	x22, [x19, #3968]
    d3e4:	mov	x2, x0
    d3e8:	adrp	x1, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
    d3ec:	add	x1, x1, #0x8d8
    d3f0:	ldr	x0, [x22]
    d3f4:	bl	cce0 <fprintf@plt>
    d3f8:	cmn	w20, #0x1
    d3fc:	b.eq	d414 <mpfr_assert_fail@@Base+0x5c>  // b.none
    d400:	ldr	x0, [x22]
    d404:	adrp	x1, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
    d408:	mov	w2, w20
    d40c:	add	x1, x1, #0x8e0
    d410:	bl	cce0 <fprintf@plt>
    d414:	ldr	x19, [x19, #3968]
    d418:	mov	x2, x21
    d41c:	adrp	x1, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
    d420:	add	x1, x1, #0x8e8
    d424:	ldr	x0, [x19]
    d428:	bl	cce0 <fprintf@plt>
    d42c:	bl	c3e0 <abort@plt>

000000000000d430 <mpfr_abort_prec_max@@Base>:
    d430:	stp	x29, x30, [sp, #-16]!
    d434:	adrp	x3, 81000 <__gmpfr_l2b@@Base+0x200>
    d438:	mov	x2, #0x21                  	// #33
    d43c:	mov	x29, sp
    d440:	ldr	x3, [x3, #3968]
    d444:	mov	x1, #0x1                   	// #1
    d448:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
    d44c:	add	x0, x0, #0x110
    d450:	ldr	x3, [x3]
    d454:	bl	c8c0 <fwrite@plt>
    d458:	bl	c3e0 <abort@plt>
    d45c:	nop

000000000000d460 <mpfr_add@@Base>:
    d460:	stp	x29, x30, [sp, #-48]!
    d464:	mov	x4, #0x5                   	// #5
    d468:	movk	x4, #0x8000, lsl #48
    d46c:	mov	x29, sp
    d470:	ldr	x5, [x1, #16]
    d474:	stp	x19, x20, [sp, #16]
    d478:	mov	x19, x1
    d47c:	stp	x21, x22, [sp, #32]
    d480:	mov	x20, x2
    d484:	mov	x22, x0
    d488:	mov	w21, w3
    d48c:	cmp	x5, x4
    d490:	b.lt	d504 <mpfr_add@@Base+0xa4>  // b.tstop
    d494:	ldr	x6, [x2, #16]
    d498:	cmp	x6, x4
    d49c:	b.lt	d598 <mpfr_add@@Base+0x138>  // b.tstop
    d4a0:	ldr	w7, [x2, #8]
    d4a4:	ldr	w8, [x1, #8]
    d4a8:	ldr	x4, [x0]
    d4ac:	cmp	w8, w7
    d4b0:	ldr	x7, [x1]
    d4b4:	b.ne	d604 <mpfr_add@@Base+0x1a4>  // b.any
    d4b8:	cmp	x4, x7
    d4bc:	b.ne	d4dc <mpfr_add@@Base+0x7c>  // b.any
    d4c0:	ldr	x7, [x2]
    d4c4:	cmp	x4, x7
    d4c8:	b.ne	d4dc <mpfr_add@@Base+0x7c>  // b.any
    d4cc:	ldp	x19, x20, [sp, #16]
    d4d0:	ldp	x21, x22, [sp, #32]
    d4d4:	ldp	x29, x30, [sp], #48
    d4d8:	b	cbb0 <mpfr_add1sp@plt>
    d4dc:	mov	w3, w21
    d4e0:	cmp	x5, x6
    d4e4:	b.ge	d5f8 <mpfr_add@@Base+0x198>  // b.tcont
    d4e8:	mov	x2, x19
    d4ec:	mov	x1, x20
    d4f0:	mov	x0, x22
    d4f4:	ldp	x19, x20, [sp, #16]
    d4f8:	ldp	x21, x22, [sp, #32]
    d4fc:	ldp	x29, x30, [sp], #48
    d500:	b	c780 <mpfr_add1@plt>
    d504:	mov	x1, #0x2                   	// #2
    d508:	movk	x1, #0x8000, lsl #48
    d50c:	cmp	x5, x1
    d510:	b.eq	d554 <mpfr_add@@Base+0xf4>  // b.none
    d514:	ldr	x6, [x2, #16]
    d518:	cmp	x6, x1
    d51c:	b.eq	d554 <mpfr_add@@Base+0xf4>  // b.none
    d520:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    d524:	cmp	x5, x1
    d528:	b.ne	d65c <mpfr_add@@Base+0x1fc>  // b.any
    d52c:	ldr	w0, [x19, #8]
    d530:	cmp	x6, x5
    d534:	b.ne	d544 <mpfr_add@@Base+0xe4>  // b.any
    d538:	ldr	w1, [x2, #8]
    d53c:	cmp	w1, w0
    d540:	b.ne	d554 <mpfr_add@@Base+0xf4>  // b.any
    d544:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    d548:	str	w0, [x22, #8]
    d54c:	str	x1, [x22, #16]
    d550:	b	d584 <mpfr_add@@Base+0x124>
    d554:	mrs	x1, tpidr_el0
    d558:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    d55c:	ldr	x2, [x0, #2576]
    d560:	add	x0, x0, #0xa10
    d564:	blr	x2
    d568:	add	x0, x1, x0
    d56c:	mov	x1, #0x2                   	// #2
    d570:	movk	x1, #0x8000, lsl #48
    d574:	str	x1, [x22, #16]
    d578:	ldr	w1, [x0]
    d57c:	orr	w1, w1, #0x4
    d580:	str	w1, [x0]
    d584:	mov	w0, #0x0                   	// #0
    d588:	ldp	x19, x20, [sp, #16]
    d58c:	ldp	x21, x22, [sp, #32]
    d590:	ldp	x29, x30, [sp], #48
    d594:	ret
    d598:	mov	x0, #0x2                   	// #2
    d59c:	movk	x0, #0x8000, lsl #48
    d5a0:	cmp	x6, x0
    d5a4:	b.eq	d554 <mpfr_add@@Base+0xf4>  // b.none
    d5a8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    d5ac:	cmp	x6, x0
    d5b0:	b.eq	d628 <mpfr_add@@Base+0x1c8>  // b.none
    d5b4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d5b8:	cmp	x6, x0
    d5bc:	b.eq	d6b8 <mpfr_add@@Base+0x258>  // b.none
    d5c0:	ldr	w1, [x19, #8]
    d5c4:	ldr	w0, [x20, #8]
    d5c8:	cmp	w1, w0
    d5cc:	b.ne	d63c <mpfr_add@@Base+0x1dc>  // b.any
    d5d0:	mov	x0, #0x4                   	// #4
    d5d4:	movk	x0, #0x8000, lsl #48
    d5d8:	cmp	x6, x0
    d5dc:	ccmp	x5, x0, #0x4, ne  // ne = any
    d5e0:	b.eq	d6d8 <mpfr_add@@Base+0x278>  // b.none
    d5e4:	cmp	x5, x6
    d5e8:	cset	w0, lt  // lt = tstop
    d5ec:	mov	w3, w21
    d5f0:	cbnz	w0, d4e8 <mpfr_add@@Base+0x88>
    d5f4:	nop
    d5f8:	mov	x2, x20
    d5fc:	mov	x1, x19
    d600:	b	d4f0 <mpfr_add@@Base+0x90>
    d604:	cmp	x4, x7
    d608:	b.ne	d63c <mpfr_add@@Base+0x1dc>  // b.any
    d60c:	ldr	x5, [x2]
    d610:	cmp	x5, x4
    d614:	b.ne	d63c <mpfr_add@@Base+0x1dc>  // b.any
    d618:	ldp	x19, x20, [sp, #16]
    d61c:	ldp	x21, x22, [sp, #32]
    d620:	ldp	x29, x30, [sp], #48
    d624:	b	c0f0 <mpfr_sub1sp@plt>
    d628:	ldr	w1, [x20, #8]
    d62c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    d630:	str	w1, [x22, #8]
    d634:	str	x0, [x22, #16]
    d638:	b	d584 <mpfr_add@@Base+0x124>
    d63c:	mov	w3, w21
    d640:	mov	x2, x20
    d644:	mov	x1, x19
    d648:	mov	x0, x22
    d64c:	ldp	x19, x20, [sp, #16]
    d650:	ldp	x21, x22, [sp, #32]
    d654:	ldp	x29, x30, [sp], #48
    d658:	b	ca70 <mpfr_sub1@plt>
    d65c:	cmp	x6, x1
    d660:	b.eq	d628 <mpfr_add@@Base+0x1c8>  // b.none
    d664:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    d668:	cmp	x5, x1
    d66c:	b.ne	d5b4 <mpfr_add@@Base+0x154>  // b.any
    d670:	cmp	x6, x5
    d674:	b.ne	d69c <mpfr_add@@Base+0x23c>  // b.any
    d678:	ldr	w1, [x19, #8]
    d67c:	cmp	w3, #0x3
    d680:	b.eq	d6f0 <mpfr_add@@Base+0x290>  // b.none
    d684:	mov	w0, #0x1                   	// #1
    d688:	tbnz	w1, #31, d718 <mpfr_add@@Base+0x2b8>
    d68c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    d690:	str	w0, [x22, #8]
    d694:	str	x1, [x22, #16]
    d698:	b	d584 <mpfr_add@@Base+0x124>
    d69c:	mov	w2, w3
    d6a0:	mov	x1, x20
    d6a4:	ldr	w3, [x20, #8]
    d6a8:	ldp	x19, x20, [sp, #16]
    d6ac:	ldp	x21, x22, [sp, #32]
    d6b0:	ldp	x29, x30, [sp], #48
    d6b4:	b	c6a0 <mpfr_set4@plt>
    d6b8:	ldr	w3, [x19, #8]
    d6bc:	mov	w2, w21
    d6c0:	mov	x0, x22
    d6c4:	mov	x1, x19
    d6c8:	ldp	x19, x20, [sp, #16]
    d6cc:	ldp	x21, x22, [sp, #32]
    d6d0:	ldp	x29, x30, [sp], #48
    d6d4:	b	c6a0 <mpfr_set4@plt>
    d6d8:	mov	x1, x20
    d6dc:	mov	x0, x19
    d6e0:	bl	cab0 <mpfr_ubf_exp_less_p@plt>
    d6e4:	cmp	w0, #0x0
    d6e8:	cset	w0, ne  // ne = any
    d6ec:	b	d5ec <mpfr_add@@Base+0x18c>
    d6f0:	cmp	w1, #0x0
    d6f4:	mov	w0, #0xffffffff            	// #-1
    d6f8:	b.le	d68c <mpfr_add@@Base+0x22c>
    d6fc:	ldr	w1, [x2, #8]
    d700:	mov	w0, #0x1                   	// #1
    d704:	cmp	w1, #0x0
    d708:	b.gt	d68c <mpfr_add@@Base+0x22c>
    d70c:	cmp	w1, w0
    d710:	cneg	w0, w0, lt  // lt = tstop
    d714:	b	d68c <mpfr_add@@Base+0x22c>
    d718:	ldr	w1, [x2, #8]
    d71c:	mov	w0, #0xffffffff            	// #-1
    d720:	tbnz	w1, #31, d68c <mpfr_add@@Base+0x22c>
    d724:	cmn	w1, #0x1
    d728:	mov	w0, #0xffffffff            	// #-1
    d72c:	cneg	w0, w0, gt
    d730:	b	d68c <mpfr_add@@Base+0x22c>
    d734:	nop

000000000000d738 <mpfr_add1@@Base>:
    d738:	stp	x29, x30, [sp, #-176]!
    d73c:	mov	x4, x1
    d740:	mov	x9, x2
    d744:	mov	x29, sp
    d748:	stp	x23, x24, [sp, #48]
    d74c:	ldr	x23, [x1, #16]
    d750:	stp	x19, x20, [sp, #16]
    d754:	mov	w20, w3
    d758:	stp	x21, x22, [sp, #32]
    d75c:	stp	x25, x26, [sp, #64]
    d760:	mov	x25, x0
    d764:	mov	x0, #0x4                   	// #4
    d768:	stp	x27, x28, [sp, #80]
    d76c:	movk	x0, #0x8000, lsl #48
    d770:	cmp	x23, x0
    d774:	b.eq	dd40 <mpfr_add1@@Base+0x608>  // b.none
    d778:	ldr	x21, [x25]
    d77c:	str	xzr, [x29, #168]
    d780:	ldr	x8, [x9]
    d784:	sub	x22, x21, #0x1
    d788:	ldr	x19, [x4]
    d78c:	asr	x22, x22, #6
    d790:	sub	x8, x8, #0x1
    d794:	add	x28, x22, #0x1
    d798:	ldr	x1, [x4, #24]
    d79c:	lsl	x0, x28, #6
    d7a0:	asr	x8, x8, #6
    d7a4:	sub	x19, x19, #0x1
    d7a8:	ldr	x26, [x25, #24]
    d7ac:	sub	w21, w0, w21
    d7b0:	stp	x1, x0, [x29, #144]
    d7b4:	add	x0, x8, #0x1
    d7b8:	asr	x19, x19, #6
    d7bc:	str	x0, [x29, #136]
    d7c0:	cmp	x26, x1
    d7c4:	ldr	x24, [x9, #24]
    d7c8:	b.eq	dd94 <mpfr_add1@@Base+0x65c>  // b.none
    d7cc:	cmp	x26, x24
    d7d0:	b.eq	db40 <mpfr_add1@@Base+0x408>  // b.none
    d7d4:	ldr	w0, [x4, #8]
    d7d8:	cmp	w20, #0x2
    d7dc:	str	w0, [x25, #8]
    d7e0:	b.eq	da84 <mpfr_add1@@Base+0x34c>  // b.none
    d7e4:	cmp	w20, #0x3
    d7e8:	b.eq	d9a0 <mpfr_add1@@Base+0x268>  // b.none
    d7ec:	ldr	x0, [x9, #16]
    d7f0:	mov	x1, #0x4                   	// #4
    d7f4:	movk	x1, #0x8000, lsl #48
    d7f8:	sub	x27, x23, x0
    d7fc:	cmp	x0, x1
    d800:	b.eq	d9c4 <mpfr_add1@@Base+0x28c>  // b.none
    d804:	ldr	x0, [x29, #152]
    d808:	cmp	x0, x27
    d80c:	b.ls	dd14 <mpfr_add1@@Base+0x5dc>  // b.plast
    d810:	sub	x2, x0, x27
    d814:	sub	x2, x2, #0x1
    d818:	asr	x2, x2, #6
    d81c:	cmp	x8, x2
    d820:	add	x9, x2, #0x1
    d824:	b.lt	de04 <mpfr_add1@@Base+0x6cc>  // b.tstop
    d828:	asr	x2, x27, #6
    d82c:	lsl	x0, x9, #3
    d830:	sub	x4, x28, x2
    d834:	mov	w1, #0x0                   	// #0
    d838:	lsl	x2, x2, #3
    d83c:	stp	x9, x0, [x29, #120]
    d840:	add	x4, x26, x4, lsl #3
    d844:	mov	x0, x4
    d848:	bl	c110 <memset@plt>
    d84c:	mov	x4, x0
    d850:	ldp	x9, x0, [x29, #120]
    d854:	str	x4, [x29, #112]
    d858:	ands	x3, x27, #0x3f
    d85c:	sub	x8, x4, x0
    d860:	ldr	x0, [x29, #136]
    d864:	sub	x1, x0, x9
    d868:	b.eq	dde8 <mpfr_add1@@Base+0x6b0>  // b.none
    d86c:	mov	x0, x8
    d870:	mov	x2, x9
    d874:	add	x1, x24, x1, lsl #3
    d878:	str	x8, [x29, #120]
    d87c:	bl	bce0 <__gmpn_rshift@plt>
    d880:	ldp	x4, x8, [x29, #112]
    d884:	cmp	x26, x8
    d888:	b.cc	de90 <mpfr_add1@@Base+0x758>  // b.lo, b.ul, b.last
    d88c:	cmp	x22, x19
    d890:	b.le	d97c <mpfr_add1@@Base+0x244>
    d894:	ldr	x2, [x29, #144]
    d898:	sub	x1, x22, x19
    d89c:	add	x3, x19, #0x1
    d8a0:	add	x1, x26, x1, lsl #3
    d8a4:	mov	x0, x1
    d8a8:	bl	c5a0 <__gmpn_add_n@plt>
    d8ac:	cbnz	x0, dc40 <mpfr_add1@@Base+0x508>
    d8b0:	cbz	w21, e000 <mpfr_add1@@Base+0x8c8>
    d8b4:	ldr	x0, [x26]
    d8b8:	mov	x8, #0x1                   	// #1
    d8bc:	lsl	x2, x8, x21
    d8c0:	neg	x3, x2
    d8c4:	sub	x1, x2, #0x1
    d8c8:	subs	w4, w21, #0x1
    d8cc:	and	x2, x0, x1
    d8d0:	and	x0, x3, x0
    d8d4:	str	x0, [x26]
    d8d8:	lsr	x4, x2, x4
    d8dc:	b.le	de28 <mpfr_add1@@Base+0x6f0>
    d8e0:	lsr	x1, x1, #1
    d8e4:	ands	x2, x2, x1
    d8e8:	b.ne	d9e0 <mpfr_add1@@Base+0x2a8>  // b.any
    d8ec:	cmp	x27, #0x0
    d8f0:	add	x0, x27, #0x3f
    d8f4:	csel	x0, x0, x27, lt  // lt = tstop
    d8f8:	cmp	x22, x19
    d8fc:	sub	x0, x28, x0, asr #6
    d900:	b.lt	dff0 <mpfr_add1@@Base+0x8b8>  // b.tstop
    d904:	ldr	x1, [x29, #136]
    d908:	cmp	x1, x0
    d90c:	b.lt	da94 <mpfr_add1@@Base+0x35c>  // b.tstop
    d910:	ldr	x1, [x29, #152]
    d914:	cmp	x1, x27
    d918:	b.cc	dbbc <mpfr_add1@@Base+0x484>  // b.lo, b.ul, b.last
    d91c:	ldr	x1, [x29, #136]
    d920:	ands	x6, x27, #0x3f
    d924:	sub	x28, x1, x0
    d928:	ccmp	x28, #0x0, #0x0, eq  // eq = none
    d92c:	b.eq	da94 <mpfr_add1@@Base+0x35c>  // b.none
    d930:	cbz	x6, dfc4 <mpfr_add1@@Base+0x88c>
    d934:	ldr	x0, [x24, x28, lsl #3]
    d938:	neg	w6, w6
    d93c:	lsl	x0, x0, x6
    d940:	tbz	w4, #31, d94c <mpfr_add1@@Base+0x214>
    d944:	lsr	x4, x0, #63
    d948:	and	x0, x0, #0x7fffffffffffffff
    d94c:	cmp	w20, #0x5
    d950:	cset	w1, eq  // eq = none
    d954:	cmp	x0, #0x0
    d958:	csel	w2, w1, wzr, eq  // eq = none
    d95c:	cbnz	w2, daa8 <mpfr_add1@@Base+0x370>
    d960:	cbnz	x0, dfd0 <mpfr_add1@@Base+0x898>
    d964:	nop
    d968:	cbz	x28, e020 <mpfr_add1@@Base+0x8e8>
    d96c:	sub	x28, x28, #0x1
    d970:	ldr	x0, [x24, x28, lsl #3]
    d974:	cbz	x0, d968 <mpfr_add1@@Base+0x230>
    d978:	b	d9f8 <mpfr_add1@@Base+0x2c0>
    d97c:	ldr	x4, [x29, #144]
    d980:	sub	x2, x19, x22
    d984:	mov	x3, x28
    d988:	mov	x1, x26
    d98c:	mov	x0, x26
    d990:	add	x2, x4, x2, lsl #3
    d994:	bl	c5a0 <__gmpn_add_n@plt>
    d998:	cbz	x0, d8b0 <mpfr_add1@@Base+0x178>
    d99c:	b	dc40 <mpfr_add1@@Base+0x508>
    d9a0:	cmp	w0, #0x0
    d9a4:	mov	x1, #0x4                   	// #4
    d9a8:	ldr	x0, [x9, #16]
    d9ac:	mov	w20, #0x4                   	// #4
    d9b0:	movk	x1, #0x8000, lsl #48
    d9b4:	csinc	w20, w20, wzr, lt  // lt = tstop
    d9b8:	sub	x27, x23, x0
    d9bc:	cmp	x0, x1
    d9c0:	b.ne	d804 <mpfr_add1@@Base+0xcc>  // b.any
    d9c4:	mov	x1, x9
    d9c8:	mov	x0, x4
    d9cc:	str	x8, [x29, #128]
    d9d0:	bl	cb00 <mpfr_ubf_diff_exp@plt>
    d9d4:	mov	x27, x0
    d9d8:	ldr	x8, [x29, #128]
    d9dc:	b	d804 <mpfr_add1@@Base+0xcc>
    d9e0:	cmp	x1, x2
    d9e4:	b.ne	db88 <mpfr_add1@@Base+0x450>  // b.any
    d9e8:	cmp	x22, x19
    d9ec:	b.lt	e08c <mpfr_add1@@Base+0x954>  // b.tstop
    d9f0:	cmp	w20, #0x5
    d9f4:	cset	w2, eq  // eq = none
    d9f8:	cmp	w20, #0x0
    d9fc:	mrs	x8, tpidr_el0
    da00:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    da04:	b.eq	dfa0 <mpfr_add1@@Base+0x868>  // b.none
    da08:	cbz	w4, dac0 <mpfr_add1@@Base+0x388>
    da0c:	ldr	x0, [x26]
    da10:	mov	x9, #0x1                   	// #1
    da14:	ldr	w1, [x25, #8]
    da18:	mov	w4, #0xffffffff            	// #-1
    da1c:	lsl	x9, x9, x21
    da20:	cmp	w1, #0x0
    da24:	cneg	w4, w4, gt
    da28:	adds	x0, x9, x0
    da2c:	str	x0, [x26]
    da30:	b.cc	dad0 <mpfr_add1@@Base+0x398>  // b.lo, b.ul, b.last
    da34:	mov	x0, x26
    da38:	add	x2, x26, x22, lsl #3
    da3c:	b	da50 <mpfr_add1@@Base+0x318>
    da40:	ldr	x1, [x0, #8]
    da44:	add	x1, x1, #0x1
    da48:	str	x1, [x0, #8]!
    da4c:	cbnz	x1, dad0 <mpfr_add1@@Base+0x398>
    da50:	cmp	x2, x0
    da54:	b.ne	da40 <mpfr_add1@@Base+0x308>  // b.any
    da58:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    da5c:	ldr	x1, [x0, #2544]
    da60:	add	x0, x0, #0x9f0
    da64:	blr	x1
    da68:	ldr	x0, [x8, x0]
    da6c:	cmp	x0, x23
    da70:	b.eq	e4d0 <mpfr_add1@@Base+0xd98>  // b.none
    da74:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    da78:	add	x23, x23, #0x1
    da7c:	str	x0, [x26, x22, lsl #3]
    da80:	b	dad0 <mpfr_add1@@Base+0x398>
    da84:	cmp	w0, #0x0
    da88:	mov	w20, #0x4                   	// #4
    da8c:	csinc	w20, w20, wzr, gt
    da90:	b	d7ec <mpfr_add1@@Base+0xb4>
    da94:	cmp	w4, #0x0
    da98:	csel	w4, w4, wzr, ge  // ge = tcont
    da9c:	cmp	w20, #0x0
    daa0:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    daa4:	b.ne	e028 <mpfr_add1@@Base+0x8f0>  // b.any
    daa8:	mrs	x8, tpidr_el0
    daac:	cbz	w4, dad0 <mpfr_add1@@Base+0x398>
    dab0:	ldr	x0, [x26]
    dab4:	mrs	x8, tpidr_el0
    dab8:	lsr	x1, x0, x21
    dabc:	tbnz	w1, #0, da10 <mpfr_add1@@Base+0x2d8>
    dac0:	ldr	w0, [x25, #8]
    dac4:	mov	w4, #0xffffffff            	// #-1
    dac8:	cmp	w0, #0x0
    dacc:	cneg	w4, w4, lt  // lt = tstop
    dad0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    dad4:	ldr	x1, [x0, #2512]
    dad8:	add	x0, x0, #0x9d0
    dadc:	blr	x1
    dae0:	ldr	x0, [x8, x0]
    dae4:	cmp	x0, x23
    dae8:	b.gt	dbd8 <mpfr_add1@@Base+0x4a0>
    daec:	str	x23, [x25, #16]
    daf0:	ldr	x0, [x29, #168]
    daf4:	cbnz	x0, dc28 <mpfr_add1@@Base+0x4f0>
    daf8:	cbz	w4, db1c <mpfr_add1@@Base+0x3e4>
    dafc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    db00:	ldr	x1, [x0, #2576]
    db04:	add	x0, x0, #0xa10
    db08:	blr	x1
    db0c:	add	x0, x8, x0
    db10:	ldr	w1, [x0]
    db14:	orr	w1, w1, #0x8
    db18:	str	w1, [x0]
    db1c:	mov	sp, x29
    db20:	mov	w0, w4
    db24:	ldp	x19, x20, [sp, #16]
    db28:	ldp	x21, x22, [sp, #32]
    db2c:	ldp	x23, x24, [sp, #48]
    db30:	ldp	x25, x26, [sp, #64]
    db34:	ldp	x27, x28, [sp, #80]
    db38:	ldp	x29, x30, [sp], #176
    db3c:	ret
    db40:	add	x0, x8, #0x1
    db44:	lsl	x2, x0, #3
    db48:	cmp	x2, #0x4, lsl #12
    db4c:	b.hi	e068 <mpfr_add1@@Base+0x930>  // b.pmore
    db50:	add	x0, x2, #0xf
    db54:	and	x0, x0, #0xfffffffffffffff0
    db58:	sub	sp, sp, x0
    db5c:	mov	x24, sp
    db60:	cmp	x24, x26
    db64:	b.eq	d7d4 <mpfr_add1@@Base+0x9c>  // b.none
    db68:	mov	x1, x26
    db6c:	mov	x0, x24
    db70:	stp	x9, x4, [x29, #112]
    db74:	str	x8, [x29, #128]
    db78:	bl	ba10 <memcpy@plt>
    db7c:	ldp	x9, x4, [x29, #112]
    db80:	ldr	x8, [x29, #128]
    db84:	b	d7d4 <mpfr_add1@@Base+0x9c>
    db88:	cmp	w20, #0x0
    db8c:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    db90:	b.eq	df18 <mpfr_add1@@Base+0x7e0>  // b.none
    db94:	cmp	w20, #0x1
    db98:	b.eq	e154 <mpfr_add1@@Base+0xa1c>  // b.none
    db9c:	cmp	w20, #0x4
    dba0:	b.eq	dfb4 <mpfr_add1@@Base+0x87c>  // b.none
    dba4:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
    dba8:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
    dbac:	add	x2, x2, #0x228
    dbb0:	add	x0, x0, #0x240
    dbb4:	mov	w1, #0x221                 	// #545
    dbb8:	bl	cb40 <mpfr_assert_fail@plt>
    dbbc:	cmp	w4, #0x0
    dbc0:	mrs	x8, tpidr_el0
    dbc4:	csel	w4, w4, wzr, ge  // ge = tcont
    dbc8:	cmp	w20, #0x0
    dbcc:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    dbd0:	b.eq	da08 <mpfr_add1@@Base+0x2d0>  // b.none
    dbd4:	b	dfa0 <mpfr_add1@@Base+0x868>
    dbd8:	cbnz	w20, dc08 <mpfr_add1@@Base+0x4d0>
    dbdc:	sub	x0, x0, #0x1
    dbe0:	cmp	x0, x23
    dbe4:	b.gt	e4c8 <mpfr_add1@@Base+0xd90>
    dbe8:	cmn	w4, #0x1
    dbec:	b.eq	dc08 <mpfr_add1@@Base+0x4d0>  // b.none
    dbf0:	mov	x0, x25
    dbf4:	str	x8, [x29, #152]
    dbf8:	bl	bf00 <mpfr_powerof2_raw@plt>
    dbfc:	cmp	w0, #0x0
    dc00:	ldr	x8, [x29, #152]
    dc04:	cset	w20, ne  // ne = any
    dc08:	ldr	w2, [x25, #8]
    dc0c:	mov	w1, w20
    dc10:	mov	x0, x25
    dc14:	str	x8, [x29, #152]
    dc18:	bl	c3c0 <mpfr_underflow@plt>
    dc1c:	mov	w4, w0
    dc20:	ldr	x8, [x29, #152]
    dc24:	b	daf0 <mpfr_add1@@Base+0x3b8>
    dc28:	str	x8, [x29, #144]
    dc2c:	str	w4, [x29, #152]
    dc30:	bl	c410 <mpfr_tmp_free@plt>
    dc34:	ldr	w4, [x29, #152]
    dc38:	ldr	x8, [x29, #144]
    dc3c:	b	daf8 <mpfr_add1@@Base+0x3c0>
    dc40:	mrs	x8, tpidr_el0
    dc44:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    dc48:	ldr	x1, [x0, #2544]
    dc4c:	add	x0, x0, #0x9f0
    dc50:	blr	x1
    dc54:	ldr	x0, [x8, x0]
    dc58:	cmp	x0, x23
    dc5c:	b.eq	e4d0 <mpfr_add1@@Base+0xd98>  // b.none
    dc60:	ldr	x0, [x26]
    dc64:	lsl	x10, x28, #3
    dc68:	add	x23, x23, #0x1
    dc6c:	sub	x10, x10, #0x8
    dc70:	lsr	x4, x0, x21
    dc74:	and	w4, w4, #0x1
    dc78:	cbz	w21, e1e0 <mpfr_add1@@Base+0xaa8>
    dc7c:	mov	x11, #0x1                   	// #1
    dc80:	lsl	x9, x11, x21
    dc84:	sub	x2, x9, #0x1
    dc88:	neg	x1, x9, lsl #1
    dc8c:	and	x1, x1, x0
    dc90:	str	x1, [x26]
    dc94:	ands	x0, x0, x2
    dc98:	b.eq	df20 <mpfr_add1@@Base+0x7e8>  // b.none
    dc9c:	cmp	x2, x0
    dca0:	b.eq	e0fc <mpfr_add1@@Base+0x9c4>  // b.none
    dca4:	mov	x1, x26
    dca8:	mov	w3, w11
    dcac:	mov	x2, x28
    dcb0:	mov	x0, x26
    dcb4:	stp	x8, x10, [x29, #128]
    dcb8:	str	w4, [x29, #144]
    dcbc:	str	x9, [x29, #152]
    dcc0:	bl	bce0 <__gmpn_rshift@plt>
    dcc4:	ldp	x8, x10, [x29, #128]
    dcc8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    dccc:	cmp	w20, #0x0
    dcd0:	ldr	w4, [x29, #144]
    dcd4:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    dcd8:	ldr	x9, [x29, #152]
    dcdc:	ldr	x0, [x26, x10]
    dce0:	add	x0, x0, x1
    dce4:	str	x0, [x26, x10]
    dce8:	b.eq	da08 <mpfr_add1@@Base+0x2d0>  // b.none
    dcec:	cmp	w20, #0x1
    dcf0:	b.eq	e158 <mpfr_add1@@Base+0xa20>  // b.none
    dcf4:	cmp	w20, #0x4
    dcf8:	b.ne	dba4 <mpfr_add1@@Base+0x46c>  // b.any
    dcfc:	ldr	x0, [x26]
    dd00:	mov	w4, #0x1                   	// #1
    dd04:	ldr	w1, [x25, #8]
    dd08:	cmp	w1, w4
    dd0c:	cneg	w4, w4, lt  // lt = tstop
    dd10:	b	da28 <mpfr_add1@@Base+0x2f0>
    dd14:	cmp	x22, x19
    dd18:	b.gt	e17c <mpfr_add1@@Base+0xa44>
    dd1c:	ldr	x0, [x29, #144]
    dd20:	sub	x1, x19, x22
    dd24:	add	x1, x0, x1, lsl #3
    dd28:	cmp	x1, x26
    dd2c:	b.eq	d8b0 <mpfr_add1@@Base+0x178>  // b.none
    dd30:	lsl	x2, x28, #3
    dd34:	mov	x0, x26
    dd38:	bl	ba10 <memcpy@plt>
    dd3c:	b	d8b0 <mpfr_add1@@Base+0x178>
    dd40:	mrs	x8, tpidr_el0
    dd44:	add	x0, x1, #0x20
    dd48:	stp	x2, x8, [x29, #136]
    dd4c:	str	x1, [x29, #152]
    dd50:	bl	bc40 <mpfr_ubf_zexp2exp@plt>
    dd54:	ldp	x9, x8, [x29, #136]
    dd58:	mov	x23, x0
    dd5c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    dd60:	ldr	x1, [x0, #2544]
    dd64:	add	x0, x0, #0x9f0
    dd68:	blr	x1
    dd6c:	ldr	x4, [x29, #152]
    dd70:	ldr	x0, [x8, x0]
    dd74:	cmp	x0, x23
    dd78:	b.ge	d778 <mpfr_add1@@Base+0x40>  // b.tcont
    dd7c:	ldr	w2, [x4, #8]
    dd80:	mov	w1, w20
    dd84:	mov	x0, x25
    dd88:	bl	bf40 <mpfr_overflow@plt>
    dd8c:	mov	w4, w0
    dd90:	b	db1c <mpfr_add1@@Base+0x3e4>
    dd94:	add	x0, x19, #0x1
    dd98:	lsl	x2, x0, #3
    dd9c:	cmp	x2, #0x4, lsl #12
    dda0:	b.hi	e1bc <mpfr_add1@@Base+0xa84>  // b.pmore
    dda4:	add	x0, x2, #0xf
    dda8:	and	x0, x0, #0xfffffffffffffff0
    ddac:	sub	sp, sp, x0
    ddb0:	mov	x0, sp
    ddb4:	str	x0, [x29, #144]
    ddb8:	cmp	x0, x26
    ddbc:	b.eq	ddd8 <mpfr_add1@@Base+0x6a0>  // b.none
    ddc0:	mov	x1, x26
    ddc4:	stp	x9, x4, [x29, #112]
    ddc8:	str	x8, [x29, #128]
    ddcc:	bl	ba10 <memcpy@plt>
    ddd0:	ldp	x9, x4, [x29, #112]
    ddd4:	ldr	x8, [x29, #128]
    ddd8:	cmp	x26, x24
    dddc:	ldr	x0, [x29, #144]
    dde0:	csel	x24, x24, x0, ne  // ne = any
    dde4:	b	d7d4 <mpfr_add1@@Base+0x9c>
    dde8:	add	x1, x24, x1, lsl #3
    ddec:	cmp	x1, x8
    ddf0:	b.eq	d88c <mpfr_add1@@Base+0x154>  // b.none
    ddf4:	ldr	x2, [x29, #128]
    ddf8:	mov	x0, x8
    ddfc:	bl	ba10 <memcpy@plt>
    de00:	b	d88c <mpfr_add1@@Base+0x154>
    de04:	ldr	x9, [x29, #136]
    de08:	sub	x2, x2, x8
    de0c:	mov	x0, x26
    de10:	mov	w1, #0x0                   	// #0
    de14:	lsl	x2, x2, #3
    de18:	str	x9, [x29, #128]
    de1c:	bl	c110 <memset@plt>
    de20:	ldr	x9, [x29, #128]
    de24:	b	d828 <mpfr_add1@@Base+0xf0>
    de28:	cmp	x27, #0x0
    de2c:	add	x0, x27, #0x3f
    de30:	csel	x0, x0, x27, lt  // lt = tstop
    de34:	cmp	x22, x19
    de38:	sub	x0, x28, x0, asr #6
    de3c:	b.ge	d904 <mpfr_add1@@Base+0x1cc>  // b.tcont
    de40:	mov	w8, #0xffffffff            	// #-1
    de44:	sub	x19, x19, x22
    de48:	tbz	x0, #63, e1ec <mpfr_add1@@Base+0xab4>
    de4c:	ldr	x1, [x29, #144]
    de50:	sub	x19, x19, #0x1
    de54:	ldr	x1, [x1, x19, lsl #3]
    de58:	cmp	w8, #0x1
    de5c:	b.ne	dfd8 <mpfr_add1@@Base+0x8a0>  // b.any
    de60:	cmp	w20, #0x5
    de64:	cset	w2, eq  // eq = none
    de68:	cmp	w2, #0x0
    de6c:	ccmn	x1, #0x1, #0x0, eq  // eq = none
    de70:	b.ne	d9f8 <mpfr_add1@@Base+0x2c0>  // b.any
    de74:	cbz	x19, d9f0 <mpfr_add1@@Base+0x2b8>
    de78:	adds	x0, x0, #0x1
    de7c:	b.eq	e228 <mpfr_add1@@Base+0xaf0>  // b.none
    de80:	ldr	x1, [x29, #144]
    de84:	sub	x19, x19, #0x1
    de88:	ldr	x1, [x1, x19, lsl #3]
    de8c:	b	de60 <mpfr_add1@@Base+0x728>
    de90:	ldr	x1, [x29, #128]
    de94:	sub	x4, x4, x1
    de98:	stur	x0, [x4, #-8]
    de9c:	b	d88c <mpfr_add1@@Base+0x154>
    dea0:	sub	x1, x1, #0x1
    dea4:	cbz	x6, e3c8 <mpfr_add1@@Base+0xc90>
    dea8:	neg	w0, w11
    deac:	lsl	x2, x10, x0
    deb0:	tbnz	x1, #63, dec0 <mpfr_add1@@Base+0x788>
    deb4:	ldr	x10, [x24, x1, lsl #3]
    deb8:	lsr	x0, x10, x11
    debc:	add	x2, x2, x0
    dec0:	ldr	x0, [x29, #144]
    dec4:	sub	x19, x19, #0x1
    dec8:	ldr	x0, [x0, x19, lsl #3]
    decc:	adds	x0, x0, x2
    ded0:	mov	x2, x0
    ded4:	b.cc	e3b4 <mpfr_add1@@Base+0xc7c>  // b.lo, b.ul, b.last
    ded8:	tbnz	w4, #31, e424 <mpfr_add1@@Base+0xcec>
    dedc:	cmp	w4, #0x1
    dee0:	b.eq	e4a8 <mpfr_add1@@Base+0xd70>  // b.none
    dee4:	eor	w4, w4, #0x1
    dee8:	cmp	x2, #0x0
    deec:	sub	x2, x2, #0x1
    def0:	cset	w8, ne  // ne = any
    def4:	cmn	x2, #0x3
    def8:	b.hi	e244 <mpfr_add1@@Base+0xb0c>  // b.pmore
    defc:	cmp	w20, #0x5
    df00:	cset	w0, eq  // eq = none
    df04:	cmp	w20, #0x0
    df08:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    df0c:	b.eq	e02c <mpfr_add1@@Base+0x8f4>  // b.none
    df10:	cbz	w8, daa8 <mpfr_add1@@Base+0x370>
    df14:	nop
    df18:	mrs	x8, tpidr_el0
    df1c:	b	da08 <mpfr_add1@@Base+0x2d0>
    df20:	mov	w8, #0x0                   	// #0
    df24:	str	w11, [x29, #112]
    df28:	mov	x2, x28
    df2c:	mov	x1, x26
    df30:	mov	x0, x26
    df34:	mov	w3, #0x1                   	// #1
    df38:	str	w8, [x29, #104]
    df3c:	str	x10, [x29, #120]
    df40:	str	w4, [x29, #128]
    df44:	bl	bce0 <__gmpn_rshift@plt>
    df48:	ldr	x10, [x29, #120]
    df4c:	cmp	x27, #0x0
    df50:	add	x0, x27, #0x3f
    df54:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    df58:	csel	x0, x0, x27, lt  // lt = tstop
    df5c:	ldr	w4, [x29, #128]
    df60:	ldr	x1, [x26, x10]
    df64:	sub	x0, x28, x0, asr #6
    df68:	cmp	x22, x19
    df6c:	add	x1, x1, x2
    df70:	str	x1, [x26, x10]
    df74:	b.ge	d904 <mpfr_add1@@Base+0x1cc>  // b.tcont
    df78:	ldr	w2, [x29, #112]
    df7c:	cmp	x0, #0x0
    df80:	cset	w1, le
    df84:	ldr	w8, [x29, #104]
    df88:	and	w1, w2, w1
    df8c:	cbz	w1, e0e0 <mpfr_add1@@Base+0x9a8>
    df90:	cmp	w20, #0x0
    df94:	mrs	x8, tpidr_el0
    df98:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    df9c:	b.eq	da08 <mpfr_add1@@Base+0x2d0>  // b.none
    dfa0:	cmp	w20, #0x1
    dfa4:	b.eq	e154 <mpfr_add1@@Base+0xa1c>  // b.none
    dfa8:	cmp	w20, #0x4
    dfac:	b.ne	dba4 <mpfr_add1@@Base+0x46c>  // b.any
    dfb0:	ldr	x0, [x26]
    dfb4:	mov	x9, #0x1                   	// #1
    dfb8:	mrs	x8, tpidr_el0
    dfbc:	lsl	x9, x9, x21
    dfc0:	b	dd00 <mpfr_add1@@Base+0x5c8>
    dfc4:	sub	x28, x28, #0x1
    dfc8:	ldr	x0, [x24, x28, lsl #3]
    dfcc:	b	d940 <mpfr_add1@@Base+0x208>
    dfd0:	mov	w2, w1
    dfd4:	b	d9f8 <mpfr_add1@@Base+0x2c0>
    dfd8:	tbz	w4, #31, dfe4 <mpfr_add1@@Base+0x8ac>
    dfdc:	lsr	x4, x1, #63
    dfe0:	orr	x1, x1, #0x8000000000000000
    dfe4:	cmn	x1, #0x1
    dfe8:	b.eq	de74 <mpfr_add1@@Base+0x73c>  // b.none
    dfec:	b	d9f0 <mpfr_add1@@Base+0x2b8>
    dff0:	cmp	x0, #0x0
    dff4:	mov	w8, #0x0                   	// #0
    dff8:	cset	w1, le
    dffc:	b	df8c <mpfr_add1@@Base+0x854>
    e000:	cmp	x27, #0x0
    e004:	add	x0, x27, #0x3f
    e008:	csel	x0, x0, x27, lt  // lt = tstop
    e00c:	mov	w4, #0xffffffff            	// #-1
    e010:	cmp	x22, x19
    e014:	sub	x0, x28, x0, asr #6
    e018:	b.ge	d904 <mpfr_add1@@Base+0x1cc>  // b.tcont
    e01c:	b	de40 <mpfr_add1@@Base+0x708>
    e020:	cbz	w20, daa8 <mpfr_add1@@Base+0x370>
    e024:	nop
    e028:	mov	w8, #0x0                   	// #0
    e02c:	cmp	w20, #0x1
    e030:	b.eq	e16c <mpfr_add1@@Base+0xa34>  // b.none
    e034:	cmp	w20, #0x4
    e038:	b.ne	dba4 <mpfr_add1@@Base+0x46c>  // b.any
    e03c:	orr	w4, w4, w8
    e040:	mrs	x8, tpidr_el0
    e044:	cbnz	w4, dfb0 <mpfr_add1@@Base+0x878>
    e048:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    e04c:	ldr	x1, [x0, #2512]
    e050:	add	x0, x0, #0x9d0
    e054:	blr	x1
    e058:	ldr	x0, [x8, x0]
    e05c:	cmp	x23, x0
    e060:	b.ge	daec <mpfr_add1@@Base+0x3b4>  // b.tcont
    e064:	b	dc08 <mpfr_add1@@Base+0x4d0>
    e068:	mov	x1, x2
    e06c:	add	x0, x29, #0xa8
    e070:	stp	x9, x4, [x29, #104]
    e074:	stp	x8, x2, [x29, #120]
    e078:	bl	bdc0 <mpfr_tmp_allocate@plt>
    e07c:	mov	x24, x0
    e080:	ldp	x9, x4, [x29, #104]
    e084:	ldp	x8, x2, [x29, #120]
    e088:	b	db60 <mpfr_add1@@Base+0x428>
    e08c:	cmp	x27, #0x0
    e090:	add	x0, x27, #0x3f
    e094:	csel	x0, x0, x27, lt  // lt = tstop
    e098:	sub	x19, x19, x22
    e09c:	subs	x0, x28, x0, asr #6
    e0a0:	b.mi	de4c <mpfr_add1@@Base+0x714>  // b.first
    e0a4:	ldr	x1, [x29, #136]
    e0a8:	cmp	x1, x0
    e0ac:	b.ge	e388 <mpfr_add1@@Base+0xc50>  // b.tcont
    e0b0:	and	w1, w8, #0x1
    e0b4:	cmp	w20, #0x5
    e0b8:	cset	w0, eq  // eq = none
    e0bc:	orr	w2, w0, w1
    e0c0:	cbnz	w2, df04 <mpfr_add1@@Base+0x7cc>
    e0c4:	nop
    e0c8:	cbz	x19, e020 <mpfr_add1@@Base+0x8e8>
    e0cc:	ldr	x0, [x29, #144]
    e0d0:	sub	x19, x19, #0x1
    e0d4:	ldr	x0, [x0, x19, lsl #3]
    e0d8:	cbz	x0, e0c8 <mpfr_add1@@Base+0x990>
    e0dc:	b	d9f8 <mpfr_add1@@Base+0x2c0>
    e0e0:	sub	x19, x19, x22
    e0e4:	tbz	x0, #63, e1ec <mpfr_add1@@Base+0xab4>
    e0e8:	ldr	x1, [x29, #144]
    e0ec:	sub	x19, x19, #0x1
    e0f0:	mov	w8, #0xffffffff            	// #-1
    e0f4:	ldr	x1, [x1, x19, lsl #3]
    e0f8:	b	de58 <mpfr_add1@@Base+0x720>
    e0fc:	mov	w3, w11
    e100:	mov	x1, x26
    e104:	mov	x2, x28
    e108:	mov	x0, x26
    e10c:	str	x10, [x29, #128]
    e110:	str	w4, [x29, #152]
    e114:	bl	bce0 <__gmpn_rshift@plt>
    e118:	ldr	x10, [x29, #128]
    e11c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    e120:	ldr	w4, [x29, #152]
    e124:	cmp	x22, x19
    e128:	mov	x11, #0x1                   	// #1
    e12c:	ldr	x0, [x26, x10]
    e130:	add	x0, x0, x1
    e134:	str	x0, [x26, x10]
    e138:	b.ge	d9f0 <mpfr_add1@@Base+0x2b8>  // b.tcont
    e13c:	cmp	x27, #0x0
    e140:	add	x0, x27, #0x3f
    e144:	csel	x0, x0, x27, lt  // lt = tstop
    e148:	mov	w8, w11
    e14c:	sub	x0, x28, x0, asr #6
    e150:	b	de44 <mpfr_add1@@Base+0x70c>
    e154:	mrs	x8, tpidr_el0
    e158:	ldr	w0, [x25, #8]
    e15c:	mov	w4, #0xffffffff            	// #-1
    e160:	cmp	w0, #0x0
    e164:	cneg	w4, w4, lt  // lt = tstop
    e168:	b	e048 <mpfr_add1@@Base+0x910>
    e16c:	orr	w4, w4, w8
    e170:	mrs	x8, tpidr_el0
    e174:	cbz	w4, e048 <mpfr_add1@@Base+0x910>
    e178:	b	e158 <mpfr_add1@@Base+0xa20>
    e17c:	sub	x3, x22, x19
    e180:	ldr	x1, [x29, #144]
    e184:	lsl	x3, x3, #3
    e188:	add	x0, x26, x3
    e18c:	cmp	x0, x1
    e190:	b.eq	e1a8 <mpfr_add1@@Base+0xa70>  // b.none
    e194:	add	x2, x19, #0x1
    e198:	str	x3, [x29, #128]
    e19c:	lsl	x2, x2, #3
    e1a0:	bl	ba10 <memcpy@plt>
    e1a4:	ldr	x3, [x29, #128]
    e1a8:	mov	x2, x3
    e1ac:	mov	x0, x26
    e1b0:	mov	w1, #0x0                   	// #0
    e1b4:	bl	c110 <memset@plt>
    e1b8:	b	d8b0 <mpfr_add1@@Base+0x178>
    e1bc:	mov	x1, x2
    e1c0:	add	x0, x29, #0xa8
    e1c4:	stp	x9, x4, [x29, #104]
    e1c8:	stp	x8, x2, [x29, #120]
    e1cc:	bl	bdc0 <mpfr_tmp_allocate@plt>
    e1d0:	str	x0, [x29, #144]
    e1d4:	ldp	x9, x4, [x29, #104]
    e1d8:	ldp	x8, x2, [x29, #120]
    e1dc:	b	ddb8 <mpfr_add1@@Base+0x680>
    e1e0:	mov	w8, #0xffffffff            	// #-1
    e1e4:	str	wzr, [x29, #112]
    e1e8:	b	df28 <mpfr_add1@@Base+0x7f0>
    e1ec:	ldr	x1, [x29, #136]
    e1f0:	cmp	x0, x1
    e1f4:	b.le	e388 <mpfr_add1@@Base+0xc50>
    e1f8:	cmn	w8, #0x1
    e1fc:	b.ne	e0b0 <mpfr_add1@@Base+0x978>  // b.any
    e200:	ldr	x0, [x29, #144]
    e204:	sub	x19, x19, #0x1
    e208:	ldr	x0, [x0, x19, lsl #3]
    e20c:	tbz	w4, #31, e218 <mpfr_add1@@Base+0xae0>
    e210:	lsr	x4, x0, #63
    e214:	and	x0, x0, #0x7fffffffffffffff
    e218:	cmp	x0, #0x0
    e21c:	cset	w1, ne  // ne = any
    e220:	mov	w8, w1
    e224:	b	e0b4 <mpfr_add1@@Base+0x97c>
    e228:	and	x6, x27, #0x3f
    e22c:	mov	w8, #0x1                   	// #1
    e230:	mov	w11, w6
    e234:	ldr	x1, [x29, #136]
    e238:	mov	x10, #0x0                   	// #0
    e23c:	cmn	w8, #0x1
    e240:	b.eq	dea0 <mpfr_add1@@Base+0x768>  // b.none
    e244:	cmp	w20, #0x5
    e248:	b.eq	df10 <mpfr_add1@@Base+0x7d8>  // b.none
    e24c:	add	x17, x26, x28, lsl #3
    e250:	mov	x15, #0x1                   	// #1
    e254:	mov	w14, #0x40                  	// #64
    e258:	sub	x17, x17, #0x8
    e25c:	sub	x16, x1, #0x1
    e260:	add	x13, x26, x22, lsl #3
    e264:	sub	w14, w14, w11
    e268:	mov	x9, x19
    e26c:	sub	x12, x24, #0x8
    e270:	mrs	x18, tpidr_el0
    e274:	lsl	x15, x15, x21
    e278:	mov	x5, #0x8000000000000000    	// #-9223372036854775808
    e27c:	nop
    e280:	mov	x0, x1
    e284:	cbz	x9, e3d0 <mpfr_add1@@Base+0xc98>
    e288:	cbz	x6, e2ec <mpfr_add1@@Base+0xbb4>
    e28c:	tbnz	x1, #63, e410 <mpfr_add1@@Base+0xcd8>
    e290:	sub	x0, x9, x19
    e294:	lsl	x3, x10, x14
    e298:	add	x0, x16, x0
    e29c:	cmn	x0, #0x1
    e2a0:	b.eq	e2b0 <mpfr_add1@@Base+0xb78>  // b.none
    e2a4:	ldr	x10, [x12, x1, lsl #3]
    e2a8:	lsr	x0, x10, x11
    e2ac:	add	x3, x3, x0
    e2b0:	ldr	x0, [x29, #144]
    e2b4:	sub	x9, x9, #0x1
    e2b8:	eor	w2, w8, #0x1
    e2bc:	ldr	x0, [x0, x9, lsl #3]
    e2c0:	adds	x3, x0, x3
    e2c4:	b.cc	e2f8 <mpfr_add1@@Base+0xbc0>  // b.lo, b.ul, b.last
    e2c8:	cmp	w8, #0x1
    e2cc:	b.ne	e494 <mpfr_add1@@Base+0xd5c>  // b.any
    e2d0:	cmp	w4, #0x1
    e2d4:	b.eq	e320 <mpfr_add1@@Base+0xbe8>  // b.none
    e2d8:	eor	w4, w4, #0x1
    e2dc:	cbnz	x3, e41c <mpfr_add1@@Base+0xce4>
    e2e0:	sub	x1, x1, #0x1
    e2e4:	mov	w8, #0x0                   	// #0
    e2e8:	b	e280 <mpfr_add1@@Base+0xb48>
    e2ec:	cbz	x1, e410 <mpfr_add1@@Base+0xcd8>
    e2f0:	ldr	x3, [x12, x1, lsl #3]
    e2f4:	b	e2b0 <mpfr_add1@@Base+0xb78>
    e2f8:	cmp	x3, #0x0
    e2fc:	and	w2, w2, #0x1
    e300:	csel	w2, w2, wzr, ne  // ne = any
    e304:	cbnz	w2, e41c <mpfr_add1@@Base+0xce4>
    e308:	cmn	x3, #0x1
    e30c:	and	w0, w8, #0x1
    e310:	csel	w0, w0, wzr, ne  // ne = any
    e314:	cbnz	w0, d9f8 <mpfr_add1@@Base+0x2c0>
    e318:	sub	x1, x1, #0x1
    e31c:	b	e280 <mpfr_add1@@Base+0xb48>
    e320:	ldr	x0, [x26]
    e324:	adds	x0, x15, x0
    e328:	str	x0, [x26]
    e32c:	b.cc	e380 <mpfr_add1@@Base+0xc48>  // b.lo, b.ul, b.last
    e330:	mov	x2, x26
    e334:	b	e348 <mpfr_add1@@Base+0xc10>
    e338:	ldr	x0, [x2, #8]
    e33c:	add	x0, x0, #0x1
    e340:	str	x0, [x2, #8]!
    e344:	cbnz	x0, e380 <mpfr_add1@@Base+0xc48>
    e348:	cmp	x13, x2
    e34c:	b.ne	e338 <mpfr_add1@@Base+0xc00>  // b.any
    e350:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    e354:	ldr	x2, [x0, #2544]
    e358:	add	x0, x0, #0x9f0
    e35c:	blr	x2
    e360:	mov	x8, x18
    e364:	ldr	x0, [x18, x0]
    e368:	cmp	x0, x23
    e36c:	b.eq	e4d0 <mpfr_add1@@Base+0xd98>  // b.none
    e370:	add	x23, x23, #0x1
    e374:	mov	w4, #0x0                   	// #0
    e378:	str	x5, [x17]
    e37c:	b	e2dc <mpfr_add1@@Base+0xba4>
    e380:	mov	w4, #0x0                   	// #0
    e384:	b	e2dc <mpfr_add1@@Base+0xba4>
    e388:	and	x6, x27, #0x3f
    e38c:	sub	x1, x1, x0
    e390:	cmp	w6, #0x0
    e394:	mov	w11, w6
    e398:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    e39c:	b.eq	e1f8 <mpfr_add1@@Base+0xac0>  // b.none
    e3a0:	ldr	x0, [x29, #136]
    e3a4:	cmp	x0, x1
    e3a8:	b.eq	e234 <mpfr_add1@@Base+0xafc>  // b.none
    e3ac:	ldr	x10, [x24, x1, lsl #3]
    e3b0:	b	e23c <mpfr_add1@@Base+0xb04>
    e3b4:	tbz	w4, #31, dee8 <mpfr_add1@@Base+0x7b0>
    e3b8:	ubfx	x2, x0, #62, #1
    e3bc:	lsr	x4, x0, #63
    e3c0:	orr	x2, x2, x0, lsl #1
    e3c4:	b	dee8 <mpfr_add1@@Base+0x7b0>
    e3c8:	ldr	x2, [x24, x1, lsl #3]
    e3cc:	b	dec0 <mpfr_add1@@Base+0x788>
    e3d0:	lsr	x1, x1, #63
    e3d4:	and	w2, w8, #0x1
    e3d8:	orr	w2, w2, w1
    e3dc:	cbnz	w2, e4a0 <mpfr_add1@@Base+0xd68>
    e3e0:	cbz	x6, e3f0 <mpfr_add1@@Base+0xcb8>
    e3e4:	neg	w11, w11
    e3e8:	lsl	x10, x10, x11
    e3ec:	cbnz	x10, e404 <mpfr_add1@@Base+0xccc>
    e3f0:	cbz	x0, e020 <mpfr_add1@@Base+0x8e8>
    e3f4:	sub	x0, x0, #0x1
    e3f8:	ldr	x1, [x24, x0, lsl #3]
    e3fc:	cbz	x1, e3f0 <mpfr_add1@@Base+0xcb8>
    e400:	b	d9f8 <mpfr_add1@@Base+0x2c0>
    e404:	mrs	x8, tpidr_el0
    e408:	cbz	w20, da08 <mpfr_add1@@Base+0x2d0>
    e40c:	b	dfa0 <mpfr_add1@@Base+0x868>
    e410:	mov	x19, x9
    e414:	and	w1, w8, #0x1
    e418:	b	e0b4 <mpfr_add1@@Base+0x97c>
    e41c:	mov	w2, #0x0                   	// #0
    e420:	b	d9f8 <mpfr_add1@@Base+0x2c0>
    e424:	ldr	x8, [x26]
    e428:	mov	x3, #0x1                   	// #1
    e42c:	lsl	x3, x3, x21
    e430:	adds	x3, x3, x8
    e434:	str	x3, [x26]
    e438:	b.cc	e3b8 <mpfr_add1@@Base+0xc80>  // b.lo, b.ul, b.last
    e43c:	mov	x3, x26
    e440:	add	x9, x26, x22, lsl #3
    e444:	b	e458 <mpfr_add1@@Base+0xd20>
    e448:	ldr	x8, [x3, #8]
    e44c:	add	x8, x8, #0x1
    e450:	str	x8, [x3, #8]!
    e454:	cbnz	x8, e3b4 <mpfr_add1@@Base+0xc7c>
    e458:	cmp	x9, x3
    e45c:	b.ne	e448 <mpfr_add1@@Base+0xd10>  // b.any
    e460:	mrs	x8, tpidr_el0
    e464:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    e468:	ldr	x3, [x0, #2544]
    e46c:	add	x0, x0, #0x9f0
    e470:	blr	x3
    e474:	ldr	x0, [x8, x0]
    e478:	cmp	x23, x0
    e47c:	b.eq	e4d0 <mpfr_add1@@Base+0xd98>  // b.none
    e480:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    e484:	add	x23, x23, #0x1
    e488:	mov	w4, #0x0                   	// #0
    e48c:	str	x0, [x26, x22, lsl #3]
    e490:	b	dee8 <mpfr_add1@@Base+0x7b0>
    e494:	cbz	w20, df18 <mpfr_add1@@Base+0x7e0>
    e498:	mov	w8, #0x1                   	// #1
    e49c:	b	e02c <mpfr_add1@@Base+0x8f4>
    e4a0:	mov	w0, #0x0                   	// #0
    e4a4:	b	df04 <mpfr_add1@@Base+0x7cc>
    e4a8:	ldr	x4, [x26]
    e4ac:	mov	x3, #0x1                   	// #1
    e4b0:	lsl	x3, x3, x21
    e4b4:	adds	x3, x3, x4
    e4b8:	str	x3, [x26]
    e4bc:	mov	w4, #0x0                   	// #0
    e4c0:	b.cc	dee8 <mpfr_add1@@Base+0x7b0>  // b.lo, b.ul, b.last
    e4c4:	b	e43c <mpfr_add1@@Base+0xd04>
    e4c8:	mov	w20, #0x1                   	// #1
    e4cc:	b	dc08 <mpfr_add1@@Base+0x4d0>
    e4d0:	ldr	w2, [x25, #8]
    e4d4:	mov	w1, w20
    e4d8:	mov	x0, x25
    e4dc:	str	x8, [x29, #152]
    e4e0:	bl	bf40 <mpfr_overflow@plt>
    e4e4:	mov	w4, w0
    e4e8:	ldr	x8, [x29, #152]
    e4ec:	b	daf0 <mpfr_add1@@Base+0x3b8>

000000000000e4f0 <mpfr_add_ui@@Base>:
    e4f0:	stp	x29, x30, [sp, #-128]!
    e4f4:	mov	x4, x1
    e4f8:	mov	x29, sp
    e4fc:	stp	x25, x26, [sp, #64]
    e500:	mov	w26, w3
    e504:	cbz	x2, e62c <mpfr_add_ui@@Base+0x13c>
    e508:	ldr	x5, [x1, #16]
    e50c:	stp	x19, x20, [sp, #16]
    e510:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
    e514:	mov	x19, x0
    e518:	cmp	x5, x6
    e51c:	b.le	e644 <mpfr_add_ui@@Base+0x154>
    e520:	mrs	x5, tpidr_el0
    e524:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    e528:	ldr	x4, [x0, #2576]
    e52c:	add	x0, x0, #0xa10
    e530:	blr	x4
    e534:	clz	x4, x2
    e538:	mov	x8, #0x40                  	// #64
    e53c:	sub	w7, w8, w4
    e540:	stp	x21, x22, [sp, #32]
    e544:	ldr	w20, [x5, x0]
    e548:	add	x21, x5, x0
    e54c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    e550:	ldr	x6, [x0, #2512]
    e554:	add	x0, x0, #0x9d0
    e558:	blr	x6
    e55c:	add	x25, x5, x0
    e560:	sxtw	x7, w7
    e564:	ldr	x22, [x5, x0]
    e568:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    e56c:	ldr	x6, [x0, #2544]
    e570:	add	x0, x0, #0x9f0
    e574:	blr	x6
    e578:	add	x6, sp, #0x58
    e57c:	stp	x23, x24, [sp, #48]
    e580:	add	x24, x5, x0
    e584:	lsl	x4, x2, x4
    e588:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
    e58c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    e590:	mov	w11, #0x1                   	// #1
    e594:	add	x2, sp, #0x60
    e598:	str	x10, [x25]
    e59c:	stp	x4, x8, [sp, #88]
    e5a0:	str	w11, [sp, #104]
    e5a4:	str	x7, [sp, #112]
    e5a8:	str	x6, [sp, #120]
    e5ac:	ldr	x23, [x5, x0]
    e5b0:	mov	x0, x19
    e5b4:	str	x9, [x24]
    e5b8:	bl	c1a0 <mpfr_add@plt>
    e5bc:	ldr	w1, [x21]
    e5c0:	ldr	x2, [x19, #16]
    e5c4:	orr	w1, w20, w1
    e5c8:	str	x23, [x24]
    e5cc:	str	w1, [x21]
    e5d0:	cmp	x23, x2
    e5d4:	str	x22, [x25]
    e5d8:	ccmp	x22, x2, #0x0, ge  // ge = tcont
    e5dc:	b.le	e608 <mpfr_add_ui@@Base+0x118>
    e5e0:	mov	w1, w0
    e5e4:	mov	w2, w26
    e5e8:	mov	x0, x19
    e5ec:	bl	cb30 <mpfr_check_range@plt>
    e5f0:	ldp	x19, x20, [sp, #16]
    e5f4:	ldp	x21, x22, [sp, #32]
    e5f8:	ldp	x23, x24, [sp, #48]
    e5fc:	ldp	x25, x26, [sp, #64]
    e600:	ldp	x29, x30, [sp], #128
    e604:	ret
    e608:	cbz	w0, e5f0 <mpfr_add_ui@@Base+0x100>
    e60c:	orr	w1, w1, #0x8
    e610:	ldp	x19, x20, [sp, #16]
    e614:	ldp	x23, x24, [sp, #48]
    e618:	str	w1, [x21]
    e61c:	ldp	x21, x22, [sp, #32]
    e620:	ldp	x25, x26, [sp, #64]
    e624:	ldp	x29, x30, [sp], #128
    e628:	ret
    e62c:	mov	w2, w3
    e630:	ldr	w3, [x1, #8]
    e634:	bl	c6a0 <mpfr_set4@plt>
    e638:	ldp	x25, x26, [sp, #64]
    e63c:	ldp	x29, x30, [sp], #128
    e640:	ret
    e644:	mov	x1, #0x2                   	// #2
    e648:	movk	x1, #0x8000, lsl #48
    e64c:	cmp	x5, x1
    e650:	b.eq	e670 <mpfr_add_ui@@Base+0x180>  // b.none
    e654:	cmp	x5, x6
    e658:	b.eq	e6a4 <mpfr_add_ui@@Base+0x1b4>  // b.none
    e65c:	mov	x1, x2
    e660:	mov	x2, #0x0                   	// #0
    e664:	bl	c5f0 <mpfr_set_ui_2exp@plt>
    e668:	ldp	x19, x20, [sp, #16]
    e66c:	b	e5fc <mpfr_add_ui@@Base+0x10c>
    e670:	mrs	x1, tpidr_el0
    e674:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    e678:	ldr	x2, [x0, #2576]
    e67c:	add	x0, x0, #0xa10
    e680:	blr	x2
    e684:	add	x1, x1, x0
    e688:	mov	w0, #0x0                   	// #0
    e68c:	str	x5, [x19, #16]
    e690:	ldp	x19, x20, [sp, #16]
    e694:	ldr	w2, [x1]
    e698:	orr	w2, w2, #0x4
    e69c:	str	w2, [x1]
    e6a0:	b	e5fc <mpfr_add_ui@@Base+0x10c>
    e6a4:	ldr	w1, [x4, #8]
    e6a8:	mov	w0, #0x0                   	// #0
    e6ac:	str	w1, [x19, #8]
    e6b0:	str	x5, [x19, #16]
    e6b4:	ldp	x19, x20, [sp, #16]
    e6b8:	b	e5fc <mpfr_add_ui@@Base+0x10c>
    e6bc:	nop

000000000000e6c0 <mpfr_clear@@Base>:
    e6c0:	stp	x29, x30, [sp, #-32]!
    e6c4:	mov	x29, sp
    e6c8:	str	x19, [sp, #16]
    e6cc:	mov	x19, x0
    e6d0:	ldr	x0, [x0, #24]
    e6d4:	ldr	x1, [x0, #-8]!
    e6d8:	add	x1, x1, #0x1
    e6dc:	lsl	x1, x1, #3
    e6e0:	bl	cc20 <mpfr_free_func@plt>
    e6e4:	str	xzr, [x19, #24]
    e6e8:	ldr	x19, [sp, #16]
    e6ec:	ldp	x29, x30, [sp], #32
    e6f0:	ret
    e6f4:	nop

000000000000e6f8 <mpfr_cmp3@@Base>:
    e6f8:	mov	x5, x0
    e6fc:	ldr	w4, [x1, #8]
    e700:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    e704:	ldr	x3, [x5, #16]
    e708:	mul	w2, w2, w4
    e70c:	cmp	x3, x0
    e710:	b.le	e794 <mpfr_cmp3@@Base+0x9c>
    e714:	ldr	x4, [x1, #16]
    e718:	cmp	x4, x0
    e71c:	b.le	e808 <mpfr_cmp3@@Base+0x110>
    e720:	ldr	w0, [x5, #8]
    e724:	cmp	w0, w2
    e728:	b.ne	e788 <mpfr_cmp3@@Base+0x90>  // b.any
    e72c:	cmp	x3, x4
    e730:	b.gt	e788 <mpfr_cmp3@@Base+0x90>
    e734:	b.lt	e78c <mpfr_cmp3@@Base+0x94>  // b.tstop
    e738:	ldr	x4, [x1]
    e73c:	ldr	x3, [x5]
    e740:	sub	x4, x4, #0x1
    e744:	ldr	x6, [x1, #24]
    e748:	sub	x3, x3, #0x1
    e74c:	asr	x1, x4, #6
    e750:	asr	x0, x3, #6
    e754:	ldr	x5, [x5, #24]
    e758:	b	e76c <mpfr_cmp3@@Base+0x74>
    e75c:	b.cc	e844 <mpfr_cmp3@@Base+0x14c>  // b.lo, b.ul, b.last
    e760:	subs	x0, x0, #0x1
    e764:	ccmp	x1, #0x0, #0x1, pl  // pl = nfrst
    e768:	b.lt	e84c <mpfr_cmp3@@Base+0x154>  // b.tstop
    e76c:	ldr	x3, [x6, x1, lsl #3]
    e770:	sub	x1, x1, #0x1
    e774:	ldr	x4, [x5, x0, lsl #3]
    e778:	cmp	x4, x3
    e77c:	b.ls	e75c <mpfr_cmp3@@Base+0x64>  // b.plast
    e780:	mov	w0, w2
    e784:	ret
    e788:	ret
    e78c:	neg	w0, w0
    e790:	ret
    e794:	mov	x4, #0x2                   	// #2
    e798:	movk	x4, #0x8000, lsl #48
    e79c:	cmp	x3, x4
    e7a0:	b.eq	e7d0 <mpfr_cmp3@@Base+0xd8>  // b.none
    e7a4:	ldr	x1, [x1, #16]
    e7a8:	cmp	x1, x4
    e7ac:	b.eq	e7d0 <mpfr_cmp3@@Base+0xd8>  // b.none
    e7b0:	cmp	x3, x0
    e7b4:	b.ne	e870 <mpfr_cmp3@@Base+0x178>  // b.any
    e7b8:	ldr	w0, [x5, #8]
    e7bc:	cmp	x1, x3
    e7c0:	b.ne	e788 <mpfr_cmp3@@Base+0x90>  // b.any
    e7c4:	cmp	w2, w0
    e7c8:	csel	w0, w0, wzr, ne  // ne = any
    e7cc:	ret
    e7d0:	mrs	x1, tpidr_el0
    e7d4:	stp	x29, x30, [sp, #-16]!
    e7d8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    e7dc:	ldr	x2, [x0, #2576]
    e7e0:	add	x0, x0, #0xa10
    e7e4:	blr	x2
    e7e8:	add	x1, x1, x0
    e7ec:	mov	x29, sp
    e7f0:	mov	w0, #0x0                   	// #0
    e7f4:	ldr	w2, [x1]
    e7f8:	orr	w2, w2, #0x10
    e7fc:	str	w2, [x1]
    e800:	ldp	x29, x30, [sp], #16
    e804:	ret
    e808:	mov	x1, #0x2                   	// #2
    e80c:	movk	x1, #0x8000, lsl #48
    e810:	cmp	x4, x1
    e814:	b.eq	e7d0 <mpfr_cmp3@@Base+0xd8>  // b.none
    e818:	cmp	x4, x0
    e81c:	b.eq	e844 <mpfr_cmp3@@Base+0x14c>  // b.none
    e820:	ldr	w0, [x5, #8]
    e824:	ret
    e828:	cmn	x1, #0x1
    e82c:	nop
    e830:	b.eq	e868 <mpfr_cmp3@@Base+0x170>  // b.none
    e834:	ldr	x0, [x6, x1, lsl #3]
    e838:	sub	x1, x1, #0x1
    e83c:	cmn	x1, #0x1
    e840:	cbz	x0, e830 <mpfr_cmp3@@Base+0x138>
    e844:	neg	w0, w2
    e848:	ret
    e84c:	cmn	x0, #0x1
    e850:	b.eq	e828 <mpfr_cmp3@@Base+0x130>  // b.none
    e854:	ldr	x3, [x5, x0, lsl #3]
    e858:	sub	x0, x0, #0x1
    e85c:	cmn	x0, #0x1
    e860:	cbz	x3, e850 <mpfr_cmp3@@Base+0x158>
    e864:	b	e780 <mpfr_cmp3@@Base+0x88>
    e868:	mov	w0, #0x0                   	// #0
    e86c:	ret
    e870:	cmp	x1, x0
    e874:	b.eq	e844 <mpfr_cmp3@@Base+0x14c>  // b.none
    e878:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    e87c:	cmp	x3, x0
    e880:	b.ne	e820 <mpfr_cmp3@@Base+0x128>  // b.any
    e884:	cmp	x1, x3
    e888:	csneg	w0, wzr, w2, eq  // eq = none
    e88c:	ret

000000000000e890 <mpfr_div_2si@@Base>:
    e890:	stp	x29, x30, [sp, #-80]!
    e894:	mov	x29, sp
    e898:	stp	x21, x22, [sp, #32]
    e89c:	mov	w22, w3
    e8a0:	ldr	x21, [x1, #16]
    e8a4:	stp	x19, x20, [sp, #16]
    e8a8:	mov	x20, x2
    e8ac:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    e8b0:	cmp	x21, x2
    e8b4:	b.le	eb00 <mpfr_div_2si@@Base+0x270>
    e8b8:	stp	x23, x24, [sp, #48]
    e8bc:	mov	x19, x0
    e8c0:	cmp	x1, x0
    e8c4:	mov	w23, #0x0                   	// #0
    e8c8:	b.eq	e9c4 <mpfr_div_2si@@Base+0x134>  // b.none
    e8cc:	ldr	w23, [x1, #8]
    e8d0:	ldr	x0, [x1]
    e8d4:	str	w23, [x19, #8]
    e8d8:	ldr	x5, [x19]
    e8dc:	cmp	x5, x0
    e8e0:	b.eq	ea44 <mpfr_div_2si@@Base+0x1b4>  // b.none
    e8e4:	sub	x0, x0, #0x1
    e8e8:	sub	x7, x5, #0x1
    e8ec:	ldr	x8, [x1, #24]
    e8f0:	asr	x7, x7, #6
    e8f4:	asr	x4, x0, #6
    e8f8:	ldr	x24, [x19, #24]
    e8fc:	b.ge	ec1c <mpfr_div_2si@@Base+0x38c>  // b.tcont
    e900:	sub	x4, x4, x7
    e904:	str	x25, [sp, #64]
    e908:	neg	w5, w5
    e90c:	add	x2, x7, #0x1
    e910:	ands	w5, w5, #0x3f
    e914:	add	x1, x8, x4, lsl #3
    e918:	b.eq	ec58 <mpfr_div_2si@@Base+0x3c8>  // b.none
    e91c:	ldr	x3, [x8, x4, lsl #3]
    e920:	sub	w5, w5, #0x1
    e924:	mov	x0, #0x1                   	// #1
    e928:	cmp	w22, #0x0
    e92c:	lsl	x0, x0, x5
    e930:	and	x9, x3, x0
    e934:	sub	x0, x0, #0x1
    e938:	ccmp	x9, #0x0, #0x4, ne  // ne = any
    e93c:	and	x0, x0, x3
    e940:	b.ne	e970 <mpfr_div_2si@@Base+0xe0>  // b.any
    e944:	cmp	x0, #0x0
    e948:	mov	x6, x4
    e94c:	ccmp	x4, #0x0, #0x4, eq  // eq = none
    e950:	b.eq	e970 <mpfr_div_2si@@Base+0xe0>  // b.none
    e954:	mvn	x3, x4
    e958:	add	x3, x1, x3, lsl #3
    e95c:	nop
    e960:	ldr	x0, [x3, x6, lsl #3]
    e964:	subs	x6, x6, #0x1
    e968:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    e96c:	b.eq	e960 <mpfr_div_2si@@Base+0xd0>  // b.none
    e970:	mov	x25, #0x2                   	// #2
    e974:	lsl	x25, x25, x5
    e978:	cmp	w22, #0x5
    e97c:	b.eq	eaf8 <mpfr_div_2si@@Base+0x268>  // b.none
    e980:	cbnz	w22, ea70 <mpfr_div_2si@@Base+0x1e0>
    e984:	cbz	x9, eaf4 <mpfr_div_2si@@Base+0x264>
    e988:	ldr	x3, [x8, x4, lsl #3]
    e98c:	and	x5, x25, x3
    e990:	orr	x0, x5, x0
    e994:	cbnz	x0, ea90 <mpfr_div_2si@@Base+0x200>
    e998:	neg	w23, w23
    e99c:	cmp	x24, x1
    e9a0:	b.eq	e9b0 <mpfr_div_2si@@Base+0x120>  // b.none
    e9a4:	lsl	x2, x2, #3
    e9a8:	mov	x0, x24
    e9ac:	bl	ba10 <memcpy@plt>
    e9b0:	ldr	x0, [x24]
    e9b4:	neg	x5, x25
    e9b8:	ldr	x25, [sp, #64]
    e9bc:	and	x5, x0, x5
    e9c0:	str	x5, [x24]
    e9c4:	mrs	x1, tpidr_el0
    e9c8:	cmp	x20, #0x0
    e9cc:	b.gt	eb18 <mpfr_div_2si@@Base+0x288>
    e9d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    e9d4:	ldr	x2, [x0, #2544]
    e9d8:	add	x0, x0, #0x9f0
    e9dc:	blr	x2
    e9e0:	ldr	x0, [x1, x0]
    e9e4:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
    e9e8:	sub	x2, x2, x20
    e9ec:	cmp	x2, x0
    e9f0:	b.gt	edbc <mpfr_div_2si@@Base+0x52c>
    e9f4:	add	x0, x0, x20
    e9f8:	cmp	x0, x21
    e9fc:	b.lt	edbc <mpfr_div_2si@@Base+0x52c>  // b.tstop
    ea00:	sub	x20, x21, x20
    ea04:	str	x20, [x19, #16]
    ea08:	cbz	w23, ea2c <mpfr_div_2si@@Base+0x19c>
    ea0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    ea10:	ldr	x2, [x0, #2576]
    ea14:	add	x0, x0, #0xa10
    ea18:	blr	x2
    ea1c:	add	x0, x1, x0
    ea20:	ldr	w1, [x0]
    ea24:	orr	w1, w1, #0x8
    ea28:	str	w1, [x0]
    ea2c:	mov	w0, w23
    ea30:	ldp	x19, x20, [sp, #16]
    ea34:	ldp	x21, x22, [sp, #32]
    ea38:	ldp	x23, x24, [sp, #48]
    ea3c:	ldp	x29, x30, [sp], #80
    ea40:	ret
    ea44:	ldr	x1, [x1, #24]
    ea48:	mov	w23, #0x0                   	// #0
    ea4c:	ldr	x0, [x19, #24]
    ea50:	cmp	x0, x1
    ea54:	b.eq	e9c4 <mpfr_div_2si@@Base+0x134>  // b.none
    ea58:	sub	x5, x5, #0x1
    ea5c:	asr	x5, x5, #6
    ea60:	add	x5, x5, #0x1
    ea64:	lsl	x2, x5, #3
    ea68:	bl	ba10 <memcpy@plt>
    ea6c:	b	e9c4 <mpfr_div_2si@@Base+0x134>
    ea70:	orr	x0, x0, x9
    ea74:	cmp	w22, #0x1
    ea78:	b.eq	eaf4 <mpfr_div_2si@@Base+0x264>  // b.none
    ea7c:	add	w3, w22, w23, lsr #31
    ea80:	cmp	w3, #0x3
    ea84:	b.eq	eaf4 <mpfr_div_2si@@Base+0x264>  // b.none
    ea88:	cbz	x0, eaf8 <mpfr_div_2si@@Base+0x268>
    ea8c:	ldr	x3, [x8, x4, lsl #3]
    ea90:	adds	x3, x3, x25
    ea94:	str	x3, [x24]
    ea98:	cset	x0, cs  // cs = hs, nlast
    ea9c:	b.cc	eba8 <mpfr_div_2si@@Base+0x318>  // b.lo, b.ul, b.last
    eaa0:	mov	x0, #0x1                   	// #1
    eaa4:	b	eac0 <mpfr_div_2si@@Base+0x230>
    eaa8:	ldr	x3, [x1, x0, lsl #3]
    eaac:	add	x4, x0, #0x1
    eab0:	add	x3, x3, #0x1
    eab4:	str	x3, [x24, x0, lsl #3]
    eab8:	cbnz	x3, eca0 <mpfr_div_2si@@Base+0x410>
    eabc:	mov	x0, x4
    eac0:	cmp	x2, x0
    eac4:	b.gt	eaa8 <mpfr_div_2si@@Base+0x218>
    eac8:	add	x2, x24, x2, lsl #3
    eacc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    ead0:	add	x21, x21, #0x1
    ead4:	stur	x0, [x2, #-8]
    ead8:	ldr	x3, [x24]
    eadc:	nop
    eae0:	neg	x5, x25
    eae4:	and	x3, x5, x3
    eae8:	ldr	x25, [sp, #64]
    eaec:	str	x3, [x24]
    eaf0:	b	e9c4 <mpfr_div_2si@@Base+0x134>
    eaf4:	cbnz	x0, e998 <mpfr_div_2si@@Base+0x108>
    eaf8:	mov	w23, #0x0                   	// #0
    eafc:	b	e99c <mpfr_div_2si@@Base+0x10c>
    eb00:	ldp	x19, x20, [sp, #16]
    eb04:	mov	w2, w3
    eb08:	ldp	x21, x22, [sp, #32]
    eb0c:	ldp	x29, x30, [sp], #80
    eb10:	ldr	w3, [x1, #8]
    eb14:	b	c6a0 <mpfr_set4@plt>
    eb18:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    eb1c:	ldr	x2, [x0, #2512]
    eb20:	add	x0, x0, #0x9d0
    eb24:	blr	x2
    eb28:	ldr	x0, [x1, x0]
    eb2c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    eb30:	sub	x2, x2, x20
    eb34:	cmp	x2, x0
    eb38:	b.lt	eb48 <mpfr_div_2si@@Base+0x2b8>  // b.tstop
    eb3c:	add	x2, x0, x20
    eb40:	cmp	x2, x21
    eb44:	b.le	ea00 <mpfr_div_2si@@Base+0x170>
    eb48:	ldr	w2, [x19, #8]
    eb4c:	cbnz	w22, eb88 <mpfr_div_2si@@Base+0x2f8>
    eb50:	mov	x1, #0x4000000000000000    	// #4611686018427387904
    eb54:	sub	x1, x1, x20
    eb58:	cmp	x0, x1
    eb5c:	b.gt	edb4 <mpfr_div_2si@@Base+0x524>
    eb60:	sub	x20, x20, #0x1
    eb64:	add	x0, x20, x0
    eb68:	cmp	x0, x21
    eb6c:	b.gt	edb4 <mpfr_div_2si@@Base+0x524>
    eb70:	tbnz	w2, #31, ed9c <mpfr_div_2si@@Base+0x50c>
    eb74:	tbnz	w23, #31, eb88 <mpfr_div_2si@@Base+0x2f8>
    eb78:	mov	x0, x19
    eb7c:	bl	bf00 <mpfr_powerof2_raw@plt>
    eb80:	cmp	w0, #0x0
    eb84:	cset	w22, ne  // ne = any
    eb88:	ldr	w2, [x19, #8]
    eb8c:	mov	w1, w22
    eb90:	mov	x0, x19
    eb94:	ldp	x19, x20, [sp, #16]
    eb98:	ldp	x21, x22, [sp, #32]
    eb9c:	ldp	x23, x24, [sp, #48]
    eba0:	ldp	x29, x30, [sp], #80
    eba4:	b	c3c0 <mpfr_underflow@plt>
    eba8:	cmp	x24, x1
    ebac:	b.eq	eae0 <mpfr_div_2si@@Base+0x250>  // b.none
    ebb0:	cmp	x2, #0x1
    ebb4:	b.eq	eae0 <mpfr_div_2si@@Base+0x250>  // b.none
    ebb8:	add	x6, x4, #0x3
    ebbc:	add	x4, x4, #0x1
    ebc0:	add	x3, x24, #0x8
    ebc4:	add	x5, x24, #0x18
    ebc8:	add	x6, x8, x6, lsl #3
    ebcc:	add	x8, x8, x4, lsl #3
    ebd0:	cmp	x6, x3
    ebd4:	sub	x4, x7, #0x1
    ebd8:	ccmp	x8, x5, #0x2, hi  // hi = pmore
    ebdc:	ccmp	x4, #0x9, #0x0, cs  // cs = hs, nlast
    ebe0:	b.ls	ed78 <mpfr_div_2si@@Base+0x4e8>  // b.plast
    ebe4:	lsr	x2, x7, #1
    ebe8:	lsl	x2, x2, #4
    ebec:	nop
    ebf0:	ldr	q0, [x8, x0]
    ebf4:	str	q0, [x3, x0]
    ebf8:	add	x0, x0, #0x10
    ebfc:	cmp	x0, x2
    ec00:	b.ne	ebf0 <mpfr_div_2si@@Base+0x360>  // b.any
    ec04:	orr	x0, x7, #0x1
    ec08:	tbz	w7, #0, ec14 <mpfr_div_2si@@Base+0x384>
    ec0c:	ldr	x1, [x1, x0, lsl #3]
    ec10:	str	x1, [x24, x0, lsl #3]
    ec14:	ldr	x3, [x24]
    ec18:	b	eae0 <mpfr_div_2si@@Base+0x250>
    ec1c:	sub	x7, x7, x4
    ec20:	add	x4, x4, #0x1
    ec24:	lsl	x23, x7, #3
    ec28:	add	x0, x24, x23
    ec2c:	cmp	x0, x8
    ec30:	b.eq	ec40 <mpfr_div_2si@@Base+0x3b0>  // b.none
    ec34:	lsl	x2, x4, #3
    ec38:	mov	x1, x8
    ec3c:	bl	ba10 <memcpy@plt>
    ec40:	mov	x2, x23
    ec44:	mov	x0, x24
    ec48:	mov	w1, #0x0                   	// #0
    ec4c:	mov	w23, #0x0                   	// #0
    ec50:	bl	c110 <memset@plt>
    ec54:	b	e9c4 <mpfr_div_2si@@Base+0x134>
    ec58:	ldur	x0, [x1, #-8]
    ec5c:	cmp	w3, #0x0
    ec60:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    ec64:	and	x9, x0, #0x8000000000000000
    ec68:	and	x5, x0, #0x7fffffffffffffff
    ec6c:	b.lt	ed54 <mpfr_div_2si@@Base+0x4c4>  // b.tstop
    ec70:	subs	x3, x4, #0x1
    ec74:	ccmp	x5, #0x0, #0x0, ne  // ne = any
    ec78:	b.ne	eda8 <mpfr_div_2si@@Base+0x518>  // b.any
    ec7c:	mvn	x5, x4
    ec80:	add	x5, x1, x5, lsl #3
    ec84:	nop
    ec88:	ldr	x0, [x5, x3, lsl #3]
    ec8c:	subs	x3, x3, #0x1
    ec90:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    ec94:	b.eq	ec88 <mpfr_div_2si@@Base+0x3f8>  // b.none
    ec98:	mov	x25, #0x1                   	// #1
    ec9c:	b	e978 <mpfr_div_2si@@Base+0xe8>
    eca0:	cmp	x24, x1
    eca4:	b.eq	ec14 <mpfr_div_2si@@Base+0x384>  // b.none
    eca8:	cmp	x0, x7
    ecac:	b.ge	ec14 <mpfr_div_2si@@Base+0x384>  // b.tcont
    ecb0:	add	x0, x0, #0x3
    ecb4:	sub	x6, x7, x4
    ecb8:	lsl	x0, x0, #3
    ecbc:	sub	x3, x0, #0x10
    ecc0:	add	x8, x24, x0
    ecc4:	add	x5, x1, x3
    ecc8:	add	x0, x1, x0
    eccc:	cmp	x5, x8
    ecd0:	add	x3, x24, x3
    ecd4:	ccmp	x3, x0, #0x2, cc  // cc = lo, ul, last
    ecd8:	cset	w8, cs  // cs = hs, nlast
    ecdc:	cmp	x6, #0x9
    ece0:	ccmp	x4, x7, #0x0, hi  // hi = pmore
    ece4:	cset	w0, le
    ece8:	tst	w8, w0
    ecec:	b.eq	ed3c <mpfr_div_2si@@Base+0x4ac>  // b.none
    ecf0:	sub	x2, x2, x4
    ecf4:	cmp	x4, x7
    ecf8:	csinc	x6, x2, xzr, le
    ecfc:	mov	x0, #0x0                   	// #0
    ed00:	lsr	x2, x6, #1
    ed04:	lsl	x2, x2, #4
    ed08:	ldr	q0, [x5, x0]
    ed0c:	str	q0, [x3, x0]
    ed10:	add	x0, x0, #0x10
    ed14:	cmp	x2, x0
    ed18:	b.ne	ed08 <mpfr_div_2si@@Base+0x478>  // b.any
    ed1c:	and	x0, x6, #0xfffffffffffffffe
    ed20:	add	x4, x0, x4
    ed24:	cmp	x0, x6
    ed28:	b.eq	ec14 <mpfr_div_2si@@Base+0x384>  // b.none
    ed2c:	ldr	x0, [x1, x4, lsl #3]
    ed30:	str	x0, [x24, x4, lsl #3]
    ed34:	ldr	x3, [x24]
    ed38:	b	eae0 <mpfr_div_2si@@Base+0x250>
    ed3c:	ldr	x0, [x1, x4, lsl #3]
    ed40:	str	x0, [x24, x4, lsl #3]
    ed44:	cmp	x4, x7
    ed48:	add	x4, x4, #0x1
    ed4c:	b.lt	ed3c <mpfr_div_2si@@Base+0x4ac>  // b.tstop
    ed50:	b	ec14 <mpfr_div_2si@@Base+0x384>
    ed54:	cmp	w3, #0x5
    ed58:	mov	x25, #0x1                   	// #1
    ed5c:	b.eq	eaf8 <mpfr_div_2si@@Base+0x268>  // b.none
    ed60:	cmp	w3, #0x1
    ed64:	b.eq	e998 <mpfr_div_2si@@Base+0x108>  // b.none
    ed68:	add	w3, w3, w23, lsr #31
    ed6c:	cmp	w3, #0x3
    ed70:	b.ne	ea88 <mpfr_div_2si@@Base+0x1f8>  // b.any
    ed74:	b	e998 <mpfr_div_2si@@Base+0x108>
    ed78:	mov	x0, #0x1                   	// #1
    ed7c:	nop
    ed80:	ldr	x3, [x1, x0, lsl #3]
    ed84:	str	x3, [x24, x0, lsl #3]
    ed88:	add	x0, x0, #0x1
    ed8c:	cmp	x2, x0
    ed90:	b.ne	ed80 <mpfr_div_2si@@Base+0x4f0>  // b.any
    ed94:	ldr	x3, [x24]
    ed98:	b	eae0 <mpfr_div_2si@@Base+0x250>
    ed9c:	cmp	w23, #0x0
    eda0:	b.le	eb78 <mpfr_div_2si@@Base+0x2e8>
    eda4:	b	eb88 <mpfr_div_2si@@Base+0x2f8>
    eda8:	mov	x0, x5
    edac:	mov	x25, #0x1                   	// #1
    edb0:	b	e978 <mpfr_div_2si@@Base+0xe8>
    edb4:	mov	w22, #0x1                   	// #1
    edb8:	b	eb88 <mpfr_div_2si@@Base+0x2f8>
    edbc:	ldr	w2, [x19, #8]
    edc0:	mov	w1, w22
    edc4:	mov	x0, x19
    edc8:	ldp	x19, x20, [sp, #16]
    edcc:	ldp	x21, x22, [sp, #32]
    edd0:	ldp	x23, x24, [sp, #48]
    edd4:	ldp	x29, x30, [sp], #80
    edd8:	b	bf40 <mpfr_overflow@plt>
    eddc:	nop

000000000000ede0 <mpfr_div@@Base>:
    ede0:	stp	x29, x30, [sp, #-272]!
    ede4:	mov	x6, x2
    ede8:	mov	x29, sp
    edec:	ldr	x4, [x1, #16]
    edf0:	stp	x19, x20, [sp, #16]
    edf4:	mov	x19, x0
    edf8:	stp	x21, x22, [sp, #32]
    edfc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    ee00:	cmp	x4, x0
    ee04:	stp	x23, x24, [sp, #48]
    ee08:	stp	x25, x26, [sp, #64]
    ee0c:	mov	x25, x1
    ee10:	stp	x27, x28, [sp, #80]
    ee14:	b.le	f670 <mpfr_div@@Base+0x890>
    ee18:	ldr	x28, [x2, #16]
    ee1c:	cmp	x28, x0
    ee20:	mov	x1, x28
    ee24:	b.le	f684 <mpfr_div@@Base+0x8a4>
    ee28:	ldr	x1, [x19, #24]
    ee2c:	mov	w20, w3
    ee30:	str	x1, [x29, #184]
    ee34:	ldr	x21, [x19]
    ee38:	ldr	x3, [x25]
    ee3c:	ldr	x1, [x25, #24]
    ee40:	str	x1, [x29, #192]
    ee44:	cmp	x3, x21
    ee48:	ldr	x0, [x2]
    ee4c:	ldr	x23, [x2, #24]
    ee50:	b.eq	f290 <mpfr_div@@Base+0x4b0>  // b.none
    ee54:	sub	x3, x3, #0x1
    ee58:	sub	x1, x21, #0x1
    ee5c:	sub	x0, x0, #0x1
    ee60:	asr	x1, x1, #6
    ee64:	asr	x26, x3, #6
    ee68:	asr	x2, x0, #6
    ee6c:	add	x0, x26, #0x1
    ee70:	stp	x2, x1, [x29, #128]
    ee74:	add	x1, x1, #0x1
    ee78:	add	x22, x2, #0x1
    ee7c:	str	x0, [x29, #176]
    ee80:	str	x1, [x29, #216]
    ee84:	cbz	x2, f420 <mpfr_div@@Base+0x640>
    ee88:	mrs	x0, tpidr_el0
    ee8c:	str	x0, [x29, #200]
    ee90:	ldr	x0, [x29, #216]
    ee94:	cmp	x0, #0x1f
    ee98:	b.gt	f14c <mpfr_div@@Base+0x36c>
    ee9c:	add	x0, x26, #0x1
    eea0:	ldr	w1, [x6, #8]
    eea4:	lsl	x3, x22, #3
    eea8:	str	x3, [x29, #120]
    eeac:	lsl	x24, x0, #3
    eeb0:	add	x5, x23, x3
    eeb4:	ldr	x0, [x29, #192]
    eeb8:	add	x2, x0, x24
    eebc:	ldr	w0, [x25, #8]
    eec0:	ldur	x2, [x2, #-8]
    eec4:	mul	w1, w1, w0
    eec8:	ldur	x0, [x5, #-8]
    eecc:	str	w1, [x19, #8]
    eed0:	str	w1, [x29, #168]
    eed4:	str	xzr, [x29, #256]
    eed8:	cmp	x2, x0
    eedc:	b.eq	f780 <mpfr_div@@Base+0x9a0>  // b.none
    eee0:	cset	x1, hi  // hi = pmore
    eee4:	cset	w0, hi  // hi = pmore
    eee8:	str	w0, [x29, #152]
    eeec:	sub	x28, x4, x28
    eef0:	neg	w21, w21
    eef4:	add	x28, x28, x1
    eef8:	and	w25, w21, #0x3f
    eefc:	cmp	w20, #0x1
    ef00:	b.eq	f278 <mpfr_div@@Base+0x498>  // b.none
    ef04:	ldr	w0, [x29, #168]
    ef08:	mvn	w0, w0
    ef0c:	lsr	w0, w0, #31
    ef10:	add	w0, w0, #0x2
    ef14:	cmp	w0, w20
    ef18:	cset	w0, eq  // eq = none
    ef1c:	str	w0, [x29, #112]
    ef20:	str	w0, [x29, #208]
    ef24:	ldr	x0, [x29, #216]
    ef28:	cmp	x0, #0x18
    ef2c:	ccmp	x22, #0x18, #0x4, gt
    ef30:	b.gt	f7e0 <mpfr_div@@Base+0xa00>
    ef34:	orr	w0, w20, w25
    ef38:	ldr	x26, [x29, #184]
    ef3c:	ldr	x27, [x29, #216]
    ef40:	cbz	w0, f93c <mpfr_div@@Base+0xb5c>
    ef44:	lsl	x0, x27, #1
    ef48:	str	x0, [x29, #144]
    ef4c:	lsl	x2, x27, #4
    ef50:	cmp	x2, #0x4, lsl #12
    ef54:	b.hi	f9b0 <mpfr_div@@Base+0xbd0>  // b.pmore
    ef58:	sub	sp, sp, x2
    ef5c:	mov	x21, sp
    ef60:	ldr	x1, [x29, #176]
    ef64:	lsl	x0, x27, #1
    ef68:	cmp	x0, x1
    ef6c:	b.le	f964 <mpfr_div@@Base+0xb84>
    ef70:	sub	x2, x0, x1
    ef74:	mov	w1, #0x0                   	// #0
    ef78:	mov	x0, x21
    ef7c:	lsl	x2, x2, #3
    ef80:	str	x2, [x29, #160]
    ef84:	bl	c110 <memset@plt>
    ef88:	ldr	w1, [x29, #152]
    ef8c:	ldr	x2, [x29, #160]
    ef90:	add	x0, x21, x2
    ef94:	cbnz	w1, f614 <mpfr_div@@Base+0x834>
    ef98:	ldr	x1, [x29, #192]
    ef9c:	str	xzr, [x29, #160]
    efa0:	cmp	x1, x0
    efa4:	b.eq	efb0 <mpfr_div@@Base+0x1d0>  // b.none
    efa8:	mov	x2, x24
    efac:	bl	ba10 <memcpy@plt>
    efb0:	cmp	x27, x22
    efb4:	b.gt	f91c <mpfr_div@@Base+0xb3c>
    efb8:	cmp	x26, x23
    efbc:	sub	x24, x22, x27
    efc0:	b.eq	f634 <mpfr_div@@Base+0x854>  // b.none
    efc4:	add	x4, x23, x24, lsl #3
    efc8:	cbz	x24, efdc <mpfr_div@@Base+0x1fc>
    efcc:	sub	x24, x24, #0x1
    efd0:	ldr	x0, [x23, x24, lsl #3]
    efd4:	cbz	x0, efc8 <mpfr_div@@Base+0x1e8>
    efd8:	mov	x24, #0x1                   	// #1
    efdc:	ldr	x3, [x29, #144]
    efe0:	mov	x5, x27
    efe4:	mov	x2, x21
    efe8:	mov	x0, x26
    efec:	mov	x1, #0x0                   	// #0
    eff0:	bl	ccb0 <__gmpn_divrem@plt>
    eff4:	mov	x9, x0
    eff8:	ldr	x0, [x29, #160]
    effc:	cbnz	x0, f284 <mpfr_div@@Base+0x4a4>
    f000:	mov	x0, x27
    f004:	sub	x0, x0, #0x1
    f008:	ldr	x4, [x21, x0, lsl #3]
    f00c:	cbz	x4, ff9c <mpfr_div@@Base+0x11bc>
    f010:	mov	x24, #0x1                   	// #1
    f014:	mov	x4, x24
    f018:	ldr	x0, [x29, #216]
    f01c:	cmp	x27, x0
    f020:	b.ne	fca8 <mpfr_div@@Base+0xec8>  // b.any
    f024:	ldr	x0, [x26]
    f028:	mov	x1, #0xffffffffffffffff    	// #-1
    f02c:	lsl	x1, x1, x25
    f030:	mov	w3, w25
    f034:	bic	x5, x0, x1
    f038:	and	x1, x0, x1
    f03c:	orr	x2, x5, x24
    f040:	str	x1, [x26]
    f044:	cmp	x2, #0x0
    f048:	cset	w1, ne  // ne = any
    f04c:	cmp	x27, x22
    f050:	b.lt	f9cc <mpfr_div@@Base+0xbec>  // b.tstop
    f054:	cbnz	w20, f548 <mpfr_div@@Base+0x768>
    f058:	sub	w3, w3, #0x1
    f05c:	mov	x0, #0x1                   	// #1
    f060:	lsl	x0, x0, x3
    f064:	bic	x8, x5, x0
    f068:	orr	x8, x8, x4
    f06c:	and	x24, x0, x5
    f070:	orr	x5, x24, x8
    f074:	ldr	w0, [x29, #208]
    f078:	cbnz	w0, f604 <mpfr_div@@Base+0x824>
    f07c:	cbz	x5, f0a8 <mpfr_div@@Base+0x2c8>
    f080:	cbnz	w20, f558 <mpfr_div@@Base+0x778>
    f084:	mov	w0, #0xffffffff            	// #-1
    f088:	str	w0, [x29, #208]
    f08c:	cbz	x24, f0a8 <mpfr_div@@Base+0x2c8>
    f090:	ldr	x0, [x29, #184]
    f094:	ldr	x1, [x0]
    f098:	cbnz	x8, f5f8 <mpfr_div@@Base+0x818>
    f09c:	lsr	x0, x1, x25
    f0a0:	tbnz	w0, #0, f5f8 <mpfr_div@@Base+0x818>
    f0a4:	nop
    f0a8:	ldr	x0, [x29, #256]
    f0ac:	cbnz	x0, f778 <mpfr_div@@Base+0x998>
    f0b0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    f0b4:	ldr	x1, [x0, #2544]
    f0b8:	add	x0, x0, #0x9f0
    f0bc:	blr	x1
    f0c0:	ldr	x1, [x29, #200]
    f0c4:	ldr	x0, [x1, x0]
    f0c8:	cmp	x0, x28
    f0cc:	b.lt	10cf8 <mpfr_div@@Base+0x1f18>  // b.tstop
    f0d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    f0d4:	ldr	x1, [x0, #2512]
    f0d8:	add	x0, x0, #0x9d0
    f0dc:	blr	x1
    f0e0:	ldr	x1, [x29, #200]
    f0e4:	ldr	x0, [x1, x0]
    f0e8:	cmp	x0, x28
    f0ec:	b.gt	f734 <mpfr_div@@Base+0x954>
    f0f0:	ldr	w0, [x29, #168]
    f0f4:	ldr	w1, [x29, #208]
    f0f8:	str	x28, [x19, #16]
    f0fc:	mul	w27, w0, w1
    f100:	cbz	w27, f128 <mpfr_div@@Base+0x348>
    f104:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    f108:	ldr	x1, [x0, #2576]
    f10c:	add	x0, x0, #0xa10
    f110:	blr	x1
    f114:	ldr	x1, [x29, #200]
    f118:	add	x0, x1, x0
    f11c:	ldr	w1, [x0]
    f120:	orr	w1, w1, #0x8
    f124:	str	w1, [x0]
    f128:	mov	sp, x29
    f12c:	mov	w0, w27
    f130:	ldp	x19, x20, [sp, #16]
    f134:	ldp	x21, x22, [sp, #32]
    f138:	ldp	x23, x24, [sp, #48]
    f13c:	ldp	x25, x26, [sp, #64]
    f140:	ldp	x27, x28, [sp, #80]
    f144:	ldp	x29, x30, [sp], #272
    f148:	ret
    f14c:	add	x28, x29, #0xe0
    f150:	add	x24, x29, #0xf0
    f154:	mov	x0, x28
    f158:	str	x6, [x29, #160]
    f15c:	bl	bf90 <mpfr_mpz_init@plt>
    f160:	add	x27, x29, #0x100
    f164:	mov	x0, x24
    f168:	str	x27, [x29, #208]
    f16c:	bl	bf90 <mpfr_mpz_init@plt>
    f170:	add	x21, x21, #0x40
    f174:	mov	x0, x27
    f178:	bl	bf90 <mpfr_mpz_init@plt>
    f17c:	mov	x1, x25
    f180:	mov	x0, x24
    f184:	bl	cac0 <mpfr_get_z_2exp@plt>
    f188:	str	x0, [x29, #168]
    f18c:	ldr	x6, [x29, #160]
    f190:	mov	x0, x27
    f194:	mov	x1, x6
    f198:	bl	cac0 <mpfr_get_z_2exp@plt>
    f19c:	str	x0, [x29, #144]
    f1a0:	mov	w1, #0x2                   	// #2
    f1a4:	mov	x0, x27
    f1a8:	bl	cb60 <__gmpz_sizeinbase@plt>
    f1ac:	mov	x27, x0
    f1b0:	cmp	x21, x0
    f1b4:	ldr	x6, [x29, #160]
    f1b8:	b.lt	f520 <mpfr_div@@Base+0x740>  // b.tstop
    f1bc:	mov	x0, x24
    f1c0:	mov	w1, #0x2                   	// #2
    f1c4:	str	x6, [x29, #160]
    f1c8:	bl	cb60 <__gmpz_sizeinbase@plt>
    f1cc:	add	x4, x21, x27
    f1d0:	cmp	x0, x4
    f1d4:	ldr	x6, [x29, #160]
    f1d8:	b.gt	f4fc <mpfr_div@@Base+0x71c>
    f1dc:	b.lt	fce0 <mpfr_div@@Base+0xf00>  // b.tstop
    f1e0:	ldr	x2, [x29, #208]
    f1e4:	mov	x1, x24
    f1e8:	mov	x0, x28
    f1ec:	str	x6, [x29, #152]
    f1f0:	bl	bb30 <__gmpz_tdiv_q@plt>
    f1f4:	mov	w1, #0x2                   	// #2
    f1f8:	mov	x0, x28
    f1fc:	bl	cb60 <__gmpz_sizeinbase@plt>
    f200:	sub	x21, x0, x21
    f204:	add	x1, x21, #0x1
    f208:	mov	x0, x28
    f20c:	str	x1, [x29, #160]
    f210:	bl	ba90 <__gmpz_scan1@plt>
    f214:	cmp	w20, #0x0
    f218:	add	x21, x21, #0x40
    f21c:	cset	x2, eq  // eq = none
    f220:	sub	x21, x21, x2
    f224:	cmp	x0, x21
    f228:	ldp	x6, x1, [x29, #152]
    f22c:	b.cs	f248 <mpfr_div@@Base+0x468>  // b.hs, b.nlast
    f230:	mov	x0, x28
    f234:	str	x6, [x29, #160]
    f238:	bl	c4b0 <__gmpz_scan0@plt>
    f23c:	cmp	x21, x0
    f240:	ldr	x6, [x29, #160]
    f244:	b.hi	fe04 <mpfr_div@@Base+0x1024>  // b.pmore
    f248:	mov	x0, x28
    f24c:	str	x6, [x29, #168]
    f250:	bl	c170 <mpfr_mpz_clear@plt>
    f254:	mov	x0, x24
    f258:	bl	c170 <mpfr_mpz_clear@plt>
    f25c:	ldr	x0, [x29, #208]
    f260:	bl	c170 <mpfr_mpz_clear@plt>
    f264:	ldr	x6, [x29, #168]
    f268:	ldr	x21, [x19]
    f26c:	ldr	x4, [x25, #16]
    f270:	ldr	x28, [x6, #16]
    f274:	b	ee9c <mpfr_div@@Base+0xbc>
    f278:	str	w20, [x29, #112]
    f27c:	str	w20, [x29, #208]
    f280:	b	ef24 <mpfr_div@@Base+0x144>
    f284:	mov	x4, x0
    f288:	mov	x24, x0
    f28c:	b	f018 <mpfr_div@@Base+0x238>
    f290:	cmp	x3, x0
    f294:	b.ne	ee54 <mpfr_div@@Base+0x74>  // b.any
    f298:	cmp	x3, #0x3f
    f29c:	b.le	ffc4 <mpfr_div@@Base+0x11e4>
    f2a0:	cmp	x3, #0x7f
    f2a4:	mov	x1, #0x40                  	// #64
    f2a8:	ccmp	x3, x1, #0x4, le
    f2ac:	b.ne	1027c <mpfr_div@@Base+0x149c>  // b.any
    f2b0:	cmp	x3, #0x40
    f2b4:	b.ne	ee54 <mpfr_div@@Base+0x74>  // b.any
    f2b8:	ldr	x7, [x23]
    f2bc:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
    f2c0:	add	x2, x2, #0x420
    f2c4:	mov	x0, #0x1000000000000000    	// #1152921504606846976
    f2c8:	sub	x3, x7, #0x1
    f2cc:	add	x12, x2, #0x800
    f2d0:	lsr	x10, x7, #55
    f2d4:	lsr	x9, x7, #24
    f2d8:	lsr	x11, x3, #1
    f2dc:	sub	x10, x10, #0x100
    f2e0:	ldr	x3, [x29, #192]
    f2e4:	sbfx	x1, x7, #0, #1
    f2e8:	sub	x4, x4, x28
    f2ec:	ldr	x8, [x3]
    f2f0:	ldr	x3, [x12, x10, lsl #3]
    f2f4:	cmp	x8, x7
    f2f8:	ldr	x10, [x2, x10, lsl #3]
    f2fc:	sub	x2, x8, x7
    f300:	madd	x3, x9, x3, x3
    f304:	csel	x2, x2, x8, cs  // cs = hs, nlast
    f308:	sub	x10, x10, #0x1
    f30c:	sub	x3, x10, x3, lsr #40
    f310:	lsl	x10, x3, #13
    f314:	madd	x9, x9, x3, x3
    f318:	sub	x0, x0, x9
    f31c:	mul	x0, x0, x3
    f320:	add	x0, x10, x0, lsr #47
    f324:	and	x1, x1, x0
    f328:	madd	x3, x11, x0, x0
    f32c:	lsr	x1, x1, #1
    f330:	sub	x1, x1, x3
    f334:	umulh	x1, x0, x1
    f338:	lsr	x1, x1, #1
    f33c:	add	x0, x1, x0, lsl #31
    f340:	umulh	x0, x2, x0
    f344:	add	x0, x0, x2
    f348:	umulh	x3, x0, x7
    f34c:	mul	x9, x7, x0
    f350:	negs	x1, x9
    f354:	sbc	x2, x2, x3
    f358:	cmp	x2, #0x0
    f35c:	ccmp	x7, x1, #0x0, eq  // eq = none
    f360:	b.hi	f384 <mpfr_div@@Base+0x5a4>  // b.pmore
    f364:	nop
    f368:	cmp	x7, x1
    f36c:	sub	x1, x1, x7
    f370:	cset	x3, hi  // hi = pmore
    f374:	add	x0, x0, #0x1
    f378:	subs	x2, x2, x3
    f37c:	ccmp	x7, x1, #0x0, eq  // eq = none
    f380:	b.ls	f368 <mpfr_div@@Base+0x588>  // b.plast
    f384:	cmp	x8, x7
    f388:	b.cs	106b8 <mpfr_div@@Base+0x18d8>  // b.hs, b.nlast
    f38c:	ldr	x3, [x29, #184]
    f390:	lsl	x2, x1, #1
    f394:	cmp	x7, x2
    f398:	ccmp	x2, x1, #0x0, hi  // hi = pmore
    f39c:	str	x0, [x3]
    f3a0:	b.cs	10a60 <mpfr_div@@Base+0x1c80>  // b.hs, b.nlast
    f3a4:	sub	x1, x2, x7
    f3a8:	mov	x2, x0
    f3ac:	mov	x7, #0x1                   	// #1
    f3b0:	ldr	w3, [x6, #8]
    f3b4:	mrs	x5, tpidr_el0
    f3b8:	ldr	w27, [x25, #8]
    f3bc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    f3c0:	ldr	x6, [x0, #2544]
    f3c4:	add	x0, x0, #0x9f0
    f3c8:	blr	x6
    f3cc:	str	x5, [x29, #200]
    f3d0:	ldr	x0, [x5, x0]
    f3d4:	mul	w27, w27, w3
    f3d8:	str	w27, [x19, #8]
    f3dc:	cmp	x0, x4
    f3e0:	b.lt	104ec <mpfr_div@@Base+0x170c>  // b.tstop
    f3e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    f3e8:	ldr	x3, [x0, #2512]
    f3ec:	add	x0, x0, #0x9d0
    f3f0:	blr	x3
    f3f4:	ldr	x3, [x29, #200]
    f3f8:	ldr	x0, [x3, x0]
    f3fc:	cmp	x4, x0
    f400:	b.lt	10cd4 <mpfr_div@@Base+0x1ef4>  // b.tstop
    f404:	orr	x1, x1, x7
    f408:	str	x4, [x19, #16]
    f40c:	cmp	x1, #0x0
    f410:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    f414:	b.ne	fd94 <mpfr_div@@Base+0xfb4>  // b.any
    f418:	mov	w27, #0x0                   	// #0
    f41c:	b	f128 <mpfr_div@@Base+0x348>
    f420:	mrs	x2, tpidr_el0
    f424:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    f428:	ldr	x1, [x0, #2512]
    f42c:	add	x0, x0, #0x9d0
    f430:	blr	x1
    f434:	str	x2, [x29, #200]
    f438:	sub	x1, x4, #0x3f
    f43c:	ldr	x0, [x2, x0]
    f440:	cmp	x1, x0
    f444:	b.le	ee90 <mpfr_div@@Base+0xb0>
    f448:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    f44c:	ldr	x3, [x0, #2544]
    f450:	add	x0, x0, #0x9f0
    f454:	blr	x3
    f458:	ldr	x0, [x2, x0]
    f45c:	cmp	x1, x0
    f460:	b.gt	ee90 <mpfr_div@@Base+0xb0>
    f464:	ldr	w0, [x6, #8]
    f468:	ldr	x2, [x23]
    f46c:	cmp	w0, #0x0
    f470:	b.le	10138 <mpfr_div@@Base+0x1358>
    f474:	mov	x1, x25
    f478:	mov	w3, w20
    f47c:	mov	x0, x19
    f480:	bl	cc60 <mpfr_div_ui@plt>
    f484:	mov	w27, w0
    f488:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    f48c:	ldr	x2, [x0, #2544]
    f490:	add	x0, x0, #0x9f0
    f494:	blr	x2
    f498:	ldr	x2, [x29, #200]
    f49c:	ldr	x1, [x19, #16]
    f4a0:	ldr	x2, [x2, x0]
    f4a4:	sub	x28, x1, x28
    f4a8:	str	x28, [x19, #16]
    f4ac:	sub	x0, x2, #0x3f
    f4b0:	cmp	x28, x0
    f4b4:	b.ge	10c90 <mpfr_div@@Base+0x1eb0>  // b.tcont
    f4b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    f4bc:	ldr	x1, [x0, #2512]
    f4c0:	add	x0, x0, #0x9d0
    f4c4:	blr	x1
    f4c8:	add	x28, x28, #0x40
    f4cc:	ldr	x1, [x29, #200]
    f4d0:	str	x28, [x19, #16]
    f4d4:	ldr	x0, [x1, x0]
    f4d8:	cmp	x28, x0
    f4dc:	ccmp	x2, x28, #0x1, ge  // ge = tcont
    f4e0:	b.ge	f100 <mpfr_div@@Base+0x320>  // b.tcont
    f4e4:	mov	w1, w27
    f4e8:	mov	w2, w20
    f4ec:	mov	x0, x19
    f4f0:	bl	cb30 <mpfr_check_range@plt>
    f4f4:	mov	w27, w0
    f4f8:	b	f128 <mpfr_div@@Base+0x348>
    f4fc:	sub	x2, x0, x4
    f500:	mov	x1, x24
    f504:	ldr	x0, [x29, #168]
    f508:	add	x0, x0, x2
    f50c:	str	x0, [x29, #168]
    f510:	mov	x0, x24
    f514:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
    f518:	ldr	x6, [x29, #160]
    f51c:	b	f1e0 <mpfr_div@@Base+0x400>
    f520:	sub	x2, x0, x21
    f524:	mov	x27, x21
    f528:	ldr	x0, [x29, #144]
    f52c:	add	x0, x0, x2
    f530:	str	x0, [x29, #144]
    f534:	ldr	x0, [x29, #208]
    f538:	mov	x1, x0
    f53c:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
    f540:	ldr	x6, [x29, #160]
    f544:	b	f1bc <mpfr_div@@Base+0x3dc>
    f548:	ldr	w0, [x29, #112]
    f54c:	cmp	x2, #0x0
    f550:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    f554:	b.ne	fd04 <mpfr_div@@Base+0xf24>  // b.any
    f558:	ldr	x0, [x29, #184]
    f55c:	mov	x1, #0x1                   	// #1
    f560:	lsl	x3, x1, x25
    f564:	ldr	x1, [x0]
    f568:	adds	x1, x1, x3
    f56c:	ldr	x0, [x29, #184]
    f570:	str	x1, [x0]
    f574:	mov	w1, #0x1                   	// #1
    f578:	str	w1, [x29, #208]
    f57c:	b.cc	f0a8 <mpfr_div@@Base+0x2c8>  // b.lo, b.ul, b.last
    f580:	ldr	x2, [x29, #136]
    f584:	mov	x1, x0
    f588:	add	x2, x0, x2, lsl #3
    f58c:	b	f5a0 <mpfr_div@@Base+0x7c0>
    f590:	ldr	x0, [x1, #8]
    f594:	add	x0, x0, #0x1
    f598:	str	x0, [x1, #8]!
    f59c:	cbnz	x0, fde4 <mpfr_div@@Base+0x1004>
    f5a0:	cmp	x1, x2
    f5a4:	b.ne	f590 <mpfr_div@@Base+0x7b0>  // b.any
    f5a8:	mov	w1, #0x1                   	// #1
    f5ac:	str	w1, [x29, #208]
    f5b0:	ldr	x2, [x29, #136]
    f5b4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    f5b8:	ldr	x1, [x29, #184]
    f5bc:	cmp	x28, x0
    f5c0:	cinc	x28, x28, ne  // ne = any
    f5c4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    f5c8:	str	x0, [x1, x2, lsl #3]
    f5cc:	b	f0a8 <mpfr_div@@Base+0x2c8>
    f5d0:	b.cc	fae8 <mpfr_div@@Base+0xd08>  // b.lo, b.ul, b.last
    f5d4:	ldr	w0, [x29, #208]
    f5d8:	orr	x5, x24, #0x1
    f5dc:	cbnz	w0, f604 <mpfr_div@@Base+0x824>
    f5e0:	cbnz	w20, f558 <mpfr_div@@Base+0x778>
    f5e4:	mov	w0, #0xffffffff            	// #-1
    f5e8:	str	w0, [x29, #208]
    f5ec:	cbz	x24, f0a8 <mpfr_div@@Base+0x2c8>
    f5f0:	ldr	x0, [x29, #184]
    f5f4:	ldr	x1, [x0]
    f5f8:	mov	x3, #0x1                   	// #1
    f5fc:	lsl	x3, x3, x25
    f600:	b	f568 <mpfr_div@@Base+0x788>
    f604:	cmp	x5, #0x0
    f608:	csetm	w0, ne  // ne = any
    f60c:	str	w0, [x29, #208]
    f610:	b	f0a8 <mpfr_div@@Base+0x2c8>
    f614:	sub	x24, x2, #0x8
    f618:	mov	w3, #0x1                   	// #1
    f61c:	ldr	x2, [x29, #176]
    f620:	ldr	x1, [x29, #192]
    f624:	bl	bce0 <__gmpn_rshift@plt>
    f628:	str	x0, [x21, x24]
    f62c:	str	xzr, [x29, #160]
    f630:	b	efb0 <mpfr_div@@Base+0x1d0>
    f634:	lsl	x1, x27, #3
    f638:	cmp	x1, #0x4, lsl #12
    f63c:	b.hi	10170 <mpfr_div@@Base+0x1390>  // b.pmore
    f640:	add	x1, x1, #0xf
    f644:	and	x1, x1, #0xfffffffffffffff0
    f648:	sub	sp, sp, x1
    f64c:	mov	x4, sp
    f650:	cmp	x4, x23
    f654:	b.eq	efc8 <mpfr_div@@Base+0x1e8>  // b.none
    f658:	ldr	x2, [x29, #120]
    f65c:	mov	x0, x4
    f660:	mov	x1, x23
    f664:	bl	ba10 <memcpy@plt>
    f668:	mov	x4, x0
    f66c:	b	efc8 <mpfr_div@@Base+0x1e8>
    f670:	mov	x0, #0x2                   	// #2
    f674:	movk	x0, #0x8000, lsl #48
    f678:	cmp	x4, x0
    f67c:	b.eq	f6fc <mpfr_div@@Base+0x91c>  // b.none
    f680:	ldr	x1, [x2, #16]
    f684:	mov	x3, #0x2                   	// #2
    f688:	movk	x3, #0x8000, lsl #48
    f68c:	cmp	x1, x3
    f690:	b.eq	f6fc <mpfr_div@@Base+0x91c>  // b.none
    f694:	ldr	w5, [x6, #8]
    f698:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    f69c:	ldr	w0, [x25, #8]
    f6a0:	cmp	x4, x2
    f6a4:	mul	w0, w0, w5
    f6a8:	str	w0, [x19, #8]
    f6ac:	b.eq	fdf0 <mpfr_div@@Base+0x1010>  // b.none
    f6b0:	cmp	x1, x2
    f6b4:	b.eq	fd4c <mpfr_div@@Base+0xf6c>  // b.none
    f6b8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    f6bc:	cmp	x1, x0
    f6c0:	b.ne	fd4c <mpfr_div@@Base+0xf6c>  // b.any
    f6c4:	mrs	x5, tpidr_el0
    f6c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    f6cc:	ldr	x6, [x0, #2576]
    f6d0:	add	x0, x0, #0xa10
    f6d4:	blr	x6
    f6d8:	cmp	x4, x1
    f6dc:	add	x4, x5, x0
    f6e0:	ldr	w0, [x5, x0]
    f6e4:	b.eq	10268 <mpfr_div@@Base+0x1488>  // b.none
    f6e8:	orr	w0, w0, #0x20
    f6ec:	mov	w27, #0x0                   	// #0
    f6f0:	str	w0, [x4]
    f6f4:	str	x2, [x19, #16]
    f6f8:	b	f128 <mpfr_div@@Base+0x348>
    f6fc:	mrs	x1, tpidr_el0
    f700:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    f704:	ldr	x2, [x0, #2576]
    f708:	add	x0, x0, #0xa10
    f70c:	blr	x2
    f710:	add	x0, x1, x0
    f714:	mov	x1, #0x2                   	// #2
    f718:	movk	x1, #0x8000, lsl #48
    f71c:	str	x1, [x19, #16]
    f720:	mov	w27, #0x0                   	// #0
    f724:	ldr	w1, [x0]
    f728:	orr	w1, w1, #0x4
    f72c:	str	w1, [x0]
    f730:	b	f128 <mpfr_div@@Base+0x348>
    f734:	cbnz	w20, f760 <mpfr_div@@Base+0x980>
    f738:	sub	x0, x0, #0x1
    f73c:	cmp	x0, x28
    f740:	b.gt	10d10 <mpfr_div@@Base+0x1f30>
    f744:	ldr	w0, [x29, #208]
    f748:	cmn	w0, #0x1
    f74c:	b.eq	f760 <mpfr_div@@Base+0x980>  // b.none
    f750:	mov	x0, x19
    f754:	bl	bf00 <mpfr_powerof2_raw@plt>
    f758:	cmp	w0, #0x0
    f75c:	cset	w20, ne  // ne = any
    f760:	ldr	w2, [x29, #168]
    f764:	mov	w1, w20
    f768:	mov	x0, x19
    f76c:	bl	c3c0 <mpfr_underflow@plt>
    f770:	mov	w27, w0
    f774:	b	f128 <mpfr_div@@Base+0x348>
    f778:	bl	c410 <mpfr_tmp_free@plt>
    f77c:	b	f0b0 <mpfr_div@@Base+0x2d0>
    f780:	ldr	x0, [x29, #128]
    f784:	ldr	x3, [x29, #192]
    f788:	b	f7a4 <mpfr_div@@Base+0x9c4>
    f78c:	sub	x26, x26, #0x1
    f790:	sub	x0, x0, #0x1
    f794:	ldr	x1, [x3, x26, lsl #3]
    f798:	ldr	x2, [x23, x0, lsl #3]
    f79c:	cmp	x1, x2
    f7a0:	b.ne	fd80 <mpfr_div@@Base+0xfa0>  // b.any
    f7a4:	cmp	x26, #0x0
    f7a8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    f7ac:	b.ne	f78c <mpfr_div@@Base+0x9ac>  // b.any
    f7b0:	ldr	x1, [x29, #192]
    f7b4:	ldr	x2, [x23, x0, lsl #3]
    f7b8:	ldr	x1, [x1, x26, lsl #3]
    f7bc:	cmp	x1, x2
    f7c0:	b.ne	fd80 <mpfr_div@@Base+0xfa0>  // b.any
    f7c4:	cbz	x0, 101e8 <mpfr_div@@Base+0x1408>
    f7c8:	sub	x0, x0, #0x1
    f7cc:	ldr	x1, [x23, x0, lsl #3]
    f7d0:	cbz	x1, f7c4 <mpfr_div@@Base+0x9e4>
    f7d4:	mov	x1, #0x0                   	// #0
    f7d8:	str	wzr, [x29, #152]
    f7dc:	b	eeec <mpfr_div@@Base+0x10c>
    f7e0:	ldr	x0, [x29, #136]
    f7e4:	add	x21, x0, #0x2
    f7e8:	lsl	x27, x21, #4
    f7ec:	cmp	x27, #0x4, lsl #12
    f7f0:	b.hi	10600 <mpfr_div@@Base+0x1820>  // b.pmore
    f7f4:	sub	sp, sp, x27
    f7f8:	mov	x26, sp
    f7fc:	ldr	x0, [x29, #176]
    f800:	lsl	x1, x21, #1
    f804:	str	x1, [x29, #160]
    f808:	cmp	x0, x21, lsl #1
    f80c:	b.lt	fd14 <mpfr_div@@Base+0xf34>  // b.tstop
    f810:	sub	x1, x0, x1
    f814:	ldr	x0, [x29, #192]
    f818:	add	x1, x0, x1, lsl #3
    f81c:	cmp	x1, x26
    f820:	b.eq	f830 <mpfr_div@@Base+0xa50>  // b.none
    f824:	mov	x2, x27
    f828:	mov	x0, x26
    f82c:	bl	ba10 <memcpy@plt>
    f830:	lsl	x0, x21, #3
    f834:	str	x0, [x29, #144]
    f838:	cmp	x22, x21
    f83c:	b.lt	ff44 <mpfr_div@@Base+0x1164>  // b.tstop
    f840:	sub	x3, x22, x21
    f844:	add	x3, x23, x3, lsl #3
    f848:	lsl	x0, x21, #3
    f84c:	cmp	x0, #0x4, lsl #12
    f850:	b.hi	10614 <mpfr_div@@Base+0x1834>  // b.pmore
    f854:	add	x0, x0, #0xf
    f858:	and	x0, x0, #0xfffffffffffffff0
    f85c:	sub	sp, sp, x0
    f860:	mov	x27, sp
    f864:	mov	x1, x26
    f868:	mov	x2, x3
    f86c:	mov	x0, x27
    f870:	mov	x3, x21
    f874:	bl	c140 <mpfr_divhigh_n@plt>
    f878:	cmp	x0, #0x1
    f87c:	ldr	x1, [x29, #160]
    f880:	add	x26, x1, #0x1
    f884:	mov	w1, #0x40                  	// #64
    f888:	clz	x26, x26
    f88c:	sub	w1, w1, w26
    f890:	lsl	x26, x21, #6
    f894:	sub	x26, x26, w1, sxtw
    f898:	b.eq	101bc <mpfr_div@@Base+0x13dc>  // b.none
    f89c:	cmp	w20, #0x0
    f8a0:	mov	x2, x26
    f8a4:	ldr	x3, [x19]
    f8a8:	mov	x1, x21
    f8ac:	mov	x0, x27
    f8b0:	cinc	x3, x3, eq  // eq = none
    f8b4:	bl	c370 <mpfr_round_p@plt>
    f8b8:	cbz	w0, ef34 <mpfr_div@@Base+0x154>
    f8bc:	ldr	x0, [x29, #184]
    f8c0:	add	x1, x27, #0x8
    f8c4:	cmp	x1, x0
    f8c8:	b.eq	f8d8 <mpfr_div@@Base+0xaf8>  // b.none
    f8cc:	ldr	x2, [x29, #216]
    f8d0:	lsl	x2, x2, #3
    f8d4:	bl	ba10 <memcpy@plt>
    f8d8:	ldr	x4, [x29, #184]
    f8dc:	mov	x1, #0x1                   	// #1
    f8e0:	lsl	x3, x1, x25
    f8e4:	neg	x2, x3
    f8e8:	ldr	x0, [x4]
    f8ec:	and	x1, x2, x0
    f8f0:	str	x1, [x4]
    f8f4:	cbnz	w20, ffa4 <mpfr_div@@Base+0x11c4>
    f8f8:	cbz	w25, 10180 <mpfr_div@@Base+0x13a0>
    f8fc:	ldr	x0, [x27, #8]
    f900:	sub	w2, w25, #0x1
    f904:	lsr	x0, x0, x2
    f908:	and	x0, x0, #0x1
    f90c:	mov	w2, #0xffffffff            	// #-1
    f910:	str	w2, [x29, #208]
    f914:	cbz	x0, f0a8 <mpfr_div@@Base+0x2c8>
    f918:	b	f568 <mpfr_div@@Base+0x788>
    f91c:	ldr	x0, [x29, #144]
    f920:	sub	x2, x27, x22
    f924:	mov	x5, x22
    f928:	mov	x4, x23
    f92c:	sub	x3, x0, x2
    f930:	mov	x24, #0x0                   	// #0
    f934:	add	x2, x21, x2, lsl #3
    f938:	b	efe8 <mpfr_div@@Base+0x208>
    f93c:	ldr	x0, [x29, #136]
    f940:	add	x27, x0, #0x2
    f944:	lsl	x1, x27, #3
    f948:	cmp	x1, #0x4, lsl #12
    f94c:	b.hi	10630 <mpfr_div@@Base+0x1850>  // b.pmore
    f950:	add	x1, x1, #0xf
    f954:	and	x1, x1, #0xfffffffffffffff0
    f958:	sub	sp, sp, x1
    f95c:	mov	x26, sp
    f960:	b	ef44 <mpfr_div@@Base+0x164>
    f964:	mov	x0, x1
    f968:	lsl	x1, x27, #1
    f96c:	sub	x24, x0, x1
    f970:	ldr	x0, [x29, #192]
    f974:	add	x1, x0, x24, lsl #3
    f978:	ldr	w0, [x29, #152]
    f97c:	cbnz	w0, fd64 <mpfr_div@@Base+0xf84>
    f980:	cmp	x21, x1
    f984:	b.eq	fd78 <mpfr_div@@Base+0xf98>  // b.none
    f988:	mov	x0, x21
    f98c:	bl	ba10 <memcpy@plt>
    f990:	ldr	x1, [x29, #192]
    f994:	cbz	x24, 10700 <mpfr_div@@Base+0x1920>
    f998:	sub	x24, x24, #0x1
    f99c:	ldr	x0, [x1, x24, lsl #3]
    f9a0:	cbz	x0, f994 <mpfr_div@@Base+0xbb4>
    f9a4:	mov	x0, #0x1                   	// #1
    f9a8:	str	x0, [x29, #160]
    f9ac:	b	efb0 <mpfr_div@@Base+0x1d0>
    f9b0:	mov	x1, x2
    f9b4:	add	x0, x29, #0x100
    f9b8:	str	x2, [x29, #160]
    f9bc:	bl	bdc0 <mpfr_tmp_allocate@plt>
    f9c0:	mov	x21, x0
    f9c4:	ldr	x2, [x29, #160]
    f9c8:	b	ef60 <mpfr_div@@Base+0x180>
    f9cc:	cbz	x2, fd5c <mpfr_div@@Base+0xf7c>
    f9d0:	cbnz	w20, ffb8 <mpfr_div@@Base+0x11d8>
    f9d4:	sub	w3, w3, #0x1
    f9d8:	mov	x8, #0x1                   	// #1
    f9dc:	lsl	x3, x8, x3
    f9e0:	and	x24, x3, x5
    f9e4:	bic	x8, x5, x3
    f9e8:	cmp	x8, #0x1
    f9ec:	b.hi	f074 <mpfr_div@@Base+0x294>  // b.pmore
    f9f0:	ldr	x1, [x29, #120]
    f9f4:	cmp	x1, #0x4, lsl #12
    f9f8:	b.hi	107e0 <mpfr_div@@Base+0x1a00>  // b.pmore
    f9fc:	add	x1, x1, #0xf
    fa00:	and	x1, x1, #0xfffffffffffffff0
    fa04:	sub	sp, sp, x1
    fa08:	mov	x6, sp
    fa0c:	str	x0, [x26]
    fa10:	sub	x22, x22, x27
    fa14:	stp	x5, x8, [x29, #96]
    fa18:	cmp	x27, x22
    fa1c:	str	x9, [x29, #112]
    fa20:	b.lt	101f4 <mpfr_div@@Base+0x1414>  // b.tstop
    fa24:	mov	x0, x6
    fa28:	mov	x4, x22
    fa2c:	mov	x3, x23
    fa30:	mov	x2, x27
    fa34:	mov	x1, x26
    fa38:	str	x6, [x29, #120]
    fa3c:	bl	c7a0 <__gmpn_mul@plt>
    fa40:	ldp	x5, x8, [x29, #96]
    fa44:	ldp	x9, x6, [x29, #112]
    fa48:	cbnz	x9, 1021c <mpfr_div@@Base+0x143c>
    fa4c:	ldr	x0, [x26]
    fa50:	eor	x0, x0, x5
    fa54:	str	x0, [x26]
    fa58:	lsl	x4, x22, #3
    fa5c:	sub	x0, x27, #0x1
    fa60:	add	x1, x6, x4
    fa64:	nop
    fa68:	ldr	x2, [x1, x0, lsl #3]
    fa6c:	ldr	x3, [x21, x0, lsl #3]
    fa70:	sub	x0, x0, #0x1
    fa74:	cmp	x3, x2
    fa78:	b.ne	f5d0 <mpfr_div@@Base+0x7f0>  // b.any
    fa7c:	cmn	x0, #0x1
    fa80:	b.ne	fa68 <mpfr_div@@Base+0xc88>  // b.any
    fa84:	ldr	x0, [x29, #144]
    fa88:	ldr	x2, [x29, #176]
    fa8c:	cmp	x0, x2
    fa90:	b.gt	10708 <mpfr_div@@Base+0x1928>
    fa94:	sub	x0, x2, x0
    fa98:	cmp	x0, x22
    fa9c:	b.gt	10924 <mpfr_div@@Base+0x1b44>
    faa0:	sub	x3, x22, x0
    faa4:	cmp	x3, #0x0
    faa8:	cset	w13, gt
    faac:	cbz	x0, 10c2c <mpfr_div@@Base+0x1e4c>
    fab0:	ldr	w2, [x29, #152]
    fab4:	cbnz	w2, 10a78 <mpfr_div@@Base+0x1c98>
    fab8:	add	x10, x6, x3, lsl #3
    fabc:	ldr	x7, [x29, #192]
    fac0:	b	fad0 <mpfr_div@@Base+0xcf0>
    fac4:	cmp	x0, #0x0
    fac8:	ccmp	x11, x2, #0x0, gt
    facc:	b.ne	10adc <mpfr_div@@Base+0x1cfc>  // b.any
    fad0:	sub	x0, x0, #0x1
    fad4:	ldr	x2, [x7, x0, lsl #3]
    fad8:	ldr	x11, [x10, x0, lsl #3]
    fadc:	cmp	x11, x2
    fae0:	b.ls	fac4 <mpfr_div@@Base+0xce4>  // b.plast
    fae4:	nop
    fae8:	ldr	x0, [x29, #160]
    faec:	mov	w26, #0x0                   	// #0
    faf0:	cbz	x0, fbc0 <mpfr_div@@Base+0xde0>
    faf4:	ldr	x2, [x29, #144]
    faf8:	ldr	x0, [x29, #176]
    fafc:	sub	x7, x0, x2
    fb00:	cmp	x22, x7
    fb04:	b.ge	10734 <mpfr_div@@Base+0x1954>  // b.tcont
    fb08:	ldr	w2, [x29, #152]
    fb0c:	sub	x0, x7, x22
    fb10:	cbnz	w2, 10970 <mpfr_div@@Base+0x1b90>
    fb14:	ldr	x5, [x29, #192]
    fb18:	lsl	x3, x0, #3
    fb1c:	cbz	x0, 10c7c <mpfr_div@@Base+0x1e9c>
    fb20:	sub	x0, x0, #0x1
    fb24:	ldr	x2, [x5, x0, lsl #3]
    fb28:	cbz	x2, fb1c <mpfr_div@@Base+0xd3c>
    fb2c:	ldr	x0, [x29, #192]
    fb30:	mov	w26, #0x1                   	// #1
    fb34:	ldr	x2, [x29, #160]
    fb38:	add	x5, x0, x3
    fb3c:	cbz	x22, fb8c <mpfr_div@@Base+0xdac>
    fb40:	ldr	w0, [x29, #152]
    fb44:	cbnz	w0, 109f4 <mpfr_div@@Base+0x1c14>
    fb48:	ldr	x11, [x29, #160]
    fb4c:	mov	x0, #0x0                   	// #0
    fb50:	ldr	x7, [x6, x0]
    fb54:	and	w10, w2, #0x1
    fb58:	ldr	x3, [x5, x0]
    fb5c:	sub	x2, x7, x2
    fb60:	cmp	x7, x3
    fb64:	sub	x3, x2, x3
    fb68:	mov	x2, x11
    fb6c:	b.cc	fb7c <mpfr_div@@Base+0xd9c>  // b.lo, b.ul, b.last
    fb70:	cmn	x3, #0x1
    fb74:	csel	w2, w10, wzr, eq  // eq = none
    fb78:	and	x2, x2, #0xff
    fb7c:	str	x3, [x6, x0]
    fb80:	add	x0, x0, #0x8
    fb84:	cmp	x4, x0
    fb88:	b.ne	fb50 <mpfr_div@@Base+0xd70>  // b.any
    fb8c:	ldr	x3, [x1]
    fb90:	mov	x0, #0x1                   	// #1
    fb94:	subs	x4, x3, x2
    fb98:	str	x4, [x1]
    fb9c:	b.cc	fbb8 <mpfr_div@@Base+0xdd8>  // b.lo, b.ul, b.last
    fba0:	b	fbc0 <mpfr_div@@Base+0xde0>
    fba4:	ldr	x2, [x1, x0, lsl #3]
    fba8:	sub	x3, x2, #0x1
    fbac:	str	x3, [x1, x0, lsl #3]
    fbb0:	add	x0, x0, #0x1
    fbb4:	cbnz	x2, fbc0 <mpfr_div@@Base+0xde0>
    fbb8:	cmp	x27, x0
    fbbc:	b.ne	fba4 <mpfr_div@@Base+0xdc4>  // b.any
    fbc0:	mov	x3, x27
    fbc4:	mov	x2, x21
    fbc8:	mov	x0, x1
    fbcc:	str	x6, [x29, #160]
    fbd0:	str	x8, [x29, #176]
    fbd4:	str	x9, [x29, #192]
    fbd8:	bl	be60 <__gmpn_sub_n@plt>
    fbdc:	ldr	x0, [x29, #128]
    fbe0:	ldr	x6, [x29, #160]
    fbe4:	ldr	x8, [x29, #176]
    fbe8:	ldr	x9, [x29, #192]
    fbec:	nop
    fbf0:	ldr	x2, [x6, x0, lsl #3]
    fbf4:	ldr	x1, [x23, x0, lsl #3]
    fbf8:	sub	x0, x0, #0x1
    fbfc:	cmp	x2, x1
    fc00:	b.ne	1066c <mpfr_div@@Base+0x188c>  // b.any
    fc04:	cmn	x0, #0x1
    fc08:	b.ne	fbf0 <mpfr_div@@Base+0xe10>  // b.any
    fc0c:	cbnz	w26, 10250 <mpfr_div@@Base+0x1470>
    fc10:	cmp	x8, #0x1
    fc14:	b.eq	10c14 <mpfr_div@@Base+0x1e34>  // b.none
    fc18:	cbnz	x24, fd5c <mpfr_div@@Base+0xf7c>
    fc1c:	cbnz	w25, 1067c <mpfr_div@@Base+0x189c>
    fc20:	mov	w0, #0x1                   	// #1
    fc24:	str	w0, [x29, #208]
    fc28:	cbz	w20, fc80 <mpfr_div@@Base+0xea0>
    fc2c:	ldr	x0, [x29, #184]
    fc30:	mov	x1, #0x1                   	// #1
    fc34:	str	wzr, [x29, #208]
    fc38:	ldr	x0, [x0]
    fc3c:	sub	x2, x0, x1
    fc40:	ldr	x3, [x29, #184]
    fc44:	cmp	x1, x0
    fc48:	str	x2, [x3]
    fc4c:	b.ls	fc80 <mpfr_div@@Base+0xea0>  // b.plast
    fc50:	ldr	x1, [x29, #136]
    fc54:	mov	x0, x3
    fc58:	add	x3, x3, x1, lsl #3
    fc5c:	b	fc70 <mpfr_div@@Base+0xe90>
    fc60:	ldr	x1, [x0, #8]
    fc64:	sub	x2, x1, #0x1
    fc68:	str	x2, [x0, #8]!
    fc6c:	cbnz	x1, fc80 <mpfr_div@@Base+0xea0>
    fc70:	cmp	x3, x0
    fc74:	b.ne	fc60 <mpfr_div@@Base+0xe80>  // b.any
    fc78:	sub	x9, x9, #0x1
    fc7c:	nop
    fc80:	cbz	x9, f0a8 <mpfr_div@@Base+0x2c8>
    fc84:	ldr	x1, [x29, #184]
    fc88:	ldr	x0, [x29, #216]
    fc8c:	add	x0, x1, x0, lsl #3
    fc90:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    fc94:	cmp	x28, x1
    fc98:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    fc9c:	cinc	x28, x28, ne  // ne = any
    fca0:	stur	x1, [x0, #-8]
    fca4:	b	f0a8 <mpfr_div@@Base+0x2c8>
    fca8:	ldr	x0, [x29, #184]
    fcac:	add	x1, x26, #0x8
    fcb0:	cmp	x1, x0
    fcb4:	b.eq	fccc <mpfr_div@@Base+0xeec>  // b.none
    fcb8:	ldr	x2, [x29, #216]
    fcbc:	stp	x4, x9, [x29, #96]
    fcc0:	lsl	x2, x2, #3
    fcc4:	bl	ba10 <memcpy@plt>
    fcc8:	ldp	x4, x9, [x29, #96]
    fccc:	mov	x1, #0x0                   	// #0
    fcd0:	ldr	x0, [x26]
    fcd4:	mov	w3, #0x40                  	// #64
    fcd8:	mov	x5, x0
    fcdc:	b	f03c <mpfr_div@@Base+0x25c>
    fce0:	sub	x2, x4, x0
    fce4:	mov	x1, x24
    fce8:	ldr	x0, [x29, #168]
    fcec:	sub	x0, x0, x2
    fcf0:	stp	x6, x0, [x29, #160]
    fcf4:	mov	x0, x24
    fcf8:	bl	c200 <__gmpz_mul_2exp@plt>
    fcfc:	ldr	x6, [x29, #160]
    fd00:	b	f1e0 <mpfr_div@@Base+0x400>
    fd04:	and	x5, x1, #0xff
    fd08:	mov	x24, #0x0                   	// #0
    fd0c:	mov	x8, x5
    fd10:	b	f074 <mpfr_div@@Base+0x294>
    fd14:	mov	x0, x1
    fd18:	ldr	x1, [x29, #176]
    fd1c:	sub	x27, x0, x1
    fd20:	ldr	x1, [x29, #192]
    fd24:	add	x0, x26, x27, lsl #3
    fd28:	cmp	x0, x1
    fd2c:	b.eq	fd38 <mpfr_div@@Base+0xf58>  // b.none
    fd30:	mov	x2, x24
    fd34:	bl	ba10 <memcpy@plt>
    fd38:	lsl	x2, x27, #3
    fd3c:	mov	x0, x26
    fd40:	mov	w1, #0x0                   	// #0
    fd44:	bl	c110 <memset@plt>
    fd48:	b	f830 <mpfr_div@@Base+0xa50>
    fd4c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    fd50:	mov	w27, #0x0                   	// #0
    fd54:	str	x0, [x19, #16]
    fd58:	b	f128 <mpfr_div@@Base+0x348>
    fd5c:	str	wzr, [x29, #208]
    fd60:	b	f0a8 <mpfr_div@@Base+0x2c8>
    fd64:	lsl	x2, x27, #1
    fd68:	mov	x0, x21
    fd6c:	mov	w3, #0x1                   	// #1
    fd70:	bl	bce0 <__gmpn_rshift@plt>
    fd74:	cbnz	x0, f9a4 <mpfr_div@@Base+0xbc4>
    fd78:	ldr	x1, [x29, #192]
    fd7c:	b	f994 <mpfr_div@@Base+0xbb4>
    fd80:	cmp	x2, x1
    fd84:	cset	w0, cc  // cc = lo, ul, last
    fd88:	cset	x1, cc  // cc = lo, ul, last
    fd8c:	str	w0, [x29, #152]
    fd90:	b	eeec <mpfr_div@@Base+0x10c>
    fd94:	cbnz	w20, 105bc <mpfr_div@@Base+0x17dc>
    fd98:	cbz	x7, 105d0 <mpfr_div@@Base+0x17f0>
    fd9c:	ldr	x0, [x29, #184]
    fda0:	ldr	x0, [x0]
    fda4:	adds	x0, x0, #0x1
    fda8:	b.ne	10c20 <mpfr_div@@Base+0x1e40>  // b.any
    fdac:	ldr	x1, [x29, #184]
    fdb0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    fdb4:	str	x0, [x1]
    fdb8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    fdbc:	ldr	x1, [x0, #2544]
    fdc0:	add	x0, x0, #0x9f0
    fdc4:	blr	x1
    fdc8:	ldr	x1, [x29, #200]
    fdcc:	ldr	x0, [x1, x0]
    fdd0:	cmp	x4, x0
    fdd4:	b.ge	104ec <mpfr_div@@Base+0x170c>  // b.tcont
    fdd8:	add	x4, x4, #0x1
    fddc:	str	x4, [x19, #16]
    fde0:	b	f100 <mpfr_div@@Base+0x320>
    fde4:	mov	w0, #0x1                   	// #1
    fde8:	str	w0, [x29, #208]
    fdec:	b	f0a8 <mpfr_div@@Base+0x2c8>
    fdf0:	cmp	x1, x4
    fdf4:	b.eq	1018c <mpfr_div@@Base+0x13ac>  // b.none
    fdf8:	mov	w27, #0x0                   	// #0
    fdfc:	str	x4, [x19, #16]
    fe00:	b	f128 <mpfr_div@@Base+0x348>
    fe04:	ldr	x3, [x29, #200]
    fe08:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    fe0c:	ldr	x1, [x0, #2576]
    fe10:	add	x0, x0, #0xa10
    fe14:	blr	x1
    fe18:	mov	x11, #0xc000000000000001    	// #-4611686018427387903
    fe1c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    fe20:	add	x12, x3, x0
    fe24:	mov	w2, w20
    fe28:	ldr	w4, [x3, x0]
    fe2c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    fe30:	ldr	x1, [x0, #2512]
    fe34:	add	x0, x0, #0x9d0
    fe38:	blr	x1
    fe3c:	add	x10, x3, x0
    fe40:	stp	x6, x12, [x29, #96]
    fe44:	ldr	x8, [x3, x0]
    fe48:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
    fe4c:	ldr	x1, [x0, #2544]
    fe50:	add	x0, x0, #0x9f0
    fe54:	blr	x1
    fe58:	ldr	x7, [x3, x0]
    fe5c:	add	x21, x3, x0
    fe60:	mov	x1, x28
    fe64:	mov	x0, x19
    fe68:	str	x11, [x10]
    fe6c:	str	x9, [x21]
    fe70:	str	w4, [x29, #112]
    fe74:	str	x8, [x29, #120]
    fe78:	stp	x10, x7, [x29, #152]
    fe7c:	bl	c240 <mpfr_set_z@plt>
    fe80:	mov	x13, #0x4                   	// #4
    fe84:	ldp	x3, x10, [x29, #144]
    fe88:	movk	x13, #0x8000, lsl #48
    fe8c:	ldp	x7, x1, [x29, #160]
    fe90:	mov	x11, #0xc000000000000001    	// #-4611686018427387903
    fe94:	ldp	x6, x12, [x29, #96]
    fe98:	mov	w27, w0
    fe9c:	ldr	x2, [x19, #16]
    fea0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    fea4:	ldr	x8, [x29, #120]
    fea8:	cmp	x2, x13
    feac:	ccmp	x2, x11, #0x4, ge  // ge = tcont
    feb0:	ldr	w4, [x29, #112]
    feb4:	sub	x1, x1, x3
    feb8:	cset	w0, eq  // eq = none
    febc:	add	x1, x1, x2
    fec0:	cmp	x2, x9
    fec4:	str	x7, [x21]
    fec8:	csinc	w21, w0, wzr, ne  // ne = any
    fecc:	str	x8, [x10]
    fed0:	cmp	x8, x1
    fed4:	str	w4, [x12]
    fed8:	ccmp	x7, x1, #0x1, le
    fedc:	str	x1, [x19, #16]
    fee0:	b.ge	ff34 <mpfr_div@@Base+0x1154>  // b.tcont
    fee4:	mov	w1, w27
    fee8:	mov	w2, w20
    feec:	mov	x0, x19
    fef0:	str	x6, [x29, #168]
    fef4:	bl	cb30 <mpfr_check_range@plt>
    fef8:	mov	w27, w0
    fefc:	ldr	x6, [x29, #168]
    ff00:	mov	x0, x28
    ff04:	str	x6, [x29, #168]
    ff08:	bl	c170 <mpfr_mpz_clear@plt>
    ff0c:	mov	x0, x24
    ff10:	bl	c170 <mpfr_mpz_clear@plt>
    ff14:	ldr	x0, [x29, #208]
    ff18:	bl	c170 <mpfr_mpz_clear@plt>
    ff1c:	ldr	x6, [x29, #168]
    ff20:	cbz	w21, f128 <mpfr_div@@Base+0x348>
    ff24:	ldr	x21, [x19]
    ff28:	ldr	x28, [x6, #16]
    ff2c:	ldr	x4, [x25, #16]
    ff30:	b	ee9c <mpfr_div@@Base+0xbc>
    ff34:	cbz	w27, ff00 <mpfr_div@@Base+0x1120>
    ff38:	orr	w4, w4, #0x8
    ff3c:	str	w4, [x12]
    ff40:	b	ff00 <mpfr_div@@Base+0x1120>
    ff44:	lsl	x0, x21, #3
    ff48:	cmp	x0, #0x4, lsl #12
    ff4c:	b.hi	106d4 <mpfr_div@@Base+0x18f4>  // b.pmore
    ff50:	add	x0, x0, #0xf
    ff54:	and	x0, x0, #0xfffffffffffffff0
    ff58:	sub	sp, sp, x0
    ff5c:	mov	x3, sp
    ff60:	sub	x27, x21, x22
    ff64:	add	x0, x3, x27, lsl #3
    ff68:	cmp	x0, x23
    ff6c:	b.eq	ff84 <mpfr_div@@Base+0x11a4>  // b.none
    ff70:	ldr	x2, [x29, #120]
    ff74:	mov	x1, x23
    ff78:	str	x3, [x29, #144]
    ff7c:	bl	ba10 <memcpy@plt>
    ff80:	ldr	x3, [x29, #144]
    ff84:	mov	x0, x3
    ff88:	lsl	x2, x27, #3
    ff8c:	mov	w1, #0x0                   	// #0
    ff90:	bl	c110 <memset@plt>
    ff94:	mov	x3, x0
    ff98:	b	f848 <mpfr_div@@Base+0xa68>
    ff9c:	cbz	x0, f018 <mpfr_div@@Base+0x238>
    ffa0:	b	f004 <mpfr_div@@Base+0x224>
    ffa4:	ldr	w0, [x29, #208]
    ffa8:	cbz	w0, f568 <mpfr_div@@Base+0x788>
    ffac:	mov	w0, #0xffffffff            	// #-1
    ffb0:	str	w0, [x29, #208]
    ffb4:	b	f0a8 <mpfr_div@@Base+0x2c8>
    ffb8:	mov	x8, x5
    ffbc:	mov	x24, #0x0                   	// #0
    ffc0:	b	f9e8 <mpfr_div@@Base+0xc08>
    ffc4:	ldr	x9, [x23]
    ffc8:	adrp	x7, 5e000 <mpfr_free_pool@@Base+0x2558>
    ffcc:	add	x7, x7, #0x420
    ffd0:	mov	x0, #0x1000000000000000    	// #1152921504606846976
    ffd4:	add	x12, x7, #0x800
    ffd8:	sub	x2, x9, #0x1
    ffdc:	lsr	x10, x9, #55
    ffe0:	lsr	x11, x9, #24
    ffe4:	sub	x10, x10, #0x100
    ffe8:	lsr	x13, x2, #1
    ffec:	ldr	x8, [x1]
    fff0:	sbfx	x1, x9, #0, #1
    fff4:	ldr	x2, [x12, x10, lsl #3]
    fff8:	cmp	x8, x9
    fffc:	ldr	x7, [x7, x10, lsl #3]
   10000:	sub	x14, x8, x9
   10004:	madd	x2, x11, x2, x2
   10008:	csel	x8, x14, x8, cs  // cs = hs, nlast
   1000c:	sub	x7, x7, #0x1
   10010:	mov	x12, #0x40                  	// #64
   10014:	sub	x12, x12, x3
   10018:	cset	w10, cs  // cs = hs, nlast
   1001c:	sub	x2, x7, x2, lsr #40
   10020:	mov	x7, #0x1                   	// #1
   10024:	lsl	x3, x7, x12
   10028:	sub	x15, x3, #0x1
   1002c:	lsl	x14, x2, #13
   10030:	sub	x4, x4, x28
   10034:	madd	x11, x11, x2, x2
   10038:	sub	x0, x0, x11
   1003c:	lsr	x11, x15, #1
   10040:	mul	x0, x0, x2
   10044:	add	x0, x14, x0, lsr #47
   10048:	and	x1, x1, x0
   1004c:	madd	x2, x13, x0, x0
   10050:	lsr	x1, x1, #1
   10054:	sub	x1, x1, x2
   10058:	umulh	x1, x0, x1
   1005c:	lsr	x1, x1, #1
   10060:	add	x0, x1, x0, lsl #31
   10064:	umulh	x0, x8, x0
   10068:	add	x0, x0, x8
   1006c:	lsr	x2, x0, x10
   10070:	add	x1, x2, #0x2
   10074:	and	x1, x1, x11
   10078:	cmp	x1, #0x2
   1007c:	b.ls	10808 <mpfr_div@@Base+0x1a28>  // b.plast
   10080:	sub	w12, w12, #0x1
   10084:	mov	x1, x7
   10088:	and	x10, x10, #0xff
   1008c:	lsl	x7, x7, x12
   10090:	and	x7, x7, x2
   10094:	orr	x0, x2, #0x8000000000000000
   10098:	neg	x2, x3
   1009c:	and	x2, x0, x2
   100a0:	ldr	w5, [x6, #8]
   100a4:	ldr	x0, [x29, #184]
   100a8:	mrs	x6, tpidr_el0
   100ac:	ldr	w27, [x25, #8]
   100b0:	add	x4, x10, x4
   100b4:	str	x6, [x29, #200]
   100b8:	str	x2, [x0]
   100bc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   100c0:	ldr	x8, [x0, #2544]
   100c4:	add	x0, x0, #0x9f0
   100c8:	blr	x8
   100cc:	mul	w27, w27, w5
   100d0:	ldr	x0, [x6, x0]
   100d4:	str	w27, [x19, #8]
   100d8:	cmp	x4, x0
   100dc:	b.gt	104ec <mpfr_div@@Base+0x170c>
   100e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   100e4:	ldr	x5, [x0, #2512]
   100e8:	add	x0, x0, #0x9d0
   100ec:	blr	x5
   100f0:	ldr	x5, [x29, #200]
   100f4:	ldr	x0, [x5, x0]
   100f8:	cmp	x4, x0
   100fc:	b.lt	10cd4 <mpfr_div@@Base+0x1ef4>  // b.tstop
   10100:	orr	x1, x1, x7
   10104:	str	x4, [x19, #16]
   10108:	cmp	x1, #0x0
   1010c:	ccmp	w20, #0x5, #0x4, ne  // ne = any
   10110:	b.eq	f418 <mpfr_div@@Base+0x638>  // b.none
   10114:	cbnz	w20, 106e8 <mpfr_div@@Base+0x1908>
   10118:	cbz	x7, 105d0 <mpfr_div@@Base+0x17f0>
   1011c:	ldr	x0, [x29, #184]
   10120:	ldr	x0, [x0]
   10124:	adds	x3, x3, x0
   10128:	b.eq	fdac <mpfr_div@@Base+0xfcc>  // b.none
   1012c:	ldr	x0, [x29, #184]
   10130:	str	x3, [x0]
   10134:	b	f100 <mpfr_div@@Base+0x320>
   10138:	cmp	w20, #0x2
   1013c:	mov	w3, #0x3                   	// #3
   10140:	b.eq	10150 <mpfr_div@@Base+0x1370>  // b.none
   10144:	cmp	w20, w3
   10148:	mov	w3, #0x2                   	// #2
   1014c:	csel	w3, w20, w3, ne  // ne = any
   10150:	mov	x1, x25
   10154:	mov	x0, x19
   10158:	bl	cc60 <mpfr_div_ui@plt>
   1015c:	neg	w27, w0
   10160:	ldr	w1, [x19, #8]
   10164:	neg	w1, w1
   10168:	str	w1, [x19, #8]
   1016c:	b	f488 <mpfr_div@@Base+0x6a8>
   10170:	add	x0, x29, #0x100
   10174:	bl	bdc0 <mpfr_tmp_allocate@plt>
   10178:	mov	x4, x0
   1017c:	b	f650 <mpfr_div@@Base+0x870>
   10180:	ldr	x0, [x27]
   10184:	lsr	x0, x0, #63
   10188:	b	f90c <mpfr_div@@Base+0xb2c>
   1018c:	mrs	x1, tpidr_el0
   10190:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   10194:	ldr	x2, [x0, #2576]
   10198:	add	x0, x0, #0xa10
   1019c:	blr	x2
   101a0:	add	x0, x1, x0
   101a4:	mov	w27, #0x0                   	// #0
   101a8:	str	x3, [x19, #16]
   101ac:	ldr	w1, [x0]
   101b0:	orr	w1, w1, #0x4
   101b4:	str	w1, [x0]
   101b8:	b	f128 <mpfr_div@@Base+0x348>
   101bc:	mov	w3, w0
   101c0:	mov	x1, x27
   101c4:	mov	x2, x21
   101c8:	mov	x0, x27
   101cc:	bl	bce0 <__gmpn_rshift@plt>
   101d0:	lsl	x0, x21, #3
   101d4:	sub	x1, x0, #0x8
   101d8:	ldr	x0, [x27, x1]
   101dc:	orr	x0, x0, #0x8000000000000000
   101e0:	str	x0, [x27, x1]
   101e4:	b	f89c <mpfr_div@@Base+0xabc>
   101e8:	mov	x1, #0x1                   	// #1
   101ec:	str	w1, [x29, #152]
   101f0:	b	eeec <mpfr_div@@Base+0x10c>
   101f4:	mov	x0, x6
   101f8:	mov	x4, x27
   101fc:	mov	x3, x26
   10200:	mov	x2, x22
   10204:	mov	x1, x23
   10208:	str	x6, [x29, #120]
   1020c:	bl	c7a0 <__gmpn_mul@plt>
   10210:	ldp	x5, x8, [x29, #96]
   10214:	ldp	x9, x6, [x29, #112]
   10218:	b	fa48 <mpfr_div@@Base+0xc68>
   1021c:	add	x1, x6, x27, lsl #3
   10220:	mov	x3, x22
   10224:	mov	x0, x1
   10228:	mov	x2, x23
   1022c:	stp	x5, x8, [x29, #96]
   10230:	stp	x9, x6, [x29, #112]
   10234:	bl	c5a0 <__gmpn_add_n@plt>
   10238:	ldp	x5, x8, [x29, #96]
   1023c:	ldr	x1, [x26]
   10240:	ldp	x9, x6, [x29, #112]
   10244:	eor	x1, x1, x5
   10248:	str	x1, [x26]
   1024c:	cbz	x0, fa58 <mpfr_div@@Base+0xc78>
   10250:	cbnz	w20, 10640 <mpfr_div@@Base+0x1860>
   10254:	cmp	w25, #0x1
   10258:	b.ne	10720 <mpfr_div@@Base+0x1940>  // b.any
   1025c:	cbz	x24, 10750 <mpfr_div@@Base+0x1970>
   10260:	str	w25, [x29, #208]
   10264:	b	fc80 <mpfr_div@@Base+0xea0>
   10268:	orr	w0, w0, #0x4
   1026c:	mov	w27, #0x0                   	// #0
   10270:	str	w0, [x4]
   10274:	str	x3, [x19, #16]
   10278:	b	f128 <mpfr_div@@Base+0x348>
   1027c:	ldr	x0, [x29, #192]
   10280:	mov	x9, #0x80                  	// #128
   10284:	ldp	x11, x7, [x23]
   10288:	sub	x9, x9, x3
   1028c:	ldp	x10, x2, [x0]
   10290:	mov	x8, #0x1                   	// #1
   10294:	lsl	x8, x8, x9
   10298:	sub	x4, x4, x28
   1029c:	sub	x3, x8, #0x1
   102a0:	cmp	x7, x2
   102a4:	b.cc	102b4 <mpfr_div@@Base+0x14d4>  // b.lo, b.ul, b.last
   102a8:	ccmp	x11, x10, #0x2, eq  // eq = none
   102ac:	mov	w12, #0x0                   	// #0
   102b0:	b.hi	102c4 <mpfr_div@@Base+0x14e4>  // b.pmore
   102b4:	subs	x0, x10, x11
   102b8:	sbc	x2, x2, x7
   102bc:	mov	x10, x0
   102c0:	mov	w12, #0x1                   	// #1
   102c4:	cmn	x7, #0x1
   102c8:	b.eq	10a58 <mpfr_div@@Base+0x1c78>  // b.none
   102cc:	add	x0, x7, #0x1
   102d0:	adrp	x15, 5e000 <mpfr_free_pool@@Base+0x2558>
   102d4:	add	x15, x15, #0x420
   102d8:	mov	x1, #0x1000000000000000    	// #1152921504606846976
   102dc:	lsr	x16, x0, #55
   102e0:	add	x13, x15, #0x800
   102e4:	sub	x16, x16, #0x100
   102e8:	lsr	x14, x0, #24
   102ec:	lsr	x17, x7, #1
   102f0:	sbfx	x0, x0, #0, #1
   102f4:	ldr	x13, [x13, x16, lsl #3]
   102f8:	ldr	x15, [x15, x16, lsl #3]
   102fc:	madd	x13, x14, x13, x13
   10300:	sub	x15, x15, #0x1
   10304:	sub	x13, x15, x13, lsr #40
   10308:	lsl	x15, x13, #13
   1030c:	madd	x14, x14, x13, x13
   10310:	sub	x1, x1, x14
   10314:	mul	x1, x1, x13
   10318:	add	x1, x15, x1, lsr #47
   1031c:	and	x0, x0, x1
   10320:	madd	x13, x17, x1, x1
   10324:	lsr	x0, x0, #1
   10328:	sub	x0, x0, x13
   1032c:	umulh	x0, x1, x0
   10330:	lsr	x0, x0, #1
   10334:	add	x0, x0, x1, lsl #31
   10338:	umulh	x1, x2, x0
   1033c:	add	x1, x2, x1
   10340:	umulh	x15, x1, x7
   10344:	sub	x2, x2, x15
   10348:	mul	x13, x7, x1
   1034c:	mul	x15, x11, x1
   10350:	umulh	x14, x1, x11
   10354:	adds	x13, x13, x14
   10358:	cset	x16, cs  // cs = hs, nlast
   1035c:	cmp	x15, #0x0
   10360:	cinc	x14, x13, ne  // ne = any
   10364:	cset	w17, ne  // ne = any
   10368:	subs	x13, x10, x14
   1036c:	cmp	x10, x14
   10370:	cset	x15, cc  // cc = lo, ul, last
   10374:	cmp	x14, #0x0
   10378:	ccmp	w17, #0x0, #0x4, eq  // eq = none
   1037c:	cinc	x14, x15, ne  // ne = any
   10380:	sub	x2, x2, x14
   10384:	sub	x2, x2, x16
   10388:	umulh	x14, x13, x0
   1038c:	adds	x14, x13, x14
   10390:	adc	x1, x1, x2
   10394:	mov	x13, x14
   10398:	cbz	x2, 103d8 <mpfr_div@@Base+0x15f8>
   1039c:	adds	x13, x0, x14
   103a0:	cinc	x1, x1, cs  // cs = hs, nlast
   103a4:	subs	x15, x2, #0x1
   103a8:	b.eq	103d4 <mpfr_div@@Base+0x15f4>  // b.none
   103ac:	adds	x14, x0, x13
   103b0:	cinc	x1, x1, cs  // cs = hs, nlast
   103b4:	subs	x2, x2, #0x2
   103b8:	b.eq	103d4 <mpfr_div@@Base+0x15f4>  // b.none
   103bc:	adds	x14, x0, x14
   103c0:	cinc	x1, x1, cs  // cs = hs, nlast
   103c4:	cmp	x2, #0x1
   103c8:	b.eq	103d4 <mpfr_div@@Base+0x15f4>  // b.none
   103cc:	cmn	x0, x14
   103d0:	cinc	x1, x1, cs  // cs = hs, nlast
   103d4:	madd	x13, x0, x15, x13
   103d8:	add	x0, x13, #0x15
   103dc:	mov	x2, #0x1                   	// #1
   103e0:	and	x0, x0, x3, lsr #1
   103e4:	cmp	x0, #0x15
   103e8:	b.ls	10504 <mpfr_div@@Base+0x1724>  // b.plast
   103ec:	cbz	w12, 10408 <mpfr_div@@Base+0x1628>
   103f0:	and	x7, x13, #0x1
   103f4:	lsr	x0, x1, #1
   103f8:	add	x4, x4, #0x1
   103fc:	extr	x13, x1, x13, #1
   10400:	orr	x2, x2, x7
   10404:	orr	x1, x0, #0x8000000000000000
   10408:	ldr	x12, [x29, #184]
   1040c:	neg	x0, x8
   10410:	ldr	w10, [x6, #8]
   10414:	mrs	x11, tpidr_el0
   10418:	ldr	w27, [x25, #8]
   1041c:	and	x6, x0, x13
   10420:	stp	x6, x1, [x12]
   10424:	sub	w5, w9, #0x1
   10428:	mov	x7, #0x1                   	// #1
   1042c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   10430:	ldr	x9, [x0, #2544]
   10434:	add	x0, x0, #0x9f0
   10438:	blr	x9
   1043c:	lsl	x5, x7, x5
   10440:	mul	w27, w27, w10
   10444:	str	x11, [x29, #200]
   10448:	ldr	x9, [x11, x0]
   1044c:	eor	x0, x3, x5
   10450:	str	w27, [x19, #8]
   10454:	and	x0, x0, x13
   10458:	orr	x2, x0, x2
   1045c:	and	x5, x5, x13
   10460:	cmp	x9, x4
   10464:	b.lt	104ec <mpfr_div@@Base+0x170c>  // b.tstop
   10468:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1046c:	ldr	x3, [x0, #2512]
   10470:	add	x0, x0, #0x9d0
   10474:	blr	x3
   10478:	ldr	x3, [x29, #200]
   1047c:	ldr	x0, [x3, x0]
   10480:	cmp	x4, x0
   10484:	b.lt	10ca8 <mpfr_div@@Base+0x1ec8>  // b.tstop
   10488:	orr	x2, x5, x2
   1048c:	str	x4, [x19, #16]
   10490:	cmp	x2, #0x0
   10494:	ccmp	w20, #0x5, #0x4, ne  // ne = any
   10498:	b.eq	f418 <mpfr_div@@Base+0x638>  // b.none
   1049c:	cbnz	w20, 107c8 <mpfr_div@@Base+0x19e8>
   104a0:	cbz	x5, 105d0 <mpfr_div@@Base+0x17f0>
   104a4:	ldr	x2, [x29, #184]
   104a8:	ldp	x1, x0, [x2]
   104ac:	add	x8, x8, x1
   104b0:	str	x8, [x2]
   104b4:	cmp	x8, #0x0
   104b8:	cinc	x0, x0, eq  // eq = none
   104bc:	cbnz	x0, 10a48 <mpfr_div@@Base+0x1c68>
   104c0:	ldr	x2, [x29, #200]
   104c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   104c8:	ldr	x1, [x0, #2544]
   104cc:	add	x0, x0, #0x9f0
   104d0:	blr	x1
   104d4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   104d8:	ldr	x0, [x2, x0]
   104dc:	ldr	x2, [x29, #184]
   104e0:	cmp	x4, x0
   104e4:	str	x1, [x2, #8]
   104e8:	b.lt	fdd8 <mpfr_div@@Base+0xff8>  // b.tstop
   104ec:	mov	w2, w27
   104f0:	mov	w1, w20
   104f4:	mov	x0, x19
   104f8:	bl	bf40 <mpfr_overflow@plt>
   104fc:	mov	w27, w0
   10500:	b	f128 <mpfr_div@@Base+0x348>
   10504:	mul	x15, x13, x7
   10508:	add	x14, x13, x2
   1050c:	mul	x2, x1, x11
   10510:	umulh	x0, x13, x11
   10514:	adds	x0, x0, x15
   10518:	mneg	x15, x11, x13
   1051c:	cset	x16, cs  // cs = hs, nlast
   10520:	adds	x0, x0, x2
   10524:	cinc	x16, x16, cs  // cs = hs, nlast
   10528:	cmp	x15, #0x0
   1052c:	cinc	x0, x0, ne  // ne = any
   10530:	msub	x2, x1, x7, x10
   10534:	neg	x0, x0
   10538:	umulh	x10, x13, x7
   1053c:	umulh	x13, x1, x11
   10540:	add	x10, x10, x13
   10544:	orr	x13, x15, x0
   10548:	sub	x2, x2, x10
   1054c:	cmp	x13, #0x0
   10550:	sub	x2, x2, x16
   10554:	cset	x10, ne  // ne = any
   10558:	sub	x2, x2, x10
   1055c:	b	1058c <mpfr_div@@Base+0x17ac>
   10560:	cmp	x7, x0
   10564:	mov	x5, #0x0                   	// #0
   10568:	ccmp	x11, x15, #0x2, eq  // eq = none
   1056c:	b.hi	10a50 <mpfr_div@@Base+0x1c70>  // b.pmore
   10570:	cmp	x14, #0x0
   10574:	cinc	x1, x1, eq  // eq = none
   10578:	subs	x10, x15, x11
   1057c:	sbc	x0, x0, x7
   10580:	sub	x2, x2, x5
   10584:	mov	x15, x10
   10588:	add	x14, x14, #0x1
   1058c:	cmp	x2, #0x0
   10590:	sub	x13, x14, #0x1
   10594:	ccmp	x7, x0, #0x0, eq  // eq = none
   10598:	b.cs	10560 <mpfr_div@@Base+0x1780>  // b.hs, b.nlast
   1059c:	cmp	x14, #0x0
   105a0:	mov	x5, #0x1                   	// #1
   105a4:	cinc	x1, x1, eq  // eq = none
   105a8:	cmp	x7, x0
   105ac:	b.hi	10578 <mpfr_div@@Base+0x1798>  // b.pmore
   105b0:	ccmp	x11, x15, #0x0, eq  // eq = none
   105b4:	cset	x5, hi  // hi = pmore
   105b8:	b	10578 <mpfr_div@@Base+0x1798>
   105bc:	cmp	w20, #0x1
   105c0:	b.eq	105d0 <mpfr_div@@Base+0x17f0>  // b.none
   105c4:	add	w0, w20, w27, lsr #31
   105c8:	cmp	w0, #0x3
   105cc:	b.ne	fd9c <mpfr_div@@Base+0xfbc>  // b.any
   105d0:	cbz	w27, f418 <mpfr_div@@Base+0x638>
   105d4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   105d8:	ldr	x1, [x0, #2576]
   105dc:	add	x0, x0, #0xa10
   105e0:	blr	x1
   105e4:	neg	w27, w27
   105e8:	ldr	x1, [x29, #200]
   105ec:	add	x0, x1, x0
   105f0:	ldr	w1, [x0]
   105f4:	orr	w1, w1, #0x8
   105f8:	str	w1, [x0]
   105fc:	b	f128 <mpfr_div@@Base+0x348>
   10600:	mov	x1, x27
   10604:	add	x0, x29, #0x100
   10608:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1060c:	mov	x26, x0
   10610:	b	f7fc <mpfr_div@@Base+0xa1c>
   10614:	lsl	x1, x21, #3
   10618:	add	x0, x29, #0x100
   1061c:	str	x3, [x29, #144]
   10620:	bl	bdc0 <mpfr_tmp_allocate@plt>
   10624:	mov	x27, x0
   10628:	ldr	x3, [x29, #144]
   1062c:	b	f864 <mpfr_div@@Base+0xa84>
   10630:	add	x0, x29, #0x100
   10634:	bl	bdc0 <mpfr_tmp_allocate@plt>
   10638:	mov	x26, x0
   1063c:	b	ef44 <mpfr_div@@Base+0x164>
   10640:	ldr	w0, [x29, #208]
   10644:	cbz	w0, 107ac <mpfr_div@@Base+0x19cc>
   10648:	ldr	x0, [x29, #184]
   1064c:	ldr	x2, [x0]
   10650:	cbz	w25, 10758 <mpfr_div@@Base+0x1978>
   10654:	mov	x1, #0x1                   	// #1
   10658:	mov	x0, x2
   1065c:	lsl	x1, x1, x25
   10660:	mov	w2, #0xffffffff            	// #-1
   10664:	str	w2, [x29, #208]
   10668:	b	fc3c <mpfr_div@@Base+0xe5c>
   1066c:	b.hi	10250 <mpfr_div@@Base+0x1470>  // b.pmore
   10670:	cmp	x8, #0x1
   10674:	b.eq	f5d4 <mpfr_div@@Base+0x7f4>  // b.none
   10678:	cbnz	x24, ffac <mpfr_div@@Base+0x11cc>
   1067c:	ldr	w0, [x29, #208]
   10680:	mov	w1, #0x1                   	// #1
   10684:	str	w1, [x29, #208]
   10688:	cmp	w20, #0x0
   1068c:	eor	w0, w0, #0x1
   10690:	and	w0, w0, #0x1
   10694:	csel	w0, w0, w1, ne  // ne = any
   10698:	cbnz	w0, fc80 <mpfr_div@@Base+0xea0>
   1069c:	mov	w0, #0xffffffff            	// #-1
   106a0:	str	w0, [x29, #208]
   106a4:	ldr	x0, [x29, #184]
   106a8:	mov	x1, #0x1                   	// #1
   106ac:	lsl	x1, x1, x25
   106b0:	ldr	x0, [x0]
   106b4:	b	fc3c <mpfr_div@@Base+0xe5c>
   106b8:	lsr	x2, x0, #1
   106bc:	and	x7, x0, #0x1
   106c0:	ldr	x0, [x29, #184]
   106c4:	orr	x2, x2, #0x8000000000000000
   106c8:	add	x4, x4, #0x1
   106cc:	str	x2, [x0]
   106d0:	b	f3b0 <mpfr_div@@Base+0x5d0>
   106d4:	lsl	x1, x21, #3
   106d8:	add	x0, x29, #0x100
   106dc:	bl	bdc0 <mpfr_tmp_allocate@plt>
   106e0:	mov	x3, x0
   106e4:	b	ff60 <mpfr_div@@Base+0x1180>
   106e8:	cmp	w20, #0x1
   106ec:	b.eq	105d0 <mpfr_div@@Base+0x17f0>  // b.none
   106f0:	add	w0, w20, w27, lsr #31
   106f4:	cmp	w0, #0x3
   106f8:	b.ne	1011c <mpfr_div@@Base+0x133c>  // b.any
   106fc:	b	105d0 <mpfr_div@@Base+0x17f0>
   10700:	str	xzr, [x29, #160]
   10704:	b	efb0 <mpfr_div@@Base+0x1d0>
   10708:	mov	x0, x22
   1070c:	cbz	x0, f074 <mpfr_div@@Base+0x294>
   10710:	sub	x0, x0, #0x1
   10714:	ldr	x2, [x6, x0, lsl #3]
   10718:	cbnz	x2, fae8 <mpfr_div@@Base+0xd08>
   1071c:	b	1070c <mpfr_div@@Base+0x192c>
   10720:	cmp	x24, #0x0
   10724:	mov	w0, #0xffffffff            	// #-1
   10728:	cneg	w0, w0, eq  // eq = none
   1072c:	str	w0, [x29, #208]
   10730:	b	fc80 <mpfr_div@@Base+0xea0>
   10734:	ldr	w0, [x29, #152]
   10738:	cbnz	w0, 10870 <mpfr_div@@Base+0x1a90>
   1073c:	b.ne	10914 <mpfr_div@@Base+0x1b34>  // b.any
   10740:	mov	w26, #0x0                   	// #0
   10744:	mov	x2, #0x0                   	// #0
   10748:	ldr	x5, [x29, #192]
   1074c:	b	fb3c <mpfr_div@@Base+0xd5c>
   10750:	ldr	x0, [x29, #184]
   10754:	ldr	x2, [x0]
   10758:	sub	x0, x2, #0x1
   1075c:	ldr	x1, [x29, #184]
   10760:	str	x0, [x1]
   10764:	cbnz	x2, 1079c <mpfr_div@@Base+0x19bc>
   10768:	ldr	x2, [x29, #136]
   1076c:	mov	x0, x1
   10770:	add	x3, x1, x2, lsl #3
   10774:	b	10788 <mpfr_div@@Base+0x19a8>
   10778:	ldr	x1, [x0, #8]
   1077c:	sub	x2, x1, #0x1
   10780:	str	x2, [x0, #8]!
   10784:	cbnz	x1, 10a6c <mpfr_div@@Base+0x1c8c>
   10788:	cmp	x0, x3
   1078c:	b.ne	10778 <mpfr_div@@Base+0x1998>  // b.any
   10790:	ldr	x0, [x29, #184]
   10794:	sub	x9, x9, #0x1
   10798:	ldr	x0, [x0]
   1079c:	mov	w2, #0xffffffff            	// #-1
   107a0:	mov	x1, #0x1                   	// #1
   107a4:	str	w2, [x29, #208]
   107a8:	b	fc3c <mpfr_div@@Base+0xe5c>
   107ac:	mov	w0, #0x1                   	// #1
   107b0:	str	w0, [x29, #208]
   107b4:	cbnz	w25, fc80 <mpfr_div@@Base+0xea0>
   107b8:	ldr	x0, [x29, #184]
   107bc:	mov	x1, #0x1                   	// #1
   107c0:	ldr	x0, [x0]
   107c4:	b	fc3c <mpfr_div@@Base+0xe5c>
   107c8:	cmp	w20, #0x1
   107cc:	b.eq	105d0 <mpfr_div@@Base+0x17f0>  // b.none
   107d0:	add	w0, w20, w27, lsr #31
   107d4:	cmp	w0, #0x3
   107d8:	b.ne	104a4 <mpfr_div@@Base+0x16c4>  // b.any
   107dc:	b	105d0 <mpfr_div@@Base+0x17f0>
   107e0:	add	x0, x29, #0x100
   107e4:	stp	x5, x8, [x29, #96]
   107e8:	str	x9, [x29, #112]
   107ec:	bl	bdc0 <mpfr_tmp_allocate@plt>
   107f0:	ldp	x5, x8, [x29, #96]
   107f4:	mov	x6, x0
   107f8:	ldr	x1, [x26]
   107fc:	ldr	x9, [x29, #112]
   10800:	eor	x0, x5, x1
   10804:	b	fa0c <mpfr_div@@Base+0xc2c>
   10808:	mul	x13, x9, x0
   1080c:	umulh	x1, x0, x9
   10810:	negs	x7, x13
   10814:	sbc	x1, x8, x1
   10818:	cmp	x1, #0x0
   1081c:	mov	x8, x7
   10820:	ccmp	x9, x7, #0x0, eq  // eq = none
   10824:	b.hi	10848 <mpfr_div@@Base+0x1a68>  // b.pmore
   10828:	cmp	x9, x8
   1082c:	sub	x8, x8, x9
   10830:	cset	x2, hi  // hi = pmore
   10834:	add	x0, x0, #0x1
   10838:	subs	x1, x1, x2
   1083c:	ccmp	x9, x8, #0x0, eq  // eq = none
   10840:	b.ls	10828 <mpfr_div@@Base+0x1a48>  // b.plast
   10844:	lsr	x2, x0, x10
   10848:	and	x10, x10, #0xff
   1084c:	sub	w12, w12, #0x1
   10850:	and	x1, x10, x0
   10854:	and	x11, x11, x2
   10858:	orr	x1, x1, x11
   1085c:	mov	x7, #0x1                   	// #1
   10860:	lsl	x7, x7, x12
   10864:	orr	x1, x1, x8
   10868:	and	x7, x7, x2
   1086c:	b	10094 <mpfr_div@@Base+0x12b4>
   10870:	ldr	x0, [x29, #192]
   10874:	cmp	x22, x7
   10878:	ldr	x2, [x0]
   1087c:	and	x2, x2, #0x1
   10880:	b.eq	10c70 <mpfr_div@@Base+0x1e90>  // b.none
   10884:	sub	x0, x22, x7
   10888:	lsl	x0, x0, #3
   1088c:	add	x4, x6, x0
   10890:	cbz	x2, 1091c <mpfr_div@@Base+0x1b3c>
   10894:	sub	x0, x0, #0x8
   10898:	mov	x5, #0x8000000000000000    	// #-9223372036854775808
   1089c:	ldr	x3, [x6, x0]
   108a0:	mvn	x2, x3
   108a4:	add	x3, x3, x5
   108a8:	str	x3, [x6, x0]
   108ac:	lsr	x2, x2, #63
   108b0:	cbz	x7, 1090c <mpfr_div@@Base+0x1b2c>
   108b4:	ldr	w0, [x29, #152]
   108b8:	lsl	x7, x7, #3
   108bc:	cbnz	w0, 10994 <mpfr_div@@Base+0x1bb4>
   108c0:	ldr	x12, [x29, #160]
   108c4:	mov	x0, #0x0                   	// #0
   108c8:	ldr	x11, [x29, #192]
   108cc:	nop
   108d0:	and	w10, w2, #0x1
   108d4:	ldr	x5, [x4, x0]
   108d8:	ldr	x3, [x11, x0]
   108dc:	sub	x2, x5, x2
   108e0:	cmp	x5, x3
   108e4:	sub	x3, x2, x3
   108e8:	mov	x2, x12
   108ec:	b.cc	108fc <mpfr_div@@Base+0x1b1c>  // b.lo, b.ul, b.last
   108f0:	cmn	x3, #0x1
   108f4:	csel	w2, w10, wzr, eq  // eq = none
   108f8:	and	x2, x2, #0xff
   108fc:	str	x3, [x4, x0]
   10900:	add	x0, x0, #0x8
   10904:	cmp	x7, x0
   10908:	b.ne	108d0 <mpfr_div@@Base+0x1af0>  // b.any
   1090c:	mov	w26, #0x0                   	// #0
   10910:	b	fb8c <mpfr_div@@Base+0xdac>
   10914:	sub	x22, x22, x7
   10918:	add	x4, x6, x22, lsl #3
   1091c:	mov	x2, #0x0                   	// #0
   10920:	b	108b0 <mpfr_div@@Base+0x1ad0>
   10924:	sub	x0, x0, x22
   10928:	cmp	x0, #0x0
   1092c:	cset	w13, gt
   10930:	cbz	x22, 10c38 <mpfr_div@@Base+0x1e58>
   10934:	ldr	w2, [x29, #152]
   10938:	cbnz	w2, 10b24 <mpfr_div@@Base+0x1d44>
   1093c:	ldr	x2, [x29, #192]
   10940:	mov	x3, x22
   10944:	add	x11, x2, x0, lsl #3
   10948:	b	10958 <mpfr_div@@Base+0x1b78>
   1094c:	cmp	x3, #0x0
   10950:	ccmp	x10, x2, #0x0, gt
   10954:	b.ne	10b64 <mpfr_div@@Base+0x1d84>  // b.any
   10958:	sub	x3, x3, #0x1
   1095c:	ldr	x2, [x11, x3, lsl #3]
   10960:	ldr	x10, [x6, x3, lsl #3]
   10964:	cmp	x10, x2
   10968:	b.hi	fae8 <mpfr_div@@Base+0xd08>  // b.pmore
   1096c:	b	1094c <mpfr_div@@Base+0x1b6c>
   10970:	ldr	x2, [x29, #192]
   10974:	lsl	x3, x0, #3
   10978:	mov	w26, #0x1                   	// #1
   1097c:	add	x5, x2, x3
   10980:	ldr	x10, [x2, x0, lsl #3]
   10984:	and	x2, x10, #0x1
   10988:	tbnz	w10, #0, fb3c <mpfr_div@@Base+0xd5c>
   1098c:	ldr	x5, [x29, #192]
   10990:	b	fb1c <mpfr_div@@Base+0xd3c>
   10994:	ldr	x13, [x29, #192]
   10998:	mov	x0, #0x0                   	// #0
   1099c:	ldr	x14, [x29, #160]
   109a0:	add	x10, x13, #0x8
   109a4:	nop
   109a8:	ldr	x3, [x10, x0]
   109ac:	and	w11, w2, #0x1
   109b0:	ldr	x12, [x13, x0]
   109b4:	ldr	x5, [x4, x0]
   109b8:	extr	x3, x3, x12, #1
   109bc:	sub	x2, x5, x2
   109c0:	cmp	x5, x3
   109c4:	sub	x3, x2, x3
   109c8:	mov	x2, x14
   109cc:	b.cc	109dc <mpfr_div@@Base+0x1bfc>  // b.lo, b.ul, b.last
   109d0:	cmn	x3, #0x1
   109d4:	csel	w2, w11, wzr, eq  // eq = none
   109d8:	and	x2, x2, #0xff
   109dc:	str	x3, [x4, x0]
   109e0:	add	x0, x0, #0x8
   109e4:	cmp	x0, x7
   109e8:	b.ne	109a8 <mpfr_div@@Base+0x1bc8>  // b.any
   109ec:	mov	w26, #0x0                   	// #0
   109f0:	b	fb8c <mpfr_div@@Base+0xdac>
   109f4:	ldr	x12, [x29, #160]
   109f8:	add	x13, x5, #0x8
   109fc:	mov	x0, #0x0                   	// #0
   10a00:	ldr	x3, [x13, x0]
   10a04:	and	w10, w2, #0x1
   10a08:	ldr	x11, [x5, x0]
   10a0c:	ldr	x7, [x6, x0]
   10a10:	extr	x3, x3, x11, #1
   10a14:	sub	x2, x7, x2
   10a18:	cmp	x7, x3
   10a1c:	sub	x3, x2, x3
   10a20:	mov	x2, x12
   10a24:	b.cc	10a34 <mpfr_div@@Base+0x1c54>  // b.lo, b.ul, b.last
   10a28:	cmn	x3, #0x1
   10a2c:	csel	w2, w10, wzr, eq  // eq = none
   10a30:	and	x2, x2, #0xff
   10a34:	str	x3, [x6, x0]
   10a38:	add	x0, x0, #0x8
   10a3c:	cmp	x4, x0
   10a40:	b.ne	10a00 <mpfr_div@@Base+0x1c20>  // b.any
   10a44:	b	fb8c <mpfr_div@@Base+0xdac>
   10a48:	str	x0, [x2, #8]
   10a4c:	b	f100 <mpfr_div@@Base+0x320>
   10a50:	orr	x2, x0, x15
   10a54:	b	103ec <mpfr_div@@Base+0x160c>
   10a58:	mov	x0, #0x0                   	// #0
   10a5c:	b	10338 <mpfr_div@@Base+0x1558>
   10a60:	mov	x2, x0
   10a64:	mov	x7, #0x0                   	// #0
   10a68:	b	f3b0 <mpfr_div@@Base+0x5d0>
   10a6c:	ldr	x0, [x29, #184]
   10a70:	ldr	x0, [x0]
   10a74:	b	1079c <mpfr_div@@Base+0x19bc>
   10a78:	ldr	x12, [x29, #192]
   10a7c:	add	x14, x6, x3, lsl #3
   10a80:	add	x10, x12, #0x8
   10a84:	sub	x0, x0, #0x1
   10a88:	ldr	x2, [x10, x0, lsl #3]
   10a8c:	ldr	x7, [x12, x0, lsl #3]
   10a90:	ldr	x11, [x14, x0, lsl #3]
   10a94:	extr	x2, x2, x7, #1
   10a98:	cmp	x2, x11
   10a9c:	b.cs	10ad0 <mpfr_div@@Base+0x1cf0>  // b.hs, b.nlast
   10aa0:	ldr	x0, [x29, #192]
   10aa4:	mov	w2, #0x0                   	// #0
   10aa8:	ldr	w12, [x29, #152]
   10aac:	ldr	x0, [x0]
   10ab0:	lsl	x0, x0, #63
   10ab4:	cmp	x0, #0x0
   10ab8:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   10abc:	b.ne	f5d4 <mpfr_div@@Base+0x7f4>  // b.any
   10ac0:	cmp	w12, #0x1
   10ac4:	b.eq	fae8 <mpfr_div@@Base+0xd08>  // b.none
   10ac8:	cbz	w12, f074 <mpfr_div@@Base+0x294>
   10acc:	b	f5d4 <mpfr_div@@Base+0x7f4>
   10ad0:	cmp	x0, #0x0
   10ad4:	ccmp	x2, x11, #0x0, gt
   10ad8:	b.eq	10a84 <mpfr_div@@Base+0x1ca4>  // b.none
   10adc:	cmp	x11, x2
   10ae0:	cset	w2, cs  // cs = hs, nlast
   10ae4:	csetm	w12, cc  // cc = lo, ul, last
   10ae8:	and	w13, w13, w2
   10aec:	ldr	w0, [x29, #152]
   10af0:	cbnz	w0, 10c00 <mpfr_div@@Base+0x1e20>
   10af4:	mov	x0, #0x0                   	// #0
   10af8:	cbnz	w13, 10b10 <mpfr_div@@Base+0x1d30>
   10afc:	b	10ac8 <mpfr_div@@Base+0x1ce8>
   10b00:	cmp	x3, #0x0
   10b04:	ccmp	x0, x2, #0x0, gt
   10b08:	b.ne	10c44 <mpfr_div@@Base+0x1e64>  // b.any
   10b0c:	mov	x0, #0x0                   	// #0
   10b10:	sub	x3, x3, #0x1
   10b14:	ldr	x2, [x6, x3, lsl #3]
   10b18:	cmp	x0, x2
   10b1c:	b.cc	fae8 <mpfr_div@@Base+0xd08>  // b.lo, b.ul, b.last
   10b20:	b	10b00 <mpfr_div@@Base+0x1d20>
   10b24:	ldr	x2, [x29, #192]
   10b28:	mov	x3, x22
   10b2c:	add	x12, x2, x0, lsl #3
   10b30:	add	x14, x12, #0x8
   10b34:	sub	x3, x3, #0x1
   10b38:	ldr	x2, [x14, x3, lsl #3]
   10b3c:	ldr	x7, [x12, x3, lsl #3]
   10b40:	ldr	x10, [x6, x3, lsl #3]
   10b44:	extr	x2, x2, x7, #1
   10b48:	cmp	x2, x10
   10b4c:	b.cs	10b58 <mpfr_div@@Base+0x1d78>  // b.hs, b.nlast
   10b50:	ldr	w12, [x29, #152]
   10b54:	b	10ac0 <mpfr_div@@Base+0x1ce0>
   10b58:	cmp	x3, #0x0
   10b5c:	ccmp	x2, x10, #0x0, gt
   10b60:	b.eq	10b34 <mpfr_div@@Base+0x1d54>  // b.none
   10b64:	cmp	x2, x10
   10b68:	cset	w2, ls  // ls = plast
   10b6c:	csetm	w12, hi  // hi = pmore
   10b70:	and	w13, w2, w13
   10b74:	ldr	w7, [x29, #152]
   10b78:	mov	w3, w7
   10b7c:	cbz	w13, 10c54 <mpfr_div@@Base+0x1e74>
   10b80:	cbz	w7, 10bd8 <mpfr_div@@Base+0x1df8>
   10b84:	ldr	x4, [x29, #192]
   10b88:	add	x10, x4, #0x8
   10b8c:	sub	x0, x0, #0x1
   10b90:	ldr	x2, [x4, x0, lsl #3]
   10b94:	ldr	x1, [x10, x0, lsl #3]
   10b98:	extr	x1, x1, x2, #1
   10b9c:	cmp	x1, #0x0
   10ba0:	cset	w2, eq  // eq = none
   10ba4:	cmp	x0, #0x0
   10ba8:	ccmp	w2, #0x0, #0x4, gt
   10bac:	b.ne	10b8c <mpfr_div@@Base+0x1dac>  // b.any
   10bb0:	cmp	x1, #0x0
   10bb4:	csetm	w12, ne  // ne = any
   10bb8:	cmp	w3, #0x0
   10bbc:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   10bc0:	b.eq	10ac8 <mpfr_div@@Base+0x1ce8>  // b.none
   10bc4:	ldr	x0, [x29, #192]
   10bc8:	ldr	x0, [x0]
   10bcc:	tbnz	w0, #0, f5d4 <mpfr_div@@Base+0x7f4>
   10bd0:	cbz	w12, f074 <mpfr_div@@Base+0x294>
   10bd4:	b	f5d4 <mpfr_div@@Base+0x7f4>
   10bd8:	ldr	x2, [x29, #192]
   10bdc:	sub	x0, x0, #0x1
   10be0:	cmp	x0, #0x0
   10be4:	ldr	x1, [x2, x0, lsl #3]
   10be8:	ccmp	x1, #0x0, #0x0, gt
   10bec:	b.eq	10bdc <mpfr_div@@Base+0x1dfc>  // b.none
   10bf0:	cmp	x1, #0x0
   10bf4:	csetm	w12, ne  // ne = any
   10bf8:	cbz	w12, f074 <mpfr_div@@Base+0x294>
   10bfc:	b	f5d4 <mpfr_div@@Base+0x7f4>
   10c00:	ldr	x0, [x29, #192]
   10c04:	ldr	x0, [x0]
   10c08:	lsl	x0, x0, #63
   10c0c:	cbnz	w13, 10b10 <mpfr_div@@Base+0x1d30>
   10c10:	b	10ab4 <mpfr_div@@Base+0x1cd4>
   10c14:	mov	x5, x24
   10c18:	mov	x8, #0x0                   	// #0
   10c1c:	b	f074 <mpfr_div@@Base+0x294>
   10c20:	ldr	x1, [x29, #184]
   10c24:	str	x0, [x1]
   10c28:	b	f100 <mpfr_div@@Base+0x320>
   10c2c:	mov	w2, #0x1                   	// #1
   10c30:	mov	w12, #0x0                   	// #0
   10c34:	b	10aec <mpfr_div@@Base+0x1d0c>
   10c38:	mov	w2, #0x1                   	// #1
   10c3c:	mov	w12, #0x0                   	// #0
   10c40:	b	10b74 <mpfr_div@@Base+0x1d94>
   10c44:	cmp	x0, x2
   10c48:	csetm	w12, hi  // hi = pmore
   10c4c:	cbz	w12, f074 <mpfr_div@@Base+0x294>
   10c50:	b	f5d4 <mpfr_div@@Base+0x7f4>
   10c54:	cmp	w7, #0x0
   10c58:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   10c5c:	b.eq	10ac8 <mpfr_div@@Base+0x1ce8>  // b.none
   10c60:	ldr	x0, [x29, #192]
   10c64:	ldr	x0, [x0]
   10c68:	tbz	w0, #0, 10ac0 <mpfr_div@@Base+0x1ce0>
   10c6c:	b	f5d4 <mpfr_div@@Base+0x7f4>
   10c70:	mov	x5, x0
   10c74:	mov	w26, w2
   10c78:	b	fb3c <mpfr_div@@Base+0xd5c>
   10c7c:	ldr	x0, [x29, #192]
   10c80:	mov	w26, #0x0                   	// #0
   10c84:	mov	x2, #0x0                   	// #0
   10c88:	add	x5, x0, x3
   10c8c:	b	fb3c <mpfr_div@@Base+0xd5c>
   10c90:	ldr	w2, [x19, #8]
   10c94:	mov	w1, w20
   10c98:	mov	x0, x19
   10c9c:	bl	bf40 <mpfr_overflow@plt>
   10ca0:	mov	w27, w0
   10ca4:	b	f128 <mpfr_div@@Base+0x348>
   10ca8:	cbnz	w20, 10cbc <mpfr_div@@Base+0x1edc>
   10cac:	sub	x0, x0, #0x1
   10cb0:	cmp	x4, x0
   10cb4:	b.ge	10d18 <mpfr_div@@Base+0x1f38>  // b.tcont
   10cb8:	mov	w20, #0x1                   	// #1
   10cbc:	mov	w2, w27
   10cc0:	mov	w1, w20
   10cc4:	mov	x0, x19
   10cc8:	bl	c3c0 <mpfr_underflow@plt>
   10ccc:	mov	w27, w0
   10cd0:	b	f128 <mpfr_div@@Base+0x348>
   10cd4:	cbnz	w20, 10cbc <mpfr_div@@Base+0x1edc>
   10cd8:	sub	x0, x0, #0x1
   10cdc:	cmp	x4, x0
   10ce0:	b.lt	10cb8 <mpfr_div@@Base+0x1ed8>  // b.tstop
   10ce4:	cmp	x1, #0x0
   10ce8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   10cec:	ccmp	x2, x0, #0x0, eq  // eq = none
   10cf0:	cset	w20, eq  // eq = none
   10cf4:	b	10cbc <mpfr_div@@Base+0x1edc>
   10cf8:	ldr	w2, [x29, #168]
   10cfc:	mov	w1, w20
   10d00:	mov	x0, x19
   10d04:	bl	bf40 <mpfr_overflow@plt>
   10d08:	mov	w27, w0
   10d0c:	b	f128 <mpfr_div@@Base+0x348>
   10d10:	mov	w20, #0x1                   	// #1
   10d14:	b	f760 <mpfr_div@@Base+0x980>
   10d18:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   10d1c:	cmp	x1, x0
   10d20:	b.ne	10cbc <mpfr_div@@Base+0x1edc>  // b.any
   10d24:	orr	x2, x2, x6
   10d28:	cmp	x2, #0x0
   10d2c:	cset	w20, eq  // eq = none
   10d30:	b	10cbc <mpfr_div@@Base+0x1edc>
   10d34:	nop

0000000000010d38 <mpfr_div_ui@@Base>:
   10d38:	stp	x29, x30, [sp, #-160]!
   10d3c:	mov	x6, x1
   10d40:	mov	x29, sp
   10d44:	stp	x27, x28, [sp, #80]
   10d48:	ldr	x28, [x1, #16]
   10d4c:	stp	x19, x20, [sp, #16]
   10d50:	mov	x20, x0
   10d54:	stp	x21, x22, [sp, #32]
   10d58:	mov	x22, x2
   10d5c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   10d60:	stp	x23, x24, [sp, #48]
   10d64:	cmp	x28, x2
   10d68:	stp	x25, x26, [sp, #64]
   10d6c:	b.le	11144 <mpfr_div_ui@@Base+0x40c>
   10d70:	mov	w26, w3
   10d74:	cmp	x22, #0x1
   10d78:	b.ls	111fc <mpfr_div_ui@@Base+0x4c4>  // b.plast
   10d7c:	sub	x2, x22, #0x1
   10d80:	tst	x2, x22
   10d84:	b.eq	11238 <mpfr_div_ui@@Base+0x500>  // b.none
   10d88:	ldr	x23, [x20]
   10d8c:	str	xzr, [x29, #152]
   10d90:	ldr	x19, [x1]
   10d94:	sub	x23, x23, #0x1
   10d98:	ldr	w0, [x1, #8]
   10d9c:	asr	x23, x23, #6
   10da0:	sub	x19, x19, #0x1
   10da4:	add	x21, x23, #0x2
   10da8:	asr	x19, x19, #6
   10dac:	ldr	x8, [x1, #24]
   10db0:	str	w0, [x20, #8]
   10db4:	add	x0, x23, #0x1
   10db8:	str	x0, [x29, #136]
   10dbc:	add	x19, x19, #0x1
   10dc0:	lsl	x23, x21, #3
   10dc4:	sub	x9, x21, x19
   10dc8:	cmp	x23, #0x4, lsl #12
   10dcc:	ldr	x6, [x20, #24]
   10dd0:	b.hi	11254 <mpfr_div_ui@@Base+0x51c>  // b.pmore
   10dd4:	add	x0, x23, #0xf
   10dd8:	and	x0, x0, #0xfffffffffffffff0
   10ddc:	sub	sp, sp, x0
   10de0:	mov	x10, sp
   10de4:	str	x6, [x29, #104]
   10de8:	mov	x4, x22
   10dec:	tbnz	x9, #63, 10eb4 <mpfr_div_ui@@Base+0x17c>
   10df0:	mov	x2, x8
   10df4:	mov	x1, x9
   10df8:	mov	x0, x10
   10dfc:	mov	x3, x19
   10e00:	stp	x8, x9, [x29, #112]
   10e04:	str	x10, [x29, #128]
   10e08:	bl	c7c0 <__gmpn_divrem_1@plt>
   10e0c:	ldp	x6, x8, [x29, #104]
   10e10:	mov	x24, x0
   10e14:	ldp	x9, x10, [x29, #120]
   10e18:	sub	x5, x19, x21
   10e1c:	cmp	x5, #0x0
   10e20:	b.le	112d0 <mpfr_div_ui@@Base+0x598>
   10e24:	add	x5, x8, x5, lsl #3
   10e28:	mov	x1, x8
   10e2c:	nop
   10e30:	ldr	x19, [x1]
   10e34:	add	x1, x1, #0x8
   10e38:	cmp	x5, x1
   10e3c:	cbz	x19, 10ee0 <mpfr_div_ui@@Base+0x1a8>
   10e40:	orr	x21, x24, #0x1
   10e44:	mov	x19, #0x1                   	// #1
   10e48:	sub	x2, x23, #0x8
   10e4c:	ldr	x25, [x20]
   10e50:	ldr	x27, [x10, x2]
   10e54:	neg	w25, w25
   10e58:	and	w25, w25, #0x3f
   10e5c:	cbnz	x27, 10f00 <mpfr_div_ui@@Base+0x1c8>
   10e60:	cmp	x10, x6
   10e64:	b.eq	10e88 <mpfr_div_ui@@Base+0x150>  // b.none
   10e68:	mov	x1, x10
   10e6c:	mov	x0, x6
   10e70:	stp	x9, x8, [x29, #120]
   10e74:	str	x10, [x29, #136]
   10e78:	bl	ba10 <memcpy@plt>
   10e7c:	ldp	x9, x8, [x29, #120]
   10e80:	mov	x6, x0
   10e84:	ldr	x10, [x29, #136]
   10e88:	sub	x28, x28, #0x40
   10e8c:	ldr	x2, [x6]
   10e90:	cbnz	w25, 1104c <mpfr_div_ui@@Base+0x314>
   10e94:	sub	x0, x22, x24
   10e98:	cmp	x0, x24
   10e9c:	b.hi	111ac <mpfr_div_ui@@Base+0x474>  // b.pmore
   10ea0:	lsl	x24, x24, #1
   10ea4:	mov	x27, #0x1                   	// #1
   10ea8:	sub	x24, x24, x22
   10eac:	orr	x21, x24, x19
   10eb0:	b	10f50 <mpfr_div_ui@@Base+0x218>
   10eb4:	sub	x2, x8, x9, lsl #3
   10eb8:	mov	x0, x10
   10ebc:	mov	x3, x21
   10ec0:	mov	x1, #0x0                   	// #0
   10ec4:	stp	x8, x9, [x29, #112]
   10ec8:	str	x10, [x29, #128]
   10ecc:	bl	c7c0 <__gmpn_divrem_1@plt>
   10ed0:	mov	x24, x0
   10ed4:	ldp	x6, x8, [x29, #104]
   10ed8:	ldp	x9, x10, [x29, #120]
   10edc:	b	10e18 <mpfr_div_ui@@Base+0xe0>
   10ee0:	b.ne	10e30 <mpfr_div_ui@@Base+0xf8>  // b.any
   10ee4:	sub	x2, x23, #0x8
   10ee8:	mov	x21, x24
   10eec:	ldr	x25, [x20]
   10ef0:	ldr	x27, [x10, x2]
   10ef4:	neg	w25, w25
   10ef8:	and	w25, w25, #0x3f
   10efc:	cbz	x27, 10e60 <mpfr_div_ui@@Base+0x128>
   10f00:	mov	x1, x10
   10f04:	clz	x19, x27
   10f08:	ldr	x2, [x29, #136]
   10f0c:	mov	x0, x6
   10f10:	ldr	x27, [x1], #8
   10f14:	mov	w3, w19
   10f18:	stp	x10, x6, [x29, #128]
   10f1c:	bl	bcc0 <__gmpn_lshift@plt>
   10f20:	lsl	x27, x27, x19
   10f24:	ldp	x10, x6, [x29, #128]
   10f28:	neg	w0, w19
   10f2c:	ldr	x1, [x10]
   10f30:	ldr	x2, [x6]
   10f34:	lsr	x1, x1, x0
   10f38:	orr	x2, x1, x2
   10f3c:	cbnz	w25, 11024 <mpfr_div_ui@@Base+0x2ec>
   10f40:	and	x0, x27, #0x7fffffffffffffff
   10f44:	and	x27, x27, #0x8000000000000000
   10f48:	orr	x21, x21, x0
   10f4c:	sub	x28, x28, x19
   10f50:	ldr	x0, [x29, #152]
   10f54:	mov	x1, #0xffffffffffffffff    	// #-1
   10f58:	lsl	x1, x1, x25
   10f5c:	and	x1, x1, x2
   10f60:	str	x1, [x6]
   10f64:	cbnz	x0, 11280 <mpfr_div_ui@@Base+0x548>
   10f68:	mrs	x3, tpidr_el0
   10f6c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   10f70:	ldr	x1, [x0, #2512]
   10f74:	add	x0, x0, #0x9d0
   10f78:	blr	x1
   10f7c:	ldr	x0, [x3, x0]
   10f80:	sub	x1, x0, #0x1
   10f84:	cmp	x1, x28
   10f88:	b.gt	11300 <mpfr_div_ui@@Base+0x5c8>
   10f8c:	orr	x1, x27, x21
   10f90:	cbz	x1, 11278 <mpfr_div_ui@@Base+0x540>
   10f94:	cmp	w26, #0x2
   10f98:	b.eq	110a0 <mpfr_div_ui@@Base+0x368>  // b.none
   10f9c:	cmp	w26, #0x3
   10fa0:	b.eq	11130 <mpfr_div_ui@@Base+0x3f8>  // b.none
   10fa4:	cmp	w26, #0x4
   10fa8:	b.eq	111a4 <mpfr_div_ui@@Base+0x46c>  // b.none
   10fac:	and	w1, w26, #0xfffffffb
   10fb0:	cmp	w1, #0x1
   10fb4:	b.eq	11198 <mpfr_div_ui@@Base+0x460>  // b.none
   10fb8:	ldr	w1, [x20, #8]
   10fbc:	cbnz	x27, 11290 <mpfr_div_ui@@Base+0x558>
   10fc0:	neg	w1, w1
   10fc4:	mov	w26, #0x0                   	// #0
   10fc8:	str	x28, [x20, #16]
   10fcc:	cmp	x28, x0
   10fd0:	b.lt	10ff0 <mpfr_div_ui@@Base+0x2b8>  // b.tstop
   10fd4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   10fd8:	ldr	x2, [x0, #2544]
   10fdc:	add	x0, x0, #0x9f0
   10fe0:	blr	x2
   10fe4:	ldr	x0, [x3, x0]
   10fe8:	cmp	x0, x28
   10fec:	b.ge	11078 <mpfr_div_ui@@Base+0x340>  // b.tcont
   10ff0:	mov	w2, w26
   10ff4:	mov	x0, x20
   10ff8:	bl	cb30 <mpfr_check_range@plt>
   10ffc:	mov	w1, w0
   11000:	mov	sp, x29
   11004:	mov	w0, w1
   11008:	ldp	x19, x20, [sp, #16]
   1100c:	ldp	x21, x22, [sp, #32]
   11010:	ldp	x23, x24, [sp, #48]
   11014:	ldp	x25, x26, [sp, #64]
   11018:	ldp	x27, x28, [sp, #80]
   1101c:	ldp	x29, x30, [sp], #160
   11020:	ret
   11024:	sub	w1, w25, #0x1
   11028:	mov	x0, #0xffffffffffffffff    	// #-1
   1102c:	orr	x21, x27, x21
   11030:	mov	x27, #0x1                   	// #1
   11034:	lsl	x0, x0, x1
   11038:	bic	x0, x2, x0
   1103c:	lsl	x27, x27, x1
   11040:	orr	x21, x0, x21
   11044:	and	x27, x27, x2
   11048:	b	10f4c <mpfr_div_ui@@Base+0x214>
   1104c:	ldr	x0, [x10]
   11050:	sub	w1, w25, #0x1
   11054:	mov	x21, #0xffffffffffffffff    	// #-1
   11058:	mov	x27, #0x1                   	// #1
   1105c:	lsl	x21, x21, x1
   11060:	bic	x21, x0, x21
   11064:	orr	x21, x21, x24
   11068:	lsl	x27, x27, x1
   1106c:	orr	x21, x21, x19
   11070:	and	x27, x27, x0
   11074:	b	10f50 <mpfr_div_ui@@Base+0x218>
   11078:	cbz	w1, 11000 <mpfr_div_ui@@Base+0x2c8>
   1107c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11080:	ldr	x2, [x0, #2576]
   11084:	add	x0, x0, #0xa10
   11088:	blr	x2
   1108c:	add	x0, x3, x0
   11090:	ldr	w2, [x0]
   11094:	orr	w2, w2, #0x8
   11098:	str	w2, [x0]
   1109c:	b	11000 <mpfr_div_ui@@Base+0x2c8>
   110a0:	ldr	w1, [x20, #8]
   110a4:	cmp	w1, #0x0
   110a8:	b.le	11138 <mpfr_div_ui@@Base+0x400>
   110ac:	ldr	x2, [x6]
   110b0:	mov	w26, #0x4                   	// #4
   110b4:	mov	x0, #0x1                   	// #1
   110b8:	lsl	x25, x0, x25
   110bc:	adds	x25, x25, x2
   110c0:	str	x25, [x6]
   110c4:	b.cc	11118 <mpfr_div_ui@@Base+0x3e0>  // b.lo, b.ul, b.last
   110c8:	sub	x4, x23, #0x10
   110cc:	mov	x0, x6
   110d0:	add	x4, x4, x6
   110d4:	b	110e8 <mpfr_div_ui@@Base+0x3b0>
   110d8:	ldr	x2, [x0, #8]
   110dc:	add	x2, x2, #0x1
   110e0:	str	x2, [x0, #8]!
   110e4:	cbnz	x2, 11118 <mpfr_div_ui@@Base+0x3e0>
   110e8:	cmp	x4, x0
   110ec:	b.ne	110d8 <mpfr_div_ui@@Base+0x3a0>  // b.any
   110f0:	add	x6, x6, x23
   110f4:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   110f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   110fc:	ldr	x4, [x0, #2512]
   11100:	add	x0, x0, #0x9d0
   11104:	blr	x4
   11108:	add	x28, x28, #0x1
   1110c:	stur	x2, [x6, #-16]
   11110:	ldr	x0, [x3, x0]
   11114:	b	10fc8 <mpfr_div_ui@@Base+0x290>
   11118:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1111c:	ldr	x2, [x0, #2512]
   11120:	add	x0, x0, #0x9d0
   11124:	blr	x2
   11128:	ldr	x0, [x3, x0]
   1112c:	b	10fc8 <mpfr_div_ui@@Base+0x290>
   11130:	ldr	w1, [x20, #8]
   11134:	tbnz	w1, #31, 110ac <mpfr_div_ui@@Base+0x374>
   11138:	neg	w1, w1
   1113c:	mov	w26, #0x1                   	// #1
   11140:	b	10fc8 <mpfr_div_ui@@Base+0x290>
   11144:	mov	x0, #0x2                   	// #2
   11148:	movk	x0, #0x8000, lsl #48
   1114c:	cmp	x28, x0
   11150:	b.eq	11160 <mpfr_div_ui@@Base+0x428>  // b.none
   11154:	cmp	x28, x2
   11158:	b.eq	112ec <mpfr_div_ui@@Base+0x5b4>  // b.none
   1115c:	cbnz	x22, 112ac <mpfr_div_ui@@Base+0x574>
   11160:	mrs	x1, tpidr_el0
   11164:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11168:	ldr	x2, [x0, #2576]
   1116c:	add	x0, x0, #0xa10
   11170:	blr	x2
   11174:	add	x0, x1, x0
   11178:	mov	x2, #0x2                   	// #2
   1117c:	movk	x2, #0x8000, lsl #48
   11180:	str	x2, [x20, #16]
   11184:	mov	w1, #0x0                   	// #0
   11188:	ldr	w2, [x0]
   1118c:	orr	w2, w2, #0x4
   11190:	str	w2, [x0]
   11194:	b	11000 <mpfr_div_ui@@Base+0x2c8>
   11198:	ldr	w1, [x20, #8]
   1119c:	neg	w1, w1
   111a0:	b	10fc8 <mpfr_div_ui@@Base+0x290>
   111a4:	ldr	w1, [x20, #8]
   111a8:	b	110ac <mpfr_div_ui@@Base+0x374>
   111ac:	lsr	x22, x22, #1
   111b0:	cmp	x9, #0x0
   111b4:	ccmp	x22, x24, #0x0, lt  // lt = tstop
   111b8:	b.ne	10f50 <mpfr_div_ui@@Base+0x218>  // b.any
   111bc:	mvn	x0, x9
   111c0:	ldr	x0, [x8, x0, lsl #3]
   111c4:	tbz	x0, #63, 10f50 <mpfr_div_ui@@Base+0x218>
   111c8:	cmp	xzr, x0, lsl #1
   111cc:	lsl	x21, x0, #1
   111d0:	b.ne	112c8 <mpfr_div_ui@@Base+0x590>  // b.any
   111d4:	mvn	x0, x9
   111d8:	cbz	x0, 112c8 <mpfr_div_ui@@Base+0x590>
   111dc:	add	x0, x8, x0, lsl #3
   111e0:	ldr	x21, [x8]
   111e4:	add	x8, x8, #0x8
   111e8:	cmp	x0, x8
   111ec:	cbz	x21, 112c4 <mpfr_div_ui@@Base+0x58c>
   111f0:	mov	x21, #0x1                   	// #1
   111f4:	mov	x27, x21
   111f8:	b	10f50 <mpfr_div_ui@@Base+0x218>
   111fc:	ldr	w3, [x1, #8]
   11200:	cbnz	x22, 112dc <mpfr_div_ui@@Base+0x5a4>
   11204:	mrs	x1, tpidr_el0
   11208:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1120c:	ldr	x4, [x0, #2576]
   11210:	add	x0, x0, #0xa10
   11214:	blr	x4
   11218:	add	x0, x1, x0
   1121c:	str	x2, [x20, #16]
   11220:	mov	w1, #0x0                   	// #0
   11224:	str	w3, [x20, #8]
   11228:	ldr	w2, [x0]
   1122c:	orr	w2, w2, #0x20
   11230:	str	w2, [x0]
   11234:	b	11000 <mpfr_div_ui@@Base+0x2c8>
   11238:	clz	x2, x2
   1123c:	mov	w4, #0x40                  	// #64
   11240:	sub	w2, w4, w2
   11244:	sxtw	x2, w2
   11248:	bl	c420 <mpfr_div_2si@plt>
   1124c:	mov	w1, w0
   11250:	b	11000 <mpfr_div_ui@@Base+0x2c8>
   11254:	mov	x1, x23
   11258:	add	x0, x29, #0x98
   1125c:	stp	x9, x6, [x29, #112]
   11260:	str	x8, [x29, #128]
   11264:	bl	bdc0 <mpfr_tmp_allocate@plt>
   11268:	mov	x10, x0
   1126c:	ldp	x9, x6, [x29, #112]
   11270:	ldr	x8, [x29, #128]
   11274:	b	10de4 <mpfr_div_ui@@Base+0xac>
   11278:	mov	w1, #0x0                   	// #0
   1127c:	b	10fc8 <mpfr_div_ui@@Base+0x290>
   11280:	str	x6, [x29, #136]
   11284:	bl	c410 <mpfr_tmp_free@plt>
   11288:	ldr	x6, [x29, #136]
   1128c:	b	10f68 <mpfr_div_ui@@Base+0x230>
   11290:	ldr	x2, [x6]
   11294:	lsr	x4, x2, x25
   11298:	and	x4, x4, #0x1
   1129c:	orr	x21, x4, x21
   112a0:	cbz	x21, 10fc0 <mpfr_div_ui@@Base+0x288>
   112a4:	mov	w26, #0x0                   	// #0
   112a8:	b	110b4 <mpfr_div_ui@@Base+0x37c>
   112ac:	ldr	w2, [x6, #8]
   112b0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   112b4:	mov	w1, #0x0                   	// #0
   112b8:	str	w2, [x20, #8]
   112bc:	str	x0, [x20, #16]
   112c0:	b	11000 <mpfr_div_ui@@Base+0x2c8>
   112c4:	b.ne	111e0 <mpfr_div_ui@@Base+0x4a8>  // b.any
   112c8:	mov	x27, #0x1                   	// #1
   112cc:	b	10f50 <mpfr_div_ui@@Base+0x218>
   112d0:	mov	x21, x24
   112d4:	mov	x19, #0x0                   	// #0
   112d8:	b	10e48 <mpfr_div_ui@@Base+0x110>
   112dc:	mov	w2, w26
   112e0:	bl	c6a0 <mpfr_set4@plt>
   112e4:	mov	w1, w0
   112e8:	b	11000 <mpfr_div_ui@@Base+0x2c8>
   112ec:	ldr	w0, [x6, #8]
   112f0:	mov	w1, #0x0                   	// #0
   112f4:	str	w0, [x20, #8]
   112f8:	str	x28, [x20, #16]
   112fc:	b	11000 <mpfr_div_ui@@Base+0x2c8>
   11300:	ldr	w2, [x20, #8]
   11304:	cmp	w26, #0x0
   11308:	csinc	w1, w26, wzr, ne  // ne = any
   1130c:	mov	x0, x20
   11310:	bl	c3c0 <mpfr_underflow@plt>
   11314:	mov	w1, w0
   11318:	b	11000 <mpfr_div_ui@@Base+0x2c8>
   1131c:	nop

0000000000011320 <mpfr_mul@@Base>:
   11320:	stp	x29, x30, [sp, #-304]!
   11324:	mov	x29, sp
   11328:	stp	x21, x22, [sp, #32]
   1132c:	mov	x21, x1
   11330:	mov	x22, x2
   11334:	ldr	x1, [x1, #16]
   11338:	stp	x19, x20, [sp, #16]
   1133c:	mov	x19, x0
   11340:	stp	x23, x24, [sp, #48]
   11344:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   11348:	cmp	x1, x0
   1134c:	stp	x25, x26, [sp, #64]
   11350:	stp	x27, x28, [sp, #80]
   11354:	b.le	119f0 <mpfr_mul@@Base+0x6d0>
   11358:	ldr	x6, [x2, #16]
   1135c:	cmp	x6, x0
   11360:	b.le	11a88 <mpfr_mul@@Base+0x768>
   11364:	ldr	x23, [x19]
   11368:	add	x6, x1, x6
   1136c:	ldr	x2, [x21]
   11370:	mov	w25, w3
   11374:	ldr	x1, [x22]
   11378:	cmp	x23, x2
   1137c:	ccmp	x23, x1, #0x0, eq  // eq = none
   11380:	b.eq	11540 <mpfr_mul@@Base+0x220>  // b.none
   11384:	ldr	w20, [x21, #8]
   11388:	add	x8, x2, x1
   1138c:	ldr	w0, [x22, #8]
   11390:	mov	x3, #0x7fffffffffffff00    	// #9223372036854775552
   11394:	cmp	x8, x3
   11398:	mul	w20, w20, w0
   1139c:	b.cs	127ec <mpfr_mul@@Base+0x14cc>  // b.hs, b.nlast
   113a0:	sub	x2, x2, #0x1
   113a4:	sub	x1, x1, #0x1
   113a8:	sub	x27, x8, #0x1
   113ac:	str	xzr, [x29, #216]
   113b0:	asr	x26, x2, #6
   113b4:	asr	x24, x1, #6
   113b8:	add	x7, x26, #0x1
   113bc:	add	x4, x24, #0x1
   113c0:	add	x28, x7, x4
   113c4:	asr	x27, x27, #6
   113c8:	add	x9, x27, #0x1
   113cc:	lsl	x10, x28, #3
   113d0:	cmp	x10, #0x4, lsl #12
   113d4:	b.hi	11d5c <mpfr_mul@@Base+0xa3c>  // b.pmore
   113d8:	add	x0, x10, #0xf
   113dc:	and	x0, x0, #0xfffffffffffffff0
   113e0:	sub	sp, sp, x0
   113e4:	mov	x5, sp
   113e8:	cmp	x26, x24
   113ec:	b.lt	11d40 <mpfr_mul@@Base+0xa20>  // b.tstop
   113f0:	ldr	x1, [x21, #24]
   113f4:	cmp	x7, #0x2
   113f8:	ldr	x24, [x22, #24]
   113fc:	mov	x11, x1
   11400:	mov	x26, x24
   11404:	b.le	1172c <mpfr_mul@@Base+0x40c>
   11408:	cmp	x4, #0x14
   1140c:	b.gt	120a0 <mpfr_mul@@Base+0xd80>
   11410:	sub	x28, x28, x9
   11414:	add	x28, x5, x28, lsl #3
   11418:	mov	x3, x24
   1141c:	mov	x2, x7
   11420:	mov	x0, x5
   11424:	stp	x8, x6, [x29, #184]
   11428:	str	x9, [x29, #200]
   1142c:	bl	c7a0 <__gmpn_mul@plt>
   11430:	lsr	x24, x0, #63
   11434:	ldp	x8, x6, [x29, #184]
   11438:	ldr	x9, [x29, #200]
   1143c:	tbz	x0, #63, 121b8 <mpfr_mul@@Base+0xe98>
   11440:	ldr	x1, [x19]
   11444:	add	x23, x6, x24
   11448:	sub	x26, x23, #0x1
   1144c:	sub	x7, x1, #0x1
   11450:	cmp	x8, x1
   11454:	ldr	x24, [x19, #24]
   11458:	asr	x7, x7, #6
   1145c:	b.le	11d88 <mpfr_mul@@Base+0xa68>
   11460:	sub	x4, x27, x7
   11464:	neg	w1, w1
   11468:	ands	w6, w1, #0x3f
   1146c:	add	x2, x7, #0x1
   11470:	add	x1, x28, x4, lsl #3
   11474:	b.eq	118e8 <mpfr_mul@@Base+0x5c8>  // b.none
   11478:	ldr	x0, [x28, x4, lsl #3]
   1147c:	sub	w6, w6, #0x1
   11480:	mov	x5, #0x1                   	// #1
   11484:	cmp	w25, #0x0
   11488:	lsl	x5, x5, x6
   1148c:	and	x3, x0, x5
   11490:	sub	x5, x5, #0x1
   11494:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   11498:	and	x5, x5, x0
   1149c:	b.ne	114c8 <mpfr_mul@@Base+0x1a8>  // b.any
   114a0:	cmp	x4, #0x0
   114a4:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   114a8:	b.ne	114c8 <mpfr_mul@@Base+0x1a8>  // b.any
   114ac:	mvn	x0, x4
   114b0:	add	x0, x1, x0, lsl #3
   114b4:	nop
   114b8:	ldr	x5, [x0, x4, lsl #3]
   114bc:	subs	x4, x4, #0x1
   114c0:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   114c4:	b.eq	114b8 <mpfr_mul@@Base+0x198>  // b.none
   114c8:	mov	x0, #0x2                   	// #2
   114cc:	lsl	x6, x0, x6
   114d0:	cmp	w25, #0x5
   114d4:	b.eq	118e0 <mpfr_mul@@Base+0x5c0>  // b.none
   114d8:	cbnz	w25, 117f8 <mpfr_mul@@Base+0x4d8>
   114dc:	cbz	x3, 11810 <mpfr_mul@@Base+0x4f0>
   114e0:	ldr	x0, [x1]
   114e4:	and	x3, x6, x0
   114e8:	orr	x5, x3, x5
   114ec:	cbz	x5, 11814 <mpfr_mul@@Base+0x4f4>
   114f0:	adds	x0, x0, x6
   114f4:	str	x0, [x24]
   114f8:	cset	x3, cs  // cs = hs, nlast
   114fc:	b.cc	11938 <mpfr_mul@@Base+0x618>  // b.lo, b.ul, b.last
   11500:	mov	x0, #0x1                   	// #1
   11504:	b	11520 <mpfr_mul@@Base+0x200>
   11508:	ldr	x3, [x1, x0, lsl #3]
   1150c:	add	x4, x0, #0x1
   11510:	add	x3, x3, #0x1
   11514:	str	x3, [x24, x0, lsl #3]
   11518:	cbnz	x3, 11e0c <mpfr_mul@@Base+0xaec>
   1151c:	mov	x0, x4
   11520:	cmp	x2, x0
   11524:	b.gt	11508 <mpfr_mul@@Base+0x1e8>
   11528:	add	x2, x24, x2, lsl #3
   1152c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   11530:	mov	x26, x23
   11534:	stur	x0, [x2, #-8]
   11538:	ldr	x0, [x24]
   1153c:	b	119b0 <mpfr_mul@@Base+0x690>
   11540:	cmp	x23, #0x3f
   11544:	b.le	11ac0 <mpfr_mul@@Base+0x7a0>
   11548:	sub	x0, x23, #0x41
   1154c:	cmp	x0, #0x3e
   11550:	b.ls	11c00 <mpfr_mul@@Base+0x8e0>  // b.plast
   11554:	cmp	x23, #0x40
   11558:	b.eq	11fcc <mpfr_mul@@Base+0xcac>  // b.none
   1155c:	sub	x0, x23, #0x81
   11560:	cmp	x0, #0x3e
   11564:	b.hi	11384 <mpfr_mul@@Base+0x64>  // b.pmore
   11568:	ldr	x1, [x21, #24]
   1156c:	mov	x0, #0xc0                  	// #192
   11570:	ldr	x2, [x22, #24]
   11574:	sub	x23, x0, x23
   11578:	ldp	x5, x3, [x1, #8]
   1157c:	mov	x8, #0x1                   	// #1
   11580:	ldp	x13, x11, [x2, #8]
   11584:	umulh	x9, x3, x13
   11588:	umulh	x10, x5, x11
   1158c:	umulh	x7, x3, x11
   11590:	lsl	x24, x8, x23
   11594:	sub	x20, x24, #0x1
   11598:	ldr	x26, [x19, #24]
   1159c:	mul	x4, x3, x11
   115a0:	mul	x0, x3, x13
   115a4:	adds	x4, x4, x9
   115a8:	mul	x9, x11, x5
   115ac:	cinc	x7, x7, cs  // cs = hs, nlast
   115b0:	adds	x4, x4, x10
   115b4:	cset	x10, cs  // cs = hs, nlast
   115b8:	adds	x0, x0, x9
   115bc:	umulh	x5, x5, x13
   115c0:	cset	x12, cs  // cs = hs, nlast
   115c4:	mov	x9, x8
   115c8:	ldr	x13, [x2]
   115cc:	umulh	x3, x3, x13
   115d0:	adds	x0, x0, x3
   115d4:	cinc	x12, x12, cs  // cs = hs, nlast
   115d8:	adds	x0, x0, x5
   115dc:	cset	x5, cs  // cs = hs, nlast
   115e0:	ldr	x3, [x1]
   115e4:	umulh	x3, x3, x11
   115e8:	adds	x3, x0, x3
   115ec:	adc	x0, x5, x12
   115f0:	add	x5, x3, #0x4
   115f4:	adds	x4, x4, x0
   115f8:	and	x0, x5, x20, lsr #2
   115fc:	adc	x10, x10, x7
   11600:	cmp	x0, #0x4
   11604:	b.ls	11f58 <mpfr_mul@@Base+0xc38>  // b.plast
   11608:	tbnz	x10, #63, 11620 <mpfr_mul@@Base+0x300>
   1160c:	sub	x6, x6, #0x1
   11610:	extr	x10, x10, x4, #63
   11614:	extr	x4, x4, x3, #63
   11618:	extr	x3, x3, x9, #63
   1161c:	lsl	x9, x9, #1
   11620:	ldr	w5, [x22, #8]
   11624:	neg	x12, x24
   11628:	ldr	w27, [x21, #8]
   1162c:	mrs	x7, tpidr_el0
   11630:	and	x11, x3, x12
   11634:	stp	x11, x4, [x26]
   11638:	sub	w1, w23, #0x1
   1163c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11640:	ldr	x13, [x0, #2544]
   11644:	add	x0, x0, #0x9f0
   11648:	blr	x13
   1164c:	mov	x2, #0x1                   	// #1
   11650:	mul	w27, w27, w5
   11654:	str	x10, [x26, #16]
   11658:	ldr	x0, [x7, x0]
   1165c:	lsl	x2, x2, x1
   11660:	eor	x1, x20, x2
   11664:	str	w27, [x19, #8]
   11668:	orr	x8, x8, x9
   1166c:	and	x1, x1, x3
   11670:	orr	x1, x1, x8
   11674:	and	x5, x2, x3
   11678:	cmp	x0, x6
   1167c:	b.lt	11714 <mpfr_mul@@Base+0x3f4>  // b.tstop
   11680:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11684:	ldr	x8, [x0, #2512]
   11688:	add	x0, x0, #0x9d0
   1168c:	blr	x8
   11690:	ldr	x0, [x7, x0]
   11694:	cmp	x6, x0
   11698:	b.lt	12310 <mpfr_mul@@Base+0xff0>  // b.tstop
   1169c:	str	x6, [x19, #16]
   116a0:	orr	x0, x5, x1
   116a4:	cbz	x0, 11d38 <mpfr_mul@@Base+0xa18>
   116a8:	cmp	w25, #0x5
   116ac:	b.eq	11d38 <mpfr_mul@@Base+0xa18>  // b.none
   116b0:	cbz	w25, 11f88 <mpfr_mul@@Base+0xc68>
   116b4:	cmp	w25, #0x1
   116b8:	b.eq	11fa0 <mpfr_mul@@Base+0xc80>  // b.none
   116bc:	add	w0, w25, w27, lsr #31
   116c0:	cmp	w0, #0x3
   116c4:	b.eq	11fa0 <mpfr_mul@@Base+0xc80>  // b.none
   116c8:	ldr	x0, [x26]
   116cc:	add	x24, x24, x0
   116d0:	ldp	x0, x1, [x26, #8]
   116d4:	cmp	x24, #0x0
   116d8:	cinc	x0, x0, eq  // eq = none
   116dc:	stp	x24, x0, [x26]
   116e0:	orr	x2, x24, x0
   116e4:	cmp	x2, #0x0
   116e8:	cinc	x0, x1, eq  // eq = none
   116ec:	cbnz	x0, 12518 <mpfr_mul@@Base+0x11f8>
   116f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   116f4:	ldr	x1, [x0, #2544]
   116f8:	add	x0, x0, #0x9f0
   116fc:	blr	x1
   11700:	ldr	x0, [x7, x0]
   11704:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   11708:	str	x1, [x26, #16]
   1170c:	cmp	x6, x0
   11710:	b.lt	11bd0 <mpfr_mul@@Base+0x8b0>  // b.tstop
   11714:	mov	w2, w27
   11718:	mov	w1, w25
   1171c:	mov	x0, x19
   11720:	bl	bf40 <mpfr_overflow@plt>
   11724:	mov	w27, w0
   11728:	b	118b4 <mpfr_mul@@Base+0x594>
   1172c:	ldr	x2, [x1]
   11730:	cmp	x7, #0x1
   11734:	ldr	x3, [x24]
   11738:	umulh	x0, x2, x3
   1173c:	add	x7, x5, #0x8
   11740:	mul	x2, x2, x3
   11744:	stp	x2, x0, [x5]
   11748:	b.eq	117c0 <mpfr_mul@@Base+0x4a0>  // b.none
   1174c:	ldr	x10, [x24]
   11750:	cmp	x4, #0x1
   11754:	ldr	x2, [x1, #8]
   11758:	mul	x3, x2, x10
   1175c:	b.eq	121ec <mpfr_mul@@Base+0xecc>  // b.none
   11760:	umulh	x2, x2, x10
   11764:	adds	x4, x0, x3
   11768:	adc	x2, x2, xzr
   1176c:	str	x2, [x5, #16]
   11770:	str	x4, [x7]
   11774:	ldp	x2, x3, [x1]
   11778:	ldr	x0, [x24, #8]
   1177c:	umulh	x10, x2, x0
   11780:	umulh	x1, x3, x0
   11784:	ldr	x4, [x5, #8]
   11788:	mul	x2, x2, x0
   1178c:	mul	x0, x0, x3
   11790:	adds	x3, x10, x0
   11794:	adc	x0, x1, xzr
   11798:	str	x0, [x5, #24]
   1179c:	ldr	x0, [x5, #16]
   117a0:	adds	x1, x4, x2
   117a4:	adc	x2, x0, x3
   117a8:	str	x2, [x5, #16]
   117ac:	str	x1, [x7]
   117b0:	ldp	x1, x0, [x5, #16]
   117b4:	cmp	x1, x3
   117b8:	cinc	x0, x0, cc  // cc = lo, ul, last
   117bc:	str	x0, [x5, #24]
   117c0:	sub	x28, x28, x9
   117c4:	lsr	x24, x0, #63
   117c8:	add	x28, x5, x28, lsl #3
   117cc:	tbnz	x0, #63, 11440 <mpfr_mul@@Base+0x120>
   117d0:	mov	x2, x9
   117d4:	mov	x1, x28
   117d8:	mov	x0, x28
   117dc:	mov	w3, #0x1                   	// #1
   117e0:	stp	x8, x6, [x29, #184]
   117e4:	str	x9, [x29, #200]
   117e8:	bl	bcc0 <__gmpn_lshift@plt>
   117ec:	ldp	x8, x6, [x29, #184]
   117f0:	ldr	x9, [x29, #200]
   117f4:	b	11440 <mpfr_mul@@Base+0x120>
   117f8:	orr	x5, x5, x3
   117fc:	cmp	w25, #0x1
   11800:	b.eq	11810 <mpfr_mul@@Base+0x4f0>  // b.none
   11804:	add	w0, w25, w20, lsr #31
   11808:	cmp	w0, #0x3
   1180c:	b.ne	11920 <mpfr_mul@@Base+0x600>  // b.any
   11810:	cbz	x5, 118e0 <mpfr_mul@@Base+0x5c0>
   11814:	neg	w27, w20
   11818:	cmp	x24, x1
   1181c:	b.eq	11834 <mpfr_mul@@Base+0x514>  // b.none
   11820:	lsl	x2, x2, #3
   11824:	mov	x0, x24
   11828:	str	x6, [x29, #200]
   1182c:	bl	ba10 <memcpy@plt>
   11830:	ldr	x6, [x29, #200]
   11834:	neg	x6, x6
   11838:	ldr	x0, [x24]
   1183c:	and	x6, x0, x6
   11840:	str	x6, [x24]
   11844:	ldr	x0, [x29, #216]
   11848:	cbnz	x0, 11e04 <mpfr_mul@@Base+0xae4>
   1184c:	mrs	x1, tpidr_el0
   11850:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11854:	ldr	x2, [x0, #2544]
   11858:	add	x0, x0, #0x9f0
   1185c:	blr	x2
   11860:	str	w20, [x19, #8]
   11864:	str	x26, [x19, #16]
   11868:	ldr	x0, [x1, x0]
   1186c:	cmp	x0, x26
   11870:	b.lt	127d4 <mpfr_mul@@Base+0x14b4>  // b.tstop
   11874:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11878:	ldr	x2, [x0, #2512]
   1187c:	add	x0, x0, #0x9d0
   11880:	blr	x2
   11884:	ldr	x0, [x1, x0]
   11888:	cmp	x0, x26
   1188c:	b.gt	11dc0 <mpfr_mul@@Base+0xaa0>
   11890:	cbz	w27, 118b4 <mpfr_mul@@Base+0x594>
   11894:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11898:	ldr	x2, [x0, #2576]
   1189c:	add	x0, x0, #0xa10
   118a0:	blr	x2
   118a4:	add	x0, x1, x0
   118a8:	ldr	w1, [x0]
   118ac:	orr	w1, w1, #0x8
   118b0:	str	w1, [x0]
   118b4:	mov	sp, x29
   118b8:	mov	w0, w27
   118bc:	ldp	x19, x20, [sp, #16]
   118c0:	ldp	x21, x22, [sp, #32]
   118c4:	ldp	x23, x24, [sp, #48]
   118c8:	ldp	x25, x26, [sp, #64]
   118cc:	ldp	x27, x28, [sp, #80]
   118d0:	ldp	x29, x30, [sp], #304
   118d4:	ret
   118d8:	mov	x6, #0x1                   	// #1
   118dc:	nop
   118e0:	mov	w27, #0x0                   	// #0
   118e4:	b	11818 <mpfr_mul@@Base+0x4f8>
   118e8:	ldur	x5, [x1, #-8]
   118ec:	cmp	w25, #0x0
   118f0:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   118f4:	and	x3, x5, #0x8000000000000000
   118f8:	and	x6, x5, #0x7fffffffffffffff
   118fc:	b.ge	11f24 <mpfr_mul@@Base+0xc04>  // b.tcont
   11900:	cmp	w25, #0x5
   11904:	b.eq	118d8 <mpfr_mul@@Base+0x5b8>  // b.none
   11908:	cmp	w25, #0x1
   1190c:	b.eq	11f80 <mpfr_mul@@Base+0xc60>  // b.none
   11910:	add	w0, w25, w20, lsr #31
   11914:	mov	x6, #0x1                   	// #1
   11918:	cmp	w0, #0x3
   1191c:	b.eq	11f80 <mpfr_mul@@Base+0xc60>  // b.none
   11920:	cbz	x5, 118e0 <mpfr_mul@@Base+0x5c0>
   11924:	ldr	x0, [x1]
   11928:	adds	x0, x0, x6
   1192c:	str	x0, [x24]
   11930:	cset	x3, cs  // cs = hs, nlast
   11934:	b.cs	11500 <mpfr_mul@@Base+0x1e0>  // b.hs, b.nlast
   11938:	cmp	x24, x1
   1193c:	b.eq	119b0 <mpfr_mul@@Base+0x690>  // b.none
   11940:	cmp	x2, #0x1
   11944:	b.eq	119b0 <mpfr_mul@@Base+0x690>  // b.none
   11948:	sub	x5, x27, x7
   1194c:	mov	x0, #0x1                   	// #1
   11950:	add	x5, x5, #0x3
   11954:	sub	x4, x0, x7
   11958:	add	x27, x4, x27
   1195c:	add	x4, x24, #0x8
   11960:	add	x5, x28, x5, lsl #3
   11964:	add	x8, x24, #0x18
   11968:	cmp	x4, x5
   1196c:	add	x28, x28, x27, lsl #3
   11970:	ccmp	x28, x8, #0x2, cc  // cc = lo, ul, last
   11974:	sub	x5, x7, #0x1
   11978:	ccmp	x5, #0x9, #0x0, cs  // cs = hs, nlast
   1197c:	b.ls	119c4 <mpfr_mul@@Base+0x6a4>  // b.plast
   11980:	lsr	x0, x7, #1
   11984:	lsl	x0, x0, #4
   11988:	ldr	q0, [x28, x3]
   1198c:	str	q0, [x4, x3]
   11990:	add	x3, x3, #0x10
   11994:	cmp	x3, x0
   11998:	b.ne	11988 <mpfr_mul@@Base+0x668>  // b.any
   1199c:	orr	x0, x7, #0x1
   119a0:	tbz	w7, #0, 119ac <mpfr_mul@@Base+0x68c>
   119a4:	ldr	x1, [x1, x0, lsl #3]
   119a8:	str	x1, [x24, x0, lsl #3]
   119ac:	ldr	x0, [x24]
   119b0:	neg	x6, x6
   119b4:	and	x0, x6, x0
   119b8:	mov	w27, w20
   119bc:	str	x0, [x24]
   119c0:	b	11844 <mpfr_mul@@Base+0x524>
   119c4:	ldr	x3, [x1, x0, lsl #3]
   119c8:	str	x3, [x24, x0, lsl #3]
   119cc:	add	x0, x0, #0x1
   119d0:	cmp	x2, x0
   119d4:	b.eq	119ac <mpfr_mul@@Base+0x68c>  // b.none
   119d8:	ldr	x3, [x1, x0, lsl #3]
   119dc:	str	x3, [x24, x0, lsl #3]
   119e0:	add	x0, x0, #0x1
   119e4:	cmp	x2, x0
   119e8:	b.ne	119c4 <mpfr_mul@@Base+0x6a4>  // b.any
   119ec:	b	119ac <mpfr_mul@@Base+0x68c>
   119f0:	mov	x2, #0x2                   	// #2
   119f4:	movk	x2, #0x8000, lsl #48
   119f8:	cmp	x1, x2
   119fc:	b.eq	11a50 <mpfr_mul@@Base+0x730>  // b.none
   11a00:	ldr	x3, [x22, #16]
   11a04:	cmp	x3, x2
   11a08:	b.eq	11a50 <mpfr_mul@@Base+0x730>  // b.none
   11a0c:	ldr	w2, [x21, #8]
   11a10:	cmp	x1, x0
   11a14:	ldr	w4, [x22, #8]
   11a18:	mul	w2, w2, w4
   11a1c:	b.ne	11a3c <mpfr_mul@@Base+0x71c>  // b.any
   11a20:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11a24:	cmp	x3, x0
   11a28:	b.eq	11a50 <mpfr_mul@@Base+0x730>  // b.none
   11a2c:	mov	w27, #0x0                   	// #0
   11a30:	str	w2, [x19, #8]
   11a34:	str	x1, [x19, #16]
   11a38:	b	118b4 <mpfr_mul@@Base+0x594>
   11a3c:	cmp	x3, x0
   11a40:	b.ne	11aac <mpfr_mul@@Base+0x78c>  // b.any
   11a44:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11a48:	cmp	x1, x0
   11a4c:	b.ne	121d8 <mpfr_mul@@Base+0xeb8>  // b.any
   11a50:	mrs	x1, tpidr_el0
   11a54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11a58:	ldr	x2, [x0, #2576]
   11a5c:	add	x0, x0, #0xa10
   11a60:	blr	x2
   11a64:	add	x0, x1, x0
   11a68:	mov	x1, #0x2                   	// #2
   11a6c:	movk	x1, #0x8000, lsl #48
   11a70:	str	x1, [x19, #16]
   11a74:	mov	w27, #0x0                   	// #0
   11a78:	ldr	w1, [x0]
   11a7c:	orr	w1, w1, #0x4
   11a80:	str	w1, [x0]
   11a84:	b	118b4 <mpfr_mul@@Base+0x594>
   11a88:	mov	x1, #0x2                   	// #2
   11a8c:	movk	x1, #0x8000, lsl #48
   11a90:	cmp	x6, x1
   11a94:	b.eq	11a50 <mpfr_mul@@Base+0x730>  // b.none
   11a98:	ldr	w2, [x22, #8]
   11a9c:	cmp	x6, x0
   11aa0:	ldr	w0, [x21, #8]
   11aa4:	mul	w2, w2, w0
   11aa8:	b.eq	121d8 <mpfr_mul@@Base+0xeb8>  // b.none
   11aac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11ab0:	mov	w27, #0x0                   	// #0
   11ab4:	str	w2, [x19, #8]
   11ab8:	str	x0, [x19, #16]
   11abc:	b	118b4 <mpfr_mul@@Base+0x594>
   11ac0:	ldr	x1, [x21, #24]
   11ac4:	mov	x2, #0x40                  	// #64
   11ac8:	ldr	x0, [x22, #24]
   11acc:	sub	x23, x2, x23
   11ad0:	ldr	x1, [x1]
   11ad4:	mov	x8, #0x1                   	// #1
   11ad8:	ldr	x4, [x0]
   11adc:	lsl	x8, x8, x23
   11ae0:	umulh	x5, x1, x4
   11ae4:	sub	x2, x8, #0x1
   11ae8:	mul	x4, x1, x4
   11aec:	ldr	x12, [x19, #24]
   11af0:	tbnz	x5, #63, 11b00 <mpfr_mul@@Base+0x7e0>
   11af4:	sub	x6, x6, #0x1
   11af8:	extr	x5, x5, x4, #63
   11afc:	lsl	x4, x4, #1
   11b00:	ldr	w27, [x21, #8]
   11b04:	neg	x10, x8
   11b08:	ldr	w11, [x22, #8]
   11b0c:	mrs	x7, tpidr_el0
   11b10:	and	x9, x5, x10
   11b14:	str	x9, [x12]
   11b18:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11b1c:	ldr	x3, [x0, #2544]
   11b20:	add	x0, x0, #0x9f0
   11b24:	blr	x3
   11b28:	sub	w1, w23, #0x1
   11b2c:	mov	x3, #0x1                   	// #1
   11b30:	mul	w27, w27, w11
   11b34:	lsl	x3, x3, x1
   11b38:	ldr	x0, [x7, x0]
   11b3c:	eor	x1, x2, x3
   11b40:	str	w27, [x19, #8]
   11b44:	and	x1, x1, x5
   11b48:	orr	x1, x1, x4
   11b4c:	and	x3, x3, x5
   11b50:	cmp	x0, x6
   11b54:	b.lt	11714 <mpfr_mul@@Base+0x3f4>  // b.tstop
   11b58:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11b5c:	ldr	x2, [x0, #2512]
   11b60:	add	x0, x0, #0x9d0
   11b64:	blr	x2
   11b68:	ldr	x0, [x7, x0]
   11b6c:	cmp	x6, x0
   11b70:	b.lt	12268 <mpfr_mul@@Base+0xf48>  // b.tstop
   11b74:	str	x6, [x19, #16]
   11b78:	orr	x0, x3, x1
   11b7c:	cbz	x0, 11d38 <mpfr_mul@@Base+0xa18>
   11b80:	cmp	w25, #0x5
   11b84:	b.eq	11d38 <mpfr_mul@@Base+0xa18>  // b.none
   11b88:	cbz	w25, 12208 <mpfr_mul@@Base+0xee8>
   11b8c:	cmp	w25, #0x1
   11b90:	b.eq	11fa0 <mpfr_mul@@Base+0xc80>  // b.none
   11b94:	add	w0, w25, w27, lsr #31
   11b98:	cmp	w0, #0x3
   11b9c:	b.eq	11fa0 <mpfr_mul@@Base+0xc80>  // b.none
   11ba0:	ldr	x0, [x12]
   11ba4:	adds	x0, x8, x0
   11ba8:	b.ne	1235c <mpfr_mul@@Base+0x103c>  // b.any
   11bac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   11bb0:	str	x0, [x12]
   11bb4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11bb8:	ldr	x1, [x0, #2544]
   11bbc:	add	x0, x0, #0x9f0
   11bc0:	blr	x1
   11bc4:	ldr	x0, [x7, x0]
   11bc8:	cmp	x6, x0
   11bcc:	b.ge	11714 <mpfr_mul@@Base+0x3f4>  // b.tcont
   11bd0:	add	x1, x6, #0x1
   11bd4:	str	x1, [x19, #16]
   11bd8:	cbz	w27, 118b4 <mpfr_mul@@Base+0x594>
   11bdc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11be0:	ldr	x1, [x0, #2576]
   11be4:	add	x0, x0, #0xa10
   11be8:	blr	x1
   11bec:	add	x0, x7, x0
   11bf0:	ldr	w1, [x0]
   11bf4:	orr	w1, w1, #0x8
   11bf8:	str	w1, [x0]
   11bfc:	b	118b4 <mpfr_mul@@Base+0x594>
   11c00:	ldr	x2, [x21, #24]
   11c04:	mov	x1, #0x80                  	// #128
   11c08:	ldr	x0, [x22, #24]
   11c0c:	sub	x23, x1, x23
   11c10:	ldp	x11, x5, [x2]
   11c14:	mov	x4, #0x1                   	// #1
   11c18:	ldp	x10, x7, [x0]
   11c1c:	umulh	x1, x5, x10
   11c20:	lsl	x8, x4, x23
   11c24:	sub	x2, x8, #0x1
   11c28:	umulh	x3, x5, x7
   11c2c:	mov	x14, x4
   11c30:	ldr	x9, [x19, #24]
   11c34:	mul	x0, x5, x7
   11c38:	adds	x0, x0, x1
   11c3c:	cinc	x3, x3, cs  // cs = hs, nlast
   11c40:	umulh	x1, x11, x7
   11c44:	adds	x1, x0, x1
   11c48:	add	x0, x1, #0x2
   11c4c:	cinc	x3, x3, cs  // cs = hs, nlast
   11c50:	and	x0, x0, x2, lsr #2
   11c54:	cmp	x0, #0x2
   11c58:	b.hi	11ca0 <mpfr_mul@@Base+0x980>  // b.pmore
   11c5c:	mul	x5, x5, x10
   11c60:	umulh	x0, x11, x10
   11c64:	adds	x5, x5, x0
   11c68:	mul	x7, x7, x11
   11c6c:	cinc	x1, x1, cs  // cs = hs, nlast
   11c70:	cset	w0, cs  // cs = hs, nlast
   11c74:	cmp	x1, #0x0
   11c78:	mul	x4, x10, x11
   11c7c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   11c80:	cinc	x3, x3, ne  // ne = any
   11c84:	adds	x5, x7, x5
   11c88:	cinc	x1, x1, cs  // cs = hs, nlast
   11c8c:	cset	w0, cs  // cs = hs, nlast
   11c90:	cmp	x1, #0x0
   11c94:	mov	x14, x5
   11c98:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   11c9c:	cinc	x3, x3, ne  // ne = any
   11ca0:	tbnz	x3, #63, 11cb4 <mpfr_mul@@Base+0x994>
   11ca4:	sub	x6, x6, #0x1
   11ca8:	extr	x3, x3, x1, #63
   11cac:	extr	x1, x1, x14, #63
   11cb0:	lsl	x14, x14, #1
   11cb4:	ldr	w27, [x21, #8]
   11cb8:	neg	x13, x8
   11cbc:	ldr	w12, [x22, #8]
   11cc0:	mrs	x7, tpidr_el0
   11cc4:	and	x10, x1, x13
   11cc8:	stp	x10, x3, [x9]
   11ccc:	sub	w11, w23, #0x1
   11cd0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11cd4:	ldr	x15, [x0, #2544]
   11cd8:	add	x0, x0, #0x9f0
   11cdc:	blr	x15
   11ce0:	mov	x5, #0x1                   	// #1
   11ce4:	mul	w27, w27, w12
   11ce8:	lsl	x5, x5, x11
   11cec:	ldr	x0, [x7, x0]
   11cf0:	eor	x2, x2, x5
   11cf4:	str	w27, [x19, #8]
   11cf8:	orr	x4, x4, x14
   11cfc:	and	x2, x2, x1
   11d00:	cmp	x0, x6
   11d04:	orr	x2, x2, x4
   11d08:	and	x4, x5, x1
   11d0c:	b.lt	11714 <mpfr_mul@@Base+0x3f4>  // b.tstop
   11d10:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11d14:	ldr	x11, [x0, #2512]
   11d18:	add	x0, x0, #0x9d0
   11d1c:	blr	x11
   11d20:	ldr	x0, [x7, x0]
   11d24:	cmp	x6, x0
   11d28:	b.lt	122ac <mpfr_mul@@Base+0xf8c>  // b.tstop
   11d2c:	str	x6, [x19, #16]
   11d30:	orr	x0, x4, x2
   11d34:	cbnz	x0, 11ea8 <mpfr_mul@@Base+0xb88>
   11d38:	mov	w27, #0x0                   	// #0
   11d3c:	b	118b4 <mpfr_mul@@Base+0x594>
   11d40:	mov	x1, x7
   11d44:	mov	x0, x21
   11d48:	mov	x7, x4
   11d4c:	mov	x21, x22
   11d50:	mov	x4, x1
   11d54:	mov	x22, x0
   11d58:	b	113f0 <mpfr_mul@@Base+0xd0>
   11d5c:	mov	x1, x10
   11d60:	add	x0, x29, #0xd8
   11d64:	stp	x8, x6, [x29, #160]
   11d68:	stp	x7, x9, [x29, #176]
   11d6c:	stp	x4, x10, [x29, #192]
   11d70:	bl	bdc0 <mpfr_tmp_allocate@plt>
   11d74:	mov	x5, x0
   11d78:	ldp	x8, x6, [x29, #160]
   11d7c:	ldp	x7, x9, [x29, #176]
   11d80:	ldp	x4, x10, [x29, #192]
   11d84:	b	113e8 <mpfr_mul@@Base+0xc8>
   11d88:	sub	x27, x7, x27
   11d8c:	lsl	x27, x27, #3
   11d90:	add	x0, x24, x27
   11d94:	cmp	x0, x28
   11d98:	b.eq	11da8 <mpfr_mul@@Base+0xa88>  // b.none
   11d9c:	lsl	x2, x9, #3
   11da0:	mov	x1, x28
   11da4:	bl	ba10 <memcpy@plt>
   11da8:	mov	x2, x27
   11dac:	mov	x0, x24
   11db0:	mov	w1, #0x0                   	// #0
   11db4:	mov	w27, #0x0                   	// #0
   11db8:	bl	c110 <memset@plt>
   11dbc:	b	11844 <mpfr_mul@@Base+0x524>
   11dc0:	cbnz	w25, 11dec <mpfr_mul@@Base+0xacc>
   11dc4:	cmp	x0, x23
   11dc8:	b.gt	12854 <mpfr_mul@@Base+0x1534>
   11dcc:	mov	x0, x21
   11dd0:	bl	bf00 <mpfr_powerof2_raw@plt>
   11dd4:	mov	w25, w0
   11dd8:	cbz	w0, 11dec <mpfr_mul@@Base+0xacc>
   11ddc:	mov	x0, x22
   11de0:	bl	bf00 <mpfr_powerof2_raw@plt>
   11de4:	cmp	w0, #0x0
   11de8:	cset	w25, ne  // ne = any
   11dec:	mov	w2, w20
   11df0:	mov	w1, w25
   11df4:	mov	x0, x19
   11df8:	bl	c3c0 <mpfr_underflow@plt>
   11dfc:	mov	w27, w0
   11e00:	b	118b4 <mpfr_mul@@Base+0x594>
   11e04:	bl	c410 <mpfr_tmp_free@plt>
   11e08:	b	1184c <mpfr_mul@@Base+0x52c>
   11e0c:	cmp	x24, x1
   11e10:	b.eq	119ac <mpfr_mul@@Base+0x68c>  // b.none
   11e14:	cmp	x0, x7
   11e18:	b.ge	119ac <mpfr_mul@@Base+0x68c>  // b.tcont
   11e1c:	add	x0, x0, #0x3
   11e20:	sub	x8, x7, x4
   11e24:	lsl	x0, x0, #3
   11e28:	sub	x3, x0, #0x10
   11e2c:	add	x9, x24, x0
   11e30:	add	x5, x1, x3
   11e34:	add	x0, x1, x0
   11e38:	cmp	x5, x9
   11e3c:	add	x3, x24, x3
   11e40:	ccmp	x3, x0, #0x2, cc  // cc = lo, ul, last
   11e44:	cset	w9, cs  // cs = hs, nlast
   11e48:	cmp	x8, #0x9
   11e4c:	ccmp	x4, x7, #0x0, hi  // hi = pmore
   11e50:	cset	w0, le
   11e54:	tst	w9, w0
   11e58:	b.eq	11f0c <mpfr_mul@@Base+0xbec>  // b.none
   11e5c:	sub	x2, x2, x4
   11e60:	cmp	x4, x7
   11e64:	csinc	x7, x2, xzr, le
   11e68:	mov	x0, #0x0                   	// #0
   11e6c:	lsr	x2, x7, #1
   11e70:	lsl	x2, x2, #4
   11e74:	nop
   11e78:	ldr	q0, [x5, x0]
   11e7c:	str	q0, [x3, x0]
   11e80:	add	x0, x0, #0x10
   11e84:	cmp	x0, x2
   11e88:	b.ne	11e78 <mpfr_mul@@Base+0xb58>  // b.any
   11e8c:	and	x0, x7, #0xfffffffffffffffe
   11e90:	add	x4, x0, x4
   11e94:	cmp	x0, x7
   11e98:	b.eq	119ac <mpfr_mul@@Base+0x68c>  // b.none
   11e9c:	ldr	x0, [x1, x4, lsl #3]
   11ea0:	str	x0, [x24, x4, lsl #3]
   11ea4:	b	119ac <mpfr_mul@@Base+0x68c>
   11ea8:	cmp	w25, #0x5
   11eac:	b.eq	11d38 <mpfr_mul@@Base+0xa18>  // b.none
   11eb0:	cbz	w25, 12228 <mpfr_mul@@Base+0xf08>
   11eb4:	cmp	w25, #0x1
   11eb8:	b.eq	11fa0 <mpfr_mul@@Base+0xc80>  // b.none
   11ebc:	add	w0, w25, w27, lsr #31
   11ec0:	cmp	w0, #0x3
   11ec4:	b.eq	11fa0 <mpfr_mul@@Base+0xc80>  // b.none
   11ec8:	ldr	x0, [x9]
   11ecc:	add	x8, x8, x0
   11ed0:	ldr	x0, [x9, #8]
   11ed4:	str	x8, [x9]
   11ed8:	cmp	x8, #0x0
   11edc:	cinc	x0, x0, eq  // eq = none
   11ee0:	cbnz	x0, 12364 <mpfr_mul@@Base+0x1044>
   11ee4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11ee8:	ldr	x1, [x0, #2544]
   11eec:	add	x0, x0, #0x9f0
   11ef0:	blr	x1
   11ef4:	ldr	x0, [x7, x0]
   11ef8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   11efc:	str	x1, [x9, #8]
   11f00:	cmp	x6, x0
   11f04:	b.lt	11bd0 <mpfr_mul@@Base+0x8b0>  // b.tstop
   11f08:	b	11714 <mpfr_mul@@Base+0x3f4>
   11f0c:	ldr	x0, [x1, x4, lsl #3]
   11f10:	str	x0, [x24, x4, lsl #3]
   11f14:	cmp	x7, x4
   11f18:	add	x4, x4, #0x1
   11f1c:	b.gt	11f0c <mpfr_mul@@Base+0xbec>
   11f20:	b	119ac <mpfr_mul@@Base+0x68c>
   11f24:	cmp	x6, #0x0
   11f28:	sub	x0, x4, #0x1
   11f2c:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   11f30:	b.eq	1250c <mpfr_mul@@Base+0x11ec>  // b.none
   11f34:	mvn	x4, x4
   11f38:	add	x4, x1, x4, lsl #3
   11f3c:	nop
   11f40:	ldr	x5, [x4, x0, lsl #3]
   11f44:	subs	x0, x0, #0x1
   11f48:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   11f4c:	b.eq	11f40 <mpfr_mul@@Base+0xc20>  // b.none
   11f50:	mov	x6, #0x1                   	// #1
   11f54:	b	114d0 <mpfr_mul@@Base+0x1b0>
   11f58:	add	x0, x29, #0x100
   11f5c:	mov	x3, #0x3                   	// #3
   11f60:	str	x6, [x29, #200]
   11f64:	bl	c470 <__gmpn_mul_n@plt>
   11f68:	ldp	x0, x8, [x29, #256]
   11f6c:	ldr	x6, [x29, #200]
   11f70:	ldp	x9, x3, [x29, #272]
   11f74:	orr	x8, x8, x0
   11f78:	ldp	x4, x10, [x29, #288]
   11f7c:	b	11608 <mpfr_mul@@Base+0x2e8>
   11f80:	mov	x6, #0x1                   	// #1
   11f84:	b	11814 <mpfr_mul@@Base+0x4f4>
   11f88:	cbz	x5, 11fa0 <mpfr_mul@@Base+0xc80>
   11f8c:	ldr	x0, [x26]
   11f90:	cbnz	x1, 116cc <mpfr_mul@@Base+0x3ac>
   11f94:	lsr	x23, x0, x23
   11f98:	tbnz	w23, #0, 116cc <mpfr_mul@@Base+0x3ac>
   11f9c:	nop
   11fa0:	cbz	w27, 11d38 <mpfr_mul@@Base+0xa18>
   11fa4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   11fa8:	ldr	x1, [x0, #2576]
   11fac:	add	x0, x0, #0xa10
   11fb0:	blr	x1
   11fb4:	add	x0, x7, x0
   11fb8:	neg	w27, w27
   11fbc:	ldr	w1, [x0]
   11fc0:	orr	w1, w1, #0x8
   11fc4:	str	w1, [x0]
   11fc8:	b	118b4 <mpfr_mul@@Base+0x594>
   11fcc:	ldr	x1, [x21, #24]
   11fd0:	ldr	x0, [x22, #24]
   11fd4:	ldr	x1, [x1]
   11fd8:	ldr	x0, [x0]
   11fdc:	umulh	x2, x1, x0
   11fe0:	ldr	x3, [x19, #24]
   11fe4:	mul	x1, x1, x0
   11fe8:	tbnz	x2, #63, 11ff8 <mpfr_mul@@Base+0xcd8>
   11fec:	sub	x6, x6, #0x1
   11ff0:	extr	x2, x2, x1, #63
   11ff4:	lsl	x1, x1, #1
   11ff8:	ldr	w27, [x21, #8]
   11ffc:	mrs	x7, tpidr_el0
   12000:	ldr	w4, [x22, #8]
   12004:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   12008:	ldr	x5, [x0, #2544]
   1200c:	add	x0, x0, #0x9f0
   12010:	blr	x5
   12014:	str	x2, [x3]
   12018:	ldr	x0, [x7, x0]
   1201c:	mul	w27, w27, w4
   12020:	str	w27, [x19, #8]
   12024:	cmp	x0, x6
   12028:	b.lt	11714 <mpfr_mul@@Base+0x3f4>  // b.tstop
   1202c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   12030:	ldr	x4, [x0, #2512]
   12034:	add	x0, x0, #0x9d0
   12038:	blr	x4
   1203c:	ldr	x0, [x7, x0]
   12040:	cmp	x6, x0
   12044:	b.lt	123f0 <mpfr_mul@@Base+0x10d0>  // b.tstop
   12048:	str	x6, [x19, #16]
   1204c:	cbz	x1, 11d38 <mpfr_mul@@Base+0xa18>
   12050:	cmp	w25, #0x5
   12054:	b.eq	11d38 <mpfr_mul@@Base+0xa18>  // b.none
   12058:	cbnz	w25, 122f4 <mpfr_mul@@Base+0xfd4>
   1205c:	tbz	x1, #63, 11fa0 <mpfr_mul@@Base+0xc80>
   12060:	tst	x1, #0x7fffffffffffffff
   12064:	ldr	x0, [x3]
   12068:	b.ne	12070 <mpfr_mul@@Base+0xd50>  // b.any
   1206c:	tbz	w0, #0, 11fa0 <mpfr_mul@@Base+0xc80>
   12070:	adds	x0, x0, #0x1
   12074:	b.ne	12550 <mpfr_mul@@Base+0x1230>  // b.any
   12078:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1207c:	str	x0, [x3]
   12080:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   12084:	ldr	x1, [x0, #2544]
   12088:	add	x0, x0, #0x9f0
   1208c:	blr	x1
   12090:	ldr	x0, [x7, x0]
   12094:	cmp	x6, x0
   12098:	b.lt	11bd0 <mpfr_mul@@Base+0x8b0>  // b.tstop
   1209c:	b	11714 <mpfr_mul@@Base+0x3f4>
   120a0:	ldr	x3, [x1]
   120a4:	cbz	x3, 1236c <mpfr_mul@@Base+0x104c>
   120a8:	ldr	x2, [x26]
   120ac:	cbz	x2, 12470 <mpfr_mul@@Base+0x1150>
   120b0:	ldr	x3, [x19]
   120b4:	mov	w12, #0x40                  	// #64
   120b8:	sub	x3, x3, #0x1
   120bc:	asr	x3, x3, #6
   120c0:	add	x3, x3, #0x2
   120c4:	cmp	x4, x3
   120c8:	csel	x3, x4, x3, le
   120cc:	add	x13, x3, #0x1
   120d0:	sub	x2, x7, x3
   120d4:	clz	x0, x13
   120d8:	lsl	x15, x3, #6
   120dc:	sub	w12, w12, w0
   120e0:	sub	x18, x4, x3
   120e4:	add	x11, x11, x2, lsl #3
   120e8:	mov	x14, x13
   120ec:	sub	x12, x15, w12, sxtw
   120f0:	add	x26, x26, x18, lsl #3
   120f4:	sub	x0, x12, #0x4
   120f8:	cmp	x23, x0
   120fc:	b.ge	12488 <mpfr_mul@@Base+0x1168>  // b.tcont
   12100:	mov	x14, x3
   12104:	sub	x15, x28, x14, lsl #1
   12108:	stp	x8, x15, [x29, #120]
   1210c:	cmp	x21, x22
   12110:	stp	x6, x7, [x29, #136]
   12114:	add	x0, x5, x15, lsl #3
   12118:	stp	x9, x5, [x29, #152]
   1211c:	stp	x12, x13, [x29, #168]
   12120:	stp	x10, x14, [x29, #184]
   12124:	str	x4, [x29, #200]
   12128:	b.eq	12240 <mpfr_mul@@Base+0xf20>  // b.none
   1212c:	mov	x2, x26
   12130:	mov	x1, x11
   12134:	bl	bc80 <mpfr_mulhigh_n@plt>
   12138:	ldp	x8, x15, [x29, #120]
   1213c:	ldp	x6, x7, [x29, #136]
   12140:	ldp	x9, x5, [x29, #152]
   12144:	ldp	x12, x13, [x29, #168]
   12148:	ldp	x10, x14, [x29, #184]
   1214c:	ldr	x4, [x29, #200]
   12150:	add	x10, x5, x10
   12154:	ldur	x0, [x10, #-8]
   12158:	lsr	x24, x0, #63
   1215c:	tbz	x0, #63, 12430 <mpfr_mul@@Base+0x1110>
   12160:	sub	x28, x28, x9
   12164:	cmp	w25, #0x5
   12168:	add	x28, x5, x28, lsl #3
   1216c:	b.eq	12220 <mpfr_mul@@Base+0xf00>  // b.none
   12170:	cmp	w25, #0x0
   12174:	cinc	x23, x23, eq  // eq = none
   12178:	sub	x2, x12, #0x1
   1217c:	mov	x1, x9
   12180:	mov	x3, x23
   12184:	add	x2, x2, x24
   12188:	mov	x0, x28
   1218c:	stp	x8, x6, [x29, #160]
   12190:	stp	x7, x5, [x29, #176]
   12194:	stp	x4, x9, [x29, #192]
   12198:	bl	c370 <mpfr_round_p@plt>
   1219c:	ldp	x8, x6, [x29, #160]
   121a0:	ldp	x7, x5, [x29, #176]
   121a4:	ldp	x4, x9, [x29, #192]
   121a8:	cbnz	w0, 11440 <mpfr_mul@@Base+0x120>
   121ac:	ldr	x1, [x21, #24]
   121b0:	ldr	x24, [x22, #24]
   121b4:	b	11418 <mpfr_mul@@Base+0xf8>
   121b8:	mov	x2, x9
   121bc:	mov	x1, x28
   121c0:	mov	x0, x28
   121c4:	mov	w3, #0x1                   	// #1
   121c8:	bl	bcc0 <__gmpn_lshift@plt>
   121cc:	ldp	x8, x6, [x29, #184]
   121d0:	ldr	x9, [x29, #200]
   121d4:	b	11440 <mpfr_mul@@Base+0x120>
   121d8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   121dc:	mov	w27, #0x0                   	// #0
   121e0:	str	w2, [x19, #8]
   121e4:	str	x0, [x19, #16]
   121e8:	b	118b4 <mpfr_mul@@Base+0x594>
   121ec:	umulh	x1, x2, x10
   121f0:	adds	x2, x0, x3
   121f4:	adc	x0, x1, xzr
   121f8:	str	x0, [x5, #16]
   121fc:	str	x2, [x7]
   12200:	ldr	x0, [x5, #16]
   12204:	b	117c0 <mpfr_mul@@Base+0x4a0>
   12208:	cbz	x3, 11fa0 <mpfr_mul@@Base+0xc80>
   1220c:	ldr	x0, [x12]
   12210:	cbnz	x1, 11ba4 <mpfr_mul@@Base+0x884>
   12214:	lsr	x23, x0, x23
   12218:	tbz	w23, #0, 11fa0 <mpfr_mul@@Base+0xc80>
   1221c:	b	11ba4 <mpfr_mul@@Base+0x884>
   12220:	mov	w25, #0x1                   	// #1
   12224:	b	12178 <mpfr_mul@@Base+0xe58>
   12228:	cbz	x4, 11fa0 <mpfr_mul@@Base+0xc80>
   1222c:	ldr	x0, [x9]
   12230:	cbnz	x2, 11ecc <mpfr_mul@@Base+0xbac>
   12234:	lsr	x23, x0, x23
   12238:	tbz	w23, #0, 11fa0 <mpfr_mul@@Base+0xc80>
   1223c:	b	11ecc <mpfr_mul@@Base+0xbac>
   12240:	mov	x2, x3
   12244:	mov	x1, x11
   12248:	bl	c490 <mpfr_sqrhigh_n@plt>
   1224c:	ldp	x8, x15, [x29, #120]
   12250:	ldp	x6, x7, [x29, #136]
   12254:	ldp	x9, x5, [x29, #152]
   12258:	ldp	x12, x13, [x29, #168]
   1225c:	ldp	x10, x14, [x29, #184]
   12260:	ldr	x4, [x29, #200]
   12264:	b	12150 <mpfr_mul@@Base+0xe30>
   12268:	sub	x0, x0, #0x1
   1226c:	cmp	x10, x9
   12270:	ccmp	x6, x0, #0x0, eq  // eq = none
   12274:	b.ne	1278c <mpfr_mul@@Base+0x146c>  // b.any
   12278:	cmp	w25, #0x0
   1227c:	ccmp	x3, #0x0, #0x4, eq  // eq = none
   12280:	b.ne	12504 <mpfr_mul@@Base+0x11e4>  // b.any
   12284:	cmp	w25, #0x4
   12288:	b.eq	12528 <mpfr_mul@@Base+0x1208>  // b.none
   1228c:	mvn	w2, w27
   12290:	add	w2, w25, w2, lsr #31
   12294:	cmp	w2, #0x3
   12298:	b.ne	1278c <mpfr_mul@@Base+0x146c>  // b.any
   1229c:	orr	x2, x3, x1
   122a0:	cbz	x2, 1278c <mpfr_mul@@Base+0x146c>
   122a4:	str	x6, [x19, #16]
   122a8:	b	11b88 <mpfr_mul@@Base+0x868>
   122ac:	sub	x0, x0, #0x1
   122b0:	cmp	x6, x0
   122b4:	ccmn	x3, #0x1, #0x0, eq  // eq = none
   122b8:	ccmp	x13, x10, #0x0, eq  // eq = none
   122bc:	b.ne	12824 <mpfr_mul@@Base+0x1504>  // b.any
   122c0:	cmp	w25, #0x0
   122c4:	ccmp	x4, #0x0, #0x4, eq  // eq = none
   122c8:	b.ne	12520 <mpfr_mul@@Base+0x1200>  // b.any
   122cc:	cmp	w25, #0x4
   122d0:	b.eq	12540 <mpfr_mul@@Base+0x1220>  // b.none
   122d4:	mvn	w10, w27
   122d8:	add	w10, w25, w10, lsr #31
   122dc:	cmp	w10, #0x3
   122e0:	b.ne	12824 <mpfr_mul@@Base+0x1504>  // b.any
   122e4:	orr	x10, x4, x2
   122e8:	cbz	x10, 12824 <mpfr_mul@@Base+0x1504>
   122ec:	str	x6, [x19, #16]
   122f0:	b	11eb0 <mpfr_mul@@Base+0xb90>
   122f4:	cmp	w25, #0x1
   122f8:	b.eq	11fa0 <mpfr_mul@@Base+0xc80>  // b.none
   122fc:	add	w0, w25, w27, lsr #31
   12300:	cmp	w0, #0x3
   12304:	b.eq	11fa0 <mpfr_mul@@Base+0xc80>  // b.none
   12308:	ldr	x0, [x3]
   1230c:	b	12070 <mpfr_mul@@Base+0xd50>
   12310:	cmp	x12, x11
   12314:	and	x8, x10, x4
   12318:	sub	x0, x0, #0x1
   1231c:	ccmn	x8, #0x1, #0x0, eq  // eq = none
   12320:	ccmp	x6, x0, #0x0, eq  // eq = none
   12324:	b.ne	127a0 <mpfr_mul@@Base+0x1480>  // b.any
   12328:	cmp	w25, #0x0
   1232c:	ccmp	x5, #0x0, #0x4, eq  // eq = none
   12330:	b.ne	12538 <mpfr_mul@@Base+0x1218>  // b.any
   12334:	cmp	w25, #0x4
   12338:	b.eq	125cc <mpfr_mul@@Base+0x12ac>  // b.none
   1233c:	mvn	w8, w27
   12340:	add	w8, w25, w8, lsr #31
   12344:	cmp	w8, #0x3
   12348:	b.ne	127a0 <mpfr_mul@@Base+0x1480>  // b.any
   1234c:	orr	x8, x5, x1
   12350:	cbz	x8, 127a0 <mpfr_mul@@Base+0x1480>
   12354:	str	x6, [x19, #16]
   12358:	b	116b0 <mpfr_mul@@Base+0x390>
   1235c:	str	x0, [x12]
   12360:	b	11bd8 <mpfr_mul@@Base+0x8b8>
   12364:	str	x0, [x9, #8]
   12368:	b	11bd8 <mpfr_mul@@Base+0x8b8>
   1236c:	ldr	x0, [x1, #8]
   12370:	cbnz	x0, 120a8 <mpfr_mul@@Base+0xd88>
   12374:	ldr	x0, [x29, #216]
   12378:	cbnz	x0, 12720 <mpfr_mul@@Base+0x1400>
   1237c:	ldr	x2, [x24]
   12380:	sub	x7, x7, #0x1
   12384:	ldr	x0, [x1, #8]!
   12388:	cbz	x0, 12380 <mpfr_mul@@Base+0x1060>
   1238c:	cbnz	x2, 1239c <mpfr_mul@@Base+0x107c>
   12390:	ldr	x0, [x24, #8]!
   12394:	sub	x4, x4, #0x1
   12398:	cbz	x0, 12390 <mpfr_mul@@Base+0x1070>
   1239c:	ldr	w2, [x21, #8]
   123a0:	lsl	x7, x7, #6
   123a4:	ldr	x0, [x21, #16]
   123a8:	str	x7, [x29, #224]
   123ac:	str	w2, [x29, #232]
   123b0:	cmp	x21, x22
   123b4:	stp	x0, x1, [x29, #240]
   123b8:	b.eq	126b4 <mpfr_mul@@Base+0x1394>  // b.none
   123bc:	ldr	w6, [x22, #8]
   123c0:	lsl	x4, x4, #6
   123c4:	ldr	x5, [x22, #16]
   123c8:	mov	w3, w25
   123cc:	mov	x0, x19
   123d0:	add	x2, x29, #0x100
   123d4:	add	x1, x29, #0xe0
   123d8:	str	x4, [x29, #256]
   123dc:	str	w6, [x29, #264]
   123e0:	stp	x5, x24, [x29, #272]
   123e4:	bl	11320 <mpfr_mul@@Base>
   123e8:	mov	w27, w0
   123ec:	b	118b4 <mpfr_mul@@Base+0x594>
   123f0:	sub	x0, x0, #0x1
   123f4:	cmp	x6, x0
   123f8:	ccmn	x2, #0x1, #0x0, eq  // eq = none
   123fc:	b.ne	12804 <mpfr_mul@@Base+0x14e4>  // b.any
   12400:	cmp	w25, #0x0
   12404:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   12408:	b.lt	12428 <mpfr_mul@@Base+0x1108>  // b.tstop
   1240c:	cmp	w25, #0x4
   12410:	b.eq	1264c <mpfr_mul@@Base+0x132c>  // b.none
   12414:	mvn	w4, w27
   12418:	add	w4, w25, w4, lsr #31
   1241c:	cmp	w4, #0x3
   12420:	b.ne	12804 <mpfr_mul@@Base+0x14e4>  // b.any
   12424:	cbz	x1, 12804 <mpfr_mul@@Base+0x14e4>
   12428:	str	x6, [x19, #16]
   1242c:	b	12058 <mpfr_mul@@Base+0xd38>
   12430:	add	x1, x14, x15
   12434:	mov	x2, x13
   12438:	mov	w3, #0x1                   	// #1
   1243c:	stp	x8, x6, [x29, #152]
   12440:	add	x1, x5, x1, lsl #3
   12444:	sub	x1, x1, #0x8
   12448:	stp	x7, x9, [x29, #168]
   1244c:	mov	x0, x1
   12450:	stp	x12, x4, [x29, #184]
   12454:	str	x5, [x29, #200]
   12458:	bl	bcc0 <__gmpn_lshift@plt>
   1245c:	ldp	x8, x6, [x29, #152]
   12460:	ldp	x7, x9, [x29, #168]
   12464:	ldp	x12, x4, [x29, #184]
   12468:	ldr	x5, [x29, #200]
   1246c:	b	12160 <mpfr_mul@@Base+0xe40>
   12470:	ldr	x0, [x26, #8]
   12474:	cbnz	x0, 120b0 <mpfr_mul@@Base+0xd90>
   12478:	ldr	x0, [x29, #216]
   1247c:	cbnz	x0, 12720 <mpfr_mul@@Base+0x1400>
   12480:	cbz	x3, 12380 <mpfr_mul@@Base+0x1060>
   12484:	b	1238c <mpfr_mul@@Base+0x106c>
   12488:	add	x12, x12, #0x3b
   1248c:	cmp	x23, x12
   12490:	ccmp	x7, #0x15, #0x4, le
   12494:	b.le	11410 <mpfr_mul@@Base+0xf0>
   12498:	cmp	x7, x3
   1249c:	b.le	12558 <mpfr_mul@@Base+0x1238>
   124a0:	sub	x11, x11, #0x8
   124a4:	cmp	x21, x22
   124a8:	b.eq	124b8 <mpfr_mul@@Base+0x1198>  // b.none
   124ac:	cmp	x4, x3
   124b0:	b.le	125dc <mpfr_mul@@Base+0x12bc>
   124b4:	sub	x26, x26, #0x8
   124b8:	add	x24, x3, #0x2
   124bc:	mov	w12, #0x40                  	// #64
   124c0:	clz	x0, x24
   124c4:	add	x15, x15, #0x40
   124c8:	sub	w12, w12, w0
   124cc:	cmp	x28, x13, lsl #1
   124d0:	lsl	x2, x13, #1
   124d4:	sub	x12, x15, w12, sxtw
   124d8:	b.ge	126a8 <mpfr_mul@@Base+0x1388>  // b.tcont
   124dc:	lsl	x1, x13, #4
   124e0:	cmp	x1, #0x4, lsl #12
   124e4:	b.hi	12668 <mpfr_mul@@Base+0x1348>  // b.pmore
   124e8:	sub	sp, sp, x1
   124ec:	mov	x5, sp
   124f0:	sub	x2, x2, x28
   124f4:	mov	x3, x13
   124f8:	mov	x13, x24
   124fc:	add	x5, x5, x2, lsl #3
   12500:	b	12104 <mpfr_mul@@Base+0xde4>
   12504:	str	x6, [x19, #16]
   12508:	b	1220c <mpfr_mul@@Base+0xeec>
   1250c:	mov	x5, x6
   12510:	mov	x6, #0x1                   	// #1
   12514:	b	114d0 <mpfr_mul@@Base+0x1b0>
   12518:	str	x0, [x26, #16]
   1251c:	b	11bd8 <mpfr_mul@@Base+0x8b8>
   12520:	str	x6, [x19, #16]
   12524:	b	1222c <mpfr_mul@@Base+0xf0c>
   12528:	orr	x3, x3, x1
   1252c:	cbz	x3, 12650 <mpfr_mul@@Base+0x1330>
   12530:	str	x6, [x19, #16]
   12534:	b	11b94 <mpfr_mul@@Base+0x874>
   12538:	str	x6, [x19, #16]
   1253c:	b	11f8c <mpfr_mul@@Base+0xc6c>
   12540:	orr	x2, x4, x2
   12544:	cbz	x2, 12650 <mpfr_mul@@Base+0x1330>
   12548:	str	x6, [x19, #16]
   1254c:	b	11ebc <mpfr_mul@@Base+0xb9c>
   12550:	str	x0, [x3]
   12554:	b	11bd8 <mpfr_mul@@Base+0x8b8>
   12558:	lsl	x0, x13, #3
   1255c:	cmp	x0, #0x4, lsl #12
   12560:	b.hi	126d0 <mpfr_mul@@Base+0x13b0>  // b.pmore
   12564:	add	x0, x0, #0xf
   12568:	and	x0, x0, #0xfffffffffffffff0
   1256c:	sub	sp, sp, x0
   12570:	mov	x11, sp
   12574:	mov	x0, x11
   12578:	add	x1, x1, x2, lsl #3
   1257c:	str	xzr, [x0], #8
   12580:	cmp	x0, x1
   12584:	b.eq	124a4 <mpfr_mul@@Base+0x1184>  // b.none
   12588:	lsl	x2, x3, #3
   1258c:	stp	x18, x8, [x29, #104]
   12590:	stp	x6, x7, [x29, #120]
   12594:	stp	x9, x5, [x29, #136]
   12598:	stp	x11, x13, [x29, #152]
   1259c:	stp	x15, x10, [x29, #168]
   125a0:	stp	x14, x4, [x29, #184]
   125a4:	str	x3, [x29, #200]
   125a8:	bl	ba10 <memcpy@plt>
   125ac:	ldp	x18, x8, [x29, #104]
   125b0:	ldp	x6, x7, [x29, #120]
   125b4:	ldp	x9, x5, [x29, #136]
   125b8:	ldp	x11, x13, [x29, #152]
   125bc:	ldp	x15, x10, [x29, #168]
   125c0:	ldp	x14, x4, [x29, #184]
   125c4:	ldr	x3, [x29, #200]
   125c8:	b	124a4 <mpfr_mul@@Base+0x1184>
   125cc:	orr	x1, x5, x1
   125d0:	cbz	x1, 12650 <mpfr_mul@@Base+0x1330>
   125d4:	str	x6, [x19, #16]
   125d8:	b	116bc <mpfr_mul@@Base+0x39c>
   125dc:	lsl	x1, x13, #3
   125e0:	cmp	x1, #0x4, lsl #12
   125e4:	b.hi	12744 <mpfr_mul@@Base+0x1424>  // b.pmore
   125e8:	add	x0, x1, #0xf
   125ec:	and	x0, x0, #0xfffffffffffffff0
   125f0:	sub	sp, sp, x0
   125f4:	mov	x26, sp
   125f8:	mov	x0, x26
   125fc:	ldr	x1, [x22, #24]
   12600:	str	xzr, [x0], #8
   12604:	add	x1, x1, x18, lsl #3
   12608:	cmp	x0, x1
   1260c:	b.eq	124b8 <mpfr_mul@@Base+0x1198>  // b.none
   12610:	lsl	x2, x3, #3
   12614:	stp	x8, x6, [x29, #112]
   12618:	stp	x7, x9, [x29, #128]
   1261c:	stp	x5, x11, [x29, #144]
   12620:	stp	x13, x15, [x29, #160]
   12624:	stp	x10, x14, [x29, #176]
   12628:	stp	x4, x3, [x29, #192]
   1262c:	bl	ba10 <memcpy@plt>
   12630:	ldp	x8, x6, [x29, #112]
   12634:	ldp	x7, x9, [x29, #128]
   12638:	ldp	x5, x11, [x29, #144]
   1263c:	ldp	x13, x15, [x29, #160]
   12640:	ldp	x10, x14, [x29, #176]
   12644:	ldp	x4, x3, [x29, #192]
   12648:	b	124b8 <mpfr_mul@@Base+0x1198>
   1264c:	cbnz	x1, 12428 <mpfr_mul@@Base+0x1108>
   12650:	mov	w2, w27
   12654:	mov	w1, w25
   12658:	mov	x0, x19
   1265c:	bl	c3c0 <mpfr_underflow@plt>
   12660:	mov	w27, w0
   12664:	b	118b4 <mpfr_mul@@Base+0x594>
   12668:	add	x0, x29, #0xd8
   1266c:	stp	x8, x6, [x29, #120]
   12670:	stp	x7, x9, [x29, #136]
   12674:	stp	x12, x11, [x29, #152]
   12678:	stp	x2, x13, [x29, #168]
   1267c:	stp	x10, x14, [x29, #184]
   12680:	str	x4, [x29, #200]
   12684:	bl	bdc0 <mpfr_tmp_allocate@plt>
   12688:	mov	x5, x0
   1268c:	ldp	x8, x6, [x29, #120]
   12690:	ldp	x7, x9, [x29, #136]
   12694:	ldp	x12, x11, [x29, #152]
   12698:	ldp	x2, x13, [x29, #168]
   1269c:	ldp	x10, x14, [x29, #184]
   126a0:	ldr	x4, [x29, #200]
   126a4:	b	124f0 <mpfr_mul@@Base+0x11d0>
   126a8:	mov	x3, x13
   126ac:	mov	x13, x24
   126b0:	b	12104 <mpfr_mul@@Base+0xde4>
   126b4:	add	x2, x29, #0xe0
   126b8:	mov	w3, w25
   126bc:	mov	x0, x19
   126c0:	mov	x1, x2
   126c4:	bl	11320 <mpfr_mul@@Base>
   126c8:	mov	w27, w0
   126cc:	b	118b4 <mpfr_mul@@Base+0x594>
   126d0:	mov	x1, x0
   126d4:	add	x0, x29, #0xd8
   126d8:	stp	x18, x2, [x29, #104]
   126dc:	stp	x8, x6, [x29, #120]
   126e0:	stp	x7, x9, [x29, #136]
   126e4:	stp	x5, x3, [x29, #152]
   126e8:	stp	x13, x15, [x29, #168]
   126ec:	stp	x10, x14, [x29, #184]
   126f0:	str	x4, [x29, #200]
   126f4:	bl	bdc0 <mpfr_tmp_allocate@plt>
   126f8:	mov	x11, x0
   126fc:	ldr	x1, [x21, #24]
   12700:	ldp	x18, x2, [x29, #104]
   12704:	ldp	x8, x6, [x29, #120]
   12708:	ldp	x7, x9, [x29, #136]
   1270c:	ldp	x5, x3, [x29, #152]
   12710:	ldp	x13, x15, [x29, #168]
   12714:	ldp	x10, x14, [x29, #184]
   12718:	ldr	x4, [x29, #200]
   1271c:	b	12574 <mpfr_mul@@Base+0x1254>
   12720:	stp	x11, x1, [x29, #176]
   12724:	stp	x7, x4, [x29, #192]
   12728:	bl	c410 <mpfr_tmp_free@plt>
   1272c:	ldp	x11, x1, [x29, #176]
   12730:	ldr	x2, [x26]
   12734:	ldp	x7, x4, [x29, #192]
   12738:	ldr	x3, [x11]
   1273c:	cbz	x3, 12380 <mpfr_mul@@Base+0x1060>
   12740:	b	1238c <mpfr_mul@@Base+0x106c>
   12744:	add	x0, x29, #0xd8
   12748:	stp	x18, x8, [x29, #104]
   1274c:	stp	x6, x7, [x29, #120]
   12750:	stp	x9, x5, [x29, #136]
   12754:	stp	x3, x11, [x29, #152]
   12758:	stp	x13, x15, [x29, #168]
   1275c:	stp	x10, x14, [x29, #184]
   12760:	str	x4, [x29, #200]
   12764:	bl	bdc0 <mpfr_tmp_allocate@plt>
   12768:	mov	x26, x0
   1276c:	ldp	x18, x8, [x29, #104]
   12770:	ldp	x6, x7, [x29, #120]
   12774:	ldp	x9, x5, [x29, #136]
   12778:	ldp	x3, x11, [x29, #152]
   1277c:	ldp	x13, x15, [x29, #168]
   12780:	ldp	x10, x14, [x29, #184]
   12784:	ldr	x4, [x29, #200]
   12788:	b	125f8 <mpfr_mul@@Base+0x12d8>
   1278c:	cbnz	w25, 12650 <mpfr_mul@@Base+0x1330>
   12790:	cmp	x6, x0
   12794:	b.ge	1285c <mpfr_mul@@Base+0x153c>  // b.tcont
   12798:	mov	w25, #0x1                   	// #1
   1279c:	b	12650 <mpfr_mul@@Base+0x1330>
   127a0:	cbnz	w25, 12650 <mpfr_mul@@Base+0x1330>
   127a4:	cmp	x6, x0
   127a8:	b.lt	12798 <mpfr_mul@@Base+0x1478>  // b.tstop
   127ac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   127b0:	cmp	x10, x0
   127b4:	b.ne	12650 <mpfr_mul@@Base+0x1330>  // b.any
   127b8:	orr	x2, x2, x12
   127bc:	and	x3, x2, x3
   127c0:	orr	x4, x3, x4
   127c4:	orr	x1, x4, x1
   127c8:	cmp	x1, #0x0
   127cc:	cset	w25, eq  // eq = none
   127d0:	b	12650 <mpfr_mul@@Base+0x1330>
   127d4:	mov	w2, w20
   127d8:	mov	w1, w25
   127dc:	mov	x0, x19
   127e0:	bl	bf40 <mpfr_overflow@plt>
   127e4:	mov	w27, w0
   127e8:	b	118b4 <mpfr_mul@@Base+0x594>
   127ec:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   127f0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   127f4:	add	x2, x2, #0x688
   127f8:	add	x0, x0, #0x6d8
   127fc:	mov	w1, #0x318                 	// #792
   12800:	bl	cb40 <mpfr_assert_fail@plt>
   12804:	cbnz	w25, 12650 <mpfr_mul@@Base+0x1330>
   12808:	cmp	x6, x0
   1280c:	b.lt	12798 <mpfr_mul@@Base+0x1478>  // b.tstop
   12810:	cmp	x1, #0x0
   12814:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12818:	ccmp	x2, x0, #0x0, eq  // eq = none
   1281c:	cset	w25, eq  // eq = none
   12820:	b	12650 <mpfr_mul@@Base+0x1330>
   12824:	cbnz	w25, 12650 <mpfr_mul@@Base+0x1330>
   12828:	cmp	x6, x0
   1282c:	b.lt	12798 <mpfr_mul@@Base+0x1478>  // b.tstop
   12830:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12834:	cmp	x3, x0
   12838:	b.ne	12650 <mpfr_mul@@Base+0x1330>  // b.any
   1283c:	orr	x5, x5, x13
   12840:	and	x1, x5, x1
   12844:	orr	x2, x1, x2
   12848:	cmp	x2, #0x0
   1284c:	cset	w25, eq  // eq = none
   12850:	b	12650 <mpfr_mul@@Base+0x1330>
   12854:	mov	w25, #0x1                   	// #1
   12858:	b	11dec <mpfr_mul@@Base+0xacc>
   1285c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12860:	cmp	x9, x0
   12864:	b.ne	12650 <mpfr_mul@@Base+0x1330>  // b.any
   12868:	orr	x3, x3, x1
   1286c:	cmp	x3, #0x0
   12870:	cset	w25, eq  // eq = none
   12874:	b	12650 <mpfr_mul@@Base+0x1330>

0000000000012878 <mpfr_mul_ui@@Base>:
   12878:	stp	x29, x30, [sp, #-112]!
   1287c:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   12880:	mov	x29, sp
   12884:	stp	x19, x20, [sp, #16]
   12888:	mov	x20, x2
   1288c:	mov	x19, x1
   12890:	ldr	x2, [x1, #16]
   12894:	stp	x21, x22, [sp, #32]
   12898:	mov	x21, x0
   1289c:	stp	x23, x24, [sp, #48]
   128a0:	cmp	x2, x4
   128a4:	stp	x25, x26, [sp, #64]
   128a8:	b.le	12bcc <mpfr_mul_ui@@Base+0x354>
   128ac:	mov	w22, w3
   128b0:	cmp	x20, #0x1
   128b4:	b.ls	129ec <mpfr_mul_ui@@Base+0x174>  // b.plast
   128b8:	sub	x2, x20, #0x1
   128bc:	tst	x2, x20
   128c0:	b.eq	12aa8 <mpfr_mul_ui@@Base+0x230>  // b.none
   128c4:	ldr	x2, [x1]
   128c8:	str	xzr, [x29, #104]
   128cc:	sub	x2, x2, #0x1
   128d0:	asr	x2, x2, #6
   128d4:	add	x23, x2, #0x2
   128d8:	add	x2, x2, #0x1
   128dc:	lsl	x25, x23, #3
   128e0:	cmp	x25, #0x4, lsl #12
   128e4:	b.hi	12cb4 <mpfr_mul_ui@@Base+0x43c>  // b.pmore
   128e8:	add	x0, x25, #0xf
   128ec:	and	x0, x0, #0xfffffffffffffff0
   128f0:	sub	sp, sp, x0
   128f4:	mov	x24, sp
   128f8:	ldr	x1, [x19, #24]
   128fc:	sub	x25, x25, #0x8
   12900:	mov	x3, x20
   12904:	mov	x0, x24
   12908:	bl	cd30 <__gmpn_mul_1@plt>
   1290c:	str	x0, [x24, x25]
   12910:	tbnz	x0, #63, 12cd0 <mpfr_mul_ui@@Base+0x458>
   12914:	clz	x3, x0
   12918:	mov	x2, x23
   1291c:	mov	w20, w3
   12920:	mov	x1, x24
   12924:	mov	x0, x24
   12928:	bl	bcc0 <__gmpn_lshift@plt>
   1292c:	ldr	x1, [x21]
   12930:	lsl	x23, x23, #6
   12934:	sub	x0, x23, #0x1
   12938:	sub	x7, x1, #0x1
   1293c:	cmp	x23, x1
   12940:	asr	x0, x0, #6
   12944:	asr	x7, x7, #6
   12948:	ldr	x23, [x21, #24]
   1294c:	b.le	12cd8 <mpfr_mul_ui@@Base+0x460>
   12950:	sub	x4, x0, x7
   12954:	neg	w1, w1
   12958:	ands	w6, w1, #0x3f
   1295c:	add	x2, x7, #0x1
   12960:	add	x1, x24, x4, lsl #3
   12964:	b.eq	12d1c <mpfr_mul_ui@@Base+0x4a4>  // b.none
   12968:	ldr	x3, [x24, x4, lsl #3]
   1296c:	sub	w6, w6, #0x1
   12970:	mov	x5, #0x1                   	// #1
   12974:	cmp	w22, #0x0
   12978:	lsl	x5, x5, x6
   1297c:	and	x8, x3, x5
   12980:	sub	x5, x5, #0x1
   12984:	ccmp	x8, #0x0, #0x4, ne  // ne = any
   12988:	and	x5, x5, x3
   1298c:	b.ne	129b8 <mpfr_mul_ui@@Base+0x140>  // b.any
   12990:	cmp	x4, #0x0
   12994:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   12998:	b.ne	129b8 <mpfr_mul_ui@@Base+0x140>  // b.any
   1299c:	mvn	x3, x4
   129a0:	add	x3, x1, x3, lsl #3
   129a4:	nop
   129a8:	ldr	x5, [x3, x4, lsl #3]
   129ac:	subs	x4, x4, #0x1
   129b0:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   129b4:	b.eq	129a8 <mpfr_mul_ui@@Base+0x130>  // b.none
   129b8:	mov	x25, #0x2                   	// #2
   129bc:	lsl	x25, x25, x6
   129c0:	cmp	w22, #0x5
   129c4:	b.eq	12b98 <mpfr_mul_ui@@Base+0x320>  // b.none
   129c8:	cbnz	w22, 12a24 <mpfr_mul_ui@@Base+0x1ac>
   129cc:	cbz	x8, 12ac4 <mpfr_mul_ui@@Base+0x24c>
   129d0:	ldr	x3, [x1]
   129d4:	ldr	w26, [x19, #8]
   129d8:	and	x4, x25, x3
   129dc:	orr	x5, x4, x5
   129e0:	cbnz	x5, 12a48 <mpfr_mul_ui@@Base+0x1d0>
   129e4:	neg	w26, w26
   129e8:	b	12ad0 <mpfr_mul_ui@@Base+0x258>
   129ec:	ldr	w3, [x1, #8]
   129f0:	cbnz	x20, 12ba0 <mpfr_mul_ui@@Base+0x328>
   129f4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   129f8:	mov	w26, #0x0                   	// #0
   129fc:	str	w3, [x21, #8]
   12a00:	str	x0, [x21, #16]
   12a04:	mov	sp, x29
   12a08:	mov	w0, w26
   12a0c:	ldp	x19, x20, [sp, #16]
   12a10:	ldp	x21, x22, [sp, #32]
   12a14:	ldp	x23, x24, [sp, #48]
   12a18:	ldp	x25, x26, [sp, #64]
   12a1c:	ldp	x29, x30, [sp], #112
   12a20:	ret
   12a24:	orr	x5, x5, x8
   12a28:	cmp	w22, #0x1
   12a2c:	b.eq	12ac4 <mpfr_mul_ui@@Base+0x24c>  // b.none
   12a30:	ldr	w26, [x19, #8]
   12a34:	add	w3, w22, w26, lsr #31
   12a38:	cmp	w3, #0x3
   12a3c:	b.eq	12ac4 <mpfr_mul_ui@@Base+0x24c>  // b.none
   12a40:	cbz	x5, 12b98 <mpfr_mul_ui@@Base+0x320>
   12a44:	ldr	x3, [x1]
   12a48:	adds	x3, x3, x25
   12a4c:	str	x3, [x23]
   12a50:	cset	x4, cs  // cs = hs, nlast
   12a54:	b.cc	12bfc <mpfr_mul_ui@@Base+0x384>  // b.lo, b.ul, b.last
   12a58:	mov	x3, #0x1                   	// #1
   12a5c:	b	12a78 <mpfr_mul_ui@@Base+0x200>
   12a60:	ldr	x4, [x1, x3, lsl #3]
   12a64:	add	x0, x3, #0x1
   12a68:	add	x4, x4, #0x1
   12a6c:	str	x4, [x23, x3, lsl #3]
   12a70:	cbnz	x4, 12d60 <mpfr_mul_ui@@Base+0x4e8>
   12a74:	mov	x3, x0
   12a78:	cmp	x2, x3
   12a7c:	b.gt	12a60 <mpfr_mul_ui@@Base+0x1e8>
   12a80:	add	x2, x23, x2, lsl #3
   12a84:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12a88:	sub	w20, w20, #0x1
   12a8c:	stur	x0, [x2, #-8]
   12a90:	ldr	x3, [x23]
   12a94:	nop
   12a98:	neg	x6, x25
   12a9c:	and	x3, x6, x3
   12aa0:	str	x3, [x23]
   12aa4:	b	12af4 <mpfr_mul_ui@@Base+0x27c>
   12aa8:	clz	x2, x2
   12aac:	mov	w4, #0x40                  	// #64
   12ab0:	sub	w2, w4, w2
   12ab4:	sxtw	x2, w2
   12ab8:	bl	bb90 <mpfr_mul_2si@plt>
   12abc:	mov	w26, w0
   12ac0:	b	12a04 <mpfr_mul_ui@@Base+0x18c>
   12ac4:	cbz	x5, 12b98 <mpfr_mul_ui@@Base+0x320>
   12ac8:	ldr	w3, [x19, #8]
   12acc:	neg	w26, w3
   12ad0:	cmp	x23, x1
   12ad4:	b.eq	12ae4 <mpfr_mul_ui@@Base+0x26c>  // b.none
   12ad8:	lsl	x2, x2, #3
   12adc:	mov	x0, x23
   12ae0:	bl	ba10 <memcpy@plt>
   12ae4:	ldr	x0, [x23]
   12ae8:	neg	x6, x25
   12aec:	and	x6, x0, x6
   12af0:	str	x6, [x23]
   12af4:	ldr	x0, [x29, #104]
   12af8:	cbnz	x0, 12d14 <mpfr_mul_ui@@Base+0x49c>
   12afc:	mrs	x3, tpidr_el0
   12b00:	mov	w1, #0x40                  	// #64
   12b04:	sub	w20, w1, w20
   12b08:	ldr	w2, [x19, #8]
   12b0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   12b10:	ldr	x1, [x0, #2544]
   12b14:	add	x0, x0, #0x9f0
   12b18:	blr	x1
   12b1c:	ldr	x0, [x3, x0]
   12b20:	sxtw	x20, w20
   12b24:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   12b28:	add	x1, x20, x1
   12b2c:	cmp	x1, x0
   12b30:	b.gt	12e88 <mpfr_mul_ui@@Base+0x610>
   12b34:	ldr	x1, [x19, #16]
   12b38:	sub	x0, x0, x20
   12b3c:	cmp	x1, x0
   12b40:	b.gt	12e88 <mpfr_mul_ui@@Base+0x610>
   12b44:	add	x20, x20, x1
   12b48:	str	w2, [x21, #8]
   12b4c:	str	x20, [x21, #16]
   12b50:	cbz	w26, 12a04 <mpfr_mul_ui@@Base+0x18c>
   12b54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   12b58:	ldr	x1, [x0, #2576]
   12b5c:	add	x0, x0, #0xa10
   12b60:	blr	x1
   12b64:	add	x0, x3, x0
   12b68:	ldr	w1, [x0]
   12b6c:	orr	w1, w1, #0x8
   12b70:	str	w1, [x0]
   12b74:	mov	w0, w26
   12b78:	mov	sp, x29
   12b7c:	ldp	x19, x20, [sp, #16]
   12b80:	ldp	x21, x22, [sp, #32]
   12b84:	ldp	x23, x24, [sp, #48]
   12b88:	ldp	x25, x26, [sp, #64]
   12b8c:	ldp	x29, x30, [sp], #112
   12b90:	ret
   12b94:	mov	x25, #0x1                   	// #1
   12b98:	mov	w26, #0x0                   	// #0
   12b9c:	b	12ad0 <mpfr_mul_ui@@Base+0x258>
   12ba0:	mov	w2, w22
   12ba4:	bl	c6a0 <mpfr_set4@plt>
   12ba8:	mov	sp, x29
   12bac:	mov	w26, w0
   12bb0:	mov	w0, w26
   12bb4:	ldp	x19, x20, [sp, #16]
   12bb8:	ldp	x21, x22, [sp, #32]
   12bbc:	ldp	x23, x24, [sp, #48]
   12bc0:	ldp	x25, x26, [sp, #64]
   12bc4:	ldp	x29, x30, [sp], #112
   12bc8:	ret
   12bcc:	mov	x0, #0x2                   	// #2
   12bd0:	movk	x0, #0x8000, lsl #48
   12bd4:	cmp	x2, x0
   12bd8:	b.eq	12e0c <mpfr_mul_ui@@Base+0x594>  // b.none
   12bdc:	cmp	x2, x4
   12be0:	b.ne	12c7c <mpfr_mul_ui@@Base+0x404>  // b.any
   12be4:	cbz	x20, 12e0c <mpfr_mul_ui@@Base+0x594>
   12be8:	ldr	w0, [x1, #8]
   12bec:	mov	w26, #0x0                   	// #0
   12bf0:	str	w0, [x21, #8]
   12bf4:	str	x2, [x21, #16]
   12bf8:	b	12a04 <mpfr_mul_ui@@Base+0x18c>
   12bfc:	cmp	x23, x1
   12c00:	b.eq	12a98 <mpfr_mul_ui@@Base+0x220>  // b.none
   12c04:	cmp	x2, #0x1
   12c08:	b.eq	12a98 <mpfr_mul_ui@@Base+0x220>  // b.none
   12c0c:	sub	x6, x0, x7
   12c10:	mov	x3, #0x1                   	// #1
   12c14:	add	x6, x6, #0x3
   12c18:	sub	x5, x3, x7
   12c1c:	add	x0, x5, x0
   12c20:	add	x5, x23, #0x8
   12c24:	add	x6, x24, x6, lsl #3
   12c28:	add	x8, x23, #0x18
   12c2c:	add	x24, x24, x0, lsl #3
   12c30:	cmp	x5, x6
   12c34:	ccmp	x24, x8, #0x2, cc  // cc = lo, ul, last
   12c38:	sub	x0, x7, #0x1
   12c3c:	ccmp	x0, #0x9, #0x0, cs  // cs = hs, nlast
   12c40:	b.ls	12c94 <mpfr_mul_ui@@Base+0x41c>  // b.plast
   12c44:	lsr	x0, x7, #1
   12c48:	lsl	x0, x0, #4
   12c4c:	nop
   12c50:	ldr	q0, [x24, x4]
   12c54:	str	q0, [x5, x4]
   12c58:	add	x4, x4, #0x10
   12c5c:	cmp	x4, x0
   12c60:	b.ne	12c50 <mpfr_mul_ui@@Base+0x3d8>  // b.any
   12c64:	orr	x0, x7, #0x1
   12c68:	tbz	w7, #0, 12c74 <mpfr_mul_ui@@Base+0x3fc>
   12c6c:	ldr	x1, [x1, x0, lsl #3]
   12c70:	str	x1, [x23, x0, lsl #3]
   12c74:	ldr	x3, [x23]
   12c78:	b	12a98 <mpfr_mul_ui@@Base+0x220>
   12c7c:	ldr	w1, [x1, #8]
   12c80:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   12c84:	mov	w26, #0x0                   	// #0
   12c88:	str	w1, [x21, #8]
   12c8c:	str	x0, [x21, #16]
   12c90:	b	12a04 <mpfr_mul_ui@@Base+0x18c>
   12c94:	mov	x0, x3
   12c98:	ldr	x3, [x1, x0, lsl #3]
   12c9c:	str	x3, [x23, x0, lsl #3]
   12ca0:	add	x0, x0, #0x1
   12ca4:	cmp	x2, x0
   12ca8:	b.ne	12c98 <mpfr_mul_ui@@Base+0x420>  // b.any
   12cac:	ldr	x3, [x23]
   12cb0:	b	12a98 <mpfr_mul_ui@@Base+0x220>
   12cb4:	mov	x1, x25
   12cb8:	add	x0, x29, #0x68
   12cbc:	str	x2, [x29, #88]
   12cc0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   12cc4:	mov	x24, x0
   12cc8:	ldr	x2, [x29, #88]
   12ccc:	b	128f8 <mpfr_mul_ui@@Base+0x80>
   12cd0:	mov	w20, #0x0                   	// #0
   12cd4:	b	1292c <mpfr_mul_ui@@Base+0xb4>
   12cd8:	sub	x7, x7, x0
   12cdc:	add	x2, x0, #0x1
   12ce0:	lsl	x25, x7, #3
   12ce4:	add	x0, x23, x25
   12ce8:	cmp	x0, x24
   12cec:	b.eq	12cfc <mpfr_mul_ui@@Base+0x484>  // b.none
   12cf0:	lsl	x2, x2, #3
   12cf4:	mov	x1, x24
   12cf8:	bl	ba10 <memcpy@plt>
   12cfc:	mov	x2, x25
   12d00:	mov	x0, x23
   12d04:	mov	w1, #0x0                   	// #0
   12d08:	mov	w26, #0x0                   	// #0
   12d0c:	bl	c110 <memset@plt>
   12d10:	b	12af4 <mpfr_mul_ui@@Base+0x27c>
   12d14:	bl	c410 <mpfr_tmp_free@plt>
   12d18:	b	12afc <mpfr_mul_ui@@Base+0x284>
   12d1c:	ldur	x5, [x1, #-8]
   12d20:	cmp	w22, #0x0
   12d24:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   12d28:	and	x8, x5, #0x8000000000000000
   12d2c:	and	x6, x5, #0x7fffffffffffffff
   12d30:	b.lt	12e44 <mpfr_mul_ui@@Base+0x5cc>  // b.tstop
   12d34:	subs	x3, x4, #0x1
   12d38:	ccmp	x6, #0x0, #0x0, ne  // ne = any
   12d3c:	b.ne	12e7c <mpfr_mul_ui@@Base+0x604>  // b.any
   12d40:	mvn	x4, x4
   12d44:	add	x4, x1, x4, lsl #3
   12d48:	ldr	x5, [x4, x3, lsl #3]
   12d4c:	subs	x3, x3, #0x1
   12d50:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   12d54:	b.eq	12d48 <mpfr_mul_ui@@Base+0x4d0>  // b.none
   12d58:	mov	x25, #0x1                   	// #1
   12d5c:	b	129c0 <mpfr_mul_ui@@Base+0x148>
   12d60:	cmp	x23, x1
   12d64:	b.eq	12c74 <mpfr_mul_ui@@Base+0x3fc>  // b.none
   12d68:	cmp	x3, x7
   12d6c:	b.ge	12c74 <mpfr_mul_ui@@Base+0x3fc>  // b.tcont
   12d70:	add	x3, x3, #0x3
   12d74:	sub	x6, x7, x0
   12d78:	lsl	x3, x3, #3
   12d7c:	sub	x4, x3, #0x10
   12d80:	add	x8, x23, x3
   12d84:	add	x5, x1, x4
   12d88:	add	x3, x1, x3
   12d8c:	cmp	x5, x8
   12d90:	add	x4, x23, x4
   12d94:	ccmp	x4, x3, #0x2, cc  // cc = lo, ul, last
   12d98:	cset	w8, cs  // cs = hs, nlast
   12d9c:	cmp	x6, #0x9
   12da0:	ccmp	x0, x7, #0x0, hi  // hi = pmore
   12da4:	cset	w3, le
   12da8:	tst	w8, w3
   12dac:	b.eq	12df4 <mpfr_mul_ui@@Base+0x57c>  // b.none
   12db0:	sub	x2, x2, x0
   12db4:	cmp	x0, x7
   12db8:	csinc	x6, x2, xzr, le
   12dbc:	mov	x2, #0x0                   	// #0
   12dc0:	lsr	x3, x6, #1
   12dc4:	lsl	x3, x3, #4
   12dc8:	ldr	q0, [x5, x2]
   12dcc:	str	q0, [x4, x2]
   12dd0:	add	x2, x2, #0x10
   12dd4:	cmp	x3, x2
   12dd8:	b.ne	12dc8 <mpfr_mul_ui@@Base+0x550>  // b.any
   12ddc:	and	x2, x6, #0xfffffffffffffffe
   12de0:	add	x0, x2, x0
   12de4:	cmp	x2, x6
   12de8:	b.ne	12c6c <mpfr_mul_ui@@Base+0x3f4>  // b.any
   12dec:	ldr	x3, [x23]
   12df0:	b	12a98 <mpfr_mul_ui@@Base+0x220>
   12df4:	ldr	x2, [x1, x0, lsl #3]
   12df8:	str	x2, [x23, x0, lsl #3]
   12dfc:	cmp	x7, x0
   12e00:	add	x0, x0, #0x1
   12e04:	b.gt	12df4 <mpfr_mul_ui@@Base+0x57c>
   12e08:	b	12c74 <mpfr_mul_ui@@Base+0x3fc>
   12e0c:	mrs	x1, tpidr_el0
   12e10:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   12e14:	ldr	x2, [x0, #2576]
   12e18:	add	x0, x0, #0xa10
   12e1c:	blr	x2
   12e20:	add	x0, x1, x0
   12e24:	mov	x1, #0x2                   	// #2
   12e28:	movk	x1, #0x8000, lsl #48
   12e2c:	str	x1, [x21, #16]
   12e30:	mov	w26, #0x0                   	// #0
   12e34:	ldr	w1, [x0]
   12e38:	orr	w1, w1, #0x4
   12e3c:	str	w1, [x0]
   12e40:	b	12a04 <mpfr_mul_ui@@Base+0x18c>
   12e44:	cmp	w22, #0x5
   12e48:	b.eq	12b94 <mpfr_mul_ui@@Base+0x31c>  // b.none
   12e4c:	cmp	w22, #0x1
   12e50:	b.eq	12e70 <mpfr_mul_ui@@Base+0x5f8>  // b.none
   12e54:	ldr	w26, [x19, #8]
   12e58:	mov	x25, #0x1                   	// #1
   12e5c:	mov	w3, w26
   12e60:	add	w4, w22, w26, lsr #31
   12e64:	cmp	w4, #0x3
   12e68:	b.ne	12a40 <mpfr_mul_ui@@Base+0x1c8>  // b.any
   12e6c:	b	12acc <mpfr_mul_ui@@Base+0x254>
   12e70:	ldr	w3, [x19, #8]
   12e74:	mov	x25, #0x1                   	// #1
   12e78:	b	12acc <mpfr_mul_ui@@Base+0x254>
   12e7c:	mov	x5, x6
   12e80:	mov	x25, #0x1                   	// #1
   12e84:	b	129c0 <mpfr_mul_ui@@Base+0x148>
   12e88:	mov	w1, w22
   12e8c:	mov	x0, x21
   12e90:	bl	bf40 <mpfr_overflow@plt>
   12e94:	mov	w26, w0
   12e98:	b	12a04 <mpfr_mul_ui@@Base+0x18c>
   12e9c:	nop

0000000000012ea0 <mpfr_set4@@Base>:
   12ea0:	stp	x29, x30, [sp, #-48]!
   12ea4:	mov	x8, x0
   12ea8:	mov	w11, w2
   12eac:	mov	x29, sp
   12eb0:	ldr	x0, [x1, #16]
   12eb4:	str	x21, [sp, #32]
   12eb8:	str	x0, [x8, #16]
   12ebc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   12ec0:	str	w3, [x8, #8]
   12ec4:	ldr	x0, [x1, #16]
   12ec8:	cmp	x0, x2
   12ecc:	b.le	131e0 <mpfr_set4@@Base+0x340>
   12ed0:	ldr	x5, [x1]
   12ed4:	ldr	x4, [x8]
   12ed8:	cmp	x5, x4
   12edc:	b.eq	13050 <mpfr_set4@@Base+0x1b0>  // b.none
   12ee0:	sub	x5, x5, #0x1
   12ee4:	sub	x0, x4, #0x1
   12ee8:	stp	x19, x20, [sp, #16]
   12eec:	asr	x7, x5, #6
   12ef0:	asr	x0, x0, #6
   12ef4:	ldr	x12, [x1, #24]
   12ef8:	ldr	x19, [x8, #24]
   12efc:	b.le	1321c <mpfr_set4@@Base+0x37c>
   12f00:	sub	x10, x7, x0
   12f04:	neg	w4, w4
   12f08:	ands	w4, w4, #0x3f
   12f0c:	add	x2, x0, #0x1
   12f10:	add	x1, x12, x10, lsl #3
   12f14:	b.eq	130e4 <mpfr_set4@@Base+0x244>  // b.none
   12f18:	ldr	x5, [x12, x10, lsl #3]
   12f1c:	sub	w6, w4, #0x1
   12f20:	mov	x4, #0x1                   	// #1
   12f24:	cmp	w11, #0x0
   12f28:	lsl	x4, x4, x6
   12f2c:	and	x13, x5, x4
   12f30:	sub	x4, x4, #0x1
   12f34:	ccmp	x13, #0x0, #0x4, ne  // ne = any
   12f38:	and	x4, x4, x5
   12f3c:	b.ne	12f68 <mpfr_set4@@Base+0xc8>  // b.any
   12f40:	cmp	x10, #0x0
   12f44:	mov	x5, x10
   12f48:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   12f4c:	b.ne	12f68 <mpfr_set4@@Base+0xc8>  // b.any
   12f50:	mvn	x9, x10
   12f54:	add	x9, x1, x9, lsl #3
   12f58:	ldr	x4, [x9, x5, lsl #3]
   12f5c:	subs	x5, x5, #0x1
   12f60:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   12f64:	b.eq	12f58 <mpfr_set4@@Base+0xb8>  // b.none
   12f68:	mov	x20, #0x2                   	// #2
   12f6c:	lsl	x20, x20, x6
   12f70:	cmp	w11, #0x5
   12f74:	b.eq	13128 <mpfr_set4@@Base+0x288>  // b.none
   12f78:	cbnz	w11, 13088 <mpfr_set4@@Base+0x1e8>
   12f7c:	cbz	x13, 130a0 <mpfr_set4@@Base+0x200>
   12f80:	ldr	x5, [x12, x10, lsl #3]
   12f84:	and	x6, x20, x5
   12f88:	orr	x4, x6, x4
   12f8c:	cbz	x4, 130a4 <mpfr_set4@@Base+0x204>
   12f90:	adds	x5, x5, x20
   12f94:	str	x5, [x19]
   12f98:	cset	x4, cs  // cs = hs, nlast
   12f9c:	b.cc	13168 <mpfr_set4@@Base+0x2c8>  // b.lo, b.ul, b.last
   12fa0:	mov	x5, #0x1                   	// #1
   12fa4:	b	12fc0 <mpfr_set4@@Base+0x120>
   12fa8:	ldr	x7, [x1, x5, lsl #3]
   12fac:	add	x4, x5, #0x1
   12fb0:	add	x7, x7, #0x1
   12fb4:	str	x7, [x19, x5, lsl #3]
   12fb8:	cbnz	x7, 1325c <mpfr_set4@@Base+0x3bc>
   12fbc:	mov	x5, x4
   12fc0:	cmp	x2, x5
   12fc4:	b.gt	12fa8 <mpfr_set4@@Base+0x108>
   12fc8:	add	x2, x19, x2, lsl #3
   12fcc:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   12fd0:	mrs	x4, tpidr_el0
   12fd4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   12fd8:	ldr	x5, [x0, #2544]
   12fdc:	add	x0, x0, #0x9f0
   12fe0:	blr	x5
   12fe4:	stur	x1, [x2, #-8]
   12fe8:	ldr	x1, [x8, #16]
   12fec:	ldr	x2, [x4, x0]
   12ff0:	add	x0, x1, #0x1
   12ff4:	str	x0, [x8, #16]
   12ff8:	cmp	x0, x2
   12ffc:	b.gt	1333c <mpfr_set4@@Base+0x49c>
   13000:	ldr	x5, [x19]
   13004:	neg	x6, x20
   13008:	and	x5, x6, x5
   1300c:	str	x5, [x19]
   13010:	mov	w21, w3
   13014:	cbz	w21, 130d0 <mpfr_set4@@Base+0x230>
   13018:	mrs	x1, tpidr_el0
   1301c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   13020:	ldr	x2, [x0, #2576]
   13024:	add	x0, x0, #0xa10
   13028:	blr	x2
   1302c:	add	x0, x1, x0
   13030:	ldp	x19, x20, [sp, #16]
   13034:	ldr	w1, [x0]
   13038:	orr	w1, w1, #0x8
   1303c:	str	w1, [x0]
   13040:	mov	w0, w21
   13044:	ldr	x21, [sp, #32]
   13048:	ldp	x29, x30, [sp], #48
   1304c:	ret
   13050:	ldr	x1, [x1, #24]
   13054:	mov	w21, #0x0                   	// #0
   13058:	ldr	x0, [x8, #24]
   1305c:	cmp	x0, x1
   13060:	b.eq	13078 <mpfr_set4@@Base+0x1d8>  // b.none
   13064:	sub	x5, x5, #0x1
   13068:	asr	x5, x5, #6
   1306c:	add	x2, x5, #0x1
   13070:	lsl	x2, x2, #3
   13074:	bl	ba10 <memcpy@plt>
   13078:	mov	w0, w21
   1307c:	ldr	x21, [sp, #32]
   13080:	ldp	x29, x30, [sp], #48
   13084:	ret
   13088:	orr	x4, x4, x13
   1308c:	cmp	w11, #0x1
   13090:	b.eq	130a0 <mpfr_set4@@Base+0x200>  // b.none
   13094:	add	w5, w11, w3, lsr #31
   13098:	cmp	w5, #0x3
   1309c:	b.ne	13150 <mpfr_set4@@Base+0x2b0>  // b.any
   130a0:	cbz	x4, 13128 <mpfr_set4@@Base+0x288>
   130a4:	neg	w21, w3
   130a8:	cmp	x19, x1
   130ac:	b.eq	130bc <mpfr_set4@@Base+0x21c>  // b.none
   130b0:	lsl	x2, x2, #3
   130b4:	mov	x0, x19
   130b8:	bl	ba10 <memcpy@plt>
   130bc:	ldr	x0, [x19]
   130c0:	neg	x6, x20
   130c4:	and	x6, x0, x6
   130c8:	str	x6, [x19]
   130cc:	cbnz	w21, 13018 <mpfr_set4@@Base+0x178>
   130d0:	mov	w0, w21
   130d4:	ldp	x19, x20, [sp, #16]
   130d8:	ldr	x21, [sp, #32]
   130dc:	ldp	x29, x30, [sp], #48
   130e0:	ret
   130e4:	ldur	x4, [x1, #-8]
   130e8:	cmp	w11, #0x0
   130ec:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   130f0:	and	x13, x4, #0x8000000000000000
   130f4:	and	x6, x4, #0x7fffffffffffffff
   130f8:	b.lt	13130 <mpfr_set4@@Base+0x290>  // b.tstop
   130fc:	subs	x5, x10, #0x1
   13100:	ccmp	x6, #0x0, #0x0, ne  // ne = any
   13104:	b.ne	13330 <mpfr_set4@@Base+0x490>  // b.any
   13108:	mvn	x6, x10
   1310c:	add	x6, x1, x6, lsl #3
   13110:	ldr	x4, [x6, x5, lsl #3]
   13114:	subs	x5, x5, #0x1
   13118:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   1311c:	b.eq	13110 <mpfr_set4@@Base+0x270>  // b.none
   13120:	mov	x20, #0x1                   	// #1
   13124:	b	12f70 <mpfr_set4@@Base+0xd0>
   13128:	mov	w21, #0x0                   	// #0
   1312c:	b	130a8 <mpfr_set4@@Base+0x208>
   13130:	cmp	w11, #0x5
   13134:	mov	x20, #0x1                   	// #1
   13138:	b.eq	13128 <mpfr_set4@@Base+0x288>  // b.none
   1313c:	cmp	w11, #0x1
   13140:	b.eq	130a4 <mpfr_set4@@Base+0x204>  // b.none
   13144:	add	w5, w11, w3, lsr #31
   13148:	cmp	w5, #0x3
   1314c:	b.eq	130a4 <mpfr_set4@@Base+0x204>  // b.none
   13150:	cbz	x4, 13128 <mpfr_set4@@Base+0x288>
   13154:	ldr	x5, [x12, x10, lsl #3]
   13158:	adds	x5, x5, x20
   1315c:	str	x5, [x19]
   13160:	cset	x4, cs  // cs = hs, nlast
   13164:	b.cs	12fa0 <mpfr_set4@@Base+0x100>  // b.hs, b.nlast
   13168:	cmp	x19, x1
   1316c:	b.eq	13004 <mpfr_set4@@Base+0x164>  // b.none
   13170:	cmp	x2, #0x1
   13174:	b.eq	13004 <mpfr_set4@@Base+0x164>  // b.none
   13178:	add	x6, x7, #0x3
   1317c:	add	x5, x7, #0x1
   13180:	sub	x7, x6, x0
   13184:	sub	x5, x5, x0
   13188:	add	x6, x19, #0x8
   1318c:	add	x8, x19, #0x18
   13190:	add	x7, x12, x7, lsl #3
   13194:	add	x12, x12, x5, lsl #3
   13198:	cmp	x6, x7
   1319c:	sub	x5, x0, #0x1
   131a0:	ccmp	x8, x12, #0x0, cc  // cc = lo, ul, last
   131a4:	ccmp	x5, #0x9, #0x0, ls  // ls = plast
   131a8:	b.ls	13310 <mpfr_set4@@Base+0x470>  // b.plast
   131ac:	lsr	x2, x0, #1
   131b0:	lsl	x2, x2, #4
   131b4:	nop
   131b8:	ldr	q0, [x12, x4]
   131bc:	str	q0, [x6, x4]
   131c0:	add	x4, x4, #0x10
   131c4:	cmp	x2, x4
   131c8:	b.ne	131b8 <mpfr_set4@@Base+0x318>  // b.any
   131cc:	orr	x2, x0, #0x1
   131d0:	tbz	w0, #0, 13000 <mpfr_set4@@Base+0x160>
   131d4:	ldr	x0, [x1, x2, lsl #3]
   131d8:	str	x0, [x19, x2, lsl #3]
   131dc:	b	13000 <mpfr_set4@@Base+0x160>
   131e0:	mov	x1, #0x2                   	// #2
   131e4:	mov	w21, #0x0                   	// #0
   131e8:	movk	x1, #0x8000, lsl #48
   131ec:	cmp	x0, x1
   131f0:	b.ne	13078 <mpfr_set4@@Base+0x1d8>  // b.any
   131f4:	mrs	x1, tpidr_el0
   131f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   131fc:	ldr	x2, [x0, #2576]
   13200:	add	x0, x0, #0xa10
   13204:	blr	x2
   13208:	add	x0, x1, x0
   1320c:	ldr	w1, [x0]
   13210:	orr	w1, w1, #0x4
   13214:	str	w1, [x0]
   13218:	b	13078 <mpfr_set4@@Base+0x1d8>
   1321c:	sub	x0, x0, x7
   13220:	add	x2, x7, #0x1
   13224:	lsl	x20, x0, #3
   13228:	add	x0, x19, x20
   1322c:	cmp	x0, x12
   13230:	b.eq	13240 <mpfr_set4@@Base+0x3a0>  // b.none
   13234:	lsl	x2, x2, #3
   13238:	mov	x1, x12
   1323c:	bl	ba10 <memcpy@plt>
   13240:	mov	x2, x20
   13244:	mov	x0, x19
   13248:	mov	w1, #0x0                   	// #0
   1324c:	mov	w21, #0x0                   	// #0
   13250:	bl	c110 <memset@plt>
   13254:	ldp	x19, x20, [sp, #16]
   13258:	b	13078 <mpfr_set4@@Base+0x1d8>
   1325c:	cmp	x19, x1
   13260:	b.eq	13000 <mpfr_set4@@Base+0x160>  // b.none
   13264:	cmp	x5, x0
   13268:	b.ge	13000 <mpfr_set4@@Base+0x160>  // b.tcont
   1326c:	add	x5, x5, #0x3
   13270:	sub	x8, x0, x4
   13274:	lsl	x5, x5, #3
   13278:	sub	x6, x5, #0x10
   1327c:	add	x9, x19, x5
   13280:	add	x7, x1, x6
   13284:	add	x5, x1, x5
   13288:	cmp	x7, x9
   1328c:	add	x6, x19, x6
   13290:	ccmp	x6, x5, #0x2, cc  // cc = lo, ul, last
   13294:	cset	w9, cs  // cs = hs, nlast
   13298:	cmp	x8, #0x9
   1329c:	ccmp	x4, x0, #0x0, hi  // hi = pmore
   132a0:	cset	w5, le
   132a4:	tst	w9, w5
   132a8:	b.eq	132f8 <mpfr_set4@@Base+0x458>  // b.none
   132ac:	sub	x2, x2, x4
   132b0:	cmp	x4, x0
   132b4:	csinc	x5, x2, xzr, le
   132b8:	mov	x0, #0x0                   	// #0
   132bc:	lsr	x2, x5, #1
   132c0:	lsl	x2, x2, #4
   132c4:	nop
   132c8:	ldr	q0, [x7, x0]
   132cc:	str	q0, [x6, x0]
   132d0:	add	x0, x0, #0x10
   132d4:	cmp	x0, x2
   132d8:	b.ne	132c8 <mpfr_set4@@Base+0x428>  // b.any
   132dc:	and	x0, x5, #0xfffffffffffffffe
   132e0:	add	x4, x0, x4
   132e4:	cmp	x5, x0
   132e8:	b.eq	13000 <mpfr_set4@@Base+0x160>  // b.none
   132ec:	ldr	x0, [x1, x4, lsl #3]
   132f0:	str	x0, [x19, x4, lsl #3]
   132f4:	b	13000 <mpfr_set4@@Base+0x160>
   132f8:	ldr	x2, [x1, x4, lsl #3]
   132fc:	str	x2, [x19, x4, lsl #3]
   13300:	cmp	x4, x0
   13304:	add	x4, x4, #0x1
   13308:	b.lt	132f8 <mpfr_set4@@Base+0x458>  // b.tstop
   1330c:	b	13000 <mpfr_set4@@Base+0x160>
   13310:	mov	x0, #0x1                   	// #1
   13314:	nop
   13318:	ldr	x4, [x1, x0, lsl #3]
   1331c:	str	x4, [x19, x0, lsl #3]
   13320:	add	x0, x0, #0x1
   13324:	cmp	x2, x0
   13328:	b.ne	13318 <mpfr_set4@@Base+0x478>  // b.any
   1332c:	b	13000 <mpfr_set4@@Base+0x160>
   13330:	mov	x4, x6
   13334:	mov	x20, #0x1                   	// #1
   13338:	b	12f70 <mpfr_set4@@Base+0xd0>
   1333c:	ldp	x19, x20, [sp, #16]
   13340:	mov	w2, w3
   13344:	ldr	x21, [sp, #32]
   13348:	mov	w1, w11
   1334c:	ldp	x29, x30, [sp], #48
   13350:	mov	x0, x8
   13354:	b	bf40 <mpfr_overflow@plt>

0000000000013358 <mpfr_set_prec@@Base>:
   13358:	stp	x29, x30, [sp, #-48]!
   1335c:	sub	x2, x1, #0x1
   13360:	mov	x29, sp
   13364:	stp	x19, x20, [sp, #16]
   13368:	mov	x19, x0
   1336c:	mov	x0, #0xfffffffffffffefe    	// #-258
   13370:	str	x21, [sp, #32]
   13374:	movk	x0, #0x7fff, lsl #48
   13378:	cmp	x2, x0
   1337c:	b.hi	13400 <mpfr_set_prec@@Base+0xa8>  // b.pmore
   13380:	ldr	x0, [x19, #24]
   13384:	mov	x20, x1
   13388:	asr	x2, x2, #6
   1338c:	add	x21, x2, #0x1
   13390:	ldur	x1, [x0, #-8]
   13394:	cmp	x21, x1
   13398:	b.gt	133bc <mpfr_set_prec@@Base+0x64>
   1339c:	mov	x0, #0x2                   	// #2
   133a0:	movk	x0, #0x8000, lsl #48
   133a4:	ldr	x21, [sp, #32]
   133a8:	str	x20, [x19]
   133ac:	str	x0, [x19, #16]
   133b0:	ldp	x19, x20, [sp, #16]
   133b4:	ldp	x29, x30, [sp], #48
   133b8:	ret
   133bc:	add	x1, x1, #0x1
   133c0:	add	x2, x2, #0x2
   133c4:	sub	x0, x0, #0x8
   133c8:	lsl	x1, x1, #3
   133cc:	lsl	x2, x2, #3
   133d0:	bl	c1c0 <mpfr_reallocate_func@plt>
   133d4:	add	x1, x0, #0x8
   133d8:	str	x1, [x19, #24]
   133dc:	str	x21, [x0]
   133e0:	mov	x0, #0x2                   	// #2
   133e4:	movk	x0, #0x8000, lsl #48
   133e8:	ldr	x21, [sp, #32]
   133ec:	str	x20, [x19]
   133f0:	str	x0, [x19, #16]
   133f4:	ldp	x19, x20, [sp, #16]
   133f8:	ldp	x29, x30, [sp], #48
   133fc:	ret
   13400:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   13404:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   13408:	add	x2, x2, #0xb58
   1340c:	add	x0, x0, #0xc10
   13410:	mov	w1, #0x1f                  	// #31
   13414:	bl	cb40 <mpfr_assert_fail@plt>

0000000000013418 <mpfr_sub@@Base>:
   13418:	stp	x29, x30, [sp, #-48]!
   1341c:	mov	x4, #0x5                   	// #5
   13420:	movk	x4, #0x8000, lsl #48
   13424:	mov	x29, sp
   13428:	ldr	x5, [x1, #16]
   1342c:	stp	x19, x20, [sp, #16]
   13430:	mov	x19, x1
   13434:	stp	x21, x22, [sp, #32]
   13438:	mov	x20, x2
   1343c:	mov	x22, x0
   13440:	mov	w21, w3
   13444:	cmp	x5, x4
   13448:	b.lt	134b4 <mpfr_sub@@Base+0x9c>  // b.tstop
   1344c:	ldr	x6, [x2, #16]
   13450:	cmp	x6, x4
   13454:	b.lt	1354c <mpfr_sub@@Base+0x134>  // b.tstop
   13458:	ldr	w4, [x2, #8]
   1345c:	ldr	w7, [x1, #8]
   13460:	ldr	x8, [x0]
   13464:	cmp	w7, w4
   13468:	ldr	x4, [x1]
   1346c:	b.ne	135e0 <mpfr_sub@@Base+0x1c8>  // b.any
   13470:	cmp	x4, x8
   13474:	b.ne	13494 <mpfr_sub@@Base+0x7c>  // b.any
   13478:	ldr	x5, [x2]
   1347c:	cmp	x4, x5
   13480:	b.ne	13494 <mpfr_sub@@Base+0x7c>  // b.any
   13484:	ldp	x19, x20, [sp, #16]
   13488:	ldp	x21, x22, [sp, #32]
   1348c:	ldp	x29, x30, [sp], #48
   13490:	b	c0f0 <mpfr_sub1sp@plt>
   13494:	mov	w3, w21
   13498:	mov	x2, x20
   1349c:	mov	x1, x19
   134a0:	mov	x0, x22
   134a4:	ldp	x19, x20, [sp, #16]
   134a8:	ldp	x21, x22, [sp, #32]
   134ac:	ldp	x29, x30, [sp], #48
   134b0:	b	ca70 <mpfr_sub1@plt>
   134b4:	mov	x1, #0x2                   	// #2
   134b8:	movk	x1, #0x8000, lsl #48
   134bc:	cmp	x5, x1
   134c0:	b.eq	13508 <mpfr_sub@@Base+0xf0>  // b.none
   134c4:	ldr	x6, [x2, #16]
   134c8:	cmp	x6, x1
   134cc:	b.eq	13508 <mpfr_sub@@Base+0xf0>  // b.none
   134d0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   134d4:	cmp	x5, x1
   134d8:	b.ne	13698 <mpfr_sub@@Base+0x280>  // b.any
   134dc:	ldr	w1, [x19, #8]
   134e0:	cmp	x6, x5
   134e4:	b.ne	134f4 <mpfr_sub@@Base+0xdc>  // b.any
   134e8:	ldr	w0, [x2, #8]
   134ec:	cmp	w0, w1
   134f0:	b.eq	13508 <mpfr_sub@@Base+0xf0>  // b.none
   134f4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   134f8:	mov	w0, #0x0                   	// #0
   134fc:	str	w1, [x22, #8]
   13500:	str	x2, [x22, #16]
   13504:	b	1353c <mpfr_sub@@Base+0x124>
   13508:	mrs	x1, tpidr_el0
   1350c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   13510:	ldr	x2, [x0, #2576]
   13514:	add	x0, x0, #0xa10
   13518:	blr	x2
   1351c:	add	x1, x1, x0
   13520:	mov	x2, #0x2                   	// #2
   13524:	movk	x2, #0x8000, lsl #48
   13528:	str	x2, [x22, #16]
   1352c:	mov	w0, #0x0                   	// #0
   13530:	ldr	w2, [x1]
   13534:	orr	w2, w2, #0x4
   13538:	str	w2, [x1]
   1353c:	ldp	x19, x20, [sp, #16]
   13540:	ldp	x21, x22, [sp, #32]
   13544:	ldp	x29, x30, [sp], #48
   13548:	ret
   1354c:	mov	x0, #0x2                   	// #2
   13550:	movk	x0, #0x8000, lsl #48
   13554:	cmp	x6, x0
   13558:	b.eq	13508 <mpfr_sub@@Base+0xf0>  // b.none
   1355c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   13560:	cmp	x6, x0
   13564:	b.eq	1360c <mpfr_sub@@Base+0x1f4>  // b.none
   13568:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1356c:	cmp	x6, x0
   13570:	b.eq	1373c <mpfr_sub@@Base+0x324>  // b.none
   13574:	ldr	w1, [x19, #8]
   13578:	ldr	w0, [x20, #8]
   1357c:	cmp	w1, w0
   13580:	b.eq	13494 <mpfr_sub@@Base+0x7c>  // b.none
   13584:	mov	x0, #0x4                   	// #4
   13588:	movk	x0, #0x8000, lsl #48
   1358c:	cmp	x5, x0
   13590:	ccmp	x6, x0, #0x4, ne  // ne = any
   13594:	b.eq	13704 <mpfr_sub@@Base+0x2ec>  // b.none
   13598:	cmp	x5, x6
   1359c:	cset	w0, lt  // lt = tstop
   135a0:	cbz	w0, 13628 <mpfr_sub@@Base+0x210>
   135a4:	cmp	w21, #0x2
   135a8:	b.eq	13690 <mpfr_sub@@Base+0x278>  // b.none
   135ac:	cmp	w21, #0x3
   135b0:	mov	w0, #0x2                   	// #2
   135b4:	csel	w21, w21, w0, ne  // ne = any
   135b8:	mov	w3, w21
   135bc:	mov	x2, x19
   135c0:	mov	x1, x20
   135c4:	mov	x0, x22
   135c8:	bl	c780 <mpfr_add1@plt>
   135cc:	ldr	w1, [x22, #8]
   135d0:	neg	w0, w0
   135d4:	neg	w1, w1
   135d8:	str	w1, [x22, #8]
   135dc:	b	1353c <mpfr_sub@@Base+0x124>
   135e0:	cmp	x5, x6
   135e4:	b.lt	13648 <mpfr_sub@@Base+0x230>  // b.tstop
   135e8:	cmp	x4, x8
   135ec:	b.ne	13628 <mpfr_sub@@Base+0x210>  // b.any
   135f0:	ldr	x5, [x2]
   135f4:	cmp	x4, x5
   135f8:	b.ne	13628 <mpfr_sub@@Base+0x210>  // b.any
   135fc:	ldp	x19, x20, [sp, #16]
   13600:	ldp	x21, x22, [sp, #32]
   13604:	ldp	x29, x30, [sp], #48
   13608:	b	cbb0 <mpfr_add1sp@plt>
   1360c:	ldr	w1, [x20, #8]
   13610:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   13614:	mov	w0, #0x0                   	// #0
   13618:	str	x2, [x22, #16]
   1361c:	neg	w1, w1
   13620:	str	w1, [x22, #8]
   13624:	b	1353c <mpfr_sub@@Base+0x124>
   13628:	mov	w3, w21
   1362c:	mov	x2, x20
   13630:	mov	x1, x19
   13634:	mov	x0, x22
   13638:	ldp	x19, x20, [sp, #16]
   1363c:	ldp	x21, x22, [sp, #32]
   13640:	ldp	x29, x30, [sp], #48
   13644:	b	c780 <mpfr_add1@plt>
   13648:	cmp	w3, #0x2
   1364c:	b.eq	13688 <mpfr_sub@@Base+0x270>  // b.none
   13650:	cmp	w3, #0x3
   13654:	mov	w0, #0x2                   	// #2
   13658:	csel	w21, w3, w0, ne  // ne = any
   1365c:	mov	w3, w21
   13660:	mov	x2, x19
   13664:	mov	x1, x20
   13668:	cmp	x4, x8
   1366c:	b.ne	135c4 <mpfr_sub@@Base+0x1ac>  // b.any
   13670:	ldr	x0, [x20]
   13674:	cmp	x4, x0
   13678:	b.ne	135c4 <mpfr_sub@@Base+0x1ac>  // b.any
   1367c:	mov	x0, x22
   13680:	bl	cbb0 <mpfr_add1sp@plt>
   13684:	b	135cc <mpfr_sub@@Base+0x1b4>
   13688:	mov	w21, #0x3                   	// #3
   1368c:	b	1365c <mpfr_sub@@Base+0x244>
   13690:	mov	w21, #0x3                   	// #3
   13694:	b	135b8 <mpfr_sub@@Base+0x1a0>
   13698:	cmp	x6, x1
   1369c:	b.eq	1360c <mpfr_sub@@Base+0x1f4>  // b.none
   136a0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   136a4:	cmp	x5, x1
   136a8:	b.ne	13568 <mpfr_sub@@Base+0x150>  // b.any
   136ac:	cmp	x6, x5
   136b0:	b.ne	136ec <mpfr_sub@@Base+0x2d4>  // b.any
   136b4:	ldr	w0, [x19, #8]
   136b8:	cmp	w3, #0x3
   136bc:	b.eq	1371c <mpfr_sub@@Base+0x304>  // b.none
   136c0:	mov	w1, #0x1                   	// #1
   136c4:	tbz	w0, #31, 136d8 <mpfr_sub@@Base+0x2c0>
   136c8:	ldr	w0, [x2, #8]
   136cc:	mov	w1, #0xffffffff            	// #-1
   136d0:	cmp	w0, #0x1
   136d4:	cneg	w1, w1, lt  // lt = tstop
   136d8:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   136dc:	mov	w0, #0x0                   	// #0
   136e0:	str	w1, [x22, #8]
   136e4:	str	x2, [x22, #16]
   136e8:	b	1353c <mpfr_sub@@Base+0x124>
   136ec:	mov	x1, x20
   136f0:	mov	w2, w3
   136f4:	ldp	x19, x20, [sp, #16]
   136f8:	ldp	x21, x22, [sp, #32]
   136fc:	ldp	x29, x30, [sp], #48
   13700:	b	bd70 <mpfr_neg@plt>
   13704:	mov	x1, x20
   13708:	mov	x0, x19
   1370c:	bl	cab0 <mpfr_ubf_exp_less_p@plt>
   13710:	cmp	w0, #0x0
   13714:	cset	w0, ne  // ne = any
   13718:	b	135a0 <mpfr_sub@@Base+0x188>
   1371c:	cmp	w0, #0x0
   13720:	mov	w1, #0xffffffff            	// #-1
   13724:	b.le	136d8 <mpfr_sub@@Base+0x2c0>
   13728:	ldr	w0, [x2, #8]
   1372c:	mov	w1, #0x1                   	// #1
   13730:	cmn	w0, #0x1
   13734:	cneg	w1, w1, gt
   13738:	b	136d8 <mpfr_sub@@Base+0x2c0>
   1373c:	ldr	w3, [x19, #8]
   13740:	mov	w2, w21
   13744:	mov	x0, x22
   13748:	mov	x1, x19
   1374c:	ldp	x19, x20, [sp, #16]
   13750:	ldp	x21, x22, [sp, #32]
   13754:	ldp	x29, x30, [sp], #48
   13758:	b	c6a0 <mpfr_set4@plt>
   1375c:	nop

0000000000013760 <mpfr_init2@@Base>:
   13760:	stp	x29, x30, [sp, #-48]!
   13764:	adrp	x2, 81000 <__gmpfr_l2b@@Base+0x200>
   13768:	mov	x29, sp
   1376c:	ldr	x2, [x2, #4032]
   13770:	stp	x19, x20, [sp, #16]
   13774:	mov	x20, x0
   13778:	str	x21, [sp, #32]
   1377c:	ldr	w0, [x2]
   13780:	cmp	w0, #0x40
   13784:	b.ne	137e8 <mpfr_init2@@Base+0x88>  // b.any
   13788:	sub	x19, x1, #0x1
   1378c:	mov	x0, #0xfffffffffffffefe    	// #-258
   13790:	movk	x0, #0x7fff, lsl #48
   13794:	mov	x21, x1
   13798:	cmp	x19, x0
   1379c:	b.hi	13800 <mpfr_init2@@Base+0xa0>  // b.pmore
   137a0:	asr	x19, x19, #6
   137a4:	add	x0, x19, #0x2
   137a8:	add	x19, x19, #0x1
   137ac:	lsl	x0, x0, #3
   137b0:	bl	ccf0 <mpfr_allocate_func@plt>
   137b4:	mov	w2, #0x1                   	// #1
   137b8:	add	x1, x0, #0x8
   137bc:	str	x21, [x20]
   137c0:	str	w2, [x20, #8]
   137c4:	str	x1, [x20, #24]
   137c8:	ldr	x21, [sp, #32]
   137cc:	str	x19, [x0]
   137d0:	mov	x0, #0x2                   	// #2
   137d4:	movk	x0, #0x8000, lsl #48
   137d8:	str	x0, [x20, #16]
   137dc:	ldp	x19, x20, [sp, #16]
   137e0:	ldp	x29, x30, [sp], #48
   137e4:	ret
   137e8:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   137ec:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   137f0:	add	x2, x2, #0x448
   137f4:	add	x0, x0, #0x468
   137f8:	mov	w1, #0x27                  	// #39
   137fc:	bl	cb40 <mpfr_assert_fail@plt>
   13800:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   13804:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   13808:	add	x2, x2, #0xb58
   1380c:	add	x0, x0, #0x468
   13810:	mov	w1, #0x34                  	// #52
   13814:	bl	cb40 <mpfr_assert_fail@plt>

0000000000013818 <mpfr_sub1sp@@Base>:
   13818:	stp	x29, x30, [sp, #-176]!
   1381c:	mov	w4, w3
   13820:	mov	x29, sp
   13824:	stp	x19, x20, [sp, #16]
   13828:	mov	x20, x1
   1382c:	ldr	x19, [x1]
   13830:	stp	x21, x22, [sp, #32]
   13834:	mov	x21, x2
   13838:	stp	x23, x24, [sp, #48]
   1383c:	cmp	x19, #0x3f
   13840:	stp	x25, x26, [sp, #64]
   13844:	stp	x27, x28, [sp, #80]
   13848:	mov	x27, x0
   1384c:	ldr	x23, [x1, #16]
   13850:	ldr	x28, [x2, #16]
   13854:	b.le	13b40 <mpfr_sub1sp@@Base+0x328>
   13858:	sub	x0, x19, #0x41
   1385c:	cmp	x0, #0x3e
   13860:	b.ls	13ec4 <mpfr_sub1sp@@Base+0x6ac>  // b.plast
   13864:	cmp	x19, #0x40
   13868:	b.eq	14100 <mpfr_sub1sp@@Base+0x8e8>  // b.none
   1386c:	sub	x0, x19, #0x81
   13870:	cmp	x0, #0x3e
   13874:	b.ls	13c8c <mpfr_sub1sp@@Base+0x474>  // b.plast
   13878:	sub	x11, x19, #0x1
   1387c:	str	xzr, [x29, #168]
   13880:	add	x10, x19, #0x1
   13884:	cmp	x23, x28
   13888:	asr	x26, x11, #6
   1388c:	add	x8, x26, #0x1
   13890:	b.eq	13a0c <mpfr_sub1sp@@Base+0x1f4>  // b.none
   13894:	b.lt	13a2c <mpfr_sub1sp@@Base+0x214>  // b.tstop
   13898:	mov	x0, x28
   1389c:	mov	x28, x23
   138a0:	mov	x23, x0
   138a4:	ldr	w0, [x20, #8]
   138a8:	str	w0, [x27, #8]
   138ac:	mov	x1, x21
   138b0:	sub	x22, x28, x23
   138b4:	mov	x21, x20
   138b8:	cmp	x22, #0x1
   138bc:	mov	x20, x1
   138c0:	b.ls	13a44 <mpfr_sub1sp@@Base+0x22c>  // b.plast
   138c4:	neg	w24, w19
   138c8:	cmp	x19, x22
   138cc:	and	x1, x24, #0x3f
   138d0:	stp	x1, x1, [x29, #104]
   138d4:	and	w24, w24, #0x3f
   138d8:	b.ls	14a40 <mpfr_sub1sp@@Base+0x1228>  // b.plast
   138dc:	lsl	x25, x8, #3
   138e0:	cmp	x25, #0x4, lsl #12
   138e4:	b.hi	14760 <mpfr_sub1sp@@Base+0xf48>  // b.pmore
   138e8:	add	x0, x25, #0xf
   138ec:	and	x0, x0, #0xfffffffffffffff0
   138f0:	sub	sp, sp, x0
   138f4:	mov	x9, sp
   138f8:	lsr	x0, x22, #6
   138fc:	ands	x3, x22, #0x3f
   13900:	ldr	x1, [x20, #24]
   13904:	b.eq	14b7c <mpfr_sub1sp@@Base+0x1364>  // b.none
   13908:	cbnz	x0, 14ca0 <mpfr_sub1sp@@Base+0x1488>
   1390c:	mov	x2, x8
   13910:	mov	x0, x9
   13914:	str	x10, [x29, #120]
   13918:	str	w4, [x29, #128]
   1391c:	stp	x11, x8, [x29, #136]
   13920:	str	x9, [x29, #152]
   13924:	bl	bce0 <__gmpn_rshift@plt>
   13928:	ldp	x11, x8, [x29, #136]
   1392c:	ldr	w4, [x29, #128]
   13930:	ldr	x10, [x29, #120]
   13934:	ldr	x9, [x29, #152]
   13938:	sub	x5, x25, #0x8
   1393c:	ldr	x1, [x21, #24]
   13940:	ldr	x0, [x9, x5]
   13944:	ldr	x2, [x1, x5]
   13948:	ldr	x3, [x9]
   1394c:	sub	x2, x2, x0
   13950:	cbz	w24, 14bf8 <mpfr_sub1sp@@Base+0x13e0>
   13954:	sub	w21, w24, #0x1
   13958:	mov	x7, #0x1                   	// #1
   1395c:	mov	x12, #0xffffffffffffffff    	// #-1
   13960:	lsl	x7, x7, x21
   13964:	and	x22, x7, x3
   13968:	lsl	x21, x12, x21
   1396c:	bics	x21, x3, x21
   13970:	b.ne	14040 <mpfr_sub1sp@@Base+0x828>  // b.any
   13974:	ldr	x0, [x29, #112]
   13978:	add	x25, x0, x23
   1397c:	add	x11, x25, x11
   13980:	sub	x11, x11, x28
   13984:	cmp	x19, x11
   13988:	b.lt	144dc <mpfr_sub1sp@@Base+0xcc4>  // b.tstop
   1398c:	cmp	x11, #0x0
   13990:	add	x0, x11, #0x3f
   13994:	csel	x0, x0, x11, lt  // lt = tstop
   13998:	negs	x19, x11
   1399c:	ldr	x13, [x20, #24]
   139a0:	sub	x0, x26, x0, asr #6
   139a4:	and	x19, x19, #0x3f
   139a8:	and	x11, x11, #0x3f
   139ac:	csneg	x11, x11, x19, mi  // mi = first
   139b0:	mov	x19, #0x3f                  	// #63
   139b4:	sub	x19, x19, x11
   139b8:	ldr	x11, [x13, x0, lsl #3]
   139bc:	lsl	x19, x12, x19
   139c0:	bics	xzr, x11, x19
   139c4:	b.ne	14040 <mpfr_sub1sp@@Base+0x828>  // b.any
   139c8:	b	139d4 <mpfr_sub1sp@@Base+0x1bc>
   139cc:	ldr	x11, [x13, x0, lsl #3]
   139d0:	cbnz	x11, 139dc <mpfr_sub1sp@@Base+0x1c4>
   139d4:	subs	x0, x0, #0x1
   139d8:	b.pl	139cc <mpfr_sub1sp@@Base+0x1b4>  // b.nfrst
   139dc:	mvn	x0, x0
   139e0:	lsr	x21, x0, #63
   139e4:	mov	x19, #0xffffffffffffffff    	// #-1
   139e8:	str	x19, [x29, #128]
   139ec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   139f0:	cmp	x2, x0
   139f4:	b.hi	14058 <mpfr_sub1sp@@Base+0x840>  // b.pmore
   139f8:	cmp	x21, #0x1
   139fc:	b.eq	1513c <mpfr_sub1sp@@Base+0x1924>  // b.none
   13a00:	mov	x19, x21
   13a04:	str	x21, [x29, #128]
   13a08:	b	14058 <mpfr_sub1sp@@Base+0x840>
   13a0c:	ldr	x5, [x1, #24]
   13a10:	mov	x0, x26
   13a14:	ldr	x3, [x2, #24]
   13a18:	ldr	x2, [x5, x0, lsl #3]
   13a1c:	ldr	x1, [x3, x0, lsl #3]
   13a20:	cmp	x2, x1
   13a24:	b.eq	1442c <mpfr_sub1sp@@Base+0xc14>  // b.none
   13a28:	b.hi	13898 <mpfr_sub1sp@@Base+0x80>  // b.pmore
   13a2c:	ldr	w0, [x20, #8]
   13a30:	sub	x22, x28, x23
   13a34:	cmp	x22, #0x1
   13a38:	neg	w0, w0
   13a3c:	str	w0, [x27, #8]
   13a40:	b.hi	138c4 <mpfr_sub1sp@@Base+0xac>  // b.pmore
   13a44:	ldr	x24, [x20, #24]
   13a48:	ldr	x6, [x21, #24]
   13a4c:	cbz	x22, 14270 <mpfr_sub1sp@@Base+0xa58>
   13a50:	ldr	x1, [x24, x26, lsl #3]
   13a54:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   13a58:	ldr	x0, [x6, x26, lsl #3]
   13a5c:	lsl	x23, x26, #3
   13a60:	sub	x0, x0, x1, lsr #1
   13a64:	cmp	x0, x2
   13a68:	b.ls	14208 <mpfr_sub1sp@@Base+0x9f0>  // b.plast
   13a6c:	neg	w19, w19
   13a70:	add	x1, x23, #0x8
   13a74:	ldr	x21, [x24]
   13a78:	and	w19, w19, #0x3f
   13a7c:	mov	x5, #0x1                   	// #1
   13a80:	cmp	x1, #0x4, lsl #12
   13a84:	lsl	x5, x5, x19
   13a88:	neg	x22, x5
   13a8c:	and	x21, x5, x21
   13a90:	ldr	x25, [x27, #24]
   13a94:	b.hi	14f5c <mpfr_sub1sp@@Base+0x1744>  // b.pmore
   13a98:	add	x0, x23, #0x17
   13a9c:	and	x0, x0, #0xfffffffffffffff0
   13aa0:	sub	sp, sp, x0
   13aa4:	mov	x20, sp
   13aa8:	mov	x2, x8
   13aac:	mov	x1, x24
   13ab0:	mov	w3, #0x1                   	// #1
   13ab4:	mov	x0, x20
   13ab8:	str	w4, [x29, #120]
   13abc:	stp	x6, x5, [x29, #128]
   13ac0:	str	x8, [x29, #144]
   13ac4:	bl	bce0 <__gmpn_rshift@plt>
   13ac8:	ldr	x0, [x20]
   13acc:	add	x9, x25, x23
   13ad0:	ldr	x6, [x29, #128]
   13ad4:	and	x22, x0, x22
   13ad8:	ldr	x8, [x29, #144]
   13adc:	str	x22, [x20]
   13ae0:	mov	x2, x20
   13ae4:	mov	x0, x25
   13ae8:	mov	x3, x8
   13aec:	mov	x1, x6
   13af0:	str	x9, [x29, #152]
   13af4:	bl	be60 <__gmpn_sub_n@plt>
   13af8:	str	x28, [x27, #16]
   13afc:	ldr	w4, [x29, #120]
   13b00:	ldr	x0, [x25, x23]
   13b04:	ldr	x5, [x29, #136]
   13b08:	ldr	x9, [x29, #152]
   13b0c:	cbnz	x21, 14f88 <mpfr_sub1sp@@Base+0x1770>
   13b10:	ldr	x0, [x29, #168]
   13b14:	cbnz	x0, 142f8 <mpfr_sub1sp@@Base+0xae0>
   13b18:	mov	w1, #0x0                   	// #0
   13b1c:	mov	sp, x29
   13b20:	mov	w0, w1
   13b24:	ldp	x19, x20, [sp, #16]
   13b28:	ldp	x21, x22, [sp, #32]
   13b2c:	ldp	x23, x24, [sp, #48]
   13b30:	ldp	x25, x26, [sp, #64]
   13b34:	ldp	x27, x28, [sp, #80]
   13b38:	ldp	x29, x30, [sp], #176
   13b3c:	ret
   13b40:	cmp	x23, x28
   13b44:	ldr	x3, [x1, #24]
   13b48:	ldr	x6, [x2, #24]
   13b4c:	ldr	x5, [x0, #24]
   13b50:	b.eq	13e50 <mpfr_sub1sp@@Base+0x638>  // b.none
   13b54:	ldr	w1, [x1, #8]
   13b58:	b.gt	13b78 <mpfr_sub1sp@@Base+0x360>
   13b5c:	mov	x2, x3
   13b60:	mov	x0, x23
   13b64:	mov	x3, x6
   13b68:	mov	x23, x28
   13b6c:	mov	x6, x2
   13b70:	mov	x28, x0
   13b74:	neg	w1, w1
   13b78:	mov	x10, #0x40                  	// #64
   13b7c:	sub	x19, x10, x19
   13b80:	ldr	x0, [x3]
   13b84:	str	w1, [x27, #8]
   13b88:	sub	x28, x23, x28
   13b8c:	mov	x2, #0x1                   	// #1
   13b90:	cmp	x28, #0x3f
   13b94:	lsl	x7, x2, x19
   13b98:	b.hi	141ac <mpfr_sub1sp@@Base+0x994>  // b.pmore
   13b9c:	ldr	x9, [x6]
   13ba0:	sub	w8, w10, w28
   13ba4:	sub	w12, w19, #0x1
   13ba8:	mrs	x20, tpidr_el0
   13bac:	neg	x6, x7
   13bb0:	sub	x3, x7, #0x1
   13bb4:	lsl	x8, x9, x8
   13bb8:	negs	x11, x8
   13bbc:	cset	x8, ne  // ne = any
   13bc0:	lsr	x28, x9, x28
   13bc4:	sub	x0, x0, x28
   13bc8:	lsl	x9, x2, x12
   13bcc:	sub	x2, x0, x8
   13bd0:	eor	x3, x3, x9
   13bd4:	clz	x8, x2
   13bd8:	sub	w0, w10, w8
   13bdc:	cmp	w8, #0x0
   13be0:	lsl	x10, x2, x8
   13be4:	sub	x23, x23, x8
   13be8:	lsr	x0, x11, x0
   13bec:	orr	x0, x0, x10
   13bf0:	csel	x2, x2, x0, eq  // eq = none
   13bf4:	lsl	x8, x11, x8
   13bf8:	and	x6, x6, x2
   13bfc:	str	x6, [x5]
   13c00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   13c04:	ldr	x10, [x0, #2512]
   13c08:	add	x0, x0, #0x9d0
   13c0c:	blr	x10
   13c10:	and	x3, x3, x2
   13c14:	ldr	x6, [x20, x0]
   13c18:	and	x2, x9, x2
   13c1c:	orr	x0, x3, x8
   13c20:	cmp	x23, x6
   13c24:	b.lt	13eac <mpfr_sub1sp@@Base+0x694>  // b.tstop
   13c28:	str	x23, [x27, #16]
   13c2c:	orr	x3, x2, x0
   13c30:	cbz	x3, 13b18 <mpfr_sub1sp@@Base+0x300>
   13c34:	cmp	w4, #0x5
   13c38:	b.eq	13b18 <mpfr_sub1sp@@Base+0x300>  // b.none
   13c3c:	cbz	w4, 144f0 <mpfr_sub1sp@@Base+0xcd8>
   13c40:	cmp	w4, #0x1
   13c44:	b.eq	14508 <mpfr_sub1sp@@Base+0xcf0>  // b.none
   13c48:	add	w3, w4, w1, lsr #31
   13c4c:	cmp	w3, #0x3
   13c50:	b.eq	14508 <mpfr_sub1sp@@Base+0xcf0>  // b.none
   13c54:	ldr	x2, [x5]
   13c58:	add	x7, x7, x2
   13c5c:	str	x7, [x5]
   13c60:	cbz	x7, 147f4 <mpfr_sub1sp@@Base+0xfdc>
   13c64:	cbz	w1, 13b1c <mpfr_sub1sp@@Base+0x304>
   13c68:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   13c6c:	ldr	x2, [x0, #2576]
   13c70:	add	x0, x0, #0xa10
   13c74:	blr	x2
   13c78:	add	x0, x20, x0
   13c7c:	ldr	w2, [x0]
   13c80:	orr	w2, w2, #0x8
   13c84:	str	w2, [x0]
   13c88:	b	13b1c <mpfr_sub1sp@@Base+0x304>
   13c8c:	cmp	x23, x28
   13c90:	ldr	x0, [x1, #24]
   13c94:	ldr	x11, [x2, #24]
   13c98:	ldr	x5, [x27, #24]
   13c9c:	b.eq	14830 <mpfr_sub1sp@@Base+0x1018>  // b.none
   13ca0:	ldr	w1, [x1, #8]
   13ca4:	b.le	146e4 <mpfr_sub1sp@@Base+0xecc>
   13ca8:	mov	x3, #0xc0                  	// #192
   13cac:	sub	x19, x3, x19
   13cb0:	ldp	x14, x12, [x0]
   13cb4:	sub	x28, x23, x28
   13cb8:	ldr	x13, [x0, #16]
   13cbc:	str	w1, [x27, #8]
   13cc0:	mov	x16, #0x1                   	// #1
   13cc4:	cmp	x28, #0x3f
   13cc8:	lsl	x7, x16, x19
   13ccc:	sub	x9, x7, #0x1
   13cd0:	b.hi	14534 <mpfr_sub1sp@@Base+0xd1c>  // b.pmore
   13cd4:	ldp	x15, x8, [x11]
   13cd8:	mov	w3, #0x40                  	// #64
   13cdc:	sub	w3, w3, w28
   13ce0:	mov	x0, x16
   13ce4:	ldr	x2, [x11, #16]
   13ce8:	lsl	x6, x8, x3
   13cec:	lsr	x11, x15, x28
   13cf0:	orr	x6, x6, x11
   13cf4:	subs	x17, x14, x6
   13cf8:	lsl	x10, x2, x3
   13cfc:	cmp	x14, x6
   13d00:	lsr	x8, x8, x28
   13d04:	orr	x8, x10, x8
   13d08:	cset	w6, cc  // cc = lo, ul, last
   13d0c:	sbc	x8, x12, x8
   13d10:	lsl	x3, x15, x3
   13d14:	cmp	x12, x8
   13d18:	b.cc	13d28 <mpfr_sub1sp@@Base+0x510>  // b.lo, b.ul, b.last
   13d1c:	cmp	w6, #0x0
   13d20:	ccmp	x12, x8, #0x0, ne  // ne = any
   13d24:	cset	x0, eq  // eq = none
   13d28:	lsr	x2, x2, x28
   13d2c:	sub	x2, x13, x2
   13d30:	sub	x10, x2, x0
   13d34:	cbz	x3, 14cf0 <mpfr_sub1sp@@Base+0x14d8>
   13d38:	orr	x0, x17, x8
   13d3c:	neg	x3, x3
   13d40:	cmp	x0, #0x0
   13d44:	cset	x11, eq  // eq = none
   13d48:	cmp	x17, #0x0
   13d4c:	cset	x0, eq  // eq = none
   13d50:	sub	x11, x10, x11
   13d54:	sub	x8, x8, x0
   13d58:	sub	x10, x17, #0x1
   13d5c:	clz	x0, x11
   13d60:	cbz	x0, 13d98 <mpfr_sub1sp@@Base+0x580>
   13d64:	mov	w6, #0x40                  	// #64
   13d68:	sub	w6, w6, w0
   13d6c:	lsl	x11, x11, x0
   13d70:	sub	x23, x23, x0
   13d74:	lsr	x2, x8, x6
   13d78:	orr	x11, x11, x2
   13d7c:	lsr	x2, x10, x6
   13d80:	lsl	x8, x8, x0
   13d84:	orr	x8, x8, x2
   13d88:	lsr	x6, x3, x6
   13d8c:	lsl	x2, x10, x0
   13d90:	orr	x10, x6, x2
   13d94:	lsl	x3, x3, x0
   13d98:	sub	w6, w19, #0x1
   13d9c:	mov	x0, #0x1                   	// #1
   13da0:	neg	x2, x7
   13da4:	str	x11, [x5, #16]
   13da8:	lsl	x0, x0, x6
   13dac:	eor	x9, x9, x0
   13db0:	and	x9, x9, x10
   13db4:	and	x6, x0, x10
   13db8:	orr	x9, x9, x3
   13dbc:	and	x2, x2, x10
   13dc0:	stp	x2, x8, [x5]
   13dc4:	mrs	x20, tpidr_el0
   13dc8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   13dcc:	ldr	x2, [x0, #2512]
   13dd0:	add	x0, x0, #0x9d0
   13dd4:	blr	x2
   13dd8:	ldr	x0, [x20, x0]
   13ddc:	cmp	x0, x23
   13de0:	b.gt	14934 <mpfr_sub1sp@@Base+0x111c>
   13de4:	str	x23, [x27, #16]
   13de8:	orr	x0, x6, x9
   13dec:	cbz	x0, 13b18 <mpfr_sub1sp@@Base+0x300>
   13df0:	cmp	w4, #0x5
   13df4:	b.eq	13b18 <mpfr_sub1sp@@Base+0x300>  // b.none
   13df8:	cbnz	w4, 1497c <mpfr_sub1sp@@Base+0x1164>
   13dfc:	cbz	x6, 14508 <mpfr_sub1sp@@Base+0xcf0>
   13e00:	ldr	x0, [x5]
   13e04:	lsr	x19, x0, x19
   13e08:	and	x2, x19, #0x1
   13e0c:	orr	x9, x2, x9
   13e10:	cbz	x9, 14508 <mpfr_sub1sp@@Base+0xcf0>
   13e14:	ldp	x3, x2, [x5, #8]
   13e18:	add	x0, x7, x0
   13e1c:	cmp	x0, #0x0
   13e20:	cinc	x3, x3, eq  // eq = none
   13e24:	stp	x0, x3, [x5]
   13e28:	orr	x0, x0, x3
   13e2c:	cmp	x0, #0x0
   13e30:	cinc	x0, x2, eq  // eq = none
   13e34:	str	x0, [x5, #16]
   13e38:	cbnz	x0, 13c64 <mpfr_sub1sp@@Base+0x44c>
   13e3c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13e40:	str	x0, [x5, #16]
   13e44:	add	x23, x23, #0x1
   13e48:	str	x23, [x27, #16]
   13e4c:	b	13c64 <mpfr_sub1sp@@Base+0x44c>
   13e50:	ldr	x0, [x3]
   13e54:	ldr	x2, [x6]
   13e58:	subs	x1, x0, x2
   13e5c:	cmp	x0, x2
   13e60:	cset	x3, cc  // cc = lo, ul, last
   13e64:	cbz	x1, 14744 <mpfr_sub1sp@@Base+0xf2c>
   13e68:	ldr	w6, [x20, #8]
   13e6c:	cbz	x3, 13e78 <mpfr_sub1sp@@Base+0x660>
   13e70:	neg	w6, w6
   13e74:	sub	x1, x2, x0
   13e78:	clz	x3, x1
   13e7c:	mrs	x2, tpidr_el0
   13e80:	str	w6, [x27, #8]
   13e84:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   13e88:	ldr	x6, [x0, #2512]
   13e8c:	add	x0, x0, #0x9d0
   13e90:	blr	x6
   13e94:	lsl	x1, x1, x3
   13e98:	str	x1, [x5]
   13e9c:	sub	x23, x23, x3
   13ea0:	ldr	x6, [x2, x0]
   13ea4:	cmp	x23, x6
   13ea8:	b.ge	141a0 <mpfr_sub1sp@@Base+0x988>  // b.tcont
   13eac:	cbnz	w4, 14e84 <mpfr_sub1sp@@Base+0x166c>
   13eb0:	sub	x6, x6, #0x1
   13eb4:	cmp	x6, x23
   13eb8:	b.le	15584 <mpfr_sub1sp@@Base+0x1d6c>
   13ebc:	mov	w4, #0x1                   	// #1
   13ec0:	b	14e84 <mpfr_sub1sp@@Base+0x166c>
   13ec4:	cmp	x23, x28
   13ec8:	ldr	x3, [x1, #24]
   13ecc:	ldr	x6, [x2, #24]
   13ed0:	ldr	x5, [x27, #24]
   13ed4:	b.eq	1435c <mpfr_sub1sp@@Base+0xb44>  // b.none
   13ed8:	ldr	w1, [x1, #8]
   13edc:	b.gt	13efc <mpfr_sub1sp@@Base+0x6e4>
   13ee0:	mov	x2, x3
   13ee4:	mov	x0, x23
   13ee8:	mov	x3, x6
   13eec:	mov	x23, x28
   13ef0:	mov	x6, x2
   13ef4:	mov	x28, x0
   13ef8:	neg	w1, w1
   13efc:	mov	x8, #0x80                  	// #128
   13f00:	sub	x19, x8, x19
   13f04:	ldp	x11, x12, [x3]
   13f08:	str	w1, [x27, #8]
   13f0c:	sub	x28, x23, x28
   13f10:	mov	x9, #0x1                   	// #1
   13f14:	lsl	x7, x9, x19
   13f18:	cmp	x28, #0x3f
   13f1c:	sub	x10, x7, #0x1
   13f20:	b.hi	14458 <mpfr_sub1sp@@Base+0xc40>  // b.pmore
   13f24:	ldp	x8, x0, [x6]
   13f28:	mov	w3, #0x40                  	// #64
   13f2c:	sub	w3, w3, w28
   13f30:	lsr	x6, x8, x28
   13f34:	lsl	x2, x0, x3
   13f38:	orr	x2, x2, x6
   13f3c:	cmp	x2, x11
   13f40:	lsl	x8, x8, x3
   13f44:	lsr	x0, x0, x28
   13f48:	cset	x3, hi  // hi = pmore
   13f4c:	sub	x0, x12, x0
   13f50:	sub	x2, x11, x2
   13f54:	sub	x0, x0, x3
   13f58:	cbnz	x8, 14624 <mpfr_sub1sp@@Base+0xe0c>
   13f5c:	cbnz	x0, 15520 <mpfr_sub1sp@@Base+0x1d08>
   13f60:	sub	x23, x23, #0x40
   13f64:	mov	x8, x0
   13f68:	clz	x3, x2
   13f6c:	cbz	x3, 13f98 <mpfr_sub1sp@@Base+0x780>
   13f70:	mov	w6, #0x40                  	// #64
   13f74:	sub	w6, w6, w3
   13f78:	lsl	x2, x2, x3
   13f7c:	sub	x23, x23, x3
   13f80:	lsr	x9, x0, x6
   13f84:	orr	x2, x2, x9
   13f88:	lsr	x6, x8, x6
   13f8c:	lsl	x0, x0, x3
   13f90:	orr	x0, x6, x0
   13f94:	lsl	x8, x8, x3
   13f98:	sub	w9, w19, #0x1
   13f9c:	mov	x6, #0x1                   	// #1
   13fa0:	str	x2, [x5, #8]
   13fa4:	neg	x3, x7
   13fa8:	lsl	x6, x6, x9
   13fac:	eor	x2, x10, x6
   13fb0:	and	x2, x2, x0
   13fb4:	and	x9, x6, x0
   13fb8:	orr	x2, x2, x8
   13fbc:	and	x0, x3, x0
   13fc0:	str	x0, [x5]
   13fc4:	mrs	x20, tpidr_el0
   13fc8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   13fcc:	ldr	x3, [x0, #2512]
   13fd0:	add	x0, x0, #0x9d0
   13fd4:	blr	x3
   13fd8:	ldr	x0, [x20, x0]
   13fdc:	cmp	x0, x23
   13fe0:	b.gt	143fc <mpfr_sub1sp@@Base+0xbe4>
   13fe4:	str	x23, [x27, #16]
   13fe8:	orr	x0, x9, x2
   13fec:	cbz	x0, 13b18 <mpfr_sub1sp@@Base+0x300>
   13ff0:	cmp	w4, #0x5
   13ff4:	b.eq	13b18 <mpfr_sub1sp@@Base+0x300>  // b.none
   13ff8:	cbnz	w4, 14960 <mpfr_sub1sp@@Base+0x1148>
   13ffc:	cbz	x9, 14508 <mpfr_sub1sp@@Base+0xcf0>
   14000:	ldr	x0, [x5]
   14004:	lsr	x19, x0, x19
   14008:	and	x3, x19, #0x1
   1400c:	orr	x2, x3, x2
   14010:	cbz	x2, 14508 <mpfr_sub1sp@@Base+0xcf0>
   14014:	ldr	x2, [x5, #8]
   14018:	add	x7, x7, x0
   1401c:	cmp	x7, #0x0
   14020:	cinc	x0, x2, eq  // eq = none
   14024:	stp	x7, x0, [x5]
   14028:	cbnz	x0, 13c64 <mpfr_sub1sp@@Base+0x44c>
   1402c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14030:	str	x0, [x5, #8]
   14034:	add	x23, x23, #0x1
   14038:	str	x23, [x27, #16]
   1403c:	b	13c64 <mpfr_sub1sp@@Base+0x44c>
   14040:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14044:	cmp	x2, x0
   14048:	b.ls	15138 <mpfr_sub1sp@@Base+0x1920>  // b.plast
   1404c:	mov	x19, #0xffffffffffffffff    	// #-1
   14050:	mov	x21, #0x1                   	// #1
   14054:	str	x19, [x29, #128]
   14058:	mov	x20, #0x1                   	// #1
   1405c:	mov	x2, x9
   14060:	lsl	x23, x20, x24
   14064:	neg	x0, x23
   14068:	ldr	x25, [x27, #24]
   1406c:	and	x3, x0, x3
   14070:	str	x3, [x9]
   14074:	mov	x3, x8
   14078:	mov	x0, x25
   1407c:	str	w4, [x29, #136]
   14080:	stp	x5, x8, [x29, #144]
   14084:	bl	be60 <__gmpn_sub_n@plt>
   14088:	ldr	w4, [x29, #136]
   1408c:	ldp	x5, x8, [x29, #144]
   14090:	ldr	x0, [x25, x5]
   14094:	add	x9, x25, x5
   14098:	tbz	x0, #63, 14c68 <mpfr_sub1sp@@Base+0x1450>
   1409c:	cmp	w4, #0x5
   140a0:	b.ne	1478c <mpfr_sub1sp@@Base+0xf74>  // b.any
   140a4:	ldr	x0, [x9]
   140a8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   140ac:	cmp	x0, x1
   140b0:	b.eq	14ad4 <mpfr_sub1sp@@Base+0x12bc>  // b.none
   140b4:	orr	x21, x22, x21
   140b8:	cmp	x21, #0x0
   140bc:	cset	w19, ne  // ne = any
   140c0:	ldr	x0, [x29, #168]
   140c4:	str	x28, [x27, #16]
   140c8:	cbnz	x0, 14998 <mpfr_sub1sp@@Base+0x1180>
   140cc:	ldr	w1, [x27, #8]
   140d0:	mul	w1, w19, w1
   140d4:	cbz	w1, 13b1c <mpfr_sub1sp@@Base+0x304>
   140d8:	mrs	x2, tpidr_el0
   140dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   140e0:	ldr	x3, [x0, #2576]
   140e4:	add	x0, x0, #0xa10
   140e8:	blr	x3
   140ec:	add	x0, x2, x0
   140f0:	ldr	w2, [x0]
   140f4:	orr	w2, w2, #0x8
   140f8:	str	w2, [x0]
   140fc:	b	13b1c <mpfr_sub1sp@@Base+0x304>
   14100:	cmp	x23, x28
   14104:	ldr	x0, [x1, #24]
   14108:	ldr	x5, [x2, #24]
   1410c:	ldr	x6, [x27, #24]
   14110:	b.eq	14704 <mpfr_sub1sp@@Base+0xeec>  // b.none
   14114:	ldr	w1, [x1, #8]
   14118:	b.gt	14138 <mpfr_sub1sp@@Base+0x920>
   1411c:	mov	x3, x0
   14120:	mov	x2, x23
   14124:	mov	x0, x5
   14128:	mov	x23, x28
   1412c:	mov	x5, x3
   14130:	mov	x28, x2
   14134:	neg	w1, w1
   14138:	ldr	x3, [x0]
   1413c:	str	w1, [x27, #8]
   14140:	sub	x28, x23, x28
   14144:	cmp	x28, #0x3f
   14148:	b.hi	149a0 <mpfr_sub1sp@@Base+0x1188>  // b.pmore
   1414c:	ldr	x5, [x5]
   14150:	mov	w2, #0x40                  	// #64
   14154:	sub	w0, w2, w28
   14158:	lsl	x0, x5, x0
   1415c:	negs	x0, x0
   14160:	lsr	x28, x5, x28
   14164:	cset	x5, ne  // ne = any
   14168:	sub	x3, x3, x28
   1416c:	subs	x3, x3, x5
   14170:	b.ne	14e0c <mpfr_sub1sp@@Base+0x15f4>  // b.any
   14174:	sub	x23, x23, #0x40
   14178:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1417c:	str	x0, [x6]
   14180:	mrs	x1, tpidr_el0
   14184:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   14188:	ldr	x2, [x0, #2512]
   1418c:	add	x0, x0, #0x9d0
   14190:	blr	x2
   14194:	ldr	x0, [x1, x0]
   14198:	cmp	x23, x0
   1419c:	b.lt	15560 <mpfr_sub1sp@@Base+0x1d48>  // b.tstop
   141a0:	mov	w1, #0x0                   	// #0
   141a4:	str	x23, [x27, #16]
   141a8:	b	13b1c <mpfr_sub1sp@@Base+0x304>
   141ac:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   141b0:	cmp	x0, x3
   141b4:	b.hi	14618 <mpfr_sub1sp@@Base+0xe00>  // b.pmore
   141b8:	cmp	x28, #0x40
   141bc:	ccmp	x19, #0x1, #0x0, ls  // ls = plast
   141c0:	b.gt	141d0 <mpfr_sub1sp@@Base+0x9b8>
   141c4:	ldr	x0, [x6]
   141c8:	cmp	x0, x3
   141cc:	cset	x2, eq  // eq = none
   141d0:	sub	x23, x23, #0x1
   141d4:	neg	x0, x7
   141d8:	str	x0, [x5]
   141dc:	mrs	x20, tpidr_el0
   141e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   141e4:	ldr	x3, [x0, #2512]
   141e8:	add	x0, x0, #0x9d0
   141ec:	blr	x3
   141f0:	ldr	x6, [x20, x0]
   141f4:	cmp	x23, x6
   141f8:	b.lt	13eac <mpfr_sub1sp@@Base+0x694>  // b.tstop
   141fc:	mov	x0, #0x1                   	// #1
   14200:	str	x23, [x27, #16]
   14204:	b	13c34 <mpfr_sub1sp@@Base+0x41c>
   14208:	tbnz	x0, #63, 14ff0 <mpfr_sub1sp@@Base+0x17d8>
   1420c:	add	x19, x23, #0x8
   14210:	cmp	x19, #0x4, lsl #12
   14214:	ldr	x22, [x27, #24]
   14218:	b.hi	14808 <mpfr_sub1sp@@Base+0xff0>  // b.pmore
   1421c:	add	x23, x23, #0x17
   14220:	and	x23, x23, #0xfffffffffffffff0
   14224:	sub	sp, sp, x23
   14228:	mov	x20, sp
   1422c:	mov	x1, x6
   14230:	mov	x2, x8
   14234:	mov	w3, #0x1                   	// #1
   14238:	mov	x0, x20
   1423c:	str	w4, [x29, #144]
   14240:	sub	x28, x28, #0x1
   14244:	str	x8, [x29, #152]
   14248:	bl	bcc0 <__gmpn_lshift@plt>
   1424c:	ldr	x8, [x29, #152]
   14250:	mov	x2, x24
   14254:	mov	x1, x20
   14258:	mov	x0, x22
   1425c:	mov	x3, x8
   14260:	bl	be60 <__gmpn_sub_n@plt>
   14264:	ldr	w4, [x29, #144]
   14268:	ldr	x8, [x29, #152]
   1426c:	b	1429c <mpfr_sub1sp@@Base+0xa84>
   14270:	ldr	x22, [x27, #24]
   14274:	lsl	x19, x8, #3
   14278:	mov	x3, x8
   1427c:	mov	x2, x24
   14280:	mov	x1, x6
   14284:	mov	x0, x22
   14288:	str	w4, [x29, #144]
   1428c:	str	x8, [x29, #152]
   14290:	bl	be60 <__gmpn_sub_n@plt>
   14294:	ldr	w4, [x29, #144]
   14298:	ldr	x8, [x29, #152]
   1429c:	add	x19, x22, x19
   142a0:	ldur	x0, [x19, #-8]
   142a4:	cbz	x0, 14300 <mpfr_sub1sp@@Base+0xae8>
   142a8:	clz	x3, x0
   142ac:	cbz	x3, 142cc <mpfr_sub1sp@@Base+0xab4>
   142b0:	mov	x2, x8
   142b4:	sub	x28, x28, x3
   142b8:	mov	x1, x22
   142bc:	mov	x0, x22
   142c0:	str	w4, [x29, #152]
   142c4:	bl	bcc0 <__gmpn_lshift@plt>
   142c8:	ldr	w4, [x29, #152]
   142cc:	mrs	x20, tpidr_el0
   142d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   142d4:	ldr	x1, [x0, #2512]
   142d8:	add	x0, x0, #0x9d0
   142dc:	blr	x1
   142e0:	ldr	x0, [x20, x0]
   142e4:	cmp	x0, x28
   142e8:	ldr	x0, [x29, #168]
   142ec:	b.gt	14e4c <mpfr_sub1sp@@Base+0x1634>
   142f0:	str	x28, [x27, #16]
   142f4:	cbz	x0, 13b18 <mpfr_sub1sp@@Base+0x300>
   142f8:	bl	c410 <mpfr_tmp_free@plt>
   142fc:	b	13b18 <mpfr_sub1sp@@Base+0x300>
   14300:	mov	x2, x26
   14304:	sub	x26, x26, #0x1
   14308:	ldr	x0, [x22, x26, lsl #3]
   1430c:	cbz	x0, 14300 <mpfr_sub1sp@@Base+0xae8>
   14310:	sub	x20, x8, x2
   14314:	str	w4, [x29, #152]
   14318:	clz	x3, x0
   1431c:	mov	x1, x22
   14320:	lsl	x21, x20, #3
   14324:	mov	x19, x3
   14328:	add	x0, x22, x21
   1432c:	cbz	x3, 15048 <mpfr_sub1sp@@Base+0x1830>
   14330:	bl	bcc0 <__gmpn_lshift@plt>
   14334:	ldr	w4, [x29, #152]
   14338:	mov	x2, x21
   1433c:	mov	x0, x22
   14340:	mov	w1, #0x0                   	// #0
   14344:	str	w4, [x29, #152]
   14348:	bl	c110 <memset@plt>
   1434c:	add	x0, x19, x20, lsl #6
   14350:	ldr	w4, [x29, #152]
   14354:	sub	x28, x28, x0
   14358:	b	142cc <mpfr_sub1sp@@Base+0xab4>
   1435c:	ldp	x0, x8, [x3]
   14360:	ldp	x7, x3, [x6]
   14364:	cmp	x0, x7
   14368:	sub	x1, x8, x3
   1436c:	cset	x6, cc  // cc = lo, ul, last
   14370:	sub	x2, x0, x7
   14374:	sub	x1, x1, x6
   14378:	orr	x9, x2, x1
   1437c:	cbz	x9, 14438 <mpfr_sub1sp@@Base+0xc20>
   14380:	ldr	w9, [x20, #8]
   14384:	cmp	x8, x1
   14388:	b.hi	143a4 <mpfr_sub1sp@@Base+0xb8c>  // b.pmore
   1438c:	subs	x2, x7, x0
   14390:	sub	x1, x3, x8
   14394:	cset	x0, ne  // ne = any
   14398:	neg	w9, w9
   1439c:	sub	x6, x6, x0
   143a0:	add	x1, x6, x1
   143a4:	str	w9, [x27, #8]
   143a8:	cbnz	x1, 143b8 <mpfr_sub1sp@@Base+0xba0>
   143ac:	sub	x23, x23, #0x40
   143b0:	mov	x1, x2
   143b4:	mov	x2, #0x0                   	// #0
   143b8:	clz	x3, x1
   143bc:	cbz	x3, 143d8 <mpfr_sub1sp@@Base+0xbc0>
   143c0:	neg	w6, w3
   143c4:	lsl	x0, x1, x3
   143c8:	sub	x23, x23, x3
   143cc:	lsr	x1, x2, x6
   143d0:	orr	x1, x1, x0
   143d4:	lsl	x2, x2, x3
   143d8:	mrs	x3, tpidr_el0
   143dc:	stp	x2, x1, [x5]
   143e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   143e4:	ldr	x2, [x0, #2512]
   143e8:	add	x0, x0, #0x9d0
   143ec:	blr	x2
   143f0:	ldr	x0, [x3, x0]
   143f4:	cmp	x23, x0
   143f8:	b.ge	141a0 <mpfr_sub1sp@@Base+0x988>  // b.tcont
   143fc:	cbnz	w4, 14e84 <mpfr_sub1sp@@Base+0x166c>
   14400:	sub	x0, x0, #0x1
   14404:	cmp	x0, x23
   14408:	b.gt	13ebc <mpfr_sub1sp@@Base+0x6a4>
   1440c:	ldr	x1, [x5, #8]
   14410:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14414:	cmp	x1, x0
   14418:	b.ne	14e84 <mpfr_sub1sp@@Base+0x166c>  // b.any
   1441c:	ldr	x0, [x5]
   14420:	cmp	x0, #0x0
   14424:	cset	w4, eq  // eq = none
   14428:	b	14e84 <mpfr_sub1sp@@Base+0x166c>
   1442c:	sub	x0, x0, #0x1
   14430:	cmn	x0, #0x1
   14434:	b.ne	13a18 <mpfr_sub1sp@@Base+0x200>  // b.any
   14438:	cmp	w4, #0x3
   1443c:	mov	w0, #0x1                   	// #1
   14440:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   14444:	cneg	w0, w0, eq  // eq = none
   14448:	mov	w1, #0x0                   	// #0
   1444c:	str	w0, [x27, #8]
   14450:	str	x2, [x27, #16]
   14454:	b	13b1c <mpfr_sub1sp@@Base+0x304>
   14458:	cmp	x28, #0x7f
   1445c:	b.ls	14640 <mpfr_sub1sp@@Base+0xe28>  // b.plast
   14460:	cmp	x7, x11
   14464:	cset	x3, hi  // hi = pmore
   14468:	subs	x3, x12, x3
   1446c:	b.mi	14e40 <mpfr_sub1sp@@Base+0x1628>  // b.first
   14470:	cmp	x28, #0x80
   14474:	ccmp	x19, #0x1, #0x0, ls  // ls = plast
   14478:	b.gt	144a0 <mpfr_sub1sp@@Base+0xc88>
   1447c:	ldr	x2, [x6, #8]
   14480:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14484:	mov	x9, #0x0                   	// #0
   14488:	cmp	x2, x0
   1448c:	b.ne	144a0 <mpfr_sub1sp@@Base+0xc88>  // b.any
   14490:	ldr	x0, [x6]
   14494:	cmp	x0, #0x0
   14498:	cset	x9, eq  // eq = none
   1449c:	nop
   144a0:	sub	x23, x23, #0x1
   144a4:	neg	x2, x7
   144a8:	mov	x0, #0xffffffffffffffff    	// #-1
   144ac:	stp	x2, x0, [x5]
   144b0:	mrs	x20, tpidr_el0
   144b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   144b8:	ldr	x2, [x0, #2512]
   144bc:	add	x0, x0, #0x9d0
   144c0:	blr	x2
   144c4:	ldr	x0, [x20, x0]
   144c8:	cmp	x23, x0
   144cc:	b.lt	143fc <mpfr_sub1sp@@Base+0xbe4>  // b.tstop
   144d0:	mov	x2, #0x1                   	// #1
   144d4:	str	x23, [x27, #16]
   144d8:	b	13ff0 <mpfr_sub1sp@@Base+0x7d8>
   144dc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   144e0:	cmp	x2, x0
   144e4:	csel	x19, x12, xzr, hi  // hi = pmore
   144e8:	str	x19, [x29, #128]
   144ec:	b	14058 <mpfr_sub1sp@@Base+0x840>
   144f0:	cbz	x2, 14508 <mpfr_sub1sp@@Base+0xcf0>
   144f4:	ldr	x2, [x5]
   144f8:	lsr	x19, x2, x19
   144fc:	and	x19, x19, #0x1
   14500:	orr	x0, x19, x0
   14504:	cbnz	x0, 13c58 <mpfr_sub1sp@@Base+0x440>
   14508:	cbz	w1, 13b18 <mpfr_sub1sp@@Base+0x300>
   1450c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   14510:	ldr	x2, [x0, #2576]
   14514:	add	x0, x0, #0xa10
   14518:	blr	x2
   1451c:	add	x0, x20, x0
   14520:	neg	w1, w1
   14524:	ldr	w2, [x0]
   14528:	orr	w2, w2, #0x8
   1452c:	str	w2, [x0]
   14530:	b	13b1c <mpfr_sub1sp@@Base+0x304>
   14534:	cmp	x28, #0x7f
   14538:	b.hi	14d08 <mpfr_sub1sp@@Base+0x14f0>  // b.pmore
   1453c:	cmp	x28, #0x40
   14540:	sub	w2, w28, #0x40
   14544:	ldp	x10, x6, [x11]
   14548:	ldr	x3, [x11, #16]
   1454c:	b.eq	14574 <mpfr_sub1sp@@Base+0xd5c>  // b.none
   14550:	mov	w0, #0x80                  	// #128
   14554:	sub	w28, w0, w28
   14558:	cmp	x10, #0x0
   1455c:	lsr	x0, x6, x2
   14560:	cset	x10, ne  // ne = any
   14564:	lsl	x6, x6, x28
   14568:	lsl	x28, x3, x28
   1456c:	orr	x10, x6, x10
   14570:	orr	x6, x28, x0
   14574:	subs	x11, x14, x6
   14578:	lsr	x3, x3, x2
   1457c:	cmp	x14, x6
   14580:	mov	x8, x11
   14584:	sbc	x0, x12, x3
   14588:	mov	x2, #0x1                   	// #1
   1458c:	cset	w3, cc  // cc = lo, ul, last
   14590:	cmp	x12, x0
   14594:	b.cc	145a4 <mpfr_sub1sp@@Base+0xd8c>  // b.lo, b.ul, b.last
   14598:	cmp	w3, #0x0
   1459c:	ccmp	x12, x0, #0x0, ne  // ne = any
   145a0:	cset	x2, eq  // eq = none
   145a4:	sub	x2, x13, x2
   145a8:	cbz	x10, 145d0 <mpfr_sub1sp@@Base+0xdb8>
   145ac:	orr	x3, x11, x0
   145b0:	neg	x10, x10
   145b4:	cmp	x3, #0x0
   145b8:	sub	x8, x11, #0x1
   145bc:	cset	x6, eq  // eq = none
   145c0:	cmp	x11, #0x0
   145c4:	cset	x3, eq  // eq = none
   145c8:	sub	x2, x2, x6
   145cc:	sub	x0, x0, x3
   145d0:	tbnz	x2, #63, 145e8 <mpfr_sub1sp@@Base+0xdd0>
   145d4:	sub	x23, x23, #0x1
   145d8:	extr	x2, x2, x0, #63
   145dc:	extr	x0, x0, x8, #63
   145e0:	extr	x8, x8, x10, #63
   145e4:	lsl	x10, x10, #1
   145e8:	sub	w11, w19, #0x1
   145ec:	mov	x6, #0x1                   	// #1
   145f0:	stp	x0, x2, [x5, #8]
   145f4:	neg	x3, x7
   145f8:	lsl	x0, x6, x11
   145fc:	eor	x9, x9, x0
   14600:	and	x6, x0, x8
   14604:	and	x9, x9, x8
   14608:	and	x8, x3, x8
   1460c:	orr	x9, x9, x10
   14610:	str	x8, [x5]
   14614:	b	13dc4 <mpfr_sub1sp@@Base+0x5ac>
   14618:	sub	x0, x0, x7
   1461c:	str	x0, [x5]
   14620:	b	141dc <mpfr_sub1sp@@Base+0x9c4>
   14624:	cmp	x2, #0x0
   14628:	neg	x8, x8
   1462c:	cset	x3, eq  // eq = none
   14630:	sub	x3, x0, x3
   14634:	sub	x0, x2, #0x1
   14638:	mov	x2, x3
   1463c:	b	13f68 <mpfr_sub1sp@@Base+0x750>
   14640:	ldp	x9, x6, [x6]
   14644:	cmp	x9, #0x0
   14648:	cset	w13, ne  // ne = any
   1464c:	cset	x2, ne  // ne = any
   14650:	cmp	x28, #0x40
   14654:	b.eq	14670 <mpfr_sub1sp@@Base+0xe58>  // b.none
   14658:	sub	w3, w8, w28
   1465c:	lsl	x3, x6, x3
   14660:	orr	x9, x3, x2
   14664:	cmp	x9, #0x0
   14668:	cset	w13, ne  // ne = any
   1466c:	cset	x2, ne  // ne = any
   14670:	sub	w28, w28, #0x40
   14674:	neg	x3, x9
   14678:	lsr	x6, x6, x28
   1467c:	add	x6, x6, x2
   14680:	cmp	x6, x11
   14684:	sub	x11, x11, x6
   14688:	cset	x0, hi  // hi = pmore
   1468c:	cmp	x6, #0x0
   14690:	ccmp	w13, #0x0, #0x4, eq  // eq = none
   14694:	sub	x0, x12, x0
   14698:	cset	x2, ne  // ne = any
   1469c:	subs	x0, x0, x2
   146a0:	b.mi	146b4 <mpfr_sub1sp@@Base+0xe9c>  // b.first
   146a4:	sub	x23, x23, #0x1
   146a8:	extr	x0, x0, x11, #63
   146ac:	extr	x11, x11, x3, #63
   146b0:	lsl	x3, x3, #1
   146b4:	sub	w2, w19, #0x1
   146b8:	mov	x9, #0x1                   	// #1
   146bc:	neg	x8, x7
   146c0:	str	x0, [x5, #8]
   146c4:	lsl	x9, x9, x2
   146c8:	eor	x2, x10, x9
   146cc:	and	x2, x2, x11
   146d0:	and	x0, x8, x11
   146d4:	and	x9, x9, x11
   146d8:	orr	x2, x2, x3
   146dc:	str	x0, [x5]
   146e0:	b	13fc4 <mpfr_sub1sp@@Base+0x7ac>
   146e4:	mov	x3, x0
   146e8:	mov	x2, x23
   146ec:	mov	x0, x11
   146f0:	mov	x23, x28
   146f4:	mov	x11, x3
   146f8:	mov	x28, x2
   146fc:	neg	w1, w1
   14700:	b	13ca8 <mpfr_sub1sp@@Base+0x490>
   14704:	ldr	x2, [x5]
   14708:	ldr	x1, [x0]
   1470c:	subs	x0, x1, x2
   14710:	cmp	x1, x2
   14714:	cset	x5, cc  // cc = lo, ul, last
   14718:	cbz	x0, 14438 <mpfr_sub1sp@@Base+0xc20>
   1471c:	ldr	w3, [x20, #8]
   14720:	cbz	x5, 1472c <mpfr_sub1sp@@Base+0xf14>
   14724:	neg	w3, w3
   14728:	sub	x0, x2, x1
   1472c:	clz	x1, x0
   14730:	str	w3, [x27, #8]
   14734:	sub	x23, x23, x1
   14738:	lsl	x0, x0, x1
   1473c:	str	x0, [x6]
   14740:	b	14180 <mpfr_sub1sp@@Base+0x968>
   14744:	cmp	w4, #0x3
   14748:	mov	w0, #0x1                   	// #1
   1474c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   14750:	cneg	w0, w0, eq  // eq = none
   14754:	str	w0, [x27, #8]
   14758:	str	x2, [x27, #16]
   1475c:	b	13b1c <mpfr_sub1sp@@Base+0x304>
   14760:	mov	x1, x25
   14764:	add	x0, x29, #0xa8
   14768:	str	x10, [x29, #128]
   1476c:	str	w4, [x29, #136]
   14770:	stp	x8, x11, [x29, #144]
   14774:	bl	bdc0 <mpfr_tmp_allocate@plt>
   14778:	ldr	w4, [x29, #136]
   1477c:	mov	x9, x0
   14780:	ldr	x10, [x29, #128]
   14784:	ldp	x8, x11, [x29, #144]
   14788:	b	138f8 <mpfr_sub1sp@@Base+0xe0>
   1478c:	ldr	x2, [x25]
   14790:	cbnz	w4, 151bc <mpfr_sub1sp@@Base+0x19a4>
   14794:	cbz	x22, 140a4 <mpfr_sub1sp@@Base+0x88c>
   14798:	cbnz	x21, 147a4 <mpfr_sub1sp@@Base+0xf8c>
   1479c:	lsr	x0, x2, x24
   147a0:	tbz	w0, #0, 140a4 <mpfr_sub1sp@@Base+0x88c>
   147a4:	mov	x10, #0x1                   	// #1
   147a8:	mov	w20, #0x0                   	// #0
   147ac:	lsl	x5, x10, x24
   147b0:	subs	x0, x2, x5
   147b4:	str	x0, [x25]
   147b8:	b.cs	147e4 <mpfr_sub1sp@@Base+0xfcc>  // b.hs, b.nlast
   147bc:	mov	x0, #0x1                   	// #1
   147c0:	ldr	x2, [x25, x0, lsl #3]
   147c4:	cmp	x26, x0
   147c8:	cset	w1, gt
   147cc:	sub	x3, x2, #0x1
   147d0:	str	x3, [x25, x0, lsl #3]
   147d4:	cmp	x2, #0x0
   147d8:	add	x0, x0, #0x1
   147dc:	csel	w1, w1, wzr, eq  // eq = none
   147e0:	cbnz	w1, 147c0 <mpfr_sub1sp@@Base+0xfa8>
   147e4:	ldr	x0, [x9]
   147e8:	tbz	x0, #63, 15270 <mpfr_sub1sp@@Base+0x1a58>
   147ec:	mov	w19, #0xffffffff            	// #-1
   147f0:	b	140c0 <mpfr_sub1sp@@Base+0x8a8>
   147f4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   147f8:	str	x0, [x5]
   147fc:	add	x23, x23, #0x1
   14800:	str	x23, [x27, #16]
   14804:	b	13c64 <mpfr_sub1sp@@Base+0x44c>
   14808:	mov	x1, x19
   1480c:	add	x0, x29, #0xa8
   14810:	str	w4, [x29, #144]
   14814:	str	x8, [x29, #152]
   14818:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1481c:	ldr	w4, [x29, #144]
   14820:	mov	x20, x0
   14824:	ldr	x6, [x21, #24]
   14828:	ldr	x8, [x29, #152]
   1482c:	b	1422c <mpfr_sub1sp@@Base+0xa14>
   14830:	ldp	x7, x6, [x0]
   14834:	mov	x9, #0x1                   	// #1
   14838:	ldp	x8, x2, [x11]
   1483c:	ldr	x10, [x0, #16]
   14840:	ldr	x11, [x11, #16]
   14844:	cmp	x7, x8
   14848:	sub	x1, x6, x2
   1484c:	cset	x12, cc  // cc = lo, ul, last
   14850:	cset	w3, cc  // cc = lo, ul, last
   14854:	sub	x1, x1, x12
   14858:	sub	x13, x7, x8
   1485c:	cmp	x6, x2
   14860:	sub	x0, x10, x11
   14864:	b.cc	14874 <mpfr_sub1sp@@Base+0x105c>  // b.lo, b.ul, b.last
   14868:	cmp	w3, #0x0
   1486c:	ccmp	x6, x2, #0x0, ne  // ne = any
   14870:	cset	x9, eq  // eq = none
   14874:	sub	x0, x0, x9
   14878:	orr	x3, x13, x1
   1487c:	orr	x3, x3, x0
   14880:	cbz	x3, 14438 <mpfr_sub1sp@@Base+0xc20>
   14884:	ldr	w3, [x20, #8]
   14888:	cmp	x10, x0
   1488c:	b.hi	148c0 <mpfr_sub1sp@@Base+0x10a8>  // b.pmore
   14890:	subs	x13, x8, x7
   14894:	sub	x1, x2, x6
   14898:	cset	x0, ne  // ne = any
   1489c:	sub	x10, x11, x10
   148a0:	sub	x12, x12, x0
   148a4:	neg	w3, w3
   148a8:	add	x1, x12, x1
   148ac:	orr	x0, x13, x1
   148b0:	cmp	x0, #0x0
   148b4:	cset	x0, ne  // ne = any
   148b8:	sub	x0, x9, x0
   148bc:	add	x0, x0, x10
   148c0:	str	w3, [x27, #8]
   148c4:	cbnz	x0, 148dc <mpfr_sub1sp@@Base+0x10c4>
   148c8:	cbz	x1, 14f4c <mpfr_sub1sp@@Base+0x1734>
   148cc:	sub	x23, x23, #0x40
   148d0:	mov	x0, x1
   148d4:	mov	x1, x13
   148d8:	mov	x13, #0x0                   	// #0
   148dc:	clz	x2, x0
   148e0:	cbz	x2, 14dd8 <mpfr_sub1sp@@Base+0x15c0>
   148e4:	mov	w3, #0x40                  	// #64
   148e8:	sub	w3, w3, w2
   148ec:	lsl	x0, x0, x2
   148f0:	sub	x23, x23, x2
   148f4:	lsr	x6, x1, x3
   148f8:	orr	x0, x0, x6
   148fc:	lsl	x1, x1, x2
   14900:	str	x0, [x5, #16]
   14904:	lsr	x3, x13, x3
   14908:	orr	x3, x1, x3
   1490c:	lsl	x2, x13, x2
   14910:	stp	x2, x3, [x5]
   14914:	mrs	x1, tpidr_el0
   14918:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1491c:	ldr	x2, [x0, #2512]
   14920:	add	x0, x0, #0x9d0
   14924:	blr	x2
   14928:	ldr	x0, [x1, x0]
   1492c:	cmp	x23, x0
   14930:	b.ge	141a0 <mpfr_sub1sp@@Base+0x988>  // b.tcont
   14934:	cbnz	w4, 14e84 <mpfr_sub1sp@@Base+0x166c>
   14938:	sub	x0, x0, #0x1
   1493c:	cmp	x0, x23
   14940:	b.gt	13ebc <mpfr_sub1sp@@Base+0x6a4>
   14944:	ldr	x1, [x5, #16]
   14948:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1494c:	cmp	x1, x0
   14950:	b.ne	14e84 <mpfr_sub1sp@@Base+0x166c>  // b.any
   14954:	ldr	x0, [x5, #8]
   14958:	cbz	x0, 1441c <mpfr_sub1sp@@Base+0xc04>
   1495c:	b	14e84 <mpfr_sub1sp@@Base+0x166c>
   14960:	cmp	w4, #0x1
   14964:	b.eq	14508 <mpfr_sub1sp@@Base+0xcf0>  // b.none
   14968:	add	w3, w4, w1, lsr #31
   1496c:	cmp	w3, #0x3
   14970:	b.eq	14508 <mpfr_sub1sp@@Base+0xcf0>  // b.none
   14974:	ldr	x0, [x5]
   14978:	b	14014 <mpfr_sub1sp@@Base+0x7fc>
   1497c:	cmp	w4, #0x1
   14980:	b.eq	14508 <mpfr_sub1sp@@Base+0xcf0>  // b.none
   14984:	add	w3, w4, w1, lsr #31
   14988:	cmp	w3, #0x3
   1498c:	b.eq	14508 <mpfr_sub1sp@@Base+0xcf0>  // b.none
   14990:	ldr	x0, [x5]
   14994:	b	13e14 <mpfr_sub1sp@@Base+0x5fc>
   14998:	bl	c410 <mpfr_tmp_free@plt>
   1499c:	b	140cc <mpfr_sub1sp@@Base+0x8b4>
   149a0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   149a4:	cmp	x3, x8
   149a8:	b.ls	14de4 <mpfr_sub1sp@@Base+0x15cc>  // b.plast
   149ac:	mov	x2, #0x1                   	// #1
   149b0:	cmp	x28, #0x40
   149b4:	mov	x7, x2
   149b8:	b.ne	149cc <mpfr_sub1sp@@Base+0x11b4>  // b.any
   149bc:	ldr	x0, [x5]
   149c0:	cmp	x0, x8
   149c4:	cset	x7, eq  // eq = none
   149c8:	cset	x2, ne  // ne = any
   149cc:	sub	x3, x3, #0x1
   149d0:	str	x3, [x6]
   149d4:	mrs	x20, tpidr_el0
   149d8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   149dc:	ldr	x3, [x0, #2512]
   149e0:	add	x0, x0, #0x9d0
   149e4:	blr	x3
   149e8:	ldr	x0, [x20, x0]
   149ec:	cmp	x0, x23
   149f0:	b.gt	15560 <mpfr_sub1sp@@Base+0x1d48>
   149f4:	orr	x0, x7, x2
   149f8:	str	x23, [x27, #16]
   149fc:	cmp	x0, #0x0
   14a00:	ccmp	w4, #0x5, #0x4, ne  // ne = any
   14a04:	b.eq	13b18 <mpfr_sub1sp@@Base+0x300>  // b.none
   14a08:	cbnz	w4, 14dbc <mpfr_sub1sp@@Base+0x15a4>
   14a0c:	cbz	x7, 14508 <mpfr_sub1sp@@Base+0xcf0>
   14a10:	ldr	x0, [x6]
   14a14:	and	x3, x0, #0x1
   14a18:	orr	x2, x3, x2
   14a1c:	cbz	x2, 14508 <mpfr_sub1sp@@Base+0xcf0>
   14a20:	add	x0, x0, #0x1
   14a24:	str	x0, [x6]
   14a28:	cbnz	x0, 13c64 <mpfr_sub1sp@@Base+0x44c>
   14a2c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14a30:	str	x0, [x6]
   14a34:	add	x23, x23, #0x1
   14a38:	str	x23, [x27, #16]
   14a3c:	b	13c64 <mpfr_sub1sp@@Base+0x44c>
   14a40:	ldr	x1, [x21, #24]
   14a44:	ldr	x25, [x27, #24]
   14a48:	b.eq	150ac <mpfr_sub1sp@@Base+0x1894>  // b.none
   14a4c:	cmp	x10, x22
   14a50:	cset	w0, eq  // eq = none
   14a54:	cset	x2, eq  // eq = none
   14a58:	cmp	w4, #0x0
   14a5c:	str	x2, [x29, #128]
   14a60:	cset	w21, eq  // eq = none
   14a64:	cmp	w0, #0x0
   14a68:	ccmp	w21, #0x0, #0x4, ne  // ne = any
   14a6c:	b.ne	15410 <mpfr_sub1sp@@Base+0x1bf8>  // b.any
   14a70:	lsl	x20, x8, #3
   14a74:	mov	x19, #0xffffffffffffffff    	// #-1
   14a78:	cmp	x25, x1
   14a7c:	b.eq	14a94 <mpfr_sub1sp@@Base+0x127c>  // b.none
   14a80:	mov	x2, x20
   14a84:	mov	x0, x25
   14a88:	str	w4, [x29, #152]
   14a8c:	bl	ba10 <memcpy@plt>
   14a90:	ldr	w4, [x29, #152]
   14a94:	cmp	w4, #0x5
   14a98:	sub	x8, x20, #0x8
   14a9c:	csinc	w10, w21, wzr, ne  // ne = any
   14aa0:	add	x9, x25, x8
   14aa4:	cbnz	w10, 14f3c <mpfr_sub1sp@@Base+0x1724>
   14aa8:	ldr	w0, [x27, #8]
   14aac:	add	w0, w4, w0, lsr #31
   14ab0:	cmp	w0, #0x3
   14ab4:	cset	w20, eq  // eq = none
   14ab8:	cmp	w4, #0x1
   14abc:	csinc	w20, w20, wzr, ne  // ne = any
   14ac0:	cbnz	w20, 14fd4 <mpfr_sub1sp@@Base+0x17bc>
   14ac4:	mov	x21, #0x1                   	// #1
   14ac8:	mov	x22, #0x0                   	// #0
   14acc:	ldr	x0, [x9]
   14ad0:	b	140a8 <mpfr_sub1sp@@Base+0x890>
   14ad4:	sub	x0, x26, #0x1
   14ad8:	ldr	x1, [x25, x0, lsl #3]
   14adc:	sub	x0, x0, #0x1
   14ae0:	cmn	x0, #0x1
   14ae4:	cbnz	x1, 140b4 <mpfr_sub1sp@@Base+0x89c>
   14ae8:	b.ne	14ad8 <mpfr_sub1sp@@Base+0x12c0>  // b.any
   14aec:	cmp	w4, #0x0
   14af0:	ccmp	x22, #0x0, #0x0, eq  // eq = none
   14af4:	b.ne	152bc <mpfr_sub1sp@@Base+0x1aa4>  // b.any
   14af8:	ldr	x0, [x29, #128]
   14afc:	cmp	x0, #0x0
   14b00:	ccmp	x19, #0x0, #0x4, ne  // ne = any
   14b04:	b.eq	140b4 <mpfr_sub1sp@@Base+0x89c>  // b.none
   14b08:	ldrb	w2, [x29, #104]
   14b0c:	mov	x0, #0x1                   	// #1
   14b10:	ldr	x1, [x25]
   14b14:	lsl	x3, x0, x2
   14b18:	sub	x2, x1, x3
   14b1c:	str	x2, [x25]
   14b20:	cmp	x3, x1
   14b24:	b.hi	14b50 <mpfr_sub1sp@@Base+0x1338>  // b.pmore
   14b28:	ldr	x0, [x9]
   14b2c:	sub	x28, x28, #0x1
   14b30:	mov	w19, #0x0                   	// #0
   14b34:	orr	x0, x0, #0x8000000000000000
   14b38:	str	x0, [x9]
   14b3c:	cbz	x21, 140c0 <mpfr_sub1sp@@Base+0x8a8>
   14b40:	cmp	w4, #0x0
   14b44:	mov	w1, #0x1                   	// #1
   14b48:	cneg	w19, w1, eq  // eq = none
   14b4c:	b	140c0 <mpfr_sub1sp@@Base+0x8a8>
   14b50:	ldr	x1, [x25, x0, lsl #3]
   14b54:	cmp	x1, #0x0
   14b58:	sub	x1, x1, #0x1
   14b5c:	cset	w2, eq  // eq = none
   14b60:	cmp	x26, x0
   14b64:	str	x1, [x25, x0, lsl #3]
   14b68:	cset	w1, gt
   14b6c:	add	x0, x0, #0x1
   14b70:	tst	w2, w1
   14b74:	b.ne	14b50 <mpfr_sub1sp@@Base+0x1338>  // b.any
   14b78:	b	14b28 <mpfr_sub1sp@@Base+0x1310>
   14b7c:	lsl	x3, x0, #3
   14b80:	sub	x22, x8, x0
   14b84:	add	x1, x1, x3
   14b88:	cmp	x1, x9
   14b8c:	b.eq	14bc4 <mpfr_sub1sp@@Base+0x13ac>  // b.none
   14b90:	sub	x22, x8, x0
   14b94:	mov	x0, x9
   14b98:	str	x10, [x29, #120]
   14b9c:	lsl	x2, x22, #3
   14ba0:	str	w4, [x29, #128]
   14ba4:	stp	x11, x3, [x29, #136]
   14ba8:	str	x8, [x29, #152]
   14bac:	bl	ba10 <memcpy@plt>
   14bb0:	ldp	x11, x3, [x29, #136]
   14bb4:	mov	x9, x0
   14bb8:	ldr	w4, [x29, #128]
   14bbc:	ldr	x10, [x29, #120]
   14bc0:	ldr	x8, [x29, #152]
   14bc4:	add	x0, x9, x22, lsl #3
   14bc8:	mov	x2, x3
   14bcc:	mov	w1, #0x0                   	// #0
   14bd0:	str	x10, [x29, #120]
   14bd4:	str	w4, [x29, #128]
   14bd8:	stp	x8, x11, [x29, #136]
   14bdc:	str	x9, [x29, #152]
   14be0:	bl	c110 <memset@plt>
   14be4:	ldr	w4, [x29, #128]
   14be8:	ldr	x10, [x29, #120]
   14bec:	ldp	x8, x11, [x29, #136]
   14bf0:	ldr	x9, [x29, #152]
   14bf4:	b	13938 <mpfr_sub1sp@@Base+0x120>
   14bf8:	add	x0, x19, x23
   14bfc:	mov	x11, #0x3f                  	// #63
   14c00:	subs	x0, x0, x28
   14c04:	mov	x14, #0x1                   	// #1
   14c08:	add	x21, x0, x11
   14c0c:	mov	x12, #0xffffffffffffffff    	// #-1
   14c10:	csel	x21, x21, x0, mi  // mi = first
   14c14:	negs	x7, x0
   14c18:	ldr	x13, [x20, #24]
   14c1c:	sub	x21, x26, x21, asr #6
   14c20:	and	x7, x7, x11
   14c24:	and	x0, x0, x11
   14c28:	csneg	x0, x0, x7, mi  // mi = first
   14c2c:	sub	x0, x11, x0
   14c30:	ldr	x11, [x13, x21, lsl #3]
   14c34:	lsl	x7, x14, x0
   14c38:	lsl	x0, x12, x0
   14c3c:	and	x22, x7, x11
   14c40:	bics	xzr, x11, x0
   14c44:	b.ne	14040 <mpfr_sub1sp@@Base+0x828>  // b.any
   14c48:	b	14c54 <mpfr_sub1sp@@Base+0x143c>
   14c4c:	ldr	x0, [x13, x21, lsl #3]
   14c50:	cbnz	x0, 14c5c <mpfr_sub1sp@@Base+0x1444>
   14c54:	subs	x21, x21, #0x1
   14c58:	b.pl	14c4c <mpfr_sub1sp@@Base+0x1434>  // b.nfrst
   14c5c:	mvn	x21, x21
   14c60:	lsr	x21, x21, #63
   14c64:	b	139e4 <mpfr_sub1sp@@Base+0x1cc>
   14c68:	mov	x2, x8
   14c6c:	mov	w3, w20
   14c70:	mov	x1, x25
   14c74:	mov	x0, x25
   14c78:	str	w4, [x29, #144]
   14c7c:	str	x9, [x29, #152]
   14c80:	bl	bcc0 <__gmpn_lshift@plt>
   14c84:	ldr	w4, [x29, #144]
   14c88:	ldr	x9, [x29, #152]
   14c8c:	cbnz	x22, 151f4 <mpfr_sub1sp@@Base+0x19dc>
   14c90:	sub	x28, x28, #0x1
   14c94:	mov	x21, x19
   14c98:	ldr	x22, [x29, #128]
   14c9c:	b	1409c <mpfr_sub1sp@@Base+0x884>
   14ca0:	lsl	x7, x0, #3
   14ca4:	sub	x22, x8, x0
   14ca8:	add	x1, x1, x7
   14cac:	mov	x2, x22
   14cb0:	mov	x0, x9
   14cb4:	str	x10, [x29, #96]
   14cb8:	str	w4, [x29, #120]
   14cbc:	stp	x11, x8, [x29, #128]
   14cc0:	stp	x7, x9, [x29, #144]
   14cc4:	bl	bce0 <__gmpn_rshift@plt>
   14cc8:	mov	w1, #0x0                   	// #0
   14ccc:	ldp	x7, x9, [x29, #144]
   14cd0:	add	x0, x9, x22, lsl #3
   14cd4:	mov	x2, x7
   14cd8:	bl	c110 <memset@plt>
   14cdc:	ldr	w4, [x29, #120]
   14ce0:	ldr	x10, [x29, #96]
   14ce4:	ldp	x11, x8, [x29, #128]
   14ce8:	ldr	x9, [x29, #152]
   14cec:	b	13938 <mpfr_sub1sp@@Base+0x120>
   14cf0:	cbnz	x10, 15514 <mpfr_sub1sp@@Base+0x1cfc>
   14cf4:	cbz	x8, 14f28 <mpfr_sub1sp@@Base+0x1710>
   14cf8:	mov	x11, x8
   14cfc:	sub	x23, x23, #0x40
   14d00:	mov	x8, x17
   14d04:	b	13d5c <mpfr_sub1sp@@Base+0x544>
   14d08:	cmp	x28, #0xbf
   14d0c:	b.hi	14eac <mpfr_sub1sp@@Base+0x1694>  // b.pmore
   14d10:	cmp	x28, #0x80
   14d14:	ldp	x2, x10, [x11]
   14d18:	ldr	x0, [x11, #16]
   14d1c:	b.eq	1509c <mpfr_sub1sp@@Base+0x1884>  // b.none
   14d20:	orr	x2, x2, x10
   14d24:	sub	w3, w3, w28
   14d28:	cmp	x2, #0x0
   14d2c:	cset	x10, ne  // ne = any
   14d30:	lsl	x3, x0, x3
   14d34:	orr	x3, x10, x3
   14d38:	sub	w8, w28, #0x80
   14d3c:	negs	x10, x3
   14d40:	cset	x3, ne  // ne = any
   14d44:	cset	w2, ne  // ne = any
   14d48:	lsr	x8, x0, x8
   14d4c:	sub	x8, x14, x8
   14d50:	sub	x8, x8, x3
   14d54:	mov	x0, #0x1                   	// #1
   14d58:	cmp	x14, x8
   14d5c:	b.cc	14d6c <mpfr_sub1sp@@Base+0x1554>  // b.lo, b.ul, b.last
   14d60:	cmp	w2, #0x0
   14d64:	ccmp	x14, x8, #0x0, ne  // ne = any
   14d68:	cset	x0, eq  // eq = none
   14d6c:	subs	x12, x12, x0
   14d70:	sbc	x2, x13, xzr
   14d74:	tbnz	x2, #63, 14d8c <mpfr_sub1sp@@Base+0x1574>
   14d78:	sub	x23, x23, #0x1
   14d7c:	extr	x2, x2, x12, #63
   14d80:	extr	x12, x12, x8, #63
   14d84:	extr	x8, x8, x10, #63
   14d88:	lsl	x10, x10, #1
   14d8c:	sub	w3, w19, #0x1
   14d90:	mov	x6, #0x1                   	// #1
   14d94:	neg	x0, x7
   14d98:	str	x2, [x5, #16]
   14d9c:	lsl	x6, x6, x3
   14da0:	eor	x9, x9, x6
   14da4:	and	x9, x9, x8
   14da8:	and	x6, x6, x8
   14dac:	orr	x9, x9, x10
   14db0:	and	x8, x0, x8
   14db4:	stp	x8, x12, [x5]
   14db8:	b	13dc4 <mpfr_sub1sp@@Base+0x5ac>
   14dbc:	cmp	w4, #0x1
   14dc0:	b.eq	14508 <mpfr_sub1sp@@Base+0xcf0>  // b.none
   14dc4:	add	w3, w4, w1, lsr #31
   14dc8:	cmp	w3, #0x3
   14dcc:	b.eq	14508 <mpfr_sub1sp@@Base+0xcf0>  // b.none
   14dd0:	ldr	x0, [x6]
   14dd4:	b	14a20 <mpfr_sub1sp@@Base+0x1208>
   14dd8:	stp	x13, x1, [x5]
   14ddc:	str	x0, [x5, #16]
   14de0:	b	14914 <mpfr_sub1sp@@Base+0x10fc>
   14de4:	sub	x23, x23, #0x1
   14de8:	cmp	x28, #0x40
   14dec:	b.eq	1505c <mpfr_sub1sp@@Base+0x1844>  // b.none
   14df0:	mov	x7, #0x1                   	// #1
   14df4:	cmp	x28, #0x41
   14df8:	mov	x2, x7
   14dfc:	b.eq	15240 <mpfr_sub1sp@@Base+0x1a28>  // b.none
   14e00:	mov	x0, #0xffffffffffffffff    	// #-1
   14e04:	str	x0, [x6]
   14e08:	b	149d4 <mpfr_sub1sp@@Base+0x11bc>
   14e0c:	clz	x5, x3
   14e10:	sub	w2, w2, w5
   14e14:	cmp	w5, #0x0
   14e18:	lsl	x7, x3, x5
   14e1c:	sub	x23, x23, x5
   14e20:	lsr	x2, x0, x2
   14e24:	orr	x2, x2, x7
   14e28:	csel	x3, x2, x3, ne  // ne = any
   14e2c:	lsl	x0, x0, x5
   14e30:	and	x7, x0, #0x8000000000000000
   14e34:	and	x2, x0, #0x7fffffffffffffff
   14e38:	str	x3, [x6]
   14e3c:	b	149d4 <mpfr_sub1sp@@Base+0x11bc>
   14e40:	sub	x0, x11, x7
   14e44:	stp	x0, x3, [x5]
   14e48:	b	144b0 <mpfr_sub1sp@@Base+0xc98>
   14e4c:	cbnz	x0, 14e9c <mpfr_sub1sp@@Base+0x1684>
   14e50:	cbnz	w4, 14e84 <mpfr_sub1sp@@Base+0x166c>
   14e54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   14e58:	ldr	x1, [x0, #2512]
   14e5c:	add	x0, x0, #0x9d0
   14e60:	blr	x1
   14e64:	ldr	x0, [x20, x0]
   14e68:	sub	x0, x0, #0x1
   14e6c:	cmp	x0, x28
   14e70:	b.gt	13ebc <mpfr_sub1sp@@Base+0x6a4>
   14e74:	mov	x0, x27
   14e78:	bl	bf00 <mpfr_powerof2_raw@plt>
   14e7c:	cmp	w0, #0x0
   14e80:	cset	w4, ne  // ne = any
   14e84:	ldr	w2, [x27, #8]
   14e88:	mov	w1, w4
   14e8c:	mov	x0, x27
   14e90:	bl	c3c0 <mpfr_underflow@plt>
   14e94:	mov	w1, w0
   14e98:	b	13b1c <mpfr_sub1sp@@Base+0x304>
   14e9c:	str	w4, [x29, #152]
   14ea0:	bl	c410 <mpfr_tmp_free@plt>
   14ea4:	ldr	w4, [x29, #152]
   14ea8:	b	14e50 <mpfr_sub1sp@@Base+0x1638>
   14eac:	cmp	x14, x7
   14eb0:	cset	x3, cc  // cc = lo, ul, last
   14eb4:	subs	x2, x12, x3
   14eb8:	cmp	x12, x3
   14ebc:	sbc	x3, x13, xzr
   14ec0:	tbnz	x3, #63, 15088 <mpfr_sub1sp@@Base+0x1870>
   14ec4:	cmp	x28, #0xc0
   14ec8:	mov	x6, x16
   14ecc:	ccmp	x19, #0x1, #0x0, ls  // ls = plast
   14ed0:	b.gt	14ee8 <mpfr_sub1sp@@Base+0x16d0>
   14ed4:	ldr	x2, [x11, #16]
   14ed8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14edc:	mov	x6, #0x0                   	// #0
   14ee0:	cmp	x2, x0
   14ee4:	b.eq	152cc <mpfr_sub1sp@@Base+0x1ab4>  // b.none
   14ee8:	sub	x23, x23, #0x1
   14eec:	mov	x0, #0xffffffffffffffff    	// #-1
   14ef0:	neg	x2, x7
   14ef4:	stp	x2, x0, [x5]
   14ef8:	str	x0, [x5, #16]
   14efc:	mrs	x20, tpidr_el0
   14f00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   14f04:	ldr	x2, [x0, #2512]
   14f08:	add	x0, x0, #0x9d0
   14f0c:	blr	x2
   14f10:	ldr	x0, [x20, x0]
   14f14:	cmp	x23, x0
   14f18:	b.lt	14934 <mpfr_sub1sp@@Base+0x111c>  // b.tstop
   14f1c:	mov	x9, #0x1                   	// #1
   14f20:	str	x23, [x27, #16]
   14f24:	b	13df0 <mpfr_sub1sp@@Base+0x5d8>
   14f28:	sub	x23, x23, #0x80
   14f2c:	mov	x11, x17
   14f30:	mov	x3, x8
   14f34:	mov	x10, x8
   14f38:	b	13d5c <mpfr_sub1sp@@Base+0x544>
   14f3c:	mov	x21, #0x1                   	// #1
   14f40:	mov	x22, #0x0                   	// #0
   14f44:	ldr	x0, [x25, x8]
   14f48:	b	140a8 <mpfr_sub1sp@@Base+0x890>
   14f4c:	mov	x0, x13
   14f50:	sub	x23, x23, #0x80
   14f54:	mov	x13, #0x0                   	// #0
   14f58:	b	148dc <mpfr_sub1sp@@Base+0x10c4>
   14f5c:	add	x0, x29, #0xa8
   14f60:	str	w4, [x29, #128]
   14f64:	stp	x6, x5, [x29, #136]
   14f68:	str	x8, [x29, #152]
   14f6c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   14f70:	ldr	w4, [x29, #128]
   14f74:	ldr	x24, [x20, #24]
   14f78:	mov	x20, x0
   14f7c:	ldp	x6, x5, [x29, #136]
   14f80:	ldr	x8, [x29, #152]
   14f84:	b	13aa8 <mpfr_sub1sp@@Base+0x290>
   14f88:	mov	w1, w19
   14f8c:	str	x1, [x29, #104]
   14f90:	cmp	w4, #0x5
   14f94:	b.eq	1525c <mpfr_sub1sp@@Base+0x1a44>  // b.none
   14f98:	ldr	x2, [x25]
   14f9c:	cbnz	w4, 15108 <mpfr_sub1sp@@Base+0x18f0>
   14fa0:	mov	x3, #0xffffffffffffffff    	// #-1
   14fa4:	str	x3, [x29, #128]
   14fa8:	lsr	x1, x2, x19
   14fac:	mvn	x1, x1
   14fb0:	and	x22, x1, #0x1
   14fb4:	mov	x19, x3
   14fb8:	mov	x21, #0x0                   	// #0
   14fbc:	tbnz	w1, #0, 140a8 <mpfr_sub1sp@@Base+0x890>
   14fc0:	mov	x21, x22
   14fc4:	mov	w10, #0x1                   	// #1
   14fc8:	mov	w20, #0x0                   	// #0
   14fcc:	mov	x22, #0x1                   	// #1
   14fd0:	b	147b0 <mpfr_sub1sp@@Base+0xf98>
   14fd4:	mov	x5, #0x1                   	// #1
   14fd8:	mov	x21, x5
   14fdc:	mov	w4, w21
   14fe0:	lsl	x5, x5, x24
   14fe4:	mov	x22, #0x0                   	// #0
   14fe8:	ldr	x2, [x25]
   14fec:	b	147b0 <mpfr_sub1sp@@Base+0xf98>
   14ff0:	lsl	x0, x1, #63
   14ff4:	sub	x1, x26, #0x1
   14ff8:	ldr	x2, [x24, x1, lsl #3]
   14ffc:	ldr	x5, [x6, x1, lsl #3]
   15000:	sub	x1, x1, #0x1
   15004:	add	x3, x0, x2, lsr #1
   15008:	lsl	x0, x2, #63
   1500c:	cmp	x5, x3
   15010:	b.ne	15054 <mpfr_sub1sp@@Base+0x183c>  // b.any
   15014:	cmn	x1, #0x1
   15018:	b.ne	14ff8 <mpfr_sub1sp@@Base+0x17e0>  // b.any
   1501c:	ldr	x3, [x27, #24]
   15020:	cbnz	x0, 15490 <mpfr_sub1sp@@Base+0x1c78>
   15024:	mov	x0, x3
   15028:	mov	x2, x23
   1502c:	mov	w1, #0x0                   	// #0
   15030:	bl	c110 <memset@plt>
   15034:	mov	x3, x0
   15038:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1503c:	str	x0, [x3, x23]
   15040:	str	x28, [x27, #16]
   15044:	b	13b10 <mpfr_sub1sp@@Base+0x2f8>
   15048:	bl	bae0 <__gmpn_copyd@plt>
   1504c:	ldr	w4, [x29, #152]
   15050:	b	14338 <mpfr_sub1sp@@Base+0xb20>
   15054:	b.hi	13a6c <mpfr_sub1sp@@Base+0x254>  // b.pmore
   15058:	b	1420c <mpfr_sub1sp@@Base+0x9f4>
   1505c:	ldr	x0, [x5]
   15060:	cmp	x0, x8
   15064:	b.ls	15234 <mpfr_sub1sp@@Base+0x1a1c>  // b.plast
   15068:	neg	x0, x0
   1506c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   15070:	cmp	x0, x2
   15074:	mov	x3, #0xfffffffffffffffe    	// #-2
   15078:	lsl	x2, x0, #2
   1507c:	cset	x7, hi  // hi = pmore
   15080:	str	x3, [x6]
   15084:	b	149d4 <mpfr_sub1sp@@Base+0x11bc>
   15088:	sub	x0, x14, x7
   1508c:	mov	x6, x16
   15090:	stp	x0, x2, [x5]
   15094:	str	x3, [x5, #16]
   15098:	b	14efc <mpfr_sub1sp@@Base+0x16e4>
   1509c:	cmp	x2, #0x0
   150a0:	cset	x3, ne  // ne = any
   150a4:	orr	x3, x3, x10
   150a8:	b	14d38 <mpfr_sub1sp@@Base+0x1520>
   150ac:	lsl	x2, x8, #3
   150b0:	ldr	x5, [x20, #24]
   150b4:	sub	x23, x2, #0x8
   150b8:	ldr	x3, [x5, x23]
   150bc:	and	x6, x3, #0x4000000000000000
   150c0:	str	x6, [x29, #128]
   150c4:	tbz	x3, #62, 15390 <mpfr_sub1sp@@Base+0x1b78>
   150c8:	cmp	w4, #0x5
   150cc:	mov	x21, #0x1                   	// #1
   150d0:	b.ne	15354 <mpfr_sub1sp@@Base+0x1b3c>  // b.any
   150d4:	cmp	x25, x1
   150d8:	b.eq	150e4 <mpfr_sub1sp@@Base+0x18cc>  // b.none
   150dc:	mov	x0, x25
   150e0:	bl	ba10 <memcpy@plt>
   150e4:	mov	x7, #0x1                   	// #1
   150e8:	add	x9, x25, x23
   150ec:	mov	x22, x7
   150f0:	lsl	x5, x7, x24
   150f4:	mov	w10, #0x0                   	// #0
   150f8:	mov	w20, #0x0                   	// #0
   150fc:	mov	w4, #0x5                   	// #5
   15100:	ldr	x2, [x25]
   15104:	b	147b0 <mpfr_sub1sp@@Base+0xf98>
   15108:	ldr	w1, [x27, #8]
   1510c:	add	w1, w4, w1, lsr #31
   15110:	cmp	w1, #0x3
   15114:	cset	w20, eq  // eq = none
   15118:	cmp	w4, #0x1
   1511c:	csinc	w20, w20, wzr, ne  // ne = any
   15120:	cbnz	w20, 152e4 <mpfr_sub1sp@@Base+0x1acc>
   15124:	mov	x19, #0xffffffffffffffff    	// #-1
   15128:	mov	x21, #0x0                   	// #0
   1512c:	mov	x22, #0x1                   	// #1
   15130:	str	x19, [x29, #128]
   15134:	b	140a8 <mpfr_sub1sp@@Base+0x890>
   15138:	ldr	x13, [x20, #24]
   1513c:	sub	x23, x23, x28
   15140:	adds	x10, x23, x10
   15144:	mov	x11, #0x3f                  	// #63
   15148:	add	x0, x10, x11
   1514c:	mov	x6, #0x1                   	// #1
   15150:	csel	x0, x0, x10, mi  // mi = first
   15154:	negs	x2, x10
   15158:	and	x2, x2, x11
   1515c:	and	x10, x10, x11
   15160:	sub	x0, x26, x0, asr #6
   15164:	csneg	x10, x10, x2, mi  // mi = first
   15168:	sub	x10, x11, x10
   1516c:	mov	x21, x6
   15170:	mov	x19, x6
   15174:	ldr	x2, [x13, x0, lsl #3]
   15178:	lsl	x6, x6, x10
   1517c:	ands	x6, x6, x2
   15180:	str	x6, [x29, #128]
   15184:	b.eq	14058 <mpfr_sub1sp@@Base+0x840>  // b.none
   15188:	mov	x11, #0xffffffffffffffff    	// #-1
   1518c:	lsl	x10, x11, x10
   15190:	bics	xzr, x2, x10
   15194:	b.ne	14058 <mpfr_sub1sp@@Base+0x840>  // b.any
   15198:	b	151a4 <mpfr_sub1sp@@Base+0x198c>
   1519c:	ldr	x2, [x13, x0, lsl #3]
   151a0:	cbnz	x2, 151ac <mpfr_sub1sp@@Base+0x1994>
   151a4:	subs	x0, x0, #0x1
   151a8:	b.pl	1519c <mpfr_sub1sp@@Base+0x1984>  // b.nfrst
   151ac:	mvn	x0, x0
   151b0:	mov	x21, #0x1                   	// #1
   151b4:	lsr	x19, x0, #63
   151b8:	b	14058 <mpfr_sub1sp@@Base+0x840>
   151bc:	ldr	w0, [x27, #8]
   151c0:	add	w0, w4, w0, lsr #31
   151c4:	cmp	w0, #0x3
   151c8:	cset	w20, eq  // eq = none
   151cc:	cmp	w4, #0x1
   151d0:	csinc	w20, w20, wzr, ne  // ne = any
   151d4:	cbz	w20, 140a4 <mpfr_sub1sp@@Base+0x88c>
   151d8:	orr	x0, x22, x21
   151dc:	cbz	x0, 15480 <mpfr_sub1sp@@Base+0x1c68>
   151e0:	mov	x3, #0x1                   	// #1
   151e4:	mov	w10, #0x0                   	// #0
   151e8:	mov	w4, w3
   151ec:	lsl	x5, x3, x24
   151f0:	b	147b0 <mpfr_sub1sp@@Base+0xf98>
   151f4:	ldr	x0, [x25]
   151f8:	sub	x1, x0, x23
   151fc:	str	x1, [x25]
   15200:	cmp	x23, x0
   15204:	b.ls	14c90 <mpfr_sub1sp@@Base+0x1478>  // b.plast
   15208:	ldr	x0, [x25, x20, lsl #3]
   1520c:	cmp	x0, #0x0
   15210:	sub	x0, x0, #0x1
   15214:	cset	w1, eq  // eq = none
   15218:	cmp	x26, x20
   1521c:	str	x0, [x25, x20, lsl #3]
   15220:	cset	w0, gt
   15224:	add	x20, x20, #0x1
   15228:	tst	w1, w0
   1522c:	b.ne	15208 <mpfr_sub1sp@@Base+0x19f0>  // b.any
   15230:	b	14c90 <mpfr_sub1sp@@Base+0x1478>
   15234:	mov	x7, #0x0                   	// #0
   15238:	mov	x2, #0x0                   	// #0
   1523c:	b	14e00 <mpfr_sub1sp@@Base+0x15e8>
   15240:	ldr	x0, [x5]
   15244:	cmp	x0, x8
   15248:	b.eq	15238 <mpfr_sub1sp@@Base+0x1a20>  // b.none
   1524c:	mov	x7, #0x0                   	// #0
   15250:	b.hi	14e00 <mpfr_sub1sp@@Base+0x15e8>  // b.pmore
   15254:	mov	x2, #0x0                   	// #0
   15258:	b	14e00 <mpfr_sub1sp@@Base+0x15e8>
   1525c:	mov	x19, #0xffffffffffffffff    	// #-1
   15260:	mov	x21, #0x0                   	// #0
   15264:	mov	x22, #0x1                   	// #1
   15268:	str	x19, [x29, #128]
   1526c:	b	140a8 <mpfr_sub1sp@@Base+0x890>
   15270:	ldr	x0, [x25]
   15274:	cmp	x22, #0x0
   15278:	ccmp	w20, #0x0, #0x4, eq  // eq = none
   1527c:	sub	x28, x28, #0x1
   15280:	lsl	x0, x0, #1
   15284:	str	x0, [x25]
   15288:	ldr	x0, [x9]
   1528c:	orr	x0, x0, #0x8000000000000000
   15290:	str	x0, [x9]
   15294:	b.eq	15300 <mpfr_sub1sp@@Base+0x1ae8>  // b.none
   15298:	ldr	x1, [x25]
   1529c:	eor	x0, x21, #0x1
   152a0:	and	w0, w0, #0x1
   152a4:	orr	x5, x1, x5
   152a8:	str	x5, [x25]
   152ac:	cmp	w0, #0x0
   152b0:	ccmp	w20, #0x0, #0x4, ne  // ne = any
   152b4:	csetm	w19, eq  // eq = none
   152b8:	b	140c0 <mpfr_sub1sp@@Base+0x8a8>
   152bc:	cmp	x22, #0x0
   152c0:	ccmp	w4, #0x1, #0x4, ne  // ne = any
   152c4:	b.ne	14b08 <mpfr_sub1sp@@Base+0x12f0>  // b.any
   152c8:	b	140b4 <mpfr_sub1sp@@Base+0x89c>
   152cc:	ldr	x0, [x11, #8]
   152d0:	cbnz	x0, 14ee8 <mpfr_sub1sp@@Base+0x16d0>
   152d4:	ldr	x0, [x11]
   152d8:	cmp	x0, #0x0
   152dc:	cset	x6, eq  // eq = none
   152e0:	b	14ee8 <mpfr_sub1sp@@Base+0x16d0>
   152e4:	mov	x22, #0x1                   	// #1
   152e8:	mov	x0, #0xffffffffffffffff    	// #-1
   152ec:	mov	w4, w22
   152f0:	mov	w10, #0x0                   	// #0
   152f4:	mov	x21, #0x0                   	// #0
   152f8:	str	x0, [x29, #128]
   152fc:	b	147b0 <mpfr_sub1sp@@Base+0xf98>
   15300:	ldr	x0, [x29, #128]
   15304:	cmp	x0, #0x0
   15308:	ccmp	w10, #0x0, #0x4, eq  // eq = none
   1530c:	b.ne	15340 <mpfr_sub1sp@@Base+0x1b28>  // b.any
   15310:	cmp	x22, #0x0
   15314:	eor	x21, x21, #0x1
   15318:	cset	w1, ne  // ne = any
   1531c:	and	w0, w21, #0x1
   15320:	ands	w1, w1, w21
   15324:	b.eq	152ac <mpfr_sub1sp@@Base+0x1a94>  // b.none
   15328:	ldr	x0, [x25]
   1532c:	orr	x5, x0, x5
   15330:	str	x5, [x25]
   15334:	cbnz	w4, 154cc <mpfr_sub1sp@@Base+0x1cb4>
   15338:	mov	w19, #0x1                   	// #1
   1533c:	b	140c0 <mpfr_sub1sp@@Base+0x8a8>
   15340:	ldr	x0, [x25]
   15344:	mov	w19, #0x1                   	// #1
   15348:	orr	x5, x0, x5
   1534c:	str	x5, [x25]
   15350:	b	140c0 <mpfr_sub1sp@@Base+0x8a8>
   15354:	mov	x21, #0x1                   	// #1
   15358:	cbnz	w4, 15434 <mpfr_sub1sp@@Base+0x1c1c>
   1535c:	cmp	x25, x1
   15360:	b.eq	1536c <mpfr_sub1sp@@Base+0x1b54>  // b.none
   15364:	mov	x0, x25
   15368:	bl	ba10 <memcpy@plt>
   1536c:	mov	x7, #0x1                   	// #1
   15370:	add	x9, x25, x23
   15374:	mov	w10, w7
   15378:	mov	x22, x7
   1537c:	lsl	x5, x7, x24
   15380:	mov	w20, #0x0                   	// #0
   15384:	mov	w4, #0x0                   	// #0
   15388:	ldr	x2, [x25]
   1538c:	b	147b0 <mpfr_sub1sp@@Base+0xf98>
   15390:	mov	x7, #0x8000000000000000    	// #-9223372036854775808
   15394:	cmp	x3, x7
   15398:	b.ne	150c8 <mpfr_sub1sp@@Base+0x18b0>  // b.any
   1539c:	sub	x22, x26, #0x1
   153a0:	ldr	x21, [x5, x22, lsl #3]
   153a4:	cbnz	x21, 15530 <mpfr_sub1sp@@Base+0x1d18>
   153a8:	sub	x22, x22, #0x1
   153ac:	cmn	x22, #0x1
   153b0:	b.ne	153a0 <mpfr_sub1sp@@Base+0x1b88>  // b.any
   153b4:	cmp	w4, #0x5
   153b8:	b.eq	150d4 <mpfr_sub1sp@@Base+0x18bc>  // b.none
   153bc:	cbnz	w4, 15434 <mpfr_sub1sp@@Base+0x1c1c>
   153c0:	cmn	x22, #0x1
   153c4:	b.ne	15558 <mpfr_sub1sp@@Base+0x1d40>  // b.any
   153c8:	ldr	x0, [x1]
   153cc:	lsr	x0, x0, x24
   153d0:	and	x21, x0, #0x1
   153d4:	tbnz	w0, #0, 15550 <mpfr_sub1sp@@Base+0x1d38>
   153d8:	cmp	x25, x1
   153dc:	b.eq	15538 <mpfr_sub1sp@@Base+0x1d20>  // b.none
   153e0:	add	x9, x25, x23
   153e4:	mov	x0, x25
   153e8:	str	w4, [x29, #144]
   153ec:	mov	x19, x22
   153f0:	str	x9, [x29, #152]
   153f4:	mov	x22, #0x1                   	// #1
   153f8:	bl	ba10 <memcpy@plt>
   153fc:	ldr	w4, [x29, #144]
   15400:	ldr	x0, [x25, x23]
   15404:	str	xzr, [x29, #128]
   15408:	ldr	x9, [x29, #152]
   1540c:	b	140a8 <mpfr_sub1sp@@Base+0x890>
   15410:	ldr	x2, [x20, #24]
   15414:	lsl	x20, x8, #3
   15418:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1541c:	add	x3, x2, x20
   15420:	ldur	x3, [x3, #-8]
   15424:	cmp	x3, x0
   15428:	b.eq	154a8 <mpfr_sub1sp@@Base+0x1c90>  // b.none
   1542c:	mov	x19, #0x1                   	// #1
   15430:	b	14a78 <mpfr_sub1sp@@Base+0x1260>
   15434:	add	w0, w4, w0, lsr #31
   15438:	cmp	w0, #0x3
   1543c:	cset	w20, eq  // eq = none
   15440:	cmp	w4, #0x1
   15444:	csinc	w20, w20, wzr, ne  // ne = any
   15448:	cmp	x25, x1
   1544c:	cbnz	w20, 154e8 <mpfr_sub1sp@@Base+0x1cd0>
   15450:	b.eq	154d4 <mpfr_sub1sp@@Base+0x1cbc>  // b.none
   15454:	add	x9, x25, x23
   15458:	mov	x0, x25
   1545c:	str	w4, [x29, #144]
   15460:	mov	x19, #0xffffffffffffffff    	// #-1
   15464:	str	x9, [x29, #152]
   15468:	mov	x22, #0x1                   	// #1
   1546c:	bl	ba10 <memcpy@plt>
   15470:	ldr	w4, [x29, #144]
   15474:	ldr	x0, [x25, x23]
   15478:	ldr	x9, [x29, #152]
   1547c:	b	140a8 <mpfr_sub1sp@@Base+0x890>
   15480:	mov	x21, #0x0                   	// #0
   15484:	mov	x22, #0x0                   	// #0
   15488:	mov	w4, #0x1                   	// #1
   1548c:	b	140a4 <mpfr_sub1sp@@Base+0x88c>
   15490:	lsl	x2, x8, #3
   15494:	mov	x0, x3
   15498:	sub	x28, x28, #0x1
   1549c:	bl	c110 <memset@plt>
   154a0:	str	x28, [x27, #16]
   154a4:	b	13b10 <mpfr_sub1sp@@Base+0x2f8>
   154a8:	sub	x0, x26, #0x1
   154ac:	b	154b4 <mpfr_sub1sp@@Base+0x1c9c>
   154b0:	b.eq	14a78 <mpfr_sub1sp@@Base+0x1260>  // b.none
   154b4:	ldr	x19, [x2, x0, lsl #3]
   154b8:	sub	x0, x0, #0x1
   154bc:	cmn	x0, #0x1
   154c0:	cbz	x19, 154b0 <mpfr_sub1sp@@Base+0x1c98>
   154c4:	mov	x19, #0x1                   	// #1
   154c8:	b	14a78 <mpfr_sub1sp@@Base+0x1260>
   154cc:	mov	w0, w1
   154d0:	b	152ac <mpfr_sub1sp@@Base+0x1a94>
   154d4:	add	x9, x25, x23
   154d8:	mov	x19, #0xffffffffffffffff    	// #-1
   154dc:	mov	x22, #0x1                   	// #1
   154e0:	ldr	x0, [x25, x23]
   154e4:	b	140a8 <mpfr_sub1sp@@Base+0x890>
   154e8:	b.eq	154f4 <mpfr_sub1sp@@Base+0x1cdc>  // b.none
   154ec:	mov	x0, x25
   154f0:	bl	ba10 <memcpy@plt>
   154f4:	mov	x5, #0x1                   	// #1
   154f8:	mov	x22, x5
   154fc:	add	x9, x25, x23
   15500:	mov	w4, w22
   15504:	lsl	x5, x5, x24
   15508:	mov	w10, #0x0                   	// #0
   1550c:	ldr	x2, [x25]
   15510:	b	147b0 <mpfr_sub1sp@@Base+0xf98>
   15514:	mov	x11, x10
   15518:	mov	x10, x17
   1551c:	b	13d5c <mpfr_sub1sp@@Base+0x544>
   15520:	mov	x3, x0
   15524:	mov	x0, x2
   15528:	mov	x2, x3
   1552c:	b	13f68 <mpfr_sub1sp@@Base+0x750>
   15530:	mov	x21, #0x1                   	// #1
   15534:	b	153b4 <mpfr_sub1sp@@Base+0x1b9c>
   15538:	mov	x19, x22
   1553c:	add	x9, x25, x23
   15540:	mov	x22, #0x1                   	// #1
   15544:	ldr	x0, [x25, x23]
   15548:	str	xzr, [x29, #128]
   1554c:	b	140a8 <mpfr_sub1sp@@Base+0x890>
   15550:	mov	x21, #0x0                   	// #0
   15554:	b	1535c <mpfr_sub1sp@@Base+0x1b44>
   15558:	mov	x21, #0x1                   	// #1
   1555c:	b	1535c <mpfr_sub1sp@@Base+0x1b44>
   15560:	cbnz	w4, 14e84 <mpfr_sub1sp@@Base+0x166c>
   15564:	sub	x0, x0, #0x1
   15568:	cmp	x0, x23
   1556c:	b.gt	13ebc <mpfr_sub1sp@@Base+0x6a4>
   15570:	ldr	x1, [x6]
   15574:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   15578:	cmp	x1, x0
   1557c:	cset	w4, eq  // eq = none
   15580:	b	14e84 <mpfr_sub1sp@@Base+0x166c>
   15584:	ldr	x1, [x5]
   15588:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1558c:	cmp	x1, x0
   15590:	cset	w4, eq  // eq = none
   15594:	b	14e84 <mpfr_sub1sp@@Base+0x166c>

0000000000015598 <mpfr_allocate_func@@Base>:
   15598:	stp	x29, x30, [sp, #-64]!
   1559c:	mov	x29, sp
   155a0:	add	x2, sp, #0x38
   155a4:	add	x1, sp, #0x30
   155a8:	str	x19, [sp, #16]
   155ac:	mov	x19, x0
   155b0:	add	x0, sp, #0x28
   155b4:	bl	bc50 <__gmp_get_memory_functions@plt>
   155b8:	ldr	x1, [sp, #40]
   155bc:	mov	x0, x19
   155c0:	blr	x1
   155c4:	ldr	x19, [sp, #16]
   155c8:	ldp	x29, x30, [sp], #64
   155cc:	ret

00000000000155d0 <mpfr_reallocate_func@@Base>:
   155d0:	stp	x29, x30, [sp, #-80]!
   155d4:	mov	x29, sp
   155d8:	stp	x19, x20, [sp, #16]
   155dc:	mov	x19, x0
   155e0:	mov	x20, x1
   155e4:	add	x0, sp, #0x38
   155e8:	add	x1, sp, #0x40
   155ec:	str	x21, [sp, #32]
   155f0:	mov	x21, x2
   155f4:	add	x2, sp, #0x48
   155f8:	bl	bc50 <__gmp_get_memory_functions@plt>
   155fc:	ldr	x3, [sp, #64]
   15600:	mov	x2, x21
   15604:	mov	x1, x20
   15608:	mov	x0, x19
   1560c:	blr	x3
   15610:	ldp	x19, x20, [sp, #16]
   15614:	ldr	x21, [sp, #32]
   15618:	ldp	x29, x30, [sp], #80
   1561c:	ret

0000000000015620 <mpfr_free_func@@Base>:
   15620:	stp	x29, x30, [sp, #-64]!
   15624:	mov	x29, sp
   15628:	add	x2, sp, #0x38
   1562c:	stp	x19, x20, [sp, #16]
   15630:	mov	x19, x0
   15634:	mov	x20, x1
   15638:	add	x0, sp, #0x28
   1563c:	add	x1, sp, #0x30
   15640:	bl	bc50 <__gmp_get_memory_functions@plt>
   15644:	ldr	x2, [sp, #56]
   15648:	mov	x1, x20
   1564c:	mov	x0, x19
   15650:	blr	x2
   15654:	ldp	x19, x20, [sp, #16]
   15658:	ldp	x29, x30, [sp], #64
   1565c:	ret

0000000000015660 <mpfr_add1sp@@Base>:
   15660:	stp	x29, x30, [sp, #-160]!
   15664:	mov	x29, sp
   15668:	ldr	w5, [x1, #8]
   1566c:	stp	x19, x20, [sp, #16]
   15670:	mov	x19, x1
   15674:	stp	x21, x22, [sp, #32]
   15678:	stp	x23, x24, [sp, #48]
   1567c:	stp	x25, x26, [sp, #64]
   15680:	mov	x26, x0
   15684:	mov	w25, w3
   15688:	stp	x27, x28, [sp, #80]
   1568c:	mov	x28, x2
   15690:	ldr	x21, [x1]
   15694:	str	xzr, [x29, #152]
   15698:	ldr	x22, [x1, #16]
   1569c:	cmp	x21, #0x3f
   156a0:	ldr	x1, [x2, #16]
   156a4:	str	w5, [x0, #8]
   156a8:	b.le	15888 <mpfr_add1sp@@Base+0x228>
   156ac:	sub	x0, x21, #0x41
   156b0:	cmp	x0, #0x3e
   156b4:	b.ls	15c4c <mpfr_add1sp@@Base+0x5ec>  // b.plast
   156b8:	cmp	x21, #0x40
   156bc:	b.eq	15e6c <mpfr_add1sp@@Base+0x80c>  // b.none
   156c0:	sub	x0, x21, #0x81
   156c4:	cmp	x0, #0x3e
   156c8:	b.ls	15924 <mpfr_add1sp@@Base+0x2c4>  // b.plast
   156cc:	ldr	w24, [x19, #8]
   156d0:	sub	x9, x21, #0x1
   156d4:	cmp	x22, x1
   156d8:	lsr	w0, w24, #31
   156dc:	str	w0, [x29, #132]
   156e0:	b.ge	156fc <mpfr_add1sp@@Base+0x9c>  // b.tcont
   156e4:	mov	x2, x19
   156e8:	mov	x0, x1
   156ec:	mov	x19, x28
   156f0:	mov	x1, x22
   156f4:	mov	x28, x2
   156f8:	mov	x22, x0
   156fc:	asr	x0, x9, #6
   15700:	str	x0, [x29, #136]
   15704:	neg	w23, w21
   15708:	subs	x20, x22, x1
   1570c:	add	x24, x0, #0x1
   15710:	and	w23, w23, #0x3f
   15714:	b.eq	15d90 <mpfr_add1sp@@Base+0x730>  // b.none
   15718:	cmp	x21, x20
   1571c:	b.ls	16288 <mpfr_add1sp@@Base+0xc28>  // b.plast
   15720:	lsl	x0, x24, #3
   15724:	str	x0, [x29, #104]
   15728:	cmp	x0, #0x4, lsl #12
   1572c:	b.hi	16360 <mpfr_add1sp@@Base+0xd00>  // b.pmore
   15730:	add	x0, x0, #0xf
   15734:	and	x0, x0, #0xfffffffffffffff0
   15738:	sub	sp, sp, x0
   1573c:	mov	x8, sp
   15740:	lsr	x0, x20, #6
   15744:	ands	x3, x20, #0x3f
   15748:	ldr	x1, [x28, #24]
   1574c:	b.eq	16314 <mpfr_add1sp@@Base+0xcb4>  // b.none
   15750:	cbnz	x0, 163fc <mpfr_add1sp@@Base+0xd9c>
   15754:	mov	x0, x8
   15758:	mov	x2, x24
   1575c:	stp	x9, x8, [x29, #112]
   15760:	bl	bce0 <__gmpn_rshift@plt>
   15764:	ldp	x9, x8, [x29, #112]
   15768:	cmp	w25, #0x5
   1576c:	ldr	x0, [x8]
   15770:	b.eq	15f64 <mpfr_add1sp@@Base+0x904>  // b.none
   15774:	cbnz	w23, 15ad8 <mpfr_add1sp@@Base+0x478>
   15778:	subs	x1, x21, x20
   1577c:	mov	x10, #0x3f                  	// #63
   15780:	ldr	x4, [x29, #136]
   15784:	add	x2, x1, x10
   15788:	csel	x2, x2, x1, mi  // mi = first
   1578c:	negs	x9, x1
   15790:	ldr	x3, [x28, #24]
   15794:	sub	x2, x4, x2, asr #6
   15798:	and	x6, x9, x10
   1579c:	and	x1, x1, x10
   157a0:	csneg	x1, x1, x6, mi  // mi = first
   157a4:	mov	x28, #0x1                   	// #1
   157a8:	ldr	x9, [x3, x2, lsl #3]
   157ac:	sub	x1, x10, x1
   157b0:	mov	x27, x28
   157b4:	mov	x6, #0xffffffffffffffff    	// #-1
   157b8:	lsl	x28, x28, x1
   157bc:	and	x4, x28, x9
   157c0:	str	x4, [x29, #120]
   157c4:	lsl	x1, x6, x1
   157c8:	bics	xzr, x9, x1
   157cc:	b.eq	15ac4 <mpfr_add1sp@@Base+0x464>  // b.none
   157d0:	mov	x28, #0x1                   	// #1
   157d4:	mov	x2, x8
   157d8:	ldr	x1, [x19, #24]
   157dc:	lsl	x21, x28, x23
   157e0:	neg	x20, x21
   157e4:	mov	x3, x24
   157e8:	ldr	x19, [x26, #24]
   157ec:	and	x0, x20, x0
   157f0:	str	x0, [x8]
   157f4:	mov	x0, x19
   157f8:	bl	c5a0 <__gmpn_add_n@plt>
   157fc:	cbnz	x0, 163ac <mpfr_add1sp@@Base+0xd4c>
   15800:	cmp	w25, #0x5
   15804:	mov	w20, #0x0                   	// #0
   15808:	ldr	x2, [x29, #152]
   1580c:	b.ne	1637c <mpfr_add1sp@@Base+0xd1c>  // b.any
   15810:	mrs	x19, tpidr_el0
   15814:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15818:	ldr	x1, [x0, #2544]
   1581c:	add	x0, x0, #0x9f0
   15820:	blr	x1
   15824:	ldr	x0, [x19, x0]
   15828:	cmp	x0, x22
   1582c:	b.lt	161d4 <mpfr_add1sp@@Base+0xb74>  // b.tstop
   15830:	str	x22, [x26, #16]
   15834:	cbnz	x2, 161f8 <mpfr_add1sp@@Base+0xb98>
   15838:	ldr	w5, [x26, #8]
   1583c:	mul	w5, w20, w5
   15840:	cbz	w5, 15864 <mpfr_add1sp@@Base+0x204>
   15844:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15848:	ldr	x1, [x0, #2576]
   1584c:	add	x0, x0, #0xa10
   15850:	blr	x1
   15854:	add	x0, x19, x0
   15858:	ldr	w1, [x0]
   1585c:	orr	w1, w1, #0x8
   15860:	str	w1, [x0]
   15864:	mov	sp, x29
   15868:	mov	w0, w5
   1586c:	ldp	x19, x20, [sp, #16]
   15870:	ldp	x21, x22, [sp, #32]
   15874:	ldp	x23, x24, [sp, #48]
   15878:	ldp	x25, x26, [sp, #64]
   1587c:	ldp	x27, x28, [sp, #80]
   15880:	ldp	x29, x30, [sp], #160
   15884:	ret
   15888:	mov	x0, #0x40                  	// #64
   1588c:	cmp	x22, x1
   15890:	sub	x21, x0, x21
   15894:	ldr	x3, [x19, #24]
   15898:	ldr	x6, [x26, #24]
   1589c:	ldr	x9, [x2, #24]
   158a0:	b.eq	15b04 <mpfr_add1sp@@Base+0x4a4>  // b.none
   158a4:	b.gt	158c0 <mpfr_add1sp@@Base+0x260>
   158a8:	mov	x2, x3
   158ac:	mov	x0, x22
   158b0:	mov	x3, x9
   158b4:	mov	x22, x1
   158b8:	mov	x9, x2
   158bc:	mov	x1, x0
   158c0:	sub	x1, x22, x1
   158c4:	mov	x0, #0x1                   	// #1
   158c8:	lsl	x0, x0, x21
   158cc:	cmp	x1, x21
   158d0:	sub	x8, x0, #0x1
   158d4:	ldr	x3, [x3]
   158d8:	b.cs	15bb4 <mpfr_add1sp@@Base+0x554>  // b.hs, b.nlast
   158dc:	ldr	x2, [x9]
   158e0:	lsr	x2, x2, x1
   158e4:	adds	x2, x2, x3
   158e8:	mov	x3, x2
   158ec:	b.cc	158fc <mpfr_add1sp@@Base+0x29c>  // b.lo, b.ul, b.last
   158f0:	lsr	x2, x2, #1
   158f4:	add	x22, x22, #0x1
   158f8:	orr	x3, x2, #0x8000000000000000
   158fc:	sub	w1, w21, #0x1
   15900:	mov	x2, #0x1                   	// #1
   15904:	neg	x0, x0
   15908:	lsl	x2, x2, x1
   1590c:	eor	x1, x8, x2
   15910:	and	x0, x0, x3
   15914:	and	x1, x1, x3
   15918:	and	x2, x2, x3
   1591c:	str	x0, [x6]
   15920:	b	15b34 <mpfr_add1sp@@Base+0x4d4>
   15924:	mov	x2, #0xc0                  	// #192
   15928:	cmp	x22, x1
   1592c:	sub	x21, x2, x21
   15930:	ldr	x11, [x19, #24]
   15934:	ldr	x8, [x26, #24]
   15938:	ldr	x3, [x28, #24]
   1593c:	b.eq	16204 <mpfr_add1sp@@Base+0xba4>  // b.none
   15940:	b.le	16190 <mpfr_add1sp@@Base+0xb30>
   15944:	sub	x1, x22, x1
   15948:	mov	x15, #0x1                   	// #1
   1594c:	lsl	x12, x15, x21
   15950:	cmp	x1, #0x3f
   15954:	mov	w10, w21
   15958:	sub	x6, x12, #0x1
   1595c:	ldr	x9, [x11]
   15960:	b.hi	15ff8 <mpfr_add1sp@@Base+0x998>  // b.pmore
   15964:	ldp	x17, x14, [x3]
   15968:	mov	w13, #0x40                  	// #64
   1596c:	ldr	x0, [x3, #16]
   15970:	sub	w13, w13, w1
   15974:	ldr	x16, [x11, #8]
   15978:	lsl	x2, x14, x13
   1597c:	lsr	x3, x17, x1
   15980:	orr	x2, x2, x3
   15984:	adds	x2, x9, x2
   15988:	lsl	x3, x0, x13
   1598c:	lsr	x14, x14, x1
   15990:	orr	x14, x3, x14
   15994:	adc	x14, x16, x14
   15998:	cset	w3, cs  // cs = hs, nlast
   1599c:	mov	x9, x2
   159a0:	cmp	x16, x14
   159a4:	lsl	x13, x17, x13
   159a8:	b.hi	16528 <mpfr_add1sp@@Base+0xec8>  // b.pmore
   159ac:	csel	w3, w3, wzr, eq  // eq = none
   159b0:	and	x15, x3, #0xff
   159b4:	ldr	x11, [x11, #16]
   159b8:	lsr	x0, x0, x1
   159bc:	sub	w21, w21, #0x1
   159c0:	mov	x2, #0x1                   	// #1
   159c4:	add	x0, x0, x11
   159c8:	neg	x12, x12
   159cc:	add	x0, x0, x15
   159d0:	lsl	x2, x2, x21
   159d4:	cmp	x11, x0
   159d8:	eor	x1, x6, x2
   159dc:	b.hi	16468 <mpfr_add1sp@@Base+0xe08>  // b.pmore
   159e0:	csel	w3, w3, wzr, eq  // eq = none
   159e4:	cbnz	w3, 16468 <mpfr_add1sp@@Base+0xe08>
   159e8:	and	x1, x9, x1
   159ec:	and	x2, x9, x2
   159f0:	orr	x1, x1, x13
   159f4:	and	x12, x9, x12
   159f8:	stp	x12, x14, [x8]
   159fc:	str	x0, [x8, #16]
   15a00:	mrs	x19, tpidr_el0
   15a04:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15a08:	ldr	x3, [x0, #2544]
   15a0c:	add	x0, x0, #0x9f0
   15a10:	blr	x3
   15a14:	ldr	x0, [x19, x0]
   15a18:	cmp	x0, x22
   15a1c:	b.lt	15aa4 <mpfr_add1sp@@Base+0x444>  // b.tstop
   15a20:	str	x22, [x26, #16]
   15a24:	orr	x0, x2, x1
   15a28:	cbz	x0, 15c44 <mpfr_add1sp@@Base+0x5e4>
   15a2c:	cmp	w25, #0x5
   15a30:	b.eq	15c44 <mpfr_add1sp@@Base+0x5e4>  // b.none
   15a34:	cbnz	w25, 162f8 <mpfr_add1sp@@Base+0xc98>
   15a38:	cbz	x2, 15b88 <mpfr_add1sp@@Base+0x528>
   15a3c:	ldr	x3, [x8]
   15a40:	lsr	x2, x3, x10
   15a44:	and	x2, x2, #0x1
   15a48:	orr	x1, x2, x1
   15a4c:	cbz	x1, 15b88 <mpfr_add1sp@@Base+0x528>
   15a50:	ldp	x2, x1, [x8, #8]
   15a54:	mov	x0, #0x1                   	// #1
   15a58:	lsl	x0, x0, x10
   15a5c:	add	x0, x0, x3
   15a60:	cmp	x0, #0x0
   15a64:	cinc	x2, x2, eq  // eq = none
   15a68:	stp	x0, x2, [x8]
   15a6c:	orr	x0, x0, x2
   15a70:	cmp	x0, #0x0
   15a74:	cinc	x0, x1, eq  // eq = none
   15a78:	str	x0, [x8, #16]
   15a7c:	cbnz	x0, 15840 <mpfr_add1sp@@Base+0x1e0>
   15a80:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15a84:	ldr	x1, [x0, #2544]
   15a88:	add	x0, x0, #0x9f0
   15a8c:	blr	x1
   15a90:	ldr	x0, [x19, x0]
   15a94:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   15a98:	str	x1, [x8, #16]
   15a9c:	cmp	x22, x0
   15aa0:	b.lt	15f58 <mpfr_add1sp@@Base+0x8f8>  // b.tstop
   15aa4:	mov	w2, w5
   15aa8:	mov	w1, w25
   15aac:	mov	x0, x26
   15ab0:	bl	bf40 <mpfr_overflow@plt>
   15ab4:	mov	w5, w0
   15ab8:	b	15864 <mpfr_add1sp@@Base+0x204>
   15abc:	ldr	x1, [x3, x2, lsl #3]
   15ac0:	cbnz	x1, 15acc <mpfr_add1sp@@Base+0x46c>
   15ac4:	subs	x2, x2, #0x1
   15ac8:	b.pl	15abc <mpfr_add1sp@@Base+0x45c>  // b.nfrst
   15acc:	mvn	x27, x2
   15ad0:	lsr	x27, x27, #63
   15ad4:	b	157d0 <mpfr_add1sp@@Base+0x170>
   15ad8:	sub	w27, w23, #0x1
   15adc:	mov	x1, #0x1                   	// #1
   15ae0:	mov	x2, #0xffffffffffffffff    	// #-1
   15ae4:	lsl	x3, x1, x27
   15ae8:	and	x3, x3, x0
   15aec:	str	x3, [x29, #120]
   15af0:	lsl	x27, x2, x27
   15af4:	bics	x27, x0, x27
   15af8:	b.eq	16578 <mpfr_add1sp@@Base+0xf18>  // b.none
   15afc:	mov	x27, x1
   15b00:	b	157d0 <mpfr_add1sp@@Base+0x170>
   15b04:	ldr	x1, [x9]
   15b08:	sub	w8, w21, #0x1
   15b0c:	ldr	x0, [x3]
   15b10:	mov	x2, #0x1                   	// #1
   15b14:	lsr	x3, x1, #1
   15b18:	add	x22, x22, x2
   15b1c:	lsl	x2, x2, x8
   15b20:	mov	x1, #0x0                   	// #0
   15b24:	add	x0, x3, x0, lsr #1
   15b28:	bic	x3, x0, x2
   15b2c:	and	x2, x2, x0
   15b30:	str	x3, [x6]
   15b34:	mrs	x19, tpidr_el0
   15b38:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15b3c:	ldr	x3, [x0, #2544]
   15b40:	add	x0, x0, #0x9f0
   15b44:	blr	x3
   15b48:	ldr	x0, [x19, x0]
   15b4c:	cmp	x0, x22
   15b50:	b.lt	15aa4 <mpfr_add1sp@@Base+0x444>  // b.tstop
   15b54:	str	x22, [x26, #16]
   15b58:	orr	x0, x2, x1
   15b5c:	cbz	x0, 15c44 <mpfr_add1sp@@Base+0x5e4>
   15b60:	cmp	w25, #0x5
   15b64:	b.eq	15c44 <mpfr_add1sp@@Base+0x5e4>  // b.none
   15b68:	cbnz	w25, 15bf0 <mpfr_add1sp@@Base+0x590>
   15b6c:	cbz	x2, 15b88 <mpfr_add1sp@@Base+0x528>
   15b70:	ldr	x2, [x6]
   15b74:	lsr	x0, x2, x21
   15b78:	and	x0, x0, #0x1
   15b7c:	orr	x1, x0, x1
   15b80:	cbnz	x1, 15c08 <mpfr_add1sp@@Base+0x5a8>
   15b84:	nop
   15b88:	cbz	w5, 15c44 <mpfr_add1sp@@Base+0x5e4>
   15b8c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15b90:	ldr	x1, [x0, #2576]
   15b94:	add	x0, x0, #0xa10
   15b98:	blr	x1
   15b9c:	add	x0, x19, x0
   15ba0:	neg	w5, w5
   15ba4:	ldr	w1, [x0]
   15ba8:	orr	w1, w1, #0x8
   15bac:	str	w1, [x0]
   15bb0:	b	15864 <mpfr_add1sp@@Base+0x204>
   15bb4:	cmp	x1, #0x3f
   15bb8:	b.ls	16098 <mpfr_add1sp@@Base+0xa38>  // b.plast
   15bbc:	mrs	x19, tpidr_el0
   15bc0:	str	x3, [x6]
   15bc4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15bc8:	ldr	x1, [x0, #2544]
   15bcc:	add	x0, x0, #0x9f0
   15bd0:	blr	x1
   15bd4:	ldr	x0, [x19, x0]
   15bd8:	cmp	x22, x0
   15bdc:	b.gt	15aa4 <mpfr_add1sp@@Base+0x444>
   15be0:	str	x22, [x26, #16]
   15be4:	cmp	w25, #0x5
   15be8:	b.eq	15c44 <mpfr_add1sp@@Base+0x5e4>  // b.none
   15bec:	cbz	w25, 15b88 <mpfr_add1sp@@Base+0x528>
   15bf0:	cmp	w25, #0x1
   15bf4:	b.eq	15b88 <mpfr_add1sp@@Base+0x528>  // b.none
   15bf8:	add	w0, w25, w5, lsr #31
   15bfc:	cmp	w0, #0x3
   15c00:	b.eq	15b88 <mpfr_add1sp@@Base+0x528>  // b.none
   15c04:	ldr	x2, [x6]
   15c08:	mov	x0, #0x1                   	// #1
   15c0c:	lsl	x21, x0, x21
   15c10:	add	x21, x21, x2
   15c14:	str	x21, [x6]
   15c18:	cbnz	x21, 15840 <mpfr_add1sp@@Base+0x1e0>
   15c1c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   15c20:	str	x0, [x6]
   15c24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15c28:	ldr	x1, [x0, #2544]
   15c2c:	add	x0, x0, #0x9f0
   15c30:	blr	x1
   15c34:	ldr	x0, [x19, x0]
   15c38:	cmp	x0, x22
   15c3c:	b.gt	15f58 <mpfr_add1sp@@Base+0x8f8>
   15c40:	b	15aa4 <mpfr_add1sp@@Base+0x444>
   15c44:	mov	w5, #0x0                   	// #0
   15c48:	b	15864 <mpfr_add1sp@@Base+0x204>
   15c4c:	mov	x0, #0x80                  	// #128
   15c50:	cmp	x22, x1
   15c54:	sub	x21, x0, x21
   15c58:	ldr	x13, [x19, #24]
   15c5c:	ldr	x8, [x26, #24]
   15c60:	ldr	x6, [x2, #24]
   15c64:	b.eq	15f70 <mpfr_add1sp@@Base+0x910>  // b.none
   15c68:	b.gt	15c84 <mpfr_add1sp@@Base+0x624>
   15c6c:	mov	x2, x13
   15c70:	mov	x0, x22
   15c74:	mov	x13, x6
   15c78:	mov	x22, x1
   15c7c:	mov	x6, x2
   15c80:	mov	x1, x0
   15c84:	sub	x1, x22, x1
   15c88:	mov	x0, #0x1                   	// #1
   15c8c:	lsl	x3, x0, x21
   15c90:	cmp	x1, #0x3f
   15c94:	sub	x11, x3, #0x1
   15c98:	ldr	x10, [x13]
   15c9c:	b.hi	15fb0 <mpfr_add1sp@@Base+0x950>  // b.pmore
   15ca0:	ldp	x12, x6, [x6]
   15ca4:	mov	w9, #0x40                  	// #64
   15ca8:	sub	w9, w9, w1
   15cac:	neg	x3, x3
   15cb0:	ldr	x13, [x13, #8]
   15cb4:	lsl	x2, x6, x9
   15cb8:	lsr	x14, x12, x1
   15cbc:	orr	x2, x2, x14
   15cc0:	adds	x2, x2, x10
   15cc4:	sub	w10, w21, #0x1
   15cc8:	lsr	x6, x6, x1
   15ccc:	adc	x6, x13, x6
   15cd0:	lsl	x0, x0, x10
   15cd4:	cmp	x13, x6
   15cd8:	eor	x1, x11, x0
   15cdc:	lsl	x9, x12, x9
   15ce0:	b.hi	16170 <mpfr_add1sp@@Base+0xb10>  // b.pmore
   15ce4:	and	x1, x2, x1
   15ce8:	and	x3, x2, x3
   15cec:	orr	x1, x1, x9
   15cf0:	and	x2, x2, x0
   15cf4:	stp	x3, x6, [x8]
   15cf8:	mrs	x19, tpidr_el0
   15cfc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15d00:	ldr	x3, [x0, #2544]
   15d04:	add	x0, x0, #0x9f0
   15d08:	blr	x3
   15d0c:	ldr	x0, [x19, x0]
   15d10:	cmp	x0, x22
   15d14:	b.lt	15aa4 <mpfr_add1sp@@Base+0x444>  // b.tstop
   15d18:	str	x22, [x26, #16]
   15d1c:	orr	x0, x2, x1
   15d20:	cbz	x0, 15c44 <mpfr_add1sp@@Base+0x5e4>
   15d24:	cmp	w25, #0x5
   15d28:	b.eq	15c44 <mpfr_add1sp@@Base+0x5e4>  // b.none
   15d2c:	cbz	w25, 160f4 <mpfr_add1sp@@Base+0xa94>
   15d30:	cmp	w25, #0x1
   15d34:	b.eq	15b88 <mpfr_add1sp@@Base+0x528>  // b.none
   15d38:	add	w0, w25, w5, lsr #31
   15d3c:	cmp	w0, #0x3
   15d40:	b.eq	15b88 <mpfr_add1sp@@Base+0x528>  // b.none
   15d44:	ldr	x2, [x8]
   15d48:	mov	x0, #0x1                   	// #1
   15d4c:	ldr	x1, [x8, #8]
   15d50:	lsl	x21, x0, x21
   15d54:	add	x21, x21, x2
   15d58:	cmp	x21, #0x0
   15d5c:	cinc	x0, x1, eq  // eq = none
   15d60:	stp	x21, x0, [x8]
   15d64:	cbnz	x0, 15840 <mpfr_add1sp@@Base+0x1e0>
   15d68:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15d6c:	ldr	x1, [x0, #2544]
   15d70:	add	x0, x0, #0x9f0
   15d74:	blr	x1
   15d78:	ldr	x0, [x19, x0]
   15d7c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   15d80:	str	x1, [x8, #8]
   15d84:	cmp	x22, x0
   15d88:	b.lt	15f58 <mpfr_add1sp@@Base+0x8f8>  // b.tstop
   15d8c:	b	15aa4 <mpfr_add1sp@@Base+0x444>
   15d90:	ldr	x1, [x19, #24]
   15d94:	mov	x3, x24
   15d98:	ldr	x2, [x28, #24]
   15d9c:	add	x22, x22, #0x1
   15da0:	ldr	x19, [x26, #24]
   15da4:	mov	x0, x19
   15da8:	bl	c5a0 <__gmpn_add_n@plt>
   15dac:	mov	x1, x19
   15db0:	mov	w3, #0x1                   	// #1
   15db4:	mov	x0, x19
   15db8:	mov	x2, x24
   15dbc:	ldr	x20, [x19]
   15dc0:	bl	bce0 <__gmpn_rshift@plt>
   15dc4:	lsl	x5, x24, #3
   15dc8:	mov	x3, #0x1                   	// #1
   15dcc:	sub	x5, x5, #0x8
   15dd0:	lsl	x21, x3, x23
   15dd4:	neg	x0, x21
   15dd8:	cmp	w25, #0x5
   15ddc:	ldr	x1, [x19, x5]
   15de0:	orr	x1, x1, #0x8000000000000000
   15de4:	str	x1, [x19, x5]
   15de8:	ldr	x1, [x19]
   15dec:	and	x0, x0, x1
   15df0:	str	x0, [x19]
   15df4:	b.eq	1627c <mpfr_add1sp@@Base+0xc1c>  // b.none
   15df8:	lsr	x1, x20, x23
   15dfc:	mov	w20, #0x0                   	// #0
   15e00:	ldr	x2, [x29, #152]
   15e04:	tbz	w1, #0, 15810 <mpfr_add1sp@@Base+0x1b0>
   15e08:	cbnz	w25, 16600 <mpfr_add1sp@@Base+0xfa0>
   15e0c:	lsr	x23, x0, x23
   15e10:	mov	w20, #0xffffffff            	// #-1
   15e14:	tbz	w23, #0, 15810 <mpfr_add1sp@@Base+0x1b0>
   15e18:	adds	x0, x0, x21
   15e1c:	str	x0, [x19]
   15e20:	mov	w20, #0x1                   	// #1
   15e24:	b.cc	15810 <mpfr_add1sp@@Base+0x1b0>  // b.lo, b.ul, b.last
   15e28:	ldr	x1, [x29, #136]
   15e2c:	mov	x0, x19
   15e30:	add	x3, x19, x1, lsl #3
   15e34:	nop
   15e38:	ldr	x1, [x0, #8]
   15e3c:	add	x0, x0, #0x8
   15e40:	add	x1, x1, #0x1
   15e44:	str	x1, [x0]
   15e48:	cbnz	x1, 16530 <mpfr_add1sp@@Base+0xed0>
   15e4c:	cmp	x3, x0
   15e50:	b.ne	15e38 <mpfr_add1sp@@Base+0x7d8>  // b.any
   15e54:	ldr	x1, [x29, #136]
   15e58:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   15e5c:	add	x22, x22, #0x1
   15e60:	mov	w20, #0x1                   	// #1
   15e64:	str	x0, [x19, x1, lsl #3]
   15e68:	b	15810 <mpfr_add1sp@@Base+0x1b0>
   15e6c:	cmp	x22, x1
   15e70:	ldr	x0, [x19, #24]
   15e74:	ldr	x3, [x26, #24]
   15e78:	ldr	x6, [x2, #24]
   15e7c:	b.eq	161ac <mpfr_add1sp@@Base+0xb4c>  // b.none
   15e80:	b.gt	15e9c <mpfr_add1sp@@Base+0x83c>
   15e84:	mov	x8, x0
   15e88:	mov	x2, x22
   15e8c:	mov	x0, x6
   15e90:	mov	x22, x1
   15e94:	mov	x6, x8
   15e98:	mov	x1, x2
   15e9c:	sub	x1, x22, x1
   15ea0:	cmp	x1, #0x3f
   15ea4:	ldr	x0, [x0]
   15ea8:	b.hi	1643c <mpfr_add1sp@@Base+0xddc>  // b.pmore
   15eac:	ldr	x2, [x6]
   15eb0:	neg	w6, w1
   15eb4:	lsr	x1, x2, x1
   15eb8:	adds	x1, x1, x0
   15ebc:	lsl	x2, x2, x6
   15ec0:	b.cc	16568 <mpfr_add1sp@@Base+0xf08>  // b.lo, b.ul, b.last
   15ec4:	lsr	x0, x1, #1
   15ec8:	add	x22, x22, #0x1
   15ecc:	and	x6, x1, #0x1
   15ed0:	orr	x0, x0, #0x8000000000000000
   15ed4:	str	x0, [x3]
   15ed8:	mrs	x19, tpidr_el0
   15edc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15ee0:	ldr	x1, [x0, #2544]
   15ee4:	add	x0, x0, #0x9f0
   15ee8:	blr	x1
   15eec:	ldr	x0, [x19, x0]
   15ef0:	cmp	x0, x22
   15ef4:	b.lt	15aa4 <mpfr_add1sp@@Base+0x444>  // b.tstop
   15ef8:	orr	x0, x6, x2
   15efc:	str	x22, [x26, #16]
   15f00:	cmp	x0, #0x0
   15f04:	ccmp	w25, #0x5, #0x4, ne  // ne = any
   15f08:	b.eq	15c44 <mpfr_add1sp@@Base+0x5e4>  // b.none
   15f0c:	cbnz	w25, 1648c <mpfr_add1sp@@Base+0xe2c>
   15f10:	cbz	x6, 15b88 <mpfr_add1sp@@Base+0x528>
   15f14:	ldr	x0, [x3]
   15f18:	and	x1, x0, #0x1
   15f1c:	orr	x2, x1, x2
   15f20:	cbz	x2, 15b88 <mpfr_add1sp@@Base+0x528>
   15f24:	add	x0, x0, #0x1
   15f28:	str	x0, [x3]
   15f2c:	cbnz	x0, 15840 <mpfr_add1sp@@Base+0x1e0>
   15f30:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   15f34:	str	x0, [x3]
   15f38:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15f3c:	ldr	x1, [x0, #2544]
   15f40:	add	x0, x0, #0x9f0
   15f44:	blr	x1
   15f48:	ldr	x0, [x19, x0]
   15f4c:	cmp	x22, x0
   15f50:	b.ge	15aa4 <mpfr_add1sp@@Base+0x444>  // b.tcont
   15f54:	nop
   15f58:	add	x22, x22, #0x1
   15f5c:	str	x22, [x26, #16]
   15f60:	b	15840 <mpfr_add1sp@@Base+0x1e0>
   15f64:	mov	x27, #0x0                   	// #0
   15f68:	str	xzr, [x29, #120]
   15f6c:	b	157d0 <mpfr_add1sp@@Base+0x170>
   15f70:	ldp	x3, x6, [x6]
   15f74:	sub	w9, w21, #0x1
   15f78:	ldp	x1, x0, [x13]
   15f7c:	mov	x2, #0x1                   	// #1
   15f80:	add	x22, x22, x2
   15f84:	lsl	x2, x2, x9
   15f88:	adds	x3, x1, x3
   15f8c:	mov	x1, #0x0                   	// #0
   15f90:	adc	x0, x0, x6
   15f94:	extr	x3, x0, x3, #1
   15f98:	lsr	x0, x0, #1
   15f9c:	bic	x6, x3, x2
   15fa0:	orr	x0, x0, #0x8000000000000000
   15fa4:	and	x2, x2, x3
   15fa8:	stp	x6, x0, [x8]
   15fac:	b	15cf8 <mpfr_add1sp@@Base+0x698>
   15fb0:	cmp	x1, #0x7f
   15fb4:	b.ls	16110 <mpfr_add1sp@@Base+0xab0>  // b.plast
   15fb8:	mrs	x19, tpidr_el0
   15fbc:	str	x10, [x8]
   15fc0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   15fc4:	ldr	x1, [x0, #2544]
   15fc8:	add	x0, x0, #0x9f0
   15fcc:	blr	x1
   15fd0:	ldr	x1, [x13, #8]
   15fd4:	str	x1, [x8, #8]
   15fd8:	ldr	x0, [x19, x0]
   15fdc:	cmp	x22, x0
   15fe0:	b.gt	15aa4 <mpfr_add1sp@@Base+0x444>
   15fe4:	str	x22, [x26, #16]
   15fe8:	cmp	w25, #0x5
   15fec:	b.eq	15c44 <mpfr_add1sp@@Base+0x5e4>  // b.none
   15ff0:	cbz	w25, 15b88 <mpfr_add1sp@@Base+0x528>
   15ff4:	b	15d30 <mpfr_add1sp@@Base+0x6d0>
   15ff8:	cmp	x1, #0x7f
   15ffc:	b.hi	164a8 <mpfr_add1sp@@Base+0xe48>  // b.pmore
   16000:	cmp	x1, #0x40
   16004:	sub	w14, w1, #0x40
   16008:	ldp	x13, x2, [x3]
   1600c:	ldr	x3, [x3, #16]
   16010:	b.eq	16030 <mpfr_add1sp@@Base+0x9d0>  // b.none
   16014:	mov	w0, #0x80                  	// #128
   16018:	sub	w1, w0, w1
   1601c:	lsr	x0, x2, x14
   16020:	lsl	x2, x2, x1
   16024:	orr	x13, x13, x2
   16028:	lsl	x1, x3, x1
   1602c:	orr	x2, x1, x0
   16030:	ldp	x1, x11, [x11, #8]
   16034:	adds	x0, x9, x2
   16038:	lsr	x3, x3, x14
   1603c:	cset	w2, cs  // cs = hs, nlast
   16040:	mov	x9, x0
   16044:	adc	x14, x1, x3
   16048:	mov	x3, #0x1                   	// #1
   1604c:	cmp	x1, x14
   16050:	b.hi	16060 <mpfr_add1sp@@Base+0xa00>  // b.pmore
   16054:	cmp	w2, #0x0
   16058:	ccmp	x1, x14, #0x0, ne  // ne = any
   1605c:	cset	x3, eq  // eq = none
   16060:	sub	w21, w21, #0x1
   16064:	mov	x2, #0x1                   	// #1
   16068:	neg	x12, x12
   1606c:	adds	x3, x3, x11
   16070:	lsl	x2, x2, x21
   16074:	eor	x1, x6, x2
   16078:	b.eq	165f0 <mpfr_add1sp@@Base+0xf90>  // b.none
   1607c:	and	x1, x0, x1
   16080:	and	x12, x0, x12
   16084:	orr	x1, x1, x13
   16088:	and	x2, x0, x2
   1608c:	stp	x12, x14, [x8]
   16090:	str	x3, [x8, #16]
   16094:	b	15a00 <mpfr_add1sp@@Base+0x3a0>
   16098:	ldr	x9, [x9]
   1609c:	neg	w10, w1
   160a0:	lsr	x1, x9, x1
   160a4:	adds	x2, x1, x3
   160a8:	mov	x3, x2
   160ac:	lsl	x9, x9, x10
   160b0:	b.cc	160c8 <mpfr_add1sp@@Base+0xa68>  // b.lo, b.ul, b.last
   160b4:	and	x1, x2, #0x1
   160b8:	lsr	x2, x2, #1
   160bc:	add	x22, x22, #0x1
   160c0:	orr	x9, x9, x1
   160c4:	orr	x3, x2, #0x8000000000000000
   160c8:	sub	w1, w21, #0x1
   160cc:	mov	x2, #0x1                   	// #1
   160d0:	neg	x0, x0
   160d4:	lsl	x2, x2, x1
   160d8:	eor	x1, x8, x2
   160dc:	and	x1, x1, x3
   160e0:	and	x0, x0, x3
   160e4:	orr	x1, x1, x9
   160e8:	and	x2, x2, x3
   160ec:	str	x0, [x6]
   160f0:	b	15b34 <mpfr_add1sp@@Base+0x4d4>
   160f4:	cbz	x2, 15b88 <mpfr_add1sp@@Base+0x528>
   160f8:	ldr	x2, [x8]
   160fc:	lsr	x9, x2, x21
   16100:	and	x9, x9, #0x1
   16104:	orr	x1, x9, x1
   16108:	cbnz	x1, 15d48 <mpfr_add1sp@@Base+0x6e8>
   1610c:	b	15b88 <mpfr_add1sp@@Base+0x528>
   16110:	ldp	x9, x2, [x6]
   16114:	mov	w12, #0x80                  	// #128
   16118:	sub	w6, w12, w1
   1611c:	sub	w14, w1, #0x40
   16120:	ldr	x12, [x13, #8]
   16124:	cmp	x1, #0x40
   16128:	neg	x3, x3
   1612c:	lsl	x1, x2, x6
   16130:	sub	w6, w21, #0x1
   16134:	orr	x1, x9, x1
   16138:	lsr	x2, x2, x14
   1613c:	csel	x9, x1, x9, ne  // ne = any
   16140:	adds	x10, x2, x10
   16144:	lsl	x0, x0, x6
   16148:	mov	x2, x10
   1614c:	eor	x1, x11, x0
   16150:	cinc	x12, x12, cs  // cs = hs, nlast
   16154:	cbz	x12, 165f8 <mpfr_add1sp@@Base+0xf98>
   16158:	and	x2, x10, x1
   1615c:	and	x3, x10, x3
   16160:	orr	x1, x2, x9
   16164:	and	x2, x10, x0
   16168:	stp	x3, x12, [x8]
   1616c:	b	15cf8 <mpfr_add1sp@@Base+0x698>
   16170:	lsr	x10, x6, #1
   16174:	lsl	x12, x6, #63
   16178:	orr	x6, x10, #0x8000000000000000
   1617c:	and	x10, x2, #0x1
   16180:	add	x22, x22, #0x1
   16184:	orr	x9, x9, x10
   16188:	orr	x2, x12, x2, lsr #1
   1618c:	b	15ce4 <mpfr_add1sp@@Base+0x684>
   16190:	mov	x2, x11
   16194:	mov	x0, x22
   16198:	mov	x11, x3
   1619c:	mov	x22, x1
   161a0:	mov	x3, x2
   161a4:	mov	x1, x0
   161a8:	b	15944 <mpfr_add1sp@@Base+0x2e4>
   161ac:	ldr	x1, [x6]
   161b0:	add	x22, x22, #0x1
   161b4:	ldr	x0, [x0]
   161b8:	mov	x2, #0x0                   	// #0
   161bc:	add	x0, x0, x1
   161c0:	and	x6, x0, #0x1
   161c4:	lsr	x0, x0, #1
   161c8:	orr	x0, x0, #0x8000000000000000
   161cc:	str	x0, [x3]
   161d0:	b	15ed8 <mpfr_add1sp@@Base+0x878>
   161d4:	cbz	x2, 161e0 <mpfr_add1sp@@Base+0xb80>
   161d8:	mov	x0, x2
   161dc:	bl	c410 <mpfr_tmp_free@plt>
   161e0:	ldr	w2, [x26, #8]
   161e4:	mov	w1, w25
   161e8:	mov	x0, x26
   161ec:	bl	bf40 <mpfr_overflow@plt>
   161f0:	mov	w5, w0
   161f4:	b	15864 <mpfr_add1sp@@Base+0x204>
   161f8:	mov	x0, x2
   161fc:	bl	c410 <mpfr_tmp_free@plt>
   16200:	b	15838 <mpfr_add1sp@@Base+0x1d8>
   16204:	ldp	x2, x6, [x3]
   16208:	mov	x1, #0x1                   	// #1
   1620c:	ldp	x0, x9, [x11]
   16210:	ldr	x3, [x3, #16]
   16214:	adds	x0, x0, x2
   16218:	ldr	x2, [x11, #16]
   1621c:	adc	x6, x9, x6
   16220:	cset	w10, cs  // cs = hs, nlast
   16224:	cmp	x9, x6
   16228:	add	x2, x2, x3
   1622c:	b.hi	1623c <mpfr_add1sp@@Base+0xbdc>  // b.pmore
   16230:	cmp	w10, #0x0
   16234:	ccmp	x9, x6, #0x0, ne  // ne = any
   16238:	cset	x1, eq  // eq = none
   1623c:	add	x1, x1, x2
   16240:	sub	w11, w21, #0x1
   16244:	mov	x2, #0x1                   	// #1
   16248:	extr	x0, x6, x0, #1
   1624c:	lsr	x9, x1, #1
   16250:	extr	x3, x1, x6, #1
   16254:	add	x22, x22, x2
   16258:	orr	x6, x9, #0x8000000000000000
   1625c:	lsl	x2, x2, x11
   16260:	mov	w10, w21
   16264:	bic	x9, x0, x2
   16268:	mov	x1, #0x0                   	// #0
   1626c:	and	x2, x2, x0
   16270:	stp	x9, x3, [x8]
   16274:	str	x6, [x8, #16]
   16278:	b	15a00 <mpfr_add1sp@@Base+0x3a0>
   1627c:	mov	w20, #0x0                   	// #0
   16280:	ldr	x2, [x29, #152]
   16284:	b	15810 <mpfr_add1sp@@Base+0x1b0>
   16288:	cmp	w25, #0x5
   1628c:	ldr	x1, [x19, #24]
   16290:	b.ne	1664c <mpfr_add1sp@@Base+0xfec>  // b.any
   16294:	ldr	x0, [x26, #24]
   16298:	cmp	x0, x1
   1629c:	b.eq	16620 <mpfr_add1sp@@Base+0xfc0>  // b.none
   162a0:	lsl	x2, x24, #3
   162a4:	bl	ba10 <memcpy@plt>
   162a8:	mov	w20, #0xffffffff            	// #-1
   162ac:	ldr	x2, [x29, #152]
   162b0:	b	15810 <mpfr_add1sp@@Base+0x1b0>
   162b4:	str	x9, [x8]
   162b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   162bc:	ldr	x1, [x0, #2544]
   162c0:	add	x0, x0, #0x9f0
   162c4:	blr	x1
   162c8:	mrs	x19, tpidr_el0
   162cc:	ldr	x1, [x11, #8]
   162d0:	str	x1, [x8, #8]
   162d4:	ldr	x0, [x19, x0]
   162d8:	ldr	x1, [x11, #16]
   162dc:	str	x1, [x8, #16]
   162e0:	cmp	x22, x0
   162e4:	b.gt	15aa4 <mpfr_add1sp@@Base+0x444>
   162e8:	str	x22, [x26, #16]
   162ec:	cmp	w25, #0x5
   162f0:	b.eq	15c44 <mpfr_add1sp@@Base+0x5e4>  // b.none
   162f4:	cbz	w25, 15b88 <mpfr_add1sp@@Base+0x528>
   162f8:	cmp	w25, #0x1
   162fc:	b.eq	15b88 <mpfr_add1sp@@Base+0x528>  // b.none
   16300:	add	w0, w25, w5, lsr #31
   16304:	cmp	w0, #0x3
   16308:	b.eq	15b88 <mpfr_add1sp@@Base+0x528>  // b.none
   1630c:	ldr	x3, [x8]
   16310:	b	15a50 <mpfr_add1sp@@Base+0x3f0>
   16314:	lsl	x3, x0, #3
   16318:	sub	x27, x24, x0
   1631c:	add	x1, x1, x3
   16320:	cmp	x1, x8
   16324:	b.eq	16344 <mpfr_add1sp@@Base+0xce4>  // b.none
   16328:	sub	x27, x24, x0
   1632c:	mov	x0, x8
   16330:	stp	x9, x3, [x29, #112]
   16334:	lsl	x2, x27, #3
   16338:	bl	ba10 <memcpy@plt>
   1633c:	mov	x8, x0
   16340:	ldp	x9, x3, [x29, #112]
   16344:	add	x0, x8, x27, lsl #3
   16348:	mov	x2, x3
   1634c:	mov	w1, #0x0                   	// #0
   16350:	stp	x9, x8, [x29, #112]
   16354:	bl	c110 <memset@plt>
   16358:	ldp	x9, x8, [x29, #112]
   1635c:	b	15768 <mpfr_add1sp@@Base+0x108>
   16360:	mov	x1, x0
   16364:	add	x0, x29, #0x98
   16368:	str	x9, [x29, #120]
   1636c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   16370:	mov	x8, x0
   16374:	ldr	x9, [x29, #120]
   16378:	b	15740 <mpfr_add1sp@@Base+0xe0>
   1637c:	ldr	x0, [x29, #120]
   16380:	cbnz	w25, 16538 <mpfr_add1sp@@Base+0xed8>
   16384:	cmp	x27, #0x0
   16388:	csetm	w20, ne  // ne = any
   1638c:	cbz	x0, 15810 <mpfr_add1sp@@Base+0x1b0>
   16390:	ldr	x0, [x19]
   16394:	mov	w20, #0xffffffff            	// #-1
   16398:	lsr	x1, x0, x23
   1639c:	and	x1, x1, #0x1
   163a0:	orr	x27, x1, x27
   163a4:	cbz	x27, 15810 <mpfr_add1sp@@Base+0x1b0>
   163a8:	b	15e18 <mpfr_add1sp@@Base+0x7b8>
   163ac:	ldr	x0, [x19]
   163b0:	mov	x2, x24
   163b4:	mov	x1, x19
   163b8:	mov	w3, w28
   163bc:	and	x24, x21, x0
   163c0:	mov	x0, x19
   163c4:	bl	bce0 <__gmpn_rshift@plt>
   163c8:	add	x22, x22, x28
   163cc:	ldr	x0, [x29, #104]
   163d0:	sub	x1, x0, #0x8
   163d4:	ldr	x0, [x29, #120]
   163d8:	str	x24, [x29, #120]
   163dc:	orr	x27, x27, x0
   163e0:	ldr	x0, [x19, x1]
   163e4:	orr	x0, x0, #0x8000000000000000
   163e8:	str	x0, [x19, x1]
   163ec:	ldr	x0, [x19]
   163f0:	and	x20, x0, x20
   163f4:	str	x20, [x19]
   163f8:	b	15800 <mpfr_add1sp@@Base+0x1a0>
   163fc:	lsl	x4, x0, #3
   16400:	sub	x27, x24, x0
   16404:	add	x1, x1, x4
   16408:	mov	x2, x27
   1640c:	mov	x0, x8
   16410:	str	x9, [x29, #96]
   16414:	stp	x4, x8, [x29, #112]
   16418:	bl	bce0 <__gmpn_rshift@plt>
   1641c:	mov	w1, #0x0                   	// #0
   16420:	ldp	x4, x8, [x29, #112]
   16424:	add	x0, x8, x27, lsl #3
   16428:	mov	x2, x4
   1642c:	bl	c110 <memset@plt>
   16430:	ldr	x9, [x29, #96]
   16434:	ldr	x8, [x29, #120]
   16438:	b	15768 <mpfr_add1sp@@Base+0x108>
   1643c:	cmp	x1, #0x40
   16440:	mov	x2, #0x1                   	// #1
   16444:	b.ne	16458 <mpfr_add1sp@@Base+0xdf8>  // b.any
   16448:	ldr	x6, [x6]
   1644c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   16450:	cmp	x6, x2
   16454:	cset	x2, ne  // ne = any
   16458:	cmp	x1, #0x40
   1645c:	str	x0, [x3]
   16460:	cset	x6, eq  // eq = none
   16464:	b	15ed8 <mpfr_add1sp@@Base+0x878>
   16468:	lsr	x6, x0, #1
   1646c:	lsl	x3, x0, #63
   16470:	orr	x0, x6, #0x8000000000000000
   16474:	and	x6, x9, #0x1
   16478:	add	x22, x22, #0x1
   1647c:	orr	x13, x13, x6
   16480:	extr	x9, x14, x9, #1
   16484:	orr	x14, x3, x14, lsr #1
   16488:	b	159e8 <mpfr_add1sp@@Base+0x388>
   1648c:	cmp	w25, #0x1
   16490:	b.eq	15b88 <mpfr_add1sp@@Base+0x528>  // b.none
   16494:	add	w0, w25, w5, lsr #31
   16498:	cmp	w0, #0x3
   1649c:	b.eq	15b88 <mpfr_add1sp@@Base+0x528>  // b.none
   164a0:	ldr	x0, [x3]
   164a4:	b	15f24 <mpfr_add1sp@@Base+0x8c4>
   164a8:	cmp	x1, #0xbf
   164ac:	b.hi	162b4 <mpfr_add1sp@@Base+0xc54>  // b.pmore
   164b0:	cmp	x1, #0x80
   164b4:	sub	w17, w1, #0x80
   164b8:	mov	w0, #0xc0                  	// #192
   164bc:	sub	w0, w0, w1
   164c0:	ldp	x1, x13, [x3]
   164c4:	sub	w2, w21, #0x1
   164c8:	ldr	x16, [x3, #16]
   164cc:	lsl	x2, x15, x2
   164d0:	ldp	x14, x3, [x11, #8]
   164d4:	neg	x12, x12
   164d8:	lsl	x0, x16, x0
   164dc:	csel	x0, x0, xzr, ne  // ne = any
   164e0:	lsr	x16, x16, x17
   164e4:	adds	x16, x9, x16
   164e8:	cset	x11, cs  // cs = hs, nlast
   164ec:	orr	x13, x13, x1
   164f0:	orr	x13, x13, x0
   164f4:	eor	x1, x6, x2
   164f8:	adds	x11, x14, x11
   164fc:	mov	x9, x16
   16500:	cinc	x3, x3, cs  // cs = hs, nlast
   16504:	mov	x14, x11
   16508:	cbz	x3, 165f0 <mpfr_add1sp@@Base+0xf90>
   1650c:	and	x1, x1, x16
   16510:	and	x0, x12, x16
   16514:	orr	x1, x1, x13
   16518:	and	x2, x16, x2
   1651c:	stp	x0, x11, [x8]
   16520:	str	x3, [x8, #16]
   16524:	b	15a00 <mpfr_add1sp@@Base+0x3a0>
   16528:	mov	w3, w15
   1652c:	b	159b4 <mpfr_add1sp@@Base+0x354>
   16530:	mov	w20, #0x1                   	// #1
   16534:	b	15810 <mpfr_add1sp@@Base+0x1b0>
   16538:	orr	x27, x0, x27
   1653c:	ldr	w0, [x29, #132]
   16540:	cmp	x27, #0x0
   16544:	add	w24, w0, w25
   16548:	csetm	w20, ne  // ne = any
   1654c:	cmp	w24, #0x3
   16550:	b.eq	16698 <mpfr_add1sp@@Base+0x1038>  // b.none
   16554:	cmp	x27, #0x0
   16558:	ccmp	w25, #0x1, #0x4, ne  // ne = any
   1655c:	b.eq	15810 <mpfr_add1sp@@Base+0x1b0>  // b.none
   16560:	ldr	x0, [x19]
   16564:	b	15e18 <mpfr_add1sp@@Base+0x7b8>
   16568:	and	x6, x2, #0x8000000000000000
   1656c:	and	x2, x2, #0x7fffffffffffffff
   16570:	str	x1, [x3]
   16574:	b	15ed8 <mpfr_add1sp@@Base+0x878>
   16578:	mov	w3, w23
   1657c:	sub	x20, x3, x20
   16580:	add	x9, x20, x9
   16584:	cmp	x21, x9
   16588:	b.lt	157d0 <mpfr_add1sp@@Base+0x170>  // b.tstop
   1658c:	ldr	x4, [x29, #136]
   16590:	cmp	x9, #0x0
   16594:	add	x3, x9, #0x3f
   16598:	mov	x27, x1
   1659c:	csel	x3, x3, x9, lt  // lt = tstop
   165a0:	negs	x10, x9
   165a4:	ldr	x11, [x28, #24]
   165a8:	sub	x3, x4, x3, asr #6
   165ac:	and	x6, x10, #0x3f
   165b0:	and	x9, x9, #0x3f
   165b4:	csneg	x9, x9, x6, mi  // mi = first
   165b8:	mov	x6, #0x3f                  	// #63
   165bc:	ldr	x10, [x11, x3, lsl #3]
   165c0:	sub	x9, x6, x9
   165c4:	lsl	x2, x2, x9
   165c8:	bics	xzr, x10, x2
   165cc:	b.ne	157d0 <mpfr_add1sp@@Base+0x170>  // b.any
   165d0:	b	165dc <mpfr_add1sp@@Base+0xf7c>
   165d4:	ldr	x1, [x11, x3, lsl #3]
   165d8:	cbnz	x1, 165e4 <mpfr_add1sp@@Base+0xf84>
   165dc:	subs	x3, x3, #0x1
   165e0:	b.pl	165d4 <mpfr_add1sp@@Base+0xf74>  // b.nfrst
   165e4:	mvn	x3, x3
   165e8:	lsr	x27, x3, #63
   165ec:	b	157d0 <mpfr_add1sp@@Base+0x170>
   165f0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   165f4:	b	16474 <mpfr_add1sp@@Base+0xe14>
   165f8:	mov	x6, #0x8000000000000000    	// #-9223372036854775808
   165fc:	b	1617c <mpfr_add1sp@@Base+0xb1c>
   16600:	ldr	w1, [x29, #132]
   16604:	add	w24, w1, w25
   16608:	cmp	w24, #0x3
   1660c:	ccmp	w25, #0x1, #0x4, ne  // ne = any
   16610:	b.ne	15e18 <mpfr_add1sp@@Base+0x7b8>  // b.any
   16614:	mov	w25, w3
   16618:	mov	w20, #0xffffffff            	// #-1
   1661c:	b	15810 <mpfr_add1sp@@Base+0x1b0>
   16620:	mrs	x19, tpidr_el0
   16624:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16628:	ldr	x1, [x0, #2544]
   1662c:	add	x0, x0, #0x9f0
   16630:	blr	x1
   16634:	ldr	x0, [x19, x0]
   16638:	cmp	x0, x22
   1663c:	b.lt	161e0 <mpfr_add1sp@@Base+0xb80>  // b.tstop
   16640:	mov	w20, #0xffffffff            	// #-1
   16644:	str	x22, [x26, #16]
   16648:	b	15838 <mpfr_add1sp@@Base+0x1d8>
   1664c:	cmp	x21, x20
   16650:	b.cs	166a0 <mpfr_add1sp@@Base+0x1040>  // b.hs, b.nlast
   16654:	cmp	w25, #0x1
   16658:	b.ls	16294 <mpfr_add1sp@@Base+0xc34>  // b.plast
   1665c:	ldr	w0, [x29, #132]
   16660:	add	w0, w0, w25
   16664:	cmp	w0, #0x3
   16668:	b.eq	16294 <mpfr_add1sp@@Base+0xc34>  // b.none
   1666c:	ldr	x19, [x26, #24]
   16670:	cmp	x19, x1
   16674:	b.eq	166e8 <mpfr_add1sp@@Base+0x1088>  // b.none
   16678:	lsl	x2, x24, #3
   1667c:	mov	x0, x19
   16680:	bl	ba10 <memcpy@plt>
   16684:	mov	x0, #0x1                   	// #1
   16688:	lsl	x21, x0, x23
   1668c:	ldr	x0, [x19]
   16690:	ldr	x2, [x29, #152]
   16694:	b	15e18 <mpfr_add1sp@@Base+0x7b8>
   16698:	mov	w25, #0x1                   	// #1
   1669c:	b	15810 <mpfr_add1sp@@Base+0x1b0>
   166a0:	cbnz	w25, 166fc <mpfr_add1sp@@Base+0x109c>
   166a4:	ldr	x2, [x28, #24]
   166a8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   166ac:	add	x3, x2, x24, lsl #3
   166b0:	ldur	x3, [x3, #-8]
   166b4:	cmp	x3, x0
   166b8:	b.ne	1666c <mpfr_add1sp@@Base+0x100c>  // b.any
   166bc:	ldr	x0, [x29, #136]
   166c0:	sub	x0, x0, #0x1
   166c4:	ldr	x3, [x2, x0, lsl #3]
   166c8:	sub	x0, x0, #0x1
   166cc:	cmn	x0, #0x1
   166d0:	cbnz	x3, 1666c <mpfr_add1sp@@Base+0x100c>
   166d4:	b.ne	166c4 <mpfr_add1sp@@Base+0x1064>  // b.any
   166d8:	ldr	x0, [x1]
   166dc:	lsr	x0, x0, x23
   166e0:	tbz	w0, #0, 16294 <mpfr_add1sp@@Base+0xc34>
   166e4:	b	1666c <mpfr_add1sp@@Base+0x100c>
   166e8:	mov	x0, #0x1                   	// #1
   166ec:	mov	x2, #0x0                   	// #0
   166f0:	lsl	x21, x0, x23
   166f4:	ldr	x0, [x1]
   166f8:	b	15e18 <mpfr_add1sp@@Base+0x7b8>
   166fc:	cmp	w25, #0x1
   16700:	b.ne	1665c <mpfr_add1sp@@Base+0xffc>  // b.any
   16704:	b	16294 <mpfr_add1sp@@Base+0xc34>

0000000000016708 <mpfr_set_ui_2exp@@Base>:
   16708:	stp	x29, x30, [sp, #-96]!
   1670c:	mov	w4, #0x1                   	// #1
   16710:	mov	x29, sp
   16714:	stp	x19, x20, [sp, #16]
   16718:	mov	x19, x0
   1671c:	str	w4, [x0, #8]
   16720:	cbz	x1, 16840 <mpfr_set_ui_2exp@@Base+0x138>
   16724:	ldr	x0, [x0]
   16728:	stp	x21, x22, [sp, #32]
   1672c:	mov	x20, x2
   16730:	add	x21, x0, #0x3e
   16734:	subs	x0, x0, #0x1
   16738:	csel	x21, x21, x0, mi  // mi = first
   1673c:	stp	x23, x24, [sp, #48]
   16740:	clz	x23, x1
   16744:	ldr	x22, [x19, #24]
   16748:	asr	x21, x21, #6
   1674c:	str	x25, [sp, #64]
   16750:	lsl	x4, x1, x23
   16754:	str	wzr, [sp, #92]
   16758:	lsl	x2, x21, #3
   1675c:	str	x4, [x22, x21, lsl #3]
   16760:	add	x24, x22, x2
   16764:	mov	x0, x22
   16768:	mov	w25, w3
   1676c:	mov	w1, #0x0                   	// #0
   16770:	bl	c110 <memset@plt>
   16774:	mov	w2, #0x40                  	// #64
   16778:	sub	w2, w2, w23
   1677c:	ldr	x4, [x19]
   16780:	sxtw	x2, w2
   16784:	add	x20, x2, x20
   16788:	cmp	x2, x4
   1678c:	b.gt	16858 <mpfr_set_ui_2exp@@Base+0x150>
   16790:	mrs	x2, tpidr_el0
   16794:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16798:	ldr	x1, [x0, #2512]
   1679c:	add	x0, x0, #0x9d0
   167a0:	blr	x1
   167a4:	str	x20, [x19, #16]
   167a8:	ldr	w1, [sp, #92]
   167ac:	ldr	x0, [x2, x0]
   167b0:	cmp	x0, x20
   167b4:	b.gt	16814 <mpfr_set_ui_2exp@@Base+0x10c>
   167b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   167bc:	ldr	x3, [x0, #2544]
   167c0:	add	x0, x0, #0x9f0
   167c4:	blr	x3
   167c8:	ldr	x0, [x2, x0]
   167cc:	cmp	x0, x20
   167d0:	b.lt	16814 <mpfr_set_ui_2exp@@Base+0x10c>  // b.tstop
   167d4:	cbz	w1, 167f8 <mpfr_set_ui_2exp@@Base+0xf0>
   167d8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   167dc:	ldr	x3, [x0, #2576]
   167e0:	add	x0, x0, #0xa10
   167e4:	blr	x3
   167e8:	add	x0, x2, x0
   167ec:	ldr	w2, [x0]
   167f0:	orr	w2, w2, #0x8
   167f4:	str	w2, [x0]
   167f8:	mov	w0, w1
   167fc:	ldp	x19, x20, [sp, #16]
   16800:	ldp	x21, x22, [sp, #32]
   16804:	ldp	x23, x24, [sp, #48]
   16808:	ldr	x25, [sp, #64]
   1680c:	ldp	x29, x30, [sp], #96
   16810:	ret
   16814:	mov	w2, w25
   16818:	mov	x0, x19
   1681c:	bl	cb30 <mpfr_check_range@plt>
   16820:	mov	w1, w0
   16824:	mov	w0, w1
   16828:	ldp	x19, x20, [sp, #16]
   1682c:	ldp	x21, x22, [sp, #32]
   16830:	ldp	x23, x24, [sp, #48]
   16834:	ldr	x25, [sp, #64]
   16838:	ldp	x29, x30, [sp], #96
   1683c:	ret
   16840:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   16844:	str	x0, [x19, #16]
   16848:	mov	w0, w1
   1684c:	ldp	x19, x20, [sp, #16]
   16850:	ldp	x29, x30, [sp], #96
   16854:	ret
   16858:	add	x6, sp, #0x5c
   1685c:	mov	w5, w25
   16860:	mov	x1, x24
   16864:	mov	x0, x24
   16868:	mov	w3, #0x0                   	// #0
   1686c:	bl	ca20 <mpfr_round_raw@plt>
   16870:	cbz	w0, 16790 <mpfr_set_ui_2exp@@Base+0x88>
   16874:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   16878:	add	x20, x20, #0x1
   1687c:	str	x0, [x22, x21, lsl #3]
   16880:	b	16790 <mpfr_set_ui_2exp@@Base+0x88>
   16884:	nop

0000000000016888 <mpfr_mpz_init@@Base>:
   16888:	mrs	x1, tpidr_el0
   1688c:	stp	x29, x30, [sp, #-16]!
   16890:	mov	x3, x0
   16894:	mov	x29, sp
   16898:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1689c:	ldr	x2, [x0, #2496]
   168a0:	add	x0, x0, #0x9c0
   168a4:	blr	x2
   168a8:	add	x2, x1, x0
   168ac:	ldr	w1, [x1, x0]
   168b0:	cmp	w1, #0x0
   168b4:	b.le	168d8 <mpfr_mpz_init@@Base+0x50>
   168b8:	sub	w1, w1, #0x1
   168bc:	str	w1, [x2], #8
   168c0:	add	x1, x2, w1, sxtw #4
   168c4:	ldp	x0, x1, [x1]
   168c8:	stp	x0, x1, [x3]
   168cc:	str	wzr, [x3, #4]
   168d0:	ldp	x29, x30, [sp], #16
   168d4:	ret
   168d8:	ldp	x29, x30, [sp], #16
   168dc:	mov	x0, x3
   168e0:	b	cb50 <__gmpz_init@plt>
   168e4:	nop

00000000000168e8 <mpfr_mpz_init2@@Base>:
   168e8:	mrs	x2, tpidr_el0
   168ec:	stp	x29, x30, [sp, #-16]!
   168f0:	mov	x4, x0
   168f4:	mov	x29, sp
   168f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   168fc:	ldr	x3, [x0, #2496]
   16900:	add	x0, x0, #0x9c0
   16904:	blr	x3
   16908:	ldr	w3, [x2, x0]
   1690c:	cmp	x1, #0x800
   16910:	add	x2, x2, x0
   16914:	ccmp	w3, #0x0, #0x4, ls  // ls = plast
   16918:	b.le	16940 <mpfr_mpz_init2@@Base+0x58>
   1691c:	mov	x1, x2
   16920:	sub	w3, w3, #0x1
   16924:	str	w3, [x1], #8
   16928:	add	x3, x1, w3, sxtw #4
   1692c:	ldp	x0, x1, [x3]
   16930:	stp	x0, x1, [x4]
   16934:	str	wzr, [x4, #4]
   16938:	ldp	x29, x30, [sp], #16
   1693c:	ret
   16940:	ldp	x29, x30, [sp], #16
   16944:	mov	x0, x4
   16948:	b	ca90 <__gmpz_init2@plt>
   1694c:	nop

0000000000016950 <mpfr_mpz_clear@@Base>:
   16950:	mrs	x2, tpidr_el0
   16954:	stp	x29, x30, [sp, #-16]!
   16958:	mov	x3, x0
   1695c:	mov	x29, sp
   16960:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16964:	ldr	x1, [x0, #2496]
   16968:	add	x0, x0, #0x9c0
   1696c:	blr	x1
   16970:	add	x1, x2, x0
   16974:	ldr	w2, [x2, x0]
   16978:	sxtw	x0, w2
   1697c:	cmp	x0, #0x1f
   16980:	b.hi	169ac <mpfr_mpz_clear@@Base+0x5c>  // b.pmore
   16984:	ldr	w4, [x3]
   16988:	cmp	w4, #0x20
   1698c:	b.gt	169ac <mpfr_mpz_clear@@Base+0x5c>
   16990:	add	w2, w2, #0x1
   16994:	str	w2, [x1], #8
   16998:	ldp	x4, x5, [x3]
   1699c:	add	x1, x1, x0, lsl #4
   169a0:	stp	x4, x5, [x1]
   169a4:	ldp	x29, x30, [sp], #16
   169a8:	ret
   169ac:	ldp	x29, x30, [sp], #16
   169b0:	mov	x0, x3
   169b4:	b	c640 <__gmpz_clear@plt>
   169b8:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   169bc:	ldr	x0, [x0, #4024]
   169c0:	cbz	x0, 169c8 <mpfr_mpz_clear@@Base+0x78>
   169c4:	b	c390 <__gmon_start__@plt>
   169c8:	ret
   169cc:	nop
   169d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   169d4:	add	x0, x0, #0xa68
   169d8:	adrp	x1, 82000 <mpfr_agm@@Base+0x6b130>
   169dc:	add	x1, x1, #0xa68
   169e0:	cmp	x1, x0
   169e4:	b.eq	169fc <mpfr_mpz_clear@@Base+0xac>  // b.none
   169e8:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   169ec:	ldr	x1, [x1, #3936]
   169f0:	cbz	x1, 169fc <mpfr_mpz_clear@@Base+0xac>
   169f4:	mov	x16, x1
   169f8:	br	x16
   169fc:	ret
   16a00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16a04:	add	x0, x0, #0xa68
   16a08:	adrp	x1, 82000 <mpfr_agm@@Base+0x6b130>
   16a0c:	add	x1, x1, #0xa68
   16a10:	sub	x1, x1, x0
   16a14:	lsr	x2, x1, #63
   16a18:	add	x1, x2, x1, asr #3
   16a1c:	cmp	xzr, x1, asr #1
   16a20:	asr	x1, x1, #1
   16a24:	b.eq	16a3c <mpfr_mpz_clear@@Base+0xec>  // b.none
   16a28:	adrp	x2, 81000 <__gmpfr_l2b@@Base+0x200>
   16a2c:	ldr	x2, [x2, #4056]
   16a30:	cbz	x2, 16a3c <mpfr_mpz_clear@@Base+0xec>
   16a34:	mov	x16, x2
   16a38:	br	x16
   16a3c:	ret
   16a40:	stp	x29, x30, [sp, #-32]!
   16a44:	mov	x29, sp
   16a48:	str	x19, [sp, #16]
   16a4c:	adrp	x19, 82000 <mpfr_agm@@Base+0x6b130>
   16a50:	ldrb	w0, [x19, #2664]
   16a54:	cbnz	w0, 16a7c <mpfr_mpz_clear@@Base+0x12c>
   16a58:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   16a5c:	ldr	x0, [x0, #3952]
   16a60:	cbz	x0, 16a70 <mpfr_mpz_clear@@Base+0x120>
   16a64:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16a68:	ldr	x0, [x0, #2656]
   16a6c:	bl	bd00 <__cxa_finalize@plt>
   16a70:	bl	169d0 <mpfr_mpz_clear@@Base+0x80>
   16a74:	mov	w0, #0x1                   	// #1
   16a78:	strb	w0, [x19, #2664]
   16a7c:	ldr	x19, [sp, #16]
   16a80:	ldp	x29, x30, [sp], #32
   16a84:	ret
   16a88:	b	16a00 <mpfr_mpz_clear@@Base+0xb0>
   16a8c:	nop

0000000000016a90 <mpfr_set_emin@@Base>:
   16a90:	mov	x1, x0
   16a94:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   16a98:	add	x2, x1, x2
   16a9c:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   16aa0:	cmp	x2, x0
   16aa4:	b.hi	16ad8 <mpfr_set_emin@@Base+0x48>  // b.pmore
   16aa8:	stp	x29, x30, [sp, #-16]!
   16aac:	mrs	x2, tpidr_el0
   16ab0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16ab4:	ldr	x3, [x0, #2512]
   16ab8:	add	x0, x0, #0x9d0
   16abc:	blr	x3
   16ac0:	mov	x29, sp
   16ac4:	str	x1, [x2, x0]
   16ac8:	mov	w3, #0x0                   	// #0
   16acc:	mov	w0, w3
   16ad0:	ldp	x29, x30, [sp], #16
   16ad4:	ret
   16ad8:	mov	w3, #0x1                   	// #1
   16adc:	mov	w0, w3
   16ae0:	ret
   16ae4:	nop

0000000000016ae8 <mpfr_set_emax@@Base>:
   16ae8:	mov	x1, x0
   16aec:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   16af0:	add	x2, x1, x2
   16af4:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   16af8:	cmp	x2, x0
   16afc:	b.hi	16b30 <mpfr_set_emax@@Base+0x48>  // b.pmore
   16b00:	stp	x29, x30, [sp, #-16]!
   16b04:	mrs	x2, tpidr_el0
   16b08:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16b0c:	ldr	x3, [x0, #2544]
   16b10:	add	x0, x0, #0x9f0
   16b14:	blr	x3
   16b18:	mov	x29, sp
   16b1c:	str	x1, [x2, x0]
   16b20:	mov	w3, #0x0                   	// #0
   16b24:	mov	w0, w3
   16b28:	ldp	x29, x30, [sp], #16
   16b2c:	ret
   16b30:	mov	w3, #0x1                   	// #1
   16b34:	mov	w0, w3
   16b38:	ret
   16b3c:	nop

0000000000016b40 <mpfr_clear_flags@@Base>:
   16b40:	stp	x29, x30, [sp, #-16]!
   16b44:	mrs	x1, tpidr_el0
   16b48:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16b4c:	ldr	x2, [x0, #2576]
   16b50:	add	x0, x0, #0xa10
   16b54:	blr	x2
   16b58:	mov	x29, sp
   16b5c:	str	wzr, [x1, x0]
   16b60:	ldp	x29, x30, [sp], #16
   16b64:	ret

0000000000016b68 <mpfr_check_range@@Base>:
   16b68:	stp	x29, x30, [sp, #-32]!
   16b6c:	mov	x29, sp
   16b70:	ldr	x3, [x0, #16]
   16b74:	stp	x19, x20, [sp, #16]
   16b78:	mov	w19, w1
   16b7c:	mov	w1, w2
   16b80:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   16b84:	cmp	x3, x2
   16b88:	b.le	16c0c <mpfr_check_range@@Base+0xa4>
   16b8c:	mrs	x4, tpidr_el0
   16b90:	mov	x20, x0
   16b94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16b98:	ldr	x2, [x0, #2512]
   16b9c:	add	x0, x0, #0x9d0
   16ba0:	blr	x2
   16ba4:	ldr	x0, [x4, x0]
   16ba8:	cmp	x3, x0
   16bac:	b.lt	16c38 <mpfr_check_range@@Base+0xd0>  // b.tstop
   16bb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16bb4:	ldr	x2, [x0, #2544]
   16bb8:	add	x0, x0, #0x9f0
   16bbc:	blr	x2
   16bc0:	ldr	x0, [x4, x0]
   16bc4:	cmp	x3, x0
   16bc8:	b.gt	16c7c <mpfr_check_range@@Base+0x114>
   16bcc:	cbz	w19, 16bfc <mpfr_check_range@@Base+0x94>
   16bd0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16bd4:	ldr	x1, [x0, #2576]
   16bd8:	add	x0, x0, #0xa10
   16bdc:	blr	x1
   16be0:	ldr	w0, [x4, x0]
   16be4:	orr	w1, w0, #0x8
   16be8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16bec:	ldr	x2, [x0, #2576]
   16bf0:	add	x0, x0, #0xa10
   16bf4:	blr	x2
   16bf8:	str	w1, [x4, x0]
   16bfc:	mov	w0, w19
   16c00:	ldp	x19, x20, [sp, #16]
   16c04:	ldp	x29, x30, [sp], #32
   16c08:	ret
   16c0c:	cbz	w19, 16bfc <mpfr_check_range@@Base+0x94>
   16c10:	mrs	x4, tpidr_el0
   16c14:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16c18:	ldr	x1, [x0, #2576]
   16c1c:	add	x0, x0, #0xa10
   16c20:	blr	x1
   16c24:	cmp	x3, x2
   16c28:	ldr	w0, [x4, x0]
   16c2c:	orr	w1, w0, #0x2
   16c30:	csel	w0, w1, w0, eq  // eq = none
   16c34:	b	16be4 <mpfr_check_range@@Base+0x7c>
   16c38:	cbnz	w1, 16c68 <mpfr_check_range@@Base+0x100>
   16c3c:	add	x3, x3, #0x1
   16c40:	cmp	x0, x3
   16c44:	b.gt	16c90 <mpfr_check_range@@Base+0x128>
   16c48:	mov	x0, x20
   16c4c:	bl	bf00 <mpfr_powerof2_raw@plt>
   16c50:	mov	w1, w0
   16c54:	cbz	w0, 16c68 <mpfr_check_range@@Base+0x100>
   16c58:	ldr	w0, [x20, #8]
   16c5c:	tbz	w0, #31, 16c98 <mpfr_check_range@@Base+0x130>
   16c60:	cmp	w19, #0x0
   16c64:	cset	w1, le
   16c68:	ldr	w2, [x20, #8]
   16c6c:	mov	x0, x20
   16c70:	ldp	x19, x20, [sp, #16]
   16c74:	ldp	x29, x30, [sp], #32
   16c78:	b	c3c0 <mpfr_underflow@plt>
   16c7c:	ldr	w2, [x20, #8]
   16c80:	mov	x0, x20
   16c84:	ldp	x19, x20, [sp, #16]
   16c88:	ldp	x29, x30, [sp], #32
   16c8c:	b	bf40 <mpfr_overflow@plt>
   16c90:	mov	w1, #0x1                   	// #1
   16c94:	b	16c68 <mpfr_check_range@@Base+0x100>
   16c98:	mvn	w19, w19
   16c9c:	lsr	w1, w19, #31
   16ca0:	b	16c68 <mpfr_check_range@@Base+0x100>
   16ca4:	nop

0000000000016ca8 <mpfr_extract@@Base>:
   16ca8:	stp	x29, x30, [sp, #-64]!
   16cac:	mov	x29, sp
   16cb0:	stp	x19, x20, [sp, #16]
   16cb4:	mov	x19, #0x1                   	// #1
   16cb8:	ldr	x20, [x1]
   16cbc:	stp	x21, x22, [sp, #32]
   16cc0:	mov	x22, x0
   16cc4:	sub	x20, x20, #0x1
   16cc8:	str	x23, [sp, #48]
   16ccc:	lsl	x21, x19, x2
   16cd0:	mov	x23, x1
   16cd4:	asr	x20, x20, #6
   16cd8:	add	x20, x20, x19
   16cdc:	cbz	w2, 16d64 <mpfr_extract@@Base+0xbc>
   16ce0:	cmp	x21, #0x0
   16ce4:	lsr	x19, x21, #1
   16ce8:	mov	x0, #0x7fffffff            	// #2147483647
   16cec:	ccmp	x19, x0, #0x2, ne  // ne = any
   16cf0:	b.hi	16dc0 <mpfr_extract@@Base+0x118>  // b.pmore
   16cf4:	lsl	x1, x19, #6
   16cf8:	mov	x0, x22
   16cfc:	bl	c440 <__gmpz_realloc2@plt>
   16d00:	cmp	x20, x21
   16d04:	b.cs	16d6c <mpfr_extract@@Base+0xc4>  // b.hs, b.nlast
   16d08:	ldr	x0, [x22, #8]
   16d0c:	lsl	x2, x19, #3
   16d10:	mov	w1, #0x0                   	// #0
   16d14:	bl	c110 <memset@plt>
   16d18:	cmp	x20, x19
   16d1c:	b.cs	16d98 <mpfr_extract@@Base+0xf0>  // b.hs, b.nlast
   16d20:	cbz	x19, 16d40 <mpfr_extract@@Base+0x98>
   16d24:	ldr	x3, [x22, #8]
   16d28:	sub	x3, x3, #0x8
   16d2c:	b	16d38 <mpfr_extract@@Base+0x90>
   16d30:	subs	x19, x19, #0x1
   16d34:	b.eq	16d90 <mpfr_extract@@Base+0xe8>  // b.none
   16d38:	ldr	x2, [x3, x19, lsl #3]
   16d3c:	cbz	x2, 16d30 <mpfr_extract@@Base+0x88>
   16d40:	ldr	w0, [x23, #8]
   16d44:	ldr	x23, [sp, #48]
   16d48:	cmp	w0, #0x0
   16d4c:	cneg	w19, w19, lt  // lt = tstop
   16d50:	str	w19, [x22, #4]
   16d54:	ldp	x19, x20, [sp, #16]
   16d58:	ldp	x21, x22, [sp, #32]
   16d5c:	ldp	x29, x30, [sp], #64
   16d60:	ret
   16d64:	mov	x1, #0x40                  	// #64
   16d68:	bl	c440 <__gmpz_realloc2@plt>
   16d6c:	ldr	x1, [x23, #24]
   16d70:	sub	x20, x20, x21
   16d74:	ldr	x0, [x22, #8]
   16d78:	add	x1, x1, x20, lsl #3
   16d7c:	cmp	x0, x1
   16d80:	b.eq	16d20 <mpfr_extract@@Base+0x78>  // b.none
   16d84:	lsl	x2, x19, #3
   16d88:	bl	ba10 <memcpy@plt>
   16d8c:	b	16d20 <mpfr_extract@@Base+0x78>
   16d90:	mov	w19, #0x0                   	// #0
   16d94:	b	16d40 <mpfr_extract@@Base+0x98>
   16d98:	ldr	x0, [x22, #8]
   16d9c:	sub	x21, x21, x20
   16da0:	ldr	x1, [x23, #24]
   16da4:	add	x0, x0, x21, lsl #3
   16da8:	cmp	x0, x1
   16dac:	b.eq	16d20 <mpfr_extract@@Base+0x78>  // b.none
   16db0:	sub	x2, x20, x19
   16db4:	lsl	x2, x2, #3
   16db8:	bl	ba10 <memcpy@plt>
   16dbc:	b	16d20 <mpfr_extract@@Base+0x78>
   16dc0:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   16dc4:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   16dc8:	add	x2, x2, #0x1a0
   16dcc:	add	x0, x0, #0x1c8
   16dd0:	mov	w1, #0x28                  	// #40
   16dd4:	bl	cb40 <mpfr_assert_fail@plt>
   16dd8:	b	16cf4 <mpfr_extract@@Base+0x4c>
   16ddc:	nop

0000000000016de0 <__gmpfr_ceil_exp2@@Base>:
   16de0:	mov	x0, #0x4090000000000000    	// #4652218415073722368
   16de4:	fmov	d1, x0
   16de8:	fcmpe	d0, d1
   16dec:	b.hi	16e1c <__gmpfr_ceil_exp2@@Base+0x3c>  // b.pmore
   16df0:	fcvtzs	x0, d0
   16df4:	mov	x1, #0xfffffffffffffc02    	// #-1022
   16df8:	scvtf	d1, x0
   16dfc:	fcmp	d1, d0
   16e00:	cinc	x0, x0, ne  // ne = any
   16e04:	cmp	x0, x1
   16e08:	csel	x0, x0, x1, ge  // ge = tcont
   16e0c:	add	w0, w0, #0x3ff
   16e10:	ubfiz	x0, x0, #52, #11
   16e14:	fmov	d0, x0
   16e18:	ret
   16e1c:	stp	x29, x30, [sp, #-16]!
   16e20:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   16e24:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   16e28:	mov	x29, sp
   16e2c:	add	x2, x2, #0x1d8
   16e30:	add	x0, x0, #0x1e8
   16e34:	mov	w1, #0x26                  	// #38
   16e38:	bl	cb40 <mpfr_assert_fail@plt>
   16e3c:	nop

0000000000016e40 <__gmpfr_ceil_log2@@Base>:
   16e40:	fmov	x1, d0
   16e44:	ubfx	x2, x1, #52, #11
   16e48:	sub	x0, x2, #0x3ff
   16e4c:	cmp	x0, #0x3fe
   16e50:	b.gt	16e74 <__gmpfr_ceil_log2@@Base+0x34>
   16e54:	mov	x3, #0x3ff                 	// #1023
   16e58:	fmov	d0, #1.000000000000000000e+00
   16e5c:	bfi	x1, x3, #52, #11
   16e60:	fmov	d1, x1
   16e64:	sub	x2, x2, #0x3fe
   16e68:	fcmp	d0, d1
   16e6c:	csel	x0, x2, x0, ne  // ne = any
   16e70:	ret
   16e74:	stp	x29, x30, [sp, #-16]!
   16e78:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   16e7c:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   16e80:	mov	x29, sp
   16e84:	add	x2, x2, #0x1f8
   16e88:	add	x0, x0, #0x208
   16e8c:	mov	w1, #0x28                  	// #40
   16e90:	bl	cb40 <mpfr_assert_fail@plt>
   16e94:	nop

0000000000016e98 <__gmpfr_floor_log2@@Base>:
   16e98:	fmov	x0, d0
   16e9c:	ubfx	x0, x0, #52, #11
   16ea0:	sub	x0, x0, #0x3ff
   16ea4:	cmp	x0, #0x3fe
   16ea8:	b.gt	16eb0 <__gmpfr_floor_log2@@Base+0x18>
   16eac:	ret
   16eb0:	stp	x29, x30, [sp, #-16]!
   16eb4:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   16eb8:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   16ebc:	mov	x29, sp
   16ec0:	add	x2, x2, #0x1f8
   16ec4:	add	x0, x0, #0x218
   16ec8:	mov	w1, #0x25                  	// #37
   16ecc:	bl	cb40 <mpfr_assert_fail@plt>

0000000000016ed0 <mpfr_agm@@Base>:
   16ed0:	stp	x29, x30, [sp, #-432]!
   16ed4:	mov	x29, sp
   16ed8:	stp	x21, x22, [sp, #32]
   16edc:	mov	x22, x1
   16ee0:	mov	x21, x2
   16ee4:	ldr	x1, [x2, #16]
   16ee8:	stp	x19, x20, [sp, #16]
   16eec:	stp	x23, x24, [sp, #48]
   16ef0:	stp	x25, x26, [sp, #64]
   16ef4:	stp	x27, x28, [sp, #80]
   16ef8:	mov	x28, x0
   16efc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   16f00:	str	w3, [x29, #188]
   16f04:	cmp	x1, x0
   16f08:	b.le	17430 <mpfr_agm@@Base+0x560>
   16f0c:	ldr	x2, [x22, #16]
   16f10:	cmp	x2, x0
   16f14:	b.le	17444 <mpfr_agm@@Base+0x574>
   16f18:	ldr	w0, [x21, #8]
   16f1c:	tbnz	w0, #31, 17480 <mpfr_agm@@Base+0x5b0>
   16f20:	ldr	w0, [x22, #8]
   16f24:	tbnz	w0, #31, 17480 <mpfr_agm@@Base+0x5b0>
   16f28:	ldr	x0, [x28]
   16f2c:	str	x0, [x29, #160]
   16f30:	cmp	x0, #0x1
   16f34:	b.eq	176b8 <mpfr_agm@@Base+0x7e8>  // b.none
   16f38:	b.le	1789c <mpfr_agm@@Base+0x9cc>
   16f3c:	mov	x1, x0
   16f40:	sub	x0, x0, #0x1
   16f44:	clz	x0, x0
   16f48:	mov	w19, #0x40                  	// #64
   16f4c:	sub	w19, w19, w0
   16f50:	add	x19, x1, w19, sxtw
   16f54:	add	x24, x19, #0xe
   16f58:	mov	x1, x22
   16f5c:	mov	x0, x21
   16f60:	mov	w2, #0x1                   	// #1
   16f64:	asr	x24, x24, #6
   16f68:	bl	c9a0 <mpfr_cmp3@plt>
   16f6c:	add	x19, x19, #0xf
   16f70:	add	x24, x24, #0x1
   16f74:	cmp	w0, #0x0
   16f78:	cbz	w0, 1769c <mpfr_agm@@Base+0x7cc>
   16f7c:	mrs	x20, tpidr_el0
   16f80:	csel	x1, x21, x22, le
   16f84:	csel	x22, x22, x21, le
   16f88:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16f8c:	ldr	x2, [x0, #2576]
   16f90:	add	x0, x0, #0xa10
   16f94:	blr	x2
   16f98:	mov	x21, x1
   16f9c:	mov	x4, #0x40                  	// #64
   16fa0:	ldr	w0, [x20, x0]
   16fa4:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   16fa8:	str	w0, [x29, #184]
   16fac:	add	x25, x29, #0xd0
   16fb0:	add	x23, x29, #0xf0
   16fb4:	str	x4, [x29, #120]
   16fb8:	str	x28, [x29, #96]
   16fbc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16fc0:	ldr	x1, [x0, #2512]
   16fc4:	add	x0, x0, #0x9d0
   16fc8:	blr	x1
   16fcc:	add	x2, x20, x0
   16fd0:	ldr	x0, [x20, x0]
   16fd4:	add	x1, x29, #0x110
   16fd8:	str	x3, [x2]
   16fdc:	str	x0, [x29, #112]
   16fe0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   16fe4:	ldr	x4, [x0, #2544]
   16fe8:	add	x0, x0, #0x9f0
   16fec:	blr	x4
   16ff0:	str	xzr, [x29, #152]
   16ff4:	ldr	x2, [x20, x0]
   16ff8:	str	x2, [x29, #104]
   16ffc:	str	x1, [x29, #168]
   17000:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   17004:	str	x1, [x20, x0]
   17008:	str	xzr, [x29, #192]
   1700c:	lsl	x24, x24, #3
   17010:	cmp	x24, #0x4, lsl #12
   17014:	b.hi	17600 <mpfr_agm@@Base+0x730>  // b.pmore
   17018:	add	x1, x24, #0xf
   1701c:	mov	w2, #0x1                   	// #1
   17020:	and	x1, x1, #0xfffffffffffffff0
   17024:	str	x19, [x29, #208]
   17028:	sub	sp, sp, x1
   1702c:	str	w2, [x29, #216]
   17030:	mov	x0, sp
   17034:	sub	sp, sp, x1
   17038:	stp	x0, x19, [x29, #232]
   1703c:	mov	x0, sp
   17040:	sub	sp, sp, x1
   17044:	str	x0, [x29, #264]
   17048:	mov	x0, sp
   1704c:	sub	sp, sp, x1
   17050:	str	x0, [x29, #296]
   17054:	mov	x0, sp
   17058:	str	w2, [x29, #248]
   1705c:	str	x19, [x29, #272]
   17060:	str	w2, [x29, #280]
   17064:	adrp	x26, 5e000 <mpfr_free_pool@@Base+0x2558>
   17068:	adrp	x24, 5e000 <mpfr_free_pool@@Base+0x2558>
   1706c:	add	x26, x26, #0x308
   17070:	add	x24, x24, #0x250
   17074:	mov	w1, #0x1                   	// #1
   17078:	str	x19, [x29, #304]
   1707c:	str	w1, [x29, #312]
   17080:	str	x0, [x29, #328]
   17084:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   17088:	ldr	x1, [x0, #2576]
   1708c:	add	x0, x0, #0xa10
   17090:	blr	x1
   17094:	add	x27, x20, x0
   17098:	mov	x2, x22
   1709c:	mov	x1, x21
   170a0:	mov	w3, #0x0                   	// #0
   170a4:	str	wzr, [x20, x0]
   170a8:	mov	x0, x25
   170ac:	bl	bd50 <mpfr_mul@plt>
   170b0:	mov	x2, x22
   170b4:	mov	x1, x21
   170b8:	mov	x0, x23
   170bc:	mov	w3, #0x0                   	// #0
   170c0:	bl	c1a0 <mpfr_add@plt>
   170c4:	ldr	w0, [x27]
   170c8:	tbnz	w0, #1, 174fc <mpfr_agm@@Base+0x62c>
   170cc:	tbnz	w0, #0, 1751c <mpfr_agm@@Base+0x64c>
   170d0:	mov	x1, x25
   170d4:	mov	w2, #0x0                   	// #0
   170d8:	mov	x0, x25
   170dc:	str	wzr, [x27]
   170e0:	bl	c930 <mpfr_sqrt@plt>
   170e4:	mov	x24, #0x1                   	// #1
   170e8:	mov	x1, x23
   170ec:	mov	x2, x24
   170f0:	mov	x0, x23
   170f4:	mov	w3, #0x0                   	// #0
   170f8:	bl	c8f0 <mpfr_div_2ui@plt>
   170fc:	add	x26, x29, #0x190
   17100:	add	x0, x19, x24
   17104:	add	x27, x29, #0xc8
   17108:	sub	x1, x19, #0x1
   1710c:	str	x21, [x29, #144]
   17110:	add	x0, x0, x0, lsr #63
   17114:	str	x1, [x29, #176]
   17118:	asr	x0, x0, #1
   1711c:	stp	xzr, x0, [x29, #128]
   17120:	mov	x2, x27
   17124:	mov	x1, x23
   17128:	mov	x0, x25
   1712c:	bl	bdb0 <mpfr_cmp2@plt>
   17130:	cbz	w0, 174f0 <mpfr_agm@@Base+0x620>
   17134:	ldr	x1, [x29, #176]
   17138:	ldr	x0, [x29, #200]
   1713c:	cmp	x1, x0
   17140:	b.le	174f0 <mpfr_agm@@Base+0x620>
   17144:	add	x28, x29, #0x130
   17148:	mov	x2, x23
   1714c:	mov	x1, x25
   17150:	mov	w3, #0x0                   	// #0
   17154:	mov	x0, x28
   17158:	bl	c1a0 <mpfr_add@plt>
   1715c:	mov	x1, x28
   17160:	mov	x0, x28
   17164:	mov	w3, #0x0                   	// #0
   17168:	mov	x2, #0x1                   	// #1
   1716c:	bl	c8f0 <mpfr_div_2ui@plt>
   17170:	ldr	x0, [x29, #200]
   17174:	cmp	x19, x0, lsl #2
   17178:	b.ge	173d8 <mpfr_agm@@Base+0x508>  // b.tcont
   1717c:	ldr	x1, [x29, #136]
   17180:	mov	x0, x26
   17184:	bl	ca80 <mpfr_init2@plt>
   17188:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1718c:	ldr	x1, [x0, #2576]
   17190:	add	x0, x0, #0xa10
   17194:	blr	x1
   17198:	mov	w3, #0x0                   	// #0
   1719c:	mov	x2, x25
   171a0:	mov	x1, x23
   171a4:	add	x21, x20, x0
   171a8:	str	wzr, [x20, x0]
   171ac:	mov	x0, x26
   171b0:	bl	bb70 <mpfr_sub@plt>
   171b4:	mov	x1, x26
   171b8:	mov	w2, #0x0                   	// #0
   171bc:	mov	x0, x26
   171c0:	bl	c400 <mpfr_sqr@plt>
   171c4:	mov	x1, x26
   171c8:	mov	w3, #0x0                   	// #0
   171cc:	mov	x2, #0x4                   	// #4
   171d0:	mov	x0, x26
   171d4:	bl	c8f0 <mpfr_div_2ui@plt>
   171d8:	mov	x2, x28
   171dc:	mov	x1, x26
   171e0:	mov	x0, x26
   171e4:	mov	w3, #0x0                   	// #0
   171e8:	bl	c620 <mpfr_div@plt>
   171ec:	ldr	w0, [x21]
   171f0:	tbnz	w0, #0, 173cc <mpfr_agm@@Base+0x4fc>
   171f4:	mov	x2, x26
   171f8:	mov	x1, x28
   171fc:	mov	x0, x23
   17200:	mov	w3, #0x0                   	// #0
   17204:	ldr	x21, [x29, #144]
   17208:	bl	bb70 <mpfr_sub@plt>
   1720c:	ldr	x2, [x29, #256]
   17210:	mov	x0, x26
   17214:	ldr	x26, [x29, #320]
   17218:	sub	x26, x26, x2
   1721c:	bl	c070 <mpfr_clear@plt>
   17220:	add	x0, x24, x24, lsl #3
   17224:	lsl	x0, x0, #1
   17228:	cmn	x0, #0x32
   1722c:	b.eq	175f0 <mpfr_agm@@Base+0x720>  // b.none
   17230:	add	x1, x0, #0x33
   17234:	cmp	x1, #0x1
   17238:	b.ls	1766c <mpfr_agm@@Base+0x79c>  // b.plast
   1723c:	add	x0, x0, #0x32
   17240:	mov	w4, #0x40                  	// #64
   17244:	clz	x0, x0
   17248:	sub	w0, w4, w0
   1724c:	sxtw	x4, w0
   17250:	cmn	x24, #0x1
   17254:	b.eq	175f8 <mpfr_agm@@Base+0x728>  // b.none
   17258:	cmn	x24, #0x2
   1725c:	b.cs	17684 <mpfr_agm@@Base+0x7b4>  // b.hs, b.nlast
   17260:	add	x24, x24, #0x1
   17264:	mov	w0, #0x40                  	// #64
   17268:	clz	x24, x24
   1726c:	sub	w24, w0, w24
   17270:	sxtw	x24, w24
   17274:	cmp	x19, #0x0
   17278:	add	x0, x19, #0x3
   1727c:	csel	x0, x0, x19, lt  // lt = tstop
   17280:	cmp	x24, x0, asr #2
   17284:	b.gt	174b8 <mpfr_agm@@Base+0x5e8>
   17288:	ldr	x1, [x29, #256]
   1728c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   17290:	cmp	x1, x0
   17294:	b.le	174b8 <mpfr_agm@@Base+0x5e8>
   17298:	ldr	w0, [x29, #188]
   1729c:	sub	x2, x19, x26
   172a0:	ldr	x1, [x29, #240]
   172a4:	cmp	w0, #0x0
   172a8:	ldr	x0, [x29, #264]
   172ac:	sub	x1, x1, #0x1
   172b0:	ldr	x3, [x29, #160]
   172b4:	asr	x1, x1, #6
   172b8:	sub	x2, x2, x4
   172bc:	add	x1, x1, #0x1
   172c0:	cinc	x3, x3, eq  // eq = none
   172c4:	bl	c370 <mpfr_round_p@plt>
   172c8:	cbz	w0, 174b8 <mpfr_agm@@Base+0x5e8>
   172cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   172d0:	ldr	x1, [x0, #2576]
   172d4:	add	x0, x0, #0xa10
   172d8:	blr	x1
   172dc:	ldr	w1, [x20, x0]
   172e0:	add	x19, x20, x0
   172e4:	mov	w0, #0x37                  	// #55
   172e8:	tst	w1, w0
   172ec:	ldr	x28, [x29, #96]
   172f0:	b.ne	176c0 <mpfr_agm@@Base+0x7f0>  // b.any
   172f4:	ldr	w2, [x29, #188]
   172f8:	mov	x1, x23
   172fc:	ldr	w3, [x29, #248]
   17300:	mov	x0, x28
   17304:	bl	c6a0 <mpfr_set4@plt>
   17308:	ldr	x3, [x29, #128]
   1730c:	ldr	x1, [x29, #152]
   17310:	ldr	x2, [x28, #16]
   17314:	add	x1, x1, x3
   17318:	ldr	x3, [x29, #192]
   1731c:	sub	x2, x2, x1
   17320:	str	x2, [x28, #16]
   17324:	mov	w1, w0
   17328:	cbnz	x3, 176ec <mpfr_agm@@Base+0x81c>
   1732c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   17330:	ldr	x3, [x0, #2576]
   17334:	add	x0, x0, #0xa10
   17338:	blr	x3
   1733c:	ldr	w3, [x29, #184]
   17340:	str	w3, [x20, x0]
   17344:	add	x3, x20, x0
   17348:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1734c:	ldr	x4, [x0, #2512]
   17350:	add	x0, x0, #0x9d0
   17354:	blr	x4
   17358:	ldr	x4, [x29, #112]
   1735c:	str	x4, [x20, x0]
   17360:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   17364:	ldr	x5, [x0, #2544]
   17368:	add	x0, x0, #0x9f0
   1736c:	blr	x5
   17370:	ldr	x5, [x29, #104]
   17374:	str	x5, [x20, x0]
   17378:	cmp	x4, x2
   1737c:	ccmp	x5, x2, #0x1, le
   17380:	b.ge	173b8 <mpfr_agm@@Base+0x4e8>  // b.tcont
   17384:	ldr	w2, [x29, #188]
   17388:	mov	x0, x28
   1738c:	bl	cb30 <mpfr_check_range@plt>
   17390:	mov	w1, w0
   17394:	mov	sp, x29
   17398:	mov	w0, w1
   1739c:	ldp	x19, x20, [sp, #16]
   173a0:	ldp	x21, x22, [sp, #32]
   173a4:	ldp	x23, x24, [sp, #48]
   173a8:	ldp	x25, x26, [sp, #64]
   173ac:	ldp	x27, x28, [sp, #80]
   173b0:	ldp	x29, x30, [sp], #432
   173b4:	ret
   173b8:	cbz	w1, 17394 <mpfr_agm@@Base+0x4c4>
   173bc:	ldr	w0, [x29, #184]
   173c0:	orr	w0, w0, #0x8
   173c4:	str	w0, [x3]
   173c8:	b	17394 <mpfr_agm@@Base+0x4c4>
   173cc:	mov	x0, x26
   173d0:	bl	c070 <mpfr_clear@plt>
   173d4:	nop
   173d8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   173dc:	ldr	x1, [x0, #2576]
   173e0:	add	x0, x0, #0xa10
   173e4:	blr	x1
   173e8:	add	x21, x20, x0
   173ec:	str	wzr, [x20, x0]
   173f0:	mov	x2, x23
   173f4:	ldr	x0, [x29, #168]
   173f8:	mov	x1, x25
   173fc:	mov	w3, #0x0                   	// #0
   17400:	bl	bd50 <mpfr_mul@plt>
   17404:	ldr	w0, [x21]
   17408:	tbnz	w0, #1, 175a4 <mpfr_agm@@Base+0x6d4>
   1740c:	ldr	x1, [x29, #168]
   17410:	mov	w2, #0x0                   	// #0
   17414:	mov	x0, x25
   17418:	add	x24, x24, #0x1
   1741c:	bl	c930 <mpfr_sqrt@plt>
   17420:	mov	x1, x28
   17424:	mov	x0, x23
   17428:	bl	c4a0 <mpfr_swap@plt>
   1742c:	b	17120 <mpfr_agm@@Base+0x250>
   17430:	mov	x0, #0x2                   	// #2
   17434:	movk	x0, #0x8000, lsl #48
   17438:	cmp	x1, x0
   1743c:	b.eq	17480 <mpfr_agm@@Base+0x5b0>  // b.none
   17440:	ldr	x2, [x22, #16]
   17444:	mov	x0, #0x2                   	// #2
   17448:	movk	x0, #0x8000, lsl #48
   1744c:	cmp	x2, x0
   17450:	b.eq	17480 <mpfr_agm@@Base+0x5b0>  // b.none
   17454:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   17458:	cmp	x1, x0
   1745c:	ccmp	x2, x0, #0x4, ne  // ne = any
   17460:	b.ne	17704 <mpfr_agm@@Base+0x834>  // b.any
   17464:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   17468:	cmp	x1, x3
   1746c:	b.eq	17480 <mpfr_agm@@Base+0x5b0>  // b.none
   17470:	ldr	w4, [x21, #8]
   17474:	cmp	w4, #0x0
   17478:	ccmp	x2, x3, #0x4, gt
   1747c:	b.ne	1771c <mpfr_agm@@Base+0x84c>  // b.any
   17480:	mrs	x1, tpidr_el0
   17484:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   17488:	ldr	x2, [x0, #2576]
   1748c:	add	x0, x0, #0xa10
   17490:	blr	x2
   17494:	add	x0, x1, x0
   17498:	mov	x2, #0x2                   	// #2
   1749c:	movk	x2, #0x8000, lsl #48
   174a0:	str	x2, [x28, #16]
   174a4:	mov	w1, #0x0                   	// #0
   174a8:	ldr	w2, [x0]
   174ac:	orr	w2, w2, #0x4
   174b0:	str	w2, [x0]
   174b4:	b	17394 <mpfr_agm@@Base+0x4c4>
   174b8:	ldr	x1, [x29, #120]
   174bc:	mov	x0, #0xfffffffffffffeff    	// #-257
   174c0:	movk	x0, #0x7fff, lsl #48
   174c4:	sub	x0, x0, x19
   174c8:	cmp	x0, x1
   174cc:	b.lt	17738 <mpfr_agm@@Base+0x868>  // b.tstop
   174d0:	add	x19, x19, x1
   174d4:	sub	x24, x19, #0x1
   174d8:	add	x0, x19, x19, lsr #63
   174dc:	asr	x24, x24, #6
   174e0:	asr	x0, x0, #1
   174e4:	add	x24, x24, #0x1
   174e8:	str	x0, [x29, #120]
   174ec:	b	1700c <mpfr_agm@@Base+0x13c>
   174f0:	mov	x26, #0x0                   	// #0
   174f4:	ldr	x21, [x29, #144]
   174f8:	b	17220 <mpfr_agm@@Base+0x350>
   174fc:	ldr	x0, [x29, #152]
   17500:	cbz	x0, 177dc <mpfr_agm@@Base+0x90c>
   17504:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   17508:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   1750c:	add	x2, x2, #0x258
   17510:	add	x0, x0, #0x250
   17514:	mov	w1, #0x8d                  	// #141
   17518:	bl	cb40 <mpfr_assert_fail@plt>
   1751c:	ldr	x0, [x29, #152]
   17520:	cbnz	x0, 17504 <mpfr_agm@@Base+0x634>
   17524:	ldr	x27, [x22, #16]
   17528:	ldr	x28, [x21, #16]
   1752c:	cmp	x27, #0x0
   17530:	ccmp	x28, x27, #0x0, le
   17534:	b.gt	1781c <mpfr_agm@@Base+0x94c>
   17538:	mov	x0, #0xc000000000000003    	// #-4611686018427387901
   1753c:	sub	x0, x0, x28
   17540:	sub	x0, x0, x27
   17544:	cmp	x0, #0x1
   17548:	add	x0, x0, x0, lsr #63
   1754c:	asr	x0, x0, #1
   17550:	str	x0, [x29, #152]
   17554:	b.le	17830 <mpfr_agm@@Base+0x960>
   17558:	add	x27, x0, x27
   1755c:	mov	x1, x0
   17560:	ldr	x0, [x21]
   17564:	str	x0, [x29, #336]
   17568:	ldr	w0, [x21, #8]
   1756c:	add	x28, x1, x28
   17570:	ldr	w1, [x22, #8]
   17574:	str	w0, [x29, #344]
   17578:	ldr	x2, [x22]
   1757c:	str	x2, [x29, #368]
   17580:	ldr	x3, [x21, #24]
   17584:	add	x21, x29, #0x150
   17588:	ldr	x0, [x22, #24]
   1758c:	add	x22, x29, #0x170
   17590:	stp	x28, x3, [x29, #352]
   17594:	str	w1, [x29, #376]
   17598:	str	x27, [x29, #384]
   1759c:	str	x0, [x29, #392]
   175a0:	b	17084 <mpfr_agm@@Base+0x1b4>
   175a4:	ldr	x2, [x29, #224]
   175a8:	mov	w3, #0x3d                  	// #61
   175ac:	ldr	x1, [x29, #256]
   175b0:	and	w0, w0, w3
   175b4:	mov	x3, #0x2                   	// #2
   175b8:	str	w0, [x21]
   175bc:	add	x0, x2, x1
   175c0:	movk	x3, #0xc000, lsl #48
   175c4:	add	x0, x0, x3
   175c8:	ldr	x3, [x29, #128]
   175cc:	add	x0, x0, x0, lsr #63
   175d0:	neg	x0, x0, asr #1
   175d4:	add	x2, x2, x0
   175d8:	add	x1, x1, x0
   175dc:	add	x0, x3, x0
   175e0:	str	x0, [x29, #128]
   175e4:	str	x2, [x29, #224]
   175e8:	str	x1, [x29, #256]
   175ec:	b	17148 <mpfr_agm@@Base+0x278>
   175f0:	mov	x4, #0x0                   	// #0
   175f4:	b	17250 <mpfr_agm@@Base+0x380>
   175f8:	mov	x24, #0x0                   	// #0
   175fc:	b	17274 <mpfr_agm@@Base+0x3a4>
   17600:	add	x26, x29, #0xc0
   17604:	mov	x1, x24
   17608:	mov	x0, x26
   1760c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   17610:	mov	x2, x0
   17614:	mov	w27, #0x1                   	// #1
   17618:	mov	x1, x24
   1761c:	mov	x0, x26
   17620:	str	x19, [x29, #208]
   17624:	str	w27, [x29, #216]
   17628:	str	x2, [x29, #232]
   1762c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   17630:	mov	x2, x0
   17634:	mov	x1, x24
   17638:	mov	x0, x26
   1763c:	str	x19, [x29, #240]
   17640:	str	w27, [x29, #248]
   17644:	str	x2, [x29, #264]
   17648:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1764c:	mov	x2, x0
   17650:	mov	x1, x24
   17654:	mov	x0, x26
   17658:	str	x19, [x29, #272]
   1765c:	str	w27, [x29, #280]
   17660:	str	x2, [x29, #296]
   17664:	bl	bdc0 <mpfr_tmp_allocate@plt>
   17668:	b	17064 <mpfr_agm@@Base+0x194>
   1766c:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   17670:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   17674:	add	x2, x2, #0x330
   17678:	add	x0, x0, #0x250
   1767c:	mov	w1, #0x117                 	// #279
   17680:	bl	cb40 <mpfr_assert_fail@plt>
   17684:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   17688:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   1768c:	add	x2, x2, #0x348
   17690:	add	x0, x0, #0x250
   17694:	mov	w1, #0x11a                 	// #282
   17698:	bl	cb40 <mpfr_assert_fail@plt>
   1769c:	ldr	w3, [x21, #8]
   176a0:	mov	x1, x21
   176a4:	ldr	w2, [x29, #188]
   176a8:	mov	x0, x28
   176ac:	bl	c6a0 <mpfr_set4@plt>
   176b0:	mov	w1, w0
   176b4:	b	17394 <mpfr_agm@@Base+0x4c4>
   176b8:	mov	x19, x0
   176bc:	b	16f54 <mpfr_agm@@Base+0x84>
   176c0:	tbnz	w1, #1, 177b8 <mpfr_agm@@Base+0x8e8>
   176c4:	tbnz	w1, #0, 17784 <mpfr_agm@@Base+0x8b4>
   176c8:	tbnz	w1, #5, 17750 <mpfr_agm@@Base+0x880>
   176cc:	tbz	w1, #2, 172f4 <mpfr_agm@@Base+0x424>
   176d0:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   176d4:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   176d8:	add	x2, x2, #0x400
   176dc:	add	x0, x0, #0x250
   176e0:	mov	w1, #0x12a                 	// #298
   176e4:	bl	cb40 <mpfr_assert_fail@plt>
   176e8:	b	172f4 <mpfr_agm@@Base+0x424>
   176ec:	mov	x0, x3
   176f0:	str	w1, [x29, #176]
   176f4:	bl	c410 <mpfr_tmp_free@plt>
   176f8:	ldr	w1, [x29, #176]
   176fc:	ldr	x2, [x28, #16]
   17700:	b	1732c <mpfr_agm@@Base+0x45c>
   17704:	mov	w2, #0x1                   	// #1
   17708:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1770c:	mov	w1, #0x0                   	// #0
   17710:	str	w2, [x28, #8]
   17714:	str	x0, [x28, #16]
   17718:	b	17394 <mpfr_agm@@Base+0x4c4>
   1771c:	ldr	w1, [x22, #8]
   17720:	cmp	w1, #0x0
   17724:	b.le	17480 <mpfr_agm@@Base+0x5b0>
   17728:	mov	w1, #0x0                   	// #0
   1772c:	str	w4, [x28, #8]
   17730:	str	x0, [x28, #16]
   17734:	b	17394 <mpfr_agm@@Base+0x4c4>
   17738:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   1773c:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   17740:	add	x2, x2, #0x358
   17744:	add	x0, x0, #0x250
   17748:	mov	w1, #0x11f                 	// #287
   1774c:	bl	cb40 <mpfr_assert_fail@plt>
   17750:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   17754:	add	x0, x0, #0x250
   17758:	mov	w1, #0x129                 	// #297
   1775c:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   17760:	add	x2, x2, #0x3e0
   17764:	bl	cb40 <mpfr_assert_fail@plt>
   17768:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1776c:	ldr	x1, [x0, #2576]
   17770:	add	x0, x0, #0xa10
   17774:	blr	x1
   17778:	ldr	w1, [x20, x0]
   1777c:	tbz	w1, #2, 172f4 <mpfr_agm@@Base+0x424>
   17780:	b	176d0 <mpfr_agm@@Base+0x800>
   17784:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   17788:	add	x0, x0, #0x250
   1778c:	mov	w1, #0x128                 	// #296
   17790:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   17794:	add	x2, x2, #0x3c0
   17798:	bl	cb40 <mpfr_assert_fail@plt>
   1779c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   177a0:	ldr	x1, [x0, #2576]
   177a4:	add	x0, x0, #0xa10
   177a8:	blr	x1
   177ac:	ldr	w1, [x20, x0]
   177b0:	tbz	w1, #5, 176cc <mpfr_agm@@Base+0x7fc>
   177b4:	b	17750 <mpfr_agm@@Base+0x880>
   177b8:	mov	w1, #0x127                 	// #295
   177bc:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   177c0:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   177c4:	add	x2, x2, #0x3a0
   177c8:	add	x0, x0, #0x250
   177cc:	bl	cb40 <mpfr_assert_fail@plt>
   177d0:	ldr	w1, [x19]
   177d4:	tbz	w1, #0, 176c8 <mpfr_agm@@Base+0x7f8>
   177d8:	b	17784 <mpfr_agm@@Base+0x8b4>
   177dc:	ldr	x28, [x21, #16]
   177e0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   177e4:	ldr	x27, [x22, #16]
   177e8:	add	x0, x28, x27
   177ec:	cmp	x0, x1
   177f0:	b.gt	17848 <mpfr_agm@@Base+0x978>
   177f4:	cmp	x27, x1
   177f8:	b.ne	1786c <mpfr_agm@@Base+0x99c>  // b.any
   177fc:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   17800:	cmp	x28, x0
   17804:	b.le	17884 <mpfr_agm@@Base+0x9b4>
   17808:	mov	x0, #0xffffffffffffffff    	// #-1
   1780c:	mov	x27, #0x3ffffffffffffffe    	// #4611686018427387902
   17810:	mov	x1, x0
   17814:	str	x0, [x29, #152]
   17818:	b	17560 <mpfr_agm@@Base+0x690>
   1781c:	mov	x2, x26
   17820:	mov	x0, x24
   17824:	mov	w1, #0xc1                  	// #193
   17828:	bl	cb40 <mpfr_assert_fail@plt>
   1782c:	b	17538 <mpfr_agm@@Base+0x668>
   17830:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   17834:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   17838:	add	x2, x2, #0x320
   1783c:	add	x0, x0, #0x250
   17840:	mov	w1, #0xc3                  	// #195
   17844:	bl	cb40 <mpfr_assert_fail@plt>
   17848:	mov	x1, #0x2                   	// #2
   1784c:	movk	x1, #0xc000, lsl #48
   17850:	add	x0, x0, x1
   17854:	add	x0, x0, x0, lsr #63
   17858:	neg	x0, x0, asr #1
   1785c:	str	x0, [x29, #152]
   17860:	add	x27, x0, x27
   17864:	mov	x1, x0
   17868:	b	17560 <mpfr_agm@@Base+0x690>
   1786c:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   17870:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   17874:	add	x2, x2, #0x268
   17878:	add	x0, x0, #0x250
   1787c:	mov	w1, #0xaf                  	// #175
   17880:	bl	cb40 <mpfr_assert_fail@plt>
   17884:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   17888:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   1788c:	add	x2, x2, #0x2b8
   17890:	add	x0, x0, #0x250
   17894:	mov	w1, #0xb3                  	// #179
   17898:	bl	cb40 <mpfr_assert_fail@plt>
   1789c:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   178a0:	adrp	x0, 5e000 <mpfr_free_pool@@Base+0x2558>
   178a4:	add	x2, x2, #0x248
   178a8:	add	x0, x0, #0x250
   178ac:	mov	w1, #0x5f                  	// #95
   178b0:	bl	cb40 <mpfr_assert_fail@plt>
   178b4:	nop

00000000000178b8 <mpfr_cmp@@Base>:
   178b8:	mov	w2, #0x1                   	// #1
   178bc:	b	c9a0 <mpfr_cmp3@plt>

00000000000178c0 <mpfr_cmpabs@@Base>:
   178c0:	mov	x4, x0
   178c4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   178c8:	ldr	x2, [x4, #16]
   178cc:	cmp	x2, x0
   178d0:	b.le	179b0 <mpfr_cmpabs@@Base+0xf0>
   178d4:	ldr	x3, [x1, #16]
   178d8:	cmp	x3, x0
   178dc:	b.le	17944 <mpfr_cmpabs@@Base+0x84>
   178e0:	cmp	x2, x3
   178e4:	mov	w0, #0x1                   	// #1
   178e8:	b.gt	17964 <mpfr_cmpabs@@Base+0xa4>
   178ec:	mov	w0, #0xffffffff            	// #-1
   178f0:	b.lt	17964 <mpfr_cmpabs@@Base+0xa4>  // b.tstop
   178f4:	ldr	x3, [x1]
   178f8:	ldr	x2, [x4]
   178fc:	sub	x3, x3, #0x1
   17900:	ldr	x5, [x1, #24]
   17904:	sub	x2, x2, #0x1
   17908:	asr	x1, x3, #6
   1790c:	asr	x0, x2, #6
   17910:	ldr	x4, [x4, #24]
   17914:	b	17928 <mpfr_cmpabs@@Base+0x68>
   17918:	b.cc	17988 <mpfr_cmpabs@@Base+0xc8>  // b.lo, b.ul, b.last
   1791c:	subs	x0, x0, #0x1
   17920:	ccmp	x1, #0x0, #0x1, pl  // pl = nfrst
   17924:	b.lt	17990 <mpfr_cmpabs@@Base+0xd0>  // b.tstop
   17928:	ldr	x2, [x5, x1, lsl #3]
   1792c:	sub	x1, x1, #0x1
   17930:	ldr	x3, [x4, x0, lsl #3]
   17934:	cmp	x3, x2
   17938:	b.ls	17918 <mpfr_cmpabs@@Base+0x58>  // b.plast
   1793c:	mov	w0, #0x1                   	// #1
   17940:	ret
   17944:	mov	x0, #0x2                   	// #2
   17948:	movk	x0, #0x8000, lsl #48
   1794c:	cmp	x3, x0
   17950:	b.eq	179e0 <mpfr_cmpabs@@Base+0x120>  // b.none
   17954:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   17958:	mov	w0, #0xffffffff            	// #-1
   1795c:	cmp	x3, x1
   17960:	b.eq	17a18 <mpfr_cmpabs@@Base+0x158>  // b.none
   17964:	ret
   17968:	cmn	x1, #0x1
   1796c:	b.ne	17978 <mpfr_cmpabs@@Base+0xb8>  // b.any
   17970:	b	17a28 <mpfr_cmpabs@@Base+0x168>
   17974:	b.eq	17a24 <mpfr_cmpabs@@Base+0x164>  // b.none
   17978:	ldr	x0, [x5, x1, lsl #3]
   1797c:	sub	x1, x1, #0x1
   17980:	cmn	x1, #0x1
   17984:	cbz	x0, 17974 <mpfr_cmpabs@@Base+0xb4>
   17988:	mov	w0, #0xffffffff            	// #-1
   1798c:	ret
   17990:	cmn	x0, #0x1
   17994:	nop
   17998:	b.eq	17968 <mpfr_cmpabs@@Base+0xa8>  // b.none
   1799c:	ldr	x2, [x4, x0, lsl #3]
   179a0:	sub	x0, x0, #0x1
   179a4:	cmn	x0, #0x1
   179a8:	cbz	x2, 17998 <mpfr_cmpabs@@Base+0xd8>
   179ac:	b	1793c <mpfr_cmpabs@@Base+0x7c>
   179b0:	mov	x4, #0x2                   	// #2
   179b4:	movk	x4, #0x8000, lsl #48
   179b8:	cmp	x2, x4
   179bc:	b.eq	179e0 <mpfr_cmpabs@@Base+0x120>  // b.none
   179c0:	ldr	x3, [x1, #16]
   179c4:	cmp	x3, x4
   179c8:	b.eq	179e0 <mpfr_cmpabs@@Base+0x120>  // b.none
   179cc:	cmp	x2, x0
   179d0:	b.ne	17954 <mpfr_cmpabs@@Base+0x94>  // b.any
   179d4:	cmp	x3, x2
   179d8:	cset	w0, ne  // ne = any
   179dc:	ret
   179e0:	mrs	x1, tpidr_el0
   179e4:	stp	x29, x30, [sp, #-16]!
   179e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   179ec:	ldr	x2, [x0, #2576]
   179f0:	add	x0, x0, #0xa10
   179f4:	blr	x2
   179f8:	add	x1, x1, x0
   179fc:	mov	x29, sp
   17a00:	mov	w0, #0x0                   	// #0
   17a04:	ldr	w2, [x1]
   17a08:	orr	w2, w2, #0x10
   17a0c:	str	w2, [x1]
   17a10:	ldp	x29, x30, [sp], #16
   17a14:	ret
   17a18:	cmp	x2, x3
   17a1c:	cset	w0, ne  // ne = any
   17a20:	ret
   17a24:	ret
   17a28:	mov	w0, #0x0                   	// #0
   17a2c:	ret

0000000000017a30 <mpfr_cmp_si_2exp@@Base>:
   17a30:	mov	x4, x0
   17a34:	cmp	x1, #0x0
   17a38:	mov	w0, #0x1                   	// #1
   17a3c:	mov	w3, #0xffffffff            	// #-1
   17a40:	csel	w6, w0, w3, lt  // lt = tstop
   17a44:	csel	w3, w3, w0, lt  // lt = tstop
   17a48:	ldr	x5, [x4, #16]
   17a4c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   17a50:	cmp	x5, x0
   17a54:	b.le	17b18 <mpfr_cmp_si_2exp@@Base+0xe8>
   17a58:	ldr	w0, [x4, #8]
   17a5c:	cmp	x1, #0x0
   17a60:	ccmp	w0, w3, #0x0, ne  // ne = any
   17a64:	b.eq	17a6c <mpfr_cmp_si_2exp@@Base+0x3c>  // b.none
   17a68:	ret
   17a6c:	cmp	x1, #0x0
   17a70:	mov	w0, w6
   17a74:	cneg	x1, x1, lt  // lt = tstop
   17a78:	cmp	x5, x2
   17a7c:	b.le	17a68 <mpfr_cmp_si_2exp@@Base+0x38>
   17a80:	mov	x0, #0xffffffffffffffbe    	// #-66
   17a84:	movk	x0, #0x3fff, lsl #48
   17a88:	cmp	x2, x0
   17a8c:	b.gt	17aa0 <mpfr_cmp_si_2exp@@Base+0x70>
   17a90:	add	x7, x2, #0x40
   17a94:	mov	w0, w3
   17a98:	cmp	x5, x7
   17a9c:	b.gt	17a68 <mpfr_cmp_si_2exp@@Base+0x38>
   17aa0:	clz	x7, x1
   17aa4:	sub	w2, w5, w2
   17aa8:	mov	w0, #0x40                  	// #64
   17aac:	sub	w0, w0, w7
   17ab0:	cmp	w2, w0
   17ab4:	mov	w0, w3
   17ab8:	b.gt	17a68 <mpfr_cmp_si_2exp@@Base+0x38>
   17abc:	mov	w0, w6
   17ac0:	b.lt	17a68 <mpfr_cmp_si_2exp@@Base+0x38>  // b.tstop
   17ac4:	ldr	x0, [x4]
   17ac8:	lsl	x1, x1, x7
   17acc:	ldr	x5, [x4, #24]
   17ad0:	add	x2, x0, #0x3e
   17ad4:	subs	x4, x0, #0x1
   17ad8:	mov	w0, w3
   17adc:	csel	x2, x2, x4, mi  // mi = first
   17ae0:	asr	x2, x2, #6
   17ae4:	ldr	x4, [x5, x2, lsl #3]
   17ae8:	cmp	x4, x1
   17aec:	b.hi	17a68 <mpfr_cmp_si_2exp@@Base+0x38>  // b.pmore
   17af0:	mov	w0, w6
   17af4:	b.cs	17b04 <mpfr_cmp_si_2exp@@Base+0xd4>  // b.hs, b.nlast
   17af8:	b	17b74 <mpfr_cmp_si_2exp@@Base+0x144>
   17afc:	ldr	x0, [x5, x2, lsl #3]
   17b00:	cbnz	x0, 17b78 <mpfr_cmp_si_2exp@@Base+0x148>
   17b04:	cmp	x2, #0x0
   17b08:	sub	x2, x2, #0x1
   17b0c:	b.gt	17afc <mpfr_cmp_si_2exp@@Base+0xcc>
   17b10:	mov	w0, #0x0                   	// #0
   17b14:	ret
   17b18:	b.eq	17b6c <mpfr_cmp_si_2exp@@Base+0x13c>  // b.none
   17b1c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   17b20:	cmp	x5, x0
   17b24:	b.eq	17b60 <mpfr_cmp_si_2exp@@Base+0x130>  // b.none
   17b28:	mrs	x1, tpidr_el0
   17b2c:	stp	x29, x30, [sp, #-16]!
   17b30:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   17b34:	ldr	x2, [x0, #2576]
   17b38:	add	x0, x0, #0xa10
   17b3c:	blr	x2
   17b40:	add	x1, x1, x0
   17b44:	mov	x29, sp
   17b48:	mov	w0, #0x0                   	// #0
   17b4c:	ldr	w2, [x1]
   17b50:	orr	w2, w2, #0x10
   17b54:	str	w2, [x1]
   17b58:	ldp	x29, x30, [sp], #16
   17b5c:	ret
   17b60:	cmp	x1, #0x0
   17b64:	csel	w0, w6, wzr, ne  // ne = any
   17b68:	ret
   17b6c:	ldr	w0, [x4, #8]
   17b70:	ret
   17b74:	ret
   17b78:	mov	w0, w3
   17b7c:	ret

0000000000017b80 <mpfr_cmp_si@@Base>:
   17b80:	mov	x2, #0x0                   	// #0
   17b84:	b	c3d0 <mpfr_cmp_si_2exp@plt>

0000000000017b88 <mpfr_cmp_ui_2exp@@Base>:
   17b88:	ldr	x4, [x0, #16]
   17b8c:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   17b90:	mov	x3, x0
   17b94:	cmp	x4, x5
   17b98:	b.le	17c3c <mpfr_cmp_ui_2exp@@Base+0xb4>
   17b9c:	ldr	w0, [x0, #8]
   17ba0:	tbnz	w0, #31, 17c70 <mpfr_cmp_ui_2exp@@Base+0xe8>
   17ba4:	cbz	x1, 17c60 <mpfr_cmp_ui_2exp@@Base+0xd8>
   17ba8:	cmp	x4, x2
   17bac:	b.le	17c70 <mpfr_cmp_ui_2exp@@Base+0xe8>
   17bb0:	mov	x0, #0xffffffffffffffbe    	// #-66
   17bb4:	movk	x0, #0x3fff, lsl #48
   17bb8:	cmp	x2, x0
   17bbc:	b.gt	17bd0 <mpfr_cmp_ui_2exp@@Base+0x48>
   17bc0:	add	x5, x2, #0x40
   17bc4:	mov	w0, #0x1                   	// #1
   17bc8:	cmp	x4, x5
   17bcc:	b.gt	17c5c <mpfr_cmp_ui_2exp@@Base+0xd4>
   17bd0:	clz	x5, x1
   17bd4:	sub	w2, w4, w2
   17bd8:	mov	w0, #0x40                  	// #64
   17bdc:	sub	w0, w0, w5
   17be0:	cmp	w2, w0
   17be4:	mov	w0, #0x1                   	// #1
   17be8:	b.gt	17c5c <mpfr_cmp_ui_2exp@@Base+0xd4>
   17bec:	b.lt	17c70 <mpfr_cmp_ui_2exp@@Base+0xe8>  // b.tstop
   17bf0:	ldr	x4, [x3]
   17bf4:	lsl	x2, x1, x5
   17bf8:	ldr	x3, [x3, #24]
   17bfc:	add	x1, x4, #0x3e
   17c00:	subs	x4, x4, #0x1
   17c04:	csel	x1, x1, x4, mi  // mi = first
   17c08:	asr	x1, x1, #6
   17c0c:	ldr	x4, [x3, x1, lsl #3]
   17c10:	cmp	x4, x2
   17c14:	b.hi	17c5c <mpfr_cmp_ui_2exp@@Base+0xd4>  // b.pmore
   17c18:	b.cs	17c28 <mpfr_cmp_ui_2exp@@Base+0xa0>  // b.hs, b.nlast
   17c1c:	b	17c70 <mpfr_cmp_ui_2exp@@Base+0xe8>
   17c20:	ldr	x0, [x3, x1, lsl #3]
   17c24:	cbnz	x0, 17c60 <mpfr_cmp_ui_2exp@@Base+0xd8>
   17c28:	cmp	x1, #0x0
   17c2c:	sub	x1, x1, #0x1
   17c30:	b.gt	17c20 <mpfr_cmp_ui_2exp@@Base+0x98>
   17c34:	mov	w0, #0x0                   	// #0
   17c38:	ret
   17c3c:	mov	x0, #0x2                   	// #2
   17c40:	movk	x0, #0x8000, lsl #48
   17c44:	cmp	x4, x0
   17c48:	b.eq	17c78 <mpfr_cmp_ui_2exp@@Base+0xf0>  // b.none
   17c4c:	cmp	x1, #0x0
   17c50:	csetm	w0, ne  // ne = any
   17c54:	cmp	x4, x5
   17c58:	b.eq	17c68 <mpfr_cmp_ui_2exp@@Base+0xe0>  // b.none
   17c5c:	ret
   17c60:	mov	w0, #0x1                   	// #1
   17c64:	ret
   17c68:	ldr	w0, [x3, #8]
   17c6c:	ret
   17c70:	mov	w0, #0xffffffff            	// #-1
   17c74:	ret
   17c78:	mrs	x1, tpidr_el0
   17c7c:	stp	x29, x30, [sp, #-16]!
   17c80:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   17c84:	ldr	x2, [x0, #2576]
   17c88:	add	x0, x0, #0xa10
   17c8c:	blr	x2
   17c90:	add	x1, x1, x0
   17c94:	mov	x29, sp
   17c98:	mov	w0, #0x0                   	// #0
   17c9c:	ldr	w2, [x1]
   17ca0:	orr	w2, w2, #0x10
   17ca4:	str	w2, [x1]
   17ca8:	ldp	x29, x30, [sp], #16
   17cac:	ret

0000000000017cb0 <mpfr_cmp_ui@@Base>:
   17cb0:	mov	x2, #0x0                   	// #0
   17cb4:	b	bf50 <mpfr_cmp_ui_2exp@plt>

0000000000017cb8 <mpfr_greater_p@@Base>:
   17cb8:	ldr	x4, [x0, #16]
   17cbc:	mov	x3, #0x2                   	// #2
   17cc0:	movk	x3, #0x8000, lsl #48
   17cc4:	cmp	x4, x3
   17cc8:	b.eq	17d08 <mpfr_greater_p@@Base+0x50>  // b.none
   17ccc:	ldr	x4, [x1, #16]
   17cd0:	mov	w2, #0x0                   	// #0
   17cd4:	cmp	x4, x3
   17cd8:	b.ne	17ce4 <mpfr_greater_p@@Base+0x2c>  // b.any
   17cdc:	mov	w0, w2
   17ce0:	ret
   17ce4:	stp	x29, x30, [sp, #-16]!
   17ce8:	mov	w2, #0x1                   	// #1
   17cec:	mov	x29, sp
   17cf0:	bl	c9a0 <mpfr_cmp3@plt>
   17cf4:	cmp	w0, #0x0
   17cf8:	cset	w2, gt
   17cfc:	mov	w0, w2
   17d00:	ldp	x29, x30, [sp], #16
   17d04:	ret
   17d08:	mov	w2, #0x0                   	// #0
   17d0c:	mov	w0, w2
   17d10:	ret
   17d14:	nop

0000000000017d18 <mpfr_greaterequal_p@@Base>:
   17d18:	ldr	x4, [x0, #16]
   17d1c:	mov	x3, #0x2                   	// #2
   17d20:	movk	x3, #0x8000, lsl #48
   17d24:	cmp	x4, x3
   17d28:	b.eq	17d68 <mpfr_greaterequal_p@@Base+0x50>  // b.none
   17d2c:	ldr	x4, [x1, #16]
   17d30:	mov	w2, #0x0                   	// #0
   17d34:	cmp	x4, x3
   17d38:	b.ne	17d44 <mpfr_greaterequal_p@@Base+0x2c>  // b.any
   17d3c:	mov	w0, w2
   17d40:	ret
   17d44:	stp	x29, x30, [sp, #-16]!
   17d48:	mov	w2, #0x1                   	// #1
   17d4c:	mov	x29, sp
   17d50:	bl	c9a0 <mpfr_cmp3@plt>
   17d54:	mvn	w2, w0
   17d58:	ldp	x29, x30, [sp], #16
   17d5c:	lsr	w2, w2, #31
   17d60:	mov	w0, w2
   17d64:	ret
   17d68:	mov	w2, #0x0                   	// #0
   17d6c:	mov	w0, w2
   17d70:	ret
   17d74:	nop

0000000000017d78 <mpfr_less_p@@Base>:
   17d78:	ldr	x4, [x0, #16]
   17d7c:	mov	x3, #0x2                   	// #2
   17d80:	movk	x3, #0x8000, lsl #48
   17d84:	cmp	x4, x3
   17d88:	b.eq	17dc4 <mpfr_less_p@@Base+0x4c>  // b.none
   17d8c:	ldr	x4, [x1, #16]
   17d90:	mov	w2, #0x0                   	// #0
   17d94:	cmp	x4, x3
   17d98:	b.ne	17da4 <mpfr_less_p@@Base+0x2c>  // b.any
   17d9c:	mov	w0, w2
   17da0:	ret
   17da4:	stp	x29, x30, [sp, #-16]!
   17da8:	mov	w2, #0x1                   	// #1
   17dac:	mov	x29, sp
   17db0:	bl	c9a0 <mpfr_cmp3@plt>
   17db4:	lsr	w2, w0, #31
   17db8:	mov	w0, w2
   17dbc:	ldp	x29, x30, [sp], #16
   17dc0:	ret
   17dc4:	mov	w2, #0x0                   	// #0
   17dc8:	mov	w0, w2
   17dcc:	ret

0000000000017dd0 <mpfr_lessequal_p@@Base>:
   17dd0:	ldr	x4, [x0, #16]
   17dd4:	mov	x3, #0x2                   	// #2
   17dd8:	movk	x3, #0x8000, lsl #48
   17ddc:	cmp	x4, x3
   17de0:	b.eq	17e20 <mpfr_lessequal_p@@Base+0x50>  // b.none
   17de4:	ldr	x4, [x1, #16]
   17de8:	mov	w2, #0x0                   	// #0
   17dec:	cmp	x4, x3
   17df0:	b.ne	17dfc <mpfr_lessequal_p@@Base+0x2c>  // b.any
   17df4:	mov	w0, w2
   17df8:	ret
   17dfc:	stp	x29, x30, [sp, #-16]!
   17e00:	mov	w2, #0x1                   	// #1
   17e04:	mov	x29, sp
   17e08:	bl	c9a0 <mpfr_cmp3@plt>
   17e0c:	cmp	w0, #0x0
   17e10:	cset	w2, le
   17e14:	mov	w0, w2
   17e18:	ldp	x29, x30, [sp], #16
   17e1c:	ret
   17e20:	mov	w2, #0x0                   	// #0
   17e24:	mov	w0, w2
   17e28:	ret
   17e2c:	nop

0000000000017e30 <mpfr_lessgreater_p@@Base>:
   17e30:	ldr	x4, [x0, #16]
   17e34:	mov	x3, #0x2                   	// #2
   17e38:	movk	x3, #0x8000, lsl #48
   17e3c:	cmp	x4, x3
   17e40:	b.eq	17e80 <mpfr_lessgreater_p@@Base+0x50>  // b.none
   17e44:	ldr	x4, [x1, #16]
   17e48:	mov	w2, #0x0                   	// #0
   17e4c:	cmp	x4, x3
   17e50:	b.ne	17e5c <mpfr_lessgreater_p@@Base+0x2c>  // b.any
   17e54:	mov	w0, w2
   17e58:	ret
   17e5c:	stp	x29, x30, [sp, #-16]!
   17e60:	mov	w2, #0x1                   	// #1
   17e64:	mov	x29, sp
   17e68:	bl	c9a0 <mpfr_cmp3@plt>
   17e6c:	cmp	w0, #0x0
   17e70:	cset	w2, ne  // ne = any
   17e74:	mov	w0, w2
   17e78:	ldp	x29, x30, [sp], #16
   17e7c:	ret
   17e80:	mov	w2, #0x0                   	// #0
   17e84:	mov	w0, w2
   17e88:	ret
   17e8c:	nop

0000000000017e90 <mpfr_equal_p@@Base>:
   17e90:	ldr	x4, [x0, #16]
   17e94:	mov	x3, #0x2                   	// #2
   17e98:	movk	x3, #0x8000, lsl #48
   17e9c:	cmp	x4, x3
   17ea0:	b.eq	17ee0 <mpfr_equal_p@@Base+0x50>  // b.none
   17ea4:	ldr	x4, [x1, #16]
   17ea8:	mov	w2, #0x0                   	// #0
   17eac:	cmp	x4, x3
   17eb0:	b.ne	17ebc <mpfr_equal_p@@Base+0x2c>  // b.any
   17eb4:	mov	w0, w2
   17eb8:	ret
   17ebc:	stp	x29, x30, [sp, #-16]!
   17ec0:	mov	w2, #0x1                   	// #1
   17ec4:	mov	x29, sp
   17ec8:	bl	c9a0 <mpfr_cmp3@plt>
   17ecc:	cmp	w0, #0x0
   17ed0:	cset	w2, eq  // eq = none
   17ed4:	mov	w0, w2
   17ed8:	ldp	x29, x30, [sp], #16
   17edc:	ret
   17ee0:	mov	w2, #0x0                   	// #0
   17ee4:	mov	w0, w2
   17ee8:	ret
   17eec:	nop

0000000000017ef0 <mpfr_unordered_p@@Base>:
   17ef0:	ldr	x0, [x0, #16]
   17ef4:	mov	x2, #0x2                   	// #2
   17ef8:	movk	x2, #0x8000, lsl #48
   17efc:	cmp	x0, x2
   17f00:	b.eq	17f14 <mpfr_unordered_p@@Base+0x24>  // b.none
   17f04:	ldr	x0, [x1, #16]
   17f08:	cmp	x0, x2
   17f0c:	cset	w0, eq  // eq = none
   17f10:	ret
   17f14:	mov	w0, #0x1                   	// #1
   17f18:	ret
   17f1c:	nop

0000000000017f20 <mpfr_div_2exp@@Base>:
   17f20:	b	c8f0 <mpfr_div_2ui@plt>
   17f24:	nop

0000000000017f28 <mpfr_div_2ui@@Base>:
   17f28:	stp	x29, x30, [sp, #-80]!
   17f2c:	mov	x29, sp
   17f30:	stp	x21, x22, [sp, #32]
   17f34:	mov	x21, x0
   17f38:	stp	x23, x24, [sp, #48]
   17f3c:	mov	w23, w3
   17f40:	cbz	x2, 1819c <mpfr_div_2ui@@Base+0x274>
   17f44:	stp	x19, x20, [sp, #16]
   17f48:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   17f4c:	ldr	x20, [x1, #16]
   17f50:	cmp	x20, x0
   17f54:	b.le	18198 <mpfr_div_2ui@@Base+0x270>
   17f58:	mov	x19, x2
   17f5c:	cmp	x1, x21
   17f60:	mov	w22, #0x0                   	// #0
   17f64:	b.eq	1805c <mpfr_div_2ui@@Base+0x134>  // b.none
   17f68:	ldr	w22, [x1, #8]
   17f6c:	ldr	x4, [x1]
   17f70:	str	w22, [x21, #8]
   17f74:	ldr	x2, [x21]
   17f78:	cmp	x2, x4
   17f7c:	b.eq	180e0 <mpfr_div_2ui@@Base+0x1b8>  // b.none
   17f80:	sub	x4, x4, #0x1
   17f84:	sub	x6, x2, #0x1
   17f88:	ldr	x7, [x1, #24]
   17f8c:	asr	x4, x4, #6
   17f90:	asr	x6, x6, #6
   17f94:	ldr	x24, [x21, #24]
   17f98:	b.ge	18278 <mpfr_div_2ui@@Base+0x350>  // b.tcont
   17f9c:	sub	x4, x4, x6
   17fa0:	str	x25, [sp, #64]
   17fa4:	neg	w2, w2
   17fa8:	add	x8, x6, #0x1
   17fac:	ands	w2, w2, #0x3f
   17fb0:	add	x1, x7, x4, lsl #3
   17fb4:	b.eq	182b4 <mpfr_div_2ui@@Base+0x38c>  // b.none
   17fb8:	ldr	x3, [x7, x4, lsl #3]
   17fbc:	sub	w2, w2, #0x1
   17fc0:	mov	x0, #0x1                   	// #1
   17fc4:	cmp	w23, #0x0
   17fc8:	lsl	x0, x0, x2
   17fcc:	and	x9, x3, x0
   17fd0:	sub	x0, x0, #0x1
   17fd4:	ccmp	x9, #0x0, #0x4, ne  // ne = any
   17fd8:	and	x0, x0, x3
   17fdc:	b.ne	18008 <mpfr_div_2ui@@Base+0xe0>  // b.any
   17fe0:	cmp	x4, #0x0
   17fe4:	mov	x5, x4
   17fe8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   17fec:	b.ne	18008 <mpfr_div_2ui@@Base+0xe0>  // b.any
   17ff0:	mvn	x3, x4
   17ff4:	add	x3, x1, x3, lsl #3
   17ff8:	ldr	x0, [x3, x5, lsl #3]
   17ffc:	subs	x5, x5, #0x1
   18000:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   18004:	b.eq	17ff8 <mpfr_div_2ui@@Base+0xd0>  // b.none
   18008:	mov	x25, #0x2                   	// #2
   1800c:	lsl	x25, x25, x2
   18010:	cmp	w23, #0x5
   18014:	b.eq	18190 <mpfr_div_2ui@@Base+0x268>  // b.none
   18018:	cbnz	w23, 1810c <mpfr_div_2ui@@Base+0x1e4>
   1801c:	cbz	x9, 1818c <mpfr_div_2ui@@Base+0x264>
   18020:	ldr	x3, [x7, x4, lsl #3]
   18024:	and	x2, x25, x3
   18028:	orr	x0, x2, x0
   1802c:	cbnz	x0, 1812c <mpfr_div_2ui@@Base+0x204>
   18030:	neg	w22, w22
   18034:	cmp	x24, x1
   18038:	b.eq	18048 <mpfr_div_2ui@@Base+0x120>  // b.none
   1803c:	lsl	x2, x8, #3
   18040:	mov	x0, x24
   18044:	bl	ba10 <memcpy@plt>
   18048:	ldr	x0, [x24]
   1804c:	neg	x2, x25
   18050:	ldr	x25, [sp, #64]
   18054:	and	x2, x0, x2
   18058:	str	x2, [x24]
   1805c:	mrs	x1, tpidr_el0
   18060:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18064:	ldr	x2, [x0, #2512]
   18068:	add	x0, x0, #0x9d0
   1806c:	blr	x2
   18070:	mov	x2, #0x1                   	// #1
   18074:	ldr	x0, [x1, x0]
   18078:	sub	x0, x2, x0
   1807c:	add	x0, x0, x20
   18080:	cmp	x19, x0
   18084:	b.cs	181b8 <mpfr_div_2ui@@Base+0x290>  // b.hs, b.nlast
   18088:	mov	x2, x19
   1808c:	tbz	x19, #63, 1809c <mpfr_div_2ui@@Base+0x174>
   18090:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   18094:	add	x20, x20, x0
   18098:	add	x2, x19, x0
   1809c:	sub	x2, x20, x2
   180a0:	str	x2, [x21, #16]
   180a4:	cbz	w22, 180c8 <mpfr_div_2ui@@Base+0x1a0>
   180a8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   180ac:	ldr	x2, [x0, #2576]
   180b0:	add	x0, x0, #0xa10
   180b4:	blr	x2
   180b8:	add	x0, x1, x0
   180bc:	ldr	w1, [x0]
   180c0:	orr	w1, w1, #0x8
   180c4:	str	w1, [x0]
   180c8:	mov	w0, w22
   180cc:	ldp	x19, x20, [sp, #16]
   180d0:	ldp	x21, x22, [sp, #32]
   180d4:	ldp	x23, x24, [sp, #48]
   180d8:	ldp	x29, x30, [sp], #80
   180dc:	ret
   180e0:	ldr	x1, [x1, #24]
   180e4:	mov	w22, #0x0                   	// #0
   180e8:	ldr	x0, [x21, #24]
   180ec:	cmp	x0, x1
   180f0:	b.eq	1805c <mpfr_div_2ui@@Base+0x134>  // b.none
   180f4:	sub	x2, x2, #0x1
   180f8:	asr	x2, x2, #6
   180fc:	add	x2, x2, #0x1
   18100:	lsl	x2, x2, #3
   18104:	bl	ba10 <memcpy@plt>
   18108:	b	1805c <mpfr_div_2ui@@Base+0x134>
   1810c:	orr	x0, x0, x9
   18110:	cmp	w23, #0x1
   18114:	b.eq	1818c <mpfr_div_2ui@@Base+0x264>  // b.none
   18118:	add	w2, w23, w22, lsr #31
   1811c:	cmp	w2, #0x3
   18120:	b.eq	1818c <mpfr_div_2ui@@Base+0x264>  // b.none
   18124:	cbz	x0, 18190 <mpfr_div_2ui@@Base+0x268>
   18128:	ldr	x3, [x7, x4, lsl #3]
   1812c:	adds	x3, x3, x25
   18130:	str	x3, [x24]
   18134:	cset	x0, cs  // cs = hs, nlast
   18138:	b.cc	181fc <mpfr_div_2ui@@Base+0x2d4>  // b.lo, b.ul, b.last
   1813c:	mov	x0, #0x1                   	// #1
   18140:	b	1815c <mpfr_div_2ui@@Base+0x234>
   18144:	ldr	x3, [x1, x0, lsl #3]
   18148:	add	x4, x0, #0x1
   1814c:	add	x3, x3, #0x1
   18150:	str	x3, [x24, x0, lsl #3]
   18154:	cbnz	x3, 182f8 <mpfr_div_2ui@@Base+0x3d0>
   18158:	mov	x0, x4
   1815c:	cmp	x8, x0
   18160:	b.gt	18144 <mpfr_div_2ui@@Base+0x21c>
   18164:	add	x8, x24, x8, lsl #3
   18168:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1816c:	add	x20, x20, #0x1
   18170:	stur	x0, [x8, #-8]
   18174:	ldr	x3, [x24]
   18178:	neg	x2, x25
   1817c:	and	x3, x2, x3
   18180:	ldr	x25, [sp, #64]
   18184:	str	x3, [x24]
   18188:	b	1805c <mpfr_div_2ui@@Base+0x134>
   1818c:	cbnz	x0, 18030 <mpfr_div_2ui@@Base+0x108>
   18190:	mov	w22, #0x0                   	// #0
   18194:	b	18034 <mpfr_div_2ui@@Base+0x10c>
   18198:	ldp	x19, x20, [sp, #16]
   1819c:	mov	w2, w23
   181a0:	mov	x0, x21
   181a4:	ldr	w3, [x1, #8]
   181a8:	ldp	x21, x22, [sp, #32]
   181ac:	ldp	x23, x24, [sp, #48]
   181b0:	ldp	x29, x30, [sp], #80
   181b4:	b	c6a0 <mpfr_set4@plt>
   181b8:	ldr	w1, [x21, #8]
   181bc:	cbnz	w23, 181dc <mpfr_div_2ui@@Base+0x2b4>
   181c0:	b.hi	18400 <mpfr_div_2ui@@Base+0x4d8>  // b.pmore
   181c4:	tbnz	w1, #31, 1826c <mpfr_div_2ui@@Base+0x344>
   181c8:	tbnz	w22, #31, 181dc <mpfr_div_2ui@@Base+0x2b4>
   181cc:	mov	x0, x21
   181d0:	bl	bf00 <mpfr_powerof2_raw@plt>
   181d4:	cmp	w0, #0x0
   181d8:	cset	w23, ne  // ne = any
   181dc:	ldr	w2, [x21, #8]
   181e0:	mov	w1, w23
   181e4:	mov	x0, x21
   181e8:	ldp	x19, x20, [sp, #16]
   181ec:	ldp	x21, x22, [sp, #32]
   181f0:	ldp	x23, x24, [sp, #48]
   181f4:	ldp	x29, x30, [sp], #80
   181f8:	b	c3c0 <mpfr_underflow@plt>
   181fc:	cmp	x24, x1
   18200:	b.eq	18178 <mpfr_div_2ui@@Base+0x250>  // b.none
   18204:	cmp	x8, #0x1
   18208:	b.eq	18178 <mpfr_div_2ui@@Base+0x250>  // b.none
   1820c:	add	x2, x4, #0x3
   18210:	add	x4, x4, #0x1
   18214:	add	x3, x24, #0x8
   18218:	add	x5, x24, #0x18
   1821c:	add	x2, x7, x2, lsl #3
   18220:	add	x7, x7, x4, lsl #3
   18224:	cmp	x2, x3
   18228:	sub	x2, x6, #0x1
   1822c:	ccmp	x7, x5, #0x2, hi  // hi = pmore
   18230:	ccmp	x2, #0x9, #0x0, cs  // cs = hs, nlast
   18234:	b.ls	183d0 <mpfr_div_2ui@@Base+0x4a8>  // b.plast
   18238:	lsr	x2, x6, #1
   1823c:	lsl	x2, x2, #4
   18240:	ldr	q0, [x7, x0]
   18244:	str	q0, [x3, x0]
   18248:	add	x0, x0, #0x10
   1824c:	cmp	x2, x0
   18250:	b.ne	18240 <mpfr_div_2ui@@Base+0x318>  // b.any
   18254:	orr	x0, x6, #0x1
   18258:	tbz	w6, #0, 18264 <mpfr_div_2ui@@Base+0x33c>
   1825c:	ldr	x1, [x1, x0, lsl #3]
   18260:	str	x1, [x24, x0, lsl #3]
   18264:	ldr	x3, [x24]
   18268:	b	18178 <mpfr_div_2ui@@Base+0x250>
   1826c:	cmp	w22, #0x0
   18270:	b.le	181cc <mpfr_div_2ui@@Base+0x2a4>
   18274:	b	181dc <mpfr_div_2ui@@Base+0x2b4>
   18278:	sub	x6, x6, x4
   1827c:	add	x4, x4, #0x1
   18280:	lsl	x22, x6, #3
   18284:	add	x0, x24, x22
   18288:	cmp	x0, x7
   1828c:	b.eq	1829c <mpfr_div_2ui@@Base+0x374>  // b.none
   18290:	lsl	x2, x4, #3
   18294:	mov	x1, x7
   18298:	bl	ba10 <memcpy@plt>
   1829c:	mov	x2, x22
   182a0:	mov	x0, x24
   182a4:	mov	w1, #0x0                   	// #0
   182a8:	mov	w22, #0x0                   	// #0
   182ac:	bl	c110 <memset@plt>
   182b0:	b	1805c <mpfr_div_2ui@@Base+0x134>
   182b4:	ldur	x0, [x1, #-8]
   182b8:	cmp	w3, #0x0
   182bc:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   182c0:	and	x9, x0, #0x8000000000000000
   182c4:	and	x3, x0, #0x7fffffffffffffff
   182c8:	b.lt	183ac <mpfr_div_2ui@@Base+0x484>  // b.tstop
   182cc:	subs	x2, x4, #0x1
   182d0:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   182d4:	b.ne	183f4 <mpfr_div_2ui@@Base+0x4cc>  // b.any
   182d8:	mvn	x3, x4
   182dc:	add	x3, x1, x3, lsl #3
   182e0:	ldr	x0, [x3, x2, lsl #3]
   182e4:	subs	x2, x2, #0x1
   182e8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   182ec:	b.eq	182e0 <mpfr_div_2ui@@Base+0x3b8>  // b.none
   182f0:	mov	x25, #0x1                   	// #1
   182f4:	b	18010 <mpfr_div_2ui@@Base+0xe8>
   182f8:	cmp	x24, x1
   182fc:	b.eq	18264 <mpfr_div_2ui@@Base+0x33c>  // b.none
   18300:	cmp	x0, x6
   18304:	b.ge	18264 <mpfr_div_2ui@@Base+0x33c>  // b.tcont
   18308:	add	x0, x0, #0x3
   1830c:	sub	x3, x6, x4
   18310:	lsl	x0, x0, #3
   18314:	sub	x2, x0, #0x10
   18318:	add	x7, x24, x0
   1831c:	add	x5, x1, x2
   18320:	add	x0, x1, x0
   18324:	cmp	x5, x7
   18328:	add	x2, x24, x2
   1832c:	ccmp	x2, x0, #0x2, cc  // cc = lo, ul, last
   18330:	cset	w7, cs  // cs = hs, nlast
   18334:	cmp	x3, #0x9
   18338:	ccmp	x4, x6, #0x0, hi  // hi = pmore
   1833c:	cset	w0, le
   18340:	tst	w7, w0
   18344:	b.eq	18394 <mpfr_div_2ui@@Base+0x46c>  // b.none
   18348:	sub	x8, x8, x4
   1834c:	cmp	x4, x6
   18350:	csinc	x6, x8, xzr, le
   18354:	mov	x0, #0x0                   	// #0
   18358:	lsr	x3, x6, #1
   1835c:	lsl	x3, x3, #4
   18360:	ldr	q0, [x5, x0]
   18364:	str	q0, [x2, x0]
   18368:	add	x0, x0, #0x10
   1836c:	cmp	x0, x3
   18370:	b.ne	18360 <mpfr_div_2ui@@Base+0x438>  // b.any
   18374:	and	x0, x6, #0xfffffffffffffffe
   18378:	add	x4, x0, x4
   1837c:	cmp	x0, x6
   18380:	b.eq	18264 <mpfr_div_2ui@@Base+0x33c>  // b.none
   18384:	ldr	x0, [x1, x4, lsl #3]
   18388:	str	x0, [x24, x4, lsl #3]
   1838c:	ldr	x3, [x24]
   18390:	b	18178 <mpfr_div_2ui@@Base+0x250>
   18394:	ldr	x0, [x1, x4, lsl #3]
   18398:	str	x0, [x24, x4, lsl #3]
   1839c:	cmp	x4, x6
   183a0:	add	x4, x4, #0x1
   183a4:	b.lt	18394 <mpfr_div_2ui@@Base+0x46c>  // b.tstop
   183a8:	b	18264 <mpfr_div_2ui@@Base+0x33c>
   183ac:	cmp	w23, #0x5
   183b0:	mov	x25, #0x1                   	// #1
   183b4:	b.eq	18190 <mpfr_div_2ui@@Base+0x268>  // b.none
   183b8:	cmp	w23, #0x1
   183bc:	b.eq	18030 <mpfr_div_2ui@@Base+0x108>  // b.none
   183c0:	add	w2, w23, w22, lsr #31
   183c4:	cmp	w2, #0x3
   183c8:	b.ne	18124 <mpfr_div_2ui@@Base+0x1fc>  // b.any
   183cc:	b	18030 <mpfr_div_2ui@@Base+0x108>
   183d0:	mov	x0, #0x1                   	// #1
   183d4:	nop
   183d8:	ldr	x2, [x1, x0, lsl #3]
   183dc:	str	x2, [x24, x0, lsl #3]
   183e0:	add	x0, x0, #0x1
   183e4:	cmp	x0, x8
   183e8:	b.ne	183d8 <mpfr_div_2ui@@Base+0x4b0>  // b.any
   183ec:	ldr	x3, [x24]
   183f0:	b	18178 <mpfr_div_2ui@@Base+0x250>
   183f4:	mov	x0, x3
   183f8:	mov	x25, #0x1                   	// #1
   183fc:	b	18010 <mpfr_div_2ui@@Base+0xe8>
   18400:	mov	w23, w2
   18404:	b	181dc <mpfr_div_2ui@@Base+0x2b4>

0000000000018408 <mpfr_fdump@@Base>:
   18408:	stp	x29, x30, [sp, #-96]!
   1840c:	mov	x29, sp
   18410:	stp	x21, x22, [sp, #32]
   18414:	mov	x21, x0
   18418:	ldr	w0, [x1, #8]
   1841c:	stp	x25, x26, [sp, #64]
   18420:	mov	x26, x1
   18424:	tbnz	w0, #31, 185ec <mpfr_fdump@@Base+0x1e4>
   18428:	ldr	x0, [x26, #16]
   1842c:	mov	x1, #0x2                   	// #2
   18430:	movk	x1, #0x8000, lsl #48
   18434:	cmp	x0, x1
   18438:	b.eq	1860c <mpfr_fdump@@Base+0x204>  // b.none
   1843c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   18440:	cmp	x0, x1
   18444:	b.eq	1867c <mpfr_fdump@@Base+0x274>  // b.none
   18448:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1844c:	cmp	x0, x1
   18450:	b.eq	184f4 <mpfr_fdump@@Base+0xec>  // b.none
   18454:	ldr	x22, [x26]
   18458:	mov	x3, x21
   1845c:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   18460:	mov	x2, #0x2                   	// #2
   18464:	add	x0, x0, #0x430
   18468:	mov	x1, #0x1                   	// #1
   1846c:	stp	x19, x20, [sp, #16]
   18470:	add	x19, x22, #0x3e
   18474:	stp	x23, x24, [sp, #48]
   18478:	ldr	x24, [x26, #24]
   1847c:	bl	c8c0 <fwrite@plt>
   18480:	subs	x20, x22, #0x1
   18484:	csel	x19, x19, x20, mi  // mi = first
   18488:	cmn	x22, #0x3e
   1848c:	asr	x19, x19, #6
   18490:	b.lt	18718 <mpfr_fdump@@Base+0x310>  // b.tstop
   18494:	ldr	x22, [x24, x19, lsl #3]
   18498:	mov	w23, #0x0                   	// #0
   1849c:	tbnz	x22, #63, 184ac <mpfr_fdump@@Base+0xa4>
   184a0:	mov	w0, #0x4e                  	// #78
   184a4:	mov	w23, #0x1                   	// #1
   184a8:	strb	w0, [sp, #88]
   184ac:	cbnz	x19, 186d8 <mpfr_fdump@@Base+0x2d0>
   184b0:	add	x25, sp, #0x58
   184b4:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   184b8:	mov	w24, #0x54                  	// #84
   184bc:	nop
   184c0:	tst	x22, x19
   184c4:	mov	x1, x21
   184c8:	cset	w0, ne  // ne = any
   184cc:	add	w0, w0, #0x30
   184d0:	bl	bd20 <putc@plt>
   184d4:	sub	x2, x19, #0x1
   184d8:	mov	x1, x21
   184dc:	mov	w0, #0x5b                  	// #91
   184e0:	cbz	x20, 1851c <mpfr_fdump@@Base+0x114>
   184e4:	lsr	x19, x19, #1
   184e8:	cbz	x19, 18704 <mpfr_fdump@@Base+0x2fc>
   184ec:	sub	x20, x20, #0x1
   184f0:	b	184c0 <mpfr_fdump@@Base+0xb8>
   184f4:	mov	x1, x21
   184f8:	mov	w0, #0x30                  	// #48
   184fc:	bl	bda0 <fputc@plt>
   18500:	mov	x1, x21
   18504:	mov	w0, #0xa                   	// #10
   18508:	bl	bd20 <putc@plt>
   1850c:	ldp	x21, x22, [sp, #32]
   18510:	ldp	x25, x26, [sp, #64]
   18514:	ldp	x29, x30, [sp], #96
   18518:	ret
   1851c:	tst	x2, x22
   18520:	b.eq	18540 <mpfr_fdump@@Base+0x138>  // b.none
   18524:	bl	bd20 <putc@plt>
   18528:	strb	w24, [x25, w23, sxtw]
   1852c:	add	w0, w23, #0x1
   18530:	lsr	x19, x19, #1
   18534:	mov	w23, w0
   18538:	cbnz	x19, 184ec <mpfr_fdump@@Base+0xe4>
   1853c:	nop
   18540:	ldr	x19, [x26, #16]
   18544:	mov	x0, #0x4                   	// #4
   18548:	movk	x0, #0x8000, lsl #48
   1854c:	cmp	x19, x0
   18550:	b.eq	186b0 <mpfr_fdump@@Base+0x2a8>  // b.none
   18554:	mov	x2, x19
   18558:	mov	x0, x21
   1855c:	adrp	x1, 5f000 <mpfr_free_pool@@Base+0x3558>
   18560:	add	x1, x1, #0x440
   18564:	bl	cce0 <fprintf@plt>
   18568:	mrs	x1, tpidr_el0
   1856c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18570:	ldr	x2, [x0, #2512]
   18574:	add	x0, x0, #0x9d0
   18578:	blr	x2
   1857c:	ldr	x0, [x1, x0]
   18580:	cmp	x19, x0
   18584:	b.lt	18640 <mpfr_fdump@@Base+0x238>  // b.tstop
   18588:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1858c:	ldr	x2, [x0, #2544]
   18590:	add	x0, x0, #0x9f0
   18594:	blr	x2
   18598:	ldr	x0, [x1, x0]
   1859c:	cmp	x19, x0
   185a0:	b.le	18654 <mpfr_fdump@@Base+0x24c>
   185a4:	add	x2, sp, #0x58
   185a8:	add	w3, w23, #0x1
   185ac:	mov	w0, #0x3e                  	// #62
   185b0:	strb	w0, [x2, w23, sxtw]
   185b4:	mov	x0, x21
   185b8:	adrp	x1, 5f000 <mpfr_free_pool@@Base+0x3558>
   185bc:	add	x1, x1, #0x448
   185c0:	strb	wzr, [x2, w3, sxtw]
   185c4:	bl	cce0 <fprintf@plt>
   185c8:	mov	x1, x21
   185cc:	mov	w0, #0xa                   	// #10
   185d0:	ldp	x19, x20, [sp, #16]
   185d4:	ldp	x23, x24, [sp, #48]
   185d8:	bl	bd20 <putc@plt>
   185dc:	ldp	x21, x22, [sp, #32]
   185e0:	ldp	x25, x26, [sp, #64]
   185e4:	ldp	x29, x30, [sp], #96
   185e8:	ret
   185ec:	mov	x1, x21
   185f0:	mov	w0, #0x2d                  	// #45
   185f4:	bl	bda0 <fputc@plt>
   185f8:	ldr	x0, [x26, #16]
   185fc:	mov	x1, #0x2                   	// #2
   18600:	movk	x1, #0x8000, lsl #48
   18604:	cmp	x0, x1
   18608:	b.ne	1843c <mpfr_fdump@@Base+0x34>  // b.any
   1860c:	mov	x3, x21
   18610:	mov	x2, #0x5                   	// #5
   18614:	mov	x1, #0x1                   	// #1
   18618:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1861c:	add	x0, x0, #0x420
   18620:	bl	c8c0 <fwrite@plt>
   18624:	mov	x1, x21
   18628:	mov	w0, #0xa                   	// #10
   1862c:	bl	bd20 <putc@plt>
   18630:	ldp	x21, x22, [sp, #32]
   18634:	ldp	x25, x26, [sp, #64]
   18638:	ldp	x29, x30, [sp], #96
   1863c:	ret
   18640:	add	x2, sp, #0x58
   18644:	mov	w0, #0x3c                  	// #60
   18648:	add	w3, w23, #0x1
   1864c:	strb	w0, [x2, w23, sxtw]
   18650:	b	185b4 <mpfr_fdump@@Base+0x1ac>
   18654:	cbnz	w23, 18720 <mpfr_fdump@@Base+0x318>
   18658:	mov	x1, x21
   1865c:	mov	w0, #0xa                   	// #10
   18660:	ldp	x19, x20, [sp, #16]
   18664:	ldp	x23, x24, [sp, #48]
   18668:	bl	bd20 <putc@plt>
   1866c:	ldp	x21, x22, [sp, #32]
   18670:	ldp	x25, x26, [sp, #64]
   18674:	ldp	x29, x30, [sp], #96
   18678:	ret
   1867c:	mov	x3, x21
   18680:	mov	x2, #0x5                   	// #5
   18684:	mov	x1, #0x1                   	// #1
   18688:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1868c:	add	x0, x0, #0x428
   18690:	bl	c8c0 <fwrite@plt>
   18694:	mov	x1, x21
   18698:	mov	w0, #0xa                   	// #10
   1869c:	bl	bd20 <putc@plt>
   186a0:	ldp	x21, x22, [sp, #32]
   186a4:	ldp	x25, x26, [sp, #64]
   186a8:	ldp	x29, x30, [sp], #96
   186ac:	ret
   186b0:	add	x2, x26, #0x20
   186b4:	mov	x0, x21
   186b8:	adrp	x1, 5f000 <mpfr_free_pool@@Base+0x3558>
   186bc:	add	x1, x1, #0x438
   186c0:	bl	c550 <__gmp_fprintf@plt>
   186c4:	add	x2, sp, #0x58
   186c8:	mov	w0, #0x55                  	// #85
   186cc:	add	w3, w23, #0x1
   186d0:	strb	w0, [x2, w23, sxtw]
   186d4:	b	185b4 <mpfr_fdump@@Base+0x1ac>
   186d8:	mov	x25, #0x8000000000000000    	// #-9223372036854775808
   186dc:	tst	x22, x25
   186e0:	mov	x1, x21
   186e4:	cset	w0, ne  // ne = any
   186e8:	lsr	x25, x25, #1
   186ec:	add	w0, w0, #0x30
   186f0:	bl	bd20 <putc@plt>
   186f4:	cbnz	x25, 1872c <mpfr_fdump@@Base+0x324>
   186f8:	sub	x19, x19, #0x1
   186fc:	cmn	x19, #0x1
   18700:	b.ne	18734 <mpfr_fdump@@Base+0x32c>  // b.any
   18704:	tbz	x20, #63, 18540 <mpfr_fdump@@Base+0x138>
   18708:	mov	x1, x21
   1870c:	mov	w0, #0x5d                  	// #93
   18710:	bl	bd20 <putc@plt>
   18714:	b	18540 <mpfr_fdump@@Base+0x138>
   18718:	mov	w23, #0x0                   	// #0
   1871c:	b	18708 <mpfr_fdump@@Base+0x300>
   18720:	mov	w3, w23
   18724:	add	x2, sp, #0x58
   18728:	b	185b4 <mpfr_fdump@@Base+0x1ac>
   1872c:	sub	x20, x20, #0x1
   18730:	b	186dc <mpfr_fdump@@Base+0x2d4>
   18734:	sub	x20, x20, #0x1
   18738:	ldr	x22, [x24, x19, lsl #3]
   1873c:	b	184ac <mpfr_fdump@@Base+0xa4>

0000000000018740 <mpfr_dump@@Base>:
   18740:	adrp	x2, 81000 <__gmpfr_l2b@@Base+0x200>
   18744:	mov	x1, x0
   18748:	ldr	x2, [x2, #3992]
   1874c:	ldr	x0, [x2]
   18750:	b	bbf0 <mpfr_fdump@plt>
   18754:	nop

0000000000018758 <mpfr_eq@@Base>:
   18758:	ldr	x4, [x0, #16]
   1875c:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   18760:	mov	x3, x0
   18764:	cmp	x4, x5
   18768:	b.le	188bc <mpfr_eq@@Base+0x164>
   1876c:	ldr	x6, [x1, #16]
   18770:	cmp	x6, x5
   18774:	b.le	18938 <mpfr_eq@@Base+0x1e0>
   18778:	ldr	w5, [x1, #8]
   1877c:	mov	w0, #0x0                   	// #0
   18780:	ldr	w7, [x3, #8]
   18784:	cmp	w7, w5
   18788:	ccmp	x4, x6, #0x0, eq  // eq = none
   1878c:	b.eq	18794 <mpfr_eq@@Base+0x3c>  // b.none
   18790:	ret
   18794:	ldr	x0, [x1]
   18798:	ldr	x4, [x3]
   1879c:	ldr	x11, [x3, #24]
   187a0:	sub	x4, x4, #0x1
   187a4:	sub	x3, x0, #0x1
   187a8:	asr	x0, x4, #6
   187ac:	asr	x3, x3, #6
   187b0:	add	x4, x0, #0x1
   187b4:	cmp	x0, x3
   187b8:	add	x3, x3, #0x1
   187bc:	ldr	x12, [x1, #24]
   187c0:	b.ge	187dc <mpfr_eq@@Base+0x84>  // b.tcont
   187c4:	mov	x1, x4
   187c8:	mov	x0, x11
   187cc:	mov	x4, x3
   187d0:	mov	x11, x12
   187d4:	mov	x3, x1
   187d8:	mov	x12, x0
   187dc:	cmp	x4, x3
   187e0:	b.gt	18854 <mpfr_eq@@Base+0xfc>
   187e4:	mov	x10, x4
   187e8:	mov	x0, x4
   187ec:	sub	x5, x2, #0x1
   187f0:	lsr	x5, x5, #6
   187f4:	add	x5, x5, #0x1
   187f8:	cmp	x5, x10
   187fc:	b.cs	18928 <mpfr_eq@@Base+0x1d0>  // b.hs, b.nlast
   18800:	mov	x0, x5
   18804:	sub	x1, x3, x0
   18808:	sub	x4, x4, x0
   1880c:	cmp	x2, #0x3f
   18810:	sub	x0, x0, #0x1
   18814:	add	x3, x11, x4, lsl #3
   18818:	add	x1, x12, x1, lsl #3
   1881c:	ccmp	x0, #0x0, #0x4, hi  // hi = pmore
   18820:	b.gt	18834 <mpfr_eq@@Base+0xdc>
   18824:	b	188fc <mpfr_eq@@Base+0x1a4>
   18828:	cmp	x2, #0x3f
   1882c:	ccmp	x0, #0x0, #0x4, hi  // hi = pmore
   18830:	b.le	188fc <mpfr_eq@@Base+0x1a4>
   18834:	ldr	x5, [x3, x0, lsl #3]
   18838:	sub	x2, x2, #0x40
   1883c:	ldr	x4, [x1, x0, lsl #3]
   18840:	sub	x0, x0, #0x1
   18844:	cmp	x5, x4
   18848:	b.eq	18828 <mpfr_eq@@Base+0xd0>  // b.none
   1884c:	mov	w0, #0x0                   	// #0
   18850:	ret
   18854:	cmp	x2, x3, lsl #6
   18858:	mov	x10, x3
   1885c:	lsl	x5, x3, #6
   18860:	b.ls	18978 <mpfr_eq@@Base+0x220>  // b.plast
   18864:	sub	x5, x2, x5
   18868:	sub	w6, w4, #0x1
   1886c:	cmp	x5, #0x3f
   18870:	sub	w6, w6, w3
   18874:	ccmp	w6, #0x0, #0x1, hi  // hi = pmore
   18878:	b.lt	18960 <mpfr_eq@@Base+0x208>  // b.tstop
   1887c:	sub	w0, w6, #0x1
   18880:	add	x1, x11, #0x8
   18884:	sxtw	x0, w0
   18888:	b	18898 <mpfr_eq@@Base+0x140>
   1888c:	sub	x0, x0, #0x1
   18890:	tst	w8, w9, lsr #31
   18894:	b.eq	18960 <mpfr_eq@@Base+0x208>  // b.none
   18898:	ldr	x7, [x1, x0, lsl #3]
   1889c:	sub	x5, x5, #0x40
   188a0:	cmp	x5, #0x3f
   188a4:	mvn	w9, w0
   188a8:	cset	w8, hi  // hi = pmore
   188ac:	mov	w6, w0
   188b0:	cbz	x7, 1888c <mpfr_eq@@Base+0x134>
   188b4:	mov	w0, #0x0                   	// #0
   188b8:	b	18850 <mpfr_eq@@Base+0xf8>
   188bc:	mov	x2, #0x2                   	// #2
   188c0:	mov	w0, #0x0                   	// #0
   188c4:	movk	x2, #0x8000, lsl #48
   188c8:	cmp	x4, x2
   188cc:	b.eq	18790 <mpfr_eq@@Base+0x38>  // b.none
   188d0:	ldr	x6, [x1, #16]
   188d4:	cmp	x6, x2
   188d8:	b.eq	18790 <mpfr_eq@@Base+0x38>  // b.none
   188dc:	cmp	x6, x5
   188e0:	ccmp	x4, x5, #0x0, eq  // eq = none
   188e4:	b.ne	1894c <mpfr_eq@@Base+0x1f4>  // b.any
   188e8:	ldr	w0, [x1, #8]
   188ec:	ldr	w2, [x3, #8]
   188f0:	cmp	w2, w0
   188f4:	cset	w0, eq  // eq = none
   188f8:	ret
   188fc:	ands	x2, x2, #0x3f
   18900:	ldr	x3, [x3, x0, lsl #3]
   18904:	ldr	x0, [x1, x0, lsl #3]
   18908:	b.eq	18980 <mpfr_eq@@Base+0x228>  // b.none
   1890c:	mov	w1, #0x40                  	// #64
   18910:	sub	w2, w1, w2
   18914:	lsr	x0, x0, x2
   18918:	lsr	x3, x3, x2
   1891c:	cmp	x3, x0
   18920:	cset	w0, eq  // eq = none
   18924:	ret
   18928:	lsl	x10, x10, #6
   1892c:	cmp	x2, x10
   18930:	csel	x2, x2, x10, ls  // ls = plast
   18934:	b	18804 <mpfr_eq@@Base+0xac>
   18938:	mov	x1, #0x2                   	// #2
   1893c:	mov	w0, #0x0                   	// #0
   18940:	movk	x1, #0x8000, lsl #48
   18944:	cmp	x6, x1
   18948:	b.eq	18790 <mpfr_eq@@Base+0x38>  // b.none
   1894c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   18950:	cmp	x6, x0
   18954:	ccmp	x4, x0, #0x0, eq  // eq = none
   18958:	cset	w0, eq  // eq = none
   1895c:	ret
   18960:	mov	x0, x3
   18964:	tbnz	w6, #31, 187ec <mpfr_eq@@Base+0x94>
   18968:	cmp	x5, #0x3f
   1896c:	ldr	x1, [x11, w6, sxtw #3]
   18970:	b.ls	1898c <mpfr_eq@@Base+0x234>  // b.plast
   18974:	cbnz	x1, 1884c <mpfr_eq@@Base+0xf4>
   18978:	mov	x0, x3
   1897c:	b	187ec <mpfr_eq@@Base+0x94>
   18980:	cmp	x3, x0
   18984:	cset	w0, eq  // eq = none
   18988:	ret
   1898c:	neg	w5, w5
   18990:	mov	w0, #0x0                   	// #0
   18994:	lsr	x5, x1, x5
   18998:	cbnz	x5, 18790 <mpfr_eq@@Base+0x38>
   1899c:	mov	x0, x3
   189a0:	b	187ec <mpfr_eq@@Base+0x94>
   189a4:	nop

00000000000189a8 <mpfr_exp10@@Base>:
   189a8:	mov	w3, w2
   189ac:	mov	x2, x1
   189b0:	mov	x1, #0xa                   	// #10
   189b4:	b	ca10 <mpfr_ui_pow@plt>

00000000000189b8 <mpfr_exp2@@Base>:
   189b8:	stp	x29, x30, [sp, #-192]!
   189bc:	mov	x29, sp
   189c0:	stp	x21, x22, [sp, #32]
   189c4:	mov	x22, x1
   189c8:	mov	w21, w2
   189cc:	ldr	x1, [x1, #16]
   189d0:	stp	x19, x20, [sp, #16]
   189d4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   189d8:	stp	x25, x26, [sp, #64]
   189dc:	mov	x20, x0
   189e0:	cmp	x1, x2
   189e4:	b.le	18df0 <mpfr_exp2@@Base+0x438>
   189e8:	mrs	x19, tpidr_el0
   189ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   189f0:	ldr	x1, [x0, #2512]
   189f4:	add	x0, x0, #0x9d0
   189f8:	blr	x1
   189fc:	mov	x2, #0x0                   	// #0
   18a00:	stp	x23, x24, [sp, #48]
   18a04:	add	x24, x19, x0
   18a08:	ldr	x1, [x19, x0]
   18a0c:	mov	x0, x22
   18a10:	sub	x1, x1, #0x2
   18a14:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   18a18:	cmp	w0, #0x0
   18a1c:	b.le	18f1c <mpfr_exp2@@Base+0x564>
   18a20:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18a24:	ldr	x1, [x0, #2544]
   18a28:	add	x0, x0, #0x9f0
   18a2c:	blr	x1
   18a30:	mov	x2, #0x0                   	// #0
   18a34:	ldr	x1, [x19, x0]
   18a38:	add	x25, x19, x0
   18a3c:	mov	x0, x22
   18a40:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   18a44:	tbz	w0, #31, 18f3c <mpfr_exp2@@Base+0x584>
   18a48:	ldr	x2, [x22, #16]
   18a4c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18a50:	ldr	x4, [x0, #2576]
   18a54:	add	x0, x0, #0xa10
   18a58:	blr	x4
   18a5c:	add	x23, x19, x0
   18a60:	ldr	w0, [x19, x0]
   18a64:	stp	x27, x28, [sp, #80]
   18a68:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   18a6c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   18a70:	str	w0, [sp, #108]
   18a74:	ldr	x28, [x24]
   18a78:	str	x3, [x24]
   18a7c:	ldr	x27, [x25]
   18a80:	str	x1, [x25]
   18a84:	tbz	x2, #63, 18a9c <mpfr_exp2@@Base+0xe4>
   18a88:	ldr	x0, [x20]
   18a8c:	neg	x2, x2
   18a90:	add	x0, x0, #0x1
   18a94:	cmp	x2, x0
   18a98:	b.hi	18d34 <mpfr_exp2@@Base+0x37c>  // b.pmore
   18a9c:	mov	w1, #0x1                   	// #1
   18aa0:	mov	x0, x22
   18aa4:	bl	c190 <mpfr_get_si@plt>
   18aa8:	add	x25, sp, #0x80
   18aac:	ldr	x1, [x22]
   18ab0:	mov	x24, x0
   18ab4:	mov	x0, x25
   18ab8:	bl	ca80 <mpfr_init2@plt>
   18abc:	mov	x1, x22
   18ac0:	mov	x2, x24
   18ac4:	mov	x0, x25
   18ac8:	mov	w3, #0x0                   	// #0
   18acc:	bl	c060 <mpfr_sub_si@plt>
   18ad0:	ldr	x1, [sp, #144]
   18ad4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   18ad8:	cmp	x1, x0
   18adc:	b.eq	18d9c <mpfr_exp2@@Base+0x3e4>  // b.none
   18ae0:	ldr	x26, [x20]
   18ae4:	cmp	x26, #0x1
   18ae8:	add	x1, x26, #0x5
   18aec:	b.eq	18ea8 <mpfr_exp2@@Base+0x4f0>  // b.none
   18af0:	b.le	18f58 <mpfr_exp2@@Base+0x5a0>
   18af4:	sub	x0, x26, #0x1
   18af8:	mov	w22, #0x40                  	// #64
   18afc:	clz	x0, x0
   18b00:	sub	w0, w22, w0
   18b04:	add	x22, x1, w0, sxtw
   18b08:	mov	x0, #0x40                  	// #64
   18b0c:	add	x23, sp, #0xa0
   18b10:	mov	x1, x22
   18b14:	str	x0, [sp, #120]
   18b18:	mov	x0, x23
   18b1c:	bl	ca80 <mpfr_init2@plt>
   18b20:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18b24:	ldr	x1, [x0, #2560]
   18b28:	add	x0, x0, #0xa00
   18b2c:	blr	x1
   18b30:	mov	w2, #0x2                   	// #2
   18b34:	add	x1, x19, x0
   18b38:	mov	x0, x23
   18b3c:	bl	c380 <mpfr_cache@plt>
   18b40:	mov	x2, x23
   18b44:	mov	x1, x25
   18b48:	mov	w3, #0x2                   	// #2
   18b4c:	mov	x0, x23
   18b50:	bl	bd50 <mpfr_mul@plt>
   18b54:	ldr	x3, [sp, #176]
   18b58:	mov	x1, x23
   18b5c:	mov	x0, x23
   18b60:	mov	w2, #0x0                   	// #0
   18b64:	add	x3, x3, #0x2
   18b68:	sub	x3, x22, x3
   18b6c:	str	x3, [sp, #112]
   18b70:	bl	c750 <mpfr_exp@plt>
   18b74:	ldr	x0, [sp, #176]
   18b78:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   18b7c:	ldr	x3, [sp, #112]
   18b80:	cmp	x0, x1
   18b84:	b.le	18db8 <mpfr_exp2@@Base+0x400>
   18b88:	ldr	x1, [sp, #160]
   18b8c:	cmp	w21, #0x0
   18b90:	ldr	x0, [sp, #184]
   18b94:	sub	x1, x1, #0x1
   18b98:	mov	x2, x3
   18b9c:	cinc	x3, x26, eq  // eq = none
   18ba0:	asr	x1, x1, #6
   18ba4:	add	x1, x1, #0x1
   18ba8:	bl	c370 <mpfr_round_p@plt>
   18bac:	cbz	w0, 18db8 <mpfr_exp2@@Base+0x400>
   18bb0:	ldr	w3, [sp, #168]
   18bb4:	mov	w2, w21
   18bb8:	mov	x1, x23
   18bbc:	mov	x0, x20
   18bc0:	bl	c6a0 <mpfr_set4@plt>
   18bc4:	mov	w26, w0
   18bc8:	mov	x0, x23
   18bcc:	bl	c070 <mpfr_clear@plt>
   18bd0:	mov	x0, x25
   18bd4:	bl	c070 <mpfr_clear@plt>
   18bd8:	cbz	w21, 18e20 <mpfr_exp2@@Base+0x468>
   18bdc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18be0:	ldr	x1, [x0, #2576]
   18be4:	add	x0, x0, #0xa10
   18be8:	blr	x1
   18bec:	mov	x2, x24
   18bf0:	mov	x1, x20
   18bf4:	add	x22, x19, x0
   18bf8:	mov	w3, w21
   18bfc:	str	wzr, [x19, x0]
   18c00:	mov	x0, x20
   18c04:	bl	bb90 <mpfr_mul_2si@plt>
   18c08:	mov	w1, w0
   18c0c:	cbnz	w0, 18c8c <mpfr_exp2@@Base+0x2d4>
   18c10:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18c14:	ldr	x1, [x0, #2512]
   18c18:	add	x0, x0, #0x9d0
   18c1c:	blr	x1
   18c20:	ldr	w2, [x22]
   18c24:	str	x28, [x19, x0]
   18c28:	ldr	w0, [sp, #108]
   18c2c:	ldr	x1, [x20, #16]
   18c30:	orr	w23, w0, w2
   18c34:	str	w23, [x22]
   18c38:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18c3c:	ldr	x2, [x0, #2544]
   18c40:	add	x0, x0, #0x9f0
   18c44:	blr	x2
   18c48:	str	x27, [x19, x0]
   18c4c:	cmp	x27, x1
   18c50:	ccmp	x28, x1, #0x0, ge  // ge = tcont
   18c54:	b.le	18d10 <mpfr_exp2@@Base+0x358>
   18c58:	mov	w1, w26
   18c5c:	mov	w2, w21
   18c60:	mov	x0, x20
   18c64:	bl	cb30 <mpfr_check_range@plt>
   18c68:	ldp	x23, x24, [sp, #48]
   18c6c:	mov	w26, w0
   18c70:	ldp	x27, x28, [sp, #80]
   18c74:	mov	w0, w26
   18c78:	ldp	x19, x20, [sp, #16]
   18c7c:	ldp	x21, x22, [sp, #32]
   18c80:	ldp	x25, x26, [sp, #64]
   18c84:	ldp	x29, x30, [sp], #192
   18c88:	ret
   18c8c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18c90:	ldr	x2, [x0, #2512]
   18c94:	add	x0, x0, #0x9d0
   18c98:	blr	x2
   18c9c:	ldr	w3, [x22]
   18ca0:	str	x28, [x19, x0]
   18ca4:	mov	w26, w1
   18ca8:	ldr	w0, [sp, #108]
   18cac:	ldr	x2, [x20, #16]
   18cb0:	orr	w23, w0, w3
   18cb4:	str	w23, [x22]
   18cb8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18cbc:	ldr	x3, [x0, #2544]
   18cc0:	add	x0, x0, #0x9f0
   18cc4:	blr	x3
   18cc8:	str	x27, [x19, x0]
   18ccc:	cmp	x28, x2
   18cd0:	ccmp	x27, x2, #0x1, le
   18cd4:	b.lt	18c58 <mpfr_exp2@@Base+0x2a0>  // b.tstop
   18cd8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18cdc:	ldr	x1, [x0, #2576]
   18ce0:	add	x0, x0, #0xa10
   18ce4:	blr	x1
   18ce8:	orr	w23, w23, #0x8
   18cec:	str	w23, [x19, x0]
   18cf0:	mov	w0, w26
   18cf4:	ldp	x19, x20, [sp, #16]
   18cf8:	ldp	x21, x22, [sp, #32]
   18cfc:	ldp	x23, x24, [sp, #48]
   18d00:	ldp	x25, x26, [sp, #64]
   18d04:	ldp	x27, x28, [sp, #80]
   18d08:	ldp	x29, x30, [sp], #192
   18d0c:	ret
   18d10:	cbnz	w26, 18cd8 <mpfr_exp2@@Base+0x320>
   18d14:	mov	w0, w26
   18d18:	ldp	x19, x20, [sp, #16]
   18d1c:	ldp	x21, x22, [sp, #32]
   18d20:	ldp	x23, x24, [sp, #48]
   18d24:	ldp	x25, x26, [sp, #64]
   18d28:	ldp	x27, x28, [sp, #80]
   18d2c:	ldp	x29, x30, [sp], #192
   18d30:	ret
   18d34:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   18d38:	ldr	w0, [x22, #8]
   18d3c:	mov	w4, w21
   18d40:	str	wzr, [x23]
   18d44:	ldr	x1, [x1, #3928]
   18d48:	cmp	w0, #0x0
   18d4c:	cset	w3, gt
   18d50:	mov	x0, x20
   18d54:	bl	c540 <mpfr_round_near_x@plt>
   18d58:	mov	w26, w0
   18d5c:	cbz	w0, 18a9c <mpfr_exp2@@Base+0xe4>
   18d60:	ldr	w0, [x23]
   18d64:	ldr	w2, [sp, #108]
   18d68:	ldr	x1, [x20, #16]
   18d6c:	orr	w0, w2, w0
   18d70:	str	x28, [x24]
   18d74:	str	w0, [x23]
   18d78:	cmp	x27, x1
   18d7c:	str	x27, [x25]
   18d80:	ccmp	x28, x1, #0x0, ge  // ge = tcont
   18d84:	b.gt	18c58 <mpfr_exp2@@Base+0x2a0>
   18d88:	orr	w0, w0, #0x8
   18d8c:	ldp	x27, x28, [sp, #80]
   18d90:	str	w0, [x23]
   18d94:	ldp	x23, x24, [sp, #48]
   18d98:	b	18c74 <mpfr_exp2@@Base+0x2bc>
   18d9c:	mov	x0, x20
   18da0:	mov	w3, #0x0                   	// #0
   18da4:	mov	x2, #0x0                   	// #0
   18da8:	mov	x1, #0x1                   	// #1
   18dac:	mov	w26, #0x0                   	// #0
   18db0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   18db4:	b	18bd0 <mpfr_exp2@@Base+0x218>
   18db8:	ldr	x1, [sp, #120]
   18dbc:	mov	x0, #0xfffffffffffffeff    	// #-257
   18dc0:	movk	x0, #0x7fff, lsl #48
   18dc4:	sub	x0, x0, x22
   18dc8:	cmp	x0, x1
   18dcc:	b.lt	18f04 <mpfr_exp2@@Base+0x54c>  // b.tstop
   18dd0:	add	x22, x22, x1
   18dd4:	mov	x0, x23
   18dd8:	mov	x1, x22
   18ddc:	add	x2, x22, x22, lsr #63
   18de0:	asr	x2, x2, #1
   18de4:	str	x2, [sp, #120]
   18de8:	bl	bed0 <mpfr_set_prec@plt>
   18dec:	b	18b20 <mpfr_exp2@@Base+0x168>
   18df0:	mov	x3, #0x2                   	// #2
   18df4:	movk	x3, #0x8000, lsl #48
   18df8:	cmp	x1, x3
   18dfc:	b.eq	18ed4 <mpfr_exp2@@Base+0x51c>  // b.none
   18e00:	cmp	x1, x2
   18e04:	b.eq	18eb0 <mpfr_exp2@@Base+0x4f8>  // b.none
   18e08:	mov	w3, w21
   18e0c:	mov	x2, #0x0                   	// #0
   18e10:	mov	x1, #0x1                   	// #1
   18e14:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   18e18:	mov	w26, w0
   18e1c:	b	18c74 <mpfr_exp2@@Base+0x2bc>
   18e20:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18e24:	ldr	x1, [x0, #2512]
   18e28:	add	x0, x0, #0x9d0
   18e2c:	blr	x1
   18e30:	add	x22, x19, x0
   18e34:	ldr	x0, [x19, x0]
   18e38:	sub	x0, x0, #0x1
   18e3c:	cmp	x0, x24
   18e40:	b.ne	18bdc <mpfr_exp2@@Base+0x224>  // b.any
   18e44:	ldr	x0, [x20, #16]
   18e48:	cbnz	x0, 18bdc <mpfr_exp2@@Base+0x224>
   18e4c:	mov	x0, x20
   18e50:	bl	bf00 <mpfr_powerof2_raw@plt>
   18e54:	cbz	w0, 18bdc <mpfr_exp2@@Base+0x224>
   18e58:	ldr	w0, [sp, #108]
   18e5c:	mov	w26, #0x1                   	// #1
   18e60:	ldr	x1, [x22]
   18e64:	orr	w23, w0, #0x1
   18e68:	str	x28, [x22]
   18e6c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18e70:	ldr	x2, [x0, #2576]
   18e74:	add	x0, x0, #0xa10
   18e78:	blr	x2
   18e7c:	str	w23, [x19, x0]
   18e80:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18e84:	ldr	x2, [x0, #2544]
   18e88:	add	x0, x0, #0x9f0
   18e8c:	blr	x2
   18e90:	str	x27, [x19, x0]
   18e94:	str	x1, [x20, #16]
   18e98:	cmp	x27, x1
   18e9c:	ccmp	x28, x1, #0x0, ge  // ge = tcont
   18ea0:	b.gt	18c58 <mpfr_exp2@@Base+0x2a0>
   18ea4:	b	18cd8 <mpfr_exp2@@Base+0x320>
   18ea8:	mov	x22, #0x6                   	// #6
   18eac:	b	18b08 <mpfr_exp2@@Base+0x150>
   18eb0:	ldr	w3, [x22, #8]
   18eb4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   18eb8:	mov	w2, #0x1                   	// #1
   18ebc:	mov	w26, #0x0                   	// #0
   18ec0:	cmp	w3, #0x0
   18ec4:	str	w2, [x20, #8]
   18ec8:	csel	x1, x1, x0, gt
   18ecc:	str	x1, [x20, #16]
   18ed0:	b	18c74 <mpfr_exp2@@Base+0x2bc>
   18ed4:	mrs	x2, tpidr_el0
   18ed8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   18edc:	ldr	x3, [x0, #2576]
   18ee0:	add	x0, x0, #0xa10
   18ee4:	blr	x3
   18ee8:	add	x0, x2, x0
   18eec:	str	x1, [x20, #16]
   18ef0:	mov	w26, #0x0                   	// #0
   18ef4:	ldr	w1, [x0]
   18ef8:	orr	w1, w1, #0x4
   18efc:	str	w1, [x0]
   18f00:	b	18c74 <mpfr_exp2@@Base+0x2bc>
   18f04:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   18f08:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   18f0c:	add	x2, x2, #0x470
   18f10:	add	x0, x0, #0x468
   18f14:	mov	w1, #0x86                  	// #134
   18f18:	bl	cb40 <mpfr_assert_fail@plt>
   18f1c:	cmp	w21, #0x0
   18f20:	mov	w2, #0x1                   	// #1
   18f24:	mov	x0, x20
   18f28:	csel	w1, w21, w2, ne  // ne = any
   18f2c:	bl	c3c0 <mpfr_underflow@plt>
   18f30:	mov	w26, w0
   18f34:	ldp	x23, x24, [sp, #48]
   18f38:	b	18c74 <mpfr_exp2@@Base+0x2bc>
   18f3c:	mov	w1, w21
   18f40:	mov	x0, x20
   18f44:	mov	w2, #0x1                   	// #1
   18f48:	bl	bf40 <mpfr_overflow@plt>
   18f4c:	mov	w26, w0
   18f50:	ldp	x23, x24, [sp, #48]
   18f54:	b	18c74 <mpfr_exp2@@Base+0x2bc>
   18f58:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   18f5c:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   18f60:	add	x2, x2, #0x458
   18f64:	add	x0, x0, #0x468
   18f68:	mov	w1, #0x73                  	// #115
   18f6c:	bl	cb40 <mpfr_assert_fail@plt>
   18f70:	stp	x29, x30, [sp, #-192]!
   18f74:	cmp	w3, #0x3e
   18f78:	mov	x29, sp
   18f7c:	str	x0, [sp, #184]
   18f80:	ldr	x0, [x0]
   18f84:	stp	x19, x20, [sp, #16]
   18f88:	stp	x21, x22, [sp, #32]
   18f8c:	stp	x23, x24, [sp, #48]
   18f90:	stp	x25, x26, [sp, #64]
   18f94:	stp	x27, x28, [sp, #80]
   18f98:	str	x4, [sp, #144]
   18f9c:	str	x0, [sp, #160]
   18fa0:	b.hi	19418 <mpfr_exp2@@Base+0xa60>  // b.pmore
   18fa4:	add	w26, w3, #0x1
   18fa8:	sxtw	x21, w3
   18fac:	add	x21, x21, #0x1
   18fb0:	mov	w19, w3
   18fb4:	lsl	w26, w26, #1
   18fb8:	mov	x22, x2
   18fbc:	add	x3, x4, x21, lsl #4
   18fc0:	mov	x24, x1
   18fc4:	add	x2, x4, w26, sxtw #4
   18fc8:	mov	x20, x5
   18fcc:	mov	x0, x24
   18fd0:	add	x28, x5, x21, lsl #3
   18fd4:	mov	x1, #0x0                   	// #0
   18fd8:	str	x2, [sp, #128]
   18fdc:	str	x3, [sp, #152]
   18fe0:	bl	ba90 <__gmpz_scan1@plt>
   18fe4:	mov	x23, x0
   18fe8:	tbnz	x0, #63, 19400 <mpfr_exp2@@Base+0xa48>
   18fec:	mov	x2, x0
   18ff0:	mov	x1, x24
   18ff4:	mov	x0, x24
   18ff8:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   18ffc:	ldr	x0, [sp, #128]
   19000:	mov	x1, x24
   19004:	bl	bfa0 <__gmpz_set@plt>
   19008:	sub	x0, x22, x23
   1900c:	str	x0, [sp, #112]
   19010:	cmp	w19, #0x1
   19014:	b.le	1904c <mpfr_exp2@@Base+0x694>
   19018:	sub	w22, w19, #0x2
   1901c:	mov	x0, #0x20                  	// #32
   19020:	ldr	x1, [sp, #128]
   19024:	add	x22, x0, w22, uxtw #4
   19028:	add	x24, x1, #0x10
   1902c:	add	x22, x1, x22
   19030:	sub	x2, x24, #0x10
   19034:	mov	x0, x24
   19038:	mov	x1, x2
   1903c:	add	x24, x24, #0x10
   19040:	bl	bff0 <__gmpz_mul@plt>
   19044:	cmp	x22, x24
   19048:	b.ne	19030 <mpfr_exp2@@Base+0x678>  // b.any
   1904c:	ldr	x0, [sp, #144]
   19050:	mov	x1, #0x1                   	// #1
   19054:	mov	x24, #0x1                   	// #1
   19058:	mov	x23, #0x0                   	// #0
   1905c:	bl	bcb0 <__gmpz_set_ui@plt>
   19060:	str	wzr, [sp, #108]
   19064:	ldr	x0, [sp, #152]
   19068:	mov	x1, #0x1                   	// #1
   1906c:	bl	bcb0 <__gmpz_set_ui@plt>
   19070:	str	xzr, [x20]
   19074:	ldr	x0, [sp, #160]
   19078:	str	xzr, [x20, x21, lsl #3]
   1907c:	str	x24, [sp, #120]
   19080:	mov	x2, #0x0                   	// #0
   19084:	cmp	x0, #0x0
   19088:	lsl	x0, x24, x19
   1908c:	str	x0, [sp, #168]
   19090:	ccmp	x0, x24, #0x0, gt
   19094:	mov	x21, #0xfffffffffffffff8    	// #-8
   19098:	b.ls	192f0 <mpfr_exp2@@Base+0x938>  // b.plast
   1909c:	nop
   190a0:	ldr	w24, [sp, #108]
   190a4:	ldr	x0, [sp, #120]
   190a8:	add	w8, w24, #0x1
   190ac:	str	x0, [sp, #176]
   190b0:	add	x22, x0, #0x1
   190b4:	sxtw	x0, w8
   190b8:	str	x2, [sp, #136]
   190bc:	mov	x1, x22
   190c0:	ldr	x2, [sp, #152]
   190c4:	str	xzr, [x28, x0, lsl #3]
   190c8:	ldr	x25, [sp, #144]
   190cc:	lsl	x19, x0, #4
   190d0:	add	x23, x2, x19
   190d4:	str	w8, [sp, #96]
   190d8:	add	x0, x25, x19
   190dc:	str	x22, [sp, #120]
   190e0:	bl	bcb0 <__gmpz_set_ui@plt>
   190e4:	mov	x0, x23
   190e8:	mov	x1, x22
   190ec:	bl	bcb0 <__gmpz_set_ui@plt>
   190f0:	ldr	w8, [sp, #96]
   190f4:	ldr	x2, [sp, #136]
   190f8:	tbnz	w22, #0, 19210 <mpfr_exp2@@Base+0x858>
   190fc:	sub	x4, x19, #0x10
   19100:	sxtw	x27, w24
   19104:	ldr	x26, [sp, #128]
   19108:	add	x25, x25, x4
   1910c:	mov	x19, x22
   19110:	mov	x2, x26
   19114:	mov	x1, x23
   19118:	mov	x0, x23
   1911c:	bl	bff0 <__gmpz_mul@plt>
   19120:	add	x10, x25, #0x10
   19124:	sub	x22, x23, #0x10
   19128:	mov	x2, x10
   1912c:	mov	x1, x22
   19130:	mov	x0, x22
   19134:	str	x10, [sp, #96]
   19138:	bl	bff0 <__gmpz_mul@plt>
   1913c:	lsr	x19, x19, #1
   19140:	ldr	w0, [sp, #108]
   19144:	mov	x1, x22
   19148:	ldr	x3, [sp, #112]
   1914c:	sub	w2, w0, w27
   19150:	mov	x0, x22
   19154:	add	x26, x26, #0x10
   19158:	lsl	x24, x3, x2
   1915c:	mov	x2, x24
   19160:	bl	c200 <__gmpz_mul_2exp@plt>
   19164:	mov	x2, x23
   19168:	mov	x1, x22
   1916c:	mov	x0, x22
   19170:	bl	c9c0 <__gmpz_add@plt>
   19174:	ldr	x10, [sp, #96]
   19178:	mov	x1, x25
   1917c:	mov	x0, x25
   19180:	mov	x23, x22
   19184:	mov	x2, x10
   19188:	sub	x25, x25, #0x10
   1918c:	bl	bff0 <__gmpz_mul@plt>
   19190:	ldr	w0, [x25, #36]
   19194:	lsl	x10, x27, #3
   19198:	ldur	w2, [x26, #-12]
   1919c:	cmp	w0, #0x0
   191a0:	cneg	w0, w0, lt  // lt = tstop
   191a4:	cmp	w2, #0x0
   191a8:	ldr	x1, [x28, x27, lsl #3]
   191ac:	cneg	w2, w2, lt  // lt = tstop
   191b0:	ldr	x13, [x25, #40]
   191b4:	add	x12, x21, w0, sxtw #3
   191b8:	ldur	x11, [x26, #-8]
   191bc:	add	x1, x1, #0x1
   191c0:	add	x8, x21, w2, sxtw #3
   191c4:	str	x1, [x28, x27, lsl #3]
   191c8:	sbfiz	x1, x2, #6, #32
   191cc:	sbfiz	x0, x0, #6, #32
   191d0:	ldr	x2, [x13, x12]
   191d4:	ldr	x8, [x11, x8]
   191d8:	clz	x2, x2
   191dc:	sub	x2, x0, x2
   191e0:	clz	x0, x8
   191e4:	add	x2, x2, x24
   191e8:	sub	x0, x1, x0
   191ec:	mov	w8, w27
   191f0:	ldr	x1, [x20, x27, lsl #3]
   191f4:	sub	x2, x2, x0
   191f8:	sub	x2, x2, #0x1
   191fc:	sub	x27, x27, #0x1
   19200:	add	x2, x2, x1
   19204:	dup	v0.2d, x2
   19208:	str	q0, [x20, x10]
   1920c:	tbz	w19, #0, 19110 <mpfr_exp2@@Base+0x758>
   19210:	ldp	x0, x1, [sp, #160]
   19214:	cmp	x0, x2
   19218:	ldr	x0, [sp, #120]
   1921c:	ccmp	x0, x1, #0x2, gt
   19220:	b.cs	1922c <mpfr_exp2@@Base+0x874>  // b.hs, b.nlast
   19224:	str	w8, [sp, #108]
   19228:	b	190a0 <mpfr_exp2@@Base+0x6e8>
   1922c:	ldr	x1, [sp, #112]
   19230:	cmp	w8, #0x0
   19234:	ldr	x0, [sp, #176]
   19238:	mul	x23, x0, x1
   1923c:	b.le	192f0 <mpfr_exp2@@Base+0x938>
   19240:	ldr	x0, [sp, #152]
   19244:	sbfiz	x5, x8, #4, #32
   19248:	sub	w1, w8, #0x1
   1924c:	add	x24, x28, w8, sxtw #3
   19250:	sub	x21, x0, #0x10
   19254:	add	x22, x0, x5
   19258:	ldr	x0, [sp, #144]
   1925c:	sub	x1, x5, w1, uxtw #4
   19260:	add	x26, x1, x21
   19264:	mov	x19, #0x0                   	// #0
   19268:	add	x20, x0, x5
   1926c:	mov	x25, #0x1                   	// #1
   19270:	ldur	x2, [x24, #-8]
   19274:	sub	x21, x22, #0x10
   19278:	ldr	x3, [sp, #128]
   1927c:	mov	x1, x22
   19280:	mov	x0, x22
   19284:	sub	x28, x20, #0x10
   19288:	add	x2, x3, x2, lsl #4
   1928c:	bl	bff0 <__gmpz_mul@plt>
   19290:	mov	x2, x20
   19294:	mov	x1, x21
   19298:	mov	x0, x21
   1929c:	bl	bff0 <__gmpz_mul@plt>
   192a0:	ldr	x2, [x24], #-8
   192a4:	mov	x1, x21
   192a8:	mov	x0, x21
   192ac:	lsl	x2, x25, x2
   192b0:	add	x19, x19, x2
   192b4:	ldr	x2, [sp, #112]
   192b8:	mul	x2, x19, x2
   192bc:	bl	c200 <__gmpz_mul_2exp@plt>
   192c0:	mov	x2, x22
   192c4:	mov	x1, x21
   192c8:	mov	x0, x21
   192cc:	bl	c9c0 <__gmpz_add@plt>
   192d0:	mov	x2, x20
   192d4:	mov	x1, x28
   192d8:	mov	x0, x28
   192dc:	bl	bff0 <__gmpz_mul@plt>
   192e0:	mov	x22, x21
   192e4:	cmp	x26, x21
   192e8:	mov	x20, x28
   192ec:	b.ne	19270 <mpfr_exp2@@Base+0x8b8>  // b.any
   192f0:	ldp	x4, x2, [sp, #152]
   192f4:	mov	x1, #0xfffffffffffffff8    	// #-8
   192f8:	ldr	w0, [x4, #4]
   192fc:	lsl	x2, x2, #1
   19300:	ldr	x3, [x4, #8]
   19304:	cmp	w0, #0x0
   19308:	cneg	w0, w0, lt  // lt = tstop
   1930c:	add	x1, x1, w0, sxtw #3
   19310:	sbfiz	x0, x0, #6, #32
   19314:	ldr	x1, [x3, x1]
   19318:	clz	x1, x1
   1931c:	sub	x0, x0, x1
   19320:	subs	x19, x0, x2
   19324:	b.mi	193d8 <mpfr_exp2@@Base+0xa20>  // b.first
   19328:	mov	x2, x19
   1932c:	mov	x1, x4
   19330:	mov	x0, x4
   19334:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   19338:	ldr	x3, [sp, #144]
   1933c:	mov	x1, #0xfffffffffffffff8    	// #-8
   19340:	ldr	w0, [x3, #4]
   19344:	ldr	x2, [x3, #8]
   19348:	cmp	w0, #0x0
   1934c:	cneg	w0, w0, lt  // lt = tstop
   19350:	add	x1, x1, w0, sxtw #3
   19354:	sbfiz	x0, x0, #6, #32
   19358:	ldr	x1, [x2, x1]
   1935c:	clz	x1, x1
   19360:	sub	x0, x0, x1
   19364:	ldr	x1, [sp, #160]
   19368:	sub	x2, x0, x1
   1936c:	sub	x19, x19, x2
   19370:	cmp	x2, #0x0
   19374:	b.le	193ec <mpfr_exp2@@Base+0xa34>
   19378:	mov	x1, x3
   1937c:	mov	x0, x3
   19380:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   19384:	ldp	x2, x20, [sp, #144]
   19388:	mov	x1, x20
   1938c:	mov	x0, x20
   19390:	bl	bb30 <__gmpz_tdiv_q@plt>
   19394:	mov	x1, x20
   19398:	mov	w2, #0x3                   	// #3
   1939c:	ldr	x20, [sp, #184]
   193a0:	mov	x0, x20
   193a4:	bl	c240 <mpfr_set_z@plt>
   193a8:	ldr	x0, [x20, #16]
   193ac:	mov	x1, x20
   193b0:	ldp	x21, x22, [sp, #32]
   193b4:	add	x19, x19, x0
   193b8:	sub	x20, x19, x23
   193bc:	ldp	x23, x24, [sp, #48]
   193c0:	ldp	x25, x26, [sp, #64]
   193c4:	ldp	x27, x28, [sp, #80]
   193c8:	str	x20, [x1, #16]
   193cc:	ldp	x19, x20, [sp, #16]
   193d0:	ldp	x29, x30, [sp], #192
   193d4:	ret
   193d8:	sub	x2, x2, x0
   193dc:	ldr	x0, [sp, #152]
   193e0:	mov	x1, x0
   193e4:	bl	c200 <__gmpz_mul_2exp@plt>
   193e8:	b	19338 <mpfr_exp2@@Base+0x980>
   193ec:	sub	x2, x1, x0
   193f0:	ldr	x0, [sp, #144]
   193f4:	mov	x1, x0
   193f8:	bl	c200 <__gmpz_mul_2exp@plt>
   193fc:	b	19384 <mpfr_exp2@@Base+0x9cc>
   19400:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   19404:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   19408:	add	x2, x2, #0x4e8
   1940c:	add	x0, x0, #0x4e0
   19410:	mov	w1, #0x3d                  	// #61
   19414:	bl	cb40 <mpfr_assert_fail@plt>
   19418:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1941c:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   19420:	add	x2, x2, #0x4b8
   19424:	add	x0, x0, #0x4e0
   19428:	mov	w1, #0x34                  	// #52
   1942c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000019430 <mpfr_exp_3@@Base>:
   19430:	stp	x29, x30, [sp, #-336]!
   19434:	mrs	x7, tpidr_el0
   19438:	mov	x4, x0
   1943c:	mov	x29, sp
   19440:	stp	x21, x22, [sp, #32]
   19444:	mov	x21, x1
   19448:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1944c:	ldr	x1, [x0, #2576]
   19450:	add	x0, x0, #0xa10
   19454:	blr	x1
   19458:	ldr	w0, [x7, x0]
   1945c:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   19460:	str	w0, [sp, #204]
   19464:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   19468:	stp	x19, x20, [sp, #16]
   1946c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19470:	ldr	x1, [x0, #2512]
   19474:	add	x0, x0, #0x9d0
   19478:	blr	x1
   1947c:	add	x5, x7, x0
   19480:	ldr	x0, [x7, x0]
   19484:	stp	x23, x24, [sp, #48]
   19488:	stp	x25, x26, [sp, #64]
   1948c:	stp	x27, x28, [sp, #80]
   19490:	stp	x4, x7, [sp, #168]
   19494:	str	x0, [sp, #208]
   19498:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1949c:	ldr	x8, [x0, #2544]
   194a0:	add	x0, x0, #0x9f0
   194a4:	blr	x8
   194a8:	ldr	x1, [x21]
   194ac:	str	x6, [x5]
   194b0:	ldr	x4, [x7, x0]
   194b4:	str	x3, [x7, x0]
   194b8:	str	w2, [sp, #188]
   194bc:	cmp	x1, #0x1
   194c0:	str	x4, [sp, #216]
   194c4:	b.eq	19a2c <mpfr_exp_3@@Base+0x5fc>  // b.none
   194c8:	b.le	19a9c <mpfr_exp_3@@Base+0x66c>
   194cc:	sub	x0, x1, #0x1
   194d0:	mov	w2, #0x3a                  	// #58
   194d4:	clz	x0, x0
   194d8:	subs	w0, w2, w0
   194dc:	csel	w0, w0, wzr, pl  // pl = nfrst
   194e0:	str	w0, [sp, #184]
   194e4:	sxtw	x20, w0
   194e8:	ldr	x2, [x21, #16]
   194ec:	add	x26, sp, #0x110
   194f0:	mov	x0, x26
   194f4:	str	x2, [sp, #104]
   194f8:	mov	x22, x2
   194fc:	mov	x19, #0x0                   	// #0
   19500:	bl	ca80 <mpfr_init2@plt>
   19504:	str	xzr, [sp, #144]
   19508:	ldr	w3, [x21, #8]
   1950c:	mov	w2, #0x3                   	// #3
   19510:	mov	x0, x26
   19514:	mov	x1, x21
   19518:	bl	c6a0 <mpfr_set4@plt>
   1951c:	mov	x2, x22
   19520:	cmp	x22, #0x0
   19524:	b.le	19548 <mpfr_exp_3@@Base+0x118>
   19528:	mov	x1, x21
   1952c:	mov	x0, x26
   19530:	mov	w3, #0x0                   	// #0
   19534:	bl	c8f0 <mpfr_div_2ui@plt>
   19538:	mov	x19, x22
   1953c:	str	x22, [sp, #144]
   19540:	ldr	x0, [sp, #288]
   19544:	str	x0, [sp, #104]
   19548:	ldr	x0, [sp, #168]
   1954c:	ldr	x0, [x0]
   19550:	str	x0, [sp, #112]
   19554:	add	x0, x0, x20
   19558:	cmp	x0, #0x1
   1955c:	b.eq	19a38 <mpfr_exp_3@@Base+0x608>  // b.none
   19560:	b.le	19abc <mpfr_exp_3@@Base+0x68c>
   19564:	sub	x0, x0, #0x1
   19568:	mov	w1, #0x40                  	// #64
   1956c:	clz	x0, x0
   19570:	sub	w0, w1, w0
   19574:	ldr	x1, [sp, #112]
   19578:	add	x0, x1, w0, sxtw
   1957c:	str	x0, [sp, #112]
   19580:	add	x21, x0, #0x22
   19584:	add	x27, sp, #0xf0
   19588:	ldr	x0, [sp, #144]
   1958c:	add	x20, sp, #0x130
   19590:	add	x22, sp, #0xe0
   19594:	add	x21, x21, x0
   19598:	mov	x0, x27
   1959c:	mov	x1, x21
   195a0:	bl	ca80 <mpfr_init2@plt>
   195a4:	mov	x1, x21
   195a8:	mov	x0, x20
   195ac:	bl	ca80 <mpfr_init2@plt>
   195b0:	sub	w1, w19, #0x1
   195b4:	sub	x0, x19, #0x1
   195b8:	str	x0, [sp, #192]
   195bc:	mov	x0, x22
   195c0:	str	w1, [sp, #200]
   195c4:	bl	bf90 <mpfr_mpz_init@plt>
   195c8:	ldr	x1, [sp, #104]
   195cc:	mov	x0, #0x60                  	// #96
   195d0:	cmp	x21, #0x1
   195d4:	sub	x0, x0, x1
   195d8:	str	x0, [sp, #160]
   195dc:	mov	x0, #0x40                  	// #64
   195e0:	str	x0, [sp, #136]
   195e4:	b.eq	19844 <mpfr_exp_3@@Base+0x414>  // b.none
   195e8:	b.le	1992c <mpfr_exp_3@@Base+0x4fc>
   195ec:	sub	x19, x21, #0x1
   195f0:	mov	w0, #0x3c                  	// #60
   195f4:	clz	x19, x19
   195f8:	mov	w21, #0x3a                  	// #58
   195fc:	sub	w0, w0, w19
   19600:	mov	w28, #0x3b                  	// #59
   19604:	sub	w21, w21, w19
   19608:	sub	w28, w28, w19
   1960c:	lsl	w1, w0, #1
   19610:	add	w23, w1, w0
   19614:	str	w23, [sp, #132]
   19618:	sbfiz	x0, x1, #3, #32
   1961c:	str	x0, [sp, #120]
   19620:	sbfiz	x0, x23, #4, #32
   19624:	str	x0, [sp, #152]
   19628:	bl	ccf0 <mpfr_allocate_func@plt>
   1962c:	mov	w1, w23
   19630:	cmp	w23, #0x0
   19634:	mov	x23, x0
   19638:	b.le	19664 <mpfr_exp_3@@Base+0x234>
   1963c:	sub	w19, w1, #0x1
   19640:	add	x0, x0, #0x10
   19644:	mov	x24, x23
   19648:	add	x19, x0, w19, uxtw #4
   1964c:	nop
   19650:	mov	x0, x24
   19654:	add	x24, x24, #0x10
   19658:	bl	bf90 <mpfr_mpz_init@plt>
   1965c:	cmp	x19, x24
   19660:	b.ne	19650 <mpfr_exp_3@@Base+0x220>  // b.any
   19664:	ldr	x0, [sp, #120]
   19668:	mov	w19, #0x20                  	// #32
   1966c:	bl	ccf0 <mpfr_allocate_func@plt>
   19670:	mov	x24, x0
   19674:	mov	x1, x26
   19678:	mov	x0, x22
   1967c:	mov	w2, #0x0                   	// #0
   19680:	bl	c9d0 <mpfr_extract@plt>
   19684:	ldr	x2, [sp, #160]
   19688:	mov	x5, x24
   1968c:	mov	x4, x23
   19690:	mov	w3, w28
   19694:	mov	x1, x22
   19698:	mov	x0, x20
   1969c:	bl	18f70 <mpfr_exp2@@Base+0x5b8>
   196a0:	mov	x1, x20
   196a4:	mov	x0, x20
   196a8:	mov	w2, #0x3                   	// #3
   196ac:	bl	c400 <mpfr_sqr@plt>
   196b0:	subs	w19, w19, #0x1
   196b4:	b.ne	196a0 <mpfr_exp_3@@Base+0x270>  // b.any
   196b8:	ldr	w0, [sp, #184]
   196bc:	add	w28, w21, #0x1
   196c0:	mov	w25, #0x1                   	// #1
   196c4:	mov	x19, #0x80                  	// #128
   196c8:	cmp	w0, w21
   196cc:	csel	w21, w0, w21, le
   196d0:	cmp	w21, #0x0
   196d4:	b.le	1973c <mpfr_exp_3@@Base+0x30c>
   196d8:	mov	x0, x22
   196dc:	mov	w2, w25
   196e0:	mov	x1, x26
   196e4:	bl	c9d0 <mpfr_extract@plt>
   196e8:	ldr	w0, [sp, #228]
   196ec:	cbz	w0, 19724 <mpfr_exp_3@@Base+0x2f4>
   196f0:	ldr	x0, [sp, #104]
   196f4:	mov	x5, x24
   196f8:	mov	x4, x23
   196fc:	sub	w3, w28, w25
   19700:	sub	x2, x19, x0
   19704:	mov	x1, x22
   19708:	mov	x0, x27
   1970c:	bl	18f70 <mpfr_exp2@@Base+0x5b8>
   19710:	mov	x2, x27
   19714:	mov	x1, x20
   19718:	mov	x0, x20
   1971c:	mov	w3, #0x3                   	// #3
   19720:	bl	bd50 <mpfr_mul@plt>
   19724:	cmp	w25, #0x38
   19728:	b.eq	19874 <mpfr_exp_3@@Base+0x444>  // b.none
   1972c:	add	w25, w25, #0x1
   19730:	lsl	x19, x19, #1
   19734:	cmp	w21, w25
   19738:	b.ge	196d8 <mpfr_exp_3@@Base+0x2a8>  // b.tcont
   1973c:	ldr	w0, [sp, #132]
   19740:	cmp	w0, #0x0
   19744:	b.le	19774 <mpfr_exp_3@@Base+0x344>
   19748:	ldr	w0, [sp, #132]
   1974c:	add	x19, x23, #0x10
   19750:	mov	x21, x23
   19754:	sub	w1, w0, #0x1
   19758:	add	x19, x19, w1, uxtw #4
   1975c:	nop
   19760:	mov	x0, x21
   19764:	add	x21, x21, #0x10
   19768:	bl	c170 <mpfr_mpz_clear@plt>
   1976c:	cmp	x19, x21
   19770:	b.ne	19760 <mpfr_exp_3@@Base+0x330>  // b.any
   19774:	ldr	x1, [sp, #152]
   19778:	mov	x0, x23
   1977c:	bl	cc20 <mpfr_free_func@plt>
   19780:	ldr	x1, [sp, #120]
   19784:	mov	x0, x24
   19788:	bl	cc20 <mpfr_free_func@plt>
   1978c:	ldr	x0, [sp, #144]
   19790:	cbnz	x0, 1988c <mpfr_exp_3@@Base+0x45c>
   19794:	ldr	x0, [sp, #320]
   19798:	mov	x23, x20
   1979c:	mov	w19, #0x0                   	// #0
   197a0:	mov	x24, #0x8000000000000003    	// #-9223372036854775805
   197a4:	cmp	x0, x24
   197a8:	b.le	197e4 <mpfr_exp_3@@Base+0x3b4>
   197ac:	ldr	x2, [sp, #168]
   197b0:	ldr	w0, [sp, #188]
   197b4:	ldr	x1, [x23]
   197b8:	cmp	w0, #0x0
   197bc:	ldr	x3, [x2]
   197c0:	sub	x1, x1, #0x1
   197c4:	ldr	x0, [x23, #24]
   197c8:	asr	x1, x1, #6
   197cc:	ldr	x2, [sp, #112]
   197d0:	cset	w21, eq  // eq = none
   197d4:	add	x1, x1, #0x1
   197d8:	cinc	x3, x3, eq  // eq = none
   197dc:	bl	c370 <mpfr_round_p@plt>
   197e0:	cbnz	w0, 19944 <mpfr_exp_3@@Base+0x514>
   197e4:	ldr	x1, [sp, #112]
   197e8:	mov	x0, #0xfffffffffffffeff    	// #-257
   197ec:	movk	x0, #0x7fff, lsl #48
   197f0:	sub	x0, x0, x1
   197f4:	ldr	x1, [sp, #136]
   197f8:	cmp	x0, x1
   197fc:	b.lt	19914 <mpfr_exp_3@@Base+0x4e4>  // b.tstop
   19800:	ldr	x0, [sp, #112]
   19804:	add	x1, x0, x1
   19808:	str	x1, [sp, #112]
   1980c:	add	x21, x1, #0x22
   19810:	mov	x0, x27
   19814:	add	x2, x1, x1, lsr #63
   19818:	ldr	x1, [sp, #144]
   1981c:	asr	x2, x2, #1
   19820:	str	x2, [sp, #136]
   19824:	add	x21, x21, x1
   19828:	mov	x1, x21
   1982c:	bl	bed0 <mpfr_set_prec@plt>
   19830:	mov	x1, x21
   19834:	mov	x0, x20
   19838:	bl	bed0 <mpfr_set_prec@plt>
   1983c:	cmp	x21, #0x1
   19840:	b.ne	195e8 <mpfr_exp_3@@Base+0x1b8>  // b.any
   19844:	mov	x0, #0xffffffffffffff40    	// #-192
   19848:	bl	ccf0 <mpfr_allocate_func@plt>
   1984c:	mov	x23, x0
   19850:	mov	x0, #0xffffffffffffffc0    	// #-64
   19854:	str	x0, [sp, #120]
   19858:	mov	x0, #0xffffffffffffff40    	// #-192
   1985c:	mov	w28, #0xfffffffb            	// #-5
   19860:	mov	w21, #0xfffffffa            	// #-6
   19864:	str	x0, [sp, #152]
   19868:	mov	w0, #0xfffffff4            	// #-12
   1986c:	str	w0, [sp, #132]
   19870:	b	19664 <mpfr_exp_3@@Base+0x234>
   19874:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   19878:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1987c:	add	x2, x2, #0x558
   19880:	add	x0, x0, #0x4e0
   19884:	mov	w1, #0xf5                  	// #245
   19888:	bl	cb40 <mpfr_assert_fail@plt>
   1988c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19890:	ldr	x1, [x0, #2576]
   19894:	add	x0, x0, #0xa10
   19898:	blr	x1
   1989c:	mov	w19, #0x0                   	// #0
   198a0:	ldr	x1, [sp, #176]
   198a4:	str	wzr, [x1, x0]
   198a8:	ldr	x0, [sp, #192]
   198ac:	cmp	x0, #0x0
   198b0:	b.le	198d4 <mpfr_exp_3@@Base+0x4a4>
   198b4:	ldr	w21, [sp, #200]
   198b8:	add	w19, w19, #0x1
   198bc:	mov	x1, x20
   198c0:	mov	x0, x20
   198c4:	mov	w2, #0x3                   	// #3
   198c8:	bl	c400 <mpfr_sqr@plt>
   198cc:	cmp	w19, w21
   198d0:	b.ne	198b8 <mpfr_exp_3@@Base+0x488>  // b.any
   198d4:	mov	x1, x20
   198d8:	mov	x0, x27
   198dc:	mov	w2, #0x3                   	// #3
   198e0:	bl	c400 <mpfr_sqr@plt>
   198e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   198e8:	ldr	x1, [x0, #2576]
   198ec:	add	x0, x0, #0xa10
   198f0:	blr	x1
   198f4:	ldr	x1, [sp, #176]
   198f8:	ldr	w0, [x1, x0]
   198fc:	tbnz	w0, #1, 19b20 <mpfr_exp_3@@Base+0x6f0>
   19900:	tbnz	w0, #0, 199ec <mpfr_exp_3@@Base+0x5bc>
   19904:	mov	x23, x27
   19908:	mov	w19, #0x0                   	// #0
   1990c:	ldr	x0, [sp, #256]
   19910:	b	197a0 <mpfr_exp_3@@Base+0x370>
   19914:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   19918:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1991c:	add	x2, x2, #0x580
   19920:	add	x0, x0, #0x4e0
   19924:	mov	w1, #0x146                 	// #326
   19928:	bl	cb40 <mpfr_assert_fail@plt>
   1992c:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   19930:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   19934:	add	x2, x2, #0x548
   19938:	add	x0, x0, #0x4e0
   1993c:	mov	w1, #0xd8                  	// #216
   19940:	bl	cb40 <mpfr_assert_fail@plt>
   19944:	ldr	w3, [x23, #8]
   19948:	mov	x1, x23
   1994c:	ldr	w2, [sp, #188]
   19950:	ldr	x0, [sp, #168]
   19954:	bl	c6a0 <mpfr_set4@plt>
   19958:	mov	w23, w0
   1995c:	cbnz	w19, 19a40 <mpfr_exp_3@@Base+0x610>
   19960:	mov	x0, x22
   19964:	bl	c170 <mpfr_mpz_clear@plt>
   19968:	mov	x0, x20
   1996c:	bl	c070 <mpfr_clear@plt>
   19970:	mov	x0, x27
   19974:	bl	c070 <mpfr_clear@plt>
   19978:	mov	x0, x26
   1997c:	bl	c070 <mpfr_clear@plt>
   19980:	ldr	w2, [sp, #204]
   19984:	ldp	x19, x20, [sp, #16]
   19988:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1998c:	ldr	x1, [x0, #2576]
   19990:	add	x0, x0, #0xa10
   19994:	blr	x1
   19998:	ldr	x1, [sp, #176]
   1999c:	ldp	x21, x22, [sp, #32]
   199a0:	ldp	x25, x26, [sp, #64]
   199a4:	ldp	x27, x28, [sp, #80]
   199a8:	str	w2, [x1, x0]
   199ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   199b0:	ldr	x2, [x0, #2512]
   199b4:	add	x0, x0, #0x9d0
   199b8:	blr	x2
   199bc:	ldr	x2, [sp, #208]
   199c0:	str	x2, [x1, x0]
   199c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   199c8:	ldr	x2, [x0, #2544]
   199cc:	add	x0, x0, #0x9f0
   199d0:	blr	x2
   199d4:	ldr	x2, [sp, #216]
   199d8:	str	x2, [x1, x0]
   199dc:	mov	w0, w23
   199e0:	ldp	x23, x24, [sp, #48]
   199e4:	ldp	x29, x30, [sp], #336
   199e8:	ret
   199ec:	mov	w3, #0x3                   	// #3
   199f0:	mov	x1, x20
   199f4:	mov	x2, #0x1                   	// #1
   199f8:	mov	x0, x20
   199fc:	bl	c2c0 <mpfr_mul_2ui@plt>
   19a00:	mov	x1, x20
   19a04:	mov	x0, x27
   19a08:	mov	w2, #0x3                   	// #3
   19a0c:	bl	c400 <mpfr_sqr@plt>
   19a10:	ldr	x0, [sp, #256]
   19a14:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   19a18:	cmp	x0, x1
   19a1c:	b.eq	19b44 <mpfr_exp_3@@Base+0x714>  // b.none
   19a20:	mov	x23, x27
   19a24:	mov	w19, #0x1                   	// #1
   19a28:	b	197a0 <mpfr_exp_3@@Base+0x370>
   19a2c:	mov	x20, #0x0                   	// #0
   19a30:	str	wzr, [sp, #184]
   19a34:	b	194e8 <mpfr_exp_3@@Base+0xb8>
   19a38:	ldr	x0, [sp, #112]
   19a3c:	b	19580 <mpfr_exp_3@@Base+0x150>
   19a40:	ldr	x0, [sp, #168]
   19a44:	ldr	x19, [x0, #16]
   19a48:	cmp	x19, x24
   19a4c:	b.le	19960 <mpfr_exp_3@@Base+0x530>
   19a50:	ldr	w3, [sp, #188]
   19a54:	mov	x1, x0
   19a58:	mov	x24, x0
   19a5c:	mov	x2, #0xfffffffffffffffe    	// #-2
   19a60:	bl	bb90 <mpfr_mul_2si@plt>
   19a64:	mov	w1, w0
   19a68:	cbz	w0, 19960 <mpfr_exp_3@@Base+0x530>
   19a6c:	cmp	w23, #0x0
   19a70:	ccmp	w21, #0x0, #0x4, lt  // lt = tstop
   19a74:	b.eq	19a88 <mpfr_exp_3@@Base+0x658>  // b.none
   19a78:	ldr	x2, [x24, #16]
   19a7c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   19a80:	cmp	x2, x0
   19a84:	b.eq	19ae4 <mpfr_exp_3@@Base+0x6b4>  // b.none
   19a88:	ldr	w0, [sp, #204]
   19a8c:	mov	w23, w1
   19a90:	orr	w0, w0, #0x1
   19a94:	str	w0, [sp, #204]
   19a98:	b	19960 <mpfr_exp_3@@Base+0x530>
   19a9c:	mov	w1, #0xb7                  	// #183
   19aa0:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   19aa4:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   19aa8:	add	x2, x2, #0x508
   19aac:	add	x0, x0, #0x4e0
   19ab0:	bl	cb40 <mpfr_assert_fail@plt>
   19ab4:	ldr	x1, [x21]
   19ab8:	b	194cc <mpfr_exp_3@@Base+0x9c>
   19abc:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   19ac0:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   19ac4:	add	x2, x2, #0x520
   19ac8:	add	x0, x0, #0x4e0
   19acc:	mov	w1, #0xcb                  	// #203
   19ad0:	bl	cb40 <mpfr_assert_fail@plt>
   19ad4:	ldr	x0, [sp, #168]
   19ad8:	ldr	x0, [x0]
   19adc:	add	x0, x20, x0
   19ae0:	b	19564 <mpfr_exp_3@@Base+0x134>
   19ae4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19ae8:	ldr	x2, [x0, #2512]
   19aec:	add	x0, x0, #0x9d0
   19af0:	blr	x2
   19af4:	ldr	x2, [sp, #176]
   19af8:	ldr	x0, [x2, x0]
   19afc:	add	x0, x0, #0x1
   19b00:	cmp	x19, x0
   19b04:	b.ne	19a88 <mpfr_exp_3@@Base+0x658>  // b.any
   19b08:	ldr	x0, [sp, #168]
   19b0c:	mov	w1, #0x2                   	// #2
   19b10:	mov	w2, #0x1                   	// #1
   19b14:	bl	c3c0 <mpfr_underflow@plt>
   19b18:	mov	w1, w0
   19b1c:	b	19a88 <mpfr_exp_3@@Base+0x658>
   19b20:	ldr	w1, [sp, #188]
   19b24:	mov	w2, #0x1                   	// #1
   19b28:	ldr	x0, [sp, #168]
   19b2c:	bl	bf40 <mpfr_overflow@plt>
   19b30:	mov	w23, w0
   19b34:	ldr	w1, [sp, #204]
   19b38:	orr	w1, w1, #0x2
   19b3c:	str	w1, [sp, #204]
   19b40:	b	19960 <mpfr_exp_3@@Base+0x530>
   19b44:	ldr	w1, [sp, #188]
   19b48:	mov	w2, #0x1                   	// #1
   19b4c:	ldr	w3, [sp, #204]
   19b50:	ldr	x0, [sp, #168]
   19b54:	cmp	w1, #0x0
   19b58:	orr	w3, w3, w2
   19b5c:	csel	w1, w1, w2, ne  // ne = any
   19b60:	str	w3, [sp, #204]
   19b64:	bl	c3c0 <mpfr_underflow@plt>
   19b68:	mov	w23, w0
   19b6c:	b	19960 <mpfr_exp_3@@Base+0x530>

0000000000019b70 <mpfr_exp@@Base>:
   19b70:	stp	x29, x30, [sp, #-144]!
   19b74:	mov	x29, sp
   19b78:	stp	x19, x20, [sp, #16]
   19b7c:	mov	x20, x1
   19b80:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   19b84:	stp	x21, x22, [sp, #32]
   19b88:	mov	w22, w2
   19b8c:	mov	x21, x0
   19b90:	ldr	x2, [x20, #16]
   19b94:	cmp	x2, x1
   19b98:	b.le	19d90 <mpfr_exp@@Base+0x220>
   19b9c:	mrs	x19, tpidr_el0
   19ba0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19ba4:	ldr	x1, [x0, #2544]
   19ba8:	add	x0, x0, #0x9f0
   19bac:	blr	x1
   19bb0:	add	x4, x19, x0
   19bb4:	stp	x23, x24, [sp, #48]
   19bb8:	ldr	x23, [x19, x0]
   19bbc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19bc0:	ldr	x1, [x0, #2464]
   19bc4:	add	x0, x0, #0x9a0
   19bc8:	blr	x1
   19bcc:	ldr	x1, [x19, x0]
   19bd0:	stp	x25, x26, [sp, #64]
   19bd4:	add	x24, x19, x0
   19bd8:	stp	x27, x28, [sp, #80]
   19bdc:	cmp	x23, x1
   19be0:	b.ne	19ed4 <mpfr_exp@@Base+0x364>  // b.any
   19be4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19be8:	ldr	x1, [x0, #2464]
   19bec:	add	x0, x0, #0x9a0
   19bf0:	blr	x1
   19bf4:	add	x23, x19, x0
   19bf8:	add	x1, x23, #0x8
   19bfc:	mov	x0, x20
   19c00:	mov	w2, #0x1                   	// #1
   19c04:	bl	c9a0 <mpfr_cmp3@plt>
   19c08:	tbz	w0, #31, 1a11c <mpfr_exp@@Base+0x5ac>
   19c0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19c10:	ldr	x1, [x0, #2512]
   19c14:	add	x0, x0, #0x9d0
   19c18:	blr	x1
   19c1c:	add	x4, x19, x0
   19c20:	ldr	x24, [x19, x0]
   19c24:	ldr	x0, [x23, #48]
   19c28:	cmp	x24, x0
   19c2c:	b.ne	19dc0 <mpfr_exp@@Base+0x250>  // b.any
   19c30:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19c34:	ldr	x1, [x0, #2464]
   19c38:	add	x0, x0, #0x9a0
   19c3c:	blr	x1
   19c40:	add	x0, x19, x0
   19c44:	add	x1, x0, #0x38
   19c48:	mov	w2, #0x1                   	// #1
   19c4c:	mov	x0, x20
   19c50:	bl	c9a0 <mpfr_cmp3@plt>
   19c54:	cmp	w0, #0x0
   19c58:	b.le	1a140 <mpfr_exp@@Base+0x5d0>
   19c5c:	ldr	x0, [x20, #16]
   19c60:	ldr	x1, [x21]
   19c64:	tbnz	x0, #63, 19fc0 <mpfr_exp@@Base+0x450>
   19c68:	mov	x0, #0x61a7                	// #24999
   19c6c:	cmp	x1, x0
   19c70:	b.gt	1a05c <mpfr_exp@@Base+0x4ec>
   19c74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19c78:	ldr	x1, [x0, #2576]
   19c7c:	add	x0, x0, #0xa10
   19c80:	blr	x1
   19c84:	ldr	w27, [x19, x0]
   19c88:	add	x24, x19, x0
   19c8c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19c90:	ldr	x1, [x0, #2512]
   19c94:	add	x0, x0, #0x9d0
   19c98:	blr	x1
   19c9c:	mov	x1, x20
   19ca0:	add	x25, x19, x0
   19ca4:	ldr	x23, [x19, x0]
   19ca8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19cac:	ldr	x2, [x0, #2544]
   19cb0:	add	x0, x0, #0x9f0
   19cb4:	blr	x2
   19cb8:	add	x20, x19, x0
   19cbc:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   19cc0:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   19cc4:	mov	w2, w22
   19cc8:	str	x4, [x25]
   19ccc:	ldr	x26, [x19, x0]
   19cd0:	mov	x0, x21
   19cd4:	str	x3, [x20]
   19cd8:	bl	c870 <mpfr_exp_2@plt>
   19cdc:	ldr	w2, [x24]
   19ce0:	mov	w1, w0
   19ce4:	str	x26, [x20]
   19ce8:	orr	w2, w2, w27
   19cec:	str	x23, [x25]
   19cf0:	str	w2, [x24]
   19cf4:	ldr	x2, [x21, #16]
   19cf8:	cmp	x23, x2
   19cfc:	b.gt	19d60 <mpfr_exp@@Base+0x1f0>
   19d00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19d04:	ldr	x3, [x0, #2544]
   19d08:	add	x0, x0, #0x9f0
   19d0c:	blr	x3
   19d10:	ldr	x0, [x19, x0]
   19d14:	cmp	x2, x0
   19d18:	b.gt	19d60 <mpfr_exp@@Base+0x1f0>
   19d1c:	cbz	w1, 19d70 <mpfr_exp@@Base+0x200>
   19d20:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19d24:	ldr	x2, [x0, #2576]
   19d28:	add	x0, x0, #0xa10
   19d2c:	blr	x2
   19d30:	add	x0, x19, x0
   19d34:	ldp	x23, x24, [sp, #48]
   19d38:	ldr	w2, [x0]
   19d3c:	ldp	x25, x26, [sp, #64]
   19d40:	orr	w2, w2, #0x8
   19d44:	ldp	x27, x28, [sp, #80]
   19d48:	str	w2, [x0]
   19d4c:	mov	w0, w1
   19d50:	ldp	x19, x20, [sp, #16]
   19d54:	ldp	x21, x22, [sp, #32]
   19d58:	ldp	x29, x30, [sp], #144
   19d5c:	ret
   19d60:	mov	w2, w22
   19d64:	mov	x0, x21
   19d68:	bl	cb30 <mpfr_check_range@plt>
   19d6c:	mov	w1, w0
   19d70:	ldp	x23, x24, [sp, #48]
   19d74:	ldp	x25, x26, [sp, #64]
   19d78:	ldp	x27, x28, [sp, #80]
   19d7c:	mov	w0, w1
   19d80:	ldp	x19, x20, [sp, #16]
   19d84:	ldp	x21, x22, [sp, #32]
   19d88:	ldp	x29, x30, [sp], #144
   19d8c:	ret
   19d90:	mov	x3, #0x2                   	// #2
   19d94:	movk	x3, #0x8000, lsl #48
   19d98:	cmp	x2, x3
   19d9c:	b.eq	1a0ac <mpfr_exp@@Base+0x53c>  // b.none
   19da0:	cmp	x2, x1
   19da4:	b.eq	1a088 <mpfr_exp@@Base+0x518>  // b.none
   19da8:	mov	x1, #0x1                   	// #1
   19dac:	mov	w3, w22
   19db0:	mov	x2, #0x0                   	// #0
   19db4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   19db8:	mov	w1, w0
   19dbc:	b	19d7c <mpfr_exp@@Base+0x20c>
   19dc0:	add	x8, x23, #0x58
   19dc4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19dc8:	ldr	x1, [x0, #2576]
   19dcc:	add	x0, x0, #0xa10
   19dd0:	blr	x1
   19dd4:	mov	w5, #0x1                   	// #1
   19dd8:	mov	x6, #0x3fffffffffffffff    	// #4611686018427387903
   19ddc:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   19de0:	mov	x7, #0x20                  	// #32
   19de4:	ldr	w28, [x19, x0]
   19de8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19dec:	ldr	x1, [x0, #2544]
   19df0:	add	x0, x0, #0x9f0
   19df4:	blr	x1
   19df8:	str	x7, [x23, #56]
   19dfc:	add	x25, sp, #0x70
   19e00:	str	w5, [x23, #64]
   19e04:	add	x1, sp, #0x68
   19e08:	str	x8, [x23, #80]
   19e0c:	mov	x2, #0x3f                  	// #63
   19e10:	mov	w3, #0x0                   	// #0
   19e14:	str	x9, [x4]
   19e18:	str	x2, [sp, #112]
   19e1c:	mov	x2, #0x0                   	// #0
   19e20:	str	w5, [sp, #120]
   19e24:	add	x26, x23, #0x38
   19e28:	str	x1, [sp, #136]
   19e2c:	mov	x1, x24
   19e30:	ldr	x27, [x19, x0]
   19e34:	str	x6, [x19, x0]
   19e38:	mov	x0, x25
   19e3c:	bl	ba80 <mpfr_set_si_2exp@plt>
   19e40:	mov	x1, x25
   19e44:	mov	w3, #0x0                   	// #0
   19e48:	mov	x2, #0x2                   	// #2
   19e4c:	mov	x0, x25
   19e50:	bl	c530 <mpfr_sub_ui@plt>
   19e54:	mvn	x2, x24
   19e58:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19e5c:	ldr	x1, [x0, #2560]
   19e60:	add	x0, x0, #0xa00
   19e64:	blr	x1
   19e68:	add	x1, x19, x0
   19e6c:	mov	x0, x26
   19e70:	lsr	x2, x2, #63
   19e74:	add	w2, w2, #0x2
   19e78:	bl	c380 <mpfr_cache@plt>
   19e7c:	mov	x1, x26
   19e80:	mov	x2, x25
   19e84:	mov	x0, x26
   19e88:	mov	w3, #0x3                   	// #3
   19e8c:	bl	bd50 <mpfr_mul@plt>
   19e90:	str	x24, [x23, #48]
   19e94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19e98:	ldr	x1, [x0, #2576]
   19e9c:	add	x0, x0, #0xa10
   19ea0:	blr	x1
   19ea4:	str	w28, [x19, x0]
   19ea8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19eac:	ldr	x1, [x0, #2512]
   19eb0:	add	x0, x0, #0x9d0
   19eb4:	blr	x1
   19eb8:	str	x24, [x19, x0]
   19ebc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19ec0:	ldr	x1, [x0, #2544]
   19ec4:	add	x0, x0, #0x9f0
   19ec8:	blr	x1
   19ecc:	str	x27, [x19, x0]
   19ed0:	b	19c30 <mpfr_exp@@Base+0xc0>
   19ed4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19ed8:	ldr	x1, [x0, #2576]
   19edc:	add	x0, x0, #0xa10
   19ee0:	blr	x1
   19ee4:	add	x7, x24, #0x28
   19ee8:	ldr	w28, [x19, x0]
   19eec:	mov	w5, #0x1                   	// #1
   19ef0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19ef4:	ldr	x1, [x0, #2512]
   19ef8:	add	x0, x0, #0x9d0
   19efc:	blr	x1
   19f00:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   19f04:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   19f08:	mov	x8, #0x20                  	// #32
   19f0c:	str	x8, [x24, #8]
   19f10:	add	x25, sp, #0x70
   19f14:	str	w5, [x24, #16]
   19f18:	add	x1, sp, #0x68
   19f1c:	str	x7, [x24, #32]
   19f20:	mov	x2, #0x40                  	// #64
   19f24:	mov	w3, #0x0                   	// #0
   19f28:	str	x9, [x4]
   19f2c:	str	x2, [sp, #112]
   19f30:	mov	x2, #0x0                   	// #0
   19f34:	str	w5, [sp, #120]
   19f38:	add	x26, x24, #0x8
   19f3c:	str	x1, [sp, #136]
   19f40:	mov	x1, x23
   19f44:	ldr	x27, [x19, x0]
   19f48:	str	x6, [x19, x0]
   19f4c:	mov	x0, x25
   19f50:	bl	ba80 <mpfr_set_si_2exp@plt>
   19f54:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   19f58:	adrp	x4, 81000 <__gmpfr_l2b@@Base+0x200>
   19f5c:	cmp	x23, #0x0
   19f60:	mov	x2, x25
   19f64:	ldr	x1, [x1, #4048]
   19f68:	mov	x0, x26
   19f6c:	ldr	x4, [x4, #3984]
   19f70:	mov	w3, #0x2                   	// #2
   19f74:	csel	x1, x4, x1, lt  // lt = tstop
   19f78:	bl	bd50 <mpfr_mul@plt>
   19f7c:	str	x23, [x24]
   19f80:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19f84:	ldr	x1, [x0, #2576]
   19f88:	add	x0, x0, #0xa10
   19f8c:	blr	x1
   19f90:	str	w28, [x19, x0]
   19f94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19f98:	ldr	x1, [x0, #2512]
   19f9c:	add	x0, x0, #0x9d0
   19fa0:	blr	x1
   19fa4:	str	x27, [x19, x0]
   19fa8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19fac:	ldr	x1, [x0, #2544]
   19fb0:	add	x0, x0, #0x9f0
   19fb4:	blr	x1
   19fb8:	str	x23, [x19, x0]
   19fbc:	b	19be4 <mpfr_exp@@Base+0x74>
   19fc0:	neg	x0, x0
   19fc4:	cmp	x0, x1
   19fc8:	b.ls	19c68 <mpfr_exp@@Base+0xf8>  // b.plast
   19fcc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19fd0:	ldr	x1, [x0, #2512]
   19fd4:	add	x0, x0, #0x9d0
   19fd8:	blr	x1
   19fdc:	add	x2, x19, x0
   19fe0:	ldr	w20, [x20, #8]
   19fe4:	mov	x1, #0x2                   	// #2
   19fe8:	mov	w24, #0x1                   	// #1
   19fec:	str	w24, [x21, #8]
   19ff0:	ldr	x23, [x19, x0]
   19ff4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   19ff8:	ldr	x3, [x0, #2544]
   19ffc:	add	x0, x0, #0x9f0
   1a000:	blr	x3
   1a004:	str	xzr, [x2]
   1a008:	ldr	x25, [x19, x0]
   1a00c:	str	x1, [x19, x0]
   1a010:	tbz	w20, #31, 1a0dc <mpfr_exp@@Base+0x56c>
   1a014:	and	w0, w22, #0xfffffffd
   1a018:	cmp	w0, w24
   1a01c:	b.eq	1a108 <mpfr_exp@@Base+0x598>  // b.none
   1a020:	mov	x0, x21
   1a024:	mov	x1, #0x1                   	// #1
   1a028:	bl	c2b0 <mpfr_setmin@plt>
   1a02c:	neg	w1, w20
   1a030:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a034:	ldr	x2, [x0, #2512]
   1a038:	add	x0, x0, #0x9d0
   1a03c:	blr	x2
   1a040:	str	x23, [x19, x0]
   1a044:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a048:	ldr	x2, [x0, #2544]
   1a04c:	add	x0, x0, #0x9f0
   1a050:	blr	x2
   1a054:	str	x25, [x19, x0]
   1a058:	b	19cf4 <mpfr_exp@@Base+0x184>
   1a05c:	mov	w2, w22
   1a060:	mov	x1, x20
   1a064:	mov	x0, x21
   1a068:	bl	be20 <mpfr_exp_3@plt>
   1a06c:	mov	w1, w0
   1a070:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a074:	ldr	x2, [x0, #2512]
   1a078:	add	x0, x0, #0x9d0
   1a07c:	blr	x2
   1a080:	ldr	x23, [x19, x0]
   1a084:	b	19cf4 <mpfr_exp@@Base+0x184>
   1a088:	ldr	w4, [x20, #8]
   1a08c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1a090:	mov	w3, #0x1                   	// #1
   1a094:	mov	w1, #0x0                   	// #0
   1a098:	cmp	w4, #0x0
   1a09c:	str	w3, [x21, #8]
   1a0a0:	csel	x2, x2, x0, gt
   1a0a4:	str	x2, [x21, #16]
   1a0a8:	b	19d7c <mpfr_exp@@Base+0x20c>
   1a0ac:	mrs	x1, tpidr_el0
   1a0b0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a0b4:	ldr	x3, [x0, #2576]
   1a0b8:	add	x0, x0, #0xa10
   1a0bc:	blr	x3
   1a0c0:	add	x0, x1, x0
   1a0c4:	str	x2, [x21, #16]
   1a0c8:	mov	w1, #0x0                   	// #0
   1a0cc:	ldr	w2, [x0]
   1a0d0:	orr	w2, w2, #0x4
   1a0d4:	str	w2, [x0]
   1a0d8:	b	19d7c <mpfr_exp@@Base+0x20c>
   1a0dc:	mov	x0, x21
   1a0e0:	mov	x1, #0x1                   	// #1
   1a0e4:	bl	c2b0 <mpfr_setmin@plt>
   1a0e8:	cbz	w20, 1a02c <mpfr_exp@@Base+0x4bc>
   1a0ec:	sub	w0, w22, #0x2
   1a0f0:	tst	w0, #0xfffffffd
   1a0f4:	b.ne	1a02c <mpfr_exp@@Base+0x4bc>  // b.any
   1a0f8:	mov	x0, x21
   1a0fc:	bl	c120 <mpfr_nextabove@plt>
   1a100:	mov	w1, w24
   1a104:	b	1a030 <mpfr_exp@@Base+0x4c0>
   1a108:	mov	x1, #0x0                   	// #0
   1a10c:	mov	x0, x21
   1a110:	bl	c0d0 <mpfr_setmax@plt>
   1a114:	mov	w1, #0xffffffff            	// #-1
   1a118:	b	1a030 <mpfr_exp@@Base+0x4c0>
   1a11c:	mov	w1, w22
   1a120:	mov	x0, x21
   1a124:	mov	w2, #0x1                   	// #1
   1a128:	bl	bf40 <mpfr_overflow@plt>
   1a12c:	mov	w1, w0
   1a130:	ldp	x23, x24, [sp, #48]
   1a134:	ldp	x25, x26, [sp, #64]
   1a138:	ldp	x27, x28, [sp, #80]
   1a13c:	b	19d7c <mpfr_exp@@Base+0x20c>
   1a140:	cmp	w22, #0x0
   1a144:	mov	w2, #0x1                   	// #1
   1a148:	csel	w1, w22, w2, ne  // ne = any
   1a14c:	mov	x0, x21
   1a150:	bl	c3c0 <mpfr_underflow@plt>
   1a154:	mov	w1, w0
   1a158:	ldp	x23, x24, [sp, #48]
   1a15c:	ldp	x25, x26, [sp, #64]
   1a160:	ldp	x27, x28, [sp, #80]
   1a164:	b	19d7c <mpfr_exp@@Base+0x20c>

000000000001a168 <mpfr_frac@@Base>:
   1a168:	stp	x29, x30, [sp, #-160]!
   1a16c:	mov	x29, sp
   1a170:	stp	x21, x22, [sp, #32]
   1a174:	mov	w22, w2
   1a178:	mov	x21, x0
   1a17c:	ldr	x2, [x1, #16]
   1a180:	mov	x0, #0x2                   	// #2
   1a184:	movk	x0, #0x8000, lsl #48
   1a188:	cmp	x2, x0
   1a18c:	b.eq	1a500 <mpfr_frac@@Base+0x398>  // b.none
   1a190:	stp	x25, x26, [sp, #64]
   1a194:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1a198:	mov	x26, x1
   1a19c:	cmp	x2, x0
   1a1a0:	b.eq	1a4b8 <mpfr_frac@@Base+0x350>  // b.none
   1a1a4:	mov	x0, x1
   1a1a8:	bl	c160 <mpfr_integer_p@plt>
   1a1ac:	cbnz	w0, 1a4b8 <mpfr_frac@@Base+0x350>
   1a1b0:	ldr	x3, [x26, #16]
   1a1b4:	cmp	x3, #0x0
   1a1b8:	b.le	1a4dc <mpfr_frac@@Base+0x374>
   1a1bc:	ldr	x0, [x26]
   1a1c0:	stp	x19, x20, [sp, #16]
   1a1c4:	neg	x2, x3, asr #6
   1a1c8:	add	x19, x0, #0x3e
   1a1cc:	subs	x0, x0, #0x1
   1a1d0:	csel	x0, x19, x0, mi  // mi = first
   1a1d4:	stp	x27, x28, [sp, #80]
   1a1d8:	and	x3, x3, #0x3f
   1a1dc:	ldr	x27, [x26, #24]
   1a1e0:	add	x19, x2, x0, asr #6
   1a1e4:	stp	x23, x24, [sp, #48]
   1a1e8:	ldr	x4, [x27, x19, lsl #3]
   1a1ec:	lsl	x4, x4, x3
   1a1f0:	cbz	x4, 1a378 <mpfr_frac@@Base+0x210>
   1a1f4:	clz	x24, x4
   1a1f8:	neg	w23, w24
   1a1fc:	add	w20, w24, w3
   1a200:	cmp	w20, #0x3f
   1a204:	lsl	x24, x4, x24
   1a208:	sxtw	x0, w23
   1a20c:	str	x0, [sp, #104]
   1a210:	b.gt	1a568 <mpfr_frac@@Base+0x400>
   1a214:	ldr	x0, [x21]
   1a218:	add	x2, x0, #0x3e
   1a21c:	subs	x0, x0, #0x1
   1a220:	csel	x0, x2, x0, mi  // mi = first
   1a224:	cmp	x19, x0, asr #6
   1a228:	asr	x25, x0, #6
   1a22c:	b.gt	1a3d4 <mpfr_frac@@Base+0x26c>
   1a230:	ldr	w0, [x26, #8]
   1a234:	mov	x23, x21
   1a238:	str	w0, [x21, #8]
   1a23c:	sub	x28, x25, x19
   1a240:	ldr	x26, [x23, #24]
   1a244:	cbz	w20, 1a44c <mpfr_frac@@Base+0x2e4>
   1a248:	cbnz	x19, 1a460 <mpfr_frac@@Base+0x2f8>
   1a24c:	str	x24, [x26, x25, lsl #3]
   1a250:	cmp	x28, #0x0
   1a254:	b.le	1a268 <mpfr_frac@@Base+0x100>
   1a258:	lsl	x2, x28, #3
   1a25c:	mov	x0, x26
   1a260:	mov	w1, #0x0                   	// #0
   1a264:	bl	c110 <memset@plt>
   1a268:	mrs	x19, tpidr_el0
   1a26c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a270:	ldr	x1, [x0, #2576]
   1a274:	add	x0, x0, #0xa10
   1a278:	blr	x1
   1a27c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   1a280:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1a284:	ldr	w20, [x19, x0]
   1a288:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a28c:	ldr	x2, [x0, #2512]
   1a290:	add	x0, x0, #0x9d0
   1a294:	blr	x2
   1a298:	add	x2, x19, x0
   1a29c:	ldr	x27, [x19, x0]
   1a2a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a2a4:	ldr	x4, [x0, #2544]
   1a2a8:	add	x0, x0, #0x9f0
   1a2ac:	blr	x4
   1a2b0:	str	x3, [x2]
   1a2b4:	cmp	x21, x23
   1a2b8:	ldr	x24, [x19, x0]
   1a2bc:	str	x1, [x19, x0]
   1a2c0:	b.eq	1a47c <mpfr_frac@@Base+0x314>  // b.none
   1a2c4:	ldr	w3, [x23, #8]
   1a2c8:	mov	x1, x23
   1a2cc:	str	xzr, [x23, #16]
   1a2d0:	mov	w2, w22
   1a2d4:	mov	x0, x21
   1a2d8:	bl	c6a0 <mpfr_set4@plt>
   1a2dc:	mov	w1, w0
   1a2e0:	mov	x0, x23
   1a2e4:	str	w1, [sp, #124]
   1a2e8:	bl	c070 <mpfr_clear@plt>
   1a2ec:	ldr	x3, [x21, #16]
   1a2f0:	ldr	x0, [sp, #104]
   1a2f4:	add	x3, x0, x3
   1a2f8:	str	x3, [x21, #16]
   1a2fc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a300:	ldr	x1, [x0, #2576]
   1a304:	add	x0, x0, #0xa10
   1a308:	blr	x1
   1a30c:	str	w20, [x19, x0]
   1a310:	add	x1, x19, x0
   1a314:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a318:	ldr	x2, [x0, #2512]
   1a31c:	add	x0, x0, #0x9d0
   1a320:	blr	x2
   1a324:	str	x27, [x19, x0]
   1a328:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a32c:	ldr	x2, [x0, #2544]
   1a330:	add	x0, x0, #0x9f0
   1a334:	blr	x2
   1a338:	str	x24, [x19, x0]
   1a33c:	cmp	x3, x27
   1a340:	ldr	w0, [sp, #124]
   1a344:	ccmp	x3, x24, #0x0, ge  // ge = tcont
   1a348:	b.le	1a424 <mpfr_frac@@Base+0x2bc>
   1a34c:	mov	w1, w0
   1a350:	mov	w2, w22
   1a354:	mov	x0, x21
   1a358:	bl	cb30 <mpfr_check_range@plt>
   1a35c:	ldp	x19, x20, [sp, #16]
   1a360:	ldp	x21, x22, [sp, #32]
   1a364:	ldp	x23, x24, [sp, #48]
   1a368:	ldp	x25, x26, [sp, #64]
   1a36c:	ldp	x27, x28, [sp, #80]
   1a370:	ldp	x29, x30, [sp], #160
   1a374:	ret
   1a378:	sub	x19, x19, #0x1
   1a37c:	sub	w3, w3, #0x40
   1a380:	sxtw	x3, w3
   1a384:	ldr	x4, [x27, x19, lsl #3]
   1a388:	cbnz	x4, 1a3a0 <mpfr_frac@@Base+0x238>
   1a38c:	nop
   1a390:	sub	x19, x19, #0x1
   1a394:	sub	x3, x3, #0x40
   1a398:	ldr	x4, [x27, x19, lsl #3]
   1a39c:	cbz	x4, 1a390 <mpfr_frac@@Base+0x228>
   1a3a0:	tbnz	x19, #63, 1a550 <mpfr_frac@@Base+0x3e8>
   1a3a4:	clz	x24, x4
   1a3a8:	sub	x0, x3, x24
   1a3ac:	str	x0, [sp, #104]
   1a3b0:	ldr	x0, [x21]
   1a3b4:	mov	w20, w24
   1a3b8:	lsl	x24, x4, x24
   1a3bc:	add	x2, x0, #0x3e
   1a3c0:	subs	x0, x0, #0x1
   1a3c4:	csel	x0, x2, x0, mi  // mi = first
   1a3c8:	cmp	x19, x0, asr #6
   1a3cc:	asr	x25, x0, #6
   1a3d0:	b.le	1a230 <mpfr_frac@@Base+0xc8>
   1a3d4:	add	x1, x19, #0x1
   1a3d8:	add	x0, sp, #0x80
   1a3dc:	mov	x23, x0
   1a3e0:	lsl	x1, x1, #6
   1a3e4:	bl	ca80 <mpfr_init2@plt>
   1a3e8:	ldr	x1, [sp, #128]
   1a3ec:	ldr	w0, [x26, #8]
   1a3f0:	add	x25, x1, #0x3e
   1a3f4:	subs	x1, x1, #0x1
   1a3f8:	csel	x1, x25, x1, mi  // mi = first
   1a3fc:	str	w0, [sp, #136]
   1a400:	cmp	x19, x1, asr #6
   1a404:	asr	x25, x1, #6
   1a408:	b.le	1a23c <mpfr_frac@@Base+0xd4>
   1a40c:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1a410:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1a414:	add	x2, x2, #0x5f0
   1a418:	add	x0, x0, #0x5e0
   1a41c:	mov	w1, #0x6b                  	// #107
   1a420:	bl	cb40 <mpfr_assert_fail@plt>
   1a424:	cbz	w0, 1a35c <mpfr_frac@@Base+0x1f4>
   1a428:	orr	w20, w20, #0x8
   1a42c:	ldp	x23, x24, [sp, #48]
   1a430:	ldp	x25, x26, [sp, #64]
   1a434:	ldp	x27, x28, [sp, #80]
   1a438:	str	w20, [x1]
   1a43c:	ldp	x19, x20, [sp, #16]
   1a440:	ldp	x21, x22, [sp, #32]
   1a444:	ldp	x29, x30, [sp], #160
   1a448:	ret
   1a44c:	add	x2, x19, #0x1
   1a450:	mov	x1, x27
   1a454:	add	x0, x26, x28, lsl #3
   1a458:	bl	bae0 <__gmpn_copyd@plt>
   1a45c:	b	1a250 <mpfr_frac@@Base+0xe8>
   1a460:	mov	w3, w20
   1a464:	mov	x2, x19
   1a468:	mov	x1, x27
   1a46c:	add	x0, x26, x28, lsl #3
   1a470:	bl	bcc0 <__gmpn_lshift@plt>
   1a474:	orr	x24, x24, x0
   1a478:	b	1a24c <mpfr_frac@@Base+0xe4>
   1a47c:	ldr	x4, [x21]
   1a480:	add	x2, x25, #0x1
   1a484:	ldr	w3, [x21, #8]
   1a488:	add	x6, sp, #0x7c
   1a48c:	ldr	x0, [sp, #104]
   1a490:	str	x0, [x21, #16]
   1a494:	lsl	x2, x2, #6
   1a498:	mov	w5, w22
   1a49c:	mov	x1, x26
   1a4a0:	lsr	w3, w3, #31
   1a4a4:	mov	x0, x26
   1a4a8:	bl	ca20 <mpfr_round_raw@plt>
   1a4ac:	cbnz	w0, 1a538 <mpfr_frac@@Base+0x3d0>
   1a4b0:	ldr	x3, [x21, #16]
   1a4b4:	b	1a2fc <mpfr_frac@@Base+0x194>
   1a4b8:	ldr	w2, [x26, #8]
   1a4bc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1a4c0:	ldp	x25, x26, [sp, #64]
   1a4c4:	str	w2, [x21, #8]
   1a4c8:	str	x1, [x21, #16]
   1a4cc:	mov	w0, #0x0                   	// #0
   1a4d0:	ldp	x21, x22, [sp, #32]
   1a4d4:	ldp	x29, x30, [sp], #160
   1a4d8:	ret
   1a4dc:	ldr	w3, [x26, #8]
   1a4e0:	mov	w2, w22
   1a4e4:	mov	x1, x26
   1a4e8:	mov	x0, x21
   1a4ec:	bl	c6a0 <mpfr_set4@plt>
   1a4f0:	ldp	x21, x22, [sp, #32]
   1a4f4:	ldp	x25, x26, [sp, #64]
   1a4f8:	ldp	x29, x30, [sp], #160
   1a4fc:	ret
   1a500:	mrs	x1, tpidr_el0
   1a504:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a508:	ldr	x3, [x0, #2576]
   1a50c:	add	x0, x0, #0xa10
   1a510:	blr	x3
   1a514:	add	x1, x1, x0
   1a518:	str	x2, [x21, #16]
   1a51c:	mov	w0, #0x0                   	// #0
   1a520:	ldp	x21, x22, [sp, #32]
   1a524:	ldr	w2, [x1]
   1a528:	orr	w2, w2, #0x4
   1a52c:	str	w2, [x1]
   1a530:	ldp	x29, x30, [sp], #160
   1a534:	ret
   1a538:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1a53c:	str	x0, [x26, x25, lsl #3]
   1a540:	ldr	x3, [x21, #16]
   1a544:	add	x3, x3, #0x1
   1a548:	str	x3, [x21, #16]
   1a54c:	b	1a2fc <mpfr_frac@@Base+0x194>
   1a550:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1a554:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1a558:	add	x2, x2, #0x5e8
   1a55c:	add	x0, x0, #0x5e0
   1a560:	mov	w1, #0x59                  	// #89
   1a564:	bl	cb40 <mpfr_assert_fail@plt>
   1a568:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1a56c:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1a570:	add	x2, x2, #0x5d0
   1a574:	add	x0, x0, #0x5e0
   1a578:	mov	w1, #0x50                  	// #80
   1a57c:	bl	cb40 <mpfr_assert_fail@plt>

000000000001a580 <mpfr_frexp@@Base>:
   1a580:	stp	x29, x30, [sp, #-80]!
   1a584:	mov	x29, sp
   1a588:	stp	x19, x20, [sp, #16]
   1a58c:	mov	x20, x2
   1a590:	mov	x19, x1
   1a594:	stp	x25, x26, [sp, #64]
   1a598:	mov	x25, x0
   1a59c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a5a0:	ldr	x2, [x0, #2576]
   1a5a4:	add	x0, x0, #0xa10
   1a5a8:	blr	x2
   1a5ac:	stp	x23, x24, [sp, #48]
   1a5b0:	mrs	x23, tpidr_el0
   1a5b4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1a5b8:	ldr	x2, [x20, #16]
   1a5bc:	stp	x21, x22, [sp, #32]
   1a5c0:	ldr	w26, [x23, x0]
   1a5c4:	add	x24, x23, x0
   1a5c8:	cmp	x2, x1
   1a5cc:	b.le	1a688 <mpfr_frexp@@Base+0x108>
   1a5d0:	mov	w2, w3
   1a5d4:	mov	w22, w3
   1a5d8:	ldr	w3, [x20, #8]
   1a5dc:	mov	x1, x20
   1a5e0:	mov	x0, x19
   1a5e4:	str	wzr, [x24]
   1a5e8:	bl	c6a0 <mpfr_set4@plt>
   1a5ec:	mov	w21, w0
   1a5f0:	ldr	w1, [x24]
   1a5f4:	str	w26, [x24]
   1a5f8:	tbnz	w1, #1, 1a6bc <mpfr_frexp@@Base+0x13c>
   1a5fc:	ldr	x0, [x19, #16]
   1a600:	str	x0, [x25]
   1a604:	str	xzr, [x19, #16]
   1a608:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a60c:	ldr	x1, [x0, #2512]
   1a610:	add	x0, x0, #0x9d0
   1a614:	blr	x1
   1a618:	ldr	x0, [x23, x0]
   1a61c:	cmp	x0, #0x0
   1a620:	b.le	1a648 <mpfr_frexp@@Base+0xc8>
   1a624:	mov	w2, w22
   1a628:	mov	w1, w21
   1a62c:	mov	x0, x19
   1a630:	ldp	x19, x20, [sp, #16]
   1a634:	ldp	x21, x22, [sp, #32]
   1a638:	ldp	x23, x24, [sp, #48]
   1a63c:	ldp	x25, x26, [sp, #64]
   1a640:	ldp	x29, x30, [sp], #80
   1a644:	b	cb30 <mpfr_check_range@plt>
   1a648:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a64c:	ldr	x1, [x0, #2544]
   1a650:	add	x0, x0, #0x9f0
   1a654:	blr	x1
   1a658:	ldr	x0, [x23, x0]
   1a65c:	tbnz	x0, #63, 1a624 <mpfr_frexp@@Base+0xa4>
   1a660:	cbz	w21, 1a66c <mpfr_frexp@@Base+0xec>
   1a664:	orr	w26, w26, #0x8
   1a668:	str	w26, [x24]
   1a66c:	mov	w0, w21
   1a670:	ldp	x19, x20, [sp, #16]
   1a674:	ldp	x21, x22, [sp, #32]
   1a678:	ldp	x23, x24, [sp, #48]
   1a67c:	ldp	x25, x26, [sp, #64]
   1a680:	ldp	x29, x30, [sp], #80
   1a684:	ret
   1a688:	mov	x0, #0x2                   	// #2
   1a68c:	movk	x0, #0x8000, lsl #48
   1a690:	cmp	x2, x0
   1a694:	b.eq	1a728 <mpfr_frexp@@Base+0x1a8>  // b.none
   1a698:	ldr	w0, [x20, #8]
   1a69c:	cmp	x2, x1
   1a6a0:	b.eq	1a718 <mpfr_frexp@@Base+0x198>  // b.none
   1a6a4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1a6a8:	str	w0, [x19, #8]
   1a6ac:	str	x1, [x19, #16]
   1a6b0:	mov	w21, #0x0                   	// #0
   1a6b4:	str	xzr, [x25]
   1a6b8:	b	1a66c <mpfr_frexp@@Base+0xec>
   1a6bc:	ldr	x2, [x20, #16]
   1a6c0:	mov	w3, w22
   1a6c4:	ldrsw	x1, [x20, #8]
   1a6c8:	mov	x0, x19
   1a6cc:	add	x2, x2, #0x1
   1a6d0:	str	x2, [x25]
   1a6d4:	mov	x2, #0xffffffffffffffff    	// #-1
   1a6d8:	bl	ba80 <mpfr_set_si_2exp@plt>
   1a6dc:	mov	w1, w0
   1a6e0:	cbnz	w0, 1a6f0 <mpfr_frexp@@Base+0x170>
   1a6e4:	cbz	w21, 1a66c <mpfr_frexp@@Base+0xec>
   1a6e8:	mov	w1, w21
   1a6ec:	nop
   1a6f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a6f4:	ldr	x2, [x0, #2576]
   1a6f8:	add	x0, x0, #0xa10
   1a6fc:	blr	x2
   1a700:	add	x23, x23, x0
   1a704:	mov	w21, w1
   1a708:	ldr	w0, [x23]
   1a70c:	orr	w0, w0, #0x8
   1a710:	str	w0, [x23]
   1a714:	b	1a66c <mpfr_frexp@@Base+0xec>
   1a718:	mov	w21, #0x0                   	// #0
   1a71c:	str	w0, [x19, #8]
   1a720:	str	x2, [x19, #16]
   1a724:	b	1a66c <mpfr_frexp@@Base+0xec>
   1a728:	orr	w26, w26, #0x4
   1a72c:	mov	w21, #0x0                   	// #0
   1a730:	str	w26, [x24]
   1a734:	str	x2, [x19, #16]
   1a738:	b	1a66c <mpfr_frexp@@Base+0xec>
   1a73c:	nop

000000000001a740 <mpfr_get_d@@Base>:
   1a740:	stp	x29, x30, [sp, #-48]!
   1a744:	mov	w5, w1
   1a748:	mov	x4, x0
   1a74c:	mov	x29, sp
   1a750:	stp	x19, x20, [sp, #16]
   1a754:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1a758:	ldr	x19, [x0, #16]
   1a75c:	cmp	x19, x1
   1a760:	b.le	1a7dc <mpfr_get_d@@Base+0x9c>
   1a764:	ldr	w20, [x0, #8]
   1a768:	cmp	w5, #0x4
   1a76c:	lsr	w3, w20, #31
   1a770:	b.eq	1a804 <mpfr_get_d@@Base+0xc4>  // b.none
   1a774:	cmn	x19, #0x431
   1a778:	b.lt	1a820 <mpfr_get_d@@Base+0xe0>  // b.tstop
   1a77c:	cmp	x19, #0x400
   1a780:	b.gt	1a850 <mpfr_get_d@@Base+0x110>
   1a784:	ldr	x2, [x4]
   1a788:	cmn	x19, #0x3fd
   1a78c:	ldr	x1, [x4, #24]
   1a790:	mov	x6, #0x35                  	// #53
   1a794:	add	w4, w19, #0x432
   1a798:	add	x0, sp, #0x28
   1a79c:	csel	x4, x4, x6, lt  // lt = tstop
   1a7a0:	bl	c720 <mpfr_round_raw_4@plt>
   1a7a4:	cbnz	w0, 1a86c <mpfr_get_d@@Base+0x12c>
   1a7a8:	ldr	d0, [sp, #40]
   1a7ac:	mov	x0, #0x3bf0000000000000    	// #4318952042648305664
   1a7b0:	fmov	d1, x0
   1a7b4:	ucvtf	d0, d0
   1a7b8:	fmul	d0, d0, d1
   1a7bc:	mov	w0, w19
   1a7c0:	bl	cba0 <mpfr_scale2@plt>
   1a7c4:	fneg	d1, d0
   1a7c8:	cmp	w20, #0x0
   1a7cc:	fcsel	d0, d1, d0, lt  // lt = tstop
   1a7d0:	ldp	x19, x20, [sp, #16]
   1a7d4:	ldp	x29, x30, [sp], #48
   1a7d8:	ret
   1a7dc:	mov	x0, #0x2                   	// #2
   1a7e0:	movk	x0, #0x8000, lsl #48
   1a7e4:	cmp	x19, x0
   1a7e8:	b.eq	1a8d4 <mpfr_get_d@@Base+0x194>  // b.none
   1a7ec:	ldr	w0, [x4, #8]
   1a7f0:	cmp	x19, x1
   1a7f4:	b.eq	1a8ac <mpfr_get_d@@Base+0x16c>  // b.none
   1a7f8:	tbnz	w0, #31, 1a880 <mpfr_get_d@@Base+0x140>
   1a7fc:	movi	d0, #0x0
   1a800:	b	1a7d0 <mpfr_get_d@@Base+0x90>
   1a804:	tbnz	w20, #31, 1a8bc <mpfr_get_d@@Base+0x17c>
   1a808:	cmn	x19, #0x431
   1a80c:	b.lt	1a844 <mpfr_get_d@@Base+0x104>  // b.tstop
   1a810:	cmp	x19, #0x400
   1a814:	b.gt	1a8b0 <mpfr_get_d@@Base+0x170>
   1a818:	mov	w5, #0x2                   	// #2
   1a81c:	b	1a784 <mpfr_get_d@@Base+0x44>
   1a820:	tbnz	w20, #31, 1a874 <mpfr_get_d@@Base+0x134>
   1a824:	cmp	w5, #0x2
   1a828:	b.eq	1a844 <mpfr_get_d@@Base+0x104>  // b.none
   1a82c:	cbnz	w5, 1a7fc <mpfr_get_d@@Base+0xbc>
   1a830:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   1a834:	mov	x1, #0x1                   	// #1
   1a838:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   1a83c:	cmp	w0, #0x0
   1a840:	b.le	1a7fc <mpfr_get_d@@Base+0xbc>
   1a844:	mov	x0, #0x1                   	// #1
   1a848:	fmov	d0, x0
   1a84c:	b	1a7d0 <mpfr_get_d@@Base+0x90>
   1a850:	tbnz	w20, #31, 1a88c <mpfr_get_d@@Base+0x14c>
   1a854:	and	w5, w5, #0xfffffffd
   1a858:	cmp	w5, #0x1
   1a85c:	b.ne	1a8b0 <mpfr_get_d@@Base+0x170>  // b.any
   1a860:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   1a864:	fmov	d0, x0
   1a868:	b	1a7d0 <mpfr_get_d@@Base+0x90>
   1a86c:	fmov	d0, #1.000000000000000000e+00
   1a870:	b	1a7bc <mpfr_get_d@@Base+0x7c>
   1a874:	cmp	w5, #0x3
   1a878:	b.eq	1a8f0 <mpfr_get_d@@Base+0x1b0>  // b.none
   1a87c:	cbz	w5, 1a8e0 <mpfr_get_d@@Base+0x1a0>
   1a880:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1a884:	fmov	d0, x0
   1a888:	b	1a7d0 <mpfr_get_d@@Base+0x90>
   1a88c:	sub	w5, w5, #0x1
   1a890:	mov	x0, #0xffefffffffffffff    	// #-4503599627370497
   1a894:	cmp	w5, #0x1
   1a898:	fmov	d0, x0
   1a89c:	b.ls	1a7d0 <mpfr_get_d@@Base+0x90>  // b.plast
   1a8a0:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1a8a4:	ldr	d0, [x0, #1608]
   1a8a8:	b	1a7d0 <mpfr_get_d@@Base+0x90>
   1a8ac:	tbnz	w0, #31, 1a8a0 <mpfr_get_d@@Base+0x160>
   1a8b0:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1a8b4:	ldr	d0, [x0, #1616]
   1a8b8:	b	1a7d0 <mpfr_get_d@@Base+0x90>
   1a8bc:	cmn	x19, #0x431
   1a8c0:	b.lt	1a8f0 <mpfr_get_d@@Base+0x1b0>  // b.tstop
   1a8c4:	cmp	x19, #0x400
   1a8c8:	b.gt	1a8a0 <mpfr_get_d@@Base+0x160>
   1a8cc:	mov	w5, #0x3                   	// #3
   1a8d0:	b	1a784 <mpfr_get_d@@Base+0x44>
   1a8d4:	movi	d0, #0x0
   1a8d8:	fdiv	d0, d0, d0
   1a8dc:	b	1a7d0 <mpfr_get_d@@Base+0x90>
   1a8e0:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   1a8e4:	mov	x1, #0xffffffffffffffff    	// #-1
   1a8e8:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   1a8ec:	tbz	w0, #31, 1a880 <mpfr_get_d@@Base+0x140>
   1a8f0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1a8f4:	fmov	d0, x0
   1a8f8:	b	1a7d0 <mpfr_get_d@@Base+0x90>
   1a8fc:	nop

000000000001a900 <mpfr_get_d1@@Base>:
   1a900:	stp	x29, x30, [sp, #-16]!
   1a904:	mov	x2, x0
   1a908:	mrs	x1, tpidr_el0
   1a90c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1a910:	ldr	x3, [x0, #2640]
   1a914:	add	x0, x0, #0xa50
   1a918:	blr	x3
   1a91c:	mov	x29, sp
   1a920:	ldp	x29, x30, [sp], #16
   1a924:	ldr	w1, [x1, x0]
   1a928:	mov	x0, x2
   1a92c:	b	bd30 <mpfr_get_d@plt>

000000000001a930 <mpfr_get_d_2exp@@Base>:
   1a930:	stp	x29, x30, [sp, #-96]!
   1a934:	mov	x29, sp
   1a938:	stp	x19, x20, [sp, #16]
   1a93c:	mov	x20, x0
   1a940:	mov	x19, x1
   1a944:	ldr	x0, [x1, #16]
   1a948:	str	x21, [sp, #32]
   1a94c:	mov	x21, #0x8000000000000003    	// #-9223372036854775805
   1a950:	cmp	x0, x21
   1a954:	b.le	1aa20 <mpfr_get_d_2exp@@Base+0xf0>
   1a958:	ldr	w3, [x19, #8]
   1a95c:	mov	w1, w2
   1a960:	ldr	x4, [x19]
   1a964:	add	x0, sp, #0x40
   1a968:	ldr	x2, [x19, #24]
   1a96c:	str	x4, [sp, #64]
   1a970:	str	w3, [sp, #72]
   1a974:	stp	xzr, x2, [sp, #80]
   1a978:	bl	bd30 <mpfr_get_d@plt>
   1a97c:	ldr	x19, [x19, #16]
   1a980:	cmp	x19, x21
   1a984:	b.le	1a9b0 <mpfr_get_d_2exp@@Base+0x80>
   1a988:	fmov	d1, #1.000000000000000000e+00
   1a98c:	fcmp	d0, d1
   1a990:	b.ne	1a9b8 <mpfr_get_d_2exp@@Base+0x88>  // b.any
   1a994:	add	x19, x19, #0x1
   1a998:	fmov	d0, #5.000000000000000000e-01
   1a99c:	str	x19, [x20]
   1a9a0:	ldp	x19, x20, [sp, #16]
   1a9a4:	ldr	x21, [sp, #32]
   1a9a8:	ldp	x29, x30, [sp], #96
   1a9ac:	ret
   1a9b0:	mov	x19, #0x0                   	// #0
   1a9b4:	b	1a99c <mpfr_get_d_2exp@@Base+0x6c>
   1a9b8:	fmov	d2, #-1.000000000000000000e+00
   1a9bc:	fcmp	d0, d2
   1a9c0:	b.eq	1aa14 <mpfr_get_d_2exp@@Base+0xe4>  // b.none
   1a9c4:	fmov	d2, #5.000000000000000000e-01
   1a9c8:	fcmpe	d0, d2
   1a9cc:	b.lt	1a9d8 <mpfr_get_d_2exp@@Base+0xa8>  // b.tstop
   1a9d0:	fcmpe	d0, d1
   1a9d4:	b.mi	1a99c <mpfr_get_d_2exp@@Base+0x6c>  // b.first
   1a9d8:	fmov	d1, #-5.000000000000000000e-01
   1a9dc:	fcmpe	d0, d1
   1a9e0:	b.hi	1a9f0 <mpfr_get_d_2exp@@Base+0xc0>  // b.pmore
   1a9e4:	fmov	d1, #-1.000000000000000000e+00
   1a9e8:	fcmpe	d0, d1
   1a9ec:	b.gt	1a99c <mpfr_get_d_2exp@@Base+0x6c>
   1a9f0:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1a9f4:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1a9f8:	add	x2, x2, #0x600
   1a9fc:	add	x0, x0, #0x640
   1aa00:	mov	w1, #0xad                  	// #173
   1aa04:	str	d0, [sp, #56]
   1aa08:	bl	cb40 <mpfr_assert_fail@plt>
   1aa0c:	ldr	d0, [sp, #56]
   1aa10:	b	1a99c <mpfr_get_d_2exp@@Base+0x6c>
   1aa14:	add	x19, x19, #0x1
   1aa18:	fmov	d0, #-5.000000000000000000e-01
   1aa1c:	b	1a99c <mpfr_get_d_2exp@@Base+0x6c>
   1aa20:	str	xzr, [x20]
   1aa24:	mov	x1, #0x2                   	// #2
   1aa28:	movk	x1, #0x8000, lsl #48
   1aa2c:	ldr	x0, [x19, #16]
   1aa30:	cmp	x0, x1
   1aa34:	b.eq	1aa6c <mpfr_get_d_2exp@@Base+0x13c>  // b.none
   1aa38:	cmp	x0, x21
   1aa3c:	ldr	w0, [x19, #8]
   1aa40:	b.eq	1aa5c <mpfr_get_d_2exp@@Base+0x12c>  // b.none
   1aa44:	movi	d1, #0x0
   1aa48:	cmp	w0, #0x0
   1aa4c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1aa50:	fmov	d0, x0
   1aa54:	fcsel	d0, d0, d1, lt  // lt = tstop
   1aa58:	b	1a9a0 <mpfr_get_d_2exp@@Base+0x70>
   1aa5c:	tbnz	w0, #31, 1aa78 <mpfr_get_d_2exp@@Base+0x148>
   1aa60:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1aa64:	ldr	d0, [x0, #1616]
   1aa68:	b	1a9a0 <mpfr_get_d_2exp@@Base+0x70>
   1aa6c:	movi	d0, #0x0
   1aa70:	fdiv	d0, d0, d0
   1aa74:	b	1a9a0 <mpfr_get_d_2exp@@Base+0x70>
   1aa78:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1aa7c:	ldr	d0, [x0, #1608]
   1aa80:	b	1a9a0 <mpfr_get_d_2exp@@Base+0x70>
   1aa84:	nop

000000000001aa88 <mpfr_get_exp@@Base>:
   1aa88:	stp	x29, x30, [sp, #-32]!
   1aa8c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1aa90:	mov	x29, sp
   1aa94:	str	x19, [sp, #16]
   1aa98:	mov	x19, x0
   1aa9c:	ldr	x0, [x0, #16]
   1aaa0:	cmp	x0, x1
   1aaa4:	b.le	1aab4 <mpfr_get_exp@@Base+0x2c>
   1aaa8:	ldr	x19, [sp, #16]
   1aaac:	ldp	x29, x30, [sp], #32
   1aab0:	ret
   1aab4:	mov	w1, #0x1d                  	// #29
   1aab8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1aabc:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1aac0:	add	x2, x2, #0x658
   1aac4:	add	x0, x0, #0xf08
   1aac8:	bl	cb40 <mpfr_assert_fail@plt>
   1aacc:	ldr	x0, [x19, #16]
   1aad0:	ldr	x19, [sp, #16]
   1aad4:	ldp	x29, x30, [sp], #32
   1aad8:	ret
   1aadc:	nop
   1aae0:	stp	x29, x30, [sp, #-128]!
   1aae4:	cmp	x4, #0x0
   1aae8:	mov	x29, sp
   1aaec:	stp	x19, x20, [sp, #16]
   1aaf0:	stp	x21, x22, [sp, #32]
   1aaf4:	stp	x23, x24, [sp, #48]
   1aaf8:	stp	x25, x26, [sp, #64]
   1aafc:	stp	x27, x28, [sp, #80]
   1ab00:	str	x1, [x29, #104]
   1ab04:	b.gt	1ae04 <mpfr_get_exp@@Base+0x37c>
   1ab08:	mov	x26, x0
   1ab0c:	neg	x0, x3, lsl #6
   1ab10:	mov	x20, x4
   1ab14:	mov	x21, x3
   1ab18:	cmp	x0, x4
   1ab1c:	b.ge	1adec <mpfr_get_exp@@Base+0x364>  // b.tcont
   1ab20:	mov	x23, x5
   1ab24:	sub	w5, w6, #0x2
   1ab28:	cmp	w5, #0x23
   1ab2c:	adrp	x4, 5f000 <mpfr_free_pool@@Base+0x3558>
   1ab30:	add	x4, x4, #0xfd0
   1ab34:	str	xzr, [x29, #120]
   1ab38:	add	x27, x4, #0x30
   1ab3c:	lsl	x22, x3, #6
   1ab40:	mov	x24, x2
   1ab44:	mov	w28, w6
   1ab48:	mov	x19, x7
   1ab4c:	csel	x27, x4, x27, cc  // cc = lo, ul, last
   1ab50:	add	x25, x20, x22
   1ab54:	tbnz	x23, #63, 1ab78 <mpfr_get_exp@@Base+0xf0>
   1ab58:	ldr	w0, [x29, #128]
   1ab5c:	mov	x1, x3
   1ab60:	sub	x2, x22, x23
   1ab64:	cmp	w0, #0x0
   1ab68:	mov	x0, x24
   1ab6c:	cinc	x3, x25, eq  // eq = none
   1ab70:	bl	c370 <mpfr_round_p@plt>
   1ab74:	cbz	w0, 1ac9c <mpfr_get_exp@@Base+0x214>
   1ab78:	cmp	x20, #0x0
   1ab7c:	add	x0, x20, #0x3f
   1ab80:	csel	x0, x0, x20, lt  // lt = tstop
   1ab84:	mov	x2, x22
   1ab88:	ldr	w5, [x29, #128]
   1ab8c:	mov	x4, x25
   1ab90:	neg	x22, x0, asr #6
   1ab94:	mov	x1, x24
   1ab98:	neg	x20, x20
   1ab9c:	add	x6, x29, #0x74
   1aba0:	lsl	x9, x22, #3
   1aba4:	mov	w3, #0x0                   	// #0
   1aba8:	add	x25, x24, x9
   1abac:	str	x9, [x29, #96]
   1abb0:	mov	x0, x25
   1abb4:	and	x20, x20, #0x3f
   1abb8:	bl	ca20 <mpfr_round_raw@plt>
   1abbc:	sxtw	x1, w0
   1abc0:	ldr	x9, [x29, #96]
   1abc4:	cbnz	w0, 1ac78 <mpfr_get_exp@@Base+0x1f0>
   1abc8:	sub	x21, x21, x22
   1abcc:	cbnz	x20, 1ad94 <mpfr_get_exp@@Base+0x30c>
   1abd0:	add	x1, x19, #0x3
   1abd4:	cmp	x1, #0x4, lsl #12
   1abd8:	b.hi	1adac <mpfr_get_exp@@Base+0x324>  // b.pmore
   1abdc:	add	x0, x19, #0x12
   1abe0:	and	x0, x0, #0xfffffffffffffff0
   1abe4:	sub	sp, sp, x0
   1abe8:	mov	x20, sp
   1abec:	cmp	w28, #0x0
   1abf0:	mov	x3, x21
   1abf4:	cneg	w28, w28, lt  // lt = tstop
   1abf8:	mov	x2, x25
   1abfc:	mov	w1, w28
   1ac00:	mov	x0, x20
   1ac04:	bl	c5e0 <__gmpn_get_str@plt>
   1ac08:	cmp	x19, x0
   1ac0c:	b.hi	1ae1c <mpfr_get_exp@@Base+0x394>  // b.pmore
   1ac10:	ldr	x2, [x29, #104]
   1ac14:	sub	x1, x0, x19
   1ac18:	str	x1, [x2]
   1ac1c:	add	x1, x19, #0x1
   1ac20:	cmp	x1, x0
   1ac24:	b.eq	1acb4 <mpfr_get_exp@@Base+0x22c>  // b.none
   1ac28:	mov	x1, #0x0                   	// #0
   1ac2c:	cbz	x19, 1ac48 <mpfr_get_exp@@Base+0x1c0>
   1ac30:	ldrb	w2, [x20, x1]
   1ac34:	ldrb	w2, [x27, x2]
   1ac38:	strb	w2, [x26, x1]
   1ac3c:	add	x1, x1, #0x1
   1ac40:	cmp	x19, x1
   1ac44:	b.ne	1ac30 <mpfr_get_exp@@Base+0x1a8>  // b.any
   1ac48:	strb	wzr, [x26, x19]
   1ac4c:	ldr	x0, [x29, #120]
   1ac50:	cbnz	x0, 1acac <mpfr_get_exp@@Base+0x224>
   1ac54:	ldr	w0, [x29, #116]
   1ac58:	mov	sp, x29
   1ac5c:	ldp	x19, x20, [sp, #16]
   1ac60:	ldp	x21, x22, [sp, #32]
   1ac64:	ldp	x23, x24, [sp, #48]
   1ac68:	ldp	x25, x26, [sp, #64]
   1ac6c:	ldp	x27, x28, [sp, #80]
   1ac70:	ldp	x29, x30, [sp], #128
   1ac74:	ret
   1ac78:	lsl	x0, x21, #3
   1ac7c:	sub	x0, x0, #0x8
   1ac80:	cbz	x20, 1ace8 <mpfr_get_exp@@Base+0x260>
   1ac84:	sub	w20, w20, #0x1
   1ac88:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   1ac8c:	sub	x21, x21, x22
   1ac90:	lsr	x20, x1, x20
   1ac94:	str	x20, [x24, x0]
   1ac98:	b	1abd0 <mpfr_get_exp@@Base+0x148>
   1ac9c:	mov	w0, #0x3                   	// #3
   1aca0:	str	w0, [x29, #116]
   1aca4:	ldr	x0, [x29, #120]
   1aca8:	cbz	x0, 1ac54 <mpfr_get_exp@@Base+0x1cc>
   1acac:	bl	c410 <mpfr_tmp_free@plt>
   1acb0:	b	1ac54 <mpfr_get_exp@@Base+0x1cc>
   1acb4:	ldr	w1, [x29, #116]
   1acb8:	cbz	w1, 1ad04 <mpfr_get_exp@@Base+0x27c>
   1acbc:	ldr	w2, [x29, #128]
   1acc0:	cbnz	w2, 1ad28 <mpfr_get_exp@@Base+0x2a0>
   1acc4:	add	x3, x20, x0
   1acc8:	ldurb	w2, [x3, #-1]
   1accc:	lsl	w4, w2, #1
   1acd0:	cmp	w4, w28
   1acd4:	b.eq	1adbc <mpfr_get_exp@@Base+0x334>  // b.none
   1acd8:	b.ge	1ad40 <mpfr_get_exp@@Base+0x2b8>  // b.tcont
   1acdc:	mov	w0, #0xffffffff            	// #-1
   1ace0:	str	w0, [x29, #116]
   1ace4:	b	1ac28 <mpfr_get_exp@@Base+0x1a0>
   1ace8:	sub	x9, x9, #0x8
   1acec:	sub	x22, x22, #0x1
   1acf0:	str	x1, [x24, x0]
   1acf4:	add	x25, x24, x9
   1acf8:	sub	x21, x21, x22
   1acfc:	str	xzr, [x24, x9]
   1ad00:	b	1abd0 <mpfr_get_exp@@Base+0x148>
   1ad04:	add	x2, x20, x0
   1ad08:	ldurb	w2, [x2, #-1]
   1ad0c:	cbz	w2, 1ac28 <mpfr_get_exp@@Base+0x1a0>
   1ad10:	b	1acbc <mpfr_get_exp@@Base+0x234>
   1ad14:	ldurb	w1, [x3, #-2]
   1ad18:	mov	w25, #0x3                   	// #3
   1ad1c:	and	w1, w1, #0x1
   1ad20:	sub	w1, w25, w1
   1ad24:	str	w1, [x29, #128]
   1ad28:	ldr	w1, [x29, #128]
   1ad2c:	sub	w25, w1, #0x2
   1ad30:	tst	w25, #0xfffffffd
   1ad34:	b.ne	1acdc <mpfr_get_exp@@Base+0x254>  // b.any
   1ad38:	add	x1, x20, x0
   1ad3c:	ldurb	w2, [x1, #-1]
   1ad40:	cbz	w2, 1ad88 <mpfr_get_exp@@Base+0x300>
   1ad44:	cmp	x0, #0x1
   1ad48:	b.ls	1add4 <mpfr_get_exp@@Base+0x34c>  // b.plast
   1ad4c:	sub	x2, x0, #0x2
   1ad50:	sub	w28, w28, #0x1
   1ad54:	add	x1, x20, x2
   1ad58:	ldrb	w0, [x20, x2]
   1ad5c:	cmp	w0, w28
   1ad60:	b.ne	1ad80 <mpfr_get_exp@@Base+0x2f8>  // b.any
   1ad64:	add	x3, x20, #0x1
   1ad68:	sub	x2, x2, #0x1
   1ad6c:	add	x1, x20, x2
   1ad70:	strb	wzr, [x3, x2]
   1ad74:	ldrb	w0, [x20, x2]
   1ad78:	cmp	w28, w0
   1ad7c:	b.eq	1ad68 <mpfr_get_exp@@Base+0x2e0>  // b.none
   1ad80:	add	w0, w0, #0x1
   1ad84:	strb	w0, [x1]
   1ad88:	mov	w0, #0x1                   	// #1
   1ad8c:	str	w0, [x29, #116]
   1ad90:	b	1ac28 <mpfr_get_exp@@Base+0x1a0>
   1ad94:	mov	w3, w20
   1ad98:	mov	x2, x21
   1ad9c:	mov	x1, x25
   1ada0:	mov	x0, x25
   1ada4:	bl	bce0 <__gmpn_rshift@plt>
   1ada8:	b	1abd0 <mpfr_get_exp@@Base+0x148>
   1adac:	add	x0, x29, #0x78
   1adb0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1adb4:	mov	x20, x0
   1adb8:	b	1abec <mpfr_get_exp@@Base+0x164>
   1adbc:	cmp	x23, #0x0
   1adc0:	ccmp	w1, #0x0, #0x0, lt  // lt = tstop
   1adc4:	b.eq	1ad14 <mpfr_get_exp@@Base+0x28c>  // b.none
   1adc8:	mov	w0, #0xfffffffd            	// #-3
   1adcc:	str	w0, [x29, #116]
   1add0:	b	1ac4c <mpfr_get_exp@@Base+0x1c4>
   1add4:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1add8:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1addc:	add	x2, x2, #0xf58
   1ade0:	add	x0, x0, #0xf20
   1ade4:	mov	w1, #0xd2                  	// #210
   1ade8:	bl	cb40 <mpfr_assert_fail@plt>
   1adec:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1adf0:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1adf4:	add	x2, x2, #0xf30
   1adf8:	add	x0, x0, #0xf20
   1adfc:	mov	w1, #0x64                  	// #100
   1ae00:	bl	cb40 <mpfr_assert_fail@plt>
   1ae04:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1ae08:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1ae0c:	add	x2, x2, #0xf18
   1ae10:	add	x0, x0, #0xf20
   1ae14:	mov	w1, #0x62                  	// #98
   1ae18:	bl	cb40 <mpfr_assert_fail@plt>
   1ae1c:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1ae20:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1ae24:	add	x2, x2, #0xf48
   1ae28:	add	x0, x0, #0xf20
   1ae2c:	mov	w1, #0x9d                  	// #157
   1ae30:	bl	cb40 <mpfr_assert_fail@plt>
   1ae34:	nop

000000000001ae38 <mpfr_ceil_mul@@Base>:
   1ae38:	stp	x29, x30, [sp, #-96]!
   1ae3c:	mov	x6, #0x3f                  	// #63
   1ae40:	mov	w5, #0x1                   	// #1
   1ae44:	add	x4, sp, #0x38
   1ae48:	mov	x29, sp
   1ae4c:	mov	w3, #0x2                   	// #2
   1ae50:	stp	x19, x20, [sp, #16]
   1ae54:	add	x20, sp, #0x40
   1ae58:	mov	w19, w1
   1ae5c:	mov	x1, x0
   1ae60:	mov	x0, x20
   1ae64:	stp	x21, x22, [sp, #32]
   1ae68:	mov	w22, w3
   1ae6c:	sxtw	x21, w2
   1ae70:	mov	x2, #0x0                   	// #0
   1ae74:	str	x6, [sp, #64]
   1ae78:	str	w5, [sp, #72]
   1ae7c:	sub	w19, w19, #0x2
   1ae80:	str	x4, [sp, #88]
   1ae84:	bl	ba80 <mpfr_set_si_2exp@plt>
   1ae88:	adrp	x2, 81000 <__gmpfr_l2b@@Base+0x200>
   1ae8c:	add	x19, x21, w19, sxtw #1
   1ae90:	mov	w3, w22
   1ae94:	mov	x1, x20
   1ae98:	ldr	x2, [x2, #4016]
   1ae9c:	mov	x0, x20
   1aea0:	add	x2, x2, x19, lsl #5
   1aea4:	bl	bd50 <mpfr_mul@plt>
   1aea8:	mov	w1, w22
   1aeac:	mov	x0, x20
   1aeb0:	bl	c190 <mpfr_get_si@plt>
   1aeb4:	ldp	x19, x20, [sp, #16]
   1aeb8:	ldp	x21, x22, [sp, #32]
   1aebc:	ldp	x29, x30, [sp], #96
   1aec0:	ret
   1aec4:	nop

000000000001aec8 <mpfr_get_str@@Base>:
   1aec8:	stp	x29, x30, [sp, #-272]!
   1aecc:	cmn	w2, #0x24
   1aed0:	mov	x29, sp
   1aed4:	stp	x19, x20, [sp, #16]
   1aed8:	stp	x21, x22, [sp, #32]
   1aedc:	stp	x23, x24, [sp, #48]
   1aee0:	stp	x25, x26, [sp, #64]
   1aee4:	stp	x27, x28, [sp, #80]
   1aee8:	sub	sp, sp, #0x10
   1aeec:	str	x0, [x29, #168]
   1aef0:	str	w2, [x29, #208]
   1aef4:	str	x1, [x29, #216]
   1aef8:	b.lt	1b334 <mpfr_get_str@@Base+0x46c>  // b.tstop
   1aefc:	cmp	w2, #0x3e
   1af00:	add	w0, w2, #0x1
   1af04:	mov	x21, x3
   1af08:	ccmp	w0, #0x2, #0x0, le
   1af0c:	mov	w3, w2
   1af10:	b.ls	1b334 <mpfr_get_str@@Base+0x46c>  // b.plast
   1af14:	sub	w1, w2, #0x2
   1af18:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1af1c:	add	x0, x0, #0xfd0
   1af20:	cmp	w1, #0x23
   1af24:	add	x27, x0, #0x30
   1af28:	mov	x2, #0x2                   	// #2
   1af2c:	csel	x27, x0, x27, cc  // cc = lo, ul, last
   1af30:	cmp	w3, #0x0
   1af34:	cneg	w0, w3, lt  // lt = tstop
   1af38:	cmp	w5, #0x5
   1af3c:	ldr	x1, [x4, #16]
   1af40:	str	w0, [x29, #192]
   1af44:	csel	w0, w5, wzr, ne  // ne = any
   1af48:	str	w0, [x29, #196]
   1af4c:	movk	x2, #0x8000, lsl #48
   1af50:	mov	x23, x4
   1af54:	cmp	x1, x2
   1af58:	b.eq	1ba30 <mpfr_get_str@@Base+0xb68>  // b.none
   1af5c:	ldr	w19, [x4, #8]
   1af60:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1af64:	cmp	x1, x0
   1af68:	lsr	w20, w19, #31
   1af6c:	b.eq	1b3c0 <mpfr_get_str@@Base+0x4f8>  // b.none
   1af70:	mrs	x4, tpidr_el0
   1af74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1af78:	ldr	x1, [x0, #2576]
   1af7c:	add	x0, x0, #0xa10
   1af80:	blr	x1
   1af84:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1af88:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   1af8c:	str	x4, [x29, #96]
   1af90:	ldr	w0, [x4, x0]
   1af94:	str	w0, [x29, #124]
   1af98:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1af9c:	ldr	x2, [x0, #2512]
   1afa0:	add	x0, x0, #0x9d0
   1afa4:	blr	x2
   1afa8:	add	x2, x4, x0
   1afac:	ldr	x0, [x4, x0]
   1afb0:	str	x0, [x29, #112]
   1afb4:	str	x3, [x2]
   1afb8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1afbc:	ldr	x5, [x0, #2544]
   1afc0:	add	x0, x0, #0x9f0
   1afc4:	blr	x5
   1afc8:	ldr	x2, [x4, x0]
   1afcc:	str	x1, [x4, x0]
   1afd0:	str	x2, [x29, #104]
   1afd4:	cbnz	x21, 1affc <mpfr_get_str@@Base+0x134>
   1afd8:	ldr	w1, [x29, #192]
   1afdc:	mov	w2, #0x1                   	// #1
   1afe0:	ldr	x3, [x23]
   1afe4:	sub	w0, w1, #0x1
   1afe8:	tst	w0, w1
   1afec:	cset	x0, eq  // eq = none
   1aff0:	sub	x0, x3, x0
   1aff4:	bl	cb80 <mpfr_ceil_mul@plt>
   1aff8:	add	x21, x0, #0x1
   1affc:	ldr	x0, [x29, #168]
   1b000:	cbz	x0, 1ba18 <mpfr_get_str@@Base+0xb50>
   1b004:	ldr	x0, [x29, #168]
   1b008:	str	x0, [x29, #200]
   1b00c:	tbz	w19, #31, 1b020 <mpfr_get_str@@Base+0x158>
   1b010:	mov	x1, x0
   1b014:	mov	w0, #0x2d                  	// #45
   1b018:	strb	w0, [x1], #1
   1b01c:	str	x1, [x29, #200]
   1b020:	ldr	x0, [x23, #16]
   1b024:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1b028:	cmp	x0, x1
   1b02c:	b.eq	1ba88 <mpfr_get_str@@Base+0xbc0>  // b.none
   1b030:	ldr	w1, [x29, #192]
   1b034:	sub	w3, w1, #0x1
   1b038:	ands	w3, w3, w1
   1b03c:	ldr	x1, [x23, #24]
   1b040:	str	x1, [x29, #232]
   1b044:	b.eq	1b808 <mpfr_get_str@@Base+0x940>  // b.none
   1b048:	tbnz	w19, #31, 1b3a0 <mpfr_get_str@@Base+0x4d8>
   1b04c:	ldr	w19, [x29, #192]
   1b050:	mov	w2, #0x1                   	// #1
   1b054:	sub	x0, x0, #0x1
   1b058:	mov	w1, w19
   1b05c:	bl	cb80 <mpfr_ceil_mul@plt>
   1b060:	mov	w1, w19
   1b064:	mov	x20, x0
   1b068:	mov	w2, #0x0                   	// #0
   1b06c:	mov	x0, x21
   1b070:	bl	cb80 <mpfr_ceil_mul@plt>
   1b074:	add	x1, x0, #0x1
   1b078:	str	x1, [x29, #240]
   1b07c:	cmp	x21, x20
   1b080:	b.lt	1b35c <mpfr_get_str@@Base+0x494>  // b.tstop
   1b084:	cmp	x1, #0x1
   1b088:	sub	x1, x21, x20
   1b08c:	str	x1, [x29, #248]
   1b090:	b.eq	1b0b8 <mpfr_get_str@@Base+0x1f0>  // b.none
   1b094:	ldr	x1, [x29, #240]
   1b098:	cmp	x1, #0x1
   1b09c:	b.le	1bb98 <mpfr_get_str@@Base+0xcd0>
   1b0a0:	mov	w1, #0x40                  	// #64
   1b0a4:	clz	x0, x0
   1b0a8:	sub	w0, w1, w0
   1b0ac:	ldr	x1, [x29, #240]
   1b0b0:	add	x0, x1, w0, sxtw
   1b0b4:	str	x0, [x29, #240]
   1b0b8:	ldr	x0, [x29, #248]
   1b0bc:	cbnz	x0, 1b370 <mpfr_get_str@@Base+0x4a8>
   1b0c0:	ldr	x0, [x29, #240]
   1b0c4:	sub	x0, x0, #0x1
   1b0c8:	str	x0, [x29, #224]
   1b0cc:	add	x0, x29, #0x108
   1b0d0:	str	x0, [x29, #136]
   1b0d4:	add	x0, x29, #0x100
   1b0d8:	str	x0, [x29, #176]
   1b0dc:	mov	x0, #0x40                  	// #64
   1b0e0:	str	x0, [x29, #184]
   1b0e4:	nop
   1b0e8:	ldr	x0, [x29, #224]
   1b0ec:	str	xzr, [x29, #264]
   1b0f0:	asr	x26, x0, #6
   1b0f4:	add	x25, x26, #0x1
   1b0f8:	lsl	x22, x25, #3
   1b0fc:	cmp	x22, #0x4, lsl #12
   1b100:	b.hi	1b2a4 <mpfr_get_str@@Base+0x3dc>  // b.pmore
   1b104:	ldr	x19, [x23]
   1b108:	add	x0, x22, #0xf
   1b10c:	and	x0, x0, #0xfffffffffffffff0
   1b110:	cmp	x20, x21
   1b114:	sub	x19, x19, #0x1
   1b118:	sub	sp, sp, x0
   1b11c:	add	x24, sp, #0x10
   1b120:	asr	x19, x19, #6
   1b124:	add	x28, x19, #0x1
   1b128:	b.eq	1b2d0 <mpfr_get_str@@Base+0x408>  // b.none
   1b12c:	cmp	x21, x20
   1b130:	b.le	1b434 <mpfr_get_str@@Base+0x56c>
   1b134:	ldr	w2, [x29, #192]
   1b138:	mov	x4, x25
   1b13c:	ldr	x1, [x29, #176]
   1b140:	mov	x0, x24
   1b144:	ldr	x3, [x29, #248]
   1b148:	sub	x19, x19, x26
   1b14c:	bl	cbe0 <mpfr_mpn_exp@plt>
   1b150:	mov	x27, x0
   1b154:	ldr	x1, [x29, #232]
   1b158:	cmp	x25, x28
   1b15c:	csel	x4, x25, x28, ls  // ls = plast
   1b160:	add	x26, x1, x19, lsl #3
   1b164:	csel	x26, x26, x1, ls  // ls = plast
   1b168:	b.cc	1b6d8 <mpfr_get_str@@Base+0x810>  // b.lo, b.ul, b.last
   1b16c:	cmn	x0, #0x1
   1b170:	cset	w8, eq  // eq = none
   1b174:	add	x28, x25, x4
   1b178:	cmp	x27, #0x0
   1b17c:	csinc	x27, x27, xzr, gt
   1b180:	lsl	x28, x28, #3
   1b184:	add	x27, x27, #0x1
   1b188:	cmp	x28, #0x4, lsl #12
   1b18c:	b.hi	1b720 <mpfr_get_str@@Base+0x858>  // b.pmore
   1b190:	add	x0, x28, #0xf
   1b194:	and	x0, x0, #0xfffffffffffffff0
   1b198:	sub	sp, sp, x0
   1b19c:	add	x19, sp, #0x10
   1b1a0:	mov	x3, x26
   1b1a4:	mov	x2, x25
   1b1a8:	mov	x1, x24
   1b1ac:	mov	x0, x19
   1b1b0:	str	w8, [x29, #144]
   1b1b4:	add	x28, x19, x28
   1b1b8:	str	x4, [x29, #160]
   1b1bc:	bl	c7a0 <__gmpn_mul@plt>
   1b1c0:	ldr	x4, [x29, #160]
   1b1c4:	mov	x0, x19
   1b1c8:	ldr	x2, [x29, #256]
   1b1cc:	mov	x1, #0x0                   	// #0
   1b1d0:	add	x5, x19, x4, lsl #3
   1b1d4:	stp	x4, x5, [x29, #152]
   1b1d8:	ldr	x26, [x23, #16]
   1b1dc:	add	x26, x26, x2
   1b1e0:	str	x26, [x29, #256]
   1b1e4:	bl	caa0 <__gmpn_scan1@plt>
   1b1e8:	ldp	x4, x5, [x29, #152]
   1b1ec:	ldr	w8, [x29, #144]
   1b1f0:	cmp	x0, x4, lsl #6
   1b1f4:	ldur	x0, [x28, #-8]
   1b1f8:	csel	w8, w8, wzr, cs  // cs = hs, nlast
   1b1fc:	tbz	x0, #63, 1b744 <mpfr_get_str@@Base+0x87c>
   1b200:	cmp	x5, x24
   1b204:	b.eq	1b224 <mpfr_get_str@@Base+0x35c>  // b.none
   1b208:	mov	x2, x22
   1b20c:	mov	x1, x5
   1b210:	mov	x0, x24
   1b214:	str	w8, [x29, #160]
   1b218:	bl	ba10 <memcpy@plt>
   1b21c:	ldr	w8, [x29, #160]
   1b220:	ldr	x26, [x29, #256]
   1b224:	cbnz	w8, 1b32c <mpfr_get_str@@Base+0x464>
   1b228:	ldr	w0, [x29, #196]
   1b22c:	mov	x5, x27
   1b230:	ldr	w6, [x29, #208]
   1b234:	mov	x4, x26
   1b238:	str	w0, [sp]
   1b23c:	mov	x3, x25
   1b240:	ldr	x0, [x29, #200]
   1b244:	mov	x2, x24
   1b248:	ldr	x1, [x29, #216]
   1b24c:	mov	x7, x21
   1b250:	bl	1aae0 <mpfr_get_exp@@Base+0x58>
   1b254:	mov	w19, w0
   1b258:	ldr	x1, [x29, #264]
   1b25c:	cbnz	x1, 1b784 <mpfr_get_str@@Base+0x8bc>
   1b260:	cmp	w19, #0x3
   1b264:	b.eq	1b3f4 <mpfr_get_str@@Base+0x52c>  // b.none
   1b268:	cmn	w19, #0x3
   1b26c:	b.ne	1b798 <mpfr_get_str@@Base+0x8d0>  // b.any
   1b270:	cmp	x21, x20
   1b274:	add	x20, x20, #0x1
   1b278:	ldr	x0, [x29, #248]
   1b27c:	b.le	1b584 <mpfr_get_str@@Base+0x6bc>
   1b280:	sub	x0, x0, #0x1
   1b284:	str	x0, [x29, #248]
   1b288:	ldr	x0, [x29, #224]
   1b28c:	str	xzr, [x29, #264]
   1b290:	asr	x26, x0, #6
   1b294:	add	x25, x26, #0x1
   1b298:	lsl	x22, x25, #3
   1b29c:	cmp	x22, #0x4, lsl #12
   1b2a0:	b.ls	1b104 <mpfr_get_str@@Base+0x23c>  // b.plast
   1b2a4:	ldr	x0, [x29, #136]
   1b2a8:	mov	x1, x22
   1b2ac:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1b2b0:	mov	x24, x0
   1b2b4:	ldr	x19, [x23]
   1b2b8:	cmp	x20, x21
   1b2bc:	sub	x19, x19, #0x1
   1b2c0:	asr	x19, x19, #6
   1b2c4:	add	x28, x19, #0x1
   1b2c8:	b.ne	1b12c <mpfr_get_str@@Base+0x264>  // b.any
   1b2cc:	nop
   1b2d0:	cmp	x25, x28
   1b2d4:	b.cs	1b590 <mpfr_get_str@@Base+0x6c8>  // b.hs, b.nlast
   1b2d8:	ldr	x0, [x29, #232]
   1b2dc:	sub	x19, x19, x26
   1b2e0:	mov	x1, #0x0                   	// #0
   1b2e4:	bl	caa0 <__gmpn_scan1@plt>
   1b2e8:	lsl	x1, x19, #6
   1b2ec:	cmp	x0, x1
   1b2f0:	cset	w8, cs  // cs = hs, nlast
   1b2f4:	cset	x27, cc  // cc = lo, ul, last
   1b2f8:	ldr	x0, [x29, #232]
   1b2fc:	add	x1, x0, x19, lsl #3
   1b300:	cmp	x1, x24
   1b304:	b.eq	1b31c <mpfr_get_str@@Base+0x454>  // b.none
   1b308:	mov	x2, x22
   1b30c:	mov	x0, x24
   1b310:	str	w8, [x29, #160]
   1b314:	bl	ba10 <memcpy@plt>
   1b318:	ldr	w8, [x29, #160]
   1b31c:	ldr	x26, [x23, #16]
   1b320:	sub	x26, x26, x25, lsl #6
   1b324:	str	x26, [x29, #256]
   1b328:	cbz	w8, 1b228 <mpfr_get_str@@Base+0x360>
   1b32c:	mov	x27, #0xffffffffffffffff    	// #-1
   1b330:	b	1b228 <mpfr_get_str@@Base+0x360>
   1b334:	mov	x1, #0x0                   	// #0
   1b338:	mov	sp, x29
   1b33c:	mov	x0, x1
   1b340:	ldp	x19, x20, [sp, #16]
   1b344:	ldp	x21, x22, [sp, #32]
   1b348:	ldp	x23, x24, [sp, #48]
   1b34c:	ldp	x25, x26, [sp, #64]
   1b350:	ldp	x27, x28, [sp, #80]
   1b354:	ldp	x29, x30, [sp], #272
   1b358:	ret
   1b35c:	cmp	x1, #0x1
   1b360:	sub	x1, x20, x21
   1b364:	str	x1, [x29, #248]
   1b368:	b.ne	1b094 <mpfr_get_str@@Base+0x1cc>  // b.any
   1b36c:	nop
   1b370:	ldr	x0, [x29, #248]
   1b374:	cmp	x0, #0x1
   1b378:	b.eq	1b0c0 <mpfr_get_str@@Base+0x1f8>  // b.none
   1b37c:	sub	x0, x0, #0x1
   1b380:	mov	w1, #0x40                  	// #64
   1b384:	clz	x0, x0
   1b388:	mov	w2, #0x3                   	// #3
   1b38c:	sub	w0, w1, w0
   1b390:	ldr	x1, [x29, #240]
   1b394:	smaddl	x0, w0, w2, x1
   1b398:	str	x0, [x29, #240]
   1b39c:	b	1b0c0 <mpfr_get_str@@Base+0x1f8>
   1b3a0:	ldr	w2, [x29, #196]
   1b3a4:	cmp	w2, #0x2
   1b3a8:	b.eq	1bb58 <mpfr_get_str@@Base+0xc90>  // b.none
   1b3ac:	cmp	w2, #0x3
   1b3b0:	mov	w1, #0x2                   	// #2
   1b3b4:	csel	w1, w2, w1, ne  // ne = any
   1b3b8:	str	w1, [x29, #196]
   1b3bc:	b	1b04c <mpfr_get_str@@Base+0x184>
   1b3c0:	ldr	x0, [x29, #168]
   1b3c4:	cbz	x0, 1bad8 <mpfr_get_str@@Base+0xc10>
   1b3c8:	cmp	w19, #0x0
   1b3cc:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1b3d0:	add	x2, x2, #0xf68
   1b3d4:	adrp	x1, 5f000 <mpfr_free_pool@@Base+0x3558>
   1b3d8:	ldr	x19, [x29, #168]
   1b3dc:	add	x1, x1, #0x428
   1b3e0:	csel	x1, x2, x1, lt  // lt = tstop
   1b3e4:	mov	x0, x19
   1b3e8:	bl	c910 <strcpy@plt>
   1b3ec:	mov	x1, x19
   1b3f0:	b	1b338 <mpfr_get_str@@Base+0x470>
   1b3f4:	ldr	x1, [x29, #240]
   1b3f8:	mov	x0, #0xfffffffffffffeff    	// #-257
   1b3fc:	movk	x0, #0x7fff, lsl #48
   1b400:	sub	x0, x0, x1
   1b404:	ldr	x1, [x29, #184]
   1b408:	cmp	x0, x1
   1b40c:	b.lt	1b978 <mpfr_get_str@@Base+0xab0>  // b.tstop
   1b410:	ldr	x0, [x29, #240]
   1b414:	add	x0, x0, x1
   1b418:	str	x0, [x29, #240]
   1b41c:	sub	x1, x0, #0x1
   1b420:	str	x1, [x29, #224]
   1b424:	add	x0, x0, x0, lsr #63
   1b428:	asr	x0, x0, #1
   1b42c:	str	x0, [x29, #184]
   1b430:	b	1b0e8 <mpfr_get_str@@Base+0x220>
   1b434:	ldr	w2, [x29, #192]
   1b438:	mov	x4, x25
   1b43c:	ldr	x1, [x29, #176]
   1b440:	mov	x0, x24
   1b444:	ldr	x3, [x29, #248]
   1b448:	bl	cbe0 <mpfr_mpn_exp@plt>
   1b44c:	cmn	x0, #0x1
   1b450:	mov	x19, x0
   1b454:	cset	w0, eq  // eq = none
   1b458:	str	w0, [x29, #160]
   1b45c:	lsl	x2, x25, #4
   1b460:	cmp	x2, #0x4, lsl #12
   1b464:	b.hi	1b9c8 <mpfr_get_str@@Base+0xb00>  // b.pmore
   1b468:	sub	sp, sp, x2
   1b46c:	add	x3, sp, #0x10
   1b470:	add	x1, x22, #0x8
   1b474:	cmp	x1, #0x4, lsl #12
   1b478:	b.hi	1b990 <mpfr_get_str@@Base+0xac8>  // b.pmore
   1b47c:	add	x0, x22, #0x17
   1b480:	and	x0, x0, #0xfffffffffffffff0
   1b484:	sub	sp, sp, x0
   1b488:	add	x26, sp, #0x10
   1b48c:	add	x0, x22, #0xf
   1b490:	and	x0, x0, #0xfffffffffffffff0
   1b494:	sub	sp, sp, x0
   1b498:	add	x27, sp, #0x10
   1b49c:	cmp	x28, x25, lsl #1
   1b4a0:	lsl	x4, x25, #1
   1b4a4:	b.cc	1b5d8 <mpfr_get_str@@Base+0x710>  // b.lo, b.ul, b.last
   1b4a8:	ldr	x0, [x29, #232]
   1b4ac:	sub	x1, x28, x4
   1b4b0:	add	x1, x0, x1, lsl #3
   1b4b4:	cmp	x1, x3
   1b4b8:	b.eq	1b4d0 <mpfr_get_str@@Base+0x608>  // b.none
   1b4bc:	mov	x0, x3
   1b4c0:	str	x4, [x29, #152]
   1b4c4:	bl	ba10 <memcpy@plt>
   1b4c8:	mov	x3, x0
   1b4cc:	ldr	x4, [x29, #152]
   1b4d0:	ldr	w0, [x29, #160]
   1b4d4:	cmp	w0, #0x0
   1b4d8:	lsl	x0, x25, #7
   1b4dc:	str	x0, [x29, #160]
   1b4e0:	ccmp	x4, x28, #0x2, ne  // ne = any
   1b4e4:	b.cc	1b63c <mpfr_get_str@@Base+0x774>  // b.lo, b.ul, b.last
   1b4e8:	mov	x0, x26
   1b4ec:	mov	x6, x25
   1b4f0:	mov	x5, x24
   1b4f4:	mov	x1, x27
   1b4f8:	mov	x2, #0x0                   	// #0
   1b4fc:	bl	ba60 <__gmpn_tdiv_qr@plt>
   1b500:	ldr	x0, [x23, #16]
   1b504:	cmn	x19, #0x1
   1b508:	ldr	x4, [x29, #256]
   1b50c:	mov	w8, #0x0                   	// #0
   1b510:	sub	x4, x0, x4
   1b514:	lsl	x0, x25, #7
   1b518:	sub	x4, x4, x0
   1b51c:	str	x4, [x29, #256]
   1b520:	b.ne	1b540 <mpfr_get_str@@Base+0x678>  // b.any
   1b524:	mov	x0, x27
   1b528:	mov	x1, x25
   1b52c:	str	x4, [x29, #160]
   1b530:	bl	c860 <__gmpn_popcount@plt>
   1b534:	cmp	x0, #0x0
   1b538:	ldr	x4, [x29, #160]
   1b53c:	cset	w8, eq  // eq = none
   1b540:	ldr	x3, [x26, x25, lsl #3]
   1b544:	cmp	x3, #0x1
   1b548:	b.eq	1b6a0 <mpfr_get_str@@Base+0x7d8>  // b.none
   1b54c:	cmp	x26, x24
   1b550:	b.eq	1b790 <mpfr_get_str@@Base+0x8c8>  // b.none
   1b554:	mov	x1, x26
   1b558:	mov	x2, x22
   1b55c:	mov	x0, x24
   1b560:	str	w8, [x29, #160]
   1b564:	bl	ba10 <memcpy@plt>
   1b568:	ldr	w8, [x29, #160]
   1b56c:	ldr	x26, [x29, #256]
   1b570:	cmn	x19, #0x1
   1b574:	add	x19, x19, #0x2
   1b578:	mov	x0, #0x2                   	// #2
   1b57c:	csel	x27, x19, x0, ne  // ne = any
   1b580:	b	1b224 <mpfr_get_str@@Base+0x35c>
   1b584:	add	x0, x0, #0x1
   1b588:	str	x0, [x29, #248]
   1b58c:	b	1b0e8 <mpfr_get_str@@Base+0x220>
   1b590:	b.eq	1bb88 <mpfr_get_str@@Base+0xcc0>  // b.none
   1b594:	sub	x19, x26, x19
   1b598:	ldr	x1, [x29, #232]
   1b59c:	lsl	x19, x19, #3
   1b5a0:	add	x0, x24, x19
   1b5a4:	cmp	x0, x1
   1b5a8:	b.eq	1b5b4 <mpfr_get_str@@Base+0x6ec>  // b.none
   1b5ac:	lsl	x2, x28, #3
   1b5b0:	bl	ba10 <memcpy@plt>
   1b5b4:	mov	x2, x19
   1b5b8:	mov	x0, x24
   1b5bc:	mov	w1, #0x0                   	// #0
   1b5c0:	bl	c110 <memset@plt>
   1b5c4:	ldr	x26, [x23, #16]
   1b5c8:	mov	x27, #0xffffffffffffffff    	// #-1
   1b5cc:	sub	x26, x26, x25, lsl #6
   1b5d0:	str	x26, [x29, #256]
   1b5d4:	b	1b228 <mpfr_get_str@@Base+0x360>
   1b5d8:	sub	x5, x4, x28
   1b5dc:	ldr	x1, [x29, #232]
   1b5e0:	lsl	x5, x5, #3
   1b5e4:	add	x0, x3, x5
   1b5e8:	cmp	x0, x1
   1b5ec:	b.eq	1b608 <mpfr_get_str@@Base+0x740>  // b.none
   1b5f0:	lsl	x2, x28, #3
   1b5f4:	str	x3, [x29, #128]
   1b5f8:	stp	x5, x4, [x29, #144]
   1b5fc:	bl	ba10 <memcpy@plt>
   1b600:	ldp	x5, x4, [x29, #144]
   1b604:	ldr	x3, [x29, #128]
   1b608:	mov	x0, x3
   1b60c:	mov	x2, x5
   1b610:	mov	w1, #0x0                   	// #0
   1b614:	str	x4, [x29, #152]
   1b618:	bl	c110 <memset@plt>
   1b61c:	mov	x3, x0
   1b620:	ldr	w0, [x29, #160]
   1b624:	ldr	x4, [x29, #152]
   1b628:	cmp	w0, #0x0
   1b62c:	lsl	x0, x25, #7
   1b630:	str	x0, [x29, #160]
   1b634:	ccmp	x4, x28, #0x2, ne  // ne = any
   1b638:	b.cs	1b4e8 <mpfr_get_str@@Base+0x620>  // b.hs, b.nlast
   1b63c:	ldr	x0, [x29, #232]
   1b640:	mov	x1, #0x0                   	// #0
   1b644:	stp	x3, x4, [x29, #152]
   1b648:	bl	caa0 <__gmpn_scan1@plt>
   1b64c:	ldp	x3, x4, [x29, #152]
   1b650:	sub	x8, x28, x4
   1b654:	cmp	x0, x8, lsl #6
   1b658:	b.cs	1b9e4 <mpfr_get_str@@Base+0xb1c>  // b.hs, b.nlast
   1b65c:	mov	x0, x26
   1b660:	mov	x1, x27
   1b664:	mov	x6, x25
   1b668:	mov	x5, x24
   1b66c:	mov	x2, #0x0                   	// #0
   1b670:	bl	ba60 <__gmpn_tdiv_qr@plt>
   1b674:	ldr	x0, [x23, #16]
   1b678:	mov	w8, #0x0                   	// #0
   1b67c:	ldr	x4, [x29, #256]
   1b680:	sub	x4, x0, x4
   1b684:	lsl	x0, x25, #7
   1b688:	sub	x4, x4, x0
   1b68c:	str	x4, [x29, #256]
   1b690:	ldr	x3, [x26, x25, lsl #3]
   1b694:	cmp	x3, #0x1
   1b698:	b.ne	1b54c <mpfr_get_str@@Base+0x684>  // b.any
   1b69c:	nop
   1b6a0:	sub	x22, x22, #0x8
   1b6a4:	mov	x1, x26
   1b6a8:	mov	x2, x25
   1b6ac:	mov	x0, x24
   1b6b0:	str	w8, [x29, #160]
   1b6b4:	bl	bce0 <__gmpn_rshift@plt>
   1b6b8:	ldr	x0, [x24, x22]
   1b6bc:	ldr	w8, [x29, #160]
   1b6c0:	orr	x0, x0, #0x8000000000000000
   1b6c4:	str	x0, [x24, x22]
   1b6c8:	ldr	x26, [x29, #256]
   1b6cc:	add	x26, x26, #0x1
   1b6d0:	str	x26, [x29, #256]
   1b6d4:	b	1b570 <mpfr_get_str@@Base+0x6a8>
   1b6d8:	cmn	x0, #0x1
   1b6dc:	mov	w8, #0x0                   	// #0
   1b6e0:	b.ne	1b174 <mpfr_get_str@@Base+0x2ac>  // b.any
   1b6e4:	mov	x0, x1
   1b6e8:	mov	x1, #0x0                   	// #0
   1b6ec:	str	x4, [x29, #160]
   1b6f0:	bl	caa0 <__gmpn_scan1@plt>
   1b6f4:	ldr	x4, [x29, #160]
   1b6f8:	cmp	x0, x19, lsl #6
   1b6fc:	cset	w8, cs  // cs = hs, nlast
   1b700:	cmp	x27, #0x0
   1b704:	add	x28, x25, x4
   1b708:	csinc	x27, x27, xzr, gt
   1b70c:	add	x27, x27, #0x1
   1b710:	lsl	x28, x28, #3
   1b714:	cmp	x28, #0x4, lsl #12
   1b718:	b.ls	1b190 <mpfr_get_str@@Base+0x2c8>  // b.plast
   1b71c:	nop
   1b720:	ldr	x0, [x29, #136]
   1b724:	mov	x1, x28
   1b728:	str	x4, [x29, #152]
   1b72c:	str	w8, [x29, #160]
   1b730:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1b734:	mov	x19, x0
   1b738:	ldr	w8, [x29, #160]
   1b73c:	ldr	x4, [x29, #152]
   1b740:	b	1b1a0 <mpfr_get_str@@Base+0x2d8>
   1b744:	mov	x1, x5
   1b748:	mov	x2, x25
   1b74c:	mov	x0, x24
   1b750:	mov	w3, #0x1                   	// #1
   1b754:	str	w8, [x29, #152]
   1b758:	bl	bcc0 <__gmpn_lshift@plt>
   1b75c:	ldr	x5, [x29, #160]
   1b760:	ldr	x1, [x24]
   1b764:	ldur	x0, [x5, #-8]
   1b768:	ldr	w8, [x29, #152]
   1b76c:	orr	x0, x1, x0, lsr #63
   1b770:	str	x0, [x24]
   1b774:	ldr	x26, [x29, #256]
   1b778:	sub	x26, x26, #0x1
   1b77c:	str	x26, [x29, #256]
   1b780:	b	1b224 <mpfr_get_str@@Base+0x35c>
   1b784:	mov	x0, x1
   1b788:	bl	c410 <mpfr_tmp_free@plt>
   1b78c:	b	1b260 <mpfr_get_str@@Base+0x398>
   1b790:	mov	x26, x4
   1b794:	b	1b570 <mpfr_get_str@@Base+0x6a8>
   1b798:	ldr	x3, [x29, #216]
   1b79c:	cmp	w19, #0x0
   1b7a0:	ldr	w4, [x29, #124]
   1b7a4:	ldr	x1, [x29, #168]
   1b7a8:	orr	w2, w4, #0x8
   1b7ac:	ldr	x0, [x3]
   1b7b0:	add	x20, x0, x20
   1b7b4:	str	x20, [x3]
   1b7b8:	csel	w3, w2, w4, ne  // ne = any
   1b7bc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1b7c0:	ldr	x2, [x0, #2576]
   1b7c4:	add	x0, x0, #0xa10
   1b7c8:	blr	x2
   1b7cc:	ldr	x2, [x29, #96]
   1b7d0:	str	w3, [x2, x0]
   1b7d4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1b7d8:	ldr	x3, [x0, #2512]
   1b7dc:	add	x0, x0, #0x9d0
   1b7e0:	blr	x3
   1b7e4:	ldr	x3, [x29, #112]
   1b7e8:	str	x3, [x2, x0]
   1b7ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1b7f0:	ldr	x3, [x0, #2544]
   1b7f4:	add	x0, x0, #0x9f0
   1b7f8:	blr	x3
   1b7fc:	ldr	x3, [x29, #104]
   1b800:	str	x3, [x2, x0]
   1b804:	b	1b338 <mpfr_get_str@@Base+0x470>
   1b808:	ldrsw	x1, [x29, #192]
   1b80c:	mov	w24, #0x3f                  	// #63
   1b810:	sub	x20, x0, #0x1
   1b814:	clz	x1, x1
   1b818:	sub	w1, w24, w1
   1b81c:	str	w1, [x29, #240]
   1b820:	sxtw	x7, w1
   1b824:	sdiv	x20, x20, x7
   1b828:	msub	x28, x7, x20, x0
   1b82c:	cmp	x28, #0x0
   1b830:	b.le	1ba80 <mpfr_get_str@@Base+0xbb8>
   1b834:	add	x20, x20, #0x1
   1b838:	sub	x4, x21, #0x1
   1b83c:	str	xzr, [x29, #264]
   1b840:	madd	x4, x4, x7, x28
   1b844:	sub	x19, x4, #0x1
   1b848:	asr	x19, x19, #6
   1b84c:	add	x24, x19, #0x1
   1b850:	add	x19, x19, #0x2
   1b854:	str	x24, [x29, #248]
   1b858:	lsl	x26, x19, #3
   1b85c:	lsl	x22, x24, #6
   1b860:	cmp	x26, #0x4, lsl #12
   1b864:	sub	x22, x22, x4
   1b868:	b.hi	1baec <mpfr_get_str@@Base+0xc24>  // b.pmore
   1b86c:	add	x0, x26, #0xf
   1b870:	and	x0, x0, #0xfffffffffffffff0
   1b874:	sub	sp, sp, x0
   1b878:	ldr	x2, [x23]
   1b87c:	add	x25, sp, #0x10
   1b880:	ldr	w0, [x23, #8]
   1b884:	cmp	w0, #0x0
   1b888:	cset	w3, lt  // lt = tstop
   1b88c:	ldr	w5, [x29, #196]
   1b890:	sub	x23, x26, #0x8
   1b894:	ldr	x1, [x29, #232]
   1b898:	add	x6, x29, #0x100
   1b89c:	mov	x0, x25
   1b8a0:	str	x7, [x29, #248]
   1b8a4:	bl	ca20 <mpfr_round_raw@plt>
   1b8a8:	sxtw	x1, w0
   1b8ac:	str	x1, [x25, x23]
   1b8b0:	cbz	x1, 1b8cc <mpfr_get_str@@Base+0xa04>
   1b8b4:	ldr	x7, [x29, #248]
   1b8b8:	cmp	x7, x28
   1b8bc:	b.eq	1bb64 <mpfr_get_str@@Base+0xc9c>  // b.none
   1b8c0:	mov	x24, x19
   1b8c4:	mov	x23, x26
   1b8c8:	str	x19, [x29, #248]
   1b8cc:	cbnz	x22, 1bb2c <mpfr_get_str@@Base+0xc64>
   1b8d0:	ldr	w1, [x29, #192]
   1b8d4:	mov	x2, x25
   1b8d8:	ldr	x19, [x29, #200]
   1b8dc:	mov	x3, x24
   1b8e0:	mov	x0, x19
   1b8e4:	bl	c5e0 <__gmpn_get_str@plt>
   1b8e8:	mov	x0, x19
   1b8ec:	add	x2, x21, x19
   1b8f0:	cbz	x21, 1b90c <mpfr_get_str@@Base+0xa44>
   1b8f4:	nop
   1b8f8:	ldrb	w1, [x0]
   1b8fc:	ldrb	w1, [x27, x1]
   1b900:	strb	w1, [x0], #1
   1b904:	cmp	x2, x0
   1b908:	b.ne	1b8f8 <mpfr_get_str@@Base+0xa30>  // b.any
   1b90c:	ldr	x0, [x29, #200]
   1b910:	strb	wzr, [x0, x21]
   1b914:	ldr	x0, [x29, #216]
   1b918:	str	x20, [x0]
   1b91c:	ldr	x0, [x29, #264]
   1b920:	cbnz	x0, 1bb80 <mpfr_get_str@@Base+0xcb8>
   1b924:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1b928:	ldr	x1, [x0, #2576]
   1b92c:	add	x0, x0, #0xa10
   1b930:	blr	x1
   1b934:	ldr	w1, [x29, #124]
   1b938:	ldr	x2, [x29, #96]
   1b93c:	str	w1, [x2, x0]
   1b940:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1b944:	ldr	x1, [x0, #2512]
   1b948:	add	x0, x0, #0x9d0
   1b94c:	blr	x1
   1b950:	ldr	x1, [x29, #112]
   1b954:	str	x1, [x2, x0]
   1b958:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1b95c:	ldr	x3, [x0, #2544]
   1b960:	add	x0, x0, #0x9f0
   1b964:	blr	x3
   1b968:	ldr	x3, [x29, #104]
   1b96c:	str	x3, [x2, x0]
   1b970:	ldr	x1, [x29, #168]
   1b974:	b	1b338 <mpfr_get_str@@Base+0x470>
   1b978:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1b97c:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1b980:	add	x2, x2, #0xf80
   1b984:	add	x0, x0, #0xf20
   1b988:	mov	w1, #0x9f9                 	// #2553
   1b98c:	bl	cb40 <mpfr_assert_fail@plt>
   1b990:	ldr	x0, [x29, #136]
   1b994:	stp	x3, x2, [x29, #144]
   1b998:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1b99c:	mov	x26, x0
   1b9a0:	cmp	x22, #0x4, lsl #12
   1b9a4:	ldp	x3, x2, [x29, #144]
   1b9a8:	b.ls	1b48c <mpfr_get_str@@Base+0x5c4>  // b.plast
   1b9ac:	ldr	x0, [x29, #136]
   1b9b0:	mov	x1, x22
   1b9b4:	stp	x3, x2, [x29, #144]
   1b9b8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1b9bc:	mov	x27, x0
   1b9c0:	ldp	x3, x2, [x29, #144]
   1b9c4:	b	1b49c <mpfr_get_str@@Base+0x5d4>
   1b9c8:	ldr	x0, [x29, #136]
   1b9cc:	mov	x1, x2
   1b9d0:	str	x2, [x29, #152]
   1b9d4:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1b9d8:	mov	x3, x0
   1b9dc:	ldr	x2, [x29, #152]
   1b9e0:	b	1b470 <mpfr_get_str@@Base+0x5a8>
   1b9e4:	mov	x0, x26
   1b9e8:	mov	x6, x25
   1b9ec:	mov	x5, x24
   1b9f0:	mov	x1, x27
   1b9f4:	mov	x2, #0x0                   	// #0
   1b9f8:	bl	ba60 <__gmpn_tdiv_qr@plt>
   1b9fc:	ldr	x0, [x23, #16]
   1ba00:	ldr	x4, [x29, #256]
   1ba04:	sub	x4, x0, x4
   1ba08:	lsl	x0, x25, #7
   1ba0c:	sub	x4, x4, x0
   1ba10:	str	x4, [x29, #256]
   1ba14:	b	1b524 <mpfr_get_str@@Base+0x65c>
   1ba18:	and	x0, x20, #0xff
   1ba1c:	add	x0, x0, #0x1
   1ba20:	add	x0, x0, x21
   1ba24:	bl	ccf0 <mpfr_allocate_func@plt>
   1ba28:	str	x0, [x29, #168]
   1ba2c:	b	1b004 <mpfr_get_str@@Base+0x13c>
   1ba30:	ldr	x0, [x29, #168]
   1ba34:	cbz	x0, 1bac8 <mpfr_get_str@@Base+0xc00>
   1ba38:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1ba3c:	add	x2, x2, #0x420
   1ba40:	ldr	x4, [x29, #168]
   1ba44:	mrs	x1, tpidr_el0
   1ba48:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1ba4c:	ldr	x3, [x0, #2576]
   1ba50:	add	x0, x0, #0xa10
   1ba54:	blr	x3
   1ba58:	add	x0, x1, x0
   1ba5c:	ldr	w3, [x2]
   1ba60:	mov	x1, x4
   1ba64:	str	w3, [x4]
   1ba68:	ldrh	w3, [x2, #4]
   1ba6c:	ldr	w2, [x0]
   1ba70:	strh	w3, [x4, #4]
   1ba74:	orr	w2, w2, #0x4
   1ba78:	str	w2, [x0]
   1ba7c:	b	1b338 <mpfr_get_str@@Base+0x470>
   1ba80:	add	x28, x28, x7
   1ba84:	b	1b838 <mpfr_get_str@@Base+0x970>
   1ba88:	ldr	x19, [x29, #200]
   1ba8c:	mov	w1, #0x30                  	// #48
   1ba90:	mov	x2, x21
   1ba94:	mov	x0, x19
   1ba98:	bl	c110 <memset@plt>
   1ba9c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1baa0:	ldr	x1, [x0, #2576]
   1baa4:	add	x0, x0, #0xa10
   1baa8:	blr	x1
   1baac:	strb	wzr, [x19, x21]
   1bab0:	ldr	x1, [x29, #216]
   1bab4:	ldr	w3, [x29, #124]
   1bab8:	ldr	x2, [x29, #96]
   1babc:	str	xzr, [x1]
   1bac0:	ldr	x1, [x29, #168]
   1bac4:	b	1b7d0 <mpfr_get_str@@Base+0x908>
   1bac8:	mov	x0, #0x6                   	// #6
   1bacc:	bl	ccf0 <mpfr_allocate_func@plt>
   1bad0:	str	x0, [x29, #168]
   1bad4:	b	1ba38 <mpfr_get_str@@Base+0xb70>
   1bad8:	add	w0, w20, #0x6
   1badc:	sxtw	x0, w0
   1bae0:	bl	ccf0 <mpfr_allocate_func@plt>
   1bae4:	str	x0, [x29, #168]
   1bae8:	b	1b3c8 <mpfr_get_str@@Base+0x500>
   1baec:	mov	x1, x26
   1baf0:	add	x0, x29, #0x108
   1baf4:	str	x7, [x29, #208]
   1baf8:	str	x4, [x29, #224]
   1bafc:	str	w3, [x29, #248]
   1bb00:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1bb04:	ldr	x1, [x23, #16]
   1bb08:	mov	x25, x0
   1bb0c:	ldr	w3, [x29, #248]
   1bb10:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1bb14:	cmp	x1, x0
   1bb18:	ldr	x2, [x23]
   1bb1c:	ldr	x7, [x29, #208]
   1bb20:	ldr	x4, [x29, #224]
   1bb24:	b.eq	1b88c <mpfr_get_str@@Base+0x9c4>  // b.none
   1bb28:	b	1b880 <mpfr_get_str@@Base+0x9b8>
   1bb2c:	add	x23, x25, x23
   1bb30:	mov	x2, x24
   1bb34:	mov	w3, w22
   1bb38:	mov	x1, x25
   1bb3c:	mov	x0, x25
   1bb40:	bl	bce0 <__gmpn_rshift@plt>
   1bb44:	ldur	x0, [x23, #-8]
   1bb48:	sub	x26, x24, #0x1
   1bb4c:	cmp	x0, #0x0
   1bb50:	csel	x24, x26, x24, eq  // eq = none
   1bb54:	b	1b8d0 <mpfr_get_str@@Base+0xa08>
   1bb58:	mov	w1, #0x3                   	// #3
   1bb5c:	str	w1, [x29, #196]
   1bb60:	b	1b04c <mpfr_get_str@@Base+0x184>
   1bb64:	ldr	w3, [x29, #240]
   1bb68:	mov	x2, x19
   1bb6c:	add	x20, x20, #0x1
   1bb70:	mov	x1, x25
   1bb74:	mov	x0, x25
   1bb78:	bl	bce0 <__gmpn_rshift@plt>
   1bb7c:	b	1b8cc <mpfr_get_str@@Base+0xa04>
   1bb80:	bl	c410 <mpfr_tmp_free@plt>
   1bb84:	b	1b924 <mpfr_get_str@@Base+0xa5c>
   1bb88:	sub	x19, x19, x26
   1bb8c:	mov	x27, #0x0                   	// #0
   1bb90:	mov	w8, #0x1                   	// #1
   1bb94:	b	1b2f8 <mpfr_get_str@@Base+0x430>
   1bb98:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1bb9c:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   1bba0:	add	x2, x2, #0xf70
   1bba4:	add	x0, x0, #0xf20
   1bba8:	mov	w1, #0x983                 	// #2435
   1bbac:	bl	cb40 <mpfr_assert_fail@plt>

000000000001bbb0 <mpfr_free_str@@Base>:
   1bbb0:	stp	x29, x30, [sp, #-32]!
   1bbb4:	mov	x29, sp
   1bbb8:	str	x19, [sp, #16]
   1bbbc:	mov	x19, x0
   1bbc0:	bl	bab0 <strlen@plt>
   1bbc4:	mov	x1, x0
   1bbc8:	mov	x0, x19
   1bbcc:	add	x1, x1, #0x1
   1bbd0:	ldr	x19, [sp, #16]
   1bbd4:	ldp	x29, x30, [sp], #32
   1bbd8:	b	cc20 <mpfr_free_func@plt>
   1bbdc:	nop

000000000001bbe0 <mpfr_init@@Base>:
   1bbe0:	stp	x29, x30, [sp, #-16]!
   1bbe4:	mov	x2, x0
   1bbe8:	mrs	x1, tpidr_el0
   1bbec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1bbf0:	ldr	x3, [x0, #2528]
   1bbf4:	add	x0, x0, #0x9e0
   1bbf8:	blr	x3
   1bbfc:	mov	x29, sp
   1bc00:	ldp	x29, x30, [sp], #16
   1bc04:	ldr	x1, [x1, x0]
   1bc08:	mov	x0, x2
   1bc0c:	b	ca80 <mpfr_init2@plt>

000000000001bc10 <__gmpfr_inp_str@@Base>:
   1bc10:	stp	x29, x30, [sp, #-112]!
   1bc14:	mov	x29, sp
   1bc18:	stp	x19, x20, [sp, #16]
   1bc1c:	stp	x21, x22, [sp, #32]
   1bc20:	mov	x21, x1
   1bc24:	stp	x23, x24, [sp, #48]
   1bc28:	mov	x24, x0
   1bc2c:	mov	x0, #0x64                  	// #100
   1bc30:	stp	x25, x26, [sp, #64]
   1bc34:	mov	w25, w2
   1bc38:	mov	w26, w3
   1bc3c:	stp	x27, x28, [sp, #80]
   1bc40:	bl	ccf0 <mpfr_allocate_func@plt>
   1bc44:	mov	x20, x0
   1bc48:	bl	c630 <__ctype_b_loc@plt>
   1bc4c:	mov	x23, x0
   1bc50:	mov	x27, #0x0                   	// #0
   1bc54:	nop
   1bc58:	mov	x0, x21
   1bc5c:	bl	c2a0 <getc@plt>
   1bc60:	ldr	x1, [x23]
   1bc64:	mov	w19, w0
   1bc68:	mov	x22, x27
   1bc6c:	add	x27, x27, #0x1
   1bc70:	ldrh	w0, [x1, w19, sxtw #1]
   1bc74:	tbnz	w0, #13, 1bc58 <__gmpfr_inp_str@@Base+0x48>
   1bc78:	mov	x27, #0x0                   	// #0
   1bc7c:	mov	x28, #0x64                  	// #100
   1bc80:	mov	x0, x21
   1bc84:	cmn	w19, #0x1
   1bc88:	add	x2, x20, x27
   1bc8c:	b.eq	1bce0 <__gmpfr_inp_str@@Base+0xd0>  // b.none
   1bc90:	ldr	x1, [x23]
   1bc94:	ldrh	w1, [x1, w19, sxtw #1]
   1bc98:	tbnz	w1, #13, 1bce0 <__gmpfr_inp_str@@Base+0xd0>
   1bc9c:	strb	w19, [x2]
   1bca0:	add	x27, x27, #0x1
   1bca4:	bl	c2a0 <getc@plt>
   1bca8:	mov	w19, w0
   1bcac:	cmp	x28, x27
   1bcb0:	b.hi	1bc80 <__gmpfr_inp_str@@Base+0x70>  // b.pmore
   1bcb4:	add	x2, x28, x28, lsl #1
   1bcb8:	mov	x1, x28
   1bcbc:	mov	x0, x20
   1bcc0:	lsr	x28, x2, #1
   1bcc4:	mov	x2, x28
   1bcc8:	bl	c1c0 <mpfr_reallocate_func@plt>
   1bccc:	mov	x20, x0
   1bcd0:	cmn	w19, #0x1
   1bcd4:	mov	x0, x21
   1bcd8:	add	x2, x20, x27
   1bcdc:	b.ne	1bc90 <__gmpfr_inp_str@@Base+0x80>  // b.any
   1bce0:	mov	x1, x21
   1bce4:	mov	w0, w19
   1bce8:	str	x2, [sp, #104]
   1bcec:	bl	c730 <ungetc@plt>
   1bcf0:	ldr	x2, [sp, #104]
   1bcf4:	mov	w3, w26
   1bcf8:	mov	x1, x20
   1bcfc:	mov	x0, x24
   1bd00:	strb	wzr, [x2]
   1bd04:	mov	w2, w25
   1bd08:	bl	c6c0 <mpfr_set_str@plt>
   1bd0c:	mov	w19, w0
   1bd10:	mov	x1, x28
   1bd14:	mov	x0, x20
   1bd18:	bl	cc20 <mpfr_free_func@plt>
   1bd1c:	cmn	w19, #0x1
   1bd20:	add	x0, x22, x27
   1bd24:	csel	x0, x0, xzr, ne  // ne = any
   1bd28:	ldp	x19, x20, [sp, #16]
   1bd2c:	ldp	x21, x22, [sp, #32]
   1bd30:	ldp	x23, x24, [sp, #48]
   1bd34:	ldp	x25, x26, [sp, #64]
   1bd38:	ldp	x27, x28, [sp, #80]
   1bd3c:	ldp	x29, x30, [sp], #112
   1bd40:	ret
   1bd44:	nop

000000000001bd48 <mpfr_integer_p@@Base>:
   1bd48:	ldr	x2, [x0, #16]
   1bd4c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1bd50:	cmp	x2, x1
   1bd54:	b.le	1bdd0 <mpfr_integer_p@@Base+0x88>
   1bd58:	cmp	x2, #0x0
   1bd5c:	b.le	1bdc4 <mpfr_integer_p@@Base+0x7c>
   1bd60:	ldr	x3, [x0]
   1bd64:	cmp	x2, x3
   1bd68:	b.cs	1bdbc <mpfr_integer_p@@Base+0x74>  // b.hs, b.nlast
   1bd6c:	add	x1, x3, #0x3e
   1bd70:	subs	x3, x3, #0x1
   1bd74:	csel	x1, x1, x3, mi  // mi = first
   1bd78:	cmp	x2, #0x0
   1bd7c:	add	x3, x2, #0x3f
   1bd80:	csel	x3, x3, x2, lt  // lt = tstop
   1bd84:	ldr	x4, [x0, #24]
   1bd88:	neg	x0, x3, asr #6
   1bd8c:	adds	x1, x0, x1, asr #6
   1bd90:	b.mi	1bde0 <mpfr_integer_p@@Base+0x98>  // b.first
   1bd94:	ldr	x3, [x4, x1, lsl #3]
   1bd98:	mov	w0, #0x0                   	// #0
   1bd9c:	lsl	x2, x3, x2
   1bda0:	cbz	x2, 1bdb0 <mpfr_integer_p@@Base+0x68>
   1bda4:	b	1bdcc <mpfr_integer_p@@Base+0x84>
   1bda8:	ldr	x0, [x4, x1, lsl #3]
   1bdac:	cbnz	x0, 1bdc4 <mpfr_integer_p@@Base+0x7c>
   1bdb0:	sub	x1, x1, #0x1
   1bdb4:	cmn	x1, #0x1
   1bdb8:	b.ne	1bda8 <mpfr_integer_p@@Base+0x60>  // b.any
   1bdbc:	mov	w0, #0x1                   	// #1
   1bdc0:	ret
   1bdc4:	mov	w0, #0x0                   	// #0
   1bdc8:	ret
   1bdcc:	ret
   1bdd0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1bdd4:	cmp	x2, x0
   1bdd8:	cset	w0, eq  // eq = none
   1bddc:	ret
   1bde0:	stp	x29, x30, [sp, #-16]!
   1bde4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   1bde8:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1bdec:	mov	x29, sp
   1bdf0:	add	x2, x2, #0x5f8
   1bdf4:	add	x0, x0, #0x600
   1bdf8:	mov	w1, #0x34                  	// #52
   1bdfc:	bl	cb40 <mpfr_assert_fail@plt>

000000000001be00 <mpfr_inf_p@@Base>:
   1be00:	ldr	x0, [x0, #16]
   1be04:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1be08:	cmp	x0, x1
   1be0c:	cset	w0, eq  // eq = none
   1be10:	ret
   1be14:	nop

000000000001be18 <mpfr_nan_p@@Base>:
   1be18:	ldr	x0, [x0, #16]
   1be1c:	mov	x1, #0x2                   	// #2
   1be20:	movk	x1, #0x8000, lsl #48
   1be24:	cmp	x0, x1
   1be28:	cset	w0, eq  // eq = none
   1be2c:	ret

000000000001be30 <mpfr_number_p@@Base>:
   1be30:	ldr	x0, [x0, #16]
   1be34:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   1be38:	add	x0, x0, x1
   1be3c:	cmp	x0, #0x1
   1be40:	cset	w0, hi  // hi = pmore
   1be44:	ret
   1be48:	stp	x29, x30, [sp, #-80]!
   1be4c:	mov	x29, sp
   1be50:	stp	x19, x20, [sp, #16]
   1be54:	mov	x19, x3
   1be58:	mov	x20, x2
   1be5c:	stp	x21, x22, [sp, #32]
   1be60:	mov	x21, x0
   1be64:	mov	x22, x1
   1be68:	stp	x23, x24, [sp, #48]
   1be6c:	mov	x23, x4
   1be70:	add	x4, x3, #0x1
   1be74:	cmp	x4, x23
   1be78:	b.ne	1bf34 <mpfr_number_p@@Base+0x104>  // b.any
   1be7c:	cbz	x3, 1befc <mpfr_number_p@@Base+0xcc>
   1be80:	mov	x1, x3
   1be84:	mov	x0, x22
   1be88:	bl	bcb0 <__gmpz_set_ui@plt>
   1be8c:	ldr	w0, [x22, #4]
   1be90:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   1be94:	cmp	x19, x1
   1be98:	neg	w0, w0
   1be9c:	str	w0, [x22, #4]
   1bea0:	b.ls	1bf08 <mpfr_number_p@@Base+0xd8>  // b.plast
   1bea4:	mov	x1, x19
   1bea8:	mov	x0, x20
   1beac:	bl	bcb0 <__gmpz_set_ui@plt>
   1beb0:	mov	x1, x20
   1beb4:	mov	x0, x20
   1beb8:	mov	x2, #0x1                   	// #1
   1bebc:	bl	c200 <__gmpz_mul_2exp@plt>
   1bec0:	mov	x1, x20
   1bec4:	mov	x0, x20
   1bec8:	mov	x2, #0x1                   	// #1
   1becc:	bl	c360 <__gmpz_add_ui@plt>
   1bed0:	mov	x1, x20
   1bed4:	mov	x0, x20
   1bed8:	mov	x2, #0x2                   	// #2
   1bedc:	bl	c200 <__gmpz_mul_2exp@plt>
   1bee0:	mov	x1, x22
   1bee4:	mov	x0, x21
   1bee8:	ldp	x19, x20, [sp, #16]
   1beec:	ldp	x21, x22, [sp, #32]
   1bef0:	ldp	x23, x24, [sp, #48]
   1bef4:	ldp	x29, x30, [sp], #80
   1bef8:	b	bfa0 <__gmpz_set@plt>
   1befc:	mov	x0, x22
   1bf00:	mov	x1, #0x3                   	// #3
   1bf04:	bl	bcb0 <__gmpz_set_ui@plt>
   1bf08:	lsl	x19, x19, #3
   1bf0c:	mov	x0, x20
   1bf10:	add	x1, x19, #0x4
   1bf14:	bl	bcb0 <__gmpz_set_ui@plt>
   1bf18:	mov	x1, x22
   1bf1c:	mov	x0, x21
   1bf20:	ldp	x19, x20, [sp, #16]
   1bf24:	ldp	x21, x22, [sp, #32]
   1bf28:	ldp	x23, x24, [sp, #48]
   1bf2c:	ldp	x29, x30, [sp], #80
   1bf30:	b	bfa0 <__gmpz_set@plt>
   1bf34:	and	x4, x3, x23
   1bf38:	mov	w24, w5
   1bf3c:	lsr	x5, x23, #1
   1bf40:	and	x4, x4, #0x1
   1bf44:	add	x19, x5, x3, lsr #1
   1bf48:	mov	w5, #0x1                   	// #1
   1bf4c:	add	x19, x19, x4
   1bf50:	str	x25, [sp, #64]
   1bf54:	mov	x4, x19
   1bf58:	bl	1be48 <mpfr_number_p@@Base+0x18>
   1bf5c:	mov	x3, x19
   1bf60:	mov	x4, x23
   1bf64:	mov	w5, w24
   1bf68:	add	x19, x21, #0x10
   1bf6c:	add	x23, x20, #0x10
   1bf70:	add	x25, x22, #0x10
   1bf74:	mov	x0, x19
   1bf78:	mov	x1, x25
   1bf7c:	mov	x2, x23
   1bf80:	bl	1be48 <mpfr_number_p@@Base+0x18>
   1bf84:	mov	x2, x23
   1bf88:	mov	x1, x21
   1bf8c:	mov	x0, x21
   1bf90:	bl	bff0 <__gmpz_mul@plt>
   1bf94:	mov	x2, x22
   1bf98:	mov	x1, x19
   1bf9c:	mov	x0, x19
   1bfa0:	bl	bff0 <__gmpz_mul@plt>
   1bfa4:	mov	x2, x19
   1bfa8:	mov	x1, x21
   1bfac:	mov	x0, x21
   1bfb0:	bl	c9c0 <__gmpz_add@plt>
   1bfb4:	cbnz	w24, 1bff4 <mpfr_number_p@@Base+0x1c4>
   1bfb8:	mov	x2, x23
   1bfbc:	mov	x1, x20
   1bfc0:	mov	x0, x20
   1bfc4:	bl	bff0 <__gmpz_mul@plt>
   1bfc8:	mov	x0, x21
   1bfcc:	mov	x1, #0x0                   	// #0
   1bfd0:	bl	ba90 <__gmpz_scan1@plt>
   1bfd4:	mov	x19, x0
   1bfd8:	cbnz	x0, 1c084 <mpfr_number_p@@Base+0x254>
   1bfdc:	ldp	x19, x20, [sp, #16]
   1bfe0:	ldp	x21, x22, [sp, #32]
   1bfe4:	ldp	x23, x24, [sp, #48]
   1bfe8:	ldr	x25, [sp, #64]
   1bfec:	ldp	x29, x30, [sp], #80
   1bff0:	ret
   1bff4:	mov	x2, x25
   1bff8:	mov	x1, x22
   1bffc:	mov	x0, x22
   1c000:	bl	bff0 <__gmpz_mul@plt>
   1c004:	mov	x2, x23
   1c008:	mov	x1, x20
   1c00c:	mov	x0, x20
   1c010:	bl	bff0 <__gmpz_mul@plt>
   1c014:	mov	x0, x21
   1c018:	mov	x1, #0x0                   	// #0
   1c01c:	bl	ba90 <__gmpz_scan1@plt>
   1c020:	mov	x19, x0
   1c024:	cbz	x0, 1bfdc <mpfr_number_p@@Base+0x1ac>
   1c028:	mov	x1, #0x0                   	// #0
   1c02c:	mov	x0, x20
   1c030:	bl	ba90 <__gmpz_scan1@plt>
   1c034:	mov	x23, x0
   1c038:	mov	x1, #0x0                   	// #0
   1c03c:	mov	x0, x22
   1c040:	bl	ba90 <__gmpz_scan1@plt>
   1c044:	cmp	x0, x23
   1c048:	csel	x2, x0, x23, ls  // ls = plast
   1c04c:	cmp	x2, x19
   1c050:	csel	x19, x2, x19, ls  // ls = plast
   1c054:	cbz	x19, 1bfdc <mpfr_number_p@@Base+0x1ac>
   1c058:	mov	x2, x19
   1c05c:	mov	x1, x21
   1c060:	mov	x0, x21
   1c064:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   1c068:	mov	x2, x19
   1c06c:	mov	x1, x20
   1c070:	mov	x0, x20
   1c074:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   1c078:	mov	x2, x19
   1c07c:	mov	x1, x22
   1c080:	b	1c0b4 <mpfr_number_p@@Base+0x284>
   1c084:	mov	x0, x20
   1c088:	mov	x1, #0x0                   	// #0
   1c08c:	bl	ba90 <__gmpz_scan1@plt>
   1c090:	cmp	x0, x19
   1c094:	csel	x19, x0, x19, ls  // ls = plast
   1c098:	cbz	x19, 1bfdc <mpfr_number_p@@Base+0x1ac>
   1c09c:	mov	x2, x19
   1c0a0:	mov	x1, x21
   1c0a4:	mov	x0, x21
   1c0a8:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   1c0ac:	mov	x2, x19
   1c0b0:	mov	x1, x20
   1c0b4:	ldp	x19, x20, [sp, #16]
   1c0b8:	mov	x0, x1
   1c0bc:	ldp	x21, x22, [sp, #32]
   1c0c0:	ldp	x23, x24, [sp, #48]
   1c0c4:	ldr	x25, [sp, #64]
   1c0c8:	ldp	x29, x30, [sp], #80
   1c0cc:	b	c130 <__gmpz_fdiv_q_2exp@plt>

000000000001c0d0 <mpfr_const_log2_internal@@Base>:
   1c0d0:	stp	x29, x30, [sp, #-368]!
   1c0d4:	mov	x29, sp
   1c0d8:	stp	x19, x20, [sp, #16]
   1c0dc:	stp	x21, x22, [sp, #32]
   1c0e0:	stp	x23, x24, [sp, #48]
   1c0e4:	stp	x25, x26, [sp, #64]
   1c0e8:	stp	x27, x28, [sp, #80]
   1c0ec:	str	x0, [x29, #104]
   1c0f0:	ldr	x0, [x0]
   1c0f4:	str	w1, [x29, #140]
   1c0f8:	str	x0, [x29, #144]
   1c0fc:	cmp	x0, #0x42c
   1c100:	b.hi	1c2dc <mpfr_const_log2_internal@@Base+0x20c>  // b.pmore
   1c104:	add	x0, x0, #0x9
   1c108:	str	x0, [x29, #152]
   1c10c:	ldr	x0, [x29, #152]
   1c110:	sub	x19, x0, #0x1
   1c114:	asr	x19, x19, #6
   1c118:	add	x19, x19, #0x1
   1c11c:	lsl	x0, x19, #1
   1c120:	cmp	x0, #0x10
   1c124:	b.gt	1c2f8 <mpfr_const_log2_internal@@Base+0x228>
   1c128:	add	x1, x29, #0xf0
   1c12c:	stp	xzr, x1, [x29, #224]
   1c130:	mov	x0, x1
   1c134:	add	x1, x29, #0xc0
   1c138:	add	x27, x29, #0xa0
   1c13c:	add	x19, x0, x19, lsl #3
   1c140:	mov	x2, #0x40                  	// #64
   1c144:	str	x2, [x29, #96]
   1c148:	str	x1, [x29, #112]
   1c14c:	mov	w1, #0x1                   	// #1
   1c150:	ldr	x2, [x29, #152]
   1c154:	str	w1, [x29, #168]
   1c158:	str	w1, [x29, #200]
   1c15c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1c160:	movk	x1, #0xaaab
   1c164:	stp	x0, x2, [x29, #184]
   1c168:	umulh	x0, x2, x1
   1c16c:	mov	x1, sp
   1c170:	str	x19, [x29, #216]
   1c174:	str	x2, [x29, #160]
   1c178:	lsr	x0, x0, #1
   1c17c:	clz	x23, x0
   1c180:	add	x0, x0, #0x1
   1c184:	str	x0, [x29, #128]
   1c188:	mov	w0, #0x41                  	// #65
   1c18c:	sub	w23, w0, w23
   1c190:	mov	w0, #0x30                  	// #48
   1c194:	sbfiz	x25, x23, #5, #32
   1c198:	smsubl	x0, w23, w0, x1
   1c19c:	mov	sp, x0
   1c1a0:	mov	x24, sp
   1c1a4:	add	x0, x24, w23, sxtw #4
   1c1a8:	add	x25, x24, x25
   1c1ac:	mov	x22, x0
   1c1b0:	mov	x20, x0
   1c1b4:	mov	x23, x0
   1c1b8:	mov	x19, x25
   1c1bc:	mov	x21, x25
   1c1c0:	mov	x28, x24
   1c1c4:	mov	x26, x24
   1c1c8:	str	x0, [x29, #120]
   1c1cc:	nop
   1c1d0:	mov	x0, x26
   1c1d4:	bl	bf90 <mpfr_mpz_init@plt>
   1c1d8:	mov	x0, x22
   1c1dc:	bl	bf90 <mpfr_mpz_init@plt>
   1c1e0:	mov	x0, x21
   1c1e4:	add	x26, x26, #0x10
   1c1e8:	bl	bf90 <mpfr_mpz_init@plt>
   1c1ec:	add	x22, x22, #0x10
   1c1f0:	cmp	x23, x26
   1c1f4:	add	x21, x21, #0x10
   1c1f8:	b.ne	1c1d0 <mpfr_const_log2_internal@@Base+0x100>  // b.any
   1c1fc:	ldp	x1, x4, [x29, #120]
   1c200:	mov	x3, #0x0                   	// #0
   1c204:	mov	w5, #0x0                   	// #0
   1c208:	mov	x2, x25
   1c20c:	mov	x0, x24
   1c210:	bl	1be48 <mpfr_number_p@@Base+0x18>
   1c214:	mov	x1, x24
   1c218:	mov	w2, #0x0                   	// #0
   1c21c:	mov	x0, x27
   1c220:	bl	c240 <mpfr_set_z@plt>
   1c224:	ldr	x21, [x29, #112]
   1c228:	mov	x1, x25
   1c22c:	mov	w2, #0x0                   	// #0
   1c230:	mov	x0, x21
   1c234:	bl	c240 <mpfr_set_z@plt>
   1c238:	mov	x2, x21
   1c23c:	mov	x1, x27
   1c240:	mov	x0, x27
   1c244:	mov	w3, #0x0                   	// #0
   1c248:	bl	c620 <mpfr_div@plt>
   1c24c:	nop
   1c250:	mov	x0, x28
   1c254:	bl	c170 <mpfr_mpz_clear@plt>
   1c258:	mov	x0, x20
   1c25c:	bl	c170 <mpfr_mpz_clear@plt>
   1c260:	mov	x0, x19
   1c264:	add	x28, x28, #0x10
   1c268:	bl	c170 <mpfr_mpz_clear@plt>
   1c26c:	add	x20, x20, #0x10
   1c270:	cmp	x23, x28
   1c274:	add	x19, x19, #0x10
   1c278:	b.ne	1c250 <mpfr_const_log2_internal@@Base+0x180>  // b.any
   1c27c:	ldr	x0, [x29, #144]
   1c280:	mov	x1, #0x93df                	// #37855
   1c284:	movk	x1, #0x4, lsl #16
   1c288:	cmp	x0, x1
   1c28c:	b.hi	1c30c <mpfr_const_log2_internal@@Base+0x23c>  // b.pmore
   1c290:	ldr	w2, [x29, #140]
   1c294:	mov	x1, x27
   1c298:	ldr	w3, [x29, #168]
   1c29c:	ldr	x0, [x29, #104]
   1c2a0:	bl	c6a0 <mpfr_set4@plt>
   1c2a4:	mov	w19, w0
   1c2a8:	ldr	x1, [x29, #224]
   1c2ac:	cbz	x1, 1c2b8 <mpfr_const_log2_internal@@Base+0x1e8>
   1c2b0:	ldr	x0, [x29, #232]
   1c2b4:	bl	cc20 <mpfr_free_func@plt>
   1c2b8:	mov	sp, x29
   1c2bc:	mov	w0, w19
   1c2c0:	ldp	x19, x20, [sp, #16]
   1c2c4:	ldp	x21, x22, [sp, #32]
   1c2c8:	ldp	x23, x24, [sp, #48]
   1c2cc:	ldp	x25, x26, [sp, #64]
   1c2d0:	ldp	x27, x28, [sp, #80]
   1c2d4:	ldp	x29, x30, [sp], #368
   1c2d8:	ret
   1c2dc:	add	x0, x0, #0xa
   1c2e0:	mov	x1, x0
   1c2e4:	str	x1, [x29, #152]
   1c2e8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1c2ec:	cmp	x1, x0
   1c2f0:	b.lt	1c10c <mpfr_const_log2_internal@@Base+0x3c>  // b.tstop
   1c2f4:	bl	c8e0 <mpfr_abort_prec_max@plt>
   1c2f8:	lsl	x0, x19, #4
   1c2fc:	str	x0, [x29, #224]
   1c300:	bl	ccf0 <mpfr_allocate_func@plt>
   1c304:	str	x0, [x29, #232]
   1c308:	b	1c134 <mpfr_const_log2_internal@@Base+0x64>
   1c30c:	ldr	x1, [x29, #176]
   1c310:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1c314:	cmp	x1, x0
   1c318:	b.le	1c350 <mpfr_const_log2_internal@@Base+0x280>
   1c31c:	ldr	w0, [x29, #140]
   1c320:	ldr	x2, [x29, #144]
   1c324:	cmp	w0, #0x0
   1c328:	ldr	x1, [x29, #160]
   1c32c:	cinc	x3, x2, eq  // eq = none
   1c330:	ldr	x0, [x29, #184]
   1c334:	sub	x1, x1, #0x1
   1c338:	ldr	x2, [x29, #152]
   1c33c:	asr	x1, x1, #6
   1c340:	add	x1, x1, #0x1
   1c344:	sub	x2, x2, #0x2
   1c348:	bl	c370 <mpfr_round_p@plt>
   1c34c:	cbnz	w0, 1c290 <mpfr_const_log2_internal@@Base+0x1c0>
   1c350:	ldr	x1, [x29, #152]
   1c354:	mov	x0, #0xfffffffffffffeff    	// #-257
   1c358:	movk	x0, #0x7fff, lsl #48
   1c35c:	sub	x0, x0, x1
   1c360:	ldr	x1, [x29, #96]
   1c364:	cmp	x0, x1
   1c368:	b.lt	1c3d4 <mpfr_const_log2_internal@@Base+0x304>  // b.tstop
   1c36c:	ldr	x0, [x29, #152]
   1c370:	add	x2, x0, x1
   1c374:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1c378:	cmp	x2, x0
   1c37c:	str	x2, [x29, #152]
   1c380:	add	x0, x2, x2, lsr #63
   1c384:	ldr	x1, [x29, #224]
   1c388:	asr	x0, x0, #1
   1c38c:	str	x0, [x29, #96]
   1c390:	b.ge	1c2f4 <mpfr_const_log2_internal@@Base+0x224>  // b.tcont
   1c394:	sub	x19, x2, #0x1
   1c398:	asr	x19, x19, #6
   1c39c:	add	x19, x19, #0x1
   1c3a0:	lsl	x2, x19, #4
   1c3a4:	str	x2, [x29, #224]
   1c3a8:	cbnz	x1, 1c3c4 <mpfr_const_log2_internal@@Base+0x2f4>
   1c3ac:	mov	x0, x2
   1c3b0:	bl	ccf0 <mpfr_allocate_func@plt>
   1c3b4:	str	x0, [x29, #232]
   1c3b8:	add	x19, x0, x19, lsl #3
   1c3bc:	mov	w1, #0x1                   	// #1
   1c3c0:	b	1c150 <mpfr_const_log2_internal@@Base+0x80>
   1c3c4:	ldr	x0, [x29, #232]
   1c3c8:	bl	c1c0 <mpfr_reallocate_func@plt>
   1c3cc:	str	x0, [x29, #232]
   1c3d0:	b	1c3b8 <mpfr_const_log2_internal@@Base+0x2e8>
   1c3d4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   1c3d8:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1c3dc:	add	x2, x2, #0x610
   1c3e0:	add	x0, x0, #0x658
   1c3e4:	mov	w1, #0xb1                  	// #177
   1c3e8:	bl	cb40 <mpfr_assert_fail@plt>
   1c3ec:	nop

000000000001c3f0 <mpfr_const_log2@@Base>:
   1c3f0:	stp	x29, x30, [sp, #-16]!
   1c3f4:	mov	x4, x0
   1c3f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c3fc:	ldr	x2, [x0, #2560]
   1c400:	add	x0, x0, #0xa00
   1c404:	blr	x2
   1c408:	mov	x29, sp
   1c40c:	ldp	x29, x30, [sp], #16
   1c410:	mrs	x3, tpidr_el0
   1c414:	mov	w2, w1
   1c418:	add	x1, x3, x0
   1c41c:	mov	x0, x4
   1c420:	b	c380 <mpfr_cache@plt>
   1c424:	nop

000000000001c428 <mpfr_log@@Base>:
   1c428:	stp	x29, x30, [sp, #-352]!
   1c42c:	mov	x29, sp
   1c430:	stp	x27, x28, [sp, #80]
   1c434:	mov	x28, x1
   1c438:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1c43c:	stp	x23, x24, [sp, #48]
   1c440:	ldr	x23, [x28, #16]
   1c444:	stp	x19, x20, [sp, #16]
   1c448:	stp	x21, x22, [sp, #32]
   1c44c:	cmp	x23, x1
   1c450:	mov	x21, x0
   1c454:	b.le	1c8b4 <mpfr_log@@Base+0x48c>
   1c458:	ldr	w0, [x28, #8]
   1c45c:	tbnz	w0, #31, 1c864 <mpfr_log@@Base+0x43c>
   1c460:	mov	w22, w2
   1c464:	cmp	x23, #0x1
   1c468:	b.eq	1c90c <mpfr_log@@Base+0x4e4>  // b.none
   1c46c:	ldr	x0, [x21]
   1c470:	stp	x25, x26, [sp, #64]
   1c474:	str	x0, [sp, #96]
   1c478:	cmp	x0, #0x1
   1c47c:	b.eq	1c934 <mpfr_log@@Base+0x50c>  // b.none
   1c480:	b.le	1c9f4 <mpfr_log@@Base+0x5cc>
   1c484:	mrs	x20, tpidr_el0
   1c488:	mov	x5, x0
   1c48c:	sub	x25, x0, #0x1
   1c490:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c494:	ldr	x2, [x0, #2576]
   1c498:	add	x0, x0, #0xa10
   1c49c:	blr	x2
   1c4a0:	clz	x1, x25
   1c4a4:	mov	w25, #0x40                  	// #64
   1c4a8:	ldr	w0, [x20, x0]
   1c4ac:	sub	w25, w25, w1
   1c4b0:	str	w0, [sp, #116]
   1c4b4:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   1c4b8:	lsl	w25, w25, #1
   1c4bc:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1c4c0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c4c4:	ldr	x1, [x0, #2512]
   1c4c8:	add	x0, x0, #0x9d0
   1c4cc:	blr	x1
   1c4d0:	add	x3, x20, x0
   1c4d4:	ldr	x0, [x20, x0]
   1c4d8:	add	x25, x5, w25, sxtw
   1c4dc:	str	x4, [x3]
   1c4e0:	add	x27, x25, #0xa
   1c4e4:	str	x0, [sp, #136]
   1c4e8:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   1c4ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c4f0:	ldr	x5, [x0, #2544]
   1c4f4:	add	x0, x0, #0x9f0
   1c4f8:	blr	x5
   1c4fc:	ldr	x3, [x20, x0]
   1c500:	str	x2, [x20, x0]
   1c504:	str	x3, [sp, #128]
   1c508:	cmp	x27, x1
   1c50c:	b.ge	1c9f0 <mpfr_log@@Base+0x5c8>  // b.tcont
   1c510:	add	x25, x25, #0x9
   1c514:	asr	x25, x25, #6
   1c518:	add	x25, x25, #0x1
   1c51c:	lsl	x0, x25, #1
   1c520:	cmp	x0, #0x10
   1c524:	b.gt	1c798 <mpfr_log@@Base+0x370>
   1c528:	add	x1, sp, #0xe0
   1c52c:	stp	xzr, x1, [sp, #208]
   1c530:	mov	x0, x1
   1c534:	adrp	x26, 81000 <__gmpfr_l2b@@Base+0x200>
   1c538:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   1c53c:	add	x24, sp, #0xb0
   1c540:	add	x19, sp, #0x90
   1c544:	ldr	x26, [x26, #3976]
   1c548:	add	x2, x0, x25, lsl #3
   1c54c:	mov	x3, #0x40                  	// #64
   1c550:	str	x3, [sp, #120]
   1c554:	ldr	x25, [x1, #3928]
   1c558:	mov	w1, #0x1                   	// #1
   1c55c:	str	x27, [sp, #144]
   1c560:	str	w1, [sp, #152]
   1c564:	stp	x0, x27, [sp, #168]
   1c568:	str	w1, [sp, #184]
   1c56c:	str	x2, [sp, #200]
   1c570:	add	x4, x27, #0x3
   1c574:	mov	x1, x28
   1c578:	mov	w3, #0x0                   	// #0
   1c57c:	mov	x0, x24
   1c580:	asr	x4, x4, #1
   1c584:	sub	x4, x4, x23
   1c588:	str	x4, [sp, #104]
   1c58c:	mov	x2, x4
   1c590:	bl	bb90 <mpfr_mul_2si@plt>
   1c594:	mov	x2, x24
   1c598:	mov	x1, x26
   1c59c:	mov	w3, #0x0                   	// #0
   1c5a0:	mov	x0, x19
   1c5a4:	bl	c620 <mpfr_div@plt>
   1c5a8:	mov	x2, x19
   1c5ac:	mov	x1, x25
   1c5b0:	mov	w3, #0x0                   	// #0
   1c5b4:	mov	x0, x24
   1c5b8:	bl	ba00 <mpfr_agm@plt>
   1c5bc:	mov	x1, x24
   1c5c0:	mov	w3, #0x0                   	// #0
   1c5c4:	mov	x2, #0x1                   	// #1
   1c5c8:	mov	x0, x24
   1c5cc:	bl	c2c0 <mpfr_mul_2ui@plt>
   1c5d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c5d4:	ldr	x1, [x0, #2624]
   1c5d8:	add	x0, x0, #0xa40
   1c5dc:	blr	x1
   1c5e0:	mov	w2, #0x0                   	// #0
   1c5e4:	add	x1, x20, x0
   1c5e8:	mov	x0, x19
   1c5ec:	bl	c380 <mpfr_cache@plt>
   1c5f0:	mov	x1, x19
   1c5f4:	mov	w3, #0x0                   	// #0
   1c5f8:	mov	x2, x24
   1c5fc:	mov	x0, x24
   1c600:	bl	c620 <mpfr_div@plt>
   1c604:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c608:	ldr	x1, [x0, #2560]
   1c60c:	add	x0, x0, #0xa00
   1c610:	blr	x1
   1c614:	mov	w2, #0x0                   	// #0
   1c618:	add	x1, x20, x0
   1c61c:	mov	x0, x19
   1c620:	bl	c380 <mpfr_cache@plt>
   1c624:	ldr	x4, [sp, #104]
   1c628:	mov	x1, x19
   1c62c:	mov	w3, #0x0                   	// #0
   1c630:	mov	x0, x19
   1c634:	mov	x2, x4
   1c638:	bl	c960 <mpfr_mul_si@plt>
   1c63c:	mov	x1, x24
   1c640:	mov	x2, x19
   1c644:	mov	x0, x19
   1c648:	mov	w3, #0x0                   	// #0
   1c64c:	bl	bb70 <mpfr_sub@plt>
   1c650:	ldr	x4, [sp, #160]
   1c654:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1c658:	cmp	x4, x1
   1c65c:	b.le	1c7ac <mpfr_log@@Base+0x384>
   1c660:	ldr	x0, [sp, #192]
   1c664:	cmp	x0, x1
   1c668:	b.le	1c7ac <mpfr_log@@Base+0x384>
   1c66c:	ldr	x1, [sp, #144]
   1c670:	subs	x4, x0, x4
   1c674:	ldr	x0, [sp, #168]
   1c678:	csel	x4, x4, xzr, pl  // pl = nfrst
   1c67c:	sub	x1, x1, #0x1
   1c680:	cmp	w22, #0x0
   1c684:	ldr	x3, [sp, #96]
   1c688:	sub	x2, x27, x4
   1c68c:	asr	x1, x1, #6
   1c690:	sub	x2, x2, #0x4
   1c694:	cinc	x3, x3, eq  // eq = none
   1c698:	add	x1, x1, #0x1
   1c69c:	str	x4, [sp, #104]
   1c6a0:	bl	c370 <mpfr_round_p@plt>
   1c6a4:	ldr	x4, [sp, #104]
   1c6a8:	cbz	w0, 1c8e8 <mpfr_log@@Base+0x4c0>
   1c6ac:	ldr	w3, [sp, #152]
   1c6b0:	mov	x1, x19
   1c6b4:	mov	w2, w22
   1c6b8:	mov	x0, x21
   1c6bc:	bl	c6a0 <mpfr_set4@plt>
   1c6c0:	mov	w19, w0
   1c6c4:	ldr	x1, [sp, #208]
   1c6c8:	cbnz	x1, 1c78c <mpfr_log@@Base+0x364>
   1c6cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c6d0:	ldr	x1, [x0, #2576]
   1c6d4:	add	x0, x0, #0xa10
   1c6d8:	blr	x1
   1c6dc:	add	x2, x20, x0
   1c6e0:	ldr	w1, [sp, #116]
   1c6e4:	str	w1, [x20, x0]
   1c6e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c6ec:	ldr	x3, [x0, #2512]
   1c6f0:	add	x0, x0, #0x9d0
   1c6f4:	blr	x3
   1c6f8:	ldr	x3, [sp, #136]
   1c6fc:	str	x3, [x20, x0]
   1c700:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c704:	ldr	x4, [x0, #2544]
   1c708:	add	x0, x0, #0x9f0
   1c70c:	blr	x4
   1c710:	ldr	x1, [x21, #16]
   1c714:	ldr	x4, [sp, #128]
   1c718:	str	x4, [x20, x0]
   1c71c:	cmp	x1, x4
   1c720:	ccmp	x1, x3, #0x1, le
   1c724:	b.ge	1c75c <mpfr_log@@Base+0x334>  // b.tcont
   1c728:	mov	w1, w19
   1c72c:	mov	w2, w22
   1c730:	mov	x0, x21
   1c734:	bl	cb30 <mpfr_check_range@plt>
   1c738:	mov	w19, w0
   1c73c:	ldp	x25, x26, [sp, #64]
   1c740:	mov	w0, w19
   1c744:	ldp	x19, x20, [sp, #16]
   1c748:	ldp	x21, x22, [sp, #32]
   1c74c:	ldp	x23, x24, [sp, #48]
   1c750:	ldp	x27, x28, [sp, #80]
   1c754:	ldp	x29, x30, [sp], #352
   1c758:	ret
   1c75c:	cbz	w19, 1c73c <mpfr_log@@Base+0x314>
   1c760:	ldr	w0, [sp, #116]
   1c764:	ldp	x25, x26, [sp, #64]
   1c768:	orr	w0, w0, #0x8
   1c76c:	str	w0, [x2]
   1c770:	mov	w0, w19
   1c774:	ldp	x19, x20, [sp, #16]
   1c778:	ldp	x21, x22, [sp, #32]
   1c77c:	ldp	x23, x24, [sp, #48]
   1c780:	ldp	x27, x28, [sp, #80]
   1c784:	ldp	x29, x30, [sp], #352
   1c788:	ret
   1c78c:	ldr	x0, [sp, #216]
   1c790:	bl	cc20 <mpfr_free_func@plt>
   1c794:	b	1c6cc <mpfr_log@@Base+0x2a4>
   1c798:	lsl	x0, x25, #4
   1c79c:	str	x0, [sp, #208]
   1c7a0:	bl	ccf0 <mpfr_allocate_func@plt>
   1c7a4:	str	x0, [sp, #216]
   1c7a8:	b	1c534 <mpfr_log@@Base+0x10c>
   1c7ac:	cmp	x27, #0x1
   1c7b0:	b.eq	1c7e0 <mpfr_log@@Base+0x3b8>  // b.none
   1c7b4:	sub	x1, x27, #0x1
   1c7b8:	mov	w0, #0x40                  	// #64
   1c7bc:	clz	x1, x1
   1c7c0:	sub	w0, w0, w1
   1c7c4:	add	x27, x27, w0, sxtw
   1c7c8:	ldr	x1, [sp, #120]
   1c7cc:	mov	x0, #0xfffffffffffffeff    	// #-257
   1c7d0:	movk	x0, #0x7fff, lsl #48
   1c7d4:	sub	x0, x0, x27
   1c7d8:	cmp	x0, x1
   1c7dc:	b.lt	1c9d8 <mpfr_log@@Base+0x5b0>  // b.tstop
   1c7e0:	ldr	x0, [sp, #120]
   1c7e4:	ldr	x1, [sp, #208]
   1c7e8:	add	x27, x27, x0
   1c7ec:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1c7f0:	cmp	x27, x0
   1c7f4:	add	x0, x27, x27, lsr #63
   1c7f8:	asr	x0, x0, #1
   1c7fc:	str	x0, [sp, #120]
   1c800:	b.ge	1c9f0 <mpfr_log@@Base+0x5c8>  // b.tcont
   1c804:	sub	x3, x27, #0x1
   1c808:	asr	x3, x3, #6
   1c80c:	add	x3, x3, #0x1
   1c810:	str	x3, [sp, #104]
   1c814:	lsl	x2, x3, #4
   1c818:	str	x2, [sp, #208]
   1c81c:	cbz	x1, 1c850 <mpfr_log@@Base+0x428>
   1c820:	ldr	x0, [sp, #216]
   1c824:	bl	c1c0 <mpfr_reallocate_func@plt>
   1c828:	str	x0, [sp, #216]
   1c82c:	ldr	x3, [sp, #104]
   1c830:	mov	w1, #0x1                   	// #1
   1c834:	add	x3, x0, x3, lsl #3
   1c838:	str	x27, [sp, #144]
   1c83c:	str	w1, [sp, #152]
   1c840:	stp	x0, x27, [sp, #168]
   1c844:	str	w1, [sp, #184]
   1c848:	str	x3, [sp, #200]
   1c84c:	b	1c570 <mpfr_log@@Base+0x148>
   1c850:	mov	x0, x2
   1c854:	bl	ccf0 <mpfr_allocate_func@plt>
   1c858:	str	x0, [sp, #216]
   1c85c:	ldr	x3, [sp, #104]
   1c860:	b	1c830 <mpfr_log@@Base+0x408>
   1c864:	mrs	x1, tpidr_el0
   1c868:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c86c:	ldr	x2, [x0, #2576]
   1c870:	add	x0, x0, #0xa10
   1c874:	blr	x2
   1c878:	add	x0, x1, x0
   1c87c:	mov	x1, #0x2                   	// #2
   1c880:	movk	x1, #0x8000, lsl #48
   1c884:	str	x1, [x21, #16]
   1c888:	mov	w19, #0x0                   	// #0
   1c88c:	ldr	w1, [x0]
   1c890:	ldp	x21, x22, [sp, #32]
   1c894:	orr	w1, w1, #0x4
   1c898:	str	w1, [x0]
   1c89c:	mov	w0, w19
   1c8a0:	ldp	x19, x20, [sp, #16]
   1c8a4:	ldp	x23, x24, [sp, #48]
   1c8a8:	ldp	x27, x28, [sp, #80]
   1c8ac:	ldp	x29, x30, [sp], #352
   1c8b0:	ret
   1c8b4:	mov	x0, #0x2                   	// #2
   1c8b8:	movk	x0, #0x8000, lsl #48
   1c8bc:	cmp	x23, x0
   1c8c0:	b.eq	1c864 <mpfr_log@@Base+0x43c>  // b.none
   1c8c4:	cmp	x23, x1
   1c8c8:	b.ne	1c9a0 <mpfr_log@@Base+0x578>  // b.any
   1c8cc:	ldr	w0, [x28, #8]
   1c8d0:	tbnz	w0, #31, 1c864 <mpfr_log@@Base+0x43c>
   1c8d4:	mov	w0, #0x1                   	// #1
   1c8d8:	mov	w19, #0x0                   	// #0
   1c8dc:	str	w0, [x21, #8]
   1c8e0:	str	x23, [x21, #16]
   1c8e4:	b	1c740 <mpfr_log@@Base+0x318>
   1c8e8:	cmp	x27, #0x1
   1c8ec:	b.eq	1c904 <mpfr_log@@Base+0x4dc>  // b.none
   1c8f0:	sub	x0, x27, #0x1
   1c8f4:	mov	w1, #0x40                  	// #64
   1c8f8:	clz	x0, x0
   1c8fc:	sub	w0, w1, w0
   1c900:	add	x4, x4, w0, sxtw
   1c904:	add	x27, x27, x4
   1c908:	b	1c7c8 <mpfr_log@@Base+0x3a0>
   1c90c:	mov	x1, x23
   1c910:	mov	x0, x28
   1c914:	mov	x2, #0x0                   	// #0
   1c918:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   1c91c:	mov	w19, w0
   1c920:	cbnz	w0, 1c46c <mpfr_log@@Base+0x44>
   1c924:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1c928:	str	w23, [x21, #8]
   1c92c:	str	x0, [x21, #16]
   1c930:	b	1c740 <mpfr_log@@Base+0x318>
   1c934:	mrs	x20, tpidr_el0
   1c938:	mov	x25, x0
   1c93c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c940:	ldr	x1, [x0, #2576]
   1c944:	add	x0, x0, #0xa10
   1c948:	blr	x1
   1c94c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1c950:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   1c954:	mov	x27, #0xb                   	// #11
   1c958:	ldr	w0, [x20, x0]
   1c95c:	str	w0, [sp, #116]
   1c960:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c964:	ldr	x2, [x0, #2512]
   1c968:	add	x0, x0, #0x9d0
   1c96c:	blr	x2
   1c970:	add	x2, x20, x0
   1c974:	ldr	x0, [x20, x0]
   1c978:	str	x0, [sp, #136]
   1c97c:	str	x3, [x2]
   1c980:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c984:	ldr	x4, [x0, #2544]
   1c988:	add	x0, x0, #0x9f0
   1c98c:	blr	x4
   1c990:	ldr	x2, [x20, x0]
   1c994:	str	x1, [x20, x0]
   1c998:	str	x2, [sp, #128]
   1c99c:	b	1c528 <mpfr_log@@Base+0x100>
   1c9a0:	mrs	x2, tpidr_el0
   1c9a4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1c9a8:	ldr	x3, [x0, #2576]
   1c9ac:	add	x0, x0, #0xa10
   1c9b0:	blr	x3
   1c9b4:	add	x0, x2, x0
   1c9b8:	str	x1, [x21, #16]
   1c9bc:	mov	w2, #0xffffffff            	// #-1
   1c9c0:	mov	w19, #0x0                   	// #0
   1c9c4:	str	w2, [x21, #8]
   1c9c8:	ldr	w1, [x0]
   1c9cc:	orr	w1, w1, #0x20
   1c9d0:	str	w1, [x0]
   1c9d4:	b	1c740 <mpfr_log@@Base+0x318>
   1c9d8:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   1c9dc:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1c9e0:	add	x2, x2, #0x358
   1c9e4:	add	x0, x0, #0x668
   1c9e8:	mov	w1, #0xb5                  	// #181
   1c9ec:	bl	cb40 <mpfr_assert_fail@plt>
   1c9f0:	bl	c8e0 <mpfr_abort_prec_max@plt>
   1c9f4:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   1c9f8:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1c9fc:	add	x2, x2, #0x248
   1ca00:	add	x0, x0, #0x668
   1ca04:	mov	w1, #0x70                  	// #112
   1ca08:	bl	cb40 <mpfr_assert_fail@plt>
   1ca0c:	nop

000000000001ca10 <mpfr_modf@@Base>:
   1ca10:	stp	x29, x30, [sp, #-64]!
   1ca14:	cmp	x0, x1
   1ca18:	mov	x29, sp
   1ca1c:	stp	x19, x20, [sp, #16]
   1ca20:	stp	x21, x22, [sp, #32]
   1ca24:	str	x23, [sp, #48]
   1ca28:	b.eq	1cd0c <mpfr_modf@@Base+0x2fc>  // b.none
   1ca2c:	mov	x19, x2
   1ca30:	mov	x21, x1
   1ca34:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   1ca38:	mov	x20, x0
   1ca3c:	ldr	x1, [x19, #16]
   1ca40:	cmp	x1, x2
   1ca44:	b.le	1cc88 <mpfr_modf@@Base+0x278>
   1ca48:	mov	w22, w3
   1ca4c:	cmp	x1, #0x0
   1ca50:	b.le	1cb74 <mpfr_modf@@Base+0x164>
   1ca54:	ldr	x2, [x19]
   1ca58:	cmp	x1, x2
   1ca5c:	b.ge	1cae0 <mpfr_modf@@Base+0xd0>  // b.tcont
   1ca60:	cmp	x0, x19
   1ca64:	b.ne	1cc60 <mpfr_modf@@Base+0x250>  // b.any
   1ca68:	mov	w2, w3
   1ca6c:	mov	x1, x20
   1ca70:	mov	x0, x21
   1ca74:	bl	bec0 <mpfr_frac@plt>
   1ca78:	mov	w2, w22
   1ca7c:	mov	w19, w0
   1ca80:	mov	x1, x20
   1ca84:	mov	x0, x20
   1ca88:	bl	bf30 <mpfr_rint_trunc@plt>
   1ca8c:	mov	w23, w0
   1ca90:	cmp	w23, #0x0
   1ca94:	cbz	w23, 1cb58 <mpfr_modf@@Base+0x148>
   1ca98:	cset	w23, le
   1ca9c:	add	w23, w23, #0x1
   1caa0:	cbnz	w19, 1cb5c <mpfr_modf@@Base+0x14c>
   1caa4:	mrs	x1, tpidr_el0
   1caa8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1caac:	ldr	x2, [x0, #2576]
   1cab0:	add	x0, x0, #0xa10
   1cab4:	blr	x2
   1cab8:	add	x0, x1, x0
   1cabc:	ldr	w1, [x0]
   1cac0:	orr	w1, w1, #0x8
   1cac4:	str	w1, [x0]
   1cac8:	mov	w0, w23
   1cacc:	ldp	x19, x20, [sp, #16]
   1cad0:	ldp	x21, x22, [sp, #32]
   1cad4:	ldr	x23, [sp, #48]
   1cad8:	ldp	x29, x30, [sp], #64
   1cadc:	ret
   1cae0:	ldr	w3, [x19, #8]
   1cae4:	cmp	x0, x19
   1cae8:	b.eq	1cc38 <mpfr_modf@@Base+0x228>  // b.none
   1caec:	mov	w2, w22
   1caf0:	mov	x1, x19
   1caf4:	bl	c6a0 <mpfr_set4@plt>
   1caf8:	ldr	w2, [x19, #8]
   1cafc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1cb00:	str	w2, [x21, #8]
   1cb04:	mov	w2, w0
   1cb08:	str	x1, [x21, #16]
   1cb0c:	cbz	w0, 1cc1c <mpfr_modf@@Base+0x20c>
   1cb10:	mrs	x1, tpidr_el0
   1cb14:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1cb18:	ldr	x3, [x0, #2576]
   1cb1c:	add	x0, x0, #0xa10
   1cb20:	blr	x3
   1cb24:	add	x1, x1, x0
   1cb28:	cmp	w2, #0x0
   1cb2c:	cset	w23, le
   1cb30:	add	w23, w23, #0x1
   1cb34:	ldr	w0, [x1]
   1cb38:	ldp	x19, x20, [sp, #16]
   1cb3c:	orr	w0, w0, #0x8
   1cb40:	str	w0, [x1]
   1cb44:	mov	w0, w23
   1cb48:	ldp	x21, x22, [sp, #32]
   1cb4c:	ldr	x23, [sp, #48]
   1cb50:	ldp	x29, x30, [sp], #64
   1cb54:	ret
   1cb58:	cbz	w19, 1cc1c <mpfr_modf@@Base+0x20c>
   1cb5c:	cmp	w19, #0x0
   1cb60:	mov	w0, #0x4                   	// #4
   1cb64:	mov	w1, #0x8                   	// #8
   1cb68:	csel	w0, w0, w1, gt
   1cb6c:	orr	w23, w23, w0
   1cb70:	b	1caa4 <mpfr_modf@@Base+0x94>
   1cb74:	ldr	w3, [x19, #8]
   1cb78:	cmp	x21, x19
   1cb7c:	b.eq	1cbf4 <mpfr_modf@@Base+0x1e4>  // b.none
   1cb80:	mov	w2, w22
   1cb84:	mov	x1, x19
   1cb88:	mov	x0, x21
   1cb8c:	bl	c6a0 <mpfr_set4@plt>
   1cb90:	ldr	w2, [x19, #8]
   1cb94:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1cb98:	str	w2, [x20, #8]
   1cb9c:	mov	w2, w0
   1cba0:	str	x1, [x20, #16]
   1cba4:	cbz	w0, 1cc1c <mpfr_modf@@Base+0x20c>
   1cba8:	mrs	x1, tpidr_el0
   1cbac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1cbb0:	ldr	x3, [x0, #2576]
   1cbb4:	add	x0, x0, #0xa10
   1cbb8:	blr	x3
   1cbbc:	add	x1, x1, x0
   1cbc0:	cmp	w2, #0x0
   1cbc4:	mov	w0, #0x8                   	// #8
   1cbc8:	mov	w23, #0x4                   	// #4
   1cbcc:	csel	w23, w23, w0, gt
   1cbd0:	ldr	w0, [x1]
   1cbd4:	ldp	x19, x20, [sp, #16]
   1cbd8:	orr	w0, w0, #0x8
   1cbdc:	str	w0, [x1]
   1cbe0:	mov	w0, w23
   1cbe4:	ldp	x21, x22, [sp, #32]
   1cbe8:	ldr	x23, [sp, #48]
   1cbec:	ldp	x29, x30, [sp], #64
   1cbf0:	ret
   1cbf4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1cbf8:	str	w3, [x20, #8]
   1cbfc:	str	x0, [x20, #16]
   1cc00:	mov	w23, #0x0                   	// #0
   1cc04:	mov	w0, w23
   1cc08:	ldp	x19, x20, [sp, #16]
   1cc0c:	ldp	x21, x22, [sp, #32]
   1cc10:	ldr	x23, [sp, #48]
   1cc14:	ldp	x29, x30, [sp], #64
   1cc18:	ret
   1cc1c:	mov	w23, #0x0                   	// #0
   1cc20:	mov	w0, w23
   1cc24:	ldp	x19, x20, [sp, #16]
   1cc28:	ldp	x21, x22, [sp, #32]
   1cc2c:	ldr	x23, [sp, #48]
   1cc30:	ldp	x29, x30, [sp], #64
   1cc34:	ret
   1cc38:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1cc3c:	str	w3, [x21, #8]
   1cc40:	str	x0, [x21, #16]
   1cc44:	mov	w23, #0x0                   	// #0
   1cc48:	mov	w0, w23
   1cc4c:	ldp	x19, x20, [sp, #16]
   1cc50:	ldp	x21, x22, [sp, #32]
   1cc54:	ldr	x23, [sp, #48]
   1cc58:	ldp	x29, x30, [sp], #64
   1cc5c:	ret
   1cc60:	mov	w2, w3
   1cc64:	mov	x1, x19
   1cc68:	bl	bf30 <mpfr_rint_trunc@plt>
   1cc6c:	mov	w23, w0
   1cc70:	mov	x1, x19
   1cc74:	mov	w2, w22
   1cc78:	mov	x0, x21
   1cc7c:	bl	bec0 <mpfr_frac@plt>
   1cc80:	mov	w19, w0
   1cc84:	b	1ca90 <mpfr_modf@@Base+0x80>
   1cc88:	mov	x0, #0x2                   	// #2
   1cc8c:	movk	x0, #0x8000, lsl #48
   1cc90:	cmp	x1, x0
   1cc94:	b.eq	1ccd8 <mpfr_modf@@Base+0x2c8>  // b.none
   1cc98:	ldr	w0, [x19, #8]
   1cc9c:	cmp	x1, x2
   1cca0:	str	w0, [x20, #8]
   1cca4:	ldr	w0, [x19, #8]
   1cca8:	str	w0, [x21, #8]
   1ccac:	b.eq	1ccc4 <mpfr_modf@@Base+0x2b4>  // b.none
   1ccb0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1ccb4:	str	x0, [x20, #16]
   1ccb8:	mov	w23, #0x0                   	// #0
   1ccbc:	str	x0, [x21, #16]
   1ccc0:	b	1cac8 <mpfr_modf@@Base+0xb8>
   1ccc4:	str	x1, [x20, #16]
   1ccc8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1cccc:	mov	w23, #0x0                   	// #0
   1ccd0:	str	x0, [x21, #16]
   1ccd4:	b	1cac8 <mpfr_modf@@Base+0xb8>
   1ccd8:	mrs	x2, tpidr_el0
   1ccdc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1cce0:	ldr	x3, [x0, #2576]
   1cce4:	add	x0, x0, #0xa10
   1cce8:	blr	x3
   1ccec:	add	x0, x2, x0
   1ccf0:	str	x1, [x20, #16]
   1ccf4:	str	x1, [x21, #16]
   1ccf8:	mov	w23, #0x0                   	// #0
   1ccfc:	ldr	w1, [x0]
   1cd00:	orr	w1, w1, #0x4
   1cd04:	str	w1, [x0]
   1cd08:	b	1cac8 <mpfr_modf@@Base+0xb8>
   1cd0c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   1cd10:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1cd14:	add	x2, x2, #0x670
   1cd18:	add	x0, x0, #0x680
   1cd1c:	mov	w1, #0x2b                  	// #43
   1cd20:	bl	cb40 <mpfr_assert_fail@plt>
   1cd24:	nop

000000000001cd28 <mpfr_mul_2exp@@Base>:
   1cd28:	b	c2c0 <mpfr_mul_2ui@plt>
   1cd2c:	nop

000000000001cd30 <mpfr_mul_2si@@Base>:
   1cd30:	stp	x29, x30, [sp, #-80]!
   1cd34:	mov	x29, sp
   1cd38:	stp	x21, x22, [sp, #32]
   1cd3c:	mov	w22, w3
   1cd40:	ldr	x21, [x1, #16]
   1cd44:	stp	x19, x20, [sp, #16]
   1cd48:	mov	x20, x2
   1cd4c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   1cd50:	cmp	x21, x2
   1cd54:	b.le	1cf98 <mpfr_mul_2si@@Base+0x268>
   1cd58:	stp	x23, x24, [sp, #48]
   1cd5c:	mov	x19, x0
   1cd60:	cmp	x1, x0
   1cd64:	mov	w23, #0x0                   	// #0
   1cd68:	b.eq	1ce64 <mpfr_mul_2si@@Base+0x134>  // b.none
   1cd6c:	ldr	w23, [x1, #8]
   1cd70:	ldr	x0, [x1]
   1cd74:	str	w23, [x19, #8]
   1cd78:	ldr	x5, [x19]
   1cd7c:	cmp	x5, x0
   1cd80:	b.eq	1cee0 <mpfr_mul_2si@@Base+0x1b0>  // b.none
   1cd84:	sub	x0, x0, #0x1
   1cd88:	sub	x7, x5, #0x1
   1cd8c:	ldr	x8, [x1, #24]
   1cd90:	asr	x7, x7, #6
   1cd94:	asr	x4, x0, #6
   1cd98:	ldr	x24, [x19, #24]
   1cd9c:	b.ge	1d0d4 <mpfr_mul_2si@@Base+0x3a4>  // b.tcont
   1cda0:	sub	x4, x4, x7
   1cda4:	str	x25, [sp, #64]
   1cda8:	neg	w5, w5
   1cdac:	add	x2, x7, #0x1
   1cdb0:	ands	w5, w5, #0x3f
   1cdb4:	add	x1, x8, x4, lsl #3
   1cdb8:	b.eq	1d110 <mpfr_mul_2si@@Base+0x3e0>  // b.none
   1cdbc:	ldr	x3, [x8, x4, lsl #3]
   1cdc0:	sub	w5, w5, #0x1
   1cdc4:	mov	x0, #0x1                   	// #1
   1cdc8:	cmp	w22, #0x0
   1cdcc:	lsl	x0, x0, x5
   1cdd0:	and	x9, x3, x0
   1cdd4:	sub	x0, x0, #0x1
   1cdd8:	ccmp	x9, #0x0, #0x4, ne  // ne = any
   1cddc:	and	x0, x0, x3
   1cde0:	b.ne	1ce10 <mpfr_mul_2si@@Base+0xe0>  // b.any
   1cde4:	cmp	x0, #0x0
   1cde8:	mov	x6, x4
   1cdec:	ccmp	x4, #0x0, #0x4, eq  // eq = none
   1cdf0:	b.eq	1ce10 <mpfr_mul_2si@@Base+0xe0>  // b.none
   1cdf4:	mvn	x3, x4
   1cdf8:	add	x3, x1, x3, lsl #3
   1cdfc:	nop
   1ce00:	ldr	x0, [x3, x6, lsl #3]
   1ce04:	subs	x6, x6, #0x1
   1ce08:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   1ce0c:	b.eq	1ce00 <mpfr_mul_2si@@Base+0xd0>  // b.none
   1ce10:	mov	x25, #0x2                   	// #2
   1ce14:	lsl	x25, x25, x5
   1ce18:	cmp	w22, #0x5
   1ce1c:	b.eq	1cf90 <mpfr_mul_2si@@Base+0x260>  // b.none
   1ce20:	cbnz	w22, 1cf0c <mpfr_mul_2si@@Base+0x1dc>
   1ce24:	cbz	x9, 1cf8c <mpfr_mul_2si@@Base+0x25c>
   1ce28:	ldr	x3, [x8, x4, lsl #3]
   1ce2c:	and	x5, x25, x3
   1ce30:	orr	x0, x5, x0
   1ce34:	cbnz	x0, 1cf2c <mpfr_mul_2si@@Base+0x1fc>
   1ce38:	neg	w23, w23
   1ce3c:	cmp	x24, x1
   1ce40:	b.eq	1ce50 <mpfr_mul_2si@@Base+0x120>  // b.none
   1ce44:	lsl	x2, x2, #3
   1ce48:	mov	x0, x24
   1ce4c:	bl	ba10 <memcpy@plt>
   1ce50:	ldr	x0, [x24]
   1ce54:	neg	x5, x25
   1ce58:	ldr	x25, [sp, #64]
   1ce5c:	and	x5, x0, x5
   1ce60:	str	x5, [x24]
   1ce64:	mrs	x1, tpidr_el0
   1ce68:	tbz	x20, #63, 1cfb0 <mpfr_mul_2si@@Base+0x280>
   1ce6c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1ce70:	ldr	x2, [x0, #2512]
   1ce74:	add	x0, x0, #0x9d0
   1ce78:	blr	x2
   1ce7c:	ldr	x0, [x1, x0]
   1ce80:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1ce84:	add	x2, x20, x2
   1ce88:	cmp	x2, x0
   1ce8c:	b.lt	1d074 <mpfr_mul_2si@@Base+0x344>  // b.tstop
   1ce90:	sub	x2, x0, x20
   1ce94:	cmp	x2, x21
   1ce98:	b.gt	1d074 <mpfr_mul_2si@@Base+0x344>
   1ce9c:	add	x20, x21, x20
   1cea0:	str	x20, [x19, #16]
   1cea4:	cbz	w23, 1cec8 <mpfr_mul_2si@@Base+0x198>
   1cea8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1ceac:	ldr	x2, [x0, #2576]
   1ceb0:	add	x0, x0, #0xa10
   1ceb4:	blr	x2
   1ceb8:	add	x0, x1, x0
   1cebc:	ldr	w1, [x0]
   1cec0:	orr	w1, w1, #0x8
   1cec4:	str	w1, [x0]
   1cec8:	mov	w0, w23
   1cecc:	ldp	x19, x20, [sp, #16]
   1ced0:	ldp	x21, x22, [sp, #32]
   1ced4:	ldp	x23, x24, [sp, #48]
   1ced8:	ldp	x29, x30, [sp], #80
   1cedc:	ret
   1cee0:	ldr	x1, [x1, #24]
   1cee4:	mov	w23, #0x0                   	// #0
   1cee8:	ldr	x0, [x19, #24]
   1ceec:	cmp	x0, x1
   1cef0:	b.eq	1ce64 <mpfr_mul_2si@@Base+0x134>  // b.none
   1cef4:	sub	x5, x5, #0x1
   1cef8:	asr	x5, x5, #6
   1cefc:	add	x5, x5, #0x1
   1cf00:	lsl	x2, x5, #3
   1cf04:	bl	ba10 <memcpy@plt>
   1cf08:	b	1ce64 <mpfr_mul_2si@@Base+0x134>
   1cf0c:	orr	x0, x0, x9
   1cf10:	cmp	w22, #0x1
   1cf14:	b.eq	1cf8c <mpfr_mul_2si@@Base+0x25c>  // b.none
   1cf18:	add	w3, w22, w23, lsr #31
   1cf1c:	cmp	w3, #0x3
   1cf20:	b.eq	1cf8c <mpfr_mul_2si@@Base+0x25c>  // b.none
   1cf24:	cbz	x0, 1cf90 <mpfr_mul_2si@@Base+0x260>
   1cf28:	ldr	x3, [x8, x4, lsl #3]
   1cf2c:	adds	x3, x3, x25
   1cf30:	str	x3, [x24]
   1cf34:	cset	x0, cs  // cs = hs, nlast
   1cf38:	b.cc	1d000 <mpfr_mul_2si@@Base+0x2d0>  // b.lo, b.ul, b.last
   1cf3c:	mov	x0, #0x1                   	// #1
   1cf40:	b	1cf5c <mpfr_mul_2si@@Base+0x22c>
   1cf44:	ldr	x3, [x1, x0, lsl #3]
   1cf48:	add	x4, x0, #0x1
   1cf4c:	add	x3, x3, #0x1
   1cf50:	str	x3, [x24, x0, lsl #3]
   1cf54:	cbnz	x3, 1d158 <mpfr_mul_2si@@Base+0x428>
   1cf58:	mov	x0, x4
   1cf5c:	cmp	x2, x0
   1cf60:	b.gt	1cf44 <mpfr_mul_2si@@Base+0x214>
   1cf64:	add	x2, x24, x2, lsl #3
   1cf68:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1cf6c:	add	x21, x21, #0x1
   1cf70:	stur	x0, [x2, #-8]
   1cf74:	ldr	x3, [x24]
   1cf78:	neg	x5, x25
   1cf7c:	and	x3, x5, x3
   1cf80:	ldr	x25, [sp, #64]
   1cf84:	str	x3, [x24]
   1cf88:	b	1ce64 <mpfr_mul_2si@@Base+0x134>
   1cf8c:	cbnz	x0, 1ce38 <mpfr_mul_2si@@Base+0x108>
   1cf90:	mov	w23, #0x0                   	// #0
   1cf94:	b	1ce3c <mpfr_mul_2si@@Base+0x10c>
   1cf98:	ldp	x19, x20, [sp, #16]
   1cf9c:	mov	w2, w3
   1cfa0:	ldp	x21, x22, [sp, #32]
   1cfa4:	ldp	x29, x30, [sp], #80
   1cfa8:	ldr	w3, [x1, #8]
   1cfac:	b	c6a0 <mpfr_set4@plt>
   1cfb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1cfb4:	ldr	x2, [x0, #2544]
   1cfb8:	add	x0, x0, #0x9f0
   1cfbc:	blr	x2
   1cfc0:	ldr	x0, [x1, x0]
   1cfc4:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   1cfc8:	add	x2, x20, x2
   1cfcc:	cmp	x2, x0
   1cfd0:	b.gt	1cfe0 <mpfr_mul_2si@@Base+0x2b0>
   1cfd4:	sub	x0, x0, x20
   1cfd8:	cmp	x0, x21
   1cfdc:	b.ge	1ce9c <mpfr_mul_2si@@Base+0x16c>  // b.tcont
   1cfe0:	ldr	w2, [x19, #8]
   1cfe4:	mov	w1, w22
   1cfe8:	mov	x0, x19
   1cfec:	ldp	x19, x20, [sp, #16]
   1cff0:	ldp	x21, x22, [sp, #32]
   1cff4:	ldp	x23, x24, [sp, #48]
   1cff8:	ldp	x29, x30, [sp], #80
   1cffc:	b	bf40 <mpfr_overflow@plt>
   1d000:	cmp	x24, x1
   1d004:	b.eq	1cf78 <mpfr_mul_2si@@Base+0x248>  // b.none
   1d008:	cmp	x2, #0x1
   1d00c:	b.eq	1cf78 <mpfr_mul_2si@@Base+0x248>  // b.none
   1d010:	add	x6, x4, #0x3
   1d014:	add	x4, x4, #0x1
   1d018:	add	x3, x24, #0x8
   1d01c:	add	x5, x24, #0x18
   1d020:	add	x6, x8, x6, lsl #3
   1d024:	add	x8, x8, x4, lsl #3
   1d028:	cmp	x6, x3
   1d02c:	sub	x4, x7, #0x1
   1d030:	ccmp	x8, x5, #0x2, hi  // hi = pmore
   1d034:	ccmp	x4, #0x9, #0x0, cs  // cs = hs, nlast
   1d038:	b.ls	1d230 <mpfr_mul_2si@@Base+0x500>  // b.plast
   1d03c:	lsr	x2, x7, #1
   1d040:	lsl	x2, x2, #4
   1d044:	nop
   1d048:	ldr	q0, [x8, x0]
   1d04c:	str	q0, [x3, x0]
   1d050:	add	x0, x0, #0x10
   1d054:	cmp	x0, x2
   1d058:	b.ne	1d048 <mpfr_mul_2si@@Base+0x318>  // b.any
   1d05c:	orr	x0, x7, #0x1
   1d060:	tbz	w7, #0, 1d06c <mpfr_mul_2si@@Base+0x33c>
   1d064:	ldr	x1, [x1, x0, lsl #3]
   1d068:	str	x1, [x24, x0, lsl #3]
   1d06c:	ldr	x3, [x24]
   1d070:	b	1cf78 <mpfr_mul_2si@@Base+0x248>
   1d074:	ldr	w2, [x19, #8]
   1d078:	cbnz	w22, 1d0b4 <mpfr_mul_2si@@Base+0x384>
   1d07c:	mov	x1, #0x4000000000000000    	// #4611686018427387904
   1d080:	add	x1, x20, x1
   1d084:	cmp	x0, x1
   1d088:	b.gt	1d26c <mpfr_mul_2si@@Base+0x53c>
   1d08c:	add	x20, x20, #0x1
   1d090:	sub	x0, x0, x20
   1d094:	cmp	x0, x21
   1d098:	b.gt	1d26c <mpfr_mul_2si@@Base+0x53c>
   1d09c:	tbnz	w2, #31, 1d254 <mpfr_mul_2si@@Base+0x524>
   1d0a0:	tbnz	w23, #31, 1d0b4 <mpfr_mul_2si@@Base+0x384>
   1d0a4:	mov	x0, x19
   1d0a8:	bl	bf00 <mpfr_powerof2_raw@plt>
   1d0ac:	cmp	w0, #0x0
   1d0b0:	cset	w22, ne  // ne = any
   1d0b4:	ldr	w2, [x19, #8]
   1d0b8:	mov	w1, w22
   1d0bc:	mov	x0, x19
   1d0c0:	ldp	x19, x20, [sp, #16]
   1d0c4:	ldp	x21, x22, [sp, #32]
   1d0c8:	ldp	x23, x24, [sp, #48]
   1d0cc:	ldp	x29, x30, [sp], #80
   1d0d0:	b	c3c0 <mpfr_underflow@plt>
   1d0d4:	sub	x7, x7, x4
   1d0d8:	add	x4, x4, #0x1
   1d0dc:	lsl	x23, x7, #3
   1d0e0:	add	x0, x24, x23
   1d0e4:	cmp	x0, x8
   1d0e8:	b.eq	1d0f8 <mpfr_mul_2si@@Base+0x3c8>  // b.none
   1d0ec:	lsl	x2, x4, #3
   1d0f0:	mov	x1, x8
   1d0f4:	bl	ba10 <memcpy@plt>
   1d0f8:	mov	x2, x23
   1d0fc:	mov	x0, x24
   1d100:	mov	w1, #0x0                   	// #0
   1d104:	mov	w23, #0x0                   	// #0
   1d108:	bl	c110 <memset@plt>
   1d10c:	b	1ce64 <mpfr_mul_2si@@Base+0x134>
   1d110:	ldur	x0, [x1, #-8]
   1d114:	cmp	w3, #0x0
   1d118:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   1d11c:	and	x9, x0, #0x8000000000000000
   1d120:	and	x5, x0, #0x7fffffffffffffff
   1d124:	b.lt	1d20c <mpfr_mul_2si@@Base+0x4dc>  // b.tstop
   1d128:	subs	x3, x4, #0x1
   1d12c:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   1d130:	b.ne	1d260 <mpfr_mul_2si@@Base+0x530>  // b.any
   1d134:	mvn	x5, x4
   1d138:	add	x5, x1, x5, lsl #3
   1d13c:	nop
   1d140:	ldr	x0, [x5, x3, lsl #3]
   1d144:	subs	x3, x3, #0x1
   1d148:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   1d14c:	b.eq	1d140 <mpfr_mul_2si@@Base+0x410>  // b.none
   1d150:	mov	x25, #0x1                   	// #1
   1d154:	b	1ce18 <mpfr_mul_2si@@Base+0xe8>
   1d158:	cmp	x24, x1
   1d15c:	b.eq	1d06c <mpfr_mul_2si@@Base+0x33c>  // b.none
   1d160:	cmp	x0, x7
   1d164:	b.ge	1d06c <mpfr_mul_2si@@Base+0x33c>  // b.tcont
   1d168:	add	x0, x0, #0x3
   1d16c:	sub	x6, x7, x4
   1d170:	lsl	x0, x0, #3
   1d174:	sub	x3, x0, #0x10
   1d178:	add	x8, x24, x0
   1d17c:	add	x5, x1, x3
   1d180:	add	x0, x1, x0
   1d184:	cmp	x5, x8
   1d188:	add	x3, x24, x3
   1d18c:	ccmp	x3, x0, #0x2, cc  // cc = lo, ul, last
   1d190:	cset	w8, cs  // cs = hs, nlast
   1d194:	cmp	x6, #0x9
   1d198:	ccmp	x4, x7, #0x0, hi  // hi = pmore
   1d19c:	cset	w0, le
   1d1a0:	tst	w8, w0
   1d1a4:	b.eq	1d1f4 <mpfr_mul_2si@@Base+0x4c4>  // b.none
   1d1a8:	sub	x2, x2, x4
   1d1ac:	cmp	x4, x7
   1d1b0:	csinc	x6, x2, xzr, le
   1d1b4:	mov	x0, #0x0                   	// #0
   1d1b8:	lsr	x2, x6, #1
   1d1bc:	lsl	x2, x2, #4
   1d1c0:	ldr	q0, [x5, x0]
   1d1c4:	str	q0, [x3, x0]
   1d1c8:	add	x0, x0, #0x10
   1d1cc:	cmp	x2, x0
   1d1d0:	b.ne	1d1c0 <mpfr_mul_2si@@Base+0x490>  // b.any
   1d1d4:	and	x0, x6, #0xfffffffffffffffe
   1d1d8:	add	x4, x0, x4
   1d1dc:	cmp	x0, x6
   1d1e0:	b.eq	1d06c <mpfr_mul_2si@@Base+0x33c>  // b.none
   1d1e4:	ldr	x0, [x1, x4, lsl #3]
   1d1e8:	str	x0, [x24, x4, lsl #3]
   1d1ec:	ldr	x3, [x24]
   1d1f0:	b	1cf78 <mpfr_mul_2si@@Base+0x248>
   1d1f4:	ldr	x0, [x1, x4, lsl #3]
   1d1f8:	str	x0, [x24, x4, lsl #3]
   1d1fc:	cmp	x4, x7
   1d200:	add	x4, x4, #0x1
   1d204:	b.lt	1d1f4 <mpfr_mul_2si@@Base+0x4c4>  // b.tstop
   1d208:	b	1d06c <mpfr_mul_2si@@Base+0x33c>
   1d20c:	cmp	w3, #0x5
   1d210:	mov	x25, #0x1                   	// #1
   1d214:	b.eq	1cf90 <mpfr_mul_2si@@Base+0x260>  // b.none
   1d218:	cmp	w3, #0x1
   1d21c:	b.eq	1ce38 <mpfr_mul_2si@@Base+0x108>  // b.none
   1d220:	add	w3, w3, w23, lsr #31
   1d224:	cmp	w3, #0x3
   1d228:	b.ne	1cf24 <mpfr_mul_2si@@Base+0x1f4>  // b.any
   1d22c:	b	1ce38 <mpfr_mul_2si@@Base+0x108>
   1d230:	mov	x0, #0x1                   	// #1
   1d234:	nop
   1d238:	ldr	x3, [x1, x0, lsl #3]
   1d23c:	str	x3, [x24, x0, lsl #3]
   1d240:	add	x0, x0, #0x1
   1d244:	cmp	x2, x0
   1d248:	b.ne	1d238 <mpfr_mul_2si@@Base+0x508>  // b.any
   1d24c:	ldr	x3, [x24]
   1d250:	b	1cf78 <mpfr_mul_2si@@Base+0x248>
   1d254:	cmp	w23, #0x0
   1d258:	b.le	1d0a4 <mpfr_mul_2si@@Base+0x374>
   1d25c:	b	1d0b4 <mpfr_mul_2si@@Base+0x384>
   1d260:	mov	x0, x5
   1d264:	mov	x25, #0x1                   	// #1
   1d268:	b	1ce18 <mpfr_mul_2si@@Base+0xe8>
   1d26c:	mov	w22, #0x1                   	// #1
   1d270:	b	1d0b4 <mpfr_mul_2si@@Base+0x384>
   1d274:	nop

000000000001d278 <mpfr_mul_2ui@@Base>:
   1d278:	stp	x29, x30, [sp, #-64]!
   1d27c:	cmp	x0, x1
   1d280:	mov	x29, sp
   1d284:	stp	x19, x20, [sp, #16]
   1d288:	mov	x20, x0
   1d28c:	mov	x19, x2
   1d290:	stp	x21, x22, [sp, #32]
   1d294:	mov	w21, w3
   1d298:	mov	w22, #0x0                   	// #0
   1d29c:	str	x23, [sp, #48]
   1d2a0:	b.eq	1d2b4 <mpfr_mul_2ui@@Base+0x3c>  // b.none
   1d2a4:	mov	w2, w3
   1d2a8:	ldr	w3, [x1, #8]
   1d2ac:	bl	c6a0 <mpfr_set4@plt>
   1d2b0:	mov	w22, w0
   1d2b4:	ldr	x1, [x20, #16]
   1d2b8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1d2bc:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   1d2c0:	cmp	x1, x0
   1d2c4:	b.le	1d30c <mpfr_mul_2ui@@Base+0x94>
   1d2c8:	tbnz	x19, #63, 1d324 <mpfr_mul_2ui@@Base+0xac>
   1d2cc:	mrs	x1, tpidr_el0
   1d2d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1d2d4:	ldr	x2, [x0, #2544]
   1d2d8:	add	x0, x0, #0x9f0
   1d2dc:	blr	x2
   1d2e0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1d2e4:	add	x3, x19, x3
   1d2e8:	ldr	x2, [x20, #16]
   1d2ec:	ldr	x1, [x1, x0]
   1d2f0:	cmp	x3, x1
   1d2f4:	b.gt	1d348 <mpfr_mul_2ui@@Base+0xd0>
   1d2f8:	sub	x1, x1, x19
   1d2fc:	cmp	x1, x2
   1d300:	b.lt	1d348 <mpfr_mul_2ui@@Base+0xd0>  // b.tstop
   1d304:	add	x19, x19, x2
   1d308:	str	x19, [x20, #16]
   1d30c:	mov	w0, w22
   1d310:	ldp	x19, x20, [sp, #16]
   1d314:	ldp	x21, x22, [sp, #32]
   1d318:	ldr	x23, [sp, #48]
   1d31c:	ldp	x29, x30, [sp], #64
   1d320:	ret
   1d324:	mov	w3, w21
   1d328:	mov	x1, x20
   1d32c:	mov	x0, x20
   1d330:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   1d334:	add	x19, x19, x23
   1d338:	bl	1d278 <mpfr_mul_2ui@@Base>
   1d33c:	cbz	w0, 1d2c8 <mpfr_mul_2ui@@Base+0x50>
   1d340:	mov	w22, w0
   1d344:	b	1d30c <mpfr_mul_2ui@@Base+0x94>
   1d348:	ldr	w2, [x20, #8]
   1d34c:	mov	w1, w21
   1d350:	mov	x0, x20
   1d354:	ldp	x19, x20, [sp, #16]
   1d358:	ldp	x21, x22, [sp, #32]
   1d35c:	ldr	x23, [sp, #48]
   1d360:	ldp	x29, x30, [sp], #64
   1d364:	b	bf40 <mpfr_overflow@plt>

000000000001d368 <mpfr_neg@@Base>:
   1d368:	cmp	x0, x1
   1d36c:	b.ne	1d39c <mpfr_neg@@Base+0x34>  // b.any
   1d370:	mov	x3, x0
   1d374:	ldr	w0, [x0, #8]
   1d378:	mov	x1, #0x2                   	// #2
   1d37c:	neg	w0, w0
   1d380:	movk	x1, #0x8000, lsl #48
   1d384:	ldr	x2, [x3, #16]
   1d388:	str	w0, [x3, #8]
   1d38c:	cmp	x2, x1
   1d390:	b.eq	1d3a8 <mpfr_neg@@Base+0x40>  // b.none
   1d394:	mov	w0, #0x0                   	// #0
   1d398:	ret
   1d39c:	ldr	w3, [x1, #8]
   1d3a0:	neg	w3, w3
   1d3a4:	b	c6a0 <mpfr_set4@plt>
   1d3a8:	mrs	x1, tpidr_el0
   1d3ac:	stp	x29, x30, [sp, #-16]!
   1d3b0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1d3b4:	ldr	x2, [x0, #2576]
   1d3b8:	add	x0, x0, #0xa10
   1d3bc:	blr	x2
   1d3c0:	add	x0, x1, x0
   1d3c4:	mov	x29, sp
   1d3c8:	ldr	w1, [x0]
   1d3cc:	orr	w1, w1, #0x4
   1d3d0:	str	w1, [x0]
   1d3d4:	mov	w0, #0x0                   	// #0
   1d3d8:	ldp	x29, x30, [sp], #16
   1d3dc:	ret

000000000001d3e0 <mpfr_nexttozero@@Base>:
   1d3e0:	stp	x29, x30, [sp, #-32]!
   1d3e4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1d3e8:	mov	x29, sp
   1d3ec:	str	x19, [sp, #16]
   1d3f0:	mov	x19, x0
   1d3f4:	ldr	x0, [x0, #16]
   1d3f8:	cmp	x0, x1
   1d3fc:	b.le	1d474 <mpfr_nexttozero@@Base+0x94>
   1d400:	ldr	x5, [x19, #24]
   1d404:	mov	x0, #0x1                   	// #1
   1d408:	ldr	x3, [x19]
   1d40c:	ldr	x1, [x5]
   1d410:	neg	w2, w3
   1d414:	sub	x3, x3, #0x1
   1d418:	lsl	x0, x0, x2
   1d41c:	sub	x2, x1, x0
   1d420:	str	x2, [x5]
   1d424:	asr	x3, x3, #6
   1d428:	cmp	x0, x1
   1d42c:	add	x0, x3, #0x1
   1d430:	b.ls	1d458 <mpfr_nexttozero@@Base+0x78>  // b.plast
   1d434:	add	x3, x5, x3, lsl #3
   1d438:	mov	x1, x5
   1d43c:	b	1d450 <mpfr_nexttozero@@Base+0x70>
   1d440:	ldr	x2, [x1, #8]
   1d444:	sub	x4, x2, #0x1
   1d448:	str	x4, [x1, #8]!
   1d44c:	cbnz	x2, 1d458 <mpfr_nexttozero@@Base+0x78>
   1d450:	cmp	x3, x1
   1d454:	b.ne	1d440 <mpfr_nexttozero@@Base+0x60>  // b.any
   1d458:	lsl	x1, x0, #3
   1d45c:	sub	x1, x1, #0x8
   1d460:	ldr	x0, [x5, x1]
   1d464:	tbz	x0, #63, 1d4b8 <mpfr_nexttozero@@Base+0xd8>
   1d468:	ldr	x19, [sp, #16]
   1d46c:	ldp	x29, x30, [sp], #32
   1d470:	ret
   1d474:	b.eq	1d4f4 <mpfr_nexttozero@@Base+0x114>  // b.none
   1d478:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1d47c:	cmp	x0, x1
   1d480:	b.ne	1d528 <mpfr_nexttozero@@Base+0x148>  // b.any
   1d484:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1d488:	ldr	x2, [x0, #2512]
   1d48c:	add	x0, x0, #0x9d0
   1d490:	blr	x2
   1d494:	mrs	x1, tpidr_el0
   1d498:	ldr	w2, [x19, #8]
   1d49c:	neg	w2, w2
   1d4a0:	str	w2, [x19, #8]
   1d4a4:	ldr	x1, [x1, x0]
   1d4a8:	mov	x0, x19
   1d4ac:	ldr	x19, [sp, #16]
   1d4b0:	ldp	x29, x30, [sp], #32
   1d4b4:	b	c2b0 <mpfr_setmin@plt>
   1d4b8:	mrs	x3, tpidr_el0
   1d4bc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1d4c0:	ldr	x2, [x0, #2512]
   1d4c4:	add	x0, x0, #0x9d0
   1d4c8:	blr	x2
   1d4cc:	ldr	x2, [x19, #16]
   1d4d0:	ldr	x0, [x3, x0]
   1d4d4:	cmp	x0, x2
   1d4d8:	b.eq	1d51c <mpfr_nexttozero@@Base+0x13c>  // b.none
   1d4dc:	sub	x2, x2, #0x1
   1d4e0:	str	x2, [x19, #16]
   1d4e4:	ldr	x0, [x5, x1]
   1d4e8:	orr	x0, x0, #0x8000000000000000
   1d4ec:	str	x0, [x5, x1]
   1d4f0:	b	1d468 <mpfr_nexttozero@@Base+0x88>
   1d4f4:	mrs	x1, tpidr_el0
   1d4f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1d4fc:	ldr	x2, [x0, #2544]
   1d500:	add	x0, x0, #0x9f0
   1d504:	blr	x2
   1d508:	ldr	x1, [x1, x0]
   1d50c:	mov	x0, x19
   1d510:	ldr	x19, [sp, #16]
   1d514:	ldp	x29, x30, [sp], #32
   1d518:	b	c0d0 <mpfr_setmax@plt>
   1d51c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1d520:	str	x0, [x19, #16]
   1d524:	b	1d468 <mpfr_nexttozero@@Base+0x88>
   1d528:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   1d52c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1d530:	add	x2, x2, #0x6e0
   1d534:	add	x0, x0, #0x718
   1d538:	mov	w1, #0x2b                  	// #43
   1d53c:	bl	cb40 <mpfr_assert_fail@plt>
   1d540:	b	1d484 <mpfr_nexttozero@@Base+0xa4>
   1d544:	nop

000000000001d548 <mpfr_nexttoinf@@Base>:
   1d548:	stp	x29, x30, [sp, #-16]!
   1d54c:	mov	x3, x0
   1d550:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1d554:	mov	x29, sp
   1d558:	ldr	x0, [x0, #16]
   1d55c:	cmp	x0, x1
   1d560:	b.le	1d5f0 <mpfr_nexttoinf@@Base+0xa8>
   1d564:	ldr	x5, [x3, #24]
   1d568:	mov	x1, #0x1                   	// #1
   1d56c:	ldr	x0, [x3]
   1d570:	ldr	x2, [x5]
   1d574:	neg	w4, w0
   1d578:	lsl	x1, x1, x4
   1d57c:	adds	x1, x1, x2
   1d580:	str	x1, [x5]
   1d584:	b.cc	1d5e8 <mpfr_nexttoinf@@Base+0xa0>  // b.lo, b.ul, b.last
   1d588:	sub	x0, x0, #0x1
   1d58c:	mov	x2, x5
   1d590:	asr	x4, x0, #6
   1d594:	add	x0, x5, x4, lsl #3
   1d598:	b	1d5ac <mpfr_nexttoinf@@Base+0x64>
   1d59c:	ldr	x1, [x2, #8]
   1d5a0:	add	x1, x1, #0x1
   1d5a4:	str	x1, [x2, #8]!
   1d5a8:	cbnz	x1, 1d5e8 <mpfr_nexttoinf@@Base+0xa0>
   1d5ac:	cmp	x2, x0
   1d5b0:	b.ne	1d59c <mpfr_nexttoinf@@Base+0x54>  // b.any
   1d5b4:	mrs	x1, tpidr_el0
   1d5b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1d5bc:	ldr	x2, [x0, #2544]
   1d5c0:	add	x0, x0, #0x9f0
   1d5c4:	blr	x2
   1d5c8:	ldr	x2, [x3, #16]
   1d5cc:	ldr	x0, [x1, x0]
   1d5d0:	cmp	x0, x2
   1d5d4:	b.eq	1d620 <mpfr_nexttoinf@@Base+0xd8>  // b.none
   1d5d8:	add	x2, x2, #0x1
   1d5dc:	str	x2, [x3, #16]
   1d5e0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1d5e4:	str	x0, [x5, x4, lsl #3]
   1d5e8:	ldp	x29, x30, [sp], #16
   1d5ec:	ret
   1d5f0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1d5f4:	cmp	x0, x1
   1d5f8:	b.ne	1d5e8 <mpfr_nexttoinf@@Base+0xa0>  // b.any
   1d5fc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1d600:	ldr	x2, [x0, #2512]
   1d604:	add	x0, x0, #0x9d0
   1d608:	blr	x2
   1d60c:	mrs	x1, tpidr_el0
   1d610:	ldp	x29, x30, [sp], #16
   1d614:	ldr	x1, [x1, x0]
   1d618:	mov	x0, x3
   1d61c:	b	c2b0 <mpfr_setmin@plt>
   1d620:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1d624:	str	x0, [x3, #16]
   1d628:	b	1d5e8 <mpfr_nexttoinf@@Base+0xa0>
   1d62c:	nop

000000000001d630 <mpfr_nextabove@@Base>:
   1d630:	ldr	x3, [x0, #16]
   1d634:	mov	x2, #0x2                   	// #2
   1d638:	movk	x2, #0x8000, lsl #48
   1d63c:	cmp	x3, x2
   1d640:	b.eq	1d654 <mpfr_nextabove@@Base+0x24>  // b.none
   1d644:	ldr	w1, [x0, #8]
   1d648:	tbnz	w1, #31, 1d650 <mpfr_nextabove@@Base+0x20>
   1d64c:	b	c670 <mpfr_nexttoinf@plt>
   1d650:	b	c460 <mpfr_nexttozero@plt>
   1d654:	mrs	x1, tpidr_el0
   1d658:	stp	x29, x30, [sp, #-16]!
   1d65c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1d660:	ldr	x2, [x0, #2576]
   1d664:	add	x0, x0, #0xa10
   1d668:	blr	x2
   1d66c:	add	x0, x1, x0
   1d670:	mov	x29, sp
   1d674:	ldr	w1, [x0]
   1d678:	orr	w1, w1, #0x4
   1d67c:	str	w1, [x0]
   1d680:	ldp	x29, x30, [sp], #16
   1d684:	ret

000000000001d688 <mpfr_nextbelow@@Base>:
   1d688:	ldr	x3, [x0, #16]
   1d68c:	mov	x2, #0x2                   	// #2
   1d690:	movk	x2, #0x8000, lsl #48
   1d694:	cmp	x3, x2
   1d698:	b.eq	1d6ac <mpfr_nextbelow@@Base+0x24>  // b.none
   1d69c:	ldr	w1, [x0, #8]
   1d6a0:	tbnz	w1, #31, 1d6a8 <mpfr_nextbelow@@Base+0x20>
   1d6a4:	b	c460 <mpfr_nexttozero@plt>
   1d6a8:	b	c670 <mpfr_nexttoinf@plt>
   1d6ac:	mrs	x1, tpidr_el0
   1d6b0:	stp	x29, x30, [sp, #-16]!
   1d6b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1d6b8:	ldr	x2, [x0, #2576]
   1d6bc:	add	x0, x0, #0xa10
   1d6c0:	blr	x2
   1d6c4:	add	x0, x1, x0
   1d6c8:	mov	x29, sp
   1d6cc:	ldr	w1, [x0]
   1d6d0:	orr	w1, w1, #0x4
   1d6d4:	str	w1, [x0]
   1d6d8:	ldp	x29, x30, [sp], #16
   1d6dc:	ret

000000000001d6e0 <mpfr_nexttoward@@Base>:
   1d6e0:	stp	x29, x30, [sp, #-32]!
   1d6e4:	mov	x3, #0x2                   	// #2
   1d6e8:	movk	x3, #0x8000, lsl #48
   1d6ec:	mov	x29, sp
   1d6f0:	ldr	x4, [x0, #16]
   1d6f4:	cmp	x4, x3
   1d6f8:	b.eq	1d748 <mpfr_nexttoward@@Base+0x68>  // b.none
   1d6fc:	ldr	x2, [x1, #16]
   1d700:	str	x19, [sp, #16]
   1d704:	mov	x19, x0
   1d708:	cmp	x2, x3
   1d70c:	b.eq	1d774 <mpfr_nexttoward@@Base+0x94>  // b.none
   1d710:	mov	w2, #0x1                   	// #1
   1d714:	bl	c9a0 <mpfr_cmp3@plt>
   1d718:	cmp	w0, #0x0
   1d71c:	cbz	w0, 1d73c <mpfr_nexttoward@@Base+0x5c>
   1d720:	mov	x0, x19
   1d724:	ldr	x19, [sp, #16]
   1d728:	b.lt	1d734 <mpfr_nexttoward@@Base+0x54>  // b.tstop
   1d72c:	ldp	x29, x30, [sp], #32
   1d730:	b	bdd0 <mpfr_nextbelow@plt>
   1d734:	ldp	x29, x30, [sp], #32
   1d738:	b	c120 <mpfr_nextabove@plt>
   1d73c:	ldr	x19, [sp, #16]
   1d740:	ldp	x29, x30, [sp], #32
   1d744:	ret
   1d748:	mrs	x1, tpidr_el0
   1d74c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1d750:	ldr	x2, [x0, #2576]
   1d754:	add	x0, x0, #0xa10
   1d758:	blr	x2
   1d75c:	add	x0, x1, x0
   1d760:	ldr	w1, [x0]
   1d764:	orr	w1, w1, #0x4
   1d768:	str	w1, [x0]
   1d76c:	ldp	x29, x30, [sp], #32
   1d770:	ret
   1d774:	mrs	x1, tpidr_el0
   1d778:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1d77c:	ldr	x3, [x0, #2576]
   1d780:	add	x0, x0, #0xa10
   1d784:	blr	x3
   1d788:	add	x0, x1, x0
   1d78c:	str	x2, [x19, #16]
   1d790:	ldr	x19, [sp, #16]
   1d794:	ldr	w1, [x0]
   1d798:	orr	w1, w1, #0x4
   1d79c:	str	w1, [x0]
   1d7a0:	b	1d740 <mpfr_nexttoward@@Base+0x60>
   1d7a4:	nop

000000000001d7a8 <__gmpfr_out_str@@Base>:
   1d7a8:	stp	x29, x30, [sp, #-80]!
   1d7ac:	sub	w6, w1, #0x2
   1d7b0:	cmp	w6, #0x3c
   1d7b4:	mov	x29, sp
   1d7b8:	stp	x19, x20, [sp, #16]
   1d7bc:	stp	x21, x22, [sp, #32]
   1d7c0:	mov	w21, w1
   1d7c4:	b.hi	1d9b0 <__gmpfr_out_str@@Base+0x208>  // b.pmore
   1d7c8:	mov	x1, x3
   1d7cc:	mov	x3, x2
   1d7d0:	mov	w5, w4
   1d7d4:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   1d7d8:	ldr	x2, [x1, #16]
   1d7dc:	cmp	x2, x4
   1d7e0:	b.le	1d934 <__gmpfr_out_str@@Base+0x18c>
   1d7e4:	mov	x4, x1
   1d7e8:	mov	w2, w21
   1d7ec:	add	x1, sp, #0x48
   1d7f0:	mov	x22, x0
   1d7f4:	mov	x0, #0x0                   	// #0
   1d7f8:	str	x23, [sp, #48]
   1d7fc:	bl	c500 <mpfr_get_str@plt>
   1d800:	mov	x20, x0
   1d804:	bl	bab0 <strlen@plt>
   1d808:	add	x19, x0, #0x1
   1d80c:	mov	x23, x20
   1d810:	ldrb	w0, [x20]
   1d814:	cmp	w0, #0x2d
   1d818:	b.eq	1d8f0 <__gmpfr_out_str@@Base+0x148>  // b.none
   1d81c:	mov	x1, x22
   1d820:	bl	bda0 <fputc@plt>
   1d824:	cmn	w0, #0x1
   1d828:	b.ne	1d854 <__gmpfr_out_str@@Base+0xac>  // b.any
   1d82c:	mov	x1, x19
   1d830:	mov	x0, x20
   1d834:	bl	cc20 <mpfr_free_func@plt>
   1d838:	mov	x19, #0x0                   	// #0
   1d83c:	ldr	x23, [sp, #48]
   1d840:	mov	x0, x19
   1d844:	ldp	x19, x20, [sp, #16]
   1d848:	ldp	x21, x22, [sp, #32]
   1d84c:	ldp	x29, x30, [sp], #80
   1d850:	ret
   1d854:	bl	bea0 <localeconv@plt>
   1d858:	mov	x1, x0
   1d85c:	mov	w0, #0x2e                  	// #46
   1d860:	ldr	x1, [x1]
   1d864:	ldrb	w1, [x1, #1]
   1d868:	cbz	w1, 1d924 <__gmpfr_out_str@@Base+0x17c>
   1d86c:	mov	x1, x22
   1d870:	bl	bda0 <fputc@plt>
   1d874:	cmn	w0, #0x1
   1d878:	b.eq	1d82c <__gmpfr_out_str@@Base+0x84>  // b.none
   1d87c:	add	x0, x23, #0x1
   1d880:	mov	x1, x22
   1d884:	bl	bac0 <fputs@plt>
   1d888:	cmn	w0, #0x1
   1d88c:	b.eq	1d82c <__gmpfr_out_str@@Base+0x84>  // b.none
   1d890:	mov	x0, x20
   1d894:	mov	x1, x19
   1d898:	bl	cc20 <mpfr_free_func@plt>
   1d89c:	ldr	x2, [sp, #72]
   1d8a0:	sub	x2, x2, #0x1
   1d8a4:	str	x2, [sp, #72]
   1d8a8:	cbz	x2, 1d90c <__gmpfr_out_str@@Base+0x164>
   1d8ac:	cmp	w21, #0xb
   1d8b0:	adrp	x3, 60000 <mpfr_free_pool@@Base+0x4558>
   1d8b4:	add	x3, x3, #0x730
   1d8b8:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x4558>
   1d8bc:	add	x1, x1, #0x728
   1d8c0:	mov	x0, x22
   1d8c4:	csel	x1, x1, x3, lt  // lt = tstop
   1d8c8:	bl	cce0 <fprintf@plt>
   1d8cc:	cmp	w0, #0x0
   1d8d0:	add	x19, x19, w0, sxtw
   1d8d4:	csel	x19, x19, xzr, ge  // ge = tcont
   1d8d8:	mov	x0, x19
   1d8dc:	ldp	x19, x20, [sp, #16]
   1d8e0:	ldp	x21, x22, [sp, #32]
   1d8e4:	ldr	x23, [sp, #48]
   1d8e8:	ldp	x29, x30, [sp], #80
   1d8ec:	ret
   1d8f0:	mov	x1, x22
   1d8f4:	bl	bda0 <fputc@plt>
   1d8f8:	cmn	w0, #0x1
   1d8fc:	b.eq	1d82c <__gmpfr_out_str@@Base+0x84>  // b.none
   1d900:	ldrb	w0, [x20, #1]
   1d904:	add	x23, x20, #0x1
   1d908:	b	1d81c <__gmpfr_out_str@@Base+0x74>
   1d90c:	mov	x0, x19
   1d910:	ldp	x19, x20, [sp, #16]
   1d914:	ldp	x21, x22, [sp, #32]
   1d918:	ldr	x23, [sp, #48]
   1d91c:	ldp	x29, x30, [sp], #80
   1d920:	ret
   1d924:	bl	bea0 <localeconv@plt>
   1d928:	ldr	x0, [x0]
   1d92c:	ldrb	w0, [x0]
   1d930:	b	1d86c <__gmpfr_out_str@@Base+0xc4>
   1d934:	mov	x3, #0x2                   	// #2
   1d938:	movk	x3, #0x8000, lsl #48
   1d93c:	cmp	x2, x3
   1d940:	b.eq	1d994 <__gmpfr_out_str@@Base+0x1ec>  // b.none
   1d944:	ldr	w3, [x1, #8]
   1d948:	cmp	x2, x4
   1d94c:	b.eq	1d97c <__gmpfr_out_str@@Base+0x1d4>  // b.none
   1d950:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x4558>
   1d954:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   1d958:	add	x1, x1, #0x720
   1d95c:	cmp	w3, #0x0
   1d960:	add	x2, x2, #0xa98
   1d964:	csel	x1, x2, x1, gt
   1d968:	bl	cce0 <fprintf@plt>
   1d96c:	cmp	w0, #0x0
   1d970:	csel	w0, w0, wzr, ge  // ge = tcont
   1d974:	sxtw	x19, w0
   1d978:	b	1d840 <__gmpfr_out_str@@Base+0x98>
   1d97c:	adrp	x1, 5f000 <mpfr_free_pool@@Base+0x3558>
   1d980:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   1d984:	add	x1, x1, #0xf68
   1d988:	cmp	w3, #0x0
   1d98c:	add	x2, x2, #0x428
   1d990:	b	1d964 <__gmpfr_out_str@@Base+0x1bc>
   1d994:	adrp	x1, 5f000 <mpfr_free_pool@@Base+0x3558>
   1d998:	add	x1, x1, #0x420
   1d99c:	bl	cce0 <fprintf@plt>
   1d9a0:	cmp	w0, #0x0
   1d9a4:	csel	w0, w0, wzr, ge  // ge = tcont
   1d9a8:	sxtw	x19, w0
   1d9ac:	b	1d840 <__gmpfr_out_str@@Base+0x98>
   1d9b0:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   1d9b4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1d9b8:	add	x2, x2, #0x738
   1d9bc:	add	x0, x0, #0x750
   1d9c0:	mov	w1, #0x2c                  	// #44
   1d9c4:	str	x23, [sp, #48]
   1d9c8:	bl	cb40 <mpfr_assert_fail@plt>
   1d9cc:	nop

000000000001d9d0 <mpfr_snprintf@@Base>:
   1d9d0:	stp	x29, x30, [sp, #-256]!
   1d9d4:	mov	w8, #0xffffffd8            	// #-40
   1d9d8:	mov	w10, #0xffffff80            	// #-128
   1d9dc:	mov	x29, sp
   1d9e0:	add	x9, sp, #0xd0
   1d9e4:	add	x11, sp, #0x100
   1d9e8:	stp	x11, x11, [sp, #48]
   1d9ec:	str	x9, [sp, #64]
   1d9f0:	mov	x9, x1
   1d9f4:	stp	w8, w10, [sp, #72]
   1d9f8:	mov	x8, x2
   1d9fc:	ldp	x12, x13, [sp, #48]
   1da00:	mov	x1, x0
   1da04:	ldp	x10, x11, [sp, #64]
   1da08:	mov	x2, x9
   1da0c:	mov	x0, #0x0                   	// #0
   1da10:	stp	x12, x13, [sp, #16]
   1da14:	stp	x10, x11, [sp, #32]
   1da18:	str	q0, [sp, #80]
   1da1c:	str	q1, [sp, #96]
   1da20:	str	q2, [sp, #112]
   1da24:	str	q3, [sp, #128]
   1da28:	str	q4, [sp, #144]
   1da2c:	str	q5, [sp, #160]
   1da30:	str	q6, [sp, #176]
   1da34:	str	q7, [sp, #192]
   1da38:	stp	x3, x4, [sp, #216]
   1da3c:	add	x4, sp, #0x10
   1da40:	mov	x3, x8
   1da44:	stp	x5, x6, [sp, #232]
   1da48:	str	x7, [sp, #248]
   1da4c:	bl	bc20 <mpfr_vasnprintf_aux@plt>
   1da50:	ldp	x29, x30, [sp], #256
   1da54:	ret

000000000001da58 <__gmpfr_vsnprintf@@Base>:
   1da58:	mov	x5, x3
   1da5c:	stp	x29, x30, [sp, #-48]!
   1da60:	mov	x4, x1
   1da64:	mov	x29, sp
   1da68:	ldp	x8, x9, [x5]
   1da6c:	mov	x1, x0
   1da70:	ldp	x6, x7, [x5, #16]
   1da74:	mov	x3, x2
   1da78:	mov	x0, #0x0                   	// #0
   1da7c:	mov	x2, x4
   1da80:	add	x4, sp, #0x10
   1da84:	stp	x8, x9, [sp, #16]
   1da88:	stp	x6, x7, [sp, #32]
   1da8c:	bl	bc20 <mpfr_vasnprintf_aux@plt>
   1da90:	ldp	x29, x30, [sp], #48
   1da94:	ret

000000000001da98 <__gmpfr_vasprintf@@Base>:
   1da98:	mov	x5, x2
   1da9c:	stp	x29, x30, [sp, #-48]!
   1daa0:	mov	x3, x1
   1daa4:	mov	x29, sp
   1daa8:	ldp	x6, x7, [x5]
   1daac:	stp	x6, x7, [sp, #16]
   1dab0:	add	x4, sp, #0x10
   1dab4:	ldp	x6, x7, [x5, #16]
   1dab8:	mov	x2, #0x0                   	// #0
   1dabc:	mov	x1, #0x0                   	// #0
   1dac0:	stp	x6, x7, [sp, #32]
   1dac4:	bl	bc20 <mpfr_vasnprintf_aux@plt>
   1dac8:	ldp	x29, x30, [sp], #48
   1dacc:	ret

000000000001dad0 <mpfr_printf@@Base>:
   1dad0:	stp	x29, x30, [sp, #-304]!
   1dad4:	mov	w10, #0xffffffc8            	// #-56
   1dad8:	mov	w9, #0xffffff80            	// #-128
   1dadc:	mov	x29, sp
   1dae0:	add	x11, sp, #0xf0
   1dae4:	add	x8, sp, #0x130
   1dae8:	stp	x8, x8, [sp, #80]
   1daec:	mov	x8, x0
   1daf0:	add	x0, sp, #0x48
   1daf4:	str	x11, [sp, #96]
   1daf8:	stp	w10, w9, [sp, #104]
   1dafc:	ldp	x12, x13, [sp, #80]
   1db00:	str	x19, [sp, #16]
   1db04:	ldp	x10, x11, [sp, #96]
   1db08:	stp	x12, x13, [sp, #32]
   1db0c:	stp	x10, x11, [sp, #48]
   1db10:	str	q0, [sp, #112]
   1db14:	str	q1, [sp, #128]
   1db18:	str	q2, [sp, #144]
   1db1c:	str	q3, [sp, #160]
   1db20:	str	q4, [sp, #176]
   1db24:	str	q5, [sp, #192]
   1db28:	str	q6, [sp, #208]
   1db2c:	str	q7, [sp, #224]
   1db30:	stp	x1, x2, [sp, #248]
   1db34:	mov	x1, x8
   1db38:	add	x2, sp, #0x20
   1db3c:	stp	x3, x4, [sp, #264]
   1db40:	stp	x5, x6, [sp, #280]
   1db44:	str	x7, [sp, #296]
   1db48:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1db4c:	tbnz	w0, #31, 1db7c <mpfr_printf@@Base+0xac>
   1db50:	ldr	x1, [sp, #72]
   1db54:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1db58:	add	x0, x0, #0x760
   1db5c:	bl	cbf0 <printf@plt>
   1db60:	mov	w19, w0
   1db64:	ldr	x0, [sp, #72]
   1db68:	bl	c890 <mpfr_free_str@plt>
   1db6c:	mov	w0, w19
   1db70:	ldr	x19, [sp, #16]
   1db74:	ldp	x29, x30, [sp], #304
   1db78:	ret
   1db7c:	ldr	x0, [sp, #72]
   1db80:	cbz	x0, 1db88 <mpfr_printf@@Base+0xb8>
   1db84:	bl	c890 <mpfr_free_str@plt>
   1db88:	mov	w19, #0xffffffff            	// #-1
   1db8c:	b	1db6c <mpfr_printf@@Base+0x9c>

000000000001db90 <__gmpfr_vprintf@@Base>:
   1db90:	mov	x3, x1
   1db94:	stp	x29, x30, [sp, #-80]!
   1db98:	mov	x1, x0
   1db9c:	mov	x29, sp
   1dba0:	ldp	x4, x5, [x3]
   1dba4:	stp	x4, x5, [sp, #32]
   1dba8:	add	x2, sp, #0x20
   1dbac:	ldp	x4, x5, [x3, #16]
   1dbb0:	add	x0, sp, #0x48
   1dbb4:	str	x19, [sp, #16]
   1dbb8:	stp	x4, x5, [sp, #48]
   1dbbc:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1dbc0:	tbnz	w0, #31, 1dbf0 <__gmpfr_vprintf@@Base+0x60>
   1dbc4:	ldr	x1, [sp, #72]
   1dbc8:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1dbcc:	add	x0, x0, #0x760
   1dbd0:	bl	cbf0 <printf@plt>
   1dbd4:	mov	w19, w0
   1dbd8:	ldr	x0, [sp, #72]
   1dbdc:	bl	c890 <mpfr_free_str@plt>
   1dbe0:	mov	w0, w19
   1dbe4:	ldr	x19, [sp, #16]
   1dbe8:	ldp	x29, x30, [sp], #80
   1dbec:	ret
   1dbf0:	ldr	x0, [sp, #72]
   1dbf4:	mov	w19, #0xffffffff            	// #-1
   1dbf8:	cbnz	x0, 1dbdc <__gmpfr_vprintf@@Base+0x4c>
   1dbfc:	b	1dbe0 <__gmpfr_vprintf@@Base+0x50>

000000000001dc00 <__gmpfr_fprintf@@Base>:
   1dc00:	stp	x29, x30, [sp, #-288]!
   1dc04:	mov	w9, #0xffffffd0            	// #-48
   1dc08:	mov	w8, #0xffffff80            	// #-128
   1dc0c:	mov	x29, sp
   1dc10:	add	x10, sp, #0xf0
   1dc14:	add	x11, sp, #0x120
   1dc18:	stp	x11, x11, [sp, #80]
   1dc1c:	str	x10, [sp, #96]
   1dc20:	stp	w9, w8, [sp, #104]
   1dc24:	ldp	x10, x11, [sp, #80]
   1dc28:	str	x19, [sp, #16]
   1dc2c:	ldp	x8, x9, [sp, #96]
   1dc30:	mov	x19, x0
   1dc34:	add	x0, sp, #0x48
   1dc38:	stp	x10, x11, [sp, #32]
   1dc3c:	stp	x8, x9, [sp, #48]
   1dc40:	str	q0, [sp, #112]
   1dc44:	str	q1, [sp, #128]
   1dc48:	str	q2, [sp, #144]
   1dc4c:	str	q3, [sp, #160]
   1dc50:	str	q4, [sp, #176]
   1dc54:	str	q5, [sp, #192]
   1dc58:	str	q6, [sp, #208]
   1dc5c:	str	q7, [sp, #224]
   1dc60:	stp	x2, x3, [sp, #240]
   1dc64:	add	x2, sp, #0x20
   1dc68:	stp	x4, x5, [sp, #256]
   1dc6c:	stp	x6, x7, [sp, #272]
   1dc70:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1dc74:	tbnz	w0, #31, 1dca8 <__gmpfr_fprintf@@Base+0xa8>
   1dc78:	ldr	x2, [sp, #72]
   1dc7c:	mov	x0, x19
   1dc80:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x4558>
   1dc84:	add	x1, x1, #0x760
   1dc88:	bl	cce0 <fprintf@plt>
   1dc8c:	mov	w19, w0
   1dc90:	ldr	x0, [sp, #72]
   1dc94:	bl	c890 <mpfr_free_str@plt>
   1dc98:	mov	w0, w19
   1dc9c:	ldr	x19, [sp, #16]
   1dca0:	ldp	x29, x30, [sp], #288
   1dca4:	ret
   1dca8:	ldr	x0, [sp, #72]
   1dcac:	cbz	x0, 1dcb4 <__gmpfr_fprintf@@Base+0xb4>
   1dcb0:	bl	c890 <mpfr_free_str@plt>
   1dcb4:	mov	w19, #0xffffffff            	// #-1
   1dcb8:	b	1dc98 <__gmpfr_fprintf@@Base+0x98>
   1dcbc:	nop

000000000001dcc0 <__gmpfr_vfprintf@@Base>:
   1dcc0:	mov	x3, x2
   1dcc4:	stp	x29, x30, [sp, #-80]!
   1dcc8:	mov	x29, sp
   1dccc:	ldp	x4, x5, [x3]
   1dcd0:	stp	x4, x5, [sp, #32]
   1dcd4:	add	x2, sp, #0x20
   1dcd8:	ldp	x4, x5, [x3, #16]
   1dcdc:	str	x19, [sp, #16]
   1dce0:	mov	x19, x0
   1dce4:	add	x0, sp, #0x48
   1dce8:	stp	x4, x5, [sp, #48]
   1dcec:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1dcf0:	tbnz	w0, #31, 1dd24 <__gmpfr_vfprintf@@Base+0x64>
   1dcf4:	ldr	x2, [sp, #72]
   1dcf8:	mov	x0, x19
   1dcfc:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x4558>
   1dd00:	add	x1, x1, #0x760
   1dd04:	bl	cce0 <fprintf@plt>
   1dd08:	mov	w19, w0
   1dd0c:	ldr	x0, [sp, #72]
   1dd10:	bl	c890 <mpfr_free_str@plt>
   1dd14:	mov	w0, w19
   1dd18:	ldr	x19, [sp, #16]
   1dd1c:	ldp	x29, x30, [sp], #80
   1dd20:	ret
   1dd24:	ldr	x0, [sp, #72]
   1dd28:	mov	w19, #0xffffffff            	// #-1
   1dd2c:	cbnz	x0, 1dd10 <__gmpfr_vfprintf@@Base+0x50>
   1dd30:	b	1dd14 <__gmpfr_vfprintf@@Base+0x54>
   1dd34:	nop

000000000001dd38 <mpfr_sprintf@@Base>:
   1dd38:	stp	x29, x30, [sp, #-288]!
   1dd3c:	mov	w9, #0xffffffd0            	// #-48
   1dd40:	mov	w8, #0xffffff80            	// #-128
   1dd44:	mov	x29, sp
   1dd48:	add	x10, sp, #0xf0
   1dd4c:	add	x11, sp, #0x120
   1dd50:	stp	x11, x11, [sp, #80]
   1dd54:	str	x10, [sp, #96]
   1dd58:	stp	w9, w8, [sp, #104]
   1dd5c:	ldp	x10, x11, [sp, #80]
   1dd60:	str	x19, [sp, #16]
   1dd64:	ldp	x8, x9, [sp, #96]
   1dd68:	mov	x19, x0
   1dd6c:	add	x0, sp, #0x48
   1dd70:	stp	x10, x11, [sp, #32]
   1dd74:	stp	x8, x9, [sp, #48]
   1dd78:	str	q0, [sp, #112]
   1dd7c:	str	q1, [sp, #128]
   1dd80:	str	q2, [sp, #144]
   1dd84:	str	q3, [sp, #160]
   1dd88:	str	q4, [sp, #176]
   1dd8c:	str	q5, [sp, #192]
   1dd90:	str	q6, [sp, #208]
   1dd94:	str	q7, [sp, #224]
   1dd98:	stp	x2, x3, [sp, #240]
   1dd9c:	add	x2, sp, #0x20
   1dda0:	stp	x4, x5, [sp, #256]
   1dda4:	stp	x6, x7, [sp, #272]
   1dda8:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1ddac:	tbnz	w0, #31, 1dde0 <mpfr_sprintf@@Base+0xa8>
   1ddb0:	ldr	x2, [sp, #72]
   1ddb4:	mov	x0, x19
   1ddb8:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x4558>
   1ddbc:	add	x1, x1, #0x760
   1ddc0:	bl	bd10 <sprintf@plt>
   1ddc4:	mov	w19, w0
   1ddc8:	ldr	x0, [sp, #72]
   1ddcc:	bl	c890 <mpfr_free_str@plt>
   1ddd0:	mov	w0, w19
   1ddd4:	ldr	x19, [sp, #16]
   1ddd8:	ldp	x29, x30, [sp], #288
   1dddc:	ret
   1dde0:	ldr	x0, [sp, #72]
   1dde4:	cbz	x0, 1ddec <mpfr_sprintf@@Base+0xb4>
   1dde8:	bl	c890 <mpfr_free_str@plt>
   1ddec:	mov	w19, #0xffffffff            	// #-1
   1ddf0:	b	1ddd0 <mpfr_sprintf@@Base+0x98>
   1ddf4:	nop

000000000001ddf8 <__gmpfr_vsprintf@@Base>:
   1ddf8:	mov	x3, x2
   1ddfc:	stp	x29, x30, [sp, #-80]!
   1de00:	mov	x29, sp
   1de04:	ldp	x4, x5, [x3]
   1de08:	stp	x4, x5, [sp, #32]
   1de0c:	add	x2, sp, #0x20
   1de10:	ldp	x4, x5, [x3, #16]
   1de14:	str	x19, [sp, #16]
   1de18:	mov	x19, x0
   1de1c:	add	x0, sp, #0x48
   1de20:	stp	x4, x5, [sp, #48]
   1de24:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1de28:	tbnz	w0, #31, 1de5c <__gmpfr_vsprintf@@Base+0x64>
   1de2c:	ldr	x2, [sp, #72]
   1de30:	mov	x0, x19
   1de34:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x4558>
   1de38:	add	x1, x1, #0x760
   1de3c:	bl	bd10 <sprintf@plt>
   1de40:	mov	w19, w0
   1de44:	ldr	x0, [sp, #72]
   1de48:	bl	c890 <mpfr_free_str@plt>
   1de4c:	mov	w0, w19
   1de50:	ldr	x19, [sp, #16]
   1de54:	ldp	x29, x30, [sp], #80
   1de58:	ret
   1de5c:	ldr	x0, [sp, #72]
   1de60:	mov	w19, #0xffffffff            	// #-1
   1de64:	cbnz	x0, 1de48 <__gmpfr_vsprintf@@Base+0x50>
   1de68:	b	1de4c <__gmpfr_vsprintf@@Base+0x54>
   1de6c:	nop

000000000001de70 <mpfr_asprintf@@Base>:
   1de70:	stp	x29, x30, [sp, #-272]!
   1de74:	mov	w9, #0xffffffd0            	// #-48
   1de78:	mov	w8, #0xffffff80            	// #-128
   1de7c:	mov	x29, sp
   1de80:	add	x10, sp, #0xe0
   1de84:	add	x11, sp, #0x110
   1de88:	stp	x11, x11, [sp, #64]
   1de8c:	str	x10, [sp, #80]
   1de90:	stp	w9, w8, [sp, #88]
   1de94:	ldp	x10, x11, [sp, #64]
   1de98:	str	x19, [sp, #16]
   1de9c:	ldp	x8, x9, [sp, #80]
   1dea0:	mov	x19, x0
   1dea4:	stp	x10, x11, [sp, #32]
   1dea8:	stp	x8, x9, [sp, #48]
   1deac:	str	q0, [sp, #96]
   1deb0:	str	q1, [sp, #112]
   1deb4:	str	q2, [sp, #128]
   1deb8:	str	q3, [sp, #144]
   1debc:	str	q4, [sp, #160]
   1dec0:	str	q5, [sp, #176]
   1dec4:	str	q6, [sp, #192]
   1dec8:	str	q7, [sp, #208]
   1decc:	stp	x2, x3, [sp, #224]
   1ded0:	add	x2, sp, #0x20
   1ded4:	stp	x4, x5, [sp, #240]
   1ded8:	stp	x6, x7, [sp, #256]
   1dedc:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1dee0:	tbnz	w0, #31, 1def0 <mpfr_asprintf@@Base+0x80>
   1dee4:	ldr	x19, [sp, #16]
   1dee8:	ldp	x29, x30, [sp], #272
   1deec:	ret
   1def0:	ldr	x0, [x19]
   1def4:	cbz	x0, 1defc <mpfr_asprintf@@Base+0x8c>
   1def8:	bl	c890 <mpfr_free_str@plt>
   1defc:	mov	w0, #0xffffffff            	// #-1
   1df00:	b	1dee4 <mpfr_asprintf@@Base+0x74>
   1df04:	nop
   1df08:	stp	x29, x30, [sp, #-48]!
   1df0c:	mov	x29, sp
   1df10:	stp	x19, x20, [sp, #16]
   1df14:	mov	x19, x0
   1df18:	and	x20, x1, #0xfffffffffffff000
   1df1c:	ldr	x0, [x0]
   1df20:	str	x21, [sp, #32]
   1df24:	ldr	x21, [x19, #8]
   1df28:	adds	x20, x20, #0x1, lsl #12
   1df2c:	ccmp	x1, x20, #0x2, cc  // cc = lo, ul, last
   1df30:	sub	x21, x21, x0
   1df34:	b.hi	1df78 <mpfr_asprintf@@Base+0x108>  // b.pmore
   1df38:	ldr	x1, [x19, #16]
   1df3c:	mvn	x0, x20
   1df40:	cmp	x1, x0
   1df44:	b.cs	1dfa0 <mpfr_asprintf@@Base+0x130>  // b.hs, b.nlast
   1df48:	ldr	x0, [x19]
   1df4c:	add	x2, x1, x20
   1df50:	bl	c1c0 <mpfr_reallocate_func@plt>
   1df54:	add	x21, x0, x21
   1df58:	ldr	x1, [x19, #16]
   1df5c:	stp	x0, x21, [x19]
   1df60:	add	x20, x1, x20
   1df64:	str	x20, [x19, #16]
   1df68:	ldp	x19, x20, [sp, #16]
   1df6c:	ldr	x21, [sp, #32]
   1df70:	ldp	x29, x30, [sp], #48
   1df74:	ret
   1df78:	mov	w1, #0x260                 	// #608
   1df7c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   1df80:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1df84:	add	x2, x2, #0x768
   1df88:	add	x0, x0, #0x780
   1df8c:	bl	cb40 <mpfr_assert_fail@plt>
   1df90:	ldr	x1, [x19, #16]
   1df94:	mvn	x0, x20
   1df98:	cmp	x1, x0
   1df9c:	b.cc	1df48 <mpfr_asprintf@@Base+0xd8>  // b.lo, b.ul, b.last
   1dfa0:	mov	w1, #0x265                 	// #613
   1dfa4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   1dfa8:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1dfac:	add	x2, x2, #0x790
   1dfb0:	add	x0, x0, #0x780
   1dfb4:	bl	cb40 <mpfr_assert_fail@plt>
   1dfb8:	ldr	x1, [x19, #16]
   1dfbc:	b	1df48 <mpfr_asprintf@@Base+0xd8>
   1dfc0:	stp	x29, x30, [sp, #-80]!
   1dfc4:	mov	x2, #0x40                  	// #64
   1dfc8:	mov	x29, sp
   1dfcc:	stp	x19, x20, [sp, #16]
   1dfd0:	mov	x19, x0
   1dfd4:	add	x20, sp, #0x30
   1dfd8:	mov	x0, x20
   1dfdc:	ldr	x1, [x19]
   1dfe0:	str	x21, [sp, #32]
   1dfe4:	cmp	x1, x2
   1dfe8:	csel	x1, x1, x2, ge  // ge = tcont
   1dfec:	bl	ca80 <mpfr_init2@plt>
   1dff0:	ldr	x0, [x19, #16]
   1dff4:	mov	w2, #0x1                   	// #1
   1dff8:	mov	w1, #0xa                   	// #10
   1dffc:	bl	cb80 <mpfr_ceil_mul@plt>
   1e000:	mov	x21, x0
   1e004:	sub	x1, x21, #0x1
   1e008:	mov	x0, x20
   1e00c:	mov	w3, #0x2                   	// #2
   1e010:	mov	x2, #0x0                   	// #0
   1e014:	bl	ba80 <mpfr_set_si_2exp@plt>
   1e018:	mov	x2, x20
   1e01c:	mov	w3, #0x2                   	// #2
   1e020:	mov	x0, x20
   1e024:	mov	x1, #0xa                   	// #10
   1e028:	bl	ca10 <mpfr_ui_pow@plt>
   1e02c:	mov	x1, x20
   1e030:	mov	x0, x19
   1e034:	bl	c9b0 <mpfr_cmpabs@plt>
   1e038:	mov	w19, w0
   1e03c:	eor	x19, x19, #0x80000000
   1e040:	mov	x0, x20
   1e044:	bl	c070 <mpfr_clear@plt>
   1e048:	lsr	w19, w19, #31
   1e04c:	add	x19, x19, x21
   1e050:	sub	x19, x19, #0x2
   1e054:	mov	x0, x19
   1e058:	ldp	x19, x20, [sp, #16]
   1e05c:	ldr	x21, [sp, #32]
   1e060:	ldp	x29, x30, [sp], #80
   1e064:	ret
   1e068:	stp	x29, x30, [sp, #-48]!
   1e06c:	mov	x29, sp
   1e070:	stp	x19, x20, [sp, #16]
   1e074:	mov	x19, x0
   1e078:	ldr	x0, [x0, #24]
   1e07c:	cmn	x0, #0x1
   1e080:	b.eq	1e0f4 <mpfr_asprintf@@Base+0x284>  // b.none
   1e084:	adds	x0, x2, x0
   1e088:	mov	x20, x2
   1e08c:	ccmp	x0, #0x0, #0x1, cc  // cc = lo, ul, last
   1e090:	b.lt	1e104 <mpfr_asprintf@@Base+0x294>  // b.tstop
   1e094:	str	x21, [sp, #32]
   1e098:	mov	x21, x1
   1e09c:	ldr	x1, [x19, #16]
   1e0a0:	str	x0, [x19, #24]
   1e0a4:	cbz	x1, 1e0e0 <mpfr_asprintf@@Base+0x270>
   1e0a8:	mvn	x0, x2
   1e0ac:	cmp	x1, x0
   1e0b0:	b.cs	1e128 <mpfr_asprintf@@Base+0x2b8>  // b.hs, b.nlast
   1e0b4:	ldp	x2, x0, [x19]
   1e0b8:	add	x1, x2, x1
   1e0bc:	add	x2, x0, x20
   1e0c0:	cmp	x2, x1
   1e0c4:	b.cs	1e114 <mpfr_asprintf@@Base+0x2a4>  // b.hs, b.nlast
   1e0c8:	mov	x2, x20
   1e0cc:	mov	x1, x21
   1e0d0:	bl	c940 <strncat@plt>
   1e0d4:	ldr	x2, [x19, #8]
   1e0d8:	add	x20, x2, x20
   1e0dc:	str	x20, [x19, #8]
   1e0e0:	ldr	x21, [sp, #32]
   1e0e4:	mov	w0, #0x0                   	// #0
   1e0e8:	ldp	x19, x20, [sp, #16]
   1e0ec:	ldp	x29, x30, [sp], #48
   1e0f0:	ret
   1e0f4:	mov	w0, #0x1                   	// #1
   1e0f8:	ldp	x19, x20, [sp, #16]
   1e0fc:	ldp	x29, x30, [sp], #48
   1e100:	ret
   1e104:	mov	x1, #0xffffffffffffffff    	// #-1
   1e108:	mov	w0, #0x1                   	// #1
   1e10c:	str	x1, [x19, #24]
   1e110:	b	1e0e8 <mpfr_asprintf@@Base+0x278>
   1e114:	mov	x0, x19
   1e118:	mov	x1, x20
   1e11c:	bl	1df08 <mpfr_asprintf@@Base+0x98>
   1e120:	ldr	x0, [x19, #8]
   1e124:	b	1e0c8 <mpfr_asprintf@@Base+0x258>
   1e128:	mov	w1, #0x27e                 	// #638
   1e12c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   1e130:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1e134:	add	x2, x2, #0x7b0
   1e138:	add	x0, x0, #0x780
   1e13c:	bl	cb40 <mpfr_assert_fail@plt>
   1e140:	ldr	x1, [x19, #16]
   1e144:	b	1e0b4 <mpfr_asprintf@@Base+0x244>
   1e148:	stp	x29, x30, [sp, #-80]!
   1e14c:	mov	x29, sp
   1e150:	stp	x19, x20, [sp, #16]
   1e154:	mov	w20, w1
   1e158:	stp	x21, x22, [sp, #32]
   1e15c:	mov	x22, x0
   1e160:	mov	x21, x2
   1e164:	stp	x23, x24, [sp, #48]
   1e168:	mov	x23, x3
   1e16c:	cbnz	x4, 1e224 <mpfr_asprintf@@Base+0x3b4>
   1e170:	and	w4, w1, #0xff
   1e174:	cmp	w1, #0xa
   1e178:	add	w0, w4, #0x2f
   1e17c:	add	w19, w4, #0x56
   1e180:	and	w0, w0, #0xff
   1e184:	and	w19, w19, #0xff
   1e188:	csel	w19, w19, w0, gt
   1e18c:	mov	w24, w5
   1e190:	cmp	x2, #0x8
   1e194:	b.ls	1e220 <mpfr_asprintf@@Base+0x3b0>  // b.plast
   1e198:	stp	x25, x26, [sp, #64]
   1e19c:	mov	w25, #0x3d                  	// #61
   1e1a0:	mov	x26, #0x8                   	// #8
   1e1a4:	nop
   1e1a8:	mov	x1, x22
   1e1ac:	mov	x4, x23
   1e1b0:	mov	w2, w20
   1e1b4:	mov	x3, x26
   1e1b8:	mov	w5, #0x1                   	// #1
   1e1bc:	mov	x0, #0x0                   	// #0
   1e1c0:	bl	c500 <mpfr_get_str@plt>
   1e1c4:	ldrb	w1, [x0]
   1e1c8:	cmp	w1, #0x2d
   1e1cc:	cset	w2, eq  // eq = none
   1e1d0:	cset	x1, eq  // eq = none
   1e1d4:	cinc	x4, x0, eq  // eq = none
   1e1d8:	ldrb	w2, [x0, w2, uxtw]
   1e1dc:	cmp	w2, w19
   1e1e0:	b.ne	1e1f4 <mpfr_asprintf@@Base+0x384>  // b.any
   1e1e4:	nop
   1e1e8:	ldrb	w6, [x4, #1]!
   1e1ec:	cmp	w6, w19
   1e1f0:	b.eq	1e1e8 <mpfr_asprintf@@Base+0x378>  // b.none
   1e1f4:	add	x1, x1, x26
   1e1f8:	add	x1, x0, x1
   1e1fc:	cmp	x4, x1
   1e200:	b.cc	1e264 <mpfr_asprintf@@Base+0x3f4>  // b.lo, b.ul, b.last
   1e204:	bl	c890 <mpfr_free_str@plt>
   1e208:	subs	w25, w25, #0x1
   1e20c:	b.eq	1e24c <mpfr_asprintf@@Base+0x3dc>  // b.none
   1e210:	lsl	x26, x26, #1
   1e214:	cmp	x21, x26
   1e218:	b.hi	1e1a8 <mpfr_asprintf@@Base+0x338>  // b.pmore
   1e21c:	ldp	x25, x26, [sp, #64]
   1e220:	mov	w5, w24
   1e224:	mov	x4, x23
   1e228:	mov	x3, x21
   1e22c:	mov	w2, w20
   1e230:	mov	x1, x22
   1e234:	ldp	x19, x20, [sp, #16]
   1e238:	mov	x0, #0x0                   	// #0
   1e23c:	ldp	x21, x22, [sp, #32]
   1e240:	ldp	x23, x24, [sp, #48]
   1e244:	ldp	x29, x30, [sp], #80
   1e248:	b	c500 <mpfr_get_str@plt>
   1e24c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   1e250:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1e254:	add	x2, x2, #0x7d0
   1e258:	add	x0, x0, #0x780
   1e25c:	mov	w1, #0x3df                 	// #991
   1e260:	bl	cb40 <mpfr_assert_fail@plt>
   1e264:	ldp	x19, x20, [sp, #16]
   1e268:	ldp	x21, x22, [sp, #32]
   1e26c:	ldp	x23, x24, [sp, #48]
   1e270:	ldp	x25, x26, [sp, #64]
   1e274:	ldp	x29, x30, [sp], #80
   1e278:	ret
   1e27c:	nop
   1e280:	stp	x29, x30, [sp, #-112]!
   1e284:	mov	x29, sp
   1e288:	stp	x19, x20, [sp, #16]
   1e28c:	mov	x20, x0
   1e290:	ldrb	w0, [x2, #32]
   1e294:	stp	x21, x22, [sp, #32]
   1e298:	mov	x22, x2
   1e29c:	and	w19, w0, #0xfffffffd
   1e2a0:	stp	x23, x24, [sp, #48]
   1e2a4:	and	w0, w0, #0xffffffdf
   1e2a8:	and	w19, w19, #0xff
   1e2ac:	stp	x25, x26, [sp, #64]
   1e2b0:	cmp	w0, #0x47
   1e2b4:	mov	x25, x1
   1e2b8:	str	x27, [sp, #80]
   1e2bc:	and	w23, w0, #0xff
   1e2c0:	ldr	w27, [x2, #8]
   1e2c4:	b.eq	1e474 <mpfr_asprintf@@Base+0x604>  // b.none
   1e2c8:	ldr	w2, [x25, #8]
   1e2cc:	cmp	w27, #0x0
   1e2d0:	cset	w24, gt
   1e2d4:	tbnz	w2, #31, 1e484 <mpfr_asprintf@@Base+0x614>
   1e2d8:	ldrb	w0, [x22]
   1e2dc:	mov	w1, #0xa                   	// #10
   1e2e0:	tst	w0, w1
   1e2e4:	b.ne	1e4fc <mpfr_asprintf@@Base+0x68c>  // b.any
   1e2e8:	mov	x0, #0x1                   	// #1
   1e2ec:	str	x0, [x20, #56]
   1e2f0:	cbz	x3, 1e498 <mpfr_asprintf@@Base+0x628>
   1e2f4:	ldp	x0, x21, [x3]
   1e2f8:	str	x0, [sp, #96]
   1e2fc:	lsr	w2, w2, #31
   1e300:	add	x21, x21, x2
   1e304:	str	x21, [x20, #48]
   1e308:	cbz	w27, 1e450 <mpfr_asprintf@@Base+0x5e0>
   1e30c:	add	x25, x21, #0x1
   1e310:	mov	x0, x25
   1e314:	bl	bab0 <strlen@plt>
   1e318:	mov	x1, x0
   1e31c:	cbz	w24, 1e514 <mpfr_asprintf@@Base+0x6a4>
   1e320:	mov	x0, #0x7fffffff            	// #2147483647
   1e324:	cmp	x1, x0
   1e328:	b.hi	1e558 <mpfr_asprintf@@Base+0x6e8>  // b.pmore
   1e32c:	cbz	x1, 1e450 <mpfr_asprintf@@Base+0x5e0>
   1e330:	stp	x25, x1, [x20, #80]
   1e334:	cmp	w23, #0x47
   1e338:	b.eq	1e54c <mpfr_asprintf@@Base+0x6dc>  // b.none
   1e33c:	cmp	w27, #0x0
   1e340:	b.le	1e358 <mpfr_asprintf@@Base+0x4e8>
   1e344:	cmp	w27, w1
   1e348:	b.le	1e358 <mpfr_asprintf@@Base+0x4e8>
   1e34c:	sub	w1, w27, w1
   1e350:	str	w1, [x20, #96]
   1e354:	nop
   1e358:	bl	bea0 <localeconv@plt>
   1e35c:	ldr	x0, [x0]
   1e360:	ldrb	w0, [x0, #1]
   1e364:	cbz	w0, 1e538 <mpfr_asprintf@@Base+0x6c8>
   1e368:	mov	w0, #0x2e                  	// #46
   1e36c:	strb	w0, [x20, #68]
   1e370:	ldr	x1, [sp, #96]
   1e374:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   1e378:	mov	x2, #0x3                   	// #3
   1e37c:	movk	x4, #0xcccd
   1e380:	subs	x1, x1, #0x1
   1e384:	str	x1, [sp, #96]
   1e388:	cneg	x1, x1, mi  // mi = first
   1e38c:	cmp	x1, #0x9
   1e390:	b.ls	1e4ec <mpfr_asprintf@@Base+0x67c>  // b.plast
   1e394:	nop
   1e398:	umulh	x3, x1, x4
   1e39c:	cmp	x1, #0x63
   1e3a0:	mov	x0, x2
   1e3a4:	add	x2, x2, #0x1
   1e3a8:	lsr	x1, x3, #3
   1e3ac:	b.hi	1e398 <mpfr_asprintf@@Base+0x528>  // b.pmore
   1e3b0:	str	x2, [x20, #112]
   1e3b4:	add	x0, x0, #0x2
   1e3b8:	cmp	x2, #0x3
   1e3bc:	b.ls	1e4ec <mpfr_asprintf@@Base+0x67c>  // b.plast
   1e3c0:	bl	ccf0 <mpfr_allocate_func@plt>
   1e3c4:	mov	x22, x0
   1e3c8:	ldr	x1, [x20, #120]
   1e3cc:	nop
   1e3d0:	mov	x21, x1
   1e3d4:	ldr	x1, [x1, #8]
   1e3d8:	cbnz	x1, 1e3d0 <mpfr_asprintf@@Base+0x560>
   1e3dc:	mov	x0, #0x10                  	// #16
   1e3e0:	bl	ccf0 <mpfr_allocate_func@plt>
   1e3e4:	mov	x3, x0
   1e3e8:	adrp	x4, 60000 <mpfr_free_pool@@Base+0x4558>
   1e3ec:	add	x4, x4, #0x7f0
   1e3f0:	str	x3, [x21, #8]
   1e3f4:	cmp	w19, #0x45
   1e3f8:	add	x1, sp, #0x68
   1e3fc:	ldr	x2, [sp, #96]
   1e400:	stp	x22, xzr, [x3]
   1e404:	mov	w3, #0x65                  	// #101
   1e408:	csel	w19, w19, w3, eq  // eq = none
   1e40c:	ldr	w3, [x4]
   1e410:	stur	w3, [sp, #105]
   1e414:	mov	x0, x22
   1e418:	ldur	w3, [x4, #3]
   1e41c:	strb	w19, [sp, #104]
   1e420:	str	w3, [x1, #4]
   1e424:	str	x22, [x20, #104]
   1e428:	bl	bd10 <sprintf@plt>
   1e42c:	cmp	w0, #0x0
   1e430:	csetm	w0, lt  // lt = tstop
   1e434:	ldp	x19, x20, [sp, #16]
   1e438:	ldp	x21, x22, [sp, #32]
   1e43c:	ldp	x23, x24, [sp, #48]
   1e440:	ldp	x25, x26, [sp, #64]
   1e444:	ldr	x27, [sp, #80]
   1e448:	ldp	x29, x30, [sp], #112
   1e44c:	ret
   1e450:	ldr	x0, [x20, #88]
   1e454:	cbnz	x0, 1e358 <mpfr_asprintf@@Base+0x4e8>
   1e458:	ldrb	w0, [x22]
   1e45c:	tbz	w0, #0, 1e370 <mpfr_asprintf@@Base+0x500>
   1e460:	bl	bea0 <localeconv@plt>
   1e464:	ldr	x0, [x0]
   1e468:	ldrb	w0, [x0, #1]
   1e46c:	cbnz	w0, 1e368 <mpfr_asprintf@@Base+0x4f8>
   1e470:	b	1e538 <mpfr_asprintf@@Base+0x6c8>
   1e474:	ldrb	w24, [x2]
   1e478:	ldr	w2, [x25, #8]
   1e47c:	and	w24, w24, #0x1
   1e480:	tbz	w2, #31, 1e2d8 <mpfr_asprintf@@Base+0x468>
   1e484:	mov	w0, #0x2d                  	// #45
   1e488:	strb	w0, [x20, #16]
   1e48c:	mov	x0, #0x1                   	// #1
   1e490:	str	x0, [x20, #56]
   1e494:	cbnz	x3, 1e2f4 <mpfr_asprintf@@Base+0x484>
   1e498:	ldr	w5, [x22, #28]
   1e49c:	cmp	w27, #0x0
   1e4a0:	ldr	x4, [x22, #16]
   1e4a4:	sxtw	x2, w27
   1e4a8:	csinc	x2, xzr, x2, lt  // lt = tstop
   1e4ac:	mov	x3, x25
   1e4b0:	add	x0, sp, #0x60
   1e4b4:	mov	w1, #0xa                   	// #10
   1e4b8:	bl	1e148 <mpfr_asprintf@@Base+0x2d8>
   1e4bc:	mov	x21, x0
   1e4c0:	ldr	x4, [x20, #120]
   1e4c4:	nop
   1e4c8:	mov	x26, x4
   1e4cc:	ldr	x4, [x4, #8]
   1e4d0:	cbnz	x4, 1e4c8 <mpfr_asprintf@@Base+0x658>
   1e4d4:	mov	x0, #0x10                  	// #16
   1e4d8:	bl	ccf0 <mpfr_allocate_func@plt>
   1e4dc:	ldr	w2, [x25, #8]
   1e4e0:	str	x0, [x26, #8]
   1e4e4:	stp	x21, xzr, [x0]
   1e4e8:	b	1e2fc <mpfr_asprintf@@Base+0x48c>
   1e4ec:	mov	x1, #0x4                   	// #4
   1e4f0:	mov	x0, #0x5                   	// #5
   1e4f4:	str	x1, [x20, #112]
   1e4f8:	b	1e3c0 <mpfr_asprintf@@Base+0x550>
   1e4fc:	tst	x0, #0x8
   1e500:	mov	w1, #0x20                  	// #32
   1e504:	mov	w0, #0x2b                  	// #43
   1e508:	csel	w0, w0, w1, ne  // ne = any
   1e50c:	strb	w0, [x20, #16]
   1e510:	b	1e2e8 <mpfr_asprintf@@Base+0x478>
   1e514:	ldrb	w0, [x21, x0]
   1e518:	cmp	w0, #0x30
   1e51c:	b.ne	1e320 <mpfr_asprintf@@Base+0x4b0>  // b.any
   1e520:	cbz	x1, 1e450 <mpfr_asprintf@@Base+0x5e0>
   1e524:	sub	x1, x1, #0x1
   1e528:	ldrb	w0, [x21, x1]
   1e52c:	cmp	w0, #0x30
   1e530:	b.eq	1e520 <mpfr_asprintf@@Base+0x6b0>  // b.none
   1e534:	b	1e320 <mpfr_asprintf@@Base+0x4b0>
   1e538:	bl	bea0 <localeconv@plt>
   1e53c:	ldr	x0, [x0]
   1e540:	ldrb	w0, [x0]
   1e544:	strb	w0, [x20, #68]
   1e548:	b	1e370 <mpfr_asprintf@@Base+0x500>
   1e54c:	ldrb	w0, [x22]
   1e550:	tbz	w0, #0, 1e358 <mpfr_asprintf@@Base+0x4e8>
   1e554:	b	1e33c <mpfr_asprintf@@Base+0x4cc>
   1e558:	mov	w0, #0xffffffff            	// #-1
   1e55c:	b	1e434 <mpfr_asprintf@@Base+0x5c4>
   1e560:	stp	x29, x30, [sp, #-160]!
   1e564:	mov	x29, sp
   1e568:	stp	x21, x22, [sp, #32]
   1e56c:	mov	x21, x1
   1e570:	ldrb	w22, [x2, #32]
   1e574:	stp	x19, x20, [sp, #16]
   1e578:	mov	x20, x2
   1e57c:	and	w22, w22, #0xffffffdf
   1e580:	stp	x23, x24, [sp, #48]
   1e584:	and	w22, w22, #0xff
   1e588:	ldr	w24, [x2, #8]
   1e58c:	stp	x25, x26, [sp, #64]
   1e590:	mov	x19, x0
   1e594:	ldr	w25, [x2, #28]
   1e598:	stp	x27, x28, [sp, #80]
   1e59c:	mov	x26, x3
   1e5a0:	cmp	w22, #0x47
   1e5a4:	mov	w23, #0x1                   	// #1
   1e5a8:	ldr	x27, [x2, #16]
   1e5ac:	b.ne	1e5b8 <mpfr_asprintf@@Base+0x748>  // b.any
   1e5b0:	ldrb	w23, [x2]
   1e5b4:	and	w23, w23, #0x1
   1e5b8:	ldr	w0, [x21, #8]
   1e5bc:	tbnz	w0, #31, 1e7f4 <mpfr_asprintf@@Base+0x984>
   1e5c0:	ldrb	w0, [x20]
   1e5c4:	mov	w1, #0xa                   	// #10
   1e5c8:	tst	w0, w1
   1e5cc:	b.ne	1e6e0 <mpfr_asprintf@@Base+0x870>  // b.any
   1e5d0:	ldr	x0, [x21, #16]
   1e5d4:	cmp	x0, #0x0
   1e5d8:	b.le	1e700 <mpfr_asprintf@@Base+0x890>
   1e5dc:	mov	x0, x21
   1e5e0:	bl	1dfc0 <mpfr_asprintf@@Base+0x150>
   1e5e4:	str	x0, [sp, #120]
   1e5e8:	mov	x1, #0x7fffffff            	// #2147483647
   1e5ec:	cmp	x0, x1
   1e5f0:	b.gt	1eb30 <mpfr_asprintf@@Base+0xcc0>
   1e5f4:	cbz	x26, 1e840 <mpfr_asprintf@@Base+0x9d0>
   1e5f8:	ldp	x22, x25, [x26]
   1e5fc:	str	x22, [sp, #120]
   1e600:	ldrsw	x0, [x21, #8]
   1e604:	add	x25, x25, x0, lsr #63
   1e608:	str	x25, [x19, #48]
   1e60c:	mov	x0, x25
   1e610:	bl	bab0 <strlen@plt>
   1e614:	mov	x21, x0
   1e618:	mov	x2, x22
   1e61c:	cmp	x22, x0
   1e620:	b.ls	1e630 <mpfr_asprintf@@Base+0x7c0>  // b.plast
   1e624:	mov	x2, x21
   1e628:	sub	w0, w22, w0
   1e62c:	str	w0, [x19, #64]
   1e630:	ldrb	w22, [x20]
   1e634:	str	x2, [x19, #56]
   1e638:	tbnz	w22, #4, 1e8c8 <mpfr_asprintf@@Base+0xa58>
   1e63c:	add	x25, x25, x2
   1e640:	sub	x20, x21, x2
   1e644:	cbnz	w23, 1e800 <mpfr_asprintf@@Base+0x990>
   1e648:	sub	x1, x20, #0x1
   1e64c:	add	x0, x25, x1
   1e650:	ldrb	w3, [x25, x1]
   1e654:	cmp	w3, #0x30
   1e658:	b.ne	1e684 <mpfr_asprintf@@Base+0x814>  // b.any
   1e65c:	sub	x2, x2, x21
   1e660:	add	x2, x0, x2
   1e664:	cbnz	x20, 1e674 <mpfr_asprintf@@Base+0x804>
   1e668:	b	1e6bc <mpfr_asprintf@@Base+0x84c>
   1e66c:	cbz	x1, 1e6bc <mpfr_asprintf@@Base+0x84c>
   1e670:	sub	x1, x1, #0x1
   1e674:	ldrb	w0, [x2, x1]
   1e678:	mov	x20, x1
   1e67c:	cmp	w0, #0x30
   1e680:	b.eq	1e66c <mpfr_asprintf@@Base+0x7fc>  // b.none
   1e684:	cbz	x20, 1e6bc <mpfr_asprintf@@Base+0x84c>
   1e688:	mov	x0, #0x7fffffff            	// #2147483647
   1e68c:	cmp	x20, x0
   1e690:	b.hi	1eb30 <mpfr_asprintf@@Base+0xcc0>  // b.pmore
   1e694:	bl	bea0 <localeconv@plt>
   1e698:	ldr	x0, [x0]
   1e69c:	mov	w1, #0x2e                  	// #46
   1e6a0:	ldrb	w0, [x0, #1]
   1e6a4:	cbz	w0, 1e8b8 <mpfr_asprintf@@Base+0xa48>
   1e6a8:	strb	w1, [x19, #68]
   1e6ac:	stp	x25, x20, [x19, #80]
   1e6b0:	cbz	w23, 1e6bc <mpfr_asprintf@@Base+0x84c>
   1e6b4:	cmp	x20, w24, sxtw
   1e6b8:	b.cc	1e88c <mpfr_asprintf@@Base+0xa1c>  // b.lo, b.ul, b.last
   1e6bc:	tbnz	w22, #0, 1e808 <mpfr_asprintf@@Base+0x998>
   1e6c0:	mov	w0, #0x0                   	// #0
   1e6c4:	ldp	x19, x20, [sp, #16]
   1e6c8:	ldp	x21, x22, [sp, #32]
   1e6cc:	ldp	x23, x24, [sp, #48]
   1e6d0:	ldp	x25, x26, [sp, #64]
   1e6d4:	ldp	x27, x28, [sp, #80]
   1e6d8:	ldp	x29, x30, [sp], #160
   1e6dc:	ret
   1e6e0:	tst	x0, #0x8
   1e6e4:	mov	w1, #0x20                  	// #32
   1e6e8:	mov	w0, #0x2b                  	// #43
   1e6ec:	csel	w0, w0, w1, ne  // ne = any
   1e6f0:	strb	w0, [x19, #16]
   1e6f4:	ldr	x0, [x21, #16]
   1e6f8:	cmp	x0, #0x0
   1e6fc:	b.gt	1e5dc <mpfr_asprintf@@Base+0x76c>
   1e700:	mov	x0, #0x1                   	// #1
   1e704:	str	x0, [x19, #56]
   1e708:	mov	x0, #0x2                   	// #2
   1e70c:	bl	ccf0 <mpfr_allocate_func@plt>
   1e710:	mov	x1, x0
   1e714:	mov	w0, #0x30                  	// #48
   1e718:	strh	w0, [x1]
   1e71c:	ldr	x4, [x19, #120]
   1e720:	mov	x28, x4
   1e724:	ldr	x4, [x4, #8]
   1e728:	cbnz	x4, 1e720 <mpfr_asprintf@@Base+0x8b0>
   1e72c:	mov	x0, #0x10                  	// #16
   1e730:	str	x1, [sp, #104]
   1e734:	bl	ccf0 <mpfr_allocate_func@plt>
   1e738:	str	x0, [x28, #8]
   1e73c:	ldr	x1, [sp, #104]
   1e740:	stp	x1, xzr, [x0]
   1e744:	str	x1, [x19, #48]
   1e748:	cbnz	w24, 1e908 <mpfr_asprintf@@Base+0xa98>
   1e74c:	ldr	x0, [x21]
   1e750:	str	x0, [sp, #128]
   1e754:	ldr	x2, [x21, #16]
   1e758:	mov	w3, #0x1                   	// #1
   1e75c:	ldr	x0, [x21, #24]
   1e760:	str	w3, [sp, #136]
   1e764:	str	x2, [sp, #144]
   1e768:	cmp	w25, #0x4
   1e76c:	str	x0, [sp, #152]
   1e770:	b.eq	1e7a0 <mpfr_asprintf@@Base+0x930>  // b.none
   1e774:	cmp	w25, #0x3
   1e778:	b.eq	1ea94 <mpfr_asprintf@@Base+0xc24>  // b.none
   1e77c:	cmp	w25, #0x2
   1e780:	b.eq	1eaa0 <mpfr_asprintf@@Base+0xc30>  // b.none
   1e784:	cbnz	w25, 1e7a8 <mpfr_asprintf@@Base+0x938>
   1e788:	fmov	d0, #5.000000000000000000e-01
   1e78c:	add	x0, sp, #0x80
   1e790:	bl	bcf0 <mpfr_cmp_d@plt>
   1e794:	cmp	w0, #0x0
   1e798:	b.le	1e7a8 <mpfr_asprintf@@Base+0x938>
   1e79c:	ldr	x1, [x19, #48]
   1e7a0:	mov	w0, #0x31                  	// #49
   1e7a4:	strb	w0, [x1]
   1e7a8:	ldrb	w1, [x20]
   1e7ac:	and	w1, w1, #0x1
   1e7b0:	cbnz	w1, 1e7d0 <mpfr_asprintf@@Base+0x960>
   1e7b4:	ldr	w25, [x19, #72]
   1e7b8:	cbnz	w25, 1e7d0 <mpfr_asprintf@@Base+0x960>
   1e7bc:	ldr	x0, [x19, #88]
   1e7c0:	cbnz	x0, 1e7d0 <mpfr_asprintf@@Base+0x960>
   1e7c4:	ldr	w0, [x19, #96]
   1e7c8:	cbz	w0, 1e6c0 <mpfr_asprintf@@Base+0x850>
   1e7cc:	nop
   1e7d0:	bl	bea0 <localeconv@plt>
   1e7d4:	ldr	x0, [x0]
   1e7d8:	mov	w1, #0x2e                  	// #46
   1e7dc:	ldrb	w0, [x0, #1]
   1e7e0:	cbnz	w0, 1e81c <mpfr_asprintf@@Base+0x9ac>
   1e7e4:	bl	bea0 <localeconv@plt>
   1e7e8:	ldr	x0, [x0]
   1e7ec:	ldrb	w1, [x0]
   1e7f0:	b	1e81c <mpfr_asprintf@@Base+0x9ac>
   1e7f4:	mov	w0, #0x2d                  	// #45
   1e7f8:	strb	w0, [x19, #16]
   1e7fc:	b	1e5d0 <mpfr_asprintf@@Base+0x760>
   1e800:	cbnz	x20, 1e688 <mpfr_asprintf@@Base+0x818>
   1e804:	b	1e6b4 <mpfr_asprintf@@Base+0x844>
   1e808:	bl	bea0 <localeconv@plt>
   1e80c:	ldr	x0, [x0]
   1e810:	mov	w1, #0x2e                  	// #46
   1e814:	ldrb	w0, [x0, #1]
   1e818:	cbz	w0, 1e7e4 <mpfr_asprintf@@Base+0x974>
   1e81c:	strb	w1, [x19, #68]
   1e820:	mov	w0, #0x0                   	// #0
   1e824:	ldp	x19, x20, [sp, #16]
   1e828:	ldp	x21, x22, [sp, #32]
   1e82c:	ldp	x23, x24, [sp, #48]
   1e830:	ldp	x25, x26, [sp, #64]
   1e834:	ldp	x27, x28, [sp, #80]
   1e838:	ldp	x29, x30, [sp], #160
   1e83c:	ret
   1e840:	add	x0, x0, w24, sxtw
   1e844:	mov	w5, w25
   1e848:	add	x2, x0, #0x1
   1e84c:	mov	w1, #0xa                   	// #10
   1e850:	mov	x4, x27
   1e854:	mov	x3, x21
   1e858:	add	x0, sp, #0x78
   1e85c:	bl	1e148 <mpfr_asprintf@@Base+0x2d8>
   1e860:	ldr	x1, [x19, #120]
   1e864:	mov	x25, x0
   1e868:	mov	x22, x1
   1e86c:	ldr	x1, [x1, #8]
   1e870:	cbnz	x1, 1e868 <mpfr_asprintf@@Base+0x9f8>
   1e874:	mov	x0, #0x10                  	// #16
   1e878:	bl	ccf0 <mpfr_allocate_func@plt>
   1e87c:	str	x0, [x22, #8]
   1e880:	ldr	x22, [sp, #120]
   1e884:	stp	x25, xzr, [x0]
   1e888:	b	1e600 <mpfr_asprintf@@Base+0x790>
   1e88c:	bl	bea0 <localeconv@plt>
   1e890:	ldr	x0, [x0]
   1e894:	mov	w1, #0x2e                  	// #46
   1e898:	ldrb	w0, [x0, #1]
   1e89c:	cbz	w0, 1eafc <mpfr_asprintf@@Base+0xc8c>
   1e8a0:	ldr	x0, [x19, #88]
   1e8a4:	strb	w1, [x19, #68]
   1e8a8:	sub	w24, w24, w0
   1e8ac:	str	w24, [x19, #96]
   1e8b0:	tbz	w22, #0, 1e6c0 <mpfr_asprintf@@Base+0x850>
   1e8b4:	b	1e808 <mpfr_asprintf@@Base+0x998>
   1e8b8:	bl	bea0 <localeconv@plt>
   1e8bc:	ldr	x0, [x0]
   1e8c0:	ldrb	w1, [x0]
   1e8c4:	b	1e6a8 <mpfr_asprintf@@Base+0x838>
   1e8c8:	bl	bea0 <localeconv@plt>
   1e8cc:	ldr	x0, [x0, #8]
   1e8d0:	ldrb	w0, [x0]
   1e8d4:	cbnz	w0, 1e8e8 <mpfr_asprintf@@Base+0xa78>
   1e8d8:	mov	w0, #0x0                   	// #0
   1e8dc:	strb	w0, [x19, #40]
   1e8e0:	ldr	x2, [x19, #56]
   1e8e4:	b	1e63c <mpfr_asprintf@@Base+0x7cc>
   1e8e8:	bl	bea0 <localeconv@plt>
   1e8ec:	ldr	x0, [x0, #8]
   1e8f0:	ldrb	w0, [x0, #1]
   1e8f4:	cbnz	w0, 1e8d8 <mpfr_asprintf@@Base+0xa68>
   1e8f8:	bl	bea0 <localeconv@plt>
   1e8fc:	ldr	x0, [x0, #8]
   1e900:	ldrb	w0, [x0]
   1e904:	b	1e8dc <mpfr_asprintf@@Base+0xa6c>
   1e908:	neg	w28, w24
   1e90c:	mov	x0, x21
   1e910:	bl	1dfc0 <mpfr_asprintf@@Base+0x150>
   1e914:	str	x0, [sp, #120]
   1e918:	cmp	x0, w28, sxtw
   1e91c:	sxtw	x28, w28
   1e920:	b.ge	1e9f4 <mpfr_asprintf@@Base+0xb84>  // b.tcont
   1e924:	cmp	w25, #0x3
   1e928:	b.eq	1eb20 <mpfr_asprintf@@Base+0xcb0>  // b.none
   1e92c:	b.gt	1e9d0 <mpfr_asprintf@@Base+0xb60>
   1e930:	cmp	w25, #0x1
   1e934:	b.eq	1e9c8 <mpfr_asprintf@@Base+0xb58>  // b.none
   1e938:	cmp	w25, #0x2
   1e93c:	b.ne	1eb38 <mpfr_asprintf@@Base+0xcc8>  // b.any
   1e940:	ldr	w0, [x21, #8]
   1e944:	cmp	w0, #0x0
   1e948:	cset	w21, gt
   1e94c:	cbz	w21, 1e9c8 <mpfr_asprintf@@Base+0xb58>
   1e950:	mov	x1, #0x1                   	// #1
   1e954:	sub	w24, w24, #0x1
   1e958:	str	w24, [x19, #72]
   1e95c:	mov	x0, #0x2                   	// #2
   1e960:	str	x1, [x19, #88]
   1e964:	bl	ccf0 <mpfr_allocate_func@plt>
   1e968:	mov	x22, x0
   1e96c:	mov	w0, #0x31                  	// #49
   1e970:	strh	w0, [x22]
   1e974:	ldr	x1, [x19, #120]
   1e978:	mov	x21, x1
   1e97c:	ldr	x1, [x1, #8]
   1e980:	cbnz	x1, 1e978 <mpfr_asprintf@@Base+0xb08>
   1e984:	mov	x0, #0x10                  	// #16
   1e988:	bl	ccf0 <mpfr_allocate_func@plt>
   1e98c:	str	x0, [x21, #8]
   1e990:	stp	x22, xzr, [x0]
   1e994:	ldrb	w1, [x20]
   1e998:	str	x22, [x19, #80]
   1e99c:	and	w1, w1, #0x1
   1e9a0:	cbz	w1, 1e7b4 <mpfr_asprintf@@Base+0x944>
   1e9a4:	b	1e7d0 <mpfr_asprintf@@Base+0x960>
   1e9a8:	ldr	x0, [x19, #48]
   1e9ac:	mov	w1, #0x31                  	// #49
   1e9b0:	cmp	w22, #0x47
   1e9b4:	strb	w1, [x0]
   1e9b8:	b.ne	1e9c8 <mpfr_asprintf@@Base+0xb58>  // b.any
   1e9bc:	ldrb	w0, [x20]
   1e9c0:	tbz	w0, #0, 1e7b4 <mpfr_asprintf@@Base+0x944>
   1e9c4:	nop
   1e9c8:	str	w24, [x19, #72]
   1e9cc:	b	1e7d0 <mpfr_asprintf@@Base+0x960>
   1e9d0:	sub	w25, w25, #0x4
   1e9d4:	cmp	w25, #0x1
   1e9d8:	b.ls	1e950 <mpfr_asprintf@@Base+0xae0>  // b.plast
   1e9dc:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   1e9e0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1e9e4:	add	x2, x2, #0x7f8
   1e9e8:	add	x0, x0, #0x780
   1e9ec:	mov	w1, #0x58f                 	// #1423
   1e9f0:	bl	cb40 <mpfr_assert_fail@plt>
   1e9f4:	cbz	x26, 1eab0 <mpfr_asprintf@@Base+0xc40>
   1e9f8:	ldp	x1, x27, [x26]
   1e9fc:	str	x1, [sp, #120]
   1ea00:	ldrsw	x0, [x21, #8]
   1ea04:	cmp	x1, #0x1
   1ea08:	add	x27, x27, x0, lsr #63
   1ea0c:	b.eq	1e9a8 <mpfr_asprintf@@Base+0xb38>  // b.none
   1ea10:	neg	w25, w1
   1ea14:	str	w25, [x19, #72]
   1ea18:	str	x27, [x19, #80]
   1ea1c:	mov	w21, w1
   1ea20:	mov	x0, x27
   1ea24:	bl	bab0 <strlen@plt>
   1ea28:	cbnz	w23, 1ea50 <mpfr_asprintf@@Base+0xbe0>
   1ea2c:	add	x1, x27, x0
   1ea30:	ldurb	w1, [x1, #-1]
   1ea34:	cmp	w1, #0x30
   1ea38:	b.ne	1ea50 <mpfr_asprintf@@Base+0xbe0>  // b.any
   1ea3c:	sub	x27, x27, #0x1
   1ea40:	sub	x0, x0, #0x1
   1ea44:	ldrb	w1, [x27, x0]
   1ea48:	cmp	w1, #0x30
   1ea4c:	b.eq	1ea40 <mpfr_asprintf@@Base+0xbd0>  // b.none
   1ea50:	mov	x1, #0x7fffffff            	// #2147483647
   1ea54:	cmp	x0, x1
   1ea58:	b.hi	1eb30 <mpfr_asprintf@@Base+0xcc0>  // b.pmore
   1ea5c:	ldrb	w1, [x20]
   1ea60:	cmp	w22, #0x47
   1ea64:	str	x0, [x19, #88]
   1ea68:	and	w1, w1, #0x1
   1ea6c:	b.ne	1eb0c <mpfr_asprintf@@Base+0xc9c>  // b.any
   1ea70:	cbz	w1, 1e7b8 <mpfr_asprintf@@Base+0x948>
   1ea74:	add	x25, x0, w25, sxtw
   1ea78:	cmp	x25, w24, sxtw
   1ea7c:	b.cs	1e7d0 <mpfr_asprintf@@Base+0x960>  // b.hs, b.nlast
   1ea80:	add	w21, w24, w21
   1ea84:	sub	w0, w21, w0
   1ea88:	str	w0, [x19, #96]
   1ea8c:	cbz	w1, 1e7b4 <mpfr_asprintf@@Base+0x944>
   1ea90:	b	1e7d0 <mpfr_asprintf@@Base+0x960>
   1ea94:	ldr	w0, [x21, #8]
   1ea98:	tbz	w0, #31, 1e7a8 <mpfr_asprintf@@Base+0x938>
   1ea9c:	b	1e7a0 <mpfr_asprintf@@Base+0x930>
   1eaa0:	ldr	w0, [x21, #8]
   1eaa4:	cmp	w0, #0x0
   1eaa8:	b.gt	1e7a0 <mpfr_asprintf@@Base+0x930>
   1eaac:	b	1e7a8 <mpfr_asprintf@@Base+0x938>
   1eab0:	add	x0, x0, #0x1
   1eab4:	mov	x4, x27
   1eab8:	add	x2, x0, w24, sxtw
   1eabc:	mov	w1, #0xa                   	// #10
   1eac0:	mov	w5, w25
   1eac4:	mov	x3, x21
   1eac8:	add	x0, sp, #0x78
   1eacc:	bl	1e148 <mpfr_asprintf@@Base+0x2d8>
   1ead0:	ldr	x1, [x19, #120]
   1ead4:	mov	x27, x0
   1ead8:	mov	x25, x1
   1eadc:	ldr	x1, [x1, #8]
   1eae0:	cbnz	x1, 1ead8 <mpfr_asprintf@@Base+0xc68>
   1eae4:	mov	x0, #0x10                  	// #16
   1eae8:	bl	ccf0 <mpfr_allocate_func@plt>
   1eaec:	str	x0, [x25, #8]
   1eaf0:	ldr	x1, [sp, #120]
   1eaf4:	stp	x27, xzr, [x0]
   1eaf8:	b	1ea00 <mpfr_asprintf@@Base+0xb90>
   1eafc:	bl	bea0 <localeconv@plt>
   1eb00:	ldr	x0, [x0]
   1eb04:	ldrb	w1, [x0]
   1eb08:	b	1e8a0 <mpfr_asprintf@@Base+0xa30>
   1eb0c:	add	x25, x0, w25, sxtw
   1eb10:	cmp	x25, w24, sxtw
   1eb14:	b.cc	1ea80 <mpfr_asprintf@@Base+0xc10>  // b.lo, b.ul, b.last
   1eb18:	cbz	w1, 1e7b4 <mpfr_asprintf@@Base+0x944>
   1eb1c:	b	1e7d0 <mpfr_asprintf@@Base+0x960>
   1eb20:	ldr	w0, [x21, #8]
   1eb24:	lsr	w21, w0, #31
   1eb28:	cbz	w21, 1e9c8 <mpfr_asprintf@@Base+0xb58>
   1eb2c:	b	1e950 <mpfr_asprintf@@Base+0xae0>
   1eb30:	mov	w0, #0xffffffff            	// #-1
   1eb34:	b	1e6c4 <mpfr_asprintf@@Base+0x854>
   1eb38:	ldr	x0, [x21]
   1eb3c:	mov	x23, #0x38                  	// #56
   1eb40:	cmp	x0, x23
   1eb44:	csel	x0, x0, x23, ge  // ge = tcont
   1eb48:	cbnz	w25, 1e9dc <mpfr_asprintf@@Base+0xb6c>
   1eb4c:	add	x23, x0, #0x8
   1eb50:	add	x22, sp, #0x80
   1eb54:	mov	x1, x23
   1eb58:	mov	x0, x22
   1eb5c:	bl	ca80 <mpfr_init2@plt>
   1eb60:	b	1eb68 <mpfr_asprintf@@Base+0xcf8>
   1eb64:	add	x23, x23, #0x8
   1eb68:	mov	x1, x23
   1eb6c:	mov	x0, x22
   1eb70:	bl	bed0 <mpfr_set_prec@plt>
   1eb74:	mov	w3, #0x0                   	// #0
   1eb78:	mov	x1, x28
   1eb7c:	mov	x2, #0x0                   	// #0
   1eb80:	mov	x0, x22
   1eb84:	bl	ba80 <mpfr_set_si_2exp@plt>
   1eb88:	mov	x1, x22
   1eb8c:	mov	w2, #0x3                   	// #3
   1eb90:	mov	x0, x22
   1eb94:	bl	bd80 <mpfr_exp10@plt>
   1eb98:	mov	w3, #0x0                   	// #0
   1eb9c:	mov	x2, #0x1                   	// #1
   1eba0:	mov	x1, x22
   1eba4:	mov	x0, x22
   1eba8:	bl	c8f0 <mpfr_div_2ui@plt>
   1ebac:	mov	x1, x21
   1ebb0:	mov	x0, x22
   1ebb4:	bl	c9b0 <mpfr_cmpabs@plt>
   1ebb8:	cbz	w0, 1eb64 <mpfr_asprintf@@Base+0xcf4>
   1ebbc:	lsr	w21, w0, #31
   1ebc0:	mov	x0, x22
   1ebc4:	bl	c070 <mpfr_clear@plt>
   1ebc8:	cbz	w21, 1e9c8 <mpfr_asprintf@@Base+0xb58>
   1ebcc:	b	1e950 <mpfr_asprintf@@Base+0xae0>
   1ebd0:	stp	x29, x30, [sp, #-48]!
   1ebd4:	mov	x29, sp
   1ebd8:	stp	x19, x20, [sp, #16]
   1ebdc:	mov	x20, x0
   1ebe0:	ldr	x0, [x0, #24]
   1ebe4:	cmn	x0, #0x1
   1ebe8:	b.eq	1ec60 <mpfr_asprintf@@Base+0xdf0>  // b.none
   1ebec:	adds	x0, x2, x0
   1ebf0:	mov	x19, x2
   1ebf4:	ccmp	x0, #0x0, #0x1, cc  // cc = lo, ul, last
   1ebf8:	b.lt	1ec80 <mpfr_asprintf@@Base+0xe10>  // b.tstop
   1ebfc:	str	x21, [sp, #32]
   1ec00:	and	w21, w1, #0xff
   1ec04:	ldr	x1, [x20, #16]
   1ec08:	str	x0, [x20, #24]
   1ec0c:	cbz	x1, 1ec4c <mpfr_asprintf@@Base+0xddc>
   1ec10:	mvn	x0, x2
   1ec14:	cmp	x1, x0
   1ec18:	b.cs	1eca4 <mpfr_asprintf@@Base+0xe34>  // b.hs, b.nlast
   1ec1c:	ldp	x2, x0, [x20]
   1ec20:	add	x1, x2, x1
   1ec24:	add	x2, x0, x19
   1ec28:	cmp	x2, x1
   1ec2c:	b.cs	1ec90 <mpfr_asprintf@@Base+0xe20>  // b.hs, b.nlast
   1ec30:	cmp	x19, #0x1
   1ec34:	b.ne	1ec70 <mpfr_asprintf@@Base+0xe00>  // b.any
   1ec38:	strb	w21, [x0]
   1ec3c:	ldr	x0, [x20, #8]
   1ec40:	add	x1, x0, x19
   1ec44:	str	x1, [x20, #8]
   1ec48:	strb	wzr, [x0, x19]
   1ec4c:	ldr	x21, [sp, #32]
   1ec50:	mov	w0, #0x0                   	// #0
   1ec54:	ldp	x19, x20, [sp, #16]
   1ec58:	ldp	x29, x30, [sp], #48
   1ec5c:	ret
   1ec60:	mov	w0, #0x1                   	// #1
   1ec64:	ldp	x19, x20, [sp, #16]
   1ec68:	ldp	x29, x30, [sp], #48
   1ec6c:	ret
   1ec70:	mov	w1, w21
   1ec74:	mov	x2, x19
   1ec78:	bl	c110 <memset@plt>
   1ec7c:	b	1ec3c <mpfr_asprintf@@Base+0xdcc>
   1ec80:	mov	x1, #0xffffffffffffffff    	// #-1
   1ec84:	mov	w0, #0x1                   	// #1
   1ec88:	str	x1, [x20, #24]
   1ec8c:	b	1ec54 <mpfr_asprintf@@Base+0xde4>
   1ec90:	mov	x0, x20
   1ec94:	mov	x1, x19
   1ec98:	bl	1df08 <mpfr_asprintf@@Base+0x98>
   1ec9c:	ldr	x0, [x20, #8]
   1eca0:	b	1ec30 <mpfr_asprintf@@Base+0xdc0>
   1eca4:	mov	w1, #0x29a                 	// #666
   1eca8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   1ecac:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   1ecb0:	add	x2, x2, #0x790
   1ecb4:	add	x0, x0, #0x780
   1ecb8:	bl	cb40 <mpfr_assert_fail@plt>
   1ecbc:	ldr	x1, [x20, #16]
   1ecc0:	b	1ec1c <mpfr_asprintf@@Base+0xdac>
   1ecc4:	nop

000000000001ecc8 <mpfr_vasnprintf_aux@@Base>:
   1ecc8:	sub	sp, sp, #0x2b0
   1eccc:	mrs	x8, tpidr_el0
   1ecd0:	mov	x7, x0
   1ecd4:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   1ecd8:	stp	x29, x30, [sp, #16]
   1ecdc:	add	x29, sp, #0x10
   1ece0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1ece4:	ldr	x5, [x0, #2576]
   1ece8:	add	x0, x0, #0xa10
   1ecec:	blr	x5
   1ecf0:	ldr	w0, [x8, x0]
   1ecf4:	stp	x19, x20, [sp, #32]
   1ecf8:	stp	x21, x22, [sp, #48]
   1ecfc:	mov	x22, x4
   1ed00:	ldr	w21, [x4, #24]
   1ed04:	str	w0, [x29, #256]
   1ed08:	ldr	x20, [x4]
   1ed0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1ed10:	ldr	x4, [x0, #2512]
   1ed14:	add	x0, x0, #0x9d0
   1ed18:	blr	x4
   1ed1c:	add	x5, x8, x0
   1ed20:	stp	x23, x24, [sp, #64]
   1ed24:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   1ed28:	ldr	x0, [x8, x0]
   1ed2c:	stp	x25, x26, [sp, #80]
   1ed30:	mov	x26, x3
   1ed34:	stp	x27, x28, [sp, #96]
   1ed38:	str	x0, [x29, #200]
   1ed3c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1ed40:	ldr	x9, [x0, #2544]
   1ed44:	add	x0, x0, #0x9f0
   1ed48:	blr	x9
   1ed4c:	str	x6, [x5]
   1ed50:	str	x2, [x29, #216]
   1ed54:	ldr	x5, [x8, x0]
   1ed58:	str	x4, [x8, x0]
   1ed5c:	orr	x0, x7, x2
   1ed60:	str	x1, [x29, #168]
   1ed64:	ldr	x2, [x22, #8]
   1ed68:	str	x2, [x29, #264]
   1ed6c:	ldr	x2, [x22, #16]
   1ed70:	str	x0, [x29, #176]
   1ed74:	str	x8, [x29, #184]
   1ed78:	mov	x1, #0x0                   	// #0
   1ed7c:	str	x5, [x29, #192]
   1ed80:	str	x7, [x29, #240]
   1ed84:	str	x2, [x29, #248]
   1ed88:	ldr	w2, [x22, #28]
   1ed8c:	str	w2, [x29, #260]
   1ed90:	cbnz	x0, 20300 <mpfr_vasnprintf_aux@@Base+0x1638>
   1ed94:	ldrb	w19, [x26]
   1ed98:	stp	x1, xzr, [x29, #416]
   1ed9c:	ldp	x2, x3, [x22]
   1eda0:	stp	x2, x3, [x29, #432]
   1eda4:	ldp	x0, x1, [x22, #16]
   1eda8:	stp	x0, x1, [x29, #448]
   1edac:	cbz	w19, 1eecc <mpfr_vasnprintf_aux@@Base+0x204>
   1edb0:	ldr	x0, [x29, #240]
   1edb4:	mov	x28, #0x71                  	// #113
   1edb8:	mov	x23, #0x800000              	// #8388608
   1edbc:	add	x1, x29, #0x190
   1edc0:	cmp	x0, #0x0
   1edc4:	mov	w27, w21
   1edc8:	ldr	x0, [x29, #216]
   1edcc:	mov	x15, x26
   1edd0:	mov	x21, x20
   1edd4:	movk	x28, #0x71, lsl #32
   1edd8:	csinc	x0, x0, xzr, eq  // eq = none
   1eddc:	movk	x23, #0xc, lsl #32
   1ede0:	str	x0, [x29, #232]
   1ede4:	mov	w0, #0x0                   	// #0
   1ede8:	str	x1, [x29, #272]
   1edec:	b	1edf4 <mpfr_vasnprintf_aux@@Base+0x12c>
   1edf0:	ldrb	w19, [x26, #1]!
   1edf4:	cmp	w19, #0x25
   1edf8:	ccmp	w19, #0x0, #0x4, ne  // ne = any
   1edfc:	b.ne	1edf0 <mpfr_vasnprintf_aux@@Base+0x128>  // b.any
   1ee00:	cbz	w19, 202b4 <mpfr_vasnprintf_aux@@Base+0x15ec>
   1ee04:	ldrb	w19, [x26, #1]
   1ee08:	cmp	w19, #0x25
   1ee0c:	b.ne	1ef78 <mpfr_vasnprintf_aux@@Base+0x2b0>  // b.any
   1ee10:	ldrb	w19, [x26, #2]
   1ee14:	add	x20, x26, #0x2
   1ee18:	mov	w0, #0x1                   	// #1
   1ee1c:	cbz	w19, 1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   1ee20:	mov	x26, x20
   1ee24:	b	1edf4 <mpfr_vasnprintf_aux@@Base+0x12c>
   1ee28:	cmp	w19, #0x58
   1ee2c:	b.eq	1f124 <mpfr_vasnprintf_aux@@Base+0x45c>  // b.none
   1ee30:	cmp	w19, #0x61
   1ee34:	b.ne	1ee20 <mpfr_vasnprintf_aux@@Base+0x158>  // b.any
   1ee38:	cbnz	w3, 1fa0c <mpfr_vasnprintf_aux@@Base+0xd44>
   1ee3c:	cbnz	w19, 1fb8c <mpfr_vasnprintf_aux@@Base+0xec4>
   1ee40:	mov	x24, x20
   1ee44:	cmp	x24, x15
   1ee48:	b.eq	1eecc <mpfr_vasnprintf_aux@@Base+0x204>  // b.none
   1ee4c:	sub	x24, x24, x15
   1ee50:	cbz	w0, 201a8 <mpfr_vasnprintf_aux@@Base+0x14e0>
   1ee54:	str	xzr, [x29, #504]
   1ee58:	add	x1, x24, #0x1
   1ee5c:	cmp	x1, #0x4, lsl #12
   1ee60:	b.hi	210cc <mpfr_vasnprintf_aux@@Base+0x2404>  // b.pmore
   1ee64:	add	x0, x24, #0x10
   1ee68:	and	x0, x0, #0xfffffffffffffff0
   1ee6c:	sub	sp, sp, x0
   1ee70:	add	x3, sp, #0x10
   1ee74:	mov	x1, x15
   1ee78:	mov	x2, x24
   1ee7c:	mov	x0, x3
   1ee80:	bl	cad0 <strncpy@plt>
   1ee84:	strb	wzr, [x0, x24]
   1ee88:	mov	x1, x0
   1ee8c:	add	x2, x29, #0x150
   1ee90:	add	x0, x29, #0x220
   1ee94:	ldp	x4, x5, [x29, #432]
   1ee98:	stp	x4, x5, [x29, #336]
   1ee9c:	ldp	x4, x5, [x29, #448]
   1eea0:	stp	x4, x5, [x29, #352]
   1eea4:	bl	c050 <__gmp_vasprintf@plt>
   1eea8:	tbnz	w0, #31, 20354 <mpfr_vasnprintf_aux@@Base+0x168c>
   1eeac:	ldr	x1, [x29, #544]
   1eeb0:	sxtw	x2, w0
   1eeb4:	add	x0, x29, #0x190
   1eeb8:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   1eebc:	ldr	x0, [x29, #544]
   1eec0:	bl	c890 <mpfr_free_str@plt>
   1eec4:	ldr	x0, [x29, #504]
   1eec8:	cbnz	x0, 2100c <mpfr_vasnprintf_aux@@Base+0x2344>
   1eecc:	ldr	x1, [x29, #424]
   1eed0:	mov	x0, #0x7fffffff            	// #2147483647
   1eed4:	cmp	x1, x0
   1eed8:	ccmn	x1, #0x1, #0x4, le
   1eedc:	b.eq	201cc <mpfr_vasnprintf_aux@@Base+0x1504>  // b.none
   1eee0:	ldr	x19, [x29, #240]
   1eee4:	mov	w20, w1
   1eee8:	cbz	x19, 20558 <mpfr_vasnprintf_aux@@Base+0x1890>
   1eeec:	add	w2, w1, #0x1
   1eef0:	ldr	x0, [x29, #400]
   1eef4:	sxtw	x2, w2
   1eef8:	ldr	x1, [x29, #416]
   1eefc:	bl	c1c0 <mpfr_reallocate_func@plt>
   1ef00:	str	x0, [x19]
   1ef04:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1ef08:	ldr	x1, [x0, #2576]
   1ef0c:	add	x0, x0, #0xa10
   1ef10:	blr	x1
   1ef14:	ldr	w2, [x29, #256]
   1ef18:	ldr	x1, [x29, #184]
   1ef1c:	str	w2, [x1, x0]
   1ef20:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1ef24:	ldr	x2, [x0, #2512]
   1ef28:	add	x0, x0, #0x9d0
   1ef2c:	blr	x2
   1ef30:	ldr	x2, [x29, #200]
   1ef34:	str	x2, [x1, x0]
   1ef38:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   1ef3c:	ldr	x2, [x0, #2544]
   1ef40:	add	x0, x0, #0x9f0
   1ef44:	blr	x2
   1ef48:	ldr	x2, [x29, #192]
   1ef4c:	str	x2, [x1, x0]
   1ef50:	sub	sp, x29, #0x10
   1ef54:	mov	w0, w20
   1ef58:	ldp	x29, x30, [sp, #16]
   1ef5c:	ldp	x19, x20, [sp, #32]
   1ef60:	ldp	x21, x22, [sp, #48]
   1ef64:	ldp	x23, x24, [sp, #64]
   1ef68:	ldp	x25, x26, [sp, #80]
   1ef6c:	ldp	x27, x28, [sp, #96]
   1ef70:	add	sp, sp, #0x2b0
   1ef74:	ret
   1ef78:	add	x2, x26, #0x1
   1ef7c:	cbz	w19, 20290 <mpfr_vasnprintf_aux@@Base+0x15c8>
   1ef80:	mov	x1, x2
   1ef84:	mov	w5, #0x20                  	// #32
   1ef88:	mov	w12, #0x0                   	// #0
   1ef8c:	mov	w11, #0x0                   	// #0
   1ef90:	mov	w4, #0x0                   	// #0
   1ef94:	mov	w10, #0x0                   	// #0
   1ef98:	mov	w14, #0x0                   	// #0
   1ef9c:	b	1efc8 <mpfr_vasnprintf_aux@@Base+0x300>
   1efa0:	cmp	w19, #0x23
   1efa4:	b.eq	1f9c0 <mpfr_vasnprintf_aux@@Base+0xcf8>  // b.none
   1efa8:	cmp	w19, #0x27
   1efac:	b.ne	1eff8 <mpfr_vasnprintf_aux@@Base+0x330>  // b.any
   1efb0:	add	x1, x1, #0x1
   1efb4:	mov	w12, #0x1                   	// #1
   1efb8:	mov	x2, x1
   1efbc:	nop
   1efc0:	ldrb	w19, [x1]
   1efc4:	cbz	w19, 202a8 <mpfr_vasnprintf_aux@@Base+0x15e0>
   1efc8:	mov	x2, x1
   1efcc:	cmp	w19, #0x2b
   1efd0:	b.eq	1f9d0 <mpfr_vasnprintf_aux@@Base+0xd08>  // b.none
   1efd4:	b.ls	1efa0 <mpfr_vasnprintf_aux@@Base+0x2d8>  // b.plast
   1efd8:	cmp	w19, #0x2d
   1efdc:	b.eq	1f9e0 <mpfr_vasnprintf_aux@@Base+0xd18>  // b.none
   1efe0:	cmp	w19, #0x30
   1efe4:	b.ne	1f010 <mpfr_vasnprintf_aux@@Base+0x348>  // b.any
   1efe8:	add	x1, x1, #0x1
   1efec:	mov	w5, w19
   1eff0:	mov	x2, x1
   1eff4:	b	1efc0 <mpfr_vasnprintf_aux@@Base+0x2f8>
   1eff8:	cmp	w19, #0x20
   1effc:	b.ne	1f010 <mpfr_vasnprintf_aux@@Base+0x348>  // b.any
   1f000:	add	x1, x1, #0x1
   1f004:	mov	w10, #0x1                   	// #1
   1f008:	mov	x2, x1
   1f00c:	b	1efc0 <mpfr_vasnprintf_aux@@Base+0x2f8>
   1f010:	mov	w25, #0x0                   	// #0
   1f014:	mov	w3, #0x7fffffff            	// #2147483647
   1f018:	b	1f05c <mpfr_vasnprintf_aux@@Base+0x394>
   1f01c:	sub	w6, w19, #0x30
   1f020:	and	w1, w6, #0xff
   1f024:	cmp	w1, #0x9
   1f028:	b.hi	1fa98 <mpfr_vasnprintf_aux@@Base+0xdd0>  // b.pmore
   1f02c:	add	w1, w25, w25, lsl #2
   1f030:	mov	w7, #0xcccc                	// #52428
   1f034:	ldrb	w19, [x2, #1]!
   1f038:	movk	w7, #0xccc, lsl #16
   1f03c:	lsl	w1, w1, #1
   1f040:	cmp	w25, w7
   1f044:	csel	w1, w1, w3, le
   1f048:	sub	w7, w3, w6
   1f04c:	cmp	w7, w1
   1f050:	add	w1, w1, w6
   1f054:	csel	w25, w1, w3, ge  // ge = tcont
   1f058:	cbz	w19, 1f0a4 <mpfr_vasnprintf_aux@@Base+0x3dc>
   1f05c:	cmp	w19, #0x2a
   1f060:	b.ne	1f01c <mpfr_vasnprintf_aux@@Base+0x354>  // b.any
   1f064:	tbnz	w27, #31, 1fac8 <mpfr_vasnprintf_aux@@Base+0xe00>
   1f068:	add	x1, x21, #0xb
   1f06c:	and	x1, x1, #0xfffffffffffffff8
   1f070:	ldr	w25, [x21]
   1f074:	add	x3, x2, #0x1
   1f078:	tbz	w25, #31, 1fa90 <mpfr_vasnprintf_aux@@Base+0xdc8>
   1f07c:	mov	w4, #0x80000001            	// #-2147483647
   1f080:	cmp	w25, w4
   1f084:	neg	w25, w25
   1f088:	b.eq	202e8 <mpfr_vasnprintf_aux@@Base+0x1620>  // b.none
   1f08c:	ldrb	w19, [x2, #1]
   1f090:	mov	x21, x1
   1f094:	mov	x2, x3
   1f098:	mov	w4, #0x1                   	// #1
   1f09c:	cmp	w19, #0x2e
   1f0a0:	b.eq	1f1a0 <mpfr_vasnprintf_aux@@Base+0x4d8>  // b.none
   1f0a4:	mov	w24, #0xffffffff            	// #-1
   1f0a8:	cmp	w19, #0x52
   1f0ac:	b.eq	1f234 <mpfr_vasnprintf_aux@@Base+0x56c>  // b.none
   1f0b0:	b.hi	1f79c <mpfr_vasnprintf_aux@@Base+0xad4>  // b.pmore
   1f0b4:	cmp	w19, #0x4e
   1f0b8:	b.eq	1fed4 <mpfr_vasnprintf_aux@@Base+0x120c>  // b.none
   1f0bc:	b.hi	1f938 <mpfr_vasnprintf_aux@@Base+0xc70>  // b.pmore
   1f0c0:	cmp	w19, #0x4c
   1f0c4:	b.eq	20008 <mpfr_vasnprintf_aux@@Base+0x1340>  // b.none
   1f0c8:	cmp	w19, #0x4d
   1f0cc:	b.ne	1f910 <mpfr_vasnprintf_aux@@Base+0xc48>  // b.any
   1f0d0:	ldrb	w19, [x2, #1]
   1f0d4:	add	x20, x2, #0x1
   1f0d8:	mov	w7, #0x0                   	// #0
   1f0dc:	mov	w2, #0x0                   	// #0
   1f0e0:	mov	w1, #0x0                   	// #0
   1f0e4:	mov	w13, #0x0                   	// #0
   1f0e8:	mov	w3, #0xb                   	// #11
   1f0ec:	nop
   1f0f0:	cmp	w19, #0x6e
   1f0f4:	b.eq	1f7dc <mpfr_vasnprintf_aux@@Base+0xb14>  // b.none
   1f0f8:	b.hi	1fa2c <mpfr_vasnprintf_aux@@Base+0xd64>  // b.pmore
   1f0fc:	cmp	w19, #0x62
   1f100:	b.eq	1fae4 <mpfr_vasnprintf_aux@@Base+0xe1c>  // b.none
   1f104:	b.ls	1f9f0 <mpfr_vasnprintf_aux@@Base+0xd28>  // b.plast
   1f108:	cmp	w19, #0x64
   1f10c:	b.eq	1f124 <mpfr_vasnprintf_aux@@Base+0x45c>  // b.none
   1f110:	b.ls	1fa74 <mpfr_vasnprintf_aux@@Base+0xdac>  // b.plast
   1f114:	cmp	w19, #0x67
   1f118:	b.ls	1ee38 <mpfr_vasnprintf_aux@@Base+0x170>  // b.plast
   1f11c:	cmp	w19, #0x69
   1f120:	b.ne	1ee20 <mpfr_vasnprintf_aux@@Base+0x158>  // b.any
   1f124:	str	x20, [x29, #280]
   1f128:	cmp	w3, #0x7
   1f12c:	mov	w6, #0x0                   	// #0
   1f130:	b.hi	1ffa4 <mpfr_vasnprintf_aux@@Base+0x12dc>  // b.pmore
   1f134:	nop
   1f138:	add	x20, x20, #0x1
   1f13c:	cmp	w19, #0x6e
   1f140:	b.eq	2152c <mpfr_vasnprintf_aux@@Base+0x2864>  // b.none
   1f144:	cmp	w3, #0xe
   1f148:	b.eq	1fbe0 <mpfr_vasnprintf_aux@@Base+0xf18>  // b.none
   1f14c:	cmp	w3, #0xf
   1f150:	b.eq	1f2b8 <mpfr_vasnprintf_aux@@Base+0x5f0>  // b.none
   1f154:	cmp	w3, #0x8
   1f158:	b.eq	20a04 <mpfr_vasnprintf_aux@@Base+0x1d3c>  // b.none
   1f15c:	b.hi	1faf8 <mpfr_vasnprintf_aux@@Base+0xe30>  // b.pmore
   1f160:	cmp	w3, #0x5
   1f164:	b.eq	1f180 <mpfr_vasnprintf_aux@@Base+0x4b8>  // b.none
   1f168:	b.hi	1fb5c <mpfr_vasnprintf_aux@@Base+0xe94>  // b.pmore
   1f16c:	cmp	w3, #0x3
   1f170:	b.eq	20974 <mpfr_vasnprintf_aux@@Base+0x1cac>  // b.none
   1f174:	b.ls	1fb94 <mpfr_vasnprintf_aux@@Base+0xecc>  // b.plast
   1f178:	cmp	w3, #0x4
   1f17c:	b.ne	1fb14 <mpfr_vasnprintf_aux@@Base+0xe4c>  // b.any
   1f180:	tbnz	w27, #31, 1fb70 <mpfr_vasnprintf_aux@@Base+0xea8>
   1f184:	ldr	x0, [x29, #280]
   1f188:	add	x21, x21, #0xf
   1f18c:	and	x21, x21, #0xfffffffffffffff8
   1f190:	ldrb	w19, [x0, #1]
   1f194:	mov	w0, #0x1                   	// #1
   1f198:	cbnz	w19, 1ee20 <mpfr_vasnprintf_aux@@Base+0x158>
   1f19c:	b	1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   1f1a0:	ldrb	w19, [x2, #1]
   1f1a4:	add	x20, x2, #0x1
   1f1a8:	cbz	w19, 1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   1f1ac:	mov	x2, x20
   1f1b0:	mov	w3, w19
   1f1b4:	mov	w24, #0x0                   	// #0
   1f1b8:	mov	w7, #0x7fffffff            	// #2147483647
   1f1bc:	b	1f200 <mpfr_vasnprintf_aux@@Base+0x538>
   1f1c0:	sub	w6, w3, #0x30
   1f1c4:	and	w1, w6, #0xff
   1f1c8:	cmp	w1, #0x9
   1f1cc:	b.hi	1f220 <mpfr_vasnprintf_aux@@Base+0x558>  // b.pmore
   1f1d0:	add	w1, w24, w24, lsl #2
   1f1d4:	mov	w8, #0xcccc                	// #52428
   1f1d8:	ldrb	w3, [x2, #1]!
   1f1dc:	movk	w8, #0xccc, lsl #16
   1f1e0:	lsl	w1, w1, #1
   1f1e4:	cmp	w24, w8
   1f1e8:	csel	w1, w1, w7, le
   1f1ec:	sub	w8, w7, w6
   1f1f0:	cmp	w8, w1
   1f1f4:	add	w1, w1, w6
   1f1f8:	csel	w24, w1, w7, ge  // ge = tcont
   1f1fc:	cbz	w3, 213a8 <mpfr_vasnprintf_aux@@Base+0x26e0>
   1f200:	cmp	w3, #0x2a
   1f204:	b.ne	1f1c0 <mpfr_vasnprintf_aux@@Base+0x4f8>  // b.any
   1f208:	tbnz	w27, #31, 2016c <mpfr_vasnprintf_aux@@Base+0x14a4>
   1f20c:	add	x3, x21, #0xb
   1f210:	mov	x1, x21
   1f214:	and	x21, x3, #0xfffffffffffffff8
   1f218:	ldr	w24, [x1]
   1f21c:	add	x2, x2, #0x1
   1f220:	cmp	x2, x20
   1f224:	b.eq	202dc <mpfr_vasnprintf_aux@@Base+0x1614>  // b.none
   1f228:	ldrb	w19, [x2]
   1f22c:	cmp	w19, #0x52
   1f230:	b.ne	1f0b0 <mpfr_vasnprintf_aux@@Base+0x3e8>  // b.any
   1f234:	ldrb	w19, [x2, #1]
   1f238:	add	x20, x2, #0x1
   1f23c:	mov	w1, #0x1                   	// #1
   1f240:	mov	w2, #0x0                   	// #0
   1f244:	cmp	w19, #0x55
   1f248:	mov	w13, w1
   1f24c:	mov	w7, #0x0                   	// #0
   1f250:	mov	w3, #0xf                   	// #15
   1f254:	b.eq	20348 <mpfr_vasnprintf_aux@@Base+0x1680>  // b.none
   1f258:	b.hi	1ff38 <mpfr_vasnprintf_aux@@Base+0x1270>  // b.pmore
   1f25c:	cmp	w19, #0x44
   1f260:	b.eq	2033c <mpfr_vasnprintf_aux@@Base+0x1674>  // b.none
   1f264:	cmp	w19, #0x4e
   1f268:	b.ne	1ff14 <mpfr_vasnprintf_aux@@Base+0x124c>  // b.any
   1f26c:	add	x20, x20, #0x1
   1f270:	mov	w6, #0x0                   	// #0
   1f274:	ldrb	w19, [x20]
   1f278:	cmp	w19, #0x69
   1f27c:	b.eq	1ffa0 <mpfr_vasnprintf_aux@@Base+0x12d8>  // b.none
   1f280:	b.hi	1ff74 <mpfr_vasnprintf_aux@@Base+0x12ac>  // b.pmore
   1f284:	cmp	w19, #0x62
   1f288:	b.eq	1fae8 <mpfr_vasnprintf_aux@@Base+0xe20>  // b.none
   1f28c:	b.ls	1ff54 <mpfr_vasnprintf_aux@@Base+0x128c>  // b.plast
   1f290:	cmp	w19, #0x63
   1f294:	b.eq	1ee20 <mpfr_vasnprintf_aux@@Base+0x158>  // b.none
   1f298:	cmp	w19, #0x64
   1f29c:	b.eq	1ffa0 <mpfr_vasnprintf_aux@@Base+0x12d8>  // b.none
   1f2a0:	sub	w1, w19, #0x65
   1f2a4:	and	w1, w1, #0xff
   1f2a8:	cmp	w1, #0x2
   1f2ac:	b.hi	1ee20 <mpfr_vasnprintf_aux@@Base+0x158>  // b.pmore
   1f2b0:	str	x20, [x29, #280]
   1f2b4:	add	x20, x20, #0x1
   1f2b8:	and	w2, w19, #0xffffffdf
   1f2bc:	sub	w1, w19, #0x61
   1f2c0:	and	w1, w1, #0xff
   1f2c4:	mov	w3, w2
   1f2c8:	cmp	w19, #0x41
   1f2cc:	sub	w2, w2, #0x45
   1f2d0:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   1f2d4:	and	w1, w2, #0xff
   1f2d8:	and	w2, w3, #0xff
   1f2dc:	str	w2, [x29, #224]
   1f2e0:	ccmp	w1, #0x2, #0x0, hi  // hi = pmore
   1f2e4:	b.hi	213ec <mpfr_vasnprintf_aux@@Base+0x2724>  // b.pmore
   1f2e8:	tbnz	w27, #31, 200f0 <mpfr_vasnprintf_aux@@Base+0x1428>
   1f2ec:	add	x2, x21, #0xf
   1f2f0:	mov	x1, x21
   1f2f4:	and	x21, x2, #0xfffffffffffffff8
   1f2f8:	sub	x2, x26, x15
   1f2fc:	ldr	x7, [x1]
   1f300:	cbz	w0, 20118 <mpfr_vasnprintf_aux@@Base+0x1450>
   1f304:	str	xzr, [x29, #504]
   1f308:	add	x1, x2, #0x1
   1f30c:	cmp	x1, #0x4, lsl #12
   1f310:	b.hi	21050 <mpfr_vasnprintf_aux@@Base+0x2388>  // b.pmore
   1f314:	add	x0, x2, #0x10
   1f318:	and	x0, x0, #0xfffffffffffffff0
   1f31c:	sub	sp, sp, x0
   1f320:	add	x3, sp, #0x10
   1f324:	mov	x1, x15
   1f328:	mov	x0, x3
   1f32c:	str	w14, [x29, #112]
   1f330:	add	x26, x29, #0x1b0
   1f334:	str	w6, [x29, #120]
   1f338:	stp	w5, w4, [x29, #128]
   1f33c:	str	x7, [x29, #136]
   1f340:	str	w12, [x29, #144]
   1f344:	str	w11, [x29, #152]
   1f348:	str	w10, [x29, #160]
   1f34c:	str	x2, [x29, #208]
   1f350:	bl	cad0 <strncpy@plt>
   1f354:	ldr	x2, [x29, #208]
   1f358:	mov	x3, x0
   1f35c:	mov	x1, x0
   1f360:	add	x0, x29, #0x220
   1f364:	strb	wzr, [x3, x2]
   1f368:	add	x2, x29, #0x150
   1f36c:	ldp	x16, x17, [x29, #432]
   1f370:	stp	x16, x17, [x29, #336]
   1f374:	ldp	x16, x17, [x29, #448]
   1f378:	stp	x16, x17, [x29, #352]
   1f37c:	bl	c050 <__gmp_vasprintf@plt>
   1f380:	sxtw	x2, w0
   1f384:	ldr	w14, [x29, #112]
   1f388:	ldr	w6, [x29, #120]
   1f38c:	ldp	w5, w4, [x29, #128]
   1f390:	ldr	w12, [x29, #144]
   1f394:	ldr	w11, [x29, #152]
   1f398:	ldr	w10, [x29, #160]
   1f39c:	ldr	x7, [x29, #136]
   1f3a0:	tbnz	w2, #31, 20354 <mpfr_vasnprintf_aux@@Base+0x168c>
   1f3a4:	ldr	x0, [x29, #272]
   1f3a8:	str	w5, [x29, #112]
   1f3ac:	ldr	x1, [x29, #544]
   1f3b0:	str	w14, [x29, #120]
   1f3b4:	stp	w6, w4, [x29, #132]
   1f3b8:	str	x7, [x29, #144]
   1f3bc:	str	w12, [x29, #152]
   1f3c0:	str	w11, [x29, #160]
   1f3c4:	str	w10, [x29, #208]
   1f3c8:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   1f3cc:	ldr	x0, [x29, #544]
   1f3d0:	bl	c890 <mpfr_free_str@plt>
   1f3d4:	ldr	x0, [x29, #504]
   1f3d8:	ldr	w5, [x29, #112]
   1f3dc:	ldr	w14, [x29, #120]
   1f3e0:	ldp	w6, w4, [x29, #132]
   1f3e4:	ldr	w12, [x29, #152]
   1f3e8:	ldr	w11, [x29, #160]
   1f3ec:	ldr	w10, [x29, #208]
   1f3f0:	ldr	x7, [x29, #144]
   1f3f4:	cbnz	x0, 21014 <mpfr_vasnprintf_aux@@Base+0x234c>
   1f3f8:	ldrb	w0, [x29, #504]
   1f3fc:	mov	w1, #0xf                   	// #15
   1f400:	ldr	x2, [x29, #264]
   1f404:	stp	x21, x2, [x22]
   1f408:	bfxil	w0, w14, #0, #1
   1f40c:	ldr	x2, [x29, #248]
   1f410:	bfi	w0, w10, #1, #1
   1f414:	str	x2, [x22, #16]
   1f418:	mov	w13, #0x2                   	// #2
   1f41c:	bfi	w0, w4, #2, #1
   1f420:	ldr	w2, [x29, #260]
   1f424:	mov	w4, w0
   1f428:	str	w27, [x22, #24]
   1f42c:	str	w2, [x22, #28]
   1f430:	bfi	w4, w11, #3, #1
   1f434:	str	w1, [x29, #528]
   1f438:	ldr	x2, [x29, #232]
   1f43c:	bfi	w4, w12, #4, #1
   1f440:	str	x2, [x29, #520]
   1f444:	and	w8, w4, #0xff
   1f448:	ldp	x0, x1, [x22]
   1f44c:	stp	x0, x1, [x26]
   1f450:	ldp	x2, x3, [x22, #16]
   1f454:	stp	x2, x3, [x26, #16]
   1f458:	str	w8, [x29, #208]
   1f45c:	strb	w4, [x29, #504]
   1f460:	str	w25, [x29, #508]
   1f464:	str	w24, [x29, #512]
   1f468:	str	w6, [x29, #532]
   1f46c:	strb	w19, [x29, #536]
   1f470:	strb	w5, [x29, #537]
   1f474:	tbnz	w4, #2, 1f480 <mpfr_vasnprintf_aux@@Base+0x7b8>
   1f478:	cmp	w5, #0x30
   1f47c:	cset	w13, eq  // eq = none
   1f480:	add	x1, x29, #0x238
   1f484:	mov	x0, #0x10                  	// #16
   1f488:	str	w6, [x29, #152]
   1f48c:	str	x7, [x29, #160]
   1f490:	stp	xzr, xzr, [x1]
   1f494:	stp	xzr, xzr, [x1, #24]
   1f498:	str	w13, [x29, #544]
   1f49c:	str	xzr, [x29, #552]
   1f4a0:	strb	wzr, [x29, #560]
   1f4a4:	strb	wzr, [x29, #584]
   1f4a8:	str	wzr, [x29, #608]
   1f4ac:	strb	wzr, [x29, #612]
   1f4b0:	str	wzr, [x29, #616]
   1f4b4:	str	xzr, [x29, #624]
   1f4b8:	str	xzr, [x29, #632]
   1f4bc:	str	wzr, [x29, #640]
   1f4c0:	str	xzr, [x29, #648]
   1f4c4:	str	xzr, [x29, #656]
   1f4c8:	bl	ccf0 <mpfr_allocate_func@plt>
   1f4cc:	mov	x1, x0
   1f4d0:	mov	w2, #0xffffffdb            	// #-37
   1f4d4:	and	w2, w19, w2
   1f4d8:	str	x1, [x29, #664]
   1f4dc:	cmp	w2, #0x41
   1f4e0:	sub	w0, w19, #0x45
   1f4e4:	stp	xzr, xzr, [x1]
   1f4e8:	cset	w1, eq  // eq = none
   1f4ec:	and	w0, w0, #0xff
   1f4f0:	ldr	x7, [x29, #160]
   1f4f4:	str	w1, [x29, #144]
   1f4f8:	ldr	w1, [x29, #224]
   1f4fc:	ldr	w6, [x29, #152]
   1f500:	cmp	w1, #0x41
   1f504:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1f508:	cset	w2, eq  // eq = none
   1f50c:	cmp	w0, #0x2
   1f510:	ldr	x0, [x7, #16]
   1f514:	cset	w26, ls  // ls = plast
   1f518:	cmp	w19, #0x41
   1f51c:	csinc	w26, w26, wzr, ne  // ne = any
   1f520:	cmp	x0, x1
   1f524:	b.le	20aa0 <mpfr_vasnprintf_aux@@Base+0x1dd8>
   1f528:	mov	x1, #0x4                   	// #4
   1f52c:	movk	x1, #0x8000, lsl #48
   1f530:	cmp	x0, x1
   1f534:	b.eq	20cec <mpfr_vasnprintf_aux@@Base+0x2024>  // b.none
   1f538:	cmp	w19, #0x62
   1f53c:	cset	w1, eq  // eq = none
   1f540:	str	w1, [x29, #160]
   1f544:	cmp	w2, #0x0
   1f548:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   1f54c:	b.eq	2036c <mpfr_vasnprintf_aux@@Base+0x16a4>  // b.none
   1f550:	ldr	w0, [x7, #8]
   1f554:	tbnz	w0, #31, 2060c <mpfr_vasnprintf_aux@@Base+0x1944>
   1f558:	ldr	w1, [x29, #208]
   1f55c:	mov	w0, #0xa                   	// #10
   1f560:	tst	w1, w0
   1f564:	b.eq	1f57c <mpfr_vasnprintf_aux@@Base+0x8b4>  // b.none
   1f568:	tst	x1, #0x8
   1f56c:	mov	w0, #0x2b                  	// #43
   1f570:	mov	w1, #0x20                  	// #32
   1f574:	csel	w0, w0, w1, ne  // ne = any
   1f578:	strb	w0, [x29, #560]
   1f57c:	ldr	w0, [x29, #224]
   1f580:	cmp	w0, #0x41
   1f584:	b.eq	20620 <mpfr_vasnprintf_aux@@Base+0x1958>  // b.none
   1f588:	mov	x0, #0x1                   	// #1
   1f58c:	str	x0, [x29, #600]
   1f590:	cbz	w24, 20cac <mpfr_vasnprintf_aux@@Base+0x1fe4>
   1f594:	mov	w1, #0x2                   	// #2
   1f598:	ldr	x4, [x29, #232]
   1f59c:	cmp	w24, #0x0
   1f5a0:	sxtw	x0, w24
   1f5a4:	mov	x3, x7
   1f5a8:	csinc	x2, xzr, x0, lt  // lt = tstop
   1f5ac:	mov	w5, w6
   1f5b0:	add	x0, x29, #0x178
   1f5b4:	str	x7, [x29, #152]
   1f5b8:	str	w1, [x29, #224]
   1f5bc:	bl	1e148 <mpfr_asprintf@@Base+0x2d8>
   1f5c0:	ldr	w1, [x29, #224]
   1f5c4:	mov	x26, x0
   1f5c8:	ldr	x7, [x29, #152]
   1f5cc:	ldr	x2, [x29, #664]
   1f5d0:	mov	x3, x2
   1f5d4:	ldr	x2, [x2, #8]
   1f5d8:	cbnz	x2, 1f5d0 <mpfr_vasnprintf_aux@@Base+0x908>
   1f5dc:	mov	x0, #0x10                  	// #16
   1f5e0:	stp	x7, x3, [x29, #144]
   1f5e4:	str	w1, [x29, #224]
   1f5e8:	bl	ccf0 <mpfr_allocate_func@plt>
   1f5ec:	ldp	x7, x3, [x29, #144]
   1f5f0:	mov	x2, x0
   1f5f4:	ldr	x0, [x29, #376]
   1f5f8:	ldr	w1, [x29, #224]
   1f5fc:	ldrsw	x4, [x7, #8]
   1f600:	cmp	w1, #0x10
   1f604:	str	x2, [x3, #8]
   1f608:	stp	x26, xzr, [x2]
   1f60c:	add	x26, x26, x4, lsr #63
   1f610:	str	x26, [x29, #592]
   1f614:	b.eq	20c90 <mpfr_vasnprintf_aux@@Base+0x1fc8>  // b.none
   1f618:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   1f61c:	cmp	x0, x1
   1f620:	b.eq	2137c <mpfr_vasnprintf_aux@@Base+0x26b4>  // b.none
   1f624:	sub	x0, x0, #0x1
   1f628:	str	x0, [x29, #376]
   1f62c:	cmp	w19, #0x41
   1f630:	b.eq	20c84 <mpfr_vasnprintf_aux@@Base+0x1fbc>  // b.none
   1f634:	add	x2, x26, #0x1
   1f638:	str	x2, [x29, #224]
   1f63c:	mov	x0, x2
   1f640:	bl	bab0 <strlen@plt>
   1f644:	ldr	x2, [x29, #224]
   1f648:	tbnz	w24, #31, 20a6c <mpfr_vasnprintf_aux@@Base+0x1da4>
   1f64c:	mov	x1, #0x7fffffff            	// #2147483647
   1f650:	cmp	x0, x1
   1f654:	b.hi	1f74c <mpfr_vasnprintf_aux@@Base+0xa84>  // b.pmore
   1f658:	cbz	x0, 207d4 <mpfr_vasnprintf_aux@@Base+0x1b0c>
   1f65c:	str	x2, [x29, #624]
   1f660:	cmp	w24, w0
   1f664:	str	x0, [x29, #632]
   1f668:	b.le	1f674 <mpfr_vasnprintf_aux@@Base+0x9ac>
   1f66c:	sub	w0, w24, w0
   1f670:	str	w0, [x29, #640]
   1f674:	bl	bea0 <localeconv@plt>
   1f678:	ldr	x0, [x0]
   1f67c:	ldrb	w0, [x0, #1]
   1f680:	cbz	w0, 20cdc <mpfr_vasnprintf_aux@@Base+0x2014>
   1f684:	mov	w0, #0x2e                  	// #46
   1f688:	strb	w0, [x29, #612]
   1f68c:	ldr	x0, [x29, #376]
   1f690:	mov	x1, #0x3                   	// #3
   1f694:	str	x1, [x29, #656]
   1f698:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   1f69c:	cmp	x0, #0x0
   1f6a0:	movk	x4, #0xcccd
   1f6a4:	cneg	x0, x0, lt  // lt = tstop
   1f6a8:	mov	x1, #0x4                   	// #4
   1f6ac:	cmp	x0, #0x9
   1f6b0:	b.ls	212cc <mpfr_vasnprintf_aux@@Base+0x2604>  // b.plast
   1f6b4:	nop
   1f6b8:	umulh	x3, x0, x4
   1f6bc:	cmp	x0, #0x63
   1f6c0:	mov	x2, x1
   1f6c4:	add	x1, x1, #0x1
   1f6c8:	lsr	x0, x3, #3
   1f6cc:	b.hi	1f6b8 <mpfr_vasnprintf_aux@@Base+0x9f0>  // b.pmore
   1f6d0:	mov	x0, x1
   1f6d4:	str	x2, [x29, #656]
   1f6d8:	bl	ccf0 <mpfr_allocate_func@plt>
   1f6dc:	mov	x26, x0
   1f6e0:	ldr	x1, [x29, #664]
   1f6e4:	nop
   1f6e8:	mov	x24, x1
   1f6ec:	ldr	x1, [x1, #8]
   1f6f0:	cbnz	x1, 1f6e8 <mpfr_vasnprintf_aux@@Base+0xa20>
   1f6f4:	mov	x0, #0x10                  	// #16
   1f6f8:	bl	ccf0 <mpfr_allocate_func@plt>
   1f6fc:	cmp	w19, #0x41
   1f700:	mov	w5, #0x70                  	// #112
   1f704:	adrp	x3, 60000 <mpfr_free_pool@@Base+0x4558>
   1f708:	add	x3, x3, #0x8d8
   1f70c:	mov	w4, #0x50                  	// #80
   1f710:	csel	w4, w4, w5, eq  // eq = none
   1f714:	add	x5, x29, #0x200
   1f718:	str	x0, [x24, #8]
   1f71c:	add	x1, x29, #0x180
   1f720:	ldr	x2, [x29, #376]
   1f724:	stp	x26, xzr, [x0]
   1f728:	mov	x0, x26
   1f72c:	strb	w4, [x29, #384]
   1f730:	ldr	w4, [x3]
   1f734:	ldur	w3, [x3, #3]
   1f738:	stur	w4, [x5, #-127]
   1f73c:	str	w3, [x1, #4]
   1f740:	str	x26, [x29, #648]
   1f744:	bl	bd10 <sprintf@plt>
   1f748:	tbz	w0, #31, 203c0 <mpfr_vasnprintf_aux@@Base+0x16f8>
   1f74c:	ldr	x19, [x29, #664]
   1f750:	cbnz	x19, 1f75c <mpfr_vasnprintf_aux@@Base+0xa94>
   1f754:	b	1f77c <mpfr_vasnprintf_aux@@Base+0xab4>
   1f758:	mov	x19, x24
   1f75c:	ldr	x0, [x19]
   1f760:	cbz	x0, 1f768 <mpfr_vasnprintf_aux@@Base+0xaa0>
   1f764:	bl	c890 <mpfr_free_str@plt>
   1f768:	ldr	x24, [x19, #8]
   1f76c:	mov	x0, x19
   1f770:	mov	x1, #0x10                  	// #16
   1f774:	bl	cc20 <mpfr_free_func@plt>
   1f778:	cbnz	x24, 1f758 <mpfr_vasnprintf_aux@@Base+0xa90>
   1f77c:	mov	x0, #0xffffffffffffffff    	// #-1
   1f780:	str	x0, [x29, #424]
   1f784:	ldr	x0, [x29, #280]
   1f788:	mov	x15, x20
   1f78c:	ldrb	w19, [x0, #1]
   1f790:	mov	w0, #0x0                   	// #0
   1f794:	cbnz	w19, 1ee20 <mpfr_vasnprintf_aux@@Base+0x158>
   1f798:	b	1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   1f79c:	cmp	w19, #0x6c
   1f7a0:	b.eq	20028 <mpfr_vasnprintf_aux@@Base+0x1360>  // b.none
   1f7a4:	b.hi	1f990 <mpfr_vasnprintf_aux@@Base+0xcc8>  // b.pmore
   1f7a8:	cmp	w19, #0x68
   1f7ac:	b.eq	20050 <mpfr_vasnprintf_aux@@Base+0x1388>  // b.none
   1f7b0:	cmp	w19, #0x6a
   1f7b4:	b.ne	1f968 <mpfr_vasnprintf_aux@@Base+0xca0>  // b.any
   1f7b8:	ldrb	w19, [x2, #1]
   1f7bc:	add	x20, x2, #0x1
   1f7c0:	mov	w7, #0x0                   	// #0
   1f7c4:	mov	w2, #0x0                   	// #0
   1f7c8:	cmp	w19, #0x6e
   1f7cc:	mov	w1, #0x0                   	// #0
   1f7d0:	mov	w13, #0x0                   	// #0
   1f7d4:	mov	w3, #0x5                   	// #5
   1f7d8:	b.ne	1f0f8 <mpfr_vasnprintf_aux@@Base+0x430>  // b.any
   1f7dc:	mov	w6, #0x0                   	// #0
   1f7e0:	add	x24, x20, #0x1
   1f7e4:	tbnz	w27, #31, 1fef4 <mpfr_vasnprintf_aux@@Base+0x122c>
   1f7e8:	add	x2, x21, #0xf
   1f7ec:	mov	x1, x21
   1f7f0:	and	x21, x2, #0xfffffffffffffff8
   1f7f4:	sub	x19, x26, x15
   1f7f8:	ldr	x25, [x1]
   1f7fc:	cbz	w0, 1fe8c <mpfr_vasnprintf_aux@@Base+0x11c4>
   1f800:	str	xzr, [x29, #504]
   1f804:	add	x1, x19, #0x1
   1f808:	cmp	x1, #0x4, lsl #12
   1f80c:	b.hi	20a44 <mpfr_vasnprintf_aux@@Base+0x1d7c>  // b.pmore
   1f810:	add	x0, x19, #0x10
   1f814:	and	x0, x0, #0xfffffffffffffff0
   1f818:	sub	sp, sp, x0
   1f81c:	add	x4, sp, #0x10
   1f820:	mov	x1, x15
   1f824:	mov	x2, x19
   1f828:	mov	x0, x4
   1f82c:	str	w6, [x29, #224]
   1f830:	str	w3, [x29, #280]
   1f834:	bl	cad0 <strncpy@plt>
   1f838:	strb	wzr, [x0, x19]
   1f83c:	mov	x1, x0
   1f840:	add	x2, x29, #0x150
   1f844:	add	x0, x29, #0x220
   1f848:	ldp	x4, x5, [x29, #432]
   1f84c:	stp	x4, x5, [x29, #336]
   1f850:	add	x26, x29, #0x1b0
   1f854:	ldp	x4, x5, [x29, #448]
   1f858:	stp	x4, x5, [x29, #352]
   1f85c:	bl	c050 <__gmp_vasprintf@plt>
   1f860:	ldr	w6, [x29, #224]
   1f864:	ldr	w3, [x29, #280]
   1f868:	tbnz	w0, #31, 20354 <mpfr_vasnprintf_aux@@Base+0x168c>
   1f86c:	sxtw	x2, w0
   1f870:	str	w6, [x29, #224]
   1f874:	ldr	x0, [x29, #272]
   1f878:	str	w3, [x29, #280]
   1f87c:	ldr	x1, [x29, #544]
   1f880:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   1f884:	ldr	x0, [x29, #544]
   1f888:	bl	c890 <mpfr_free_str@plt>
   1f88c:	ldr	x0, [x29, #504]
   1f890:	ldr	w6, [x29, #224]
   1f894:	ldr	w3, [x29, #280]
   1f898:	cbnz	x0, 20a2c <mpfr_vasnprintf_aux@@Base+0x1d64>
   1f89c:	cmp	w3, #0x7
   1f8a0:	b.eq	1f8c4 <mpfr_vasnprintf_aux@@Base+0xbfc>  // b.none
   1f8a4:	b.hi	1fe30 <mpfr_vasnprintf_aux@@Base+0x1168>  // b.pmore
   1f8a8:	cmp	w3, #0x4
   1f8ac:	b.eq	1f8c4 <mpfr_vasnprintf_aux@@Base+0xbfc>  // b.none
   1f8b0:	b.hi	1fe14 <mpfr_vasnprintf_aux@@Base+0x114c>  // b.pmore
   1f8b4:	cmp	w3, #0x2
   1f8b8:	b.eq	208fc <mpfr_vasnprintf_aux@@Base+0x1c34>  // b.none
   1f8bc:	cmp	w3, #0x3
   1f8c0:	b.ne	1fe00 <mpfr_vasnprintf_aux@@Base+0x1138>  // b.any
   1f8c4:	ldr	x0, [x29, #424]
   1f8c8:	str	x0, [x25]
   1f8cc:	ldr	x1, [x29, #264]
   1f8d0:	stp	x21, x1, [x22]
   1f8d4:	mov	x15, x24
   1f8d8:	ldr	x1, [x29, #248]
   1f8dc:	str	x1, [x22, #16]
   1f8e0:	ldr	w1, [x29, #260]
   1f8e4:	mov	w0, #0x0                   	// #0
   1f8e8:	str	w27, [x22, #24]
   1f8ec:	str	w1, [x22, #28]
   1f8f0:	ldp	x2, x3, [x22]
   1f8f4:	stp	x2, x3, [x26]
   1f8f8:	ldp	x2, x3, [x22, #16]
   1f8fc:	stp	x2, x3, [x26, #16]
   1f900:	ldrb	w19, [x20, #1]
   1f904:	mov	x20, x24
   1f908:	cbnz	w19, 1ee20 <mpfr_vasnprintf_aux@@Base+0x158>
   1f90c:	b	1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   1f910:	cmp	w19, #0x46
   1f914:	b.ne	21538 <mpfr_vasnprintf_aux@@Base+0x2870>  // b.any
   1f918:	ldrb	w19, [x2, #1]
   1f91c:	add	x20, x2, #0x1
   1f920:	mov	w7, #0x0                   	// #0
   1f924:	mov	w2, #0x0                   	// #0
   1f928:	mov	w1, #0x0                   	// #0
   1f92c:	mov	w13, #0x0                   	// #0
   1f930:	mov	w3, #0x9                   	// #9
   1f934:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   1f938:	cmp	w19, #0x50
   1f93c:	b.eq	20078 <mpfr_vasnprintf_aux@@Base+0x13b0>  // b.none
   1f940:	cmp	w19, #0x51
   1f944:	b.ne	21538 <mpfr_vasnprintf_aux@@Base+0x2870>  // b.any
   1f948:	ldrb	w19, [x2, #1]
   1f94c:	add	x20, x2, #0x1
   1f950:	mov	w7, #0x0                   	// #0
   1f954:	mov	w2, #0x0                   	// #0
   1f958:	mov	w1, #0x0                   	// #0
   1f95c:	mov	w13, #0x0                   	// #0
   1f960:	mov	w3, #0xa                   	// #10
   1f964:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   1f968:	cmp	w19, #0x5a
   1f96c:	b.ne	21538 <mpfr_vasnprintf_aux@@Base+0x2870>  // b.any
   1f970:	ldrb	w19, [x2, #1]
   1f974:	add	x20, x2, #0x1
   1f978:	mov	w7, #0x0                   	// #0
   1f97c:	mov	w2, #0x0                   	// #0
   1f980:	mov	w1, #0x0                   	// #0
   1f984:	mov	w13, #0x0                   	// #0
   1f988:	mov	w3, #0xd                   	// #13
   1f98c:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   1f990:	cmp	w19, #0x74
   1f994:	b.eq	1ffe8 <mpfr_vasnprintf_aux@@Base+0x1320>  // b.none
   1f998:	cmp	w19, #0x7a
   1f99c:	b.ne	21538 <mpfr_vasnprintf_aux@@Base+0x2870>  // b.any
   1f9a0:	ldrb	w19, [x2, #1]
   1f9a4:	add	x20, x2, #0x1
   1f9a8:	mov	w7, #0x0                   	// #0
   1f9ac:	mov	w2, #0x0                   	// #0
   1f9b0:	mov	w1, #0x0                   	// #0
   1f9b4:	mov	w13, #0x0                   	// #0
   1f9b8:	mov	w3, #0x6                   	// #6
   1f9bc:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   1f9c0:	add	x1, x1, #0x1
   1f9c4:	mov	w14, #0x1                   	// #1
   1f9c8:	mov	x2, x1
   1f9cc:	b	1efc0 <mpfr_vasnprintf_aux@@Base+0x2f8>
   1f9d0:	add	x1, x1, #0x1
   1f9d4:	mov	w11, #0x1                   	// #1
   1f9d8:	mov	x2, x1
   1f9dc:	b	1efc0 <mpfr_vasnprintf_aux@@Base+0x2f8>
   1f9e0:	add	x1, x1, #0x1
   1f9e4:	mov	w4, #0x1                   	// #1
   1f9e8:	mov	x2, x1
   1f9ec:	b	1efc0 <mpfr_vasnprintf_aux@@Base+0x2f8>
   1f9f0:	cmp	w19, #0x47
   1f9f4:	b.hi	1ee28 <mpfr_vasnprintf_aux@@Base+0x160>  // b.pmore
   1f9f8:	cmp	w19, #0x44
   1f9fc:	b.hi	1ee38 <mpfr_vasnprintf_aux@@Base+0x170>  // b.pmore
   1fa00:	cmp	w19, #0x41
   1fa04:	b.ne	1ee1c <mpfr_vasnprintf_aux@@Base+0x154>  // b.any
   1fa08:	cbz	w3, 1ee3c <mpfr_vasnprintf_aux@@Base+0x174>
   1fa0c:	mov	w6, #0x0                   	// #0
   1fa10:	cmp	w13, #0x0
   1fa14:	sub	w1, w3, #0x8
   1fa18:	ccmp	w1, #0x1, #0x0, eq  // eq = none
   1fa1c:	b.hi	1ee1c <mpfr_vasnprintf_aux@@Base+0x154>  // b.pmore
   1fa20:	cbz	w19, 1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   1fa24:	str	x20, [x29, #280]
   1fa28:	b	1f138 <mpfr_vasnprintf_aux@@Base+0x470>
   1fa2c:	cmp	w19, #0x70
   1fa30:	b.eq	1faa8 <mpfr_vasnprintf_aux@@Base+0xde0>  // b.none
   1fa34:	b.ls	1fa60 <mpfr_vasnprintf_aux@@Base+0xd98>  // b.plast
   1fa38:	cmp	w19, #0x73
   1fa3c:	b.eq	1faa0 <mpfr_vasnprintf_aux@@Base+0xdd8>  // b.none
   1fa40:	cmp	w19, #0x72
   1fa44:	b.ls	1ee20 <mpfr_vasnprintf_aux@@Base+0x158>  // b.plast
   1fa48:	cmp	w19, #0x75
   1fa4c:	b.eq	1f124 <mpfr_vasnprintf_aux@@Base+0x45c>  // b.none
   1fa50:	cmp	w19, #0x78
   1fa54:	b.eq	1f124 <mpfr_vasnprintf_aux@@Base+0x45c>  // b.none
   1fa58:	mov	x26, x20
   1fa5c:	b	1edf4 <mpfr_vasnprintf_aux@@Base+0x12c>
   1fa60:	cmp	w19, #0x6f
   1fa64:	b.eq	1f124 <mpfr_vasnprintf_aux@@Base+0x45c>  // b.none
   1fa68:	mov	x26, x20
   1fa6c:	mov	w19, #0x70                  	// #112
   1fa70:	b	1edf4 <mpfr_vasnprintf_aux@@Base+0x12c>
   1fa74:	cmp	w19, #0x63
   1fa78:	mov	w6, #0x0                   	// #0
   1fa7c:	b.ne	1fbd4 <mpfr_vasnprintf_aux@@Base+0xf0c>  // b.any
   1fa80:	str	x20, [x29, #280]
   1fa84:	cbnz	w7, 1f138 <mpfr_vasnprintf_aux@@Base+0x470>
   1fa88:	mov	x26, x20
   1fa8c:	b	1edf4 <mpfr_vasnprintf_aux@@Base+0x12c>
   1fa90:	mov	x21, x1
   1fa94:	mov	x2, x3
   1fa98:	ldrb	w19, [x2]
   1fa9c:	b	1f09c <mpfr_vasnprintf_aux@@Base+0x3d4>
   1faa0:	mov	w6, #0x0                   	// #0
   1faa4:	b	1fa80 <mpfr_vasnprintf_aux@@Base+0xdb8>
   1faa8:	mov	w6, #0x0                   	// #0
   1faac:	str	x20, [x29, #280]
   1fab0:	mov	w1, w2
   1fab4:	mov	w19, #0x70                  	// #112
   1fab8:	cbnz	w1, 1f138 <mpfr_vasnprintf_aux@@Base+0x470>
   1fabc:	ldrb	w19, [x20]
   1fac0:	mov	x26, x20
   1fac4:	b	1edf4 <mpfr_vasnprintf_aux@@Base+0x12c>
   1fac8:	add	w3, w27, #0x8
   1facc:	cmp	w3, #0x0
   1fad0:	b.le	1febc <mpfr_vasnprintf_aux@@Base+0x11f4>
   1fad4:	add	x1, x21, #0xb
   1fad8:	mov	w27, w3
   1fadc:	and	x1, x1, #0xfffffffffffffff8
   1fae0:	b	1f070 <mpfr_vasnprintf_aux@@Base+0x3a8>
   1fae4:	mov	w6, #0x0                   	// #0
   1fae8:	str	x20, [x29, #280]
   1faec:	mov	w19, #0x62                  	// #98
   1faf0:	cbnz	w1, 1f138 <mpfr_vasnprintf_aux@@Base+0x470>
   1faf4:	b	1fabc <mpfr_vasnprintf_aux@@Base+0xdf4>
   1faf8:	cmp	w3, #0xb
   1fafc:	b.eq	1f180 <mpfr_vasnprintf_aux@@Base+0x4b8>  // b.none
   1fb00:	b.ls	1fbc0 <mpfr_vasnprintf_aux@@Base+0xef8>  // b.plast
   1fb04:	cmp	w3, #0xc
   1fb08:	b.eq	209b8 <mpfr_vasnprintf_aux@@Base+0x1cf0>  // b.none
   1fb0c:	cmp	w3, #0xd
   1fb10:	b.eq	1f180 <mpfr_vasnprintf_aux@@Base+0x4b8>  // b.none
   1fb14:	cmp	w19, #0x67
   1fb18:	b.ls	209c8 <mpfr_vasnprintf_aux@@Base+0x1d00>  // b.plast
   1fb1c:	sub	w0, w19, #0x69
   1fb20:	and	w0, w0, #0xff
   1fb24:	cmp	w0, #0xf
   1fb28:	b.hi	1fb48 <mpfr_vasnprintf_aux@@Base+0xe80>  // b.pmore
   1fb2c:	mov	x1, #0x1                   	// #1
   1fb30:	mov	x2, #0x9041                	// #36929
   1fb34:	lsl	x0, x1, x0
   1fb38:	tst	x0, x2
   1fb3c:	b.ne	1fba0 <mpfr_vasnprintf_aux@@Base+0xed8>  // b.any
   1fb40:	tbnz	w0, #7, 20d8c <mpfr_vasnprintf_aux@@Base+0x20c4>
   1fb44:	tbnz	w0, #10, 20d8c <mpfr_vasnprintf_aux@@Base+0x20c4>
   1fb48:	ldr	x0, [x29, #280]
   1fb4c:	ldrb	w19, [x0, #1]
   1fb50:	mov	w0, #0x1                   	// #1
   1fb54:	cbnz	w19, 1ee20 <mpfr_vasnprintf_aux@@Base+0x158>
   1fb58:	b	1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   1fb5c:	cmp	w3, #0x6
   1fb60:	b.eq	1f180 <mpfr_vasnprintf_aux@@Base+0x4b8>  // b.none
   1fb64:	cmp	w3, #0x7
   1fb68:	b.ne	1fb14 <mpfr_vasnprintf_aux@@Base+0xe4c>  // b.any
   1fb6c:	tbz	w27, #31, 1f184 <mpfr_vasnprintf_aux@@Base+0x4bc>
   1fb70:	add	w27, w27, #0x8
   1fb74:	cmp	w27, #0x0
   1fb78:	b.gt	1f184 <mpfr_vasnprintf_aux@@Base+0x4bc>
   1fb7c:	ldr	x0, [x29, #280]
   1fb80:	ldrb	w19, [x0, #1]
   1fb84:	mov	w0, #0x1                   	// #1
   1fb88:	b	1fb54 <mpfr_vasnprintf_aux@@Base+0xe8c>
   1fb8c:	str	x20, [x29, #280]
   1fb90:	add	x20, x20, #0x1
   1fb94:	sub	w3, w3, #0x1
   1fb98:	cmp	w3, #0x1
   1fb9c:	b.hi	1fb14 <mpfr_vasnprintf_aux@@Base+0xe4c>  // b.pmore
   1fba0:	tbnz	w27, #31, 20a90 <mpfr_vasnprintf_aux@@Base+0x1dc8>
   1fba4:	ldr	x0, [x29, #280]
   1fba8:	add	x21, x21, #0xb
   1fbac:	and	x21, x21, #0xfffffffffffffff8
   1fbb0:	ldrb	w19, [x0, #1]
   1fbb4:	mov	w0, #0x1                   	// #1
   1fbb8:	cbnz	w19, 1ee20 <mpfr_vasnprintf_aux@@Base+0x158>
   1fbbc:	b	1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   1fbc0:	cmp	w3, #0x9
   1fbc4:	b.eq	1f180 <mpfr_vasnprintf_aux@@Base+0x4b8>  // b.none
   1fbc8:	cmp	w3, #0xa
   1fbcc:	b.eq	1f180 <mpfr_vasnprintf_aux@@Base+0x4b8>  // b.none
   1fbd0:	b	1fb14 <mpfr_vasnprintf_aux@@Base+0xe4c>
   1fbd4:	mov	x26, x20
   1fbd8:	mov	w19, #0x64                  	// #100
   1fbdc:	b	1edf4 <mpfr_vasnprintf_aux@@Base+0x12c>
   1fbe0:	tbnz	w27, #31, 202bc <mpfr_vasnprintf_aux@@Base+0x15f4>
   1fbe4:	add	x2, x21, #0xf
   1fbe8:	mov	x1, x21
   1fbec:	and	x21, x2, #0xfffffffffffffff8
   1fbf0:	ldr	x1, [x1]
   1fbf4:	str	x1, [x29, #224]
   1fbf8:	sub	x2, x26, x15
   1fbfc:	cbz	w0, 20098 <mpfr_vasnprintf_aux@@Base+0x13d0>
   1fc00:	str	xzr, [x29, #504]
   1fc04:	add	x1, x2, #0x1
   1fc08:	cmp	x1, #0x4, lsl #12
   1fc0c:	b.hi	2080c <mpfr_vasnprintf_aux@@Base+0x1b44>  // b.pmore
   1fc10:	add	x0, x2, #0x10
   1fc14:	and	x0, x0, #0xfffffffffffffff0
   1fc18:	sub	sp, sp, x0
   1fc1c:	add	x3, sp, #0x10
   1fc20:	mov	x1, x15
   1fc24:	mov	x0, x3
   1fc28:	str	w5, [x29, #120]
   1fc2c:	add	x26, x29, #0x1b0
   1fc30:	stp	w14, w4, [x29, #132]
   1fc34:	str	w12, [x29, #144]
   1fc38:	str	w11, [x29, #152]
   1fc3c:	str	w10, [x29, #160]
   1fc40:	str	x2, [x29, #208]
   1fc44:	bl	cad0 <strncpy@plt>
   1fc48:	ldr	x2, [x29, #208]
   1fc4c:	mov	x3, x0
   1fc50:	add	x13, x29, #0x220
   1fc54:	mov	x1, x0
   1fc58:	mov	x0, x13
   1fc5c:	str	x13, [x29, #208]
   1fc60:	strb	wzr, [x3, x2]
   1fc64:	ldp	x2, x3, [x29, #432]
   1fc68:	stp	x2, x3, [x29, #336]
   1fc6c:	ldp	x6, x7, [x29, #448]
   1fc70:	add	x2, x29, #0x150
   1fc74:	stp	x6, x7, [x29, #352]
   1fc78:	bl	c050 <__gmp_vasprintf@plt>
   1fc7c:	ldr	w5, [x29, #120]
   1fc80:	ldp	w14, w4, [x29, #132]
   1fc84:	ldr	w12, [x29, #144]
   1fc88:	ldr	w11, [x29, #152]
   1fc8c:	ldr	w10, [x29, #160]
   1fc90:	ldr	x13, [x29, #208]
   1fc94:	tbnz	w0, #31, 20354 <mpfr_vasnprintf_aux@@Base+0x168c>
   1fc98:	sxtw	x2, w0
   1fc9c:	str	x13, [x29, #120]
   1fca0:	ldr	x0, [x29, #272]
   1fca4:	stp	w5, w14, [x29, #132]
   1fca8:	ldr	x1, [x29, #544]
   1fcac:	str	w4, [x29, #144]
   1fcb0:	str	w12, [x29, #152]
   1fcb4:	str	w11, [x29, #160]
   1fcb8:	str	w10, [x29, #208]
   1fcbc:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   1fcc0:	ldr	x0, [x29, #544]
   1fcc4:	bl	c890 <mpfr_free_str@plt>
   1fcc8:	ldr	x0, [x29, #504]
   1fccc:	ldp	w5, w14, [x29, #132]
   1fcd0:	ldr	w4, [x29, #144]
   1fcd4:	ldr	w12, [x29, #152]
   1fcd8:	ldr	w11, [x29, #160]
   1fcdc:	ldr	w10, [x29, #208]
   1fce0:	ldr	x13, [x29, #120]
   1fce4:	cbnz	x0, 20d58 <mpfr_vasnprintf_aux@@Base+0x2090>
   1fce8:	ldrb	w0, [x29, #464]
   1fcec:	cmp	w5, #0x30
   1fcf0:	ldr	x1, [x29, #264]
   1fcf4:	stp	x21, x1, [x22]
   1fcf8:	bfxil	w0, w14, #0, #1
   1fcfc:	ldr	x1, [x29, #248]
   1fd00:	bfi	w0, w10, #1, #1
   1fd04:	adrp	x7, 5f000 <mpfr_free_pool@@Base+0x3558>
   1fd08:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   1fd0c:	bfi	w0, w4, #2, #1
   1fd10:	add	x7, x7, #0x450
   1fd14:	add	x2, x2, #0xa98
   1fd18:	adrp	x3, 60000 <mpfr_free_pool@@Base+0x4558>
   1fd1c:	bfi	w0, w11, #3, #1
   1fd20:	csel	x2, x2, x7, eq  // eq = none
   1fd24:	add	x3, x3, #0x818
   1fd28:	str	x1, [x22, #16]
   1fd2c:	bfi	w0, w12, #4, #1
   1fd30:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x4558>
   1fd34:	add	x4, x1, #0x820
   1fd38:	ldr	w1, [x29, #260]
   1fd3c:	tst	x0, #0x1
   1fd40:	adrp	x5, 60000 <mpfr_free_pool@@Base+0x4558>
   1fd44:	csel	x3, x3, x7, ne  // ne = any
   1fd48:	tst	x0, #0x8
   1fd4c:	csel	x4, x4, x7, ne  // ne = any
   1fd50:	add	x5, x5, #0x828
   1fd54:	tst	x0, #0x2
   1fd58:	str	w27, [x22, #24]
   1fd5c:	str	w1, [x22, #28]
   1fd60:	csel	x5, x5, x7, ne  // ne = any
   1fd64:	adrp	x6, 60000 <mpfr_free_pool@@Base+0x4558>
   1fd68:	tst	x0, #0x4
   1fd6c:	add	x6, x6, #0x830
   1fd70:	str	w19, [sp]
   1fd74:	csel	x6, x6, x7, ne  // ne = any
   1fd78:	adrp	x10, 60000 <mpfr_free_pool@@Base+0x4558>
   1fd7c:	tst	x0, #0x10
   1fd80:	add	x10, x10, #0x838
   1fd84:	csel	x7, x10, x7, ne  // ne = any
   1fd88:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x4558>
   1fd8c:	ldp	x10, x11, [x22]
   1fd90:	stp	x10, x11, [x26]
   1fd94:	add	x1, x1, #0x868
   1fd98:	ldp	x10, x11, [x22, #16]
   1fd9c:	stp	x10, x11, [x26, #16]
   1fda0:	str	x13, [x29, #208]
   1fda4:	strb	w0, [x29, #464]
   1fda8:	mov	x0, x13
   1fdac:	bl	bd10 <sprintf@plt>
   1fdb0:	ldr	x13, [x29, #208]
   1fdb4:	mov	w3, w24
   1fdb8:	ldr	x4, [x29, #224]
   1fdbc:	mov	x1, x13
   1fdc0:	mov	w2, w25
   1fdc4:	add	x0, x29, #0x1f8
   1fdc8:	bl	c0c0 <__gmp_asprintf@plt>
   1fdcc:	sxtw	x2, w0
   1fdd0:	ldr	x0, [x29, #272]
   1fdd4:	str	x20, [x29, #224]
   1fdd8:	ldr	x1, [x29, #504]
   1fddc:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   1fde0:	ldr	x0, [x29, #504]
   1fde4:	bl	c890 <mpfr_free_str@plt>
   1fde8:	ldr	x0, [x29, #280]
   1fdec:	ldr	x15, [x29, #224]
   1fdf0:	ldrb	w19, [x0, #1]
   1fdf4:	mov	w0, #0x0                   	// #0
   1fdf8:	cbnz	w19, 1ee20 <mpfr_vasnprintf_aux@@Base+0x158>
   1fdfc:	b	1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   1fe00:	cmp	w3, #0x1
   1fe04:	b.ne	1fe24 <mpfr_vasnprintf_aux@@Base+0x115c>  // b.any
   1fe08:	ldr	x0, [x29, #424]
   1fe0c:	strb	w0, [x25]
   1fe10:	b	1f8cc <mpfr_vasnprintf_aux@@Base+0xc04>
   1fe14:	cmp	w3, #0x5
   1fe18:	b.eq	1f8c4 <mpfr_vasnprintf_aux@@Base+0xbfc>  // b.none
   1fe1c:	cmp	w3, #0x6
   1fe20:	b.eq	1f8c4 <mpfr_vasnprintf_aux@@Base+0xbfc>  // b.none
   1fe24:	ldr	x0, [x29, #424]
   1fe28:	str	w0, [x25]
   1fe2c:	b	1f8cc <mpfr_vasnprintf_aux@@Base+0xc04>
   1fe30:	cmp	w3, #0xc
   1fe34:	b.eq	20908 <mpfr_vasnprintf_aux@@Base+0x1c40>  // b.none
   1fe38:	b.hi	1fe64 <mpfr_vasnprintf_aux@@Base+0x119c>  // b.pmore
   1fe3c:	cmp	w3, #0xa
   1fe40:	b.eq	20960 <mpfr_vasnprintf_aux@@Base+0x1c98>  // b.none
   1fe44:	cmp	w3, #0xb
   1fe48:	b.eq	1f8c4 <mpfr_vasnprintf_aux@@Base+0xbfc>  // b.none
   1fe4c:	cmp	w3, #0x9
   1fe50:	b.ne	1fe24 <mpfr_vasnprintf_aux@@Base+0x115c>  // b.any
   1fe54:	ldr	x1, [x29, #424]
   1fe58:	mov	x0, x25
   1fe5c:	bl	c180 <__gmpf_set_ui@plt>
   1fe60:	b	1f8cc <mpfr_vasnprintf_aux@@Base+0xc04>
   1fe64:	cmp	w3, #0xd
   1fe68:	b.eq	20950 <mpfr_vasnprintf_aux@@Base+0x1c88>  // b.none
   1fe6c:	cmp	w3, #0xf
   1fe70:	b.ne	1fe24 <mpfr_vasnprintf_aux@@Base+0x115c>  // b.any
   1fe74:	ldr	x1, [x29, #424]
   1fe78:	mov	w3, w6
   1fe7c:	mov	x0, x25
   1fe80:	mov	x2, #0x0                   	// #0
   1fe84:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   1fe88:	b	1f8cc <mpfr_vasnprintf_aux@@Base+0xc04>
   1fe8c:	cmp	x26, x15
   1fe90:	b.eq	200e8 <mpfr_vasnprintf_aux@@Base+0x1420>  // b.none
   1fe94:	ldr	x0, [x29, #272]
   1fe98:	mov	x2, x19
   1fe9c:	mov	x1, x15
   1fea0:	str	w6, [x29, #224]
   1fea4:	str	w3, [x29, #280]
   1fea8:	add	x26, x29, #0x1b0
   1feac:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   1feb0:	ldr	w6, [x29, #224]
   1feb4:	ldr	w3, [x29, #280]
   1feb8:	b	1f89c <mpfr_vasnprintf_aux@@Base+0xbd4>
   1febc:	ldr	x1, [x29, #264]
   1fec0:	add	x6, x1, w27, sxtw
   1fec4:	mov	x1, x21
   1fec8:	mov	w27, w3
   1fecc:	mov	x21, x6
   1fed0:	b	1f070 <mpfr_vasnprintf_aux@@Base+0x3a8>
   1fed4:	ldrb	w19, [x2, #1]
   1fed8:	add	x20, x2, #0x1
   1fedc:	mov	w7, #0x0                   	// #0
   1fee0:	mov	w2, #0x0                   	// #0
   1fee4:	mov	w1, #0x0                   	// #0
   1fee8:	mov	w13, #0x0                   	// #0
   1feec:	mov	w3, #0xc                   	// #12
   1fef0:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   1fef4:	add	w2, w27, #0x8
   1fef8:	cmp	w2, #0x0
   1fefc:	b.le	2018c <mpfr_vasnprintf_aux@@Base+0x14c4>
   1ff00:	add	x4, x21, #0xf
   1ff04:	mov	x1, x21
   1ff08:	mov	w27, w2
   1ff0c:	and	x21, x4, #0xfffffffffffffff8
   1ff10:	b	1f7f4 <mpfr_vasnprintf_aux@@Base+0xb2c>
   1ff14:	cmp	w19, #0x2a
   1ff18:	b.ne	1f9f0 <mpfr_vasnprintf_aux@@Base+0xd28>  // b.any
   1ff1c:	add	x20, x20, #0x1
   1ff20:	tbnz	w27, #31, 205c0 <mpfr_vasnprintf_aux@@Base+0x18f8>
   1ff24:	mov	x6, x21
   1ff28:	add	x7, x21, #0xb
   1ff2c:	and	x21, x7, #0xfffffffffffffff8
   1ff30:	ldr	w6, [x6]
   1ff34:	b	1f274 <mpfr_vasnprintf_aux@@Base+0x5ac>
   1ff38:	cmp	w19, #0x59
   1ff3c:	b.eq	20330 <mpfr_vasnprintf_aux@@Base+0x1668>  // b.none
   1ff40:	cmp	w19, #0x5a
   1ff44:	b.ne	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>  // b.any
   1ff48:	add	x20, x20, #0x1
   1ff4c:	mov	w6, w1
   1ff50:	b	1f274 <mpfr_vasnprintf_aux@@Base+0x5ac>
   1ff54:	cmp	w19, #0x47
   1ff58:	b.hi	1ffb8 <mpfr_vasnprintf_aux@@Base+0x12f0>  // b.pmore
   1ff5c:	cmp	w19, #0x44
   1ff60:	b.hi	1fa10 <mpfr_vasnprintf_aux@@Base+0xd48>  // b.pmore
   1ff64:	cmp	w19, #0x41
   1ff68:	b.eq	1f2b0 <mpfr_vasnprintf_aux@@Base+0x5e8>  // b.none
   1ff6c:	cbnz	w19, 1ee20 <mpfr_vasnprintf_aux@@Base+0x158>
   1ff70:	b	1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   1ff74:	cmp	w19, #0x70
   1ff78:	b.eq	1faac <mpfr_vasnprintf_aux@@Base+0xde4>  // b.none
   1ff7c:	b.ls	1ffd0 <mpfr_vasnprintf_aux@@Base+0x1308>  // b.plast
   1ff80:	cmp	w19, #0x73
   1ff84:	b.eq	1ee20 <mpfr_vasnprintf_aux@@Base+0x158>  // b.none
   1ff88:	cmp	w19, #0x72
   1ff8c:	b.ls	1ee20 <mpfr_vasnprintf_aux@@Base+0x158>  // b.plast
   1ff90:	cmp	w19, #0x75
   1ff94:	b.eq	1ffa0 <mpfr_vasnprintf_aux@@Base+0x12d8>  // b.none
   1ff98:	cmp	w19, #0x78
   1ff9c:	b.ne	1ee20 <mpfr_vasnprintf_aux@@Base+0x158>  // b.any
   1ffa0:	str	x20, [x29, #280]
   1ffa4:	sub	w1, w3, #0xa
   1ffa8:	cmp	w1, #0x4
   1ffac:	b.ls	1f138 <mpfr_vasnprintf_aux@@Base+0x470>  // b.plast
   1ffb0:	mov	x26, x20
   1ffb4:	b	1edf4 <mpfr_vasnprintf_aux@@Base+0x12c>
   1ffb8:	cmp	w19, #0x58
   1ffbc:	b.eq	1ffa0 <mpfr_vasnprintf_aux@@Base+0x12d8>  // b.none
   1ffc0:	cmp	w19, #0x61
   1ffc4:	b.eq	1f2b0 <mpfr_vasnprintf_aux@@Base+0x5e8>  // b.none
   1ffc8:	mov	x26, x20
   1ffcc:	b	1edf4 <mpfr_vasnprintf_aux@@Base+0x12c>
   1ffd0:	cmp	w19, #0x6e
   1ffd4:	b.eq	1f7e0 <mpfr_vasnprintf_aux@@Base+0xb18>  // b.none
   1ffd8:	cmp	w19, #0x6f
   1ffdc:	b.eq	1ffa0 <mpfr_vasnprintf_aux@@Base+0x12d8>  // b.none
   1ffe0:	mov	x26, x20
   1ffe4:	b	1edf4 <mpfr_vasnprintf_aux@@Base+0x12c>
   1ffe8:	ldrb	w19, [x2, #1]
   1ffec:	add	x20, x2, #0x1
   1fff0:	mov	w7, #0x0                   	// #0
   1fff4:	mov	w2, #0x0                   	// #0
   1fff8:	mov	w1, #0x0                   	// #0
   1fffc:	mov	w13, #0x0                   	// #0
   20000:	mov	w3, #0x7                   	// #7
   20004:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   20008:	ldrb	w19, [x2, #1]
   2000c:	add	x20, x2, #0x1
   20010:	mov	w7, #0x0                   	// #0
   20014:	mov	w2, #0x0                   	// #0
   20018:	mov	w1, #0x0                   	// #0
   2001c:	mov	w13, #0x0                   	// #0
   20020:	mov	w3, #0x8                   	// #8
   20024:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   20028:	ldrb	w19, [x2, #1]
   2002c:	cmp	w19, #0x6c
   20030:	b.eq	20270 <mpfr_vasnprintf_aux@@Base+0x15a8>  // b.none
   20034:	add	x20, x2, #0x1
   20038:	mov	w7, #0x1                   	// #1
   2003c:	mov	w2, #0x0                   	// #0
   20040:	mov	w1, #0x0                   	// #0
   20044:	mov	w13, #0x0                   	// #0
   20048:	mov	w3, #0x3                   	// #3
   2004c:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   20050:	ldrb	w19, [x2, #1]
   20054:	cmp	w19, #0x68
   20058:	b.eq	20250 <mpfr_vasnprintf_aux@@Base+0x1588>  // b.none
   2005c:	add	x20, x2, #0x1
   20060:	mov	w7, #0x0                   	// #0
   20064:	mov	w2, #0x0                   	// #0
   20068:	mov	w1, #0x0                   	// #0
   2006c:	mov	w13, #0x0                   	// #0
   20070:	mov	w3, #0x2                   	// #2
   20074:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   20078:	ldrb	w19, [x2, #1]
   2007c:	add	x20, x2, #0x1
   20080:	mov	w7, #0x0                   	// #0
   20084:	mov	w2, #0x0                   	// #0
   20088:	mov	w1, #0x0                   	// #0
   2008c:	mov	w13, #0x0                   	// #0
   20090:	mov	w3, #0xe                   	// #14
   20094:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   20098:	cmp	x26, x15
   2009c:	b.eq	2019c <mpfr_vasnprintf_aux@@Base+0x14d4>  // b.none
   200a0:	ldr	x0, [x29, #272]
   200a4:	add	x13, x29, #0x220
   200a8:	mov	x1, x15
   200ac:	str	w5, [x29, #120]
   200b0:	stp	w14, w4, [x29, #132]
   200b4:	add	x26, x29, #0x1b0
   200b8:	str	w12, [x29, #144]
   200bc:	str	w11, [x29, #152]
   200c0:	str	w10, [x29, #160]
   200c4:	str	x13, [x29, #208]
   200c8:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   200cc:	ldr	w5, [x29, #120]
   200d0:	ldp	w14, w4, [x29, #132]
   200d4:	ldr	w12, [x29, #144]
   200d8:	ldr	w11, [x29, #152]
   200dc:	ldr	w10, [x29, #160]
   200e0:	ldr	x13, [x29, #208]
   200e4:	b	1fce8 <mpfr_vasnprintf_aux@@Base+0x1020>
   200e8:	add	x26, x29, #0x1b0
   200ec:	b	1f89c <mpfr_vasnprintf_aux@@Base+0xbd4>
   200f0:	add	w2, w27, #0x8
   200f4:	cmp	w2, #0x0
   200f8:	b.le	205a0 <mpfr_vasnprintf_aux@@Base+0x18d8>
   200fc:	mov	x1, x21
   20100:	add	x3, x21, #0xf
   20104:	mov	w27, w2
   20108:	and	x21, x3, #0xfffffffffffffff8
   2010c:	sub	x2, x26, x15
   20110:	ldr	x7, [x1]
   20114:	cbnz	w0, 1f304 <mpfr_vasnprintf_aux@@Base+0x63c>
   20118:	cmp	x26, x15
   2011c:	b.eq	20598 <mpfr_vasnprintf_aux@@Base+0x18d0>  // b.none
   20120:	ldr	x0, [x29, #272]
   20124:	mov	x1, x15
   20128:	str	w5, [x29, #112]
   2012c:	add	x26, x29, #0x1b0
   20130:	str	w14, [x29, #120]
   20134:	stp	w6, w4, [x29, #132]
   20138:	str	x7, [x29, #144]
   2013c:	str	w12, [x29, #152]
   20140:	str	w11, [x29, #160]
   20144:	str	w10, [x29, #208]
   20148:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   2014c:	ldr	w5, [x29, #112]
   20150:	ldr	w14, [x29, #120]
   20154:	ldp	w6, w4, [x29, #132]
   20158:	ldr	w12, [x29, #152]
   2015c:	ldr	w11, [x29, #160]
   20160:	ldr	w10, [x29, #208]
   20164:	ldr	x7, [x29, #144]
   20168:	b	1f3f8 <mpfr_vasnprintf_aux@@Base+0x730>
   2016c:	add	w3, w27, #0x8
   20170:	cmp	w3, #0x0
   20174:	b.le	205b0 <mpfr_vasnprintf_aux@@Base+0x18e8>
   20178:	add	x6, x21, #0xb
   2017c:	mov	x1, x21
   20180:	mov	w27, w3
   20184:	and	x21, x6, #0xfffffffffffffff8
   20188:	b	1f218 <mpfr_vasnprintf_aux@@Base+0x550>
   2018c:	ldr	x1, [x29, #264]
   20190:	add	x1, x1, w27, sxtw
   20194:	mov	w27, w2
   20198:	b	1f7f4 <mpfr_vasnprintf_aux@@Base+0xb2c>
   2019c:	add	x26, x29, #0x1b0
   201a0:	add	x13, x29, #0x220
   201a4:	b	1fce8 <mpfr_vasnprintf_aux@@Base+0x1020>
   201a8:	mov	x1, x15
   201ac:	mov	x2, x24
   201b0:	add	x0, x29, #0x190
   201b4:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   201b8:	ldr	x1, [x29, #424]
   201bc:	mov	x0, #0x7fffffff            	// #2147483647
   201c0:	cmp	x1, x0
   201c4:	ccmn	x1, #0x1, #0x4, le
   201c8:	b.ne	1eee0 <mpfr_vasnprintf_aux@@Base+0x218>  // b.any
   201cc:	bl	cc00 <__errno_location@plt>
   201d0:	ldr	w1, [x29, #256]
   201d4:	orr	w1, w1, #0x10
   201d8:	str	w1, [x29, #256]
   201dc:	mov	w1, #0x4b                  	// #75
   201e0:	str	w1, [x0]
   201e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   201e8:	ldr	x1, [x0, #2576]
   201ec:	add	x0, x0, #0xa10
   201f0:	blr	x1
   201f4:	ldr	w2, [x29, #256]
   201f8:	ldr	x1, [x29, #184]
   201fc:	str	w2, [x1, x0]
   20200:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   20204:	ldr	x2, [x0, #2512]
   20208:	add	x0, x0, #0x9d0
   2020c:	blr	x2
   20210:	ldr	x2, [x29, #200]
   20214:	str	x2, [x1, x0]
   20218:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2021c:	ldr	x2, [x0, #2544]
   20220:	add	x0, x0, #0x9f0
   20224:	blr	x2
   20228:	ldr	x2, [x29, #192]
   2022c:	str	x2, [x1, x0]
   20230:	ldr	x0, [x29, #240]
   20234:	cbz	x0, 20320 <mpfr_vasnprintf_aux@@Base+0x1658>
   20238:	str	xzr, [x0]
   2023c:	ldr	x0, [x29, #400]
   20240:	mov	w20, #0xffffffff            	// #-1
   20244:	ldr	x1, [x29, #416]
   20248:	bl	cc20 <mpfr_free_func@plt>
   2024c:	b	1ef50 <mpfr_vasnprintf_aux@@Base+0x288>
   20250:	ldrb	w19, [x2, #2]
   20254:	add	x20, x2, #0x2
   20258:	mov	w7, #0x0                   	// #0
   2025c:	mov	w2, #0x0                   	// #0
   20260:	mov	w1, #0x0                   	// #0
   20264:	mov	w13, #0x0                   	// #0
   20268:	mov	w3, #0x1                   	// #1
   2026c:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   20270:	ldrb	w19, [x2, #2]
   20274:	add	x20, x2, #0x2
   20278:	mov	w7, #0x0                   	// #0
   2027c:	mov	w2, #0x0                   	// #0
   20280:	mov	w1, #0x0                   	// #0
   20284:	mov	w13, #0x0                   	// #0
   20288:	mov	w3, #0x4                   	// #4
   2028c:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   20290:	mov	w5, #0x20                  	// #32
   20294:	mov	w12, #0x0                   	// #0
   20298:	mov	w11, #0x0                   	// #0
   2029c:	mov	w4, #0x0                   	// #0
   202a0:	mov	w10, #0x0                   	// #0
   202a4:	mov	w14, #0x0                   	// #0
   202a8:	mov	w19, #0x0                   	// #0
   202ac:	mov	w25, #0x0                   	// #0
   202b0:	b	1f0a4 <mpfr_vasnprintf_aux@@Base+0x3dc>
   202b4:	mov	x24, x26
   202b8:	b	1ee44 <mpfr_vasnprintf_aux@@Base+0x17c>
   202bc:	add	w2, w27, #0x8
   202c0:	cmp	w2, #0x0
   202c4:	b.le	20870 <mpfr_vasnprintf_aux@@Base+0x1ba8>
   202c8:	add	x3, x21, #0xf
   202cc:	mov	x1, x21
   202d0:	mov	w27, w2
   202d4:	and	x21, x3, #0xfffffffffffffff8
   202d8:	b	1fbf0 <mpfr_vasnprintf_aux@@Base+0xf28>
   202dc:	mov	x2, x20
   202e0:	mov	w24, #0xffffffff            	// #-1
   202e4:	b	1f0a8 <mpfr_vasnprintf_aux@@Base+0x3e0>
   202e8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   202ec:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   202f0:	add	x2, x2, #0x850
   202f4:	add	x0, x0, #0x780
   202f8:	mov	w1, #0x815                 	// #2069
   202fc:	bl	cb40 <mpfr_assert_fail@plt>
   20300:	mov	x0, #0x1000                	// #4096
   20304:	bl	ccf0 <mpfr_allocate_func@plt>
   20308:	str	x0, [x29, #400]
   2030c:	mov	x1, #0x1000                	// #4096
   20310:	strb	wzr, [x0]
   20314:	ldr	x0, [x29, #400]
   20318:	str	x0, [x29, #408]
   2031c:	b	1ed94 <mpfr_vasnprintf_aux@@Base+0xcc>
   20320:	ldr	x0, [x29, #176]
   20324:	mov	w20, #0xffffffff            	// #-1
   20328:	cbz	x0, 1ef50 <mpfr_vasnprintf_aux@@Base+0x288>
   2032c:	b	2023c <mpfr_vasnprintf_aux@@Base+0x1574>
   20330:	add	x20, x20, #0x1
   20334:	mov	w6, #0x4                   	// #4
   20338:	b	1f274 <mpfr_vasnprintf_aux@@Base+0x5ac>
   2033c:	add	x20, x20, #0x1
   20340:	mov	w6, #0x3                   	// #3
   20344:	b	1f274 <mpfr_vasnprintf_aux@@Base+0x5ac>
   20348:	add	x20, x20, #0x1
   2034c:	mov	w6, #0x2                   	// #2
   20350:	b	1f274 <mpfr_vasnprintf_aux@@Base+0x5ac>
   20354:	ldr	x0, [x29, #504]
   20358:	cbnz	x0, 2147c <mpfr_vasnprintf_aux@@Base+0x27b4>
   2035c:	ldr	x0, [x29, #424]
   20360:	cmn	x0, #0x1
   20364:	b.ne	201e4 <mpfr_vasnprintf_aux@@Base+0x151c>  // b.any
   20368:	b	201cc <mpfr_vasnprintf_aux@@Base+0x1504>
   2036c:	ldr	w1, [x29, #224]
   20370:	cmp	w1, #0x46
   20374:	b.ne	205e4 <mpfr_vasnprintf_aux@@Base+0x191c>  // b.any
   20378:	mov	w0, #0x6                   	// #6
   2037c:	cmp	w24, #0x0
   20380:	csel	w24, w24, w0, ge  // ge = tcont
   20384:	add	x0, x29, #0x2c0
   20388:	mov	x1, x7
   2038c:	ldp	x4, x5, [x0, #-184]
   20390:	str	w24, [x29, #512]
   20394:	ldp	x2, x3, [x0, #-200]
   20398:	stp	x2, x3, [x29, #288]
   2039c:	ldr	x0, [x29, #536]
   203a0:	mov	x3, #0x0                   	// #0
   203a4:	add	x2, x29, #0x120
   203a8:	stp	x4, x5, [x29, #304]
   203ac:	str	x0, [x29, #320]
   203b0:	add	x0, x29, #0x220
   203b4:	bl	1e560 <mpfr_asprintf@@Base+0x6f0>
   203b8:	cmn	w0, #0x1
   203bc:	b.eq	1f74c <mpfr_vasnprintf_aux@@Base+0xa84>  // b.none
   203c0:	ldrb	w1, [x29, #560]
   203c4:	ldr	x0, [x29, #576]
   203c8:	cmp	w1, #0x0
   203cc:	cset	w2, ne  // ne = any
   203d0:	tbnz	x0, #63, 1f74c <mpfr_vasnprintf_aux@@Base+0xa84>
   203d4:	ldr	x4, [x29, #600]
   203d8:	tbnz	x4, #63, 1f74c <mpfr_vasnprintf_aux@@Base+0xa84>
   203dc:	ldrb	w5, [x29, #584]
   203e0:	add	w0, w4, w0
   203e4:	ldr	w3, [x29, #608]
   203e8:	add	w2, w3, w2
   203ec:	add	w2, w0, w2
   203f0:	cbz	w5, 20410 <mpfr_vasnprintf_aux@@Base+0x1748>
   203f4:	sub	x0, x4, #0x1
   203f8:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   203fc:	add	x0, x0, w3, sxtw
   20400:	movk	x4, #0xaaab
   20404:	umulh	x0, x0, x4
   20408:	lsr	x0, x0, #1
   2040c:	add	w2, w2, w0
   20410:	ldrb	w0, [x29, #612]
   20414:	ldr	x3, [x29, #632]
   20418:	cmp	w0, #0x0
   2041c:	cinc	w2, w2, ne  // ne = any
   20420:	ldr	w0, [x29, #616]
   20424:	tbnz	x3, #63, 1f74c <mpfr_vasnprintf_aux@@Base+0xa84>
   20428:	ldr	x4, [x29, #656]
   2042c:	add	w3, w0, w3
   20430:	ldr	w0, [x29, #640]
   20434:	tbnz	x4, #63, 1f74c <mpfr_vasnprintf_aux@@Base+0xa84>
   20438:	add	w0, w0, w4
   2043c:	add	w0, w0, w3
   20440:	add	w0, w0, w2
   20444:	cmp	w0, w25
   20448:	b.cs	20458 <mpfr_vasnprintf_aux@@Base+0x1790>  // b.hs, b.nlast
   2044c:	sub	w2, w25, w0
   20450:	mov	w0, w25
   20454:	str	x2, [x29, #552]
   20458:	ldr	x3, [x29, #232]
   2045c:	ldr	x2, [x29, #424]
   20460:	cbz	x3, 20854 <mpfr_vasnprintf_aux@@Base+0x1b8c>
   20464:	ldr	w0, [x29, #544]
   20468:	cbnz	w0, 20474 <mpfr_vasnprintf_aux@@Base+0x17ac>
   2046c:	ldr	x2, [x29, #552]
   20470:	cbnz	x2, 207e8 <mpfr_vasnprintf_aux@@Base+0x1b20>
   20474:	cbnz	w1, 207fc <mpfr_vasnprintf_aux@@Base+0x1b34>
   20478:	ldr	x1, [x29, #568]
   2047c:	cbz	x1, 2048c <mpfr_vasnprintf_aux@@Base+0x17c4>
   20480:	ldr	x0, [x29, #272]
   20484:	ldr	x2, [x29, #576]
   20488:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   2048c:	ldr	w0, [x29, #544]
   20490:	cmp	w0, #0x1
   20494:	b.eq	20880 <mpfr_vasnprintf_aux@@Base+0x1bb8>  // b.none
   20498:	ldr	x26, [x29, #592]
   2049c:	cbz	x26, 21244 <mpfr_vasnprintf_aux@@Base+0x257c>
   204a0:	ldrb	w0, [x29, #584]
   204a4:	str	w0, [x29, #224]
   204a8:	ldr	x24, [x29, #600]
   204ac:	cbnz	w0, 210e4 <mpfr_vasnprintf_aux@@Base+0x241c>
   204b0:	ldr	x0, [x29, #272]
   204b4:	mov	x2, x24
   204b8:	mov	x1, x26
   204bc:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   204c0:	ldr	w2, [x29, #608]
   204c4:	cbnz	w2, 208e8 <mpfr_vasnprintf_aux@@Base+0x1c20>
   204c8:	ldrb	w1, [x29, #612]
   204cc:	cbnz	w1, 208d8 <mpfr_vasnprintf_aux@@Base+0x1c10>
   204d0:	ldr	w2, [x29, #616]
   204d4:	cbnz	w2, 208c4 <mpfr_vasnprintf_aux@@Base+0x1bfc>
   204d8:	ldr	x1, [x29, #624]
   204dc:	cbz	x1, 204ec <mpfr_vasnprintf_aux@@Base+0x1824>
   204e0:	ldr	x0, [x29, #272]
   204e4:	ldr	x2, [x29, #632]
   204e8:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   204ec:	ldr	w2, [x29, #640]
   204f0:	cbnz	w2, 208b0 <mpfr_vasnprintf_aux@@Base+0x1be8>
   204f4:	ldr	x1, [x29, #648]
   204f8:	cbz	x1, 20508 <mpfr_vasnprintf_aux@@Base+0x1840>
   204fc:	ldr	x0, [x29, #272]
   20500:	ldr	x2, [x29, #656]
   20504:	bl	1e068 <mpfr_asprintf@@Base+0x1f8>
   20508:	ldr	w0, [x29, #544]
   2050c:	cmp	w0, #0x2
   20510:	b.eq	20898 <mpfr_vasnprintf_aux@@Base+0x1bd0>  // b.none
   20514:	ldr	x19, [x29, #664]
   20518:	cbnz	x19, 20524 <mpfr_vasnprintf_aux@@Base+0x185c>
   2051c:	b	1f784 <mpfr_vasnprintf_aux@@Base+0xabc>
   20520:	mov	x19, x24
   20524:	ldr	x0, [x19]
   20528:	cbz	x0, 20530 <mpfr_vasnprintf_aux@@Base+0x1868>
   2052c:	bl	c890 <mpfr_free_str@plt>
   20530:	ldr	x24, [x19, #8]
   20534:	mov	x0, x19
   20538:	mov	x1, #0x10                  	// #16
   2053c:	bl	cc20 <mpfr_free_func@plt>
   20540:	cbnz	x24, 20520 <mpfr_vasnprintf_aux@@Base+0x1858>
   20544:	ldr	x0, [x29, #280]
   20548:	mov	x15, x20
   2054c:	ldrb	w19, [x0, #1]
   20550:	mov	w0, #0x0                   	// #0
   20554:	b	1f794 <mpfr_vasnprintf_aux@@Base+0xacc>
   20558:	ldr	x0, [x29, #176]
   2055c:	cbz	x0, 1ef04 <mpfr_vasnprintf_aux@@Base+0x23c>
   20560:	ldr	x0, [x29, #216]
   20564:	sxtw	x19, w1
   20568:	cmp	x0, w1, sxtw
   2056c:	ldr	x1, [x29, #400]
   20570:	b.ls	20db8 <mpfr_vasnprintf_aux@@Base+0x20f0>  // b.plast
   20574:	ldr	x21, [x29, #168]
   20578:	mov	x2, x19
   2057c:	mov	x0, x21
   20580:	bl	cad0 <strncpy@plt>
   20584:	strb	wzr, [x21, x19]
   20588:	ldr	x0, [x29, #400]
   2058c:	ldr	x1, [x29, #416]
   20590:	bl	cc20 <mpfr_free_func@plt>
   20594:	b	1ef04 <mpfr_vasnprintf_aux@@Base+0x23c>
   20598:	add	x26, x29, #0x1b0
   2059c:	b	1f3f8 <mpfr_vasnprintf_aux@@Base+0x730>
   205a0:	ldr	x1, [x29, #264]
   205a4:	add	x1, x1, w27, sxtw
   205a8:	mov	w27, w2
   205ac:	b	1f2f8 <mpfr_vasnprintf_aux@@Base+0x630>
   205b0:	ldr	x1, [x29, #264]
   205b4:	add	x1, x1, w27, sxtw
   205b8:	mov	w27, w3
   205bc:	b	1f218 <mpfr_vasnprintf_aux@@Base+0x550>
   205c0:	add	w7, w27, #0x8
   205c4:	cmp	w7, #0x0
   205c8:	b.le	20cc8 <mpfr_vasnprintf_aux@@Base+0x2000>
   205cc:	mov	x6, x21
   205d0:	add	x16, x21, #0xb
   205d4:	mov	w27, w7
   205d8:	and	x21, x16, #0xfffffffffffffff8
   205dc:	ldr	w6, [x6]
   205e0:	b	1f274 <mpfr_vasnprintf_aux@@Base+0x5ac>
   205e4:	ldr	w1, [x29, #224]
   205e8:	cmp	w1, #0x45
   205ec:	b.eq	21264 <mpfr_vasnprintf_aux@@Base+0x259c>  // b.none
   205f0:	cmp	w24, #0x0
   205f4:	b.lt	20dc0 <mpfr_vasnprintf_aux@@Base+0x20f8>  // b.tstop
   205f8:	sxtw	x19, w24
   205fc:	b.ne	20dc8 <mpfr_vasnprintf_aux@@Base+0x2100>  // b.any
   20600:	mov	x19, #0x1                   	// #1
   20604:	mov	w24, w19
   20608:	b	20dc8 <mpfr_vasnprintf_aux@@Base+0x2100>
   2060c:	mov	w0, #0x2d                  	// #45
   20610:	strb	w0, [x29, #560]
   20614:	ldr	w0, [x29, #224]
   20618:	cmp	w0, #0x41
   2061c:	b.ne	1f588 <mpfr_vasnprintf_aux@@Base+0x8c0>  // b.any
   20620:	mov	x1, #0x2                   	// #2
   20624:	mov	x0, #0x3                   	// #3
   20628:	str	w6, [x29, #152]
   2062c:	str	x7, [x29, #224]
   20630:	str	x1, [x29, #576]
   20634:	bl	ccf0 <mpfr_allocate_func@plt>
   20638:	mov	x26, x0
   2063c:	cmp	w19, #0x41
   20640:	mov	w1, #0x30                  	// #48
   20644:	mov	w0, #0x58                  	// #88
   20648:	mov	w2, #0x78                  	// #120
   2064c:	csel	w0, w0, w2, eq  // eq = none
   20650:	strb	w1, [x26]
   20654:	strb	w0, [x26, #1]
   20658:	strb	wzr, [x26, #2]
   2065c:	ldr	w6, [x29, #152]
   20660:	ldr	x7, [x29, #224]
   20664:	ldr	x0, [x29, #664]
   20668:	mov	x1, x0
   2066c:	ldr	x0, [x0, #8]
   20670:	cbnz	x0, 20668 <mpfr_vasnprintf_aux@@Base+0x19a0>
   20674:	mov	x0, #0x10                  	// #16
   20678:	str	x7, [x29, #144]
   2067c:	str	w6, [x29, #152]
   20680:	str	x1, [x29, #224]
   20684:	bl	ccf0 <mpfr_allocate_func@plt>
   20688:	ldr	x1, [x29, #224]
   2068c:	cmp	w19, #0x62
   20690:	ldr	w6, [x29, #152]
   20694:	ldr	x7, [x29, #144]
   20698:	str	x0, [x1, #8]
   2069c:	stp	x26, xzr, [x0]
   206a0:	mov	x1, #0x1                   	// #1
   206a4:	str	x26, [x29, #568]
   206a8:	str	x1, [x29, #600]
   206ac:	b.eq	1f590 <mpfr_vasnprintf_aux@@Base+0x8c8>  // b.none
   206b0:	cbnz	w24, 209fc <mpfr_vasnprintf_aux@@Base+0x1d34>
   206b4:	cmp	w6, #0x1
   206b8:	b.eq	214f0 <mpfr_vasnprintf_aux@@Base+0x2828>  // b.none
   206bc:	mov	w4, #0x10                  	// #16
   206c0:	mov	x1, #0x800000000000000     	// #576460752303423488
   206c4:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
   206c8:	mov	x3, #0x4                   	// #4
   206cc:	cmp	w6, #0x3
   206d0:	b.eq	210a0 <mpfr_vasnprintf_aux@@Base+0x23d8>  // b.none
   206d4:	cmp	w6, #0x2
   206d8:	b.eq	20f28 <mpfr_vasnprintf_aux@@Base+0x2260>  // b.none
   206dc:	ldr	x0, [x7]
   206e0:	cmp	x0, x3
   206e4:	b.le	20704 <mpfr_vasnprintf_aux@@Base+0x1a3c>
   206e8:	sub	x0, x0, #0x1
   206ec:	ldr	x3, [x7, #24]
   206f0:	asr	x0, x0, #6
   206f4:	ldr	x0, [x3, x0, lsl #3]
   206f8:	orr	x3, x0, x2
   206fc:	cmn	x3, #0x1
   20700:	b.eq	20ebc <mpfr_vasnprintf_aux@@Base+0x21f4>  // b.none
   20704:	cmp	w4, #0x2
   20708:	b.eq	20f58 <mpfr_vasnprintf_aux@@Base+0x2290>  // b.none
   2070c:	ldr	x0, [x7]
   20710:	cmp	w6, #0x4
   20714:	ldr	x1, [x7, #24]
   20718:	sub	x0, x0, #0x1
   2071c:	asr	x0, x0, #6
   20720:	ldr	x2, [x1, x0, lsl #3]
   20724:	lsr	x0, x2, #60
   20728:	mov	w1, w0
   2072c:	b.eq	20748 <mpfr_vasnprintf_aux@@Base+0x1a80>  // b.none
   20730:	cmp	w6, #0x2
   20734:	b.eq	20f48 <mpfr_vasnprintf_aux@@Base+0x2280>  // b.none
   20738:	cmp	w6, #0x3
   2073c:	b.eq	212d4 <mpfr_vasnprintf_aux@@Base+0x260c>  // b.none
   20740:	cbnz	w6, 2074c <mpfr_vasnprintf_aux@@Base+0x1a84>
   20744:	tbz	x2, #59, 2074c <mpfr_vasnprintf_aux@@Base+0x1a84>
   20748:	add	w1, w0, #0x1
   2074c:	mov	x0, #0x2                   	// #2
   20750:	str	w1, [x29, #152]
   20754:	str	x7, [x29, #224]
   20758:	bl	ccf0 <mpfr_allocate_func@plt>
   2075c:	ldr	w1, [x29, #152]
   20760:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   20764:	add	x2, x2, #0x930
   20768:	mov	x26, x0
   2076c:	strb	wzr, [x0, #1]
   20770:	ldr	x7, [x29, #224]
   20774:	ldrb	w0, [x2, w1, sxtw]
   20778:	strb	w0, [x26]
   2077c:	ldr	x0, [x29, #664]
   20780:	mov	x1, x0
   20784:	ldr	x0, [x0, #8]
   20788:	cbnz	x0, 20780 <mpfr_vasnprintf_aux@@Base+0x1ab8>
   2078c:	mov	x0, #0x10                  	// #16
   20790:	str	x7, [x29, #152]
   20794:	str	x1, [x29, #224]
   20798:	bl	ccf0 <mpfr_allocate_func@plt>
   2079c:	ldr	x7, [x29, #152]
   207a0:	ldr	x1, [x29, #224]
   207a4:	str	x0, [x1, #8]
   207a8:	ldr	x1, [x7, #16]
   207ac:	stp	x26, xzr, [x0]
   207b0:	sub	x0, x1, #0x4
   207b4:	str	x0, [x29, #376]
   207b8:	str	x26, [x29, #592]
   207bc:	cmp	w19, #0x41
   207c0:	b.eq	20bf4 <mpfr_vasnprintf_aux@@Base+0x1f2c>  // b.none
   207c4:	ldr	w0, [x29, #160]
   207c8:	cmp	w24, #0x0
   207cc:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   207d0:	b.ne	1f634 <mpfr_vasnprintf_aux@@Base+0x96c>  // b.any
   207d4:	ldr	x0, [x29, #632]
   207d8:	cbnz	x0, 1f674 <mpfr_vasnprintf_aux@@Base+0x9ac>
   207dc:	ldr	x0, [x29, #208]
   207e0:	tbnz	w0, #0, 1f674 <mpfr_vasnprintf_aux@@Base+0x9ac>
   207e4:	b	1f68c <mpfr_vasnprintf_aux@@Base+0x9c4>
   207e8:	ldr	x0, [x29, #272]
   207ec:	mov	w1, #0x20                  	// #32
   207f0:	bl	1ebd0 <mpfr_asprintf@@Base+0xd60>
   207f4:	ldrb	w1, [x29, #560]
   207f8:	cbz	w1, 20478 <mpfr_vasnprintf_aux@@Base+0x17b0>
   207fc:	ldr	x0, [x29, #272]
   20800:	mov	x2, #0x1                   	// #1
   20804:	bl	1ebd0 <mpfr_asprintf@@Base+0xd60>
   20808:	b	20478 <mpfr_vasnprintf_aux@@Base+0x17b0>
   2080c:	add	x0, x29, #0x1f8
   20810:	str	x15, [x29, #112]
   20814:	str	w5, [x29, #120]
   20818:	stp	w14, w4, [x29, #132]
   2081c:	str	x2, [x29, #144]
   20820:	str	w12, [x29, #152]
   20824:	str	w11, [x29, #160]
   20828:	str	w10, [x29, #208]
   2082c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   20830:	ldr	w5, [x29, #120]
   20834:	mov	x3, x0
   20838:	ldp	w14, w4, [x29, #132]
   2083c:	ldr	w12, [x29, #152]
   20840:	ldr	w11, [x29, #160]
   20844:	ldr	w10, [x29, #208]
   20848:	ldr	x15, [x29, #112]
   2084c:	ldr	x2, [x29, #144]
   20850:	b	1fc20 <mpfr_vasnprintf_aux@@Base+0xf58>
   20854:	cmn	x2, #0x1
   20858:	b.eq	20514 <mpfr_vasnprintf_aux@@Base+0x184c>  // b.none
   2085c:	adds	x0, x0, x2
   20860:	ccmp	x0, #0x0, #0x1, cc  // cc = lo, ul, last
   20864:	csinv	x0, x0, xzr, ge  // ge = tcont
   20868:	str	x0, [x29, #424]
   2086c:	b	20514 <mpfr_vasnprintf_aux@@Base+0x184c>
   20870:	ldr	x1, [x29, #264]
   20874:	add	x1, x1, w27, sxtw
   20878:	mov	w27, w2
   2087c:	b	1fbf0 <mpfr_vasnprintf_aux@@Base+0xf28>
   20880:	ldr	x2, [x29, #552]
   20884:	cbz	x2, 20498 <mpfr_vasnprintf_aux@@Base+0x17d0>
   20888:	ldr	x0, [x29, #272]
   2088c:	mov	w1, #0x30                  	// #48
   20890:	bl	1ebd0 <mpfr_asprintf@@Base+0xd60>
   20894:	b	20498 <mpfr_vasnprintf_aux@@Base+0x17d0>
   20898:	ldr	x2, [x29, #552]
   2089c:	cbz	x2, 20514 <mpfr_vasnprintf_aux@@Base+0x184c>
   208a0:	ldr	x0, [x29, #272]
   208a4:	mov	w1, #0x20                  	// #32
   208a8:	bl	1ebd0 <mpfr_asprintf@@Base+0xd60>
   208ac:	b	20514 <mpfr_vasnprintf_aux@@Base+0x184c>
   208b0:	ldr	x0, [x29, #272]
   208b4:	sxtw	x2, w2
   208b8:	mov	w1, #0x30                  	// #48
   208bc:	bl	1ebd0 <mpfr_asprintf@@Base+0xd60>
   208c0:	b	204f4 <mpfr_vasnprintf_aux@@Base+0x182c>
   208c4:	ldr	x0, [x29, #272]
   208c8:	sxtw	x2, w2
   208cc:	mov	w1, #0x30                  	// #48
   208d0:	bl	1ebd0 <mpfr_asprintf@@Base+0xd60>
   208d4:	b	204d8 <mpfr_vasnprintf_aux@@Base+0x1810>
   208d8:	ldr	x0, [x29, #272]
   208dc:	mov	x2, #0x1                   	// #1
   208e0:	bl	1ebd0 <mpfr_asprintf@@Base+0xd60>
   208e4:	b	204d0 <mpfr_vasnprintf_aux@@Base+0x1808>
   208e8:	ldr	x0, [x29, #272]
   208ec:	sxtw	x2, w2
   208f0:	mov	w1, #0x30                  	// #48
   208f4:	bl	1ebd0 <mpfr_asprintf@@Base+0xd60>
   208f8:	b	204c8 <mpfr_vasnprintf_aux@@Base+0x1800>
   208fc:	ldr	x0, [x29, #424]
   20900:	strh	w0, [x25]
   20904:	b	1f8cc <mpfr_vasnprintf_aux@@Base+0xc04>
   20908:	tbnz	w27, #31, 212ac <mpfr_vasnprintf_aux@@Base+0x25e4>
   2090c:	add	x1, x21, #0xf
   20910:	mov	x0, x21
   20914:	and	x21, x1, #0xfffffffffffffff8
   20918:	ldr	x0, [x0]
   2091c:	cmp	x0, #0x0
   20920:	b.lt	21420 <mpfr_vasnprintf_aux@@Base+0x2758>  // b.tstop
   20924:	b.eq	1f8cc <mpfr_vasnprintf_aux@@Base+0xc04>  // b.none
   20928:	ldr	x1, [x29, #424]
   2092c:	str	x1, [x25]
   20930:	cmp	x0, #0x1
   20934:	b.eq	1f8cc <mpfr_vasnprintf_aux@@Base+0xc04>  // b.none
   20938:	sub	x2, x0, #0x1
   2093c:	mov	w1, #0x0                   	// #0
   20940:	add	x0, x25, #0x8
   20944:	lsl	x2, x2, #3
   20948:	bl	c110 <memset@plt>
   2094c:	b	1f8cc <mpfr_vasnprintf_aux@@Base+0xc04>
   20950:	ldr	x1, [x29, #424]
   20954:	mov	x0, x25
   20958:	bl	bcb0 <__gmpz_set_ui@plt>
   2095c:	b	1f8cc <mpfr_vasnprintf_aux@@Base+0xc04>
   20960:	ldr	x1, [x29, #424]
   20964:	mov	x0, x25
   20968:	mov	x2, #0x1                   	// #1
   2096c:	bl	c560 <__gmpq_set_ui@plt>
   20970:	b	1f8cc <mpfr_vasnprintf_aux@@Base+0xc04>
   20974:	cmp	w19, #0x6f
   20978:	mov	w0, #0x75                  	// #117
   2097c:	ccmp	w19, w0, #0x4, ne  // ne = any
   20980:	mov	w1, #0x69                  	// #105
   20984:	cset	w0, eq  // eq = none
   20988:	cmp	w19, #0x64
   2098c:	ccmp	w19, w1, #0x4, ne  // ne = any
   20990:	and	w1, w19, #0xffffffdf
   20994:	csinc	w0, w0, wzr, ne  // ne = any
   20998:	cmp	w1, #0x58
   2099c:	csinc	w0, w0, wzr, ne  // ne = any
   209a0:	cbnz	w0, 1f180 <mpfr_vasnprintf_aux@@Base+0x4b8>
   209a4:	cmp	w19, #0x63
   209a8:	b.eq	1fba0 <mpfr_vasnprintf_aux@@Base+0xed8>  // b.none
   209ac:	cmp	w19, #0x73
   209b0:	b.ne	1fb48 <mpfr_vasnprintf_aux@@Base+0xe80>  // b.any
   209b4:	b	1fba0 <mpfr_vasnprintf_aux@@Base+0xed8>
   209b8:	tbnz	w27, #31, 210b0 <mpfr_vasnprintf_aux@@Base+0x23e8>
   209bc:	add	x21, x21, #0xf
   209c0:	and	x21, x21, #0xfffffffffffffff8
   209c4:	b	1f184 <mpfr_vasnprintf_aux@@Base+0x4bc>
   209c8:	cmp	w19, #0x40
   209cc:	b.ls	1fb48 <mpfr_vasnprintf_aux@@Base+0xe80>  // b.plast
   209d0:	sub	w19, w19, #0x41
   209d4:	mov	x0, #0x1                   	// #1
   209d8:	lsl	x19, x0, x19
   209dc:	tst	x19, x28
   209e0:	b.ne	213b8 <mpfr_vasnprintf_aux@@Base+0x26f0>  // b.any
   209e4:	tst	x19, x23
   209e8:	b.ne	1fba0 <mpfr_vasnprintf_aux@@Base+0xed8>  // b.any
   209ec:	ldr	x0, [x29, #280]
   209f0:	ldrb	w19, [x0, #1]
   209f4:	mov	w0, #0x1                   	// #1
   209f8:	b	1fb54 <mpfr_vasnprintf_aux@@Base+0xe8c>
   209fc:	mov	w1, #0x10                  	// #16
   20a00:	b	1f598 <mpfr_vasnprintf_aux@@Base+0x8d0>
   20a04:	ldr	w0, [x29, #260]
   20a08:	tbnz	w0, #31, 21280 <mpfr_vasnprintf_aux@@Base+0x25b8>
   20a0c:	ldr	x0, [x29, #280]
   20a10:	add	x21, x21, #0xf
   20a14:	and	x21, x21, #0xfffffffffffffff0
   20a18:	add	x21, x21, #0x10
   20a1c:	ldrb	w19, [x0, #1]
   20a20:	mov	w0, #0x1                   	// #1
   20a24:	cbnz	w19, 1ee20 <mpfr_vasnprintf_aux@@Base+0x158>
   20a28:	b	1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   20a2c:	str	w6, [x29, #224]
   20a30:	str	w3, [x29, #280]
   20a34:	bl	c410 <mpfr_tmp_free@plt>
   20a38:	ldr	w6, [x29, #224]
   20a3c:	ldr	w3, [x29, #280]
   20a40:	b	1f89c <mpfr_vasnprintf_aux@@Base+0xbd4>
   20a44:	add	x0, x29, #0x1f8
   20a48:	str	x15, [x29, #208]
   20a4c:	str	w6, [x29, #224]
   20a50:	str	w3, [x29, #280]
   20a54:	bl	bdc0 <mpfr_tmp_allocate@plt>
   20a58:	ldr	w6, [x29, #224]
   20a5c:	mov	x4, x0
   20a60:	ldr	w3, [x29, #280]
   20a64:	ldr	x15, [x29, #208]
   20a68:	b	1f820 <mpfr_vasnprintf_aux@@Base+0xb58>
   20a6c:	ldrb	w1, [x26, x0]
   20a70:	cmp	w1, #0x30
   20a74:	b.ne	1f64c <mpfr_vasnprintf_aux@@Base+0x984>  // b.any
   20a78:	cbz	x0, 207d4 <mpfr_vasnprintf_aux@@Base+0x1b0c>
   20a7c:	sub	x0, x0, #0x1
   20a80:	ldrb	w1, [x26, x0]
   20a84:	cmp	w1, #0x30
   20a88:	b.eq	20a78 <mpfr_vasnprintf_aux@@Base+0x1db0>  // b.none
   20a8c:	b	1f64c <mpfr_vasnprintf_aux@@Base+0x984>
   20a90:	add	w27, w27, #0x8
   20a94:	cmp	w27, #0x0
   20a98:	b.gt	1fba4 <mpfr_vasnprintf_aux@@Base+0xedc>
   20a9c:	b	1fb48 <mpfr_vasnprintf_aux@@Base+0xe80>
   20aa0:	mov	x2, #0x2                   	// #2
   20aa4:	movk	x2, #0x8000, lsl #48
   20aa8:	cmp	x0, x2
   20aac:	b.eq	20fb8 <mpfr_vasnprintf_aux@@Base+0x22f0>  // b.none
   20ab0:	cmp	x0, x1
   20ab4:	b.eq	21318 <mpfr_vasnprintf_aux@@Base+0x2650>  // b.none
   20ab8:	ldr	w0, [x7, #8]
   20abc:	tbnz	w0, #31, 212e0 <mpfr_vasnprintf_aux@@Base+0x2618>
   20ac0:	ldr	w1, [x29, #208]
   20ac4:	mov	w0, #0xa                   	// #10
   20ac8:	tst	w1, w0
   20acc:	b.eq	20ae4 <mpfr_vasnprintf_aux@@Base+0x1e1c>  // b.none
   20ad0:	tst	x1, #0x8
   20ad4:	mov	w0, #0x2b                  	// #43
   20ad8:	mov	w1, #0x20                  	// #32
   20adc:	csel	w0, w0, w1, ne  // ne = any
   20ae0:	strb	w0, [x29, #560]
   20ae4:	ldr	w0, [x29, #224]
   20ae8:	cmp	w0, #0x41
   20aec:	b.eq	21554 <mpfr_vasnprintf_aux@@Base+0x288c>  // b.none
   20af0:	mov	x1, #0x1                   	// #1
   20af4:	mov	x0, #0x2                   	// #2
   20af8:	str	x1, [x29, #600]
   20afc:	bl	ccf0 <mpfr_allocate_func@plt>
   20b00:	mov	x1, x0
   20b04:	mov	w2, #0x30                  	// #48
   20b08:	strh	w2, [x0]
   20b0c:	ldr	x0, [x29, #664]
   20b10:	mov	x2, x0
   20b14:	ldr	x0, [x0, #8]
   20b18:	cbnz	x0, 20b10 <mpfr_vasnprintf_aux@@Base+0x1e48>
   20b1c:	mov	x0, #0x10                  	// #16
   20b20:	stp	x1, x2, [x29, #152]
   20b24:	bl	ccf0 <mpfr_allocate_func@plt>
   20b28:	ldp	x1, x2, [x29, #152]
   20b2c:	cmp	w24, #0x0
   20b30:	str	x0, [x2, #8]
   20b34:	stp	x1, xzr, [x0]
   20b38:	str	x1, [x29, #592]
   20b3c:	b.le	213fc <mpfr_vasnprintf_aux@@Base+0x2734>
   20b40:	ldr	w0, [x29, #224]
   20b44:	cmp	w0, #0x47
   20b48:	b.ne	2148c <mpfr_vasnprintf_aux@@Base+0x27c4>  // b.any
   20b4c:	ldr	x0, [x29, #208]
   20b50:	tbz	w0, #0, 21438 <mpfr_vasnprintf_aux@@Base+0x2770>
   20b54:	bl	bea0 <localeconv@plt>
   20b58:	ldr	x0, [x0]
   20b5c:	ldrb	w0, [x0, #1]
   20b60:	cbz	w0, 214c4 <mpfr_vasnprintf_aux@@Base+0x27fc>
   20b64:	sub	w24, w24, #0x1
   20b68:	mov	w0, #0x2e                  	// #46
   20b6c:	strb	w0, [x29, #612]
   20b70:	str	w24, [x29, #640]
   20b74:	ldr	w0, [x29, #144]
   20b78:	cmp	w19, #0x62
   20b7c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   20b80:	b.eq	203c0 <mpfr_vasnprintf_aux@@Base+0x16f8>  // b.none
   20b84:	ldr	w0, [x29, #224]
   20b88:	cmp	w0, #0x45
   20b8c:	b.ne	21448 <mpfr_vasnprintf_aux@@Base+0x2780>  // b.any
   20b90:	mov	x1, #0x4                   	// #4
   20b94:	mov	x0, #0x5                   	// #5
   20b98:	str	x1, [x29, #656]
   20b9c:	bl	ccf0 <mpfr_allocate_func@plt>
   20ba0:	mov	x19, x0
   20ba4:	cmp	w26, #0x0
   20ba8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   20bac:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x4558>
   20bb0:	add	x2, x2, #0x848
   20bb4:	add	x1, x1, #0x840
   20bb8:	csel	x1, x1, x2, ne  // ne = any
   20bbc:	ldrb	w0, [x1, #4]
   20bc0:	ldr	w2, [x1]
   20bc4:	str	w2, [x19]
   20bc8:	strb	w0, [x19, #4]
   20bcc:	ldr	x0, [x29, #664]
   20bd0:	mov	x24, x0
   20bd4:	ldr	x0, [x0, #8]
   20bd8:	cbnz	x0, 20bd0 <mpfr_vasnprintf_aux@@Base+0x1f08>
   20bdc:	mov	x0, #0x10                  	// #16
   20be0:	bl	ccf0 <mpfr_allocate_func@plt>
   20be4:	str	x0, [x24, #8]
   20be8:	stp	x19, xzr, [x0]
   20bec:	str	x19, [x29, #648]
   20bf0:	b	203c0 <mpfr_vasnprintf_aux@@Base+0x16f8>
   20bf4:	ldrb	w0, [x26]
   20bf8:	cbz	w0, 207c4 <mpfr_vasnprintf_aux@@Base+0x1afc>
   20bfc:	mov	x1, x26
   20c00:	mov	w7, #0x44                  	// #68
   20c04:	mov	w6, #0x45                  	// #69
   20c08:	mov	w5, #0x46                  	// #70
   20c0c:	mov	w4, #0x42                  	// #66
   20c10:	mov	w3, #0x43                  	// #67
   20c14:	mov	w2, #0x41                  	// #65
   20c18:	b	20c38 <mpfr_vasnprintf_aux@@Base+0x1f70>
   20c1c:	cmp	w0, #0x62
   20c20:	b.eq	20c74 <mpfr_vasnprintf_aux@@Base+0x1fac>  // b.none
   20c24:	cmp	w0, #0x63
   20c28:	b.ne	20c5c <mpfr_vasnprintf_aux@@Base+0x1f94>  // b.any
   20c2c:	strb	w3, [x1]
   20c30:	ldrb	w0, [x1, #1]!
   20c34:	cbz	w0, 207c4 <mpfr_vasnprintf_aux@@Base+0x1afc>
   20c38:	cmp	w0, #0x64
   20c3c:	b.eq	20c6c <mpfr_vasnprintf_aux@@Base+0x1fa4>  // b.none
   20c40:	b.ls	20c1c <mpfr_vasnprintf_aux@@Base+0x1f54>  // b.plast
   20c44:	cmp	w0, #0x65
   20c48:	b.eq	20c7c <mpfr_vasnprintf_aux@@Base+0x1fb4>  // b.none
   20c4c:	cmp	w0, #0x66
   20c50:	b.ne	20c30 <mpfr_vasnprintf_aux@@Base+0x1f68>  // b.any
   20c54:	strb	w5, [x1]
   20c58:	b	20c30 <mpfr_vasnprintf_aux@@Base+0x1f68>
   20c5c:	cmp	w0, #0x61
   20c60:	b.ne	20c30 <mpfr_vasnprintf_aux@@Base+0x1f68>  // b.any
   20c64:	strb	w2, [x1]
   20c68:	b	20c30 <mpfr_vasnprintf_aux@@Base+0x1f68>
   20c6c:	strb	w7, [x1]
   20c70:	b	20c30 <mpfr_vasnprintf_aux@@Base+0x1f68>
   20c74:	strb	w4, [x1]
   20c78:	b	20c30 <mpfr_vasnprintf_aux@@Base+0x1f68>
   20c7c:	strb	w6, [x1]
   20c80:	b	20c30 <mpfr_vasnprintf_aux@@Base+0x1f68>
   20c84:	ldrb	w0, [x26]
   20c88:	cbnz	w0, 20bfc <mpfr_vasnprintf_aux@@Base+0x1f34>
   20c8c:	b	1f634 <mpfr_vasnprintf_aux@@Base+0x96c>
   20c90:	mov	x1, #0xe000000000000001    	// #-2305843009213693951
   20c94:	cmp	x0, x1
   20c98:	b.le	2150c <mpfr_vasnprintf_aux@@Base+0x2844>
   20c9c:	sub	x0, x0, #0x1
   20ca0:	lsl	x0, x0, #2
   20ca4:	str	x0, [x29, #376]
   20ca8:	b	1f62c <mpfr_vasnprintf_aux@@Base+0x964>
   20cac:	cmp	w6, #0x1
   20cb0:	b.eq	20f58 <mpfr_vasnprintf_aux@@Base+0x2290>  // b.none
   20cb4:	mov	w4, #0x2                   	// #2
   20cb8:	mov	x1, #0x4000000000000000    	// #4611686018427387904
   20cbc:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   20cc0:	mov	x3, #0x1                   	// #1
   20cc4:	b	206cc <mpfr_vasnprintf_aux@@Base+0x1a04>
   20cc8:	ldr	x6, [x29, #264]
   20ccc:	add	x6, x6, w27, sxtw
   20cd0:	mov	w27, w7
   20cd4:	ldr	w6, [x6]
   20cd8:	b	1f274 <mpfr_vasnprintf_aux@@Base+0x5ac>
   20cdc:	bl	bea0 <localeconv@plt>
   20ce0:	ldr	x0, [x0]
   20ce4:	ldrb	w0, [x0]
   20ce8:	b	1f688 <mpfr_vasnprintf_aux@@Base+0x9c0>
   20cec:	ldr	w0, [x29, #544]
   20cf0:	cmp	w0, #0x1
   20cf4:	b.eq	20f34 <mpfr_vasnprintf_aux@@Base+0x226c>  // b.none
   20cf8:	ldr	w0, [x7, #8]
   20cfc:	tbnz	w0, #31, 20f3c <mpfr_vasnprintf_aux@@Base+0x2274>
   20d00:	mov	x1, #0x3                   	// #3
   20d04:	mov	x0, #0x4                   	// #4
   20d08:	str	x1, [x29, #600]
   20d0c:	bl	ccf0 <mpfr_allocate_func@plt>
   20d10:	mov	x19, x0
   20d14:	cmp	w26, #0x0
   20d18:	mov	w0, #0x6275                	// #25205
   20d1c:	mov	w1, #0x4255                	// #16981
   20d20:	movk	w0, #0x66, lsl #16
   20d24:	movk	w1, #0x46, lsl #16
   20d28:	csel	w0, w0, w1, eq  // eq = none
   20d2c:	str	w0, [x19]
   20d30:	ldr	x0, [x29, #664]
   20d34:	mov	x24, x0
   20d38:	ldr	x0, [x0, #8]
   20d3c:	cbnz	x0, 20d34 <mpfr_vasnprintf_aux@@Base+0x206c>
   20d40:	mov	x0, #0x10                  	// #16
   20d44:	bl	ccf0 <mpfr_allocate_func@plt>
   20d48:	str	x0, [x24, #8]
   20d4c:	stp	x19, xzr, [x0]
   20d50:	str	x19, [x29, #592]
   20d54:	b	203c0 <mpfr_vasnprintf_aux@@Base+0x16f8>
   20d58:	stp	w5, w14, [x29, #132]
   20d5c:	str	w4, [x29, #144]
   20d60:	str	w12, [x29, #152]
   20d64:	str	w11, [x29, #160]
   20d68:	str	w10, [x29, #208]
   20d6c:	bl	c410 <mpfr_tmp_free@plt>
   20d70:	ldp	w5, w14, [x29, #132]
   20d74:	ldr	w4, [x29, #144]
   20d78:	ldr	w12, [x29, #152]
   20d7c:	ldr	w11, [x29, #160]
   20d80:	ldr	w10, [x29, #208]
   20d84:	ldr	x13, [x29, #120]
   20d88:	b	1fce8 <mpfr_vasnprintf_aux@@Base+0x1020>
   20d8c:	tbz	w27, #31, 1f184 <mpfr_vasnprintf_aux@@Base+0x4bc>
   20d90:	add	w27, w27, #0x8
   20d94:	cmp	w27, #0x0
   20d98:	b.le	1fb48 <mpfr_vasnprintf_aux@@Base+0xe80>
   20d9c:	ldr	x0, [x29, #280]
   20da0:	add	x21, x21, #0xf
   20da4:	and	x21, x21, #0xfffffffffffffff8
   20da8:	ldrb	w19, [x0, #1]
   20dac:	mov	w0, w1
   20db0:	cbnz	w19, 1ee20 <mpfr_vasnprintf_aux@@Base+0x158>
   20db4:	b	1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   20db8:	sub	x19, x0, #0x1
   20dbc:	b	20574 <mpfr_vasnprintf_aux@@Base+0x18ac>
   20dc0:	mov	x19, #0x6                   	// #6
   20dc4:	mov	w24, w19
   20dc8:	ldr	x3, [x7]
   20dcc:	cmp	x0, #0x0
   20dd0:	sub	x3, x3, x0
   20dd4:	b.le	20df4 <mpfr_vasnprintf_aux@@Base+0x212c>
   20dd8:	add	x0, x0, #0x2
   20ddc:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   20de0:	movk	x1, #0xaaab
   20de4:	cmp	x3, #0x0
   20de8:	csel	x3, x3, xzr, ge  // ge = tcont
   20dec:	umulh	x0, x0, x1
   20df0:	add	x3, x3, x0, lsr #1
   20df4:	cmp	x3, x19
   20df8:	add	x26, x29, #0x180
   20dfc:	csel	x3, x3, x19, le
   20e00:	mov	x4, x7
   20e04:	mov	w5, w6
   20e08:	mov	x1, x26
   20e0c:	mov	w2, #0xa                   	// #10
   20e10:	mov	x0, #0x0                   	// #0
   20e14:	str	x7, [x29, #224]
   20e18:	bl	c500 <mpfr_get_str@plt>
   20e1c:	mov	x3, x0
   20e20:	str	x3, [x29, #392]
   20e24:	ldr	x7, [x29, #224]
   20e28:	ldr	x0, [x29, #664]
   20e2c:	mov	x1, x0
   20e30:	ldr	x0, [x0, #8]
   20e34:	cbnz	x0, 20e2c <mpfr_vasnprintf_aux@@Base+0x2164>
   20e38:	mov	x0, #0x10                  	// #16
   20e3c:	str	x7, [x29, #160]
   20e40:	str	x3, [x29, #208]
   20e44:	str	x1, [x29, #224]
   20e48:	bl	ccf0 <mpfr_allocate_func@plt>
   20e4c:	ldr	x1, [x29, #224]
   20e50:	ldr	x2, [x29, #384]
   20e54:	str	x0, [x1, #8]
   20e58:	ldr	x3, [x29, #208]
   20e5c:	sub	x1, x2, #0x1
   20e60:	stp	x3, xzr, [x0]
   20e64:	cmp	x1, x19
   20e68:	ccmn	x1, #0x4, #0x1, lt  // lt = tstop
   20e6c:	ldr	x7, [x29, #160]
   20e70:	b.ge	212ec <mpfr_vasnprintf_aux@@Base+0x2624>  // b.tcont
   20e74:	add	x1, x29, #0x2c0
   20e78:	sub	w9, w24, #0x1
   20e7c:	str	w9, [x29, #512]
   20e80:	mov	x3, x26
   20e84:	ldr	x0, [x29, #536]
   20e88:	ldp	x4, x5, [x1, #-200]
   20e8c:	mov	x1, x7
   20e90:	stp	x4, x5, [x29, #288]
   20e94:	add	x2, x29, #0x2c0
   20e98:	ldp	x4, x5, [x2, #-184]
   20e9c:	add	x2, x29, #0x120
   20ea0:	stp	x4, x5, [x29, #304]
   20ea4:	str	x0, [x29, #320]
   20ea8:	add	x0, x29, #0x220
   20eac:	bl	1e280 <mpfr_asprintf@@Base+0x410>
   20eb0:	cmn	w0, #0x1
   20eb4:	b.ne	203c0 <mpfr_vasnprintf_aux@@Base+0x16f8>  // b.any
   20eb8:	b	1f74c <mpfr_vasnprintf_aux@@Base+0xa84>
   20ebc:	cmp	w6, #0x0
   20ec0:	csel	x1, x1, x2, eq  // eq = none
   20ec4:	tst	x0, x1
   20ec8:	b.eq	20704 <mpfr_vasnprintf_aux@@Base+0x1a3c>  // b.none
   20ecc:	mov	x0, #0x2                   	// #2
   20ed0:	str	x7, [x29, #224]
   20ed4:	bl	ccf0 <mpfr_allocate_func@plt>
   20ed8:	mov	x26, x0
   20edc:	mov	w1, #0x31                  	// #49
   20ee0:	strh	w1, [x0]
   20ee4:	ldr	x7, [x29, #224]
   20ee8:	ldr	x0, [x29, #664]
   20eec:	mov	x1, x0
   20ef0:	ldr	x0, [x0, #8]
   20ef4:	cbnz	x0, 20eec <mpfr_vasnprintf_aux@@Base+0x2224>
   20ef8:	mov	x0, #0x10                  	// #16
   20efc:	str	x7, [x29, #152]
   20f00:	str	x1, [x29, #224]
   20f04:	bl	ccf0 <mpfr_allocate_func@plt>
   20f08:	ldr	x1, [x29, #224]
   20f0c:	ldr	x7, [x29, #152]
   20f10:	str	x0, [x1, #8]
   20f14:	ldr	x1, [x7, #16]
   20f18:	stp	x26, xzr, [x0]
   20f1c:	str	x1, [x29, #376]
   20f20:	str	x26, [x29, #592]
   20f24:	b	207bc <mpfr_vasnprintf_aux@@Base+0x1af4>
   20f28:	ldr	w0, [x7, #8]
   20f2c:	tbz	w0, #31, 206dc <mpfr_vasnprintf_aux@@Base+0x1a14>
   20f30:	b	20704 <mpfr_vasnprintf_aux@@Base+0x1a3c>
   20f34:	str	wzr, [x29, #544]
   20f38:	b	20cf8 <mpfr_vasnprintf_aux@@Base+0x2030>
   20f3c:	mov	w0, #0x2d                  	// #45
   20f40:	strb	w0, [x29, #560]
   20f44:	b	20d00 <mpfr_vasnprintf_aux@@Base+0x2038>
   20f48:	ldr	w2, [x7, #8]
   20f4c:	cmp	w2, #0x0
   20f50:	b.gt	20748 <mpfr_vasnprintf_aux@@Base+0x1a80>
   20f54:	b	2074c <mpfr_vasnprintf_aux@@Base+0x1a84>
   20f58:	mov	x0, #0x2                   	// #2
   20f5c:	str	x7, [x29, #224]
   20f60:	bl	ccf0 <mpfr_allocate_func@plt>
   20f64:	mov	x26, x0
   20f68:	mov	w1, #0x31                  	// #49
   20f6c:	strh	w1, [x0]
   20f70:	ldr	x7, [x29, #224]
   20f74:	ldr	x0, [x29, #664]
   20f78:	mov	x1, x0
   20f7c:	ldr	x0, [x0, #8]
   20f80:	cbnz	x0, 20f78 <mpfr_vasnprintf_aux@@Base+0x22b0>
   20f84:	mov	x0, #0x10                  	// #16
   20f88:	str	x7, [x29, #152]
   20f8c:	str	x1, [x29, #224]
   20f90:	bl	ccf0 <mpfr_allocate_func@plt>
   20f94:	ldr	x7, [x29, #152]
   20f98:	ldr	x1, [x29, #224]
   20f9c:	str	x0, [x1, #8]
   20fa0:	ldr	x1, [x7, #16]
   20fa4:	stp	x26, xzr, [x0]
   20fa8:	sub	x0, x1, #0x1
   20fac:	str	x0, [x29, #376]
   20fb0:	str	x26, [x29, #592]
   20fb4:	b	207bc <mpfr_vasnprintf_aux@@Base+0x1af4>
   20fb8:	ldr	w0, [x29, #544]
   20fbc:	cmp	w0, #0x1
   20fc0:	b.ne	20fc8 <mpfr_vasnprintf_aux@@Base+0x2300>  // b.any
   20fc4:	str	wzr, [x29, #544]
   20fc8:	mov	x1, #0x3                   	// #3
   20fcc:	mov	x0, #0x4                   	// #4
   20fd0:	str	x1, [x29, #600]
   20fd4:	bl	ccf0 <mpfr_allocate_func@plt>
   20fd8:	mov	x19, x0
   20fdc:	cmp	w26, #0x0
   20fe0:	mov	w0, #0x616e                	// #24942
   20fe4:	mov	w1, #0x414e                	// #16718
   20fe8:	movk	w0, #0x6e, lsl #16
   20fec:	movk	w1, #0x4e, lsl #16
   20ff0:	csel	w0, w0, w1, eq  // eq = none
   20ff4:	str	w0, [x19]
   20ff8:	ldr	x0, [x29, #664]
   20ffc:	mov	x24, x0
   21000:	ldr	x0, [x0, #8]
   21004:	cbnz	x0, 20ffc <mpfr_vasnprintf_aux@@Base+0x2334>
   21008:	b	20d40 <mpfr_vasnprintf_aux@@Base+0x2078>
   2100c:	bl	c410 <mpfr_tmp_free@plt>
   21010:	b	1eecc <mpfr_vasnprintf_aux@@Base+0x204>
   21014:	str	w5, [x29, #112]
   21018:	str	w14, [x29, #120]
   2101c:	stp	w6, w4, [x29, #132]
   21020:	str	w12, [x29, #152]
   21024:	str	w11, [x29, #160]
   21028:	str	w10, [x29, #208]
   2102c:	bl	c410 <mpfr_tmp_free@plt>
   21030:	ldr	w5, [x29, #112]
   21034:	ldr	w14, [x29, #120]
   21038:	ldp	w6, w4, [x29, #132]
   2103c:	ldr	w12, [x29, #152]
   21040:	ldr	w11, [x29, #160]
   21044:	ldr	w10, [x29, #208]
   21048:	ldr	x7, [x29, #144]
   2104c:	b	1f3f8 <mpfr_vasnprintf_aux@@Base+0x730>
   21050:	add	x0, x29, #0x1f8
   21054:	str	x15, [x29, #104]
   21058:	str	w14, [x29, #112]
   2105c:	str	w6, [x29, #120]
   21060:	stp	w5, w4, [x29, #128]
   21064:	stp	x2, x7, [x29, #136]
   21068:	str	w12, [x29, #152]
   2106c:	str	w11, [x29, #160]
   21070:	str	w10, [x29, #208]
   21074:	bl	bdc0 <mpfr_tmp_allocate@plt>
   21078:	ldr	w14, [x29, #112]
   2107c:	mov	x3, x0
   21080:	ldr	w6, [x29, #120]
   21084:	ldp	w5, w4, [x29, #128]
   21088:	ldr	w12, [x29, #152]
   2108c:	ldr	w11, [x29, #160]
   21090:	ldr	w10, [x29, #208]
   21094:	ldr	x15, [x29, #104]
   21098:	ldp	x2, x7, [x29, #136]
   2109c:	b	1f324 <mpfr_vasnprintf_aux@@Base+0x65c>
   210a0:	ldr	w0, [x7, #8]
   210a4:	cmp	w0, #0x0
   210a8:	b.le	206dc <mpfr_vasnprintf_aux@@Base+0x1a14>
   210ac:	b	20704 <mpfr_vasnprintf_aux@@Base+0x1a3c>
   210b0:	add	w0, w27, #0x8
   210b4:	cmp	w0, #0x0
   210b8:	b.le	21298 <mpfr_vasnprintf_aux@@Base+0x25d0>
   210bc:	add	x21, x21, #0xf
   210c0:	mov	w27, w0
   210c4:	and	x21, x21, #0xfffffffffffffff8
   210c8:	b	1f184 <mpfr_vasnprintf_aux@@Base+0x4bc>
   210cc:	add	x0, x29, #0x1f8
   210d0:	str	x15, [x29, #280]
   210d4:	bl	bdc0 <mpfr_tmp_allocate@plt>
   210d8:	mov	x3, x0
   210dc:	ldr	x15, [x29, #280]
   210e0:	b	1ee74 <mpfr_vasnprintf_aux@@Base+0x1ac>
   210e4:	ldrsw	x3, [x29, #608]
   210e8:	mvn	x0, x3
   210ec:	cmp	x0, x24
   210f0:	b.cc	2139c <mpfr_vasnprintf_aux@@Base+0x26d4>  // b.lo, b.ul, b.last
   210f4:	add	x3, x3, x24
   210f8:	mov	x19, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   210fc:	sub	x0, x3, #0x1
   21100:	movk	x19, #0xaaab
   21104:	str	x0, [x29, #208]
   21108:	umulh	x19, x0, x19
   2110c:	lsr	x1, x19, #1
   21110:	str	x1, [x29, #160]
   21114:	mvn	x0, x1
   21118:	cmp	x3, x0
   2111c:	b.hi	2139c <mpfr_vasnprintf_aux@@Base+0x26d4>  // b.pmore
   21120:	ldr	x0, [x29, #424]
   21124:	add	x19, x3, x1
   21128:	cmn	x0, #0x1
   2112c:	b.eq	2139c <mpfr_vasnprintf_aux@@Base+0x26d4>  // b.none
   21130:	adds	x0, x19, x0
   21134:	ccmp	x0, #0x0, #0x1, cc  // cc = lo, ul, last
   21138:	b.lt	2139c <mpfr_vasnprintf_aux@@Base+0x26d4>  // b.tstop
   2113c:	ldr	x1, [x29, #416]
   21140:	str	x0, [x29, #424]
   21144:	cbz	x1, 204c8 <mpfr_vasnprintf_aux@@Base+0x1800>
   21148:	mvn	x0, x19
   2114c:	cmp	x1, x0
   21150:	b.cs	215b8 <mpfr_vasnprintf_aux@@Base+0x28f0>  // b.hs, b.nlast
   21154:	ldp	x2, x0, [x29, #400]
   21158:	add	x1, x2, x1
   2115c:	add	x2, x0, x19
   21160:	cmp	x2, x1
   21164:	b.cs	21600 <mpfr_vasnprintf_aux@@Base+0x2938>  // b.hs, b.nlast
   21168:	ldr	x2, [x29, #208]
   2116c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   21170:	movk	x1, #0xaaab
   21174:	umulh	x1, x2, x1
   21178:	and	x3, x1, #0xfffffffffffffffe
   2117c:	add	x3, x3, x1, lsr #1
   21180:	sub	x3, x2, x3
   21184:	add	x25, x3, #0x1
   21188:	cmp	x25, x24
   2118c:	b.hi	215d8 <mpfr_vasnprintf_aux@@Base+0x2910>  // b.pmore
   21190:	mov	x1, x26
   21194:	sub	x19, x24, x25
   21198:	mov	x2, x25
   2119c:	add	x26, x26, x25
   211a0:	bl	ba10 <memcpy@plt>
   211a4:	ldr	x0, [x29, #408]
   211a8:	ldr	x1, [x29, #208]
   211ac:	add	x3, x0, x25
   211b0:	str	x3, [x29, #408]
   211b4:	cmp	x1, #0x2
   211b8:	b.ls	2123c <mpfr_vasnprintf_aux@@Base+0x2574>  // b.plast
   211bc:	mov	x4, #0x0                   	// #0
   211c0:	str	x22, [x29, #208]
   211c4:	mov	x22, x21
   211c8:	mov	x21, x20
   211cc:	mov	x20, x4
   211d0:	mov	w7, #0x3030                	// #12336
   211d4:	mov	w24, #0x30                  	// #48
   211d8:	mov	x25, #0x3                   	// #3
   211dc:	add	x0, x3, #0x1
   211e0:	str	x0, [x29, #408]
   211e4:	ldrb	w0, [x29, #224]
   211e8:	strb	w0, [x3]
   211ec:	cbz	x19, 21644 <mpfr_vasnprintf_aux@@Base+0x297c>
   211f0:	cmp	x19, #0x2
   211f4:	ldr	x0, [x29, #408]
   211f8:	b.ls	21614 <mpfr_vasnprintf_aux@@Base+0x294c>  // b.plast
   211fc:	ldrh	w1, [x26]
   21200:	sub	x19, x19, #0x3
   21204:	strh	w1, [x0]
   21208:	add	x26, x26, #0x3
   2120c:	ldurb	w1, [x26, #-1]
   21210:	strb	w1, [x0, #2]
   21214:	ldr	x3, [x29, #408]
   21218:	add	x20, x20, #0x1
   2121c:	ldr	x0, [x29, #160]
   21220:	add	x3, x3, #0x3
   21224:	str	x3, [x29, #408]
   21228:	cmp	x0, x20
   2122c:	b.hi	211dc <mpfr_vasnprintf_aux@@Base+0x2514>  // b.pmore
   21230:	mov	x20, x21
   21234:	mov	x21, x22
   21238:	ldr	x22, [x29, #208]
   2123c:	strb	wzr, [x3]
   21240:	b	204c8 <mpfr_vasnprintf_aux@@Base+0x1800>
   21244:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   21248:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   2124c:	add	x2, x2, #0x8e0
   21250:	add	x0, x0, #0x780
   21254:	mov	w1, #0x7a3                 	// #1955
   21258:	bl	cb40 <mpfr_assert_fail@plt>
   2125c:	ldr	x26, [x29, #592]
   21260:	b	204a0 <mpfr_vasnprintf_aux@@Base+0x17d8>
   21264:	add	x0, x29, #0x2c0
   21268:	mov	x1, x7
   2126c:	ldp	x2, x3, [x0, #-200]
   21270:	stp	x2, x3, [x29, #288]
   21274:	ldr	x0, [x29, #536]
   21278:	mov	x3, #0x0                   	// #0
   2127c:	b	20e94 <mpfr_vasnprintf_aux@@Base+0x21cc>
   21280:	ldr	w0, [x29, #260]
   21284:	add	w0, w0, #0x10
   21288:	str	w0, [x29, #260]
   2128c:	cmp	w0, #0x0
   21290:	b.gt	20a0c <mpfr_vasnprintf_aux@@Base+0x1d44>
   21294:	b	1fb48 <mpfr_vasnprintf_aux@@Base+0xe80>
   21298:	b.eq	21484 <mpfr_vasnprintf_aux@@Base+0x27bc>  // b.none
   2129c:	add	w27, w27, #0x10
   212a0:	cmp	w27, #0x0
   212a4:	b.gt	1f184 <mpfr_vasnprintf_aux@@Base+0x4bc>
   212a8:	b	1fb48 <mpfr_vasnprintf_aux@@Base+0xe80>
   212ac:	add	w1, w27, #0x8
   212b0:	cmp	w1, #0x0
   212b4:	b.le	21428 <mpfr_vasnprintf_aux@@Base+0x2760>
   212b8:	add	x2, x21, #0xf
   212bc:	mov	x0, x21
   212c0:	mov	w27, w1
   212c4:	and	x21, x2, #0xfffffffffffffff8
   212c8:	b	20918 <mpfr_vasnprintf_aux@@Base+0x1c50>
   212cc:	mov	x0, x1
   212d0:	b	1f6d8 <mpfr_vasnprintf_aux@@Base+0xa10>
   212d4:	ldr	w2, [x7, #8]
   212d8:	tbz	w2, #31, 2074c <mpfr_vasnprintf_aux@@Base+0x1a84>
   212dc:	b	20748 <mpfr_vasnprintf_aux@@Base+0x1a80>
   212e0:	mov	w0, #0x2d                  	// #45
   212e4:	strb	w0, [x29, #560]
   212e8:	b	20ae4 <mpfr_vasnprintf_aux@@Base+0x1e1c>
   212ec:	add	x1, x29, #0x2c0
   212f0:	sub	w2, w24, w2
   212f4:	str	w2, [x29, #512]
   212f8:	add	x2, x29, #0x2c0
   212fc:	mov	x3, x26
   21300:	ldp	x4, x5, [x1, #-200]
   21304:	stp	x4, x5, [x29, #288]
   21308:	mov	x1, x7
   2130c:	ldp	x4, x5, [x2, #-184]
   21310:	ldr	x0, [x29, #536]
   21314:	b	203a4 <mpfr_vasnprintf_aux@@Base+0x16dc>
   21318:	ldr	w0, [x29, #544]
   2131c:	cmp	w0, #0x1
   21320:	b.ne	21328 <mpfr_vasnprintf_aux@@Base+0x2660>  // b.any
   21324:	str	wzr, [x29, #544]
   21328:	ldr	w0, [x7, #8]
   2132c:	tbz	w0, #31, 21338 <mpfr_vasnprintf_aux@@Base+0x2670>
   21330:	mov	w0, #0x2d                  	// #45
   21334:	strb	w0, [x29, #560]
   21338:	mov	x1, #0x3                   	// #3
   2133c:	mov	x0, #0x4                   	// #4
   21340:	str	x1, [x29, #600]
   21344:	bl	ccf0 <mpfr_allocate_func@plt>
   21348:	mov	x19, x0
   2134c:	cmp	w26, #0x0
   21350:	mov	w0, #0x6e69                	// #28265
   21354:	mov	w1, #0x4e49                	// #20041
   21358:	movk	w0, #0x66, lsl #16
   2135c:	movk	w1, #0x46, lsl #16
   21360:	csel	w0, w0, w1, eq  // eq = none
   21364:	str	w0, [x19]
   21368:	ldr	x0, [x29, #664]
   2136c:	mov	x24, x0
   21370:	ldr	x0, [x0, #8]
   21374:	cbnz	x0, 2136c <mpfr_vasnprintf_aux@@Base+0x26a4>
   21378:	b	20d40 <mpfr_vasnprintf_aux@@Base+0x2078>
   2137c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   21380:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   21384:	add	x2, x2, #0x8b0
   21388:	add	x0, x0, #0x780
   2138c:	mov	w1, #0x428                 	// #1064
   21390:	bl	cb40 <mpfr_assert_fail@plt>
   21394:	ldr	x0, [x29, #376]
   21398:	b	1f624 <mpfr_vasnprintf_aux@@Base+0x95c>
   2139c:	mov	x0, #0xffffffffffffffff    	// #-1
   213a0:	str	x0, [x29, #424]
   213a4:	b	20514 <mpfr_vasnprintf_aux@@Base+0x184c>
   213a8:	cmp	x20, x2
   213ac:	b.eq	202dc <mpfr_vasnprintf_aux@@Base+0x1614>  // b.none
   213b0:	mov	x24, x2
   213b4:	b	1ee44 <mpfr_vasnprintf_aux@@Base+0x17c>
   213b8:	ldr	w1, [x29, #260]
   213bc:	tbnz	w1, #31, 213d8 <mpfr_vasnprintf_aux@@Base+0x2710>
   213c0:	ldr	x1, [x29, #280]
   213c4:	add	x21, x21, #0xf
   213c8:	and	x21, x21, #0xfffffffffffffff8
   213cc:	ldrb	w19, [x1, #1]
   213d0:	cbnz	w19, 1ee20 <mpfr_vasnprintf_aux@@Base+0x158>
   213d4:	b	1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   213d8:	ldr	w1, [x29, #260]
   213dc:	add	w1, w1, #0x10
   213e0:	str	w1, [x29, #260]
   213e4:	cmp	w1, #0x0
   213e8:	b.gt	213c0 <mpfr_vasnprintf_aux@@Base+0x26f8>
   213ec:	ldr	x1, [x29, #280]
   213f0:	ldrb	w19, [x1, #1]
   213f4:	cbnz	w19, 1ee20 <mpfr_vasnprintf_aux@@Base+0x158>
   213f8:	b	1ee40 <mpfr_vasnprintf_aux@@Base+0x178>
   213fc:	ldr	x0, [x29, #208]
   21400:	tbz	w0, #0, 20b74 <mpfr_vasnprintf_aux@@Base+0x1eac>
   21404:	bl	bea0 <localeconv@plt>
   21408:	ldr	x0, [x0]
   2140c:	mov	w1, #0x2e                  	// #46
   21410:	ldrb	w0, [x0, #1]
   21414:	cbz	w0, 214dc <mpfr_vasnprintf_aux@@Base+0x2814>
   21418:	strb	w1, [x29, #612]
   2141c:	b	20b74 <mpfr_vasnprintf_aux@@Base+0x1eac>
   21420:	neg	x0, x0
   21424:	b	20928 <mpfr_vasnprintf_aux@@Base+0x1c60>
   21428:	ldr	x0, [x29, #264]
   2142c:	add	x0, x0, w27, sxtw
   21430:	mov	w27, w1
   21434:	b	20918 <mpfr_vasnprintf_aux@@Base+0x1c50>
   21438:	ldr	w0, [x29, #144]
   2143c:	cmp	w19, #0x62
   21440:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   21444:	b.eq	203c0 <mpfr_vasnprintf_aux@@Base+0x16f8>  // b.none
   21448:	mov	x1, #0x3                   	// #3
   2144c:	mov	x0, #0x4                   	// #4
   21450:	str	x1, [x29, #656]
   21454:	bl	ccf0 <mpfr_allocate_func@plt>
   21458:	mov	x19, x0
   2145c:	cmp	w26, #0x0
   21460:	mov	w0, #0x2b50                	// #11088
   21464:	mov	w1, #0x2b70                	// #11120
   21468:	movk	w0, #0x30, lsl #16
   2146c:	movk	w1, #0x30, lsl #16
   21470:	csel	w0, w0, w1, ne  // ne = any
   21474:	str	w0, [x19]
   21478:	b	20bcc <mpfr_vasnprintf_aux@@Base+0x1f04>
   2147c:	bl	c410 <mpfr_tmp_free@plt>
   21480:	b	2035c <mpfr_vasnprintf_aux@@Base+0x1694>
   21484:	mov	w27, #0x0                   	// #0
   21488:	b	1f184 <mpfr_vasnprintf_aux@@Base+0x4bc>
   2148c:	bl	bea0 <localeconv@plt>
   21490:	ldr	x0, [x0]
   21494:	ldrb	w0, [x0, #1]
   21498:	cbz	w0, 214ac <mpfr_vasnprintf_aux@@Base+0x27e4>
   2149c:	mov	w0, #0x2e                  	// #46
   214a0:	strb	w0, [x29, #612]
   214a4:	str	w24, [x29, #640]
   214a8:	b	20b74 <mpfr_vasnprintf_aux@@Base+0x1eac>
   214ac:	bl	bea0 <localeconv@plt>
   214b0:	ldr	x0, [x0]
   214b4:	ldrb	w0, [x0]
   214b8:	strb	w0, [x29, #612]
   214bc:	str	w24, [x29, #640]
   214c0:	b	20b74 <mpfr_vasnprintf_aux@@Base+0x1eac>
   214c4:	bl	bea0 <localeconv@plt>
   214c8:	sub	w24, w24, #0x1
   214cc:	ldr	x0, [x0]
   214d0:	ldrb	w0, [x0]
   214d4:	strb	w0, [x29, #612]
   214d8:	b	20b70 <mpfr_vasnprintf_aux@@Base+0x1ea8>
   214dc:	bl	bea0 <localeconv@plt>
   214e0:	ldr	x0, [x0]
   214e4:	ldrb	w1, [x0]
   214e8:	strb	w1, [x29, #612]
   214ec:	b	20b74 <mpfr_vasnprintf_aux@@Base+0x1eac>
   214f0:	ldr	x0, [x7]
   214f4:	ldr	x1, [x7, #24]
   214f8:	sub	x0, x0, #0x1
   214fc:	asr	x0, x0, #6
   21500:	ldr	x1, [x1, x0, lsl #3]
   21504:	lsr	x1, x1, #60
   21508:	b	2074c <mpfr_vasnprintf_aux@@Base+0x1a84>
   2150c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   21510:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   21514:	add	x2, x2, #0x880
   21518:	add	x0, x0, #0x780
   2151c:	mov	w1, #0x41f                 	// #1055
   21520:	bl	cb40 <mpfr_assert_fail@plt>
   21524:	ldr	x0, [x29, #376]
   21528:	b	20c9c <mpfr_vasnprintf_aux@@Base+0x1fd4>
   2152c:	mov	x24, x20
   21530:	ldr	x20, [x29, #280]
   21534:	b	1f7e4 <mpfr_vasnprintf_aux@@Base+0xb1c>
   21538:	mov	x20, x2
   2153c:	mov	w1, #0x0                   	// #0
   21540:	mov	w2, #0x1                   	// #1
   21544:	mov	w13, #0x0                   	// #0
   21548:	mov	w7, w2
   2154c:	mov	w3, #0x0                   	// #0
   21550:	b	1f0f0 <mpfr_vasnprintf_aux@@Base+0x428>
   21554:	mov	x1, #0x2                   	// #2
   21558:	mov	x0, #0x3                   	// #3
   2155c:	str	x1, [x29, #576]
   21560:	bl	ccf0 <mpfr_allocate_func@plt>
   21564:	mov	x1, x0
   21568:	cmp	w26, #0x0
   2156c:	mov	w2, #0x30                  	// #48
   21570:	mov	w0, #0x58                  	// #88
   21574:	mov	w3, #0x78                  	// #120
   21578:	csel	w0, w0, w3, ne  // ne = any
   2157c:	strb	w2, [x1]
   21580:	strb	w0, [x1, #1]
   21584:	strb	wzr, [x1, #2]
   21588:	ldr	x0, [x29, #664]
   2158c:	mov	x2, x0
   21590:	ldr	x0, [x0, #8]
   21594:	cbnz	x0, 2158c <mpfr_vasnprintf_aux@@Base+0x28c4>
   21598:	mov	x0, #0x10                  	// #16
   2159c:	stp	x1, x2, [x29, #152]
   215a0:	bl	ccf0 <mpfr_allocate_func@plt>
   215a4:	ldp	x1, x2, [x29, #152]
   215a8:	str	x0, [x2, #8]
   215ac:	stp	x1, xzr, [x0]
   215b0:	str	x1, [x29, #568]
   215b4:	b	20af0 <mpfr_vasnprintf_aux@@Base+0x1e28>
   215b8:	mov	w1, #0x2d6                 	// #726
   215bc:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   215c0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   215c4:	add	x2, x2, #0x900
   215c8:	add	x0, x0, #0x780
   215cc:	bl	cb40 <mpfr_assert_fail@plt>
   215d0:	ldr	x1, [x29, #416]
   215d4:	b	21154 <mpfr_vasnprintf_aux@@Base+0x248c>
   215d8:	mov	x2, x24
   215dc:	mov	x1, x26
   215e0:	bl	ba10 <memcpy@plt>
   215e4:	mov	x19, #0x0                   	// #0
   215e8:	ldr	x0, [x29, #408]
   215ec:	sub	x2, x25, x24
   215f0:	mov	w1, #0x30                  	// #48
   215f4:	add	x0, x0, x24
   215f8:	bl	c110 <memset@plt>
   215fc:	b	211a4 <mpfr_vasnprintf_aux@@Base+0x24dc>
   21600:	ldr	x0, [x29, #272]
   21604:	mov	x1, x19
   21608:	bl	1df08 <mpfr_asprintf@@Base+0x98>
   2160c:	ldr	x0, [x29, #408]
   21610:	b	21168 <mpfr_vasnprintf_aux@@Base+0x24a0>
   21614:	mov	x2, x19
   21618:	mov	x1, x26
   2161c:	str	w7, [x29, #152]
   21620:	bl	ba10 <memcpy@plt>
   21624:	ldr	x0, [x29, #408]
   21628:	sub	x2, x25, x19
   2162c:	mov	w1, #0x30                  	// #48
   21630:	add	x0, x0, x19
   21634:	bl	c110 <memset@plt>
   21638:	ldr	w7, [x29, #152]
   2163c:	mov	x19, #0x0                   	// #0
   21640:	b	21214 <mpfr_vasnprintf_aux@@Base+0x254c>
   21644:	ldr	x0, [x29, #408]
   21648:	strh	w7, [x0]
   2164c:	strb	w24, [x0, #2]
   21650:	b	21214 <mpfr_vasnprintf_aux@@Base+0x254c>
   21654:	nop

0000000000021658 <mpfr_const_pi_internal@@Base>:
   21658:	stp	x29, x30, [sp, #-432]!
   2165c:	mov	x2, #0x1c72                	// #7282
   21660:	movk	x2, #0x71c7, lsl #16
   21664:	mov	x29, sp
   21668:	ldr	x3, [x0]
   2166c:	movk	x2, #0xc71c, lsl #32
   21670:	str	x0, [sp, #112]
   21674:	movk	x2, #0x1c71, lsl #48
   21678:	add	x0, x3, #0x10
   2167c:	str	w1, [sp, #108]
   21680:	stp	x19, x20, [sp, #16]
   21684:	smulh	x1, x0, x2
   21688:	stp	x21, x22, [sp, #32]
   2168c:	stp	x23, x24, [sp, #48]
   21690:	sub	x0, x1, x0, asr #63
   21694:	stp	x25, x26, [sp, #64]
   21698:	cmp	xzr, x0, lsr #2
   2169c:	stp	x27, x28, [sp, #80]
   216a0:	str	x3, [sp, #96]
   216a4:	b.eq	21a2c <mpfr_const_pi_internal@@Base+0x3d4>  // b.none
   216a8:	add	x1, x3, #0x12
   216ac:	mov	x21, #0x2                   	// #2
   216b0:	smulh	x0, x1, x2
   216b4:	add	x21, x21, #0x1
   216b8:	sub	x0, x0, x1, asr #63
   216bc:	add	x1, x1, #0x2
   216c0:	asr	x0, x0, x21
   216c4:	cbnz	x0, 216b0 <mpfr_const_pi_internal@@Base+0x58>
   216c8:	add	x0, x21, x21, lsl #1
   216cc:	ldr	x1, [sp, #96]
   216d0:	add	x0, x1, x0
   216d4:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   216d8:	add	x22, x0, #0xe
   216dc:	cmp	x22, x1
   216e0:	b.ge	21a50 <mpfr_const_pi_internal@@Base+0x3f8>  // b.tcont
   216e4:	add	x24, x0, #0x4c
   216e8:	adds	x0, x0, #0xd
   216ec:	csel	x24, x24, x0, mi  // mi = first
   216f0:	asr	x24, x24, #6
   216f4:	add	x24, x24, #0x1
   216f8:	add	x0, x24, x24, lsl #2
   216fc:	cmp	x0, #0x10
   21700:	b.gt	21988 <mpfr_const_pi_internal@@Base+0x330>
   21704:	add	x1, sp, #0x130
   21708:	stp	xzr, x1, [sp, #288]
   2170c:	mov	x0, x1
   21710:	add	x2, x24, x24, lsl #1
   21714:	add	x6, x0, x24, lsl #3
   21718:	add	x3, x0, x24, lsl #4
   2171c:	add	x26, sp, #0x80
   21720:	add	x20, sp, #0xa0
   21724:	add	x19, sp, #0xc0
   21728:	add	x23, sp, #0xe0
   2172c:	add	x28, sp, #0x100
   21730:	add	x2, x0, x2, lsl #3
   21734:	add	x24, x0, x24, lsl #5
   21738:	mov	x4, #0x40                  	// #64
   2173c:	mov	w1, #0x1                   	// #1
   21740:	str	x4, [sp, #120]
   21744:	str	x22, [sp, #128]
   21748:	mov	x25, #0x0                   	// #0
   2174c:	str	w1, [sp, #136]
   21750:	stp	x0, x22, [sp, #152]
   21754:	mov	x0, x26
   21758:	str	w1, [sp, #168]
   2175c:	stp	x6, x22, [sp, #184]
   21760:	str	w1, [sp, #200]
   21764:	stp	x3, x22, [sp, #216]
   21768:	mov	w3, #0x0                   	// #0
   2176c:	str	w1, [sp, #232]
   21770:	stp	x2, x22, [sp, #248]
   21774:	mov	x2, #0x0                   	// #0
   21778:	str	w1, [sp, #264]
   2177c:	mov	x1, #0x1                   	// #1
   21780:	str	x24, [sp, #280]
   21784:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   21788:	mov	w3, #0x0                   	// #0
   2178c:	mov	x2, #0x0                   	// #0
   21790:	mov	x1, #0x1                   	// #1
   21794:	mov	x0, x20
   21798:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2179c:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   217a0:	mov	w3, #0x0                   	// #0
   217a4:	mov	x2, #0xffffffffffffffff    	// #-1
   217a8:	mov	x1, #0x1                   	// #1
   217ac:	mov	x0, x19
   217b0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   217b4:	mov	x0, x23
   217b8:	mov	w3, #0x0                   	// #0
   217bc:	mov	x2, #0xfffffffffffffffe    	// #-2
   217c0:	mov	x1, #0x1                   	// #1
   217c4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   217c8:	mov	x2, x19
   217cc:	mov	x1, x20
   217d0:	mov	w3, #0x0                   	// #0
   217d4:	mov	x0, x28
   217d8:	bl	c1a0 <mpfr_add@plt>
   217dc:	mov	w3, #0x0                   	// #0
   217e0:	mov	x1, x28
   217e4:	mov	x2, #0x2                   	// #2
   217e8:	mov	x0, x28
   217ec:	bl	c8f0 <mpfr_div_2ui@plt>
   217f0:	mov	x1, x19
   217f4:	mov	w2, #0x0                   	// #0
   217f8:	mov	x0, x19
   217fc:	bl	c930 <mpfr_sqrt@plt>
   21800:	mov	x2, x19
   21804:	mov	x1, x26
   21808:	mov	w3, #0x0                   	// #0
   2180c:	mov	x0, x26
   21810:	bl	c1a0 <mpfr_add@plt>
   21814:	mov	x1, x26
   21818:	mov	w3, #0x0                   	// #0
   2181c:	mov	x2, #0x1                   	// #1
   21820:	mov	x0, x26
   21824:	bl	c8f0 <mpfr_div_2ui@plt>
   21828:	mov	x2, x26
   2182c:	mov	x1, x26
   21830:	mov	w3, #0x0                   	// #0
   21834:	mov	x0, x20
   21838:	bl	bd50 <mpfr_mul@plt>
   2183c:	mov	x2, x28
   21840:	mov	x1, x20
   21844:	mov	w3, #0x0                   	// #0
   21848:	mov	x0, x19
   2184c:	bl	bb70 <mpfr_sub@plt>
   21850:	mov	x1, x19
   21854:	mov	w3, #0x0                   	// #0
   21858:	mov	x2, #0x1                   	// #1
   2185c:	mov	x0, x19
   21860:	bl	c2c0 <mpfr_mul_2ui@plt>
   21864:	mov	x2, x19
   21868:	mov	x1, x20
   2186c:	mov	w3, #0x0                   	// #0
   21870:	mov	x0, x28
   21874:	bl	bb70 <mpfr_sub@plt>
   21878:	ldr	x27, [sp, #272]
   2187c:	mov	x2, x25
   21880:	mov	x1, x28
   21884:	mov	x0, x28
   21888:	cmp	x27, x24
   2188c:	mov	w3, #0x0                   	// #0
   21890:	b.eq	218c4 <mpfr_const_pi_internal@@Base+0x26c>  // b.none
   21894:	bl	c2c0 <mpfr_mul_2ui@plt>
   21898:	mov	x2, x28
   2189c:	mov	x1, x23
   218a0:	mov	x0, x23
   218a4:	mov	w3, #0x0                   	// #0
   218a8:	bl	bb70 <mpfr_sub@plt>
   218ac:	neg	x7, x27
   218b0:	sub	x0, x22, x25
   218b4:	cmp	x7, x0
   218b8:	b.ge	218e8 <mpfr_const_pi_internal@@Base+0x290>  // b.tcont
   218bc:	add	x25, x25, #0x1
   218c0:	b	217c8 <mpfr_const_pi_internal@@Base+0x170>
   218c4:	bl	c2c0 <mpfr_mul_2ui@plt>
   218c8:	mov	x2, x28
   218cc:	mov	x1, x23
   218d0:	mov	x0, x23
   218d4:	mov	w3, #0x0                   	// #0
   218d8:	bl	bb70 <mpfr_sub@plt>
   218dc:	sub	x0, x22, x25
   218e0:	cmp	x22, x0
   218e4:	b.lt	218bc <mpfr_const_pi_internal@@Base+0x264>  // b.tstop
   218e8:	mov	x1, x19
   218ec:	mov	x2, x23
   218f0:	mov	x0, x20
   218f4:	mov	w3, #0x0                   	// #0
   218f8:	bl	c620 <mpfr_div@plt>
   218fc:	ldr	x1, [sp, #176]
   21900:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   21904:	cmp	x1, x0
   21908:	b.le	2199c <mpfr_const_pi_internal@@Base+0x344>
   2190c:	ldr	w0, [sp, #108]
   21910:	sub	x2, x22, x25, lsl #1
   21914:	ldr	x1, [sp, #160]
   21918:	cmp	w0, #0x0
   2191c:	ldr	x0, [sp, #184]
   21920:	sub	x1, x1, #0x1
   21924:	ldr	x3, [sp, #96]
   21928:	asr	x1, x1, #6
   2192c:	sub	x2, x2, #0x8
   21930:	add	x1, x1, #0x1
   21934:	cinc	x3, x3, eq  // eq = none
   21938:	bl	c370 <mpfr_round_p@plt>
   2193c:	cbz	w0, 2199c <mpfr_const_pi_internal@@Base+0x344>
   21940:	ldr	w2, [sp, #108]
   21944:	mov	x1, x20
   21948:	ldr	w3, [sp, #168]
   2194c:	ldr	x0, [sp, #112]
   21950:	bl	c6a0 <mpfr_set4@plt>
   21954:	mov	w19, w0
   21958:	ldr	x1, [sp, #288]
   2195c:	cbz	x1, 21968 <mpfr_const_pi_internal@@Base+0x310>
   21960:	ldr	x0, [sp, #296]
   21964:	bl	cc20 <mpfr_free_func@plt>
   21968:	mov	w0, w19
   2196c:	ldp	x19, x20, [sp, #16]
   21970:	ldp	x21, x22, [sp, #32]
   21974:	ldp	x23, x24, [sp, #48]
   21978:	ldp	x25, x26, [sp, #64]
   2197c:	ldp	x27, x28, [sp, #80]
   21980:	ldp	x29, x30, [sp], #432
   21984:	ret
   21988:	lsl	x0, x0, #3
   2198c:	str	x0, [sp, #288]
   21990:	bl	ccf0 <mpfr_allocate_func@plt>
   21994:	str	x0, [sp, #296]
   21998:	b	21710 <mpfr_const_pi_internal@@Base+0xb8>
   2199c:	ldr	x1, [sp, #120]
   219a0:	add	x22, x21, x22
   219a4:	mov	x0, #0xfffffffffffffeff    	// #-257
   219a8:	movk	x0, #0x7fff, lsl #48
   219ac:	sub	x0, x0, x22
   219b0:	cmp	x0, x1
   219b4:	b.lt	21a38 <mpfr_const_pi_internal@@Base+0x3e0>  // b.tstop
   219b8:	add	x22, x1, x22
   219bc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   219c0:	cmp	x22, x0
   219c4:	add	x0, x22, x22, lsr #63
   219c8:	ldr	x1, [sp, #288]
   219cc:	asr	x0, x0, #1
   219d0:	str	x0, [sp, #120]
   219d4:	b.ge	21a50 <mpfr_const_pi_internal@@Base+0x3f8>  // b.tcont
   219d8:	sub	x24, x22, #0x1
   219dc:	asr	x24, x24, #6
   219e0:	add	x24, x24, #0x1
   219e4:	add	x2, x24, x24, lsl #2
   219e8:	lsl	x2, x2, #3
   219ec:	str	x2, [sp, #288]
   219f0:	cbz	x1, 21a1c <mpfr_const_pi_internal@@Base+0x3c4>
   219f4:	ldr	x0, [sp, #296]
   219f8:	bl	c1c0 <mpfr_reallocate_func@plt>
   219fc:	str	x0, [sp, #296]
   21a00:	add	x2, x24, x24, lsl #1
   21a04:	add	x6, x0, x24, lsl #3
   21a08:	add	x3, x0, x24, lsl #4
   21a0c:	mov	w1, #0x1                   	// #1
   21a10:	add	x2, x0, x2, lsl #3
   21a14:	add	x24, x0, x24, lsl #5
   21a18:	b	21744 <mpfr_const_pi_internal@@Base+0xec>
   21a1c:	mov	x0, x2
   21a20:	bl	ccf0 <mpfr_allocate_func@plt>
   21a24:	str	x0, [sp, #296]
   21a28:	b	21a00 <mpfr_const_pi_internal@@Base+0x3a8>
   21a2c:	mov	x0, #0x6                   	// #6
   21a30:	mov	x21, #0x2                   	// #2
   21a34:	b	216cc <mpfr_const_pi_internal@@Base+0x74>
   21a38:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   21a3c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   21a40:	add	x2, x2, #0x358
   21a44:	add	x0, x0, #0x948
   21a48:	mov	w1, #0x6c                  	// #108
   21a4c:	bl	cb40 <mpfr_assert_fail@plt>
   21a50:	bl	c8e0 <mpfr_abort_prec_max@plt>
   21a54:	nop

0000000000021a58 <mpfr_const_pi@@Base>:
   21a58:	stp	x29, x30, [sp, #-16]!
   21a5c:	mov	x4, x0
   21a60:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   21a64:	ldr	x2, [x0, #2624]
   21a68:	add	x0, x0, #0xa40
   21a6c:	blr	x2
   21a70:	mov	x29, sp
   21a74:	ldp	x29, x30, [sp], #16
   21a78:	mrs	x3, tpidr_el0
   21a7c:	mov	w2, w1
   21a80:	add	x1, x3, x0
   21a84:	mov	x0, x4
   21a88:	b	c380 <mpfr_cache@plt>
   21a8c:	nop

0000000000021a90 <mpfr_pow_general@@Base>:
   21a90:	stp	x29, x30, [sp, #-368]!
   21a94:	mov	x29, sp
   21a98:	stp	x21, x22, [sp, #32]
   21a9c:	mov	x22, x0
   21aa0:	ldr	w0, [x1, #8]
   21aa4:	ldr	x6, [x1]
   21aa8:	str	x6, [sp, #304]
   21aac:	ldp	x6, x1, [x1, #16]
   21ab0:	stp	x19, x20, [sp, #16]
   21ab4:	mov	w19, #0x1                   	// #1
   21ab8:	stp	x23, x24, [sp, #48]
   21abc:	mov	x21, x2
   21ac0:	mov	w23, w3
   21ac4:	stp	x25, x26, [sp, #64]
   21ac8:	stp	x27, x28, [sp, #80]
   21acc:	str	x5, [sp, #136]
   21ad0:	str	w4, [sp, #148]
   21ad4:	str	w19, [sp, #312]
   21ad8:	stp	x6, x1, [sp, #320]
   21adc:	ldr	x25, [x22]
   21ae0:	tbnz	w0, #31, 21dd0 <mpfr_pow_general@@Base+0x340>
   21ae4:	str	wzr, [sp, #144]
   21ae8:	cmp	x25, #0x1
   21aec:	add	x1, x25, #0x9
   21af0:	b.eq	21e00 <mpfr_pow_general@@Base+0x370>  // b.none
   21af4:	b.le	222c0 <mpfr_pow_general@@Base+0x830>
   21af8:	sub	x0, x25, #0x1
   21afc:	mov	w20, #0x40                  	// #64
   21b00:	clz	x0, x0
   21b04:	sub	w0, w20, w0
   21b08:	add	x20, x1, w0, sxtw
   21b0c:	add	x19, sp, #0xd0
   21b10:	mov	x1, x20
   21b14:	mov	x0, x19
   21b18:	bl	ca80 <mpfr_init2@plt>
   21b1c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   21b20:	add	x28, sp, #0x130
   21b24:	add	x0, x0, #0x980
   21b28:	mrs	x24, tpidr_el0
   21b2c:	add	x26, sp, #0xf0
   21b30:	add	x27, sp, #0x110
   21b34:	str	wzr, [sp, #96]
   21b38:	str	wzr, [sp, #128]
   21b3c:	str	x0, [sp, #152]
   21b40:	mov	x0, #0x40                  	// #64
   21b44:	str	x0, [sp, #112]
   21b48:	ldr	w2, [x21, #8]
   21b4c:	mov	x1, x28
   21b50:	mov	x0, x19
   21b54:	lsr	w2, w2, #31
   21b58:	add	w2, w2, #0x2
   21b5c:	bl	c090 <mpfr_log@plt>
   21b60:	mov	x2, x19
   21b64:	mov	x1, x21
   21b68:	mov	x0, x19
   21b6c:	mov	w3, #0x2                   	// #2
   21b70:	bl	bd50 <mpfr_mul@plt>
   21b74:	ldr	w0, [sp, #96]
   21b78:	cbnz	w0, 21d00 <mpfr_pow_general@@Base+0x270>
   21b7c:	ldr	x0, [sp, #224]
   21b80:	mov	x3, #0xfffffffffffffffe    	// #-2
   21b84:	mov	x1, x19
   21b88:	mov	w2, #0x0                   	// #0
   21b8c:	cmp	x0, x3
   21b90:	csel	x0, x0, x3, ge  // ge = tcont
   21b94:	add	x0, x0, #0x3
   21b98:	str	x0, [sp, #104]
   21b9c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   21ba0:	ldr	x3, [x0, #2576]
   21ba4:	add	x0, x0, #0xa10
   21ba8:	blr	x3
   21bac:	add	x3, x24, x0
   21bb0:	str	wzr, [x24, x0]
   21bb4:	mov	x0, x19
   21bb8:	str	x3, [sp, #120]
   21bbc:	bl	c750 <mpfr_exp@plt>
   21bc0:	ldr	x3, [sp, #120]
   21bc4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   21bc8:	ldr	x0, [sp, #224]
   21bcc:	ldr	w2, [x3]
   21bd0:	cmp	x0, x1
   21bd4:	b.le	21e08 <mpfr_pow_general@@Base+0x378>
   21bd8:	tbnz	w2, #0, 21e24 <mpfr_pow_general@@Base+0x394>
   21bdc:	ldr	x1, [sp, #208]
   21be0:	cmp	w23, #0x0
   21be4:	ldr	x0, [sp, #232]
   21be8:	sub	x1, x1, #0x1
   21bec:	ldr	x2, [sp, #104]
   21bf0:	cset	w3, eq  // eq = none
   21bf4:	asr	x1, x1, #6
   21bf8:	str	w3, [sp, #104]
   21bfc:	sub	x2, x20, x2
   21c00:	add	x1, x1, #0x1
   21c04:	cinc	x3, x25, eq  // eq = none
   21c08:	bl	c370 <mpfr_round_p@plt>
   21c0c:	cbz	w0, 21e90 <mpfr_pow_general@@Base+0x400>
   21c10:	ldr	w3, [sp, #216]
   21c14:	mov	w2, w23
   21c18:	mov	x1, x19
   21c1c:	mov	x0, x22
   21c20:	bl	c6a0 <mpfr_set4@plt>
   21c24:	mov	w20, w0
   21c28:	ldr	w0, [sp, #96]
   21c2c:	cbz	w0, 21cc4 <mpfr_pow_general@@Base+0x234>
   21c30:	add	x25, sp, #0x110
   21c34:	mov	w1, #0x0                   	// #0
   21c38:	mov	x0, x25
   21c3c:	bl	c190 <mpfr_get_si@plt>
   21c40:	mov	x21, x0
   21c44:	ldr	w0, [sp, #104]
   21c48:	cmp	w20, #0x0
   21c4c:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
   21c50:	ccmp	x21, #0x0, #0x0, ne  // ne = any
   21c54:	b.lt	22160 <mpfr_pow_general@@Base+0x6d0>  // b.tstop
   21c58:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   21c5c:	ldr	x1, [x0, #2576]
   21c60:	add	x0, x0, #0xa10
   21c64:	blr	x1
   21c68:	mov	x2, x21
   21c6c:	mov	w3, w23
   21c70:	mov	x1, x22
   21c74:	str	wzr, [x24, x0]
   21c78:	mov	x0, x22
   21c7c:	bl	bb90 <mpfr_mul_2si@plt>
   21c80:	mov	w21, w0
   21c84:	cbz	w21, 21cb4 <mpfr_pow_general@@Base+0x224>
   21c88:	ldr	x2, [sp, #136]
   21c8c:	mov	w20, w21
   21c90:	cbz	x2, 21cb4 <mpfr_pow_general@@Base+0x224>
   21c94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   21c98:	ldr	x1, [x0, #2576]
   21c9c:	add	x0, x0, #0xa10
   21ca0:	blr	x1
   21ca4:	ldr	w0, [x24, x0]
   21ca8:	ldr	w1, [x2]
   21cac:	orr	w1, w1, w0
   21cb0:	str	w1, [x2]
   21cb4:	mov	x1, x25
   21cb8:	add	x0, sp, #0xf0
   21cbc:	mov	x2, #0x0                   	// #0
   21cc0:	bl	c1b0 <mpfr_clears@plt>
   21cc4:	mov	x0, x19
   21cc8:	bl	c070 <mpfr_clear@plt>
   21ccc:	ldr	w0, [sp, #144]
   21cd0:	cbz	w0, 21ce0 <mpfr_pow_general@@Base+0x250>
   21cd4:	neg	w20, w20
   21cd8:	mov	w0, #0xffffffff            	// #-1
   21cdc:	str	w0, [x22, #8]
   21ce0:	mov	w0, w20
   21ce4:	ldp	x19, x20, [sp, #16]
   21ce8:	ldp	x21, x22, [sp, #32]
   21cec:	ldp	x23, x24, [sp, #48]
   21cf0:	ldp	x25, x26, [sp, #64]
   21cf4:	ldp	x27, x28, [sp, #80]
   21cf8:	ldp	x29, x30, [sp], #368
   21cfc:	ret
   21d00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   21d04:	ldr	x1, [x0, #2560]
   21d08:	add	x0, x0, #0xa00
   21d0c:	blr	x1
   21d10:	mov	w2, #0x3                   	// #3
   21d14:	add	x1, x24, x0
   21d18:	mov	x0, x26
   21d1c:	bl	c380 <mpfr_cache@plt>
   21d20:	mov	x2, x27
   21d24:	mov	x1, x26
   21d28:	mov	w3, #0x3                   	// #3
   21d2c:	mov	x0, x26
   21d30:	bl	bd50 <mpfr_mul@plt>
   21d34:	mov	x2, x26
   21d38:	mov	x1, x19
   21d3c:	mov	w3, #0x2                   	// #2
   21d40:	mov	x0, x19
   21d44:	bl	bb70 <mpfr_sub@plt>
   21d48:	ldr	x1, [sp, #224]
   21d4c:	mov	x0, #0xfffffffffffffffe    	// #-2
   21d50:	ldr	x3, [sp, #288]
   21d54:	cmp	x1, x0
   21d58:	csel	x0, x1, x0, ge  // ge = tcont
   21d5c:	mov	w2, #0x0                   	// #0
   21d60:	add	x0, x0, #0x3
   21d64:	mov	x1, x19
   21d68:	cmp	x3, x0
   21d6c:	csel	x0, x3, x0, ge  // ge = tcont
   21d70:	add	x0, x0, #0x1
   21d74:	str	x0, [sp, #104]
   21d78:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   21d7c:	ldr	x3, [x0, #2576]
   21d80:	add	x0, x0, #0xa10
   21d84:	blr	x3
   21d88:	add	x3, x24, x0
   21d8c:	str	wzr, [x24, x0]
   21d90:	mov	x0, x19
   21d94:	str	x3, [sp, #120]
   21d98:	bl	c750 <mpfr_exp@plt>
   21d9c:	ldr	x3, [sp, #120]
   21da0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   21da4:	ldr	x1, [sp, #224]
   21da8:	ldr	w2, [x3]
   21dac:	cmp	x1, x0
   21db0:	b.le	21db8 <mpfr_pow_general@@Base+0x328>
   21db4:	tbz	w2, #0, 21bdc <mpfr_pow_general@@Base+0x14c>
   21db8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   21dbc:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   21dc0:	add	x2, x2, #0x970
   21dc4:	add	x0, x0, #0x968
   21dc8:	mov	w1, #0xcd                  	// #205
   21dcc:	bl	cb40 <mpfr_assert_fail@plt>
   21dd0:	mov	x0, x2
   21dd4:	bl	cca0 <mpfr_odd_p@plt>
   21dd8:	cbz	w0, 21ae4 <mpfr_pow_general@@Base+0x54>
   21ddc:	cmp	w23, #0x2
   21de0:	b.eq	22154 <mpfr_pow_general@@Base+0x6c4>  // b.none
   21de4:	str	w19, [sp, #144]
   21de8:	cmp	w23, #0x3
   21dec:	mov	w0, #0x2                   	// #2
   21df0:	add	x1, x25, #0x9
   21df4:	csel	w23, w23, w0, ne  // ne = any
   21df8:	cmp	x25, #0x1
   21dfc:	b.ne	21af4 <mpfr_pow_general@@Base+0x64>  // b.any
   21e00:	mov	x20, #0xa                   	// #10
   21e04:	b	21b0c <mpfr_pow_general@@Base+0x7c>
   21e08:	mov	x1, #0x2                   	// #2
   21e0c:	movk	x1, #0x8000, lsl #48
   21e10:	cmp	x0, x1
   21e14:	b.eq	221e8 <mpfr_pow_general@@Base+0x758>  // b.none
   21e18:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   21e1c:	cmp	x0, x1
   21e20:	b.eq	22288 <mpfr_pow_general@@Base+0x7f8>  // b.none
   21e24:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   21e28:	cmp	x0, x1
   21e2c:	b.eq	21eec <mpfr_pow_general@@Base+0x45c>  // b.none
   21e30:	cmp	x20, #0x3f
   21e34:	b.le	21f88 <mpfr_pow_general@@Base+0x4f8>
   21e38:	mov	x1, x20
   21e3c:	mov	x0, x26
   21e40:	bl	ca80 <mpfr_init2@plt>
   21e44:	mov	w0, #0x1                   	// #1
   21e48:	mov	x1, #0x40                  	// #64
   21e4c:	str	w0, [sp, #96]
   21e50:	mov	x0, x27
   21e54:	bl	ca80 <mpfr_init2@plt>
   21e58:	mov	x1, x28
   21e5c:	mov	x0, x27
   21e60:	mov	w2, #0x0                   	// #0
   21e64:	bl	c1d0 <mpfr_log2@plt>
   21e68:	mov	w3, #0x0                   	// #0
   21e6c:	mov	x2, x27
   21e70:	mov	x1, x21
   21e74:	mov	x0, x27
   21e78:	bl	bd50 <mpfr_mul@plt>
   21e7c:	mov	x1, x27
   21e80:	mov	x0, x27
   21e84:	mov	w2, #0xffffffff            	// #-1
   21e88:	bl	c300 <mpfr_rint@plt>
   21e8c:	b	21b48 <mpfr_pow_general@@Base+0xb8>
   21e90:	ldr	w0, [sp, #128]
   21e94:	ldr	w1, [sp, #148]
   21e98:	orr	w0, w0, w1
   21e9c:	cbz	w0, 21f9c <mpfr_pow_general@@Base+0x50c>
   21ea0:	ldr	x1, [sp, #112]
   21ea4:	mov	x0, #0xfffffffffffffeff    	// #-257
   21ea8:	movk	x0, #0x7fff, lsl #48
   21eac:	sub	x0, x0, x20
   21eb0:	cmp	x0, x1
   21eb4:	b.lt	22204 <mpfr_pow_general@@Base+0x774>  // b.tstop
   21eb8:	add	x20, x20, x1
   21ebc:	mov	x0, x19
   21ec0:	mov	x1, x20
   21ec4:	add	x2, x20, x20, lsr #63
   21ec8:	asr	x2, x2, #1
   21ecc:	str	x2, [sp, #112]
   21ed0:	bl	bed0 <mpfr_set_prec@plt>
   21ed4:	ldr	w0, [sp, #96]
   21ed8:	cbz	w0, 21b48 <mpfr_pow_general@@Base+0xb8>
   21edc:	mov	x1, x20
   21ee0:	mov	x0, x26
   21ee4:	bl	bed0 <mpfr_set_prec@plt>
   21ee8:	b	21b48 <mpfr_pow_general@@Base+0xb8>
   21eec:	ldr	w2, [x21, #8]
   21ef0:	mov	x1, x28
   21ef4:	mov	x0, x19
   21ef8:	mvn	w2, w2
   21efc:	lsr	w2, w2, #31
   21f00:	add	w2, w2, #0x2
   21f04:	bl	c090 <mpfr_log@plt>
   21f08:	mov	x1, x21
   21f0c:	mov	x2, x19
   21f10:	mov	w3, #0x3                   	// #3
   21f14:	mov	x0, x19
   21f18:	bl	bd50 <mpfr_mul@plt>
   21f1c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   21f20:	ldr	x1, [x0, #2576]
   21f24:	add	x0, x0, #0xa10
   21f28:	blr	x1
   21f2c:	add	x3, x24, x0
   21f30:	mov	x1, x19
   21f34:	mov	w2, #0x3                   	// #3
   21f38:	str	wzr, [x24, x0]
   21f3c:	mov	x0, x19
   21f40:	str	x3, [sp, #96]
   21f44:	bl	c750 <mpfr_exp@plt>
   21f48:	ldr	x3, [sp, #96]
   21f4c:	ldr	w0, [x3]
   21f50:	tbz	w0, #1, 21e30 <mpfr_pow_general@@Base+0x3a0>
   21f54:	mov	w1, w23
   21f58:	mov	x0, x22
   21f5c:	mov	w2, #0x1                   	// #1
   21f60:	bl	bf40 <mpfr_overflow@plt>
   21f64:	mov	w20, w0
   21f68:	ldr	x0, [sp, #136]
   21f6c:	cbz	x0, 21cc4 <mpfr_pow_general@@Base+0x234>
   21f70:	mov	x2, x0
   21f74:	ldr	w0, [x0]
   21f78:	mov	w1, #0xa                   	// #10
   21f7c:	orr	w0, w0, w1
   21f80:	str	w0, [x2]
   21f84:	b	21cc4 <mpfr_pow_general@@Base+0x234>
   21f88:	mov	x20, #0x40                  	// #64
   21f8c:	mov	x0, x19
   21f90:	mov	x1, x20
   21f94:	bl	bed0 <mpfr_set_prec@plt>
   21f98:	b	21e38 <mpfr_pow_general@@Base+0x3a8>
   21f9c:	ldr	w0, [x21, #8]
   21fa0:	tbnz	w0, #31, 221ac <mpfr_pow_general@@Base+0x71c>
   21fa4:	add	x4, sp, #0xb0
   21fa8:	add	x1, sp, #0xc0
   21fac:	mov	x0, x1
   21fb0:	str	x4, [sp, #128]
   21fb4:	str	x1, [sp, #168]
   21fb8:	bl	bf90 <mpfr_mpz_init@plt>
   21fbc:	ldr	x0, [sp, #168]
   21fc0:	mov	x1, x21
   21fc4:	bl	cac0 <mpfr_get_z_2exp@plt>
   21fc8:	mov	x3, x0
   21fcc:	ldr	x0, [sp, #168]
   21fd0:	mov	x1, #0x0                   	// #0
   21fd4:	str	x3, [sp, #160]
   21fd8:	bl	ba90 <__gmpz_scan1@plt>
   21fdc:	mov	x2, x0
   21fe0:	ldr	x1, [sp, #168]
   21fe4:	str	x2, [sp, #120]
   21fe8:	mov	x0, x1
   21fec:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   21ff0:	ldp	x2, x4, [sp, #120]
   21ff4:	ldr	x3, [sp, #160]
   21ff8:	add	x1, x3, x2
   21ffc:	mov	x0, x4
   22000:	str	x1, [sp, #120]
   22004:	bl	bf90 <mpfr_mpz_init@plt>
   22008:	ldr	x4, [sp, #128]
   2200c:	mov	x1, x28
   22010:	mov	x0, x4
   22014:	bl	cac0 <mpfr_get_z_2exp@plt>
   22018:	mov	x3, x0
   2201c:	ldr	x4, [sp, #128]
   22020:	mov	x1, #0x0                   	// #0
   22024:	str	x3, [sp, #160]
   22028:	mov	x0, x4
   2202c:	bl	ba90 <__gmpz_scan1@plt>
   22030:	mov	x2, x0
   22034:	ldr	x3, [sp, #160]
   22038:	ldr	x4, [sp, #128]
   2203c:	add	x3, x3, x0
   22040:	str	x3, [sp, #160]
   22044:	mov	x1, x4
   22048:	mov	x0, x4
   2204c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   22050:	ldr	x4, [sp, #128]
   22054:	ldr	x3, [sp, #160]
   22058:	tbnz	w3, #0, 221b8 <mpfr_pow_general@@Base+0x728>
   2205c:	ldrsw	x1, [sp, #180]
   22060:	cmp	x1, #0x0
   22064:	b.le	221e0 <mpfr_pow_general@@Base+0x750>
   22068:	ldr	x0, [sp, #184]
   2206c:	str	x3, [sp, #128]
   22070:	str	x4, [sp, #160]
   22074:	bl	ca40 <__gmpn_perfect_square_p@plt>
   22078:	ldr	x3, [sp, #128]
   2207c:	ldr	x4, [sp, #160]
   22080:	str	x3, [sp, #128]
   22084:	cbz	w0, 2221c <mpfr_pow_general@@Base+0x78c>
   22088:	mov	x0, x4
   2208c:	mov	x1, x4
   22090:	str	x4, [sp, #160]
   22094:	bl	bc60 <__gmpz_sqrt@plt>
   22098:	ldp	x0, x3, [sp, #120]
   2209c:	ldr	x4, [sp, #160]
   220a0:	add	x3, x3, x3, lsr #63
   220a4:	adds	x0, x0, #0x1
   220a8:	str	x0, [sp, #120]
   220ac:	asr	x3, x3, #1
   220b0:	b.ne	22058 <mpfr_pow_general@@Base+0x5c8>  // b.any
   220b4:	ldr	w0, [sp, #180]
   220b8:	mov	x2, #0xfffffffffffffff8    	// #-8
   220bc:	ldr	x5, [sp, #184]
   220c0:	cmp	w0, #0x0
   220c4:	cneg	w1, w0, lt  // lt = tstop
   220c8:	add	x21, sp, #0x150
   220cc:	mov	x0, x21
   220d0:	stp	x4, x3, [sp, #112]
   220d4:	add	x2, x2, w1, sxtw #3
   220d8:	sbfiz	x1, x1, #6, #32
   220dc:	ldr	x2, [x5, x2]
   220e0:	clz	x2, x2
   220e4:	sub	x1, x1, x2
   220e8:	bl	ca80 <mpfr_init2@plt>
   220ec:	ldr	x4, [sp, #112]
   220f0:	mov	x0, x21
   220f4:	mov	w2, #0x0                   	// #0
   220f8:	mov	x1, x4
   220fc:	bl	c240 <mpfr_set_z@plt>
   22100:	ldr	x3, [sp, #120]
   22104:	mov	x1, x21
   22108:	mov	x0, x21
   2210c:	mov	x2, x3
   22110:	mov	w3, #0x0                   	// #0
   22114:	bl	bb90 <mpfr_mul_2si@plt>
   22118:	ldr	x25, [sp, #168]
   2211c:	mov	w3, w23
   22120:	mov	x1, x21
   22124:	mov	x0, x22
   22128:	mov	x2, x25
   2212c:	bl	bef0 <mpfr_pow_z@plt>
   22130:	mov	w20, w0
   22134:	mov	x0, x21
   22138:	bl	c070 <mpfr_clear@plt>
   2213c:	ldr	x4, [sp, #112]
   22140:	mov	x0, x4
   22144:	bl	c170 <mpfr_mpz_clear@plt>
   22148:	mov	x0, x25
   2214c:	bl	c170 <mpfr_mpz_clear@plt>
   22150:	b	21c28 <mpfr_pow_general@@Base+0x198>
   22154:	mov	w23, #0x3                   	// #3
   22158:	str	w19, [sp, #144]
   2215c:	b	21ae8 <mpfr_pow_general@@Base+0x58>
   22160:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22164:	ldr	x1, [x0, #2512]
   22168:	add	x0, x0, #0x9d0
   2216c:	blr	x1
   22170:	ldr	x0, [x24, x0]
   22174:	ldr	x1, [x22, #16]
   22178:	sub	x0, x0, #0x1
   2217c:	sub	x0, x0, x21
   22180:	cmp	x1, x0
   22184:	b.ne	21c58 <mpfr_pow_general@@Base+0x1c8>  // b.any
   22188:	mov	x0, x22
   2218c:	bl	bf00 <mpfr_powerof2_raw@plt>
   22190:	cbz	w0, 21c58 <mpfr_pow_general@@Base+0x1c8>
   22194:	ldr	x1, [x22]
   22198:	cmp	x1, #0x1
   2219c:	b.le	22238 <mpfr_pow_general@@Base+0x7a8>
   221a0:	mov	x0, x22
   221a4:	bl	c120 <mpfr_nextabove@plt>
   221a8:	b	21c58 <mpfr_pow_general@@Base+0x1c8>
   221ac:	mov	w0, #0x1                   	// #1
   221b0:	str	w0, [sp, #128]
   221b4:	b	21ea0 <mpfr_pow_general@@Base+0x410>
   221b8:	sub	x3, x3, #0x1
   221bc:	mov	x1, x4
   221c0:	mov	x0, x4
   221c4:	mov	x2, #0x1                   	// #1
   221c8:	str	x4, [sp, #128]
   221cc:	str	x3, [sp, #160]
   221d0:	bl	c200 <__gmpz_mul_2exp@plt>
   221d4:	ldr	x4, [sp, #128]
   221d8:	ldr	x3, [sp, #160]
   221dc:	b	2205c <mpfr_pow_general@@Base+0x5cc>
   221e0:	cset	w0, eq  // eq = none
   221e4:	b	22080 <mpfr_pow_general@@Base+0x5f0>
   221e8:	ldr	x2, [sp, #152]
   221ec:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   221f0:	mov	w1, #0xce                  	// #206
   221f4:	add	x0, x0, #0x968
   221f8:	bl	cb40 <mpfr_assert_fail@plt>
   221fc:	ldr	x0, [sp, #224]
   22200:	b	21e18 <mpfr_pow_general@@Base+0x388>
   22204:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   22208:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   2220c:	add	x2, x2, #0x9c0
   22210:	add	x0, x0, #0x968
   22214:	mov	w1, #0x113                 	// #275
   22218:	bl	cb40 <mpfr_assert_fail@plt>
   2221c:	mov	w0, #0x1                   	// #1
   22220:	str	w0, [sp, #128]
   22224:	mov	x0, x4
   22228:	bl	c170 <mpfr_mpz_clear@plt>
   2222c:	ldr	x0, [sp, #168]
   22230:	bl	c170 <mpfr_mpz_clear@plt>
   22234:	b	21ea0 <mpfr_pow_general@@Base+0x410>
   22238:	add	x23, sp, #0x150
   2223c:	add	x1, x1, #0x1
   22240:	mov	x0, x23
   22244:	bl	ca80 <mpfr_init2@plt>
   22248:	ldr	w3, [x22, #8]
   2224c:	mov	x1, x22
   22250:	mov	w2, #0x1                   	// #1
   22254:	mov	x0, x23
   22258:	bl	c6a0 <mpfr_set4@plt>
   2225c:	mov	x0, x23
   22260:	bl	c120 <mpfr_nextabove@plt>
   22264:	mov	x2, x21
   22268:	mov	x1, x23
   2226c:	mov	w3, #0x0                   	// #0
   22270:	mov	x0, x22
   22274:	bl	bb90 <mpfr_mul_2si@plt>
   22278:	mov	w21, w0
   2227c:	mov	x0, x23
   22280:	bl	c070 <mpfr_clear@plt>
   22284:	b	21c84 <mpfr_pow_general@@Base+0x1f4>
   22288:	cmp	w23, #0x0
   2228c:	mov	w2, #0x1                   	// #1
   22290:	mov	x0, x22
   22294:	csel	w1, w23, w2, ne  // ne = any
   22298:	bl	c3c0 <mpfr_underflow@plt>
   2229c:	mov	w20, w0
   222a0:	ldr	x0, [sp, #136]
   222a4:	cbz	x0, 21cc4 <mpfr_pow_general@@Base+0x234>
   222a8:	mov	x2, x0
   222ac:	ldr	w0, [x0]
   222b0:	mov	w1, #0x9                   	// #9
   222b4:	orr	w0, w0, w1
   222b8:	str	w0, [x2]
   222bc:	b	21cc4 <mpfr_pow_general@@Base+0x234>
   222c0:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   222c4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   222c8:	add	x2, x2, #0x958
   222cc:	add	x0, x0, #0x968
   222d0:	mov	w1, #0x9f                  	// #159
   222d4:	bl	cb40 <mpfr_assert_fail@plt>

00000000000222d8 <mpfr_pow@@Base>:
   222d8:	stp	x29, x30, [sp, #-176]!
   222dc:	mov	x29, sp
   222e0:	stp	x25, x26, [sp, #64]
   222e4:	ldr	x25, [x1, #16]
   222e8:	stp	x19, x20, [sp, #16]
   222ec:	mov	x19, x1
   222f0:	stp	x21, x22, [sp, #32]
   222f4:	mov	x22, x0
   222f8:	mov	x21, x2
   222fc:	stp	x23, x24, [sp, #48]
   22300:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   22304:	mov	w24, w3
   22308:	cmp	x25, x0
   2230c:	ldr	x20, [x2, #16]
   22310:	b.le	22a5c <mpfr_pow@@Base+0x784>
   22314:	cmp	x20, x0
   22318:	b.le	22ac4 <mpfr_pow@@Base+0x7ec>
   2231c:	mov	x0, x2
   22320:	bl	c160 <mpfr_integer_p@plt>
   22324:	ldr	w1, [x19, #8]
   22328:	mov	w25, w0
   2232c:	cmp	w1, #0x0
   22330:	ccmp	w0, #0x0, #0x0, lt  // lt = tstop
   22334:	b.eq	229ec <mpfr_pow@@Base+0x714>  // b.none
   22338:	adrp	x26, 81000 <__gmpfr_l2b@@Base+0x200>
   2233c:	mov	x0, x19
   22340:	ldr	x1, [x26, #3928]
   22344:	bl	c9b0 <mpfr_cmpabs@plt>
   22348:	mov	w23, w0
   2234c:	cbz	w0, 22684 <mpfr_pow@@Base+0x3ac>
   22350:	mrs	x20, tpidr_el0
   22354:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22358:	ldr	x1, [x0, #2544]
   2235c:	add	x0, x0, #0x9f0
   22360:	blr	x1
   22364:	stp	x27, x28, [sp, #80]
   22368:	mov	x1, #0x3ffffffe            	// #1073741822
   2236c:	ldr	x10, [x20, x0]
   22370:	cmp	x10, x1
   22374:	b.le	223c0 <mpfr_pow@@Base+0xe8>
   22378:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2237c:	ldr	x1, [x0, #2512]
   22380:	add	x0, x0, #0x9d0
   22384:	blr	x1
   22388:	ldr	x0, [x20, x0]
   2238c:	mov	x1, #0xffffffffc0000001    	// #-1073741823
   22390:	cmp	x0, x1
   22394:	b.gt	223c0 <mpfr_pow@@Base+0xe8>
   22398:	ldr	x0, [x21, #16]
   2239c:	cmp	x0, #0xf
   223a0:	b.gt	223c0 <mpfr_pow@@Base+0xe8>
   223a4:	ldr	x0, [x19, #16]
   223a8:	mov	x2, #0x7ffe                	// #32766
   223ac:	mov	x1, #0xfffd                	// #65533
   223b0:	add	x0, x0, x2
   223b4:	cmp	x0, x1
   223b8:	b.ls	22b00 <mpfr_pow@@Base+0x828>  // b.plast
   223bc:	nop
   223c0:	ldr	w2, [x21, #8]
   223c4:	mul	w0, w2, w23
   223c8:	cmp	w0, #0x0
   223cc:	b.gt	228c8 <mpfr_pow@@Base+0x5f0>
   223d0:	ldr	x1, [x19, #16]
   223d4:	lsr	x0, x1, #63
   223d8:	and	w0, w0, #0xff
   223dc:	tbnz	w2, #31, 226c0 <mpfr_pow@@Base+0x3e8>
   223e0:	cbz	w0, 224ec <mpfr_pow@@Base+0x214>
   223e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   223e8:	ldr	x2, [x0, #2576]
   223ec:	add	x0, x0, #0xa10
   223f0:	blr	x2
   223f4:	ldr	w9, [x20, x0]
   223f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   223fc:	ldr	x2, [x0, #2512]
   22400:	add	x0, x0, #0x9d0
   22404:	blr	x2
   22408:	add	x4, sp, #0x70
   2240c:	ldr	x8, [x20, x0]
   22410:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   22414:	mov	x5, #0x3fffffffffffffff    	// #4611686018427387903
   22418:	mov	x7, #0x40                  	// #64
   2241c:	mov	w6, #0x1                   	// #1
   22420:	add	x28, sp, #0x90
   22424:	str	x2, [x20, x0]
   22428:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2242c:	ldr	x2, [x0, #2544]
   22430:	add	x0, x0, #0x9f0
   22434:	blr	x2
   22438:	mov	w3, #0x0                   	// #0
   2243c:	mov	x2, #0x0                   	// #0
   22440:	str	x5, [x20, x0]
   22444:	mov	x0, x28
   22448:	str	w9, [sp, #120]
   2244c:	stp	x8, x10, [sp, #128]
   22450:	str	x7, [sp, #144]
   22454:	str	w6, [sp, #152]
   22458:	str	x4, [sp, #168]
   2245c:	bl	ba80 <mpfr_set_si_2exp@plt>
   22460:	cbnz	w0, 22e18 <mpfr_pow@@Base+0xb40>
   22464:	ldr	w0, [x21, #8]
   22468:	tbnz	w0, #31, 22708 <mpfr_pow@@Base+0x430>
   2246c:	mov	x2, x21
   22470:	mov	x1, x28
   22474:	mov	x0, x28
   22478:	mov	w3, #0x2                   	// #2
   2247c:	bl	bd50 <mpfr_mul@plt>
   22480:	ldr	w0, [x21, #8]
   22484:	tbnz	w0, #31, 22774 <mpfr_pow@@Base+0x49c>
   22488:	mov	w1, #0x2                   	// #2
   2248c:	mov	x0, x28
   22490:	bl	c190 <mpfr_get_si@plt>
   22494:	mov	x2, x0
   22498:	ldr	w1, [sp, #120]
   2249c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   224a0:	ldr	x3, [x0, #2576]
   224a4:	add	x0, x0, #0xa10
   224a8:	blr	x3
   224ac:	str	w1, [x20, x0]
   224b0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   224b4:	ldr	x1, [x0, #2512]
   224b8:	add	x0, x0, #0x9d0
   224bc:	blr	x1
   224c0:	ldp	x1, x3, [sp, #128]
   224c4:	str	x1, [x20, x0]
   224c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   224cc:	ldr	x4, [x0, #2544]
   224d0:	add	x0, x0, #0x9f0
   224d4:	blr	x4
   224d8:	str	x3, [x20, x0]
   224dc:	cbnz	w24, 226cc <mpfr_pow@@Base+0x3f4>
   224e0:	sub	x1, x1, #0x2
   224e4:	cmp	x2, x1
   224e8:	b.le	22b84 <mpfr_pow@@Base+0x8ac>
   224ec:	cbz	w25, 224fc <mpfr_pow@@Base+0x224>
   224f0:	ldr	x0, [x21, #16]
   224f4:	cmp	x0, #0x100
   224f8:	b.le	22b08 <mpfr_pow@@Base+0x830>
   224fc:	mov	x0, x19
   22500:	bl	bf00 <mpfr_powerof2_raw@plt>
   22504:	cbnz	w0, 22780 <mpfr_pow@@Base+0x4a8>
   22508:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2250c:	ldr	x1, [x0, #2576]
   22510:	add	x0, x0, #0xa10
   22514:	blr	x1
   22518:	ldr	w6, [x20, x0]
   2251c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22520:	ldr	x1, [x0, #2512]
   22524:	add	x0, x0, #0x9d0
   22528:	blr	x1
   2252c:	add	x2, x20, x0
   22530:	ldr	x5, [x20, x0]
   22534:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22538:	ldr	x1, [x0, #2544]
   2253c:	add	x0, x0, #0x9f0
   22540:	blr	x1
   22544:	ldr	x4, [x20, x0]
   22548:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2254c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   22550:	str	x3, [x2]
   22554:	str	x1, [x20, x0]
   22558:	ldr	w0, [x19, #8]
   2255c:	str	w6, [sp, #120]
   22560:	stp	x5, x4, [sp, #128]
   22564:	cmp	w0, #0x0
   22568:	b.le	22738 <mpfr_pow@@Base+0x460>
   2256c:	ldr	x2, [x19, #16]
   22570:	cmp	w23, #0x0
   22574:	mov	x0, #0x1                   	// #1
   22578:	sub	x0, x0, x2
   2257c:	csel	x2, x0, x2, le
   22580:	cmp	x2, #0x1
   22584:	b.eq	22c68 <mpfr_pow@@Base+0x990>  // b.none
   22588:	b.le	22e00 <mpfr_pow@@Base+0xb28>
   2258c:	sub	x0, x2, #0x1
   22590:	mov	w2, #0x40                  	// #64
   22594:	clz	x0, x0
   22598:	sub	w2, w2, w0
   2259c:	sxtw	x2, w2
   225a0:	ldr	x1, [x21, #16]
   225a4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   225a8:	ldr	x3, [x0, #2576]
   225ac:	add	x0, x0, #0xa10
   225b0:	blr	x3
   225b4:	str	wzr, [x20, x0]
   225b8:	add	x27, x20, x0
   225bc:	adds	x2, x2, x1
   225c0:	b.pl	225d8 <mpfr_pow@@Base+0x300>  // b.nfrst
   225c4:	ldr	x0, [x22]
   225c8:	neg	x2, x2
   225cc:	add	x0, x0, #0x1
   225d0:	cmp	x2, x0
   225d4:	b.hi	22cb8 <mpfr_pow@@Base+0x9e0>  // b.pmore
   225d8:	mov	x2, x21
   225dc:	mov	w4, w25
   225e0:	mov	x1, x19
   225e4:	add	x5, sp, #0x78
   225e8:	mov	w3, w24
   225ec:	mov	x0, x22
   225f0:	bl	c6f0 <mpfr_pow_general@plt>
   225f4:	mov	w23, w0
   225f8:	ldp	x4, x3, [sp, #128]
   225fc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22600:	ldr	x2, [x0, #2576]
   22604:	add	x0, x0, #0xa10
   22608:	blr	x2
   2260c:	ldr	w1, [sp, #120]
   22610:	add	x5, x20, x0
   22614:	str	w1, [x20, x0]
   22618:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2261c:	ldr	x2, [x0, #2512]
   22620:	add	x0, x0, #0x9d0
   22624:	blr	x2
   22628:	ldr	x2, [x22, #16]
   2262c:	str	x4, [x20, x0]
   22630:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22634:	ldr	x6, [x0, #2544]
   22638:	add	x0, x0, #0x9f0
   2263c:	blr	x6
   22640:	str	x3, [x20, x0]
   22644:	cmp	x4, x2
   22648:	ccmp	x3, x2, #0x1, le
   2264c:	b.ge	2289c <mpfr_pow@@Base+0x5c4>  // b.tcont
   22650:	mov	w1, w23
   22654:	mov	w2, w24
   22658:	mov	x0, x22
   2265c:	bl	cb30 <mpfr_check_range@plt>
   22660:	ldp	x27, x28, [sp, #80]
   22664:	mov	w23, w0
   22668:	mov	w0, w23
   2266c:	ldp	x19, x20, [sp, #16]
   22670:	ldp	x21, x22, [sp, #32]
   22674:	ldp	x23, x24, [sp, #48]
   22678:	ldp	x25, x26, [sp, #64]
   2267c:	ldp	x29, x30, [sp], #176
   22680:	ret
   22684:	ldr	w0, [x19, #8]
   22688:	tbnz	w0, #31, 22760 <mpfr_pow@@Base+0x488>
   2268c:	mov	x1, #0x1                   	// #1
   22690:	mov	w3, w24
   22694:	mov	x0, x22
   22698:	mov	x2, #0x0                   	// #0
   2269c:	bl	ba80 <mpfr_set_si_2exp@plt>
   226a0:	mov	w23, w0
   226a4:	mov	w0, w23
   226a8:	ldp	x19, x20, [sp, #16]
   226ac:	ldp	x21, x22, [sp, #32]
   226b0:	ldp	x23, x24, [sp, #48]
   226b4:	ldp	x25, x26, [sp, #64]
   226b8:	ldp	x29, x30, [sp], #176
   226bc:	ret
   226c0:	cmp	x1, #0x1
   226c4:	cset	w0, gt
   226c8:	b	223e0 <mpfr_pow@@Base+0x108>
   226cc:	sub	x1, x1, #0x1
   226d0:	cmp	x2, x1
   226d4:	b.gt	224ec <mpfr_pow@@Base+0x214>
   226d8:	ldr	w0, [x19, #8]
   226dc:	tbz	w0, #31, 22df0 <mpfr_pow@@Base+0xb18>
   226e0:	mov	x0, x21
   226e4:	bl	cca0 <mpfr_odd_p@plt>
   226e8:	cbz	w0, 22df0 <mpfr_pow@@Base+0xb18>
   226ec:	mov	w2, #0xffffffff            	// #-1
   226f0:	mov	w1, w24
   226f4:	mov	x0, x22
   226f8:	bl	c3c0 <mpfr_underflow@plt>
   226fc:	mov	w23, w0
   22700:	ldp	x27, x28, [sp, #80]
   22704:	b	22668 <mpfr_pow@@Base+0x390>
   22708:	mov	x1, x28
   2270c:	mov	x0, x28
   22710:	mov	w3, #0x0                   	// #0
   22714:	mov	x2, #0x1                   	// #1
   22718:	bl	c530 <mpfr_sub_ui@plt>
   2271c:	cbz	w0, 2246c <mpfr_pow@@Base+0x194>
   22720:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   22724:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   22728:	add	x2, x2, #0xa08
   2272c:	add	x0, x0, #0x968
   22730:	mov	w1, #0x24f                 	// #591
   22734:	bl	cb40 <mpfr_assert_fail@plt>
   22738:	mov	x0, x19
   2273c:	mov	x2, #0x0                   	// #0
   22740:	mov	x1, #0xffffffffffffffff    	// #-1
   22744:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   22748:	cmp	w0, #0x0
   2274c:	b.le	22b4c <mpfr_pow@@Base+0x874>
   22750:	ldr	x0, [x19, #16]
   22754:	mov	x2, #0x1                   	// #1
   22758:	sub	x2, x2, x0
   2275c:	b	22580 <mpfr_pow@@Base+0x2a8>
   22760:	mov	x0, x21
   22764:	bl	cca0 <mpfr_odd_p@plt>
   22768:	cbz	w0, 2268c <mpfr_pow@@Base+0x3b4>
   2276c:	mov	x1, #0xffffffffffffffff    	// #-1
   22770:	b	22690 <mpfr_pow@@Base+0x3b8>
   22774:	mov	x0, x28
   22778:	bl	c120 <mpfr_nextabove@plt>
   2277c:	b	22488 <mpfr_pow@@Base+0x1b0>
   22780:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22784:	ldr	x1, [x0, #2576]
   22788:	add	x0, x0, #0xa10
   2278c:	blr	x1
   22790:	ldr	w7, [x20, x0]
   22794:	add	x26, x20, x0
   22798:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2279c:	ldr	x1, [x0, #2512]
   227a0:	add	x0, x0, #0x9d0
   227a4:	blr	x1
   227a8:	add	x3, x20, x0
   227ac:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   227b0:	ldr	x6, [x20, x0]
   227b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   227b8:	ldr	x5, [x0, #2544]
   227bc:	add	x0, x0, #0x9f0
   227c0:	blr	x5
   227c4:	ldr	x5, [x20, x0]
   227c8:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   227cc:	ldr	x1, [x21]
   227d0:	add	x25, sp, #0x90
   227d4:	ldr	x23, [x19, #16]
   227d8:	add	x1, x1, #0x40
   227dc:	ldr	w19, [x19, #8]
   227e0:	sub	x23, x23, #0x1
   227e4:	str	x2, [x20, x0]
   227e8:	mov	x0, x25
   227ec:	str	x4, [x3]
   227f0:	str	w7, [sp, #120]
   227f4:	stp	x6, x5, [sp, #128]
   227f8:	bl	ca80 <mpfr_init2@plt>
   227fc:	mov	x2, x23
   22800:	mov	x0, x25
   22804:	mov	x1, x21
   22808:	mov	w3, #0x0                   	// #0
   2280c:	bl	c960 <mpfr_mul_si@plt>
   22810:	cbnz	w0, 22e30 <mpfr_pow@@Base+0xb58>
   22814:	mov	w2, w24
   22818:	mov	x1, x25
   2281c:	mov	x0, x22
   22820:	str	wzr, [x26]
   22824:	bl	cc90 <mpfr_exp2@plt>
   22828:	mov	w23, w0
   2282c:	mov	x0, x25
   22830:	bl	c070 <mpfr_clear@plt>
   22834:	tbnz	w19, #31, 22c00 <mpfr_pow@@Base+0x928>
   22838:	ldp	x4, x2, [sp, #128]
   2283c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22840:	ldr	x1, [x0, #2576]
   22844:	add	x0, x0, #0xa10
   22848:	blr	x1
   2284c:	ldr	w6, [x20, x0]
   22850:	add	x5, x20, x0
   22854:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22858:	ldr	x3, [x0, #2512]
   2285c:	add	x0, x0, #0x9d0
   22860:	blr	x3
   22864:	ldr	w1, [sp, #120]
   22868:	ldr	x3, [x22, #16]
   2286c:	str	x4, [x20, x0]
   22870:	orr	w1, w1, w6
   22874:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22878:	ldr	x6, [x0, #2544]
   2287c:	add	x0, x0, #0x9f0
   22880:	blr	x6
   22884:	str	w1, [x5]
   22888:	cmp	x2, x3
   2288c:	str	x2, [x20, x0]
   22890:	ccmp	x4, x3, #0x0, ge  // ge = tcont
   22894:	str	w1, [sp, #120]
   22898:	b.gt	22650 <mpfr_pow@@Base+0x378>
   2289c:	cbz	w23, 22a3c <mpfr_pow@@Base+0x764>
   228a0:	orr	w1, w1, #0x8
   228a4:	mov	w0, w23
   228a8:	ldp	x27, x28, [sp, #80]
   228ac:	str	w1, [x5]
   228b0:	ldp	x19, x20, [sp, #16]
   228b4:	ldp	x21, x22, [sp, #32]
   228b8:	ldp	x23, x24, [sp, #48]
   228bc:	ldp	x25, x26, [sp, #64]
   228c0:	ldp	x29, x30, [sp], #176
   228c4:	ret
   228c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   228cc:	ldr	x1, [x0, #2576]
   228d0:	add	x0, x0, #0xa10
   228d4:	blr	x1
   228d8:	ldr	w4, [x20, x0]
   228dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   228e0:	ldr	x1, [x0, #2512]
   228e4:	add	x0, x0, #0x9d0
   228e8:	blr	x1
   228ec:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   228f0:	ldr	x3, [x20, x0]
   228f4:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   228f8:	add	x28, sp, #0x90
   228fc:	str	x1, [x20, x0]
   22900:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22904:	ldr	x1, [x0, #2544]
   22908:	add	x0, x0, #0x9f0
   2290c:	blr	x1
   22910:	str	x2, [x20, x0]
   22914:	mov	x1, #0x35                  	// #53
   22918:	mov	x0, x28
   2291c:	str	w4, [sp, #120]
   22920:	stp	x3, x10, [sp, #128]
   22924:	bl	ca80 <mpfr_init2@plt>
   22928:	ldr	w0, [x19, #8]
   2292c:	cmp	w0, #0x0
   22930:	b.gt	22aec <mpfr_pow@@Base+0x814>
   22934:	cmp	w23, #0x0
   22938:	mov	x1, x19
   2293c:	cset	w2, le
   22940:	mov	x0, x28
   22944:	add	w2, w2, #0x1
   22948:	bl	bd70 <mpfr_neg@plt>
   2294c:	mov	x1, x28
   22950:	mov	x0, x28
   22954:	mov	w2, #0x1                   	// #1
   22958:	bl	c1d0 <mpfr_log2@plt>
   2295c:	mov	x1, x28
   22960:	mov	x2, x21
   22964:	mov	w3, #0x1                   	// #1
   22968:	mov	x0, x28
   2296c:	bl	bd50 <mpfr_mul@plt>
   22970:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22974:	ldr	x1, [x0, #2544]
   22978:	add	x0, x0, #0x9f0
   2297c:	blr	x1
   22980:	add	x3, x20, x0
   22984:	ldr	x1, [x20, x0]
   22988:	mov	x2, #0x0                   	// #0
   2298c:	mov	x0, x28
   22990:	str	x3, [sp, #104]
   22994:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   22998:	mov	w27, w0
   2299c:	mov	x0, x28
   229a0:	bl	c070 <mpfr_clear@plt>
   229a4:	ldr	w2, [sp, #120]
   229a8:	ldp	x1, x10, [sp, #128]
   229ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   229b0:	ldr	x3, [x0, #2576]
   229b4:	add	x0, x0, #0xa10
   229b8:	blr	x3
   229bc:	ldr	x3, [sp, #104]
   229c0:	str	w2, [x20, x0]
   229c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   229c8:	ldr	x2, [x0, #2512]
   229cc:	add	x0, x0, #0x9d0
   229d0:	blr	x2
   229d4:	str	x1, [x20, x0]
   229d8:	cmp	w27, #0x0
   229dc:	str	x10, [x3]
   229e0:	b.gt	22dc0 <mpfr_pow@@Base+0xae8>
   229e4:	ldr	w2, [x21, #8]
   229e8:	b	223d0 <mpfr_pow@@Base+0xf8>
   229ec:	mrs	x1, tpidr_el0
   229f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   229f4:	ldr	x2, [x0, #2576]
   229f8:	add	x0, x0, #0xa10
   229fc:	blr	x2
   22a00:	add	x0, x1, x0
   22a04:	mov	x1, #0x2                   	// #2
   22a08:	movk	x1, #0x8000, lsl #48
   22a0c:	str	x1, [x22, #16]
   22a10:	mov	w23, #0x0                   	// #0
   22a14:	ldr	w1, [x0]
   22a18:	ldp	x19, x20, [sp, #16]
   22a1c:	orr	w1, w1, #0x4
   22a20:	str	w1, [x0]
   22a24:	mov	w0, w23
   22a28:	ldp	x21, x22, [sp, #32]
   22a2c:	ldp	x23, x24, [sp, #48]
   22a30:	ldp	x25, x26, [sp, #64]
   22a34:	ldp	x29, x30, [sp], #176
   22a38:	ret
   22a3c:	mov	w0, w23
   22a40:	ldp	x19, x20, [sp, #16]
   22a44:	ldp	x21, x22, [sp, #32]
   22a48:	ldp	x23, x24, [sp, #48]
   22a4c:	ldp	x25, x26, [sp, #64]
   22a50:	ldp	x27, x28, [sp, #80]
   22a54:	ldp	x29, x30, [sp], #176
   22a58:	ret
   22a5c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22a60:	cmp	x20, x0
   22a64:	b.eq	22ad0 <mpfr_pow@@Base+0x7f8>  // b.none
   22a68:	mov	x0, #0x2                   	// #2
   22a6c:	movk	x0, #0x8000, lsl #48
   22a70:	cmp	x25, x0
   22a74:	b.eq	22bd0 <mpfr_pow@@Base+0x8f8>  // b.none
   22a78:	mov	x0, #0x2                   	// #2
   22a7c:	movk	x0, #0x8000, lsl #48
   22a80:	cmp	x20, x0
   22a84:	b.eq	22c24 <mpfr_pow@@Base+0x94c>  // b.none
   22a88:	mov	x23, #0x8000000000000003    	// #-9223372036854775805
   22a8c:	cmp	x20, x23
   22a90:	b.eq	22b8c <mpfr_pow@@Base+0x8b4>  // b.none
   22a94:	ldr	w0, [x19, #8]
   22a98:	cmp	x25, x23
   22a9c:	b.eq	22c9c <mpfr_pow@@Base+0x9c4>  // b.none
   22aa0:	tbnz	w0, #31, 22b54 <mpfr_pow@@Base+0x87c>
   22aa4:	ldr	w0, [x21, #8]
   22aa8:	tbnz	w0, #31, 22c70 <mpfr_pow@@Base+0x998>
   22aac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22ab0:	str	x0, [x22, #16]
   22ab4:	mov	w0, #0x1                   	// #1
   22ab8:	mov	w23, #0x0                   	// #0
   22abc:	str	w0, [x22, #8]
   22ac0:	b	22668 <mpfr_pow@@Base+0x390>
   22ac4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22ac8:	cmp	x20, x0
   22acc:	b.ne	22a78 <mpfr_pow@@Base+0x7a0>  // b.any
   22ad0:	mov	w3, w24
   22ad4:	mov	x0, x22
   22ad8:	mov	x2, #0x0                   	// #0
   22adc:	mov	x1, #0x1                   	// #1
   22ae0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   22ae4:	mov	w23, w0
   22ae8:	b	22668 <mpfr_pow@@Base+0x390>
   22aec:	mov	x1, x19
   22af0:	mov	x0, x28
   22af4:	mov	w2, #0x1                   	// #1
   22af8:	bl	c1d0 <mpfr_log2@plt>
   22afc:	b	2295c <mpfr_pow@@Base+0x684>
   22b00:	cbz	w25, 224fc <mpfr_pow@@Base+0x224>
   22b04:	nop
   22b08:	add	x20, sp, #0x90
   22b0c:	mov	x0, x20
   22b10:	bl	bf90 <mpfr_mpz_init@plt>
   22b14:	mov	x1, x21
   22b18:	mov	w2, #0x0                   	// #0
   22b1c:	mov	x0, x20
   22b20:	bl	be00 <mpfr_get_z@plt>
   22b24:	mov	w3, w24
   22b28:	mov	x2, x20
   22b2c:	mov	x1, x19
   22b30:	mov	x0, x22
   22b34:	bl	bef0 <mpfr_pow_z@plt>
   22b38:	mov	w23, w0
   22b3c:	mov	x0, x20
   22b40:	bl	c170 <mpfr_mpz_clear@plt>
   22b44:	ldp	x27, x28, [sp, #80]
   22b48:	b	22668 <mpfr_pow@@Base+0x390>
   22b4c:	ldr	x2, [x19, #16]
   22b50:	b	22580 <mpfr_pow@@Base+0x2a8>
   22b54:	mov	x0, x21
   22b58:	bl	cca0 <mpfr_odd_p@plt>
   22b5c:	ldr	w2, [x21, #8]
   22b60:	mov	w1, w0
   22b64:	tbnz	w2, #31, 22d70 <mpfr_pow@@Base+0xa98>
   22b68:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22b6c:	str	x0, [x22, #16]
   22b70:	cbz	w1, 22ab4 <mpfr_pow@@Base+0x7dc>
   22b74:	mov	w0, #0xffffffff            	// #-1
   22b78:	mov	w23, #0x0                   	// #0
   22b7c:	str	w0, [x22, #8]
   22b80:	b	22668 <mpfr_pow@@Base+0x390>
   22b84:	mov	w24, #0x1                   	// #1
   22b88:	b	226d8 <mpfr_pow@@Base+0x400>
   22b8c:	cmp	x25, x20
   22b90:	b.eq	22d40 <mpfr_pow@@Base+0xa68>  // b.none
   22b94:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   22b98:	mov	x0, x19
   22b9c:	ldr	x1, [x1, #3928]
   22ba0:	bl	c9b0 <mpfr_cmpabs@plt>
   22ba4:	ldr	w1, [x21, #8]
   22ba8:	mov	w2, #0x1                   	// #1
   22bac:	str	w2, [x22, #8]
   22bb0:	mul	w0, w0, w1
   22bb4:	cmp	w0, #0x0
   22bb8:	b.gt	22d64 <mpfr_pow@@Base+0xa8c>
   22bbc:	b.eq	22ad0 <mpfr_pow@@Base+0x7f8>  // b.none
   22bc0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22bc4:	mov	w23, #0x0                   	// #0
   22bc8:	str	x0, [x22, #16]
   22bcc:	b	22668 <mpfr_pow@@Base+0x390>
   22bd0:	mrs	x1, tpidr_el0
   22bd4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22bd8:	ldr	x2, [x0, #2576]
   22bdc:	add	x0, x0, #0xa10
   22be0:	blr	x2
   22be4:	add	x0, x1, x0
   22be8:	mov	w23, #0x0                   	// #0
   22bec:	str	x25, [x22, #16]
   22bf0:	ldr	w1, [x0]
   22bf4:	orr	w1, w1, #0x4
   22bf8:	str	w1, [x0]
   22bfc:	b	22668 <mpfr_pow@@Base+0x390>
   22c00:	mov	x0, x21
   22c04:	bl	cca0 <mpfr_odd_p@plt>
   22c08:	cbz	w0, 22838 <mpfr_pow@@Base+0x560>
   22c0c:	neg	w23, w23
   22c10:	mov	w2, w24
   22c14:	mov	x1, x22
   22c18:	mov	x0, x22
   22c1c:	bl	bd70 <mpfr_neg@plt>
   22c20:	b	22838 <mpfr_pow@@Base+0x560>
   22c24:	mov	x0, x19
   22c28:	mov	x2, #0x0                   	// #0
   22c2c:	mov	x1, #0x1                   	// #1
   22c30:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   22c34:	cbz	w0, 22ad0 <mpfr_pow@@Base+0x7f8>
   22c38:	mrs	x1, tpidr_el0
   22c3c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22c40:	ldr	x2, [x0, #2576]
   22c44:	add	x0, x0, #0xa10
   22c48:	blr	x2
   22c4c:	add	x0, x1, x0
   22c50:	mov	w23, #0x0                   	// #0
   22c54:	str	x20, [x22, #16]
   22c58:	ldr	w1, [x0]
   22c5c:	orr	w1, w1, #0x4
   22c60:	str	w1, [x0]
   22c64:	b	22668 <mpfr_pow@@Base+0x390>
   22c68:	mov	x2, #0x0                   	// #0
   22c6c:	b	225a0 <mpfr_pow@@Base+0x2c8>
   22c70:	mrs	x1, tpidr_el0
   22c74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22c78:	ldr	x2, [x0, #2576]
   22c7c:	add	x0, x0, #0xa10
   22c80:	blr	x2
   22c84:	add	x0, x1, x0
   22c88:	str	x23, [x22, #16]
   22c8c:	ldr	w1, [x0]
   22c90:	orr	w1, w1, #0x20
   22c94:	str	w1, [x0]
   22c98:	b	22ab4 <mpfr_pow@@Base+0x7dc>
   22c9c:	tbnz	w0, #31, 22d9c <mpfr_pow@@Base+0xac4>
   22ca0:	ldr	w1, [x21, #8]
   22ca4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22ca8:	cmp	w1, #0x0
   22cac:	csel	x25, x0, x25, le
   22cb0:	str	x25, [x22, #16]
   22cb4:	b	22ab4 <mpfr_pow@@Base+0x7dc>
   22cb8:	ldr	w0, [x21, #8]
   22cbc:	mov	w4, w24
   22cc0:	ldr	x1, [x26, #3928]
   22cc4:	cmp	w0, #0x0
   22cc8:	cset	w3, gt
   22ccc:	mov	x0, x22
   22cd0:	eor	w3, w3, w23, lsr #31
   22cd4:	bl	c540 <mpfr_round_near_x@plt>
   22cd8:	mov	w23, w0
   22cdc:	cbz	w0, 225d8 <mpfr_pow@@Base+0x300>
   22ce0:	ldr	w3, [x27]
   22ce4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22ce8:	ldr	x2, [x0, #2512]
   22cec:	add	x0, x0, #0x9d0
   22cf0:	blr	x2
   22cf4:	ldr	w1, [sp, #120]
   22cf8:	orr	w1, w1, w3
   22cfc:	str	w1, [x27]
   22d00:	ldp	x4, x3, [sp, #128]
   22d04:	str	x4, [x20, x0]
   22d08:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22d0c:	ldr	x2, [x0, #2544]
   22d10:	add	x0, x0, #0x9f0
   22d14:	blr	x2
   22d18:	str	x3, [x20, x0]
   22d1c:	ldr	x2, [x22, #16]
   22d20:	str	w1, [sp, #120]
   22d24:	cmp	x4, x2
   22d28:	ccmp	x3, x2, #0x1, le
   22d2c:	b.lt	22650 <mpfr_pow@@Base+0x378>  // b.tstop
   22d30:	orr	w1, w1, #0x8
   22d34:	str	w1, [x27]
   22d38:	ldp	x27, x28, [sp, #80]
   22d3c:	b	22668 <mpfr_pow@@Base+0x390>
   22d40:	ldr	w2, [x21, #8]
   22d44:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22d48:	mov	w1, #0x1                   	// #1
   22d4c:	mov	w23, #0x0                   	// #0
   22d50:	cmp	w2, #0x0
   22d54:	str	w1, [x22, #8]
   22d58:	csel	x25, x25, x0, gt
   22d5c:	str	x25, [x22, #16]
   22d60:	b	22668 <mpfr_pow@@Base+0x390>
   22d64:	mov	w23, #0x0                   	// #0
   22d68:	str	x20, [x22, #16]
   22d6c:	b	22668 <mpfr_pow@@Base+0x390>
   22d70:	mrs	x2, tpidr_el0
   22d74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22d78:	ldr	x3, [x0, #2576]
   22d7c:	add	x0, x0, #0xa10
   22d80:	blr	x3
   22d84:	add	x0, x2, x0
   22d88:	str	x23, [x22, #16]
   22d8c:	ldr	w2, [x0]
   22d90:	orr	w2, w2, #0x20
   22d94:	str	w2, [x0]
   22d98:	b	22b70 <mpfr_pow@@Base+0x898>
   22d9c:	mov	x0, x21
   22da0:	bl	cca0 <mpfr_odd_p@plt>
   22da4:	ldr	w2, [x21, #8]
   22da8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   22dac:	cmp	w2, #0x0
   22db0:	csel	x25, x25, x1, gt
   22db4:	str	x25, [x22, #16]
   22db8:	cbnz	w0, 22b74 <mpfr_pow@@Base+0x89c>
   22dbc:	b	22ab4 <mpfr_pow@@Base+0x7dc>
   22dc0:	ldr	w0, [x19, #8]
   22dc4:	tbz	w0, #31, 22df8 <mpfr_pow@@Base+0xb20>
   22dc8:	mov	x0, x21
   22dcc:	bl	cca0 <mpfr_odd_p@plt>
   22dd0:	cbz	w0, 22df8 <mpfr_pow@@Base+0xb20>
   22dd4:	mov	w2, #0xffffffff            	// #-1
   22dd8:	mov	w1, w24
   22ddc:	mov	x0, x22
   22de0:	bl	bf40 <mpfr_overflow@plt>
   22de4:	mov	w23, w0
   22de8:	ldp	x27, x28, [sp, #80]
   22dec:	b	22668 <mpfr_pow@@Base+0x390>
   22df0:	mov	w2, #0x1                   	// #1
   22df4:	b	226f0 <mpfr_pow@@Base+0x418>
   22df8:	mov	w2, #0x1                   	// #1
   22dfc:	b	22dd8 <mpfr_pow@@Base+0xb00>
   22e00:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   22e04:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   22e08:	add	x2, x2, #0xa28
   22e0c:	add	x0, x0, #0x968
   22e10:	mov	w1, #0x2aa                 	// #682
   22e14:	bl	cb40 <mpfr_assert_fail@plt>
   22e18:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   22e1c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   22e20:	add	x2, x2, #0xa08
   22e24:	add	x0, x0, #0x968
   22e28:	mov	w1, #0x24b                 	// #587
   22e2c:	bl	cb40 <mpfr_assert_fail@plt>
   22e30:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   22e34:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   22e38:	add	x2, x2, #0xa18
   22e3c:	add	x0, x0, #0x968
   22e40:	mov	w1, #0x289                 	// #649
   22e44:	bl	cb40 <mpfr_assert_fail@plt>

0000000000022e48 <mpfr_pow_si@@Base>:
   22e48:	stp	x29, x30, [sp, #-240]!
   22e4c:	mov	x29, sp
   22e50:	stp	x19, x20, [sp, #16]
   22e54:	tbz	x2, #63, 2317c <mpfr_pow_si@@Base+0x334>
   22e58:	stp	x25, x26, [sp, #64]
   22e5c:	mov	x26, x1
   22e60:	mov	x19, x2
   22e64:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   22e68:	mov	x20, x0
   22e6c:	ldr	x2, [x26, #16]
   22e70:	cmp	x2, x1
   22e74:	b.le	23234 <mpfr_pow_si@@Base+0x3ec>
   22e78:	ldrsw	x1, [x26, #8]
   22e7c:	sub	x2, x2, #0x1
   22e80:	mov	x0, x26
   22e84:	stp	x21, x22, [sp, #32]
   22e88:	mov	w21, w3
   22e8c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   22e90:	cbz	w0, 230c4 <mpfr_pow_si@@Base+0x27c>
   22e94:	neg	x0, x19
   22e98:	stp	x23, x24, [sp, #48]
   22e9c:	mov	x1, x0
   22ea0:	str	x1, [sp, #104]
   22ea4:	clz	x1, x1
   22ea8:	mov	w0, #0x40                  	// #64
   22eac:	sub	w1, w0, w1
   22eb0:	ldr	x23, [x20]
   22eb4:	sxtw	x1, w1
   22eb8:	stp	x27, x28, [sp, #80]
   22ebc:	add	x22, x1, x23
   22ec0:	str	x1, [sp, #128]
   22ec4:	cmp	x23, #0x1
   22ec8:	add	x22, x22, #0x3
   22ecc:	b.eq	22ee4 <mpfr_pow_si@@Base+0x9c>  // b.none
   22ed0:	b.le	233e0 <mpfr_pow_si@@Base+0x598>
   22ed4:	sub	x1, x23, #0x1
   22ed8:	clz	x1, x1
   22edc:	sub	w0, w0, w1
   22ee0:	add	x22, x22, w0, sxtw
   22ee4:	mrs	x27, tpidr_el0
   22ee8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22eec:	ldr	x1, [x0, #2576]
   22ef0:	add	x0, x0, #0xa10
   22ef4:	blr	x1
   22ef8:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   22efc:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   22f00:	add	x28, sp, #0x90
   22f04:	mov	x1, x22
   22f08:	ldr	w0, [x27, x0]
   22f0c:	mov	w25, #0x1                   	// #1
   22f10:	str	w0, [sp, #100]
   22f14:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22f18:	ldr	x3, [x0, #2512]
   22f1c:	add	x0, x0, #0x9d0
   22f20:	blr	x3
   22f24:	add	x3, x27, x0
   22f28:	ldr	x0, [x27, x0]
   22f2c:	str	x0, [sp, #112]
   22f30:	str	x7, [x3]
   22f34:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22f38:	ldr	x4, [x0, #2544]
   22f3c:	add	x0, x0, #0x9f0
   22f40:	blr	x4
   22f44:	ldr	x3, [x27, x0]
   22f48:	str	x2, [x27, x0]
   22f4c:	mov	x0, x28
   22f50:	str	x3, [sp, #120]
   22f54:	bl	ca80 <mpfr_init2@plt>
   22f58:	ldr	x0, [x26, #16]
   22f5c:	cmp	x0, #0x0
   22f60:	b.le	22f74 <mpfr_pow_si@@Base+0x12c>
   22f64:	ldr	w0, [x26, #8]
   22f68:	cmp	w0, #0x0
   22f6c:	cset	w25, le
   22f70:	add	w25, w25, #0x2
   22f74:	mov	x0, #0x40                  	// #64
   22f78:	str	x0, [sp, #136]
   22f7c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   22f80:	ldr	x1, [x0, #2576]
   22f84:	add	x0, x0, #0xa10
   22f88:	blr	x1
   22f8c:	add	x24, x27, x0
   22f90:	mov	w3, w25
   22f94:	mov	x2, x26
   22f98:	mov	x1, #0x1                   	// #1
   22f9c:	str	wzr, [x27, x0]
   22fa0:	mov	x0, x28
   22fa4:	bl	c2f0 <mpfr_ui_div@plt>
   22fa8:	ldr	w0, [x24]
   22fac:	tbnz	w0, #1, 231c8 <mpfr_pow_si@@Base+0x380>
   22fb0:	ldr	x2, [sp, #104]
   22fb4:	mov	w3, w21
   22fb8:	mov	x1, x28
   22fbc:	mov	x0, x28
   22fc0:	str	wzr, [x24]
   22fc4:	bl	bf70 <mpfr_pow_ui@plt>
   22fc8:	ldr	w0, [x24]
   22fcc:	tbnz	w0, #1, 231c8 <mpfr_pow_si@@Base+0x380>
   22fd0:	tbnz	w0, #0, 232e4 <mpfr_pow_si@@Base+0x49c>
   22fd4:	ldr	x0, [sp, #160]
   22fd8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   22fdc:	cmp	x0, x1
   22fe0:	b.le	232a0 <mpfr_pow_si@@Base+0x458>
   22fe4:	ldr	x1, [sp, #144]
   22fe8:	cmp	w21, #0x0
   22fec:	ldr	x2, [sp, #128]
   22ff0:	sub	x1, x1, #0x1
   22ff4:	ldr	x0, [sp, #168]
   22ff8:	sub	x2, x22, x2
   22ffc:	asr	x1, x1, #6
   23000:	cinc	x3, x23, eq  // eq = none
   23004:	sub	x2, x2, #0x2
   23008:	add	x1, x1, #0x1
   2300c:	bl	c370 <mpfr_round_p@plt>
   23010:	cbz	w0, 232a0 <mpfr_pow_si@@Base+0x458>
   23014:	ldr	w3, [sp, #152]
   23018:	mov	w2, w21
   2301c:	mov	x1, x28
   23020:	mov	x0, x20
   23024:	bl	c6a0 <mpfr_set4@plt>
   23028:	mov	w19, w0
   2302c:	mov	x0, x28
   23030:	bl	c070 <mpfr_clear@plt>
   23034:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   23038:	ldr	x1, [x0, #2576]
   2303c:	add	x0, x0, #0xa10
   23040:	blr	x1
   23044:	add	x2, x27, x0
   23048:	ldr	w1, [sp, #100]
   2304c:	str	w1, [x27, x0]
   23050:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   23054:	ldr	x3, [x0, #2512]
   23058:	add	x0, x0, #0x9d0
   2305c:	blr	x3
   23060:	ldr	x3, [sp, #112]
   23064:	str	x3, [x27, x0]
   23068:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2306c:	ldr	x4, [x0, #2544]
   23070:	add	x0, x0, #0x9f0
   23074:	blr	x4
   23078:	ldr	x1, [x20, #16]
   2307c:	ldr	x4, [sp, #120]
   23080:	str	x4, [x27, x0]
   23084:	cmp	x4, x1
   23088:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2308c:	b.le	2314c <mpfr_pow_si@@Base+0x304>
   23090:	mov	w2, w21
   23094:	mov	w1, w19
   23098:	mov	x0, x20
   2309c:	bl	cb30 <mpfr_check_range@plt>
   230a0:	ldp	x21, x22, [sp, #32]
   230a4:	mov	w19, w0
   230a8:	ldp	x23, x24, [sp, #48]
   230ac:	ldp	x25, x26, [sp, #64]
   230b0:	ldp	x27, x28, [sp, #80]
   230b4:	mov	w0, w19
   230b8:	ldp	x19, x20, [sp, #16]
   230bc:	ldp	x29, x30, [sp], #240
   230c0:	ret
   230c4:	ldr	x1, [x26, #16]
   230c8:	cmn	x19, #0x1
   230cc:	cset	w0, eq  // eq = none
   230d0:	sub	x1, x1, #0x1
   230d4:	cmp	x1, #0x0
   230d8:	ccmp	w0, #0x0, #0x0, gt
   230dc:	b.eq	23194 <mpfr_pow_si@@Base+0x34c>  // b.none
   230e0:	cmp	x1, #0x0
   230e4:	ccmp	w0, #0x0, #0x0, lt  // lt = tstop
   230e8:	b.ne	231c0 <mpfr_pow_si@@Base+0x378>  // b.any
   230ec:	mrs	x3, tpidr_el0
   230f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   230f4:	ldr	x2, [x0, #2544]
   230f8:	add	x0, x0, #0x9f0
   230fc:	blr	x2
   23100:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   23104:	ldr	x0, [x3, x0]
   23108:	sub	x0, x0, #0x1
   2310c:	sdiv	x0, x0, x19
   23110:	cmp	x0, x1
   23114:	b.le	231c0 <mpfr_pow_si@@Base+0x378>
   23118:	mov	x1, #0x1                   	// #1
   2311c:	tbz	w19, #0, 23124 <mpfr_pow_si@@Base+0x2dc>
   23120:	ldrsw	x1, [x26, #8]
   23124:	mov	w3, w21
   23128:	mov	x0, x20
   2312c:	bl	ba80 <mpfr_set_si_2exp@plt>
   23130:	mov	w19, w0
   23134:	mov	w0, w19
   23138:	ldp	x19, x20, [sp, #16]
   2313c:	ldp	x21, x22, [sp, #32]
   23140:	ldp	x25, x26, [sp, #64]
   23144:	ldp	x29, x30, [sp], #240
   23148:	ret
   2314c:	cbz	w19, 2315c <mpfr_pow_si@@Base+0x314>
   23150:	ldr	w0, [sp, #100]
   23154:	orr	w0, w0, #0x8
   23158:	str	w0, [x2]
   2315c:	mov	w0, w19
   23160:	ldp	x19, x20, [sp, #16]
   23164:	ldp	x21, x22, [sp, #32]
   23168:	ldp	x23, x24, [sp, #48]
   2316c:	ldp	x25, x26, [sp, #64]
   23170:	ldp	x27, x28, [sp, #80]
   23174:	ldp	x29, x30, [sp], #240
   23178:	ret
   2317c:	bl	bf70 <mpfr_pow_ui@plt>
   23180:	mov	w19, w0
   23184:	mov	w0, w19
   23188:	ldp	x19, x20, [sp, #16]
   2318c:	ldp	x29, x30, [sp], #240
   23190:	ret
   23194:	mrs	x2, tpidr_el0
   23198:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2319c:	ldr	x3, [x0, #2512]
   231a0:	add	x0, x0, #0x9d0
   231a4:	blr	x3
   231a8:	ldr	x0, [x2, x0]
   231ac:	mov	x2, #0xbfffffffffffffff    	// #-4611686018427387905
   231b0:	sub	x0, x0, #0x1
   231b4:	sdiv	x0, x0, x19
   231b8:	cmp	x0, x1
   231bc:	b.lt	23118 <mpfr_pow_si@@Base+0x2d0>  // b.tstop
   231c0:	mul	x2, x19, x1
   231c4:	b	23118 <mpfr_pow_si@@Base+0x2d0>
   231c8:	mov	x0, x28
   231cc:	bl	c070 <mpfr_clear@plt>
   231d0:	mov	w2, #0x1                   	// #1
   231d4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   231d8:	ldr	x1, [x0, #2576]
   231dc:	add	x0, x0, #0xa10
   231e0:	blr	x1
   231e4:	ldr	w1, [sp, #100]
   231e8:	str	w1, [x27, x0]
   231ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   231f0:	ldr	x1, [x0, #2512]
   231f4:	add	x0, x0, #0x9d0
   231f8:	blr	x1
   231fc:	ldr	x1, [sp, #112]
   23200:	str	x1, [x27, x0]
   23204:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   23208:	ldr	x1, [x0, #2544]
   2320c:	add	x0, x0, #0x9f0
   23210:	blr	x1
   23214:	ldr	x1, [sp, #120]
   23218:	str	x1, [x27, x0]
   2321c:	ldr	x0, [sp, #104]
   23220:	tbnz	w0, #0, 233d8 <mpfr_pow_si@@Base+0x590>
   23224:	mov	w1, w21
   23228:	mov	x0, x20
   2322c:	bl	bf40 <mpfr_overflow@plt>
   23230:	b	230a0 <mpfr_pow_si@@Base+0x258>
   23234:	mov	x0, #0x2                   	// #2
   23238:	movk	x0, #0x8000, lsl #48
   2323c:	cmp	x2, x0
   23240:	b.eq	2338c <mpfr_pow_si@@Base+0x544>  // b.none
   23244:	ldr	w0, [x26, #8]
   23248:	mvn	x19, x19
   2324c:	and	x19, x19, #0x1
   23250:	cmp	w0, #0x0
   23254:	csinc	w19, w19, wzr, le
   23258:	cmp	x2, x1
   2325c:	b.eq	232d8 <mpfr_pow_si@@Base+0x490>  // b.none
   23260:	mrs	x2, tpidr_el0
   23264:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   23268:	ldr	x3, [x0, #2576]
   2326c:	add	x0, x0, #0xa10
   23270:	blr	x3
   23274:	add	x0, x2, x0
   23278:	str	x1, [x20, #16]
   2327c:	ldr	w1, [x0]
   23280:	orr	w1, w1, #0x20
   23284:	str	w1, [x0]
   23288:	cbz	w19, 2337c <mpfr_pow_si@@Base+0x534>
   2328c:	mov	w0, #0x1                   	// #1
   23290:	mov	w19, #0x0                   	// #0
   23294:	ldp	x25, x26, [sp, #64]
   23298:	str	w0, [x20, #8]
   2329c:	b	230b4 <mpfr_pow_si@@Base+0x26c>
   232a0:	ldr	x1, [sp, #136]
   232a4:	mov	x0, #0xfffffffffffffeff    	// #-257
   232a8:	movk	x0, #0x7fff, lsl #48
   232ac:	sub	x0, x0, x22
   232b0:	cmp	x0, x1
   232b4:	b.lt	233c0 <mpfr_pow_si@@Base+0x578>  // b.tstop
   232b8:	add	x22, x22, x1
   232bc:	mov	x0, x28
   232c0:	mov	x1, x22
   232c4:	add	x2, x22, x22, lsr #63
   232c8:	asr	x2, x2, #1
   232cc:	str	x2, [sp, #136]
   232d0:	bl	bed0 <mpfr_set_prec@plt>
   232d4:	b	22f7c <mpfr_pow_si@@Base+0x134>
   232d8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   232dc:	str	x0, [x20, #16]
   232e0:	b	23288 <mpfr_pow_si@@Base+0x440>
   232e4:	mov	x0, x28
   232e8:	bl	c070 <mpfr_clear@plt>
   232ec:	cbnz	w21, 23410 <mpfr_pow_si@@Base+0x5c8>
   232f0:	add	x22, sp, #0xb0
   232f4:	add	x23, sp, #0xd0
   232f8:	mov	x0, x22
   232fc:	mov	x1, #0x2                   	// #2
   23300:	bl	ca80 <mpfr_init2@plt>
   23304:	mov	x0, x23
   23308:	mov	x1, #0x40                  	// #64
   2330c:	bl	ca80 <mpfr_init2@plt>
   23310:	mov	x1, x19
   23314:	mov	x0, x23
   23318:	mov	w3, #0x0                   	// #0
   2331c:	mov	x2, #0x0                   	// #0
   23320:	bl	ba80 <mpfr_set_si_2exp@plt>
   23324:	cbnz	w0, 233f8 <mpfr_pow_si@@Base+0x5b0>
   23328:	mov	x1, x26
   2332c:	mov	x2, x23
   23330:	mov	x5, #0x0                   	// #0
   23334:	mov	w4, #0x1                   	// #1
   23338:	mov	w3, #0x0                   	// #0
   2333c:	mov	x0, x22
   23340:	bl	c6f0 <mpfr_pow_general@plt>
   23344:	mov	w19, w0
   23348:	mov	x0, x23
   2334c:	bl	c070 <mpfr_clear@plt>
   23350:	ldr	w3, [sp, #184]
   23354:	mov	x1, x22
   23358:	ldr	w0, [sp, #100]
   2335c:	mov	w2, #0x0                   	// #0
   23360:	orr	w0, w0, #0x1
   23364:	str	w0, [sp, #100]
   23368:	mov	x0, x20
   2336c:	bl	c6a0 <mpfr_set4@plt>
   23370:	mov	x0, x22
   23374:	bl	c070 <mpfr_clear@plt>
   23378:	b	23034 <mpfr_pow_si@@Base+0x1ec>
   2337c:	mov	w0, #0xffffffff            	// #-1
   23380:	ldp	x25, x26, [sp, #64]
   23384:	str	w0, [x20, #8]
   23388:	b	230b4 <mpfr_pow_si@@Base+0x26c>
   2338c:	mrs	x1, tpidr_el0
   23390:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   23394:	ldr	x3, [x0, #2576]
   23398:	add	x0, x0, #0xa10
   2339c:	blr	x3
   233a0:	add	x0, x1, x0
   233a4:	mov	w19, #0x0                   	// #0
   233a8:	ldp	x25, x26, [sp, #64]
   233ac:	str	x2, [x20, #16]
   233b0:	ldr	w1, [x0]
   233b4:	orr	w1, w1, #0x4
   233b8:	str	w1, [x0]
   233bc:	b	230b4 <mpfr_pow_si@@Base+0x26c>
   233c0:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   233c4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   233c8:	add	x2, x2, #0x470
   233cc:	add	x0, x0, #0xa38
   233d0:	mov	w1, #0xed                  	// #237
   233d4:	bl	cb40 <mpfr_assert_fail@plt>
   233d8:	ldr	w2, [x26, #8]
   233dc:	b	23224 <mpfr_pow_si@@Base+0x3dc>
   233e0:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   233e4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   233e8:	add	x2, x2, #0x458
   233ec:	add	x0, x0, #0xa38
   233f0:	mov	w1, #0x9d                  	// #157
   233f4:	bl	cb40 <mpfr_assert_fail@plt>
   233f8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   233fc:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   23400:	add	x2, x2, #0xa18
   23404:	add	x0, x0, #0xa38
   23408:	mov	w1, #0xd8                  	// #216
   2340c:	bl	cb40 <mpfr_assert_fail@plt>
   23410:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   23414:	ldr	x1, [x0, #2512]
   23418:	add	x0, x0, #0x9d0
   2341c:	blr	x1
   23420:	ldr	x1, [sp, #112]
   23424:	str	x1, [x27, x0]
   23428:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2342c:	ldr	x1, [x0, #2544]
   23430:	add	x0, x0, #0x9f0
   23434:	blr	x1
   23438:	ldr	w1, [sp, #100]
   2343c:	str	w1, [x24]
   23440:	ldr	x1, [sp, #120]
   23444:	str	x1, [x27, x0]
   23448:	ldr	x0, [sp, #104]
   2344c:	tbz	w0, #0, 23464 <mpfr_pow_si@@Base+0x61c>
   23450:	ldr	w2, [x26, #8]
   23454:	mov	w1, w21
   23458:	mov	x0, x20
   2345c:	bl	c3c0 <mpfr_underflow@plt>
   23460:	b	230a0 <mpfr_pow_si@@Base+0x258>
   23464:	mov	w2, #0x1                   	// #1
   23468:	b	23454 <mpfr_pow_si@@Base+0x60c>
   2346c:	nop

0000000000023470 <mpfr_pow_ui@@Base>:
   23470:	stp	x29, x30, [sp, #-192]!
   23474:	mov	x29, sp
   23478:	stp	x19, x20, [sp, #16]
   2347c:	cbz	x2, 2383c <mpfr_pow_ui@@Base+0x3cc>
   23480:	mov	x20, x2
   23484:	stp	x21, x22, [sp, #32]
   23488:	mov	x21, x1
   2348c:	ldr	x2, [x1, #16]
   23490:	stp	x23, x24, [sp, #48]
   23494:	mov	x23, x0
   23498:	stp	x25, x26, [sp, #64]
   2349c:	mov	w25, w3
   234a0:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   234a4:	cmp	x2, x3
   234a8:	b.le	23858 <mpfr_pow_ui@@Base+0x3e8>
   234ac:	cmp	x20, #0x2
   234b0:	b.ls	238a0 <mpfr_pow_ui@@Base+0x430>  // b.plast
   234b4:	mrs	x19, tpidr_el0
   234b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   234bc:	ldr	x1, [x0, #2576]
   234c0:	add	x0, x0, #0xa10
   234c4:	blr	x1
   234c8:	stp	x27, x28, [sp, #80]
   234cc:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   234d0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   234d4:	ldr	w0, [x19, x0]
   234d8:	str	w0, [sp, #104]
   234dc:	ldr	x1, [x23]
   234e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   234e4:	ldr	x3, [x0, #2512]
   234e8:	add	x0, x0, #0x9d0
   234ec:	blr	x3
   234f0:	add	x3, x19, x0
   234f4:	ldr	x0, [x19, x0]
   234f8:	str	x0, [sp, #112]
   234fc:	str	x4, [x3]
   23500:	add	x22, x1, #0x43
   23504:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   23508:	ldr	x5, [x0, #2544]
   2350c:	add	x0, x0, #0x9f0
   23510:	blr	x5
   23514:	ldr	x3, [x19, x0]
   23518:	str	x2, [x19, x0]
   2351c:	str	x3, [sp, #120]
   23520:	cmp	x1, #0x1
   23524:	b.eq	23958 <mpfr_pow_ui@@Base+0x4e8>  // b.none
   23528:	b.le	23968 <mpfr_pow_ui@@Base+0x4f8>
   2352c:	sub	x1, x1, #0x1
   23530:	mov	w26, #0x40                  	// #64
   23534:	clz	x1, x1
   23538:	sub	w1, w26, w1
   2353c:	add	x0, x22, w1, sxtw
   23540:	str	x0, [sp, #96]
   23544:	mov	x1, x0
   23548:	add	x27, sp, #0xa0
   2354c:	mov	w22, #0x27                  	// #39
   23550:	mov	x0, x27
   23554:	bl	ca80 <mpfr_init2@plt>
   23558:	ldr	w0, [x21, #8]
   2355c:	mov	x1, #0x40                  	// #64
   23560:	str	x1, [sp, #136]
   23564:	cmp	w0, #0x0
   23568:	cset	w24, le
   2356c:	add	w24, w24, #0x2
   23570:	mov	x0, x20
   23574:	mov	w1, #0x0                   	// #0
   23578:	mov	w7, w1
   2357c:	lsr	x0, x0, #1
   23580:	add	w1, w1, #0x1
   23584:	cbnz	x0, 23578 <mpfr_pow_ui@@Base+0x108>
   23588:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2358c:	ldr	x2, [x0, #2576]
   23590:	add	x0, x0, #0xa10
   23594:	blr	x2
   23598:	sxtw	x1, w1
   2359c:	mov	x2, x21
   235a0:	mov	w3, #0x2                   	// #2
   235a4:	str	wzr, [x19, x0]
   235a8:	mov	x0, x27
   235ac:	str	w7, [sp, #108]
   235b0:	str	x1, [sp, #128]
   235b4:	mov	x1, x21
   235b8:	bl	bd50 <mpfr_mul@plt>
   235bc:	mov	w28, w0
   235c0:	ldr	w7, [sp, #108]
   235c4:	sub	w1, w7, #0x1
   235c8:	lsr	x1, x20, x1
   235cc:	tbnz	w1, #0, 2376c <mpfr_pow_ui@@Base+0x2fc>
   235d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   235d4:	ldr	x1, [x0, #2576]
   235d8:	add	x0, x0, #0xa10
   235dc:	blr	x1
   235e0:	sub	w26, w7, #0x2
   235e4:	ldr	w0, [x19, x0]
   235e8:	cmp	w7, #0x1
   235ec:	b.eq	23638 <mpfr_pow_ui@@Base+0x1c8>  // b.none
   235f0:	tst	w0, w22
   235f4:	b.ne	23638 <mpfr_pow_ui@@Base+0x1c8>  // b.any
   235f8:	mov	x2, x27
   235fc:	mov	x1, x27
   23600:	mov	x0, x27
   23604:	mov	w3, #0x2                   	// #2
   23608:	bl	bd50 <mpfr_mul@plt>
   2360c:	orr	w28, w28, w0
   23610:	lsr	x0, x20, x26
   23614:	tbnz	w0, #0, 2371c <mpfr_pow_ui@@Base+0x2ac>
   23618:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2361c:	ldr	x1, [x0, #2576]
   23620:	add	x0, x0, #0xa10
   23624:	blr	x1
   23628:	sub	w26, w26, #0x1
   2362c:	ldr	w0, [x19, x0]
   23630:	cmn	w26, #0x1
   23634:	b.ne	235f0 <mpfr_pow_ui@@Base+0x180>  // b.any
   23638:	and	w1, w0, #0x2
   2363c:	cbnz	w28, 238c4 <mpfr_pow_ui@@Base+0x454>
   23640:	cbnz	w1, 23790 <mpfr_pow_ui@@Base+0x320>
   23644:	tbnz	w0, #0, 23790 <mpfr_pow_ui@@Base+0x320>
   23648:	ldr	w3, [sp, #168]
   2364c:	mov	w2, w25
   23650:	mov	x1, x27
   23654:	mov	x0, x23
   23658:	bl	c6a0 <mpfr_set4@plt>
   2365c:	mov	w20, w0
   23660:	mov	x0, x27
   23664:	bl	c070 <mpfr_clear@plt>
   23668:	ldr	x1, [x23, #16]
   2366c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   23670:	ldr	x2, [x0, #2576]
   23674:	add	x0, x0, #0xa10
   23678:	blr	x2
   2367c:	ldr	w2, [sp, #104]
   23680:	str	w2, [x19, x0]
   23684:	add	x2, x19, x0
   23688:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2368c:	ldr	x3, [x0, #2512]
   23690:	add	x0, x0, #0x9d0
   23694:	blr	x3
   23698:	ldr	x3, [sp, #112]
   2369c:	str	x3, [x19, x0]
   236a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   236a4:	ldr	x4, [x0, #2544]
   236a8:	add	x0, x0, #0x9f0
   236ac:	blr	x4
   236b0:	ldr	x4, [sp, #120]
   236b4:	str	x4, [x19, x0]
   236b8:	cmp	x4, x1
   236bc:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   236c0:	b.le	236f8 <mpfr_pow_ui@@Base+0x288>
   236c4:	mov	w2, w25
   236c8:	mov	w1, w20
   236cc:	mov	x0, x23
   236d0:	bl	cb30 <mpfr_check_range@plt>
   236d4:	mov	w20, w0
   236d8:	mov	w0, w20
   236dc:	ldp	x19, x20, [sp, #16]
   236e0:	ldp	x21, x22, [sp, #32]
   236e4:	ldp	x23, x24, [sp, #48]
   236e8:	ldp	x25, x26, [sp, #64]
   236ec:	ldp	x27, x28, [sp, #80]
   236f0:	ldp	x29, x30, [sp], #192
   236f4:	ret
   236f8:	cbnz	w20, 2375c <mpfr_pow_ui@@Base+0x2ec>
   236fc:	ldp	x21, x22, [sp, #32]
   23700:	ldp	x23, x24, [sp, #48]
   23704:	ldp	x25, x26, [sp, #64]
   23708:	ldp	x27, x28, [sp, #80]
   2370c:	mov	w0, w20
   23710:	ldp	x19, x20, [sp, #16]
   23714:	ldp	x29, x30, [sp], #192
   23718:	ret
   2371c:	mov	x2, x21
   23720:	mov	x1, x27
   23724:	mov	w3, w24
   23728:	mov	x0, x27
   2372c:	bl	bd50 <mpfr_mul@plt>
   23730:	sub	w26, w26, #0x1
   23734:	mov	w1, w0
   23738:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2373c:	ldr	x2, [x0, #2576]
   23740:	add	x0, x0, #0xa10
   23744:	blr	x2
   23748:	orr	w28, w28, w1
   2374c:	ldr	w0, [x19, x0]
   23750:	cmn	w26, #0x1
   23754:	b.ne	235f0 <mpfr_pow_ui@@Base+0x180>  // b.any
   23758:	b	23638 <mpfr_pow_ui@@Base+0x1c8>
   2375c:	ldr	w0, [sp, #104]
   23760:	orr	w0, w0, #0x8
   23764:	str	w0, [x2]
   23768:	b	236fc <mpfr_pow_ui@@Base+0x28c>
   2376c:	mov	w3, w24
   23770:	mov	x2, x21
   23774:	mov	x1, x27
   23778:	mov	x0, x27
   2377c:	str	w7, [sp, #108]
   23780:	bl	bd50 <mpfr_mul@plt>
   23784:	ldr	w7, [sp, #108]
   23788:	orr	w28, w28, w0
   2378c:	b	235d0 <mpfr_pow_ui@@Base+0x160>
   23790:	mov	x0, x27
   23794:	bl	c070 <mpfr_clear@plt>
   23798:	add	x2, sp, #0x90
   2379c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   237a0:	ldr	x1, [x0, #2576]
   237a4:	add	x0, x0, #0xa10
   237a8:	blr	x1
   237ac:	ldr	w1, [sp, #104]
   237b0:	str	w1, [x19, x0]
   237b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   237b8:	ldr	x1, [x0, #2512]
   237bc:	add	x0, x0, #0x9d0
   237c0:	blr	x1
   237c4:	ldr	x1, [sp, #112]
   237c8:	str	x1, [x19, x0]
   237cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   237d0:	ldr	x1, [x0, #2544]
   237d4:	add	x0, x0, #0x9f0
   237d8:	blr	x1
   237dc:	ldr	x1, [sp, #120]
   237e0:	str	x1, [x19, x0]
   237e4:	mov	x19, x2
   237e8:	mov	x0, x2
   237ec:	bl	bf90 <mpfr_mpz_init@plt>
   237f0:	mov	x1, x20
   237f4:	mov	x0, x19
   237f8:	bl	bcb0 <__gmpz_set_ui@plt>
   237fc:	mov	w3, w25
   23800:	mov	x2, x19
   23804:	mov	x1, x21
   23808:	mov	x0, x23
   2380c:	bl	bef0 <mpfr_pow_z@plt>
   23810:	mov	w20, w0
   23814:	mov	x0, x19
   23818:	bl	c170 <mpfr_mpz_clear@plt>
   2381c:	mov	w0, w20
   23820:	ldp	x19, x20, [sp, #16]
   23824:	ldp	x21, x22, [sp, #32]
   23828:	ldp	x23, x24, [sp, #48]
   2382c:	ldp	x25, x26, [sp, #64]
   23830:	ldp	x27, x28, [sp, #80]
   23834:	ldp	x29, x30, [sp], #192
   23838:	ret
   2383c:	mov	x1, #0x1                   	// #1
   23840:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   23844:	mov	w20, w0
   23848:	mov	w0, w20
   2384c:	ldp	x19, x20, [sp, #16]
   23850:	ldp	x29, x30, [sp], #192
   23854:	ret
   23858:	mov	x0, #0x2                   	// #2
   2385c:	movk	x0, #0x8000, lsl #48
   23860:	cmp	x2, x0
   23864:	b.eq	239ec <mpfr_pow_ui@@Base+0x57c>  // b.none
   23868:	cmp	x2, x3
   2386c:	b.eq	239a8 <mpfr_pow_ui@@Base+0x538>  // b.none
   23870:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   23874:	str	x0, [x23, #16]
   23878:	ldr	w0, [x1, #8]
   2387c:	cmp	w0, #0x0
   23880:	b.le	239e0 <mpfr_pow_ui@@Base+0x570>
   23884:	mov	w0, #0x1                   	// #1
   23888:	mov	w20, #0x0                   	// #0
   2388c:	ldp	x21, x22, [sp, #32]
   23890:	ldp	x25, x26, [sp, #64]
   23894:	str	w0, [x23, #8]
   23898:	ldp	x23, x24, [sp, #48]
   2389c:	b	2370c <mpfr_pow_ui@@Base+0x29c>
   238a0:	cmp	x20, #0x1
   238a4:	b.eq	23988 <mpfr_pow_ui@@Base+0x518>  // b.none
   238a8:	mov	w2, w25
   238ac:	bl	c400 <mpfr_sqr@plt>
   238b0:	mov	w20, w0
   238b4:	ldp	x21, x22, [sp, #32]
   238b8:	ldp	x23, x24, [sp, #48]
   238bc:	ldp	x25, x26, [sp, #64]
   238c0:	b	2370c <mpfr_pow_ui@@Base+0x29c>
   238c4:	cbnz	w1, 23790 <mpfr_pow_ui@@Base+0x320>
   238c8:	tbnz	w0, #0, 23790 <mpfr_pow_ui@@Base+0x320>
   238cc:	ldr	x0, [sp, #176]
   238d0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   238d4:	cmp	x0, x1
   238d8:	b.le	23914 <mpfr_pow_ui@@Base+0x4a4>
   238dc:	ldr	x1, [sp, #160]
   238e0:	cmp	w25, #0x0
   238e4:	ldr	x2, [sp, #96]
   238e8:	sub	x1, x1, #0x1
   238ec:	ldr	x4, [sp, #128]
   238f0:	asr	x1, x1, #6
   238f4:	ldr	x0, [sp, #184]
   238f8:	sub	x2, x2, #0x1
   238fc:	ldr	x3, [x23]
   23900:	add	x1, x1, #0x1
   23904:	sub	x2, x2, x4
   23908:	cinc	x3, x3, eq  // eq = none
   2390c:	bl	c370 <mpfr_round_p@plt>
   23910:	cbnz	w0, 23648 <mpfr_pow_ui@@Base+0x1d8>
   23914:	ldr	x1, [sp, #96]
   23918:	mov	x0, #0xfffffffffffffeff    	// #-257
   2391c:	movk	x0, #0x7fff, lsl #48
   23920:	sub	x0, x0, x1
   23924:	ldr	x1, [sp, #136]
   23928:	cmp	x0, x1
   2392c:	b.lt	23a28 <mpfr_pow_ui@@Base+0x5b8>  // b.tstop
   23930:	ldr	x0, [sp, #96]
   23934:	add	x0, x0, x1
   23938:	mov	x1, x0
   2393c:	mov	x0, x27
   23940:	str	x1, [sp, #96]
   23944:	add	x2, x1, x1, lsr #63
   23948:	asr	x2, x2, #1
   2394c:	str	x2, [sp, #136]
   23950:	bl	bed0 <mpfr_set_prec@plt>
   23954:	b	23570 <mpfr_pow_ui@@Base+0x100>
   23958:	mov	x0, #0x44                  	// #68
   2395c:	mov	x1, x0
   23960:	str	x0, [sp, #96]
   23964:	b	23548 <mpfr_pow_ui@@Base+0xd8>
   23968:	mov	w1, #0x5e                  	// #94
   2396c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   23970:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   23974:	add	x2, x2, #0xa48
   23978:	add	x0, x0, #0xa60
   2397c:	bl	cb40 <mpfr_assert_fail@plt>
   23980:	ldr	x1, [x23]
   23984:	b	2352c <mpfr_pow_ui@@Base+0xbc>
   23988:	ldr	w3, [x1, #8]
   2398c:	mov	w2, w25
   23990:	bl	c6a0 <mpfr_set4@plt>
   23994:	mov	w20, w0
   23998:	ldp	x21, x22, [sp, #32]
   2399c:	ldp	x23, x24, [sp, #48]
   239a0:	ldp	x25, x26, [sp, #64]
   239a4:	b	2370c <mpfr_pow_ui@@Base+0x29c>
   239a8:	ldr	w1, [x1, #8]
   239ac:	mov	w0, #0x1                   	// #1
   239b0:	tbz	w1, #31, 239c0 <mpfr_pow_ui@@Base+0x550>
   239b4:	tst	x20, #0x1
   239b8:	mov	w0, #0xffffffff            	// #-1
   239bc:	cneg	w0, w0, eq  // eq = none
   239c0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   239c4:	mov	w20, #0x0                   	// #0
   239c8:	ldp	x21, x22, [sp, #32]
   239cc:	ldp	x25, x26, [sp, #64]
   239d0:	str	w0, [x23, #8]
   239d4:	str	x1, [x23, #16]
   239d8:	ldp	x23, x24, [sp, #48]
   239dc:	b	2370c <mpfr_pow_ui@@Base+0x29c>
   239e0:	mov	w0, #0xffffffff            	// #-1
   239e4:	tbnz	w20, #0, 23888 <mpfr_pow_ui@@Base+0x418>
   239e8:	b	23884 <mpfr_pow_ui@@Base+0x414>
   239ec:	mrs	x1, tpidr_el0
   239f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   239f4:	ldr	x3, [x0, #2576]
   239f8:	add	x0, x0, #0xa10
   239fc:	blr	x3
   23a00:	add	x0, x1, x0
   23a04:	mov	w20, #0x0                   	// #0
   23a08:	ldp	x21, x22, [sp, #32]
   23a0c:	ldr	w1, [x0]
   23a10:	ldp	x25, x26, [sp, #64]
   23a14:	orr	w1, w1, #0x4
   23a18:	str	w1, [x0]
   23a1c:	str	x2, [x23, #16]
   23a20:	ldp	x23, x24, [sp, #48]
   23a24:	b	2370c <mpfr_pow_ui@@Base+0x29c>
   23a28:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   23a2c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   23a30:	add	x2, x2, #0xf80
   23a34:	add	x0, x0, #0xa60
   23a38:	mov	w1, #0x86                  	// #134
   23a3c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000023a40 <mpfr_print_mant_binary@@Base>:
   23a40:	stp	x29, x30, [sp, #-96]!
   23a44:	mov	x29, sp
   23a48:	stp	x19, x20, [sp, #16]
   23a4c:	adrp	x20, 81000 <__gmpfr_l2b@@Base+0x200>
   23a50:	mov	x19, x2
   23a54:	stp	x21, x22, [sp, #32]
   23a58:	mov	x22, #0x40                  	// #64
   23a5c:	stp	x23, x24, [sp, #48]
   23a60:	mov	x24, x1
   23a64:	mov	x1, x0
   23a68:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   23a6c:	add	x0, x0, #0xa70
   23a70:	stp	x25, x26, [sp, #64]
   23a74:	mov	x25, #0x0                   	// #0
   23a78:	stp	x27, x28, [sp, #80]
   23a7c:	sub	x27, x2, #0x1
   23a80:	bl	cbf0 <printf@plt>
   23a84:	ldr	x20, [x20, #3992]
   23a88:	asr	x27, x27, #6
   23a8c:	mov	x21, x27
   23a90:	mov	x26, x20
   23a94:	nop
   23a98:	mov	x28, x25
   23a9c:	add	w23, w25, #0x3f
   23aa0:	b	23aac <mpfr_print_mant_binary@@Base+0x6c>
   23aa4:	cmp	x28, x22
   23aa8:	b.eq	23ae8 <mpfr_print_mant_binary@@Base+0xa8>  // b.none
   23aac:	ldr	x0, [x24, x21, lsl #3]
   23ab0:	sub	w2, w23, w28
   23ab4:	ldr	x1, [x20]
   23ab8:	add	x28, x28, #0x1
   23abc:	lsr	x0, x0, x2
   23ac0:	and	x0, x0, #0x1
   23ac4:	add	w0, w0, #0x30
   23ac8:	bl	bd20 <putc@plt>
   23acc:	cmp	x19, x28
   23ad0:	b.ne	23aa4 <mpfr_print_mant_binary@@Base+0x64>  // b.any
   23ad4:	ldr	x1, [x20]
   23ad8:	mov	w0, #0x5b                  	// #91
   23adc:	bl	bd20 <putc@plt>
   23ae0:	cmp	x19, x22
   23ae4:	b.ne	23aac <mpfr_print_mant_binary@@Base+0x6c>  // b.any
   23ae8:	ldr	x1, [x26]
   23aec:	sub	x21, x21, #0x1
   23af0:	mov	w0, #0x2e                  	// #46
   23af4:	add	x25, x25, #0x40
   23af8:	add	x22, x22, #0x40
   23afc:	bl	bd20 <putc@plt>
   23b00:	cmn	x21, #0x1
   23b04:	b.ne	23a98 <mpfr_print_mant_binary@@Base+0x58>  // b.any
   23b08:	add	x27, x27, #0x1
   23b0c:	ldr	x1, [x26]
   23b10:	cmp	x19, x27, lsl #6
   23b14:	b.le	23b38 <mpfr_print_mant_binary@@Base+0xf8>
   23b18:	ldp	x19, x20, [sp, #16]
   23b1c:	mov	w0, #0xa                   	// #10
   23b20:	ldp	x21, x22, [sp, #32]
   23b24:	ldp	x23, x24, [sp, #48]
   23b28:	ldp	x25, x26, [sp, #64]
   23b2c:	ldp	x27, x28, [sp, #80]
   23b30:	ldp	x29, x30, [sp], #96
   23b34:	b	bd20 <putc@plt>
   23b38:	mov	w0, #0x5d                  	// #93
   23b3c:	bl	bd20 <putc@plt>
   23b40:	ldr	x1, [x26]
   23b44:	mov	w0, #0xa                   	// #10
   23b48:	ldp	x19, x20, [sp, #16]
   23b4c:	ldp	x21, x22, [sp, #32]
   23b50:	ldp	x23, x24, [sp, #48]
   23b54:	ldp	x25, x26, [sp, #64]
   23b58:	ldp	x27, x28, [sp, #80]
   23b5c:	ldp	x29, x30, [sp], #96
   23b60:	b	bd20 <putc@plt>
   23b64:	nop

0000000000023b68 <mpfr_print_rnd_mode@@Base>:
   23b68:	mov	w2, w0
   23b6c:	cmp	w0, #0x3
   23b70:	b.eq	23bdc <mpfr_print_rnd_mode@@Base+0x74>  // b.none
   23b74:	b.gt	23ba8 <mpfr_print_rnd_mode@@Base+0x40>
   23b78:	cmp	w0, #0x1
   23b7c:	b.eq	23bd0 <mpfr_print_rnd_mode@@Base+0x68>  // b.none
   23b80:	cmp	w0, #0x2
   23b84:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x4558>
   23b88:	add	x0, x1, #0xa88
   23b8c:	b.ne	23b94 <mpfr_print_rnd_mode@@Base+0x2c>  // b.any
   23b90:	ret
   23b94:	cmp	w2, #0x0
   23b98:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   23b9c:	add	x0, x0, #0xaa8
   23ba0:	csel	x0, x0, xzr, eq  // eq = none
   23ba4:	ret
   23ba8:	cmp	w0, #0x4
   23bac:	b.eq	23bc4 <mpfr_print_rnd_mode@@Base+0x5c>  // b.none
   23bb0:	cmp	w0, #0x5
   23bb4:	b.ne	23be8 <mpfr_print_rnd_mode@@Base+0x80>  // b.any
   23bb8:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   23bbc:	add	x0, x0, #0xac8
   23bc0:	ret
   23bc4:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   23bc8:	add	x0, x0, #0xab8
   23bcc:	ret
   23bd0:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   23bd4:	add	x0, x0, #0xa78
   23bd8:	ret
   23bdc:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   23be0:	add	x0, x0, #0xa98
   23be4:	ret
   23be8:	mov	x0, #0x0                   	// #0
   23bec:	ret

0000000000023bf0 <mpfr_reldiff@@Base>:
   23bf0:	stp	x29, x30, [sp, #-80]!
   23bf4:	mov	x29, sp
   23bf8:	stp	x19, x20, [sp, #16]
   23bfc:	mov	x19, x1
   23c00:	mov	x20, x0
   23c04:	stp	x21, x22, [sp, #32]
   23c08:	mov	x22, x2
   23c0c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   23c10:	ldr	x2, [x19, #16]
   23c14:	mov	w21, w3
   23c18:	cmp	x2, x1
   23c1c:	b.le	23cf8 <mpfr_reldiff@@Base+0x108>
   23c20:	ldr	x0, [x22, #16]
   23c24:	cmp	x0, x1
   23c28:	b.le	23d50 <mpfr_reldiff@@Base+0x160>
   23c2c:	cmp	x19, x20
   23c30:	b.eq	23c80 <mpfr_reldiff@@Base+0x90>  // b.none
   23c34:	mov	x2, x22
   23c38:	mov	w3, w21
   23c3c:	mov	x1, x19
   23c40:	mov	x0, x20
   23c44:	bl	bb70 <mpfr_sub@plt>
   23c48:	mov	w2, w21
   23c4c:	mov	x1, x20
   23c50:	mov	w3, #0x1                   	// #1
   23c54:	mov	x0, x20
   23c58:	bl	c6a0 <mpfr_set4@plt>
   23c5c:	mov	w3, w21
   23c60:	mov	x2, x19
   23c64:	mov	x1, x20
   23c68:	mov	x0, x20
   23c6c:	bl	c620 <mpfr_div@plt>
   23c70:	ldp	x19, x20, [sp, #16]
   23c74:	ldp	x21, x22, [sp, #32]
   23c78:	ldp	x29, x30, [sp], #80
   23c7c:	ret
   23c80:	ldr	x1, [x19]
   23c84:	add	x20, sp, #0x30
   23c88:	mov	x0, x20
   23c8c:	bl	ca80 <mpfr_init2@plt>
   23c90:	ldr	w3, [x19, #8]
   23c94:	mov	x1, x19
   23c98:	mov	x0, x20
   23c9c:	mov	w2, #0x0                   	// #0
   23ca0:	bl	c6a0 <mpfr_set4@plt>
   23ca4:	mov	w3, w21
   23ca8:	mov	x2, x22
   23cac:	mov	x1, x19
   23cb0:	mov	x0, x19
   23cb4:	bl	bb70 <mpfr_sub@plt>
   23cb8:	mov	w2, w21
   23cbc:	mov	x1, x19
   23cc0:	mov	x0, x19
   23cc4:	mov	w3, #0x1                   	// #1
   23cc8:	bl	c6a0 <mpfr_set4@plt>
   23ccc:	mov	w3, w21
   23cd0:	mov	x2, x20
   23cd4:	mov	x1, x19
   23cd8:	mov	x0, x19
   23cdc:	bl	c620 <mpfr_div@plt>
   23ce0:	mov	x0, x20
   23ce4:	bl	c070 <mpfr_clear@plt>
   23ce8:	ldp	x19, x20, [sp, #16]
   23cec:	ldp	x21, x22, [sp, #32]
   23cf0:	ldp	x29, x30, [sp], #80
   23cf4:	ret
   23cf8:	mov	x4, #0x2                   	// #2
   23cfc:	movk	x4, #0x8000, lsl #48
   23d00:	cmp	x2, x4
   23d04:	b.eq	23d40 <mpfr_reldiff@@Base+0x150>  // b.none
   23d08:	ldr	x5, [x22, #16]
   23d0c:	cmp	x5, x4
   23d10:	b.eq	23d40 <mpfr_reldiff@@Base+0x150>  // b.none
   23d14:	cmp	x2, x1
   23d18:	b.ne	23d7c <mpfr_reldiff@@Base+0x18c>  // b.any
   23d1c:	cmp	x5, x2
   23d20:	b.ne	23d40 <mpfr_reldiff@@Base+0x150>  // b.any
   23d24:	ldr	w0, [x19, #8]
   23d28:	ldr	w1, [x22, #8]
   23d2c:	cmp	w1, w0
   23d30:	b.ne	23d40 <mpfr_reldiff@@Base+0x150>  // b.any
   23d34:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   23d38:	str	x0, [x20, #16]
   23d3c:	b	23c70 <mpfr_reldiff@@Base+0x80>
   23d40:	mov	x0, #0x2                   	// #2
   23d44:	movk	x0, #0x8000, lsl #48
   23d48:	str	x0, [x20, #16]
   23d4c:	b	23c70 <mpfr_reldiff@@Base+0x80>
   23d50:	mov	x2, #0x2                   	// #2
   23d54:	movk	x2, #0x8000, lsl #48
   23d58:	cmp	x0, x2
   23d5c:	b.eq	23d40 <mpfr_reldiff@@Base+0x150>  // b.none
   23d60:	cmp	x0, x1
   23d64:	b.ne	23c2c <mpfr_reldiff@@Base+0x3c>  // b.any
   23d68:	ldr	w1, [x19, #8]
   23d6c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   23d70:	str	w1, [x20, #8]
   23d74:	str	x0, [x20, #16]
   23d78:	b	23c70 <mpfr_reldiff@@Base+0x80>
   23d7c:	cmp	x5, x1
   23d80:	b.eq	23d68 <mpfr_reldiff@@Base+0x178>  // b.none
   23d84:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   23d88:	cmp	x2, x1
   23d8c:	b.ne	23c2c <mpfr_reldiff@@Base+0x3c>  // b.any
   23d90:	ldrsw	x1, [x22, #8]
   23d94:	mov	x2, #0x0                   	// #0
   23d98:	bl	ba80 <mpfr_set_si_2exp@plt>
   23d9c:	b	23c70 <mpfr_reldiff@@Base+0x80>

0000000000023da0 <mpfr_round_raw@@Base>:
   23da0:	stp	x29, x30, [sp, #-32]!
   23da4:	cmp	x4, #0x0
   23da8:	sub	x10, x2, #0x1
   23dac:	mov	x29, sp
   23db0:	add	x7, x4, #0x3f
   23db4:	csel	x7, x7, x4, lt  // lt = tstop
   23db8:	stp	x19, x20, [sp, #16]
   23dbc:	asr	x10, x10, #6
   23dc0:	mov	x8, x2
   23dc4:	mov	x19, x0
   23dc8:	asr	x7, x7, #6
   23dcc:	cmp	w5, #0x5
   23dd0:	add	x2, x10, #0x1
   23dd4:	and	w9, w4, #0x3f
   23dd8:	b.eq	23f88 <mpfr_round_raw@@Base+0x1e8>  // b.none
   23ddc:	cmp	x8, x4
   23de0:	b.le	23f94 <mpfr_round_raw@@Base+0x1f4>
   23de4:	sub	x8, x2, x7
   23de8:	sub	x11, x8, #0x1
   23dec:	cbz	w9, 24128 <mpfr_round_raw@@Base+0x388>
   23df0:	neg	w0, w9
   23df4:	mov	x4, #0x1                   	// #1
   23df8:	add	x7, x7, #0x1
   23dfc:	lsl	x0, x4, x0
   23e00:	sub	x8, x2, x7
   23e04:	sub	x4, x0, #0x1
   23e08:	neg	x20, x0
   23e0c:	ldr	x0, [x1, x11, lsl #3]
   23e10:	add	w12, w5, #0x1
   23e14:	cmp	w12, #0x1
   23e18:	and	x0, x4, x0
   23e1c:	b.ls	23eb4 <mpfr_round_raw@@Base+0x114>  // b.plast
   23e20:	cmp	w5, #0x1
   23e24:	b.eq	23fe0 <mpfr_round_raw@@Base+0x240>  // b.none
   23e28:	add	w5, w3, w5
   23e2c:	cmp	w5, #0x3
   23e30:	b.eq	23fe0 <mpfr_round_raw@@Base+0x240>  // b.none
   23e34:	cbz	x0, 24308 <mpfr_round_raw@@Base+0x568>
   23e38:	cmp	w9, #0x0
   23e3c:	neg	w0, w9
   23e40:	ldr	x9, [x1, x8, lsl #3]
   23e44:	mov	x4, #0x1                   	// #1
   23e48:	mov	w5, #0x1                   	// #1
   23e4c:	lsl	x0, x4, x0
   23e50:	sub	w3, w5, w3, lsl #1
   23e54:	csel	x0, x0, x4, ne  // ne = any
   23e58:	str	w3, [x6]
   23e5c:	adds	x0, x0, x9
   23e60:	str	x0, [x19]
   23e64:	add	x8, x1, x8, lsl #3
   23e68:	cset	x5, cs  // cs = hs, nlast
   23e6c:	mov	x3, x0
   23e70:	b.cc	24088 <mpfr_round_raw@@Base+0x2e8>  // b.lo, b.ul, b.last
   23e74:	mov	x3, x4
   23e78:	b	23e90 <mpfr_round_raw@@Base+0xf0>
   23e7c:	ldr	x0, [x8, x3, lsl #3]
   23e80:	add	x0, x0, #0x1
   23e84:	str	x0, [x19, x3, lsl #3]
   23e88:	add	x3, x3, #0x1
   23e8c:	cbnz	x0, 241b4 <mpfr_round_raw@@Base+0x414>
   23e90:	cmp	x3, x7
   23e94:	b.lt	23e7c <mpfr_round_raw@@Base+0xdc>  // b.tstop
   23e98:	ldr	x3, [x19]
   23e9c:	mov	w0, #0x1                   	// #1
   23ea0:	and	x20, x3, x20
   23ea4:	str	x20, [x19]
   23ea8:	ldp	x19, x20, [sp, #16]
   23eac:	ldp	x29, x30, [sp], #32
   23eb0:	ret
   23eb4:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   23eb8:	lsr	x2, x2, x9
   23ebc:	tst	x0, x2
   23ec0:	b.eq	23fe0 <mpfr_round_raw@@Base+0x240>  // b.none
   23ec4:	cmn	w5, #0x1
   23ec8:	b.eq	24198 <mpfr_round_raw@@Base+0x3f8>  // b.none
   23ecc:	bics	xzr, x0, x2
   23ed0:	b.eq	24134 <mpfr_round_raw@@Base+0x394>  // b.none
   23ed4:	mov	w0, #0x1                   	// #1
   23ed8:	add	x4, x1, x8, lsl #3
   23edc:	sub	w3, w0, w3, lsl #1
   23ee0:	ldr	x5, [x1, x8, lsl #3]
   23ee4:	str	w3, [x6]
   23ee8:	neg	w0, w9
   23eec:	cmp	w9, #0x0
   23ef0:	mov	x2, #0x1                   	// #1
   23ef4:	lsl	x0, x2, x0
   23ef8:	csel	x0, x0, x2, ne  // ne = any
   23efc:	adds	x0, x0, x5
   23f00:	str	x0, [x19]
   23f04:	mov	x3, x0
   23f08:	b.cs	24034 <mpfr_round_raw@@Base+0x294>  // b.hs, b.nlast
   23f0c:	cmp	x19, x4
   23f10:	mov	w0, #0x0                   	// #0
   23f14:	b.eq	23ea0 <mpfr_round_raw@@Base+0x100>  // b.none
   23f18:	cmp	x7, #0x1
   23f1c:	b.le	23ea0 <mpfr_round_raw@@Base+0x100>
   23f20:	add	x0, x4, #0x8
   23f24:	add	x1, x19, #0x18
   23f28:	cmp	x0, x1
   23f2c:	add	x3, x4, #0x18
   23f30:	add	x1, x19, #0x8
   23f34:	sub	x0, x7, #0x2
   23f38:	ccmp	x3, x1, #0x0, cc  // cc = lo, ul, last
   23f3c:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
   23f40:	b.ls	24110 <mpfr_round_raw@@Base+0x370>  // b.plast
   23f44:	sub	x7, x7, #0x1
   23f48:	mov	x0, #0x8                   	// #8
   23f4c:	lsr	x1, x7, #1
   23f50:	lsl	x1, x1, #4
   23f54:	add	x1, x1, x0
   23f58:	ldr	q0, [x4, x0]
   23f5c:	str	q0, [x19, x0]
   23f60:	add	x0, x0, #0x10
   23f64:	cmp	x0, x1
   23f68:	b.ne	23f58 <mpfr_round_raw@@Base+0x1b8>  // b.any
   23f6c:	orr	x0, x7, #0x1
   23f70:	tbz	w7, #0, 23f7c <mpfr_round_raw@@Base+0x1dc>
   23f74:	ldr	x1, [x4, x0, lsl #3]
   23f78:	str	x1, [x19, x0, lsl #3]
   23f7c:	mov	w0, #0x0                   	// #0
   23f80:	ldr	x3, [x19]
   23f84:	b	23ea0 <mpfr_round_raw@@Base+0x100>
   23f88:	str	wzr, [x6]
   23f8c:	cmp	x8, x4
   23f90:	b.gt	24040 <mpfr_round_raw@@Base+0x2a0>
   23f94:	cmp	w9, #0x0
   23f98:	str	wzr, [x6]
   23f9c:	cinc	x7, x7, ne  // ne = any
   23fa0:	sub	x7, x7, x2
   23fa4:	lsl	x20, x7, #3
   23fa8:	add	x0, x19, x20
   23fac:	bl	bae0 <__gmpn_copyd@plt>
   23fb0:	mov	x2, x20
   23fb4:	mov	x0, x19
   23fb8:	mov	w1, #0x0                   	// #0
   23fbc:	bl	c110 <memset@plt>
   23fc0:	mov	w0, #0x0                   	// #0
   23fc4:	ldp	x19, x20, [sp, #16]
   23fc8:	ldp	x29, x30, [sp], #32
   23fcc:	ret
   23fd0:	cbz	x11, 24328 <mpfr_round_raw@@Base+0x588>
   23fd4:	sub	x11, x11, #0x1
   23fd8:	ldr	x0, [x1, x11, lsl #3]
   23fdc:	nop
   23fe0:	cbz	x0, 23fd0 <mpfr_round_raw@@Base+0x230>
   23fe4:	lsl	w3, w3, #1
   23fe8:	sub	w3, w3, #0x1
   23fec:	str	w3, [x6]
   23ff0:	add	x1, x1, x8, lsl #3
   23ff4:	mov	x0, x19
   23ff8:	mov	x2, x7
   23ffc:	bl	c520 <__gmpn_copyi@plt>
   24000:	ldr	x1, [x19]
   24004:	mov	w0, #0x0                   	// #0
   24008:	and	x20, x1, x20
   2400c:	str	x20, [x19]
   24010:	ldp	x19, x20, [sp, #16]
   24014:	ldp	x29, x30, [sp], #32
   24018:	ret
   2401c:	ldr	x0, [x4, x2, lsl #3]
   24020:	add	x1, x2, #0x1
   24024:	add	x0, x0, #0x1
   24028:	str	x0, [x19, x2, lsl #3]
   2402c:	cbnz	x0, 24268 <mpfr_round_raw@@Base+0x4c8>
   24030:	mov	x2, x1
   24034:	cmp	x2, x7
   24038:	b.lt	2401c <mpfr_round_raw@@Base+0x27c>  // b.tstop
   2403c:	b	23e98 <mpfr_round_raw@@Base+0xf8>
   24040:	cbz	w9, 24320 <mpfr_round_raw@@Base+0x580>
   24044:	neg	w9, w9
   24048:	mov	x20, #0x1                   	// #1
   2404c:	add	x7, x7, x20
   24050:	lsl	x20, x20, x9
   24054:	neg	x20, x20
   24058:	sub	x3, x2, x7
   2405c:	mov	x0, x19
   24060:	mov	x2, x7
   24064:	add	x1, x1, x3, lsl #3
   24068:	bl	c520 <__gmpn_copyi@plt>
   2406c:	ldr	x1, [x19]
   24070:	mov	w0, #0x0                   	// #0
   24074:	and	x20, x1, x20
   24078:	str	x20, [x19]
   2407c:	ldp	x19, x20, [sp, #16]
   24080:	ldp	x29, x30, [sp], #32
   24084:	ret
   24088:	cmp	x8, x19
   2408c:	mov	w0, #0x0                   	// #0
   24090:	b.eq	23ea0 <mpfr_round_raw@@Base+0x100>  // b.none
   24094:	cmp	x7, #0x1
   24098:	b.le	23ea0 <mpfr_round_raw@@Base+0x100>
   2409c:	add	x0, x10, #0x4
   240a0:	add	x10, x10, #0x2
   240a4:	sub	x0, x0, x7
   240a8:	sub	x10, x10, x7
   240ac:	add	x2, x19, #0x8
   240b0:	add	x3, x19, #0x18
   240b4:	add	x0, x1, x0, lsl #3
   240b8:	add	x1, x1, x10, lsl #3
   240bc:	cmp	x0, x2
   240c0:	sub	x0, x7, #0x2
   240c4:	ccmp	x3, x1, #0x0, hi  // hi = pmore
   240c8:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
   240cc:	b.ls	24148 <mpfr_round_raw@@Base+0x3a8>  // b.plast
   240d0:	sub	x7, x7, #0x1
   240d4:	lsr	x0, x7, #1
   240d8:	lsl	x0, x0, #4
   240dc:	nop
   240e0:	ldr	q0, [x1, x5]
   240e4:	str	q0, [x2, x5]
   240e8:	add	x5, x5, #0x10
   240ec:	cmp	x5, x0
   240f0:	b.ne	240e0 <mpfr_round_raw@@Base+0x340>  // b.any
   240f4:	orr	x0, x7, #0x1
   240f8:	tbz	w7, #0, 23f7c <mpfr_round_raw@@Base+0x1dc>
   240fc:	ldr	x1, [x8, x0, lsl #3]
   24100:	str	x1, [x19, x0, lsl #3]
   24104:	mov	w0, #0x0                   	// #0
   24108:	ldr	x3, [x19]
   2410c:	b	23ea0 <mpfr_round_raw@@Base+0x100>
   24110:	ldr	x0, [x4, x2, lsl #3]
   24114:	str	x0, [x19, x2, lsl #3]
   24118:	add	x2, x2, #0x1
   2411c:	cmp	x2, x7
   24120:	b.ne	24110 <mpfr_round_raw@@Base+0x370>  // b.any
   24124:	b	23f7c <mpfr_round_raw@@Base+0x1dc>
   24128:	mov	x4, #0xffffffffffffffff    	// #-1
   2412c:	mov	x20, x4
   24130:	b	23e0c <mpfr_round_raw@@Base+0x6c>
   24134:	cbz	x11, 24168 <mpfr_round_raw@@Base+0x3c8>
   24138:	sub	x11, x11, #0x1
   2413c:	ldr	x0, [x1, x11, lsl #3]
   24140:	cbnz	x0, 23ed4 <mpfr_round_raw@@Base+0x134>
   24144:	b	24134 <mpfr_round_raw@@Base+0x394>
   24148:	mov	x3, x4
   2414c:	nop
   24150:	ldr	x0, [x8, x3, lsl #3]
   24154:	str	x0, [x19, x3, lsl #3]
   24158:	add	x3, x3, #0x1
   2415c:	cmp	x7, x3
   24160:	b.ne	24150 <mpfr_round_raw@@Base+0x3b0>  // b.any
   24164:	b	23f7c <mpfr_round_raw@@Base+0x1dc>
   24168:	ldr	x5, [x1, x8, lsl #3]
   2416c:	eor	x0, x20, x20, lsl #1
   24170:	lsl	w3, w3, #2
   24174:	add	x4, x1, x8, lsl #3
   24178:	tst	x0, x5
   2417c:	b.ne	241a4 <mpfr_round_raw@@Base+0x404>  // b.any
   24180:	sub	w3, w3, #0x2
   24184:	mov	x2, x7
   24188:	mov	x1, x4
   2418c:	mov	x0, x19
   24190:	str	w3, [x6]
   24194:	b	24068 <mpfr_round_raw@@Base+0x2c8>
   24198:	ldr	x5, [x1, x8, lsl #3]
   2419c:	lsl	w3, w3, #2
   241a0:	add	x4, x1, x8, lsl #3
   241a4:	mov	w0, #0x2                   	// #2
   241a8:	sub	w3, w0, w3
   241ac:	str	w3, [x6]
   241b0:	b	23ee8 <mpfr_round_raw@@Base+0x148>
   241b4:	cmp	x8, x19
   241b8:	b.eq	24244 <mpfr_round_raw@@Base+0x4a4>  // b.none
   241bc:	cmp	x3, x7
   241c0:	b.ge	24244 <mpfr_round_raw@@Base+0x4a4>  // b.tcont
   241c4:	sub	x0, x3, x7
   241c8:	add	x4, x10, #0x3
   241cc:	add	x4, x4, x0
   241d0:	add	x0, x2, x0
   241d4:	lsl	x2, x3, #3
   241d8:	sub	x5, x7, #0x1
   241dc:	add	x6, x1, x4, lsl #3
   241e0:	add	x4, x19, x2
   241e4:	add	x2, x2, #0x10
   241e8:	add	x1, x1, x0, lsl #3
   241ec:	cmp	x6, x4
   241f0:	add	x2, x19, x2
   241f4:	ccmp	x2, x1, #0x0, hi  // hi = pmore
   241f8:	sub	x0, x5, x3
   241fc:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
   24200:	b.ls	24250 <mpfr_round_raw@@Base+0x4b0>  // b.plast
   24204:	sub	x7, x7, x3
   24208:	mov	x0, #0x0                   	// #0
   2420c:	lsr	x2, x7, #1
   24210:	lsl	x2, x2, #4
   24214:	nop
   24218:	ldr	q0, [x1, x0]
   2421c:	str	q0, [x4, x0]
   24220:	add	x0, x0, #0x10
   24224:	cmp	x0, x2
   24228:	b.ne	24218 <mpfr_round_raw@@Base+0x478>  // b.any
   2422c:	and	x0, x7, #0xfffffffffffffffe
   24230:	add	x3, x0, x3
   24234:	cmp	x7, x0
   24238:	b.eq	24244 <mpfr_round_raw@@Base+0x4a4>  // b.none
   2423c:	ldr	x0, [x8, x3, lsl #3]
   24240:	str	x0, [x19, x3, lsl #3]
   24244:	mov	w0, #0x0                   	// #0
   24248:	ldr	x3, [x19]
   2424c:	b	23ea0 <mpfr_round_raw@@Base+0x100>
   24250:	ldr	x0, [x8, x3, lsl #3]
   24254:	str	x0, [x19, x3, lsl #3]
   24258:	add	x3, x3, #0x1
   2425c:	cmp	x7, x3
   24260:	b.ne	24250 <mpfr_round_raw@@Base+0x4b0>  // b.any
   24264:	b	24244 <mpfr_round_raw@@Base+0x4a4>
   24268:	cmp	x19, x4
   2426c:	b.eq	24244 <mpfr_round_raw@@Base+0x4a4>  // b.none
   24270:	cmp	x1, x7
   24274:	b.ge	24244 <mpfr_round_raw@@Base+0x4a4>  // b.tcont
   24278:	add	x2, x2, #0x3
   2427c:	sub	x0, x7, #0x1
   24280:	sub	x0, x0, x1
   24284:	lsl	x2, x2, #3
   24288:	sub	x3, x2, #0x10
   2428c:	add	x6, x4, x2
   24290:	add	x5, x19, x3
   24294:	add	x2, x19, x2
   24298:	add	x3, x4, x3
   2429c:	cmp	x5, x6
   242a0:	ccmp	x3, x2, #0x2, cc  // cc = lo, ul, last
   242a4:	ccmp	x0, #0x9, #0x0, cs  // cs = hs, nlast
   242a8:	b.ls	242f0 <mpfr_round_raw@@Base+0x550>  // b.plast
   242ac:	sub	x7, x7, x1
   242b0:	mov	x0, #0x0                   	// #0
   242b4:	lsr	x2, x7, #1
   242b8:	lsl	x2, x2, #4
   242bc:	nop
   242c0:	ldr	q0, [x3, x0]
   242c4:	str	q0, [x5, x0]
   242c8:	add	x0, x0, #0x10
   242cc:	cmp	x0, x2
   242d0:	b.ne	242c0 <mpfr_round_raw@@Base+0x520>  // b.any
   242d4:	and	x0, x7, #0xfffffffffffffffe
   242d8:	add	x1, x0, x1
   242dc:	cmp	x0, x7
   242e0:	b.eq	24244 <mpfr_round_raw@@Base+0x4a4>  // b.none
   242e4:	ldr	x0, [x4, x1, lsl #3]
   242e8:	str	x0, [x19, x1, lsl #3]
   242ec:	b	24244 <mpfr_round_raw@@Base+0x4a4>
   242f0:	ldr	x0, [x4, x1, lsl #3]
   242f4:	str	x0, [x19, x1, lsl #3]
   242f8:	add	x1, x1, #0x1
   242fc:	cmp	x1, x7
   24300:	b.ne	242f0 <mpfr_round_raw@@Base+0x550>  // b.any
   24304:	b	24244 <mpfr_round_raw@@Base+0x4a4>
   24308:	cbz	x11, 24318 <mpfr_round_raw@@Base+0x578>
   2430c:	sub	x11, x11, #0x1
   24310:	ldr	x0, [x1, x11, lsl #3]
   24314:	b	23e34 <mpfr_round_raw@@Base+0x94>
   24318:	str	wzr, [x6]
   2431c:	b	23ff0 <mpfr_round_raw@@Base+0x250>
   24320:	mov	x20, #0xffffffffffffffff    	// #-1
   24324:	b	24058 <mpfr_round_raw@@Base+0x2b8>
   24328:	mov	w3, #0x0                   	// #0
   2432c:	b	23fec <mpfr_round_raw@@Base+0x24c>

0000000000024330 <mpfr_round_raw_2@@Base>:
   24330:	and	w5, w4, #0xfffffffb
   24334:	mov	x7, x0
   24338:	cmp	w5, #0x1
   2433c:	ccmp	x1, x3, #0x4, ne  // ne = any
   24340:	b.le	243b4 <mpfr_round_raw_2@@Base+0x84>
   24344:	add	w2, w2, w4
   24348:	mov	w0, #0x0                   	// #0
   2434c:	cmp	w2, #0x3
   24350:	b.eq	243b0 <mpfr_round_raw_2@@Base+0x80>  // b.none
   24354:	cmp	x3, #0x0
   24358:	add	x2, x3, #0x3f
   2435c:	csel	x2, x2, x3, lt  // lt = tstop
   24360:	sub	x1, x1, #0x1
   24364:	ands	w3, w3, #0x3f
   24368:	asr	x1, x1, #6
   2436c:	asr	x2, x2, #6
   24370:	sub	x8, x1, x2
   24374:	add	x1, x1, #0x1
   24378:	b.eq	2442c <mpfr_round_raw_2@@Base+0xfc>  // b.none
   2437c:	neg	w5, w3
   24380:	mov	x6, #0x1                   	// #1
   24384:	add	x2, x2, x6
   24388:	lsl	x5, x6, x5
   2438c:	sub	x6, x5, #0x1
   24390:	neg	x5, x5
   24394:	ldr	x0, [x7, x8, lsl #3]
   24398:	add	w9, w4, #0x1
   2439c:	cmp	w9, #0x1
   243a0:	and	x6, x6, x0
   243a4:	b.ls	243bc <mpfr_round_raw_2@@Base+0x8c>  // b.plast
   243a8:	mov	w0, #0x1                   	// #1
   243ac:	cbz	x6, 243fc <mpfr_round_raw_2@@Base+0xcc>
   243b0:	ret
   243b4:	mov	w0, #0x0                   	// #0
   243b8:	ret
   243bc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   243c0:	mov	w0, #0x0                   	// #0
   243c4:	lsr	x3, x9, x3
   243c8:	tst	x6, x3
   243cc:	b.eq	243b0 <mpfr_round_raw_2@@Base+0x80>  // b.none
   243d0:	cmn	w4, #0x1
   243d4:	b.eq	243f4 <mpfr_round_raw_2@@Base+0xc4>  // b.none
   243d8:	bics	xzr, x6, x3
   243dc:	mov	w0, #0x1                   	// #1
   243e0:	b.ne	243b0 <mpfr_round_raw_2@@Base+0x80>  // b.any
   243e4:	cbz	x8, 24414 <mpfr_round_raw_2@@Base+0xe4>
   243e8:	sub	x8, x8, #0x1
   243ec:	ldr	x0, [x7, x8, lsl #3]
   243f0:	cbz	x0, 243e4 <mpfr_round_raw_2@@Base+0xb4>
   243f4:	mov	w0, #0x1                   	// #1
   243f8:	ret
   243fc:	cbz	x8, 243b4 <mpfr_round_raw_2@@Base+0x84>
   24400:	sub	x8, x8, #0x1
   24404:	ldr	x0, [x7, x8, lsl #3]
   24408:	cbnz	x0, 243f4 <mpfr_round_raw_2@@Base+0xc4>
   2440c:	cbnz	x8, 24400 <mpfr_round_raw_2@@Base+0xd0>
   24410:	ret
   24414:	sub	x1, x1, x2
   24418:	eor	x5, x5, x5, lsl #1
   2441c:	ldr	x0, [x7, x1, lsl #3]
   24420:	tst	x5, x0
   24424:	cset	w0, ne  // ne = any
   24428:	ret
   2442c:	mov	x6, #0xffffffffffffffff    	// #-1
   24430:	mov	x5, x6
   24434:	b	24394 <mpfr_round_raw_2@@Base+0x64>

0000000000024438 <mpfr_round_raw_4@@Base>:
   24438:	stp	x29, x30, [sp, #-32]!
   2443c:	cmp	x4, #0x0
   24440:	add	x6, x4, #0x3f
   24444:	mov	x29, sp
   24448:	sub	x7, x2, #0x1
   2444c:	csel	x6, x6, x4, lt  // lt = tstop
   24450:	stp	x19, x20, [sp, #16]
   24454:	asr	x7, x7, #6
   24458:	mov	x19, x0
   2445c:	asr	x6, x6, #6
   24460:	cmp	w5, #0x5
   24464:	add	x9, x7, #0x1
   24468:	and	w8, w4, #0x3f
   2446c:	b.eq	24690 <mpfr_round_raw_4@@Base+0x258>  // b.none
   24470:	cmp	x2, x4
   24474:	b.le	24738 <mpfr_round_raw_4@@Base+0x300>
   24478:	cmp	w5, #0x1
   2447c:	b.eq	24698 <mpfr_round_raw_4@@Base+0x260>  // b.none
   24480:	add	w3, w3, w5
   24484:	cmp	w3, #0x3
   24488:	b.eq	24698 <mpfr_round_raw_4@@Base+0x260>  // b.none
   2448c:	sub	x4, x9, x6
   24490:	sub	x2, x4, #0x1
   24494:	cbz	w8, 24784 <mpfr_round_raw_4@@Base+0x34c>
   24498:	neg	w20, w8
   2449c:	mov	x0, #0x1                   	// #1
   244a0:	add	x6, x6, #0x1
   244a4:	lsl	x20, x0, x20
   244a8:	sub	x4, x9, x6
   244ac:	sub	x0, x20, #0x1
   244b0:	neg	x20, x20
   244b4:	ldr	x3, [x1, x2, lsl #3]
   244b8:	add	w10, w5, #0x1
   244bc:	cmp	w10, #0x1
   244c0:	and	x0, x0, x3
   244c4:	b.ls	245b8 <mpfr_round_raw_4@@Base+0x180>  // b.plast
   244c8:	cbz	x0, 24864 <mpfr_round_raw_4@@Base+0x42c>
   244cc:	neg	w0, w8
   244d0:	cmp	w8, #0x0
   244d4:	ldr	x2, [x1, x4, lsl #3]
   244d8:	mov	x3, #0x1                   	// #1
   244dc:	lsl	x0, x3, x0
   244e0:	csel	x0, x0, x3, ne  // ne = any
   244e4:	adds	x0, x0, x2
   244e8:	str	x0, [x19]
   244ec:	mov	x5, x0
   244f0:	add	x8, x1, x4, lsl #3
   244f4:	cset	x2, cs  // cs = hs, nlast
   244f8:	b.cs	24594 <mpfr_round_raw_4@@Base+0x15c>  // b.hs, b.nlast
   244fc:	cmp	x8, x19
   24500:	mov	w0, #0x0                   	// #0
   24504:	b.eq	245a4 <mpfr_round_raw_4@@Base+0x16c>  // b.none
   24508:	cmp	x6, #0x1
   2450c:	b.le	245a4 <mpfr_round_raw_4@@Base+0x16c>
   24510:	add	x0, x7, #0x4
   24514:	add	x7, x7, #0x2
   24518:	sub	x0, x0, x6
   2451c:	sub	x7, x7, x6
   24520:	add	x4, x19, #0x8
   24524:	add	x5, x19, #0x18
   24528:	add	x0, x1, x0, lsl #3
   2452c:	add	x1, x1, x7, lsl #3
   24530:	cmp	x0, x4
   24534:	sub	x0, x6, #0x2
   24538:	ccmp	x5, x1, #0x0, hi  // hi = pmore
   2453c:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
   24540:	b.ls	2470c <mpfr_round_raw_4@@Base+0x2d4>  // b.plast
   24544:	sub	x6, x6, #0x1
   24548:	lsr	x0, x6, #1
   2454c:	lsl	x0, x0, #4
   24550:	ldr	q0, [x1, x2]
   24554:	str	q0, [x4, x2]
   24558:	add	x2, x2, #0x10
   2455c:	cmp	x2, x0
   24560:	b.ne	24550 <mpfr_round_raw_4@@Base+0x118>  // b.any
   24564:	orr	x0, x6, #0x1
   24568:	tbz	w6, #0, 24574 <mpfr_round_raw_4@@Base+0x13c>
   2456c:	ldr	x1, [x8, x0, lsl #3]
   24570:	str	x1, [x19, x0, lsl #3]
   24574:	mov	w0, #0x0                   	// #0
   24578:	ldr	x5, [x19]
   2457c:	b	245a4 <mpfr_round_raw_4@@Base+0x16c>
   24580:	ldr	x4, [x8, x3, lsl #3]
   24584:	add	x4, x4, #0x1
   24588:	str	x4, [x19, x3, lsl #3]
   2458c:	add	x3, x3, #0x1
   24590:	cbnz	x4, 24790 <mpfr_round_raw_4@@Base+0x358>
   24594:	cmp	x3, x6
   24598:	b.lt	24580 <mpfr_round_raw_4@@Base+0x148>  // b.tstop
   2459c:	ldr	x5, [x19]
   245a0:	mov	w0, #0x1                   	// #1
   245a4:	and	x20, x5, x20
   245a8:	str	x20, [x19]
   245ac:	ldp	x19, x20, [sp, #16]
   245b0:	ldp	x29, x30, [sp], #32
   245b4:	ret
   245b8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   245bc:	lsr	x3, x3, x8
   245c0:	tst	x0, x3
   245c4:	b.eq	24774 <mpfr_round_raw_4@@Base+0x33c>  // b.none
   245c8:	cmn	w5, #0x1
   245cc:	b.eq	24858 <mpfr_round_raw_4@@Base+0x420>  // b.none
   245d0:	bics	xzr, x0, x3
   245d4:	b.eq	24878 <mpfr_round_raw_4@@Base+0x440>  // b.none
   245d8:	ldr	x3, [x1, x4, lsl #3]
   245dc:	add	x5, x1, x4, lsl #3
   245e0:	neg	w0, w8
   245e4:	cmp	w8, #0x0
   245e8:	mov	x2, #0x1                   	// #1
   245ec:	lsl	x0, x2, x0
   245f0:	csel	x0, x0, x2, ne  // ne = any
   245f4:	adds	x0, x0, x3
   245f8:	str	x0, [x19]
   245fc:	mov	x3, x0
   24600:	b.cs	246f8 <mpfr_round_raw_4@@Base+0x2c0>  // b.hs, b.nlast
   24604:	cmp	x19, x5
   24608:	mov	w0, #0x0                   	// #0
   2460c:	b.eq	2467c <mpfr_round_raw_4@@Base+0x244>  // b.none
   24610:	cmp	x6, #0x1
   24614:	b.le	2467c <mpfr_round_raw_4@@Base+0x244>
   24618:	add	x0, x5, #0x18
   2461c:	add	x1, x19, #0x8
   24620:	cmp	x0, x1
   24624:	add	x3, x19, #0x18
   24628:	add	x1, x5, #0x8
   2462c:	sub	x0, x6, #0x2
   24630:	ccmp	x3, x1, #0x0, hi  // hi = pmore
   24634:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
   24638:	b.ls	24828 <mpfr_round_raw_4@@Base+0x3f0>  // b.plast
   2463c:	sub	x6, x6, #0x1
   24640:	mov	x0, #0x8                   	// #8
   24644:	lsr	x1, x6, #1
   24648:	lsl	x1, x1, #4
   2464c:	add	x1, x1, x0
   24650:	ldr	q0, [x5, x0]
   24654:	str	q0, [x19, x0]
   24658:	add	x0, x0, #0x10
   2465c:	cmp	x0, x1
   24660:	b.ne	24650 <mpfr_round_raw_4@@Base+0x218>  // b.any
   24664:	orr	x0, x6, #0x1
   24668:	tbz	w6, #0, 24674 <mpfr_round_raw_4@@Base+0x23c>
   2466c:	ldr	x1, [x5, x0, lsl #3]
   24670:	str	x1, [x19, x0, lsl #3]
   24674:	ldr	x3, [x19]
   24678:	mov	w0, #0x0                   	// #0
   2467c:	and	x20, x20, x3
   24680:	str	x20, [x19]
   24684:	ldp	x19, x20, [sp, #16]
   24688:	ldp	x29, x30, [sp], #32
   2468c:	ret
   24690:	cmp	x2, x4
   24694:	b.le	24738 <mpfr_round_raw_4@@Base+0x300>
   24698:	cbz	w8, 24958 <mpfr_round_raw_4@@Base+0x520>
   2469c:	neg	w8, w8
   246a0:	mov	x20, #0x1                   	// #1
   246a4:	add	x6, x6, x20
   246a8:	lsl	x20, x20, x8
   246ac:	neg	x20, x20
   246b0:	sub	x9, x9, x6
   246b4:	mov	x2, x6
   246b8:	mov	x0, x19
   246bc:	add	x1, x1, x9, lsl #3
   246c0:	bl	c520 <__gmpn_copyi@plt>
   246c4:	ldr	x1, [x19]
   246c8:	mov	w0, #0x0                   	// #0
   246cc:	and	x20, x1, x20
   246d0:	str	x20, [x19]
   246d4:	ldp	x19, x20, [sp, #16]
   246d8:	ldp	x29, x30, [sp], #32
   246dc:	ret
   246e0:	ldr	x0, [x5, x2, lsl #3]
   246e4:	add	x3, x2, #0x1
   246e8:	add	x0, x0, #0x1
   246ec:	str	x0, [x19, x2, lsl #3]
   246f0:	cbnz	x0, 248b0 <mpfr_round_raw_4@@Base+0x478>
   246f4:	mov	x2, x3
   246f8:	cmp	x2, x6
   246fc:	b.lt	246e0 <mpfr_round_raw_4@@Base+0x2a8>  // b.tstop
   24700:	mov	w0, #0x1                   	// #1
   24704:	ldr	x3, [x19]
   24708:	b	2467c <mpfr_round_raw_4@@Base+0x244>
   2470c:	ldr	x0, [x8, x3, lsl #3]
   24710:	str	x0, [x19, x3, lsl #3]
   24714:	add	x3, x3, #0x1
   24718:	cmp	x6, x3
   2471c:	b.eq	24574 <mpfr_round_raw_4@@Base+0x13c>  // b.none
   24720:	ldr	x0, [x8, x3, lsl #3]
   24724:	str	x0, [x19, x3, lsl #3]
   24728:	add	x3, x3, #0x1
   2472c:	cmp	x6, x3
   24730:	b.ne	2470c <mpfr_round_raw_4@@Base+0x2d4>  // b.any
   24734:	b	24574 <mpfr_round_raw_4@@Base+0x13c>
   24738:	cmp	w8, #0x0
   2473c:	mov	x2, x9
   24740:	cinc	x6, x6, ne  // ne = any
   24744:	sub	x6, x6, x9
   24748:	lsl	x20, x6, #3
   2474c:	add	x0, x19, x20
   24750:	bl	bae0 <__gmpn_copyd@plt>
   24754:	mov	x2, x20
   24758:	mov	x0, x19
   2475c:	mov	w1, #0x0                   	// #0
   24760:	bl	c110 <memset@plt>
   24764:	mov	w0, #0x0                   	// #0
   24768:	ldp	x19, x20, [sp, #16]
   2476c:	ldp	x29, x30, [sp], #32
   24770:	ret
   24774:	mov	x2, x6
   24778:	add	x1, x1, x4, lsl #3
   2477c:	mov	x0, x19
   24780:	b	246c0 <mpfr_round_raw_4@@Base+0x288>
   24784:	mov	x0, #0xffffffffffffffff    	// #-1
   24788:	mov	x20, x0
   2478c:	b	244b4 <mpfr_round_raw_4@@Base+0x7c>
   24790:	cmp	x8, x19
   24794:	b.eq	2481c <mpfr_round_raw_4@@Base+0x3e4>  // b.none
   24798:	cmp	x3, x6
   2479c:	b.ge	2481c <mpfr_round_raw_4@@Base+0x3e4>  // b.tcont
   247a0:	sub	x0, x3, x6
   247a4:	add	x7, x7, #0x3
   247a8:	add	x7, x7, x0
   247ac:	add	x9, x9, x0
   247b0:	lsl	x0, x3, #3
   247b4:	sub	x2, x6, #0x1
   247b8:	add	x7, x1, x7, lsl #3
   247bc:	add	x4, x19, x0
   247c0:	add	x0, x0, #0x10
   247c4:	add	x1, x1, x9, lsl #3
   247c8:	cmp	x7, x4
   247cc:	add	x0, x19, x0
   247d0:	ccmp	x0, x1, #0x0, hi  // hi = pmore
   247d4:	sub	x2, x2, x3
   247d8:	ccmp	x2, #0x9, #0x0, ls  // ls = plast
   247dc:	b.ls	24840 <mpfr_round_raw_4@@Base+0x408>  // b.plast
   247e0:	sub	x6, x6, x3
   247e4:	mov	x0, #0x0                   	// #0
   247e8:	lsr	x2, x6, #1
   247ec:	lsl	x2, x2, #4
   247f0:	ldr	q0, [x1, x0]
   247f4:	str	q0, [x4, x0]
   247f8:	add	x0, x0, #0x10
   247fc:	cmp	x0, x2
   24800:	b.ne	247f0 <mpfr_round_raw_4@@Base+0x3b8>  // b.any
   24804:	and	x0, x6, #0xfffffffffffffffe
   24808:	add	x3, x0, x3
   2480c:	cmp	x6, x0
   24810:	b.eq	2481c <mpfr_round_raw_4@@Base+0x3e4>  // b.none
   24814:	ldr	x0, [x8, x3, lsl #3]
   24818:	str	x0, [x19, x3, lsl #3]
   2481c:	mov	w0, #0x0                   	// #0
   24820:	ldr	x5, [x19]
   24824:	b	245a4 <mpfr_round_raw_4@@Base+0x16c>
   24828:	ldr	x0, [x5, x2, lsl #3]
   2482c:	str	x0, [x19, x2, lsl #3]
   24830:	add	x2, x2, #0x1
   24834:	cmp	x2, x6
   24838:	b.ne	24828 <mpfr_round_raw_4@@Base+0x3f0>  // b.any
   2483c:	b	24674 <mpfr_round_raw_4@@Base+0x23c>
   24840:	ldr	x0, [x8, x3, lsl #3]
   24844:	str	x0, [x19, x3, lsl #3]
   24848:	add	x3, x3, #0x1
   2484c:	cmp	x6, x3
   24850:	b.ne	24840 <mpfr_round_raw_4@@Base+0x408>  // b.any
   24854:	b	2481c <mpfr_round_raw_4@@Base+0x3e4>
   24858:	add	x5, x1, x4, lsl #3
   2485c:	ldr	x3, [x1, x4, lsl #3]
   24860:	b	245e0 <mpfr_round_raw_4@@Base+0x1a8>
   24864:	cbz	x2, 24774 <mpfr_round_raw_4@@Base+0x33c>
   24868:	sub	x2, x2, #0x1
   2486c:	ldr	x0, [x1, x2, lsl #3]
   24870:	cbnz	x0, 244cc <mpfr_round_raw_4@@Base+0x94>
   24874:	b	24864 <mpfr_round_raw_4@@Base+0x42c>
   24878:	cbz	x2, 2488c <mpfr_round_raw_4@@Base+0x454>
   2487c:	sub	x2, x2, #0x1
   24880:	ldr	x0, [x1, x2, lsl #3]
   24884:	cbnz	x0, 245d8 <mpfr_round_raw_4@@Base+0x1a0>
   24888:	b	24878 <mpfr_round_raw_4@@Base+0x440>
   2488c:	ldr	x3, [x1, x4, lsl #3]
   24890:	eor	x0, x20, x20, lsl #1
   24894:	add	x5, x1, x4, lsl #3
   24898:	tst	x0, x3
   2489c:	b.ne	245e0 <mpfr_round_raw_4@@Base+0x1a8>  // b.any
   248a0:	mov	x2, x6
   248a4:	mov	x1, x5
   248a8:	mov	x0, x19
   248ac:	b	246c0 <mpfr_round_raw_4@@Base+0x288>
   248b0:	cmp	x19, x5
   248b4:	b.eq	24934 <mpfr_round_raw_4@@Base+0x4fc>  // b.none
   248b8:	cmp	x3, x6
   248bc:	b.ge	24934 <mpfr_round_raw_4@@Base+0x4fc>  // b.tcont
   248c0:	add	x2, x2, #0x3
   248c4:	sub	x0, x6, #0x1
   248c8:	sub	x0, x0, x3
   248cc:	lsl	x2, x2, #3
   248d0:	sub	x1, x2, #0x10
   248d4:	add	x7, x5, x2
   248d8:	add	x4, x19, x1
   248dc:	add	x2, x19, x2
   248e0:	add	x1, x5, x1
   248e4:	cmp	x4, x7
   248e8:	ccmp	x1, x2, #0x2, cc  // cc = lo, ul, last
   248ec:	ccmp	x0, #0x9, #0x0, cs  // cs = hs, nlast
   248f0:	b.ls	24940 <mpfr_round_raw_4@@Base+0x508>  // b.plast
   248f4:	sub	x6, x6, x3
   248f8:	mov	x0, #0x0                   	// #0
   248fc:	lsr	x2, x6, #1
   24900:	lsl	x2, x2, #4
   24904:	nop
   24908:	ldr	q0, [x1, x0]
   2490c:	str	q0, [x4, x0]
   24910:	add	x0, x0, #0x10
   24914:	cmp	x0, x2
   24918:	b.ne	24908 <mpfr_round_raw_4@@Base+0x4d0>  // b.any
   2491c:	and	x0, x6, #0xfffffffffffffffe
   24920:	add	x3, x0, x3
   24924:	cmp	x0, x6
   24928:	b.eq	24934 <mpfr_round_raw_4@@Base+0x4fc>  // b.none
   2492c:	ldr	x0, [x5, x3, lsl #3]
   24930:	str	x0, [x19, x3, lsl #3]
   24934:	mov	w0, #0x0                   	// #0
   24938:	ldr	x3, [x19]
   2493c:	b	2467c <mpfr_round_raw_4@@Base+0x244>
   24940:	ldr	x0, [x5, x3, lsl #3]
   24944:	str	x0, [x19, x3, lsl #3]
   24948:	add	x3, x3, #0x1
   2494c:	cmp	x3, x6
   24950:	b.ne	24940 <mpfr_round_raw_4@@Base+0x508>  // b.any
   24954:	b	24934 <mpfr_round_raw_4@@Base+0x4fc>
   24958:	mov	x20, #0xffffffffffffffff    	// #-1
   2495c:	b	246b0 <mpfr_round_raw_4@@Base+0x278>

0000000000024960 <mpfr_prec_round@@Base>:
   24960:	stp	x29, x30, [sp, #-96]!
   24964:	mov	x29, sp
   24968:	stp	x19, x20, [sp, #16]
   2496c:	sub	x20, x1, #0x1
   24970:	mov	x19, x0
   24974:	stp	x21, x22, [sp, #32]
   24978:	mov	x0, #0xfffffffffffffefe    	// #-258
   2497c:	movk	x0, #0x7fff, lsl #48
   24980:	stp	x23, x24, [sp, #48]
   24984:	cmp	x20, x0
   24988:	stp	x25, x26, [sp, #64]
   2498c:	b.hi	24b50 <mpfr_prec_round@@Base+0x1f0>  // b.pmore
   24990:	ldr	x0, [x19]
   24994:	asr	x20, x20, #6
   24998:	mov	x21, x1
   2499c:	mov	w25, w2
   249a0:	sub	x0, x0, #0x1
   249a4:	add	x26, x20, #0x1
   249a8:	cmp	x20, x0, asr #6
   249ac:	b.gt	24a5c <mpfr_prec_round@@Base+0xfc>
   249b0:	ldr	x0, [x19, #16]
   249b4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   249b8:	cmp	x0, x1
   249bc:	b.le	24a94 <mpfr_prec_round@@Base+0x134>
   249c0:	str	xzr, [x29, #88]
   249c4:	lsl	x22, x26, #3
   249c8:	cmp	x22, #0x4, lsl #12
   249cc:	b.hi	24ad4 <mpfr_prec_round@@Base+0x174>  // b.pmore
   249d0:	add	x0, x22, #0xf
   249d4:	and	x0, x0, #0xfffffffffffffff0
   249d8:	sub	sp, sp, x0
   249dc:	mov	x23, sp
   249e0:	ldr	x2, [x19]
   249e4:	add	x6, x29, #0x54
   249e8:	ldr	w3, [x19, #8]
   249ec:	mov	w5, w25
   249f0:	ldr	x24, [x19, #24]
   249f4:	mov	x4, x21
   249f8:	mov	x0, x23
   249fc:	lsr	w3, w3, #31
   24a00:	mov	x1, x24
   24a04:	bl	ca20 <mpfr_round_raw@plt>
   24a08:	str	x21, [x19]
   24a0c:	cbnz	w0, 24ae8 <mpfr_prec_round@@Base+0x188>
   24a10:	cmp	x23, x24
   24a14:	b.eq	24a28 <mpfr_prec_round@@Base+0xc8>  // b.none
   24a18:	mov	x2, x22
   24a1c:	mov	x1, x23
   24a20:	mov	x0, x24
   24a24:	bl	ba10 <memcpy@plt>
   24a28:	ldr	x0, [x29, #88]
   24a2c:	cbnz	x0, 24a54 <mpfr_prec_round@@Base+0xf4>
   24a30:	ldr	w1, [x29, #84]
   24a34:	mov	sp, x29
   24a38:	mov	w0, w1
   24a3c:	ldp	x19, x20, [sp, #16]
   24a40:	ldp	x21, x22, [sp, #32]
   24a44:	ldp	x23, x24, [sp, #48]
   24a48:	ldp	x25, x26, [sp, #64]
   24a4c:	ldp	x29, x30, [sp], #96
   24a50:	ret
   24a54:	bl	c410 <mpfr_tmp_free@plt>
   24a58:	b	24a30 <mpfr_prec_round@@Base+0xd0>
   24a5c:	ldr	x0, [x19, #24]
   24a60:	ldur	x1, [x0, #-8]
   24a64:	cmp	x26, x1
   24a68:	b.le	249b0 <mpfr_prec_round@@Base+0x50>
   24a6c:	add	x1, x1, #0x1
   24a70:	add	x2, x20, #0x2
   24a74:	sub	x0, x0, #0x8
   24a78:	lsl	x1, x1, #3
   24a7c:	lsl	x2, x2, #3
   24a80:	bl	c1c0 <mpfr_reallocate_func@plt>
   24a84:	add	x1, x0, #0x8
   24a88:	str	x1, [x19, #24]
   24a8c:	str	x26, [x0]
   24a90:	b	249b0 <mpfr_prec_round@@Base+0x50>
   24a94:	str	x21, [x19]
   24a98:	mov	x2, #0x2                   	// #2
   24a9c:	movk	x2, #0x8000, lsl #48
   24aa0:	mov	w1, #0x0                   	// #0
   24aa4:	cmp	x0, x2
   24aa8:	b.ne	24a34 <mpfr_prec_round@@Base+0xd4>  // b.any
   24aac:	mrs	x2, tpidr_el0
   24ab0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   24ab4:	ldr	x3, [x0, #2576]
   24ab8:	add	x0, x0, #0xa10
   24abc:	blr	x3
   24ac0:	add	x0, x2, x0
   24ac4:	ldr	w2, [x0]
   24ac8:	orr	w2, w2, #0x4
   24acc:	str	w2, [x0]
   24ad0:	b	24a34 <mpfr_prec_round@@Base+0xd4>
   24ad4:	mov	x1, x22
   24ad8:	add	x0, x29, #0x58
   24adc:	bl	bdc0 <mpfr_tmp_allocate@plt>
   24ae0:	mov	x23, x0
   24ae4:	b	249e0 <mpfr_prec_round@@Base+0x80>
   24ae8:	mrs	x2, tpidr_el0
   24aec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   24af0:	ldr	x1, [x0, #2544]
   24af4:	add	x0, x0, #0x9f0
   24af8:	blr	x1
   24afc:	ldr	x1, [x19, #16]
   24b00:	ldr	x0, [x2, x0]
   24b04:	cmp	x0, x1
   24b08:	b.eq	24b3c <mpfr_prec_round@@Base+0x1dc>  // b.none
   24b0c:	add	x22, x24, x22
   24b10:	add	x1, x1, #0x1
   24b14:	str	x1, [x19, #16]
   24b18:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   24b1c:	cmp	x26, #0x1
   24b20:	stur	x0, [x22, #-8]
   24b24:	b.eq	24a28 <mpfr_prec_round@@Base+0xc8>  // b.none
   24b28:	lsl	x2, x20, #3
   24b2c:	mov	x0, x24
   24b30:	mov	w1, #0x0                   	// #0
   24b34:	bl	c110 <memset@plt>
   24b38:	b	24a28 <mpfr_prec_round@@Base+0xc8>
   24b3c:	ldr	w2, [x19, #8]
   24b40:	mov	w1, w25
   24b44:	mov	x0, x19
   24b48:	bl	bf40 <mpfr_overflow@plt>
   24b4c:	b	24a28 <mpfr_prec_round@@Base+0xc8>
   24b50:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   24b54:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   24b58:	add	x2, x2, #0xad8
   24b5c:	add	x0, x0, #0xb28
   24b60:	mov	w1, #0x3b                  	// #59
   24b64:	bl	cb40 <mpfr_assert_fail@plt>

0000000000024b68 <mpfr_can_round_raw@@Base>:
   24b68:	stp	x29, x30, [sp, #-224]!
   24b6c:	cmp	x6, #0x0
   24b70:	mov	x29, sp
   24b74:	stp	x19, x20, [sp, #16]
   24b78:	stp	x21, x22, [sp, #32]
   24b7c:	stp	x23, x24, [sp, #48]
   24b80:	stp	x25, x26, [sp, #64]
   24b84:	stp	x27, x28, [sp, #80]
   24b88:	b.le	25848 <mpfr_can_round_raw@@Base+0xce0>
   24b8c:	mov	x23, x6
   24b90:	mov	x22, x0
   24b94:	mov	x21, x1
   24b98:	mov	x8, x3
   24b9c:	mov	w25, w4
   24ba0:	mov	w24, w5
   24ba4:	lsr	w28, w2, #31
   24ba8:	cmp	w4, #0x5
   24bac:	b.eq	25198 <mpfr_can_round_raw@@Base+0x630>  // b.none
   24bb0:	cbz	w4, 24d84 <mpfr_can_round_raw@@Base+0x21c>
   24bb4:	cmp	w4, #0x1
   24bb8:	b.eq	252d8 <mpfr_can_round_raw@@Base+0x770>  // b.none
   24bbc:	add	w25, w28, w4
   24bc0:	cmp	w25, #0x3
   24bc4:	b.eq	252d8 <mpfr_can_round_raw@@Base+0x770>  // b.none
   24bc8:	cmp	w5, #0x5
   24bcc:	b.eq	25774 <mpfr_can_round_raw@@Base+0xc0c>  // b.none
   24bd0:	mov	x14, x6
   24bd4:	mov	w25, #0x4                   	// #4
   24bd8:	str	wzr, [x29, #184]
   24bdc:	cbz	w24, 24d9c <mpfr_can_round_raw@@Base+0x234>
   24be0:	cmp	w24, #0x1
   24be4:	b.eq	25828 <mpfr_can_round_raw@@Base+0xcc0>  // b.none
   24be8:	add	w24, w28, w24
   24bec:	mov	w20, #0x1                   	// #1
   24bf0:	cmp	w24, #0x3
   24bf4:	b.eq	2532c <mpfr_can_round_raw@@Base+0x7c4>  // b.none
   24bf8:	mov	w0, #0x0                   	// #0
   24bfc:	mov	w1, #0x0                   	// #0
   24c00:	mov	w24, #0x4                   	// #4
   24c04:	cmp	x8, x14
   24c08:	b.lt	24db4 <mpfr_can_round_raw@@Base+0x24c>  // b.tstop
   24c0c:	b.eq	2542c <mpfr_can_round_raw@@Base+0x8c4>  // b.none
   24c10:	cmp	x23, x21, lsl #6
   24c14:	lsl	x19, x21, #6
   24c18:	b.gt	25440 <mpfr_can_round_raw@@Base+0x8d8>
   24c1c:	cmp	x19, x8
   24c20:	b.lt	2546c <mpfr_can_round_raw@@Base+0x904>  // b.tstop
   24c24:	sub	x19, x23, #0x1
   24c28:	sub	x6, x8, #0x1
   24c2c:	neg	w27, w23
   24c30:	str	xzr, [x29, #216]
   24c34:	asr	x19, x19, #6
   24c38:	asr	x6, x6, #6
   24c3c:	sub	x21, x21, x19
   24c40:	and	w0, w27, #0x3f
   24c44:	str	w0, [x29, #200]
   24c48:	neg	w26, w8
   24c4c:	sub	x6, x6, x19
   24c50:	lsl	x7, x21, #3
   24c54:	add	x5, x6, #0x1
   24c58:	sub	x3, x23, x19, lsl #6
   24c5c:	cmp	x7, #0x4, lsl #12
   24c60:	and	w26, w26, #0x3f
   24c64:	b.hi	2555c <mpfr_can_round_raw@@Base+0x9f4>  // b.pmore
   24c68:	add	x0, x7, #0xf
   24c6c:	and	x0, x0, #0xfffffffffffffff0
   24c70:	sub	sp, sp, x0
   24c74:	mov	x27, sp
   24c78:	subs	x20, x21, x5
   24c7c:	ccmp	x27, x22, #0x4, gt
   24c80:	b.ne	24e48 <mpfr_can_round_raw@@Base+0x2e0>  // b.any
   24c84:	cbz	w25, 24e7c <mpfr_can_round_raw@@Base+0x314>
   24c88:	cmp	w25, #0x1
   24c8c:	b.ne	25054 <mpfr_can_round_raw@@Base+0x4ec>  // b.any
   24c90:	sub	x9, x7, #0x8
   24c94:	stp	x5, x8, [x29, #152]
   24c98:	ldrb	w5, [x29, #200]
   24c9c:	lsl	x1, x21, #6
   24ca0:	mov	w4, w24
   24ca4:	ldr	x25, [x22, x9]
   24ca8:	mov	w2, w28
   24cac:	mov	x0, x22
   24cb0:	stp	x6, x1, [x29, #168]
   24cb4:	lsr	x25, x25, x5
   24cb8:	stp	x3, x9, [x29, #184]
   24cbc:	bl	c760 <mpfr_round_raw_2@plt>
   24cc0:	lsl	x12, x20, #3
   24cc4:	mov	x2, #0x1                   	// #1
   24cc8:	add	x13, x27, x12
   24ccc:	lsl	x26, x2, x26
   24cd0:	ldr	x4, [x22, x20, lsl #3]
   24cd4:	and	x25, x25, #0x1
   24cd8:	sxtw	x0, w0
   24cdc:	add	x12, x22, x12
   24ce0:	adds	x26, x26, x4
   24ce4:	str	x26, [x13]
   24ce8:	eor	x11, x0, x25
   24cec:	cset	x4, cs  // cs = hs, nlast
   24cf0:	ldp	x5, x8, [x29, #152]
   24cf4:	ldp	x6, x1, [x29, #168]
   24cf8:	ldp	x3, x9, [x29, #184]
   24cfc:	b.cs	24dd4 <mpfr_can_round_raw@@Base+0x26c>  // b.hs, b.nlast
   24d00:	cmp	x13, x12
   24d04:	b.eq	24d74 <mpfr_can_round_raw@@Base+0x20c>  // b.none
   24d08:	cmp	x5, #0x1
   24d0c:	b.eq	24d74 <mpfr_can_round_raw@@Base+0x20c>  // b.none
   24d10:	add	x7, x21, #0x2
   24d14:	sub	x0, x21, x6
   24d18:	sub	x7, x7, x6
   24d1c:	sub	x15, x6, #0x1
   24d20:	lsl	x0, x0, #3
   24d24:	lsl	x7, x7, #3
   24d28:	add	x14, x22, x0
   24d2c:	add	x16, x27, x7
   24d30:	add	x0, x27, x0
   24d34:	add	x7, x22, x7
   24d38:	cmp	x16, x14
   24d3c:	ccmp	x7, x0, #0x0, hi  // hi = pmore
   24d40:	ccmp	x15, #0x9, #0x0, ls  // ls = plast
   24d44:	b.ls	257dc <mpfr_can_round_raw@@Base+0xc74>  // b.plast
   24d48:	lsr	x2, x6, #1
   24d4c:	lsl	x2, x2, #4
   24d50:	ldr	q0, [x14, x4]
   24d54:	str	q0, [x0, x4]
   24d58:	add	x4, x4, #0x10
   24d5c:	cmp	x4, x2
   24d60:	b.ne	24d50 <mpfr_can_round_raw@@Base+0x1e8>  // b.any
   24d64:	orr	x0, x6, #0x1
   24d68:	tbz	w6, #0, 24d74 <mpfr_can_round_raw@@Base+0x20c>
   24d6c:	ldr	x2, [x12, x0, lsl #3]
   24d70:	str	x2, [x13, x0, lsl #3]
   24d74:	cmp	x23, x8
   24d78:	b.eq	24e40 <mpfr_can_round_raw@@Base+0x2d8>  // b.none
   24d7c:	ldr	x20, [x27, x9]
   24d80:	b	25138 <mpfr_can_round_raw@@Base+0x5d0>
   24d84:	cmp	w5, #0x5
   24d88:	add	x14, x6, #0x1
   24d8c:	b.eq	25340 <mpfr_can_round_raw@@Base+0x7d8>  // b.none
   24d90:	mov	w0, #0x1                   	// #1
   24d94:	str	w0, [x29, #184]
   24d98:	cbnz	w24, 24be0 <mpfr_can_round_raw@@Base+0x78>
   24d9c:	str	wzr, [x29, #184]
   24da0:	cmp	x8, x14
   24da4:	mov	w20, #0x0                   	// #0
   24da8:	mov	w0, #0x1                   	// #1
   24dac:	mov	w1, #0x0                   	// #0
   24db0:	b.ge	24c0c <mpfr_can_round_raw@@Base+0xa4>  // b.tcont
   24db4:	mov	w19, #0x0                   	// #0
   24db8:	b	25174 <mpfr_can_round_raw@@Base+0x60c>
   24dbc:	ldr	x4, [x12, x2, lsl #3]
   24dc0:	add	x7, x2, #0x1
   24dc4:	add	x4, x4, #0x1
   24dc8:	str	x4, [x13, x2, lsl #3]
   24dcc:	cbnz	x4, 255b0 <mpfr_can_round_raw@@Base+0xa48>
   24dd0:	mov	x2, x7
   24dd4:	cmp	x2, x5
   24dd8:	b.ne	24dbc <mpfr_can_round_raw@@Base+0x254>  // b.any
   24ddc:	cmp	x23, #0x80
   24de0:	b.le	24e1c <mpfr_can_round_raw@@Base+0x2b4>
   24de4:	add	x22, x22, x9
   24de8:	mov	x2, #0x1                   	// #1
   24dec:	b	24df8 <mpfr_can_round_raw@@Base+0x290>
   24df0:	cmn	x4, #0x1
   24df4:	b.ne	24d74 <mpfr_can_round_raw@@Base+0x20c>  // b.any
   24df8:	ldr	x4, [x22, x2, lsl #3]
   24dfc:	add	x2, x2, #0x1
   24e00:	cmp	x2, x19
   24e04:	b.lt	24df0 <mpfr_can_round_raw@@Base+0x288>  // b.tstop
   24e08:	cmp	x23, x8
   24e0c:	ccmn	x4, #0x1, #0x4, eq  // eq = none
   24e10:	b.ne	24e40 <mpfr_can_round_raw@@Base+0x2d8>  // b.any
   24e14:	cmn	x4, #0x1
   24e18:	b.ne	24d7c <mpfr_can_round_raw@@Base+0x214>  // b.any
   24e1c:	cmp	w24, #0x1
   24e20:	b.eq	24e40 <mpfr_can_round_raw@@Base+0x2d8>  // b.none
   24e24:	cmp	x0, x25
   24e28:	cset	w19, eq  // eq = none
   24e2c:	cmp	w24, #0x4
   24e30:	b.ne	2516c <mpfr_can_round_raw@@Base+0x604>  // b.any
   24e34:	cmp	x23, x8
   24e38:	ccmp	x21, x5, #0x0, lt  // lt = tstop
   24e3c:	b.eq	25298 <mpfr_can_round_raw@@Base+0x730>  // b.none
   24e40:	mov	w19, #0x0                   	// #0
   24e44:	b	2516c <mpfr_can_round_raw@@Base+0x604>
   24e48:	lsl	x2, x20, #3
   24e4c:	mov	x1, x22
   24e50:	mov	x0, x27
   24e54:	stp	x5, x8, [x29, #144]
   24e58:	stp	x14, x3, [x29, #160]
   24e5c:	str	x6, [x29, #176]
   24e60:	str	x7, [x29, #192]
   24e64:	bl	ba10 <memcpy@plt>
   24e68:	ldp	x5, x8, [x29, #144]
   24e6c:	ldp	x14, x3, [x29, #160]
   24e70:	ldr	x6, [x29, #176]
   24e74:	ldr	x7, [x29, #192]
   24e78:	cbnz	w25, 24c88 <mpfr_can_round_raw@@Base+0x120>
   24e7c:	lsl	x2, x20, #3
   24e80:	mov	x0, #0x1                   	// #1
   24e84:	add	x25, x27, x2
   24e88:	lsl	x13, x0, x26
   24e8c:	ldr	x1, [x22, x20, lsl #3]
   24e90:	add	x20, x22, x2
   24e94:	adds	x1, x13, x1
   24e98:	str	x1, [x25]
   24e9c:	cset	x1, cs  // cs = hs, nlast
   24ea0:	b.cs	251cc <mpfr_can_round_raw@@Base+0x664>  // b.hs, b.nlast
   24ea4:	cmp	x25, x20
   24ea8:	b.eq	252f8 <mpfr_can_round_raw@@Base+0x790>  // b.none
   24eac:	cmp	x5, #0x1
   24eb0:	b.eq	252f8 <mpfr_can_round_raw@@Base+0x790>  // b.none
   24eb4:	add	x4, x21, #0x2
   24eb8:	sub	x2, x21, x6
   24ebc:	sub	x4, x4, x6
   24ec0:	sub	x12, x6, #0x1
   24ec4:	lsl	x2, x2, #3
   24ec8:	lsl	x4, x4, #3
   24ecc:	add	x11, x22, x2
   24ed0:	add	x15, x27, x4
   24ed4:	add	x2, x27, x2
   24ed8:	add	x4, x22, x4
   24edc:	cmp	x15, x11
   24ee0:	ccmp	x4, x2, #0x0, hi  // hi = pmore
   24ee4:	ccmp	x12, #0x9, #0x0, ls  // ls = plast
   24ee8:	b.ls	252ac <mpfr_can_round_raw@@Base+0x744>  // b.plast
   24eec:	lsr	x0, x6, #1
   24ef0:	lsl	x0, x0, #4
   24ef4:	nop
   24ef8:	ldr	q0, [x11, x1]
   24efc:	str	q0, [x2, x1]
   24f00:	add	x1, x1, #0x10
   24f04:	cmp	x0, x1
   24f08:	b.ne	24ef8 <mpfr_can_round_raw@@Base+0x390>  // b.any
   24f0c:	orr	x0, x6, #0x1
   24f10:	tbz	w6, #0, 24f1c <mpfr_can_round_raw@@Base+0x3b4>
   24f14:	ldr	x1, [x20, x0, lsl #3]
   24f18:	str	x1, [x25, x0, lsl #3]
   24f1c:	cmp	x23, #0x80
   24f20:	b.gt	252f8 <mpfr_can_round_raw@@Base+0x790>
   24f24:	sub	x12, x7, #0x8
   24f28:	stp	x5, x8, [x29, #112]
   24f2c:	stp	x13, x14, [x29, #128]
   24f30:	stp	x6, x7, [x29, #144]
   24f34:	add	x5, x27, x12
   24f38:	ldr	x11, [x27, x12]
   24f3c:	str	x5, [x29, #192]
   24f40:	ldrb	w5, [x29, #200]
   24f44:	lsl	x1, x21, #6
   24f48:	mov	w2, w28
   24f4c:	mov	w4, w24
   24f50:	mov	x0, x27
   24f54:	stp	x1, x3, [x29, #160]
   24f58:	lsr	x11, x11, x5
   24f5c:	and	x21, x11, #0x1
   24f60:	str	x12, [x29, #176]
   24f64:	bl	c760 <mpfr_round_raw_2@plt>
   24f68:	sxtw	x11, w0
   24f6c:	ldp	x13, x14, [x29, #128]
   24f70:	eor	x11, x11, x21
   24f74:	ldr	x0, [x20]
   24f78:	ldp	x5, x8, [x29, #112]
   24f7c:	subs	x2, x0, x13
   24f80:	str	x2, [x25]
   24f84:	ldp	x6, x7, [x29, #144]
   24f88:	ldp	x1, x3, [x29, #160]
   24f8c:	ldr	x12, [x29, #176]
   24f90:	b.cc	250d0 <mpfr_can_round_raw@@Base+0x568>  // b.lo, b.ul, b.last
   24f94:	cmp	x25, x20
   24f98:	b.eq	24ffc <mpfr_can_round_raw@@Base+0x494>  // b.none
   24f9c:	cmp	x5, #0x1
   24fa0:	b.eq	24ffc <mpfr_can_round_raw@@Base+0x494>  // b.none
   24fa4:	add	x0, x25, #0x8
   24fa8:	add	x2, x20, #0x18
   24fac:	cmp	x0, x2
   24fb0:	add	x4, x20, #0x8
   24fb4:	add	x2, x25, #0x18
   24fb8:	sub	x0, x6, #0x1
   24fbc:	ccmp	x4, x2, #0x2, cc  // cc = lo, ul, last
   24fc0:	ccmp	x0, #0x9, #0x0, cs  // cs = hs, nlast
   24fc4:	b.ls	25794 <mpfr_can_round_raw@@Base+0xc2c>  // b.plast
   24fc8:	lsr	x2, x6, #1
   24fcc:	mov	x0, #0x8                   	// #8
   24fd0:	lsl	x2, x2, #4
   24fd4:	add	x2, x2, x0
   24fd8:	ldr	q0, [x20, x0]
   24fdc:	str	q0, [x25, x0]
   24fe0:	add	x0, x0, #0x10
   24fe4:	cmp	x2, x0
   24fe8:	b.ne	24fd8 <mpfr_can_round_raw@@Base+0x470>  // b.any
   24fec:	orr	x0, x6, #0x1
   24ff0:	tbz	w6, #0, 24ffc <mpfr_can_round_raw@@Base+0x494>
   24ff4:	ldr	x2, [x20, x0, lsl #3]
   24ff8:	str	x2, [x25, x0, lsl #3]
   24ffc:	ldr	x0, [x29, #192]
   25000:	ldr	x2, [x0]
   25004:	mov	x0, #0x0                   	// #0
   25008:	mov	x20, x2
   2500c:	nop
   25010:	cmp	x19, x0
   25014:	b.ne	25130 <mpfr_can_round_raw@@Base+0x5c8>  // b.any
   25018:	tbnz	x2, #63, 25130 <mpfr_can_round_raw@@Base+0x5c8>
   2501c:	cmp	w24, #0x1
   25020:	b.eq	24e40 <mpfr_can_round_raw@@Base+0x2d8>  // b.none
   25024:	ldr	w0, [x29, #184]
   25028:	cmp	x11, #0x0
   2502c:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   25030:	b.ne	24e40 <mpfr_can_round_raw@@Base+0x2d8>  // b.any
   25034:	mov	w4, w24
   25038:	add	x3, x3, #0x1
   2503c:	mov	w2, w28
   25040:	mov	x0, x27
   25044:	bl	c760 <mpfr_round_raw_2@plt>
   25048:	cmp	w0, #0x0
   2504c:	cset	w19, ne  // ne = any
   25050:	b	2516c <mpfr_can_round_raw@@Base+0x604>
   25054:	sub	x12, x7, #0x8
   25058:	stp	x5, x8, [x29, #120]
   2505c:	add	x5, x27, x12
   25060:	str	x5, [x29, #192]
   25064:	lsl	x1, x21, #6
   25068:	ldr	x11, [x22, x12]
   2506c:	mov	w4, w24
   25070:	ldrb	w5, [x29, #200]
   25074:	mov	w2, w28
   25078:	mov	x0, x22
   2507c:	stp	x14, x6, [x29, #136]
   25080:	lsl	x20, x20, #3
   25084:	lsr	x11, x11, x5
   25088:	and	x21, x11, #0x1
   2508c:	stp	x7, x1, [x29, #152]
   25090:	add	x25, x27, x20
   25094:	add	x20, x22, x20
   25098:	stp	x3, x12, [x29, #168]
   2509c:	bl	c760 <mpfr_round_raw_2@plt>
   250a0:	sxtw	x11, w0
   250a4:	ldp	x5, x8, [x29, #120]
   250a8:	mov	x13, #0x1                   	// #1
   250ac:	ldp	x14, x6, [x29, #136]
   250b0:	eor	x11, x11, x21
   250b4:	ldp	x7, x1, [x29, #152]
   250b8:	lsl	x13, x13, x26
   250bc:	ldp	x3, x12, [x29, #168]
   250c0:	ldr	x0, [x20]
   250c4:	subs	x2, x0, x13
   250c8:	str	x2, [x25]
   250cc:	b.cs	24f94 <mpfr_can_round_raw@@Base+0x42c>  // b.hs, b.nlast
   250d0:	mov	x0, #0x1                   	// #1
   250d4:	b	250f0 <mpfr_can_round_raw@@Base+0x588>
   250d8:	ldr	x2, [x20, x0, lsl #3]
   250dc:	add	x4, x0, #0x1
   250e0:	sub	x9, x2, #0x1
   250e4:	str	x9, [x25, x0, lsl #3]
   250e8:	cbnz	x2, 25358 <mpfr_can_round_raw@@Base+0x7f0>
   250ec:	mov	x0, x4
   250f0:	cmp	x0, x5
   250f4:	b.ne	250d8 <mpfr_can_round_raw@@Base+0x570>  // b.any
   250f8:	ldr	x0, [x29, #192]
   250fc:	cmp	x23, #0x40
   25100:	ldr	x20, [x0]
   25104:	b.le	2583c <mpfr_can_round_raw@@Base+0xcd4>
   25108:	add	x7, x22, x7
   2510c:	mov	x0, #0x0                   	// #0
   25110:	ldr	x2, [x7, x0, lsl #3]
   25114:	add	x0, x0, #0x1
   25118:	cmp	x2, #0x0
   2511c:	ccmp	x19, x0, #0x4, eq  // eq = none
   25120:	b.gt	25110 <mpfr_can_round_raw@@Base+0x5a8>
   25124:	sub	x2, x2, #0x1
   25128:	cmp	x19, x0
   2512c:	b.eq	25018 <mpfr_can_round_raw@@Base+0x4b0>  // b.none
   25130:	cmp	x8, x14
   25134:	b.eq	25508 <mpfr_can_round_raw@@Base+0x9a0>  // b.none
   25138:	mov	w4, w24
   2513c:	mov	w2, w28
   25140:	mov	x0, x27
   25144:	str	x11, [x29, #192]
   25148:	bl	c760 <mpfr_round_raw_2@plt>
   2514c:	sxtw	x0, w0
   25150:	ldrb	w1, [x29, #200]
   25154:	ldr	x11, [x29, #192]
   25158:	lsr	x20, x20, x1
   2515c:	and	x20, x20, #0x1
   25160:	eor	x20, x20, x0
   25164:	cmp	x20, x11
   25168:	cset	w19, eq  // eq = none
   2516c:	ldr	x0, [x29, #216]
   25170:	cbnz	x0, 25554 <mpfr_can_round_raw@@Base+0x9ec>
   25174:	mov	sp, x29
   25178:	mov	w0, w19
   2517c:	ldp	x19, x20, [sp, #16]
   25180:	ldp	x21, x22, [sp, #32]
   25184:	ldp	x23, x24, [sp, #48]
   25188:	ldp	x25, x26, [sp, #64]
   2518c:	ldp	x27, x28, [sp, #80]
   25190:	ldp	x29, x30, [sp], #224
   25194:	ret
   25198:	cmp	w5, #0x5
   2519c:	add	x14, x6, #0x1
   251a0:	b.eq	25310 <mpfr_can_round_raw@@Base+0x7a8>  // b.none
   251a4:	mov	w0, #0x1                   	// #1
   251a8:	mov	w25, #0x0                   	// #0
   251ac:	str	w0, [x29, #184]
   251b0:	b	24bdc <mpfr_can_round_raw@@Base+0x74>
   251b4:	ldr	x1, [x20, x0, lsl #3]
   251b8:	add	x2, x0, #0x1
   251bc:	add	x1, x1, #0x1
   251c0:	str	x1, [x25, x0, lsl #3]
   251c4:	cbnz	x1, 252f0 <mpfr_can_round_raw@@Base+0x788>
   251c8:	mov	x0, x2
   251cc:	cmp	x5, x0
   251d0:	b.ne	251b4 <mpfr_can_round_raw@@Base+0x64c>  // b.any
   251d4:	cmp	x23, #0x80
   251d8:	b.le	25808 <mpfr_can_round_raw@@Base+0xca0>
   251dc:	sub	x9, x7, #0x8
   251e0:	mov	x0, #0x1                   	// #1
   251e4:	add	x1, x22, x9
   251e8:	b	251f4 <mpfr_can_round_raw@@Base+0x68c>
   251ec:	cmn	x26, #0x1
   251f0:	b.ne	252fc <mpfr_can_round_raw@@Base+0x794>  // b.any
   251f4:	ldr	x26, [x1, x0, lsl #3]
   251f8:	add	x0, x0, #0x1
   251fc:	cmp	x0, x19
   25200:	b.lt	251ec <mpfr_can_round_raw@@Base+0x684>  // b.tstop
   25204:	stp	x8, x5, [x29, #136]
   25208:	add	x5, x27, x9
   2520c:	lsl	x1, x21, #6
   25210:	ldr	x11, [x27, x9]
   25214:	str	x5, [x29, #192]
   25218:	ldrb	w5, [x29, #200]
   2521c:	mov	w4, w24
   25220:	mov	w2, w28
   25224:	mov	x0, x27
   25228:	stp	x7, x6, [x29, #104]
   2522c:	lsr	x11, x11, x5
   25230:	and	x11, x11, #0x1
   25234:	stp	x14, x13, [x29, #120]
   25238:	stp	x1, x3, [x29, #152]
   2523c:	str	x9, [x29, #168]
   25240:	str	x11, [x29, #176]
   25244:	bl	c760 <mpfr_round_raw_2@plt>
   25248:	ldp	x12, x11, [x29, #168]
   2524c:	sxtw	x0, w0
   25250:	cmn	x26, #0x1
   25254:	ldp	x7, x6, [x29, #104]
   25258:	ldp	x14, x13, [x29, #120]
   2525c:	eor	x11, x0, x11
   25260:	ldp	x8, x5, [x29, #136]
   25264:	ldp	x1, x3, [x29, #152]
   25268:	b.ne	250c0 <mpfr_can_round_raw@@Base+0x558>  // b.any
   2526c:	cmp	w24, #0x1
   25270:	b.eq	24e40 <mpfr_can_round_raw@@Base+0x2d8>  // b.none
   25274:	add	x23, x23, #0x1
   25278:	cmp	x8, x23
   2527c:	cset	w0, gt
   25280:	cmp	w24, #0x4
   25284:	mov	w19, w0
   25288:	b.ne	2516c <mpfr_can_round_raw@@Base+0x604>  // b.any
   2528c:	cmp	w0, #0x0
   25290:	ccmp	x21, x5, #0x0, ne  // ne = any
   25294:	b.ne	24e40 <mpfr_can_round_raw@@Base+0x2d8>  // b.any
   25298:	ldr	x0, [x27]
   2529c:	mov	w19, #0x1                   	// #1
   252a0:	cbz	x0, 2516c <mpfr_can_round_raw@@Base+0x604>
   252a4:	mov	w19, #0x0                   	// #0
   252a8:	b	2516c <mpfr_can_round_raw@@Base+0x604>
   252ac:	ldr	x1, [x20, x0, lsl #3]
   252b0:	str	x1, [x25, x0, lsl #3]
   252b4:	add	x0, x0, #0x1
   252b8:	cmp	x0, x5
   252bc:	b.eq	24f1c <mpfr_can_round_raw@@Base+0x3b4>  // b.none
   252c0:	ldr	x1, [x20, x0, lsl #3]
   252c4:	str	x1, [x25, x0, lsl #3]
   252c8:	add	x0, x0, #0x1
   252cc:	cmp	x0, x5
   252d0:	b.ne	252ac <mpfr_can_round_raw@@Base+0x744>  // b.any
   252d4:	b	24f1c <mpfr_can_round_raw@@Base+0x3b4>
   252d8:	cmp	w24, #0x5
   252dc:	b.eq	25590 <mpfr_can_round_raw@@Base+0xa28>  // b.none
   252e0:	mov	x14, x23
   252e4:	mov	w25, #0x1                   	// #1
   252e8:	str	wzr, [x29, #184]
   252ec:	b	24bdc <mpfr_can_round_raw@@Base+0x74>
   252f0:	cmp	x25, x20
   252f4:	b.ne	25678 <mpfr_can_round_raw@@Base+0xb10>  // b.any
   252f8:	sub	x9, x7, #0x8
   252fc:	mov	x12, x9
   25300:	stp	x5, x8, [x29, #112]
   25304:	stp	x13, x14, [x29, #128]
   25308:	stp	x6, x7, [x29, #144]
   2530c:	b	24f34 <mpfr_can_round_raw@@Base+0x3cc>
   25310:	mov	w20, #0x0                   	// #0
   25314:	mov	w0, #0x1                   	// #1
   25318:	mov	w1, #0x0                   	// #0
   2531c:	mov	w25, #0x0                   	// #0
   25320:	mov	w24, #0x0                   	// #0
   25324:	str	wzr, [x29, #184]
   25328:	b	24c04 <mpfr_can_round_raw@@Base+0x9c>
   2532c:	mov	w1, w20
   25330:	mov	w24, w20
   25334:	mov	w0, #0x0                   	// #0
   25338:	str	wzr, [x29, #184]
   2533c:	b	24c04 <mpfr_can_round_raw@@Base+0x9c>
   25340:	mov	w24, #0x0                   	// #0
   25344:	mov	w20, #0x0                   	// #0
   25348:	mov	w0, #0x1                   	// #1
   2534c:	mov	w1, #0x0                   	// #0
   25350:	str	wzr, [x29, #184]
   25354:	b	24c04 <mpfr_can_round_raw@@Base+0x9c>
   25358:	cmp	x25, x20
   2535c:	b.eq	24ffc <mpfr_can_round_raw@@Base+0x494>  // b.none
   25360:	cmp	x6, x0
   25364:	b.le	24ffc <mpfr_can_round_raw@@Base+0x494>
   25368:	add	x0, x0, #0x3
   2536c:	sub	x13, x6, x4
   25370:	lsl	x0, x0, #3
   25374:	sub	x2, x0, #0x10
   25378:	add	x15, x20, x0
   2537c:	add	x7, x25, x2
   25380:	add	x0, x25, x0
   25384:	cmp	x7, x15
   25388:	add	x2, x20, x2
   2538c:	ccmp	x2, x0, #0x2, cc  // cc = lo, ul, last
   25390:	cset	w15, cs  // cs = hs, nlast
   25394:	cmp	x13, #0x9
   25398:	ccmp	x6, x4, #0x1, hi  // hi = pmore
   2539c:	cset	w0, ge  // ge = tcont
   253a0:	tst	w15, w0
   253a4:	b.eq	25400 <mpfr_can_round_raw@@Base+0x898>  // b.none
   253a8:	sub	x5, x5, x4
   253ac:	cmp	x6, x4
   253b0:	csinc	x6, x5, xzr, ge  // ge = tcont
   253b4:	mov	x0, #0x0                   	// #0
   253b8:	lsr	x5, x6, #1
   253bc:	lsl	x5, x5, #4
   253c0:	ldr	q0, [x2, x0]
   253c4:	str	q0, [x7, x0]
   253c8:	add	x0, x0, #0x10
   253cc:	cmp	x5, x0
   253d0:	b.ne	253c0 <mpfr_can_round_raw@@Base+0x858>  // b.any
   253d4:	and	x0, x6, #0xfffffffffffffffe
   253d8:	add	x4, x0, x4
   253dc:	cmp	x0, x6
   253e0:	b.eq	24ffc <mpfr_can_round_raw@@Base+0x494>  // b.none
   253e4:	ldr	x0, [x20, x4, lsl #3]
   253e8:	str	x0, [x25, x4, lsl #3]
   253ec:	ldr	x0, [x29, #192]
   253f0:	ldr	x2, [x0]
   253f4:	mov	x0, #0x0                   	// #0
   253f8:	mov	x20, x2
   253fc:	b	25010 <mpfr_can_round_raw@@Base+0x4a8>
   25400:	ldr	x0, [x20, x4, lsl #3]
   25404:	str	x0, [x25, x4, lsl #3]
   25408:	cmp	x6, x4
   2540c:	add	x4, x4, #0x1
   25410:	b.le	24ffc <mpfr_can_round_raw@@Base+0x494>
   25414:	ldr	x0, [x20, x4, lsl #3]
   25418:	str	x0, [x25, x4, lsl #3]
   2541c:	cmp	x6, x4
   25420:	add	x4, x4, #0x1
   25424:	b.gt	25400 <mpfr_can_round_raw@@Base+0x898>
   25428:	b	24ffc <mpfr_can_round_raw@@Base+0x494>
   2542c:	cmp	w1, #0x0
   25430:	ccmp	w25, #0x4, #0x4, eq  // eq = none
   25434:	b.ne	24c10 <mpfr_can_round_raw@@Base+0xa8>  // b.any
   25438:	mov	w19, #0x0                   	// #0
   2543c:	b	25174 <mpfr_can_round_raw@@Base+0x60c>
   25440:	cmp	w0, #0x0
   25444:	ccmp	w25, w24, #0x4, eq  // eq = none
   25448:	ccmp	x23, x8, #0x0, eq  // eq = none
   2544c:	b.ge	24db4 <mpfr_can_round_raw@@Base+0x24c>  // b.tcont
   25450:	cmp	w25, #0x1
   25454:	b.eq	25464 <mpfr_can_round_raw@@Base+0x8fc>  // b.none
   25458:	add	x23, x23, #0x1
   2545c:	cmp	x23, x8
   25460:	b.eq	2575c <mpfr_can_round_raw@@Base+0xbf4>  // b.none
   25464:	mov	w19, #0x1                   	// #1
   25468:	b	25174 <mpfr_can_round_raw@@Base+0x60c>
   2546c:	mov	x1, x21
   25470:	mov	x0, x22
   25474:	str	x8, [x29, #200]
   25478:	bl	c7d0 <mpfr_powerof2_raw2@plt>
   2547c:	ldr	x8, [x29, #200]
   25480:	cbnz	w0, 25738 <mpfr_can_round_raw@@Base+0xbd0>
   25484:	cbnz	w24, 257b0 <mpfr_can_round_raw@@Base+0xc48>
   25488:	add	x3, x23, #0x1
   2548c:	cmp	x3, x8
   25490:	b.eq	257f8 <mpfr_can_round_raw@@Base+0xc90>  // b.none
   25494:	cmp	x19, x23
   25498:	b.le	25464 <mpfr_can_round_raw@@Base+0x8fc>
   2549c:	asr	x0, x23, #6
   254a0:	mvn	w1, w23
   254a4:	add	x0, x0, #0x1
   254a8:	sub	x0, x21, x0
   254ac:	ldr	x0, [x22, x0, lsl #3]
   254b0:	lsr	x0, x0, x1
   254b4:	tbz	w0, #0, 25464 <mpfr_can_round_raw@@Base+0x8fc>
   254b8:	mov	w2, w28
   254bc:	mov	x1, x19
   254c0:	mov	x0, x22
   254c4:	mov	w4, #0x4                   	// #4
   254c8:	bl	c760 <mpfr_round_raw_2@plt>
   254cc:	cbnz	w0, 25464 <mpfr_can_round_raw@@Base+0x8fc>
   254d0:	cbz	w25, 24db4 <mpfr_can_round_raw@@Base+0x24c>
   254d4:	sub	x0, x23, #0x1
   254d8:	neg	w23, w23
   254dc:	cmp	w25, #0x1
   254e0:	asr	x0, x0, #6
   254e4:	cset	w19, eq  // eq = none
   254e8:	add	x0, x0, #0x1
   254ec:	sub	x21, x21, x0
   254f0:	ldr	x0, [x22, x21, lsl #3]
   254f4:	lsr	x0, x0, x23
   254f8:	mvn	x0, x0
   254fc:	and	w0, w0, #0x1
   25500:	eor	w19, w19, w0
   25504:	b	25174 <mpfr_can_round_raw@@Base+0x60c>
   25508:	cbnz	w24, 24e40 <mpfr_can_round_raw@@Base+0x2d8>
   2550c:	ldr	x0, [x22, x12]
   25510:	ldrb	w2, [x29, #200]
   25514:	lsr	x27, x0, x2
   25518:	tbnz	w27, #0, 24e40 <mpfr_can_round_raw@@Base+0x2d8>
   2551c:	mov	w2, w28
   25520:	mov	w4, #0x1                   	// #1
   25524:	mov	x0, x22
   25528:	stp	x3, x1, [x29, #192]
   2552c:	bl	c760 <mpfr_round_raw_2@plt>
   25530:	ldp	x3, x1, [x29, #192]
   25534:	mov	w19, w0
   25538:	mov	w2, w28
   2553c:	mov	x0, x22
   25540:	mov	w4, #0x4                   	// #4
   25544:	bl	c760 <mpfr_round_raw_2@plt>
   25548:	cmp	w19, w0
   2554c:	cset	w19, eq  // eq = none
   25550:	b	2516c <mpfr_can_round_raw@@Base+0x604>
   25554:	bl	c410 <mpfr_tmp_free@plt>
   25558:	b	25174 <mpfr_can_round_raw@@Base+0x60c>
   2555c:	mov	x1, x7
   25560:	add	x0, x29, #0xd8
   25564:	stp	x5, x8, [x29, #144]
   25568:	stp	x14, x3, [x29, #160]
   2556c:	str	x6, [x29, #176]
   25570:	str	x7, [x29, #192]
   25574:	bl	bdc0 <mpfr_tmp_allocate@plt>
   25578:	mov	x27, x0
   2557c:	ldp	x5, x8, [x29, #144]
   25580:	ldp	x14, x3, [x29, #160]
   25584:	ldr	x6, [x29, #176]
   25588:	ldr	x7, [x29, #192]
   2558c:	b	24c78 <mpfr_can_round_raw@@Base+0x110>
   25590:	mov	w20, #0x1                   	// #1
   25594:	mov	x14, x23
   25598:	mov	w1, w20
   2559c:	mov	w25, w20
   255a0:	mov	w24, w20
   255a4:	mov	w0, #0x0                   	// #0
   255a8:	str	wzr, [x29, #184]
   255ac:	b	24c04 <mpfr_can_round_raw@@Base+0x9c>
   255b0:	cmp	x13, x12
   255b4:	b.eq	24d74 <mpfr_can_round_raw@@Base+0x20c>  // b.none
   255b8:	cmp	x6, x2
   255bc:	b.le	24d74 <mpfr_can_round_raw@@Base+0x20c>
   255c0:	sub	x2, x21, x6
   255c4:	sub	x4, x7, x6
   255c8:	add	x0, x21, #0x1
   255cc:	add	x2, x2, x7
   255d0:	add	x0, x0, x4
   255d4:	sub	x4, x6, x7
   255d8:	lsl	x2, x2, #3
   255dc:	sub	x2, x2, #0x8
   255e0:	lsl	x0, x0, #3
   255e4:	add	x15, x27, x0
   255e8:	add	x14, x22, x2
   255ec:	add	x0, x22, x0
   255f0:	cmp	x15, x14
   255f4:	add	x2, x27, x2
   255f8:	ccmp	x0, x2, #0x0, hi  // hi = pmore
   255fc:	cset	w15, ls  // ls = plast
   25600:	cmp	x4, #0x9
   25604:	ccmp	x6, x7, #0x1, hi  // hi = pmore
   25608:	cset	w0, ge  // ge = tcont
   2560c:	tst	w15, w0
   25610:	b.eq	25660 <mpfr_can_round_raw@@Base+0xaf8>  // b.none
   25614:	sub	x5, x5, x7
   25618:	cmp	x6, x7
   2561c:	csinc	x5, x5, xzr, ge  // ge = tcont
   25620:	mov	x0, #0x0                   	// #0
   25624:	lsr	x4, x5, #1
   25628:	lsl	x4, x4, #4
   2562c:	nop
   25630:	ldr	q0, [x14, x0]
   25634:	str	q0, [x2, x0]
   25638:	add	x0, x0, #0x10
   2563c:	cmp	x4, x0
   25640:	b.ne	25630 <mpfr_can_round_raw@@Base+0xac8>  // b.any
   25644:	and	x0, x5, #0xfffffffffffffffe
   25648:	add	x7, x0, x7
   2564c:	cmp	x5, x0
   25650:	b.eq	24d74 <mpfr_can_round_raw@@Base+0x20c>  // b.none
   25654:	ldr	x0, [x12, x7, lsl #3]
   25658:	str	x0, [x13, x7, lsl #3]
   2565c:	b	24d74 <mpfr_can_round_raw@@Base+0x20c>
   25660:	ldr	x0, [x12, x7, lsl #3]
   25664:	str	x0, [x13, x7, lsl #3]
   25668:	cmp	x6, x7
   2566c:	add	x7, x7, #0x1
   25670:	b.gt	25660 <mpfr_can_round_raw@@Base+0xaf8>
   25674:	b	24d74 <mpfr_can_round_raw@@Base+0x20c>
   25678:	cmp	x6, x0
   2567c:	b.le	252f8 <mpfr_can_round_raw@@Base+0x790>
   25680:	sub	x1, x21, x6
   25684:	sub	x4, x2, x6
   25688:	add	x0, x21, #0x1
   2568c:	add	x1, x1, x2
   25690:	add	x0, x0, x4
   25694:	sub	x4, x6, x2
   25698:	lsl	x1, x1, #3
   2569c:	sub	x1, x1, #0x8
   256a0:	lsl	x0, x0, #3
   256a4:	add	x12, x27, x0
   256a8:	add	x11, x22, x1
   256ac:	cmp	x11, x12
   256b0:	add	x0, x22, x0
   256b4:	add	x1, x27, x1
   256b8:	ccmp	x0, x1, #0x0, cc  // cc = lo, ul, last
   256bc:	cset	w12, ls  // ls = plast
   256c0:	cmp	x4, #0x9
   256c4:	ccmp	x6, x2, #0x1, hi  // hi = pmore
   256c8:	cset	w0, ge  // ge = tcont
   256cc:	tst	w12, w0
   256d0:	b.eq	25720 <mpfr_can_round_raw@@Base+0xbb8>  // b.none
   256d4:	cmp	x6, x2
   256d8:	sub	x12, x5, x2
   256dc:	csinc	x12, x12, xzr, ge  // ge = tcont
   256e0:	mov	x0, #0x0                   	// #0
   256e4:	lsr	x4, x12, #1
   256e8:	lsl	x4, x4, #4
   256ec:	nop
   256f0:	ldr	q0, [x11, x0]
   256f4:	str	q0, [x1, x0]
   256f8:	add	x0, x0, #0x10
   256fc:	cmp	x0, x4
   25700:	b.ne	256f0 <mpfr_can_round_raw@@Base+0xb88>  // b.any
   25704:	and	x0, x12, #0xfffffffffffffffe
   25708:	add	x2, x0, x2
   2570c:	cmp	x0, x12
   25710:	b.eq	24f1c <mpfr_can_round_raw@@Base+0x3b4>  // b.none
   25714:	ldr	x0, [x20, x2, lsl #3]
   25718:	str	x0, [x25, x2, lsl #3]
   2571c:	b	24f1c <mpfr_can_round_raw@@Base+0x3b4>
   25720:	ldr	x0, [x20, x2, lsl #3]
   25724:	str	x0, [x25, x2, lsl #3]
   25728:	cmp	x6, x2
   2572c:	add	x2, x2, #0x1
   25730:	b.gt	25720 <mpfr_can_round_raw@@Base+0xbb8>
   25734:	b	24f1c <mpfr_can_round_raw@@Base+0x3b4>
   25738:	cmp	w20, #0x0
   2573c:	ccmp	w25, w24, #0x4, ne  // ne = any
   25740:	b.ne	24db4 <mpfr_can_round_raw@@Base+0x24c>  // b.any
   25744:	cmp	w25, #0x1
   25748:	b.eq	25464 <mpfr_can_round_raw@@Base+0x8fc>  // b.none
   2574c:	add	x23, x23, #0x1
   25750:	cmp	x23, x8
   25754:	cset	w19, lt  // lt = tstop
   25758:	b	25174 <mpfr_can_round_raw@@Base+0x60c>
   2575c:	mov	x1, x21
   25760:	mov	x0, x22
   25764:	bl	c7d0 <mpfr_powerof2_raw2@plt>
   25768:	cmp	w0, #0x0
   2576c:	cset	w19, eq  // eq = none
   25770:	b	25174 <mpfr_can_round_raw@@Base+0x60c>
   25774:	mov	w20, #0x1                   	// #1
   25778:	mov	x14, x6
   2577c:	mov	w1, w20
   25780:	mov	w24, w20
   25784:	mov	w0, #0x0                   	// #0
   25788:	mov	w25, #0x4                   	// #4
   2578c:	str	wzr, [x29, #184]
   25790:	b	24c04 <mpfr_can_round_raw@@Base+0x9c>
   25794:	mov	x0, #0x1                   	// #1
   25798:	ldr	x2, [x20, x0, lsl #3]
   2579c:	str	x2, [x25, x0, lsl #3]
   257a0:	add	x0, x0, #0x1
   257a4:	cmp	x5, x0
   257a8:	b.ne	25798 <mpfr_can_round_raw@@Base+0xc30>  // b.any
   257ac:	b	24ffc <mpfr_can_round_raw@@Base+0x494>
   257b0:	cmp	w25, w24
   257b4:	b.eq	25464 <mpfr_can_round_raw@@Base+0x8fc>  // b.none
   257b8:	mov	x1, x19
   257bc:	mov	x3, x23
   257c0:	mov	w2, w28
   257c4:	mov	x0, x22
   257c8:	mov	w4, #0x4                   	// #4
   257cc:	bl	c760 <mpfr_round_raw_2@plt>
   257d0:	cmp	w0, #0x0
   257d4:	cset	w19, ne  // ne = any
   257d8:	b	25174 <mpfr_can_round_raw@@Base+0x60c>
   257dc:	mov	x0, x2
   257e0:	ldr	x2, [x12, x0, lsl #3]
   257e4:	str	x2, [x13, x0, lsl #3]
   257e8:	add	x0, x0, #0x1
   257ec:	cmp	x0, x5
   257f0:	b.ne	257e0 <mpfr_can_round_raw@@Base+0xc78>  // b.any
   257f4:	b	24d74 <mpfr_can_round_raw@@Base+0x20c>
   257f8:	ldr	x0, [x22]
   257fc:	tbz	w0, #0, 25494 <mpfr_can_round_raw@@Base+0x92c>
   25800:	mov	w19, #0x0                   	// #0
   25804:	b	25174 <mpfr_can_round_raw@@Base+0x60c>
   25808:	mov	w2, w28
   2580c:	mov	w4, w24
   25810:	lsl	x1, x21, #6
   25814:	mov	x0, x27
   25818:	stp	x5, x8, [x29, #192]
   2581c:	bl	c760 <mpfr_round_raw_2@plt>
   25820:	ldp	x5, x8, [x29, #192]
   25824:	b	2526c <mpfr_can_round_raw@@Base+0x704>
   25828:	mov	w20, w24
   2582c:	mov	w1, w24
   25830:	mov	w0, #0x0                   	// #0
   25834:	str	wzr, [x29, #184]
   25838:	b	24c04 <mpfr_can_round_raw@@Base+0x9c>
   2583c:	mov	x2, x20
   25840:	mov	x0, #0x0                   	// #0
   25844:	b	25128 <mpfr_can_round_raw@@Base+0x5c0>
   25848:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   2584c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   25850:	add	x2, x2, #0xb38
   25854:	add	x0, x0, #0xb28
   25858:	mov	w1, #0xbf                  	// #191
   2585c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000025860 <mpfr_can_round@@Base>:
   25860:	ldr	x7, [x0, #16]
   25864:	mov	w8, w2
   25868:	mov	w5, w3
   2586c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   25870:	mov	x6, x4
   25874:	cmp	x7, x2
   25878:	b.le	258a0 <mpfr_can_round@@Base+0x40>
   2587c:	ldr	x7, [x0]
   25880:	mov	x3, x1
   25884:	ldr	w2, [x0, #8]
   25888:	mov	w4, w8
   2588c:	ldr	x0, [x0, #24]
   25890:	sub	x7, x7, #0x1
   25894:	asr	x1, x7, #6
   25898:	add	x1, x1, #0x1
   2589c:	b	c350 <mpfr_can_round_raw@plt>
   258a0:	mov	w0, #0x0                   	// #0
   258a4:	ret

00000000000258a8 <mpfr_set@@Base>:
   258a8:	ldr	w3, [x1, #8]
   258ac:	b	c6a0 <mpfr_set4@plt>

00000000000258b0 <mpfr_abs@@Base>:
   258b0:	mov	w3, #0x1                   	// #1
   258b4:	b	c6a0 <mpfr_set4@plt>

00000000000258b8 <mpfr_set_1_2@@Base>:
   258b8:	stp	x29, x30, [sp, #-64]!
   258bc:	mov	x29, sp
   258c0:	ldr	x4, [x1, #16]
   258c4:	stp	x21, x22, [sp, #32]
   258c8:	sxtw	x22, w3
   258cc:	stp	x23, x24, [sp, #48]
   258d0:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   258d4:	cmp	x4, x3
   258d8:	ldr	x23, [x0]
   258dc:	b.le	25afc <mpfr_set_1_2@@Base+0x244>
   258e0:	stp	x19, x20, [sp, #16]
   258e4:	mov	w24, w2
   258e8:	mov	x19, x1
   258ec:	mov	x20, x0
   258f0:	cmp	x23, #0x3f
   258f4:	ldr	x3, [x1]
   258f8:	b.gt	259c0 <mpfr_set_1_2@@Base+0x108>
   258fc:	ldr	x6, [x19, #24]
   25900:	mov	x4, #0x40                  	// #64
   25904:	sub	x4, x4, x23
   25908:	mov	x0, #0x1                   	// #1
   2590c:	sub	w5, w4, #0x1
   25910:	cmp	x3, #0x40
   25914:	lsl	x2, x0, x4
   25918:	sub	x1, x2, #0x1
   2591c:	lsl	x0, x0, x5
   25920:	neg	x3, x2
   25924:	eor	x1, x1, x0
   25928:	ldr	x5, [x6]
   2592c:	b.le	259b0 <mpfr_set_1_2@@Base+0xf8>
   25930:	ldr	x6, [x6, #8]
   25934:	and	x1, x6, x1
   25938:	and	x0, x6, x0
   2593c:	orr	x1, x1, x5
   25940:	and	x3, x6, x3
   25944:	ldr	x5, [x20, #24]
   25948:	ldr	w21, [x19, #8]
   2594c:	str	x3, [x5]
   25950:	ldr	x6, [x19, #16]
   25954:	mul	w3, w21, w22
   25958:	str	w21, [x20, #8]
   2595c:	str	x6, [x20, #16]
   25960:	cmp	w3, #0x0
   25964:	b.le	25a28 <mpfr_set_1_2@@Base+0x170>
   25968:	cmp	x0, #0x0
   2596c:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   25970:	b.eq	25a8c <mpfr_set_1_2@@Base+0x1d4>  // b.none
   25974:	orr	x3, x0, x1
   25978:	cbnz	x3, 25a34 <mpfr_set_1_2@@Base+0x17c>
   2597c:	cbz	w22, 25a0c <mpfr_set_1_2@@Base+0x154>
   25980:	mrs	x1, tpidr_el0
   25984:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25988:	ldr	x2, [x0, #2576]
   2598c:	add	x0, x0, #0xa10
   25990:	blr	x2
   25994:	add	x0, x1, x0
   25998:	mov	w21, w22
   2599c:	ldp	x19, x20, [sp, #16]
   259a0:	ldr	w1, [x0]
   259a4:	orr	w1, w1, #0x8
   259a8:	str	w1, [x0]
   259ac:	b	259f8 <mpfr_set_1_2@@Base+0x140>
   259b0:	and	x0, x0, x5
   259b4:	and	x1, x5, x1
   259b8:	and	x3, x3, x5
   259bc:	b	25944 <mpfr_set_1_2@@Base+0x8c>
   259c0:	bl	c1f0 <mpfr_set@plt>
   259c4:	mov	w21, w0
   259c8:	cbnz	w24, 259f0 <mpfr_set_1_2@@Base+0x138>
   259cc:	mul	w0, w0, w22
   259d0:	cmp	w0, #0x0
   259d4:	b.le	259f0 <mpfr_set_1_2@@Base+0x138>
   259d8:	mov	x0, x19
   259dc:	bl	c990 <mpfr_min_prec@plt>
   259e0:	add	x4, x23, #0x1
   259e4:	cmp	x0, x4
   259e8:	b.eq	25b50 <mpfr_set_1_2@@Base+0x298>  // b.none
   259ec:	nop
   259f0:	cbz	w21, 25a0c <mpfr_set_1_2@@Base+0x154>
   259f4:	ldp	x19, x20, [sp, #16]
   259f8:	mov	w0, w21
   259fc:	ldp	x21, x22, [sp, #32]
   25a00:	ldp	x23, x24, [sp, #48]
   25a04:	ldp	x29, x30, [sp], #64
   25a08:	ret
   25a0c:	mov	w21, w22
   25a10:	mov	w0, w21
   25a14:	ldp	x19, x20, [sp, #16]
   25a18:	ldp	x21, x22, [sp, #32]
   25a1c:	ldp	x23, x24, [sp, #48]
   25a20:	ldp	x29, x30, [sp], #64
   25a24:	ret
   25a28:	orr	x1, x1, x22
   25a2c:	orr	x3, x0, x1
   25a30:	cbz	x3, 25ac4 <mpfr_set_1_2@@Base+0x20c>
   25a34:	cbz	w24, 25ae0 <mpfr_set_1_2@@Base+0x228>
   25a38:	cmp	w24, #0x1
   25a3c:	b.eq	25a90 <mpfr_set_1_2@@Base+0x1d8>  // b.none
   25a40:	add	w0, w24, w21, lsr #31
   25a44:	cmp	w0, #0x3
   25a48:	b.eq	25a90 <mpfr_set_1_2@@Base+0x1d8>  // b.none
   25a4c:	ldr	x0, [x5]
   25a50:	add	x2, x2, x0
   25a54:	str	x2, [x5]
   25a58:	cbz	x2, 25b18 <mpfr_set_1_2@@Base+0x260>
   25a5c:	cbz	w21, 259f4 <mpfr_set_1_2@@Base+0x13c>
   25a60:	mrs	x1, tpidr_el0
   25a64:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25a68:	ldr	x2, [x0, #2576]
   25a6c:	add	x0, x0, #0xa10
   25a70:	blr	x2
   25a74:	add	x0, x1, x0
   25a78:	ldp	x19, x20, [sp, #16]
   25a7c:	ldr	w1, [x0]
   25a80:	orr	w1, w1, #0x8
   25a84:	str	w1, [x0]
   25a88:	b	259f8 <mpfr_set_1_2@@Base+0x140>
   25a8c:	cbnz	w24, 25a38 <mpfr_set_1_2@@Base+0x180>
   25a90:	cbz	w21, 259f4 <mpfr_set_1_2@@Base+0x13c>
   25a94:	mrs	x1, tpidr_el0
   25a98:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25a9c:	ldr	x2, [x0, #2576]
   25aa0:	add	x0, x0, #0xa10
   25aa4:	blr	x2
   25aa8:	add	x0, x1, x0
   25aac:	neg	w21, w21
   25ab0:	ldp	x19, x20, [sp, #16]
   25ab4:	ldr	w1, [x0]
   25ab8:	orr	w1, w1, #0x8
   25abc:	str	w1, [x0]
   25ac0:	b	259f8 <mpfr_set_1_2@@Base+0x140>
   25ac4:	mov	w21, #0x0                   	// #0
   25ac8:	mov	w0, w21
   25acc:	ldp	x19, x20, [sp, #16]
   25ad0:	ldp	x21, x22, [sp, #32]
   25ad4:	ldp	x23, x24, [sp, #48]
   25ad8:	ldp	x29, x30, [sp], #64
   25adc:	ret
   25ae0:	cbz	x0, 25a90 <mpfr_set_1_2@@Base+0x1d8>
   25ae4:	ldr	x0, [x5]
   25ae8:	lsr	x4, x0, x4
   25aec:	and	x4, x4, #0x1
   25af0:	orr	x1, x4, x1
   25af4:	cbnz	x1, 25a50 <mpfr_set_1_2@@Base+0x198>
   25af8:	b	25a90 <mpfr_set_1_2@@Base+0x1d8>
   25afc:	bl	c1f0 <mpfr_set@plt>
   25b00:	mov	w21, w22
   25b04:	mov	w0, w21
   25b08:	ldp	x21, x22, [sp, #32]
   25b0c:	ldp	x23, x24, [sp, #48]
   25b10:	ldp	x29, x30, [sp], #64
   25b14:	ret
   25b18:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   25b1c:	mrs	x1, tpidr_el0
   25b20:	str	x0, [x5]
   25b24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25b28:	ldr	x2, [x0, #2544]
   25b2c:	add	x0, x0, #0x9f0
   25b30:	blr	x2
   25b34:	ldr	x1, [x1, x0]
   25b38:	ldr	x0, [x20, #16]
   25b3c:	cmp	x0, x1
   25b40:	b.ge	25b74 <mpfr_set_1_2@@Base+0x2bc>  // b.tcont
   25b44:	add	x0, x0, #0x1
   25b48:	str	x0, [x20, #16]
   25b4c:	b	25a5c <mpfr_set_1_2@@Base+0x1a4>
   25b50:	mov	x0, x20
   25b54:	cmp	w22, #0x0
   25b58:	b.le	25b6c <mpfr_set_1_2@@Base+0x2b4>
   25b5c:	bl	bdd0 <mpfr_nextbelow@plt>
   25b60:	neg	w21, w22
   25b64:	ldp	x19, x20, [sp, #16]
   25b68:	b	259f8 <mpfr_set_1_2@@Base+0x140>
   25b6c:	bl	c120 <mpfr_nextabove@plt>
   25b70:	b	25b60 <mpfr_set_1_2@@Base+0x2a8>
   25b74:	mov	w2, w21
   25b78:	mov	w1, w24
   25b7c:	mov	x0, x20
   25b80:	ldp	x19, x20, [sp, #16]
   25b84:	ldp	x21, x22, [sp, #32]
   25b88:	ldp	x23, x24, [sp, #48]
   25b8c:	ldp	x29, x30, [sp], #64
   25b90:	b	bf40 <mpfr_overflow@plt>
   25b94:	nop

0000000000025b98 <mpfr_setmax@@Base>:
   25b98:	ldr	x4, [x0]
   25b9c:	mov	x3, #0xffffffffffffffff    	// #-1
   25ba0:	str	x1, [x0, #16]
   25ba4:	add	x2, x4, x3
   25ba8:	ldr	x0, [x0, #24]
   25bac:	asr	x2, x2, #6
   25bb0:	add	x1, x2, #0x1
   25bb4:	cmp	x1, #0x1
   25bb8:	lsl	w1, w1, #6
   25bbc:	sub	w1, w1, w4
   25bc0:	lsl	x1, x3, x1
   25bc4:	str	x1, [x0]
   25bc8:	b.eq	25bdc <mpfr_setmax@@Base+0x44>  // b.none
   25bcc:	lsl	x2, x2, #3
   25bd0:	add	x0, x0, #0x8
   25bd4:	mov	w1, #0xff                  	// #255
   25bd8:	b	c110 <memset@plt>
   25bdc:	ret

0000000000025be0 <mpfr_setmin@@Base>:
   25be0:	ldr	x2, [x0]
   25be4:	mov	x3, x1
   25be8:	str	x3, [x0, #16]
   25bec:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   25bf0:	add	x3, x2, #0x3e
   25bf4:	subs	x2, x2, #0x1
   25bf8:	csel	x3, x3, x2, mi  // mi = first
   25bfc:	mov	w1, #0x0                   	// #0
   25c00:	ldr	x0, [x0, #24]
   25c04:	asr	x3, x3, #6
   25c08:	lsl	x2, x3, #3
   25c0c:	str	x4, [x0, x3, lsl #3]
   25c10:	b	c110 <memset@plt>
   25c14:	nop

0000000000025c18 <mpfr_set_d@@Base>:
   25c18:	stp	x29, x30, [sp, #-112]!
   25c1c:	fcmp	d0, d0
   25c20:	mov	x29, sp
   25c24:	stp	x19, x20, [sp, #16]
   25c28:	mov	x20, x0
   25c2c:	b.ne	25dec <mpfr_set_d@@Base+0x1d4>  // b.any
   25c30:	fcmp	d0, #0.0
   25c34:	b.eq	25e2c <mpfr_set_d@@Base+0x214>  // b.none
   25c38:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   25c3c:	fmov	d1, x0
   25c40:	fcmpe	d0, d1
   25c44:	b.gt	25dc4 <mpfr_set_d@@Base+0x1ac>
   25c48:	mov	x0, #0xffefffffffffffff    	// #-4503599627370497
   25c4c:	fmov	d1, x0
   25c50:	fcmpe	d0, d1
   25c54:	b.mi	25dc4 <mpfr_set_d@@Base+0x1ac>  // b.first
   25c58:	mrs	x19, tpidr_el0
   25c5c:	stp	x21, x22, [sp, #32]
   25c60:	mov	w21, w1
   25c64:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25c68:	ldr	x1, [x0, #2576]
   25c6c:	add	x0, x0, #0xa10
   25c70:	blr	x1
   25c74:	stp	x23, x24, [sp, #48]
   25c78:	add	x1, sp, #0x48
   25c7c:	ldr	w22, [x19, x0]
   25c80:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25c84:	ldr	x3, [x0, #2512]
   25c88:	add	x0, x0, #0x9d0
   25c8c:	blr	x3
   25c90:	add	x4, x19, x0
   25c94:	fmov	x3, d0
   25c98:	mov	x5, #0x35                  	// #53
   25c9c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   25ca0:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   25ca4:	str	x5, [sp, #80]
   25ca8:	str	x1, [sp, #104]
   25cac:	ldr	x23, [x19, x0]
   25cb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25cb4:	ldr	x1, [x0, #2544]
   25cb8:	add	x0, x0, #0x9f0
   25cbc:	blr	x1
   25cc0:	str	x6, [x4]
   25cc4:	ubfx	x5, x3, #52, #11
   25cc8:	ldr	x24, [x19, x0]
   25ccc:	str	x2, [x19, x0]
   25cd0:	ubfx	x4, x3, #32, #20
   25cd4:	ubfiz	x1, x3, #11, #32
   25cd8:	cbnz	w5, 25d94 <mpfr_set_d@@Base+0x17c>
   25cdc:	orr	x4, x1, x4, lsl #43
   25ce0:	mov	w5, #0xfffffc03            	// #-1021
   25ce4:	clz	x3, x4
   25ce8:	sub	w5, w5, w3
   25cec:	lsl	x4, x4, x3
   25cf0:	fcmpe	d0, #0.0
   25cf4:	sxtw	x5, w5
   25cf8:	add	x1, sp, #0x50
   25cfc:	mov	w2, w21
   25d00:	mov	x0, x20
   25d04:	mov	w3, #0x1                   	// #1
   25d08:	str	x4, [sp, #72]
   25d0c:	cneg	w3, w3, mi  // mi = first
   25d10:	str	x5, [sp, #96]
   25d14:	bl	c6a0 <mpfr_set4@plt>
   25d18:	mov	w3, w0
   25d1c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25d20:	ldr	x1, [x0, #2576]
   25d24:	add	x0, x0, #0xa10
   25d28:	blr	x1
   25d2c:	str	w22, [x19, x0]
   25d30:	ldr	x1, [x20, #16]
   25d34:	add	x2, x19, x0
   25d38:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25d3c:	ldr	x4, [x0, #2512]
   25d40:	add	x0, x0, #0x9d0
   25d44:	blr	x4
   25d48:	str	x23, [x19, x0]
   25d4c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25d50:	ldr	x4, [x0, #2544]
   25d54:	add	x0, x0, #0x9f0
   25d58:	blr	x4
   25d5c:	str	x24, [x19, x0]
   25d60:	cmp	x24, x1
   25d64:	mov	w0, w3
   25d68:	ccmp	x23, x1, #0x0, ge  // ge = tcont
   25d6c:	b.le	25da4 <mpfr_set_d@@Base+0x18c>
   25d70:	mov	w1, w0
   25d74:	mov	w2, w21
   25d78:	mov	x0, x20
   25d7c:	bl	cb30 <mpfr_check_range@plt>
   25d80:	ldp	x21, x22, [sp, #32]
   25d84:	ldp	x23, x24, [sp, #48]
   25d88:	ldp	x19, x20, [sp, #16]
   25d8c:	ldp	x29, x30, [sp], #112
   25d90:	ret
   25d94:	orr	x4, x1, x4, lsl #43
   25d98:	sub	w5, w5, #0x3fe
   25d9c:	orr	x4, x4, #0x8000000000000000
   25da0:	b	25cf0 <mpfr_set_d@@Base+0xd8>
   25da4:	cbz	w0, 25d80 <mpfr_set_d@@Base+0x168>
   25da8:	orr	w22, w22, #0x8
   25dac:	ldp	x23, x24, [sp, #48]
   25db0:	str	w22, [x2]
   25db4:	ldp	x19, x20, [sp, #16]
   25db8:	ldp	x21, x22, [sp, #32]
   25dbc:	ldp	x29, x30, [sp], #112
   25dc0:	ret
   25dc4:	fcmpe	d0, #0.0
   25dc8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   25dcc:	str	x0, [x20, #16]
   25dd0:	b.le	25e3c <mpfr_set_d@@Base+0x224>
   25dd4:	mov	w1, #0x1                   	// #1
   25dd8:	str	w1, [x20, #8]
   25ddc:	mov	w0, #0x0                   	// #0
   25de0:	ldp	x19, x20, [sp, #16]
   25de4:	ldp	x29, x30, [sp], #112
   25de8:	ret
   25dec:	mrs	x1, tpidr_el0
   25df0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25df4:	ldr	x2, [x0, #2576]
   25df8:	add	x0, x0, #0xa10
   25dfc:	blr	x2
   25e00:	add	x1, x1, x0
   25e04:	mov	x2, #0x2                   	// #2
   25e08:	movk	x2, #0x8000, lsl #48
   25e0c:	str	x2, [x20, #16]
   25e10:	mov	w0, #0x0                   	// #0
   25e14:	ldr	w2, [x1]
   25e18:	ldp	x19, x20, [sp, #16]
   25e1c:	orr	w2, w2, #0x4
   25e20:	str	w2, [x1]
   25e24:	ldp	x29, x30, [sp], #112
   25e28:	ret
   25e2c:	fmov	x1, d0
   25e30:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   25e34:	str	x0, [x20, #16]
   25e38:	tbz	x1, #63, 25dd4 <mpfr_set_d@@Base+0x1bc>
   25e3c:	mov	w1, #0xffffffff            	// #-1
   25e40:	mov	w0, #0x0                   	// #0
   25e44:	str	w1, [x20, #8]
   25e48:	b	25d88 <mpfr_set_d@@Base+0x170>
   25e4c:	nop

0000000000025e50 <mpfr_set_default_prec@@Base>:
   25e50:	stp	x29, x30, [sp, #-16]!
   25e54:	mov	x1, x0
   25e58:	mov	x2, #0xfffffffffffffefe    	// #-258
   25e5c:	mov	x29, sp
   25e60:	sub	x0, x0, #0x1
   25e64:	movk	x2, #0x7fff, lsl #48
   25e68:	cmp	x0, x2
   25e6c:	b.hi	25e90 <mpfr_set_default_prec@@Base+0x40>  // b.pmore
   25e70:	mrs	x2, tpidr_el0
   25e74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25e78:	ldr	x3, [x0, #2528]
   25e7c:	add	x0, x0, #0x9e0
   25e80:	blr	x3
   25e84:	str	x1, [x2, x0]
   25e88:	ldp	x29, x30, [sp], #16
   25e8c:	ret
   25e90:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   25e94:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   25e98:	add	x2, x2, #0xad8
   25e9c:	add	x0, x0, #0xb48
   25ea0:	mov	w1, #0x20                  	// #32
   25ea4:	bl	cb40 <mpfr_assert_fail@plt>

0000000000025ea8 <mpfr_get_default_prec@@Base>:
   25ea8:	stp	x29, x30, [sp, #-16]!
   25eac:	mrs	x1, tpidr_el0
   25eb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25eb4:	ldr	x2, [x0, #2528]
   25eb8:	add	x0, x0, #0x9e0
   25ebc:	blr	x2
   25ec0:	mov	x29, sp
   25ec4:	ldp	x29, x30, [sp], #16
   25ec8:	ldr	x0, [x1, x0]
   25ecc:	ret

0000000000025ed0 <mpfr_set_exp@@Base>:
   25ed0:	mov	x2, x0
   25ed4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   25ed8:	ldr	x3, [x2, #16]
   25edc:	cmp	x3, x0
   25ee0:	b.le	25f44 <mpfr_set_exp@@Base+0x74>
   25ee4:	mrs	x3, tpidr_el0
   25ee8:	stp	x29, x30, [sp, #-16]!
   25eec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25ef0:	ldr	x4, [x0, #2512]
   25ef4:	add	x0, x0, #0x9d0
   25ef8:	blr	x4
   25efc:	mov	x29, sp
   25f00:	ldr	x0, [x3, x0]
   25f04:	cmp	x0, x1
   25f08:	b.gt	25f38 <mpfr_set_exp@@Base+0x68>
   25f0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25f10:	ldr	x4, [x0, #2544]
   25f14:	add	x0, x0, #0x9f0
   25f18:	blr	x4
   25f1c:	ldr	x0, [x3, x0]
   25f20:	cmp	x0, x1
   25f24:	b.lt	25f38 <mpfr_set_exp@@Base+0x68>  // b.tstop
   25f28:	str	x1, [x2, #16]
   25f2c:	mov	w0, #0x0                   	// #0
   25f30:	ldp	x29, x30, [sp], #16
   25f34:	ret
   25f38:	mov	w0, #0x1                   	// #1
   25f3c:	ldp	x29, x30, [sp], #16
   25f40:	ret
   25f44:	mov	w0, #0x1                   	// #1
   25f48:	ret
   25f4c:	nop

0000000000025f50 <mpfr_set_default_rounding_mode@@Base>:
   25f50:	cmp	w0, #0x5
   25f54:	b.hi	25f84 <mpfr_set_default_rounding_mode@@Base+0x34>  // b.pmore
   25f58:	stp	x29, x30, [sp, #-16]!
   25f5c:	mrs	x2, tpidr_el0
   25f60:	mov	w1, w0
   25f64:	mov	x29, sp
   25f68:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25f6c:	ldr	x3, [x0, #2640]
   25f70:	add	x0, x0, #0xa50
   25f74:	blr	x3
   25f78:	str	w1, [x2, x0]
   25f7c:	ldp	x29, x30, [sp], #16
   25f80:	ret
   25f84:	ret

0000000000025f88 <mpfr_get_default_rounding_mode@@Base>:
   25f88:	stp	x29, x30, [sp, #-16]!
   25f8c:	mrs	x1, tpidr_el0
   25f90:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   25f94:	ldr	x2, [x0, #2640]
   25f98:	add	x0, x0, #0xa50
   25f9c:	blr	x2
   25fa0:	mov	x29, sp
   25fa4:	ldr	w0, [x1, x0]
   25fa8:	ldp	x29, x30, [sp], #16
   25fac:	ret

0000000000025fb0 <mpfr_set_f@@Base>:
   25fb0:	stp	x29, x30, [sp, #-128]!
   25fb4:	mov	x29, sp
   25fb8:	stp	x21, x22, [sp, #32]
   25fbc:	mov	x21, x1
   25fc0:	ldr	w1, [x1, #4]
   25fc4:	stp	x19, x20, [sp, #16]
   25fc8:	mov	x19, x0
   25fcc:	stp	x23, x24, [sp, #48]
   25fd0:	stp	x25, x26, [sp, #64]
   25fd4:	str	x27, [sp, #80]
   25fd8:	cbz	w1, 261ac <mpfr_set_f@@Base+0x1fc>
   25fdc:	ldr	w0, [x0, #8]
   25fe0:	mov	w22, w2
   25fe4:	mul	w2, w1, w0
   25fe8:	tbnz	w2, #31, 26178 <mpfr_set_f@@Base+0x1c8>
   25fec:	cmp	w1, #0x0
   25ff0:	cneg	w3, w1, lt  // lt = tstop
   25ff4:	ldr	x24, [x21, #16]
   25ff8:	sbfiz	x1, x3, #3, #32
   25ffc:	ldr	x20, [x19]
   26000:	add	x0, x24, x1
   26004:	sxtw	x2, w3
   26008:	sub	x20, x20, #0x1
   2600c:	ldur	x23, [x0, #-8]
   26010:	asr	x20, x20, #6
   26014:	add	x20, x20, #0x1
   26018:	cmp	x20, w3, sxtw
   2601c:	clz	x23, x23
   26020:	ldr	x25, [x19, #24]
   26024:	b.gt	260a0 <mpfr_set_f@@Base+0xf0>
   26028:	str	xzr, [x29, #120]
   2602c:	cmp	x1, #0x4, lsl #12
   26030:	lsl	x27, x2, #6
   26034:	b.hi	261f4 <mpfr_set_f@@Base+0x244>  // b.pmore
   26038:	add	x1, x1, #0xf
   2603c:	and	x1, x1, #0xfffffffffffffff0
   26040:	sub	sp, sp, x1
   26044:	mov	x26, sp
   26048:	cbnz	x23, 261d0 <mpfr_set_f@@Base+0x220>
   2604c:	cmp	x26, x24
   26050:	b.eq	26064 <mpfr_set_f@@Base+0xb4>  // b.none
   26054:	lsl	x2, x2, #3
   26058:	mov	x1, x24
   2605c:	mov	x0, x26
   26060:	bl	ba10 <memcpy@plt>
   26064:	ldr	x4, [x19]
   26068:	mov	x2, x27
   2606c:	ldr	w3, [x21, #4]
   26070:	mov	x1, x26
   26074:	add	x6, x29, #0x74
   26078:	mov	w5, w22
   2607c:	mov	x0, x25
   26080:	lsr	w3, w3, #31
   26084:	bl	ca20 <mpfr_round_raw@plt>
   26088:	mov	w24, w0
   2608c:	cbnz	w0, 261e4 <mpfr_set_f@@Base+0x234>
   26090:	ldr	x0, [x29, #120]
   26094:	cbz	x0, 260d8 <mpfr_set_f@@Base+0x128>
   26098:	bl	c410 <mpfr_tmp_free@plt>
   2609c:	b	260d8 <mpfr_set_f@@Base+0x128>
   260a0:	sub	x20, x20, x2
   260a4:	add	x0, x25, x20, lsl #3
   260a8:	cbnz	x23, 261c0 <mpfr_set_f@@Base+0x210>
   260ac:	cmp	x24, x0
   260b0:	b.eq	260c0 <mpfr_set_f@@Base+0x110>  // b.none
   260b4:	mov	x2, x1
   260b8:	mov	x1, x24
   260bc:	bl	ba10 <memcpy@plt>
   260c0:	lsl	x2, x20, #3
   260c4:	mov	x0, x25
   260c8:	mov	w1, #0x0                   	// #0
   260cc:	mov	w24, #0x0                   	// #0
   260d0:	bl	c110 <memset@plt>
   260d4:	str	wzr, [x29, #116]
   260d8:	mrs	x4, tpidr_el0
   260dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   260e0:	ldr	x1, [x0, #2544]
   260e4:	add	x0, x0, #0x9f0
   260e8:	blr	x1
   260ec:	ldr	x2, [x21, #8]
   260f0:	ldr	x3, [x4, x0]
   260f4:	subs	x0, x3, #0x1
   260f8:	add	x1, x3, #0x3e
   260fc:	csel	x1, x1, x0, mi  // mi = first
   26100:	asr	x1, x1, #6
   26104:	add	x1, x1, #0x1
   26108:	cmp	x2, x1
   2610c:	b.gt	2620c <mpfr_set_f@@Base+0x25c>
   26110:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   26114:	ldr	x1, [x0, #2512]
   26118:	add	x0, x0, #0x9d0
   2611c:	blr	x1
   26120:	lsl	x2, x2, #6
   26124:	ldr	x0, [x4, x0]
   26128:	sub	x23, x2, x23
   2612c:	add	x23, x23, w24, sxtw
   26130:	str	x23, [x19, #16]
   26134:	cmp	x23, x0
   26138:	ldr	w1, [x29, #116]
   2613c:	ccmp	x3, x23, #0x1, ge  // ge = tcont
   26140:	b.ge	26184 <mpfr_set_f@@Base+0x1d4>  // b.tcont
   26144:	mov	w2, w22
   26148:	mov	x0, x19
   2614c:	bl	cb30 <mpfr_check_range@plt>
   26150:	mov	w1, w0
   26154:	mov	sp, x29
   26158:	mov	w0, w1
   2615c:	ldp	x19, x20, [sp, #16]
   26160:	ldp	x21, x22, [sp, #32]
   26164:	ldp	x23, x24, [sp, #48]
   26168:	ldp	x25, x26, [sp, #64]
   2616c:	ldr	x27, [sp, #80]
   26170:	ldp	x29, x30, [sp], #128
   26174:	ret
   26178:	neg	w0, w0
   2617c:	str	w0, [x19, #8]
   26180:	b	25fec <mpfr_set_f@@Base+0x3c>
   26184:	cbz	w1, 26154 <mpfr_set_f@@Base+0x1a4>
   26188:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2618c:	ldr	x2, [x0, #2576]
   26190:	add	x0, x0, #0xa10
   26194:	blr	x2
   26198:	add	x0, x4, x0
   2619c:	ldr	w2, [x0]
   261a0:	orr	w2, w2, #0x8
   261a4:	str	w2, [x0]
   261a8:	b	26154 <mpfr_set_f@@Base+0x1a4>
   261ac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   261b0:	mov	w2, #0x1                   	// #1
   261b4:	str	w2, [x19, #8]
   261b8:	str	x0, [x19, #16]
   261bc:	b	26154 <mpfr_set_f@@Base+0x1a4>
   261c0:	mov	x1, x24
   261c4:	mov	w3, w23
   261c8:	bl	bcc0 <__gmpn_lshift@plt>
   261cc:	b	260c0 <mpfr_set_f@@Base+0x110>
   261d0:	mov	x1, x24
   261d4:	mov	w3, w23
   261d8:	mov	x0, x26
   261dc:	bl	bcc0 <__gmpn_lshift@plt>
   261e0:	b	26064 <mpfr_set_f@@Base+0xb4>
   261e4:	add	x20, x25, x20, lsl #3
   261e8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   261ec:	stur	x0, [x20, #-8]
   261f0:	b	26090 <mpfr_set_f@@Base+0xe0>
   261f4:	add	x0, x29, #0x78
   261f8:	str	x2, [x29, #104]
   261fc:	bl	bdc0 <mpfr_tmp_allocate@plt>
   26200:	mov	x26, x0
   26204:	ldr	x2, [x29, #104]
   26208:	b	26048 <mpfr_set_f@@Base+0x98>
   2620c:	ldr	w2, [x19, #8]
   26210:	mov	w1, w22
   26214:	mov	x0, x19
   26218:	bl	bf40 <mpfr_overflow@plt>
   2621c:	mov	w1, w0
   26220:	b	26154 <mpfr_set_f@@Base+0x1a4>
   26224:	nop

0000000000026228 <mpfr_set_prec_raw@@Base>:
   26228:	stp	x29, x30, [sp, #-32]!
   2622c:	mov	x29, sp
   26230:	stp	x19, x20, [sp, #16]
   26234:	mov	x19, x1
   26238:	mov	x20, x0
   2623c:	sub	x1, x1, #0x1
   26240:	mov	x0, #0xfffffffffffffefe    	// #-258
   26244:	movk	x0, #0x7fff, lsl #48
   26248:	cmp	x1, x0
   2624c:	b.hi	26298 <mpfr_set_prec_raw@@Base+0x70>  // b.pmore
   26250:	ldr	x0, [x20, #24]
   26254:	ldur	x0, [x0, #-8]
   26258:	cmp	x19, x0, lsl #6
   2625c:	b.gt	26270 <mpfr_set_prec_raw@@Base+0x48>
   26260:	str	x19, [x20]
   26264:	ldp	x19, x20, [sp, #16]
   26268:	ldp	x29, x30, [sp], #32
   2626c:	ret
   26270:	mov	w1, #0x1d                  	// #29
   26274:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   26278:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   2627c:	add	x2, x2, #0xbb0
   26280:	add	x0, x0, #0xba0
   26284:	bl	cb40 <mpfr_assert_fail@plt>
   26288:	str	x19, [x20]
   2628c:	ldp	x19, x20, [sp, #16]
   26290:	ldp	x29, x30, [sp], #32
   26294:	ret
   26298:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   2629c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   262a0:	add	x2, x2, #0xb58
   262a4:	add	x0, x0, #0xba0
   262a8:	mov	w1, #0x1c                  	// #28
   262ac:	bl	cb40 <mpfr_assert_fail@plt>

00000000000262b0 <mpfr_get_prec@@Base>:
   262b0:	ldr	x0, [x0]
   262b4:	ret
   262b8:	stp	x29, x30, [sp, #-64]!
   262bc:	mov	x29, sp
   262c0:	stp	x19, x20, [sp, #16]
   262c4:	ldr	w19, [x1]
   262c8:	ldr	x20, [x2]
   262cc:	cmp	w19, #0x0
   262d0:	cneg	w19, w19, lt  // lt = tstop
   262d4:	stp	x21, x22, [sp, #32]
   262d8:	mov	x21, x0
   262dc:	stp	x23, x24, [sp, #48]
   262e0:	sxtw	x19, w19
   262e4:	mov	x23, x1
   262e8:	str	x19, [x3]
   262ec:	ldr	x0, [x20]
   262f0:	cbnz	x0, 26304 <mpfr_get_prec@@Base+0x54>
   262f4:	nop
   262f8:	ldr	x2, [x20, #8]!
   262fc:	sub	x19, x19, #0x1
   26300:	cbz	x2, 262f8 <mpfr_get_prec@@Base+0x48>
   26304:	lsl	x24, x19, #3
   26308:	lsl	x3, x19, #6
   2630c:	add	x1, x20, x24
   26310:	mov	x0, x21
   26314:	ldur	x22, [x1, #-8]
   26318:	clz	x1, x22
   2631c:	mov	x22, x1
   26320:	sub	x1, x3, x1
   26324:	cmp	x1, #0x0
   26328:	csinc	x1, x1, xzr, gt
   2632c:	bl	ca80 <mpfr_init2@plt>
   26330:	ldr	x0, [x21, #24]
   26334:	cbz	x22, 26378 <mpfr_get_prec@@Base+0xc8>
   26338:	mov	x2, x19
   2633c:	mov	x1, x20
   26340:	mov	w3, w22
   26344:	bl	bcc0 <__gmpn_lshift@plt>
   26348:	ldr	w2, [x23]
   2634c:	mov	w1, #0x1                   	// #1
   26350:	ldp	x19, x20, [sp, #16]
   26354:	cmp	w2, #0x0
   26358:	cneg	w1, w1, lt  // lt = tstop
   2635c:	neg	w0, w22
   26360:	ldp	x23, x24, [sp, #48]
   26364:	str	w1, [x21, #8]
   26368:	str	xzr, [x21, #16]
   2636c:	ldp	x21, x22, [sp, #32]
   26370:	ldp	x29, x30, [sp], #64
   26374:	ret
   26378:	cmp	x0, x20
   2637c:	b.eq	26348 <mpfr_get_prec@@Base+0x98>  // b.none
   26380:	mov	x2, x24
   26384:	mov	x1, x20
   26388:	bl	ba10 <memcpy@plt>
   2638c:	b	26348 <mpfr_get_prec@@Base+0x98>

0000000000026390 <mpfr_set_q@@Base>:
   26390:	stp	x29, x30, [sp, #-208]!
   26394:	mov	x29, sp
   26398:	stp	x23, x24, [sp, #48]
   2639c:	mov	x23, x0
   263a0:	ldr	w0, [x1, #4]
   263a4:	stp	x19, x20, [sp, #16]
   263a8:	ldr	w19, [x1, #20]
   263ac:	cbz	w0, 265c0 <mpfr_set_q@@Base+0x230>
   263b0:	cbz	w19, 265dc <mpfr_set_q@@Base+0x24c>
   263b4:	stp	x27, x28, [sp, #80]
   263b8:	mrs	x28, tpidr_el0
   263bc:	mov	x4, x1
   263c0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   263c4:	ldr	x1, [x0, #2576]
   263c8:	add	x0, x0, #0xa10
   263cc:	blr	x1
   263d0:	add	x1, x28, x0
   263d4:	ldr	w0, [x28, x0]
   263d8:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   263dc:	str	w0, [sp, #108]
   263e0:	mov	x7, #0x3fffffffffffffff    	// #4611686018427387903
   263e4:	stp	x1, x4, [sp, #112]
   263e8:	add	x3, sp, #0x80
   263ec:	mov	w20, w2
   263f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   263f4:	ldr	x1, [x0, #2512]
   263f8:	add	x0, x0, #0x9d0
   263fc:	blr	x1
   26400:	stp	x25, x26, [sp, #64]
   26404:	add	x25, x28, x0
   26408:	ldr	x26, [x28, x0]
   2640c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   26410:	ldr	x1, [x0, #2544]
   26414:	add	x0, x0, #0x9f0
   26418:	blr	x1
   2641c:	add	x24, x28, x0
   26420:	stp	x21, x22, [sp, #32]
   26424:	add	x21, sp, #0x90
   26428:	add	x2, x4, #0x8
   2642c:	add	x1, x4, #0x4
   26430:	str	x8, [x25]
   26434:	add	x22, sp, #0xb0
   26438:	ldr	x27, [x28, x0]
   2643c:	mov	x0, x21
   26440:	str	x7, [x24]
   26444:	bl	262b8 <mpfr_get_prec@@Base+0x8>
   26448:	ldr	x4, [sp, #120]
   2644c:	add	x3, sp, #0x88
   26450:	mov	w19, w0
   26454:	mov	x0, x22
   26458:	add	x2, x4, #0x18
   2645c:	add	x1, x4, #0x14
   26460:	bl	262b8 <mpfr_get_prec@@Base+0x8>
   26464:	mov	w4, w0
   26468:	ldp	x1, x2, [sp, #128]
   2646c:	mov	x0, #0xffffffffffffff      	// #72057594037927935
   26470:	sub	x1, x1, x2
   26474:	str	x1, [sp, #128]
   26478:	cmp	x1, x0
   2647c:	b.gt	26664 <mpfr_set_q@@Base+0x2d4>
   26480:	mov	x0, #0xff00000000000000    	// #-72057594037927936
   26484:	cmp	x1, x0
   26488:	b.lt	26634 <mpfr_set_q@@Base+0x2a4>  // b.tstop
   2648c:	mov	w3, w20
   26490:	mov	x2, x22
   26494:	mov	x1, x21
   26498:	mov	x0, x23
   2649c:	str	w4, [sp, #120]
   264a0:	bl	c620 <mpfr_div@plt>
   264a4:	ldr	x2, [sp, #128]
   264a8:	sxtw	x7, w19
   264ac:	ldr	w4, [sp, #120]
   264b0:	mov	x1, x23
   264b4:	mov	w19, w0
   264b8:	mov	w3, w20
   264bc:	add	x2, x7, x2, lsl #6
   264c0:	mov	x0, x23
   264c4:	sub	x2, x2, w4, sxtw
   264c8:	bl	bb90 <mpfr_mul_2si@plt>
   264cc:	str	x27, [x24]
   264d0:	ldr	x1, [sp, #112]
   264d4:	str	x26, [x25]
   264d8:	ldr	w2, [sp, #108]
   264dc:	str	w2, [x1]
   264e0:	cbnz	w0, 265f8 <mpfr_set_q@@Base+0x268>
   264e4:	ldr	x0, [x23, #16]
   264e8:	cmp	x27, x0
   264ec:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   264f0:	b.le	2652c <mpfr_set_q@@Base+0x19c>
   264f4:	mov	w1, w19
   264f8:	mov	w2, w20
   264fc:	mov	x0, x23
   26500:	bl	cb30 <mpfr_check_range@plt>
   26504:	mov	w19, w0
   26508:	mov	x0, x22
   2650c:	bl	c070 <mpfr_clear@plt>
   26510:	mov	x0, x21
   26514:	bl	c070 <mpfr_clear@plt>
   26518:	cbnz	w19, 26550 <mpfr_set_q@@Base+0x1c0>
   2651c:	ldp	x21, x22, [sp, #32]
   26520:	ldp	x25, x26, [sp, #64]
   26524:	ldp	x27, x28, [sp, #80]
   26528:	b	265ac <mpfr_set_q@@Base+0x21c>
   2652c:	cbz	w19, 26590 <mpfr_set_q@@Base+0x200>
   26530:	ldr	w0, [sp, #108]
   26534:	orr	w23, w0, #0x8
   26538:	ldr	x0, [sp, #112]
   2653c:	str	w23, [x0]
   26540:	mov	x0, x22
   26544:	bl	c070 <mpfr_clear@plt>
   26548:	mov	x0, x21
   2654c:	bl	c070 <mpfr_clear@plt>
   26550:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   26554:	ldr	x1, [x0, #2576]
   26558:	add	x0, x0, #0xa10
   2655c:	blr	x1
   26560:	add	x0, x28, x0
   26564:	ldp	x21, x22, [sp, #32]
   26568:	ldr	w1, [x0]
   2656c:	ldp	x25, x26, [sp, #64]
   26570:	orr	w1, w1, #0x8
   26574:	ldp	x27, x28, [sp, #80]
   26578:	str	w1, [x0]
   2657c:	mov	w0, w19
   26580:	ldp	x19, x20, [sp, #16]
   26584:	ldp	x23, x24, [sp, #48]
   26588:	ldp	x29, x30, [sp], #208
   2658c:	ret
   26590:	mov	x0, x22
   26594:	bl	c070 <mpfr_clear@plt>
   26598:	mov	x0, x21
   2659c:	bl	c070 <mpfr_clear@plt>
   265a0:	ldp	x21, x22, [sp, #32]
   265a4:	ldp	x25, x26, [sp, #64]
   265a8:	ldp	x27, x28, [sp, #80]
   265ac:	mov	w0, w19
   265b0:	ldp	x19, x20, [sp, #16]
   265b4:	ldp	x23, x24, [sp, #48]
   265b8:	ldp	x29, x30, [sp], #208
   265bc:	ret
   265c0:	cbz	w19, 26600 <mpfr_set_q@@Base+0x270>
   265c4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   265c8:	mov	w1, #0x1                   	// #1
   265cc:	mov	w19, #0x0                   	// #0
   265d0:	str	w1, [x23, #8]
   265d4:	str	x0, [x23, #16]
   265d8:	b	265ac <mpfr_set_q@@Base+0x21c>
   265dc:	cmp	w0, #0x0
   265e0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   265e4:	mov	w0, #0x1                   	// #1
   265e8:	cneg	w0, w0, lt  // lt = tstop
   265ec:	str	w0, [x23, #8]
   265f0:	str	x1, [x23, #16]
   265f4:	b	265ac <mpfr_set_q@@Base+0x21c>
   265f8:	mov	w19, w0
   265fc:	b	26540 <mpfr_set_q@@Base+0x1b0>
   26600:	mrs	x1, tpidr_el0
   26604:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   26608:	ldr	x2, [x0, #2576]
   2660c:	add	x0, x0, #0xa10
   26610:	blr	x2
   26614:	add	x0, x1, x0
   26618:	mov	x1, #0x2                   	// #2
   2661c:	movk	x1, #0x8000, lsl #48
   26620:	str	x1, [x23, #16]
   26624:	ldr	w1, [x0]
   26628:	orr	w1, w1, #0x4
   2662c:	str	w1, [x0]
   26630:	b	265ac <mpfr_set_q@@Base+0x21c>
   26634:	ldr	w4, [sp, #108]
   26638:	cmp	w20, #0x0
   2663c:	ldr	w2, [x23, #8]
   26640:	csinc	w1, w20, wzr, ne  // ne = any
   26644:	ldr	x3, [sp, #112]
   26648:	mov	x0, x23
   2664c:	str	x27, [x24]
   26650:	str	x26, [x25]
   26654:	str	w4, [x3]
   26658:	bl	c3c0 <mpfr_underflow@plt>
   2665c:	mov	w19, w0
   26660:	b	26508 <mpfr_set_q@@Base+0x178>
   26664:	ldr	w4, [sp, #108]
   26668:	mov	w1, w20
   2666c:	ldr	w2, [x23, #8]
   26670:	mov	x0, x23
   26674:	ldr	x3, [sp, #112]
   26678:	str	x27, [x24]
   2667c:	str	x26, [x25]
   26680:	str	w4, [x3]
   26684:	bl	bf40 <mpfr_overflow@plt>
   26688:	mov	w19, w0
   2668c:	b	26508 <mpfr_set_q@@Base+0x178>

0000000000026690 <mpfr_set_si@@Base>:
   26690:	mov	w3, w2
   26694:	mov	x2, #0x0                   	// #0
   26698:	b	ba80 <mpfr_set_si_2exp@plt>
   2669c:	nop

00000000000266a0 <mpfr_set_str@@Base>:
   266a0:	mov	w4, w3
   266a4:	ldrb	w3, [x1]
   266a8:	cbz	w3, 266d8 <mpfr_set_str@@Base+0x38>
   266ac:	stp	x29, x30, [sp, #-32]!
   266b0:	mov	w3, w2
   266b4:	mov	x29, sp
   266b8:	add	x2, sp, #0x18
   266bc:	bl	bc10 <mpfr_strtofr@plt>
   266c0:	ldr	x0, [sp, #24]
   266c4:	ldrb	w0, [x0]
   266c8:	ldp	x29, x30, [sp], #32
   266cc:	cmp	w0, #0x0
   266d0:	csetm	w0, ne  // ne = any
   266d4:	ret
   266d8:	mov	w0, #0xffffffff            	// #-1
   266dc:	ret

00000000000266e0 <mpfr_init_set_str@@Base>:
   266e0:	stp	x29, x30, [sp, #-48]!
   266e4:	mov	x29, sp
   266e8:	stp	x19, x20, [sp, #16]
   266ec:	mov	x20, x1
   266f0:	mov	x19, x0
   266f4:	stp	x21, x22, [sp, #32]
   266f8:	mov	w21, w2
   266fc:	mov	w22, w3
   26700:	bl	bbd0 <mpfr_init@plt>
   26704:	mov	w3, w22
   26708:	mov	w2, w21
   2670c:	mov	x1, x20
   26710:	mov	x0, x19
   26714:	ldp	x19, x20, [sp, #16]
   26718:	ldp	x21, x22, [sp, #32]
   2671c:	ldp	x29, x30, [sp], #48
   26720:	b	c6c0 <mpfr_set_str@plt>
   26724:	nop

0000000000026728 <mpfr_set_str_binary@@Base>:
   26728:	stp	x29, x30, [sp, #-16]!
   2672c:	mov	x4, x0
   26730:	mov	x29, sp
   26734:	ldrb	w3, [x1]
   26738:	cmp	w3, #0x4e
   2673c:	b.eq	2679c <mpfr_set_str_binary@@Base+0x74>  // b.none
   26740:	sub	w3, w3, #0x2b
   26744:	mov	w5, #0xfd                  	// #253
   26748:	tst	w3, w5
   2674c:	cset	w3, eq  // eq = none
   26750:	ldrb	w3, [x1, w3, uxtw]
   26754:	cmp	w3, #0x49
   26758:	b.eq	26778 <mpfr_set_str_binary@@Base+0x50>  // b.none
   2675c:	mov	w4, #0x1                   	// #1
   26760:	mov	w3, #0x2                   	// #2
   26764:	mov	x2, #0x0                   	// #0
   26768:	bl	bc10 <mpfr_strtofr@plt>
   2676c:	cbnz	w0, 267d4 <mpfr_set_str_binary@@Base+0xac>
   26770:	ldp	x29, x30, [sp], #16
   26774:	ret
   26778:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2677c:	str	x0, [x4, #16]
   26780:	mov	w0, #0xffffffff            	// #-1
   26784:	ldrb	w1, [x1]
   26788:	cmp	w1, #0x2d
   2678c:	csinc	w0, w0, wzr, eq  // eq = none
   26790:	str	w0, [x4, #8]
   26794:	ldp	x29, x30, [sp], #16
   26798:	ret
   2679c:	mrs	x1, tpidr_el0
   267a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   267a4:	ldr	x2, [x0, #2576]
   267a8:	add	x0, x0, #0xa10
   267ac:	blr	x2
   267b0:	add	x0, x1, x0
   267b4:	mov	x1, #0x2                   	// #2
   267b8:	movk	x1, #0x8000, lsl #48
   267bc:	str	x1, [x4, #16]
   267c0:	ldr	w1, [x0]
   267c4:	orr	w1, w1, #0x4
   267c8:	str	w1, [x0]
   267cc:	ldp	x29, x30, [sp], #16
   267d0:	ret
   267d4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   267d8:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   267dc:	add	x2, x2, #0xc20
   267e0:	add	x0, x0, #0xc30
   267e4:	mov	w1, #0x36                  	// #54
   267e8:	bl	cb40 <mpfr_assert_fail@plt>
   267ec:	nop

00000000000267f0 <mpfr_set_ui@@Base>:
   267f0:	mov	w3, w2
   267f4:	mov	x2, #0x0                   	// #0
   267f8:	b	c5f0 <mpfr_set_ui_2exp@plt>
   267fc:	nop

0000000000026800 <mpfr_set_z@@Base>:
   26800:	mov	w3, w2
   26804:	mov	x2, #0x0                   	// #0
   26808:	b	c4f0 <mpfr_set_z_2exp@plt>
   2680c:	nop

0000000000026810 <mpfr_sqrt@@Base>:
   26810:	stp	x29, x30, [sp, #-192]!
   26814:	mov	x29, sp
   26818:	stp	x19, x20, [sp, #16]
   2681c:	mov	w20, w2
   26820:	ldr	x2, [x1, #16]
   26824:	stp	x21, x22, [sp, #32]
   26828:	mov	x22, x0
   2682c:	stp	x23, x24, [sp, #48]
   26830:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   26834:	cmp	x2, x0
   26838:	stp	x25, x26, [sp, #64]
   2683c:	mov	x26, x1
   26840:	stp	x27, x28, [sp, #80]
   26844:	b.le	26d84 <mpfr_sqrt@@Base+0x574>
   26848:	ldr	w0, [x1, #8]
   2684c:	tbnz	w0, #31, 26da8 <mpfr_sqrt@@Base+0x598>
   26850:	ldr	x19, [x1]
   26854:	mov	w0, #0x1                   	// #1
   26858:	ldr	x3, [x22]
   2685c:	str	w0, [x22, #8]
   26860:	ldr	x24, [x22, #24]
   26864:	cmp	x3, x19
   26868:	b.eq	26a54 <mpfr_sqrt@@Base+0x244>  // b.none
   2686c:	sub	x25, x3, #0x1
   26870:	sub	x19, x19, #0x1
   26874:	neg	w3, w3
   26878:	str	xzr, [x29, #160]
   2687c:	asr	x0, x25, #6
   26880:	str	x0, [x29, #104]
   26884:	asr	x19, x19, #6
   26888:	and	w21, w3, #0x3f
   2688c:	add	x23, x0, #0x1
   26890:	add	x19, x19, #0x1
   26894:	orr	w0, w20, w21
   26898:	cbz	w0, 269ec <mpfr_sqrt@@Base+0x1dc>
   2689c:	lsl	x25, x23, #1
   268a0:	mov	x28, x24
   268a4:	and	w0, w2, #0x1
   268a8:	str	w0, [x29, #124]
   268ac:	lsl	x1, x25, #3
   268b0:	cmp	x1, #0x4, lsl #12
   268b4:	ldr	x8, [x26, #24]
   268b8:	b.hi	26ec0 <mpfr_sqrt@@Base+0x6b0>  // b.pmore
   268bc:	sub	sp, sp, x1
   268c0:	mov	x27, sp
   268c4:	cmp	x19, x25
   268c8:	b.gt	26e5c <mpfr_sqrt@@Base+0x64c>
   268cc:	subs	x2, x25, x19
   268d0:	b.eq	26a24 <mpfr_sqrt@@Base+0x214>  // b.none
   268d4:	lsl	x2, x2, #3
   268d8:	mov	w1, #0x0                   	// #0
   268dc:	mov	x0, x27
   268e0:	str	x8, [x29, #96]
   268e4:	str	x2, [x29, #112]
   268e8:	bl	c110 <memset@plt>
   268ec:	ldr	w1, [x29, #124]
   268f0:	ldr	x2, [x29, #112]
   268f4:	ldr	x8, [x29, #96]
   268f8:	add	x0, x27, x2
   268fc:	cbz	w1, 26a30 <mpfr_sqrt@@Base+0x220>
   26900:	sub	x4, x2, #0x8
   26904:	mov	x5, #0x0                   	// #0
   26908:	mov	x2, x19
   2690c:	mov	x1, x8
   26910:	mov	w3, #0x1                   	// #1
   26914:	str	x4, [x29, #96]
   26918:	str	x5, [x29, #112]
   2691c:	bl	bce0 <__gmpn_rshift@plt>
   26920:	ldr	x4, [x29, #96]
   26924:	ldr	x5, [x29, #112]
   26928:	str	x0, [x27, x4]
   2692c:	mov	x2, x27
   26930:	mov	x3, x25
   26934:	mov	x0, x28
   26938:	mov	x1, #0x0                   	// #0
   2693c:	str	x5, [x29, #112]
   26940:	bl	ccc0 <__gmpn_sqrtrem@plt>
   26944:	ldr	x5, [x29, #112]
   26948:	mov	x6, #0x0                   	// #0
   2694c:	ldr	x4, [x28]
   26950:	orr	x0, x0, x5
   26954:	cmp	x0, #0x0
   26958:	cset	x2, ne  // ne = any
   2695c:	cmp	w21, #0x40
   26960:	b.eq	2697c <mpfr_sqrt@@Base+0x16c>  // b.none
   26964:	mov	x1, #0x1                   	// #1
   26968:	lsl	x1, x1, x21
   2696c:	neg	x3, x1
   26970:	sub	x1, x1, #0x1
   26974:	and	x6, x3, x4
   26978:	and	x4, x1, x4
   2697c:	str	x6, [x28]
   26980:	and	w3, w20, #0xfffffffd
   26984:	orr	x1, x2, x4
   26988:	cmp	w3, #0x1
   2698c:	ldr	x2, [x26, #16]
   26990:	ldr	w3, [x29, #124]
   26994:	add	x2, x2, w3, sxtw
   26998:	add	x2, x2, x2, lsr #63
   2699c:	asr	x19, x2, #1
   269a0:	b.eq	26c28 <mpfr_sqrt@@Base+0x418>  // b.none
   269a4:	cbz	x1, 26d7c <mpfr_sqrt@@Base+0x56c>
   269a8:	cmp	w21, #0x40
   269ac:	cbnz	w20, 26cf4 <mpfr_sqrt@@Base+0x4e4>
   269b0:	b.eq	26ee4 <mpfr_sqrt@@Base+0x6d4>  // b.none
   269b4:	sub	w2, w21, #0x1
   269b8:	mov	w26, #0xffffffff            	// #-1
   269bc:	lsr	x1, x4, x2
   269c0:	tbz	w1, #0, 26c38 <mpfr_sqrt@@Base+0x428>
   269c4:	mov	x1, #0x1                   	// #1
   269c8:	lsl	x2, x1, x2
   269cc:	cmp	x2, x4
   269d0:	b.ne	269e4 <mpfr_sqrt@@Base+0x1d4>  // b.any
   269d4:	lsr	x5, x6, x21
   269d8:	and	x5, x5, #0x1
   269dc:	orr	x0, x5, x0
   269e0:	cbz	x0, 26c38 <mpfr_sqrt@@Base+0x428>
   269e4:	lsl	x3, x1, x21
   269e8:	b	26d00 <mpfr_sqrt@@Base+0x4f0>
   269ec:	ldr	x0, [x29, #104]
   269f0:	add	x21, x0, #0x2
   269f4:	lsl	x1, x21, #3
   269f8:	lsl	x25, x21, #1
   269fc:	cmp	x1, #0x4, lsl #12
   26a00:	b.hi	27470 <mpfr_sqrt@@Base+0xc60>  // b.pmore
   26a04:	add	x1, x1, #0xf
   26a08:	str	x23, [x29, #104]
   26a0c:	and	x1, x1, #0xfffffffffffffff0
   26a10:	mov	x23, x21
   26a14:	sub	sp, sp, x1
   26a18:	mov	w21, #0x40                  	// #64
   26a1c:	mov	x28, sp
   26a20:	b	268a4 <mpfr_sqrt@@Base+0x94>
   26a24:	ldr	w0, [x29, #124]
   26a28:	cbnz	w0, 2740c <mpfr_sqrt@@Base+0xbfc>
   26a2c:	mov	x0, x27
   26a30:	cmp	x8, x0
   26a34:	mov	x5, #0x0                   	// #0
   26a38:	b.eq	2692c <mpfr_sqrt@@Base+0x11c>  // b.none
   26a3c:	lsl	x2, x19, #3
   26a40:	mov	x1, x8
   26a44:	str	x5, [x29, #112]
   26a48:	bl	ba10 <memcpy@plt>
   26a4c:	ldr	x5, [x29, #112]
   26a50:	b	2692c <mpfr_sqrt@@Base+0x11c>
   26a54:	cmp	x3, #0x3f
   26a58:	b.le	26f08 <mpfr_sqrt@@Base+0x6f8>
   26a5c:	sub	x0, x3, #0x41
   26a60:	cmp	x0, #0x3e
   26a64:	b.ls	2715c <mpfr_sqrt@@Base+0x94c>  // b.plast
   26a68:	cmp	x3, #0x40
   26a6c:	b.ne	2686c <mpfr_sqrt@@Base+0x5c>  // b.any
   26a70:	ldr	x0, [x1, #24]
   26a74:	mov	x7, #0x0                   	// #0
   26a78:	ldr	x3, [x0]
   26a7c:	tbz	w2, #0, 26a8c <mpfr_sqrt@@Base+0x27c>
   26a80:	lsl	x7, x3, #63
   26a84:	add	x2, x2, #0x1
   26a88:	lsr	x3, x3, #1
   26a8c:	lsr	x6, x3, #54
   26a90:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   26a94:	sub	x6, x6, #0x100
   26a98:	add	x0, x0, #0xcf0
   26a9c:	adrp	x8, 62000 <mpfr_l2b_2_0__tab@@Base+0x1a10>
   26aa0:	add	x8, x8, #0x4f0
   26aa4:	lsr	x1, x3, #27
   26aa8:	add	x2, x2, x2, lsr #63
   26aac:	ldr	x0, [x0, x6, lsl #3]
   26ab0:	asr	x5, x2, #1
   26ab4:	ldr	x8, [x8, x6, lsl #3]
   26ab8:	mov	x2, x1
   26abc:	madd	x1, x1, x0, x0
   26ac0:	lsr	x4, x3, #31
   26ac4:	mov	x6, #0x1fffffffe           	// #8589934590
   26ac8:	lsl	x0, x8, #57
   26acc:	lsl	x8, x8, #11
   26ad0:	sub	x0, x0, x1
   26ad4:	add	x0, x8, x0, lsr #47
   26ad8:	mul	x1, x0, x0
   26adc:	madd	x1, x2, x1, x1
   26ae0:	neg	x1, x1
   26ae4:	umulh	x1, x0, x1
   26ae8:	lsr	x1, x1, #6
   26aec:	add	x1, x1, x0, lsl #10
   26af0:	mul	x0, x4, x1
   26af4:	lsr	x0, x0, #32
   26af8:	msub	x2, x0, x0, x3
   26afc:	cmp	x2, x6
   26b00:	b.ls	26b1c <mpfr_sqrt@@Base+0x30c>  // b.plast
   26b04:	mvn	x4, x0, lsl #1
   26b08:	add	x2, x2, x4
   26b0c:	add	x0, x0, #0x1
   26b10:	cmp	x2, x6
   26b14:	sub	x4, x4, #0x2
   26b18:	b.hi	26b08 <mpfr_sqrt@@Base+0x2f8>  // b.pmore
   26b1c:	cmp	x2, x0, lsl #1
   26b20:	lsl	x4, x0, #1
   26b24:	b.ls	26b34 <mpfr_sqrt@@Base+0x324>  // b.plast
   26b28:	sub	x2, x2, #0x1
   26b2c:	add	x0, x0, #0x1
   26b30:	sub	x2, x2, x4
   26b34:	mul	x1, x1, x2
   26b38:	lsl	x0, x0, #32
   26b3c:	adds	x1, x0, x1, lsr #32
   26b40:	b.pl	278a8 <mpfr_sqrt@@Base+0x1098>  // b.nfrst
   26b44:	mul	x4, x1, x1
   26b48:	umulh	x0, x1, x1
   26b4c:	subs	x2, x7, x4
   26b50:	sbc	x3, x3, x0
   26b54:	cbnz	x3, 26b7c <mpfr_sqrt@@Base+0x36c>
   26b58:	b	274d0 <mpfr_sqrt@@Base+0xcc0>
   26b5c:	cmp	x1, x2
   26b60:	sub	x2, x2, x1
   26b64:	add	x1, x1, #0x1
   26b68:	cset	x0, hi  // hi = pmore
   26b6c:	subs	x2, x2, x1
   26b70:	cinc	x0, x0, cc  // cc = lo, ul, last
   26b74:	subs	x3, x3, x0
   26b78:	b.eq	274d0 <mpfr_sqrt@@Base+0xcc0>  // b.none
   26b7c:	cmp	x3, #0x1
   26b80:	b.ne	26b5c <mpfr_sqrt@@Base+0x34c>  // b.any
   26b84:	cmp	x2, x1, lsl #1
   26b88:	b.hi	26b5c <mpfr_sqrt@@Base+0x34c>  // b.pmore
   26b8c:	mov	w6, w3
   26b90:	mrs	x4, tpidr_el0
   26b94:	str	x1, [x24]
   26b98:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   26b9c:	ldr	x7, [x0, #2544]
   26ba0:	add	x0, x0, #0x9f0
   26ba4:	blr	x7
   26ba8:	orr	x2, x3, x2
   26bac:	ldr	x0, [x4, x0]
   26bb0:	cmp	x5, x0
   26bb4:	b.gt	278dc <mpfr_sqrt@@Base+0x10cc>
   26bb8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   26bbc:	ldr	x3, [x0, #2512]
   26bc0:	add	x0, x0, #0x9d0
   26bc4:	blr	x3
   26bc8:	ldr	x0, [x4, x0]
   26bcc:	cmp	x5, x0
   26bd0:	b.lt	2787c <mpfr_sqrt@@Base+0x106c>  // b.tstop
   26bd4:	str	x5, [x22, #16]
   26bd8:	cmp	x2, #0x0
   26bdc:	ccmp	w20, #0x5, #0x4, ne  // ne = any
   26be0:	b.eq	27438 <mpfr_sqrt@@Base+0xc28>  // b.none
   26be4:	cbnz	w20, 27838 <mpfr_sqrt@@Base+0x1028>
   26be8:	cbz	w6, 273b8 <mpfr_sqrt@@Base+0xba8>
   26bec:	ldr	x0, [x24]
   26bf0:	adds	x0, x0, #0x1
   26bf4:	b.ne	275a8 <mpfr_sqrt@@Base+0xd98>  // b.any
   26bf8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   26bfc:	str	x0, [x24]
   26c00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   26c04:	ldr	x1, [x0, #2544]
   26c08:	add	x0, x0, #0x9f0
   26c0c:	blr	x1
   26c10:	ldr	x0, [x4, x0]
   26c14:	cmp	x5, x0
   26c18:	b.ge	278dc <mpfr_sqrt@@Base+0x10cc>  // b.tcont
   26c1c:	add	x5, x5, #0x1
   26c20:	str	x5, [x22, #16]
   26c24:	b	270a8 <mpfr_sqrt@@Base+0x898>
   26c28:	cmp	x1, #0x0
   26c2c:	csetm	w26, ne  // ne = any
   26c30:	cmp	w21, #0x40
   26c34:	b.eq	26d5c <mpfr_sqrt@@Base+0x54c>  // b.none
   26c38:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   26c3c:	add	x1, x19, x1
   26c40:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   26c44:	cmp	x1, x0
   26c48:	b.hi	27908 <mpfr_sqrt@@Base+0x10f8>  // b.pmore
   26c4c:	ldr	x0, [x29, #160]
   26c50:	str	x19, [x22, #16]
   26c54:	cbnz	x0, 26ed8 <mpfr_sqrt@@Base+0x6c8>
   26c58:	mrs	x1, tpidr_el0
   26c5c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   26c60:	ldr	x2, [x0, #2512]
   26c64:	add	x0, x0, #0x9d0
   26c68:	blr	x2
   26c6c:	ldr	x0, [x1, x0]
   26c70:	cmp	x0, x19
   26c74:	b.gt	26cdc <mpfr_sqrt@@Base+0x4cc>
   26c78:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   26c7c:	ldr	x2, [x0, #2544]
   26c80:	add	x0, x0, #0x9f0
   26c84:	blr	x2
   26c88:	ldr	x0, [x1, x0]
   26c8c:	cmp	x0, x19
   26c90:	b.lt	26cdc <mpfr_sqrt@@Base+0x4cc>  // b.tstop
   26c94:	cbz	w26, 26cb8 <mpfr_sqrt@@Base+0x4a8>
   26c98:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   26c9c:	ldr	x2, [x0, #2576]
   26ca0:	add	x0, x0, #0xa10
   26ca4:	blr	x2
   26ca8:	add	x1, x1, x0
   26cac:	ldr	w0, [x1]
   26cb0:	orr	w0, w0, #0x8
   26cb4:	str	w0, [x1]
   26cb8:	mov	sp, x29
   26cbc:	mov	w0, w26
   26cc0:	ldp	x19, x20, [sp, #16]
   26cc4:	ldp	x21, x22, [sp, #32]
   26cc8:	ldp	x23, x24, [sp, #48]
   26ccc:	ldp	x25, x26, [sp, #64]
   26cd0:	ldp	x27, x28, [sp, #80]
   26cd4:	ldp	x29, x30, [sp], #192
   26cd8:	ret
   26cdc:	mov	w1, w26
   26ce0:	mov	w2, w20
   26ce4:	mov	x0, x22
   26ce8:	bl	cb30 <mpfr_check_range@plt>
   26cec:	mov	w26, w0
   26cf0:	b	26cb8 <mpfr_sqrt@@Base+0x4a8>
   26cf4:	b.eq	27468 <mpfr_sqrt@@Base+0xc58>  // b.none
   26cf8:	mov	x0, #0x1                   	// #1
   26cfc:	lsl	x3, x0, x21
   26d00:	adds	x3, x3, x6
   26d04:	str	x3, [x24]
   26d08:	b.cc	26de0 <mpfr_sqrt@@Base+0x5d0>  // b.lo, b.ul, b.last
   26d0c:	mov	x2, #0x1                   	// #1
   26d10:	b	26d2c <mpfr_sqrt@@Base+0x51c>
   26d14:	ldr	x0, [x28, x2, lsl #3]
   26d18:	add	x1, x2, #0x1
   26d1c:	add	x0, x0, #0x1
   26d20:	str	x0, [x24, x2, lsl #3]
   26d24:	cbnz	x0, 270d0 <mpfr_sqrt@@Base+0x8c0>
   26d28:	mov	x2, x1
   26d2c:	cmp	x23, x2
   26d30:	b.gt	26d14 <mpfr_sqrt@@Base+0x504>
   26d34:	add	x23, x24, x23, lsl #3
   26d38:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   26d3c:	add	x19, x19, #0x1
   26d40:	mov	w26, #0x1                   	// #1
   26d44:	stur	x0, [x23, #-8]
   26d48:	b	26c38 <mpfr_sqrt@@Base+0x428>
   26d4c:	and	x1, x6, #0x1
   26d50:	orr	x0, x1, x0
   26d54:	cbnz	x0, 26ef8 <mpfr_sqrt@@Base+0x6e8>
   26d58:	mov	w26, #0xffffffff            	// #-1
   26d5c:	add	x1, x28, #0x8
   26d60:	cmp	x1, x24
   26d64:	b.eq	26c38 <mpfr_sqrt@@Base+0x428>  // b.none
   26d68:	ldr	x0, [x29, #104]
   26d6c:	lsl	x2, x0, #3
   26d70:	mov	x0, x24
   26d74:	bl	ba10 <memcpy@plt>
   26d78:	b	26c38 <mpfr_sqrt@@Base+0x428>
   26d7c:	mov	w26, #0x0                   	// #0
   26d80:	b	26c30 <mpfr_sqrt@@Base+0x420>
   26d84:	mov	x1, #0x2                   	// #2
   26d88:	movk	x1, #0x8000, lsl #48
   26d8c:	cmp	x2, x1
   26d90:	b.eq	26da8 <mpfr_sqrt@@Base+0x598>  // b.none
   26d94:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   26d98:	cmp	x2, x1
   26d9c:	b.eq	274bc <mpfr_sqrt@@Base+0xcac>  // b.none
   26da0:	ldr	w1, [x26, #8]
   26da4:	tbz	w1, #31, 273e0 <mpfr_sqrt@@Base+0xbd0>
   26da8:	mrs	x1, tpidr_el0
   26dac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   26db0:	ldr	x2, [x0, #2576]
   26db4:	add	x0, x0, #0xa10
   26db8:	blr	x2
   26dbc:	add	x0, x1, x0
   26dc0:	mov	x1, #0x2                   	// #2
   26dc4:	movk	x1, #0x8000, lsl #48
   26dc8:	str	x1, [x22, #16]
   26dcc:	mov	w26, #0x0                   	// #0
   26dd0:	ldr	w1, [x0]
   26dd4:	orr	w1, w1, #0x4
   26dd8:	str	w1, [x0]
   26ddc:	b	26cb8 <mpfr_sqrt@@Base+0x4a8>
   26de0:	cmp	x28, x24
   26de4:	mov	w26, #0x1                   	// #1
   26de8:	b.eq	26c38 <mpfr_sqrt@@Base+0x428>  // b.none
   26dec:	cmp	x23, #0x1
   26df0:	b.le	26c38 <mpfr_sqrt@@Base+0x428>
   26df4:	add	x0, x28, #0x8
   26df8:	add	x1, x24, #0x18
   26dfc:	cmp	x0, x1
   26e00:	add	x2, x24, #0x8
   26e04:	add	x1, x28, #0x18
   26e08:	sub	x0, x23, #0x2
   26e0c:	ccmp	x2, x1, #0x2, cc  // cc = lo, ul, last
   26e10:	ccmp	x0, #0x9, #0x0, cs  // cs = hs, nlast
   26e14:	b.ls	274ec <mpfr_sqrt@@Base+0xcdc>  // b.plast
   26e18:	sub	x23, x23, #0x1
   26e1c:	mov	x0, #0x8                   	// #8
   26e20:	lsr	x1, x23, #1
   26e24:	lsl	x1, x1, #4
   26e28:	add	x1, x1, x0
   26e2c:	nop
   26e30:	ldr	q0, [x28, x0]
   26e34:	str	q0, [x24, x0]
   26e38:	add	x0, x0, #0x10
   26e3c:	cmp	x0, x1
   26e40:	b.ne	26e30 <mpfr_sqrt@@Base+0x620>  // b.any
   26e44:	orr	x0, x23, #0x1
   26e48:	tbz	w23, #0, 26e54 <mpfr_sqrt@@Base+0x644>
   26e4c:	ldr	x1, [x28, x0, lsl #3]
   26e50:	str	x1, [x24, x0, lsl #3]
   26e54:	mov	w26, #0x1                   	// #1
   26e58:	b	26c38 <mpfr_sqrt@@Base+0x428>
   26e5c:	ldr	w0, [x29, #124]
   26e60:	sub	x19, x19, x25
   26e64:	add	x1, x8, x19, lsl #3
   26e68:	cbnz	w0, 27440 <mpfr_sqrt@@Base+0xc30>
   26e6c:	cmp	x27, x1
   26e70:	b.eq	274e0 <mpfr_sqrt@@Base+0xcd0>  // b.none
   26e74:	mov	x5, #0x0                   	// #0
   26e78:	lsl	x2, x23, #4
   26e7c:	mov	x0, x27
   26e80:	str	x8, [x29, #96]
   26e84:	str	x5, [x29, #112]
   26e88:	bl	ba10 <memcpy@plt>
   26e8c:	ldr	x8, [x29, #96]
   26e90:	mov	w0, #0x1                   	// #1
   26e94:	ldr	x5, [x29, #112]
   26e98:	cmp	x19, #0x0
   26e9c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   26ea0:	b.eq	2692c <mpfr_sqrt@@Base+0x11c>  // b.none
   26ea4:	nop
   26ea8:	sub	x19, x19, #0x1
   26eac:	ldr	x5, [x8, x19, lsl #3]
   26eb0:	cmp	x5, #0x0
   26eb4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   26eb8:	b.ne	26ea8 <mpfr_sqrt@@Base+0x698>  // b.any
   26ebc:	b	2692c <mpfr_sqrt@@Base+0x11c>
   26ec0:	add	x0, x29, #0xa0
   26ec4:	str	x8, [x29, #112]
   26ec8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   26ecc:	mov	x27, x0
   26ed0:	ldr	x8, [x29, #112]
   26ed4:	b	268c4 <mpfr_sqrt@@Base+0xb4>
   26ed8:	bl	c410 <mpfr_tmp_free@plt>
   26edc:	ldr	x19, [x22, #16]
   26ee0:	b	26c58 <mpfr_sqrt@@Base+0x448>
   26ee4:	tbz	x4, #63, 26d58 <mpfr_sqrt@@Base+0x548>
   26ee8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   26eec:	cmp	x4, x1
   26ef0:	ldr	x6, [x28, #8]
   26ef4:	b.eq	26d4c <mpfr_sqrt@@Base+0x53c>  // b.none
   26ef8:	add	x28, x28, #0x8
   26efc:	mov	x3, #0x1                   	// #1
   26f00:	ldr	x23, [x29, #104]
   26f04:	b	26d00 <mpfr_sqrt@@Base+0x4f0>
   26f08:	ldr	x0, [x26, #24]
   26f0c:	mov	x1, #0x40                  	// #64
   26f10:	sub	x3, x1, x3
   26f14:	mov	x7, #0x1                   	// #1
   26f18:	lsl	x7, x7, x3
   26f1c:	sub	x8, x7, #0x1
   26f20:	ldr	x9, [x0]
   26f24:	tbz	w2, #0, 26f30 <mpfr_sqrt@@Base+0x720>
   26f28:	lsr	x9, x9, #1
   26f2c:	add	x2, x2, #0x1
   26f30:	lsr	x4, x9, #54
   26f34:	adrp	x1, 60000 <mpfr_free_pool@@Base+0x4558>
   26f38:	sub	x4, x4, #0x100
   26f3c:	add	x1, x1, #0xcf0
   26f40:	adrp	x6, 62000 <mpfr_l2b_2_0__tab@@Base+0x1a10>
   26f44:	add	x6, x6, #0x4f0
   26f48:	lsr	x5, x9, #27
   26f4c:	lsr	x0, x9, #31
   26f50:	ldr	x1, [x1, x4, lsl #3]
   26f54:	add	x2, x2, x2, lsr #63
   26f58:	ldr	x10, [x6, x4, lsl #3]
   26f5c:	mov	x4, x5
   26f60:	madd	x5, x5, x1, x1
   26f64:	mov	x6, #0x1fffffffe           	// #8589934590
   26f68:	asr	x2, x2, #1
   26f6c:	lsl	x1, x10, #57
   26f70:	lsl	x10, x10, #11
   26f74:	sub	x1, x1, x5
   26f78:	add	x1, x10, x1, lsr #47
   26f7c:	mul	x5, x1, x1
   26f80:	madd	x5, x4, x5, x5
   26f84:	neg	x5, x5
   26f88:	umulh	x5, x1, x5
   26f8c:	lsr	x5, x5, #6
   26f90:	add	x5, x5, x1, lsl #10
   26f94:	mul	x0, x0, x5
   26f98:	lsr	x0, x0, #32
   26f9c:	msub	x1, x0, x0, x9
   26fa0:	cmp	x1, x6
   26fa4:	b.ls	26fc4 <mpfr_sqrt@@Base+0x7b4>  // b.plast
   26fa8:	mvn	x4, x0, lsl #1
   26fac:	nop
   26fb0:	add	x1, x1, x4
   26fb4:	add	x0, x0, #0x1
   26fb8:	cmp	x1, x6
   26fbc:	sub	x4, x4, #0x2
   26fc0:	b.hi	26fb0 <mpfr_sqrt@@Base+0x7a0>  // b.pmore
   26fc4:	cmp	x1, x0, lsl #1
   26fc8:	lsl	x4, x0, #1
   26fcc:	b.hi	27428 <mpfr_sqrt@@Base+0xc18>  // b.pmore
   26fd0:	mul	x1, x5, x1
   26fd4:	lsl	x0, x0, #32
   26fd8:	add	x1, x0, x1, lsr #32
   26fdc:	add	x0, x1, #0x7
   26fe0:	and	x0, x0, x8, lsr #1
   26fe4:	cmp	x0, #0x7
   26fe8:	b.ls	275d4 <mpfr_sqrt@@Base+0xdc4>  // b.plast
   26fec:	sub	w3, w3, #0x1
   26ff0:	mov	x0, #0x1                   	// #1
   26ff4:	neg	x5, x7
   26ff8:	mov	w6, #0x0                   	// #0
   26ffc:	lsl	x3, x0, x3
   27000:	eor	x0, x8, x3
   27004:	and	x0, x0, x1
   27008:	ands	x3, x3, x1
   2700c:	orr	x8, x0, #0x1
   27010:	cset	w9, ne  // ne = any
   27014:	and	x1, x1, x5
   27018:	str	x1, [x24]
   2701c:	mrs	x4, tpidr_el0
   27020:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   27024:	ldr	x10, [x0, #2544]
   27028:	add	x0, x0, #0x9f0
   2702c:	blr	x10
   27030:	ldr	x0, [x4, x0]
   27034:	cmp	x2, x0
   27038:	b.gt	278dc <mpfr_sqrt@@Base+0x10cc>
   2703c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   27040:	ldr	x10, [x0, #2512]
   27044:	add	x0, x0, #0x9d0
   27048:	blr	x10
   2704c:	ldr	x0, [x4, x0]
   27050:	cmp	x2, x0
   27054:	b.lt	275b0 <mpfr_sqrt@@Base+0xda0>  // b.tstop
   27058:	str	x2, [x22, #16]
   2705c:	cmp	w6, #0x0
   27060:	ccmp	w20, #0x5, #0x4, eq  // eq = none
   27064:	b.eq	27438 <mpfr_sqrt@@Base+0xc28>  // b.none
   27068:	cbnz	w20, 2750c <mpfr_sqrt@@Base+0xcfc>
   2706c:	cbz	x3, 273b8 <mpfr_sqrt@@Base+0xba8>
   27070:	ldr	x0, [x24]
   27074:	adds	x0, x7, x0
   27078:	b.ne	275a8 <mpfr_sqrt@@Base+0xd98>  // b.any
   2707c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   27080:	str	x0, [x24]
   27084:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   27088:	ldr	x1, [x0, #2544]
   2708c:	add	x0, x0, #0x9f0
   27090:	blr	x1
   27094:	ldr	x0, [x4, x0]
   27098:	cmp	x2, x0
   2709c:	b.ge	278dc <mpfr_sqrt@@Base+0x10cc>  // b.tcont
   270a0:	add	x2, x2, #0x1
   270a4:	str	x2, [x22, #16]
   270a8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   270ac:	ldr	x1, [x0, #2576]
   270b0:	add	x0, x0, #0xa10
   270b4:	blr	x1
   270b8:	add	x0, x4, x0
   270bc:	mov	w26, #0x1                   	// #1
   270c0:	ldr	w1, [x0]
   270c4:	orr	w1, w1, #0x8
   270c8:	str	w1, [x0]
   270cc:	b	26cb8 <mpfr_sqrt@@Base+0x4a8>
   270d0:	cmp	x28, x24
   270d4:	mov	w26, #0x1                   	// #1
   270d8:	b.eq	26c38 <mpfr_sqrt@@Base+0x428>  // b.none
   270dc:	cmp	x23, x1
   270e0:	b.le	26c38 <mpfr_sqrt@@Base+0x428>
   270e4:	add	x2, x2, #0x3
   270e8:	sub	x0, x23, #0x1
   270ec:	sub	x0, x0, x1
   270f0:	lsl	x2, x2, #3
   270f4:	sub	x3, x2, #0x10
   270f8:	add	x5, x24, x2
   270fc:	add	x4, x28, x3
   27100:	add	x2, x28, x2
   27104:	add	x3, x24, x3
   27108:	cmp	x4, x5
   2710c:	ccmp	x3, x2, #0x2, cc  // cc = lo, ul, last
   27110:	ccmp	x0, #0x9, #0x0, cs  // cs = hs, nlast
   27114:	b.ls	273f4 <mpfr_sqrt@@Base+0xbe4>  // b.plast
   27118:	sub	x23, x23, x1
   2711c:	mov	x0, #0x0                   	// #0
   27120:	lsr	x2, x23, #1
   27124:	lsl	x2, x2, #4
   27128:	ldr	q0, [x4, x0]
   2712c:	str	q0, [x3, x0]
   27130:	add	x0, x0, #0x10
   27134:	cmp	x0, x2
   27138:	b.ne	27128 <mpfr_sqrt@@Base+0x918>  // b.any
   2713c:	and	x0, x23, #0xfffffffffffffffe
   27140:	add	x1, x0, x1
   27144:	cmp	x0, x23
   27148:	b.eq	26e54 <mpfr_sqrt@@Base+0x644>  // b.none
   2714c:	ldr	x0, [x28, x1, lsl #3]
   27150:	mov	w26, #0x1                   	// #1
   27154:	str	x0, [x24, x1, lsl #3]
   27158:	b	26c38 <mpfr_sqrt@@Base+0x428>
   2715c:	ldr	x0, [x1, #24]
   27160:	mov	x19, #0x80                  	// #128
   27164:	sub	x19, x19, x3
   27168:	ldr	x1, [x0, #8]
   2716c:	tbz	w2, #0, 274ac <mpfr_sqrt@@Base+0xc9c>
   27170:	lsr	x1, x1, #1
   27174:	str	x1, [x29, #152]
   27178:	add	x2, x2, #0x1
   2717c:	ldp	x3, x8, [x0]
   27180:	extr	x8, x8, x3, #1
   27184:	str	x8, [x29, #144]
   27188:	ldr	x0, [x0]
   2718c:	lsl	x0, x0, #63
   27190:	str	x0, [x29, #136]
   27194:	lsr	x3, x1, #54
   27198:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   2719c:	sub	x3, x3, #0x100
   271a0:	add	x0, x0, #0xcf0
   271a4:	adrp	x5, 62000 <mpfr_l2b_2_0__tab@@Base+0x1a10>
   271a8:	add	x5, x5, #0x4f0
   271ac:	lsr	x4, x1, #27
   271b0:	add	x27, x2, x2, lsr #63
   271b4:	ldr	x0, [x0, x3, lsl #3]
   271b8:	mov	x6, #0x2000000000000000    	// #2305843009213693952
   271bc:	ldr	x5, [x5, x3, lsl #3]
   271c0:	mov	x3, x4
   271c4:	madd	x4, x4, x0, x0
   271c8:	mov	x21, #0x1                   	// #1
   271cc:	lsl	x21, x21, x19
   271d0:	asr	x27, x27, #1
   271d4:	lsl	x0, x5, #57
   271d8:	lsl	x5, x5, #11
   271dc:	sub	x0, x0, x4
   271e0:	sub	x23, x21, #0x1
   271e4:	add	x0, x5, x0, lsr #47
   271e8:	mul	x2, x0, x0
   271ec:	madd	x2, x3, x2, x2
   271f0:	neg	x2, x2
   271f4:	umulh	x2, x0, x2
   271f8:	lsr	x2, x2, #6
   271fc:	add	x0, x2, x0, lsl #10
   27200:	lsl	x7, x0, #33
   27204:	mul	x2, x0, x0
   27208:	umulh	x2, x2, x1
   2720c:	add	x2, x2, #0x2
   27210:	sub	x2, x6, x2, lsr #1
   27214:	mul	x0, x0, x2
   27218:	add	x7, x7, x0, lsr #29
   2721c:	umulh	x0, x7, x1
   27220:	adds	x6, x0, x1
   27224:	b.pl	27660 <mpfr_sqrt@@Base+0xe50>  // b.nfrst
   27228:	mul	x0, x6, x6
   2722c:	umulh	x2, x6, x6
   27230:	negs	x4, x0
   27234:	sbc	x1, x1, x2
   27238:	mov	x2, x1
   2723c:	cmp	x1, #0xf
   27240:	b.ls	27264 <mpfr_sqrt@@Base+0xa54>  // b.plast
   27244:	lsl	x1, x6, #4
   27248:	lsr	x0, x6, #60
   2724c:	add	x6, x6, #0x8
   27250:	subs	x3, x4, x1
   27254:	sbc	x2, x2, x0
   27258:	subs	x1, x3, #0x40
   2725c:	sbc	x2, x2, xzr
   27260:	mov	x4, x1
   27264:	cmp	x2, #0x7
   27268:	b.ls	2728c <mpfr_sqrt@@Base+0xa7c>  // b.plast
   2726c:	lsl	x1, x6, #3
   27270:	lsr	x0, x6, #61
   27274:	add	x6, x6, #0x4
   27278:	subs	x3, x4, x1
   2727c:	sbc	x2, x2, x0
   27280:	subs	x1, x3, #0x10
   27284:	sbc	x2, x2, xzr
   27288:	mov	x4, x1
   2728c:	cmp	x2, #0x3
   27290:	b.ls	272d4 <mpfr_sqrt@@Base+0xac4>  // b.plast
   27294:	lsl	x1, x6, #2
   27298:	lsr	x0, x6, #62
   2729c:	add	x6, x6, #0x2
   272a0:	subs	x3, x4, x1
   272a4:	sbc	x2, x2, x0
   272a8:	subs	x1, x3, #0x4
   272ac:	sbc	x2, x2, xzr
   272b0:	mov	x4, x1
   272b4:	b	272d4 <mpfr_sqrt@@Base+0xac4>
   272b8:	lsr	x1, x6, #63
   272bc:	add	x3, x3, #0x1
   272c0:	add	x6, x6, #0x1
   272c4:	subs	x5, x4, x3
   272c8:	sbc	x1, x2, x1
   272cc:	mov	x2, x1
   272d0:	mov	x4, x5
   272d4:	cmp	x2, #0x1
   272d8:	lsl	x3, x6, #1
   272dc:	b.hi	272b8 <mpfr_sqrt@@Base+0xaa8>  // b.pmore
   272e0:	b.ne	27490 <mpfr_sqrt@@Base+0xc80>  // b.any
   272e4:	cmp	x3, x4
   272e8:	b.cc	272b8 <mpfr_sqrt@@Base+0xaa8>  // b.lo, b.ul, b.last
   272ec:	adds	x1, x4, x8
   272f0:	cset	x2, cs  // cs = hs, nlast
   272f4:	add	x2, x2, #0x1
   272f8:	extr	x1, x2, x1, #1
   272fc:	lsr	x2, x2, #1
   27300:	umulh	x0, x7, x1
   27304:	adds	x1, x1, x0
   27308:	adc	x0, x6, x2
   2730c:	cbz	x2, 27318 <mpfr_sqrt@@Base+0xb08>
   27310:	adds	x1, x7, x1
   27314:	cinc	x0, x0, cs  // cs = hs, nlast
   27318:	add	x2, x1, #0x1a
   2731c:	stp	x1, x0, [x24]
   27320:	and	x0, x2, x23, lsr #1
   27324:	cmp	x0, #0x1e
   27328:	mov	x5, #0x1                   	// #1
   2732c:	b.ls	2766c <mpfr_sqrt@@Base+0xe5c>  // b.plast
   27330:	ldr	x1, [x24]
   27334:	neg	x7, x21
   27338:	mrs	x4, tpidr_el0
   2733c:	sub	w3, w19, #0x1
   27340:	and	x6, x1, x7
   27344:	str	x6, [x24]
   27348:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2734c:	ldr	x8, [x0, #2544]
   27350:	add	x0, x0, #0x9f0
   27354:	blr	x8
   27358:	mov	x2, #0x1                   	// #1
   2735c:	ldr	x0, [x4, x0]
   27360:	lsl	x3, x2, x3
   27364:	eor	x23, x23, x3
   27368:	and	x3, x1, x3
   2736c:	and	x23, x23, x1
   27370:	cmp	x27, x0
   27374:	orr	x23, x23, x5
   27378:	b.gt	278f4 <mpfr_sqrt@@Base+0x10e4>
   2737c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   27380:	ldr	x1, [x0, #2512]
   27384:	add	x0, x0, #0x9d0
   27388:	blr	x1
   2738c:	ldr	x0, [x4, x0]
   27390:	cmp	x27, x0
   27394:	b.lt	277e4 <mpfr_sqrt@@Base+0xfd4>  // b.tstop
   27398:	str	x27, [x22, #16]
   2739c:	cmp	x23, #0x0
   273a0:	ccmp	w20, #0x5, #0x4, ne  // ne = any
   273a4:	mov	w26, #0x0                   	// #0
   273a8:	b.eq	26cb8 <mpfr_sqrt@@Base+0x4a8>  // b.none
   273ac:	cbnz	w20, 27598 <mpfr_sqrt@@Base+0xd88>
   273b0:	cbnz	x3, 27550 <mpfr_sqrt@@Base+0xd40>
   273b4:	nop
   273b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   273bc:	ldr	x1, [x0, #2576]
   273c0:	add	x0, x0, #0xa10
   273c4:	blr	x1
   273c8:	add	x0, x4, x0
   273cc:	mov	w26, #0xffffffff            	// #-1
   273d0:	ldr	w1, [x0]
   273d4:	orr	w1, w1, #0x8
   273d8:	str	w1, [x0]
   273dc:	b	26cb8 <mpfr_sqrt@@Base+0x4a8>
   273e0:	mov	w1, #0x1                   	// #1
   273e4:	mov	w26, #0x0                   	// #0
   273e8:	str	w1, [x22, #8]
   273ec:	str	x0, [x22, #16]
   273f0:	b	26cb8 <mpfr_sqrt@@Base+0x4a8>
   273f4:	ldr	x0, [x28, x1, lsl #3]
   273f8:	str	x0, [x24, x1, lsl #3]
   273fc:	add	x1, x1, #0x1
   27400:	cmp	x23, x1
   27404:	b.ne	273f4 <mpfr_sqrt@@Base+0xbe4>  // b.any
   27408:	b	26e54 <mpfr_sqrt@@Base+0x644>
   2740c:	mov	x2, x19
   27410:	mov	x1, x8
   27414:	mov	x0, x27
   27418:	mov	w3, #0x1                   	// #1
   2741c:	bl	bce0 <__gmpn_rshift@plt>
   27420:	mov	x5, x0
   27424:	b	2692c <mpfr_sqrt@@Base+0x11c>
   27428:	sub	x1, x1, #0x1
   2742c:	add	x0, x0, #0x1
   27430:	sub	x1, x1, x4
   27434:	b	26fd0 <mpfr_sqrt@@Base+0x7c0>
   27438:	mov	w26, #0x0                   	// #0
   2743c:	b	26cb8 <mpfr_sqrt@@Base+0x4a8>
   27440:	mov	x2, x25
   27444:	mov	x0, x27
   27448:	mov	w3, #0x1                   	// #1
   2744c:	str	x8, [x29, #112]
   27450:	bl	bce0 <__gmpn_rshift@plt>
   27454:	cmp	x0, #0x0
   27458:	mov	x5, x0
   2745c:	cset	w0, eq  // eq = none
   27460:	ldr	x8, [x29, #112]
   27464:	b	26e98 <mpfr_sqrt@@Base+0x688>
   27468:	ldr	x6, [x28, #8]
   2746c:	b	26ef8 <mpfr_sqrt@@Base+0x6e8>
   27470:	add	x0, x29, #0xa0
   27474:	bl	bdc0 <mpfr_tmp_allocate@plt>
   27478:	mov	x28, x0
   2747c:	str	x23, [x29, #104]
   27480:	mov	x23, x21
   27484:	mov	w21, #0x40                  	// #64
   27488:	ldr	x2, [x26, #16]
   2748c:	b	268a4 <mpfr_sqrt@@Base+0x94>
   27490:	adds	x1, x4, x8
   27494:	cset	x0, cs  // cs = hs, nlast
   27498:	extr	x1, x0, x1, #1
   2749c:	umulh	x0, x7, x1
   274a0:	adds	x1, x1, x0
   274a4:	cinc	x0, x6, cs  // cs = hs, nlast
   274a8:	b	27318 <mpfr_sqrt@@Base+0xb08>
   274ac:	str	x1, [x29, #152]
   274b0:	ldr	x8, [x0]
   274b4:	stp	xzr, x8, [x29, #136]
   274b8:	b	27194 <mpfr_sqrt@@Base+0x984>
   274bc:	ldr	w0, [x26, #8]
   274c0:	mov	w26, #0x0                   	// #0
   274c4:	str	w0, [x22, #8]
   274c8:	str	x2, [x22, #16]
   274cc:	b	26cb8 <mpfr_sqrt@@Base+0x4a8>
   274d0:	cmp	x1, x2
   274d4:	cset	w6, cc  // cc = lo, ul, last
   274d8:	cset	x3, cc  // cc = lo, ul, last
   274dc:	b	26b90 <mpfr_sqrt@@Base+0x380>
   274e0:	mov	w0, #0x1                   	// #1
   274e4:	mov	x5, #0x0                   	// #0
   274e8:	b	26e98 <mpfr_sqrt@@Base+0x688>
   274ec:	mov	x0, #0x1                   	// #1
   274f0:	ldr	x1, [x28, x0, lsl #3]
   274f4:	str	x1, [x24, x0, lsl #3]
   274f8:	add	x0, x0, #0x1
   274fc:	cmp	x23, x0
   27500:	b.ne	274f0 <mpfr_sqrt@@Base+0xce0>  // b.any
   27504:	mov	w26, #0x1                   	// #1
   27508:	b	26c38 <mpfr_sqrt@@Base+0x428>
   2750c:	and	w0, w20, #0xfffffffd
   27510:	cmp	w0, #0x1
   27514:	b.eq	273b8 <mpfr_sqrt@@Base+0xba8>  // b.none
   27518:	b	27070 <mpfr_sqrt@@Base+0x860>
   2751c:	sub	w1, w20, #0x2
   27520:	tst	w1, #0xfffffffd
   27524:	b.ne	27820 <mpfr_sqrt@@Base+0x1010>  // b.any
   27528:	sub	x0, x0, #0x1
   2752c:	cmp	x27, x0
   27530:	b.ne	27820 <mpfr_sqrt@@Base+0x1010>  // b.any
   27534:	ldr	x0, [x24, #8]
   27538:	cmp	x7, x6
   2753c:	ccmn	x0, #0x1, #0x0, eq  // eq = none
   27540:	b.ne	27820 <mpfr_sqrt@@Base+0x1010>  // b.any
   27544:	orr	x3, x3, x23
   27548:	cbz	x3, 27820 <mpfr_sqrt@@Base+0x1010>
   2754c:	str	x27, [x22, #16]
   27550:	ldp	x0, x1, [x24]
   27554:	add	x21, x21, x0
   27558:	str	x21, [x24]
   2755c:	cmp	x21, #0x0
   27560:	cinc	x0, x1, eq  // eq = none
   27564:	cbnz	x0, 27848 <mpfr_sqrt@@Base+0x1038>
   27568:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2756c:	ldr	x1, [x0, #2544]
   27570:	add	x0, x0, #0x9f0
   27574:	blr	x1
   27578:	ldr	x0, [x4, x0]
   2757c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   27580:	str	x1, [x24, #8]
   27584:	cmp	x27, x0
   27588:	b.ge	278dc <mpfr_sqrt@@Base+0x10cc>  // b.tcont
   2758c:	add	x27, x27, #0x1
   27590:	str	x27, [x22, #16]
   27594:	b	270a8 <mpfr_sqrt@@Base+0x898>
   27598:	and	w0, w20, #0xfffffffd
   2759c:	cmp	w0, #0x1
   275a0:	b.eq	273b8 <mpfr_sqrt@@Base+0xba8>  // b.none
   275a4:	b	27550 <mpfr_sqrt@@Base+0xd40>
   275a8:	str	x0, [x24]
   275ac:	b	270a8 <mpfr_sqrt@@Base+0x898>
   275b0:	cbnz	w20, 27850 <mpfr_sqrt@@Base+0x1040>
   275b4:	sub	x0, x0, #0x1
   275b8:	cmp	x2, x0
   275bc:	b.ne	278c4 <mpfr_sqrt@@Base+0x10b4>  // b.any
   275c0:	cmp	w9, #0x0
   275c4:	ccmp	x1, x5, #0x0, ne  // ne = any
   275c8:	b.ne	27940 <mpfr_sqrt@@Base+0x1130>  // b.any
   275cc:	str	x2, [x22, #16]
   275d0:	b	27070 <mpfr_sqrt@@Base+0x860>
   275d4:	cmp	x1, #0x0
   275d8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   275dc:	csel	x1, x1, x0, lt  // lt = tstop
   275e0:	umulh	x4, x1, x1
   275e4:	mul	x5, x1, x1
   275e8:	negs	x0, x5
   275ec:	sbc	x4, x9, x4
   275f0:	cbnz	x4, 27614 <mpfr_sqrt@@Base+0xe04>
   275f4:	b	27628 <mpfr_sqrt@@Base+0xe18>
   275f8:	subs	x0, x0, x1
   275fc:	add	x1, x1, #0x1
   27600:	cset	x5, cc  // cc = lo, ul, last
   27604:	subs	x0, x0, x1
   27608:	cinc	x5, x5, cc  // cc = lo, ul, last
   2760c:	subs	x4, x4, x5
   27610:	b.eq	27628 <mpfr_sqrt@@Base+0xe18>  // b.none
   27614:	cmp	x4, #0x1
   27618:	b.ne	275f8 <mpfr_sqrt@@Base+0xde8>  // b.any
   2761c:	cmp	x0, x1, lsl #1
   27620:	b.hi	275f8 <mpfr_sqrt@@Base+0xde8>  // b.pmore
   27624:	orr	x0, x0, #0x1
   27628:	sub	w4, w3, #0x1
   2762c:	mov	x3, #0x1                   	// #1
   27630:	neg	x5, x7
   27634:	lsl	x3, x3, x4
   27638:	eor	x8, x8, x3
   2763c:	and	x8, x8, x1
   27640:	ands	x3, x3, x1
   27644:	orr	x8, x8, x0
   27648:	cset	w9, ne  // ne = any
   2764c:	cmp	x8, #0x0
   27650:	and	x1, x5, x1
   27654:	cset	w6, eq  // eq = none
   27658:	str	x1, [x24]
   2765c:	b	2701c <mpfr_sqrt@@Base+0x80c>
   27660:	mov	x0, #0x0                   	// #0
   27664:	mov	x6, #0x8000000000000000    	// #-9223372036854775808
   27668:	b	2722c <mpfr_sqrt@@Base+0xa1c>
   2766c:	add	x25, x29, #0xa0
   27670:	mov	x1, x24
   27674:	mov	x0, x25
   27678:	mov	x2, #0x2                   	// #2
   2767c:	add	x26, x29, #0x80
   27680:	str	xzr, [x29, #128]
   27684:	bl	c3b0 <__gmpn_sqr@plt>
   27688:	mov	x2, x25
   2768c:	mov	x1, x26
   27690:	mov	x3, #0x3                   	// #3
   27694:	mov	x0, x25
   27698:	bl	be60 <__gmpn_sub_n@plt>
   2769c:	ldp	x1, x2, [x24]
   276a0:	ldr	x5, [x29, #176]
   276a4:	ldp	x3, x4, [x29, #160]
   276a8:	lsl	x0, x1, #1
   276ac:	extr	x2, x2, x1, #63
   276b0:	tbz	x5, #63, 27704 <mpfr_sqrt@@Base+0xef4>
   276b4:	nop
   276b8:	subs	x6, x0, #0x1
   276bc:	sub	x0, x0, #0x2
   276c0:	cset	x1, ls  // ls = plast
   276c4:	add	x3, x3, x6
   276c8:	cmp	x3, x0
   276cc:	sub	x2, x2, x1
   276d0:	cinc	x1, x2, cc  // cc = lo, ul, last
   276d4:	cset	w6, cc  // cc = lo, ul, last
   276d8:	add	x4, x4, x1
   276dc:	cmp	x4, x2
   276e0:	b.cc	277a8 <mpfr_sqrt@@Base+0xf98>  // b.lo, b.ul, b.last
   276e4:	cmp	w6, #0x0
   276e8:	ccmp	x4, x2, #0x0, ne  // ne = any
   276ec:	cset	x1, eq  // eq = none
   276f0:	add	x1, x1, #0x1
   276f4:	adds	x5, x5, x1
   276f8:	b.mi	276b8 <mpfr_sqrt@@Base+0xea8>  // b.first
   276fc:	stp	x3, x4, [x29, #160]
   27700:	str	x5, [x29, #176]
   27704:	mov	w1, #0x0                   	// #0
   27708:	b	2774c <mpfr_sqrt@@Base+0xf3c>
   2770c:	cmp	x3, x0
   27710:	cset	w1, ls  // ls = plast
   27714:	cmp	x4, x2
   27718:	b.cs	27788 <mpfr_sqrt@@Base+0xf78>  // b.hs, b.nlast
   2771c:	and	x1, x1, #0xff
   27720:	mov	x6, #0x1                   	// #1
   27724:	mvn	x7, x0
   27728:	add	x0, x0, #0x2
   2772c:	mvn	x6, x6
   27730:	cmp	x0, #0x1
   27734:	add	x1, x1, x2
   27738:	add	x5, x5, x6
   2773c:	cinc	x2, x2, ls  // ls = plast
   27740:	add	x3, x3, x7
   27744:	sub	x4, x4, x1
   27748:	mov	w1, #0x1                   	// #1
   2774c:	cmp	x5, #0x1
   27750:	b.hi	2770c <mpfr_sqrt@@Base+0xefc>  // b.pmore
   27754:	b.eq	277b4 <mpfr_sqrt@@Base+0xfa4>  // b.none
   27758:	cbz	w1, 27764 <mpfr_sqrt@@Base+0xf54>
   2775c:	stp	x3, x4, [x29, #160]
   27760:	str	xzr, [x29, #176]
   27764:	lsr	x1, x2, #1
   27768:	extr	x0, x2, x0, #1
   2776c:	orr	x1, x1, #0x8000000000000000
   27770:	stp	x0, x1, [x24]
   27774:	ldp	x1, x0, [x29, #160]
   27778:	ldr	x5, [x29, #176]
   2777c:	orr	x5, x5, x1
   27780:	orr	x5, x5, x0
   27784:	b	27330 <mpfr_sqrt@@Base+0xb20>
   27788:	b.eq	27798 <mpfr_sqrt@@Base+0xf88>  // b.none
   2778c:	and	x1, x1, #0xff
   27790:	mov	x6, #0x0                   	// #0
   27794:	b	27724 <mpfr_sqrt@@Base+0xf14>
   27798:	cmp	x3, x0
   2779c:	cset	x1, ls  // ls = plast
   277a0:	mov	x6, x1
   277a4:	b	27724 <mpfr_sqrt@@Base+0xf14>
   277a8:	adds	x5, x5, #0x2
   277ac:	b.mi	276b8 <mpfr_sqrt@@Base+0xea8>  // b.first
   277b0:	b	276fc <mpfr_sqrt@@Base+0xeec>
   277b4:	cmp	x4, x2
   277b8:	b.ls	277c8 <mpfr_sqrt@@Base+0xfb8>  // b.plast
   277bc:	cmp	x3, x0
   277c0:	cset	w1, ls  // ls = plast
   277c4:	b	2778c <mpfr_sqrt@@Base+0xf7c>
   277c8:	b.ne	278b4 <mpfr_sqrt@@Base+0x10a4>  // b.any
   277cc:	cmp	x3, x0
   277d0:	b.hi	27798 <mpfr_sqrt@@Base+0xf88>  // b.pmore
   277d4:	cbz	w1, 27764 <mpfr_sqrt@@Base+0xf54>
   277d8:	stp	x3, x2, [x29, #160]
   277dc:	str	x5, [x29, #176]
   277e0:	b	27764 <mpfr_sqrt@@Base+0xf54>
   277e4:	cbnz	w20, 2751c <mpfr_sqrt@@Base+0xd0c>
   277e8:	sub	x0, x0, #0x1
   277ec:	cmp	x27, x0
   277f0:	b.ne	278d0 <mpfr_sqrt@@Base+0x10c0>  // b.any
   277f4:	ldr	x0, [x24, #8]
   277f8:	cmp	x3, #0x0
   277fc:	ccmp	x7, x6, #0x0, ne  // ne = any
   27800:	ccmn	x0, #0x1, #0x0, eq  // eq = none
   27804:	b.eq	2754c <mpfr_sqrt@@Base+0xd3c>  // b.none
   27808:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   2780c:	cmp	x0, x1
   27810:	b.ne	27820 <mpfr_sqrt@@Base+0x1010>  // b.any
   27814:	orr	x23, x23, x6
   27818:	cmp	x23, #0x0
   2781c:	cset	w20, eq  // eq = none
   27820:	mov	w1, w20
   27824:	mov	x0, x22
   27828:	mov	w2, #0x1                   	// #1
   2782c:	bl	c3c0 <mpfr_underflow@plt>
   27830:	mov	w26, w0
   27834:	b	26cb8 <mpfr_sqrt@@Base+0x4a8>
   27838:	and	w0, w20, #0xfffffffd
   2783c:	cmp	w0, #0x1
   27840:	b.eq	273b8 <mpfr_sqrt@@Base+0xba8>  // b.none
   27844:	b	26bec <mpfr_sqrt@@Base+0x3dc>
   27848:	str	x0, [x24, #8]
   2784c:	b	270a8 <mpfr_sqrt@@Base+0x898>
   27850:	sub	w6, w20, #0x2
   27854:	tst	w6, #0xfffffffd
   27858:	b.ne	27820 <mpfr_sqrt@@Base+0x1010>  // b.any
   2785c:	sub	x0, x0, #0x1
   27860:	cmp	x0, x2
   27864:	ccmp	x1, x5, #0x0, eq  // eq = none
   27868:	b.ne	27820 <mpfr_sqrt@@Base+0x1010>  // b.any
   2786c:	orr	x0, x8, x3
   27870:	cbz	x0, 27820 <mpfr_sqrt@@Base+0x1010>
   27874:	str	x2, [x22, #16]
   27878:	b	27070 <mpfr_sqrt@@Base+0x860>
   2787c:	cbz	w20, 27920 <mpfr_sqrt@@Base+0x1110>
   27880:	sub	w3, w20, #0x2
   27884:	tst	w3, #0xfffffffd
   27888:	b.ne	27820 <mpfr_sqrt@@Base+0x1010>  // b.any
   2788c:	sub	x0, x0, #0x1
   27890:	cmp	x0, x5
   27894:	ccmn	x1, #0x1, #0x0, eq  // eq = none
   27898:	ccmp	x2, #0x0, #0x4, eq  // eq = none
   2789c:	b.eq	27820 <mpfr_sqrt@@Base+0x1010>  // b.none
   278a0:	str	x5, [x22, #16]
   278a4:	b	26bec <mpfr_sqrt@@Base+0x3dc>
   278a8:	mov	x4, #0x0                   	// #0
   278ac:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   278b0:	b	26b48 <mpfr_sqrt@@Base+0x338>
   278b4:	cbz	w1, 27764 <mpfr_sqrt@@Base+0xf54>
   278b8:	stp	x3, x4, [x29, #160]
   278bc:	str	x5, [x29, #176]
   278c0:	b	27764 <mpfr_sqrt@@Base+0xf54>
   278c4:	b.ge	27940 <mpfr_sqrt@@Base+0x1130>  // b.tcont
   278c8:	mov	w20, #0x1                   	// #1
   278cc:	b	27820 <mpfr_sqrt@@Base+0x1010>
   278d0:	b.lt	278c8 <mpfr_sqrt@@Base+0x10b8>  // b.tstop
   278d4:	ldr	x0, [x24, #8]
   278d8:	b	27808 <mpfr_sqrt@@Base+0xff8>
   278dc:	mov	w1, w20
   278e0:	mov	x0, x22
   278e4:	mov	w2, #0x1                   	// #1
   278e8:	bl	bf40 <mpfr_overflow@plt>
   278ec:	mov	w26, w0
   278f0:	b	26cb8 <mpfr_sqrt@@Base+0x4a8>
   278f4:	mov	w1, w20
   278f8:	mov	x0, x22
   278fc:	bl	bf40 <mpfr_overflow@plt>
   27900:	mov	w26, w0
   27904:	b	26cb8 <mpfr_sqrt@@Base+0x4a8>
   27908:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   2790c:	adrp	x0, 60000 <mpfr_free_pool@@Base+0x4558>
   27910:	add	x2, x2, #0xc40
   27914:	add	x0, x0, #0xce8
   27918:	mov	w1, #0x2b5                 	// #693
   2791c:	bl	cb40 <mpfr_assert_fail@plt>
   27920:	sub	x0, x0, #0x1
   27924:	cmp	x5, x0
   27928:	b.lt	278c8 <mpfr_sqrt@@Base+0x10b8>  // b.tstop
   2792c:	cmp	x2, #0x0
   27930:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   27934:	ccmp	x1, x0, #0x0, eq  // eq = none
   27938:	cset	w20, eq  // eq = none
   2793c:	b	27820 <mpfr_sqrt@@Base+0x1010>
   27940:	cmp	w6, #0x0
   27944:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   27948:	ccmp	x1, x0, #0x0, ne  // ne = any
   2794c:	cset	w20, eq  // eq = none
   27950:	b	27820 <mpfr_sqrt@@Base+0x1010>
   27954:	nop

0000000000027958 <mpfr_sqrt_ui@@Base>:
   27958:	stp	x29, x30, [sp, #-128]!
   2795c:	mov	x29, sp
   27960:	stp	x19, x20, [sp, #16]
   27964:	mov	x19, x0
   27968:	cbnz	x1, 2798c <mpfr_sqrt_ui@@Base+0x34>
   2796c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   27970:	mov	w2, #0x1                   	// #1
   27974:	str	w2, [x19, #8]
   27978:	mov	w0, #0x0                   	// #0
   2797c:	str	x1, [x19, #16]
   27980:	ldp	x19, x20, [sp, #16]
   27984:	ldp	x29, x30, [sp], #128
   27988:	ret
   2798c:	mrs	x4, tpidr_el0
   27990:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   27994:	ldr	x3, [x0, #2576]
   27998:	add	x0, x0, #0xa10
   2799c:	blr	x3
   279a0:	clz	x3, x1
   279a4:	mov	x7, #0x40                  	// #64
   279a8:	sub	w6, w7, w3
   279ac:	stp	x21, x22, [sp, #32]
   279b0:	ldr	w21, [x4, x0]
   279b4:	stp	x25, x26, [sp, #64]
   279b8:	add	x26, x4, x0
   279bc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   279c0:	ldr	x5, [x0, #2512]
   279c4:	add	x0, x0, #0x9d0
   279c8:	blr	x5
   279cc:	add	x25, x4, x0
   279d0:	sxtw	x6, w6
   279d4:	ldr	x22, [x4, x0]
   279d8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   279dc:	ldr	x5, [x0, #2544]
   279e0:	add	x0, x0, #0x9f0
   279e4:	blr	x5
   279e8:	add	x5, sp, #0x58
   279ec:	stp	x23, x24, [sp, #48]
   279f0:	add	x24, x4, x0
   279f4:	lsl	x3, x1, x3
   279f8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   279fc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   27a00:	mov	w10, #0x1                   	// #1
   27a04:	add	x1, sp, #0x60
   27a08:	mov	w20, w2
   27a0c:	str	x9, [x25]
   27a10:	stp	x3, x7, [sp, #88]
   27a14:	str	w10, [sp, #104]
   27a18:	str	x6, [sp, #112]
   27a1c:	str	x5, [sp, #120]
   27a20:	ldr	x23, [x4, x0]
   27a24:	mov	x0, x19
   27a28:	str	x8, [x24]
   27a2c:	bl	c930 <mpfr_sqrt@plt>
   27a30:	ldr	x1, [x19, #16]
   27a34:	str	x23, [x24]
   27a38:	str	x22, [x25]
   27a3c:	str	w21, [x26]
   27a40:	cmp	x23, x1
   27a44:	ccmp	x22, x1, #0x0, ge  // ge = tcont
   27a48:	b.le	27a74 <mpfr_sqrt_ui@@Base+0x11c>
   27a4c:	mov	w1, w0
   27a50:	mov	w2, w20
   27a54:	mov	x0, x19
   27a58:	bl	cb30 <mpfr_check_range@plt>
   27a5c:	ldp	x19, x20, [sp, #16]
   27a60:	ldp	x21, x22, [sp, #32]
   27a64:	ldp	x23, x24, [sp, #48]
   27a68:	ldp	x25, x26, [sp, #64]
   27a6c:	ldp	x29, x30, [sp], #128
   27a70:	ret
   27a74:	cbz	w0, 27a5c <mpfr_sqrt_ui@@Base+0x104>
   27a78:	orr	w21, w21, #0x8
   27a7c:	ldp	x23, x24, [sp, #48]
   27a80:	str	w21, [x26]
   27a84:	ldp	x19, x20, [sp, #16]
   27a88:	ldp	x21, x22, [sp, #32]
   27a8c:	ldp	x25, x26, [sp, #64]
   27a90:	ldp	x29, x30, [sp], #128
   27a94:	ret

0000000000027a98 <mpfr_sub1@@Base>:
   27a98:	stp	x29, x30, [sp, #-160]!
   27a9c:	mov	x29, sp
   27aa0:	stp	x21, x22, [sp, #32]
   27aa4:	ldr	x22, [x0]
   27aa8:	stp	x25, x26, [sp, #64]
   27aac:	mov	x25, x0
   27ab0:	sub	x22, x22, #0x1
   27ab4:	stp	x27, x28, [sp, #80]
   27ab8:	mov	x28, x1
   27abc:	mov	x0, x28
   27ac0:	mov	x1, x2
   27ac4:	stp	x19, x20, [sp, #16]
   27ac8:	asr	x20, x22, #6
   27acc:	stp	x23, x24, [sp, #48]
   27ad0:	mov	x23, x2
   27ad4:	mov	w24, w3
   27ad8:	add	x2, x29, #0x90
   27adc:	str	x20, [x29, #112]
   27ae0:	str	xzr, [x29, #152]
   27ae4:	ldr	x27, [x25, #24]
   27ae8:	bl	bdb0 <mpfr_cmp2@plt>
   27aec:	cbz	w0, 28114 <mpfr_sub1@@Base+0x67c>
   27af0:	cmp	w0, #0x0
   27af4:	add	x20, x20, #0x1
   27af8:	ldr	w0, [x28, #8]
   27afc:	b.ge	27b10 <mpfr_sub1@@Base+0x78>  // b.tcont
   27b00:	mov	x1, x28
   27b04:	neg	w0, w0
   27b08:	mov	x28, x23
   27b0c:	mov	x23, x1
   27b10:	ldr	x21, [x28, #16]
   27b14:	str	w0, [x25, #8]
   27b18:	mov	x1, #0x4                   	// #4
   27b1c:	movk	x1, #0x8000, lsl #48
   27b20:	cmp	x21, x1
   27b24:	b.eq	280a4 <mpfr_sub1@@Base+0x60c>  // b.none
   27b28:	ldr	x6, [x23, #16]
   27b2c:	cmp	x6, x1
   27b30:	b.eq	280b0 <mpfr_sub1@@Base+0x618>  // b.none
   27b34:	sub	x6, x21, x6
   27b38:	ldr	x0, [x25]
   27b3c:	str	x0, [x29, #128]
   27b40:	ldr	x4, [x28]
   27b44:	cmp	x0, x4
   27b48:	csel	x0, x0, x4, ge  // ge = tcont
   27b4c:	add	x0, x0, #0x1
   27b50:	cmp	x0, x6
   27b54:	b.lt	28134 <mpfr_sub1@@Base+0x69c>  // b.tstop
   27b58:	ldr	x5, [x29, #144]
   27b5c:	sub	x4, x4, #0x1
   27b60:	neg	w3, w5
   27b64:	asr	x4, x4, #6
   27b68:	and	x1, x3, #0x3f
   27b6c:	add	x26, x4, #0x1
   27b70:	adds	x1, x1, x5
   27b74:	mov	w0, w5
   27b78:	add	x19, x1, #0x3f
   27b7c:	csel	x19, x19, x1, mi  // mi = first
   27b80:	ands	w3, w3, #0x3f
   27b84:	asr	x19, x19, #6
   27b88:	b.eq	283bc <mpfr_sub1@@Base+0x924>  // b.none
   27b8c:	add	x0, x4, #0x2
   27b90:	str	x0, [x29, #136]
   27b94:	lsl	x1, x0, #3
   27b98:	cmp	x1, #0x4, lsl #12
   27b9c:	b.hi	284dc <mpfr_sub1@@Base+0xa44>  // b.pmore
   27ba0:	add	x1, x1, #0xf
   27ba4:	and	x1, x1, #0xfffffffffffffff0
   27ba8:	sub	sp, sp, x1
   27bac:	mov	x22, sp
   27bb0:	ldr	x1, [x28, #24]
   27bb4:	mov	x2, x26
   27bb8:	add	x0, x22, #0x8
   27bbc:	str	x6, [x29, #120]
   27bc0:	bl	bce0 <__gmpn_rshift@plt>
   27bc4:	str	x0, [x22]
   27bc8:	ldr	x6, [x29, #120]
   27bcc:	ldr	x5, [x29, #144]
   27bd0:	mov	w0, w5
   27bd4:	ldr	x28, [x23]
   27bd8:	sub	w3, w6, w0
   27bdc:	ands	w3, w3, #0x3f
   27be0:	sub	x28, x28, #0x1
   27be4:	asr	x28, x28, #6
   27be8:	add	x4, x28, #0x1
   27bec:	b.eq	28418 <mpfr_sub1@@Base+0x980>  // b.none
   27bf0:	add	x28, x28, #0x2
   27bf4:	lsl	x1, x28, #3
   27bf8:	cmp	x1, #0x4, lsl #12
   27bfc:	b.hi	284bc <mpfr_sub1@@Base+0xa24>  // b.pmore
   27c00:	add	x1, x1, #0xf
   27c04:	and	x1, x1, #0xfffffffffffffff0
   27c08:	sub	sp, sp, x1
   27c0c:	mov	x26, sp
   27c10:	ldr	x1, [x23, #24]
   27c14:	mov	x2, x4
   27c18:	add	x0, x26, #0x8
   27c1c:	str	x6, [x29, #120]
   27c20:	bl	bce0 <__gmpn_rshift@plt>
   27c24:	str	x0, [x26]
   27c28:	ldr	x6, [x29, #120]
   27c2c:	ldr	x5, [x29, #144]
   27c30:	cmp	x5, x6
   27c34:	b.ge	27ebc <mpfr_sub1@@Base+0x424>  // b.tcont
   27c38:	subs	x6, x6, x5
   27c3c:	add	x5, x6, #0x3f
   27c40:	csel	x5, x5, x6, mi  // mi = first
   27c44:	neg	x23, x5, asr #6
   27c48:	ldr	x0, [x29, #136]
   27c4c:	add	x4, x20, x19
   27c50:	cmp	x4, x0
   27c54:	b.gt	28464 <mpfr_sub1@@Base+0x9cc>
   27c58:	sub	x1, x0, x4
   27c5c:	add	x1, x22, x1, lsl #3
   27c60:	cmp	x1, x27
   27c64:	b.eq	27c7c <mpfr_sub1@@Base+0x1e4>  // b.none
   27c68:	lsl	x2, x20, #3
   27c6c:	mov	x0, x27
   27c70:	str	x4, [x29, #120]
   27c74:	bl	ba10 <memcpy@plt>
   27c78:	ldr	x4, [x29, #120]
   27c7c:	add	x19, x23, x20
   27c80:	cmp	x19, #0x0
   27c84:	b.le	27c9c <mpfr_sub1@@Base+0x204>
   27c88:	tbnz	x23, #63, 27ef8 <mpfr_sub1@@Base+0x460>
   27c8c:	cmp	x19, x28
   27c90:	b.le	280c4 <mpfr_sub1@@Base+0x62c>
   27c94:	cmp	x23, x28
   27c98:	b.lt	27ff8 <mpfr_sub1@@Base+0x560>  // b.tstop
   27c9c:	ldr	w0, [x29, #128]
   27ca0:	lsl	w1, w20, #6
   27ca4:	ldr	x2, [x27]
   27ca8:	sub	w23, w1, w0
   27cac:	mov	x6, #0xffffffffffffffff    	// #-1
   27cb0:	cmp	w24, #0x5
   27cb4:	lsl	x0, x6, x23
   27cb8:	and	x9, x2, x0
   27cbc:	str	x9, [x27]
   27cc0:	bic	x0, x2, x0
   27cc4:	b.eq	28094 <mpfr_sub1@@Base+0x5fc>  // b.none
   27cc8:	cbnz	w24, 27ed4 <mpfr_sub1@@Base+0x43c>
   27ccc:	cbz	w23, 27fc8 <mpfr_sub1@@Base+0x530>
   27cd0:	sub	w2, w23, #0x1
   27cd4:	mov	x1, #0x1                   	// #1
   27cd8:	lsl	x1, x1, x2
   27cdc:	cmp	x1, x0
   27ce0:	b.cc	27dd8 <mpfr_sub1@@Base+0x340>  // b.lo, b.ul, b.last
   27ce4:	cmp	x0, #0x0
   27ce8:	ccmp	x1, x0, #0x0, ne  // ne = any
   27cec:	b.hi	27ef0 <mpfr_sub1@@Base+0x458>  // b.pmore
   27cf0:	ldr	x1, [x29, #136]
   27cf4:	sub	x3, x1, x4
   27cf8:	sub	x1, x28, x19
   27cfc:	cmp	x3, #0x0
   27d00:	cset	w2, gt
   27d04:	cmp	x1, #0x0
   27d08:	cset	w4, gt
   27d0c:	orr	w2, w2, w4
   27d10:	cbz	x0, 27fe8 <mpfr_sub1@@Base+0x550>
   27d14:	cbz	w2, 288d8 <mpfr_sub1@@Base+0xe40>
   27d18:	mov	w0, w23
   27d1c:	mov	w2, #0x2                   	// #2
   27d20:	mov	w6, #0x0                   	// #0
   27d24:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   27d28:	cmp	x3, #0x0
   27d2c:	mov	x4, #0x0                   	// #0
   27d30:	b.le	27d3c <mpfr_sub1@@Base+0x2a4>
   27d34:	sub	x3, x3, #0x1
   27d38:	ldr	x4, [x22, x3, lsl #3]
   27d3c:	cmp	x1, #0x0
   27d40:	b.le	28020 <mpfr_sub1@@Base+0x588>
   27d44:	cmp	x1, x28
   27d48:	sub	x1, x1, #0x1
   27d4c:	b.gt	28020 <mpfr_sub1@@Base+0x588>
   27d50:	ldr	x5, [x26, x1, lsl #3]
   27d54:	cbnz	w2, 28028 <mpfr_sub1@@Base+0x590>
   27d58:	cmp	x4, x5
   27d5c:	b.cs	28078 <mpfr_sub1@@Base+0x5e0>  // b.hs, b.nlast
   27d60:	sub	w2, w6, #0x2
   27d64:	cbnz	w0, 27d80 <mpfr_sub1@@Base+0x2e8>
   27d68:	mov	w2, #0xffffffff            	// #-1
   27d6c:	cbnz	w6, 27d80 <mpfr_sub1@@Base+0x2e8>
   27d70:	mov	w2, #0xfffffffe            	// #-2
   27d74:	tbnz	x5, #63, 2809c <mpfr_sub1@@Base+0x604>
   27d78:	add	x4, x4, x10
   27d7c:	nop
   27d80:	cmp	w24, #0x1
   27d84:	b.eq	282b0 <mpfr_sub1@@Base+0x818>  // b.none
   27d88:	cbnz	w24, 27dec <mpfr_sub1@@Base+0x354>
   27d8c:	cmp	x4, x5
   27d90:	ccmn	w2, #0x1, #0x4, ls  // ls = plast
   27d94:	ccmp	w23, #0x0, #0x0, ne  // ne = any
   27d98:	b.gt	27dec <mpfr_sub1@@Base+0x354>
   27d9c:	cmp	x4, x5
   27da0:	b.cc	282b0 <mpfr_sub1@@Base+0x818>  // b.lo, b.ul, b.last
   27da4:	mov	w2, #0xfffffffe            	// #-2
   27da8:	cmp	x3, #0x0
   27dac:	mov	w6, #0x1                   	// #1
   27db0:	ccmp	x1, #0x0, #0x0, le
   27db4:	b.gt	27d28 <mpfr_sub1@@Base+0x290>
   27db8:	cmp	w24, #0x0
   27dbc:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   27dc0:	b.eq	28094 <mpfr_sub1@@Base+0x5fc>  // b.none
   27dc4:	lsr	x0, x9, x23
   27dc8:	tbz	w0, #0, 2855c <mpfr_sub1@@Base+0xac4>
   27dcc:	mov	w24, #0x0                   	// #0
   27dd0:	tbnz	w2, #31, 282b0 <mpfr_sub1@@Base+0x818>
   27dd4:	nop
   27dd8:	mov	x6, #0x1                   	// #1
   27ddc:	lsl	x23, x6, x23
   27de0:	adds	x23, x9, x23
   27de4:	str	x23, [x27]
   27de8:	b.cs	27f88 <mpfr_sub1@@Base+0x4f0>  // b.hs, b.nlast
   27dec:	mov	w19, #0x1                   	// #1
   27df0:	lsl	x0, x20, #3
   27df4:	mov	x23, #0x0                   	// #0
   27df8:	sub	x0, x0, #0x8
   27dfc:	ldr	x1, [x27, x0]
   27e00:	tbz	x1, #63, 284fc <mpfr_sub1@@Base+0xa64>
   27e04:	ldr	x0, [x29, #152]
   27e08:	cbnz	x0, 283b4 <mpfr_sub1@@Base+0x91c>
   27e0c:	ldr	x20, [x29, #144]
   27e10:	cbz	x20, 2836c <mpfr_sub1@@Base+0x8d4>
   27e14:	sub	x20, x20, x23
   27e18:	str	x20, [x29, #144]
   27e1c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   27e20:	mrs	x22, tpidr_el0
   27e24:	cmp	x21, x0
   27e28:	sub	x20, x21, x20
   27e2c:	b.eq	282f4 <mpfr_sub1@@Base+0x85c>  // b.none
   27e30:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   27e34:	ldr	x1, [x0, #2512]
   27e38:	add	x0, x0, #0x9d0
   27e3c:	blr	x1
   27e40:	ldr	x0, [x22, x0]
   27e44:	cmp	x0, x20
   27e48:	b.gt	2832c <mpfr_sub1@@Base+0x894>
   27e4c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   27e50:	ldr	x1, [x0, #2544]
   27e54:	add	x0, x0, #0x9f0
   27e58:	blr	x1
   27e5c:	ldr	x0, [x22, x0]
   27e60:	cmp	x0, x20
   27e64:	b.lt	28298 <mpfr_sub1@@Base+0x800>  // b.tstop
   27e68:	ldr	w0, [x25, #8]
   27e6c:	str	x20, [x25, #16]
   27e70:	mul	w19, w19, w0
   27e74:	cbz	w19, 27e98 <mpfr_sub1@@Base+0x400>
   27e78:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   27e7c:	ldr	x1, [x0, #2576]
   27e80:	add	x0, x0, #0xa10
   27e84:	blr	x1
   27e88:	add	x0, x22, x0
   27e8c:	ldr	w1, [x0]
   27e90:	orr	w1, w1, #0x8
   27e94:	str	w1, [x0]
   27e98:	mov	sp, x29
   27e9c:	mov	w0, w19
   27ea0:	ldp	x19, x20, [sp, #16]
   27ea4:	ldp	x21, x22, [sp, #32]
   27ea8:	ldp	x23, x24, [sp, #48]
   27eac:	ldp	x25, x26, [sp, #64]
   27eb0:	ldp	x27, x28, [sp, #80]
   27eb4:	ldp	x29, x30, [sp], #160
   27eb8:	ret
   27ebc:	sub	x5, x5, x6
   27ec0:	add	x0, x5, #0x7e
   27ec4:	adds	x5, x5, #0x3f
   27ec8:	csel	x5, x0, x5, mi  // mi = first
   27ecc:	asr	x23, x5, #6
   27ed0:	b	27c48 <mpfr_sub1@@Base+0x1b0>
   27ed4:	ldr	w1, [x25, #8]
   27ed8:	add	w1, w24, w1, lsr #31
   27edc:	cmp	w1, #0x3
   27ee0:	b.eq	280e8 <mpfr_sub1@@Base+0x650>  // b.none
   27ee4:	cbz	x0, 27fc8 <mpfr_sub1@@Base+0x530>
   27ee8:	cmp	w24, #0x1
   27eec:	b.ne	27dd8 <mpfr_sub1@@Base+0x340>  // b.any
   27ef0:	mov	w19, #0xffffffff            	// #-1
   27ef4:	b	27df0 <mpfr_sub1@@Base+0x358>
   27ef8:	str	x4, [x29, #120]
   27efc:	cmp	x19, x28
   27f00:	b.le	27f68 <mpfr_sub1@@Base+0x4d0>
   27f04:	sub	x1, x20, x28
   27f08:	mov	x3, x28
   27f0c:	add	x1, x1, x23
   27f10:	mov	x2, x26
   27f14:	add	x1, x27, x1, lsl #3
   27f18:	mov	x0, x1
   27f1c:	bl	be60 <__gmpn_sub_n@plt>
   27f20:	ldr	x4, [x29, #120]
   27f24:	add	x3, x27, x19, lsl #3
   27f28:	ldr	x1, [x27, x19, lsl #3]
   27f2c:	sub	x2, x1, x0
   27f30:	str	x2, [x27, x19, lsl #3]
   27f34:	cmp	x0, x1
   27f38:	b.ls	27c9c <mpfr_sub1@@Base+0x204>  // b.plast
   27f3c:	neg	x0, x23
   27f40:	mov	x1, #0x1                   	// #1
   27f44:	b	27f5c <mpfr_sub1@@Base+0x4c4>
   27f48:	ldr	x2, [x3, x1, lsl #3]
   27f4c:	sub	x5, x2, #0x1
   27f50:	str	x5, [x3, x1, lsl #3]
   27f54:	add	x1, x1, #0x1
   27f58:	cbnz	x2, 27c9c <mpfr_sub1@@Base+0x204>
   27f5c:	cmp	x1, x0
   27f60:	b.ne	27f48 <mpfr_sub1@@Base+0x4b0>  // b.any
   27f64:	b	27c9c <mpfr_sub1@@Base+0x204>
   27f68:	sub	x2, x28, x19
   27f6c:	mov	x3, x19
   27f70:	mov	x1, x27
   27f74:	mov	x0, x27
   27f78:	add	x2, x26, x2, lsl #3
   27f7c:	bl	be60 <__gmpn_sub_n@plt>
   27f80:	ldr	x4, [x29, #120]
   27f84:	b	27f24 <mpfr_sub1@@Base+0x48c>
   27f88:	ldr	x0, [x29, #112]
   27f8c:	mov	x1, x27
   27f90:	add	x2, x27, x0, lsl #3
   27f94:	b	27fa8 <mpfr_sub1@@Base+0x510>
   27f98:	ldr	x0, [x1, #8]
   27f9c:	add	x0, x0, #0x1
   27fa0:	str	x0, [x1, #8]!
   27fa4:	cbnz	x0, 27dec <mpfr_sub1@@Base+0x354>
   27fa8:	cmp	x2, x1
   27fac:	b.ne	27f98 <mpfr_sub1@@Base+0x500>  // b.any
   27fb0:	ldr	x1, [x29, #112]
   27fb4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   27fb8:	mov	x23, #0x1                   	// #1
   27fbc:	mov	w19, w23
   27fc0:	str	x0, [x27, x1, lsl #3]
   27fc4:	b	27e04 <mpfr_sub1@@Base+0x36c>
   27fc8:	ldr	x0, [x29, #136]
   27fcc:	sub	x1, x28, x19
   27fd0:	sub	x3, x0, x4
   27fd4:	cmp	x3, #0x0
   27fd8:	cset	w2, gt
   27fdc:	cmp	x1, #0x0
   27fe0:	cset	w0, gt
   27fe4:	orr	w2, w2, w0
   27fe8:	cbz	w2, 28094 <mpfr_sub1@@Base+0x5fc>
   27fec:	orr	w0, w24, w23
   27ff0:	mov	w2, #0x0                   	// #0
   27ff4:	b	27d20 <mpfr_sub1@@Base+0x288>
   27ff8:	sub	x1, x23, x28
   27ffc:	sub	x3, x28, x23
   28000:	add	x1, x1, x20
   28004:	mov	x2, x26
   28008:	str	x4, [x29, #120]
   2800c:	add	x1, x27, x1, lsl #3
   28010:	mov	x0, x1
   28014:	bl	be60 <__gmpn_sub_n@plt>
   28018:	ldr	x4, [x29, #120]
   2801c:	b	27c9c <mpfr_sub1@@Base+0x204>
   28020:	mov	x5, #0x0                   	// #0
   28024:	cbz	w2, 28078 <mpfr_sub1@@Base+0x5e0>
   28028:	orr	w6, w6, w0
   2802c:	cbnz	w6, 28060 <mpfr_sub1@@Base+0x5c8>
   28030:	tbnz	w2, #31, 27d74 <mpfr_sub1@@Base+0x2dc>
   28034:	tbnz	x5, #63, 2808c <mpfr_sub1@@Base+0x5f4>
   28038:	add	x5, x5, x10
   2803c:	cbz	w2, 27da8 <mpfr_sub1@@Base+0x310>
   28040:	mov	w2, #0x2                   	// #2
   28044:	nop
   28048:	cbnz	w24, 27dd8 <mpfr_sub1@@Base+0x340>
   2804c:	cmp	x4, x5
   28050:	b.hi	286bc <mpfr_sub1@@Base+0xc24>  // b.pmore
   28054:	b.cs	27da8 <mpfr_sub1@@Base+0x310>  // b.hs, b.nlast
   28058:	mov	w19, #0xffffffff            	// #-1
   2805c:	b	27df0 <mpfr_sub1@@Base+0x358>
   28060:	tbnz	w2, #31, 27d80 <mpfr_sub1@@Base+0x2e8>
   28064:	cbz	w2, 27da8 <mpfr_sub1@@Base+0x310>
   28068:	cmp	w24, #0x1
   2806c:	b.ne	28048 <mpfr_sub1@@Base+0x5b0>  // b.any
   28070:	mov	w19, #0xffffffff            	// #-1
   28074:	b	27df0 <mpfr_sub1@@Base+0x358>
   28078:	cmp	x4, x5
   2807c:	cset	w2, hi  // hi = pmore
   28080:	cbnz	w0, 28064 <mpfr_sub1@@Base+0x5cc>
   28084:	cbnz	w6, 28064 <mpfr_sub1@@Base+0x5cc>
   28088:	tbz	x5, #63, 28038 <mpfr_sub1@@Base+0x5a0>
   2808c:	add	x4, x4, x10
   28090:	b	2803c <mpfr_sub1@@Base+0x5a4>
   28094:	mov	w19, #0x0                   	// #0
   28098:	b	27df0 <mpfr_sub1@@Base+0x358>
   2809c:	add	x5, x5, x10
   280a0:	b	27d80 <mpfr_sub1@@Base+0x2e8>
   280a4:	add	x0, x28, #0x20
   280a8:	bl	bc40 <mpfr_ubf_zexp2exp@plt>
   280ac:	mov	x21, x0
   280b0:	mov	x1, x23
   280b4:	mov	x0, x28
   280b8:	bl	cb00 <mpfr_ubf_diff_exp@plt>
   280bc:	mov	x6, x0
   280c0:	b	27b38 <mpfr_sub1@@Base+0xa0>
   280c4:	sub	x2, x28, x19
   280c8:	mov	x3, x20
   280cc:	mov	x1, x27
   280d0:	mov	x0, x27
   280d4:	add	x2, x26, x2, lsl #3
   280d8:	str	x4, [x29, #120]
   280dc:	bl	be60 <__gmpn_sub_n@plt>
   280e0:	ldr	x4, [x29, #120]
   280e4:	b	27c9c <mpfr_sub1@@Base+0x204>
   280e8:	cbnz	x0, 2850c <mpfr_sub1@@Base+0xa74>
   280ec:	ldr	x0, [x29, #136]
   280f0:	sub	x1, x28, x19
   280f4:	mov	w24, #0x1                   	// #1
   280f8:	sub	x3, x0, x4
   280fc:	cmp	x3, #0x0
   28100:	cset	w2, gt
   28104:	cmp	x1, #0x0
   28108:	cset	w0, gt
   2810c:	orr	w2, w2, w0
   28110:	b	27fe8 <mpfr_sub1@@Base+0x550>
   28114:	cmp	w24, #0x3
   28118:	mov	w19, w0
   2811c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   28120:	mov	w0, #0x1                   	// #1
   28124:	cneg	w0, w0, eq  // eq = none
   28128:	str	w0, [x25, #8]
   2812c:	str	x1, [x25, #16]
   28130:	b	27e98 <mpfr_sub1@@Base+0x400>
   28134:	cmp	w24, #0x5
   28138:	b.eq	28748 <mpfr_sub1@@Base+0xcb0>  // b.none
   2813c:	ldr	x1, [x29, #128]
   28140:	sub	x6, x4, #0x1
   28144:	ldr	x9, [x28, #24]
   28148:	sub	x0, x1, #0x1
   2814c:	str	x21, [x25, #16]
   28150:	cmp	x1, x4
   28154:	asr	x6, x6, #6
   28158:	asr	x4, x0, #6
   2815c:	ldr	x21, [x25, #24]
   28160:	b.ge	285a4 <mpfr_sub1@@Base+0xb0c>  // b.tcont
   28164:	sub	x8, x6, x4
   28168:	mov	x3, x1
   2816c:	neg	w0, w1
   28170:	add	x2, x4, #0x1
   28174:	ands	w0, w0, #0x3f
   28178:	add	x1, x9, x8, lsl #3
   2817c:	mov	w28, w3
   28180:	b.eq	28830 <mpfr_sub1@@Base+0xd98>  // b.none
   28184:	ldr	x3, [x9, x8, lsl #3]
   28188:	sub	w5, w0, #0x1
   2818c:	mov	x0, #0x1                   	// #1
   28190:	cmp	w24, #0x0
   28194:	lsl	x0, x0, x5
   28198:	and	x10, x3, x0
   2819c:	sub	x0, x0, #0x1
   281a0:	ccmp	x10, #0x0, #0x4, ne  // ne = any
   281a4:	and	x0, x0, x3
   281a8:	b.ne	281d8 <mpfr_sub1@@Base+0x740>  // b.any
   281ac:	cmp	x8, #0x0
   281b0:	mov	x3, x8
   281b4:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   281b8:	b.ne	281d8 <mpfr_sub1@@Base+0x740>  // b.any
   281bc:	mvn	x7, x8
   281c0:	add	x7, x1, x7, lsl #3
   281c4:	nop
   281c8:	ldr	x0, [x7, x3, lsl #3]
   281cc:	subs	x3, x3, #0x1
   281d0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   281d4:	b.eq	281c8 <mpfr_sub1@@Base+0x730>  // b.none
   281d8:	mov	x26, #0x2                   	// #2
   281dc:	lsl	x26, x26, x5
   281e0:	cbnz	w24, 28534 <mpfr_sub1@@Base+0xa9c>
   281e4:	cbz	x10, 286ac <mpfr_sub1@@Base+0xc14>
   281e8:	ldr	w19, [x25, #8]
   281ec:	ldr	x3, [x9, x8, lsl #3]
   281f0:	cbz	x0, 2856c <mpfr_sub1@@Base+0xad4>
   281f4:	mov	w7, w19
   281f8:	adds	x3, x26, x3
   281fc:	str	x3, [x21]
   28200:	cset	x0, cs  // cs = hs, nlast
   28204:	b.cc	286cc <mpfr_sub1@@Base+0xc34>  // b.lo, b.ul, b.last
   28208:	mov	x0, #0x1                   	// #1
   2820c:	b	28228 <mpfr_sub1@@Base+0x790>
   28210:	ldr	x3, [x1, x0, lsl #3]
   28214:	add	x5, x0, #0x1
   28218:	add	x3, x3, #0x1
   2821c:	str	x3, [x21, x0, lsl #3]
   28220:	cbnz	x3, 28764 <mpfr_sub1@@Base+0xccc>
   28224:	mov	x0, x5
   28228:	cmp	x2, x0
   2822c:	b.gt	28210 <mpfr_sub1@@Base+0x778>
   28230:	add	x2, x21, x2, lsl #3
   28234:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   28238:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   2823c:	stur	x0, [x2, #-8]
   28240:	ldr	x0, [x25, #16]
   28244:	cmp	x0, x1
   28248:	b.eq	28258 <mpfr_sub1@@Base+0x7c0>  // b.none
   2824c:	add	x0, x0, #0x1
   28250:	str	x0, [x25, #16]
   28254:	nop
   28258:	ldr	x3, [x21]
   2825c:	neg	x26, x26
   28260:	and	x3, x26, x3
   28264:	str	x3, [x21]
   28268:	cbz	w19, 285e0 <mpfr_sub1@@Base+0xb48>
   2826c:	cmp	w19, w7, lsl #1
   28270:	b.eq	28624 <mpfr_sub1@@Base+0xb8c>  // b.none
   28274:	mrs	x22, tpidr_el0
   28278:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2827c:	ldr	x1, [x0, #2544]
   28280:	add	x0, x0, #0x9f0
   28284:	blr	x1
   28288:	ldr	x1, [x25, #16]
   2828c:	ldr	x0, [x22, x0]
   28290:	cmp	x1, x0
   28294:	b.le	27e78 <mpfr_sub1@@Base+0x3e0>
   28298:	ldr	w2, [x25, #8]
   2829c:	mov	w1, w24
   282a0:	mov	x0, x25
   282a4:	bl	bf40 <mpfr_overflow@plt>
   282a8:	mov	w19, w0
   282ac:	b	27e98 <mpfr_sub1@@Base+0x400>
   282b0:	mov	x0, #0x1                   	// #1
   282b4:	lsl	x23, x0, x23
   282b8:	subs	x0, x9, x23
   282bc:	str	x0, [x27]
   282c0:	b.cs	282e8 <mpfr_sub1@@Base+0x850>  // b.hs, b.nlast
   282c4:	ldr	x0, [x29, #112]
   282c8:	add	x22, x27, x0, lsl #3
   282cc:	b	282e0 <mpfr_sub1@@Base+0x848>
   282d0:	ldr	x0, [x27, #8]
   282d4:	sub	x1, x0, #0x1
   282d8:	str	x1, [x27, #8]!
   282dc:	cbnz	x0, 282e8 <mpfr_sub1@@Base+0x850>
   282e0:	cmp	x22, x27
   282e4:	b.ne	282d0 <mpfr_sub1@@Base+0x838>  // b.any
   282e8:	mov	x23, #0x0                   	// #0
   282ec:	mov	w19, #0xffffffff            	// #-1
   282f0:	b	27e04 <mpfr_sub1@@Base+0x36c>
   282f4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   282f8:	ldr	x1, [x0, #2544]
   282fc:	add	x0, x0, #0x9f0
   28300:	blr	x1
   28304:	ldr	x0, [x22, x0]
   28308:	cmp	x0, x20
   2830c:	b.ge	28814 <mpfr_sub1@@Base+0xd7c>  // b.tcont
   28310:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   28314:	ldr	x1, [x0, #2512]
   28318:	add	x0, x0, #0x9d0
   2831c:	blr	x1
   28320:	ldr	x0, [x22, x0]
   28324:	cmp	x20, x0
   28328:	b.ge	28298 <mpfr_sub1@@Base+0x800>  // b.tcont
   2832c:	cbnz	w24, 28354 <mpfr_sub1@@Base+0x8bc>
   28330:	sub	x0, x0, #0x1
   28334:	cmp	x0, x20
   28338:	b.gt	28918 <mpfr_sub1@@Base+0xe80>
   2833c:	cmn	w19, #0x1
   28340:	b.eq	28354 <mpfr_sub1@@Base+0x8bc>  // b.none
   28344:	mov	x0, x25
   28348:	bl	bf00 <mpfr_powerof2_raw@plt>
   2834c:	cmp	w0, #0x0
   28350:	cset	w24, ne  // ne = any
   28354:	ldr	w2, [x25, #8]
   28358:	mov	w1, w24
   2835c:	mov	x0, x25
   28360:	bl	c3c0 <mpfr_underflow@plt>
   28364:	mov	w19, w0
   28368:	b	27e98 <mpfr_sub1@@Base+0x400>
   2836c:	mrs	x22, tpidr_el0
   28370:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   28374:	ldr	x1, [x0, #2544]
   28378:	add	x0, x0, #0x9f0
   2837c:	blr	x1
   28380:	ldr	x0, [x22, x0]
   28384:	sub	x0, x0, x23
   28388:	cmp	x0, x21
   2838c:	b.lt	28298 <mpfr_sub1@@Base+0x800>  // b.tstop
   28390:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   28394:	ldr	x1, [x0, #2512]
   28398:	add	x0, x0, #0x9d0
   2839c:	blr	x1
   283a0:	add	x20, x23, x21
   283a4:	ldr	x0, [x22, x0]
   283a8:	cmp	x0, x20
   283ac:	b.le	27e68 <mpfr_sub1@@Base+0x3d0>
   283b0:	b	2832c <mpfr_sub1@@Base+0x894>
   283b4:	bl	c410 <mpfr_tmp_free@plt>
   283b8:	b	27e0c <mpfr_sub1@@Base+0x374>
   283bc:	ldr	x22, [x28, #24]
   283c0:	str	x26, [x29, #136]
   283c4:	cmp	x27, x22
   283c8:	b.ne	27bd4 <mpfr_sub1@@Base+0x13c>  // b.any
   283cc:	lsl	x28, x26, #3
   283d0:	cmp	x28, #0x4, lsl #12
   283d4:	b.hi	288e4 <mpfr_sub1@@Base+0xe4c>  // b.pmore
   283d8:	add	x0, x28, #0xf
   283dc:	and	x0, x0, #0xfffffffffffffff0
   283e0:	sub	sp, sp, x0
   283e4:	mov	x22, sp
   283e8:	cmp	x22, x27
   283ec:	b.eq	28888 <mpfr_sub1@@Base+0xdf0>  // b.none
   283f0:	mov	x2, x28
   283f4:	mov	x1, x27
   283f8:	mov	x0, x22
   283fc:	str	x6, [x29, #120]
   28400:	bl	ba10 <memcpy@plt>
   28404:	str	x26, [x29, #136]
   28408:	ldr	x5, [x29, #144]
   2840c:	ldr	x6, [x29, #120]
   28410:	mov	w0, w5
   28414:	b	27bd4 <mpfr_sub1@@Base+0x13c>
   28418:	ldr	x26, [x23, #24]
   2841c:	mov	x28, x4
   28420:	cmp	x27, x26
   28424:	b.ne	27c30 <mpfr_sub1@@Base+0x198>  // b.any
   28428:	lsl	x2, x4, #3
   2842c:	cmp	x2, #0x4, lsl #12
   28430:	b.hi	28898 <mpfr_sub1@@Base+0xe00>  // b.pmore
   28434:	add	x0, x2, #0xf
   28438:	and	x0, x0, #0xfffffffffffffff0
   2843c:	sub	sp, sp, x0
   28440:	mov	x26, sp
   28444:	mov	x28, x4
   28448:	mov	x1, x27
   2844c:	mov	x0, x26
   28450:	str	x6, [x29, #120]
   28454:	bl	ba10 <memcpy@plt>
   28458:	ldr	x6, [x29, #120]
   2845c:	ldr	x5, [x29, #144]
   28460:	b	27c30 <mpfr_sub1@@Base+0x198>
   28464:	cmp	x19, x0
   28468:	b.ge	28518 <mpfr_sub1@@Base+0xa80>  // b.tcont
   2846c:	sub	x2, x4, x0
   28470:	mov	w1, #0x0                   	// #0
   28474:	mov	x0, x27
   28478:	str	x4, [x29, #104]
   2847c:	lsl	x2, x2, #3
   28480:	str	x2, [x29, #120]
   28484:	bl	c110 <memset@plt>
   28488:	ldr	x2, [x29, #120]
   2848c:	ldr	x4, [x29, #104]
   28490:	add	x0, x27, x2
   28494:	cmp	x0, x22
   28498:	b.eq	27c7c <mpfr_sub1@@Base+0x1e4>  // b.none
   2849c:	ldr	x1, [x29, #136]
   284a0:	str	x4, [x29, #120]
   284a4:	sub	x2, x1, x19
   284a8:	mov	x1, x22
   284ac:	lsl	x2, x2, #3
   284b0:	bl	ba10 <memcpy@plt>
   284b4:	ldr	x4, [x29, #120]
   284b8:	b	27c7c <mpfr_sub1@@Base+0x1e4>
   284bc:	add	x0, x29, #0x98
   284c0:	stp	x4, x6, [x29, #96]
   284c4:	str	w3, [x29, #120]
   284c8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   284cc:	ldr	w3, [x29, #120]
   284d0:	mov	x26, x0
   284d4:	ldp	x4, x6, [x29, #96]
   284d8:	b	27c10 <mpfr_sub1@@Base+0x178>
   284dc:	add	x0, x29, #0x98
   284e0:	str	x6, [x29, #104]
   284e4:	str	w3, [x29, #120]
   284e8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   284ec:	ldr	w3, [x29, #120]
   284f0:	mov	x22, x0
   284f4:	ldr	x6, [x29, #104]
   284f8:	b	27bb0 <mpfr_sub1@@Base+0x118>
   284fc:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   28500:	mov	x23, #0x1                   	// #1
   28504:	str	x1, [x27, x0]
   28508:	b	27e04 <mpfr_sub1@@Base+0x36c>
   2850c:	mov	w19, w6
   28510:	mov	w24, #0x1                   	// #1
   28514:	b	27df0 <mpfr_sub1@@Base+0x358>
   28518:	lsl	x2, x20, #3
   2851c:	mov	x0, x27
   28520:	mov	w1, #0x0                   	// #0
   28524:	str	x4, [x29, #120]
   28528:	bl	c110 <memset@plt>
   2852c:	ldr	x4, [x29, #120]
   28530:	b	27c7c <mpfr_sub1@@Base+0x1e4>
   28534:	orr	x0, x0, x10
   28538:	cmp	w24, #0x1
   2853c:	b.eq	286ac <mpfr_sub1@@Base+0xc14>  // b.none
   28540:	ldr	w19, [x25, #8]
   28544:	add	w3, w24, w19, lsr #31
   28548:	cmp	w3, #0x3
   2854c:	b.eq	286ac <mpfr_sub1@@Base+0xc14>  // b.none
   28550:	cbz	x0, 28878 <mpfr_sub1@@Base+0xde0>
   28554:	ldr	x3, [x9, x8, lsl #3]
   28558:	b	281f4 <mpfr_sub1@@Base+0x75c>
   2855c:	cmp	w2, #0x0
   28560:	mov	w24, #0x0                   	// #0
   28564:	csinv	w19, w6, wzr, le
   28568:	b	27df0 <mpfr_sub1@@Base+0x358>
   2856c:	tst	x26, x3
   28570:	b.ne	2890c <mpfr_sub1@@Base+0xe74>  // b.any
   28574:	neg	w19, w19, lsl #1
   28578:	cmp	x21, x1
   2857c:	b.eq	2858c <mpfr_sub1@@Base+0xaf4>  // b.none
   28580:	lsl	x2, x2, #3
   28584:	mov	x0, x21
   28588:	bl	ba10 <memcpy@plt>
   2858c:	ldr	x0, [x21]
   28590:	neg	x26, x26
   28594:	ldr	w7, [x25, #8]
   28598:	and	x0, x0, x26
   2859c:	str	x0, [x21]
   285a0:	b	28268 <mpfr_sub1@@Base+0x7d0>
   285a4:	sub	x4, x4, x6
   285a8:	add	x2, x6, #0x1
   285ac:	lsl	x19, x4, #3
   285b0:	add	x0, x21, x19
   285b4:	cmp	x0, x9
   285b8:	b.eq	285c8 <mpfr_sub1@@Base+0xb30>  // b.none
   285bc:	lsl	x2, x2, #3
   285c0:	mov	x1, x9
   285c4:	bl	ba10 <memcpy@plt>
   285c8:	mov	x2, x19
   285cc:	mov	x0, x21
   285d0:	mov	w1, #0x0                   	// #0
   285d4:	bl	c110 <memset@plt>
   285d8:	ldr	w7, [x25, #8]
   285dc:	nop
   285e0:	cmp	w24, #0x1
   285e4:	b.eq	28620 <mpfr_sub1@@Base+0xb88>  // b.none
   285e8:	add	w0, w24, w7, lsr #31
   285ec:	cmp	w0, #0x3
   285f0:	b.eq	28620 <mpfr_sub1@@Base+0xb88>  // b.none
   285f4:	ldr	x1, [x25, #16]
   285f8:	mov	w19, w7
   285fc:	mrs	x22, tpidr_el0
   28600:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   28604:	ldr	x2, [x0, #2544]
   28608:	add	x0, x0, #0x9f0
   2860c:	blr	x2
   28610:	ldr	x0, [x22, x0]
   28614:	cmp	x0, x1
   28618:	b.ge	27e74 <mpfr_sub1@@Base+0x3dc>  // b.tcont
   2861c:	b	28298 <mpfr_sub1@@Base+0x800>
   28620:	ldr	w28, [x29, #128]
   28624:	lsl	w0, w20, #6
   28628:	mov	x1, #0x1                   	// #1
   2862c:	ldr	x2, [x27]
   28630:	sub	w28, w0, w28
   28634:	lsl	x28, x1, x28
   28638:	sub	x0, x2, x28
   2863c:	str	x0, [x27]
   28640:	cmp	x28, x2
   28644:	b.ls	28670 <mpfr_sub1@@Base+0xbd8>  // b.plast
   28648:	ldr	x0, [x29, #112]
   2864c:	add	x22, x27, x0, lsl #3
   28650:	mov	x0, x27
   28654:	b	28668 <mpfr_sub1@@Base+0xbd0>
   28658:	ldr	x1, [x0, #8]
   2865c:	sub	x2, x1, #0x1
   28660:	str	x2, [x0, #8]!
   28664:	cbnz	x1, 28670 <mpfr_sub1@@Base+0xbd8>
   28668:	cmp	x0, x22
   2866c:	b.ne	28658 <mpfr_sub1@@Base+0xbc0>  // b.any
   28670:	lsl	x0, x20, #3
   28674:	sub	x0, x0, #0x8
   28678:	ldr	x1, [x25, #16]
   2867c:	ldr	x2, [x27, x0]
   28680:	tbz	x2, #63, 2868c <mpfr_sub1@@Base+0xbf4>
   28684:	neg	w19, w7
   28688:	b	285fc <mpfr_sub1@@Base+0xb64>
   2868c:	sub	x1, x1, #0x1
   28690:	str	x1, [x25, #16]
   28694:	neg	w19, w7
   28698:	ldr	x1, [x27, x0]
   2869c:	orr	x1, x1, #0x8000000000000000
   286a0:	str	x1, [x27, x0]
   286a4:	ldr	x1, [x25, #16]
   286a8:	b	285fc <mpfr_sub1@@Base+0xb64>
   286ac:	cbz	x0, 28878 <mpfr_sub1@@Base+0xde0>
   286b0:	ldr	w19, [x25, #8]
   286b4:	neg	w19, w19
   286b8:	b	28578 <mpfr_sub1@@Base+0xae0>
   286bc:	cmp	w2, #0x2
   286c0:	b.eq	27dd8 <mpfr_sub1@@Base+0x340>  // b.none
   286c4:	mov	w19, #0xffffffff            	// #-1
   286c8:	b	27df0 <mpfr_sub1@@Base+0x358>
   286cc:	cmp	x21, x1
   286d0:	b.eq	2825c <mpfr_sub1@@Base+0x7c4>  // b.none
   286d4:	cmp	x2, #0x1
   286d8:	b.eq	2825c <mpfr_sub1@@Base+0x7c4>  // b.none
   286dc:	sub	x8, x6, x4
   286e0:	mov	x3, #0x1                   	// #1
   286e4:	add	x8, x8, #0x3
   286e8:	sub	x5, x3, x4
   286ec:	add	x6, x5, x6
   286f0:	add	x5, x21, #0x8
   286f4:	add	x8, x9, x8, lsl #3
   286f8:	add	x10, x21, #0x18
   286fc:	add	x9, x9, x6, lsl #3
   28700:	cmp	x5, x8
   28704:	ccmp	x9, x10, #0x2, cc  // cc = lo, ul, last
   28708:	sub	x6, x4, #0x1
   2870c:	ccmp	x6, #0x9, #0x0, cs  // cs = hs, nlast
   28710:	b.ls	288bc <mpfr_sub1@@Base+0xe24>  // b.plast
   28714:	lsr	x2, x4, #1
   28718:	lsl	x2, x2, #4
   2871c:	nop
   28720:	ldr	q0, [x9, x0]
   28724:	str	q0, [x5, x0]
   28728:	add	x0, x0, #0x10
   2872c:	cmp	x2, x0
   28730:	b.ne	28720 <mpfr_sub1@@Base+0xc88>  // b.any
   28734:	orr	x0, x4, #0x1
   28738:	tbz	w4, #0, 28258 <mpfr_sub1@@Base+0x7c0>
   2873c:	ldr	x1, [x1, x0, lsl #3]
   28740:	str	x1, [x21, x0, lsl #3]
   28744:	b	28258 <mpfr_sub1@@Base+0x7c0>
   28748:	ldr	w3, [x25, #8]
   2874c:	mov	x1, x28
   28750:	mov	x0, x25
   28754:	mov	w2, #0x1                   	// #1
   28758:	bl	c6a0 <mpfr_set4@plt>
   2875c:	mov	w19, w0
   28760:	b	27e98 <mpfr_sub1@@Base+0x400>
   28764:	cmp	x21, x1
   28768:	b.eq	28258 <mpfr_sub1@@Base+0x7c0>  // b.none
   2876c:	cmp	x0, x4
   28770:	b.ge	28258 <mpfr_sub1@@Base+0x7c0>  // b.tcont
   28774:	add	x0, x0, #0x3
   28778:	sub	x8, x4, x5
   2877c:	lsl	x0, x0, #3
   28780:	sub	x3, x0, #0x10
   28784:	add	x9, x21, x0
   28788:	add	x6, x1, x3
   2878c:	add	x0, x1, x0
   28790:	cmp	x6, x9
   28794:	add	x3, x21, x3
   28798:	ccmp	x3, x0, #0x2, cc  // cc = lo, ul, last
   2879c:	cset	w9, cs  // cs = hs, nlast
   287a0:	cmp	x8, #0x9
   287a4:	ccmp	x5, x4, #0x0, hi  // hi = pmore
   287a8:	cset	w0, le
   287ac:	tst	w9, w0
   287b0:	b.eq	287fc <mpfr_sub1@@Base+0xd64>  // b.none
   287b4:	sub	x2, x2, x5
   287b8:	cmp	x5, x4
   287bc:	csinc	x4, x2, xzr, le
   287c0:	mov	x0, #0x0                   	// #0
   287c4:	lsr	x2, x4, #1
   287c8:	lsl	x2, x2, #4
   287cc:	ldr	q0, [x6, x0]
   287d0:	str	q0, [x3, x0]
   287d4:	add	x0, x0, #0x10
   287d8:	cmp	x2, x0
   287dc:	b.ne	287cc <mpfr_sub1@@Base+0xd34>  // b.any
   287e0:	and	x0, x4, #0xfffffffffffffffe
   287e4:	add	x5, x0, x5
   287e8:	cmp	x0, x4
   287ec:	b.eq	28258 <mpfr_sub1@@Base+0x7c0>  // b.none
   287f0:	ldr	x0, [x1, x5, lsl #3]
   287f4:	str	x0, [x21, x5, lsl #3]
   287f8:	b	28258 <mpfr_sub1@@Base+0x7c0>
   287fc:	ldr	x0, [x1, x5, lsl #3]
   28800:	str	x0, [x21, x5, lsl #3]
   28804:	cmp	x4, x5
   28808:	add	x5, x5, #0x1
   2880c:	b.gt	287fc <mpfr_sub1@@Base+0xd64>
   28810:	b	28258 <mpfr_sub1@@Base+0x7c0>
   28814:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   28818:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2881c:	add	x2, x2, #0xcf0
   28820:	add	x0, x0, #0xd28
   28824:	mov	w1, #0x298                 	// #664
   28828:	bl	cb40 <mpfr_assert_fail@plt>
   2882c:	b	28310 <mpfr_sub1@@Base+0x878>
   28830:	ldur	x0, [x1, #-8]
   28834:	cmp	w24, #0x0
   28838:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   2883c:	and	x10, x0, #0x8000000000000000
   28840:	and	x5, x0, #0x7fffffffffffffff
   28844:	b.lt	28880 <mpfr_sub1@@Base+0xde8>  // b.tstop
   28848:	subs	x3, x8, #0x1
   2884c:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   28850:	b.ne	28900 <mpfr_sub1@@Base+0xe68>  // b.any
   28854:	mvn	x5, x8
   28858:	add	x5, x1, x5, lsl #3
   2885c:	ldr	x0, [x5, x3, lsl #3]
   28860:	subs	x3, x3, #0x1
   28864:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   28868:	b.eq	2885c <mpfr_sub1@@Base+0xdc4>  // b.none
   2886c:	mov	x26, #0x1                   	// #1
   28870:	cbz	w24, 281e4 <mpfr_sub1@@Base+0x74c>
   28874:	b	28534 <mpfr_sub1@@Base+0xa9c>
   28878:	mov	w19, #0x0                   	// #0
   2887c:	b	28578 <mpfr_sub1@@Base+0xae0>
   28880:	mov	x26, #0x1                   	// #1
   28884:	b	28538 <mpfr_sub1@@Base+0xaa0>
   28888:	ldr	x5, [x29, #144]
   2888c:	str	x26, [x29, #136]
   28890:	mov	w0, w5
   28894:	b	27bd4 <mpfr_sub1@@Base+0x13c>
   28898:	mov	x1, x2
   2889c:	add	x0, x29, #0x98
   288a0:	stp	x4, x6, [x29, #96]
   288a4:	str	x2, [x29, #120]
   288a8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   288ac:	mov	x26, x0
   288b0:	ldp	x4, x6, [x29, #96]
   288b4:	ldr	x2, [x29, #120]
   288b8:	b	28444 <mpfr_sub1@@Base+0x9ac>
   288bc:	mov	x0, x3
   288c0:	ldr	x3, [x1, x0, lsl #3]
   288c4:	str	x3, [x21, x0, lsl #3]
   288c8:	add	x0, x0, #0x1
   288cc:	cmp	x2, x0
   288d0:	b.ne	288c0 <mpfr_sub1@@Base+0xe28>  // b.any
   288d4:	b	28258 <mpfr_sub1@@Base+0x7c0>
   288d8:	lsr	x0, x9, x23
   288dc:	tbnz	w0, #0, 27dd8 <mpfr_sub1@@Base+0x340>
   288e0:	b	27ef0 <mpfr_sub1@@Base+0x458>
   288e4:	mov	x1, x28
   288e8:	add	x0, x29, #0x98
   288ec:	str	x6, [x29, #136]
   288f0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   288f4:	mov	x22, x0
   288f8:	ldr	x6, [x29, #136]
   288fc:	b	283e8 <mpfr_sub1@@Base+0x950>
   28900:	mov	x0, x5
   28904:	mov	x26, #0x1                   	// #1
   28908:	b	28870 <mpfr_sub1@@Base+0xdd8>
   2890c:	mov	w7, w19
   28910:	lsl	w19, w19, #1
   28914:	b	281f8 <mpfr_sub1@@Base+0x760>
   28918:	mov	w24, #0x1                   	// #1
   2891c:	b	28354 <mpfr_sub1@@Base+0x8bc>

0000000000028920 <mpfr_sub_ui@@Base>:
   28920:	stp	x29, x30, [sp, #-128]!
   28924:	mov	x6, x1
   28928:	mov	x29, sp
   2892c:	stp	x21, x22, [sp, #32]
   28930:	mov	w21, w3
   28934:	cbz	x2, 28a64 <mpfr_sub_ui@@Base+0x144>
   28938:	ldr	x1, [x1, #16]
   2893c:	stp	x19, x20, [sp, #16]
   28940:	mov	x19, x0
   28944:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   28948:	cmp	x1, x0
   2894c:	b.le	28a7c <mpfr_sub_ui@@Base+0x15c>
   28950:	mrs	x4, tpidr_el0
   28954:	clz	x5, x2
   28958:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2895c:	ldr	x1, [x0, #2576]
   28960:	add	x0, x0, #0xa10
   28964:	blr	x1
   28968:	mov	x8, #0x40                  	// #64
   2896c:	sub	w7, w8, w5
   28970:	add	x22, x4, x0
   28974:	ldr	w20, [x4, x0]
   28978:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2897c:	ldr	x1, [x0, #2512]
   28980:	add	x0, x0, #0x9d0
   28984:	blr	x1
   28988:	mov	x1, x6
   2898c:	sxtw	x7, w7
   28990:	add	x6, sp, #0x58
   28994:	stp	x23, x24, [sp, #48]
   28998:	lsl	x5, x2, x5
   2899c:	stp	x25, x26, [sp, #64]
   289a0:	add	x26, x4, x0
   289a4:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   289a8:	ldr	x23, [x4, x0]
   289ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   289b0:	ldr	x3, [x0, #2544]
   289b4:	add	x0, x0, #0x9f0
   289b8:	blr	x3
   289bc:	add	x25, x4, x0
   289c0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   289c4:	mov	w11, #0x1                   	// #1
   289c8:	add	x2, sp, #0x60
   289cc:	mov	w3, w21
   289d0:	str	x10, [x26]
   289d4:	stp	x5, x8, [sp, #88]
   289d8:	str	w11, [sp, #104]
   289dc:	str	x7, [sp, #112]
   289e0:	str	x6, [sp, #120]
   289e4:	ldr	x24, [x4, x0]
   289e8:	mov	x0, x19
   289ec:	str	x9, [x25]
   289f0:	bl	bb70 <mpfr_sub@plt>
   289f4:	ldr	w1, [x22]
   289f8:	ldr	x2, [x19, #16]
   289fc:	orr	w1, w20, w1
   28a00:	str	x24, [x25]
   28a04:	str	w1, [x22]
   28a08:	cmp	x24, x2
   28a0c:	str	x23, [x26]
   28a10:	ccmp	x23, x2, #0x0, ge  // ge = tcont
   28a14:	b.le	28a40 <mpfr_sub_ui@@Base+0x120>
   28a18:	mov	w1, w0
   28a1c:	mov	w2, w21
   28a20:	mov	x0, x19
   28a24:	bl	cb30 <mpfr_check_range@plt>
   28a28:	ldp	x19, x20, [sp, #16]
   28a2c:	ldp	x23, x24, [sp, #48]
   28a30:	ldp	x25, x26, [sp, #64]
   28a34:	ldp	x21, x22, [sp, #32]
   28a38:	ldp	x29, x30, [sp], #128
   28a3c:	ret
   28a40:	cbz	w0, 28a28 <mpfr_sub_ui@@Base+0x108>
   28a44:	orr	w1, w1, #0x8
   28a48:	ldp	x19, x20, [sp, #16]
   28a4c:	ldp	x23, x24, [sp, #48]
   28a50:	ldp	x25, x26, [sp, #64]
   28a54:	str	w1, [x22]
   28a58:	ldp	x21, x22, [sp, #32]
   28a5c:	ldp	x29, x30, [sp], #128
   28a60:	ret
   28a64:	mov	w2, w3
   28a68:	ldr	w3, [x1, #8]
   28a6c:	bl	c6a0 <mpfr_set4@plt>
   28a70:	ldp	x21, x22, [sp, #32]
   28a74:	ldp	x29, x30, [sp], #128
   28a78:	ret
   28a7c:	mov	x3, #0x2                   	// #2
   28a80:	movk	x3, #0x8000, lsl #48
   28a84:	cmp	x1, x3
   28a88:	b.eq	28aac <mpfr_sub_ui@@Base+0x18c>  // b.none
   28a8c:	cmp	x1, x0
   28a90:	b.ne	28950 <mpfr_sub_ui@@Base+0x30>  // b.any
   28a94:	ldr	w2, [x6, #8]
   28a98:	mov	w0, #0x0                   	// #0
   28a9c:	str	w2, [x19, #8]
   28aa0:	str	x1, [x19, #16]
   28aa4:	ldp	x19, x20, [sp, #16]
   28aa8:	b	28a34 <mpfr_sub_ui@@Base+0x114>
   28aac:	mrs	x2, tpidr_el0
   28ab0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   28ab4:	ldr	x3, [x0, #2576]
   28ab8:	add	x0, x0, #0xa10
   28abc:	blr	x3
   28ac0:	add	x2, x2, x0
   28ac4:	str	x1, [x19, #16]
   28ac8:	mov	w0, #0x0                   	// #0
   28acc:	ldp	x19, x20, [sp, #16]
   28ad0:	ldr	w1, [x2]
   28ad4:	orr	w1, w1, #0x4
   28ad8:	str	w1, [x2]
   28adc:	b	28a34 <mpfr_sub_ui@@Base+0x114>

0000000000028ae0 <mpfr_rint@@Base>:
   28ae0:	stp	x29, x30, [sp, #-144]!
   28ae4:	mov	x29, sp
   28ae8:	stp	x21, x22, [sp, #32]
   28aec:	mov	x21, x0
   28af0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   28af4:	ldr	x22, [x1, #16]
   28af8:	stp	x27, x28, [sp, #80]
   28afc:	cmp	x22, x0
   28b00:	b.le	290d4 <mpfr_rint@@Base+0x5f4>
   28b04:	stp	x23, x24, [sp, #48]
   28b08:	cmp	w2, #0x3
   28b0c:	mov	w23, w2
   28b10:	stp	x25, x26, [sp, #64]
   28b14:	ldr	w25, [x1, #8]
   28b18:	str	w25, [x21, #8]
   28b1c:	b.eq	28b54 <mpfr_rint@@Base+0x74>  // b.none
   28b20:	cmp	w25, #0x0
   28b24:	cset	w24, gt
   28b28:	cmp	w2, #0x2
   28b2c:	b.eq	28b58 <mpfr_rint@@Base+0x78>  // b.none
   28b30:	cmp	w2, #0x1
   28b34:	b.eq	290c0 <mpfr_rint@@Base+0x5e0>  // b.none
   28b38:	cmp	w2, #0x4
   28b3c:	b.eq	29000 <mpfr_rint@@Base+0x520>  // b.none
   28b40:	cmp	x22, #0x0
   28b44:	b.le	29180 <mpfr_rint@@Base+0x6a0>
   28b48:	mov	w24, #0xffffffff            	// #-1
   28b4c:	stp	x19, x20, [sp, #16]
   28b50:	b	28b64 <mpfr_rint@@Base+0x84>
   28b54:	lsr	w24, w25, #31
   28b58:	cmp	x22, #0x0
   28b5c:	b.le	29060 <mpfr_rint@@Base+0x580>
   28b60:	stp	x19, x20, [sp, #16]
   28b64:	sub	x5, x22, #0x1
   28b68:	ldr	x4, [x1]
   28b6c:	ldr	x6, [x21]
   28b70:	sub	x4, x4, #0x1
   28b74:	ldr	x26, [x1, #24]
   28b78:	sub	x19, x6, #0x1
   28b7c:	asr	x4, x4, #6
   28b80:	str	x22, [x21, #16]
   28b84:	add	x27, x4, #0x1
   28b88:	asr	x19, x19, #6
   28b8c:	neg	w6, w6
   28b90:	cmp	x27, x5, asr #6
   28b94:	asr	x1, x5, #6
   28b98:	and	w6, w6, #0x3f
   28b9c:	add	x8, x19, #0x1
   28ba0:	ldr	x7, [x21, #24]
   28ba4:	b.gt	28ca8 <mpfr_rint@@Base+0x1c8>
   28ba8:	mov	x20, #0x0                   	// #0
   28bac:	mov	w28, #0x0                   	// #0
   28bb0:	mov	w3, #0x0                   	// #0
   28bb4:	cmp	x27, x8
   28bb8:	b.le	28cf0 <mpfr_rint@@Base+0x210>
   28bbc:	sub	x19, x4, x19
   28bc0:	add	x20, x26, x19, lsl #3
   28bc4:	cmp	x20, x7
   28bc8:	b.eq	28bf0 <mpfr_rint@@Base+0x110>  // b.none
   28bcc:	lsl	x2, x8, #3
   28bd0:	mov	x0, x7
   28bd4:	mov	x1, x20
   28bd8:	str	x8, [sp, #104]
   28bdc:	str	w6, [sp, #112]
   28be0:	bl	ba10 <memcpy@plt>
   28be4:	ldr	w6, [sp, #112]
   28be8:	mov	x7, x0
   28bec:	ldr	x8, [sp, #104]
   28bf0:	cmn	w24, #0x1
   28bf4:	b.eq	28f28 <mpfr_rint@@Base+0x448>  // b.none
   28bf8:	cbnz	w28, 28e6c <mpfr_rint@@Base+0x38c>
   28bfc:	cbz	w6, 28e48 <mpfr_rint@@Base+0x368>
   28c00:	ldr	x1, [x7]
   28c04:	neg	w0, w6
   28c08:	lsl	x0, x1, x0
   28c0c:	cbz	x0, 2910c <mpfr_rint@@Base+0x62c>
   28c10:	mov	x0, #0xffffffffffffffff    	// #-1
   28c14:	mov	x27, x8
   28c18:	mov	w3, w6
   28c1c:	mov	x19, x7
   28c20:	lsl	x0, x0, x6
   28c24:	mov	w28, #0x1                   	// #1
   28c28:	and	x1, x0, x1
   28c2c:	str	x1, [x7]
   28c30:	cbz	w24, 28e80 <mpfr_rint@@Base+0x3a0>
   28c34:	ldr	x1, [x19]
   28c38:	mov	x24, #0x1                   	// #1
   28c3c:	lsl	x0, x24, x3
   28c40:	adds	x0, x0, x1
   28c44:	str	x0, [x19]
   28c48:	b.cc	28e80 <mpfr_rint@@Base+0x3a0>  // b.lo, b.ul, b.last
   28c4c:	add	x27, x19, x27, lsl #3
   28c50:	add	x4, x19, #0x8
   28c54:	b	28c68 <mpfr_rint@@Base+0x188>
   28c58:	ldr	x1, [x4]
   28c5c:	add	x1, x1, #0x1
   28c60:	str	x1, [x4], #8
   28c64:	cbnz	x1, 29104 <mpfr_rint@@Base+0x624>
   28c68:	cmp	x4, x27
   28c6c:	b.ne	28c58 <mpfr_rint@@Base+0x178>  // b.any
   28c70:	mrs	x1, tpidr_el0
   28c74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   28c78:	ldr	x2, [x0, #2544]
   28c7c:	add	x0, x0, #0x9f0
   28c80:	blr	x2
   28c84:	ldr	x0, [x1, x0]
   28c88:	cmp	x22, x0
   28c8c:	b.eq	29244 <mpfr_rint@@Base+0x764>  // b.none
   28c90:	add	x22, x22, #0x1
   28c94:	str	x22, [x21, #16]
   28c98:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   28c9c:	mov	w24, #0x1                   	// #1
   28ca0:	stur	x0, [x4, #-8]
   28ca4:	b	28e84 <mpfr_rint@@Base+0x3a4>
   28ca8:	and	x0, x22, #0x3f
   28cac:	add	x27, x1, #0x1
   28cb0:	mov	w3, w0
   28cb4:	sub	x20, x4, x1
   28cb8:	cbz	x0, 28cc8 <mpfr_rint@@Base+0x1e8>
   28cbc:	ldr	x1, [x26, x20, lsl #3]
   28cc0:	lsl	x0, x1, x0
   28cc4:	cbnz	x0, 28ecc <mpfr_rint@@Base+0x3ec>
   28cc8:	mov	x1, x20
   28ccc:	b	28cd8 <mpfr_rint@@Base+0x1f8>
   28cd0:	ldr	x5, [x26, x1, lsl #3]
   28cd4:	cbnz	x5, 28ecc <mpfr_rint@@Base+0x3ec>
   28cd8:	cmp	x1, #0x0
   28cdc:	sub	x1, x1, #0x1
   28ce0:	b.gt	28cd0 <mpfr_rint@@Base+0x1f0>
   28ce4:	cmp	x27, x8
   28ce8:	mov	w28, #0x0                   	// #0
   28cec:	b.gt	28bbc <mpfr_rint@@Base+0xdc>
   28cf0:	sub	x8, x8, x27
   28cf4:	cmp	x26, x7
   28cf8:	lsl	x4, x8, #3
   28cfc:	add	x19, x7, x4
   28d00:	b.eq	28d3c <mpfr_rint@@Base+0x25c>  // b.none
   28d04:	add	x1, x26, x20, lsl #3
   28d08:	cmp	x1, x19
   28d0c:	b.eq	28d3c <mpfr_rint@@Base+0x25c>  // b.none
   28d10:	lsl	x2, x27, #3
   28d14:	mov	x0, x19
   28d18:	str	w6, [sp, #104]
   28d1c:	str	w3, [sp, #112]
   28d20:	stp	x8, x4, [sp, #120]
   28d24:	str	x7, [sp, #136]
   28d28:	bl	ba10 <memcpy@plt>
   28d2c:	ldp	x8, x4, [sp, #120]
   28d30:	ldr	w6, [sp, #104]
   28d34:	ldr	w3, [sp, #112]
   28d38:	ldr	x7, [sp, #136]
   28d3c:	mov	w1, #0x1                   	// #1
   28d40:	cbz	w3, 28d50 <mpfr_rint@@Base+0x270>
   28d44:	mov	w0, #0x40                  	// #64
   28d48:	sub	w3, w0, w3
   28d4c:	mov	w1, #0x0                   	// #0
   28d50:	cmp	x8, #0x0
   28d54:	ccmp	w3, w6, #0x0, eq  // eq = none
   28d58:	b.ge	28ed4 <mpfr_rint@@Base+0x3f4>  // b.tcont
   28d5c:	cbnz	w28, 28d7c <mpfr_rint@@Base+0x29c>
   28d60:	ldr	x2, [x7, x8, lsl #3]
   28d64:	mov	x1, #0x1                   	// #1
   28d68:	lsl	x0, x1, x3
   28d6c:	lsl	x1, x1, x6
   28d70:	sub	x0, x1, x0
   28d74:	tst	x0, x2
   28d78:	cset	w28, ne  // ne = any
   28d7c:	cmn	w24, #0x1
   28d80:	b.ne	28fd4 <mpfr_rint@@Base+0x4f4>  // b.any
   28d84:	mov	w1, #0x0                   	// #0
   28d88:	cbnz	w23, 28fc4 <mpfr_rint@@Base+0x4e4>
   28d8c:	ldr	x0, [x7, x8, lsl #3]
   28d90:	lsr	x2, x0, x6
   28d94:	tbnz	w2, #0, 28ef4 <mpfr_rint@@Base+0x414>
   28d98:	cbz	w6, 291e4 <mpfr_rint@@Base+0x704>
   28d9c:	sub	w5, w6, #0x1
   28da0:	mov	x2, #0xffffffffffffffff    	// #-1
   28da4:	lsl	x2, x2, x6
   28da8:	mov	x3, #0x1                   	// #1
   28dac:	bic	x0, x0, x2
   28db0:	lsl	x2, x3, x5
   28db4:	cmp	x0, x2
   28db8:	cset	w24, hi  // hi = pmore
   28dbc:	b.ne	28fd4 <mpfr_rint@@Base+0x4f4>  // b.any
   28dc0:	sub	x0, x20, #0x1
   28dc4:	and	x1, x1, #0xff
   28dc8:	subs	x0, x0, x1
   28dcc:	b.pl	28dd8 <mpfr_rint@@Base+0x2f8>  // b.nfrst
   28dd0:	b	28fd4 <mpfr_rint@@Base+0x4f4>
   28dd4:	b.eq	2923c <mpfr_rint@@Base+0x75c>  // b.none
   28dd8:	ldr	x1, [x26, x0, lsl #3]
   28ddc:	sub	x0, x0, #0x1
   28de0:	cmn	x0, #0x1
   28de4:	cbz	x1, 28dd4 <mpfr_rint@@Base+0x2f4>
   28de8:	mov	w3, w6
   28dec:	mov	w24, #0x1                   	// #1
   28df0:	mov	x0, x7
   28df4:	mov	x2, x4
   28df8:	mov	w1, #0x0                   	// #0
   28dfc:	str	w3, [sp, #104]
   28e00:	str	x8, [sp, #112]
   28e04:	bl	c110 <memset@plt>
   28e08:	ldr	w3, [sp, #104]
   28e0c:	mov	x7, x0
   28e10:	ldr	x8, [sp, #112]
   28e14:	cbnz	w3, 28ff8 <mpfr_rint@@Base+0x518>
   28e18:	cbnz	w28, 28c30 <mpfr_rint@@Base+0x150>
   28e1c:	ldp	x19, x20, [sp, #16]
   28e20:	mov	w28, #0x0                   	// #0
   28e24:	ldp	x23, x24, [sp, #48]
   28e28:	ldp	x25, x26, [sp, #64]
   28e2c:	mov	w0, w28
   28e30:	ldp	x21, x22, [sp, #32]
   28e34:	ldp	x27, x28, [sp, #80]
   28e38:	ldp	x29, x30, [sp], #144
   28e3c:	ret
   28e40:	mov	w24, #0x1                   	// #1
   28e44:	nop
   28e48:	subs	x4, x19, #0x1
   28e4c:	b.pl	28e58 <mpfr_rint@@Base+0x378>  // b.nfrst
   28e50:	b	28e1c <mpfr_rint@@Base+0x33c>
   28e54:	b.eq	29118 <mpfr_rint@@Base+0x638>  // b.none
   28e58:	ldr	x0, [x26, x4, lsl #3]
   28e5c:	sub	x4, x4, #0x1
   28e60:	cmn	x4, #0x1
   28e64:	cbz	x0, 28e54 <mpfr_rint@@Base+0x374>
   28e68:	mov	w28, #0x1                   	// #1
   28e6c:	cbnz	w6, 28f98 <mpfr_rint@@Base+0x4b8>
   28e70:	mov	x27, x8
   28e74:	mov	x19, x7
   28e78:	mov	w3, #0x0                   	// #0
   28e7c:	cbnz	w24, 28c34 <mpfr_rint@@Base+0x154>
   28e80:	mrs	x1, tpidr_el0
   28e84:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   28e88:	ldr	x2, [x0, #2576]
   28e8c:	add	x0, x0, #0xa10
   28e90:	blr	x2
   28e94:	add	x0, x1, x0
   28e98:	cmp	w24, w25, lsr #31
   28e9c:	ldp	x19, x20, [sp, #16]
   28ea0:	cneg	w28, w28, eq  // eq = none
   28ea4:	ldr	w1, [x0]
   28ea8:	ldp	x23, x24, [sp, #48]
   28eac:	orr	w1, w1, #0x8
   28eb0:	ldp	x25, x26, [sp, #64]
   28eb4:	str	w1, [x0]
   28eb8:	mov	w0, w28
   28ebc:	ldp	x21, x22, [sp, #32]
   28ec0:	ldp	x27, x28, [sp, #80]
   28ec4:	ldp	x29, x30, [sp], #144
   28ec8:	ret
   28ecc:	mov	w28, #0x2                   	// #2
   28ed0:	b	28bb4 <mpfr_rint@@Base+0xd4>
   28ed4:	cmn	w24, #0x1
   28ed8:	b.ne	28df0 <mpfr_rint@@Base+0x310>  // b.any
   28edc:	cmp	x20, #0x0
   28ee0:	mov	w24, #0x0                   	// #0
   28ee4:	ccmp	w1, #0x0, #0x4, eq  // eq = none
   28ee8:	b.ne	28df0 <mpfr_rint@@Base+0x310>  // b.any
   28eec:	mov	w6, w3
   28ef0:	cbz	w23, 28d8c <mpfr_rint@@Base+0x2ac>
   28ef4:	cbnz	w6, 28fc4 <mpfr_rint@@Base+0x4e4>
   28ef8:	add	x20, x26, x20, lsl #3
   28efc:	mov	w3, #0x0                   	// #0
   28f00:	mov	x2, x4
   28f04:	mov	x0, x7
   28f08:	mov	w1, #0x0                   	// #0
   28f0c:	str	w3, [sp, #104]
   28f10:	ldur	x24, [x20, #-8]
   28f14:	bl	c110 <memset@plt>
   28f18:	ldr	w3, [sp, #104]
   28f1c:	lsr	x24, x24, #63
   28f20:	cbnz	w28, 28c30 <mpfr_rint@@Base+0x150>
   28f24:	b	28e1c <mpfr_rint@@Base+0x33c>
   28f28:	cbnz	w23, 290a8 <mpfr_rint@@Base+0x5c8>
   28f2c:	ldr	x1, [x7]
   28f30:	lsr	x0, x1, x6
   28f34:	tbnz	w0, #0, 290a8 <mpfr_rint@@Base+0x5c8>
   28f38:	cbz	w6, 291d8 <mpfr_rint@@Base+0x6f8>
   28f3c:	sub	w3, w6, #0x1
   28f40:	mov	x0, #0xffffffffffffffff    	// #-1
   28f44:	mov	x2, #0x1                   	// #1
   28f48:	lsl	x0, x0, x6
   28f4c:	bic	x1, x1, x0
   28f50:	lsl	x2, x2, x3
   28f54:	cmp	x1, x2
   28f58:	cset	w24, hi  // hi = pmore
   28f5c:	b.ne	28bf8 <mpfr_rint@@Base+0x118>  // b.any
   28f60:	cmp	w6, #0x0
   28f64:	sub	x0, x19, #0x1
   28f68:	cset	x1, eq  // eq = none
   28f6c:	subs	x0, x0, x1
   28f70:	b.pl	28f7c <mpfr_rint@@Base+0x49c>  // b.nfrst
   28f74:	b	28bf8 <mpfr_rint@@Base+0x118>
   28f78:	b.eq	28bf8 <mpfr_rint@@Base+0x118>  // b.none
   28f7c:	ldr	x1, [x26, x0, lsl #3]
   28f80:	sub	x0, x0, #0x1
   28f84:	cmn	x0, #0x1
   28f88:	cbz	x1, 28f78 <mpfr_rint@@Base+0x498>
   28f8c:	mov	w24, #0x1                   	// #1
   28f90:	cbz	w28, 28bfc <mpfr_rint@@Base+0x11c>
   28f94:	b	28e6c <mpfr_rint@@Base+0x38c>
   28f98:	ldr	x1, [x7]
   28f9c:	mov	x2, x1
   28fa0:	mov	w3, w6
   28fa4:	mov	x27, x8
   28fa8:	mov	x19, x7
   28fac:	mov	x0, #0xffffffffffffffff    	// #-1
   28fb0:	lsl	x0, x0, x3
   28fb4:	and	x0, x0, x2
   28fb8:	str	x0, [x19]
   28fbc:	cbnz	w28, 28c30 <mpfr_rint@@Base+0x150>
   28fc0:	b	28e1c <mpfr_rint@@Base+0x33c>
   28fc4:	ldr	x24, [x7, x8, lsl #3]
   28fc8:	sub	w0, w6, #0x1
   28fcc:	lsr	x24, x24, x0
   28fd0:	and	w24, w24, #0x1
   28fd4:	mov	x0, x7
   28fd8:	mov	x2, x4
   28fdc:	mov	w1, #0x0                   	// #0
   28fe0:	str	w6, [sp, #104]
   28fe4:	str	x8, [sp, #112]
   28fe8:	bl	c110 <memset@plt>
   28fec:	ldr	w3, [sp, #104]
   28ff0:	mov	x7, x0
   28ff4:	ldr	x8, [sp, #112]
   28ff8:	ldr	x2, [x7, x8, lsl #3]
   28ffc:	b	28fac <mpfr_rint@@Base+0x4cc>
   29000:	cmp	x22, #0x0
   29004:	mov	w24, #0x1                   	// #1
   29008:	b.gt	28b60 <mpfr_rint@@Base+0x80>
   2900c:	nop
   29010:	sxtw	x1, w25
   29014:	mov	x2, #0x0                   	// #0
   29018:	mov	w3, w23
   2901c:	mov	x0, x21
   29020:	bl	ba80 <mpfr_set_si_2exp@plt>
   29024:	mrs	x1, tpidr_el0
   29028:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2902c:	ldr	x2, [x0, #2576]
   29030:	add	x0, x0, #0xa10
   29034:	blr	x2
   29038:	add	x0, x1, x0
   2903c:	cmp	w25, #0x0
   29040:	ldr	w1, [x0]
   29044:	orr	w1, w1, #0x8
   29048:	str	w1, [x0]
   2904c:	b.le	29098 <mpfr_rint@@Base+0x5b8>
   29050:	mov	w28, #0x2                   	// #2
   29054:	ldp	x23, x24, [sp, #48]
   29058:	ldp	x25, x26, [sp, #64]
   2905c:	b	28e2c <mpfr_rint@@Base+0x34c>
   29060:	cbnz	w24, 29010 <mpfr_rint@@Base+0x530>
   29064:	mrs	x1, tpidr_el0
   29068:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2906c:	ldr	x2, [x0, #2576]
   29070:	add	x0, x0, #0xa10
   29074:	blr	x2
   29078:	add	x0, x1, x0
   2907c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   29080:	str	x1, [x21, #16]
   29084:	cmp	w25, #0x0
   29088:	ldr	w1, [x0]
   2908c:	orr	w1, w1, #0x8
   29090:	str	w1, [x0]
   29094:	b.le	29050 <mpfr_rint@@Base+0x570>
   29098:	mov	w28, #0xfffffffe            	// #-2
   2909c:	ldp	x23, x24, [sp, #48]
   290a0:	ldp	x25, x26, [sp, #64]
   290a4:	b	28e2c <mpfr_rint@@Base+0x34c>
   290a8:	cbnz	w6, 29134 <mpfr_rint@@Base+0x654>
   290ac:	ldur	x0, [x20, #-8]
   290b0:	tbnz	x0, #63, 2916c <mpfr_rint@@Base+0x68c>
   290b4:	mov	w24, #0x0                   	// #0
   290b8:	cbnz	w28, 28e70 <mpfr_rint@@Base+0x390>
   290bc:	b	28e48 <mpfr_rint@@Base+0x368>
   290c0:	cmp	x22, #0x0
   290c4:	b.le	29064 <mpfr_rint@@Base+0x584>
   290c8:	mov	w24, #0x0                   	// #0
   290cc:	stp	x19, x20, [sp, #16]
   290d0:	b	28b64 <mpfr_rint@@Base+0x84>
   290d4:	mov	x2, #0x2                   	// #2
   290d8:	movk	x2, #0x8000, lsl #48
   290dc:	cmp	x22, x2
   290e0:	b.eq	291a8 <mpfr_rint@@Base+0x6c8>  // b.none
   290e4:	ldr	w1, [x1, #8]
   290e8:	cmp	x22, x0
   290ec:	str	w1, [x21, #8]
   290f0:	b.eq	2919c <mpfr_rint@@Base+0x6bc>  // b.none
   290f4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   290f8:	mov	w28, #0x0                   	// #0
   290fc:	str	x0, [x21, #16]
   29100:	b	28e2c <mpfr_rint@@Base+0x34c>
   29104:	mov	w24, #0x1                   	// #1
   29108:	b	28e80 <mpfr_rint@@Base+0x3a0>
   2910c:	subs	x4, x19, #0x1
   29110:	b.pl	28e58 <mpfr_rint@@Base+0x378>  // b.nfrst
   29114:	nop
   29118:	cbz	w6, 28e1c <mpfr_rint@@Base+0x33c>
   2911c:	ldr	x0, [x7]
   29120:	mov	x1, #0xffffffffffffffff    	// #-1
   29124:	lsl	x6, x1, x6
   29128:	and	x0, x0, x6
   2912c:	str	x0, [x7]
   29130:	b	28e1c <mpfr_rint@@Base+0x33c>
   29134:	ldr	x1, [x7]
   29138:	sub	w0, w6, #0x1
   2913c:	mov	x2, x1
   29140:	lsr	x0, x1, x0
   29144:	tbz	w0, #0, 29160 <mpfr_rint@@Base+0x680>
   29148:	cbz	w28, 29220 <mpfr_rint@@Base+0x740>
   2914c:	mov	w3, w6
   29150:	mov	x27, x8
   29154:	mov	x19, x7
   29158:	mov	w24, #0x1                   	// #1
   2915c:	b	28fac <mpfr_rint@@Base+0x4cc>
   29160:	mov	w24, #0x0                   	// #0
   29164:	cbz	w28, 28c04 <mpfr_rint@@Base+0x124>
   29168:	b	28f9c <mpfr_rint@@Base+0x4bc>
   2916c:	cbz	w28, 28e40 <mpfr_rint@@Base+0x360>
   29170:	mov	x27, x8
   29174:	mov	x19, x7
   29178:	mov	w3, #0x0                   	// #0
   2917c:	b	28c34 <mpfr_rint@@Base+0x154>
   29180:	b.ne	29064 <mpfr_rint@@Base+0x584>  // b.any
   29184:	cmn	w2, #0x1
   29188:	b.eq	29010 <mpfr_rint@@Base+0x530>  // b.none
   2918c:	mov	x0, x1
   29190:	bl	bf00 <mpfr_powerof2_raw@plt>
   29194:	cbz	w0, 29010 <mpfr_rint@@Base+0x530>
   29198:	b	29064 <mpfr_rint@@Base+0x584>
   2919c:	mov	w28, #0x0                   	// #0
   291a0:	str	x22, [x21, #16]
   291a4:	b	28e2c <mpfr_rint@@Base+0x34c>
   291a8:	mrs	x1, tpidr_el0
   291ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   291b0:	ldr	x2, [x0, #2576]
   291b4:	add	x0, x0, #0xa10
   291b8:	blr	x2
   291bc:	add	x0, x1, x0
   291c0:	mov	w28, #0x0                   	// #0
   291c4:	str	x22, [x21, #16]
   291c8:	ldr	w1, [x0]
   291cc:	orr	w1, w1, #0x4
   291d0:	str	w1, [x0]
   291d4:	b	28e2c <mpfr_rint@@Base+0x34c>
   291d8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   291dc:	ldur	x1, [x20, #-8]
   291e0:	b	28f54 <mpfr_rint@@Base+0x474>
   291e4:	add	x0, x26, x20, lsl #3
   291e8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   291ec:	ldur	x0, [x0, #-8]
   291f0:	cmp	x0, x2
   291f4:	cset	w24, hi  // hi = pmore
   291f8:	b.eq	29228 <mpfr_rint@@Base+0x748>  // b.none
   291fc:	mov	w3, #0x0                   	// #0
   29200:	mov	x2, x4
   29204:	mov	x0, x7
   29208:	mov	w1, #0x0                   	// #0
   2920c:	str	w3, [sp, #104]
   29210:	bl	c110 <memset@plt>
   29214:	ldr	w3, [sp, #104]
   29218:	cbnz	w28, 28c30 <mpfr_rint@@Base+0x150>
   2921c:	b	28e1c <mpfr_rint@@Base+0x33c>
   29220:	mov	w24, #0x1                   	// #1
   29224:	b	28c04 <mpfr_rint@@Base+0x124>
   29228:	sub	x0, x20, #0x1
   2922c:	and	x1, x1, #0xff
   29230:	subs	x0, x0, x1
   29234:	b.pl	28dd8 <mpfr_rint@@Base+0x2f8>  // b.nfrst
   29238:	b	291fc <mpfr_rint@@Base+0x71c>
   2923c:	mov	w3, w6
   29240:	b	28df0 <mpfr_rint@@Base+0x310>
   29244:	mov	w2, w25
   29248:	mov	w1, w23
   2924c:	mov	x0, x21
   29250:	bl	bf40 <mpfr_overflow@plt>
   29254:	tbz	w0, #31, 2926c <mpfr_rint@@Base+0x78c>
   29258:	neg	w28, w28
   2925c:	ldp	x19, x20, [sp, #16]
   29260:	ldp	x23, x24, [sp, #48]
   29264:	ldp	x25, x26, [sp, #64]
   29268:	b	28e2c <mpfr_rint@@Base+0x34c>
   2926c:	ldp	x19, x20, [sp, #16]
   29270:	ldp	x23, x24, [sp, #48]
   29274:	ldp	x25, x26, [sp, #64]
   29278:	b	28e2c <mpfr_rint@@Base+0x34c>
   2927c:	nop

0000000000029280 <mpfr_roundeven@@Base>:
   29280:	mov	w2, #0x0                   	// #0
   29284:	b	c300 <mpfr_rint@plt>

0000000000029288 <mpfr_round@@Base>:
   29288:	mov	w2, #0xffffffff            	// #-1
   2928c:	b	c300 <mpfr_rint@plt>

0000000000029290 <mpfr_trunc@@Base>:
   29290:	mov	w2, #0x1                   	// #1
   29294:	b	c300 <mpfr_rint@plt>

0000000000029298 <mpfr_ceil@@Base>:
   29298:	mov	w2, #0x2                   	// #2
   2929c:	b	c300 <mpfr_rint@plt>

00000000000292a0 <mpfr_floor@@Base>:
   292a0:	mov	w2, #0x3                   	// #3
   292a4:	b	c300 <mpfr_rint@plt>

00000000000292a8 <mpfr_rint_roundeven@@Base>:
   292a8:	stp	x29, x30, [sp, #-96]!
   292ac:	mov	x29, sp
   292b0:	stp	x19, x20, [sp, #16]
   292b4:	mov	x19, x1
   292b8:	mov	x20, x0
   292bc:	ldr	x1, [x1, #16]
   292c0:	stp	x21, x22, [sp, #32]
   292c4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   292c8:	mov	w21, w2
   292cc:	cmp	x1, x0
   292d0:	b.le	292e0 <mpfr_rint_roundeven@@Base+0x38>
   292d4:	mov	x0, x19
   292d8:	bl	c160 <mpfr_integer_p@plt>
   292dc:	cbz	w0, 2930c <mpfr_rint_roundeven@@Base+0x64>
   292e0:	ldr	w3, [x19, #8]
   292e4:	mov	w2, w21
   292e8:	mov	x1, x19
   292ec:	mov	x0, x20
   292f0:	bl	c6a0 <mpfr_set4@plt>
   292f4:	mov	w19, w0
   292f8:	mov	w0, w19
   292fc:	ldp	x19, x20, [sp, #16]
   29300:	ldp	x21, x22, [sp, #32]
   29304:	ldp	x29, x30, [sp], #96
   29308:	ret
   2930c:	ldr	x1, [x19]
   29310:	mrs	x2, tpidr_el0
   29314:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29318:	ldr	x3, [x0, #2576]
   2931c:	add	x0, x0, #0xa10
   29320:	blr	x3
   29324:	stp	x23, x24, [sp, #48]
   29328:	add	x23, x2, x0
   2932c:	add	x22, sp, #0x40
   29330:	ldr	w24, [x2, x0]
   29334:	mov	x0, x22
   29338:	bl	ca80 <mpfr_init2@plt>
   2933c:	mov	x0, x22
   29340:	mov	x1, x19
   29344:	str	wzr, [x23]
   29348:	bl	c280 <mpfr_roundeven@plt>
   2934c:	ldr	w0, [x23]
   29350:	str	w24, [x23]
   29354:	tbnz	w0, #1, 29390 <mpfr_rint_roundeven@@Base+0xe8>
   29358:	ldr	w3, [sp, #72]
   2935c:	mov	w2, w21
   29360:	mov	x0, x20
   29364:	mov	x1, x22
   29368:	bl	c6a0 <mpfr_set4@plt>
   2936c:	mov	w19, w0
   29370:	mov	x0, x22
   29374:	bl	c070 <mpfr_clear@plt>
   29378:	mov	w0, w19
   2937c:	ldp	x19, x20, [sp, #16]
   29380:	ldp	x21, x22, [sp, #32]
   29384:	ldp	x23, x24, [sp, #48]
   29388:	ldp	x29, x30, [sp], #96
   2938c:	ret
   29390:	ldr	w2, [x19, #8]
   29394:	mov	w1, w21
   29398:	mov	x0, x20
   2939c:	bl	bf40 <mpfr_overflow@plt>
   293a0:	mov	w19, w0
   293a4:	b	29370 <mpfr_rint_roundeven@@Base+0xc8>

00000000000293a8 <mpfr_rint_round@@Base>:
   293a8:	stp	x29, x30, [sp, #-96]!
   293ac:	mov	x29, sp
   293b0:	stp	x19, x20, [sp, #16]
   293b4:	mov	x19, x1
   293b8:	mov	x20, x0
   293bc:	ldr	x1, [x1, #16]
   293c0:	stp	x21, x22, [sp, #32]
   293c4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   293c8:	mov	w21, w2
   293cc:	cmp	x1, x0
   293d0:	b.le	293e0 <mpfr_rint_round@@Base+0x38>
   293d4:	mov	x0, x19
   293d8:	bl	c160 <mpfr_integer_p@plt>
   293dc:	cbz	w0, 2940c <mpfr_rint_round@@Base+0x64>
   293e0:	ldr	w3, [x19, #8]
   293e4:	mov	w2, w21
   293e8:	mov	x1, x19
   293ec:	mov	x0, x20
   293f0:	bl	c6a0 <mpfr_set4@plt>
   293f4:	mov	w19, w0
   293f8:	mov	w0, w19
   293fc:	ldp	x19, x20, [sp, #16]
   29400:	ldp	x21, x22, [sp, #32]
   29404:	ldp	x29, x30, [sp], #96
   29408:	ret
   2940c:	ldr	x1, [x19]
   29410:	mrs	x2, tpidr_el0
   29414:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29418:	ldr	x3, [x0, #2576]
   2941c:	add	x0, x0, #0xa10
   29420:	blr	x3
   29424:	stp	x23, x24, [sp, #48]
   29428:	add	x23, x2, x0
   2942c:	add	x22, sp, #0x40
   29430:	ldr	w24, [x2, x0]
   29434:	mov	x0, x22
   29438:	bl	ca80 <mpfr_init2@plt>
   2943c:	mov	x0, x22
   29440:	mov	x1, x19
   29444:	str	wzr, [x23]
   29448:	bl	c220 <mpfr_round@plt>
   2944c:	ldr	w0, [x23]
   29450:	str	w24, [x23]
   29454:	tbnz	w0, #1, 29490 <mpfr_rint_round@@Base+0xe8>
   29458:	ldr	w3, [sp, #72]
   2945c:	mov	w2, w21
   29460:	mov	x0, x20
   29464:	mov	x1, x22
   29468:	bl	c6a0 <mpfr_set4@plt>
   2946c:	mov	w19, w0
   29470:	mov	x0, x22
   29474:	bl	c070 <mpfr_clear@plt>
   29478:	mov	w0, w19
   2947c:	ldp	x19, x20, [sp, #16]
   29480:	ldp	x21, x22, [sp, #32]
   29484:	ldp	x23, x24, [sp, #48]
   29488:	ldp	x29, x30, [sp], #96
   2948c:	ret
   29490:	ldr	w2, [x19, #8]
   29494:	mov	w1, w21
   29498:	mov	x0, x20
   2949c:	bl	bf40 <mpfr_overflow@plt>
   294a0:	mov	w19, w0
   294a4:	b	29470 <mpfr_rint_round@@Base+0xc8>

00000000000294a8 <mpfr_rint_trunc@@Base>:
   294a8:	stp	x29, x30, [sp, #-96]!
   294ac:	mov	x29, sp
   294b0:	stp	x19, x20, [sp, #16]
   294b4:	mov	x19, x1
   294b8:	mov	x20, x0
   294bc:	ldr	x1, [x1, #16]
   294c0:	stp	x21, x22, [sp, #32]
   294c4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   294c8:	mov	w21, w2
   294cc:	cmp	x1, x0
   294d0:	b.le	294e0 <mpfr_rint_trunc@@Base+0x38>
   294d4:	mov	x0, x19
   294d8:	bl	c160 <mpfr_integer_p@plt>
   294dc:	cbz	w0, 2950c <mpfr_rint_trunc@@Base+0x64>
   294e0:	ldr	w3, [x19, #8]
   294e4:	mov	w2, w21
   294e8:	mov	x1, x19
   294ec:	mov	x0, x20
   294f0:	bl	c6a0 <mpfr_set4@plt>
   294f4:	mov	w19, w0
   294f8:	mov	w0, w19
   294fc:	ldp	x19, x20, [sp, #16]
   29500:	ldp	x21, x22, [sp, #32]
   29504:	ldp	x29, x30, [sp], #96
   29508:	ret
   2950c:	ldr	x1, [x19]
   29510:	mrs	x2, tpidr_el0
   29514:	add	x22, sp, #0x40
   29518:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2951c:	ldr	x3, [x0, #2576]
   29520:	add	x0, x0, #0xa10
   29524:	blr	x3
   29528:	stp	x23, x24, [sp, #48]
   2952c:	add	x23, x2, x0
   29530:	ldr	w24, [x2, x0]
   29534:	mov	x0, x22
   29538:	bl	ca80 <mpfr_init2@plt>
   2953c:	mov	x1, x19
   29540:	mov	x0, x22
   29544:	bl	c3f0 <mpfr_trunc@plt>
   29548:	str	w24, [x23]
   2954c:	ldr	w3, [sp, #72]
   29550:	mov	w2, w21
   29554:	mov	x1, x22
   29558:	mov	x0, x20
   2955c:	bl	c6a0 <mpfr_set4@plt>
   29560:	mov	w19, w0
   29564:	mov	x0, x22
   29568:	bl	c070 <mpfr_clear@plt>
   2956c:	mov	w0, w19
   29570:	ldp	x19, x20, [sp, #16]
   29574:	ldp	x21, x22, [sp, #32]
   29578:	ldp	x23, x24, [sp, #48]
   2957c:	ldp	x29, x30, [sp], #96
   29580:	ret
   29584:	nop

0000000000029588 <mpfr_rint_ceil@@Base>:
   29588:	stp	x29, x30, [sp, #-96]!
   2958c:	mov	x29, sp
   29590:	stp	x19, x20, [sp, #16]
   29594:	mov	x19, x1
   29598:	mov	x20, x0
   2959c:	ldr	x1, [x1, #16]
   295a0:	stp	x21, x22, [sp, #32]
   295a4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   295a8:	mov	w21, w2
   295ac:	cmp	x1, x0
   295b0:	b.le	295c0 <mpfr_rint_ceil@@Base+0x38>
   295b4:	mov	x0, x19
   295b8:	bl	c160 <mpfr_integer_p@plt>
   295bc:	cbz	w0, 295ec <mpfr_rint_ceil@@Base+0x64>
   295c0:	ldr	w3, [x19, #8]
   295c4:	mov	w2, w21
   295c8:	mov	x1, x19
   295cc:	mov	x0, x20
   295d0:	bl	c6a0 <mpfr_set4@plt>
   295d4:	mov	w19, w0
   295d8:	mov	w0, w19
   295dc:	ldp	x19, x20, [sp, #16]
   295e0:	ldp	x21, x22, [sp, #32]
   295e4:	ldp	x29, x30, [sp], #96
   295e8:	ret
   295ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   295f0:	ldr	x3, [x0, #2576]
   295f4:	add	x0, x0, #0xa10
   295f8:	blr	x3
   295fc:	mrs	x2, tpidr_el0
   29600:	ldr	x1, [x19]
   29604:	add	x3, sp, #0x40
   29608:	add	x22, x2, x0
   2960c:	stp	x23, x24, [sp, #48]
   29610:	ldr	w23, [x2, x0]
   29614:	mov	x24, x3
   29618:	mov	x0, x3
   2961c:	bl	ca80 <mpfr_init2@plt>
   29620:	str	wzr, [x22]
   29624:	mov	x1, x19
   29628:	mov	x0, x24
   2962c:	bl	c980 <mpfr_ceil@plt>
   29630:	ldr	w0, [x22]
   29634:	str	w23, [x22]
   29638:	tbnz	w0, #1, 29674 <mpfr_rint_ceil@@Base+0xec>
   2963c:	ldr	w3, [sp, #72]
   29640:	mov	w2, w21
   29644:	mov	x0, x20
   29648:	mov	x1, x24
   2964c:	bl	c6a0 <mpfr_set4@plt>
   29650:	mov	w19, w0
   29654:	mov	x0, x24
   29658:	bl	c070 <mpfr_clear@plt>
   2965c:	mov	w0, w19
   29660:	ldp	x19, x20, [sp, #16]
   29664:	ldp	x21, x22, [sp, #32]
   29668:	ldp	x23, x24, [sp, #48]
   2966c:	ldp	x29, x30, [sp], #96
   29670:	ret
   29674:	mov	w1, w21
   29678:	mov	x0, x20
   2967c:	mov	w2, #0x1                   	// #1
   29680:	bl	bf40 <mpfr_overflow@plt>
   29684:	mov	w19, w0
   29688:	b	29654 <mpfr_rint_ceil@@Base+0xcc>
   2968c:	nop

0000000000029690 <mpfr_rint_floor@@Base>:
   29690:	stp	x29, x30, [sp, #-96]!
   29694:	mov	x29, sp
   29698:	stp	x19, x20, [sp, #16]
   2969c:	mov	x19, x1
   296a0:	mov	x20, x0
   296a4:	ldr	x1, [x1, #16]
   296a8:	stp	x21, x22, [sp, #32]
   296ac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   296b0:	mov	w21, w2
   296b4:	cmp	x1, x0
   296b8:	b.le	296c8 <mpfr_rint_floor@@Base+0x38>
   296bc:	mov	x0, x19
   296c0:	bl	c160 <mpfr_integer_p@plt>
   296c4:	cbz	w0, 296f4 <mpfr_rint_floor@@Base+0x64>
   296c8:	ldr	w3, [x19, #8]
   296cc:	mov	w2, w21
   296d0:	mov	x1, x19
   296d4:	mov	x0, x20
   296d8:	bl	c6a0 <mpfr_set4@plt>
   296dc:	mov	w19, w0
   296e0:	mov	w0, w19
   296e4:	ldp	x19, x20, [sp, #16]
   296e8:	ldp	x21, x22, [sp, #32]
   296ec:	ldp	x29, x30, [sp], #96
   296f0:	ret
   296f4:	ldr	x1, [x19]
   296f8:	mrs	x2, tpidr_el0
   296fc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29700:	ldr	x3, [x0, #2576]
   29704:	add	x0, x0, #0xa10
   29708:	blr	x3
   2970c:	stp	x23, x24, [sp, #48]
   29710:	add	x23, x2, x0
   29714:	add	x22, sp, #0x40
   29718:	ldr	w24, [x2, x0]
   2971c:	mov	x0, x22
   29720:	bl	ca80 <mpfr_init2@plt>
   29724:	mov	x1, x19
   29728:	mov	x0, x22
   2972c:	str	wzr, [x23]
   29730:	bl	c210 <mpfr_floor@plt>
   29734:	ldr	w0, [x23]
   29738:	str	w24, [x23]
   2973c:	tbnz	w0, #1, 29778 <mpfr_rint_floor@@Base+0xe8>
   29740:	ldr	w3, [sp, #72]
   29744:	mov	w2, w21
   29748:	mov	x0, x20
   2974c:	mov	x1, x22
   29750:	bl	c6a0 <mpfr_set4@plt>
   29754:	mov	w19, w0
   29758:	mov	x0, x22
   2975c:	bl	c070 <mpfr_clear@plt>
   29760:	mov	w0, w19
   29764:	ldp	x19, x20, [sp, #16]
   29768:	ldp	x21, x22, [sp, #32]
   2976c:	ldp	x23, x24, [sp, #48]
   29770:	ldp	x29, x30, [sp], #96
   29774:	ret
   29778:	mov	w1, w21
   2977c:	mov	x0, x20
   29780:	mov	w2, #0xffffffff            	// #-1
   29784:	bl	bf40 <mpfr_overflow@plt>
   29788:	mov	w19, w0
   2978c:	b	29758 <mpfr_rint_floor@@Base+0xc8>

0000000000029790 <mpfr_ui_div@@Base>:
   29790:	stp	x29, x30, [sp, #-128]!
   29794:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
   29798:	mov	x4, x2
   2979c:	mov	x29, sp
   297a0:	ldr	x5, [x2, #16]
   297a4:	stp	x19, x20, [sp, #16]
   297a8:	mov	x19, x0
   297ac:	cmp	x5, x6
   297b0:	b.le	298ec <mpfr_ui_div@@Base+0x15c>
   297b4:	cbz	x1, 298cc <mpfr_ui_div@@Base+0x13c>
   297b8:	mrs	x4, tpidr_el0
   297bc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   297c0:	ldr	x5, [x0, #2576]
   297c4:	add	x0, x0, #0xa10
   297c8:	blr	x5
   297cc:	clz	x5, x1
   297d0:	mov	x8, #0x40                  	// #64
   297d4:	sub	w7, w8, w5
   297d8:	stp	x21, x22, [sp, #32]
   297dc:	ldr	w20, [x4, x0]
   297e0:	add	x22, x4, x0
   297e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   297e8:	ldr	x6, [x0, #2512]
   297ec:	add	x0, x0, #0x9d0
   297f0:	blr	x6
   297f4:	stp	x23, x24, [sp, #48]
   297f8:	sxtw	x7, w7
   297fc:	lsl	x5, x1, x5
   29800:	stp	x25, x26, [sp, #64]
   29804:	add	x26, x4, x0
   29808:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   2980c:	ldr	x23, [x4, x0]
   29810:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29814:	ldr	x6, [x0, #2544]
   29818:	add	x0, x0, #0x9f0
   2981c:	blr	x6
   29820:	add	x6, sp, #0x58
   29824:	add	x25, x4, x0
   29828:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   2982c:	mov	w11, #0x1                   	// #1
   29830:	add	x1, sp, #0x60
   29834:	mov	w21, w3
   29838:	str	x10, [x26]
   2983c:	stp	x5, x8, [sp, #88]
   29840:	str	w11, [sp, #104]
   29844:	str	x7, [sp, #112]
   29848:	str	x6, [sp, #120]
   2984c:	ldr	x24, [x4, x0]
   29850:	mov	x0, x19
   29854:	str	x9, [x25]
   29858:	bl	c620 <mpfr_div@plt>
   2985c:	ldr	w1, [x22]
   29860:	ldr	x2, [x19, #16]
   29864:	orr	w1, w20, w1
   29868:	str	x24, [x25]
   2986c:	str	w1, [x22]
   29870:	cmp	x24, x2
   29874:	str	x23, [x26]
   29878:	ccmp	x23, x2, #0x0, ge  // ge = tcont
   2987c:	b.le	298a8 <mpfr_ui_div@@Base+0x118>
   29880:	mov	w2, w21
   29884:	mov	w1, w0
   29888:	mov	x0, x19
   2988c:	bl	cb30 <mpfr_check_range@plt>
   29890:	ldp	x21, x22, [sp, #32]
   29894:	ldp	x23, x24, [sp, #48]
   29898:	ldp	x25, x26, [sp, #64]
   2989c:	ldp	x19, x20, [sp, #16]
   298a0:	ldp	x29, x30, [sp], #128
   298a4:	ret
   298a8:	cbz	w0, 298b4 <mpfr_ui_div@@Base+0x124>
   298ac:	orr	w1, w1, #0x8
   298b0:	str	w1, [x22]
   298b4:	ldp	x19, x20, [sp, #16]
   298b8:	ldp	x21, x22, [sp, #32]
   298bc:	ldp	x23, x24, [sp, #48]
   298c0:	ldp	x25, x26, [sp, #64]
   298c4:	ldp	x29, x30, [sp], #128
   298c8:	ret
   298cc:	ldr	w2, [x4, #8]
   298d0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   298d4:	str	w2, [x19, #8]
   298d8:	mov	w0, #0x0                   	// #0
   298dc:	str	x1, [x19, #16]
   298e0:	ldp	x19, x20, [sp, #16]
   298e4:	ldp	x29, x30, [sp], #128
   298e8:	ret
   298ec:	mov	x3, #0x2                   	// #2
   298f0:	movk	x3, #0x8000, lsl #48
   298f4:	cmp	x5, x3
   298f8:	b.eq	29954 <mpfr_ui_div@@Base+0x1c4>  // b.none
   298fc:	cmp	x5, x6
   29900:	b.eq	298cc <mpfr_ui_div@@Base+0x13c>  // b.none
   29904:	mrs	x2, tpidr_el0
   29908:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2990c:	ldr	x5, [x0, #2576]
   29910:	add	x0, x0, #0xa10
   29914:	blr	x5
   29918:	add	x5, x2, x0
   2991c:	ldr	w0, [x2, x0]
   29920:	cbz	x1, 29940 <mpfr_ui_div@@Base+0x1b0>
   29924:	ldr	w2, [x4, #8]
   29928:	orr	w1, w0, #0x20
   2992c:	mov	w0, #0x0                   	// #0
   29930:	str	w1, [x5]
   29934:	str	w2, [x19, #8]
   29938:	str	x6, [x19, #16]
   2993c:	b	2989c <mpfr_ui_div@@Base+0x10c>
   29940:	orr	w1, w0, #0x4
   29944:	mov	w0, #0x0                   	// #0
   29948:	str	w1, [x5]
   2994c:	str	x3, [x19, #16]
   29950:	b	2989c <mpfr_ui_div@@Base+0x10c>
   29954:	mrs	x1, tpidr_el0
   29958:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2995c:	ldr	x2, [x0, #2576]
   29960:	add	x0, x0, #0xa10
   29964:	blr	x2
   29968:	add	x1, x1, x0
   2996c:	mov	w0, #0x0                   	// #0
   29970:	str	x5, [x19, #16]
   29974:	ldr	w2, [x1]
   29978:	orr	w2, w2, #0x4
   2997c:	str	w2, [x1]
   29980:	b	2989c <mpfr_ui_div@@Base+0x10c>
   29984:	nop

0000000000029988 <mpfr_ui_sub@@Base>:
   29988:	stp	x29, x30, [sp, #-128]!
   2998c:	mov	x4, x2
   29990:	mov	x29, sp
   29994:	stp	x25, x26, [sp, #64]
   29998:	mov	w26, w3
   2999c:	cbz	x1, 29ac8 <mpfr_ui_sub@@Base+0x140>
   299a0:	ldr	x6, [x2, #16]
   299a4:	stp	x19, x20, [sp, #16]
   299a8:	mov	x7, #0x8000000000000003    	// #-9223372036854775805
   299ac:	mov	x19, x0
   299b0:	cmp	x6, x7
   299b4:	b.le	29ae0 <mpfr_ui_sub@@Base+0x158>
   299b8:	mrs	x4, tpidr_el0
   299bc:	mov	x5, x1
   299c0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   299c4:	ldr	x1, [x0, #2576]
   299c8:	add	x0, x0, #0xa10
   299cc:	blr	x1
   299d0:	mov	x8, #0x40                  	// #64
   299d4:	clz	x1, x5
   299d8:	stp	x21, x22, [sp, #32]
   299dc:	ldr	w20, [x4, x0]
   299e0:	add	x21, x4, x0
   299e4:	sub	w7, w8, w1
   299e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   299ec:	ldr	x6, [x0, #2512]
   299f0:	add	x0, x0, #0x9d0
   299f4:	blr	x6
   299f8:	add	x25, x4, x0
   299fc:	ldr	x22, [x4, x0]
   29a00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29a04:	ldr	x6, [x0, #2544]
   29a08:	add	x0, x0, #0x9f0
   29a0c:	blr	x6
   29a10:	sxtw	x7, w7
   29a14:	add	x6, sp, #0x58
   29a18:	stp	x23, x24, [sp, #48]
   29a1c:	add	x24, x4, x0
   29a20:	lsl	x5, x5, x1
   29a24:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   29a28:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   29a2c:	mov	w11, #0x1                   	// #1
   29a30:	add	x1, sp, #0x60
   29a34:	str	x10, [x25]
   29a38:	stp	x5, x8, [sp, #88]
   29a3c:	str	w11, [sp, #104]
   29a40:	str	x7, [sp, #112]
   29a44:	str	x6, [sp, #120]
   29a48:	ldr	x23, [x4, x0]
   29a4c:	mov	x0, x19
   29a50:	str	x9, [x24]
   29a54:	bl	bb70 <mpfr_sub@plt>
   29a58:	ldr	w1, [x21]
   29a5c:	ldr	x2, [x19, #16]
   29a60:	orr	w1, w20, w1
   29a64:	str	x23, [x24]
   29a68:	str	w1, [x21]
   29a6c:	cmp	x23, x2
   29a70:	str	x22, [x25]
   29a74:	ccmp	x22, x2, #0x0, ge  // ge = tcont
   29a78:	b.le	29aa4 <mpfr_ui_sub@@Base+0x11c>
   29a7c:	mov	w1, w0
   29a80:	mov	w2, w26
   29a84:	mov	x0, x19
   29a88:	bl	cb30 <mpfr_check_range@plt>
   29a8c:	ldp	x19, x20, [sp, #16]
   29a90:	ldp	x21, x22, [sp, #32]
   29a94:	ldp	x23, x24, [sp, #48]
   29a98:	ldp	x25, x26, [sp, #64]
   29a9c:	ldp	x29, x30, [sp], #128
   29aa0:	ret
   29aa4:	cbz	w0, 29a8c <mpfr_ui_sub@@Base+0x104>
   29aa8:	orr	w1, w1, #0x8
   29aac:	ldp	x19, x20, [sp, #16]
   29ab0:	ldp	x23, x24, [sp, #48]
   29ab4:	str	w1, [x21]
   29ab8:	ldp	x21, x22, [sp, #32]
   29abc:	ldp	x25, x26, [sp, #64]
   29ac0:	ldp	x29, x30, [sp], #128
   29ac4:	ret
   29ac8:	mov	w2, w3
   29acc:	mov	x1, x4
   29ad0:	bl	bd70 <mpfr_neg@plt>
   29ad4:	ldp	x25, x26, [sp, #64]
   29ad8:	ldp	x29, x30, [sp], #128
   29adc:	ret
   29ae0:	mov	x2, #0x2                   	// #2
   29ae4:	movk	x2, #0x8000, lsl #48
   29ae8:	cmp	x6, x2
   29aec:	b.eq	29b08 <mpfr_ui_sub@@Base+0x180>  // b.none
   29af0:	cmp	x6, x7
   29af4:	b.eq	29b3c <mpfr_ui_sub@@Base+0x1b4>  // b.none
   29af8:	mov	x2, #0x0                   	// #0
   29afc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   29b00:	ldp	x19, x20, [sp, #16]
   29b04:	b	29a98 <mpfr_ui_sub@@Base+0x110>
   29b08:	mrs	x1, tpidr_el0
   29b0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29b10:	ldr	x2, [x0, #2576]
   29b14:	add	x0, x0, #0xa10
   29b18:	blr	x2
   29b1c:	add	x1, x1, x0
   29b20:	mov	w0, #0x0                   	// #0
   29b24:	str	x6, [x19, #16]
   29b28:	ldp	x19, x20, [sp, #16]
   29b2c:	ldr	w2, [x1]
   29b30:	orr	w2, w2, #0x4
   29b34:	str	w2, [x1]
   29b38:	b	29a98 <mpfr_ui_sub@@Base+0x110>
   29b3c:	ldr	w1, [x4, #8]
   29b40:	mov	w0, #0x0                   	// #0
   29b44:	str	x6, [x19, #16]
   29b48:	neg	w1, w1
   29b4c:	str	w1, [x19, #8]
   29b50:	ldp	x19, x20, [sp, #16]
   29b54:	b	29a98 <mpfr_ui_sub@@Base+0x110>

0000000000029b58 <mpfr_urandom@@Base>:
   29b58:	stp	x29, x30, [sp, #-128]!
   29b5c:	mov	w4, #0x1                   	// #1
   29b60:	mov	x29, sp
   29b64:	stp	x21, x22, [sp, #32]
   29b68:	mrs	x22, tpidr_el0
   29b6c:	mov	x21, x0
   29b70:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29b74:	ldr	x3, [x0, #2576]
   29b78:	add	x0, x0, #0xa10
   29b7c:	blr	x3
   29b80:	stp	x23, x24, [sp, #48]
   29b84:	ldr	w0, [x22, x0]
   29b88:	str	w0, [sp, #108]
   29b8c:	mov	w23, w2
   29b90:	ldr	x24, [x21, #24]
   29b94:	stp	x19, x20, [sp, #16]
   29b98:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29b9c:	ldr	x3, [x0, #2512]
   29ba0:	add	x0, x0, #0x9d0
   29ba4:	blr	x3
   29ba8:	add	x3, x22, x0
   29bac:	stp	x25, x26, [sp, #64]
   29bb0:	mov	x19, x1
   29bb4:	stp	x27, x28, [sp, #80]
   29bb8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   29bbc:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   29bc0:	mov	x28, #0x0                   	// #0
   29bc4:	mov	x27, #0xc000000000000000    	// #-4611686018427387904
   29bc8:	str	w4, [x21, #8]
   29bcc:	str	xzr, [x21, #16]
   29bd0:	ldr	x25, [x22, x0]
   29bd4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29bd8:	ldr	x4, [x0, #2544]
   29bdc:	add	x0, x0, #0x9f0
   29be0:	blr	x4
   29be4:	ldr	x20, [x21]
   29be8:	str	x2, [x3]
   29bec:	ldr	x26, [x22, x0]
   29bf0:	str	x1, [x22, x0]
   29bf4:	mov	x1, x19
   29bf8:	mov	x0, x24
   29bfc:	mov	x2, #0x8                   	// #8
   29c00:	bl	c810 <mpfr_rand_raw@plt>
   29c04:	ldr	x4, [x24]
   29c08:	cbz	x4, 29d3c <mpfr_urandom@@Base+0x1e4>
   29c0c:	clz	x4, x4
   29c10:	mov	x0, #0xc000000000000000    	// #-4611686018427387904
   29c14:	sub	w4, w4, #0x38
   29c18:	cmp	x28, x0
   29c1c:	sub	x4, x28, w4, sxtw
   29c20:	csel	x28, x4, x28, ge  // ge = tcont
   29c24:	cmp	x20, #0x1
   29c28:	b.eq	29d88 <mpfr_urandom@@Base+0x230>  // b.none
   29c2c:	sub	x2, x20, #0x1
   29c30:	mov	x1, x19
   29c34:	mov	x0, x24
   29c38:	bl	c810 <mpfr_rand_raw@plt>
   29c3c:	ldr	x27, [x21]
   29c40:	sub	x27, x27, #0x1
   29c44:	asr	x27, x27, #6
   29c48:	add	x27, x27, #0x1
   29c4c:	lsl	x3, x27, #6
   29c50:	subs	x3, x3, x20
   29c54:	b.eq	29c68 <mpfr_urandom@@Base+0x110>  // b.none
   29c58:	mov	x2, x27
   29c5c:	mov	x1, x24
   29c60:	mov	x0, x24
   29c64:	bl	bcc0 <__gmpn_lshift@plt>
   29c68:	lsl	x27, x27, #3
   29c6c:	sub	x27, x27, #0x8
   29c70:	ldr	x0, [x24, x27]
   29c74:	orr	x0, x0, #0x8000000000000000
   29c78:	str	x0, [x24, x27]
   29c7c:	add	x0, sp, #0x78
   29c80:	mov	x1, x19
   29c84:	mov	x2, #0x1                   	// #1
   29c88:	bl	c810 <mpfr_rand_raw@plt>
   29c8c:	sub	w0, w23, #0x2
   29c90:	tst	w0, #0xfffffffd
   29c94:	ldr	x0, [sp, #120]
   29c98:	b.eq	29d78 <mpfr_urandom@@Base+0x220>  // b.none
   29c9c:	cmp	w23, #0x0
   29ca0:	and	w0, w0, #0x1
   29ca4:	csel	w0, w0, wzr, eq  // eq = none
   29ca8:	mov	w1, #0xffffffff            	// #-1
   29cac:	cbnz	w0, 29d78 <mpfr_urandom@@Base+0x220>
   29cb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29cb4:	ldr	x3, [x0, #2576]
   29cb8:	add	x0, x0, #0xa10
   29cbc:	blr	x3
   29cc0:	ldr	x2, [x21, #16]
   29cc4:	ldr	w3, [sp, #108]
   29cc8:	str	w3, [x22, x0]
   29ccc:	add	x3, x22, x0
   29cd0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29cd4:	ldr	x4, [x0, #2512]
   29cd8:	add	x0, x0, #0x9d0
   29cdc:	blr	x4
   29ce0:	str	x25, [x22, x0]
   29ce4:	add	x28, x28, x2
   29ce8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29cec:	ldr	x2, [x0, #2544]
   29cf0:	add	x0, x0, #0x9f0
   29cf4:	blr	x2
   29cf8:	str	x26, [x22, x0]
   29cfc:	cmp	x26, x28
   29d00:	str	x28, [x21, #16]
   29d04:	ccmp	x25, x28, #0x0, ge  // ge = tcont
   29d08:	b.le	29d4c <mpfr_urandom@@Base+0x1f4>
   29d0c:	mov	w2, w23
   29d10:	mov	x0, x21
   29d14:	bl	cb30 <mpfr_check_range@plt>
   29d18:	mov	w1, w0
   29d1c:	mov	w0, w1
   29d20:	ldp	x19, x20, [sp, #16]
   29d24:	ldp	x21, x22, [sp, #32]
   29d28:	ldp	x23, x24, [sp, #48]
   29d2c:	ldp	x25, x26, [sp, #64]
   29d30:	ldp	x27, x28, [sp, #80]
   29d34:	ldp	x29, x30, [sp], #128
   29d38:	ret
   29d3c:	cmp	x28, x27
   29d40:	sub	x0, x28, #0x8
   29d44:	csel	x28, x0, x28, ge  // ge = tcont
   29d48:	b	29bf4 <mpfr_urandom@@Base+0x9c>
   29d4c:	ldr	w0, [sp, #108]
   29d50:	ldp	x19, x20, [sp, #16]
   29d54:	orr	w24, w0, #0x8
   29d58:	str	w24, [x3]
   29d5c:	mov	w0, w1
   29d60:	ldp	x21, x22, [sp, #32]
   29d64:	ldp	x23, x24, [sp, #48]
   29d68:	ldp	x25, x26, [sp, #64]
   29d6c:	ldp	x27, x28, [sp, #80]
   29d70:	ldp	x29, x30, [sp], #128
   29d74:	ret
   29d78:	mov	x0, x21
   29d7c:	bl	c120 <mpfr_nextabove@plt>
   29d80:	mov	w1, #0x1                   	// #1
   29d84:	b	29cb0 <mpfr_urandom@@Base+0x158>
   29d88:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   29d8c:	str	x0, [x24]
   29d90:	b	29c7c <mpfr_urandom@@Base+0x124>
   29d94:	nop

0000000000029d98 <mpfr_rand_raw@@Base>:
   29d98:	stp	x29, x30, [sp, #-64]!
   29d9c:	cmp	x2, #0x0
   29da0:	mov	x29, sp
   29da4:	stp	x19, x20, [sp, #16]
   29da8:	stp	x21, x22, [sp, #32]
   29dac:	b.le	29e14 <mpfr_rand_raw@@Base+0x7c>
   29db0:	add	x21, sp, #0x30
   29db4:	mov	x19, x2
   29db8:	mov	x20, x0
   29dbc:	mov	x22, x1
   29dc0:	mov	x0, x21
   29dc4:	bl	bf90 <mpfr_mpz_init@plt>
   29dc8:	mov	x1, x22
   29dcc:	mov	x2, x19
   29dd0:	mov	x0, x21
   29dd4:	bl	cd00 <__gmpz_urandomb@plt>
   29dd8:	ldr	x1, [sp, #56]
   29ddc:	cmp	x1, x20
   29de0:	b.eq	29dfc <mpfr_rand_raw@@Base+0x64>  // b.none
   29de4:	sub	x19, x19, #0x1
   29de8:	mov	x0, x20
   29dec:	asr	x19, x19, #6
   29df0:	add	x2, x19, #0x1
   29df4:	lsl	x2, x2, #3
   29df8:	bl	ba10 <memcpy@plt>
   29dfc:	mov	x0, x21
   29e00:	bl	c170 <mpfr_mpz_clear@plt>
   29e04:	ldp	x19, x20, [sp, #16]
   29e08:	ldp	x21, x22, [sp, #32]
   29e0c:	ldp	x29, x30, [sp], #64
   29e10:	ret
   29e14:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   29e18:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   29e1c:	add	x2, x2, #0xd30
   29e20:	add	x0, x0, #0xd40
   29e24:	mov	w1, #0x26                  	// #38
   29e28:	bl	cb40 <mpfr_assert_fail@plt>
   29e2c:	nop

0000000000029e30 <mpfr_urandomb@@Base>:
   29e30:	stp	x29, x30, [sp, #-64]!
   29e34:	mov	w3, #0x1                   	// #1
   29e38:	mov	x29, sp
   29e3c:	ldr	x2, [x0]
   29e40:	stp	x19, x20, [sp, #16]
   29e44:	sub	x20, x2, #0x1
   29e48:	stp	x21, x22, [sp, #32]
   29e4c:	mov	x22, x0
   29e50:	asr	x20, x20, #6
   29e54:	str	x23, [sp, #48]
   29e58:	add	x20, x20, #0x1
   29e5c:	str	w3, [x0, #8]
   29e60:	ldr	x23, [x0, #24]
   29e64:	lsl	w21, w20, #6
   29e68:	sub	w21, w21, w2
   29e6c:	mov	x19, x20
   29e70:	mov	x0, x23
   29e74:	bl	c810 <mpfr_rand_raw@plt>
   29e78:	cbz	w21, 29e90 <mpfr_urandomb@@Base+0x60>
   29e7c:	mov	w3, w21
   29e80:	mov	x2, x20
   29e84:	mov	x1, x23
   29e88:	mov	x0, x23
   29e8c:	bl	bcc0 <__gmpn_lshift@plt>
   29e90:	sub	x2, x23, #0x8
   29e94:	mov	x1, #0x0                   	// #0
   29e98:	ldr	x3, [x2, x19, lsl #3]
   29e9c:	sub	x21, x20, x19
   29ea0:	cbnz	x3, 29ed0 <mpfr_urandomb@@Base+0xa0>
   29ea4:	sub	x1, x1, #0x40
   29ea8:	subs	x19, x19, #0x1
   29eac:	b.ne	29e98 <mpfr_urandomb@@Base+0x68>  // b.any
   29eb0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   29eb4:	str	x1, [x22, #16]
   29eb8:	mov	w0, #0x0                   	// #0
   29ebc:	ldp	x19, x20, [sp, #16]
   29ec0:	ldp	x21, x22, [sp, #32]
   29ec4:	ldr	x23, [sp, #48]
   29ec8:	ldp	x29, x30, [sp], #64
   29ecc:	ret
   29ed0:	mrs	x2, tpidr_el0
   29ed4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29ed8:	ldr	x4, [x0, #2512]
   29edc:	add	x0, x0, #0x9d0
   29ee0:	blr	x4
   29ee4:	clz	x4, x3
   29ee8:	sub	x1, x1, x4
   29eec:	mov	x3, x4
   29ef0:	ldr	x0, [x2, x0]
   29ef4:	cmp	x0, x1
   29ef8:	b.gt	29f3c <mpfr_urandomb@@Base+0x10c>
   29efc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29f00:	ldr	x4, [x0, #2544]
   29f04:	add	x0, x0, #0x9f0
   29f08:	blr	x4
   29f0c:	ldr	x0, [x2, x0]
   29f10:	cmp	x0, x1
   29f14:	b.lt	29f3c <mpfr_urandomb@@Base+0x10c>  // b.tstop
   29f18:	str	x1, [x22, #16]
   29f1c:	cbnz	x3, 29f80 <mpfr_urandomb@@Base+0x150>
   29f20:	cbnz	x21, 29fb0 <mpfr_urandomb@@Base+0x180>
   29f24:	mov	w0, #0x0                   	// #0
   29f28:	ldp	x19, x20, [sp, #16]
   29f2c:	ldp	x21, x22, [sp, #32]
   29f30:	ldr	x23, [sp, #48]
   29f34:	ldp	x29, x30, [sp], #64
   29f38:	ret
   29f3c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   29f40:	ldr	x1, [x0, #2576]
   29f44:	add	x0, x0, #0xa10
   29f48:	blr	x1
   29f4c:	add	x2, x2, x0
   29f50:	mov	x1, #0x2                   	// #2
   29f54:	mov	w0, #0x1                   	// #1
   29f58:	movk	x1, #0x8000, lsl #48
   29f5c:	str	x1, [x22, #16]
   29f60:	ldr	w1, [x2]
   29f64:	ldp	x19, x20, [sp, #16]
   29f68:	orr	w1, w1, #0x4
   29f6c:	str	w1, [x2]
   29f70:	ldp	x21, x22, [sp, #32]
   29f74:	ldr	x23, [sp, #48]
   29f78:	ldp	x29, x30, [sp], #64
   29f7c:	ret
   29f80:	lsl	x20, x21, #3
   29f84:	mov	x2, x19
   29f88:	add	x0, x23, x20
   29f8c:	mov	x1, x23
   29f90:	bl	bcc0 <__gmpn_lshift@plt>
   29f94:	cbz	x21, 29f24 <mpfr_urandomb@@Base+0xf4>
   29f98:	mov	x2, x20
   29f9c:	mov	x0, x23
   29fa0:	mov	w1, #0x0                   	// #0
   29fa4:	bl	c110 <memset@plt>
   29fa8:	mov	w0, #0x0                   	// #0
   29fac:	b	29f28 <mpfr_urandomb@@Base+0xf8>
   29fb0:	lsl	x20, x21, #3
   29fb4:	mov	x2, x19
   29fb8:	add	x0, x23, x20
   29fbc:	mov	x1, x23
   29fc0:	bl	bae0 <__gmpn_copyd@plt>
   29fc4:	mov	x2, x20
   29fc8:	mov	x0, x23
   29fcc:	mov	w1, #0x0                   	// #0
   29fd0:	bl	c110 <memset@plt>
   29fd4:	b	29fa8 <mpfr_urandomb@@Base+0x178>

0000000000029fd8 <mpfr_get_z_2exp@@Base>:
   29fd8:	stp	x29, x30, [sp, #-48]!
   29fdc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   29fe0:	mov	x29, sp
   29fe4:	stp	x19, x20, [sp, #16]
   29fe8:	mov	x20, x1
   29fec:	ldr	x1, [x1, #16]
   29ff0:	str	x21, [sp, #32]
   29ff4:	mov	x21, x0
   29ff8:	cmp	x1, x2
   29ffc:	b.le	2a080 <mpfr_get_z_2exp@@Base+0xa8>
   2a000:	ldr	x19, [x20]
   2a004:	mov	x1, #0x7fffffff            	// #2147483647
   2a008:	sub	x19, x19, #0x1
   2a00c:	asr	x19, x19, #6
   2a010:	add	x19, x19, #0x1
   2a014:	cmp	x19, x1
   2a018:	b.gt	2a128 <mpfr_get_z_2exp@@Base+0x150>
   2a01c:	lsl	x1, x19, #6
   2a020:	bl	c440 <__gmpz_realloc2@plt>
   2a024:	ldr	x2, [x20]
   2a028:	ldr	x0, [x21, #8]
   2a02c:	neg	w3, w2
   2a030:	ands	w3, w3, #0x3f
   2a034:	ldr	x1, [x20, #24]
   2a038:	b.eq	2a0c0 <mpfr_get_z_2exp@@Base+0xe8>  // b.none
   2a03c:	mov	x2, x19
   2a040:	bl	bce0 <__gmpn_rshift@plt>
   2a044:	ldr	x2, [x20]
   2a048:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   2a04c:	ldr	w3, [x20, #8]
   2a050:	ldr	x0, [x20, #16]
   2a054:	cmp	w3, #0x0
   2a058:	cneg	w19, w19, lt  // lt = tstop
   2a05c:	str	w19, [x21, #4]
   2a060:	add	x3, x0, x1
   2a064:	sub	x0, x0, x2
   2a068:	cmp	x3, x2
   2a06c:	b.cc	2a0d8 <mpfr_get_z_2exp@@Base+0x100>  // b.lo, b.ul, b.last
   2a070:	ldp	x19, x20, [sp, #16]
   2a074:	ldr	x21, [sp, #32]
   2a078:	ldp	x29, x30, [sp], #48
   2a07c:	ret
   2a080:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2a084:	mrs	x19, tpidr_el0
   2a088:	cmp	x1, x0
   2a08c:	b.ne	2a104 <mpfr_get_z_2exp@@Base+0x12c>  // b.any
   2a090:	mov	x0, x21
   2a094:	mov	x1, #0x0                   	// #0
   2a098:	bl	bcb0 <__gmpz_set_ui@plt>
   2a09c:	ldr	x21, [sp, #32]
   2a0a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a0a4:	ldr	x1, [x0, #2512]
   2a0a8:	add	x0, x0, #0x9d0
   2a0ac:	blr	x1
   2a0b0:	ldr	x0, [x19, x0]
   2a0b4:	ldp	x19, x20, [sp, #16]
   2a0b8:	ldp	x29, x30, [sp], #48
   2a0bc:	ret
   2a0c0:	cmp	x0, x1
   2a0c4:	b.eq	2a048 <mpfr_get_z_2exp@@Base+0x70>  // b.none
   2a0c8:	lsl	x2, x19, #3
   2a0cc:	bl	ba10 <memcpy@plt>
   2a0d0:	ldr	x2, [x20]
   2a0d4:	b	2a048 <mpfr_get_z_2exp@@Base+0x70>
   2a0d8:	mrs	x2, tpidr_el0
   2a0dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a0e0:	ldr	x3, [x0, #2576]
   2a0e4:	add	x0, x0, #0xa10
   2a0e8:	blr	x3
   2a0ec:	add	x2, x2, x0
   2a0f0:	mov	x0, x1
   2a0f4:	ldr	w1, [x2]
   2a0f8:	orr	w1, w1, #0x10
   2a0fc:	str	w1, [x2]
   2a100:	b	2a070 <mpfr_get_z_2exp@@Base+0x98>
   2a104:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a108:	ldr	x1, [x0, #2576]
   2a10c:	add	x0, x0, #0xa10
   2a110:	blr	x1
   2a114:	add	x0, x19, x0
   2a118:	ldr	w1, [x0]
   2a11c:	orr	w1, w1, #0x10
   2a120:	str	w1, [x0]
   2a124:	b	2a090 <mpfr_get_z_2exp@@Base+0xb8>
   2a128:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2a12c:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2a130:	add	x2, x2, #0xd50
   2a134:	add	x0, x0, #0xd68
   2a138:	mov	w1, #0x3c                  	// #60
   2a13c:	bl	cb40 <mpfr_assert_fail@plt>

000000000002a140 <mpfr_swap@@Base>:
   2a140:	ldr	x3, [x0]
   2a144:	ldr	x2, [x1]
   2a148:	str	x3, [x1]
   2a14c:	ldr	w3, [x0, #8]
   2a150:	str	x2, [x0]
   2a154:	ldr	w2, [x1, #8]
   2a158:	str	w3, [x1, #8]
   2a15c:	str	w2, [x0, #8]
   2a160:	ldr	x3, [x0, #16]
   2a164:	ldr	x2, [x1, #16]
   2a168:	str	x3, [x1, #16]
   2a16c:	str	x2, [x0, #16]
   2a170:	ldr	x3, [x0, #24]
   2a174:	ldr	x2, [x1, #24]
   2a178:	str	x3, [x1, #24]
   2a17c:	str	x2, [x0, #24]
   2a180:	ret
   2a184:	nop

000000000002a188 <mpfr_fac_ui@@Base>:
   2a188:	stp	x29, x30, [sp, #-176]!
   2a18c:	cmp	x1, #0x1
   2a190:	mov	x29, sp
   2a194:	stp	x25, x26, [sp, #64]
   2a198:	mov	w26, w2
   2a19c:	stp	x27, x28, [sp, #80]
   2a1a0:	b.ls	2a550 <mpfr_fac_ui@@Base+0x3c8>  // b.plast
   2a1a4:	stp	x23, x24, [sp, #48]
   2a1a8:	mov	x24, x0
   2a1ac:	sub	x0, x1, #0x1
   2a1b0:	mrs	x2, tpidr_el0
   2a1b4:	clz	x0, x0
   2a1b8:	stp	x21, x22, [sp, #32]
   2a1bc:	mov	x22, x1
   2a1c0:	mov	w1, #0x40                  	// #64
   2a1c4:	sub	w1, w1, w0
   2a1c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a1cc:	ldr	x3, [x0, #2576]
   2a1d0:	add	x0, x0, #0xa10
   2a1d4:	blr	x3
   2a1d8:	ldr	w0, [x2, x0]
   2a1dc:	add	x28, sp, #0x90
   2a1e0:	ldr	x4, [x24]
   2a1e4:	lsl	w1, w1, #1
   2a1e8:	str	w0, [sp, #108]
   2a1ec:	mov	x23, #0x40                  	// #64
   2a1f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a1f4:	ldr	x3, [x0, #2512]
   2a1f8:	add	x0, x0, #0x9d0
   2a1fc:	blr	x3
   2a200:	add	x3, x2, x0
   2a204:	ldr	x0, [x2, x0]
   2a208:	add	x1, x4, w1, sxtw
   2a20c:	str	x4, [sp, #136]
   2a210:	mov	x4, x2
   2a214:	add	x21, x1, #0x7
   2a218:	stp	x19, x20, [sp, #16]
   2a21c:	mov	w20, #0x1                   	// #1
   2a220:	str	x0, [sp, #120]
   2a224:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a228:	ldr	x1, [x0, #2544]
   2a22c:	add	x0, x0, #0x9f0
   2a230:	blr	x1
   2a234:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   2a238:	str	x1, [x3]
   2a23c:	ldr	x3, [x4, x0]
   2a240:	str	x2, [sp, #112]
   2a244:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2a248:	mov	x1, x21
   2a24c:	str	x2, [x4, x0]
   2a250:	mov	x0, x28
   2a254:	str	x3, [sp, #128]
   2a258:	bl	ca80 <mpfr_init2@plt>
   2a25c:	nop
   2a260:	mov	w3, w20
   2a264:	mov	x0, x28
   2a268:	mov	x2, #0x0                   	// #0
   2a26c:	mov	x1, #0x1                   	// #1
   2a270:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2a274:	mov	w19, w0
   2a278:	mov	x25, #0x2                   	// #2
   2a27c:	mov	x2, x25
   2a280:	mov	w3, w20
   2a284:	mov	x1, x28
   2a288:	mov	x0, x28
   2a28c:	add	x25, x25, #0x1
   2a290:	bl	ba50 <mpfr_mul_ui@plt>
   2a294:	mov	w27, w0
   2a298:	cbnz	w19, 2a2c8 <mpfr_fac_ui@@Base+0x140>
   2a29c:	cmp	x25, x22
   2a2a0:	b.hi	2a440 <mpfr_fac_ui@@Base+0x2b8>  // b.pmore
   2a2a4:	mov	x2, x25
   2a2a8:	mov	w19, w0
   2a2ac:	mov	w3, w20
   2a2b0:	mov	x1, x28
   2a2b4:	mov	x0, x28
   2a2b8:	add	x25, x25, #0x1
   2a2bc:	bl	ba50 <mpfr_mul_ui@plt>
   2a2c0:	mov	w27, w0
   2a2c4:	cbz	w19, 2a29c <mpfr_fac_ui@@Base+0x114>
   2a2c8:	cmp	x22, x25
   2a2cc:	b.cs	2a27c <mpfr_fac_ui@@Base+0xf4>  // b.hs, b.nlast
   2a2d0:	mov	w27, w19
   2a2d4:	subs	x2, x21, #0x1
   2a2d8:	b.eq	2a548 <mpfr_fac_ui@@Base+0x3c0>  // b.none
   2a2dc:	cmp	x21, #0x1
   2a2e0:	b.le	2a468 <mpfr_fac_ui@@Base+0x2e0>
   2a2e4:	clz	x0, x2
   2a2e8:	mov	w1, #0x40                  	// #64
   2a2ec:	sub	w0, w1, w0
   2a2f0:	sub	x2, x2, w0, sxtw
   2a2f4:	cbz	w27, 2a390 <mpfr_fac_ui@@Base+0x208>
   2a2f8:	ldr	x0, [sp, #160]
   2a2fc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2a300:	cmp	x0, x1
   2a304:	b.le	2a360 <mpfr_fac_ui@@Base+0x1d8>
   2a308:	ldp	x3, x1, [sp, #136]
   2a30c:	cmp	w26, #0x0
   2a310:	ldr	x0, [sp, #168]
   2a314:	sub	x1, x1, #0x1
   2a318:	cinc	x3, x3, eq  // eq = none
   2a31c:	asr	x1, x1, #6
   2a320:	add	x1, x1, #0x1
   2a324:	bl	c370 <mpfr_round_p@plt>
   2a328:	cbz	w0, 2a360 <mpfr_fac_ui@@Base+0x1d8>
   2a32c:	ldr	w3, [sp, #152]
   2a330:	mov	w2, w26
   2a334:	mov	x1, x28
   2a338:	mov	x0, x24
   2a33c:	bl	c6a0 <mpfr_set4@plt>
   2a340:	cmp	w27, #0x0
   2a344:	ccmp	w0, #0x0, #0x0, lt  // lt = tstop
   2a348:	b.le	2a4a4 <mpfr_fac_ui@@Base+0x31c>
   2a34c:	cmp	w27, #0x0
   2a350:	ccmp	w0, #0x0, #0x1, gt
   2a354:	b.ge	2a4a4 <mpfr_fac_ui@@Base+0x31c>  // b.tcont
   2a358:	mov	w0, #0x3                   	// #3
   2a35c:	sub	w20, w0, w20
   2a360:	mov	x0, #0xfffffffffffffeff    	// #-257
   2a364:	movk	x0, #0x7fff, lsl #48
   2a368:	sub	x0, x0, x21
   2a36c:	cmp	x0, x23
   2a370:	b.lt	2a450 <mpfr_fac_ui@@Base+0x2c8>  // b.tstop
   2a374:	add	x21, x21, x23
   2a378:	mov	x0, x28
   2a37c:	mov	x1, x21
   2a380:	add	x23, x21, x21, lsr #63
   2a384:	asr	x23, x23, #1
   2a388:	bl	bed0 <mpfr_set_prec@plt>
   2a38c:	b	2a260 <mpfr_fac_ui@@Base+0xd8>
   2a390:	ldr	w3, [sp, #152]
   2a394:	mov	w2, w26
   2a398:	mov	x1, x28
   2a39c:	mov	x0, x24
   2a3a0:	bl	c6a0 <mpfr_set4@plt>
   2a3a4:	mov	w27, w0
   2a3a8:	mov	x0, x28
   2a3ac:	bl	c070 <mpfr_clear@plt>
   2a3b0:	ldr	w3, [sp, #108]
   2a3b4:	ldr	x1, [x24, #16]
   2a3b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a3bc:	ldr	x2, [x0, #2576]
   2a3c0:	add	x0, x0, #0xa10
   2a3c4:	blr	x2
   2a3c8:	ldr	x2, [sp, #112]
   2a3cc:	str	w3, [x2, x0]
   2a3d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a3d4:	ldr	x3, [x0, #2512]
   2a3d8:	add	x0, x0, #0x9d0
   2a3dc:	blr	x3
   2a3e0:	ldr	x3, [sp, #120]
   2a3e4:	str	x3, [x2, x0]
   2a3e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a3ec:	ldr	x4, [x0, #2544]
   2a3f0:	add	x0, x0, #0x9f0
   2a3f4:	blr	x4
   2a3f8:	ldr	x4, [sp, #128]
   2a3fc:	str	x4, [x2, x0]
   2a400:	cmp	x4, x1
   2a404:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2a408:	b.le	2a480 <mpfr_fac_ui@@Base+0x2f8>
   2a40c:	mov	w2, w26
   2a410:	mov	w1, w27
   2a414:	mov	x0, x24
   2a418:	bl	cb30 <mpfr_check_range@plt>
   2a41c:	mov	w27, w0
   2a420:	mov	w0, w27
   2a424:	ldp	x19, x20, [sp, #16]
   2a428:	ldp	x21, x22, [sp, #32]
   2a42c:	ldp	x23, x24, [sp, #48]
   2a430:	ldp	x25, x26, [sp, #64]
   2a434:	ldp	x27, x28, [sp, #80]
   2a438:	ldp	x29, x30, [sp], #176
   2a43c:	ret
   2a440:	subs	x2, x21, #0x1
   2a444:	b.ne	2a2dc <mpfr_fac_ui@@Base+0x154>  // b.any
   2a448:	mov	x2, #0x0                   	// #0
   2a44c:	b	2a2f4 <mpfr_fac_ui@@Base+0x16c>
   2a450:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2a454:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2a458:	add	x2, x2, #0x470
   2a45c:	add	x0, x0, #0xd88
   2a460:	mov	w1, #0x64                  	// #100
   2a464:	bl	cb40 <mpfr_assert_fail@plt>
   2a468:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2a46c:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2a470:	add	x2, x2, #0xd78
   2a474:	add	x0, x0, #0xd88
   2a478:	mov	w1, #0x4d                  	// #77
   2a47c:	bl	cb40 <mpfr_assert_fail@plt>
   2a480:	cbnz	w27, 2a508 <mpfr_fac_ui@@Base+0x380>
   2a484:	mov	w0, w27
   2a488:	ldp	x19, x20, [sp, #16]
   2a48c:	ldp	x21, x22, [sp, #32]
   2a490:	ldp	x23, x24, [sp, #48]
   2a494:	ldp	x25, x26, [sp, #64]
   2a498:	ldp	x27, x28, [sp, #80]
   2a49c:	ldp	x29, x30, [sp], #176
   2a4a0:	ret
   2a4a4:	mov	x0, x28
   2a4a8:	bl	c070 <mpfr_clear@plt>
   2a4ac:	ldr	w3, [sp, #108]
   2a4b0:	ldr	x1, [x24, #16]
   2a4b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a4b8:	ldr	x2, [x0, #2576]
   2a4bc:	add	x0, x0, #0xa10
   2a4c0:	blr	x2
   2a4c4:	ldr	x2, [sp, #112]
   2a4c8:	str	w3, [x2, x0]
   2a4cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a4d0:	ldr	x3, [x0, #2512]
   2a4d4:	add	x0, x0, #0x9d0
   2a4d8:	blr	x3
   2a4dc:	ldr	x3, [sp, #120]
   2a4e0:	str	x3, [x2, x0]
   2a4e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a4e8:	ldr	x4, [x0, #2544]
   2a4ec:	add	x0, x0, #0x9f0
   2a4f0:	blr	x4
   2a4f4:	ldr	x4, [sp, #128]
   2a4f8:	str	x4, [x2, x0]
   2a4fc:	cmp	x4, x1
   2a500:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2a504:	b.gt	2a40c <mpfr_fac_ui@@Base+0x284>
   2a508:	ldr	w0, [sp, #108]
   2a50c:	ldp	x19, x20, [sp, #16]
   2a510:	orr	w1, w0, #0x8
   2a514:	ldp	x21, x22, [sp, #32]
   2a518:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a51c:	ldr	x2, [x0, #2576]
   2a520:	add	x0, x0, #0xa10
   2a524:	blr	x2
   2a528:	ldr	x2, [sp, #112]
   2a52c:	ldp	x23, x24, [sp, #48]
   2a530:	str	w1, [x2, x0]
   2a534:	mov	w0, w27
   2a538:	ldp	x25, x26, [sp, #64]
   2a53c:	ldp	x27, x28, [sp, #80]
   2a540:	ldp	x29, x30, [sp], #176
   2a544:	ret
   2a548:	mov	x2, #0x0                   	// #0
   2a54c:	b	2a2f8 <mpfr_fac_ui@@Base+0x170>
   2a550:	mov	w3, w2
   2a554:	mov	x1, #0x1                   	// #1
   2a558:	mov	x2, #0x0                   	// #0
   2a55c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2a560:	mov	w27, w0
   2a564:	mov	w0, w27
   2a568:	ldp	x25, x26, [sp, #64]
   2a56c:	ldp	x27, x28, [sp, #80]
   2a570:	ldp	x29, x30, [sp], #176
   2a574:	ret

000000000002a578 <mpfr_cosh@@Base>:
   2a578:	stp	x29, x30, [sp, #-368]!
   2a57c:	mov	x29, sp
   2a580:	stp	x23, x24, [sp, #48]
   2a584:	mov	x23, x1
   2a588:	ldr	x1, [x1, #16]
   2a58c:	stp	x19, x20, [sp, #16]
   2a590:	mov	x20, x0
   2a594:	stp	x21, x22, [sp, #32]
   2a598:	mov	w21, w2
   2a59c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2a5a0:	cmp	x1, x2
   2a5a4:	b.le	2a980 <mpfr_cosh@@Base+0x408>
   2a5a8:	stp	x25, x26, [sp, #64]
   2a5ac:	mrs	x25, tpidr_el0
   2a5b0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a5b4:	ldr	x2, [x0, #2576]
   2a5b8:	add	x0, x0, #0xa10
   2a5bc:	blr	x2
   2a5c0:	add	x6, x25, x0
   2a5c4:	stp	x27, x28, [sp, #80]
   2a5c8:	ldr	w0, [x25, x0]
   2a5cc:	str	w0, [sp, #100]
   2a5d0:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   2a5d4:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   2a5d8:	neg	x2, x1, lsl #1
   2a5dc:	ldr	x22, [x20]
   2a5e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a5e4:	ldr	x5, [x0, #2512]
   2a5e8:	add	x0, x0, #0x9d0
   2a5ec:	blr	x5
   2a5f0:	add	x28, x25, x0
   2a5f4:	ldr	x0, [x25, x0]
   2a5f8:	str	x0, [sp, #104]
   2a5fc:	str	x4, [x28]
   2a600:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a604:	ldr	x5, [x0, #2544]
   2a608:	add	x0, x0, #0x9f0
   2a60c:	blr	x5
   2a610:	add	x27, x25, x0
   2a614:	ldr	x26, [x25, x0]
   2a618:	cmp	x2, #0x0
   2a61c:	str	x3, [x27]
   2a620:	b.le	2a630 <mpfr_cosh@@Base+0xb8>
   2a624:	add	x0, x22, #0x1
   2a628:	cmp	x2, x0
   2a62c:	b.hi	2a84c <mpfr_cosh@@Base+0x2d4>  // b.pmore
   2a630:	ldr	x0, [x23]
   2a634:	str	x0, [sp, #128]
   2a638:	ldr	x0, [x23, #24]
   2a63c:	mov	w2, #0x1                   	// #1
   2a640:	str	w2, [sp, #136]
   2a644:	cmp	x22, #0x1
   2a648:	str	x1, [sp, #144]
   2a64c:	add	x1, x22, #0x3
   2a650:	str	x0, [sp, #152]
   2a654:	b.eq	2a9b0 <mpfr_cosh@@Base+0x438>  // b.none
   2a658:	b.le	2aa28 <mpfr_cosh@@Base+0x4b0>
   2a65c:	sub	x0, x22, #0x1
   2a660:	mov	w19, #0x40                  	// #64
   2a664:	clz	x0, x0
   2a668:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   2a66c:	sub	w0, w19, w0
   2a670:	add	x19, x1, w0, sxtw
   2a674:	cmp	x19, x2
   2a678:	b.ge	2aa24 <mpfr_cosh@@Base+0x4ac>  // b.tcont
   2a67c:	sub	x28, x19, #0x1
   2a680:	asr	x28, x28, #6
   2a684:	add	x28, x28, #0x1
   2a688:	lsl	x0, x28, #1
   2a68c:	cmp	x0, #0x10
   2a690:	b.gt	2a8d4 <mpfr_cosh@@Base+0x35c>
   2a694:	add	x1, sp, #0xf0
   2a698:	stp	xzr, x1, [sp, #224]
   2a69c:	mov	x0, x1
   2a6a0:	add	x27, sp, #0x80
   2a6a4:	add	x23, sp, #0xc0
   2a6a8:	add	x24, sp, #0xa0
   2a6ac:	mov	w2, #0x1                   	// #1
   2a6b0:	add	x1, x0, x28, lsl #3
   2a6b4:	mov	x3, #0x40                  	// #64
   2a6b8:	str	x3, [sp, #112]
   2a6bc:	str	x19, [sp, #160]
   2a6c0:	str	w2, [sp, #168]
   2a6c4:	stp	x0, x19, [sp, #184]
   2a6c8:	str	w2, [sp, #200]
   2a6cc:	str	x1, [sp, #216]
   2a6d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a6d4:	ldr	x1, [x0, #2576]
   2a6d8:	add	x0, x0, #0xa10
   2a6dc:	blr	x1
   2a6e0:	add	x28, x25, x0
   2a6e4:	mov	x1, x27
   2a6e8:	mov	w2, #0x3                   	// #3
   2a6ec:	str	wzr, [x25, x0]
   2a6f0:	mov	x0, x23
   2a6f4:	bl	c750 <mpfr_exp@plt>
   2a6f8:	ldr	w0, [x28]
   2a6fc:	tbnz	w0, #1, 2aa40 <mpfr_cosh@@Base+0x4c8>
   2a700:	mov	x2, x23
   2a704:	mov	w3, #0x2                   	// #2
   2a708:	mov	x1, #0x1                   	// #1
   2a70c:	mov	x0, x24
   2a710:	bl	c2f0 <mpfr_ui_div@plt>
   2a714:	mov	x2, x24
   2a718:	mov	x1, x23
   2a71c:	mov	w3, #0x2                   	// #2
   2a720:	mov	x0, x24
   2a724:	bl	c1a0 <mpfr_add@plt>
   2a728:	mov	x1, x24
   2a72c:	mov	x2, #0x1                   	// #1
   2a730:	mov	x0, x24
   2a734:	mov	w3, #0x0                   	// #0
   2a738:	bl	c8f0 <mpfr_div_2ui@plt>
   2a73c:	ldr	x1, [sp, #176]
   2a740:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2a744:	sub	x2, x19, #0x3
   2a748:	cmp	x1, x0
   2a74c:	b.le	2a8e8 <mpfr_cosh@@Base+0x370>
   2a750:	ldr	x1, [sp, #160]
   2a754:	cmp	w21, #0x0
   2a758:	ldr	x0, [sp, #184]
   2a75c:	sub	x1, x1, #0x1
   2a760:	cinc	x3, x22, eq  // eq = none
   2a764:	asr	x1, x1, #6
   2a768:	add	x1, x1, #0x1
   2a76c:	bl	c370 <mpfr_round_p@plt>
   2a770:	cbz	w0, 2a8e8 <mpfr_cosh@@Base+0x370>
   2a774:	ldr	w3, [sp, #168]
   2a778:	mov	x1, x24
   2a77c:	mov	w2, w21
   2a780:	mov	x0, x20
   2a784:	bl	c6a0 <mpfr_set4@plt>
   2a788:	mov	w19, w0
   2a78c:	ldr	x1, [sp, #224]
   2a790:	cbnz	x1, 2a840 <mpfr_cosh@@Base+0x2c8>
   2a794:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a798:	ldr	x1, [x0, #2576]
   2a79c:	add	x0, x0, #0xa10
   2a7a0:	blr	x1
   2a7a4:	ldr	w1, [sp, #100]
   2a7a8:	str	w1, [x25, x0]
   2a7ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a7b0:	ldr	x2, [x0, #2512]
   2a7b4:	add	x0, x0, #0x9d0
   2a7b8:	blr	x2
   2a7bc:	ldr	x1, [x20, #16]
   2a7c0:	ldr	x2, [sp, #104]
   2a7c4:	str	x2, [x25, x0]
   2a7c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a7cc:	ldr	x3, [x0, #2544]
   2a7d0:	add	x0, x0, #0x9f0
   2a7d4:	blr	x3
   2a7d8:	str	x26, [x25, x0]
   2a7dc:	cmp	x26, x1
   2a7e0:	ccmp	x2, x1, #0x0, ge  // ge = tcont
   2a7e4:	b.le	2a81c <mpfr_cosh@@Base+0x2a4>
   2a7e8:	mov	w1, w19
   2a7ec:	mov	w2, w21
   2a7f0:	mov	x0, x20
   2a7f4:	bl	cb30 <mpfr_check_range@plt>
   2a7f8:	ldp	x25, x26, [sp, #64]
   2a7fc:	mov	w19, w0
   2a800:	ldp	x27, x28, [sp, #80]
   2a804:	mov	w0, w19
   2a808:	ldp	x19, x20, [sp, #16]
   2a80c:	ldp	x21, x22, [sp, #32]
   2a810:	ldp	x23, x24, [sp, #48]
   2a814:	ldp	x29, x30, [sp], #368
   2a818:	ret
   2a81c:	cbnz	w19, 2a898 <mpfr_cosh@@Base+0x320>
   2a820:	mov	w0, w19
   2a824:	ldp	x19, x20, [sp, #16]
   2a828:	ldp	x21, x22, [sp, #32]
   2a82c:	ldp	x23, x24, [sp, #48]
   2a830:	ldp	x25, x26, [sp, #64]
   2a834:	ldp	x27, x28, [sp, #80]
   2a838:	ldp	x29, x30, [sp], #368
   2a83c:	ret
   2a840:	ldr	x0, [sp, #232]
   2a844:	bl	cc20 <mpfr_free_func@plt>
   2a848:	b	2a794 <mpfr_cosh@@Base+0x21c>
   2a84c:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   2a850:	mov	w4, w21
   2a854:	mov	x0, x20
   2a858:	mov	w3, #0x1                   	// #1
   2a85c:	ldr	x1, [x1, #3928]
   2a860:	str	x6, [sp, #112]
   2a864:	bl	c540 <mpfr_round_near_x@plt>
   2a868:	mov	w19, w0
   2a86c:	ldr	x6, [sp, #112]
   2a870:	cbz	w0, 2a9bc <mpfr_cosh@@Base+0x444>
   2a874:	ldr	w1, [sp, #100]
   2a878:	ldr	x0, [x20, #16]
   2a87c:	str	w1, [x6]
   2a880:	ldr	x1, [sp, #104]
   2a884:	str	x26, [x27]
   2a888:	str	x1, [x28]
   2a88c:	cmp	x26, x0
   2a890:	ccmp	x1, x0, #0x0, ge  // ge = tcont
   2a894:	b.gt	2a7e8 <mpfr_cosh@@Base+0x270>
   2a898:	ldr	w0, [sp, #100]
   2a89c:	ldp	x27, x28, [sp, #80]
   2a8a0:	orr	w24, w0, #0x8
   2a8a4:	ldp	x21, x22, [sp, #32]
   2a8a8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a8ac:	ldr	x1, [x0, #2576]
   2a8b0:	add	x0, x0, #0xa10
   2a8b4:	blr	x1
   2a8b8:	str	w24, [x25, x0]
   2a8bc:	mov	w0, w19
   2a8c0:	ldp	x19, x20, [sp, #16]
   2a8c4:	ldp	x23, x24, [sp, #48]
   2a8c8:	ldp	x25, x26, [sp, #64]
   2a8cc:	ldp	x29, x30, [sp], #368
   2a8d0:	ret
   2a8d4:	lsl	x0, x28, #4
   2a8d8:	str	x0, [sp, #224]
   2a8dc:	bl	ccf0 <mpfr_allocate_func@plt>
   2a8e0:	str	x0, [sp, #232]
   2a8e4:	b	2a6a0 <mpfr_cosh@@Base+0x128>
   2a8e8:	ldr	x1, [sp, #112]
   2a8ec:	mov	x0, #0xfffffffffffffeff    	// #-257
   2a8f0:	movk	x0, #0x7fff, lsl #48
   2a8f4:	sub	x0, x0, x19
   2a8f8:	cmp	x0, x1
   2a8fc:	b.lt	2a9c8 <mpfr_cosh@@Base+0x450>  // b.tstop
   2a900:	add	x19, x19, x1
   2a904:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2a908:	cmp	x19, x0
   2a90c:	add	x28, x19, x19, lsr #63
   2a910:	ldr	x1, [sp, #224]
   2a914:	asr	x0, x28, #1
   2a918:	str	x0, [sp, #112]
   2a91c:	b.ge	2aa24 <mpfr_cosh@@Base+0x4ac>  // b.tcont
   2a920:	sub	x3, x19, #0x1
   2a924:	asr	x3, x3, #6
   2a928:	add	x3, x3, #0x1
   2a92c:	str	x3, [sp, #120]
   2a930:	lsl	x2, x3, #4
   2a934:	str	x2, [sp, #224]
   2a938:	cbz	x1, 2a96c <mpfr_cosh@@Base+0x3f4>
   2a93c:	ldr	x0, [sp, #232]
   2a940:	bl	c1c0 <mpfr_reallocate_func@plt>
   2a944:	str	x0, [sp, #232]
   2a948:	ldr	x3, [sp, #120]
   2a94c:	mov	w1, #0x1                   	// #1
   2a950:	add	x3, x0, x3, lsl #3
   2a954:	str	x19, [sp, #160]
   2a958:	str	w1, [sp, #168]
   2a95c:	stp	x0, x19, [sp, #184]
   2a960:	str	w1, [sp, #200]
   2a964:	str	x3, [sp, #216]
   2a968:	b	2a6d0 <mpfr_cosh@@Base+0x158>
   2a96c:	mov	x0, x2
   2a970:	bl	ccf0 <mpfr_allocate_func@plt>
   2a974:	str	x0, [sp, #232]
   2a978:	ldr	x3, [sp, #120]
   2a97c:	b	2a94c <mpfr_cosh@@Base+0x3d4>
   2a980:	mov	x3, #0x2                   	// #2
   2a984:	movk	x3, #0x8000, lsl #48
   2a988:	cmp	x1, x3
   2a98c:	b.eq	2a9f4 <mpfr_cosh@@Base+0x47c>  // b.none
   2a990:	cmp	x1, x2
   2a994:	b.eq	2a9e0 <mpfr_cosh@@Base+0x468>  // b.none
   2a998:	mov	w3, w21
   2a99c:	mov	x2, #0x0                   	// #0
   2a9a0:	mov	x1, #0x1                   	// #1
   2a9a4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2a9a8:	mov	w19, w0
   2a9ac:	b	2a804 <mpfr_cosh@@Base+0x28c>
   2a9b0:	mov	x28, x22
   2a9b4:	mov	x19, #0x4                   	// #4
   2a9b8:	b	2a694 <mpfr_cosh@@Base+0x11c>
   2a9bc:	ldr	x22, [x20]
   2a9c0:	ldr	x1, [x23, #16]
   2a9c4:	b	2a630 <mpfr_cosh@@Base+0xb8>
   2a9c8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2a9cc:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2a9d0:	add	x2, x2, #0x470
   2a9d4:	add	x0, x0, #0xd98
   2a9d8:	mov	w1, #0x76                  	// #118
   2a9dc:	bl	cb40 <mpfr_assert_fail@plt>
   2a9e0:	mov	w0, #0x1                   	// #1
   2a9e4:	mov	w19, #0x0                   	// #0
   2a9e8:	str	w0, [x20, #8]
   2a9ec:	str	x1, [x20, #16]
   2a9f0:	b	2a804 <mpfr_cosh@@Base+0x28c>
   2a9f4:	mrs	x2, tpidr_el0
   2a9f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2a9fc:	ldr	x3, [x0, #2576]
   2aa00:	add	x0, x0, #0xa10
   2aa04:	blr	x3
   2aa08:	add	x0, x2, x0
   2aa0c:	str	x1, [x20, #16]
   2aa10:	mov	w19, #0x0                   	// #0
   2aa14:	ldr	w1, [x0]
   2aa18:	orr	w1, w1, #0x4
   2aa1c:	str	w1, [x0]
   2aa20:	b	2a804 <mpfr_cosh@@Base+0x28c>
   2aa24:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2aa28:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2aa2c:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2aa30:	add	x2, x2, #0x458
   2aa34:	add	x0, x0, #0xd98
   2aa38:	mov	w1, #0x53                  	// #83
   2aa3c:	bl	cb40 <mpfr_assert_fail@plt>
   2aa40:	mov	w1, w21
   2aa44:	mov	x0, x20
   2aa48:	mov	w2, #0x1                   	// #1
   2aa4c:	bl	bf40 <mpfr_overflow@plt>
   2aa50:	ldr	w1, [sp, #100]
   2aa54:	mov	w19, w0
   2aa58:	orr	w1, w1, #0x2
   2aa5c:	str	w1, [sp, #100]
   2aa60:	b	2a78c <mpfr_cosh@@Base+0x214>
   2aa64:	nop

000000000002aa68 <mpfr_sinh@@Base>:
   2aa68:	stp	x29, x30, [sp, #-368]!
   2aa6c:	mov	x29, sp
   2aa70:	ldr	x3, [x1, #16]
   2aa74:	stp	x19, x20, [sp, #16]
   2aa78:	stp	x21, x22, [sp, #32]
   2aa7c:	mov	x22, x1
   2aa80:	mov	x21, x0
   2aa84:	stp	x23, x24, [sp, #48]
   2aa88:	mov	w23, w2
   2aa8c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2aa90:	cmp	x3, x2
   2aa94:	b.le	2aefc <mpfr_sinh@@Base+0x494>
   2aa98:	neg	x2, x3, lsl #1
   2aa9c:	cmp	x2, #0x0
   2aaa0:	ldr	x5, [x0]
   2aaa4:	b.le	2aab8 <mpfr_sinh@@Base+0x50>
   2aaa8:	add	x2, x2, #0x2
   2aaac:	add	x4, x5, #0x1
   2aab0:	cmp	x4, x2
   2aab4:	b.cc	2aed4 <mpfr_sinh@@Base+0x46c>  // b.lo, b.ul, b.last
   2aab8:	stp	x25, x26, [sp, #64]
   2aabc:	stp	x27, x28, [sp, #80]
   2aac0:	mrs	x20, tpidr_el0
   2aac4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2aac8:	ldr	x1, [x0, #2576]
   2aacc:	add	x0, x0, #0xa10
   2aad0:	blr	x1
   2aad4:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   2aad8:	ldr	x4, [x22]
   2aadc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2aae0:	ldr	w0, [x20, x0]
   2aae4:	mov	w8, #0x1                   	// #1
   2aae8:	str	w0, [sp, #108]
   2aaec:	str	x4, [sp, #128]
   2aaf0:	str	w8, [sp, #136]
   2aaf4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2aaf8:	ldr	x2, [x0, #2512]
   2aafc:	add	x0, x0, #0x9d0
   2ab00:	blr	x2
   2ab04:	add	x2, x20, x0
   2ab08:	ldr	x0, [x20, x0]
   2ab0c:	str	x0, [sp, #112]
   2ab10:	str	x6, [x2]
   2ab14:	str	x3, [sp, #144]
   2ab18:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2ab1c:	ldr	x7, [x0, #2544]
   2ab20:	add	x0, x0, #0x9f0
   2ab24:	blr	x7
   2ab28:	ldr	x2, [x20, x0]
   2ab2c:	cmp	x4, x5
   2ab30:	ldr	x7, [x22, #24]
   2ab34:	str	x1, [x20, x0]
   2ab38:	str	x2, [sp, #120]
   2ab3c:	csel	x4, x4, x5, ge  // ge = tcont
   2ab40:	str	x7, [sp, #152]
   2ab44:	cmp	x4, #0x1
   2ab48:	b.eq	2af2c <mpfr_sinh@@Base+0x4c4>  // b.none
   2ab4c:	b.le	2afbc <mpfr_sinh@@Base+0x554>
   2ab50:	sub	x1, x4, #0x1
   2ab54:	mov	w0, #0x40                  	// #64
   2ab58:	clz	x1, x1
   2ab5c:	sub	w0, w0, w1
   2ab60:	add	x4, x4, w0, sxtw
   2ab64:	add	x26, x4, #0x4
   2ab68:	tbnz	x3, #63, 2aeb8 <mpfr_sinh@@Base+0x450>
   2ab6c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2ab70:	cmp	x26, x0
   2ab74:	b.ge	2afd4 <mpfr_sinh@@Base+0x56c>  // b.tcont
   2ab78:	sub	x19, x26, #0x1
   2ab7c:	asr	x19, x19, #6
   2ab80:	add	x19, x19, #0x1
   2ab84:	lsl	x0, x19, #1
   2ab88:	cmp	x0, #0x10
   2ab8c:	b.gt	2aec0 <mpfr_sinh@@Base+0x458>
   2ab90:	add	x1, sp, #0xf0
   2ab94:	stp	xzr, x1, [sp, #224]
   2ab98:	mov	x0, x1
   2ab9c:	add	x28, sp, #0x80
   2aba0:	add	x27, sp, #0xa0
   2aba4:	add	x24, sp, #0xc0
   2aba8:	add	x19, x0, x19, lsl #3
   2abac:	mov	w1, #0x1                   	// #1
   2abb0:	mov	x25, #0x40                  	// #64
   2abb4:	str	w1, [sp, #168]
   2abb8:	mov	w2, #0x3                   	// #3
   2abbc:	stp	x0, x26, [sp, #184]
   2abc0:	str	w1, [sp, #200]
   2abc4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2abc8:	ldr	x1, [x0, #2576]
   2abcc:	add	x0, x0, #0xa10
   2abd0:	blr	x1
   2abd4:	str	x19, [sp, #216]
   2abd8:	add	x19, x20, x0
   2abdc:	mov	x1, x28
   2abe0:	str	wzr, [x20, x0]
   2abe4:	mov	x0, x27
   2abe8:	str	x26, [sp, #160]
   2abec:	bl	c750 <mpfr_exp@plt>
   2abf0:	ldr	w0, [x19]
   2abf4:	tbnz	w0, #1, 2ad74 <mpfr_sinh@@Base+0x30c>
   2abf8:	mov	x2, x27
   2abfc:	mov	w3, #0x2                   	// #2
   2ac00:	mov	x1, #0x1                   	// #1
   2ac04:	mov	x0, x24
   2ac08:	ldr	x19, [sp, #176]
   2ac0c:	bl	c2f0 <mpfr_ui_div@plt>
   2ac10:	mov	x2, x24
   2ac14:	mov	x1, x27
   2ac18:	mov	w3, #0x0                   	// #0
   2ac1c:	mov	x0, x27
   2ac20:	bl	bb70 <mpfr_sub@plt>
   2ac24:	mov	x1, x27
   2ac28:	mov	x0, x27
   2ac2c:	mov	w3, #0x0                   	// #0
   2ac30:	mov	x2, #0x1                   	// #1
   2ac34:	bl	c8f0 <mpfr_div_2ui@plt>
   2ac38:	ldr	x0, [sp, #176]
   2ac3c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2ac40:	cmp	x0, x1
   2ac44:	b.eq	2ae30 <mpfr_sinh@@Base+0x3c8>  // b.none
   2ac48:	sub	x19, x19, x0
   2ac4c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2ac50:	adds	x19, x19, #0x2
   2ac54:	csel	x19, x19, xzr, pl  // pl = nfrst
   2ac58:	cmp	x0, x1
   2ac5c:	add	x19, x19, #0x1
   2ac60:	sub	x19, x26, x19
   2ac64:	b.le	2ae34 <mpfr_sinh@@Base+0x3cc>
   2ac68:	ldr	x1, [sp, #160]
   2ac6c:	cmp	w23, #0x0
   2ac70:	ldr	x0, [sp, #184]
   2ac74:	sub	x1, x1, #0x1
   2ac78:	ldr	x3, [x21]
   2ac7c:	asr	x1, x1, #6
   2ac80:	mov	x2, x19
   2ac84:	add	x1, x1, #0x1
   2ac88:	cinc	x3, x3, eq  // eq = none
   2ac8c:	bl	c370 <mpfr_round_p@plt>
   2ac90:	cbz	w0, 2ae34 <mpfr_sinh@@Base+0x3cc>
   2ac94:	ldr	w3, [x22, #8]
   2ac98:	mov	x1, x27
   2ac9c:	mov	w2, w23
   2aca0:	mov	x0, x21
   2aca4:	bl	c6a0 <mpfr_set4@plt>
   2aca8:	mov	w19, w0
   2acac:	ldr	x1, [sp, #224]
   2acb0:	cbnz	x1, 2ae98 <mpfr_sinh@@Base+0x430>
   2acb4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2acb8:	ldr	x1, [x0, #2576]
   2acbc:	add	x0, x0, #0xa10
   2acc0:	blr	x1
   2acc4:	add	x2, x20, x0
   2acc8:	ldr	w1, [sp, #108]
   2accc:	str	w1, [x20, x0]
   2acd0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2acd4:	ldr	x3, [x0, #2512]
   2acd8:	add	x0, x0, #0x9d0
   2acdc:	blr	x3
   2ace0:	ldr	x3, [sp, #112]
   2ace4:	str	x3, [x20, x0]
   2ace8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2acec:	ldr	x4, [x0, #2544]
   2acf0:	add	x0, x0, #0x9f0
   2acf4:	blr	x4
   2acf8:	ldr	x1, [x21, #16]
   2acfc:	ldr	x4, [sp, #120]
   2ad00:	str	x4, [x20, x0]
   2ad04:	cmp	x4, x1
   2ad08:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2ad0c:	b.le	2ad44 <mpfr_sinh@@Base+0x2dc>
   2ad10:	mov	w1, w19
   2ad14:	mov	w2, w23
   2ad18:	mov	x0, x21
   2ad1c:	bl	cb30 <mpfr_check_range@plt>
   2ad20:	mov	w19, w0
   2ad24:	ldp	x25, x26, [sp, #64]
   2ad28:	ldp	x27, x28, [sp, #80]
   2ad2c:	mov	w0, w19
   2ad30:	ldp	x19, x20, [sp, #16]
   2ad34:	ldp	x21, x22, [sp, #32]
   2ad38:	ldp	x23, x24, [sp, #48]
   2ad3c:	ldp	x29, x30, [sp], #368
   2ad40:	ret
   2ad44:	cbz	w19, 2ad24 <mpfr_sinh@@Base+0x2bc>
   2ad48:	ldr	w0, [sp, #108]
   2ad4c:	ldp	x25, x26, [sp, #64]
   2ad50:	orr	w0, w0, #0x8
   2ad54:	ldp	x27, x28, [sp, #80]
   2ad58:	str	w0, [x2]
   2ad5c:	mov	w0, w19
   2ad60:	ldp	x19, x20, [sp, #16]
   2ad64:	ldp	x21, x22, [sp, #32]
   2ad68:	ldp	x23, x24, [sp, #48]
   2ad6c:	ldp	x29, x30, [sp], #368
   2ad70:	ret
   2ad74:	mov	w3, #0x3                   	// #3
   2ad78:	mov	x1, x28
   2ad7c:	mov	x2, #0x1                   	// #1
   2ad80:	mov	x0, x24
   2ad84:	bl	c8f0 <mpfr_div_2ui@plt>
   2ad88:	str	wzr, [x19]
   2ad8c:	mov	x1, x24
   2ad90:	mov	x0, x27
   2ad94:	mov	w2, #0x3                   	// #3
   2ad98:	bl	baf0 <mpfr_cosh@plt>
   2ad9c:	ldr	w0, [x19]
   2ada0:	tbnz	w0, #1, 2af98 <mpfr_sinh@@Base+0x530>
   2ada4:	mov	x1, x24
   2ada8:	mov	w2, #0x3                   	// #3
   2adac:	mov	x0, x24
   2adb0:	bl	2aa68 <mpfr_sinh@@Base>
   2adb4:	mov	x2, x24
   2adb8:	mov	x1, x27
   2adbc:	mov	x0, x27
   2adc0:	mov	w3, #0x3                   	// #3
   2adc4:	str	wzr, [x19]
   2adc8:	bl	bd50 <mpfr_mul@plt>
   2adcc:	ldr	w0, [x19]
   2add0:	tbnz	w0, #1, 2af98 <mpfr_sinh@@Base+0x530>
   2add4:	mov	x1, x27
   2add8:	mov	x0, x27
   2addc:	mov	w3, #0x0                   	// #0
   2ade0:	mov	x2, #0x1                   	// #1
   2ade4:	str	wzr, [x19]
   2ade8:	bl	c2c0 <mpfr_mul_2ui@plt>
   2adec:	ldr	w0, [x19]
   2adf0:	tbnz	w0, #1, 2af98 <mpfr_sinh@@Base+0x530>
   2adf4:	ldr	x1, [sp, #176]
   2adf8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2adfc:	sub	x2, x26, #0x3
   2ae00:	cmp	x1, x0
   2ae04:	b.le	2ae30 <mpfr_sinh@@Base+0x3c8>
   2ae08:	ldr	x1, [sp, #160]
   2ae0c:	cmp	w23, #0x0
   2ae10:	ldr	x0, [sp, #184]
   2ae14:	sub	x1, x1, #0x1
   2ae18:	ldr	x3, [x21]
   2ae1c:	asr	x1, x1, #6
   2ae20:	add	x1, x1, #0x1
   2ae24:	cinc	x3, x3, eq  // eq = none
   2ae28:	bl	c370 <mpfr_round_p@plt>
   2ae2c:	cbnz	w0, 2ac94 <mpfr_sinh@@Base+0x22c>
   2ae30:	mov	x19, x26
   2ae34:	add	x4, x26, x19
   2ae38:	mov	x0, #0xfffffffffffffeff    	// #-257
   2ae3c:	movk	x0, #0x7fff, lsl #48
   2ae40:	sub	x0, x0, x4
   2ae44:	cmp	x0, x25
   2ae48:	b.lt	2af3c <mpfr_sinh@@Base+0x4d4>  // b.tstop
   2ae4c:	add	x26, x25, x4
   2ae50:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2ae54:	cmp	x26, x0
   2ae58:	add	x25, x26, x26, lsr #63
   2ae5c:	ldr	x1, [sp, #224]
   2ae60:	asr	x25, x25, #1
   2ae64:	b.ge	2afd4 <mpfr_sinh@@Base+0x56c>  // b.tcont
   2ae68:	sub	x19, x26, #0x1
   2ae6c:	asr	x19, x19, #6
   2ae70:	add	x19, x19, #0x1
   2ae74:	lsl	x2, x19, #4
   2ae78:	str	x2, [sp, #224]
   2ae7c:	cbz	x1, 2aea4 <mpfr_sinh@@Base+0x43c>
   2ae80:	ldr	x0, [sp, #232]
   2ae84:	bl	c1c0 <mpfr_reallocate_func@plt>
   2ae88:	str	x0, [sp, #232]
   2ae8c:	add	x19, x0, x19, lsl #3
   2ae90:	mov	w1, #0x1                   	// #1
   2ae94:	b	2abb4 <mpfr_sinh@@Base+0x14c>
   2ae98:	ldr	x0, [sp, #232]
   2ae9c:	bl	cc20 <mpfr_free_func@plt>
   2aea0:	b	2acb4 <mpfr_sinh@@Base+0x24c>
   2aea4:	mov	x0, x2
   2aea8:	bl	ccf0 <mpfr_allocate_func@plt>
   2aeac:	str	x0, [sp, #232]
   2aeb0:	b	2ae8c <mpfr_sinh@@Base+0x424>
   2aeb4:	mov	x26, #0x5                   	// #5
   2aeb8:	sub	x26, x26, x3, lsl #1
   2aebc:	b	2ab6c <mpfr_sinh@@Base+0x104>
   2aec0:	lsl	x0, x19, #4
   2aec4:	str	x0, [sp, #224]
   2aec8:	bl	ccf0 <mpfr_allocate_func@plt>
   2aecc:	str	x0, [sp, #232]
   2aed0:	b	2ab9c <mpfr_sinh@@Base+0x134>
   2aed4:	mov	w4, w23
   2aed8:	mov	w3, #0x1                   	// #1
   2aedc:	bl	c540 <mpfr_round_near_x@plt>
   2aee0:	mov	w19, w0
   2aee4:	cbnz	w0, 2ad2c <mpfr_sinh@@Base+0x2c4>
   2aee8:	stp	x25, x26, [sp, #64]
   2aeec:	stp	x27, x28, [sp, #80]
   2aef0:	ldr	x5, [x21]
   2aef4:	ldr	x3, [x22, #16]
   2aef8:	b	2aac0 <mpfr_sinh@@Base+0x58>
   2aefc:	mov	x0, #0x2                   	// #2
   2af00:	movk	x0, #0x8000, lsl #48
   2af04:	cmp	x3, x0
   2af08:	b.eq	2af68 <mpfr_sinh@@Base+0x500>  // b.none
   2af0c:	cmp	x3, x2
   2af10:	b.eq	2af54 <mpfr_sinh@@Base+0x4ec>  // b.none
   2af14:	ldr	w1, [x1, #8]
   2af18:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2af1c:	mov	w19, #0x0                   	// #0
   2af20:	str	w1, [x21, #8]
   2af24:	str	x0, [x21, #16]
   2af28:	b	2ad2c <mpfr_sinh@@Base+0x2c4>
   2af2c:	tbnz	x3, #63, 2aeb4 <mpfr_sinh@@Base+0x44c>
   2af30:	mov	x19, x4
   2af34:	mov	x26, #0x5                   	// #5
   2af38:	b	2ab90 <mpfr_sinh@@Base+0x128>
   2af3c:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2af40:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2af44:	add	x2, x2, #0x470
   2af48:	add	x0, x0, #0xda0
   2af4c:	mov	w1, #0xaf                  	// #175
   2af50:	bl	cb40 <mpfr_assert_fail@plt>
   2af54:	ldr	w0, [x1, #8]
   2af58:	mov	w19, #0x0                   	// #0
   2af5c:	str	w0, [x21, #8]
   2af60:	str	x3, [x21, #16]
   2af64:	b	2ad2c <mpfr_sinh@@Base+0x2c4>
   2af68:	mrs	x1, tpidr_el0
   2af6c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2af70:	ldr	x2, [x0, #2576]
   2af74:	add	x0, x0, #0xa10
   2af78:	blr	x2
   2af7c:	add	x0, x1, x0
   2af80:	mov	w19, #0x0                   	// #0
   2af84:	str	x3, [x21, #16]
   2af88:	ldr	w1, [x0]
   2af8c:	orr	w1, w1, #0x4
   2af90:	str	w1, [x0]
   2af94:	b	2ad2c <mpfr_sinh@@Base+0x2c4>
   2af98:	ldr	w3, [sp, #108]
   2af9c:	mov	w1, w23
   2afa0:	ldr	w2, [x22, #8]
   2afa4:	mov	x0, x21
   2afa8:	orr	w3, w3, #0x2
   2afac:	str	w3, [sp, #108]
   2afb0:	bl	bf40 <mpfr_overflow@plt>
   2afb4:	mov	w19, w0
   2afb8:	b	2acac <mpfr_sinh@@Base+0x244>
   2afbc:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2afc0:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2afc4:	add	x2, x2, #0xd78
   2afc8:	add	x0, x0, #0xda0
   2afcc:	mov	w1, #0x52                  	// #82
   2afd0:	bl	cb40 <mpfr_assert_fail@plt>
   2afd4:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000002afd8 <mpfr_tanh@@Base>:
   2afd8:	stp	x29, x30, [sp, #-384]!
   2afdc:	mov	x29, sp
   2afe0:	ldr	x3, [x1, #16]
   2afe4:	stp	x19, x20, [sp, #16]
   2afe8:	stp	x21, x22, [sp, #32]
   2afec:	mov	w22, w2
   2aff0:	mov	x21, x0
   2aff4:	stp	x23, x24, [sp, #48]
   2aff8:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2affc:	mov	x24, x1
   2b000:	cmp	x3, x2
   2b004:	b.le	2b438 <mpfr_tanh@@Base+0x460>
   2b008:	neg	x2, x3, lsl #1
   2b00c:	cmp	x2, #0x0
   2b010:	ldr	x23, [x0]
   2b014:	b.le	2b028 <mpfr_tanh@@Base+0x50>
   2b018:	add	x2, x2, #0x1
   2b01c:	add	x4, x23, #0x1
   2b020:	cmp	x4, x2
   2b024:	b.cc	2b3d4 <mpfr_tanh@@Base+0x3fc>  // b.lo, b.ul, b.last
   2b028:	stp	x25, x26, [sp, #64]
   2b02c:	mrs	x20, tpidr_el0
   2b030:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b034:	ldr	x1, [x0, #2576]
   2b038:	add	x0, x0, #0xa10
   2b03c:	blr	x1
   2b040:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   2b044:	ldr	x7, [x24, #24]
   2b048:	stp	x3, x7, [sp, #160]
   2b04c:	ldr	w0, [x20, x0]
   2b050:	str	w0, [sp, #108]
   2b054:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   2b058:	ldr	x8, [x24]
   2b05c:	add	x25, sp, #0x90
   2b060:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b064:	ldr	x1, [x0, #2512]
   2b068:	add	x0, x0, #0x9d0
   2b06c:	blr	x1
   2b070:	add	x5, x20, x0
   2b074:	ldr	x0, [x20, x0]
   2b078:	str	x0, [sp, #120]
   2b07c:	mov	w26, #0x1                   	// #1
   2b080:	ldr	w19, [x24, #8]
   2b084:	mov	x2, #0x0                   	// #0
   2b088:	str	x6, [x5]
   2b08c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b090:	ldr	x1, [x0, #2544]
   2b094:	add	x0, x0, #0x9f0
   2b098:	blr	x1
   2b09c:	str	x8, [sp, #144]
   2b0a0:	ldr	x3, [x20, x0]
   2b0a4:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   2b0a8:	str	x4, [x20, x0]
   2b0ac:	mov	x0, x25
   2b0b0:	str	x3, [sp, #128]
   2b0b4:	str	w26, [sp, #152]
   2b0b8:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   2b0bc:	tbz	w0, #31, 2b468 <mpfr_tanh@@Base+0x490>
   2b0c0:	stp	x27, x28, [sp, #80]
   2b0c4:	cmp	x23, #0x1
   2b0c8:	b.eq	2b490 <mpfr_tanh@@Base+0x4b8>  // b.none
   2b0cc:	b.le	2b4fc <mpfr_tanh@@Base+0x524>
   2b0d0:	sub	x4, x23, #0x1
   2b0d4:	mov	w0, #0x40                  	// #64
   2b0d8:	clz	x4, x4
   2b0dc:	sub	w4, w0, w4
   2b0e0:	add	x4, x23, w4, sxtw
   2b0e4:	ldr	x1, [sp, #160]
   2b0e8:	add	x0, x4, #0x4
   2b0ec:	ldr	x4, [sp, #144]
   2b0f0:	cmp	x1, #0x0
   2b0f4:	sub	x1, x0, x1
   2b0f8:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   2b0fc:	csel	x0, x1, x0, lt  // lt = tstop
   2b100:	cmp	x4, x0
   2b104:	csel	x27, x4, x0, ge  // ge = tcont
   2b108:	cmp	x27, x2
   2b10c:	b.ge	2b4f8 <mpfr_tanh@@Base+0x520>  // b.tcont
   2b110:	sub	x26, x27, #0x1
   2b114:	asr	x26, x26, #6
   2b118:	add	x26, x26, #0x1
   2b11c:	lsl	x0, x26, #1
   2b120:	cmp	x0, #0x10
   2b124:	b.gt	2b31c <mpfr_tanh@@Base+0x344>
   2b128:	add	x1, sp, #0x100
   2b12c:	stp	xzr, x1, [sp, #240]
   2b130:	mov	x0, x1
   2b134:	add	x28, sp, #0xd0
   2b138:	add	x24, sp, #0xb0
   2b13c:	add	x1, x0, x26, lsl #3
   2b140:	mov	w2, #0x1                   	// #1
   2b144:	mov	x3, #0x40                  	// #64
   2b148:	mov	x26, #0x8000000000000003    	// #-9223372036854775805
   2b14c:	str	x3, [sp, #136]
   2b150:	str	x27, [sp, #176]
   2b154:	str	w2, [sp, #184]
   2b158:	stp	x0, x27, [sp, #200]
   2b15c:	str	w2, [sp, #216]
   2b160:	str	x1, [sp, #232]
   2b164:	mov	w3, #0x0                   	// #0
   2b168:	mov	x1, x25
   2b16c:	mov	x2, #0x1                   	// #1
   2b170:	mov	x0, x28
   2b174:	bl	c2c0 <mpfr_mul_2ui@plt>
   2b178:	mov	x1, x28
   2b17c:	mov	x0, x28
   2b180:	mov	w2, #0x0                   	// #0
   2b184:	bl	c750 <mpfr_exp@plt>
   2b188:	ldr	x5, [sp, #224]
   2b18c:	cmp	x5, x26
   2b190:	b.eq	2b3f8 <mpfr_tanh@@Base+0x420>  // b.none
   2b194:	mov	x1, x28
   2b198:	mov	w3, #0x3                   	// #3
   2b19c:	mov	x2, #0x1                   	// #1
   2b1a0:	mov	x0, x24
   2b1a4:	str	x5, [sp, #112]
   2b1a8:	bl	c260 <mpfr_add_ui@plt>
   2b1ac:	mov	x1, x28
   2b1b0:	mov	w3, #0x2                   	// #2
   2b1b4:	mov	x2, #0x1                   	// #1
   2b1b8:	mov	x0, x28
   2b1bc:	bl	c530 <mpfr_sub_ui@plt>
   2b1c0:	ldr	x5, [sp, #112]
   2b1c4:	mov	x2, x24
   2b1c8:	ldr	x0, [sp, #224]
   2b1cc:	mov	x1, x28
   2b1d0:	mov	w3, #0x0                   	// #0
   2b1d4:	sub	x5, x5, x0
   2b1d8:	mov	x0, x24
   2b1dc:	str	x5, [sp, #112]
   2b1e0:	bl	c620 <mpfr_div@plt>
   2b1e4:	ldr	x5, [sp, #112]
   2b1e8:	mov	x0, #0x2                   	// #2
   2b1ec:	cmp	x5, x0
   2b1f0:	csel	x5, x5, x0, ge  // ge = tcont
   2b1f4:	add	x2, x5, x0
   2b1f8:	cmp	x5, x27, asr #1
   2b1fc:	sub	x2, x27, x2
   2b200:	ldr	x0, [sp, #192]
   2b204:	b.ge	2b334 <mpfr_tanh@@Base+0x35c>  // b.tcont
   2b208:	cmp	x0, x26
   2b20c:	b.le	2b33c <mpfr_tanh@@Base+0x364>
   2b210:	ldr	x1, [sp, #176]
   2b214:	cmp	w22, #0x0
   2b218:	ldr	x0, [sp, #200]
   2b21c:	sub	x1, x1, #0x1
   2b220:	cinc	x3, x23, eq  // eq = none
   2b224:	asr	x1, x1, #6
   2b228:	add	x1, x1, #0x1
   2b22c:	bl	c370 <mpfr_round_p@plt>
   2b230:	cbz	w0, 2b330 <mpfr_tanh@@Base+0x358>
   2b234:	mov	w3, w19
   2b238:	mov	x1, x24
   2b23c:	mov	w2, w22
   2b240:	mov	x0, x21
   2b244:	bl	c6a0 <mpfr_set4@plt>
   2b248:	mov	w19, w0
   2b24c:	ldp	x27, x28, [sp, #80]
   2b250:	ldr	x1, [sp, #240]
   2b254:	cbnz	x1, 2b310 <mpfr_tanh@@Base+0x338>
   2b258:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b25c:	ldr	x1, [x0, #2576]
   2b260:	add	x0, x0, #0xa10
   2b264:	blr	x1
   2b268:	add	x2, x20, x0
   2b26c:	ldr	w1, [sp, #108]
   2b270:	str	w1, [x20, x0]
   2b274:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b278:	ldr	x3, [x0, #2512]
   2b27c:	add	x0, x0, #0x9d0
   2b280:	blr	x3
   2b284:	ldr	x3, [sp, #120]
   2b288:	str	x3, [x20, x0]
   2b28c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b290:	ldr	x4, [x0, #2544]
   2b294:	add	x0, x0, #0x9f0
   2b298:	blr	x4
   2b29c:	ldr	x1, [x21, #16]
   2b2a0:	ldr	x4, [sp, #128]
   2b2a4:	str	x4, [x20, x0]
   2b2a8:	cmp	x4, x1
   2b2ac:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2b2b0:	b.le	2b2e4 <mpfr_tanh@@Base+0x30c>
   2b2b4:	mov	w1, w19
   2b2b8:	mov	w2, w22
   2b2bc:	mov	x0, x21
   2b2c0:	bl	cb30 <mpfr_check_range@plt>
   2b2c4:	ldp	x25, x26, [sp, #64]
   2b2c8:	mov	w19, w0
   2b2cc:	mov	w0, w19
   2b2d0:	ldp	x19, x20, [sp, #16]
   2b2d4:	ldp	x21, x22, [sp, #32]
   2b2d8:	ldp	x23, x24, [sp, #48]
   2b2dc:	ldp	x29, x30, [sp], #384
   2b2e0:	ret
   2b2e4:	cbz	w19, 2b2f4 <mpfr_tanh@@Base+0x31c>
   2b2e8:	ldr	w0, [sp, #108]
   2b2ec:	orr	w0, w0, #0x8
   2b2f0:	str	w0, [x2]
   2b2f4:	mov	w0, w19
   2b2f8:	ldp	x19, x20, [sp, #16]
   2b2fc:	ldp	x21, x22, [sp, #32]
   2b300:	ldp	x23, x24, [sp, #48]
   2b304:	ldp	x25, x26, [sp, #64]
   2b308:	ldp	x29, x30, [sp], #384
   2b30c:	ret
   2b310:	ldr	x0, [sp, #248]
   2b314:	bl	cc20 <mpfr_free_func@plt>
   2b318:	b	2b258 <mpfr_tanh@@Base+0x280>
   2b31c:	lsl	x0, x26, #4
   2b320:	str	x0, [sp, #240]
   2b324:	bl	ccf0 <mpfr_allocate_func@plt>
   2b328:	str	x0, [sp, #248]
   2b32c:	b	2b134 <mpfr_tanh@@Base+0x15c>
   2b330:	ldr	x0, [sp, #192]
   2b334:	cmp	x0, #0x1
   2b338:	b.eq	2b3f8 <mpfr_tanh@@Base+0x420>  // b.none
   2b33c:	ldr	x1, [sp, #136]
   2b340:	mov	x0, #0xfffffffffffffeff    	// #-257
   2b344:	movk	x0, #0x7fff, lsl #48
   2b348:	sub	x0, x0, x27
   2b34c:	cmp	x0, x1
   2b350:	b.lt	2b4b0 <mpfr_tanh@@Base+0x4d8>  // b.tstop
   2b354:	add	x27, x27, x1
   2b358:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2b35c:	cmp	x27, x0
   2b360:	add	x0, x27, x27, lsr #63
   2b364:	ldr	x1, [sp, #240]
   2b368:	asr	x0, x0, #1
   2b36c:	str	x0, [sp, #136]
   2b370:	b.ge	2b4f8 <mpfr_tanh@@Base+0x520>  // b.tcont
   2b374:	sub	x3, x27, #0x1
   2b378:	asr	x3, x3, #6
   2b37c:	add	x3, x3, #0x1
   2b380:	str	x3, [sp, #112]
   2b384:	lsl	x2, x3, #4
   2b388:	str	x2, [sp, #240]
   2b38c:	cbz	x1, 2b3c0 <mpfr_tanh@@Base+0x3e8>
   2b390:	ldr	x0, [sp, #248]
   2b394:	bl	c1c0 <mpfr_reallocate_func@plt>
   2b398:	str	x0, [sp, #248]
   2b39c:	ldr	x3, [sp, #112]
   2b3a0:	mov	w1, #0x1                   	// #1
   2b3a4:	add	x3, x0, x3, lsl #3
   2b3a8:	str	x27, [sp, #176]
   2b3ac:	str	w1, [sp, #184]
   2b3b0:	stp	x0, x27, [sp, #200]
   2b3b4:	str	w1, [sp, #216]
   2b3b8:	str	x3, [sp, #232]
   2b3bc:	b	2b164 <mpfr_tanh@@Base+0x18c>
   2b3c0:	mov	x0, x2
   2b3c4:	bl	ccf0 <mpfr_allocate_func@plt>
   2b3c8:	str	x0, [sp, #248]
   2b3cc:	ldr	x3, [sp, #112]
   2b3d0:	b	2b3a0 <mpfr_tanh@@Base+0x3c8>
   2b3d4:	mov	w4, w22
   2b3d8:	mov	w3, #0x0                   	// #0
   2b3dc:	bl	c540 <mpfr_round_near_x@plt>
   2b3e0:	mov	w19, w0
   2b3e4:	cbnz	w0, 2b2cc <mpfr_tanh@@Base+0x2f4>
   2b3e8:	stp	x25, x26, [sp, #64]
   2b3ec:	ldr	x23, [x21]
   2b3f0:	ldr	x3, [x24, #16]
   2b3f4:	b	2b02c <mpfr_tanh@@Base+0x54>
   2b3f8:	ldp	x27, x28, [sp, #80]
   2b3fc:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   2b400:	mov	w3, w19
   2b404:	mov	x0, x21
   2b408:	ldr	x1, [x1, #3928]
   2b40c:	mov	w2, #0x0                   	// #0
   2b410:	bl	c6a0 <mpfr_set4@plt>
   2b414:	cmp	w22, #0x1
   2b418:	b.eq	2b428 <mpfr_tanh@@Base+0x450>  // b.none
   2b41c:	add	w0, w22, w19, lsr #31
   2b420:	cmp	w0, #0x3
   2b424:	b.ne	2b250 <mpfr_tanh@@Base+0x278>  // b.any
   2b428:	neg	w19, w19
   2b42c:	mov	x0, x21
   2b430:	bl	c460 <mpfr_nexttozero@plt>
   2b434:	b	2b250 <mpfr_tanh@@Base+0x278>
   2b438:	mov	x1, #0x2                   	// #2
   2b43c:	movk	x1, #0x8000, lsl #48
   2b440:	cmp	x3, x1
   2b444:	b.eq	2b4c8 <mpfr_tanh@@Base+0x4f0>  // b.none
   2b448:	cmp	x3, x2
   2b44c:	b.eq	2b498 <mpfr_tanh@@Base+0x4c0>  // b.none
   2b450:	ldr	w1, [x24, #8]
   2b454:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2b458:	mov	w19, #0x0                   	// #0
   2b45c:	str	w1, [x21, #8]
   2b460:	str	x0, [x21, #16]
   2b464:	b	2b2cc <mpfr_tanh@@Base+0x2f4>
   2b468:	mov	x1, #0x1                   	// #1
   2b46c:	add	x2, sp, #0x100
   2b470:	add	x0, sp, #0x108
   2b474:	str	x1, [sp, #176]
   2b478:	str	w1, [sp, #184]
   2b47c:	stp	x2, x1, [sp, #200]
   2b480:	str	w26, [sp, #216]
   2b484:	stp	x0, xzr, [sp, #232]
   2b488:	str	x2, [sp, #248]
   2b48c:	b	2b3fc <mpfr_tanh@@Base+0x424>
   2b490:	mov	x4, x23
   2b494:	b	2b0e4 <mpfr_tanh@@Base+0x10c>
   2b498:	ldrsw	x1, [x24, #8]
   2b49c:	mov	w3, w22
   2b4a0:	mov	x2, #0x0                   	// #0
   2b4a4:	bl	ba80 <mpfr_set_si_2exp@plt>
   2b4a8:	mov	w19, w0
   2b4ac:	b	2b2cc <mpfr_tanh@@Base+0x2f4>
   2b4b0:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2b4b4:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2b4b8:	add	x2, x2, #0x470
   2b4bc:	add	x0, x0, #0xda8
   2b4c0:	mov	w1, #0x9a                  	// #154
   2b4c4:	bl	cb40 <mpfr_assert_fail@plt>
   2b4c8:	mrs	x1, tpidr_el0
   2b4cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b4d0:	ldr	x2, [x0, #2576]
   2b4d4:	add	x0, x0, #0xa10
   2b4d8:	blr	x2
   2b4dc:	add	x0, x1, x0
   2b4e0:	mov	w19, #0x0                   	// #0
   2b4e4:	str	x3, [x21, #16]
   2b4e8:	ldr	w1, [x0]
   2b4ec:	orr	w1, w1, #0x4
   2b4f0:	str	w1, [x0]
   2b4f4:	b	2b2cc <mpfr_tanh@@Base+0x2f4>
   2b4f8:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2b4fc:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2b500:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2b504:	add	x2, x2, #0x458
   2b508:	add	x0, x0, #0xda8
   2b50c:	mov	w1, #0x60                  	// #96
   2b510:	bl	cb40 <mpfr_assert_fail@plt>
   2b514:	nop

000000000002b518 <mpfr_sinh_cosh@@Base>:
   2b518:	stp	x29, x30, [sp, #-416]!
   2b51c:	cmp	x0, x1
   2b520:	mov	x29, sp
   2b524:	stp	x19, x20, [sp, #16]
   2b528:	stp	x21, x22, [sp, #32]
   2b52c:	str	x2, [sp, #96]
   2b530:	b.eq	2bbb0 <mpfr_sinh_cosh@@Base+0x698>  // b.none
   2b534:	ldr	x2, [x2, #16]
   2b538:	mov	x22, x0
   2b53c:	mov	x21, x1
   2b540:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2b544:	cmp	x2, x0
   2b548:	b.le	2baa4 <mpfr_sinh_cosh@@Base+0x58c>
   2b54c:	mrs	x20, tpidr_el0
   2b550:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b554:	ldr	x1, [x0, #2576]
   2b558:	add	x0, x0, #0xa10
   2b55c:	blr	x1
   2b560:	ldr	x1, [x21]
   2b564:	stp	x23, x24, [sp, #48]
   2b568:	ldr	w0, [x20, x0]
   2b56c:	str	w0, [sp, #124]
   2b570:	mov	w24, w3
   2b574:	ldr	x19, [x22]
   2b578:	stp	x25, x26, [sp, #64]
   2b57c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b580:	ldr	x4, [x0, #2512]
   2b584:	add	x0, x0, #0x9d0
   2b588:	blr	x4
   2b58c:	add	x4, x20, x0
   2b590:	stp	x27, x28, [sp, #80]
   2b594:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   2b598:	ldr	x0, [x20, x0]
   2b59c:	str	x0, [sp, #112]
   2b5a0:	str	x2, [sp, #160]
   2b5a4:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   2b5a8:	mov	w7, #0x1                   	// #1
   2b5ac:	str	w7, [sp, #152]
   2b5b0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b5b4:	ldr	x6, [x0, #2544]
   2b5b8:	add	x0, x0, #0x9f0
   2b5bc:	blr	x6
   2b5c0:	ldr	x6, [sp, #96]
   2b5c4:	cmp	x19, x1
   2b5c8:	ldr	x2, [x20, x0]
   2b5cc:	csel	x1, x19, x1, ge  // ge = tcont
   2b5d0:	ldr	x8, [x6]
   2b5d4:	str	x3, [x20, x0]
   2b5d8:	ldr	x6, [x6, #24]
   2b5dc:	str	x5, [x4]
   2b5e0:	stp	x2, x8, [sp, #136]
   2b5e4:	cmp	x1, #0x1
   2b5e8:	str	x6, [sp, #168]
   2b5ec:	b.eq	2bafc <mpfr_sinh_cosh@@Base+0x5e4>  // b.none
   2b5f0:	b.le	2bb60 <mpfr_sinh_cosh@@Base+0x648>
   2b5f4:	sub	x0, x1, #0x1
   2b5f8:	mov	w19, #0x40                  	// #64
   2b5fc:	clz	x0, x0
   2b600:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   2b604:	sub	w19, w19, w0
   2b608:	add	x19, x1, w19, sxtw
   2b60c:	add	x27, x19, #0x4
   2b610:	cmp	x27, x2
   2b614:	b.ge	2bb5c <mpfr_sinh_cosh@@Base+0x644>  // b.tcont
   2b618:	add	x19, x19, #0x3
   2b61c:	asr	x19, x19, #6
   2b620:	add	x19, x19, #0x1
   2b624:	add	x0, x19, x19, lsl #1
   2b628:	cmp	x0, #0x10
   2b62c:	b.gt	2ba58 <mpfr_sinh_cosh@@Base+0x540>
   2b630:	add	x1, sp, #0x120
   2b634:	stp	xzr, x1, [sp, #272]
   2b638:	mov	x0, x1
   2b63c:	add	x1, sp, #0x90
   2b640:	add	x2, x0, x19, lsl #3
   2b644:	add	x28, sp, #0xb0
   2b648:	add	x25, sp, #0xf0
   2b64c:	add	x23, sp, #0xd0
   2b650:	add	x19, x0, x19, lsl #4
   2b654:	mov	x26, #0x40                  	// #64
   2b658:	str	x1, [sp, #104]
   2b65c:	mov	w1, #0x1                   	// #1
   2b660:	str	w1, [sp, #184]
   2b664:	stp	x0, x27, [sp, #200]
   2b668:	str	w1, [sp, #216]
   2b66c:	str	w1, [sp, #248]
   2b670:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b674:	ldr	x1, [x0, #2576]
   2b678:	add	x0, x0, #0xa10
   2b67c:	blr	x1
   2b680:	ldr	x1, [sp, #104]
   2b684:	str	x19, [sp, #264]
   2b688:	add	x19, x20, x0
   2b68c:	str	wzr, [x20, x0]
   2b690:	mov	x0, x28
   2b694:	str	x27, [sp, #176]
   2b698:	stp	x2, x27, [sp, #232]
   2b69c:	mov	w2, #0x3                   	// #3
   2b6a0:	bl	c750 <mpfr_exp@plt>
   2b6a4:	ldr	w0, [x19]
   2b6a8:	tbnz	w0, #1, 2bb78 <mpfr_sinh_cosh@@Base+0x660>
   2b6ac:	mov	x2, x28
   2b6b0:	mov	w3, #0x2                   	// #2
   2b6b4:	mov	x1, #0x1                   	// #1
   2b6b8:	mov	x0, x25
   2b6bc:	ldr	x19, [sp, #192]
   2b6c0:	bl	c2f0 <mpfr_ui_div@plt>
   2b6c4:	mov	x2, x25
   2b6c8:	mov	x1, x28
   2b6cc:	mov	w3, #0x2                   	// #2
   2b6d0:	mov	x0, x23
   2b6d4:	bl	c1a0 <mpfr_add@plt>
   2b6d8:	mov	x2, x25
   2b6dc:	mov	x1, x28
   2b6e0:	mov	w3, #0x0                   	// #0
   2b6e4:	mov	x0, x28
   2b6e8:	bl	bb70 <mpfr_sub@plt>
   2b6ec:	mov	x1, x23
   2b6f0:	mov	w3, #0x0                   	// #0
   2b6f4:	mov	x2, #0x1                   	// #1
   2b6f8:	mov	x0, x23
   2b6fc:	bl	c8f0 <mpfr_div_2ui@plt>
   2b700:	mov	x1, x28
   2b704:	mov	x0, x28
   2b708:	mov	w3, #0x0                   	// #0
   2b70c:	mov	x2, #0x1                   	// #1
   2b710:	bl	c8f0 <mpfr_div_2ui@plt>
   2b714:	ldr	x0, [sp, #192]
   2b718:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2b71c:	cmp	x0, x1
   2b720:	b.eq	2b8b8 <mpfr_sinh_cosh@@Base+0x3a0>  // b.none
   2b724:	sub	x2, x19, x0
   2b728:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
   2b72c:	adds	x2, x2, #0x2
   2b730:	csel	x2, x2, xzr, pl  // pl = nfrst
   2b734:	cmp	x0, x6
   2b738:	add	x2, x2, #0x1
   2b73c:	sub	x19, x27, x2
   2b740:	b.le	2b8bc <mpfr_sinh_cosh@@Base+0x3a4>
   2b744:	ldr	x1, [sp, #176]
   2b748:	cmp	w24, #0x0
   2b74c:	ldr	x0, [sp, #200]
   2b750:	sub	x1, x1, #0x1
   2b754:	ldr	x3, [x22]
   2b758:	cset	x2, eq  // eq = none
   2b75c:	asr	x1, x1, #6
   2b760:	str	x2, [sp, #128]
   2b764:	cinc	x3, x3, eq  // eq = none
   2b768:	add	x1, x1, #0x1
   2b76c:	mov	x2, x19
   2b770:	bl	c370 <mpfr_round_p@plt>
   2b774:	cbz	w0, 2b8bc <mpfr_sinh_cosh@@Base+0x3a4>
   2b778:	ldr	x0, [sp, #224]
   2b77c:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
   2b780:	cmp	x0, x6
   2b784:	b.le	2b8bc <mpfr_sinh_cosh@@Base+0x3a4>
   2b788:	ldr	x1, [sp, #208]
   2b78c:	mov	x2, x19
   2b790:	ldr	x4, [sp, #128]
   2b794:	sub	x1, x1, #0x1
   2b798:	ldr	x0, [sp, #232]
   2b79c:	asr	x1, x1, #6
   2b7a0:	ldr	x3, [x21]
   2b7a4:	add	x1, x1, #0x1
   2b7a8:	add	x3, x4, x3
   2b7ac:	bl	c370 <mpfr_round_p@plt>
   2b7b0:	cbz	w0, 2b8bc <mpfr_sinh_cosh@@Base+0x3a4>
   2b7b4:	ldr	x0, [sp, #96]
   2b7b8:	mov	x1, x28
   2b7bc:	mov	w2, w24
   2b7c0:	ldr	w3, [x0, #8]
   2b7c4:	mov	x0, x22
   2b7c8:	bl	c6a0 <mpfr_set4@plt>
   2b7cc:	mov	w19, w0
   2b7d0:	ldr	w3, [sp, #216]
   2b7d4:	mov	x1, x23
   2b7d8:	mov	w2, w24
   2b7dc:	mov	x0, x21
   2b7e0:	bl	c6a0 <mpfr_set4@plt>
   2b7e4:	mov	w23, w0
   2b7e8:	ldr	x1, [sp, #272]
   2b7ec:	cbnz	x1, 2b9a4 <mpfr_sinh_cosh@@Base+0x48c>
   2b7f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b7f4:	ldr	x1, [x0, #2576]
   2b7f8:	add	x0, x0, #0xa10
   2b7fc:	blr	x1
   2b800:	add	x2, x20, x0
   2b804:	ldr	w1, [sp, #124]
   2b808:	str	w1, [x20, x0]
   2b80c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b810:	ldr	x3, [x0, #2512]
   2b814:	add	x0, x0, #0x9d0
   2b818:	blr	x3
   2b81c:	ldr	x3, [sp, #112]
   2b820:	add	x26, x20, x0
   2b824:	str	x3, [x20, x0]
   2b828:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b82c:	ldr	x4, [x0, #2544]
   2b830:	add	x0, x0, #0x9f0
   2b834:	blr	x4
   2b838:	ldr	x1, [x22, #16]
   2b83c:	add	x25, x20, x0
   2b840:	ldr	x4, [sp, #136]
   2b844:	str	x4, [x20, x0]
   2b848:	cmp	x4, x1
   2b84c:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2b850:	b.le	2b928 <mpfr_sinh_cosh@@Base+0x410>
   2b854:	mov	w1, w19
   2b858:	mov	x0, x22
   2b85c:	mov	w2, w24
   2b860:	bl	cb30 <mpfr_check_range@plt>
   2b864:	mov	w19, w0
   2b868:	ldr	x1, [x26]
   2b86c:	ldr	x0, [x21, #16]
   2b870:	cmp	x0, x1
   2b874:	b.lt	2ba6c <mpfr_sinh_cosh@@Base+0x554>  // b.tstop
   2b878:	ldr	x1, [x25]
   2b87c:	cmp	x0, x1
   2b880:	b.gt	2ba6c <mpfr_sinh_cosh@@Base+0x554>
   2b884:	cbnz	w23, 2b9f8 <mpfr_sinh_cosh@@Base+0x4e0>
   2b888:	cbz	w19, 2b974 <mpfr_sinh_cosh@@Base+0x45c>
   2b88c:	ldp	x23, x24, [sp, #48]
   2b890:	cmp	w19, #0x0
   2b894:	ldp	x25, x26, [sp, #64]
   2b898:	cset	w19, le
   2b89c:	ldp	x27, x28, [sp, #80]
   2b8a0:	add	w19, w19, #0x1
   2b8a4:	mov	w0, w19
   2b8a8:	ldp	x19, x20, [sp, #16]
   2b8ac:	ldp	x21, x22, [sp, #32]
   2b8b0:	ldp	x29, x30, [sp], #416
   2b8b4:	ret
   2b8b8:	mov	x19, x27
   2b8bc:	add	x4, x27, x19
   2b8c0:	mov	x0, #0xfffffffffffffeff    	// #-257
   2b8c4:	movk	x0, #0x7fff, lsl #48
   2b8c8:	sub	x0, x0, x4
   2b8cc:	cmp	x0, x26
   2b8d0:	b.lt	2ba8c <mpfr_sinh_cosh@@Base+0x574>  // b.tstop
   2b8d4:	add	x27, x26, x4
   2b8d8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2b8dc:	cmp	x27, x0
   2b8e0:	add	x26, x27, x27, lsr #63
   2b8e4:	ldr	x1, [sp, #272]
   2b8e8:	asr	x26, x26, #1
   2b8ec:	b.ge	2bb5c <mpfr_sinh_cosh@@Base+0x644>  // b.tcont
   2b8f0:	sub	x19, x27, #0x1
   2b8f4:	asr	x19, x19, #6
   2b8f8:	add	x19, x19, #0x1
   2b8fc:	add	x2, x19, x19, lsl #1
   2b900:	lsl	x2, x2, #3
   2b904:	str	x2, [sp, #272]
   2b908:	cbnz	x1, 2b994 <mpfr_sinh_cosh@@Base+0x47c>
   2b90c:	mov	x0, x2
   2b910:	bl	ccf0 <mpfr_allocate_func@plt>
   2b914:	str	x0, [sp, #280]
   2b918:	add	x2, x0, x19, lsl #3
   2b91c:	mov	w1, #0x1                   	// #1
   2b920:	add	x19, x0, x19, lsl #4
   2b924:	b	2b660 <mpfr_sinh_cosh@@Base+0x148>
   2b928:	ldr	x0, [x21, #16]
   2b92c:	cbz	w19, 2b9b0 <mpfr_sinh_cosh@@Base+0x498>
   2b930:	ldr	w1, [sp, #124]
   2b934:	orr	w1, w1, #0x8
   2b938:	str	w1, [x2]
   2b93c:	ldr	x1, [sp, #112]
   2b940:	cmp	x1, x0
   2b944:	b.gt	2b950 <mpfr_sinh_cosh@@Base+0x438>
   2b948:	cmp	x4, x0
   2b94c:	b.ge	2b9f0 <mpfr_sinh_cosh@@Base+0x4d8>  // b.tcont
   2b950:	mov	w1, w23
   2b954:	mov	w2, w24
   2b958:	mov	x0, x21
   2b95c:	bl	cb30 <mpfr_check_range@plt>
   2b960:	mov	w23, w0
   2b964:	cmp	w19, #0x0
   2b968:	cset	w19, le
   2b96c:	add	w19, w19, #0x1
   2b970:	cbnz	w23, 2ba28 <mpfr_sinh_cosh@@Base+0x510>
   2b974:	mov	w0, w19
   2b978:	ldp	x19, x20, [sp, #16]
   2b97c:	ldp	x21, x22, [sp, #32]
   2b980:	ldp	x23, x24, [sp, #48]
   2b984:	ldp	x25, x26, [sp, #64]
   2b988:	ldp	x27, x28, [sp, #80]
   2b98c:	ldp	x29, x30, [sp], #416
   2b990:	ret
   2b994:	ldr	x0, [sp, #280]
   2b998:	bl	c1c0 <mpfr_reallocate_func@plt>
   2b99c:	str	x0, [sp, #280]
   2b9a0:	b	2b918 <mpfr_sinh_cosh@@Base+0x400>
   2b9a4:	ldr	x0, [sp, #280]
   2b9a8:	bl	cc20 <mpfr_free_func@plt>
   2b9ac:	b	2b7f0 <mpfr_sinh_cosh@@Base+0x2d8>
   2b9b0:	cmp	x3, x0
   2b9b4:	b.gt	2b9d4 <mpfr_sinh_cosh@@Base+0x4bc>
   2b9b8:	cmp	x4, x0
   2b9bc:	b.lt	2b9d4 <mpfr_sinh_cosh@@Base+0x4bc>  // b.tstop
   2b9c0:	cbz	w23, 2b974 <mpfr_sinh_cosh@@Base+0x45c>
   2b9c4:	ldr	w0, [sp, #124]
   2b9c8:	orr	w0, w0, #0x8
   2b9cc:	str	w0, [x2]
   2b9d0:	b	2ba28 <mpfr_sinh_cosh@@Base+0x510>
   2b9d4:	mov	w1, w23
   2b9d8:	mov	w2, w24
   2b9dc:	mov	x0, x21
   2b9e0:	bl	cb30 <mpfr_check_range@plt>
   2b9e4:	mov	w23, w0
   2b9e8:	cbz	w23, 2b974 <mpfr_sinh_cosh@@Base+0x45c>
   2b9ec:	b	2ba28 <mpfr_sinh_cosh@@Base+0x510>
   2b9f0:	cbz	w23, 2b88c <mpfr_sinh_cosh@@Base+0x374>
   2b9f4:	nop
   2b9f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2b9fc:	ldr	x1, [x0, #2576]
   2ba00:	add	x0, x0, #0xa10
   2ba04:	blr	x1
   2ba08:	add	x20, x20, x0
   2ba0c:	cmp	w19, #0x0
   2ba10:	cset	w2, le
   2ba14:	ldr	w1, [x20]
   2ba18:	add	w2, w2, #0x1
   2ba1c:	csel	w19, w2, w19, ne  // ne = any
   2ba20:	orr	w1, w1, #0x8
   2ba24:	str	w1, [x20]
   2ba28:	cmp	w23, #0x0
   2ba2c:	orr	w1, w19, #0x4
   2ba30:	orr	w19, w19, #0x8
   2ba34:	csel	w19, w19, w1, le
   2ba38:	mov	w0, w19
   2ba3c:	ldp	x19, x20, [sp, #16]
   2ba40:	ldp	x21, x22, [sp, #32]
   2ba44:	ldp	x23, x24, [sp, #48]
   2ba48:	ldp	x25, x26, [sp, #64]
   2ba4c:	ldp	x27, x28, [sp, #80]
   2ba50:	ldp	x29, x30, [sp], #416
   2ba54:	ret
   2ba58:	lsl	x0, x0, #3
   2ba5c:	str	x0, [sp, #272]
   2ba60:	bl	ccf0 <mpfr_allocate_func@plt>
   2ba64:	str	x0, [sp, #280]
   2ba68:	b	2b63c <mpfr_sinh_cosh@@Base+0x124>
   2ba6c:	mov	w1, w23
   2ba70:	mov	w2, w24
   2ba74:	mov	x0, x21
   2ba78:	bl	cb30 <mpfr_check_range@plt>
   2ba7c:	mov	w23, w0
   2ba80:	cbnz	w19, 2b964 <mpfr_sinh_cosh@@Base+0x44c>
   2ba84:	cbz	w23, 2b974 <mpfr_sinh_cosh@@Base+0x45c>
   2ba88:	b	2ba28 <mpfr_sinh_cosh@@Base+0x510>
   2ba8c:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2ba90:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2ba94:	add	x2, x2, #0xdd8
   2ba98:	add	x0, x0, #0xdc0
   2ba9c:	mov	w1, #0x94                  	// #148
   2baa0:	bl	cb40 <mpfr_assert_fail@plt>
   2baa4:	mov	x1, #0x2                   	// #2
   2baa8:	movk	x1, #0x8000, lsl #48
   2baac:	cmp	x2, x1
   2bab0:	b.eq	2bb28 <mpfr_sinh_cosh@@Base+0x610>  // b.none
   2bab4:	cmp	x2, x0
   2bab8:	ldr	x0, [sp, #96]
   2babc:	b.eq	2bb08 <mpfr_sinh_cosh@@Base+0x5f0>  // b.none
   2bac0:	ldr	w0, [x0, #8]
   2bac4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2bac8:	str	w0, [x22, #8]
   2bacc:	mov	x2, #0x0                   	// #0
   2bad0:	str	x1, [x22, #16]
   2bad4:	mov	x0, x21
   2bad8:	mov	x1, #0x1                   	// #1
   2badc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2bae0:	cmp	w0, #0x0
   2bae4:	mov	w19, w0
   2bae8:	mov	w1, #0x4                   	// #4
   2baec:	mov	w0, #0x8                   	// #8
   2baf0:	csel	w1, w1, w0, gt
   2baf4:	csel	w19, w1, w19, ne  // ne = any
   2baf8:	b	2b8a4 <mpfr_sinh_cosh@@Base+0x38c>
   2bafc:	mov	x19, x1
   2bb00:	mov	x27, #0x5                   	// #5
   2bb04:	b	2b630 <mpfr_sinh_cosh@@Base+0x118>
   2bb08:	ldr	w1, [x0, #8]
   2bb0c:	mov	w19, #0x0                   	// #0
   2bb10:	str	w1, [x22, #8]
   2bb14:	mov	w0, #0x1                   	// #1
   2bb18:	str	x2, [x22, #16]
   2bb1c:	str	w0, [x21, #8]
   2bb20:	str	x2, [x21, #16]
   2bb24:	b	2b8a4 <mpfr_sinh_cosh@@Base+0x38c>
   2bb28:	mrs	x1, tpidr_el0
   2bb2c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2bb30:	ldr	x3, [x0, #2576]
   2bb34:	add	x0, x0, #0xa10
   2bb38:	blr	x3
   2bb3c:	add	x0, x1, x0
   2bb40:	str	x2, [x21, #16]
   2bb44:	mov	w19, #0x0                   	// #0
   2bb48:	str	x2, [x22, #16]
   2bb4c:	ldr	w1, [x0]
   2bb50:	orr	w1, w1, #0x4
   2bb54:	str	w1, [x0]
   2bb58:	b	2b8a4 <mpfr_sinh_cosh@@Base+0x38c>
   2bb5c:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2bb60:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2bb64:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2bb68:	add	x2, x2, #0xdd0
   2bb6c:	add	x0, x0, #0xdc0
   2bb70:	mov	w1, #0x60                  	// #96
   2bb74:	bl	cb40 <mpfr_assert_fail@plt>
   2bb78:	mov	w1, w24
   2bb7c:	mov	w2, #0x1                   	// #1
   2bb80:	mov	x0, x21
   2bb84:	bl	bf40 <mpfr_overflow@plt>
   2bb88:	ldr	x1, [sp, #96]
   2bb8c:	mov	w23, w0
   2bb90:	mov	w2, w24
   2bb94:	mov	x0, x22
   2bb98:	bl	c320 <mpfr_sinh@plt>
   2bb9c:	mov	w19, w0
   2bba0:	ldr	w1, [sp, #124]
   2bba4:	orr	w1, w1, #0x2
   2bba8:	str	w1, [sp, #124]
   2bbac:	b	2b7e8 <mpfr_sinh_cosh@@Base+0x2d0>
   2bbb0:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2bbb4:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2bbb8:	add	x2, x2, #0xdb0
   2bbbc:	add	x0, x0, #0xdc0
   2bbc0:	mov	w1, #0x28                  	// #40
   2bbc4:	stp	x23, x24, [sp, #48]
   2bbc8:	stp	x25, x26, [sp, #64]
   2bbcc:	stp	x27, x28, [sp, #80]
   2bbd0:	bl	cb40 <mpfr_assert_fail@plt>
   2bbd4:	nop

000000000002bbd8 <mpfr_acosh@@Base>:
   2bbd8:	stp	x29, x30, [sp, #-192]!
   2bbdc:	mov	x29, sp
   2bbe0:	stp	x21, x22, [sp, #32]
   2bbe4:	mov	x21, x1
   2bbe8:	mov	x22, x0
   2bbec:	stp	x19, x20, [sp, #16]
   2bbf0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2bbf4:	ldr	x0, [x21, #16]
   2bbf8:	cmp	x0, x1
   2bbfc:	b.le	2bec4 <mpfr_acosh@@Base+0x2ec>
   2bc00:	mov	x0, x21
   2bc04:	mov	x1, #0x1                   	// #1
   2bc08:	stp	x23, x24, [sp, #48]
   2bc0c:	mov	w24, w2
   2bc10:	mov	x2, #0x0                   	// #0
   2bc14:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   2bc18:	mov	w19, w0
   2bc1c:	cmp	w0, #0x0
   2bc20:	b.lt	2bf94 <mpfr_acosh@@Base+0x3bc>  // b.tstop
   2bc24:	b.eq	2c014 <mpfr_acosh@@Base+0x43c>  // b.none
   2bc28:	mrs	x20, tpidr_el0
   2bc2c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2bc30:	ldr	x1, [x0, #2576]
   2bc34:	add	x0, x0, #0xa10
   2bc38:	blr	x1
   2bc3c:	stp	x25, x26, [sp, #64]
   2bc40:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2bc44:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2bc48:	ldr	w0, [x20, x0]
   2bc4c:	str	w0, [sp, #108]
   2bc50:	stp	x27, x28, [sp, #80]
   2bc54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2bc58:	ldr	x2, [x0, #2512]
   2bc5c:	add	x0, x0, #0x9d0
   2bc60:	blr	x2
   2bc64:	add	x2, x20, x0
   2bc68:	ldr	x25, [x22]
   2bc6c:	ldr	x27, [x20, x0]
   2bc70:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2bc74:	ldr	x4, [x0, #2544]
   2bc78:	add	x0, x0, #0x9f0
   2bc7c:	blr	x4
   2bc80:	str	x3, [x2]
   2bc84:	cmp	x25, #0x1
   2bc88:	ldr	x28, [x20, x0]
   2bc8c:	str	x1, [x20, x0]
   2bc90:	add	x1, x25, #0x4
   2bc94:	b.eq	2c02c <mpfr_acosh@@Base+0x454>  // b.none
   2bc98:	b.le	2c04c <mpfr_acosh@@Base+0x474>
   2bc9c:	sub	x0, x25, #0x1
   2bca0:	mov	w23, #0x40                  	// #64
   2bca4:	clz	x0, x0
   2bca8:	sub	w0, w23, w0
   2bcac:	add	x23, x1, w0, sxtw
   2bcb0:	add	x0, sp, #0xa0
   2bcb4:	add	x26, sp, #0x80
   2bcb8:	str	x0, [sp, #120]
   2bcbc:	mov	x0, #0x40                  	// #64
   2bcc0:	mov	x1, x23
   2bcc4:	str	x0, [sp, #112]
   2bcc8:	mov	x0, x26
   2bccc:	bl	ca80 <mpfr_init2@plt>
   2bcd0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2bcd4:	ldr	x1, [x0, #2576]
   2bcd8:	add	x0, x0, #0xa10
   2bcdc:	blr	x1
   2bce0:	add	x19, x20, x0
   2bce4:	mov	x2, x21
   2bce8:	mov	x1, x21
   2bcec:	mov	w3, #0x3                   	// #3
   2bcf0:	str	wzr, [x20, x0]
   2bcf4:	mov	x0, x26
   2bcf8:	bl	bd50 <mpfr_mul@plt>
   2bcfc:	ldr	w0, [x19]
   2bd00:	tbnz	w0, #1, 2bf20 <mpfr_acosh@@Base+0x348>
   2bd04:	mov	x2, #0x1                   	// #1
   2bd08:	mov	x1, x26
   2bd0c:	mov	x0, x26
   2bd10:	mov	w3, #0x3                   	// #3
   2bd14:	ldr	x19, [sp, #144]
   2bd18:	bl	c530 <mpfr_sub_ui@plt>
   2bd1c:	ldr	x2, [sp, #144]
   2bd20:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2bd24:	cmp	x2, x0
   2bd28:	b.eq	2bfd0 <mpfr_acosh@@Base+0x3f8>  // b.none
   2bd2c:	sub	x19, x19, x2
   2bd30:	mov	x1, x26
   2bd34:	mov	w2, #0x0                   	// #0
   2bd38:	mov	x0, x26
   2bd3c:	bl	c930 <mpfr_sqrt@plt>
   2bd40:	mov	w3, #0x0                   	// #0
   2bd44:	mov	x2, x21
   2bd48:	mov	x1, x26
   2bd4c:	mov	x0, x26
   2bd50:	bl	c1a0 <mpfr_add@plt>
   2bd54:	mov	w2, #0x0                   	// #0
   2bd58:	mov	x1, x26
   2bd5c:	mov	x0, x26
   2bd60:	bl	c090 <mpfr_log@plt>
   2bd64:	cmp	x19, #0x0
   2bd68:	ldr	x0, [sp, #144]
   2bd6c:	csinc	x19, x19, xzr, gt
   2bd70:	add	x2, x19, #0x3
   2bd74:	subs	x2, x2, x0
   2bd78:	csinv	x2, x2, xzr, pl  // pl = nfrst
   2bd7c:	add	x2, x2, #0x1
   2bd80:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2bd84:	cmp	x0, x1
   2bd88:	b.le	2be8c <mpfr_acosh@@Base+0x2b4>
   2bd8c:	ldr	x1, [sp, #128]
   2bd90:	cmp	w24, #0x0
   2bd94:	ldr	x0, [sp, #152]
   2bd98:	sub	x1, x1, #0x1
   2bd9c:	sub	x2, x23, x2
   2bda0:	cinc	x3, x25, eq  // eq = none
   2bda4:	asr	x1, x1, #6
   2bda8:	add	x1, x1, #0x1
   2bdac:	bl	c370 <mpfr_round_p@plt>
   2bdb0:	cbz	w0, 2be8c <mpfr_acosh@@Base+0x2b4>
   2bdb4:	ldr	w3, [sp, #136]
   2bdb8:	mov	w2, w24
   2bdbc:	mov	x1, x26
   2bdc0:	mov	x0, x22
   2bdc4:	bl	c6a0 <mpfr_set4@plt>
   2bdc8:	mov	w19, w0
   2bdcc:	mov	x0, x26
   2bdd0:	bl	c070 <mpfr_clear@plt>
   2bdd4:	ldr	x1, [x22, #16]
   2bdd8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2bddc:	ldr	x2, [x0, #2576]
   2bde0:	add	x0, x0, #0xa10
   2bde4:	blr	x2
   2bde8:	ldr	w2, [sp, #108]
   2bdec:	str	w2, [x20, x0]
   2bdf0:	add	x2, x20, x0
   2bdf4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2bdf8:	ldr	x3, [x0, #2512]
   2bdfc:	add	x0, x0, #0x9d0
   2be00:	blr	x3
   2be04:	str	x27, [x20, x0]
   2be08:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2be0c:	ldr	x3, [x0, #2544]
   2be10:	add	x0, x0, #0x9f0
   2be14:	blr	x3
   2be18:	str	x28, [x20, x0]
   2be1c:	cmp	x28, x1
   2be20:	ccmp	x27, x1, #0x0, ge  // ge = tcont
   2be24:	b.le	2be5c <mpfr_acosh@@Base+0x284>
   2be28:	mov	w1, w19
   2be2c:	mov	w2, w24
   2be30:	mov	x0, x22
   2be34:	bl	cb30 <mpfr_check_range@plt>
   2be38:	mov	w19, w0
   2be3c:	ldp	x23, x24, [sp, #48]
   2be40:	ldp	x25, x26, [sp, #64]
   2be44:	ldp	x27, x28, [sp, #80]
   2be48:	mov	w0, w19
   2be4c:	ldp	x19, x20, [sp, #16]
   2be50:	ldp	x21, x22, [sp, #32]
   2be54:	ldp	x29, x30, [sp], #192
   2be58:	ret
   2be5c:	cbz	w19, 2be3c <mpfr_acosh@@Base+0x264>
   2be60:	ldr	w0, [sp, #108]
   2be64:	ldp	x23, x24, [sp, #48]
   2be68:	orr	w26, w0, #0x8
   2be6c:	ldp	x27, x28, [sp, #80]
   2be70:	str	w26, [x2]
   2be74:	mov	w0, w19
   2be78:	ldp	x19, x20, [sp, #16]
   2be7c:	ldp	x21, x22, [sp, #32]
   2be80:	ldp	x25, x26, [sp, #64]
   2be84:	ldp	x29, x30, [sp], #192
   2be88:	ret
   2be8c:	ldr	x1, [sp, #112]
   2be90:	mov	x0, #0xfffffffffffffeff    	// #-257
   2be94:	movk	x0, #0x7fff, lsl #48
   2be98:	sub	x0, x0, x23
   2be9c:	cmp	x0, x1
   2bea0:	b.lt	2c034 <mpfr_acosh@@Base+0x45c>  // b.tstop
   2bea4:	add	x23, x23, x1
   2bea8:	mov	x0, x26
   2beac:	mov	x1, x23
   2beb0:	add	x2, x23, x23, lsr #63
   2beb4:	asr	x2, x2, #1
   2beb8:	str	x2, [sp, #112]
   2bebc:	bl	bed0 <mpfr_set_prec@plt>
   2bec0:	b	2bcd0 <mpfr_acosh@@Base+0xf8>
   2bec4:	b.ne	2bee8 <mpfr_acosh@@Base+0x310>  // b.any
   2bec8:	ldr	w1, [x21, #8]
   2becc:	cmp	w1, #0x0
   2bed0:	b.le	2bee8 <mpfr_acosh@@Base+0x310>
   2bed4:	mov	w1, #0x1                   	// #1
   2bed8:	mov	w19, #0x0                   	// #0
   2bedc:	str	w1, [x22, #8]
   2bee0:	str	x0, [x22, #16]
   2bee4:	b	2be48 <mpfr_acosh@@Base+0x270>
   2bee8:	mrs	x1, tpidr_el0
   2beec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2bef0:	ldr	x2, [x0, #2576]
   2bef4:	add	x0, x0, #0xa10
   2bef8:	blr	x2
   2befc:	add	x0, x1, x0
   2bf00:	mov	x1, #0x2                   	// #2
   2bf04:	movk	x1, #0x8000, lsl #48
   2bf08:	str	x1, [x22, #16]
   2bf0c:	mov	w19, #0x0                   	// #0
   2bf10:	ldr	w1, [x0]
   2bf14:	orr	w1, w1, #0x4
   2bf18:	str	w1, [x0]
   2bf1c:	b	2be48 <mpfr_acosh@@Base+0x270>
   2bf20:	mov	w2, #0x0                   	// #0
   2bf24:	mov	x1, x21
   2bf28:	mov	x0, x26
   2bf2c:	bl	c090 <mpfr_log@plt>
   2bf30:	ldr	x1, [sp, #144]
   2bf34:	ldr	x19, [sp, #120]
   2bf38:	cmp	x1, x23
   2bf3c:	sub	x1, x23, x1
   2bf40:	csinc	x1, x1, xzr, lt  // lt = tstop
   2bf44:	mov	x0, x19
   2bf48:	bl	ca80 <mpfr_init2@plt>
   2bf4c:	mov	w2, #0x0                   	// #0
   2bf50:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2bf54:	ldr	x1, [x0, #2560]
   2bf58:	add	x0, x0, #0xa00
   2bf5c:	blr	x1
   2bf60:	add	x1, x20, x0
   2bf64:	mov	x0, x19
   2bf68:	bl	c380 <mpfr_cache@plt>
   2bf6c:	mov	x2, x19
   2bf70:	mov	x1, x26
   2bf74:	mov	w3, #0x0                   	// #0
   2bf78:	mov	x0, x26
   2bf7c:	bl	c1a0 <mpfr_add@plt>
   2bf80:	mov	x0, x19
   2bf84:	bl	c070 <mpfr_clear@plt>
   2bf88:	mov	x2, #0x1                   	// #1
   2bf8c:	ldr	x0, [sp, #144]
   2bf90:	b	2bd80 <mpfr_acosh@@Base+0x1a8>
   2bf94:	mrs	x1, tpidr_el0
   2bf98:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2bf9c:	ldr	x2, [x0, #2576]
   2bfa0:	add	x0, x0, #0xa10
   2bfa4:	blr	x2
   2bfa8:	add	x0, x1, x0
   2bfac:	mov	x1, #0x2                   	// #2
   2bfb0:	movk	x1, #0x8000, lsl #48
   2bfb4:	mov	w19, #0x0                   	// #0
   2bfb8:	ldp	x23, x24, [sp, #48]
   2bfbc:	str	x1, [x22, #16]
   2bfc0:	ldr	w1, [x0]
   2bfc4:	orr	w1, w1, #0x4
   2bfc8:	str	w1, [x0]
   2bfcc:	b	2be48 <mpfr_acosh@@Base+0x270>
   2bfd0:	mov	x1, x21
   2bfd4:	mov	w3, #0x3                   	// #3
   2bfd8:	mov	x2, #0x1                   	// #1
   2bfdc:	mov	x0, x26
   2bfe0:	bl	c530 <mpfr_sub_ui@plt>
   2bfe4:	mov	w3, #0x0                   	// #0
   2bfe8:	mov	x1, x26
   2bfec:	mov	x2, #0x1                   	// #1
   2bff0:	mov	x0, x26
   2bff4:	bl	c2c0 <mpfr_mul_2ui@plt>
   2bff8:	mov	w2, #0x0                   	// #0
   2bffc:	mov	x1, x26
   2c000:	mov	x0, x26
   2c004:	bl	c930 <mpfr_sqrt@plt>
   2c008:	mov	x2, #0x1                   	// #1
   2c00c:	ldr	x0, [sp, #144]
   2c010:	b	2bd80 <mpfr_acosh@@Base+0x1a8>
   2c014:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2c018:	mov	w1, #0x1                   	// #1
   2c01c:	ldp	x23, x24, [sp, #48]
   2c020:	str	w1, [x22, #8]
   2c024:	str	x0, [x22, #16]
   2c028:	b	2be48 <mpfr_acosh@@Base+0x270>
   2c02c:	mov	x23, #0x5                   	// #5
   2c030:	b	2bcb0 <mpfr_acosh@@Base+0xd8>
   2c034:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2c038:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2c03c:	add	x2, x2, #0x470
   2c040:	add	x0, x0, #0xe20
   2c044:	mov	w1, #0x92                  	// #146
   2c048:	bl	cb40 <mpfr_assert_fail@plt>
   2c04c:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2c050:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2c054:	add	x2, x2, #0x458
   2c058:	add	x0, x0, #0xe20
   2c05c:	mov	w1, #0x53                  	// #83
   2c060:	bl	cb40 <mpfr_assert_fail@plt>
   2c064:	nop

000000000002c068 <mpfr_asinh@@Base>:
   2c068:	stp	x29, x30, [sp, #-160]!
   2c06c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2c070:	mov	x29, sp
   2c074:	stp	x21, x22, [sp, #32]
   2c078:	mov	w21, w2
   2c07c:	ldr	x2, [x1, #16]
   2c080:	stp	x19, x20, [sp, #16]
   2c084:	stp	x23, x24, [sp, #48]
   2c088:	cmp	x2, x3
   2c08c:	mov	x24, x1
   2c090:	stp	x27, x28, [sp, #80]
   2c094:	mov	x28, x0
   2c098:	b.le	2c238 <mpfr_asinh@@Base+0x1d0>
   2c09c:	neg	x2, x2, lsl #1
   2c0a0:	cmp	x2, #0x0
   2c0a4:	ldr	x22, [x0]
   2c0a8:	b.le	2c0bc <mpfr_asinh@@Base+0x54>
   2c0ac:	add	x2, x2, #0x2
   2c0b0:	add	x3, x22, #0x1
   2c0b4:	cmp	x3, x2
   2c0b8:	b.cc	2c218 <mpfr_asinh@@Base+0x1b0>  // b.lo, b.ul, b.last
   2c0bc:	stp	x25, x26, [sp, #64]
   2c0c0:	ldr	w26, [x24, #8]
   2c0c4:	cmp	x22, #0x1
   2c0c8:	add	x1, x22, #0x4
   2c0cc:	b.eq	2c37c <mpfr_asinh@@Base+0x314>  // b.none
   2c0d0:	b.le	2c3e0 <mpfr_asinh@@Base+0x378>
   2c0d4:	sub	x0, x22, #0x1
   2c0d8:	mov	w19, #0x40                  	// #64
   2c0dc:	clz	x0, x0
   2c0e0:	sub	w0, w19, w0
   2c0e4:	add	x19, x1, w0, sxtw
   2c0e8:	mrs	x23, tpidr_el0
   2c0ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c0f0:	ldr	x1, [x0, #2576]
   2c0f4:	add	x0, x0, #0xa10
   2c0f8:	blr	x1
   2c0fc:	mov	x4, #0x40                  	// #64
   2c100:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2c104:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2c108:	add	x27, sp, #0x80
   2c10c:	ldr	w0, [x23, x0]
   2c110:	mov	x1, x19
   2c114:	str	w0, [sp, #108]
   2c118:	adrp	x20, 81000 <__gmpfr_l2b@@Base+0x200>
   2c11c:	str	x4, [sp, #112]
   2c120:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c124:	ldr	x3, [x0, #2512]
   2c128:	add	x0, x0, #0x9d0
   2c12c:	blr	x3
   2c130:	add	x3, x23, x0
   2c134:	ldr	x0, [x23, x0]
   2c138:	str	x0, [sp, #120]
   2c13c:	str	x8, [x3]
   2c140:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c144:	ldr	x4, [x0, #2544]
   2c148:	add	x0, x0, #0x9f0
   2c14c:	blr	x4
   2c150:	ldr	x25, [x23, x0]
   2c154:	str	x2, [x23, x0]
   2c158:	mov	x0, x27
   2c15c:	bl	ca80 <mpfr_init2@plt>
   2c160:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   2c164:	cmp	w26, #0x0
   2c168:	ldr	x20, [x20, #3944]
   2c16c:	ldr	x0, [x0, #4008]
   2c170:	csel	x20, x20, x0, lt  // lt = tstop
   2c174:	mov	x2, x24
   2c178:	mov	x1, x24
   2c17c:	mov	w3, #0x3                   	// #3
   2c180:	mov	x0, x27
   2c184:	bl	bd50 <mpfr_mul@plt>
   2c188:	mov	w3, #0x3                   	// #3
   2c18c:	mov	x1, x27
   2c190:	mov	x2, #0x1                   	// #1
   2c194:	mov	x0, x27
   2c198:	bl	c260 <mpfr_add_ui@plt>
   2c19c:	mov	x1, x27
   2c1a0:	mov	w2, #0x0                   	// #0
   2c1a4:	mov	x0, x27
   2c1a8:	bl	c930 <mpfr_sqrt@plt>
   2c1ac:	mov	w3, #0x0                   	// #0
   2c1b0:	mov	x2, x24
   2c1b4:	mov	x1, x27
   2c1b8:	mov	x0, x27
   2c1bc:	blr	x20
   2c1c0:	mov	x1, x27
   2c1c4:	mov	x0, x27
   2c1c8:	mov	w2, #0x0                   	// #0
   2c1cc:	bl	c090 <mpfr_log@plt>
   2c1d0:	ldr	x1, [sp, #144]
   2c1d4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2c1d8:	cmp	x1, x0
   2c1dc:	b.gt	2c280 <mpfr_asinh@@Base+0x218>
   2c1e0:	ldr	x1, [sp, #112]
   2c1e4:	mov	x0, #0xfffffffffffffeff    	// #-257
   2c1e8:	movk	x0, #0x7fff, lsl #48
   2c1ec:	sub	x0, x0, x19
   2c1f0:	cmp	x0, x1
   2c1f4:	b.lt	2c3c8 <mpfr_asinh@@Base+0x360>  // b.tstop
   2c1f8:	add	x19, x19, x1
   2c1fc:	mov	x0, x27
   2c200:	mov	x1, x19
   2c204:	add	x2, x19, x19, lsr #63
   2c208:	asr	x2, x2, #1
   2c20c:	str	x2, [sp, #112]
   2c210:	bl	bed0 <mpfr_set_prec@plt>
   2c214:	b	2c174 <mpfr_asinh@@Base+0x10c>
   2c218:	mov	w4, w21
   2c21c:	mov	w3, #0x0                   	// #0
   2c220:	bl	c540 <mpfr_round_near_x@plt>
   2c224:	mov	w19, w0
   2c228:	cbnz	w0, 2c264 <mpfr_asinh@@Base+0x1fc>
   2c22c:	stp	x25, x26, [sp, #64]
   2c230:	ldr	x22, [x28]
   2c234:	b	2c0c0 <mpfr_asinh@@Base+0x58>
   2c238:	mov	x0, #0x2                   	// #2
   2c23c:	movk	x0, #0x8000, lsl #48
   2c240:	cmp	x2, x0
   2c244:	b.eq	2c398 <mpfr_asinh@@Base+0x330>  // b.none
   2c248:	cmp	x2, x3
   2c24c:	b.eq	2c384 <mpfr_asinh@@Base+0x31c>  // b.none
   2c250:	ldr	w1, [x1, #8]
   2c254:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2c258:	mov	w19, #0x0                   	// #0
   2c25c:	str	w1, [x28, #8]
   2c260:	str	x0, [x28, #16]
   2c264:	mov	w0, w19
   2c268:	ldp	x19, x20, [sp, #16]
   2c26c:	ldp	x21, x22, [sp, #32]
   2c270:	ldp	x23, x24, [sp, #48]
   2c274:	ldp	x27, x28, [sp, #80]
   2c278:	ldp	x29, x30, [sp], #160
   2c27c:	ret
   2c280:	ldr	x8, [sp, #128]
   2c284:	cmp	w21, #0x0
   2c288:	ldr	x0, [sp, #152]
   2c28c:	sub	x8, x8, #0x1
   2c290:	mov	x2, #0x4                   	// #4
   2c294:	cinc	x3, x22, eq  // eq = none
   2c298:	asr	x8, x8, #6
   2c29c:	subs	x1, x2, x1
   2c2a0:	csel	x1, x1, xzr, pl  // pl = nfrst
   2c2a4:	add	x1, x1, #0x1
   2c2a8:	sub	x2, x19, x1
   2c2ac:	add	x1, x8, #0x1
   2c2b0:	bl	c370 <mpfr_round_p@plt>
   2c2b4:	cbz	w0, 2c1e0 <mpfr_asinh@@Base+0x178>
   2c2b8:	mov	w3, w26
   2c2bc:	mov	w2, w21
   2c2c0:	mov	x1, x27
   2c2c4:	mov	x0, x28
   2c2c8:	bl	c6a0 <mpfr_set4@plt>
   2c2cc:	mov	w19, w0
   2c2d0:	mov	x0, x27
   2c2d4:	bl	c070 <mpfr_clear@plt>
   2c2d8:	ldr	x1, [x28, #16]
   2c2dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c2e0:	ldr	x2, [x0, #2576]
   2c2e4:	add	x0, x0, #0xa10
   2c2e8:	blr	x2
   2c2ec:	ldr	w2, [sp, #108]
   2c2f0:	str	w2, [x23, x0]
   2c2f4:	add	x2, x23, x0
   2c2f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c2fc:	ldr	x3, [x0, #2512]
   2c300:	add	x0, x0, #0x9d0
   2c304:	blr	x3
   2c308:	ldr	x3, [sp, #120]
   2c30c:	str	x3, [x23, x0]
   2c310:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c314:	ldr	x4, [x0, #2544]
   2c318:	add	x0, x0, #0x9f0
   2c31c:	blr	x4
   2c320:	str	x25, [x23, x0]
   2c324:	cmp	x25, x1
   2c328:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2c32c:	b.le	2c364 <mpfr_asinh@@Base+0x2fc>
   2c330:	mov	w1, w19
   2c334:	mov	w2, w21
   2c338:	mov	x0, x28
   2c33c:	bl	cb30 <mpfr_check_range@plt>
   2c340:	mov	w19, w0
   2c344:	mov	w0, w19
   2c348:	ldp	x19, x20, [sp, #16]
   2c34c:	ldp	x21, x22, [sp, #32]
   2c350:	ldp	x23, x24, [sp, #48]
   2c354:	ldp	x25, x26, [sp, #64]
   2c358:	ldp	x27, x28, [sp, #80]
   2c35c:	ldp	x29, x30, [sp], #160
   2c360:	ret
   2c364:	cbz	w19, 2c344 <mpfr_asinh@@Base+0x2dc>
   2c368:	ldr	w0, [sp, #108]
   2c36c:	ldp	x25, x26, [sp, #64]
   2c370:	orr	w23, w0, #0x8
   2c374:	str	w23, [x2]
   2c378:	b	2c264 <mpfr_asinh@@Base+0x1fc>
   2c37c:	mov	x19, #0x5                   	// #5
   2c380:	b	2c0e8 <mpfr_asinh@@Base+0x80>
   2c384:	ldr	w0, [x1, #8]
   2c388:	mov	w19, #0x0                   	// #0
   2c38c:	str	w0, [x28, #8]
   2c390:	str	x2, [x28, #16]
   2c394:	b	2c264 <mpfr_asinh@@Base+0x1fc>
   2c398:	mrs	x1, tpidr_el0
   2c39c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c3a0:	ldr	x3, [x0, #2576]
   2c3a4:	add	x0, x0, #0xa10
   2c3a8:	blr	x3
   2c3ac:	add	x0, x1, x0
   2c3b0:	mov	w19, #0x0                   	// #0
   2c3b4:	str	x2, [x28, #16]
   2c3b8:	ldr	w1, [x0]
   2c3bc:	orr	w1, w1, #0x4
   2c3c0:	str	w1, [x0]
   2c3c4:	b	2c264 <mpfr_asinh@@Base+0x1fc>
   2c3c8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2c3cc:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2c3d0:	add	x2, x2, #0x470
   2c3d4:	add	x0, x0, #0xe28
   2c3d8:	mov	w1, #0x6c                  	// #108
   2c3dc:	bl	cb40 <mpfr_assert_fail@plt>
   2c3e0:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2c3e4:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2c3e8:	add	x2, x2, #0x458
   2c3ec:	add	x0, x0, #0xe28
   2c3f0:	mov	w1, #0x50                  	// #80
   2c3f4:	bl	cb40 <mpfr_assert_fail@plt>

000000000002c3f8 <mpfr_atanh@@Base>:
   2c3f8:	stp	x29, x30, [sp, #-352]!
   2c3fc:	mov	x29, sp
   2c400:	ldr	x3, [x1, #16]
   2c404:	stp	x19, x20, [sp, #16]
   2c408:	mov	x20, #0x8000000000000003    	// #-9223372036854775805
   2c40c:	stp	x21, x22, [sp, #32]
   2c410:	cmp	x3, x20
   2c414:	mov	x22, x1
   2c418:	stp	x23, x24, [sp, #48]
   2c41c:	mov	x23, x0
   2c420:	str	w2, [sp, #120]
   2c424:	b.le	2c7d8 <mpfr_atanh@@Base+0x3e0>
   2c428:	cmp	x3, #0x0
   2c42c:	b.gt	2c800 <mpfr_atanh@@Base+0x408>
   2c430:	stp	x25, x26, [sp, #64]
   2c434:	negs	x2, x3, lsl #1
   2c438:	ldr	x25, [x0]
   2c43c:	b.eq	2c450 <mpfr_atanh@@Base+0x58>  // b.none
   2c440:	add	x2, x2, #0x1
   2c444:	add	x4, x25, #0x1
   2c448:	cmp	x4, x2
   2c44c:	b.cc	2c8cc <mpfr_atanh@@Base+0x4d4>  // b.lo, b.ul, b.last
   2c450:	stp	x27, x28, [sp, #80]
   2c454:	mrs	x21, tpidr_el0
   2c458:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c45c:	ldr	x1, [x0, #2576]
   2c460:	add	x0, x0, #0xa10
   2c464:	blr	x1
   2c468:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   2c46c:	ldr	x19, [x22]
   2c470:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2c474:	ldr	w0, [x21, x0]
   2c478:	mov	w6, #0x1                   	// #1
   2c47c:	str	w0, [sp, #124]
   2c480:	str	x19, [sp, #160]
   2c484:	str	w6, [sp, #168]
   2c488:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c48c:	ldr	x2, [x0, #2512]
   2c490:	add	x0, x0, #0x9d0
   2c494:	blr	x2
   2c498:	add	x2, x21, x0
   2c49c:	ldr	x0, [x21, x0]
   2c4a0:	str	x0, [sp, #136]
   2c4a4:	str	x4, [x2]
   2c4a8:	str	x3, [sp, #176]
   2c4ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c4b0:	ldr	x5, [x0, #2544]
   2c4b4:	add	x0, x0, #0x9f0
   2c4b8:	blr	x5
   2c4bc:	ldr	x2, [x21, x0]
   2c4c0:	cmp	x25, x19
   2c4c4:	ldr	x5, [x22, #24]
   2c4c8:	str	x1, [x21, x0]
   2c4cc:	str	x2, [sp, #144]
   2c4d0:	csel	x19, x25, x19, ge  // ge = tcont
   2c4d4:	str	x5, [sp, #184]
   2c4d8:	cmp	x19, #0x1
   2c4dc:	b.eq	2c4f8 <mpfr_atanh@@Base+0x100>  // b.none
   2c4e0:	b.le	2c96c <mpfr_atanh@@Base+0x574>
   2c4e4:	sub	x1, x19, #0x1
   2c4e8:	mov	w0, #0x40                  	// #64
   2c4ec:	clz	x1, x1
   2c4f0:	sub	w0, w0, w1
   2c4f4:	add	x19, x19, w0, sxtw
   2c4f8:	add	x0, sp, #0xa0
   2c4fc:	str	x0, [sp, #128]
   2c500:	add	x0, sp, #0x100
   2c504:	add	x19, x19, #0x4
   2c508:	add	x20, sp, #0xc0
   2c50c:	str	x0, [sp, #104]
   2c510:	mov	x0, #0x40                  	// #64
   2c514:	mov	x1, x19
   2c518:	add	x27, sp, #0xe0
   2c51c:	str	x0, [sp, #152]
   2c520:	mov	x0, x20
   2c524:	bl	ca80 <mpfr_init2@plt>
   2c528:	add	x24, sp, #0x120
   2c52c:	add	x28, sp, #0x140
   2c530:	mov	x1, x19
   2c534:	mov	x0, x27
   2c538:	bl	ca80 <mpfr_init2@plt>
   2c53c:	mov	x0, x25
   2c540:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   2c544:	add	w0, w0, #0x1
   2c548:	ldr	x1, [sp, #176]
   2c54c:	sxtw	x0, w0
   2c550:	sdiv	x0, x25, x0
   2c554:	mvn	x0, x0
   2c558:	cmp	x1, x0
   2c55c:	b.le	2c6d0 <mpfr_atanh@@Base+0x2d8>
   2c560:	ldr	x26, [sp, #128]
   2c564:	mov	w3, #0x2                   	// #2
   2c568:	mov	x1, #0x1                   	// #1
   2c56c:	mov	x0, x27
   2c570:	mov	x2, x26
   2c574:	bl	ca50 <mpfr_ui_sub@plt>
   2c578:	mov	x1, x26
   2c57c:	mov	w3, #0x3                   	// #3
   2c580:	mov	x2, #0x1                   	// #1
   2c584:	mov	x0, x20
   2c588:	bl	c260 <mpfr_add_ui@plt>
   2c58c:	mov	w3, #0x0                   	// #0
   2c590:	mov	x2, x27
   2c594:	mov	x1, x20
   2c598:	mov	x0, x20
   2c59c:	bl	c620 <mpfr_div@plt>
   2c5a0:	mov	x1, x20
   2c5a4:	mov	w2, #0x0                   	// #0
   2c5a8:	mov	x0, x20
   2c5ac:	bl	c090 <mpfr_log@plt>
   2c5b0:	mov	x2, #0x1                   	// #1
   2c5b4:	mov	x1, x20
   2c5b8:	mov	x0, x20
   2c5bc:	mov	w3, #0x0                   	// #0
   2c5c0:	bl	c8f0 <mpfr_div_2ui@plt>
   2c5c4:	ldr	x0, [sp, #208]
   2c5c8:	mov	x2, #0x4                   	// #4
   2c5cc:	subs	x2, x2, x0
   2c5d0:	csel	x2, x2, xzr, pl  // pl = nfrst
   2c5d4:	add	x2, x2, #0x1
   2c5d8:	sub	x2, x19, x2
   2c5dc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2c5e0:	cmp	x0, x1
   2c5e4:	b.ne	2c854 <mpfr_atanh@@Base+0x45c>  // b.any
   2c5e8:	ldr	w3, [x22, #8]
   2c5ec:	mov	x1, x20
   2c5f0:	ldr	w2, [sp, #120]
   2c5f4:	mov	x0, x23
   2c5f8:	bl	c6a0 <mpfr_set4@plt>
   2c5fc:	mov	w19, w0
   2c600:	mov	x0, x20
   2c604:	bl	c070 <mpfr_clear@plt>
   2c608:	mov	x0, x27
   2c60c:	bl	c070 <mpfr_clear@plt>
   2c610:	ldr	x1, [x23, #16]
   2c614:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c618:	ldr	x2, [x0, #2576]
   2c61c:	add	x0, x0, #0xa10
   2c620:	blr	x2
   2c624:	ldr	w2, [sp, #124]
   2c628:	str	w2, [x21, x0]
   2c62c:	add	x2, x21, x0
   2c630:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c634:	ldr	x3, [x0, #2512]
   2c638:	add	x0, x0, #0x9d0
   2c63c:	blr	x3
   2c640:	ldr	x3, [sp, #136]
   2c644:	str	x3, [x21, x0]
   2c648:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c64c:	ldr	x4, [x0, #2544]
   2c650:	add	x0, x0, #0x9f0
   2c654:	blr	x4
   2c658:	ldr	x4, [sp, #144]
   2c65c:	str	x4, [x21, x0]
   2c660:	cmp	x3, x1
   2c664:	ccmp	x4, x1, #0x1, le
   2c668:	b.ge	2c6a0 <mpfr_atanh@@Base+0x2a8>  // b.tcont
   2c66c:	ldr	w2, [sp, #120]
   2c670:	mov	w1, w19
   2c674:	mov	x0, x23
   2c678:	bl	cb30 <mpfr_check_range@plt>
   2c67c:	mov	w19, w0
   2c680:	ldp	x25, x26, [sp, #64]
   2c684:	ldp	x27, x28, [sp, #80]
   2c688:	mov	w0, w19
   2c68c:	ldp	x19, x20, [sp, #16]
   2c690:	ldp	x21, x22, [sp, #32]
   2c694:	ldp	x23, x24, [sp, #48]
   2c698:	ldp	x29, x30, [sp], #352
   2c69c:	ret
   2c6a0:	cbz	w19, 2c680 <mpfr_atanh@@Base+0x288>
   2c6a4:	ldr	w0, [sp, #124]
   2c6a8:	ldp	x25, x26, [sp, #64]
   2c6ac:	orr	w0, w0, #0x8
   2c6b0:	ldp	x27, x28, [sp, #80]
   2c6b4:	str	w0, [x2]
   2c6b8:	mov	w0, w19
   2c6bc:	ldp	x19, x20, [sp, #16]
   2c6c0:	ldp	x21, x22, [sp, #32]
   2c6c4:	ldp	x23, x24, [sp, #48]
   2c6c8:	ldp	x29, x30, [sp], #352
   2c6cc:	ret
   2c6d0:	ldr	x0, [sp, #192]
   2c6d4:	mov	x26, #0x3                   	// #3
   2c6d8:	mov	x1, x0
   2c6dc:	mov	x0, x24
   2c6e0:	str	x1, [sp, #112]
   2c6e4:	bl	ca80 <mpfr_init2@plt>
   2c6e8:	ldr	x1, [sp, #112]
   2c6ec:	mov	x0, x28
   2c6f0:	bl	ca80 <mpfr_init2@plt>
   2c6f4:	ldp	x0, x1, [sp, #104]
   2c6f8:	bl	ca80 <mpfr_init2@plt>
   2c6fc:	ldr	w3, [sp, #168]
   2c700:	mov	x0, x24
   2c704:	ldr	x1, [sp, #128]
   2c708:	mov	w2, #0x5                   	// #5
   2c70c:	bl	c6a0 <mpfr_set4@plt>
   2c710:	ldr	w3, [sp, #296]
   2c714:	mov	x1, x24
   2c718:	mov	x0, x20
   2c71c:	mov	w2, #0x5                   	// #5
   2c720:	bl	c6a0 <mpfr_set4@plt>
   2c724:	ldr	x0, [sp, #104]
   2c728:	mov	w3, #0x5                   	// #5
   2c72c:	ldr	x1, [sp, #128]
   2c730:	mov	x2, x1
   2c734:	bl	bd50 <mpfr_mul@plt>
   2c738:	b	2c754 <mpfr_atanh@@Base+0x35c>
   2c73c:	add	x26, x26, #0x2
   2c740:	mov	x2, x28
   2c744:	mov	x1, x20
   2c748:	mov	x0, x20
   2c74c:	mov	w3, #0x5                   	// #5
   2c750:	bl	c1a0 <mpfr_add@plt>
   2c754:	ldr	x2, [sp, #104]
   2c758:	mov	x1, x24
   2c75c:	mov	w3, #0x5                   	// #5
   2c760:	mov	x0, x24
   2c764:	bl	bd50 <mpfr_mul@plt>
   2c768:	mov	x2, x26
   2c76c:	mov	x1, x24
   2c770:	mov	x0, x28
   2c774:	mov	w3, #0x5                   	// #5
   2c778:	bl	cc60 <mpfr_div_ui@plt>
   2c77c:	ldr	x2, [sp, #112]
   2c780:	ldr	x0, [sp, #208]
   2c784:	ldr	x1, [sp, #336]
   2c788:	sub	x0, x0, x2
   2c78c:	cmp	x1, x0
   2c790:	b.gt	2c73c <mpfr_atanh@@Base+0x344>
   2c794:	add	x0, x26, #0x8
   2c798:	lsr	x0, x0, #1
   2c79c:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   2c7a0:	ldr	x1, [sp, #112]
   2c7a4:	mov	w26, w0
   2c7a8:	add	w0, w0, #0x2
   2c7ac:	cmp	x1, w0, sxtw
   2c7b0:	b.le	2c934 <mpfr_atanh@@Base+0x53c>
   2c7b4:	mov	x0, x24
   2c7b8:	bl	c070 <mpfr_clear@plt>
   2c7bc:	mov	x0, x28
   2c7c0:	bl	c070 <mpfr_clear@plt>
   2c7c4:	ldr	x0, [sp, #104]
   2c7c8:	bl	c070 <mpfr_clear@plt>
   2c7cc:	sub	x2, x19, w26, sxtw
   2c7d0:	ldr	x0, [sp, #208]
   2c7d4:	b	2c5dc <mpfr_atanh@@Base+0x1e4>
   2c7d8:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2c7dc:	add	x3, x3, x0
   2c7e0:	cmp	x3, #0x1
   2c7e4:	b.ls	2c808 <mpfr_atanh@@Base+0x410>  // b.plast
   2c7e8:	ldr	w1, [x1, #8]
   2c7ec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2c7f0:	mov	w19, #0x0                   	// #0
   2c7f4:	str	w1, [x23, #8]
   2c7f8:	str	x0, [x23, #16]
   2c7fc:	b	2c688 <mpfr_atanh@@Base+0x290>
   2c800:	cmp	x3, #0x1
   2c804:	b.eq	2c8f0 <mpfr_atanh@@Base+0x4f8>  // b.none
   2c808:	mrs	x1, tpidr_el0
   2c80c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c810:	ldr	x2, [x0, #2576]
   2c814:	add	x0, x0, #0xa10
   2c818:	blr	x2
   2c81c:	add	x0, x1, x0
   2c820:	mov	x1, #0x2                   	// #2
   2c824:	movk	x1, #0x8000, lsl #48
   2c828:	str	x1, [x23, #16]
   2c82c:	mov	w19, #0x0                   	// #0
   2c830:	ldr	w1, [x0]
   2c834:	ldp	x21, x22, [sp, #32]
   2c838:	orr	w1, w1, #0x4
   2c83c:	str	w1, [x0]
   2c840:	mov	w0, w19
   2c844:	ldp	x19, x20, [sp, #16]
   2c848:	ldp	x23, x24, [sp, #48]
   2c84c:	ldp	x29, x30, [sp], #352
   2c850:	ret
   2c854:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2c858:	cmp	x0, x1
   2c85c:	b.le	2c888 <mpfr_atanh@@Base+0x490>
   2c860:	ldr	w0, [sp, #120]
   2c864:	ldr	x1, [sp, #192]
   2c868:	cmp	w0, #0x0
   2c86c:	ldr	x0, [sp, #216]
   2c870:	sub	x1, x1, #0x1
   2c874:	cinc	x3, x25, eq  // eq = none
   2c878:	asr	x1, x1, #6
   2c87c:	add	x1, x1, #0x1
   2c880:	bl	c370 <mpfr_round_p@plt>
   2c884:	cbnz	w0, 2c5e8 <mpfr_atanh@@Base+0x1f0>
   2c888:	ldr	x1, [sp, #152]
   2c88c:	mov	x0, #0xfffffffffffffeff    	// #-257
   2c890:	movk	x0, #0x7fff, lsl #48
   2c894:	sub	x0, x0, x19
   2c898:	cmp	x0, x1
   2c89c:	b.lt	2c954 <mpfr_atanh@@Base+0x55c>  // b.tstop
   2c8a0:	add	x19, x19, x1
   2c8a4:	mov	x0, x20
   2c8a8:	mov	x1, x19
   2c8ac:	add	x2, x19, x19, lsr #63
   2c8b0:	asr	x2, x2, #1
   2c8b4:	str	x2, [sp, #152]
   2c8b8:	bl	bed0 <mpfr_set_prec@plt>
   2c8bc:	mov	x1, x19
   2c8c0:	mov	x0, x27
   2c8c4:	bl	bed0 <mpfr_set_prec@plt>
   2c8c8:	b	2c53c <mpfr_atanh@@Base+0x144>
   2c8cc:	ldr	w4, [sp, #120]
   2c8d0:	mov	w3, #0x1                   	// #1
   2c8d4:	bl	c540 <mpfr_round_near_x@plt>
   2c8d8:	mov	w19, w0
   2c8dc:	cbnz	w0, 2c94c <mpfr_atanh@@Base+0x554>
   2c8e0:	stp	x27, x28, [sp, #80]
   2c8e4:	ldr	x25, [x23]
   2c8e8:	ldr	x3, [x22, #16]
   2c8ec:	b	2c454 <mpfr_atanh@@Base+0x5c>
   2c8f0:	mov	x0, x1
   2c8f4:	bl	bf00 <mpfr_powerof2_raw@plt>
   2c8f8:	cbz	w0, 2c808 <mpfr_atanh@@Base+0x410>
   2c8fc:	mrs	x1, tpidr_el0
   2c900:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c904:	ldr	x2, [x0, #2576]
   2c908:	add	x0, x0, #0xa10
   2c90c:	blr	x2
   2c910:	add	x0, x1, x0
   2c914:	ldr	w1, [x22, #8]
   2c918:	str	w1, [x23, #8]
   2c91c:	mov	w19, #0x0                   	// #0
   2c920:	str	x20, [x23, #16]
   2c924:	ldr	w1, [x0]
   2c928:	orr	w1, w1, #0x20
   2c92c:	str	w1, [x0]
   2c930:	b	2c688 <mpfr_atanh@@Base+0x290>
   2c934:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2c938:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2c93c:	add	x2, x2, #0xe38
   2c940:	add	x0, x0, #0xe30
   2c944:	mov	w1, #0x56                  	// #86
   2c948:	bl	cb40 <mpfr_assert_fail@plt>
   2c94c:	ldp	x25, x26, [sp, #64]
   2c950:	b	2c688 <mpfr_atanh@@Base+0x290>
   2c954:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2c958:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2c95c:	add	x2, x2, #0x470
   2c960:	add	x0, x0, #0xe30
   2c964:	mov	w1, #0xca                  	// #202
   2c968:	bl	cb40 <mpfr_assert_fail@plt>
   2c96c:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2c970:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2c974:	add	x2, x2, #0xd78
   2c978:	add	x0, x0, #0xe30
   2c97c:	mov	w1, #0xa1                  	// #161
   2c980:	bl	cb40 <mpfr_assert_fail@plt>
   2c984:	nop

000000000002c988 <mpfr_atan@@Base>:
   2c988:	mov	x12, #0x12d0                	// #4816
   2c98c:	sub	sp, sp, x12
   2c990:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   2c994:	stp	x29, x30, [sp]
   2c998:	mov	x29, sp
   2c99c:	ldr	x3, [x1, #16]
   2c9a0:	stp	x19, x20, [sp, #16]
   2c9a4:	str	x0, [sp, #200]
   2c9a8:	cmp	x3, x4
   2c9ac:	str	w2, [sp, #244]
   2c9b0:	str	x1, [sp, #256]
   2c9b4:	b.le	2db4c <mpfr_atan@@Base+0x11c4>
   2c9b8:	neg	x2, x3, lsl #1
   2c9bc:	cmp	x2, #0x0
   2c9c0:	b.le	2c9d8 <mpfr_atan@@Base+0x50>
   2c9c4:	ldr	x4, [x0]
   2c9c8:	add	x2, x2, #0x1
   2c9cc:	add	x4, x4, #0x1
   2c9d0:	cmp	x4, x2
   2c9d4:	b.cc	2daec <mpfr_atan@@Base+0x1164>  // b.lo, b.ul, b.last
   2c9d8:	stp	x21, x22, [sp, #32]
   2c9dc:	mrs	x10, tpidr_el0
   2c9e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2c9e4:	ldr	x1, [x0, #2576]
   2c9e8:	add	x0, x0, #0xa10
   2c9ec:	blr	x1
   2c9f0:	add	x11, sp, #0x170
   2c9f4:	ldr	x1, [sp, #256]
   2c9f8:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   2c9fc:	ldr	w0, [x10, x0]
   2ca00:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   2ca04:	str	w0, [sp, #284]
   2ca08:	mov	w8, #0x1                   	// #1
   2ca0c:	ldr	x7, [x1, #24]
   2ca10:	stp	x3, x7, [sp, #384]
   2ca14:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2ca18:	ldr	x2, [x0, #2512]
   2ca1c:	add	x0, x0, #0x9d0
   2ca20:	blr	x2
   2ca24:	add	x5, x10, x0
   2ca28:	str	x11, [sp, #208]
   2ca2c:	ldr	x0, [x10, x0]
   2ca30:	str	x0, [sp, #304]
   2ca34:	ldr	x9, [x1]
   2ca38:	mov	x1, #0x1                   	// #1
   2ca3c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2ca40:	ldr	x2, [x0, #2544]
   2ca44:	add	x0, x0, #0x9f0
   2ca48:	blr	x2
   2ca4c:	str	x6, [x5]
   2ca50:	ldr	x3, [x10, x0]
   2ca54:	mov	x2, #0x0                   	// #0
   2ca58:	str	x4, [x10, x0]
   2ca5c:	mov	x0, x11
   2ca60:	str	x10, [sp, #272]
   2ca64:	str	x3, [sp, #312]
   2ca68:	str	x9, [sp, #368]
   2ca6c:	str	w8, [sp, #376]
   2ca70:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   2ca74:	str	w0, [sp, #240]
   2ca78:	cbz	w0, 2dbb4 <mpfr_atan@@Base+0x122c>
   2ca7c:	ldr	x0, [sp, #200]
   2ca80:	stp	x23, x24, [sp, #48]
   2ca84:	stp	x25, x26, [sp, #64]
   2ca88:	ldr	x20, [x0]
   2ca8c:	stp	x27, x28, [sp, #80]
   2ca90:	cmp	x20, #0x1
   2ca94:	b.eq	2dc80 <mpfr_atan@@Base+0x12f8>  // b.none
   2ca98:	b.le	2dcbc <mpfr_atan@@Base+0x1334>
   2ca9c:	sub	x0, x20, #0x1
   2caa0:	mov	w19, #0x40                  	// #64
   2caa4:	clz	x0, x0
   2caa8:	add	x27, sp, #0x160
   2caac:	sub	w19, w19, w0
   2cab0:	mov	x0, x27
   2cab4:	add	x20, x20, w19, sxtw
   2cab8:	add	x21, x20, #0x44
   2cabc:	add	x1, x20, #0x4
   2cac0:	str	x1, [sp, #248]
   2cac4:	mov	x1, x21
   2cac8:	bl	c900 <mpfr_mpz_init2@plt>
   2cacc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2cad0:	cmp	x21, x0
   2cad4:	b.ge	2df7c <mpfr_atan@@Base+0x15f4>  // b.tcont
   2cad8:	add	x19, x20, #0x82
   2cadc:	adds	x20, x20, #0x43
   2cae0:	csel	x19, x19, x20, mi  // mi = first
   2cae4:	asr	x19, x19, #6
   2cae8:	add	x19, x19, #0x1
   2caec:	lsl	x0, x19, #2
   2caf0:	cmp	x0, #0x10
   2caf4:	b.gt	2cdac <mpfr_atan@@Base+0x424>
   2caf8:	add	x2, sp, #0x220
   2cafc:	str	xzr, [sp, #528]
   2cb00:	mov	x0, x2
   2cb04:	str	x2, [sp, #536]
   2cb08:	add	x1, sp, #0x6a0
   2cb0c:	add	x3, x19, x19, lsl #1
   2cb10:	str	x1, [sp, #112]
   2cb14:	add	x1, sp, #0x6b0
   2cb18:	str	x1, [sp, #320]
   2cb1c:	add	x1, sp, #0x2a0
   2cb20:	mov	w2, #0x1                   	// #1
   2cb24:	add	x3, x0, x3, lsl #3
   2cb28:	mov	x4, #0x40                  	// #64
   2cb2c:	mov	w20, #0x0                   	// #0
   2cb30:	str	x1, [sp, #120]
   2cb34:	add	x1, x0, x19, lsl #3
   2cb38:	add	x19, x0, x19, lsl #4
   2cb3c:	str	x4, [sp, #328]
   2cb40:	str	x21, [sp, #400]
   2cb44:	str	w2, [sp, #408]
   2cb48:	stp	x3, x21, [sp, #424]
   2cb4c:	str	w2, [sp, #440]
   2cb50:	stp	x0, x21, [sp, #456]
   2cb54:	str	w2, [sp, #472]
   2cb58:	str	x1, [sp, #488]
   2cb5c:	str	x21, [sp, #496]
   2cb60:	str	w2, [sp, #504]
   2cb64:	str	x19, [sp, #520]
   2cb68:	ldr	x0, [sp, #384]
   2cb6c:	mov	x23, #0x2                   	// #2
   2cb70:	cmp	x0, #0x0
   2cb74:	sub	x23, x23, x0
   2cb78:	ldr	x0, [sp, #248]
   2cb7c:	csinc	x23, x23, xzr, lt  // lt = tstop
   2cb80:	add	x23, x0, x23
   2cb84:	cmn	x23, #0x2
   2cb88:	b.eq	2db84 <mpfr_atan@@Base+0x11fc>  // b.none
   2cb8c:	cmn	x23, #0x1
   2cb90:	b.lt	2db9c <mpfr_atan@@Base+0x1214>  // b.tstop
   2cb94:	add	x21, x23, #0x2
   2cb98:	mov	w1, #0x40                  	// #64
   2cb9c:	clz	x21, x21
   2cba0:	add	x23, x23, #0x1
   2cba4:	sub	w19, w1, w21
   2cba8:	add	w0, w19, w19, lsl #1
   2cbac:	cmp	w0, #0x3
   2cbb0:	b.eq	2cbd0 <mpfr_atan@@Base+0x248>  // b.none
   2cbb4:	mov	w0, #0x3f                  	// #63
   2cbb8:	sub	w0, w0, w21
   2cbbc:	add	w0, w0, w0, lsl #1
   2cbc0:	sxtw	x0, w0
   2cbc4:	clz	x0, x0
   2cbc8:	sub	w0, w1, w0
   2cbcc:	add	x23, x23, w0, sxtw
   2cbd0:	ldr	x0, [sp, #200]
   2cbd4:	ldr	x0, [x0]
   2cbd8:	cmp	x0, #0x64
   2cbdc:	b.gt	2cd70 <mpfr_atan@@Base+0x3e8>
   2cbe0:	mov	x22, #0x0                   	// #0
   2cbe4:	str	xzr, [sp, #264]
   2cbe8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2cbec:	cmp	x23, x0
   2cbf0:	ldr	x1, [sp, #528]
   2cbf4:	b.ge	2df7c <mpfr_atan@@Base+0x15f4>  // b.tcont
   2cbf8:	sub	x0, x23, #0x1
   2cbfc:	asr	x0, x0, #6
   2cc00:	add	x24, x0, #0x1
   2cc04:	lsl	x2, x24, #5
   2cc08:	str	x2, [sp, #528]
   2cc0c:	cbnz	x1, 2cde8 <mpfr_atan@@Base+0x460>
   2cc10:	mov	x0, x2
   2cc14:	bl	ccf0 <mpfr_allocate_func@plt>
   2cc18:	str	x0, [sp, #536]
   2cc1c:	add	x2, x24, x24, lsl #1
   2cc20:	mov	w1, #0x41                  	// #65
   2cc24:	sub	w21, w1, w21
   2cc28:	add	x3, x0, x24, lsl #3
   2cc2c:	add	x1, x0, x2, lsl #3
   2cc30:	mov	w2, #0x1                   	// #1
   2cc34:	str	x23, [sp, #400]
   2cc38:	str	w2, [sp, #408]
   2cc3c:	stp	x1, x23, [sp, #424]
   2cc40:	add	x1, x0, x24, lsl #4
   2cc44:	str	w2, [sp, #440]
   2cc48:	stp	x0, x23, [sp, #456]
   2cc4c:	add	w0, w21, w21, lsl #1
   2cc50:	cmp	w0, w20
   2cc54:	str	w0, [sp, #280]
   2cc58:	str	w2, [sp, #472]
   2cc5c:	stp	x3, x23, [sp, #488]
   2cc60:	str	w2, [sp, #504]
   2cc64:	str	x1, [sp, #520]
   2cc68:	b.le	2cca8 <mpfr_atan@@Base+0x320>
   2cc6c:	ldr	x1, [sp, #112]
   2cc70:	mvn	w0, w20
   2cc74:	add	x21, x1, w20, sxtw #4
   2cc78:	ldr	w1, [sp, #280]
   2cc7c:	add	w0, w0, w1
   2cc80:	add	x20, x0, w20, sxtw
   2cc84:	ldr	x0, [sp, #320]
   2cc88:	add	x20, x0, x20, lsl #4
   2cc8c:	nop
   2cc90:	mov	x0, x21
   2cc94:	mov	x1, x23
   2cc98:	add	x21, x21, #0x10
   2cc9c:	bl	c900 <mpfr_mpz_init2@plt>
   2cca0:	cmp	x20, x21
   2cca4:	b.ne	2cc90 <mpfr_atan@@Base+0x308>  // b.any
   2cca8:	ldr	w0, [sp, #240]
   2ccac:	cmp	w0, #0x0
   2ccb0:	b.le	2d9a4 <mpfr_atan@@Base+0x101c>
   2ccb4:	ldr	x2, [sp, #208]
   2ccb8:	add	x28, sp, #0x1b0
   2ccbc:	mov	x0, x28
   2ccc0:	mov	w3, #0x0                   	// #0
   2ccc4:	mov	x1, #0x1                   	// #1
   2ccc8:	neg	x20, x22
   2cccc:	bl	c2f0 <mpfr_ui_div@plt>
   2ccd0:	ldr	x21, [sp, #448]
   2ccd4:	cmp	x20, x21
   2ccd8:	b.ge	2d9cc <mpfr_atan@@Base+0x1044>  // b.tcont
   2ccdc:	ldr	w0, [sp, #240]
   2cce0:	add	x23, sp, #0x1d0
   2cce4:	mov	x24, #0x0                   	// #0
   2cce8:	cmp	w0, #0x0
   2ccec:	cset	w22, gt
   2ccf0:	mov	x1, x28
   2ccf4:	mov	w2, #0x0                   	// #0
   2ccf8:	mov	x0, x23
   2ccfc:	bl	c400 <mpfr_sqr@plt>
   2cd00:	mov	w3, #0x0                   	// #0
   2cd04:	mov	x1, x23
   2cd08:	mov	x2, #0x1                   	// #1
   2cd0c:	mov	x0, x23
   2cd10:	bl	c260 <mpfr_add_ui@plt>
   2cd14:	mov	x1, x23
   2cd18:	mov	w2, #0x0                   	// #0
   2cd1c:	mov	x0, x23
   2cd20:	bl	c930 <mpfr_sqrt@plt>
   2cd24:	mov	w3, #0x0                   	// #0
   2cd28:	mov	x1, x23
   2cd2c:	mov	x0, x23
   2cd30:	mov	x2, #0x1                   	// #1
   2cd34:	bl	c530 <mpfr_sub_ui@plt>
   2cd38:	cmp	x24, #0x0
   2cd3c:	mov	w3, #0x0                   	// #0
   2cd40:	ccmp	w22, #0x0, #0x4, eq  // eq = none
   2cd44:	b.eq	2cdc0 <mpfr_atan@@Base+0x438>  // b.none
   2cd48:	ldr	x2, [sp, #208]
   2cd4c:	mov	x1, x23
   2cd50:	mov	x0, x28
   2cd54:	bl	bd50 <mpfr_mul@plt>
   2cd58:	ldr	x0, [sp, #448]
   2cd5c:	cmp	x20, x0
   2cd60:	b.ge	2cdf8 <mpfr_atan@@Base+0x470>  // b.tcont
   2cd64:	mov	x21, x0
   2cd68:	mov	x24, #0x1                   	// #1
   2cd6c:	b	2ccf0 <mpfr_atan@@Base+0x368>
   2cd70:	cmp	x23, #0x1
   2cd74:	b.eq	2dd18 <mpfr_atan@@Base+0x1390>  // b.none
   2cd78:	b.le	2dd2c <mpfr_atan@@Base+0x13a4>
   2cd7c:	sub	x0, x23, #0x1
   2cd80:	mov	w2, #0x40                  	// #64
   2cd84:	clz	x0, x0
   2cd88:	mov	x1, #0x9                   	// #9
   2cd8c:	sub	w2, w2, w0
   2cd90:	asr	w2, w2, #1
   2cd94:	sub	w2, w2, #0x3
   2cd98:	add	x0, x1, w2, sxtw #1
   2cd9c:	sxtw	x22, w2
   2cda0:	add	x23, x23, x0
   2cda4:	str	x0, [sp, #264]
   2cda8:	b	2cbe8 <mpfr_atan@@Base+0x260>
   2cdac:	lsl	x0, x19, #5
   2cdb0:	str	x0, [sp, #528]
   2cdb4:	bl	ccf0 <mpfr_allocate_func@plt>
   2cdb8:	str	x0, [sp, #536]
   2cdbc:	b	2cb08 <mpfr_atan@@Base+0x180>
   2cdc0:	mov	x2, x28
   2cdc4:	mov	x1, x23
   2cdc8:	mov	x0, x28
   2cdcc:	bl	c620 <mpfr_div@plt>
   2cdd0:	ldr	x0, [sp, #448]
   2cdd4:	add	x24, x24, #0x1
   2cdd8:	cmp	x0, x20
   2cddc:	b.le	2d6f4 <mpfr_atan@@Base+0xd6c>
   2cde0:	mov	x21, x0
   2cde4:	b	2ccf0 <mpfr_atan@@Base+0x368>
   2cde8:	ldr	x0, [sp, #536]
   2cdec:	bl	c1c0 <mpfr_reallocate_func@plt>
   2cdf0:	str	x0, [sp, #536]
   2cdf4:	b	2cc1c <mpfr_atan@@Base+0x294>
   2cdf8:	mov	x1, #0x1                   	// #1
   2cdfc:	str	x1, [sp, #288]
   2ce00:	mov	x1, #0x9                   	// #9
   2ce04:	sub	x1, x1, x21, lsl #1
   2ce08:	str	x1, [sp, #296]
   2ce0c:	sub	w2, w19, #0x1
   2ce10:	str	w2, [sp, #168]
   2ce14:	add	x2, sp, #0x190
   2ce18:	str	x2, [sp, #216]
   2ce1c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   2ce20:	str	x2, [sp, #416]
   2ce24:	ldr	x2, [sp, #112]
   2ce28:	add	w1, w19, #0x1
   2ce2c:	add	x1, x1, #0x1
   2ce30:	mov	x19, #0x1                   	// #1
   2ce34:	add	x1, x2, x1, lsl #4
   2ce38:	str	x1, [sp, #136]
   2ce3c:	b	2ce78 <mpfr_atan@@Base+0x4f0>
   2ce40:	ldr	x0, [sp, #136]
   2ce44:	sub	x0, x0, #0x10
   2ce48:	str	x0, [sp, #152]
   2ce4c:	lsl	x0, x19, #1
   2ce50:	str	x0, [sp, #176]
   2ce54:	ldr	w0, [sp, #168]
   2ce58:	ldr	x19, [sp, #176]
   2ce5c:	sub	w0, w0, #0x1
   2ce60:	cmn	w0, #0x1
   2ce64:	str	w0, [sp, #168]
   2ce68:	ldr	x0, [sp, #152]
   2ce6c:	str	x0, [sp, #136]
   2ce70:	b.eq	2d028 <mpfr_atan@@Base+0x6a0>  // b.none
   2ce74:	ldr	x0, [sp, #448]
   2ce78:	mov	x20, #0x8000000000000001    	// #-9223372036854775807
   2ce7c:	cmp	x0, x20
   2ce80:	b.eq	2d028 <mpfr_atan@@Base+0x6a0>  // b.none
   2ce84:	add	x23, sp, #0x1d0
   2ce88:	mov	w3, #0x0                   	// #0
   2ce8c:	mov	x2, x19
   2ce90:	mov	x1, x28
   2ce94:	mov	x0, x23
   2ce98:	bl	c2c0 <mpfr_mul_2ui@plt>
   2ce9c:	mov	x1, x23
   2cea0:	mov	x0, x23
   2cea4:	mov	w2, #0x1                   	// #1
   2cea8:	bl	c300 <mpfr_rint@plt>
   2ceac:	ldr	x0, [sp, #480]
   2ceb0:	cmp	x0, x20
   2ceb4:	b.eq	2ce40 <mpfr_atan@@Base+0x4b8>  // b.none
   2ceb8:	mov	x1, x23
   2cebc:	mov	x0, x27
   2cec0:	bl	cac0 <mpfr_get_z_2exp@plt>
   2cec4:	neg	x2, x0
   2cec8:	mov	x1, x27
   2cecc:	mov	x0, x27
   2ced0:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2ced4:	mov	x1, x27
   2ced8:	mov	w2, #0x0                   	// #0
   2cedc:	mov	x0, x23
   2cee0:	bl	c240 <mpfr_set_z@plt>
   2cee4:	mov	x2, x19
   2cee8:	mov	x1, x23
   2ceec:	mov	x0, x23
   2cef0:	mov	w3, #0x0                   	// #0
   2cef4:	bl	c8f0 <mpfr_div_2ui@plt>
   2cef8:	ldr	x0, [sp, #496]
   2cefc:	str	x0, [sp, #128]
   2cf00:	cmp	x0, #0xc0
   2cf04:	b.gt	2d298 <mpfr_atan@@Base+0x910>
   2cf08:	cmp	x19, #0x4
   2cf0c:	b.eq	2d9ec <mpfr_atan@@Base+0x1064>  // b.none
   2cf10:	b.hi	2d20c <mpfr_atan@@Base+0x884>  // b.pmore
   2cf14:	cmp	x19, #0x1
   2cf18:	b.eq	2da5c <mpfr_atan@@Base+0x10d4>  // b.none
   2cf1c:	cmp	x19, #0x2
   2cf20:	b.ne	2d298 <mpfr_atan@@Base+0x910>  // b.any
   2cf24:	sub	x2, x0, #0x1
   2cf28:	mov	x20, x0
   2cf2c:	ldr	x19, [sp, #520]
   2cf30:	asr	x2, x2, #6
   2cf34:	add	x2, x2, #0x1
   2cf38:	mov	x0, #0x3                   	// #3
   2cf3c:	adrp	x1, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2cf40:	sub	x0, x0, x2
   2cf44:	add	x1, x1, #0xef0
   2cf48:	add	x21, sp, #0x1f0
   2cf4c:	add	x1, x1, #0x18
   2cf50:	add	x1, x1, x0, lsl #3
   2cf54:	mov	x0, x19
   2cf58:	bl	c520 <__gmpn_copyi@plt>
   2cf5c:	neg	w2, w20
   2cf60:	mov	x1, #0x1                   	// #1
   2cf64:	ldr	x0, [x19]
   2cf68:	lsl	x1, x1, x2
   2cf6c:	neg	x1, x1
   2cf70:	and	x1, x0, x1
   2cf74:	str	x1, [x19]
   2cf78:	ldr	x0, [sp, #136]
   2cf7c:	str	xzr, [sp, #512]
   2cf80:	sub	x0, x0, #0x10
   2cf84:	str	x0, [sp, #152]
   2cf88:	mov	x0, #0x4                   	// #4
   2cf8c:	str	x0, [sp, #176]
   2cf90:	mov	x2, x23
   2cf94:	mov	x1, x21
   2cf98:	mov	w3, #0x0                   	// #0
   2cf9c:	mov	x0, x21
   2cfa0:	bl	bd50 <mpfr_mul@plt>
   2cfa4:	ldr	x0, [sp, #216]
   2cfa8:	mov	x2, x21
   2cfac:	mov	w3, #0x0                   	// #0
   2cfb0:	mov	x1, x0
   2cfb4:	bl	c1a0 <mpfr_add@plt>
   2cfb8:	mov	x2, x23
   2cfbc:	mov	x1, x28
   2cfc0:	mov	w3, #0x0                   	// #0
   2cfc4:	mov	x0, x21
   2cfc8:	bl	bb70 <mpfr_sub@plt>
   2cfcc:	mov	x2, x23
   2cfd0:	mov	x1, x28
   2cfd4:	mov	w3, #0x0                   	// #0
   2cfd8:	mov	x0, x28
   2cfdc:	bl	bd50 <mpfr_mul@plt>
   2cfe0:	mov	x1, x28
   2cfe4:	mov	w3, #0x0                   	// #0
   2cfe8:	mov	x2, #0x1                   	// #1
   2cfec:	mov	x0, x28
   2cff0:	bl	c260 <mpfr_add_ui@plt>
   2cff4:	mov	x1, x21
   2cff8:	mov	x2, x28
   2cffc:	mov	x0, x28
   2d000:	mov	w3, #0x0                   	// #0
   2d004:	bl	c620 <mpfr_div@plt>
   2d008:	ldr	w0, [sp, #168]
   2d00c:	ldr	x19, [sp, #176]
   2d010:	sub	w0, w0, #0x1
   2d014:	cmn	w0, #0x1
   2d018:	str	w0, [sp, #168]
   2d01c:	ldr	x0, [sp, #152]
   2d020:	str	x0, [sp, #136]
   2d024:	b.ne	2ce74 <mpfr_atan@@Base+0x4ec>  // b.any
   2d028:	ldr	x19, [sp, #216]
   2d02c:	mov	x2, x28
   2d030:	mov	w3, #0x0                   	// #0
   2d034:	mov	x1, x19
   2d038:	mov	x0, x19
   2d03c:	bl	c1a0 <mpfr_add@plt>
   2d040:	ldr	x2, [sp, #288]
   2d044:	mov	x1, x19
   2d048:	mov	x0, x19
   2d04c:	mov	w3, #0x0                   	// #0
   2d050:	bl	c2c0 <mpfr_mul_2ui@plt>
   2d054:	ldr	w0, [sp, #240]
   2d058:	cmp	w0, #0x0
   2d05c:	b.le	2d0b0 <mpfr_atan@@Base+0x728>
   2d060:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2d064:	ldr	x1, [x0, #2624]
   2d068:	add	x0, x0, #0xa40
   2d06c:	blr	x1
   2d070:	add	x23, sp, #0x1d0
   2d074:	ldr	x1, [sp, #272]
   2d078:	mov	w2, #0x0                   	// #0
   2d07c:	add	x1, x1, x0
   2d080:	mov	x0, x23
   2d084:	bl	c380 <mpfr_cache@plt>
   2d088:	mov	x1, x23
   2d08c:	mov	w3, #0x0                   	// #0
   2d090:	mov	x2, #0x1                   	// #1
   2d094:	mov	x0, x23
   2d098:	bl	c8f0 <mpfr_div_2ui@plt>
   2d09c:	mov	x1, x23
   2d0a0:	mov	x2, x19
   2d0a4:	mov	x0, x19
   2d0a8:	mov	w3, #0x0                   	// #0
   2d0ac:	bl	bb70 <mpfr_sub@plt>
   2d0b0:	ldr	x1, [sp, #416]
   2d0b4:	mov	w0, #0x1                   	// #1
   2d0b8:	str	w0, [sp, #408]
   2d0bc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2d0c0:	cmp	x1, x0
   2d0c4:	b.le	2db10 <mpfr_atan@@Base+0x1188>
   2d0c8:	ldr	x2, [sp, #200]
   2d0cc:	ldr	x4, [sp, #264]
   2d0d0:	ldr	x3, [x2]
   2d0d4:	ldr	x2, [sp, #248]
   2d0d8:	ldr	w0, [sp, #244]
   2d0dc:	ldr	x1, [sp, #400]
   2d0e0:	cmp	w0, #0x0
   2d0e4:	add	x2, x2, x4
   2d0e8:	cinc	x3, x3, eq  // eq = none
   2d0ec:	ldr	x4, [sp, #296]
   2d0f0:	sub	x1, x1, #0x1
   2d0f4:	ldr	x0, [sp, #424]
   2d0f8:	asr	x1, x1, #6
   2d0fc:	add	x1, x1, #0x1
   2d100:	sub	x2, x2, x4
   2d104:	bl	c370 <mpfr_round_p@plt>
   2d108:	cbz	w0, 2db10 <mpfr_atan@@Base+0x1188>
   2d10c:	ldr	x0, [sp, #256]
   2d110:	ldr	w2, [sp, #244]
   2d114:	ldr	x1, [sp, #216]
   2d118:	ldr	w3, [x0, #8]
   2d11c:	ldr	x0, [sp, #200]
   2d120:	bl	c6a0 <mpfr_set4@plt>
   2d124:	mov	w19, w0
   2d128:	ldr	w1, [sp, #280]
   2d12c:	ldr	x0, [sp, #112]
   2d130:	sub	w20, w1, #0x1
   2d134:	add	x21, x0, #0x10
   2d138:	add	x20, x21, w20, uxtw #4
   2d13c:	b	2d144 <mpfr_atan@@Base+0x7bc>
   2d140:	add	x21, x21, #0x10
   2d144:	bl	c170 <mpfr_mpz_clear@plt>
   2d148:	cmp	x21, x20
   2d14c:	mov	x0, x21
   2d150:	b.ne	2d140 <mpfr_atan@@Base+0x7b8>  // b.any
   2d154:	mov	x0, x27
   2d158:	bl	c170 <mpfr_mpz_clear@plt>
   2d15c:	ldr	x1, [sp, #528]
   2d160:	cbz	x1, 2d16c <mpfr_atan@@Base+0x7e4>
   2d164:	ldr	x0, [sp, #536]
   2d168:	bl	cc20 <mpfr_free_func@plt>
   2d16c:	ldr	x3, [sp, #272]
   2d170:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2d174:	ldr	x1, [x0, #2576]
   2d178:	add	x0, x0, #0xa10
   2d17c:	blr	x1
   2d180:	ldr	w1, [sp, #284]
   2d184:	ldr	x6, [sp, #200]
   2d188:	add	x2, x3, x0
   2d18c:	str	w1, [x3, x0]
   2d190:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2d194:	ldr	x4, [x0, #2512]
   2d198:	add	x0, x0, #0x9d0
   2d19c:	blr	x4
   2d1a0:	ldr	x4, [sp, #304]
   2d1a4:	str	x4, [x3, x0]
   2d1a8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2d1ac:	ldr	x5, [x0, #2544]
   2d1b0:	add	x0, x0, #0x9f0
   2d1b4:	blr	x5
   2d1b8:	ldr	x1, [x6, #16]
   2d1bc:	ldr	x5, [sp, #312]
   2d1c0:	str	x5, [x3, x0]
   2d1c4:	cmp	x5, x1
   2d1c8:	ccmp	x4, x1, #0x0, ge  // ge = tcont
   2d1cc:	b.le	2d694 <mpfr_atan@@Base+0xd0c>
   2d1d0:	ldr	w2, [sp, #244]
   2d1d4:	mov	w1, w19
   2d1d8:	mov	x0, x6
   2d1dc:	bl	cb30 <mpfr_check_range@plt>
   2d1e0:	mov	w19, w0
   2d1e4:	ldp	x21, x22, [sp, #32]
   2d1e8:	ldp	x23, x24, [sp, #48]
   2d1ec:	ldp	x25, x26, [sp, #64]
   2d1f0:	ldp	x27, x28, [sp, #80]
   2d1f4:	mov	w0, w19
   2d1f8:	mov	x12, #0x12d0                	// #4816
   2d1fc:	ldp	x29, x30, [sp]
   2d200:	ldp	x19, x20, [sp, #16]
   2d204:	add	sp, sp, x12
   2d208:	ret
   2d20c:	cmp	x19, #0x8
   2d210:	b.ne	2d298 <mpfr_atan@@Base+0x910>  // b.any
   2d214:	mov	x20, x0
   2d218:	sub	x2, x0, #0x1
   2d21c:	ldr	x0, [sp, #360]
   2d220:	asr	x2, x2, #6
   2d224:	add	x2, x2, #0x1
   2d228:	mov	x4, #0x3                   	// #3
   2d22c:	sub	x4, x4, x2
   2d230:	adrp	x1, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2d234:	ldr	x3, [x0]
   2d238:	lsl	x4, x4, #3
   2d23c:	ldr	x0, [sp, #136]
   2d240:	add	x3, x3, #0x4
   2d244:	ldr	x19, [sp, #520]
   2d248:	add	x3, x3, x3, lsl #1
   2d24c:	sub	x0, x0, #0x10
   2d250:	add	x1, x1, #0xef0
   2d254:	add	x3, x4, x3, lsl #3
   2d258:	str	x0, [sp, #152]
   2d25c:	add	x1, x1, x3
   2d260:	mov	x0, x19
   2d264:	bl	c520 <__gmpn_copyi@plt>
   2d268:	neg	w2, w20
   2d26c:	mov	x1, #0x1                   	// #1
   2d270:	ldr	x0, [x19]
   2d274:	lsl	x1, x1, x2
   2d278:	neg	x1, x1
   2d27c:	mov	x2, #0x10                  	// #16
   2d280:	str	x2, [sp, #176]
   2d284:	and	x1, x0, x1
   2d288:	str	x1, [x19]
   2d28c:	add	x21, sp, #0x1f0
   2d290:	str	xzr, [sp, #512]
   2d294:	b	2cf90 <mpfr_atan@@Base+0x608>
   2d298:	ldr	w3, [sp, #168]
   2d29c:	mov	x2, x27
   2d2a0:	mov	x1, x27
   2d2a4:	mov	x0, x27
   2d2a8:	add	w22, w3, #0x1
   2d2ac:	lsl	x20, x19, #1
   2d2b0:	lsl	w21, w3, #1
   2d2b4:	str	x20, [sp, #176]
   2d2b8:	ldr	x3, [sp, #112]
   2d2bc:	add	w21, w21, #0x4
   2d2c0:	add	x3, x3, x21, lsl #4
   2d2c4:	str	x3, [sp, #104]
   2d2c8:	bl	bff0 <__gmpz_mul@plt>
   2d2cc:	mov	x1, #0x0                   	// #0
   2d2d0:	mov	x0, x27
   2d2d4:	bl	ba90 <__gmpz_scan1@plt>
   2d2d8:	ldr	x1, [sp, #136]
   2d2dc:	sub	x1, x1, #0x10
   2d2e0:	str	x1, [sp, #152]
   2d2e4:	cbnz	x0, 2d988 <mpfr_atan@@Base+0x1000>
   2d2e8:	mov	x1, #0x1                   	// #1
   2d2ec:	mov	x0, x27
   2d2f0:	str	xzr, [sp, #672]
   2d2f4:	bl	cb20 <__gmpz_cmp_ui@plt>
   2d2f8:	mov	x1, #0x1                   	// #1
   2d2fc:	mov	w19, w0
   2d300:	lsl	x0, x1, x22
   2d304:	str	x0, [sp, #224]
   2d308:	cbnz	w19, 2d6fc <mpfr_atan@@Base+0xd74>
   2d30c:	ldr	x0, [sp, #128]
   2d310:	str	x1, [sp, #160]
   2d314:	add	x1, sp, #0x4a0
   2d318:	str	x1, [sp, #96]
   2d31c:	ldr	x1, [sp, #224]
   2d320:	mov	x8, #0x2                   	// #2
   2d324:	udiv	x0, x0, x20
   2d328:	mov	x4, #0x3                   	// #3
   2d32c:	str	x27, [sp, #192]
   2d330:	mov	x27, x4
   2d334:	str	x28, [sp, #224]
   2d338:	mov	x28, x8
   2d33c:	str	x23, [sp, #232]
   2d340:	mov	w23, w19
   2d344:	cmp	x0, x1
   2d348:	csinc	x0, x1, x0, hi  // hi = pmore
   2d34c:	sub	x0, x0, #0x1
   2d350:	and	x0, x0, #0xfffffffffffffffe
   2d354:	add	x21, x0, #0x4
   2d358:	str	x21, [sp, #184]
   2d35c:	nop
   2d360:	sxtw	x26, w23
   2d364:	mov	x1, x27
   2d368:	ldp	x25, x2, [sp, #104]
   2d36c:	add	x3, x26, #0x1
   2d370:	sub	x24, x27, #0x2
   2d374:	lsl	x22, x26, #3
   2d378:	lsl	x3, x3, #4
   2d37c:	add	w23, w23, #0x1
   2d380:	sub	x6, x3, #0x10
   2d384:	stp	x6, x3, [sp, #136]
   2d388:	add	x19, x25, x3
   2d38c:	add	x21, x2, x6
   2d390:	mov	x0, x19
   2d394:	bl	bcb0 <__gmpz_set_ui@plt>
   2d398:	mov	x0, x21
   2d39c:	mov	x1, x19
   2d3a0:	mov	x2, x20
   2d3a4:	bl	c200 <__gmpz_mul_2exp@plt>
   2d3a8:	mov	x2, x24
   2d3ac:	mov	x1, x21
   2d3b0:	mov	x0, x21
   2d3b4:	bl	bc30 <__gmpz_sub_ui@plt>
   2d3b8:	ldr	x6, [sp, #136]
   2d3bc:	mov	x2, x24
   2d3c0:	mov	x1, x19
   2d3c4:	add	x0, x25, x6
   2d3c8:	bl	c100 <__gmpz_mul_ui@plt>
   2d3cc:	str	w28, [sp, #172]
   2d3d0:	ldr	x1, [sp, #96]
   2d3d4:	asr	w0, w28, #1
   2d3d8:	ldr	x2, [sp, #160]
   2d3dc:	sxtw	x24, w0
   2d3e0:	str	x2, [x1, x26, lsl #3]
   2d3e4:	ldr	x3, [sp, #144]
   2d3e8:	tbnz	w0, #0, 2d4a4 <mpfr_atan@@Base+0xb1c>
   2d3ec:	ldr	x0, [sp, #104]
   2d3f0:	sub	x3, x3, #0x20
   2d3f4:	mov	x23, x21
   2d3f8:	mov	x19, #0x2                   	// #2
   2d3fc:	add	x21, x0, x3
   2d400:	str	x27, [sp, #136]
   2d404:	mov	x27, x22
   2d408:	mov	x22, x26
   2d40c:	mov	x26, x24
   2d410:	mov	x24, x19
   2d414:	b	2d42c <mpfr_atan@@Base+0xaa4>
   2d418:	sub	x22, x22, #0x1
   2d41c:	mov	x23, x25
   2d420:	sub	x21, x21, #0x10
   2d424:	add	x24, x24, #0x1
   2d428:	lsl	x27, x22, #3
   2d42c:	sub	x25, x23, #0x10
   2d430:	mov	x1, x23
   2d434:	mov	x0, x23
   2d438:	mov	x2, x21
   2d43c:	add	x19, x21, #0x10
   2d440:	bl	bff0 <__gmpz_mul@plt>
   2d444:	mov	x1, x25
   2d448:	mov	x0, x25
   2d44c:	mov	x2, x19
   2d450:	bl	bff0 <__gmpz_mul@plt>
   2d454:	sub	w2, w24, #0x1
   2d458:	mov	x1, x25
   2d45c:	mov	x0, x25
   2d460:	lsr	x26, x26, #1
   2d464:	lsl	x2, x20, x2
   2d468:	bl	c200 <__gmpz_mul_2exp@plt>
   2d46c:	mov	x2, x23
   2d470:	mov	x1, x25
   2d474:	mov	x0, x25
   2d478:	bl	c9c0 <__gmpz_add@plt>
   2d47c:	mov	x0, x21
   2d480:	mov	x2, x19
   2d484:	mov	x1, x21
   2d488:	bl	bff0 <__gmpz_mul@plt>
   2d48c:	ldr	x0, [sp, #96]
   2d490:	mov	w23, w22
   2d494:	add	x3, x0, x27
   2d498:	stur	x24, [x3, #-8]
   2d49c:	tbz	w26, #0, 2d418 <mpfr_atan@@Base+0xa90>
   2d4a0:	ldr	x27, [sp, #136]
   2d4a4:	add	x28, x28, #0x2
   2d4a8:	ldr	x0, [sp, #184]
   2d4ac:	add	x27, x27, #0x4
   2d4b0:	cmp	x0, x28
   2d4b4:	b.ne	2d360 <mpfr_atan@@Base+0x9d8>  // b.any
   2d4b8:	mov	w19, w23
   2d4bc:	ldp	x28, x23, [sp, #224]
   2d4c0:	ldr	x27, [sp, #192]
   2d4c4:	cmp	w19, #0x1
   2d4c8:	b.eq	2d5c0 <mpfr_atan@@Base+0xc38>  // b.none
   2d4cc:	sxtw	x22, w19
   2d4d0:	mov	x25, #0x0                   	// #0
   2d4d4:	sub	x24, x22, #0x1
   2d4d8:	mov	x21, #0x1                   	// #1
   2d4dc:	ldr	x0, [sp, #112]
   2d4e0:	lsl	x6, x24, #4
   2d4e4:	stp	x20, x28, [sp, #136]
   2d4e8:	add	x19, x0, x6
   2d4ec:	ldr	x0, [sp, #104]
   2d4f0:	str	x23, [sp, #160]
   2d4f4:	mov	x23, x19
   2d4f8:	add	x26, x0, x6
   2d4fc:	ldr	x19, [sp, #96]
   2d500:	b	2d574 <mpfr_atan@@Base+0xbec>
   2d504:	sub	x20, x23, #0x10
   2d508:	mov	x2, x26
   2d50c:	mov	x1, x20
   2d510:	mov	x0, x20
   2d514:	bl	bff0 <__gmpz_mul@plt>
   2d518:	add	x2, x19, x22, lsl #3
   2d51c:	mov	x1, x20
   2d520:	mov	x0, x20
   2d524:	mov	x22, x24
   2d528:	ldur	x2, [x2, #-8]
   2d52c:	lsl	x2, x21, x2
   2d530:	add	x25, x25, x2
   2d534:	ldr	x2, [sp, #136]
   2d538:	mul	x2, x2, x25
   2d53c:	bl	c200 <__gmpz_mul_2exp@plt>
   2d540:	mov	x2, x23
   2d544:	mov	x1, x20
   2d548:	mov	x0, x20
   2d54c:	bl	c9c0 <__gmpz_add@plt>
   2d550:	mov	x2, x26
   2d554:	mov	x1, x28
   2d558:	mov	x0, x28
   2d55c:	bl	bff0 <__gmpz_mul@plt>
   2d560:	mov	x23, x20
   2d564:	mov	x26, x28
   2d568:	cmp	w24, #0x1
   2d56c:	b.le	2d5b8 <mpfr_atan@@Base+0xc30>
   2d570:	sub	x24, x24, #0x1
   2d574:	sub	x28, x26, #0x10
   2d578:	mov	x1, x23
   2d57c:	mov	x2, x28
   2d580:	mov	x0, x23
   2d584:	bl	bff0 <__gmpz_mul@plt>
   2d588:	mov	x0, x27
   2d58c:	mov	x1, #0x1                   	// #1
   2d590:	bl	cb20 <__gmpz_cmp_ui@plt>
   2d594:	cbz	w0, 2d504 <mpfr_atan@@Base+0xb7c>
   2d598:	sub	w2, w22, #0x2
   2d59c:	mov	x1, x23
   2d5a0:	ldr	x3, [sp, #152]
   2d5a4:	mov	x0, x23
   2d5a8:	ldr	x2, [x19, w2, sxtw #3]
   2d5ac:	add	x2, x3, x2, lsl #4
   2d5b0:	bl	bff0 <__gmpz_mul@plt>
   2d5b4:	b	2d504 <mpfr_atan@@Base+0xb7c>
   2d5b8:	ldp	x20, x28, [sp, #136]
   2d5bc:	ldr	x23, [sp, #160]
   2d5c0:	mov	x1, #0xfffffffffffffff8    	// #-8
   2d5c4:	ldr	w0, [sp, #1700]
   2d5c8:	ldr	x3, [sp, #1704]
   2d5cc:	cmp	w0, #0x0
   2d5d0:	cneg	w0, w0, lt  // lt = tstop
   2d5d4:	ldr	x2, [sp, #128]
   2d5d8:	add	x1, x1, w0, sxtw #3
   2d5dc:	sbfiz	x0, x0, #6, #32
   2d5e0:	ldr	x1, [x3, x1]
   2d5e4:	lsl	x2, x2, #1
   2d5e8:	clz	x1, x1
   2d5ec:	sub	x0, x0, x1
   2d5f0:	subs	x19, x0, x2
   2d5f4:	b.mi	2d6e0 <mpfr_atan@@Base+0xd58>  // b.first
   2d5f8:	ldr	x0, [sp, #112]
   2d5fc:	mov	x2, x19
   2d600:	mov	x1, x0
   2d604:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2d608:	ldr	x3, [sp, #104]
   2d60c:	mov	x1, #0xfffffffffffffff8    	// #-8
   2d610:	ldr	w0, [x3, #4]
   2d614:	ldr	x2, [x3, #8]
   2d618:	cmp	w0, #0x0
   2d61c:	cneg	w0, w0, lt  // lt = tstop
   2d620:	add	x1, x1, w0, sxtw #3
   2d624:	sbfiz	x0, x0, #6, #32
   2d628:	ldr	x2, [x2, x1]
   2d62c:	ldr	x1, [sp, #128]
   2d630:	clz	x2, x2
   2d634:	sub	x0, x0, x2
   2d638:	sub	x2, x0, x1
   2d63c:	sub	x19, x19, x2
   2d640:	tbnz	x2, #63, 2d6cc <mpfr_atan@@Base+0xd44>
   2d644:	mov	x1, x3
   2d648:	mov	x0, x3
   2d64c:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2d650:	ldp	x2, x22, [sp, #104]
   2d654:	add	x21, sp, #0x1f0
   2d658:	mov	x1, x22
   2d65c:	mov	x0, x22
   2d660:	bl	bb30 <__gmpz_tdiv_q@plt>
   2d664:	mov	x1, x22
   2d668:	mov	x0, x21
   2d66c:	mov	w2, #0x3                   	// #3
   2d670:	bl	c240 <mpfr_set_z@plt>
   2d674:	ldr	w0, [sp, #172]
   2d678:	ldr	x1, [sp, #512]
   2d67c:	sub	w0, w0, #0x1
   2d680:	add	x19, x19, x1
   2d684:	sxtw	x0, w0
   2d688:	msub	x20, x0, x20, x19
   2d68c:	str	x20, [sp, #512]
   2d690:	b	2cf90 <mpfr_atan@@Base+0x608>
   2d694:	cbz	w19, 2dac4 <mpfr_atan@@Base+0x113c>
   2d698:	ldr	w0, [sp, #284]
   2d69c:	mov	x12, #0x12d0                	// #4816
   2d6a0:	ldp	x21, x22, [sp, #32]
   2d6a4:	orr	w0, w0, #0x8
   2d6a8:	ldp	x23, x24, [sp, #48]
   2d6ac:	ldp	x25, x26, [sp, #64]
   2d6b0:	ldp	x27, x28, [sp, #80]
   2d6b4:	str	w0, [x2]
   2d6b8:	mov	w0, w19
   2d6bc:	ldp	x29, x30, [sp]
   2d6c0:	ldp	x19, x20, [sp, #16]
   2d6c4:	add	sp, sp, x12
   2d6c8:	ret
   2d6cc:	sub	x2, x1, x0
   2d6d0:	ldr	x0, [sp, #104]
   2d6d4:	mov	x1, x0
   2d6d8:	bl	c200 <__gmpz_mul_2exp@plt>
   2d6dc:	b	2d650 <mpfr_atan@@Base+0xcc8>
   2d6e0:	sub	x2, x2, x0
   2d6e4:	ldr	x0, [sp, #112]
   2d6e8:	mov	x1, x0
   2d6ec:	bl	c200 <__gmpz_mul_2exp@plt>
   2d6f0:	b	2d608 <mpfr_atan@@Base+0xc80>
   2d6f4:	str	x24, [sp, #288]
   2d6f8:	b	2ce00 <mpfr_atan@@Base+0x478>
   2d6fc:	ldr	x0, [sp, #152]
   2d700:	mov	x1, x27
   2d704:	bl	bfa0 <__gmpz_set@plt>
   2d708:	ldr	x22, [sp, #136]
   2d70c:	ldr	w0, [sp, #168]
   2d710:	add	x19, x22, #0x10
   2d714:	add	x19, x19, w0, uxtw #4
   2d718:	sub	x2, x22, #0x10
   2d71c:	mov	x0, x22
   2d720:	mov	x1, x2
   2d724:	add	x22, x22, #0x10
   2d728:	bl	bff0 <__gmpz_mul@plt>
   2d72c:	cmp	x19, x22
   2d730:	b.ne	2d718 <mpfr_atan@@Base+0xd90>  // b.any
   2d734:	add	x0, sp, #0x4a0
   2d738:	str	x0, [sp, #96]
   2d73c:	mov	x0, #0x2                   	// #2
   2d740:	mov	w19, #0x0                   	// #0
   2d744:	str	w19, [sp, #160]
   2d748:	str	x0, [sp, #184]
   2d74c:	mov	x0, #0x3                   	// #3
   2d750:	str	x0, [sp, #192]
   2d754:	str	x27, [sp, #232]
   2d758:	stp	x28, x23, [sp, #336]
   2d75c:	nop
   2d760:	ldrsw	x24, [sp, #160]
   2d764:	ldp	x22, x26, [sp, #104]
   2d768:	add	x3, x24, #0x1
   2d76c:	ldr	x0, [sp, #192]
   2d770:	lsl	x25, x3, #4
   2d774:	sub	x19, x25, #0x10
   2d778:	lsl	x23, x24, #3
   2d77c:	mov	x1, x0
   2d780:	sub	x28, x0, #0x2
   2d784:	add	x27, x22, x25
   2d788:	add	x21, x26, x25
   2d78c:	mov	x0, x27
   2d790:	bl	bcb0 <__gmpz_set_ui@plt>
   2d794:	ldr	x1, [sp, #232]
   2d798:	add	x26, x26, x19
   2d79c:	mov	x0, x21
   2d7a0:	mov	x2, x28
   2d7a4:	bl	c100 <__gmpz_mul_ui@plt>
   2d7a8:	mov	x0, x26
   2d7ac:	mov	x1, x27
   2d7b0:	mov	x2, x20
   2d7b4:	bl	c200 <__gmpz_mul_2exp@plt>
   2d7b8:	mov	x2, x21
   2d7bc:	mov	x1, x26
   2d7c0:	mov	x0, x26
   2d7c4:	bl	bde0 <__gmpz_sub@plt>
   2d7c8:	mov	x2, x28
   2d7cc:	mov	x1, x27
   2d7d0:	add	x0, x22, x19
   2d7d4:	bl	c100 <__gmpz_mul_ui@plt>
   2d7d8:	ldr	x1, [sp, #184]
   2d7dc:	mov	x3, #0x1                   	// #1
   2d7e0:	ldr	x2, [sp, #96]
   2d7e4:	str	w1, [sp, #172]
   2d7e8:	asr	w0, w1, #1
   2d7ec:	str	x3, [x2, x24, lsl #3]
   2d7f0:	and	w2, w0, #0x1
   2d7f4:	str	w2, [sp, #144]
   2d7f8:	sxtw	x21, w0
   2d7fc:	tbnz	w0, #0, 2d9d8 <mpfr_atan@@Base+0x1050>
   2d800:	ldr	x0, [sp, #104]
   2d804:	sub	x3, x25, #0x20
   2d808:	ldr	x28, [sp, #136]
   2d80c:	mov	x27, #0x2                   	// #2
   2d810:	add	x25, x0, x3
   2d814:	mov	x22, x21
   2d818:	mov	x19, x23
   2d81c:	mov	x21, x28
   2d820:	mov	x23, x26
   2d824:	mov	x28, x24
   2d828:	mov	x24, x27
   2d82c:	mov	x27, x25
   2d830:	b	2d850 <mpfr_atan@@Base+0xec8>
   2d834:	cbnz	x1, 2d948 <mpfr_atan@@Base+0xfc0>
   2d838:	sub	x28, x28, #0x1
   2d83c:	add	x24, x24, #0x1
   2d840:	mov	x23, x26
   2d844:	sub	x27, x27, #0x10
   2d848:	add	x21, x21, #0x10
   2d84c:	lsl	x19, x28, #3
   2d850:	mov	x2, x27
   2d854:	mov	x1, x23
   2d858:	mov	x0, x23
   2d85c:	bl	bff0 <__gmpz_mul@plt>
   2d860:	sub	x26, x23, #0x10
   2d864:	mov	x2, x21
   2d868:	mov	x1, x23
   2d86c:	mov	x0, x23
   2d870:	add	x25, x27, #0x10
   2d874:	bl	bff0 <__gmpz_mul@plt>
   2d878:	mov	x1, x26
   2d87c:	mov	x0, x26
   2d880:	mov	x2, x25
   2d884:	bl	bff0 <__gmpz_mul@plt>
   2d888:	sub	w2, w24, #0x1
   2d88c:	mov	x1, x26
   2d890:	mov	x0, x26
   2d894:	str	w28, [sp, #160]
   2d898:	lsl	x2, x20, x2
   2d89c:	bl	c200 <__gmpz_mul_2exp@plt>
   2d8a0:	mov	x2, x23
   2d8a4:	mov	x1, x26
   2d8a8:	mov	x0, x26
   2d8ac:	bl	c9c0 <__gmpz_add@plt>
   2d8b0:	mov	x2, x25
   2d8b4:	mov	x1, x27
   2d8b8:	mov	x0, x27
   2d8bc:	bl	bff0 <__gmpz_mul@plt>
   2d8c0:	ldr	x1, [sp, #96]
   2d8c4:	lsl	x6, x20, x24
   2d8c8:	ldr	w0, [x21, #20]
   2d8cc:	mov	w3, #0x40                  	// #64
   2d8d0:	add	x1, x1, x19
   2d8d4:	cmp	w0, #0x0
   2d8d8:	cneg	w0, w0, lt  // lt = tstop
   2d8dc:	cmp	w28, #0x1
   2d8e0:	stur	x24, [x1, #-8]
   2d8e4:	mov	x1, #0xfffffffffffffff8    	// #-8
   2d8e8:	ldr	x2, [x21, #24]
   2d8ec:	add	x1, x1, w0, sxtw #3
   2d8f0:	smsubl	x0, w0, w3, x6
   2d8f4:	ldr	x1, [x2, x1]
   2d8f8:	clz	x1, x1
   2d8fc:	sub	x1, x1, #0x1
   2d900:	add	x0, x0, x1
   2d904:	b.eq	2d918 <mpfr_atan@@Base+0xf90>  // b.none
   2d908:	ldr	x2, [sp, #120]
   2d90c:	sub	w1, w28, #0x2
   2d910:	ldr	x1, [x2, w1, sxtw #3]
   2d914:	add	x0, x0, x1
   2d918:	ldr	x1, [sp, #120]
   2d91c:	lsr	x22, x22, #1
   2d920:	add	x5, x1, x19
   2d924:	ldr	x1, [sp, #128]
   2d928:	stur	x0, [x5, #-8]
   2d92c:	cmp	x1, x0
   2d930:	and	x1, x22, #0x1
   2d934:	b.ge	2d834 <mpfr_atan@@Base+0xeac>  // b.tcont
   2d938:	cbnz	x1, 2d978 <mpfr_atan@@Base+0xff0>
   2d93c:	mov	w0, #0x1                   	// #1
   2d940:	str	w0, [sp, #144]
   2d944:	b	2d838 <mpfr_atan@@Base+0xeb0>
   2d948:	ldr	w0, [sp, #144]
   2d94c:	eor	w21, w0, #0x1
   2d950:	ldr	x1, [sp, #184]
   2d954:	ldr	x0, [sp, #224]
   2d958:	cmp	x1, x0
   2d95c:	add	x1, x1, #0x2
   2d960:	ldr	x0, [sp, #192]
   2d964:	add	x0, x0, #0x4
   2d968:	stp	x1, x0, [sp, #184]
   2d96c:	cset	w0, cc  // cc = lo, ul, last
   2d970:	tst	w21, w0
   2d974:	b.ne	2d760 <mpfr_atan@@Base+0xdd8>  // b.any
   2d978:	ldr	w19, [sp, #160]
   2d97c:	ldr	x27, [sp, #232]
   2d980:	ldp	x28, x23, [sp, #336]
   2d984:	b	2d4c4 <mpfr_atan@@Base+0xb3c>
   2d988:	mov	x2, x0
   2d98c:	mov	x1, x27
   2d990:	ldr	x0, [sp, #176]
   2d994:	sub	x20, x0, x2
   2d998:	mov	x0, x27
   2d99c:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2d9a0:	b	2d2e8 <mpfr_atan@@Base+0x960>
   2d9a4:	ldr	w3, [sp, #376]
   2d9a8:	add	x28, sp, #0x1b0
   2d9ac:	ldr	x1, [sp, #208]
   2d9b0:	mov	x0, x28
   2d9b4:	mov	w2, #0x0                   	// #0
   2d9b8:	neg	x20, x22
   2d9bc:	bl	c6a0 <mpfr_set4@plt>
   2d9c0:	ldr	x21, [sp, #448]
   2d9c4:	cmp	x20, x21
   2d9c8:	b.lt	2ccdc <mpfr_atan@@Base+0x354>  // b.tstop
   2d9cc:	mov	x0, x21
   2d9d0:	stp	xzr, xzr, [sp, #288]
   2d9d4:	b	2ce0c <mpfr_atan@@Base+0x484>
   2d9d8:	ldr	w0, [sp, #160]
   2d9dc:	mov	w21, #0x1                   	// #1
   2d9e0:	add	w0, w0, #0x1
   2d9e4:	str	w0, [sp, #160]
   2d9e8:	b	2d950 <mpfr_atan@@Base+0xfc8>
   2d9ec:	mov	x20, x0
   2d9f0:	sub	x2, x0, #0x1
   2d9f4:	ldr	x0, [sp, #360]
   2d9f8:	asr	x2, x2, #6
   2d9fc:	add	x2, x2, #0x1
   2da00:	mov	x4, #0x3                   	// #3
   2da04:	sub	x4, x4, x2
   2da08:	adrp	x1, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2da0c:	ldr	x3, [x0]
   2da10:	lsl	x4, x4, #3
   2da14:	ldr	x0, [sp, #136]
   2da18:	add	x3, x3, #0x1
   2da1c:	ldr	x19, [sp, #520]
   2da20:	add	x3, x3, x3, lsl #1
   2da24:	sub	x0, x0, #0x10
   2da28:	add	x1, x1, #0xef0
   2da2c:	add	x3, x4, x3, lsl #3
   2da30:	str	x0, [sp, #152]
   2da34:	add	x1, x1, x3
   2da38:	mov	x0, x19
   2da3c:	bl	c520 <__gmpn_copyi@plt>
   2da40:	neg	w2, w20
   2da44:	mov	x1, #0x1                   	// #1
   2da48:	ldr	x0, [x19]
   2da4c:	lsl	x1, x1, x2
   2da50:	mov	x2, #0x8                   	// #8
   2da54:	neg	x1, x1
   2da58:	b	2d280 <mpfr_atan@@Base+0x8f8>
   2da5c:	sub	x2, x0, #0x1
   2da60:	mov	x3, #0x3                   	// #3
   2da64:	ldr	x20, [sp, #520]
   2da68:	asr	x2, x2, #6
   2da6c:	add	x2, x2, #0x1
   2da70:	adrp	x1, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2da74:	sub	x3, x3, x2
   2da78:	add	x1, x1, #0xef0
   2da7c:	mov	x21, x0
   2da80:	mov	x0, x20
   2da84:	add	x1, x1, x3, lsl #3
   2da88:	bl	c520 <__gmpn_copyi@plt>
   2da8c:	ldr	x0, [sp, #136]
   2da90:	neg	w1, w21
   2da94:	add	x21, sp, #0x1f0
   2da98:	sub	x0, x0, #0x10
   2da9c:	str	x0, [sp, #152]
   2daa0:	ldr	x0, [x20]
   2daa4:	lsl	x19, x19, x1
   2daa8:	neg	x19, x19
   2daac:	mov	x1, #0x2                   	// #2
   2dab0:	and	x19, x0, x19
   2dab4:	str	x19, [x20]
   2dab8:	str	x1, [sp, #176]
   2dabc:	str	xzr, [sp, #512]
   2dac0:	b	2cf90 <mpfr_atan@@Base+0x608>
   2dac4:	mov	w0, w19
   2dac8:	mov	x12, #0x12d0                	// #4816
   2dacc:	ldp	x29, x30, [sp]
   2dad0:	ldp	x19, x20, [sp, #16]
   2dad4:	ldp	x21, x22, [sp, #32]
   2dad8:	ldp	x23, x24, [sp, #48]
   2dadc:	ldp	x25, x26, [sp, #64]
   2dae0:	ldp	x27, x28, [sp, #80]
   2dae4:	add	sp, sp, x12
   2dae8:	ret
   2daec:	ldr	w4, [sp, #244]
   2daf0:	mov	w3, #0x0                   	// #0
   2daf4:	bl	c540 <mpfr_round_near_x@plt>
   2daf8:	mov	w19, w0
   2dafc:	cbnz	w0, 2d1f4 <mpfr_atan@@Base+0x86c>
   2db00:	ldr	x0, [sp, #256]
   2db04:	stp	x21, x22, [sp, #32]
   2db08:	ldr	x3, [x0, #16]
   2db0c:	b	2c9dc <mpfr_atan@@Base+0x54>
   2db10:	ldr	x1, [sp, #248]
   2db14:	mov	x0, #0xfffffffffffffeff    	// #-257
   2db18:	movk	x0, #0x7fff, lsl #48
   2db1c:	sub	x0, x0, x1
   2db20:	ldr	x1, [sp, #328]
   2db24:	cmp	x0, x1
   2db28:	b.lt	2df40 <mpfr_atan@@Base+0x15b8>  // b.tstop
   2db2c:	ldr	x0, [sp, #248]
   2db30:	ldr	w20, [sp, #280]
   2db34:	add	x0, x0, x1
   2db38:	str	x0, [sp, #248]
   2db3c:	add	x0, x0, x0, lsr #63
   2db40:	asr	x0, x0, #1
   2db44:	str	x0, [sp, #328]
   2db48:	b	2cb68 <mpfr_atan@@Base+0x1e0>
   2db4c:	mov	x0, #0x2                   	// #2
   2db50:	movk	x0, #0x8000, lsl #48
   2db54:	cmp	x3, x0
   2db58:	b.eq	2df0c <mpfr_atan@@Base+0x1584>  // b.none
   2db5c:	cmp	x3, x4
   2db60:	b.eq	2dda0 <mpfr_atan@@Base+0x1418>  // b.none
   2db64:	ldr	x0, [sp, #256]
   2db68:	mov	w19, #0x0                   	// #0
   2db6c:	ldr	x2, [sp, #200]
   2db70:	ldr	w1, [x0, #8]
   2db74:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2db78:	str	w1, [x2, #8]
   2db7c:	str	x0, [x2, #16]
   2db80:	b	2d1f4 <mpfr_atan@@Base+0x86c>
   2db84:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2db88:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2db8c:	add	x2, x2, #0xee0
   2db90:	add	x0, x0, #0xe68
   2db94:	mov	w1, #0x178                 	// #376
   2db98:	bl	cb40 <mpfr_assert_fail@plt>
   2db9c:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2dba0:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2dba4:	add	x2, x2, #0xe70
   2dba8:	add	x0, x0, #0xe68
   2dbac:	mov	w1, #0x176                 	// #374
   2dbb0:	bl	cb40 <mpfr_assert_fail@plt>
   2dbb4:	ldr	x0, [sp, #256]
   2dbb8:	ldr	w20, [x0, #8]
   2dbbc:	cmp	w20, #0x0
   2dbc0:	b.le	2dd44 <mpfr_atan@@Base+0x13bc>
   2dbc4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2dbc8:	ldr	x1, [x0, #2624]
   2dbcc:	add	x0, x0, #0xa40
   2dbd0:	blr	x1
   2dbd4:	ldr	w2, [sp, #244]
   2dbd8:	ldr	x1, [sp, #272]
   2dbdc:	add	x1, x1, x0
   2dbe0:	ldr	x0, [sp, #200]
   2dbe4:	bl	c380 <mpfr_cache@plt>
   2dbe8:	mov	w19, w0
   2dbec:	ldr	x20, [sp, #200]
   2dbf0:	mov	x2, #0x2                   	// #2
   2dbf4:	ldr	w21, [sp, #244]
   2dbf8:	mov	x1, x20
   2dbfc:	mov	x0, x20
   2dc00:	mov	w3, w21
   2dc04:	bl	c8f0 <mpfr_div_2ui@plt>
   2dc08:	ldr	x4, [sp, #272]
   2dc0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2dc10:	ldr	x1, [x0, #2576]
   2dc14:	add	x0, x0, #0xa10
   2dc18:	blr	x1
   2dc1c:	ldp	x6, x7, [sp, #304]
   2dc20:	add	x2, x4, x0
   2dc24:	ldr	w1, [sp, #284]
   2dc28:	str	w1, [x4, x0]
   2dc2c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2dc30:	ldr	x3, [x0, #2512]
   2dc34:	add	x0, x0, #0x9d0
   2dc38:	blr	x3
   2dc3c:	ldr	x1, [x20, #16]
   2dc40:	str	x6, [x4, x0]
   2dc44:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2dc48:	ldr	x3, [x0, #2544]
   2dc4c:	add	x0, x0, #0x9f0
   2dc50:	blr	x3
   2dc54:	str	x7, [x4, x0]
   2dc58:	cmp	x7, x1
   2dc5c:	ccmp	x6, x1, #0x0, ge  // ge = tcont
   2dc60:	b.le	2dca4 <mpfr_atan@@Base+0x131c>
   2dc64:	mov	w2, w21
   2dc68:	mov	w1, w19
   2dc6c:	mov	x0, x20
   2dc70:	bl	cb30 <mpfr_check_range@plt>
   2dc74:	mov	w19, w0
   2dc78:	ldp	x21, x22, [sp, #32]
   2dc7c:	b	2d1f4 <mpfr_atan@@Base+0x86c>
   2dc80:	add	x27, sp, #0x160
   2dc84:	mov	x1, #0x45                  	// #69
   2dc88:	mov	x0, x27
   2dc8c:	bl	c900 <mpfr_mpz_init2@plt>
   2dc90:	mov	x0, #0x5                   	// #5
   2dc94:	mov	x19, #0x2                   	// #2
   2dc98:	mov	x21, #0x45                  	// #69
   2dc9c:	str	x0, [sp, #248]
   2dca0:	b	2caf8 <mpfr_atan@@Base+0x170>
   2dca4:	cbz	w19, 2dd10 <mpfr_atan@@Base+0x1388>
   2dca8:	ldr	w0, [sp, #284]
   2dcac:	ldp	x21, x22, [sp, #32]
   2dcb0:	orr	w0, w0, #0x8
   2dcb4:	str	w0, [x2]
   2dcb8:	b	2d1f4 <mpfr_atan@@Base+0x86c>
   2dcbc:	mov	w1, #0x166                 	// #358
   2dcc0:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2dcc4:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2dcc8:	add	x2, x2, #0xe48
   2dccc:	add	x0, x0, #0xe68
   2dcd0:	bl	cb40 <mpfr_assert_fail@plt>
   2dcd4:	ldr	x0, [sp, #200]
   2dcd8:	mov	w2, #0x40                  	// #64
   2dcdc:	add	x27, sp, #0x160
   2dce0:	ldr	x1, [x0]
   2dce4:	mov	x0, x27
   2dce8:	sub	x1, x1, #0x1
   2dcec:	clz	x1, x1
   2dcf0:	sub	w1, w2, w1
   2dcf4:	add	x20, x20, w1, sxtw
   2dcf8:	add	x1, x20, #0x4
   2dcfc:	add	x21, x20, #0x44
   2dd00:	str	x1, [sp, #248]
   2dd04:	mov	x1, x21
   2dd08:	bl	c900 <mpfr_mpz_init2@plt>
   2dd0c:	b	2cad8 <mpfr_atan@@Base+0x150>
   2dd10:	ldp	x21, x22, [sp, #32]
   2dd14:	b	2d1f4 <mpfr_atan@@Base+0x86c>
   2dd18:	mov	x0, #0x3                   	// #3
   2dd1c:	mov	x22, #0xfffffffffffffffd    	// #-3
   2dd20:	add	x23, x23, x0
   2dd24:	str	x0, [sp, #264]
   2dd28:	b	2cbe8 <mpfr_atan@@Base+0x260>
   2dd2c:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2dd30:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2dd34:	add	x2, x2, #0xf70
   2dd38:	add	x0, x0, #0xe68
   2dd3c:	mov	w1, #0x17f                 	// #383
   2dd40:	bl	cb40 <mpfr_assert_fail@plt>
   2dd44:	ldr	w0, [sp, #244]
   2dd48:	mov	w2, #0x3                   	// #3
   2dd4c:	cmp	w0, #0x2
   2dd50:	b.eq	2dd60 <mpfr_atan@@Base+0x13d8>  // b.none
   2dd54:	cmp	w0, w2
   2dd58:	mov	w2, #0x2                   	// #2
   2dd5c:	csel	w2, w0, w2, ne  // ne = any
   2dd60:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2dd64:	ldr	x1, [x0, #2624]
   2dd68:	add	x0, x0, #0xa40
   2dd6c:	blr	x1
   2dd70:	ldr	x21, [sp, #200]
   2dd74:	ldr	x1, [sp, #272]
   2dd78:	add	x1, x1, x0
   2dd7c:	mov	x0, x21
   2dd80:	bl	c380 <mpfr_cache@plt>
   2dd84:	mov	w19, w0
   2dd88:	cbz	w20, 2dbec <mpfr_atan@@Base+0x1264>
   2dd8c:	neg	w19, w0
   2dd90:	ldr	w0, [x21, #8]
   2dd94:	neg	w0, w0
   2dd98:	str	w0, [x21, #8]
   2dd9c:	b	2dbec <mpfr_atan@@Base+0x1264>
   2dda0:	mrs	x4, tpidr_el0
   2dda4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2dda8:	ldr	x1, [x0, #2576]
   2ddac:	add	x0, x0, #0xa10
   2ddb0:	blr	x1
   2ddb4:	ldr	x3, [sp, #256]
   2ddb8:	stp	x21, x22, [sp, #32]
   2ddbc:	ldr	w20, [x4, x0]
   2ddc0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2ddc4:	ldr	x6, [x0, #2512]
   2ddc8:	add	x0, x0, #0x9d0
   2ddcc:	blr	x6
   2ddd0:	str	x4, [sp, #272]
   2ddd4:	mov	x6, x4
   2ddd8:	stp	x23, x24, [sp, #48]
   2dddc:	ldr	w3, [x3, #8]
   2dde0:	ldr	x22, [x4, x0]
   2dde4:	add	x4, x4, x0
   2dde8:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   2ddec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2ddf0:	ldr	x7, [x0, #2544]
   2ddf4:	add	x0, x0, #0x9f0
   2ddf8:	blr	x7
   2ddfc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2de00:	cmp	w3, #0x0
   2de04:	str	x5, [x4]
   2de08:	ldr	x21, [x6, x0]
   2de0c:	str	x1, [x6, x0]
   2de10:	b.gt	2df58 <mpfr_atan@@Base+0x15d0>
   2de14:	ldr	w0, [sp, #244]
   2de18:	mov	w2, #0x3                   	// #3
   2de1c:	cmp	w0, #0x2
   2de20:	b.eq	2de30 <mpfr_atan@@Base+0x14a8>  // b.none
   2de24:	cmp	w0, w2
   2de28:	mov	w2, #0x2                   	// #2
   2de2c:	csel	w2, w0, w2, ne  // ne = any
   2de30:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2de34:	ldr	x1, [x0, #2624]
   2de38:	add	x0, x0, #0xa40
   2de3c:	blr	x1
   2de40:	ldr	x19, [sp, #200]
   2de44:	ldr	x1, [sp, #272]
   2de48:	add	x1, x1, x0
   2de4c:	mov	x0, x19
   2de50:	bl	c380 <mpfr_cache@plt>
   2de54:	mov	x2, x19
   2de58:	neg	w19, w0
   2de5c:	ldr	w1, [x2, #8]
   2de60:	neg	w1, w1
   2de64:	str	w1, [x2, #8]
   2de68:	ldr	w3, [sp, #244]
   2de6c:	mov	x2, #0x1                   	// #1
   2de70:	ldr	x23, [sp, #200]
   2de74:	mov	x1, x23
   2de78:	mov	x0, x23
   2de7c:	bl	c8f0 <mpfr_div_2ui@plt>
   2de80:	ldr	x3, [sp, #272]
   2de84:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2de88:	ldr	x1, [x0, #2576]
   2de8c:	add	x0, x0, #0xa10
   2de90:	blr	x1
   2de94:	ldr	x1, [x23, #16]
   2de98:	add	x2, x3, x0
   2de9c:	str	w20, [x3, x0]
   2dea0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2dea4:	ldr	x4, [x0, #2512]
   2dea8:	add	x0, x0, #0x9d0
   2deac:	blr	x4
   2deb0:	str	x22, [x3, x0]
   2deb4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2deb8:	ldr	x4, [x0, #2544]
   2debc:	add	x0, x0, #0x9f0
   2dec0:	blr	x4
   2dec4:	str	x21, [x3, x0]
   2dec8:	cmp	x22, x1
   2decc:	ccmp	x21, x1, #0x1, le
   2ded0:	b.ge	2def4 <mpfr_atan@@Base+0x156c>  // b.tcont
   2ded4:	ldr	w2, [sp, #244]
   2ded8:	mov	w1, w19
   2dedc:	ldr	x0, [sp, #200]
   2dee0:	bl	cb30 <mpfr_check_range@plt>
   2dee4:	mov	w19, w0
   2dee8:	ldp	x21, x22, [sp, #32]
   2deec:	ldp	x23, x24, [sp, #48]
   2def0:	b	2d1f4 <mpfr_atan@@Base+0x86c>
   2def4:	cbz	w19, 2dee8 <mpfr_atan@@Base+0x1560>
   2def8:	orr	w20, w20, #0x8
   2defc:	ldp	x21, x22, [sp, #32]
   2df00:	ldp	x23, x24, [sp, #48]
   2df04:	str	w20, [x2]
   2df08:	b	2d1f4 <mpfr_atan@@Base+0x86c>
   2df0c:	mrs	x1, tpidr_el0
   2df10:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2df14:	ldr	x2, [x0, #2576]
   2df18:	add	x0, x0, #0xa10
   2df1c:	blr	x2
   2df20:	add	x0, x1, x0
   2df24:	mov	w19, #0x0                   	// #0
   2df28:	ldr	x1, [sp, #200]
   2df2c:	str	x3, [x1, #16]
   2df30:	ldr	w1, [x0]
   2df34:	orr	w1, w1, #0x4
   2df38:	str	w1, [x0]
   2df3c:	b	2d1f4 <mpfr_atan@@Base+0x86c>
   2df40:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2df44:	adrp	x0, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   2df48:	add	x2, x2, #0xe90
   2df4c:	add	x0, x0, #0xe68
   2df50:	mov	w1, #0x1f6                 	// #502
   2df54:	bl	cb40 <mpfr_assert_fail@plt>
   2df58:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2df5c:	ldr	x1, [x0, #2624]
   2df60:	add	x0, x0, #0xa40
   2df64:	blr	x1
   2df68:	add	x1, x6, x0
   2df6c:	ldr	x0, [sp, #200]
   2df70:	bl	c380 <mpfr_cache@plt>
   2df74:	mov	w19, w0
   2df78:	b	2de68 <mpfr_atan@@Base+0x14e0>
   2df7c:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000002df80 <mpfr_cmp2@@Base>:
   2df80:	stp	x29, x30, [sp, #-160]!
   2df84:	mov	x3, #0x4                   	// #4
   2df88:	movk	x3, #0x8000, lsl #48
   2df8c:	mov	x29, sp
   2df90:	stp	x25, x26, [sp, #64]
   2df94:	mov	x26, x2
   2df98:	ldr	x2, [x1, #16]
   2df9c:	stp	x21, x22, [sp, #32]
   2dfa0:	ldr	x21, [x0, #16]
   2dfa4:	stp	x19, x20, [sp, #16]
   2dfa8:	cmp	x2, x3
   2dfac:	stp	x23, x24, [sp, #48]
   2dfb0:	ccmp	x21, x3, #0x4, ne  // ne = any
   2dfb4:	mov	x23, x1
   2dfb8:	stp	x27, x28, [sp, #80]
   2dfbc:	mov	x20, x0
   2dfc0:	sub	x21, x21, x2
   2dfc4:	str	xzr, [sp, #144]
   2dfc8:	b.eq	2e2ac <mpfr_cmp2@@Base+0x32c>  // b.none
   2dfcc:	ldr	x0, [x23]
   2dfd0:	mov	x22, x21
   2dfd4:	ldr	x1, [x20]
   2dfd8:	subs	x2, x0, #0x1
   2dfdc:	add	x19, x0, #0x3e
   2dfe0:	csel	x19, x19, x2, mi  // mi = first
   2dfe4:	add	x3, x1, #0x3e
   2dfe8:	subs	x2, x1, #0x1
   2dfec:	csel	x3, x3, x2, mi  // mi = first
   2dff0:	asr	x19, x19, #6
   2dff4:	cmp	x21, #0x0
   2dff8:	asr	x3, x3, #6
   2dffc:	mov	x2, x3
   2e000:	ldr	x27, [x20, #24]
   2e004:	ldr	x24, [x23, #24]
   2e008:	b.lt	2e138 <mpfr_cmp2@@Base+0x1b8>  // b.tstop
   2e00c:	b.ne	2e108 <mpfr_cmp2@@Base+0x188>  // b.any
   2e010:	cmn	x1, #0x3e
   2e014:	mov	x1, #0xffffffffffffffc2    	// #-62
   2e018:	ccmp	x0, x1, #0x1, ge  // ge = tcont
   2e01c:	b.lt	2e2b8 <mpfr_cmp2@@Base+0x338>  // b.tstop
   2e020:	add	x0, x27, x3, lsl #3
   2e024:	b	2e03c <mpfr_cmp2@@Base+0xbc>
   2e028:	sub	x19, x19, #0x1
   2e02c:	subs	x3, x3, #0x1
   2e030:	ccmp	x19, #0x0, #0x1, pl  // pl = nfrst
   2e034:	add	x21, x21, #0x40
   2e038:	b.lt	2e2b8 <mpfr_cmp2@@Base+0x338>  // b.tstop
   2e03c:	ldr	x1, [x0]
   2e040:	mov	x4, x0
   2e044:	ldr	x2, [x24, x19, lsl #3]
   2e048:	sub	x0, x0, #0x8
   2e04c:	cmp	x1, x2
   2e050:	b.eq	2e028 <mpfr_cmp2@@Base+0xa8>  // b.none
   2e054:	tbnz	x19, #63, 2e360 <mpfr_cmp2@@Base+0x3e0>
   2e058:	ldr	x2, [x24, x19, lsl #3]
   2e05c:	add	x0, x24, x19, lsl #3
   2e060:	cmp	x2, x1
   2e064:	b.hi	2e158 <mpfr_cmp2@@Base+0x1d8>  // b.pmore
   2e068:	mov	x5, x24
   2e06c:	mov	x0, x4
   2e070:	mov	x24, x27
   2e074:	mov	x1, x2
   2e078:	mov	x27, x5
   2e07c:	mov	w28, #0x1                   	// #1
   2e080:	mov	x2, x27
   2e084:	mov	x27, x24
   2e088:	mov	x24, x2
   2e08c:	mov	x22, #0x0                   	// #0
   2e090:	mov	x23, #0x0                   	// #0
   2e094:	str	x1, [sp, #144]
   2e098:	sub	x19, x19, #0x1
   2e09c:	ldr	x4, [x0]
   2e0a0:	mvn	x0, x19
   2e0a4:	cmp	x23, #0x0
   2e0a8:	sub	x20, x3, #0x1
   2e0ac:	sub	x1, x4, x1
   2e0b0:	str	x1, [sp, #152]
   2e0b4:	lsr	x0, x0, #63
   2e0b8:	cset	w3, ne  // ne = any
   2e0bc:	orr	w3, w3, w0
   2e0c0:	and	w0, w0, #0xff
   2e0c4:	cbnz	w3, 2e16c <mpfr_cmp2@@Base+0x1ec>
   2e0c8:	mov	x23, #0x0                   	// #0
   2e0cc:	clz	x4, x1
   2e0d0:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   2e0d4:	add	x21, x4, x21
   2e0d8:	lsr	x2, x2, x4
   2e0dc:	cmp	x2, x1
   2e0e0:	b.eq	2e220 <mpfr_cmp2@@Base+0x2a0>  // b.none
   2e0e4:	str	x21, [x26]
   2e0e8:	mov	w0, w28
   2e0ec:	ldp	x19, x20, [sp, #16]
   2e0f0:	ldp	x21, x22, [sp, #32]
   2e0f4:	ldp	x23, x24, [sp, #48]
   2e0f8:	ldp	x25, x26, [sp, #64]
   2e0fc:	ldp	x27, x28, [sp, #80]
   2e100:	ldp	x29, x30, [sp], #160
   2e104:	ret
   2e108:	mov	w28, #0x1                   	// #1
   2e10c:	cmp	x22, #0x3f
   2e110:	add	x0, x27, x3, lsl #3
   2e114:	b.hi	2e2c8 <mpfr_cmp2@@Base+0x348>  // b.pmore
   2e118:	ldr	x1, [x24, x19, lsl #3]
   2e11c:	neg	w23, w22
   2e120:	mov	x21, #0x0                   	// #0
   2e124:	lsr	x1, x1, x22
   2e128:	str	x1, [sp, #144]
   2e12c:	ldr	x2, [x24, x19, lsl #3]
   2e130:	lsl	x23, x2, x23
   2e134:	b	2e098 <mpfr_cmp2@@Base+0x118>
   2e138:	mov	x0, x27
   2e13c:	mov	x3, x19
   2e140:	mov	x27, x24
   2e144:	neg	x22, x21
   2e148:	mov	x24, x0
   2e14c:	mov	x19, x2
   2e150:	mov	w28, #0xffffffff            	// #-1
   2e154:	b	2e10c <mpfr_cmp2@@Base+0x18c>
   2e158:	mov	x2, x3
   2e15c:	mov	w28, #0xffffffff            	// #-1
   2e160:	mov	x3, x19
   2e164:	mov	x19, x2
   2e168:	b	2e080 <mpfr_cmp2@@Base+0x100>
   2e16c:	mov	w3, w0
   2e170:	cmp	x1, #0x1
   2e174:	b.ne	2e0cc <mpfr_cmp2@@Base+0x14c>  // b.any
   2e178:	mov	x25, x1
   2e17c:	add	x2, sp, #0x90
   2e180:	add	x1, sp, #0x88
   2e184:	add	x6, sp, #0x98
   2e188:	cbz	x22, 2e370 <mpfr_cmp2@@Base+0x3f0>
   2e18c:	mov	w7, #0x0                   	// #0
   2e190:	mov	x0, #0x0                   	// #0
   2e194:	tbnz	x20, #63, 2e19c <mpfr_cmp2@@Base+0x21c>
   2e198:	ldr	x0, [x27, x20, lsl #3]
   2e19c:	stp	x0, x23, [sp, #136]
   2e1a0:	tbnz	x19, #63, 2e40c <mpfr_cmp2@@Base+0x48c>
   2e1a4:	ldr	x0, [x24, x19, lsl #3]
   2e1a8:	add	x23, x23, x0, lsr #1
   2e1ac:	str	x23, [sp, #144]
   2e1b0:	ldr	x23, [x24, x19, lsl #3]
   2e1b4:	and	w7, w23, #0x1
   2e1b8:	lsl	x23, x23, #63
   2e1bc:	mov	x0, x6
   2e1c0:	mov	x3, #0x1                   	// #1
   2e1c4:	sub	x19, x19, #0x1
   2e1c8:	stp	x6, x1, [sp, #96]
   2e1cc:	sub	x20, x20, #0x1
   2e1d0:	str	x2, [sp, #112]
   2e1d4:	str	w7, [sp, #124]
   2e1d8:	bl	be60 <__gmpn_sub_n@plt>
   2e1dc:	mvn	x3, x19
   2e1e0:	ldr	w7, [sp, #124]
   2e1e4:	sub	x4, x25, x0
   2e1e8:	add	x5, x21, #0x40
   2e1ec:	lsr	x3, x3, #63
   2e1f0:	ands	w3, w3, #0xff
   2e1f4:	ccmp	w7, #0x0, #0x0, eq  // eq = none
   2e1f8:	ldp	x6, x1, [sp, #96]
   2e1fc:	ldr	x2, [sp, #112]
   2e200:	b.ne	2e414 <mpfr_cmp2@@Base+0x494>  // b.any
   2e204:	ldr	x0, [sp, #152]
   2e208:	mov	w3, #0x0                   	// #0
   2e20c:	mov	x23, #0x0                   	// #0
   2e210:	mov	x1, x0
   2e214:	cbz	x4, 2e3fc <mpfr_cmp2@@Base+0x47c>
   2e218:	add	x21, x21, #0x3f
   2e21c:	cbnz	x0, 2e0e4 <mpfr_cmp2@@Base+0x164>
   2e220:	tbnz	x20, #63, 2e2e8 <mpfr_cmp2@@Base+0x368>
   2e224:	cmp	x23, #0x0
   2e228:	mov	w2, #0x40                  	// #64
   2e22c:	ccmp	w3, #0x0, #0x0, eq  // eq = none
   2e230:	b.ne	2e264 <mpfr_cmp2@@Base+0x2e4>  // b.any
   2e234:	b	2e0e4 <mpfr_cmp2@@Base+0x164>
   2e238:	ldr	x1, [sp, #144]
   2e23c:	sub	x22, x22, #0x40
   2e240:	ldr	x0, [x27, x20, lsl #3]
   2e244:	sub	x20, x20, #0x1
   2e248:	cmp	x0, x1
   2e24c:	b.ne	2e2dc <mpfr_cmp2@@Base+0x35c>  // b.any
   2e250:	cmn	x20, #0x1
   2e254:	b.eq	2e2e8 <mpfr_cmp2@@Base+0x368>  // b.none
   2e258:	cmp	x19, #0x0
   2e25c:	ccmp	x23, #0x0, #0x0, lt  // lt = tstop
   2e260:	b.eq	2e0e4 <mpfr_cmp2@@Base+0x164>  // b.none
   2e264:	cmp	x22, #0x3f
   2e268:	b.hi	2e238 <mpfr_cmp2@@Base+0x2b8>  // b.pmore
   2e26c:	str	x23, [sp, #144]
   2e270:	mov	x1, x23
   2e274:	tbnz	x19, #63, 2e2a0 <mpfr_cmp2@@Base+0x320>
   2e278:	ldr	x1, [x24, x19, lsl #3]
   2e27c:	sub	w0, w2, w22
   2e280:	lsr	x1, x1, x22
   2e284:	add	x1, x1, x23
   2e288:	str	x1, [sp, #144]
   2e28c:	cbz	x22, 2e298 <mpfr_cmp2@@Base+0x318>
   2e290:	ldr	x23, [x24, x19, lsl #3]
   2e294:	lsl	x23, x23, x0
   2e298:	sub	x19, x19, #0x1
   2e29c:	b	2e240 <mpfr_cmp2@@Base+0x2c0>
   2e2a0:	sub	x19, x19, #0x1
   2e2a4:	mov	x23, #0x0                   	// #0
   2e2a8:	b	2e240 <mpfr_cmp2@@Base+0x2c0>
   2e2ac:	bl	cb00 <mpfr_ubf_diff_exp@plt>
   2e2b0:	mov	x21, x0
   2e2b4:	b	2dfcc <mpfr_cmp2@@Base+0x4c>
   2e2b8:	tbnz	x3, #63, 2e310 <mpfr_cmp2@@Base+0x390>
   2e2bc:	add	x4, x27, x3, lsl #3
   2e2c0:	ldr	x1, [x27, x3, lsl #3]
   2e2c4:	b	2e054 <mpfr_cmp2@@Base+0xd4>
   2e2c8:	sub	x22, x22, #0x40
   2e2cc:	mov	x21, #0x0                   	// #0
   2e2d0:	mov	x23, #0x0                   	// #0
   2e2d4:	ldr	x1, [sp, #144]
   2e2d8:	b	2e09c <mpfr_cmp2@@Base+0x11c>
   2e2dc:	cinc	x21, x21, cc  // cc = lo, ul, last
   2e2e0:	str	x21, [x26]
   2e2e4:	b	2e0e8 <mpfr_cmp2@@Base+0x168>
   2e2e8:	cbnz	x23, 2e308 <mpfr_cmp2@@Base+0x388>
   2e2ec:	tbz	x19, #63, 2e2f8 <mpfr_cmp2@@Base+0x378>
   2e2f0:	b	2e0e4 <mpfr_cmp2@@Base+0x164>
   2e2f4:	b.eq	2e0e4 <mpfr_cmp2@@Base+0x164>  // b.none
   2e2f8:	ldr	x0, [x24, x19, lsl #3]
   2e2fc:	sub	x19, x19, #0x1
   2e300:	cmn	x19, #0x1
   2e304:	cbz	x0, 2e2f4 <mpfr_cmp2@@Base+0x374>
   2e308:	add	x21, x21, #0x1
   2e30c:	b	2e0e4 <mpfr_cmp2@@Base+0x164>
   2e310:	mov	w28, #0x0                   	// #0
   2e314:	tbnz	x19, #63, 2e0e8 <mpfr_cmp2@@Base+0x168>
   2e318:	ldr	x1, [x24, x19, lsl #3]
   2e31c:	mov	x3, x19
   2e320:	mov	x27, x24
   2e324:	mov	w28, #0xffffffff            	// #-1
   2e328:	cbnz	x1, 2e350 <mpfr_cmp2@@Base+0x3d0>
   2e32c:	sub	x0, x3, #0x1
   2e330:	cbnz	x3, 2e33c <mpfr_cmp2@@Base+0x3bc>
   2e334:	b	2e368 <mpfr_cmp2@@Base+0x3e8>
   2e338:	b.eq	2e368 <mpfr_cmp2@@Base+0x3e8>  // b.none
   2e33c:	ldr	x1, [x27, x0, lsl #3]
   2e340:	sub	x0, x0, #0x1
   2e344:	add	x21, x21, #0x40
   2e348:	cmn	x0, #0x1
   2e34c:	cbz	x1, 2e338 <mpfr_cmp2@@Base+0x3b8>
   2e350:	clz	x1, x1
   2e354:	add	x21, x1, x21
   2e358:	str	x21, [x26]
   2e35c:	b	2e0e8 <mpfr_cmp2@@Base+0x168>
   2e360:	mov	w28, #0x1                   	// #1
   2e364:	b	2e328 <mpfr_cmp2@@Base+0x3a8>
   2e368:	mov	w28, #0x0                   	// #0
   2e36c:	b	2e0e8 <mpfr_cmp2@@Base+0x168>
   2e370:	mov	w7, #0x0                   	// #0
   2e374:	mov	x0, #0x0                   	// #0
   2e378:	tbnz	x20, #63, 2e380 <mpfr_cmp2@@Base+0x400>
   2e37c:	ldr	x0, [x27, x20, lsl #3]
   2e380:	stp	x0, x23, [sp, #136]
   2e384:	tbnz	x19, #63, 2e404 <mpfr_cmp2@@Base+0x484>
   2e388:	ldr	x0, [x24, x19, lsl #3]
   2e38c:	cmp	x23, #0x0
   2e390:	cset	w7, ne  // ne = any
   2e394:	add	x0, x0, x23
   2e398:	str	x0, [sp, #144]
   2e39c:	mov	x0, x6
   2e3a0:	mov	x3, #0x1                   	// #1
   2e3a4:	sub	x19, x19, #0x1
   2e3a8:	stp	x6, x1, [sp, #96]
   2e3ac:	sub	x20, x20, #0x1
   2e3b0:	str	x2, [sp, #112]
   2e3b4:	str	w7, [sp, #124]
   2e3b8:	bl	be60 <__gmpn_sub_n@plt>
   2e3bc:	mvn	x3, x19
   2e3c0:	ldr	w7, [sp, #124]
   2e3c4:	sub	x4, x25, x0
   2e3c8:	add	x5, x21, #0x40
   2e3cc:	lsr	x3, x3, #63
   2e3d0:	ands	w3, w3, #0xff
   2e3d4:	ccmp	w7, #0x0, #0x0, eq  // eq = none
   2e3d8:	ldp	x6, x1, [sp, #96]
   2e3dc:	ldr	x2, [sp, #112]
   2e3e0:	b.eq	2e204 <mpfr_cmp2@@Base+0x284>  // b.none
   2e3e4:	ldr	x0, [sp, #152]
   2e3e8:	cmp	x4, #0x0
   2e3ec:	ccmp	x0, #0x1, #0x0, eq  // eq = none
   2e3f0:	b.ne	2e210 <mpfr_cmp2@@Base+0x290>  // b.any
   2e3f4:	mov	x21, x5
   2e3f8:	b	2e370 <mpfr_cmp2@@Base+0x3f0>
   2e3fc:	mov	x21, x5
   2e400:	b	2e0cc <mpfr_cmp2@@Base+0x14c>
   2e404:	mov	x23, #0x0                   	// #0
   2e408:	b	2e39c <mpfr_cmp2@@Base+0x41c>
   2e40c:	mov	x23, #0x0                   	// #0
   2e410:	b	2e1bc <mpfr_cmp2@@Base+0x23c>
   2e414:	ldr	x0, [sp, #152]
   2e418:	cmp	x4, #0x0
   2e41c:	ccmp	x0, #0x1, #0x0, eq  // eq = none
   2e420:	b.ne	2e210 <mpfr_cmp2@@Base+0x290>  // b.any
   2e424:	mov	x21, x5
   2e428:	b	2e18c <mpfr_cmp2@@Base+0x20c>
   2e42c:	nop
   2e430:	stp	x29, x30, [sp, #-288]!
   2e434:	mov	x29, sp
   2e438:	stp	x21, x22, [sp, #32]
   2e43c:	mov	x21, x0
   2e440:	ldr	x0, [x1, #16]
   2e444:	stp	x19, x20, [sp, #16]
   2e448:	neg	x0, x0
   2e44c:	stp	x23, x24, [sp, #48]
   2e450:	stp	x25, x26, [sp, #64]
   2e454:	sdiv	x0, x2, x0
   2e458:	stp	x27, x28, [sp, #80]
   2e45c:	mov	x28, x1
   2e460:	str	x2, [x29, #168]
   2e464:	str	x3, [x29, #192]
   2e468:	bl	bf20 <__gmpfr_isqrt@plt>
   2e46c:	mov	x27, x0
   2e470:	mov	x0, #0x2                   	// #2
   2e474:	cmp	x27, x0
   2e478:	csel	x0, x27, x0, cs  // cs = hs, nlast
   2e47c:	str	x0, [x29, #216]
   2e480:	add	x20, x0, #0x1
   2e484:	str	xzr, [x29, #232]
   2e488:	lsl	x25, x20, #4
   2e48c:	cmp	x25, #0x4, lsl #12
   2e490:	b.hi	2ea14 <mpfr_cmp2@@Base+0xa94>  // b.pmore
   2e494:	sub	sp, sp, x25
   2e498:	mov	x0, sp
   2e49c:	str	x0, [x29, #208]
   2e4a0:	lsl	x0, x20, #3
   2e4a4:	str	x0, [x29, #200]
   2e4a8:	cmp	x0, #0x4, lsl #12
   2e4ac:	b.hi	2ea34 <mpfr_cmp2@@Base+0xab4>  // b.pmore
   2e4b0:	add	x0, x0, #0xf
   2e4b4:	and	x0, x0, #0xfffffffffffffff0
   2e4b8:	sub	sp, sp, x0
   2e4bc:	mov	x0, sp
   2e4c0:	str	x0, [x29, #176]
   2e4c4:	add	x0, x29, #0x100
   2e4c8:	add	x19, x29, #0x110
   2e4cc:	mov	x22, x0
   2e4d0:	mov	x0, x19
   2e4d4:	str	x22, [x29, #112]
   2e4d8:	bl	bf90 <mpfr_mpz_init@plt>
   2e4dc:	mov	x0, x22
   2e4e0:	add	x22, x29, #0xf0
   2e4e4:	bl	bf90 <mpfr_mpz_init@plt>
   2e4e8:	mov	x23, #0x1                   	// #1
   2e4ec:	ldr	x26, [x29, #208]
   2e4f0:	mov	x0, x22
   2e4f4:	str	x26, [x29, #104]
   2e4f8:	bl	bf90 <mpfr_mpz_init@plt>
   2e4fc:	mov	x0, x21
   2e500:	mov	x1, #0x0                   	// #0
   2e504:	bl	bcb0 <__gmpz_set_ui@plt>
   2e508:	add	x24, x25, x26
   2e50c:	ldr	x0, [x29, #168]
   2e510:	sub	x23, x23, x0
   2e514:	ldr	x0, [x29, #192]
   2e518:	str	x23, [x0]
   2e51c:	nop
   2e520:	mov	x0, x26
   2e524:	add	x26, x26, #0x10
   2e528:	bl	bf90 <mpfr_mpz_init@plt>
   2e52c:	cmp	x24, x26
   2e530:	b.ne	2e520 <mpfr_cmp2@@Base+0x5a0>  // b.any
   2e534:	ldr	x0, [x29, #208]
   2e538:	mov	x1, x28
   2e53c:	add	x26, x0, #0x10
   2e540:	mov	x0, x26
   2e544:	bl	cac0 <mpfr_get_z_2exp@plt>
   2e548:	ldr	x1, [x29, #176]
   2e54c:	cmp	x23, x0
   2e550:	str	x0, [x1, #8]
   2e554:	b.le	2ea48 <mpfr_cmp2@@Base+0xac8>
   2e558:	sub	x2, x23, x0
   2e55c:	mov	x1, x26
   2e560:	mov	x0, x26
   2e564:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2e568:	ldp	x3, x28, [x29, #168]
   2e56c:	mov	x2, x26
   2e570:	mov	x1, x26
   2e574:	mov	x0, x22
   2e578:	str	x23, [x28, #8]
   2e57c:	sub	x24, x3, #0x1
   2e580:	bl	bff0 <__gmpz_mul@plt>
   2e584:	ldr	x0, [x29, #208]
   2e588:	mov	x2, x24
   2e58c:	mov	x1, x22
   2e590:	add	x0, x0, #0x20
   2e594:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2e598:	ldr	x0, [x29, #208]
   2e59c:	str	x23, [x28, #16]
   2e5a0:	cmp	x27, #0x2
   2e5a4:	mov	x27, #0x3                   	// #3
   2e5a8:	add	x28, x0, #0x30
   2e5ac:	b.ls	2e5fc <mpfr_cmp2@@Base+0x67c>  // b.plast
   2e5b0:	ldr	x4, [x29, #208]
   2e5b4:	lsr	x3, x27, #1
   2e5b8:	sub	x1, x28, #0x10
   2e5bc:	mov	x2, x26
   2e5c0:	mov	x0, x22
   2e5c4:	add	x3, x4, x3, lsl #4
   2e5c8:	tbz	w27, #0, 2e8c0 <mpfr_cmp2@@Base+0x940>
   2e5cc:	bl	bff0 <__gmpz_mul@plt>
   2e5d0:	mov	x0, x28
   2e5d4:	mov	x2, x24
   2e5d8:	mov	x1, x22
   2e5dc:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2e5e0:	ldr	x0, [x29, #176]
   2e5e4:	add	x28, x28, #0x10
   2e5e8:	str	x23, [x0, x27, lsl #3]
   2e5ec:	add	x27, x27, #0x1
   2e5f0:	ldr	x0, [x29, #216]
   2e5f4:	cmp	x27, x0
   2e5f8:	b.ls	2e5b0 <mpfr_cmp2@@Base+0x630>  // b.plast
   2e5fc:	ldr	x26, [x29, #208]
   2e600:	mov	x1, #0x1                   	// #1
   2e604:	mov	x0, x26
   2e608:	bl	bcb0 <__gmpz_set_ui@plt>
   2e60c:	mov	x2, x24
   2e610:	mov	x1, x26
   2e614:	mov	x0, x26
   2e618:	bl	c200 <__gmpz_mul_2exp@plt>
   2e61c:	ldr	x27, [x29, #176]
   2e620:	mov	x1, #0x1                   	// #1
   2e624:	ldr	x28, [x29, #112]
   2e628:	mov	x24, x26
   2e62c:	str	x23, [x27]
   2e630:	mov	x0, x28
   2e634:	bl	bcb0 <__gmpz_set_ui@plt>
   2e638:	ldr	x3, [x29, #216]
   2e63c:	sub	x2, x25, #0x20
   2e640:	ldr	x4, [x29, #200]
   2e644:	sub	x0, x3, #0x2
   2e648:	sub	x25, x25, #0x10
   2e64c:	lsl	x3, x3, #4
   2e650:	add	x0, x24, x0, lsl #4
   2e654:	str	x0, [x29, #128]
   2e658:	add	x0, x24, x2
   2e65c:	sub	x1, x4, #0x10
   2e660:	str	x0, [x29, #160]
   2e664:	add	x0, x24, x25
   2e668:	sub	x26, x4, #0x8
   2e66c:	str	x0, [x29, #144]
   2e670:	add	x0, x27, x1
   2e674:	str	x0, [x29, #152]
   2e678:	ldr	x1, [x29, #168]
   2e67c:	add	x0, x27, x26
   2e680:	str	x0, [x29, #136]
   2e684:	add	x0, x24, x3
   2e688:	str	x0, [x29, #200]
   2e68c:	neg	x0, x1
   2e690:	str	x0, [x29, #120]
   2e694:	mov	x23, x1
   2e698:	ldr	x0, [x29, #152]
   2e69c:	str	x3, [x29, #96]
   2e6a0:	mov	x25, #0x0                   	// #0
   2e6a4:	mov	x27, #0x0                   	// #0
   2e6a8:	ldr	x2, [x0]
   2e6ac:	mov	x0, #0x1                   	// #1
   2e6b0:	sub	x0, x0, x23
   2e6b4:	str	x0, [x29, #184]
   2e6b8:	cmp	x2, x0
   2e6bc:	b.ge	2e8ac <mpfr_cmp2@@Base+0x92c>  // b.tcont
   2e6c0:	ldr	x1, [x29, #160]
   2e6c4:	sub	x2, x0, x2
   2e6c8:	mov	x0, x22
   2e6cc:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2e6d0:	ldr	x24, [x29, #128]
   2e6d4:	sub	x26, x20, #0x2
   2e6d8:	mov	x2, x26
   2e6dc:	mov	x1, x22
   2e6e0:	mov	x0, x22
   2e6e4:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2e6e8:	mov	x2, x24
   2e6ec:	sub	x26, x26, #0x1
   2e6f0:	mov	x1, x22
   2e6f4:	mov	x0, x22
   2e6f8:	bl	c9c0 <__gmpz_add@plt>
   2e6fc:	sub	x24, x24, #0x10
   2e700:	cmp	x25, x26
   2e704:	b.ne	2e6d8 <mpfr_cmp2@@Base+0x758>  // b.any
   2e708:	mov	x2, x28
   2e70c:	mov	x0, x22
   2e710:	mov	x1, x22
   2e714:	bl	bff0 <__gmpz_mul@plt>
   2e718:	ldr	x0, [x29, #192]
   2e71c:	ldr	x2, [x0]
   2e720:	ldr	x0, [x29, #184]
   2e724:	add	x26, x0, x27
   2e728:	cmp	x2, x26
   2e72c:	b.le	2e9e4 <mpfr_cmp2@@Base+0xa64>
   2e730:	sub	x2, x2, x26
   2e734:	mov	x1, x22
   2e738:	mov	x0, x22
   2e73c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2e740:	mov	x2, x22
   2e744:	mov	x1, x21
   2e748:	mov	x0, x21
   2e74c:	bl	c9c0 <__gmpz_add@plt>
   2e750:	ldr	x2, [x29, #144]
   2e754:	mov	x1, x28
   2e758:	mov	x0, x22
   2e75c:	add	x24, x25, #0x1
   2e760:	bl	bff0 <__gmpz_mul@plt>
   2e764:	ldr	x0, [x29, #136]
   2e768:	mov	x1, #0x1                   	// #1
   2e76c:	ldr	x2, [x0]
   2e770:	mov	x0, x19
   2e774:	add	x27, x27, x2
   2e778:	bl	bcb0 <__gmpz_set_ui@plt>
   2e77c:	nop
   2e780:	mov	x2, x24
   2e784:	mov	x1, x19
   2e788:	add	x24, x24, #0x1
   2e78c:	mov	x0, x19
   2e790:	bl	c100 <__gmpz_mul_ui@plt>
   2e794:	cmp	x20, x24
   2e798:	b.ne	2e780 <mpfr_cmp2@@Base+0x800>  // b.any
   2e79c:	mov	x1, x22
   2e7a0:	mov	x0, x22
   2e7a4:	mov	x2, x19
   2e7a8:	bl	be30 <__gmpz_fdiv_q@plt>
   2e7ac:	ldr	w0, [x29, #244]
   2e7b0:	ldr	x1, [x29, #216]
   2e7b4:	cmp	w0, #0x0
   2e7b8:	add	x25, x25, x1
   2e7bc:	cbz	w0, 2e974 <mpfr_cmp2@@Base+0x9f4>
   2e7c0:	cneg	w0, w0, lt  // lt = tstop
   2e7c4:	mov	x1, #0xfffffffffffffff8    	// #-8
   2e7c8:	ldr	x2, [x29, #248]
   2e7cc:	add	x1, x1, w0, sxtw #3
   2e7d0:	sbfiz	x0, x0, #6, #32
   2e7d4:	cmp	x23, #0x0
   2e7d8:	ldr	x2, [x2, x1]
   2e7dc:	clz	x2, x2
   2e7e0:	sub	x0, x0, x2
   2e7e4:	ccmp	x0, x23, #0x2, ge  // ge = tcont
   2e7e8:	b.ls	2ea04 <mpfr_cmp2@@Base+0xa84>  // b.plast
   2e7ec:	sub	x2, x0, x23
   2e7f0:	mov	x1, x22
   2e7f4:	add	x27, x27, x2
   2e7f8:	mov	x0, x28
   2e7fc:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2e800:	ldr	w0, [x29, #260]
   2e804:	cmp	w0, #0x0
   2e808:	cbz	w0, 2e9f8 <mpfr_cmp2@@Base+0xa78>
   2e80c:	cneg	w0, w0, lt  // lt = tstop
   2e810:	mov	x1, #0xfffffffffffffff8    	// #-8
   2e814:	ldr	x2, [x29, #264]
   2e818:	add	x1, x1, w0, sxtw #3
   2e81c:	sbfiz	x0, x0, #6, #32
   2e820:	ldr	x1, [x2, x1]
   2e824:	clz	x1, x1
   2e828:	sub	x0, x0, x1
   2e82c:	mov	x4, x0
   2e830:	ldr	w1, [x21, #4]
   2e834:	add	x0, x27, x0
   2e838:	ldr	x3, [x29, #120]
   2e83c:	cmp	w1, #0x0
   2e840:	cneg	w1, w1, lt  // lt = tstop
   2e844:	cmp	x0, x3
   2e848:	ldr	x0, [x29, #192]
   2e84c:	ldr	x2, [x21, #8]
   2e850:	ldr	x23, [x0]
   2e854:	mov	x0, #0xfffffffffffffff8    	// #-8
   2e858:	add	x0, x0, w1, sxtw #3
   2e85c:	sbfiz	x1, x1, #6, #32
   2e860:	ldr	x3, [x29, #168]
   2e864:	ldr	x0, [x2, x0]
   2e868:	sub	x23, x3, x23
   2e86c:	clz	x0, x0
   2e870:	sub	x1, x1, x0
   2e874:	sub	x23, x23, x1
   2e878:	add	x23, x23, x27
   2e87c:	add	x23, x23, x4
   2e880:	b.ls	2e974 <mpfr_cmp2@@Base+0x9f4>  // b.plast
   2e884:	cbnz	x25, 2e8fc <mpfr_cmp2@@Base+0x97c>
   2e888:	ldr	x0, [x29, #216]
   2e88c:	add	x20, x20, x0
   2e890:	ldr	x0, [x29, #152]
   2e894:	ldr	x2, [x0]
   2e898:	mov	x0, #0x1                   	// #1
   2e89c:	sub	x0, x0, x23
   2e8a0:	str	x0, [x29, #184]
   2e8a4:	cmp	x2, x0
   2e8a8:	b.lt	2e6c0 <mpfr_cmp2@@Base+0x740>  // b.tstop
   2e8ac:	ldr	x1, [x29, #160]
   2e8b0:	sub	x2, x2, x0
   2e8b4:	mov	x0, x22
   2e8b8:	bl	c200 <__gmpz_mul_2exp@plt>
   2e8bc:	b	2e6d0 <mpfr_cmp2@@Base+0x750>
   2e8c0:	mov	x2, x3
   2e8c4:	mov	x1, x3
   2e8c8:	bl	bff0 <__gmpz_mul@plt>
   2e8cc:	mov	x0, x28
   2e8d0:	mov	x2, x24
   2e8d4:	mov	x1, x22
   2e8d8:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2e8dc:	ldr	x0, [x29, #176]
   2e8e0:	add	x28, x28, #0x10
   2e8e4:	str	x23, [x0, x27, lsl #3]
   2e8e8:	add	x27, x27, #0x1
   2e8ec:	ldr	x0, [x29, #216]
   2e8f0:	cmp	x0, x27
   2e8f4:	b.cs	2e5b0 <mpfr_cmp2@@Base+0x630>  // b.hs, b.nlast
   2e8f8:	b	2e5fc <mpfr_cmp2@@Base+0x67c>
   2e8fc:	ldr	x4, [x29, #176]
   2e900:	mov	x0, #0x1                   	// #1
   2e904:	ldr	x24, [x29, #208]
   2e908:	sub	x26, x0, x23
   2e90c:	str	x19, [x29, #184]
   2e910:	mov	x19, x4
   2e914:	nop
   2e918:	ldr	x3, [x19]
   2e91c:	mov	x1, x24
   2e920:	mov	x0, x24
   2e924:	sub	x2, x26, x3
   2e928:	cmp	x3, x26
   2e92c:	b.ge	2e950 <mpfr_cmp2@@Base+0x9d0>  // b.tcont
   2e930:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2e934:	str	x26, [x19], #8
   2e938:	ldr	x0, [x29, #200]
   2e93c:	add	x24, x24, #0x10
   2e940:	cmp	x0, x24
   2e944:	b.ne	2e918 <mpfr_cmp2@@Base+0x998>  // b.any
   2e948:	ldr	x19, [x29, #184]
   2e94c:	b	2e888 <mpfr_cmp2@@Base+0x908>
   2e950:	sub	x2, x3, x26
   2e954:	bl	c200 <__gmpz_mul_2exp@plt>
   2e958:	ldr	x0, [x29, #200]
   2e95c:	str	x26, [x19], #8
   2e960:	add	x24, x24, #0x10
   2e964:	cmp	x0, x24
   2e968:	b.ne	2e918 <mpfr_cmp2@@Base+0x998>  // b.any
   2e96c:	ldr	x19, [x29, #184]
   2e970:	b	2e888 <mpfr_cmp2@@Base+0x908>
   2e974:	ldp	x0, x21, [x29, #96]
   2e978:	add	x20, x0, #0x10
   2e97c:	ldr	x0, [x29, #208]
   2e980:	add	x20, x0, x20
   2e984:	nop
   2e988:	mov	x0, x21
   2e98c:	add	x21, x21, #0x10
   2e990:	bl	c170 <mpfr_mpz_clear@plt>
   2e994:	cmp	x21, x20
   2e998:	b.ne	2e988 <mpfr_cmp2@@Base+0xa08>  // b.any
   2e99c:	ldr	x0, [x29, #232]
   2e9a0:	cbnz	x0, 2ea5c <mpfr_cmp2@@Base+0xadc>
   2e9a4:	ldr	x0, [x29, #112]
   2e9a8:	bl	c170 <mpfr_mpz_clear@plt>
   2e9ac:	mov	x0, x22
   2e9b0:	bl	c170 <mpfr_mpz_clear@plt>
   2e9b4:	mov	x0, x19
   2e9b8:	bl	c170 <mpfr_mpz_clear@plt>
   2e9bc:	add	x0, x25, #0x4
   2e9c0:	mov	sp, x29
   2e9c4:	mul	x0, x0, x25
   2e9c8:	ldp	x19, x20, [sp, #16]
   2e9cc:	ldp	x21, x22, [sp, #32]
   2e9d0:	ldp	x23, x24, [sp, #48]
   2e9d4:	ldp	x25, x26, [sp, #64]
   2e9d8:	ldp	x27, x28, [sp, #80]
   2e9dc:	ldp	x29, x30, [sp], #288
   2e9e0:	ret
   2e9e4:	sub	x2, x26, x2
   2e9e8:	mov	x1, x22
   2e9ec:	mov	x0, x22
   2e9f0:	bl	c200 <__gmpz_mul_2exp@plt>
   2e9f4:	b	2e740 <mpfr_cmp2@@Base+0x7c0>
   2e9f8:	mov	x0, #0x1                   	// #1
   2e9fc:	mov	x4, x0
   2ea00:	b	2e830 <mpfr_cmp2@@Base+0x8b0>
   2ea04:	mov	x1, x22
   2ea08:	mov	x0, x28
   2ea0c:	bl	bfa0 <__gmpz_set@plt>
   2ea10:	b	2e800 <mpfr_cmp2@@Base+0x880>
   2ea14:	mov	x1, x25
   2ea18:	add	x0, x29, #0xe8
   2ea1c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   2ea20:	str	x0, [x29, #208]
   2ea24:	lsl	x0, x20, #3
   2ea28:	str	x0, [x29, #200]
   2ea2c:	cmp	x0, #0x4, lsl #12
   2ea30:	b.ls	2e4b0 <mpfr_cmp2@@Base+0x530>  // b.plast
   2ea34:	mov	x1, x0
   2ea38:	add	x0, x29, #0xe8
   2ea3c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   2ea40:	str	x0, [x29, #176]
   2ea44:	b	2e4c4 <mpfr_cmp2@@Base+0x544>
   2ea48:	sub	x2, x0, x23
   2ea4c:	mov	x1, x26
   2ea50:	mov	x0, x26
   2ea54:	bl	c200 <__gmpz_mul_2exp@plt>
   2ea58:	b	2e568 <mpfr_cmp2@@Base+0x5e8>
   2ea5c:	bl	c410 <mpfr_tmp_free@plt>
   2ea60:	b	2e9a4 <mpfr_cmp2@@Base+0xa24>
   2ea64:	nop

000000000002ea68 <mpfr_exp_2@@Base>:
   2ea68:	stp	x29, x30, [sp, #-480]!
   2ea6c:	mov	x29, sp
   2ea70:	stp	x19, x20, [sp, #16]
   2ea74:	str	x0, [sp, #168]
   2ea78:	ldr	x0, [x0]
   2ea7c:	stp	x21, x22, [sp, #32]
   2ea80:	ldr	x19, [x1, #16]
   2ea84:	stp	x23, x24, [sp, #48]
   2ea88:	stp	x25, x26, [sp, #64]
   2ea8c:	cmn	x19, #0x1
   2ea90:	stp	x27, x28, [sp, #80]
   2ea94:	str	x0, [sp, #112]
   2ea98:	str	w2, [sp, #140]
   2ea9c:	str	x1, [sp, #144]
   2eaa0:	b.lt	2f26c <mpfr_exp_2@@Base+0x804>  // b.tstop
   2eaa4:	adrp	x2, 81000 <__gmpfr_l2b@@Base+0x200>
   2eaa8:	add	x4, sp, #0x150
   2eaac:	mov	x6, #0x3f                  	// #63
   2eab0:	mov	w5, #0x1                   	// #1
   2eab4:	ldr	x2, [x2, #3984]
   2eab8:	add	x0, sp, #0x130
   2eabc:	mov	w3, #0x0                   	// #0
   2eac0:	str	x6, [sp, #304]
   2eac4:	str	w5, [sp, #312]
   2eac8:	str	x4, [sp, #328]
   2eacc:	bl	c620 <mpfr_div@plt>
   2ead0:	ldr	x22, [sp, #320]
   2ead4:	cmp	x22, #0x0
   2ead8:	b.le	2f26c <mpfr_exp_2@@Base+0x804>
   2eadc:	ldr	x1, [sp, #328]
   2eae0:	mov	w0, #0x40                  	// #64
   2eae4:	ldr	w2, [sp, #312]
   2eae8:	sub	w22, w0, w22
   2eaec:	ldr	x1, [x1]
   2eaf0:	cmp	w2, #0x0
   2eaf4:	lsr	x22, x1, x22
   2eaf8:	b.le	2eecc <mpfr_exp_2@@Base+0x464>
   2eafc:	cmp	x22, #0x0
   2eb00:	cbz	x22, 2f26c <mpfr_exp_2@@Base+0x804>
   2eb04:	b.ge	2f1f4 <mpfr_exp_2@@Base+0x78c>  // b.tcont
   2eb08:	mov	x0, #0x1                   	// #1
   2eb0c:	sub	x0, x0, x22
   2eb10:	clz	x0, x0
   2eb14:	mov	w1, #0x40                  	// #64
   2eb18:	sub	w0, w1, w0
   2eb1c:	str	w0, [sp, #136]
   2eb20:	ldr	x0, [sp, #112]
   2eb24:	cmp	x0, #0x63
   2eb28:	b.gt	2f214 <mpfr_exp_2@@Base+0x7ac>
   2eb2c:	add	x0, x0, #0x1
   2eb30:	add	x0, x0, x0, lsr #63
   2eb34:	asr	x0, x0, #1
   2eb38:	bl	bf20 <__gmpfr_isqrt@plt>
   2eb3c:	add	x0, x0, #0x3
   2eb40:	str	x0, [sp, #104]
   2eb44:	mov	x1, x0
   2eb48:	ldr	x0, [sp, #112]
   2eb4c:	sub	x0, x0, #0x1
   2eb50:	udiv	x0, x0, x1
   2eb54:	add	x0, x0, #0xa
   2eb58:	lsl	x0, x0, #1
   2eb5c:	cmp	x0, #0x1
   2eb60:	b.ls	2f240 <mpfr_exp_2@@Base+0x7d8>  // b.plast
   2eb64:	sub	x0, x0, #0x1
   2eb68:	mov	x2, x1
   2eb6c:	clz	x0, x0
   2eb70:	mov	w1, #0x40                  	// #64
   2eb74:	sub	w1, w1, w0
   2eb78:	lsl	x2, x2, #1
   2eb7c:	ldr	x0, [sp, #112]
   2eb80:	cmp	x19, #0x0
   2eb84:	ldrsw	x3, [sp, #136]
   2eb88:	add	x20, x0, #0xa
   2eb8c:	add	x0, x2, w1, sxtw
   2eb90:	add	x20, x0, x20
   2eb94:	str	x3, [sp, #192]
   2eb98:	add	x19, x20, x19
   2eb9c:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   2eba0:	csel	x20, x19, x20, gt
   2eba4:	add	x24, x20, x3
   2eba8:	cmp	x24, x1
   2ebac:	b.ge	2f2dc <mpfr_exp_2@@Base+0x874>  // b.tcont
   2ebb0:	sub	x21, x24, #0x1
   2ebb4:	asr	x21, x21, #6
   2ebb8:	add	x21, x21, #0x1
   2ebbc:	lsl	x0, x21, #1
   2ebc0:	cmp	x0, #0x10
   2ebc4:	b.gt	2f278 <mpfr_exp_2@@Base+0x810>
   2ebc8:	add	x0, sp, #0x160
   2ebcc:	stp	xzr, x0, [sp, #336]
   2ebd0:	mov	x2, x0
   2ebd4:	mrs	x4, tpidr_el0
   2ebd8:	add	x1, x2, x21, lsl #3
   2ebdc:	str	x4, [sp, #128]
   2ebe0:	add	x4, sp, #0xd8
   2ebe4:	mov	w3, #0x1                   	// #1
   2ebe8:	str	x4, [sp, #184]
   2ebec:	mov	x4, #0x40                  	// #64
   2ebf0:	add	x19, sp, #0xe0
   2ebf4:	mov	x0, x19
   2ebf8:	add	x28, sp, #0x110
   2ebfc:	str	x4, [sp, #152]
   2ec00:	add	x23, sp, #0x130
   2ec04:	str	x28, [sp, #176]
   2ec08:	add	x21, sp, #0xf0
   2ec0c:	str	x24, [sp, #272]
   2ec10:	str	w3, [sp, #280]
   2ec14:	stp	x1, x24, [sp, #296]
   2ec18:	str	w3, [sp, #312]
   2ec1c:	str	x2, [sp, #328]
   2ec20:	bl	bf90 <mpfr_mpz_init@plt>
   2ec24:	ldr	x1, [sp, #104]
   2ec28:	cmp	x22, #0x0
   2ec2c:	mov	x0, #0xfffffffffffffffe    	// #-2
   2ec30:	cneg	x24, x22, lt  // lt = tstop
   2ec34:	sub	x0, x0, x1
   2ec38:	str	x0, [sp, #160]
   2ec3c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2ec40:	ldr	x1, [x0, #2560]
   2ec44:	add	x0, x0, #0xa00
   2ec48:	blr	x1
   2ec4c:	tbnz	x22, #63, 2f1ac <mpfr_exp_2@@Base+0x744>
   2ec50:	ldr	x1, [sp, #128]
   2ec54:	mov	w2, #0x1                   	// #1
   2ec58:	add	x1, x1, x0
   2ec5c:	mov	x0, x28
   2ec60:	bl	c380 <mpfr_cache@plt>
   2ec64:	mov	x2, x24
   2ec68:	mov	x1, x28
   2ec6c:	mov	x0, x23
   2ec70:	mov	w3, #0x1                   	// #1
   2ec74:	bl	ba50 <mpfr_mul_ui@plt>
   2ec78:	ldr	x1, [sp, #144]
   2ec7c:	mov	x2, x23
   2ec80:	mov	x0, x23
   2ec84:	mov	w3, #0x2                   	// #2
   2ec88:	mov	x24, #0x8000000000000003    	// #-9223372036854775805
   2ec8c:	bl	bb70 <mpfr_sub@plt>
   2ec90:	ldr	x0, [sp, #320]
   2ec94:	cmp	x0, x24
   2ec98:	b.gt	2ecc4 <mpfr_exp_2@@Base+0x25c>
   2ec9c:	b	2f110 <mpfr_exp_2@@Base+0x6a8>
   2eca0:	mov	x2, x28
   2eca4:	mov	x1, x23
   2eca8:	mov	x0, x23
   2ecac:	mov	w3, #0x2                   	// #2
   2ecb0:	bl	c1a0 <mpfr_add@plt>
   2ecb4:	sub	x22, x22, #0x1
   2ecb8:	ldr	x0, [sp, #320]
   2ecbc:	cmp	x0, x24
   2ecc0:	b.le	2f110 <mpfr_exp_2@@Base+0x6a8>
   2ecc4:	ldr	w0, [sp, #312]
   2ecc8:	tbnz	w0, #31, 2eca0 <mpfr_exp_2@@Base+0x238>
   2eccc:	ldr	w0, [sp, #136]
   2ecd0:	cbz	w0, 2ece4 <mpfr_exp_2@@Base+0x27c>
   2ecd4:	mov	x1, x20
   2ecd8:	mov	x0, x23
   2ecdc:	mov	w2, #0x2                   	// #2
   2ece0:	bl	c970 <mpfr_prec_round@plt>
   2ece4:	ldr	x2, [sp, #104]
   2ece8:	mov	x1, x23
   2ecec:	mov	x0, x23
   2ecf0:	mov	w3, #0x2                   	// #2
   2ecf4:	bl	c8f0 <mpfr_div_2ui@plt>
   2ecf8:	ldr	x0, [sp, #112]
   2ecfc:	cmp	x0, #0x63
   2ed00:	b.gt	2f0bc <mpfr_exp_2@@Base+0x654>
   2ed04:	mov	x24, #0x1                   	// #1
   2ed08:	sub	x1, x24, x20
   2ed0c:	mov	x0, x21
   2ed10:	add	x27, sp, #0x100
   2ed14:	str	x1, [sp, #216]
   2ed18:	mov	x26, #0x0                   	// #0
   2ed1c:	bl	bf90 <mpfr_mpz_init@plt>
   2ed20:	mov	x0, x27
   2ed24:	bl	bf90 <mpfr_mpz_init@plt>
   2ed28:	mov	x1, x24
   2ed2c:	mov	x0, x21
   2ed30:	bl	bcb0 <__gmpz_set_ui@plt>
   2ed34:	mov	x1, x24
   2ed38:	mov	x0, x19
   2ed3c:	bl	bcb0 <__gmpz_set_ui@plt>
   2ed40:	mov	x24, #0x0                   	// #0
   2ed44:	sub	x2, x20, #0x1
   2ed48:	mov	x1, x19
   2ed4c:	mov	x0, x19
   2ed50:	bl	c200 <__gmpz_mul_2exp@plt>
   2ed54:	mov	x1, x23
   2ed58:	mov	x0, x27
   2ed5c:	bl	cac0 <mpfr_get_z_2exp@plt>
   2ed60:	str	x22, [sp, #120]
   2ed64:	mov	x22, x21
   2ed68:	mov	x21, x19
   2ed6c:	mov	x19, x0
   2ed70:	str	x23, [sp, #200]
   2ed74:	nop
   2ed78:	mov	x2, x27
   2ed7c:	mov	x1, x22
   2ed80:	mov	x0, x22
   2ed84:	bl	bff0 <__gmpz_mul@plt>
   2ed88:	ldr	w0, [sp, #228]
   2ed8c:	mov	x2, #0xfffffffffffffff8    	// #-8
   2ed90:	ldr	w1, [sp, #244]
   2ed94:	add	x24, x24, x19
   2ed98:	cmp	w0, #0x0
   2ed9c:	add	x25, x26, #0x1
   2eda0:	cneg	w0, w0, lt  // lt = tstop
   2eda4:	cmp	w1, #0x0
   2eda8:	ldr	x6, [sp, #232]
   2edac:	add	x4, x2, w0, sxtw #3
   2edb0:	cneg	w1, w1, lt  // lt = tstop
   2edb4:	sbfiz	x0, x0, #6, #32
   2edb8:	ldr	x5, [sp, #248]
   2edbc:	add	x2, x2, w1, sxtw #3
   2edc0:	ldr	x4, [x6, x4]
   2edc4:	sbfiz	x1, x1, #6, #32
   2edc8:	ldr	x2, [x5, x2]
   2edcc:	clz	x4, x4
   2edd0:	ldr	x5, [sp, #216]
   2edd4:	sub	x0, x0, x4
   2edd8:	clz	x2, x2
   2eddc:	add	x0, x0, x5
   2ede0:	sub	x2, x1, x2
   2ede4:	sub	x0, x0, x24
   2ede8:	sub	x0, x0, x2
   2edec:	subs	x0, x20, x0
   2edf0:	ccmp	x2, x0, #0x2, pl  // pl = nfrst
   2edf4:	b.ls	2f1e4 <mpfr_exp_2@@Base+0x77c>  // b.plast
   2edf8:	sub	x2, x2, x0
   2edfc:	mov	x1, x22
   2ee00:	add	x24, x24, x2
   2ee04:	mov	x0, x22
   2ee08:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2ee0c:	cmp	x25, #0x1
   2ee10:	b.ls	2ee38 <mpfr_exp_2@@Base+0x3d0>  // b.plast
   2ee14:	tst	x26, x25
   2ee18:	b.ne	2eed8 <mpfr_exp_2@@Base+0x470>  // b.any
   2ee1c:	clz	x2, x26
   2ee20:	mov	w0, #0x40                  	// #64
   2ee24:	sub	w2, w0, w2
   2ee28:	mov	x1, x22
   2ee2c:	mov	x0, x22
   2ee30:	sxtw	x2, w2
   2ee34:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2ee38:	ldr	w0, [sp, #244]
   2ee3c:	cbz	w0, 2eef0 <mpfr_exp_2@@Base+0x488>
   2ee40:	mov	x2, x22
   2ee44:	mov	x1, x21
   2ee48:	mov	x0, x21
   2ee4c:	bl	c9c0 <__gmpz_add@plt>
   2ee50:	ldr	w2, [sp, #244]
   2ee54:	mov	x1, #0xfffffffffffffff8    	// #-8
   2ee58:	ldr	w0, [sp, #260]
   2ee5c:	mov	x3, #0xfffffffffffffff8    	// #-8
   2ee60:	cmp	w2, #0x0
   2ee64:	cneg	w2, w2, lt  // lt = tstop
   2ee68:	cmp	w0, #0x0
   2ee6c:	cneg	w0, w0, lt  // lt = tstop
   2ee70:	ldr	x6, [sp, #248]
   2ee74:	add	x1, x1, w2, sxtw #3
   2ee78:	ldr	x5, [sp, #264]
   2ee7c:	add	x4, x3, w0, sxtw #3
   2ee80:	ldr	x1, [x6, x1]
   2ee84:	sbfiz	x2, x2, #6, #32
   2ee88:	ldr	x26, [x5, x4]
   2ee8c:	sbfiz	x0, x0, #6, #32
   2ee90:	clz	x1, x1
   2ee94:	clz	x26, x26
   2ee98:	sub	x23, x2, x1
   2ee9c:	sub	x26, x0, x26
   2eea0:	cmp	x23, x26
   2eea4:	b.cs	2f258 <mpfr_exp_2@@Base+0x7f0>  // b.hs, b.nlast
   2eea8:	sub	x2, x1, x2
   2eeac:	mov	x0, x27
   2eeb0:	add	x2, x2, x26
   2eeb4:	sub	x26, x26, x23
   2eeb8:	mov	x1, x27
   2eebc:	add	x19, x19, x26
   2eec0:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2eec4:	mov	x26, x25
   2eec8:	b	2ed78 <mpfr_exp_2@@Base+0x310>
   2eecc:	tbnz	x22, #63, 2f2a0 <mpfr_exp_2@@Base+0x838>
   2eed0:	neg	x22, x22
   2eed4:	b	2eafc <mpfr_exp_2@@Base+0x94>
   2eed8:	mov	x2, x25
   2eedc:	mov	x1, x22
   2eee0:	mov	x0, x22
   2eee4:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2eee8:	ldr	w0, [sp, #244]
   2eeec:	cbnz	w0, 2ee40 <mpfr_exp_2@@Base+0x3d8>
   2eef0:	mov	x0, x22
   2eef4:	mov	x19, x21
   2eef8:	mov	x21, x22
   2eefc:	ldr	x22, [sp, #120]
   2ef00:	ldr	x23, [sp, #200]
   2ef04:	bl	c170 <mpfr_mpz_clear@plt>
   2ef08:	mov	x0, x27
   2ef0c:	add	x27, x26, #0x2
   2ef10:	bl	c170 <mpfr_mpz_clear@plt>
   2ef14:	mul	x27, x27, x25
   2ef18:	add	x0, x27, x27, lsl #1
   2ef1c:	str	x0, [sp, #120]
   2ef20:	ldr	x0, [sp, #104]
   2ef24:	cbz	x0, 2f0dc <mpfr_exp_2@@Base+0x674>
   2ef28:	lsr	x25, x20, #63
   2ef2c:	mov	x24, #0x0                   	// #0
   2ef30:	and	w25, w25, #0xff
   2ef34:	mov	x26, #0xfffffffffffffff8    	// #-8
   2ef38:	b	2ef6c <mpfr_exp_2@@Base+0x504>
   2ef3c:	sub	x27, x2, x20
   2ef40:	mov	x0, x19
   2ef44:	mov	x2, x27
   2ef48:	mov	x1, x19
   2ef4c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2ef50:	add	x24, x24, #0x1
   2ef54:	ldr	x2, [sp, #216]
   2ef58:	ldr	x0, [sp, #104]
   2ef5c:	add	x2, x27, x2
   2ef60:	str	x2, [sp, #216]
   2ef64:	cmp	x0, x24
   2ef68:	b.eq	2efd8 <mpfr_exp_2@@Base+0x570>  // b.none
   2ef6c:	mov	x2, x19
   2ef70:	mov	x1, x19
   2ef74:	mov	x0, x19
   2ef78:	bl	bff0 <__gmpz_mul@plt>
   2ef7c:	ldr	w2, [sp, #228]
   2ef80:	ldr	x0, [sp, #216]
   2ef84:	cmp	w2, #0x0
   2ef88:	cneg	w2, w2, lt  // lt = tstop
   2ef8c:	cmp	w25, #0x0
   2ef90:	ldr	x3, [sp, #232]
   2ef94:	add	x1, x26, w2, sxtw #3
   2ef98:	lsl	x0, x0, #1
   2ef9c:	str	x0, [sp, #216]
   2efa0:	sbfiz	x2, x2, #6, #32
   2efa4:	ldr	x0, [x3, x1]
   2efa8:	clz	x0, x0
   2efac:	sub	x2, x2, x0
   2efb0:	ccmp	x20, x2, #0x0, eq  // eq = none
   2efb4:	b.cc	2ef3c <mpfr_exp_2@@Base+0x4d4>  // b.lo, b.ul, b.last
   2efb8:	mov	x0, x19
   2efbc:	mov	x1, x19
   2efc0:	bl	bfa0 <__gmpz_set@plt>
   2efc4:	add	x24, x24, #0x1
   2efc8:	ldr	x0, [sp, #104]
   2efcc:	ldr	x2, [sp, #216]
   2efd0:	cmp	x0, x24
   2efd4:	b.ne	2ef6c <mpfr_exp_2@@Base+0x504>  // b.any
   2efd8:	mov	x1, x19
   2efdc:	mov	x0, x28
   2efe0:	mov	w3, #0x0                   	// #0
   2efe4:	bl	c4f0 <mpfr_set_z_2exp@plt>
   2efe8:	ldr	x0, [sp, #120]
   2efec:	cmp	x0, #0x1
   2eff0:	b.eq	2f0fc <mpfr_exp_2@@Base+0x694>  // b.none
   2eff4:	b.ls	2f2ac <mpfr_exp_2@@Base+0x844>  // b.plast
   2eff8:	sub	x27, x0, #0x1
   2effc:	mov	w2, #0x40                  	// #64
   2f000:	clz	x27, x27
   2f004:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f008:	ldr	x1, [sp, #288]
   2f00c:	sub	w2, w2, w27
   2f010:	cmp	x1, x0
   2f014:	sxtw	x2, w2
   2f018:	b.le	2f110 <mpfr_exp_2@@Base+0x6a8>
   2f01c:	ldr	w0, [sp, #140]
   2f020:	sub	x2, x20, x2
   2f024:	ldr	x1, [sp, #272]
   2f028:	cmp	w0, #0x0
   2f02c:	ldr	x4, [sp, #160]
   2f030:	sub	x1, x1, #0x1
   2f034:	ldr	x0, [sp, #296]
   2f038:	asr	x1, x1, #6
   2f03c:	ldr	x3, [sp, #112]
   2f040:	add	x2, x2, x4
   2f044:	add	x1, x1, #0x1
   2f048:	cinc	x3, x3, eq  // eq = none
   2f04c:	bl	c370 <mpfr_round_p@plt>
   2f050:	cbz	w0, 2f110 <mpfr_exp_2@@Base+0x6a8>
   2f054:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2f058:	ldr	x4, [x0, #2576]
   2f05c:	add	x0, x0, #0xa10
   2f060:	blr	x4
   2f064:	ldr	w3, [sp, #140]
   2f068:	ldr	x4, [sp, #128]
   2f06c:	mov	x2, x22
   2f070:	ldr	x1, [sp, #176]
   2f074:	str	wzr, [x4, x0]
   2f078:	ldr	x0, [sp, #168]
   2f07c:	bl	bb90 <mpfr_mul_2si@plt>
   2f080:	mov	w20, w0
   2f084:	mov	x0, x19
   2f088:	bl	c170 <mpfr_mpz_clear@plt>
   2f08c:	ldr	x1, [sp, #336]
   2f090:	cbz	x1, 2f09c <mpfr_exp_2@@Base+0x634>
   2f094:	ldr	x0, [sp, #344]
   2f098:	bl	cc20 <mpfr_free_func@plt>
   2f09c:	mov	w0, w20
   2f0a0:	ldp	x19, x20, [sp, #16]
   2f0a4:	ldp	x21, x22, [sp, #32]
   2f0a8:	ldp	x23, x24, [sp, #48]
   2f0ac:	ldp	x25, x26, [sp, #64]
   2f0b0:	ldp	x27, x28, [sp, #80]
   2f0b4:	ldp	x29, x30, [sp], #480
   2f0b8:	ret
   2f0bc:	ldr	x3, [sp, #184]
   2f0c0:	mov	x2, x20
   2f0c4:	mov	x1, x23
   2f0c8:	mov	x0, x19
   2f0cc:	bl	2e430 <mpfr_cmp2@@Base+0x4b0>
   2f0d0:	str	x0, [sp, #120]
   2f0d4:	ldr	x0, [sp, #104]
   2f0d8:	cbnz	x0, 2ef28 <mpfr_exp_2@@Base+0x4c0>
   2f0dc:	ldr	x2, [sp, #216]
   2f0e0:	mov	x1, x19
   2f0e4:	mov	x0, x28
   2f0e8:	mov	w3, #0x0                   	// #0
   2f0ec:	bl	c4f0 <mpfr_set_z_2exp@plt>
   2f0f0:	ldr	x0, [sp, #120]
   2f0f4:	cmp	x0, #0x1
   2f0f8:	b.ne	2eff4 <mpfr_exp_2@@Base+0x58c>  // b.any
   2f0fc:	ldr	x1, [sp, #288]
   2f100:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f104:	mov	x2, #0x0                   	// #0
   2f108:	cmp	x1, x0
   2f10c:	b.gt	2f01c <mpfr_exp_2@@Base+0x5b4>
   2f110:	ldr	x1, [sp, #152]
   2f114:	mov	x0, #0xfffffffffffffeff    	// #-257
   2f118:	movk	x0, #0x7fff, lsl #48
   2f11c:	sub	x0, x0, x20
   2f120:	cmp	x0, x1
   2f124:	b.lt	2f2c4 <mpfr_exp_2@@Base+0x85c>  // b.tstop
   2f128:	ldr	x0, [sp, #192]
   2f12c:	add	x20, x20, x1
   2f130:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   2f134:	add	x25, x20, x0
   2f138:	add	x0, x20, x20, lsr #63
   2f13c:	cmp	x25, x1
   2f140:	asr	x0, x0, #1
   2f144:	str	x0, [sp, #152]
   2f148:	ldr	x1, [sp, #336]
   2f14c:	b.ge	2f2dc <mpfr_exp_2@@Base+0x874>  // b.tcont
   2f150:	sub	x24, x25, #0x1
   2f154:	asr	x24, x24, #6
   2f158:	add	x24, x24, #0x1
   2f15c:	lsl	x2, x24, #4
   2f160:	str	x2, [sp, #336]
   2f164:	cbz	x1, 2f290 <mpfr_exp_2@@Base+0x828>
   2f168:	ldr	x0, [sp, #344]
   2f16c:	bl	c1c0 <mpfr_reallocate_func@plt>
   2f170:	str	x0, [sp, #344]
   2f174:	cmp	x22, #0x0
   2f178:	add	x24, x0, x24, lsl #3
   2f17c:	mov	w1, #0x1                   	// #1
   2f180:	str	x25, [sp, #272]
   2f184:	str	w1, [sp, #280]
   2f188:	stp	x24, x25, [sp, #296]
   2f18c:	cneg	x24, x22, lt  // lt = tstop
   2f190:	str	w1, [sp, #312]
   2f194:	str	x0, [sp, #328]
   2f198:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2f19c:	ldr	x1, [x0, #2560]
   2f1a0:	add	x0, x0, #0xa00
   2f1a4:	blr	x1
   2f1a8:	tbz	x22, #63, 2ec50 <mpfr_exp_2@@Base+0x1e8>
   2f1ac:	ldr	x1, [sp, #128]
   2f1b0:	mov	w2, #0x2                   	// #2
   2f1b4:	add	x1, x1, x0
   2f1b8:	mov	x0, x28
   2f1bc:	bl	c380 <mpfr_cache@plt>
   2f1c0:	mov	x2, x24
   2f1c4:	mov	x1, x28
   2f1c8:	mov	x0, x23
   2f1cc:	mov	w3, #0x2                   	// #2
   2f1d0:	bl	ba50 <mpfr_mul_ui@plt>
   2f1d4:	ldr	w0, [sp, #312]
   2f1d8:	neg	w0, w0
   2f1dc:	str	w0, [sp, #312]
   2f1e0:	b	2ec78 <mpfr_exp_2@@Base+0x210>
   2f1e4:	mov	x1, x22
   2f1e8:	mov	x0, x22
   2f1ec:	bl	bfa0 <__gmpz_set@plt>
   2f1f0:	b	2ee0c <mpfr_exp_2@@Base+0x3a4>
   2f1f4:	add	x0, x22, #0x1
   2f1f8:	mov	w1, #0x40                  	// #64
   2f1fc:	clz	x0, x0
   2f200:	sub	w0, w1, w0
   2f204:	str	w0, [sp, #136]
   2f208:	ldr	x0, [sp, #112]
   2f20c:	cmp	x0, #0x63
   2f210:	b.le	2eb2c <mpfr_exp_2@@Base+0xc4>
   2f214:	lsl	x0, x0, #2
   2f218:	bl	c0b0 <__gmpfr_cuberoot@plt>
   2f21c:	mov	x1, x0
   2f220:	str	x0, [sp, #104]
   2f224:	ldr	x0, [sp, #112]
   2f228:	sub	x0, x0, #0x1
   2f22c:	udiv	x0, x0, x1
   2f230:	add	x0, x0, #0xa
   2f234:	lsl	x0, x0, #1
   2f238:	cmp	x0, #0x1
   2f23c:	b.hi	2eb64 <mpfr_exp_2@@Base+0xfc>  // b.pmore
   2f240:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   2f244:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   2f248:	add	x2, x2, #0xd0
   2f24c:	add	x0, x0, #0xe8
   2f250:	mov	w1, #0x9f                  	// #159
   2f254:	bl	cb40 <mpfr_assert_fail@plt>
   2f258:	mov	x1, x27
   2f25c:	mov	x0, x27
   2f260:	mov	x26, x25
   2f264:	bl	bfa0 <__gmpz_set@plt>
   2f268:	b	2ed78 <mpfr_exp_2@@Base+0x310>
   2f26c:	mov	x22, #0x0                   	// #0
   2f270:	str	wzr, [sp, #136]
   2f274:	b	2eb20 <mpfr_exp_2@@Base+0xb8>
   2f278:	lsl	x0, x21, #4
   2f27c:	str	x0, [sp, #336]
   2f280:	bl	ccf0 <mpfr_allocate_func@plt>
   2f284:	mov	x2, x0
   2f288:	str	x0, [sp, #344]
   2f28c:	b	2ebd4 <mpfr_exp_2@@Base+0x16c>
   2f290:	mov	x0, x2
   2f294:	bl	ccf0 <mpfr_allocate_func@plt>
   2f298:	str	x0, [sp, #344]
   2f29c:	b	2f174 <mpfr_exp_2@@Base+0x70c>
   2f2a0:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
   2f2a4:	str	w0, [sp, #136]
   2f2a8:	b	2eb20 <mpfr_exp_2@@Base+0xb8>
   2f2ac:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   2f2b0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   2f2b4:	add	x2, x2, #0xf0
   2f2b8:	add	x0, x0, #0xe8
   2f2bc:	mov	w1, #0xf5                  	// #245
   2f2c0:	bl	cb40 <mpfr_assert_fail@plt>
   2f2c4:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   2f2c8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   2f2cc:	add	x2, x2, #0xf8
   2f2d0:	add	x0, x0, #0xe8
   2f2d4:	mov	w1, #0x102                 	// #258
   2f2d8:	bl	cb40 <mpfr_assert_fail@plt>
   2f2dc:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000002f2e0 <mpfr_asin@@Base>:
   2f2e0:	stp	x29, x30, [sp, #-144]!
   2f2e4:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2f2e8:	mov	x29, sp
   2f2ec:	stp	x21, x22, [sp, #32]
   2f2f0:	mov	w21, w2
   2f2f4:	ldr	x2, [x1, #16]
   2f2f8:	stp	x19, x20, [sp, #16]
   2f2fc:	mov	x20, x1
   2f300:	stp	x27, x28, [sp, #80]
   2f304:	cmp	x2, x3
   2f308:	mov	x28, x0
   2f30c:	b.le	2f5ac <mpfr_asin@@Base+0x2cc>
   2f310:	neg	x2, x2, lsl #1
   2f314:	cmp	x2, #0x0
   2f318:	b.le	2f330 <mpfr_asin@@Base+0x50>
   2f31c:	ldr	x3, [x0]
   2f320:	add	x2, x2, #0x2
   2f324:	add	x3, x3, #0x1
   2f328:	cmp	x3, x2
   2f32c:	b.cc	2f64c <mpfr_asin@@Base+0x36c>  // b.lo, b.ul, b.last
   2f330:	ldr	x1, [x20]
   2f334:	add	x19, sp, #0x70
   2f338:	mov	x0, x19
   2f33c:	stp	x23, x24, [sp, #48]
   2f340:	mrs	x23, tpidr_el0
   2f344:	stp	x25, x26, [sp, #64]
   2f348:	bl	ca80 <mpfr_init2@plt>
   2f34c:	mov	w3, #0x1                   	// #1
   2f350:	mov	x1, x20
   2f354:	mov	w2, #0x0                   	// #0
   2f358:	mov	x0, x19
   2f35c:	bl	c6a0 <mpfr_set4@plt>
   2f360:	mov	x1, #0x1                   	// #1
   2f364:	mov	x2, #0x0                   	// #0
   2f368:	mov	x0, x19
   2f36c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   2f370:	mov	w22, w0
   2f374:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2f378:	ldr	x1, [x0, #2576]
   2f37c:	add	x0, x0, #0xa10
   2f380:	blr	x1
   2f384:	add	x3, x23, x0
   2f388:	ldr	w0, [x23, x0]
   2f38c:	str	w0, [sp, #100]
   2f390:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2f394:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2f398:	ldr	x1, [x0, #2512]
   2f39c:	add	x0, x0, #0x9d0
   2f3a0:	blr	x1
   2f3a4:	add	x26, x23, x0
   2f3a8:	ldr	x24, [x23, x0]
   2f3ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2f3b0:	ldr	x1, [x0, #2544]
   2f3b4:	add	x0, x0, #0x9f0
   2f3b8:	blr	x1
   2f3bc:	add	x27, x23, x0
   2f3c0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2f3c4:	str	x2, [x26]
   2f3c8:	ldr	x25, [x23, x0]
   2f3cc:	str	x1, [x27]
   2f3d0:	tbz	w22, #31, 2f5d4 <mpfr_asin@@Base+0x2f4>
   2f3d4:	mov	x1, #0x1                   	// #1
   2f3d8:	mov	x2, x19
   2f3dc:	mov	x0, x19
   2f3e0:	mov	w3, #0x3                   	// #3
   2f3e4:	bl	ca50 <mpfr_ui_sub@plt>
   2f3e8:	mov	x22, #0x2                   	// #2
   2f3ec:	ldr	x6, [x28]
   2f3f0:	mov	x1, #0x40                  	// #64
   2f3f4:	ldr	x0, [sp, #128]
   2f3f8:	add	x6, x6, #0xa
   2f3fc:	mov	x26, #0x8000000000000003    	// #-9223372036854775805
   2f400:	str	x1, [sp, #104]
   2f404:	sub	x22, x22, x0
   2f408:	add	x27, x6, x22
   2f40c:	mov	x1, x27
   2f410:	mov	x0, x19
   2f414:	bl	bed0 <mpfr_set_prec@plt>
   2f418:	mov	x1, x20
   2f41c:	mov	w2, #0x0                   	// #0
   2f420:	mov	x0, x19
   2f424:	bl	c400 <mpfr_sqr@plt>
   2f428:	mov	w3, #0x0                   	// #0
   2f42c:	mov	x2, x19
   2f430:	mov	x1, #0x1                   	// #1
   2f434:	mov	x0, x19
   2f438:	bl	ca50 <mpfr_ui_sub@plt>
   2f43c:	mov	x1, x19
   2f440:	mov	w2, #0x0                   	// #0
   2f444:	mov	x0, x19
   2f448:	bl	c930 <mpfr_sqrt@plt>
   2f44c:	mov	w3, #0x0                   	// #0
   2f450:	mov	x2, x19
   2f454:	mov	x1, x20
   2f458:	mov	x0, x19
   2f45c:	bl	c620 <mpfr_div@plt>
   2f460:	mov	x1, x19
   2f464:	mov	x0, x19
   2f468:	mov	w2, #0x0                   	// #0
   2f46c:	bl	c690 <mpfr_atan@plt>
   2f470:	ldr	x0, [sp, #128]
   2f474:	cmp	x0, x26
   2f478:	b.le	2f580 <mpfr_asin@@Base+0x2a0>
   2f47c:	ldr	x1, [sp, #112]
   2f480:	cmp	w21, #0x0
   2f484:	ldr	x0, [sp, #136]
   2f488:	sub	x1, x1, #0x1
   2f48c:	ldr	x3, [x28]
   2f490:	asr	x1, x1, #6
   2f494:	sub	x2, x27, x22
   2f498:	add	x1, x1, #0x1
   2f49c:	cinc	x3, x3, eq  // eq = none
   2f4a0:	bl	c370 <mpfr_round_p@plt>
   2f4a4:	cbz	w0, 2f580 <mpfr_asin@@Base+0x2a0>
   2f4a8:	ldr	w3, [sp, #120]
   2f4ac:	mov	w2, w21
   2f4b0:	mov	x1, x19
   2f4b4:	mov	x0, x28
   2f4b8:	bl	c6a0 <mpfr_set4@plt>
   2f4bc:	mov	w22, w0
   2f4c0:	mov	x0, x19
   2f4c4:	bl	c070 <mpfr_clear@plt>
   2f4c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2f4cc:	ldr	x1, [x0, #2576]
   2f4d0:	add	x0, x0, #0xa10
   2f4d4:	blr	x1
   2f4d8:	add	x2, x23, x0
   2f4dc:	ldr	w1, [sp, #100]
   2f4e0:	str	w1, [x23, x0]
   2f4e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2f4e8:	ldr	x3, [x0, #2512]
   2f4ec:	add	x0, x0, #0x9d0
   2f4f0:	blr	x3
   2f4f4:	ldr	x1, [x28, #16]
   2f4f8:	str	x24, [x23, x0]
   2f4fc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2f500:	ldr	x3, [x0, #2544]
   2f504:	add	x0, x0, #0x9f0
   2f508:	blr	x3
   2f50c:	str	x25, [x23, x0]
   2f510:	cmp	x25, x1
   2f514:	ccmp	x24, x1, #0x0, ge  // ge = tcont
   2f518:	b.le	2f550 <mpfr_asin@@Base+0x270>
   2f51c:	mov	w1, w22
   2f520:	mov	w2, w21
   2f524:	mov	x0, x28
   2f528:	bl	cb30 <mpfr_check_range@plt>
   2f52c:	mov	w22, w0
   2f530:	ldp	x23, x24, [sp, #48]
   2f534:	ldp	x25, x26, [sp, #64]
   2f538:	mov	w0, w22
   2f53c:	ldp	x19, x20, [sp, #16]
   2f540:	ldp	x21, x22, [sp, #32]
   2f544:	ldp	x27, x28, [sp, #80]
   2f548:	ldp	x29, x30, [sp], #144
   2f54c:	ret
   2f550:	cbz	w22, 2f530 <mpfr_asin@@Base+0x250>
   2f554:	ldr	w0, [sp, #100]
   2f558:	ldp	x25, x26, [sp, #64]
   2f55c:	orr	w23, w0, #0x8
   2f560:	str	w23, [x2]
   2f564:	mov	w0, w22
   2f568:	ldp	x19, x20, [sp, #16]
   2f56c:	ldp	x21, x22, [sp, #32]
   2f570:	ldp	x23, x24, [sp, #48]
   2f574:	ldp	x27, x28, [sp, #80]
   2f578:	ldp	x29, x30, [sp], #144
   2f57c:	ret
   2f580:	ldr	x1, [sp, #104]
   2f584:	mov	x0, #0xfffffffffffffeff    	// #-257
   2f588:	movk	x0, #0x7fff, lsl #48
   2f58c:	sub	x0, x0, x27
   2f590:	cmp	x0, x1
   2f594:	b.lt	2f6f8 <mpfr_asin@@Base+0x418>  // b.tstop
   2f598:	add	x27, x27, x1
   2f59c:	add	x0, x27, x27, lsr #63
   2f5a0:	asr	x0, x0, #1
   2f5a4:	str	x0, [sp, #104]
   2f5a8:	b	2f40c <mpfr_asin@@Base+0x12c>
   2f5ac:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2f5b0:	add	x2, x2, x0
   2f5b4:	cmp	x2, #0x1
   2f5b8:	b.ls	2f68c <mpfr_asin@@Base+0x3ac>  // b.plast
   2f5bc:	ldr	w1, [x1, #8]
   2f5c0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2f5c4:	mov	w22, #0x0                   	// #0
   2f5c8:	str	w1, [x28, #8]
   2f5cc:	str	x0, [x28, #16]
   2f5d0:	b	2f538 <mpfr_asin@@Base+0x258>
   2f5d4:	mov	x0, x19
   2f5d8:	str	x3, [sp, #104]
   2f5dc:	bl	c070 <mpfr_clear@plt>
   2f5e0:	cbnz	w22, 2f6c4 <mpfr_asin@@Base+0x3e4>
   2f5e4:	ldr	w0, [x20, #8]
   2f5e8:	cmp	w0, #0x0
   2f5ec:	b.gt	2f664 <mpfr_asin@@Base+0x384>
   2f5f0:	cmp	w21, #0x2
   2f5f4:	mov	w2, #0x3                   	// #3
   2f5f8:	b.eq	2f608 <mpfr_asin@@Base+0x328>  // b.none
   2f5fc:	cmp	w21, w2
   2f600:	mov	w2, #0x2                   	// #2
   2f604:	csel	w2, w21, w2, ne  // ne = any
   2f608:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2f60c:	ldr	x1, [x0, #2624]
   2f610:	add	x0, x0, #0xa40
   2f614:	blr	x1
   2f618:	add	x1, x23, x0
   2f61c:	mov	x0, x28
   2f620:	bl	c380 <mpfr_cache@plt>
   2f624:	ldr	w1, [x28, #8]
   2f628:	neg	w22, w0
   2f62c:	neg	w1, w1
   2f630:	str	w1, [x28, #8]
   2f634:	mov	w3, w21
   2f638:	mov	x1, x28
   2f63c:	mov	x0, x28
   2f640:	mov	x2, #0x1                   	// #1
   2f644:	bl	c8f0 <mpfr_div_2ui@plt>
   2f648:	b	2f4c8 <mpfr_asin@@Base+0x1e8>
   2f64c:	mov	w4, w21
   2f650:	mov	w3, #0x1                   	// #1
   2f654:	bl	c540 <mpfr_round_near_x@plt>
   2f658:	mov	w22, w0
   2f65c:	cbz	w0, 2f330 <mpfr_asin@@Base+0x50>
   2f660:	b	2f538 <mpfr_asin@@Base+0x258>
   2f664:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2f668:	ldr	x1, [x0, #2624]
   2f66c:	add	x0, x0, #0xa40
   2f670:	blr	x1
   2f674:	mov	w2, w21
   2f678:	add	x1, x23, x0
   2f67c:	mov	x0, x28
   2f680:	bl	c380 <mpfr_cache@plt>
   2f684:	mov	w22, w0
   2f688:	b	2f634 <mpfr_asin@@Base+0x354>
   2f68c:	mrs	x1, tpidr_el0
   2f690:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   2f694:	ldr	x2, [x0, #2576]
   2f698:	add	x0, x0, #0xa10
   2f69c:	blr	x2
   2f6a0:	add	x0, x1, x0
   2f6a4:	mov	x1, #0x2                   	// #2
   2f6a8:	movk	x1, #0x8000, lsl #48
   2f6ac:	str	x1, [x28, #16]
   2f6b0:	mov	w22, #0x0                   	// #0
   2f6b4:	ldr	w1, [x0]
   2f6b8:	orr	w1, w1, #0x4
   2f6bc:	str	w1, [x0]
   2f6c0:	b	2f538 <mpfr_asin@@Base+0x258>
   2f6c4:	ldr	x3, [sp, #104]
   2f6c8:	mov	w22, #0x0                   	// #0
   2f6cc:	ldr	w0, [sp, #100]
   2f6d0:	str	x24, [x26]
   2f6d4:	orr	w23, w0, #0x4
   2f6d8:	mov	x0, #0x2                   	// #2
   2f6dc:	movk	x0, #0x8000, lsl #48
   2f6e0:	str	w23, [x3]
   2f6e4:	ldp	x23, x24, [sp, #48]
   2f6e8:	str	x25, [x27]
   2f6ec:	ldp	x25, x26, [sp, #64]
   2f6f0:	str	x0, [x28, #16]
   2f6f4:	b	2f538 <mpfr_asin@@Base+0x258>
   2f6f8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   2f6fc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   2f700:	add	x2, x2, #0xf80
   2f704:	add	x0, x0, #0x140
   2f708:	mov	w1, #0x73                  	// #115
   2f70c:	bl	cb40 <mpfr_assert_fail@plt>
   2f710:	stp	x29, x30, [sp, #-160]!
   2f714:	mov	x29, sp
   2f718:	stp	x19, x20, [sp, #16]
   2f71c:	mov	x19, x3
   2f720:	sub	x3, x4, x3
   2f724:	stp	x21, x22, [sp, #32]
   2f728:	mov	x20, x2
   2f72c:	mov	x21, x1
   2f730:	stp	x23, x24, [sp, #48]
   2f734:	cmp	x3, #0x1
   2f738:	mov	x24, x5
   2f73c:	mov	x22, x0
   2f740:	b.ne	2f7c8 <mpfr_asin@@Base+0x4e8>  // b.any
   2f744:	cbz	x19, 2f7b0 <mpfr_asin@@Base+0x4d0>
   2f748:	lsl	x1, x19, #1
   2f74c:	sub	x1, x1, #0x1
   2f750:	bl	bcb0 <__gmpz_set_ui@plt>
   2f754:	mov	x2, #0x3                   	// #3
   2f758:	mov	x1, x22
   2f75c:	mov	x0, x22
   2f760:	bl	c330 <__gmpz_pow_ui@plt>
   2f764:	lsl	x1, x19, #5
   2f768:	mov	x0, x21
   2f76c:	bl	bcb0 <__gmpz_set_ui@plt>
   2f770:	mov	x2, x24
   2f774:	mov	x1, x21
   2f778:	mov	x0, x21
   2f77c:	bl	c100 <__gmpz_mul_ui@plt>
   2f780:	mov	x2, x24
   2f784:	mov	x1, x21
   2f788:	mov	x0, x21
   2f78c:	bl	c100 <__gmpz_mul_ui@plt>
   2f790:	mov	x1, x22
   2f794:	mov	x0, x20
   2f798:	bl	bfa0 <__gmpz_set@plt>
   2f79c:	ldp	x19, x20, [sp, #16]
   2f7a0:	ldp	x21, x22, [sp, #32]
   2f7a4:	ldp	x23, x24, [sp, #48]
   2f7a8:	ldp	x29, x30, [sp], #160
   2f7ac:	ret
   2f7b0:	mov	x1, x3
   2f7b4:	bl	bcb0 <__gmpz_set_ui@plt>
   2f7b8:	lsl	x1, x24, #2
   2f7bc:	mov	x0, x21
   2f7c0:	bl	bcb0 <__gmpz_set_ui@plt>
   2f7c4:	b	2f790 <mpfr_asin@@Base+0x4b0>
   2f7c8:	stp	x25, x26, [sp, #64]
   2f7cc:	add	x25, sp, #0x70
   2f7d0:	mov	x23, x4
   2f7d4:	mov	x0, x25
   2f7d8:	stp	x27, x28, [sp, #80]
   2f7dc:	add	x28, x4, x19
   2f7e0:	add	x27, sp, #0x80
   2f7e4:	str	w6, [sp, #108]
   2f7e8:	bl	bf90 <mpfr_mpz_init@plt>
   2f7ec:	add	x26, sp, #0x90
   2f7f0:	mov	x0, x27
   2f7f4:	bl	bf90 <mpfr_mpz_init@plt>
   2f7f8:	lsr	x28, x28, #1
   2f7fc:	mov	x0, x26
   2f800:	bl	bf90 <mpfr_mpz_init@plt>
   2f804:	mov	x3, x19
   2f808:	mov	x4, x28
   2f80c:	mov	x5, x24
   2f810:	mov	x2, x20
   2f814:	mov	x1, x21
   2f818:	mov	x0, x22
   2f81c:	mov	w6, #0x1                   	// #1
   2f820:	bl	2f710 <mpfr_asin@@Base+0x430>
   2f824:	mov	x3, x28
   2f828:	mov	x5, x24
   2f82c:	mov	x4, x23
   2f830:	mov	w6, #0x1                   	// #1
   2f834:	mov	x2, x26
   2f838:	mov	x1, x27
   2f83c:	mov	x0, x25
   2f840:	bl	2f710 <mpfr_asin@@Base+0x430>
   2f844:	mov	x2, x27
   2f848:	mov	x1, x20
   2f84c:	mov	x0, x20
   2f850:	bl	bff0 <__gmpz_mul@plt>
   2f854:	mov	x2, x22
   2f858:	mov	x1, x26
   2f85c:	mov	x0, x26
   2f860:	bl	bff0 <__gmpz_mul@plt>
   2f864:	mov	x2, x26
   2f868:	mov	x1, x20
   2f86c:	mov	x0, x20
   2f870:	bl	c9c0 <__gmpz_add@plt>
   2f874:	ldr	w7, [sp, #108]
   2f878:	cbnz	w7, 2f8c0 <mpfr_asin@@Base+0x5e0>
   2f87c:	mov	x2, x27
   2f880:	mov	x1, x21
   2f884:	mov	x0, x21
   2f888:	bl	bff0 <__gmpz_mul@plt>
   2f88c:	mov	x0, x25
   2f890:	bl	c170 <mpfr_mpz_clear@plt>
   2f894:	mov	x0, x27
   2f898:	bl	c170 <mpfr_mpz_clear@plt>
   2f89c:	mov	x0, x26
   2f8a0:	bl	c170 <mpfr_mpz_clear@plt>
   2f8a4:	ldp	x19, x20, [sp, #16]
   2f8a8:	ldp	x21, x22, [sp, #32]
   2f8ac:	ldp	x23, x24, [sp, #48]
   2f8b0:	ldp	x25, x26, [sp, #64]
   2f8b4:	ldp	x27, x28, [sp, #80]
   2f8b8:	ldp	x29, x30, [sp], #160
   2f8bc:	ret
   2f8c0:	mov	x2, x25
   2f8c4:	mov	x1, x22
   2f8c8:	mov	x0, x22
   2f8cc:	bl	bff0 <__gmpz_mul@plt>
   2f8d0:	b	2f87c <mpfr_asin@@Base+0x59c>
   2f8d4:	nop
   2f8d8:	stp	x29, x30, [sp, #-416]!
   2f8dc:	mov	x29, sp
   2f8e0:	stp	x19, x20, [sp, #16]
   2f8e4:	sub	x19, x2, x1
   2f8e8:	cmp	x19, #0x1
   2f8ec:	stp	x21, x22, [sp, #32]
   2f8f0:	mov	x21, x1
   2f8f4:	add	x1, x0, #0x50
   2f8f8:	str	x1, [sp, #96]
   2f8fc:	add	x1, x0, #0x20
   2f900:	stp	x23, x24, [sp, #48]
   2f904:	mov	x23, x3
   2f908:	stp	x27, x28, [sp, #80]
   2f90c:	mov	x28, x0
   2f910:	add	x27, x0, #0x10
   2f914:	str	x1, [sp, #112]
   2f918:	add	x1, x0, #0x40
   2f91c:	str	x1, [sp, #104]
   2f920:	b.eq	2fc40 <mpfr_asin@@Base+0x960>  // b.none
   2f924:	mov	x22, x2
   2f928:	add	x2, x2, x21
   2f92c:	add	x19, sp, #0xe0
   2f930:	stp	x25, x26, [sp, #64]
   2f934:	lsr	x2, x2, #1
   2f938:	add	x20, x19, #0x10
   2f93c:	mov	x0, x19
   2f940:	str	x2, [sp, #120]
   2f944:	add	x25, x19, #0x40
   2f948:	str	w4, [sp, #132]
   2f94c:	str	x20, [sp, #136]
   2f950:	bl	bf90 <mpfr_mpz_init@plt>
   2f954:	mov	x0, x20
   2f958:	add	x20, x19, #0x20
   2f95c:	str	x20, [sp, #144]
   2f960:	bl	bf90 <mpfr_mpz_init@plt>
   2f964:	add	x0, x19, #0x30
   2f968:	mov	x24, x0
   2f96c:	mov	x0, x20
   2f970:	str	x24, [sp, #160]
   2f974:	bl	bf90 <mpfr_mpz_init@plt>
   2f978:	mov	x0, x24
   2f97c:	bl	bf90 <mpfr_mpz_init@plt>
   2f980:	mov	x0, x25
   2f984:	bl	bf90 <mpfr_mpz_init@plt>
   2f988:	add	x20, sp, #0x140
   2f98c:	add	x0, x19, #0x50
   2f990:	bl	bf90 <mpfr_mpz_init@plt>
   2f994:	add	x24, x20, #0x10
   2f998:	mov	x0, x20
   2f99c:	bl	bf90 <mpfr_mpz_init@plt>
   2f9a0:	add	x0, x20, #0x20
   2f9a4:	mov	x26, x0
   2f9a8:	mov	x0, x24
   2f9ac:	str	x26, [sp, #152]
   2f9b0:	bl	bf90 <mpfr_mpz_init@plt>
   2f9b4:	add	x1, x20, #0x30
   2f9b8:	mov	x0, x26
   2f9bc:	str	x1, [sp, #168]
   2f9c0:	add	x26, x20, #0x40
   2f9c4:	bl	bf90 <mpfr_mpz_init@plt>
   2f9c8:	add	x0, x20, #0x30
   2f9cc:	bl	bf90 <mpfr_mpz_init@plt>
   2f9d0:	mov	x0, x26
   2f9d4:	bl	bf90 <mpfr_mpz_init@plt>
   2f9d8:	add	x0, x20, #0x50
   2f9dc:	bl	bf90 <mpfr_mpz_init@plt>
   2f9e0:	ldr	x2, [sp, #120]
   2f9e4:	mov	x1, x21
   2f9e8:	mov	x3, x23
   2f9ec:	mov	x0, x19
   2f9f0:	mov	w4, #0x1                   	// #1
   2f9f4:	add	x21, sp, #0xd0
   2f9f8:	bl	2f8d8 <mpfr_asin@@Base+0x5f8>
   2f9fc:	ldr	x2, [sp, #120]
   2fa00:	mov	x3, x23
   2fa04:	mov	w4, #0x1                   	// #1
   2fa08:	mov	x0, x20
   2fa0c:	mov	x1, x2
   2fa10:	mov	x2, x22
   2fa14:	add	x23, sp, #0xb0
   2fa18:	bl	2f8d8 <mpfr_asin@@Base+0x5f8>
   2fa1c:	mov	x0, x23
   2fa20:	add	x22, sp, #0xc0
   2fa24:	bl	bf90 <mpfr_mpz_init@plt>
   2fa28:	mov	x0, x22
   2fa2c:	bl	bf90 <mpfr_mpz_init@plt>
   2fa30:	mov	x0, x21
   2fa34:	bl	bf90 <mpfr_mpz_init@plt>
   2fa38:	ldr	w6, [sp, #132]
   2fa3c:	cbnz	w6, 2fba8 <mpfr_asin@@Base+0x8c8>
   2fa40:	ldr	x1, [sp, #136]
   2fa44:	mov	x0, x27
   2fa48:	mov	x2, x24
   2fa4c:	bl	bff0 <__gmpz_mul@plt>
   2fa50:	ldr	x0, [sp, #104]
   2fa54:	mov	x2, x26
   2fa58:	mov	x1, x25
   2fa5c:	bl	bff0 <__gmpz_mul@plt>
   2fa60:	ldr	x2, [sp, #152]
   2fa64:	mov	x1, x19
   2fa68:	mov	x0, x23
   2fa6c:	bl	bff0 <__gmpz_mul@plt>
   2fa70:	ldr	x2, [sp, #144]
   2fa74:	mov	x1, x24
   2fa78:	mov	x0, x21
   2fa7c:	bl	bff0 <__gmpz_mul@plt>
   2fa80:	ldr	x0, [sp, #112]
   2fa84:	mov	x2, x21
   2fa88:	mov	x1, x23
   2fa8c:	bl	c9c0 <__gmpz_add@plt>
   2fa90:	add	x24, x20, #0x50
   2fa94:	add	x28, x19, #0x40
   2fa98:	mov	x1, x19
   2fa9c:	mov	x2, x24
   2faa0:	mov	x0, x22
   2faa4:	bl	bff0 <__gmpz_mul@plt>
   2faa8:	mov	x2, x28
   2faac:	mov	x1, x22
   2fab0:	mov	x0, x22
   2fab4:	bl	bff0 <__gmpz_mul@plt>
   2fab8:	add	x3, x19, #0x30
   2fabc:	add	x27, x19, #0x50
   2fac0:	add	x26, x20, #0x10
   2fac4:	mov	x2, x27
   2fac8:	mov	x1, x26
   2facc:	mov	x0, x21
   2fad0:	str	x3, [sp, #104]
   2fad4:	bl	bff0 <__gmpz_mul@plt>
   2fad8:	ldr	x3, [sp, #104]
   2fadc:	add	x25, x20, #0x40
   2fae0:	mov	x1, x23
   2fae4:	mov	x0, x21
   2fae8:	mov	x2, x3
   2faec:	bl	c290 <__gmpz_addmul@plt>
   2faf0:	mov	x2, x25
   2faf4:	mov	x1, x21
   2faf8:	mov	x0, x21
   2fafc:	bl	bff0 <__gmpz_mul@plt>
   2fb00:	ldr	x0, [sp, #96]
   2fb04:	mov	x2, x21
   2fb08:	mov	x1, x22
   2fb0c:	bl	c9c0 <__gmpz_add@plt>
   2fb10:	mov	x0, x19
   2fb14:	bl	c170 <mpfr_mpz_clear@plt>
   2fb18:	add	x0, x19, #0x10
   2fb1c:	bl	c170 <mpfr_mpz_clear@plt>
   2fb20:	add	x0, x19, #0x20
   2fb24:	bl	c170 <mpfr_mpz_clear@plt>
   2fb28:	ldr	x3, [sp, #104]
   2fb2c:	mov	x0, x3
   2fb30:	bl	c170 <mpfr_mpz_clear@plt>
   2fb34:	mov	x0, x28
   2fb38:	bl	c170 <mpfr_mpz_clear@plt>
   2fb3c:	mov	x0, x27
   2fb40:	bl	c170 <mpfr_mpz_clear@plt>
   2fb44:	mov	x0, x20
   2fb48:	bl	c170 <mpfr_mpz_clear@plt>
   2fb4c:	mov	x0, x26
   2fb50:	bl	c170 <mpfr_mpz_clear@plt>
   2fb54:	add	x0, x20, #0x20
   2fb58:	bl	c170 <mpfr_mpz_clear@plt>
   2fb5c:	add	x0, x20, #0x30
   2fb60:	bl	c170 <mpfr_mpz_clear@plt>
   2fb64:	mov	x0, x25
   2fb68:	bl	c170 <mpfr_mpz_clear@plt>
   2fb6c:	mov	x0, x24
   2fb70:	bl	c170 <mpfr_mpz_clear@plt>
   2fb74:	mov	x0, x23
   2fb78:	bl	c170 <mpfr_mpz_clear@plt>
   2fb7c:	mov	x0, x22
   2fb80:	bl	c170 <mpfr_mpz_clear@plt>
   2fb84:	mov	x0, x21
   2fb88:	bl	c170 <mpfr_mpz_clear@plt>
   2fb8c:	ldp	x19, x20, [sp, #16]
   2fb90:	ldp	x21, x22, [sp, #32]
   2fb94:	ldp	x23, x24, [sp, #48]
   2fb98:	ldp	x25, x26, [sp, #64]
   2fb9c:	ldp	x27, x28, [sp, #80]
   2fba0:	ldp	x29, x30, [sp], #416
   2fba4:	ret
   2fba8:	add	x3, x28, #0x30
   2fbac:	mov	x2, x20
   2fbb0:	mov	x1, x19
   2fbb4:	mov	x0, x28
   2fbb8:	str	x3, [sp, #120]
   2fbbc:	bl	bff0 <__gmpz_mul@plt>
   2fbc0:	ldr	x1, [sp, #136]
   2fbc4:	mov	x2, x24
   2fbc8:	mov	x0, x27
   2fbcc:	bl	bff0 <__gmpz_mul@plt>
   2fbd0:	ldr	x0, [sp, #104]
   2fbd4:	mov	x2, x26
   2fbd8:	mov	x1, x25
   2fbdc:	bl	bff0 <__gmpz_mul@plt>
   2fbe0:	ldr	x2, [sp, #152]
   2fbe4:	mov	x1, x19
   2fbe8:	mov	x0, x23
   2fbec:	bl	bff0 <__gmpz_mul@plt>
   2fbf0:	ldr	x2, [sp, #144]
   2fbf4:	mov	x1, x24
   2fbf8:	mov	x0, x21
   2fbfc:	bl	bff0 <__gmpz_mul@plt>
   2fc00:	ldr	x0, [sp, #112]
   2fc04:	mov	x2, x21
   2fc08:	mov	x1, x23
   2fc0c:	bl	c9c0 <__gmpz_add@plt>
   2fc10:	ldr	x3, [sp, #120]
   2fc14:	mov	x2, x26
   2fc18:	ldr	x1, [sp, #160]
   2fc1c:	mov	x0, x3
   2fc20:	str	x3, [sp, #104]
   2fc24:	bl	bff0 <__gmpz_mul@plt>
   2fc28:	ldr	x3, [sp, #104]
   2fc2c:	mov	x2, x25
   2fc30:	add	x1, x20, #0x30
   2fc34:	mov	x0, x3
   2fc38:	bl	c290 <__gmpz_addmul@plt>
   2fc3c:	b	2fa90 <mpfr_asin@@Base+0x7b0>
   2fc40:	mov	x1, x3
   2fc44:	bl	bcb0 <__gmpz_set_ui@plt>
   2fc48:	mov	x2, x28
   2fc4c:	mov	x1, x28
   2fc50:	mov	x0, x28
   2fc54:	add	x21, x21, #0x1
   2fc58:	bl	bff0 <__gmpz_mul@plt>
   2fc5c:	mov	x1, x21
   2fc60:	mov	x0, x27
   2fc64:	bl	bcb0 <__gmpz_set_ui@plt>
   2fc68:	mov	x2, x27
   2fc6c:	mov	x1, x27
   2fc70:	mov	x0, x27
   2fc74:	bl	bff0 <__gmpz_mul@plt>
   2fc78:	mov	x1, x19
   2fc7c:	add	x0, x28, #0x30
   2fc80:	bl	bcb0 <__gmpz_set_ui@plt>
   2fc84:	mov	x1, x21
   2fc88:	add	x0, x28, #0x40
   2fc8c:	bl	bcb0 <__gmpz_set_ui@plt>
   2fc90:	mov	x1, x28
   2fc94:	add	x0, x28, #0x20
   2fc98:	bl	bfa0 <__gmpz_set@plt>
   2fc9c:	ldr	x0, [sp, #96]
   2fca0:	mov	x1, x28
   2fca4:	bl	bfa0 <__gmpz_set@plt>
   2fca8:	ldp	x19, x20, [sp, #16]
   2fcac:	ldp	x21, x22, [sp, #32]
   2fcb0:	ldp	x23, x24, [sp, #48]
   2fcb4:	ldp	x27, x28, [sp, #80]
   2fcb8:	ldp	x29, x30, [sp], #416
   2fcbc:	ret

000000000002fcc0 <mpfr_const_euler_internal@@Base>:
   2fcc0:	stp	x29, x30, [sp, #-320]!
   2fcc4:	mov	x2, x0
   2fcc8:	mov	x29, sp
   2fccc:	str	w1, [sp, #100]
   2fcd0:	ldr	x1, [x2]
   2fcd4:	stp	x19, x20, [sp, #16]
   2fcd8:	add	x19, sp, #0xe0
   2fcdc:	add	x20, x1, #0x18
   2fce0:	str	x1, [sp, #120]
   2fce4:	mov	x1, x20
   2fce8:	str	x2, [sp, #128]
   2fcec:	mov	x2, #0x40                  	// #64
   2fcf0:	stp	x25, x26, [sp, #64]
   2fcf4:	add	x26, sp, #0xc0
   2fcf8:	mov	x0, x26
   2fcfc:	stp	x21, x22, [sp, #32]
   2fd00:	add	x25, sp, #0x90
   2fd04:	stp	x23, x24, [sp, #48]
   2fd08:	add	x21, sp, #0xa0
   2fd0c:	add	x22, sp, #0xb0
   2fd10:	stp	x27, x28, [sp, #80]
   2fd14:	str	x2, [sp, #136]
   2fd18:	bl	ca80 <mpfr_init2@plt>
   2fd1c:	mov	x0, x19
   2fd20:	bl	bf90 <mpfr_mpz_init@plt>
   2fd24:	add	x0, x19, #0x10
   2fd28:	bl	bf90 <mpfr_mpz_init@plt>
   2fd2c:	add	x0, x19, #0x20
   2fd30:	bl	bf90 <mpfr_mpz_init@plt>
   2fd34:	add	x0, x19, #0x30
   2fd38:	bl	bf90 <mpfr_mpz_init@plt>
   2fd3c:	add	x0, x19, #0x40
   2fd40:	bl	bf90 <mpfr_mpz_init@plt>
   2fd44:	add	x0, x19, #0x50
   2fd48:	bl	bf90 <mpfr_mpz_init@plt>
   2fd4c:	mov	x0, x25
   2fd50:	bl	bf90 <mpfr_mpz_init@plt>
   2fd54:	mov	x0, x21
   2fd58:	bl	bf90 <mpfr_mpz_init@plt>
   2fd5c:	mov	x0, x22
   2fd60:	bl	bf90 <mpfr_mpz_init@plt>
   2fd64:	add	x1, x20, #0x5
   2fd68:	mov	x0, x25
   2fd6c:	bl	bcb0 <__gmpz_set_ui@plt>
   2fd70:	mov	x2, #0x3882                	// #14466
   2fd74:	mov	x1, x25
   2fd78:	mov	x0, x25
   2fd7c:	movk	x2, #0xd, lsl #16
   2fd80:	bl	c100 <__gmpz_mul_ui@plt>
   2fd84:	mov	x2, #0x9680                	// #38528
   2fd88:	mov	x1, x25
   2fd8c:	mov	x0, x25
   2fd90:	movk	x2, #0x98, lsl #16
   2fd94:	bl	beb0 <__gmpz_cdiv_q_ui@plt>
   2fd98:	ldr	x1, [sp, #152]
   2fd9c:	ldr	w0, [sp, #148]
   2fda0:	ldr	x27, [x1]
   2fda4:	lsl	x6, x27, #1
   2fda8:	cbnz	w0, 2fdb4 <mpfr_const_euler_internal@@Base+0xf4>
   2fdac:	mov	x6, #0x0                   	// #0
   2fdb0:	mov	x27, #0x0                   	// #0
   2fdb4:	mov	x1, x27
   2fdb8:	mov	x0, x25
   2fdbc:	str	x6, [sp, #112]
   2fdc0:	bl	bcb0 <__gmpz_set_ui@plt>
   2fdc4:	mov	x2, #0xd882                	// #55426
   2fdc8:	mov	x1, x25
   2fdcc:	mov	x0, x25
   2fdd0:	movk	x2, #0x4b, lsl #16
   2fdd4:	bl	c100 <__gmpz_mul_ui@plt>
   2fdd8:	add	x24, x19, #0x20
   2fddc:	mov	x2, #0x4240                	// #16960
   2fde0:	mov	x1, x25
   2fde4:	movk	x2, #0xf, lsl #16
   2fde8:	mov	x0, x25
   2fdec:	bl	beb0 <__gmpz_cdiv_q_ui@plt>
   2fdf0:	add	x28, x19, #0x40
   2fdf4:	add	x12, x19, #0x10
   2fdf8:	mov	x1, x25
   2fdfc:	mov	x0, x25
   2fe00:	mov	x2, #0x1                   	// #1
   2fe04:	str	x12, [sp, #104]
   2fe08:	add	x23, x19, #0x50
   2fe0c:	bl	c360 <__gmpz_add_ui@plt>
   2fe10:	ldr	x2, [sp, #152]
   2fe14:	mov	x3, x27
   2fe18:	ldr	w9, [sp, #148]
   2fe1c:	mov	w4, #0x0                   	// #0
   2fe20:	mov	x0, x19
   2fe24:	mov	x1, #0x0                   	// #0
   2fe28:	cmp	w9, #0x0
   2fe2c:	ldr	x2, [x2]
   2fe30:	csel	x2, x2, xzr, ne  // ne = any
   2fe34:	bl	2f8d8 <mpfr_asin@@Base+0x5f8>
   2fe38:	ldr	x12, [sp, #104]
   2fe3c:	mov	x1, x24
   2fe40:	mov	x0, x24
   2fe44:	mov	x2, x12
   2fe48:	bl	c9c0 <__gmpz_add@plt>
   2fe4c:	mov	x1, x24
   2fe50:	mov	x2, x28
   2fe54:	mov	x0, x25
   2fe58:	bl	bff0 <__gmpz_mul@plt>
   2fe5c:	mov	x1, x23
   2fe60:	mov	x2, x20
   2fe64:	mov	x0, x21
   2fe68:	bl	c200 <__gmpz_mul_2exp@plt>
   2fe6c:	mov	x2, x25
   2fe70:	mov	x1, x21
   2fe74:	mov	x0, x22
   2fe78:	bl	bb30 <__gmpz_tdiv_q@plt>
   2fe7c:	ldr	x6, [sp, #112]
   2fe80:	mov	x5, x27
   2fe84:	mov	x3, #0x0                   	// #0
   2fe88:	mov	x2, x23
   2fe8c:	mov	x4, x6
   2fe90:	mov	x1, x28
   2fe94:	mov	w6, #0x0                   	// #0
   2fe98:	add	x0, x19, #0x30
   2fe9c:	bl	2f710 <mpfr_asin@@Base+0x430>
   2fea0:	ldr	x12, [sp, #104]
   2fea4:	mov	x0, x25
   2fea8:	mov	x2, x12
   2feac:	mov	x1, x12
   2feb0:	bl	bff0 <__gmpz_mul@plt>
   2feb4:	mov	x2, x23
   2feb8:	mov	x1, x25
   2febc:	mov	x0, x25
   2fec0:	bl	bff0 <__gmpz_mul@plt>
   2fec4:	mov	x2, x24
   2fec8:	mov	x1, x24
   2fecc:	mov	x0, x21
   2fed0:	bl	bff0 <__gmpz_mul@plt>
   2fed4:	mov	x2, x28
   2fed8:	mov	x1, x21
   2fedc:	mov	x0, x21
   2fee0:	bl	bff0 <__gmpz_mul@plt>
   2fee4:	mov	x2, x20
   2fee8:	mov	x1, x25
   2feec:	mov	x0, x25
   2fef0:	bl	c200 <__gmpz_mul_2exp@plt>
   2fef4:	mov	x2, x21
   2fef8:	mov	x1, x25
   2fefc:	mov	x0, x25
   2ff00:	bl	bb30 <__gmpz_tdiv_q@plt>
   2ff04:	mov	x2, x25
   2ff08:	mov	x1, x22
   2ff0c:	mov	x0, x22
   2ff10:	bl	bde0 <__gmpz_sub@plt>
   2ff14:	cmp	x27, #0x1
   2ff18:	b.eq	30090 <mpfr_const_euler_internal@@Base+0x3d0>  // b.none
   2ff1c:	b.ls	30098 <mpfr_const_euler_internal@@Base+0x3d8>  // b.plast
   2ff20:	sub	x0, x27, #0x1
   2ff24:	mov	w1, #0x40                  	// #64
   2ff28:	clz	x0, x0
   2ff2c:	sub	w1, w1, w0
   2ff30:	add	x1, x20, w1, sxtw
   2ff34:	mov	x0, x26
   2ff38:	bl	bed0 <mpfr_set_prec@plt>
   2ff3c:	mov	w3, #0x1                   	// #1
   2ff40:	mov	x1, x27
   2ff44:	mov	x2, #0x0                   	// #0
   2ff48:	mov	x0, x26
   2ff4c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2ff50:	mov	x1, x26
   2ff54:	mov	w2, #0x1                   	// #1
   2ff58:	mov	x0, x26
   2ff5c:	bl	c090 <mpfr_log@plt>
   2ff60:	mov	x2, x20
   2ff64:	mov	x1, x26
   2ff68:	mov	w3, #0x1                   	// #1
   2ff6c:	mov	x0, x26
   2ff70:	bl	c2c0 <mpfr_mul_2ui@plt>
   2ff74:	mov	x2, x26
   2ff78:	mov	x1, x22
   2ff7c:	mov	w3, #0x1                   	// #1
   2ff80:	mov	x0, x26
   2ff84:	bl	c030 <mpfr_z_sub@plt>
   2ff88:	mov	x1, x26
   2ff8c:	mov	x2, x20
   2ff90:	mov	x0, x26
   2ff94:	mov	w3, #0x1                   	// #1
   2ff98:	bl	c8f0 <mpfr_div_2ui@plt>
   2ff9c:	ldr	x1, [sp, #208]
   2ffa0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2ffa4:	cmp	x1, x0
   2ffa8:	b.le	30064 <mpfr_const_euler_internal@@Base+0x3a4>
   2ffac:	ldr	w0, [sp, #100]
   2ffb0:	ldr	x1, [sp, #192]
   2ffb4:	cmp	w0, #0x0
   2ffb8:	ldr	x0, [sp, #216]
   2ffbc:	sub	x1, x1, #0x1
   2ffc0:	ldr	x2, [sp, #120]
   2ffc4:	asr	x1, x1, #6
   2ffc8:	add	x1, x1, #0x1
   2ffcc:	cinc	x3, x2, eq  // eq = none
   2ffd0:	sub	x2, x20, #0x3
   2ffd4:	bl	c370 <mpfr_round_p@plt>
   2ffd8:	cbz	w0, 30064 <mpfr_const_euler_internal@@Base+0x3a4>
   2ffdc:	ldr	w2, [sp, #100]
   2ffe0:	mov	x1, x26
   2ffe4:	ldr	w3, [sp, #200]
   2ffe8:	ldr	x0, [sp, #128]
   2ffec:	bl	c6a0 <mpfr_set4@plt>
   2fff0:	mov	w20, w0
   2fff4:	mov	x0, x26
   2fff8:	bl	c070 <mpfr_clear@plt>
   2fffc:	mov	x0, x25
   30000:	bl	c170 <mpfr_mpz_clear@plt>
   30004:	mov	x0, x21
   30008:	bl	c170 <mpfr_mpz_clear@plt>
   3000c:	mov	x0, x22
   30010:	bl	c170 <mpfr_mpz_clear@plt>
   30014:	mov	x0, x19
   30018:	bl	c170 <mpfr_mpz_clear@plt>
   3001c:	add	x0, x19, #0x10
   30020:	bl	c170 <mpfr_mpz_clear@plt>
   30024:	add	x0, x19, #0x20
   30028:	bl	c170 <mpfr_mpz_clear@plt>
   3002c:	add	x0, x19, #0x30
   30030:	bl	c170 <mpfr_mpz_clear@plt>
   30034:	add	x0, x19, #0x40
   30038:	bl	c170 <mpfr_mpz_clear@plt>
   3003c:	add	x0, x19, #0x50
   30040:	bl	c170 <mpfr_mpz_clear@plt>
   30044:	mov	w0, w20
   30048:	ldp	x19, x20, [sp, #16]
   3004c:	ldp	x21, x22, [sp, #32]
   30050:	ldp	x23, x24, [sp, #48]
   30054:	ldp	x25, x26, [sp, #64]
   30058:	ldp	x27, x28, [sp, #80]
   3005c:	ldp	x29, x30, [sp], #320
   30060:	ret
   30064:	ldr	x1, [sp, #136]
   30068:	mov	x0, #0xfffffffffffffeff    	// #-257
   3006c:	movk	x0, #0x7fff, lsl #48
   30070:	sub	x0, x0, x20
   30074:	cmp	x0, x1
   30078:	b.lt	300b0 <mpfr_const_euler_internal@@Base+0x3f0>  // b.tstop
   3007c:	add	x20, x20, x1
   30080:	add	x0, x20, x20, lsr #63
   30084:	asr	x0, x0, #1
   30088:	str	x0, [sp, #136]
   3008c:	b	2fd64 <mpfr_const_euler_internal@@Base+0xa4>
   30090:	mov	x1, x20
   30094:	b	2ff34 <mpfr_const_euler_internal@@Base+0x274>
   30098:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3009c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   300a0:	add	x2, x2, #0x148
   300a4:	add	x0, x0, #0x150
   300a8:	mov	w1, #0xf9                  	// #249
   300ac:	bl	cb40 <mpfr_assert_fail@plt>
   300b0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   300b4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   300b8:	add	x2, x2, #0x160
   300bc:	add	x0, x0, #0x150
   300c0:	mov	w1, #0x107                 	// #263
   300c4:	bl	cb40 <mpfr_assert_fail@plt>

00000000000300c8 <mpfr_const_euler@@Base>:
   300c8:	stp	x29, x30, [sp, #-16]!
   300cc:	mov	x4, x0
   300d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   300d4:	ldr	x2, [x0, #2608]
   300d8:	add	x0, x0, #0xa30
   300dc:	blr	x2
   300e0:	mov	x29, sp
   300e4:	ldp	x29, x30, [sp], #16
   300e8:	mrs	x3, tpidr_el0
   300ec:	mov	w2, w1
   300f0:	add	x1, x3, x0
   300f4:	mov	x0, x4
   300f8:	b	c380 <mpfr_cache@plt>
   300fc:	nop

0000000000030100 <mpfr_cos@@Base>:
   30100:	sub	sp, sp, #0x220
   30104:	mov	x3, x1
   30108:	stp	x29, x30, [sp]
   3010c:	mov	x29, sp
   30110:	str	w2, [sp, #184]
   30114:	ldr	x2, [x3, #16]
   30118:	stp	x19, x20, [sp, #16]
   3011c:	str	x0, [sp, #120]
   30120:	str	x1, [sp, #136]
   30124:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   30128:	str	x2, [sp, #152]
   3012c:	cmp	x2, x1
   30130:	b.le	30a1c <mpfr_cos@@Base+0x91c>
   30134:	mrs	x4, tpidr_el0
   30138:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3013c:	ldr	x1, [x0, #2576]
   30140:	add	x0, x0, #0xa10
   30144:	blr	x1
   30148:	stp	x21, x22, [sp, #32]
   3014c:	add	x22, x4, x0
   30150:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   30154:	ldr	w0, [x4, x0]
   30158:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3015c:	str	w0, [sp, #188]
   30160:	neg	x2, x2, lsl #1
   30164:	str	x4, [sp, #128]
   30168:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3016c:	ldr	x5, [x0, #2512]
   30170:	add	x0, x0, #0x9d0
   30174:	blr	x5
   30178:	add	x21, x4, x0
   3017c:	ldr	x0, [x4, x0]
   30180:	str	x0, [sp, #200]
   30184:	str	x3, [x21]
   30188:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3018c:	ldr	x5, [x0, #2544]
   30190:	add	x0, x0, #0x9f0
   30194:	blr	x5
   30198:	add	x20, x4, x0
   3019c:	ldr	x0, [x4, x0]
   301a0:	str	x0, [sp, #208]
   301a4:	ldr	x0, [sp, #120]
   301a8:	str	x1, [x20]
   301ac:	cmp	x2, #0x0
   301b0:	ldr	x0, [x0]
   301b4:	str	x0, [sp, #144]
   301b8:	b.le	301cc <mpfr_cos@@Base+0xcc>
   301bc:	add	x2, x2, #0x1
   301c0:	add	x0, x0, #0x1
   301c4:	cmp	x0, x2
   301c8:	b.cc	30940 <mpfr_cos@@Base+0x840>  // b.lo, b.ul, b.last
   301cc:	ldr	x1, [sp, #144]
   301d0:	mov	x0, #0x752f                	// #29999
   301d4:	cmp	x1, x0
   301d8:	b.gt	308b8 <mpfr_cos@@Base+0x7b8>
   301dc:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   301e0:	mov	x19, x1
   301e4:	movk	x0, #0x5556
   301e8:	stp	x23, x24, [sp, #48]
   301ec:	smulh	x0, x1, x0
   301f0:	stp	x25, x26, [sp, #64]
   301f4:	stp	x27, x28, [sp, #80]
   301f8:	sub	x0, x0, x1, asr #63
   301fc:	bl	bf20 <__gmpfr_isqrt@plt>
   30200:	str	x0, [sp, #176]
   30204:	cmp	x19, #0x1
   30208:	b.eq	30a64 <mpfr_cos@@Base+0x964>  // b.none
   3020c:	b.le	30b44 <mpfr_cos@@Base+0xa44>
   30210:	ldr	x1, [sp, #144]
   30214:	mov	w19, #0x40                  	// #64
   30218:	sub	x0, x1, #0x1
   3021c:	clz	x0, x0
   30220:	sub	w19, w19, w0
   30224:	lsl	w19, w19, #1
   30228:	add	x19, x1, w19, sxtw
   3022c:	ldr	x0, [sp, #176]
   30230:	add	x19, x19, x0, lsl #1
   30234:	ldr	x0, [sp, #152]
   30238:	add	x28, x19, #0x4
   3023c:	cmp	x0, #0x2
   30240:	b.gt	30788 <mpfr_cos@@Base+0x688>
   30244:	str	wzr, [sp, #116]
   30248:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3024c:	cmp	x28, x0
   30250:	b.ge	30b5c <mpfr_cos@@Base+0xa5c>  // b.tcont
   30254:	add	x20, x19, #0x42
   30258:	adds	x19, x19, #0x3
   3025c:	csel	x19, x20, x19, mi  // mi = first
   30260:	asr	x20, x19, #6
   30264:	add	x20, x20, #0x1
   30268:	lsl	x0, x20, #1
   3026c:	cmp	x0, #0x10
   30270:	b.gt	3097c <mpfr_cos@@Base+0x87c>
   30274:	add	x1, sp, #0x1a0
   30278:	stp	xzr, x1, [sp, #400]
   3027c:	mov	x0, x1
   30280:	add	x22, sp, #0xe0
   30284:	add	x23, sp, #0x100
   30288:	add	x19, sp, #0xf0
   3028c:	add	x21, sp, #0x130
   30290:	add	x26, sp, #0x110
   30294:	mov	w1, #0x1                   	// #1
   30298:	add	x20, x0, x20, lsl #3
   3029c:	mov	x2, #0x40                  	// #64
   302a0:	str	x2, [sp, #104]
   302a4:	str	xzr, [sp, #216]
   302a8:	str	x28, [sp, #272]
   302ac:	str	w1, [sp, #280]
   302b0:	stp	x0, x28, [sp, #296]
   302b4:	str	w1, [sp, #312]
   302b8:	str	x20, [sp, #328]
   302bc:	ldr	w0, [sp, #116]
   302c0:	cbz	w0, 303a8 <mpfr_cos@@Base+0x2a8>
   302c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   302c8:	ldr	x1, [x0, #2624]
   302cc:	add	x0, x0, #0xa40
   302d0:	blr	x1
   302d4:	add	x24, sp, #0x170
   302d8:	ldr	x1, [sp, #128]
   302dc:	mov	w2, #0x0                   	// #0
   302e0:	add	x20, sp, #0x150
   302e4:	add	x1, x1, x0
   302e8:	mov	x0, x24
   302ec:	bl	c380 <mpfr_cache@plt>
   302f0:	mov	x1, x24
   302f4:	mov	w3, #0x0                   	// #0
   302f8:	mov	x2, #0x1                   	// #1
   302fc:	mov	x0, x24
   30300:	bl	c2c0 <mpfr_mul_2ui@plt>
   30304:	ldr	x1, [sp, #136]
   30308:	mov	x2, x24
   3030c:	mov	x0, x20
   30310:	mov	w3, #0x0                   	// #0
   30314:	bl	cd10 <mpfr_remainder@plt>
   30318:	ldr	x1, [sp, #352]
   3031c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   30320:	cmp	x1, x0
   30324:	b.ne	30864 <mpfr_cos@@Base+0x764>  // b.any
   30328:	ldr	x1, [sp, #104]
   3032c:	mov	x0, #0xfffffffffffffeff    	// #-257
   30330:	movk	x0, #0x7fff, lsl #48
   30334:	sub	x0, x0, x28
   30338:	cmp	x0, x1
   3033c:	b.lt	309b0 <mpfr_cos@@Base+0x8b0>  // b.tstop
   30340:	add	x28, x28, x1
   30344:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   30348:	cmp	x28, x0
   3034c:	add	x0, x28, x28, lsr #63
   30350:	ldr	x1, [sp, #400]
   30354:	asr	x0, x0, #1
   30358:	str	x0, [sp, #104]
   3035c:	b.ge	30b5c <mpfr_cos@@Base+0xa5c>  // b.tcont
   30360:	sub	x20, x28, #0x1
   30364:	asr	x20, x20, #6
   30368:	add	x20, x20, #0x1
   3036c:	lsl	x2, x20, #4
   30370:	str	x2, [sp, #400]
   30374:	cbnz	x1, 30818 <mpfr_cos@@Base+0x718>
   30378:	mov	x0, x2
   3037c:	bl	ccf0 <mpfr_allocate_func@plt>
   30380:	str	x0, [sp, #408]
   30384:	add	x20, x0, x20, lsl #3
   30388:	stp	x0, x28, [sp, #296]
   3038c:	ldr	w0, [sp, #116]
   30390:	mov	w1, #0x1                   	// #1
   30394:	str	x28, [sp, #272]
   30398:	str	w1, [sp, #280]
   3039c:	str	w1, [sp, #312]
   303a0:	str	x20, [sp, #328]
   303a4:	cbnz	w0, 3087c <mpfr_cos@@Base+0x77c>
   303a8:	ldr	x1, [sp, #136]
   303ac:	mov	x0, x26
   303b0:	mov	w3, #0x2                   	// #2
   303b4:	mov	x2, x1
   303b8:	bl	bd50 <mpfr_mul@plt>
   303bc:	ldr	x1, [sp, #288]
   303c0:	ldr	x0, [sp, #176]
   303c4:	cmp	x1, #0x0
   303c8:	csel	x2, x1, xzr, ge  // ge = tcont
   303cc:	add	x27, x0, #0x1
   303d0:	mov	x0, x22
   303d4:	add	x27, x27, x2, asr #1
   303d8:	lsl	x2, x27, #1
   303dc:	str	x2, [sp, #192]
   303e0:	sub	x1, x1, x2
   303e4:	str	x1, [sp, #288]
   303e8:	bl	bf90 <mpfr_mpz_init@plt>
   303ec:	mov	x0, x23
   303f0:	bl	bf90 <mpfr_mpz_init@plt>
   303f4:	mov	x0, x19
   303f8:	bl	bf90 <mpfr_mpz_init@plt>
   303fc:	mov	x1, x26
   30400:	mov	x0, x22
   30404:	bl	cac0 <mpfr_get_z_2exp@plt>
   30408:	mov	x24, x0
   3040c:	mov	x1, #0x0                   	// #0
   30410:	mov	x0, x22
   30414:	bl	ba90 <__gmpz_scan1@plt>
   30418:	mov	x2, x0
   3041c:	mov	x1, x22
   30420:	add	x24, x0, x24
   30424:	mov	x0, x22
   30428:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   3042c:	ldr	x0, [sp, #288]
   30430:	ldr	x1, [sp, #304]
   30434:	neg	x0, x0
   30438:	sdiv	x0, x1, x0
   3043c:	cmp	x0, #0x0
   30440:	cinc	x0, x0, eq  // eq = none
   30444:	cmp	x0, #0x1
   30448:	b.eq	309d8 <mpfr_cos@@Base+0x8d8>  // b.none
   3044c:	b.ls	30a04 <mpfr_cos@@Base+0x904>  // b.plast
   30450:	sub	x0, x0, #0x1
   30454:	mov	w25, #0x42                  	// #66
   30458:	clz	x0, x0
   3045c:	sub	w25, w25, w0
   30460:	lsl	w25, w25, #1
   30464:	sxtw	x0, w25
   30468:	mov	x25, x0
   3046c:	add	x0, x1, x0
   30470:	mov	x20, x0
   30474:	mov	x1, #0x1                   	// #1
   30478:	mov	x0, x23
   3047c:	str	x20, [sp, #160]
   30480:	bl	bcb0 <__gmpz_set_ui@plt>
   30484:	mov	x2, x20
   30488:	mov	x1, x23
   3048c:	mov	x0, x23
   30490:	bl	c200 <__gmpz_mul_2exp@plt>
   30494:	mov	x1, x23
   30498:	mov	x0, x19
   3049c:	bl	bfa0 <__gmpz_set@plt>
   304a0:	mov	x20, #0x1                   	// #1
   304a4:	mov	x0, x19
   304a8:	mov	w1, #0x2                   	// #2
   304ac:	str	x21, [sp, #168]
   304b0:	bl	cb60 <__gmpz_sizeinbase@plt>
   304b4:	mov	x21, x0
   304b8:	cmp	x25, x0
   304bc:	b.gt	3054c <mpfr_cos@@Base+0x44c>
   304c0:	mov	x0, x22
   304c4:	mov	w1, #0x2                   	// #2
   304c8:	bl	cb60 <__gmpz_sizeinbase@plt>
   304cc:	cmp	x0, x21
   304d0:	b.gt	30800 <mpfr_cos@@Base+0x700>
   304d4:	mov	x2, x22
   304d8:	mov	x1, x19
   304dc:	mov	x0, x19
   304e0:	bl	bff0 <__gmpz_mul@plt>
   304e4:	mov	x0, x19
   304e8:	neg	x2, x24
   304ec:	mov	x1, x19
   304f0:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   304f4:	mov	x0, #0xffffffff            	// #4294967295
   304f8:	add	x21, x20, #0x1
   304fc:	cmp	x20, x0
   30500:	b.hi	307bc <mpfr_cos@@Base+0x6bc>  // b.pmore
   30504:	mul	x2, x21, x20
   30508:	mov	x1, x19
   3050c:	mov	x0, x19
   30510:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   30514:	and	x0, x20, #0x3
   30518:	mov	x2, x19
   3051c:	cmp	x0, #0x1
   30520:	mov	x1, x23
   30524:	mov	x0, x23
   30528:	b.eq	307f4 <mpfr_cos@@Base+0x6f4>  // b.none
   3052c:	add	x20, x20, #0x2
   30530:	bl	c9c0 <__gmpz_add@plt>
   30534:	mov	x0, x19
   30538:	mov	w1, #0x2                   	// #2
   3053c:	bl	cb60 <__gmpz_sizeinbase@plt>
   30540:	mov	x21, x0
   30544:	cmp	x25, x0
   30548:	b.le	304c0 <mpfr_cos@@Base+0x3c0>
   3054c:	ldr	x21, [sp, #168]
   30550:	mov	x1, x23
   30554:	mov	w2, #0x0                   	// #0
   30558:	sub	x20, x20, #0x1
   3055c:	mov	x0, x21
   30560:	bl	c240 <mpfr_set_z@plt>
   30564:	ldr	x2, [sp, #160]
   30568:	mov	x1, x21
   3056c:	mov	w3, #0x0                   	// #0
   30570:	mov	x0, x21
   30574:	lsr	x20, x20, #1
   30578:	mov	x25, #0x0                   	// #0
   3057c:	bl	c8f0 <mpfr_div_2ui@plt>
   30580:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   30584:	mov	x0, x22
   30588:	bl	c170 <mpfr_mpz_clear@plt>
   3058c:	mov	x0, x23
   30590:	bl	c170 <mpfr_mpz_clear@plt>
   30594:	mov	x0, x19
   30598:	bl	c170 <mpfr_mpz_clear@plt>
   3059c:	ldr	x3, [sp, #272]
   305a0:	clz	x0, x20
   305a4:	mov	w1, #0x40                  	// #64
   305a8:	sub	w1, w1, w0
   305ac:	sub	x3, x3, #0x1
   305b0:	cmp	x20, #0x0
   305b4:	lsl	w1, w1, #1
   305b8:	mov	x5, #0x1                   	// #1
   305bc:	ldr	x0, [sp, #296]
   305c0:	asr	x3, x3, #6
   305c4:	add	w20, w1, #0x1
   305c8:	mov	w1, #0x0                   	// #0
   305cc:	lsl	x2, x3, #3
   305d0:	str	x3, [sp, #160]
   305d4:	sxtw	x20, w20
   305d8:	str	w5, [sp, #280]
   305dc:	csel	x20, x20, x5, ne  // ne = any
   305e0:	str	x5, [sp, #288]
   305e4:	bl	c110 <memset@plt>
   305e8:	ldr	x3, [sp, #160]
   305ec:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   305f0:	ldr	x0, [sp, #296]
   305f4:	cmp	x27, #0x0
   305f8:	mov	x5, #0x1                   	// #1
   305fc:	str	x1, [x0, x3, lsl #3]
   30600:	b.le	30a44 <mpfr_cos@@Base+0x944>
   30604:	nop
   30608:	mov	x1, x21
   3060c:	mov	w2, #0x2                   	// #2
   30610:	mov	x0, x21
   30614:	bl	c400 <mpfr_sqr@plt>
   30618:	ldr	x4, [sp, #320]
   3061c:	mov	x2, x26
   30620:	mov	x1, x21
   30624:	mov	x0, x21
   30628:	add	x4, x4, #0x1
   3062c:	mov	w3, #0x0                   	// #0
   30630:	str	x4, [sp, #320]
   30634:	bl	bb70 <mpfr_sub@plt>
   30638:	ldr	x4, [sp, #320]
   3063c:	cmp	x4, x24
   30640:	b.eq	30328 <mpfr_cos@@Base+0x228>  // b.none
   30644:	add	x25, x25, #0x1
   30648:	cmp	x25, x27
   3064c:	b.ne	30608 <mpfr_cos@@Base+0x508>  // b.any
   30650:	ldr	w1, [sp, #116]
   30654:	lsl	x20, x20, #1
   30658:	add	x0, x20, #0x1
   3065c:	cbnz	w1, 309c8 <mpfr_cos@@Base+0x8c8>
   30660:	mov	w0, #0x40                  	// #64
   30664:	clz	x20, x20
   30668:	sub	w20, w0, w20
   3066c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   30670:	cmp	x4, x0
   30674:	ldr	x0, [sp, #192]
   30678:	add	x20, x0, w20, sxtw
   3067c:	b.le	309e8 <mpfr_cos@@Base+0x8e8>
   30680:	ldr	w0, [sp, #184]
   30684:	ldr	x1, [sp, #304]
   30688:	cmp	w0, #0x0
   3068c:	ldr	x2, [sp, #144]
   30690:	sub	x1, x1, #0x1
   30694:	ldr	x0, [sp, #328]
   30698:	cinc	x24, x2, eq  // eq = none
   3069c:	asr	x1, x1, #6
   306a0:	add	x2, x28, x4
   306a4:	mov	x3, x24
   306a8:	add	x1, x1, #0x1
   306ac:	sub	x2, x2, x20
   306b0:	str	x4, [sp, #160]
   306b4:	bl	c370 <mpfr_round_p@plt>
   306b8:	ldr	x4, [sp, #160]
   306bc:	cbz	w0, 309e0 <mpfr_cos@@Base+0x8e0>
   306c0:	ldr	w2, [sp, #184]
   306c4:	mov	x1, x21
   306c8:	ldr	w3, [sp, #312]
   306cc:	ldr	x0, [sp, #120]
   306d0:	bl	c6a0 <mpfr_set4@plt>
   306d4:	mov	w19, w0
   306d8:	ldr	x1, [sp, #400]
   306dc:	cbz	x1, 306e8 <mpfr_cos@@Base+0x5e8>
   306e0:	ldr	x0, [sp, #408]
   306e4:	bl	cc20 <mpfr_free_func@plt>
   306e8:	ldr	w0, [sp, #116]
   306ec:	cbnz	w0, 30990 <mpfr_cos@@Base+0x890>
   306f0:	ldp	x23, x24, [sp, #48]
   306f4:	ldp	x25, x26, [sp, #64]
   306f8:	ldp	x27, x28, [sp, #80]
   306fc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   30700:	ldr	x1, [x0, #2576]
   30704:	add	x0, x0, #0xa10
   30708:	blr	x1
   3070c:	ldr	x2, [sp, #128]
   30710:	ldr	w1, [sp, #188]
   30714:	str	w1, [x2, x0]
   30718:	ldr	x0, [sp, #120]
   3071c:	ldr	x1, [x0, #16]
   30720:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   30724:	ldr	x3, [x0, #2512]
   30728:	add	x0, x0, #0x9d0
   3072c:	blr	x3
   30730:	ldr	x3, [sp, #200]
   30734:	str	x3, [x2, x0]
   30738:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3073c:	ldr	x4, [x0, #2544]
   30740:	add	x0, x0, #0x9f0
   30744:	blr	x4
   30748:	ldr	x4, [sp, #208]
   3074c:	str	x4, [x2, x0]
   30750:	cmp	x3, x1
   30754:	ccmp	x4, x1, #0x1, le
   30758:	b.ge	30828 <mpfr_cos@@Base+0x728>  // b.tcont
   3075c:	ldr	w2, [sp, #184]
   30760:	mov	w1, w19
   30764:	ldr	x0, [sp, #120]
   30768:	bl	cb30 <mpfr_check_range@plt>
   3076c:	mov	w19, w0
   30770:	ldp	x21, x22, [sp, #32]
   30774:	mov	w0, w19
   30778:	ldp	x29, x30, [sp]
   3077c:	ldp	x19, x20, [sp, #16]
   30780:	add	sp, sp, #0x220
   30784:	ret
   30788:	add	x1, x0, x28
   3078c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   30790:	cmp	x1, x0
   30794:	b.gt	30b2c <mpfr_cos@@Base+0xa2c>
   30798:	add	x0, sp, #0x170
   3079c:	sub	x1, x1, #0x1
   307a0:	bl	ca80 <mpfr_init2@plt>
   307a4:	mov	w2, #0x1                   	// #1
   307a8:	mov	x1, x28
   307ac:	add	x0, sp, #0x150
   307b0:	str	w2, [sp, #116]
   307b4:	bl	ca80 <mpfr_init2@plt>
   307b8:	b	30248 <mpfr_cos@@Base+0x148>
   307bc:	mov	x2, x20
   307c0:	mov	x1, x19
   307c4:	mov	x0, x19
   307c8:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   307cc:	mov	x2, x21
   307d0:	mov	x1, x19
   307d4:	mov	x0, x19
   307d8:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   307dc:	and	x0, x20, #0x3
   307e0:	mov	x2, x19
   307e4:	cmp	x0, #0x1
   307e8:	mov	x1, x23
   307ec:	mov	x0, x23
   307f0:	b.ne	3052c <mpfr_cos@@Base+0x42c>  // b.any
   307f4:	add	x20, x20, #0x2
   307f8:	bl	bde0 <__gmpz_sub@plt>
   307fc:	b	30534 <mpfr_cos@@Base+0x434>
   30800:	sub	x2, x0, x21
   30804:	mov	x1, x22
   30808:	add	x24, x24, x2
   3080c:	mov	x0, x22
   30810:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   30814:	b	304d4 <mpfr_cos@@Base+0x3d4>
   30818:	ldr	x0, [sp, #408]
   3081c:	bl	c1c0 <mpfr_reallocate_func@plt>
   30820:	str	x0, [sp, #408]
   30824:	b	30384 <mpfr_cos@@Base+0x284>
   30828:	cbz	w19, 308a0 <mpfr_cos@@Base+0x7a0>
   3082c:	ldr	w0, [sp, #188]
   30830:	ldp	x21, x22, [sp, #32]
   30834:	orr	w1, w0, #0x8
   30838:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3083c:	ldr	x2, [x0, #2576]
   30840:	add	x0, x0, #0xa10
   30844:	blr	x2
   30848:	ldr	x2, [sp, #128]
   3084c:	ldp	x29, x30, [sp]
   30850:	str	w1, [x2, x0]
   30854:	mov	w0, w19
   30858:	ldp	x19, x20, [sp, #16]
   3085c:	add	sp, sp, #0x220
   30860:	ret
   30864:	mov	x2, x20
   30868:	mov	x1, x20
   3086c:	mov	x0, x26
   30870:	mov	w3, #0x2                   	// #2
   30874:	bl	bd50 <mpfr_mul@plt>
   30878:	b	303bc <mpfr_cos@@Base+0x2bc>
   3087c:	mov	x1, x28
   30880:	add	x0, sp, #0x150
   30884:	bl	bed0 <mpfr_set_prec@plt>
   30888:	ldr	x0, [sp, #152]
   3088c:	add	x1, x0, x28
   30890:	add	x0, sp, #0x170
   30894:	sub	x1, x1, #0x1
   30898:	bl	bed0 <mpfr_set_prec@plt>
   3089c:	b	302bc <mpfr_cos@@Base+0x1bc>
   308a0:	mov	w0, w19
   308a4:	ldp	x29, x30, [sp]
   308a8:	ldp	x19, x20, [sp, #16]
   308ac:	ldp	x21, x22, [sp, #32]
   308b0:	add	sp, sp, #0x220
   308b4:	ret
   308b8:	ldr	w3, [sp, #184]
   308bc:	mov	x0, #0x0                   	// #0
   308c0:	ldr	x1, [sp, #120]
   308c4:	ldr	x2, [sp, #136]
   308c8:	bl	c020 <mpfr_sincos_fast@plt>
   308cc:	asr	w19, w0, #2
   308d0:	cmp	w19, #0x2
   308d4:	b.ne	306fc <mpfr_cos@@Base+0x5fc>  // b.any
   308d8:	ldr	x2, [sp, #128]
   308dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   308e0:	ldr	x1, [x0, #2576]
   308e4:	add	x0, x0, #0xa10
   308e8:	blr	x1
   308ec:	ldr	w1, [sp, #188]
   308f0:	mov	w19, #0xffffffff            	// #-1
   308f4:	str	w1, [x2, x0]
   308f8:	ldr	x0, [sp, #120]
   308fc:	ldr	x1, [x0, #16]
   30900:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   30904:	ldr	x3, [x0, #2512]
   30908:	add	x0, x0, #0x9d0
   3090c:	blr	x3
   30910:	ldr	x3, [sp, #200]
   30914:	str	x3, [x2, x0]
   30918:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3091c:	ldr	x4, [x0, #2544]
   30920:	add	x0, x0, #0x9f0
   30924:	blr	x4
   30928:	ldr	x4, [sp, #208]
   3092c:	str	x4, [x2, x0]
   30930:	cmp	x3, x1
   30934:	ccmp	x4, x1, #0x1, le
   30938:	b.lt	3075c <mpfr_cos@@Base+0x65c>  // b.tstop
   3093c:	b	3082c <mpfr_cos@@Base+0x72c>
   30940:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   30944:	ldr	w4, [sp, #184]
   30948:	stp	x23, x24, [sp, #48]
   3094c:	mov	w3, #0x0                   	// #0
   30950:	ldr	x1, [x1, #3928]
   30954:	str	wzr, [x22]
   30958:	ldr	x23, [sp, #120]
   3095c:	mov	x0, x23
   30960:	bl	c540 <mpfr_round_near_x@plt>
   30964:	mov	w19, w0
   30968:	cbnz	w0, 30a6c <mpfr_cos@@Base+0x96c>
   3096c:	ldr	x0, [x23]
   30970:	str	x0, [sp, #144]
   30974:	ldp	x23, x24, [sp, #48]
   30978:	b	301cc <mpfr_cos@@Base+0xcc>
   3097c:	lsl	x0, x20, #4
   30980:	str	x0, [sp, #400]
   30984:	bl	ccf0 <mpfr_allocate_func@plt>
   30988:	str	x0, [sp, #408]
   3098c:	b	30280 <mpfr_cos@@Base+0x180>
   30990:	add	x0, sp, #0x150
   30994:	bl	c070 <mpfr_clear@plt>
   30998:	add	x0, sp, #0x170
   3099c:	bl	c070 <mpfr_clear@plt>
   309a0:	ldp	x23, x24, [sp, #48]
   309a4:	ldp	x25, x26, [sp, #64]
   309a8:	ldp	x27, x28, [sp, #80]
   309ac:	b	306fc <mpfr_cos@@Base+0x5fc>
   309b0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   309b4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   309b8:	add	x2, x2, #0x218
   309bc:	add	x0, x0, #0x1b8
   309c0:	mov	w1, #0x117                 	// #279
   309c4:	bl	cb40 <mpfr_assert_fail@plt>
   309c8:	mov	x20, #0x1                   	// #1
   309cc:	add	x20, x20, x0
   309d0:	sub	x20, x20, #0x1
   309d4:	b	30660 <mpfr_cos@@Base+0x560>
   309d8:	mov	x0, #0x4                   	// #4
   309dc:	b	30468 <mpfr_cos@@Base+0x368>
   309e0:	cmp	x4, #0x1
   309e4:	b.eq	30abc <mpfr_cos@@Base+0x9bc>  // b.none
   309e8:	ldr	x0, [sp, #216]
   309ec:	cmp	x0, x4
   309f0:	b.le	30328 <mpfr_cos@@Base+0x228>
   309f4:	sub	x0, x0, x4
   309f8:	str	x4, [sp, #216]
   309fc:	add	x28, x28, x0
   30a00:	b	30328 <mpfr_cos@@Base+0x228>
   30a04:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   30a08:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   30a0c:	add	x2, x2, #0x208
   30a10:	add	x0, x0, #0x1b8
   30a14:	mov	w1, #0x4e                  	// #78
   30a18:	bl	cb40 <mpfr_assert_fail@plt>
   30a1c:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   30a20:	add	x1, x2, x1
   30a24:	cmp	x1, #0x1
   30a28:	b.ls	30adc <mpfr_cos@@Base+0x9dc>  // b.plast
   30a2c:	ldr	w3, [sp, #184]
   30a30:	mov	x2, #0x0                   	// #0
   30a34:	mov	x1, #0x1                   	// #1
   30a38:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   30a3c:	mov	w19, w0
   30a40:	b	30774 <mpfr_cos@@Base+0x674>
   30a44:	ldr	w1, [sp, #116]
   30a48:	lsl	x20, x20, #1
   30a4c:	add	x0, x20, #0x1
   30a50:	ldr	x4, [sp, #320]
   30a54:	cbz	w1, 30660 <mpfr_cos@@Base+0x560>
   30a58:	mov	x20, #0x4                   	// #4
   30a5c:	csel	x20, x20, x5, eq  // eq = none
   30a60:	b	309cc <mpfr_cos@@Base+0x8cc>
   30a64:	ldr	x19, [sp, #144]
   30a68:	b	3022c <mpfr_cos@@Base+0x12c>
   30a6c:	ldr	w0, [x22]
   30a70:	ldr	w2, [sp, #188]
   30a74:	ldr	x1, [sp, #120]
   30a78:	orr	w0, w2, w0
   30a7c:	ldp	x2, x3, [sp, #200]
   30a80:	str	x3, [x20]
   30a84:	ldr	x1, [x1, #16]
   30a88:	str	x2, [x21]
   30a8c:	str	w0, [x22]
   30a90:	cmp	x3, x1
   30a94:	ccmp	x2, x1, #0x0, ge  // ge = tcont
   30a98:	b.le	30b18 <mpfr_cos@@Base+0xa18>
   30a9c:	ldr	w2, [sp, #184]
   30aa0:	mov	w1, w19
   30aa4:	ldr	x0, [sp, #120]
   30aa8:	bl	cb30 <mpfr_check_range@plt>
   30aac:	mov	w19, w0
   30ab0:	ldp	x21, x22, [sp, #32]
   30ab4:	ldp	x23, x24, [sp, #48]
   30ab8:	b	30774 <mpfr_cos@@Base+0x674>
   30abc:	cmp	x28, x20
   30ac0:	b.le	309e8 <mpfr_cos@@Base+0x8e8>
   30ac4:	sub	x20, x28, x20
   30ac8:	cmp	x24, x20
   30acc:	b.gt	309e8 <mpfr_cos@@Base+0x8e8>
   30ad0:	mov	x0, x21
   30ad4:	bl	c460 <mpfr_nexttozero@plt>
   30ad8:	b	306c0 <mpfr_cos@@Base+0x5c0>
   30adc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   30ae0:	ldr	x2, [x0, #2576]
   30ae4:	add	x0, x0, #0xa10
   30ae8:	blr	x2
   30aec:	mrs	x1, tpidr_el0
   30af0:	ldr	x2, [sp, #120]
   30af4:	add	x0, x1, x0
   30af8:	mov	x1, #0x2                   	// #2
   30afc:	mov	w19, #0x0                   	// #0
   30b00:	movk	x1, #0x8000, lsl #48
   30b04:	str	x1, [x2, #16]
   30b08:	ldr	w1, [x0]
   30b0c:	orr	w1, w1, #0x4
   30b10:	str	w1, [x0]
   30b14:	b	30774 <mpfr_cos@@Base+0x674>
   30b18:	orr	w0, w0, #0x8
   30b1c:	ldp	x23, x24, [sp, #48]
   30b20:	str	w0, [x22]
   30b24:	ldp	x21, x22, [sp, #32]
   30b28:	b	30774 <mpfr_cos@@Base+0x674>
   30b2c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   30b30:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   30b34:	add	x2, x2, #0x1c0
   30b38:	add	x0, x0, #0x1b8
   30b3c:	mov	w1, #0xb9                  	// #185
   30b40:	bl	cb40 <mpfr_assert_fail@plt>
   30b44:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   30b48:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   30b4c:	add	x2, x2, #0x1a8
   30b50:	add	x0, x0, #0x1b8
   30b54:	mov	w1, #0xb1                  	// #177
   30b58:	bl	cb40 <mpfr_assert_fail@plt>
   30b5c:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000030b60 <mpfr_sin@@Base>:
   30b60:	stp	x29, x30, [sp, #-208]!
   30b64:	mov	x29, sp
   30b68:	stp	x21, x22, [sp, #32]
   30b6c:	mov	x22, x1
   30b70:	ldr	x21, [x1, #16]
   30b74:	stp	x19, x20, [sp, #16]
   30b78:	stp	x25, x26, [sp, #64]
   30b7c:	mov	x26, x0
   30b80:	str	w2, [sp, #120]
   30b84:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   30b88:	cmp	x21, x2
   30b8c:	b.le	3106c <mpfr_sin@@Base+0x50c>
   30b90:	ldr	x2, [x0]
   30b94:	str	x2, [sp, #112]
   30b98:	neg	x20, x21, lsl #1
   30b9c:	cmp	x20, #0x0
   30ba0:	mov	x3, x2
   30ba4:	b.le	30bb8 <mpfr_sin@@Base+0x58>
   30ba8:	add	x2, x20, #0x2
   30bac:	add	x3, x3, #0x1
   30bb0:	cmp	x3, x2
   30bb4:	b.cc	31048 <mpfr_sin@@Base+0x4e8>  // b.lo, b.ul, b.last
   30bb8:	stp	x23, x24, [sp, #48]
   30bbc:	mrs	x23, tpidr_el0
   30bc0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   30bc4:	ldr	x1, [x0, #2576]
   30bc8:	add	x0, x0, #0xa10
   30bcc:	blr	x1
   30bd0:	add	x4, x23, x0
   30bd4:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   30bd8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   30bdc:	ldr	w0, [x23, x0]
   30be0:	str	w0, [sp, #124]
   30be4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   30be8:	ldr	x2, [x0, #2512]
   30bec:	add	x0, x0, #0x9d0
   30bf0:	blr	x2
   30bf4:	add	x25, x23, x0
   30bf8:	ldr	x0, [x23, x0]
   30bfc:	str	x0, [sp, #128]
   30c00:	str	x3, [x25]
   30c04:	mov	x2, #0x752f                	// #29999
   30c08:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   30c0c:	ldr	x5, [x0, #2544]
   30c10:	add	x0, x0, #0x9f0
   30c14:	blr	x5
   30c18:	add	x24, x23, x0
   30c1c:	ldr	x0, [x23, x0]
   30c20:	str	x0, [sp, #136]
   30c24:	ldr	x0, [sp, #112]
   30c28:	str	x1, [x24]
   30c2c:	cmp	x0, x2
   30c30:	b.gt	30fbc <mpfr_sin@@Base+0x45c>
   30c34:	stp	x27, x28, [sp, #80]
   30c38:	cmp	x0, #0x1
   30c3c:	b.eq	31094 <mpfr_sin@@Base+0x534>  // b.none
   30c40:	b.le	310d4 <mpfr_sin@@Base+0x574>
   30c44:	mov	x1, x0
   30c48:	sub	x0, x0, #0x1
   30c4c:	clz	x0, x0
   30c50:	mov	w5, #0x40                  	// #64
   30c54:	sub	w5, w5, w0
   30c58:	add	x5, x1, w5, sxtw
   30c5c:	add	x28, x5, #0x7
   30c60:	tbz	x21, #63, 30c7c <mpfr_sin@@Base+0x11c>
   30c64:	mov	x0, #0xfffffffffffffeff    	// #-257
   30c68:	movk	x0, #0x7fff, lsl #48
   30c6c:	sub	x0, x0, x28
   30c70:	cmp	x0, x20
   30c74:	add	x28, x28, x20
   30c78:	b.lt	310ec <mpfr_sin@@Base+0x58c>  // b.tstop
   30c7c:	add	x27, sp, #0x90
   30c80:	add	x20, sp, #0xb0
   30c84:	mov	x0, x27
   30c88:	mov	x24, #0xfffffffffffffeff    	// #-257
   30c8c:	bl	bbd0 <mpfr_init@plt>
   30c90:	mov	x19, #0x40                  	// #64
   30c94:	mov	x0, x20
   30c98:	movk	x24, #0x7fff, lsl #48
   30c9c:	bl	bbd0 <mpfr_init@plt>
   30ca0:	b	30de8 <mpfr_sin@@Base+0x288>
   30ca4:	bl	bb70 <mpfr_sub@plt>
   30ca8:	ldr	x1, [sp, #192]
   30cac:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   30cb0:	cmp	x1, x2
   30cb4:	b.eq	30dd0 <mpfr_sin@@Base+0x270>  // b.none
   30cb8:	mov	x0, #0x3                   	// #3
   30cbc:	sub	x0, x0, x28
   30cc0:	cmp	x1, x0
   30cc4:	b.lt	30dd0 <mpfr_sin@@Base+0x270>  // b.tstop
   30cc8:	ldr	x1, [sp, #160]
   30ccc:	cmp	x0, x1
   30cd0:	ccmp	x1, x2, #0x4, le
   30cd4:	b.eq	30dd0 <mpfr_sin@@Base+0x270>  // b.none
   30cd8:	mov	x2, x20
   30cdc:	mov	x0, #0x1                   	// #1
   30ce0:	str	x0, [sp, #104]
   30ce4:	ldr	w25, [x2, #8]
   30ce8:	mov	x1, x28
   30cec:	mov	x0, x27
   30cf0:	str	x2, [sp, #96]
   30cf4:	bl	bed0 <mpfr_set_prec@plt>
   30cf8:	ldr	x2, [sp, #96]
   30cfc:	mov	x0, x27
   30d00:	mov	x1, x2
   30d04:	mov	w2, #0x4                   	// #4
   30d08:	bl	c430 <mpfr_cos@plt>
   30d0c:	mov	x2, x27
   30d10:	mov	x1, x27
   30d14:	mov	w3, #0x2                   	// #2
   30d18:	mov	x0, x27
   30d1c:	bl	bd50 <mpfr_mul@plt>
   30d20:	mov	w3, #0x1                   	// #1
   30d24:	mov	x2, x27
   30d28:	mov	x1, #0x1                   	// #1
   30d2c:	mov	x0, x27
   30d30:	bl	ca50 <mpfr_ui_sub@plt>
   30d34:	mov	x1, x27
   30d38:	mov	x0, x27
   30d3c:	mov	w2, #0x1                   	// #1
   30d40:	bl	c930 <mpfr_sqrt@plt>
   30d44:	tbz	w25, #31, 30d54 <mpfr_sin@@Base+0x1f4>
   30d48:	ldr	w0, [sp, #152]
   30d4c:	neg	w0, w0
   30d50:	str	w0, [sp, #152]
   30d54:	ldr	x0, [sp, #160]
   30d58:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   30d5c:	cmp	x0, x1
   30d60:	b.eq	30ed4 <mpfr_sin@@Base+0x374>  // b.none
   30d64:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   30d68:	cmp	x0, x1
   30d6c:	ldr	x1, [sp, #104]
   30d70:	add	x2, x28, x0, lsl #1
   30d74:	sub	x2, x2, #0x3
   30d78:	sub	x25, x2, x1
   30d7c:	b.le	30db4 <mpfr_sin@@Base+0x254>
   30d80:	ldr	w0, [sp, #120]
   30d84:	ldr	x1, [sp, #144]
   30d88:	cmp	w0, #0x0
   30d8c:	ldr	x0, [sp, #168]
   30d90:	sub	x1, x1, #0x1
   30d94:	ldr	x2, [sp, #112]
   30d98:	asr	x1, x1, #6
   30d9c:	add	x1, x1, #0x1
   30da0:	cinc	x3, x2, eq  // eq = none
   30da4:	mov	x2, x25
   30da8:	bl	c370 <mpfr_round_p@plt>
   30dac:	cbnz	w0, 30ee8 <mpfr_sin@@Base+0x388>
   30db0:	ldr	x0, [sp, #160]
   30db4:	ldr	x2, [x26]
   30db8:	subs	x1, x2, x25
   30dbc:	add	x1, x28, x1
   30dc0:	csel	x28, x1, x28, gt
   30dc4:	cmp	x0, #0x1
   30dc8:	lsl	x0, x28, #1
   30dcc:	csel	x28, x0, x28, eq  // eq = none
   30dd0:	sub	x0, x24, x28
   30dd4:	cmp	x0, x19
   30dd8:	b.lt	30ea4 <mpfr_sin@@Base+0x344>  // b.tstop
   30ddc:	add	x28, x28, x19
   30de0:	add	x19, x28, x28, lsr #63
   30de4:	asr	x19, x19, #1
   30de8:	cmp	x21, #0x1
   30dec:	b.le	30e98 <mpfr_sin@@Base+0x338>
   30df0:	add	x1, x21, x28
   30df4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   30df8:	cmp	x1, x0
   30dfc:	b.gt	30ebc <mpfr_sin@@Base+0x35c>
   30e00:	sub	x1, x1, #0x1
   30e04:	mov	x0, x27
   30e08:	bl	bed0 <mpfr_set_prec@plt>
   30e0c:	mov	x1, x28
   30e10:	mov	x0, x20
   30e14:	bl	bed0 <mpfr_set_prec@plt>
   30e18:	mov	w2, #0x0                   	// #0
   30e1c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   30e20:	ldr	x1, [x0, #2624]
   30e24:	add	x0, x0, #0xa40
   30e28:	blr	x1
   30e2c:	add	x1, x23, x0
   30e30:	mov	x0, x27
   30e34:	bl	c380 <mpfr_cache@plt>
   30e38:	mov	x1, x27
   30e3c:	mov	w3, #0x0                   	// #0
   30e40:	mov	x2, #0x1                   	// #1
   30e44:	mov	x0, x27
   30e48:	bl	c2c0 <mpfr_mul_2ui@plt>
   30e4c:	mov	x2, x27
   30e50:	mov	x1, x22
   30e54:	mov	w3, #0x0                   	// #0
   30e58:	mov	x0, x20
   30e5c:	bl	cd10 <mpfr_remainder@plt>
   30e60:	mov	x1, x27
   30e64:	mov	w3, #0x0                   	// #0
   30e68:	mov	x2, #0x1                   	// #1
   30e6c:	mov	x0, x27
   30e70:	bl	c8f0 <mpfr_div_2ui@plt>
   30e74:	ldr	w0, [sp, #184]
   30e78:	mov	x2, x20
   30e7c:	mov	x1, x27
   30e80:	mov	w3, #0x1                   	// #1
   30e84:	cmp	w0, #0x0
   30e88:	mov	x0, x27
   30e8c:	b.gt	30ca4 <mpfr_sin@@Base+0x144>
   30e90:	bl	c1a0 <mpfr_add@plt>
   30e94:	b	30ca8 <mpfr_sin@@Base+0x148>
   30e98:	mov	x2, x22
   30e9c:	str	xzr, [sp, #104]
   30ea0:	b	30ce4 <mpfr_sin@@Base+0x184>
   30ea4:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   30ea8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   30eac:	add	x2, x2, #0x218
   30eb0:	add	x0, x0, #0x260
   30eb4:	mov	w1, #0xb9                  	// #185
   30eb8:	bl	cb40 <mpfr_assert_fail@plt>
   30ebc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   30ec0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   30ec4:	add	x2, x2, #0x1c0
   30ec8:	add	x0, x0, #0x260
   30ecc:	mov	w1, #0x74                  	// #116
   30ed0:	bl	cb40 <mpfr_assert_fail@plt>
   30ed4:	ldr	x0, [x22]
   30ed8:	cmp	x0, x28
   30edc:	csel	x5, x0, x28, ge  // ge = tcont
   30ee0:	lsl	x28, x5, #1
   30ee4:	b	30dd0 <mpfr_sin@@Base+0x270>
   30ee8:	ldr	w2, [sp, #120]
   30eec:	mov	x1, x27
   30ef0:	ldr	w3, [sp, #152]
   30ef4:	mov	x0, x26
   30ef8:	bl	c6a0 <mpfr_set4@plt>
   30efc:	mov	w19, w0
   30f00:	mov	x0, x27
   30f04:	bl	c070 <mpfr_clear@plt>
   30f08:	mov	x0, x20
   30f0c:	bl	c070 <mpfr_clear@plt>
   30f10:	ldp	x27, x28, [sp, #80]
   30f14:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   30f18:	ldr	x1, [x0, #2576]
   30f1c:	add	x0, x0, #0xa10
   30f20:	blr	x1
   30f24:	ldr	w1, [sp, #124]
   30f28:	str	w1, [x23, x0]
   30f2c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   30f30:	ldr	x2, [x0, #2512]
   30f34:	add	x0, x0, #0x9d0
   30f38:	blr	x2
   30f3c:	ldr	x2, [sp, #128]
   30f40:	str	x2, [x23, x0]
   30f44:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   30f48:	ldr	x3, [x0, #2544]
   30f4c:	add	x0, x0, #0x9f0
   30f50:	blr	x3
   30f54:	ldr	x1, [x26, #16]
   30f58:	ldr	x3, [sp, #136]
   30f5c:	str	x3, [x23, x0]
   30f60:	cmp	x3, x1
   30f64:	ccmp	x2, x1, #0x0, ge  // ge = tcont
   30f68:	b.le	30f9c <mpfr_sin@@Base+0x43c>
   30f6c:	ldr	w2, [sp, #120]
   30f70:	mov	w1, w19
   30f74:	mov	x0, x26
   30f78:	bl	cb30 <mpfr_check_range@plt>
   30f7c:	mov	w19, w0
   30f80:	ldp	x23, x24, [sp, #48]
   30f84:	mov	w0, w19
   30f88:	ldp	x19, x20, [sp, #16]
   30f8c:	ldp	x21, x22, [sp, #32]
   30f90:	ldp	x25, x26, [sp, #64]
   30f94:	ldp	x29, x30, [sp], #208
   30f98:	ret
   30f9c:	cbnz	w19, 31010 <mpfr_sin@@Base+0x4b0>
   30fa0:	mov	w0, w19
   30fa4:	ldp	x19, x20, [sp, #16]
   30fa8:	ldp	x21, x22, [sp, #32]
   30fac:	ldp	x23, x24, [sp, #48]
   30fb0:	ldp	x25, x26, [sp, #64]
   30fb4:	ldp	x29, x30, [sp], #208
   30fb8:	ret
   30fbc:	ldr	w3, [sp, #120]
   30fc0:	mov	x2, x22
   30fc4:	mov	x0, x26
   30fc8:	mov	x1, #0x0                   	// #0
   30fcc:	str	x4, [sp, #96]
   30fd0:	bl	c020 <mpfr_sincos_fast@plt>
   30fd4:	and	w19, w0, #0x3
   30fd8:	cmp	w19, #0x2
   30fdc:	ldr	x4, [sp, #96]
   30fe0:	b.ne	30f14 <mpfr_sin@@Base+0x3b4>  // b.any
   30fe4:	ldr	w1, [sp, #124]
   30fe8:	mov	w19, #0xffffffff            	// #-1
   30fec:	ldr	x0, [x26, #16]
   30ff0:	str	w1, [x4]
   30ff4:	ldr	x2, [sp, #136]
   30ff8:	str	x2, [x24]
   30ffc:	ldr	x1, [sp, #128]
   31000:	str	x1, [x25]
   31004:	cmp	x2, x0
   31008:	ccmp	x1, x0, #0x0, ge  // ge = tcont
   3100c:	b.gt	30f6c <mpfr_sin@@Base+0x40c>
   31010:	ldr	w0, [sp, #124]
   31014:	ldp	x21, x22, [sp, #32]
   31018:	orr	w1, w0, #0x8
   3101c:	ldp	x25, x26, [sp, #64]
   31020:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31024:	ldr	x2, [x0, #2576]
   31028:	add	x0, x0, #0xa10
   3102c:	blr	x2
   31030:	str	w1, [x23, x0]
   31034:	mov	w0, w19
   31038:	ldp	x19, x20, [sp, #16]
   3103c:	ldp	x23, x24, [sp, #48]
   31040:	ldp	x29, x30, [sp], #208
   31044:	ret
   31048:	ldr	w4, [sp, #120]
   3104c:	mov	w3, #0x0                   	// #0
   31050:	bl	c540 <mpfr_round_near_x@plt>
   31054:	mov	w19, w0
   31058:	cbnz	w0, 30f84 <mpfr_sin@@Base+0x424>
   3105c:	ldr	x0, [x26]
   31060:	stp	x23, x24, [sp, #48]
   31064:	str	x0, [sp, #112]
   31068:	b	30bbc <mpfr_sin@@Base+0x5c>
   3106c:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   31070:	add	x21, x21, x0
   31074:	cmp	x21, #0x1
   31078:	b.ls	3109c <mpfr_sin@@Base+0x53c>  // b.plast
   3107c:	ldr	w1, [x1, #8]
   31080:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   31084:	mov	w19, #0x0                   	// #0
   31088:	str	w1, [x26, #8]
   3108c:	str	x0, [x26, #16]
   31090:	b	30f84 <mpfr_sin@@Base+0x424>
   31094:	mov	x5, x0
   31098:	b	30c5c <mpfr_sin@@Base+0xfc>
   3109c:	mrs	x1, tpidr_el0
   310a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   310a4:	ldr	x2, [x0, #2576]
   310a8:	add	x0, x0, #0xa10
   310ac:	blr	x2
   310b0:	add	x0, x1, x0
   310b4:	mov	x1, #0x2                   	// #2
   310b8:	movk	x1, #0x8000, lsl #48
   310bc:	str	x1, [x26, #16]
   310c0:	mov	w19, #0x0                   	// #0
   310c4:	ldr	w1, [x0]
   310c8:	orr	w1, w1, #0x4
   310cc:	str	w1, [x0]
   310d0:	b	30f84 <mpfr_sin@@Base+0x424>
   310d4:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   310d8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   310dc:	add	x2, x2, #0x1a8
   310e0:	add	x0, x0, #0x260
   310e4:	mov	w1, #0x55                  	// #85
   310e8:	bl	cb40 <mpfr_assert_fail@plt>
   310ec:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   310f0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   310f4:	add	x2, x2, #0x268
   310f8:	add	x0, x0, #0x260
   310fc:	mov	w1, #0x60                  	// #96
   31100:	bl	cb40 <mpfr_assert_fail@plt>
   31104:	nop

0000000000031108 <mpfr_tan@@Base>:
   31108:	stp	x29, x30, [sp, #-336]!
   3110c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   31110:	mov	x29, sp
   31114:	stp	x19, x20, [sp, #16]
   31118:	mov	w20, w2
   3111c:	ldr	x2, [x1, #16]
   31120:	stp	x21, x22, [sp, #32]
   31124:	mov	x22, x1
   31128:	stp	x27, x28, [sp, #80]
   3112c:	cmp	x2, x3
   31130:	mov	x27, x0
   31134:	b.le	313a8 <mpfr_tan@@Base+0x2a0>
   31138:	neg	x2, x2, lsl #1
   3113c:	cmp	x2, #0x0
   31140:	ldr	x21, [x0]
   31144:	b.le	31158 <mpfr_tan@@Base+0x50>
   31148:	add	x2, x2, #0x1
   3114c:	add	x3, x21, #0x1
   31150:	cmp	x3, x2
   31154:	b.cc	31384 <mpfr_tan@@Base+0x27c>  // b.lo, b.ul, b.last
   31158:	stp	x23, x24, [sp, #48]
   3115c:	stp	x25, x26, [sp, #64]
   31160:	mrs	x24, tpidr_el0
   31164:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31168:	ldr	x1, [x0, #2576]
   3116c:	add	x0, x0, #0xa10
   31170:	blr	x1
   31174:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   31178:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3117c:	ldr	w0, [x24, x0]
   31180:	str	w0, [sp, #108]
   31184:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31188:	ldr	x2, [x0, #2512]
   3118c:	add	x0, x0, #0x9d0
   31190:	blr	x2
   31194:	add	x2, x24, x0
   31198:	ldr	x0, [x24, x0]
   3119c:	str	x0, [sp, #112]
   311a0:	str	x3, [x2]
   311a4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   311a8:	ldr	x4, [x0, #2544]
   311ac:	add	x0, x0, #0x9f0
   311b0:	blr	x4
   311b4:	ldr	x23, [x24, x0]
   311b8:	str	x1, [x24, x0]
   311bc:	cmp	x21, #0x1
   311c0:	b.eq	3144c <mpfr_tan@@Base+0x344>  // b.none
   311c4:	b.le	314bc <mpfr_tan@@Base+0x3b4>
   311c8:	sub	x19, x21, #0x1
   311cc:	mov	w2, #0x40                  	// #64
   311d0:	clz	x19, x19
   311d4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   311d8:	sub	w19, w2, w19
   311dc:	add	x19, x21, w19, sxtw
   311e0:	add	x26, x19, #0xd
   311e4:	cmp	x26, x0
   311e8:	b.ge	314b8 <mpfr_tan@@Base+0x3b0>  // b.tcont
   311ec:	add	x19, x19, #0xc
   311f0:	asr	x19, x19, #6
   311f4:	add	x19, x19, #0x1
   311f8:	lsl	x0, x19, #1
   311fc:	cmp	x0, #0x10
   31200:	b.gt	31370 <mpfr_tan@@Base+0x268>
   31204:	add	x1, sp, #0xd0
   31208:	stp	xzr, x1, [sp, #192]
   3120c:	mov	x0, x1
   31210:	add	x28, sp, #0xa0
   31214:	add	x25, sp, #0x80
   31218:	mov	w1, #0x1                   	// #1
   3121c:	add	x19, x0, x19, lsl #3
   31220:	mov	x2, #0x40                  	// #64
   31224:	stp	x2, x26, [sp, #120]
   31228:	str	w1, [sp, #136]
   3122c:	stp	x0, x26, [sp, #152]
   31230:	str	w1, [sp, #168]
   31234:	str	x19, [sp, #184]
   31238:	mov	x2, x22
   3123c:	mov	x1, x28
   31240:	mov	w3, #0x0                   	// #0
   31244:	mov	x0, x25
   31248:	bl	cc40 <mpfr_sin_cos@plt>
   3124c:	mov	x2, x28
   31250:	mov	x1, x25
   31254:	mov	w3, #0x0                   	// #0
   31258:	mov	x0, x28
   3125c:	bl	c620 <mpfr_div@plt>
   31260:	ldr	x1, [sp, #160]
   31264:	cmp	w20, #0x0
   31268:	ldr	x0, [sp, #184]
   3126c:	sub	x1, x1, #0x1
   31270:	cinc	x3, x21, eq  // eq = none
   31274:	sub	x2, x26, #0x2
   31278:	asr	x1, x1, #6
   3127c:	add	x1, x1, #0x1
   31280:	bl	c370 <mpfr_round_p@plt>
   31284:	cbz	w0, 313d0 <mpfr_tan@@Base+0x2c8>
   31288:	ldr	w3, [sp, #168]
   3128c:	mov	x1, x28
   31290:	mov	w2, w20
   31294:	mov	x0, x27
   31298:	bl	c6a0 <mpfr_set4@plt>
   3129c:	mov	w19, w0
   312a0:	ldr	x1, [sp, #192]
   312a4:	cbnz	x1, 31364 <mpfr_tan@@Base+0x25c>
   312a8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   312ac:	ldr	x1, [x0, #2576]
   312b0:	add	x0, x0, #0xa10
   312b4:	blr	x1
   312b8:	add	x2, x24, x0
   312bc:	ldr	w1, [sp, #108]
   312c0:	str	w1, [x24, x0]
   312c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   312c8:	ldr	x3, [x0, #2512]
   312cc:	add	x0, x0, #0x9d0
   312d0:	blr	x3
   312d4:	ldr	x1, [x27, #16]
   312d8:	ldr	x3, [sp, #112]
   312dc:	str	x3, [x24, x0]
   312e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   312e4:	ldr	x4, [x0, #2544]
   312e8:	add	x0, x0, #0x9f0
   312ec:	blr	x4
   312f0:	str	x23, [x24, x0]
   312f4:	cmp	x23, x1
   312f8:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   312fc:	b.le	31334 <mpfr_tan@@Base+0x22c>
   31300:	mov	w1, w19
   31304:	mov	w2, w20
   31308:	mov	x0, x27
   3130c:	bl	cb30 <mpfr_check_range@plt>
   31310:	ldp	x23, x24, [sp, #48]
   31314:	mov	w19, w0
   31318:	ldp	x25, x26, [sp, #64]
   3131c:	mov	w0, w19
   31320:	ldp	x19, x20, [sp, #16]
   31324:	ldp	x21, x22, [sp, #32]
   31328:	ldp	x27, x28, [sp, #80]
   3132c:	ldp	x29, x30, [sp], #336
   31330:	ret
   31334:	cbz	w19, 31344 <mpfr_tan@@Base+0x23c>
   31338:	ldr	w0, [sp, #108]
   3133c:	orr	w21, w0, #0x8
   31340:	str	w21, [x2]
   31344:	mov	w0, w19
   31348:	ldp	x19, x20, [sp, #16]
   3134c:	ldp	x21, x22, [sp, #32]
   31350:	ldp	x23, x24, [sp, #48]
   31354:	ldp	x25, x26, [sp, #64]
   31358:	ldp	x27, x28, [sp, #80]
   3135c:	ldp	x29, x30, [sp], #336
   31360:	ret
   31364:	ldr	x0, [sp, #200]
   31368:	bl	cc20 <mpfr_free_func@plt>
   3136c:	b	312a8 <mpfr_tan@@Base+0x1a0>
   31370:	lsl	x0, x19, #4
   31374:	str	x0, [sp, #192]
   31378:	bl	ccf0 <mpfr_allocate_func@plt>
   3137c:	str	x0, [sp, #200]
   31380:	b	31210 <mpfr_tan@@Base+0x108>
   31384:	mov	w4, w20
   31388:	mov	w3, #0x1                   	// #1
   3138c:	bl	c540 <mpfr_round_near_x@plt>
   31390:	mov	w19, w0
   31394:	cbnz	w0, 3131c <mpfr_tan@@Base+0x214>
   31398:	stp	x23, x24, [sp, #48]
   3139c:	stp	x25, x26, [sp, #64]
   313a0:	ldr	x21, [x27]
   313a4:	b	31160 <mpfr_tan@@Base+0x58>
   313a8:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   313ac:	add	x2, x2, x0
   313b0:	cmp	x2, #0x1
   313b4:	b.ls	31468 <mpfr_tan@@Base+0x360>  // b.plast
   313b8:	ldr	w1, [x1, #8]
   313bc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   313c0:	mov	w19, #0x0                   	// #0
   313c4:	str	w1, [x27, #8]
   313c8:	str	x0, [x27, #16]
   313cc:	b	3131c <mpfr_tan@@Base+0x214>
   313d0:	ldr	x1, [sp, #120]
   313d4:	mov	x0, #0xfffffffffffffeff    	// #-257
   313d8:	movk	x0, #0x7fff, lsl #48
   313dc:	sub	x0, x0, x26
   313e0:	cmp	x0, x1
   313e4:	b.lt	314a0 <mpfr_tan@@Base+0x398>  // b.tstop
   313e8:	add	x26, x26, x1
   313ec:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   313f0:	cmp	x26, x0
   313f4:	add	x0, x26, x26, lsr #63
   313f8:	ldr	x1, [sp, #192]
   313fc:	asr	x0, x0, #1
   31400:	str	x0, [sp, #120]
   31404:	b.ge	314b8 <mpfr_tan@@Base+0x3b0>  // b.tcont
   31408:	sub	x19, x26, #0x1
   3140c:	asr	x19, x19, #6
   31410:	add	x19, x19, #0x1
   31414:	lsl	x2, x19, #4
   31418:	str	x2, [sp, #192]
   3141c:	cbz	x1, 31458 <mpfr_tan@@Base+0x350>
   31420:	ldr	x0, [sp, #200]
   31424:	bl	c1c0 <mpfr_reallocate_func@plt>
   31428:	str	x0, [sp, #200]
   3142c:	mov	w1, #0x1                   	// #1
   31430:	add	x19, x0, x19, lsl #3
   31434:	str	x26, [sp, #128]
   31438:	str	w1, [sp, #136]
   3143c:	stp	x0, x26, [sp, #152]
   31440:	str	w1, [sp, #168]
   31444:	str	x19, [sp, #184]
   31448:	b	31238 <mpfr_tan@@Base+0x130>
   3144c:	mov	x19, x21
   31450:	mov	x26, #0xe                   	// #14
   31454:	b	31204 <mpfr_tan@@Base+0xfc>
   31458:	mov	x0, x2
   3145c:	bl	ccf0 <mpfr_allocate_func@plt>
   31460:	str	x0, [sp, #200]
   31464:	b	3142c <mpfr_tan@@Base+0x324>
   31468:	mrs	x1, tpidr_el0
   3146c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31470:	ldr	x2, [x0, #2576]
   31474:	add	x0, x0, #0xa10
   31478:	blr	x2
   3147c:	add	x0, x1, x0
   31480:	mov	x1, #0x2                   	// #2
   31484:	movk	x1, #0x8000, lsl #48
   31488:	str	x1, [x27, #16]
   3148c:	mov	w19, #0x0                   	// #0
   31490:	ldr	w1, [x0]
   31494:	orr	w1, w1, #0x4
   31498:	str	w1, [x0]
   3149c:	b	3131c <mpfr_tan@@Base+0x214>
   314a0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   314a4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   314a8:	add	x2, x2, #0x218
   314ac:	add	x0, x0, #0x2a8
   314b0:	mov	w1, #0x50                  	// #80
   314b4:	bl	cb40 <mpfr_assert_fail@plt>
   314b8:	bl	c8e0 <mpfr_abort_prec_max@plt>
   314bc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   314c0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   314c4:	add	x2, x2, #0x1a8
   314c8:	add	x0, x0, #0x2a8
   314cc:	mov	w1, #0x42                  	// #66
   314d0:	bl	cb40 <mpfr_assert_fail@plt>
   314d4:	nop

00000000000314d8 <mpfr_fma@@Base>:
   314d8:	stp	x29, x30, [sp, #-352]!
   314dc:	mov	x29, sp
   314e0:	stp	x23, x24, [sp, #48]
   314e4:	mov	w23, w4
   314e8:	ldr	x24, [x1, #16]
   314ec:	stp	x19, x20, [sp, #16]
   314f0:	mov	x20, x1
   314f4:	stp	x21, x22, [sp, #32]
   314f8:	mov	x22, x0
   314fc:	mov	x21, x2
   31500:	stp	x25, x26, [sp, #64]
   31504:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   31508:	cmp	x24, x0
   3150c:	stp	x27, x28, [sp, #80]
   31510:	mov	x28, x3
   31514:	b.le	31888 <mpfr_fma@@Base+0x3b0>
   31518:	ldr	x2, [x2, #16]
   3151c:	cmp	x2, x0
   31520:	b.le	3189c <mpfr_fma@@Base+0x3c4>
   31524:	ldr	x3, [x3, #16]
   31528:	cmp	x3, x0
   3152c:	b.le	3193c <mpfr_fma@@Base+0x464>
   31530:	add	x0, x24, x2
   31534:	str	x0, [x29, #96]
   31538:	ldr	x1, [x1]
   3153c:	ldr	x2, [x21]
   31540:	cmp	x1, x2
   31544:	b.eq	316b8 <mpfr_fma@@Base+0x1e0>  // b.none
   31548:	add	x26, x1, x2
   3154c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   31550:	cmp	x26, x0
   31554:	b.ge	31c48 <mpfr_fma@@Base+0x770>  // b.tcont
   31558:	sub	x0, x26, #0x1
   3155c:	asr	x0, x0, #6
   31560:	add	x0, x0, #0x1
   31564:	cmp	x0, #0x10
   31568:	b.gt	317d4 <mpfr_fma@@Base+0x2fc>
   3156c:	add	x1, x29, #0xe0
   31570:	stp	xzr, x1, [x29, #208]
   31574:	mov	x4, x1
   31578:	mrs	x19, tpidr_el0
   3157c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31580:	ldr	x1, [x0, #2576]
   31584:	add	x0, x0, #0xa10
   31588:	blr	x1
   3158c:	mov	x6, #0x3fffffffffffffff    	// #4611686018427387903
   31590:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   31594:	mov	w8, #0x1                   	// #1
   31598:	add	x24, x29, #0x80
   3159c:	ldr	w27, [x19, x0]
   315a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   315a4:	ldr	x1, [x0, #2512]
   315a8:	add	x0, x0, #0x9d0
   315ac:	blr	x1
   315b0:	add	x5, x19, x0
   315b4:	mov	x2, x21
   315b8:	ldr	x25, [x19, x0]
   315bc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   315c0:	ldr	x1, [x0, #2544]
   315c4:	add	x0, x0, #0x9f0
   315c8:	blr	x1
   315cc:	mov	x1, x20
   315d0:	mov	w3, #0x0                   	// #0
   315d4:	str	x7, [x5]
   315d8:	str	x5, [x29, #104]
   315dc:	str	x26, [x29, #128]
   315e0:	str	w8, [x29, #136]
   315e4:	str	x4, [x29, #152]
   315e8:	ldr	x26, [x19, x0]
   315ec:	str	x6, [x19, x0]
   315f0:	mov	x0, x24
   315f4:	bl	bd50 <mpfr_mul@plt>
   315f8:	ldr	x5, [x29, #104]
   315fc:	cbnz	w0, 31994 <mpfr_fma@@Base+0x4bc>
   31600:	mov	x1, x24
   31604:	mov	x2, x28
   31608:	mov	w3, w23
   3160c:	mov	x0, x22
   31610:	bl	c1a0 <mpfr_add@plt>
   31614:	mov	w20, w0
   31618:	ldr	x1, [x29, #208]
   3161c:	cbz	x1, 31628 <mpfr_fma@@Base+0x150>
   31620:	ldr	x0, [x29, #216]
   31624:	bl	cc20 <mpfr_free_func@plt>
   31628:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3162c:	ldr	x1, [x0, #2576]
   31630:	add	x0, x0, #0xa10
   31634:	blr	x1
   31638:	ldr	w1, [x19, x0]
   3163c:	ldr	x2, [x22, #16]
   31640:	orr	w27, w27, w1
   31644:	str	w27, [x19, x0]
   31648:	add	x1, x19, x0
   3164c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31650:	ldr	x3, [x0, #2512]
   31654:	add	x0, x0, #0x9d0
   31658:	blr	x3
   3165c:	str	x25, [x19, x0]
   31660:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31664:	ldr	x3, [x0, #2544]
   31668:	add	x0, x0, #0x9f0
   3166c:	blr	x3
   31670:	str	x26, [x19, x0]
   31674:	cmp	x26, x2
   31678:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   3167c:	b.le	317ec <mpfr_fma@@Base+0x314>
   31680:	mov	w1, w20
   31684:	mov	w2, w23
   31688:	mov	x0, x22
   3168c:	bl	cb30 <mpfr_check_range@plt>
   31690:	mov	w20, w0
   31694:	mov	sp, x29
   31698:	mov	w0, w20
   3169c:	ldp	x19, x20, [sp, #16]
   316a0:	ldp	x21, x22, [sp, #32]
   316a4:	ldp	x23, x24, [sp, #48]
   316a8:	ldp	x25, x26, [sp, #64]
   316ac:	ldp	x27, x28, [sp, #80]
   316b0:	ldp	x29, x30, [sp], #352
   316b4:	ret
   316b8:	mrs	x4, tpidr_el0
   316bc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   316c0:	ldr	x5, [x0, #2544]
   316c4:	add	x0, x0, #0x9f0
   316c8:	blr	x5
   316cc:	ldr	x5, [x29, #96]
   316d0:	ldr	x0, [x4, x0]
   316d4:	cmp	x0, x5
   316d8:	b.lt	31548 <mpfr_fma@@Base+0x70>  // b.tstop
   316dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   316e0:	ldr	x6, [x0, #2512]
   316e4:	add	x0, x0, #0x9d0
   316e8:	blr	x6
   316ec:	ldr	x0, [x4, x0]
   316f0:	cmp	x0, x5
   316f4:	b.ge	31548 <mpfr_fma@@Base+0x70>  // b.tcont
   316f8:	cmp	x1, #0x3f
   316fc:	b.gt	317fc <mpfr_fma@@Base+0x324>
   31700:	ldr	x0, [x28]
   31704:	cmp	x0, x1
   31708:	b.ne	317fc <mpfr_fma@@Base+0x324>  // b.any
   3170c:	ldr	x4, [x22]
   31710:	cmp	x4, x0
   31714:	b.ne	317fc <mpfr_fma@@Base+0x324>  // b.any
   31718:	ldr	x5, [x21, #24]
   3171c:	lsl	x4, x4, #1
   31720:	ldr	x0, [x20, #24]
   31724:	add	x2, x29, #0x70
   31728:	ldr	w7, [x21, #8]
   3172c:	add	x1, x29, #0xa0
   31730:	ldr	x6, [x5]
   31734:	cmp	x4, #0x40
   31738:	ldr	w5, [x20, #8]
   3173c:	ldr	x0, [x0]
   31740:	umulh	x8, x0, x6
   31744:	str	x4, [x29, #128]
   31748:	mul	w5, w5, w7
   3174c:	str	x2, [x29, #152]
   31750:	mul	x0, x0, x6
   31754:	ldr	w6, [x28, #8]
   31758:	stp	x0, x8, [x29, #112]
   3175c:	str	w5, [x29, #136]
   31760:	str	x4, [x29, #208]
   31764:	str	w6, [x29, #216]
   31768:	stp	x3, x1, [x29, #224]
   3176c:	b.gt	31c10 <mpfr_fma@@Base+0x738>
   31770:	mov	x0, x8
   31774:	tbnz	x8, #63, 31788 <mpfr_fma@@Base+0x2b0>
   31778:	ldr	x1, [x29, #96]
   3177c:	lsl	x0, x8, #1
   31780:	sub	x1, x1, #0x1
   31784:	str	x1, [x29, #96]
   31788:	ldr	x1, [x28, #24]
   3178c:	str	x0, [x29, #112]
   31790:	ldr	x0, [x29, #96]
   31794:	str	x0, [x29, #144]
   31798:	ldr	x0, [x1]
   3179c:	str	x0, [x29, #160]
   317a0:	add	x19, x29, #0x80
   317a4:	mov	w3, w23
   317a8:	mov	x1, x19
   317ac:	add	x2, x29, #0xd0
   317b0:	mov	x0, x19
   317b4:	bl	c1a0 <mpfr_add@plt>
   317b8:	mov	w2, w23
   317bc:	mov	w3, w0
   317c0:	mov	x1, x19
   317c4:	mov	x0, x22
   317c8:	bl	cae0 <mpfr_set_1_2@plt>
   317cc:	mov	w20, w0
   317d0:	b	31694 <mpfr_fma@@Base+0x1bc>
   317d4:	lsl	x0, x0, #3
   317d8:	str	x0, [x29, #208]
   317dc:	bl	ccf0 <mpfr_allocate_func@plt>
   317e0:	mov	x4, x0
   317e4:	str	x0, [x29, #216]
   317e8:	b	31578 <mpfr_fma@@Base+0xa0>
   317ec:	cbz	w20, 31694 <mpfr_fma@@Base+0x1bc>
   317f0:	orr	w27, w27, #0x8
   317f4:	str	w27, [x1]
   317f8:	b	31694 <mpfr_fma@@Base+0x1bc>
   317fc:	sub	x3, x1, #0x1
   31800:	asr	x3, x3, #6
   31804:	add	x3, x3, #0x1
   31808:	cmp	x3, #0x50
   3180c:	b.gt	31548 <mpfr_fma@@Base+0x70>
   31810:	mov	x0, sp
   31814:	lsl	x25, x3, #4
   31818:	sub	x0, x0, x3, lsl #4
   3181c:	lsl	x4, x3, #7
   31820:	mov	sp, x0
   31824:	lsl	x26, x3, #1
   31828:	ldr	x1, [x20, #24]
   3182c:	mov	x19, sp
   31830:	ldr	x2, [x21, #24]
   31834:	add	x25, x19, x25
   31838:	mov	w27, #0x1                   	// #1
   3183c:	str	x4, [x29, #128]
   31840:	str	w27, [x29, #136]
   31844:	str	x19, [x29, #152]
   31848:	bl	c470 <__gmpn_mul_n@plt>
   3184c:	ldur	x0, [x25, #-8]
   31850:	tbz	x0, #63, 31bb8 <mpfr_fma@@Base+0x6e0>
   31854:	ldr	x0, [x29, #96]
   31858:	str	x0, [x29, #144]
   3185c:	ldr	w4, [x20, #8]
   31860:	mov	w3, w23
   31864:	ldr	w5, [x21, #8]
   31868:	mov	x2, x28
   3186c:	mov	x0, x22
   31870:	add	x1, x29, #0x80
   31874:	mul	w4, w4, w5
   31878:	str	w4, [x29, #136]
   3187c:	bl	c1a0 <mpfr_add@plt>
   31880:	mov	w20, w0
   31884:	b	31694 <mpfr_fma@@Base+0x1bc>
   31888:	mov	x0, #0x2                   	// #2
   3188c:	movk	x0, #0x8000, lsl #48
   31890:	cmp	x24, x0
   31894:	b.eq	31908 <mpfr_fma@@Base+0x430>  // b.none
   31898:	ldr	x2, [x2, #16]
   3189c:	mov	x0, #0x2                   	// #2
   318a0:	movk	x0, #0x8000, lsl #48
   318a4:	cmp	x2, x0
   318a8:	b.eq	31908 <mpfr_fma@@Base+0x430>  // b.none
   318ac:	ldr	x3, [x28, #16]
   318b0:	cmp	x3, x0
   318b4:	b.eq	31908 <mpfr_fma@@Base+0x430>  // b.none
   318b8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   318bc:	cmp	x2, x0
   318c0:	ccmp	x24, x0, #0x4, ne  // ne = any
   318c4:	b.ne	3194c <mpfr_fma@@Base+0x474>  // b.any
   318c8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   318cc:	cmp	x24, x1
   318d0:	ccmp	x2, x1, #0x4, ne  // ne = any
   318d4:	b.eq	31908 <mpfr_fma@@Base+0x430>  // b.none
   318d8:	ldr	w1, [x20, #8]
   318dc:	cmp	x3, x0
   318e0:	ldr	w2, [x21, #8]
   318e4:	mul	w1, w1, w2
   318e8:	b.eq	318fc <mpfr_fma@@Base+0x424>  // b.none
   318ec:	mov	w20, #0x0                   	// #0
   318f0:	str	w1, [x22, #8]
   318f4:	str	x0, [x22, #16]
   318f8:	b	31694 <mpfr_fma@@Base+0x1bc>
   318fc:	ldr	w0, [x28, #8]
   31900:	cmp	w0, w1
   31904:	b.eq	31b28 <mpfr_fma@@Base+0x650>  // b.none
   31908:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3190c:	ldr	x1, [x0, #2576]
   31910:	add	x0, x0, #0xa10
   31914:	blr	x1
   31918:	mrs	x2, tpidr_el0
   3191c:	mov	x1, #0x2                   	// #2
   31920:	mov	w20, #0x0                   	// #0
   31924:	movk	x1, #0x8000, lsl #48
   31928:	str	x1, [x22, #16]
   3192c:	ldr	w1, [x2, x0]
   31930:	orr	w1, w1, #0x4
   31934:	str	w1, [x2, x0]
   31938:	b	31694 <mpfr_fma@@Base+0x1bc>
   3193c:	mov	x0, #0x2                   	// #2
   31940:	movk	x0, #0x8000, lsl #48
   31944:	cmp	x3, x0
   31948:	b.eq	31908 <mpfr_fma@@Base+0x430>  // b.none
   3194c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   31950:	cmp	x3, x0
   31954:	b.eq	31b24 <mpfr_fma@@Base+0x64c>  // b.none
   31958:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3195c:	cmp	x24, x0
   31960:	ccmp	x2, x0, #0x4, ne  // ne = any
   31964:	b.ne	31b74 <mpfr_fma@@Base+0x69c>  // b.any
   31968:	cmp	x3, x0
   3196c:	b.ne	31b9c <mpfr_fma@@Base+0x6c4>  // b.any
   31970:	ldr	w0, [x20, #8]
   31974:	cmp	w23, #0x3
   31978:	ldr	w1, [x21, #8]
   3197c:	mul	w0, w0, w1
   31980:	b.eq	31bdc <mpfr_fma@@Base+0x704>  // b.none
   31984:	mov	w1, #0x1                   	// #1
   31988:	tbnz	w0, #31, 31b38 <mpfr_fma@@Base+0x660>
   3198c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   31990:	b	318ec <mpfr_fma@@Base+0x414>
   31994:	ldr	x1, [x29, #144]
   31998:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3199c:	cmp	x1, x0
   319a0:	b.eq	31a8c <mpfr_fma@@Base+0x5b4>  // b.none
   319a4:	ldr	x0, [x22]
   319a8:	ldr	x3, [x28]
   319ac:	add	x0, x0, #0x1
   319b0:	ldr	x1, [x5]
   319b4:	cmp	x0, x3
   319b8:	ldr	x2, [x28, #16]
   319bc:	csel	x0, x0, x3, ge  // ge = tcont
   319c0:	sub	x2, x2, x1
   319c4:	cmp	x2, x0
   319c8:	b.ge	31b4c <mpfr_fma@@Base+0x674>  // b.tcont
   319cc:	ldr	x1, [x29, #208]
   319d0:	cbz	x1, 319dc <mpfr_fma@@Base+0x504>
   319d4:	ldr	x0, [x29, #216]
   319d8:	bl	cc20 <mpfr_free_func@plt>
   319dc:	ldr	x0, [x21]
   319e0:	str	xzr, [x29, #112]
   319e4:	ldr	x24, [x20]
   319e8:	sub	x0, x0, #0x1
   319ec:	sub	x24, x24, #0x1
   319f0:	asr	x0, x0, #6
   319f4:	add	x24, x0, x24, asr #6
   319f8:	add	x24, x24, #0x2
   319fc:	lsl	x1, x24, #3
   31a00:	cmp	x1, #0x4, lsl #12
   31a04:	b.hi	31c00 <mpfr_fma@@Base+0x728>  // b.pmore
   31a08:	add	x1, x1, #0xf
   31a0c:	and	x1, x1, #0xfffffffffffffff0
   31a10:	sub	sp, sp, x1
   31a14:	mov	x3, sp
   31a18:	add	x4, x29, #0xa0
   31a1c:	mov	x1, x20
   31a20:	mov	x0, x4
   31a24:	mov	x2, x21
   31a28:	mov	w5, #0x1                   	// #1
   31a2c:	lsl	x24, x24, #6
   31a30:	str	x4, [x29, #104]
   31a34:	str	x24, [x29, #160]
   31a38:	str	w5, [x29, #168]
   31a3c:	str	x3, [x29, #184]
   31a40:	bl	bf80 <mpfr_ubf_mul_exact@plt>
   31a44:	bl	c270 <mpfr_clear_flags@plt>
   31a48:	ldr	x4, [x29, #104]
   31a4c:	mov	x2, x28
   31a50:	mov	w3, w23
   31a54:	mov	x0, x22
   31a58:	mov	x1, x4
   31a5c:	bl	c1a0 <mpfr_add@plt>
   31a60:	mov	w20, w0
   31a64:	ldr	x2, [x29, #176]
   31a68:	mov	x1, #0x4                   	// #4
   31a6c:	movk	x1, #0x8000, lsl #48
   31a70:	cmp	x2, x1
   31a74:	ldr	x4, [x29, #104]
   31a78:	b.eq	31b90 <mpfr_fma@@Base+0x6b8>  // b.none
   31a7c:	ldr	x0, [x29, #112]
   31a80:	cbz	x0, 31628 <mpfr_fma@@Base+0x150>
   31a84:	bl	c410 <mpfr_tmp_free@plt>
   31a88:	b	31628 <mpfr_fma@@Base+0x150>
   31a8c:	ldr	x1, [x29, #208]
   31a90:	ldr	w24, [x29, #136]
   31a94:	cbz	x1, 31aa0 <mpfr_fma@@Base+0x5c8>
   31a98:	ldr	x0, [x29, #216]
   31a9c:	bl	cc20 <mpfr_free_func@plt>
   31aa0:	ldr	w0, [x28, #8]
   31aa4:	cmp	w0, w24
   31aa8:	b.eq	31ad0 <mpfr_fma@@Base+0x5f8>  // b.none
   31aac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31ab0:	ldr	x1, [x0, #2544]
   31ab4:	add	x0, x0, #0x9f0
   31ab8:	blr	x1
   31abc:	ldr	x0, [x19, x0]
   31ac0:	ldr	x1, [x29, #96]
   31ac4:	add	x0, x0, #0x2
   31ac8:	cmp	x0, x1
   31acc:	b.ge	319dc <mpfr_fma@@Base+0x504>  // b.tcont
   31ad0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31ad4:	ldr	x1, [x0, #2576]
   31ad8:	add	x0, x0, #0xa10
   31adc:	blr	x1
   31ae0:	str	w27, [x19, x0]
   31ae4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31ae8:	ldr	x1, [x0, #2512]
   31aec:	add	x0, x0, #0x9d0
   31af0:	blr	x1
   31af4:	str	x25, [x19, x0]
   31af8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31afc:	ldr	x1, [x0, #2544]
   31b00:	add	x0, x0, #0x9f0
   31b04:	blr	x1
   31b08:	mov	w2, w24
   31b0c:	mov	w1, w23
   31b10:	str	x26, [x19, x0]
   31b14:	mov	x0, x22
   31b18:	bl	bf40 <mpfr_overflow@plt>
   31b1c:	mov	w20, w0
   31b20:	b	31694 <mpfr_fma@@Base+0x1bc>
   31b24:	ldr	w0, [x28, #8]
   31b28:	mov	w20, #0x0                   	// #0
   31b2c:	str	w0, [x22, #8]
   31b30:	str	x3, [x22, #16]
   31b34:	b	31694 <mpfr_fma@@Base+0x1bc>
   31b38:	ldr	w0, [x28, #8]
   31b3c:	cmp	w0, #0x0
   31b40:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   31b44:	cneg	w1, w1, lt  // lt = tstop
   31b48:	b	318ec <mpfr_fma@@Base+0x414>
   31b4c:	mov	x2, #0x1                   	// #1
   31b50:	mov	x0, x24
   31b54:	str	x2, [x29, #128]
   31b58:	bl	c2b0 <mpfr_setmin@plt>
   31b5c:	ldr	w0, [x20, #8]
   31b60:	ldr	w1, [x21, #8]
   31b64:	mul	w0, w0, w1
   31b68:	str	w0, [x29, #136]
   31b6c:	bl	c270 <mpfr_clear_flags@plt>
   31b70:	b	31600 <mpfr_fma@@Base+0x128>
   31b74:	mov	x1, x20
   31b78:	mov	w3, w23
   31b7c:	mov	x2, x21
   31b80:	mov	x0, x22
   31b84:	bl	bd50 <mpfr_mul@plt>
   31b88:	mov	w20, w0
   31b8c:	b	31694 <mpfr_fma@@Base+0x1bc>
   31b90:	add	x0, x4, #0x20
   31b94:	bl	c170 <mpfr_mpz_clear@plt>
   31b98:	b	31a7c <mpfr_fma@@Base+0x5a4>
   31b9c:	ldr	w3, [x28, #8]
   31ba0:	mov	w2, w23
   31ba4:	mov	x0, x22
   31ba8:	mov	x1, x28
   31bac:	bl	c6a0 <mpfr_set4@plt>
   31bb0:	mov	w20, w0
   31bb4:	b	31694 <mpfr_fma@@Base+0x1bc>
   31bb8:	mov	w3, w27
   31bbc:	mov	x2, x26
   31bc0:	mov	x1, x19
   31bc4:	mov	x0, x19
   31bc8:	bl	bcc0 <__gmpn_lshift@plt>
   31bcc:	ldr	x0, [x29, #96]
   31bd0:	sub	x24, x0, #0x1
   31bd4:	str	x24, [x29, #144]
   31bd8:	b	3185c <mpfr_fma@@Base+0x384>
   31bdc:	cmp	w0, #0x0
   31be0:	mov	w1, #0xffffffff            	// #-1
   31be4:	b.le	3198c <mpfr_fma@@Base+0x4b4>
   31be8:	ldr	w0, [x28, #8]
   31bec:	mov	w1, #0x1                   	// #1
   31bf0:	cmp	w0, w1
   31bf4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   31bf8:	cneg	w1, w1, lt  // lt = tstop
   31bfc:	b	318ec <mpfr_fma@@Base+0x414>
   31c00:	add	x0, x29, #0x70
   31c04:	bl	bdc0 <mpfr_tmp_allocate@plt>
   31c08:	mov	x3, x0
   31c0c:	b	31a18 <mpfr_fma@@Base+0x540>
   31c10:	ldr	x2, [x28, #24]
   31c14:	ldr	x2, [x2]
   31c18:	stp	xzr, x2, [x29, #160]
   31c1c:	tbnz	x8, #63, 31c3c <mpfr_fma@@Base+0x764>
   31c20:	ldr	x2, [x29, #96]
   31c24:	extr	x1, x8, x0, #63
   31c28:	lsl	x0, x0, #1
   31c2c:	stp	x0, x1, [x29, #112]
   31c30:	sub	x24, x2, #0x1
   31c34:	str	x24, [x29, #144]
   31c38:	b	317a0 <mpfr_fma@@Base+0x2c8>
   31c3c:	ldr	x0, [x29, #96]
   31c40:	str	x0, [x29, #144]
   31c44:	b	317a0 <mpfr_fma@@Base+0x2c8>
   31c48:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   31c4c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   31c50:	add	x2, x2, #0x2b0
   31c54:	add	x0, x0, #0x2f8
   31c58:	mov	w1, #0xd5                  	// #213
   31c5c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000031c60 <mpfr_fms@@Base>:
   31c60:	mov	x5, x3
   31c64:	stp	x29, x30, [sp, #-48]!
   31c68:	mov	x29, sp
   31c6c:	ldr	w6, [x5, #8]
   31c70:	add	x3, sp, #0x10
   31c74:	ldr	x8, [x5]
   31c78:	neg	w6, w6
   31c7c:	ldp	x7, x5, [x5, #16]
   31c80:	str	x8, [sp, #16]
   31c84:	str	w6, [sp, #24]
   31c88:	stp	x7, x5, [sp, #32]
   31c8c:	bl	c250 <mpfr_fma@plt>
   31c90:	ldp	x29, x30, [sp], #48
   31c94:	ret

0000000000031c98 <mpfr_hypot@@Base>:
   31c98:	stp	x29, x30, [sp, #-256]!
   31c9c:	mov	x29, sp
   31ca0:	stp	x21, x22, [sp, #32]
   31ca4:	mov	x21, x1
   31ca8:	mov	x22, x2
   31cac:	ldr	x1, [x1, #16]
   31cb0:	stp	x19, x20, [sp, #16]
   31cb4:	mov	x19, x0
   31cb8:	stp	x27, x28, [sp, #80]
   31cbc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   31cc0:	mov	w20, w3
   31cc4:	cmp	x1, x0
   31cc8:	b.le	320f4 <mpfr_hypot@@Base+0x45c>
   31ccc:	ldr	x2, [x2, #16]
   31cd0:	cmp	x2, x0
   31cd4:	b.le	320fc <mpfr_hypot@@Base+0x464>
   31cd8:	mov	x1, x22
   31cdc:	mov	x0, x21
   31ce0:	stp	x25, x26, [sp, #64]
   31ce4:	bl	c9b0 <mpfr_cmpabs@plt>
   31ce8:	cmp	w0, #0x0
   31cec:	csel	x9, x21, x22, ge  // ge = tcont
   31cf0:	csel	x5, x22, x21, ge  // ge = tcont
   31cf4:	ldr	x25, [x19]
   31cf8:	ldr	x21, [x9]
   31cfc:	ldr	x0, [x5, #16]
   31d00:	cmp	x21, x25
   31d04:	ldr	x28, [x9, #16]
   31d08:	csel	x1, x21, x25, ge  // ge = tcont
   31d0c:	sub	x0, x28, x0
   31d10:	cbz	w20, 31d7c <mpfr_hypot@@Base+0xe4>
   31d14:	lsl	x1, x1, #1
   31d18:	cmp	w20, #0x4
   31d1c:	b.ne	32014 <mpfr_hypot@@Base+0x37c>  // b.any
   31d20:	cmp	x0, x1
   31d24:	b.ls	320e8 <mpfr_hypot@@Base+0x450>  // b.plast
   31d28:	mov	x1, x9
   31d2c:	mov	x0, x19
   31d30:	mov	w3, #0x1                   	// #1
   31d34:	mov	w2, #0x2                   	// #2
   31d38:	bl	c6a0 <mpfr_set4@plt>
   31d3c:	cbz	w0, 323f4 <mpfr_hypot@@Base+0x75c>
   31d40:	mrs	x26, tpidr_el0
   31d44:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31d48:	ldr	x1, [x0, #2576]
   31d4c:	add	x0, x0, #0xa10
   31d50:	blr	x1
   31d54:	ldr	w1, [x26, x0]
   31d58:	orr	w1, w1, #0x8
   31d5c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31d60:	ldr	x2, [x0, #2576]
   31d64:	add	x0, x0, #0xa10
   31d68:	blr	x2
   31d6c:	mov	w28, #0x1                   	// #1
   31d70:	str	w1, [x26, x0]
   31d74:	ldp	x25, x26, [sp, #64]
   31d78:	b	3206c <mpfr_hypot@@Base+0x3d4>
   31d7c:	add	x1, x1, #0x1
   31d80:	cmp	x0, x1, lsl #1
   31d84:	b.hi	32024 <mpfr_hypot@@Base+0x38c>  // b.pmore
   31d88:	stp	x23, x24, [sp, #48]
   31d8c:	ldr	x0, [x5]
   31d90:	cmp	x0, x21
   31d94:	csel	x21, x0, x21, ge  // ge = tcont
   31d98:	cmp	x25, #0x1
   31d9c:	b.eq	3223c <mpfr_hypot@@Base+0x5a4>  // b.none
   31da0:	b.le	32634 <mpfr_hypot@@Base+0x99c>
   31da4:	sub	x0, x25, #0x1
   31da8:	mov	w22, #0x40                  	// #64
   31dac:	clz	x0, x0
   31db0:	sub	w22, w22, w0
   31db4:	add	x22, x25, w22, sxtw
   31db8:	add	x22, x22, #0x4
   31dbc:	add	x27, sp, #0xa0
   31dc0:	mov	x1, x22
   31dc4:	mov	x0, x27
   31dc8:	add	x23, sp, #0xc0
   31dcc:	stp	x9, x5, [sp, #120]
   31dd0:	bl	ca80 <mpfr_init2@plt>
   31dd4:	mov	x1, x22
   31dd8:	mov	x0, x23
   31ddc:	add	x24, sp, #0xe0
   31de0:	bl	ca80 <mpfr_init2@plt>
   31de4:	mrs	x26, tpidr_el0
   31de8:	mov	x1, x22
   31dec:	mov	x0, x24
   31df0:	bl	ca80 <mpfr_init2@plt>
   31df4:	ldp	x9, x5, [sp, #120]
   31df8:	mov	x4, #0x40                  	// #64
   31dfc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31e00:	ldr	x1, [x0, #2576]
   31e04:	add	x0, x0, #0xa10
   31e08:	blr	x1
   31e0c:	ldr	w0, [x26, x0]
   31e10:	str	w0, [sp, #116]
   31e14:	mov	x12, #0x1fffffffffffffff    	// #2305843009213693951
   31e18:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   31e1c:	sub	x28, x12, x28
   31e20:	str	x4, [sp, #152]
   31e24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31e28:	ldr	x1, [x0, #2512]
   31e2c:	add	x0, x0, #0x9d0
   31e30:	blr	x1
   31e34:	add	x2, x26, x0
   31e38:	ldr	x0, [x26, x0]
   31e3c:	str	x0, [sp, #96]
   31e40:	str	x3, [x2]
   31e44:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   31e48:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31e4c:	ldr	x4, [x0, #2544]
   31e50:	add	x0, x0, #0x9f0
   31e54:	blr	x4
   31e58:	ldr	x2, [x26, x0]
   31e5c:	str	x1, [x26, x0]
   31e60:	str	x2, [sp, #104]
   31e64:	mov	x1, x9
   31e68:	mov	x2, x28
   31e6c:	mov	w3, #0x1                   	// #1
   31e70:	mov	x0, x23
   31e74:	str	x5, [sp, #128]
   31e78:	str	x9, [sp, #144]
   31e7c:	bl	bb90 <mpfr_mul_2si@plt>
   31e80:	ldr	x5, [sp, #128]
   31e84:	mov	w11, w0
   31e88:	mov	w3, #0x1                   	// #1
   31e8c:	mov	x2, x28
   31e90:	mov	x1, x5
   31e94:	mov	x0, x24
   31e98:	str	w11, [sp, #120]
   31e9c:	str	x5, [sp, #136]
   31ea0:	bl	bb90 <mpfr_mul_2si@plt>
   31ea4:	ldr	w11, [sp, #120]
   31ea8:	mov	x1, x23
   31eac:	mov	w2, #0x1                   	// #1
   31eb0:	orr	w11, w11, w0
   31eb4:	mov	x0, x23
   31eb8:	str	w11, [sp, #128]
   31ebc:	bl	c400 <mpfr_sqr@plt>
   31ec0:	mov	w8, w0
   31ec4:	mov	x3, x23
   31ec8:	mov	x2, x24
   31ecc:	mov	x1, x24
   31ed0:	mov	w4, #0x1                   	// #1
   31ed4:	mov	x0, x27
   31ed8:	str	w8, [sp, #120]
   31edc:	bl	c250 <mpfr_fma@plt>
   31ee0:	ldr	w8, [sp, #120]
   31ee4:	mov	x1, x27
   31ee8:	ldr	w11, [sp, #128]
   31eec:	mov	w2, #0x1                   	// #1
   31ef0:	orr	w8, w8, w0
   31ef4:	mov	x0, x27
   31ef8:	orr	w8, w8, w11
   31efc:	str	w8, [sp, #120]
   31f00:	bl	c930 <mpfr_sqrt@plt>
   31f04:	ldr	w8, [sp, #120]
   31f08:	cmp	x22, x21
   31f0c:	mov	x1, #0x2                   	// #2
   31f10:	orr	w8, w8, w0
   31f14:	mov	x0, #0x4                   	// #4
   31f18:	csel	x2, x0, x1, lt  // lt = tstop
   31f1c:	ldp	x5, x9, [sp, #136]
   31f20:	cbnz	w8, 321a4 <mpfr_hypot@@Base+0x50c>
   31f24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31f28:	ldr	x1, [x0, #2576]
   31f2c:	add	x0, x0, #0xa10
   31f30:	blr	x1
   31f34:	mov	x2, x28
   31f38:	mov	x1, x27
   31f3c:	mov	w3, w20
   31f40:	add	x21, x26, x0
   31f44:	str	wzr, [x26, x0]
   31f48:	mov	x0, x19
   31f4c:	bl	c420 <mpfr_div_2si@plt>
   31f50:	cmp	w0, #0x0
   31f54:	mov	w28, w0
   31f58:	cset	w22, ne  // ne = any
   31f5c:	mov	x0, x27
   31f60:	ldr	w21, [x21]
   31f64:	bl	c070 <mpfr_clear@plt>
   31f68:	mov	x0, x24
   31f6c:	bl	c070 <mpfr_clear@plt>
   31f70:	mov	x0, x23
   31f74:	bl	c070 <mpfr_clear@plt>
   31f78:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31f7c:	ldr	x1, [x0, #2576]
   31f80:	add	x0, x0, #0xa10
   31f84:	blr	x1
   31f88:	ldr	w1, [sp, #116]
   31f8c:	str	w1, [x26, x0]
   31f90:	add	x1, x26, x0
   31f94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31f98:	ldr	x2, [x0, #2512]
   31f9c:	add	x0, x0, #0x9d0
   31fa0:	blr	x2
   31fa4:	ldr	x2, [sp, #96]
   31fa8:	str	x2, [x26, x0]
   31fac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   31fb0:	ldr	x2, [x0, #2544]
   31fb4:	add	x0, x0, #0x9f0
   31fb8:	blr	x2
   31fbc:	ldr	x2, [sp, #104]
   31fc0:	str	x2, [x26, x0]
   31fc4:	tbnz	w21, #1, 32244 <mpfr_hypot@@Base+0x5ac>
   31fc8:	ldr	x0, [x19, #16]
   31fcc:	ldr	x1, [sp, #96]
   31fd0:	cmp	x1, x0
   31fd4:	ldr	x1, [sp, #104]
   31fd8:	ccmp	x1, x0, #0x1, le
   31fdc:	b.ge	32084 <mpfr_hypot@@Base+0x3ec>  // b.tcont
   31fe0:	mov	w2, w20
   31fe4:	mov	w1, w28
   31fe8:	mov	x0, x19
   31fec:	bl	cb30 <mpfr_check_range@plt>
   31ff0:	mov	w28, w0
   31ff4:	mov	w0, w28
   31ff8:	ldp	x19, x20, [sp, #16]
   31ffc:	ldp	x21, x22, [sp, #32]
   32000:	ldp	x23, x24, [sp, #48]
   32004:	ldp	x25, x26, [sp, #64]
   32008:	ldp	x27, x28, [sp, #80]
   3200c:	ldp	x29, x30, [sp], #256
   32010:	ret
   32014:	cmp	x0, x1
   32018:	b.ls	31d88 <mpfr_hypot@@Base+0xf0>  // b.plast
   3201c:	cmp	w20, #0x2
   32020:	b.eq	31d28 <mpfr_hypot@@Base+0x90>  // b.none
   32024:	cmp	x21, x25
   32028:	b.gt	32258 <mpfr_hypot@@Base+0x5c0>
   3202c:	mov	w2, w20
   32030:	mov	x1, x9
   32034:	mov	x0, x19
   32038:	mov	w3, #0x1                   	// #1
   3203c:	bl	c6a0 <mpfr_set4@plt>
   32040:	mov	w28, #0xffffffff            	// #-1
   32044:	mrs	x1, tpidr_el0
   32048:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3204c:	ldr	x2, [x0, #2576]
   32050:	add	x0, x0, #0xa10
   32054:	blr	x2
   32058:	add	x0, x1, x0
   3205c:	ldp	x25, x26, [sp, #64]
   32060:	ldr	w1, [x0]
   32064:	orr	w1, w1, #0x8
   32068:	str	w1, [x0]
   3206c:	mov	w0, w28
   32070:	ldp	x19, x20, [sp, #16]
   32074:	ldp	x21, x22, [sp, #32]
   32078:	ldp	x27, x28, [sp, #80]
   3207c:	ldp	x29, x30, [sp], #256
   32080:	ret
   32084:	cbz	w22, 320c4 <mpfr_hypot@@Base+0x42c>
   32088:	ldr	w0, [sp, #116]
   3208c:	ldp	x23, x24, [sp, #48]
   32090:	orr	w25, w0, #0x8
   32094:	ldp	x19, x20, [sp, #16]
   32098:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3209c:	ldr	x1, [x0, #2576]
   320a0:	add	x0, x0, #0xa10
   320a4:	blr	x1
   320a8:	str	w25, [x26, x0]
   320ac:	mov	w0, w28
   320b0:	ldp	x21, x22, [sp, #32]
   320b4:	ldp	x25, x26, [sp, #64]
   320b8:	ldp	x27, x28, [sp, #80]
   320bc:	ldp	x29, x30, [sp], #256
   320c0:	ret
   320c4:	mov	w28, #0x0                   	// #0
   320c8:	mov	w0, w28
   320cc:	ldp	x19, x20, [sp, #16]
   320d0:	ldp	x21, x22, [sp, #32]
   320d4:	ldp	x23, x24, [sp, #48]
   320d8:	ldp	x25, x26, [sp, #64]
   320dc:	ldp	x27, x28, [sp, #80]
   320e0:	ldp	x29, x30, [sp], #256
   320e4:	ret
   320e8:	mov	w20, #0x2                   	// #2
   320ec:	stp	x23, x24, [sp, #48]
   320f0:	b	31d8c <mpfr_hypot@@Base+0xf4>
   320f4:	b.eq	32144 <mpfr_hypot@@Base+0x4ac>  // b.none
   320f8:	ldr	x2, [x2, #16]
   320fc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   32100:	cmp	x2, x0
   32104:	b.eq	32144 <mpfr_hypot@@Base+0x4ac>  // b.none
   32108:	mov	x3, #0x2                   	// #2
   3210c:	movk	x3, #0x8000, lsl #48
   32110:	cmp	x2, x3
   32114:	ccmp	x1, x3, #0x4, ne  // ne = any
   32118:	b.eq	32174 <mpfr_hypot@@Base+0x4dc>  // b.none
   3211c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   32120:	mov	w2, w20
   32124:	cmp	x1, x0
   32128:	b.eq	3215c <mpfr_hypot@@Base+0x4c4>  // b.none
   3212c:	mov	x1, x21
   32130:	mov	x0, x19
   32134:	mov	w3, #0x1                   	// #1
   32138:	bl	c6a0 <mpfr_set4@plt>
   3213c:	mov	w28, w0
   32140:	b	3206c <mpfr_hypot@@Base+0x3d4>
   32144:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   32148:	mov	w1, #0x1                   	// #1
   3214c:	mov	w28, #0x0                   	// #0
   32150:	str	w1, [x19, #8]
   32154:	str	x0, [x19, #16]
   32158:	b	3206c <mpfr_hypot@@Base+0x3d4>
   3215c:	mov	x1, x22
   32160:	mov	x0, x19
   32164:	mov	w3, #0x1                   	// #1
   32168:	bl	c6a0 <mpfr_set4@plt>
   3216c:	mov	w28, w0
   32170:	b	3206c <mpfr_hypot@@Base+0x3d4>
   32174:	mrs	x1, tpidr_el0
   32178:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3217c:	ldr	x2, [x0, #2576]
   32180:	add	x0, x0, #0xa10
   32184:	blr	x2
   32188:	add	x0, x1, x0
   3218c:	mov	w28, #0x0                   	// #0
   32190:	str	x3, [x19, #16]
   32194:	ldr	w1, [x0]
   32198:	orr	w1, w1, #0x4
   3219c:	str	w1, [x0]
   321a0:	b	3206c <mpfr_hypot@@Base+0x3d4>
   321a4:	ldr	x0, [sp, #176]
   321a8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   321ac:	cmp	x0, x1
   321b0:	b.le	321e4 <mpfr_hypot@@Base+0x54c>
   321b4:	ldr	x1, [sp, #160]
   321b8:	cmp	w20, #0x0
   321bc:	ldr	x0, [sp, #184]
   321c0:	sub	x1, x1, #0x1
   321c4:	sub	x2, x22, x2
   321c8:	cinc	x3, x25, eq  // eq = none
   321cc:	asr	x1, x1, #6
   321d0:	stp	x9, x5, [sp, #120]
   321d4:	add	x1, x1, #0x1
   321d8:	bl	c370 <mpfr_round_p@plt>
   321dc:	ldp	x9, x5, [sp, #120]
   321e0:	cbnz	w0, 31f24 <mpfr_hypot@@Base+0x28c>
   321e4:	ldr	x1, [sp, #152]
   321e8:	mov	x0, #0xfffffffffffffeff    	// #-257
   321ec:	movk	x0, #0x7fff, lsl #48
   321f0:	sub	x0, x0, x22
   321f4:	cmp	x0, x1
   321f8:	b.lt	32600 <mpfr_hypot@@Base+0x968>  // b.tstop
   321fc:	add	x22, x22, x1
   32200:	mov	x0, x27
   32204:	mov	x1, x22
   32208:	stp	x9, x5, [sp, #120]
   3220c:	add	x2, x22, x22, lsr #63
   32210:	asr	x2, x2, #1
   32214:	str	x2, [sp, #152]
   32218:	bl	bed0 <mpfr_set_prec@plt>
   3221c:	mov	x1, x22
   32220:	mov	x0, x23
   32224:	bl	bed0 <mpfr_set_prec@plt>
   32228:	mov	x1, x22
   3222c:	mov	x0, x24
   32230:	bl	bed0 <mpfr_set_prec@plt>
   32234:	ldp	x9, x5, [sp, #120]
   32238:	b	31e64 <mpfr_hypot@@Base+0x1cc>
   3223c:	mov	x22, x25
   32240:	b	31db8 <mpfr_hypot@@Base+0x120>
   32244:	ldr	w0, [sp, #116]
   32248:	orr	w0, w0, #0x2
   3224c:	str	w0, [x1]
   32250:	str	w0, [sp, #116]
   32254:	b	31fc8 <mpfr_hypot@@Base+0x330>
   32258:	sub	x21, x21, #0x1
   3225c:	sub	x8, x25, #0x1
   32260:	ldr	x9, [x9, #24]
   32264:	asr	x8, x8, #6
   32268:	asr	x21, x21, #6
   3226c:	mov	w0, #0x1                   	// #1
   32270:	sub	x6, x21, x8
   32274:	str	w0, [x19, #8]
   32278:	str	x28, [x19, #16]
   3227c:	neg	w7, w25
   32280:	ands	w7, w7, #0x3f
   32284:	add	x2, x8, #0x1
   32288:	add	x1, x9, x6, lsl #3
   3228c:	ldr	x4, [x19, #24]
   32290:	b.eq	32590 <mpfr_hypot@@Base+0x8f8>  // b.none
   32294:	ldr	x3, [x9, x6, lsl #3]
   32298:	sub	w5, w7, #0x1
   3229c:	mov	x0, #0x1                   	// #1
   322a0:	cmp	w20, #0x0
   322a4:	lsl	x0, x0, x5
   322a8:	and	x10, x3, x0
   322ac:	sub	x0, x0, #0x1
   322b0:	ccmp	x10, #0x0, #0x4, ne  // ne = any
   322b4:	and	x0, x0, x3
   322b8:	b.ne	322e8 <mpfr_hypot@@Base+0x650>  // b.any
   322bc:	cmp	x0, #0x0
   322c0:	mov	x3, x6
   322c4:	ccmp	x6, #0x0, #0x4, eq  // eq = none
   322c8:	b.eq	322e8 <mpfr_hypot@@Base+0x650>  // b.none
   322cc:	mvn	x7, x6
   322d0:	add	x7, x1, x7, lsl #3
   322d4:	nop
   322d8:	ldr	x0, [x7, x3, lsl #3]
   322dc:	subs	x3, x3, #0x1
   322e0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   322e4:	b.eq	322d8 <mpfr_hypot@@Base+0x640>  // b.none
   322e8:	mov	x22, #0x2                   	// #2
   322ec:	lsl	x22, x22, x5
   322f0:	cmp	w20, #0x5
   322f4:	b.eq	323c0 <mpfr_hypot@@Base+0x728>  // b.none
   322f8:	cbnz	w20, 32428 <mpfr_hypot@@Base+0x790>
   322fc:	cbz	x10, 323c0 <mpfr_hypot@@Base+0x728>
   32300:	ldr	x0, [x9, x6, lsl #3]
   32304:	adds	x0, x0, x22
   32308:	str	x0, [x4]
   3230c:	cset	x3, cs  // cs = hs, nlast
   32310:	b.cc	32440 <mpfr_hypot@@Base+0x7a8>  // b.lo, b.ul, b.last
   32314:	mov	x0, #0x1                   	// #1
   32318:	b	32334 <mpfr_hypot@@Base+0x69c>
   3231c:	ldr	x3, [x1, x0, lsl #3]
   32320:	add	x5, x0, #0x1
   32324:	add	x3, x3, #0x1
   32328:	str	x3, [x4, x0, lsl #3]
   3232c:	cbnz	x3, 324e0 <mpfr_hypot@@Base+0x848>
   32330:	mov	x0, x5
   32334:	cmp	x0, x2
   32338:	b.ne	3231c <mpfr_hypot@@Base+0x684>  // b.any
   3233c:	add	x1, x4, x0, lsl #3
   32340:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   32344:	mrs	x26, tpidr_el0
   32348:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3234c:	ldr	x3, [x0, #2544]
   32350:	add	x0, x0, #0x9f0
   32354:	blr	x3
   32358:	stur	x2, [x1, #-8]
   3235c:	ldr	x1, [x19, #16]
   32360:	ldr	x2, [x26, x0]
   32364:	add	x0, x1, #0x1
   32368:	str	x0, [x19, #16]
   3236c:	cmp	x0, x2
   32370:	b.gt	32618 <mpfr_hypot@@Base+0x980>
   32374:	ldr	x0, [x4]
   32378:	neg	x5, x22
   3237c:	and	x0, x5, x0
   32380:	mov	w28, #0x1                   	// #1
   32384:	str	x0, [x4]
   32388:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3238c:	ldr	x1, [x0, #2576]
   32390:	add	x0, x0, #0xa10
   32394:	blr	x1
   32398:	add	x0, x26, x0
   3239c:	ldp	x25, x26, [sp, #64]
   323a0:	ldr	w1, [x0]
   323a4:	orr	w1, w1, #0x8
   323a8:	str	w1, [x0]
   323ac:	b	3206c <mpfr_hypot@@Base+0x3d4>
   323b0:	cmp	w20, #0x5
   323b4:	mov	x22, #0x1                   	// #1
   323b8:	b.ne	32428 <mpfr_hypot@@Base+0x790>  // b.any
   323bc:	nop
   323c0:	cmp	x4, x1
   323c4:	b.eq	323d8 <mpfr_hypot@@Base+0x740>  // b.none
   323c8:	mov	x0, x4
   323cc:	lsl	x2, x2, #3
   323d0:	bl	ba10 <memcpy@plt>
   323d4:	mov	x4, x0
   323d8:	ldr	x0, [x4]
   323dc:	neg	x5, x22
   323e0:	mrs	x26, tpidr_el0
   323e4:	mov	w28, #0xffffffff            	// #-1
   323e8:	and	x0, x0, x5
   323ec:	str	x0, [x4]
   323f0:	b	32388 <mpfr_hypot@@Base+0x6f0>
   323f4:	mov	x0, x19
   323f8:	bl	c670 <mpfr_nexttoinf@plt>
   323fc:	ldr	x1, [x19, #16]
   32400:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   32404:	mrs	x26, tpidr_el0
   32408:	cmp	x1, x0
   3240c:	b.eq	325d8 <mpfr_hypot@@Base+0x940>  // b.none
   32410:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32414:	ldr	x1, [x0, #2576]
   32418:	add	x0, x0, #0xa10
   3241c:	blr	x1
   32420:	ldr	w1, [x26, x0]
   32424:	b	31d58 <mpfr_hypot@@Base+0xc0>
   32428:	and	w3, w20, #0xfffffffd
   3242c:	cmp	w3, #0x1
   32430:	b.eq	323c0 <mpfr_hypot@@Base+0x728>  // b.none
   32434:	orr	x0, x10, x0
   32438:	cbnz	x0, 32300 <mpfr_hypot@@Base+0x668>
   3243c:	b	323c0 <mpfr_hypot@@Base+0x728>
   32440:	cmp	x4, x1
   32444:	mrs	x26, tpidr_el0
   32448:	b.eq	32378 <mpfr_hypot@@Base+0x6e0>  // b.none
   3244c:	cmp	x2, #0x1
   32450:	b.eq	32378 <mpfr_hypot@@Base+0x6e0>  // b.none
   32454:	sub	x6, x21, x8
   32458:	mov	x0, #0x1                   	// #1
   3245c:	add	x6, x6, #0x3
   32460:	sub	x5, x0, x8
   32464:	add	x21, x5, x21
   32468:	add	x5, x4, #0x8
   3246c:	add	x6, x9, x6, lsl #3
   32470:	add	x7, x4, #0x18
   32474:	cmp	x6, x5
   32478:	add	x9, x9, x21, lsl #3
   3247c:	ccmp	x7, x9, #0x0, hi  // hi = pmore
   32480:	sub	x6, x8, #0x1
   32484:	ccmp	x6, #0x9, #0x0, ls  // ls = plast
   32488:	b.ls	324c8 <mpfr_hypot@@Base+0x830>  // b.plast
   3248c:	lsr	x0, x8, #1
   32490:	lsl	x0, x0, #4
   32494:	nop
   32498:	ldr	q0, [x9, x3]
   3249c:	str	q0, [x5, x3]
   324a0:	add	x3, x3, #0x10
   324a4:	cmp	x3, x0
   324a8:	b.ne	32498 <mpfr_hypot@@Base+0x800>  // b.any
   324ac:	orr	x0, x8, #0x1
   324b0:	tbz	w8, #0, 324bc <mpfr_hypot@@Base+0x824>
   324b4:	ldr	x1, [x1, x0, lsl #3]
   324b8:	str	x1, [x4, x0, lsl #3]
   324bc:	mrs	x26, tpidr_el0
   324c0:	ldr	x0, [x4]
   324c4:	b	32378 <mpfr_hypot@@Base+0x6e0>
   324c8:	ldr	x3, [x1, x0, lsl #3]
   324cc:	str	x3, [x4, x0, lsl #3]
   324d0:	add	x0, x0, #0x1
   324d4:	cmp	x2, x0
   324d8:	b.ne	324c8 <mpfr_hypot@@Base+0x830>  // b.any
   324dc:	b	324bc <mpfr_hypot@@Base+0x824>
   324e0:	cmp	x4, x1
   324e4:	b.eq	325f4 <mpfr_hypot@@Base+0x95c>  // b.none
   324e8:	cmp	x8, x0
   324ec:	b.le	324bc <mpfr_hypot@@Base+0x824>
   324f0:	add	x0, x0, #0x3
   324f4:	sub	x7, x8, x5
   324f8:	lsl	x0, x0, #3
   324fc:	sub	x3, x0, #0x10
   32500:	add	x9, x4, x0
   32504:	add	x6, x1, x3
   32508:	add	x0, x1, x0
   3250c:	cmp	x6, x9
   32510:	add	x3, x4, x3
   32514:	ccmp	x3, x0, #0x2, cc  // cc = lo, ul, last
   32518:	cset	w9, cs  // cs = hs, nlast
   3251c:	cmp	x7, #0x9
   32520:	ccmp	x8, x5, #0x1, hi  // hi = pmore
   32524:	cset	w0, ge  // ge = tcont
   32528:	tst	w9, w0
   3252c:	b.eq	32578 <mpfr_hypot@@Base+0x8e0>  // b.none
   32530:	sub	x2, x2, x5
   32534:	cmp	x8, x5
   32538:	csinc	x7, x2, xzr, ge  // ge = tcont
   3253c:	mov	x0, #0x0                   	// #0
   32540:	lsr	x2, x7, #1
   32544:	lsl	x2, x2, #4
   32548:	ldr	q0, [x6, x0]
   3254c:	str	q0, [x3, x0]
   32550:	add	x0, x0, #0x10
   32554:	cmp	x2, x0
   32558:	b.ne	32548 <mpfr_hypot@@Base+0x8b0>  // b.any
   3255c:	and	x0, x7, #0xfffffffffffffffe
   32560:	add	x5, x0, x5
   32564:	cmp	x0, x7
   32568:	b.eq	324bc <mpfr_hypot@@Base+0x824>  // b.none
   3256c:	ldr	x0, [x1, x5, lsl #3]
   32570:	str	x0, [x4, x5, lsl #3]
   32574:	b	324bc <mpfr_hypot@@Base+0x824>
   32578:	ldr	x0, [x1, x5, lsl #3]
   3257c:	str	x0, [x4, x5, lsl #3]
   32580:	cmp	x8, x5
   32584:	add	x5, x5, #0x1
   32588:	b.gt	32578 <mpfr_hypot@@Base+0x8e0>
   3258c:	b	324bc <mpfr_hypot@@Base+0x824>
   32590:	ldur	x0, [x1, #-8]
   32594:	cmp	w20, #0x0
   32598:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   3259c:	and	x10, x0, #0x8000000000000000
   325a0:	and	x0, x0, #0x7fffffffffffffff
   325a4:	b.lt	323b0 <mpfr_hypot@@Base+0x718>  // b.tstop
   325a8:	subs	x3, x6, #0x1
   325ac:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   325b0:	b.ne	325d0 <mpfr_hypot@@Base+0x938>  // b.any
   325b4:	mvn	x5, x6
   325b8:	add	x5, x1, x5, lsl #3
   325bc:	nop
   325c0:	ldr	x0, [x5, x3, lsl #3]
   325c4:	subs	x3, x3, #0x1
   325c8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   325cc:	b.eq	325c0 <mpfr_hypot@@Base+0x928>  // b.none
   325d0:	mov	x22, #0x1                   	// #1
   325d4:	b	322f0 <mpfr_hypot@@Base+0x658>
   325d8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   325dc:	ldr	x1, [x0, #2576]
   325e0:	add	x0, x0, #0xa10
   325e4:	blr	x1
   325e8:	ldr	w1, [x26, x0]
   325ec:	orr	w1, w1, #0x2
   325f0:	b	31d58 <mpfr_hypot@@Base+0xc0>
   325f4:	mrs	x26, tpidr_el0
   325f8:	ldr	x0, [x4]
   325fc:	b	32378 <mpfr_hypot@@Base+0x6e0>
   32600:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   32604:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   32608:	add	x2, x2, #0x470
   3260c:	add	x0, x0, #0x300
   32610:	mov	w1, #0xbd                  	// #189
   32614:	bl	cb40 <mpfr_assert_fail@plt>
   32618:	mov	w1, w20
   3261c:	mov	x0, x19
   32620:	mov	w2, #0x1                   	// #1
   32624:	bl	bf40 <mpfr_overflow@plt>
   32628:	mov	w28, w0
   3262c:	ldp	x25, x26, [sp, #64]
   32630:	b	3206c <mpfr_hypot@@Base+0x3d4>
   32634:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   32638:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3263c:	add	x2, x2, #0x958
   32640:	add	x0, x0, #0x300
   32644:	mov	w1, #0x8c                  	// #140
   32648:	bl	cb40 <mpfr_assert_fail@plt>
   3264c:	nop

0000000000032650 <mpfr_log1p@@Base>:
   32650:	stp	x29, x30, [sp, #-240]!
   32654:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   32658:	mov	x29, sp
   3265c:	stp	x27, x28, [sp, #80]
   32660:	mov	w27, w2
   32664:	ldr	x2, [x1, #16]
   32668:	stp	x19, x20, [sp, #16]
   3266c:	mov	x20, x1
   32670:	stp	x23, x24, [sp, #48]
   32674:	cmp	x2, x3
   32678:	mov	x23, x0
   3267c:	b.le	32a60 <mpfr_log1p@@Base+0x410>
   32680:	tbz	x2, #63, 32698 <mpfr_log1p@@Base+0x48>
   32684:	ldr	w3, [x1, #8]
   32688:	cmp	w3, #0x0
   3268c:	b.le	32960 <mpfr_log1p@@Base+0x310>
   32690:	mvn	x2, x2
   32694:	cbnz	x2, 32a00 <mpfr_log1p@@Base+0x3b0>
   32698:	mov	x0, x20
   3269c:	mov	x2, #0x0                   	// #0
   326a0:	mov	x1, #0xffffffffffffffff    	// #-1
   326a4:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   326a8:	mov	w19, w0
   326ac:	cmp	w0, #0x0
   326b0:	b.le	32a98 <mpfr_log1p@@Base+0x448>
   326b4:	stp	x21, x22, [sp, #32]
   326b8:	mrs	x22, tpidr_el0
   326bc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   326c0:	ldr	x1, [x0, #2576]
   326c4:	add	x0, x0, #0xa10
   326c8:	blr	x1
   326cc:	stp	x25, x26, [sp, #64]
   326d0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   326d4:	ldr	w0, [x22, x0]
   326d8:	str	w0, [sp, #116]
   326dc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   326e0:	ldr	x25, [x23]
   326e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   326e8:	ldr	x2, [x0, #2512]
   326ec:	add	x0, x0, #0x9d0
   326f0:	blr	x2
   326f4:	add	x2, x22, x0
   326f8:	ldr	x0, [x22, x0]
   326fc:	str	x0, [sp, #120]
   32700:	str	x3, [x2]
   32704:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32708:	ldr	x4, [x0, #2544]
   3270c:	add	x0, x0, #0x9f0
   32710:	blr	x4
   32714:	ldr	x2, [x22, x0]
   32718:	str	x1, [x22, x0]
   3271c:	str	x2, [sp, #128]
   32720:	cmp	x25, #0x1
   32724:	b.eq	32ad4 <mpfr_log1p@@Base+0x484>  // b.none
   32728:	b.le	32b90 <mpfr_log1p@@Base+0x540>
   3272c:	sub	x0, x25, #0x1
   32730:	mov	w19, #0x40                  	// #64
   32734:	clz	x0, x0
   32738:	sub	w19, w19, w0
   3273c:	add	x19, x25, w19, sxtw
   32740:	ldr	x0, [x20, #16]
   32744:	add	x19, x19, #0x6
   32748:	mov	x1, #0x40                  	// #64
   3274c:	add	x21, sp, #0x90
   32750:	cmp	x0, #0x0
   32754:	sub	x0, x19, x0
   32758:	csel	x19, x0, x19, lt  // lt = tstop
   3275c:	add	x26, sp, #0xb0
   32760:	add	x28, sp, #0xd0
   32764:	mov	x0, x21
   32768:	str	x1, [sp, #136]
   3276c:	mov	x1, x19
   32770:	bl	ca80 <mpfr_init2@plt>
   32774:	mov	x0, x25
   32778:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   3277c:	add	w0, w0, #0x1
   32780:	ldr	x1, [x20, #16]
   32784:	sxtw	x0, w0
   32788:	sdiv	x0, x25, x0
   3278c:	neg	x0, x0
   32790:	cmp	x1, x0
   32794:	b.le	328b4 <mpfr_log1p@@Base+0x264>
   32798:	mov	x1, x20
   3279c:	mov	x0, x21
   327a0:	mov	w3, #0x0                   	// #0
   327a4:	mov	x2, #0x1                   	// #1
   327a8:	bl	c260 <mpfr_add_ui@plt>
   327ac:	cbz	w0, 32b60 <mpfr_log1p@@Base+0x510>
   327b0:	mov	x1, x21
   327b4:	mov	w2, #0x0                   	// #0
   327b8:	mov	x0, x21
   327bc:	bl	c090 <mpfr_log@plt>
   327c0:	ldr	x0, [sp, #160]
   327c4:	mov	x1, #0x2                   	// #2
   327c8:	subs	x2, x1, x0
   327cc:	csel	x2, x2, xzr, pl  // pl = nfrst
   327d0:	sub	x2, x19, x2
   327d4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   327d8:	cmp	x0, x1
   327dc:	b.le	32a28 <mpfr_log1p@@Base+0x3d8>
   327e0:	ldr	x1, [sp, #144]
   327e4:	cmp	w27, #0x0
   327e8:	ldr	x0, [sp, #168]
   327ec:	sub	x1, x1, #0x1
   327f0:	cinc	x3, x25, eq  // eq = none
   327f4:	asr	x1, x1, #6
   327f8:	add	x1, x1, #0x1
   327fc:	bl	c370 <mpfr_round_p@plt>
   32800:	cbz	w0, 32a28 <mpfr_log1p@@Base+0x3d8>
   32804:	ldr	w3, [sp, #152]
   32808:	mov	w2, w27
   3280c:	mov	x1, x21
   32810:	mov	x0, x23
   32814:	bl	c6a0 <mpfr_set4@plt>
   32818:	mov	w19, w0
   3281c:	mov	x0, x21
   32820:	bl	c070 <mpfr_clear@plt>
   32824:	ldr	x1, [x23, #16]
   32828:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3282c:	ldr	x2, [x0, #2576]
   32830:	add	x0, x0, #0xa10
   32834:	blr	x2
   32838:	ldr	w2, [sp, #116]
   3283c:	str	w2, [x22, x0]
   32840:	add	x2, x22, x0
   32844:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32848:	ldr	x3, [x0, #2512]
   3284c:	add	x0, x0, #0x9d0
   32850:	blr	x3
   32854:	ldr	x3, [sp, #120]
   32858:	str	x3, [x22, x0]
   3285c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32860:	ldr	x4, [x0, #2544]
   32864:	add	x0, x0, #0x9f0
   32868:	blr	x4
   3286c:	ldr	x4, [sp, #128]
   32870:	str	x4, [x22, x0]
   32874:	cmp	x4, x1
   32878:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   3287c:	b.le	32998 <mpfr_log1p@@Base+0x348>
   32880:	mov	w1, w19
   32884:	mov	w2, w27
   32888:	mov	x0, x23
   3288c:	bl	cb30 <mpfr_check_range@plt>
   32890:	mov	w19, w0
   32894:	ldp	x21, x22, [sp, #32]
   32898:	ldp	x25, x26, [sp, #64]
   3289c:	mov	w0, w19
   328a0:	ldp	x19, x20, [sp, #16]
   328a4:	ldp	x23, x24, [sp, #48]
   328a8:	ldp	x27, x28, [sp, #80]
   328ac:	ldp	x29, x30, [sp], #240
   328b0:	ret
   328b4:	ldr	x0, [sp, #144]
   328b8:	mov	x24, #0x2                   	// #2
   328bc:	mov	x1, x0
   328c0:	mov	x0, x26
   328c4:	str	x1, [sp, #104]
   328c8:	bl	ca80 <mpfr_init2@plt>
   328cc:	ldr	x1, [sp, #104]
   328d0:	mov	x0, x28
   328d4:	bl	ca80 <mpfr_init2@plt>
   328d8:	ldr	w3, [x20, #8]
   328dc:	mov	x1, x20
   328e0:	mov	w2, #0x5                   	// #5
   328e4:	mov	x0, x26
   328e8:	bl	c6a0 <mpfr_set4@plt>
   328ec:	ldr	w3, [sp, #184]
   328f0:	mov	x1, x26
   328f4:	mov	x0, x21
   328f8:	mov	w2, #0x5                   	// #5
   328fc:	bl	c6a0 <mpfr_set4@plt>
   32900:	mov	x2, x20
   32904:	mov	x1, x26
   32908:	mov	w3, #0x5                   	// #5
   3290c:	mov	x0, x26
   32910:	bl	bd50 <mpfr_mul@plt>
   32914:	mov	x2, x24
   32918:	mov	x1, x26
   3291c:	mov	x0, x28
   32920:	mov	w3, #0x5                   	// #5
   32924:	bl	cc60 <mpfr_div_ui@plt>
   32928:	ldr	x2, [sp, #104]
   3292c:	ldr	x0, [sp, #160]
   32930:	ldr	x1, [sp, #224]
   32934:	sub	x0, x0, x2
   32938:	cmp	x1, x0
   3293c:	b.le	329c8 <mpfr_log1p@@Base+0x378>
   32940:	mov	x2, x28
   32944:	mov	x1, x21
   32948:	mov	x0, x21
   3294c:	mov	w3, #0x5                   	// #5
   32950:	tbz	w24, #0, 3298c <mpfr_log1p@@Base+0x33c>
   32954:	add	x24, x24, #0x1
   32958:	bl	c1a0 <mpfr_add@plt>
   3295c:	b	32900 <mpfr_log1p@@Base+0x2b0>
   32960:	ldr	x3, [x0]
   32964:	neg	x2, x2
   32968:	add	x3, x3, #0x1
   3296c:	cmp	x2, x3
   32970:	b.ls	32698 <mpfr_log1p@@Base+0x48>  // b.plast
   32974:	mov	w4, w27
   32978:	mov	w3, #0x1                   	// #1
   3297c:	bl	c540 <mpfr_round_near_x@plt>
   32980:	mov	w19, w0
   32984:	cbz	w0, 32698 <mpfr_log1p@@Base+0x48>
   32988:	b	3289c <mpfr_log1p@@Base+0x24c>
   3298c:	add	x24, x24, #0x1
   32990:	bl	bb70 <mpfr_sub@plt>
   32994:	b	32900 <mpfr_log1p@@Base+0x2b0>
   32998:	cbz	w19, 32894 <mpfr_log1p@@Base+0x244>
   3299c:	ldr	w0, [sp, #116]
   329a0:	ldp	x21, x22, [sp, #32]
   329a4:	orr	w0, w0, #0x8
   329a8:	ldp	x25, x26, [sp, #64]
   329ac:	str	w0, [x2]
   329b0:	mov	w0, w19
   329b4:	ldp	x19, x20, [sp, #16]
   329b8:	ldp	x23, x24, [sp, #48]
   329bc:	ldp	x27, x28, [sp, #80]
   329c0:	ldp	x29, x30, [sp], #240
   329c4:	ret
   329c8:	add	x0, x24, #0x4
   329cc:	lsl	x0, x0, #1
   329d0:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   329d4:	ldr	x1, [sp, #104]
   329d8:	sxtw	x24, w0
   329dc:	cmp	x1, w0, sxtw
   329e0:	b.le	32b10 <mpfr_log1p@@Base+0x4c0>
   329e4:	mov	x0, x26
   329e8:	bl	c070 <mpfr_clear@plt>
   329ec:	mov	x0, x28
   329f0:	bl	c070 <mpfr_clear@plt>
   329f4:	sub	x2, x19, x24
   329f8:	ldr	x0, [sp, #160]
   329fc:	b	327d4 <mpfr_log1p@@Base+0x184>
   32a00:	ldr	x3, [x0]
   32a04:	add	x3, x3, #0x1
   32a08:	cmp	x2, x3
   32a0c:	b.ls	32698 <mpfr_log1p@@Base+0x48>  // b.plast
   32a10:	mov	w4, w27
   32a14:	mov	w3, #0x0                   	// #0
   32a18:	bl	c540 <mpfr_round_near_x@plt>
   32a1c:	mov	w19, w0
   32a20:	cbz	w0, 32698 <mpfr_log1p@@Base+0x48>
   32a24:	b	3289c <mpfr_log1p@@Base+0x24c>
   32a28:	ldr	x1, [sp, #136]
   32a2c:	mov	x0, #0xfffffffffffffeff    	// #-257
   32a30:	movk	x0, #0x7fff, lsl #48
   32a34:	sub	x0, x0, x19
   32a38:	cmp	x0, x1
   32a3c:	b.lt	32b78 <mpfr_log1p@@Base+0x528>  // b.tstop
   32a40:	add	x19, x19, x1
   32a44:	mov	x0, x21
   32a48:	mov	x1, x19
   32a4c:	add	x2, x19, x19, lsr #63
   32a50:	asr	x2, x2, #1
   32a54:	str	x2, [sp, #136]
   32a58:	bl	bed0 <mpfr_set_prec@plt>
   32a5c:	b	32774 <mpfr_log1p@@Base+0x124>
   32a60:	mov	x0, #0x2                   	// #2
   32a64:	movk	x0, #0x8000, lsl #48
   32a68:	cmp	x2, x0
   32a6c:	b.eq	32b28 <mpfr_log1p@@Base+0x4d8>  // b.none
   32a70:	cmp	x2, x3
   32a74:	b.ne	32af8 <mpfr_log1p@@Base+0x4a8>  // b.any
   32a78:	ldr	w0, [x1, #8]
   32a7c:	cmp	w0, #0x0
   32a80:	b.le	32b28 <mpfr_log1p@@Base+0x4d8>
   32a84:	mov	w0, #0x1                   	// #1
   32a88:	mov	w19, #0x0                   	// #0
   32a8c:	str	w0, [x23, #8]
   32a90:	str	x2, [x23, #16]
   32a94:	b	3289c <mpfr_log1p@@Base+0x24c>
   32a98:	mrs	x1, tpidr_el0
   32a9c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32aa0:	ldr	x2, [x0, #2576]
   32aa4:	add	x0, x0, #0xa10
   32aa8:	blr	x2
   32aac:	add	x2, x1, x0
   32ab0:	ldr	w0, [x1, x0]
   32ab4:	cbnz	w19, 32adc <mpfr_log1p@@Base+0x48c>
   32ab8:	orr	w0, w0, #0x20
   32abc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   32ac0:	mov	w3, #0xffffffff            	// #-1
   32ac4:	str	w0, [x2]
   32ac8:	str	w3, [x23, #8]
   32acc:	str	x1, [x23, #16]
   32ad0:	b	3289c <mpfr_log1p@@Base+0x24c>
   32ad4:	mov	x19, x25
   32ad8:	b	32740 <mpfr_log1p@@Base+0xf0>
   32adc:	mov	x1, #0x2                   	// #2
   32ae0:	orr	w0, w0, #0x4
   32ae4:	movk	x1, #0x8000, lsl #48
   32ae8:	mov	w19, #0x0                   	// #0
   32aec:	str	w0, [x2]
   32af0:	str	x1, [x23, #16]
   32af4:	b	3289c <mpfr_log1p@@Base+0x24c>
   32af8:	ldr	w1, [x1, #8]
   32afc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   32b00:	mov	w19, #0x0                   	// #0
   32b04:	str	w1, [x23, #8]
   32b08:	str	x0, [x23, #16]
   32b0c:	b	3289c <mpfr_log1p@@Base+0x24c>
   32b10:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   32b14:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   32b18:	add	x2, x2, #0x310
   32b1c:	add	x0, x0, #0x308
   32b20:	mov	w1, #0x56                  	// #86
   32b24:	bl	cb40 <mpfr_assert_fail@plt>
   32b28:	mrs	x1, tpidr_el0
   32b2c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32b30:	ldr	x2, [x0, #2576]
   32b34:	add	x0, x0, #0xa10
   32b38:	blr	x2
   32b3c:	add	x0, x1, x0
   32b40:	mov	x1, #0x2                   	// #2
   32b44:	movk	x1, #0x8000, lsl #48
   32b48:	str	x1, [x23, #16]
   32b4c:	mov	w19, #0x0                   	// #0
   32b50:	ldr	w1, [x0]
   32b54:	orr	w1, w1, #0x4
   32b58:	str	w1, [x0]
   32b5c:	b	3289c <mpfr_log1p@@Base+0x24c>
   32b60:	mov	w2, w27
   32b64:	mov	x1, x21
   32b68:	mov	x0, x23
   32b6c:	bl	c090 <mpfr_log@plt>
   32b70:	mov	w19, w0
   32b74:	b	3281c <mpfr_log1p@@Base+0x1cc>
   32b78:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   32b7c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   32b80:	add	x2, x2, #0x470
   32b84:	add	x0, x0, #0x308
   32b88:	mov	w1, #0xe7                  	// #231
   32b8c:	bl	cb40 <mpfr_assert_fail@plt>
   32b90:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   32b94:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   32b98:	add	x2, x2, #0x458
   32b9c:	add	x0, x0, #0x308
   32ba0:	mov	w1, #0xb9                  	// #185
   32ba4:	bl	cb40 <mpfr_assert_fail@plt>

0000000000032ba8 <mpfr_expm1@@Base>:
   32ba8:	stp	x29, x30, [sp, #-160]!
   32bac:	mov	x29, sp
   32bb0:	stp	x27, x28, [sp, #80]
   32bb4:	ldr	x28, [x1, #16]
   32bb8:	stp	x19, x20, [sp, #16]
   32bbc:	stp	x21, x22, [sp, #32]
   32bc0:	mov	x22, x1
   32bc4:	mov	x21, x0
   32bc8:	stp	x23, x24, [sp, #48]
   32bcc:	mov	w23, w2
   32bd0:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   32bd4:	cmp	x28, x2
   32bd8:	b.le	32ffc <mpfr_expm1@@Base+0x454>
   32bdc:	stp	x25, x26, [sp, #64]
   32be0:	ldr	w3, [x1, #8]
   32be4:	tbnz	x28, #63, 32e4c <mpfr_expm1@@Base+0x2a4>
   32be8:	mrs	x19, tpidr_el0
   32bec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32bf0:	ldr	x2, [x0, #2576]
   32bf4:	add	x0, x0, #0xa10
   32bf8:	blr	x2
   32bfc:	mov	x24, #0xc000000000000001    	// #-4611686018427387903
   32c00:	mov	x20, #0x3fffffffffffffff    	// #4611686018427387903
   32c04:	ldr	w0, [x19, x0]
   32c08:	str	w0, [sp, #100]
   32c0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32c10:	ldr	x2, [x0, #2512]
   32c14:	add	x0, x0, #0x9d0
   32c18:	blr	x2
   32c1c:	add	x2, x19, x0
   32c20:	ldr	x26, [x19, x0]
   32c24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32c28:	ldr	x4, [x0, #2544]
   32c2c:	add	x0, x0, #0x9f0
   32c30:	blr	x4
   32c34:	str	x24, [x2]
   32c38:	cmp	w3, #0x0
   32c3c:	ldr	x27, [x19, x0]
   32c40:	str	x20, [x19, x0]
   32c44:	ccmp	x28, #0x5, #0x4, lt  // lt = tstop
   32c48:	b.gt	32edc <mpfr_expm1@@Base+0x334>
   32c4c:	ldr	x24, [x21]
   32c50:	cmp	x24, #0x1
   32c54:	b.eq	3307c <mpfr_expm1@@Base+0x4d4>  // b.none
   32c58:	cmp	x24, #0x1
   32c5c:	b.le	331b8 <mpfr_expm1@@Base+0x610>
   32c60:	sub	x0, x24, #0x1
   32c64:	mov	w20, #0x40                  	// #64
   32c68:	clz	x0, x0
   32c6c:	add	x25, sp, #0x80
   32c70:	sub	w20, w20, w0
   32c74:	add	x20, x24, w20, sxtw
   32c78:	add	x20, x20, #0x6
   32c7c:	tbnz	x28, #63, 32ed0 <mpfr_expm1@@Base+0x328>
   32c80:	mov	x0, #0x40                  	// #64
   32c84:	mov	x1, x20
   32c88:	str	x0, [sp, #104]
   32c8c:	mov	x0, x25
   32c90:	bl	ca80 <mpfr_init2@plt>
   32c94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32c98:	ldr	x1, [x0, #2576]
   32c9c:	add	x0, x0, #0xa10
   32ca0:	blr	x1
   32ca4:	add	x28, x19, x0
   32ca8:	mov	x1, x22
   32cac:	mov	w2, #0x0                   	// #0
   32cb0:	str	wzr, [x19, x0]
   32cb4:	mov	x0, x25
   32cb8:	bl	c750 <mpfr_exp@plt>
   32cbc:	ldr	w0, [x28]
   32cc0:	tbnz	w0, #1, 33194 <mpfr_expm1@@Base+0x5ec>
   32cc4:	tbnz	w0, #0, 32f7c <mpfr_expm1@@Base+0x3d4>
   32cc8:	mov	x1, x25
   32ccc:	mov	x2, #0x1                   	// #1
   32cd0:	mov	x0, x25
   32cd4:	mov	w3, #0x0                   	// #0
   32cd8:	ldr	x28, [sp, #144]
   32cdc:	bl	c530 <mpfr_sub_ui@plt>
   32ce0:	ldr	x0, [sp, #144]
   32ce4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   32ce8:	subs	x2, x28, x0
   32cec:	csel	x2, x2, xzr, pl  // pl = nfrst
   32cf0:	cmp	x0, x1
   32cf4:	add	x2, x2, #0x1
   32cf8:	sub	x2, x20, x2
   32cfc:	b.le	32f44 <mpfr_expm1@@Base+0x39c>
   32d00:	ldr	x1, [sp, #128]
   32d04:	cmp	w23, #0x0
   32d08:	ldr	x0, [sp, #152]
   32d0c:	sub	x1, x1, #0x1
   32d10:	cinc	x3, x24, eq  // eq = none
   32d14:	asr	x1, x1, #6
   32d18:	add	x1, x1, #0x1
   32d1c:	bl	c370 <mpfr_round_p@plt>
   32d20:	cbz	w0, 32f44 <mpfr_expm1@@Base+0x39c>
   32d24:	ldr	w3, [sp, #136]
   32d28:	mov	w2, w23
   32d2c:	mov	x1, x25
   32d30:	mov	x0, x21
   32d34:	bl	c6a0 <mpfr_set4@plt>
   32d38:	mov	w20, w0
   32d3c:	mov	x0, x25
   32d40:	bl	c070 <mpfr_clear@plt>
   32d44:	ldr	x1, [x21, #16]
   32d48:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32d4c:	ldr	x2, [x0, #2576]
   32d50:	add	x0, x0, #0xa10
   32d54:	blr	x2
   32d58:	ldr	w2, [sp, #100]
   32d5c:	str	w2, [x19, x0]
   32d60:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32d64:	ldr	x2, [x0, #2512]
   32d68:	add	x0, x0, #0x9d0
   32d6c:	blr	x2
   32d70:	str	x26, [x19, x0]
   32d74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32d78:	ldr	x2, [x0, #2544]
   32d7c:	add	x0, x0, #0x9f0
   32d80:	blr	x2
   32d84:	str	x27, [x19, x0]
   32d88:	cmp	x1, x27
   32d8c:	ccmp	x1, x26, #0x1, le
   32d90:	b.ge	32dc8 <mpfr_expm1@@Base+0x220>  // b.tcont
   32d94:	mov	w1, w20
   32d98:	mov	w2, w23
   32d9c:	mov	x0, x21
   32da0:	bl	cb30 <mpfr_check_range@plt>
   32da4:	ldp	x25, x26, [sp, #64]
   32da8:	mov	w20, w0
   32dac:	mov	w0, w20
   32db0:	ldp	x19, x20, [sp, #16]
   32db4:	ldp	x21, x22, [sp, #32]
   32db8:	ldp	x23, x24, [sp, #48]
   32dbc:	ldp	x27, x28, [sp, #80]
   32dc0:	ldp	x29, x30, [sp], #160
   32dc4:	ret
   32dc8:	cbz	w20, 32e2c <mpfr_expm1@@Base+0x284>
   32dcc:	ldr	w0, [sp, #100]
   32dd0:	ldp	x21, x22, [sp, #32]
   32dd4:	orr	w25, w0, #0x8
   32dd8:	ldp	x23, x24, [sp, #48]
   32ddc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32de0:	ldr	x1, [x0, #2576]
   32de4:	add	x0, x0, #0xa10
   32de8:	blr	x1
   32dec:	str	w25, [x19, x0]
   32df0:	mov	w0, w20
   32df4:	ldp	x19, x20, [sp, #16]
   32df8:	ldp	x25, x26, [sp, #64]
   32dfc:	ldp	x27, x28, [sp, #80]
   32e00:	ldp	x29, x30, [sp], #160
   32e04:	ret
   32e08:	mov	x2, #0x1                   	// #1
   32e0c:	sub	x2, x2, x28
   32e10:	cmp	x2, x3
   32e14:	b.ls	32e68 <mpfr_expm1@@Base+0x2c0>  // b.plast
   32e18:	mov	w4, w23
   32e1c:	mov	w3, #0x0                   	// #0
   32e20:	bl	c540 <mpfr_round_near_x@plt>
   32e24:	mov	w20, w0
   32e28:	cbz	w0, 3305c <mpfr_expm1@@Base+0x4b4>
   32e2c:	mov	w0, w20
   32e30:	ldp	x19, x20, [sp, #16]
   32e34:	ldp	x21, x22, [sp, #32]
   32e38:	ldp	x23, x24, [sp, #48]
   32e3c:	ldp	x25, x26, [sp, #64]
   32e40:	ldp	x27, x28, [sp, #80]
   32e44:	ldp	x29, x30, [sp], #160
   32e48:	ret
   32e4c:	ldr	x24, [x0]
   32e50:	cmp	w3, #0x0
   32e54:	add	x3, x24, #0x1
   32e58:	b.le	32e08 <mpfr_expm1@@Base+0x260>
   32e5c:	neg	x2, x28
   32e60:	cmp	x2, x3
   32e64:	b.hi	33048 <mpfr_expm1@@Base+0x4a0>  // b.pmore
   32e68:	mrs	x19, tpidr_el0
   32e6c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32e70:	ldr	x1, [x0, #2576]
   32e74:	add	x0, x0, #0xa10
   32e78:	blr	x1
   32e7c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   32e80:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   32e84:	mov	x20, #0x7                   	// #7
   32e88:	ldr	w0, [x19, x0]
   32e8c:	str	w0, [sp, #100]
   32e90:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32e94:	ldr	x2, [x0, #2512]
   32e98:	add	x0, x0, #0x9d0
   32e9c:	blr	x2
   32ea0:	add	x2, x19, x0
   32ea4:	ldr	x26, [x19, x0]
   32ea8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32eac:	ldr	x4, [x0, #2544]
   32eb0:	add	x0, x0, #0x9f0
   32eb4:	blr	x4
   32eb8:	str	x3, [x2]
   32ebc:	cmp	x24, #0x1
   32ec0:	ldr	x27, [x19, x0]
   32ec4:	str	x1, [x19, x0]
   32ec8:	b.ne	32c58 <mpfr_expm1@@Base+0xb0>  // b.any
   32ecc:	nop
   32ed0:	sub	x20, x20, x28
   32ed4:	add	x25, sp, #0x80
   32ed8:	b	32c80 <mpfr_expm1@@Base+0xd8>
   32edc:	adrp	x2, 81000 <__gmpfr_l2b@@Base+0x200>
   32ee0:	add	x4, sp, #0x78
   32ee4:	mov	x7, #0x40                  	// #64
   32ee8:	mov	w6, #0x1                   	// #1
   32eec:	ldr	x2, [x2, #4048]
   32ef0:	add	x25, sp, #0x80
   32ef4:	mov	w3, #0x2                   	// #2
   32ef8:	mov	x0, x25
   32efc:	str	x7, [sp, #128]
   32f00:	str	w6, [sp, #136]
   32f04:	str	x4, [sp, #152]
   32f08:	bl	c620 <mpfr_div@plt>
   32f0c:	mov	x1, x24
   32f10:	mov	x0, x25
   32f14:	mov	x2, #0x0                   	// #0
   32f18:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   32f1c:	cmp	w0, #0x0
   32f20:	b.gt	33064 <mpfr_expm1@@Base+0x4bc>
   32f24:	ldr	x24, [x21]
   32f28:	add	x0, x24, #0x1
   32f2c:	cmp	x0, x20
   32f30:	b.cc	33100 <mpfr_expm1@@Base+0x558>  // b.lo, b.ul, b.last
   32f34:	cmp	x24, #0x1
   32f38:	b.ne	32c58 <mpfr_expm1@@Base+0xb0>  // b.any
   32f3c:	mov	x20, #0x7                   	// #7
   32f40:	b	32c80 <mpfr_expm1@@Base+0xd8>
   32f44:	ldr	x1, [sp, #104]
   32f48:	mov	x0, #0xfffffffffffffeff    	// #-257
   32f4c:	movk	x0, #0x7fff, lsl #48
   32f50:	sub	x0, x0, x20
   32f54:	cmp	x0, x1
   32f58:	b.lt	330d0 <mpfr_expm1@@Base+0x528>  // b.tstop
   32f5c:	add	x20, x20, x1
   32f60:	mov	x0, x25
   32f64:	mov	x1, x20
   32f68:	add	x2, x20, x20, lsr #63
   32f6c:	asr	x2, x2, #1
   32f70:	str	x2, [sp, #104]
   32f74:	bl	bed0 <mpfr_set_prec@plt>
   32f78:	b	32c94 <mpfr_expm1@@Base+0xec>
   32f7c:	mov	w3, w23
   32f80:	mov	x0, x21
   32f84:	mov	x2, #0x0                   	// #0
   32f88:	mov	x1, #0xffffffffffffffff    	// #-1
   32f8c:	bl	ba80 <mpfr_set_si_2exp@plt>
   32f90:	mov	w20, #0xffffffff            	// #-1
   32f94:	sub	w0, w23, #0x1
   32f98:	cmp	w0, #0x1
   32f9c:	b.ls	33088 <mpfr_expm1@@Base+0x4e0>  // b.plast
   32fa0:	mov	x0, x25
   32fa4:	bl	c070 <mpfr_clear@plt>
   32fa8:	ldr	x1, [x21, #16]
   32fac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32fb0:	ldr	x2, [x0, #2576]
   32fb4:	add	x0, x0, #0xa10
   32fb8:	blr	x2
   32fbc:	ldr	w2, [sp, #100]
   32fc0:	str	w2, [x19, x0]
   32fc4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32fc8:	ldr	x2, [x0, #2512]
   32fcc:	add	x0, x0, #0x9d0
   32fd0:	blr	x2
   32fd4:	str	x26, [x19, x0]
   32fd8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   32fdc:	ldr	x2, [x0, #2544]
   32fe0:	add	x0, x0, #0x9f0
   32fe4:	blr	x2
   32fe8:	str	x27, [x19, x0]
   32fec:	cmp	x1, x27
   32ff0:	ccmp	x1, x26, #0x1, le
   32ff4:	b.lt	32d94 <mpfr_expm1@@Base+0x1ec>  // b.tstop
   32ff8:	b	32dcc <mpfr_expm1@@Base+0x224>
   32ffc:	mov	x1, #0x2                   	// #2
   33000:	movk	x1, #0x8000, lsl #48
   33004:	cmp	x28, x1
   33008:	b.eq	330a0 <mpfr_expm1@@Base+0x4f8>  // b.none
   3300c:	ldr	w1, [x22, #8]
   33010:	cmp	x28, x2
   33014:	b.ne	33034 <mpfr_expm1@@Base+0x48c>  // b.any
   33018:	cmp	w1, #0x0
   3301c:	b.le	330e8 <mpfr_expm1@@Base+0x540>
   33020:	mov	w0, #0x1                   	// #1
   33024:	mov	w20, #0x0                   	// #0
   33028:	str	w0, [x21, #8]
   3302c:	str	x28, [x21, #16]
   33030:	b	32dac <mpfr_expm1@@Base+0x204>
   33034:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   33038:	mov	w20, #0x0                   	// #0
   3303c:	str	w1, [x21, #8]
   33040:	str	x0, [x21, #16]
   33044:	b	32dac <mpfr_expm1@@Base+0x204>
   33048:	mov	w4, w23
   3304c:	mov	w3, #0x1                   	// #1
   33050:	bl	c540 <mpfr_round_near_x@plt>
   33054:	mov	w20, w0
   33058:	cbnz	w0, 32e2c <mpfr_expm1@@Base+0x284>
   3305c:	ldr	x24, [x21]
   33060:	b	32e68 <mpfr_expm1@@Base+0x2c0>
   33064:	mov	x0, x25
   33068:	mov	w1, #0x2                   	// #2
   3306c:	bl	c190 <mpfr_get_si@plt>
   33070:	tbz	x0, #63, 33098 <mpfr_expm1@@Base+0x4f0>
   33074:	neg	x20, x0
   33078:	b	32f24 <mpfr_expm1@@Base+0x37c>
   3307c:	add	x25, sp, #0x80
   33080:	mov	x20, #0x7                   	// #7
   33084:	b	32c80 <mpfr_expm1@@Base+0xd8>
   33088:	mov	x0, x21
   3308c:	mov	w20, #0x1                   	// #1
   33090:	bl	c460 <mpfr_nexttozero@plt>
   33094:	b	32fa0 <mpfr_expm1@@Base+0x3f8>
   33098:	ldr	x24, [x21]
   3309c:	b	32f34 <mpfr_expm1@@Base+0x38c>
   330a0:	mrs	x1, tpidr_el0
   330a4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   330a8:	ldr	x2, [x0, #2576]
   330ac:	add	x0, x0, #0xa10
   330b0:	blr	x2
   330b4:	add	x0, x1, x0
   330b8:	mov	w20, #0x0                   	// #0
   330bc:	str	x28, [x21, #16]
   330c0:	ldr	w1, [x0]
   330c4:	orr	w1, w1, #0x4
   330c8:	str	w1, [x0]
   330cc:	b	32dac <mpfr_expm1@@Base+0x204>
   330d0:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   330d4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   330d8:	add	x2, x2, #0x470
   330dc:	add	x0, x0, #0x318
   330e0:	mov	w1, #0xa5                  	// #165
   330e4:	bl	cb40 <mpfr_assert_fail@plt>
   330e8:	mov	w3, w23
   330ec:	mov	x2, #0x0                   	// #0
   330f0:	mov	x1, #0xffffffffffffffff    	// #-1
   330f4:	bl	ba80 <mpfr_set_si_2exp@plt>
   330f8:	mov	w20, w0
   330fc:	b	32dac <mpfr_expm1@@Base+0x204>
   33100:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   33104:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33108:	ldr	x2, [x0, #2576]
   3310c:	add	x0, x0, #0xa10
   33110:	blr	x2
   33114:	mov	x2, x20
   33118:	add	x24, x19, x0
   3311c:	ldr	x1, [x1, #4000]
   33120:	mov	w4, w23
   33124:	mov	w3, #0x0                   	// #0
   33128:	str	wzr, [x19, x0]
   3312c:	mov	x0, x21
   33130:	bl	c540 <mpfr_round_near_x@plt>
   33134:	mov	w20, w0
   33138:	cbz	w0, 33098 <mpfr_expm1@@Base+0x4f0>
   3313c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33140:	ldr	x2, [x0, #2512]
   33144:	add	x0, x0, #0x9d0
   33148:	blr	x2
   3314c:	ldr	w1, [x24]
   33150:	str	x26, [x19, x0]
   33154:	ldr	w0, [sp, #100]
   33158:	ldr	x2, [x21, #16]
   3315c:	orr	w25, w0, w1
   33160:	str	w25, [x24]
   33164:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33168:	ldr	x1, [x0, #2544]
   3316c:	add	x0, x0, #0x9f0
   33170:	blr	x1
   33174:	str	x27, [x19, x0]
   33178:	cmp	x26, x2
   3317c:	ccmp	x27, x2, #0x1, le
   33180:	b.lt	32d94 <mpfr_expm1@@Base+0x1ec>  // b.tstop
   33184:	orr	w25, w25, #0x8
   33188:	str	w25, [x24]
   3318c:	ldp	x25, x26, [sp, #64]
   33190:	b	32dac <mpfr_expm1@@Base+0x204>
   33194:	mov	w1, w23
   33198:	mov	x0, x21
   3319c:	mov	w2, #0x1                   	// #1
   331a0:	bl	bf40 <mpfr_overflow@plt>
   331a4:	ldr	w1, [sp, #100]
   331a8:	mov	w20, w0
   331ac:	orr	w1, w1, #0x2
   331b0:	str	w1, [sp, #100]
   331b4:	b	32d3c <mpfr_expm1@@Base+0x194>
   331b8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   331bc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   331c0:	add	x2, x2, #0x458
   331c4:	add	x0, x0, #0x318
   331c8:	mov	w1, #0x72                  	// #114
   331cc:	bl	cb40 <mpfr_assert_fail@plt>

00000000000331d0 <mpfr_log2@@Base>:
   331d0:	stp	x29, x30, [sp, #-176]!
   331d4:	mov	x29, sp
   331d8:	stp	x23, x24, [sp, #48]
   331dc:	mov	x24, x1
   331e0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   331e4:	stp	x19, x20, [sp, #16]
   331e8:	mov	x20, x0
   331ec:	ldr	x0, [x24, #16]
   331f0:	cmp	x0, x1
   331f4:	b.le	334d4 <mpfr_log2@@Base+0x304>
   331f8:	ldr	w0, [x24, #8]
   331fc:	tbnz	w0, #31, 3348c <mpfr_log2@@Base+0x2bc>
   33200:	mov	x0, x24
   33204:	mov	x1, #0x1                   	// #1
   33208:	stp	x21, x22, [sp, #32]
   3320c:	mov	w21, w2
   33210:	mov	x2, #0x0                   	// #0
   33214:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   33218:	mov	w19, w0
   3321c:	cbz	w0, 33508 <mpfr_log2@@Base+0x338>
   33220:	ldr	x2, [x24, #16]
   33224:	mov	x0, x24
   33228:	mov	x1, #0x1                   	// #1
   3322c:	sub	x2, x2, #0x1
   33230:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   33234:	cbz	w0, 33520 <mpfr_log2@@Base+0x350>
   33238:	stp	x27, x28, [sp, #80]
   3323c:	mrs	x28, tpidr_el0
   33240:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33244:	ldr	x1, [x0, #2576]
   33248:	add	x0, x0, #0xa10
   3324c:	blr	x1
   33250:	stp	x25, x26, [sp, #64]
   33254:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   33258:	ldr	w0, [x28, x0]
   3325c:	str	w0, [sp, #100]
   33260:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   33264:	ldr	x23, [x20]
   33268:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3326c:	ldr	x2, [x0, #2512]
   33270:	add	x0, x0, #0x9d0
   33274:	blr	x2
   33278:	add	x2, x28, x0
   3327c:	ldr	x25, [x28, x0]
   33280:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33284:	ldr	x4, [x0, #2544]
   33288:	add	x0, x0, #0x9f0
   3328c:	blr	x4
   33290:	str	x3, [x2]
   33294:	cmp	x23, #0x1
   33298:	ldr	x26, [x28, x0]
   3329c:	str	x1, [x28, x0]
   332a0:	add	x1, x23, #0x3
   332a4:	b.eq	33544 <mpfr_log2@@Base+0x374>  // b.none
   332a8:	b.le	3359c <mpfr_log2@@Base+0x3cc>
   332ac:	sub	x0, x23, #0x1
   332b0:	mov	w19, #0x40                  	// #64
   332b4:	clz	x0, x0
   332b8:	sub	w0, w19, w0
   332bc:	add	x19, x1, w0, sxtw
   332c0:	mov	x0, #0x40                  	// #64
   332c4:	add	x27, sp, #0x70
   332c8:	mov	x1, x19
   332cc:	add	x22, sp, #0x90
   332d0:	str	x0, [sp, #104]
   332d4:	mov	x0, x27
   332d8:	bl	ca80 <mpfr_init2@plt>
   332dc:	mov	x0, x22
   332e0:	mov	x1, x19
   332e4:	bl	ca80 <mpfr_init2@plt>
   332e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   332ec:	ldr	x1, [x0, #2560]
   332f0:	add	x0, x0, #0xa00
   332f4:	blr	x1
   332f8:	mov	w2, #0x3                   	// #3
   332fc:	add	x1, x28, x0
   33300:	mov	x0, x27
   33304:	bl	c380 <mpfr_cache@plt>
   33308:	mov	x1, x24
   3330c:	mov	w2, #0x0                   	// #0
   33310:	mov	x0, x22
   33314:	bl	c090 <mpfr_log@plt>
   33318:	mov	x2, x27
   3331c:	mov	x1, x22
   33320:	mov	x0, x27
   33324:	mov	w3, #0x0                   	// #0
   33328:	bl	c620 <mpfr_div@plt>
   3332c:	ldr	x0, [sp, #128]
   33330:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   33334:	sub	x2, x19, #0x3
   33338:	cmp	x0, x1
   3333c:	b.le	33448 <mpfr_log2@@Base+0x278>
   33340:	ldr	x1, [sp, #112]
   33344:	cmp	w21, #0x0
   33348:	ldr	x0, [sp, #136]
   3334c:	sub	x1, x1, #0x1
   33350:	cinc	x3, x23, eq  // eq = none
   33354:	asr	x1, x1, #6
   33358:	add	x1, x1, #0x1
   3335c:	bl	c370 <mpfr_round_p@plt>
   33360:	cbz	w0, 33448 <mpfr_log2@@Base+0x278>
   33364:	ldr	w3, [sp, #120]
   33368:	mov	w2, w21
   3336c:	mov	x1, x27
   33370:	mov	x0, x20
   33374:	bl	c6a0 <mpfr_set4@plt>
   33378:	mov	w19, w0
   3337c:	mov	x0, x27
   33380:	bl	c070 <mpfr_clear@plt>
   33384:	mov	x0, x22
   33388:	bl	c070 <mpfr_clear@plt>
   3338c:	ldr	x1, [x20, #16]
   33390:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33394:	ldr	x2, [x0, #2576]
   33398:	add	x0, x0, #0xa10
   3339c:	blr	x2
   333a0:	ldr	w2, [sp, #100]
   333a4:	str	w2, [x28, x0]
   333a8:	add	x2, x28, x0
   333ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   333b0:	ldr	x3, [x0, #2512]
   333b4:	add	x0, x0, #0x9d0
   333b8:	blr	x3
   333bc:	str	x25, [x28, x0]
   333c0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   333c4:	ldr	x3, [x0, #2544]
   333c8:	add	x0, x0, #0x9f0
   333cc:	blr	x3
   333d0:	str	x26, [x28, x0]
   333d4:	cmp	x26, x1
   333d8:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   333dc:	b.le	33414 <mpfr_log2@@Base+0x244>
   333e0:	mov	w2, w21
   333e4:	mov	w1, w19
   333e8:	mov	x0, x20
   333ec:	bl	cb30 <mpfr_check_range@plt>
   333f0:	mov	w19, w0
   333f4:	mov	w0, w19
   333f8:	ldp	x19, x20, [sp, #16]
   333fc:	ldp	x21, x22, [sp, #32]
   33400:	ldp	x23, x24, [sp, #48]
   33404:	ldp	x25, x26, [sp, #64]
   33408:	ldp	x27, x28, [sp, #80]
   3340c:	ldp	x29, x30, [sp], #176
   33410:	ret
   33414:	cbnz	w19, 33438 <mpfr_log2@@Base+0x268>
   33418:	ldp	x21, x22, [sp, #32]
   3341c:	ldp	x25, x26, [sp, #64]
   33420:	ldp	x27, x28, [sp, #80]
   33424:	mov	w0, w19
   33428:	ldp	x19, x20, [sp, #16]
   3342c:	ldp	x23, x24, [sp, #48]
   33430:	ldp	x29, x30, [sp], #176
   33434:	ret
   33438:	ldr	w0, [sp, #100]
   3343c:	orr	w24, w0, #0x8
   33440:	str	w24, [x2]
   33444:	b	33418 <mpfr_log2@@Base+0x248>
   33448:	ldr	x1, [sp, #104]
   3344c:	mov	x0, #0xfffffffffffffeff    	// #-257
   33450:	movk	x0, #0x7fff, lsl #48
   33454:	sub	x0, x0, x19
   33458:	cmp	x0, x1
   3345c:	b.lt	33584 <mpfr_log2@@Base+0x3b4>  // b.tstop
   33460:	add	x19, x19, x1
   33464:	mov	x0, x27
   33468:	mov	x1, x19
   3346c:	add	x2, x19, x19, lsr #63
   33470:	asr	x2, x2, #1
   33474:	str	x2, [sp, #104]
   33478:	bl	bed0 <mpfr_set_prec@plt>
   3347c:	mov	x1, x19
   33480:	mov	x0, x22
   33484:	bl	bed0 <mpfr_set_prec@plt>
   33488:	b	332e8 <mpfr_log2@@Base+0x118>
   3348c:	mrs	x1, tpidr_el0
   33490:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33494:	ldr	x2, [x0, #2576]
   33498:	add	x0, x0, #0xa10
   3349c:	blr	x2
   334a0:	add	x0, x1, x0
   334a4:	mov	x1, #0x2                   	// #2
   334a8:	movk	x1, #0x8000, lsl #48
   334ac:	str	x1, [x20, #16]
   334b0:	mov	w19, #0x0                   	// #0
   334b4:	ldr	w1, [x0]
   334b8:	ldp	x23, x24, [sp, #48]
   334bc:	orr	w1, w1, #0x4
   334c0:	str	w1, [x0]
   334c4:	mov	w0, w19
   334c8:	ldp	x19, x20, [sp, #16]
   334cc:	ldp	x29, x30, [sp], #176
   334d0:	ret
   334d4:	mov	x2, #0x2                   	// #2
   334d8:	movk	x2, #0x8000, lsl #48
   334dc:	cmp	x0, x2
   334e0:	b.eq	3348c <mpfr_log2@@Base+0x2bc>  // b.none
   334e4:	cmp	x0, x1
   334e8:	b.ne	3354c <mpfr_log2@@Base+0x37c>  // b.any
   334ec:	ldr	w1, [x24, #8]
   334f0:	tbnz	w1, #31, 3348c <mpfr_log2@@Base+0x2bc>
   334f4:	mov	w1, #0x1                   	// #1
   334f8:	mov	w19, #0x0                   	// #0
   334fc:	str	w1, [x20, #8]
   33500:	str	x0, [x20, #16]
   33504:	b	33424 <mpfr_log2@@Base+0x254>
   33508:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3350c:	mov	w1, #0x1                   	// #1
   33510:	ldp	x21, x22, [sp, #32]
   33514:	str	w1, [x20, #8]
   33518:	str	x0, [x20, #16]
   3351c:	b	33424 <mpfr_log2@@Base+0x254>
   33520:	ldr	x1, [x24, #16]
   33524:	mov	w3, w21
   33528:	mov	x0, x20
   3352c:	mov	x2, #0x0                   	// #0
   33530:	sub	x1, x1, #0x1
   33534:	bl	ba80 <mpfr_set_si_2exp@plt>
   33538:	mov	w19, w0
   3353c:	ldp	x21, x22, [sp, #32]
   33540:	b	33424 <mpfr_log2@@Base+0x254>
   33544:	mov	x19, #0x4                   	// #4
   33548:	b	332c0 <mpfr_log2@@Base+0xf0>
   3354c:	mrs	x2, tpidr_el0
   33550:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33554:	ldr	x3, [x0, #2576]
   33558:	add	x0, x0, #0xa10
   3355c:	blr	x3
   33560:	add	x0, x2, x0
   33564:	str	x1, [x20, #16]
   33568:	mov	w2, #0xffffffff            	// #-1
   3356c:	mov	w19, #0x0                   	// #0
   33570:	str	w2, [x20, #8]
   33574:	ldr	w1, [x0]
   33578:	orr	w1, w1, #0x20
   3357c:	str	w1, [x0]
   33580:	b	33424 <mpfr_log2@@Base+0x254>
   33584:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   33588:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3358c:	add	x2, x2, #0x470
   33590:	add	x0, x0, #0x320
   33594:	mov	w1, #0x80                  	// #128
   33598:	bl	cb40 <mpfr_assert_fail@plt>
   3359c:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   335a0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   335a4:	add	x2, x2, #0x458
   335a8:	add	x0, x0, #0x320
   335ac:	mov	w1, #0x6b                  	// #107
   335b0:	bl	cb40 <mpfr_assert_fail@plt>
   335b4:	nop

00000000000335b8 <mpfr_log10@@Base>:
   335b8:	stp	x29, x30, [sp, #-176]!
   335bc:	mov	x29, sp
   335c0:	stp	x19, x20, [sp, #16]
   335c4:	mov	x19, x1
   335c8:	mov	x20, x0
   335cc:	stp	x21, x22, [sp, #32]
   335d0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   335d4:	ldr	x0, [x19, #16]
   335d8:	cmp	x0, x1
   335dc:	b.le	338dc <mpfr_log10@@Base+0x324>
   335e0:	ldr	w0, [x19, #8]
   335e4:	tbnz	w0, #31, 33844 <mpfr_log10@@Base+0x28c>
   335e8:	mov	w22, w2
   335ec:	mov	x0, x19
   335f0:	mov	x2, #0x0                   	// #0
   335f4:	mov	x1, #0x1                   	// #1
   335f8:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   335fc:	mov	w21, w0
   33600:	cbz	w0, 33818 <mpfr_log10@@Base+0x260>
   33604:	stp	x27, x28, [sp, #80]
   33608:	mrs	x28, tpidr_el0
   3360c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33610:	ldr	x1, [x0, #2576]
   33614:	add	x0, x0, #0xa10
   33618:	blr	x1
   3361c:	stp	x23, x24, [sp, #48]
   33620:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   33624:	ldr	w0, [x28, x0]
   33628:	str	w0, [sp, #100]
   3362c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   33630:	stp	x25, x26, [sp, #64]
   33634:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33638:	ldr	x2, [x0, #2512]
   3363c:	add	x0, x0, #0x9d0
   33640:	blr	x2
   33644:	add	x2, x28, x0
   33648:	ldr	x24, [x20]
   3364c:	ldr	x26, [x28, x0]
   33650:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33654:	ldr	x4, [x0, #2544]
   33658:	add	x0, x0, #0x9f0
   3365c:	blr	x4
   33660:	str	x3, [x2]
   33664:	cmp	x24, #0x1
   33668:	ldr	x27, [x28, x0]
   3366c:	str	x1, [x28, x0]
   33670:	add	x1, x24, #0x4
   33674:	b.eq	3383c <mpfr_log10@@Base+0x284>  // b.none
   33678:	b.le	339b8 <mpfr_log10@@Base+0x400>
   3367c:	sub	x0, x24, #0x1
   33680:	mov	w21, #0x40                  	// #64
   33684:	clz	x0, x0
   33688:	sub	w0, w21, w0
   3368c:	add	x21, x1, w0, sxtw
   33690:	mov	x0, #0x40                  	// #64
   33694:	add	x25, sp, #0x70
   33698:	mov	x1, x21
   3369c:	add	x23, sp, #0x90
   336a0:	str	x0, [sp, #104]
   336a4:	mov	x0, x25
   336a8:	bl	ca80 <mpfr_init2@plt>
   336ac:	mov	x0, x23
   336b0:	mov	x1, x21
   336b4:	bl	ca80 <mpfr_init2@plt>
   336b8:	mov	w3, #0x0                   	// #0
   336bc:	mov	x2, #0x0                   	// #0
   336c0:	mov	x1, #0xa                   	// #10
   336c4:	mov	x0, x25
   336c8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   336cc:	mov	x1, x25
   336d0:	mov	w2, #0x3                   	// #3
   336d4:	mov	x0, x25
   336d8:	bl	c090 <mpfr_log@plt>
   336dc:	mov	x1, x19
   336e0:	mov	w2, #0x0                   	// #0
   336e4:	mov	x0, x23
   336e8:	bl	c090 <mpfr_log@plt>
   336ec:	mov	x2, x25
   336f0:	mov	x1, x23
   336f4:	mov	x0, x25
   336f8:	mov	w3, #0x0                   	// #0
   336fc:	bl	c620 <mpfr_div@plt>
   33700:	ldr	x0, [sp, #128]
   33704:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   33708:	sub	x2, x21, #0x4
   3370c:	cmp	x0, x1
   33710:	b.le	3388c <mpfr_log10@@Base+0x2d4>
   33714:	ldr	x1, [sp, #112]
   33718:	cmp	w22, #0x0
   3371c:	ldr	x0, [sp, #136]
   33720:	sub	x1, x1, #0x1
   33724:	cinc	x3, x24, eq  // eq = none
   33728:	asr	x1, x1, #6
   3372c:	add	x1, x1, #0x1
   33730:	bl	c370 <mpfr_round_p@plt>
   33734:	cbz	w0, 3388c <mpfr_log10@@Base+0x2d4>
   33738:	ldr	w3, [sp, #120]
   3373c:	mov	w2, w22
   33740:	mov	x1, x25
   33744:	mov	x0, x20
   33748:	bl	c6a0 <mpfr_set4@plt>
   3374c:	mov	w21, w0
   33750:	mov	x0, x25
   33754:	bl	c070 <mpfr_clear@plt>
   33758:	mov	x0, x23
   3375c:	bl	c070 <mpfr_clear@plt>
   33760:	ldr	x1, [x20, #16]
   33764:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33768:	ldr	x2, [x0, #2576]
   3376c:	add	x0, x0, #0xa10
   33770:	blr	x2
   33774:	ldr	w2, [sp, #100]
   33778:	str	w2, [x28, x0]
   3377c:	add	x2, x28, x0
   33780:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33784:	ldr	x3, [x0, #2512]
   33788:	add	x0, x0, #0x9d0
   3378c:	blr	x3
   33790:	str	x26, [x28, x0]
   33794:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33798:	ldr	x3, [x0, #2544]
   3379c:	add	x0, x0, #0x9f0
   337a0:	blr	x3
   337a4:	str	x27, [x28, x0]
   337a8:	cmp	x27, x1
   337ac:	ccmp	x26, x1, #0x0, ge  // ge = tcont
   337b0:	b.le	337e8 <mpfr_log10@@Base+0x230>
   337b4:	mov	w1, w21
   337b8:	mov	w2, w22
   337bc:	mov	x0, x20
   337c0:	bl	cb30 <mpfr_check_range@plt>
   337c4:	ldp	x23, x24, [sp, #48]
   337c8:	mov	w21, w0
   337cc:	ldp	x25, x26, [sp, #64]
   337d0:	ldp	x27, x28, [sp, #80]
   337d4:	mov	w0, w21
   337d8:	ldp	x19, x20, [sp, #16]
   337dc:	ldp	x21, x22, [sp, #32]
   337e0:	ldp	x29, x30, [sp], #176
   337e4:	ret
   337e8:	cbz	w21, 337f8 <mpfr_log10@@Base+0x240>
   337ec:	ldr	w0, [sp, #100]
   337f0:	orr	w25, w0, #0x8
   337f4:	str	w25, [x2]
   337f8:	mov	w0, w21
   337fc:	ldp	x19, x20, [sp, #16]
   33800:	ldp	x21, x22, [sp, #32]
   33804:	ldp	x23, x24, [sp, #48]
   33808:	ldp	x25, x26, [sp, #64]
   3380c:	ldp	x27, x28, [sp, #80]
   33810:	ldp	x29, x30, [sp], #176
   33814:	ret
   33818:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3381c:	mov	w1, #0x1                   	// #1
   33820:	str	w1, [x20, #8]
   33824:	str	x0, [x20, #16]
   33828:	mov	w0, w21
   3382c:	ldp	x19, x20, [sp, #16]
   33830:	ldp	x21, x22, [sp, #32]
   33834:	ldp	x29, x30, [sp], #176
   33838:	ret
   3383c:	mov	x21, #0x5                   	// #5
   33840:	b	33690 <mpfr_log10@@Base+0xd8>
   33844:	mrs	x1, tpidr_el0
   33848:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3384c:	ldr	x2, [x0, #2576]
   33850:	add	x0, x0, #0xa10
   33854:	blr	x2
   33858:	add	x0, x1, x0
   3385c:	mov	x1, #0x2                   	// #2
   33860:	movk	x1, #0x8000, lsl #48
   33864:	str	x1, [x20, #16]
   33868:	mov	w21, #0x0                   	// #0
   3386c:	ldr	w1, [x0]
   33870:	ldp	x19, x20, [sp, #16]
   33874:	orr	w1, w1, #0x4
   33878:	str	w1, [x0]
   3387c:	mov	w0, w21
   33880:	ldp	x21, x22, [sp, #32]
   33884:	ldp	x29, x30, [sp], #176
   33888:	ret
   3388c:	ldr	w0, [sp, #120]
   33890:	cmp	w0, #0x0
   33894:	b.gt	33910 <mpfr_log10@@Base+0x358>
   33898:	ldr	x1, [sp, #104]
   3389c:	mov	x0, #0xfffffffffffffeff    	// #-257
   338a0:	movk	x0, #0x7fff, lsl #48
   338a4:	sub	x0, x0, x21
   338a8:	cmp	x0, x1
   338ac:	b.lt	339a0 <mpfr_log10@@Base+0x3e8>  // b.tstop
   338b0:	add	x21, x21, x1
   338b4:	mov	x0, x25
   338b8:	mov	x1, x21
   338bc:	add	x2, x21, x21, lsr #63
   338c0:	asr	x2, x2, #1
   338c4:	str	x2, [sp, #104]
   338c8:	bl	bed0 <mpfr_set_prec@plt>
   338cc:	mov	x1, x21
   338d0:	mov	x0, x23
   338d4:	bl	bed0 <mpfr_set_prec@plt>
   338d8:	b	336b8 <mpfr_log10@@Base+0x100>
   338dc:	mov	x2, #0x2                   	// #2
   338e0:	movk	x2, #0x8000, lsl #48
   338e4:	cmp	x0, x2
   338e8:	b.eq	33844 <mpfr_log10@@Base+0x28c>  // b.none
   338ec:	cmp	x0, x1
   338f0:	b.ne	33968 <mpfr_log10@@Base+0x3b0>  // b.any
   338f4:	ldr	w1, [x19, #8]
   338f8:	tbnz	w1, #31, 33844 <mpfr_log10@@Base+0x28c>
   338fc:	mov	w1, #0x1                   	// #1
   33900:	mov	w21, #0x0                   	// #0
   33904:	str	w1, [x20, #8]
   33908:	str	x0, [x20, #16]
   3390c:	b	337d4 <mpfr_log10@@Base+0x21c>
   33910:	mov	x0, x25
   33914:	bl	c160 <mpfr_integer_p@plt>
   33918:	cbz	w0, 33898 <mpfr_log10@@Base+0x2e0>
   3391c:	mov	x0, x25
   33920:	mov	w1, #0x0                   	// #0
   33924:	bl	be50 <mpfr_fits_ulong_p@plt>
   33928:	cbz	w0, 33898 <mpfr_log10@@Base+0x2e0>
   3392c:	mov	w1, #0x0                   	// #0
   33930:	mov	x0, x25
   33934:	bl	bca0 <mpfr_get_ui@plt>
   33938:	mov	x2, x0
   3393c:	mov	w3, #0x0                   	// #0
   33940:	mov	x0, x23
   33944:	mov	x1, #0xa                   	// #10
   33948:	bl	bb20 <mpfr_ui_pow_ui@plt>
   3394c:	cbnz	w0, 33898 <mpfr_log10@@Base+0x2e0>
   33950:	mov	x1, x23
   33954:	mov	x0, x19
   33958:	mov	w2, #0x1                   	// #1
   3395c:	bl	c9a0 <mpfr_cmp3@plt>
   33960:	cbnz	w0, 33898 <mpfr_log10@@Base+0x2e0>
   33964:	b	33738 <mpfr_log10@@Base+0x180>
   33968:	mrs	x2, tpidr_el0
   3396c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33970:	ldr	x3, [x0, #2576]
   33974:	add	x0, x0, #0xa10
   33978:	blr	x3
   3397c:	add	x0, x2, x0
   33980:	str	x1, [x20, #16]
   33984:	mov	w2, #0xffffffff            	// #-1
   33988:	mov	w21, #0x0                   	// #0
   3398c:	str	w2, [x20, #8]
   33990:	ldr	w1, [x0]
   33994:	orr	w1, w1, #0x20
   33998:	str	w1, [x0]
   3399c:	b	337d4 <mpfr_log10@@Base+0x21c>
   339a0:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   339a4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   339a8:	add	x2, x2, #0x470
   339ac:	add	x0, x0, #0x328
   339b0:	mov	w1, #0x88                  	// #136
   339b4:	bl	cb40 <mpfr_assert_fail@plt>
   339b8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   339bc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   339c0:	add	x2, x2, #0x458
   339c4:	add	x0, x0, #0x328
   339c8:	mov	w1, #0x69                  	// #105
   339cc:	bl	cb40 <mpfr_assert_fail@plt>

00000000000339d0 <mpfr_ui_pow@@Base>:
   339d0:	stp	x29, x30, [sp, #-144]!
   339d4:	mrs	x4, tpidr_el0
   339d8:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   339dc:	mov	x29, sp
   339e0:	stp	x19, x20, [sp, #16]
   339e4:	mov	x19, x0
   339e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   339ec:	ldr	x5, [x0, #2576]
   339f0:	add	x0, x0, #0xa10
   339f4:	blr	x5
   339f8:	ldr	w20, [x4, x0]
   339fc:	mov	x6, #0x3fffffffffffffff    	// #4611686018427387903
   33a00:	stp	x23, x24, [sp, #48]
   33a04:	add	x24, x4, x0
   33a08:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33a0c:	ldr	x5, [x0, #2512]
   33a10:	add	x0, x0, #0x9d0
   33a14:	blr	x5
   33a18:	stp	x25, x26, [sp, #64]
   33a1c:	mov	x9, #0x40                  	// #64
   33a20:	mov	w8, #0x1                   	// #1
   33a24:	stp	x27, x28, [sp, #80]
   33a28:	add	x28, x4, x0
   33a2c:	mov	x23, x2
   33a30:	ldr	x26, [x4, x0]
   33a34:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33a38:	ldr	x5, [x0, #2544]
   33a3c:	add	x0, x0, #0x9f0
   33a40:	blr	x5
   33a44:	add	x5, sp, #0x68
   33a48:	add	x27, x4, x0
   33a4c:	stp	x21, x22, [sp, #32]
   33a50:	add	x21, sp, #0x70
   33a54:	mov	w22, w3
   33a58:	mov	x2, #0x0                   	// #0
   33a5c:	mov	w3, #0x0                   	// #0
   33a60:	str	x7, [x28]
   33a64:	str	x9, [sp, #112]
   33a68:	str	w8, [sp, #120]
   33a6c:	str	x5, [sp, #136]
   33a70:	ldr	x25, [x4, x0]
   33a74:	mov	x0, x21
   33a78:	str	x6, [x27]
   33a7c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   33a80:	mov	x2, x23
   33a84:	mov	x1, x21
   33a88:	mov	w3, w22
   33a8c:	mov	x0, x19
   33a90:	bl	bd90 <mpfr_pow@plt>
   33a94:	str	x25, [x27]
   33a98:	ldr	w1, [x24]
   33a9c:	ldr	x2, [x19, #16]
   33aa0:	orr	w1, w20, w1
   33aa4:	str	x26, [x28]
   33aa8:	str	w1, [x24]
   33aac:	cmp	x26, x2
   33ab0:	ccmp	x25, x2, #0x1, le
   33ab4:	b.ge	33ae4 <mpfr_ui_pow@@Base+0x114>  // b.tcont
   33ab8:	mov	w1, w0
   33abc:	mov	w2, w22
   33ac0:	mov	x0, x19
   33ac4:	bl	cb30 <mpfr_check_range@plt>
   33ac8:	ldp	x19, x20, [sp, #16]
   33acc:	ldp	x21, x22, [sp, #32]
   33ad0:	ldp	x23, x24, [sp, #48]
   33ad4:	ldp	x25, x26, [sp, #64]
   33ad8:	ldp	x27, x28, [sp, #80]
   33adc:	ldp	x29, x30, [sp], #144
   33ae0:	ret
   33ae4:	cbz	w0, 33ac8 <mpfr_ui_pow@@Base+0xf8>
   33ae8:	orr	w1, w1, #0x8
   33aec:	str	w1, [x24]
   33af0:	ldp	x19, x20, [sp, #16]
   33af4:	ldp	x21, x22, [sp, #32]
   33af8:	ldp	x23, x24, [sp, #48]
   33afc:	ldp	x25, x26, [sp, #64]
   33b00:	ldp	x27, x28, [sp, #80]
   33b04:	ldp	x29, x30, [sp], #144
   33b08:	ret
   33b0c:	nop

0000000000033b10 <mpfr_ui_pow_ui@@Base>:
   33b10:	stp	x29, x30, [sp, #-176]!
   33b14:	cmp	x2, #0x1
   33b18:	mov	x29, sp
   33b1c:	stp	x19, x20, [sp, #16]
   33b20:	stp	x23, x24, [sp, #48]
   33b24:	mov	x24, x0
   33b28:	stp	x25, x26, [sp, #64]
   33b2c:	mov	w25, w3
   33b30:	b.ls	33d48 <mpfr_ui_pow_ui@@Base+0x238>  // b.plast
   33b34:	stp	x21, x22, [sp, #32]
   33b38:	mov	x20, x2
   33b3c:	mov	x22, x1
   33b40:	cmp	x1, #0x1
   33b44:	mov	x0, x2
   33b48:	mov	w19, #0x0                   	// #0
   33b4c:	b.ls	33d64 <mpfr_ui_pow_ui@@Base+0x254>  // b.plast
   33b50:	stp	x27, x28, [sp, #80]
   33b54:	nop
   33b58:	mov	w21, w19
   33b5c:	lsr	x0, x0, #1
   33b60:	add	w19, w19, #0x1
   33b64:	cbnz	x0, 33b58 <mpfr_ui_pow_ui@@Base+0x48>
   33b68:	mrs	x23, tpidr_el0
   33b6c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33b70:	ldr	x1, [x0, #2576]
   33b74:	add	x0, x0, #0xa10
   33b78:	blr	x1
   33b7c:	ldr	x1, [x24]
   33b80:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   33b84:	ldr	w0, [x23, x0]
   33b88:	add	x26, sp, #0x90
   33b8c:	str	w0, [sp, #108]
   33b90:	add	x1, x1, #0x3
   33b94:	add	x1, x1, w19, sxtw
   33b98:	sub	w21, w21, #0x1
   33b9c:	str	x1, [sp, #128]
   33ba0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33ba4:	ldr	x2, [x0, #2512]
   33ba8:	add	x0, x0, #0x9d0
   33bac:	blr	x2
   33bb0:	add	x3, x23, x0
   33bb4:	ldr	x0, [x23, x0]
   33bb8:	str	x0, [sp, #112]
   33bbc:	str	x5, [x3]
   33bc0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33bc4:	ldr	x2, [x0, #2544]
   33bc8:	add	x0, x0, #0x9f0
   33bcc:	blr	x2
   33bd0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   33bd4:	ldr	x28, [x23, x0]
   33bd8:	str	x2, [x23, x0]
   33bdc:	mov	x0, x26
   33be0:	bl	ca80 <mpfr_init2@plt>
   33be4:	mov	w0, w21
   33be8:	mov	x1, #0x40                  	// #64
   33bec:	add	x0, x0, #0x2
   33bf0:	str	x0, [sp, #120]
   33bf4:	str	x1, [sp, #136]
   33bf8:	mov	x1, x22
   33bfc:	mov	x0, x26
   33c00:	mov	w3, #0x2                   	// #2
   33c04:	mov	x2, #0x0                   	// #0
   33c08:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   33c0c:	mov	w19, w0
   33c10:	cmn	w21, #0x1
   33c14:	b.eq	33d5c <mpfr_ui_pow_ui@@Base+0x24c>  // b.none
   33c18:	mov	w27, w21
   33c1c:	nop
   33c20:	mov	x2, x26
   33c24:	mov	x1, x26
   33c28:	mov	x0, x26
   33c2c:	mov	w3, #0x2                   	// #2
   33c30:	bl	bd50 <mpfr_mul@plt>
   33c34:	orr	w19, w19, w0
   33c38:	lsr	x0, x20, x27
   33c3c:	tbz	w0, #0, 33c58 <mpfr_ui_pow_ui@@Base+0x148>
   33c40:	mov	x2, x22
   33c44:	mov	x1, x26
   33c48:	mov	x0, x26
   33c4c:	mov	w3, #0x2                   	// #2
   33c50:	bl	ba50 <mpfr_mul_ui@plt>
   33c54:	orr	w19, w19, w0
   33c58:	sub	w27, w27, #0x1
   33c5c:	cmn	w27, #0x1
   33c60:	b.ne	33c20 <mpfr_ui_pow_ui@@Base+0x110>  // b.any
   33c64:	ldr	x2, [sp, #120]
   33c68:	cbnz	w19, 33d80 <mpfr_ui_pow_ui@@Base+0x270>
   33c6c:	ldr	w3, [sp, #152]
   33c70:	mov	w2, w25
   33c74:	mov	x1, x26
   33c78:	mov	x0, x24
   33c7c:	bl	c6a0 <mpfr_set4@plt>
   33c80:	mov	w19, w0
   33c84:	mov	x0, x26
   33c88:	bl	c070 <mpfr_clear@plt>
   33c8c:	ldr	x1, [x24, #16]
   33c90:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33c94:	ldr	x2, [x0, #2576]
   33c98:	add	x0, x0, #0xa10
   33c9c:	blr	x2
   33ca0:	ldr	w2, [sp, #108]
   33ca4:	str	w2, [x23, x0]
   33ca8:	add	x2, x23, x0
   33cac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33cb0:	ldr	x3, [x0, #2512]
   33cb4:	add	x0, x0, #0x9d0
   33cb8:	blr	x3
   33cbc:	ldr	x3, [sp, #112]
   33cc0:	str	x3, [x23, x0]
   33cc4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33cc8:	ldr	x4, [x0, #2544]
   33ccc:	add	x0, x0, #0x9f0
   33cd0:	blr	x4
   33cd4:	str	x28, [x23, x0]
   33cd8:	cmp	x28, x1
   33cdc:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   33ce0:	b.le	33d18 <mpfr_ui_pow_ui@@Base+0x208>
   33ce4:	mov	w1, w19
   33ce8:	mov	w2, w25
   33cec:	mov	x0, x24
   33cf0:	bl	cb30 <mpfr_check_range@plt>
   33cf4:	ldp	x21, x22, [sp, #32]
   33cf8:	mov	w19, w0
   33cfc:	ldp	x27, x28, [sp, #80]
   33d00:	mov	w0, w19
   33d04:	ldp	x19, x20, [sp, #16]
   33d08:	ldp	x23, x24, [sp, #48]
   33d0c:	ldp	x25, x26, [sp, #64]
   33d10:	ldp	x29, x30, [sp], #176
   33d14:	ret
   33d18:	cbz	w19, 33d28 <mpfr_ui_pow_ui@@Base+0x218>
   33d1c:	ldr	w0, [sp, #108]
   33d20:	orr	w26, w0, #0x8
   33d24:	str	w26, [x2]
   33d28:	mov	w0, w19
   33d2c:	ldp	x19, x20, [sp, #16]
   33d30:	ldp	x21, x22, [sp, #32]
   33d34:	ldp	x23, x24, [sp, #48]
   33d38:	ldp	x25, x26, [sp, #64]
   33d3c:	ldp	x27, x28, [sp, #80]
   33d40:	ldp	x29, x30, [sp], #176
   33d44:	ret
   33d48:	b.ne	33e04 <mpfr_ui_pow_ui@@Base+0x2f4>  // b.any
   33d4c:	mov	x2, #0x0                   	// #0
   33d50:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   33d54:	mov	w19, w0
   33d58:	b	33d00 <mpfr_ui_pow_ui@@Base+0x1f0>
   33d5c:	mov	x2, #0x1                   	// #1
   33d60:	b	33c68 <mpfr_ui_pow_ui@@Base+0x158>
   33d64:	b.eq	33e00 <mpfr_ui_pow_ui@@Base+0x2f0>  // b.none
   33d68:	mov	w1, #0x1                   	// #1
   33d6c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   33d70:	ldp	x21, x22, [sp, #32]
   33d74:	str	w1, [x24, #8]
   33d78:	str	x0, [x24, #16]
   33d7c:	b	33d00 <mpfr_ui_pow_ui@@Base+0x1f0>
   33d80:	ldr	x1, [sp, #160]
   33d84:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   33d88:	cmp	x1, x0
   33d8c:	b.le	33dc0 <mpfr_ui_pow_ui@@Base+0x2b0>
   33d90:	ldr	x1, [sp, #144]
   33d94:	cmp	w25, #0x0
   33d98:	ldr	x4, [sp, #128]
   33d9c:	sub	x1, x1, #0x1
   33da0:	ldr	x0, [sp, #168]
   33da4:	asr	x1, x1, #6
   33da8:	ldr	x3, [x24]
   33dac:	sub	x2, x4, x2
   33db0:	add	x1, x1, #0x1
   33db4:	cinc	x3, x3, eq  // eq = none
   33db8:	bl	c370 <mpfr_round_p@plt>
   33dbc:	cbnz	w0, 33c6c <mpfr_ui_pow_ui@@Base+0x15c>
   33dc0:	ldr	x1, [sp, #128]
   33dc4:	mov	x0, #0xfffffffffffffeff    	// #-257
   33dc8:	movk	x0, #0x7fff, lsl #48
   33dcc:	sub	x0, x0, x1
   33dd0:	ldr	x1, [sp, #136]
   33dd4:	cmp	x0, x1
   33dd8:	b.lt	33e20 <mpfr_ui_pow_ui@@Base+0x310>  // b.tstop
   33ddc:	ldr	x0, [sp, #128]
   33de0:	add	x0, x0, x1
   33de4:	mov	x1, x0
   33de8:	mov	x0, x26
   33dec:	add	x2, x1, x1, lsr #63
   33df0:	asr	x2, x2, #1
   33df4:	stp	x1, x2, [sp, #128]
   33df8:	bl	bed0 <mpfr_set_prec@plt>
   33dfc:	b	33bf8 <mpfr_ui_pow_ui@@Base+0xe8>
   33e00:	ldp	x21, x22, [sp, #32]
   33e04:	mov	w3, w25
   33e08:	mov	x0, x24
   33e0c:	mov	x2, #0x0                   	// #0
   33e10:	mov	x1, #0x1                   	// #1
   33e14:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   33e18:	mov	w19, w0
   33e1c:	b	33d00 <mpfr_ui_pow_ui@@Base+0x1f0>
   33e20:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   33e24:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   33e28:	add	x2, x2, #0xf80
   33e2c:	add	x0, x0, #0x330
   33e30:	mov	w1, #0x54                  	// #84
   33e34:	bl	cb40 <mpfr_assert_fail@plt>

0000000000033e38 <mpfr_min@@Base>:
   33e38:	stp	x29, x30, [sp, #-48]!
   33e3c:	mov	x29, sp
   33e40:	stp	x19, x20, [sp, #16]
   33e44:	mov	x19, x2
   33e48:	mov	x20, x1
   33e4c:	ldr	x2, [x1, #16]
   33e50:	stp	x21, x22, [sp, #32]
   33e54:	mov	w22, w3
   33e58:	mov	x21, x0
   33e5c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   33e60:	cmp	x2, x3
   33e64:	ldr	x4, [x19, #16]
   33e68:	b.le	33ed4 <mpfr_min@@Base+0x9c>
   33e6c:	mov	x0, #0x2                   	// #2
   33e70:	movk	x0, #0x8000, lsl #48
   33e74:	cmp	x4, x0
   33e78:	b.eq	33eb4 <mpfr_min@@Base+0x7c>  // b.none
   33e7c:	mov	x1, x19
   33e80:	mov	x0, x20
   33e84:	mov	w2, #0x1                   	// #1
   33e88:	bl	c9a0 <mpfr_cmp3@plt>
   33e8c:	cmp	w0, #0x0
   33e90:	b.le	33eb4 <mpfr_min@@Base+0x7c>
   33e94:	ldr	w3, [x19, #8]
   33e98:	mov	w2, w22
   33e9c:	mov	x0, x21
   33ea0:	mov	x1, x19
   33ea4:	ldp	x19, x20, [sp, #16]
   33ea8:	ldp	x21, x22, [sp, #32]
   33eac:	ldp	x29, x30, [sp], #48
   33eb0:	b	c6a0 <mpfr_set4@plt>
   33eb4:	ldr	w3, [x20, #8]
   33eb8:	mov	w2, w22
   33ebc:	mov	x0, x21
   33ec0:	mov	x1, x20
   33ec4:	ldp	x19, x20, [sp, #16]
   33ec8:	ldp	x21, x22, [sp, #32]
   33ecc:	ldp	x29, x30, [sp], #48
   33ed0:	b	c6a0 <mpfr_set4@plt>
   33ed4:	mov	x3, #0x2                   	// #2
   33ed8:	movk	x3, #0x8000, lsl #48
   33edc:	cmp	x2, x3
   33ee0:	b.ne	33f28 <mpfr_min@@Base+0xf0>  // b.any
   33ee4:	cmp	x4, x2
   33ee8:	b.ne	33e94 <mpfr_min@@Base+0x5c>  // b.any
   33eec:	mrs	x1, tpidr_el0
   33ef0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   33ef4:	ldr	x2, [x0, #2576]
   33ef8:	add	x0, x0, #0xa10
   33efc:	blr	x2
   33f00:	add	x0, x1, x0
   33f04:	ldp	x19, x20, [sp, #16]
   33f08:	str	x4, [x21, #16]
   33f0c:	ldr	w1, [x0]
   33f10:	ldp	x21, x22, [sp, #32]
   33f14:	orr	w1, w1, #0x4
   33f18:	str	w1, [x0]
   33f1c:	mov	w0, #0x0                   	// #0
   33f20:	ldp	x29, x30, [sp], #48
   33f24:	ret
   33f28:	cmp	x4, x3
   33f2c:	b.eq	33eb4 <mpfr_min@@Base+0x7c>  // b.none
   33f30:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   33f34:	cmp	x4, x3
   33f38:	ccmp	x2, x3, #0x0, eq  // eq = none
   33f3c:	b.ne	33e7c <mpfr_min@@Base+0x44>  // b.any
   33f40:	ldr	w3, [x1, #8]
   33f44:	tbz	w3, #31, 33e94 <mpfr_min@@Base+0x5c>
   33f48:	mov	w2, w22
   33f4c:	ldp	x19, x20, [sp, #16]
   33f50:	ldp	x21, x22, [sp, #32]
   33f54:	ldp	x29, x30, [sp], #48
   33f58:	b	c6a0 <mpfr_set4@plt>
   33f5c:	nop

0000000000033f60 <mpfr_max@@Base>:
   33f60:	stp	x29, x30, [sp, #-48]!
   33f64:	mov	x29, sp
   33f68:	stp	x19, x20, [sp, #16]
   33f6c:	mov	x20, x2
   33f70:	mov	x19, x1
   33f74:	ldr	x2, [x1, #16]
   33f78:	stp	x21, x22, [sp, #32]
   33f7c:	mov	w22, w3
   33f80:	mov	x21, x0
   33f84:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   33f88:	cmp	x2, x3
   33f8c:	ldr	x4, [x20, #16]
   33f90:	b.le	33fdc <mpfr_max@@Base+0x7c>
   33f94:	mov	x0, #0x2                   	// #2
   33f98:	movk	x0, #0x8000, lsl #48
   33f9c:	cmp	x4, x0
   33fa0:	b.eq	33fbc <mpfr_max@@Base+0x5c>  // b.none
   33fa4:	mov	x1, x20
   33fa8:	mov	x0, x19
   33fac:	mov	w2, #0x1                   	// #1
   33fb0:	bl	c9a0 <mpfr_cmp3@plt>
   33fb4:	cmp	w0, #0x0
   33fb8:	b.le	33ff4 <mpfr_max@@Base+0x94>
   33fbc:	ldr	w3, [x19, #8]
   33fc0:	mov	w2, w22
   33fc4:	mov	x0, x21
   33fc8:	mov	x1, x19
   33fcc:	ldp	x19, x20, [sp, #16]
   33fd0:	ldp	x21, x22, [sp, #32]
   33fd4:	ldp	x29, x30, [sp], #48
   33fd8:	b	c6a0 <mpfr_set4@plt>
   33fdc:	mov	x3, #0x2                   	// #2
   33fe0:	movk	x3, #0x8000, lsl #48
   33fe4:	cmp	x2, x3
   33fe8:	b.ne	34014 <mpfr_max@@Base+0xb4>  // b.any
   33fec:	cmp	x4, x2
   33ff0:	b.eq	34048 <mpfr_max@@Base+0xe8>  // b.none
   33ff4:	ldr	w3, [x20, #8]
   33ff8:	mov	w2, w22
   33ffc:	mov	x0, x21
   34000:	mov	x1, x20
   34004:	ldp	x19, x20, [sp, #16]
   34008:	ldp	x21, x22, [sp, #32]
   3400c:	ldp	x29, x30, [sp], #48
   34010:	b	c6a0 <mpfr_set4@plt>
   34014:	cmp	x4, x3
   34018:	b.eq	33fbc <mpfr_max@@Base+0x5c>  // b.none
   3401c:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   34020:	cmp	x4, x3
   34024:	ccmp	x2, x3, #0x0, eq  // eq = none
   34028:	b.ne	33fa4 <mpfr_max@@Base+0x44>  // b.any
   3402c:	ldr	w3, [x1, #8]
   34030:	tbnz	w3, #31, 33ff4 <mpfr_max@@Base+0x94>
   34034:	mov	w2, w22
   34038:	ldp	x19, x20, [sp, #16]
   3403c:	ldp	x21, x22, [sp, #32]
   34040:	ldp	x29, x30, [sp], #48
   34044:	b	c6a0 <mpfr_set4@plt>
   34048:	mrs	x1, tpidr_el0
   3404c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34050:	ldr	x2, [x0, #2576]
   34054:	add	x0, x0, #0xa10
   34058:	blr	x2
   3405c:	add	x0, x1, x0
   34060:	ldp	x19, x20, [sp, #16]
   34064:	str	x4, [x21, #16]
   34068:	ldr	w1, [x0]
   3406c:	ldp	x21, x22, [sp, #32]
   34070:	orr	w1, w1, #0x4
   34074:	str	w1, [x0]
   34078:	mov	w0, #0x0                   	// #0
   3407c:	ldp	x29, x30, [sp], #48
   34080:	ret
   34084:	nop

0000000000034088 <mpfr_dim@@Base>:
   34088:	stp	x29, x30, [sp, #-48]!
   3408c:	mov	x29, sp
   34090:	stp	x19, x20, [sp, #16]
   34094:	mov	x19, x1
   34098:	ldr	x1, [x1, #16]
   3409c:	stp	x21, x22, [sp, #32]
   340a0:	mov	x21, x0
   340a4:	mov	x0, #0x2                   	// #2
   340a8:	movk	x0, #0x8000, lsl #48
   340ac:	cmp	x1, x0
   340b0:	b.eq	34124 <mpfr_dim@@Base+0x9c>  // b.none
   340b4:	ldr	x1, [x2, #16]
   340b8:	mov	x20, x2
   340bc:	cmp	x1, x0
   340c0:	b.eq	34124 <mpfr_dim@@Base+0x9c>  // b.none
   340c4:	mov	w22, w3
   340c8:	mov	x1, x20
   340cc:	mov	x0, x19
   340d0:	mov	w2, #0x1                   	// #1
   340d4:	bl	c9a0 <mpfr_cmp3@plt>
   340d8:	cmp	w0, #0x0
   340dc:	b.gt	34104 <mpfr_dim@@Base+0x7c>
   340e0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   340e4:	mov	w1, #0x1                   	// #1
   340e8:	str	w1, [x21, #8]
   340ec:	str	x0, [x21, #16]
   340f0:	mov	w0, #0x0                   	// #0
   340f4:	ldp	x19, x20, [sp, #16]
   340f8:	ldp	x21, x22, [sp, #32]
   340fc:	ldp	x29, x30, [sp], #48
   34100:	ret
   34104:	mov	w3, w22
   34108:	mov	x2, x20
   3410c:	mov	x1, x19
   34110:	mov	x0, x21
   34114:	ldp	x19, x20, [sp, #16]
   34118:	ldp	x21, x22, [sp, #32]
   3411c:	ldp	x29, x30, [sp], #48
   34120:	b	bb70 <mpfr_sub@plt>
   34124:	mrs	x1, tpidr_el0
   34128:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3412c:	ldr	x2, [x0, #2576]
   34130:	add	x0, x0, #0xa10
   34134:	blr	x2
   34138:	add	x0, x1, x0
   3413c:	mov	x1, #0x2                   	// #2
   34140:	movk	x1, #0x8000, lsl #48
   34144:	str	x1, [x21, #16]
   34148:	ldp	x19, x20, [sp, #16]
   3414c:	ldr	w1, [x0]
   34150:	ldp	x21, x22, [sp, #32]
   34154:	orr	w1, w1, #0x4
   34158:	str	w1, [x0]
   3415c:	mov	w0, #0x0                   	// #0
   34160:	ldp	x29, x30, [sp], #48
   34164:	ret

0000000000034168 <mpfr_signbit@@Base>:
   34168:	ldr	w0, [x0, #8]
   3416c:	lsr	w0, w0, #31
   34170:	ret
   34174:	nop

0000000000034178 <mpfr_copysign@@Base>:
   34178:	mov	x4, x2
   3417c:	mov	w2, w3
   34180:	ldr	w3, [x4, #8]
   34184:	b	c6a0 <mpfr_set4@plt>

0000000000034188 <mpfr_setsign@@Base>:
   34188:	cmp	w2, #0x0
   3418c:	mov	w2, w3
   34190:	mov	w3, #0x1                   	// #1
   34194:	cneg	w3, w3, ne  // ne = any
   34198:	b	c6a0 <mpfr_set4@plt>
   3419c:	nop
   341a0:	stp	x29, x30, [sp, #-32]!
   341a4:	mov	x29, sp
   341a8:	ldr	w2, [x1, #4]
   341ac:	stp	x19, x20, [sp, #16]
   341b0:	mov	x19, x1
   341b4:	cmp	w2, #0x0
   341b8:	cneg	w2, w2, lt  // lt = tstop
   341bc:	mov	x20, x0
   341c0:	cmp	w2, #0x1
   341c4:	mov	x1, #0x40                  	// #64
   341c8:	b.le	341e8 <mpfr_setsign@@Base+0x60>
   341cc:	mov	x3, #0xfffffffffffffff8    	// #-8
   341d0:	sbfiz	x1, x2, #6, #32
   341d4:	ldr	x0, [x19, #8]
   341d8:	add	x2, x3, w2, sxtw #3
   341dc:	ldr	x0, [x0, x2]
   341e0:	clz	x0, x0
   341e4:	sub	x1, x1, x0
   341e8:	mov	x0, x20
   341ec:	bl	ca80 <mpfr_init2@plt>
   341f0:	mov	x1, x19
   341f4:	mov	x0, x20
   341f8:	mov	w2, #0x0                   	// #0
   341fc:	bl	c240 <mpfr_set_z@plt>
   34200:	cbnz	w0, 34210 <mpfr_setsign@@Base+0x88>
   34204:	ldp	x19, x20, [sp, #16]
   34208:	ldp	x29, x30, [sp], #32
   3420c:	ret
   34210:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34214:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34218:	add	x2, x2, #0x340
   3421c:	add	x0, x0, #0x348
   34220:	mov	w1, #0x31                  	// #49
   34224:	bl	cb40 <mpfr_assert_fail@plt>
   34228:	stp	x29, x30, [sp, #-144]!
   3422c:	mrs	x5, tpidr_el0
   34230:	mov	x29, sp
   34234:	stp	x21, x22, [sp, #32]
   34238:	mov	x21, x0
   3423c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34240:	ldr	x6, [x0, #2576]
   34244:	add	x0, x0, #0xa10
   34248:	blr	x6
   3424c:	ldr	w22, [x5, x0]
   34250:	stp	x23, x24, [sp, #48]
   34254:	mov	x24, x1
   34258:	mov	x1, x2
   3425c:	stp	x25, x26, [sp, #64]
   34260:	add	x25, x5, x0
   34264:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34268:	ldr	x2, [x0, #2512]
   3426c:	add	x0, x0, #0x9d0
   34270:	blr	x2
   34274:	add	x6, x5, x0
   34278:	stp	x27, x28, [sp, #80]
   3427c:	mov	w23, w3
   34280:	ldr	x26, [x5, x0]
   34284:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34288:	ldr	x2, [x0, #2544]
   3428c:	add	x0, x0, #0x9f0
   34290:	blr	x2
   34294:	add	x28, x5, x0
   34298:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   3429c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   342a0:	stp	x19, x20, [sp, #16]
   342a4:	add	x20, sp, #0x70
   342a8:	mov	x19, x4
   342ac:	str	x3, [x6]
   342b0:	str	x6, [sp, #104]
   342b4:	ldr	x27, [x5, x0]
   342b8:	mov	x0, x20
   342bc:	str	x2, [x28]
   342c0:	bl	341a0 <mpfr_setsign@@Base+0x18>
   342c4:	mov	w3, w23
   342c8:	mov	x2, x20
   342cc:	mov	x1, x24
   342d0:	mov	x0, x21
   342d4:	blr	x19
   342d8:	mov	w19, w0
   342dc:	ldr	w1, [x25]
   342e0:	mov	x0, x20
   342e4:	orr	w22, w22, w1
   342e8:	bl	c070 <mpfr_clear@plt>
   342ec:	str	w22, [x25]
   342f0:	ldr	x6, [sp, #104]
   342f4:	str	x27, [x28]
   342f8:	ldr	x0, [x21, #16]
   342fc:	str	x26, [x6]
   34300:	cmp	x27, x0
   34304:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   34308:	b.le	34340 <mpfr_setsign@@Base+0x1b8>
   3430c:	mov	w1, w19
   34310:	mov	w2, w23
   34314:	mov	x0, x21
   34318:	bl	cb30 <mpfr_check_range@plt>
   3431c:	mov	w19, w0
   34320:	mov	w0, w19
   34324:	ldp	x19, x20, [sp, #16]
   34328:	ldp	x21, x22, [sp, #32]
   3432c:	ldp	x23, x24, [sp, #48]
   34330:	ldp	x25, x26, [sp, #64]
   34334:	ldp	x27, x28, [sp, #80]
   34338:	ldp	x29, x30, [sp], #144
   3433c:	ret
   34340:	cbz	w19, 34320 <mpfr_setsign@@Base+0x198>
   34344:	orr	w20, w22, #0x8
   34348:	str	w20, [x25]
   3434c:	mov	w0, w19
   34350:	ldp	x19, x20, [sp, #16]
   34354:	ldp	x21, x22, [sp, #32]
   34358:	ldp	x23, x24, [sp, #48]
   3435c:	ldp	x25, x26, [sp, #64]
   34360:	ldp	x27, x28, [sp, #80]
   34364:	ldp	x29, x30, [sp], #144
   34368:	ret
   3436c:	nop

0000000000034370 <mpfr_mul_z@@Base>:
   34370:	stp	x29, x30, [sp, #-48]!
   34374:	mov	x29, sp
   34378:	stp	x19, x20, [sp, #16]
   3437c:	mov	x20, x0
   34380:	mov	x19, x2
   34384:	mov	x0, x2
   34388:	stp	x21, x22, [sp, #32]
   3438c:	mov	x21, x1
   34390:	mov	w22, w3
   34394:	bl	be90 <__gmpz_fits_slong_p@plt>
   34398:	cbz	w0, 343c4 <mpfr_mul_z@@Base+0x54>
   3439c:	mov	x0, x19
   343a0:	bl	ba20 <__gmpz_get_si@plt>
   343a4:	mov	w3, w22
   343a8:	mov	x2, x0
   343ac:	mov	x1, x21
   343b0:	mov	x0, x20
   343b4:	ldp	x19, x20, [sp, #16]
   343b8:	ldp	x21, x22, [sp, #32]
   343bc:	ldp	x29, x30, [sp], #48
   343c0:	b	c960 <mpfr_mul_si@plt>
   343c4:	mov	w3, w22
   343c8:	mov	x2, x19
   343cc:	mov	x1, x21
   343d0:	mov	x0, x20
   343d4:	adrp	x4, 81000 <__gmpfr_l2b@@Base+0x200>
   343d8:	ldp	x19, x20, [sp, #16]
   343dc:	ldp	x21, x22, [sp, #32]
   343e0:	ldp	x29, x30, [sp], #48
   343e4:	ldr	x4, [x4, #3960]
   343e8:	b	34228 <mpfr_setsign@@Base+0xa0>
   343ec:	nop

00000000000343f0 <mpfr_div_z@@Base>:
   343f0:	stp	x29, x30, [sp, #-48]!
   343f4:	mov	x29, sp
   343f8:	stp	x19, x20, [sp, #16]
   343fc:	mov	x20, x0
   34400:	mov	x19, x2
   34404:	mov	x0, x2
   34408:	stp	x21, x22, [sp, #32]
   3440c:	mov	x21, x1
   34410:	mov	w22, w3
   34414:	bl	be90 <__gmpz_fits_slong_p@plt>
   34418:	cbz	w0, 34444 <mpfr_div_z@@Base+0x54>
   3441c:	mov	x0, x19
   34420:	bl	ba20 <__gmpz_get_si@plt>
   34424:	mov	w3, w22
   34428:	mov	x2, x0
   3442c:	mov	x1, x21
   34430:	mov	x0, x20
   34434:	ldp	x19, x20, [sp, #16]
   34438:	ldp	x21, x22, [sp, #32]
   3443c:	ldp	x29, x30, [sp], #48
   34440:	b	c820 <mpfr_div_si@plt>
   34444:	mov	w3, w22
   34448:	mov	x2, x19
   3444c:	mov	x1, x21
   34450:	mov	x0, x20
   34454:	adrp	x4, 81000 <__gmpfr_l2b@@Base+0x200>
   34458:	ldp	x19, x20, [sp, #16]
   3445c:	ldp	x21, x22, [sp, #32]
   34460:	ldp	x29, x30, [sp], #48
   34464:	ldr	x4, [x4, #4040]
   34468:	b	34228 <mpfr_setsign@@Base+0xa0>
   3446c:	nop

0000000000034470 <mpfr_add_z@@Base>:
   34470:	stp	x29, x30, [sp, #-48]!
   34474:	mov	x29, sp
   34478:	stp	x19, x20, [sp, #16]
   3447c:	mov	x20, x0
   34480:	mov	x19, x2
   34484:	mov	x0, x2
   34488:	stp	x21, x22, [sp, #32]
   3448c:	mov	x21, x1
   34490:	mov	w22, w3
   34494:	bl	be90 <__gmpz_fits_slong_p@plt>
   34498:	cbz	w0, 344c4 <mpfr_add_z@@Base+0x54>
   3449c:	mov	x0, x19
   344a0:	bl	ba20 <__gmpz_get_si@plt>
   344a4:	mov	w3, w22
   344a8:	mov	x2, x0
   344ac:	mov	x1, x21
   344b0:	mov	x0, x20
   344b4:	ldp	x19, x20, [sp, #16]
   344b8:	ldp	x21, x22, [sp, #32]
   344bc:	ldp	x29, x30, [sp], #48
   344c0:	b	c7f0 <mpfr_add_si@plt>
   344c4:	mov	w3, w22
   344c8:	mov	x2, x19
   344cc:	mov	x1, x21
   344d0:	mov	x0, x20
   344d4:	adrp	x4, 81000 <__gmpfr_l2b@@Base+0x200>
   344d8:	ldp	x19, x20, [sp, #16]
   344dc:	ldp	x21, x22, [sp, #32]
   344e0:	ldp	x29, x30, [sp], #48
   344e4:	ldr	x4, [x4, #4008]
   344e8:	b	34228 <mpfr_setsign@@Base+0xa0>
   344ec:	nop

00000000000344f0 <mpfr_sub_z@@Base>:
   344f0:	stp	x29, x30, [sp, #-48]!
   344f4:	mov	x29, sp
   344f8:	stp	x19, x20, [sp, #16]
   344fc:	mov	x20, x0
   34500:	mov	x19, x2
   34504:	mov	x0, x2
   34508:	stp	x21, x22, [sp, #32]
   3450c:	mov	x21, x1
   34510:	mov	w22, w3
   34514:	bl	be90 <__gmpz_fits_slong_p@plt>
   34518:	cbz	w0, 34544 <mpfr_sub_z@@Base+0x54>
   3451c:	mov	x0, x19
   34520:	bl	ba20 <__gmpz_get_si@plt>
   34524:	mov	w3, w22
   34528:	mov	x2, x0
   3452c:	mov	x1, x21
   34530:	mov	x0, x20
   34534:	ldp	x19, x20, [sp, #16]
   34538:	ldp	x21, x22, [sp, #32]
   3453c:	ldp	x29, x30, [sp], #48
   34540:	b	c060 <mpfr_sub_si@plt>
   34544:	mov	w3, w22
   34548:	mov	x2, x19
   3454c:	mov	x1, x21
   34550:	mov	x0, x20
   34554:	adrp	x4, 81000 <__gmpfr_l2b@@Base+0x200>
   34558:	ldp	x19, x20, [sp, #16]
   3455c:	ldp	x21, x22, [sp, #32]
   34560:	ldp	x29, x30, [sp], #48
   34564:	ldr	x4, [x4, #3944]
   34568:	b	34228 <mpfr_setsign@@Base+0xa0>
   3456c:	nop

0000000000034570 <mpfr_z_sub@@Base>:
   34570:	stp	x29, x30, [sp, #-144]!
   34574:	mov	x29, sp
   34578:	stp	x19, x20, [sp, #16]
   3457c:	mov	x20, x0
   34580:	mov	x19, x1
   34584:	mov	x0, x1
   34588:	stp	x21, x22, [sp, #32]
   3458c:	mov	x22, x2
   34590:	mov	w21, w3
   34594:	bl	be90 <__gmpz_fits_slong_p@plt>
   34598:	cbz	w0, 345d0 <mpfr_z_sub@@Base+0x60>
   3459c:	mov	x0, x19
   345a0:	bl	ba20 <__gmpz_get_si@plt>
   345a4:	mov	w3, w21
   345a8:	mov	x2, x22
   345ac:	mov	x1, x0
   345b0:	mov	x0, x20
   345b4:	bl	c5d0 <mpfr_si_sub@plt>
   345b8:	mov	w19, w0
   345bc:	mov	w0, w19
   345c0:	ldp	x19, x20, [sp, #16]
   345c4:	ldp	x21, x22, [sp, #32]
   345c8:	ldp	x29, x30, [sp], #144
   345cc:	ret
   345d0:	mrs	x4, tpidr_el0
   345d4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   345d8:	ldr	x1, [x0, #2576]
   345dc:	add	x0, x0, #0xa10
   345e0:	blr	x1
   345e4:	stp	x23, x24, [sp, #48]
   345e8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   345ec:	add	x23, sp, #0x70
   345f0:	ldr	w24, [x4, x0]
   345f4:	mov	x1, x19
   345f8:	stp	x25, x26, [sp, #64]
   345fc:	add	x25, x4, x0
   34600:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34604:	ldr	x2, [x0, #2512]
   34608:	add	x0, x0, #0x9d0
   3460c:	blr	x2
   34610:	add	x5, x4, x0
   34614:	stp	x27, x28, [sp, #80]
   34618:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3461c:	ldr	x26, [x4, x0]
   34620:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34624:	ldr	x6, [x0, #2544]
   34628:	add	x0, x0, #0x9f0
   3462c:	blr	x6
   34630:	add	x28, x4, x0
   34634:	str	x3, [x5]
   34638:	str	x5, [sp, #104]
   3463c:	ldr	x27, [x4, x0]
   34640:	mov	x0, x23
   34644:	str	x2, [x28]
   34648:	bl	341a0 <mpfr_setsign@@Base+0x18>
   3464c:	mov	x2, x22
   34650:	mov	w3, w21
   34654:	mov	x1, x23
   34658:	mov	x0, x20
   3465c:	bl	bb70 <mpfr_sub@plt>
   34660:	ldr	w22, [x25]
   34664:	mov	w19, w0
   34668:	mov	x0, x23
   3466c:	bl	c070 <mpfr_clear@plt>
   34670:	orr	w22, w24, w22
   34674:	ldr	x5, [sp, #104]
   34678:	str	w22, [x25]
   3467c:	ldr	x0, [x20, #16]
   34680:	str	x27, [x28]
   34684:	str	x26, [x5]
   34688:	cmp	x27, x0
   3468c:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   34690:	b.le	346c8 <mpfr_z_sub@@Base+0x158>
   34694:	mov	w2, w21
   34698:	mov	w1, w19
   3469c:	mov	x0, x20
   346a0:	bl	cb30 <mpfr_check_range@plt>
   346a4:	mov	w19, w0
   346a8:	mov	w0, w19
   346ac:	ldp	x19, x20, [sp, #16]
   346b0:	ldp	x21, x22, [sp, #32]
   346b4:	ldp	x23, x24, [sp, #48]
   346b8:	ldp	x25, x26, [sp, #64]
   346bc:	ldp	x27, x28, [sp, #80]
   346c0:	ldp	x29, x30, [sp], #144
   346c4:	ret
   346c8:	cbz	w19, 346d4 <mpfr_z_sub@@Base+0x164>
   346cc:	orr	w22, w22, #0x8
   346d0:	str	w22, [x25]
   346d4:	mov	w0, w19
   346d8:	ldp	x19, x20, [sp, #16]
   346dc:	ldp	x21, x22, [sp, #32]
   346e0:	ldp	x23, x24, [sp, #48]
   346e4:	ldp	x25, x26, [sp, #64]
   346e8:	ldp	x27, x28, [sp, #80]
   346ec:	ldp	x29, x30, [sp], #144
   346f0:	ret
   346f4:	nop

00000000000346f8 <mpfr_cmp_z@@Base>:
   346f8:	stp	x29, x30, [sp, #-80]!
   346fc:	mov	x29, sp
   34700:	stp	x19, x20, [sp, #16]
   34704:	mov	x20, x0
   34708:	mov	x19, x1
   3470c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   34710:	ldr	x1, [x20, #16]
   34714:	cmp	x1, x0
   34718:	b.le	34814 <mpfr_cmp_z@@Base+0x11c>
   3471c:	mov	x0, x19
   34720:	bl	be90 <__gmpz_fits_slong_p@plt>
   34724:	cbnz	w0, 347cc <mpfr_cmp_z@@Base+0xd4>
   34728:	ldr	w2, [x19, #4]
   3472c:	mov	x1, #0x40                  	// #64
   34730:	stp	x21, x22, [sp, #32]
   34734:	cmp	w2, #0x0
   34738:	cneg	w2, w2, lt  // lt = tstop
   3473c:	cmp	w2, #0x1
   34740:	b.le	34760 <mpfr_cmp_z@@Base+0x68>
   34744:	mov	x3, #0xfffffffffffffff8    	// #-8
   34748:	sbfiz	x1, x2, #6, #32
   3474c:	ldr	x0, [x19, #8]
   34750:	add	x2, x3, w2, sxtw #3
   34754:	ldr	x0, [x0, x2]
   34758:	clz	x0, x0
   3475c:	sub	x1, x1, x0
   34760:	add	x21, sp, #0x30
   34764:	mov	x0, x21
   34768:	bl	ca80 <mpfr_init2@plt>
   3476c:	mrs	x3, tpidr_el0
   34770:	mov	x1, x19
   34774:	mov	w2, #0x0                   	// #0
   34778:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3477c:	ldr	x4, [x0, #2576]
   34780:	add	x0, x0, #0xa10
   34784:	blr	x4
   34788:	add	x19, x3, x0
   3478c:	ldr	w22, [x3, x0]
   34790:	mov	x0, x21
   34794:	bl	c240 <mpfr_set_z@plt>
   34798:	cbnz	w0, 347f8 <mpfr_cmp_z@@Base+0x100>
   3479c:	mov	x1, x21
   347a0:	mov	w2, #0x1                   	// #1
   347a4:	mov	x0, x20
   347a8:	bl	c9a0 <mpfr_cmp3@plt>
   347ac:	mov	w19, w0
   347b0:	mov	x0, x21
   347b4:	bl	c070 <mpfr_clear@plt>
   347b8:	mov	w0, w19
   347bc:	ldp	x19, x20, [sp, #16]
   347c0:	ldp	x21, x22, [sp, #32]
   347c4:	ldp	x29, x30, [sp], #80
   347c8:	ret
   347cc:	mov	x0, x19
   347d0:	bl	ba20 <__gmpz_get_si@plt>
   347d4:	mov	x2, #0x0                   	// #0
   347d8:	mov	x1, x0
   347dc:	mov	x0, x20
   347e0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   347e4:	mov	w19, w0
   347e8:	mov	w0, w19
   347ec:	ldp	x19, x20, [sp, #16]
   347f0:	ldp	x29, x30, [sp], #80
   347f4:	ret
   347f8:	mov	x1, x21
   347fc:	mov	x0, x21
   34800:	mov	w3, #0x1                   	// #1
   34804:	mov	x2, #0x2                   	// #2
   34808:	bl	c8f0 <mpfr_div_2ui@plt>
   3480c:	str	w22, [x19]
   34810:	b	3479c <mpfr_cmp_z@@Base+0xa4>
   34814:	ldr	w3, [x19, #4]
   34818:	mov	x4, #0xffffffffffffffff    	// #-1
   3481c:	mov	x0, x20
   34820:	mov	x2, #0x0                   	// #0
   34824:	cmp	w3, #0x0
   34828:	cset	x1, gt
   3482c:	csel	x1, x1, x4, ge  // ge = tcont
   34830:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   34834:	mov	w19, w0
   34838:	mov	w0, w19
   3483c:	ldp	x19, x20, [sp, #16]
   34840:	ldp	x29, x30, [sp], #80
   34844:	ret

0000000000034848 <mpfr_mul_q@@Base>:
   34848:	stp	x29, x30, [sp, #-176]!
   3484c:	mov	x29, sp
   34850:	ldr	w4, [x2, #4]
   34854:	stp	x19, x20, [sp, #16]
   34858:	mov	x20, x0
   3485c:	stp	x23, x24, [sp, #48]
   34860:	ldr	w24, [x2, #20]
   34864:	stp	x25, x26, [sp, #64]
   34868:	mov	x26, x2
   3486c:	cbz	w4, 34a08 <mpfr_mul_q@@Base+0x1c0>
   34870:	cbz	w24, 34a3c <mpfr_mul_q@@Base+0x1f4>
   34874:	add	x5, x2, #0x10
   34878:	mrs	x19, tpidr_el0
   3487c:	stp	x27, x28, [sp, #80]
   34880:	mov	x27, x1
   34884:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34888:	ldr	x1, [x0, #2576]
   3488c:	add	x0, x0, #0xa10
   34890:	blr	x1
   34894:	add	x24, x19, x0
   34898:	stp	x21, x22, [sp, #32]
   3489c:	ldr	w22, [x19, x0]
   348a0:	str	x5, [sp, #104]
   348a4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   348a8:	ldr	x5, [x0, #2512]
   348ac:	add	x0, x0, #0x9d0
   348b0:	blr	x5
   348b4:	add	x6, x19, x0
   348b8:	mov	x1, #0xfffffffffffffff8    	// #-8
   348bc:	ldr	x23, [x19, x0]
   348c0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   348c4:	ldr	x5, [x0, #2544]
   348c8:	add	x0, x0, #0x9f0
   348cc:	blr	x5
   348d0:	cmp	w4, #0x0
   348d4:	mov	w21, w3
   348d8:	cneg	w4, w4, lt  // lt = tstop
   348dc:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   348e0:	ldr	x2, [x2, #8]
   348e4:	add	x1, x1, w4, sxtw #3
   348e8:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   348ec:	sbfiz	x4, x4, #6, #32
   348f0:	ldr	x25, [x19, x0]
   348f4:	str	x3, [x19, x0]
   348f8:	ldr	x3, [x27]
   348fc:	str	x7, [x6]
   34900:	add	x28, sp, #0x70
   34904:	ldr	x2, [x2, x1]
   34908:	mov	x0, x28
   3490c:	clz	x2, x2
   34910:	sub	x4, x4, x2
   34914:	add	x1, x4, x3
   34918:	bl	ca80 <mpfr_init2@plt>
   3491c:	mov	x0, x28
   34920:	mov	x2, x26
   34924:	mov	x1, x27
   34928:	mov	w3, #0x0                   	// #0
   3492c:	bl	c4d0 <mpfr_mul_z@plt>
   34930:	ldr	x5, [sp, #104]
   34934:	cbnz	w0, 34a60 <mpfr_mul_q@@Base+0x218>
   34938:	mov	x2, x5
   3493c:	mov	w3, w21
   34940:	mov	x1, x28
   34944:	mov	x0, x20
   34948:	bl	cc80 <mpfr_div_z@plt>
   3494c:	mov	w24, w0
   34950:	mov	x0, x28
   34954:	bl	c070 <mpfr_clear@plt>
   34958:	ldr	x1, [x20, #16]
   3495c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34960:	ldr	x2, [x0, #2576]
   34964:	add	x0, x0, #0xa10
   34968:	blr	x2
   3496c:	str	w22, [x19, x0]
   34970:	add	x2, x19, x0
   34974:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34978:	ldr	x3, [x0, #2512]
   3497c:	add	x0, x0, #0x9d0
   34980:	blr	x3
   34984:	str	x23, [x19, x0]
   34988:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3498c:	ldr	x3, [x0, #2544]
   34990:	add	x0, x0, #0x9f0
   34994:	blr	x3
   34998:	str	x25, [x19, x0]
   3499c:	cmp	x25, x1
   349a0:	ccmp	x23, x1, #0x0, ge  // ge = tcont
   349a4:	b.le	349dc <mpfr_mul_q@@Base+0x194>
   349a8:	mov	w2, w21
   349ac:	mov	w1, w24
   349b0:	mov	x0, x20
   349b4:	bl	cb30 <mpfr_check_range@plt>
   349b8:	ldp	x21, x22, [sp, #32]
   349bc:	mov	w24, w0
   349c0:	ldp	x27, x28, [sp, #80]
   349c4:	mov	w0, w24
   349c8:	ldp	x19, x20, [sp, #16]
   349cc:	ldp	x23, x24, [sp, #48]
   349d0:	ldp	x25, x26, [sp, #64]
   349d4:	ldp	x29, x30, [sp], #176
   349d8:	ret
   349dc:	cbz	w24, 349e8 <mpfr_mul_q@@Base+0x1a0>
   349e0:	orr	w22, w22, #0x8
   349e4:	str	w22, [x2]
   349e8:	mov	w0, w24
   349ec:	ldp	x19, x20, [sp, #16]
   349f0:	ldp	x21, x22, [sp, #32]
   349f4:	ldp	x23, x24, [sp, #48]
   349f8:	ldp	x25, x26, [sp, #64]
   349fc:	ldp	x27, x28, [sp, #80]
   34a00:	ldp	x29, x30, [sp], #176
   34a04:	ret
   34a08:	cbz	w24, 34b20 <mpfr_mul_q@@Base+0x2d8>
   34a0c:	mov	w3, #0x0                   	// #0
   34a10:	mov	x2, #0x0                   	// #0
   34a14:	bl	ba50 <mpfr_mul_ui@plt>
   34a18:	ldr	w0, [x26, #20]
   34a1c:	tbnz	w0, #31, 34b0c <mpfr_mul_q@@Base+0x2c4>
   34a20:	mov	w24, #0x0                   	// #0
   34a24:	mov	w0, w24
   34a28:	ldp	x19, x20, [sp, #16]
   34a2c:	ldp	x23, x24, [sp, #48]
   34a30:	ldp	x25, x26, [sp, #64]
   34a34:	ldp	x29, x30, [sp], #176
   34a38:	ret
   34a3c:	mov	w3, #0x0                   	// #0
   34a40:	mov	x2, #0x0                   	// #0
   34a44:	bl	cc60 <mpfr_div_ui@plt>
   34a48:	ldr	w0, [x26, #4]
   34a4c:	tbz	w0, #31, 34a20 <mpfr_mul_q@@Base+0x1d8>
   34a50:	ldr	w0, [x20, #8]
   34a54:	neg	w0, w0
   34a58:	str	w0, [x20, #8]
   34a5c:	b	349c4 <mpfr_mul_q@@Base+0x17c>
   34a60:	mov	x2, x26
   34a64:	ldr	w6, [x27, #8]
   34a68:	ldp	x26, x4, [x27, #16]
   34a6c:	add	x1, sp, #0x90
   34a70:	ldr	x7, [x27]
   34a74:	mov	w3, #0x0                   	// #0
   34a78:	mov	x0, x28
   34a7c:	str	wzr, [x24]
   34a80:	str	x7, [sp, #144]
   34a84:	str	w6, [sp, #152]
   34a88:	stp	xzr, x4, [sp, #160]
   34a8c:	bl	c4d0 <mpfr_mul_z@plt>
   34a90:	mov	x1, x28
   34a94:	ldr	x5, [sp, #104]
   34a98:	mov	w3, w21
   34a9c:	mov	x0, x20
   34aa0:	mov	x2, x5
   34aa4:	bl	cc80 <mpfr_div_z@plt>
   34aa8:	ldr	w1, [x24]
   34aac:	mov	w24, w0
   34ab0:	mov	w0, #0x27                  	// #39
   34ab4:	tst	w1, w0
   34ab8:	b.ne	34b50 <mpfr_mul_q@@Base+0x308>  // b.any
   34abc:	ldr	x1, [x20, #16]
   34ac0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34ac4:	ldr	x2, [x0, #2512]
   34ac8:	add	x0, x0, #0x9d0
   34acc:	blr	x2
   34ad0:	ldr	x0, [x19, x0]
   34ad4:	add	x26, x26, x1
   34ad8:	str	x26, [x20, #16]
   34adc:	cmp	x26, x0
   34ae0:	b.lt	34b30 <mpfr_mul_q@@Base+0x2e8>  // b.tstop
   34ae4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   34ae8:	cmp	x26, x0
   34aec:	b.gt	34950 <mpfr_mul_q@@Base+0x108>
   34af0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34af4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34af8:	add	x2, x2, #0x3a8
   34afc:	add	x0, x0, #0x348
   34b00:	mov	w1, #0xec                  	// #236
   34b04:	bl	cb40 <mpfr_assert_fail@plt>
   34b08:	b	34950 <mpfr_mul_q@@Base+0x108>
   34b0c:	ldr	w0, [x20, #8]
   34b10:	mov	w24, #0x0                   	// #0
   34b14:	neg	w0, w0
   34b18:	str	w0, [x20, #8]
   34b1c:	b	349c4 <mpfr_mul_q@@Base+0x17c>
   34b20:	mov	x0, #0x2                   	// #2
   34b24:	movk	x0, #0x8000, lsl #48
   34b28:	str	x0, [x20, #16]
   34b2c:	b	349c4 <mpfr_mul_q@@Base+0x17c>
   34b30:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34b34:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34b38:	add	x2, x2, #0x380
   34b3c:	add	x0, x0, #0x348
   34b40:	mov	w1, #0xeb                  	// #235
   34b44:	bl	cb40 <mpfr_assert_fail@plt>
   34b48:	ldr	x26, [x20, #16]
   34b4c:	b	34ae4 <mpfr_mul_q@@Base+0x29c>
   34b50:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34b54:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34b58:	add	x2, x2, #0x358
   34b5c:	add	x0, x0, #0x348
   34b60:	mov	w1, #0xe8                  	// #232
   34b64:	bl	cb40 <mpfr_assert_fail@plt>
   34b68:	b	34abc <mpfr_mul_q@@Base+0x274>
   34b6c:	nop

0000000000034b70 <mpfr_div_q@@Base>:
   34b70:	stp	x29, x30, [sp, #-176]!
   34b74:	mov	x29, sp
   34b78:	ldr	w4, [x2, #20]
   34b7c:	stp	x19, x20, [sp, #16]
   34b80:	mov	x19, x0
   34b84:	stp	x23, x24, [sp, #48]
   34b88:	ldr	w24, [x2, #4]
   34b8c:	stp	x27, x28, [sp, #80]
   34b90:	mov	x27, x2
   34b94:	cbz	w4, 34d34 <mpfr_div_q@@Base+0x1c4>
   34b98:	cbz	w24, 34d68 <mpfr_div_q@@Base+0x1f8>
   34b9c:	stp	x25, x26, [sp, #64]
   34ba0:	mrs	x26, tpidr_el0
   34ba4:	mov	x28, x1
   34ba8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34bac:	ldr	x1, [x0, #2576]
   34bb0:	add	x0, x0, #0xa10
   34bb4:	blr	x1
   34bb8:	add	x24, x26, x0
   34bbc:	ldr	w0, [x26, x0]
   34bc0:	add	x23, x2, #0x10
   34bc4:	str	w0, [sp, #108]
   34bc8:	mov	x1, #0xfffffffffffffff8    	// #-8
   34bcc:	stp	x21, x22, [sp, #32]
   34bd0:	mov	w20, w3
   34bd4:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   34bd8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34bdc:	ldr	x5, [x0, #2512]
   34be0:	add	x0, x0, #0x9d0
   34be4:	blr	x5
   34be8:	add	x5, x26, x0
   34bec:	ldr	x22, [x26, x0]
   34bf0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34bf4:	ldr	x7, [x0, #2544]
   34bf8:	add	x0, x0, #0x9f0
   34bfc:	blr	x7
   34c00:	cmp	w4, #0x0
   34c04:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   34c08:	cneg	w4, w4, lt  // lt = tstop
   34c0c:	add	x21, sp, #0x70
   34c10:	ldr	x2, [x2, #24]
   34c14:	add	x1, x1, w4, sxtw #3
   34c18:	ldr	x25, [x26, x0]
   34c1c:	str	x3, [x26, x0]
   34c20:	ldr	x3, [x28]
   34c24:	str	x6, [x5]
   34c28:	sbfiz	x4, x4, #6, #32
   34c2c:	mov	x0, x21
   34c30:	ldr	x2, [x2, x1]
   34c34:	clz	x2, x2
   34c38:	sub	x4, x4, x2
   34c3c:	add	x1, x4, x3
   34c40:	bl	ca80 <mpfr_init2@plt>
   34c44:	mov	x0, x21
   34c48:	mov	x2, x23
   34c4c:	mov	x1, x28
   34c50:	mov	w3, #0x0                   	// #0
   34c54:	bl	c4d0 <mpfr_mul_z@plt>
   34c58:	cbnz	w0, 34d8c <mpfr_div_q@@Base+0x21c>
   34c5c:	mov	x2, x27
   34c60:	mov	w3, w20
   34c64:	mov	x1, x21
   34c68:	mov	x0, x19
   34c6c:	bl	cc80 <mpfr_div_z@plt>
   34c70:	mov	w24, w0
   34c74:	mov	x0, x21
   34c78:	bl	c070 <mpfr_clear@plt>
   34c7c:	ldr	x1, [x19, #16]
   34c80:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34c84:	ldr	x2, [x0, #2576]
   34c88:	add	x0, x0, #0xa10
   34c8c:	blr	x2
   34c90:	ldr	w2, [sp, #108]
   34c94:	str	w2, [x26, x0]
   34c98:	add	x2, x26, x0
   34c9c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34ca0:	ldr	x3, [x0, #2512]
   34ca4:	add	x0, x0, #0x9d0
   34ca8:	blr	x3
   34cac:	str	x22, [x26, x0]
   34cb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34cb4:	ldr	x3, [x0, #2544]
   34cb8:	add	x0, x0, #0x9f0
   34cbc:	blr	x3
   34cc0:	str	x25, [x26, x0]
   34cc4:	cmp	x25, x1
   34cc8:	ccmp	x22, x1, #0x0, ge  // ge = tcont
   34ccc:	b.le	34d04 <mpfr_div_q@@Base+0x194>
   34cd0:	mov	w1, w24
   34cd4:	mov	w2, w20
   34cd8:	mov	x0, x19
   34cdc:	bl	cb30 <mpfr_check_range@plt>
   34ce0:	ldp	x21, x22, [sp, #32]
   34ce4:	mov	w24, w0
   34ce8:	ldp	x25, x26, [sp, #64]
   34cec:	mov	w0, w24
   34cf0:	ldp	x19, x20, [sp, #16]
   34cf4:	ldp	x23, x24, [sp, #48]
   34cf8:	ldp	x27, x28, [sp, #80]
   34cfc:	ldp	x29, x30, [sp], #176
   34d00:	ret
   34d04:	cbz	w24, 34d14 <mpfr_div_q@@Base+0x1a4>
   34d08:	ldr	w0, [sp, #108]
   34d0c:	orr	w21, w0, #0x8
   34d10:	str	w21, [x2]
   34d14:	mov	w0, w24
   34d18:	ldp	x19, x20, [sp, #16]
   34d1c:	ldp	x21, x22, [sp, #32]
   34d20:	ldp	x23, x24, [sp, #48]
   34d24:	ldp	x25, x26, [sp, #64]
   34d28:	ldp	x27, x28, [sp, #80]
   34d2c:	ldp	x29, x30, [sp], #176
   34d30:	ret
   34d34:	cbz	w24, 34e48 <mpfr_div_q@@Base+0x2d8>
   34d38:	mov	w3, #0x0                   	// #0
   34d3c:	mov	x2, #0x0                   	// #0
   34d40:	bl	ba50 <mpfr_mul_ui@plt>
   34d44:	ldr	w0, [x27, #4]
   34d48:	tbnz	w0, #31, 34e34 <mpfr_div_q@@Base+0x2c4>
   34d4c:	mov	w24, #0x0                   	// #0
   34d50:	mov	w0, w24
   34d54:	ldp	x19, x20, [sp, #16]
   34d58:	ldp	x23, x24, [sp, #48]
   34d5c:	ldp	x27, x28, [sp, #80]
   34d60:	ldp	x29, x30, [sp], #176
   34d64:	ret
   34d68:	mov	w3, #0x0                   	// #0
   34d6c:	mov	x2, #0x0                   	// #0
   34d70:	bl	cc60 <mpfr_div_ui@plt>
   34d74:	ldr	w0, [x27, #20]
   34d78:	tbz	w0, #31, 34d4c <mpfr_div_q@@Base+0x1dc>
   34d7c:	ldr	w0, [x19, #8]
   34d80:	neg	w0, w0
   34d84:	str	w0, [x19, #8]
   34d88:	b	34cec <mpfr_div_q@@Base+0x17c>
   34d8c:	mov	x2, x23
   34d90:	ldr	w6, [x28, #8]
   34d94:	ldp	x23, x4, [x28, #16]
   34d98:	add	x1, sp, #0x90
   34d9c:	ldr	x7, [x28]
   34da0:	mov	w3, #0x0                   	// #0
   34da4:	mov	x0, x21
   34da8:	str	wzr, [x24]
   34dac:	str	x7, [sp, #144]
   34db0:	str	w6, [sp, #152]
   34db4:	stp	xzr, x4, [sp, #160]
   34db8:	bl	c4d0 <mpfr_mul_z@plt>
   34dbc:	mov	x1, x21
   34dc0:	mov	w3, w20
   34dc4:	mov	x2, x27
   34dc8:	mov	x0, x19
   34dcc:	bl	cc80 <mpfr_div_z@plt>
   34dd0:	ldr	w1, [x24]
   34dd4:	mov	w24, w0
   34dd8:	mov	w0, #0x27                  	// #39
   34ddc:	tst	w1, w0
   34de0:	b.ne	34e78 <mpfr_div_q@@Base+0x308>  // b.any
   34de4:	ldr	x1, [x19, #16]
   34de8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34dec:	ldr	x2, [x0, #2512]
   34df0:	add	x0, x0, #0x9d0
   34df4:	blr	x2
   34df8:	ldr	x0, [x26, x0]
   34dfc:	add	x23, x23, x1
   34e00:	str	x23, [x19, #16]
   34e04:	cmp	x23, x0
   34e08:	b.lt	34e58 <mpfr_div_q@@Base+0x2e8>  // b.tstop
   34e0c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   34e10:	cmp	x23, x0
   34e14:	b.gt	34c74 <mpfr_div_q@@Base+0x104>
   34e18:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34e1c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34e20:	add	x2, x2, #0x3a8
   34e24:	add	x0, x0, #0x348
   34e28:	mov	w1, #0xec                  	// #236
   34e2c:	bl	cb40 <mpfr_assert_fail@plt>
   34e30:	b	34c74 <mpfr_div_q@@Base+0x104>
   34e34:	ldr	w0, [x19, #8]
   34e38:	mov	w24, #0x0                   	// #0
   34e3c:	neg	w0, w0
   34e40:	str	w0, [x19, #8]
   34e44:	b	34cec <mpfr_div_q@@Base+0x17c>
   34e48:	mov	x0, #0x2                   	// #2
   34e4c:	movk	x0, #0x8000, lsl #48
   34e50:	str	x0, [x19, #16]
   34e54:	b	34cec <mpfr_div_q@@Base+0x17c>
   34e58:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34e5c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34e60:	add	x2, x2, #0x380
   34e64:	add	x0, x0, #0x348
   34e68:	mov	w1, #0xeb                  	// #235
   34e6c:	bl	cb40 <mpfr_assert_fail@plt>
   34e70:	ldr	x23, [x19, #16]
   34e74:	b	34e0c <mpfr_div_q@@Base+0x29c>
   34e78:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34e7c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   34e80:	add	x2, x2, #0x358
   34e84:	add	x0, x0, #0x348
   34e88:	mov	w1, #0xe8                  	// #232
   34e8c:	bl	cb40 <mpfr_assert_fail@plt>
   34e90:	b	34de4 <mpfr_div_q@@Base+0x274>
   34e94:	nop

0000000000034e98 <mpfr_add_q@@Base>:
   34e98:	stp	x29, x30, [sp, #-192]!
   34e9c:	mov	x29, sp
   34ea0:	stp	x21, x22, [sp, #32]
   34ea4:	mov	w22, w3
   34ea8:	mov	x21, x0
   34eac:	ldr	x3, [x1, #16]
   34eb0:	stp	x19, x20, [sp, #16]
   34eb4:	stp	x23, x24, [sp, #48]
   34eb8:	mov	x24, x1
   34ebc:	stp	x25, x26, [sp, #64]
   34ec0:	mov	x26, x2
   34ec4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   34ec8:	cmp	x3, x2
   34ecc:	b.le	3515c <mpfr_add_q@@Base+0x2c4>
   34ed0:	mrs	x19, tpidr_el0
   34ed4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34ed8:	ldr	x1, [x0, #2576]
   34edc:	add	x0, x0, #0xa10
   34ee0:	blr	x1
   34ee4:	ldr	x20, [x21]
   34ee8:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   34eec:	ldr	w0, [x19, x0]
   34ef0:	add	x25, sp, #0x80
   34ef4:	str	w0, [sp, #100]
   34ef8:	add	x20, x20, #0xa
   34efc:	str	x2, [sp, #112]
   34f00:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   34f04:	stp	x27, x28, [sp, #80]
   34f08:	add	x23, sp, #0xa0
   34f0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34f10:	ldr	x1, [x0, #2512]
   34f14:	add	x0, x0, #0x9d0
   34f18:	blr	x1
   34f1c:	mov	x1, #0x40                  	// #64
   34f20:	add	x3, x19, x0
   34f24:	str	x1, [sp, #120]
   34f28:	ldr	x28, [x19, x0]
   34f2c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34f30:	ldr	x1, [x0, #2544]
   34f34:	add	x0, x0, #0x9f0
   34f38:	blr	x1
   34f3c:	mov	x1, x20
   34f40:	str	x4, [x3]
   34f44:	ldr	x27, [x19, x0]
   34f48:	str	x2, [x19, x0]
   34f4c:	mov	x0, x25
   34f50:	bl	ca80 <mpfr_init2@plt>
   34f54:	mov	x1, x20
   34f58:	mov	x0, x23
   34f5c:	bl	ca80 <mpfr_init2@plt>
   34f60:	mov	x1, x26
   34f64:	mov	x0, x23
   34f68:	mov	w2, #0x0                   	// #0
   34f6c:	bl	c850 <mpfr_set_q@plt>
   34f70:	cbz	w0, 35140 <mpfr_add_q@@Base+0x2a8>
   34f74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   34f78:	ldr	x1, [x0, #2576]
   34f7c:	add	x0, x0, #0xa10
   34f80:	blr	x1
   34f84:	add	x4, x19, x0
   34f88:	mov	x2, x23
   34f8c:	mov	x1, x24
   34f90:	mov	w3, #0x0                   	// #0
   34f94:	str	wzr, [x19, x0]
   34f98:	mov	x0, x25
   34f9c:	str	x4, [sp, #104]
   34fa0:	bl	c1a0 <mpfr_add@plt>
   34fa4:	ldr	x4, [sp, #104]
   34fa8:	ldr	w0, [x4]
   34fac:	tbnz	w0, #1, 35238 <mpfr_add_q@@Base+0x3a0>
   34fb0:	tbnz	w0, #0, 35238 <mpfr_add_q@@Base+0x3a0>
   34fb4:	ldr	x1, [sp, #144]
   34fb8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   34fbc:	cmp	x1, x0
   34fc0:	b.eq	350ec <mpfr_add_q@@Base+0x254>  // b.none
   34fc4:	ldr	x2, [sp, #176]
   34fc8:	sub	x0, x20, #0x1
   34fcc:	ldr	x3, [sp, #112]
   34fd0:	subs	x2, x2, x1
   34fd4:	csel	x2, x2, xzr, pl  // pl = nfrst
   34fd8:	sub	x2, x0, x2
   34fdc:	cmp	x1, x3
   34fe0:	b.le	350ec <mpfr_add_q@@Base+0x254>
   34fe4:	ldr	x1, [sp, #128]
   34fe8:	cmp	w22, #0x0
   34fec:	ldr	x0, [sp, #152]
   34ff0:	sub	x1, x1, #0x1
   34ff4:	ldr	x3, [x21]
   34ff8:	asr	x1, x1, #6
   34ffc:	add	x1, x1, #0x1
   35000:	cinc	x3, x3, eq  // eq = none
   35004:	bl	c370 <mpfr_round_p@plt>
   35008:	cbz	w0, 350ec <mpfr_add_q@@Base+0x254>
   3500c:	ldr	w3, [sp, #136]
   35010:	mov	w2, w22
   35014:	mov	x1, x25
   35018:	mov	x0, x21
   3501c:	bl	c6a0 <mpfr_set4@plt>
   35020:	mov	w20, w0
   35024:	mov	x0, x25
   35028:	bl	c070 <mpfr_clear@plt>
   3502c:	mov	x0, x23
   35030:	bl	c070 <mpfr_clear@plt>
   35034:	ldr	x1, [x21, #16]
   35038:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3503c:	ldr	x2, [x0, #2576]
   35040:	add	x0, x0, #0xa10
   35044:	blr	x2
   35048:	ldr	w2, [sp, #100]
   3504c:	str	w2, [x19, x0]
   35050:	add	x2, x19, x0
   35054:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35058:	ldr	x3, [x0, #2512]
   3505c:	add	x0, x0, #0x9d0
   35060:	blr	x3
   35064:	str	x28, [x19, x0]
   35068:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3506c:	ldr	x3, [x0, #2544]
   35070:	add	x0, x0, #0x9f0
   35074:	blr	x3
   35078:	str	x27, [x19, x0]
   3507c:	cmp	x28, x1
   35080:	ccmp	x27, x1, #0x1, le
   35084:	b.ge	350bc <mpfr_add_q@@Base+0x224>  // b.tcont
   35088:	mov	w1, w20
   3508c:	mov	w2, w22
   35090:	mov	x0, x21
   35094:	bl	cb30 <mpfr_check_range@plt>
   35098:	mov	w20, w0
   3509c:	ldp	x27, x28, [sp, #80]
   350a0:	mov	w0, w20
   350a4:	ldp	x19, x20, [sp, #16]
   350a8:	ldp	x21, x22, [sp, #32]
   350ac:	ldp	x23, x24, [sp, #48]
   350b0:	ldp	x25, x26, [sp, #64]
   350b4:	ldp	x29, x30, [sp], #192
   350b8:	ret
   350bc:	cbz	w20, 3509c <mpfr_add_q@@Base+0x204>
   350c0:	ldr	w0, [sp, #100]
   350c4:	ldp	x27, x28, [sp, #80]
   350c8:	orr	w0, w0, #0x8
   350cc:	str	w0, [x2]
   350d0:	mov	w0, w20
   350d4:	ldp	x19, x20, [sp, #16]
   350d8:	ldp	x21, x22, [sp, #32]
   350dc:	ldp	x23, x24, [sp, #48]
   350e0:	ldp	x25, x26, [sp, #64]
   350e4:	ldp	x29, x30, [sp], #192
   350e8:	ret
   350ec:	ldr	x1, [sp, #120]
   350f0:	mov	x0, #0xfffffffffffffeff    	// #-257
   350f4:	movk	x0, #0x7fff, lsl #48
   350f8:	sub	x0, x0, x20
   350fc:	cmp	x0, x1
   35100:	b.lt	351a4 <mpfr_add_q@@Base+0x30c>  // b.tstop
   35104:	add	x20, x20, x1
   35108:	mov	x0, x25
   3510c:	mov	x1, x20
   35110:	add	x2, x20, x20, lsr #63
   35114:	asr	x2, x2, #1
   35118:	str	x2, [sp, #120]
   3511c:	bl	bed0 <mpfr_set_prec@plt>
   35120:	mov	x1, x20
   35124:	mov	x0, x23
   35128:	bl	bed0 <mpfr_set_prec@plt>
   3512c:	mov	x1, x26
   35130:	mov	x0, x23
   35134:	mov	w2, #0x0                   	// #0
   35138:	bl	c850 <mpfr_set_q@plt>
   3513c:	cbnz	w0, 34f74 <mpfr_add_q@@Base+0xdc>
   35140:	mov	x1, x24
   35144:	mov	w3, w22
   35148:	mov	x2, x23
   3514c:	mov	x0, x21
   35150:	bl	c1a0 <mpfr_add@plt>
   35154:	mov	w20, w0
   35158:	b	35024 <mpfr_add_q@@Base+0x18c>
   3515c:	mov	x4, #0x2                   	// #2
   35160:	movk	x4, #0x8000, lsl #48
   35164:	cmp	x3, x4
   35168:	b.eq	35200 <mpfr_add_q@@Base+0x368>  // b.none
   3516c:	cmp	x3, x2
   35170:	b.eq	351bc <mpfr_add_q@@Base+0x324>  // b.none
   35174:	ldr	w2, [x26, #4]
   35178:	cbz	w2, 35190 <mpfr_add_q@@Base+0x2f8>
   3517c:	mov	w2, w22
   35180:	mov	x1, x26
   35184:	bl	c850 <mpfr_set_q@plt>
   35188:	mov	w20, w0
   3518c:	b	350a0 <mpfr_add_q@@Base+0x208>
   35190:	ldr	w3, [x1, #8]
   35194:	mov	w2, w22
   35198:	bl	c6a0 <mpfr_set4@plt>
   3519c:	mov	w20, w0
   351a0:	b	350a0 <mpfr_add_q@@Base+0x208>
   351a4:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   351a8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   351ac:	add	x2, x2, #0x358
   351b0:	add	x0, x0, #0x348
   351b4:	mov	w1, #0x153                 	// #339
   351b8:	bl	cb40 <mpfr_assert_fail@plt>
   351bc:	ldr	w0, [x1, #8]
   351c0:	ldr	w1, [x26, #20]
   351c4:	cbz	w1, 351dc <mpfr_add_q@@Base+0x344>
   351c8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   351cc:	mov	w20, #0x0                   	// #0
   351d0:	str	w0, [x21, #8]
   351d4:	str	x1, [x21, #16]
   351d8:	b	350a0 <mpfr_add_q@@Base+0x208>
   351dc:	ldr	w2, [x26, #4]
   351e0:	mov	w3, #0xffffffff            	// #-1
   351e4:	cmp	w2, #0x0
   351e8:	cset	w1, gt
   351ec:	csel	w1, w1, w3, ge  // ge = tcont
   351f0:	mul	w1, w0, w1
   351f4:	cmp	w1, #0x0
   351f8:	b.gt	351c8 <mpfr_add_q@@Base+0x330>
   351fc:	nop
   35200:	mrs	x1, tpidr_el0
   35204:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35208:	ldr	x2, [x0, #2576]
   3520c:	add	x0, x0, #0xa10
   35210:	blr	x2
   35214:	add	x0, x1, x0
   35218:	mov	x1, #0x2                   	// #2
   3521c:	movk	x1, #0x8000, lsl #48
   35220:	str	x1, [x21, #16]
   35224:	mov	w20, #0x0                   	// #0
   35228:	ldr	w1, [x0]
   3522c:	orr	w1, w1, #0x4
   35230:	str	w1, [x0]
   35234:	b	350a0 <mpfr_add_q@@Base+0x208>
   35238:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3523c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   35240:	add	x2, x2, #0x3e8
   35244:	add	x0, x0, #0x348
   35248:	mov	w1, #0x144                 	// #324
   3524c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000035250 <mpfr_sub_q@@Base>:
   35250:	stp	x29, x30, [sp, #-192]!
   35254:	mov	x29, sp
   35258:	stp	x23, x24, [sp, #48]
   3525c:	mov	w23, w3
   35260:	mov	x24, x2
   35264:	ldr	x3, [x1, #16]
   35268:	stp	x19, x20, [sp, #16]
   3526c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   35270:	stp	x21, x22, [sp, #32]
   35274:	mov	x20, x0
   35278:	mov	x21, x1
   3527c:	cmp	x3, x2
   35280:	b.le	3552c <mpfr_sub_q@@Base+0x2dc>
   35284:	stp	x25, x26, [sp, #64]
   35288:	mrs	x26, tpidr_el0
   3528c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35290:	ldr	x1, [x0, #2576]
   35294:	add	x0, x0, #0xa10
   35298:	blr	x1
   3529c:	ldr	x19, [x20]
   352a0:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   352a4:	ldr	w0, [x26, x0]
   352a8:	add	x25, sp, #0x80
   352ac:	str	w0, [sp, #100]
   352b0:	add	x19, x19, #0xa
   352b4:	str	x2, [sp, #120]
   352b8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   352bc:	stp	x27, x28, [sp, #80]
   352c0:	add	x22, sp, #0xa0
   352c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   352c8:	ldr	x1, [x0, #2512]
   352cc:	add	x0, x0, #0x9d0
   352d0:	blr	x1
   352d4:	mov	x1, #0x40                  	// #64
   352d8:	add	x3, x26, x0
   352dc:	str	x1, [sp, #104]
   352e0:	ldr	x28, [x26, x0]
   352e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   352e8:	ldr	x1, [x0, #2544]
   352ec:	add	x0, x0, #0x9f0
   352f0:	blr	x1
   352f4:	mov	x1, x19
   352f8:	str	x5, [x3]
   352fc:	ldr	x27, [x26, x0]
   35300:	str	x2, [x26, x0]
   35304:	mov	x0, x25
   35308:	bl	ca80 <mpfr_init2@plt>
   3530c:	mov	x1, x19
   35310:	mov	x0, x22
   35314:	bl	ca80 <mpfr_init2@plt>
   35318:	mov	x1, x24
   3531c:	mov	x0, x22
   35320:	mov	w2, #0x0                   	// #0
   35324:	bl	c850 <mpfr_set_q@plt>
   35328:	cbz	w0, 354c0 <mpfr_sub_q@@Base+0x270>
   3532c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35330:	ldr	x1, [x0, #2576]
   35334:	add	x0, x0, #0xa10
   35338:	blr	x1
   3533c:	add	x5, x26, x0
   35340:	mov	x2, x22
   35344:	mov	x1, x21
   35348:	mov	w3, #0x0                   	// #0
   3534c:	str	wzr, [x26, x0]
   35350:	mov	x0, x25
   35354:	str	x5, [sp, #112]
   35358:	bl	bb70 <mpfr_sub@plt>
   3535c:	ldr	x5, [sp, #112]
   35360:	ldr	w0, [x5]
   35364:	tbnz	w0, #1, 35630 <mpfr_sub_q@@Base+0x3e0>
   35368:	tbnz	w0, #0, 35630 <mpfr_sub_q@@Base+0x3e0>
   3536c:	ldr	x0, [sp, #120]
   35370:	ldr	x6, [sp, #144]
   35374:	cmp	x6, x0
   35378:	b.le	3546c <mpfr_sub_q@@Base+0x21c>
   3537c:	ldr	x3, [x20]
   35380:	cmp	w23, #0x0
   35384:	ldr	x5, [sp, #176]
   35388:	cinc	x3, x3, eq  // eq = none
   3538c:	ldr	x1, [sp, #128]
   35390:	subs	x5, x5, x6
   35394:	ldr	x0, [sp, #152]
   35398:	sub	x1, x1, #0x1
   3539c:	csel	x5, x5, xzr, pl  // pl = nfrst
   353a0:	sub	x2, x19, #0x1
   353a4:	asr	x1, x1, #6
   353a8:	sub	x2, x2, x5
   353ac:	add	x1, x1, #0x1
   353b0:	bl	c370 <mpfr_round_p@plt>
   353b4:	cbz	w0, 3546c <mpfr_sub_q@@Base+0x21c>
   353b8:	ldr	w3, [sp, #136]
   353bc:	mov	w2, w23
   353c0:	mov	x1, x25
   353c4:	mov	x0, x20
   353c8:	bl	c6a0 <mpfr_set4@plt>
   353cc:	mov	w19, w0
   353d0:	mov	x0, x25
   353d4:	bl	c070 <mpfr_clear@plt>
   353d8:	mov	x0, x22
   353dc:	bl	c070 <mpfr_clear@plt>
   353e0:	ldr	x1, [x20, #16]
   353e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   353e8:	ldr	x2, [x0, #2576]
   353ec:	add	x0, x0, #0xa10
   353f0:	blr	x2
   353f4:	ldr	w2, [sp, #100]
   353f8:	str	w2, [x26, x0]
   353fc:	add	x2, x26, x0
   35400:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35404:	ldr	x3, [x0, #2512]
   35408:	add	x0, x0, #0x9d0
   3540c:	blr	x3
   35410:	str	x28, [x26, x0]
   35414:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35418:	ldr	x3, [x0, #2544]
   3541c:	add	x0, x0, #0x9f0
   35420:	blr	x3
   35424:	str	x27, [x26, x0]
   35428:	cmp	x28, x1
   3542c:	ccmp	x27, x1, #0x1, le
   35430:	b.ge	354dc <mpfr_sub_q@@Base+0x28c>  // b.tcont
   35434:	mov	w1, w19
   35438:	mov	w2, w23
   3543c:	mov	x0, x20
   35440:	bl	cb30 <mpfr_check_range@plt>
   35444:	ldp	x25, x26, [sp, #64]
   35448:	mov	w19, w0
   3544c:	ldp	x27, x28, [sp, #80]
   35450:	str	w0, [sp, #100]
   35454:	mov	w0, w19
   35458:	ldp	x19, x20, [sp, #16]
   3545c:	ldp	x21, x22, [sp, #32]
   35460:	ldp	x23, x24, [sp, #48]
   35464:	ldp	x29, x30, [sp], #192
   35468:	ret
   3546c:	ldr	x1, [sp, #104]
   35470:	mov	x0, #0xfffffffffffffeff    	// #-257
   35474:	movk	x0, #0x7fff, lsl #48
   35478:	sub	x0, x0, x19
   3547c:	cmp	x0, x1
   35480:	b.lt	35610 <mpfr_sub_q@@Base+0x3c0>  // b.tstop
   35484:	add	x19, x19, x1
   35488:	mov	x0, x25
   3548c:	mov	x1, x19
   35490:	add	x2, x19, x19, lsr #63
   35494:	asr	x2, x2, #1
   35498:	str	x2, [sp, #104]
   3549c:	bl	bed0 <mpfr_set_prec@plt>
   354a0:	mov	x1, x19
   354a4:	mov	x0, x22
   354a8:	bl	bed0 <mpfr_set_prec@plt>
   354ac:	mov	x1, x24
   354b0:	mov	x0, x22
   354b4:	mov	w2, #0x0                   	// #0
   354b8:	bl	c850 <mpfr_set_q@plt>
   354bc:	cbnz	w0, 3532c <mpfr_sub_q@@Base+0xdc>
   354c0:	mov	x1, x21
   354c4:	mov	w3, w23
   354c8:	mov	x2, x22
   354cc:	mov	x0, x20
   354d0:	bl	bb70 <mpfr_sub@plt>
   354d4:	mov	w19, w0
   354d8:	b	353d0 <mpfr_sub_q@@Base+0x180>
   354dc:	cbz	w19, 3550c <mpfr_sub_q@@Base+0x2bc>
   354e0:	ldr	w0, [sp, #100]
   354e4:	ldp	x27, x28, [sp, #80]
   354e8:	orr	w26, w0, #0x8
   354ec:	str	w26, [x2]
   354f0:	mov	w0, w19
   354f4:	ldp	x19, x20, [sp, #16]
   354f8:	ldp	x21, x22, [sp, #32]
   354fc:	ldp	x23, x24, [sp, #48]
   35500:	ldp	x25, x26, [sp, #64]
   35504:	ldp	x29, x30, [sp], #192
   35508:	ret
   3550c:	mov	w0, w19
   35510:	ldp	x19, x20, [sp, #16]
   35514:	ldp	x21, x22, [sp, #32]
   35518:	ldp	x23, x24, [sp, #48]
   3551c:	ldp	x25, x26, [sp, #64]
   35520:	ldp	x27, x28, [sp, #80]
   35524:	ldp	x29, x30, [sp], #192
   35528:	ret
   3552c:	mov	x4, #0x2                   	// #2
   35530:	movk	x4, #0x8000, lsl #48
   35534:	cmp	x3, x4
   35538:	b.eq	355d8 <mpfr_sub_q@@Base+0x388>  // b.none
   3553c:	cmp	x3, x2
   35540:	b.eq	35598 <mpfr_sub_q@@Base+0x348>  // b.none
   35544:	ldr	w2, [x24, #4]
   35548:	cbz	w2, 35584 <mpfr_sub_q@@Base+0x334>
   3554c:	cmp	w23, #0x2
   35550:	b.eq	35628 <mpfr_sub_q@@Base+0x3d8>  // b.none
   35554:	cmp	w23, #0x3
   35558:	mov	w0, #0x2                   	// #2
   3555c:	csel	w23, w23, w0, ne  // ne = any
   35560:	mov	x1, x24
   35564:	mov	w2, w23
   35568:	mov	x0, x20
   3556c:	bl	c850 <mpfr_set_q@plt>
   35570:	ldr	w1, [x20, #8]
   35574:	neg	w19, w0
   35578:	neg	w1, w1
   3557c:	str	w1, [x20, #8]
   35580:	b	35454 <mpfr_sub_q@@Base+0x204>
   35584:	ldr	w3, [x1, #8]
   35588:	mov	w2, w23
   3558c:	bl	c6a0 <mpfr_set4@plt>
   35590:	mov	w19, w0
   35594:	b	35454 <mpfr_sub_q@@Base+0x204>
   35598:	ldr	w0, [x1, #8]
   3559c:	ldr	w1, [x24, #20]
   355a0:	cbz	w1, 355b8 <mpfr_sub_q@@Base+0x368>
   355a4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   355a8:	mov	w19, #0x0                   	// #0
   355ac:	str	w0, [x20, #8]
   355b0:	str	x1, [x20, #16]
   355b4:	b	35454 <mpfr_sub_q@@Base+0x204>
   355b8:	ldr	w2, [x24, #4]
   355bc:	mov	w3, #0xffffffff            	// #-1
   355c0:	cmp	w2, #0x0
   355c4:	cset	w1, gt
   355c8:	csel	w1, w1, w3, ge  // ge = tcont
   355cc:	mul	w1, w0, w1
   355d0:	tbnz	w1, #31, 355a4 <mpfr_sub_q@@Base+0x354>
   355d4:	nop
   355d8:	mrs	x1, tpidr_el0
   355dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   355e0:	ldr	x2, [x0, #2576]
   355e4:	add	x0, x0, #0xa10
   355e8:	blr	x2
   355ec:	add	x0, x1, x0
   355f0:	mov	x1, #0x2                   	// #2
   355f4:	movk	x1, #0x8000, lsl #48
   355f8:	str	x1, [x20, #16]
   355fc:	mov	w19, #0x0                   	// #0
   35600:	ldr	w1, [x0]
   35604:	orr	w1, w1, #0x4
   35608:	str	w1, [x0]
   3560c:	b	35454 <mpfr_sub_q@@Base+0x204>
   35610:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   35614:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   35618:	add	x2, x2, #0x358
   3561c:	add	x0, x0, #0x348
   35620:	mov	w1, #0x1b3                 	// #435
   35624:	bl	cb40 <mpfr_assert_fail@plt>
   35628:	mov	w23, #0x3                   	// #3
   3562c:	b	35560 <mpfr_sub_q@@Base+0x310>
   35630:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   35634:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   35638:	add	x2, x2, #0x3e8
   3563c:	add	x0, x0, #0x348
   35640:	mov	w1, #0x1a3                 	// #419
   35644:	bl	cb40 <mpfr_assert_fail@plt>

0000000000035648 <mpfr_cmp_q@@Base>:
   35648:	stp	x29, x30, [sp, #-128]!
   3564c:	mov	x29, sp
   35650:	ldr	w2, [x1, #20]
   35654:	stp	x19, x20, [sp, #16]
   35658:	mov	x19, x1
   3565c:	mov	x20, x0
   35660:	cbz	w2, 35770 <mpfr_cmp_q@@Base+0x128>
   35664:	ldr	x1, [x20, #16]
   35668:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3566c:	cmp	x1, x0
   35670:	b.le	357e4 <mpfr_cmp_q@@Base+0x19c>
   35674:	mrs	x3, tpidr_el0
   35678:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3567c:	ldr	x1, [x0, #2576]
   35680:	add	x0, x0, #0xa10
   35684:	blr	x1
   35688:	stp	x25, x26, [sp, #64]
   3568c:	add	x26, x3, x0
   35690:	mov	x1, #0xfffffffffffffff8    	// #-8
   35694:	ldr	x4, [x19, #24]
   35698:	str	x27, [sp, #80]
   3569c:	ldr	w27, [x3, x0]
   356a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   356a4:	ldr	x5, [x0, #2512]
   356a8:	add	x0, x0, #0x9d0
   356ac:	blr	x5
   356b0:	stp	x23, x24, [sp, #48]
   356b4:	add	x23, x3, x0
   356b8:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   356bc:	ldr	x25, [x3, x0]
   356c0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   356c4:	ldr	x7, [x0, #2544]
   356c8:	add	x0, x0, #0x9f0
   356cc:	blr	x7
   356d0:	cmp	w2, #0x0
   356d4:	stp	x21, x22, [sp, #32]
   356d8:	cneg	w2, w2, lt  // lt = tstop
   356dc:	add	x22, x3, x0
   356e0:	mov	x5, #0x3fffffffffffffff    	// #4611686018427387903
   356e4:	ldr	x24, [x3, x0]
   356e8:	add	x0, x1, w2, sxtw #3
   356ec:	ldr	x1, [x20]
   356f0:	str	x5, [x22]
   356f4:	str	x6, [x23]
   356f8:	sbfiz	x2, x2, #6, #32
   356fc:	add	x21, sp, #0x60
   35700:	ldr	x3, [x4, x0]
   35704:	mov	x0, x21
   35708:	clz	x3, x3
   3570c:	sub	x2, x2, x3
   35710:	add	x1, x2, x1
   35714:	bl	ca80 <mpfr_init2@plt>
   35718:	add	x2, x19, #0x10
   3571c:	mov	w3, #0x0                   	// #0
   35720:	mov	x1, x20
   35724:	mov	x0, x21
   35728:	bl	c4d0 <mpfr_mul_z@plt>
   3572c:	mov	x1, x19
   35730:	mov	x0, x21
   35734:	bl	bbb0 <mpfr_cmp_z@plt>
   35738:	mov	w19, w0
   3573c:	mov	x0, x21
   35740:	bl	c070 <mpfr_clear@plt>
   35744:	str	x24, [x22]
   35748:	ldp	x21, x22, [sp, #32]
   3574c:	str	x25, [x23]
   35750:	ldp	x23, x24, [sp, #48]
   35754:	str	w27, [x26]
   35758:	ldp	x25, x26, [sp, #64]
   3575c:	ldr	x27, [sp, #80]
   35760:	mov	w0, w19
   35764:	ldp	x19, x20, [sp, #16]
   35768:	ldp	x29, x30, [sp], #128
   3576c:	ret
   35770:	stp	x21, x22, [sp, #32]
   35774:	add	x21, sp, #0x60
   35778:	mov	x0, x21
   3577c:	mov	x1, #0x1                   	// #1
   35780:	bl	ca80 <mpfr_init2@plt>
   35784:	mrs	x3, tpidr_el0
   35788:	mov	x1, x19
   3578c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35790:	ldr	x4, [x0, #2576]
   35794:	add	x0, x0, #0xa10
   35798:	blr	x4
   3579c:	mov	w2, #0x0                   	// #0
   357a0:	add	x19, x3, x0
   357a4:	ldr	w22, [x3, x0]
   357a8:	mov	x0, x21
   357ac:	bl	c850 <mpfr_set_q@plt>
   357b0:	mov	x1, x21
   357b4:	mov	w2, #0x1                   	// #1
   357b8:	mov	x0, x20
   357bc:	str	w22, [x19]
   357c0:	bl	c9a0 <mpfr_cmp3@plt>
   357c4:	mov	w19, w0
   357c8:	mov	x0, x21
   357cc:	bl	c070 <mpfr_clear@plt>
   357d0:	mov	w0, w19
   357d4:	ldp	x19, x20, [sp, #16]
   357d8:	ldp	x21, x22, [sp, #32]
   357dc:	ldp	x29, x30, [sp], #128
   357e0:	ret
   357e4:	ldr	w3, [x19, #4]
   357e8:	mov	x4, #0xffffffffffffffff    	// #-1
   357ec:	mov	x0, x20
   357f0:	mov	x2, #0x0                   	// #0
   357f4:	cmp	w3, #0x0
   357f8:	cset	x1, gt
   357fc:	csel	x1, x1, x4, ge  // ge = tcont
   35800:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   35804:	mov	w19, w0
   35808:	b	35760 <mpfr_cmp_q@@Base+0x118>
   3580c:	nop

0000000000035810 <mpfr_cmp_f@@Base>:
   35810:	stp	x29, x30, [sp, #-128]!
   35814:	mov	x29, sp
   35818:	stp	x19, x20, [sp, #16]
   3581c:	mov	x20, x0
   35820:	ldr	w2, [x1, #4]
   35824:	stp	x21, x22, [sp, #32]
   35828:	mov	x21, x1
   3582c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   35830:	ldr	x1, [x20, #16]
   35834:	cmp	x1, x0
   35838:	b.le	35920 <mpfr_cmp_f@@Base+0x110>
   3583c:	mrs	x3, tpidr_el0
   35840:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35844:	ldr	x1, [x0, #2576]
   35848:	add	x0, x0, #0xa10
   3584c:	blr	x1
   35850:	stp	x25, x26, [sp, #64]
   35854:	add	x26, x3, x0
   35858:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3585c:	str	x27, [sp, #80]
   35860:	add	x19, sp, #0x60
   35864:	ldr	w27, [x3, x0]
   35868:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3586c:	ldr	x5, [x0, #2512]
   35870:	add	x0, x0, #0x9d0
   35874:	blr	x5
   35878:	stp	x23, x24, [sp, #48]
   3587c:	add	x23, x3, x0
   35880:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   35884:	ldr	x25, [x3, x0]
   35888:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3588c:	ldr	x5, [x0, #2544]
   35890:	add	x0, x0, #0x9f0
   35894:	blr	x5
   35898:	cmp	w2, #0x0
   3589c:	add	x22, x3, x0
   358a0:	cneg	w2, w2, lt  // lt = tstop
   358a4:	str	x4, [x23]
   358a8:	ldr	x24, [x3, x0]
   358ac:	lsl	w2, w2, #6
   358b0:	add	w2, w2, #0x1
   358b4:	mov	x0, x19
   358b8:	str	x1, [x22]
   358bc:	sxtw	x1, w2
   358c0:	bl	ca80 <mpfr_init2@plt>
   358c4:	mov	x1, x21
   358c8:	mov	x0, x19
   358cc:	mov	w2, #0x0                   	// #0
   358d0:	bl	bd40 <mpfr_set_f@plt>
   358d4:	mov	x1, x19
   358d8:	mov	w2, #0x1                   	// #1
   358dc:	mov	x0, x20
   358e0:	bl	c9a0 <mpfr_cmp3@plt>
   358e4:	mov	w1, w0
   358e8:	mov	x0, x19
   358ec:	mov	w19, w1
   358f0:	bl	c070 <mpfr_clear@plt>
   358f4:	str	x24, [x22]
   358f8:	str	x25, [x23]
   358fc:	mov	w0, w19
   35900:	ldp	x23, x24, [sp, #48]
   35904:	str	w27, [x26]
   35908:	ldp	x19, x20, [sp, #16]
   3590c:	ldp	x21, x22, [sp, #32]
   35910:	ldp	x25, x26, [sp, #64]
   35914:	ldr	x27, [sp, #80]
   35918:	ldp	x29, x30, [sp], #128
   3591c:	ret
   35920:	cmp	w2, #0x0
   35924:	mov	x0, #0xffffffffffffffff    	// #-1
   35928:	cset	x1, gt
   3592c:	mov	x2, #0x0                   	// #0
   35930:	csel	x1, x1, x0, ge  // ge = tcont
   35934:	mov	x0, x20
   35938:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3593c:	mov	w19, w0
   35940:	mov	w0, w19
   35944:	ldp	x19, x20, [sp, #16]
   35948:	ldp	x21, x22, [sp, #32]
   3594c:	ldp	x29, x30, [sp], #128
   35950:	ret
   35954:	nop

0000000000035958 <mpfr_acos@@Base>:
   35958:	stp	x29, x30, [sp, #-208]!
   3595c:	mov	x29, sp
   35960:	stp	x21, x22, [sp, #32]
   35964:	mov	x21, x1
   35968:	mov	x22, x0
   3596c:	stp	x19, x20, [sp, #16]
   35970:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   35974:	ldr	x0, [x21, #16]
   35978:	stp	x23, x24, [sp, #48]
   3597c:	mov	w24, w2
   35980:	cmp	x0, x1
   35984:	b.le	35c78 <mpfr_acos@@Base+0x320>
   35988:	ldr	x1, [x21]
   3598c:	add	x23, sp, #0x70
   35990:	mov	x0, x23
   35994:	stp	x25, x26, [sp, #64]
   35998:	ldr	w25, [x21, #8]
   3599c:	bl	ca80 <mpfr_init2@plt>
   359a0:	mov	w3, #0x1                   	// #1
   359a4:	mov	x1, x21
   359a8:	mov	w2, #0x0                   	// #0
   359ac:	mov	x0, x23
   359b0:	bl	c6a0 <mpfr_set4@plt>
   359b4:	mov	x0, x23
   359b8:	mov	x2, #0x0                   	// #0
   359bc:	mov	x1, #0x1                   	// #1
   359c0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   359c4:	mov	w19, w0
   359c8:	tbz	w0, #31, 35da4 <mpfr_acos@@Base+0x44c>
   359cc:	mrs	x20, tpidr_el0
   359d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   359d4:	ldr	x1, [x0, #2576]
   359d8:	add	x0, x0, #0xa10
   359dc:	blr	x1
   359e0:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   359e4:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   359e8:	stp	x27, x28, [sp, #80]
   359ec:	mov	x2, x23
   359f0:	ldr	w0, [x20, x0]
   359f4:	str	w0, [sp, #100]
   359f8:	mov	w3, #0x3                   	// #3
   359fc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35a00:	ldr	x1, [x0, #2512]
   35a04:	add	x0, x0, #0x9d0
   35a08:	blr	x1
   35a0c:	add	x5, x20, x0
   35a10:	ldr	x27, [x20, x0]
   35a14:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35a18:	ldr	x7, [x0, #2544]
   35a1c:	add	x0, x0, #0x9f0
   35a20:	blr	x7
   35a24:	mov	x1, #0x1                   	// #1
   35a28:	str	x6, [x5]
   35a2c:	ldr	x28, [x20, x0]
   35a30:	str	x4, [x20, x0]
   35a34:	mov	x0, x23
   35a38:	bl	ca50 <mpfr_ui_sub@plt>
   35a3c:	cmp	w25, #0x0
   35a40:	ldr	x0, [sp, #128]
   35a44:	b.le	35c3c <mpfr_acos@@Base+0x2e4>
   35a48:	mov	x25, #0x1                   	// #1
   35a4c:	sub	x25, x25, x0
   35a50:	lsl	x25, x25, #1
   35a54:	mov	x0, x23
   35a58:	bl	c070 <mpfr_clear@plt>
   35a5c:	ldr	x1, [x22]
   35a60:	cmp	x1, #0x1
   35a64:	b.eq	35dd0 <mpfr_acos@@Base+0x478>  // b.none
   35a68:	b.le	35ea8 <mpfr_acos@@Base+0x550>
   35a6c:	sub	x19, x1, #0x1
   35a70:	mov	w0, #0x4a                  	// #74
   35a74:	clz	x19, x19
   35a78:	sub	w19, w0, w19
   35a7c:	sxtw	x19, w19
   35a80:	add	x19, x25, x19
   35a84:	mov	x0, #0x40                  	// #64
   35a88:	add	x19, x19, x1
   35a8c:	add	x26, sp, #0xb0
   35a90:	mov	x1, x19
   35a94:	add	x23, sp, #0x90
   35a98:	str	x0, [sp, #104]
   35a9c:	mov	x0, x26
   35aa0:	bl	ca80 <mpfr_init2@plt>
   35aa4:	mov	x1, x19
   35aa8:	mov	x0, x23
   35aac:	bl	ca80 <mpfr_init2@plt>
   35ab0:	mov	x1, x21
   35ab4:	mov	w2, #0x0                   	// #0
   35ab8:	mov	x0, x26
   35abc:	bl	c400 <mpfr_sqr@plt>
   35ac0:	mov	w3, #0x0                   	// #0
   35ac4:	mov	x2, x26
   35ac8:	mov	x1, #0x1                   	// #1
   35acc:	mov	x0, x26
   35ad0:	bl	ca50 <mpfr_ui_sub@plt>
   35ad4:	mov	x1, x26
   35ad8:	mov	w2, #0x0                   	// #0
   35adc:	mov	x0, x26
   35ae0:	bl	c930 <mpfr_sqrt@plt>
   35ae4:	mov	w3, #0x0                   	// #0
   35ae8:	mov	x2, x26
   35aec:	mov	x1, x21
   35af0:	mov	x0, x26
   35af4:	bl	c620 <mpfr_div@plt>
   35af8:	mov	x1, x26
   35afc:	mov	w2, #0x0                   	// #0
   35b00:	mov	x0, x23
   35b04:	bl	c690 <mpfr_atan@plt>
   35b08:	mov	w2, #0x0                   	// #0
   35b0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35b10:	ldr	x1, [x0, #2624]
   35b14:	add	x0, x0, #0xa40
   35b18:	blr	x1
   35b1c:	add	x1, x20, x0
   35b20:	mov	x0, x26
   35b24:	bl	c380 <mpfr_cache@plt>
   35b28:	mov	x1, x26
   35b2c:	mov	w3, #0x0                   	// #0
   35b30:	mov	x2, #0x1                   	// #1
   35b34:	mov	x0, x26
   35b38:	bl	c8f0 <mpfr_div_2ui@plt>
   35b3c:	mov	x1, x26
   35b40:	mov	x2, x23
   35b44:	mov	x0, x23
   35b48:	mov	w3, #0x0                   	// #0
   35b4c:	bl	bb70 <mpfr_sub@plt>
   35b50:	ldr	x0, [sp, #160]
   35b54:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   35b58:	cmp	x0, x1
   35b5c:	b.le	35d60 <mpfr_acos@@Base+0x408>
   35b60:	ldr	x1, [sp, #144]
   35b64:	cmp	w24, #0x0
   35b68:	ldr	x0, [sp, #168]
   35b6c:	sub	x1, x1, #0x1
   35b70:	ldr	x3, [x22]
   35b74:	asr	x1, x1, #6
   35b78:	sub	x2, x19, x25
   35b7c:	add	x1, x1, #0x1
   35b80:	cinc	x3, x3, eq  // eq = none
   35b84:	bl	c370 <mpfr_round_p@plt>
   35b88:	cbz	w0, 35d60 <mpfr_acos@@Base+0x408>
   35b8c:	ldr	w3, [sp, #152]
   35b90:	mov	w2, w24
   35b94:	mov	x1, x23
   35b98:	mov	x0, x22
   35b9c:	bl	c6a0 <mpfr_set4@plt>
   35ba0:	mov	w19, w0
   35ba4:	mov	x0, x26
   35ba8:	bl	c070 <mpfr_clear@plt>
   35bac:	mov	x0, x23
   35bb0:	bl	c070 <mpfr_clear@plt>
   35bb4:	ldr	x1, [x22, #16]
   35bb8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35bbc:	ldr	x2, [x0, #2576]
   35bc0:	add	x0, x0, #0xa10
   35bc4:	blr	x2
   35bc8:	ldr	w2, [sp, #100]
   35bcc:	str	w2, [x20, x0]
   35bd0:	add	x2, x20, x0
   35bd4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35bd8:	ldr	x3, [x0, #2512]
   35bdc:	add	x0, x0, #0x9d0
   35be0:	blr	x3
   35be4:	str	x27, [x20, x0]
   35be8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35bec:	ldr	x3, [x0, #2544]
   35bf0:	add	x0, x0, #0x9f0
   35bf4:	blr	x3
   35bf8:	str	x28, [x20, x0]
   35bfc:	cmp	x28, x1
   35c00:	ccmp	x27, x1, #0x0, ge  // ge = tcont
   35c04:	b.le	35c48 <mpfr_acos@@Base+0x2f0>
   35c08:	mov	w1, w19
   35c0c:	mov	w2, w24
   35c10:	mov	x0, x22
   35c14:	bl	cb30 <mpfr_check_range@plt>
   35c18:	ldp	x25, x26, [sp, #64]
   35c1c:	mov	w19, w0
   35c20:	ldp	x27, x28, [sp, #80]
   35c24:	mov	w0, w19
   35c28:	ldp	x19, x20, [sp, #16]
   35c2c:	ldp	x21, x22, [sp, #32]
   35c30:	ldp	x23, x24, [sp, #48]
   35c34:	ldp	x29, x30, [sp], #208
   35c38:	ret
   35c3c:	mov	x25, #0x2                   	// #2
   35c40:	sub	x25, x25, x0
   35c44:	b	35a54 <mpfr_acos@@Base+0xfc>
   35c48:	cbz	w19, 35d40 <mpfr_acos@@Base+0x3e8>
   35c4c:	ldr	w0, [sp, #100]
   35c50:	ldp	x27, x28, [sp, #80]
   35c54:	orr	w26, w0, #0x8
   35c58:	str	w26, [x2]
   35c5c:	mov	w0, w19
   35c60:	ldp	x19, x20, [sp, #16]
   35c64:	ldp	x21, x22, [sp, #32]
   35c68:	ldp	x23, x24, [sp, #48]
   35c6c:	ldp	x25, x26, [sp, #64]
   35c70:	ldp	x29, x30, [sp], #208
   35c74:	ret
   35c78:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   35c7c:	add	x0, x0, x1
   35c80:	cmp	x0, #0x1
   35c84:	b.ls	35e1c <mpfr_acos@@Base+0x4c4>  // b.plast
   35c88:	mrs	x1, tpidr_el0
   35c8c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35c90:	ldr	x3, [x0, #2576]
   35c94:	add	x0, x0, #0xa10
   35c98:	blr	x3
   35c9c:	stp	x25, x26, [sp, #64]
   35ca0:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   35ca4:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   35ca8:	ldr	w20, [x1, x0]
   35cac:	stp	x27, x28, [sp, #80]
   35cb0:	add	x27, x1, x0
   35cb4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35cb8:	ldr	x5, [x0, #2512]
   35cbc:	add	x0, x0, #0x9d0
   35cc0:	blr	x5
   35cc4:	add	x26, x1, x0
   35cc8:	ldr	x21, [x1, x0]
   35ccc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35cd0:	ldr	x5, [x0, #2544]
   35cd4:	add	x0, x0, #0x9f0
   35cd8:	blr	x5
   35cdc:	add	x25, x1, x0
   35ce0:	str	x4, [x26]
   35ce4:	ldr	x23, [x1, x0]
   35ce8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35cec:	ldr	x4, [x0, #2624]
   35cf0:	add	x0, x0, #0xa40
   35cf4:	blr	x4
   35cf8:	add	x1, x1, x0
   35cfc:	mov	x0, x22
   35d00:	str	x3, [x25]
   35d04:	bl	c380 <mpfr_cache@plt>
   35d08:	mov	w3, w24
   35d0c:	mov	w19, w0
   35d10:	mov	x1, x22
   35d14:	mov	x0, x22
   35d18:	mov	x2, #0x1                   	// #1
   35d1c:	bl	c8f0 <mpfr_div_2ui@plt>
   35d20:	ldr	x0, [x22, #16]
   35d24:	str	x23, [x25]
   35d28:	str	x21, [x26]
   35d2c:	str	w20, [x27]
   35d30:	cmp	x23, x0
   35d34:	ccmp	x21, x0, #0x0, ge  // ge = tcont
   35d38:	b.gt	35c08 <mpfr_acos@@Base+0x2b0>
   35d3c:	cbnz	w19, 35dd8 <mpfr_acos@@Base+0x480>
   35d40:	mov	w0, w19
   35d44:	ldp	x19, x20, [sp, #16]
   35d48:	ldp	x21, x22, [sp, #32]
   35d4c:	ldp	x23, x24, [sp, #48]
   35d50:	ldp	x25, x26, [sp, #64]
   35d54:	ldp	x27, x28, [sp, #80]
   35d58:	ldp	x29, x30, [sp], #208
   35d5c:	ret
   35d60:	ldr	x1, [sp, #104]
   35d64:	mov	x0, #0xfffffffffffffeff    	// #-257
   35d68:	movk	x0, #0x7fff, lsl #48
   35d6c:	sub	x0, x0, x19
   35d70:	cmp	x0, x1
   35d74:	b.lt	35e90 <mpfr_acos@@Base+0x538>  // b.tstop
   35d78:	add	x19, x19, x1
   35d7c:	mov	x0, x26
   35d80:	mov	x1, x19
   35d84:	add	x2, x19, x19, lsr #63
   35d88:	asr	x2, x2, #1
   35d8c:	str	x2, [sp, #104]
   35d90:	bl	bed0 <mpfr_set_prec@plt>
   35d94:	mov	x1, x19
   35d98:	mov	x0, x23
   35d9c:	bl	bed0 <mpfr_set_prec@plt>
   35da0:	b	35ab0 <mpfr_acos@@Base+0x158>
   35da4:	mov	x0, x23
   35da8:	bl	c070 <mpfr_clear@plt>
   35dac:	cbnz	w19, 35e54 <mpfr_acos@@Base+0x4fc>
   35db0:	cmp	w25, #0x0
   35db4:	b.le	35dec <mpfr_acos@@Base+0x494>
   35db8:	mov	w1, #0x1                   	// #1
   35dbc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   35dc0:	ldp	x25, x26, [sp, #64]
   35dc4:	str	w1, [x22, #8]
   35dc8:	str	x0, [x22, #16]
   35dcc:	b	35c24 <mpfr_acos@@Base+0x2cc>
   35dd0:	mov	x19, #0xa                   	// #10
   35dd4:	b	35a80 <mpfr_acos@@Base+0x128>
   35dd8:	orr	w20, w20, #0x8
   35ddc:	ldp	x25, x26, [sp, #64]
   35de0:	str	w20, [x27]
   35de4:	ldp	x27, x28, [sp, #80]
   35de8:	b	35c24 <mpfr_acos@@Base+0x2cc>
   35dec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35df0:	ldr	x1, [x0, #2624]
   35df4:	add	x0, x0, #0xa40
   35df8:	blr	x1
   35dfc:	mov	w2, w24
   35e00:	mrs	x1, tpidr_el0
   35e04:	add	x1, x1, x0
   35e08:	mov	x0, x22
   35e0c:	bl	c380 <mpfr_cache@plt>
   35e10:	mov	w19, w0
   35e14:	ldp	x25, x26, [sp, #64]
   35e18:	b	35c24 <mpfr_acos@@Base+0x2cc>
   35e1c:	mrs	x1, tpidr_el0
   35e20:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35e24:	ldr	x2, [x0, #2576]
   35e28:	add	x0, x0, #0xa10
   35e2c:	blr	x2
   35e30:	add	x0, x1, x0
   35e34:	mov	x1, #0x2                   	// #2
   35e38:	movk	x1, #0x8000, lsl #48
   35e3c:	str	x1, [x22, #16]
   35e40:	mov	w19, #0x0                   	// #0
   35e44:	ldr	w1, [x0]
   35e48:	orr	w1, w1, #0x4
   35e4c:	str	w1, [x0]
   35e50:	b	35c24 <mpfr_acos@@Base+0x2cc>
   35e54:	mrs	x1, tpidr_el0
   35e58:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   35e5c:	ldr	x2, [x0, #2576]
   35e60:	add	x0, x0, #0xa10
   35e64:	blr	x2
   35e68:	add	x0, x1, x0
   35e6c:	mov	x1, #0x2                   	// #2
   35e70:	movk	x1, #0x8000, lsl #48
   35e74:	mov	w19, #0x0                   	// #0
   35e78:	ldp	x25, x26, [sp, #64]
   35e7c:	str	x1, [x22, #16]
   35e80:	ldr	w1, [x0]
   35e84:	orr	w1, w1, #0x4
   35e88:	str	w1, [x0]
   35e8c:	b	35c24 <mpfr_acos@@Base+0x2cc>
   35e90:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   35e94:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   35e98:	add	x2, x2, #0xf80
   35e9c:	add	x0, x0, #0x470
   35ea0:	mov	w1, #0x86                  	// #134
   35ea4:	bl	cb40 <mpfr_assert_fail@plt>
   35ea8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   35eac:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   35eb0:	add	x2, x2, #0xf70
   35eb4:	add	x0, x0, #0x470
   35eb8:	mov	w1, #0x60                  	// #96
   35ebc:	bl	cb40 <mpfr_assert_fail@plt>
   35ec0:	mov	x12, #0x1550                	// #5456
   35ec4:	sub	sp, sp, x12
   35ec8:	stp	x29, x30, [sp]
   35ecc:	mov	x29, sp
   35ed0:	stp	x1, x0, [sp, #280]
   35ed4:	ldr	w1, [x3, #4]
   35ed8:	stp	x19, x20, [sp, #16]
   35edc:	str	x5, [sp, #200]
   35ee0:	stp	x3, x4, [sp, #296]
   35ee4:	str	x2, [sp, #312]
   35ee8:	cbz	w1, 366d0 <mpfr_acos@@Base+0xd78>
   35eec:	mov	x2, #0x1150                	// #4432
   35ef0:	stp	x21, x22, [sp, #32]
   35ef4:	add	x22, sp, #0x140
   35ef8:	add	x20, sp, #0x950
   35efc:	mov	x0, x22
   35f00:	stp	x23, x24, [sp, #48]
   35f04:	add	x24, sp, #0xd50
   35f08:	mov	x23, x20
   35f0c:	stp	x25, x26, [sp, #64]
   35f10:	add	x26, sp, x2
   35f14:	add	x21, x26, #0x10
   35f18:	stp	x27, x28, [sp, #80]
   35f1c:	mov	x25, #0xfffffffffffffff8    	// #-8
   35f20:	str	x20, [sp, #168]
   35f24:	str	x22, [sp, #216]
   35f28:	bl	bf90 <mpfr_mpz_init@plt>
   35f2c:	ldr	x27, [sp, #296]
   35f30:	mov	x1, #0x0                   	// #0
   35f34:	mov	x0, x27
   35f38:	bl	ba90 <__gmpz_scan1@plt>
   35f3c:	mov	x19, x0
   35f40:	mov	x1, x27
   35f44:	mov	x2, x19
   35f48:	mov	x0, x22
   35f4c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   35f50:	mov	x2, x22
   35f54:	mov	x1, x22
   35f58:	mov	x0, x22
   35f5c:	bl	bff0 <__gmpz_mul@plt>
   35f60:	mov	x0, x20
   35f64:	str	x24, [sp, #160]
   35f68:	str	x26, [sp, #184]
   35f6c:	bl	bf90 <mpfr_mpz_init@plt>
   35f70:	mov	x1, #0x6                   	// #6
   35f74:	mov	x0, x20
   35f78:	bl	bcb0 <__gmpz_set_ui@plt>
   35f7c:	mov	x0, x24
   35f80:	bl	bf90 <mpfr_mpz_init@plt>
   35f84:	mov	x1, #0x6                   	// #6
   35f88:	mov	x0, x24
   35f8c:	bl	bcb0 <__gmpz_set_ui@plt>
   35f90:	ldr	x28, [sp, #304]
   35f94:	mov	x0, x26
   35f98:	bl	bf90 <mpfr_mpz_init@plt>
   35f9c:	mov	x1, x22
   35fa0:	sub	x19, x28, x19
   35fa4:	mov	x0, x26
   35fa8:	bl	bfa0 <__gmpz_set@plt>
   35fac:	lsl	x26, x19, #1
   35fb0:	add	x0, x20, #0x10
   35fb4:	str	x26, [sp, #120]
   35fb8:	bl	bf90 <mpfr_mpz_init@plt>
   35fbc:	add	x0, x24, #0x10
   35fc0:	bl	bf90 <mpfr_mpz_init@plt>
   35fc4:	mov	x0, x21
   35fc8:	bl	bf90 <mpfr_mpz_init@plt>
   35fcc:	mov	x2, x22
   35fd0:	mov	x1, x22
   35fd4:	mov	x0, x21
   35fd8:	bl	bff0 <__gmpz_mul@plt>
   35fdc:	ldr	w0, [sp, #4452]
   35fe0:	mov	x2, x26
   35fe4:	ldr	x5, [sp, #4456]
   35fe8:	cmp	w0, #0x0
   35fec:	cneg	w3, w0, lt  // lt = tstop
   35ff0:	mov	x1, x23
   35ff4:	mov	x0, x23
   35ff8:	mov	x20, x26
   35ffc:	add	x4, x25, w3, sxtw #3
   36000:	sbfiz	x3, x3, #6, #32
   36004:	ldr	x4, [x5, x4]
   36008:	clz	x4, x4
   3600c:	sub	x3, x3, x4
   36010:	str	x3, [sp, #192]
   36014:	str	x3, [sp, #1880]
   36018:	bl	c200 <__gmpz_mul_2exp@plt>
   3601c:	mov	x2, x22
   36020:	mov	x1, x23
   36024:	mov	x0, x23
   36028:	bl	bde0 <__gmpz_sub@plt>
   3602c:	ldr	w0, [sp, #324]
   36030:	mov	x4, #0x1                   	// #1
   36034:	ldr	w1, [x27, #4]
   36038:	cmp	w0, #0x0
   3603c:	str	x4, [sp, #336]
   36040:	cneg	w0, w0, lt  // lt = tstop
   36044:	cmp	w1, #0x0
   36048:	ldr	x6, [sp, #328]
   3604c:	cneg	w1, w1, lt  // lt = tstop
   36050:	add	x3, x25, w0, sxtw #3
   36054:	sbfiz	x0, x0, #6, #32
   36058:	ldr	x5, [x27, #8]
   3605c:	add	x2, x25, w1, sxtw #3
   36060:	ldr	x3, [x6, x3]
   36064:	sbfiz	x1, x1, #6, #32
   36068:	ldr	x2, [x5, x2]
   3606c:	clz	x3, x3
   36070:	sub	x0, x0, x3
   36074:	clz	x2, x2
   36078:	sub	x0, x26, x0
   3607c:	sub	x1, x1, x2
   36080:	add	x0, x0, x28
   36084:	sub	x0, x0, x1
   36088:	str	x0, [sp, #848]
   3608c:	ldr	x1, [sp, #200]
   36090:	cmp	x0, x1
   36094:	b.ge	366c4 <mpfr_acos@@Base+0xd6c>  // b.tcont
   36098:	lsl	x0, x19, #2
   3609c:	stp	x0, x4, [sp, #232]
   360a0:	mov	x0, #0x6                   	// #6
   360a4:	str	x0, [sp, #152]
   360a8:	mov	w0, #0x2                   	// #2
   360ac:	str	w0, [sp, #180]
   360b0:	mov	x0, #0x2                   	// #2
   360b4:	str	x0, [sp, #144]
   360b8:	add	x0, sp, #0x150
   360bc:	str	x0, [sp, #128]
   360c0:	add	x0, sp, #0xd54
   360c4:	str	x0, [sp, #248]
   360c8:	add	x0, sp, #0xd58
   360cc:	str	x0, [sp, #256]
   360d0:	add	x0, sp, #0x350
   360d4:	str	x0, [sp, #136]
   360d8:	mov	x0, #0x1154                	// #4436
   360dc:	add	x0, sp, x0
   360e0:	mov	w6, #0x0                   	// #0
   360e4:	mov	x1, #0x1158                	// #4440
   360e8:	add	x20, sp, #0x550
   360ec:	mov	w28, w6
   360f0:	str	x0, [sp, #264]
   360f4:	add	x0, sp, x1
   360f8:	str	x25, [sp, #112]
   360fc:	str	x0, [sp, #272]
   36100:	add	x0, sp, #0x750
   36104:	str	x0, [sp, #208]
   36108:	add	w0, w28, #0x1
   3610c:	add	w21, w28, #0x2
   36110:	ldr	w2, [sp, #180]
   36114:	sxtw	x23, w0
   36118:	str	w0, [sp, #104]
   3611c:	str	w21, [sp, #176]
   36120:	mov	x24, x23
   36124:	lsl	x19, x23, #4
   36128:	cmp	w21, w2
   3612c:	b.lt	361b8 <mpfr_acos@@Base+0x860>  // b.tstop
   36130:	add	w0, w2, #0x1
   36134:	add	x1, x19, #0x10
   36138:	str	w0, [sp, #180]
   3613c:	mov	x25, x1
   36140:	ldr	x0, [sp, #168]
   36144:	add	x0, x0, x1
   36148:	bl	bf90 <mpfr_mpz_init@plt>
   3614c:	ldr	x0, [sp, #160]
   36150:	ldr	x22, [sp, #184]
   36154:	add	x0, x0, x25
   36158:	bl	bf90 <mpfr_mpz_init@plt>
   3615c:	add	x25, x22, x25
   36160:	mov	x0, x25
   36164:	bl	bf90 <mpfr_mpz_init@plt>
   36168:	add	x2, x22, x19
   3616c:	mov	x0, x25
   36170:	mov	x1, x2
   36174:	bl	bff0 <__gmpz_mul@plt>
   36178:	ldp	x0, x2, [sp, #264]
   3617c:	sbfiz	x1, x21, #4, #32
   36180:	ldr	w0, [x0, x1]
   36184:	ldr	x2, [x2, x1]
   36188:	cmp	w0, #0x0
   3618c:	ldr	x1, [sp, #112]
   36190:	cneg	w0, w0, lt  // lt = tstop
   36194:	add	x1, x1, w0, sxtw #3
   36198:	sbfiz	x0, x0, #6, #32
   3619c:	ldr	x1, [x2, x1]
   361a0:	clz	x1, x1
   361a4:	sub	x0, x0, x1
   361a8:	ldr	x1, [sp, #208]
   361ac:	str	x0, [x1, w21, sxtw #3]
   361b0:	ldr	x0, [sp, #1880]
   361b4:	str	x0, [sp, #192]
   361b8:	ldp	x21, x0, [sp, #152]
   361bc:	ldr	x2, [sp, #128]
   361c0:	ldr	x3, [sp, #240]
   361c4:	add	x26, x0, x19
   361c8:	mov	x1, x21
   361cc:	mov	x0, x26
   361d0:	str	x3, [x2, x23, lsl #3]
   361d4:	bl	bcb0 <__gmpz_set_ui@plt>
   361d8:	ldr	x3, [sp, #168]
   361dc:	mov	x1, x26
   361e0:	mov	x0, x26
   361e4:	add	x2, x21, #0x1
   361e8:	add	x25, x3, x19
   361ec:	bl	c100 <__gmpz_mul_ui@plt>
   361f0:	ldr	x2, [sp, #120]
   361f4:	mov	x1, x26
   361f8:	ldr	x22, [sp, #144]
   361fc:	add	x0, x22, #0x1
   36200:	str	x0, [sp, #224]
   36204:	mov	x0, x25
   36208:	bl	c200 <__gmpz_mul_2exp@plt>
   3620c:	ldr	x2, [sp, #216]
   36210:	mov	x1, x25
   36214:	mov	x0, x25
   36218:	bl	bde0 <__gmpz_sub@plt>
   3621c:	mov	x1, x26
   36220:	mov	x0, x26
   36224:	lsl	x2, x22, #1
   36228:	bl	c100 <__gmpz_mul_ui@plt>
   3622c:	mov	x1, x26
   36230:	mov	x0, x26
   36234:	sub	x2, x21, #0x1
   36238:	bl	c100 <__gmpz_mul_ui@plt>
   3623c:	ldr	x2, [sp, #192]
   36240:	lsl	x1, x23, #4
   36244:	ldr	x0, [sp, #232]
   36248:	sub	x3, x0, x2
   3624c:	sub	x2, x3, #0x1
   36250:	ldp	x0, x3, [sp, #248]
   36254:	ldr	w0, [x0, x1]
   36258:	ldr	x3, [x3, x1]
   3625c:	cmp	w0, #0x0
   36260:	ldr	x1, [sp, #112]
   36264:	cneg	w0, w0, lt  // lt = tstop
   36268:	add	x1, x1, w0, sxtw #3
   3626c:	sbfiz	x0, x0, #6, #32
   36270:	ldr	x3, [x3, x1]
   36274:	clz	x3, x3
   36278:	sub	x3, x0, x3
   3627c:	ldr	x0, [sp, #136]
   36280:	add	x3, x3, x2
   36284:	str	x3, [x0, x23, lsl #3]
   36288:	ldr	w0, [sp, #104]
   3628c:	cbz	w0, 36298 <mpfr_acos@@Base+0x940>
   36290:	ldr	x0, [x20, w28, sxtw #3]
   36294:	add	x3, x3, x0
   36298:	ldr	x0, [sp, #144]
   3629c:	str	x3, [x20, x23, lsl #3]
   362a0:	add	x0, x0, #0x2
   362a4:	str	x0, [sp, #144]
   362a8:	lsr	x23, x0, #1
   362ac:	tbnz	w0, #1, 363e8 <mpfr_acos@@Base+0xa90>
   362b0:	ldr	x0, [sp, #160]
   362b4:	sub	x19, x19, #0x10
   362b8:	mov	x21, x20
   362bc:	mov	x20, x23
   362c0:	add	x26, x0, x19
   362c4:	ldr	x0, [sp, #184]
   362c8:	add	x27, x0, #0x10
   362cc:	ldr	x0, [sp, #208]
   362d0:	add	x28, x0, #0x8
   362d4:	nop
   362d8:	mov	x1, x25
   362dc:	mov	x0, x25
   362e0:	mov	x2, x27
   362e4:	bl	bff0 <__gmpz_mul@plt>
   362e8:	sub	x19, x25, #0x10
   362ec:	add	x2, x26, #0x10
   362f0:	mov	x23, x2
   362f4:	mov	x1, x19
   362f8:	mov	x0, x19
   362fc:	bl	bff0 <__gmpz_mul@plt>
   36300:	ldr	w0, [sp, #176]
   36304:	sub	w2, w24, #0x1
   36308:	str	w2, [sp, #104]
   3630c:	mov	x1, x19
   36310:	ldr	x2, [sp, #120]
   36314:	sub	w3, w0, w24
   36318:	mov	x0, x19
   3631c:	lsl	x22, x2, x3
   36320:	mov	x2, x22
   36324:	bl	c200 <__gmpz_mul_2exp@plt>
   36328:	mov	x2, x25
   3632c:	mov	x1, x19
   36330:	mov	x0, x19
   36334:	bl	c9c0 <__gmpz_add@plt>
   36338:	mov	x2, x23
   3633c:	mov	x1, x26
   36340:	mov	x0, x26
   36344:	bl	bff0 <__gmpz_mul@plt>
   36348:	ldr	w0, [x26, #20]
   3634c:	lsl	x1, x24, #3
   36350:	ldr	x2, [sp, #112]
   36354:	cmp	w0, #0x0
   36358:	cneg	w0, w0, lt  // lt = tstop
   3635c:	sub	w8, w24, #0x2
   36360:	ldr	x3, [x26, #24]
   36364:	add	x2, x2, w0, sxtw #3
   36368:	sbfiz	x0, x0, #6, #32
   3636c:	add	x7, x21, x1
   36370:	mov	x25, x19
   36374:	cmp	w24, #0x1
   36378:	ldr	x3, [x3, x2]
   3637c:	ldr	x2, [sp, #136]
   36380:	clz	x3, x3
   36384:	sub	x3, x0, x3
   36388:	add	x5, x2, x1
   3638c:	add	x3, x3, x22
   36390:	ldr	x2, [sp, #128]
   36394:	ldr	x0, [x28]
   36398:	add	x2, x2, x1
   3639c:	ldur	x6, [x5, #-8]
   363a0:	sub	x3, x3, x0
   363a4:	ldur	x0, [x2, #-8]
   363a8:	sub	x3, x3, #0x1
   363ac:	add	x3, x3, x6
   363b0:	stur	x3, [x5, #-8]
   363b4:	add	x0, x0, #0x1
   363b8:	stur	x0, [x2, #-8]
   363bc:	b.eq	36408 <mpfr_acos@@Base+0xab0>  // b.none
   363c0:	ldr	x0, [x21, w8, sxtw #3]
   363c4:	lsr	x20, x20, #1
   363c8:	sub	x24, x24, #0x1
   363cc:	add	x27, x27, #0x10
   363d0:	add	x3, x3, x0
   363d4:	stur	x3, [x7, #-8]
   363d8:	sub	x26, x26, #0x10
   363dc:	add	x28, x28, #0x8
   363e0:	tbz	w20, #0, 362d8 <mpfr_acos@@Base+0x980>
   363e4:	mov	x20, x21
   363e8:	ldr	x0, [sp, #152]
   363ec:	add	x0, x0, #0x4
   363f0:	str	x0, [sp, #152]
   363f4:	ldr	x0, [sp, #200]
   363f8:	cmp	x0, x3
   363fc:	b.le	3642c <mpfr_acos@@Base+0xad4>
   36400:	ldr	w28, [sp, #104]
   36404:	b	36108 <mpfr_acos@@Base+0x7b0>
   36408:	add	x1, x21, x1
   3640c:	lsr	x20, x20, #1
   36410:	sub	x24, x24, #0x1
   36414:	add	x27, x27, #0x10
   36418:	sub	x26, x26, #0x10
   3641c:	add	x28, x28, #0x8
   36420:	stur	x3, [x1, #-8]
   36424:	tbz	w20, #0, 362d8 <mpfr_acos@@Base+0x980>
   36428:	b	363e4 <mpfr_acos@@Base+0xa8c>
   3642c:	ldr	x25, [sp, #120]
   36430:	ldr	x0, [sp, #224]
   36434:	ldr	w21, [sp, #104]
   36438:	mul	x20, x25, x0
   3643c:	cmp	w21, #0x0
   36440:	b.le	364ec <mpfr_acos@@Base+0xb94>
   36444:	ldr	x0, [sp, #128]
   36448:	sbfiz	x27, x21, #4, #32
   3644c:	ldr	x28, [sp, #184]
   36450:	mov	x19, #0x0                   	// #0
   36454:	add	x22, x0, w21, sxtw #3
   36458:	mov	x23, #0x1                   	// #1
   3645c:	ldr	x0, [sp, #168]
   36460:	str	x20, [sp, #104]
   36464:	add	x26, x0, x27
   36468:	ldr	x0, [sp, #160]
   3646c:	add	x27, x0, x27
   36470:	ldur	x2, [x22, #-8]
   36474:	sub	x24, x26, #0x10
   36478:	mov	x1, x26
   3647c:	mov	x0, x26
   36480:	sub	x20, x27, #0x10
   36484:	sub	w21, w21, #0x1
   36488:	add	x2, x28, x2, lsl #4
   3648c:	bl	bff0 <__gmpz_mul@plt>
   36490:	mov	x2, x27
   36494:	mov	x1, x24
   36498:	mov	x0, x24
   3649c:	bl	bff0 <__gmpz_mul@plt>
   364a0:	ldr	x2, [x22], #-8
   364a4:	mov	x1, x24
   364a8:	mov	x0, x24
   364ac:	lsl	x2, x23, x2
   364b0:	add	x19, x19, x2
   364b4:	mul	x2, x25, x19
   364b8:	bl	c200 <__gmpz_mul_2exp@plt>
   364bc:	mov	x2, x26
   364c0:	mov	x1, x24
   364c4:	mov	x0, x24
   364c8:	bl	c9c0 <__gmpz_add@plt>
   364cc:	mov	x2, x27
   364d0:	mov	x26, x24
   364d4:	mov	x1, x20
   364d8:	mov	x0, x20
   364dc:	mov	x27, x20
   364e0:	bl	bff0 <__gmpz_mul@plt>
   364e4:	cbnz	w21, 36470 <mpfr_acos@@Base+0xb18>
   364e8:	ldr	x20, [sp, #104]
   364ec:	mov	x21, #0xfffffffffffffff8    	// #-8
   364f0:	ldr	w0, [sp, #3412]
   364f4:	ldr	x3, [sp, #304]
   364f8:	cmp	w0, #0x0
   364fc:	cneg	w2, w0, lt  // lt = tstop
   36500:	ldr	x4, [sp, #3416]
   36504:	add	x20, x3, x20
   36508:	add	x3, x21, w2, sxtw #3
   3650c:	sbfiz	x2, x2, #6, #32
   36510:	ldr	x22, [sp, #200]
   36514:	ldr	x3, [x4, x3]
   36518:	ldr	x1, [sp, #160]
   3651c:	clz	x3, x3
   36520:	sub	x2, x2, x3
   36524:	ldr	x0, [sp, #288]
   36528:	cmp	x22, x2
   3652c:	sub	x2, x2, x22
   36530:	csel	x19, x2, xzr, lt  // lt = tstop
   36534:	mov	x2, x19
   36538:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   3653c:	ldr	w0, [sp, #2388]
   36540:	mov	x2, #0x0                   	// #0
   36544:	ldr	x1, [sp, #2392]
   36548:	cmp	w0, #0x0
   3654c:	cneg	w0, w0, lt  // lt = tstop
   36550:	add	x21, x21, w0, sxtw #3
   36554:	sbfiz	x0, x0, #6, #32
   36558:	ldr	x1, [x1, x21]
   3655c:	clz	x1, x1
   36560:	sub	x0, x0, x1
   36564:	cmp	x22, x0
   36568:	b.ge	36574 <mpfr_acos@@Base+0xc1c>  // b.tcont
   3656c:	sub	x2, x0, x22
   36570:	sub	x19, x19, x2
   36574:	ldr	x21, [sp, #168]
   36578:	add	x20, x20, x19
   3657c:	mov	x1, x21
   36580:	mov	x0, x21
   36584:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   36588:	ldr	x2, [sp, #296]
   3658c:	mov	x1, x21
   36590:	ldr	x21, [sp, #280]
   36594:	mov	x0, x21
   36598:	bl	bff0 <__gmpz_mul@plt>
   3659c:	ldr	w0, [x21, #4]
   365a0:	mov	x1, #0xfffffffffffffff8    	// #-8
   365a4:	ldr	x3, [x21, #8]
   365a8:	cmp	w0, #0x0
   365ac:	cneg	w0, w0, lt  // lt = tstop
   365b0:	mov	x2, #0x0                   	// #0
   365b4:	add	x1, x1, w0, sxtw #3
   365b8:	sbfiz	x0, x0, #6, #32
   365bc:	ldr	x1, [x3, x1]
   365c0:	clz	x1, x1
   365c4:	sub	x0, x0, x1
   365c8:	ldr	x1, [sp, #200]
   365cc:	cmp	x1, x0
   365d0:	b.lt	366b8 <mpfr_acos@@Base+0xd60>  // b.tstop
   365d4:	ldr	x0, [sp, #280]
   365d8:	mov	x1, x0
   365dc:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   365e0:	ldr	x0, [sp, #216]
   365e4:	ldr	x19, [sp, #160]
   365e8:	bl	c170 <mpfr_mpz_clear@plt>
   365ec:	ldr	w1, [sp, #180]
   365f0:	ldr	x0, [sp, #168]
   365f4:	sub	w22, w1, #0x1
   365f8:	ldr	x23, [sp, #184]
   365fc:	add	x21, x0, #0x10
   36600:	add	x22, x21, w22, uxtw #4
   36604:	b	3660c <mpfr_acos@@Base+0xcb4>
   36608:	add	x21, x21, #0x10
   3660c:	bl	c170 <mpfr_mpz_clear@plt>
   36610:	mov	x0, x19
   36614:	bl	c170 <mpfr_mpz_clear@plt>
   36618:	mov	x0, x23
   3661c:	bl	c170 <mpfr_mpz_clear@plt>
   36620:	add	x19, x19, #0x10
   36624:	add	x23, x23, #0x10
   36628:	cmp	x22, x21
   3662c:	mov	x0, x21
   36630:	b.ne	36608 <mpfr_acos@@Base+0xcb0>  // b.any
   36634:	ldr	x0, [sp, #288]
   36638:	mov	w1, #0x2                   	// #2
   3663c:	bl	cb60 <__gmpz_sizeinbase@plt>
   36640:	add	x0, x0, x20
   36644:	ldr	x1, [sp, #200]
   36648:	cmp	x0, x1
   3664c:	b.cc	3670c <mpfr_acos@@Base+0xdb4>  // b.lo, b.ul, b.last
   36650:	ldr	x2, [sp, #288]
   36654:	ldr	x19, [sp, #312]
   36658:	mov	x1, x2
   3665c:	mov	x0, x19
   36660:	bl	bff0 <__gmpz_mul@plt>
   36664:	lsl	x2, x20, #1
   36668:	mov	x1, x19
   3666c:	mov	x0, x19
   36670:	bl	c200 <__gmpz_mul_2exp@plt>
   36674:	ldr	x2, [sp, #280]
   36678:	mov	x0, x19
   3667c:	mov	x1, x2
   36680:	bl	c880 <__gmpz_submul@plt>
   36684:	mov	x1, x19
   36688:	mov	x0, x19
   3668c:	bl	bc60 <__gmpz_sqrt@plt>
   36690:	mov	x0, x20
   36694:	mov	x12, #0x1550                	// #5456
   36698:	ldp	x29, x30, [sp]
   3669c:	ldp	x19, x20, [sp, #16]
   366a0:	ldp	x21, x22, [sp, #32]
   366a4:	ldp	x23, x24, [sp, #48]
   366a8:	ldp	x25, x26, [sp, #64]
   366ac:	ldp	x27, x28, [sp, #80]
   366b0:	add	sp, sp, x12
   366b4:	ret
   366b8:	sub	x2, x0, x1
   366bc:	sub	x20, x20, x2
   366c0:	b	365d4 <mpfr_acos@@Base+0xc7c>
   366c4:	mov	w0, #0x2                   	// #2
   366c8:	str	w0, [sp, #180]
   366cc:	b	364ec <mpfr_acos@@Base+0xb94>
   366d0:	mov	x1, #0x1                   	// #1
   366d4:	bl	bcb0 <__gmpz_set_ui@plt>
   366d8:	ldr	x0, [sp, #280]
   366dc:	mov	x1, #0x1                   	// #1
   366e0:	mov	x20, #0x0                   	// #0
   366e4:	bl	bcb0 <__gmpz_set_ui@plt>
   366e8:	ldr	x0, [sp, #312]
   366ec:	mov	x1, #0x1                   	// #1
   366f0:	bl	bcb0 <__gmpz_set_ui@plt>
   366f4:	mov	x0, x20
   366f8:	mov	x12, #0x1550                	// #5456
   366fc:	ldp	x29, x30, [sp]
   36700:	ldp	x19, x20, [sp, #16]
   36704:	add	sp, sp, x12
   36708:	ret
   3670c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   36710:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   36714:	add	x2, x2, #0x478
   36718:	add	x0, x0, #0x4a0
   3671c:	mov	w1, #0x1be                 	// #446
   36720:	bl	cb40 <mpfr_assert_fail@plt>
   36724:	b	36650 <mpfr_acos@@Base+0xcf8>
   36728:	stp	x29, x30, [sp, #-304]!
   3672c:	mov	x29, sp
   36730:	stp	x0, x1, [sp, #144]
   36734:	ldr	x1, [x2]
   36738:	stp	x23, x24, [sp, #48]
   3673c:	add	x23, sp, #0x110
   36740:	stp	x19, x20, [sp, #16]
   36744:	mov	x19, x2
   36748:	add	x20, sp, #0xc0
   3674c:	stp	x21, x22, [sp, #32]
   36750:	add	x22, sp, #0xb0
   36754:	add	x24, sp, #0xe0
   36758:	stp	x25, x26, [sp, #64]
   3675c:	add	x21, sp, #0xf0
   36760:	add	x26, sp, #0x100
   36764:	stp	x27, x28, [sp, #80]
   36768:	add	x27, sp, #0xa0
   3676c:	add	x28, sp, #0xd0
   36770:	ldr	x25, [x0]
   36774:	mov	x0, x23
   36778:	bl	ca80 <mpfr_init2@plt>
   3677c:	mov	x0, x27
   36780:	bl	bf90 <mpfr_mpz_init@plt>
   36784:	mov	x0, x22
   36788:	bl	bf90 <mpfr_mpz_init@plt>
   3678c:	mov	x0, x20
   36790:	bl	bf90 <mpfr_mpz_init@plt>
   36794:	mov	x0, x28
   36798:	bl	bf90 <mpfr_mpz_init@plt>
   3679c:	mov	x0, x24
   367a0:	bl	bf90 <mpfr_mpz_init@plt>
   367a4:	mov	x0, x21
   367a8:	bl	bf90 <mpfr_mpz_init@plt>
   367ac:	mov	x0, x26
   367b0:	bl	bf90 <mpfr_mpz_init@plt>
   367b4:	ldr	w3, [x19, #8]
   367b8:	mov	w2, #0x0                   	// #0
   367bc:	mov	x1, x19
   367c0:	mov	x0, x23
   367c4:	str	xzr, [sp, #104]
   367c8:	mov	x19, #0x1                   	// #1
   367cc:	str	xzr, [sp, #120]
   367d0:	bl	c6a0 <mpfr_set4@plt>
   367d4:	mov	x0, x27
   367d8:	mov	x1, x19
   367dc:	bl	bcb0 <__gmpz_set_ui@plt>
   367e0:	mov	x0, x22
   367e4:	mov	x1, #0x0                   	// #0
   367e8:	bl	bcb0 <__gmpz_set_ui@plt>
   367ec:	mov	x0, x20
   367f0:	mov	x1, x19
   367f4:	bl	bcb0 <__gmpz_set_ui@plt>
   367f8:	add	x0, x25, x25, lsr #63
   367fc:	asr	x0, x0, #1
   36800:	str	x0, [sp, #128]
   36804:	b	369f4 <mpfr_acos@@Base+0x109c>
   36808:	mov	x1, x23
   3680c:	mov	x0, x24
   36810:	bl	cac0 <mpfr_get_z_2exp@plt>
   36814:	sub	x2, x19, #0x1
   36818:	mov	x1, #0x1                   	// #1
   3681c:	sub	x0, x2, x0
   36820:	str	x0, [sp, #112]
   36824:	mov	x0, x28
   36828:	bl	bcb0 <__gmpz_set_ui@plt>
   3682c:	lsl	x1, x19, #1
   36830:	mov	x0, x21
   36834:	str	x1, [sp, #96]
   36838:	mov	x1, #0x1                   	// #1
   3683c:	bl	bcb0 <__gmpz_set_ui@plt>
   36840:	ldr	x2, [sp, #112]
   36844:	mov	x0, x21
   36848:	mov	x1, x21
   3684c:	bl	c200 <__gmpz_mul_2exp@plt>
   36850:	mov	w0, #0x1                   	// #1
   36854:	str	w0, [sp, #280]
   36858:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3685c:	str	x0, [sp, #288]
   36860:	cmp	x19, #0x1
   36864:	b.eq	36a88 <mpfr_acos@@Base+0x1130>  // b.none
   36868:	mov	x2, x20
   3686c:	mov	x1, x22
   36870:	mov	x0, x26
   36874:	bl	c9c0 <__gmpz_add@plt>
   36878:	mov	x2, x21
   3687c:	mov	x1, x20
   36880:	mov	x0, x20
   36884:	bl	bff0 <__gmpz_mul@plt>
   36888:	mov	x2, x24
   3688c:	mov	x1, x21
   36890:	mov	x0, x21
   36894:	bl	c9c0 <__gmpz_add@plt>
   36898:	mov	x2, x24
   3689c:	mov	x1, x22
   368a0:	mov	x0, x24
   368a4:	bl	bff0 <__gmpz_mul@plt>
   368a8:	mov	x2, x21
   368ac:	mov	x1, x26
   368b0:	mov	x0, x26
   368b4:	bl	bff0 <__gmpz_mul@plt>
   368b8:	mov	x2, x24
   368bc:	mov	x1, x26
   368c0:	mov	x0, x22
   368c4:	bl	bde0 <__gmpz_sub@plt>
   368c8:	mov	x2, x20
   368cc:	mov	x1, x22
   368d0:	mov	x0, x22
   368d4:	bl	bde0 <__gmpz_sub@plt>
   368d8:	mov	x2, x24
   368dc:	mov	x1, x20
   368e0:	mov	x0, x20
   368e4:	bl	bde0 <__gmpz_sub@plt>
   368e8:	mov	x2, x28
   368ec:	mov	x1, x27
   368f0:	mov	x0, x27
   368f4:	bl	bff0 <__gmpz_mul@plt>
   368f8:	ldr	w0, [sp, #164]
   368fc:	mov	x2, #0xfffffffffffffff8    	// #-8
   36900:	ldr	x4, [sp, #168]
   36904:	cmp	w0, #0x0
   36908:	cneg	w19, w0, lt  // lt = tstop
   3690c:	mov	x3, #0x0                   	// #0
   36910:	mov	x1, x27
   36914:	mov	x0, x27
   36918:	add	x2, x2, w19, sxtw #3
   3691c:	sbfiz	x19, x19, #6, #32
   36920:	str	x3, [sp, #136]
   36924:	ldr	x2, [x4, x2]
   36928:	clz	x2, x2
   3692c:	sub	x19, x19, x2
   36930:	cmp	x25, x19
   36934:	sub	x19, x19, x25
   36938:	csel	x19, x19, xzr, lt  // lt = tstop
   3693c:	mov	x2, x19
   36940:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   36944:	ldr	w0, [sp, #180]
   36948:	mov	x2, #0xfffffffffffffff8    	// #-8
   3694c:	ldr	w1, [sp, #196]
   36950:	cmp	w0, #0x0
   36954:	cneg	w0, w0, lt  // lt = tstop
   36958:	cmp	w1, #0x0
   3695c:	cneg	w1, w1, lt  // lt = tstop
   36960:	ldr	x6, [sp, #184]
   36964:	add	x4, x2, w0, sxtw #3
   36968:	ldr	x5, [sp, #200]
   3696c:	add	x2, x2, w1, sxtw #3
   36970:	ldr	x4, [x6, x4]
   36974:	sbfiz	x0, x0, #6, #32
   36978:	ldr	x2, [x5, x2]
   3697c:	sbfiz	x1, x1, #6, #32
   36980:	clz	x4, x4
   36984:	clz	x2, x2
   36988:	sub	x0, x0, x4
   3698c:	sub	x1, x1, x2
   36990:	cmp	x0, x1
   36994:	csel	x0, x0, x1, ls  // ls = plast
   36998:	cmp	x0, x25
   3699c:	ldr	x3, [sp, #136]
   369a0:	b.ls	369b0 <mpfr_acos@@Base+0x1058>  // b.plast
   369a4:	sub	x1, x25, x0
   369a8:	sub	x3, x0, x25
   369ac:	add	x19, x19, x1
   369b0:	mov	x2, x3
   369b4:	mov	x1, x22
   369b8:	mov	x0, x22
   369bc:	str	x3, [sp, #136]
   369c0:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   369c4:	ldr	x3, [sp, #136]
   369c8:	mov	x1, x20
   369cc:	mov	x0, x20
   369d0:	mov	x2, x3
   369d4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   369d8:	ldp	x1, x0, [sp, #112]
   369dc:	add	x0, x0, x1
   369e0:	add	x0, x0, x19
   369e4:	str	x0, [sp, #120]
   369e8:	ldp	x19, x0, [sp, #96]
   369ec:	add	x0, x0, #0x1
   369f0:	str	x0, [sp, #104]
   369f4:	mov	x0, x23
   369f8:	bl	c710 <mpfr_sgn@plt>
   369fc:	cmp	w0, #0x0
   36a00:	ccmp	x25, x19, #0x1, ne  // ne = any
   36a04:	b.lt	36ab8 <mpfr_acos@@Base+0x1160>  // b.tstop
   36a08:	ldr	x0, [sp, #128]
   36a0c:	cmp	x0, x19
   36a10:	b.lt	36808 <mpfr_acos@@Base+0xeb0>  // b.tstop
   36a14:	mov	x2, x19
   36a18:	mov	x1, x23
   36a1c:	mov	w3, #0x0                   	// #0
   36a20:	mov	x0, x23
   36a24:	bl	c2c0 <mpfr_mul_2ui@plt>
   36a28:	lsl	x0, x19, #1
   36a2c:	mov	x1, x23
   36a30:	mov	w2, #0x1                   	// #1
   36a34:	str	x0, [sp, #96]
   36a38:	mov	x0, x26
   36a3c:	bl	be00 <mpfr_get_z@plt>
   36a40:	ldr	w0, [sp, #260]
   36a44:	cbz	w0, 369e8 <mpfr_acos@@Base+0x1090>
   36a48:	mov	x2, x26
   36a4c:	mov	x1, x23
   36a50:	mov	w3, #0x0                   	// #0
   36a54:	mov	x0, x23
   36a58:	bl	bd60 <mpfr_sub_z@plt>
   36a5c:	ldr	x0, [sp, #96]
   36a60:	mov	x5, x25
   36a64:	mov	x3, x26
   36a68:	mov	x2, x21
   36a6c:	sub	x4, x0, #0x1
   36a70:	mov	x1, x24
   36a74:	mov	x0, x28
   36a78:	bl	35ec0 <mpfr_acos@@Base+0x568>
   36a7c:	str	x0, [sp, #112]
   36a80:	cmp	x19, #0x1
   36a84:	b.ne	36868 <mpfr_acos@@Base+0xf10>  // b.any
   36a88:	ldr	x0, [sp, #112]
   36a8c:	mov	x1, x28
   36a90:	str	x0, [sp, #120]
   36a94:	mov	x0, x27
   36a98:	bl	c0e0 <__gmpz_swap@plt>
   36a9c:	mov	x1, x24
   36aa0:	mov	x0, x22
   36aa4:	bl	c0e0 <__gmpz_swap@plt>
   36aa8:	mov	x1, x21
   36aac:	mov	x0, x20
   36ab0:	bl	c0e0 <__gmpz_swap@plt>
   36ab4:	b	369e8 <mpfr_acos@@Base+0x1090>
   36ab8:	ldr	x0, [sp, #104]
   36abc:	add	x1, x0, x0, lsl #1
   36ac0:	lsl	x1, x1, #2
   36ac4:	sub	x1, x1, x0
   36ac8:	cmp	x1, #0x1
   36acc:	b.ls	36bc8 <mpfr_acos@@Base+0x1270>  // b.plast
   36ad0:	mov	x0, #0x0                   	// #0
   36ad4:	nop
   36ad8:	add	x1, x1, #0x1
   36adc:	add	x0, x0, #0x1
   36ae0:	cmp	x1, #0x3
   36ae4:	lsr	x1, x1, #1
   36ae8:	b.hi	36ad8 <mpfr_acos@@Base+0x1180>  // b.pmore
   36aec:	mov	w19, w0
   36af0:	ldr	x25, [sp, #144]
   36af4:	mov	x1, x22
   36af8:	mov	w2, #0x0                   	// #0
   36afc:	mov	x0, x25
   36b00:	bl	c240 <mpfr_set_z@plt>
   36b04:	mov	x2, x27
   36b08:	mov	x1, x25
   36b0c:	mov	x0, x25
   36b10:	mov	w3, #0x0                   	// #0
   36b14:	bl	cc80 <mpfr_div_z@plt>
   36b18:	ldr	x2, [sp, #120]
   36b1c:	mov	x1, x25
   36b20:	mov	w3, #0x0                   	// #0
   36b24:	mov	x0, x25
   36b28:	bl	c8f0 <mpfr_div_2ui@plt>
   36b2c:	ldr	x25, [sp, #152]
   36b30:	mov	x1, x20
   36b34:	mov	w2, #0x0                   	// #0
   36b38:	mov	x0, x25
   36b3c:	bl	c240 <mpfr_set_z@plt>
   36b40:	mov	x2, x27
   36b44:	mov	x1, x25
   36b48:	mov	x0, x25
   36b4c:	mov	w3, #0x0                   	// #0
   36b50:	bl	cc80 <mpfr_div_z@plt>
   36b54:	ldr	x2, [sp, #120]
   36b58:	mov	x1, x25
   36b5c:	mov	w3, #0x0                   	// #0
   36b60:	mov	x0, x25
   36b64:	bl	c8f0 <mpfr_div_2ui@plt>
   36b68:	mov	x0, x27
   36b6c:	bl	c170 <mpfr_mpz_clear@plt>
   36b70:	mov	x0, x22
   36b74:	bl	c170 <mpfr_mpz_clear@plt>
   36b78:	mov	x0, x20
   36b7c:	bl	c170 <mpfr_mpz_clear@plt>
   36b80:	mov	x0, x28
   36b84:	bl	c170 <mpfr_mpz_clear@plt>
   36b88:	mov	x0, x24
   36b8c:	bl	c170 <mpfr_mpz_clear@plt>
   36b90:	mov	x0, x21
   36b94:	bl	c170 <mpfr_mpz_clear@plt>
   36b98:	mov	x0, x26
   36b9c:	bl	c170 <mpfr_mpz_clear@plt>
   36ba0:	mov	x0, x23
   36ba4:	bl	c070 <mpfr_clear@plt>
   36ba8:	mov	w0, w19
   36bac:	ldp	x19, x20, [sp, #16]
   36bb0:	ldp	x21, x22, [sp, #32]
   36bb4:	ldp	x23, x24, [sp, #48]
   36bb8:	ldp	x25, x26, [sp, #64]
   36bbc:	ldp	x27, x28, [sp, #80]
   36bc0:	ldp	x29, x30, [sp], #304
   36bc4:	ret
   36bc8:	mov	w19, #0x0                   	// #0
   36bcc:	b	36af0 <mpfr_acos@@Base+0x1198>

0000000000036bd0 <mpfr_sincos_fast@@Base>:
   36bd0:	stp	x29, x30, [sp, #-416]!
   36bd4:	cmp	x0, x1
   36bd8:	mov	x29, sp
   36bdc:	stp	x19, x20, [sp, #16]
   36be0:	stp	x21, x22, [sp, #32]
   36be4:	stp	x23, x24, [sp, #48]
   36be8:	stp	x25, x26, [sp, #64]
   36bec:	mov	x26, x0
   36bf0:	stp	x27, x28, [sp, #80]
   36bf4:	str	x1, [sp, #104]
   36bf8:	str	w3, [sp, #124]
   36bfc:	b.eq	37104 <mpfr_sincos_fast@@Base+0x534>  // b.none
   36c00:	mov	x22, x2
   36c04:	cbz	x26, 370bc <mpfr_sincos_fast@@Base+0x4ec>
   36c08:	ldr	x0, [x26]
   36c0c:	cbz	x1, 36c1c <mpfr_sincos_fast@@Base+0x4c>
   36c10:	ldr	x1, [x1]
   36c14:	cmp	x0, x1
   36c18:	csel	x0, x0, x1, ge  // ge = tcont
   36c1c:	cmp	x0, #0x1
   36c20:	b.eq	370c8 <mpfr_sincos_fast@@Base+0x4f8>  // b.none
   36c24:	b.le	370ec <mpfr_sincos_fast@@Base+0x51c>
   36c28:	sub	x1, x0, #0x1
   36c2c:	mov	w5, #0x49                  	// #73
   36c30:	clz	x1, x1
   36c34:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   36c38:	sub	w5, w5, w1
   36c3c:	add	x27, x0, w5, sxtw
   36c40:	cmp	x27, x2
   36c44:	b.ge	3711c <mpfr_sincos_fast@@Base+0x54c>  // b.tcont
   36c48:	sub	x0, x27, #0x1
   36c4c:	asr	x0, x0, #6
   36c50:	add	x19, x0, #0x1
   36c54:	lsl	x0, x19, #1
   36c58:	cmp	x0, #0x10
   36c5c:	b.gt	37010 <mpfr_sincos_fast@@Base+0x440>
   36c60:	add	x1, sp, #0x120
   36c64:	stp	xzr, x1, [sp, #272]
   36c68:	mov	x0, x1
   36c6c:	add	x19, x0, x19, lsl #3
   36c70:	mov	w1, #0x1                   	// #1
   36c74:	str	x27, [sp, #176]
   36c78:	add	x25, sp, #0xd0
   36c7c:	str	w1, [sp, #184]
   36c80:	add	x24, sp, #0xb0
   36c84:	stp	x0, x27, [sp, #200]
   36c88:	add	x23, sp, #0x90
   36c8c:	ldr	w0, [x22, #8]
   36c90:	str	w1, [sp, #216]
   36c94:	add	x21, sp, #0xf0
   36c98:	str	x19, [sp, #232]
   36c9c:	add	x28, sp, #0x88
   36ca0:	cmp	w0, #0x0
   36ca4:	mov	x20, #0x40                  	// #64
   36ca8:	b.gt	36e84 <mpfr_sincos_fast@@Base+0x2b4>
   36cac:	nop
   36cb0:	tbnz	w0, #31, 36ea8 <mpfr_sincos_fast@@Base+0x2d8>
   36cb4:	mov	x1, x27
   36cb8:	mov	x0, x23
   36cbc:	bl	ca80 <mpfr_init2@plt>
   36cc0:	ldr	x1, [x22, #16]
   36cc4:	mov	x0, x21
   36cc8:	cmp	x1, #0x0
   36ccc:	add	x1, x1, x27
   36cd0:	csel	x1, x1, x27, gt
   36cd4:	bl	ca80 <mpfr_init2@plt>
   36cd8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   36cdc:	ldr	x2, [x0, #2624]
   36ce0:	add	x0, x0, #0xa40
   36ce4:	blr	x2
   36ce8:	mrs	x1, tpidr_el0
   36cec:	add	x1, x1, x0
   36cf0:	mov	w2, #0x0                   	// #0
   36cf4:	mov	x0, x21
   36cf8:	bl	c380 <mpfr_cache@plt>
   36cfc:	mov	x1, x21
   36d00:	mov	w3, #0x0                   	// #0
   36d04:	mov	x2, #0x1                   	// #1
   36d08:	mov	x0, x21
   36d0c:	bl	c8f0 <mpfr_div_2ui@plt>
   36d10:	mov	x3, x21
   36d14:	mov	x2, x22
   36d18:	mov	x1, x28
   36d1c:	mov	x0, x23
   36d20:	mov	w4, #0x0                   	// #0
   36d24:	bl	c510 <mpfr_remquo@plt>
   36d28:	ldr	w0, [sp, #152]
   36d2c:	tbnz	w0, #31, 36f54 <mpfr_sincos_fast@@Base+0x384>
   36d30:	mov	x2, x23
   36d34:	mov	x1, x25
   36d38:	mov	x0, x24
   36d3c:	bl	36728 <mpfr_acos@@Base+0xdd0>
   36d40:	sxtw	x0, w0
   36d44:	add	x19, x0, #0x1
   36d48:	ldr	x0, [sp, #136]
   36d4c:	tbnz	w0, #1, 36efc <mpfr_sincos_fast@@Base+0x32c>
   36d50:	tbnz	w0, #0, 36f24 <mpfr_sincos_fast@@Base+0x354>
   36d54:	mov	x0, x23
   36d58:	bl	c070 <mpfr_clear@plt>
   36d5c:	mov	x0, x21
   36d60:	bl	c070 <mpfr_clear@plt>
   36d64:	ldr	x4, [sp, #224]
   36d68:	cbz	x26, 36db8 <mpfr_sincos_fast@@Base+0x1e8>
   36d6c:	ldr	x2, [sp, #192]
   36d70:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   36d74:	cmp	x2, x0
   36d78:	b.le	36e08 <mpfr_sincos_fast@@Base+0x238>
   36d7c:	ldr	w0, [sp, #124]
   36d80:	sub	x2, x19, x2
   36d84:	ldr	x1, [sp, #176]
   36d88:	cmp	w0, #0x0
   36d8c:	ldr	x0, [sp, #200]
   36d90:	sub	x1, x1, #0x1
   36d94:	ldr	x3, [x26]
   36d98:	asr	x1, x1, #6
   36d9c:	sub	x2, x27, x2
   36da0:	add	x1, x1, #0x1
   36da4:	cinc	x3, x3, eq  // eq = none
   36da8:	str	x4, [sp, #112]
   36dac:	bl	c370 <mpfr_round_p@plt>
   36db0:	ldr	x4, [sp, #112]
   36db4:	cbz	w0, 36e08 <mpfr_sincos_fast@@Base+0x238>
   36db8:	ldr	x0, [sp, #104]
   36dbc:	cbz	x0, 36fc0 <mpfr_sincos_fast@@Base+0x3f0>
   36dc0:	ldr	x1, [sp, #224]
   36dc4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   36dc8:	cmp	x1, x0
   36dcc:	b.le	36e08 <mpfr_sincos_fast@@Base+0x238>
   36dd0:	ldr	x2, [sp, #104]
   36dd4:	ldr	w0, [sp, #124]
   36dd8:	ldr	x1, [sp, #208]
   36ddc:	cmp	w0, #0x0
   36de0:	ldr	x0, [sp, #232]
   36de4:	sub	x1, x1, #0x1
   36de8:	ldr	x3, [x2]
   36dec:	asr	x1, x1, #6
   36df0:	sub	x2, x19, x4
   36df4:	add	x1, x1, #0x1
   36df8:	sub	x2, x27, x2
   36dfc:	cinc	x3, x3, eq  // eq = none
   36e00:	bl	c370 <mpfr_round_p@plt>
   36e04:	cbnz	w0, 37024 <mpfr_sincos_fast@@Base+0x454>
   36e08:	mov	x0, #0xfffffffffffffeff    	// #-257
   36e0c:	movk	x0, #0x7fff, lsl #48
   36e10:	sub	x0, x0, x27
   36e14:	cmp	x0, x20
   36e18:	b.lt	36fa8 <mpfr_sincos_fast@@Base+0x3d8>  // b.tstop
   36e1c:	add	x27, x27, x20
   36e20:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   36e24:	cmp	x27, x0
   36e28:	add	x20, x27, x27, lsr #63
   36e2c:	ldr	x1, [sp, #272]
   36e30:	asr	x20, x20, #1
   36e34:	b.ge	3711c <mpfr_sincos_fast@@Base+0x54c>  // b.tcont
   36e38:	sub	x19, x27, #0x1
   36e3c:	asr	x19, x19, #6
   36e40:	add	x19, x19, #0x1
   36e44:	lsl	x2, x19, #4
   36e48:	str	x2, [sp, #272]
   36e4c:	cbnz	x1, 36f44 <mpfr_sincos_fast@@Base+0x374>
   36e50:	mov	x0, x2
   36e54:	bl	ccf0 <mpfr_allocate_func@plt>
   36e58:	str	x0, [sp, #280]
   36e5c:	add	x19, x0, x19, lsl #3
   36e60:	mov	w1, #0x1                   	// #1
   36e64:	str	x27, [sp, #176]
   36e68:	str	w1, [sp, #184]
   36e6c:	stp	x0, x27, [sp, #200]
   36e70:	ldr	w0, [x22, #8]
   36e74:	str	w1, [sp, #216]
   36e78:	str	x19, [sp, #232]
   36e7c:	cmp	w0, #0x0
   36e80:	b.le	36cb0 <mpfr_sincos_fast@@Base+0xe0>
   36e84:	mov	x1, #0xed51                	// #60753
   36e88:	mov	x0, x22
   36e8c:	mov	x2, #0xffffffffffffffe1    	// #-31
   36e90:	movk	x1, #0x6487, lsl #16
   36e94:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   36e98:	cmp	w0, #0x0
   36e9c:	b.le	36f90 <mpfr_sincos_fast@@Base+0x3c0>
   36ea0:	ldr	w0, [x22, #8]
   36ea4:	tbz	w0, #31, 36cb4 <mpfr_sincos_fast@@Base+0xe4>
   36ea8:	mov	x1, #0xffffffffffff12af    	// #-60753
   36eac:	mov	x0, x22
   36eb0:	mov	x2, #0xffffffffffffffe1    	// #-31
   36eb4:	movk	x1, #0x9b78, lsl #16
   36eb8:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   36ebc:	tbnz	w0, #31, 36cb4 <mpfr_sincos_fast@@Base+0xe4>
   36ec0:	ldp	x4, x3, [x22, #16]
   36ec4:	mov	w6, #0x1                   	// #1
   36ec8:	ldr	x7, [x22]
   36ecc:	mov	x1, x25
   36ed0:	mov	x2, x23
   36ed4:	mov	x0, x24
   36ed8:	str	x7, [sp, #144]
   36edc:	str	w6, [sp, #152]
   36ee0:	stp	x4, x3, [sp, #160]
   36ee4:	bl	36728 <mpfr_acos@@Base+0xdd0>
   36ee8:	ldr	w1, [sp, #184]
   36eec:	sxtw	x19, w0
   36ef0:	neg	w1, w1
   36ef4:	str	w1, [sp, #184]
   36ef8:	b	36d64 <mpfr_sincos_fast@@Base+0x194>
   36efc:	mov	x1, x24
   36f00:	mov	w2, #0x0                   	// #0
   36f04:	mov	x0, x24
   36f08:	bl	bd70 <mpfr_neg@plt>
   36f0c:	mov	x1, x25
   36f10:	mov	x0, x25
   36f14:	mov	w2, #0x0                   	// #0
   36f18:	bl	bd70 <mpfr_neg@plt>
   36f1c:	ldr	x0, [sp, #136]
   36f20:	tbz	w0, #0, 36d54 <mpfr_sincos_fast@@Base+0x184>
   36f24:	mov	w2, #0x0                   	// #0
   36f28:	mov	x1, x24
   36f2c:	mov	x0, x24
   36f30:	bl	bd70 <mpfr_neg@plt>
   36f34:	mov	x1, x25
   36f38:	mov	x0, x24
   36f3c:	bl	c4a0 <mpfr_swap@plt>
   36f40:	b	36d54 <mpfr_sincos_fast@@Base+0x184>
   36f44:	ldr	x0, [sp, #280]
   36f48:	bl	c1c0 <mpfr_reallocate_func@plt>
   36f4c:	str	x0, [sp, #280]
   36f50:	b	36e5c <mpfr_sincos_fast@@Base+0x28c>
   36f54:	mov	x1, x23
   36f58:	mov	x0, x23
   36f5c:	mov	w2, #0x0                   	// #0
   36f60:	bl	bd70 <mpfr_neg@plt>
   36f64:	mov	x2, x23
   36f68:	mov	x1, x25
   36f6c:	mov	x0, x24
   36f70:	bl	36728 <mpfr_acos@@Base+0xdd0>
   36f74:	sxtw	x19, w0
   36f78:	mov	x1, x24
   36f7c:	mov	x0, x24
   36f80:	add	x19, x19, #0x1
   36f84:	mov	w2, #0x0                   	// #0
   36f88:	bl	bd70 <mpfr_neg@plt>
   36f8c:	b	36d48 <mpfr_sincos_fast@@Base+0x178>
   36f90:	mov	x2, x22
   36f94:	mov	x1, x25
   36f98:	mov	x0, x24
   36f9c:	bl	36728 <mpfr_acos@@Base+0xdd0>
   36fa0:	sxtw	x19, w0
   36fa4:	b	36d64 <mpfr_sincos_fast@@Base+0x194>
   36fa8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   36fac:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   36fb0:	add	x2, x2, #0x610
   36fb4:	add	x0, x0, #0x4a0
   36fb8:	mov	w1, #0x28f                 	// #655
   36fbc:	bl	cb40 <mpfr_assert_fail@plt>
   36fc0:	cbz	x26, 36fe4 <mpfr_sincos_fast@@Base+0x414>
   36fc4:	ldr	w2, [sp, #124]
   36fc8:	mov	x1, x24
   36fcc:	ldr	w3, [sp, #184]
   36fd0:	mov	x0, x26
   36fd4:	mov	w20, #0x0                   	// #0
   36fd8:	bl	c6a0 <mpfr_set4@plt>
   36fdc:	mov	w19, w0
   36fe0:	b	3705c <mpfr_sincos_fast@@Base+0x48c>
   36fe4:	ldr	x1, [sp, #272]
   36fe8:	mov	w19, #0x0                   	// #0
   36fec:	cbnz	x1, 370e4 <mpfr_sincos_fast@@Base+0x514>
   36ff0:	mov	w0, w19
   36ff4:	ldp	x19, x20, [sp, #16]
   36ff8:	ldp	x21, x22, [sp, #32]
   36ffc:	ldp	x23, x24, [sp, #48]
   37000:	ldp	x25, x26, [sp, #64]
   37004:	ldp	x27, x28, [sp, #80]
   37008:	ldp	x29, x30, [sp], #416
   3700c:	ret
   37010:	lsl	x0, x19, #4
   37014:	str	x0, [sp, #272]
   37018:	bl	ccf0 <mpfr_allocate_func@plt>
   3701c:	str	x0, [sp, #280]
   37020:	b	36c6c <mpfr_sincos_fast@@Base+0x9c>
   37024:	mov	w19, #0x0                   	// #0
   37028:	cbz	x26, 37044 <mpfr_sincos_fast@@Base+0x474>
   3702c:	ldr	w2, [sp, #124]
   37030:	mov	x1, x24
   37034:	ldr	w3, [sp, #184]
   37038:	mov	x0, x26
   3703c:	bl	c6a0 <mpfr_set4@plt>
   37040:	mov	w19, w0
   37044:	ldr	w2, [sp, #124]
   37048:	mov	x1, x25
   3704c:	ldr	w3, [sp, #216]
   37050:	ldr	x0, [sp, #104]
   37054:	bl	c6a0 <mpfr_set4@plt>
   37058:	mov	w20, w0
   3705c:	ldr	x1, [sp, #272]
   37060:	cbz	x1, 3706c <mpfr_sincos_fast@@Base+0x49c>
   37064:	ldr	x0, [sp, #280]
   37068:	bl	cc20 <mpfr_free_func@plt>
   3706c:	cmp	w19, #0x0
   37070:	cbz	w19, 370b0 <mpfr_sincos_fast@@Base+0x4e0>
   37074:	b.le	370d4 <mpfr_sincos_fast@@Base+0x504>
   37078:	mov	w1, #0x9                   	// #9
   3707c:	mov	w0, #0x5                   	// #5
   37080:	mov	w19, #0x1                   	// #1
   37084:	cmp	w20, #0x0
   37088:	csel	w0, w0, w1, gt
   3708c:	csel	w19, w0, w19, ne  // ne = any
   37090:	mov	w0, w19
   37094:	ldp	x19, x20, [sp, #16]
   37098:	ldp	x21, x22, [sp, #32]
   3709c:	ldp	x23, x24, [sp, #48]
   370a0:	ldp	x25, x26, [sp, #64]
   370a4:	ldp	x27, x28, [sp, #80]
   370a8:	ldp	x29, x30, [sp], #416
   370ac:	ret
   370b0:	mov	w1, #0x8                   	// #8
   370b4:	mov	w0, #0x4                   	// #4
   370b8:	b	37084 <mpfr_sincos_fast@@Base+0x4b4>
   370bc:	ldr	x0, [x1]
   370c0:	cmp	x0, #0x1
   370c4:	b.ne	36c24 <mpfr_sincos_fast@@Base+0x54>  // b.any
   370c8:	mov	x19, x0
   370cc:	mov	x27, #0xa                   	// #10
   370d0:	b	36c60 <mpfr_sincos_fast@@Base+0x90>
   370d4:	mov	w1, #0xa                   	// #10
   370d8:	mov	w0, #0x6                   	// #6
   370dc:	mov	w19, #0x2                   	// #2
   370e0:	b	37084 <mpfr_sincos_fast@@Base+0x4b4>
   370e4:	mov	w20, #0x0                   	// #0
   370e8:	b	37064 <mpfr_sincos_fast@@Base+0x494>
   370ec:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   370f0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   370f4:	add	x2, x2, #0x4b8
   370f8:	add	x0, x0, #0x4a0
   370fc:	mov	w1, #0x24e                 	// #590
   37100:	bl	cb40 <mpfr_assert_fail@plt>
   37104:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   37108:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3710c:	add	x2, x2, #0x4b0
   37110:	add	x0, x0, #0x4a0
   37114:	mov	w1, #0x247                 	// #583
   37118:	bl	cb40 <mpfr_assert_fail@plt>
   3711c:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000037120 <mpfr_sin_cos@@Base>:
   37120:	stp	x29, x30, [sp, #-224]!
   37124:	cmp	x0, x1
   37128:	mov	x29, sp
   3712c:	stp	x19, x20, [sp, #16]
   37130:	stp	x21, x22, [sp, #32]
   37134:	str	x0, [sp, #128]
   37138:	str	w3, [sp, #136]
   3713c:	b.eq	37a0c <mpfr_sin_cos@@Base+0x8ec>  // b.none
   37140:	ldr	x21, [x2, #16]
   37144:	stp	x27, x28, [sp, #80]
   37148:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3714c:	mov	x28, x1
   37150:	mov	x22, x2
   37154:	cmp	x21, x0
   37158:	b.le	3786c <mpfr_sin_cos@@Base+0x74c>
   3715c:	mrs	x6, tpidr_el0
   37160:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37164:	ldr	x1, [x0, #2576]
   37168:	add	x0, x0, #0xa10
   3716c:	blr	x1
   37170:	ldr	x2, [x28]
   37174:	stp	x23, x24, [sp, #48]
   37178:	ldr	w0, [x6, x0]
   3717c:	str	w0, [sp, #140]
   37180:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   37184:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   37188:	str	x6, [sp, #112]
   3718c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37190:	ldr	x1, [x0, #2512]
   37194:	add	x0, x0, #0x9d0
   37198:	blr	x1
   3719c:	add	x4, x6, x0
   371a0:	ldr	x1, [sp, #128]
   371a4:	ldr	x0, [x6, x0]
   371a8:	str	x0, [sp, #144]
   371ac:	ldr	x1, [x1]
   371b0:	str	x5, [x4]
   371b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   371b8:	ldr	x7, [x0, #2544]
   371bc:	add	x0, x0, #0x9f0
   371c0:	blr	x7
   371c4:	ldr	x4, [x6, x0]
   371c8:	cmp	x2, x1
   371cc:	str	x3, [x6, x0]
   371d0:	csel	x20, x2, x1, ge  // ge = tcont
   371d4:	str	x4, [sp, #152]
   371d8:	cmp	x20, #0x1
   371dc:	b.eq	378b8 <mpfr_sin_cos@@Base+0x798>  // b.none
   371e0:	b.le	37a30 <mpfr_sin_cos@@Base+0x910>
   371e4:	sub	x0, x20, #0x1
   371e8:	mov	w5, #0x40                  	// #64
   371ec:	clz	x0, x0
   371f0:	sub	w5, w5, w0
   371f4:	add	x5, x20, w5, sxtw
   371f8:	add	x27, x5, #0xd
   371fc:	tbnz	x21, #63, 3764c <mpfr_sin_cos@@Base+0x52c>
   37200:	mov	x0, #0x752f                	// #29999
   37204:	cmp	x20, x0
   37208:	b.gt	3767c <mpfr_sin_cos@@Base+0x55c>
   3720c:	stp	x25, x26, [sp, #64]
   37210:	add	x26, sp, #0xa0
   37214:	mov	x0, x26
   37218:	add	x20, sp, #0xc0
   3721c:	bl	bbd0 <mpfr_init@plt>
   37220:	mov	x24, #0xfffffffffffffeff    	// #-257
   37224:	mov	x0, x20
   37228:	mov	x19, #0x40                  	// #64
   3722c:	mov	x25, #0x8000000000000003    	// #-9223372036854775805
   37230:	movk	x24, #0x7fff, lsl #48
   37234:	bl	bbd0 <mpfr_init@plt>
   37238:	b	37484 <mpfr_sin_cos@@Base+0x364>
   3723c:	add	x1, x21, x27
   37240:	mov	x0, x26
   37244:	sub	x1, x1, #0x1
   37248:	bl	bed0 <mpfr_set_prec@plt>
   3724c:	mov	x1, x27
   37250:	mov	x0, x20
   37254:	bl	bed0 <mpfr_set_prec@plt>
   37258:	mov	w2, #0x0                   	// #0
   3725c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37260:	ldr	x1, [x0, #2624]
   37264:	add	x0, x0, #0xa40
   37268:	blr	x1
   3726c:	ldr	x1, [sp, #112]
   37270:	add	x1, x1, x0
   37274:	mov	x0, x26
   37278:	bl	c380 <mpfr_cache@plt>
   3727c:	mov	x1, x26
   37280:	mov	w3, #0x0                   	// #0
   37284:	mov	x2, #0x1                   	// #1
   37288:	mov	x0, x26
   3728c:	bl	c2c0 <mpfr_mul_2ui@plt>
   37290:	mov	x2, x26
   37294:	mov	x1, x22
   37298:	mov	w3, #0x0                   	// #0
   3729c:	mov	x0, x20
   372a0:	bl	cd10 <mpfr_remainder@plt>
   372a4:	mov	x1, x26
   372a8:	mov	w3, #0x0                   	// #0
   372ac:	mov	x2, #0x1                   	// #1
   372b0:	mov	x0, x26
   372b4:	bl	c8f0 <mpfr_div_2ui@plt>
   372b8:	ldr	w0, [sp, #200]
   372bc:	mov	x2, x20
   372c0:	mov	x1, x26
   372c4:	mov	w3, #0x1                   	// #1
   372c8:	cmp	w0, #0x0
   372cc:	mov	x0, x26
   372d0:	b.le	374c0 <mpfr_sin_cos@@Base+0x3a0>
   372d4:	bl	bb70 <mpfr_sub@plt>
   372d8:	ldr	x0, [sp, #208]
   372dc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   372e0:	cmp	x0, x1
   372e4:	b.eq	37460 <mpfr_sin_cos@@Base+0x340>  // b.none
   372e8:	mov	x1, #0x3                   	// #3
   372ec:	sub	x1, x1, x27
   372f0:	cmp	x0, x1
   372f4:	b.lt	37460 <mpfr_sin_cos@@Base+0x340>  // b.tstop
   372f8:	ldr	x0, [sp, #176]
   372fc:	cmp	x1, x0
   37300:	b.gt	37460 <mpfr_sin_cos@@Base+0x340>
   37304:	ldr	w2, [sp, #200]
   37308:	mov	x1, x27
   3730c:	mov	x0, x26
   37310:	str	w2, [sp, #108]
   37314:	mov	x23, #0x6                   	// #6
   37318:	bl	bed0 <mpfr_set_prec@plt>
   3731c:	mov	w2, #0x1                   	// #1
   37320:	mov	x1, x20
   37324:	mov	x0, x26
   37328:	bl	c430 <mpfr_cos@plt>
   3732c:	ldr	x0, [sp, #176]
   37330:	sub	x2, x27, #0x3
   37334:	add	x2, x2, x0
   37338:	cmp	x0, x25
   3733c:	b.le	37460 <mpfr_sin_cos@@Base+0x340>
   37340:	ldr	w0, [sp, #136]
   37344:	ldr	x1, [sp, #160]
   37348:	cmp	w0, #0x0
   3734c:	ldr	x0, [sp, #184]
   37350:	cset	x4, eq  // eq = none
   37354:	sub	x1, x1, #0x1
   37358:	str	x4, [sp, #120]
   3735c:	ldr	x3, [x28]
   37360:	asr	x1, x1, #6
   37364:	add	x1, x1, #0x1
   37368:	cinc	x3, x3, eq  // eq = none
   3736c:	bl	c370 <mpfr_round_p@plt>
   37370:	cbz	w0, 37460 <mpfr_sin_cos@@Base+0x340>
   37374:	ldr	x1, [sp, #160]
   37378:	mov	x0, x20
   3737c:	bl	bed0 <mpfr_set_prec@plt>
   37380:	mov	x1, x26
   37384:	mov	x0, x20
   37388:	bl	c4a0 <mpfr_swap@plt>
   3738c:	mov	x1, x20
   37390:	mov	w2, #0x2                   	// #2
   37394:	mov	x0, x26
   37398:	bl	c400 <mpfr_sqr@plt>
   3739c:	mov	w3, #0x0                   	// #0
   373a0:	mov	x2, x26
   373a4:	mov	x1, #0x1                   	// #1
   373a8:	mov	x0, x26
   373ac:	bl	ca50 <mpfr_ui_sub@plt>
   373b0:	mov	x1, x26
   373b4:	mov	w2, #0x0                   	// #0
   373b8:	mov	x0, x26
   373bc:	bl	c930 <mpfr_sqrt@plt>
   373c0:	ldr	w1, [sp, #108]
   373c4:	ldr	x0, [sp, #176]
   373c8:	sub	x2, x23, x0
   373cc:	tbz	w1, #31, 373dc <mpfr_sin_cos@@Base+0x2bc>
   373d0:	ldr	w1, [sp, #168]
   373d4:	neg	w1, w1
   373d8:	str	w1, [sp, #168]
   373dc:	ldr	x1, [sp, #128]
   373e0:	add	x23, x0, x27
   373e4:	cmp	x0, x25
   373e8:	sub	x23, x23, x2
   373ec:	ldr	x3, [x1]
   373f0:	b.le	37428 <mpfr_sin_cos@@Base+0x308>
   373f4:	ldr	x0, [sp, #120]
   373f8:	mov	x2, x23
   373fc:	ldr	x1, [sp, #160]
   37400:	add	x3, x0, x3
   37404:	ldr	x0, [sp, #184]
   37408:	sub	x1, x1, #0x1
   3740c:	asr	x1, x1, #6
   37410:	add	x1, x1, #0x1
   37414:	bl	c370 <mpfr_round_p@plt>
   37418:	cbnz	w0, 374e0 <mpfr_sin_cos@@Base+0x3c0>
   3741c:	ldr	x1, [sp, #128]
   37420:	ldr	x0, [sp, #176]
   37424:	ldr	x3, [x1]
   37428:	subs	x1, x3, x23
   3742c:	add	x1, x27, x1
   37430:	csel	x27, x1, x27, gt
   37434:	cmp	x0, #0x1
   37438:	b.ne	37460 <mpfr_sin_cos@@Base+0x340>  // b.any
   3743c:	ldr	x0, [sp, #160]
   37440:	lsl	x1, x27, #1
   37444:	ldr	x3, [sp, #184]
   37448:	sub	x0, x0, #0x1
   3744c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   37450:	asr	x0, x0, #6
   37454:	ldr	x0, [x3, x0, lsl #3]
   37458:	cmp	x0, x2
   3745c:	csel	x27, x1, x27, eq  // eq = none
   37460:	sub	x0, x24, x27
   37464:	cmp	x0, x19
   37468:	b.lt	374c8 <mpfr_sin_cos@@Base+0x3a8>  // b.tstop
   3746c:	add	x27, x27, x19
   37470:	mov	x0, x26
   37474:	mov	x1, x27
   37478:	add	x19, x27, x27, lsr #63
   3747c:	asr	x19, x19, #1
   37480:	bl	bed0 <mpfr_set_prec@plt>
   37484:	cmp	x21, #0x1
   37488:	b.gt	3723c <mpfr_sin_cos@@Base+0x11c>
   3748c:	ldr	w2, [x22, #8]
   37490:	mov	x1, x27
   37494:	mov	x0, x26
   37498:	str	w2, [sp, #108]
   3749c:	mov	x23, #0x3                   	// #3
   374a0:	bl	bed0 <mpfr_set_prec@plt>
   374a4:	mov	w2, #0x1                   	// #1
   374a8:	mov	x1, x22
   374ac:	mov	x0, x26
   374b0:	bl	c430 <mpfr_cos@plt>
   374b4:	mov	x2, x27
   374b8:	ldr	x0, [sp, #176]
   374bc:	b	37338 <mpfr_sin_cos@@Base+0x218>
   374c0:	bl	c1a0 <mpfr_add@plt>
   374c4:	b	372d8 <mpfr_sin_cos@@Base+0x1b8>
   374c8:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   374cc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   374d0:	add	x2, x2, #0x218
   374d4:	add	x0, x0, #0x4a0
   374d8:	mov	w1, #0xd2                  	// #210
   374dc:	bl	cb40 <mpfr_assert_fail@plt>
   374e0:	ldr	w3, [sp, #168]
   374e4:	mov	x1, x26
   374e8:	ldr	x21, [sp, #128]
   374ec:	ldr	w19, [sp, #136]
   374f0:	mov	x0, x21
   374f4:	mov	w2, w19
   374f8:	bl	c6a0 <mpfr_set4@plt>
   374fc:	ldr	w3, [sp, #200]
   37500:	mov	w2, w19
   37504:	mov	x1, x20
   37508:	mov	w19, w0
   3750c:	mov	x0, x28
   37510:	bl	c6a0 <mpfr_set4@plt>
   37514:	mov	w23, w0
   37518:	mov	x0, x26
   3751c:	bl	c070 <mpfr_clear@plt>
   37520:	mov	x0, x20
   37524:	bl	c070 <mpfr_clear@plt>
   37528:	ldr	w3, [sp, #140]
   3752c:	ldr	x1, [x21, #16]
   37530:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37534:	ldr	x2, [x0, #2576]
   37538:	add	x0, x0, #0xa10
   3753c:	blr	x2
   37540:	ldr	x2, [sp, #112]
   37544:	str	w3, [x2, x0]
   37548:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3754c:	ldr	x3, [x0, #2512]
   37550:	add	x0, x0, #0x9d0
   37554:	blr	x3
   37558:	ldr	x3, [sp, #144]
   3755c:	str	x3, [x2, x0]
   37560:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37564:	ldr	x4, [x0, #2544]
   37568:	add	x0, x0, #0x9f0
   3756c:	blr	x4
   37570:	ldr	x4, [sp, #152]
   37574:	str	x4, [x2, x0]
   37578:	cmp	x4, x1
   3757c:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   37580:	b.le	375fc <mpfr_sin_cos@@Base+0x4dc>
   37584:	ldp	x25, x26, [sp, #64]
   37588:	mov	w1, w19
   3758c:	ldr	w2, [sp, #136]
   37590:	ldr	x0, [sp, #128]
   37594:	bl	cb30 <mpfr_check_range@plt>
   37598:	mov	w19, w0
   3759c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   375a0:	ldr	x1, [x0, #2512]
   375a4:	add	x0, x0, #0x9d0
   375a8:	blr	x1
   375ac:	ldr	x1, [sp, #112]
   375b0:	ldr	x0, [x1, x0]
   375b4:	ldr	x1, [x28, #16]
   375b8:	cmp	x1, x0
   375bc:	b.ge	3772c <mpfr_sin_cos@@Base+0x60c>  // b.tcont
   375c0:	ldr	w2, [sp, #136]
   375c4:	mov	w1, w23
   375c8:	mov	x0, x28
   375cc:	bl	cb30 <mpfr_check_range@plt>
   375d0:	mov	w23, w0
   375d4:	cbnz	w19, 379b0 <mpfr_sin_cos@@Base+0x890>
   375d8:	cbnz	w23, 37a04 <mpfr_sin_cos@@Base+0x8e4>
   375dc:	ldp	x23, x24, [sp, #48]
   375e0:	mov	w19, #0x0                   	// #0
   375e4:	mov	w0, w19
   375e8:	ldp	x19, x20, [sp, #16]
   375ec:	ldp	x21, x22, [sp, #32]
   375f0:	ldp	x27, x28, [sp, #80]
   375f4:	ldp	x29, x30, [sp], #224
   375f8:	ret
   375fc:	cbnz	w19, 376f8 <mpfr_sin_cos@@Base+0x5d8>
   37600:	ldr	x1, [x28, #16]
   37604:	cmp	x3, x1
   37608:	b.gt	377e0 <mpfr_sin_cos@@Base+0x6c0>
   3760c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37610:	ldr	x2, [x0, #2544]
   37614:	add	x0, x0, #0x9f0
   37618:	blr	x2
   3761c:	ldr	x2, [sp, #112]
   37620:	ldp	x25, x26, [sp, #64]
   37624:	ldr	x0, [x2, x0]
   37628:	cmp	x1, x0
   3762c:	b.gt	375c0 <mpfr_sin_cos@@Base+0x4a0>
   37630:	cbnz	w23, 37750 <mpfr_sin_cos@@Base+0x630>
   37634:	cmp	w19, #0x0
   37638:	cbz	w19, 375dc <mpfr_sin_cos@@Base+0x4bc>
   3763c:	cset	w19, le
   37640:	add	w19, w19, #0x1
   37644:	b	377a0 <mpfr_sin_cos@@Base+0x680>
   37648:	mov	x27, #0xe                   	// #14
   3764c:	ldr	x0, [sp, #128]
   37650:	neg	x24, x21, lsl #1
   37654:	cmp	x0, x22
   37658:	b.eq	37800 <mpfr_sin_cos@@Base+0x6e0>  // b.none
   3765c:	add	x1, x1, #0x1
   37660:	add	x2, x24, #0x2
   37664:	cmp	x1, x2
   37668:	b.cc	378c8 <mpfr_sin_cos@@Base+0x7a8>  // b.lo, b.ul, b.last
   3766c:	add	x27, x27, x24
   37670:	mov	x0, #0x752f                	// #29999
   37674:	cmp	x20, x0
   37678:	b.le	3720c <mpfr_sin_cos@@Base+0xec>
   3767c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37680:	ldr	x1, [x0, #2576]
   37684:	add	x0, x0, #0xa10
   37688:	blr	x1
   3768c:	mov	x2, x22
   37690:	ldp	w3, w1, [sp, #136]
   37694:	ldr	x4, [sp, #112]
   37698:	ldr	x5, [sp, #152]
   3769c:	str	w1, [x4, x0]
   376a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   376a4:	ldr	x1, [x0, #2512]
   376a8:	add	x0, x0, #0x9d0
   376ac:	blr	x1
   376b0:	ldr	x1, [sp, #144]
   376b4:	str	x1, [x4, x0]
   376b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   376bc:	ldr	x1, [x0, #2544]
   376c0:	add	x0, x0, #0x9f0
   376c4:	blr	x1
   376c8:	str	x5, [x4, x0]
   376cc:	ldr	x0, [sp, #128]
   376d0:	mov	x1, x28
   376d4:	bl	c020 <mpfr_sincos_fast@plt>
   376d8:	mov	w19, w0
   376dc:	ldp	x23, x24, [sp, #48]
   376e0:	mov	w0, w19
   376e4:	ldp	x19, x20, [sp, #16]
   376e8:	ldp	x21, x22, [sp, #32]
   376ec:	ldp	x27, x28, [sp, #80]
   376f0:	ldp	x29, x30, [sp], #224
   376f4:	ret
   376f8:	ldp	x25, x26, [sp, #64]
   376fc:	ldr	w0, [sp, #140]
   37700:	ldr	x1, [x28, #16]
   37704:	orr	w2, w0, #0x8
   37708:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3770c:	ldr	x3, [x0, #2576]
   37710:	add	x0, x0, #0xa10
   37714:	blr	x3
   37718:	ldr	x3, [sp, #112]
   3771c:	str	w2, [x3, x0]
   37720:	ldr	x0, [sp, #144]
   37724:	cmp	x0, x1
   37728:	b.gt	3799c <mpfr_sin_cos@@Base+0x87c>
   3772c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37730:	ldr	x2, [x0, #2544]
   37734:	add	x0, x0, #0x9f0
   37738:	blr	x2
   3773c:	ldr	x2, [sp, #112]
   37740:	ldr	x0, [x2, x0]
   37744:	cmp	x1, x0
   37748:	b.gt	375c0 <mpfr_sin_cos@@Base+0x4a0>
   3774c:	cbz	w23, 37634 <mpfr_sin_cos@@Base+0x514>
   37750:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37754:	ldr	x1, [x0, #2576]
   37758:	add	x0, x0, #0xa10
   3775c:	blr	x1
   37760:	ldr	x1, [sp, #112]
   37764:	cmp	w19, #0x0
   37768:	add	x0, x1, x0
   3776c:	ldr	w1, [x0]
   37770:	orr	w1, w1, #0x8
   37774:	str	w1, [x0]
   37778:	cbz	w19, 3778c <mpfr_sin_cos@@Base+0x66c>
   3777c:	mov	w19, #0x1                   	// #1
   37780:	b.gt	3778c <mpfr_sin_cos@@Base+0x66c>
   37784:	mov	w19, #0x2                   	// #2
   37788:	cbz	w23, 377a0 <mpfr_sin_cos@@Base+0x680>
   3778c:	cmp	w23, #0x0
   37790:	mov	w0, #0x4                   	// #4
   37794:	mov	w1, #0x8                   	// #8
   37798:	csel	w0, w0, w1, gt
   3779c:	orr	w19, w19, w0
   377a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   377a4:	ldr	x1, [x0, #2576]
   377a8:	add	x0, x0, #0xa10
   377ac:	blr	x1
   377b0:	ldr	x1, [sp, #112]
   377b4:	ldp	x23, x24, [sp, #48]
   377b8:	add	x0, x1, x0
   377bc:	ldp	x21, x22, [sp, #32]
   377c0:	ldr	w1, [x0]
   377c4:	ldp	x27, x28, [sp, #80]
   377c8:	orr	w1, w1, #0x8
   377cc:	str	w1, [x0]
   377d0:	mov	w0, w19
   377d4:	ldp	x19, x20, [sp, #16]
   377d8:	ldp	x29, x30, [sp], #224
   377dc:	ret
   377e0:	ldr	w2, [sp, #136]
   377e4:	mov	w1, w23
   377e8:	mov	x0, x28
   377ec:	bl	cb30 <mpfr_check_range@plt>
   377f0:	mov	w23, w0
   377f4:	ldp	x25, x26, [sp, #64]
   377f8:	cbz	w23, 375dc <mpfr_sin_cos@@Base+0x4bc>
   377fc:	b	37a04 <mpfr_sin_cos@@Base+0x8e4>
   37800:	add	x0, x2, #0x1
   37804:	add	x2, x24, #0x1
   37808:	cmp	x0, x2
   3780c:	b.cs	3766c <mpfr_sin_cos@@Base+0x54c>  // b.hs, b.nlast
   37810:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   37814:	ldr	w4, [sp, #136]
   37818:	mov	x0, x28
   3781c:	mov	w3, #0x0                   	// #0
   37820:	ldr	x1, [x1, #3928]
   37824:	bl	c540 <mpfr_round_near_x@plt>
   37828:	mov	w23, w0
   3782c:	cbz	w0, 3766c <mpfr_sin_cos@@Base+0x54c>
   37830:	ldr	x0, [sp, #128]
   37834:	add	x2, x24, #0x2
   37838:	ldr	x0, [x0]
   3783c:	add	x0, x0, #0x1
   37840:	cmp	x0, x2
   37844:	b.cs	3766c <mpfr_sin_cos@@Base+0x54c>  // b.hs, b.nlast
   37848:	ldr	w4, [sp, #136]
   3784c:	mov	w3, #0x0                   	// #0
   37850:	ldr	x0, [sp, #128]
   37854:	mov	x1, x0
   37858:	bl	c540 <mpfr_round_near_x@plt>
   3785c:	mov	w19, w0
   37860:	cbnz	w0, 37914 <mpfr_sin_cos@@Base+0x7f4>
   37864:	add	x27, x27, x24
   37868:	b	37670 <mpfr_sin_cos@@Base+0x550>
   3786c:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   37870:	add	x21, x21, x0
   37874:	cmp	x21, #0x1
   37878:	b.ls	379c4 <mpfr_sin_cos@@Base+0x8a4>  // b.plast
   3787c:	ldr	w0, [x2, #8]
   37880:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   37884:	ldr	x2, [sp, #128]
   37888:	str	w0, [x2, #8]
   3788c:	mov	x0, x28
   37890:	str	x1, [x2, #16]
   37894:	mov	x2, #0x0                   	// #0
   37898:	mov	x1, #0x1                   	// #1
   3789c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   378a0:	cmp	w0, #0x0
   378a4:	cbz	w0, 375e0 <mpfr_sin_cos@@Base+0x4c0>
   378a8:	mov	w19, #0x4                   	// #4
   378ac:	mov	w0, #0x8                   	// #8
   378b0:	csel	w19, w19, w0, gt
   378b4:	b	376e0 <mpfr_sin_cos@@Base+0x5c0>
   378b8:	tbnz	x21, #63, 37648 <mpfr_sin_cos@@Base+0x528>
   378bc:	mov	x27, #0xe                   	// #14
   378c0:	stp	x25, x26, [sp, #64]
   378c4:	b	37210 <mpfr_sin_cos@@Base+0xf0>
   378c8:	ldr	w4, [sp, #136]
   378cc:	mov	x1, x22
   378d0:	mov	w3, #0x0                   	// #0
   378d4:	bl	c540 <mpfr_round_near_x@plt>
   378d8:	mov	w19, w0
   378dc:	cbz	w0, 3766c <mpfr_sin_cos@@Base+0x54c>
   378e0:	ldr	x0, [x28]
   378e4:	add	x2, x24, #0x1
   378e8:	add	x0, x0, #0x1
   378ec:	cmp	x0, x2
   378f0:	b.cs	3766c <mpfr_sin_cos@@Base+0x54c>  // b.hs, b.nlast
   378f4:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   378f8:	ldr	w4, [sp, #136]
   378fc:	mov	x0, x28
   37900:	mov	w3, #0x0                   	// #0
   37904:	ldr	x1, [x1, #3928]
   37908:	bl	c540 <mpfr_round_near_x@plt>
   3790c:	mov	w23, w0
   37910:	cbz	w0, 3766c <mpfr_sin_cos@@Base+0x54c>
   37914:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37918:	ldr	x1, [x0, #2576]
   3791c:	add	x0, x0, #0xa10
   37920:	blr	x1
   37924:	ldr	x1, [sp, #112]
   37928:	ldr	x2, [sp, #112]
   3792c:	ldr	w0, [x1, x0]
   37930:	ldr	w1, [sp, #140]
   37934:	orr	w0, w1, w0
   37938:	str	w0, [sp, #140]
   3793c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37940:	ldr	x1, [x0, #2576]
   37944:	add	x0, x0, #0xa10
   37948:	blr	x1
   3794c:	ldr	w1, [sp, #140]
   37950:	str	w1, [x2, x0]
   37954:	ldr	x0, [sp, #128]
   37958:	ldr	x1, [x0, #16]
   3795c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37960:	ldr	x3, [x0, #2512]
   37964:	add	x0, x0, #0x9d0
   37968:	blr	x3
   3796c:	ldr	x3, [sp, #144]
   37970:	str	x3, [x2, x0]
   37974:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37978:	ldr	x4, [x0, #2544]
   3797c:	add	x0, x0, #0x9f0
   37980:	blr	x4
   37984:	ldr	x4, [sp, #152]
   37988:	str	x4, [x2, x0]
   3798c:	cmp	x3, x1
   37990:	ccmp	x4, x1, #0x1, le
   37994:	b.lt	37588 <mpfr_sin_cos@@Base+0x468>  // b.tstop
   37998:	b	376fc <mpfr_sin_cos@@Base+0x5dc>
   3799c:	ldr	w2, [sp, #136]
   379a0:	mov	w1, w23
   379a4:	mov	x0, x28
   379a8:	bl	cb30 <mpfr_check_range@plt>
   379ac:	mov	w23, w0
   379b0:	cmp	w19, #0x0
   379b4:	cset	w19, le
   379b8:	add	w19, w19, #0x1
   379bc:	cbz	w23, 377a0 <mpfr_sin_cos@@Base+0x680>
   379c0:	b	3778c <mpfr_sin_cos@@Base+0x66c>
   379c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   379c8:	ldr	x2, [x0, #2576]
   379cc:	add	x0, x0, #0xa10
   379d0:	blr	x2
   379d4:	mrs	x1, tpidr_el0
   379d8:	ldr	x2, [sp, #128]
   379dc:	add	x0, x1, x0
   379e0:	mov	x1, #0x2                   	// #2
   379e4:	mov	w19, #0x0                   	// #0
   379e8:	movk	x1, #0x8000, lsl #48
   379ec:	str	x1, [x2, #16]
   379f0:	str	x1, [x28, #16]
   379f4:	ldr	w1, [x0]
   379f8:	orr	w1, w1, #0x4
   379fc:	str	w1, [x0]
   37a00:	b	376e0 <mpfr_sin_cos@@Base+0x5c0>
   37a04:	mov	w19, #0x0                   	// #0
   37a08:	b	3778c <mpfr_sin_cos@@Base+0x66c>
   37a0c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   37a10:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   37a14:	add	x2, x2, #0x4c0
   37a18:	add	x0, x0, #0x4a0
   37a1c:	mov	w1, #0x28                  	// #40
   37a20:	stp	x23, x24, [sp, #48]
   37a24:	stp	x25, x26, [sp, #64]
   37a28:	stp	x27, x28, [sp, #80]
   37a2c:	bl	cb40 <mpfr_assert_fail@plt>
   37a30:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   37a34:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   37a38:	add	x2, x2, #0xf70
   37a3c:	add	x0, x0, #0x4a0
   37a40:	mov	w1, #0x47                  	// #71
   37a44:	stp	x25, x26, [sp, #64]
   37a48:	bl	cb40 <mpfr_assert_fail@plt>
   37a4c:	nop

0000000000037a50 <mpfr_set_nan@@Base>:
   37a50:	mrs	x1, tpidr_el0
   37a54:	stp	x29, x30, [sp, #-16]!
   37a58:	mov	x2, x0
   37a5c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37a60:	ldr	x3, [x0, #2576]
   37a64:	add	x0, x0, #0xa10
   37a68:	blr	x3
   37a6c:	add	x0, x1, x0
   37a70:	mov	x1, #0x2                   	// #2
   37a74:	mov	x29, sp
   37a78:	movk	x1, #0x8000, lsl #48
   37a7c:	str	x1, [x2, #16]
   37a80:	ldr	w1, [x0]
   37a84:	orr	w1, w1, #0x4
   37a88:	str	w1, [x0]
   37a8c:	ldp	x29, x30, [sp], #16
   37a90:	ret
   37a94:	nop

0000000000037a98 <mpfr_set_inf@@Base>:
   37a98:	cmp	w1, #0x0
   37a9c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   37aa0:	mov	w1, #0xffffffff            	// #-1
   37aa4:	cneg	w1, w1, ge  // ge = tcont
   37aa8:	str	w1, [x0, #8]
   37aac:	str	x2, [x0, #16]
   37ab0:	ret
   37ab4:	nop

0000000000037ab8 <mpfr_set_zero@@Base>:
   37ab8:	cmp	w1, #0x0
   37abc:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   37ac0:	mov	w1, #0xffffffff            	// #-1
   37ac4:	csinc	w1, w1, wzr, lt  // lt = tstop
   37ac8:	str	w1, [x0, #8]
   37acc:	str	x2, [x0, #16]
   37ad0:	ret
   37ad4:	nop

0000000000037ad8 <mpfr_powerof2_raw2@@Base>:
   37ad8:	sub	x1, x1, #0x1
   37adc:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   37ae0:	ldr	x3, [x0, x1, lsl #3]
   37ae4:	cmp	x3, x2
   37ae8:	b.eq	37afc <mpfr_powerof2_raw2@@Base+0x24>  // b.none
   37aec:	mov	w0, #0x0                   	// #0
   37af0:	ret
   37af4:	ldr	x2, [x0, x1, lsl #3]
   37af8:	cbnz	x2, 37aec <mpfr_powerof2_raw2@@Base+0x14>
   37afc:	cmp	x1, #0x0
   37b00:	sub	x1, x1, #0x1
   37b04:	b.gt	37af4 <mpfr_powerof2_raw2@@Base+0x1c>
   37b08:	mov	w0, #0x1                   	// #1
   37b0c:	ret

0000000000037b10 <mpfr_powerof2_raw@@Base>:
   37b10:	ldr	x1, [x0]
   37b14:	ldr	x0, [x0, #24]
   37b18:	sub	x1, x1, #0x1
   37b1c:	asr	x1, x1, #6
   37b20:	add	x1, x1, #0x1
   37b24:	b	c7d0 <mpfr_powerof2_raw2@plt>
   37b28:	stp	x29, x30, [sp, #-320]!
   37b2c:	mov	x29, sp
   37b30:	stp	x25, x26, [sp, #64]
   37b34:	mrs	x25, tpidr_el0
   37b38:	stp	x19, x20, [sp, #16]
   37b3c:	mov	x20, x3
   37b40:	mov	w3, #0x3                   	// #3
   37b44:	stp	x23, x24, [sp, #48]
   37b48:	mov	x23, x0
   37b4c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37b50:	ldr	x6, [x0, #2576]
   37b54:	add	x0, x0, #0xa10
   37b58:	blr	x6
   37b5c:	add	x19, x25, x0
   37b60:	stp	x21, x22, [sp, #32]
   37b64:	mov	x24, x2
   37b68:	mov	x22, x4
   37b6c:	mov	x2, x1
   37b70:	mov	w21, w5
   37b74:	add	x1, sp, #0x6c
   37b78:	str	wzr, [x25, x0]
   37b7c:	mov	x0, x20
   37b80:	bl	c0a0 <mpfr_lgamma@plt>
   37b84:	ldr	w1, [x19]
   37b88:	cbz	w0, 37d94 <mpfr_powerof2_raw@@Base+0x284>
   37b8c:	ldr	w3, [x20, #8]
   37b90:	tbnz	w1, #1, 37d68 <mpfr_powerof2_raw@@Base+0x258>
   37b94:	mov	x1, x20
   37b98:	mov	w2, #0x0                   	// #0
   37b9c:	mov	x0, x22
   37ba0:	stp	x27, x28, [sp, #80]
   37ba4:	bl	c6a0 <mpfr_set4@plt>
   37ba8:	mov	x0, x22
   37bac:	bl	c120 <mpfr_nextabove@plt>
   37bb0:	ldr	w0, [sp, #108]
   37bb4:	tbnz	w0, #31, 37cc8 <mpfr_powerof2_raw@@Base+0x1b8>
   37bb8:	ldr	x26, [x23]
   37bbc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   37bc0:	cmp	x26, x0
   37bc4:	b.ge	37d64 <mpfr_powerof2_raw@@Base+0x254>  // b.tcont
   37bc8:	sub	x19, x26, #0x1
   37bcc:	asr	x19, x19, #6
   37bd0:	add	x19, x19, #0x1
   37bd4:	lsl	x0, x19, #1
   37bd8:	cmp	x0, #0x10
   37bdc:	b.gt	37ce0 <mpfr_powerof2_raw@@Base+0x1d0>
   37be0:	add	x0, sp, #0xc0
   37be4:	stp	xzr, x0, [sp, #176]
   37be8:	mov	x3, x0
   37bec:	mov	w4, #0x1                   	// #1
   37bf0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37bf4:	ldr	x1, [x0, #2576]
   37bf8:	add	x0, x0, #0xa10
   37bfc:	blr	x1
   37c00:	add	x28, sp, #0x70
   37c04:	add	x19, x3, x19, lsl #3
   37c08:	add	x27, x25, x0
   37c0c:	mov	x1, x20
   37c10:	mov	w2, w21
   37c14:	str	wzr, [x25, x0]
   37c18:	mov	x0, x28
   37c1c:	str	x26, [sp, #112]
   37c20:	str	w4, [sp, #120]
   37c24:	add	x20, sp, #0x90
   37c28:	stp	x3, x26, [sp, #136]
   37c2c:	str	w4, [sp, #152]
   37c30:	str	x19, [sp, #168]
   37c34:	bl	c750 <mpfr_exp@plt>
   37c38:	mov	w2, w21
   37c3c:	mov	x1, x22
   37c40:	ldr	w21, [x27]
   37c44:	mov	w19, w0
   37c48:	mov	x0, x20
   37c4c:	str	wzr, [x27]
   37c50:	bl	c750 <mpfr_exp@plt>
   37c54:	ldr	w22, [x27]
   37c58:	mov	x1, x20
   37c5c:	mov	w20, w0
   37c60:	mov	x0, x28
   37c64:	bl	ca60 <mpfr_equal_p@plt>
   37c68:	cmp	w0, #0x0
   37c6c:	ccmp	w21, w22, #0x0, ne  // ne = any
   37c70:	b.eq	37cf8 <mpfr_powerof2_raw@@Base+0x1e8>  // b.none
   37c74:	mov	w19, #0x0                   	// #0
   37c78:	ldr	x1, [sp, #176]
   37c7c:	cbnz	x1, 37ca0 <mpfr_powerof2_raw@@Base+0x190>
   37c80:	ldp	x27, x28, [sp, #80]
   37c84:	mov	w0, w19
   37c88:	ldp	x19, x20, [sp, #16]
   37c8c:	ldp	x21, x22, [sp, #32]
   37c90:	ldp	x23, x24, [sp, #48]
   37c94:	ldp	x25, x26, [sp, #64]
   37c98:	ldp	x29, x30, [sp], #320
   37c9c:	ret
   37ca0:	ldr	x0, [sp, #184]
   37ca4:	bl	cc20 <mpfr_free_func@plt>
   37ca8:	mov	w0, w19
   37cac:	ldp	x19, x20, [sp, #16]
   37cb0:	ldp	x21, x22, [sp, #32]
   37cb4:	ldp	x23, x24, [sp, #48]
   37cb8:	ldp	x25, x26, [sp, #64]
   37cbc:	ldp	x27, x28, [sp, #80]
   37cc0:	ldp	x29, x30, [sp], #320
   37cc4:	ret
   37cc8:	cmp	w21, #0x2
   37ccc:	b.eq	37d34 <mpfr_powerof2_raw@@Base+0x224>  // b.none
   37cd0:	cmp	w21, #0x3
   37cd4:	mov	w0, #0x2                   	// #2
   37cd8:	csel	w21, w21, w0, ne  // ne = any
   37cdc:	b	37bb8 <mpfr_powerof2_raw@@Base+0xa8>
   37ce0:	lsl	x0, x19, #4
   37ce4:	str	x0, [sp, #176]
   37ce8:	bl	ccf0 <mpfr_allocate_func@plt>
   37cec:	mov	x3, x0
   37cf0:	str	x0, [sp, #184]
   37cf4:	b	37bec <mpfr_powerof2_raw@@Base+0xdc>
   37cf8:	cmp	w19, #0x0
   37cfc:	ccmp	w20, #0x0, #0x4, gt
   37d00:	b.le	37d3c <mpfr_powerof2_raw@@Base+0x22c>
   37d04:	ldr	w3, [sp, #108]
   37d08:	mov	x1, x28
   37d0c:	mov	x0, x23
   37d10:	mov	w2, #0x0                   	// #0
   37d14:	bl	c6a0 <mpfr_set4@plt>
   37d18:	ldr	w1, [sp, #108]
   37d1c:	ldr	w0, [x24]
   37d20:	cmp	w1, #0x0
   37d24:	orr	w21, w0, w21
   37d28:	cneg	w19, w19, lt  // lt = tstop
   37d2c:	str	w21, [x24]
   37d30:	b	37c78 <mpfr_powerof2_raw@@Base+0x168>
   37d34:	mov	w21, #0x3                   	// #3
   37d38:	b	37bb8 <mpfr_powerof2_raw@@Base+0xa8>
   37d3c:	cmp	w19, #0x0
   37d40:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
   37d44:	b.lt	37d04 <mpfr_powerof2_raw@@Base+0x1f4>  // b.tstop
   37d48:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   37d4c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   37d50:	add	x2, x2, #0x4e8
   37d54:	add	x0, x0, #0x4d8
   37d58:	mov	w1, #0x69                  	// #105
   37d5c:	bl	cb40 <mpfr_assert_fail@plt>
   37d60:	b	37d04 <mpfr_powerof2_raw@@Base+0x1f4>
   37d64:	bl	c8e0 <mpfr_abort_prec_max@plt>
   37d68:	ldr	w0, [x24]
   37d6c:	cmp	w3, #0x0
   37d70:	ldr	w2, [sp, #108]
   37d74:	b.le	37db0 <mpfr_powerof2_raw@@Base+0x2a0>
   37d78:	orr	w0, w0, #0x2
   37d7c:	str	w0, [x24]
   37d80:	mov	w1, w21
   37d84:	mov	x0, x23
   37d88:	bl	bf40 <mpfr_overflow@plt>
   37d8c:	mov	w19, w0
   37d90:	b	37c84 <mpfr_powerof2_raw@@Base+0x174>
   37d94:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   37d98:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   37d9c:	add	x2, x2, #0x4c8
   37da0:	add	x0, x0, #0x4d8
   37da4:	mov	w1, #0x4b                  	// #75
   37da8:	stp	x27, x28, [sp, #80]
   37dac:	bl	cb40 <mpfr_assert_fail@plt>
   37db0:	cmp	w21, #0x0
   37db4:	orr	w0, w0, #0x1
   37db8:	str	w0, [x24]
   37dbc:	csinc	w1, w21, wzr, ne  // ne = any
   37dc0:	mov	x0, x23
   37dc4:	bl	c3c0 <mpfr_underflow@plt>
   37dc8:	mov	w19, w0
   37dcc:	b	37c84 <mpfr_powerof2_raw@@Base+0x174>
   37dd0:	stp	x29, x30, [sp, #-480]!
   37dd4:	mov	x29, sp
   37dd8:	stp	x19, x20, [sp, #16]
   37ddc:	mrs	x20, tpidr_el0
   37de0:	stp	x21, x22, [sp, #32]
   37de4:	mov	x21, x0
   37de8:	str	x1, [sp, #112]
   37dec:	str	x0, [sp, #216]
   37df0:	mov	x0, x1
   37df4:	mov	x1, #0x1                   	// #1
   37df8:	stp	x23, x24, [sp, #48]
   37dfc:	add	x24, sp, #0x160
   37e00:	stp	x25, x26, [sp, #64]
   37e04:	add	x26, sp, #0x180
   37e08:	stp	x27, x28, [sp, #80]
   37e0c:	add	x28, sp, #0x140
   37e10:	add	x27, sp, #0x1a0
   37e14:	str	x20, [sp, #136]
   37e18:	str	w2, [sp, #204]
   37e1c:	mov	x2, #0x0                   	// #0
   37e20:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   37e24:	mov	w19, w0
   37e28:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37e2c:	ldr	x1, [x0, #2576]
   37e30:	add	x0, x0, #0xa10
   37e34:	blr	x1
   37e38:	ldr	w7, [x20, x0]
   37e3c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37e40:	ldr	x1, [x0, #2512]
   37e44:	add	x0, x0, #0x9d0
   37e48:	blr	x1
   37e4c:	add	x2, x20, x0
   37e50:	ldr	x6, [x20, x0]
   37e54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   37e58:	ldr	x1, [x0, #2544]
   37e5c:	add	x0, x0, #0x9f0
   37e60:	blr	x1
   37e64:	ldr	x5, [x20, x0]
   37e68:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   37e6c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   37e70:	mov	x1, #0x1                   	// #1
   37e74:	ldr	x21, [x21]
   37e78:	str	x4, [x20, x0]
   37e7c:	mov	x0, x28
   37e80:	add	x20, sp, #0x1c0
   37e84:	str	x3, [x2]
   37e88:	str	x21, [sp, #192]
   37e8c:	str	x20, [sp, #232]
   37e90:	str	w7, [sp, #296]
   37e94:	stp	x6, x5, [sp, #304]
   37e98:	bl	ca80 <mpfr_init2@plt>
   37e9c:	mov	x0, x24
   37ea0:	mov	x1, #0x1                   	// #1
   37ea4:	bl	ca80 <mpfr_init2@plt>
   37ea8:	mov	x0, x26
   37eac:	mov	x1, #0x1                   	// #1
   37eb0:	bl	ca80 <mpfr_init2@plt>
   37eb4:	mov	x0, x27
   37eb8:	mov	x1, #0x1                   	// #1
   37ebc:	bl	ca80 <mpfr_init2@plt>
   37ec0:	mov	x0, x20
   37ec4:	mov	x1, #0x1                   	// #1
   37ec8:	bl	ca80 <mpfr_init2@plt>
   37ecc:	tbnz	w19, #31, 38914 <mpfr_powerof2_raw@@Base+0xe04>
   37ed0:	ldr	x0, [sp, #192]
   37ed4:	cmp	x0, #0x1
   37ed8:	b.eq	38c94 <mpfr_powerof2_raw@@Base+0x1184>  // b.none
   37edc:	b.le	38d6c <mpfr_powerof2_raw@@Base+0x125c>
   37ee0:	sub	x1, x0, #0x1
   37ee4:	mov	x3, x0
   37ee8:	clz	x1, x1
   37eec:	mov	w0, #0x40                  	// #64
   37ef0:	sub	w0, w0, w1
   37ef4:	mov	w2, #0x4d                  	// #77
   37ef8:	add	x0, x3, w0, sxtw
   37efc:	sub	x1, x0, #0x1
   37f00:	clz	x1, x1
   37f04:	sub	w1, w2, w1
   37f08:	add	x0, x0, w1, sxtw
   37f0c:	str	x0, [sp, #128]
   37f10:	stp	x27, x28, [sp, #152]
   37f14:	mov	x0, #0x40                  	// #64
   37f18:	mov	x1, #0x35                  	// #53
   37f1c:	str	x0, [sp, #224]
   37f20:	ldr	x0, [sp, #160]
   37f24:	ldr	x28, [sp, #232]
   37f28:	bl	bed0 <mpfr_set_prec@plt>
   37f2c:	ldr	x0, [sp, #128]
   37f30:	cmp	x0, #0x64
   37f34:	b.le	388fc <mpfr_powerof2_raw@@Base+0xdec>
   37f38:	cmp	x0, #0x1f4
   37f3c:	b.le	37f84 <mpfr_powerof2_raw@@Base+0x474>
   37f40:	cmp	x0, #0x3e8
   37f44:	b.le	38c1c <mpfr_powerof2_raw@@Base+0x110c>
   37f48:	cmp	x0, #0x7d0
   37f4c:	b.le	38c34 <mpfr_powerof2_raw@@Base+0x1124>
   37f50:	mov	x1, x0
   37f54:	mov	x0, #0x1388                	// #5000
   37f58:	cmp	x1, x0
   37f5c:	b.le	38c04 <mpfr_powerof2_raw@@Base+0x10f4>
   37f60:	mov	x0, #0x2710                	// #10000
   37f64:	mov	w3, #0x0                   	// #0
   37f68:	cmp	x1, x0
   37f6c:	b.gt	38c80 <mpfr_powerof2_raw@@Base+0x1170>
   37f70:	ldr	x0, [sp, #160]
   37f74:	mov	x2, #0xfffffffffffffff6    	// #-10
   37f78:	mov	x1, #0xd9a                 	// #3482
   37f7c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   37f80:	b	37f98 <mpfr_powerof2_raw@@Base+0x488>
   37f84:	ldr	x0, [sp, #160]
   37f88:	mov	w3, #0x0                   	// #0
   37f8c:	mov	x2, #0xfffffffffffffff6    	// #-10
   37f90:	mov	x1, #0x333                 	// #819
   37f94:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   37f98:	ldr	x19, [sp, #160]
   37f9c:	mov	w3, #0x2                   	// #2
   37fa0:	mov	x2, #0xfffffffffffffffc    	// #-4
   37fa4:	mov	x1, #0x4                   	// #4
   37fa8:	mov	x0, x19
   37fac:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   37fb0:	ldr	x2, [sp, #128]
   37fb4:	mov	x0, #0x3                   	// #3
   37fb8:	mov	x1, x19
   37fbc:	mov	w3, #0x2                   	// #2
   37fc0:	str	x0, [sp, #144]
   37fc4:	mov	x0, x19
   37fc8:	bl	ba50 <mpfr_mul_ui@plt>
   37fcc:	ldr	x0, [sp, #112]
   37fd0:	mov	x1, x19
   37fd4:	mov	w2, #0x1                   	// #1
   37fd8:	bl	c9a0 <mpfr_cmp3@plt>
   37fdc:	tbnz	w0, #31, 38bcc <mpfr_powerof2_raw@@Base+0x10bc>
   37fe0:	ldr	x20, [sp, #128]
   37fe4:	ldr	x19, [sp, #160]
   37fe8:	mov	x1, x20
   37fec:	mov	x0, x19
   37ff0:	bl	bed0 <mpfr_set_prec@plt>
   37ff4:	mov	x1, x20
   37ff8:	mov	x0, x24
   37ffc:	bl	bed0 <mpfr_set_prec@plt>
   38000:	mov	x1, x20
   38004:	mov	x0, x26
   38008:	bl	bed0 <mpfr_set_prec@plt>
   3800c:	ldr	x21, [sp, #152]
   38010:	mov	x1, x20
   38014:	mov	x0, x21
   38018:	bl	bed0 <mpfr_set_prec@plt>
   3801c:	mov	x1, x20
   38020:	mov	x0, x28
   38024:	bl	bed0 <mpfr_set_prec@plt>
   38028:	ldr	x1, [sp, #112]
   3802c:	mov	w3, #0x0                   	// #0
   38030:	ldr	x2, [sp, #144]
   38034:	mov	x0, x28
   38038:	bl	c260 <mpfr_add_ui@plt>
   3803c:	mov	x1, x28
   38040:	mov	w2, #0x0                   	// #0
   38044:	mov	x0, x19
   38048:	bl	c090 <mpfr_log@plt>
   3804c:	mov	x1, x28
   38050:	mov	w3, #0x0                   	// #0
   38054:	mov	x2, #0x1                   	// #1
   38058:	mov	x0, x24
   3805c:	bl	c2c0 <mpfr_mul_2ui@plt>
   38060:	mov	x1, x24
   38064:	mov	w3, #0x0                   	// #0
   38068:	mov	x2, #0x1                   	// #1
   3806c:	mov	x0, x24
   38070:	bl	c530 <mpfr_sub_ui@plt>
   38074:	mov	x2, x24
   38078:	mov	x1, x19
   3807c:	mov	w3, #0x0                   	// #0
   38080:	mov	x0, x19
   38084:	bl	bd50 <mpfr_mul@plt>
   38088:	mov	x1, x19
   3808c:	mov	w3, #0x0                   	// #0
   38090:	mov	x2, #0x1                   	// #1
   38094:	mov	x0, x19
   38098:	bl	c8f0 <mpfr_div_2ui@plt>
   3809c:	mov	x2, x28
   380a0:	mov	x1, x19
   380a4:	mov	w3, #0x0                   	// #0
   380a8:	mov	x0, x19
   380ac:	bl	bb70 <mpfr_sub@plt>
   380b0:	mov	x2, x28
   380b4:	mov	w3, #0x0                   	// #0
   380b8:	mov	x1, #0x1                   	// #1
   380bc:	mov	x0, x26
   380c0:	bl	c2f0 <mpfr_ui_div@plt>
   380c4:	mov	x1, x26
   380c8:	mov	w3, #0x0                   	// #0
   380cc:	mov	x2, #0xc                   	// #12
   380d0:	mov	x0, x24
   380d4:	bl	cc60 <mpfr_div_ui@plt>
   380d8:	ldr	w3, [sp, #360]
   380dc:	mov	x1, x24
   380e0:	mov	w2, #0x0                   	// #0
   380e4:	mov	x0, x21
   380e8:	bl	c6a0 <mpfr_set4@plt>
   380ec:	str	x19, [sp, #160]
   380f0:	mov	x2, x21
   380f4:	mov	x1, x19
   380f8:	mov	w3, #0x0                   	// #0
   380fc:	mov	x0, x19
   38100:	bl	c1a0 <mpfr_add@plt>
   38104:	mov	x1, x26
   38108:	mov	x2, x26
   3810c:	mov	x0, x26
   38110:	mov	w3, #0x0                   	// #0
   38114:	bl	bd50 <mpfr_mul@plt>
   38118:	ldr	x0, [sp, #432]
   3811c:	ldr	x1, [sp, #336]
   38120:	add	x0, x20, x0
   38124:	cmp	x0, x1
   38128:	b.lt	38c74 <mpfr_powerof2_raw@@Base+0x1164>  // b.tstop
   3812c:	mov	x19, #0x2                   	// #2
   38130:	mov	x21, x24
   38134:	mov	x20, #0xfffffffffffffff9    	// #-7
   38138:	mov	x22, #0x80000000            	// #2147483648
   3813c:	mov	x27, #0xfffffffffffffffa    	// #-6
   38140:	mov	x25, #0xfffffffffffffffc    	// #-4
   38144:	mov	x23, #0xfffffffffffffffe    	// #-2
   38148:	str	x26, [sp, #120]
   3814c:	mov	x26, x19
   38150:	str	x28, [sp, #168]
   38154:	ldr	x28, [sp, #160]
   38158:	b	381f4 <mpfr_powerof2_raw@@Base+0x6e4>
   3815c:	mul	x2, x19, x2
   38160:	add	x19, x19, #0x4
   38164:	mov	x1, x21
   38168:	mov	w3, #0x0                   	// #0
   3816c:	mov	x0, x21
   38170:	mul	x24, x19, x26
   38174:	bl	ba50 <mpfr_mul_ui@plt>
   38178:	mov	x2, x24
   3817c:	mov	x1, x21
   38180:	mov	w3, #0x0                   	// #0
   38184:	mov	x0, x21
   38188:	bl	cc60 <mpfr_div_ui@plt>
   3818c:	add	x2, x24, x26, lsl #2
   38190:	mov	x1, x21
   38194:	mov	x0, x21
   38198:	mov	w3, #0x0                   	// #0
   3819c:	bl	cc60 <mpfr_div_ui@plt>
   381a0:	mov	x0, x26
   381a4:	bl	c830 <mpfr_bernoulli_cache@plt>
   381a8:	ldr	x24, [sp, #152]
   381ac:	mov	x2, x0
   381b0:	mov	x1, x21
   381b4:	mov	w3, #0x0                   	// #0
   381b8:	mov	x0, x24
   381bc:	bl	c4d0 <mpfr_mul_z@plt>
   381c0:	mov	x2, x24
   381c4:	mov	x1, x28
   381c8:	mov	x0, x28
   381cc:	mov	w3, #0x0                   	// #0
   381d0:	bl	c1a0 <mpfr_add@plt>
   381d4:	sub	x20, x20, #0x2
   381d8:	ldr	x2, [sp, #128]
   381dc:	add	x26, x26, #0x1
   381e0:	ldr	x0, [sp, #432]
   381e4:	ldr	x1, [sp, #336]
   381e8:	add	x0, x2, x0
   381ec:	cmp	x0, x1
   381f0:	b.lt	3829c <mpfr_powerof2_raw@@Base+0x78c>  // b.tstop
   381f4:	ldr	x2, [sp, #120]
   381f8:	mov	x1, x21
   381fc:	mov	x0, x21
   38200:	mov	w3, #0x0                   	// #0
   38204:	lsl	x24, x26, #1
   38208:	bl	bd50 <mpfr_mul@plt>
   3820c:	cmp	x26, x22
   38210:	sub	x2, x26, #0x1
   38214:	b.ls	3815c <mpfr_powerof2_raw@@Base+0x64c>  // b.plast
   38218:	mov	x0, #0xfffffffffffffffb    	// #-5
   3821c:	mov	x1, x21
   38220:	sub	x2, x0, x20
   38224:	mov	w3, #0x0                   	// #0
   38228:	mov	x0, x21
   3822c:	bl	ba50 <mpfr_mul_ui@plt>
   38230:	sub	x2, x27, x20
   38234:	mov	x1, x21
   38238:	mov	x0, x21
   3823c:	mov	w3, #0x0                   	// #0
   38240:	bl	ba50 <mpfr_mul_ui@plt>
   38244:	add	x19, x19, #0x4
   38248:	mov	x2, x24
   3824c:	mov	x1, x21
   38250:	mov	x0, x21
   38254:	mov	w3, #0x0                   	// #0
   38258:	bl	cc60 <mpfr_div_ui@plt>
   3825c:	sub	x2, x25, x20
   38260:	mov	x1, x21
   38264:	mov	x0, x21
   38268:	mov	w3, #0x0                   	// #0
   3826c:	bl	cc60 <mpfr_div_ui@plt>
   38270:	mov	x2, x24
   38274:	mov	x1, x21
   38278:	mov	x0, x21
   3827c:	mov	w3, #0x0                   	// #0
   38280:	bl	cc60 <mpfr_div_ui@plt>
   38284:	sub	x2, x23, x20
   38288:	mov	x1, x21
   3828c:	mov	x0, x21
   38290:	mov	w3, #0x0                   	// #0
   38294:	bl	cc60 <mpfr_div_ui@plt>
   38298:	b	381a0 <mpfr_powerof2_raw@@Base+0x690>
   3829c:	str	x26, [sp, #248]
   382a0:	mov	x24, x21
   382a4:	ldr	x26, [sp, #120]
   382a8:	ldr	x28, [sp, #168]
   382ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   382b0:	ldr	x1, [x0, #2624]
   382b4:	add	x0, x0, #0xa40
   382b8:	blr	x1
   382bc:	ldr	x1, [sp, #136]
   382c0:	mov	w2, #0x0                   	// #0
   382c4:	ldr	x19, [sp, #152]
   382c8:	add	x1, x1, x0
   382cc:	mov	x20, #0x2                   	// #2
   382d0:	mov	x0, x19
   382d4:	bl	c380 <mpfr_cache@plt>
   382d8:	mov	x1, x19
   382dc:	mov	w3, #0x0                   	// #0
   382e0:	mov	x2, #0x1                   	// #1
   382e4:	mov	x0, x19
   382e8:	bl	c2c0 <mpfr_mul_2ui@plt>
   382ec:	ldr	x1, [sp, #112]
   382f0:	mov	w2, #0x0                   	// #0
   382f4:	mov	x0, x24
   382f8:	ldr	w3, [x1, #8]
   382fc:	bl	c6a0 <mpfr_set4@plt>
   38300:	ldr	x2, [sp, #144]
   38304:	mov	x0, x20
   38308:	mov	x23, x0
   3830c:	add	x0, x0, #0x1
   38310:	mul	x1, x0, x0
   38314:	cmp	x1, x2
   38318:	b.cc	38308 <mpfr_powerof2_raw@@Base+0x7f8>  // b.lo, b.ul, b.last
   3831c:	str	x0, [sp, #120]
   38320:	lsl	x0, x0, #5
   38324:	str	x0, [sp, #272]
   38328:	bl	ccf0 <mpfr_allocate_func@plt>
   3832c:	str	x0, [sp, #208]
   38330:	cmp	x23, #0x1
   38334:	b.ls	38c5c <mpfr_powerof2_raw@@Base+0x114c>  // b.plast
   38338:	add	x20, x0, #0x40
   3833c:	add	x19, x0, x23, lsl #5
   38340:	ldr	x22, [sp, #128]
   38344:	mov	x21, x20
   38348:	mov	x0, x21
   3834c:	mov	x1, x22
   38350:	bl	ca80 <mpfr_init2@plt>
   38354:	cmp	x19, x21
   38358:	add	x21, x21, #0x20
   3835c:	b.ne	38348 <mpfr_powerof2_raw@@Base+0x838>  // b.any
   38360:	ldr	x1, [sp, #112]
   38364:	mov	x0, x20
   38368:	mov	w2, #0x0                   	// #0
   3836c:	str	x20, [sp, #240]
   38370:	bl	c400 <mpfr_sqr@plt>
   38374:	cmp	x23, #0x2
   38378:	b.ls	383b8 <mpfr_powerof2_raw@@Base+0x8a8>  // b.plast
   3837c:	ldr	x21, [sp, #208]
   38380:	mov	x19, #0x3                   	// #3
   38384:	ldr	x22, [sp, #112]
   38388:	add	x20, x21, #0x60
   3838c:	nop
   38390:	tbnz	w19, #0, 385ac <mpfr_powerof2_raw@@Base+0xa9c>
   38394:	lsr	x1, x19, #1
   38398:	mov	x0, x20
   3839c:	mov	w2, #0x0                   	// #0
   383a0:	add	x1, x21, x1, lsl #5
   383a4:	bl	c400 <mpfr_sqr@plt>
   383a8:	cmp	x23, x19
   383ac:	add	x20, x20, #0x20
   383b0:	add	x19, x19, #0x1
   383b4:	b.ne	38390 <mpfr_powerof2_raw@@Base+0x880>  // b.any
   383b8:	ldr	x0, [sp, #120]
   383bc:	lsl	x0, x0, #4
   383c0:	str	x0, [sp, #280]
   383c4:	bl	ccf0 <mpfr_allocate_func@plt>
   383c8:	mov	x19, x0
   383cc:	add	x1, x23, #0x1
   383d0:	mov	x20, x0
   383d4:	add	x21, x0, x1, lsl #4
   383d8:	stp	x0, x21, [sp, #256]
   383dc:	nop
   383e0:	mov	x0, x20
   383e4:	add	x20, x20, #0x10
   383e8:	bl	bf90 <mpfr_mpz_init@plt>
   383ec:	cmp	x21, x20
   383f0:	b.ne	383e0 <mpfr_powerof2_raw@@Base+0x8d0>  // b.any
   383f4:	ldr	x0, [sp, #120]
   383f8:	ldr	x1, [sp, #144]
   383fc:	cmp	x0, x1
   38400:	b.hi	38c4c <mpfr_powerof2_raw@@Base+0x113c>  // b.pmore
   38404:	add	x0, x19, #0x10
   38408:	stp	x24, x0, [sp, #168]
   3840c:	mov	x27, #0x1                   	// #1
   38410:	ldr	x0, [sp, #208]
   38414:	mov	x25, x27
   38418:	mov	x1, #0x1                   	// #1
   3841c:	add	x0, x0, #0x20
   38420:	str	x0, [sp, #184]
   38424:	mov	x0, x19
   38428:	bl	bcb0 <__gmpz_set_ui@plt>
   3842c:	cbz	x23, 38598 <mpfr_powerof2_raw@@Base+0xa88>
   38430:	ldr	x27, [sp, #176]
   38434:	mov	x1, x19
   38438:	sub	x25, x25, #0x1
   3843c:	mov	x21, #0x1                   	// #1
   38440:	mov	x0, x27
   38444:	bl	bfa0 <__gmpz_set@plt>
   38448:	add	x2, x21, x25
   3844c:	mov	x1, x19
   38450:	mov	x0, x19
   38454:	bl	c100 <__gmpz_mul_ui@plt>
   38458:	mov	x22, x27
   3845c:	cmp	x21, x23
   38460:	b.eq	384c8 <mpfr_powerof2_raw@@Base+0x9b8>  // b.none
   38464:	nop
   38468:	add	x21, x21, #0x1
   3846c:	add	x24, x27, #0x10
   38470:	add	x20, x21, x25
   38474:	mov	x0, x24
   38478:	mov	x1, x27
   3847c:	bl	bfa0 <__gmpz_set@plt>
   38480:	mov	x1, x27
   38484:	mov	x0, x27
   38488:	mov	x2, x20
   3848c:	bl	c100 <__gmpz_mul_ui@plt>
   38490:	sub	x2, x27, #0x10
   38494:	mov	x1, x27
   38498:	mov	x0, x27
   3849c:	mov	x27, x2
   384a0:	bl	c9c0 <__gmpz_add@plt>
   384a4:	cmp	x27, x19
   384a8:	b.ne	38480 <mpfr_powerof2_raw@@Base+0x970>  // b.any
   384ac:	add	x2, x21, x25
   384b0:	mov	x1, x19
   384b4:	mov	x0, x19
   384b8:	bl	c100 <__gmpz_mul_ui@plt>
   384bc:	mov	x27, x24
   384c0:	cmp	x21, x23
   384c4:	b.ne	38468 <mpfr_powerof2_raw@@Base+0x958>  // b.any
   384c8:	mov	x1, x19
   384cc:	mov	x0, x26
   384d0:	mov	w2, #0x0                   	// #0
   384d4:	bl	c240 <mpfr_set_z@plt>
   384d8:	ldr	x24, [sp, #112]
   384dc:	mov	x20, #0x0                   	// #0
   384e0:	ldr	x21, [sp, #184]
   384e4:	nop
   384e8:	cbnz	x20, 38524 <mpfr_powerof2_raw@@Base+0xa14>
   384ec:	mov	x2, x22
   384f0:	mov	x1, x24
   384f4:	mov	w3, #0x0                   	// #0
   384f8:	mov	x0, x28
   384fc:	bl	c4d0 <mpfr_mul_z@plt>
   38500:	add	x22, x22, #0x10
   38504:	mov	x2, x28
   38508:	mov	x1, x26
   3850c:	mov	x0, x26
   38510:	mov	w3, #0x0                   	// #0
   38514:	bl	c1a0 <mpfr_add@plt>
   38518:	cmp	x23, #0x1
   3851c:	b.eq	3855c <mpfr_powerof2_raw@@Base+0xa4c>  // b.none
   38520:	mov	x20, #0x1                   	// #1
   38524:	mov	x2, x22
   38528:	add	x1, x21, x20, lsl #5
   3852c:	mov	w3, #0x0                   	// #0
   38530:	mov	x0, x28
   38534:	bl	c4d0 <mpfr_mul_z@plt>
   38538:	add	x20, x20, #0x1
   3853c:	mov	x2, x28
   38540:	mov	x1, x26
   38544:	mov	x0, x26
   38548:	mov	w3, #0x0                   	// #0
   3854c:	bl	c1a0 <mpfr_add@plt>
   38550:	add	x22, x22, #0x10
   38554:	cmp	x23, x20
   38558:	b.ne	384e8 <mpfr_powerof2_raw@@Base+0x9d8>  // b.any
   3855c:	ldr	x0, [sp, #168]
   38560:	mov	x2, x26
   38564:	mov	w3, #0x0                   	// #0
   38568:	mov	x1, x0
   3856c:	bl	bd50 <mpfr_mul@plt>
   38570:	ldr	x25, [sp, #120]
   38574:	ldr	x1, [sp, #144]
   38578:	add	x0, x23, x25
   3857c:	cmp	x0, x1
   38580:	b.hi	385c4 <mpfr_powerof2_raw@@Base+0xab4>  // b.pmore
   38584:	mov	x1, #0x1                   	// #1
   38588:	str	x0, [sp, #120]
   3858c:	mov	x0, x19
   38590:	bl	bcb0 <__gmpz_set_ui@plt>
   38594:	cbnz	x23, 38430 <mpfr_powerof2_raw@@Base+0x920>
   38598:	mov	x1, x19
   3859c:	mov	x0, x26
   385a0:	mov	w2, #0x0                   	// #0
   385a4:	bl	c240 <mpfr_set_z@plt>
   385a8:	b	3855c <mpfr_powerof2_raw@@Base+0xa4c>
   385ac:	mov	x2, x22
   385b0:	sub	x1, x20, #0x20
   385b4:	mov	x0, x20
   385b8:	mov	w3, #0x0                   	// #0
   385bc:	bl	bd50 <mpfr_mul@plt>
   385c0:	b	383a8 <mpfr_powerof2_raw@@Base+0x898>
   385c4:	ldp	x20, x21, [sp, #256]
   385c8:	ldr	x24, [sp, #168]
   385cc:	nop
   385d0:	mov	x0, x20
   385d4:	add	x20, x20, #0x10
   385d8:	bl	c170 <mpfr_mpz_clear@plt>
   385dc:	cmp	x21, x20
   385e0:	b.ne	385d0 <mpfr_powerof2_raw@@Base+0xac0>  // b.any
   385e4:	ldr	x1, [sp, #280]
   385e8:	mov	x0, x19
   385ec:	bl	cc20 <mpfr_free_func@plt>
   385f0:	ldr	x0, [sp, #208]
   385f4:	cmp	x23, #0x1
   385f8:	ldr	x20, [sp, #240]
   385fc:	add	x23, x0, x23, lsl #5
   38600:	b.ls	3861c <mpfr_powerof2_raw@@Base+0xb0c>  // b.plast
   38604:	nop
   38608:	mov	x0, x20
   3860c:	bl	c070 <mpfr_clear@plt>
   38610:	cmp	x23, x20
   38614:	add	x20, x20, #0x20
   38618:	b.ne	38608 <mpfr_powerof2_raw@@Base+0xaf8>  // b.any
   3861c:	ldr	x0, [sp, #208]
   38620:	ldr	x1, [sp, #272]
   38624:	bl	cc20 <mpfr_free_func@plt>
   38628:	ldr	x1, [sp, #120]
   3862c:	ldr	x0, [sp, #144]
   38630:	cmp	x0, x1
   38634:	b.ls	3867c <mpfr_powerof2_raw@@Base+0xb6c>  // b.plast
   38638:	ldr	x21, [sp, #112]
   3863c:	mov	x20, x0
   38640:	mov	x19, x1
   38644:	nop
   38648:	mov	x2, x19
   3864c:	mov	x1, x21
   38650:	mov	w3, #0x0                   	// #0
   38654:	mov	x0, x26
   38658:	bl	c260 <mpfr_add_ui@plt>
   3865c:	add	x19, x19, #0x1
   38660:	mov	x2, x26
   38664:	mov	x1, x24
   38668:	mov	x0, x24
   3866c:	mov	w3, #0x0                   	// #0
   38670:	bl	bd50 <mpfr_mul@plt>
   38674:	cmp	x20, x19
   38678:	b.ne	38648 <mpfr_powerof2_raw@@Base+0xb38>  // b.any
   3867c:	mov	x2, x24
   38680:	mov	x1, x24
   38684:	mov	w3, #0x0                   	// #0
   38688:	mov	x0, x24
   3868c:	bl	bd50 <mpfr_mul@plt>
   38690:	mov	x19, #0x8000000000000003    	// #-9223372036854775805
   38694:	ldr	x0, [sp, #152]
   38698:	mov	x2, x24
   3869c:	mov	w3, #0x0                   	// #0
   386a0:	mov	x1, x0
   386a4:	bl	c620 <mpfr_div@plt>
   386a8:	ldr	x0, [sp, #160]
   386ac:	mov	w2, #0x0                   	// #0
   386b0:	ldr	x20, [sp, #336]
   386b4:	mov	x1, x0
   386b8:	bl	c750 <mpfr_exp@plt>
   386bc:	ldr	x0, [sp, #336]
   386c0:	cmp	x0, x19
   386c4:	b.eq	3888c <mpfr_powerof2_raw@@Base+0xd7c>  // b.none
   386c8:	ldr	x1, [sp, #152]
   386cc:	mov	w2, #0x0                   	// #0
   386d0:	mov	x0, x24
   386d4:	bl	c930 <mpfr_sqrt@plt>
   386d8:	ldr	x0, [sp, #160]
   386dc:	mov	x2, x24
   386e0:	mov	w3, #0x0                   	// #0
   386e4:	mov	x1, x0
   386e8:	bl	bd50 <mpfr_mul@plt>
   386ec:	ldr	x0, [sp, #248]
   386f0:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   386f4:	movk	x1, #0xcccd
   386f8:	umulh	x0, x0, x1
   386fc:	lsr	x0, x0, #2
   38700:	add	x0, x0, x0, lsl #1
   38704:	add	x0, x0, #0x12
   38708:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   3870c:	ldr	d0, [sp, #144]
   38710:	fmov	d1, #2.500000000000000000e+00
   38714:	add	w0, w0, #0x2
   38718:	ucvtf	d2, d0
   3871c:	fmov	d0, #2.000000000000000000e+00
   38720:	add	x20, x20, w0, sxtw
   38724:	fmadd	d0, d2, d0, d1
   38728:	bl	c950 <__gmpfr_ceil_log2@plt>
   3872c:	cmp	x20, x0
   38730:	ldr	x1, [sp, #336]
   38734:	add	x0, x0, #0x1
   38738:	csinc	x20, x0, x20, lt  // lt = tstop
   3873c:	cmp	x1, x19
   38740:	b.le	388b0 <mpfr_powerof2_raw@@Base+0xda0>
   38744:	ldr	w0, [sp, #204]
   38748:	ldr	x1, [sp, #320]
   3874c:	cmp	w0, #0x0
   38750:	ldr	x0, [sp, #344]
   38754:	sub	x1, x1, #0x1
   38758:	ldr	x2, [sp, #128]
   3875c:	asr	x1, x1, #6
   38760:	ldr	x3, [sp, #192]
   38764:	sub	x2, x2, x20
   38768:	add	x1, x1, #0x1
   3876c:	cinc	x3, x3, eq  // eq = none
   38770:	bl	c370 <mpfr_round_p@plt>
   38774:	cbz	w0, 388b0 <mpfr_powerof2_raw@@Base+0xda0>
   38778:	ldp	x27, x28, [sp, #152]
   3877c:	mov	x1, x28
   38780:	ldr	w2, [sp, #204]
   38784:	ldr	w3, [sp, #328]
   38788:	ldr	x20, [sp, #216]
   3878c:	mov	x0, x20
   38790:	bl	c6a0 <mpfr_set4@plt>
   38794:	mov	w19, w0
   38798:	mov	x0, x28
   3879c:	bl	c070 <mpfr_clear@plt>
   387a0:	mov	x0, x24
   387a4:	bl	c070 <mpfr_clear@plt>
   387a8:	mov	x0, x26
   387ac:	bl	c070 <mpfr_clear@plt>
   387b0:	mov	x0, x27
   387b4:	bl	c070 <mpfr_clear@plt>
   387b8:	ldr	x0, [sp, #232]
   387bc:	bl	c070 <mpfr_clear@plt>
   387c0:	ldr	x5, [sp, #136]
   387c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   387c8:	ldr	x2, [x0, #2576]
   387cc:	add	x0, x0, #0xa10
   387d0:	blr	x2
   387d4:	ldp	x3, x4, [sp, #304]
   387d8:	ldr	w1, [sp, #296]
   387dc:	str	w1, [x5, x0]
   387e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   387e4:	ldr	x2, [x0, #2512]
   387e8:	add	x0, x0, #0x9d0
   387ec:	blr	x2
   387f0:	ldr	x2, [x20, #16]
   387f4:	str	x3, [x5, x0]
   387f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   387fc:	ldr	x6, [x0, #2544]
   38800:	add	x0, x0, #0x9f0
   38804:	blr	x6
   38808:	str	x4, [x5, x0]
   3880c:	cmp	x4, x2
   38810:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   38814:	b.le	3884c <mpfr_powerof2_raw@@Base+0xd3c>
   38818:	ldr	w2, [sp, #204]
   3881c:	mov	w1, w19
   38820:	ldr	x0, [sp, #216]
   38824:	bl	cb30 <mpfr_check_range@plt>
   38828:	mov	w19, w0
   3882c:	mov	w0, w19
   38830:	ldp	x19, x20, [sp, #16]
   38834:	ldp	x21, x22, [sp, #32]
   38838:	ldp	x23, x24, [sp, #48]
   3883c:	ldp	x25, x26, [sp, #64]
   38840:	ldp	x27, x28, [sp, #80]
   38844:	ldp	x29, x30, [sp], #480
   38848:	ret
   3884c:	cbz	w19, 3882c <mpfr_powerof2_raw@@Base+0xd1c>
   38850:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38854:	ldr	x2, [x0, #2576]
   38858:	add	x0, x0, #0xa10
   3885c:	blr	x2
   38860:	orr	w1, w1, #0x8
   38864:	ldr	x2, [sp, #136]
   38868:	ldp	x21, x22, [sp, #32]
   3886c:	str	w1, [x2, x0]
   38870:	mov	w0, w19
   38874:	ldp	x19, x20, [sp, #16]
   38878:	ldp	x23, x24, [sp, #48]
   3887c:	ldp	x25, x26, [sp, #64]
   38880:	ldp	x27, x28, [sp, #80]
   38884:	ldp	x29, x30, [sp], #480
   38888:	ret
   3888c:	ldr	w5, [sp, #204]
   38890:	mov	x4, x24
   38894:	ldr	x1, [sp, #112]
   38898:	add	x2, sp, #0x128
   3889c:	ldr	x3, [sp, #160]
   388a0:	ldr	x0, [sp, #216]
   388a4:	bl	37b28 <mpfr_powerof2_raw@@Base+0x18>
   388a8:	mov	w19, w0
   388ac:	cbnz	w0, 38cc4 <mpfr_powerof2_raw@@Base+0x11b4>
   388b0:	ldr	x1, [sp, #128]
   388b4:	mov	x0, #0xfffffffffffffeff    	// #-257
   388b8:	movk	x0, #0x7fff, lsl #48
   388bc:	sub	x0, x0, x1
   388c0:	ldr	x1, [sp, #224]
   388c4:	cmp	x0, x1
   388c8:	b.lt	38ca0 <mpfr_powerof2_raw@@Base+0x1190>  // b.tstop
   388cc:	ldr	x0, [sp, #128]
   388d0:	add	x0, x0, x1
   388d4:	str	x0, [sp, #128]
   388d8:	mov	x1, #0x35                  	// #53
   388dc:	add	x0, x0, x0, lsr #63
   388e0:	asr	x0, x0, #1
   388e4:	str	x0, [sp, #224]
   388e8:	ldr	x0, [sp, #160]
   388ec:	bl	bed0 <mpfr_set_prec@plt>
   388f0:	ldr	x0, [sp, #128]
   388f4:	cmp	x0, #0x64
   388f8:	b.gt	37f38 <mpfr_powerof2_raw@@Base+0x428>
   388fc:	ldr	x0, [sp, #160]
   38900:	mov	w3, #0x0                   	// #0
   38904:	mov	x2, #0xfffffffffffffff6    	// #-10
   38908:	mov	x1, #0x266                 	// #614
   3890c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   38910:	b	37f98 <mpfr_powerof2_raw@@Base+0x488>
   38914:	stp	d8, d9, [sp, #96]
   38918:	cmp	x21, #0x1
   3891c:	b.eq	38cbc <mpfr_powerof2_raw@@Base+0x11ac>  // b.none
   38920:	b.le	38d54 <mpfr_powerof2_raw@@Base+0x1244>
   38924:	ldr	x2, [sp, #192]
   38928:	mov	w0, #0x40                  	// #64
   3892c:	mov	w25, #0x4e                  	// #78
   38930:	sub	x1, x2, #0x1
   38934:	clz	x1, x1
   38938:	sub	w0, w0, w1
   3893c:	add	x0, x2, w0, sxtw
   38940:	sub	x1, x0, #0x1
   38944:	clz	x1, x1
   38948:	sub	w25, w25, w1
   3894c:	add	x25, x0, w25, sxtw
   38950:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   38954:	mov	x22, #0xfffffffffffffeff    	// #-257
   38958:	mov	x23, x28
   3895c:	mov	x20, #0x40                  	// #64
   38960:	mov	x28, x25
   38964:	ldr	d9, [x0, #1432]
   38968:	mov	x25, x27
   3896c:	mov	x21, #0xffffffffffffffff    	// #-1
   38970:	movk	x22, #0x7fff, lsl #48
   38974:	b	38998 <mpfr_powerof2_raw@@Base+0xe88>
   38978:	add	x0, x27, #0x6
   3897c:	add	x28, x28, x0
   38980:	sub	x0, x22, x28
   38984:	cmp	x0, x20
   38988:	b.lt	38bb4 <mpfr_powerof2_raw@@Base+0x10a4>  // b.tstop
   3898c:	add	x28, x28, x20
   38990:	add	x20, x28, x28, lsr #63
   38994:	asr	x20, x20, #1
   38998:	mov	x1, x28
   3899c:	mov	x0, x23
   389a0:	bl	bed0 <mpfr_set_prec@plt>
   389a4:	mov	x19, #0x1                   	// #1
   389a8:	mov	x1, x28
   389ac:	mov	x0, x24
   389b0:	bl	bed0 <mpfr_set_prec@plt>
   389b4:	mov	x1, x28
   389b8:	mov	x0, x26
   389bc:	bl	bed0 <mpfr_set_prec@plt>
   389c0:	mov	x1, x28
   389c4:	mov	x0, x25
   389c8:	bl	bed0 <mpfr_set_prec@plt>
   389cc:	ldr	x2, [sp, #112]
   389d0:	mov	x1, #0x2                   	// #2
   389d4:	mov	w3, #0x3                   	// #3
   389d8:	mov	x0, x23
   389dc:	bl	ca50 <mpfr_ui_sub@plt>
   389e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   389e4:	ldr	x1, [x0, #2624]
   389e8:	add	x0, x0, #0xa40
   389ec:	blr	x1
   389f0:	mov	w2, #0x0                   	// #0
   389f4:	ldr	x1, [sp, #136]
   389f8:	add	x1, x1, x0
   389fc:	mov	x0, x24
   38a00:	bl	c380 <mpfr_cache@plt>
   38a04:	mov	x1, x23
   38a08:	mov	x0, x26
   38a0c:	mov	w2, #0x0                   	// #0
   38a10:	bl	c600 <mpfr_lngamma@plt>
   38a14:	ldr	x1, [sp, #400]
   38a18:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   38a1c:	cmp	x1, x0
   38a20:	b.eq	38a50 <mpfr_powerof2_raw@@Base+0xf40>  // b.none
   38a24:	ldr	d8, [sp, #336]
   38a28:	scvtf	d0, d8
   38a2c:	fmul	d0, d0, d9
   38a30:	bl	c950 <__gmpfr_ceil_log2@plt>
   38a34:	fmov	x2, d8
   38a38:	ldr	x1, [sp, #400]
   38a3c:	add	x19, x2, x0
   38a40:	add	x19, x19, #0x1
   38a44:	subs	x19, x19, x1
   38a48:	csel	x19, x19, x21, pl  // pl = nfrst
   38a4c:	add	x19, x19, #0x1
   38a50:	mov	w3, #0x0                   	// #0
   38a54:	mov	x2, x24
   38a58:	mov	x1, x23
   38a5c:	mov	x0, x23
   38a60:	bl	bd50 <mpfr_mul@plt>
   38a64:	mov	x1, x23
   38a68:	mov	w2, #0x0                   	// #0
   38a6c:	mov	x0, x23
   38a70:	ldr	x27, [sp, #336]
   38a74:	bl	c450 <mpfr_sin@plt>
   38a78:	ldr	x4, [sp, #336]
   38a7c:	mov	w3, #0x0                   	// #0
   38a80:	ldr	x1, [sp, #112]
   38a84:	sub	x4, x27, x4
   38a88:	adds	x27, x4, #0x3
   38a8c:	mov	x2, #0x1                   	// #1
   38a90:	csel	x27, x27, x21, pl  // pl = nfrst
   38a94:	mov	x0, x25
   38a98:	bl	c530 <mpfr_sub_ui@plt>
   38a9c:	mov	x2, x24
   38aa0:	mov	x1, x25
   38aa4:	mov	w3, #0x0                   	// #0
   38aa8:	mov	x0, x25
   38aac:	bl	bd50 <mpfr_mul@plt>
   38ab0:	mov	x2, x23
   38ab4:	mov	x1, x25
   38ab8:	mov	w3, #0x0                   	// #0
   38abc:	mov	x0, x25
   38ac0:	bl	c620 <mpfr_div@plt>
   38ac4:	mov	w3, #0x1                   	// #1
   38ac8:	mov	x1, x25
   38acc:	mov	w2, #0x0                   	// #0
   38ad0:	mov	x0, x25
   38ad4:	bl	c6a0 <mpfr_set4@plt>
   38ad8:	mov	x1, x25
   38adc:	mov	x0, x25
   38ae0:	mov	w2, #0x0                   	// #0
   38ae4:	bl	c090 <mpfr_log@plt>
   38ae8:	add	x1, x27, #0x5
   38aec:	cmp	x1, x28
   38af0:	b.ge	38978 <mpfr_powerof2_raw@@Base+0xe68>  // b.tcont
   38af4:	ldr	x2, [sp, #432]
   38af8:	add	x0, x27, #0x4
   38afc:	mov	x27, x1
   38b00:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   38b04:	cmp	x2, x1
   38b08:	ldr	x1, [sp, #400]
   38b0c:	str	x1, [sp, #120]
   38b10:	b.eq	38b2c <mpfr_powerof2_raw@@Base+0x101c>  // b.none
   38b14:	mov	x1, #0x1                   	// #1
   38b18:	sub	x1, x1, x2
   38b1c:	adds	x0, x1, x0
   38b20:	csel	x0, x0, x21, pl  // pl = nfrst
   38b24:	add	x0, x0, #0x1
   38b28:	add	x27, x2, x0
   38b2c:	mov	x1, x25
   38b30:	mov	x2, x26
   38b34:	mov	x0, x23
   38b38:	mov	w3, #0x0                   	// #0
   38b3c:	bl	bb70 <mpfr_sub@plt>
   38b40:	ldr	x0, [sp, #336]
   38b44:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   38b48:	cmp	x0, x1
   38b4c:	b.le	38980 <mpfr_powerof2_raw@@Base+0xe70>
   38b50:	ldr	x1, [sp, #120]
   38b54:	mov	x2, #0x1                   	// #1
   38b58:	sub	x0, x2, x0
   38b5c:	add	x1, x1, x19
   38b60:	ldr	x2, [sp, #320]
   38b64:	cmp	x1, x27
   38b68:	csel	x1, x1, x27, ge  // ge = tcont
   38b6c:	adds	x1, x0, x1
   38b70:	sub	x4, x2, #0x1
   38b74:	ldr	w2, [sp, #204]
   38b78:	csel	x1, x1, x21, pl  // pl = nfrst
   38b7c:	ldr	x0, [sp, #344]
   38b80:	cmp	w2, #0x0
   38b84:	add	x2, x1, #0x1
   38b88:	ldr	x1, [sp, #192]
   38b8c:	sub	x2, x28, x2
   38b90:	cinc	x3, x1, eq  // eq = none
   38b94:	asr	x1, x4, #6
   38b98:	add	x1, x1, #0x1
   38b9c:	bl	c370 <mpfr_round_p@plt>
   38ba0:	cbz	w0, 38980 <mpfr_powerof2_raw@@Base+0xe70>
   38ba4:	mov	x27, x25
   38ba8:	mov	x28, x23
   38bac:	ldp	d8, d9, [sp, #96]
   38bb0:	b	3877c <mpfr_powerof2_raw@@Base+0xc6c>
   38bb4:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   38bb8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   38bbc:	add	x2, x2, #0x610
   38bc0:	add	x0, x0, #0x4d8
   38bc4:	mov	w1, #0x1a5                 	// #421
   38bc8:	bl	cb40 <mpfr_assert_fail@plt>
   38bcc:	ldr	x2, [sp, #112]
   38bd0:	mov	w3, #0x2                   	// #2
   38bd4:	ldr	x19, [sp, #160]
   38bd8:	mov	x1, x19
   38bdc:	mov	x0, x19
   38be0:	bl	bb70 <mpfr_sub@plt>
   38be4:	mov	w1, #0x2                   	// #2
   38be8:	mov	x0, x19
   38bec:	bl	bca0 <mpfr_get_ui@plt>
   38bf0:	cmp	x0, #0x3
   38bf4:	mov	x1, #0x3                   	// #3
   38bf8:	csel	x0, x0, x1, cs  // cs = hs, nlast
   38bfc:	str	x0, [sp, #144]
   38c00:	b	37fe0 <mpfr_powerof2_raw@@Base+0x4d0>
   38c04:	ldr	x0, [sp, #160]
   38c08:	mov	w3, #0x0                   	// #0
   38c0c:	mov	x2, #0xfffffffffffffff6    	// #-10
   38c10:	mov	x1, #0x8cd                 	// #2253
   38c14:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   38c18:	b	37f98 <mpfr_powerof2_raw@@Base+0x488>
   38c1c:	ldr	x0, [sp, #160]
   38c20:	mov	w3, #0x0                   	// #0
   38c24:	mov	x2, #0xfffffffffffffff6    	// #-10
   38c28:	mov	x1, #0x533                 	// #1331
   38c2c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   38c30:	b	37f98 <mpfr_powerof2_raw@@Base+0x488>
   38c34:	ldr	x0, [sp, #160]
   38c38:	mov	w3, #0x0                   	// #0
   38c3c:	mov	x2, #0xfffffffffffffff6    	// #-10
   38c40:	mov	x1, #0x6cd                 	// #1741
   38c44:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   38c48:	b	37f98 <mpfr_powerof2_raw@@Base+0x488>
   38c4c:	mov	x0, #0x1                   	// #1
   38c50:	str	x0, [sp, #120]
   38c54:	ldp	x20, x21, [sp, #256]
   38c58:	b	385d0 <mpfr_powerof2_raw@@Base+0xac0>
   38c5c:	ldr	x1, [sp, #112]
   38c60:	add	x0, x0, #0x40
   38c64:	mov	w2, #0x0                   	// #0
   38c68:	str	x0, [sp, #240]
   38c6c:	bl	c400 <mpfr_sqr@plt>
   38c70:	b	383b8 <mpfr_powerof2_raw@@Base+0x8a8>
   38c74:	mov	x0, #0x2                   	// #2
   38c78:	str	x0, [sp, #248]
   38c7c:	b	382ac <mpfr_powerof2_raw@@Base+0x79c>
   38c80:	ldr	x0, [sp, #160]
   38c84:	mov	x2, #0xffffffffffffffff    	// #-1
   38c88:	mov	x1, #0x9                   	// #9
   38c8c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   38c90:	b	37f98 <mpfr_powerof2_raw@@Base+0x488>
   38c94:	mov	x0, #0xe                   	// #14
   38c98:	str	x0, [sp, #128]
   38c9c:	b	37f10 <mpfr_powerof2_raw@@Base+0x400>
   38ca0:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   38ca4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   38ca8:	add	x2, x2, #0x610
   38cac:	add	x0, x0, #0x4d8
   38cb0:	mov	w1, #0x2b8                 	// #696
   38cb4:	stp	d8, d9, [sp, #96]
   38cb8:	bl	cb40 <mpfr_assert_fail@plt>
   38cbc:	mov	x25, #0xf                   	// #15
   38cc0:	b	38950 <mpfr_powerof2_raw@@Base+0xe40>
   38cc4:	ldp	x27, x28, [sp, #152]
   38cc8:	mov	x0, x28
   38ccc:	bl	c070 <mpfr_clear@plt>
   38cd0:	mov	x0, x24
   38cd4:	bl	c070 <mpfr_clear@plt>
   38cd8:	mov	x0, x26
   38cdc:	bl	c070 <mpfr_clear@plt>
   38ce0:	mov	x0, x27
   38ce4:	bl	c070 <mpfr_clear@plt>
   38ce8:	ldr	x0, [sp, #232]
   38cec:	bl	c070 <mpfr_clear@plt>
   38cf0:	ldr	x5, [sp, #136]
   38cf4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38cf8:	ldr	x2, [x0, #2576]
   38cfc:	add	x0, x0, #0xa10
   38d00:	blr	x2
   38d04:	ldr	w1, [sp, #296]
   38d08:	ldr	x4, [sp, #304]
   38d0c:	str	w1, [x5, x0]
   38d10:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38d14:	ldr	x3, [x0, #2512]
   38d18:	add	x0, x0, #0x9d0
   38d1c:	blr	x3
   38d20:	str	x4, [x5, x0]
   38d24:	ldr	x3, [sp, #216]
   38d28:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38d2c:	ldr	x6, [x0, #2544]
   38d30:	add	x0, x0, #0x9f0
   38d34:	blr	x6
   38d38:	ldr	x2, [sp, #312]
   38d3c:	str	x2, [x5, x0]
   38d40:	ldr	x3, [x3, #16]
   38d44:	cmp	x3, x4
   38d48:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   38d4c:	b.gt	38818 <mpfr_powerof2_raw@@Base+0xd08>
   38d50:	b	38850 <mpfr_powerof2_raw@@Base+0xd40>
   38d54:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   38d58:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   38d5c:	add	x2, x2, #0x1a8
   38d60:	add	x0, x0, #0x4d8
   38d64:	mov	w1, #0x14a                 	// #330
   38d68:	bl	cb40 <mpfr_assert_fail@plt>
   38d6c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   38d70:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   38d74:	add	x2, x2, #0x1a8
   38d78:	add	x0, x0, #0x4d8
   38d7c:	mov	w1, #0x1b0                 	// #432
   38d80:	stp	d8, d9, [sp, #96]
   38d84:	bl	cb40 <mpfr_assert_fail@plt>

0000000000038d88 <mpfr_gamma@@Base>:
   38d88:	stp	x29, x30, [sp, #-448]!
   38d8c:	mov	x29, sp
   38d90:	stp	x25, x26, [sp, #64]
   38d94:	mov	x26, x1
   38d98:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   38d9c:	stp	x19, x20, [sp, #16]
   38da0:	mov	w19, w2
   38da4:	ldr	x2, [x26, #16]
   38da8:	stp	x21, x22, [sp, #32]
   38dac:	stp	x27, x28, [sp, #80]
   38db0:	cmp	x2, x1
   38db4:	mov	x27, x0
   38db8:	b.le	395a4 <mpfr_gamma@@Base+0x81c>
   38dbc:	ldr	x0, [x26]
   38dc0:	ldr	x1, [x27]
   38dc4:	cmp	x1, x0
   38dc8:	csel	x1, x1, x0, ge  // ge = tcont
   38dcc:	neg	x1, x1, lsl #1
   38dd0:	cmp	x2, x1
   38dd4:	b.gt	38f20 <mpfr_gamma@@Base+0x198>
   38dd8:	mrs	x28, tpidr_el0
   38ddc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38de0:	ldr	x1, [x0, #2576]
   38de4:	add	x0, x0, #0xa10
   38de8:	blr	x1
   38dec:	ldr	w20, [x26, #8]
   38df0:	add	x22, x28, x0
   38df4:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   38df8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   38dfc:	ldr	w5, [x28, x0]
   38e00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38e04:	ldr	x1, [x0, #2512]
   38e08:	add	x0, x0, #0x9d0
   38e0c:	blr	x1
   38e10:	add	x1, x28, x0
   38e14:	str	w5, [sp, #152]
   38e18:	ldr	x5, [x28, x0]
   38e1c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38e20:	ldr	x6, [x0, #2544]
   38e24:	add	x0, x0, #0x9f0
   38e28:	blr	x6
   38e2c:	cmp	w20, #0x0
   38e30:	str	x5, [sp, #160]
   38e34:	ldr	x5, [x28, x0]
   38e38:	cset	w21, gt
   38e3c:	str	x4, [x28, x0]
   38e40:	cmp	w21, #0x0
   38e44:	str	x3, [x1]
   38e48:	mov	x0, #0x2                   	// #2
   38e4c:	str	x5, [sp, #168]
   38e50:	movk	x0, #0xc000, lsl #48
   38e54:	ccmp	x2, x0, #0x0, ne  // ne = any
   38e58:	b.eq	395d8 <mpfr_gamma@@Base+0x850>  // b.none
   38e5c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38e60:	ldr	x1, [x0, #2576]
   38e64:	add	x0, x0, #0xa10
   38e68:	blr	x1
   38e6c:	mov	x2, x26
   38e70:	mov	w3, w19
   38e74:	mov	x1, #0x1                   	// #1
   38e78:	str	wzr, [x28, x0]
   38e7c:	mov	x0, x27
   38e80:	bl	c2f0 <mpfr_ui_div@plt>
   38e84:	mov	w22, w0
   38e88:	cbnz	w0, 38fac <mpfr_gamma@@Base+0x224>
   38e8c:	tst	w19, #0xfffffffd
   38e90:	b.ne	396e0 <mpfr_gamma@@Base+0x958>  // b.any
   38e94:	ldr	w1, [sp, #152]
   38e98:	mov	w22, #0x1                   	// #1
   38e9c:	ldp	x3, x4, [sp, #160]
   38ea0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38ea4:	ldr	x2, [x0, #2576]
   38ea8:	add	x0, x0, #0xa10
   38eac:	blr	x2
   38eb0:	add	x5, x28, x0
   38eb4:	str	w1, [x28, x0]
   38eb8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38ebc:	ldr	x2, [x0, #2512]
   38ec0:	add	x0, x0, #0x9d0
   38ec4:	blr	x2
   38ec8:	str	x3, [x28, x0]
   38ecc:	ldr	x2, [x27, #16]
   38ed0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38ed4:	ldr	x6, [x0, #2544]
   38ed8:	add	x0, x0, #0x9f0
   38edc:	blr	x6
   38ee0:	str	x4, [x28, x0]
   38ee4:	cmp	x4, x2
   38ee8:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   38eec:	b.le	38f88 <mpfr_gamma@@Base+0x200>
   38ef0:	mov	w1, w22
   38ef4:	mov	w2, w19
   38ef8:	mov	x0, x27
   38efc:	bl	cb30 <mpfr_check_range@plt>
   38f00:	mov	w22, w0
   38f04:	mov	w0, w22
   38f08:	ldp	x19, x20, [sp, #16]
   38f0c:	ldp	x21, x22, [sp, #32]
   38f10:	ldp	x25, x26, [sp, #64]
   38f14:	ldp	x27, x28, [sp, #80]
   38f18:	ldp	x29, x30, [sp], #448
   38f1c:	ret
   38f20:	mov	x0, x26
   38f24:	stp	x23, x24, [sp, #48]
   38f28:	bl	c160 <mpfr_integer_p@plt>
   38f2c:	cbz	w0, 3921c <mpfr_gamma@@Base+0x494>
   38f30:	ldr	w0, [x26, #8]
   38f34:	tbnz	w0, #31, 39678 <mpfr_gamma@@Base+0x8f0>
   38f38:	mov	x0, x26
   38f3c:	mov	x2, #0x0                   	// #0
   38f40:	mov	x1, #0x1                   	// #1
   38f44:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   38f48:	mov	w20, w0
   38f4c:	cbnz	w0, 38fe0 <mpfr_gamma@@Base+0x258>
   38f50:	mov	w3, w19
   38f54:	mov	x0, x27
   38f58:	mov	x2, #0x0                   	// #0
   38f5c:	mov	x1, #0x1                   	// #1
   38f60:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   38f64:	mov	w22, w0
   38f68:	mov	w0, w22
   38f6c:	ldp	x19, x20, [sp, #16]
   38f70:	ldp	x21, x22, [sp, #32]
   38f74:	ldp	x23, x24, [sp, #48]
   38f78:	ldp	x25, x26, [sp, #64]
   38f7c:	ldp	x27, x28, [sp, #80]
   38f80:	ldp	x29, x30, [sp], #448
   38f84:	ret
   38f88:	orr	w1, w1, #0x8
   38f8c:	str	w1, [x5]
   38f90:	mov	w0, w22
   38f94:	ldp	x19, x20, [sp, #16]
   38f98:	ldp	x21, x22, [sp, #32]
   38f9c:	ldp	x25, x26, [sp, #64]
   38fa0:	ldp	x27, x28, [sp, #80]
   38fa4:	ldp	x29, x30, [sp], #448
   38fa8:	ret
   38fac:	mov	w20, #0x0                   	// #0
   38fb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38fb4:	ldr	x1, [x0, #2576]
   38fb8:	add	x0, x0, #0xa10
   38fbc:	blr	x1
   38fc0:	ldr	w0, [x28, x0]
   38fc4:	eor	w20, w20, #0x1
   38fc8:	ldr	w1, [sp, #152]
   38fcc:	tst	w20, w0, lsr #1
   38fd0:	b.eq	38e9c <mpfr_gamma@@Base+0x114>  // b.none
   38fd4:	orr	w1, w1, w0
   38fd8:	str	w1, [sp, #152]
   38fdc:	b	38e9c <mpfr_gamma@@Base+0x114>
   38fe0:	mov	x0, x26
   38fe4:	mov	w1, #0x0                   	// #0
   38fe8:	bl	be50 <mpfr_fits_ulong_p@plt>
   38fec:	cbnz	w0, 39744 <mpfr_gamma@@Base+0x9bc>
   38ff0:	mrs	x28, tpidr_el0
   38ff4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   38ff8:	ldr	x1, [x0, #2576]
   38ffc:	add	x0, x0, #0xa10
   39000:	blr	x1
   39004:	ldr	w24, [x28, x0]
   39008:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3900c:	ldr	x1, [x0, #2512]
   39010:	add	x0, x0, #0x9d0
   39014:	blr	x1
   39018:	ldr	x22, [x28, x0]
   3901c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39020:	ldr	x1, [x0, #2544]
   39024:	add	x0, x0, #0x9f0
   39028:	blr	x1
   3902c:	ldr	x21, [x28, x0]
   39030:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39034:	ldr	x1, [x0, #2512]
   39038:	add	x0, x0, #0x9d0
   3903c:	blr	x1
   39040:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   39044:	str	x1, [x28, x0]
   39048:	add	x4, x28, x0
   3904c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   39050:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39054:	ldr	x2, [x0, #2544]
   39058:	add	x0, x0, #0x9f0
   3905c:	blr	x2
   39060:	str	x1, [x28, x0]
   39064:	str	w24, [sp, #152]
   39068:	cmp	w20, #0x0
   3906c:	stp	x22, x21, [sp, #160]
   39070:	add	x3, x28, x0
   39074:	b.le	39238 <mpfr_gamma@@Base+0x4b0>
   39078:	ldr	x0, [x26, #16]
   3907c:	cmp	x0, #0x19
   39080:	b.le	396b4 <mpfr_gamma@@Base+0x92c>
   39084:	add	x4, sp, #0x140
   39088:	add	x5, sp, #0x148
   3908c:	add	x3, sp, #0x150
   39090:	mov	x2, #0x35                  	// #53
   39094:	add	x22, sp, #0x110
   39098:	add	x20, sp, #0xb0
   3909c:	mov	w21, #0x1                   	// #1
   390a0:	mov	x0, x22
   390a4:	adrp	x1, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   390a8:	add	x1, x1, #0x548
   390ac:	str	x2, [sp, #176]
   390b0:	add	x23, sp, #0xf0
   390b4:	str	w21, [sp, #184]
   390b8:	str	x4, [sp, #200]
   390bc:	str	x2, [sp, #240]
   390c0:	str	w21, [sp, #248]
   390c4:	stp	x5, x2, [sp, #264]
   390c8:	str	w21, [sp, #280]
   390cc:	stp	x3, xzr, [sp, #296]
   390d0:	str	x4, [sp, #312]
   390d4:	bl	c340 <mpfr_set_str_binary@plt>
   390d8:	mov	w3, w21
   390dc:	mov	x2, x22
   390e0:	mov	x0, x20
   390e4:	mov	x1, x26
   390e8:	bl	bd50 <mpfr_mul@plt>
   390ec:	mov	w3, w21
   390f0:	mov	x1, x26
   390f4:	mov	x2, #0x2                   	// #2
   390f8:	mov	x0, x23
   390fc:	bl	c530 <mpfr_sub_ui@plt>
   39100:	mov	w3, w21
   39104:	mov	x1, x20
   39108:	mov	x2, x23
   3910c:	mov	x0, x20
   39110:	bl	bd90 <mpfr_pow@plt>
   39114:	mov	w3, w21
   39118:	mov	x1, x20
   3911c:	mov	x2, x22
   39120:	mov	x0, x20
   39124:	bl	bd50 <mpfr_mul@plt>
   39128:	mov	w3, w21
   3912c:	mov	x1, x20
   39130:	mov	x2, x22
   39134:	mov	x0, x20
   39138:	bl	bd50 <mpfr_mul@plt>
   3913c:	mov	x1, x20
   39140:	mov	w3, w21
   39144:	mov	x2, x26
   39148:	mov	x0, x20
   3914c:	bl	bd50 <mpfr_mul@plt>
   39150:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39154:	ldr	x1, [x0, #2576]
   39158:	add	x0, x0, #0xa10
   3915c:	blr	x1
   39160:	mov	w3, w21
   39164:	mov	x1, x20
   39168:	add	x21, x28, x0
   3916c:	mov	x2, #0x1                   	// #1
   39170:	str	wzr, [x28, x0]
   39174:	mov	x0, x20
   39178:	bl	c2c0 <mpfr_mul_2ui@plt>
   3917c:	ldr	x1, [sp, #304]
   39180:	ldr	w21, [x21]
   39184:	ldr	x20, [sp, #192]
   39188:	cbz	x1, 39194 <mpfr_gamma@@Base+0x40c>
   3918c:	ldr	x0, [sp, #312]
   39190:	bl	cc20 <mpfr_free_func@plt>
   39194:	ldr	w1, [sp, #152]
   39198:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3919c:	ldr	x2, [x0, #2576]
   391a0:	add	x0, x0, #0xa10
   391a4:	blr	x2
   391a8:	str	w1, [x28, x0]
   391ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   391b0:	ldr	x1, [x0, #2512]
   391b4:	add	x0, x0, #0x9d0
   391b8:	blr	x1
   391bc:	ldr	x1, [sp, #160]
   391c0:	str	x1, [x28, x0]
   391c4:	ldr	x1, [sp, #168]
   391c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   391cc:	ldr	x2, [x0, #2544]
   391d0:	add	x0, x0, #0x9f0
   391d4:	blr	x2
   391d8:	str	x1, [x28, x0]
   391dc:	tst	x21, #0x2
   391e0:	ccmp	x1, x20, #0x1, eq  // eq = none
   391e4:	b.lt	39c60 <mpfr_gamma@@Base+0xed8>  // b.tstop
   391e8:	mov	w2, w19
   391ec:	mov	x1, x26
   391f0:	mov	x0, x27
   391f4:	bl	37dd0 <mpfr_powerof2_raw@@Base+0x2c0>
   391f8:	mov	w22, w0
   391fc:	mov	w0, w22
   39200:	ldp	x19, x20, [sp, #16]
   39204:	ldp	x21, x22, [sp, #32]
   39208:	ldp	x23, x24, [sp, #48]
   3920c:	ldp	x25, x26, [sp, #64]
   39210:	ldp	x27, x28, [sp, #80]
   39214:	ldp	x29, x30, [sp], #448
   39218:	ret
   3921c:	mov	x0, x26
   39220:	mov	x2, #0x0                   	// #0
   39224:	mov	x1, #0x1                   	// #1
   39228:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   3922c:	mov	w20, w0
   39230:	cbnz	w0, 38ff0 <mpfr_gamma@@Base+0x268>
   39234:	b	38f50 <mpfr_gamma@@Base+0x1c8>
   39238:	ldr	w0, [x26, #8]
   3923c:	tbnz	w0, #31, 399e0 <mpfr_gamma@@Base+0xc58>
   39240:	cmp	w0, #0x0
   39244:	ldr	x0, [x26]
   39248:	ldr	x2, [x26, #16]
   3924c:	ldr	x9, [x27]
   39250:	sub	x1, x0, x2
   39254:	b.gt	39264 <mpfr_gamma@@Base+0x4dc>
   39258:	cmp	x2, #0x0
   3925c:	add	x1, x0, #0x1
   39260:	b.le	39978 <mpfr_gamma@@Base+0xbf0>
   39264:	cmp	x9, x1
   39268:	add	x21, x0, #0x1
   3926c:	csel	x9, x9, x1, ge  // ge = tcont
   39270:	cmp	x2, #0x1
   39274:	b.le	39984 <mpfr_gamma@@Base+0xbfc>
   39278:	cmp	x21, x9
   3927c:	csel	x21, x21, x9, ge  // ge = tcont
   39280:	cmp	x21, #0x1
   39284:	b.eq	39ba0 <mpfr_gamma@@Base+0xe18>  // b.none
   39288:	b.le	39c7c <mpfr_gamma@@Base+0xef4>
   3928c:	sub	x9, x21, #0x1
   39290:	mov	w0, #0x40                  	// #64
   39294:	clz	x9, x9
   39298:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   3929c:	sub	w9, w0, w9
   392a0:	add	x9, x21, w9, sxtw
   392a4:	add	x1, x9, #0x13
   392a8:	add	x25, x9, #0x14
   392ac:	clz	x1, x1
   392b0:	sub	w0, w0, w1
   392b4:	add	x0, x25, w0, sxtw
   392b8:	add	x22, x0, #0x14
   392bc:	cmp	x22, x2
   392c0:	b.ge	39674 <mpfr_gamma@@Base+0x8ec>  // b.tcont
   392c4:	add	x21, x0, #0x13
   392c8:	asr	x21, x21, #6
   392cc:	add	x21, x21, #0x1
   392d0:	lsl	x0, x21, #2
   392d4:	cmp	x0, #0x10
   392d8:	b.gt	39990 <mpfr_gamma@@Base+0xc08>
   392dc:	add	x0, sp, #0x140
   392e0:	stp	xzr, x0, [sp, #304]
   392e4:	mov	x1, x0
   392e8:	add	x2, x21, x21, lsl #1
   392ec:	add	x3, x1, x21, lsl #3
   392f0:	mov	w20, #0x1                   	// #1
   392f4:	add	x0, sp, #0x88
   392f8:	add	x2, x1, x2, lsl #3
   392fc:	add	x21, x1, x21, lsl #4
   39300:	str	x0, [sp, #112]
   39304:	str	x22, [sp, #176]
   39308:	str	w20, [sp, #184]
   3930c:	stp	x1, x22, [sp, #200]
   39310:	str	w20, [sp, #216]
   39314:	stp	x2, x22, [sp, #232]
   39318:	str	w20, [sp, #248]
   3931c:	stp	x3, x22, [sp, #264]
   39320:	str	w20, [sp, #280]
   39324:	str	x21, [sp, #296]
   39328:	bl	bf90 <mpfr_mpz_init@plt>
   3932c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   39330:	cmp	x25, x0
   39334:	ldr	x1, [sp, #304]
   39338:	b.ge	39674 <mpfr_gamma@@Base+0x8ec>  // b.tcont
   3933c:	add	x0, sp, #0x98
   39340:	add	x23, sp, #0x110
   39344:	add	x21, sp, #0xb0
   39348:	add	x24, sp, #0xd0
   3934c:	str	x0, [sp, #120]
   39350:	add	x0, sp, #0xf0
   39354:	str	x0, [sp, #96]
   39358:	mov	x0, #0x40                  	// #64
   3935c:	str	x0, [sp, #104]
   39360:	sub	x22, x25, #0x1
   39364:	asr	x22, x22, #6
   39368:	add	x22, x22, #0x1
   3936c:	lsl	x2, x22, #5
   39370:	str	x2, [sp, #304]
   39374:	cbnz	x1, 39594 <mpfr_gamma@@Base+0x80c>
   39378:	mov	x0, x2
   3937c:	bl	ccf0 <mpfr_allocate_func@plt>
   39380:	str	x0, [sp, #312]
   39384:	add	x4, x22, x22, lsl #1
   39388:	add	x5, x0, x22, lsl #3
   3938c:	mov	w3, #0x0                   	// #0
   39390:	add	x22, x0, x22, lsl #4
   39394:	add	x4, x0, x4, lsl #3
   39398:	mov	x2, x26
   3939c:	mov	x1, #0x2                   	// #2
   393a0:	str	x25, [sp, #176]
   393a4:	str	w20, [sp, #184]
   393a8:	stp	x0, x25, [sp, #200]
   393ac:	mov	x0, x21
   393b0:	str	w20, [sp, #216]
   393b4:	stp	x4, x25, [sp, #232]
   393b8:	str	w20, [sp, #248]
   393bc:	stp	x5, x25, [sp, #264]
   393c0:	str	w20, [sp, #280]
   393c4:	str	x22, [sp, #296]
   393c8:	bl	ca50 <mpfr_ui_sub@plt>
   393cc:	ldr	x0, [sp, #96]
   393d0:	mov	x1, x21
   393d4:	mov	w2, #0x0                   	// #0
   393d8:	bl	38d88 <mpfr_gamma@@Base>
   393dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   393e0:	ldr	x1, [x0, #2624]
   393e4:	add	x0, x0, #0xa40
   393e8:	blr	x1
   393ec:	mov	w2, #0x0                   	// #0
   393f0:	add	x1, x28, x0
   393f4:	mov	x0, x23
   393f8:	bl	c380 <mpfr_cache@plt>
   393fc:	mov	w3, #0x0                   	// #0
   39400:	mov	x2, x21
   39404:	mov	x1, x23
   39408:	mov	x0, x24
   3940c:	bl	bd50 <mpfr_mul@plt>
   39410:	mov	x1, x24
   39414:	mov	x0, x24
   39418:	mov	w2, #0x0                   	// #0
   3941c:	ldr	x22, [sp, #224]
   39420:	bl	c450 <mpfr_sin@plt>
   39424:	ldr	x0, [sp, #256]
   39428:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3942c:	cmp	x0, x1
   39430:	b.eq	39618 <mpfr_gamma@@Base+0x890>  // b.none
   39434:	ldr	x0, [sp, #224]
   39438:	add	x22, x22, #0x1
   3943c:	mov	x1, x26
   39440:	mov	w3, #0x0                   	// #0
   39444:	sub	x22, x22, x0
   39448:	mov	x2, #0x1                   	// #1
   3944c:	mov	x0, x21
   39450:	bl	c530 <mpfr_sub_ui@plt>
   39454:	mov	x2, x21
   39458:	mov	x1, x23
   3945c:	mov	w3, #0x0                   	// #0
   39460:	mov	x0, x21
   39464:	bl	bd50 <mpfr_mul@plt>
   39468:	ldr	x2, [sp, #96]
   3946c:	mov	x1, x24
   39470:	mov	w3, #0x0                   	// #0
   39474:	mov	x0, x24
   39478:	bl	bd50 <mpfr_mul@plt>
   3947c:	mov	x1, x21
   39480:	mov	x2, x24
   39484:	mov	x0, x24
   39488:	mov	w3, #0x0                   	// #0
   3948c:	bl	c620 <mpfr_div@plt>
   39490:	ldr	x0, [sp, #224]
   39494:	cmp	x22, #0x2
   39498:	mov	x1, #0x2                   	// #2
   3949c:	csel	x22, x22, x1, ge  // ge = tcont
   394a0:	add	x22, x22, #0x4
   394a4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   394a8:	cmp	x0, x1
   394ac:	b.le	3963c <mpfr_gamma@@Base+0x8b4>
   394b0:	ldr	x1, [sp, #208]
   394b4:	cmp	w19, #0x0
   394b8:	ldr	x0, [sp, #232]
   394bc:	sub	x1, x1, #0x1
   394c0:	ldr	x3, [x27]
   394c4:	asr	x1, x1, #6
   394c8:	sub	x2, x25, x22
   394cc:	add	x1, x1, #0x1
   394d0:	cinc	x3, x3, eq  // eq = none
   394d4:	bl	c370 <mpfr_round_p@plt>
   394d8:	cbz	w0, 3963c <mpfr_gamma@@Base+0x8b4>
   394dc:	ldr	w3, [sp, #216]
   394e0:	mov	x1, x24
   394e4:	mov	w2, w19
   394e8:	mov	x0, x27
   394ec:	bl	c6a0 <mpfr_set4@plt>
   394f0:	mov	w22, w0
   394f4:	ldr	x1, [sp, #304]
   394f8:	cbz	x1, 39504 <mpfr_gamma@@Base+0x77c>
   394fc:	ldr	x0, [sp, #312]
   39500:	bl	cc20 <mpfr_free_func@plt>
   39504:	ldr	x0, [sp, #112]
   39508:	bl	c170 <mpfr_mpz_clear@plt>
   3950c:	ldp	x3, x4, [sp, #160]
   39510:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39514:	ldr	x2, [x0, #2576]
   39518:	add	x0, x0, #0xa10
   3951c:	blr	x2
   39520:	ldr	w1, [sp, #152]
   39524:	add	x5, x28, x0
   39528:	str	w1, [x28, x0]
   3952c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39530:	ldr	x2, [x0, #2512]
   39534:	add	x0, x0, #0x9d0
   39538:	blr	x2
   3953c:	ldr	x2, [x27, #16]
   39540:	str	x3, [x28, x0]
   39544:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39548:	ldr	x6, [x0, #2544]
   3954c:	add	x0, x0, #0x9f0
   39550:	blr	x6
   39554:	str	x4, [x28, x0]
   39558:	cmp	x4, x2
   3955c:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   39560:	b.le	39580 <mpfr_gamma@@Base+0x7f8>
   39564:	mov	w1, w22
   39568:	mov	w2, w19
   3956c:	mov	x0, x27
   39570:	bl	cb30 <mpfr_check_range@plt>
   39574:	mov	w22, w0
   39578:	ldp	x23, x24, [sp, #48]
   3957c:	b	38f04 <mpfr_gamma@@Base+0x17c>
   39580:	cbz	w22, 396d8 <mpfr_gamma@@Base+0x950>
   39584:	orr	w1, w1, #0x8
   39588:	ldp	x23, x24, [sp, #48]
   3958c:	str	w1, [x5]
   39590:	b	38f04 <mpfr_gamma@@Base+0x17c>
   39594:	ldr	x0, [sp, #312]
   39598:	bl	c1c0 <mpfr_reallocate_func@plt>
   3959c:	str	x0, [sp, #312]
   395a0:	b	39384 <mpfr_gamma@@Base+0x5fc>
   395a4:	mov	x0, #0x2                   	// #2
   395a8:	movk	x0, #0x8000, lsl #48
   395ac:	cmp	x2, x0
   395b0:	b.eq	399a8 <mpfr_gamma@@Base+0xc20>  // b.none
   395b4:	cmp	x2, x1
   395b8:	b.ne	3970c <mpfr_gamma@@Base+0x984>  // b.any
   395bc:	ldr	w0, [x26, #8]
   395c0:	tbnz	w0, #31, 399a8 <mpfr_gamma@@Base+0xc20>
   395c4:	mov	w0, #0x1                   	// #1
   395c8:	mov	w22, #0x0                   	// #0
   395cc:	str	w0, [x27, #8]
   395d0:	str	x2, [x27, #16]
   395d4:	b	38f04 <mpfr_gamma@@Base+0x17c>
   395d8:	and	w0, w19, #0xfffffffd
   395dc:	cmp	w0, #0x1
   395e0:	b.ne	38e5c <mpfr_gamma@@Base+0xd4>  // b.any
   395e4:	mov	x0, x26
   395e8:	bl	bf00 <mpfr_powerof2_raw@plt>
   395ec:	cmp	w0, #0x0
   395f0:	mov	x2, x26
   395f4:	mov	w3, w19
   395f8:	cset	w20, ne  // ne = any
   395fc:	mov	x0, x27
   39600:	mov	x1, #0x1                   	// #1
   39604:	str	wzr, [x22]
   39608:	bl	c2f0 <mpfr_ui_div@plt>
   3960c:	mov	w22, w0
   39610:	cbz	w0, 396ec <mpfr_gamma@@Base+0x964>
   39614:	b	38fb0 <mpfr_gamma@@Base+0x228>
   39618:	ldr	x3, [sp, #96]
   3961c:	mov	w5, w19
   39620:	ldr	x2, [sp, #120]
   39624:	mov	x4, x23
   39628:	mov	x1, x26
   3962c:	mov	x0, x27
   39630:	bl	37b28 <mpfr_powerof2_raw@@Base+0x18>
   39634:	mov	w22, w0
   39638:	cbnz	w0, 394f4 <mpfr_gamma@@Base+0x76c>
   3963c:	ldr	x1, [sp, #104]
   39640:	mov	x0, #0xfffffffffffffeff    	// #-257
   39644:	movk	x0, #0x7fff, lsl #48
   39648:	sub	x0, x0, x25
   3964c:	cmp	x0, x1
   39650:	b.lt	39bac <mpfr_gamma@@Base+0xe24>  // b.tstop
   39654:	add	x25, x25, x1
   39658:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3965c:	cmp	x25, x0
   39660:	add	x0, x25, x25, lsr #63
   39664:	ldr	x1, [sp, #304]
   39668:	asr	x0, x0, #1
   3966c:	str	x0, [sp, #104]
   39670:	b.lt	39360 <mpfr_gamma@@Base+0x5d8>  // b.tstop
   39674:	bl	c8e0 <mpfr_abort_prec_max@plt>
   39678:	mrs	x1, tpidr_el0
   3967c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39680:	ldr	x2, [x0, #2576]
   39684:	add	x0, x0, #0xa10
   39688:	blr	x2
   3968c:	add	x0, x1, x0
   39690:	mov	x1, #0x2                   	// #2
   39694:	movk	x1, #0x8000, lsl #48
   39698:	mov	w22, #0x0                   	// #0
   3969c:	ldp	x23, x24, [sp, #48]
   396a0:	str	x1, [x27, #16]
   396a4:	ldr	w1, [x0]
   396a8:	orr	w1, w1, #0x4
   396ac:	str	w1, [x0]
   396b0:	b	38f04 <mpfr_gamma@@Base+0x17c>
   396b4:	mov	w2, w19
   396b8:	mov	x1, x26
   396bc:	mov	x0, x27
   396c0:	str	x22, [x4]
   396c4:	str	x21, [x3]
   396c8:	bl	37dd0 <mpfr_powerof2_raw@@Base+0x2c0>
   396cc:	mov	w22, w0
   396d0:	ldp	x23, x24, [sp, #48]
   396d4:	b	38f04 <mpfr_gamma@@Base+0x17c>
   396d8:	ldp	x23, x24, [sp, #48]
   396dc:	b	38f04 <mpfr_gamma@@Base+0x17c>
   396e0:	cmp	w20, #0x0
   396e4:	ccmp	w19, #0x1, #0x0, lt  // lt = tstop
   396e8:	b.eq	38e94 <mpfr_gamma@@Base+0x10c>  // b.none
   396ec:	cmp	w21, #0x0
   396f0:	ccmp	w19, #0x4, #0x0, ne  // ne = any
   396f4:	b.eq	38e94 <mpfr_gamma@@Base+0x10c>  // b.none
   396f8:	mov	x0, x27
   396fc:	bl	bdd0 <mpfr_nextbelow@plt>
   39700:	ldr	w1, [sp, #152]
   39704:	mov	w22, #0xffffffff            	// #-1
   39708:	b	38e9c <mpfr_gamma@@Base+0x114>
   3970c:	mrs	x2, tpidr_el0
   39710:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39714:	ldr	x3, [x0, #2576]
   39718:	add	x0, x0, #0xa10
   3971c:	blr	x3
   39720:	add	x0, x2, x0
   39724:	ldr	w2, [x26, #8]
   39728:	str	x1, [x27, #16]
   3972c:	mov	w22, #0x0                   	// #0
   39730:	str	w2, [x27, #8]
   39734:	ldr	w1, [x0]
   39738:	orr	w1, w1, #0x20
   3973c:	str	w1, [x0]
   39740:	b	38f04 <mpfr_gamma@@Base+0x17c>
   39744:	ldr	x2, [x27]
   39748:	mov	w1, #0x0                   	// #0
   3974c:	mov	x0, x26
   39750:	str	x2, [sp, #96]
   39754:	mrs	x28, tpidr_el0
   39758:	bl	bca0 <mpfr_get_ui@plt>
   3975c:	mov	x2, x0
   39760:	mov	x1, #0x68d8                	// #26840
   39764:	movk	x1, #0x2ab, lsl #16
   39768:	cmp	x0, x1
   3976c:	b.hi	38ff4 <mpfr_gamma@@Base+0x26c>  // b.pmore
   39770:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39774:	ldr	x1, [x0, #2576]
   39778:	add	x0, x0, #0xa10
   3977c:	blr	x1
   39780:	ldr	w24, [x28, x0]
   39784:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39788:	ldr	x1, [x0, #2512]
   3978c:	add	x0, x0, #0x9d0
   39790:	blr	x1
   39794:	add	x3, x28, x0
   39798:	ldr	x22, [x28, x0]
   3979c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   397a0:	ldr	x5, [x0, #2544]
   397a4:	add	x0, x0, #0x9f0
   397a8:	blr	x5
   397ac:	add	x5, sp, #0x130
   397b0:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   397b4:	sub	x25, x2, #0x1
   397b8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   397bc:	add	x23, sp, #0x110
   397c0:	mov	x1, #0x26                  	// #38
   397c4:	str	x4, [x3]
   397c8:	str	x5, [sp, #104]
   397cc:	ldr	x21, [x28, x0]
   397d0:	str	x2, [x28, x0]
   397d4:	mov	x0, x23
   397d8:	bl	ca80 <mpfr_init2@plt>
   397dc:	ldr	x5, [sp, #104]
   397e0:	mov	x1, #0x26                  	// #38
   397e4:	mov	x0, x5
   397e8:	bl	ca80 <mpfr_init2@plt>
   397ec:	mov	w3, #0x1                   	// #1
   397f0:	mov	x2, #0x0                   	// #0
   397f4:	mov	x1, x25
   397f8:	mov	x0, x23
   397fc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   39800:	ldr	x5, [sp, #104]
   39804:	adrp	x1, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39808:	add	x1, x1, #0x520
   3980c:	mov	x0, x5
   39810:	bl	c340 <mpfr_set_str_binary@plt>
   39814:	ldr	x5, [sp, #104]
   39818:	mov	x1, x23
   3981c:	mov	w3, #0x1                   	// #1
   39820:	mov	x0, x23
   39824:	mov	x2, x5
   39828:	bl	c620 <mpfr_div@plt>
   3982c:	mov	x1, x23
   39830:	mov	w3, #0x1                   	// #1
   39834:	mov	x2, x25
   39838:	mov	x0, x23
   3983c:	bl	bf70 <mpfr_pow_ui@plt>
   39840:	ldr	x5, [sp, #104]
   39844:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39848:	ldr	x1, [x0, #2624]
   3984c:	add	x0, x0, #0xa40
   39850:	blr	x1
   39854:	mov	w2, #0x1                   	// #1
   39858:	add	x1, x28, x0
   3985c:	mov	x0, x5
   39860:	bl	c380 <mpfr_cache@plt>
   39864:	ldr	x5, [sp, #104]
   39868:	mov	w3, #0x1                   	// #1
   3986c:	lsl	x2, x25, #1
   39870:	mov	x1, x5
   39874:	mov	x0, x5
   39878:	bl	ba50 <mpfr_mul_ui@plt>
   3987c:	ldr	x5, [sp, #104]
   39880:	mov	w2, #0x1                   	// #1
   39884:	mov	x1, x5
   39888:	mov	x0, x5
   3988c:	bl	c930 <mpfr_sqrt@plt>
   39890:	ldr	x5, [sp, #104]
   39894:	mov	w3, #0x1                   	// #1
   39898:	mov	x1, x23
   3989c:	mov	x0, x23
   398a0:	mov	x2, x5
   398a4:	bl	bd50 <mpfr_mul@plt>
   398a8:	mov	w2, #0x1                   	// #1
   398ac:	mov	x1, x23
   398b0:	mov	x0, x23
   398b4:	bl	c1d0 <mpfr_log2@plt>
   398b8:	mov	x0, x23
   398bc:	mov	w1, #0x2                   	// #2
   398c0:	bl	bca0 <mpfr_get_ui@plt>
   398c4:	mov	x2, x0
   398c8:	cmp	x25, #0x1
   398cc:	ldr	x5, [sp, #104]
   398d0:	b.eq	398f4 <mpfr_gamma@@Base+0xb6c>  // b.none
   398d4:	lsr	x0, x25, #1
   398d8:	mov	x1, #0x2                   	// #2
   398dc:	b	398e4 <mpfr_gamma@@Base+0xb5c>
   398e0:	udiv	x0, x25, x1
   398e4:	lsl	x1, x1, #1
   398e8:	sub	x2, x2, x0
   398ec:	cmp	x25, x1
   398f0:	b.cs	398e0 <mpfr_gamma@@Base+0xb58>  // b.hs, b.nlast
   398f4:	mov	x0, x23
   398f8:	stp	x2, x5, [sp, #104]
   398fc:	bl	c070 <mpfr_clear@plt>
   39900:	ldr	x5, [sp, #112]
   39904:	mov	x0, x5
   39908:	bl	c070 <mpfr_clear@plt>
   3990c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39910:	ldr	x1, [x0, #2576]
   39914:	add	x0, x0, #0xa10
   39918:	blr	x1
   3991c:	str	w24, [x28, x0]
   39920:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39924:	ldr	x1, [x0, #2512]
   39928:	add	x0, x0, #0x9d0
   3992c:	blr	x1
   39930:	str	x22, [x28, x0]
   39934:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39938:	ldr	x1, [x0, #2544]
   3993c:	add	x0, x0, #0x9f0
   39940:	blr	x1
   39944:	str	x21, [x28, x0]
   39948:	ldp	x0, x2, [sp, #96]
   3994c:	cmp	w19, #0x0
   39950:	cinc	x0, x0, eq  // eq = none
   39954:	cmp	x0, x2
   39958:	b.cc	39030 <mpfr_gamma@@Base+0x2a8>  // b.lo, b.ul, b.last
   3995c:	mov	w2, w19
   39960:	mov	x1, x25
   39964:	mov	x0, x27
   39968:	bl	c6e0 <mpfr_fac_ui@plt>
   3996c:	mov	w22, w0
   39970:	ldp	x23, x24, [sp, #48]
   39974:	b	38f04 <mpfr_gamma@@Base+0x17c>
   39978:	sub	x1, x1, x2
   3997c:	cmp	x1, x9
   39980:	csel	x9, x1, x9, ge  // ge = tcont
   39984:	add	x21, x0, #0x2
   39988:	sub	x21, x21, x2
   3998c:	b	39278 <mpfr_gamma@@Base+0x4f0>
   39990:	lsl	x0, x21, #5
   39994:	str	x0, [sp, #304]
   39998:	bl	ccf0 <mpfr_allocate_func@plt>
   3999c:	mov	x1, x0
   399a0:	str	x0, [sp, #312]
   399a4:	b	392e8 <mpfr_gamma@@Base+0x560>
   399a8:	mrs	x1, tpidr_el0
   399ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   399b0:	ldr	x2, [x0, #2576]
   399b4:	add	x0, x0, #0xa10
   399b8:	blr	x2
   399bc:	add	x0, x1, x0
   399c0:	mov	x1, #0x2                   	// #2
   399c4:	movk	x1, #0x8000, lsl #48
   399c8:	str	x1, [x27, #16]
   399cc:	mov	w22, #0x0                   	// #0
   399d0:	ldr	w1, [x0]
   399d4:	orr	w1, w1, #0x4
   399d8:	str	w1, [x0]
   399dc:	b	38f04 <mpfr_gamma@@Base+0x17c>
   399e0:	add	x21, sp, #0xb0
   399e4:	add	x22, sp, #0xf0
   399e8:	mov	x0, x21
   399ec:	mov	x1, #0x35                  	// #53
   399f0:	str	x22, [sp, #96]
   399f4:	bl	ca80 <mpfr_init2@plt>
   399f8:	add	x23, sp, #0x110
   399fc:	mov	x0, x22
   39a00:	mov	x1, #0x35                  	// #53
   39a04:	bl	ca80 <mpfr_init2@plt>
   39a08:	mov	x0, x23
   39a0c:	mov	x1, #0x35                  	// #53
   39a10:	bl	ca80 <mpfr_init2@plt>
   39a14:	mov	w3, #0x3                   	// #3
   39a18:	mov	x2, x26
   39a1c:	mov	x1, #0x2                   	// #2
   39a20:	mov	x0, x21
   39a24:	bl	ca50 <mpfr_ui_sub@plt>
   39a28:	mov	x1, x21
   39a2c:	mov	w2, #0x3                   	// #3
   39a30:	mov	x0, x21
   39a34:	bl	c090 <mpfr_log@plt>
   39a38:	mov	x1, x21
   39a3c:	mov	w3, #0x3                   	// #3
   39a40:	mov	x2, #0x1                   	// #1
   39a44:	mov	x0, x21
   39a48:	bl	c530 <mpfr_sub_ui@plt>
   39a4c:	mov	w3, #0x2                   	// #2
   39a50:	mov	x1, x21
   39a54:	mov	x2, x26
   39a58:	mov	x0, x21
   39a5c:	bl	bd50 <mpfr_mul@plt>
   39a60:	ldr	x1, [x26]
   39a64:	mov	x0, x22
   39a68:	ldr	x2, [x26, #16]
   39a6c:	add	x20, x1, #0x2
   39a70:	cmp	x2, #0x1
   39a74:	sub	x20, x20, x2
   39a78:	csinc	x1, x20, x1, le
   39a7c:	add	x20, x1, #0x11
   39a80:	mov	x1, x20
   39a84:	bl	bed0 <mpfr_set_prec@plt>
   39a88:	mov	x1, x20
   39a8c:	mov	x0, x23
   39a90:	bl	bed0 <mpfr_set_prec@plt>
   39a94:	mov	x1, #0x2                   	// #2
   39a98:	mov	w3, #0x0                   	// #0
   39a9c:	mov	x2, x26
   39aa0:	mov	x0, x22
   39aa4:	bl	ca50 <mpfr_ui_sub@plt>
   39aa8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39aac:	ldr	x1, [x0, #2624]
   39ab0:	add	x0, x0, #0xa40
   39ab4:	blr	x1
   39ab8:	mov	w2, #0x0                   	// #0
   39abc:	add	x1, x28, x0
   39ac0:	mov	x0, x23
   39ac4:	bl	c380 <mpfr_cache@plt>
   39ac8:	mov	w3, #0x0                   	// #0
   39acc:	mov	x2, x22
   39ad0:	mov	x1, x23
   39ad4:	mov	x0, x23
   39ad8:	bl	bd50 <mpfr_mul@plt>
   39adc:	mov	x1, x23
   39ae0:	mov	x0, x22
   39ae4:	mov	w2, #0x0                   	// #0
   39ae8:	bl	c450 <mpfr_sin@plt>
   39aec:	ldr	x0, [sp, #256]
   39af0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   39af4:	cmp	x0, x1
   39af8:	b.ge	39b98 <mpfr_gamma@@Base+0xe10>  // b.tcont
   39afc:	mov	x1, #0x2                   	// #2
   39b00:	mov	w20, #0x0                   	// #0
   39b04:	movk	x1, #0x8000, lsl #48
   39b08:	cmp	x0, x1
   39b0c:	b.eq	39c58 <mpfr_gamma@@Base+0xed0>  // b.none
   39b10:	ldr	x22, [sp, #96]
   39b14:	mov	w3, #0x1                   	// #1
   39b18:	mov	w2, #0x0                   	// #0
   39b1c:	mov	x1, x22
   39b20:	mov	x0, x22
   39b24:	bl	c6a0 <mpfr_set4@plt>
   39b28:	mov	x1, x23
   39b2c:	mov	w3, #0x2                   	// #2
   39b30:	mov	x2, #0x3                   	// #3
   39b34:	mov	x0, x23
   39b38:	bl	ba50 <mpfr_mul_ui@plt>
   39b3c:	mov	x1, x23
   39b40:	mov	w3, #0x2                   	// #2
   39b44:	mov	x2, #0x1                   	// #1
   39b48:	mov	x0, x23
   39b4c:	bl	c260 <mpfr_add_ui@plt>
   39b50:	ldr	x2, [sp, #240]
   39b54:	mov	w3, #0x2                   	// #2
   39b58:	mov	x1, x23
   39b5c:	mov	x0, x23
   39b60:	bl	c8f0 <mpfr_div_2ui@plt>
   39b64:	mov	x1, x22
   39b68:	mov	x0, x23
   39b6c:	mov	w2, #0x1                   	// #1
   39b70:	bl	c9a0 <mpfr_cmp3@plt>
   39b74:	tbnz	w0, #31, 39bc4 <mpfr_gamma@@Base+0xe3c>
   39b78:	mov	x0, x21
   39b7c:	bl	c070 <mpfr_clear@plt>
   39b80:	mov	x0, x22
   39b84:	bl	c070 <mpfr_clear@plt>
   39b88:	mov	x0, x23
   39b8c:	bl	c070 <mpfr_clear@plt>
   39b90:	ldr	w0, [x26, #8]
   39b94:	b	39240 <mpfr_gamma@@Base+0x4b8>
   39b98:	ldr	w20, [sp, #248]
   39b9c:	b	39b10 <mpfr_gamma@@Base+0xd88>
   39ba0:	mov	x22, #0x2e                  	// #46
   39ba4:	mov	x25, #0x15                  	// #21
   39ba8:	b	392dc <mpfr_gamma@@Base+0x554>
   39bac:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   39bb0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39bb4:	add	x2, x2, #0xe90
   39bb8:	add	x0, x0, #0x590
   39bbc:	mov	w1, #0x1d2                 	// #466
   39bc0:	bl	cb40 <mpfr_assert_fail@plt>
   39bc4:	ldr	x22, [sp, #96]
   39bc8:	mov	x2, x23
   39bcc:	mov	w3, #0x1                   	// #1
   39bd0:	mov	x1, x22
   39bd4:	mov	x0, x22
   39bd8:	bl	bb70 <mpfr_sub@plt>
   39bdc:	mov	w3, #0x2                   	// #2
   39be0:	mov	x2, x22
   39be4:	mov	x1, #0xc                   	// #12
   39be8:	mov	x0, x22
   39bec:	bl	c2f0 <mpfr_ui_div@plt>
   39bf0:	mov	x1, x22
   39bf4:	mov	w2, #0x2                   	// #2
   39bf8:	mov	x0, x22
   39bfc:	bl	c1d0 <mpfr_log2@plt>
   39c00:	mov	w3, #0x2                   	// #2
   39c04:	mov	x2, x21
   39c08:	mov	x1, x22
   39c0c:	mov	x0, x21
   39c10:	bl	c1a0 <mpfr_add@plt>
   39c14:	ldr	x1, [sp, #160]
   39c18:	mov	x2, #0x0                   	// #0
   39c1c:	mov	x0, x21
   39c20:	sub	x1, x1, #0x2
   39c24:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   39c28:	mov	w1, w0
   39c2c:	mov	x0, x21
   39c30:	mov	w21, w1
   39c34:	bl	c070 <mpfr_clear@plt>
   39c38:	mov	x0, x22
   39c3c:	bl	c070 <mpfr_clear@plt>
   39c40:	mov	x0, x23
   39c44:	bl	c070 <mpfr_clear@plt>
   39c48:	cmp	w21, #0x0
   39c4c:	b.le	39c94 <mpfr_gamma@@Base+0xf0c>
   39c50:	ldr	w0, [x26, #8]
   39c54:	b	39240 <mpfr_gamma@@Base+0x4b8>
   39c58:	bl	bc90 <mpfr_set_erangeflag@plt>
   39c5c:	b	39b10 <mpfr_gamma@@Base+0xd88>
   39c60:	mov	w1, w19
   39c64:	mov	x0, x27
   39c68:	mov	w2, #0x1                   	// #1
   39c6c:	bl	bf40 <mpfr_overflow@plt>
   39c70:	mov	w22, w0
   39c74:	ldp	x23, x24, [sp, #48]
   39c78:	b	38f04 <mpfr_gamma@@Base+0x17c>
   39c7c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39c80:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39c84:	add	x2, x2, #0x580
   39c88:	add	x0, x0, #0x590
   39c8c:	mov	w1, #0x18f                 	// #399
   39c90:	bl	cb40 <mpfr_assert_fail@plt>
   39c94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39c98:	ldr	x1, [x0, #2576]
   39c9c:	add	x0, x0, #0xa10
   39ca0:	blr	x1
   39ca4:	neg	w2, w20
   39ca8:	ldr	w1, [sp, #152]
   39cac:	str	w1, [x28, x0]
   39cb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39cb4:	ldr	x1, [x0, #2512]
   39cb8:	add	x0, x0, #0x9d0
   39cbc:	blr	x1
   39cc0:	ldp	x1, x3, [sp, #160]
   39cc4:	str	x1, [x28, x0]
   39cc8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39ccc:	ldr	x1, [x0, #2544]
   39cd0:	add	x0, x0, #0x9f0
   39cd4:	blr	x1
   39cd8:	str	x3, [x28, x0]
   39cdc:	cmp	w19, #0x0
   39ce0:	mov	x0, x27
   39ce4:	csinc	w1, w19, wzr, ne  // ne = any
   39ce8:	bl	c3c0 <mpfr_underflow@plt>
   39cec:	mov	w22, w0
   39cf0:	ldp	x23, x24, [sp, #48]
   39cf4:	b	38f04 <mpfr_gamma@@Base+0x17c>

0000000000039cf8 <mpfr_set_ld@@Base>:
   39cf8:	stp	x29, x30, [sp, #-208]!
   39cfc:	mov	x29, sp
   39d00:	stp	x25, x26, [sp, #64]
   39d04:	str	q0, [sp, #96]
   39d08:	ldp	x26, x25, [sp, #96]
   39d0c:	stp	x19, x20, [sp, #16]
   39d10:	str	x0, [sp, #112]
   39d14:	mov	w0, #0x7fff                	// #32767
   39d18:	str	w1, [sp, #120]
   39d1c:	ubfx	x1, x25, #48, #15
   39d20:	cmp	w1, w0
   39d24:	b.eq	3a578 <mpfr_set_ld@@Base+0x880>  // b.none
   39d28:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39d2c:	add	x0, x0, #0x5a0
   39d30:	stp	x26, x25, [sp, #96]
   39d34:	ldr	q1, [x0]
   39d38:	ldr	q0, [sp, #96]
   39d3c:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   39d40:	cmp	w0, #0x0
   39d44:	b.gt	3a63c <mpfr_set_ld@@Base+0x944>
   39d48:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39d4c:	add	x0, x0, #0x5b0
   39d50:	stp	x26, x25, [sp, #96]
   39d54:	ldr	q1, [x0]
   39d58:	ldr	q0, [sp, #96]
   39d5c:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   39d60:	tbnz	w0, #31, 3a660 <mpfr_set_ld@@Base+0x968>
   39d64:	movi	v1.2d, #0x0
   39d68:	stp	x26, x25, [sp, #96]
   39d6c:	ldr	q0, [sp, #96]
   39d70:	bl	5c660 <mpfr_free_pool@@Base+0xbb8>
   39d74:	cbz	w0, 3a60c <mpfr_set_ld@@Base+0x914>
   39d78:	stp	x23, x24, [sp, #48]
   39d7c:	add	x23, sp, #0x90
   39d80:	mov	x0, x23
   39d84:	mov	x1, #0x71                  	// #113
   39d88:	stp	x21, x22, [sp, #32]
   39d8c:	stp	x27, x28, [sp, #80]
   39d90:	bl	ca80 <mpfr_init2@plt>
   39d94:	add	x28, sp, #0xb0
   39d98:	mrs	x27, tpidr_el0
   39d9c:	mov	x0, x28
   39da0:	mov	x1, #0x35                  	// #53
   39da4:	bl	ca80 <mpfr_init2@plt>
   39da8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   39dac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39db0:	ldr	x1, [x0, #2576]
   39db4:	add	x0, x0, #0xa10
   39db8:	blr	x1
   39dbc:	ldr	w0, [x27, x0]
   39dc0:	str	w0, [sp, #124]
   39dc4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39dc8:	ldr	x1, [x0, #2512]
   39dcc:	add	x0, x0, #0x9d0
   39dd0:	blr	x1
   39dd4:	add	x2, x27, x0
   39dd8:	ldr	x0, [x27, x0]
   39ddc:	str	x0, [sp, #128]
   39de0:	str	x3, [x2]
   39de4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   39de8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   39dec:	ldr	x4, [x0, #2544]
   39df0:	add	x0, x0, #0x9f0
   39df4:	blr	x4
   39df8:	ldr	x2, [x27, x0]
   39dfc:	str	x1, [x27, x0]
   39e00:	str	x2, [sp, #136]
   39e04:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39e08:	mov	x20, x26
   39e0c:	mov	x19, x25
   39e10:	mov	w24, #0x0                   	// #0
   39e14:	str	x0, [sp, #160]
   39e18:	b	39f44 <mpfr_set_ld@@Base+0x24c>
   39e1c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39e20:	add	x0, x0, #0x5d0
   39e24:	stp	x20, x19, [sp, #96]
   39e28:	ldr	q1, [x0]
   39e2c:	ldr	q0, [sp, #96]
   39e30:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   39e34:	tbnz	w0, #31, 39f64 <mpfr_set_ld@@Base+0x26c>
   39e38:	stp	x20, x19, [sp, #96]
   39e3c:	eor	x21, x19, #0x8000000000000000
   39e40:	movi	v1.2d, #0x0
   39e44:	ldr	q0, [sp, #96]
   39e48:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   39e4c:	cmp	w0, #0x0
   39e50:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39e54:	add	x0, x0, #0x650
   39e58:	csel	x21, x21, x19, lt  // lt = tstop
   39e5c:	stp	x20, x21, [sp, #96]
   39e60:	ldr	q1, [x0]
   39e64:	ldr	q0, [sp, #96]
   39e68:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   39e6c:	str	x20, [sp, #96]
   39e70:	tbz	w0, #31, 3a310 <mpfr_set_ld@@Base+0x618>
   39e74:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39e78:	add	x0, x0, #0x5f0
   39e7c:	str	x21, [sp, #104]
   39e80:	ldr	q1, [x0]
   39e84:	ldr	q0, [sp, #96]
   39e88:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   39e8c:	cmp	w0, #0x0
   39e90:	b.le	3a4ac <mpfr_set_ld@@Base+0x7b4>
   39e94:	movi	v1.2d, #0x0
   39e98:	stp	x20, x19, [sp, #96]
   39e9c:	ldr	q0, [sp, #96]
   39ea0:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   39ea4:	str	x20, [sp, #96]
   39ea8:	tbnz	w0, #31, 3a37c <mpfr_set_ld@@Base+0x684>
   39eac:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39eb0:	add	x0, x0, #0x610
   39eb4:	str	x19, [sp, #104]
   39eb8:	ldr	q1, [x0]
   39ebc:	ldr	q0, [sp, #96]
   39ec0:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   39ec4:	cmp	w0, #0x0
   39ec8:	b.le	3a470 <mpfr_set_ld@@Base+0x778>
   39ecc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39ed0:	add	x0, x0, #0x630
   39ed4:	stp	x20, x19, [sp, #96]
   39ed8:	mov	x21, x19
   39edc:	ldr	q1, [x0]
   39ee0:	ldr	q0, [sp, #96]
   39ee4:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   39ee8:	cmp	w0, #0x0
   39eec:	b.le	3a524 <mpfr_set_ld@@Base+0x82c>
   39ef0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39ef4:	add	x0, x0, #0x650
   39ef8:	stp	x20, x19, [sp, #96]
   39efc:	ldr	q1, [x0]
   39f00:	ldr	q0, [sp, #96]
   39f04:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   39f08:	cmp	w0, #0x0
   39f0c:	b.le	3a4e8 <mpfr_set_ld@@Base+0x7f0>
   39f10:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39f14:	add	x0, x0, #0x670
   39f18:	stp	x20, x21, [sp, #96]
   39f1c:	ldr	q1, [x0]
   39f20:	ldr	q0, [sp, #96]
   39f24:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   39f28:	cmp	w0, #0x0
   39f2c:	b.le	3a434 <mpfr_set_ld@@Base+0x73c>
   39f30:	movi	v1.2d, #0x0
   39f34:	stp	x20, x19, [sp, #96]
   39f38:	ldr	q0, [sp, #96]
   39f3c:	bl	5c660 <mpfr_free_pool@@Base+0xbb8>
   39f40:	cbz	w0, 3a07c <mpfr_set_ld@@Base+0x384>
   39f44:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39f48:	add	x0, x0, #0x5c0
   39f4c:	stp	x20, x19, [sp, #96]
   39f50:	ldr	q1, [x0]
   39f54:	ldr	q0, [sp, #96]
   39f58:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   39f5c:	cmp	w0, #0x0
   39f60:	b.le	39e1c <mpfr_set_ld@@Base+0x124>
   39f64:	movi	v1.2d, #0x0
   39f68:	stp	x20, x19, [sp, #96]
   39f6c:	ldr	q0, [sp, #96]
   39f70:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   39f74:	str	x20, [sp, #96]
   39f78:	tbnz	w0, #31, 3a1b8 <mpfr_set_ld@@Base+0x4c0>
   39f7c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39f80:	add	x0, x0, #0x680
   39f84:	str	x19, [sp, #104]
   39f88:	ldr	q1, [x0]
   39f8c:	ldr	q0, [sp, #96]
   39f90:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   39f94:	tbz	w0, #31, 3a25c <mpfr_set_ld@@Base+0x564>
   39f98:	mov	x22, x20
   39f9c:	mov	x21, x19
   39fa0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39fa4:	add	x0, x0, #0x600
   39fa8:	stp	x20, x19, [sp, #96]
   39fac:	ldr	q1, [x0]
   39fb0:	ldr	q0, [sp, #96]
   39fb4:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   39fb8:	tbz	w0, #31, 3a220 <mpfr_set_ld@@Base+0x528>
   39fbc:	movi	v1.2d, #0x0
   39fc0:	stp	x22, x21, [sp, #96]
   39fc4:	ldr	q0, [sp, #96]
   39fc8:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   39fcc:	str	x22, [sp, #96]
   39fd0:	tbnz	w0, #31, 3a138 <mpfr_set_ld@@Base+0x440>
   39fd4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39fd8:	add	x0, x0, #0x6b0
   39fdc:	str	x21, [sp, #104]
   39fe0:	ldr	q1, [x0]
   39fe4:	ldr	q0, [sp, #96]
   39fe8:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   39fec:	tbz	w0, #31, 3a2d4 <mpfr_set_ld@@Base+0x5dc>
   39ff0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   39ff4:	add	x0, x0, #0x6d0
   39ff8:	stp	x22, x21, [sp, #96]
   39ffc:	ldr	q1, [x0]
   3a000:	ldr	q0, [sp, #96]
   3a004:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a008:	tbz	w0, #31, 3a298 <mpfr_set_ld@@Base+0x5a0>
   3a00c:	mov	x20, x22
   3a010:	mov	x19, x21
   3a014:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a018:	add	x0, x0, #0x660
   3a01c:	stp	x22, x21, [sp, #96]
   3a020:	ldr	q1, [x0]
   3a024:	ldr	q0, [sp, #96]
   3a028:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a02c:	tbnz	w0, #31, 39f30 <mpfr_set_ld@@Base+0x238>
   3a030:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a034:	add	x0, x0, #0x670
   3a038:	stp	x20, x19, [sp, #96]
   3a03c:	add	w24, w24, #0x200
   3a040:	ldr	q1, [x0]
   3a044:	ldr	q0, [sp, #96]
   3a048:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a04c:	str	q0, [sp, #96]
   3a050:	ldp	x20, x19, [sp, #96]
   3a054:	mov	x1, x23
   3a058:	mov	x0, x23
   3a05c:	mov	w3, #0x1                   	// #1
   3a060:	mov	x2, #0x200                 	// #512
   3a064:	bl	c420 <mpfr_div_2si@plt>
   3a068:	movi	v1.2d, #0x0
   3a06c:	stp	x20, x19, [sp, #96]
   3a070:	ldr	q0, [sp, #96]
   3a074:	bl	5c660 <mpfr_free_pool@@Base+0xbb8>
   3a078:	cbnz	w0, 39f44 <mpfr_set_ld@@Base+0x24c>
   3a07c:	ldr	w3, [sp, #120]
   3a080:	sxtw	x2, w24
   3a084:	ldr	x20, [sp, #112]
   3a088:	mov	x1, x23
   3a08c:	mov	x0, x20
   3a090:	bl	bb90 <mpfr_mul_2si@plt>
   3a094:	mov	w19, w0
   3a098:	mov	x0, x23
   3a09c:	bl	c070 <mpfr_clear@plt>
   3a0a0:	mov	x0, x28
   3a0a4:	bl	c070 <mpfr_clear@plt>
   3a0a8:	ldr	x1, [x20, #16]
   3a0ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3a0b0:	ldr	x2, [x0, #2576]
   3a0b4:	add	x0, x0, #0xa10
   3a0b8:	blr	x2
   3a0bc:	ldr	w2, [sp, #124]
   3a0c0:	str	w2, [x27, x0]
   3a0c4:	add	x2, x27, x0
   3a0c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3a0cc:	ldr	x3, [x0, #2512]
   3a0d0:	add	x0, x0, #0x9d0
   3a0d4:	blr	x3
   3a0d8:	ldr	x3, [sp, #128]
   3a0dc:	str	x3, [x27, x0]
   3a0e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3a0e4:	ldr	x4, [x0, #2544]
   3a0e8:	add	x0, x0, #0x9f0
   3a0ec:	blr	x4
   3a0f0:	ldr	x4, [sp, #136]
   3a0f4:	str	x4, [x27, x0]
   3a0f8:	cmp	x4, x1
   3a0fc:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   3a100:	b.le	3a5dc <mpfr_set_ld@@Base+0x8e4>
   3a104:	ldr	w2, [sp, #120]
   3a108:	mov	w1, w19
   3a10c:	ldr	x0, [sp, #112]
   3a110:	bl	cb30 <mpfr_check_range@plt>
   3a114:	mov	w19, w0
   3a118:	mov	w0, w19
   3a11c:	ldp	x19, x20, [sp, #16]
   3a120:	ldp	x21, x22, [sp, #32]
   3a124:	ldp	x23, x24, [sp, #48]
   3a128:	ldp	x25, x26, [sp, #64]
   3a12c:	ldp	x27, x28, [sp, #80]
   3a130:	ldp	x29, x30, [sp], #208
   3a134:	ret
   3a138:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a13c:	add	x0, x0, #0x620
   3a140:	str	x21, [sp, #104]
   3a144:	ldr	q1, [x0]
   3a148:	ldr	q0, [sp, #96]
   3a14c:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   3a150:	cmp	w0, #0x0
   3a154:	b.le	3a2d4 <mpfr_set_ld@@Base+0x5dc>
   3a158:	movi	v1.2d, #0x0
   3a15c:	stp	x22, x21, [sp, #96]
   3a160:	ldr	q0, [sp, #96]
   3a164:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a168:	tbz	w0, #31, 39ff0 <mpfr_set_ld@@Base+0x2f8>
   3a16c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a170:	add	x0, x0, #0x640
   3a174:	stp	x22, x21, [sp, #96]
   3a178:	mov	x20, x22
   3a17c:	mov	x19, x21
   3a180:	ldr	q1, [x0]
   3a184:	ldr	q0, [sp, #96]
   3a188:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   3a18c:	cmp	w0, #0x0
   3a190:	b.le	3a298 <mpfr_set_ld@@Base+0x5a0>
   3a194:	stp	x20, x19, [sp, #96]
   3a198:	mov	x22, x20
   3a19c:	eor	x21, x19, #0x8000000000000000
   3a1a0:	movi	v1.2d, #0x0
   3a1a4:	ldr	q0, [sp, #96]
   3a1a8:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a1ac:	tbnz	w0, #31, 3a014 <mpfr_set_ld@@Base+0x31c>
   3a1b0:	mov	x21, x19
   3a1b4:	b	3a014 <mpfr_set_ld@@Base+0x31c>
   3a1b8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a1bc:	add	x0, x0, #0x5e0
   3a1c0:	str	x19, [sp, #104]
   3a1c4:	mov	x22, x20
   3a1c8:	mov	x21, x19
   3a1cc:	ldr	q1, [x0]
   3a1d0:	ldr	q0, [sp, #96]
   3a1d4:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   3a1d8:	cmp	w0, #0x0
   3a1dc:	b.le	3a25c <mpfr_set_ld@@Base+0x564>
   3a1e0:	stp	x22, x21, [sp, #96]
   3a1e4:	mov	x20, x22
   3a1e8:	eor	x19, x21, #0x8000000000000000
   3a1ec:	movi	v1.2d, #0x0
   3a1f0:	ldr	q0, [sp, #96]
   3a1f4:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a1f8:	tbnz	w0, #31, 39fa0 <mpfr_set_ld@@Base+0x2a8>
   3a1fc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a200:	add	x0, x0, #0x600
   3a204:	mov	x19, x21
   3a208:	stp	x20, x19, [sp, #96]
   3a20c:	ldr	q1, [x0]
   3a210:	ldr	q0, [sp, #96]
   3a214:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a218:	tbnz	w0, #31, 39fbc <mpfr_set_ld@@Base+0x2c4>
   3a21c:	nop
   3a220:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a224:	add	x0, x0, #0x610
   3a228:	stp	x22, x21, [sp, #96]
   3a22c:	add	w24, w24, #0x1, lsl #12
   3a230:	ldr	q1, [x0]
   3a234:	ldr	q0, [sp, #96]
   3a238:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a23c:	str	q0, [sp, #96]
   3a240:	mov	x1, x23
   3a244:	mov	x0, x23
   3a248:	mov	w3, #0x1                   	// #1
   3a24c:	mov	x2, #0x1000                	// #4096
   3a250:	ldp	x22, x21, [sp, #96]
   3a254:	bl	c420 <mpfr_div_2si@plt>
   3a258:	b	39fbc <mpfr_set_ld@@Base+0x2c4>
   3a25c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a260:	add	x0, x0, #0x5f0
   3a264:	stp	x20, x19, [sp, #96]
   3a268:	add	w24, w24, #0x2, lsl #12
   3a26c:	ldr	q1, [x0]
   3a270:	ldr	q0, [sp, #96]
   3a274:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a278:	str	q0, [sp, #96]
   3a27c:	mov	x1, x23
   3a280:	mov	x0, x23
   3a284:	mov	w3, #0x1                   	// #1
   3a288:	mov	x2, #0x2000                	// #8192
   3a28c:	ldp	x22, x21, [sp, #96]
   3a290:	bl	c420 <mpfr_div_2si@plt>
   3a294:	b	3a1e0 <mpfr_set_ld@@Base+0x4e8>
   3a298:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a29c:	add	x0, x0, #0x650
   3a2a0:	stp	x22, x21, [sp, #96]
   3a2a4:	add	w24, w24, #0x400
   3a2a8:	ldr	q1, [x0]
   3a2ac:	ldr	q0, [sp, #96]
   3a2b0:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a2b4:	str	q0, [sp, #96]
   3a2b8:	mov	x1, x23
   3a2bc:	mov	x0, x23
   3a2c0:	mov	w3, #0x1                   	// #1
   3a2c4:	mov	x2, #0x400                 	// #1024
   3a2c8:	ldp	x20, x19, [sp, #96]
   3a2cc:	bl	c420 <mpfr_div_2si@plt>
   3a2d0:	b	3a194 <mpfr_set_ld@@Base+0x49c>
   3a2d4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a2d8:	add	x0, x0, #0x630
   3a2dc:	stp	x22, x21, [sp, #96]
   3a2e0:	add	w24, w24, #0x800
   3a2e4:	ldr	q1, [x0]
   3a2e8:	ldr	q0, [sp, #96]
   3a2ec:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a2f0:	str	q0, [sp, #96]
   3a2f4:	mov	x1, x23
   3a2f8:	mov	x0, x23
   3a2fc:	mov	w3, #0x1                   	// #1
   3a300:	mov	x2, #0x800                 	// #2048
   3a304:	ldp	x22, x21, [sp, #96]
   3a308:	bl	c420 <mpfr_div_2si@plt>
   3a30c:	b	3a158 <mpfr_set_ld@@Base+0x460>
   3a310:	str	x19, [sp, #104]
   3a314:	ldr	q0, [sp, #96]
   3a318:	bl	5de08 <mpfr_free_pool@@Base+0x2360>
   3a31c:	mov	w1, #0x1                   	// #1
   3a320:	mov	x0, x28
   3a324:	bl	be40 <mpfr_set_d@plt>
   3a328:	mov	x2, x28
   3a32c:	mov	x1, x23
   3a330:	mov	x0, x23
   3a334:	mov	w3, #0x1                   	// #1
   3a338:	bl	c1a0 <mpfr_add@plt>
   3a33c:	cbnz	w0, 3a684 <mpfr_set_ld@@Base+0x98c>
   3a340:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3a344:	ldr	x1, [x0, #2640]
   3a348:	add	x0, x0, #0xa50
   3a34c:	blr	x1
   3a350:	ldr	w1, [x27, x0]
   3a354:	mov	x0, x28
   3a358:	bl	bd30 <mpfr_get_d@plt>
   3a35c:	bl	5dcb8 <mpfr_free_pool@@Base+0x2210>
   3a360:	stp	x20, x19, [sp, #96]
   3a364:	mov	v1.16b, v0.16b
   3a368:	ldr	q0, [sp, #96]
   3a36c:	bl	5d1d8 <mpfr_free_pool@@Base+0x1730>
   3a370:	str	q0, [sp, #96]
   3a374:	ldp	x20, x19, [sp, #96]
   3a378:	b	39f30 <mpfr_set_ld@@Base+0x238>
   3a37c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a380:	add	x0, x0, #0x690
   3a384:	str	x19, [sp, #104]
   3a388:	ldr	q1, [x0]
   3a38c:	ldr	q0, [sp, #96]
   3a390:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a394:	tbz	w0, #31, 3a470 <mpfr_set_ld@@Base+0x778>
   3a398:	movi	v1.2d, #0x0
   3a39c:	stp	x20, x19, [sp, #96]
   3a3a0:	ldr	q0, [sp, #96]
   3a3a4:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a3a8:	tbz	w0, #31, 39ecc <mpfr_set_ld@@Base+0x1d4>
   3a3ac:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a3b0:	add	x0, x0, #0x6a0
   3a3b4:	stp	x20, x19, [sp, #96]
   3a3b8:	ldr	q1, [x0]
   3a3bc:	ldr	q0, [sp, #96]
   3a3c0:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a3c4:	tbz	w0, #31, 3a524 <mpfr_set_ld@@Base+0x82c>
   3a3c8:	movi	v1.2d, #0x0
   3a3cc:	stp	x20, x19, [sp, #96]
   3a3d0:	ldr	q0, [sp, #96]
   3a3d4:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a3d8:	tbz	w0, #31, 3a570 <mpfr_set_ld@@Base+0x878>
   3a3dc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a3e0:	add	x0, x0, #0x6c0
   3a3e4:	stp	x20, x19, [sp, #96]
   3a3e8:	ldr	q1, [x0]
   3a3ec:	ldr	q0, [sp, #96]
   3a3f0:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a3f4:	tbz	w0, #31, 3a4e8 <mpfr_set_ld@@Base+0x7f0>
   3a3f8:	stp	x20, x19, [sp, #96]
   3a3fc:	eor	x21, x19, #0x8000000000000000
   3a400:	movi	v1.2d, #0x0
   3a404:	ldr	q0, [sp, #96]
   3a408:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a40c:	cmp	w0, #0x0
   3a410:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a414:	add	x0, x0, #0x670
   3a418:	csel	x21, x21, x19, lt  // lt = tstop
   3a41c:	stp	x20, x21, [sp, #96]
   3a420:	ldr	q1, [x0]
   3a424:	ldr	q0, [sp, #96]
   3a428:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   3a42c:	cmp	w0, #0x0
   3a430:	b.gt	39f30 <mpfr_set_ld@@Base+0x238>
   3a434:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a438:	add	x0, x0, #0x660
   3a43c:	stp	x20, x19, [sp, #96]
   3a440:	sub	w24, w24, #0x200
   3a444:	ldr	q1, [x0]
   3a448:	ldr	q0, [sp, #96]
   3a44c:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a450:	str	q0, [sp, #96]
   3a454:	mov	x1, x23
   3a458:	mov	x0, x23
   3a45c:	mov	w3, #0x1                   	// #1
   3a460:	mov	x2, #0x200                 	// #512
   3a464:	ldp	x20, x19, [sp, #96]
   3a468:	bl	bb90 <mpfr_mul_2si@plt>
   3a46c:	b	39f30 <mpfr_set_ld@@Base+0x238>
   3a470:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a474:	add	x0, x0, #0x600
   3a478:	stp	x20, x19, [sp, #96]
   3a47c:	sub	w24, w24, #0x1, lsl #12
   3a480:	ldr	q1, [x0]
   3a484:	ldr	q0, [sp, #96]
   3a488:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a48c:	str	q0, [sp, #96]
   3a490:	mov	x1, x23
   3a494:	mov	x0, x23
   3a498:	mov	w3, #0x1                   	// #1
   3a49c:	mov	x2, #0x1000                	// #4096
   3a4a0:	ldp	x20, x19, [sp, #96]
   3a4a4:	bl	bb90 <mpfr_mul_2si@plt>
   3a4a8:	b	3a398 <mpfr_set_ld@@Base+0x6a0>
   3a4ac:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a4b0:	add	x0, x0, #0x680
   3a4b4:	stp	x20, x19, [sp, #96]
   3a4b8:	sub	w24, w24, #0x2, lsl #12
   3a4bc:	ldr	q1, [x0]
   3a4c0:	ldr	q0, [sp, #96]
   3a4c4:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a4c8:	str	q0, [sp, #96]
   3a4cc:	mov	x1, x23
   3a4d0:	mov	x0, x23
   3a4d4:	mov	w3, #0x1                   	// #1
   3a4d8:	mov	x2, #0x2000                	// #8192
   3a4dc:	ldp	x20, x19, [sp, #96]
   3a4e0:	bl	bb90 <mpfr_mul_2si@plt>
   3a4e4:	b	39e94 <mpfr_set_ld@@Base+0x19c>
   3a4e8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a4ec:	add	x0, x0, #0x6d0
   3a4f0:	stp	x20, x19, [sp, #96]
   3a4f4:	sub	w24, w24, #0x400
   3a4f8:	ldr	q1, [x0]
   3a4fc:	ldr	q0, [sp, #96]
   3a500:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a504:	str	q0, [sp, #96]
   3a508:	mov	x1, x23
   3a50c:	mov	x0, x23
   3a510:	mov	w3, #0x1                   	// #1
   3a514:	mov	x2, #0x400                 	// #1024
   3a518:	ldp	x20, x19, [sp, #96]
   3a51c:	bl	bb90 <mpfr_mul_2si@plt>
   3a520:	b	3a3f8 <mpfr_set_ld@@Base+0x700>
   3a524:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a528:	add	x0, x0, #0x6b0
   3a52c:	stp	x20, x19, [sp, #96]
   3a530:	sub	w24, w24, #0x800
   3a534:	ldr	q1, [x0]
   3a538:	ldr	q0, [sp, #96]
   3a53c:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a540:	str	q0, [sp, #96]
   3a544:	ldp	x20, x19, [sp, #96]
   3a548:	mov	x1, x23
   3a54c:	mov	x0, x23
   3a550:	mov	w3, #0x1                   	// #1
   3a554:	mov	x2, #0x800                 	// #2048
   3a558:	bl	bb90 <mpfr_mul_2si@plt>
   3a55c:	movi	v1.2d, #0x0
   3a560:	stp	x20, x19, [sp, #96]
   3a564:	ldr	q0, [sp, #96]
   3a568:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3a56c:	tbnz	w0, #31, 3a3dc <mpfr_set_ld@@Base+0x6e4>
   3a570:	mov	x21, x19
   3a574:	b	39ef0 <mpfr_set_ld@@Base+0x1f8>
   3a578:	ubfx	x1, x25, #32, #16
   3a57c:	orr	w2, w1, w25
   3a580:	lsr	x1, x26, #32
   3a584:	orr	w0, w26, w1
   3a588:	orr	w0, w2, w0
   3a58c:	cbz	w0, 39d28 <mpfr_set_ld@@Base+0x30>
   3a590:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3a594:	ldr	x2, [x0, #2576]
   3a598:	add	x0, x0, #0xa10
   3a59c:	blr	x2
   3a5a0:	mrs	x1, tpidr_el0
   3a5a4:	ldr	x2, [sp, #112]
   3a5a8:	add	x0, x1, x0
   3a5ac:	mov	x1, #0x2                   	// #2
   3a5b0:	mov	w19, #0x0                   	// #0
   3a5b4:	movk	x1, #0x8000, lsl #48
   3a5b8:	str	x1, [x2, #16]
   3a5bc:	ldr	w1, [x0]
   3a5c0:	ldp	x25, x26, [sp, #64]
   3a5c4:	orr	w1, w1, #0x4
   3a5c8:	str	w1, [x0]
   3a5cc:	mov	w0, w19
   3a5d0:	ldp	x19, x20, [sp, #16]
   3a5d4:	ldp	x29, x30, [sp], #208
   3a5d8:	ret
   3a5dc:	cbz	w19, 3a118 <mpfr_set_ld@@Base+0x420>
   3a5e0:	ldr	w0, [sp, #124]
   3a5e4:	ldp	x21, x22, [sp, #32]
   3a5e8:	orr	w0, w0, #0x8
   3a5ec:	ldp	x23, x24, [sp, #48]
   3a5f0:	ldp	x27, x28, [sp, #80]
   3a5f4:	str	w0, [x2]
   3a5f8:	mov	w0, w19
   3a5fc:	ldp	x19, x20, [sp, #16]
   3a600:	ldp	x25, x26, [sp, #64]
   3a604:	ldp	x29, x30, [sp], #208
   3a608:	ret
   3a60c:	stp	x26, x25, [sp, #96]
   3a610:	ldr	q0, [sp, #96]
   3a614:	bl	5de08 <mpfr_free_pool@@Base+0x2360>
   3a618:	ldr	w1, [sp, #120]
   3a61c:	ldr	x0, [sp, #112]
   3a620:	bl	be40 <mpfr_set_d@plt>
   3a624:	mov	w19, w0
   3a628:	mov	w0, w19
   3a62c:	ldp	x19, x20, [sp, #16]
   3a630:	ldp	x25, x26, [sp, #64]
   3a634:	ldp	x29, x30, [sp], #208
   3a638:	ret
   3a63c:	ldr	x0, [sp, #112]
   3a640:	mov	w1, #0x1                   	// #1
   3a644:	mov	w19, #0x0                   	// #0
   3a648:	bl	c5b0 <mpfr_set_inf@plt>
   3a64c:	mov	w0, w19
   3a650:	ldp	x19, x20, [sp, #16]
   3a654:	ldp	x25, x26, [sp, #64]
   3a658:	ldp	x29, x30, [sp], #208
   3a65c:	ret
   3a660:	ldr	x0, [sp, #112]
   3a664:	mov	w1, #0xffffffff            	// #-1
   3a668:	mov	w19, #0x0                   	// #0
   3a66c:	bl	c5b0 <mpfr_set_inf@plt>
   3a670:	mov	w0, w19
   3a674:	ldp	x19, x20, [sp, #16]
   3a678:	ldp	x25, x26, [sp, #64]
   3a67c:	ldp	x29, x30, [sp], #208
   3a680:	ret
   3a684:	mov	x0, x23
   3a688:	bl	cb90 <mpfr_number_p@plt>
   3a68c:	cbz	w0, 3a07c <mpfr_set_ld@@Base+0x384>
   3a690:	ldr	x0, [sp, #112]
   3a694:	ldr	x2, [sp, #144]
   3a698:	ldr	x0, [x0]
   3a69c:	add	x1, x0, #0x1
   3a6a0:	cmp	x2, x1
   3a6a4:	b.eq	3a6b4 <mpfr_set_ld@@Base+0x9bc>  // b.none
   3a6a8:	mov	x0, x23
   3a6ac:	bl	bed0 <mpfr_set_prec@plt>
   3a6b0:	b	39e04 <mpfr_set_ld@@Base+0x10c>
   3a6b4:	ldr	w3, [sp, #120]
   3a6b8:	mvn	w0, w0
   3a6bc:	ldr	x2, [sp, #168]
   3a6c0:	mov	x1, #0x1                   	// #1
   3a6c4:	lsl	x0, x1, x0
   3a6c8:	sxtw	x0, w0
   3a6cc:	ldr	x1, [x2]
   3a6d0:	cbnz	w3, 3a6ec <mpfr_set_ld@@Base+0x9f4>
   3a6d4:	ldrsw	x4, [sp, #152]
   3a6d8:	and	x3, x1, x0
   3a6dc:	cmp	x3, x4, lsr #63
   3a6e0:	cset	w3, eq  // eq = none
   3a6e4:	add	w3, w3, #0x2
   3a6e8:	str	w3, [sp, #120]
   3a6ec:	orr	x0, x1, x0
   3a6f0:	str	x0, [x2]
   3a6f4:	b	3a07c <mpfr_set_ld@@Base+0x384>

000000000003a6f8 <mpfr_get_ld@@Base>:
   3a6f8:	stp	x29, x30, [sp, #-224]!
   3a6fc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3a700:	mov	x29, sp
   3a704:	ldr	x3, [x0, #16]
   3a708:	stp	x19, x20, [sp, #16]
   3a70c:	cmp	x3, x2
   3a710:	b.le	3a97c <mpfr_get_ld@@Base+0x284>
   3a714:	stp	x23, x24, [sp, #48]
   3a718:	mrs	x24, tpidr_el0
   3a71c:	mov	w23, w1
   3a720:	stp	x21, x22, [sp, #32]
   3a724:	mov	x21, x0
   3a728:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3a72c:	ldr	x1, [x0, #2576]
   3a730:	add	x0, x0, #0xa10
   3a734:	blr	x1
   3a738:	stp	x27, x28, [sp, #80]
   3a73c:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   3a740:	ldr	w27, [x24, x0]
   3a744:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3a748:	ldr	x3, [x0, #2512]
   3a74c:	add	x0, x0, #0x9d0
   3a750:	blr	x3
   3a754:	add	x3, x24, x0
   3a758:	stp	x25, x26, [sp, #64]
   3a75c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3a760:	add	x25, sp, #0xa0
   3a764:	ldr	x26, [x24, x0]
   3a768:	str	d8, [sp, #96]
   3a76c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3a770:	ldr	x4, [x0, #2544]
   3a774:	add	x0, x0, #0x9f0
   3a778:	blr	x4
   3a77c:	str	x5, [x3]
   3a780:	ldr	x3, [x24, x0]
   3a784:	mov	x1, #0x71                  	// #113
   3a788:	add	x22, sp, #0xc0
   3a78c:	str	x2, [x24, x0]
   3a790:	mov	x0, x25
   3a794:	str	x3, [sp, #152]
   3a798:	bl	ca80 <mpfr_init2@plt>
   3a79c:	mov	x20, #0x0                   	// #0
   3a7a0:	mov	x0, x22
   3a7a4:	mov	x1, #0x71                  	// #113
   3a7a8:	bl	ca80 <mpfr_init2@plt>
   3a7ac:	mov	x19, #0x0                   	// #0
   3a7b0:	ldr	w3, [x21, #8]
   3a7b4:	mov	w2, w23
   3a7b8:	mov	x1, x21
   3a7bc:	mov	x0, x25
   3a7c0:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   3a7c4:	bl	c6a0 <mpfr_set4@plt>
   3a7c8:	ldr	w28, [sp, #168]
   3a7cc:	mov	w0, #0x1                   	// #1
   3a7d0:	str	w0, [sp, #168]
   3a7d4:	ldr	x21, [sp, #176]
   3a7d8:	str	xzr, [sp, #176]
   3a7dc:	nop
   3a7e0:	mov	x0, x25
   3a7e4:	mov	w1, #0x0                   	// #0
   3a7e8:	bl	bd30 <mpfr_get_d@plt>
   3a7ec:	fmov	d8, d0
   3a7f0:	bl	5dcb8 <mpfr_free_pool@@Base+0x2210>
   3a7f4:	stp	x20, x19, [sp, #112]
   3a7f8:	mov	v1.16b, v0.16b
   3a7fc:	ldr	q0, [sp, #112]
   3a800:	bl	5bb38 <mpfr_free_pool@@Base+0x90>
   3a804:	str	q0, [sp, #112]
   3a808:	fmov	d0, d8
   3a80c:	mov	w1, #0x0                   	// #0
   3a810:	mov	x0, x22
   3a814:	ldp	x20, x19, [sp, #112]
   3a818:	bl	be40 <mpfr_set_d@plt>
   3a81c:	mov	x2, x22
   3a820:	mov	x1, x25
   3a824:	mov	x0, x25
   3a828:	mov	w3, #0x0                   	// #0
   3a82c:	bl	bb70 <mpfr_sub@plt>
   3a830:	ldr	x0, [sp, #176]
   3a834:	cmp	x0, x23
   3a838:	b.ne	3a7e0 <mpfr_get_ld@@Base+0xe8>  // b.any
   3a83c:	mov	x0, x22
   3a840:	bl	c070 <mpfr_clear@plt>
   3a844:	mov	x0, x25
   3a848:	bl	c070 <mpfr_clear@plt>
   3a84c:	cbz	x21, 3a908 <mpfr_get_ld@@Base+0x210>
   3a850:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a854:	add	x0, x0, #0x6f0
   3a858:	stp	x20, x19, [sp, #112]
   3a85c:	ldr	q1, [x0]
   3a860:	ldr	q0, [sp, #112]
   3a864:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   3a868:	tbz	w0, #31, 3a8a4 <mpfr_get_ld@@Base+0x1ac>
   3a86c:	nop
   3a870:	stp	x20, x19, [sp, #112]
   3a874:	sub	x21, x21, #0x1
   3a878:	stp	x20, x19, [sp, #128]
   3a87c:	ldr	q1, [sp, #112]
   3a880:	ldr	q0, [sp, #128]
   3a884:	bl	5bb38 <mpfr_free_pool@@Base+0x90>
   3a888:	str	q0, [sp, #112]
   3a88c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a890:	add	x0, x0, #0x6f0
   3a894:	ldp	x20, x19, [sp, #112]
   3a898:	ldr	q1, [x0]
   3a89c:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   3a8a0:	tbnz	w0, #31, 3a870 <mpfr_get_ld@@Base+0x178>
   3a8a4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a8a8:	add	x0, x0, #0x700
   3a8ac:	cmp	x21, #0x0
   3a8b0:	ldr	q2, [x0]
   3a8b4:	b.gt	3a8d4 <mpfr_get_ld@@Base+0x1dc>
   3a8b8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3a8bc:	add	x0, x0, #0x710
   3a8c0:	neg	x21, x21
   3a8c4:	ldr	q2, [x0]
   3a8c8:	b	3a8d4 <mpfr_get_ld@@Base+0x1dc>
   3a8cc:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a8d0:	mov	v2.16b, v0.16b
   3a8d4:	stp	x20, x19, [sp, #112]
   3a8d8:	mov	v1.16b, v2.16b
   3a8dc:	tbz	w21, #0, 3a8f8 <mpfr_get_ld@@Base+0x200>
   3a8e0:	ldr	q0, [sp, #112]
   3a8e4:	str	q2, [sp, #128]
   3a8e8:	bl	5c9f0 <mpfr_free_pool@@Base+0xf48>
   3a8ec:	str	q0, [sp, #112]
   3a8f0:	ldp	x20, x19, [sp, #112]
   3a8f4:	ldr	q2, [sp, #128]
   3a8f8:	mov	v1.16b, v2.16b
   3a8fc:	mov	v0.16b, v2.16b
   3a900:	asr	x21, x21, #1
   3a904:	cbnz	x21, 3a8cc <mpfr_get_ld@@Base+0x1d4>
   3a908:	cmp	w28, #0x0
   3a90c:	eor	x0, x19, #0x8000000000000000
   3a910:	csel	x19, x0, x19, lt  // lt = tstop
   3a914:	stp	x20, x19, [sp, #112]
   3a918:	ldr	d8, [sp, #96]
   3a91c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3a920:	ldr	x1, [x0, #2576]
   3a924:	add	x0, x0, #0xa10
   3a928:	blr	x1
   3a92c:	str	w27, [x24, x0]
   3a930:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3a934:	ldr	x1, [x0, #2512]
   3a938:	add	x0, x0, #0x9d0
   3a93c:	blr	x1
   3a940:	str	x26, [x24, x0]
   3a944:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3a948:	ldr	x1, [x0, #2544]
   3a94c:	add	x0, x0, #0x9f0
   3a950:	blr	x1
   3a954:	ldr	q0, [sp, #112]
   3a958:	ldr	x1, [sp, #152]
   3a95c:	ldp	x21, x22, [sp, #32]
   3a960:	ldp	x25, x26, [sp, #64]
   3a964:	ldp	x27, x28, [sp, #80]
   3a968:	str	x1, [x24, x0]
   3a96c:	ldp	x19, x20, [sp, #16]
   3a970:	ldp	x23, x24, [sp, #48]
   3a974:	ldp	x29, x30, [sp], #224
   3a978:	ret
   3a97c:	bl	bd30 <mpfr_get_d@plt>
   3a980:	bl	5dcb8 <mpfr_free_pool@@Base+0x2210>
   3a984:	str	q0, [sp, #112]
   3a988:	ldp	x20, x19, [sp, #112]
   3a98c:	stp	x20, x19, [sp, #112]
   3a990:	ldp	x19, x20, [sp, #16]
   3a994:	ldr	q0, [sp, #112]
   3a998:	ldp	x29, x30, [sp], #224
   3a99c:	ret

000000000003a9a0 <mpfr_get_ld_2exp@@Base>:
   3a9a0:	stp	x29, x30, [sp, #-96]!
   3a9a4:	mov	x29, sp
   3a9a8:	ldr	x4, [x1, #16]
   3a9ac:	stp	x19, x20, [sp, #16]
   3a9b0:	mov	x20, #0x8000000000000003    	// #-9223372036854775805
   3a9b4:	cmp	x4, x20
   3a9b8:	b.le	3ab24 <mpfr_get_ld_2exp@@Base+0x184>
   3a9bc:	mov	x19, x1
   3a9c0:	mov	w1, w2
   3a9c4:	ldr	w3, [x19, #8]
   3a9c8:	ldr	x4, [x19]
   3a9cc:	str	x4, [sp, #64]
   3a9d0:	ldr	x2, [x19, #24]
   3a9d4:	str	x21, [sp, #32]
   3a9d8:	mov	x21, x0
   3a9dc:	add	x0, sp, #0x40
   3a9e0:	str	w3, [sp, #72]
   3a9e4:	stp	xzr, x2, [sp, #80]
   3a9e8:	bl	c580 <mpfr_get_ld@plt>
   3a9ec:	mov	v2.16b, v0.16b
   3a9f0:	ldr	x19, [x19, #16]
   3a9f4:	cmp	x19, x20
   3a9f8:	b.gt	3aa18 <mpfr_get_ld_2exp@@Base+0x78>
   3a9fc:	mov	x19, #0x0                   	// #0
   3aa00:	str	x19, [x21]
   3aa04:	mov	v0.16b, v2.16b
   3aa08:	ldp	x19, x20, [sp, #16]
   3aa0c:	ldr	x21, [sp, #32]
   3aa10:	ldp	x29, x30, [sp], #96
   3aa14:	ret
   3aa18:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3aa1c:	add	x0, x0, #0x6f0
   3aa20:	str	q0, [sp, #48]
   3aa24:	ldr	q1, [x0]
   3aa28:	bl	5c660 <mpfr_free_pool@@Base+0xbb8>
   3aa2c:	ldr	q2, [sp, #48]
   3aa30:	cbnz	w0, 3aa48 <mpfr_get_ld_2exp@@Base+0xa8>
   3aa34:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3aa38:	add	x0, x0, #0x710
   3aa3c:	add	x19, x19, #0x1
   3aa40:	ldr	q2, [x0]
   3aa44:	b	3aa00 <mpfr_get_ld_2exp@@Base+0x60>
   3aa48:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3aa4c:	add	x0, x0, #0x720
   3aa50:	mov	v0.16b, v2.16b
   3aa54:	str	q2, [sp, #48]
   3aa58:	ldr	q1, [x0]
   3aa5c:	bl	5c660 <mpfr_free_pool@@Base+0xbb8>
   3aa60:	ldr	q2, [sp, #48]
   3aa64:	cbz	w0, 3ab10 <mpfr_get_ld_2exp@@Base+0x170>
   3aa68:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3aa6c:	add	x0, x0, #0x710
   3aa70:	mov	v0.16b, v2.16b
   3aa74:	str	q2, [sp, #48]
   3aa78:	ldr	q1, [x0]
   3aa7c:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3aa80:	ldr	q2, [sp, #48]
   3aa84:	tbnz	w0, #31, 3aaa4 <mpfr_get_ld_2exp@@Base+0x104>
   3aa88:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3aa8c:	add	x0, x0, #0x6f0
   3aa90:	mov	v0.16b, v2.16b
   3aa94:	ldr	q1, [x0]
   3aa98:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   3aa9c:	ldr	q2, [sp, #48]
   3aaa0:	tbnz	w0, #31, 3aa00 <mpfr_get_ld_2exp@@Base+0x60>
   3aaa4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3aaa8:	add	x0, x0, #0x730
   3aaac:	mov	v0.16b, v2.16b
   3aab0:	str	q2, [sp, #48]
   3aab4:	ldr	q1, [x0]
   3aab8:	bl	5c8b0 <mpfr_free_pool@@Base+0xe08>
   3aabc:	cmp	w0, #0x0
   3aac0:	ldr	q2, [sp, #48]
   3aac4:	b.gt	3aaec <mpfr_get_ld_2exp@@Base+0x14c>
   3aac8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3aacc:	add	x0, x0, #0x720
   3aad0:	mov	v0.16b, v2.16b
   3aad4:	str	q2, [sp, #48]
   3aad8:	ldr	q1, [x0]
   3aadc:	bl	5c768 <mpfr_free_pool@@Base+0xcc0>
   3aae0:	cmp	w0, #0x0
   3aae4:	ldr	q2, [sp, #48]
   3aae8:	b.gt	3aa00 <mpfr_get_ld_2exp@@Base+0x60>
   3aaec:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   3aaf0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3aaf4:	add	x2, x2, #0x600
   3aaf8:	add	x0, x0, #0x6e0
   3aafc:	mov	w1, #0x10e                 	// #270
   3ab00:	str	q2, [sp, #48]
   3ab04:	bl	cb40 <mpfr_assert_fail@plt>
   3ab08:	ldr	q2, [sp, #48]
   3ab0c:	b	3aa00 <mpfr_get_ld_2exp@@Base+0x60>
   3ab10:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3ab14:	add	x0, x0, #0x730
   3ab18:	add	x19, x19, #0x1
   3ab1c:	ldr	q2, [x0]
   3ab20:	b	3aa00 <mpfr_get_ld_2exp@@Base+0x60>
   3ab24:	bl	cbd0 <mpfr_get_d_2exp@plt>
   3ab28:	bl	5dcb8 <mpfr_free_pool@@Base+0x2210>
   3ab2c:	mov	v2.16b, v0.16b
   3ab30:	mov	v0.16b, v2.16b
   3ab34:	ldp	x19, x20, [sp, #16]
   3ab38:	ldp	x29, x30, [sp], #96
   3ab3c:	ret

000000000003ab40 <mpfr_cbrt@@Base>:
   3ab40:	stp	x29, x30, [sp, #-128]!
   3ab44:	mov	x29, sp
   3ab48:	stp	x19, x20, [sp, #16]
   3ab4c:	mov	x19, x1
   3ab50:	ldr	x1, [x1, #16]
   3ab54:	stp	x23, x24, [sp, #48]
   3ab58:	mov	x23, x0
   3ab5c:	stp	x27, x28, [sp, #80]
   3ab60:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3ab64:	cmp	x1, x0
   3ab68:	b.le	3aecc <mpfr_cbrt@@Base+0x38c>
   3ab6c:	mrs	x20, tpidr_el0
   3ab70:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3ab74:	ldr	x1, [x0, #2576]
   3ab78:	add	x0, x0, #0xa10
   3ab7c:	blr	x1
   3ab80:	stp	x21, x22, [sp, #32]
   3ab84:	mov	w21, w2
   3ab88:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3ab8c:	ldr	w0, [x20, x0]
   3ab90:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3ab94:	str	w0, [sp, #108]
   3ab98:	add	x28, sp, #0x70
   3ab9c:	stp	x25, x26, [sp, #64]
   3aba0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3aba4:	ldr	x2, [x0, #2512]
   3aba8:	add	x0, x0, #0x9d0
   3abac:	blr	x2
   3abb0:	add	x2, x20, x0
   3abb4:	ldr	x24, [x20, x0]
   3abb8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3abbc:	ldr	x3, [x0, #2544]
   3abc0:	add	x0, x0, #0x9f0
   3abc4:	blr	x3
   3abc8:	str	x4, [x2]
   3abcc:	ldr	x25, [x20, x0]
   3abd0:	str	x1, [x20, x0]
   3abd4:	mov	x0, x28
   3abd8:	bl	bf90 <mpfr_mpz_init@plt>
   3abdc:	mov	x1, x19
   3abe0:	mov	x0, x28
   3abe4:	bl	cac0 <mpfr_get_z_2exp@plt>
   3abe8:	ldr	w22, [x19, #8]
   3abec:	mov	x26, x0
   3abf0:	ldr	w0, [sp, #116]
   3abf4:	tbz	w22, #31, 3ac00 <mpfr_cbrt@@Base+0xc0>
   3abf8:	neg	w0, w0
   3abfc:	str	w0, [sp, #116]
   3ac00:	mov	x4, #0x5555555555555555    	// #6148914691236517205
   3ac04:	mov	x5, #0xfffffffffffffff8    	// #-8
   3ac08:	movk	x4, #0x5556
   3ac0c:	ldr	x6, [sp, #120]
   3ac10:	smulh	x1, x26, x4
   3ac14:	ldr	x19, [x23]
   3ac18:	sub	x1, x1, x26, asr #63
   3ac1c:	add	x1, x1, x1, lsl #1
   3ac20:	subs	x1, x26, x1
   3ac24:	add	x2, x1, #0x3
   3ac28:	csel	x1, x2, x1, mi  // mi = first
   3ac2c:	cmp	w0, #0x0
   3ac30:	cneg	w0, w0, lt  // lt = tstop
   3ac34:	cmp	w21, #0x0
   3ac38:	cinc	x27, x19, eq  // eq = none
   3ac3c:	add	x5, x5, w0, sxtw #3
   3ac40:	sbfiz	x0, x0, #6, #32
   3ac44:	add	x2, x27, x27, lsl #1
   3ac48:	ldr	x5, [x6, x5]
   3ac4c:	clz	x5, x5
   3ac50:	sub	x0, x0, x5
   3ac54:	sub	x2, x2, x0
   3ac58:	sub	x2, x2, x1
   3ac5c:	smulh	x4, x2, x4
   3ac60:	sub	x2, x4, x2, asr #63
   3ac64:	add	x2, x2, x2, lsl #1
   3ac68:	adds	x2, x2, x1
   3ac6c:	b.pl	3ae60 <mpfr_cbrt@@Base+0x320>  // b.nfrst
   3ac70:	cbnz	x1, 3ae48 <mpfr_cbrt@@Base+0x308>
   3ac74:	mov	x1, x28
   3ac78:	mov	x2, #0x3                   	// #3
   3ac7c:	mov	x0, x28
   3ac80:	bl	c2e0 <__gmpz_root@plt>
   3ac84:	ldr	w1, [sp, #116]
   3ac88:	mov	x2, #0xfffffffffffffff8    	// #-8
   3ac8c:	ldr	x4, [sp, #120]
   3ac90:	cmp	w1, #0x0
   3ac94:	cneg	w1, w1, lt  // lt = tstop
   3ac98:	cmp	w0, #0x0
   3ac9c:	add	x2, x2, w1, sxtw #3
   3aca0:	sbfiz	x1, x1, #6, #32
   3aca4:	ldr	x19, [x4, x2]
   3aca8:	clz	x19, x19
   3acac:	sub	x19, x1, x19
   3acb0:	sub	x19, x19, x27
   3acb4:	cset	w27, eq  // eq = none
   3acb8:	cmp	x19, #0x0
   3acbc:	b.le	3ace0 <mpfr_cbrt@@Base+0x1a0>
   3acc0:	mov	w27, #0x1                   	// #1
   3acc4:	cbnz	w0, 3ae30 <mpfr_cbrt@@Base+0x2f0>
   3acc8:	mov	x2, x19
   3accc:	add	x19, x19, x19, lsl #1
   3acd0:	add	x26, x26, x19
   3acd4:	mov	x1, x28
   3acd8:	mov	x0, x28
   3acdc:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   3ace0:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   3ace4:	movk	x0, #0x5556
   3ace8:	smulh	x0, x26, x0
   3acec:	sub	x26, x0, x26, asr #63
   3acf0:	cbnz	w27, 3add8 <mpfr_cbrt@@Base+0x298>
   3acf4:	mov	w2, #0x0                   	// #0
   3acf8:	mov	x1, x28
   3acfc:	mov	x0, x23
   3ad00:	bl	c240 <mpfr_set_z@plt>
   3ad04:	ldr	x2, [x23, #16]
   3ad08:	add	w27, w27, w0
   3ad0c:	add	x26, x2, x26
   3ad10:	str	x26, [x23, #16]
   3ad14:	tbnz	w22, #31, 3ae98 <mpfr_cbrt@@Base+0x358>
   3ad18:	mov	x0, x28
   3ad1c:	bl	c170 <mpfr_mpz_clear@plt>
   3ad20:	ldr	x1, [x23, #16]
   3ad24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3ad28:	ldr	x2, [x0, #2576]
   3ad2c:	add	x0, x0, #0xa10
   3ad30:	blr	x2
   3ad34:	ldr	w2, [sp, #108]
   3ad38:	str	w2, [x20, x0]
   3ad3c:	add	x2, x20, x0
   3ad40:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3ad44:	ldr	x3, [x0, #2512]
   3ad48:	add	x0, x0, #0x9d0
   3ad4c:	blr	x3
   3ad50:	str	x24, [x20, x0]
   3ad54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3ad58:	ldr	x3, [x0, #2544]
   3ad5c:	add	x0, x0, #0x9f0
   3ad60:	blr	x3
   3ad64:	str	x25, [x20, x0]
   3ad68:	cmp	x25, x1
   3ad6c:	ccmp	x24, x1, #0x0, ge  // ge = tcont
   3ad70:	b.le	3ada8 <mpfr_cbrt@@Base+0x268>
   3ad74:	mov	w2, w21
   3ad78:	mov	w1, w27
   3ad7c:	mov	x0, x23
   3ad80:	bl	cb30 <mpfr_check_range@plt>
   3ad84:	ldp	x21, x22, [sp, #32]
   3ad88:	mov	w27, w0
   3ad8c:	ldp	x25, x26, [sp, #64]
   3ad90:	mov	w0, w27
   3ad94:	ldp	x19, x20, [sp, #16]
   3ad98:	ldp	x23, x24, [sp, #48]
   3ad9c:	ldp	x27, x28, [sp, #80]
   3ada0:	ldp	x29, x30, [sp], #128
   3ada4:	ret
   3ada8:	cbz	w27, 3ae10 <mpfr_cbrt@@Base+0x2d0>
   3adac:	ldr	w0, [sp, #108]
   3adb0:	ldp	x21, x22, [sp, #32]
   3adb4:	orr	w23, w0, #0x8
   3adb8:	ldp	x25, x26, [sp, #64]
   3adbc:	str	w23, [x2]
   3adc0:	mov	w0, w27
   3adc4:	ldp	x19, x20, [sp, #16]
   3adc8:	ldp	x23, x24, [sp, #48]
   3adcc:	ldp	x27, x28, [sp, #80]
   3add0:	ldp	x29, x30, [sp], #128
   3add4:	ret
   3add8:	tbnz	w22, #31, 3aeb4 <mpfr_cbrt@@Base+0x374>
   3addc:	sub	w0, w21, #0x2
   3ade0:	tst	w0, #0xfffffffd
   3ade4:	b.eq	3adfc <mpfr_cbrt@@Base+0x2bc>  // b.none
   3ade8:	cbnz	w21, 3aeac <mpfr_cbrt@@Base+0x36c>
   3adec:	mov	x0, x28
   3adf0:	mov	x1, #0x0                   	// #0
   3adf4:	bl	bfe0 <__gmpz_tstbit@plt>
   3adf8:	cbz	w0, 3aeac <mpfr_cbrt@@Base+0x36c>
   3adfc:	mov	x1, x28
   3ae00:	mov	x0, x28
   3ae04:	mov	x2, #0x1                   	// #1
   3ae08:	bl	c360 <__gmpz_add_ui@plt>
   3ae0c:	b	3acf4 <mpfr_cbrt@@Base+0x1b4>
   3ae10:	mov	w0, w27
   3ae14:	ldp	x19, x20, [sp, #16]
   3ae18:	ldp	x21, x22, [sp, #32]
   3ae1c:	ldp	x23, x24, [sp, #48]
   3ae20:	ldp	x25, x26, [sp, #64]
   3ae24:	ldp	x27, x28, [sp, #80]
   3ae28:	ldp	x29, x30, [sp], #128
   3ae2c:	ret
   3ae30:	mov	x0, x28
   3ae34:	mov	x1, #0x0                   	// #0
   3ae38:	bl	ba90 <__gmpz_scan1@plt>
   3ae3c:	cmp	x0, x19
   3ae40:	cset	w27, lt  // lt = tstop
   3ae44:	b	3acc8 <mpfr_cbrt@@Base+0x188>
   3ae48:	sub	x26, x26, x1
   3ae4c:	mov	x2, x1
   3ae50:	mov	x0, x28
   3ae54:	mov	x1, x28
   3ae58:	bl	c200 <__gmpz_mul_2exp@plt>
   3ae5c:	b	3ac74 <mpfr_cbrt@@Base+0x134>
   3ae60:	sub	x26, x26, x2
   3ae64:	mov	x1, x28
   3ae68:	mov	x0, x28
   3ae6c:	bl	c200 <__gmpz_mul_2exp@plt>
   3ae70:	b	3ac74 <mpfr_cbrt@@Base+0x134>
   3ae74:	mov	x1, x28
   3ae78:	mov	x0, x23
   3ae7c:	mov	w2, #0x0                   	// #0
   3ae80:	bl	c240 <mpfr_set_z@plt>
   3ae84:	ldr	x1, [x23, #16]
   3ae88:	sub	w27, w0, #0x1
   3ae8c:	mov	w21, #0x3                   	// #3
   3ae90:	add	x26, x1, x26
   3ae94:	str	x26, [x23, #16]
   3ae98:	ldr	w0, [x23, #8]
   3ae9c:	neg	w27, w27
   3aea0:	neg	w0, w0
   3aea4:	str	w0, [x23, #8]
   3aea8:	b	3ad18 <mpfr_cbrt@@Base+0x1d8>
   3aeac:	mov	w27, #0xffffffff            	// #-1
   3aeb0:	b	3acf4 <mpfr_cbrt@@Base+0x1b4>
   3aeb4:	cmp	w21, #0x2
   3aeb8:	b.eq	3ae74 <mpfr_cbrt@@Base+0x334>  // b.none
   3aebc:	cmp	w21, #0x3
   3aec0:	b.ne	3addc <mpfr_cbrt@@Base+0x29c>  // b.any
   3aec4:	mov	w21, #0x2                   	// #2
   3aec8:	b	3adfc <mpfr_cbrt@@Base+0x2bc>
   3aecc:	mov	x2, #0x2                   	// #2
   3aed0:	movk	x2, #0x8000, lsl #48
   3aed4:	cmp	x1, x2
   3aed8:	b.eq	3af10 <mpfr_cbrt@@Base+0x3d0>  // b.none
   3aedc:	cmp	x1, x0
   3aee0:	b.eq	3aefc <mpfr_cbrt@@Base+0x3bc>  // b.none
   3aee4:	ldr	w1, [x19, #8]
   3aee8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3aeec:	mov	w27, #0x0                   	// #0
   3aef0:	str	w1, [x23, #8]
   3aef4:	str	x0, [x23, #16]
   3aef8:	b	3ad90 <mpfr_cbrt@@Base+0x250>
   3aefc:	ldr	w0, [x19, #8]
   3af00:	mov	w27, #0x0                   	// #0
   3af04:	str	w0, [x23, #8]
   3af08:	str	x1, [x23, #16]
   3af0c:	b	3ad90 <mpfr_cbrt@@Base+0x250>
   3af10:	mrs	x2, tpidr_el0
   3af14:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3af18:	ldr	x3, [x0, #2576]
   3af1c:	add	x0, x0, #0xa10
   3af20:	blr	x3
   3af24:	add	x0, x2, x0
   3af28:	str	x1, [x23, #16]
   3af2c:	mov	w27, #0x0                   	// #0
   3af30:	ldr	w1, [x0]
   3af34:	orr	w1, w1, #0x4
   3af38:	str	w1, [x0]
   3af3c:	b	3ad90 <mpfr_cbrt@@Base+0x250>

000000000003af40 <mpfr_fits_sshort_p@@Base>:
   3af40:	stp	x29, x30, [sp, #-112]!
   3af44:	mov	x29, sp
   3af48:	stp	x19, x20, [sp, #16]
   3af4c:	mov	x19, x0
   3af50:	mov	w20, w1
   3af54:	ldr	x0, [x0, #16]
   3af58:	stp	x21, x22, [sp, #32]
   3af5c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3af60:	cmp	x0, x1
   3af64:	b.le	3b040 <mpfr_fits_sshort_p@@Base+0x100>
   3af68:	cmp	x0, #0x0
   3af6c:	mov	w21, #0x1                   	// #1
   3af70:	b.le	3b02c <mpfr_fits_sshort_p@@Base+0xec>
   3af74:	ldr	w22, [x19, #8]
   3af78:	mov	w3, #0xf                   	// #15
   3af7c:	mov	w2, #0xe                   	// #14
   3af80:	mov	w1, #0x10                  	// #16
   3af84:	cmp	w22, #0x0
   3af88:	csel	w2, w3, w2, lt  // lt = tstop
   3af8c:	csel	w1, w1, w3, lt  // lt = tstop
   3af90:	cmp	x0, w2, sxtw
   3af94:	b.le	3b02c <mpfr_fits_sshort_p@@Base+0xec>
   3af98:	add	w2, w1, w21
   3af9c:	mov	w21, #0x0                   	// #0
   3afa0:	cmp	x0, w2, sxtw
   3afa4:	b.ge	3b02c <mpfr_fits_sshort_p@@Base+0xec>  // b.tcont
   3afa8:	stp	x23, x24, [sp, #48]
   3afac:	mrs	x24, tpidr_el0
   3afb0:	sxtw	x21, w1
   3afb4:	add	x23, sp, #0x50
   3afb8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3afbc:	ldr	x1, [x0, #2576]
   3afc0:	add	x0, x0, #0xa10
   3afc4:	blr	x1
   3afc8:	mov	x1, x21
   3afcc:	str	x25, [sp, #64]
   3afd0:	ldr	w25, [x24, x0]
   3afd4:	mov	x0, x23
   3afd8:	bl	ca80 <mpfr_init2@plt>
   3afdc:	ldr	w3, [x19, #8]
   3afe0:	cmp	w20, #0x5
   3afe4:	mov	w2, #0x4                   	// #4
   3afe8:	mov	x0, x23
   3afec:	csel	w2, w20, w2, ne  // ne = any
   3aff0:	mov	x1, x19
   3aff4:	bl	c6a0 <mpfr_set4@plt>
   3aff8:	tbnz	w22, #31, 3b060 <mpfr_fits_sshort_p@@Base+0x120>
   3affc:	ldr	x0, [sp, #96]
   3b000:	cmp	x0, x21
   3b004:	cset	w21, eq  // eq = none
   3b008:	mov	x0, x23
   3b00c:	bl	c070 <mpfr_clear@plt>
   3b010:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b014:	ldr	x1, [x0, #2576]
   3b018:	add	x0, x0, #0xa10
   3b01c:	blr	x1
   3b020:	str	w25, [x24, x0]
   3b024:	ldp	x23, x24, [sp, #48]
   3b028:	ldr	x25, [sp, #64]
   3b02c:	mov	w0, w21
   3b030:	ldp	x19, x20, [sp, #16]
   3b034:	ldp	x21, x22, [sp, #32]
   3b038:	ldp	x29, x30, [sp], #112
   3b03c:	ret
   3b040:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3b044:	cmp	x0, x1
   3b048:	cset	w21, eq  // eq = none
   3b04c:	mov	w0, w21
   3b050:	ldp	x19, x20, [sp, #16]
   3b054:	ldp	x21, x22, [sp, #32]
   3b058:	ldp	x29, x30, [sp], #112
   3b05c:	ret
   3b060:	mov	x0, x23
   3b064:	mov	x2, #0x0                   	// #0
   3b068:	mov	x1, #0xffffffffffff8000    	// #-32768
   3b06c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3b070:	mvn	w21, w0
   3b074:	lsr	w21, w21, #31
   3b078:	b	3b008 <mpfr_fits_sshort_p@@Base+0xc8>
   3b07c:	nop

000000000003b080 <mpfr_fits_sint_p@@Base>:
   3b080:	stp	x29, x30, [sp, #-112]!
   3b084:	mov	x29, sp
   3b088:	stp	x19, x20, [sp, #16]
   3b08c:	mov	x19, x0
   3b090:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3b094:	ldr	x3, [x19, #16]
   3b098:	cmp	x3, x0
   3b09c:	b.le	3b194 <mpfr_fits_sint_p@@Base+0x114>
   3b0a0:	cmp	x3, #0x0
   3b0a4:	mov	w20, #0x1                   	// #1
   3b0a8:	b.le	3b170 <mpfr_fits_sint_p@@Base+0xf0>
   3b0ac:	stp	x21, x22, [sp, #32]
   3b0b0:	mov	w0, #0x1f                  	// #31
   3b0b4:	ldr	w22, [x19, #8]
   3b0b8:	mov	w21, w1
   3b0bc:	mov	w1, #0x1e                  	// #30
   3b0c0:	cmp	w22, #0x0
   3b0c4:	mov	w2, #0x20                  	// #32
   3b0c8:	csel	w1, w1, w0, ge  // ge = tcont
   3b0cc:	csel	w0, w0, w2, ge  // ge = tcont
   3b0d0:	cmp	x3, w1, sxtw
   3b0d4:	b.le	3b180 <mpfr_fits_sint_p@@Base+0x100>
   3b0d8:	add	w1, w0, w20
   3b0dc:	mov	w20, #0x0                   	// #0
   3b0e0:	cmp	x3, w1, sxtw
   3b0e4:	b.ge	3b180 <mpfr_fits_sint_p@@Base+0x100>  // b.tcont
   3b0e8:	stp	x23, x24, [sp, #48]
   3b0ec:	mrs	x24, tpidr_el0
   3b0f0:	sxtw	x20, w0
   3b0f4:	add	x23, sp, #0x50
   3b0f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b0fc:	ldr	x1, [x0, #2576]
   3b100:	add	x0, x0, #0xa10
   3b104:	blr	x1
   3b108:	mov	x1, x20
   3b10c:	str	x25, [sp, #64]
   3b110:	ldr	w25, [x24, x0]
   3b114:	mov	x0, x23
   3b118:	bl	ca80 <mpfr_init2@plt>
   3b11c:	ldr	w3, [x19, #8]
   3b120:	cmp	w21, #0x5
   3b124:	mov	w2, #0x4                   	// #4
   3b128:	mov	x0, x23
   3b12c:	csel	w2, w21, w2, ne  // ne = any
   3b130:	mov	x1, x19
   3b134:	bl	c6a0 <mpfr_set4@plt>
   3b138:	tbnz	w22, #31, 3b1b0 <mpfr_fits_sint_p@@Base+0x130>
   3b13c:	ldr	x0, [sp, #96]
   3b140:	cmp	x0, x20
   3b144:	cset	w20, eq  // eq = none
   3b148:	mov	x0, x23
   3b14c:	bl	c070 <mpfr_clear@plt>
   3b150:	ldp	x21, x22, [sp, #32]
   3b154:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b158:	ldr	x1, [x0, #2576]
   3b15c:	add	x0, x0, #0xa10
   3b160:	blr	x1
   3b164:	str	w25, [x24, x0]
   3b168:	ldp	x23, x24, [sp, #48]
   3b16c:	ldr	x25, [sp, #64]
   3b170:	mov	w0, w20
   3b174:	ldp	x19, x20, [sp, #16]
   3b178:	ldp	x29, x30, [sp], #112
   3b17c:	ret
   3b180:	mov	w0, w20
   3b184:	ldp	x19, x20, [sp, #16]
   3b188:	ldp	x21, x22, [sp, #32]
   3b18c:	ldp	x29, x30, [sp], #112
   3b190:	ret
   3b194:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3b198:	cmp	x3, x0
   3b19c:	cset	w20, eq  // eq = none
   3b1a0:	mov	w0, w20
   3b1a4:	ldp	x19, x20, [sp, #16]
   3b1a8:	ldp	x29, x30, [sp], #112
   3b1ac:	ret
   3b1b0:	mov	x0, x23
   3b1b4:	mov	x2, #0x0                   	// #0
   3b1b8:	mov	x1, #0xffffffff80000000    	// #-2147483648
   3b1bc:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3b1c0:	mvn	w20, w0
   3b1c4:	lsr	w20, w20, #31
   3b1c8:	b	3b148 <mpfr_fits_sint_p@@Base+0xc8>
   3b1cc:	nop

000000000003b1d0 <mpfr_fits_slong_p@@Base>:
   3b1d0:	stp	x29, x30, [sp, #-112]!
   3b1d4:	mov	x29, sp
   3b1d8:	stp	x19, x20, [sp, #16]
   3b1dc:	mov	x19, x0
   3b1e0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3b1e4:	ldr	x3, [x19, #16]
   3b1e8:	cmp	x3, x0
   3b1ec:	b.le	3b2e4 <mpfr_fits_slong_p@@Base+0x114>
   3b1f0:	cmp	x3, #0x0
   3b1f4:	mov	w20, #0x1                   	// #1
   3b1f8:	b.le	3b2c0 <mpfr_fits_slong_p@@Base+0xf0>
   3b1fc:	stp	x21, x22, [sp, #32]
   3b200:	mov	w0, #0x3f                  	// #63
   3b204:	ldr	w22, [x19, #8]
   3b208:	mov	w21, w1
   3b20c:	mov	w1, #0x3e                  	// #62
   3b210:	cmp	w22, #0x0
   3b214:	mov	w2, #0x40                  	// #64
   3b218:	csel	w1, w1, w0, ge  // ge = tcont
   3b21c:	csel	w0, w0, w2, ge  // ge = tcont
   3b220:	cmp	x3, w1, sxtw
   3b224:	b.le	3b2d0 <mpfr_fits_slong_p@@Base+0x100>
   3b228:	add	w1, w0, w20
   3b22c:	mov	w20, #0x0                   	// #0
   3b230:	cmp	x3, w1, sxtw
   3b234:	b.ge	3b2d0 <mpfr_fits_slong_p@@Base+0x100>  // b.tcont
   3b238:	stp	x23, x24, [sp, #48]
   3b23c:	mrs	x24, tpidr_el0
   3b240:	sxtw	x20, w0
   3b244:	add	x23, sp, #0x50
   3b248:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b24c:	ldr	x1, [x0, #2576]
   3b250:	add	x0, x0, #0xa10
   3b254:	blr	x1
   3b258:	mov	x1, x20
   3b25c:	str	x25, [sp, #64]
   3b260:	ldr	w25, [x24, x0]
   3b264:	mov	x0, x23
   3b268:	bl	ca80 <mpfr_init2@plt>
   3b26c:	ldr	w3, [x19, #8]
   3b270:	cmp	w21, #0x5
   3b274:	mov	w2, #0x4                   	// #4
   3b278:	mov	x0, x23
   3b27c:	csel	w2, w21, w2, ne  // ne = any
   3b280:	mov	x1, x19
   3b284:	bl	c6a0 <mpfr_set4@plt>
   3b288:	tbnz	w22, #31, 3b2f4 <mpfr_fits_slong_p@@Base+0x124>
   3b28c:	ldr	x0, [sp, #96]
   3b290:	cmp	x0, x20
   3b294:	cset	w20, eq  // eq = none
   3b298:	mov	x0, x23
   3b29c:	bl	c070 <mpfr_clear@plt>
   3b2a0:	ldp	x21, x22, [sp, #32]
   3b2a4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b2a8:	ldr	x1, [x0, #2576]
   3b2ac:	add	x0, x0, #0xa10
   3b2b0:	blr	x1
   3b2b4:	str	w25, [x24, x0]
   3b2b8:	ldp	x23, x24, [sp, #48]
   3b2bc:	ldr	x25, [sp, #64]
   3b2c0:	mov	w0, w20
   3b2c4:	ldp	x19, x20, [sp, #16]
   3b2c8:	ldp	x29, x30, [sp], #112
   3b2cc:	ret
   3b2d0:	mov	w0, w20
   3b2d4:	ldp	x19, x20, [sp, #16]
   3b2d8:	ldp	x21, x22, [sp, #32]
   3b2dc:	ldp	x29, x30, [sp], #112
   3b2e0:	ret
   3b2e4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3b2e8:	cmp	x3, x0
   3b2ec:	cset	w20, eq  // eq = none
   3b2f0:	b	3b2c0 <mpfr_fits_slong_p@@Base+0xf0>
   3b2f4:	mov	x0, x23
   3b2f8:	mov	x2, #0x0                   	// #0
   3b2fc:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3b300:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3b304:	mvn	w20, w0
   3b308:	lsr	w20, w20, #31
   3b30c:	b	3b298 <mpfr_fits_slong_p@@Base+0xc8>

000000000003b310 <mpfr_fits_ushort_p@@Base>:
   3b310:	stp	x29, x30, [sp, #-96]!
   3b314:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3b318:	mov	x29, sp
   3b31c:	stp	x19, x20, [sp, #16]
   3b320:	mov	w20, w1
   3b324:	ldr	x1, [x0, #16]
   3b328:	stp	x21, x22, [sp, #32]
   3b32c:	cmp	x1, x2
   3b330:	b.le	3b400 <mpfr_fits_ushort_p@@Base+0xf0>
   3b334:	ldr	w2, [x0, #8]
   3b338:	mov	x19, x0
   3b33c:	tbnz	w2, #31, 3b3dc <mpfr_fits_ushort_p@@Base+0xcc>
   3b340:	cmp	x1, #0xf
   3b344:	mov	w21, #0x1                   	// #1
   3b348:	b.le	3b3c8 <mpfr_fits_ushort_p@@Base+0xb8>
   3b34c:	cmp	x1, #0x10
   3b350:	mov	w21, #0x0                   	// #0
   3b354:	b.ne	3b3c8 <mpfr_fits_ushort_p@@Base+0xb8>  // b.any
   3b358:	mrs	x22, tpidr_el0
   3b35c:	add	x21, sp, #0x40
   3b360:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b364:	ldr	x2, [x0, #2576]
   3b368:	add	x0, x0, #0xa10
   3b36c:	blr	x2
   3b370:	str	x23, [sp, #48]
   3b374:	ldr	w23, [x22, x0]
   3b378:	mov	x0, x21
   3b37c:	bl	ca80 <mpfr_init2@plt>
   3b380:	ldr	w3, [x19, #8]
   3b384:	cmp	w20, #0x5
   3b388:	mov	x0, x21
   3b38c:	mov	x1, x19
   3b390:	mov	w2, #0x2                   	// #2
   3b394:	csel	w2, w20, w2, ne  // ne = any
   3b398:	bl	c6a0 <mpfr_set4@plt>
   3b39c:	ldr	x1, [sp, #80]
   3b3a0:	mov	x0, x21
   3b3a4:	cmp	x1, #0x10
   3b3a8:	cset	w21, eq  // eq = none
   3b3ac:	bl	c070 <mpfr_clear@plt>
   3b3b0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b3b4:	ldr	x1, [x0, #2576]
   3b3b8:	add	x0, x0, #0xa10
   3b3bc:	blr	x1
   3b3c0:	str	w23, [x22, x0]
   3b3c4:	ldr	x23, [sp, #48]
   3b3c8:	mov	w0, w21
   3b3cc:	ldp	x19, x20, [sp, #16]
   3b3d0:	ldp	x21, x22, [sp, #32]
   3b3d4:	ldp	x29, x30, [sp], #96
   3b3d8:	ret
   3b3dc:	cmp	x1, #0x0
   3b3e0:	mov	w21, #0x0                   	// #0
   3b3e4:	b.gt	3b3c8 <mpfr_fits_ushort_p@@Base+0xb8>
   3b3e8:	cbnz	w20, 3b420 <mpfr_fits_ushort_p@@Base+0x110>
   3b3ec:	mov	w21, #0x1                   	// #1
   3b3f0:	cbnz	x1, 3b3c8 <mpfr_fits_ushort_p@@Base+0xb8>
   3b3f4:	bl	bf00 <mpfr_powerof2_raw@plt>
   3b3f8:	mov	w21, w0
   3b3fc:	b	3b3c8 <mpfr_fits_ushort_p@@Base+0xb8>
   3b400:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3b404:	cmp	x1, x0
   3b408:	cset	w21, eq  // eq = none
   3b40c:	mov	w0, w21
   3b410:	ldp	x19, x20, [sp, #16]
   3b414:	ldp	x21, x22, [sp, #32]
   3b418:	ldp	x29, x30, [sp], #96
   3b41c:	ret
   3b420:	sub	w1, w20, #0x1
   3b424:	cmp	w1, #0x1
   3b428:	cset	w21, ls  // ls = plast
   3b42c:	b	3b3c8 <mpfr_fits_ushort_p@@Base+0xb8>

000000000003b430 <mpfr_fits_uint_p@@Base>:
   3b430:	stp	x29, x30, [sp, #-96]!
   3b434:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3b438:	mov	x29, sp
   3b43c:	stp	x19, x20, [sp, #16]
   3b440:	mov	w20, w1
   3b444:	ldr	x1, [x0, #16]
   3b448:	stp	x21, x22, [sp, #32]
   3b44c:	cmp	x1, x2
   3b450:	b.le	3b520 <mpfr_fits_uint_p@@Base+0xf0>
   3b454:	ldr	w2, [x0, #8]
   3b458:	mov	x19, x0
   3b45c:	tbnz	w2, #31, 3b4fc <mpfr_fits_uint_p@@Base+0xcc>
   3b460:	cmp	x1, #0x1f
   3b464:	mov	w21, #0x1                   	// #1
   3b468:	b.le	3b4e8 <mpfr_fits_uint_p@@Base+0xb8>
   3b46c:	cmp	x1, #0x20
   3b470:	mov	w21, #0x0                   	// #0
   3b474:	b.ne	3b4e8 <mpfr_fits_uint_p@@Base+0xb8>  // b.any
   3b478:	mrs	x22, tpidr_el0
   3b47c:	add	x21, sp, #0x40
   3b480:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b484:	ldr	x2, [x0, #2576]
   3b488:	add	x0, x0, #0xa10
   3b48c:	blr	x2
   3b490:	str	x23, [sp, #48]
   3b494:	ldr	w23, [x22, x0]
   3b498:	mov	x0, x21
   3b49c:	bl	ca80 <mpfr_init2@plt>
   3b4a0:	ldr	w3, [x19, #8]
   3b4a4:	cmp	w20, #0x5
   3b4a8:	mov	x0, x21
   3b4ac:	mov	x1, x19
   3b4b0:	mov	w2, #0x2                   	// #2
   3b4b4:	csel	w2, w20, w2, ne  // ne = any
   3b4b8:	bl	c6a0 <mpfr_set4@plt>
   3b4bc:	ldr	x1, [sp, #80]
   3b4c0:	mov	x0, x21
   3b4c4:	cmp	x1, #0x20
   3b4c8:	cset	w21, eq  // eq = none
   3b4cc:	bl	c070 <mpfr_clear@plt>
   3b4d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b4d4:	ldr	x1, [x0, #2576]
   3b4d8:	add	x0, x0, #0xa10
   3b4dc:	blr	x1
   3b4e0:	str	w23, [x22, x0]
   3b4e4:	ldr	x23, [sp, #48]
   3b4e8:	mov	w0, w21
   3b4ec:	ldp	x19, x20, [sp, #16]
   3b4f0:	ldp	x21, x22, [sp, #32]
   3b4f4:	ldp	x29, x30, [sp], #96
   3b4f8:	ret
   3b4fc:	cmp	x1, #0x0
   3b500:	mov	w21, #0x0                   	// #0
   3b504:	b.gt	3b4e8 <mpfr_fits_uint_p@@Base+0xb8>
   3b508:	cbnz	w20, 3b540 <mpfr_fits_uint_p@@Base+0x110>
   3b50c:	mov	w21, #0x1                   	// #1
   3b510:	cbnz	x1, 3b4e8 <mpfr_fits_uint_p@@Base+0xb8>
   3b514:	bl	bf00 <mpfr_powerof2_raw@plt>
   3b518:	mov	w21, w0
   3b51c:	b	3b4e8 <mpfr_fits_uint_p@@Base+0xb8>
   3b520:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3b524:	cmp	x1, x0
   3b528:	cset	w21, eq  // eq = none
   3b52c:	mov	w0, w21
   3b530:	ldp	x19, x20, [sp, #16]
   3b534:	ldp	x21, x22, [sp, #32]
   3b538:	ldp	x29, x30, [sp], #96
   3b53c:	ret
   3b540:	sub	w1, w20, #0x1
   3b544:	cmp	w1, #0x1
   3b548:	cset	w21, ls  // ls = plast
   3b54c:	b	3b4e8 <mpfr_fits_uint_p@@Base+0xb8>

000000000003b550 <mpfr_fits_ulong_p@@Base>:
   3b550:	stp	x29, x30, [sp, #-96]!
   3b554:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3b558:	mov	x29, sp
   3b55c:	stp	x19, x20, [sp, #16]
   3b560:	mov	w20, w1
   3b564:	ldr	x1, [x0, #16]
   3b568:	stp	x21, x22, [sp, #32]
   3b56c:	cmp	x1, x2
   3b570:	b.le	3b640 <mpfr_fits_ulong_p@@Base+0xf0>
   3b574:	ldr	w2, [x0, #8]
   3b578:	mov	x19, x0
   3b57c:	tbnz	w2, #31, 3b61c <mpfr_fits_ulong_p@@Base+0xcc>
   3b580:	cmp	x1, #0x3f
   3b584:	mov	w21, #0x1                   	// #1
   3b588:	b.le	3b608 <mpfr_fits_ulong_p@@Base+0xb8>
   3b58c:	cmp	x1, #0x40
   3b590:	mov	w21, #0x0                   	// #0
   3b594:	b.ne	3b608 <mpfr_fits_ulong_p@@Base+0xb8>  // b.any
   3b598:	mrs	x22, tpidr_el0
   3b59c:	add	x21, sp, #0x40
   3b5a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b5a4:	ldr	x2, [x0, #2576]
   3b5a8:	add	x0, x0, #0xa10
   3b5ac:	blr	x2
   3b5b0:	str	x23, [sp, #48]
   3b5b4:	ldr	w23, [x22, x0]
   3b5b8:	mov	x0, x21
   3b5bc:	bl	ca80 <mpfr_init2@plt>
   3b5c0:	ldr	w3, [x19, #8]
   3b5c4:	cmp	w20, #0x5
   3b5c8:	mov	x0, x21
   3b5cc:	mov	x1, x19
   3b5d0:	mov	w2, #0x2                   	// #2
   3b5d4:	csel	w2, w20, w2, ne  // ne = any
   3b5d8:	bl	c6a0 <mpfr_set4@plt>
   3b5dc:	ldr	x1, [sp, #80]
   3b5e0:	mov	x0, x21
   3b5e4:	cmp	x1, #0x40
   3b5e8:	cset	w21, eq  // eq = none
   3b5ec:	bl	c070 <mpfr_clear@plt>
   3b5f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b5f4:	ldr	x1, [x0, #2576]
   3b5f8:	add	x0, x0, #0xa10
   3b5fc:	blr	x1
   3b600:	str	w23, [x22, x0]
   3b604:	ldr	x23, [sp, #48]
   3b608:	mov	w0, w21
   3b60c:	ldp	x19, x20, [sp, #16]
   3b610:	ldp	x21, x22, [sp, #32]
   3b614:	ldp	x29, x30, [sp], #96
   3b618:	ret
   3b61c:	cmp	x1, #0x0
   3b620:	mov	w21, #0x0                   	// #0
   3b624:	b.gt	3b608 <mpfr_fits_ulong_p@@Base+0xb8>
   3b628:	cbnz	w20, 3b660 <mpfr_fits_ulong_p@@Base+0x110>
   3b62c:	mov	w21, #0x1                   	// #1
   3b630:	cbnz	x1, 3b608 <mpfr_fits_ulong_p@@Base+0xb8>
   3b634:	bl	bf00 <mpfr_powerof2_raw@plt>
   3b638:	mov	w21, w0
   3b63c:	b	3b608 <mpfr_fits_ulong_p@@Base+0xb8>
   3b640:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3b644:	cmp	x1, x0
   3b648:	cset	w21, eq  // eq = none
   3b64c:	mov	w0, w21
   3b650:	ldp	x19, x20, [sp, #16]
   3b654:	ldp	x21, x22, [sp, #32]
   3b658:	ldp	x29, x30, [sp], #96
   3b65c:	ret
   3b660:	sub	w1, w20, #0x1
   3b664:	cmp	w1, #0x1
   3b668:	cset	w21, ls  // ls = plast
   3b66c:	b	3b608 <mpfr_fits_ulong_p@@Base+0xb8>

000000000003b670 <mpfr_fits_uintmax_p@@Base>:
   3b670:	stp	x29, x30, [sp, #-96]!
   3b674:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3b678:	mov	x29, sp
   3b67c:	stp	x19, x20, [sp, #16]
   3b680:	mov	w20, w1
   3b684:	ldr	x1, [x0, #16]
   3b688:	stp	x21, x22, [sp, #32]
   3b68c:	cmp	x1, x2
   3b690:	b.le	3b760 <mpfr_fits_uintmax_p@@Base+0xf0>
   3b694:	ldr	w2, [x0, #8]
   3b698:	mov	x19, x0
   3b69c:	tbnz	w2, #31, 3b73c <mpfr_fits_uintmax_p@@Base+0xcc>
   3b6a0:	cmp	x1, #0x3f
   3b6a4:	mov	w21, #0x1                   	// #1
   3b6a8:	b.le	3b728 <mpfr_fits_uintmax_p@@Base+0xb8>
   3b6ac:	cmp	x1, #0x40
   3b6b0:	mov	w21, #0x0                   	// #0
   3b6b4:	b.ne	3b728 <mpfr_fits_uintmax_p@@Base+0xb8>  // b.any
   3b6b8:	mrs	x22, tpidr_el0
   3b6bc:	add	x21, sp, #0x40
   3b6c0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b6c4:	ldr	x2, [x0, #2576]
   3b6c8:	add	x0, x0, #0xa10
   3b6cc:	blr	x2
   3b6d0:	str	x23, [sp, #48]
   3b6d4:	ldr	w23, [x22, x0]
   3b6d8:	mov	x0, x21
   3b6dc:	bl	ca80 <mpfr_init2@plt>
   3b6e0:	ldr	w3, [x19, #8]
   3b6e4:	cmp	w20, #0x5
   3b6e8:	mov	x0, x21
   3b6ec:	mov	x1, x19
   3b6f0:	mov	w2, #0x2                   	// #2
   3b6f4:	csel	w2, w20, w2, ne  // ne = any
   3b6f8:	bl	c6a0 <mpfr_set4@plt>
   3b6fc:	ldr	x1, [sp, #80]
   3b700:	mov	x0, x21
   3b704:	cmp	x1, #0x40
   3b708:	cset	w21, eq  // eq = none
   3b70c:	bl	c070 <mpfr_clear@plt>
   3b710:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b714:	ldr	x1, [x0, #2576]
   3b718:	add	x0, x0, #0xa10
   3b71c:	blr	x1
   3b720:	str	w23, [x22, x0]
   3b724:	ldr	x23, [sp, #48]
   3b728:	mov	w0, w21
   3b72c:	ldp	x19, x20, [sp, #16]
   3b730:	ldp	x21, x22, [sp, #32]
   3b734:	ldp	x29, x30, [sp], #96
   3b738:	ret
   3b73c:	cmp	x1, #0x0
   3b740:	mov	w21, #0x0                   	// #0
   3b744:	b.gt	3b728 <mpfr_fits_uintmax_p@@Base+0xb8>
   3b748:	cbnz	w20, 3b780 <mpfr_fits_uintmax_p@@Base+0x110>
   3b74c:	mov	w21, #0x1                   	// #1
   3b750:	cbnz	x1, 3b728 <mpfr_fits_uintmax_p@@Base+0xb8>
   3b754:	bl	bf00 <mpfr_powerof2_raw@plt>
   3b758:	mov	w21, w0
   3b75c:	b	3b728 <mpfr_fits_uintmax_p@@Base+0xb8>
   3b760:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3b764:	cmp	x1, x0
   3b768:	cset	w21, eq  // eq = none
   3b76c:	mov	w0, w21
   3b770:	ldp	x19, x20, [sp, #16]
   3b774:	ldp	x21, x22, [sp, #32]
   3b778:	ldp	x29, x30, [sp], #96
   3b77c:	ret
   3b780:	sub	w1, w20, #0x1
   3b784:	cmp	w1, #0x1
   3b788:	cset	w21, ls  // ls = plast
   3b78c:	b	3b728 <mpfr_fits_uintmax_p@@Base+0xb8>

000000000003b790 <mpfr_fits_intmax_p@@Base>:
   3b790:	stp	x29, x30, [sp, #-144]!
   3b794:	mov	x29, sp
   3b798:	stp	x19, x20, [sp, #16]
   3b79c:	mov	x19, x0
   3b7a0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3b7a4:	stp	x21, x22, [sp, #32]
   3b7a8:	ldr	x3, [x19, #16]
   3b7ac:	cmp	x3, x0
   3b7b0:	b.le	3b8c0 <mpfr_fits_intmax_p@@Base+0x130>
   3b7b4:	cmp	x3, #0x0
   3b7b8:	mov	w22, #0x1                   	// #1
   3b7bc:	b.le	3b878 <mpfr_fits_intmax_p@@Base+0xe8>
   3b7c0:	stp	x23, x24, [sp, #48]
   3b7c4:	mov	w0, #0x3f                  	// #63
   3b7c8:	ldr	w23, [x19, #8]
   3b7cc:	mov	w21, w1
   3b7d0:	mov	w1, #0x3e                  	// #62
   3b7d4:	cmp	w23, #0x0
   3b7d8:	mov	w2, #0x40                  	// #64
   3b7dc:	csel	w1, w1, w0, ge  // ge = tcont
   3b7e0:	csel	w0, w0, w2, ge  // ge = tcont
   3b7e4:	cmp	x3, w1, sxtw
   3b7e8:	b.le	3b88c <mpfr_fits_intmax_p@@Base+0xfc>
   3b7ec:	add	w1, w0, w22
   3b7f0:	cmp	x3, w1, sxtw
   3b7f4:	b.ge	3b8a4 <mpfr_fits_intmax_p@@Base+0x114>  // b.tcont
   3b7f8:	stp	x25, x26, [sp, #64]
   3b7fc:	mrs	x25, tpidr_el0
   3b800:	sxtw	x20, w0
   3b804:	add	x24, sp, #0x50
   3b808:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b80c:	ldr	x1, [x0, #2576]
   3b810:	add	x0, x0, #0xa10
   3b814:	blr	x1
   3b818:	mov	x1, x20
   3b81c:	ldr	w26, [x25, x0]
   3b820:	mov	x0, x24
   3b824:	bl	ca80 <mpfr_init2@plt>
   3b828:	ldr	w3, [x19, #8]
   3b82c:	cmp	w21, #0x5
   3b830:	mov	w2, #0x4                   	// #4
   3b834:	mov	x0, x24
   3b838:	csel	w2, w21, w2, ne  // ne = any
   3b83c:	mov	x1, x19
   3b840:	bl	c6a0 <mpfr_set4@plt>
   3b844:	tbnz	w23, #31, 3b8d0 <mpfr_fits_intmax_p@@Base+0x140>
   3b848:	ldr	x0, [sp, #96]
   3b84c:	cmp	x0, x20
   3b850:	cset	w22, eq  // eq = none
   3b854:	mov	x0, x24
   3b858:	bl	c070 <mpfr_clear@plt>
   3b85c:	ldp	x23, x24, [sp, #48]
   3b860:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b864:	ldr	x1, [x0, #2576]
   3b868:	add	x0, x0, #0xa10
   3b86c:	blr	x1
   3b870:	str	w26, [x25, x0]
   3b874:	ldp	x25, x26, [sp, #64]
   3b878:	mov	w0, w22
   3b87c:	ldp	x19, x20, [sp, #16]
   3b880:	ldp	x21, x22, [sp, #32]
   3b884:	ldp	x29, x30, [sp], #144
   3b888:	ret
   3b88c:	mov	w0, w22
   3b890:	ldp	x19, x20, [sp, #16]
   3b894:	ldp	x21, x22, [sp, #32]
   3b898:	ldp	x23, x24, [sp, #48]
   3b89c:	ldp	x29, x30, [sp], #144
   3b8a0:	ret
   3b8a4:	mov	w22, #0x0                   	// #0
   3b8a8:	mov	w0, w22
   3b8ac:	ldp	x19, x20, [sp, #16]
   3b8b0:	ldp	x21, x22, [sp, #32]
   3b8b4:	ldp	x23, x24, [sp, #48]
   3b8b8:	ldp	x29, x30, [sp], #144
   3b8bc:	ret
   3b8c0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3b8c4:	cmp	x3, x0
   3b8c8:	cset	w22, eq  // eq = none
   3b8cc:	b	3b878 <mpfr_fits_intmax_p@@Base+0xe8>
   3b8d0:	add	x19, sp, #0x70
   3b8d4:	mov	x1, x20
   3b8d8:	mov	x0, x19
   3b8dc:	bl	ca80 <mpfr_init2@plt>
   3b8e0:	mov	x0, x19
   3b8e4:	mov	w2, #0x0                   	// #0
   3b8e8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3b8ec:	bl	c080 <__gmpfr_set_sj@plt>
   3b8f0:	mov	w2, w22
   3b8f4:	mov	x1, x19
   3b8f8:	mov	x0, x24
   3b8fc:	bl	c9a0 <mpfr_cmp3@plt>
   3b900:	mov	w22, w0
   3b904:	mov	x0, x19
   3b908:	mvn	w22, w22
   3b90c:	lsr	w22, w22, #31
   3b910:	bl	c070 <mpfr_clear@plt>
   3b914:	b	3b854 <mpfr_fits_intmax_p@@Base+0xc4>

000000000003b918 <mpfr_get_si@@Base>:
   3b918:	stp	x29, x30, [sp, #-128]!
   3b91c:	mov	x29, sp
   3b920:	stp	x19, x20, [sp, #16]
   3b924:	mov	x20, x0
   3b928:	stp	x25, x26, [sp, #64]
   3b92c:	mov	w26, w1
   3b930:	bl	c790 <mpfr_fits_slong_p@plt>
   3b934:	cbz	w0, 3ba94 <mpfr_get_si@@Base+0x17c>
   3b938:	ldr	x0, [x20, #16]
   3b93c:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   3b940:	cmp	x0, x25
   3b944:	b.eq	3ba7c <mpfr_get_si@@Base+0x164>  // b.none
   3b948:	mrs	x19, tpidr_el0
   3b94c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b950:	ldr	x1, [x0, #2576]
   3b954:	add	x0, x0, #0xa10
   3b958:	blr	x1
   3b95c:	stp	x23, x24, [sp, #48]
   3b960:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3b964:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3b968:	ldr	w23, [x19, x0]
   3b96c:	add	x24, sp, #0x60
   3b970:	str	x27, [sp, #80]
   3b974:	add	x27, x19, x0
   3b978:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b97c:	ldr	x1, [x0, #2512]
   3b980:	add	x0, x0, #0x9d0
   3b984:	blr	x1
   3b988:	add	x3, x19, x0
   3b98c:	stp	x21, x22, [sp, #32]
   3b990:	mov	x1, #0x3f                  	// #63
   3b994:	ldr	x22, [x19, x0]
   3b998:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3b99c:	ldr	x5, [x0, #2544]
   3b9a0:	add	x0, x0, #0x9f0
   3b9a4:	blr	x5
   3b9a8:	str	x4, [x3]
   3b9ac:	ldr	x21, [x19, x0]
   3b9b0:	str	x2, [x19, x0]
   3b9b4:	mov	x0, x24
   3b9b8:	bl	ca80 <mpfr_init2@plt>
   3b9bc:	mov	x1, x20
   3b9c0:	mov	w2, w26
   3b9c4:	mov	x0, x24
   3b9c8:	bl	c300 <mpfr_rint@plt>
   3b9cc:	ldr	x1, [sp, #112]
   3b9d0:	ldr	w0, [x27]
   3b9d4:	cmp	x1, x25
   3b9d8:	orr	w23, w23, w0
   3b9dc:	b.eq	3bae0 <mpfr_get_si@@Base+0x1c8>  // b.none
   3b9e0:	ldr	x0, [sp, #96]
   3b9e4:	neg	w1, w1
   3b9e8:	ldr	x2, [sp, #120]
   3b9ec:	sub	x0, x0, #0x1
   3b9f0:	ldr	w3, [x20, #8]
   3b9f4:	asr	x0, x0, #6
   3b9f8:	cmp	w3, #0x0
   3b9fc:	ldr	x20, [x2, x0, lsl #3]
   3ba00:	lsr	x20, x20, x1
   3ba04:	b.le	3ba6c <mpfr_get_si@@Base+0x154>
   3ba08:	mov	x0, x24
   3ba0c:	bl	c070 <mpfr_clear@plt>
   3ba10:	ldr	x27, [sp, #80]
   3ba14:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3ba18:	ldr	x1, [x0, #2576]
   3ba1c:	add	x0, x0, #0xa10
   3ba20:	blr	x1
   3ba24:	str	w23, [x19, x0]
   3ba28:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3ba2c:	ldr	x1, [x0, #2512]
   3ba30:	add	x0, x0, #0x9d0
   3ba34:	blr	x1
   3ba38:	str	x22, [x19, x0]
   3ba3c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3ba40:	ldr	x1, [x0, #2544]
   3ba44:	add	x0, x0, #0x9f0
   3ba48:	blr	x1
   3ba4c:	str	x21, [x19, x0]
   3ba50:	ldp	x21, x22, [sp, #32]
   3ba54:	ldp	x23, x24, [sp, #48]
   3ba58:	mov	x0, x20
   3ba5c:	ldp	x19, x20, [sp, #16]
   3ba60:	ldp	x25, x26, [sp, #64]
   3ba64:	ldp	x29, x30, [sp], #128
   3ba68:	ret
   3ba6c:	cmp	x20, #0x0
   3ba70:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ba74:	csneg	x20, x0, x20, lt  // lt = tstop
   3ba78:	b	3ba08 <mpfr_get_si@@Base+0xf0>
   3ba7c:	mov	x20, #0x0                   	// #0
   3ba80:	mov	x0, x20
   3ba84:	ldp	x19, x20, [sp, #16]
   3ba88:	ldp	x25, x26, [sp, #64]
   3ba8c:	ldp	x29, x30, [sp], #128
   3ba90:	ret
   3ba94:	mrs	x1, tpidr_el0
   3ba98:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3ba9c:	ldr	x2, [x0, #2576]
   3baa0:	add	x0, x0, #0xa10
   3baa4:	blr	x2
   3baa8:	add	x0, x1, x0
   3baac:	mov	x2, #0x2                   	// #2
   3bab0:	ldr	x3, [x20, #16]
   3bab4:	movk	x2, #0x8000, lsl #48
   3bab8:	ldr	w1, [x0]
   3babc:	cmp	x3, x2
   3bac0:	orr	w1, w1, #0x10
   3bac4:	str	w1, [x0]
   3bac8:	b.eq	3ba7c <mpfr_get_si@@Base+0x164>  // b.none
   3bacc:	ldr	w0, [x20, #8]
   3bad0:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
   3bad4:	cmp	w0, #0x0
   3bad8:	cinv	x20, x20, lt  // lt = tstop
   3badc:	b	3ba58 <mpfr_get_si@@Base+0x140>
   3bae0:	mov	x20, #0x0                   	// #0
   3bae4:	b	3ba08 <mpfr_get_si@@Base+0xf0>

000000000003bae8 <mpfr_get_ui@@Base>:
   3bae8:	stp	x29, x30, [sp, #-128]!
   3baec:	mov	x29, sp
   3baf0:	stp	x19, x20, [sp, #16]
   3baf4:	mov	x20, x0
   3baf8:	stp	x25, x26, [sp, #64]
   3bafc:	mov	w26, w1
   3bb00:	bl	be50 <mpfr_fits_ulong_p@plt>
   3bb04:	cbz	w0, 3bc50 <mpfr_get_ui@@Base+0x168>
   3bb08:	ldr	x0, [x20, #16]
   3bb0c:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   3bb10:	cmp	x0, x25
   3bb14:	b.eq	3bc30 <mpfr_get_ui@@Base+0x148>  // b.none
   3bb18:	mrs	x19, tpidr_el0
   3bb1c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3bb20:	ldr	x1, [x0, #2576]
   3bb24:	add	x0, x0, #0xa10
   3bb28:	blr	x1
   3bb2c:	stp	x23, x24, [sp, #48]
   3bb30:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3bb34:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3bb38:	ldr	w23, [x19, x0]
   3bb3c:	add	x24, sp, #0x60
   3bb40:	str	x27, [sp, #80]
   3bb44:	add	x27, x19, x0
   3bb48:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3bb4c:	ldr	x1, [x0, #2512]
   3bb50:	add	x0, x0, #0x9d0
   3bb54:	blr	x1
   3bb58:	add	x3, x19, x0
   3bb5c:	stp	x21, x22, [sp, #32]
   3bb60:	mov	x1, #0x40                  	// #64
   3bb64:	ldr	x22, [x19, x0]
   3bb68:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3bb6c:	ldr	x5, [x0, #2544]
   3bb70:	add	x0, x0, #0x9f0
   3bb74:	blr	x5
   3bb78:	str	x4, [x3]
   3bb7c:	ldr	x21, [x19, x0]
   3bb80:	str	x2, [x19, x0]
   3bb84:	mov	x0, x24
   3bb88:	bl	ca80 <mpfr_init2@plt>
   3bb8c:	mov	x1, x20
   3bb90:	mov	w2, w26
   3bb94:	mov	x0, x24
   3bb98:	bl	c300 <mpfr_rint@plt>
   3bb9c:	ldr	x1, [sp, #112]
   3bba0:	ldr	w0, [x27]
   3bba4:	cmp	x1, x25
   3bba8:	orr	w23, w23, w0
   3bbac:	b.eq	3bc48 <mpfr_get_ui@@Base+0x160>  // b.none
   3bbb0:	ldr	x0, [sp, #96]
   3bbb4:	neg	w1, w1
   3bbb8:	ldr	x2, [sp, #120]
   3bbbc:	sub	x0, x0, #0x1
   3bbc0:	asr	x0, x0, #6
   3bbc4:	ldr	x20, [x2, x0, lsl #3]
   3bbc8:	lsr	x20, x20, x1
   3bbcc:	mov	x0, x24
   3bbd0:	bl	c070 <mpfr_clear@plt>
   3bbd4:	ldr	x27, [sp, #80]
   3bbd8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3bbdc:	ldr	x1, [x0, #2576]
   3bbe0:	add	x0, x0, #0xa10
   3bbe4:	blr	x1
   3bbe8:	str	w23, [x19, x0]
   3bbec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3bbf0:	ldr	x1, [x0, #2512]
   3bbf4:	add	x0, x0, #0x9d0
   3bbf8:	blr	x1
   3bbfc:	str	x22, [x19, x0]
   3bc00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3bc04:	ldr	x1, [x0, #2544]
   3bc08:	add	x0, x0, #0x9f0
   3bc0c:	blr	x1
   3bc10:	str	x21, [x19, x0]
   3bc14:	ldp	x21, x22, [sp, #32]
   3bc18:	ldp	x23, x24, [sp, #48]
   3bc1c:	mov	x0, x20
   3bc20:	ldp	x19, x20, [sp, #16]
   3bc24:	ldp	x25, x26, [sp, #64]
   3bc28:	ldp	x29, x30, [sp], #128
   3bc2c:	ret
   3bc30:	mov	x20, #0x0                   	// #0
   3bc34:	mov	x0, x20
   3bc38:	ldp	x19, x20, [sp, #16]
   3bc3c:	ldp	x25, x26, [sp, #64]
   3bc40:	ldp	x29, x30, [sp], #128
   3bc44:	ret
   3bc48:	mov	x20, #0x0                   	// #0
   3bc4c:	b	3bbcc <mpfr_get_ui@@Base+0xe4>
   3bc50:	mrs	x1, tpidr_el0
   3bc54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3bc58:	ldr	x2, [x0, #2576]
   3bc5c:	add	x0, x0, #0xa10
   3bc60:	blr	x2
   3bc64:	add	x0, x1, x0
   3bc68:	mov	x2, #0x2                   	// #2
   3bc6c:	ldr	x3, [x20, #16]
   3bc70:	movk	x2, #0x8000, lsl #48
   3bc74:	ldr	w1, [x0]
   3bc78:	cmp	x3, x2
   3bc7c:	orr	w1, w1, #0x10
   3bc80:	str	w1, [x0]
   3bc84:	b.eq	3bc30 <mpfr_get_ui@@Base+0x148>  // b.none
   3bc88:	ldrsw	x20, [x20, #8]
   3bc8c:	mov	x0, #0x0                   	// #0
   3bc90:	cmp	x20, x0
   3bc94:	csetm	x20, ge  // ge = tcont
   3bc98:	b	3bc1c <mpfr_get_ui@@Base+0x134>
   3bc9c:	nop
   3bca0:	sub	sp, sp, #0x320
   3bca4:	stp	x29, x30, [sp]
   3bca8:	mov	x29, sp
   3bcac:	stp	x19, x20, [sp, #16]
   3bcb0:	mov	x20, x1
   3bcb4:	str	w2, [sp, #224]
   3bcb8:	ldr	x2, [x20]
   3bcbc:	str	x2, [sp, #168]
   3bcc0:	ldr	x2, [x0]
   3bcc4:	str	x2, [sp, #152]
   3bcc8:	ldr	x1, [x1, #16]
   3bccc:	str	x0, [sp, #192]
   3bcd0:	cmp	x1, #0x3
   3bcd4:	b.le	3bd00 <mpfr_get_ui@@Base+0x218>
   3bcd8:	sub	x1, x1, #0x1
   3bcdc:	mov	x4, x2
   3bce0:	cmp	x1, #0x3f
   3bce4:	mov	x3, #0x1                   	// #1
   3bce8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3bcec:	add	x4, x4, x3
   3bcf0:	lsl	x1, x3, x1
   3bcf4:	csel	x2, x1, x2, lt  // lt = tstop
   3bcf8:	cmp	x4, x2
   3bcfc:	b.cc	3c53c <mpfr_get_ui@@Base+0xa54>  // b.lo, b.ul, b.last
   3bd00:	ldr	x0, [sp, #152]
   3bd04:	stp	x21, x22, [sp, #32]
   3bd08:	stp	x23, x24, [sp, #48]
   3bd0c:	cmp	x0, #0x1
   3bd10:	stp	x25, x26, [sp, #64]
   3bd14:	stp	x27, x28, [sp, #80]
   3bd18:	stp	d8, d9, [sp, #96]
   3bd1c:	stp	d10, d11, [sp, #112]
   3bd20:	stp	d12, d13, [sp, #128]
   3bd24:	b.eq	3bd44 <mpfr_get_ui@@Base+0x25c>  // b.none
   3bd28:	b.le	3c810 <mpfr_get_ui@@Base+0xd28>
   3bd2c:	mov	x2, x0
   3bd30:	sub	x0, x0, #0x1
   3bd34:	clz	x0, x0
   3bd38:	mov	w1, #0x40                  	// #64
   3bd3c:	sub	w0, w1, w0
   3bd40:	add	x0, x2, w0, sxtw
   3bd44:	ldr	x1, [x20, #16]
   3bd48:	add	x24, sp, #0x180
   3bd4c:	ldr	x2, [sp, #168]
   3bd50:	add	x27, x0, #0xa
   3bd54:	mov	x0, x24
   3bd58:	add	x26, sp, #0x1e0
   3bd5c:	cmp	x1, x2
   3bd60:	csel	x1, x1, x2, ge  // ge = tcont
   3bd64:	mov	x2, #0x40                  	// #64
   3bd68:	str	x2, [sp, #200]
   3bd6c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3bd70:	ldr	d9, [x2, #2104]
   3bd74:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3bd78:	ldr	d11, [x2, #2112]
   3bd7c:	bl	ca80 <mpfr_init2@plt>
   3bd80:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3bd84:	adrp	x4, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3bd88:	mov	x1, x20
   3bd8c:	mov	w3, #0x0                   	// #0
   3bd90:	ldr	d10, [x0, #2120]
   3bd94:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   3bd98:	ldr	d12, [x4, #2128]
   3bd9c:	ldr	x2, [x0, #3928]
   3bda0:	mov	x0, x24
   3bda4:	bl	bb70 <mpfr_sub@plt>
   3bda8:	str	x24, [sp, #160]
   3bdac:	add	x1, sp, #0x228
   3bdb0:	str	x1, [sp, #376]
   3bdb4:	ldr	x1, [sp, #400]
   3bdb8:	mov	x0, #0x1                   	// #1
   3bdbc:	add	x2, sp, #0x210
   3bdc0:	add	x4, sp, #0x218
   3bdc4:	add	x3, sp, #0x220
   3bdc8:	str	x0, [sp, #256]
   3bdcc:	str	w0, [sp, #264]
   3bdd0:	stp	x2, x0, [sp, #280]
   3bdd4:	str	w0, [sp, #296]
   3bdd8:	stp	x4, x0, [sp, #312]
   3bddc:	str	w0, [sp, #328]
   3bde0:	stp	x3, x0, [sp, #344]
   3bde4:	str	w0, [sp, #360]
   3bde8:	str	xzr, [sp, #512]
   3bdec:	str	x2, [sp, #520]
   3bdf0:	sub	x0, x27, #0x3
   3bdf4:	str	x0, [sp, #184]
   3bdf8:	add	x0, x0, x0, lsr #63
   3bdfc:	neg	x0, x0, asr #1
   3be00:	cmp	x0, x1
   3be04:	b.lt	3bf9c <mpfr_get_ui@@Base+0x4b4>  // b.tstop
   3be08:	ldr	x1, [sp, #168]
   3be0c:	add	x0, x27, #0x2
   3be10:	add	x22, x27, #0x3
   3be14:	cmp	x0, x1
   3be18:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3be1c:	csel	x22, x22, x1, ge  // ge = tcont
   3be20:	cmp	x22, x0
   3be24:	ldr	x1, [sp, #512]
   3be28:	b.ge	3c828 <mpfr_get_ui@@Base+0xd40>  // b.tcont
   3be2c:	sub	x21, x22, #0x1
   3be30:	asr	x21, x21, #6
   3be34:	add	x21, x21, #0x1
   3be38:	lsl	x2, x21, #5
   3be3c:	str	x2, [sp, #512]
   3be40:	cbz	x1, 3bf88 <mpfr_get_ui@@Base+0x4a0>
   3be44:	ldr	x0, [sp, #520]
   3be48:	bl	c1c0 <mpfr_reallocate_func@plt>
   3be4c:	mov	x2, x0
   3be50:	str	x0, [sp, #520]
   3be54:	add	x5, x21, x21, lsl #1
   3be58:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   3be5c:	add	x6, x2, x21, lsl #3
   3be60:	add	x21, x2, x21, lsl #4
   3be64:	add	x5, x2, x5, lsl #3
   3be68:	stp	x2, x22, [sp, #280]
   3be6c:	mov	w4, #0x1                   	// #1
   3be70:	ldr	x1, [x0, #3928]
   3be74:	add	x19, sp, #0x140
   3be78:	ldr	x2, [sp, #160]
   3be7c:	mov	w3, #0x0                   	// #0
   3be80:	mov	x0, x19
   3be84:	str	x22, [sp, #256]
   3be88:	str	w4, [sp, #264]
   3be8c:	add	x23, sp, #0x160
   3be90:	str	w4, [sp, #296]
   3be94:	stp	x6, x22, [sp, #312]
   3be98:	str	w4, [sp, #328]
   3be9c:	stp	x21, x22, [sp, #344]
   3bea0:	str	w4, [sp, #360]
   3bea4:	str	x5, [sp, #376]
   3bea8:	bl	c620 <mpfr_div@plt>
   3beac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3beb0:	ldr	x1, [x0, #2608]
   3beb4:	add	x0, x0, #0xa30
   3beb8:	blr	x1
   3bebc:	mov	w2, #0x0                   	// #0
   3bec0:	mrs	x1, tpidr_el0
   3bec4:	add	x1, x1, x0
   3bec8:	mov	x0, x23
   3becc:	bl	c380 <mpfr_cache@plt>
   3bed0:	mov	x1, x19
   3bed4:	mov	x2, x23
   3bed8:	mov	x0, x19
   3bedc:	mov	w3, #0x0                   	// #0
   3bee0:	bl	c1a0 <mpfr_add@plt>
   3bee4:	ldr	x1, [sp, #336]
   3bee8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3beec:	cmp	x1, x0
   3bef0:	b.le	3c4e8 <mpfr_get_ui@@Base+0xa00>
   3bef4:	ldr	w0, [sp, #224]
   3bef8:	ldr	x1, [sp, #320]
   3befc:	cmp	w0, #0x0
   3bf00:	ldr	x2, [sp, #184]
   3bf04:	sub	x1, x1, #0x1
   3bf08:	ldr	x0, [sp, #344]
   3bf0c:	asr	x1, x1, #6
   3bf10:	ldr	x3, [sp, #152]
   3bf14:	add	x1, x1, #0x1
   3bf18:	cinc	x3, x3, eq  // eq = none
   3bf1c:	bl	c370 <mpfr_round_p@plt>
   3bf20:	cbz	w0, 3c4e8 <mpfr_get_ui@@Base+0xa00>
   3bf24:	ldr	w2, [sp, #224]
   3bf28:	mov	x1, x19
   3bf2c:	ldr	w3, [sp, #328]
   3bf30:	ldr	x0, [sp, #192]
   3bf34:	ldr	x24, [sp, #160]
   3bf38:	bl	c6a0 <mpfr_set4@plt>
   3bf3c:	mov	w19, w0
   3bf40:	ldr	x1, [sp, #512]
   3bf44:	cbz	x1, 3bf50 <mpfr_get_ui@@Base+0x468>
   3bf48:	ldr	x0, [sp, #520]
   3bf4c:	bl	cc20 <mpfr_free_func@plt>
   3bf50:	mov	x0, x24
   3bf54:	bl	c070 <mpfr_clear@plt>
   3bf58:	ldp	x21, x22, [sp, #32]
   3bf5c:	ldp	x23, x24, [sp, #48]
   3bf60:	ldp	x25, x26, [sp, #64]
   3bf64:	ldp	x27, x28, [sp, #80]
   3bf68:	ldp	d8, d9, [sp, #96]
   3bf6c:	ldp	d10, d11, [sp, #112]
   3bf70:	ldp	d12, d13, [sp, #128]
   3bf74:	mov	w0, w19
   3bf78:	ldp	x29, x30, [sp]
   3bf7c:	ldp	x19, x20, [sp, #16]
   3bf80:	add	sp, sp, #0x320
   3bf84:	ret
   3bf88:	mov	x0, x2
   3bf8c:	bl	ccf0 <mpfr_allocate_func@plt>
   3bf90:	mov	x2, x0
   3bf94:	str	x0, [sp, #520]
   3bf98:	b	3be54 <mpfr_get_ui@@Base+0x36c>
   3bf9c:	mov	x0, x20
   3bfa0:	mov	w1, #0x0                   	// #0
   3bfa4:	bl	bd30 <mpfr_get_d@plt>
   3bfa8:	fmov	d8, d0
   3bfac:	scvtf	d13, x27
   3bfb0:	bl	bcd0 <__gmpfr_floor_log2@plt>
   3bfb4:	scvtf	d0, x0
   3bfb8:	fmadd	d1, d13, d9, d11
   3bfbc:	fmsub	d0, d0, d9, d10
   3bfc0:	fmadd	d1, d0, d8, d1
   3bfc4:	fcmpe	d1, #0.0
   3bfc8:	b.ls	3c7b8 <mpfr_get_ui@@Base+0xcd0>  // b.plast
   3bfcc:	fcvtzs	w23, d1
   3bfd0:	fmov	d1, #2.000000000000000000e+00
   3bfd4:	fmov	d0, #1.000000000000000000e+00
   3bfd8:	add	w23, w23, w23, lsr #31
   3bfdc:	asr	w23, w23, #1
   3bfe0:	add	w23, w23, #0x1
   3bfe4:	scvtf	d2, w23
   3bfe8:	fmadd	d8, d2, d1, d8
   3bfec:	fsub	d8, d8, d0
   3bff0:	fdiv	d8, d8, d12
   3bff4:	fcvtzs	w0, d8
   3bff8:	str	w0, [sp, #208]
   3bffc:	add	w0, w0, #0x1
   3c000:	str	w0, [sp, #228]
   3c004:	cmp	x27, #0x1
   3c008:	b.le	3c7e0 <mpfr_get_ui@@Base+0xcf8>
   3c00c:	sub	x1, x27, #0x1
   3c010:	mov	w0, #0x40                  	// #64
   3c014:	clz	x1, x1
   3c018:	add	w2, w23, #0x1
   3c01c:	sub	w0, w0, w1
   3c020:	sbfiz	x1, x2, #5, #32
   3c024:	str	x1, [sp, #232]
   3c028:	add	w22, w0, w0, lsl #1
   3c02c:	mov	x0, x1
   3c030:	ldr	x1, [sp, #168]
   3c034:	asr	w22, w22, #1
   3c038:	add	w22, w22, #0x4
   3c03c:	add	x22, x27, w22, sxtw
   3c040:	cmp	x1, x22
   3c044:	csel	x22, x1, x22, ge  // ge = tcont
   3c048:	bl	ccf0 <mpfr_allocate_func@plt>
   3c04c:	str	x0, [sp, #176]
   3c050:	cmp	w23, #0x0
   3c054:	b.le	3c088 <mpfr_get_ui@@Base+0x5a0>
   3c058:	sub	w19, w23, #0x1
   3c05c:	add	x21, x0, #0x20
   3c060:	ubfiz	x19, x19, #5, #32
   3c064:	add	x19, x19, #0x40
   3c068:	add	x19, x0, x19
   3c06c:	nop
   3c070:	mov	x0, x21
   3c074:	mov	x1, x22
   3c078:	add	x21, x21, #0x20
   3c07c:	bl	ca80 <mpfr_init2@plt>
   3c080:	cmp	x21, x19
   3c084:	b.ne	3c070 <mpfr_get_ui@@Base+0x588>  // b.any
   3c088:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3c08c:	cmp	x22, x0
   3c090:	ldr	x1, [sp, #512]
   3c094:	b.ge	3c828 <mpfr_get_ui@@Base+0xd40>  // b.tcont
   3c098:	sub	x19, x22, #0x1
   3c09c:	asr	x21, x19, #6
   3c0a0:	add	x21, x21, #0x1
   3c0a4:	lsl	x2, x21, #5
   3c0a8:	str	x2, [sp, #512]
   3c0ac:	cbnz	x1, 3c518 <mpfr_get_ui@@Base+0xa30>
   3c0b0:	mov	x0, x2
   3c0b4:	bl	ccf0 <mpfr_allocate_func@plt>
   3c0b8:	str	x0, [sp, #520]
   3c0bc:	add	x2, x21, x21, lsl #1
   3c0c0:	mov	w1, #0x1                   	// #1
   3c0c4:	str	x22, [sp, #256]
   3c0c8:	cmp	w23, #0x0
   3c0cc:	add	x2, x0, x2, lsl #3
   3c0d0:	str	w1, [sp, #264]
   3c0d4:	stp	x0, x22, [sp, #280]
   3c0d8:	str	w1, [sp, #296]
   3c0dc:	str	x22, [sp, #320]
   3c0e0:	str	w1, [sp, #328]
   3c0e4:	str	x22, [sp, #352]
   3c0e8:	str	w1, [sp, #360]
   3c0ec:	add	x1, x0, x21, lsl #3
   3c0f0:	add	x21, x0, x21, lsl #4
   3c0f4:	str	x1, [sp, #312]
   3c0f8:	str	x21, [sp, #344]
   3c0fc:	str	x2, [sp, #376]
   3c100:	b.gt	3c570 <mpfr_get_ui@@Base+0xa88>
   3c104:	asr	x19, x19, #6
   3c108:	add	x19, x19, #0x1
   3c10c:	lsl	x0, x19, #1
   3c110:	cmp	x0, #0x10
   3c114:	b.gt	3c70c <mpfr_get_ui@@Base+0xc24>
   3c118:	add	x0, sp, #0x2a0
   3c11c:	str	xzr, [sp, #656]
   3c120:	mov	x4, x0
   3c124:	str	x0, [sp, #664]
   3c128:	add	x3, x4, x19, lsl #3
   3c12c:	mov	w5, #0x1                   	// #1
   3c130:	ldrsw	x21, [sp, #228]
   3c134:	add	x24, sp, #0x1c0
   3c138:	mov	x1, x20
   3c13c:	mov	w2, #0x0                   	// #0
   3c140:	mov	x0, x26
   3c144:	str	x21, [sp, #216]
   3c148:	str	x22, [sp, #448]
   3c14c:	add	x19, sp, #0x140
   3c150:	str	w5, [sp, #456]
   3c154:	stp	x4, x22, [sp, #472]
   3c158:	str	w5, [sp, #488]
   3c15c:	str	x3, [sp, #504]
   3c160:	bl	bd70 <mpfr_neg@plt>
   3c164:	mov	x1, x21
   3c168:	mov	x2, x26
   3c16c:	mov	w3, #0x0                   	// #0
   3c170:	mov	x0, x24
   3c174:	bl	ca10 <mpfr_ui_pow@plt>
   3c178:	mov	x1, x24
   3c17c:	mov	w3, #0x0                   	// #0
   3c180:	mov	x2, #0x1                   	// #1
   3c184:	mov	x0, x24
   3c188:	bl	c8f0 <mpfr_div_2ui@plt>
   3c18c:	ldr	w3, [sp, #456]
   3c190:	mov	x1, x24
   3c194:	mov	x0, x19
   3c198:	mov	w2, #0x0                   	// #0
   3c19c:	bl	c6a0 <mpfr_set4@plt>
   3c1a0:	ldr	w0, [sp, #208]
   3c1a4:	cmp	w0, #0x1
   3c1a8:	b.le	3c1f8 <mpfr_get_ui@@Base+0x710>
   3c1ac:	ldr	w0, [sp, #208]
   3c1b0:	sub	w21, w0, #0x2
   3c1b4:	sxtw	x1, w0
   3c1b8:	sub	x22, x1, #0x1
   3c1bc:	sub	x21, x22, x21
   3c1c0:	b	3c1c8 <mpfr_get_ui@@Base+0x6e0>
   3c1c4:	sub	x22, x22, #0x1
   3c1c8:	mov	x2, x26
   3c1cc:	mov	w3, #0x0                   	// #0
   3c1d0:	mov	x0, x24
   3c1d4:	bl	ca10 <mpfr_ui_pow@plt>
   3c1d8:	mov	x1, x19
   3c1dc:	mov	x2, x24
   3c1e0:	mov	x0, x19
   3c1e4:	mov	w3, #0x0                   	// #0
   3c1e8:	bl	c1a0 <mpfr_add@plt>
   3c1ec:	mov	x1, x22
   3c1f0:	cmp	x21, x22
   3c1f4:	b.ne	3c1c4 <mpfr_get_ui@@Base+0x6dc>  // b.any
   3c1f8:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   3c1fc:	mov	x1, x19
   3c200:	mov	w3, #0x0                   	// #0
   3c204:	ldr	x2, [x0, #3928]
   3c208:	mov	x0, x19
   3c20c:	bl	c1a0 <mpfr_add@plt>
   3c210:	ldr	x1, [sp, #656]
   3c214:	cbz	x1, 3c220 <mpfr_get_ui@@Base+0x738>
   3c218:	ldr	x0, [sp, #664]
   3c21c:	bl	cc20 <mpfr_free_func@plt>
   3c220:	cbz	w23, 3c724 <mpfr_get_ui@@Base+0xc3c>
   3c224:	ldr	w0, [sp, #228]
   3c228:	ldr	x22, [sp, #256]
   3c22c:	mul	w28, w0, w0
   3c230:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3c234:	cmp	x22, x0
   3c238:	sxtw	x25, w28
   3c23c:	b.ge	3c828 <mpfr_get_ui@@Base+0xd40>  // b.tcont
   3c240:	sub	x21, x22, #0x1
   3c244:	asr	x21, x21, #6
   3c248:	add	x21, x21, #0x1
   3c24c:	add	x0, x21, x21, lsl #1
   3c250:	cmp	x0, #0x10
   3c254:	b.gt	3c528 <mpfr_get_ui@@Base+0xa40>
   3c258:	add	x1, sp, #0x2a0
   3c25c:	str	xzr, [sp, #656]
   3c260:	mov	x0, x1
   3c264:	str	x1, [sp, #664]
   3c268:	ldr	x1, [sp, #232]
   3c26c:	mov	w2, #0x1                   	// #1
   3c270:	ldr	x3, [sp, #176]
   3c274:	sub	x1, x1, #0x20
   3c278:	str	w2, [sp, #424]
   3c27c:	sub	w28, w23, #0x1
   3c280:	add	x1, x3, x1
   3c284:	str	w2, [sp, #456]
   3c288:	str	w2, [sp, #488]
   3c28c:	add	x2, x0, x21, lsl #3
   3c290:	add	x21, x0, x21, lsl #4
   3c294:	str	w28, [sp, #208]
   3c298:	ldr	w3, [x1, #8]
   3c29c:	str	x22, [sp, #416]
   3c2a0:	stp	x0, x22, [sp, #440]
   3c2a4:	mov	x0, x24
   3c2a8:	stp	x2, x22, [sp, #472]
   3c2ac:	mov	w2, #0x0                   	// #0
   3c2b0:	add	x22, sp, #0x1a0
   3c2b4:	str	x21, [sp, #504]
   3c2b8:	bl	c6a0 <mpfr_set4@plt>
   3c2bc:	cmp	w23, #0x1
   3c2c0:	lsl	w6, w28, #1
   3c2c4:	sxtw	x21, w23
   3c2c8:	b.le	3c3ac <mpfr_get_ui@@Base+0x8c4>
   3c2cc:	ldr	x1, [sp, #176]
   3c2d0:	sxtw	x6, w6
   3c2d4:	sub	w0, w23, #0x2
   3c2d8:	sub	x28, x6, #0x2
   3c2dc:	sub	x21, x21, #0x1
   3c2e0:	add	x22, sp, #0x1a0
   3c2e4:	sub	x0, x28, w0, uxtw #1
   3c2e8:	str	w23, [sp, #228]
   3c2ec:	add	x21, x1, x21, lsl #5
   3c2f0:	mov	x23, x28
   3c2f4:	mov	x28, x0
   3c2f8:	str	x19, [sp, #240]
   3c2fc:	mov	x19, x6
   3c300:	b	3c308 <mpfr_get_ui@@Base+0x820>
   3c304:	sub	x23, x23, #0x2
   3c308:	mov	x2, x19
   3c30c:	mov	x1, x20
   3c310:	mov	w3, #0x0                   	// #0
   3c314:	mov	x0, x22
   3c318:	bl	c260 <mpfr_add_ui@plt>
   3c31c:	mov	x2, x22
   3c320:	mov	x1, x24
   3c324:	mov	w3, #0x0                   	// #0
   3c328:	mov	x0, x24
   3c32c:	bl	bd50 <mpfr_mul@plt>
   3c330:	sub	x2, x19, #0x1
   3c334:	mov	x1, x20
   3c338:	mov	w3, #0x0                   	// #0
   3c33c:	mov	x0, x22
   3c340:	bl	c260 <mpfr_add_ui@plt>
   3c344:	mov	x2, x22
   3c348:	mov	x1, x24
   3c34c:	mov	w3, #0x0                   	// #0
   3c350:	mov	x0, x24
   3c354:	bl	bd50 <mpfr_mul@plt>
   3c358:	mov	x2, x25
   3c35c:	mov	x1, x24
   3c360:	mov	w3, #0x0                   	// #0
   3c364:	mov	x0, x24
   3c368:	bl	cc60 <mpfr_div_ui@plt>
   3c36c:	mov	x2, x21
   3c370:	mov	w3, #0x0                   	// #0
   3c374:	mov	x1, x24
   3c378:	mov	x0, x24
   3c37c:	bl	c1a0 <mpfr_add@plt>
   3c380:	mov	x1, x21
   3c384:	mov	x0, x24
   3c388:	bl	c9b0 <mpfr_cmpabs@plt>
   3c38c:	cmp	w0, #0x0
   3c390:	b.gt	3c558 <mpfr_get_ui@@Base+0xa70>
   3c394:	sub	x21, x21, #0x20
   3c398:	cmp	x23, x28
   3c39c:	mov	x19, x23
   3c3a0:	b.ne	3c304 <mpfr_get_ui@@Base+0x81c>  // b.any
   3c3a4:	ldr	w23, [sp, #228]
   3c3a8:	ldr	x19, [sp, #240]
   3c3ac:	mov	x2, x20
   3c3b0:	mov	x1, x24
   3c3b4:	mov	w3, #0x0                   	// #0
   3c3b8:	mov	x0, x24
   3c3bc:	bl	bd50 <mpfr_mul@plt>
   3c3c0:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   3c3c4:	mov	w3, #0x0                   	// #0
   3c3c8:	mov	x1, x20
   3c3cc:	add	x21, sp, #0x100
   3c3d0:	ldr	x2, [x0, #3928]
   3c3d4:	mov	x0, x22
   3c3d8:	bl	c1a0 <mpfr_add@plt>
   3c3dc:	mov	x1, x22
   3c3e0:	mov	w2, #0x0                   	// #0
   3c3e4:	mov	x0, x22
   3c3e8:	bl	bd70 <mpfr_neg@plt>
   3c3ec:	ldr	x1, [sp, #216]
   3c3f0:	mov	x2, x22
   3c3f4:	mov	w3, #0x0                   	// #0
   3c3f8:	mov	x0, x26
   3c3fc:	bl	ca10 <mpfr_ui_pow@plt>
   3c400:	mov	x1, x24
   3c404:	mov	x0, x21
   3c408:	mov	x2, x26
   3c40c:	mov	w3, #0x0                   	// #0
   3c410:	bl	bd50 <mpfr_mul@plt>
   3c414:	ldr	x1, [sp, #656]
   3c418:	cbz	x1, 3c424 <mpfr_get_ui@@Base+0x93c>
   3c41c:	ldr	x0, [sp, #664]
   3c420:	bl	cc20 <mpfr_free_func@plt>
   3c424:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   3c428:	add	x22, sp, #0x120
   3c42c:	ldr	x24, [sp, #160]
   3c430:	mov	w3, #0x0                   	// #0
   3c434:	ldr	x1, [x0, #3928]
   3c438:	mov	x2, x24
   3c43c:	mov	x0, x22
   3c440:	add	x28, sp, #0x160
   3c444:	bl	c620 <mpfr_div@plt>
   3c448:	ldr	x1, [sp, #216]
   3c44c:	mov	x2, x24
   3c450:	mov	w3, #0x0                   	// #0
   3c454:	mov	x0, x28
   3c458:	bl	ca10 <mpfr_ui_pow@plt>
   3c45c:	mov	x2, x28
   3c460:	mov	x1, x22
   3c464:	mov	w3, #0x0                   	// #0
   3c468:	mov	x0, x22
   3c46c:	bl	c620 <mpfr_div@plt>
   3c470:	mov	x2, x22
   3c474:	mov	x1, x19
   3c478:	mov	w3, #0x0                   	// #0
   3c47c:	mov	x0, x19
   3c480:	bl	c1a0 <mpfr_add@plt>
   3c484:	mov	x2, x21
   3c488:	mov	x1, x19
   3c48c:	mov	x0, x19
   3c490:	mov	w3, #0x0                   	// #0
   3c494:	bl	c1a0 <mpfr_add@plt>
   3c498:	cmp	w23, #0x0
   3c49c:	b.le	3c4cc <mpfr_get_ui@@Base+0x9e4>
   3c4a0:	ldr	x0, [sp, #208]
   3c4a4:	ubfiz	x21, x0, #5, #32
   3c4a8:	ldr	x0, [sp, #176]
   3c4ac:	add	x21, x21, #0x40
   3c4b0:	add	x22, x0, #0x20
   3c4b4:	add	x21, x0, x21
   3c4b8:	mov	x0, x22
   3c4bc:	add	x22, x22, #0x20
   3c4c0:	bl	c070 <mpfr_clear@plt>
   3c4c4:	cmp	x22, x21
   3c4c8:	b.ne	3c4b8 <mpfr_get_ui@@Base+0x9d0>  // b.any
   3c4cc:	ldr	x0, [sp, #176]
   3c4d0:	ldr	x1, [sp, #232]
   3c4d4:	bl	cc20 <mpfr_free_func@plt>
   3c4d8:	ldr	x1, [sp, #336]
   3c4dc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3c4e0:	cmp	x1, x0
   3c4e4:	b.gt	3bef4 <mpfr_get_ui@@Base+0x40c>
   3c4e8:	ldr	x1, [sp, #200]
   3c4ec:	mov	x0, #0xfffffffffffffeff    	// #-257
   3c4f0:	movk	x0, #0x7fff, lsl #48
   3c4f4:	sub	x0, x0, x27
   3c4f8:	cmp	x0, x1
   3c4fc:	b.lt	3c7f8 <mpfr_get_ui@@Base+0xd10>  // b.tstop
   3c500:	add	x27, x27, x1
   3c504:	ldr	x1, [sp, #400]
   3c508:	add	x0, x27, x27, lsr #63
   3c50c:	asr	x0, x0, #1
   3c510:	str	x0, [sp, #200]
   3c514:	b	3bdf0 <mpfr_get_ui@@Base+0x308>
   3c518:	ldr	x0, [sp, #520]
   3c51c:	bl	c1c0 <mpfr_reallocate_func@plt>
   3c520:	str	x0, [sp, #520]
   3c524:	b	3c0bc <mpfr_get_ui@@Base+0x5d4>
   3c528:	lsl	x0, x0, #3
   3c52c:	str	x0, [sp, #656]
   3c530:	bl	ccf0 <mpfr_allocate_func@plt>
   3c534:	str	x0, [sp, #664]
   3c538:	b	3c268 <mpfr_get_ui@@Base+0x780>
   3c53c:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   3c540:	ldr	w4, [sp, #224]
   3c544:	ldr	x1, [x1, #3928]
   3c548:	bl	c540 <mpfr_round_near_x@plt>
   3c54c:	mov	w19, w0
   3c550:	cbz	w0, 3bd00 <mpfr_get_ui@@Base+0x218>
   3c554:	b	3bf74 <mpfr_get_ui@@Base+0x48c>
   3c558:	ldr	w3, [x21, #8]
   3c55c:	mov	x1, x21
   3c560:	mov	x0, x24
   3c564:	mov	w2, #0x0                   	// #0
   3c568:	bl	c6a0 <mpfr_set4@plt>
   3c56c:	b	3c394 <mpfr_get_ui@@Base+0x8ac>
   3c570:	ldr	x2, [sp, #176]
   3c574:	add	x24, sp, #0x290
   3c578:	mov	x0, x24
   3c57c:	add	x19, x2, #0x20
   3c580:	ldr	x1, [x2, #32]
   3c584:	bl	ca80 <mpfr_init2@plt>
   3c588:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   3c58c:	mov	w3, #0x0                   	// #0
   3c590:	mov	x2, #0xc                   	// #12
   3c594:	ldr	x1, [x0, #3928]
   3c598:	mov	x0, x19
   3c59c:	bl	cc60 <mpfr_div_ui@plt>
   3c5a0:	cmp	w23, #0x1
   3c5a4:	b.eq	3c6dc <mpfr_get_ui@@Base+0xbf4>  // b.none
   3c5a8:	ldr	x19, [sp, #176]
   3c5ac:	mov	w3, #0x0                   	// #0
   3c5b0:	mov	x2, #0x0                   	// #0
   3c5b4:	mov	x1, #0x1                   	// #1
   3c5b8:	add	x28, x19, #0x40
   3c5bc:	mov	x0, x24
   3c5c0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3c5c4:	mov	x1, x24
   3c5c8:	mov	w3, #0x0                   	// #0
   3c5cc:	mov	x2, #0x1e                  	// #30
   3c5d0:	mov	x0, x24
   3c5d4:	bl	cc60 <mpfr_div_ui@plt>
   3c5d8:	mov	x0, x28
   3c5dc:	mov	x1, x24
   3c5e0:	mov	w3, #0x0                   	// #0
   3c5e4:	mov	x2, #0x18                  	// #24
   3c5e8:	bl	cc60 <mpfr_div_ui@plt>
   3c5ec:	ldr	w0, [x28, #8]
   3c5f0:	cmp	w23, #0x2
   3c5f4:	neg	w0, w0
   3c5f8:	str	w0, [x28, #8]
   3c5fc:	b.eq	3c6dc <mpfr_get_ui@@Base+0xbf4>  // b.none
   3c600:	add	x22, x19, #0x60
   3c604:	mov	x25, #0x2a                  	// #42
   3c608:	mov	x19, #0x3                   	// #3
   3c60c:	str	x27, [sp, #216]
   3c610:	stp	x20, x26, [sp, #240]
   3c614:	nop
   3c618:	sub	x1, x19, #0x1
   3c61c:	mov	w3, #0x0                   	// #0
   3c620:	mov	x2, #0x0                   	// #0
   3c624:	mov	x0, x24
   3c628:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3c62c:	mov	x2, x25
   3c630:	mov	x1, x24
   3c634:	mov	x0, x24
   3c638:	mov	w3, #0x0                   	// #0
   3c63c:	bl	cc60 <mpfr_div_ui@plt>
   3c640:	add	w21, w19, #0x1
   3c644:	lsl	w4, w19, #1
   3c648:	mov	x26, x28
   3c64c:	sub	w27, w4, #0x1
   3c650:	mov	w20, #0x2                   	// #2
   3c654:	nop
   3c658:	sub	w2, w21, w20
   3c65c:	mov	x1, x24
   3c660:	mov	w3, #0x0                   	// #0
   3c664:	mov	x0, x24
   3c668:	add	w20, w20, #0x1
   3c66c:	mul	w2, w2, w27
   3c670:	sub	w27, w27, #0x2
   3c674:	lsl	w2, w2, #3
   3c678:	sxtw	x2, w2
   3c67c:	bl	cc60 <mpfr_div_ui@plt>
   3c680:	mov	x2, x26
   3c684:	mov	x1, x24
   3c688:	mov	x0, x24
   3c68c:	mov	w3, #0x0                   	// #0
   3c690:	bl	c1a0 <mpfr_add@plt>
   3c694:	add	x26, x26, #0x20
   3c698:	cmp	w20, w19
   3c69c:	b.lt	3c658 <mpfr_get_ui@@Base+0xb70>  // b.tstop
   3c6a0:	mov	x0, x22
   3c6a4:	mov	x1, x24
   3c6a8:	mov	w3, #0x0                   	// #0
   3c6ac:	mov	x2, #0x18                  	// #24
   3c6b0:	bl	cc60 <mpfr_div_ui@plt>
   3c6b4:	add	x19, x19, #0x1
   3c6b8:	ldr	w0, [x22, #8]
   3c6bc:	add	x25, x25, #0xc
   3c6c0:	cmp	w23, w19
   3c6c4:	add	x22, x22, #0x20
   3c6c8:	neg	w0, w0
   3c6cc:	stur	w0, [x22, #-24]
   3c6d0:	b.ge	3c618 <mpfr_get_ui@@Base+0xb30>  // b.tcont
   3c6d4:	ldp	x20, x26, [sp, #240]
   3c6d8:	ldr	x27, [sp, #216]
   3c6dc:	mov	x0, x24
   3c6e0:	bl	c070 <mpfr_clear@plt>
   3c6e4:	ldr	x22, [sp, #320]
   3c6e8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3c6ec:	cmp	x22, x0
   3c6f0:	b.ge	3c828 <mpfr_get_ui@@Base+0xd40>  // b.tcont
   3c6f4:	sub	x19, x22, #0x1
   3c6f8:	asr	x19, x19, #6
   3c6fc:	add	x19, x19, #0x1
   3c700:	lsl	x0, x19, #1
   3c704:	cmp	x0, #0x10
   3c708:	b.le	3c118 <mpfr_get_ui@@Base+0x630>
   3c70c:	lsl	x0, x19, #4
   3c710:	str	x0, [sp, #656]
   3c714:	bl	ccf0 <mpfr_allocate_func@plt>
   3c718:	mov	x4, x0
   3c71c:	str	x0, [sp, #664]
   3c720:	b	3c128 <mpfr_get_ui@@Base+0x640>
   3c724:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   3c728:	add	x21, sp, #0x120
   3c72c:	ldr	x23, [sp, #160]
   3c730:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   3c734:	ldr	x1, [x0, #3928]
   3c738:	mov	w3, #0x1                   	// #1
   3c73c:	mov	x0, x21
   3c740:	str	w3, [sp, #264]
   3c744:	mov	w3, #0x0                   	// #0
   3c748:	str	x2, [sp, #272]
   3c74c:	mov	x2, x23
   3c750:	bl	c620 <mpfr_div@plt>
   3c754:	ldr	x1, [sp, #216]
   3c758:	add	x22, sp, #0x160
   3c75c:	mov	x2, x23
   3c760:	mov	x0, x22
   3c764:	mov	w3, #0x0                   	// #0
   3c768:	bl	ca10 <mpfr_ui_pow@plt>
   3c76c:	mov	x2, x22
   3c770:	mov	x1, x21
   3c774:	mov	x0, x21
   3c778:	mov	w3, #0x0                   	// #0
   3c77c:	bl	c620 <mpfr_div@plt>
   3c780:	mov	x2, x21
   3c784:	mov	x1, x19
   3c788:	mov	x0, x19
   3c78c:	mov	w3, #0x0                   	// #0
   3c790:	bl	c1a0 <mpfr_add@plt>
   3c794:	mov	x1, x19
   3c798:	add	x2, sp, #0x100
   3c79c:	mov	x0, x19
   3c7a0:	mov	w3, #0x0                   	// #0
   3c7a4:	bl	c1a0 <mpfr_add@plt>
   3c7a8:	ldr	x0, [sp, #176]
   3c7ac:	ldr	x1, [sp, #232]
   3c7b0:	bl	cc20 <mpfr_free_func@plt>
   3c7b4:	b	3c4d8 <mpfr_get_ui@@Base+0x9f0>
   3c7b8:	fmov	d0, #1.000000000000000000e+00
   3c7bc:	mov	w23, #0x0                   	// #0
   3c7c0:	fsub	d0, d13, d0
   3c7c4:	fdiv	d0, d0, d8
   3c7c8:	bl	bb40 <__gmpfr_ceil_exp2@plt>
   3c7cc:	fcvtzs	w0, d0
   3c7d0:	str	w0, [sp, #208]
   3c7d4:	add	w0, w0, #0x1
   3c7d8:	str	w0, [sp, #228]
   3c7dc:	b	3c004 <mpfr_get_ui@@Base+0x51c>
   3c7e0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3c7e4:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3c7e8:	add	x2, x2, #0x758
   3c7ec:	add	x0, x0, #0x750
   3c7f0:	mov	w1, #0xef                  	// #239
   3c7f4:	bl	cb40 <mpfr_assert_fail@plt>
   3c7f8:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3c7fc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3c800:	add	x2, x2, #0x760
   3c804:	add	x0, x0, #0x750
   3c808:	mov	w1, #0x112                 	// #274
   3c80c:	bl	cb40 <mpfr_assert_fail@plt>
   3c810:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3c814:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3c818:	add	x2, x2, #0x740
   3c81c:	add	x0, x0, #0x750
   3c820:	mov	w1, #0xb6                  	// #182
   3c824:	bl	cb40 <mpfr_assert_fail@plt>
   3c828:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3c82c:	nop
   3c830:	stp	x29, x30, [sp, #-96]!
   3c834:	mov	x29, sp
   3c838:	stp	x23, x24, [sp, #48]
   3c83c:	add	x24, sp, #0x50
   3c840:	mov	x23, x1
   3c844:	stp	x19, x20, [sp, #16]
   3c848:	mov	w20, w5
   3c84c:	mov	x19, x3
   3c850:	stp	x21, x22, [sp, #32]
   3c854:	mov	x21, x0
   3c858:	mov	x0, x24
   3c85c:	stp	x25, x26, [sp, #64]
   3c860:	mov	x26, x2
   3c864:	mov	x25, x4
   3c868:	bl	bf90 <mpfr_mpz_init@plt>
   3c86c:	mov	w22, #0x5                   	// #5
   3c870:	mov	w2, #0x3                   	// #3
   3c874:	mov	x1, x26
   3c878:	mov	x0, x24
   3c87c:	bl	be00 <mpfr_get_z@plt>
   3c880:	mov	x0, x24
   3c884:	mov	x1, #0x0                   	// #0
   3c888:	sub	w22, w22, w20
   3c88c:	bl	bfe0 <__gmpz_tstbit@plt>
   3c890:	cbz	w0, 3c9e8 <mpfr_get_ui@@Base+0xf00>
   3c894:	cmp	w20, #0x3
   3c898:	b.eq	3ca30 <mpfr_get_ui@@Base+0xf48>  // b.none
   3c89c:	mov	x2, x26
   3c8a0:	mov	w3, w22
   3c8a4:	mov	x1, x25
   3c8a8:	mov	x0, x19
   3c8ac:	bl	bd50 <mpfr_mul@plt>
   3c8b0:	mov	w3, #0x0                   	// #0
   3c8b4:	mov	x2, #0x1                   	// #1
   3c8b8:	mov	x1, x19
   3c8bc:	mov	x0, x19
   3c8c0:	bl	c8f0 <mpfr_div_2ui@plt>
   3c8c4:	mov	x0, x24
   3c8c8:	mov	x1, #0x1                   	// #1
   3c8cc:	bl	bfe0 <__gmpz_tstbit@plt>
   3c8d0:	cbnz	w0, 3c9c0 <mpfr_get_ui@@Base+0xed8>
   3c8d4:	mov	w2, w20
   3c8d8:	mov	x1, x19
   3c8dc:	mov	x0, x19
   3c8e0:	bl	c450 <mpfr_sin@plt>
   3c8e4:	mov	x0, x24
   3c8e8:	bl	c170 <mpfr_mpz_clear@plt>
   3c8ec:	mov	w2, w20
   3c8f0:	mov	x1, x23
   3c8f4:	mov	x0, x21
   3c8f8:	bl	3bca0 <mpfr_get_ui@@Base+0x1b8>
   3c8fc:	mov	w3, w20
   3c900:	mov	x2, x19
   3c904:	mov	x1, x21
   3c908:	mov	x0, x21
   3c90c:	bl	bd50 <mpfr_mul@plt>
   3c910:	mov	w2, w20
   3c914:	mov	x1, x21
   3c918:	mov	x0, x21
   3c91c:	bl	c090 <mpfr_log@plt>
   3c920:	mov	w2, w20
   3c924:	mov	x1, x23
   3c928:	mov	x0, x19
   3c92c:	bl	c600 <mpfr_lngamma@plt>
   3c930:	mov	w3, w20
   3c934:	mov	x2, x19
   3c938:	mov	x1, x21
   3c93c:	mov	x0, x21
   3c940:	bl	c1a0 <mpfr_add@plt>
   3c944:	mov	w3, w22
   3c948:	mov	x1, x25
   3c94c:	mov	x2, #0x1                   	// #1
   3c950:	mov	x0, x19
   3c954:	bl	c2c0 <mpfr_mul_2ui@plt>
   3c958:	mov	w2, w22
   3c95c:	mov	x1, x19
   3c960:	mov	x0, x19
   3c964:	bl	c090 <mpfr_log@plt>
   3c968:	mov	w3, w22
   3c96c:	mov	x2, x23
   3c970:	mov	x1, x19
   3c974:	mov	x0, x19
   3c978:	bl	bd50 <mpfr_mul@plt>
   3c97c:	mov	w3, w20
   3c980:	mov	x2, x19
   3c984:	mov	x1, x21
   3c988:	mov	x0, x21
   3c98c:	bl	bb70 <mpfr_sub@plt>
   3c990:	mov	w2, w20
   3c994:	mov	x1, x21
   3c998:	mov	x0, x21
   3c99c:	bl	c750 <mpfr_exp@plt>
   3c9a0:	cmp	w20, #0x3
   3c9a4:	b.eq	3ca10 <mpfr_get_ui@@Base+0xf28>  // b.none
   3c9a8:	ldp	x19, x20, [sp, #16]
   3c9ac:	ldp	x21, x22, [sp, #32]
   3c9b0:	ldp	x23, x24, [sp, #48]
   3c9b4:	ldp	x25, x26, [sp, #64]
   3c9b8:	ldp	x29, x30, [sp], #96
   3c9bc:	ret
   3c9c0:	mov	w2, w22
   3c9c4:	mov	x1, x19
   3c9c8:	mov	x0, x19
   3c9cc:	bl	c450 <mpfr_sin@plt>
   3c9d0:	mov	x1, x19
   3c9d4:	mov	x0, x19
   3c9d8:	mov	w3, #0x1                   	// #1
   3c9dc:	mov	w2, #0x0                   	// #0
   3c9e0:	bl	c6a0 <mpfr_set4@plt>
   3c9e4:	b	3c8e4 <mpfr_get_ui@@Base+0xdfc>
   3c9e8:	mov	x2, x26
   3c9ec:	mov	w3, w20
   3c9f0:	mov	x1, x25
   3c9f4:	mov	x0, x19
   3c9f8:	bl	bd50 <mpfr_mul@plt>
   3c9fc:	cmp	w20, #0x3
   3ca00:	b.ne	3c8b0 <mpfr_get_ui@@Base+0xdc8>  // b.any
   3ca04:	mov	x0, x25
   3ca08:	bl	c120 <mpfr_nextabove@plt>
   3ca0c:	b	3c8b0 <mpfr_get_ui@@Base+0xdc8>
   3ca10:	mov	x0, x25
   3ca14:	bl	bdd0 <mpfr_nextbelow@plt>
   3ca18:	ldp	x19, x20, [sp, #16]
   3ca1c:	ldp	x21, x22, [sp, #32]
   3ca20:	ldp	x23, x24, [sp, #48]
   3ca24:	ldp	x25, x26, [sp, #64]
   3ca28:	ldp	x29, x30, [sp], #96
   3ca2c:	ret
   3ca30:	mov	x0, x25
   3ca34:	bl	c120 <mpfr_nextabove@plt>
   3ca38:	b	3c89c <mpfr_get_ui@@Base+0xdb4>
   3ca3c:	nop

000000000003ca40 <mpfr_zeta@@Base>:
   3ca40:	stp	x29, x30, [sp, #-496]!
   3ca44:	mov	x29, sp
   3ca48:	stp	x19, x20, [sp, #16]
   3ca4c:	mov	x19, x1
   3ca50:	ldr	x1, [x1, #16]
   3ca54:	stp	x21, x22, [sp, #32]
   3ca58:	mov	x22, x0
   3ca5c:	str	w2, [sp, #112]
   3ca60:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3ca64:	cmp	x1, x2
   3ca68:	b.le	3d4a0 <mpfr_zeta@@Base+0xa60>
   3ca6c:	ldr	x0, [x0]
   3ca70:	stp	x23, x24, [sp, #48]
   3ca74:	add	x2, x1, #0x1
   3ca78:	neg	x0, x0
   3ca7c:	ldr	w23, [x19, #8]
   3ca80:	cmp	x2, x0
   3ca84:	b.lt	3d2c4 <mpfr_zeta@@Base+0x884>  // b.tstop
   3ca88:	tbnz	w23, #31, 3d01c <mpfr_zeta@@Base+0x5dc>
   3ca8c:	stp	x25, x26, [sp, #64]
   3ca90:	adrp	x26, 81000 <__gmpfr_l2b@@Base+0x200>
   3ca94:	mov	x0, x19
   3ca98:	ldr	x1, [x26, #3928]
   3ca9c:	mov	w2, #0x1                   	// #1
   3caa0:	bl	c9a0 <mpfr_cmp3@plt>
   3caa4:	mov	w21, w0
   3caa8:	cbz	w0, 3d06c <mpfr_zeta@@Base+0x62c>
   3caac:	mrs	x20, tpidr_el0
   3cab0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3cab4:	ldr	x1, [x0, #2576]
   3cab8:	add	x0, x0, #0xa10
   3cabc:	blr	x1
   3cac0:	ldr	w2, [x19, #8]
   3cac4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3cac8:	stp	x27, x28, [sp, #80]
   3cacc:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3cad0:	ldr	w0, [x20, x0]
   3cad4:	str	w0, [sp, #116]
   3cad8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3cadc:	ldr	x3, [x0, #2512]
   3cae0:	add	x0, x0, #0x9d0
   3cae4:	blr	x3
   3cae8:	add	x3, x20, x0
   3caec:	ldr	x0, [x20, x0]
   3caf0:	str	x0, [sp, #128]
   3caf4:	str	x4, [x3]
   3caf8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3cafc:	ldr	x5, [x0, #2544]
   3cb00:	add	x0, x0, #0x9f0
   3cb04:	blr	x5
   3cb08:	cmp	w2, #0x0
   3cb0c:	ldr	x2, [x20, x0]
   3cb10:	str	x1, [x20, x0]
   3cb14:	str	x2, [sp, #136]
   3cb18:	ldr	x0, [x19, #16]
   3cb1c:	b.le	3d3f0 <mpfr_zeta@@Base+0x9b0>
   3cb20:	tbz	x0, #63, 3d0bc <mpfr_zeta@@Base+0x67c>
   3cb24:	ldr	x28, [x19]
   3cb28:	ldr	x1, [x22]
   3cb2c:	add	x28, x28, #0x2
   3cb30:	str	x1, [sp, #96]
   3cb34:	sub	x28, x28, x0
   3cb38:	add	x25, sp, #0x160
   3cb3c:	mov	x4, #0x0                   	// #0
   3cb40:	mov	x3, x25
   3cb44:	add	x23, sp, #0x140
   3cb48:	add	x21, sp, #0x120
   3cb4c:	mov	x2, x23
   3cb50:	mov	x1, x21
   3cb54:	mov	x0, #0x40                  	// #64
   3cb58:	bl	cc50 <mpfr_inits2@plt>
   3cb5c:	mov	x0, x19
   3cb60:	mov	x2, #0x0                   	// #0
   3cb64:	mov	x1, #0x1                   	// #1
   3cb68:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   3cb6c:	mov	w3, #0x2                   	// #2
   3cb70:	tbnz	w0, #31, 3d470 <mpfr_zeta@@Base+0xa30>
   3cb74:	mov	x1, x19
   3cb78:	mov	x0, x21
   3cb7c:	mov	x2, #0x1                   	// #1
   3cb80:	bl	c530 <mpfr_sub_ui@plt>
   3cb84:	ldr	x24, [sp, #96]
   3cb88:	mov	w3, #0x2                   	// #2
   3cb8c:	mov	x1, #0x1                   	// #1
   3cb90:	mov	x0, x23
   3cb94:	mov	x2, #0xfffffffffffffff2    	// #-14
   3cb98:	sub	x2, x2, x24
   3cb9c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3cba0:	add	x27, x24, #0xe
   3cba4:	ldr	x1, [sp, #304]
   3cba8:	add	x0, x24, #0xd
   3cbac:	mov	w3, #0x2                   	// #2
   3cbb0:	cmp	x0, x1
   3cbb4:	b.ge	3d448 <mpfr_zeta@@Base+0xa08>  // b.tcont
   3cbb8:	mov	x1, x21
   3cbbc:	mov	x0, x21
   3cbc0:	mov	x2, #0x1                   	// #1
   3cbc4:	bl	c2c0 <mpfr_mul_2ui@plt>
   3cbc8:	mov	x1, x23
   3cbcc:	mov	w3, #0x2                   	// #2
   3cbd0:	mov	x2, #0x1                   	// #1
   3cbd4:	mov	x0, x23
   3cbd8:	bl	c260 <mpfr_add_ui@plt>
   3cbdc:	mov	x2, x23
   3cbe0:	mov	x1, x21
   3cbe4:	mov	w3, #0x2                   	// #2
   3cbe8:	mov	x0, x21
   3cbec:	bl	bd50 <mpfr_mul@plt>
   3cbf0:	mov	x1, x21
   3cbf4:	mov	x0, x25
   3cbf8:	mov	w3, #0x2                   	// #2
   3cbfc:	mov	x2, #0x1                   	// #1
   3cc00:	bl	c260 <mpfr_add_ui@plt>
   3cc04:	ldr	x0, [sp, #368]
   3cc08:	cmp	x0, #0x3
   3cc0c:	b.gt	3d430 <mpfr_zeta@@Base+0x9f0>
   3cc10:	mov	x0, x21
   3cc14:	mov	w3, #0x2                   	// #2
   3cc18:	mov	x2, #0x0                   	// #0
   3cc1c:	mov	x1, #0x8                   	// #8
   3cc20:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3cc24:	mov	x2, x27
   3cc28:	mov	x1, x21
   3cc2c:	mov	w3, #0x2                   	// #2
   3cc30:	mov	x0, x21
   3cc34:	bl	c8f0 <mpfr_div_2ui@plt>
   3cc38:	mov	x1, x21
   3cc3c:	mov	w3, #0x2                   	// #2
   3cc40:	mov	x2, #0x1                   	// #1
   3cc44:	mov	x0, x21
   3cc48:	bl	c260 <mpfr_add_ui@plt>
   3cc4c:	mov	x2, x23
   3cc50:	mov	x1, x21
   3cc54:	mov	w3, #0x2                   	// #2
   3cc58:	mov	x0, x21
   3cc5c:	bl	bd50 <mpfr_mul@plt>
   3cc60:	mov	x1, x25
   3cc64:	mov	w3, #0x2                   	// #2
   3cc68:	mov	x2, #0xd                   	// #13
   3cc6c:	mov	x0, x23
   3cc70:	bl	c260 <mpfr_add_ui@plt>
   3cc74:	mov	w3, #0x2                   	// #2
   3cc78:	mov	x2, x21
   3cc7c:	mov	x1, x23
   3cc80:	mov	x0, x23
   3cc84:	bl	bd50 <mpfr_mul@plt>
   3cc88:	mov	x1, x21
   3cc8c:	mov	w2, #0x2                   	// #2
   3cc90:	mov	x0, x21
   3cc94:	bl	c400 <mpfr_sqr@plt>
   3cc98:	mov	x2, x21
   3cc9c:	mov	x1, x23
   3cca0:	mov	w3, #0x2                   	// #2
   3cca4:	mov	x0, x23
   3cca8:	bl	bd50 <mpfr_mul@plt>
   3ccac:	ldr	x0, [sp, #336]
   3ccb0:	mov	x1, x23
   3ccb4:	mov	x2, x25
   3ccb8:	mov	x3, #0x0                   	// #0
   3ccbc:	mov	x24, x0
   3ccc0:	mov	x0, x21
   3ccc4:	str	x24, [sp, #152]
   3ccc8:	bl	c1b0 <mpfr_clears@plt>
   3cccc:	ldr	x1, [sp, #96]
   3ccd0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3ccd4:	add	x1, x1, x24
   3ccd8:	cmp	x1, x28
   3ccdc:	csel	x28, x1, x28, ge  // ge = tcont
   3cce0:	add	x24, x28, #0xa
   3cce4:	cmp	x24, x0
   3cce8:	b.ge	3d674 <mpfr_zeta@@Base+0xc34>  // b.tcont
   3ccec:	add	x1, x28, #0x48
   3ccf0:	adds	x28, x28, #0x9
   3ccf4:	csel	x1, x1, x28, mi  // mi = first
   3ccf8:	asr	x1, x1, #6
   3ccfc:	add	x1, x1, #0x1
   3cd00:	lsl	x0, x1, #2
   3cd04:	cmp	x0, #0x10
   3cd08:	b.gt	3d484 <mpfr_zeta@@Base+0xa44>
   3cd0c:	add	x25, x25, #0x10
   3cd10:	stp	xzr, x25, [sp, #352]
   3cd14:	mov	x0, x25
   3cd18:	ldr	x2, [x26, #3928]
   3cd1c:	add	x3, x1, x1, lsl #1
   3cd20:	add	x28, sp, #0x100
   3cd24:	add	x27, sp, #0xc0
   3cd28:	add	x25, sp, #0xe0
   3cd2c:	add	x26, sp, #0xa0
   3cd30:	str	x2, [sp, #120]
   3cd34:	mov	w2, #0x1                   	// #1
   3cd38:	add	x3, x0, x3, lsl #3
   3cd3c:	str	x24, [sp, #160]
   3cd40:	str	w2, [sp, #168]
   3cd44:	stp	x0, x24, [sp, #184]
   3cd48:	str	w2, [sp, #200]
   3cd4c:	str	x24, [sp, #224]
   3cd50:	str	w2, [sp, #232]
   3cd54:	str	x24, [sp, #256]
   3cd58:	str	w2, [sp, #264]
   3cd5c:	add	x2, x0, x1, lsl #3
   3cd60:	add	x1, x0, x1, lsl #4
   3cd64:	mov	x0, #0x40                  	// #64
   3cd68:	str	x0, [sp, #104]
   3cd6c:	str	x2, [sp, #216]
   3cd70:	str	x1, [sp, #248]
   3cd74:	str	x3, [sp, #280]
   3cd78:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3cd7c:	ldr	x1, [x0, #2624]
   3cd80:	add	x0, x0, #0xa40
   3cd84:	blr	x1
   3cd88:	add	x0, x20, x0
   3cd8c:	mov	x1, x0
   3cd90:	mov	w2, #0x3                   	// #3
   3cd94:	str	x0, [sp, #144]
   3cd98:	mov	x0, x28
   3cd9c:	bl	c380 <mpfr_cache@plt>
   3cda0:	ldr	x1, [sp, #120]
   3cda4:	mov	w3, #0x0                   	// #0
   3cda8:	mov	x2, x19
   3cdac:	mov	x0, x27
   3cdb0:	bl	bb70 <mpfr_sub@plt>
   3cdb4:	mov	x1, x27
   3cdb8:	mov	x0, x25
   3cdbc:	mov	w2, #0x0                   	// #0
   3cdc0:	bl	c7b0 <mpfr_gamma@plt>
   3cdc4:	ldr	x0, [sp, #240]
   3cdc8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3cdcc:	cmp	x0, x1
   3cdd0:	b.eq	3d104 <mpfr_zeta@@Base+0x6c4>  // b.none
   3cdd4:	mov	x1, x27
   3cdd8:	mov	w2, #0x0                   	// #0
   3cddc:	mov	x0, x26
   3cde0:	bl	3bca0 <mpfr_get_ui@@Base+0x1b8>
   3cde4:	mov	x2, x25
   3cde8:	mov	x1, x26
   3cdec:	mov	w3, #0x0                   	// #0
   3cdf0:	mov	x0, x26
   3cdf4:	bl	bd50 <mpfr_mul@plt>
   3cdf8:	mov	w3, #0x0                   	// #0
   3cdfc:	mov	x1, x28
   3ce00:	mov	x2, #0x1                   	// #1
   3ce04:	mov	x0, x25
   3ce08:	bl	c2c0 <mpfr_mul_2ui@plt>
   3ce0c:	mov	x1, x27
   3ce10:	mov	w2, #0x0                   	// #0
   3ce14:	mov	x0, x27
   3ce18:	bl	bd70 <mpfr_neg@plt>
   3ce1c:	mov	x2, x27
   3ce20:	mov	x1, x25
   3ce24:	mov	w3, #0x0                   	// #0
   3ce28:	mov	x0, x25
   3ce2c:	bl	bd90 <mpfr_pow@plt>
   3ce30:	mov	x2, x25
   3ce34:	mov	x1, x26
   3ce38:	mov	w3, #0x0                   	// #0
   3ce3c:	mov	x0, x26
   3ce40:	bl	bd50 <mpfr_mul@plt>
   3ce44:	mov	x1, x26
   3ce48:	mov	w3, #0x0                   	// #0
   3ce4c:	mov	x2, #0x1                   	// #1
   3ce50:	mov	x0, x26
   3ce54:	bl	c2c0 <mpfr_mul_2ui@plt>
   3ce58:	mov	x2, x28
   3ce5c:	mov	x1, x19
   3ce60:	mov	w3, #0x0                   	// #0
   3ce64:	mov	x0, x25
   3ce68:	bl	bd50 <mpfr_mul@plt>
   3ce6c:	mov	w3, #0x0                   	// #0
   3ce70:	mov	x1, x25
   3ce74:	mov	x2, #0x1                   	// #1
   3ce78:	mov	x0, x28
   3ce7c:	bl	c8f0 <mpfr_div_2ui@plt>
   3ce80:	mov	x1, x28
   3ce84:	mov	x0, x25
   3ce88:	mov	w2, #0x0                   	// #0
   3ce8c:	bl	c450 <mpfr_sin@plt>
   3ce90:	ldr	x1, [sp, #240]
   3ce94:	tbz	x1, #63, 3cf0c <mpfr_zeta@@Base+0x4cc>
   3ce98:	mov	x2, #0xfffffffffffffeff    	// #-257
   3ce9c:	neg	x0, x1
   3cea0:	movk	x2, #0x7fff, lsl #48
   3cea4:	sub	x2, x2, x24
   3cea8:	cmp	x0, x2
   3ceac:	b.ge	3d5d4 <mpfr_zeta@@Base+0xb94>  // b.tcont
   3ceb0:	sub	x1, x24, x1
   3ceb4:	mov	x0, x23
   3ceb8:	bl	ca80 <mpfr_init2@plt>
   3cebc:	ldr	x1, [sp, #144]
   3cec0:	mov	w2, #0x3                   	// #3
   3cec4:	mov	x0, x23
   3cec8:	bl	c380 <mpfr_cache@plt>
   3cecc:	mov	x2, x23
   3ced0:	mov	x1, x19
   3ced4:	mov	w3, #0x0                   	// #0
   3ced8:	mov	x0, x23
   3cedc:	bl	bd50 <mpfr_mul@plt>
   3cee0:	mov	x1, x23
   3cee4:	mov	w3, #0x0                   	// #0
   3cee8:	mov	x2, #0x1                   	// #1
   3ceec:	mov	x0, x23
   3cef0:	bl	c8f0 <mpfr_div_2ui@plt>
   3cef4:	mov	x1, x23
   3cef8:	mov	w2, #0x0                   	// #0
   3cefc:	mov	x0, x25
   3cf00:	bl	c450 <mpfr_sin@plt>
   3cf04:	mov	x0, x23
   3cf08:	bl	c070 <mpfr_clear@plt>
   3cf0c:	mov	x1, x26
   3cf10:	mov	x2, x25
   3cf14:	mov	x0, x26
   3cf18:	mov	w3, #0x0                   	// #0
   3cf1c:	bl	bd50 <mpfr_mul@plt>
   3cf20:	ldr	x0, [sp, #176]
   3cf24:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3cf28:	cmp	x0, x1
   3cf2c:	b.le	3d1fc <mpfr_zeta@@Base+0x7bc>
   3cf30:	ldr	w0, [sp, #112]
   3cf34:	ldr	x2, [sp, #96]
   3cf38:	cmp	w0, #0x0
   3cf3c:	ldr	x1, [sp, #160]
   3cf40:	cinc	x3, x2, eq  // eq = none
   3cf44:	ldr	x0, [sp, #184]
   3cf48:	sub	x1, x1, #0x1
   3cf4c:	ldr	x2, [sp, #152]
   3cf50:	asr	x1, x1, #6
   3cf54:	add	x1, x1, #0x1
   3cf58:	sub	x2, x24, x2
   3cf5c:	bl	c370 <mpfr_round_p@plt>
   3cf60:	cbz	w0, 3d1fc <mpfr_zeta@@Base+0x7bc>
   3cf64:	ldr	w2, [sp, #112]
   3cf68:	mov	x1, x26
   3cf6c:	ldr	w3, [sp, #168]
   3cf70:	mov	x0, x22
   3cf74:	bl	c6a0 <mpfr_set4@plt>
   3cf78:	mov	w21, w0
   3cf7c:	ldr	x1, [sp, #352]
   3cf80:	cbz	x1, 3cf8c <mpfr_zeta@@Base+0x54c>
   3cf84:	ldr	x0, [sp, #360]
   3cf88:	bl	cc20 <mpfr_free_func@plt>
   3cf8c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3cf90:	ldr	x1, [x0, #2576]
   3cf94:	add	x0, x0, #0xa10
   3cf98:	blr	x1
   3cf9c:	add	x2, x20, x0
   3cfa0:	ldr	w1, [sp, #116]
   3cfa4:	str	w1, [x20, x0]
   3cfa8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3cfac:	ldr	x3, [x0, #2512]
   3cfb0:	add	x0, x0, #0x9d0
   3cfb4:	blr	x3
   3cfb8:	ldr	x3, [sp, #128]
   3cfbc:	str	x3, [x20, x0]
   3cfc0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3cfc4:	ldr	x4, [x0, #2544]
   3cfc8:	add	x0, x0, #0x9f0
   3cfcc:	blr	x4
   3cfd0:	ldr	x1, [x22, #16]
   3cfd4:	ldr	x4, [sp, #136]
   3cfd8:	str	x4, [x20, x0]
   3cfdc:	cmp	x4, x1
   3cfe0:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   3cfe4:	b.le	3d0d4 <mpfr_zeta@@Base+0x694>
   3cfe8:	ldr	w2, [sp, #112]
   3cfec:	mov	w1, w21
   3cff0:	mov	x0, x22
   3cff4:	bl	cb30 <mpfr_check_range@plt>
   3cff8:	mov	w21, w0
   3cffc:	mov	w0, w21
   3d000:	ldp	x19, x20, [sp, #16]
   3d004:	ldp	x21, x22, [sp, #32]
   3d008:	ldp	x23, x24, [sp, #48]
   3d00c:	ldp	x25, x26, [sp, #64]
   3d010:	ldp	x27, x28, [sp, #80]
   3d014:	ldp	x29, x30, [sp], #496
   3d018:	ret
   3d01c:	ldp	x2, x3, [x19, #16]
   3d020:	stp	x2, x3, [sp, #368]
   3d024:	sub	x1, x1, #0x1
   3d028:	ldp	x2, x3, [x19]
   3d02c:	add	x0, sp, #0x160
   3d030:	stp	x2, x3, [sp, #352]
   3d034:	str	x1, [sp, #368]
   3d038:	bl	c160 <mpfr_integer_p@plt>
   3d03c:	cbz	w0, 3ca8c <mpfr_zeta@@Base+0x4c>
   3d040:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3d044:	mov	w1, #0x1                   	// #1
   3d048:	ldp	x23, x24, [sp, #48]
   3d04c:	str	w1, [x22, #8]
   3d050:	str	x0, [x22, #16]
   3d054:	mov	w21, #0x0                   	// #0
   3d058:	mov	w0, w21
   3d05c:	ldp	x19, x20, [sp, #16]
   3d060:	ldp	x21, x22, [sp, #32]
   3d064:	ldp	x29, x30, [sp], #496
   3d068:	ret
   3d06c:	mrs	x1, tpidr_el0
   3d070:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d074:	ldr	x2, [x0, #2576]
   3d078:	add	x0, x0, #0xa10
   3d07c:	blr	x2
   3d080:	add	x0, x1, x0
   3d084:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3d088:	ldp	x23, x24, [sp, #48]
   3d08c:	mov	w2, #0x1                   	// #1
   3d090:	ldp	x25, x26, [sp, #64]
   3d094:	str	x1, [x22, #16]
   3d098:	ldr	w1, [x0]
   3d09c:	str	w2, [x22, #8]
   3d0a0:	orr	w1, w1, #0x20
   3d0a4:	str	w1, [x0]
   3d0a8:	mov	w0, w21
   3d0ac:	ldp	x19, x20, [sp, #16]
   3d0b0:	ldp	x21, x22, [sp, #32]
   3d0b4:	ldp	x29, x30, [sp], #496
   3d0b8:	ret
   3d0bc:	ldr	w2, [sp, #112]
   3d0c0:	mov	x1, x19
   3d0c4:	mov	x0, x22
   3d0c8:	bl	3bca0 <mpfr_get_ui@@Base+0x1b8>
   3d0cc:	mov	w21, w0
   3d0d0:	b	3cf8c <mpfr_zeta@@Base+0x54c>
   3d0d4:	cbz	w21, 3d2a4 <mpfr_zeta@@Base+0x864>
   3d0d8:	ldr	w0, [sp, #116]
   3d0dc:	ldp	x23, x24, [sp, #48]
   3d0e0:	orr	w0, w0, #0x8
   3d0e4:	ldp	x25, x26, [sp, #64]
   3d0e8:	ldp	x27, x28, [sp, #80]
   3d0ec:	str	w0, [x2]
   3d0f0:	mov	w0, w21
   3d0f4:	ldp	x19, x20, [sp, #16]
   3d0f8:	ldp	x21, x22, [sp, #32]
   3d0fc:	ldp	x29, x30, [sp], #496
   3d100:	ret
   3d104:	mov	x1, x27
   3d108:	mov	x0, x26
   3d10c:	mov	x4, x28
   3d110:	mov	x3, x25
   3d114:	mov	x2, x19
   3d118:	mov	w5, #0x3                   	// #3
   3d11c:	bl	3c830 <mpfr_get_ui@@Base+0xd48>
   3d120:	ldr	x1, [sp, #176]
   3d124:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3d128:	cmp	x1, x0
   3d12c:	b.eq	3d614 <mpfr_zeta@@Base+0xbd4>  // b.none
   3d130:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d134:	ldr	x2, [x0, #2544]
   3d138:	add	x0, x0, #0x9f0
   3d13c:	blr	x2
   3d140:	add	x2, x20, x0
   3d144:	ldr	x0, [x20, x0]
   3d148:	str	x2, [sp, #144]
   3d14c:	cmp	x1, x0
   3d150:	b.eq	3d614 <mpfr_zeta@@Base+0xbd4>  // b.none
   3d154:	ldr	x1, [sp, #160]
   3d158:	mov	x0, x21
   3d15c:	bl	ca80 <mpfr_init2@plt>
   3d160:	mov	x1, x27
   3d164:	mov	x0, x21
   3d168:	mov	x4, x28
   3d16c:	mov	x3, x25
   3d170:	mov	x2, x19
   3d174:	mov	w5, #0x2                   	// #2
   3d178:	bl	3c830 <mpfr_get_ui@@Base+0xd48>
   3d17c:	ldr	x0, [sp, #304]
   3d180:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3d184:	cmp	x0, x1
   3d188:	b.eq	3d1fc <mpfr_zeta@@Base+0x7bc>  // b.none
   3d18c:	ldr	x1, [sp, #144]
   3d190:	ldr	x1, [x1]
   3d194:	cmp	x0, x1
   3d198:	b.eq	3d1fc <mpfr_zeta@@Base+0x7bc>  // b.none
   3d19c:	ldr	x1, [sp, #96]
   3d1a0:	mov	x0, x23
   3d1a4:	bl	ca80 <mpfr_init2@plt>
   3d1a8:	ldr	w3, [sp, #168]
   3d1ac:	mov	x1, x26
   3d1b0:	ldr	w2, [sp, #112]
   3d1b4:	mov	x0, x23
   3d1b8:	bl	c6a0 <mpfr_set4@plt>
   3d1bc:	ldr	w2, [sp, #112]
   3d1c0:	mov	x0, x21
   3d1c4:	ldr	x1, [sp, #96]
   3d1c8:	bl	c970 <mpfr_prec_round@plt>
   3d1cc:	mov	x1, x21
   3d1d0:	mov	w2, #0x1                   	// #1
   3d1d4:	mov	x0, x23
   3d1d8:	bl	c9a0 <mpfr_cmp3@plt>
   3d1dc:	mov	w1, w0
   3d1e0:	mov	x0, x21
   3d1e4:	str	w1, [sp, #144]
   3d1e8:	bl	c070 <mpfr_clear@plt>
   3d1ec:	mov	x0, x23
   3d1f0:	bl	c070 <mpfr_clear@plt>
   3d1f4:	ldr	w1, [sp, #144]
   3d1f8:	cbz	w1, 3d544 <mpfr_zeta@@Base+0xb04>
   3d1fc:	ldr	x1, [sp, #104]
   3d200:	mov	x0, #0xfffffffffffffeff    	// #-257
   3d204:	movk	x0, #0x7fff, lsl #48
   3d208:	sub	x0, x0, x24
   3d20c:	cmp	x0, x1
   3d210:	b.lt	3d5bc <mpfr_zeta@@Base+0xb7c>  // b.tstop
   3d214:	add	x24, x24, x1
   3d218:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3d21c:	cmp	x24, x0
   3d220:	add	x0, x24, x24, lsr #63
   3d224:	ldr	x1, [sp, #352]
   3d228:	asr	x0, x0, #1
   3d22c:	str	x0, [sp, #104]
   3d230:	b.ge	3d674 <mpfr_zeta@@Base+0xc34>  // b.tcont
   3d234:	sub	x3, x24, #0x1
   3d238:	asr	x3, x3, #6
   3d23c:	add	x3, x3, #0x1
   3d240:	str	x3, [sp, #144]
   3d244:	lsl	x2, x3, #5
   3d248:	str	x2, [sp, #352]
   3d24c:	cbnz	x1, 3d45c <mpfr_zeta@@Base+0xa1c>
   3d250:	mov	x0, x2
   3d254:	bl	ccf0 <mpfr_allocate_func@plt>
   3d258:	ldr	x3, [sp, #144]
   3d25c:	str	x0, [sp, #360]
   3d260:	add	x2, x3, x3, lsl #1
   3d264:	mov	w1, #0x1                   	// #1
   3d268:	str	x24, [sp, #160]
   3d26c:	add	x2, x0, x2, lsl #3
   3d270:	str	w1, [sp, #168]
   3d274:	stp	x0, x24, [sp, #184]
   3d278:	str	w1, [sp, #200]
   3d27c:	str	x24, [sp, #224]
   3d280:	str	w1, [sp, #232]
   3d284:	str	x24, [sp, #256]
   3d288:	str	w1, [sp, #264]
   3d28c:	add	x1, x0, x3, lsl #3
   3d290:	add	x3, x0, x3, lsl #4
   3d294:	str	x1, [sp, #216]
   3d298:	str	x3, [sp, #248]
   3d29c:	str	x2, [sp, #280]
   3d2a0:	b	3cd78 <mpfr_zeta@@Base+0x338>
   3d2a4:	mov	w0, w21
   3d2a8:	ldp	x19, x20, [sp, #16]
   3d2ac:	ldp	x21, x22, [sp, #32]
   3d2b0:	ldp	x23, x24, [sp, #48]
   3d2b4:	ldp	x25, x26, [sp, #64]
   3d2b8:	ldp	x27, x28, [sp, #80]
   3d2bc:	ldp	x29, x30, [sp], #496
   3d2c0:	ret
   3d2c4:	mrs	x20, tpidr_el0
   3d2c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d2cc:	ldr	x1, [x0, #2576]
   3d2d0:	add	x0, x0, #0xa10
   3d2d4:	blr	x1
   3d2d8:	ldr	w21, [sp, #112]
   3d2dc:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   3d2e0:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   3d2e4:	stp	x25, x26, [sp, #64]
   3d2e8:	ldr	w19, [x20, x0]
   3d2ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d2f0:	ldr	x1, [x0, #2512]
   3d2f4:	add	x0, x0, #0x9d0
   3d2f8:	blr	x1
   3d2fc:	add	x5, x20, x0
   3d300:	ldr	x25, [x20, x0]
   3d304:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d308:	ldr	x7, [x0, #2544]
   3d30c:	add	x0, x0, #0x9f0
   3d310:	blr	x7
   3d314:	mov	x2, #0xffffffffffffffff    	// #-1
   3d318:	mov	w3, w21
   3d31c:	mov	x1, x2
   3d320:	str	x6, [x5]
   3d324:	ldr	x26, [x20, x0]
   3d328:	str	x4, [x20, x0]
   3d32c:	mov	x0, x22
   3d330:	bl	ba80 <mpfr_set_si_2exp@plt>
   3d334:	cmp	w21, #0x4
   3d338:	b.eq	3d4fc <mpfr_zeta@@Base+0xabc>  // b.none
   3d33c:	sub	w0, w21, #0x1
   3d340:	cmp	w0, #0x1
   3d344:	b.hi	3d5a8 <mpfr_zeta@@Base+0xb68>  // b.pmore
   3d348:	tbnz	w23, #31, 3d5ec <mpfr_zeta@@Base+0xbac>
   3d34c:	ldr	w1, [sp, #112]
   3d350:	mov	w21, #0x1                   	// #1
   3d354:	cmp	w1, #0x2
   3d358:	b.ne	3d3dc <mpfr_zeta@@Base+0x99c>  // b.any
   3d35c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d360:	ldr	x1, [x0, #2576]
   3d364:	add	x0, x0, #0xa10
   3d368:	blr	x1
   3d36c:	str	w19, [x20, x0]
   3d370:	ldr	x1, [x22, #16]
   3d374:	add	x2, x20, x0
   3d378:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d37c:	ldr	x3, [x0, #2512]
   3d380:	add	x0, x0, #0x9d0
   3d384:	blr	x3
   3d388:	str	x25, [x20, x0]
   3d38c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d390:	ldr	x3, [x0, #2544]
   3d394:	add	x0, x0, #0x9f0
   3d398:	blr	x3
   3d39c:	str	x26, [x20, x0]
   3d3a0:	cmp	x26, x1
   3d3a4:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   3d3a8:	b.le	3d40c <mpfr_zeta@@Base+0x9cc>
   3d3ac:	ldr	w2, [sp, #112]
   3d3b0:	mov	w1, w21
   3d3b4:	mov	x0, x22
   3d3b8:	bl	cb30 <mpfr_check_range@plt>
   3d3bc:	mov	w21, w0
   3d3c0:	mov	w0, w21
   3d3c4:	ldp	x19, x20, [sp, #16]
   3d3c8:	ldp	x21, x22, [sp, #32]
   3d3cc:	ldp	x23, x24, [sp, #48]
   3d3d0:	ldp	x25, x26, [sp, #64]
   3d3d4:	ldp	x29, x30, [sp], #496
   3d3d8:	ret
   3d3dc:	cmp	w23, #0x0
   3d3e0:	mov	w0, #0xffffffff            	// #-1
   3d3e4:	ccmp	w1, #0x3, #0x4, gt
   3d3e8:	cneg	w21, w0, ne  // ne = any
   3d3ec:	b	3d35c <mpfr_zeta@@Base+0x91c>
   3d3f0:	ldr	x28, [x19]
   3d3f4:	cmp	x0, #0x0
   3d3f8:	ldr	x1, [x22]
   3d3fc:	str	x1, [sp, #96]
   3d400:	add	x28, x28, #0x2
   3d404:	b.gt	3cb38 <mpfr_zeta@@Base+0xf8>
   3d408:	b	3cb34 <mpfr_zeta@@Base+0xf4>
   3d40c:	orr	w19, w19, #0x8
   3d410:	mov	w0, w21
   3d414:	ldp	x23, x24, [sp, #48]
   3d418:	ldp	x25, x26, [sp, #64]
   3d41c:	str	w19, [x2]
   3d420:	ldp	x19, x20, [sp, #16]
   3d424:	ldp	x21, x22, [sp, #32]
   3d428:	ldp	x29, x30, [sp], #496
   3d42c:	ret
   3d430:	ldr	w3, [sp, #360]
   3d434:	mov	x1, x25
   3d438:	mov	x0, x21
   3d43c:	mov	w2, #0x2                   	// #2
   3d440:	bl	c6a0 <mpfr_set4@plt>
   3d444:	b	3cc24 <mpfr_zeta@@Base+0x1e4>
   3d448:	mov	x2, x27
   3d44c:	mov	x0, x21
   3d450:	mov	x1, #0x1                   	// #1
   3d454:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3d458:	b	3cbc8 <mpfr_zeta@@Base+0x188>
   3d45c:	ldr	x0, [sp, #360]
   3d460:	bl	c1c0 <mpfr_reallocate_func@plt>
   3d464:	str	x0, [sp, #360]
   3d468:	ldr	x3, [sp, #144]
   3d46c:	b	3d260 <mpfr_zeta@@Base+0x820>
   3d470:	mov	x2, x19
   3d474:	mov	x0, x21
   3d478:	mov	x1, #0x1                   	// #1
   3d47c:	bl	ca50 <mpfr_ui_sub@plt>
   3d480:	b	3cb84 <mpfr_zeta@@Base+0x144>
   3d484:	lsl	x0, x1, #5
   3d488:	str	x1, [sp, #104]
   3d48c:	str	x0, [sp, #352]
   3d490:	bl	ccf0 <mpfr_allocate_func@plt>
   3d494:	str	x0, [sp, #360]
   3d498:	ldr	x1, [sp, #104]
   3d49c:	b	3cd18 <mpfr_zeta@@Base+0x2d8>
   3d4a0:	mov	x3, #0x2                   	// #2
   3d4a4:	movk	x3, #0x8000, lsl #48
   3d4a8:	cmp	x1, x3
   3d4ac:	b.eq	3d4c4 <mpfr_zeta@@Base+0xa84>  // b.none
   3d4b0:	cmp	x1, x2
   3d4b4:	b.ne	3d51c <mpfr_zeta@@Base+0xadc>  // b.any
   3d4b8:	ldr	w1, [x19, #8]
   3d4bc:	cmp	w1, #0x0
   3d4c0:	b.gt	3d5fc <mpfr_zeta@@Base+0xbbc>
   3d4c4:	mrs	x1, tpidr_el0
   3d4c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d4cc:	ldr	x2, [x0, #2576]
   3d4d0:	add	x0, x0, #0xa10
   3d4d4:	blr	x2
   3d4d8:	add	x0, x1, x0
   3d4dc:	mov	x1, #0x2                   	// #2
   3d4e0:	movk	x1, #0x8000, lsl #48
   3d4e4:	str	x1, [x22, #16]
   3d4e8:	mov	w21, #0x0                   	// #0
   3d4ec:	ldr	w1, [x0]
   3d4f0:	orr	w1, w1, #0x4
   3d4f4:	str	w1, [x0]
   3d4f8:	b	3d0a8 <mpfr_zeta@@Base+0x668>
   3d4fc:	cmp	w23, #0x0
   3d500:	b.le	3d534 <mpfr_zeta@@Base+0xaf4>
   3d504:	mov	w1, #0x3                   	// #3
   3d508:	mov	x0, x22
   3d50c:	mov	w21, #0xffffffff            	// #-1
   3d510:	str	w1, [sp, #112]
   3d514:	bl	bdd0 <mpfr_nextbelow@plt>
   3d518:	b	3d35c <mpfr_zeta@@Base+0x91c>
   3d51c:	ldr	w3, [sp, #112]
   3d520:	mov	x2, #0xffffffffffffffff    	// #-1
   3d524:	mov	x1, x2
   3d528:	bl	ba80 <mpfr_set_si_2exp@plt>
   3d52c:	mov	w21, w0
   3d530:	b	3d0a8 <mpfr_zeta@@Base+0x668>
   3d534:	mov	w0, #0x3                   	// #3
   3d538:	mov	w21, #0xffffffff            	// #-1
   3d53c:	str	w0, [sp, #112]
   3d540:	b	3d35c <mpfr_zeta@@Base+0x91c>
   3d544:	mov	w3, #0x0                   	// #0
   3d548:	mov	x1, x19
   3d54c:	mov	x2, #0x2                   	// #2
   3d550:	mov	x0, x27
   3d554:	bl	c8f0 <mpfr_div_2ui@plt>
   3d558:	mov	x1, x27
   3d55c:	mov	w2, #0x0                   	// #0
   3d560:	mov	x0, x27
   3d564:	bl	bec0 <mpfr_frac@plt>
   3d568:	mov	x2, #0xffffffffffffffff    	// #-1
   3d56c:	mov	x0, x27
   3d570:	mov	x1, x2
   3d574:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3d578:	cmp	w0, #0x0
   3d57c:	b.le	3d590 <mpfr_zeta@@Base+0xb50>
   3d580:	ldr	w2, [sp, #112]
   3d584:	mov	x1, x26
   3d588:	mov	x0, x26
   3d58c:	bl	bd70 <mpfr_neg@plt>
   3d590:	ldr	w3, [sp, #112]
   3d594:	mov	x1, x26
   3d598:	mov	x0, x26
   3d59c:	mov	x2, #0x1                   	// #1
   3d5a0:	bl	c2c0 <mpfr_mul_2ui@plt>
   3d5a4:	b	3cf64 <mpfr_zeta@@Base+0x524>
   3d5a8:	ldr	w0, [sp, #112]
   3d5ac:	cmp	w23, #0x0
   3d5b0:	ccmp	w0, #0x3, #0x0, gt
   3d5b4:	b.eq	3d504 <mpfr_zeta@@Base+0xac4>  // b.none
   3d5b8:	b	3d34c <mpfr_zeta@@Base+0x90c>
   3d5bc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3d5c0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3d5c4:	add	x2, x2, #0x7f0
   3d5c8:	add	x0, x0, #0x750
   3d5cc:	mov	w1, #0x290                 	// #656
   3d5d0:	bl	cb40 <mpfr_assert_fail@plt>
   3d5d4:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3d5d8:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3d5dc:	add	x2, x2, #0x7a8
   3d5e0:	add	x0, x0, #0x750
   3d5e4:	mov	w1, #0x281                 	// #641
   3d5e8:	bl	cb40 <mpfr_assert_fail@plt>
   3d5ec:	mov	x0, x22
   3d5f0:	mov	w21, #0x1                   	// #1
   3d5f4:	bl	c120 <mpfr_nextabove@plt>
   3d5f8:	b	3d35c <mpfr_zeta@@Base+0x91c>
   3d5fc:	mov	w3, #0x0                   	// #0
   3d600:	mov	x2, #0x0                   	// #0
   3d604:	mov	x1, #0x1                   	// #1
   3d608:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3d60c:	mov	w21, w0
   3d610:	b	3d0a8 <mpfr_zeta@@Base+0x668>
   3d614:	mov	w3, #0x0                   	// #0
   3d618:	mov	x1, x19
   3d61c:	mov	x2, #0x2                   	// #2
   3d620:	mov	x0, x27
   3d624:	bl	c8f0 <mpfr_div_2ui@plt>
   3d628:	ldr	w0, [sp, #116]
   3d62c:	mov	x1, x27
   3d630:	mov	w2, #0x0                   	// #0
   3d634:	orr	w0, w0, #0x2
   3d638:	str	w0, [sp, #116]
   3d63c:	mov	x0, x27
   3d640:	bl	bec0 <mpfr_frac@plt>
   3d644:	mov	x2, #0xffffffffffffffff    	// #-1
   3d648:	mov	x0, x27
   3d64c:	mov	x1, x2
   3d650:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3d654:	ldr	w1, [sp, #112]
   3d658:	cmp	w0, #0x0
   3d65c:	mov	w2, #0xffffffff            	// #-1
   3d660:	mov	x0, x22
   3d664:	cneg	w2, w2, le
   3d668:	bl	bf40 <mpfr_overflow@plt>
   3d66c:	mov	w21, w0
   3d670:	b	3cf7c <mpfr_zeta@@Base+0x53c>
   3d674:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000003d678 <mpfr_cmp_d@@Base>:
   3d678:	stp	x29, x30, [sp, #-144]!
   3d67c:	mrs	x3, tpidr_el0
   3d680:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   3d684:	mov	x29, sp
   3d688:	stp	x21, x22, [sp, #32]
   3d68c:	mov	x21, x0
   3d690:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d694:	ldr	x1, [x0, #2576]
   3d698:	add	x0, x0, #0xa10
   3d69c:	blr	x1
   3d6a0:	stp	x19, x20, [sp, #16]
   3d6a4:	add	x20, x3, x0
   3d6a8:	add	x4, sp, #0x68
   3d6ac:	stp	x25, x26, [sp, #64]
   3d6b0:	mov	x6, #0x35                  	// #53
   3d6b4:	ldr	w26, [x3, x0]
   3d6b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d6bc:	ldr	x1, [x0, #2512]
   3d6c0:	add	x0, x0, #0x9d0
   3d6c4:	blr	x1
   3d6c8:	stp	x23, x24, [sp, #48]
   3d6cc:	add	x23, x3, x0
   3d6d0:	str	x27, [sp, #80]
   3d6d4:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3d6d8:	ldr	x27, [x3, x0]
   3d6dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d6e0:	ldr	x1, [x0, #2544]
   3d6e4:	add	x0, x0, #0x9f0
   3d6e8:	blr	x1
   3d6ec:	add	x22, x3, x0
   3d6f0:	add	x19, sp, #0x70
   3d6f4:	mov	w24, #0x1                   	// #1
   3d6f8:	mov	w1, #0x0                   	// #0
   3d6fc:	str	x5, [x23]
   3d700:	str	x6, [sp, #112]
   3d704:	str	w24, [sp, #120]
   3d708:	str	x4, [sp, #136]
   3d70c:	ldr	x25, [x3, x0]
   3d710:	mov	x0, x19
   3d714:	str	x2, [x22]
   3d718:	bl	be40 <mpfr_set_d@plt>
   3d71c:	mov	w2, w24
   3d720:	mov	x1, x19
   3d724:	mov	x0, x21
   3d728:	str	wzr, [x20]
   3d72c:	bl	c9a0 <mpfr_cmp3@plt>
   3d730:	ldr	w1, [x20]
   3d734:	orr	w1, w1, w26
   3d738:	str	w1, [x20]
   3d73c:	ldp	x19, x20, [sp, #16]
   3d740:	str	x25, [x22]
   3d744:	ldp	x21, x22, [sp, #32]
   3d748:	ldp	x25, x26, [sp, #64]
   3d74c:	str	x27, [x23]
   3d750:	ldp	x23, x24, [sp, #48]
   3d754:	ldr	x27, [sp, #80]
   3d758:	ldp	x29, x30, [sp], #144
   3d75c:	ret

000000000003d760 <mpfr_erf@@Base>:
   3d760:	sub	sp, sp, #0x230
   3d764:	stp	x29, x30, [sp]
   3d768:	mov	x29, sp
   3d76c:	ldr	x3, [x1, #16]
   3d770:	stp	x19, x20, [sp, #16]
   3d774:	mov	x20, x1
   3d778:	stp	x23, x24, [sp, #48]
   3d77c:	mov	x24, x0
   3d780:	stp	x25, x26, [sp, #64]
   3d784:	mov	w26, w2
   3d788:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3d78c:	cmp	x3, x2
   3d790:	b.le	3e03c <mpfr_erf@@Base+0x8dc>
   3d794:	stp	x21, x22, [sp, #32]
   3d798:	mrs	x21, tpidr_el0
   3d79c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d7a0:	ldr	x1, [x0, #2576]
   3d7a4:	add	x0, x0, #0xa10
   3d7a8:	blr	x1
   3d7ac:	ldr	x1, [x24]
   3d7b0:	stp	x27, x28, [sp, #80]
   3d7b4:	ldr	w0, [x21, x0]
   3d7b8:	str	w0, [sp, #164]
   3d7bc:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   3d7c0:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   3d7c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d7c8:	ldr	x2, [x0, #2512]
   3d7cc:	add	x0, x0, #0x9d0
   3d7d0:	blr	x2
   3d7d4:	add	x5, x21, x0
   3d7d8:	ldr	x0, [x21, x0]
   3d7dc:	add	x2, x1, x1, lsr #63
   3d7e0:	str	x6, [x5]
   3d7e4:	str	x0, [sp, #184]
   3d7e8:	neg	x2, x2, asr #1
   3d7ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3d7f0:	ldr	x7, [x0, #2544]
   3d7f4:	add	x0, x0, #0x9f0
   3d7f8:	blr	x7
   3d7fc:	ldr	x5, [x21, x0]
   3d800:	str	x4, [x21, x0]
   3d804:	str	x5, [sp, #192]
   3d808:	cmp	x3, x2
   3d80c:	b.lt	3db94 <mpfr_erf@@Base+0x434>  // b.tstop
   3d810:	adrp	x2, 81000 <__gmpfr_l2b@@Base+0x200>
   3d814:	add	x4, sp, #0xd8
   3d818:	mov	x5, #0x35                  	// #53
   3d81c:	add	x19, sp, #0xe0
   3d820:	ldr	x2, [x2, #4048]
   3d824:	mov	w22, #0x1                   	// #1
   3d828:	mov	x1, x20
   3d82c:	mov	w3, w22
   3d830:	mov	x0, x19
   3d834:	str	x5, [sp, #224]
   3d838:	str	w22, [sp, #232]
   3d83c:	str	x4, [sp, #248]
   3d840:	bl	c620 <mpfr_div@plt>
   3d844:	mov	w3, w22
   3d848:	mov	x2, x20
   3d84c:	mov	x1, x19
   3d850:	mov	x0, x19
   3d854:	bl	bd50 <mpfr_mul@plt>
   3d858:	ldr	x1, [x24]
   3d85c:	mov	x0, x19
   3d860:	mov	x2, #0x0                   	// #0
   3d864:	add	x1, x1, #0x1
   3d868:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   3d86c:	cmp	w0, #0x0
   3d870:	b.gt	3e098 <mpfr_erf@@Base+0x938>
   3d874:	mov	x0, x20
   3d878:	mov	w1, #0x0                   	// #0
   3d87c:	stp	d8, d9, [sp, #96]
   3d880:	stp	d10, d11, [sp, #112]
   3d884:	str	d12, [sp, #128]
   3d888:	bl	bd30 <mpfr_get_d@plt>
   3d88c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3d890:	fmul	d9, d0, d0
   3d894:	ldr	d1, [x0, #2104]
   3d898:	ldr	x0, [x24]
   3d89c:	str	x0, [sp, #168]
   3d8a0:	fdiv	d1, d9, d1
   3d8a4:	cmp	x0, #0x1
   3d8a8:	fcvtzs	x19, d1
   3d8ac:	add	x19, x19, x0
   3d8b0:	add	x19, x19, #0x8
   3d8b4:	b.eq	3d8d0 <mpfr_erf@@Base+0x170>  // b.none
   3d8b8:	b.le	3e168 <mpfr_erf@@Base+0xa08>
   3d8bc:	sub	x0, x0, #0x1
   3d8c0:	mov	w1, #0x40                  	// #64
   3d8c4:	clz	x0, x0
   3d8c8:	sub	w0, w1, w0
   3d8cc:	add	x19, x19, w0, sxtw
   3d8d0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3d8d4:	cmp	x19, x0
   3d8d8:	b.ge	3e164 <mpfr_erf@@Base+0xa04>  // b.tcont
   3d8dc:	sub	x25, x19, #0x1
   3d8e0:	asr	x25, x25, #6
   3d8e4:	add	x25, x25, #0x1
   3d8e8:	lsl	x0, x25, #2
   3d8ec:	cmp	x0, #0x10
   3d8f0:	b.gt	3dd10 <mpfr_erf@@Base+0x5b0>
   3d8f4:	add	x1, sp, #0x1b0
   3d8f8:	stp	xzr, x1, [sp, #416]
   3d8fc:	mov	x0, x1
   3d900:	add	x2, x25, x25, lsl #1
   3d904:	add	x1, sp, #0x100
   3d908:	add	x3, x0, x25, lsl #3
   3d90c:	add	x28, sp, #0x180
   3d910:	add	x23, sp, #0x120
   3d914:	add	x22, sp, #0x140
   3d918:	add	x2, x0, x2, lsl #3
   3d91c:	add	x25, x0, x25, lsl #4
   3d920:	str	x1, [sp, #152]
   3d924:	add	x1, sp, #0x160
   3d928:	mov	x5, #0x3ef0000000000000    	// #4535124824762089472
   3d92c:	mov	x4, #0x40                  	// #64
   3d930:	fmov	d10, x5
   3d934:	str	x1, [sp, #144]
   3d938:	mov	w1, #0x1                   	// #1
   3d93c:	str	x4, [sp, #200]
   3d940:	str	x19, [sp, #256]
   3d944:	stp	x0, x19, [sp, #280]
   3d948:	ldr	x0, [sp, #152]
   3d94c:	str	w1, [sp, #264]
   3d950:	str	w1, [sp, #296]
   3d954:	stp	x3, x19, [sp, #312]
   3d958:	mov	w3, #0x2                   	// #2
   3d95c:	str	w1, [sp, #328]
   3d960:	stp	x25, x19, [sp, #344]
   3d964:	str	w1, [sp, #360]
   3d968:	mov	x1, x20
   3d96c:	str	x2, [sp, #376]
   3d970:	mov	x2, x20
   3d974:	bl	bd50 <mpfr_mul@plt>
   3d978:	fmov	d8, #5.000000000000000000e-01
   3d97c:	mov	w3, #0x0                   	// #0
   3d980:	mov	x2, #0x0                   	// #0
   3d984:	mov	x1, #0x1                   	// #1
   3d988:	mov	x0, x23
   3d98c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3d990:	fmov	d12, #8.000000000000000000e+00
   3d994:	mov	w3, #0x0                   	// #0
   3d998:	mov	x2, #0x0                   	// #0
   3d99c:	mov	x1, #0x1                   	// #1
   3d9a0:	mov	x0, x22
   3d9a4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3d9a8:	neg	x0, x19
   3d9ac:	mov	x1, #0x35                  	// #53
   3d9b0:	str	x0, [sp, #176]
   3d9b4:	mov	x0, x28
   3d9b8:	bl	ca80 <mpfr_init2@plt>
   3d9bc:	mov	w0, #0x1                   	// #1
   3d9c0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3d9c4:	mov	w25, w0
   3d9c8:	str	w0, [sp, #392]
   3d9cc:	mov	w0, #0x3                   	// #3
   3d9d0:	str	w0, [sp, #160]
   3d9d4:	str	x1, [sp, #400]
   3d9d8:	ldr	x1, [sp, #152]
   3d9dc:	mov	x2, x22
   3d9e0:	mov	w3, #0x2                   	// #2
   3d9e4:	mov	x0, x22
   3d9e8:	bl	bd50 <mpfr_mul@plt>
   3d9ec:	mov	w2, w25
   3d9f0:	mov	x1, x22
   3d9f4:	mov	w3, #0x2                   	// #2
   3d9f8:	mov	x0, x22
   3d9fc:	bl	cc60 <mpfr_div_ui@plt>
   3da00:	ldr	w2, [sp, #160]
   3da04:	mov	x1, x22
   3da08:	ldr	x0, [sp, #144]
   3da0c:	mov	w3, #0x2                   	// #2
   3da10:	bl	cc60 <mpfr_div_ui@plt>
   3da14:	mov	x1, x23
   3da18:	mov	x0, x23
   3da1c:	mov	w3, #0x0                   	// #0
   3da20:	ldr	x2, [sp, #144]
   3da24:	ldr	x27, [sp, #304]
   3da28:	tbz	w25, #0, 3dd54 <mpfr_erf@@Base+0x5f4>
   3da2c:	bl	bb70 <mpfr_sub@plt>
   3da30:	ldr	x1, [sp, #304]
   3da34:	ldr	x0, [sp, #368]
   3da38:	sub	x2, x27, x1
   3da3c:	sub	x27, x0, x1
   3da40:	ldr	x0, [sp, #176]
   3da44:	cmp	x0, x27
   3da48:	b.le	3dd24 <mpfr_erf@@Base+0x5c4>
   3da4c:	ucvtf	d11, w25
   3da50:	fcmpe	d9, d11
   3da54:	b.ls	3dd74 <mpfr_erf@@Base+0x614>  // b.plast
   3da58:	mov	x1, x28
   3da5c:	mov	x0, x28
   3da60:	mov	w3, #0x2                   	// #2
   3da64:	bl	bb90 <mpfr_mul_2si@plt>
   3da68:	fmov	d0, #1.000000000000000000e+00
   3da6c:	cmn	x27, #0xf
   3da70:	fmadd	d0, d11, d12, d0
   3da74:	b.ge	3db88 <mpfr_erf@@Base+0x428>  // b.tcont
   3da78:	mov	x0, x27
   3da7c:	nop
   3da80:	add	x0, x0, #0x10
   3da84:	fmul	d0, d0, d10
   3da88:	cmn	x0, #0xf
   3da8c:	b.lt	3da80 <mpfr_erf@@Base+0x320>  // b.tstop
   3da90:	mov	x0, #0xfffffffffffffff0    	// #-16
   3da94:	sub	x0, x0, x27
   3da98:	cmn	x27, #0xf
   3da9c:	and	x0, x0, #0xfffffffffffffff0
   3daa0:	add	x27, x27, #0x10
   3daa4:	csel	x0, x0, xzr, lt  // lt = tstop
   3daa8:	add	x27, x0, x27
   3daac:	cbz	x27, 3db60 <mpfr_erf@@Base+0x400>
   3dab0:	cmn	x27, #0x1
   3dab4:	fmul	d0, d0, d8
   3dab8:	add	x27, x27, #0x2
   3dabc:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3dac0:	fmul	d0, d0, d8
   3dac4:	cbz	x27, 3db60 <mpfr_erf@@Base+0x400>
   3dac8:	fmul	d0, d0, d8
   3dacc:	cmn	x27, #0x1
   3dad0:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3dad4:	fmul	d0, d0, d8
   3dad8:	cmn	x27, #0x2
   3dadc:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3dae0:	fmul	d0, d0, d8
   3dae4:	cmn	x27, #0x3
   3dae8:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3daec:	fmul	d0, d0, d8
   3daf0:	cmn	x27, #0x4
   3daf4:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3daf8:	fmul	d0, d0, d8
   3dafc:	cmn	x27, #0x5
   3db00:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3db04:	fmul	d0, d0, d8
   3db08:	cmn	x27, #0x6
   3db0c:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3db10:	fmul	d0, d0, d8
   3db14:	cmn	x27, #0x7
   3db18:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3db1c:	fmul	d0, d0, d8
   3db20:	cmn	x27, #0x8
   3db24:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3db28:	fmul	d0, d0, d8
   3db2c:	cmn	x27, #0x9
   3db30:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3db34:	fmul	d0, d0, d8
   3db38:	cmn	x27, #0xa
   3db3c:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3db40:	fmul	d0, d0, d8
   3db44:	cmn	x27, #0xb
   3db48:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3db4c:	fmul	d0, d0, d8
   3db50:	cmn	x27, #0xc
   3db54:	b.eq	3db60 <mpfr_erf@@Base+0x400>  // b.none
   3db58:	fmul	d0, d0, d8
   3db5c:	nop
   3db60:	fadd	d0, d0, d8
   3db64:	ldr	w0, [sp, #160]
   3db68:	add	w25, w25, #0x1
   3db6c:	mov	x1, x28
   3db70:	add	w0, w0, #0x2
   3db74:	mov	w2, #0x2                   	// #2
   3db78:	str	w0, [sp, #160]
   3db7c:	mov	x0, x28
   3db80:	bl	c3a0 <mpfr_add_d@plt>
   3db84:	b	3d9d8 <mpfr_erf@@Base+0x278>
   3db88:	fmul	d0, d0, d8
   3db8c:	add	x27, x27, #0x2
   3db90:	b	3dac0 <mpfr_erf@@Base+0x360>
   3db94:	add	x28, sp, #0x180
   3db98:	add	x1, x1, #0x11
   3db9c:	mov	x0, x28
   3dba0:	bl	ca80 <mpfr_init2@plt>
   3dba4:	ldr	x1, [x24]
   3dba8:	add	x22, sp, #0x1a0
   3dbac:	mov	x0, x22
   3dbb0:	add	x1, x1, #0x11
   3dbb4:	bl	ca80 <mpfr_init2@plt>
   3dbb8:	mov	x2, x20
   3dbbc:	mov	x1, x20
   3dbc0:	mov	w3, #0x2                   	// #2
   3dbc4:	mov	x0, x28
   3dbc8:	bl	bd50 <mpfr_mul@plt>
   3dbcc:	mov	x1, x28
   3dbd0:	mov	w3, #0x2                   	// #2
   3dbd4:	mov	x2, #0x3                   	// #3
   3dbd8:	mov	x0, x28
   3dbdc:	bl	cc60 <mpfr_div_ui@plt>
   3dbe0:	mov	x1, #0x1                   	// #1
   3dbe4:	mov	w3, #0x1                   	// #1
   3dbe8:	mov	x2, x28
   3dbec:	mov	x0, x28
   3dbf0:	bl	ca50 <mpfr_ui_sub@plt>
   3dbf4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3dbf8:	ldr	x1, [x0, #2624]
   3dbfc:	add	x0, x0, #0xa40
   3dc00:	blr	x1
   3dc04:	add	x19, x21, x0
   3dc08:	mov	x1, x19
   3dc0c:	mov	w2, #0x2                   	// #2
   3dc10:	mov	x0, x22
   3dc14:	bl	c380 <mpfr_cache@plt>
   3dc18:	mov	x1, x22
   3dc1c:	mov	w2, #0x2                   	// #2
   3dc20:	mov	x0, x22
   3dc24:	bl	c930 <mpfr_sqrt@plt>
   3dc28:	mov	x2, x22
   3dc2c:	mov	x1, x28
   3dc30:	mov	w3, #0x1                   	// #1
   3dc34:	mov	x0, x28
   3dc38:	bl	c620 <mpfr_div@plt>
   3dc3c:	mov	x1, x28
   3dc40:	mov	w3, #0x1                   	// #1
   3dc44:	mov	x2, #0x1                   	// #1
   3dc48:	mov	x0, x28
   3dc4c:	bl	c2c0 <mpfr_mul_2ui@plt>
   3dc50:	mov	w3, #0x1                   	// #1
   3dc54:	mov	x1, x28
   3dc58:	mov	x2, x20
   3dc5c:	mov	x0, x28
   3dc60:	bl	bd50 <mpfr_mul@plt>
   3dc64:	mov	x1, x19
   3dc68:	mov	w2, #0x3                   	// #3
   3dc6c:	mov	x0, x22
   3dc70:	bl	c380 <mpfr_cache@plt>
   3dc74:	mov	x1, x22
   3dc78:	mov	w2, #0x3                   	// #3
   3dc7c:	mov	x0, x22
   3dc80:	bl	c930 <mpfr_sqrt@plt>
   3dc84:	mov	x1, x22
   3dc88:	mov	w3, #0x3                   	// #3
   3dc8c:	mov	x2, #0x1                   	// #1
   3dc90:	mov	x0, x22
   3dc94:	bl	c8f0 <mpfr_div_2ui@plt>
   3dc98:	ldr	w1, [x20, #8]
   3dc9c:	mov	x2, x22
   3dca0:	mov	x0, x22
   3dca4:	cmp	w1, #0x0
   3dca8:	mov	x1, x20
   3dcac:	cset	w3, le
   3dcb0:	add	w3, w3, #0x2
   3dcb4:	bl	c620 <mpfr_div@plt>
   3dcb8:	ldr	x1, [x24]
   3dcbc:	mov	w2, w26
   3dcc0:	mov	x0, x28
   3dcc4:	bl	c970 <mpfr_prec_round@plt>
   3dcc8:	mov	w19, w0
   3dccc:	ldr	x1, [x24]
   3dcd0:	mov	x0, x22
   3dcd4:	mov	w2, w26
   3dcd8:	bl	c970 <mpfr_prec_round@plt>
   3dcdc:	tbnz	w19, #31, 3df84 <mpfr_erf@@Base+0x824>
   3dce0:	tbnz	w0, #31, 3dcfc <mpfr_erf@@Base+0x59c>
   3dce4:	cmp	w19, #0x0
   3dce8:	cset	w1, gt
   3dcec:	cmp	w0, #0x0
   3dcf0:	cset	w0, gt
   3dcf4:	cmp	w1, w0
   3dcf8:	b.eq	3df88 <mpfr_erf@@Base+0x828>  // b.none
   3dcfc:	mov	x0, x28
   3dd00:	bl	c070 <mpfr_clear@plt>
   3dd04:	mov	x0, x22
   3dd08:	bl	c070 <mpfr_clear@plt>
   3dd0c:	b	3d810 <mpfr_erf@@Base+0xb0>
   3dd10:	lsl	x0, x25, #5
   3dd14:	str	x0, [sp, #416]
   3dd18:	bl	ccf0 <mpfr_allocate_func@plt>
   3dd1c:	str	x0, [sp, #424]
   3dd20:	b	3d900 <mpfr_erf@@Base+0x1a0>
   3dd24:	mov	x1, x28
   3dd28:	mov	x0, x28
   3dd2c:	mov	w3, #0x2                   	// #2
   3dd30:	bl	bb90 <mpfr_mul_2si@plt>
   3dd34:	ucvtf	d1, w25
   3dd38:	fmov	d0, #1.000000000000000000e+00
   3dd3c:	cmp	x27, #0x0
   3dd40:	fmadd	d0, d1, d12, d0
   3dd44:	b.gt	3dd5c <mpfr_erf@@Base+0x5fc>
   3dd48:	cmn	x27, #0xf
   3dd4c:	b.lt	3da78 <mpfr_erf@@Base+0x318>  // b.tstop
   3dd50:	b	3daac <mpfr_erf@@Base+0x34c>
   3dd54:	bl	c1a0 <mpfr_add@plt>
   3dd58:	b	3da30 <mpfr_erf@@Base+0x2d0>
   3dd5c:	sub	x27, x27, #0x1
   3dd60:	sub	x27, x27, #0x1
   3dd64:	fadd	d0, d0, d0
   3dd68:	cmn	x27, #0x1
   3dd6c:	b.ne	3dd60 <mpfr_erf@@Base+0x600>  // b.any
   3dd70:	b	3db60 <mpfr_erf@@Base+0x400>
   3dd74:	mov	x1, x20
   3dd78:	mov	x2, x23
   3dd7c:	mov	w3, #0x2                   	// #2
   3dd80:	mov	x0, x23
   3dd84:	bl	bd50 <mpfr_mul@plt>
   3dd88:	ldr	x3, [sp, #304]
   3dd8c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3dd90:	ldr	x1, [x0, #2624]
   3dd94:	add	x0, x0, #0xa40
   3dd98:	blr	x1
   3dd9c:	mov	w2, #0x1                   	// #1
   3dda0:	add	x1, x21, x0
   3dda4:	add	x3, x3, #0x1
   3dda8:	mov	x0, x22
   3ddac:	str	x3, [sp, #304]
   3ddb0:	bl	c380 <mpfr_cache@plt>
   3ddb4:	mov	x1, x22
   3ddb8:	mov	w2, #0x1                   	// #1
   3ddbc:	mov	x0, x22
   3ddc0:	bl	c930 <mpfr_sqrt@plt>
   3ddc4:	mov	x2, x22
   3ddc8:	mov	x1, x23
   3ddcc:	mov	w3, #0x0                   	// #0
   3ddd0:	mov	x0, x23
   3ddd4:	bl	c620 <mpfr_div@plt>
   3ddd8:	mov	x1, x28
   3dddc:	mov	w3, #0x2                   	// #2
   3dde0:	mov	x2, #0x2                   	// #2
   3dde4:	mov	x0, x28
   3dde8:	bl	c2c0 <mpfr_mul_2ui@plt>
   3ddec:	mov	x1, x28
   3ddf0:	mov	x0, x28
   3ddf4:	mov	w3, #0x2                   	// #2
   3ddf8:	mov	x2, #0xb                   	// #11
   3ddfc:	bl	c260 <mpfr_add_ui@plt>
   3de00:	ldr	x25, [sp, #400]
   3de04:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3de08:	cmp	x25, x0
   3de0c:	b.eq	3e068 <mpfr_erf@@Base+0x908>  // b.none
   3de10:	mov	x0, x28
   3de14:	bl	c070 <mpfr_clear@plt>
   3de18:	ldr	x1, [sp, #304]
   3de1c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3de20:	cmp	x1, x0
   3de24:	b.le	3dfc4 <mpfr_erf@@Base+0x864>
   3de28:	ldr	x1, [sp, #288]
   3de2c:	cmp	w26, #0x0
   3de30:	ldr	x0, [sp, #312]
   3de34:	sub	x1, x1, #0x1
   3de38:	ldr	x3, [sp, #168]
   3de3c:	asr	x1, x1, #6
   3de40:	sub	x2, x19, x25
   3de44:	add	x1, x1, #0x1
   3de48:	cinc	x3, x3, eq  // eq = none
   3de4c:	bl	c370 <mpfr_round_p@plt>
   3de50:	cbz	w0, 3dfc4 <mpfr_erf@@Base+0x864>
   3de54:	ldr	w3, [sp, #296]
   3de58:	mov	x1, x23
   3de5c:	mov	w2, w26
   3de60:	mov	x0, x24
   3de64:	bl	c6a0 <mpfr_set4@plt>
   3de68:	mov	w19, w0
   3de6c:	ldr	x1, [sp, #416]
   3de70:	cbz	x1, 3df74 <mpfr_erf@@Base+0x814>
   3de74:	ldr	x0, [sp, #424]
   3de78:	bl	cc20 <mpfr_free_func@plt>
   3de7c:	ldp	d8, d9, [sp, #96]
   3de80:	ldp	d10, d11, [sp, #112]
   3de84:	ldr	d12, [sp, #128]
   3de88:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3de8c:	ldr	x1, [x0, #2576]
   3de90:	add	x0, x0, #0xa10
   3de94:	blr	x1
   3de98:	add	x2, x21, x0
   3de9c:	ldr	w1, [sp, #164]
   3dea0:	str	w1, [x21, x0]
   3dea4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3dea8:	ldr	x3, [x0, #2512]
   3deac:	add	x0, x0, #0x9d0
   3deb0:	blr	x3
   3deb4:	ldr	x3, [sp, #184]
   3deb8:	str	x3, [x21, x0]
   3debc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3dec0:	ldr	x4, [x0, #2544]
   3dec4:	add	x0, x0, #0x9f0
   3dec8:	blr	x4
   3decc:	ldr	x1, [x24, #16]
   3ded0:	ldr	x4, [sp, #192]
   3ded4:	str	x4, [x21, x0]
   3ded8:	cmp	x3, x1
   3dedc:	ccmp	x4, x1, #0x1, le
   3dee0:	b.ge	3df1c <mpfr_erf@@Base+0x7bc>  // b.tcont
   3dee4:	mov	w1, w19
   3dee8:	mov	w2, w26
   3deec:	mov	x0, x24
   3def0:	bl	cb30 <mpfr_check_range@plt>
   3def4:	ldp	x21, x22, [sp, #32]
   3def8:	mov	w19, w0
   3defc:	ldp	x27, x28, [sp, #80]
   3df00:	mov	w0, w19
   3df04:	ldp	x29, x30, [sp]
   3df08:	ldp	x19, x20, [sp, #16]
   3df0c:	ldp	x23, x24, [sp, #48]
   3df10:	ldp	x25, x26, [sp, #64]
   3df14:	add	sp, sp, #0x230
   3df18:	ret
   3df1c:	cbz	w19, 3df50 <mpfr_erf@@Base+0x7f0>
   3df20:	ldr	w0, [sp, #164]
   3df24:	ldp	x21, x22, [sp, #32]
   3df28:	orr	w0, w0, #0x8
   3df2c:	ldp	x27, x28, [sp, #80]
   3df30:	str	w0, [x2]
   3df34:	mov	w0, w19
   3df38:	ldp	x29, x30, [sp]
   3df3c:	ldp	x19, x20, [sp, #16]
   3df40:	ldp	x23, x24, [sp, #48]
   3df44:	ldp	x25, x26, [sp, #64]
   3df48:	add	sp, sp, #0x230
   3df4c:	ret
   3df50:	mov	w0, w19
   3df54:	ldp	x29, x30, [sp]
   3df58:	ldp	x19, x20, [sp, #16]
   3df5c:	ldp	x21, x22, [sp, #32]
   3df60:	ldp	x23, x24, [sp, #48]
   3df64:	ldp	x25, x26, [sp, #64]
   3df68:	ldp	x27, x28, [sp, #80]
   3df6c:	add	sp, sp, #0x230
   3df70:	ret
   3df74:	ldp	d8, d9, [sp, #96]
   3df78:	ldp	d10, d11, [sp, #112]
   3df7c:	ldr	d12, [sp, #128]
   3df80:	b	3de88 <mpfr_erf@@Base+0x728>
   3df84:	tbz	w0, #31, 3dcfc <mpfr_erf@@Base+0x59c>
   3df88:	mov	x1, x22
   3df8c:	mov	x0, x28
   3df90:	mov	w2, #0x1                   	// #1
   3df94:	bl	c9a0 <mpfr_cmp3@plt>
   3df98:	cbnz	w0, 3dcfc <mpfr_erf@@Base+0x59c>
   3df9c:	ldr	w3, [sp, #424]
   3dfa0:	mov	w2, w26
   3dfa4:	mov	x1, x22
   3dfa8:	mov	x0, x24
   3dfac:	bl	c6a0 <mpfr_set4@plt>
   3dfb0:	mov	x0, x28
   3dfb4:	bl	c070 <mpfr_clear@plt>
   3dfb8:	mov	x0, x22
   3dfbc:	bl	c070 <mpfr_clear@plt>
   3dfc0:	b	3de88 <mpfr_erf@@Base+0x728>
   3dfc4:	ldr	x1, [sp, #200]
   3dfc8:	mov	x0, #0xfffffffffffffeff    	// #-257
   3dfcc:	movk	x0, #0x7fff, lsl #48
   3dfd0:	sub	x0, x0, x19
   3dfd4:	cmp	x0, x1
   3dfd8:	b.lt	3e14c <mpfr_erf@@Base+0x9ec>  // b.tstop
   3dfdc:	add	x19, x19, x1
   3dfe0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3dfe4:	cmp	x19, x0
   3dfe8:	add	x0, x19, x19, lsr #63
   3dfec:	ldr	x1, [sp, #416]
   3dff0:	asr	x0, x0, #1
   3dff4:	str	x0, [sp, #200]
   3dff8:	b.ge	3e164 <mpfr_erf@@Base+0xa04>  // b.tcont
   3dffc:	sub	x25, x19, #0x1
   3e000:	asr	x25, x25, #6
   3e004:	add	x25, x25, #0x1
   3e008:	lsl	x2, x25, #5
   3e00c:	str	x2, [sp, #416]
   3e010:	cbnz	x1, 3e088 <mpfr_erf@@Base+0x928>
   3e014:	mov	x0, x2
   3e018:	bl	ccf0 <mpfr_allocate_func@plt>
   3e01c:	str	x0, [sp, #424]
   3e020:	add	x2, x25, x25, lsl #1
   3e024:	add	x3, x0, x25, lsl #3
   3e028:	mov	w1, #0x1                   	// #1
   3e02c:	add	x25, x0, x25, lsl #4
   3e030:	add	x2, x0, x2, lsl #3
   3e034:	str	x19, [sp, #256]
   3e038:	b	3d944 <mpfr_erf@@Base+0x1e4>
   3e03c:	mov	x4, #0x2                   	// #2
   3e040:	movk	x4, #0x8000, lsl #48
   3e044:	cmp	x3, x4
   3e048:	b.eq	3e11c <mpfr_erf@@Base+0x9bc>  // b.none
   3e04c:	cmp	x3, x2
   3e050:	b.eq	3e104 <mpfr_erf@@Base+0x9a4>  // b.none
   3e054:	ldr	w3, [x1, #8]
   3e058:	mov	w2, #0x0                   	// #0
   3e05c:	bl	c6a0 <mpfr_set4@plt>
   3e060:	mov	w19, w0
   3e064:	b	3df00 <mpfr_erf@@Base+0x7a0>
   3e068:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3e06c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3e070:	add	x2, x2, #0x860
   3e074:	add	x0, x0, #0x858
   3e078:	mov	w1, #0xf7                  	// #247
   3e07c:	bl	cb40 <mpfr_assert_fail@plt>
   3e080:	ldr	x25, [sp, #400]
   3e084:	b	3de10 <mpfr_erf@@Base+0x6b0>
   3e088:	ldr	x0, [sp, #424]
   3e08c:	bl	c1c0 <mpfr_reallocate_func@plt>
   3e090:	str	x0, [sp, #424]
   3e094:	b	3e020 <mpfr_erf@@Base+0x8c0>
   3e098:	ldr	w19, [x20, #8]
   3e09c:	cmp	w19, #0x0
   3e0a0:	b.le	3e0d0 <mpfr_erf@@Base+0x970>
   3e0a4:	tst	w26, #0xfffffffd
   3e0a8:	b.eq	3e0fc <mpfr_erf@@Base+0x99c>  // b.none
   3e0ac:	cmp	w26, #0x4
   3e0b0:	b.eq	3e0fc <mpfr_erf@@Base+0x99c>  // b.none
   3e0b4:	mov	x0, x24
   3e0b8:	mov	x1, #0x0                   	// #0
   3e0bc:	bl	c0d0 <mpfr_setmax@plt>
   3e0c0:	neg	w19, w19
   3e0c4:	ldr	w0, [x20, #8]
   3e0c8:	str	w0, [x24, #8]
   3e0cc:	b	3de88 <mpfr_erf@@Base+0x728>
   3e0d0:	cmp	w26, #0x2
   3e0d4:	b.eq	3e0b4 <mpfr_erf@@Base+0x954>  // b.none
   3e0d8:	cmp	w26, #0x3
   3e0dc:	b.ne	3e0a4 <mpfr_erf@@Base+0x944>  // b.any
   3e0e0:	mov	w3, #0x2                   	// #2
   3e0e4:	nop
   3e0e8:	sxtw	x1, w19
   3e0ec:	mov	x0, x24
   3e0f0:	mov	x2, #0x0                   	// #0
   3e0f4:	bl	ba80 <mpfr_set_si_2exp@plt>
   3e0f8:	b	3de88 <mpfr_erf@@Base+0x728>
   3e0fc:	mov	w3, w26
   3e100:	b	3e0e8 <mpfr_erf@@Base+0x988>
   3e104:	ldrsw	x1, [x1, #8]
   3e108:	mov	w3, #0x0                   	// #0
   3e10c:	mov	x2, #0x0                   	// #0
   3e110:	bl	ba80 <mpfr_set_si_2exp@plt>
   3e114:	mov	w19, w0
   3e118:	b	3df00 <mpfr_erf@@Base+0x7a0>
   3e11c:	mrs	x1, tpidr_el0
   3e120:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3e124:	ldr	x2, [x0, #2576]
   3e128:	add	x0, x0, #0xa10
   3e12c:	blr	x2
   3e130:	add	x0, x1, x0
   3e134:	mov	w19, #0x0                   	// #0
   3e138:	str	x3, [x24, #16]
   3e13c:	ldr	w1, [x0]
   3e140:	orr	w1, w1, #0x4
   3e144:	str	w1, [x0]
   3e148:	b	3df00 <mpfr_erf@@Base+0x7a0>
   3e14c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3e150:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3e154:	add	x2, x2, #0x218
   3e158:	add	x0, x0, #0x858
   3e15c:	mov	w1, #0xff                  	// #255
   3e160:	bl	cb40 <mpfr_assert_fail@plt>
   3e164:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3e168:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3e16c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3e170:	add	x2, x2, #0x148
   3e174:	add	x0, x0, #0x858
   3e178:	mov	w1, #0xc6                  	// #198
   3e17c:	bl	cb40 <mpfr_assert_fail@plt>

000000000003e180 <mpfr_inits@@Base>:
   3e180:	stp	x29, x30, [sp, #-128]!
   3e184:	mov	w8, #0xffffffc8            	// #-56
   3e188:	mov	x29, sp
   3e18c:	add	x9, sp, #0x40
   3e190:	stp	x19, x20, [sp, #16]
   3e194:	add	x19, sp, #0x80
   3e198:	stp	x19, x19, [sp, #32]
   3e19c:	str	x9, [sp, #48]
   3e1a0:	stp	w8, wzr, [sp, #56]
   3e1a4:	stp	x1, x2, [sp, #72]
   3e1a8:	stp	x3, x4, [sp, #88]
   3e1ac:	stp	x5, x6, [sp, #104]
   3e1b0:	str	x7, [sp, #120]
   3e1b4:	cbz	x0, 3e20c <mpfr_inits@@Base+0x8c>
   3e1b8:	mov	w20, w8
   3e1bc:	b	3e1d4 <mpfr_inits@@Base+0x54>
   3e1c0:	mov	x0, x19
   3e1c4:	mov	x19, x2
   3e1c8:	str	x2, [sp, #32]
   3e1cc:	ldr	x0, [x0]
   3e1d0:	cbz	x0, 3e20c <mpfr_inits@@Base+0x8c>
   3e1d4:	bl	bbd0 <mpfr_init@plt>
   3e1d8:	add	w1, w20, #0x8
   3e1dc:	add	x2, x19, #0x8
   3e1e0:	tbz	w20, #31, 3e1c0 <mpfr_inits@@Base+0x40>
   3e1e4:	str	w1, [sp, #56]
   3e1e8:	add	x2, x19, #0x8
   3e1ec:	cmp	w1, #0x0
   3e1f0:	mov	x0, x19
   3e1f4:	b.le	3e218 <mpfr_inits@@Base+0x98>
   3e1f8:	ldr	x0, [x0]
   3e1fc:	str	x2, [sp, #32]
   3e200:	mov	w20, w1
   3e204:	mov	x19, x2
   3e208:	cbnz	x0, 3e1d4 <mpfr_inits@@Base+0x54>
   3e20c:	ldp	x19, x20, [sp, #16]
   3e210:	ldp	x29, x30, [sp], #128
   3e214:	ret
   3e218:	ldr	x0, [sp, #40]
   3e21c:	add	x0, x0, w20, sxtw
   3e220:	mov	w20, w1
   3e224:	b	3e1cc <mpfr_inits@@Base+0x4c>

000000000003e228 <mpfr_inits2@@Base>:
   3e228:	stp	x29, x30, [sp, #-128]!
   3e22c:	mov	w8, #0xffffffd0            	// #-48
   3e230:	mov	x29, sp
   3e234:	str	x21, [sp, #32]
   3e238:	mov	x21, x0
   3e23c:	add	x0, sp, #0x80
   3e240:	add	x9, sp, #0x50
   3e244:	str	x0, [sp, #48]
   3e248:	mov	x0, x1
   3e24c:	add	x1, sp, #0x80
   3e250:	str	x1, [sp, #56]
   3e254:	str	x9, [sp, #64]
   3e258:	stp	w8, wzr, [sp, #72]
   3e25c:	stp	x2, x3, [sp, #80]
   3e260:	stp	x4, x5, [sp, #96]
   3e264:	stp	x6, x7, [sp, #112]
   3e268:	cbz	x0, 3e2d0 <mpfr_inits2@@Base+0xa8>
   3e26c:	stp	x19, x20, [sp, #16]
   3e270:	mov	w20, w8
   3e274:	mov	x19, x1
   3e278:	b	3e290 <mpfr_inits2@@Base+0x68>
   3e27c:	mov	x2, x19
   3e280:	mov	x19, x4
   3e284:	str	x4, [sp, #48]
   3e288:	ldr	x0, [x2]
   3e28c:	cbz	x0, 3e2cc <mpfr_inits2@@Base+0xa4>
   3e290:	mov	x1, x21
   3e294:	bl	ca80 <mpfr_init2@plt>
   3e298:	add	w3, w20, #0x8
   3e29c:	add	x4, x19, #0x8
   3e2a0:	tbz	w20, #31, 3e27c <mpfr_inits2@@Base+0x54>
   3e2a4:	str	w3, [sp, #72]
   3e2a8:	add	x0, x19, #0x8
   3e2ac:	cmp	w3, #0x0
   3e2b0:	mov	x2, x19
   3e2b4:	b.le	3e2dc <mpfr_inits2@@Base+0xb4>
   3e2b8:	mov	x19, x0
   3e2bc:	str	x0, [sp, #48]
   3e2c0:	ldr	x0, [x2]
   3e2c4:	mov	w20, w3
   3e2c8:	cbnz	x0, 3e290 <mpfr_inits2@@Base+0x68>
   3e2cc:	ldp	x19, x20, [sp, #16]
   3e2d0:	ldr	x21, [sp, #32]
   3e2d4:	ldp	x29, x30, [sp], #128
   3e2d8:	ret
   3e2dc:	ldr	x2, [sp, #56]
   3e2e0:	add	x2, x2, w20, sxtw
   3e2e4:	mov	w20, w3
   3e2e8:	b	3e288 <mpfr_inits2@@Base+0x60>
   3e2ec:	nop

000000000003e2f0 <mpfr_clears@@Base>:
   3e2f0:	stp	x29, x30, [sp, #-128]!
   3e2f4:	mov	w8, #0xffffffc8            	// #-56
   3e2f8:	mov	x29, sp
   3e2fc:	add	x9, sp, #0x40
   3e300:	stp	x19, x20, [sp, #16]
   3e304:	add	x19, sp, #0x80
   3e308:	stp	x19, x19, [sp, #32]
   3e30c:	str	x9, [sp, #48]
   3e310:	stp	w8, wzr, [sp, #56]
   3e314:	stp	x1, x2, [sp, #72]
   3e318:	stp	x3, x4, [sp, #88]
   3e31c:	stp	x5, x6, [sp, #104]
   3e320:	str	x7, [sp, #120]
   3e324:	cbz	x0, 3e37c <mpfr_clears@@Base+0x8c>
   3e328:	mov	w20, w8
   3e32c:	b	3e344 <mpfr_clears@@Base+0x54>
   3e330:	mov	x0, x19
   3e334:	mov	x19, x2
   3e338:	str	x2, [sp, #32]
   3e33c:	ldr	x0, [x0]
   3e340:	cbz	x0, 3e37c <mpfr_clears@@Base+0x8c>
   3e344:	bl	c070 <mpfr_clear@plt>
   3e348:	add	w1, w20, #0x8
   3e34c:	add	x2, x19, #0x8
   3e350:	tbz	w20, #31, 3e330 <mpfr_clears@@Base+0x40>
   3e354:	str	w1, [sp, #56]
   3e358:	add	x2, x19, #0x8
   3e35c:	cmp	w1, #0x0
   3e360:	mov	x0, x19
   3e364:	b.le	3e388 <mpfr_clears@@Base+0x98>
   3e368:	ldr	x0, [x0]
   3e36c:	str	x2, [sp, #32]
   3e370:	mov	w20, w1
   3e374:	mov	x19, x2
   3e378:	cbnz	x0, 3e344 <mpfr_clears@@Base+0x54>
   3e37c:	ldp	x19, x20, [sp, #16]
   3e380:	ldp	x29, x30, [sp], #128
   3e384:	ret
   3e388:	ldr	x0, [sp, #40]
   3e38c:	add	x0, x0, w20, sxtw
   3e390:	mov	w20, w1
   3e394:	b	3e33c <mpfr_clears@@Base+0x4c>

000000000003e398 <mpfr_sgn@@Base>:
   3e398:	ldr	x1, [x0, #16]
   3e39c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3e3a0:	cmp	x1, x2
   3e3a4:	b.le	3e3b4 <mpfr_sgn@@Base+0x1c>
   3e3a8:	ldr	w2, [x0, #8]
   3e3ac:	mov	w0, w2
   3e3b0:	ret
   3e3b4:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   3e3b8:	mov	w2, #0x0                   	// #0
   3e3bc:	cmp	x1, x3
   3e3c0:	b.eq	3e3ac <mpfr_sgn@@Base+0x14>  // b.none
   3e3c4:	add	x3, x3, #0x1
   3e3c8:	cmp	x1, x3
   3e3cc:	b.ne	3e3a8 <mpfr_sgn@@Base+0x10>  // b.any
   3e3d0:	mrs	x1, tpidr_el0
   3e3d4:	stp	x29, x30, [sp, #-16]!
   3e3d8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3e3dc:	ldr	x3, [x0, #2576]
   3e3e0:	add	x0, x0, #0xa10
   3e3e4:	blr	x3
   3e3e8:	add	x0, x1, x0
   3e3ec:	mov	x29, sp
   3e3f0:	ldr	w1, [x0]
   3e3f4:	orr	w1, w1, #0x10
   3e3f8:	str	w1, [x0]
   3e3fc:	mov	w0, w2
   3e400:	ldp	x29, x30, [sp], #16
   3e404:	ret

000000000003e408 <mpfr_check@@Base>:
   3e408:	ldr	w1, [x0, #8]
   3e40c:	add	w1, w1, #0x1
   3e410:	ands	w1, w1, #0xfffffffd
   3e414:	b.ne	3e51c <mpfr_check@@Base+0x114>  // b.any
   3e418:	ldr	x4, [x0]
   3e41c:	mov	x3, #0xfffffffffffffefe    	// #-258
   3e420:	movk	x3, #0x7fff, lsl #48
   3e424:	mov	w2, #0x0                   	// #0
   3e428:	sub	x6, x4, #0x1
   3e42c:	cmp	x6, x3
   3e430:	b.hi	3e514 <mpfr_check@@Base+0x10c>  // b.pmore
   3e434:	ldr	x5, [x0, #24]
   3e438:	cbz	x5, 3e514 <mpfr_check@@Base+0x10c>
   3e43c:	ldur	x3, [x5, #-8]
   3e440:	mov	w2, w1
   3e444:	cmp	x3, #0x0
   3e448:	b.le	3e514 <mpfr_check@@Base+0x10c>
   3e44c:	cmp	x4, x3, lsl #6
   3e450:	b.gt	3e514 <mpfr_check@@Base+0x10c>
   3e454:	add	x2, x5, x3, lsl #3
   3e458:	mov	x1, x5
   3e45c:	nop
   3e460:	ldr	x3, [x1], #8
   3e464:	cmp	x1, x2
   3e468:	b.ne	3e460 <mpfr_check@@Base+0x58>  // b.any
   3e46c:	ldr	x1, [x0, #16]
   3e470:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3e474:	cmp	x1, x0
   3e478:	b.le	3e500 <mpfr_check@@Base+0xf8>
   3e47c:	asr	x6, x6, #6
   3e480:	mov	w2, #0x0                   	// #0
   3e484:	ldr	x0, [x5, x6, lsl #3]
   3e488:	tbz	x0, #63, 3e514 <mpfr_check@@Base+0x10c>
   3e48c:	ands	x4, x4, #0x3f
   3e490:	b.eq	3e4ac <mpfr_check@@Base+0xa4>  // b.none
   3e494:	ldr	x3, [x5]
   3e498:	neg	w4, w4
   3e49c:	mov	x0, #0xffffffffffffffff    	// #-1
   3e4a0:	lsl	x4, x0, x4
   3e4a4:	bics	xzr, x3, x4
   3e4a8:	b.ne	3e514 <mpfr_check@@Base+0x10c>  // b.any
   3e4ac:	mrs	x3, tpidr_el0
   3e4b0:	stp	x29, x30, [sp, #-16]!
   3e4b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3e4b8:	ldr	x2, [x0, #2512]
   3e4bc:	add	x0, x0, #0x9d0
   3e4c0:	blr	x2
   3e4c4:	mov	x29, sp
   3e4c8:	ldr	x0, [x3, x0]
   3e4cc:	mov	w2, #0x0                   	// #0
   3e4d0:	cmp	x1, x0
   3e4d4:	b.lt	3e4f4 <mpfr_check@@Base+0xec>  // b.tstop
   3e4d8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3e4dc:	ldr	x2, [x0, #2544]
   3e4e0:	add	x0, x0, #0x9f0
   3e4e4:	blr	x2
   3e4e8:	ldr	x0, [x3, x0]
   3e4ec:	cmp	x1, x0
   3e4f0:	cset	w2, le
   3e4f4:	mov	w0, w2
   3e4f8:	ldp	x29, x30, [sp], #16
   3e4fc:	ret
   3e500:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   3e504:	add	x2, x1, x2
   3e508:	cmp	x2, #0x1
   3e50c:	ccmp	x1, x0, #0x4, hi  // hi = pmore
   3e510:	cset	w2, eq  // eq = none
   3e514:	mov	w0, w2
   3e518:	ret
   3e51c:	mov	w2, #0x0                   	// #0
   3e520:	mov	w0, w2
   3e524:	ret

000000000003e528 <mpfr_get_version@@Base>:
   3e528:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3e52c:	add	x0, x0, #0x8a0
   3e530:	ret
   3e534:	nop

000000000003e538 <mpfr_mpn_exp@@Base>:
   3e538:	stp	x29, x30, [sp, #-208]!
   3e53c:	cmp	x3, #0x0
   3e540:	mov	x29, sp
   3e544:	stp	x19, x20, [sp, #16]
   3e548:	stp	x21, x22, [sp, #32]
   3e54c:	stp	x23, x24, [sp, #48]
   3e550:	stp	x25, x26, [sp, #64]
   3e554:	stp	x27, x28, [sp, #80]
   3e558:	str	x1, [x29, #96]
   3e55c:	str	x3, [x29, #152]
   3e560:	b.le	3e934 <mpfr_mpn_exp@@Base+0x3fc>
   3e564:	mov	x28, x0
   3e568:	sub	w0, w2, #0x2
   3e56c:	cmp	w0, #0x3c
   3e570:	b.hi	3e94c <mpfr_mpn_exp@@Base+0x414>  // b.pmore
   3e574:	sxtw	x2, w2
   3e578:	mov	x0, #0x40                  	// #64
   3e57c:	clz	x1, x2
   3e580:	str	xzr, [x29, #200]
   3e584:	mov	x19, x1
   3e588:	lsl	x23, x4, #4
   3e58c:	sub	x0, x0, x19
   3e590:	lsl	x1, x2, x1
   3e594:	stp	x0, x1, [x29, #112]
   3e598:	mov	x22, x4
   3e59c:	neg	x20, x19
   3e5a0:	cmp	x23, #0x4, lsl #12
   3e5a4:	b.hi	3e8dc <mpfr_mpn_exp@@Base+0x3a4>  // b.pmore
   3e5a8:	sub	sp, sp, x23
   3e5ac:	mov	x3, x1
   3e5b0:	mov	x21, sp
   3e5b4:	lsl	x0, x22, #3
   3e5b8:	sub	x19, x22, #0x1
   3e5bc:	sub	x26, x0, #0x8
   3e5c0:	mov	w1, #0x0                   	// #0
   3e5c4:	lsl	x2, x19, #3
   3e5c8:	str	x0, [x29, #128]
   3e5cc:	mov	x0, x28
   3e5d0:	sub	x19, x20, x19, lsl #6
   3e5d4:	str	x3, [x28, x26]
   3e5d8:	bl	c110 <memset@plt>
   3e5dc:	ldr	x0, [x29, #152]
   3e5e0:	mov	x1, #0x40                  	// #64
   3e5e4:	mov	x2, x23
   3e5e8:	clz	x0, x0
   3e5ec:	sub	x0, x1, x0
   3e5f0:	mov	w1, #0x0                   	// #0
   3e5f4:	mov	x20, x0
   3e5f8:	mov	x0, x21
   3e5fc:	str	x20, [x29, #176]
   3e600:	bl	c110 <memset@plt>
   3e604:	str	w20, [x29, #188]
   3e608:	cmp	w20, #0x1
   3e60c:	sub	w20, w20, #0x2
   3e610:	b.eq	3e8fc <mpfr_mpn_exp@@Base+0x3c4>  // b.none
   3e614:	lsl	x0, x22, #6
   3e618:	str	x0, [x29, #144]
   3e61c:	ldr	x0, [x29, #128]
   3e620:	add	x26, x21, x26
   3e624:	mov	x27, x28
   3e628:	sub	x23, x23, #0x8
   3e62c:	add	x0, x21, x0
   3e630:	mov	x28, x26
   3e634:	str	wzr, [x29, #108]
   3e638:	str	x0, [x29, #168]
   3e63c:	str	wzr, [x29, #184]
   3e640:	b	3e6ac <mpfr_mpn_exp@@Base+0x174>
   3e644:	cbnz	x0, 3e850 <mpfr_mpn_exp@@Base+0x318>
   3e648:	mov	x19, x6
   3e64c:	tbnz	x6, #63, 3e850 <mpfr_mpn_exp@@Base+0x318>
   3e650:	ldr	x0, [x21, x23]
   3e654:	add	x1, x21, x23
   3e658:	str	x1, [x29, #136]
   3e65c:	str	x6, [x29, #160]
   3e660:	ldr	w7, [x29, #188]
   3e664:	tbz	x0, #63, 3e710 <mpfr_mpn_exp@@Base+0x1d8>
   3e668:	ldr	x1, [x29, #168]
   3e66c:	cmp	x1, x27
   3e670:	b.eq	3e688 <mpfr_mpn_exp@@Base+0x150>  // b.none
   3e674:	ldr	x2, [x29, #128]
   3e678:	mov	x0, x27
   3e67c:	str	x7, [x29, #160]
   3e680:	bl	ba10 <memcpy@plt>
   3e684:	ldr	x7, [x29, #160]
   3e688:	ldr	x0, [x29, #176]
   3e68c:	cmp	x0, x7
   3e690:	b.eq	3e824 <mpfr_mpn_exp@@Base+0x2ec>  // b.none
   3e694:	ldr	x0, [x29, #152]
   3e698:	asr	x0, x0, x20
   3e69c:	tbnz	w0, #0, 3e778 <mpfr_mpn_exp@@Base+0x240>
   3e6a0:	sub	w20, w20, #0x1
   3e6a4:	cmn	w20, #0x1
   3e6a8:	b.eq	3e7e8 <mpfr_mpn_exp@@Base+0x2b0>  // b.none
   3e6ac:	mov	x1, #0x0                   	// #0
   3e6b0:	mov	x0, x27
   3e6b4:	bl	caa0 <__gmpn_scan1@plt>
   3e6b8:	lsr	x26, x0, #6
   3e6bc:	sub	x24, x22, x26
   3e6c0:	add	x25, x21, x26, lsl #4
   3e6c4:	mov	x2, x24
   3e6c8:	mov	x0, x25
   3e6cc:	add	x1, x27, x26, lsl #3
   3e6d0:	bl	c3b0 <__gmpn_sqr@plt>
   3e6d4:	mov	x0, #0x4000000000000000    	// #4611686018427387904
   3e6d8:	cmn	x19, x0
   3e6dc:	b.mi	3e850 <mpfr_mpn_exp@@Base+0x318>  // b.first
   3e6e0:	ldr	x0, [x29, #144]
   3e6e4:	lsl	x19, x19, #1
   3e6e8:	adds	x6, x0, x19
   3e6ec:	cset	x0, cs  // cs = hs, nlast
   3e6f0:	tbz	x19, #63, 3e644 <mpfr_mpn_exp@@Base+0x10c>
   3e6f4:	ldr	x0, [x21, x23]
   3e6f8:	add	x1, x21, x23
   3e6fc:	str	x1, [x29, #136]
   3e700:	mov	x19, x6
   3e704:	str	x6, [x29, #160]
   3e708:	ldr	w7, [x29, #188]
   3e70c:	tbnz	x0, #63, 3e668 <mpfr_mpn_exp@@Base+0x130>
   3e710:	ldr	x1, [x29, #168]
   3e714:	mov	x2, x22
   3e718:	mov	w3, #0x1                   	// #1
   3e71c:	mov	x0, x27
   3e720:	str	x7, [x29, #136]
   3e724:	bl	bcc0 <__gmpn_lshift@plt>
   3e728:	ldr	x6, [x29, #160]
   3e72c:	mov	x1, x28
   3e730:	mov	x2, #0x1                   	// #1
   3e734:	mov	x0, x28
   3e738:	sub	x19, x6, #0x1
   3e73c:	mov	w3, #0x1                   	// #1
   3e740:	bl	bcc0 <__gmpn_lshift@plt>
   3e744:	ldr	x1, [x27]
   3e748:	ldr	x7, [x29, #136]
   3e74c:	orr	x1, x1, x0
   3e750:	ldr	x2, [x29, #176]
   3e754:	str	x1, [x27]
   3e758:	cmp	x2, x7
   3e75c:	b.eq	3e824 <mpfr_mpn_exp@@Base+0x2ec>  // b.none
   3e760:	ldr	w0, [x29, #184]
   3e764:	add	w0, w0, #0x1
   3e768:	str	w0, [x29, #184]
   3e76c:	ldr	x0, [x29, #152]
   3e770:	asr	x0, x0, x20
   3e774:	tbz	w0, #0, 3e6a0 <mpfr_mpn_exp@@Base+0x168>
   3e778:	ldr	x3, [x29, #120]
   3e77c:	mov	x1, x27
   3e780:	mov	x2, x22
   3e784:	mov	x0, x28
   3e788:	bl	cd30 <__gmpn_mul_1@plt>
   3e78c:	ldr	w24, [x29, #188]
   3e790:	add	x1, x21, x23
   3e794:	str	x0, [x1]
   3e798:	ldr	x1, [x29, #112]
   3e79c:	add	x19, x19, x1
   3e7a0:	tbz	x0, #63, 3e880 <mpfr_mpn_exp@@Base+0x348>
   3e7a4:	ldr	x0, [x29, #168]
   3e7a8:	cmp	x0, x27
   3e7ac:	b.eq	3e7c0 <mpfr_mpn_exp@@Base+0x288>  // b.none
   3e7b0:	ldr	x2, [x29, #128]
   3e7b4:	mov	x1, x0
   3e7b8:	mov	x0, x27
   3e7bc:	bl	ba10 <memcpy@plt>
   3e7c0:	ldr	x0, [x29, #176]
   3e7c4:	cmp	x0, x24
   3e7c8:	b.eq	3e8c4 <mpfr_mpn_exp@@Base+0x38c>  // b.none
   3e7cc:	ldr	w0, [x29, #108]
   3e7d0:	sub	w20, w20, #0x1
   3e7d4:	cmn	w20, #0x1
   3e7d8:	add	w0, w0, #0x1
   3e7dc:	str	w0, [x29, #108]
   3e7e0:	b.ne	3e6ac <mpfr_mpn_exp@@Base+0x174>  // b.any
   3e7e4:	nop
   3e7e8:	ldr	x0, [x29, #200]
   3e7ec:	ldr	w1, [x29, #188]
   3e7f0:	mov	w21, w1
   3e7f4:	add	w20, w1, #0x3
   3e7f8:	cbnz	x0, 3e914 <mpfr_mpn_exp@@Base+0x3dc>
   3e7fc:	ldr	x0, [x29, #96]
   3e800:	str	x19, [x0]
   3e804:	ldr	x0, [x29, #176]
   3e808:	cmp	x0, x21
   3e80c:	b.eq	3e92c <mpfr_mpn_exp@@Base+0x3f4>  // b.none
   3e810:	ldr	w1, [x29, #108]
   3e814:	ldr	w0, [x29, #184]
   3e818:	add	w0, w1, w0, asr #1
   3e81c:	add	w20, w0, w20
   3e820:	b	3e85c <mpfr_mpn_exp@@Base+0x324>
   3e824:	cmp	x22, x26, lsl #1
   3e828:	b.cc	3e694 <mpfr_mpn_exp@@Base+0x15c>  // b.lo, b.ul, b.last
   3e82c:	sub	x24, x24, x26
   3e830:	mov	x0, x25
   3e834:	mov	x1, #0x0                   	// #0
   3e838:	bl	caa0 <__gmpn_scan1@plt>
   3e83c:	cmp	x0, x24, lsl #6
   3e840:	ldr	w0, [x29, #188]
   3e844:	csel	w0, w0, w20, cs  // cs = hs, nlast
   3e848:	str	w0, [x29, #188]
   3e84c:	b	3e694 <mpfr_mpn_exp@@Base+0x15c>
   3e850:	ldr	x0, [x29, #200]
   3e854:	mov	x20, #0xfffffffffffffffe    	// #-2
   3e858:	cbnz	x0, 3e8f4 <mpfr_mpn_exp@@Base+0x3bc>
   3e85c:	mov	sp, x29
   3e860:	mov	x0, x20
   3e864:	ldp	x19, x20, [sp, #16]
   3e868:	ldp	x21, x22, [sp, #32]
   3e86c:	ldp	x23, x24, [sp, #48]
   3e870:	ldp	x25, x26, [sp, #64]
   3e874:	ldp	x27, x28, [sp, #80]
   3e878:	ldp	x29, x30, [sp], #208
   3e87c:	ret
   3e880:	ldr	x1, [x29, #168]
   3e884:	mov	x2, x22
   3e888:	mov	w3, #0x1                   	// #1
   3e88c:	mov	x0, x27
   3e890:	sub	x19, x19, #0x1
   3e894:	bl	bcc0 <__gmpn_lshift@plt>
   3e898:	mov	x1, x28
   3e89c:	mov	x2, #0x1                   	// #1
   3e8a0:	mov	x0, x28
   3e8a4:	mov	w3, #0x1                   	// #1
   3e8a8:	bl	bcc0 <__gmpn_lshift@plt>
   3e8ac:	ldr	x1, [x27]
   3e8b0:	ldr	x2, [x29, #176]
   3e8b4:	orr	x1, x1, x0
   3e8b8:	str	x1, [x27]
   3e8bc:	cmp	x2, x24
   3e8c0:	b.ne	3e6a0 <mpfr_mpn_exp@@Base+0x168>  // b.any
   3e8c4:	ldr	x0, [x28]
   3e8c8:	cmp	x0, #0x0
   3e8cc:	ldr	w0, [x29, #188]
   3e8d0:	csel	w0, w0, w20, eq  // eq = none
   3e8d4:	str	w0, [x29, #188]
   3e8d8:	b	3e6a0 <mpfr_mpn_exp@@Base+0x168>
   3e8dc:	mov	x1, x23
   3e8e0:	add	x0, x29, #0xc8
   3e8e4:	bl	bdc0 <mpfr_tmp_allocate@plt>
   3e8e8:	mov	x21, x0
   3e8ec:	ldr	x3, [x29, #120]
   3e8f0:	b	3e5b4 <mpfr_mpn_exp@@Base+0x7c>
   3e8f4:	bl	c410 <mpfr_tmp_free@plt>
   3e8f8:	b	3e85c <mpfr_mpn_exp@@Base+0x324>
   3e8fc:	ldr	x0, [x29, #200]
   3e900:	str	wzr, [x29, #108]
   3e904:	ldr	x21, [x29, #176]
   3e908:	str	wzr, [x29, #184]
   3e90c:	add	w20, w21, #0x3
   3e910:	cbz	x0, 3e91c <mpfr_mpn_exp@@Base+0x3e4>
   3e914:	bl	c410 <mpfr_tmp_free@plt>
   3e918:	b	3e7fc <mpfr_mpn_exp@@Base+0x2c4>
   3e91c:	ldr	x0, [x29, #96]
   3e920:	mov	x20, #0xffffffffffffffff    	// #-1
   3e924:	str	x19, [x0]
   3e928:	b	3e85c <mpfr_mpn_exp@@Base+0x324>
   3e92c:	mov	x20, #0xffffffffffffffff    	// #-1
   3e930:	b	3e85c <mpfr_mpn_exp@@Base+0x324>
   3e934:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3e938:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3e93c:	add	x2, x2, #0x8a8
   3e940:	add	x0, x0, #0x8b0
   3e944:	mov	w1, #0x36                  	// #54
   3e948:	bl	cb40 <mpfr_assert_fail@plt>
   3e94c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3e950:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   3e954:	add	x2, x2, #0x8c0
   3e958:	add	x0, x0, #0x8b0
   3e95c:	mov	w1, #0x37                  	// #55
   3e960:	bl	cb40 <mpfr_assert_fail@plt>
   3e964:	nop

000000000003e968 <mpfr_tmp_allocate@@Base>:
   3e968:	stp	x29, x30, [sp, #-48]!
   3e96c:	mov	x29, sp
   3e970:	stp	x19, x20, [sp, #16]
   3e974:	mov	x20, x0
   3e978:	mov	x0, #0x18                  	// #24
   3e97c:	str	x21, [sp, #32]
   3e980:	mov	x21, x1
   3e984:	bl	ccf0 <mpfr_allocate_func@plt>
   3e988:	mov	x19, x0
   3e98c:	mov	x0, x21
   3e990:	bl	ccf0 <mpfr_allocate_func@plt>
   3e994:	stp	x0, x21, [x19]
   3e998:	ldr	x0, [x20]
   3e99c:	ldr	x21, [sp, #32]
   3e9a0:	str	x0, [x19, #16]
   3e9a4:	str	x19, [x20]
   3e9a8:	ldr	x0, [x19]
   3e9ac:	ldp	x19, x20, [sp, #16]
   3e9b0:	ldp	x29, x30, [sp], #48
   3e9b4:	ret

000000000003e9b8 <mpfr_tmp_free@@Base>:
   3e9b8:	cbz	x0, 3e9f8 <mpfr_tmp_free@@Base+0x40>
   3e9bc:	stp	x29, x30, [sp, #-32]!
   3e9c0:	mov	x29, sp
   3e9c4:	str	x19, [sp, #16]
   3e9c8:	mov	x19, x0
   3e9cc:	nop
   3e9d0:	ldp	x0, x1, [x19]
   3e9d4:	bl	cc20 <mpfr_free_func@plt>
   3e9d8:	mov	x0, x19
   3e9dc:	mov	x1, #0x18                  	// #24
   3e9e0:	ldr	x19, [x19, #16]
   3e9e4:	bl	cc20 <mpfr_free_func@plt>
   3e9e8:	cbnz	x19, 3e9d0 <mpfr_tmp_free@@Base+0x18>
   3e9ec:	ldr	x19, [sp, #16]
   3e9f0:	ldp	x29, x30, [sp], #32
   3e9f4:	ret
   3e9f8:	ret
   3e9fc:	nop
   3ea00:	stp	x29, x30, [sp, #-192]!
   3ea04:	mov	x29, sp
   3ea08:	ldr	w8, [sp, #200]
   3ea0c:	str	x1, [sp, #104]
   3ea10:	sub	x1, x1, #0x1
   3ea14:	stp	x25, x26, [sp, #64]
   3ea18:	mov	x25, x0
   3ea1c:	mov	x26, x4
   3ea20:	stp	x27, x28, [sp, #80]
   3ea24:	add	w28, w8, #0x1
   3ea28:	mov	x27, x0
   3ea2c:	str	x1, [sp, #152]
   3ea30:	add	x1, x25, x1, lsl #3
   3ea34:	sub	x0, x2, w28, sxtw
   3ea38:	str	x1, [sp, #144]
   3ea3c:	sxtw	x1, w8
   3ea40:	stp	x19, x20, [sp, #16]
   3ea44:	mov	x25, x3
   3ea48:	stp	x21, x22, [sp, #32]
   3ea4c:	mov	x21, x7
   3ea50:	stp	x23, x24, [sp, #48]
   3ea54:	mov	x24, x5
   3ea58:	mov	x23, x6
   3ea5c:	str	x1, [sp, #160]
   3ea60:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3ea64:	stp	x2, x0, [sp, #168]
   3ea68:	add	x0, x0, x1
   3ea6c:	str	x0, [sp, #184]
   3ea70:	cbz	x26, 3ec40 <mpfr_tmp_free@@Base+0x288>
   3ea74:	nop
   3ea78:	mov	x4, x21
   3ea7c:	mov	x20, #0x0                   	// #0
   3ea80:	mov	x21, x27
   3ea84:	mov	x27, x23
   3ea88:	mov	x23, x20
   3ea8c:	mov	x28, #0x8000000000000000    	// #-9223372036854775808
   3ea90:	mov	x22, #0x8000000000000003    	// #-9223372036854775805
   3ea94:	nop
   3ea98:	ldr	x1, [x25, x23, lsl #3]
   3ea9c:	ldr	x0, [x1, #16]
   3eaa0:	cmp	x0, x22
   3eaa4:	b.le	3ebd0 <mpfr_tmp_free@@Base+0x218>
   3eaa8:	ldr	x6, [x1]
   3eaac:	ldr	x2, [x1, #24]
   3eab0:	sub	x19, x6, #0x1
   3eab4:	asr	x19, x19, #6
   3eab8:	add	x19, x19, #0x1
   3eabc:	sub	x3, x0, x19, lsl #6
   3eac0:	subs	x9, x3, x24
   3eac4:	b.mi	3ec48 <mpfr_tmp_free@@Base+0x290>  // b.first
   3eac8:	ldr	x3, [sp, #104]
   3eacc:	asr	x8, x9, #6
   3ead0:	sub	x7, x3, x8
   3ead4:	cmp	x7, #0x0
   3ead8:	b.le	3ebd0 <mpfr_tmp_free@@Base+0x218>
   3eadc:	add	x20, x21, x8, lsl #3
   3eae0:	cmp	x0, x27
   3eae4:	b.le	3eda8 <mpfr_tmp_free@@Base+0x3f0>
   3eae8:	subs	x0, x0, x27
   3eaec:	add	x3, x0, #0x3f
   3eaf0:	csel	x3, x3, x0, mi  // mi = first
   3eaf4:	sub	x19, x19, x3, asr #6
   3eaf8:	cmp	x19, #0x0
   3eafc:	b.le	3ebd0 <mpfr_tmp_free@@Base+0x218>
   3eb00:	and	x0, x0, #0x3f
   3eb04:	mov	w6, w0
   3eb08:	mov	w5, w0
   3eb0c:	ands	x9, x9, #0x3f
   3eb10:	b.eq	3eb50 <mpfr_tmp_free@@Base+0x198>  // b.none
   3eb14:	mov	x1, x2
   3eb18:	mov	w3, w9
   3eb1c:	mov	x2, x19
   3eb20:	mov	x0, x4
   3eb24:	stp	x4, x9, [sp, #112]
   3eb28:	str	x7, [sp, #128]
   3eb2c:	str	w5, [sp, #136]
   3eb30:	bl	bcc0 <__gmpn_lshift@plt>
   3eb34:	ldp	x4, x9, [sp, #112]
   3eb38:	ldr	w5, [sp, #136]
   3eb3c:	ldr	x1, [x25, x23, lsl #3]
   3eb40:	ldr	x7, [sp, #128]
   3eb44:	mov	x2, x4
   3eb48:	subs	w6, w5, w9
   3eb4c:	b.mi	3eeac <mpfr_tmp_free@@Base+0x4f4>  // b.first
   3eb50:	ldr	w0, [x1, #8]
   3eb54:	cbz	w6, 3ed34 <mpfr_tmp_free@@Base+0x37c>
   3eb58:	sub	x19, x19, #0x1
   3eb5c:	cmp	w0, #0x0
   3eb60:	b.gt	3edb4 <mpfr_tmp_free@@Base+0x3fc>
   3eb64:	cbnz	x19, 3ef9c <mpfr_tmp_free@@Base+0x5e4>
   3eb68:	mov	x1, #0x0                   	// #0
   3eb6c:	ldr	x2, [x2]
   3eb70:	mov	w0, #0x40                  	// #64
   3eb74:	sub	w0, w0, w6
   3eb78:	mov	x3, #0xffffffffffffffff    	// #-1
   3eb7c:	lsl	x0, x3, x0
   3eb80:	bic	x0, x2, x0
   3eb84:	add	x0, x0, x1
   3eb88:	cmp	x19, x7
   3eb8c:	b.ge	3ebd0 <mpfr_tmp_free@@Base+0x218>  // b.tcont
   3eb90:	ldr	x1, [x20, x19, lsl #3]
   3eb94:	add	x2, x20, x19, lsl #3
   3eb98:	sub	x3, x1, x0
   3eb9c:	str	x3, [x20, x19, lsl #3]
   3eba0:	cmp	x0, x1
   3eba4:	b.ls	3ebd0 <mpfr_tmp_free@@Base+0x218>  // b.plast
   3eba8:	sub	x19, x7, x19
   3ebac:	mov	x0, #0x1                   	// #1
   3ebb0:	b	3ebc8 <mpfr_tmp_free@@Base+0x210>
   3ebb4:	ldr	x1, [x2, x0, lsl #3]
   3ebb8:	sub	x3, x1, #0x1
   3ebbc:	str	x3, [x2, x0, lsl #3]
   3ebc0:	add	x0, x0, #0x1
   3ebc4:	cbnz	x1, 3ebd0 <mpfr_tmp_free@@Base+0x218>
   3ebc8:	cmp	x19, x0
   3ebcc:	b.gt	3ebb4 <mpfr_tmp_free@@Base+0x1fc>
   3ebd0:	add	x23, x23, #0x1
   3ebd4:	cmp	x26, x23
   3ebd8:	b.ne	3ea98 <mpfr_tmp_free@@Base+0xe0>  // b.any
   3ebdc:	mov	x27, x21
   3ebe0:	mov	x21, x4
   3ebe4:	ldp	x0, x1, [sp, #144]
   3ebe8:	ldr	x2, [x0]
   3ebec:	mov	x0, #0x0                   	// #0
   3ebf0:	asr	x3, x2, #63
   3ebf4:	nop
   3ebf8:	ldr	x2, [x27, x1, lsl #3]
   3ebfc:	cmp	x2, x3
   3ec00:	b.ne	3eddc <mpfr_tmp_free@@Base+0x424>  // b.any
   3ec04:	sub	x1, x1, #0x1
   3ec08:	add	x0, x0, #0x40
   3ec0c:	cmn	x1, #0x1
   3ec10:	b.ne	3ebf8 <mpfr_tmp_free@@Base+0x240>  // b.any
   3ec14:	cbnz	x3, 3ede8 <mpfr_tmp_free@@Base+0x430>
   3ec18:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ec1c:	cmp	x28, x0
   3ec20:	b.eq	3ef7c <mpfr_tmp_free@@Base+0x5c4>  // b.none
   3ec24:	ldr	x0, [sp, #184]
   3ec28:	cmp	x0, x28
   3ec2c:	b.gt	3eec0 <mpfr_tmp_free@@Base+0x508>
   3ec30:	ldr	x0, [sp, #176]
   3ec34:	mov	x23, x28
   3ec38:	sub	x24, x28, x0
   3ec3c:	cbnz	x26, 3ea78 <mpfr_tmp_free@@Base+0xc0>
   3ec40:	mov	x28, #0x8000000000000000    	// #-9223372036854775808
   3ec44:	b	3ebe4 <mpfr_tmp_free@@Base+0x22c>
   3ec48:	cmp	x0, x24
   3ec4c:	b.gt	3ec68 <mpfr_tmp_free@@Base+0x2b0>
   3ec50:	cmp	x0, x28
   3ec54:	add	x23, x23, #0x1
   3ec58:	csel	x28, x28, x0, le
   3ec5c:	cmp	x26, x23
   3ec60:	b.ne	3ea98 <mpfr_tmp_free@@Base+0xe0>  // b.any
   3ec64:	b	3ebdc <mpfr_tmp_free@@Base+0x224>
   3ec68:	sub	x6, x0, x6
   3ec6c:	sub	x3, x24, x3
   3ec70:	cmp	x6, x24
   3ec74:	add	x6, x3, #0x3f
   3ec78:	csel	x28, x28, x24, ge  // ge = tcont
   3ec7c:	cmp	x3, #0x0
   3ec80:	csel	x6, x6, x3, lt  // lt = tstop
   3ec84:	cmp	x0, x27
   3ec88:	asr	x6, x6, #6
   3ec8c:	sub	x19, x19, x6
   3ec90:	add	x2, x2, x6, lsl #3
   3ec94:	b.le	3ee88 <mpfr_tmp_free@@Base+0x4d0>
   3ec98:	subs	x0, x0, x27
   3ec9c:	add	x7, x0, #0x3f
   3eca0:	and	w6, w0, #0x3f
   3eca4:	csel	x7, x7, x0, mi  // mi = first
   3eca8:	sub	x19, x19, x7, asr #6
   3ecac:	ands	x20, x3, #0x3f
   3ecb0:	b.eq	3ee7c <mpfr_tmp_free@@Base+0x4c4>  // b.none
   3ecb4:	negs	x3, x3
   3ecb8:	mov	x1, x2
   3ecbc:	and	x0, x3, #0x3f
   3ecc0:	mov	x2, x19
   3ecc4:	csneg	x20, x20, x0, mi  // mi = first
   3ecc8:	mov	x0, x4
   3eccc:	mov	w3, w20
   3ecd0:	str	x4, [sp, #112]
   3ecd4:	str	w6, [sp, #120]
   3ecd8:	bl	bce0 <__gmpn_rshift@plt>
   3ecdc:	ldr	w6, [sp, #120]
   3ece0:	ldr	x4, [sp, #112]
   3ece4:	add	w0, w6, w20
   3ece8:	cmp	w0, #0x3f
   3ecec:	b.ls	3ecf8 <mpfr_tmp_free@@Base+0x340>  // b.plast
   3ecf0:	sub	x19, x19, #0x1
   3ecf4:	sub	w0, w0, #0x40
   3ecf8:	cbz	w0, 3ed20 <mpfr_tmp_free@@Base+0x368>
   3ecfc:	lsl	x1, x19, #3
   3ed00:	mov	w2, #0x40                  	// #64
   3ed04:	sub	x1, x1, #0x8
   3ed08:	sub	w0, w2, w0
   3ed0c:	mov	x2, #0xffffffffffffffff    	// #-1
   3ed10:	lsl	x0, x2, x0
   3ed14:	ldr	x2, [x4, x1]
   3ed18:	bic	x0, x2, x0
   3ed1c:	str	x0, [x4, x1]
   3ed20:	ldr	x0, [x25, x23, lsl #3]
   3ed24:	mov	x2, x4
   3ed28:	ldr	x7, [sp, #104]
   3ed2c:	mov	x20, x21
   3ed30:	ldr	w0, [x0, #8]
   3ed34:	cmp	w0, #0x0
   3ed38:	b.le	3ee90 <mpfr_tmp_free@@Base+0x4d8>
   3ed3c:	mov	x3, x19
   3ed40:	mov	x1, x20
   3ed44:	mov	x0, x20
   3ed48:	stp	x7, x4, [sp, #112]
   3ed4c:	bl	c5a0 <__gmpn_add_n@plt>
   3ed50:	ldp	x7, x4, [sp, #112]
   3ed54:	cmp	x19, x7
   3ed58:	b.ge	3ebd0 <mpfr_tmp_free@@Base+0x218>  // b.tcont
   3ed5c:	ldr	x1, [x20, x19, lsl #3]
   3ed60:	add	x2, x20, x19, lsl #3
   3ed64:	adds	x0, x0, x1
   3ed68:	str	x0, [x20, x19, lsl #3]
   3ed6c:	b.cc	3ebd0 <mpfr_tmp_free@@Base+0x218>  // b.lo, b.ul, b.last
   3ed70:	sub	x19, x7, x19
   3ed74:	mov	x0, #0x1                   	// #1
   3ed78:	b	3ed90 <mpfr_tmp_free@@Base+0x3d8>
   3ed7c:	ldr	x1, [x2, x0, lsl #3]
   3ed80:	add	x1, x1, #0x1
   3ed84:	str	x1, [x2, x0, lsl #3]
   3ed88:	add	x0, x0, #0x1
   3ed8c:	cbnz	x1, 3ebd0 <mpfr_tmp_free@@Base+0x218>
   3ed90:	cmp	x19, x0
   3ed94:	b.gt	3ed7c <mpfr_tmp_free@@Base+0x3c4>
   3ed98:	add	x23, x23, #0x1
   3ed9c:	cmp	x26, x23
   3eda0:	b.ne	3ea98 <mpfr_tmp_free@@Base+0xe0>  // b.any
   3eda4:	b	3ebdc <mpfr_tmp_free@@Base+0x224>
   3eda8:	mov	w5, #0x0                   	// #0
   3edac:	mov	w6, #0x0                   	// #0
   3edb0:	b	3eb0c <mpfr_tmp_free@@Base+0x154>
   3edb4:	cbnz	x19, 3efd0 <mpfr_tmp_free@@Base+0x618>
   3edb8:	mov	x1, #0x0                   	// #0
   3edbc:	ldr	x2, [x2, x19, lsl #3]
   3edc0:	mov	w0, #0x40                  	// #64
   3edc4:	sub	w0, w0, w6
   3edc8:	mov	x3, #0xffffffffffffffff    	// #-1
   3edcc:	lsl	x0, x3, x0
   3edd0:	bic	x0, x2, x0
   3edd4:	add	x0, x0, x1
   3edd8:	b	3ed54 <mpfr_tmp_free@@Base+0x39c>
   3eddc:	eor	x2, x2, x3
   3ede0:	clz	x2, x2
   3ede4:	add	x0, x0, x2
   3ede8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   3edec:	cmp	x28, x2
   3edf0:	ldp	x2, x1, [sp, #160]
   3edf4:	add	x1, x1, x24
   3edf8:	add	x2, x2, x28
   3edfc:	sub	x1, x1, x0
   3ee00:	b.eq	3eefc <mpfr_tmp_free@@Base+0x544>  // b.none
   3ee04:	cmp	x1, x2
   3ee08:	b.lt	3ee1c <mpfr_tmp_free@@Base+0x464>  // b.tstop
   3ee0c:	ldr	x4, [sp, #208]
   3ee10:	sub	x3, x1, x2
   3ee14:	cmp	x3, x4
   3ee18:	b.cs	3eefc <mpfr_tmp_free@@Base+0x544>  // b.hs, b.nlast
   3ee1c:	subs	x19, x2, x1
   3ee20:	sub	x0, x0, #0x2
   3ee24:	csel	x19, x19, xzr, pl  // pl = nfrst
   3ee28:	sub	x19, x0, x19
   3ee2c:	ldr	x0, [sp, #104]
   3ee30:	asr	x22, x19, #6
   3ee34:	ands	x3, x19, #0x3f
   3ee38:	sub	x2, x0, x22
   3ee3c:	lsl	x22, x22, #3
   3ee40:	add	x0, x27, x22
   3ee44:	b.eq	3eef0 <mpfr_tmp_free@@Base+0x538>  // b.none
   3ee48:	mov	x1, x27
   3ee4c:	bl	bcc0 <__gmpn_lshift@plt>
   3ee50:	mov	x2, x22
   3ee54:	mov	x0, x27
   3ee58:	mov	w1, #0x0                   	// #0
   3ee5c:	bl	c110 <memset@plt>
   3ee60:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ee64:	add	x0, x19, x0
   3ee68:	cmp	x0, x24
   3ee6c:	b.gt	3eed8 <mpfr_tmp_free@@Base+0x520>
   3ee70:	sub	x24, x24, x19
   3ee74:	mov	x23, x28
   3ee78:	b	3ec3c <mpfr_tmp_free@@Base+0x284>
   3ee7c:	mov	x20, x21
   3ee80:	ldr	x7, [sp, #104]
   3ee84:	b	3eb50 <mpfr_tmp_free@@Base+0x198>
   3ee88:	mov	w6, #0x0                   	// #0
   3ee8c:	b	3ecac <mpfr_tmp_free@@Base+0x2f4>
   3ee90:	mov	x3, x19
   3ee94:	mov	x1, x20
   3ee98:	mov	x0, x20
   3ee9c:	stp	x7, x4, [sp, #112]
   3eea0:	bl	be60 <__gmpn_sub_n@plt>
   3eea4:	ldp	x7, x4, [sp, #112]
   3eea8:	b	3eb88 <mpfr_tmp_free@@Base+0x1d0>
   3eeac:	add	w6, w6, #0x40
   3eeb0:	str	x0, [x4, x19, lsl #3]
   3eeb4:	ldr	w0, [x1, #8]
   3eeb8:	add	x19, x19, #0x1
   3eebc:	b	3eb58 <mpfr_tmp_free@@Base+0x1a0>
   3eec0:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   3eec4:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   3eec8:	add	x2, x2, #0x148
   3eecc:	add	x0, x0, #0x140
   3eed0:	mov	w1, #0x200                 	// #512
   3eed4:	bl	cb40 <mpfr_assert_fail@plt>
   3eed8:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   3eedc:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   3eee0:	add	x2, x2, #0x110
   3eee4:	add	x0, x0, #0x140
   3eee8:	mov	w1, #0x1f3                 	// #499
   3eeec:	bl	cb40 <mpfr_assert_fail@plt>
   3eef0:	mov	x1, x27
   3eef4:	bl	bae0 <__gmpn_copyd@plt>
   3eef8:	b	3ee50 <mpfr_tmp_free@@Base+0x498>
   3eefc:	ldr	x2, [sp, #216]
   3ef00:	mov	x27, x24
   3ef04:	cmp	x2, #0x0
   3ef08:	ldr	x2, [sp, #224]
   3ef0c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   3ef10:	b.eq	3ef48 <mpfr_tmp_free@@Base+0x590>  // b.none
   3ef14:	ldr	x2, [sp, #216]
   3ef18:	str	x1, [x2]
   3ef1c:	ldr	x1, [sp, #224]
   3ef20:	str	x27, [x1]
   3ef24:	ldr	x1, [sp, #232]
   3ef28:	str	x28, [x1]
   3ef2c:	ldp	x19, x20, [sp, #16]
   3ef30:	ldp	x21, x22, [sp, #32]
   3ef34:	ldp	x23, x24, [sp, #48]
   3ef38:	ldp	x25, x26, [sp, #64]
   3ef3c:	ldp	x27, x28, [sp, #80]
   3ef40:	ldp	x29, x30, [sp], #192
   3ef44:	ret
   3ef48:	mov	x3, x2
   3ef4c:	ldr	x2, [sp, #216]
   3ef50:	orr	x2, x2, x3
   3ef54:	cbz	x2, 3ef2c <mpfr_tmp_free@@Base+0x574>
   3ef58:	ldr	x2, [sp, #216]
   3ef5c:	cbnz	x2, 3ef14 <mpfr_tmp_free@@Base+0x55c>
   3ef60:	ldp	x19, x20, [sp, #16]
   3ef64:	ldp	x21, x22, [sp, #32]
   3ef68:	ldp	x23, x24, [sp, #48]
   3ef6c:	ldp	x25, x26, [sp, #64]
   3ef70:	ldp	x27, x28, [sp, #80]
   3ef74:	ldp	x29, x30, [sp], #192
   3ef78:	ret
   3ef7c:	mov	x0, #0x0                   	// #0
   3ef80:	ldp	x19, x20, [sp, #16]
   3ef84:	ldp	x21, x22, [sp, #32]
   3ef88:	ldp	x23, x24, [sp, #48]
   3ef8c:	ldp	x25, x26, [sp, #64]
   3ef90:	ldp	x27, x28, [sp, #80]
   3ef94:	ldp	x29, x30, [sp], #192
   3ef98:	ret
   3ef9c:	mov	x1, x20
   3efa0:	mov	x3, x19
   3efa4:	mov	x0, x20
   3efa8:	stp	x2, x7, [sp, #112]
   3efac:	str	w6, [sp, #128]
   3efb0:	str	x4, [sp, #136]
   3efb4:	bl	be60 <__gmpn_sub_n@plt>
   3efb8:	ldp	x2, x7, [sp, #112]
   3efbc:	mov	x1, x0
   3efc0:	ldr	w6, [sp, #128]
   3efc4:	ldr	x4, [sp, #136]
   3efc8:	add	x2, x2, x19, lsl #3
   3efcc:	b	3eb6c <mpfr_tmp_free@@Base+0x1b4>
   3efd0:	mov	x1, x20
   3efd4:	mov	x3, x19
   3efd8:	mov	x0, x20
   3efdc:	stp	x2, x7, [sp, #112]
   3efe0:	str	w6, [sp, #128]
   3efe4:	str	x4, [sp, #136]
   3efe8:	bl	c5a0 <__gmpn_add_n@plt>
   3efec:	ldr	w6, [sp, #128]
   3eff0:	mov	x1, x0
   3eff4:	ldp	x2, x7, [sp, #112]
   3eff8:	ldr	x4, [sp, #136]
   3effc:	b	3edbc <mpfr_tmp_free@@Base+0x404>
   3f000:	stp	x29, x30, [sp, #-256]!
   3f004:	sub	x5, x5, #0x1
   3f008:	clz	x5, x5
   3f00c:	mov	x29, sp
   3f010:	stp	x19, x20, [sp, #16]
   3f014:	mov	w19, #0x41                  	// #65
   3f018:	sub	w19, w19, w5
   3f01c:	stp	x27, x28, [sp, #80]
   3f020:	sxtw	x19, w19
   3f024:	ldr	x28, [x0]
   3f028:	stp	x23, x24, [sp, #48]
   3f02c:	mov	w24, #0x40                  	// #64
   3f030:	sub	w24, w24, w5
   3f034:	str	x4, [x29, #216]
   3f038:	add	x4, x28, x19
   3f03c:	str	w3, [x29, #212]
   3f040:	sxtw	x27, w24
   3f044:	stp	x21, x22, [sp, #32]
   3f048:	add	x4, x4, x27
   3f04c:	add	x4, x4, #0x1
   3f050:	mov	x21, x0
   3f054:	ldr	x22, [x0, #24]
   3f058:	asr	x4, x4, #6
   3f05c:	add	x4, x4, #0x1
   3f060:	stp	x2, x1, [x29, #192]
   3f064:	lsl	x3, x4, #6
   3f068:	stp	x25, x26, [sp, #64]
   3f06c:	sub	x5, x3, x19
   3f070:	sub	x0, x3, x28
   3f074:	add	x20, x5, #0x3e
   3f078:	sub	x0, x0, #0x1
   3f07c:	str	xzr, [x29, #232]
   3f080:	asr	x20, x20, #6
   3f084:	sub	sp, sp, #0x30
   3f088:	asr	x0, x0, #6
   3f08c:	add	x20, x20, #0x1
   3f090:	add	x1, x4, x20
   3f094:	str	x0, [x29, #152]
   3f098:	add	x0, x0, #0x1
   3f09c:	str	x0, [x29, #160]
   3f0a0:	add	x1, x1, x0
   3f0a4:	lsl	x1, x1, #3
   3f0a8:	cmp	x1, #0x4, lsl #12
   3f0ac:	b.hi	3f9e0 <mpfr_tmp_free@@Base+0x1028>  // b.pmore
   3f0b0:	add	x1, x1, #0xf
   3f0b4:	and	x1, x1, #0xfffffffffffffff0
   3f0b8:	sub	sp, sp, x1
   3f0bc:	add	x25, sp, #0x30
   3f0c0:	lsl	x23, x4, #3
   3f0c4:	add	x26, x25, x20, lsl #3
   3f0c8:	mov	x0, x26
   3f0cc:	mov	x2, x23
   3f0d0:	mov	w1, #0x0                   	// #0
   3f0d4:	stp	x3, x5, [x29, #168]
   3f0d8:	str	x4, [x29, #184]
   3f0dc:	bl	c110 <memset@plt>
   3f0e0:	ldp	x3, x5, [x29, #168]
   3f0e4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3f0e8:	ldr	x6, [x29, #216]
   3f0ec:	ldr	x4, [x29, #184]
   3f0f0:	add	x0, x5, x0
   3f0f4:	cmp	x0, x6
   3f0f8:	b.gt	3fa00 <mpfr_tmp_free@@Base+0x1048>
   3f0fc:	add	x1, x29, #0xf0
   3f100:	add	x2, x29, #0xf8
   3f104:	add	x0, x29, #0xd8
   3f108:	add	x7, x28, #0x3
   3f10c:	stp	x7, x2, [sp, #16]
   3f110:	mov	x2, x3
   3f114:	sub	x5, x6, x5
   3f118:	stp	x1, x0, [sp, #32]
   3f11c:	mov	x1, x4
   3f120:	mov	x7, x25
   3f124:	ldp	x4, x3, [x29, #192]
   3f128:	str	x20, [sp]
   3f12c:	str	w24, [sp, #8]
   3f130:	mov	x0, x26
   3f134:	str	x5, [x29, #240]
   3f138:	bl	3ea00 <mpfr_tmp_free@@Base+0x48>
   3f13c:	mov	x10, x0
   3f140:	cbz	x0, 3fa2c <mpfr_tmp_free@@Base+0x1074>
   3f144:	add	x23, x26, x23
   3f148:	ldr	x9, [x29, #248]
   3f14c:	ldur	x0, [x23, #-8]
   3f150:	sub	x9, x9, x28
   3f154:	lsr	x1, x0, #63
   3f158:	str	x1, [x29, #184]
   3f15c:	tbnz	x0, #63, 3f1ec <mpfr_tmp_free@@Base+0x834>
   3f160:	ldr	x3, [x29, #240]
   3f164:	mov	w18, #0x1                   	// #1
   3f168:	ldr	w0, [x29, #212]
   3f16c:	mov	w15, w18
   3f170:	mov	x5, x3
   3f174:	cmp	w0, #0x5
   3f178:	b.eq	3f208 <mpfr_tmp_free@@Base+0x850>  // b.none
   3f17c:	cmp	x9, x3
   3f180:	b.le	3fc20 <mpfr_tmp_free@@Base+0x1268>
   3f184:	sub	x6, x9, x3
   3f188:	and	x0, x6, #0x3f
   3f18c:	asr	x1, x6, #6
   3f190:	mov	w30, w0
   3f194:	lsl	x17, x1, #3
   3f198:	ldr	x2, [x26, x1, lsl #3]
   3f19c:	lsr	x4, x2, x0
   3f1a0:	and	x4, x4, #0x1
   3f1a4:	str	x4, [x29, #176]
   3f1a8:	cbz	x0, 3f3ac <mpfr_tmp_free@@Base+0x9f4>
   3f1ac:	ldr	x4, [x29, #216]
   3f1b0:	sub	w8, w0, #0x1
   3f1b4:	mov	x7, #0x8000000000000000    	// #-9223372036854775808
   3f1b8:	lsr	x14, x2, x8
   3f1bc:	cmp	x4, x7
   3f1c0:	and	x14, x14, #0x1
   3f1c4:	b.eq	3f480 <mpfr_tmp_free@@Base+0xac8>  // b.none
   3f1c8:	add	x16, x27, x4
   3f1cc:	cmp	x0, #0x1
   3f1d0:	sub	x7, x9, x16
   3f1d4:	b.eq	3fbfc <mpfr_tmp_free@@Base+0x1244>  // b.none
   3f1d8:	mov	x6, #0x1                   	// #1
   3f1dc:	sxtw	x0, w0
   3f1e0:	lsl	x6, x6, x8
   3f1e4:	sub	x6, x6, #0x1
   3f1e8:	b	3f3e4 <mpfr_tmp_free@@Base+0xa2c>
   3f1ec:	ldr	x3, [x29, #240]
   3f1f0:	mov	w18, #0x0                   	// #0
   3f1f4:	ldr	w0, [x29, #212]
   3f1f8:	mov	w15, #0xffffffff            	// #-1
   3f1fc:	mov	x5, x3
   3f200:	cmp	w0, #0x5
   3f204:	b.ne	3f17c <mpfr_tmp_free@@Base+0x7c4>  // b.any
   3f208:	cmp	x9, x3
   3f20c:	b.le	3fd68 <mpfr_tmp_free@@Base+0x13b0>
   3f210:	sub	x0, x9, x3
   3f214:	ands	x1, x0, #0x3f
   3f218:	asr	x0, x0, #6
   3f21c:	b.ne	3f468 <mpfr_tmp_free@@Base+0xab0>  // b.any
   3f220:	add	x0, x26, x0, lsl #3
   3f224:	mov	w27, #0x0                   	// #0
   3f228:	ldur	x20, [x0, #-8]
   3f22c:	lsr	x20, x20, #63
   3f230:	sub	x19, x28, #0x1
   3f234:	negs	x23, x10
   3f238:	str	w15, [x21, #8]
   3f23c:	and	x23, x23, #0x3f
   3f240:	asr	x19, x19, #6
   3f244:	and	x10, x10, #0x3f
   3f248:	add	x25, x19, #0x1
   3f24c:	csneg	x23, x10, x23, mi  // mi = first
   3f250:	cmp	x3, x9
   3f254:	lsl	w0, w25, #6
   3f258:	sub	w5, w0, w28
   3f25c:	b.ge	3fa58 <mpfr_tmp_free@@Base+0x10a0>  // b.tcont
   3f260:	subs	x9, x9, x3
   3f264:	add	x24, x9, #0x3f
   3f268:	csel	x24, x24, x9, mi  // mi = first
   3f26c:	asr	x24, x24, #6
   3f270:	cbz	x10, 3fb68 <mpfr_tmp_free@@Base+0x11b0>
   3f274:	ldr	x1, [x29, #248]
   3f278:	str	w5, [x29, #200]
   3f27c:	subs	x3, x1, x3
   3f280:	add	x1, x3, #0x3f
   3f284:	csel	x1, x1, x3, mi  // mi = first
   3f288:	asr	x1, x1, #6
   3f28c:	sub	x1, x1, x19
   3f290:	cmp	x24, x1
   3f294:	b.eq	3f8bc <mpfr_tmp_free@@Base+0xf04>  // b.none
   3f298:	add	x1, x26, x1, lsl #3
   3f29c:	mov	w3, w23
   3f2a0:	mov	x2, x25
   3f2a4:	mov	x0, x22
   3f2a8:	bl	bcc0 <__gmpn_lshift@plt>
   3f2ac:	neg	w1, w23
   3f2b0:	ldr	w5, [x29, #200]
   3f2b4:	ldr	x23, [x26, x24, lsl #3]
   3f2b8:	ldr	x0, [x22]
   3f2bc:	lsr	x23, x23, x1
   3f2c0:	orr	x23, x0, x23
   3f2c4:	str	x23, [x22]
   3f2c8:	cmp	x28, #0x1
   3f2cc:	b.eq	3fabc <mpfr_tmp_free@@Base+0x1104>  // b.none
   3f2d0:	ldr	x1, [x29, #184]
   3f2d4:	lsl	x0, x25, #3
   3f2d8:	mov	x2, #0x1                   	// #1
   3f2dc:	sub	x3, x0, #0x8
   3f2e0:	lsl	x4, x2, x5
   3f2e4:	ldr	x0, [x22]
   3f2e8:	cbz	x1, 3f698 <mpfr_tmp_free@@Base+0xce0>
   3f2ec:	neg	x1, x4
   3f2f0:	cmp	w20, #0x2
   3f2f4:	bic	x1, x1, x0
   3f2f8:	b.eq	3f8d8 <mpfr_tmp_free@@Base+0xf20>  // b.none
   3f2fc:	sub	w2, w2, w20
   3f300:	sxtw	x0, w2
   3f304:	lsl	x0, x0, x5
   3f308:	adds	x1, x0, x1
   3f30c:	str	x1, [x22]
   3f310:	b.cs	3f784 <mpfr_tmp_free@@Base+0xdcc>  // b.hs, b.nlast
   3f314:	cmp	x0, #0x0
   3f318:	ccmp	w20, #0x0, #0x0, eq  // eq = none
   3f31c:	b.lt	3f784 <mpfr_tmp_free@@Base+0xdcc>  // b.tstop
   3f320:	cmp	x25, #0x1
   3f324:	b.ne	3fc7c <mpfr_tmp_free@@Base+0x12c4>  // b.any
   3f328:	ldr	x1, [x29, #248]
   3f32c:	str	x1, [x21, #16]
   3f330:	ldr	x0, [x29, #232]
   3f334:	cbnz	x0, 3fae8 <mpfr_tmp_free@@Base+0x1130>
   3f338:	mrs	x2, tpidr_el0
   3f33c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3f340:	ldr	x3, [x0, #2512]
   3f344:	add	x0, x0, #0x9d0
   3f348:	blr	x3
   3f34c:	ldr	x0, [x2, x0]
   3f350:	cmp	x0, x1
   3f354:	b.gt	3f374 <mpfr_tmp_free@@Base+0x9bc>
   3f358:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3f35c:	ldr	x3, [x0, #2544]
   3f360:	add	x0, x0, #0x9f0
   3f364:	blr	x3
   3f368:	ldr	x0, [x2, x0]
   3f36c:	cmp	x0, x1
   3f370:	b.ge	3f670 <mpfr_tmp_free@@Base+0xcb8>  // b.tcont
   3f374:	ldr	w2, [x29, #212]
   3f378:	mov	w1, w27
   3f37c:	mov	x0, x21
   3f380:	bl	cb30 <mpfr_check_range@plt>
   3f384:	mov	w27, w0
   3f388:	mov	sp, x29
   3f38c:	mov	w0, w27
   3f390:	ldp	x19, x20, [sp, #16]
   3f394:	ldp	x21, x22, [sp, #32]
   3f398:	ldp	x23, x24, [sp, #48]
   3f39c:	ldp	x25, x26, [sp, #64]
   3f3a0:	ldp	x27, x28, [sp, #80]
   3f3a4:	ldp	x29, x30, [sp], #256
   3f3a8:	ret
   3f3ac:	add	x7, x26, x17
   3f3b0:	mov	x14, #0x8000000000000000    	// #-9223372036854775808
   3f3b4:	ldr	x4, [x29, #216]
   3f3b8:	ldur	x7, [x7, #-8]
   3f3bc:	cmp	x4, x14
   3f3c0:	lsr	x14, x7, #63
   3f3c4:	b.eq	3f480 <mpfr_tmp_free@@Base+0xac8>  // b.none
   3f3c8:	add	x16, x27, x4
   3f3cc:	mov	x2, x7
   3f3d0:	mov	x0, #0x40                  	// #64
   3f3d4:	sub	x1, x1, #0x1
   3f3d8:	sub	x7, x9, x16
   3f3dc:	mov	w30, w0
   3f3e0:	mov	x6, #0x7fffffffffffffff    	// #9223372036854775807
   3f3e4:	cmp	x0, x7
   3f3e8:	sub	x0, x7, x0
   3f3ec:	b.le	3f400 <mpfr_tmp_free@@Base+0xa48>
   3f3f0:	sub	w7, w30, w7
   3f3f4:	mov	x0, #0x0                   	// #0
   3f3f8:	lsr	x2, x2, x7
   3f3fc:	lsr	x6, x6, x7
   3f400:	ands	x2, x2, x6
   3f404:	b.ne	3f7d0 <mpfr_tmp_free@@Base+0xe18>  // b.any
   3f408:	cbnz	x14, 3faf4 <mpfr_tmp_free@@Base+0x113c>
   3f40c:	cbz	x0, 3fe40 <mpfr_tmp_free@@Base+0x1488>
   3f410:	cbz	x1, 3fe40 <mpfr_tmp_free@@Base+0x1488>
   3f414:	mov	x2, x14
   3f418:	mov	w6, #0x1                   	// #1
   3f41c:	str	w6, [x29, #168]
   3f420:	sub	x1, x1, #0x1
   3f424:	cmp	x0, #0x3f
   3f428:	ldr	x6, [x26, x1, lsl #3]
   3f42c:	b.le	3f964 <mpfr_tmp_free@@Base+0xfac>
   3f430:	cmp	x2, x6
   3f434:	b.eq	3f4d4 <mpfr_tmp_free@@Base+0xb1c>  // b.none
   3f438:	mov	w2, #0x1                   	// #1
   3f43c:	mov	w27, w2
   3f440:	ldr	w0, [x29, #212]
   3f444:	cmp	w0, #0x2
   3f448:	b.eq	3fd30 <mpfr_tmp_free@@Base+0x1378>  // b.none
   3f44c:	b.le	3fd74 <mpfr_tmp_free@@Base+0x13bc>
   3f450:	ldr	w0, [x29, #212]
   3f454:	cmp	w0, #0x3
   3f458:	b.eq	3fdf8 <mpfr_tmp_free@@Base+0x1440>  // b.none
   3f45c:	cmp	w0, #0x4
   3f460:	b.eq	3f710 <mpfr_tmp_free@@Base+0xd58>  // b.none
   3f464:	b	3fd84 <mpfr_tmp_free@@Base+0x13cc>
   3f468:	ldr	x20, [x26, x0, lsl #3]
   3f46c:	sub	w1, w1, #0x1
   3f470:	mov	w27, #0x0                   	// #0
   3f474:	lsr	x1, x20, x1
   3f478:	and	w20, w1, #0x1
   3f47c:	b	3f230 <mpfr_tmp_free@@Base+0x878>
   3f480:	cbnz	x14, 3fd9c <mpfr_tmp_free@@Base+0x13e4>
   3f484:	tst	x6, #0x3e
   3f488:	b.eq	3fb10 <mpfr_tmp_free@@Base+0x1158>  // b.none
   3f48c:	sub	w4, w0, #0x1
   3f490:	mov	x0, #0xffffffffffffffff    	// #-1
   3f494:	lsl	x0, x0, x4
   3f498:	bics	xzr, x2, x0
   3f49c:	cset	w0, ne  // ne = any
   3f4a0:	cbz	w0, 3fb14 <mpfr_tmp_free@@Base+0x115c>
   3f4a4:	ldr	w0, [x29, #212]
   3f4a8:	cmp	w0, #0x3
   3f4ac:	b.eq	3fc4c <mpfr_tmp_free@@Base+0x1294>  // b.none
   3f4b0:	b.gt	3f700 <mpfr_tmp_free@@Base+0xd48>
   3f4b4:	cmp	w0, #0x1
   3f4b8:	b.eq	3f980 <mpfr_tmp_free@@Base+0xfc8>  // b.none
   3f4bc:	cmp	w0, #0x2
   3f4c0:	mov	w27, #0x1                   	// #1
   3f4c4:	b.ne	3fd7c <mpfr_tmp_free@@Base+0x13c4>  // b.any
   3f4c8:	mov	w20, #0x1                   	// #1
   3f4cc:	mov	w27, w20
   3f4d0:	b	3f230 <mpfr_tmp_free@@Base+0x878>
   3f4d4:	subs	x0, x0, #0x40
   3f4d8:	b.eq	3f4e4 <mpfr_tmp_free@@Base+0xb2c>  // b.none
   3f4dc:	cbnz	x1, 3f420 <mpfr_tmp_free@@Base+0xa68>
   3f4e0:	cbnz	x2, 3f4a4 <mpfr_tmp_free@@Base+0xaec>
   3f4e4:	ldr	x0, [x29, #160]
   3f4e8:	cmp	x3, x16
   3f4ec:	lsl	x27, x0, #6
   3f4f0:	b.gt	3f804 <mpfr_tmp_free@@Base+0xe4c>
   3f4f4:	sub	x3, x16, x3
   3f4f8:	add	x2, x3, #0x2
   3f4fc:	ands	x4, x2, #0x3f
   3f500:	asr	x2, x2, #6
   3f504:	b.eq	3fb8c <mpfr_tmp_free@@Base+0x11d4>  // b.none
   3f508:	ldr	x0, [x29, #152]
   3f50c:	mov	w3, #0x40                  	// #64
   3f510:	sub	w3, w3, w4
   3f514:	mov	x1, x26
   3f518:	sub	x19, x0, x2
   3f51c:	add	x2, x2, #0x1
   3f520:	sxtw	x4, w3
   3f524:	str	w18, [x29, #104]
   3f528:	lsl	x6, x19, #3
   3f52c:	stp	x9, x10, [x29, #112]
   3f530:	add	x0, x23, x6
   3f534:	str	w15, [x29, #128]
   3f538:	stp	x14, x6, [x29, #136]
   3f53c:	str	x4, [x29, #152]
   3f540:	bl	bcc0 <__gmpn_lshift@plt>
   3f544:	ldp	x9, x10, [x29, #112]
   3f548:	ldp	x14, x6, [x29, #136]
   3f54c:	ldr	w18, [x29, #104]
   3f550:	ldr	w15, [x29, #128]
   3f554:	ldr	x4, [x29, #152]
   3f558:	ldr	x5, [x29, #240]
   3f55c:	add	x19, x4, x19, lsl #6
   3f560:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3f564:	add	x0, x19, x0
   3f568:	cmp	x0, x5
   3f56c:	b.gt	3fcdc <mpfr_tmp_free@@Base+0x1324>
   3f570:	sub	x5, x5, x19
   3f574:	mov	x2, x6
   3f578:	mov	w1, #0x0                   	// #0
   3f57c:	mov	x0, x23
   3f580:	str	w18, [x29, #112]
   3f584:	stp	x9, x10, [x29, #120]
   3f588:	mov	x19, #0x1                   	// #1
   3f58c:	str	w15, [x29, #136]
   3f590:	stp	x5, x14, [x29, #144]
   3f594:	bl	c110 <memset@plt>
   3f598:	mov	x7, x25
   3f59c:	ldp	x4, x3, [x29, #192]
   3f5a0:	str	x20, [sp]
   3f5a4:	ldr	x5, [x29, #144]
   3f5a8:	str	w24, [sp, #8]
   3f5ac:	ldr	x6, [x29, #216]
   3f5b0:	stp	x19, xzr, [sp, #16]
   3f5b4:	mov	x2, x27
   3f5b8:	ldr	x20, [x29, #160]
   3f5bc:	stp	xzr, xzr, [sp, #32]
   3f5c0:	mov	x0, x23
   3f5c4:	mov	x1, x20
   3f5c8:	bl	3ea00 <mpfr_tmp_free@@Base+0x48>
   3f5cc:	ldr	w18, [x29, #112]
   3f5d0:	ldr	w15, [x29, #136]
   3f5d4:	ldp	x9, x10, [x29, #120]
   3f5d8:	ldr	x14, [x29, #152]
   3f5dc:	cbz	x0, 3f828 <mpfr_tmp_free@@Base+0xe70>
   3f5e0:	add	x13, x23, x20, lsl #3
   3f5e4:	mov	w27, #0xffffffff            	// #-1
   3f5e8:	ldur	x0, [x13, #-8]
   3f5ec:	cmp	x0, #0x0
   3f5f0:	csel	w19, w27, w19, lt  // lt = tstop
   3f5f4:	ldr	w0, [x29, #212]
   3f5f8:	cmp	w0, #0x3
   3f5fc:	b.eq	3f99c <mpfr_tmp_free@@Base+0xfe4>  // b.none
   3f600:	cmp	w0, #0x1
   3f604:	cset	w0, eq  // eq = none
   3f608:	cmp	w0, #0x0
   3f60c:	ccmp	w18, #0x0, #0x4, ne  // ne = any
   3f610:	b.eq	3fd38 <mpfr_tmp_free@@Base+0x1380>  // b.none
   3f614:	ldr	w0, [x29, #168]
   3f618:	cmp	w19, #0x0
   3f61c:	csetm	w27, ne  // ne = any
   3f620:	mov	w20, w14
   3f624:	cmp	w0, #0x2
   3f628:	b.eq	3f9ac <mpfr_tmp_free@@Base+0xff4>  // b.none
   3f62c:	ldr	w0, [x29, #212]
   3f630:	cmp	w18, #0x0
   3f634:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   3f638:	b.ne	3f89c <mpfr_tmp_free@@Base+0xee4>  // b.any
   3f63c:	cmn	w19, #0x1
   3f640:	b.eq	3f9d4 <mpfr_tmp_free@@Base+0x101c>  // b.none
   3f644:	ldr	w0, [x29, #212]
   3f648:	cmp	w15, #0x0
   3f64c:	ccmp	w0, #0x1, #0x0, lt  // lt = tstop
   3f650:	b.ne	3fbe4 <mpfr_tmp_free@@Base+0x122c>  // b.any
   3f654:	cmp	w19, #0x1
   3f658:	b.eq	3f664 <mpfr_tmp_free@@Base+0xcac>  // b.none
   3f65c:	ldr	x3, [x29, #240]
   3f660:	b	3f230 <mpfr_tmp_free@@Base+0x878>
   3f664:	add	w20, w20, #0x1
   3f668:	ldr	x3, [x29, #240]
   3f66c:	b	3f230 <mpfr_tmp_free@@Base+0x878>
   3f670:	cbz	w27, 3f388 <mpfr_tmp_free@@Base+0x9d0>
   3f674:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3f678:	ldr	x1, [x0, #2576]
   3f67c:	add	x0, x0, #0xa10
   3f680:	blr	x1
   3f684:	add	x0, x2, x0
   3f688:	ldr	w1, [x0]
   3f68c:	orr	w1, w1, #0x8
   3f690:	str	w1, [x0]
   3f694:	b	3f388 <mpfr_tmp_free@@Base+0x9d0>
   3f698:	neg	x1, x4
   3f69c:	cmp	w20, #0x0
   3f6a0:	and	x0, x1, x0
   3f6a4:	str	x0, [x22]
   3f6a8:	b.le	3f730 <mpfr_tmp_free@@Base+0xd78>
   3f6ac:	sxtw	x20, w20
   3f6b0:	lsl	x26, x20, x5
   3f6b4:	cbz	x26, 3f92c <mpfr_tmp_free@@Base+0xf74>
   3f6b8:	adds	x0, x0, x26
   3f6bc:	str	x0, [x22]
   3f6c0:	b.cc	3f328 <mpfr_tmp_free@@Base+0x970>  // b.lo, b.ul, b.last
   3f6c4:	add	x19, x22, x19, lsl #3
   3f6c8:	mov	x1, x22
   3f6cc:	b	3f6e0 <mpfr_tmp_free@@Base+0xd28>
   3f6d0:	ldr	x0, [x1, #8]
   3f6d4:	add	x0, x0, #0x1
   3f6d8:	str	x0, [x1, #8]!
   3f6dc:	cbnz	x0, 3f328 <mpfr_tmp_free@@Base+0x970>
   3f6e0:	cmp	x1, x19
   3f6e4:	b.ne	3f6d0 <mpfr_tmp_free@@Base+0xd18>  // b.any
   3f6e8:	ldr	x0, [x22, x3]
   3f6ec:	orr	x0, x0, #0x8000000000000000
   3f6f0:	str	x0, [x22, x3]
   3f6f4:	ldr	x1, [x29, #248]
   3f6f8:	add	x1, x1, #0x1
   3f6fc:	b	3f32c <mpfr_tmp_free@@Base+0x974>
   3f700:	ldr	w0, [x29, #212]
   3f704:	mov	w27, #0x1                   	// #1
   3f708:	cmp	w0, #0x4
   3f70c:	b.ne	3fd84 <mpfr_tmp_free@@Base+0x13cc>  // b.any
   3f710:	ldr	w0, [x29, #184]
   3f714:	eor	w20, w0, #0x1
   3f718:	and	w20, w20, w27
   3f71c:	eor	w2, w20, #0x1
   3f720:	and	w2, w2, w27
   3f724:	cmp	w2, #0x0
   3f728:	csinv	w27, w27, wzr, eq  // eq = none
   3f72c:	b	3f230 <mpfr_tmp_free@@Base+0x878>
   3f730:	cmn	w20, #0x1
   3f734:	b.ne	3f328 <mpfr_tmp_free@@Base+0x970>  // b.any
   3f738:	subs	x1, x0, x4
   3f73c:	str	x1, [x22]
   3f740:	b.cs	3f768 <mpfr_tmp_free@@Base+0xdb0>  // b.hs, b.nlast
   3f744:	add	x19, x22, x19, lsl #3
   3f748:	mov	x0, x22
   3f74c:	b	3f760 <mpfr_tmp_free@@Base+0xda8>
   3f750:	ldr	x1, [x0, #8]
   3f754:	sub	x2, x1, #0x1
   3f758:	str	x2, [x0, #8]!
   3f75c:	cbnz	x1, 3f768 <mpfr_tmp_free@@Base+0xdb0>
   3f760:	cmp	x19, x0
   3f764:	b.ne	3f750 <mpfr_tmp_free@@Base+0xd98>  // b.any
   3f768:	ldr	x0, [x22, x3]
   3f76c:	tbnz	x0, #63, 3f328 <mpfr_tmp_free@@Base+0x970>
   3f770:	orr	x0, x0, #0x8000000000000000
   3f774:	str	x0, [x22, x3]
   3f778:	ldr	x1, [x29, #248]
   3f77c:	sub	x1, x1, #0x1
   3f780:	b	3f32c <mpfr_tmp_free@@Base+0x974>
   3f784:	cmp	x25, #0x1
   3f788:	b.eq	3f6e8 <mpfr_tmp_free@@Base+0xd30>  // b.none
   3f78c:	ldr	x0, [x22, #8]
   3f790:	sub	x2, x19, #0x1
   3f794:	add	x1, x22, #0x8
   3f798:	cbnz	x0, 3f7b0 <mpfr_tmp_free@@Base+0xdf8>
   3f79c:	nop
   3f7a0:	cbz	x2, 3f6e8 <mpfr_tmp_free@@Base+0xd30>
   3f7a4:	ldr	x0, [x1, #8]!
   3f7a8:	sub	x2, x2, #0x1
   3f7ac:	cbz	x0, 3f7a0 <mpfr_tmp_free@@Base+0xde8>
   3f7b0:	neg	x0, x0
   3f7b4:	str	x0, [x1]
   3f7b8:	cbz	x2, 3f328 <mpfr_tmp_free@@Base+0x970>
   3f7bc:	add	x1, x1, #0x8
   3f7c0:	mov	x0, x1
   3f7c4:	bl	be10 <__gmpn_com@plt>
   3f7c8:	ldr	x1, [x29, #248]
   3f7cc:	b	3f32c <mpfr_tmp_free@@Base+0x974>
   3f7d0:	cmp	x6, x2
   3f7d4:	mov	w27, #0x1                   	// #1
   3f7d8:	mov	w2, w27
   3f7dc:	b.ne	3f440 <mpfr_tmp_free@@Base+0xa88>  // b.any
   3f7e0:	cbnz	x14, 3fca8 <mpfr_tmp_free@@Base+0x12f0>
   3f7e4:	ldr	w6, [x29, #212]
   3f7e8:	cbnz	w6, 3f440 <mpfr_tmp_free@@Base+0xa88>
   3f7ec:	cbz	x0, 3fe54 <mpfr_tmp_free@@Base+0x149c>
   3f7f0:	cbz	x1, 3fb58 <mpfr_tmp_free@@Base+0x11a0>
   3f7f4:	mov	w2, #0x2                   	// #2
   3f7f8:	str	w2, [x29, #168]
   3f7fc:	mov	x2, #0xffffffffffffffff    	// #-1
   3f800:	b	3f420 <mpfr_tmp_free@@Base+0xa68>
   3f804:	sub	x19, x27, x19
   3f808:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3f80c:	add	x0, x19, x0
   3f810:	cmp	x0, x4
   3f814:	b.gt	3fdb8 <mpfr_tmp_free@@Base+0x1400>
   3f818:	ldr	x0, [x29, #160]
   3f81c:	sub	x5, x4, x19
   3f820:	lsl	x6, x0, #3
   3f824:	b	3f574 <mpfr_tmp_free@@Base+0xbbc>
   3f828:	ldr	w0, [x29, #168]
   3f82c:	cmp	w0, #0x1
   3f830:	b.eq	3fc58 <mpfr_tmp_free@@Base+0x12a0>  // b.none
   3f834:	ldr	x0, [x29, #176]
   3f838:	mov	w19, #0xffffffff            	// #-1
   3f83c:	lsr	w1, w15, #31
   3f840:	cmp	x0, #0x0
   3f844:	ldr	w0, [x29, #212]
   3f848:	cneg	w19, w19, ne  // ne = any
   3f84c:	cmp	w0, #0x4
   3f850:	mov	w0, #0x0                   	// #0
   3f854:	cset	w2, eq  // eq = none
   3f858:	ldr	w3, [x29, #212]
   3f85c:	cmp	w3, #0x2
   3f860:	b.eq	3fccc <mpfr_tmp_free@@Base+0x1314>  // b.none
   3f864:	cmp	w1, #0x0
   3f868:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   3f86c:	b.ne	3fccc <mpfr_tmp_free@@Base+0x1314>  // b.any
   3f870:	cmp	w2, #0x0
   3f874:	ccmp	w18, #0x0, #0x4, ne  // ne = any
   3f878:	b.ne	3fccc <mpfr_tmp_free@@Base+0x1314>  // b.any
   3f87c:	ldr	w0, [x29, #168]
   3f880:	mov	w20, w14
   3f884:	mov	w27, w19
   3f888:	cmp	w0, #0x1
   3f88c:	b.eq	3fe4c <mpfr_tmp_free@@Base+0x1494>  // b.none
   3f890:	ldr	w0, [x29, #168]
   3f894:	cmp	w0, #0x2
   3f898:	b.eq	3f9ac <mpfr_tmp_free@@Base+0xff4>  // b.none
   3f89c:	ldr	w0, [x29, #212]
   3f8a0:	cmp	w15, #0x0
   3f8a4:	ccmp	w0, #0x4, #0x0, lt  // lt = tstop
   3f8a8:	b.eq	3f9cc <mpfr_tmp_free@@Base+0x1014>  // b.none
   3f8ac:	ldr	w0, [x29, #212]
   3f8b0:	cmp	w0, #0x2
   3f8b4:	b.eq	3f654 <mpfr_tmp_free@@Base+0xc9c>  // b.none
   3f8b8:	b	3f644 <mpfr_tmp_free@@Base+0xc8c>
   3f8bc:	mov	w3, w23
   3f8c0:	add	x1, x26, x24, lsl #3
   3f8c4:	mov	x2, x25
   3f8c8:	mov	x0, x22
   3f8cc:	bl	bcc0 <__gmpn_lshift@plt>
   3f8d0:	ldr	w5, [x29, #200]
   3f8d4:	b	3f2c8 <mpfr_tmp_free@@Base+0x910>
   3f8d8:	sub	x4, x1, x4
   3f8dc:	str	x4, [x22]
   3f8e0:	add	x0, x22, #0x8
   3f8e4:	cbz	x1, 3f90c <mpfr_tmp_free@@Base+0xf54>
   3f8e8:	cmp	x2, x25
   3f8ec:	b.ge	3f768 <mpfr_tmp_free@@Base+0xdb0>  // b.tcont
   3f8f0:	add	x1, x22, x2, lsl #3
   3f8f4:	sub	x2, x25, x2
   3f8f8:	mov	x0, x1
   3f8fc:	bl	be10 <__gmpn_com@plt>
   3f900:	ldr	x1, [x29, #248]
   3f904:	b	3f32c <mpfr_tmp_free@@Base+0x974>
   3f908:	add	x0, x0, #0x8
   3f90c:	ldr	x1, [x0]
   3f910:	add	x2, x2, #0x1
   3f914:	cmn	x1, #0x1
   3f918:	b.eq	3f908 <mpfr_tmp_free@@Base+0xf50>  // b.none
   3f91c:	mov	x4, #0xfffffffffffffffe    	// #-2
   3f920:	sub	x1, x4, x1
   3f924:	str	x1, [x0]
   3f928:	b	3f8e8 <mpfr_tmp_free@@Base+0xf30>
   3f92c:	ldr	x0, [x22, #8]
   3f930:	add	x0, x0, #0x1
   3f934:	str	x0, [x22, #8]
   3f938:	cbnz	x0, 3f328 <mpfr_tmp_free@@Base+0x970>
   3f93c:	add	x1, x22, #0x8
   3f940:	b	3f958 <mpfr_tmp_free@@Base+0xfa0>
   3f944:	ldr	x0, [x1, x2, lsl #3]
   3f948:	add	x0, x0, #0x1
   3f94c:	str	x0, [x1, x2, lsl #3]
   3f950:	add	x2, x2, #0x1
   3f954:	cbnz	x0, 3f328 <mpfr_tmp_free@@Base+0x970>
   3f958:	cmp	x19, x2
   3f95c:	b.gt	3f944 <mpfr_tmp_free@@Base+0xf8c>
   3f960:	b	3f6e8 <mpfr_tmp_free@@Base+0xd30>
   3f964:	mov	w1, #0x40                  	// #64
   3f968:	sub	w0, w1, w0
   3f96c:	lsr	x6, x6, x0
   3f970:	lsr	x2, x2, x0
   3f974:	cmp	x6, x2
   3f978:	b.ne	3f4a4 <mpfr_tmp_free@@Base+0xaec>  // b.any
   3f97c:	b	3f4e4 <mpfr_tmp_free@@Base+0xb2c>
   3f980:	ldr	w2, [x29, #212]
   3f984:	mov	w27, w2
   3f988:	ldr	w0, [x29, #184]
   3f98c:	and	w20, w2, w0
   3f990:	eor	w2, w20, #0x1
   3f994:	and	w2, w2, w27
   3f998:	b	3f724 <mpfr_tmp_free@@Base+0xd6c>
   3f99c:	ldr	w0, [x29, #168]
   3f9a0:	mov	w20, w14
   3f9a4:	cmp	w0, #0x2
   3f9a8:	b.ne	3f9cc <mpfr_tmp_free@@Base+0x1014>  // b.any
   3f9ac:	cmp	x14, #0x0
   3f9b0:	mov	w0, #0xffffffff            	// #-1
   3f9b4:	cneg	w0, w0, eq  // eq = none
   3f9b8:	cmp	w19, w0
   3f9bc:	b.eq	3fd58 <mpfr_tmp_free@@Base+0x13a0>  // b.none
   3f9c0:	ldr	w0, [x29, #212]
   3f9c4:	cmp	w0, #0x3
   3f9c8:	b.ne	3f62c <mpfr_tmp_free@@Base+0xc74>  // b.any
   3f9cc:	cmn	w19, #0x1
   3f9d0:	b.ne	3fbe4 <mpfr_tmp_free@@Base+0x122c>  // b.any
   3f9d4:	sub	w20, w20, #0x1
   3f9d8:	ldr	x3, [x29, #240]
   3f9dc:	b	3f230 <mpfr_tmp_free@@Base+0x878>
   3f9e0:	add	x0, x29, #0xe8
   3f9e4:	stp	x3, x4, [x29, #168]
   3f9e8:	str	x5, [x29, #184]
   3f9ec:	bl	bdc0 <mpfr_tmp_allocate@plt>
   3f9f0:	mov	x25, x0
   3f9f4:	ldp	x3, x4, [x29, #168]
   3f9f8:	ldr	x5, [x29, #184]
   3f9fc:	b	3f0c0 <mpfr_tmp_free@@Base+0x708>
   3fa00:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   3fa04:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   3fa08:	add	x2, x2, #0x178
   3fa0c:	add	x0, x0, #0x140
   3fa10:	mov	w1, #0x278                 	// #632
   3fa14:	stp	x4, x5, [x29, #176]
   3fa18:	bl	cb40 <mpfr_assert_fail@plt>
   3fa1c:	ldp	x3, x4, [x29, #168]
   3fa20:	ldr	x5, [x29, #184]
   3fa24:	ldr	x6, [x29, #216]
   3fa28:	b	3f0fc <mpfr_tmp_free@@Base+0x744>
   3fa2c:	ldr	w1, [x29, #212]
   3fa30:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   3fa34:	ldr	x0, [x29, #232]
   3fa38:	cmp	w1, #0x3
   3fa3c:	mov	w1, #0xffffffff            	// #-1
   3fa40:	cneg	w1, w1, ne  // ne = any
   3fa44:	str	w1, [x21, #8]
   3fa48:	str	x2, [x21, #16]
   3fa4c:	cbnz	x0, 3fd24 <mpfr_tmp_free@@Base+0x136c>
   3fa50:	mov	w27, #0x0                   	// #0
   3fa54:	b	3f388 <mpfr_tmp_free@@Base+0x9d0>
   3fa58:	ldr	x0, [x29, #248]
   3fa5c:	sub	x3, x0, x3
   3fa60:	add	x24, x3, #0x7e
   3fa64:	adds	x0, x3, #0x3f
   3fa68:	csel	x24, x24, x0, mi  // mi = first
   3fa6c:	asr	x24, x24, #6
   3fa70:	cbz	x10, 3fe10 <mpfr_tmp_free@@Base+0x1458>
   3fa74:	sub	x0, x25, x24
   3fa78:	mov	w3, w23
   3fa7c:	mov	x1, x26
   3fa80:	mov	x2, x24
   3fa84:	add	x0, x22, x0, lsl #3
   3fa88:	str	w5, [x29, #200]
   3fa8c:	bl	bcc0 <__gmpn_lshift@plt>
   3fa90:	ldr	w5, [x29, #200]
   3fa94:	cmp	x25, x24
   3fa98:	b.le	3f2c8 <mpfr_tmp_free@@Base+0x910>
   3fa9c:	sub	x2, x25, x24
   3faa0:	mov	x0, x22
   3faa4:	mov	w1, #0x0                   	// #0
   3faa8:	str	w5, [x29, #200]
   3faac:	lsl	x2, x2, #3
   3fab0:	bl	c110 <memset@plt>
   3fab4:	ldr	w5, [x29, #200]
   3fab8:	b	3f2c8 <mpfr_tmp_free@@Base+0x910>
   3fabc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fac0:	str	x0, [x22]
   3fac4:	ldr	x3, [x29, #184]
   3fac8:	sub	w0, w28, w20
   3facc:	ldr	x2, [x29, #248]
   3fad0:	sxtw	x1, w20
   3fad4:	cmp	x3, #0x0
   3fad8:	sxtw	x0, w0
   3fadc:	csel	x1, x1, x0, eq  // eq = none
   3fae0:	add	x1, x1, x2
   3fae4:	b	3f32c <mpfr_tmp_free@@Base+0x974>
   3fae8:	bl	c410 <mpfr_tmp_free@plt>
   3faec:	ldr	x1, [x21, #16]
   3faf0:	b	3f338 <mpfr_tmp_free@@Base+0x980>
   3faf4:	ldr	w6, [x29, #212]
   3faf8:	cbnz	w6, 3f438 <mpfr_tmp_free@@Base+0xa80>
   3fafc:	cbz	x0, 3fe54 <mpfr_tmp_free@@Base+0x149c>
   3fb00:	cbz	x1, 3fe54 <mpfr_tmp_free@@Base+0x149c>
   3fb04:	mov	w6, #0x2                   	// #2
   3fb08:	str	w6, [x29, #168]
   3fb0c:	b	3f420 <mpfr_tmp_free@@Base+0xa68>
   3fb10:	cbz	x0, 3fc64 <mpfr_tmp_free@@Base+0x12ac>
   3fb14:	cmp	x1, #0x0
   3fb18:	b.le	3fe00 <mpfr_tmp_free@@Base+0x1448>
   3fb1c:	nop
   3fb20:	sub	x1, x1, #0x1
   3fb24:	ldr	x2, [x26, x1, lsl #3]
   3fb28:	cmp	x2, #0x0
   3fb2c:	cset	w0, eq  // eq = none
   3fb30:	cmp	x1, #0x0
   3fb34:	ccmp	w0, #0x0, #0x4, gt
   3fb38:	b.ne	3fb20 <mpfr_tmp_free@@Base+0x1168>  // b.any
   3fb3c:	cmp	x2, #0x0
   3fb40:	cset	w2, ne  // ne = any
   3fb44:	mov	w27, w2
   3fb48:	tst	w0, w14
   3fb4c:	b.eq	3f440 <mpfr_tmp_free@@Base+0xa88>  // b.none
   3fb50:	mov	x14, #0x0                   	// #0
   3fb54:	mov	w27, #0x1                   	// #1
   3fb58:	eor	w2, w14, #0x1
   3fb5c:	mov	w20, w14
   3fb60:	and	w2, w2, w27
   3fb64:	b	3f724 <mpfr_tmp_free@@Base+0xd6c>
   3fb68:	add	x1, x26, x24, lsl #3
   3fb6c:	cmp	x1, x22
   3fb70:	b.eq	3f2c8 <mpfr_tmp_free@@Base+0x910>  // b.none
   3fb74:	lsl	x2, x25, #3
   3fb78:	mov	x0, x22
   3fb7c:	str	w5, [x29, #200]
   3fb80:	bl	ba10 <memcpy@plt>
   3fb84:	ldr	w5, [x29, #200]
   3fb88:	b	3f2c8 <mpfr_tmp_free@@Base+0x910>
   3fb8c:	sub	x19, x0, x2
   3fb90:	cmp	x19, #0x0
   3fb94:	lsl	x6, x19, #3
   3fb98:	b.le	3f55c <mpfr_tmp_free@@Base+0xba4>
   3fb9c:	add	x0, x23, x6
   3fba0:	cmp	x0, x26
   3fba4:	b.eq	3f55c <mpfr_tmp_free@@Base+0xba4>  // b.none
   3fba8:	lsl	x2, x2, #3
   3fbac:	mov	x1, x26
   3fbb0:	str	x6, [x29, #104]
   3fbb4:	str	w18, [x29, #112]
   3fbb8:	stp	x9, x10, [x29, #120]
   3fbbc:	str	w15, [x29, #136]
   3fbc0:	stp	x4, x14, [x29, #144]
   3fbc4:	bl	ba10 <memcpy@plt>
   3fbc8:	ldr	w18, [x29, #112]
   3fbcc:	ldr	w15, [x29, #136]
   3fbd0:	ldr	x6, [x29, #104]
   3fbd4:	ldp	x9, x10, [x29, #120]
   3fbd8:	ldp	x4, x14, [x29, #144]
   3fbdc:	ldr	x5, [x29, #240]
   3fbe0:	b	3f55c <mpfr_tmp_free@@Base+0xba4>
   3fbe4:	ldr	w0, [x29, #212]
   3fbe8:	cmp	w18, #0x0
   3fbec:	ccmp	w0, #0x4, #0x0, ne  // ne = any
   3fbf0:	b.eq	3f654 <mpfr_tmp_free@@Base+0xc9c>  // b.none
   3fbf4:	ldr	x3, [x29, #240]
   3fbf8:	b	3f230 <mpfr_tmp_free@@Base+0x878>
   3fbfc:	cmp	x6, #0x3f
   3fc00:	b.le	3fc94 <mpfr_tmp_free@@Base+0x12dc>
   3fc04:	add	x17, x26, x17
   3fc08:	mov	x0, #0x41                  	// #65
   3fc0c:	sub	x1, x1, #0x1
   3fc10:	mov	w30, w0
   3fc14:	mov	x6, #0xffffffffffffffff    	// #-1
   3fc18:	ldur	x2, [x17, #-8]
   3fc1c:	b	3f3e4 <mpfr_tmp_free@@Base+0xa2c>
   3fc20:	str	xzr, [x29, #176]
   3fc24:	b.eq	3fcbc <mpfr_tmp_free@@Base+0x1304>  // b.none
   3fc28:	ldr	x4, [x29, #216]
   3fc2c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3fc30:	cmp	x4, x0
   3fc34:	cset	w2, ne  // ne = any
   3fc38:	str	w2, [x29, #168]
   3fc3c:	b.eq	3fe68 <mpfr_tmp_free@@Base+0x14b0>  // b.none
   3fc40:	add	x16, x27, x4
   3fc44:	mov	x14, #0x0                   	// #0
   3fc48:	b	3f4e4 <mpfr_tmp_free@@Base+0xb2c>
   3fc4c:	mov	w20, #0x0                   	// #0
   3fc50:	mov	w27, #0xffffffff            	// #-1
   3fc54:	b	3f230 <mpfr_tmp_free@@Base+0x878>
   3fc58:	mov	w27, #0x0                   	// #0
   3fc5c:	mov	w19, #0x0                   	// #0
   3fc60:	b	3f5f4 <mpfr_tmp_free@@Base+0xc3c>
   3fc64:	add	x17, x26, x17
   3fc68:	sub	x1, x1, #0x1
   3fc6c:	ldur	x0, [x17, #-8]
   3fc70:	tst	x0, #0x7fffffffffffffff
   3fc74:	cset	w0, ne  // ne = any
   3fc78:	b	3f4a0 <mpfr_tmp_free@@Base+0xae8>
   3fc7c:	add	x1, x22, #0x8
   3fc80:	mov	x2, x19
   3fc84:	mov	x0, x1
   3fc88:	bl	be10 <__gmpn_com@plt>
   3fc8c:	ldr	x1, [x29, #248]
   3fc90:	b	3f32c <mpfr_tmp_free@@Base+0x974>
   3fc94:	mov	x0, #0x41                  	// #65
   3fc98:	mov	x6, #0xffffffffffffffff    	// #-1
   3fc9c:	mov	w30, w0
   3fca0:	mov	x2, #0x0                   	// #0
   3fca4:	b	3f3e4 <mpfr_tmp_free@@Base+0xa2c>
   3fca8:	cbz	x0, 3fe60 <mpfr_tmp_free@@Base+0x14a8>
   3fcac:	cbz	x1, 3f4a4 <mpfr_tmp_free@@Base+0xaec>
   3fcb0:	mov	x2, #0xffffffffffffffff    	// #-1
   3fcb4:	str	w27, [x29, #168]
   3fcb8:	b	3f420 <mpfr_tmp_free@@Base+0xa68>
   3fcbc:	ldr	x0, [x26]
   3fcc0:	and	x0, x0, #0x1
   3fcc4:	str	x0, [x29, #176]
   3fcc8:	b	3fc28 <mpfr_tmp_free@@Base+0x1270>
   3fccc:	cmp	w19, #0x0
   3fcd0:	mov	w20, w14
   3fcd4:	cset	w27, ne  // ne = any
   3fcd8:	b	3f890 <mpfr_tmp_free@@Base+0xed8>
   3fcdc:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   3fce0:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   3fce4:	add	x2, x2, #0x110
   3fce8:	add	x0, x0, #0x140
   3fcec:	mov	w1, #0x3de                 	// #990
   3fcf0:	str	x6, [x29, #112]
   3fcf4:	str	w18, [x29, #120]
   3fcf8:	stp	x9, x10, [x29, #128]
   3fcfc:	str	w15, [x29, #144]
   3fd00:	str	x14, [x29, #152]
   3fd04:	bl	cb40 <mpfr_assert_fail@plt>
   3fd08:	ldr	w18, [x29, #120]
   3fd0c:	ldr	w15, [x29, #144]
   3fd10:	ldr	x6, [x29, #112]
   3fd14:	ldp	x9, x10, [x29, #128]
   3fd18:	ldr	x14, [x29, #152]
   3fd1c:	ldr	x5, [x29, #240]
   3fd20:	b	3f570 <mpfr_tmp_free@@Base+0xbb8>
   3fd24:	mov	w27, #0x0                   	// #0
   3fd28:	bl	c410 <mpfr_tmp_free@plt>
   3fd2c:	b	3f388 <mpfr_tmp_free@@Base+0x9d0>
   3fd30:	mov	w20, w27
   3fd34:	b	3f230 <mpfr_tmp_free@@Base+0x878>
   3fd38:	ldr	w1, [x29, #212]
   3fd3c:	cmp	w1, #0x4
   3fd40:	lsr	w1, w15, #31
   3fd44:	cset	w2, eq  // eq = none
   3fd48:	cmp	w2, #0x0
   3fd4c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   3fd50:	b.ne	3f614 <mpfr_tmp_free@@Base+0xc5c>  // b.any
   3fd54:	b	3f858 <mpfr_tmp_free@@Base+0xea0>
   3fd58:	mov	w0, #0x1                   	// #1
   3fd5c:	sub	w20, w0, w20
   3fd60:	ldr	x3, [x29, #240]
   3fd64:	b	3f230 <mpfr_tmp_free@@Base+0x878>
   3fd68:	mov	w20, #0x0                   	// #0
   3fd6c:	mov	w27, #0x0                   	// #0
   3fd70:	b	3f230 <mpfr_tmp_free@@Base+0x878>
   3fd74:	cmp	w0, #0x1
   3fd78:	b.eq	3f988 <mpfr_tmp_free@@Base+0xfd0>  // b.none
   3fd7c:	ldr	w0, [x29, #212]
   3fd80:	cbz	w0, 3fb58 <mpfr_tmp_free@@Base+0x11a0>
   3fd84:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   3fd88:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   3fd8c:	add	x2, x2, #0x1a8
   3fd90:	add	x0, x0, #0x140
   3fd94:	mov	w1, #0x390                 	// #912
   3fd98:	bl	cb40 <mpfr_assert_fail@plt>
   3fd9c:	ldr	w4, [x29, #212]
   3fda0:	cmp	w4, #0x0
   3fda4:	ldr	w4, [x29, #176]
   3fda8:	eor	w4, w4, #0x1
   3fdac:	csel	w4, w4, wzr, eq  // eq = none
   3fdb0:	cbnz	w4, 3f484 <mpfr_tmp_free@@Base+0xacc>
   3fdb4:	b	3f4a4 <mpfr_tmp_free@@Base+0xaec>
   3fdb8:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   3fdbc:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   3fdc0:	add	x2, x2, #0x178
   3fdc4:	add	x0, x0, #0x140
   3fdc8:	mov	w1, #0x3ec                 	// #1004
   3fdcc:	str	w18, [x29, #120]
   3fdd0:	stp	x9, x10, [x29, #128]
   3fdd4:	str	w15, [x29, #144]
   3fdd8:	str	x14, [x29, #152]
   3fddc:	bl	cb40 <mpfr_assert_fail@plt>
   3fde0:	ldr	w18, [x29, #120]
   3fde4:	ldr	w15, [x29, #144]
   3fde8:	ldp	x9, x10, [x29, #128]
   3fdec:	ldr	x14, [x29, #152]
   3fdf0:	ldr	x4, [x29, #216]
   3fdf4:	b	3f818 <mpfr_tmp_free@@Base+0xe60>
   3fdf8:	mov	w20, #0x0                   	// #0
   3fdfc:	b	3f724 <mpfr_tmp_free@@Base+0xd6c>
   3fe00:	mov	w2, #0x0                   	// #0
   3fe04:	mov	w27, #0x0                   	// #0
   3fe08:	mov	w0, #0x1                   	// #1
   3fe0c:	b	3fb48 <mpfr_tmp_free@@Base+0x1190>
   3fe10:	cmp	x3, #0x0
   3fe14:	b.le	3fa94 <mpfr_tmp_free@@Base+0x10dc>
   3fe18:	sub	x0, x25, x24
   3fe1c:	add	x0, x22, x0, lsl #3
   3fe20:	cmp	x0, x26
   3fe24:	b.eq	3fa94 <mpfr_tmp_free@@Base+0x10dc>  // b.none
   3fe28:	mov	x1, x26
   3fe2c:	lsl	x2, x24, #3
   3fe30:	str	w5, [x29, #200]
   3fe34:	bl	ba10 <memcpy@plt>
   3fe38:	ldr	w5, [x29, #200]
   3fe3c:	b	3fa94 <mpfr_tmp_free@@Base+0x10dc>
   3fe40:	mov	w0, #0x1                   	// #1
   3fe44:	str	w0, [x29, #168]
   3fe48:	b	3f4e4 <mpfr_tmp_free@@Base+0xb2c>
   3fe4c:	neg	w27, w19
   3fe50:	b	3f89c <mpfr_tmp_free@@Base+0xee4>
   3fe54:	mov	w0, #0x2                   	// #2
   3fe58:	str	w0, [x29, #168]
   3fe5c:	b	3f4e4 <mpfr_tmp_free@@Base+0xb2c>
   3fe60:	str	w27, [x29, #168]
   3fe64:	b	3f4e4 <mpfr_tmp_free@@Base+0xb2c>
   3fe68:	mov	w27, w2
   3fe6c:	mov	x14, #0x0                   	// #0
   3fe70:	b	3f440 <mpfr_tmp_free@@Base+0xa88>
   3fe74:	nop

000000000003fe78 <mpfr_sum@@Base>:
   3fe78:	cmp	x2, #0x2
   3fe7c:	mov	x11, x0
   3fe80:	mov	w10, w3
   3fe84:	b.ls	3fff4 <mpfr_sum@@Base+0x17c>  // b.plast
   3fe88:	stp	x29, x30, [sp, #-16]!
   3fe8c:	mov	x0, #0x2                   	// #2
   3fe90:	cmp	w10, #0x3
   3fe94:	mov	x29, sp
   3fe98:	mov	w12, #0x0                   	// #0
   3fe9c:	mov	w3, #0x0                   	// #0
   3fea0:	mov	x5, #0x0                   	// #0
   3fea4:	mov	x6, #0x0                   	// #0
   3fea8:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   3feac:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3feb0:	movk	x0, #0x8000, lsl #48
   3feb4:	b.eq	3ff78 <mpfr_sum@@Base+0x100>  // b.none
   3feb8:	mov	w13, #0x1                   	// #1
   3febc:	b	3fed8 <mpfr_sum@@Base+0x60>
   3fec0:	cmp	x4, x7
   3fec4:	add	x5, x5, #0x1
   3fec8:	csel	x4, x4, x7, ge  // ge = tcont
   3fecc:	add	x6, x6, #0x1
   3fed0:	cmp	x6, x2
   3fed4:	b.eq	3ff0c <mpfr_sum@@Base+0x94>  // b.none
   3fed8:	ldr	x8, [x1, x6, lsl #3]
   3fedc:	ldr	x7, [x8, #16]
   3fee0:	cmp	x7, x9
   3fee4:	b.gt	3fec0 <mpfr_sum@@Base+0x48>
   3fee8:	cmp	x7, x0
   3feec:	b.eq	3ff3c <mpfr_sum@@Base+0xc4>  // b.none
   3fef0:	cmp	x7, x9
   3fef4:	b.eq	3ff2c <mpfr_sum@@Base+0xb4>  // b.none
   3fef8:	cbnz	x5, 3fecc <mpfr_sum@@Base+0x54>
   3fefc:	ldr	w7, [x8, #8]
   3ff00:	cbnz	w12, 40088 <mpfr_sum@@Base+0x210>
   3ff04:	mov	w12, w7
   3ff08:	b	3fecc <mpfr_sum@@Base+0x54>
   3ff0c:	cbnz	w3, 40010 <mpfr_sum@@Base+0x198>
   3ff10:	cbz	x5, 40020 <mpfr_sum@@Base+0x1a8>
   3ff14:	cmp	x5, #0x2
   3ff18:	b.ls	40030 <mpfr_sum@@Base+0x1b8>  // b.plast
   3ff1c:	ldp	x29, x30, [sp], #16
   3ff20:	mov	w3, w10
   3ff24:	mov	x0, x11
   3ff28:	b	3f000 <mpfr_tmp_free@@Base+0x648>
   3ff2c:	ldr	w7, [x8, #8]
   3ff30:	cbz	w3, 3ffe0 <mpfr_sum@@Base+0x168>
   3ff34:	cmp	w3, w7
   3ff38:	b.eq	3fecc <mpfr_sum@@Base+0x54>  // b.none
   3ff3c:	mrs	x1, tpidr_el0
   3ff40:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   3ff44:	ldr	x2, [x0, #2576]
   3ff48:	add	x0, x0, #0xa10
   3ff4c:	blr	x2
   3ff50:	add	x0, x1, x0
   3ff54:	mov	x1, #0x2                   	// #2
   3ff58:	movk	x1, #0x8000, lsl #48
   3ff5c:	str	x1, [x11, #16]
   3ff60:	ldr	w1, [x0]
   3ff64:	orr	w1, w1, #0x4
   3ff68:	str	w1, [x0]
   3ff6c:	mov	w0, #0x0                   	// #0
   3ff70:	ldp	x29, x30, [sp], #16
   3ff74:	ret
   3ff78:	mov	w13, #0xffffffff            	// #-1
   3ff7c:	b	3ff98 <mpfr_sum@@Base+0x120>
   3ff80:	cmp	x4, x7
   3ff84:	add	x5, x5, #0x1
   3ff88:	csel	x4, x4, x7, ge  // ge = tcont
   3ff8c:	add	x6, x6, #0x1
   3ff90:	cmp	x2, x6
   3ff94:	b.eq	3ff0c <mpfr_sum@@Base+0x94>  // b.none
   3ff98:	ldr	x8, [x1, x6, lsl #3]
   3ff9c:	ldr	x7, [x8, #16]
   3ffa0:	cmp	x7, x9
   3ffa4:	b.gt	3ff80 <mpfr_sum@@Base+0x108>
   3ffa8:	cmp	x7, x0
   3ffac:	b.eq	3ff3c <mpfr_sum@@Base+0xc4>  // b.none
   3ffb0:	cmp	x7, x9
   3ffb4:	b.eq	3ffd0 <mpfr_sum@@Base+0x158>  // b.none
   3ffb8:	cbnz	x5, 3ff8c <mpfr_sum@@Base+0x114>
   3ffbc:	ldr	w7, [x8, #8]
   3ffc0:	cbz	w12, 400bc <mpfr_sum@@Base+0x244>
   3ffc4:	cmp	w7, w12
   3ffc8:	csel	w12, w12, w13, eq  // eq = none
   3ffcc:	b	3ff8c <mpfr_sum@@Base+0x114>
   3ffd0:	ldr	w7, [x8, #8]
   3ffd4:	cbnz	w3, 3ffe8 <mpfr_sum@@Base+0x170>
   3ffd8:	mov	w3, w7
   3ffdc:	b	3ff8c <mpfr_sum@@Base+0x114>
   3ffe0:	mov	w3, w7
   3ffe4:	b	3fecc <mpfr_sum@@Base+0x54>
   3ffe8:	cmp	w7, w3
   3ffec:	b.eq	3ff8c <mpfr_sum@@Base+0x114>  // b.none
   3fff0:	b	3ff3c <mpfr_sum@@Base+0xc4>
   3fff4:	cbz	x2, 400a4 <mpfr_sum@@Base+0x22c>
   3fff8:	cmp	x2, #0x1
   3fffc:	ldr	x4, [x1]
   40000:	b.eq	40094 <mpfr_sum@@Base+0x21c>  // b.none
   40004:	ldr	x2, [x1, #8]
   40008:	mov	x1, x4
   4000c:	b	c1a0 <mpfr_add@plt>
   40010:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   40014:	str	w3, [x11, #8]
   40018:	str	x0, [x11, #16]
   4001c:	b	3ff6c <mpfr_sum@@Base+0xf4>
   40020:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40024:	str	w12, [x11, #8]
   40028:	str	x0, [x11, #16]
   4002c:	b	3ff6c <mpfr_sum@@Base+0xf4>
   40030:	cmp	x5, #0x1
   40034:	b.eq	400c4 <mpfr_sum@@Base+0x24c>  // b.none
   40038:	mov	x6, #0xffffffffffffffff    	// #-1
   4003c:	mov	x4, #0x0                   	// #0
   40040:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   40044:	b	40058 <mpfr_sum@@Base+0x1e0>
   40048:	mov	x6, x4
   4004c:	add	x4, x4, #0x1
   40050:	cmp	x4, x2
   40054:	b.eq	40100 <mpfr_sum@@Base+0x288>  // b.none
   40058:	ldr	x5, [x1, x4, lsl #3]
   4005c:	ldr	x3, [x5, #16]
   40060:	cmp	x3, x0
   40064:	b.le	4004c <mpfr_sum@@Base+0x1d4>
   40068:	cmn	x6, #0x1
   4006c:	b.eq	40048 <mpfr_sum@@Base+0x1d0>  // b.none
   40070:	ldp	x29, x30, [sp], #16
   40074:	mov	w3, w10
   40078:	ldr	x1, [x1, x6, lsl #3]
   4007c:	mov	x2, x5
   40080:	mov	x0, x11
   40084:	b	c1a0 <mpfr_add@plt>
   40088:	cmp	w12, w7
   4008c:	csel	w12, w12, w13, eq  // eq = none
   40090:	b	3fecc <mpfr_sum@@Base+0x54>
   40094:	mov	w2, w3
   40098:	ldr	w3, [x4, #8]
   4009c:	mov	x1, x4
   400a0:	b	c6a0 <mpfr_set4@plt>
   400a4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   400a8:	mov	w1, #0x1                   	// #1
   400ac:	str	w1, [x11, #8]
   400b0:	str	x0, [x11, #16]
   400b4:	mov	w0, #0x0                   	// #0
   400b8:	ret
   400bc:	mov	w12, w7
   400c0:	b	3ff8c <mpfr_sum@@Base+0x114>
   400c4:	mov	x0, #0x0                   	// #0
   400c8:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   400cc:	ldr	x4, [x1, x0, lsl #3]
   400d0:	ldr	x3, [x4, #16]
   400d4:	cmp	x3, x5
   400d8:	b.le	400f4 <mpfr_sum@@Base+0x27c>
   400dc:	ldp	x29, x30, [sp], #16
   400e0:	mov	w2, w10
   400e4:	ldr	w3, [x4, #8]
   400e8:	mov	x0, x11
   400ec:	mov	x1, x4
   400f0:	b	c6a0 <mpfr_set4@plt>
   400f4:	add	x0, x0, #0x1
   400f8:	cmp	x2, x0
   400fc:	b.ne	400cc <mpfr_sum@@Base+0x254>  // b.any
   40100:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   40104:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   40108:	add	x2, x2, #0xa98
   4010c:	add	x0, x0, #0x140
   40110:	mov	w1, #0x564                 	// #1380
   40114:	bl	cb40 <mpfr_assert_fail@plt>

0000000000040118 <mpfr_free_cache@@Base>:
   40118:	stp	x29, x30, [sp, #-32]!
   4011c:	mov	x29, sp
   40120:	str	x19, [sp, #16]
   40124:	mrs	x19, tpidr_el0
   40128:	bl	bfb0 <mpfr_bernoulli_freecache@plt>
   4012c:	bl	c230 <mpfr_free_pool@plt>
   40130:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40134:	ldr	x1, [x0, #2624]
   40138:	add	x0, x0, #0xa40
   4013c:	blr	x1
   40140:	add	x0, x19, x0
   40144:	bl	be70 <mpfr_clear_cache@plt>
   40148:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4014c:	ldr	x1, [x0, #2560]
   40150:	add	x0, x0, #0xa00
   40154:	blr	x1
   40158:	add	x0, x19, x0
   4015c:	bl	be70 <mpfr_clear_cache@plt>
   40160:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40164:	ldr	x1, [x0, #2608]
   40168:	add	x0, x0, #0xa30
   4016c:	blr	x1
   40170:	add	x0, x19, x0
   40174:	bl	be70 <mpfr_clear_cache@plt>
   40178:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4017c:	ldr	x1, [x0, #2592]
   40180:	add	x0, x0, #0xa20
   40184:	blr	x1
   40188:	add	x0, x19, x0
   4018c:	ldr	x19, [sp, #16]
   40190:	ldp	x29, x30, [sp], #32
   40194:	b	be70 <mpfr_clear_cache@plt>

0000000000040198 <mpfr_free_cache2@@Base>:
   40198:	tbnz	w0, #0, 401a0 <mpfr_free_cache2@@Base+0x8>
   4019c:	ret
   401a0:	stp	x29, x30, [sp, #-32]!
   401a4:	mov	x29, sp
   401a8:	str	x19, [sp, #16]
   401ac:	mrs	x19, tpidr_el0
   401b0:	bl	bfb0 <mpfr_bernoulli_freecache@plt>
   401b4:	bl	c230 <mpfr_free_pool@plt>
   401b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   401bc:	ldr	x1, [x0, #2624]
   401c0:	add	x0, x0, #0xa40
   401c4:	blr	x1
   401c8:	add	x0, x19, x0
   401cc:	bl	be70 <mpfr_clear_cache@plt>
   401d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   401d4:	ldr	x1, [x0, #2560]
   401d8:	add	x0, x0, #0xa00
   401dc:	blr	x1
   401e0:	add	x0, x19, x0
   401e4:	bl	be70 <mpfr_clear_cache@plt>
   401e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   401ec:	ldr	x1, [x0, #2608]
   401f0:	add	x0, x0, #0xa30
   401f4:	blr	x1
   401f8:	add	x0, x19, x0
   401fc:	bl	be70 <mpfr_clear_cache@plt>
   40200:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40204:	ldr	x1, [x0, #2592]
   40208:	add	x0, x0, #0xa20
   4020c:	blr	x1
   40210:	add	x0, x19, x0
   40214:	ldr	x19, [sp, #16]
   40218:	ldp	x29, x30, [sp], #32
   4021c:	b	be70 <mpfr_clear_cache@plt>

0000000000040220 <mpfr_mp_memory_cleanup@@Base>:
   40220:	stp	x29, x30, [sp, #-16]!
   40224:	mov	x29, sp
   40228:	bl	bb10 <mpfr_free_cache@plt>
   4022c:	mov	w0, #0x0                   	// #0
   40230:	ldp	x29, x30, [sp], #16
   40234:	ret

0000000000040238 <mpfr_add_si@@Base>:
   40238:	tbnz	x2, #63, 40240 <mpfr_add_si@@Base+0x8>
   4023c:	b	c260 <mpfr_add_ui@plt>
   40240:	neg	x2, x2
   40244:	b	c530 <mpfr_sub_ui@plt>

0000000000040248 <mpfr_sub_si@@Base>:
   40248:	tbnz	x2, #63, 40250 <mpfr_sub_si@@Base+0x8>
   4024c:	b	c530 <mpfr_sub_ui@plt>
   40250:	neg	x2, x2
   40254:	b	c260 <mpfr_add_ui@plt>

0000000000040258 <mpfr_si_sub@@Base>:
   40258:	tbz	x1, #63, 402b4 <mpfr_si_sub@@Base+0x5c>
   4025c:	stp	x29, x30, [sp, #-32]!
   40260:	mov	x6, x2
   40264:	cmp	w3, #0x2
   40268:	mov	x29, sp
   4026c:	str	x19, [sp, #16]
   40270:	neg	x2, x1
   40274:	mov	x19, x0
   40278:	b.eq	402b8 <mpfr_si_sub@@Base+0x60>  // b.none
   4027c:	cmp	w3, #0x3
   40280:	mov	w0, #0x2                   	// #2
   40284:	csel	w5, w3, w0, ne  // ne = any
   40288:	mov	x1, x6
   4028c:	mov	w3, w5
   40290:	mov	x0, x19
   40294:	bl	c260 <mpfr_add_ui@plt>
   40298:	ldr	w1, [x19, #8]
   4029c:	neg	w0, w0
   402a0:	neg	w1, w1
   402a4:	str	w1, [x19, #8]
   402a8:	ldr	x19, [sp, #16]
   402ac:	ldp	x29, x30, [sp], #32
   402b0:	ret
   402b4:	b	ca50 <mpfr_ui_sub@plt>
   402b8:	mov	w5, #0x3                   	// #3
   402bc:	b	40288 <mpfr_si_sub@@Base+0x30>

00000000000402c0 <mpfr_mul_si@@Base>:
   402c0:	tbnz	x2, #63, 402c8 <mpfr_mul_si@@Base+0x8>
   402c4:	b	ba50 <mpfr_mul_ui@plt>
   402c8:	stp	x29, x30, [sp, #-32]!
   402cc:	mov	x6, x1
   402d0:	neg	x2, x2
   402d4:	mov	x29, sp
   402d8:	str	x19, [sp, #16]
   402dc:	cmp	w3, #0x2
   402e0:	mov	x19, x0
   402e4:	b.eq	40320 <mpfr_mul_si@@Base+0x60>  // b.none
   402e8:	cmp	w3, #0x3
   402ec:	mov	w0, #0x2                   	// #2
   402f0:	csel	w5, w3, w0, ne  // ne = any
   402f4:	mov	x1, x6
   402f8:	mov	w3, w5
   402fc:	mov	x0, x19
   40300:	bl	ba50 <mpfr_mul_ui@plt>
   40304:	ldr	w1, [x19, #8]
   40308:	neg	w0, w0
   4030c:	neg	w1, w1
   40310:	str	w1, [x19, #8]
   40314:	ldr	x19, [sp, #16]
   40318:	ldp	x29, x30, [sp], #32
   4031c:	ret
   40320:	mov	w5, #0x3                   	// #3
   40324:	b	402f4 <mpfr_mul_si@@Base+0x34>

0000000000040328 <mpfr_div_si@@Base>:
   40328:	tbnz	x2, #63, 40330 <mpfr_div_si@@Base+0x8>
   4032c:	b	cc60 <mpfr_div_ui@plt>
   40330:	stp	x29, x30, [sp, #-32]!
   40334:	mov	x6, x1
   40338:	neg	x2, x2
   4033c:	mov	x29, sp
   40340:	str	x19, [sp, #16]
   40344:	cmp	w3, #0x2
   40348:	mov	x19, x0
   4034c:	b.eq	40388 <mpfr_div_si@@Base+0x60>  // b.none
   40350:	cmp	w3, #0x3
   40354:	mov	w0, #0x2                   	// #2
   40358:	csel	w5, w3, w0, ne  // ne = any
   4035c:	mov	x1, x6
   40360:	mov	w3, w5
   40364:	mov	x0, x19
   40368:	bl	cc60 <mpfr_div_ui@plt>
   4036c:	ldr	w1, [x19, #8]
   40370:	neg	w0, w0
   40374:	neg	w1, w1
   40378:	str	w1, [x19, #8]
   4037c:	ldr	x19, [sp, #16]
   40380:	ldp	x29, x30, [sp], #32
   40384:	ret
   40388:	mov	w5, #0x3                   	// #3
   4038c:	b	4035c <mpfr_div_si@@Base+0x34>

0000000000040390 <mpfr_si_div@@Base>:
   40390:	tbz	x1, #63, 403ec <mpfr_si_div@@Base+0x5c>
   40394:	stp	x29, x30, [sp, #-32]!
   40398:	mov	x6, x2
   4039c:	neg	x1, x1
   403a0:	mov	x29, sp
   403a4:	str	x19, [sp, #16]
   403a8:	cmp	w3, #0x2
   403ac:	mov	x19, x0
   403b0:	b.eq	403f0 <mpfr_si_div@@Base+0x60>  // b.none
   403b4:	cmp	w3, #0x3
   403b8:	mov	w0, #0x2                   	// #2
   403bc:	csel	w5, w3, w0, ne  // ne = any
   403c0:	mov	w3, w5
   403c4:	mov	x2, x6
   403c8:	mov	x0, x19
   403cc:	bl	c2f0 <mpfr_ui_div@plt>
   403d0:	ldr	w1, [x19, #8]
   403d4:	neg	w0, w0
   403d8:	neg	w1, w1
   403dc:	str	w1, [x19, #8]
   403e0:	ldr	x19, [sp, #16]
   403e4:	ldp	x29, x30, [sp], #32
   403e8:	ret
   403ec:	b	c2f0 <mpfr_ui_div@plt>
   403f0:	mov	w5, #0x3                   	// #3
   403f4:	b	403c0 <mpfr_si_div@@Base+0x30>

00000000000403f8 <mpfr_cmp_ld@@Base>:
   403f8:	stp	x29, x30, [sp, #-128]!
   403fc:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   40400:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   40404:	mov	x29, sp
   40408:	stp	x19, x20, [sp, #16]
   4040c:	mrs	x19, tpidr_el0
   40410:	add	x20, sp, #0x60
   40414:	stp	x21, x22, [sp, #32]
   40418:	mov	x22, x0
   4041c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40420:	ldr	x1, [x0, #2576]
   40424:	add	x0, x0, #0xa10
   40428:	blr	x1
   4042c:	ldr	w21, [x19, x0]
   40430:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40434:	ldr	x1, [x0, #2512]
   40438:	add	x0, x0, #0x9d0
   4043c:	blr	x1
   40440:	add	x3, x19, x0
   40444:	stp	x23, x24, [sp, #48]
   40448:	str	x25, [sp, #64]
   4044c:	ldr	x25, [x19, x0]
   40450:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40454:	ldr	x1, [x0, #2544]
   40458:	add	x0, x0, #0x9f0
   4045c:	blr	x1
   40460:	mov	x1, #0x71                  	// #113
   40464:	str	x4, [x3]
   40468:	str	q0, [sp, #80]
   4046c:	ldr	x24, [x19, x0]
   40470:	str	x2, [x19, x0]
   40474:	mov	x0, x20
   40478:	bl	ca80 <mpfr_init2@plt>
   4047c:	ldr	q0, [sp, #80]
   40480:	mov	x0, x20
   40484:	mov	w1, #0x0                   	// #0
   40488:	bl	ba40 <mpfr_set_ld@plt>
   4048c:	cbnz	w0, 40518 <mpfr_cmp_ld@@Base+0x120>
   40490:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40494:	ldr	x1, [x0, #2576]
   40498:	add	x0, x0, #0xa10
   4049c:	blr	x1
   404a0:	add	x23, x19, x0
   404a4:	mov	x1, x20
   404a8:	mov	w2, #0x1                   	// #1
   404ac:	str	wzr, [x19, x0]
   404b0:	mov	x0, x22
   404b4:	bl	c9a0 <mpfr_cmp3@plt>
   404b8:	mov	w1, w0
   404bc:	ldr	w2, [x23]
   404c0:	mov	x0, x20
   404c4:	mov	w20, w1
   404c8:	orr	w21, w21, w2
   404cc:	bl	c070 <mpfr_clear@plt>
   404d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   404d4:	ldr	x1, [x0, #2512]
   404d8:	add	x0, x0, #0x9d0
   404dc:	blr	x1
   404e0:	str	x25, [x19, x0]
   404e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   404e8:	ldr	x1, [x0, #2544]
   404ec:	add	x0, x0, #0x9f0
   404f0:	blr	x1
   404f4:	str	x24, [x19, x0]
   404f8:	mov	w0, w20
   404fc:	ldp	x19, x20, [sp, #16]
   40500:	ldr	x25, [sp, #64]
   40504:	str	w21, [x23]
   40508:	ldp	x21, x22, [sp, #32]
   4050c:	ldp	x23, x24, [sp, #48]
   40510:	ldp	x29, x30, [sp], #128
   40514:	ret
   40518:	mov	x0, x20
   4051c:	mov	x1, #0x832                 	// #2098
   40520:	bl	bed0 <mpfr_set_prec@plt>
   40524:	ldr	q0, [sp, #80]
   40528:	mov	x0, x20
   4052c:	mov	w1, #0x0                   	// #0
   40530:	bl	ba40 <mpfr_set_ld@plt>
   40534:	b	40490 <mpfr_cmp_ld@@Base+0x98>

0000000000040538 <mpfr_set_si_2exp@@Base>:
   40538:	stp	x29, x30, [sp, #-96]!
   4053c:	mov	x29, sp
   40540:	stp	x19, x20, [sp, #16]
   40544:	mov	x19, x0
   40548:	cbnz	x1, 40570 <mpfr_set_si_2exp@@Base+0x38>
   4054c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40550:	mov	w2, #0x1                   	// #1
   40554:	str	w2, [x19, #8]
   40558:	mov	w1, #0x0                   	// #0
   4055c:	str	x0, [x19, #16]
   40560:	mov	w0, w1
   40564:	ldp	x19, x20, [sp, #16]
   40568:	ldp	x29, x30, [sp], #96
   4056c:	ret
   40570:	ldr	x0, [x0]
   40574:	stp	x21, x22, [sp, #32]
   40578:	mov	x22, x2
   4057c:	add	x21, x0, #0x3e
   40580:	subs	x0, x0, #0x1
   40584:	csel	x0, x21, x0, mi  // mi = first
   40588:	stp	x25, x26, [sp, #64]
   4058c:	mov	x20, x1
   40590:	asr	x21, x0, #6
   40594:	stp	x23, x24, [sp, #48]
   40598:	mov	w24, w3
   4059c:	ldr	x25, [x19, #24]
   405a0:	str	wzr, [sp, #92]
   405a4:	lsl	x2, x21, #3
   405a8:	add	x23, x25, x2
   405ac:	tbnz	x1, #63, 40674 <mpfr_set_si_2exp@@Base+0x13c>
   405b0:	clz	x0, x1
   405b4:	mov	w1, #0x0                   	// #0
   405b8:	mov	w26, w0
   405bc:	lsl	x0, x20, x0
   405c0:	str	x0, [x25, x21, lsl #3]
   405c4:	mov	x0, x25
   405c8:	bl	c110 <memset@plt>
   405cc:	mov	w1, #0x1                   	// #1
   405d0:	mov	w0, #0x40                  	// #64
   405d4:	sub	w0, w0, w26
   405d8:	ldr	x4, [x19]
   405dc:	str	w1, [x19, #8]
   405e0:	sxtw	x2, w0
   405e4:	add	x22, x2, x22
   405e8:	cmp	x2, x4
   405ec:	b.gt	406c8 <mpfr_set_si_2exp@@Base+0x190>
   405f0:	mrs	x2, tpidr_el0
   405f4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   405f8:	ldr	x1, [x0, #2512]
   405fc:	add	x0, x0, #0x9d0
   40600:	blr	x1
   40604:	str	x22, [x19, #16]
   40608:	ldr	w1, [sp, #92]
   4060c:	ldr	x0, [x2, x0]
   40610:	cmp	x0, x22
   40614:	b.gt	4069c <mpfr_set_si_2exp@@Base+0x164>
   40618:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4061c:	ldr	x3, [x0, #2544]
   40620:	add	x0, x0, #0x9f0
   40624:	blr	x3
   40628:	ldr	x0, [x2, x0]
   4062c:	cmp	x0, x22
   40630:	b.lt	4069c <mpfr_set_si_2exp@@Base+0x164>  // b.tstop
   40634:	cbz	w1, 40658 <mpfr_set_si_2exp@@Base+0x120>
   40638:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4063c:	ldr	x3, [x0, #2576]
   40640:	add	x0, x0, #0xa10
   40644:	blr	x3
   40648:	add	x0, x2, x0
   4064c:	ldr	w2, [x0]
   40650:	orr	w2, w2, #0x8
   40654:	str	w2, [x0]
   40658:	mov	w0, w1
   4065c:	ldp	x19, x20, [sp, #16]
   40660:	ldp	x21, x22, [sp, #32]
   40664:	ldp	x23, x24, [sp, #48]
   40668:	ldp	x25, x26, [sp, #64]
   4066c:	ldp	x29, x30, [sp], #96
   40670:	ret
   40674:	neg	x3, x1
   40678:	mov	x0, x25
   4067c:	clz	x4, x3
   40680:	mov	w1, #0x0                   	// #0
   40684:	mov	w26, w4
   40688:	lsl	x3, x3, x4
   4068c:	str	x3, [x25, x21, lsl #3]
   40690:	bl	c110 <memset@plt>
   40694:	mov	w1, #0xffffffff            	// #-1
   40698:	b	405d0 <mpfr_set_si_2exp@@Base+0x98>
   4069c:	mov	w2, w24
   406a0:	mov	x0, x19
   406a4:	bl	cb30 <mpfr_check_range@plt>
   406a8:	mov	w1, w0
   406ac:	mov	w0, w1
   406b0:	ldp	x19, x20, [sp, #16]
   406b4:	ldp	x21, x22, [sp, #32]
   406b8:	ldp	x23, x24, [sp, #48]
   406bc:	ldp	x25, x26, [sp, #64]
   406c0:	ldp	x29, x30, [sp], #96
   406c4:	ret
   406c8:	lsr	x3, x20, #63
   406cc:	add	x6, sp, #0x5c
   406d0:	mov	w5, w24
   406d4:	mov	x1, x23
   406d8:	mov	x0, x23
   406dc:	bl	ca20 <mpfr_round_raw@plt>
   406e0:	cbz	w0, 405f0 <mpfr_set_si_2exp@@Base+0xb8>
   406e4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   406e8:	add	x22, x22, #0x1
   406ec:	str	x0, [x25, x21, lsl #3]
   406f0:	b	405f0 <mpfr_set_si_2exp@@Base+0xb8>
   406f4:	nop

00000000000406f8 <__gmpfr_set_uj_2exp@@Base>:
   406f8:	stp	x29, x30, [sp, #-80]!
   406fc:	mov	x29, sp
   40700:	str	x19, [sp, #16]
   40704:	mov	x19, x0
   40708:	cbz	x1, 40794 <__gmpfr_set_uj_2exp@@Base+0x9c>
   4070c:	mrs	x7, tpidr_el0
   40710:	clz	x5, x1
   40714:	mov	w6, w3
   40718:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4071c:	ldr	x3, [x0, #2512]
   40720:	add	x0, x0, #0x9d0
   40724:	blr	x3
   40728:	mov	x4, #0x40                  	// #64
   4072c:	lsl	x1, x1, x5
   40730:	ldr	x8, [x7, x0]
   40734:	sub	x5, x4, x5
   40738:	add	x0, sp, #0x28
   4073c:	mov	w3, #0x1                   	// #1
   40740:	stp	x1, x4, [sp, #40]
   40744:	add	x4, x5, x2
   40748:	cmp	x4, x8
   4074c:	str	w3, [sp, #56]
   40750:	str	x0, [sp, #72]
   40754:	b.lt	407b4 <__gmpfr_set_uj_2exp@@Base+0xbc>  // b.tstop
   40758:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4075c:	ldr	x1, [x0, #2544]
   40760:	add	x0, x0, #0x9f0
   40764:	blr	x1
   40768:	ldr	x0, [x7, x0]
   4076c:	cmp	x4, x0
   40770:	b.gt	407f0 <__gmpfr_set_uj_2exp@@Base+0xf8>
   40774:	mov	w2, w6
   40778:	mov	x0, x19
   4077c:	add	x1, sp, #0x30
   40780:	str	x4, [sp, #64]
   40784:	bl	c6a0 <mpfr_set4@plt>
   40788:	ldr	x19, [sp, #16]
   4078c:	ldp	x29, x30, [sp], #80
   40790:	ret
   40794:	mov	w2, #0x1                   	// #1
   40798:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4079c:	str	w2, [x19, #8]
   407a0:	mov	w0, #0x0                   	// #0
   407a4:	str	x1, [x19, #16]
   407a8:	ldr	x19, [sp, #16]
   407ac:	ldp	x29, x30, [sp], #80
   407b0:	ret
   407b4:	cbnz	w6, 407d4 <__gmpfr_set_uj_2exp@@Base+0xdc>
   407b8:	add	x4, x4, #0x1
   407bc:	cmp	x8, x4
   407c0:	b.gt	407e8 <__gmpfr_set_uj_2exp@@Base+0xf0>
   407c4:	add	x0, sp, #0x30
   407c8:	bl	bf00 <mpfr_powerof2_raw@plt>
   407cc:	cmp	w0, #0x0
   407d0:	cset	w6, ne  // ne = any
   407d4:	mov	w1, w6
   407d8:	mov	x0, x19
   407dc:	mov	w2, #0x1                   	// #1
   407e0:	bl	c3c0 <mpfr_underflow@plt>
   407e4:	b	40788 <__gmpfr_set_uj_2exp@@Base+0x90>
   407e8:	mov	w6, w3
   407ec:	b	407d4 <__gmpfr_set_uj_2exp@@Base+0xdc>
   407f0:	mov	w2, w3
   407f4:	mov	w1, w6
   407f8:	mov	x0, x19
   407fc:	bl	bf40 <mpfr_overflow@plt>
   40800:	b	40788 <__gmpfr_set_uj_2exp@@Base+0x90>
   40804:	nop

0000000000040808 <__gmpfr_set_uj@@Base>:
   40808:	mov	w3, w2
   4080c:	mov	x2, #0x0                   	// #0
   40810:	b	c000 <__gmpfr_set_uj_2exp@plt>
   40814:	nop

0000000000040818 <__gmpfr_set_sj_2exp@@Base>:
   40818:	tbz	x1, #63, 40874 <__gmpfr_set_sj_2exp@@Base+0x5c>
   4081c:	stp	x29, x30, [sp, #-32]!
   40820:	mov	x6, x2
   40824:	neg	x1, x1
   40828:	mov	x29, sp
   4082c:	str	x19, [sp, #16]
   40830:	cmp	w3, #0x2
   40834:	mov	x19, x0
   40838:	b.eq	40878 <__gmpfr_set_sj_2exp@@Base+0x60>  // b.none
   4083c:	cmp	w3, #0x3
   40840:	mov	w0, #0x2                   	// #2
   40844:	csel	w5, w3, w0, ne  // ne = any
   40848:	mov	w3, w5
   4084c:	mov	x2, x6
   40850:	mov	x0, x19
   40854:	bl	c000 <__gmpfr_set_uj_2exp@plt>
   40858:	ldr	w1, [x19, #8]
   4085c:	neg	w0, w0
   40860:	neg	w1, w1
   40864:	str	w1, [x19, #8]
   40868:	ldr	x19, [sp, #16]
   4086c:	ldp	x29, x30, [sp], #32
   40870:	ret
   40874:	b	c000 <__gmpfr_set_uj_2exp@plt>
   40878:	mov	w5, #0x3                   	// #3
   4087c:	b	40848 <__gmpfr_set_sj_2exp@@Base+0x30>

0000000000040880 <__gmpfr_set_sj@@Base>:
   40880:	mov	w3, w2
   40884:	mov	x2, #0x0                   	// #0
   40888:	b	c920 <__gmpfr_set_sj_2exp@plt>
   4088c:	nop

0000000000040890 <__gmpfr_mpfr_get_sj@@Base>:
   40890:	stp	x29, x30, [sp, #-112]!
   40894:	mov	x29, sp
   40898:	stp	x19, x20, [sp, #16]
   4089c:	mov	x19, x0
   408a0:	mov	w20, w1
   408a4:	bl	bbc0 <mpfr_fits_intmax_p@plt>
   408a8:	cbz	w0, 40a64 <__gmpfr_mpfr_get_sj@@Base+0x1d4>
   408ac:	ldr	x1, [x19, #16]
   408b0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   408b4:	cmp	x1, x0
   408b8:	b.eq	40a50 <__gmpfr_mpfr_get_sj@@Base+0x1c0>  // b.none
   408bc:	stp	x23, x24, [sp, #48]
   408c0:	mrs	x23, tpidr_el0
   408c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   408c8:	ldr	x1, [x0, #2576]
   408cc:	add	x0, x0, #0xa10
   408d0:	blr	x1
   408d4:	str	x25, [sp, #64]
   408d8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   408dc:	ldr	w25, [x23, x0]
   408e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   408e4:	ldr	x3, [x0, #2512]
   408e8:	add	x0, x0, #0x9d0
   408ec:	blr	x3
   408f0:	add	x3, x23, x0
   408f4:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   408f8:	add	x24, sp, #0x50
   408fc:	stp	x21, x22, [sp, #32]
   40900:	mov	x1, #0x3f                  	// #63
   40904:	ldr	x22, [x23, x0]
   40908:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4090c:	ldr	x5, [x0, #2544]
   40910:	add	x0, x0, #0x9f0
   40914:	blr	x5
   40918:	str	x4, [x3]
   4091c:	ldr	x21, [x23, x0]
   40920:	str	x2, [x23, x0]
   40924:	mov	x0, x24
   40928:	bl	ca80 <mpfr_init2@plt>
   4092c:	mov	x1, x19
   40930:	mov	w2, w20
   40934:	mov	x0, x24
   40938:	bl	c300 <mpfr_rint@plt>
   4093c:	ldr	x1, [sp, #96]
   40940:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   40944:	add	x0, x1, x0
   40948:	cmp	x0, #0x1
   4094c:	b.ls	40ab0 <__gmpfr_mpfr_get_sj@@Base+0x220>  // b.plast
   40950:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40954:	ldr	x2, [x0, #2576]
   40958:	add	x0, x0, #0xa10
   4095c:	blr	x2
   40960:	ldr	w20, [x23, x0]
   40964:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40968:	cmp	x1, x0
   4096c:	orr	w20, w25, w20
   40970:	b.eq	40a48 <__gmpfr_mpfr_get_sj@@Base+0x1b8>  // b.none
   40974:	sxtw	x0, w1
   40978:	cmp	x0, #0x40
   4097c:	ldr	x2, [sp, #104]
   40980:	b.gt	40b04 <__gmpfr_mpfr_get_sj@@Base+0x274>
   40984:	ldr	w3, [sp, #88]
   40988:	b.eq	40ad0 <__gmpfr_mpfr_get_sj@@Base+0x240>  // b.none
   4098c:	ldr	x0, [sp, #80]
   40990:	cmp	w1, #0x0
   40994:	cset	w4, gt
   40998:	cmp	w3, #0x0
   4099c:	sub	x0, x0, #0x1
   409a0:	asr	x0, x0, #6
   409a4:	mvn	w3, w0
   409a8:	and	w3, w4, w3, lsr #31
   409ac:	b.le	40a28 <__gmpfr_mpfr_get_sj@@Base+0x198>
   409b0:	cbz	w3, 40a48 <__gmpfr_mpfr_get_sj@@Base+0x1b8>
   409b4:	add	x2, x2, #0x8
   409b8:	sub	w0, w0, #0x1
   409bc:	neg	w1, w1
   409c0:	ldr	x19, [x2, w0, sxtw #3]
   409c4:	lsr	x19, x19, x1
   409c8:	mov	x0, x24
   409cc:	bl	c070 <mpfr_clear@plt>
   409d0:	ldr	x25, [sp, #64]
   409d4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   409d8:	ldr	x1, [x0, #2576]
   409dc:	add	x0, x0, #0xa10
   409e0:	blr	x1
   409e4:	str	w20, [x23, x0]
   409e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   409ec:	ldr	x1, [x0, #2512]
   409f0:	add	x0, x0, #0x9d0
   409f4:	blr	x1
   409f8:	str	x22, [x23, x0]
   409fc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40a00:	ldr	x1, [x0, #2544]
   40a04:	add	x0, x0, #0x9f0
   40a08:	blr	x1
   40a0c:	str	x21, [x23, x0]
   40a10:	ldp	x21, x22, [sp, #32]
   40a14:	ldp	x23, x24, [sp, #48]
   40a18:	mov	x0, x19
   40a1c:	ldp	x19, x20, [sp, #16]
   40a20:	ldp	x29, x30, [sp], #112
   40a24:	ret
   40a28:	cbz	w3, 40a48 <__gmpfr_mpfr_get_sj@@Base+0x1b8>
   40a2c:	add	x2, x2, #0x8
   40a30:	sub	w0, w0, #0x1
   40a34:	neg	w1, w1
   40a38:	ldr	x19, [x2, w0, sxtw #3]
   40a3c:	lsr	x1, x19, x1
   40a40:	neg	x19, x1
   40a44:	b	409c8 <__gmpfr_mpfr_get_sj@@Base+0x138>
   40a48:	mov	x19, #0x0                   	// #0
   40a4c:	b	409c8 <__gmpfr_mpfr_get_sj@@Base+0x138>
   40a50:	mov	x19, #0x0                   	// #0
   40a54:	mov	x0, x19
   40a58:	ldp	x19, x20, [sp, #16]
   40a5c:	ldp	x29, x30, [sp], #112
   40a60:	ret
   40a64:	mrs	x1, tpidr_el0
   40a68:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40a6c:	ldr	x2, [x0, #2576]
   40a70:	add	x0, x0, #0xa10
   40a74:	blr	x2
   40a78:	add	x0, x1, x0
   40a7c:	mov	x2, #0x2                   	// #2
   40a80:	ldr	x3, [x19, #16]
   40a84:	movk	x2, #0x8000, lsl #48
   40a88:	ldr	w1, [x0]
   40a8c:	cmp	x3, x2
   40a90:	orr	w1, w1, #0x10
   40a94:	str	w1, [x0]
   40a98:	b.eq	40a50 <__gmpfr_mpfr_get_sj@@Base+0x1c0>  // b.none
   40a9c:	ldr	w0, [x19, #8]
   40aa0:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   40aa4:	cmp	w0, #0x0
   40aa8:	cinv	x19, x1, lt  // lt = tstop
   40aac:	b	40a18 <__gmpfr_mpfr_get_sj@@Base+0x188>
   40ab0:	mov	w1, #0x3e                  	// #62
   40ab4:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   40ab8:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   40abc:	add	x2, x2, #0x1c0
   40ac0:	add	x0, x0, #0x238
   40ac4:	bl	cb40 <mpfr_assert_fail@plt>
   40ac8:	ldr	x1, [sp, #96]
   40acc:	b	40950 <__gmpfr_mpfr_get_sj@@Base+0xc0>
   40ad0:	tbz	w3, #31, 40ae4 <__gmpfr_mpfr_get_sj@@Base+0x254>
   40ad4:	mov	x0, x24
   40ad8:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   40adc:	bl	bf00 <mpfr_powerof2_raw@plt>
   40ae0:	cbnz	w0, 409c8 <__gmpfr_mpfr_get_sj@@Base+0x138>
   40ae4:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   40ae8:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   40aec:	add	x2, x2, #0x268
   40af0:	add	x0, x0, #0x238
   40af4:	mov	w1, #0x53                  	// #83
   40af8:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   40afc:	bl	cb40 <mpfr_assert_fail@plt>
   40b00:	b	409c8 <__gmpfr_mpfr_get_sj@@Base+0x138>
   40b04:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   40b08:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   40b0c:	add	x2, x2, #0x248
   40b10:	add	x0, x0, #0x238
   40b14:	mov	w1, #0x4b                  	// #75
   40b18:	bl	cb40 <mpfr_assert_fail@plt>
   40b1c:	nop

0000000000040b20 <__gmpfr_mpfr_get_uj@@Base>:
   40b20:	stp	x29, x30, [sp, #-112]!
   40b24:	mov	x29, sp
   40b28:	stp	x19, x20, [sp, #16]
   40b2c:	mov	w19, w1
   40b30:	stp	x21, x22, [sp, #32]
   40b34:	mov	x22, x0
   40b38:	bl	c010 <mpfr_fits_uintmax_p@plt>
   40b3c:	cbz	w0, 40ce8 <__gmpfr_mpfr_get_uj@@Base+0x1c8>
   40b40:	ldr	x1, [x22, #16]
   40b44:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40b48:	cmp	x1, x0
   40b4c:	b.eq	40cc8 <__gmpfr_mpfr_get_uj@@Base+0x1a8>  // b.none
   40b50:	stp	x23, x24, [sp, #48]
   40b54:	mrs	x23, tpidr_el0
   40b58:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40b5c:	ldr	x1, [x0, #2576]
   40b60:	add	x0, x0, #0xa10
   40b64:	blr	x1
   40b68:	str	x25, [sp, #64]
   40b6c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   40b70:	ldr	w25, [x23, x0]
   40b74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40b78:	ldr	x3, [x0, #2512]
   40b7c:	add	x0, x0, #0x9d0
   40b80:	blr	x3
   40b84:	add	x3, x23, x0
   40b88:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   40b8c:	add	x24, sp, #0x50
   40b90:	mov	x1, #0x40                  	// #64
   40b94:	ldr	x20, [x23, x0]
   40b98:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40b9c:	ldr	x5, [x0, #2544]
   40ba0:	add	x0, x0, #0x9f0
   40ba4:	blr	x5
   40ba8:	str	x4, [x3]
   40bac:	ldr	x21, [x23, x0]
   40bb0:	str	x2, [x23, x0]
   40bb4:	mov	x0, x24
   40bb8:	bl	ca80 <mpfr_init2@plt>
   40bbc:	mov	x1, x22
   40bc0:	mov	w2, w19
   40bc4:	mov	x0, x24
   40bc8:	bl	c300 <mpfr_rint@plt>
   40bcc:	ldr	x1, [sp, #96]
   40bd0:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   40bd4:	add	x0, x1, x0
   40bd8:	cmp	x0, #0x1
   40bdc:	b.ls	40d34 <__gmpfr_mpfr_get_uj@@Base+0x214>  // b.plast
   40be0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40be4:	ldr	x2, [x0, #2576]
   40be8:	add	x0, x0, #0xa10
   40bec:	blr	x2
   40bf0:	ldr	w19, [x23, x0]
   40bf4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40bf8:	cmp	x1, x0
   40bfc:	orr	w19, w25, w19
   40c00:	b.eq	40ce0 <__gmpfr_mpfr_get_uj@@Base+0x1c0>  // b.none
   40c04:	ldr	w0, [sp, #88]
   40c08:	cmp	w0, #0x0
   40c0c:	b.le	40d54 <__gmpfr_mpfr_get_uj@@Base+0x234>
   40c10:	cmp	w1, #0x40
   40c14:	ldr	x4, [sp, #104]
   40c18:	b.gt	40d74 <__gmpfr_mpfr_get_uj@@Base+0x254>
   40c1c:	ldr	x0, [sp, #80]
   40c20:	mov	x22, #0x0                   	// #0
   40c24:	sub	x0, x0, #0x1
   40c28:	asr	x2, x0, #6
   40c2c:	sbfx	x0, x0, #6, #32
   40c30:	tbnz	w2, #31, 40ce0 <__gmpfr_mpfr_get_uj@@Base+0x1c0>
   40c34:	nop
   40c38:	subs	w1, w1, #0x40
   40c3c:	ldr	x2, [x4, x0, lsl #3]
   40c40:	b.ne	40cb0 <__gmpfr_mpfr_get_uj@@Base+0x190>  // b.any
   40c44:	add	x22, x22, x2
   40c48:	sub	x0, x0, #0x1
   40c4c:	tbz	w0, #31, 40c38 <__gmpfr_mpfr_get_uj@@Base+0x118>
   40c50:	mov	x0, x24
   40c54:	bl	c070 <mpfr_clear@plt>
   40c58:	ldr	x25, [sp, #64]
   40c5c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40c60:	ldr	x1, [x0, #2576]
   40c64:	add	x0, x0, #0xa10
   40c68:	blr	x1
   40c6c:	str	w19, [x23, x0]
   40c70:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40c74:	ldr	x1, [x0, #2512]
   40c78:	add	x0, x0, #0x9d0
   40c7c:	blr	x1
   40c80:	str	x20, [x23, x0]
   40c84:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40c88:	ldr	x1, [x0, #2544]
   40c8c:	add	x0, x0, #0x9f0
   40c90:	blr	x1
   40c94:	str	x21, [x23, x0]
   40c98:	ldp	x23, x24, [sp, #48]
   40c9c:	mov	x0, x22
   40ca0:	ldp	x19, x20, [sp, #16]
   40ca4:	ldp	x21, x22, [sp, #32]
   40ca8:	ldp	x29, x30, [sp], #112
   40cac:	ret
   40cb0:	neg	w3, w1
   40cb4:	sub	x0, x0, #0x1
   40cb8:	lsr	x2, x2, x3
   40cbc:	add	x22, x22, x2
   40cc0:	tbz	w0, #31, 40c38 <__gmpfr_mpfr_get_uj@@Base+0x118>
   40cc4:	b	40c50 <__gmpfr_mpfr_get_uj@@Base+0x130>
   40cc8:	mov	x22, #0x0                   	// #0
   40ccc:	mov	x0, x22
   40cd0:	ldp	x19, x20, [sp, #16]
   40cd4:	ldp	x21, x22, [sp, #32]
   40cd8:	ldp	x29, x30, [sp], #112
   40cdc:	ret
   40ce0:	mov	x22, #0x0                   	// #0
   40ce4:	b	40c50 <__gmpfr_mpfr_get_uj@@Base+0x130>
   40ce8:	mrs	x1, tpidr_el0
   40cec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40cf0:	ldr	x2, [x0, #2576]
   40cf4:	add	x0, x0, #0xa10
   40cf8:	blr	x2
   40cfc:	add	x0, x1, x0
   40d00:	mov	x2, #0x2                   	// #2
   40d04:	ldr	x3, [x22, #16]
   40d08:	movk	x2, #0x8000, lsl #48
   40d0c:	ldr	w1, [x0]
   40d10:	cmp	x3, x2
   40d14:	orr	w1, w1, #0x10
   40d18:	str	w1, [x0]
   40d1c:	b.eq	40cc8 <__gmpfr_mpfr_get_uj@@Base+0x1a8>  // b.none
   40d20:	ldrsw	x22, [x22, #8]
   40d24:	mov	x0, #0x0                   	// #0
   40d28:	cmp	x22, x0
   40d2c:	csetm	x22, ge  // ge = tcont
   40d30:	b	40c9c <__gmpfr_mpfr_get_uj@@Base+0x17c>
   40d34:	mov	w1, #0x3c                  	// #60
   40d38:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   40d3c:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   40d40:	add	x2, x2, #0x1c0
   40d44:	add	x0, x0, #0x2a0
   40d48:	bl	cb40 <mpfr_assert_fail@plt>
   40d4c:	ldr	x1, [sp, #96]
   40d50:	b	40be0 <__gmpfr_mpfr_get_uj@@Base+0xc0>
   40d54:	mov	w1, #0x47                  	// #71
   40d58:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   40d5c:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   40d60:	add	x2, x2, #0x2b0
   40d64:	add	x0, x0, #0x2a0
   40d68:	bl	cb40 <mpfr_assert_fail@plt>
   40d6c:	ldr	x1, [sp, #96]
   40d70:	b	40c10 <__gmpfr_mpfr_get_uj@@Base+0xf0>
   40d74:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   40d78:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   40d7c:	add	x2, x2, #0x2c8
   40d80:	add	x0, x0, #0x2a0
   40d84:	mov	w1, #0x4a                  	// #74
   40d88:	bl	cb40 <mpfr_assert_fail@plt>
   40d8c:	nop

0000000000040d90 <mpfr_get_z@@Base>:
   40d90:	stp	x29, x30, [sp, #-112]!
   40d94:	mov	x29, sp
   40d98:	stp	x21, x22, [sp, #32]
   40d9c:	mov	x21, x1
   40da0:	ldr	x1, [x1, #16]
   40da4:	stp	x19, x20, [sp, #16]
   40da8:	mov	x20, x0
   40dac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   40db0:	cmp	x1, x0
   40db4:	b.le	40f18 <mpfr_get_z@@Base+0x188>
   40db8:	mrs	x19, tpidr_el0
   40dbc:	stp	x25, x26, [sp, #64]
   40dc0:	mov	w25, w2
   40dc4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40dc8:	ldr	x2, [x0, #2576]
   40dcc:	add	x0, x0, #0xa10
   40dd0:	blr	x2
   40dd4:	stp	x23, x24, [sp, #48]
   40dd8:	ldr	w26, [x19, x0]
   40ddc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40de0:	ldr	x4, [x0, #2512]
   40de4:	add	x0, x0, #0x9d0
   40de8:	blr	x4
   40dec:	add	x4, x19, x0
   40df0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   40df4:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   40df8:	ldr	x24, [x19, x0]
   40dfc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40e00:	ldr	x6, [x0, #2544]
   40e04:	add	x0, x0, #0x9f0
   40e08:	blr	x6
   40e0c:	str	x5, [x4]
   40e10:	mov	x3, #0x7fffffffffffff00    	// #9223372036854775552
   40e14:	ldr	x23, [x19, x0]
   40e18:	str	x2, [x19, x0]
   40e1c:	cmp	x1, x3
   40e20:	b.ge	40fa8 <mpfr_get_z@@Base+0x218>  // b.tcont
   40e24:	cmp	x1, #0x0
   40e28:	add	x22, sp, #0x50
   40e2c:	csinc	x1, x1, xzr, gt
   40e30:	mov	x0, x22
   40e34:	bl	ca80 <mpfr_init2@plt>
   40e38:	mov	x1, x21
   40e3c:	mov	w2, w25
   40e40:	mov	x0, x22
   40e44:	bl	c300 <mpfr_rint@plt>
   40e48:	mov	w21, w0
   40e4c:	add	w0, w0, #0x1
   40e50:	tst	w0, #0xfffffffd
   40e54:	b.eq	40f48 <mpfr_get_z@@Base+0x1b8>  // b.none
   40e58:	ldr	x0, [sp, #96]
   40e5c:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   40e60:	add	x0, x0, x1
   40e64:	cmp	x0, #0x1
   40e68:	b.ls	40f64 <mpfr_get_z@@Base+0x1d4>  // b.plast
   40e6c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40e70:	ldr	x1, [x0, #2576]
   40e74:	add	x0, x0, #0xa10
   40e78:	blr	x1
   40e7c:	ldr	w25, [x19, x0]
   40e80:	mov	x1, x22
   40e84:	mov	x0, x20
   40e88:	orr	w25, w26, w25
   40e8c:	bl	cac0 <mpfr_get_z_2exp@plt>
   40e90:	mov	x2, x0
   40e94:	tbnz	x0, #63, 40f04 <mpfr_get_z@@Base+0x174>
   40e98:	mov	x1, x20
   40e9c:	mov	x0, x20
   40ea0:	bl	c200 <__gmpz_mul_2exp@plt>
   40ea4:	mov	x0, x22
   40ea8:	bl	c070 <mpfr_clear@plt>
   40eac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40eb0:	ldr	x1, [x0, #2576]
   40eb4:	add	x0, x0, #0xa10
   40eb8:	blr	x1
   40ebc:	str	w25, [x19, x0]
   40ec0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40ec4:	ldr	x1, [x0, #2512]
   40ec8:	add	x0, x0, #0x9d0
   40ecc:	blr	x1
   40ed0:	str	x24, [x19, x0]
   40ed4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40ed8:	ldr	x1, [x0, #2544]
   40edc:	add	x0, x0, #0x9f0
   40ee0:	blr	x1
   40ee4:	str	x23, [x19, x0]
   40ee8:	mov	w0, w21
   40eec:	ldp	x19, x20, [sp, #16]
   40ef0:	ldp	x21, x22, [sp, #32]
   40ef4:	ldp	x23, x24, [sp, #48]
   40ef8:	ldp	x25, x26, [sp, #64]
   40efc:	ldp	x29, x30, [sp], #112
   40f00:	ret
   40f04:	neg	x2, x0
   40f08:	mov	x1, x20
   40f0c:	mov	x0, x20
   40f10:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   40f14:	b	40ea4 <mpfr_get_z@@Base+0x114>
   40f18:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40f1c:	cmp	x1, x0
   40f20:	b.ne	40f80 <mpfr_get_z@@Base+0x1f0>  // b.any
   40f24:	mov	x0, x20
   40f28:	mov	x1, #0x0                   	// #0
   40f2c:	mov	w21, #0x0                   	// #0
   40f30:	bl	bcb0 <__gmpz_set_ui@plt>
   40f34:	mov	w0, w21
   40f38:	ldp	x19, x20, [sp, #16]
   40f3c:	ldp	x21, x22, [sp, #32]
   40f40:	ldp	x29, x30, [sp], #112
   40f44:	ret
   40f48:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   40f4c:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   40f50:	add	x2, x2, #0x338
   40f54:	add	x0, x0, #0x330
   40f58:	mov	w1, #0x35                  	// #53
   40f5c:	bl	cb40 <mpfr_assert_fail@plt>
   40f60:	b	40e58 <mpfr_get_z@@Base+0xc8>
   40f64:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   40f68:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   40f6c:	add	x2, x2, #0x350
   40f70:	add	x0, x0, #0x330
   40f74:	mov	w1, #0x37                  	// #55
   40f78:	bl	cb40 <mpfr_assert_fail@plt>
   40f7c:	b	40e6c <mpfr_get_z@@Base+0xdc>
   40f80:	mrs	x1, tpidr_el0
   40f84:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   40f88:	ldr	x2, [x0, #2576]
   40f8c:	add	x0, x0, #0xa10
   40f90:	blr	x2
   40f94:	add	x0, x1, x0
   40f98:	ldr	w1, [x0]
   40f9c:	orr	w1, w1, #0x10
   40fa0:	str	w1, [x0]
   40fa4:	b	40f24 <mpfr_get_z@@Base+0x194>
   40fa8:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   40fac:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   40fb0:	add	x2, x2, #0x2e8
   40fb4:	add	x0, x0, #0x330
   40fb8:	mov	w1, #0x31                  	// #49
   40fbc:	bl	cb40 <mpfr_assert_fail@plt>

0000000000040fc0 <mpfr_zero_p@@Base>:
   40fc0:	ldr	x0, [x0, #16]
   40fc4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   40fc8:	cmp	x0, x1
   40fcc:	cset	w0, eq  // eq = none
   40fd0:	ret
   40fd4:	nop

0000000000040fd8 <mpfr_clear_cache@@Base>:
   40fd8:	ldr	x1, [x0]
   40fdc:	cbnz	x1, 40fe4 <mpfr_clear_cache@@Base+0xc>
   40fe0:	ret
   40fe4:	stp	x29, x30, [sp, #-32]!
   40fe8:	mov	x29, sp
   40fec:	str	x19, [sp, #16]
   40ff0:	mov	x19, x0
   40ff4:	bl	c070 <mpfr_clear@plt>
   40ff8:	str	xzr, [x19]
   40ffc:	ldr	x19, [sp, #16]
   41000:	ldp	x29, x30, [sp], #32
   41004:	ret

0000000000041008 <mpfr_cache@@Base>:
   41008:	stp	x29, x30, [sp, #-96]!
   4100c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   41010:	mov	x29, sp
   41014:	stp	x21, x22, [sp, #32]
   41018:	mrs	x21, tpidr_el0
   4101c:	mov	x22, x1
   41020:	stp	x19, x20, [sp, #16]
   41024:	mov	x20, x0
   41028:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4102c:	ldr	x1, [x0, #2576]
   41030:	add	x0, x0, #0xa10
   41034:	blr	x1
   41038:	stp	x25, x26, [sp, #64]
   4103c:	mov	w19, w2
   41040:	ldr	w25, [x21, x0]
   41044:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41048:	ldr	x1, [x0, #2512]
   4104c:	add	x0, x0, #0x9d0
   41050:	blr	x1
   41054:	add	x3, x21, x0
   41058:	stp	x23, x24, [sp, #48]
   4105c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   41060:	stp	x27, x28, [sp, #80]
   41064:	ldr	x24, [x20]
   41068:	ldr	x23, [x22]
   4106c:	ldr	x26, [x21, x0]
   41070:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41074:	ldr	x5, [x0, #2544]
   41078:	add	x0, x0, #0x9f0
   4107c:	blr	x5
   41080:	str	x4, [x3]
   41084:	cmp	x24, x23
   41088:	ldr	x27, [x21, x0]
   4108c:	str	x1, [x21, x0]
   41090:	b.gt	414d0 <mpfr_cache@@Base+0x4c8>
   41094:	ldr	w24, [x22, #8]
   41098:	cmp	w24, #0x0
   4109c:	b.le	41460 <mpfr_cache@@Base+0x458>
   410a0:	ldr	x0, [x22, #16]
   410a4:	str	x0, [x20, #16]
   410a8:	ldr	x3, [x20]
   410ac:	sub	x7, x23, #0x1
   410b0:	ldr	x8, [x22, #24]
   410b4:	sub	x6, x3, #0x1
   410b8:	str	w24, [x20, #8]
   410bc:	cmp	x3, x23
   410c0:	asr	x7, x7, #6
   410c4:	asr	x6, x6, #6
   410c8:	ldr	x23, [x20, #24]
   410cc:	b.ge	41424 <mpfr_cache@@Base+0x41c>  // b.tcont
   410d0:	sub	x9, x7, x6
   410d4:	neg	w3, w3
   410d8:	ands	w3, w3, #0x3f
   410dc:	add	x2, x6, #0x1
   410e0:	add	x1, x8, x9, lsl #3
   410e4:	b.eq	41488 <mpfr_cache@@Base+0x480>  // b.none
   410e8:	ldr	x0, [x8, x9, lsl #3]
   410ec:	sub	w5, w3, #0x1
   410f0:	mov	x3, #0x1                   	// #1
   410f4:	cmp	w19, #0x0
   410f8:	lsl	x3, x3, x5
   410fc:	and	x10, x0, x3
   41100:	sub	x3, x3, #0x1
   41104:	ccmp	x10, #0x0, #0x4, ne  // ne = any
   41108:	and	x3, x3, x0
   4110c:	b.ne	41138 <mpfr_cache@@Base+0x130>  // b.any
   41110:	cmp	x9, #0x0
   41114:	mov	x4, x9
   41118:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   4111c:	b.ne	41138 <mpfr_cache@@Base+0x130>  // b.any
   41120:	mvn	x0, x9
   41124:	add	x0, x1, x0, lsl #3
   41128:	ldr	x3, [x0, x4, lsl #3]
   4112c:	subs	x4, x4, #0x1
   41130:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   41134:	b.eq	41128 <mpfr_cache@@Base+0x120>  // b.none
   41138:	mov	x28, #0x2                   	// #2
   4113c:	lsl	x28, x28, x5
   41140:	cmp	w19, #0x5
   41144:	b.eq	41360 <mpfr_cache@@Base+0x358>  // b.none
   41148:	cbnz	w19, 41218 <mpfr_cache@@Base+0x210>
   4114c:	cbnz	x10, 4140c <mpfr_cache@@Base+0x404>
   41150:	cbz	x3, 41360 <mpfr_cache@@Base+0x358>
   41154:	neg	w24, w24
   41158:	cmp	x23, x1
   4115c:	b.eq	4116c <mpfr_cache@@Base+0x164>  // b.none
   41160:	lsl	x2, x2, #3
   41164:	mov	x0, x23
   41168:	bl	ba10 <memcpy@plt>
   4116c:	ldr	x0, [x23]
   41170:	neg	x5, x28
   41174:	and	x5, x0, x5
   41178:	str	x5, [x23]
   4117c:	ldr	w0, [x22, #32]
   41180:	cbz	w0, 412d4 <mpfr_cache@@Base+0x2cc>
   41184:	cmp	w19, #0x3
   41188:	b.eq	4137c <mpfr_cache@@Base+0x374>  // b.none
   4118c:	b.gt	41368 <mpfr_cache@@Base+0x360>
   41190:	cmp	w19, #0x1
   41194:	b.eq	4137c <mpfr_cache@@Base+0x374>  // b.none
   41198:	cmp	w19, #0x2
   4119c:	b.ne	41370 <mpfr_cache@@Base+0x368>  // b.any
   411a0:	cbz	w24, 415ec <mpfr_cache@@Base+0x5e4>
   411a4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   411a8:	ldr	x1, [x0, #2576]
   411ac:	add	x0, x0, #0xa10
   411b0:	blr	x1
   411b4:	str	w25, [x21, x0]
   411b8:	ldr	x1, [x20, #16]
   411bc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   411c0:	ldr	x2, [x0, #2512]
   411c4:	add	x0, x0, #0x9d0
   411c8:	blr	x2
   411cc:	str	x26, [x21, x0]
   411d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   411d4:	ldr	x2, [x0, #2544]
   411d8:	add	x0, x0, #0x9f0
   411dc:	blr	x2
   411e0:	str	x27, [x21, x0]
   411e4:	cmp	x26, x1
   411e8:	ccmp	x27, x1, #0x1, le
   411ec:	b.ge	41324 <mpfr_cache@@Base+0x31c>  // b.tcont
   411f0:	mov	w2, w19
   411f4:	mov	w1, w24
   411f8:	mov	x0, x20
   411fc:	ldp	x19, x20, [sp, #16]
   41200:	ldp	x21, x22, [sp, #32]
   41204:	ldp	x23, x24, [sp, #48]
   41208:	ldp	x25, x26, [sp, #64]
   4120c:	ldp	x27, x28, [sp, #80]
   41210:	ldp	x29, x30, [sp], #96
   41214:	b	cb30 <mpfr_check_range@plt>
   41218:	orr	x3, x3, x10
   4121c:	cmp	w19, #0x1
   41220:	b.eq	41150 <mpfr_cache@@Base+0x148>  // b.none
   41224:	cmp	w19, #0x3
   41228:	b.eq	41150 <mpfr_cache@@Base+0x148>  // b.none
   4122c:	cbz	x3, 41360 <mpfr_cache@@Base+0x358>
   41230:	ldr	x0, [x8, x9, lsl #3]
   41234:	adds	x3, x0, x28
   41238:	str	x3, [x23]
   4123c:	cset	x0, cs  // cs = hs, nlast
   41240:	b.cs	4139c <mpfr_cache@@Base+0x394>  // b.hs, b.nlast
   41244:	cmp	x23, x1
   41248:	b.eq	412c0 <mpfr_cache@@Base+0x2b8>  // b.none
   4124c:	cmp	x2, #0x1
   41250:	b.eq	412c0 <mpfr_cache@@Base+0x2b8>  // b.none
   41254:	sub	x5, x7, x6
   41258:	mov	x3, #0x1                   	// #1
   4125c:	add	x5, x5, #0x3
   41260:	sub	x4, x3, x6
   41264:	add	x7, x4, x7
   41268:	add	x4, x23, #0x8
   4126c:	add	x5, x8, x5, lsl #3
   41270:	add	x9, x23, #0x18
   41274:	cmp	x4, x5
   41278:	add	x8, x8, x7, lsl #3
   4127c:	ccmp	x8, x9, #0x2, cc  // cc = lo, ul, last
   41280:	sub	x5, x6, #0x1
   41284:	ccmp	x5, #0x9, #0x0, cs  // cs = hs, nlast
   41288:	b.ls	41604 <mpfr_cache@@Base+0x5fc>  // b.plast
   4128c:	lsr	x2, x6, #1
   41290:	lsl	x2, x2, #4
   41294:	nop
   41298:	ldr	q0, [x8, x0]
   4129c:	str	q0, [x4, x0]
   412a0:	add	x0, x0, #0x10
   412a4:	cmp	x0, x2
   412a8:	b.ne	41298 <mpfr_cache@@Base+0x290>  // b.any
   412ac:	orr	x0, x6, #0x1
   412b0:	tbz	w6, #0, 412bc <mpfr_cache@@Base+0x2b4>
   412b4:	ldr	x1, [x1, x0, lsl #3]
   412b8:	str	x1, [x23, x0, lsl #3]
   412bc:	ldr	x3, [x23]
   412c0:	neg	x5, x28
   412c4:	ldr	w0, [x22, #32]
   412c8:	and	x3, x5, x3
   412cc:	str	x3, [x23]
   412d0:	cbnz	w0, 41184 <mpfr_cache@@Base+0x17c>
   412d4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   412d8:	ldr	x1, [x0, #2576]
   412dc:	add	x0, x0, #0xa10
   412e0:	blr	x1
   412e4:	str	w25, [x21, x0]
   412e8:	ldr	x1, [x20, #16]
   412ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   412f0:	ldr	x2, [x0, #2512]
   412f4:	add	x0, x0, #0x9d0
   412f8:	blr	x2
   412fc:	str	x26, [x21, x0]
   41300:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41304:	ldr	x2, [x0, #2544]
   41308:	add	x0, x0, #0x9f0
   4130c:	blr	x2
   41310:	str	x27, [x21, x0]
   41314:	cmp	x26, x1
   41318:	ccmp	x27, x1, #0x1, le
   4131c:	b.lt	411f0 <mpfr_cache@@Base+0x1e8>  // b.tstop
   41320:	cbz	w24, 4133c <mpfr_cache@@Base+0x334>
   41324:	orr	w25, w25, #0x8
   41328:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4132c:	ldr	x1, [x0, #2576]
   41330:	add	x0, x0, #0xa10
   41334:	blr	x1
   41338:	str	w25, [x21, x0]
   4133c:	mov	w0, w24
   41340:	ldp	x19, x20, [sp, #16]
   41344:	ldp	x21, x22, [sp, #32]
   41348:	ldp	x23, x24, [sp, #48]
   4134c:	ldp	x25, x26, [sp, #64]
   41350:	ldp	x27, x28, [sp, #80]
   41354:	ldp	x29, x30, [sp], #96
   41358:	ret
   4135c:	mov	x28, #0x1                   	// #1
   41360:	mov	w24, #0x0                   	// #0
   41364:	b	41158 <mpfr_cache@@Base+0x150>
   41368:	cmp	w19, #0x4
   4136c:	b.eq	411a0 <mpfr_cache@@Base+0x198>  // b.none
   41370:	cmp	w24, #0x0
   41374:	csel	w24, w24, w0, ne  // ne = any
   41378:	b	411a4 <mpfr_cache@@Base+0x19c>
   4137c:	cbnz	w24, 411a4 <mpfr_cache@@Base+0x19c>
   41380:	mov	w24, w0
   41384:	cmp	w0, #0x0
   41388:	b.le	411a4 <mpfr_cache@@Base+0x19c>
   4138c:	neg	w24, w0
   41390:	mov	x0, x20
   41394:	bl	bdd0 <mpfr_nextbelow@plt>
   41398:	b	411a4 <mpfr_cache@@Base+0x19c>
   4139c:	mov	x0, #0x1                   	// #1
   413a0:	b	413bc <mpfr_cache@@Base+0x3b4>
   413a4:	ldr	x4, [x1, x0, lsl #3]
   413a8:	add	x3, x0, #0x1
   413ac:	add	x4, x4, #0x1
   413b0:	str	x4, [x23, x0, lsl #3]
   413b4:	cbnz	x4, 41518 <mpfr_cache@@Base+0x510>
   413b8:	mov	x0, x3
   413bc:	cmp	x2, x0
   413c0:	b.gt	413a4 <mpfr_cache@@Base+0x39c>
   413c4:	add	x2, x23, x2, lsl #3
   413c8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   413cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   413d0:	ldr	x3, [x0, #2544]
   413d4:	add	x0, x0, #0x9f0
   413d8:	blr	x3
   413dc:	stur	x1, [x2, #-8]
   413e0:	ldr	x1, [x20, #16]
   413e4:	ldr	x2, [x21, x0]
   413e8:	add	x0, x1, #0x1
   413ec:	str	x0, [x20, #16]
   413f0:	cmp	x0, x2
   413f4:	b.le	412bc <mpfr_cache@@Base+0x2b4>
   413f8:	mov	w2, w24
   413fc:	mov	w1, w19
   41400:	mov	x0, x20
   41404:	bl	bf40 <mpfr_overflow@plt>
   41408:	b	412bc <mpfr_cache@@Base+0x2b4>
   4140c:	cbnz	x3, 41230 <mpfr_cache@@Base+0x228>
   41410:	ldr	w0, [x22, #32]
   41414:	cmp	w0, #0x0
   41418:	cbz	w0, 4163c <mpfr_cache@@Base+0x634>
   4141c:	b.ge	41154 <mpfr_cache@@Base+0x14c>  // b.tcont
   41420:	b	41230 <mpfr_cache@@Base+0x228>
   41424:	sub	x6, x6, x7
   41428:	add	x7, x7, #0x1
   4142c:	lsl	x24, x6, #3
   41430:	add	x0, x23, x24
   41434:	cmp	x0, x8
   41438:	b.eq	41448 <mpfr_cache@@Base+0x440>  // b.none
   4143c:	lsl	x2, x7, #3
   41440:	mov	x1, x8
   41444:	bl	ba10 <memcpy@plt>
   41448:	mov	x2, x24
   4144c:	mov	x0, x23
   41450:	mov	w1, #0x0                   	// #0
   41454:	mov	w24, #0x0                   	// #0
   41458:	bl	c110 <memset@plt>
   4145c:	b	4117c <mpfr_cache@@Base+0x174>
   41460:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   41464:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   41468:	add	x2, x2, #0x3c8
   4146c:	add	x0, x0, #0x3e8
   41470:	mov	w1, #0x76                  	// #118
   41474:	bl	cb40 <mpfr_assert_fail@plt>
   41478:	ldr	x0, [x22, #16]
   4147c:	ldr	w24, [x22, #8]
   41480:	str	x0, [x20, #16]
   41484:	b	410a8 <mpfr_cache@@Base+0xa0>
   41488:	ldur	x3, [x1, #-8]
   4148c:	cmp	w19, #0x0
   41490:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   41494:	and	x10, x3, #0x8000000000000000
   41498:	and	x4, x3, #0x7fffffffffffffff
   4149c:	b.lt	415c8 <mpfr_cache@@Base+0x5c0>  // b.tstop
   414a0:	cmp	x4, #0x0
   414a4:	sub	x0, x9, #0x1
   414a8:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   414ac:	b.eq	41630 <mpfr_cache@@Base+0x628>  // b.none
   414b0:	mvn	x4, x9
   414b4:	add	x4, x1, x4, lsl #3
   414b8:	ldr	x3, [x4, x0, lsl #3]
   414bc:	subs	x0, x0, #0x1
   414c0:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   414c4:	b.eq	414b8 <mpfr_cache@@Base+0x4b0>  // b.none
   414c8:	mov	x28, #0x1                   	// #1
   414cc:	b	41140 <mpfr_cache@@Base+0x138>
   414d0:	cbz	x23, 41620 <mpfr_cache@@Base+0x618>
   414d4:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   414d8:	movk	x0, #0x6667
   414dc:	smulh	x0, x23, x0
   414e0:	asr	x0, x0, #2
   414e4:	sub	x0, x0, x23, asr #63
   414e8:	add	x23, x23, x0
   414ec:	cmp	x23, x24
   414f0:	mov	x0, x22
   414f4:	csel	x23, x23, x24, ge  // ge = tcont
   414f8:	mov	x1, x23
   414fc:	bl	bed0 <mpfr_set_prec@plt>
   41500:	ldr	x2, [x22, #40]
   41504:	mov	x0, x22
   41508:	mov	w1, #0x0                   	// #0
   4150c:	blr	x2
   41510:	str	w0, [x22, #32]
   41514:	b	41094 <mpfr_cache@@Base+0x8c>
   41518:	cmp	x23, x1
   4151c:	b.eq	412bc <mpfr_cache@@Base+0x2b4>  // b.none
   41520:	cmp	x0, x6
   41524:	b.ge	412bc <mpfr_cache@@Base+0x2b4>  // b.tcont
   41528:	add	x0, x0, #0x3
   4152c:	sub	x7, x6, x3
   41530:	lsl	x0, x0, #3
   41534:	sub	x4, x0, #0x10
   41538:	add	x8, x23, x0
   4153c:	add	x5, x1, x4
   41540:	add	x0, x1, x0
   41544:	cmp	x5, x8
   41548:	add	x4, x23, x4
   4154c:	ccmp	x4, x0, #0x2, cc  // cc = lo, ul, last
   41550:	cset	w8, cs  // cs = hs, nlast
   41554:	cmp	x7, #0x9
   41558:	ccmp	x3, x6, #0x0, hi  // hi = pmore
   4155c:	cset	w0, le
   41560:	tst	w8, w0
   41564:	b.eq	415b0 <mpfr_cache@@Base+0x5a8>  // b.none
   41568:	sub	x2, x2, x3
   4156c:	cmp	x3, x6
   41570:	csinc	x6, x2, xzr, le
   41574:	mov	x0, #0x0                   	// #0
   41578:	lsr	x2, x6, #1
   4157c:	lsl	x2, x2, #4
   41580:	ldr	q0, [x5, x0]
   41584:	str	q0, [x4, x0]
   41588:	add	x0, x0, #0x10
   4158c:	cmp	x2, x0
   41590:	b.ne	41580 <mpfr_cache@@Base+0x578>  // b.any
   41594:	and	x0, x6, #0xfffffffffffffffe
   41598:	add	x3, x0, x3
   4159c:	cmp	x0, x6
   415a0:	b.eq	412bc <mpfr_cache@@Base+0x2b4>  // b.none
   415a4:	ldr	x0, [x1, x3, lsl #3]
   415a8:	str	x0, [x23, x3, lsl #3]
   415ac:	b	412bc <mpfr_cache@@Base+0x2b4>
   415b0:	ldr	x0, [x1, x3, lsl #3]
   415b4:	str	x0, [x23, x3, lsl #3]
   415b8:	cmp	x3, x6
   415bc:	add	x3, x3, #0x1
   415c0:	b.lt	415b0 <mpfr_cache@@Base+0x5a8>  // b.tstop
   415c4:	b	412bc <mpfr_cache@@Base+0x2b4>
   415c8:	cmp	w19, #0x5
   415cc:	b.eq	4135c <mpfr_cache@@Base+0x354>  // b.none
   415d0:	cmp	w19, #0x1
   415d4:	mov	x28, #0x1                   	// #1
   415d8:	b.eq	41154 <mpfr_cache@@Base+0x14c>  // b.none
   415dc:	cmp	w19, #0x3
   415e0:	b.eq	41154 <mpfr_cache@@Base+0x14c>  // b.none
   415e4:	cbnz	x3, 41230 <mpfr_cache@@Base+0x228>
   415e8:	b	41360 <mpfr_cache@@Base+0x358>
   415ec:	mov	w24, w0
   415f0:	tbz	w0, #31, 411a4 <mpfr_cache@@Base+0x19c>
   415f4:	neg	w24, w0
   415f8:	mov	x0, x20
   415fc:	bl	c120 <mpfr_nextabove@plt>
   41600:	b	411a4 <mpfr_cache@@Base+0x19c>
   41604:	mov	x0, x3
   41608:	ldr	x3, [x1, x0, lsl #3]
   4160c:	str	x3, [x23, x0, lsl #3]
   41610:	add	x0, x0, #0x1
   41614:	cmp	x2, x0
   41618:	b.ne	41608 <mpfr_cache@@Base+0x600>  // b.any
   4161c:	b	412bc <mpfr_cache@@Base+0x2b4>
   41620:	mov	x1, x24
   41624:	mov	x0, x22
   41628:	bl	ca80 <mpfr_init2@plt>
   4162c:	b	414ec <mpfr_cache@@Base+0x4e4>
   41630:	mov	x3, x4
   41634:	mov	x28, #0x1                   	// #1
   41638:	b	41140 <mpfr_cache@@Base+0x138>
   4163c:	ldr	x0, [x8, x9, lsl #3]
   41640:	tst	x28, x0
   41644:	b.ne	41234 <mpfr_cache@@Base+0x22c>  // b.any
   41648:	b	41154 <mpfr_cache@@Base+0x14c>
   4164c:	nop

0000000000041650 <mpfr_sqr@@Base>:
   41650:	stp	x29, x30, [sp, #-160]!
   41654:	mov	x29, sp
   41658:	stp	x21, x22, [sp, #32]
   4165c:	ldr	x21, [x1, #16]
   41660:	stp	x19, x20, [sp, #16]
   41664:	mov	x20, x0
   41668:	stp	x23, x24, [sp, #48]
   4166c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   41670:	cmp	x21, x0
   41674:	stp	x25, x26, [sp, #64]
   41678:	stp	x27, x28, [sp, #80]
   4167c:	b.le	41b7c <mpfr_sqr@@Base+0x52c>
   41680:	ldr	x3, [x1]
   41684:	mov	x22, x1
   41688:	ldr	x24, [x20]
   4168c:	cmp	x3, #0x40
   41690:	cset	w0, le
   41694:	mov	w23, w2
   41698:	cmp	x24, #0x3f
   4169c:	lsl	x21, x21, #1
   416a0:	ccmp	w0, #0x0, #0x4, le
   416a4:	b.ne	419ec <mpfr_sqr@@Base+0x39c>  // b.any
   416a8:	sub	x1, x24, #0x41
   416ac:	cmp	x1, #0x3e
   416b0:	b.ls	41808 <mpfr_sqr@@Base+0x1b8>  // b.plast
   416b4:	cmp	x24, #0x40
   416b8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   416bc:	b.ne	41968 <mpfr_sqr@@Base+0x318>  // b.any
   416c0:	sub	x0, x24, #0x81
   416c4:	cmp	x0, #0x3e
   416c8:	b.hi	416d8 <mpfr_sqr@@Base+0x88>  // b.pmore
   416cc:	sub	x0, x3, #0x81
   416d0:	cmp	x0, #0x3f
   416d4:	b.ls	41bac <mpfr_sqr@@Base+0x55c>  // b.plast
   416d8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   416dc:	lsl	x28, x3, #1
   416e0:	cmp	x0, x3, lsl #1
   416e4:	b.ls	42054 <mpfr_sqr@@Base+0xa04>  // b.plast
   416e8:	sub	x19, x3, #0x1
   416ec:	sub	x2, x28, #0x1
   416f0:	asr	x19, x19, #6
   416f4:	asr	x2, x2, #6
   416f8:	add	x19, x19, #0x1
   416fc:	add	x25, x2, #0x1
   41700:	cmp	x19, #0x14
   41704:	b.gt	41e20 <mpfr_sqr@@Base+0x7d0>
   41708:	mov	x0, sp
   4170c:	lsl	x27, x19, #4
   41710:	sub	x0, x0, x19, lsl #4
   41714:	mov	x2, x19
   41718:	mov	sp, x0
   4171c:	lsl	x19, x19, #1
   41720:	ldr	x1, [x22, #24]
   41724:	mov	x26, sp
   41728:	add	x27, x26, x27
   4172c:	sub	x19, x19, x25
   41730:	bl	c3b0 <__gmpn_sqr@plt>
   41734:	ldur	x0, [x27, #-8]
   41738:	add	x1, x26, x19, lsl #3
   4173c:	lsr	x19, x0, #63
   41740:	tbz	x0, #63, 41e3c <mpfr_sqr@@Base+0x7ec>
   41744:	ldr	x0, [x20, #24]
   41748:	mov	x4, x24
   4174c:	mov	x2, x28
   41750:	add	x6, x29, #0x70
   41754:	mov	w5, w23
   41758:	mov	w3, #0x0                   	// #0
   4175c:	bl	ca20 <mpfr_round_raw@plt>
   41760:	mov	w1, w0
   41764:	cbnz	w0, 41e90 <mpfr_sqr@@Base+0x840>
   41768:	mrs	x3, tpidr_el0
   4176c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41770:	ldr	x2, [x0, #2544]
   41774:	add	x0, x0, #0x9f0
   41778:	blr	x2
   4177c:	add	x1, x19, w1, sxtw
   41780:	sub	x2, x21, #0x1
   41784:	add	x1, x1, x2
   41788:	ldr	x0, [x3, x0]
   4178c:	cmp	x0, x1
   41790:	b.lt	41950 <mpfr_sqr@@Base+0x300>  // b.tstop
   41794:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41798:	ldr	x2, [x0, #2512]
   4179c:	add	x0, x0, #0x9d0
   417a0:	blr	x2
   417a4:	ldr	x0, [x3, x0]
   417a8:	cmp	x0, x1
   417ac:	b.gt	41e58 <mpfr_sqr@@Base+0x808>
   417b0:	ldr	w2, [x29, #112]
   417b4:	mov	w0, #0x1                   	// #1
   417b8:	str	w0, [x20, #8]
   417bc:	str	x1, [x20, #16]
   417c0:	cbz	w2, 417e4 <mpfr_sqr@@Base+0x194>
   417c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   417c8:	ldr	x1, [x0, #2576]
   417cc:	add	x0, x0, #0xa10
   417d0:	blr	x1
   417d4:	add	x0, x3, x0
   417d8:	ldr	w1, [x0]
   417dc:	orr	w1, w1, #0x8
   417e0:	str	w1, [x0]
   417e4:	mov	sp, x29
   417e8:	mov	w0, w2
   417ec:	ldp	x19, x20, [sp, #16]
   417f0:	ldp	x21, x22, [sp, #32]
   417f4:	ldp	x23, x24, [sp, #48]
   417f8:	ldp	x25, x26, [sp, #64]
   417fc:	ldp	x27, x28, [sp, #80]
   41800:	ldp	x29, x30, [sp], #160
   41804:	ret
   41808:	sub	x0, x3, #0x41
   4180c:	cmp	x0, #0x3f
   41810:	b.hi	416d8 <mpfr_sqr@@Base+0x88>  // b.pmore
   41814:	ldr	x1, [x22, #24]
   41818:	mov	x4, #0x80                  	// #128
   4181c:	sub	x24, x4, x24
   41820:	mov	x7, #0x1                   	// #1
   41824:	mov	x8, x7
   41828:	ldp	x4, x0, [x1]
   4182c:	umulh	x6, x0, x4
   41830:	lsl	x2, x6, #1
   41834:	lsl	x7, x7, x24
   41838:	sub	x3, x7, #0x1
   4183c:	mov	x9, x8
   41840:	ldr	x10, [x20, #24]
   41844:	mul	x1, x0, x0
   41848:	adds	x1, x1, x2
   4184c:	mov	x5, x1
   41850:	add	x1, x1, #0x2
   41854:	and	x1, x1, x3, lsr #2
   41858:	umulh	x2, x0, x0
   4185c:	add	x6, x2, x6, lsr #63
   41860:	cinc	x6, x6, cs  // cs = hs, nlast
   41864:	cmp	x1, #0x2
   41868:	b.ls	41d80 <mpfr_sqr@@Base+0x730>  // b.plast
   4186c:	tbnz	x6, #63, 41880 <mpfr_sqr@@Base+0x230>
   41870:	sub	x21, x21, #0x1
   41874:	extr	x6, x6, x5, #63
   41878:	extr	x5, x5, x9, #63
   4187c:	lsl	x9, x9, #1
   41880:	neg	x11, x7
   41884:	mrs	x1, tpidr_el0
   41888:	and	x12, x5, x11
   4188c:	stp	x12, x6, [x10]
   41890:	sub	w4, w24, #0x1
   41894:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41898:	ldr	x13, [x0, #2544]
   4189c:	add	x0, x0, #0x9f0
   418a0:	blr	x13
   418a4:	mov	x2, #0x1                   	// #1
   418a8:	ldr	x13, [x1, x0]
   418ac:	lsl	x4, x2, x4
   418b0:	eor	x3, x3, x4
   418b4:	str	w2, [x20, #8]
   418b8:	orr	x0, x8, x9
   418bc:	and	x3, x3, x5
   418c0:	orr	x3, x3, x0
   418c4:	cmp	x13, x21
   418c8:	and	x8, x4, x5
   418cc:	b.lt	41fe8 <mpfr_sqr@@Base+0x998>  // b.tstop
   418d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   418d4:	ldr	x2, [x0, #2512]
   418d8:	add	x0, x0, #0x9d0
   418dc:	blr	x2
   418e0:	ldr	x0, [x1, x0]
   418e4:	cmp	x21, x0
   418e8:	b.lt	41f4c <mpfr_sqr@@Base+0x8fc>  // b.tstop
   418ec:	str	x21, [x20, #16]
   418f0:	orr	x0, x8, x3
   418f4:	cbz	x0, 419e4 <mpfr_sqr@@Base+0x394>
   418f8:	cmp	w23, #0x5
   418fc:	b.eq	419e4 <mpfr_sqr@@Base+0x394>  // b.none
   41900:	cbz	w23, 41f24 <mpfr_sqr@@Base+0x8d4>
   41904:	and	w0, w23, #0xfffffffd
   41908:	cmp	w0, #0x1
   4190c:	b.eq	41d40 <mpfr_sqr@@Base+0x6f0>  // b.none
   41910:	ldr	x0, [x10]
   41914:	add	x7, x7, x0
   41918:	ldr	x0, [x10, #8]
   4191c:	str	x7, [x10]
   41920:	cmp	x7, #0x0
   41924:	cinc	x0, x0, eq  // eq = none
   41928:	cbnz	x0, 41fb0 <mpfr_sqr@@Base+0x960>
   4192c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41930:	ldr	x2, [x0, #2544]
   41934:	add	x0, x0, #0x9f0
   41938:	blr	x2
   4193c:	ldr	x0, [x1, x0]
   41940:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   41944:	str	x2, [x10, #8]
   41948:	cmp	x21, x0
   4194c:	b.lt	41b4c <mpfr_sqr@@Base+0x4fc>  // b.tstop
   41950:	mov	w2, #0x1                   	// #1
   41954:	mov	w1, w23
   41958:	mov	x0, x20
   4195c:	bl	bf40 <mpfr_overflow@plt>
   41960:	mov	w2, w0
   41964:	b	417e4 <mpfr_sqr@@Base+0x194>
   41968:	ldr	x0, [x22, #24]
   4196c:	ldr	x5, [x20, #24]
   41970:	ldr	x0, [x0]
   41974:	umulh	x4, x0, x0
   41978:	mul	x3, x0, x0
   4197c:	tbnz	x4, #63, 4198c <mpfr_sqr@@Base+0x33c>
   41980:	sub	x21, x21, #0x1
   41984:	extr	x4, x4, x3, #63
   41988:	lsl	x3, x3, #1
   4198c:	mrs	x1, tpidr_el0
   41990:	str	x4, [x5]
   41994:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41998:	ldr	x2, [x0, #2544]
   4199c:	add	x0, x0, #0x9f0
   419a0:	blr	x2
   419a4:	mov	w2, #0x1                   	// #1
   419a8:	str	w2, [x20, #8]
   419ac:	ldr	x0, [x1, x0]
   419b0:	cmp	x0, x21
   419b4:	b.lt	41fe8 <mpfr_sqr@@Base+0x998>  // b.tstop
   419b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   419bc:	ldr	x2, [x0, #2512]
   419c0:	add	x0, x0, #0x9d0
   419c4:	blr	x2
   419c8:	ldr	x0, [x1, x0]
   419cc:	cmp	x21, x0
   419d0:	b.lt	41ae4 <mpfr_sqr@@Base+0x494>  // b.tstop
   419d4:	str	x21, [x20, #16]
   419d8:	cmp	x3, #0x0
   419dc:	ccmp	w23, #0x5, #0x4, ne  // ne = any
   419e0:	b.ne	41b08 <mpfr_sqr@@Base+0x4b8>  // b.any
   419e4:	mov	w2, #0x0                   	// #0
   419e8:	b	417e4 <mpfr_sqr@@Base+0x194>
   419ec:	ldr	x0, [x1, #24]
   419f0:	mov	x4, #0x40                  	// #64
   419f4:	sub	x24, x4, x24
   419f8:	mov	x8, #0x1                   	// #1
   419fc:	ldr	x11, [x20, #24]
   41a00:	lsl	x8, x8, x24
   41a04:	ldr	x0, [x0]
   41a08:	sub	x5, x8, #0x1
   41a0c:	umulh	x7, x0, x0
   41a10:	mul	x3, x0, x0
   41a14:	tbnz	x7, #63, 41a24 <mpfr_sqr@@Base+0x3d4>
   41a18:	sub	x21, x21, #0x1
   41a1c:	extr	x7, x7, x3, #63
   41a20:	lsl	x3, x3, #1
   41a24:	neg	x9, x8
   41a28:	mrs	x1, tpidr_el0
   41a2c:	and	x4, x7, x9
   41a30:	str	x4, [x11]
   41a34:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41a38:	ldr	x2, [x0, #2544]
   41a3c:	add	x0, x0, #0x9f0
   41a40:	blr	x2
   41a44:	sub	w6, w24, #0x1
   41a48:	mov	x2, #0x1                   	// #1
   41a4c:	str	w2, [x20, #8]
   41a50:	ldr	x10, [x1, x0]
   41a54:	lsl	x0, x2, x6
   41a58:	eor	x5, x5, x0
   41a5c:	and	x6, x0, x7
   41a60:	and	x0, x5, x7
   41a64:	cmp	x10, x21
   41a68:	orr	x3, x0, x3
   41a6c:	b.lt	41fe8 <mpfr_sqr@@Base+0x998>  // b.tstop
   41a70:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41a74:	ldr	x2, [x0, #2512]
   41a78:	add	x0, x0, #0x9d0
   41a7c:	blr	x2
   41a80:	ldr	x0, [x1, x0]
   41a84:	cmp	x21, x0
   41a88:	b.lt	41ee8 <mpfr_sqr@@Base+0x898>  // b.tstop
   41a8c:	str	x21, [x20, #16]
   41a90:	orr	x0, x6, x3
   41a94:	cbz	x0, 419e4 <mpfr_sqr@@Base+0x394>
   41a98:	cmp	w23, #0x5
   41a9c:	b.eq	419e4 <mpfr_sqr@@Base+0x394>  // b.none
   41aa0:	cbz	w23, 41d68 <mpfr_sqr@@Base+0x718>
   41aa4:	and	w0, w23, #0xfffffffd
   41aa8:	cmp	w0, #0x1
   41aac:	b.eq	41d40 <mpfr_sqr@@Base+0x6f0>  // b.none
   41ab0:	ldr	x0, [x11]
   41ab4:	adds	x0, x8, x0
   41ab8:	b.ne	41f44 <mpfr_sqr@@Base+0x8f4>  // b.any
   41abc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   41ac0:	str	x0, [x11]
   41ac4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41ac8:	ldr	x2, [x0, #2544]
   41acc:	add	x0, x0, #0x9f0
   41ad0:	blr	x2
   41ad4:	ldr	x0, [x1, x0]
   41ad8:	cmp	x21, x0
   41adc:	b.lt	41b4c <mpfr_sqr@@Base+0x4fc>  // b.tstop
   41ae0:	b	41950 <mpfr_sqr@@Base+0x300>
   41ae4:	sub	x0, x0, #0x1
   41ae8:	cmp	x21, x0
   41aec:	ccmn	x4, #0x1, #0x0, eq  // eq = none
   41af0:	b.ne	4206c <mpfr_sqr@@Base+0xa1c>  // b.any
   41af4:	sub	w2, w23, #0x2
   41af8:	tst	w2, #0xfffffffd
   41afc:	b.ne	4206c <mpfr_sqr@@Base+0xa1c>  // b.any
   41b00:	str	x21, [x20, #16]
   41b04:	nop
   41b08:	cbnz	w23, 41d34 <mpfr_sqr@@Base+0x6e4>
   41b0c:	tbz	x3, #63, 41d40 <mpfr_sqr@@Base+0x6f0>
   41b10:	tst	x3, #0x7fffffffffffffff
   41b14:	ldr	x0, [x5]
   41b18:	b.ne	41b20 <mpfr_sqr@@Base+0x4d0>  // b.any
   41b1c:	tbz	w0, #0, 41d40 <mpfr_sqr@@Base+0x6f0>
   41b20:	adds	x0, x0, #0x1
   41b24:	b.ne	41fa8 <mpfr_sqr@@Base+0x958>  // b.any
   41b28:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   41b2c:	str	x0, [x5]
   41b30:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41b34:	ldr	x2, [x0, #2544]
   41b38:	add	x0, x0, #0x9f0
   41b3c:	blr	x2
   41b40:	ldr	x0, [x1, x0]
   41b44:	cmp	x21, x0
   41b48:	b.ge	41950 <mpfr_sqr@@Base+0x300>  // b.tcont
   41b4c:	add	x21, x21, #0x1
   41b50:	str	x21, [x20, #16]
   41b54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41b58:	ldr	x2, [x0, #2576]
   41b5c:	add	x0, x0, #0xa10
   41b60:	blr	x2
   41b64:	add	x0, x1, x0
   41b68:	mov	w2, #0x1                   	// #1
   41b6c:	ldr	w3, [x0]
   41b70:	orr	w3, w3, #0x8
   41b74:	str	w3, [x0]
   41b78:	b	417e4 <mpfr_sqr@@Base+0x194>
   41b7c:	mov	x1, #0x2                   	// #2
   41b80:	movk	x1, #0x8000, lsl #48
   41b84:	cmp	x21, x1
   41b88:	b.eq	41eb8 <mpfr_sqr@@Base+0x868>  // b.none
   41b8c:	mov	w1, #0x1                   	// #1
   41b90:	str	w1, [x20, #8]
   41b94:	cmp	x21, x0
   41b98:	b.eq	41eac <mpfr_sqr@@Base+0x85c>  // b.none
   41b9c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   41ba0:	mov	w2, #0x0                   	// #0
   41ba4:	str	x0, [x20, #16]
   41ba8:	b	417e4 <mpfr_sqr@@Base+0x194>
   41bac:	ldr	x1, [x22, #24]
   41bb0:	mov	x4, #0xc0                  	// #192
   41bb4:	sub	x24, x4, x24
   41bb8:	mov	x22, #0x1                   	// #1
   41bbc:	mov	x7, x22
   41bc0:	ldp	x3, x0, [x1]
   41bc4:	umulh	x4, x0, x0
   41bc8:	ldr	x2, [x1, #16]
   41bcc:	umulh	x5, x2, x0
   41bd0:	umulh	x3, x2, x3
   41bd4:	lsl	x22, x22, x24
   41bd8:	sub	x19, x22, #0x1
   41bdc:	mul	x0, x2, x0
   41be0:	mov	x9, x7
   41be4:	mul	x8, x2, x2
   41be8:	adds	x0, x0, x3
   41bec:	cinc	x5, x5, cs  // cs = hs, nlast
   41bf0:	lsl	x6, x0, #1
   41bf4:	extr	x3, x5, x0, #63
   41bf8:	adds	x3, x3, x8
   41bfc:	cset	x8, cs  // cs = hs, nlast
   41c00:	adds	x6, x6, x4
   41c04:	cinc	x3, x3, cs  // cs = hs, nlast
   41c08:	cset	w0, cs  // cs = hs, nlast
   41c0c:	cmp	x3, #0x0
   41c10:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   41c14:	add	x0, x6, #0x4
   41c18:	cinc	x8, x8, ne  // ne = any
   41c1c:	and	x0, x0, x19, lsr #2
   41c20:	umulh	x2, x2, x2
   41c24:	add	x2, x2, x5, lsr #63
   41c28:	cmp	x0, #0x4
   41c2c:	add	x2, x8, x2
   41c30:	ldr	x25, [x20, #24]
   41c34:	b.ls	41dbc <mpfr_sqr@@Base+0x76c>  // b.plast
   41c38:	tbnz	x2, #63, 41c50 <mpfr_sqr@@Base+0x600>
   41c3c:	sub	x21, x21, #0x1
   41c40:	extr	x2, x2, x3, #63
   41c44:	extr	x3, x3, x6, #63
   41c48:	extr	x6, x6, x9, #63
   41c4c:	lsl	x9, x9, #1
   41c50:	neg	x12, x22
   41c54:	mrs	x1, tpidr_el0
   41c58:	and	x10, x6, x12
   41c5c:	stp	x10, x3, [x25]
   41c60:	sub	w5, w24, #0x1
   41c64:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41c68:	ldr	x4, [x0, #2544]
   41c6c:	add	x0, x0, #0x9f0
   41c70:	blr	x4
   41c74:	mov	x8, #0x1                   	// #1
   41c78:	str	x2, [x25, #16]
   41c7c:	lsl	x5, x8, x5
   41c80:	ldr	x11, [x1, x0]
   41c84:	eor	x4, x19, x5
   41c88:	str	w8, [x20, #8]
   41c8c:	orr	x0, x7, x9
   41c90:	and	x4, x4, x6
   41c94:	cmp	x11, x21
   41c98:	orr	x4, x4, x0
   41c9c:	and	x7, x5, x6
   41ca0:	b.lt	41fe4 <mpfr_sqr@@Base+0x994>  // b.tstop
   41ca4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41ca8:	ldr	x8, [x0, #2512]
   41cac:	add	x0, x0, #0x9d0
   41cb0:	blr	x8
   41cb4:	ldr	x0, [x1, x0]
   41cb8:	cmp	x21, x0
   41cbc:	b.lt	41de0 <mpfr_sqr@@Base+0x790>  // b.tstop
   41cc0:	str	x21, [x20, #16]
   41cc4:	orr	x0, x7, x4
   41cc8:	cbz	x0, 419e4 <mpfr_sqr@@Base+0x394>
   41ccc:	cmp	w23, #0x5
   41cd0:	b.eq	419e4 <mpfr_sqr@@Base+0x394>  // b.none
   41cd4:	cbz	w23, 41f88 <mpfr_sqr@@Base+0x938>
   41cd8:	and	w0, w23, #0xfffffffd
   41cdc:	cmp	w0, #0x1
   41ce0:	b.eq	41d40 <mpfr_sqr@@Base+0x6f0>  // b.none
   41ce4:	ldr	x0, [x25]
   41ce8:	add	x22, x0, x22
   41cec:	ldp	x0, x2, [x25, #8]
   41cf0:	cmp	x22, #0x0
   41cf4:	cinc	x0, x0, eq  // eq = none
   41cf8:	stp	x22, x0, [x25]
   41cfc:	orr	x3, x22, x0
   41d00:	cmp	x3, #0x0
   41d04:	cinc	x0, x2, eq  // eq = none
   41d08:	cbnz	x0, 41fb8 <mpfr_sqr@@Base+0x968>
   41d0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41d10:	ldr	x2, [x0, #2544]
   41d14:	add	x0, x0, #0x9f0
   41d18:	blr	x2
   41d1c:	ldr	x0, [x1, x0]
   41d20:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   41d24:	str	x2, [x25, #16]
   41d28:	cmp	x21, x0
   41d2c:	b.lt	41b4c <mpfr_sqr@@Base+0x4fc>  // b.tstop
   41d30:	b	41950 <mpfr_sqr@@Base+0x300>
   41d34:	and	w0, w23, #0xfffffffd
   41d38:	cmp	w0, #0x1
   41d3c:	b.ne	41f3c <mpfr_sqr@@Base+0x8ec>  // b.any
   41d40:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41d44:	ldr	x2, [x0, #2576]
   41d48:	add	x0, x0, #0xa10
   41d4c:	blr	x2
   41d50:	add	x0, x1, x0
   41d54:	mov	w2, #0xffffffff            	// #-1
   41d58:	ldr	w3, [x0]
   41d5c:	orr	w3, w3, #0x8
   41d60:	str	w3, [x0]
   41d64:	b	417e4 <mpfr_sqr@@Base+0x194>
   41d68:	cbz	x6, 41d40 <mpfr_sqr@@Base+0x6f0>
   41d6c:	ldr	x0, [x11]
   41d70:	cbnz	x3, 41ab4 <mpfr_sqr@@Base+0x464>
   41d74:	lsr	x24, x0, x24
   41d78:	tbz	w24, #0, 41d40 <mpfr_sqr@@Base+0x6f0>
   41d7c:	b	41ab4 <mpfr_sqr@@Base+0x464>
   41d80:	mul	x0, x0, x4
   41d84:	umulh	x2, x4, x4
   41d88:	adds	x2, x0, x2
   41d8c:	mul	x8, x4, x4
   41d90:	cset	x1, cs  // cs = hs, nlast
   41d94:	adds	x1, x5, x1
   41d98:	cinc	x6, x6, cs  // cs = hs, nlast
   41d9c:	adds	x0, x0, x2
   41da0:	cset	x5, cs  // cs = hs, nlast
   41da4:	mov	x9, x0
   41da8:	adds	x1, x1, x5
   41dac:	mov	x5, x1
   41db0:	cinc	x6, x6, cs  // cs = hs, nlast
   41db4:	tbz	x6, #63, 41870 <mpfr_sqr@@Base+0x220>
   41db8:	b	41880 <mpfr_sqr@@Base+0x230>
   41dbc:	add	x0, x29, #0x70
   41dc0:	mov	x2, #0x3                   	// #3
   41dc4:	bl	c3b0 <__gmpn_sqr@plt>
   41dc8:	ldp	x0, x7, [x29, #112]
   41dcc:	ldp	x3, x2, [x29, #144]
   41dd0:	ldp	x9, x6, [x29, #128]
   41dd4:	orr	x7, x7, x0
   41dd8:	tbz	x2, #63, 41c3c <mpfr_sqr@@Base+0x5ec>
   41ddc:	b	41c50 <mpfr_sqr@@Base+0x600>
   41de0:	cmp	x12, x10
   41de4:	and	x8, x2, x3
   41de8:	sub	x0, x0, #0x1
   41dec:	ccmn	x8, #0x1, #0x0, eq  // eq = none
   41df0:	ccmp	x21, x0, #0x0, eq  // eq = none
   41df4:	b.ne	41fd0 <mpfr_sqr@@Base+0x980>  // b.any
   41df8:	cmp	w23, #0x0
   41dfc:	ccmp	x7, #0x0, #0x4, eq  // eq = none
   41e00:	b.ne	41fc8 <mpfr_sqr@@Base+0x978>  // b.any
   41e04:	sub	w8, w23, #0x2
   41e08:	tst	w8, #0xfffffffd
   41e0c:	b.ne	41fd0 <mpfr_sqr@@Base+0x980>  // b.any
   41e10:	orr	x8, x7, x4
   41e14:	cbz	x8, 41fd0 <mpfr_sqr@@Base+0x980>
   41e18:	str	x21, [x20, #16]
   41e1c:	b	41cd4 <mpfr_sqr@@Base+0x684>
   41e20:	mov	x2, x22
   41e24:	mov	w3, w23
   41e28:	mov	x0, x20
   41e2c:	mov	x1, x22
   41e30:	bl	bd50 <mpfr_mul@plt>
   41e34:	mov	w2, w0
   41e38:	b	417e4 <mpfr_sqr@@Base+0x194>
   41e3c:	mov	x0, x1
   41e40:	mov	x2, x25
   41e44:	mov	w3, #0x1                   	// #1
   41e48:	str	x1, [x29, #104]
   41e4c:	bl	bcc0 <__gmpn_lshift@plt>
   41e50:	ldr	x1, [x29, #104]
   41e54:	b	41744 <mpfr_sqr@@Base+0xf4>
   41e58:	cbnz	w23, 41e78 <mpfr_sqr@@Base+0x828>
   41e5c:	add	x21, x19, x21
   41e60:	cmp	x0, x21
   41e64:	b.gt	41fdc <mpfr_sqr@@Base+0x98c>
   41e68:	mov	x0, x22
   41e6c:	bl	bf00 <mpfr_powerof2_raw@plt>
   41e70:	cmp	w0, #0x0
   41e74:	cset	w23, ne  // ne = any
   41e78:	mov	w2, #0x1                   	// #1
   41e7c:	mov	w1, w23
   41e80:	mov	x0, x20
   41e84:	bl	c3c0 <mpfr_underflow@plt>
   41e88:	mov	w2, w0
   41e8c:	b	417e4 <mpfr_sqr@@Base+0x194>
   41e90:	ldr	x0, [x20]
   41e94:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   41e98:	ldr	x2, [x20, #24]
   41e9c:	sub	x0, x0, #0x1
   41ea0:	asr	x0, x0, #6
   41ea4:	str	x3, [x2, x0, lsl #3]
   41ea8:	b	41768 <mpfr_sqr@@Base+0x118>
   41eac:	mov	w2, #0x0                   	// #0
   41eb0:	str	x21, [x20, #16]
   41eb4:	b	417e4 <mpfr_sqr@@Base+0x194>
   41eb8:	mrs	x1, tpidr_el0
   41ebc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   41ec0:	ldr	x2, [x0, #2576]
   41ec4:	add	x0, x0, #0xa10
   41ec8:	blr	x2
   41ecc:	add	x0, x1, x0
   41ed0:	mov	w2, #0x0                   	// #0
   41ed4:	str	x21, [x20, #16]
   41ed8:	ldr	w1, [x0]
   41edc:	orr	w1, w1, #0x4
   41ee0:	str	w1, [x0]
   41ee4:	b	417e4 <mpfr_sqr@@Base+0x194>
   41ee8:	sub	x0, x0, #0x1
   41eec:	cmp	x9, x4
   41ef0:	ccmp	x21, x0, #0x0, eq  // eq = none
   41ef4:	b.ne	41ffc <mpfr_sqr@@Base+0x9ac>  // b.any
   41ef8:	cmp	w23, #0x0
   41efc:	ccmp	x6, #0x0, #0x4, eq  // eq = none
   41f00:	b.ne	41fa0 <mpfr_sqr@@Base+0x950>  // b.any
   41f04:	sub	w2, w23, #0x2
   41f08:	tst	w2, #0xfffffffd
   41f0c:	b.ne	41ffc <mpfr_sqr@@Base+0x9ac>  // b.any
   41f10:	orr	x2, x6, x3
   41f14:	cbz	x2, 41ffc <mpfr_sqr@@Base+0x9ac>
   41f18:	str	x21, [x20, #16]
   41f1c:	cbnz	w23, 41aa4 <mpfr_sqr@@Base+0x454>
   41f20:	b	41d68 <mpfr_sqr@@Base+0x718>
   41f24:	cbz	x8, 41d40 <mpfr_sqr@@Base+0x6f0>
   41f28:	ldr	x0, [x10]
   41f2c:	cbnz	x3, 41914 <mpfr_sqr@@Base+0x2c4>
   41f30:	lsr	x24, x0, x24
   41f34:	tbz	w24, #0, 41d40 <mpfr_sqr@@Base+0x6f0>
   41f38:	b	41914 <mpfr_sqr@@Base+0x2c4>
   41f3c:	ldr	x0, [x5]
   41f40:	b	41b20 <mpfr_sqr@@Base+0x4d0>
   41f44:	str	x0, [x11]
   41f48:	b	41b54 <mpfr_sqr@@Base+0x504>
   41f4c:	sub	x0, x0, #0x1
   41f50:	cmp	x21, x0
   41f54:	ccmn	x6, #0x1, #0x0, eq  // eq = none
   41f58:	ccmp	x11, x12, #0x0, eq  // eq = none
   41f5c:	b.ne	42024 <mpfr_sqr@@Base+0x9d4>  // b.any
   41f60:	cmp	w23, #0x0
   41f64:	ccmp	x8, #0x0, #0x4, eq  // eq = none
   41f68:	b.ne	41fc0 <mpfr_sqr@@Base+0x970>  // b.any
   41f6c:	sub	w2, w23, #0x2
   41f70:	tst	w2, #0xfffffffd
   41f74:	b.ne	42024 <mpfr_sqr@@Base+0x9d4>  // b.any
   41f78:	orr	x2, x8, x3
   41f7c:	cbz	x2, 42024 <mpfr_sqr@@Base+0x9d4>
   41f80:	str	x21, [x20, #16]
   41f84:	b	41900 <mpfr_sqr@@Base+0x2b0>
   41f88:	cbz	x7, 41d40 <mpfr_sqr@@Base+0x6f0>
   41f8c:	ldr	x0, [x25]
   41f90:	cbnz	x4, 41ce8 <mpfr_sqr@@Base+0x698>
   41f94:	lsr	x24, x0, x24
   41f98:	tbz	w24, #0, 41d40 <mpfr_sqr@@Base+0x6f0>
   41f9c:	b	41ce8 <mpfr_sqr@@Base+0x698>
   41fa0:	str	x21, [x20, #16]
   41fa4:	b	41d6c <mpfr_sqr@@Base+0x71c>
   41fa8:	str	x0, [x5]
   41fac:	b	41b54 <mpfr_sqr@@Base+0x504>
   41fb0:	str	x0, [x10, #8]
   41fb4:	b	41b54 <mpfr_sqr@@Base+0x504>
   41fb8:	str	x0, [x25, #16]
   41fbc:	b	41b54 <mpfr_sqr@@Base+0x504>
   41fc0:	str	x21, [x20, #16]
   41fc4:	b	41f28 <mpfr_sqr@@Base+0x8d8>
   41fc8:	str	x21, [x20, #16]
   41fcc:	b	41f8c <mpfr_sqr@@Base+0x93c>
   41fd0:	cbnz	w23, 41e78 <mpfr_sqr@@Base+0x828>
   41fd4:	cmp	x21, x0
   41fd8:	b.ge	4208c <mpfr_sqr@@Base+0xa3c>  // b.tcont
   41fdc:	mov	w23, #0x1                   	// #1
   41fe0:	b	41e78 <mpfr_sqr@@Base+0x828>
   41fe4:	mov	w2, w8
   41fe8:	mov	w1, w23
   41fec:	mov	x0, x20
   41ff0:	bl	bf40 <mpfr_overflow@plt>
   41ff4:	mov	w2, w0
   41ff8:	b	417e4 <mpfr_sqr@@Base+0x194>
   41ffc:	cbnz	w23, 41e78 <mpfr_sqr@@Base+0x828>
   42000:	cmp	x21, x0
   42004:	b.lt	41fdc <mpfr_sqr@@Base+0x98c>  // b.tstop
   42008:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   4200c:	cmp	x4, x0
   42010:	b.ne	41e78 <mpfr_sqr@@Base+0x828>  // b.any
   42014:	orr	x3, x6, x3
   42018:	cmp	x3, #0x0
   4201c:	cset	w23, eq  // eq = none
   42020:	b	41e78 <mpfr_sqr@@Base+0x828>
   42024:	cbnz	w23, 41e78 <mpfr_sqr@@Base+0x828>
   42028:	cmp	x21, x0
   4202c:	b.lt	41fdc <mpfr_sqr@@Base+0x98c>  // b.tstop
   42030:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   42034:	cmp	x6, x0
   42038:	b.ne	41e78 <mpfr_sqr@@Base+0x828>  // b.any
   4203c:	orr	x0, x4, x11
   42040:	and	x0, x0, x5
   42044:	orr	x3, x0, x3
   42048:	cmp	x3, #0x0
   4204c:	cset	w23, eq  // eq = none
   42050:	b	41e78 <mpfr_sqr@@Base+0x828>
   42054:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   42058:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   4205c:	add	x2, x2, #0x3f0
   42060:	add	x0, x0, #0x440
   42064:	mov	w1, #0x22a                 	// #554
   42068:	bl	cb40 <mpfr_assert_fail@plt>
   4206c:	cbnz	w23, 41e78 <mpfr_sqr@@Base+0x828>
   42070:	cmp	x21, x0
   42074:	b.lt	41fdc <mpfr_sqr@@Base+0x98c>  // b.tstop
   42078:	cmp	x3, #0x0
   4207c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   42080:	ccmp	x4, x0, #0x0, eq  // eq = none
   42084:	cset	w23, eq  // eq = none
   42088:	b	41e78 <mpfr_sqr@@Base+0x828>
   4208c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   42090:	cmp	x2, x0
   42094:	b.ne	41e78 <mpfr_sqr@@Base+0x828>  // b.any
   42098:	orr	x5, x5, x12
   4209c:	and	x6, x5, x6
   420a0:	orr	x3, x6, x3
   420a4:	orr	x4, x3, x4
   420a8:	cmp	x4, #0x0
   420ac:	cset	w23, eq  // eq = none
   420b0:	b	41e78 <mpfr_sqr@@Base+0x828>
   420b4:	nop

00000000000420b8 <__gmpfr_int_ceil_log2@@Base>:
   420b8:	cmp	x0, #0x1
   420bc:	b.eq	420d8 <__gmpfr_int_ceil_log2@@Base+0x20>  // b.none
   420c0:	b.ls	420e0 <__gmpfr_int_ceil_log2@@Base+0x28>  // b.plast
   420c4:	sub	x0, x0, #0x1
   420c8:	mov	w1, #0x40                  	// #64
   420cc:	clz	x0, x0
   420d0:	sub	w0, w1, w0
   420d4:	ret
   420d8:	mov	w0, #0x0                   	// #0
   420dc:	ret
   420e0:	stp	x29, x30, [sp, #-16]!
   420e4:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   420e8:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   420ec:	mov	x29, sp
   420f0:	add	x2, x2, #0x448
   420f4:	add	x0, x0, #0x450
   420f8:	mov	w1, #0x24                  	// #36
   420fc:	bl	cb40 <mpfr_assert_fail@plt>

0000000000042100 <__gmpfr_isqrt@@Base>:
   42100:	mov	x2, x0
   42104:	cmp	x0, #0x1
   42108:	b.ls	42158 <__gmpfr_isqrt@@Base+0x58>  // b.plast
   4210c:	mov	x1, x0
   42110:	mov	x0, #0x1                   	// #1
   42114:	nop
   42118:	lsr	x1, x1, #2
   4211c:	lsl	x0, x0, #1
   42120:	cmp	x1, #0x1
   42124:	b.hi	42118 <__gmpfr_isqrt@@Base+0x18>  // b.pmore
   42128:	udiv	x1, x2, x0
   4212c:	add	x0, x1, x0
   42130:	lsr	x0, x0, #1
   42134:	add	x1, x0, #0x2
   42138:	mul	x3, x0, x0
   4213c:	mul	x1, x1, x0
   42140:	cmp	x3, x2
   42144:	b.hi	42128 <__gmpfr_isqrt@@Base+0x28>  // b.pmore
   42148:	cmp	x1, x2
   4214c:	ccmp	x3, x1, #0x2, cc  // cc = lo, ul, last
   42150:	b.ls	42128 <__gmpfr_isqrt@@Base+0x28>  // b.plast
   42154:	ret
   42158:	mov	x0, #0x1                   	// #1
   4215c:	b	42128 <__gmpfr_isqrt@@Base+0x28>

0000000000042160 <__gmpfr_cuberoot@@Base>:
   42160:	mov	x4, x0
   42164:	cmp	x0, #0x3
   42168:	b.ls	42228 <__gmpfr_cuberoot@@Base+0xc8>  // b.plast
   4216c:	mov	x1, x0
   42170:	mov	x0, #0x1                   	// #1
   42174:	nop
   42178:	lsr	x1, x1, #3
   4217c:	lsl	x0, x0, #1
   42180:	cmp	x1, #0x3
   42184:	b.hi	42178 <__gmpfr_cuberoot@@Base+0x18>  // b.pmore
   42188:	mul	x1, x0, x0
   4218c:	lsl	x5, x0, #1
   42190:	cmp	x4, #0xff
   42194:	udiv	x0, x4, x1
   42198:	b.ls	421e0 <__gmpfr_cuberoot@@Base+0x80>  // b.plast
   4219c:	add	x0, x5, x0
   421a0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   421a4:	movk	x1, #0xaaab
   421a8:	umulh	x0, x0, x1
   421ac:	lsr	x0, x0, #1
   421b0:	mul	x2, x0, x0
   421b4:	udiv	x2, x4, x2
   421b8:	add	x0, x2, x0, lsl #1
   421bc:	umulh	x0, x0, x1
   421c0:	lsr	x0, x0, #1
   421c4:	mul	x2, x0, x0
   421c8:	udiv	x2, x4, x2
   421cc:	add	x0, x2, x0, lsl #1
   421d0:	umulh	x2, x0, x1
   421d4:	and	x5, x2, #0xfffffffffffffffe
   421d8:	lsr	x0, x2, #1
   421dc:	mul	x1, x0, x0
   421e0:	mov	x7, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   421e4:	movk	x7, #0xaaab
   421e8:	udiv	x0, x4, x1
   421ec:	add	x0, x0, x5
   421f0:	umulh	x0, x0, x7
   421f4:	lsr	x0, x0, #1
   421f8:	add	x3, x0, #0x1
   421fc:	lsl	x5, x0, #1
   42200:	mul	x1, x0, x0
   42204:	mul	x2, x3, x3
   42208:	mul	x6, x1, x0
   4220c:	mul	x2, x2, x3
   42210:	cmp	x6, x4
   42214:	b.hi	421e8 <__gmpfr_cuberoot@@Base+0x88>  // b.pmore
   42218:	cmp	x2, x4
   4221c:	ccmp	x6, x2, #0x2, ls  // ls = plast
   42220:	b.ls	421e8 <__gmpfr_cuberoot@@Base+0x88>  // b.plast
   42224:	ret
   42228:	mov	x5, #0x2                   	// #2
   4222c:	mov	x1, #0x1                   	// #1
   42230:	b	421e0 <__gmpfr_cuberoot@@Base+0x80>
   42234:	nop
   42238:	stp	x29, x30, [sp, #-208]!
   4223c:	mov	x29, sp
   42240:	stp	x27, x28, [sp, #80]
   42244:	mov	x27, x1
   42248:	ldr	x1, [x0]
   4224c:	stp	x19, x20, [sp, #16]
   42250:	stp	x21, x22, [sp, #32]
   42254:	cmp	x1, #0x1
   42258:	stp	x23, x24, [sp, #48]
   4225c:	stp	x25, x26, [sp, #64]
   42260:	str	x0, [x29, #136]
   42264:	str	x1, [x29, #160]
   42268:	str	w2, [x29, #172]
   4226c:	b.eq	42b80 <__gmpfr_cuberoot@@Base+0xa20>  // b.none
   42270:	sub	x0, x1, #0x1
   42274:	mov	w21, #0x40                  	// #64
   42278:	clz	x0, x0
   4227c:	str	xzr, [x29, #192]
   42280:	sub	w0, w21, w0
   42284:	add	x21, x1, w0, sxtw
   42288:	sub	x20, x21, #0x1
   4228c:	asr	x20, x20, #6
   42290:	add	x28, x20, #0x1
   42294:	lsl	x22, x28, #6
   42298:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   4229c:	add	x0, x0, #0x4d0
   422a0:	str	x0, [x29, #144]
   422a4:	add	x0, x29, #0xc8
   422a8:	mov	x23, x20
   422ac:	str	x0, [x29, #112]
   422b0:	mov	x0, #0x40                  	// #64
   422b4:	str	x0, [x29, #184]
   422b8:	add	x0, x23, #0x2
   422bc:	add	x1, x29, #0xc0
   422c0:	str	x1, [x29, #104]
   422c4:	mov	x20, x27
   422c8:	str	x0, [x29, #152]
   422cc:	lsl	x1, x0, #4
   422d0:	cmp	x1, #0x4, lsl #12
   422d4:	b.hi	42468 <__gmpfr_cuberoot@@Base+0x308>  // b.pmore
   422d8:	sub	sp, sp, x1
   422dc:	mov	x26, sp
   422e0:	ldr	w3, [x20, #4]
   422e4:	lsl	x0, x28, #3
   422e8:	ldr	x5, [x29, #144]
   422ec:	sub	w2, w3, #0x2
   422f0:	ldp	x1, x9, [x20, #16]
   422f4:	sbfiz	x2, x2, #3, #32
   422f8:	add	x4, x5, x2
   422fc:	add	x23, x26, x0
   42300:	str	x0, [x29, #176]
   42304:	mov	x0, x23
   42308:	ldr	w10, [x5, x2]
   4230c:	ldr	w5, [x4, #4]
   42310:	sub	x11, x5, #0x1
   42314:	udiv	x2, x22, x5
   42318:	msub	x4, x2, x5, x22
   4231c:	madd	x4, x4, x10, x11
   42320:	udiv	x4, x4, x5
   42324:	madd	x4, x2, x10, x4
   42328:	add	x4, x4, #0x1
   4232c:	cmp	x4, x9
   42330:	csel	x24, x4, x9, ls  // ls = plast
   42334:	mov	x2, x24
   42338:	bl	bb80 <__gmpn_set_str@plt>
   4233c:	add	x1, x23, x0, lsl #3
   42340:	mov	x2, x0
   42344:	ldr	x0, [x20, #24]
   42348:	ldur	x19, [x1, #-8]
   4234c:	cmp	x0, x24
   42350:	cset	w25, eq  // eq = none
   42354:	subs	x27, x28, x2
   42358:	clz	x19, x19
   4235c:	b.mi	4268c <__gmpfr_cuberoot@@Base+0x52c>  // b.first
   42360:	cbnz	x19, 4289c <__gmpfr_cuberoot@@Base+0x73c>
   42364:	cbnz	x27, 42978 <__gmpfr_cuberoot@@Base+0x818>
   42368:	add	x19, x19, x27, lsl #6
   4236c:	neg	x19, x19
   42370:	ldr	w2, [x20, #4]
   42374:	sub	w27, w2, #0x1
   42378:	ands	w27, w27, w2
   4237c:	b.ne	42478 <__gmpfr_cuberoot@@Base+0x318>  // b.any
   42380:	ldr	x1, [x20, #40]
   42384:	sxtw	x2, w2
   42388:	clz	x2, x2
   4238c:	mov	w0, #0x3f                  	// #63
   42390:	sub	w2, w0, w2
   42394:	tbnz	x1, #63, 428d0 <__gmpfr_cuberoot@@Base+0x770>
   42398:	cmp	x24, #0x0
   4239c:	b.le	426b8 <__gmpfr_cuberoot@@Base+0x558>
   423a0:	sub	x4, x1, x24
   423a4:	cmp	x4, #0x0
   423a8:	b.le	42970 <__gmpfr_cuberoot@@Base+0x810>
   423ac:	sxtw	x2, w2
   423b0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   423b4:	udiv	x0, x0, x2
   423b8:	cmp	x0, x4
   423bc:	b.le	42b5c <__gmpfr_cuberoot@@Base+0x9fc>
   423c0:	ldr	x1, [x20, #48]
   423c4:	mul	x4, x2, x4
   423c8:	add	x0, x4, x1
   423cc:	tbnz	x1, #63, 426e0 <__gmpfr_cuberoot@@Base+0x580>
   423d0:	mov	x4, x0
   423d4:	tbnz	x0, #63, 42b5c <__gmpfr_cuberoot@@Base+0x9fc>
   423d8:	tbnz	x19, #63, 42948 <__gmpfr_cuberoot@@Base+0x7e8>
   423dc:	add	x19, x19, x0
   423e0:	mov	x0, #0xfffffffffffffffd    	// #-3
   423e4:	movk	x0, #0x7fff, lsl #48
   423e8:	cmp	x19, x0
   423ec:	b.hi	42b5c <__gmpfr_cuberoot@@Base+0x9fc>  // b.pmore
   423f0:	cbnz	w25, 429b4 <__gmpfr_cuberoot@@Base+0x854>
   423f4:	ldr	w0, [x29, #172]
   423f8:	sub	x2, x22, w27, sxtw
   423fc:	sub	x2, x2, #0x1
   42400:	mov	x1, x28
   42404:	cmp	w0, #0x0
   42408:	ldr	x0, [x29, #160]
   4240c:	cinc	x3, x0, eq  // eq = none
   42410:	mov	x0, x23
   42414:	bl	c370 <mpfr_round_p@plt>
   42418:	cbnz	w0, 429b4 <__gmpfr_cuberoot@@Base+0x854>
   4241c:	ldr	x1, [x29, #184]
   42420:	mov	x0, #0xfffffffffffffeff    	// #-257
   42424:	movk	x0, #0x7fff, lsl #48
   42428:	sub	x0, x0, x21
   4242c:	cmp	x0, x1
   42430:	b.lt	42994 <__gmpfr_cuberoot@@Base+0x834>  // b.tstop
   42434:	add	x21, x21, x1
   42438:	sub	x23, x21, #0x1
   4243c:	add	x24, x21, x21, lsr #63
   42440:	asr	x23, x23, #6
   42444:	asr	x0, x24, #1
   42448:	str	x0, [x29, #184]
   4244c:	add	x0, x23, #0x2
   42450:	add	x28, x23, #0x1
   42454:	str	x0, [x29, #152]
   42458:	lsl	x1, x0, #4
   4245c:	lsl	x22, x28, #6
   42460:	cmp	x1, #0x4, lsl #12
   42464:	b.ls	422d8 <__gmpfr_cuberoot@@Base+0x178>  // b.plast
   42468:	ldr	x0, [x29, #104]
   4246c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   42470:	mov	x26, x0
   42474:	b	422e0 <__gmpfr_cuberoot@@Base+0x180>
   42478:	ldr	x3, [x20, #40]
   4247c:	cmp	x3, x24
   42480:	b.le	42734 <__gmpfr_cuberoot@@Base+0x5d4>
   42484:	lsl	x1, x28, #4
   42488:	add	x1, x1, #0x8
   4248c:	cmp	x1, #0x4, lsl #12
   42490:	b.hi	42b18 <__gmpfr_cuberoot@@Base+0x9b8>  // b.pmore
   42494:	add	x1, x1, #0xf
   42498:	and	x1, x1, #0xfffffffffffffff0
   4249c:	sub	sp, sp, x1
   424a0:	mov	x5, sp
   424a4:	sub	x3, x3, x24
   424a8:	mov	x4, x28
   424ac:	ldr	x24, [x29, #112]
   424b0:	mov	x0, x26
   424b4:	str	x5, [x29, #120]
   424b8:	mov	x1, x24
   424bc:	bl	cbe0 <mpfr_mpn_exp@plt>
   424c0:	str	x24, [x29, #128]
   424c4:	mov	x27, x0
   424c8:	cmn	w0, #0x2
   424cc:	ldr	x5, [x29, #120]
   424d0:	b.eq	42b5c <__gmpfr_cuberoot@@Base+0x9fc>  // b.none
   424d4:	cmn	w0, #0x1
   424d8:	and	w25, w25, #0x1
   424dc:	csel	w25, w25, wzr, eq  // eq = none
   424e0:	mov	x1, x23
   424e4:	mov	x0, x5
   424e8:	mov	x2, x26
   424ec:	mov	x3, x28
   424f0:	str	x5, [x29, #120]
   424f4:	bl	c470 <__gmpn_mul_n@plt>
   424f8:	ldr	x1, [x29, #200]
   424fc:	adds	w27, w27, #0x1
   42500:	csinc	w27, w27, wzr, ne  // ne = any
   42504:	ldr	x5, [x29, #120]
   42508:	tbnz	x1, #63, 42950 <__gmpfr_cuberoot@@Base+0x7f0>
   4250c:	adds	x1, x1, x22
   42510:	b.mi	42b5c <__gmpfr_cuberoot@@Base+0x9fc>  // b.first
   42514:	str	x1, [x29, #200]
   42518:	tbnz	x19, #63, 42960 <__gmpfr_cuberoot@@Base+0x800>
   4251c:	add	x19, x19, x1
   42520:	mov	x0, #0xfffffffffffffffd    	// #-3
   42524:	movk	x0, #0x7fff, lsl #48
   42528:	cmp	x19, x0
   4252c:	b.hi	42b5c <__gmpfr_cuberoot@@Base+0x9fc>  // b.pmore
   42530:	add	x0, x5, x28, lsl #4
   42534:	ldur	x0, [x0, #-8]
   42538:	tbz	x0, #63, 42654 <__gmpfr_cuberoot@@Base+0x4f4>
   4253c:	cbz	w25, 42680 <__gmpfr_cuberoot@@Base+0x520>
   42540:	mov	x0, x5
   42544:	mov	x1, #0x0                   	// #0
   42548:	str	x5, [x29, #152]
   4254c:	bl	caa0 <__gmpn_scan1@plt>
   42550:	cmp	x0, x22
   42554:	ldr	x5, [x29, #152]
   42558:	b.cc	42680 <__gmpfr_cuberoot@@Base+0x520>  // b.lo, b.ul, b.last
   4255c:	ldr	x26, [x29, #176]
   42560:	mov	x27, x20
   42564:	add	x20, x5, x26
   42568:	ldp	x6, x0, [x29, #128]
   4256c:	mov	x1, x20
   42570:	ldr	w3, [x27]
   42574:	mov	x2, x22
   42578:	ldr	w5, [x29, #172]
   4257c:	ldr	x4, [x29, #160]
   42580:	ldr	x0, [x0, #24]
   42584:	bl	ca20 <mpfr_round_raw@plt>
   42588:	cbz	w0, 425ac <__gmpfr_cuberoot@@Base+0x44c>
   4258c:	ldr	x1, [x29, #136]
   42590:	add	x19, x19, #0x1
   42594:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   42598:	ldr	x0, [x1]
   4259c:	ldr	x1, [x1, #24]
   425a0:	sub	x0, x0, #0x1
   425a4:	asr	x0, x0, #6
   425a8:	str	x2, [x1, x0, lsl #3]
   425ac:	ldr	x2, [x29, #136]
   425b0:	mov	w0, #0x1                   	// #1
   425b4:	ldr	w1, [x27]
   425b8:	cmp	w1, #0x0
   425bc:	cneg	w0, w0, ne  // ne = any
   425c0:	str	w0, [x2, #8]
   425c4:	tbz	x19, #63, 429c8 <__gmpfr_cuberoot@@Base+0x868>
   425c8:	add	x19, x22, x19
   425cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   425d0:	ldr	x1, [x0, #2512]
   425d4:	add	x0, x0, #0x9d0
   425d8:	blr	x1
   425dc:	mrs	x2, tpidr_el0
   425e0:	ldr	x1, [x29, #136]
   425e4:	ldr	x0, [x2, x0]
   425e8:	str	x19, [x1, #16]
   425ec:	cmp	x0, x19
   425f0:	ldr	w1, [x29, #200]
   425f4:	b.gt	42614 <__gmpfr_cuberoot@@Base+0x4b4>
   425f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   425fc:	ldr	x3, [x0, #2544]
   42600:	add	x0, x0, #0x9f0
   42604:	blr	x3
   42608:	ldr	x0, [x2, x0]
   4260c:	cmp	x0, x19
   42610:	b.ge	42a64 <__gmpfr_cuberoot@@Base+0x904>  // b.tcont
   42614:	ldr	w2, [x29, #172]
   42618:	ldr	x0, [x29, #136]
   4261c:	bl	cb30 <mpfr_check_range@plt>
   42620:	mov	w1, w0
   42624:	str	w1, [x29, #200]
   42628:	ldr	x0, [x29, #192]
   4262c:	cbnz	x0, 42b74 <__gmpfr_cuberoot@@Base+0xa14>
   42630:	mov	sp, x29
   42634:	mov	w0, w1
   42638:	ldp	x19, x20, [sp, #16]
   4263c:	ldp	x21, x22, [sp, #32]
   42640:	ldp	x23, x24, [sp, #48]
   42644:	ldp	x25, x26, [sp, #64]
   42648:	ldp	x27, x28, [sp, #80]
   4264c:	ldp	x29, x30, [sp], #208
   42650:	ret
   42654:	ldr	x0, [x29, #176]
   42658:	mov	w3, #0x1                   	// #1
   4265c:	ldr	x2, [x29, #152]
   42660:	sub	x1, x0, #0x8
   42664:	add	x1, x5, x1
   42668:	str	x5, [x29, #120]
   4266c:	mov	x0, x1
   42670:	sub	x19, x19, #0x1
   42674:	bl	bcc0 <__gmpn_lshift@plt>
   42678:	ldr	x5, [x29, #120]
   4267c:	cbnz	w25, 42540 <__gmpfr_cuberoot@@Base+0x3e0>
   42680:	ldr	x0, [x29, #176]
   42684:	add	x23, x5, x0
   42688:	b	423f4 <__gmpfr_cuberoot@@Base+0x294>
   4268c:	cbz	x19, 42870 <__gmpfr_cuberoot@@Base+0x710>
   42690:	mov	x1, x23
   42694:	mov	x0, x23
   42698:	mov	w3, #0x40                  	// #64
   4269c:	sub	w3, w3, w19
   426a0:	bl	bce0 <__gmpn_rshift@plt>
   426a4:	cmp	x0, #0x0
   426a8:	csel	w25, w25, wzr, eq  // eq = none
   426ac:	mov	x0, #0x40                  	// #64
   426b0:	sub	x19, x0, x19
   426b4:	b	42370 <__gmpfr_cuberoot@@Base+0x210>
   426b8:	sub	x4, x1, x24
   426bc:	cmp	x4, x1
   426c0:	b.cc	42b5c <__gmpfr_cuberoot@@Base+0x9fc>  // b.lo, b.ul, b.last
   426c4:	cmp	x4, #0x0
   426c8:	b.lt	42b5c <__gmpfr_cuberoot@@Base+0x9fc>  // b.tstop
   426cc:	b.ne	423ac <__gmpfr_cuberoot@@Base+0x24c>  // b.any
   426d0:	ldr	x1, [x20, #48]
   426d4:	mov	x4, #0x0                   	// #0
   426d8:	mov	x0, x1
   426dc:	tbz	x1, #63, 423d0 <__gmpfr_cuberoot@@Base+0x270>
   426e0:	add	x4, x4, x1
   426e4:	cmp	x19, #0x0
   426e8:	ccmp	x4, #0x0, #0x1, ge  // ge = tcont
   426ec:	mov	x0, x4
   426f0:	b.ge	423dc <__gmpfr_cuberoot@@Base+0x27c>  // b.tcont
   426f4:	lsr	x0, x4, #63
   426f8:	and	w0, w0, #0xff
   426fc:	cmp	x19, #0x0
   42700:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
   42704:	b.eq	42948 <__gmpfr_cuberoot@@Base+0x7e8>  // b.none
   42708:	neg	x19, x19
   4270c:	sub	x4, x19, x4
   42710:	cmp	x4, x19
   42714:	b.cc	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.lo, b.ul, b.last
   42718:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   4271c:	cmp	x4, x0
   42720:	b.cc	429ac <__gmpfr_cuberoot@@Base+0x84c>  // b.lo, b.ul, b.last
   42724:	b.ne	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.any
   42728:	mov	x19, #0x2                   	// #2
   4272c:	movk	x19, #0x8000, lsl #48
   42730:	b	423f0 <__gmpfr_cuberoot@@Base+0x290>
   42734:	b.ge	42968 <__gmpfr_cuberoot@@Base+0x808>  // b.tcont
   42738:	lsl	x27, x28, #1
   4273c:	add	x1, x27, x28
   42740:	add	x1, x1, #0x1
   42744:	lsl	x1, x1, #3
   42748:	cmp	x1, #0x4, lsl #12
   4274c:	b.hi	42b64 <__gmpfr_cuberoot@@Base+0xa04>  // b.pmore
   42750:	add	x1, x1, #0xf
   42754:	and	x1, x1, #0xfffffffffffffff0
   42758:	sub	sp, sp, x1
   4275c:	mov	x9, sp
   42760:	ldr	x2, [x29, #176]
   42764:	mov	x0, x26
   42768:	mov	w1, #0x0                   	// #0
   4276c:	str	x9, [x29, #128]
   42770:	bl	c110 <memset@plt>
   42774:	ldr	x3, [x20, #40]
   42778:	ldr	x9, [x29, #128]
   4277c:	tbnz	x24, #63, 42ac0 <__gmpfr_cuberoot@@Base+0x960>
   42780:	cmp	x3, #0x0
   42784:	b.le	429f0 <__gmpfr_cuberoot@@Base+0x890>
   42788:	sub	x3, x24, x3
   4278c:	str	x3, [x29, #200]
   42790:	ldr	w2, [x20, #4]
   42794:	add	x5, x9, x28, lsl #4
   42798:	ldr	x1, [x29, #112]
   4279c:	add	x24, x5, #0x8
   427a0:	mov	x0, x24
   427a4:	mov	x4, x28
   427a8:	stp	x9, x1, [x29, #120]
   427ac:	bl	cbe0 <mpfr_mpn_exp@plt>
   427b0:	cmn	w0, #0x2
   427b4:	b.eq	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.none
   427b8:	ldr	x1, [x29, #200]
   427bc:	cmn	w0, #0x1
   427c0:	csel	w25, w25, wzr, eq  // eq = none
   427c4:	csel	w2, w0, wzr, ne  // ne = any
   427c8:	ldr	x9, [x29, #120]
   427cc:	tbnz	x1, #63, 42a8c <__gmpfr_cuberoot@@Base+0x92c>
   427d0:	adds	x1, x1, x22
   427d4:	b.mi	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.first
   427d8:	str	x1, [x29, #200]
   427dc:	tbnz	x19, #63, 42a38 <__gmpfr_cuberoot@@Base+0x8d8>
   427e0:	sub	x19, x19, x1
   427e4:	ldr	x0, [x29, #176]
   427e8:	mov	x5, x24
   427ec:	mov	x4, x27
   427f0:	mov	x1, x9
   427f4:	add	x23, x9, x0
   427f8:	mov	x3, x26
   427fc:	mov	x0, x23
   42800:	add	w27, w2, #0x1
   42804:	mov	x6, x28
   42808:	mov	x2, #0x0                   	// #0
   4280c:	str	x9, [x29, #120]
   42810:	bl	ba60 <__gmpn_tdiv_qr@plt>
   42814:	ldr	x0, [x29, #176]
   42818:	ldr	x9, [x29, #120]
   4281c:	ldr	x24, [x23, x0]
   42820:	cbz	w25, 42848 <__gmpfr_cuberoot@@Base+0x6e8>
   42824:	mov	x0, x9
   42828:	mov	x1, x28
   4282c:	bl	c860 <__gmpn_popcount@plt>
   42830:	cbnz	x0, 42848 <__gmpfr_cuberoot@@Base+0x6e8>
   42834:	cmp	x24, #0x1
   42838:	b.eq	42b40 <__gmpfr_cuberoot@@Base+0x9e0>  // b.none
   4283c:	mov	x27, x20
   42840:	mov	x20, x23
   42844:	b	42568 <__gmpfr_cuberoot@@Base+0x408>
   42848:	cmp	x24, #0x1
   4284c:	b.ne	423f4 <__gmpfr_cuberoot@@Base+0x294>  // b.any
   42850:	mov	w25, #0x0                   	// #0
   42854:	ldr	x2, [x29, #152]
   42858:	add	x19, x19, #0x1
   4285c:	mov	x1, x23
   42860:	mov	x0, x23
   42864:	mov	w3, #0x1                   	// #1
   42868:	bl	bce0 <__gmpn_rshift@plt>
   4286c:	b	423f0 <__gmpfr_cuberoot@@Base+0x290>
   42870:	cmp	x0, x24
   42874:	mov	w25, #0x0                   	// #0
   42878:	b.ne	42888 <__gmpfr_cuberoot@@Base+0x728>  // b.any
   4287c:	ldr	x0, [x23]
   42880:	cmp	x0, #0x0
   42884:	cset	w25, eq  // eq = none
   42888:	sub	x2, x2, #0x1
   4288c:	add	x1, x23, #0x8
   42890:	mov	x0, x23
   42894:	bl	c520 <__gmpn_copyi@plt>
   42898:	b	426ac <__gmpfr_cuberoot@@Base+0x54c>
   4289c:	lsl	x5, x27, #3
   428a0:	mov	w3, w19
   428a4:	add	x0, x23, x5
   428a8:	mov	x1, x23
   428ac:	str	x5, [x29, #128]
   428b0:	bl	bcc0 <__gmpn_lshift@plt>
   428b4:	ldr	x5, [x29, #128]
   428b8:	cbz	x27, 42368 <__gmpfr_cuberoot@@Base+0x208>
   428bc:	mov	x2, x5
   428c0:	mov	x0, x23
   428c4:	mov	w1, #0x0                   	// #0
   428c8:	bl	c110 <memset@plt>
   428cc:	b	42368 <__gmpfr_cuberoot@@Base+0x208>
   428d0:	cmp	x24, #0x0
   428d4:	b.le	423a0 <__gmpfr_cuberoot@@Base+0x240>
   428d8:	sub	x3, x24, x1
   428dc:	neg	x4, x1
   428e0:	cmp	x3, x4
   428e4:	b.cc	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.lo, b.ul, b.last
   428e8:	tbnz	x3, #63, 42a00 <__gmpfr_cuberoot@@Base+0x8a0>
   428ec:	neg	x4, x3
   428f0:	sxtw	x2, w2
   428f4:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   428f8:	sdiv	x0, x3, x2
   428fc:	cmp	x0, x4
   42900:	b.ge	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.tcont
   42904:	ldr	x1, [x20, #48]
   42908:	mul	x4, x2, x4
   4290c:	tbz	x1, #63, 426e0 <__gmpfr_cuberoot@@Base+0x580>
   42910:	neg	x4, x4
   42914:	sub	x1, x4, x1
   42918:	cmp	x1, x4
   4291c:	b.cc	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.lo, b.ul, b.last
   42920:	neg	x4, x1
   42924:	mov	w0, #0x1                   	// #1
   42928:	tbz	x1, #63, 426fc <__gmpfr_cuberoot@@Base+0x59c>
   4292c:	cmp	x1, x3
   42930:	b.ne	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.any
   42934:	cmp	x19, #0x0
   42938:	mov	x4, x1
   4293c:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
   42940:	b.ne	42708 <__gmpfr_cuberoot@@Base+0x5a8>  // b.any
   42944:	nop
   42948:	add	x19, x19, x4
   4294c:	b	423f0 <__gmpfr_cuberoot@@Base+0x290>
   42950:	add	x1, x22, x1
   42954:	str	x1, [x29, #200]
   42958:	tbnz	x19, #63, 42ae8 <__gmpfr_cuberoot@@Base+0x988>
   4295c:	tbz	x1, #63, 4251c <__gmpfr_cuberoot@@Base+0x3bc>
   42960:	add	x19, x19, x1
   42964:	b	42530 <__gmpfr_cuberoot@@Base+0x3d0>
   42968:	mov	w27, #0x0                   	// #0
   4296c:	b	423f0 <__gmpfr_cuberoot@@Base+0x290>
   42970:	b.ne	428f0 <__gmpfr_cuberoot@@Base+0x790>  // b.any
   42974:	b	426d0 <__gmpfr_cuberoot@@Base+0x570>
   42978:	lsl	x5, x27, #3
   4297c:	mov	x1, x23
   42980:	add	x0, x23, x5
   42984:	str	x5, [x29, #128]
   42988:	bl	bae0 <__gmpn_copyd@plt>
   4298c:	ldr	x5, [x29, #128]
   42990:	b	428bc <__gmpfr_cuberoot@@Base+0x75c>
   42994:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   42998:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   4299c:	add	x2, x2, #0xf80
   429a0:	add	x0, x0, #0x460
   429a4:	mov	w1, #0x372                 	// #882
   429a8:	bl	cb40 <mpfr_assert_fail@plt>
   429ac:	neg	x19, x4
   429b0:	b	423f0 <__gmpfr_cuberoot@@Base+0x290>
   429b4:	mov	x27, x20
   429b8:	add	x0, x29, #0xc8
   429bc:	mov	x20, x23
   429c0:	str	x0, [x29, #128]
   429c4:	b	42568 <__gmpfr_cuberoot@@Base+0x408>
   429c8:	adds	x19, x19, x22
   429cc:	b.pl	425cc <__gmpfr_cuberoot@@Base+0x46c>  // b.nfrst
   429d0:	cmp	w1, #0x0
   429d4:	ldr	w1, [x29, #172]
   429d8:	ldr	x0, [x29, #136]
   429dc:	mov	w2, #0x1                   	// #1
   429e0:	cneg	w2, w2, ne  // ne = any
   429e4:	bl	bf40 <mpfr_overflow@plt>
   429e8:	mov	w1, w0
   429ec:	b	42624 <__gmpfr_cuberoot@@Base+0x4c4>
   429f0:	sub	x3, x24, x3
   429f4:	cmp	x3, x24
   429f8:	b.cc	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.lo, b.ul, b.last
   429fc:	tbz	x3, #63, 4278c <__gmpfr_cuberoot@@Base+0x62c>
   42a00:	ldr	w1, [x29, #172]
   42a04:	mov	w2, #0x1                   	// #1
   42a08:	ldr	w0, [x20]
   42a0c:	cmp	w1, #0x0
   42a10:	csel	w1, w1, w2, ne  // ne = any
   42a14:	cmp	w0, #0x0
   42a18:	ldr	x0, [x29, #136]
   42a1c:	cneg	w2, w2, ne  // ne = any
   42a20:	bl	c3c0 <mpfr_underflow@plt>
   42a24:	mov	w1, w0
   42a28:	str	w0, [x29, #200]
   42a2c:	b	42628 <__gmpfr_cuberoot@@Base+0x4c8>
   42a30:	cmp	x1, #0x0
   42a34:	b.le	427e0 <__gmpfr_cuberoot@@Base+0x680>
   42a38:	sub	x1, x1, x19
   42a3c:	neg	x19, x19
   42a40:	cmp	x1, x19
   42a44:	b.cc	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.lo, b.ul, b.last
   42a48:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   42a4c:	cmp	x1, x0
   42a50:	b.cc	42b38 <__gmpfr_cuberoot@@Base+0x9d8>  // b.lo, b.ul, b.last
   42a54:	b.ne	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.any
   42a58:	mov	x19, #0x2                   	// #2
   42a5c:	movk	x19, #0x8000, lsl #48
   42a60:	b	427e4 <__gmpfr_cuberoot@@Base+0x684>
   42a64:	cbz	w1, 42624 <__gmpfr_cuberoot@@Base+0x4c4>
   42a68:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   42a6c:	ldr	x3, [x0, #2576]
   42a70:	add	x0, x0, #0xa10
   42a74:	blr	x3
   42a78:	add	x0, x2, x0
   42a7c:	ldr	w2, [x0]
   42a80:	orr	w2, w2, #0x8
   42a84:	str	w2, [x0]
   42a88:	b	42624 <__gmpfr_cuberoot@@Base+0x4c4>
   42a8c:	add	x1, x22, x1
   42a90:	str	x1, [x29, #200]
   42a94:	tbnz	x19, #63, 42a30 <__gmpfr_cuberoot@@Base+0x8d0>
   42a98:	cmp	x1, #0x0
   42a9c:	b.gt	427e0 <__gmpfr_cuberoot@@Base+0x680>
   42aa0:	sub	x1, x19, x1
   42aa4:	mov	x0, #0xfffffffffffffffd    	// #-3
   42aa8:	cmp	x1, x19
   42aac:	movk	x0, #0x7fff, lsl #48
   42ab0:	ccmp	x1, x0, #0x2, cs  // cs = hs, nlast
   42ab4:	b.hi	42b5c <__gmpfr_cuberoot@@Base+0x9fc>  // b.pmore
   42ab8:	mov	x19, x1
   42abc:	b	427e4 <__gmpfr_cuberoot@@Base+0x684>
   42ac0:	cmp	x3, #0x0
   42ac4:	b.le	42788 <__gmpfr_cuberoot@@Base+0x628>
   42ac8:	sub	x3, x3, x24
   42acc:	neg	x4, x24
   42ad0:	cmp	x3, x4
   42ad4:	b.cc	42b5c <__gmpfr_cuberoot@@Base+0x9fc>  // b.lo, b.ul, b.last
   42ad8:	tbnz	x3, #63, 42b50 <__gmpfr_cuberoot@@Base+0x9f0>
   42adc:	neg	x3, x3
   42ae0:	str	x3, [x29, #200]
   42ae4:	b	42790 <__gmpfr_cuberoot@@Base+0x630>
   42ae8:	tbz	x1, #63, 42960 <__gmpfr_cuberoot@@Base+0x800>
   42aec:	neg	x19, x19
   42af0:	sub	x1, x19, x1
   42af4:	cmp	x1, x19
   42af8:	b.cc	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.lo, b.ul, b.last
   42afc:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   42b00:	cmp	x1, x0
   42b04:	b.cc	42b30 <__gmpfr_cuberoot@@Base+0x9d0>  // b.lo, b.ul, b.last
   42b08:	b.ne	42a00 <__gmpfr_cuberoot@@Base+0x8a0>  // b.any
   42b0c:	mov	x19, #0x2                   	// #2
   42b10:	movk	x19, #0x8000, lsl #48
   42b14:	b	42530 <__gmpfr_cuberoot@@Base+0x3d0>
   42b18:	ldr	x0, [x29, #104]
   42b1c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   42b20:	mov	x5, x0
   42b24:	ldr	w2, [x20, #4]
   42b28:	ldr	x3, [x20, #40]
   42b2c:	b	424a4 <__gmpfr_cuberoot@@Base+0x344>
   42b30:	neg	x19, x1
   42b34:	b	42530 <__gmpfr_cuberoot@@Base+0x3d0>
   42b38:	neg	x19, x1
   42b3c:	b	427e4 <__gmpfr_cuberoot@@Base+0x684>
   42b40:	ldr	x25, [x23]
   42b44:	and	x25, x25, #0x1
   42b48:	sub	w25, w24, w25
   42b4c:	b	42854 <__gmpfr_cuberoot@@Base+0x6f4>
   42b50:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   42b54:	cmp	x3, x0
   42b58:	b.eq	4278c <__gmpfr_cuberoot@@Base+0x62c>  // b.none
   42b5c:	ldr	w1, [x20]
   42b60:	b	429d0 <__gmpfr_cuberoot@@Base+0x870>
   42b64:	ldr	x0, [x29, #104]
   42b68:	bl	bdc0 <mpfr_tmp_allocate@plt>
   42b6c:	mov	x9, x0
   42b70:	b	42760 <__gmpfr_cuberoot@@Base+0x600>
   42b74:	bl	c410 <mpfr_tmp_free@plt>
   42b78:	ldr	w1, [x29, #200]
   42b7c:	b	42630 <__gmpfr_cuberoot@@Base+0x4d0>
   42b80:	mov	x28, x1
   42b84:	mov	x21, x1
   42b88:	mov	x22, #0x40                  	// #64
   42b8c:	mov	x20, #0x0                   	// #0
   42b90:	str	xzr, [x29, #192]
   42b94:	b	42298 <__gmpfr_cuberoot@@Base+0x138>

0000000000042b98 <mpfr_strtofr@@Base>:
   42b98:	stp	x29, x30, [sp, #-176]!
   42b9c:	mov	x29, sp
   42ba0:	stp	x19, x20, [sp, #16]
   42ba4:	stp	x21, x22, [sp, #32]
   42ba8:	stp	x23, x24, [sp, #48]
   42bac:	stp	x25, x26, [sp, #64]
   42bb0:	mov	w25, w3
   42bb4:	sub	w3, w3, #0x2
   42bb8:	stp	x27, x28, [sp, #80]
   42bbc:	cmp	w3, #0x3c
   42bc0:	ccmp	w25, #0x0, #0x4, hi  // hi = pmore
   42bc4:	b.ne	432f0 <mpfr_strtofr@@Base+0x758>  // b.any
   42bc8:	mov	x19, x0
   42bcc:	mov	x20, x1
   42bd0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   42bd4:	mov	w1, #0x1                   	// #1
   42bd8:	mov	x21, x2
   42bdc:	mov	w22, w4
   42be0:	str	w1, [x19, #8]
   42be4:	mov	w23, #0x2e                  	// #46
   42be8:	str	x0, [x19, #16]
   42bec:	bl	bea0 <localeconv@plt>
   42bf0:	ldr	x0, [x0]
   42bf4:	ldrb	w0, [x0, #1]
   42bf8:	cbz	w0, 42f28 <mpfr_strtofr@@Base+0x390>
   42bfc:	str	xzr, [sp, #120]
   42c00:	bl	c630 <__ctype_b_loc@plt>
   42c04:	mov	x27, x0
   42c08:	mov	x1, x20
   42c0c:	ldr	x0, [x0]
   42c10:	mov	x24, x1
   42c14:	ldrb	w2, [x1]
   42c18:	add	x1, x1, #0x1
   42c1c:	ubfiz	x3, x2, #1, #8
   42c20:	ldrh	w3, [x0, x3]
   42c24:	tbnz	w3, #13, 42c10 <mpfr_strtofr@@Base+0x78>
   42c28:	cmp	w2, #0x2d
   42c2c:	sub	w0, w2, #0x2b
   42c30:	cset	w3, eq  // eq = none
   42c34:	str	w3, [sp, #112]
   42c38:	mov	w5, w2
   42c3c:	mov	w3, #0xfd                  	// #253
   42c40:	tst	w0, w3
   42c44:	b.ne	42c50 <mpfr_strtofr@@Base+0xb8>  // b.any
   42c48:	ldrb	w5, [x24, #1]
   42c4c:	mov	x24, x1
   42c50:	adrp	x4, 65000 <mpfr_bases@@Base+0x6f8>
   42c54:	add	x4, x4, #0x498
   42c58:	mov	x0, #0x0                   	// #0
   42c5c:	mov	w3, #0x40                  	// #64
   42c60:	ldrb	w1, [x24, x0]
   42c64:	sub	w7, w1, #0x41
   42c68:	add	w6, w1, #0x20
   42c6c:	and	w7, w7, #0xff
   42c70:	and	w6, w6, #0xff
   42c74:	cmp	w7, #0x1a
   42c78:	csel	w1, w6, w1, cc  // cc = lo, ul, last
   42c7c:	cmp	w1, w3
   42c80:	b.ne	42cf8 <mpfr_strtofr@@Base+0x160>  // b.any
   42c84:	add	x0, x0, #0x1
   42c88:	ldrb	w3, [x0, x4]
   42c8c:	cbnz	w3, 42c60 <mpfr_strtofr@@Base+0xc8>
   42c90:	ldrb	w0, [x24, #5]
   42c94:	add	x20, x24, #0x5
   42c98:	cmp	w0, #0x28
   42c9c:	b.eq	42d50 <mpfr_strtofr@@Base+0x1b8>  // b.none
   42ca0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   42ca4:	ldr	x1, [x0, #2576]
   42ca8:	add	x0, x0, #0xa10
   42cac:	blr	x1
   42cb0:	mrs	x2, tpidr_el0
   42cb4:	mov	x1, #0x2                   	// #2
   42cb8:	mov	w22, #0x0                   	// #0
   42cbc:	movk	x1, #0x8000, lsl #48
   42cc0:	str	x1, [x19, #16]
   42cc4:	ldr	w1, [x2, x0]
   42cc8:	orr	w1, w1, #0x4
   42ccc:	str	w1, [x2, x0]
   42cd0:	cbz	x21, 42cd8 <mpfr_strtofr@@Base+0x140>
   42cd4:	str	x20, [x21]
   42cd8:	mov	w0, w22
   42cdc:	ldp	x19, x20, [sp, #16]
   42ce0:	ldp	x21, x22, [sp, #32]
   42ce4:	ldp	x23, x24, [sp, #48]
   42ce8:	ldp	x25, x26, [sp, #64]
   42cec:	ldp	x27, x28, [sp, #80]
   42cf0:	ldp	x29, x30, [sp], #176
   42cf4:	ret
   42cf8:	cmp	w25, #0x10
   42cfc:	b.gt	42d9c <mpfr_strtofr@@Base+0x204>
   42d00:	adrp	x7, 65000 <mpfr_bases@@Base+0x6f8>
   42d04:	add	x7, x7, #0x4a0
   42d08:	mov	x0, #0x0                   	// #0
   42d0c:	mov	w6, #0x6e                  	// #110
   42d10:	ldrb	w1, [x24, x0]
   42d14:	sub	w4, w1, #0x41
   42d18:	add	w3, w1, #0x20
   42d1c:	and	w4, w4, #0xff
   42d20:	and	w3, w3, #0xff
   42d24:	cmp	w4, #0x1a
   42d28:	csel	w1, w3, w1, cc  // cc = lo, ul, last
   42d2c:	cmp	w1, w6
   42d30:	b.ne	42d9c <mpfr_strtofr@@Base+0x204>  // b.any
   42d34:	add	x0, x0, #0x1
   42d38:	ldrb	w6, [x0, x7]
   42d3c:	cbnz	w6, 42d10 <mpfr_strtofr@@Base+0x178>
   42d40:	ldrb	w0, [x24, #3]
   42d44:	add	x20, x24, #0x3
   42d48:	cmp	w0, #0x28
   42d4c:	b.ne	42ca0 <mpfr_strtofr@@Base+0x108>  // b.any
   42d50:	ldrb	w1, [x20, #1]
   42d54:	add	x2, x20, #0x1
   42d58:	cmp	w1, #0x29
   42d5c:	b.eq	42d94 <mpfr_strtofr@@Base+0x1fc>  // b.none
   42d60:	and	w0, w1, #0xffffffdf
   42d64:	sub	w0, w0, #0x41
   42d68:	and	w0, w0, #0xff
   42d6c:	cmp	w0, #0x19
   42d70:	b.ls	42d88 <mpfr_strtofr@@Base+0x1f0>  // b.plast
   42d74:	sub	w0, w1, #0x30
   42d78:	cmp	w1, #0x5f
   42d7c:	and	w0, w0, #0xff
   42d80:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   42d84:	b.hi	42ca0 <mpfr_strtofr@@Base+0x108>  // b.pmore
   42d88:	ldrb	w1, [x2, #1]!
   42d8c:	cmp	w1, #0x29
   42d90:	b.ne	42d60 <mpfr_strtofr@@Base+0x1c8>  // b.any
   42d94:	add	x20, x2, #0x1
   42d98:	b	42ca0 <mpfr_strtofr@@Base+0x108>
   42d9c:	adrp	x7, 65000 <mpfr_bases@@Base+0x6f8>
   42da0:	add	x7, x7, #0x4a8
   42da4:	mov	x0, #0x0                   	// #0
   42da8:	mov	w6, #0x40                  	// #64
   42dac:	nop
   42db0:	ldrb	w1, [x24, x0]
   42db4:	sub	w4, w1, #0x41
   42db8:	add	w3, w1, #0x20
   42dbc:	and	w4, w4, #0xff
   42dc0:	and	w3, w3, #0xff
   42dc4:	cmp	w4, #0x1a
   42dc8:	csel	w1, w3, w1, cc  // cc = lo, ul, last
   42dcc:	cmp	w1, w6
   42dd0:	b.ne	42e04 <mpfr_strtofr@@Base+0x26c>  // b.any
   42dd4:	add	x0, x0, #0x1
   42dd8:	ldrb	w6, [x0, x7]
   42ddc:	cbnz	w6, 42db0 <mpfr_strtofr@@Base+0x218>
   42de0:	add	x20, x24, #0x5
   42de4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   42de8:	str	x0, [x19, #16]
   42dec:	cmp	w2, #0x2d
   42df0:	b.ne	43004 <mpfr_strtofr@@Base+0x46c>  // b.any
   42df4:	mov	w0, #0xffffffff            	// #-1
   42df8:	mov	w22, #0x0                   	// #0
   42dfc:	str	w0, [x19, #8]
   42e00:	b	42cd0 <mpfr_strtofr@@Base+0x138>
   42e04:	cmp	w25, #0x10
   42e08:	and	w8, w25, #0xfffffffd
   42e0c:	b.le	42edc <mpfr_strtofr@@Base+0x344>
   42e10:	mov	x28, #0x0                   	// #0
   42e14:	cbnz	w8, 42e2c <mpfr_strtofr@@Base+0x294>
   42e18:	cmp	w5, #0x30
   42e1c:	b.eq	430bc <mpfr_strtofr@@Base+0x524>  // b.none
   42e20:	mov	x28, #0x0                   	// #0
   42e24:	cbnz	w25, 42e2c <mpfr_strtofr@@Base+0x294>
   42e28:	mov	w25, #0xa                   	// #10
   42e2c:	mov	x0, x24
   42e30:	str	w25, [sp, #116]
   42e34:	bl	bab0 <strlen@plt>
   42e38:	add	x0, x0, #0x1
   42e3c:	str	x0, [sp, #144]
   42e40:	bl	ccf0 <mpfr_allocate_func@plt>
   42e44:	movi	v0.4s, #0x0
   42e48:	mov	x5, x0
   42e4c:	str	x0, [sp, #120]
   42e50:	stur	q0, [sp, #152]
   42e54:	cmp	w25, #0x24
   42e58:	mov	w3, #0x0                   	// #0
   42e5c:	b.gt	42f78 <mpfr_strtofr@@Base+0x3e0>
   42e60:	mov	x26, x24
   42e64:	ldrb	w1, [x26], #1
   42e68:	cmp	w1, #0x2e
   42e6c:	ccmp	w23, w1, #0x4, ne  // ne = any
   42e70:	b.eq	42ecc <mpfr_strtofr@@Base+0x334>  // b.none
   42e74:	nop
   42e78:	sub	w2, w1, #0x30
   42e7c:	cmp	w2, #0x9
   42e80:	b.ls	42e98 <mpfr_strtofr@@Base+0x300>  // b.plast
   42e84:	sub	w0, w1, #0x61
   42e88:	cmp	w0, #0x19
   42e8c:	b.hi	42fe0 <mpfr_strtofr@@Base+0x448>  // b.pmore
   42e90:	sub	w2, w1, #0x57
   42e94:	nop
   42e98:	cmp	w25, w2
   42e9c:	b.le	42f9c <mpfr_strtofr@@Base+0x404>
   42ea0:	strb	w2, [x5], #1
   42ea4:	cbnz	w3, 42eb4 <mpfr_strtofr@@Base+0x31c>
   42ea8:	ldr	x0, [sp, #152]
   42eac:	add	x0, x0, #0x1
   42eb0:	str	x0, [sp, #152]
   42eb4:	mov	x24, x26
   42eb8:	mov	x26, x24
   42ebc:	ldrb	w1, [x26], #1
   42ec0:	cmp	w1, #0x2e
   42ec4:	ccmp	w23, w1, #0x4, ne  // ne = any
   42ec8:	b.ne	42e78 <mpfr_strtofr@@Base+0x2e0>  // b.any
   42ecc:	cbnz	w3, 42f9c <mpfr_strtofr@@Base+0x404>
   42ed0:	mov	x24, x26
   42ed4:	mov	w3, #0x1                   	// #1
   42ed8:	b	42eb8 <mpfr_strtofr@@Base+0x320>
   42edc:	adrp	x7, 65000 <mpfr_bases@@Base+0x6f8>
   42ee0:	add	x7, x7, #0x4b0
   42ee4:	mov	x0, #0x0                   	// #0
   42ee8:	mov	w6, #0x69                  	// #105
   42eec:	nop
   42ef0:	ldrb	w1, [x24, x0]
   42ef4:	sub	w4, w1, #0x41
   42ef8:	add	w3, w1, #0x20
   42efc:	and	w4, w4, #0xff
   42f00:	and	w3, w3, #0xff
   42f04:	cmp	w4, #0x1a
   42f08:	csel	w1, w3, w1, cc  // cc = lo, ul, last
   42f0c:	cmp	w1, w6
   42f10:	b.ne	43014 <mpfr_strtofr@@Base+0x47c>  // b.any
   42f14:	add	x0, x0, #0x1
   42f18:	ldrb	w6, [x0, x7]
   42f1c:	cbnz	w6, 42ef0 <mpfr_strtofr@@Base+0x358>
   42f20:	add	x20, x24, #0x8
   42f24:	b	42de4 <mpfr_strtofr@@Base+0x24c>
   42f28:	bl	bea0 <localeconv@plt>
   42f2c:	ldr	x0, [x0]
   42f30:	ldrb	w23, [x0]
   42f34:	b	42bfc <mpfr_strtofr@@Base+0x64>
   42f38:	sub	w2, w1, #0x30
   42f3c:	cmp	w2, #0x9
   42f40:	b.ls	42f60 <mpfr_strtofr@@Base+0x3c8>  // b.plast
   42f44:	sub	w0, w1, #0x61
   42f48:	cmp	w0, #0x19
   42f4c:	b.hi	42fcc <mpfr_strtofr@@Base+0x434>  // b.pmore
   42f50:	sub	w2, w1, #0x3d
   42f54:	cmp	w25, w2
   42f58:	b.le	42f9c <mpfr_strtofr@@Base+0x404>
   42f5c:	nop
   42f60:	strb	w2, [x5], #1
   42f64:	cbnz	w3, 42f74 <mpfr_strtofr@@Base+0x3dc>
   42f68:	ldr	x0, [sp, #152]
   42f6c:	add	x0, x0, #0x1
   42f70:	str	x0, [sp, #152]
   42f74:	mov	x24, x26
   42f78:	mov	x26, x24
   42f7c:	ldrb	w1, [x26], #1
   42f80:	cmp	w1, #0x2e
   42f84:	ccmp	w1, w23, #0x4, ne  // ne = any
   42f88:	b.ne	42f38 <mpfr_strtofr@@Base+0x3a0>  // b.any
   42f8c:	cbnz	w3, 42f9c <mpfr_strtofr@@Base+0x404>
   42f90:	mov	x24, x26
   42f94:	mov	w3, #0x1                   	// #1
   42f98:	b	42f78 <mpfr_strtofr@@Base+0x3e0>
   42f9c:	ldr	x0, [sp, #120]
   42fa0:	sub	x5, x5, x0
   42fa4:	str	x5, [sp, #136]
   42fa8:	cbnz	x5, 430cc <mpfr_strtofr@@Base+0x534>
   42fac:	cbnz	x28, 42ff4 <mpfr_strtofr@@Base+0x45c>
   42fb0:	cbnz	x0, 42fbc <mpfr_strtofr@@Base+0x424>
   42fb4:	mov	w22, #0x0                   	// #0
   42fb8:	b	42cd0 <mpfr_strtofr@@Base+0x138>
   42fbc:	ldr	x1, [sp, #144]
   42fc0:	mov	w22, #0x0                   	// #0
   42fc4:	bl	cc20 <mpfr_free_func@plt>
   42fc8:	b	42cd0 <mpfr_strtofr@@Base+0x138>
   42fcc:	sub	w0, w1, #0x41
   42fd0:	cmp	w0, #0x19
   42fd4:	b.hi	42f9c <mpfr_strtofr@@Base+0x404>  // b.pmore
   42fd8:	sub	w2, w1, #0x37
   42fdc:	b	42f60 <mpfr_strtofr@@Base+0x3c8>
   42fe0:	sub	w0, w1, #0x41
   42fe4:	cmp	w0, #0x19
   42fe8:	b.hi	42f9c <mpfr_strtofr@@Base+0x404>  // b.pmore
   42fec:	sub	w2, w1, #0x37
   42ff0:	b	42e98 <mpfr_strtofr@@Base+0x300>
   42ff4:	mov	x24, x28
   42ff8:	mov	x5, x0
   42ffc:	mov	x28, #0x0                   	// #0
   43000:	b	42e50 <mpfr_strtofr@@Base+0x2b8>
   43004:	mov	w0, #0x1                   	// #1
   43008:	mov	w22, #0x0                   	// #0
   4300c:	str	w0, [x19, #8]
   43010:	b	42cd0 <mpfr_strtofr@@Base+0x138>
   43014:	adrp	x7, 65000 <mpfr_bases@@Base+0x6f8>
   43018:	add	x7, x7, #0x4c0
   4301c:	mov	x0, #0x0                   	// #0
   43020:	mov	w6, #0x69                  	// #105
   43024:	nop
   43028:	ldrb	w1, [x24, x0]
   4302c:	sub	w4, w1, #0x41
   43030:	add	w3, w1, #0x20
   43034:	and	w4, w4, #0xff
   43038:	and	w3, w3, #0xff
   4303c:	cmp	w4, #0x1a
   43040:	csel	w1, w3, w1, cc  // cc = lo, ul, last
   43044:	cmp	w1, w6
   43048:	b.ne	43060 <mpfr_strtofr@@Base+0x4c8>  // b.any
   4304c:	add	x0, x0, #0x1
   43050:	ldrb	w6, [x0, x7]
   43054:	cbnz	w6, 43028 <mpfr_strtofr@@Base+0x490>
   43058:	add	x20, x24, #0x3
   4305c:	b	42de4 <mpfr_strtofr@@Base+0x24c>
   43060:	tst	w25, #0xffffffef
   43064:	b.ne	42e10 <mpfr_strtofr@@Base+0x278>  // b.any
   43068:	cmp	w5, #0x30
   4306c:	b.eq	4307c <mpfr_strtofr@@Base+0x4e4>  // b.none
   43070:	cbz	w8, 42e20 <mpfr_strtofr@@Base+0x288>
   43074:	mov	x28, #0x0                   	// #0
   43078:	b	42e2c <mpfr_strtofr@@Base+0x294>
   4307c:	ldrb	w0, [x24, #1]
   43080:	and	w0, w0, #0xffffffdf
   43084:	and	w0, w0, #0xff
   43088:	cmp	w0, #0x58
   4308c:	b.eq	430ac <mpfr_strtofr@@Base+0x514>  // b.none
   43090:	cbnz	w8, 43074 <mpfr_strtofr@@Base+0x4dc>
   43094:	cmp	w0, #0x42
   43098:	b.ne	42e20 <mpfr_strtofr@@Base+0x288>  // b.any
   4309c:	mov	x28, x24
   430a0:	mov	w25, #0x2                   	// #2
   430a4:	add	x24, x24, #0x2
   430a8:	b	42e2c <mpfr_strtofr@@Base+0x294>
   430ac:	mov	x28, x24
   430b0:	mov	w25, #0x10                  	// #16
   430b4:	add	x24, x24, #0x2
   430b8:	b	42e2c <mpfr_strtofr@@Base+0x294>
   430bc:	ldrb	w0, [x24, #1]
   430c0:	and	w0, w0, #0xffffffdf
   430c4:	and	w0, w0, #0xff
   430c8:	b	43094 <mpfr_strtofr@@Base+0x4fc>
   430cc:	cmp	w1, #0x40
   430d0:	b.eq	430e8 <mpfr_strtofr@@Base+0x550>  // b.none
   430d4:	cmp	w25, #0xa
   430d8:	b.gt	430f8 <mpfr_strtofr@@Base+0x560>
   430dc:	and	w2, w1, #0xffffffdf
   430e0:	cmp	w2, #0x45
   430e4:	b.ne	430f8 <mpfr_strtofr@@Base+0x560>  // b.any
   430e8:	ldrb	w3, [x26]
   430ec:	ldr	x2, [x27]
   430f0:	ldrh	w2, [x2, x3, lsl #1]
   430f4:	tbz	w2, #13, 43238 <mpfr_strtofr@@Base+0x6a0>
   430f8:	cmp	w25, #0x2
   430fc:	ccmp	w25, #0x10, #0x4, ne  // ne = any
   43100:	b.ne	431b8 <mpfr_strtofr@@Base+0x620>  // b.any
   43104:	and	w1, w1, #0xffffffdf
   43108:	cmp	w1, #0x50
   4310c:	b.ne	431b8 <mpfr_strtofr@@Base+0x620>  // b.any
   43110:	ldrb	w2, [x26]
   43114:	mov	w20, #0x1                   	// #1
   43118:	ldr	x1, [x27]
   4311c:	ldrh	w1, [x1, x2, lsl #1]
   43120:	tbz	w1, #13, 432b4 <mpfr_strtofr@@Base+0x71c>
   43124:	nop
   43128:	ldr	x4, [sp, #152]
   4312c:	add	x5, x0, x5
   43130:	mov	x1, x0
   43134:	sub	x4, x4, #0x1
   43138:	b	43158 <mpfr_strtofr@@Base+0x5c0>
   4313c:	sub	x2, x0, x1
   43140:	add	x1, x1, #0x1
   43144:	add	x2, x4, x2
   43148:	sub	x3, x5, x1
   4314c:	str	x3, [sp, #136]
   43150:	str	x2, [sp, #152]
   43154:	cbz	x3, 431f0 <mpfr_strtofr@@Base+0x658>
   43158:	ldrb	w2, [x1]
   4315c:	cbz	w2, 4313c <mpfr_strtofr@@Base+0x5a4>
   43160:	ldr	x2, [sp, #136]
   43164:	cbnz	x2, 43174 <mpfr_strtofr@@Base+0x5dc>
   43168:	b	431f0 <mpfr_strtofr@@Base+0x658>
   4316c:	str	x2, [sp, #136]
   43170:	cbz	x2, 431f0 <mpfr_strtofr@@Base+0x658>
   43174:	sub	x2, x2, #0x1
   43178:	ldrb	w3, [x1, x2]
   4317c:	cbz	w3, 4316c <mpfr_strtofr@@Base+0x5d4>
   43180:	str	x1, [sp, #128]
   43184:	cbz	x0, 43278 <mpfr_strtofr@@Base+0x6e0>
   43188:	cmp	w20, #0x1
   4318c:	b.ne	432e4 <mpfr_strtofr@@Base+0x74c>  // b.any
   43190:	mov	w2, w22
   43194:	add	x1, sp, #0x70
   43198:	mov	x0, x19
   4319c:	bl	42238 <__gmpfr_cuberoot@@Base+0xd8>
   431a0:	mov	w22, w0
   431a4:	mov	x20, x24
   431a8:	ldr	x0, [sp, #120]
   431ac:	ldr	x1, [sp, #144]
   431b0:	bl	cc20 <mpfr_free_func@plt>
   431b4:	b	42cd0 <mpfr_strtofr@@Base+0x138>
   431b8:	mov	w20, #0x1                   	// #1
   431bc:	b	43128 <mpfr_strtofr@@Base+0x590>
   431c0:	tbz	x1, #63, 432a8 <mpfr_strtofr@@Base+0x710>
   431c4:	neg	x0, x0
   431c8:	subs	x1, x0, x1
   431cc:	b.mi	432d8 <mpfr_strtofr@@Base+0x740>  // b.first
   431d0:	neg	x1, x1
   431d4:	mov	w20, #0x1                   	// #1
   431d8:	str	x1, [sp, #152]
   431dc:	ldr	x5, [sp, #136]
   431e0:	ldr	x0, [sp, #120]
   431e4:	mov	x1, x0
   431e8:	cbnz	x5, 43128 <mpfr_strtofr@@Base+0x590>
   431ec:	nop
   431f0:	ldr	w22, [sp, #112]
   431f4:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   431f8:	str	x2, [x19, #16]
   431fc:	str	x1, [sp, #128]
   43200:	cbz	w22, 43224 <mpfr_strtofr@@Base+0x68c>
   43204:	mov	w1, #0xffffffff            	// #-1
   43208:	str	w1, [x19, #8]
   4320c:	cbz	x0, 43218 <mpfr_strtofr@@Base+0x680>
   43210:	ldr	x1, [sp, #144]
   43214:	bl	cc20 <mpfr_free_func@plt>
   43218:	mov	x20, x24
   4321c:	mov	w22, #0x0                   	// #0
   43220:	b	42cd0 <mpfr_strtofr@@Base+0x138>
   43224:	mov	w1, #0x1                   	// #1
   43228:	str	w1, [x19, #8]
   4322c:	cbnz	x0, 43210 <mpfr_strtofr@@Base+0x678>
   43230:	mov	x20, x24
   43234:	b	42cd0 <mpfr_strtofr@@Base+0x138>
   43238:	add	x1, sp, #0x68
   4323c:	mov	w2, #0xa                   	// #10
   43240:	mov	x0, x26
   43244:	bl	c650 <strtol@plt>
   43248:	ldr	x2, [sp, #104]
   4324c:	ldr	x1, [sp, #152]
   43250:	cmp	x2, x26
   43254:	csel	x24, x24, x2, eq  // eq = none
   43258:	tbnz	x0, #63, 431c0 <mpfr_strtofr@@Base+0x628>
   4325c:	tbnz	x1, #63, 432a8 <mpfr_strtofr@@Base+0x710>
   43260:	adds	x1, x0, x1
   43264:	mov	w20, #0x1                   	// #1
   43268:	b.pl	431d8 <mpfr_strtofr@@Base+0x640>  // b.nfrst
   4326c:	mov	x1, x0
   43270:	mov	w20, #0x2                   	// #2
   43274:	b	431d8 <mpfr_strtofr@@Base+0x640>
   43278:	cmp	w20, #0x1
   4327c:	b.eq	43190 <mpfr_strtofr@@Base+0x5f8>  // b.none
   43280:	ldr	w3, [sp, #112]
   43284:	mov	w1, w22
   43288:	mov	x0, x19
   4328c:	mov	w2, #0x1                   	// #1
   43290:	cmp	w3, #0x0
   43294:	mov	x20, x24
   43298:	cneg	w2, w2, ne  // ne = any
   4329c:	bl	bf40 <mpfr_overflow@plt>
   432a0:	mov	w22, w0
   432a4:	b	42cd0 <mpfr_strtofr@@Base+0x138>
   432a8:	add	x1, x0, x1
   432ac:	mov	w20, #0x1                   	// #1
   432b0:	b	431d8 <mpfr_strtofr@@Base+0x640>
   432b4:	add	x1, sp, #0x68
   432b8:	mov	x0, x26
   432bc:	mov	w2, #0xa                   	// #10
   432c0:	bl	c650 <strtol@plt>
   432c4:	str	x0, [sp, #160]
   432c8:	ldr	x0, [sp, #104]
   432cc:	cmp	x0, x26
   432d0:	csel	x24, x24, x0, eq  // eq = none
   432d4:	b	431dc <mpfr_strtofr@@Base+0x644>
   432d8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   432dc:	mov	w20, #0x1                   	// #1
   432e0:	b	431d8 <mpfr_strtofr@@Base+0x640>
   432e4:	ldr	x1, [sp, #144]
   432e8:	bl	cc20 <mpfr_free_func@plt>
   432ec:	b	43280 <mpfr_strtofr@@Base+0x6e8>
   432f0:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   432f4:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   432f8:	add	x2, x2, #0x470
   432fc:	add	x0, x0, #0x460
   43300:	mov	w1, #0x3b0                 	// #944
   43304:	bl	cb40 <mpfr_assert_fail@plt>
   43308:	stp	x29, x30, [sp, #-272]!
   4330c:	mov	x29, sp
   43310:	stp	x25, x26, [sp, #64]
   43314:	mov	x25, x2
   43318:	stp	x19, x20, [sp, #16]
   4331c:	mov	w19, w4
   43320:	stp	x23, x24, [sp, #48]
   43324:	mov	x23, x1
   43328:	mov	x1, #0x1                   	// #1
   4332c:	str	x0, [sp, #96]
   43330:	mov	x0, x2
   43334:	str	w3, [sp, #128]
   43338:	bl	bc00 <__gmpz_cmpabs_ui@plt>
   4333c:	ldr	w1, [x25, #4]
   43340:	cbz	w0, 435a0 <mpfr_strtofr@@Base+0xa08>
   43344:	ldr	x0, [x25, #8]
   43348:	cmp	w1, #0x0
   4334c:	cneg	w1, w1, lt  // lt = tstop
   43350:	str	x0, [sp, #152]
   43354:	ldp	x2, x3, [x25]
   43358:	add	x0, x0, w1, sxtw #3
   4335c:	stp	x2, x3, [sp, #160]
   43360:	sbfiz	x2, x1, #6, #32
   43364:	ldur	x0, [x0, #-8]
   43368:	str	w1, [sp, #164]
   4336c:	ldr	x1, [x23, #16]
   43370:	clz	x0, x0
   43374:	sub	x0, x2, x0
   43378:	stp	x21, x22, [sp, #32]
   4337c:	cmp	x1, #0x0
   43380:	stp	x27, x28, [sp, #80]
   43384:	mov	w21, #0x3                   	// #3
   43388:	mov	w27, #0x1                   	// #1
   4338c:	str	x0, [sp, #112]
   43390:	b.gt	433ac <mpfr_strtofr@@Base+0x814>
   43394:	ldr	w1, [x23, #8]
   43398:	mov	w0, w21
   4339c:	mov	w27, #0x2                   	// #2
   433a0:	mov	w21, w27
   433a4:	cmp	w1, #0x0
   433a8:	csel	w27, w27, w0, gt
   433ac:	ldr	x0, [sp, #96]
   433b0:	ldr	x0, [x0]
   433b4:	str	x0, [sp, #104]
   433b8:	cbnz	w19, 4354c <mpfr_strtofr@@Base+0x9b4>
   433bc:	ldr	x1, [sp, #104]
   433c0:	add	x28, sp, #0xb0
   433c4:	mov	x0, x28
   433c8:	eor	w19, w19, #0x1
   433cc:	mrs	x20, tpidr_el0
   433d0:	add	x22, sp, #0xa0
   433d4:	bl	ca80 <mpfr_init2@plt>
   433d8:	mov	w24, #0x27                  	// #39
   433dc:	ldr	x0, [sp, #112]
   433e0:	sub	x1, x0, #0x3
   433e4:	sub	x0, x0, #0x2
   433e8:	str	x1, [sp, #120]
   433ec:	and	w1, w19, #0x1
   433f0:	str	w1, [sp, #132]
   433f4:	str	x0, [sp, #136]
   433f8:	mov	x0, #0x40                  	// #64
   433fc:	str	x0, [sp, #144]
   43400:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43404:	ldr	x1, [x0, #2576]
   43408:	add	x0, x0, #0xa10
   4340c:	blr	x1
   43410:	mov	w3, w21
   43414:	mov	x1, x23
   43418:	mov	x2, x23
   4341c:	str	wzr, [x20, x0]
   43420:	mov	x0, x28
   43424:	bl	bd50 <mpfr_mul@plt>
   43428:	mov	w19, w0
   4342c:	ldr	x1, [sp, #136]
   43430:	mov	x0, x22
   43434:	bl	bfe0 <__gmpz_tstbit@plt>
   43438:	cbnz	w0, 43584 <mpfr_strtofr@@Base+0x9ec>
   4343c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43440:	ldr	x1, [x0, #2576]
   43444:	add	x0, x0, #0xa10
   43448:	blr	x1
   4344c:	ldr	w0, [x20, x0]
   43450:	ldr	x1, [sp, #120]
   43454:	mov	x26, x1
   43458:	cmn	x1, #0x1
   4345c:	b.eq	434b0 <mpfr_strtofr@@Base+0x918>  // b.none
   43460:	tst	w0, w24
   43464:	b.ne	434b0 <mpfr_strtofr@@Base+0x918>  // b.any
   43468:	mov	w3, w21
   4346c:	mov	x2, x28
   43470:	mov	x1, x28
   43474:	mov	x0, x28
   43478:	bl	bd50 <mpfr_mul@plt>
   4347c:	orr	w19, w19, w0
   43480:	mov	x1, x26
   43484:	mov	x0, x22
   43488:	bl	bfe0 <__gmpz_tstbit@plt>
   4348c:	cbnz	w0, 4350c <mpfr_strtofr@@Base+0x974>
   43490:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43494:	ldr	x1, [x0, #2576]
   43498:	add	x0, x0, #0xa10
   4349c:	blr	x1
   434a0:	sub	x26, x26, #0x1
   434a4:	ldr	w0, [x20, x0]
   434a8:	cmn	x26, #0x1
   434ac:	b.ne	43460 <mpfr_strtofr@@Base+0x8c8>  // b.any
   434b0:	ldr	w2, [sp, #132]
   434b4:	cmp	w19, #0x0
   434b8:	and	w1, w0, #0x2
   434bc:	csinc	w2, w2, wzr, ne  // ne = any
   434c0:	cbz	w2, 435d0 <mpfr_strtofr@@Base+0xa38>
   434c4:	cbnz	w1, 43760 <mpfr_strtofr@@Base+0xbc8>
   434c8:	tbnz	w0, #0, 4366c <mpfr_strtofr@@Base+0xad4>
   434cc:	ldr	w2, [sp, #128]
   434d0:	mov	x1, x28
   434d4:	ldr	w3, [sp, #184]
   434d8:	ldr	x0, [sp, #96]
   434dc:	bl	c6a0 <mpfr_set4@plt>
   434e0:	mov	w19, w0
   434e4:	mov	x0, x28
   434e8:	bl	c070 <mpfr_clear@plt>
   434ec:	mov	w0, w19
   434f0:	ldp	x19, x20, [sp, #16]
   434f4:	ldp	x21, x22, [sp, #32]
   434f8:	ldp	x23, x24, [sp, #48]
   434fc:	ldp	x25, x26, [sp, #64]
   43500:	ldp	x27, x28, [sp, #80]
   43504:	ldp	x29, x30, [sp], #272
   43508:	ret
   4350c:	mov	x2, x23
   43510:	mov	x1, x28
   43514:	mov	w3, w27
   43518:	mov	x0, x28
   4351c:	bl	bd50 <mpfr_mul@plt>
   43520:	sub	x26, x26, #0x1
   43524:	mov	w1, w0
   43528:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4352c:	ldr	x2, [x0, #2576]
   43530:	add	x0, x0, #0xa10
   43534:	blr	x2
   43538:	orr	w19, w19, w1
   4353c:	ldr	w0, [x20, x0]
   43540:	cmn	x26, #0x1
   43544:	b.ne	43460 <mpfr_strtofr@@Base+0x8c8>  // b.any
   43548:	b	434b0 <mpfr_strtofr@@Base+0x918>
   4354c:	add	x20, x0, #0x3
   43550:	cmp	x0, #0x1
   43554:	ldr	x0, [sp, #112]
   43558:	add	x20, x20, x0
   4355c:	b.eq	43718 <mpfr_strtofr@@Base+0xb80>  // b.none
   43560:	b.le	43720 <mpfr_strtofr@@Base+0xb88>
   43564:	ldr	x0, [sp, #104]
   43568:	sub	x26, x0, #0x1
   4356c:	clz	x0, x26
   43570:	mov	w26, #0x40                  	// #64
   43574:	sub	w26, w26, w0
   43578:	add	x0, x20, w26, sxtw
   4357c:	str	x0, [sp, #104]
   43580:	b	433bc <mpfr_strtofr@@Base+0x824>
   43584:	mov	w3, w27
   43588:	mov	x2, x23
   4358c:	mov	x1, x28
   43590:	mov	x0, x28
   43594:	bl	bd50 <mpfr_mul@plt>
   43598:	orr	w19, w19, w0
   4359c:	b	4343c <mpfr_strtofr@@Base+0x8a4>
   435a0:	ldr	w3, [x23, #8]
   435a4:	mov	x1, x23
   435a8:	ldr	w2, [sp, #128]
   435ac:	ldr	x0, [sp, #96]
   435b0:	bl	c6a0 <mpfr_set4@plt>
   435b4:	mov	w19, w0
   435b8:	mov	w0, w19
   435bc:	ldp	x19, x20, [sp, #16]
   435c0:	ldp	x23, x24, [sp, #48]
   435c4:	ldp	x25, x26, [sp, #64]
   435c8:	ldp	x29, x30, [sp], #272
   435cc:	ret
   435d0:	cbnz	w1, 43760 <mpfr_strtofr@@Base+0xbc8>
   435d4:	tbnz	w0, #0, 4366c <mpfr_strtofr@@Base+0xad4>
   435d8:	ldr	x0, [sp, #192]
   435dc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   435e0:	cmp	x0, x1
   435e4:	b.le	43628 <mpfr_strtofr@@Base+0xa90>
   435e8:	ldr	x2, [sp, #96]
   435ec:	ldr	w0, [sp, #128]
   435f0:	ldr	x1, [sp, #176]
   435f4:	cmp	w0, #0x0
   435f8:	ldr	x3, [x2]
   435fc:	sub	x1, x1, #0x1
   43600:	ldr	x2, [sp, #104]
   43604:	asr	x1, x1, #6
   43608:	ldr	x4, [sp, #112]
   4360c:	sub	x2, x2, #0x1
   43610:	ldr	x0, [sp, #200]
   43614:	add	x1, x1, #0x1
   43618:	cinc	x3, x3, eq  // eq = none
   4361c:	sub	x2, x2, x4
   43620:	bl	c370 <mpfr_round_p@plt>
   43624:	cbnz	w0, 434cc <mpfr_strtofr@@Base+0x934>
   43628:	ldr	x1, [sp, #104]
   4362c:	mov	x0, #0xfffffffffffffeff    	// #-257
   43630:	movk	x0, #0x7fff, lsl #48
   43634:	sub	x0, x0, x1
   43638:	ldr	x1, [sp, #144]
   4363c:	cmp	x1, x0
   43640:	b.gt	43748 <mpfr_strtofr@@Base+0xbb0>
   43644:	ldr	x0, [sp, #104]
   43648:	add	x0, x0, x1
   4364c:	mov	x1, x0
   43650:	mov	x0, x28
   43654:	str	x1, [sp, #104]
   43658:	add	x2, x1, x1, lsr #63
   4365c:	asr	x2, x2, #1
   43660:	str	x2, [sp, #144]
   43664:	bl	bed0 <mpfr_set_prec@plt>
   43668:	b	43400 <mpfr_strtofr@@Base+0x868>
   4366c:	ldr	w0, [sp, #128]
   43670:	cbnz	w0, 4379c <mpfr_strtofr@@Base+0xc04>
   43674:	add	x21, sp, #0xd0
   43678:	mov	x1, #0x2                   	// #2
   4367c:	mov	x0, x21
   43680:	bl	ca80 <mpfr_init2@plt>
   43684:	ldr	w1, [x25, #4]
   43688:	add	x22, sp, #0xf0
   4368c:	mov	x0, x22
   43690:	cmp	w1, #0x0
   43694:	cneg	w1, w1, lt  // lt = tstop
   43698:	lsl	w1, w1, #6
   4369c:	sxtw	x1, w1
   436a0:	bl	ca80 <mpfr_init2@plt>
   436a4:	mov	x1, x25
   436a8:	mov	x0, x22
   436ac:	mov	w2, #0x0                   	// #0
   436b0:	bl	c240 <mpfr_set_z@plt>
   436b4:	cbnz	w0, 43784 <mpfr_strtofr@@Base+0xbec>
   436b8:	mov	x1, x23
   436bc:	mov	x2, x22
   436c0:	mov	x5, #0x0                   	// #0
   436c4:	mov	w4, #0x1                   	// #1
   436c8:	mov	w3, #0x0                   	// #0
   436cc:	mov	x0, x21
   436d0:	bl	c6f0 <mpfr_pow_general@plt>
   436d4:	mov	w19, w0
   436d8:	mov	x0, x22
   436dc:	bl	c070 <mpfr_clear@plt>
   436e0:	ldr	w3, [sp, #216]
   436e4:	mov	x1, x21
   436e8:	ldr	x0, [sp, #96]
   436ec:	mov	w2, #0x0                   	// #0
   436f0:	bl	c6a0 <mpfr_set4@plt>
   436f4:	mov	x0, x21
   436f8:	bl	c070 <mpfr_clear@plt>
   436fc:	mov	w1, #0x9                   	// #9
   43700:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43704:	ldr	x2, [x0, #2576]
   43708:	add	x0, x0, #0xa10
   4370c:	blr	x2
   43710:	str	w1, [x20, x0]
   43714:	b	434e4 <mpfr_strtofr@@Base+0x94c>
   43718:	str	x20, [sp, #104]
   4371c:	b	433bc <mpfr_strtofr@@Base+0x824>
   43720:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   43724:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   43728:	add	x2, x2, #0xa48
   4372c:	add	x0, x0, #0x6b8
   43730:	mov	w1, #0x42                  	// #66
   43734:	bl	cb40 <mpfr_assert_fail@plt>
   43738:	ldr	x0, [sp, #96]
   4373c:	ldr	x0, [x0]
   43740:	str	x0, [sp, #104]
   43744:	b	43564 <mpfr_strtofr@@Base+0x9cc>
   43748:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   4374c:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   43750:	add	x2, x2, #0xf80
   43754:	add	x0, x0, #0x6b8
   43758:	mov	w1, #0x64                  	// #100
   4375c:	bl	cb40 <mpfr_assert_fail@plt>
   43760:	ldr	x0, [sp, #152]
   43764:	ldr	x0, [x0]
   43768:	tbz	w0, #0, 437c0 <mpfr_strtofr@@Base+0xc28>
   4376c:	ldr	w2, [x23, #8]
   43770:	ldr	w1, [sp, #128]
   43774:	ldr	x0, [sp, #96]
   43778:	bl	bf40 <mpfr_overflow@plt>
   4377c:	mov	w19, w0
   43780:	b	434e4 <mpfr_strtofr@@Base+0x94c>
   43784:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   43788:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   4378c:	add	x2, x2, #0xa18
   43790:	add	x0, x0, #0x6b8
   43794:	mov	w1, #0x85                  	// #133
   43798:	bl	cb40 <mpfr_assert_fail@plt>
   4379c:	ldr	x0, [sp, #152]
   437a0:	ldr	x0, [x0]
   437a4:	tbz	w0, #0, 437c8 <mpfr_strtofr@@Base+0xc30>
   437a8:	ldr	w2, [x23, #8]
   437ac:	ldr	w1, [sp, #128]
   437b0:	ldr	x0, [sp, #96]
   437b4:	bl	c3c0 <mpfr_underflow@plt>
   437b8:	mov	w19, w0
   437bc:	b	434e4 <mpfr_strtofr@@Base+0x94c>
   437c0:	mov	w2, #0x1                   	// #1
   437c4:	b	43770 <mpfr_strtofr@@Base+0xbd8>
   437c8:	mov	w2, #0x1                   	// #1
   437cc:	b	437ac <mpfr_strtofr@@Base+0xc14>

00000000000437d0 <mpfr_pow_z@@Base>:
   437d0:	stp	x29, x30, [sp, #-224]!
   437d4:	mov	x29, sp
   437d8:	stp	x25, x26, [sp, #64]
   437dc:	mov	x25, x1
   437e0:	ldr	w1, [x2, #4]
   437e4:	stp	x21, x22, [sp, #32]
   437e8:	cbz	w1, 43ac0 <mpfr_pow_z@@Base+0x2f0>
   437ec:	stp	x19, x20, [sp, #16]
   437f0:	mov	x19, x2
   437f4:	mov	w21, w3
   437f8:	ldr	x2, [x25, #16]
   437fc:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   43800:	mov	x20, x0
   43804:	cmp	x2, x3
   43808:	b.le	43b6c <mpfr_pow_z@@Base+0x39c>
   4380c:	stp	x27, x28, [sp, #80]
   43810:	mrs	x28, tpidr_el0
   43814:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43818:	ldr	x1, [x0, #2576]
   4381c:	add	x0, x0, #0xa10
   43820:	blr	x1
   43824:	stp	x23, x24, [sp, #48]
   43828:	add	x24, x28, x0
   4382c:	ldr	w23, [x28, x0]
   43830:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43834:	ldr	x4, [x0, #2512]
   43838:	add	x0, x0, #0x9d0
   4383c:	blr	x4
   43840:	add	x4, x28, x0
   43844:	ldr	x0, [x28, x0]
   43848:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4384c:	ldrsw	x1, [x25, #8]
   43850:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   43854:	str	x0, [sp, #96]
   43858:	sub	x2, x2, #0x1
   4385c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43860:	ldr	x5, [x0, #2544]
   43864:	add	x0, x0, #0x9f0
   43868:	blr	x5
   4386c:	str	x7, [x4]
   43870:	ldr	x26, [x28, x0]
   43874:	str	x3, [x28, x0]
   43878:	mov	x0, x25
   4387c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   43880:	mov	w22, w0
   43884:	cbz	w0, 43bdc <mpfr_pow_z@@Base+0x40c>
   43888:	ldr	w22, [x19, #4]
   4388c:	cmp	w22, #0x0
   43890:	b.gt	43a6c <mpfr_pow_z@@Base+0x29c>
   43894:	neg	w22, w22
   43898:	mov	x1, #0xfffffffffffffff8    	// #-8
   4389c:	ldr	x2, [x19, #8]
   438a0:	add	x1, x1, w22, sxtw #3
   438a4:	ldr	x0, [x20]
   438a8:	sbfiz	x22, x22, #6, #32
   438ac:	ldr	x1, [x2, x1]
   438b0:	cmp	x0, #0x1
   438b4:	clz	x1, x1
   438b8:	sub	x1, x22, x1
   438bc:	str	x1, [sp, #112]
   438c0:	add	x24, x1, x0
   438c4:	add	x24, x24, #0x3
   438c8:	b.eq	438e4 <mpfr_pow_z@@Base+0x114>  // b.none
   438cc:	b.le	43e64 <mpfr_pow_z@@Base+0x694>
   438d0:	sub	x0, x0, #0x1
   438d4:	mov	w1, #0x40                  	// #64
   438d8:	clz	x0, x0
   438dc:	sub	w0, w1, w0
   438e0:	add	x24, x24, w0, sxtw
   438e4:	add	x27, sp, #0x80
   438e8:	mov	x1, x24
   438ec:	mov	x0, x27
   438f0:	bl	ca80 <mpfr_init2@plt>
   438f4:	ldr	x0, [x25, #16]
   438f8:	mov	w1, #0x1                   	// #1
   438fc:	str	w1, [sp, #108]
   43900:	cmp	x0, #0x0
   43904:	b.le	4391c <mpfr_pow_z@@Base+0x14c>
   43908:	ldr	w0, [x25, #8]
   4390c:	cmp	w0, #0x0
   43910:	cset	w0, le
   43914:	add	w0, w0, #0x2
   43918:	str	w0, [sp, #108]
   4391c:	mov	x0, #0x40                  	// #64
   43920:	str	x0, [sp, #120]
   43924:	ldr	w3, [sp, #108]
   43928:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4392c:	ldr	x1, [x0, #2576]
   43930:	add	x0, x0, #0xa10
   43934:	blr	x1
   43938:	add	x22, x28, x0
   4393c:	mov	x2, x25
   43940:	mov	x1, #0x1                   	// #1
   43944:	str	wzr, [x28, x0]
   43948:	mov	x0, x27
   4394c:	bl	c2f0 <mpfr_ui_div@plt>
   43950:	ldr	w0, [x22]
   43954:	tbnz	w0, #1, 43ae4 <mpfr_pow_z@@Base+0x314>
   43958:	mov	w3, w21
   4395c:	mov	x2, x19
   43960:	mov	x1, x27
   43964:	mov	x0, x27
   43968:	mov	w4, #0x0                   	// #0
   4396c:	str	wzr, [x22]
   43970:	bl	43308 <mpfr_strtofr@@Base+0x770>
   43974:	ldr	w0, [x22]
   43978:	tbnz	w0, #1, 43ae4 <mpfr_pow_z@@Base+0x314>
   4397c:	tbnz	w0, #0, 43d38 <mpfr_pow_z@@Base+0x568>
   43980:	ldr	x0, [sp, #144]
   43984:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   43988:	cmp	x0, x1
   4398c:	b.le	43cb0 <mpfr_pow_z@@Base+0x4e0>
   43990:	ldr	x1, [sp, #128]
   43994:	cmp	w21, #0x0
   43998:	ldr	x2, [sp, #112]
   4399c:	sub	x1, x1, #0x1
   439a0:	ldr	x0, [sp, #152]
   439a4:	asr	x1, x1, #6
   439a8:	ldr	x3, [x20]
   439ac:	sub	x2, x24, x2
   439b0:	add	x1, x1, #0x1
   439b4:	sub	x2, x2, #0x2
   439b8:	cinc	x3, x3, eq  // eq = none
   439bc:	bl	c370 <mpfr_round_p@plt>
   439c0:	cbz	w0, 43cb0 <mpfr_pow_z@@Base+0x4e0>
   439c4:	ldr	w3, [sp, #136]
   439c8:	mov	w2, w21
   439cc:	mov	x1, x27
   439d0:	mov	x0, x20
   439d4:	bl	c6a0 <mpfr_set4@plt>
   439d8:	mov	w22, w0
   439dc:	mov	x0, x27
   439e0:	bl	c070 <mpfr_clear@plt>
   439e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   439e8:	ldr	x1, [x0, #2576]
   439ec:	add	x0, x0, #0xa10
   439f0:	blr	x1
   439f4:	add	x2, x28, x0
   439f8:	str	w23, [x28, x0]
   439fc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43a00:	ldr	x3, [x0, #2512]
   43a04:	add	x0, x0, #0x9d0
   43a08:	blr	x3
   43a0c:	ldr	x1, [x20, #16]
   43a10:	ldr	x3, [sp, #96]
   43a14:	str	x3, [x28, x0]
   43a18:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43a1c:	ldr	x4, [x0, #2544]
   43a20:	add	x0, x0, #0x9f0
   43a24:	blr	x4
   43a28:	str	x26, [x28, x0]
   43a2c:	cmp	x26, x1
   43a30:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   43a34:	b.le	43a94 <mpfr_pow_z@@Base+0x2c4>
   43a38:	mov	w1, w22
   43a3c:	mov	w2, w21
   43a40:	mov	x0, x20
   43a44:	bl	cb30 <mpfr_check_range@plt>
   43a48:	mov	w22, w0
   43a4c:	ldp	x19, x20, [sp, #16]
   43a50:	ldp	x23, x24, [sp, #48]
   43a54:	ldp	x27, x28, [sp, #80]
   43a58:	mov	w0, w22
   43a5c:	ldp	x21, x22, [sp, #32]
   43a60:	ldp	x25, x26, [sp, #64]
   43a64:	ldp	x29, x30, [sp], #224
   43a68:	ret
   43a6c:	mov	x1, x25
   43a70:	mov	x2, x19
   43a74:	mov	w3, w21
   43a78:	mov	x0, x20
   43a7c:	mov	w4, #0x1                   	// #1
   43a80:	bl	43308 <mpfr_strtofr@@Base+0x770>
   43a84:	ldr	w1, [x24]
   43a88:	mov	w22, w0
   43a8c:	orr	w23, w23, w1
   43a90:	b	439e4 <mpfr_pow_z@@Base+0x214>
   43a94:	cbz	w22, 43a4c <mpfr_pow_z@@Base+0x27c>
   43a98:	orr	w23, w23, #0x8
   43a9c:	mov	w0, w22
   43aa0:	ldp	x19, x20, [sp, #16]
   43aa4:	ldp	x27, x28, [sp, #80]
   43aa8:	str	w23, [x2]
   43aac:	ldp	x21, x22, [sp, #32]
   43ab0:	ldp	x23, x24, [sp, #48]
   43ab4:	ldp	x25, x26, [sp, #64]
   43ab8:	ldp	x29, x30, [sp], #224
   43abc:	ret
   43ac0:	mov	x2, #0x0                   	// #0
   43ac4:	mov	x1, #0x1                   	// #1
   43ac8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   43acc:	mov	w22, w0
   43ad0:	mov	w0, w22
   43ad4:	ldp	x21, x22, [sp, #32]
   43ad8:	ldp	x25, x26, [sp, #64]
   43adc:	ldp	x29, x30, [sp], #224
   43ae0:	ret
   43ae4:	mov	x0, x27
   43ae8:	bl	c070 <mpfr_clear@plt>
   43aec:	ldr	x2, [x19, #8]
   43af0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43af4:	ldr	x1, [x0, #2576]
   43af8:	add	x0, x0, #0xa10
   43afc:	blr	x1
   43b00:	str	w23, [x28, x0]
   43b04:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43b08:	ldr	x1, [x0, #2512]
   43b0c:	add	x0, x0, #0x9d0
   43b10:	blr	x1
   43b14:	ldr	x1, [sp, #96]
   43b18:	str	x1, [x28, x0]
   43b1c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43b20:	ldr	x1, [x0, #2544]
   43b24:	add	x0, x0, #0x9f0
   43b28:	blr	x1
   43b2c:	str	x26, [x28, x0]
   43b30:	ldr	w1, [x19, #4]
   43b34:	ldr	x0, [x2]
   43b38:	cmp	w1, #0x0
   43b3c:	cset	w1, ne  // ne = any
   43b40:	mov	w2, #0x1                   	// #1
   43b44:	tst	w1, w0
   43b48:	b.ne	43e24 <mpfr_pow_z@@Base+0x654>  // b.any
   43b4c:	mov	x0, x20
   43b50:	mov	w1, w21
   43b54:	bl	bf40 <mpfr_overflow@plt>
   43b58:	mov	w22, w0
   43b5c:	ldp	x19, x20, [sp, #16]
   43b60:	ldp	x23, x24, [sp, #48]
   43b64:	ldp	x27, x28, [sp, #80]
   43b68:	b	43a58 <mpfr_pow_z@@Base+0x288>
   43b6c:	mov	x0, #0x2                   	// #2
   43b70:	movk	x0, #0x8000, lsl #48
   43b74:	cmp	x2, x0
   43b78:	b.eq	43dd8 <mpfr_pow_z@@Base+0x608>  // b.none
   43b7c:	cmp	x2, x3
   43b80:	b.eq	43d00 <mpfr_pow_z@@Base+0x530>  // b.none
   43b84:	cmp	w1, #0x0
   43b88:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   43b8c:	b.gt	43bb8 <mpfr_pow_z@@Base+0x3e8>
   43b90:	mrs	x1, tpidr_el0
   43b94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43b98:	ldr	x2, [x0, #2576]
   43b9c:	add	x0, x0, #0xa10
   43ba0:	blr	x2
   43ba4:	add	x0, x1, x0
   43ba8:	mov	x1, x3
   43bac:	ldr	w2, [x0]
   43bb0:	orr	w2, w2, #0x20
   43bb4:	str	w2, [x0]
   43bb8:	ldr	w0, [x25, #8]
   43bbc:	str	x1, [x20, #16]
   43bc0:	cmp	w0, #0x0
   43bc4:	b.le	43d18 <mpfr_pow_z@@Base+0x548>
   43bc8:	mov	w0, #0x1                   	// #1
   43bcc:	mov	w22, #0x0                   	// #0
   43bd0:	str	w0, [x20, #8]
   43bd4:	ldp	x19, x20, [sp, #16]
   43bd8:	b	43a58 <mpfr_pow_z@@Base+0x288>
   43bdc:	ldr	x0, [x19, #8]
   43be0:	ldr	w1, [x19, #4]
   43be4:	ldr	x24, [x25, #16]
   43be8:	cmp	w1, #0x0
   43bec:	ldr	x0, [x0]
   43bf0:	cset	w1, ne  // ne = any
   43bf4:	tst	w1, w0
   43bf8:	b.eq	43ce8 <mpfr_pow_z@@Base+0x518>  // b.none
   43bfc:	ldrsw	x1, [x25, #8]
   43c00:	mov	w3, w21
   43c04:	mov	x0, x20
   43c08:	mov	x2, #0x0                   	// #0
   43c0c:	bl	ba80 <mpfr_set_si_2exp@plt>
   43c10:	add	x27, sp, #0xc0
   43c14:	mov	x0, x27
   43c18:	bl	bf90 <mpfr_mpz_init@plt>
   43c1c:	sub	x2, x24, #0x1
   43c20:	mov	x1, x19
   43c24:	mov	x0, x27
   43c28:	bl	c680 <__gmpz_mul_si@plt>
   43c2c:	mov	x1, x27
   43c30:	mov	x0, x27
   43c34:	mov	x2, #0x1                   	// #1
   43c38:	bl	c360 <__gmpz_add_ui@plt>
   43c3c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43c40:	ldr	x1, [x0, #2512]
   43c44:	add	x0, x0, #0x9d0
   43c48:	blr	x1
   43c4c:	ldr	x1, [x28, x0]
   43c50:	mov	x0, x27
   43c54:	bl	c800 <__gmpz_cmp_si@plt>
   43c58:	tbnz	w0, #31, 43e44 <mpfr_pow_z@@Base+0x674>
   43c5c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43c60:	ldr	x1, [x0, #2544]
   43c64:	add	x0, x0, #0x9f0
   43c68:	blr	x1
   43c6c:	ldr	x1, [x28, x0]
   43c70:	mov	x0, x27
   43c74:	bl	c800 <__gmpz_cmp_si@plt>
   43c78:	cmp	w0, #0x0
   43c7c:	b.gt	43e2c <mpfr_pow_z@@Base+0x65c>
   43c80:	mov	x0, x27
   43c84:	bl	ba20 <__gmpz_get_si@plt>
   43c88:	str	x0, [x20, #16]
   43c8c:	mov	x0, x27
   43c90:	bl	c170 <mpfr_mpz_clear@plt>
   43c94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43c98:	ldr	x1, [x0, #2576]
   43c9c:	add	x0, x0, #0xa10
   43ca0:	blr	x1
   43ca4:	ldr	w0, [x28, x0]
   43ca8:	orr	w23, w23, w0
   43cac:	b	439e4 <mpfr_pow_z@@Base+0x214>
   43cb0:	ldr	x1, [sp, #120]
   43cb4:	mov	x0, #0xfffffffffffffeff    	// #-257
   43cb8:	movk	x0, #0x7fff, lsl #48
   43cbc:	sub	x0, x0, x24
   43cc0:	cmp	x0, x1
   43cc4:	b.lt	43e0c <mpfr_pow_z@@Base+0x63c>  // b.tstop
   43cc8:	add	x24, x24, x1
   43ccc:	mov	x0, x27
   43cd0:	mov	x1, x24
   43cd4:	add	x2, x24, x24, lsr #63
   43cd8:	asr	x2, x2, #1
   43cdc:	str	x2, [sp, #120]
   43ce0:	bl	bed0 <mpfr_set_prec@plt>
   43ce4:	b	43924 <mpfr_pow_z@@Base+0x154>
   43ce8:	mov	w3, w21
   43cec:	mov	x0, x20
   43cf0:	mov	x2, #0x0                   	// #0
   43cf4:	mov	x1, #0x1                   	// #1
   43cf8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   43cfc:	b	43c10 <mpfr_pow_z@@Base+0x440>
   43d00:	ldr	w0, [x25, #8]
   43d04:	cmp	w1, #0x0
   43d08:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   43d0c:	csel	x2, x2, x1, gt
   43d10:	str	x2, [x20, #16]
   43d14:	tbz	w0, #31, 43bc8 <mpfr_pow_z@@Base+0x3f8>
   43d18:	ldr	x0, [x19, #8]
   43d1c:	ldr	x0, [x0]
   43d20:	tbz	w0, #0, 43bc8 <mpfr_pow_z@@Base+0x3f8>
   43d24:	mov	w0, #0xffffffff            	// #-1
   43d28:	mov	w22, #0x0                   	// #0
   43d2c:	str	w0, [x20, #8]
   43d30:	ldp	x19, x20, [sp, #16]
   43d34:	b	43a58 <mpfr_pow_z@@Base+0x288>
   43d38:	mov	x0, x27
   43d3c:	bl	c070 <mpfr_clear@plt>
   43d40:	cbnz	w21, 43e94 <mpfr_pow_z@@Base+0x6c4>
   43d44:	add	x24, sp, #0xa0
   43d48:	mov	x1, #0x2                   	// #2
   43d4c:	mov	x0, x24
   43d50:	bl	ca80 <mpfr_init2@plt>
   43d54:	ldr	w1, [x19, #4]
   43d58:	add	x27, sp, #0xc0
   43d5c:	mov	x0, x27
   43d60:	cmp	w1, #0x0
   43d64:	cneg	w1, w1, lt  // lt = tstop
   43d68:	lsl	w1, w1, #6
   43d6c:	sxtw	x1, w1
   43d70:	bl	ca80 <mpfr_init2@plt>
   43d74:	mov	x1, x19
   43d78:	mov	x0, x27
   43d7c:	mov	w2, #0x0                   	// #0
   43d80:	bl	c240 <mpfr_set_z@plt>
   43d84:	mov	w21, w0
   43d88:	cbnz	w0, 43e7c <mpfr_pow_z@@Base+0x6ac>
   43d8c:	mov	x1, x25
   43d90:	mov	x2, x27
   43d94:	mov	x5, #0x0                   	// #0
   43d98:	mov	w4, #0x1                   	// #1
   43d9c:	mov	w3, #0x0                   	// #0
   43da0:	mov	x0, x24
   43da4:	bl	c6f0 <mpfr_pow_general@plt>
   43da8:	mov	w22, w0
   43dac:	mov	x0, x27
   43db0:	bl	c070 <mpfr_clear@plt>
   43db4:	ldr	w3, [sp, #168]
   43db8:	mov	x1, x24
   43dbc:	mov	w2, #0x0                   	// #0
   43dc0:	mov	x0, x20
   43dc4:	orr	w23, w23, #0x1
   43dc8:	bl	c6a0 <mpfr_set4@plt>
   43dcc:	mov	x0, x24
   43dd0:	bl	c070 <mpfr_clear@plt>
   43dd4:	b	439e4 <mpfr_pow_z@@Base+0x214>
   43dd8:	mrs	x1, tpidr_el0
   43ddc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43de0:	ldr	x3, [x0, #2576]
   43de4:	add	x0, x0, #0xa10
   43de8:	blr	x3
   43dec:	add	x0, x1, x0
   43df0:	mov	w22, #0x0                   	// #0
   43df4:	str	x2, [x20, #16]
   43df8:	ldp	x19, x20, [sp, #16]
   43dfc:	ldr	w1, [x0]
   43e00:	orr	w1, w1, #0x4
   43e04:	str	w1, [x0]
   43e08:	b	43a58 <mpfr_pow_z@@Base+0x288>
   43e0c:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   43e10:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   43e14:	add	x2, x2, #0x470
   43e18:	add	x0, x0, #0x6b8
   43e1c:	mov	w1, #0x169                 	// #361
   43e20:	bl	cb40 <mpfr_assert_fail@plt>
   43e24:	ldr	w2, [x25, #8]
   43e28:	b	43b4c <mpfr_pow_z@@Base+0x37c>
   43e2c:	ldr	w2, [x20, #8]
   43e30:	mov	w1, w21
   43e34:	mov	x0, x20
   43e38:	bl	bf40 <mpfr_overflow@plt>
   43e3c:	mov	w22, w0
   43e40:	b	43c8c <mpfr_pow_z@@Base+0x4bc>
   43e44:	ldr	w2, [x20, #8]
   43e48:	cmp	w21, #0x0
   43e4c:	csinc	w21, w21, wzr, ne  // ne = any
   43e50:	mov	x0, x20
   43e54:	mov	w1, w21
   43e58:	bl	c3c0 <mpfr_underflow@plt>
   43e5c:	mov	w22, w0
   43e60:	b	43c8c <mpfr_pow_z@@Base+0x4bc>
   43e64:	adrp	x2, 63000 <mpfr_l2b_2_0__tab@@Base+0x2a10>
   43e68:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   43e6c:	add	x2, x2, #0xd78
   43e70:	add	x0, x0, #0x6b8
   43e74:	mov	w1, #0x118                 	// #280
   43e78:	bl	cb40 <mpfr_assert_fail@plt>
   43e7c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   43e80:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   43e84:	add	x2, x2, #0xa18
   43e88:	add	x0, x0, #0x6b8
   43e8c:	mov	w1, #0x155                 	// #341
   43e90:	bl	cb40 <mpfr_assert_fail@plt>
   43e94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43e98:	ldr	x1, [x0, #2512]
   43e9c:	add	x0, x0, #0x9d0
   43ea0:	blr	x1
   43ea4:	ldr	x1, [sp, #96]
   43ea8:	str	x1, [x28, x0]
   43eac:	ldr	x2, [x19, #8]
   43eb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   43eb4:	ldr	x1, [x0, #2544]
   43eb8:	add	x0, x0, #0x9f0
   43ebc:	blr	x1
   43ec0:	str	x26, [x28, x0]
   43ec4:	ldr	w1, [x19, #4]
   43ec8:	ldr	x0, [x2]
   43ecc:	cmp	w1, #0x0
   43ed0:	str	w23, [x22]
   43ed4:	cset	w1, ne  // ne = any
   43ed8:	tst	w1, w0
   43edc:	b.eq	43f04 <mpfr_pow_z@@Base+0x734>  // b.none
   43ee0:	ldr	w2, [x25, #8]
   43ee4:	mov	x0, x20
   43ee8:	mov	w1, w21
   43eec:	bl	c3c0 <mpfr_underflow@plt>
   43ef0:	mov	w22, w0
   43ef4:	ldp	x19, x20, [sp, #16]
   43ef8:	ldp	x23, x24, [sp, #48]
   43efc:	ldp	x27, x28, [sp, #80]
   43f00:	b	43a58 <mpfr_pow_z@@Base+0x288>
   43f04:	mov	w2, #0x1                   	// #1
   43f08:	b	43ee4 <mpfr_pow_z@@Base+0x714>
   43f0c:	nop

0000000000043f10 <mpfr_mulhigh_n@@Base>:
   43f10:	stp	x29, x30, [sp, #-96]!
   43f14:	cmp	x3, #0x10
   43f18:	mov	x29, sp
   43f1c:	stp	x19, x20, [sp, #16]
   43f20:	mov	x19, x3
   43f24:	mov	x20, x2
   43f28:	stp	x21, x22, [sp, #32]
   43f2c:	mov	x22, x1
   43f30:	stp	x23, x24, [sp, #48]
   43f34:	mov	x24, x0
   43f38:	b.hi	44110 <mpfr_mulhigh_n@@Base+0x200>  // b.pmore
   43f3c:	adrp	x1, 65000 <mpfr_bases@@Base+0x6f8>
   43f40:	add	x1, x1, #0x6c0
   43f44:	ldrsh	x21, [x1, x3, lsl #1]
   43f48:	cmp	x21, #0x0
   43f4c:	b.lt	43ffc <mpfr_mulhigh_n@@Base+0xec>  // b.tstop
   43f50:	b.eq	43f84 <mpfr_mulhigh_n@@Base+0x74>  // b.none
   43f54:	mov	x0, #0x2100                	// #8448
   43f58:	cmp	x19, x0
   43f5c:	b.le	44024 <mpfr_mulhigh_n@@Base+0x114>
   43f60:	mov	x3, x19
   43f64:	mov	x2, x20
   43f68:	mov	x1, x22
   43f6c:	mov	x0, x24
   43f70:	ldp	x19, x20, [sp, #16]
   43f74:	ldp	x21, x22, [sp, #32]
   43f78:	ldp	x23, x24, [sp, #48]
   43f7c:	ldp	x29, x30, [sp], #96
   43f80:	b	c470 <__gmpn_mul_n@plt>
   43f84:	lsl	x0, x19, #3
   43f88:	cmp	x19, #0x1
   43f8c:	sub	x0, x0, #0x8
   43f90:	ldr	x2, [x20]
   43f94:	add	x23, x24, x0
   43f98:	ldr	x1, [x22, x0]
   43f9c:	umulh	x3, x1, x2
   43fa0:	str	x3, [x24, x19, lsl #3]
   43fa4:	mul	x1, x1, x2
   43fa8:	str	x1, [x24, x0]
   43fac:	b.le	43fe8 <mpfr_mulhigh_n@@Base+0xd8>
   43fb0:	add	x21, x22, x19, lsl #3
   43fb4:	sub	x22, x20, #0x8
   43fb8:	sub	x21, x21, #0x10
   43fbc:	mov	x20, #0x1                   	// #1
   43fc0:	add	x20, x20, #0x1
   43fc4:	mov	x1, x21
   43fc8:	mov	x2, x20
   43fcc:	mov	x0, x23
   43fd0:	sub	x21, x21, #0x8
   43fd4:	ldr	x3, [x22, x20, lsl #3]
   43fd8:	bl	ccd0 <__gmpn_addmul_1@plt>
   43fdc:	str	x0, [x23, x20, lsl #3]
   43fe0:	cmp	x19, x20
   43fe4:	b.ne	43fc0 <mpfr_mulhigh_n@@Base+0xb0>  // b.any
   43fe8:	ldp	x19, x20, [sp, #16]
   43fec:	ldp	x21, x22, [sp, #32]
   43ff0:	ldp	x23, x24, [sp, #48]
   43ff4:	ldp	x29, x30, [sp], #96
   43ff8:	ret
   43ffc:	mov	x3, x20
   44000:	mov	x1, x22
   44004:	mov	x0, x24
   44008:	mov	x4, x19
   4400c:	mov	x2, x19
   44010:	ldp	x19, x20, [sp, #16]
   44014:	ldp	x21, x22, [sp, #32]
   44018:	ldp	x23, x24, [sp, #48]
   4401c:	ldp	x29, x30, [sp], #96
   44020:	b	c7a0 <__gmpn_mul@plt>
   44024:	stp	x25, x26, [sp, #64]
   44028:	sub	x25, x19, x21
   4402c:	mov	x3, x21
   44030:	lsl	x23, x25, #3
   44034:	add	x0, x24, x25, lsl #4
   44038:	add	x2, x20, x23
   4403c:	add	x1, x22, x23
   44040:	add	x26, x24, x19, lsl #3
   44044:	sub	x23, x23, #0x8
   44048:	stp	x27, x28, [sp, #80]
   4404c:	bl	c470 <__gmpn_mul_n@plt>
   44050:	lsl	x27, x21, #3
   44054:	sub	x26, x26, #0x8
   44058:	mov	x2, x20
   4405c:	add	x28, x25, #0x1
   44060:	mov	x3, x25
   44064:	add	x1, x22, x27
   44068:	mov	x0, x24
   4406c:	add	x23, x24, x23
   44070:	bl	43f10 <mpfr_mulhigh_n@@Base>
   44074:	add	x19, x19, x25
   44078:	mov	x2, x23
   4407c:	mov	x3, x28
   44080:	mov	x1, x26
   44084:	mov	x0, x26
   44088:	bl	c5a0 <__gmpn_add_n@plt>
   4408c:	add	x2, x20, x27
   44090:	mov	x1, x22
   44094:	mov	x20, x0
   44098:	mov	x3, x25
   4409c:	mov	x0, x24
   440a0:	bl	43f10 <mpfr_mulhigh_n@@Base>
   440a4:	mov	x2, x23
   440a8:	mov	x1, x26
   440ac:	mov	x3, x28
   440b0:	mov	x0, x26
   440b4:	bl	c5a0 <__gmpn_add_n@plt>
   440b8:	add	x1, x20, x0
   440bc:	ldr	x0, [x24, x19, lsl #3]
   440c0:	add	x2, x24, x19, lsl #3
   440c4:	adds	x1, x1, x0
   440c8:	str	x1, [x24, x19, lsl #3]
   440cc:	b.cc	440f4 <mpfr_mulhigh_n@@Base+0x1e4>  // b.lo, b.ul, b.last
   440d0:	mov	x0, #0x1                   	// #1
   440d4:	b	440ec <mpfr_mulhigh_n@@Base+0x1dc>
   440d8:	ldr	x1, [x2, x0, lsl #3]
   440dc:	add	x1, x1, #0x1
   440e0:	str	x1, [x2, x0, lsl #3]
   440e4:	add	x0, x0, #0x1
   440e8:	cbnz	x1, 440f4 <mpfr_mulhigh_n@@Base+0x1e4>
   440ec:	cmp	x21, x0
   440f0:	b.gt	440d8 <mpfr_mulhigh_n@@Base+0x1c8>
   440f4:	ldp	x19, x20, [sp, #16]
   440f8:	ldp	x21, x22, [sp, #32]
   440fc:	ldp	x23, x24, [sp, #48]
   44100:	ldp	x25, x26, [sp, #64]
   44104:	ldp	x27, x28, [sp, #80]
   44108:	ldp	x29, x30, [sp], #96
   4410c:	ret
   44110:	cmp	x3, #0x0
   44114:	add	x21, x3, #0x3
   44118:	csel	x21, x21, x3, lt  // lt = tstop
   4411c:	asr	x21, x21, #2
   44120:	add	x21, x21, x21, lsl #1
   44124:	b	43f48 <mpfr_mulhigh_n@@Base+0x38>

0000000000044128 <mpfr_sqrhigh_n@@Base>:
   44128:	stp	x29, x30, [sp, #-80]!
   4412c:	cmp	x2, #0x10
   44130:	mov	x29, sp
   44134:	stp	x19, x20, [sp, #16]
   44138:	mov	x19, x2
   4413c:	mov	x20, x1
   44140:	stp	x21, x22, [sp, #32]
   44144:	mov	x21, x0
   44148:	b.hi	442c0 <mpfr_sqrhigh_n@@Base+0x198>  // b.pmore
   4414c:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   44150:	add	x0, x0, #0x6c0
   44154:	ldrsh	x22, [x0, x2, lsl #1]
   44158:	cmp	x22, #0x0
   4415c:	b.lt	442a4 <mpfr_sqrhigh_n@@Base+0x17c>  // b.tstop
   44160:	lsl	x0, x19, #3
   44164:	stp	x23, x24, [sp, #48]
   44168:	sub	x0, x0, #0x8
   4416c:	add	x23, x21, x0
   44170:	b.ne	441e4 <mpfr_sqrhigh_n@@Base+0xbc>  // b.any
   44174:	ldr	x1, [x20, x0]
   44178:	cmp	x19, #0x1
   4417c:	ldr	x2, [x20]
   44180:	umulh	x3, x1, x2
   44184:	str	x3, [x21, x19, lsl #3]
   44188:	mul	x1, x1, x2
   4418c:	str	x1, [x21, x0]
   44190:	b.le	441d0 <mpfr_sqrhigh_n@@Base+0xa8>
   44194:	add	x22, x20, x19, lsl #3
   44198:	sub	x21, x20, #0x8
   4419c:	sub	x22, x22, #0x10
   441a0:	mov	x20, #0x1                   	// #1
   441a4:	nop
   441a8:	add	x20, x20, #0x1
   441ac:	mov	x1, x22
   441b0:	mov	x2, x20
   441b4:	mov	x0, x23
   441b8:	sub	x22, x22, #0x8
   441bc:	ldr	x3, [x21, x20, lsl #3]
   441c0:	bl	ccd0 <__gmpn_addmul_1@plt>
   441c4:	str	x0, [x23, x20, lsl #3]
   441c8:	cmp	x19, x20
   441cc:	b.ne	441a8 <mpfr_sqrhigh_n@@Base+0x80>  // b.any
   441d0:	ldp	x19, x20, [sp, #16]
   441d4:	ldp	x21, x22, [sp, #32]
   441d8:	ldp	x23, x24, [sp, #48]
   441dc:	ldp	x29, x30, [sp], #80
   441e0:	ret
   441e4:	stp	x25, x26, [sp, #64]
   441e8:	sub	x25, x19, x22
   441ec:	mov	x2, x22
   441f0:	lsl	x24, x25, #3
   441f4:	add	x0, x21, x25, lsl #4
   441f8:	add	x1, x20, x24
   441fc:	bl	c3b0 <__gmpn_sqr@plt>
   44200:	add	x2, x20, x22, lsl #3
   44204:	mov	x1, x20
   44208:	sub	x20, x24, #0x8
   4420c:	add	x19, x19, x25
   44210:	add	x20, x21, x20
   44214:	add	x26, x25, #0x1
   44218:	mov	x3, x25
   4421c:	mov	x0, x21
   44220:	bl	bc80 <mpfr_mulhigh_n@plt>
   44224:	mov	x1, x20
   44228:	mov	x2, x26
   4422c:	mov	x0, x20
   44230:	mov	w3, #0x1                   	// #1
   44234:	bl	bcc0 <__gmpn_lshift@plt>
   44238:	mov	x2, x20
   4423c:	mov	x1, x23
   44240:	mov	x20, x0
   44244:	mov	x3, x26
   44248:	mov	x0, x23
   4424c:	bl	c5a0 <__gmpn_add_n@plt>
   44250:	ldr	x1, [x21, x19, lsl #3]
   44254:	add	x0, x20, x0
   44258:	add	x2, x21, x19, lsl #3
   4425c:	adds	x0, x0, x1
   44260:	str	x0, [x21, x19, lsl #3]
   44264:	b.cc	4428c <mpfr_sqrhigh_n@@Base+0x164>  // b.lo, b.ul, b.last
   44268:	mov	x0, #0x1                   	// #1
   4426c:	b	44284 <mpfr_sqrhigh_n@@Base+0x15c>
   44270:	ldr	x1, [x2, x0, lsl #3]
   44274:	add	x1, x1, #0x1
   44278:	str	x1, [x2, x0, lsl #3]
   4427c:	add	x0, x0, #0x1
   44280:	cbnz	x1, 4428c <mpfr_sqrhigh_n@@Base+0x164>
   44284:	cmp	x22, x0
   44288:	b.gt	44270 <mpfr_sqrhigh_n@@Base+0x148>
   4428c:	ldp	x19, x20, [sp, #16]
   44290:	ldp	x21, x22, [sp, #32]
   44294:	ldp	x23, x24, [sp, #48]
   44298:	ldp	x25, x26, [sp, #64]
   4429c:	ldp	x29, x30, [sp], #80
   442a0:	ret
   442a4:	mov	x2, x19
   442a8:	mov	x1, x20
   442ac:	mov	x0, x21
   442b0:	ldp	x19, x20, [sp, #16]
   442b4:	ldp	x21, x22, [sp, #32]
   442b8:	ldp	x29, x30, [sp], #80
   442bc:	b	c3b0 <__gmpn_sqr@plt>
   442c0:	add	x22, x2, #0x4
   442c4:	add	x22, x22, x22, lsr #63
   442c8:	asr	x22, x22, #1
   442cc:	b	44158 <mpfr_sqrhigh_n@@Base+0x30>

00000000000442d0 <mpfr_divhigh_n@@Base>:
   442d0:	stp	x29, x30, [sp, #-128]!
   442d4:	cmp	x3, #0x10
   442d8:	mov	x29, sp
   442dc:	stp	x19, x20, [sp, #16]
   442e0:	stp	x21, x22, [sp, #32]
   442e4:	mov	x21, x0
   442e8:	stp	x23, x24, [sp, #48]
   442ec:	mov	x23, x2
   442f0:	stp	x25, x26, [sp, #64]
   442f4:	mov	x26, x3
   442f8:	stp	x27, x28, [sp, #80]
   442fc:	stp	x3, x1, [x29, #96]
   44300:	b.hi	446f4 <mpfr_divhigh_n@@Base+0x424>  // b.pmore
   44304:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   44308:	add	x0, x0, #0x6c0
   4430c:	add	x0, x0, #0x30
   44310:	ldrsh	x20, [x0, x3, lsl #1]
   44314:	cbz	x20, 444ac <mpfr_divhigh_n@@Base+0x1dc>
   44318:	cmp	x20, x26
   4431c:	b.eq	4470c <mpfr_divhigh_n@@Base+0x43c>  // b.none
   44320:	sub	x24, x26, x20
   44324:	mov	x5, x20
   44328:	ldr	x2, [x29, #104]
   4432c:	lsl	x28, x24, #3
   44330:	lsl	x25, x24, #4
   44334:	add	x19, x21, x28
   44338:	lsl	x3, x20, #1
   4433c:	add	x4, x23, x28
   44340:	mov	x0, x19
   44344:	add	x2, x2, x25
   44348:	mov	x1, #0x0                   	// #0
   4434c:	str	xzr, [x29, #120]
   44350:	bl	ccb0 <__gmpn_divrem@plt>
   44354:	mov	x22, x0
   44358:	cmp	x25, #0x4, lsl #12
   4435c:	b.hi	44730 <mpfr_divhigh_n@@Base+0x460>  // b.pmore
   44360:	sub	sp, sp, x25
   44364:	mov	x27, sp
   44368:	ldr	x4, [x29, #104]
   4436c:	lsl	x25, x20, #3
   44370:	mov	x0, x27
   44374:	mov	x3, x24
   44378:	add	x1, x21, x25
   4437c:	mov	x2, x23
   44380:	add	x4, x4, x26, lsl #3
   44384:	str	x4, [x29, #96]
   44388:	bl	bc80 <mpfr_mulhigh_n@plt>
   4438c:	ldr	x4, [x29, #96]
   44390:	add	x2, x27, x28
   44394:	mov	x3, x24
   44398:	mov	x1, x4
   4439c:	mov	x0, x4
   443a0:	bl	be60 <__gmpn_sub_n@plt>
   443a4:	mov	x27, x0
   443a8:	ldr	x4, [x29, #96]
   443ac:	cbnz	x22, 44490 <mpfr_divhigh_n@@Base+0x1c0>
   443b0:	ldr	x0, [x29, #104]
   443b4:	add	x28, x0, x28
   443b8:	cbz	x27, 44414 <mpfr_divhigh_n@@Base+0x144>
   443bc:	nop
   443c0:	ldr	x0, [x19]
   443c4:	sub	x1, x0, #0x1
   443c8:	str	x1, [x19]
   443cc:	cbnz	x0, 443f8 <mpfr_divhigh_n@@Base+0x128>
   443d0:	mov	x4, #0x1                   	// #1
   443d4:	b	443ec <mpfr_divhigh_n@@Base+0x11c>
   443d8:	ldr	x6, [x19, x4, lsl #3]
   443dc:	sub	x7, x6, #0x1
   443e0:	str	x7, [x19, x4, lsl #3]
   443e4:	add	x4, x4, #0x1
   443e8:	cbnz	x6, 443f8 <mpfr_divhigh_n@@Base+0x128>
   443ec:	cmp	x20, x4
   443f0:	b.gt	443d8 <mpfr_divhigh_n@@Base+0x108>
   443f4:	sub	x22, x22, #0x1
   443f8:	mov	x3, x26
   443fc:	mov	x2, x23
   44400:	mov	x1, x28
   44404:	mov	x0, x28
   44408:	bl	c5a0 <__gmpn_add_n@plt>
   4440c:	subs	x27, x27, x0
   44410:	b.ne	443c0 <mpfr_divhigh_n@@Base+0xf0>  // b.any
   44414:	ldr	x0, [x29, #104]
   44418:	add	x2, x23, x25
   4441c:	mov	x3, x24
   44420:	add	x1, x0, x25
   44424:	mov	x0, x21
   44428:	bl	442d0 <mpfr_divhigh_n@@Base>
   4442c:	ldr	x1, [x21, x24, lsl #3]
   44430:	adds	x0, x0, x1
   44434:	str	x0, [x21, x24, lsl #3]
   44438:	b.cc	44464 <mpfr_divhigh_n@@Base+0x194>  // b.lo, b.ul, b.last
   4443c:	mov	x0, #0x1                   	// #1
   44440:	b	44458 <mpfr_divhigh_n@@Base+0x188>
   44444:	ldr	x1, [x19, x0, lsl #3]
   44448:	add	x1, x1, #0x1
   4444c:	str	x1, [x19, x0, lsl #3]
   44450:	add	x0, x0, #0x1
   44454:	cbnz	x1, 44464 <mpfr_divhigh_n@@Base+0x194>
   44458:	cmp	x20, x0
   4445c:	b.gt	44444 <mpfr_divhigh_n@@Base+0x174>
   44460:	add	x22, x22, #0x1
   44464:	ldr	x0, [x29, #120]
   44468:	cbnz	x0, 44744 <mpfr_divhigh_n@@Base+0x474>
   4446c:	mov	sp, x29
   44470:	mov	x0, x22
   44474:	ldp	x19, x20, [sp, #16]
   44478:	ldp	x21, x22, [sp, #32]
   4447c:	ldp	x23, x24, [sp, #48]
   44480:	ldp	x25, x26, [sp, #64]
   44484:	ldp	x27, x28, [sp, #80]
   44488:	ldp	x29, x30, [sp], #128
   4448c:	ret
   44490:	mov	x3, x24
   44494:	mov	x2, x23
   44498:	mov	x1, x4
   4449c:	mov	x0, x4
   444a0:	bl	be60 <__gmpn_sub_n@plt>
   444a4:	add	x27, x27, x0
   444a8:	b	443b0 <mpfr_divhigh_n@@Base+0xe0>
   444ac:	ldr	x1, [x29, #104]
   444b0:	lsl	x25, x26, #3
   444b4:	mov	x0, x26
   444b8:	add	x19, x1, x25
   444bc:	b	444d0 <mpfr_divhigh_n@@Base+0x200>
   444c0:	ldr	x3, [x19, x0, lsl #3]
   444c4:	ldr	x2, [x23, x0, lsl #3]
   444c8:	cmp	x3, x2
   444cc:	b.ne	446e8 <mpfr_divhigh_n@@Base+0x418>  // b.any
   444d0:	subs	x0, x0, #0x1
   444d4:	b.pl	444c0 <mpfr_divhigh_n@@Base+0x1f0>  // b.nfrst
   444d8:	mov	x3, x26
   444dc:	mov	x2, x23
   444e0:	mov	x1, x19
   444e4:	mov	x0, x19
   444e8:	mov	x22, #0x1                   	// #1
   444ec:	bl	be60 <__gmpn_sub_n@plt>
   444f0:	add	x2, x23, x25
   444f4:	cmp	x26, #0x1
   444f8:	ldur	x24, [x2, #-8]
   444fc:	mvn	x0, x24
   44500:	lsr	x1, x24, #32
   44504:	b.eq	4474c <mpfr_divhigh_n@@Base+0x47c>  // b.none
   44508:	udiv	x28, x0, x1
   4450c:	and	x3, x24, #0xffffffff
   44510:	ldur	x27, [x2, #-16]
   44514:	msub	x0, x28, x1, x0
   44518:	mul	x2, x3, x28
   4451c:	lsl	x0, x0, #32
   44520:	orr	x0, x0, #0xffffffff
   44524:	cmp	x2, x0
   44528:	b.ls	44540 <mpfr_divhigh_n@@Base+0x270>  // b.plast
   4452c:	adds	x0, x24, x0
   44530:	sub	x4, x28, #0x1
   44534:	ccmp	x2, x0, #0x0, cc  // cc = lo, ul, last
   44538:	b.hi	447d0 <mpfr_divhigh_n@@Base+0x500>  // b.pmore
   4453c:	mov	x28, x4
   44540:	sub	x0, x0, x2
   44544:	udiv	x2, x0, x1
   44548:	msub	x0, x2, x1, x0
   4454c:	mul	x3, x3, x2
   44550:	lsl	x0, x0, #32
   44554:	orr	x0, x0, #0xffffffff
   44558:	cmp	x3, x0
   4455c:	b.ls	44574 <mpfr_divhigh_n@@Base+0x2a4>  // b.plast
   44560:	adds	x0, x24, x0
   44564:	sub	x1, x2, #0x1
   44568:	ccmp	x3, x0, #0x0, cc  // cc = lo, ul, last
   4456c:	sub	x2, x2, #0x2
   44570:	csel	x2, x2, x1, hi  // hi = pmore
   44574:	orr	x28, x2, x28, lsl #32
   44578:	mul	x0, x24, x28
   4457c:	adds	x0, x27, x0
   44580:	b.cc	445a4 <mpfr_divhigh_n@@Base+0x2d4>  // b.lo, b.ul, b.last
   44584:	cmp	x24, x0
   44588:	sub	x28, x28, #0x1
   4458c:	cset	x2, ls  // ls = plast
   44590:	sub	x0, x0, x24
   44594:	neg	x1, x2
   44598:	sub	x28, x28, x2
   4459c:	and	x1, x1, x24
   445a0:	sub	x0, x0, x1
   445a4:	umulh	x1, x27, x28
   445a8:	adds	x0, x1, x0
   445ac:	b.cs	447e8 <mpfr_divhigh_n@@Base+0x518>  // b.hs, b.nlast
   445b0:	add	x25, x19, x25
   445b4:	cmp	x26, #0x1
   445b8:	sub	x19, x19, #0x8
   445bc:	b.gt	44658 <mpfr_divhigh_n@@Base+0x388>
   445c0:	b	446b8 <mpfr_divhigh_n@@Base+0x3e8>
   445c4:	mul	x3, x2, x28
   445c8:	ldur	x0, [x25, #-16]
   445cc:	b.eq	446d0 <mpfr_divhigh_n@@Base+0x400>  // b.none
   445d0:	umulh	x1, x2, x28
   445d4:	adds	x7, x3, x0
   445d8:	adc	x1, x1, x2
   445dc:	umulh	x2, x27, x1
   445e0:	msub	x0, x24, x1, x0
   445e4:	mul	x6, x27, x1
   445e8:	ldur	x5, [x25, #-24]
   445ec:	subs	x3, x5, x27
   445f0:	sbc	x0, x0, x24
   445f4:	subs	x5, x3, x6
   445f8:	sbc	x0, x0, x2
   445fc:	cmp	x7, x0
   44600:	csetm	x2, ls  // ls = plast
   44604:	cinc	x20, x1, hi  // hi = pmore
   44608:	and	x3, x24, x2
   4460c:	and	x1, x27, x2
   44610:	adds	x2, x5, x1
   44614:	adc	x0, x0, x3
   44618:	cmp	x24, x0
   4461c:	b.ls	446dc <mpfr_divhigh_n@@Base+0x40c>  // b.plast
   44620:	mov	x1, x23
   44624:	mov	x3, x20
   44628:	mov	x2, x26
   4462c:	mov	x0, x19
   44630:	bl	c4c0 <__gmpn_submul_1@plt>
   44634:	ldur	x1, [x25, #-8]
   44638:	cmp	x0, x1
   4463c:	b.hi	44688 <mpfr_divhigh_n@@Base+0x3b8>  // b.pmore
   44640:	sub	x26, x26, #0x1
   44644:	add	x23, x23, #0x8
   44648:	cmp	x26, #0x1
   4464c:	sub	x25, x25, #0x8
   44650:	str	x20, [x21, x26, lsl #3]
   44654:	b.eq	446b8 <mpfr_divhigh_n@@Base+0x3e8>  // b.none
   44658:	ldur	x2, [x25, #-8]
   4465c:	cmp	x24, x2
   44660:	b.cs	445c4 <mpfr_divhigh_n@@Base+0x2f4>  // b.hs, b.nlast
   44664:	mov	x1, x23
   44668:	mov	x2, x26
   4466c:	mov	x0, x19
   44670:	mov	x20, #0xffffffffffffffff    	// #-1
   44674:	mov	x3, x20
   44678:	bl	c4c0 <__gmpn_submul_1@plt>
   4467c:	ldur	x1, [x25, #-8]
   44680:	cmp	x0, x1
   44684:	b.ls	44640 <mpfr_divhigh_n@@Base+0x370>  // b.plast
   44688:	mov	x3, x26
   4468c:	sub	x26, x26, #0x1
   44690:	mov	x2, x23
   44694:	mov	x1, x19
   44698:	mov	x0, x19
   4469c:	bl	c5a0 <__gmpn_add_n@plt>
   446a0:	sub	x1, x20, #0x1
   446a4:	str	x1, [x21, x26, lsl #3]
   446a8:	sub	x25, x25, #0x8
   446ac:	add	x23, x23, #0x8
   446b0:	cmp	x26, #0x1
   446b4:	b.ne	44658 <mpfr_divhigh_n@@Base+0x388>  // b.any
   446b8:	ldp	x1, x0, [x29, #96]
   446bc:	ldr	x0, [x0, x1, lsl #3]
   446c0:	umulh	x28, x0, x28
   446c4:	add	x0, x0, x28
   446c8:	str	x0, [x21]
   446cc:	b	4446c <mpfr_divhigh_n@@Base+0x19c>
   446d0:	cmp	x27, x0
   446d4:	b.hi	445d0 <mpfr_divhigh_n@@Base+0x300>  // b.pmore
   446d8:	b	44664 <mpfr_divhigh_n@@Base+0x394>
   446dc:	ccmp	x27, x2, #0x0, cs  // cs = hs, nlast
   446e0:	cinc	x20, x20, ls  // ls = plast
   446e4:	b	44620 <mpfr_divhigh_n@@Base+0x350>
   446e8:	mov	x22, #0x0                   	// #0
   446ec:	b.ls	444f0 <mpfr_divhigh_n@@Base+0x220>  // b.plast
   446f0:	b	444d8 <mpfr_divhigh_n@@Base+0x208>
   446f4:	mov	x20, #0x5555555555555555    	// #6148914691236517205
   446f8:	movk	x20, #0x5556
   446fc:	smulh	x20, x3, x20
   44700:	sub	x20, x20, x3, asr #63
   44704:	lsl	x20, x20, #1
   44708:	b	44314 <mpfr_divhigh_n@@Base+0x44>
   4470c:	ldr	x2, [x29, #104]
   44710:	mov	x4, x23
   44714:	mov	x0, x21
   44718:	mov	x5, x20
   4471c:	lsl	x3, x20, #1
   44720:	mov	x1, #0x0                   	// #0
   44724:	bl	ccb0 <__gmpn_divrem@plt>
   44728:	mov	x22, x0
   4472c:	b	4446c <mpfr_divhigh_n@@Base+0x19c>
   44730:	mov	x1, x25
   44734:	add	x0, x29, #0x78
   44738:	bl	bdc0 <mpfr_tmp_allocate@plt>
   4473c:	mov	x27, x0
   44740:	b	44368 <mpfr_divhigh_n@@Base+0x98>
   44744:	bl	c410 <mpfr_tmp_free@plt>
   44748:	b	4446c <mpfr_divhigh_n@@Base+0x19c>
   4474c:	udiv	x2, x0, x1
   44750:	and	x4, x24, #0xffffffff
   44754:	msub	x0, x2, x1, x0
   44758:	mul	x3, x4, x2
   4475c:	lsl	x0, x0, #32
   44760:	orr	x0, x0, #0xffffffff
   44764:	cmp	x3, x0
   44768:	b.ls	44780 <mpfr_divhigh_n@@Base+0x4b0>  // b.plast
   4476c:	adds	x0, x24, x0
   44770:	sub	x5, x2, #0x1
   44774:	ccmp	x3, x0, #0x0, cc  // cc = lo, ul, last
   44778:	b.hi	447dc <mpfr_divhigh_n@@Base+0x50c>  // b.pmore
   4477c:	mov	x2, x5
   44780:	sub	x0, x0, x3
   44784:	udiv	x3, x0, x1
   44788:	msub	x0, x3, x1, x0
   4478c:	mul	x1, x4, x3
   44790:	lsl	x0, x0, #32
   44794:	orr	x0, x0, #0xffffffff
   44798:	cmp	x1, x0
   4479c:	b.ls	447b4 <mpfr_divhigh_n@@Base+0x4e4>  // b.plast
   447a0:	adds	x0, x24, x0
   447a4:	sub	x4, x3, #0x1
   447a8:	ccmp	x1, x0, #0x0, cc  // cc = lo, ul, last
   447ac:	sub	x0, x3, #0x2
   447b0:	csel	x3, x0, x4, hi  // hi = pmore
   447b4:	ldr	x0, [x29, #104]
   447b8:	ldr	x1, [x0, #8]
   447bc:	orr	x0, x3, x2, lsl #32
   447c0:	umulh	x0, x1, x0
   447c4:	add	x0, x1, x0
   447c8:	str	x0, [x21]
   447cc:	b	4446c <mpfr_divhigh_n@@Base+0x19c>
   447d0:	sub	x28, x28, #0x2
   447d4:	add	x0, x0, x24
   447d8:	b	44540 <mpfr_divhigh_n@@Base+0x270>
   447dc:	sub	x2, x2, #0x2
   447e0:	add	x0, x0, x24
   447e4:	b	44780 <mpfr_divhigh_n@@Base+0x4b0>
   447e8:	cmp	x24, x0
   447ec:	sub	x1, x28, #0x1
   447f0:	b.ls	447fc <mpfr_divhigh_n@@Base+0x52c>  // b.plast
   447f4:	mov	x28, x1
   447f8:	b	445b0 <mpfr_divhigh_n@@Base+0x2e0>
   447fc:	mul	x2, x27, x28
   44800:	sub	x28, x28, #0x2
   44804:	cmp	x27, x2
   44808:	ccmp	x24, x0, #0x0, hi  // hi = pmore
   4480c:	csel	x28, x28, x1, cc  // cc = lo, ul, last
   44810:	b	445b0 <mpfr_divhigh_n@@Base+0x2e0>
   44814:	nop

0000000000044818 <mpfr_get_f@@Base>:
   44818:	stp	x29, x30, [sp, #-128]!
   4481c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   44820:	mov	x29, sp
   44824:	stp	x19, x20, [sp, #16]
   44828:	mov	x19, x1
   4482c:	mov	x20, x0
   44830:	ldr	x1, [x1, #16]
   44834:	stp	x23, x24, [sp, #48]
   44838:	cmp	x1, x3
   4483c:	b.le	44a14 <mpfr_get_f@@Base+0x1fc>
   44840:	negs	x3, x1
   44844:	and	x1, x1, #0x3f
   44848:	and	x3, x3, #0x3f
   4484c:	stp	x25, x26, [sp, #64]
   44850:	csneg	x3, x1, x3, mi  // mi = first
   44854:	cmp	x3, #0x0
   44858:	mov	w26, #0x40                  	// #64
   4485c:	sub	w0, w26, w3
   44860:	stp	x21, x22, [sp, #32]
   44864:	csneg	w3, w0, w3, gt
   44868:	ldr	w21, [x20]
   4486c:	ldr	x4, [x19]
   44870:	sxtw	x22, w3
   44874:	sbfiz	x1, x21, #6, #32
   44878:	sxtw	x23, w21
   4487c:	add	x0, x4, x22
   44880:	cmp	x1, x0
   44884:	ldr	x25, [x20, #16]
   44888:	b.lt	44920 <mpfr_get_f@@Base+0x108>  // b.tstop
   4488c:	sub	x2, x4, #0x1
   44890:	asr	x2, x2, #6
   44894:	add	x2, x2, #0x1
   44898:	cmp	x23, x2
   4489c:	b.lt	44afc <mpfr_get_f@@Base+0x2e4>  // b.tstop
   448a0:	sub	x23, x23, x2
   448a4:	ldr	x1, [x19, #24]
   448a8:	add	x0, x25, x23, lsl #3
   448ac:	cbnz	w3, 449c8 <mpfr_get_f@@Base+0x1b0>
   448b0:	cmp	x1, x0
   448b4:	b.eq	448c0 <mpfr_get_f@@Base+0xa8>  // b.none
   448b8:	lsl	x2, x2, #3
   448bc:	bl	ba10 <memcpy@plt>
   448c0:	cmp	x23, #0x0
   448c4:	b.le	448d8 <mpfr_get_f@@Base+0xc0>
   448c8:	lsl	x2, x23, #3
   448cc:	mov	x0, x25
   448d0:	mov	w1, #0x0                   	// #0
   448d4:	bl	c110 <memset@plt>
   448d8:	ldr	x0, [x19, #16]
   448dc:	mov	w24, #0x0                   	// #0
   448e0:	adds	x22, x22, x0
   448e4:	add	x1, x22, #0x3f
   448e8:	csel	x22, x1, x22, mi  // mi = first
   448ec:	asr	x22, x22, #6
   448f0:	str	x22, [x20, #8]
   448f4:	ldr	w0, [x19, #8]
   448f8:	ldp	x25, x26, [sp, #64]
   448fc:	cmp	w0, #0x0
   44900:	cneg	w21, w21, lt  // lt = tstop
   44904:	str	w21, [x20, #4]
   44908:	ldp	x21, x22, [sp, #32]
   4490c:	mov	w0, w24
   44910:	ldp	x19, x20, [sp, #16]
   44914:	ldp	x23, x24, [sp, #48]
   44918:	ldp	x29, x30, [sp], #128
   4491c:	ret
   44920:	str	x27, [sp, #80]
   44924:	add	x27, sp, #0x60
   44928:	sub	x1, x1, x22
   4492c:	mov	w24, w2
   44930:	mov	x0, x27
   44934:	bl	ca80 <mpfr_init2@plt>
   44938:	ldr	x22, [sp, #96]
   4493c:	sub	x22, x22, #0x1
   44940:	asr	x22, x22, #6
   44944:	add	x22, x22, #0x1
   44948:	cmp	x23, x22
   4494c:	b.ne	44ac8 <mpfr_get_f@@Base+0x2b0>  // b.any
   44950:	ldr	w3, [x19, #8]
   44954:	mov	w2, w24
   44958:	mov	x1, x19
   4495c:	mov	x0, x27
   44960:	bl	c6a0 <mpfr_set4@plt>
   44964:	mov	w24, w0
   44968:	ldr	x2, [sp, #112]
   4496c:	negs	x3, x2
   44970:	and	x0, x2, #0x3f
   44974:	and	x3, x3, #0x3f
   44978:	csneg	x3, x0, x3, mi  // mi = first
   4497c:	cmp	x3, #0x0
   44980:	b.le	449ec <mpfr_get_f@@Base+0x1d4>
   44984:	ldr	x1, [sp, #120]
   44988:	sub	w26, w26, w3
   4498c:	mov	x2, x22
   44990:	mov	x0, x25
   44994:	mov	w3, w26
   44998:	bl	bce0 <__gmpn_rshift@plt>
   4499c:	ldr	x2, [sp, #112]
   449a0:	add	x2, x2, w26, sxtw
   449a4:	cmp	x2, #0x0
   449a8:	add	x3, x2, #0x3f
   449ac:	csel	x2, x3, x2, lt  // lt = tstop
   449b0:	mov	x0, x27
   449b4:	asr	x2, x2, #6
   449b8:	str	x2, [x20, #8]
   449bc:	bl	c070 <mpfr_clear@plt>
   449c0:	ldr	x27, [sp, #80]
   449c4:	b	448f4 <mpfr_get_f@@Base+0xdc>
   449c8:	bl	bce0 <__gmpn_rshift@plt>
   449cc:	cmp	x23, #0x0
   449d0:	ccmp	x0, #0x0, #0x4, le
   449d4:	b.ne	44ae0 <mpfr_get_f@@Base+0x2c8>  // b.any
   449d8:	cmp	x23, #0x0
   449dc:	b.le	448d8 <mpfr_get_f@@Base+0xc0>
   449e0:	sub	x23, x23, #0x1
   449e4:	str	x0, [x25, x23, lsl #3]
   449e8:	b	448c0 <mpfr_get_f@@Base+0xa8>
   449ec:	neg	w26, w3
   449f0:	ldr	x1, [sp, #120]
   449f4:	cbnz	x0, 4498c <mpfr_get_f@@Base+0x174>
   449f8:	cmp	x1, x25
   449fc:	b.eq	449a4 <mpfr_get_f@@Base+0x18c>  // b.none
   44a00:	lsl	x2, x23, #3
   44a04:	mov	x0, x25
   44a08:	bl	ba10 <memcpy@plt>
   44a0c:	ldr	x2, [sp, #112]
   44a10:	b	449a4 <mpfr_get_f@@Base+0x18c>
   44a14:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   44a18:	cmp	x1, x2
   44a1c:	b.eq	44ab0 <mpfr_get_f@@Base+0x298>  // b.none
   44a20:	mrs	x2, tpidr_el0
   44a24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   44a28:	ldr	x3, [x0, #2576]
   44a2c:	add	x0, x0, #0xa10
   44a30:	blr	x3
   44a34:	add	x4, x2, x0
   44a38:	mov	x3, #0x2                   	// #2
   44a3c:	movk	x3, #0x8000, lsl #48
   44a40:	cmp	x1, x3
   44a44:	ldr	w0, [x2, x0]
   44a48:	orr	w0, w0, #0x10
   44a4c:	b.eq	44aa4 <mpfr_get_f@@Base+0x28c>  // b.none
   44a50:	ldr	w1, [x20]
   44a54:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   44a58:	str	w0, [x4]
   44a5c:	str	w1, [x20, #4]
   44a60:	cmp	w1, #0x0
   44a64:	str	x2, [x20, #8]
   44a68:	ldr	x0, [x20, #16]
   44a6c:	b.le	44a84 <mpfr_get_f@@Base+0x26c>
   44a70:	sub	w1, w1, #0x1
   44a74:	add	x2, x1, #0x1
   44a78:	mov	w1, #0xff                  	// #255
   44a7c:	lsl	x2, x2, #3
   44a80:	bl	c110 <memset@plt>
   44a84:	ldr	w0, [x19, #8]
   44a88:	cmp	w0, #0x0
   44a8c:	b.gt	44ac0 <mpfr_get_f@@Base+0x2a8>
   44a90:	mov	x1, x20
   44a94:	mov	x0, x20
   44a98:	mov	w24, #0x1                   	// #1
   44a9c:	bl	c6d0 <__gmpf_neg@plt>
   44aa0:	b	4490c <mpfr_get_f@@Base+0xf4>
   44aa4:	mov	w24, #0x0                   	// #0
   44aa8:	str	w0, [x4]
   44aac:	b	4490c <mpfr_get_f@@Base+0xf4>
   44ab0:	mov	x1, #0x0                   	// #0
   44ab4:	mov	w24, #0x0                   	// #0
   44ab8:	bl	c180 <__gmpf_set_ui@plt>
   44abc:	b	4490c <mpfr_get_f@@Base+0xf4>
   44ac0:	mov	w24, #0xffffffff            	// #-1
   44ac4:	b	4490c <mpfr_get_f@@Base+0xf4>
   44ac8:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   44acc:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   44ad0:	add	x2, x2, #0x748
   44ad4:	add	x0, x0, #0x728
   44ad8:	mov	w1, #0x7c                  	// #124
   44adc:	bl	cb40 <mpfr_assert_fail@plt>
   44ae0:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   44ae4:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   44ae8:	add	x2, x2, #0x730
   44aec:	add	x0, x0, #0x728
   44af0:	mov	w1, #0x68                  	// #104
   44af4:	str	x27, [sp, #80]
   44af8:	bl	cb40 <mpfr_assert_fail@plt>
   44afc:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   44b00:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   44b04:	add	x2, x2, #0x718
   44b08:	add	x0, x0, #0x728
   44b0c:	mov	w1, #0x61                  	// #97
   44b10:	str	x27, [sp, #80]
   44b14:	bl	cb40 <mpfr_assert_fail@plt>

0000000000044b18 <mpfr_round_p@@Base>:
   44b18:	cmp	x2, #0x0
   44b1c:	lsl	x5, x1, #6
   44b20:	ccmp	x2, x3, #0x0, gt
   44b24:	ccmp	x5, x3, #0x4, hi  // hi = pmore
   44b28:	b.le	44bd0 <mpfr_round_p@@Base+0xb8>
   44b2c:	cmp	x5, x2
   44b30:	add	x4, x3, #0x3f
   44b34:	csel	x2, x5, x2, ls  // ls = plast
   44b38:	cmp	x3, #0x0
   44b3c:	csel	x4, x4, x3, lt  // lt = tstop
   44b40:	negs	x5, x3
   44b44:	and	x5, x5, #0x3f
   44b48:	and	x3, x3, #0x3f
   44b4c:	asr	x6, x4, #6
   44b50:	csneg	x3, x3, x5, mi  // mi = first
   44b54:	sub	x1, x1, #0x1
   44b58:	cmp	x2, #0x0
   44b5c:	add	x4, x2, #0x3f
   44b60:	sub	x1, x1, x6
   44b64:	csel	x4, x4, x2, lt  // lt = tstop
   44b68:	mov	w5, #0x40                  	// #64
   44b6c:	sub	w3, w5, w3
   44b70:	add	x7, x0, x1, lsl #3
   44b74:	asr	x4, x4, #6
   44b78:	cmp	w3, w5
   44b7c:	sub	x4, x4, x6
   44b80:	mov	x5, #0xffffffffffffffff    	// #-1
   44b84:	ldr	x0, [x0, x1, lsl #3]
   44b88:	b.eq	44b9c <mpfr_round_p@@Base+0x84>  // b.none
   44b8c:	mov	x5, #0x1                   	// #1
   44b90:	lsl	x5, x5, x3
   44b94:	sub	x5, x5, #0x1
   44b98:	and	x0, x0, x5
   44b9c:	cbnz	x4, 44bd8 <mpfr_round_p@@Base+0xc0>
   44ba0:	negs	x1, x2
   44ba4:	and	x2, x2, #0x3f
   44ba8:	and	x1, x1, #0x3f
   44bac:	mov	w3, #0x40                  	// #64
   44bb0:	csneg	x2, x2, x1, mi  // mi = first
   44bb4:	sub	w2, w3, w2
   44bb8:	lsr	x0, x0, x2
   44bbc:	cmp	x0, #0x0
   44bc0:	lsr	x5, x5, x2
   44bc4:	ccmp	x5, x0, #0x4, ne  // ne = any
   44bc8:	cset	w0, ne  // ne = any
   44bcc:	ret
   44bd0:	mov	w0, #0x0                   	// #0
   44bd4:	ret
   44bd8:	sub	x1, x7, #0x8
   44bdc:	cbz	x0, 44c4c <mpfr_round_p@@Base+0x134>
   44be0:	cmp	x0, x5
   44be4:	mov	w0, #0x1                   	// #1
   44be8:	b.ne	44bcc <mpfr_round_p@@Base+0xb4>  // b.any
   44bec:	mov	x0, x1
   44bf0:	sub	x4, x7, x4, lsl #3
   44bf4:	b	44c04 <mpfr_round_p@@Base+0xec>
   44bf8:	ldr	x1, [x0], #-8
   44bfc:	cmn	x1, #0x1
   44c00:	b.ne	44ca0 <mpfr_round_p@@Base+0x188>  // b.any
   44c04:	cmp	x4, x0
   44c08:	b.ne	44bf8 <mpfr_round_p@@Base+0xe0>  // b.any
   44c0c:	negs	x1, x2
   44c10:	and	x2, x2, #0x3f
   44c14:	and	x1, x1, #0x3f
   44c18:	mov	w3, #0x40                  	// #64
   44c1c:	csneg	x1, x2, x1, mi  // mi = first
   44c20:	mov	w0, #0x0                   	// #0
   44c24:	sub	w1, w3, w1
   44c28:	cmp	w1, w3
   44c2c:	b.eq	44bcc <mpfr_round_p@@Base+0xb4>  // b.none
   44c30:	ldr	x2, [x4]
   44c34:	mov	x0, #0xffffffffffffffff    	// #-1
   44c38:	lsr	x0, x0, x1
   44c3c:	lsr	x1, x2, x1
   44c40:	cmp	x1, x0
   44c44:	cset	w0, ne  // ne = any
   44c48:	ret
   44c4c:	mov	x0, x1
   44c50:	sub	x4, x7, x4, lsl #3
   44c54:	b	44c60 <mpfr_round_p@@Base+0x148>
   44c58:	ldr	x1, [x0], #-8
   44c5c:	cbnz	x1, 44ca0 <mpfr_round_p@@Base+0x188>
   44c60:	cmp	x4, x0
   44c64:	b.ne	44c58 <mpfr_round_p@@Base+0x140>  // b.any
   44c68:	negs	x1, x2
   44c6c:	and	x2, x2, #0x3f
   44c70:	and	x1, x1, #0x3f
   44c74:	mov	w3, #0x40                  	// #64
   44c78:	csneg	x1, x2, x1, mi  // mi = first
   44c7c:	mov	w0, #0x0                   	// #0
   44c80:	sub	w1, w3, w1
   44c84:	cmp	w1, w3
   44c88:	b.eq	44bcc <mpfr_round_p@@Base+0xb4>  // b.none
   44c8c:	ldr	x0, [x4]
   44c90:	lsr	x1, x0, x1
   44c94:	cmp	x1, #0x0
   44c98:	cset	w0, ne  // ne = any
   44c9c:	ret
   44ca0:	mov	w0, #0x1                   	// #1
   44ca4:	ret

0000000000044ca8 <mpfr_erfc@@Base>:
   44ca8:	stp	x29, x30, [sp, #-288]!
   44cac:	mov	x29, sp
   44cb0:	stp	x19, x20, [sp, #16]
   44cb4:	mov	x20, x1
   44cb8:	stp	x21, x22, [sp, #32]
   44cbc:	mrs	x21, tpidr_el0
   44cc0:	stp	x23, x24, [sp, #48]
   44cc4:	mov	x24, x0
   44cc8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   44ccc:	ldr	x1, [x0, #2512]
   44cd0:	add	x0, x0, #0x9d0
   44cd4:	blr	x1
   44cd8:	ldr	x0, [x21, x0]
   44cdc:	stp	x25, x26, [sp, #64]
   44ce0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   44ce4:	ldr	x22, [x20, #16]
   44ce8:	str	x0, [sp, #120]
   44cec:	mov	w25, w2
   44cf0:	cmp	x22, x1
   44cf4:	b.le	45400 <mpfr_erfc@@Base+0x758>
   44cf8:	ldr	w1, [x20, #8]
   44cfc:	cmp	w1, #0x0
   44d00:	b.le	44d4c <mpfr_erfc@@Base+0xa4>
   44d04:	mov	x1, x0
   44d08:	mov	x0, #0xffffffffc0000001    	// #-1073741823
   44d0c:	cmp	x1, x0
   44d10:	b.ge	44f88 <mpfr_erfc@@Base+0x2e0>  // b.tcont
   44d14:	mov	x1, #0x2646                	// #9798
   44d18:	mov	x0, x20
   44d1c:	mov	x2, #0x0                   	// #0
   44d20:	movk	x1, #0x6a91, lsl #16
   44d24:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   44d28:	tbz	w0, #31, 44f9c <mpfr_erfc@@Base+0x2f4>
   44d2c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   44d30:	ldr	x1, [x0, #2512]
   44d34:	add	x0, x0, #0x9d0
   44d38:	blr	x1
   44d3c:	ldr	w1, [x20, #8]
   44d40:	ldr	x22, [x20, #16]
   44d44:	ldr	x0, [x21, x0]
   44d48:	str	x0, [sp, #120]
   44d4c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   44d50:	ldr	x2, [x0, #2576]
   44d54:	add	x0, x0, #0xa10
   44d58:	blr	x2
   44d5c:	ldr	w0, [x21, x0]
   44d60:	str	w0, [sp, #132]
   44d64:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   44d68:	ldr	x19, [x24]
   44d6c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   44d70:	ldr	x2, [x0, #2544]
   44d74:	add	x0, x0, #0x9f0
   44d78:	blr	x2
   44d7c:	add	x3, x21, x0
   44d80:	ldr	x0, [x21, x0]
   44d84:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   44d88:	str	x4, [x3]
   44d8c:	str	x0, [sp, #136]
   44d90:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   44d94:	ldr	x5, [x0, #2512]
   44d98:	add	x0, x0, #0x9d0
   44d9c:	blr	x5
   44da0:	str	x2, [x21, x0]
   44da4:	tbnz	w1, #31, 45030 <mpfr_erfc@@Base+0x388>
   44da8:	mvn	x22, x22
   44dac:	cmp	x22, #0x0
   44db0:	b.le	44dc0 <mpfr_erfc@@Base+0x118>
   44db4:	add	x0, x19, #0x1
   44db8:	cmp	x22, x0
   44dbc:	b.hi	45634 <mpfr_erfc@@Base+0x98c>  // b.pmore
   44dc0:	stp	x27, x28, [sp, #80]
   44dc4:	cmp	x19, #0x1
   44dc8:	b.eq	44de8 <mpfr_erfc@@Base+0x140>  // b.none
   44dcc:	mov	x0, x19
   44dd0:	b.le	45548 <mpfr_erfc@@Base+0x8a0>
   44dd4:	sub	x0, x0, #0x1
   44dd8:	mov	w1, #0x40                  	// #64
   44ddc:	clz	x0, x0
   44de0:	sub	w0, w1, w0
   44de4:	add	x19, x19, w0, sxtw
   44de8:	ldr	x0, [x20, #16]
   44dec:	add	x19, x19, #0x3
   44df0:	mov	x1, #0x40                  	// #64
   44df4:	add	x28, sp, #0xa0
   44df8:	cmp	x0, #0x0
   44dfc:	add	x22, sp, #0xc0
   44e00:	add	x0, x19, x0, lsl #1
   44e04:	add	x26, sp, #0xe0
   44e08:	csel	x19, x0, x19, gt
   44e0c:	add	x23, sp, #0x100
   44e10:	mov	x0, x28
   44e14:	str	x1, [sp, #152]
   44e18:	mov	x1, x19
   44e1c:	bl	ca80 <mpfr_init2@plt>
   44e20:	ldr	w0, [x20, #8]
   44e24:	cmp	w0, #0x0
   44e28:	b.le	44e60 <mpfr_erfc@@Base+0x1b8>
   44e2c:	ldr	x0, [x20, #16]
   44e30:	cmp	x19, #0x1
   44e34:	sub	x0, x0, #0x1
   44e38:	lsl	x0, x0, #1
   44e3c:	b.eq	45540 <mpfr_erfc@@Base+0x898>  // b.none
   44e40:	b.le	452b8 <mpfr_erfc@@Base+0x610>
   44e44:	sub	x1, x19, #0x1
   44e48:	mov	w2, #0x40                  	// #64
   44e4c:	clz	x1, x1
   44e50:	sub	w1, w2, w1
   44e54:	sxtw	x1, w1
   44e58:	cmp	x0, x1
   44e5c:	b.ge	45074 <mpfr_erfc@@Base+0x3cc>  // b.tcont
   44e60:	mov	x1, x20
   44e64:	mov	w2, #0x0                   	// #0
   44e68:	mov	x0, x28
   44e6c:	bl	c1e0 <mpfr_erf@plt>
   44e70:	mov	x1, #0x1                   	// #1
   44e74:	mov	x2, x28
   44e78:	mov	x0, x28
   44e7c:	mov	w3, #0x0                   	// #0
   44e80:	ldr	x27, [sp, #176]
   44e84:	bl	ca50 <mpfr_ui_sub@plt>
   44e88:	ldr	x0, [sp, #176]
   44e8c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   44e90:	cmp	x0, x1
   44e94:	b.eq	44fb8 <mpfr_erfc@@Base+0x310>  // b.none
   44e98:	subs	x27, x27, x0
   44e9c:	csel	x27, x27, xzr, pl  // pl = nfrst
   44ea0:	add	x27, x27, #0x1
   44ea4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   44ea8:	cmp	x0, x1
   44eac:	b.le	44fbc <mpfr_erfc@@Base+0x314>
   44eb0:	ldr	x1, [sp, #160]
   44eb4:	cmp	w25, #0x0
   44eb8:	ldr	x0, [sp, #184]
   44ebc:	sub	x1, x1, #0x1
   44ec0:	ldr	x3, [x24]
   44ec4:	asr	x1, x1, #6
   44ec8:	sub	x2, x19, x27
   44ecc:	add	x1, x1, #0x1
   44ed0:	cinc	x3, x3, eq  // eq = none
   44ed4:	bl	c370 <mpfr_round_p@plt>
   44ed8:	cbz	w0, 44fbc <mpfr_erfc@@Base+0x314>
   44edc:	ldr	w3, [sp, #168]
   44ee0:	mov	w2, w25
   44ee4:	mov	x1, x28
   44ee8:	mov	x0, x24
   44eec:	bl	c6a0 <mpfr_set4@plt>
   44ef0:	mov	w19, w0
   44ef4:	mov	x0, x28
   44ef8:	bl	c070 <mpfr_clear@plt>
   44efc:	ldp	x27, x28, [sp, #80]
   44f00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   44f04:	ldr	x2, [x0, #2576]
   44f08:	add	x0, x0, #0xa10
   44f0c:	blr	x2
   44f10:	ldr	w2, [sp, #132]
   44f14:	str	w2, [x21, x0]
   44f18:	ldr	x1, [x24, #16]
   44f1c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   44f20:	ldr	x2, [x0, #2512]
   44f24:	add	x0, x0, #0x9d0
   44f28:	blr	x2
   44f2c:	ldr	x2, [sp, #120]
   44f30:	str	x2, [x21, x0]
   44f34:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   44f38:	ldr	x3, [x0, #2544]
   44f3c:	add	x0, x0, #0x9f0
   44f40:	blr	x3
   44f44:	ldr	x3, [sp, #136]
   44f48:	str	x3, [x21, x0]
   44f4c:	cmp	x3, x1
   44f50:	ccmp	x1, x2, #0x1, ge  // ge = tcont
   44f54:	b.ge	44ff4 <mpfr_erfc@@Base+0x34c>  // b.tcont
   44f58:	mov	w1, w19
   44f5c:	mov	w2, w25
   44f60:	mov	x0, x24
   44f64:	bl	cb30 <mpfr_check_range@plt>
   44f68:	mov	w19, w0
   44f6c:	mov	w0, w19
   44f70:	ldp	x19, x20, [sp, #16]
   44f74:	ldp	x21, x22, [sp, #32]
   44f78:	ldp	x23, x24, [sp, #48]
   44f7c:	ldp	x25, x26, [sp, #64]
   44f80:	ldp	x29, x30, [sp], #288
   44f84:	ret
   44f88:	mov	x0, x20
   44f8c:	mov	x2, #0x0                   	// #0
   44f90:	mov	x1, #0x6a92                	// #27282
   44f94:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   44f98:	tbnz	w0, #31, 44d14 <mpfr_erfc@@Base+0x6c>
   44f9c:	cmp	w25, #0x0
   44fa0:	mov	w2, #0x1                   	// #1
   44fa4:	mov	x0, x24
   44fa8:	csel	w1, w25, w2, ne  // ne = any
   44fac:	bl	c3c0 <mpfr_underflow@plt>
   44fb0:	mov	w19, w0
   44fb4:	b	44f6c <mpfr_erfc@@Base+0x2c4>
   44fb8:	lsl	x19, x19, #1
   44fbc:	ldr	x1, [sp, #152]
   44fc0:	mov	x0, #0xfffffffffffffeff    	// #-257
   44fc4:	movk	x0, #0x7fff, lsl #48
   44fc8:	sub	x0, x0, x19
   44fcc:	cmp	x0, x1
   44fd0:	b.lt	45684 <mpfr_erfc@@Base+0x9dc>  // b.tstop
   44fd4:	add	x19, x19, x1
   44fd8:	mov	x0, x28
   44fdc:	mov	x1, x19
   44fe0:	add	x2, x19, x19, lsr #63
   44fe4:	asr	x2, x2, #1
   44fe8:	str	x2, [sp, #152]
   44fec:	bl	bed0 <mpfr_set_prec@plt>
   44ff0:	b	44e20 <mpfr_erfc@@Base+0x178>
   44ff4:	cbz	w19, 44f6c <mpfr_erfc@@Base+0x2c4>
   44ff8:	ldr	w0, [sp, #132]
   44ffc:	ldp	x23, x24, [sp, #48]
   45000:	orr	w1, w0, #0x8
   45004:	ldp	x25, x26, [sp, #64]
   45008:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4500c:	ldr	x2, [x0, #2576]
   45010:	add	x0, x0, #0xa10
   45014:	blr	x2
   45018:	str	w1, [x21, x0]
   4501c:	mov	w0, w19
   45020:	ldp	x19, x20, [sp, #16]
   45024:	ldp	x21, x22, [sp, #32]
   45028:	ldp	x29, x30, [sp], #288
   4502c:	ret
   45030:	cmp	x19, #0x7
   45034:	b.le	451f8 <mpfr_erfc@@Base+0x550>
   45038:	cmp	x19, #0x19
   4503c:	b.le	4569c <mpfr_erfc@@Base+0x9f4>
   45040:	cmp	x19, #0x78
   45044:	b.le	45200 <mpfr_erfc@@Base+0x558>
   45048:	mov	x0, x20
   4504c:	mov	x2, #0x0                   	// #0
   45050:	mov	x1, #0xffffffffffff956e    	// #-27282
   45054:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   45058:	cmp	w0, #0x0
   4505c:	b.le	45218 <mpfr_erfc@@Base+0x570>
   45060:	cmp	x22, #0x2
   45064:	b.gt	45568 <mpfr_erfc@@Base+0x8c0>
   45068:	ldr	x19, [x24]
   4506c:	ldr	x22, [x20, #16]
   45070:	b	44da8 <mpfr_erfc@@Base+0x100>
   45074:	ldr	x0, [sp, #160]
   45078:	mov	x27, #0x1                   	// #1
   4507c:	mov	x1, x0
   45080:	mov	x0, x22
   45084:	str	x1, [sp, #144]
   45088:	bl	ca80 <mpfr_init2@plt>
   4508c:	ldr	x1, [sp, #144]
   45090:	mov	x0, x26
   45094:	bl	ca80 <mpfr_init2@plt>
   45098:	mov	x0, x23
   4509c:	mov	x1, #0x1f                  	// #31
   450a0:	bl	ca80 <mpfr_init2@plt>
   450a4:	mov	x2, x20
   450a8:	mov	x1, x20
   450ac:	mov	w3, #0x3                   	// #3
   450b0:	mov	x0, x26
   450b4:	bl	bd50 <mpfr_mul@plt>
   450b8:	mov	x2, x26
   450bc:	mov	x1, x27
   450c0:	mov	w3, #0x2                   	// #2
   450c4:	mov	x0, x26
   450c8:	bl	c2f0 <mpfr_ui_div@plt>
   450cc:	mov	x2, x27
   450d0:	mov	x1, x26
   450d4:	mov	w3, #0x2                   	// #2
   450d8:	mov	x0, x26
   450dc:	bl	c8f0 <mpfr_div_2ui@plt>
   450e0:	mov	x1, x27
   450e4:	mov	w3, #0x0                   	// #0
   450e8:	mov	x2, #0x0                   	// #0
   450ec:	mov	x0, x22
   450f0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   450f4:	str	x27, [sp, #112]
   450f8:	ldr	w3, [sp, #200]
   450fc:	mov	x1, x22
   45100:	mov	x0, x28
   45104:	mov	w2, #0x0                   	// #0
   45108:	bl	c6a0 <mpfr_set4@plt>
   4510c:	mov	x0, #0xe                   	// #14
   45110:	str	x0, [sp, #104]
   45114:	mov	w0, #0x1                   	// #1
   45118:	str	w0, [sp, #264]
   4511c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   45120:	str	x0, [sp, #272]
   45124:	b	4514c <mpfr_erfc@@Base+0x4a4>
   45128:	mov	x0, x28
   4512c:	bl	bb70 <mpfr_sub@plt>
   45130:	ldr	x0, [sp, #112]
   45134:	add	x27, x27, #0x2
   45138:	add	x0, x0, #0x1
   4513c:	str	x0, [sp, #112]
   45140:	ldr	x0, [sp, #104]
   45144:	add	x0, x0, #0xe
   45148:	str	x0, [sp, #104]
   4514c:	mov	x2, x27
   45150:	mov	x1, x22
   45154:	mov	w3, #0x2                   	// #2
   45158:	mov	x0, x22
   4515c:	bl	ba50 <mpfr_mul_ui@plt>
   45160:	mov	x2, x26
   45164:	mov	x1, x22
   45168:	mov	w3, #0x2                   	// #2
   4516c:	mov	x0, x22
   45170:	bl	bd50 <mpfr_mul@plt>
   45174:	ldr	x5, [sp, #176]
   45178:	mov	x1, x23
   4517c:	ldr	x2, [sp, #208]
   45180:	mov	w3, #0x2                   	// #2
   45184:	mov	x0, x23
   45188:	sub	x2, x5, x2
   4518c:	bl	bb90 <mpfr_mul_2si@plt>
   45190:	ldr	x2, [sp, #104]
   45194:	mov	x1, x23
   45198:	mov	w3, #0x2                   	// #2
   4519c:	mov	x0, x23
   451a0:	bl	c260 <mpfr_add_ui@plt>
   451a4:	ldr	x5, [sp, #176]
   451a8:	mov	x1, x23
   451ac:	ldr	x2, [sp, #208]
   451b0:	mov	x0, x23
   451b4:	mov	w3, #0x2                   	// #2
   451b8:	sub	x2, x5, x2
   451bc:	bl	c420 <mpfr_div_2si@plt>
   451c0:	ldr	x2, [sp, #144]
   451c4:	ldr	x0, [sp, #208]
   451c8:	ldr	x1, [sp, #176]
   451cc:	add	x0, x2, x0
   451d0:	cmp	x0, x1
   451d4:	b.le	452d0 <mpfr_erfc@@Base+0x628>
   451d8:	ldr	x0, [sp, #112]
   451dc:	mov	x2, x22
   451e0:	mov	x1, x28
   451e4:	mov	w3, #0x0                   	// #0
   451e8:	tbnz	w0, #0, 45128 <mpfr_erfc@@Base+0x480>
   451ec:	mov	x0, x28
   451f0:	bl	c1a0 <mpfr_add@plt>
   451f4:	b	45130 <mpfr_erfc@@Base+0x488>
   451f8:	cmp	x22, #0x1
   451fc:	b.gt	45218 <mpfr_erfc@@Base+0x570>
   45200:	mov	x0, x20
   45204:	mov	x2, #0x0                   	// #0
   45208:	mov	x1, #0xfffffffffffffff7    	// #-9
   4520c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   45210:	cmp	w0, #0x0
   45214:	b.gt	45048 <mpfr_erfc@@Base+0x3a0>
   45218:	mov	x2, #0x0                   	// #0
   4521c:	mov	x1, #0x2                   	// #2
   45220:	mov	x0, x24
   45224:	mov	w3, #0x0                   	// #0
   45228:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4522c:	mov	w19, #0x1                   	// #1
   45230:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45234:	ldr	x2, [x0, #2576]
   45238:	add	x0, x0, #0xa10
   4523c:	blr	x2
   45240:	add	x0, x21, x0
   45244:	and	w1, w25, #0xfffffffd
   45248:	cmp	w1, #0x1
   4524c:	ldr	w1, [x0]
   45250:	orr	w1, w1, #0x8
   45254:	str	w1, [x0]
   45258:	b.eq	4543c <mpfr_erfc@@Base+0x794>  // b.none
   4525c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45260:	ldr	x1, [x0, #2576]
   45264:	add	x0, x0, #0xa10
   45268:	blr	x1
   4526c:	ldr	w1, [sp, #132]
   45270:	str	w1, [x21, x0]
   45274:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45278:	ldr	x2, [x0, #2512]
   4527c:	add	x0, x0, #0x9d0
   45280:	blr	x2
   45284:	ldr	x2, [sp, #120]
   45288:	str	x2, [x21, x0]
   4528c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45290:	ldr	x3, [x0, #2544]
   45294:	add	x0, x0, #0x9f0
   45298:	blr	x3
   4529c:	ldr	x1, [x24, #16]
   452a0:	ldr	x3, [sp, #136]
   452a4:	str	x3, [x21, x0]
   452a8:	cmp	x3, x1
   452ac:	ccmp	x1, x2, #0x1, ge  // ge = tcont
   452b0:	b.lt	44f58 <mpfr_erfc@@Base+0x2b0>  // b.tstop
   452b4:	b	44ff8 <mpfr_erfc@@Base+0x350>
   452b8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   452bc:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   452c0:	add	x2, x2, #0xf70
   452c4:	add	x0, x0, #0x780
   452c8:	mov	w1, #0xee                  	// #238
   452cc:	bl	cb40 <mpfr_assert_fail@plt>
   452d0:	mov	x1, x23
   452d4:	mov	w3, #0x2                   	// #2
   452d8:	mov	x2, #0x1                   	// #1
   452dc:	mov	x0, x23
   452e0:	bl	c260 <mpfr_add_ui@plt>
   452e4:	mov	x2, x20
   452e8:	mov	x1, x20
   452ec:	mov	w3, #0x2                   	// #2
   452f0:	mov	x0, x22
   452f4:	bl	bd50 <mpfr_mul@plt>
   452f8:	mov	x1, x23
   452fc:	mov	w3, #0x2                   	// #2
   45300:	mov	x2, #0x3                   	// #3
   45304:	mov	x0, x23
   45308:	bl	c8f0 <mpfr_div_2ui@plt>
   4530c:	mov	x2, x22
   45310:	mov	x1, x23
   45314:	mov	w3, #0x2                   	// #2
   45318:	mov	x0, x23
   4531c:	bl	c1a0 <mpfr_add@plt>
   45320:	mov	w3, #0x2                   	// #2
   45324:	mov	x1, x23
   45328:	mov	x2, #0x3                   	// #3
   4532c:	mov	x0, x23
   45330:	bl	c2c0 <mpfr_mul_2ui@plt>
   45334:	mov	x1, x22
   45338:	mov	w2, #0x2                   	// #2
   4533c:	mov	x0, x22
   45340:	bl	c750 <mpfr_exp@plt>
   45344:	mov	x1, x22
   45348:	mov	w3, #0x0                   	// #0
   4534c:	mov	x2, x20
   45350:	mov	x0, x22
   45354:	bl	bd50 <mpfr_mul@plt>
   45358:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4535c:	ldr	x1, [x0, #2624]
   45360:	add	x0, x0, #0xa40
   45364:	blr	x1
   45368:	add	x27, x21, x0
   4536c:	mov	x1, x27
   45370:	mov	w2, #0x1                   	// #1
   45374:	mov	x0, x26
   45378:	bl	c380 <mpfr_cache@plt>
   4537c:	mov	x1, x26
   45380:	mov	w2, #0x0                   	// #0
   45384:	mov	x0, x26
   45388:	bl	c930 <mpfr_sqrt@plt>
   4538c:	mov	x2, x26
   45390:	mov	x1, x22
   45394:	mov	w3, #0x0                   	// #0
   45398:	mov	x0, x22
   4539c:	bl	bd50 <mpfr_mul@plt>
   453a0:	mov	x1, x28
   453a4:	mov	x2, x22
   453a8:	mov	x0, x28
   453ac:	mov	w3, #0x0                   	// #0
   453b0:	bl	c620 <mpfr_div@plt>
   453b4:	ldr	x1, [sp, #176]
   453b8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   453bc:	cmp	x1, x0
   453c0:	b.eq	4544c <mpfr_erfc@@Base+0x7a4>  // b.none
   453c4:	mov	x1, x23
   453c8:	mov	w3, #0x2                   	// #2
   453cc:	mov	x2, #0x7                   	// #7
   453d0:	mov	x0, x23
   453d4:	bl	c260 <mpfr_add_ui@plt>
   453d8:	ldr	x27, [sp, #272]
   453dc:	mov	x0, x22
   453e0:	bl	c070 <mpfr_clear@plt>
   453e4:	mov	x0, x26
   453e8:	bl	c070 <mpfr_clear@plt>
   453ec:	mov	x0, x23
   453f0:	bl	c070 <mpfr_clear@plt>
   453f4:	cbz	x27, 454d0 <mpfr_erfc@@Base+0x828>
   453f8:	ldr	x0, [sp, #176]
   453fc:	b	44ea4 <mpfr_erfc@@Base+0x1fc>
   45400:	mov	x0, #0x2                   	// #2
   45404:	movk	x0, #0x8000, lsl #48
   45408:	cmp	x22, x0
   4540c:	b.eq	456c4 <mpfr_erfc@@Base+0xa1c>  // b.none
   45410:	cmp	x22, x1
   45414:	b.ne	45668 <mpfr_erfc@@Base+0x9c0>  // b.any
   45418:	ldr	w0, [x20, #8]
   4541c:	cmp	w0, #0x0
   45420:	b.le	456a8 <mpfr_erfc@@Base+0xa00>
   45424:	mov	w1, #0x1                   	// #1
   45428:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4542c:	mov	w19, #0x0                   	// #0
   45430:	str	w1, [x24, #8]
   45434:	str	x0, [x24, #16]
   45438:	b	44f6c <mpfr_erfc@@Base+0x2c4>
   4543c:	mov	x0, x24
   45440:	mov	w19, #0xffffffff            	// #-1
   45444:	bl	bdd0 <mpfr_nextbelow@plt>
   45448:	b	4525c <mpfr_erfc@@Base+0x5b4>
   4544c:	mov	w3, #0x3                   	// #3
   45450:	mov	x2, x20
   45454:	mov	x1, x20
   45458:	mov	x0, x22
   4545c:	bl	bd50 <mpfr_mul@plt>
   45460:	mov	x1, x22
   45464:	mov	w2, #0x2                   	// #2
   45468:	mov	x0, x22
   4546c:	bl	bd70 <mpfr_neg@plt>
   45470:	mov	x1, x22
   45474:	mov	w2, #0x2                   	// #2
   45478:	mov	x0, x22
   4547c:	bl	c750 <mpfr_exp@plt>
   45480:	mov	x1, x27
   45484:	mov	w2, #0x3                   	// #3
   45488:	mov	x0, x26
   4548c:	bl	c380 <mpfr_cache@plt>
   45490:	mov	x2, x20
   45494:	mov	x1, x26
   45498:	mov	w3, #0x3                   	// #3
   4549c:	mov	x0, x26
   454a0:	bl	bd50 <mpfr_mul@plt>
   454a4:	mov	x2, x26
   454a8:	mov	x1, x22
   454ac:	mov	w3, #0x0                   	// #0
   454b0:	mov	x0, x28
   454b4:	bl	c620 <mpfr_div@plt>
   454b8:	mov	x0, x22
   454bc:	bl	c070 <mpfr_clear@plt>
   454c0:	mov	x0, x26
   454c4:	bl	c070 <mpfr_clear@plt>
   454c8:	mov	x0, x23
   454cc:	bl	c070 <mpfr_clear@plt>
   454d0:	mov	x0, x28
   454d4:	bl	c070 <mpfr_clear@plt>
   454d8:	mov	w2, #0x1                   	// #1
   454dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   454e0:	ldr	x1, [x0, #2576]
   454e4:	add	x0, x0, #0xa10
   454e8:	blr	x1
   454ec:	ldr	w1, [sp, #132]
   454f0:	str	w1, [x21, x0]
   454f4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   454f8:	ldr	x1, [x0, #2512]
   454fc:	add	x0, x0, #0x9d0
   45500:	blr	x1
   45504:	ldr	x1, [sp, #120]
   45508:	str	x1, [x21, x0]
   4550c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45510:	ldr	x1, [x0, #2544]
   45514:	add	x0, x0, #0x9f0
   45518:	blr	x1
   4551c:	cmp	w25, #0x0
   45520:	ldr	x1, [sp, #136]
   45524:	str	x1, [x21, x0]
   45528:	mov	x0, x24
   4552c:	csel	w1, w25, w2, ne  // ne = any
   45530:	bl	c3c0 <mpfr_underflow@plt>
   45534:	mov	w19, w0
   45538:	ldp	x27, x28, [sp, #80]
   4553c:	b	44f6c <mpfr_erfc@@Base+0x2c4>
   45540:	mov	x1, #0x0                   	// #0
   45544:	b	44e58 <mpfr_erfc@@Base+0x1b0>
   45548:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   4554c:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   45550:	add	x2, x2, #0xa48
   45554:	add	x0, x0, #0x780
   45558:	mov	w1, #0xe2                  	// #226
   4555c:	bl	cb40 <mpfr_assert_fail@plt>
   45560:	ldr	x0, [x24]
   45564:	b	44dd4 <mpfr_erfc@@Base+0x12c>
   45568:	add	x22, sp, #0xe0
   4556c:	add	x19, sp, #0x100
   45570:	mov	x0, x22
   45574:	mov	x1, #0x20                  	// #32
   45578:	bl	ca80 <mpfr_init2@plt>
   4557c:	mov	x0, x19
   45580:	mov	x1, #0x20                  	// #32
   45584:	bl	ca80 <mpfr_init2@plt>
   45588:	mov	x0, x22
   4558c:	adrp	x1, 65000 <mpfr_bases@@Base+0x6f8>
   45590:	add	x1, x1, #0x758
   45594:	bl	c340 <mpfr_set_str_binary@plt>
   45598:	mov	x1, x20
   4559c:	mov	w2, #0x1                   	// #1
   455a0:	mov	x0, x19
   455a4:	bl	c400 <mpfr_sqr@plt>
   455a8:	mov	w3, #0x1                   	// #1
   455ac:	mov	x1, x22
   455b0:	mov	x2, x19
   455b4:	mov	x0, x22
   455b8:	bl	bd50 <mpfr_mul@plt>
   455bc:	mov	x1, x20
   455c0:	mov	w2, #0x1                   	// #1
   455c4:	mov	x0, x19
   455c8:	bl	bd70 <mpfr_neg@plt>
   455cc:	mov	x1, x19
   455d0:	mov	w2, #0x1                   	// #1
   455d4:	mov	x0, x19
   455d8:	bl	c1d0 <mpfr_log2@plt>
   455dc:	mov	x1, x22
   455e0:	mov	x2, x19
   455e4:	mov	x0, x22
   455e8:	mov	w3, #0x1                   	// #1
   455ec:	bl	c1a0 <mpfr_add@plt>
   455f0:	ldr	x1, [x24]
   455f4:	mov	w3, #0x2                   	// #2
   455f8:	mov	x2, #0x0                   	// #0
   455fc:	mov	x0, x19
   45600:	bl	ba80 <mpfr_set_si_2exp@plt>
   45604:	mov	x1, x19
   45608:	mov	x0, x22
   4560c:	mov	w2, #0x1                   	// #1
   45610:	bl	c9a0 <mpfr_cmp3@plt>
   45614:	mov	w1, w0
   45618:	mov	x0, x22
   4561c:	mov	w22, w1
   45620:	bl	c070 <mpfr_clear@plt>
   45624:	mov	x0, x19
   45628:	bl	c070 <mpfr_clear@plt>
   4562c:	tbnz	w22, #31, 45068 <mpfr_erfc@@Base+0x3c0>
   45630:	b	45218 <mpfr_erfc@@Base+0x570>
   45634:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   45638:	ldr	w3, [x20, #8]
   4563c:	mov	x2, x22
   45640:	mov	w4, w25
   45644:	ldr	x1, [x1, #3928]
   45648:	mov	x0, x24
   4564c:	lsr	w3, w3, #31
   45650:	bl	c540 <mpfr_round_near_x@plt>
   45654:	mov	w19, w0
   45658:	cbnz	w0, 4525c <mpfr_erfc@@Base+0x5b4>
   4565c:	stp	x27, x28, [sp, #80]
   45660:	ldr	x19, [x24]
   45664:	b	44dc4 <mpfr_erfc@@Base+0x11c>
   45668:	mov	w3, w2
   4566c:	mov	x0, x24
   45670:	mov	x2, #0x0                   	// #0
   45674:	mov	x1, #0x1                   	// #1
   45678:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4567c:	mov	w19, w0
   45680:	b	44f6c <mpfr_erfc@@Base+0x2c4>
   45684:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   45688:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   4568c:	add	x2, x2, #0xf80
   45690:	add	x0, x0, #0x780
   45694:	mov	w1, #0x10a                 	// #266
   45698:	bl	cb40 <mpfr_assert_fail@plt>
   4569c:	cmp	x22, #0x2
   456a0:	b.gt	45218 <mpfr_erfc@@Base+0x570>
   456a4:	b	45200 <mpfr_erfc@@Base+0x558>
   456a8:	mov	w3, w2
   456ac:	mov	x0, x24
   456b0:	mov	x2, #0x0                   	// #0
   456b4:	mov	x1, #0x2                   	// #2
   456b8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   456bc:	mov	w19, w0
   456c0:	b	44f6c <mpfr_erfc@@Base+0x2c4>
   456c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   456c8:	ldr	x1, [x0, #2576]
   456cc:	add	x0, x0, #0xa10
   456d0:	blr	x1
   456d4:	add	x0, x21, x0
   456d8:	mov	w19, #0x0                   	// #0
   456dc:	str	x22, [x24, #16]
   456e0:	ldr	w1, [x0]
   456e4:	orr	w1, w1, #0x4
   456e8:	str	w1, [x0]
   456ec:	b	44f6c <mpfr_erfc@@Base+0x2c4>
   456f0:	stp	x29, x30, [sp, #-80]!
   456f4:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   456f8:	mov	x29, sp
   456fc:	stp	x19, x20, [sp, #16]
   45700:	mrs	x19, tpidr_el0
   45704:	mov	x20, x0
   45708:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4570c:	ldr	x4, [x0, #2576]
   45710:	add	x0, x0, #0xa10
   45714:	blr	x4
   45718:	stp	x23, x24, [sp, #48]
   4571c:	ldr	w23, [x19, x0]
   45720:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45724:	ldr	x5, [x0, #2512]
   45728:	add	x0, x0, #0x9d0
   4572c:	blr	x5
   45730:	add	x5, x19, x0
   45734:	stp	x21, x22, [sp, #32]
   45738:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   4573c:	mov	w21, w3
   45740:	stp	x25, x26, [sp, #64]
   45744:	mov	w26, w1
   45748:	ldr	x24, [x19, x0]
   4574c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45750:	ldr	x7, [x0, #2544]
   45754:	add	x0, x0, #0x9f0
   45758:	blr	x7
   4575c:	str	x6, [x5]
   45760:	ldr	x25, [x19, x0]
   45764:	str	x4, [x19, x0]
   45768:	cbz	w2, 45860 <mpfr_erfc@@Base+0xbb8>
   4576c:	cmp	w3, #0x2
   45770:	mov	w2, #0x3                   	// #3
   45774:	b.eq	45784 <mpfr_erfc@@Base+0xadc>  // b.none
   45778:	cmp	w3, w2
   4577c:	mov	w2, #0x2                   	// #2
   45780:	csel	w2, w3, w2, ne  // ne = any
   45784:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45788:	ldr	x1, [x0, #2624]
   4578c:	add	x0, x0, #0xa40
   45790:	blr	x1
   45794:	add	x1, x19, x0
   45798:	mov	x0, x20
   4579c:	bl	c380 <mpfr_cache@plt>
   457a0:	ldr	w1, [x20, #8]
   457a4:	neg	w22, w0
   457a8:	neg	w1, w1
   457ac:	str	w1, [x20, #8]
   457b0:	mov	x1, x20
   457b4:	mov	w3, w21
   457b8:	sxtw	x2, w26
   457bc:	mov	x0, x20
   457c0:	bl	c8f0 <mpfr_div_2ui@plt>
   457c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   457c8:	ldr	x1, [x0, #2576]
   457cc:	add	x0, x0, #0xa10
   457d0:	blr	x1
   457d4:	str	w23, [x19, x0]
   457d8:	ldr	x1, [x20, #16]
   457dc:	add	x2, x19, x0
   457e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   457e4:	ldr	x3, [x0, #2512]
   457e8:	add	x0, x0, #0x9d0
   457ec:	blr	x3
   457f0:	str	x24, [x19, x0]
   457f4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   457f8:	ldr	x3, [x0, #2544]
   457fc:	add	x0, x0, #0x9f0
   45800:	blr	x3
   45804:	str	x25, [x19, x0]
   45808:	cmp	x25, x1
   4580c:	ccmp	x24, x1, #0x0, ge  // ge = tcont
   45810:	b.le	45838 <mpfr_erfc@@Base+0xb90>
   45814:	mov	w2, w21
   45818:	mov	w1, w22
   4581c:	mov	x0, x20
   45820:	ldp	x19, x20, [sp, #16]
   45824:	ldp	x21, x22, [sp, #32]
   45828:	ldp	x23, x24, [sp, #48]
   4582c:	ldp	x25, x26, [sp, #64]
   45830:	ldp	x29, x30, [sp], #80
   45834:	b	cb30 <mpfr_check_range@plt>
   45838:	cbz	w22, 45844 <mpfr_erfc@@Base+0xb9c>
   4583c:	orr	w23, w23, #0x8
   45840:	str	w23, [x2]
   45844:	mov	w0, w22
   45848:	ldp	x19, x20, [sp, #16]
   4584c:	ldp	x21, x22, [sp, #32]
   45850:	ldp	x23, x24, [sp, #48]
   45854:	ldp	x25, x26, [sp, #64]
   45858:	ldp	x29, x30, [sp], #80
   4585c:	ret
   45860:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45864:	ldr	x1, [x0, #2624]
   45868:	add	x0, x0, #0xa40
   4586c:	blr	x1
   45870:	mov	w2, w3
   45874:	add	x1, x19, x0
   45878:	mov	x0, x20
   4587c:	bl	c380 <mpfr_cache@plt>
   45880:	mov	w22, w0
   45884:	b	457b0 <mpfr_erfc@@Base+0xb08>

0000000000045888 <mpfr_atan2@@Base>:
   45888:	stp	x29, x30, [sp, #-192]!
   4588c:	mov	x29, sp
   45890:	stp	x21, x22, [sp, #32]
   45894:	mov	x21, x2
   45898:	ldr	x2, [x2, #16]
   4589c:	stp	x19, x20, [sp, #16]
   458a0:	mov	x20, x0
   458a4:	stp	x23, x24, [sp, #48]
   458a8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   458ac:	mov	x24, x1
   458b0:	mov	w23, w3
   458b4:	cmp	x2, x0
   458b8:	b.le	45c28 <mpfr_atan2@@Base+0x3a0>
   458bc:	ldr	x1, [x1, #16]
   458c0:	cmp	x1, x0
   458c4:	b.le	45c3c <mpfr_atan2@@Base+0x3b4>
   458c8:	ldr	w0, [x21, #8]
   458cc:	stp	x25, x26, [sp, #64]
   458d0:	cmp	w0, #0x0
   458d4:	b.gt	45d00 <mpfr_atan2@@Base+0x478>
   458d8:	mrs	x19, tpidr_el0
   458dc:	stp	x27, x28, [sp, #80]
   458e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   458e4:	ldr	x1, [x0, #2576]
   458e8:	add	x0, x0, #0xa10
   458ec:	blr	x1
   458f0:	ldr	w0, [x19, x0]
   458f4:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   458f8:	str	w0, [sp, #108]
   458fc:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   45900:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45904:	ldr	x1, [x0, #2512]
   45908:	add	x0, x0, #0x9d0
   4590c:	blr	x1
   45910:	add	x3, x19, x0
   45914:	ldr	x1, [x20]
   45918:	ldr	x26, [x19, x0]
   4591c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45920:	ldr	x5, [x0, #2544]
   45924:	add	x0, x0, #0x9f0
   45928:	blr	x5
   4592c:	str	x4, [x3]
   45930:	cmp	x1, #0x1
   45934:	ldr	x27, [x19, x0]
   45938:	str	x2, [x19, x0]
   4593c:	add	x28, x1, #0x3
   45940:	b.eq	45d18 <mpfr_atan2@@Base+0x490>  // b.none
   45944:	b.le	45d20 <mpfr_atan2@@Base+0x498>
   45948:	sub	x1, x1, #0x1
   4594c:	mov	w22, #0x40                  	// #64
   45950:	clz	x1, x1
   45954:	sub	w1, w22, w1
   45958:	add	x22, x28, w1, sxtw
   4595c:	add	x25, sp, #0x80
   45960:	mov	x1, x22
   45964:	mov	x0, x25
   45968:	bl	ca80 <mpfr_init2@plt>
   4596c:	ldr	w0, [x21, #8]
   45970:	cmp	w0, #0x0
   45974:	mov	x0, #0x40                  	// #64
   45978:	b.le	45afc <mpfr_atan2@@Base+0x274>
   4597c:	str	x0, [sp, #112]
   45980:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45984:	ldr	x1, [x0, #2576]
   45988:	add	x0, x0, #0xa10
   4598c:	blr	x1
   45990:	add	x28, x19, x0
   45994:	mov	x1, x24
   45998:	mov	x2, x21
   4599c:	mov	w3, #0x0                   	// #0
   459a0:	str	wzr, [x19, x0]
   459a4:	mov	x0, x25
   459a8:	bl	c620 <mpfr_div@plt>
   459ac:	ldr	w1, [x28]
   459b0:	cbz	w0, 45fb4 <mpfr_atan2@@Base+0x72c>
   459b4:	tbnz	w1, #0, 45d78 <mpfr_atan2@@Base+0x4f0>
   459b8:	mov	x1, x25
   459bc:	mov	x0, x25
   459c0:	mov	w2, #0x0                   	// #0
   459c4:	bl	c690 <mpfr_atan@plt>
   459c8:	ldr	x0, [sp, #144]
   459cc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   459d0:	cmp	x0, x1
   459d4:	b.le	45cc8 <mpfr_atan2@@Base+0x440>
   459d8:	ldr	x1, [sp, #128]
   459dc:	cmp	w23, #0x0
   459e0:	ldr	x0, [sp, #152]
   459e4:	sub	x1, x1, #0x1
   459e8:	ldr	x3, [x20]
   459ec:	asr	x1, x1, #6
   459f0:	sub	x2, x22, #0x2
   459f4:	add	x1, x1, #0x1
   459f8:	cinc	x3, x3, eq  // eq = none
   459fc:	bl	c370 <mpfr_round_p@plt>
   45a00:	cbz	w0, 45cc8 <mpfr_atan2@@Base+0x440>
   45a04:	ldr	w3, [sp, #136]
   45a08:	mov	w2, w23
   45a0c:	mov	x1, x25
   45a10:	mov	x0, x20
   45a14:	bl	c6a0 <mpfr_set4@plt>
   45a18:	mov	w21, w0
   45a1c:	mov	x0, x25
   45a20:	bl	c070 <mpfr_clear@plt>
   45a24:	ldr	x1, [x20, #16]
   45a28:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45a2c:	ldr	x2, [x0, #2576]
   45a30:	add	x0, x0, #0xa10
   45a34:	blr	x2
   45a38:	ldr	w2, [sp, #108]
   45a3c:	str	w2, [x19, x0]
   45a40:	add	x2, x19, x0
   45a44:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45a48:	ldr	x3, [x0, #2512]
   45a4c:	add	x0, x0, #0x9d0
   45a50:	blr	x3
   45a54:	str	x26, [x19, x0]
   45a58:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45a5c:	ldr	x3, [x0, #2544]
   45a60:	add	x0, x0, #0x9f0
   45a64:	blr	x3
   45a68:	str	x27, [x19, x0]
   45a6c:	cmp	x27, x1
   45a70:	ccmp	x26, x1, #0x0, ge  // ge = tcont
   45a74:	b.le	45aac <mpfr_atan2@@Base+0x224>
   45a78:	mov	w1, w21
   45a7c:	mov	w2, w23
   45a80:	mov	x0, x20
   45a84:	bl	cb30 <mpfr_check_range@plt>
   45a88:	ldp	x25, x26, [sp, #64]
   45a8c:	mov	w21, w0
   45a90:	ldp	x27, x28, [sp, #80]
   45a94:	mov	w0, w21
   45a98:	ldp	x19, x20, [sp, #16]
   45a9c:	ldp	x21, x22, [sp, #32]
   45aa0:	ldp	x23, x24, [sp, #48]
   45aa4:	ldp	x29, x30, [sp], #192
   45aa8:	ret
   45aac:	cbz	w21, 45adc <mpfr_atan2@@Base+0x254>
   45ab0:	ldr	w0, [sp, #108]
   45ab4:	ldp	x27, x28, [sp, #80]
   45ab8:	orr	w25, w0, #0x8
   45abc:	str	w25, [x2]
   45ac0:	mov	w0, w21
   45ac4:	ldp	x19, x20, [sp, #16]
   45ac8:	ldp	x21, x22, [sp, #32]
   45acc:	ldp	x23, x24, [sp, #48]
   45ad0:	ldp	x25, x26, [sp, #64]
   45ad4:	ldp	x29, x30, [sp], #192
   45ad8:	ret
   45adc:	mov	w0, w21
   45ae0:	ldp	x19, x20, [sp, #16]
   45ae4:	ldp	x21, x22, [sp, #32]
   45ae8:	ldp	x23, x24, [sp, #48]
   45aec:	ldp	x25, x26, [sp, #64]
   45af0:	ldp	x27, x28, [sp, #80]
   45af4:	ldp	x29, x30, [sp], #192
   45af8:	ret
   45afc:	add	x28, sp, #0xa0
   45b00:	mov	x1, x22
   45b04:	str	x0, [sp, #120]
   45b08:	mov	x0, x28
   45b0c:	bl	ca80 <mpfr_init2@plt>
   45b10:	mov	w3, #0x0                   	// #0
   45b14:	mov	x2, x21
   45b18:	mov	x1, x24
   45b1c:	mov	x0, x25
   45b20:	bl	c620 <mpfr_div@plt>
   45b24:	mov	x1, x25
   45b28:	mov	w0, #0x1                   	// #1
   45b2c:	mov	w2, #0x0                   	// #0
   45b30:	str	w0, [sp, #136]
   45b34:	mov	x0, x25
   45b38:	bl	c690 <mpfr_atan@plt>
   45b3c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45b40:	ldr	x1, [x0, #2624]
   45b44:	add	x0, x0, #0xa40
   45b48:	blr	x1
   45b4c:	mov	w2, #0x0                   	// #0
   45b50:	add	x1, x19, x0
   45b54:	mov	x0, x28
   45b58:	bl	c380 <mpfr_cache@plt>
   45b5c:	ldr	x5, [sp, #144]
   45b60:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   45b64:	cmp	x5, x0
   45b68:	b.eq	45c0c <mpfr_atan2@@Base+0x384>  // b.none
   45b6c:	mov	x2, x25
   45b70:	mov	x1, x28
   45b74:	mov	x0, x25
   45b78:	mov	w3, #0x0                   	// #0
   45b7c:	str	x5, [sp, #112]
   45b80:	bl	bb70 <mpfr_sub@plt>
   45b84:	ldr	w0, [x24, #8]
   45b88:	ldr	x5, [sp, #112]
   45b8c:	tbnz	w0, #31, 45bfc <mpfr_atan2@@Base+0x374>
   45b90:	ldr	x0, [sp, #144]
   45b94:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   45b98:	ldr	x2, [sp, #176]
   45b9c:	sub	x5, x5, x0
   45ba0:	add	x5, x5, #0x1
   45ba4:	sub	x2, x2, x0
   45ba8:	subs	x2, x2, #0x1
   45bac:	csinv	x2, x2, xzr, pl  // pl = nfrst
   45bb0:	cmp	x2, x5
   45bb4:	csel	x2, x2, x5, ge  // ge = tcont
   45bb8:	cmp	x0, x1
   45bbc:	add	x2, x2, #0x2
   45bc0:	b.le	45f70 <mpfr_atan2@@Base+0x6e8>
   45bc4:	ldr	x1, [sp, #128]
   45bc8:	cmp	w23, #0x0
   45bcc:	ldr	x0, [sp, #152]
   45bd0:	sub	x1, x1, #0x1
   45bd4:	ldr	x3, [x20]
   45bd8:	asr	x1, x1, #6
   45bdc:	sub	x2, x22, x2
   45be0:	add	x1, x1, #0x1
   45be4:	cinc	x3, x3, eq  // eq = none
   45be8:	bl	c370 <mpfr_round_p@plt>
   45bec:	cbz	w0, 45f70 <mpfr_atan2@@Base+0x6e8>
   45bf0:	mov	x0, x28
   45bf4:	bl	c070 <mpfr_clear@plt>
   45bf8:	b	45a04 <mpfr_atan2@@Base+0x17c>
   45bfc:	ldr	w0, [sp, #136]
   45c00:	neg	w0, w0
   45c04:	str	w0, [sp, #136]
   45c08:	b	45b90 <mpfr_atan2@@Base+0x308>
   45c0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45c10:	ldr	x1, [x0, #2512]
   45c14:	add	x0, x0, #0x9d0
   45c18:	blr	x1
   45c1c:	ldr	x5, [x19, x0]
   45c20:	sub	x5, x5, #0x1
   45c24:	b	45b6c <mpfr_atan2@@Base+0x2e4>
   45c28:	mov	x0, #0x2                   	// #2
   45c2c:	movk	x0, #0x8000, lsl #48
   45c30:	cmp	x2, x0
   45c34:	b.eq	45d40 <mpfr_atan2@@Base+0x4b8>  // b.none
   45c38:	ldr	x1, [x1, #16]
   45c3c:	mov	x0, #0x2                   	// #2
   45c40:	movk	x0, #0x8000, lsl #48
   45c44:	cmp	x1, x0
   45c48:	b.eq	45d40 <mpfr_atan2@@Base+0x4b8>  // b.none
   45c4c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   45c50:	cmp	x1, x0
   45c54:	b.eq	45c6c <mpfr_atan2@@Base+0x3e4>  // b.none
   45c58:	cmp	x2, x0
   45c5c:	b.eq	45ff8 <mpfr_atan2@@Base+0x770>  // b.none
   45c60:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   45c64:	cmp	x1, x0
   45c68:	b.eq	45e10 <mpfr_atan2@@Base+0x588>  // b.none
   45c6c:	ldr	w0, [x21, #8]
   45c70:	tbz	w0, #31, 45df8 <mpfr_atan2@@Base+0x570>
   45c74:	ldr	w0, [x24, #8]
   45c78:	tbz	w0, #31, 45fcc <mpfr_atan2@@Base+0x744>
   45c7c:	cmp	w23, #0x2
   45c80:	b.eq	46030 <mpfr_atan2@@Base+0x7a8>  // b.none
   45c84:	cmp	w23, #0x3
   45c88:	mov	w0, #0x2                   	// #2
   45c8c:	csel	w23, w23, w0, ne  // ne = any
   45c90:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45c94:	ldr	x1, [x0, #2624]
   45c98:	add	x0, x0, #0xa40
   45c9c:	blr	x1
   45ca0:	mov	w2, w23
   45ca4:	mrs	x1, tpidr_el0
   45ca8:	add	x1, x1, x0
   45cac:	mov	x0, x20
   45cb0:	bl	c380 <mpfr_cache@plt>
   45cb4:	neg	w21, w0
   45cb8:	ldr	w1, [x20, #8]
   45cbc:	neg	w1, w1
   45cc0:	str	w1, [x20, #8]
   45cc4:	b	45a94 <mpfr_atan2@@Base+0x20c>
   45cc8:	ldr	x1, [sp, #112]
   45ccc:	mov	x0, #0xfffffffffffffeff    	// #-257
   45cd0:	movk	x0, #0x7fff, lsl #48
   45cd4:	sub	x0, x0, x22
   45cd8:	cmp	x0, x1
   45cdc:	b.lt	46018 <mpfr_atan2@@Base+0x790>  // b.tstop
   45ce0:	add	x22, x22, x1
   45ce4:	mov	x0, x25
   45ce8:	mov	x1, x22
   45cec:	add	x2, x22, x22, lsr #63
   45cf0:	asr	x2, x2, #1
   45cf4:	str	x2, [sp, #112]
   45cf8:	bl	bed0 <mpfr_set_prec@plt>
   45cfc:	b	45980 <mpfr_atan2@@Base+0xf8>
   45d00:	mov	x0, x21
   45d04:	mrs	x19, tpidr_el0
   45d08:	bl	bf00 <mpfr_powerof2_raw@plt>
   45d0c:	cbnz	w0, 460dc <mpfr_atan2@@Base+0x854>
   45d10:	stp	x27, x28, [sp, #80]
   45d14:	b	458e0 <mpfr_atan2@@Base+0x58>
   45d18:	mov	x22, #0x4                   	// #4
   45d1c:	b	4595c <mpfr_atan2@@Base+0xd4>
   45d20:	mov	w1, #0xb7                  	// #183
   45d24:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   45d28:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   45d2c:	add	x2, x2, #0x7d8
   45d30:	add	x0, x0, #0x7d0
   45d34:	bl	cb40 <mpfr_assert_fail@plt>
   45d38:	ldr	x1, [x20]
   45d3c:	b	45948 <mpfr_atan2@@Base+0xc0>
   45d40:	mrs	x1, tpidr_el0
   45d44:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45d48:	ldr	x2, [x0, #2576]
   45d4c:	add	x0, x0, #0xa10
   45d50:	blr	x2
   45d54:	add	x0, x1, x0
   45d58:	mov	x1, #0x2                   	// #2
   45d5c:	movk	x1, #0x8000, lsl #48
   45d60:	str	x1, [x20, #16]
   45d64:	mov	w21, #0x0                   	// #0
   45d68:	ldr	w1, [x0]
   45d6c:	orr	w1, w1, #0x4
   45d70:	str	w1, [x0]
   45d74:	b	45a94 <mpfr_atan2@@Base+0x20c>
   45d78:	cbnz	w23, 45d8c <mpfr_atan2@@Base+0x504>
   45d7c:	ldr	x1, [sp, #144]
   45d80:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   45d84:	cmp	x1, x0
   45d88:	cset	w23, eq  // eq = none
   45d8c:	mov	x0, x25
   45d90:	ldr	w21, [sp, #136]
   45d94:	bl	c070 <mpfr_clear@plt>
   45d98:	mov	w2, w21
   45d9c:	mov	w1, w23
   45da0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45da4:	ldr	x3, [x0, #2576]
   45da8:	add	x0, x0, #0xa10
   45dac:	blr	x3
   45db0:	ldr	w3, [sp, #108]
   45db4:	str	w3, [x19, x0]
   45db8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45dbc:	ldr	x3, [x0, #2512]
   45dc0:	add	x0, x0, #0x9d0
   45dc4:	blr	x3
   45dc8:	str	x26, [x19, x0]
   45dcc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45dd0:	ldr	x3, [x0, #2544]
   45dd4:	add	x0, x0, #0x9f0
   45dd8:	blr	x3
   45ddc:	str	x27, [x19, x0]
   45de0:	mov	x0, x20
   45de4:	bl	c3c0 <mpfr_underflow@plt>
   45de8:	mov	w21, w0
   45dec:	ldp	x25, x26, [sp, #64]
   45df0:	ldp	x27, x28, [sp, #80]
   45df4:	b	45a94 <mpfr_atan2@@Base+0x20c>
   45df8:	ldr	w1, [x24, #8]
   45dfc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   45e00:	mov	w21, #0x0                   	// #0
   45e04:	str	w1, [x20, #8]
   45e08:	str	x0, [x20, #16]
   45e0c:	b	45a94 <mpfr_atan2@@Base+0x20c>
   45e10:	cmp	x2, x1
   45e14:	b.ne	45ff8 <mpfr_atan2@@Base+0x770>  // b.any
   45e18:	ldr	w0, [x21, #8]
   45e1c:	cmp	w0, #0x0
   45e20:	b.gt	46144 <mpfr_atan2@@Base+0x8bc>
   45e24:	mrs	x19, tpidr_el0
   45e28:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45e2c:	ldr	x1, [x0, #2576]
   45e30:	add	x0, x0, #0xa10
   45e34:	blr	x1
   45e38:	ldr	x4, [x20]
   45e3c:	mov	x21, x2
   45e40:	ldr	w0, [x19, x0]
   45e44:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   45e48:	str	w0, [sp, #108]
   45e4c:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   45e50:	stp	x25, x26, [sp, #64]
   45e54:	add	x26, x4, #0xa
   45e58:	mov	x25, #0xfffffffffffffeff    	// #-257
   45e5c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45e60:	ldr	x1, [x0, #2512]
   45e64:	add	x0, x0, #0x9d0
   45e68:	blr	x1
   45e6c:	add	x3, x19, x0
   45e70:	ldr	x0, [x19, x0]
   45e74:	stp	x27, x28, [sp, #80]
   45e78:	add	x28, sp, #0xa0
   45e7c:	str	x0, [sp, #112]
   45e80:	mov	x22, #0x40                  	// #64
   45e84:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45e88:	ldr	x1, [x0, #2544]
   45e8c:	add	x0, x0, #0x9f0
   45e90:	blr	x1
   45e94:	movk	x25, #0x7fff, lsl #48
   45e98:	mov	x1, x26
   45e9c:	str	x5, [x3]
   45ea0:	ldr	x27, [x19, x0]
   45ea4:	str	x2, [x19, x0]
   45ea8:	mov	x0, x28
   45eac:	bl	ca80 <mpfr_init2@plt>
   45eb0:	b	45ecc <mpfr_atan2@@Base+0x644>
   45eb4:	add	x26, x26, x22
   45eb8:	mov	x0, x28
   45ebc:	mov	x1, x26
   45ec0:	add	x22, x26, x26, lsr #63
   45ec4:	asr	x22, x22, #1
   45ec8:	bl	bed0 <mpfr_set_prec@plt>
   45ecc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45ed0:	ldr	x1, [x0, #2624]
   45ed4:	add	x0, x0, #0xa40
   45ed8:	blr	x1
   45edc:	mov	w2, #0x0                   	// #0
   45ee0:	add	x1, x19, x0
   45ee4:	mov	x0, x28
   45ee8:	bl	c380 <mpfr_cache@plt>
   45eec:	mov	x1, x28
   45ef0:	mov	w3, #0x0                   	// #0
   45ef4:	mov	x2, #0x3                   	// #3
   45ef8:	mov	x0, x28
   45efc:	bl	ba50 <mpfr_mul_ui@plt>
   45f00:	mov	x1, x28
   45f04:	mov	x0, x28
   45f08:	mov	w3, #0x0                   	// #0
   45f0c:	mov	x2, #0x2                   	// #2
   45f10:	bl	c8f0 <mpfr_div_2ui@plt>
   45f14:	ldr	x0, [sp, #176]
   45f18:	cmp	x0, x21
   45f1c:	b.le	45f4c <mpfr_atan2@@Base+0x6c4>
   45f20:	ldr	x2, [sp, #160]
   45f24:	cmp	w23, #0x0
   45f28:	ldr	x0, [sp, #184]
   45f2c:	sub	x1, x2, #0x1
   45f30:	ldr	x3, [x20]
   45f34:	asr	x1, x1, #6
   45f38:	add	x1, x1, #0x1
   45f3c:	sub	x2, x2, #0x2
   45f40:	cinc	x3, x3, eq  // eq = none
   45f44:	bl	c370 <mpfr_round_p@plt>
   45f48:	cbnz	w0, 46038 <mpfr_atan2@@Base+0x7b0>
   45f4c:	sub	x0, x25, x26
   45f50:	cmp	x0, x22
   45f54:	b.ge	45eb4 <mpfr_atan2@@Base+0x62c>  // b.tcont
   45f58:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   45f5c:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   45f60:	add	x2, x2, #0x788
   45f64:	add	x0, x0, #0x7d0
   45f68:	mov	w1, #0x88                  	// #136
   45f6c:	bl	cb40 <mpfr_assert_fail@plt>
   45f70:	ldr	x1, [sp, #120]
   45f74:	mov	x0, #0xfffffffffffffeff    	// #-257
   45f78:	movk	x0, #0x7fff, lsl #48
   45f7c:	sub	x0, x0, x22
   45f80:	cmp	x0, x1
   45f84:	b.lt	46164 <mpfr_atan2@@Base+0x8dc>  // b.tstop
   45f88:	add	x22, x22, x1
   45f8c:	mov	x0, x25
   45f90:	mov	x1, x22
   45f94:	add	x2, x22, x22, lsr #63
   45f98:	asr	x2, x2, #1
   45f9c:	str	x2, [sp, #120]
   45fa0:	bl	bed0 <mpfr_set_prec@plt>
   45fa4:	mov	x1, x22
   45fa8:	mov	x0, x28
   45fac:	bl	bed0 <mpfr_set_prec@plt>
   45fb0:	b	45b10 <mpfr_atan2@@Base+0x288>
   45fb4:	mov	w2, w23
   45fb8:	mov	x1, x25
   45fbc:	mov	x0, x20
   45fc0:	bl	c690 <mpfr_atan@plt>
   45fc4:	mov	w21, w0
   45fc8:	b	45a1c <mpfr_atan2@@Base+0x194>
   45fcc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   45fd0:	ldr	x1, [x0, #2624]
   45fd4:	add	x0, x0, #0xa40
   45fd8:	blr	x1
   45fdc:	mov	w2, w23
   45fe0:	mrs	x1, tpidr_el0
   45fe4:	add	x1, x1, x0
   45fe8:	mov	x0, x20
   45fec:	bl	c380 <mpfr_cache@plt>
   45ff0:	mov	w21, w0
   45ff4:	b	45a94 <mpfr_atan2@@Base+0x20c>
   45ff8:	ldr	w2, [x24, #8]
   45ffc:	mov	w3, w23
   46000:	mov	x0, x20
   46004:	mov	w1, #0x1                   	// #1
   46008:	lsr	w2, w2, #31
   4600c:	bl	456f0 <mpfr_erfc@@Base+0xa48>
   46010:	mov	w21, w0
   46014:	b	45a94 <mpfr_atan2@@Base+0x20c>
   46018:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   4601c:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   46020:	add	x2, x2, #0xf80
   46024:	add	x0, x0, #0x7d0
   46028:	mov	w1, #0xef                  	// #239
   4602c:	bl	cb40 <mpfr_assert_fail@plt>
   46030:	mov	w23, #0x3                   	// #3
   46034:	b	45c90 <mpfr_atan2@@Base+0x408>
   46038:	ldr	w0, [x24, #8]
   4603c:	ldr	w3, [sp, #168]
   46040:	tbz	w0, #31, 4604c <mpfr_atan2@@Base+0x7c4>
   46044:	neg	w3, w3
   46048:	str	w3, [sp, #168]
   4604c:	mov	w2, w23
   46050:	mov	x1, x28
   46054:	mov	x0, x20
   46058:	bl	c6a0 <mpfr_set4@plt>
   4605c:	mov	w21, w0
   46060:	mov	x0, x28
   46064:	bl	c070 <mpfr_clear@plt>
   46068:	ldr	x1, [x20, #16]
   4606c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46070:	ldr	x2, [x0, #2576]
   46074:	add	x0, x0, #0xa10
   46078:	blr	x2
   4607c:	ldr	w2, [sp, #108]
   46080:	str	w2, [x19, x0]
   46084:	add	x2, x19, x0
   46088:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4608c:	ldr	x3, [x0, #2512]
   46090:	add	x0, x0, #0x9d0
   46094:	blr	x3
   46098:	ldr	x3, [sp, #112]
   4609c:	str	x3, [x19, x0]
   460a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   460a4:	ldr	x4, [x0, #2544]
   460a8:	add	x0, x0, #0x9f0
   460ac:	blr	x4
   460b0:	str	x27, [x19, x0]
   460b4:	cmp	x27, x1
   460b8:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   460bc:	b.gt	45a78 <mpfr_atan2@@Base+0x1f0>
   460c0:	cbz	w21, 45adc <mpfr_atan2@@Base+0x254>
   460c4:	ldr	w0, [sp, #108]
   460c8:	ldp	x25, x26, [sp, #64]
   460cc:	orr	w0, w0, #0x8
   460d0:	ldp	x27, x28, [sp, #80]
   460d4:	str	w0, [x2]
   460d8:	b	45a94 <mpfr_atan2@@Base+0x20c>
   460dc:	ldr	x1, [x24]
   460e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   460e4:	ldr	x2, [x0, #2576]
   460e8:	add	x0, x0, #0xa10
   460ec:	blr	x2
   460f0:	add	x22, sp, #0xa0
   460f4:	ldr	w26, [x19, x0]
   460f8:	add	x25, x19, x0
   460fc:	mov	x0, x22
   46100:	bl	ca80 <mpfr_init2@plt>
   46104:	ldr	x2, [x21, #16]
   46108:	mov	x0, x22
   4610c:	mov	x1, x24
   46110:	mov	w3, #0x0                   	// #0
   46114:	sub	x2, x2, #0x1
   46118:	bl	c420 <mpfr_div_2si@plt>
   4611c:	cbnz	w0, 4617c <mpfr_atan2@@Base+0x8f4>
   46120:	mov	w2, w23
   46124:	mov	x1, x22
   46128:	mov	x0, x20
   4612c:	bl	c690 <mpfr_atan@plt>
   46130:	mov	w21, w0
   46134:	mov	x0, x22
   46138:	bl	c070 <mpfr_clear@plt>
   4613c:	ldp	x25, x26, [sp, #64]
   46140:	b	45a94 <mpfr_atan2@@Base+0x20c>
   46144:	ldr	w2, [x24, #8]
   46148:	mov	w3, w23
   4614c:	mov	x0, x20
   46150:	mov	w1, #0x2                   	// #2
   46154:	lsr	w2, w2, #31
   46158:	bl	456f0 <mpfr_erfc@@Base+0xa48>
   4615c:	mov	w21, w0
   46160:	b	45a94 <mpfr_atan2@@Base+0x20c>
   46164:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   46168:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   4616c:	add	x2, x2, #0xf80
   46170:	add	x0, x0, #0x7d0
   46174:	mov	w1, #0x10b                 	// #267
   46178:	bl	cb40 <mpfr_assert_fail@plt>
   4617c:	mov	x0, x22
   46180:	stp	x27, x28, [sp, #80]
   46184:	bl	c070 <mpfr_clear@plt>
   46188:	str	w26, [x25]
   4618c:	b	458e0 <mpfr_atan2@@Base+0x58>

0000000000046190 <mpfr_subnormalize@@Base>:
   46190:	stp	x29, x30, [sp, #-112]!
   46194:	mov	x29, sp
   46198:	stp	x19, x20, [sp, #16]
   4619c:	mov	x20, x0
   461a0:	mov	w19, w1
   461a4:	stp	x21, x22, [sp, #32]
   461a8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   461ac:	ldr	x1, [x20, #16]
   461b0:	cmp	x1, x0
   461b4:	b.gt	46210 <mpfr_subnormalize@@Base+0x80>
   461b8:	cbnz	w19, 461d4 <mpfr_subnormalize@@Base+0x44>
   461bc:	mov	w21, #0x0                   	// #0
   461c0:	mov	w0, w21
   461c4:	ldp	x19, x20, [sp, #16]
   461c8:	ldp	x21, x22, [sp, #32]
   461cc:	ldp	x29, x30, [sp], #112
   461d0:	ret
   461d4:	mrs	x1, tpidr_el0
   461d8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   461dc:	ldr	x2, [x0, #2576]
   461e0:	add	x0, x0, #0xa10
   461e4:	blr	x2
   461e8:	add	x0, x1, x0
   461ec:	mov	w21, w19
   461f0:	ldp	x19, x20, [sp, #16]
   461f4:	ldr	w1, [x0]
   461f8:	orr	w1, w1, #0x8
   461fc:	str	w1, [x0]
   46200:	mov	w0, w21
   46204:	ldp	x21, x22, [sp, #32]
   46208:	ldp	x29, x30, [sp], #112
   4620c:	ret
   46210:	stp	x23, x24, [sp, #48]
   46214:	mrs	x23, tpidr_el0
   46218:	mov	w22, w2
   4621c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46220:	ldr	x2, [x0, #2512]
   46224:	add	x0, x0, #0x9d0
   46228:	blr	x2
   4622c:	ldr	x2, [x20]
   46230:	ldr	x3, [x23, x0]
   46234:	add	x2, x3, x2
   46238:	sub	x2, x2, #0x1
   4623c:	cmp	x1, x2
   46240:	b.lt	46250 <mpfr_subnormalize@@Base+0xc0>  // b.tstop
   46244:	ldp	x23, x24, [sp, #48]
   46248:	cbnz	w19, 461d4 <mpfr_subnormalize@@Base+0x44>
   4624c:	b	461bc <mpfr_subnormalize@@Base+0x2c>
   46250:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46254:	ldr	x2, [x0, #2576]
   46258:	add	x0, x0, #0xa10
   4625c:	blr	x2
   46260:	add	x24, x23, x0
   46264:	ldr	w21, [x20, #8]
   46268:	cmp	x1, x3
   4626c:	ldr	w0, [x24]
   46270:	orr	w0, w0, #0x1
   46274:	str	w0, [x24]
   46278:	b.eq	46484 <mpfr_subnormalize@@Base+0x2f4>  // b.none
   4627c:	mov	x24, #0x1                   	// #1
   46280:	sub	x3, x24, x3
   46284:	stp	x25, x26, [sp, #64]
   46288:	add	x25, sp, #0x50
   4628c:	mov	x0, x25
   46290:	add	x1, x3, x1
   46294:	bl	ca80 <mpfr_init2@plt>
   46298:	ldr	x1, [x20]
   4629c:	str	w21, [sp, #88]
   462a0:	ldr	x0, [sp, #80]
   462a4:	sub	x6, x1, #0x1
   462a8:	ldp	x2, x9, [x20, #16]
   462ac:	sub	x5, x0, #0x1
   462b0:	str	x2, [sp, #96]
   462b4:	asr	x6, x6, #6
   462b8:	cmp	x1, x0
   462bc:	asr	x5, x5, #6
   462c0:	ldr	x26, [sp, #104]
   462c4:	b.le	465a0 <mpfr_subnormalize@@Base+0x410>
   462c8:	sub	x7, x6, x5
   462cc:	neg	w0, w0
   462d0:	ands	w0, w0, #0x3f
   462d4:	add	x2, x5, #0x1
   462d8:	add	x1, x9, x7, lsl #3
   462dc:	b.eq	466b4 <mpfr_subnormalize@@Base+0x524>  // b.none
   462e0:	ldr	x3, [x9, x7, lsl #3]
   462e4:	sub	w4, w0, #0x1
   462e8:	cmp	w22, #0x0
   462ec:	lsl	x0, x24, x4
   462f0:	and	x10, x3, x0
   462f4:	sub	x0, x0, #0x1
   462f8:	ccmp	x10, #0x0, #0x4, ne  // ne = any
   462fc:	and	x0, x0, x3
   46300:	b.ne	46330 <mpfr_subnormalize@@Base+0x1a0>  // b.any
   46304:	cmp	x7, #0x0
   46308:	mov	x3, x7
   4630c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   46310:	b.ne	46330 <mpfr_subnormalize@@Base+0x1a0>  // b.any
   46314:	mvn	x8, x7
   46318:	add	x8, x1, x8, lsl #3
   4631c:	nop
   46320:	ldr	x0, [x8, x3, lsl #3]
   46324:	subs	x3, x3, #0x1
   46328:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   4632c:	b.eq	46320 <mpfr_subnormalize@@Base+0x190>  // b.none
   46330:	mov	x24, #0x2                   	// #2
   46334:	lsl	x24, x24, x4
   46338:	cmp	w22, #0x5
   4633c:	b.eq	46520 <mpfr_subnormalize@@Base+0x390>  // b.none
   46340:	cbnz	w22, 46440 <mpfr_subnormalize@@Base+0x2b0>
   46344:	cbz	x10, 46464 <mpfr_subnormalize@@Base+0x2d4>
   46348:	ldr	x3, [x9, x7, lsl #3]
   4634c:	cbz	x0, 46810 <mpfr_subnormalize@@Base+0x680>
   46350:	adds	x3, x3, x24
   46354:	str	x3, [x26]
   46358:	cset	x0, cs  // cs = hs, nlast
   4635c:	b.cc	46528 <mpfr_subnormalize@@Base+0x398>  // b.lo, b.ul, b.last
   46360:	mov	x0, #0x1                   	// #1
   46364:	b	46380 <mpfr_subnormalize@@Base+0x1f0>
   46368:	ldr	x3, [x1, x0, lsl #3]
   4636c:	add	x4, x0, #0x1
   46370:	add	x3, x3, #0x1
   46374:	str	x3, [x26, x0, lsl #3]
   46378:	cbnz	x3, 46700 <mpfr_subnormalize@@Base+0x570>
   4637c:	mov	x0, x4
   46380:	cmp	x2, x0
   46384:	b.gt	46368 <mpfr_subnormalize@@Base+0x1d8>
   46388:	add	x2, x26, x2, lsl #3
   4638c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   46390:	stur	x0, [x2, #-8]
   46394:	ldr	x0, [sp, #96]
   46398:	add	x0, x0, #0x1
   4639c:	str	x0, [sp, #96]
   463a0:	ldr	x0, [x26]
   463a4:	neg	x24, x24
   463a8:	and	x0, x0, x24
   463ac:	str	x0, [x26]
   463b0:	cbz	w19, 463cc <mpfr_subnormalize@@Base+0x23c>
   463b4:	add	w0, w21, #0x2
   463b8:	and	w0, w0, #0xfffffffb
   463bc:	orr	w0, w0, w22
   463c0:	cbz	w0, 467d4 <mpfr_subnormalize@@Base+0x644>
   463c4:	cmp	w21, #0x0
   463c8:	csel	w21, w21, w19, ne  // ne = any
   463cc:	ldr	w3, [sp, #88]
   463d0:	mov	w2, w22
   463d4:	mov	x1, x25
   463d8:	mov	x0, x20
   463dc:	bl	c6a0 <mpfr_set4@plt>
   463e0:	cbnz	w0, 46850 <mpfr_subnormalize@@Base+0x6c0>
   463e4:	ldr	x1, [x20, #16]
   463e8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   463ec:	cmp	x1, x0
   463f0:	b.le	465dc <mpfr_subnormalize@@Base+0x44c>
   463f4:	mov	x0, x25
   463f8:	bl	c070 <mpfr_clear@plt>
   463fc:	cbz	w21, 4642c <mpfr_subnormalize@@Base+0x29c>
   46400:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46404:	ldr	x1, [x0, #2576]
   46408:	add	x0, x0, #0xa10
   4640c:	blr	x1
   46410:	add	x0, x23, x0
   46414:	ldp	x23, x24, [sp, #48]
   46418:	ldr	w1, [x0]
   4641c:	ldp	x25, x26, [sp, #64]
   46420:	orr	w1, w1, #0x8
   46424:	str	w1, [x0]
   46428:	b	461c0 <mpfr_subnormalize@@Base+0x30>
   4642c:	ldp	x23, x24, [sp, #48]
   46430:	ldp	x25, x26, [sp, #64]
   46434:	b	461c0 <mpfr_subnormalize@@Base+0x30>
   46438:	cmp	w22, #0x5
   4643c:	b.eq	46520 <mpfr_subnormalize@@Base+0x390>  // b.none
   46440:	orr	x0, x0, x10
   46444:	cmp	w22, #0x1
   46448:	b.eq	46464 <mpfr_subnormalize@@Base+0x2d4>  // b.none
   4644c:	add	w3, w22, w21, lsr #31
   46450:	cmp	w3, #0x3
   46454:	b.eq	46464 <mpfr_subnormalize@@Base+0x2d4>  // b.none
   46458:	cbz	x0, 46520 <mpfr_subnormalize@@Base+0x390>
   4645c:	ldr	x3, [x9, x7, lsl #3]
   46460:	b	46350 <mpfr_subnormalize@@Base+0x1c0>
   46464:	cmp	x0, #0x0
   46468:	csneg	w21, wzr, w21, eq  // eq = none
   4646c:	cmp	x26, x1
   46470:	b.eq	463a0 <mpfr_subnormalize@@Base+0x210>  // b.none
   46474:	lsl	x2, x2, #3
   46478:	mov	x0, x26
   4647c:	bl	ba10 <memcpy@plt>
   46480:	b	463a0 <mpfr_subnormalize@@Base+0x210>
   46484:	mov	x0, x20
   46488:	bl	bf00 <mpfr_powerof2_raw@plt>
   4648c:	cbnz	w0, 46698 <mpfr_subnormalize@@Base+0x508>
   46490:	cbnz	w22, 465f8 <mpfr_subnormalize@@Base+0x468>
   46494:	ldr	x1, [x20]
   46498:	ldr	x2, [x20, #24]
   4649c:	sub	x1, x1, #0x1
   464a0:	asr	x1, x1, #6
   464a4:	ldr	x0, [x2, x1, lsl #3]
   464a8:	tbz	x0, #62, 46610 <mpfr_subnormalize@@Base+0x480>
   464ac:	tst	x0, #0x3fffffffffffffff
   464b0:	b.ne	464d4 <mpfr_subnormalize@@Base+0x344>  // b.any
   464b4:	sub	x0, x1, #0x1
   464b8:	cbnz	x1, 464cc <mpfr_subnormalize@@Base+0x33c>
   464bc:	b	46638 <mpfr_subnormalize@@Base+0x4a8>
   464c0:	sub	x0, x0, #0x1
   464c4:	cmn	x0, #0x1
   464c8:	b.eq	46638 <mpfr_subnormalize@@Base+0x4a8>  // b.none
   464cc:	ldr	x1, [x2, x0, lsl #3]
   464d0:	cbz	x1, 464c0 <mpfr_subnormalize@@Base+0x330>
   464d4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   464d8:	ldr	x1, [x0, #2512]
   464dc:	add	x0, x0, #0x9d0
   464e0:	blr	x1
   464e4:	ldr	x1, [x23, x0]
   464e8:	mov	x0, x20
   464ec:	add	x1, x1, #0x1
   464f0:	bl	c2b0 <mpfr_setmin@plt>
   464f4:	cbz	w21, 46630 <mpfr_subnormalize@@Base+0x4a0>
   464f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   464fc:	ldr	x1, [x0, #2576]
   46500:	add	x0, x0, #0xa10
   46504:	blr	x1
   46508:	add	x0, x23, x0
   4650c:	ldp	x23, x24, [sp, #48]
   46510:	ldr	w1, [x0]
   46514:	orr	w1, w1, #0x8
   46518:	str	w1, [x0]
   4651c:	b	461c0 <mpfr_subnormalize@@Base+0x30>
   46520:	mov	w21, #0x0                   	// #0
   46524:	b	4646c <mpfr_subnormalize@@Base+0x2dc>
   46528:	cmp	x26, x1
   4652c:	b.eq	463a0 <mpfr_subnormalize@@Base+0x210>  // b.none
   46530:	cmp	x2, #0x1
   46534:	b.eq	463a0 <mpfr_subnormalize@@Base+0x210>  // b.none
   46538:	sub	x7, x6, x5
   4653c:	mov	x4, #0x1                   	// #1
   46540:	add	x7, x7, #0x3
   46544:	sub	x3, x4, x5
   46548:	add	x6, x3, x6
   4654c:	add	x3, x26, #0x8
   46550:	add	x7, x9, x7, lsl #3
   46554:	add	x8, x26, #0x18
   46558:	add	x9, x9, x6, lsl #3
   4655c:	cmp	x3, x7
   46560:	ccmp	x8, x9, #0x0, cc  // cc = lo, ul, last
   46564:	sub	x6, x5, #0x1
   46568:	ccmp	x6, #0x9, #0x0, ls  // ls = plast
   4656c:	b.ls	467b8 <mpfr_subnormalize@@Base+0x628>  // b.plast
   46570:	lsr	x2, x5, #1
   46574:	lsl	x2, x2, #4
   46578:	ldr	q0, [x9, x0]
   4657c:	str	q0, [x3, x0]
   46580:	add	x0, x0, #0x10
   46584:	cmp	x2, x0
   46588:	b.ne	46578 <mpfr_subnormalize@@Base+0x3e8>  // b.any
   4658c:	orr	x0, x5, #0x1
   46590:	tbz	w5, #0, 463a0 <mpfr_subnormalize@@Base+0x210>
   46594:	ldr	x1, [x1, x0, lsl #3]
   46598:	str	x1, [x26, x0, lsl #3]
   4659c:	b	463a0 <mpfr_subnormalize@@Base+0x210>
   465a0:	sub	x5, x5, x6
   465a4:	add	x2, x6, x24
   465a8:	add	x0, x26, x5, lsl #3
   465ac:	lsl	x21, x5, #3
   465b0:	cmp	x0, x9
   465b4:	b.eq	465c4 <mpfr_subnormalize@@Base+0x434>  // b.none
   465b8:	lsl	x2, x2, #3
   465bc:	mov	x1, x9
   465c0:	bl	ba10 <memcpy@plt>
   465c4:	mov	x2, x21
   465c8:	mov	x0, x26
   465cc:	mov	w1, #0x0                   	// #0
   465d0:	mov	w21, #0x0                   	// #0
   465d4:	bl	c110 <memset@plt>
   465d8:	b	463b0 <mpfr_subnormalize@@Base+0x220>
   465dc:	adrp	x2, 65000 <mpfr_bases@@Base+0x6f8>
   465e0:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   465e4:	add	x2, x2, #0x808
   465e8:	add	x0, x0, #0x7f8
   465ec:	mov	w1, #0xa1                  	// #161
   465f0:	bl	cb40 <mpfr_assert_fail@plt>
   465f4:	b	463f4 <mpfr_subnormalize@@Base+0x264>
   465f8:	cmp	w22, #0x1
   465fc:	b.eq	46610 <mpfr_subnormalize@@Base+0x480>  // b.none
   46600:	ldr	w2, [x20, #8]
   46604:	add	w2, w22, w2, lsr #31
   46608:	cmp	w2, #0x3
   4660c:	b.ne	464d4 <mpfr_subnormalize@@Base+0x344>  // b.any
   46610:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46614:	ldr	x1, [x0, #2512]
   46618:	add	x0, x0, #0x9d0
   4661c:	blr	x1
   46620:	ldr	x1, [x23, x0]
   46624:	mov	x0, x20
   46628:	bl	c2b0 <mpfr_setmin@plt>
   4662c:	cbnz	w21, 4666c <mpfr_subnormalize@@Base+0x4dc>
   46630:	ldp	x23, x24, [sp, #48]
   46634:	b	461c0 <mpfr_subnormalize@@Base+0x30>
   46638:	cmp	w19, #0x0
   4663c:	ccmp	w21, #0x0, #0x4, gt
   46640:	b.gt	46650 <mpfr_subnormalize@@Base+0x4c0>
   46644:	cmp	w19, #0x0
   46648:	ccmp	w21, #0x0, #0x0, lt  // lt = tstop
   4664c:	b.ge	464d4 <mpfr_subnormalize@@Base+0x344>  // b.tcont
   46650:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46654:	ldr	x1, [x0, #2512]
   46658:	add	x0, x0, #0x9d0
   4665c:	blr	x1
   46660:	ldr	x1, [x23, x0]
   46664:	mov	x0, x20
   46668:	bl	c2b0 <mpfr_setmin@plt>
   4666c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46670:	ldr	x1, [x0, #2576]
   46674:	add	x0, x0, #0xa10
   46678:	blr	x1
   4667c:	add	x0, x23, x0
   46680:	neg	w21, w21
   46684:	ldp	x23, x24, [sp, #48]
   46688:	ldr	w1, [x0]
   4668c:	orr	w1, w1, #0x8
   46690:	str	w1, [x0]
   46694:	b	461c0 <mpfr_subnormalize@@Base+0x30>
   46698:	cbz	w19, 467b0 <mpfr_subnormalize@@Base+0x620>
   4669c:	ldr	w0, [x24]
   466a0:	mov	w21, w19
   466a4:	orr	w0, w0, #0x8
   466a8:	str	w0, [x24]
   466ac:	ldp	x23, x24, [sp, #48]
   466b0:	b	461c0 <mpfr_subnormalize@@Base+0x30>
   466b4:	ldur	x0, [x1, #-8]
   466b8:	cmp	w22, #0x0
   466bc:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   466c0:	and	x10, x0, #0x8000000000000000
   466c4:	and	x0, x0, #0x7fffffffffffffff
   466c8:	b.lt	46438 <mpfr_subnormalize@@Base+0x2a8>  // b.tstop
   466cc:	cmp	x0, #0x0
   466d0:	sub	x3, x7, #0x1
   466d4:	ccmp	x3, #0x0, #0x4, eq  // eq = none
   466d8:	b.eq	46338 <mpfr_subnormalize@@Base+0x1a8>  // b.none
   466dc:	mov	x0, #0xfffffffffffffff8    	// #-8
   466e0:	madd	x0, x7, x0, x0
   466e4:	add	x4, x1, x0
   466e8:	ldr	x0, [x4, x3, lsl #3]
   466ec:	subs	x3, x3, #0x1
   466f0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   466f4:	b.eq	466e8 <mpfr_subnormalize@@Base+0x558>  // b.none
   466f8:	mov	x24, #0x1                   	// #1
   466fc:	b	46338 <mpfr_subnormalize@@Base+0x1a8>
   46700:	cmp	x26, x1
   46704:	b.eq	463a0 <mpfr_subnormalize@@Base+0x210>  // b.none
   46708:	cmp	x0, x5
   4670c:	b.ge	463a0 <mpfr_subnormalize@@Base+0x210>  // b.tcont
   46710:	add	x0, x0, #0x3
   46714:	sub	x7, x5, x4
   46718:	lsl	x0, x0, #3
   4671c:	sub	x3, x0, #0x10
   46720:	add	x8, x26, x0
   46724:	add	x6, x1, x3
   46728:	add	x0, x1, x0
   4672c:	cmp	x6, x8
   46730:	add	x3, x26, x3
   46734:	ccmp	x3, x0, #0x2, cc  // cc = lo, ul, last
   46738:	cset	w8, cs  // cs = hs, nlast
   4673c:	cmp	x7, #0x9
   46740:	ccmp	x4, x5, #0x0, hi  // hi = pmore
   46744:	cset	w0, le
   46748:	tst	w8, w0
   4674c:	b.eq	46798 <mpfr_subnormalize@@Base+0x608>  // b.none
   46750:	cmp	x4, x5
   46754:	sub	x2, x2, x4
   46758:	csinc	x2, x2, xzr, le
   4675c:	mov	x0, #0x0                   	// #0
   46760:	lsr	x5, x2, #1
   46764:	lsl	x5, x5, #4
   46768:	ldr	q0, [x6, x0]
   4676c:	str	q0, [x3, x0]
   46770:	add	x0, x0, #0x10
   46774:	cmp	x0, x5
   46778:	b.ne	46768 <mpfr_subnormalize@@Base+0x5d8>  // b.any
   4677c:	and	x0, x2, #0xfffffffffffffffe
   46780:	add	x4, x0, x4
   46784:	cmp	x0, x2
   46788:	b.eq	463a0 <mpfr_subnormalize@@Base+0x210>  // b.none
   4678c:	ldr	x0, [x1, x4, lsl #3]
   46790:	str	x0, [x26, x4, lsl #3]
   46794:	b	463a0 <mpfr_subnormalize@@Base+0x210>
   46798:	ldr	x0, [x1, x4, lsl #3]
   4679c:	str	x0, [x26, x4, lsl #3]
   467a0:	cmp	x4, x5
   467a4:	add	x4, x4, #0x1
   467a8:	b.lt	46798 <mpfr_subnormalize@@Base+0x608>  // b.tstop
   467ac:	b	463a0 <mpfr_subnormalize@@Base+0x210>
   467b0:	ldp	x23, x24, [sp, #48]
   467b4:	b	461bc <mpfr_subnormalize@@Base+0x2c>
   467b8:	mov	x0, x4
   467bc:	ldr	x3, [x1, x0, lsl #3]
   467c0:	str	x3, [x26, x0, lsl #3]
   467c4:	add	x0, x0, #0x1
   467c8:	cmp	x0, x2
   467cc:	b.ne	467bc <mpfr_subnormalize@@Base+0x62c>  // b.any
   467d0:	b	463a0 <mpfr_subnormalize@@Base+0x210>
   467d4:	tbnz	w21, #31, 4682c <mpfr_subnormalize@@Base+0x69c>
   467d8:	tbnz	w19, #31, 463cc <mpfr_subnormalize@@Base+0x23c>
   467dc:	cmp	w21, #0x0
   467e0:	b.le	463cc <mpfr_subnormalize@@Base+0x23c>
   467e4:	ldr	w0, [x20, #8]
   467e8:	tbnz	w0, #31, 46800 <mpfr_subnormalize@@Base+0x670>
   467ec:	mov	w1, #0x1                   	// #1
   467f0:	cmp	w0, #0x0
   467f4:	cset	w0, gt
   467f8:	cmp	w0, w1
   467fc:	b.eq	46840 <mpfr_subnormalize@@Base+0x6b0>  // b.none
   46800:	mov	x0, x25
   46804:	neg	w21, w21
   46808:	bl	c670 <mpfr_nexttoinf@plt>
   4680c:	b	463cc <mpfr_subnormalize@@Base+0x23c>
   46810:	tst	x24, x3
   46814:	b.ne	46824 <mpfr_subnormalize@@Base+0x694>  // b.any
   46818:	mov	w0, #0xfffffffe            	// #-2
   4681c:	mul	w21, w21, w0
   46820:	b	4646c <mpfr_subnormalize@@Base+0x2dc>
   46824:	lsl	w21, w21, #1
   46828:	b	46350 <mpfr_subnormalize@@Base+0x1c0>
   4682c:	tbz	w19, #31, 463cc <mpfr_subnormalize@@Base+0x23c>
   46830:	ldr	w0, [x20, #8]
   46834:	tbnz	w0, #31, 46840 <mpfr_subnormalize@@Base+0x6b0>
   46838:	mov	w1, #0xffffffff            	// #-1
   4683c:	b	467f0 <mpfr_subnormalize@@Base+0x660>
   46840:	mov	x0, x25
   46844:	neg	w21, w21
   46848:	bl	c460 <mpfr_nexttozero@plt>
   4684c:	b	463cc <mpfr_subnormalize@@Base+0x23c>
   46850:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   46854:	adrp	x0, 65000 <mpfr_bases@@Base+0x6f8>
   46858:	add	x2, x2, #0xa08
   4685c:	add	x0, x0, #0x7f8
   46860:	mov	w1, #0xa0                  	// #160
   46864:	bl	cb40 <mpfr_assert_fail@plt>
   46868:	stp	x29, x30, [sp, #-128]!
   4686c:	mov	x29, sp
   46870:	stp	x19, x20, [sp, #16]
   46874:	mov	x19, x3
   46878:	mov	x20, x1
   4687c:	stp	x21, x22, [sp, #32]
   46880:	mov	x21, x4
   46884:	add	x4, x3, #0x1
   46888:	stp	x23, x24, [sp, #48]
   4688c:	cmp	x4, x21
   46890:	mov	x22, x0
   46894:	mov	x24, x2
   46898:	b.ne	4691c <mpfr_subnormalize@@Base+0x78c>  // b.any
   4689c:	cbz	x3, 46900 <mpfr_subnormalize@@Base+0x770>
   468a0:	lsl	x21, x3, #1
   468a4:	mov	x0, x1
   468a8:	sub	x1, x21, #0x1
   468ac:	bl	bcb0 <__gmpz_set_ui@plt>
   468b0:	mov	x2, x19
   468b4:	mov	x1, x20
   468b8:	mov	x0, x20
   468bc:	bl	c100 <__gmpz_mul_ui@plt>
   468c0:	add	x1, x21, #0x1
   468c4:	mov	x0, x24
   468c8:	mov	x2, #0x2                   	// #2
   468cc:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   468d0:	mov	x1, x24
   468d4:	mov	x0, x24
   468d8:	mov	x2, #0x1                   	// #1
   468dc:	bl	c200 <__gmpz_mul_2exp@plt>
   468e0:	mov	x1, x20
   468e4:	mov	x0, x22
   468e8:	bl	bfa0 <__gmpz_set@plt>
   468ec:	ldp	x19, x20, [sp, #16]
   468f0:	ldp	x21, x22, [sp, #32]
   468f4:	ldp	x23, x24, [sp, #48]
   468f8:	ldp	x29, x30, [sp], #128
   468fc:	ret
   46900:	mov	x0, x20
   46904:	mov	x1, #0x1                   	// #1
   46908:	bl	bcb0 <__gmpz_set_ui@plt>
   4690c:	mov	x0, x24
   46910:	mov	x1, #0x1                   	// #1
   46914:	bl	bcb0 <__gmpz_set_ui@plt>
   46918:	b	468e0 <mpfr_subnormalize@@Base+0x750>
   4691c:	add	x19, x3, x21
   46920:	add	x23, sp, #0x50
   46924:	stp	x25, x26, [sp, #64]
   46928:	add	x26, sp, #0x60
   4692c:	lsr	x19, x19, #1
   46930:	mov	x4, x19
   46934:	bl	46868 <mpfr_subnormalize@@Base+0x6d8>
   46938:	mov	x0, x23
   4693c:	add	x25, sp, #0x70
   46940:	bl	bf90 <mpfr_mpz_init@plt>
   46944:	mov	x0, x26
   46948:	bl	bf90 <mpfr_mpz_init@plt>
   4694c:	mov	x0, x25
   46950:	bl	bf90 <mpfr_mpz_init@plt>
   46954:	mov	x4, x21
   46958:	mov	x3, x19
   4695c:	mov	x2, x25
   46960:	mov	x1, x26
   46964:	mov	x0, x23
   46968:	bl	46868 <mpfr_subnormalize@@Base+0x6d8>
   4696c:	mov	x2, x25
   46970:	mov	x1, x22
   46974:	mov	x0, x22
   46978:	bl	bff0 <__gmpz_mul@plt>
   4697c:	mov	x2, x20
   46980:	mov	x1, x23
   46984:	mov	x0, x23
   46988:	bl	bff0 <__gmpz_mul@plt>
   4698c:	mov	x2, x23
   46990:	mov	x1, x22
   46994:	mov	x0, x22
   46998:	bl	c9c0 <__gmpz_add@plt>
   4699c:	mov	x2, x26
   469a0:	mov	x1, x20
   469a4:	mov	x0, x20
   469a8:	bl	bff0 <__gmpz_mul@plt>
   469ac:	mov	x2, x25
   469b0:	mov	x1, x24
   469b4:	mov	x0, x24
   469b8:	bl	bff0 <__gmpz_mul@plt>
   469bc:	mov	x0, x23
   469c0:	bl	c170 <mpfr_mpz_clear@plt>
   469c4:	mov	x0, x26
   469c8:	bl	c170 <mpfr_mpz_clear@plt>
   469cc:	mov	x0, x25
   469d0:	bl	c170 <mpfr_mpz_clear@plt>
   469d4:	ldp	x19, x20, [sp, #16]
   469d8:	ldp	x21, x22, [sp, #32]
   469dc:	ldp	x23, x24, [sp, #48]
   469e0:	ldp	x25, x26, [sp, #64]
   469e4:	ldp	x29, x30, [sp], #128
   469e8:	ret
   469ec:	nop

00000000000469f0 <mpfr_const_catalan_internal@@Base>:
   469f0:	stp	x29, x30, [sp, #-416]!
   469f4:	mov	x29, sp
   469f8:	stp	x23, x24, [sp, #48]
   469fc:	mov	x24, x0
   46a00:	ldr	x23, [x0]
   46a04:	stp	x19, x20, [sp, #16]
   46a08:	stp	x21, x22, [sp, #32]
   46a0c:	cmp	x23, #0x1
   46a10:	mov	w22, w1
   46a14:	stp	x25, x26, [sp, #64]
   46a18:	stp	x27, x28, [sp, #80]
   46a1c:	b.eq	46d28 <mpfr_const_catalan_internal@@Base+0x338>  // b.none
   46a20:	b.le	46d4c <mpfr_const_catalan_internal@@Base+0x35c>
   46a24:	sub	x21, x23, #0x1
   46a28:	mov	w0, #0x40                  	// #64
   46a2c:	clz	x21, x21
   46a30:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   46a34:	sub	w21, w0, w21
   46a38:	add	x21, x23, w21, sxtw
   46a3c:	add	x27, x21, #0x7
   46a40:	cmp	x27, x1
   46a44:	b.ge	46d64 <mpfr_const_catalan_internal@@Base+0x374>  // b.tcont
   46a48:	add	x21, x21, #0x6
   46a4c:	asr	x21, x21, #6
   46a50:	add	x21, x21, #0x1
   46a54:	add	x0, x21, x21, lsl #1
   46a58:	cmp	x0, #0x10
   46a5c:	b.gt	46c64 <mpfr_const_catalan_internal@@Base+0x274>
   46a60:	add	x0, sp, #0x120
   46a64:	stp	xzr, x0, [sp, #272]
   46a68:	mov	x2, x0
   46a6c:	add	x4, x2, x21, lsl #3
   46a70:	add	x1, x2, x21, lsl #4
   46a74:	mov	w3, #0x1                   	// #1
   46a78:	mov	x5, #0x40                  	// #64
   46a7c:	mrs	x0, tpidr_el0
   46a80:	add	x20, sp, #0x80
   46a84:	stp	x0, x5, [sp, #104]
   46a88:	sub	x0, x27, #0x1
   46a8c:	add	x25, sp, #0x90
   46a90:	str	x0, [sp, #96]
   46a94:	mov	x0, x20
   46a98:	str	x27, [sp, #176]
   46a9c:	add	x21, sp, #0xa0
   46aa0:	str	w3, [sp, #184]
   46aa4:	add	x28, sp, #0xb0
   46aa8:	stp	x2, x27, [sp, #200]
   46aac:	add	x19, sp, #0xd0
   46ab0:	add	x26, sp, #0xf0
   46ab4:	str	w3, [sp, #216]
   46ab8:	stp	x4, x27, [sp, #232]
   46abc:	str	w3, [sp, #248]
   46ac0:	str	x1, [sp, #264]
   46ac4:	bl	bf90 <mpfr_mpz_init@plt>
   46ac8:	mov	x0, x25
   46acc:	bl	bf90 <mpfr_mpz_init@plt>
   46ad0:	mov	x0, x21
   46ad4:	bl	bf90 <mpfr_mpz_init@plt>
   46ad8:	mov	w2, #0x2                   	// #2
   46adc:	mov	x1, #0x3                   	// #3
   46ae0:	mov	x0, x28
   46ae4:	bl	c840 <mpfr_sqrt_ui@plt>
   46ae8:	mov	w3, #0x2                   	// #2
   46aec:	mov	x1, x28
   46af0:	mov	x2, #0x2                   	// #2
   46af4:	mov	x0, x28
   46af8:	bl	c260 <mpfr_add_ui@plt>
   46afc:	mov	x1, x28
   46b00:	mov	w2, #0x2                   	// #2
   46b04:	mov	x0, x28
   46b08:	bl	c090 <mpfr_log@plt>
   46b0c:	mov	w2, #0x2                   	// #2
   46b10:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46b14:	ldr	x1, [x0, #2624]
   46b18:	add	x0, x0, #0xa40
   46b1c:	blr	x1
   46b20:	ldr	x1, [sp, #104]
   46b24:	add	x1, x1, x0
   46b28:	mov	x0, x19
   46b2c:	bl	c380 <mpfr_cache@plt>
   46b30:	mov	x2, x19
   46b34:	mov	x1, x28
   46b38:	mov	w3, #0x0                   	// #0
   46b3c:	mov	x0, x28
   46b40:	bl	bd50 <mpfr_mul@plt>
   46b44:	ldr	x0, [sp, #96]
   46b48:	mov	x3, #0x0                   	// #0
   46b4c:	mov	x2, x21
   46b50:	mov	x1, x25
   46b54:	asr	x4, x0, #1
   46b58:	mov	x0, x20
   46b5c:	bl	46868 <mpfr_subnormalize@@Base+0x6d8>
   46b60:	mov	x1, x20
   46b64:	mov	x0, x20
   46b68:	mov	x2, #0x3                   	// #3
   46b6c:	bl	c100 <__gmpz_mul_ui@plt>
   46b70:	mov	x1, x20
   46b74:	mov	w2, #0x2                   	// #2
   46b78:	mov	x0, x19
   46b7c:	bl	c240 <mpfr_set_z@plt>
   46b80:	mov	x1, x21
   46b84:	mov	w2, #0x3                   	// #3
   46b88:	mov	x0, x26
   46b8c:	bl	c240 <mpfr_set_z@plt>
   46b90:	mov	x2, x26
   46b94:	mov	x1, x19
   46b98:	mov	w3, #0x0                   	// #0
   46b9c:	mov	x0, x19
   46ba0:	bl	c620 <mpfr_div@plt>
   46ba4:	mov	x2, x19
   46ba8:	mov	x1, x28
   46bac:	mov	w3, #0x0                   	// #0
   46bb0:	mov	x0, x28
   46bb4:	bl	c1a0 <mpfr_add@plt>
   46bb8:	mov	x1, x28
   46bbc:	mov	x0, x28
   46bc0:	mov	w3, #0x0                   	// #0
   46bc4:	mov	x2, #0x3                   	// #3
   46bc8:	bl	c8f0 <mpfr_div_2ui@plt>
   46bcc:	ldr	x1, [sp, #192]
   46bd0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   46bd4:	cmp	x1, x0
   46bd8:	b.le	46c7c <mpfr_const_catalan_internal@@Base+0x28c>
   46bdc:	ldr	x1, [sp, #176]
   46be0:	cmp	w22, #0x0
   46be4:	ldr	x0, [sp, #200]
   46be8:	sub	x1, x1, #0x1
   46bec:	cinc	x3, x23, eq  // eq = none
   46bf0:	sub	x2, x27, #0x5
   46bf4:	asr	x1, x1, #6
   46bf8:	add	x1, x1, #0x1
   46bfc:	bl	c370 <mpfr_round_p@plt>
   46c00:	cbz	w0, 46c7c <mpfr_const_catalan_internal@@Base+0x28c>
   46c04:	ldr	w3, [sp, #184]
   46c08:	mov	x1, x28
   46c0c:	mov	w2, w22
   46c10:	mov	x0, x24
   46c14:	bl	c6a0 <mpfr_set4@plt>
   46c18:	mov	w19, w0
   46c1c:	ldr	x1, [sp, #272]
   46c20:	cbz	x1, 46c2c <mpfr_const_catalan_internal@@Base+0x23c>
   46c24:	ldr	x0, [sp, #280]
   46c28:	bl	cc20 <mpfr_free_func@plt>
   46c2c:	mov	x0, x20
   46c30:	bl	c170 <mpfr_mpz_clear@plt>
   46c34:	mov	x0, x25
   46c38:	bl	c170 <mpfr_mpz_clear@plt>
   46c3c:	mov	x0, x21
   46c40:	bl	c170 <mpfr_mpz_clear@plt>
   46c44:	mov	w0, w19
   46c48:	ldp	x19, x20, [sp, #16]
   46c4c:	ldp	x21, x22, [sp, #32]
   46c50:	ldp	x23, x24, [sp, #48]
   46c54:	ldp	x25, x26, [sp, #64]
   46c58:	ldp	x27, x28, [sp, #80]
   46c5c:	ldp	x29, x30, [sp], #416
   46c60:	ret
   46c64:	lsl	x0, x0, #3
   46c68:	str	x0, [sp, #272]
   46c6c:	bl	ccf0 <mpfr_allocate_func@plt>
   46c70:	mov	x2, x0
   46c74:	str	x0, [sp, #280]
   46c78:	b	46a6c <mpfr_const_catalan_internal@@Base+0x7c>
   46c7c:	ldr	x1, [sp, #112]
   46c80:	mov	x0, #0xfffffffffffffeff    	// #-257
   46c84:	movk	x0, #0x7fff, lsl #48
   46c88:	sub	x0, x0, x27
   46c8c:	cmp	x0, x1
   46c90:	b.lt	46d34 <mpfr_const_catalan_internal@@Base+0x344>  // b.tstop
   46c94:	add	x27, x27, x1
   46c98:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   46c9c:	cmp	x27, x0
   46ca0:	add	x0, x27, x27, lsr #63
   46ca4:	ldr	x1, [sp, #272]
   46ca8:	asr	x0, x0, #1
   46cac:	str	x0, [sp, #112]
   46cb0:	b.ge	46d64 <mpfr_const_catalan_internal@@Base+0x374>  // b.tcont
   46cb4:	sub	x0, x27, #0x1
   46cb8:	str	x0, [sp, #96]
   46cbc:	asr	x3, x0, #6
   46cc0:	add	x3, x3, #0x1
   46cc4:	str	x3, [sp, #120]
   46cc8:	add	x2, x3, x3, lsl #1
   46ccc:	lsl	x2, x2, #3
   46cd0:	str	x2, [sp, #272]
   46cd4:	cbz	x1, 46d14 <mpfr_const_catalan_internal@@Base+0x324>
   46cd8:	ldr	x0, [sp, #280]
   46cdc:	bl	c1c0 <mpfr_reallocate_func@plt>
   46ce0:	str	x0, [sp, #280]
   46ce4:	ldr	x3, [sp, #120]
   46ce8:	mov	w1, #0x1                   	// #1
   46cec:	add	x2, x0, x3, lsl #3
   46cf0:	add	x3, x0, x3, lsl #4
   46cf4:	str	x27, [sp, #176]
   46cf8:	str	w1, [sp, #184]
   46cfc:	stp	x0, x27, [sp, #200]
   46d00:	str	w1, [sp, #216]
   46d04:	stp	x2, x27, [sp, #232]
   46d08:	str	w1, [sp, #248]
   46d0c:	str	x3, [sp, #264]
   46d10:	b	46ad8 <mpfr_const_catalan_internal@@Base+0xe8>
   46d14:	mov	x0, x2
   46d18:	bl	ccf0 <mpfr_allocate_func@plt>
   46d1c:	str	x0, [sp, #280]
   46d20:	ldr	x3, [sp, #120]
   46d24:	b	46ce8 <mpfr_const_catalan_internal@@Base+0x2f8>
   46d28:	mov	x21, x23
   46d2c:	mov	x27, #0x8                   	// #8
   46d30:	b	46a60 <mpfr_const_catalan_internal@@Base+0x70>
   46d34:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   46d38:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   46d3c:	add	x2, x2, #0x358
   46d40:	add	x0, x0, #0xc8
   46d44:	mov	w1, #0x8d                  	// #141
   46d48:	bl	cb40 <mpfr_assert_fail@plt>
   46d4c:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   46d50:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   46d54:	add	x2, x2, #0xb8
   46d58:	add	x0, x0, #0xc8
   46d5c:	mov	w1, #0x74                  	// #116
   46d60:	bl	cb40 <mpfr_assert_fail@plt>
   46d64:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000046d68 <mpfr_const_catalan@@Base>:
   46d68:	stp	x29, x30, [sp, #-16]!
   46d6c:	mov	x4, x0
   46d70:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46d74:	ldr	x2, [x0, #2592]
   46d78:	add	x0, x0, #0xa20
   46d7c:	blr	x2
   46d80:	mov	x29, sp
   46d84:	ldp	x29, x30, [sp], #16
   46d88:	mrs	x3, tpidr_el0
   46d8c:	mov	w2, w1
   46d90:	add	x1, x3, x0
   46d94:	mov	x0, x4
   46d98:	b	c380 <mpfr_cache@plt>
   46d9c:	nop
   46da0:	stp	x29, x30, [sp, #-416]!
   46da4:	mov	x29, sp
   46da8:	stp	x23, x24, [sp, #48]
   46dac:	mov	x24, x0
   46db0:	mov	w0, #0x1                   	// #1
   46db4:	str	w0, [sp, #152]
   46db8:	ldr	x0, [x1]
   46dbc:	stp	x27, x28, [sp, #80]
   46dc0:	mov	x28, x1
   46dc4:	str	x0, [sp, #144]
   46dc8:	ldp	x0, x1, [x1, #16]
   46dcc:	stp	x19, x20, [sp, #16]
   46dd0:	mov	x20, x2
   46dd4:	ldr	x5, [x24]
   46dd8:	stp	x21, x22, [sp, #32]
   46ddc:	mov	w19, w3
   46de0:	stp	x25, x26, [sp, #64]
   46de4:	cmp	x0, #0x0
   46de8:	add	x26, x5, #0xa
   46dec:	stp	x0, x1, [sp, #160]
   46df0:	b.le	46e10 <mpfr_const_catalan@@Base+0xa8>
   46df4:	cmp	x0, #0x1
   46df8:	b.eq	46e10 <mpfr_const_catalan@@Base+0xa8>  // b.none
   46dfc:	sub	x0, x0, #0x1
   46e00:	mov	w1, #0x40                  	// #64
   46e04:	clz	x0, x0
   46e08:	sub	w0, w1, w0
   46e0c:	add	x26, x26, w0, sxtw
   46e10:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   46e14:	cmp	x26, x0
   46e18:	b.ge	47194 <mpfr_const_catalan@@Base+0x42c>  // b.tcont
   46e1c:	sub	x0, x26, #0x1
   46e20:	asr	x0, x0, #6
   46e24:	add	x0, x0, #0x1
   46e28:	cmp	x0, #0x10
   46e2c:	b.gt	47048 <mpfr_const_catalan@@Base+0x2e0>
   46e30:	add	x1, sp, #0x120
   46e34:	stp	xzr, x1, [sp, #272]
   46e38:	mov	x2, x1
   46e3c:	mrs	x21, tpidr_el0
   46e40:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46e44:	ldr	x1, [x0, #2576]
   46e48:	add	x0, x0, #0xa10
   46e4c:	blr	x1
   46e50:	add	x1, sp, #0xd0
   46e54:	str	x1, [sp, #120]
   46e58:	add	x1, sp, #0xf0
   46e5c:	str	x1, [sp, #128]
   46e60:	ldr	w0, [x21, x0]
   46e64:	add	x25, sp, #0x90
   46e68:	str	w0, [sp, #100]
   46e6c:	add	x27, sp, #0xb0
   46e70:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   46e74:	mov	w10, #0x1                   	// #1
   46e78:	str	x26, [sp, #176]
   46e7c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46e80:	ldr	x1, [x0, #2512]
   46e84:	add	x0, x0, #0x9d0
   46e88:	blr	x1
   46e8c:	add	x3, x21, x0
   46e90:	ldr	x22, [x21, x0]
   46e94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46e98:	ldr	x4, [x0, #2544]
   46e9c:	add	x0, x0, #0x9f0
   46ea0:	blr	x4
   46ea4:	cmp	w19, #0x0
   46ea8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   46eac:	cset	x4, eq  // eq = none
   46eb0:	str	x9, [x3]
   46eb4:	str	x4, [sp, #112]
   46eb8:	mov	x4, #0x40                  	// #64
   46ebc:	str	x4, [sp, #136]
   46ec0:	str	w10, [sp, #184]
   46ec4:	str	x2, [sp, #200]
   46ec8:	ldr	x23, [x21, x0]
   46ecc:	str	x1, [x21, x0]
   46ed0:	mov	x1, x25
   46ed4:	mov	w2, #0x0                   	// #0
   46ed8:	mov	x0, x27
   46edc:	bl	c090 <mpfr_log@plt>
   46ee0:	mov	x2, x20
   46ee4:	mov	x1, x27
   46ee8:	mov	w3, #0x0                   	// #0
   46eec:	mov	x0, x27
   46ef0:	bl	cc60 <mpfr_div_ui@plt>
   46ef4:	ldr	x3, [sp, #192]
   46ef8:	mov	w2, #0x0                   	// #0
   46efc:	mov	x1, x27
   46f00:	mov	x0, x27
   46f04:	str	x3, [sp, #104]
   46f08:	bl	c750 <mpfr_exp@plt>
   46f0c:	ldr	x3, [sp, #104]
   46f10:	add	w2, w3, #0x3
   46f14:	cmn	x3, #0x1
   46f18:	b.ge	46f28 <mpfr_const_catalan@@Base+0x1c0>  // b.tcont
   46f1c:	cmn	x3, #0x2
   46f20:	cset	w2, eq  // eq = none
   46f24:	add	w2, w2, #0x1
   46f28:	ldr	x0, [sp, #192]
   46f2c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   46f30:	ldr	x3, [x24]
   46f34:	cmp	x0, x1
   46f38:	ldr	x0, [sp, #112]
   46f3c:	add	x3, x0, x3
   46f40:	b.le	4706c <mpfr_const_catalan@@Base+0x304>
   46f44:	ldr	x9, [sp, #176]
   46f48:	sub	x2, x26, w2, uxtw
   46f4c:	ldr	x0, [sp, #200]
   46f50:	sub	x1, x9, #0x1
   46f54:	asr	x1, x1, #6
   46f58:	add	x1, x1, #0x1
   46f5c:	bl	c370 <mpfr_round_p@plt>
   46f60:	cbz	w0, 47060 <mpfr_const_catalan@@Base+0x2f8>
   46f64:	ldr	w3, [x28, #8]
   46f68:	mov	x1, x27
   46f6c:	mov	w2, w19
   46f70:	mov	x0, x24
   46f74:	bl	c6a0 <mpfr_set4@plt>
   46f78:	mov	w20, w0
   46f7c:	ldr	x1, [sp, #272]
   46f80:	cbnz	x1, 4703c <mpfr_const_catalan@@Base+0x2d4>
   46f84:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46f88:	ldr	x1, [x0, #2576]
   46f8c:	add	x0, x0, #0xa10
   46f90:	blr	x1
   46f94:	add	x2, x21, x0
   46f98:	ldr	w1, [sp, #100]
   46f9c:	str	w1, [x21, x0]
   46fa0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46fa4:	ldr	x3, [x0, #2512]
   46fa8:	add	x0, x0, #0x9d0
   46fac:	blr	x3
   46fb0:	ldr	x1, [x24, #16]
   46fb4:	str	x22, [x21, x0]
   46fb8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   46fbc:	ldr	x3, [x0, #2544]
   46fc0:	add	x0, x0, #0x9f0
   46fc4:	blr	x3
   46fc8:	str	x23, [x21, x0]
   46fcc:	cmp	x23, x1
   46fd0:	ccmp	x22, x1, #0x0, ge  // ge = tcont
   46fd4:	b.le	4700c <mpfr_const_catalan@@Base+0x2a4>
   46fd8:	mov	w1, w20
   46fdc:	mov	w2, w19
   46fe0:	mov	x0, x24
   46fe4:	bl	cb30 <mpfr_check_range@plt>
   46fe8:	mov	w20, w0
   46fec:	mov	w0, w20
   46ff0:	ldp	x19, x20, [sp, #16]
   46ff4:	ldp	x21, x22, [sp, #32]
   46ff8:	ldp	x23, x24, [sp, #48]
   46ffc:	ldp	x25, x26, [sp, #64]
   47000:	ldp	x27, x28, [sp, #80]
   47004:	ldp	x29, x30, [sp], #416
   47008:	ret
   4700c:	cbz	w20, 46fec <mpfr_const_catalan@@Base+0x284>
   47010:	ldr	w0, [sp, #100]
   47014:	ldp	x23, x24, [sp, #48]
   47018:	orr	w21, w0, #0x8
   4701c:	str	w21, [x2]
   47020:	mov	w0, w20
   47024:	ldp	x19, x20, [sp, #16]
   47028:	ldp	x21, x22, [sp, #32]
   4702c:	ldp	x25, x26, [sp, #64]
   47030:	ldp	x27, x28, [sp, #80]
   47034:	ldp	x29, x30, [sp], #416
   47038:	ret
   4703c:	ldr	x0, [sp, #280]
   47040:	bl	cc20 <mpfr_free_func@plt>
   47044:	b	46f84 <mpfr_const_catalan@@Base+0x21c>
   47048:	lsl	x0, x0, #3
   4704c:	str	x0, [sp, #272]
   47050:	bl	ccf0 <mpfr_allocate_func@plt>
   47054:	mov	x2, x0
   47058:	str	x0, [sp, #280]
   4705c:	b	46e3c <mpfr_const_catalan@@Base+0xd4>
   47060:	ldr	x3, [x24]
   47064:	ldr	x0, [sp, #112]
   47068:	add	x3, x0, x3
   4706c:	ldr	x0, [sp, #120]
   47070:	mov	x1, x3
   47074:	bl	ca80 <mpfr_init2@plt>
   47078:	ldr	x1, [x28]
   4707c:	ldr	x0, [sp, #128]
   47080:	bl	ca80 <mpfr_init2@plt>
   47084:	ldr	w3, [sp, #184]
   47088:	mov	x1, x27
   4708c:	ldr	x0, [sp, #120]
   47090:	mov	w2, #0x0                   	// #0
   47094:	bl	c6a0 <mpfr_set4@plt>
   47098:	ldp	x1, x0, [sp, #120]
   4709c:	mov	x2, x20
   470a0:	mov	w3, #0x0                   	// #0
   470a4:	bl	bf70 <mpfr_pow_ui@plt>
   470a8:	cbz	w0, 4713c <mpfr_const_catalan@@Base+0x3d4>
   470ac:	ldr	x0, [sp, #128]
   470b0:	bl	c070 <mpfr_clear@plt>
   470b4:	ldr	x0, [sp, #120]
   470b8:	bl	c070 <mpfr_clear@plt>
   470bc:	ldr	x1, [sp, #136]
   470c0:	mov	x0, #0xfffffffffffffeff    	// #-257
   470c4:	movk	x0, #0x7fff, lsl #48
   470c8:	sub	x0, x0, x26
   470cc:	cmp	x0, x1
   470d0:	b.lt	4717c <mpfr_const_catalan@@Base+0x414>  // b.tstop
   470d4:	add	x26, x26, x1
   470d8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   470dc:	cmp	x26, x0
   470e0:	add	x0, x26, x26, lsr #63
   470e4:	ldr	x1, [sp, #272]
   470e8:	asr	x0, x0, #1
   470ec:	str	x0, [sp, #136]
   470f0:	b.ge	47194 <mpfr_const_catalan@@Base+0x42c>  // b.tcont
   470f4:	sub	x2, x26, #0x1
   470f8:	asr	x2, x2, #6
   470fc:	add	x2, x2, #0x1
   47100:	lsl	x2, x2, #3
   47104:	str	x2, [sp, #272]
   47108:	cbz	x1, 4712c <mpfr_const_catalan@@Base+0x3c4>
   4710c:	ldr	x0, [sp, #280]
   47110:	bl	c1c0 <mpfr_reallocate_func@plt>
   47114:	str	x0, [sp, #280]
   47118:	mov	w1, #0x1                   	// #1
   4711c:	str	x26, [sp, #176]
   47120:	str	w1, [sp, #184]
   47124:	str	x0, [sp, #200]
   47128:	b	46ed0 <mpfr_const_catalan@@Base+0x168>
   4712c:	mov	x0, x2
   47130:	bl	ccf0 <mpfr_allocate_func@plt>
   47134:	str	x0, [sp, #280]
   47138:	b	47118 <mpfr_const_catalan@@Base+0x3b0>
   4713c:	ldr	x0, [sp, #128]
   47140:	mov	x1, x25
   47144:	bl	ca60 <mpfr_equal_p@plt>
   47148:	cbz	w0, 470ac <mpfr_const_catalan@@Base+0x344>
   4714c:	ldr	w3, [x28, #8]
   47150:	mov	w2, w19
   47154:	ldr	x25, [sp, #120]
   47158:	mov	x0, x24
   4715c:	mov	x1, x25
   47160:	bl	c6a0 <mpfr_set4@plt>
   47164:	mov	w20, w0
   47168:	ldr	x0, [sp, #128]
   4716c:	bl	c070 <mpfr_clear@plt>
   47170:	mov	x0, x25
   47174:	bl	c070 <mpfr_clear@plt>
   47178:	b	46f7c <mpfr_const_catalan@@Base+0x214>
   4717c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   47180:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   47184:	add	x2, x2, #0x610
   47188:	add	x0, x0, #0xd8
   4718c:	mov	w1, #0x11d                 	// #285
   47190:	bl	cb40 <mpfr_assert_fail@plt>
   47194:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000047198 <mpfr_rootn_ui@@Base>:
   47198:	stp	x29, x30, [sp, #-128]!
   4719c:	cmp	x2, #0x1
   471a0:	mov	x29, sp
   471a4:	stp	x19, x20, [sp, #16]
   471a8:	mov	x19, x2
   471ac:	mov	x20, x1
   471b0:	stp	x21, x22, [sp, #32]
   471b4:	mov	w22, w3
   471b8:	mov	x21, x0
   471bc:	stp	x27, x28, [sp, #80]
   471c0:	b.ls	475a4 <mpfr_rootn_ui@@Base+0x40c>  // b.plast
   471c4:	ldr	x0, [x20, #16]
   471c8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   471cc:	cmp	x0, x1
   471d0:	b.le	475f4 <mpfr_rootn_ui@@Base+0x45c>
   471d4:	ldr	w0, [x20, #8]
   471d8:	tbnz	w0, #31, 4762c <mpfr_rootn_ui@@Base+0x494>
   471dc:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   471e0:	mov	x0, x20
   471e4:	ldr	x1, [x1, #3928]
   471e8:	bl	c9b0 <mpfr_cmpabs@plt>
   471ec:	cbz	w0, 47574 <mpfr_rootn_ui@@Base+0x3dc>
   471f0:	cmp	x19, #0x64
   471f4:	b.hi	47468 <mpfr_rootn_ui@@Base+0x2d0>  // b.pmore
   471f8:	stp	x23, x24, [sp, #48]
   471fc:	mrs	x23, tpidr_el0
   47200:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47204:	ldr	x1, [x0, #2576]
   47208:	add	x0, x0, #0xa10
   4720c:	blr	x1
   47210:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   47214:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   47218:	ldr	w0, [x23, x0]
   4721c:	add	x24, sp, #0x70
   47220:	str	w0, [sp, #100]
   47224:	stp	x25, x26, [sp, #64]
   47228:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4722c:	ldr	x2, [x0, #2512]
   47230:	add	x0, x0, #0x9d0
   47234:	blr	x2
   47238:	add	x2, x23, x0
   4723c:	ldr	x25, [x23, x0]
   47240:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47244:	ldr	x3, [x0, #2544]
   47248:	add	x0, x0, #0x9f0
   4724c:	blr	x3
   47250:	str	x4, [x2]
   47254:	ldr	x26, [x23, x0]
   47258:	str	x1, [x23, x0]
   4725c:	mov	x0, x24
   47260:	bl	bf90 <mpfr_mpz_init@plt>
   47264:	mov	x1, x20
   47268:	mov	x0, x24
   4726c:	bl	cac0 <mpfr_get_z_2exp@plt>
   47270:	ldr	w27, [x20, #8]
   47274:	mov	x20, x0
   47278:	tbz	w27, #31, 47288 <mpfr_rootn_ui@@Base+0xf0>
   4727c:	ldr	w0, [sp, #116]
   47280:	neg	w0, w0
   47284:	str	w0, [sp, #116]
   47288:	sdiv	x28, x20, x19
   4728c:	msub	x28, x28, x19, x20
   47290:	mov	x2, x28
   47294:	tbz	x28, #63, 472a0 <mpfr_rootn_ui@@Base+0x108>
   47298:	add	x28, x28, x19
   4729c:	mov	x2, x28
   472a0:	ldr	w1, [sp, #116]
   472a4:	mov	x0, #0xfffffffffffffff8    	// #-8
   472a8:	ldr	x4, [sp, #120]
   472ac:	cmp	w1, #0x0
   472b0:	cneg	w1, w1, lt  // lt = tstop
   472b4:	cmp	w22, #0x0
   472b8:	ldr	x5, [x21]
   472bc:	add	x0, x0, w1, sxtw #3
   472c0:	sbfiz	x1, x1, #6, #32
   472c4:	cinc	x5, x5, eq  // eq = none
   472c8:	ldr	x4, [x4, x0]
   472cc:	mul	x6, x5, x19
   472d0:	clz	x4, x4
   472d4:	sub	x0, x1, x4
   472d8:	add	x0, x0, x28
   472dc:	cmp	x0, x6
   472e0:	b.cs	472fc <mpfr_rootn_ui@@Base+0x164>  // b.hs, b.nlast
   472e4:	sub	x2, x4, x28
   472e8:	sub	x1, x6, x1
   472ec:	add	x2, x2, x1
   472f0:	udiv	x2, x2, x19
   472f4:	madd	x2, x2, x19, x28
   472f8:	mov	x28, x2
   472fc:	mov	x1, x24
   47300:	mov	x0, x24
   47304:	str	x5, [sp, #104]
   47308:	bl	c200 <__gmpz_mul_2exp@plt>
   4730c:	mov	x2, x19
   47310:	mov	x1, x24
   47314:	mov	x0, x24
   47318:	bl	c2e0 <__gmpz_root@plt>
   4731c:	ldr	w1, [sp, #116]
   47320:	mov	x2, #0xfffffffffffffff8    	// #-8
   47324:	ldr	x4, [sp, #120]
   47328:	cmp	w1, #0x0
   4732c:	cneg	w1, w1, lt  // lt = tstop
   47330:	cmp	w0, #0x0
   47334:	ldr	x5, [sp, #104]
   47338:	add	x2, x2, w1, sxtw #3
   4733c:	sbfiz	x1, x1, #6, #32
   47340:	sub	x20, x20, x28
   47344:	cset	w28, eq  // eq = none
   47348:	ldr	x2, [x4, x2]
   4734c:	clz	x2, x2
   47350:	sub	x2, x1, x2
   47354:	sub	x2, x2, x5
   47358:	cmp	x2, #0x0
   4735c:	b.le	47378 <mpfr_rootn_ui@@Base+0x1e0>
   47360:	mov	w28, #0x1                   	// #1
   47364:	cbnz	w0, 474e8 <mpfr_rootn_ui@@Base+0x350>
   47368:	madd	x20, x2, x19, x20
   4736c:	mov	x1, x24
   47370:	mov	x0, x24
   47374:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   47378:	cbz	w28, 473b0 <mpfr_rootn_ui@@Base+0x218>
   4737c:	tbnz	w27, #31, 47518 <mpfr_rootn_ui@@Base+0x380>
   47380:	sub	w0, w22, #0x2
   47384:	tst	w0, #0xfffffffd
   47388:	b.eq	473a0 <mpfr_rootn_ui@@Base+0x208>  // b.none
   4738c:	cbnz	w22, 47530 <mpfr_rootn_ui@@Base+0x398>
   47390:	mov	x0, x24
   47394:	mov	x1, #0x0                   	// #0
   47398:	bl	bfe0 <__gmpz_tstbit@plt>
   4739c:	cbz	w0, 47530 <mpfr_rootn_ui@@Base+0x398>
   473a0:	mov	x1, x24
   473a4:	mov	x0, x24
   473a8:	mov	x2, #0x1                   	// #1
   473ac:	bl	c360 <__gmpz_add_ui@plt>
   473b0:	mov	x1, x24
   473b4:	mov	x0, x21
   473b8:	mov	w2, #0x0                   	// #0
   473bc:	bl	c240 <mpfr_set_z@plt>
   473c0:	sdiv	x19, x20, x19
   473c4:	add	w28, w28, w0
   473c8:	ldr	x0, [x21, #16]
   473cc:	add	x19, x0, x19
   473d0:	str	x19, [x21, #16]
   473d4:	tbnz	w27, #31, 47560 <mpfr_rootn_ui@@Base+0x3c8>
   473d8:	mov	x0, x24
   473dc:	bl	c170 <mpfr_mpz_clear@plt>
   473e0:	ldr	x1, [x21, #16]
   473e4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   473e8:	ldr	x2, [x0, #2576]
   473ec:	add	x0, x0, #0xa10
   473f0:	blr	x2
   473f4:	ldr	w2, [sp, #100]
   473f8:	str	w2, [x23, x0]
   473fc:	add	x2, x23, x0
   47400:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47404:	ldr	x3, [x0, #2512]
   47408:	add	x0, x0, #0x9d0
   4740c:	blr	x3
   47410:	str	x25, [x23, x0]
   47414:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47418:	ldr	x3, [x0, #2544]
   4741c:	add	x0, x0, #0x9f0
   47420:	blr	x3
   47424:	str	x26, [x23, x0]
   47428:	cmp	x26, x1
   4742c:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   47430:	b.le	47498 <mpfr_rootn_ui@@Base+0x300>
   47434:	mov	w2, w22
   47438:	mov	w1, w28
   4743c:	mov	x0, x21
   47440:	bl	cb30 <mpfr_check_range@plt>
   47444:	mov	w28, w0
   47448:	mov	w0, w28
   4744c:	ldp	x19, x20, [sp, #16]
   47450:	ldp	x21, x22, [sp, #32]
   47454:	ldp	x23, x24, [sp, #48]
   47458:	ldp	x25, x26, [sp, #64]
   4745c:	ldp	x27, x28, [sp, #80]
   47460:	ldp	x29, x30, [sp], #128
   47464:	ret
   47468:	mov	w3, w22
   4746c:	mov	x2, x19
   47470:	mov	x1, x20
   47474:	mov	x0, x21
   47478:	bl	46da0 <mpfr_const_catalan@@Base+0x38>
   4747c:	mov	w28, w0
   47480:	mov	w0, w28
   47484:	ldp	x19, x20, [sp, #16]
   47488:	ldp	x21, x22, [sp, #32]
   4748c:	ldp	x27, x28, [sp, #80]
   47490:	ldp	x29, x30, [sp], #128
   47494:	ret
   47498:	cbz	w28, 474c8 <mpfr_rootn_ui@@Base+0x330>
   4749c:	ldr	w0, [sp, #100]
   474a0:	ldp	x25, x26, [sp, #64]
   474a4:	orr	w24, w0, #0x8
   474a8:	str	w24, [x2]
   474ac:	mov	w0, w28
   474b0:	ldp	x19, x20, [sp, #16]
   474b4:	ldp	x21, x22, [sp, #32]
   474b8:	ldp	x23, x24, [sp, #48]
   474bc:	ldp	x27, x28, [sp, #80]
   474c0:	ldp	x29, x30, [sp], #128
   474c4:	ret
   474c8:	mov	w0, w28
   474cc:	ldp	x19, x20, [sp, #16]
   474d0:	ldp	x21, x22, [sp, #32]
   474d4:	ldp	x23, x24, [sp, #48]
   474d8:	ldp	x25, x26, [sp, #64]
   474dc:	ldp	x27, x28, [sp, #80]
   474e0:	ldp	x29, x30, [sp], #128
   474e4:	ret
   474e8:	mov	x0, x24
   474ec:	mov	x1, #0x0                   	// #0
   474f0:	str	x2, [sp, #104]
   474f4:	bl	ba90 <__gmpz_scan1@plt>
   474f8:	ldr	x2, [sp, #104]
   474fc:	mov	x1, x24
   47500:	cmp	x0, x2
   47504:	mov	x0, x24
   47508:	madd	x20, x2, x19, x20
   4750c:	cset	w28, lt  // lt = tstop
   47510:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   47514:	b	47378 <mpfr_rootn_ui@@Base+0x1e0>
   47518:	cmp	w22, #0x2
   4751c:	b.eq	47538 <mpfr_rootn_ui@@Base+0x3a0>  // b.none
   47520:	cmp	w22, #0x3
   47524:	b.ne	47380 <mpfr_rootn_ui@@Base+0x1e8>  // b.any
   47528:	mov	w22, #0x2                   	// #2
   4752c:	b	473a0 <mpfr_rootn_ui@@Base+0x208>
   47530:	mov	w28, #0xffffffff            	// #-1
   47534:	b	473b0 <mpfr_rootn_ui@@Base+0x218>
   47538:	mov	x1, x24
   4753c:	mov	x0, x21
   47540:	mov	w2, #0x0                   	// #0
   47544:	bl	c240 <mpfr_set_z@plt>
   47548:	sdiv	x19, x20, x19
   4754c:	sub	w28, w0, #0x1
   47550:	ldr	x20, [x21, #16]
   47554:	mov	w22, #0x3                   	// #3
   47558:	add	x19, x20, x19
   4755c:	str	x19, [x21, #16]
   47560:	ldr	w0, [x21, #8]
   47564:	neg	w28, w28
   47568:	neg	w0, w0
   4756c:	str	w0, [x21, #8]
   47570:	b	473d8 <mpfr_rootn_ui@@Base+0x240>
   47574:	ldr	w3, [x20, #8]
   47578:	mov	w2, w22
   4757c:	mov	x1, x20
   47580:	mov	x0, x21
   47584:	bl	c6a0 <mpfr_set4@plt>
   47588:	mov	w28, w0
   4758c:	mov	w0, w28
   47590:	ldp	x19, x20, [sp, #16]
   47594:	ldp	x21, x22, [sp, #32]
   47598:	ldp	x27, x28, [sp, #80]
   4759c:	ldp	x29, x30, [sp], #128
   475a0:	ret
   475a4:	cbnz	x2, 47658 <mpfr_rootn_ui@@Base+0x4c0>
   475a8:	mrs	x1, tpidr_el0
   475ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   475b0:	ldr	x2, [x0, #2576]
   475b4:	add	x0, x0, #0xa10
   475b8:	blr	x2
   475bc:	add	x0, x1, x0
   475c0:	mov	x1, #0x2                   	// #2
   475c4:	movk	x1, #0x8000, lsl #48
   475c8:	str	x1, [x21, #16]
   475cc:	mov	w28, #0x0                   	// #0
   475d0:	ldr	w1, [x0]
   475d4:	ldp	x19, x20, [sp, #16]
   475d8:	orr	w1, w1, #0x4
   475dc:	str	w1, [x0]
   475e0:	mov	w0, w28
   475e4:	ldp	x21, x22, [sp, #32]
   475e8:	ldp	x27, x28, [sp, #80]
   475ec:	ldp	x29, x30, [sp], #128
   475f0:	ret
   475f4:	mov	x2, #0x2                   	// #2
   475f8:	movk	x2, #0x8000, lsl #48
   475fc:	cmp	x0, x2
   47600:	b.eq	475a8 <mpfr_rootn_ui@@Base+0x410>  // b.none
   47604:	cmp	x0, x1
   47608:	b.ne	47634 <mpfr_rootn_ui@@Base+0x49c>  // b.any
   4760c:	ldr	w0, [x20, #8]
   47610:	tbz	w0, #31, 47618 <mpfr_rootn_ui@@Base+0x480>
   47614:	tbz	w19, #0, 475a8 <mpfr_rootn_ui@@Base+0x410>
   47618:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4761c:	mov	w28, #0x0                   	// #0
   47620:	str	w0, [x21, #8]
   47624:	str	x1, [x21, #16]
   47628:	b	47480 <mpfr_rootn_ui@@Base+0x2e8>
   4762c:	tbnz	w2, #0, 471dc <mpfr_rootn_ui@@Base+0x44>
   47630:	b	475a8 <mpfr_rootn_ui@@Base+0x410>
   47634:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   47638:	str	x0, [x21, #16]
   4763c:	ldr	w0, [x20, #8]
   47640:	cmp	w0, #0x0
   47644:	b.le	4766c <mpfr_rootn_ui@@Base+0x4d4>
   47648:	mov	w0, #0x1                   	// #1
   4764c:	mov	w28, #0x0                   	// #0
   47650:	str	w0, [x21, #8]
   47654:	b	47480 <mpfr_rootn_ui@@Base+0x2e8>
   47658:	mov	w2, w3
   4765c:	ldr	w3, [x1, #8]
   47660:	bl	c6a0 <mpfr_set4@plt>
   47664:	mov	w28, w0
   47668:	b	47480 <mpfr_rootn_ui@@Base+0x2e8>
   4766c:	tbz	w19, #0, 47648 <mpfr_rootn_ui@@Base+0x4b0>
   47670:	mov	w0, #0xffffffff            	// #-1
   47674:	mov	w28, #0x0                   	// #0
   47678:	str	w0, [x21, #8]
   4767c:	b	47480 <mpfr_rootn_ui@@Base+0x2e8>

0000000000047680 <mpfr_root@@Base>:
   47680:	cmp	x2, #0x1
   47684:	mov	x6, x0
   47688:	b.ls	476a0 <mpfr_root@@Base+0x20>  // b.plast
   4768c:	ldr	x4, [x1, #16]
   47690:	mov	x7, #0x8000000000000001    	// #-9223372036854775807
   47694:	cmp	x4, x7
   47698:	b.eq	476e8 <mpfr_root@@Base+0x68>  // b.none
   4769c:	b	c6b0 <mpfr_rootn_ui@plt>
   476a0:	cbnz	x2, 476fc <mpfr_root@@Base+0x7c>
   476a4:	mrs	x1, tpidr_el0
   476a8:	stp	x29, x30, [sp, #-16]!
   476ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   476b0:	ldr	x2, [x0, #2576]
   476b4:	add	x0, x0, #0xa10
   476b8:	blr	x2
   476bc:	add	x0, x1, x0
   476c0:	mov	x1, #0x2                   	// #2
   476c4:	mov	x29, sp
   476c8:	movk	x1, #0x8000, lsl #48
   476cc:	str	x1, [x6, #16]
   476d0:	ldr	w1, [x0]
   476d4:	orr	w1, w1, #0x4
   476d8:	str	w1, [x0]
   476dc:	mov	w0, #0x0                   	// #0
   476e0:	ldp	x29, x30, [sp], #16
   476e4:	ret
   476e8:	ldr	w0, [x1, #8]
   476ec:	str	w0, [x6, #8]
   476f0:	mov	w0, #0x0                   	// #0
   476f4:	str	x4, [x6, #16]
   476f8:	ret
   476fc:	mov	w2, w3
   47700:	ldr	w3, [x1, #8]
   47704:	b	c6a0 <mpfr_set4@plt>

0000000000047708 <mpfr_sec@@Base>:
   47708:	stp	x29, x30, [sp, #-144]!
   4770c:	mov	x29, sp
   47710:	stp	x21, x22, [sp, #32]
   47714:	mov	x22, x1
   47718:	mov	w21, w2
   4771c:	stp	x19, x20, [sp, #16]
   47720:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47724:	mov	x20, x0
   47728:	ldr	x2, [x22, #16]
   4772c:	cmp	x2, x1
   47730:	b.le	47a5c <mpfr_sec@@Base+0x354>
   47734:	stp	x25, x26, [sp, #64]
   47738:	mrs	x26, tpidr_el0
   4773c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47740:	ldr	x1, [x0, #2576]
   47744:	add	x0, x0, #0xa10
   47748:	blr	x1
   4774c:	add	x6, x26, x0
   47750:	stp	x23, x24, [sp, #48]
   47754:	ldr	w0, [x26, x0]
   47758:	str	w0, [sp, #100]
   4775c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   47760:	stp	x27, x28, [sp, #80]
   47764:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   47768:	neg	x2, x2, lsl #1
   4776c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47770:	ldr	x4, [x0, #2512]
   47774:	add	x0, x0, #0x9d0
   47778:	blr	x4
   4777c:	add	x28, x26, x0
   47780:	ldr	x25, [x26, x0]
   47784:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47788:	ldr	x4, [x0, #2544]
   4778c:	add	x0, x0, #0x9f0
   47790:	blr	x4
   47794:	add	x24, x26, x0
   47798:	cmp	x2, #0x0
   4779c:	ldr	x23, [x20]
   477a0:	str	x3, [x28]
   477a4:	ldr	x27, [x26, x0]
   477a8:	str	x1, [x24]
   477ac:	b.le	477bc <mpfr_sec@@Base+0xb4>
   477b0:	add	x0, x23, #0x1
   477b4:	cmp	x2, x0
   477b8:	b.hi	4792c <mpfr_sec@@Base+0x224>  // b.pmore
   477bc:	cmp	x23, #0x1
   477c0:	b.eq	47a84 <mpfr_sec@@Base+0x37c>  // b.none
   477c4:	b.le	47ae4 <mpfr_sec@@Base+0x3dc>
   477c8:	sub	x0, x23, #0x1
   477cc:	mov	w19, #0x40                  	// #64
   477d0:	clz	x0, x0
   477d4:	sub	w19, w19, w0
   477d8:	add	x19, x23, w19, sxtw
   477dc:	mov	x0, #0x40                  	// #64
   477e0:	add	x19, x19, #0x3
   477e4:	add	x28, sp, #0x70
   477e8:	mov	x1, x19
   477ec:	str	x0, [sp, #104]
   477f0:	mov	x0, x28
   477f4:	bl	ca80 <mpfr_init2@plt>
   477f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   477fc:	ldr	x1, [x0, #2576]
   47800:	add	x0, x0, #0xa10
   47804:	blr	x1
   47808:	add	x24, x26, x0
   4780c:	mov	x1, x22
   47810:	mov	w2, #0x1                   	// #1
   47814:	str	wzr, [x26, x0]
   47818:	mov	x0, x28
   4781c:	bl	c430 <mpfr_cos@plt>
   47820:	ldr	w0, [x24]
   47824:	tbnz	w0, #1, 479e8 <mpfr_sec@@Base+0x2e0>
   47828:	mov	x1, #0x1                   	// #1
   4782c:	mov	x2, x28
   47830:	mov	x0, x28
   47834:	mov	w3, #0x0                   	// #0
   47838:	bl	c2f0 <mpfr_ui_div@plt>
   4783c:	ldr	x0, [sp, #128]
   47840:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47844:	cmp	x0, x1
   47848:	b.le	479b0 <mpfr_sec@@Base+0x2a8>
   4784c:	ldr	x1, [sp, #112]
   47850:	cmp	w21, #0x0
   47854:	ldr	x0, [sp, #136]
   47858:	sub	x1, x1, #0x1
   4785c:	cinc	x3, x23, eq  // eq = none
   47860:	sub	x2, x19, #0x2
   47864:	asr	x1, x1, #6
   47868:	add	x1, x1, #0x1
   4786c:	bl	c370 <mpfr_round_p@plt>
   47870:	cbz	w0, 479b0 <mpfr_sec@@Base+0x2a8>
   47874:	ldr	w3, [sp, #120]
   47878:	mov	w2, w21
   4787c:	mov	x1, x28
   47880:	mov	x0, x20
   47884:	bl	c6a0 <mpfr_set4@plt>
   47888:	mov	w19, w0
   4788c:	mov	x0, x28
   47890:	bl	c070 <mpfr_clear@plt>
   47894:	ldr	w0, [sp, #100]
   47898:	ldr	x1, [x20, #16]
   4789c:	str	w0, [x24]
   478a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   478a4:	ldr	x2, [x0, #2512]
   478a8:	add	x0, x0, #0x9d0
   478ac:	blr	x2
   478b0:	str	x25, [x26, x0]
   478b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   478b8:	ldr	x2, [x0, #2544]
   478bc:	add	x0, x0, #0x9f0
   478c0:	blr	x2
   478c4:	str	x27, [x26, x0]
   478c8:	cmp	x27, x1
   478cc:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   478d0:	b.le	47908 <mpfr_sec@@Base+0x200>
   478d4:	mov	w1, w19
   478d8:	mov	w2, w21
   478dc:	mov	x0, x20
   478e0:	bl	cb30 <mpfr_check_range@plt>
   478e4:	ldp	x23, x24, [sp, #48]
   478e8:	mov	w19, w0
   478ec:	ldp	x25, x26, [sp, #64]
   478f0:	ldp	x27, x28, [sp, #80]
   478f4:	mov	w0, w19
   478f8:	ldp	x19, x20, [sp, #16]
   478fc:	ldp	x21, x22, [sp, #32]
   47900:	ldp	x29, x30, [sp], #144
   47904:	ret
   47908:	cbnz	w19, 47974 <mpfr_sec@@Base+0x26c>
   4790c:	mov	w0, w19
   47910:	ldp	x19, x20, [sp, #16]
   47914:	ldp	x21, x22, [sp, #32]
   47918:	ldp	x23, x24, [sp, #48]
   4791c:	ldp	x25, x26, [sp, #64]
   47920:	ldp	x27, x28, [sp, #80]
   47924:	ldp	x29, x30, [sp], #144
   47928:	ret
   4792c:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   47930:	mov	w4, w21
   47934:	mov	x0, x20
   47938:	mov	w3, #0x1                   	// #1
   4793c:	ldr	x1, [x1, #3928]
   47940:	str	x6, [sp, #104]
   47944:	bl	c540 <mpfr_round_near_x@plt>
   47948:	mov	w19, w0
   4794c:	ldr	x6, [sp, #104]
   47950:	cbz	w0, 47ac4 <mpfr_sec@@Base+0x3bc>
   47954:	ldr	x0, [x20, #16]
   47958:	str	x27, [x24]
   4795c:	ldr	w1, [sp, #100]
   47960:	str	w1, [x6]
   47964:	cmp	x27, x0
   47968:	str	x25, [x28]
   4796c:	ccmp	x25, x0, #0x0, ge  // ge = tcont
   47970:	b.gt	478d4 <mpfr_sec@@Base+0x1cc>
   47974:	ldr	w0, [sp, #100]
   47978:	ldp	x23, x24, [sp, #48]
   4797c:	orr	w25, w0, #0x8
   47980:	ldp	x27, x28, [sp, #80]
   47984:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47988:	ldr	x1, [x0, #2576]
   4798c:	add	x0, x0, #0xa10
   47990:	blr	x1
   47994:	str	w25, [x26, x0]
   47998:	mov	w0, w19
   4799c:	ldp	x19, x20, [sp, #16]
   479a0:	ldp	x21, x22, [sp, #32]
   479a4:	ldp	x25, x26, [sp, #64]
   479a8:	ldp	x29, x30, [sp], #144
   479ac:	ret
   479b0:	ldr	x1, [sp, #104]
   479b4:	mov	x0, #0xfffffffffffffeff    	// #-257
   479b8:	movk	x0, #0x7fff, lsl #48
   479bc:	sub	x0, x0, x19
   479c0:	cmp	x0, x1
   479c4:	b.lt	47acc <mpfr_sec@@Base+0x3c4>  // b.tstop
   479c8:	add	x19, x19, x1
   479cc:	mov	x0, x28
   479d0:	mov	x1, x19
   479d4:	add	x2, x19, x19, lsr #63
   479d8:	asr	x2, x2, #1
   479dc:	str	x2, [sp, #104]
   479e0:	bl	bed0 <mpfr_set_prec@plt>
   479e4:	b	477f8 <mpfr_sec@@Base+0xf0>
   479e8:	ldr	w19, [sp, #120]
   479ec:	mov	x0, x28
   479f0:	bl	c070 <mpfr_clear@plt>
   479f4:	ldr	w0, [sp, #100]
   479f8:	mov	w2, w19
   479fc:	str	w0, [x24]
   47a00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47a04:	ldr	x1, [x0, #2512]
   47a08:	add	x0, x0, #0x9d0
   47a0c:	blr	x1
   47a10:	str	x25, [x26, x0]
   47a14:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47a18:	ldr	x1, [x0, #2544]
   47a1c:	add	x0, x0, #0x9f0
   47a20:	blr	x1
   47a24:	str	x27, [x26, x0]
   47a28:	cmp	w21, #0x0
   47a2c:	mov	x0, x20
   47a30:	csinc	w1, w21, wzr, ne  // ne = any
   47a34:	bl	c3c0 <mpfr_underflow@plt>
   47a38:	mov	w19, w0
   47a3c:	mov	w0, w19
   47a40:	ldp	x19, x20, [sp, #16]
   47a44:	ldp	x21, x22, [sp, #32]
   47a48:	ldp	x23, x24, [sp, #48]
   47a4c:	ldp	x25, x26, [sp, #64]
   47a50:	ldp	x27, x28, [sp, #80]
   47a54:	ldp	x29, x30, [sp], #144
   47a58:	ret
   47a5c:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   47a60:	add	x2, x2, x1
   47a64:	cmp	x2, #0x1
   47a68:	b.ls	47a8c <mpfr_sec@@Base+0x384>  // b.plast
   47a6c:	mov	w3, w21
   47a70:	mov	x2, #0x0                   	// #0
   47a74:	mov	x1, #0x1                   	// #1
   47a78:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   47a7c:	mov	w19, w0
   47a80:	b	478f4 <mpfr_sec@@Base+0x1ec>
   47a84:	mov	x19, x23
   47a88:	b	477dc <mpfr_sec@@Base+0xd4>
   47a8c:	mrs	x1, tpidr_el0
   47a90:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47a94:	ldr	x2, [x0, #2576]
   47a98:	add	x0, x0, #0xa10
   47a9c:	blr	x2
   47aa0:	add	x0, x1, x0
   47aa4:	mov	x1, #0x2                   	// #2
   47aa8:	movk	x1, #0x8000, lsl #48
   47aac:	str	x1, [x20, #16]
   47ab0:	mov	w19, #0x0                   	// #0
   47ab4:	ldr	w1, [x0]
   47ab8:	orr	w1, w1, #0x4
   47abc:	str	w1, [x0]
   47ac0:	b	478f4 <mpfr_sec@@Base+0x1ec>
   47ac4:	ldr	x23, [x20]
   47ac8:	b	477bc <mpfr_sec@@Base+0xb4>
   47acc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   47ad0:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   47ad4:	add	x2, x2, #0x218
   47ad8:	add	x0, x0, #0xe0
   47adc:	mov	w1, #0x5f                  	// #95
   47ae0:	bl	cb40 <mpfr_assert_fail@plt>
   47ae4:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   47ae8:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   47aec:	add	x2, x2, #0x1a8
   47af0:	add	x0, x0, #0xe0
   47af4:	mov	w1, #0x43                  	// #67
   47af8:	bl	cb40 <mpfr_assert_fail@plt>
   47afc:	nop

0000000000047b00 <mpfr_csc@@Base>:
   47b00:	stp	x29, x30, [sp, #-144]!
   47b04:	mov	x29, sp
   47b08:	stp	x21, x22, [sp, #32]
   47b0c:	mov	x21, x1
   47b10:	mov	w22, w2
   47b14:	stp	x27, x28, [sp, #80]
   47b18:	mrs	x28, tpidr_el0
   47b1c:	ldr	x2, [x21, #16]
   47b20:	stp	x19, x20, [sp, #16]
   47b24:	mov	x20, x0
   47b28:	stp	x23, x24, [sp, #48]
   47b2c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47b30:	ldr	x1, [x0, #2576]
   47b34:	add	x0, x0, #0xa10
   47b38:	blr	x1
   47b3c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47b40:	ldr	w24, [x28, x0]
   47b44:	add	x3, x28, x0
   47b48:	cmp	x2, x1
   47b4c:	b.le	47e04 <mpfr_csc@@Base+0x304>
   47b50:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47b54:	ldr	x1, [x0, #2512]
   47b58:	add	x0, x0, #0x9d0
   47b5c:	blr	x1
   47b60:	add	x5, x28, x0
   47b64:	ldr	x23, [x20]
   47b68:	stp	x25, x26, [sp, #64]
   47b6c:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   47b70:	ldr	x1, [x21]
   47b74:	ldr	x26, [x28, x0]
   47b78:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47b7c:	ldr	x3, [x0, #2544]
   47b80:	add	x0, x0, #0x9f0
   47b84:	blr	x3
   47b88:	cmp	x1, x23
   47b8c:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   47b90:	csel	x1, x1, x23, ge  // ge = tcont
   47b94:	str	x6, [x5]
   47b98:	ldr	x25, [x28, x0]
   47b9c:	str	x3, [x28, x0]
   47ba0:	neg	x1, x1, lsl #1
   47ba4:	cmp	x2, x1
   47ba8:	b.le	47d5c <mpfr_csc@@Base+0x25c>
   47bac:	cmp	x23, #0x1
   47bb0:	b.eq	47e94 <mpfr_csc@@Base+0x394>  // b.none
   47bb4:	b.le	47f08 <mpfr_csc@@Base+0x408>
   47bb8:	sub	x19, x23, #0x1
   47bbc:	mov	w0, #0x40                  	// #64
   47bc0:	clz	x19, x19
   47bc4:	sub	w19, w0, w19
   47bc8:	add	x19, x23, w19, sxtw
   47bcc:	mov	x0, #0x40                  	// #64
   47bd0:	add	x19, x19, #0x3
   47bd4:	add	x27, sp, #0x70
   47bd8:	mov	x1, x19
   47bdc:	str	x0, [sp, #104]
   47be0:	mov	x0, x27
   47be4:	bl	ca80 <mpfr_init2@plt>
   47be8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47bec:	ldr	x1, [x0, #2576]
   47bf0:	add	x0, x0, #0xa10
   47bf4:	blr	x1
   47bf8:	add	x1, x28, x0
   47bfc:	mov	w2, #0x1                   	// #1
   47c00:	str	wzr, [x28, x0]
   47c04:	mov	x0, x27
   47c08:	str	x1, [sp, #96]
   47c0c:	mov	x1, x21
   47c10:	bl	c450 <mpfr_sin@plt>
   47c14:	ldr	x1, [sp, #96]
   47c18:	ldr	w0, [x1]
   47c1c:	tbnz	w0, #1, 47e38 <mpfr_csc@@Base+0x338>
   47c20:	mov	x1, #0x1                   	// #1
   47c24:	mov	x2, x27
   47c28:	mov	x0, x27
   47c2c:	mov	w3, #0x0                   	// #0
   47c30:	bl	c2f0 <mpfr_ui_div@plt>
   47c34:	ldr	x0, [sp, #128]
   47c38:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47c3c:	cmp	x0, x1
   47c40:	b.le	47dcc <mpfr_csc@@Base+0x2cc>
   47c44:	ldr	x1, [sp, #112]
   47c48:	cmp	w22, #0x0
   47c4c:	ldr	x0, [sp, #136]
   47c50:	sub	x1, x1, #0x1
   47c54:	cinc	x3, x23, eq  // eq = none
   47c58:	sub	x2, x19, #0x2
   47c5c:	asr	x1, x1, #6
   47c60:	add	x1, x1, #0x1
   47c64:	bl	c370 <mpfr_round_p@plt>
   47c68:	cbz	w0, 47dcc <mpfr_csc@@Base+0x2cc>
   47c6c:	ldr	w3, [sp, #120]
   47c70:	mov	w2, w22
   47c74:	mov	x1, x27
   47c78:	mov	x0, x20
   47c7c:	bl	c6a0 <mpfr_set4@plt>
   47c80:	mov	w19, w0
   47c84:	mov	x0, x27
   47c88:	bl	c070 <mpfr_clear@plt>
   47c8c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47c90:	ldr	x1, [x0, #2576]
   47c94:	add	x0, x0, #0xa10
   47c98:	blr	x1
   47c9c:	str	w24, [x28, x0]
   47ca0:	ldr	x1, [x20, #16]
   47ca4:	add	x2, x28, x0
   47ca8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47cac:	ldr	x3, [x0, #2512]
   47cb0:	add	x0, x0, #0x9d0
   47cb4:	blr	x3
   47cb8:	str	x26, [x28, x0]
   47cbc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47cc0:	ldr	x3, [x0, #2544]
   47cc4:	add	x0, x0, #0x9f0
   47cc8:	blr	x3
   47ccc:	str	x25, [x28, x0]
   47cd0:	cmp	x26, x1
   47cd4:	ccmp	x25, x1, #0x1, le
   47cd8:	b.ge	47d10 <mpfr_csc@@Base+0x210>  // b.tcont
   47cdc:	mov	w1, w19
   47ce0:	mov	w2, w22
   47ce4:	mov	x0, x20
   47ce8:	bl	cb30 <mpfr_check_range@plt>
   47cec:	ldp	x25, x26, [sp, #64]
   47cf0:	mov	w19, w0
   47cf4:	mov	w0, w19
   47cf8:	ldp	x19, x20, [sp, #16]
   47cfc:	ldp	x21, x22, [sp, #32]
   47d00:	ldp	x23, x24, [sp, #48]
   47d04:	ldp	x27, x28, [sp, #80]
   47d08:	ldp	x29, x30, [sp], #144
   47d0c:	ret
   47d10:	cbz	w19, 47d3c <mpfr_csc@@Base+0x23c>
   47d14:	orr	w24, w24, #0x8
   47d18:	mov	w0, w19
   47d1c:	ldp	x25, x26, [sp, #64]
   47d20:	str	w24, [x2]
   47d24:	ldp	x19, x20, [sp, #16]
   47d28:	ldp	x21, x22, [sp, #32]
   47d2c:	ldp	x23, x24, [sp, #48]
   47d30:	ldp	x27, x28, [sp, #80]
   47d34:	ldp	x29, x30, [sp], #144
   47d38:	ret
   47d3c:	mov	w0, w19
   47d40:	ldp	x19, x20, [sp, #16]
   47d44:	ldp	x21, x22, [sp, #32]
   47d48:	ldp	x23, x24, [sp, #48]
   47d4c:	ldp	x25, x26, [sp, #64]
   47d50:	ldp	x27, x28, [sp, #80]
   47d54:	ldp	x29, x30, [sp], #144
   47d58:	ret
   47d5c:	mov	x2, x21
   47d60:	mov	w3, w22
   47d64:	ldr	w21, [x21, #8]
   47d68:	mov	x0, x20
   47d6c:	mov	x1, #0x1                   	// #1
   47d70:	bl	c2f0 <mpfr_ui_div@plt>
   47d74:	mov	w19, w0
   47d78:	cbnz	w0, 47db0 <mpfr_csc@@Base+0x2b0>
   47d7c:	cmp	w22, #0x4
   47d80:	b.eq	47ebc <mpfr_csc@@Base+0x3bc>  // b.none
   47d84:	cmp	w22, #0x2
   47d88:	b.eq	47e9c <mpfr_csc@@Base+0x39c>  // b.none
   47d8c:	cmp	w22, #0x3
   47d90:	neg	w19, w21
   47d94:	b.ne	47db0 <mpfr_csc@@Base+0x2b0>  // b.any
   47d98:	mov	w19, #0xffffffff            	// #-1
   47d9c:	mov	w22, #0x3                   	// #3
   47da0:	tbz	w21, #31, 47db0 <mpfr_csc@@Base+0x2b0>
   47da4:	mov	x0, x20
   47da8:	bl	bdd0 <mpfr_nextbelow@plt>
   47dac:	nop
   47db0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47db4:	ldr	x1, [x0, #2576]
   47db8:	add	x0, x0, #0xa10
   47dbc:	blr	x1
   47dc0:	ldr	w0, [x28, x0]
   47dc4:	orr	w24, w24, w0
   47dc8:	b	47c8c <mpfr_csc@@Base+0x18c>
   47dcc:	ldr	x1, [sp, #104]
   47dd0:	mov	x0, #0xfffffffffffffeff    	// #-257
   47dd4:	movk	x0, #0x7fff, lsl #48
   47dd8:	sub	x0, x0, x19
   47ddc:	cmp	x0, x1
   47de0:	b.lt	47ef0 <mpfr_csc@@Base+0x3f0>  // b.tstop
   47de4:	add	x19, x19, x1
   47de8:	mov	x0, x27
   47dec:	mov	x1, x19
   47df0:	add	x2, x19, x19, lsr #63
   47df4:	asr	x2, x2, #1
   47df8:	str	x2, [sp, #104]
   47dfc:	bl	bed0 <mpfr_set_prec@plt>
   47e00:	b	47be8 <mpfr_csc@@Base+0xe8>
   47e04:	mov	x0, #0x2                   	// #2
   47e08:	movk	x0, #0x8000, lsl #48
   47e0c:	cmp	x2, x0
   47e10:	b.eq	47edc <mpfr_csc@@Base+0x3dc>  // b.none
   47e14:	cmp	x2, x1
   47e18:	b.eq	47ec8 <mpfr_csc@@Base+0x3c8>  // b.none
   47e1c:	ldr	w0, [x21, #8]
   47e20:	orr	w24, w24, #0x20
   47e24:	mov	w19, #0x0                   	// #0
   47e28:	str	w24, [x3]
   47e2c:	str	w0, [x20, #8]
   47e30:	str	x1, [x20, #16]
   47e34:	b	47cf4 <mpfr_csc@@Base+0x1f4>
   47e38:	ldr	w19, [sp, #120]
   47e3c:	mov	x0, x27
   47e40:	bl	c070 <mpfr_clear@plt>
   47e44:	ldr	x0, [sp, #96]
   47e48:	mov	w2, w19
   47e4c:	str	w24, [x0]
   47e50:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47e54:	ldr	x1, [x0, #2512]
   47e58:	add	x0, x0, #0x9d0
   47e5c:	blr	x1
   47e60:	str	x26, [x28, x0]
   47e64:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47e68:	ldr	x1, [x0, #2544]
   47e6c:	add	x0, x0, #0x9f0
   47e70:	blr	x1
   47e74:	cmp	w22, #0x0
   47e78:	str	x25, [x28, x0]
   47e7c:	csinc	w1, w22, wzr, ne  // ne = any
   47e80:	mov	x0, x20
   47e84:	bl	c3c0 <mpfr_underflow@plt>
   47e88:	mov	w19, w0
   47e8c:	ldp	x25, x26, [sp, #64]
   47e90:	b	47cf4 <mpfr_csc@@Base+0x1f4>
   47e94:	mov	x19, x23
   47e98:	b	47bcc <mpfr_csc@@Base+0xcc>
   47e9c:	cmp	w21, #0x0
   47ea0:	mov	w19, #0x1                   	// #1
   47ea4:	b.le	47db0 <mpfr_csc@@Base+0x2b0>
   47ea8:	mov	x0, x20
   47eac:	mov	w19, #0x1                   	// #1
   47eb0:	mov	w22, #0x2                   	// #2
   47eb4:	bl	c120 <mpfr_nextabove@plt>
   47eb8:	b	47db0 <mpfr_csc@@Base+0x2b0>
   47ebc:	cmp	w21, #0x0
   47ec0:	b.gt	47ea8 <mpfr_csc@@Base+0x3a8>
   47ec4:	b	47d98 <mpfr_csc@@Base+0x298>
   47ec8:	orr	w24, w24, #0x4
   47ecc:	mov	w19, #0x0                   	// #0
   47ed0:	str	w24, [x3]
   47ed4:	str	x0, [x20, #16]
   47ed8:	b	47cf4 <mpfr_csc@@Base+0x1f4>
   47edc:	orr	w24, w24, #0x4
   47ee0:	mov	w19, #0x0                   	// #0
   47ee4:	str	w24, [x3]
   47ee8:	str	x2, [x20, #16]
   47eec:	b	47cf4 <mpfr_csc@@Base+0x1f4>
   47ef0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   47ef4:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   47ef8:	add	x2, x2, #0x218
   47efc:	add	x0, x0, #0xe0
   47f00:	mov	w1, #0x5f                  	// #95
   47f04:	bl	cb40 <mpfr_assert_fail@plt>
   47f08:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   47f0c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   47f10:	add	x2, x2, #0x1a8
   47f14:	add	x0, x0, #0xe0
   47f18:	mov	w1, #0x43                  	// #67
   47f1c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000047f20 <mpfr_cot@@Base>:
   47f20:	stp	x29, x30, [sp, #-144]!
   47f24:	mov	x29, sp
   47f28:	stp	x25, x26, [sp, #64]
   47f2c:	mov	x26, x1
   47f30:	stp	x21, x22, [sp, #32]
   47f34:	mov	w21, w2
   47f38:	stp	x27, x28, [sp, #80]
   47f3c:	mrs	x28, tpidr_el0
   47f40:	ldr	x2, [x26, #16]
   47f44:	stp	x19, x20, [sp, #16]
   47f48:	mov	x19, x0
   47f4c:	stp	x23, x24, [sp, #48]
   47f50:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47f54:	ldr	x1, [x0, #2576]
   47f58:	add	x0, x0, #0xa10
   47f5c:	blr	x1
   47f60:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47f64:	ldr	w23, [x28, x0]
   47f68:	add	x3, x28, x0
   47f6c:	cmp	x2, x1
   47f70:	b.le	48254 <mpfr_cot@@Base+0x334>
   47f74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47f78:	ldr	x1, [x0, #2512]
   47f7c:	add	x0, x0, #0x9d0
   47f80:	blr	x1
   47f84:	add	x6, x28, x0
   47f88:	ldr	x22, [x19]
   47f8c:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   47f90:	ldr	x1, [x26]
   47f94:	ldr	x24, [x28, x0]
   47f98:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   47f9c:	ldr	x3, [x0, #2544]
   47fa0:	add	x0, x0, #0x9f0
   47fa4:	blr	x3
   47fa8:	add	x20, x28, x0
   47fac:	cmp	x1, x22
   47fb0:	csel	x1, x1, x22, ge  // ge = tcont
   47fb4:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   47fb8:	str	x7, [x6]
   47fbc:	ldr	x25, [x28, x0]
   47fc0:	str	x3, [x20]
   47fc4:	neg	x1, x1, lsl #1
   47fc8:	cmp	x2, x1
   47fcc:	b.lt	48160 <mpfr_cot@@Base+0x240>  // b.tstop
   47fd0:	cmp	x22, #0x1
   47fd4:	b.eq	482e0 <mpfr_cot@@Base+0x3c0>  // b.none
   47fd8:	b.le	48380 <mpfr_cot@@Base+0x460>
   47fdc:	sub	x20, x22, #0x1
   47fe0:	mov	w0, #0x40                  	// #64
   47fe4:	clz	x20, x20
   47fe8:	sub	w20, w0, w20
   47fec:	add	x20, x22, w20, sxtw
   47ff0:	mov	x0, #0x40                  	// #64
   47ff4:	add	x20, x20, #0x3
   47ff8:	add	x27, sp, #0x70
   47ffc:	mov	x1, x20
   48000:	str	x0, [sp, #104]
   48004:	mov	x0, x27
   48008:	bl	ca80 <mpfr_init2@plt>
   4800c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   48010:	ldr	x1, [x0, #2576]
   48014:	add	x0, x0, #0xa10
   48018:	blr	x1
   4801c:	add	x1, x28, x0
   48020:	mov	w2, #0x1                   	// #1
   48024:	str	wzr, [x28, x0]
   48028:	mov	x0, x27
   4802c:	str	x1, [sp, #96]
   48030:	mov	x1, x26
   48034:	bl	bbe0 <mpfr_tan@plt>
   48038:	ldr	x1, [sp, #96]
   4803c:	ldr	w0, [x1]
   48040:	tbnz	w0, #1, 48288 <mpfr_cot@@Base+0x368>
   48044:	mov	x1, #0x1                   	// #1
   48048:	mov	x2, x27
   4804c:	mov	x0, x27
   48050:	mov	w3, #0x0                   	// #0
   48054:	bl	c2f0 <mpfr_ui_div@plt>
   48058:	ldr	x0, [sp, #128]
   4805c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   48060:	cmp	x0, x1
   48064:	b.le	481f4 <mpfr_cot@@Base+0x2d4>
   48068:	ldr	x1, [sp, #112]
   4806c:	cmp	w21, #0x0
   48070:	ldr	x0, [sp, #136]
   48074:	sub	x1, x1, #0x1
   48078:	cinc	x3, x22, eq  // eq = none
   4807c:	sub	x2, x20, #0x2
   48080:	asr	x1, x1, #6
   48084:	add	x1, x1, #0x1
   48088:	bl	c370 <mpfr_round_p@plt>
   4808c:	cbz	w0, 481f4 <mpfr_cot@@Base+0x2d4>
   48090:	ldr	w3, [sp, #120]
   48094:	mov	w2, w21
   48098:	mov	x1, x27
   4809c:	mov	x0, x19
   480a0:	bl	c6a0 <mpfr_set4@plt>
   480a4:	mov	w20, w0
   480a8:	mov	x0, x27
   480ac:	bl	c070 <mpfr_clear@plt>
   480b0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   480b4:	ldr	x1, [x0, #2576]
   480b8:	add	x0, x0, #0xa10
   480bc:	blr	x1
   480c0:	str	w23, [x28, x0]
   480c4:	ldr	x1, [x19, #16]
   480c8:	add	x2, x28, x0
   480cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   480d0:	ldr	x3, [x0, #2512]
   480d4:	add	x0, x0, #0x9d0
   480d8:	blr	x3
   480dc:	str	x24, [x28, x0]
   480e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   480e4:	ldr	x3, [x0, #2544]
   480e8:	add	x0, x0, #0x9f0
   480ec:	blr	x3
   480f0:	str	x25, [x28, x0]
   480f4:	cmp	x25, x1
   480f8:	ccmp	x24, x1, #0x0, ge  // ge = tcont
   480fc:	b.le	48134 <mpfr_cot@@Base+0x214>
   48100:	mov	w1, w20
   48104:	mov	w2, w21
   48108:	mov	x0, x19
   4810c:	bl	cb30 <mpfr_check_range@plt>
   48110:	mov	w20, w0
   48114:	mov	w0, w20
   48118:	ldp	x19, x20, [sp, #16]
   4811c:	ldp	x21, x22, [sp, #32]
   48120:	ldp	x23, x24, [sp, #48]
   48124:	ldp	x25, x26, [sp, #64]
   48128:	ldp	x27, x28, [sp, #80]
   4812c:	ldp	x29, x30, [sp], #144
   48130:	ret
   48134:	cbz	w20, 48114 <mpfr_cot@@Base+0x1f4>
   48138:	orr	w23, w23, #0x8
   4813c:	str	w23, [x2]
   48140:	mov	w0, w20
   48144:	ldp	x19, x20, [sp, #16]
   48148:	ldp	x21, x22, [sp, #32]
   4814c:	ldp	x23, x24, [sp, #48]
   48150:	ldp	x25, x26, [sp, #64]
   48154:	ldp	x27, x28, [sp, #80]
   48158:	ldp	x29, x30, [sp], #144
   4815c:	ret
   48160:	mov	x0, #0x2                   	// #2
   48164:	ldr	w22, [x26, #8]
   48168:	movk	x0, #0xc000, lsl #48
   4816c:	cmp	x2, x0
   48170:	b.eq	4822c <mpfr_cot@@Base+0x30c>  // b.none
   48174:	mov	x2, x26
   48178:	mov	w3, w21
   4817c:	mov	x0, x19
   48180:	mov	x1, #0x1                   	// #1
   48184:	bl	c2f0 <mpfr_ui_div@plt>
   48188:	mov	w20, w0
   4818c:	cbnz	w0, 481d8 <mpfr_cot@@Base+0x2b8>
   48190:	mov	w26, #0x0                   	// #0
   48194:	cmp	w21, #0x4
   48198:	b.eq	482e8 <mpfr_cot@@Base+0x3c8>  // b.none
   4819c:	cmp	w21, #0x2
   481a0:	b.eq	48304 <mpfr_cot@@Base+0x3e4>  // b.none
   481a4:	cmp	w22, #0x0
   481a8:	ccmp	w21, #0x1, #0x0, lt  // lt = tstop
   481ac:	b.ne	48310 <mpfr_cot@@Base+0x3f0>  // b.any
   481b0:	mov	w21, #0x1                   	// #1
   481b4:	mov	x0, x19
   481b8:	mov	w20, #0x1                   	// #1
   481bc:	bl	c120 <mpfr_nextabove@plt>
   481c0:	cbz	w26, 481d8 <mpfr_cot@@Base+0x2b8>
   481c4:	mov	w3, w21
   481c8:	mov	x1, x19
   481cc:	mov	x0, x19
   481d0:	mov	x2, #0x1                   	// #1
   481d4:	bl	c2c0 <mpfr_mul_2ui@plt>
   481d8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   481dc:	ldr	x1, [x0, #2576]
   481e0:	add	x0, x0, #0xa10
   481e4:	blr	x1
   481e8:	ldr	w0, [x28, x0]
   481ec:	orr	w23, w23, w0
   481f0:	b	480b0 <mpfr_cot@@Base+0x190>
   481f4:	ldr	x1, [sp, #104]
   481f8:	mov	x0, #0xfffffffffffffeff    	// #-257
   481fc:	movk	x0, #0x7fff, lsl #48
   48200:	sub	x0, x0, x20
   48204:	cmp	x0, x1
   48208:	b.lt	48360 <mpfr_cot@@Base+0x440>  // b.tstop
   4820c:	add	x20, x20, x1
   48210:	mov	x0, x27
   48214:	mov	x1, x20
   48218:	add	x2, x20, x20, lsr #63
   4821c:	asr	x2, x2, #1
   48220:	str	x2, [sp, #104]
   48224:	bl	bed0 <mpfr_set_prec@plt>
   48228:	b	4800c <mpfr_cot@@Base+0xec>
   4822c:	mov	x0, x26
   48230:	bl	bf00 <mpfr_powerof2_raw@plt>
   48234:	cbz	w0, 48174 <mpfr_cot@@Base+0x254>
   48238:	ldr	x2, [x20]
   4823c:	sxtw	x1, w22
   48240:	mov	x0, x19
   48244:	mov	w3, #0x0                   	// #0
   48248:	mov	w26, #0x1                   	// #1
   4824c:	bl	ba80 <mpfr_set_si_2exp@plt>
   48250:	b	48194 <mpfr_cot@@Base+0x274>
   48254:	mov	x0, #0x2                   	// #2
   48258:	movk	x0, #0x8000, lsl #48
   4825c:	cmp	x2, x0
   48260:	b.eq	4834c <mpfr_cot@@Base+0x42c>  // b.none
   48264:	cmp	x2, x1
   48268:	b.eq	48338 <mpfr_cot@@Base+0x418>  // b.none
   4826c:	ldr	w0, [x26, #8]
   48270:	orr	w23, w23, #0x20
   48274:	mov	w20, #0x0                   	// #0
   48278:	str	w23, [x3]
   4827c:	str	w0, [x19, #8]
   48280:	str	x1, [x19, #16]
   48284:	b	48114 <mpfr_cot@@Base+0x1f4>
   48288:	ldr	w20, [sp, #120]
   4828c:	mov	x0, x27
   48290:	bl	c070 <mpfr_clear@plt>
   48294:	ldr	x0, [sp, #96]
   48298:	mov	w2, w20
   4829c:	str	w23, [x0]
   482a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   482a4:	ldr	x1, [x0, #2512]
   482a8:	add	x0, x0, #0x9d0
   482ac:	blr	x1
   482b0:	str	x24, [x28, x0]
   482b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   482b8:	ldr	x1, [x0, #2544]
   482bc:	add	x0, x0, #0x9f0
   482c0:	blr	x1
   482c4:	cmp	w21, #0x0
   482c8:	str	x25, [x28, x0]
   482cc:	csinc	w1, w21, wzr, ne  // ne = any
   482d0:	mov	x0, x19
   482d4:	bl	c3c0 <mpfr_underflow@plt>
   482d8:	mov	w20, w0
   482dc:	b	48114 <mpfr_cot@@Base+0x1f4>
   482e0:	mov	x20, x22
   482e4:	b	47ff0 <mpfr_cot@@Base+0xd0>
   482e8:	cmp	w22, #0x0
   482ec:	mov	w21, #0x3                   	// #3
   482f0:	mov	w0, #0x2                   	// #2
   482f4:	mov	w20, #0x1                   	// #1
   482f8:	csel	w21, w21, w0, le
   482fc:	csinv	w20, w20, wzr, gt
   48300:	b	481c0 <mpfr_cot@@Base+0x2a0>
   48304:	mov	w20, #0x1                   	// #1
   48308:	tbz	w22, #31, 481c0 <mpfr_cot@@Base+0x2a0>
   4830c:	b	481b4 <mpfr_cot@@Base+0x294>
   48310:	and	w0, w21, #0xfffffffd
   48314:	mov	w20, w22
   48318:	cmp	w0, #0x1
   4831c:	b.ne	481c0 <mpfr_cot@@Base+0x2a0>  // b.any
   48320:	cmp	w22, #0x0
   48324:	b.le	48378 <mpfr_cot@@Base+0x458>
   48328:	mov	x0, x19
   4832c:	mov	w20, #0xffffffff            	// #-1
   48330:	bl	bdd0 <mpfr_nextbelow@plt>
   48334:	b	481c0 <mpfr_cot@@Base+0x2a0>
   48338:	orr	w23, w23, #0x4
   4833c:	mov	w20, #0x0                   	// #0
   48340:	str	w23, [x3]
   48344:	str	x0, [x19, #16]
   48348:	b	48114 <mpfr_cot@@Base+0x1f4>
   4834c:	orr	w23, w23, #0x4
   48350:	mov	w20, #0x0                   	// #0
   48354:	str	w23, [x3]
   48358:	str	x2, [x19, #16]
   4835c:	b	48114 <mpfr_cot@@Base+0x1f4>
   48360:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   48364:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   48368:	add	x2, x2, #0x218
   4836c:	add	x0, x0, #0xe0
   48370:	mov	w1, #0x5f                  	// #95
   48374:	bl	cb40 <mpfr_assert_fail@plt>
   48378:	mov	w20, #0xffffffff            	// #-1
   4837c:	b	481c0 <mpfr_cot@@Base+0x2a0>
   48380:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   48384:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   48388:	add	x2, x2, #0x1a8
   4838c:	add	x0, x0, #0xe0
   48390:	mov	w1, #0x43                  	// #67
   48394:	bl	cb40 <mpfr_assert_fail@plt>

0000000000048398 <mpfr_eint@@Base>:
   48398:	sub	sp, sp, #0x290
   4839c:	stp	x29, x30, [sp]
   483a0:	mov	x29, sp
   483a4:	stp	x27, x28, [sp, #80]
   483a8:	mov	x27, x1
   483ac:	ldr	x1, [x1, #16]
   483b0:	stp	x19, x20, [sp, #16]
   483b4:	str	x0, [sp, #120]
   483b8:	str	w2, [sp, #168]
   483bc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   483c0:	cmp	x1, x2
   483c4:	b.le	48ee8 <mpfr_eint@@Base+0xb50>
   483c8:	mrs	x3, tpidr_el0
   483cc:	mov	x5, x0
   483d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   483d4:	ldr	x2, [x0, #2576]
   483d8:	add	x0, x0, #0xa10
   483dc:	blr	x2
   483e0:	mov	x8, x3
   483e4:	str	x3, [sp, #144]
   483e8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   483ec:	ldr	w0, [x3, x0]
   483f0:	mov	w6, #0x1                   	// #1
   483f4:	str	w0, [sp, #172]
   483f8:	ldr	x20, [x5]
   483fc:	stp	x25, x26, [sp, #64]
   48400:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   48404:	ldr	x4, [x0, #2512]
   48408:	add	x0, x0, #0x9d0
   4840c:	blr	x4
   48410:	add	x3, x3, x0
   48414:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   48418:	ldr	x0, [x8, x0]
   4841c:	str	x0, [sp, #176]
   48420:	ldr	x5, [x27, #24]
   48424:	stp	x1, x5, [sp, #400]
   48428:	ldr	x7, [x27]
   4842c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   48430:	ldr	x5, [x0, #2544]
   48434:	add	x0, x0, #0x9f0
   48438:	blr	x5
   4843c:	str	x4, [x3]
   48440:	cmp	x20, #0x1
   48444:	ldr	x3, [x8, x0]
   48448:	str	x2, [x8, x0]
   4844c:	str	x3, [sp, #184]
   48450:	str	x7, [sp, #384]
   48454:	str	w6, [sp, #392]
   48458:	b.eq	4847c <mpfr_eint@@Base+0xe4>  // b.none
   4845c:	mov	x0, x20
   48460:	b.le	48f3c <mpfr_eint@@Base+0xba4>
   48464:	sub	x0, x0, #0x1
   48468:	mov	w1, #0x40                  	// #64
   4846c:	clz	x0, x0
   48470:	sub	w0, w1, w0
   48474:	lsl	w0, w0, #1
   48478:	add	x20, x20, w0, sxtw
   4847c:	add	x26, sp, #0x140
   48480:	mov	x1, #0x40                  	// #64
   48484:	mov	x0, x26
   48488:	bl	ca80 <mpfr_init2@plt>
   4848c:	add	x0, x20, #0x6
   48490:	add	x25, sp, #0x160
   48494:	mov	x1, #0x40                  	// #64
   48498:	str	x0, [sp, #128]
   4849c:	mov	x0, x25
   484a0:	bl	ca80 <mpfr_init2@plt>
   484a4:	ldr	w0, [x27, #8]
   484a8:	cmp	w0, #0x0
   484ac:	b.gt	48b9c <mpfr_eint@@Base+0x804>
   484b0:	b.eq	484c0 <mpfr_eint@@Base+0x128>  // b.none
   484b4:	ldr	x0, [x27, #16]
   484b8:	cmp	x0, #0x0
   484bc:	b.gt	48e90 <mpfr_eint@@Base+0xaf8>
   484c0:	stp	x21, x22, [sp, #32]
   484c4:	stp	x23, x24, [sp, #48]
   484c8:	str	d8, [sp, #96]
   484cc:	add	x0, sp, #0x180
   484d0:	add	x28, sp, #0x200
   484d4:	str	x0, [sp, #160]
   484d8:	add	x0, x28, #0x10
   484dc:	str	x0, [sp, #216]
   484e0:	add	x0, sp, #0x110
   484e4:	str	x0, [sp, #152]
   484e8:	mov	x0, #0x40                  	// #64
   484ec:	str	x0, [sp, #192]
   484f0:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   484f4:	ldr	x19, [sp, #128]
   484f8:	add	x24, sp, #0x120
   484fc:	ldr	d8, [x0, #2104]
   48500:	mov	x0, x26
   48504:	mov	x1, x19
   48508:	bl	bed0 <mpfr_set_prec@plt>
   4850c:	mov	x1, x19
   48510:	mov	x0, x25
   48514:	bl	bed0 <mpfr_set_prec@plt>
   48518:	ldr	x0, [x27, #16]
   4851c:	cmp	x0, #0x0
   48520:	b.le	48554 <mpfr_eint@@Base+0x1bc>
   48524:	ldr	d0, [sp, #128]
   48528:	scvtf	d1, x0
   4852c:	fmov	d3, #5.000000000000000000e-01
   48530:	ldr	x0, [sp, #160]
   48534:	scvtf	d2, d0
   48538:	fmov	d0, #1.000000000000000000e+00
   4853c:	fmadd	d1, d1, d3, d2
   48540:	fmadd	d0, d1, d8, d0
   48544:	bl	bcf0 <mpfr_cmp_d@plt>
   48548:	cmp	w0, #0x0
   4854c:	b.gt	48cb4 <mpfr_eint@@Base+0x91c>
   48550:	ldr	x0, [x27, #16]
   48554:	ldr	x1, [sp, #320]
   48558:	str	x1, [sp, #136]
   4855c:	neg	x1, x1
   48560:	cmp	x1, x0
   48564:	b.ge	48c98 <mpfr_eint@@Base+0x900>  // b.tcont
   48568:	ldr	x0, [sp, #152]
   4856c:	add	x1, sp, #0x130
   48570:	mov	x19, x1
   48574:	str	x1, [sp, #208]
   48578:	add	x22, sp, #0x100
   4857c:	bl	bf90 <mpfr_mpz_init@plt>
   48580:	mov	x0, x24
   48584:	bl	bf90 <mpfr_mpz_init@plt>
   48588:	mov	x0, x19
   4858c:	bl	bf90 <mpfr_mpz_init@plt>
   48590:	mov	x0, x22
   48594:	bl	bf90 <mpfr_mpz_init@plt>
   48598:	mov	x2, #0x1f                  	// #31
   4859c:	add	x3, x28, #0x18
   485a0:	ldr	x4, [sp, #216]
   485a4:	str	x2, [sp, #416]
   485a8:	stp	x4, x2, [sp, #440]
   485ac:	mov	w1, #0x1                   	// #1
   485b0:	mov	x0, x22
   485b4:	stp	x3, x2, [sp, #472]
   485b8:	add	x2, x28, #0x20
   485bc:	str	w1, [sp, #424]
   485c0:	str	w1, [sp, #456]
   485c4:	str	w1, [sp, #488]
   485c8:	mov	x1, x27
   485cc:	str	x2, [sp, #504]
   485d0:	str	xzr, [sp, #512]
   485d4:	str	x4, [sp, #520]
   485d8:	bl	cac0 <mpfr_get_z_2exp@plt>
   485dc:	mov	x19, x0
   485e0:	ldr	x2, [x27]
   485e4:	ldr	x0, [sp, #136]
   485e8:	cmp	x0, x2
   485ec:	b.lt	48e78 <mpfr_eint@@Base+0xae0>  // b.tstop
   485f0:	mov	x0, x22
   485f4:	mov	x1, #0x0                   	// #0
   485f8:	bl	ba90 <__gmpz_scan1@plt>
   485fc:	mov	x2, x0
   48600:	add	x0, x19, x0
   48604:	mov	x1, x22
   48608:	mov	x3, x0
   4860c:	mov	x0, x22
   48610:	neg	x4, x3
   48614:	str	x4, [sp, #200]
   48618:	str	x3, [sp, #224]
   4861c:	add	x19, sp, #0x1e0
   48620:	add	x23, sp, #0x1a0
   48624:	add	x20, sp, #0x1c0
   48628:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   4862c:	ldr	x21, [sp, #136]
   48630:	mov	x1, #0x1                   	// #1
   48634:	sub	x0, x21, #0x1
   48638:	str	x0, [sp, #232]
   4863c:	mov	x0, x24
   48640:	bl	bcb0 <__gmpz_set_ui@plt>
   48644:	mov	x1, x24
   48648:	mov	x0, x24
   4864c:	mov	x2, x21
   48650:	bl	c200 <__gmpz_mul_2exp@plt>
   48654:	stp	x27, x25, [sp, #240]
   48658:	mov	x25, x23
   4865c:	mov	x27, x24
   48660:	mov	x23, x19
   48664:	mov	x24, x22
   48668:	ldp	x19, x22, [sp, #224]
   4866c:	stp	x26, x28, [sp, #224]
   48670:	mov	w1, #0x1                   	// #1
   48674:	ldr	x28, [sp, #152]
   48678:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4867c:	ldr	x26, [sp, #208]
   48680:	mov	x21, #0x1                   	// #1
   48684:	str	w1, [sp, #424]
   48688:	str	x0, [sp, #432]
   4868c:	str	w1, [sp, #488]
   48690:	str	x0, [sp, #496]
   48694:	nop
   48698:	mov	x2, x22
   4869c:	mov	x1, x25
   486a0:	mov	w3, #0x2                   	// #2
   486a4:	mov	x0, x25
   486a8:	bl	c2c0 <mpfr_mul_2ui@plt>
   486ac:	ldr	w0, [sp, #292]
   486b0:	mov	x2, x27
   486b4:	mov	x1, x25
   486b8:	mov	w3, #0x2                   	// #2
   486bc:	tbnz	w0, #31, 48b08 <mpfr_eint@@Base+0x770>
   486c0:	mov	x0, x25
   486c4:	bl	c480 <mpfr_add_z@plt>
   486c8:	ldr	w0, [sp, #260]
   486cc:	mov	x2, #0xfffffffffffffff8    	// #-8
   486d0:	ldr	x7, [sp, #264]
   486d4:	cmp	w0, #0x0
   486d8:	cneg	w0, w0, lt  // lt = tstop
   486dc:	mov	x1, x25
   486e0:	mov	w3, #0x2                   	// #2
   486e4:	add	x6, x2, w0, sxtw #3
   486e8:	sbfiz	x2, x0, #6, #32
   486ec:	mov	x0, x25
   486f0:	ldr	x6, [x7, x6]
   486f4:	clz	x6, x6
   486f8:	sub	x2, x2, x6
   486fc:	sub	x2, x2, x22
   48700:	add	x2, x2, x19
   48704:	bl	bb90 <mpfr_mul_2si@plt>
   48708:	mov	x2, x21
   4870c:	mov	x1, x25
   48710:	mov	w3, #0x2                   	// #2
   48714:	mov	x0, x25
   48718:	bl	cc60 <mpfr_div_ui@plt>
   4871c:	mov	w3, #0x2                   	// #2
   48720:	mov	x1, x25
   48724:	mov	x2, #0x1                   	// #1
   48728:	mov	x0, x25
   4872c:	bl	c260 <mpfr_add_ui@plt>
   48730:	mov	x2, x24
   48734:	mov	x1, x27
   48738:	mov	x0, x27
   4873c:	bl	bff0 <__gmpz_mul@plt>
   48740:	tbnz	x19, #63, 48af4 <mpfr_eint@@Base+0x75c>
   48744:	mov	x2, x19
   48748:	mov	x1, x27
   4874c:	mov	x0, x27
   48750:	bl	c200 <__gmpz_mul_2exp@plt>
   48754:	mov	x2, x21
   48758:	mov	x1, x27
   4875c:	mov	x0, x27
   48760:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   48764:	mov	x2, x21
   48768:	mov	x1, x27
   4876c:	mov	x0, x26
   48770:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   48774:	mov	x2, x26
   48778:	mov	x1, x28
   4877c:	mov	x0, x28
   48780:	bl	c9c0 <__gmpz_add@plt>
   48784:	mov	x2, x21
   48788:	mov	x1, x25
   4878c:	mov	w3, #0x2                   	// #2
   48790:	mov	x0, x20
   48794:	bl	cc60 <mpfr_div_ui@plt>
   48798:	mov	x1, x20
   4879c:	mov	w3, #0x2                   	// #2
   487a0:	mov	x2, #0x1                   	// #1
   487a4:	mov	x0, x20
   487a8:	bl	c260 <mpfr_add_ui@plt>
   487ac:	mov	x2, x20
   487b0:	mov	x1, x23
   487b4:	mov	x0, x23
   487b8:	mov	w3, #0x2                   	// #2
   487bc:	bl	c1a0 <mpfr_add@plt>
   487c0:	ldr	w0, [sp, #292]
   487c4:	cmp	w0, #0x0
   487c8:	cbz	w0, 48800 <mpfr_eint@@Base+0x468>
   487cc:	cneg	w1, w0, lt  // lt = tstop
   487d0:	mov	x2, #0xfffffffffffffff8    	// #-8
   487d4:	ldr	x6, [sp, #296]
   487d8:	add	x2, x2, w1, sxtw #3
   487dc:	ldr	x3, [sp, #496]
   487e0:	sbfiz	x1, x1, #6, #32
   487e4:	ldr	x2, [x6, x2]
   487e8:	clz	x2, x2
   487ec:	sub	x1, x1, x2
   487f0:	cmp	x1, x3
   487f4:	b.lt	4880c <mpfr_eint@@Base+0x474>  // b.tstop
   487f8:	add	x21, x21, #0x1
   487fc:	b	48698 <mpfr_eint@@Base+0x300>
   48800:	ldr	x1, [sp, #496]
   48804:	cmp	x1, #0x0
   48808:	b.le	487f8 <mpfr_eint@@Base+0x460>
   4880c:	mov	x2, x27
   48810:	mov	x1, x25
   48814:	mov	x19, x23
   48818:	mov	x22, x24
   4881c:	mov	x23, x25
   48820:	mov	x24, x27
   48824:	ldp	x27, x25, [sp, #240]
   48828:	cmp	w0, #0x0
   4882c:	cneg	w0, w0, lt  // lt = tstop
   48830:	mov	w3, #0x2                   	// #2
   48834:	str	w0, [sp, #292]
   48838:	mov	x0, x23
   4883c:	ldp	x26, x28, [sp, #224]
   48840:	bl	c480 <mpfr_add_z@plt>
   48844:	mov	x2, x21
   48848:	mov	x1, x23
   4884c:	mov	w3, #0x2                   	// #2
   48850:	mov	x0, x23
   48854:	bl	cc60 <mpfr_div_ui@plt>
   48858:	mov	x1, x27
   4885c:	mov	w3, #0x1                   	// #1
   48860:	mov	w2, #0x2                   	// #2
   48864:	mov	x0, x20
   48868:	bl	c6a0 <mpfr_set4@plt>
   4886c:	mov	x2, x20
   48870:	mov	x1, x23
   48874:	mov	w3, #0x2                   	// #2
   48878:	mov	x0, x23
   4887c:	bl	bd50 <mpfr_mul@plt>
   48880:	mov	x1, x21
   48884:	mov	x2, x20
   48888:	mov	x0, x20
   4888c:	mov	w3, #0x3                   	// #3
   48890:	bl	ca50 <mpfr_ui_sub@plt>
   48894:	ldr	w0, [sp, #456]
   48898:	tbnz	w0, #31, 488f8 <mpfr_eint@@Base+0x560>
   4889c:	mov	x2, x20
   488a0:	mov	x1, x23
   488a4:	mov	w3, #0x2                   	// #2
   488a8:	mov	x0, x23
   488ac:	bl	c620 <mpfr_div@plt>
   488b0:	mov	w3, #0x2                   	// #2
   488b4:	mov	x2, x23
   488b8:	mov	x1, x19
   488bc:	mov	x0, x19
   488c0:	bl	c1a0 <mpfr_add@plt>
   488c4:	ldr	x1, [sp, #152]
   488c8:	mov	w2, #0x0                   	// #0
   488cc:	mov	x0, x26
   488d0:	bl	c240 <mpfr_set_z@plt>
   488d4:	ldr	x2, [sp, #136]
   488d8:	mov	x1, x26
   488dc:	mov	x0, x26
   488e0:	mov	w3, #0x0                   	// #0
   488e4:	bl	c8f0 <mpfr_div_2ui@plt>
   488e8:	ldr	x0, [sp, #336]
   488ec:	ldr	x1, [sp, #496]
   488f0:	sub	x0, x1, x0
   488f4:	str	x0, [sp, #136]
   488f8:	ldr	x1, [sp, #512]
   488fc:	cbz	x1, 48908 <mpfr_eint@@Base+0x570>
   48900:	ldr	x0, [sp, #520]
   48904:	bl	cc20 <mpfr_free_func@plt>
   48908:	ldr	x0, [sp, #152]
   4890c:	bl	c170 <mpfr_mpz_clear@plt>
   48910:	mov	x0, x24
   48914:	bl	c170 <mpfr_mpz_clear@plt>
   48918:	ldr	x0, [sp, #208]
   4891c:	bl	c170 <mpfr_mpz_clear@plt>
   48920:	mov	x0, x22
   48924:	bl	c170 <mpfr_mpz_clear@plt>
   48928:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4892c:	ldr	x1, [x0, #2608]
   48930:	add	x0, x0, #0xa30
   48934:	blr	x1
   48938:	mov	w2, #0x0                   	// #0
   4893c:	ldr	x1, [sp, #144]
   48940:	mov	x21, #0x8000000000000001    	// #-9223372036854775807
   48944:	ldr	x20, [sp, #336]
   48948:	add	x1, x1, x0
   4894c:	mov	x0, x25
   48950:	bl	c380 <mpfr_cache@plt>
   48954:	mov	w3, #0x0                   	// #0
   48958:	mov	x2, x25
   4895c:	mov	x1, x26
   48960:	mov	x0, x26
   48964:	bl	c1a0 <mpfr_add@plt>
   48968:	ldr	x0, [sp, #136]
   4896c:	mov	w2, #0x0                   	// #0
   48970:	ldr	x19, [sp, #336]
   48974:	adds	x0, x20, x0
   48978:	ldr	x1, [sp, #368]
   4897c:	csinv	x0, x0, xzr, pl  // pl = nfrst
   48980:	cmp	x19, x21
   48984:	add	x0, x0, #0x2
   48988:	csel	x19, x1, x19, eq  // eq = none
   4898c:	ldr	x1, [sp, #160]
   48990:	subs	x0, x0, x19
   48994:	csel	x20, x0, xzr, pl  // pl = nfrst
   48998:	mov	x0, x25
   4899c:	add	x19, x19, #0x1
   489a0:	bl	c090 <mpfr_log@plt>
   489a4:	add	x19, x19, x20
   489a8:	mov	x2, x25
   489ac:	mov	x1, x26
   489b0:	mov	x0, x26
   489b4:	mov	w3, #0x0                   	// #0
   489b8:	bl	c1a0 <mpfr_add@plt>
   489bc:	ldr	x0, [sp, #368]
   489c0:	cmp	x0, x21
   489c4:	b.eq	489d0 <mpfr_eint@@Base+0x638>  // b.none
   489c8:	cmp	x19, x0
   489cc:	csel	x19, x19, x0, ge  // ge = tcont
   489d0:	ldr	x0, [sp, #336]
   489d4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   489d8:	cmp	x0, x1
   489dc:	b.eq	48b4c <mpfr_eint@@Base+0x7b4>  // b.none
   489e0:	subs	x19, x19, x0
   489e4:	csel	x19, x19, xzr, pl  // pl = nfrst
   489e8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   489ec:	cmp	x0, x1
   489f0:	b.le	48b4c <mpfr_eint@@Base+0x7b4>
   489f4:	ldr	x2, [sp, #120]
   489f8:	ldr	w0, [sp, #168]
   489fc:	ldr	x1, [sp, #320]
   48a00:	cmp	w0, #0x0
   48a04:	ldr	x0, [sp, #344]
   48a08:	sub	x1, x1, #0x1
   48a0c:	ldr	x3, [x2]
   48a10:	asr	x1, x1, #6
   48a14:	ldr	x2, [sp, #128]
   48a18:	add	x1, x1, #0x1
   48a1c:	cinc	x3, x3, eq  // eq = none
   48a20:	sub	x2, x2, x19
   48a24:	bl	c370 <mpfr_round_p@plt>
   48a28:	cbz	w0, 48b4c <mpfr_eint@@Base+0x7b4>
   48a2c:	ldr	w2, [sp, #168]
   48a30:	mov	x1, x26
   48a34:	ldr	w3, [sp, #328]
   48a38:	ldr	x20, [sp, #120]
   48a3c:	mov	x0, x20
   48a40:	bl	c6a0 <mpfr_set4@plt>
   48a44:	mov	w19, w0
   48a48:	mov	x0, x26
   48a4c:	bl	c070 <mpfr_clear@plt>
   48a50:	mov	x0, x25
   48a54:	bl	c070 <mpfr_clear@plt>
   48a58:	ldr	x3, [sp, #144]
   48a5c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   48a60:	ldr	x2, [x0, #2576]
   48a64:	add	x0, x0, #0xa10
   48a68:	blr	x2
   48a6c:	ldr	w2, [sp, #172]
   48a70:	str	w2, [x3, x0]
   48a74:	add	x2, x3, x0
   48a78:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   48a7c:	ldr	x4, [x0, #2512]
   48a80:	add	x0, x0, #0x9d0
   48a84:	blr	x4
   48a88:	ldr	x4, [sp, #176]
   48a8c:	str	x4, [x3, x0]
   48a90:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   48a94:	ldr	x5, [x0, #2544]
   48a98:	add	x0, x0, #0x9f0
   48a9c:	blr	x5
   48aa0:	ldr	x1, [x20, #16]
   48aa4:	ldr	x5, [sp, #184]
   48aa8:	str	x5, [x3, x0]
   48aac:	cmp	x4, x1
   48ab0:	ccmp	x5, x1, #0x1, le
   48ab4:	b.ge	48b14 <mpfr_eint@@Base+0x77c>  // b.tcont
   48ab8:	ldr	w2, [sp, #168]
   48abc:	mov	w1, w19
   48ac0:	ldr	x0, [sp, #120]
   48ac4:	bl	cb30 <mpfr_check_range@plt>
   48ac8:	mov	w19, w0
   48acc:	ldp	x21, x22, [sp, #32]
   48ad0:	ldp	x23, x24, [sp, #48]
   48ad4:	ldp	x25, x26, [sp, #64]
   48ad8:	ldr	d8, [sp, #96]
   48adc:	mov	w0, w19
   48ae0:	ldp	x29, x30, [sp]
   48ae4:	ldp	x19, x20, [sp, #16]
   48ae8:	ldp	x27, x28, [sp, #80]
   48aec:	add	sp, sp, #0x290
   48af0:	ret
   48af4:	ldr	x2, [sp, #200]
   48af8:	mov	x1, x27
   48afc:	mov	x0, x27
   48b00:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   48b04:	b	48754 <mpfr_eint@@Base+0x3bc>
   48b08:	mov	x0, x25
   48b0c:	bl	bd60 <mpfr_sub_z@plt>
   48b10:	b	486c8 <mpfr_eint@@Base+0x330>
   48b14:	cbz	w19, 48acc <mpfr_eint@@Base+0x734>
   48b18:	ldr	w0, [sp, #172]
   48b1c:	ldp	x21, x22, [sp, #32]
   48b20:	orr	w0, w0, #0x8
   48b24:	ldp	x23, x24, [sp, #48]
   48b28:	ldp	x25, x26, [sp, #64]
   48b2c:	ldr	d8, [sp, #96]
   48b30:	str	w0, [x2]
   48b34:	mov	w0, w19
   48b38:	ldp	x29, x30, [sp]
   48b3c:	ldp	x19, x20, [sp, #16]
   48b40:	ldp	x27, x28, [sp, #80]
   48b44:	add	sp, sp, #0x290
   48b48:	ret
   48b4c:	ldr	x1, [sp, #128]
   48b50:	mov	x0, #0xfffffffffffffeff    	// #-257
   48b54:	movk	x0, #0x7fff, lsl #48
   48b58:	sub	x0, x0, x1
   48b5c:	ldr	x1, [sp, #192]
   48b60:	cmp	x0, x1
   48b64:	b.lt	48f90 <mpfr_eint@@Base+0xbf8>  // b.tstop
   48b68:	ldr	x0, [sp, #128]
   48b6c:	add	x19, x0, x1
   48b70:	mov	x0, x26
   48b74:	mov	x1, x19
   48b78:	str	x19, [sp, #128]
   48b7c:	add	x2, x19, x19, lsr #63
   48b80:	asr	x2, x2, #1
   48b84:	str	x2, [sp, #192]
   48b88:	bl	bed0 <mpfr_set_prec@plt>
   48b8c:	mov	x1, x19
   48b90:	mov	x0, x25
   48b94:	bl	bed0 <mpfr_set_prec@plt>
   48b98:	b	48518 <mpfr_eint@@Base+0x180>
   48b9c:	mov	x1, x27
   48ba0:	mov	w2, #0x2                   	// #2
   48ba4:	mov	x0, x26
   48ba8:	bl	c090 <mpfr_log@plt>
   48bac:	mov	x2, x26
   48bb0:	mov	x1, x27
   48bb4:	mov	w3, #0x3                   	// #3
   48bb8:	mov	x0, x25
   48bbc:	bl	bb70 <mpfr_sub@plt>
   48bc0:	adrp	x2, 81000 <__gmpfr_l2b@@Base+0x200>
   48bc4:	mov	x1, x25
   48bc8:	mov	w3, #0x3                   	// #3
   48bcc:	mov	x0, x25
   48bd0:	ldr	x2, [x2, #4048]
   48bd4:	bl	c620 <mpfr_div@plt>
   48bd8:	ldr	x3, [sp, #144]
   48bdc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   48be0:	ldr	x1, [x0, #2544]
   48be4:	add	x0, x0, #0x9f0
   48be8:	blr	x1
   48bec:	mov	x2, #0x0                   	// #0
   48bf0:	add	x19, x3, x0
   48bf4:	ldr	x1, [x3, x0]
   48bf8:	mov	x0, x25
   48bfc:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   48c00:	tbz	w0, #31, 4905c <mpfr_eint@@Base+0xcc4>
   48c04:	ldr	w0, [x27, #8]
   48c08:	tbnz	w0, #31, 484b4 <mpfr_eint@@Base+0x11c>
   48c0c:	stp	x21, x22, [sp, #32]
   48c10:	stp	x23, x24, [sp, #48]
   48c14:	str	d8, [sp, #96]
   48c18:	cmp	w0, #0x0
   48c1c:	b.le	484cc <mpfr_eint@@Base+0x134>
   48c20:	ldr	x0, [x27, #16]
   48c24:	cmn	x0, #0x1
   48c28:	b.ne	484cc <mpfr_eint@@Base+0x134>  // b.any
   48c2c:	add	x19, sp, #0x200
   48c30:	mov	x1, #0x20                  	// #32
   48c34:	mov	x0, x19
   48c38:	bl	ca80 <mpfr_init2@plt>
   48c3c:	mov	x1, #0xa54b                	// #42315
   48c40:	mov	w3, #0x0                   	// #0
   48c44:	movk	x1, #0x5f5c, lsl #16
   48c48:	mov	x2, #0xffffffffffffffe0    	// #-32
   48c4c:	mov	x0, x19
   48c50:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   48c54:	mov	x1, x27
   48c58:	mov	x2, x19
   48c5c:	mov	x0, x19
   48c60:	mov	w3, #0x0                   	// #0
   48c64:	bl	bb70 <mpfr_sub@plt>
   48c68:	ldr	x0, [sp, #528]
   48c6c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   48c70:	cmp	x0, x1
   48c74:	b.eq	48f60 <mpfr_eint@@Base+0xbc8>  // b.none
   48c78:	ldr	x1, [sp, #128]
   48c7c:	cmp	x0, #0x0
   48c80:	sub	x0, x1, x0
   48c84:	csel	x0, x0, x1, lt  // lt = tstop
   48c88:	str	x0, [sp, #128]
   48c8c:	mov	x0, x19
   48c90:	bl	c070 <mpfr_clear@plt>
   48c94:	b	484cc <mpfr_eint@@Base+0x134>
   48c98:	ldr	w3, [x27, #8]
   48c9c:	mov	x1, x27
   48ca0:	mov	x0, x26
   48ca4:	mov	w2, #0x0                   	// #0
   48ca8:	str	xzr, [sp, #136]
   48cac:	bl	c6a0 <mpfr_set4@plt>
   48cb0:	b	48928 <mpfr_eint@@Base+0x590>
   48cb4:	ldr	x23, [sp, #320]
   48cb8:	add	x19, sp, #0x1e0
   48cbc:	mov	x0, x19
   48cc0:	add	x20, sp, #0x1c0
   48cc4:	mov	x1, x23
   48cc8:	bl	ca80 <mpfr_init2@plt>
   48ccc:	mov	x1, x23
   48cd0:	mov	x0, x20
   48cd4:	bl	ca80 <mpfr_init2@plt>
   48cd8:	mov	x22, #0x6                   	// #6
   48cdc:	mov	x0, x28
   48ce0:	mov	x1, #0x1f                  	// #31
   48ce4:	bl	ca80 <mpfr_init2@plt>
   48ce8:	mov	x21, #0x1                   	// #1
   48cec:	mov	x2, x27
   48cf0:	mov	w3, #0x0                   	// #0
   48cf4:	mov	x1, #0x1                   	// #1
   48cf8:	mov	x0, x20
   48cfc:	bl	c2f0 <mpfr_ui_div@plt>
   48d00:	mov	w3, #0x0                   	// #0
   48d04:	mov	x2, #0x0                   	// #0
   48d08:	mov	x1, #0x1                   	// #1
   48d0c:	mov	x0, x19
   48d10:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   48d14:	ldr	w3, [sp, #488]
   48d18:	mov	x1, x19
   48d1c:	mov	w2, #0x0                   	// #0
   48d20:	mov	x0, x26
   48d24:	bl	c6a0 <mpfr_set4@plt>
   48d28:	mov	w1, #0x1                   	// #1
   48d2c:	str	w1, [sp, #520]
   48d30:	ldr	x0, [sp, #496]
   48d34:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   48d38:	ldr	x1, [sp, #336]
   48d3c:	str	x2, [sp, #528]
   48d40:	add	x0, x23, x0
   48d44:	cmp	x1, x0
   48d48:	b.ge	48df4 <mpfr_eint@@Base+0xa5c>  // b.tcont
   48d4c:	nop
   48d50:	mov	x2, x20
   48d54:	mov	x1, x19
   48d58:	mov	w3, #0x0                   	// #0
   48d5c:	mov	x0, x19
   48d60:	bl	bd50 <mpfr_mul@plt>
   48d64:	mov	x2, x21
   48d68:	mov	x1, x19
   48d6c:	mov	w3, #0x0                   	// #0
   48d70:	mov	x0, x19
   48d74:	bl	ba50 <mpfr_mul_ui@plt>
   48d78:	add	x21, x21, #0x1
   48d7c:	ldr	x4, [sp, #336]
   48d80:	mov	x1, x28
   48d84:	ldr	x2, [sp, #496]
   48d88:	mov	w3, #0x2                   	// #2
   48d8c:	mov	x0, x28
   48d90:	sub	x2, x4, x2
   48d94:	bl	bb90 <mpfr_mul_2si@plt>
   48d98:	mov	x2, x22
   48d9c:	mov	x1, x28
   48da0:	mov	w3, #0x2                   	// #2
   48da4:	mov	x0, x28
   48da8:	bl	c260 <mpfr_add_ui@plt>
   48dac:	add	x22, x22, #0x6
   48db0:	ldr	x4, [sp, #336]
   48db4:	mov	x1, x28
   48db8:	ldr	x2, [sp, #496]
   48dbc:	mov	w3, #0x2                   	// #2
   48dc0:	mov	x0, x28
   48dc4:	sub	x2, x4, x2
   48dc8:	bl	c420 <mpfr_div_2si@plt>
   48dcc:	mov	x1, x26
   48dd0:	mov	x2, x19
   48dd4:	mov	x0, x26
   48dd8:	mov	w3, #0x0                   	// #0
   48ddc:	bl	c1a0 <mpfr_add@plt>
   48de0:	ldr	x0, [sp, #496]
   48de4:	ldr	x1, [sp, #336]
   48de8:	add	x0, x23, x0
   48dec:	cmp	x0, x1
   48df0:	b.gt	48d50 <mpfr_eint@@Base+0x9b8>
   48df4:	mov	w3, #0x0                   	// #0
   48df8:	mov	x2, x20
   48dfc:	mov	x1, x26
   48e00:	mov	x0, x26
   48e04:	bl	bd50 <mpfr_mul@plt>
   48e08:	mov	x1, x27
   48e0c:	mov	x0, x19
   48e10:	mov	w2, #0x0                   	// #0
   48e14:	bl	c750 <mpfr_exp@plt>
   48e18:	mov	x2, x19
   48e1c:	mov	x1, x26
   48e20:	mov	w3, #0x0                   	// #0
   48e24:	mov	x0, x26
   48e28:	bl	bd50 <mpfr_mul@plt>
   48e2c:	mov	x1, x28
   48e30:	mov	w3, #0x2                   	// #2
   48e34:	mov	x2, #0x2                   	// #2
   48e38:	mov	x0, x28
   48e3c:	bl	c2c0 <mpfr_mul_2ui@plt>
   48e40:	mov	x1, x28
   48e44:	mov	w3, #0x2                   	// #2
   48e48:	mov	x2, #0x8                   	// #8
   48e4c:	mov	x0, x28
   48e50:	bl	c260 <mpfr_add_ui@plt>
   48e54:	mov	x0, x19
   48e58:	ldr	x19, [sp, #528]
   48e5c:	bl	c070 <mpfr_clear@plt>
   48e60:	mov	x0, x20
   48e64:	bl	c070 <mpfr_clear@plt>
   48e68:	mov	x0, x28
   48e6c:	bl	c070 <mpfr_clear@plt>
   48e70:	ldr	x0, [sp, #336]
   48e74:	b	489e8 <mpfr_eint@@Base+0x650>
   48e78:	sub	x2, x2, x0
   48e7c:	mov	x1, x22
   48e80:	add	x19, x19, x2
   48e84:	mov	x0, x22
   48e88:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   48e8c:	b	485f0 <mpfr_eint@@Base+0x258>
   48e90:	adrp	x2, 81000 <__gmpfr_l2b@@Base+0x200>
   48e94:	mov	x1, x27
   48e98:	mov	w3, #0x2                   	// #2
   48e9c:	mov	x0, x25
   48ea0:	ldr	x2, [x2, #3984]
   48ea4:	bl	c620 <mpfr_div@plt>
   48ea8:	ldr	x3, [sp, #144]
   48eac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   48eb0:	ldr	x1, [x0, #2512]
   48eb4:	add	x0, x0, #0x9d0
   48eb8:	blr	x1
   48ebc:	mov	x2, #0x0                   	// #0
   48ec0:	add	x19, x3, x0
   48ec4:	ldr	x1, [x3, x0]
   48ec8:	mov	x0, x25
   48ecc:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   48ed0:	tbnz	w0, #31, 48ff8 <mpfr_eint@@Base+0xc60>
   48ed4:	ldr	w0, [x27, #8]
   48ed8:	stp	x21, x22, [sp, #32]
   48edc:	stp	x23, x24, [sp, #48]
   48ee0:	str	d8, [sp, #96]
   48ee4:	b	48c18 <mpfr_eint@@Base+0x880>
   48ee8:	mov	x0, #0x2                   	// #2
   48eec:	movk	x0, #0x8000, lsl #48
   48ef0:	cmp	x1, x0
   48ef4:	b.eq	48fa8 <mpfr_eint@@Base+0xc10>  // b.none
   48ef8:	cmp	x1, x2
   48efc:	b.eq	48f6c <mpfr_eint@@Base+0xbd4>  // b.none
   48f00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   48f04:	ldr	x3, [x0, #2576]
   48f08:	add	x0, x0, #0xa10
   48f0c:	blr	x3
   48f10:	mrs	x1, tpidr_el0
   48f14:	ldr	x3, [sp, #120]
   48f18:	add	x0, x1, x0
   48f1c:	mov	w1, #0xffffffff            	// #-1
   48f20:	mov	w19, #0x0                   	// #0
   48f24:	str	w1, [x3, #8]
   48f28:	ldr	w1, [x0]
   48f2c:	str	x2, [x3, #16]
   48f30:	orr	w1, w1, #0x20
   48f34:	str	w1, [x0]
   48f38:	b	48adc <mpfr_eint@@Base+0x744>
   48f3c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   48f40:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   48f44:	add	x2, x2, #0xa48
   48f48:	add	x0, x0, #0xf0
   48f4c:	mov	w1, #0xfa                  	// #250
   48f50:	bl	cb40 <mpfr_assert_fail@plt>
   48f54:	ldr	x0, [sp, #120]
   48f58:	ldr	x0, [x0]
   48f5c:	b	48464 <mpfr_eint@@Base+0xcc>
   48f60:	add	x0, x20, #0x26
   48f64:	str	x0, [sp, #128]
   48f68:	b	48c8c <mpfr_eint@@Base+0x8f4>
   48f6c:	ldr	w0, [x27, #8]
   48f70:	cmp	w0, #0x0
   48f74:	b.le	48fdc <mpfr_eint@@Base+0xc44>
   48f78:	ldr	x2, [sp, #120]
   48f7c:	mov	w0, #0x1                   	// #1
   48f80:	mov	w19, #0x0                   	// #0
   48f84:	str	w0, [x2, #8]
   48f88:	str	x1, [x2, #16]
   48f8c:	b	48adc <mpfr_eint@@Base+0x744>
   48f90:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   48f94:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   48f98:	add	x2, x2, #0xf80
   48f9c:	add	x0, x0, #0xf0
   48fa0:	mov	w1, #0x159                 	// #345
   48fa4:	bl	cb40 <mpfr_assert_fail@plt>
   48fa8:	mrs	x2, tpidr_el0
   48fac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   48fb0:	ldr	x3, [x0, #2576]
   48fb4:	add	x0, x0, #0xa10
   48fb8:	blr	x3
   48fbc:	add	x0, x2, x0
   48fc0:	mov	w19, #0x0                   	// #0
   48fc4:	ldr	x2, [sp, #120]
   48fc8:	str	x1, [x2, #16]
   48fcc:	ldr	w1, [x0]
   48fd0:	orr	w1, w1, #0x4
   48fd4:	str	w1, [x0]
   48fd8:	b	48adc <mpfr_eint@@Base+0x744>
   48fdc:	ldr	x2, [sp, #120]
   48fe0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   48fe4:	mov	w1, #0xffffffff            	// #-1
   48fe8:	mov	w19, #0x0                   	// #0
   48fec:	str	w1, [x2, #8]
   48ff0:	str	x0, [x2, #16]
   48ff4:	b	48adc <mpfr_eint@@Base+0x744>
   48ff8:	mov	x0, x26
   48ffc:	bl	c070 <mpfr_clear@plt>
   49000:	mov	x0, x25
   49004:	bl	c070 <mpfr_clear@plt>
   49008:	ldr	x0, [sp, #176]
   4900c:	str	x0, [x19]
   49010:	ldp	w1, w4, [sp, #168]
   49014:	mov	w2, #0xffffffff            	// #-1
   49018:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4901c:	ldr	x3, [x0, #2576]
   49020:	add	x0, x0, #0xa10
   49024:	blr	x3
   49028:	ldr	x3, [sp, #144]
   4902c:	str	w4, [x3, x0]
   49030:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49034:	ldr	x4, [x0, #2544]
   49038:	add	x0, x0, #0x9f0
   4903c:	blr	x4
   49040:	ldr	x4, [sp, #184]
   49044:	str	x4, [x3, x0]
   49048:	ldr	x0, [sp, #120]
   4904c:	bl	c3c0 <mpfr_underflow@plt>
   49050:	mov	w19, w0
   49054:	ldp	x25, x26, [sp, #64]
   49058:	b	48adc <mpfr_eint@@Base+0x744>
   4905c:	mov	x0, x26
   49060:	bl	c070 <mpfr_clear@plt>
   49064:	mov	x0, x25
   49068:	bl	c070 <mpfr_clear@plt>
   4906c:	ldr	x0, [sp, #184]
   49070:	str	x0, [x19]
   49074:	ldp	w1, w4, [sp, #168]
   49078:	mov	w2, #0x1                   	// #1
   4907c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49080:	ldr	x3, [x0, #2576]
   49084:	add	x0, x0, #0xa10
   49088:	blr	x3
   4908c:	ldr	x3, [sp, #144]
   49090:	str	w4, [x3, x0]
   49094:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49098:	ldr	x4, [x0, #2512]
   4909c:	add	x0, x0, #0x9d0
   490a0:	blr	x4
   490a4:	ldr	x4, [sp, #176]
   490a8:	str	x4, [x3, x0]
   490ac:	ldr	x0, [sp, #120]
   490b0:	bl	bf40 <mpfr_overflow@plt>
   490b4:	mov	w19, w0
   490b8:	ldp	x25, x26, [sp, #64]
   490bc:	b	48adc <mpfr_eint@@Base+0x744>

00000000000490c0 <mpfr_sech@@Base>:
   490c0:	stp	x29, x30, [sp, #-144]!
   490c4:	mov	x29, sp
   490c8:	stp	x21, x22, [sp, #32]
   490cc:	mov	x22, x1
   490d0:	mov	w21, w2
   490d4:	stp	x19, x20, [sp, #16]
   490d8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   490dc:	mov	x20, x0
   490e0:	ldr	x2, [x22, #16]
   490e4:	cmp	x2, x1
   490e8:	b.le	49418 <mpfr_sech@@Base+0x358>
   490ec:	stp	x25, x26, [sp, #64]
   490f0:	mrs	x26, tpidr_el0
   490f4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   490f8:	ldr	x1, [x0, #2576]
   490fc:	add	x0, x0, #0xa10
   49100:	blr	x1
   49104:	add	x6, x26, x0
   49108:	stp	x23, x24, [sp, #48]
   4910c:	ldr	w0, [x26, x0]
   49110:	str	w0, [sp, #100]
   49114:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   49118:	stp	x27, x28, [sp, #80]
   4911c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   49120:	neg	x2, x2, lsl #1
   49124:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49128:	ldr	x4, [x0, #2512]
   4912c:	add	x0, x0, #0x9d0
   49130:	blr	x4
   49134:	add	x28, x26, x0
   49138:	ldr	x25, [x26, x0]
   4913c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49140:	ldr	x4, [x0, #2544]
   49144:	add	x0, x0, #0x9f0
   49148:	blr	x4
   4914c:	add	x24, x26, x0
   49150:	cmp	x2, #0x0
   49154:	ldr	x23, [x20]
   49158:	str	x3, [x28]
   4915c:	ldr	x27, [x26, x0]
   49160:	str	x1, [x24]
   49164:	b.le	49178 <mpfr_sech@@Base+0xb8>
   49168:	add	x2, x2, #0x1
   4916c:	add	x0, x23, #0x1
   49170:	cmp	x0, x2
   49174:	b.cc	492e8 <mpfr_sech@@Base+0x228>  // b.lo, b.ul, b.last
   49178:	cmp	x23, #0x1
   4917c:	b.eq	49448 <mpfr_sech@@Base+0x388>  // b.none
   49180:	b.le	494b8 <mpfr_sech@@Base+0x3f8>
   49184:	sub	x0, x23, #0x1
   49188:	mov	w19, #0x40                  	// #64
   4918c:	clz	x0, x0
   49190:	sub	w19, w19, w0
   49194:	add	x19, x23, w19, sxtw
   49198:	mov	x0, #0x40                  	// #64
   4919c:	add	x19, x19, #0x3
   491a0:	add	x28, sp, #0x70
   491a4:	mov	x1, x19
   491a8:	str	x0, [sp, #104]
   491ac:	mov	x0, x28
   491b0:	bl	ca80 <mpfr_init2@plt>
   491b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   491b8:	ldr	x1, [x0, #2576]
   491bc:	add	x0, x0, #0xa10
   491c0:	blr	x1
   491c4:	add	x24, x26, x0
   491c8:	mov	x1, x22
   491cc:	mov	w2, #0x1                   	// #1
   491d0:	str	wzr, [x26, x0]
   491d4:	mov	x0, x28
   491d8:	bl	baf0 <mpfr_cosh@plt>
   491dc:	ldr	w0, [x24]
   491e0:	tbnz	w0, #1, 493a4 <mpfr_sech@@Base+0x2e4>
   491e4:	mov	x1, #0x1                   	// #1
   491e8:	mov	x2, x28
   491ec:	mov	x0, x28
   491f0:	mov	w3, #0x0                   	// #0
   491f4:	bl	c2f0 <mpfr_ui_div@plt>
   491f8:	ldr	x0, [sp, #128]
   491fc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   49200:	cmp	x0, x1
   49204:	b.le	4936c <mpfr_sech@@Base+0x2ac>
   49208:	ldr	x1, [sp, #112]
   4920c:	cmp	w21, #0x0
   49210:	ldr	x0, [sp, #136]
   49214:	sub	x1, x1, #0x1
   49218:	cinc	x3, x23, eq  // eq = none
   4921c:	sub	x2, x19, #0x2
   49220:	asr	x1, x1, #6
   49224:	add	x1, x1, #0x1
   49228:	bl	c370 <mpfr_round_p@plt>
   4922c:	cbz	w0, 4936c <mpfr_sech@@Base+0x2ac>
   49230:	ldr	w3, [sp, #120]
   49234:	mov	w2, w21
   49238:	mov	x1, x28
   4923c:	mov	x0, x20
   49240:	bl	c6a0 <mpfr_set4@plt>
   49244:	mov	w19, w0
   49248:	mov	x0, x28
   4924c:	bl	c070 <mpfr_clear@plt>
   49250:	ldr	w0, [sp, #100]
   49254:	ldr	x1, [x20, #16]
   49258:	str	w0, [x24]
   4925c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49260:	ldr	x2, [x0, #2512]
   49264:	add	x0, x0, #0x9d0
   49268:	blr	x2
   4926c:	str	x25, [x26, x0]
   49270:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49274:	ldr	x2, [x0, #2544]
   49278:	add	x0, x0, #0x9f0
   4927c:	blr	x2
   49280:	str	x27, [x26, x0]
   49284:	cmp	x27, x1
   49288:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   4928c:	b.le	492c4 <mpfr_sech@@Base+0x204>
   49290:	mov	w1, w19
   49294:	mov	w2, w21
   49298:	mov	x0, x20
   4929c:	bl	cb30 <mpfr_check_range@plt>
   492a0:	ldp	x23, x24, [sp, #48]
   492a4:	mov	w19, w0
   492a8:	ldp	x25, x26, [sp, #64]
   492ac:	ldp	x27, x28, [sp, #80]
   492b0:	mov	w0, w19
   492b4:	ldp	x19, x20, [sp, #16]
   492b8:	ldp	x21, x22, [sp, #32]
   492bc:	ldp	x29, x30, [sp], #144
   492c0:	ret
   492c4:	cbnz	w19, 49330 <mpfr_sech@@Base+0x270>
   492c8:	mov	w0, w19
   492cc:	ldp	x19, x20, [sp, #16]
   492d0:	ldp	x21, x22, [sp, #32]
   492d4:	ldp	x23, x24, [sp, #48]
   492d8:	ldp	x25, x26, [sp, #64]
   492dc:	ldp	x27, x28, [sp, #80]
   492e0:	ldp	x29, x30, [sp], #144
   492e4:	ret
   492e8:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   492ec:	mov	w4, w21
   492f0:	mov	x0, x20
   492f4:	mov	w3, #0x0                   	// #0
   492f8:	ldr	x1, [x1, #3928]
   492fc:	str	x6, [sp, #104]
   49300:	bl	c540 <mpfr_round_near_x@plt>
   49304:	mov	w19, w0
   49308:	ldr	x6, [sp, #104]
   4930c:	cbz	w0, 49468 <mpfr_sech@@Base+0x3a8>
   49310:	ldr	x0, [x20, #16]
   49314:	str	x27, [x24]
   49318:	ldr	w1, [sp, #100]
   4931c:	str	w1, [x6]
   49320:	cmp	x27, x0
   49324:	str	x25, [x28]
   49328:	ccmp	x25, x0, #0x0, ge  // ge = tcont
   4932c:	b.gt	49290 <mpfr_sech@@Base+0x1d0>
   49330:	ldr	w0, [sp, #100]
   49334:	ldp	x23, x24, [sp, #48]
   49338:	orr	w25, w0, #0x8
   4933c:	ldp	x27, x28, [sp, #80]
   49340:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49344:	ldr	x1, [x0, #2576]
   49348:	add	x0, x0, #0xa10
   4934c:	blr	x1
   49350:	str	w25, [x26, x0]
   49354:	mov	w0, w19
   49358:	ldp	x19, x20, [sp, #16]
   4935c:	ldp	x21, x22, [sp, #32]
   49360:	ldp	x25, x26, [sp, #64]
   49364:	ldp	x29, x30, [sp], #144
   49368:	ret
   4936c:	ldr	x1, [sp, #104]
   49370:	mov	x0, #0xfffffffffffffeff    	// #-257
   49374:	movk	x0, #0x7fff, lsl #48
   49378:	sub	x0, x0, x19
   4937c:	cmp	x0, x1
   49380:	b.lt	494a0 <mpfr_sech@@Base+0x3e0>  // b.tstop
   49384:	add	x19, x19, x1
   49388:	mov	x0, x28
   4938c:	mov	x1, x19
   49390:	add	x2, x19, x19, lsr #63
   49394:	asr	x2, x2, #1
   49398:	str	x2, [sp, #104]
   4939c:	bl	bed0 <mpfr_set_prec@plt>
   493a0:	b	491b4 <mpfr_sech@@Base+0xf4>
   493a4:	ldr	w19, [sp, #120]
   493a8:	mov	x0, x28
   493ac:	bl	c070 <mpfr_clear@plt>
   493b0:	ldr	w0, [sp, #100]
   493b4:	mov	w2, w19
   493b8:	str	w0, [x24]
   493bc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   493c0:	ldr	x1, [x0, #2512]
   493c4:	add	x0, x0, #0x9d0
   493c8:	blr	x1
   493cc:	str	x25, [x26, x0]
   493d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   493d4:	ldr	x1, [x0, #2544]
   493d8:	add	x0, x0, #0x9f0
   493dc:	blr	x1
   493e0:	str	x27, [x26, x0]
   493e4:	cmp	w21, #0x0
   493e8:	mov	x0, x20
   493ec:	csinc	w1, w21, wzr, ne  // ne = any
   493f0:	bl	c3c0 <mpfr_underflow@plt>
   493f4:	mov	w19, w0
   493f8:	mov	w0, w19
   493fc:	ldp	x19, x20, [sp, #16]
   49400:	ldp	x21, x22, [sp, #32]
   49404:	ldp	x23, x24, [sp, #48]
   49408:	ldp	x25, x26, [sp, #64]
   4940c:	ldp	x27, x28, [sp, #80]
   49410:	ldp	x29, x30, [sp], #144
   49414:	ret
   49418:	mov	x3, #0x2                   	// #2
   4941c:	movk	x3, #0x8000, lsl #48
   49420:	cmp	x2, x3
   49424:	b.eq	49470 <mpfr_sech@@Base+0x3b0>  // b.none
   49428:	cmp	x2, x1
   4942c:	b.ne	49450 <mpfr_sech@@Base+0x390>  // b.any
   49430:	mov	w1, #0x1                   	// #1
   49434:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   49438:	mov	w19, #0x0                   	// #0
   4943c:	str	w1, [x20, #8]
   49440:	str	x0, [x20, #16]
   49444:	b	492b0 <mpfr_sech@@Base+0x1f0>
   49448:	mov	x19, x23
   4944c:	b	49198 <mpfr_sech@@Base+0xd8>
   49450:	mov	w3, w21
   49454:	mov	x2, #0x0                   	// #0
   49458:	mov	x1, #0x1                   	// #1
   4945c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   49460:	mov	w19, w0
   49464:	b	492b0 <mpfr_sech@@Base+0x1f0>
   49468:	ldr	x23, [x20]
   4946c:	b	49178 <mpfr_sech@@Base+0xb8>
   49470:	mrs	x1, tpidr_el0
   49474:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49478:	ldr	x3, [x0, #2576]
   4947c:	add	x0, x0, #0xa10
   49480:	blr	x3
   49484:	add	x0, x1, x0
   49488:	mov	w19, #0x0                   	// #0
   4948c:	str	x2, [x20, #16]
   49490:	ldr	w1, [x0]
   49494:	orr	w1, w1, #0x4
   49498:	str	w1, [x0]
   4949c:	b	492b0 <mpfr_sech@@Base+0x1f0>
   494a0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   494a4:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   494a8:	add	x2, x2, #0x218
   494ac:	add	x0, x0, #0xe0
   494b0:	mov	w1, #0x5f                  	// #95
   494b4:	bl	cb40 <mpfr_assert_fail@plt>
   494b8:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   494bc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   494c0:	add	x2, x2, #0x1a8
   494c4:	add	x0, x0, #0xe0
   494c8:	mov	w1, #0x43                  	// #67
   494cc:	bl	cb40 <mpfr_assert_fail@plt>

00000000000494d0 <mpfr_csch@@Base>:
   494d0:	stp	x29, x30, [sp, #-144]!
   494d4:	mov	x29, sp
   494d8:	stp	x21, x22, [sp, #32]
   494dc:	mov	x21, x1
   494e0:	mov	w22, w2
   494e4:	stp	x19, x20, [sp, #16]
   494e8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   494ec:	mov	x20, x0
   494f0:	ldr	x2, [x21, #16]
   494f4:	cmp	x2, x1
   494f8:	b.le	497ac <mpfr_csch@@Base+0x2dc>
   494fc:	stp	x27, x28, [sp, #80]
   49500:	mrs	x28, tpidr_el0
   49504:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49508:	ldr	x1, [x0, #2576]
   4950c:	add	x0, x0, #0xa10
   49510:	blr	x1
   49514:	stp	x23, x24, [sp, #48]
   49518:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4951c:	ldr	w24, [x28, x0]
   49520:	ldr	x23, [x20]
   49524:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49528:	ldr	x4, [x0, #2512]
   4952c:	add	x0, x0, #0x9d0
   49530:	blr	x4
   49534:	ldr	x1, [x21]
   49538:	add	x5, x28, x0
   4953c:	stp	x25, x26, [sp, #64]
   49540:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   49544:	ldr	x25, [x28, x0]
   49548:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4954c:	ldr	x4, [x0, #2544]
   49550:	add	x0, x0, #0x9f0
   49554:	blr	x4
   49558:	cmp	x1, x23
   4955c:	str	x6, [x5]
   49560:	csel	x1, x1, x23, ge  // ge = tcont
   49564:	ldr	x26, [x28, x0]
   49568:	str	x3, [x28, x0]
   4956c:	neg	x1, x1, lsl #1
   49570:	cmp	x2, x1
   49574:	b.le	49708 <mpfr_csch@@Base+0x238>
   49578:	cmp	x23, #0x1
   4957c:	b.eq	49860 <mpfr_csch@@Base+0x390>  // b.none
   49580:	b.le	4991c <mpfr_csch@@Base+0x44c>
   49584:	sub	x19, x23, #0x1
   49588:	mov	w0, #0x40                  	// #64
   4958c:	clz	x19, x19
   49590:	sub	w19, w0, w19
   49594:	add	x19, x23, w19, sxtw
   49598:	mov	x0, #0x40                  	// #64
   4959c:	add	x19, x19, #0x3
   495a0:	add	x27, sp, #0x70
   495a4:	mov	x1, x19
   495a8:	str	x0, [sp, #104]
   495ac:	mov	x0, x27
   495b0:	bl	ca80 <mpfr_init2@plt>
   495b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   495b8:	ldr	x1, [x0, #2576]
   495bc:	add	x0, x0, #0xa10
   495c0:	blr	x1
   495c4:	add	x1, x28, x0
   495c8:	mov	w2, #0x1                   	// #1
   495cc:	str	wzr, [x28, x0]
   495d0:	mov	x0, x27
   495d4:	str	x1, [sp, #96]
   495d8:	mov	x1, x21
   495dc:	bl	c320 <mpfr_sinh@plt>
   495e0:	ldr	x1, [sp, #96]
   495e4:	ldr	w0, [x1]
   495e8:	tbnz	w0, #1, 497fc <mpfr_csch@@Base+0x32c>
   495ec:	mov	x1, #0x1                   	// #1
   495f0:	mov	x2, x27
   495f4:	mov	x0, x27
   495f8:	mov	w3, #0x0                   	// #0
   495fc:	bl	c2f0 <mpfr_ui_div@plt>
   49600:	ldr	x0, [sp, #128]
   49604:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   49608:	cmp	x0, x1
   4960c:	b.le	49774 <mpfr_csch@@Base+0x2a4>
   49610:	ldr	x1, [sp, #112]
   49614:	cmp	w22, #0x0
   49618:	ldr	x0, [sp, #136]
   4961c:	sub	x1, x1, #0x1
   49620:	cinc	x3, x23, eq  // eq = none
   49624:	sub	x2, x19, #0x2
   49628:	asr	x1, x1, #6
   4962c:	add	x1, x1, #0x1
   49630:	bl	c370 <mpfr_round_p@plt>
   49634:	cbz	w0, 49774 <mpfr_csch@@Base+0x2a4>
   49638:	ldr	w3, [sp, #120]
   4963c:	mov	w2, w22
   49640:	mov	x1, x27
   49644:	mov	x0, x20
   49648:	bl	c6a0 <mpfr_set4@plt>
   4964c:	mov	w19, w0
   49650:	mov	x0, x27
   49654:	bl	c070 <mpfr_clear@plt>
   49658:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4965c:	ldr	x1, [x0, #2576]
   49660:	add	x0, x0, #0xa10
   49664:	blr	x1
   49668:	str	w24, [x28, x0]
   4966c:	ldr	x1, [x20, #16]
   49670:	add	x2, x28, x0
   49674:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49678:	ldr	x3, [x0, #2512]
   4967c:	add	x0, x0, #0x9d0
   49680:	blr	x3
   49684:	str	x25, [x28, x0]
   49688:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4968c:	ldr	x3, [x0, #2544]
   49690:	add	x0, x0, #0x9f0
   49694:	blr	x3
   49698:	str	x26, [x28, x0]
   4969c:	cmp	x26, x1
   496a0:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   496a4:	b.le	496dc <mpfr_csch@@Base+0x20c>
   496a8:	mov	w1, w19
   496ac:	mov	w2, w22
   496b0:	mov	x0, x20
   496b4:	bl	cb30 <mpfr_check_range@plt>
   496b8:	ldp	x23, x24, [sp, #48]
   496bc:	mov	w19, w0
   496c0:	ldp	x25, x26, [sp, #64]
   496c4:	ldp	x27, x28, [sp, #80]
   496c8:	mov	w0, w19
   496cc:	ldp	x19, x20, [sp, #16]
   496d0:	ldp	x21, x22, [sp, #32]
   496d4:	ldp	x29, x30, [sp], #144
   496d8:	ret
   496dc:	cbz	w19, 496e8 <mpfr_csch@@Base+0x218>
   496e0:	orr	w24, w24, #0x8
   496e4:	str	w24, [x2]
   496e8:	mov	w0, w19
   496ec:	ldp	x19, x20, [sp, #16]
   496f0:	ldp	x21, x22, [sp, #32]
   496f4:	ldp	x23, x24, [sp, #48]
   496f8:	ldp	x25, x26, [sp, #64]
   496fc:	ldp	x27, x28, [sp, #80]
   49700:	ldp	x29, x30, [sp], #144
   49704:	ret
   49708:	mov	x2, x21
   4970c:	mov	w3, w22
   49710:	ldr	w21, [x21, #8]
   49714:	mov	x0, x20
   49718:	mov	x1, #0x1                   	// #1
   4971c:	bl	c2f0 <mpfr_ui_div@plt>
   49720:	mov	w19, w0
   49724:	cbnz	w0, 49758 <mpfr_csch@@Base+0x288>
   49728:	cmp	w22, #0x4
   4972c:	b.eq	49874 <mpfr_csch@@Base+0x3a4>  // b.none
   49730:	cmp	w22, #0x2
   49734:	b.eq	49868 <mpfr_csch@@Base+0x398>  // b.none
   49738:	cmp	w21, #0x0
   4973c:	ccmp	w22, #0x1, #0x0, lt  // lt = tstop
   49740:	b.ne	498d4 <mpfr_csch@@Base+0x404>  // b.any
   49744:	mov	w22, #0x1                   	// #1
   49748:	mov	x0, x20
   4974c:	mov	w19, #0x1                   	// #1
   49750:	bl	c120 <mpfr_nextabove@plt>
   49754:	nop
   49758:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4975c:	ldr	x1, [x0, #2576]
   49760:	add	x0, x0, #0xa10
   49764:	blr	x1
   49768:	ldr	w0, [x28, x0]
   4976c:	orr	w24, w24, w0
   49770:	b	49658 <mpfr_csch@@Base+0x188>
   49774:	ldr	x1, [sp, #104]
   49778:	mov	x0, #0xfffffffffffffeff    	// #-257
   4977c:	movk	x0, #0x7fff, lsl #48
   49780:	sub	x0, x0, x19
   49784:	cmp	x0, x1
   49788:	b.lt	498fc <mpfr_csch@@Base+0x42c>  // b.tstop
   4978c:	add	x19, x19, x1
   49790:	mov	x0, x27
   49794:	mov	x1, x19
   49798:	add	x2, x19, x19, lsr #63
   4979c:	asr	x2, x2, #1
   497a0:	str	x2, [sp, #104]
   497a4:	bl	bed0 <mpfr_set_prec@plt>
   497a8:	b	495b4 <mpfr_csch@@Base+0xe4>
   497ac:	mov	x0, #0x2                   	// #2
   497b0:	movk	x0, #0x8000, lsl #48
   497b4:	cmp	x2, x0
   497b8:	b.eq	498a4 <mpfr_csch@@Base+0x3d4>  // b.none
   497bc:	ldr	w3, [x21, #8]
   497c0:	cmp	x2, x1
   497c4:	b.eq	49890 <mpfr_csch@@Base+0x3c0>  // b.none
   497c8:	mrs	x2, tpidr_el0
   497cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   497d0:	ldr	x4, [x0, #2576]
   497d4:	add	x0, x0, #0xa10
   497d8:	blr	x4
   497dc:	add	x0, x2, x0
   497e0:	str	x1, [x20, #16]
   497e4:	mov	w19, #0x0                   	// #0
   497e8:	str	w3, [x20, #8]
   497ec:	ldr	w1, [x0]
   497f0:	orr	w1, w1, #0x20
   497f4:	str	w1, [x0]
   497f8:	b	496c8 <mpfr_csch@@Base+0x1f8>
   497fc:	ldr	w19, [sp, #120]
   49800:	mov	x0, x27
   49804:	bl	c070 <mpfr_clear@plt>
   49808:	ldr	x0, [sp, #96]
   4980c:	mov	w2, w19
   49810:	str	w24, [x0]
   49814:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49818:	ldr	x1, [x0, #2512]
   4981c:	add	x0, x0, #0x9d0
   49820:	blr	x1
   49824:	str	x25, [x28, x0]
   49828:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4982c:	ldr	x1, [x0, #2544]
   49830:	add	x0, x0, #0x9f0
   49834:	blr	x1
   49838:	cmp	w22, #0x0
   4983c:	str	x26, [x28, x0]
   49840:	csinc	w1, w22, wzr, ne  // ne = any
   49844:	mov	x0, x20
   49848:	bl	c3c0 <mpfr_underflow@plt>
   4984c:	mov	w19, w0
   49850:	ldp	x23, x24, [sp, #48]
   49854:	ldp	x25, x26, [sp, #64]
   49858:	ldp	x27, x28, [sp, #80]
   4985c:	b	496c8 <mpfr_csch@@Base+0x1f8>
   49860:	mov	x19, x23
   49864:	b	49598 <mpfr_csch@@Base+0xc8>
   49868:	mov	w19, #0x1                   	// #1
   4986c:	tbz	w21, #31, 49758 <mpfr_csch@@Base+0x288>
   49870:	b	49748 <mpfr_csch@@Base+0x278>
   49874:	cmp	w21, #0x0
   49878:	mov	w19, #0x1                   	// #1
   4987c:	mov	w22, #0x3                   	// #3
   49880:	mov	w0, #0x2                   	// #2
   49884:	csinv	w19, w19, wzr, gt
   49888:	csel	w22, w22, w0, le
   4988c:	b	49758 <mpfr_csch@@Base+0x288>
   49890:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   49894:	mov	w19, #0x0                   	// #0
   49898:	str	w3, [x20, #8]
   4989c:	str	x0, [x20, #16]
   498a0:	b	496c8 <mpfr_csch@@Base+0x1f8>
   498a4:	mrs	x1, tpidr_el0
   498a8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   498ac:	ldr	x3, [x0, #2576]
   498b0:	add	x0, x0, #0xa10
   498b4:	blr	x3
   498b8:	add	x0, x1, x0
   498bc:	mov	w19, #0x0                   	// #0
   498c0:	str	x2, [x20, #16]
   498c4:	ldr	w1, [x0]
   498c8:	orr	w1, w1, #0x4
   498cc:	str	w1, [x0]
   498d0:	b	496c8 <mpfr_csch@@Base+0x1f8>
   498d4:	and	w0, w22, #0xfffffffd
   498d8:	mov	w19, w21
   498dc:	cmp	w0, #0x1
   498e0:	b.ne	49758 <mpfr_csch@@Base+0x288>  // b.any
   498e4:	cmp	w21, #0x0
   498e8:	b.le	49914 <mpfr_csch@@Base+0x444>
   498ec:	mov	x0, x20
   498f0:	mov	w19, #0xffffffff            	// #-1
   498f4:	bl	bdd0 <mpfr_nextbelow@plt>
   498f8:	b	49758 <mpfr_csch@@Base+0x288>
   498fc:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   49900:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   49904:	add	x2, x2, #0x218
   49908:	add	x0, x0, #0xe0
   4990c:	mov	w1, #0x5f                  	// #95
   49910:	bl	cb40 <mpfr_assert_fail@plt>
   49914:	mov	w19, #0xffffffff            	// #-1
   49918:	b	49758 <mpfr_csch@@Base+0x288>
   4991c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   49920:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   49924:	add	x2, x2, #0x1a8
   49928:	add	x0, x0, #0xe0
   4992c:	mov	w1, #0x43                  	// #67
   49930:	bl	cb40 <mpfr_assert_fail@plt>
   49934:	nop

0000000000049938 <mpfr_coth@@Base>:
   49938:	stp	x29, x30, [sp, #-144]!
   4993c:	mov	x29, sp
   49940:	stp	x21, x22, [sp, #32]
   49944:	mov	x21, x1
   49948:	mov	w22, w2
   4994c:	stp	x19, x20, [sp, #16]
   49950:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   49954:	mov	x20, x0
   49958:	ldr	x2, [x21, #16]
   4995c:	cmp	x2, x1
   49960:	b.le	49c48 <mpfr_coth@@Base+0x310>
   49964:	stp	x27, x28, [sp, #80]
   49968:	mrs	x28, tpidr_el0
   4996c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49970:	ldr	x1, [x0, #2576]
   49974:	add	x0, x0, #0xa10
   49978:	blr	x1
   4997c:	stp	x23, x24, [sp, #48]
   49980:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   49984:	ldr	w24, [x28, x0]
   49988:	ldr	x23, [x20]
   4998c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49990:	ldr	x4, [x0, #2512]
   49994:	add	x0, x0, #0x9d0
   49998:	blr	x4
   4999c:	ldr	x1, [x21]
   499a0:	add	x5, x28, x0
   499a4:	stp	x25, x26, [sp, #64]
   499a8:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   499ac:	ldr	x25, [x28, x0]
   499b0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   499b4:	ldr	x4, [x0, #2544]
   499b8:	add	x0, x0, #0x9f0
   499bc:	blr	x4
   499c0:	cmp	x1, x23
   499c4:	str	x6, [x5]
   499c8:	csel	x1, x1, x23, ge  // ge = tcont
   499cc:	ldr	x26, [x28, x0]
   499d0:	str	x3, [x28, x0]
   499d4:	neg	x1, x1, lsl #1
   499d8:	cmp	x2, x1
   499dc:	b.lt	49b90 <mpfr_coth@@Base+0x258>  // b.tstop
   499e0:	cmp	x23, #0x1
   499e4:	b.eq	49cfc <mpfr_coth@@Base+0x3c4>  // b.none
   499e8:	b.le	49df8 <mpfr_coth@@Base+0x4c0>
   499ec:	sub	x19, x23, #0x1
   499f0:	mov	w0, #0x40                  	// #64
   499f4:	clz	x19, x19
   499f8:	sub	w19, w0, w19
   499fc:	add	x19, x23, w19, sxtw
   49a00:	mov	x0, #0x40                  	// #64
   49a04:	add	x19, x19, #0x3
   49a08:	add	x27, sp, #0x70
   49a0c:	mov	x1, x19
   49a10:	str	x0, [sp, #104]
   49a14:	mov	x0, x27
   49a18:	bl	ca80 <mpfr_init2@plt>
   49a1c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49a20:	ldr	x1, [x0, #2576]
   49a24:	add	x0, x0, #0xa10
   49a28:	blr	x1
   49a2c:	add	x1, x28, x0
   49a30:	mov	w2, #0x1                   	// #1
   49a34:	str	wzr, [x28, x0]
   49a38:	mov	x0, x27
   49a3c:	str	x1, [sp, #96]
   49a40:	mov	x1, x21
   49a44:	bl	bb00 <mpfr_tanh@plt>
   49a48:	ldr	x1, [sp, #96]
   49a4c:	ldr	w0, [x1]
   49a50:	tbnz	w0, #1, 49c98 <mpfr_coth@@Base+0x360>
   49a54:	mov	x1, #0x1                   	// #1
   49a58:	mov	x2, x27
   49a5c:	mov	x0, x27
   49a60:	mov	w3, #0x0                   	// #0
   49a64:	bl	c2f0 <mpfr_ui_div@plt>
   49a68:	ldr	x0, [sp, #128]
   49a6c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   49a70:	cmp	x0, x1
   49a74:	b.le	49c10 <mpfr_coth@@Base+0x2d8>
   49a78:	ldr	x1, [sp, #112]
   49a7c:	cmp	w22, #0x0
   49a80:	ldr	x0, [sp, #136]
   49a84:	sub	x1, x1, #0x1
   49a88:	cinc	x3, x23, eq  // eq = none
   49a8c:	sub	x2, x19, #0x2
   49a90:	asr	x1, x1, #6
   49a94:	add	x1, x1, #0x1
   49a98:	bl	c370 <mpfr_round_p@plt>
   49a9c:	cbz	w0, 49c04 <mpfr_coth@@Base+0x2cc>
   49aa0:	ldr	w3, [sp, #120]
   49aa4:	mov	w2, w22
   49aa8:	mov	x1, x27
   49aac:	mov	x0, x20
   49ab0:	bl	c6a0 <mpfr_set4@plt>
   49ab4:	mov	w19, w0
   49ab8:	mov	x0, x27
   49abc:	bl	c070 <mpfr_clear@plt>
   49ac0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49ac4:	ldr	x1, [x0, #2576]
   49ac8:	add	x0, x0, #0xa10
   49acc:	blr	x1
   49ad0:	str	w24, [x28, x0]
   49ad4:	ldr	x1, [x20, #16]
   49ad8:	add	x2, x28, x0
   49adc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49ae0:	ldr	x3, [x0, #2512]
   49ae4:	add	x0, x0, #0x9d0
   49ae8:	blr	x3
   49aec:	str	x25, [x28, x0]
   49af0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49af4:	ldr	x3, [x0, #2544]
   49af8:	add	x0, x0, #0x9f0
   49afc:	blr	x3
   49b00:	str	x26, [x28, x0]
   49b04:	cmp	x26, x1
   49b08:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   49b0c:	b.le	49b44 <mpfr_coth@@Base+0x20c>
   49b10:	mov	w1, w19
   49b14:	mov	w2, w22
   49b18:	mov	x0, x20
   49b1c:	bl	cb30 <mpfr_check_range@plt>
   49b20:	ldp	x23, x24, [sp, #48]
   49b24:	mov	w19, w0
   49b28:	ldp	x25, x26, [sp, #64]
   49b2c:	ldp	x27, x28, [sp, #80]
   49b30:	mov	w0, w19
   49b34:	ldp	x19, x20, [sp, #16]
   49b38:	ldp	x21, x22, [sp, #32]
   49b3c:	ldp	x29, x30, [sp], #144
   49b40:	ret
   49b44:	cbz	w19, 49b70 <mpfr_coth@@Base+0x238>
   49b48:	orr	w24, w24, #0x8
   49b4c:	mov	w0, w19
   49b50:	ldp	x25, x26, [sp, #64]
   49b54:	ldp	x27, x28, [sp, #80]
   49b58:	str	w24, [x2]
   49b5c:	ldp	x19, x20, [sp, #16]
   49b60:	ldp	x21, x22, [sp, #32]
   49b64:	ldp	x23, x24, [sp, #48]
   49b68:	ldp	x29, x30, [sp], #144
   49b6c:	ret
   49b70:	mov	w0, w19
   49b74:	ldp	x19, x20, [sp, #16]
   49b78:	ldp	x21, x22, [sp, #32]
   49b7c:	ldp	x23, x24, [sp, #48]
   49b80:	ldp	x25, x26, [sp, #64]
   49b84:	ldp	x27, x28, [sp, #80]
   49b88:	ldp	x29, x30, [sp], #144
   49b8c:	ret
   49b90:	mov	x2, x21
   49b94:	mov	w3, w22
   49b98:	ldr	w21, [x21, #8]
   49b9c:	mov	x0, x20
   49ba0:	mov	x1, #0x1                   	// #1
   49ba4:	bl	c2f0 <mpfr_ui_div@plt>
   49ba8:	mov	w19, w0
   49bac:	cbnz	w0, 49be8 <mpfr_coth@@Base+0x2b0>
   49bb0:	cmp	w22, #0x4
   49bb4:	b.eq	49d6c <mpfr_coth@@Base+0x434>  // b.none
   49bb8:	cmp	w22, #0x2
   49bbc:	b.eq	49d4c <mpfr_coth@@Base+0x414>  // b.none
   49bc0:	cmp	w22, #0x3
   49bc4:	neg	w19, w21
   49bc8:	b.ne	49be8 <mpfr_coth@@Base+0x2b0>  // b.any
   49bcc:	nop
   49bd0:	mov	w19, #0xffffffff            	// #-1
   49bd4:	mov	w22, #0x3                   	// #3
   49bd8:	tbz	w21, #31, 49be8 <mpfr_coth@@Base+0x2b0>
   49bdc:	mov	x0, x20
   49be0:	bl	bdd0 <mpfr_nextbelow@plt>
   49be4:	nop
   49be8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49bec:	ldr	x1, [x0, #2576]
   49bf0:	add	x0, x0, #0xa10
   49bf4:	blr	x1
   49bf8:	ldr	w0, [x28, x0]
   49bfc:	orr	w24, w24, w0
   49c00:	b	49ac0 <mpfr_coth@@Base+0x188>
   49c04:	ldr	x0, [sp, #128]
   49c08:	cmp	x0, #0x1
   49c0c:	b.eq	49d04 <mpfr_coth@@Base+0x3cc>  // b.none
   49c10:	ldr	x1, [sp, #104]
   49c14:	mov	x0, #0xfffffffffffffeff    	// #-257
   49c18:	movk	x0, #0x7fff, lsl #48
   49c1c:	sub	x0, x0, x19
   49c20:	cmp	x0, x1
   49c24:	b.lt	49de0 <mpfr_coth@@Base+0x4a8>  // b.tstop
   49c28:	add	x19, x19, x1
   49c2c:	mov	x0, x27
   49c30:	mov	x1, x19
   49c34:	add	x2, x19, x19, lsr #63
   49c38:	asr	x2, x2, #1
   49c3c:	str	x2, [sp, #104]
   49c40:	bl	bed0 <mpfr_set_prec@plt>
   49c44:	b	49a1c <mpfr_coth@@Base+0xe4>
   49c48:	mov	x3, #0x2                   	// #2
   49c4c:	movk	x3, #0x8000, lsl #48
   49c50:	cmp	x2, x3
   49c54:	b.eq	49db0 <mpfr_coth@@Base+0x478>  // b.none
   49c58:	ldr	w3, [x21, #8]
   49c5c:	cmp	x2, x1
   49c60:	b.eq	49d78 <mpfr_coth@@Base+0x440>  // b.none
   49c64:	mrs	x2, tpidr_el0
   49c68:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49c6c:	ldr	x4, [x0, #2576]
   49c70:	add	x0, x0, #0xa10
   49c74:	blr	x4
   49c78:	add	x0, x2, x0
   49c7c:	str	x1, [x20, #16]
   49c80:	mov	w19, #0x0                   	// #0
   49c84:	str	w3, [x20, #8]
   49c88:	ldr	w1, [x0]
   49c8c:	orr	w1, w1, #0x20
   49c90:	str	w1, [x0]
   49c94:	b	49b30 <mpfr_coth@@Base+0x1f8>
   49c98:	ldr	w19, [sp, #120]
   49c9c:	mov	x0, x27
   49ca0:	bl	c070 <mpfr_clear@plt>
   49ca4:	ldr	x0, [sp, #96]
   49ca8:	mov	w2, w19
   49cac:	str	w24, [x0]
   49cb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49cb4:	ldr	x1, [x0, #2512]
   49cb8:	add	x0, x0, #0x9d0
   49cbc:	blr	x1
   49cc0:	str	x25, [x28, x0]
   49cc4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49cc8:	ldr	x1, [x0, #2544]
   49ccc:	add	x0, x0, #0x9f0
   49cd0:	blr	x1
   49cd4:	cmp	w22, #0x0
   49cd8:	str	x26, [x28, x0]
   49cdc:	csinc	w1, w22, wzr, ne  // ne = any
   49ce0:	mov	x0, x20
   49ce4:	bl	c3c0 <mpfr_underflow@plt>
   49ce8:	mov	w19, w0
   49cec:	ldp	x23, x24, [sp, #48]
   49cf0:	ldp	x25, x26, [sp, #64]
   49cf4:	ldp	x27, x28, [sp, #80]
   49cf8:	b	49b30 <mpfr_coth@@Base+0x1f8>
   49cfc:	mov	x19, x23
   49d00:	b	49a00 <mpfr_coth@@Base+0xc8>
   49d04:	ldrsw	x2, [sp, #120]
   49d08:	mov	x1, x27
   49d0c:	mov	x0, x27
   49d10:	mov	w3, #0x0                   	// #0
   49d14:	bl	c060 <mpfr_sub_si@plt>
   49d18:	ldr	x0, [sp, #128]
   49d1c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   49d20:	cmp	x0, x1
   49d24:	b.eq	49d34 <mpfr_coth@@Base+0x3fc>  // b.none
   49d28:	neg	x1, x23
   49d2c:	cmp	x0, x1
   49d30:	b.gt	49c10 <mpfr_coth@@Base+0x2d8>
   49d34:	ldrsw	x2, [sp, #120]
   49d38:	mov	x1, x27
   49d3c:	mov	x0, x27
   49d40:	mov	w3, #0x0                   	// #0
   49d44:	bl	c7f0 <mpfr_add_si@plt>
   49d48:	b	49aa0 <mpfr_coth@@Base+0x168>
   49d4c:	cmp	w21, #0x0
   49d50:	mov	w19, #0x1                   	// #1
   49d54:	b.le	49be8 <mpfr_coth@@Base+0x2b0>
   49d58:	mov	x0, x20
   49d5c:	mov	w19, #0x1                   	// #1
   49d60:	mov	w22, #0x2                   	// #2
   49d64:	bl	c120 <mpfr_nextabove@plt>
   49d68:	b	49be8 <mpfr_coth@@Base+0x2b0>
   49d6c:	cmp	w21, #0x0
   49d70:	b.gt	49d58 <mpfr_coth@@Base+0x420>
   49d74:	b	49bd0 <mpfr_coth@@Base+0x298>
   49d78:	cmp	w3, #0x0
   49d7c:	b.le	49d98 <mpfr_coth@@Base+0x460>
   49d80:	mov	w3, w22
   49d84:	mov	x2, #0x0                   	// #0
   49d88:	mov	x1, #0x1                   	// #1
   49d8c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   49d90:	mov	w19, w0
   49d94:	b	49b30 <mpfr_coth@@Base+0x1f8>
   49d98:	mov	w3, w22
   49d9c:	mov	x2, #0x0                   	// #0
   49da0:	mov	x1, #0xffffffffffffffff    	// #-1
   49da4:	bl	ba80 <mpfr_set_si_2exp@plt>
   49da8:	mov	w19, w0
   49dac:	b	49b30 <mpfr_coth@@Base+0x1f8>
   49db0:	mrs	x1, tpidr_el0
   49db4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49db8:	ldr	x3, [x0, #2576]
   49dbc:	add	x0, x0, #0xa10
   49dc0:	blr	x3
   49dc4:	add	x0, x1, x0
   49dc8:	mov	w19, #0x0                   	// #0
   49dcc:	str	x2, [x20, #16]
   49dd0:	ldr	w1, [x0]
   49dd4:	orr	w1, w1, #0x4
   49dd8:	str	w1, [x0]
   49ddc:	b	49b30 <mpfr_coth@@Base+0x1f8>
   49de0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   49de4:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   49de8:	add	x2, x2, #0x218
   49dec:	add	x0, x0, #0xe0
   49df0:	mov	w1, #0x5f                  	// #95
   49df4:	bl	cb40 <mpfr_assert_fail@plt>
   49df8:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   49dfc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   49e00:	add	x2, x2, #0x1a8
   49e04:	add	x0, x0, #0xe0
   49e08:	mov	w1, #0x43                  	// #67
   49e0c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000049e10 <mpfr_round_near_x@@Base>:
   49e10:	stp	x29, x30, [sp, #-96]!
   49e14:	cmp	w4, #0x5
   49e18:	mov	x29, sp
   49e1c:	stp	x19, x20, [sp, #16]
   49e20:	csinc	w19, w4, wzr, ne  // ne = any
   49e24:	ldr	x4, [x0]
   49e28:	stp	x21, x22, [sp, #32]
   49e2c:	mov	x22, x0
   49e30:	stp	x23, x24, [sp, #48]
   49e34:	add	x0, x4, #0x1
   49e38:	mov	w23, w3
   49e3c:	stp	x25, x26, [sp, #64]
   49e40:	mov	x21, x1
   49e44:	cmp	x0, x2
   49e48:	ldr	x3, [x1, #16]
   49e4c:	b.cs	4a044 <mpfr_round_near_x@@Base+0x234>  // b.hs, b.nlast
   49e50:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49e54:	ldr	x5, [x0, #2576]
   49e58:	add	x0, x0, #0xa10
   49e5c:	blr	x5
   49e60:	mrs	x24, tpidr_el0
   49e64:	ldr	x5, [x1]
   49e68:	ldr	w20, [x24, x0]
   49e6c:	cmp	x5, x2
   49e70:	b.cs	4a00c <mpfr_round_near_x@@Base+0x1fc>  // b.hs, b.nlast
   49e74:	ldr	w25, [x21, #8]
   49e78:	str	x3, [x22, #16]
   49e7c:	sub	x8, x5, #0x1
   49e80:	sub	x0, x4, #0x1
   49e84:	ldr	x9, [x21, #24]
   49e88:	str	w25, [x22, #8]
   49e8c:	cmp	x5, x4
   49e90:	asr	x8, x8, #6
   49e94:	asr	x7, x0, #6
   49e98:	ldr	x21, [x22, #24]
   49e9c:	b.le	4a244 <mpfr_round_near_x@@Base+0x434>
   49ea0:	sub	x3, x8, x7
   49ea4:	str	x27, [sp, #80]
   49ea8:	neg	w4, w4
   49eac:	add	x2, x7, #0x1
   49eb0:	ands	w4, w4, #0x3f
   49eb4:	add	x1, x9, x3, lsl #3
   49eb8:	b.eq	4a27c <mpfr_round_near_x@@Base+0x46c>  // b.none
   49ebc:	ldr	x0, [x9, x3, lsl #3]
   49ec0:	sub	w4, w4, #0x1
   49ec4:	mov	x5, #0x1                   	// #1
   49ec8:	cmp	w19, #0x0
   49ecc:	lsl	x5, x5, x4
   49ed0:	and	x10, x0, x5
   49ed4:	sub	x5, x5, #0x1
   49ed8:	ccmp	x10, #0x0, #0x4, ne  // ne = any
   49edc:	and	x5, x5, x0
   49ee0:	b.ne	49f10 <mpfr_round_near_x@@Base+0x100>  // b.any
   49ee4:	cmp	x5, #0x0
   49ee8:	mov	x6, x3
   49eec:	ccmp	x3, #0x0, #0x4, eq  // eq = none
   49ef0:	b.eq	49f10 <mpfr_round_near_x@@Base+0x100>  // b.none
   49ef4:	mvn	x0, x3
   49ef8:	add	x0, x1, x0, lsl #3
   49efc:	nop
   49f00:	ldr	x5, [x0, x6, lsl #3]
   49f04:	subs	x6, x6, #0x1
   49f08:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   49f0c:	b.eq	49f00 <mpfr_round_near_x@@Base+0xf0>  // b.none
   49f10:	mov	x27, #0x2                   	// #2
   49f14:	lsl	x27, x27, x4
   49f18:	cbnz	w19, 4a064 <mpfr_round_near_x@@Base+0x254>
   49f1c:	cbz	x10, 4a0e8 <mpfr_round_near_x@@Base+0x2d8>
   49f20:	cmp	x5, #0x0
   49f24:	eor	w0, w23, #0x1
   49f28:	cset	w4, eq  // eq = none
   49f2c:	neg	w26, w25
   49f30:	tst	w0, w4
   49f34:	b.ne	4a088 <mpfr_round_near_x@@Base+0x278>  // b.any
   49f38:	ldr	x0, [x9, x3, lsl #3]
   49f3c:	adds	x0, x27, x0
   49f40:	str	x0, [x21]
   49f44:	cset	x3, cs  // cs = hs, nlast
   49f48:	b.cc	4a128 <mpfr_round_near_x@@Base+0x318>  // b.lo, b.ul, b.last
   49f4c:	mov	x0, #0x1                   	// #1
   49f50:	b	49f6c <mpfr_round_near_x@@Base+0x15c>
   49f54:	ldr	x5, [x1, x0, lsl #3]
   49f58:	add	x3, x0, #0x1
   49f5c:	add	x5, x5, #0x1
   49f60:	str	x5, [x21, x0, lsl #3]
   49f64:	cbnz	x5, 4a2c4 <mpfr_round_near_x@@Base+0x4b4>
   49f68:	mov	x0, x3
   49f6c:	cmp	x2, x0
   49f70:	b.gt	49f54 <mpfr_round_near_x@@Base+0x144>
   49f74:	add	x2, x21, x2, lsl #3
   49f78:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   49f7c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49f80:	ldr	x3, [x0, #2544]
   49f84:	add	x0, x0, #0x9f0
   49f88:	blr	x3
   49f8c:	stur	x1, [x2, #-8]
   49f90:	ldr	x1, [x22, #16]
   49f94:	ldr	x2, [x24, x0]
   49f98:	add	x0, x1, #0x1
   49f9c:	str	x0, [x22, #16]
   49fa0:	cmp	x0, x2
   49fa4:	b.gt	4a38c <mpfr_round_near_x@@Base+0x57c>
   49fa8:	ldr	x0, [x21]
   49fac:	neg	x4, x27
   49fb0:	and	x0, x4, x0
   49fb4:	str	x0, [x21]
   49fb8:	mov	w26, w25
   49fbc:	cbz	w26, 4a0b0 <mpfr_round_near_x@@Base+0x2a0>
   49fc0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49fc4:	ldr	x1, [x0, #2576]
   49fc8:	add	x0, x0, #0xa10
   49fcc:	blr	x1
   49fd0:	ldr	w1, [x24, x0]
   49fd4:	ldr	x27, [sp, #80]
   49fd8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   49fdc:	ldr	x2, [x0, #2576]
   49fe0:	add	x0, x0, #0xa10
   49fe4:	blr	x2
   49fe8:	orr	w1, w1, #0x8
   49fec:	str	w1, [x24, x0]
   49ff0:	mov	w0, w26
   49ff4:	ldp	x19, x20, [sp, #16]
   49ff8:	ldp	x21, x22, [sp, #32]
   49ffc:	ldp	x23, x24, [sp, #48]
   4a000:	ldp	x25, x26, [sp, #64]
   4a004:	ldp	x29, x30, [sp], #96
   4a008:	ret
   4a00c:	ldr	x0, [x21, #24]
   4a010:	sub	x1, x5, #0x1
   4a014:	cmp	w19, #0x0
   4a018:	asr	x1, x1, #6
   4a01c:	cinc	x3, x4, eq  // eq = none
   4a020:	add	x1, x1, #0x1
   4a024:	bl	c370 <mpfr_round_p@plt>
   4a028:	cbz	w0, 4a044 <mpfr_round_near_x@@Base+0x234>
   4a02c:	ldr	x0, [x21, #16]
   4a030:	ldr	w25, [x21, #8]
   4a034:	ldr	x5, [x21]
   4a038:	str	x0, [x22, #16]
   4a03c:	ldr	x4, [x22]
   4a040:	b	49e7c <mpfr_round_near_x@@Base+0x6c>
   4a044:	mov	w26, #0x0                   	// #0
   4a048:	mov	w0, w26
   4a04c:	ldp	x19, x20, [sp, #16]
   4a050:	ldp	x21, x22, [sp, #32]
   4a054:	ldp	x23, x24, [sp, #48]
   4a058:	ldp	x25, x26, [sp, #64]
   4a05c:	ldp	x29, x30, [sp], #96
   4a060:	ret
   4a064:	orr	x5, x5, x10
   4a068:	cmp	w19, #0x1
   4a06c:	b.eq	4a0e8 <mpfr_round_near_x@@Base+0x2d8>  // b.none
   4a070:	add	w0, w19, w25, lsr #31
   4a074:	cmp	w0, #0x3
   4a078:	b.eq	4a0e8 <mpfr_round_near_x@@Base+0x2d8>  // b.none
   4a07c:	cbnz	x5, 49f38 <mpfr_round_near_x@@Base+0x128>
   4a080:	mov	w26, #0x0                   	// #0
   4a084:	nop
   4a088:	cmp	x21, x1
   4a08c:	b.eq	4a09c <mpfr_round_near_x@@Base+0x28c>  // b.none
   4a090:	lsl	x2, x2, #3
   4a094:	mov	x0, x21
   4a098:	bl	ba10 <memcpy@plt>
   4a09c:	ldr	x0, [x21]
   4a0a0:	neg	x4, x27
   4a0a4:	and	x4, x0, x4
   4a0a8:	str	x4, [x21]
   4a0ac:	cbnz	w26, 49fc0 <mpfr_round_near_x@@Base+0x1b0>
   4a0b0:	ldr	x27, [sp, #80]
   4a0b4:	cbnz	w23, 4a0f4 <mpfr_round_near_x@@Base+0x2e4>
   4a0b8:	cmp	w19, #0x1
   4a0bc:	b.eq	4a1cc <mpfr_round_near_x@@Base+0x3bc>  // b.none
   4a0c0:	add	w19, w19, w25, lsr #31
   4a0c4:	cmp	w19, #0x3
   4a0c8:	b.eq	4a1cc <mpfr_round_near_x@@Base+0x3bc>  // b.none
   4a0cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4a0d0:	ldr	x1, [x0, #2576]
   4a0d4:	add	x0, x0, #0xa10
   4a0d8:	blr	x1
   4a0dc:	mov	w26, w25
   4a0e0:	ldr	w1, [x24, x0]
   4a0e4:	b	49fd8 <mpfr_round_near_x@@Base+0x1c8>
   4a0e8:	cmp	x5, #0x0
   4a0ec:	csneg	w26, wzr, w25, eq  // eq = none
   4a0f0:	b	4a088 <mpfr_round_near_x@@Base+0x278>
   4a0f4:	cmp	w19, #0x4
   4a0f8:	b.eq	4a20c <mpfr_round_near_x@@Base+0x3fc>  // b.none
   4a0fc:	mvn	w0, w25
   4a100:	add	w19, w19, w0, lsr #31
   4a104:	cmp	w19, #0x3
   4a108:	b.eq	4a20c <mpfr_round_near_x@@Base+0x3fc>  // b.none
   4a10c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4a110:	ldr	x1, [x0, #2576]
   4a114:	add	x0, x0, #0xa10
   4a118:	blr	x1
   4a11c:	neg	w26, w25
   4a120:	ldr	w1, [x24, x0]
   4a124:	b	49fd8 <mpfr_round_near_x@@Base+0x1c8>
   4a128:	cmp	x21, x1
   4a12c:	b.eq	49fac <mpfr_round_near_x@@Base+0x19c>  // b.none
   4a130:	cmp	x2, #0x1
   4a134:	b.eq	49fac <mpfr_round_near_x@@Base+0x19c>  // b.none
   4a138:	sub	x5, x8, x7
   4a13c:	mov	x0, #0x1                   	// #1
   4a140:	add	x5, x5, #0x3
   4a144:	sub	x4, x0, x7
   4a148:	add	x8, x4, x8
   4a14c:	add	x4, x21, #0x8
   4a150:	add	x5, x9, x5, lsl #3
   4a154:	add	x6, x21, #0x18
   4a158:	cmp	x4, x5
   4a15c:	add	x9, x9, x8, lsl #3
   4a160:	ccmp	x9, x6, #0x2, cc  // cc = lo, ul, last
   4a164:	sub	x5, x7, #0x1
   4a168:	ccmp	x5, #0x9, #0x0, cs  // cs = hs, nlast
   4a16c:	b.ls	4a1a0 <mpfr_round_near_x@@Base+0x390>  // b.plast
   4a170:	lsr	x0, x7, #1
   4a174:	lsl	x0, x0, #4
   4a178:	ldr	q0, [x9, x3]
   4a17c:	str	q0, [x4, x3]
   4a180:	add	x3, x3, #0x10
   4a184:	cmp	x3, x0
   4a188:	b.ne	4a178 <mpfr_round_near_x@@Base+0x368>  // b.any
   4a18c:	orr	x0, x7, #0x1
   4a190:	tbz	w7, #0, 49fa8 <mpfr_round_near_x@@Base+0x198>
   4a194:	ldr	x1, [x1, x0, lsl #3]
   4a198:	str	x1, [x21, x0, lsl #3]
   4a19c:	b	49fa8 <mpfr_round_near_x@@Base+0x198>
   4a1a0:	ldr	x3, [x1, x0, lsl #3]
   4a1a4:	str	x3, [x21, x0, lsl #3]
   4a1a8:	add	x0, x0, #0x1
   4a1ac:	cmp	x2, x0
   4a1b0:	b.eq	49fa8 <mpfr_round_near_x@@Base+0x198>  // b.none
   4a1b4:	ldr	x3, [x1, x0, lsl #3]
   4a1b8:	str	x3, [x21, x0, lsl #3]
   4a1bc:	add	x0, x0, #0x1
   4a1c0:	cmp	x2, x0
   4a1c4:	b.ne	4a1a0 <mpfr_round_near_x@@Base+0x390>  // b.any
   4a1c8:	b	49fa8 <mpfr_round_near_x@@Base+0x198>
   4a1cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4a1d0:	ldr	x1, [x0, #2576]
   4a1d4:	add	x0, x0, #0xa10
   4a1d8:	blr	x1
   4a1dc:	add	x19, x24, x0
   4a1e0:	str	w20, [x24, x0]
   4a1e4:	mov	x0, x22
   4a1e8:	bl	c460 <mpfr_nexttozero@plt>
   4a1ec:	neg	w26, w25
   4a1f0:	ldr	x1, [x22, #16]
   4a1f4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4a1f8:	cmp	x1, x0
   4a1fc:	ldr	w1, [x19]
   4a200:	b.ne	49fd8 <mpfr_round_near_x@@Base+0x1c8>  // b.any
   4a204:	orr	w1, w1, #0x1
   4a208:	b	49fd8 <mpfr_round_near_x@@Base+0x1c8>
   4a20c:	mov	x0, x22
   4a210:	bl	c670 <mpfr_nexttoinf@plt>
   4a214:	ldr	x1, [x22, #16]
   4a218:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a21c:	cmp	x1, x0
   4a220:	b.ne	4a0cc <mpfr_round_near_x@@Base+0x2bc>  // b.any
   4a224:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4a228:	ldr	x1, [x0, #2576]
   4a22c:	add	x0, x0, #0xa10
   4a230:	blr	x1
   4a234:	ldr	w1, [x24, x0]
   4a238:	mov	w26, w25
   4a23c:	orr	w1, w1, #0x2
   4a240:	b	49fd8 <mpfr_round_near_x@@Base+0x1c8>
   4a244:	sub	x0, x7, x8
   4a248:	add	x8, x8, #0x1
   4a24c:	lsl	x26, x0, #3
   4a250:	add	x0, x21, x26
   4a254:	cmp	x0, x9
   4a258:	b.eq	4a268 <mpfr_round_near_x@@Base+0x458>  // b.none
   4a25c:	lsl	x2, x8, #3
   4a260:	mov	x1, x9
   4a264:	bl	ba10 <memcpy@plt>
   4a268:	mov	x2, x26
   4a26c:	mov	x0, x21
   4a270:	mov	w1, #0x0                   	// #0
   4a274:	bl	c110 <memset@plt>
   4a278:	b	4a0b4 <mpfr_round_near_x@@Base+0x2a4>
   4a27c:	ldur	x5, [x1, #-8]
   4a280:	cmp	w19, #0x0
   4a284:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   4a288:	and	x10, x5, #0x8000000000000000
   4a28c:	and	x4, x5, #0x7fffffffffffffff
   4a290:	b.lt	4a378 <mpfr_round_near_x@@Base+0x568>  // b.tstop
   4a294:	subs	x0, x3, #0x1
   4a298:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   4a29c:	b.ne	4a380 <mpfr_round_near_x@@Base+0x570>  // b.any
   4a2a0:	mvn	x4, x3
   4a2a4:	add	x4, x1, x4, lsl #3
   4a2a8:	ldr	x5, [x4, x0, lsl #3]
   4a2ac:	subs	x0, x0, #0x1
   4a2b0:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   4a2b4:	b.eq	4a2a8 <mpfr_round_near_x@@Base+0x498>  // b.none
   4a2b8:	mov	x27, #0x1                   	// #1
   4a2bc:	cbz	w19, 49f1c <mpfr_round_near_x@@Base+0x10c>
   4a2c0:	b	4a064 <mpfr_round_near_x@@Base+0x254>
   4a2c4:	cmp	x21, x1
   4a2c8:	b.eq	49fa8 <mpfr_round_near_x@@Base+0x198>  // b.none
   4a2cc:	cmp	x0, x7
   4a2d0:	b.ge	49fa8 <mpfr_round_near_x@@Base+0x198>  // b.tcont
   4a2d4:	add	x0, x0, #0x3
   4a2d8:	sub	x6, x7, x3
   4a2dc:	lsl	x0, x0, #3
   4a2e0:	sub	x4, x0, #0x10
   4a2e4:	add	x8, x21, x0
   4a2e8:	add	x5, x1, x4
   4a2ec:	add	x0, x1, x0
   4a2f0:	cmp	x5, x8
   4a2f4:	add	x4, x21, x4
   4a2f8:	ccmp	x4, x0, #0x2, cc  // cc = lo, ul, last
   4a2fc:	cset	w8, cs  // cs = hs, nlast
   4a300:	cmp	x6, #0x9
   4a304:	ccmp	x3, x7, #0x0, hi  // hi = pmore
   4a308:	cset	w0, le
   4a30c:	tst	w8, w0
   4a310:	b.eq	4a360 <mpfr_round_near_x@@Base+0x550>  // b.none
   4a314:	sub	x2, x2, x3
   4a318:	cmp	x3, x7
   4a31c:	csinc	x6, x2, xzr, le
   4a320:	mov	x0, #0x0                   	// #0
   4a324:	lsr	x2, x6, #1
   4a328:	lsl	x2, x2, #4
   4a32c:	nop
   4a330:	ldr	q0, [x5, x0]
   4a334:	str	q0, [x4, x0]
   4a338:	add	x0, x0, #0x10
   4a33c:	cmp	x2, x0
   4a340:	b.ne	4a330 <mpfr_round_near_x@@Base+0x520>  // b.any
   4a344:	and	x0, x6, #0xfffffffffffffffe
   4a348:	add	x3, x0, x3
   4a34c:	cmp	x0, x6
   4a350:	b.eq	49fa8 <mpfr_round_near_x@@Base+0x198>  // b.none
   4a354:	ldr	x0, [x1, x3, lsl #3]
   4a358:	str	x0, [x21, x3, lsl #3]
   4a35c:	b	49fa8 <mpfr_round_near_x@@Base+0x198>
   4a360:	ldr	x0, [x1, x3, lsl #3]
   4a364:	str	x0, [x21, x3, lsl #3]
   4a368:	cmp	x3, x7
   4a36c:	add	x3, x3, #0x1
   4a370:	b.lt	4a360 <mpfr_round_near_x@@Base+0x550>  // b.tstop
   4a374:	b	49fa8 <mpfr_round_near_x@@Base+0x198>
   4a378:	mov	x27, #0x1                   	// #1
   4a37c:	b	4a068 <mpfr_round_near_x@@Base+0x258>
   4a380:	mov	x5, x4
   4a384:	mov	x27, #0x1                   	// #1
   4a388:	b	4a2bc <mpfr_round_near_x@@Base+0x4ac>
   4a38c:	mov	w2, w25
   4a390:	mov	w1, w19
   4a394:	mov	x0, x22
   4a398:	bl	bf40 <mpfr_overflow@plt>
   4a39c:	b	49fa8 <mpfr_round_near_x@@Base+0x198>

000000000004a3a0 <mpfr_custom_get_size@@Base>:
   4a3a0:	sub	x0, x0, #0x1
   4a3a4:	asr	x0, x0, #6
   4a3a8:	add	x0, x0, #0x1
   4a3ac:	lsl	x0, x0, #3
   4a3b0:	ret
   4a3b4:	nop

000000000004a3b8 <mpfr_custom_init@@Base>:
   4a3b8:	ret
   4a3bc:	nop

000000000004a3c0 <mpfr_custom_get_significand@@Base>:
   4a3c0:	ldr	x0, [x0, #24]
   4a3c4:	ret

000000000004a3c8 <mpfr_custom_get_exp@@Base>:
   4a3c8:	ldr	x0, [x0, #16]
   4a3cc:	ret

000000000004a3d0 <mpfr_custom_move@@Base>:
   4a3d0:	str	x1, [x0, #24]
   4a3d4:	ret

000000000004a3d8 <mpfr_custom_init_set@@Base>:
   4a3d8:	tbnz	w1, #31, 4a3f8 <mpfr_custom_init_set@@Base+0x20>
   4a3dc:	cmp	w1, #0x3
   4a3e0:	mov	w5, #0x1                   	// #1
   4a3e4:	b.ne	4a41c <mpfr_custom_init_set@@Base+0x44>  // b.any
   4a3e8:	str	x3, [x0]
   4a3ec:	str	w5, [x0, #8]
   4a3f0:	stp	x2, x4, [x0, #16]
   4a3f4:	ret
   4a3f8:	cmn	w1, #0x3
   4a3fc:	mov	w5, #0xffffffff            	// #-1
   4a400:	neg	w1, w1
   4a404:	b.eq	4a3e8 <mpfr_custom_init_set@@Base+0x10>  // b.none
   4a408:	cmp	w1, #0x1
   4a40c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   4a410:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4a414:	csel	x2, x2, x1, eq  // eq = none
   4a418:	b	4a3e8 <mpfr_custom_init_set@@Base+0x10>
   4a41c:	cbnz	w1, 4a408 <mpfr_custom_init_set@@Base+0x30>
   4a420:	mov	x2, #0x2                   	// #2
   4a424:	movk	x2, #0x8000, lsl #48
   4a428:	b	4a3e8 <mpfr_custom_init_set@@Base+0x10>
   4a42c:	nop

000000000004a430 <mpfr_custom_get_kind@@Base>:
   4a430:	ldr	x2, [x0, #16]
   4a434:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   4a438:	mov	x1, x0
   4a43c:	cmp	x2, x3
   4a440:	b.le	4a450 <mpfr_custom_get_kind@@Base+0x20>
   4a444:	ldr	w0, [x0, #8]
   4a448:	add	w0, w0, w0, lsl #1
   4a44c:	ret
   4a450:	b.eq	4a474 <mpfr_custom_get_kind@@Base+0x44>  // b.none
   4a454:	mov	x3, #0x2                   	// #2
   4a458:	mov	w0, #0x0                   	// #0
   4a45c:	movk	x3, #0x8000, lsl #48
   4a460:	cmp	x2, x3
   4a464:	b.eq	4a44c <mpfr_custom_get_kind@@Base+0x1c>  // b.none
   4a468:	ldr	w0, [x1, #8]
   4a46c:	lsl	w0, w0, #1
   4a470:	ret
   4a474:	ldr	w0, [x0, #8]
   4a478:	ret
   4a47c:	nop

000000000004a480 <mpfr_lngamma@@Base>:
   4a480:	stp	x29, x30, [sp, #-48]!
   4a484:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   4a488:	mov	x29, sp
   4a48c:	ldr	x3, [x1, #16]
   4a490:	str	x19, [sp, #16]
   4a494:	mov	x19, x0
   4a498:	cmp	x3, x4
   4a49c:	b.le	4a4c0 <mpfr_lngamma@@Base+0x40>
   4a4a0:	ldr	w0, [x1, #8]
   4a4a4:	tbnz	w0, #31, 4a520 <mpfr_lngamma@@Base+0xa0>
   4a4a8:	mov	x0, x19
   4a4ac:	ldr	x19, [sp, #16]
   4a4b0:	ldp	x29, x30, [sp], #48
   4a4b4:	b	4a5f8 <mpfr_lngamma@@Base+0x178>
   4a4b8:	ldr	x3, [x1, #16]
   4a4bc:	nop
   4a4c0:	mov	x0, #0x2                   	// #2
   4a4c4:	movk	x0, #0x8000, lsl #48
   4a4c8:	cmp	x3, x0
   4a4cc:	b.eq	4a5cc <mpfr_lngamma@@Base+0x14c>  // b.none
   4a4d0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a4d4:	cmp	x3, x0
   4a4d8:	b.eq	4a500 <mpfr_lngamma@@Base+0x80>  // b.none
   4a4dc:	mrs	x1, tpidr_el0
   4a4e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4a4e4:	ldr	x2, [x0, #2576]
   4a4e8:	add	x0, x0, #0xa10
   4a4ec:	blr	x2
   4a4f0:	add	x0, x1, x0
   4a4f4:	ldr	w1, [x0]
   4a4f8:	orr	w1, w1, #0x20
   4a4fc:	str	w1, [x0]
   4a500:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a504:	mov	w1, #0x1                   	// #1
   4a508:	str	w1, [x19, #8]
   4a50c:	str	x0, [x19, #16]
   4a510:	mov	w0, #0x0                   	// #0
   4a514:	ldr	x19, [sp, #16]
   4a518:	ldp	x29, x30, [sp], #48
   4a51c:	ret
   4a520:	mov	x0, x1
   4a524:	str	x1, [sp, #32]
   4a528:	str	w2, [sp, #44]
   4a52c:	bl	c160 <mpfr_integer_p@plt>
   4a530:	ldr	w2, [sp, #44]
   4a534:	ldr	x1, [sp, #32]
   4a538:	cbnz	w0, 4a4b8 <mpfr_lngamma@@Base+0x38>
   4a53c:	ldr	w0, [x1, #8]
   4a540:	tbz	w0, #31, 4a4a8 <mpfr_lngamma@@Base+0x28>
   4a544:	ldr	x0, [x1, #16]
   4a548:	cmp	x0, #0x0
   4a54c:	b.le	4a598 <mpfr_lngamma@@Base+0x118>
   4a550:	ldr	x4, [x1]
   4a554:	cmp	x0, x4
   4a558:	b.gt	4a598 <mpfr_lngamma@@Base+0x118>
   4a55c:	sub	x3, x4, #0x1
   4a560:	and	x3, x3, #0xffffffffffffffc0
   4a564:	add	x3, x3, #0x40
   4a568:	subs	x3, x3, x0
   4a56c:	add	x4, x3, #0x3f
   4a570:	csel	x4, x4, x3, mi  // mi = first
   4a574:	negs	x0, x3
   4a578:	ldr	x5, [x1, #24]
   4a57c:	asr	x4, x4, #6
   4a580:	and	x0, x0, #0x3f
   4a584:	and	x3, x3, #0x3f
   4a588:	csneg	x3, x3, x0, mi  // mi = first
   4a58c:	ldr	x0, [x5, x4, lsl #3]
   4a590:	lsr	x3, x0, x3
   4a594:	tbnz	w3, #0, 4a4a8 <mpfr_lngamma@@Base+0x28>
   4a598:	mrs	x1, tpidr_el0
   4a59c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4a5a0:	ldr	x2, [x0, #2576]
   4a5a4:	add	x0, x0, #0xa10
   4a5a8:	blr	x2
   4a5ac:	add	x0, x1, x0
   4a5b0:	mov	x1, #0x2                   	// #2
   4a5b4:	movk	x1, #0x8000, lsl #48
   4a5b8:	str	x1, [x19, #16]
   4a5bc:	ldr	w1, [x0]
   4a5c0:	orr	w1, w1, #0x4
   4a5c4:	str	w1, [x0]
   4a5c8:	b	4a510 <mpfr_lngamma@@Base+0x90>
   4a5cc:	mrs	x1, tpidr_el0
   4a5d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4a5d4:	ldr	x2, [x0, #2576]
   4a5d8:	add	x0, x0, #0xa10
   4a5dc:	blr	x2
   4a5e0:	add	x0, x1, x0
   4a5e4:	str	x3, [x19, #16]
   4a5e8:	ldr	w1, [x0]
   4a5ec:	orr	w1, w1, #0x4
   4a5f0:	str	w1, [x0]
   4a5f4:	b	4a510 <mpfr_lngamma@@Base+0x90>
   4a5f8:	stp	x29, x30, [sp, #-480]!
   4a5fc:	mov	x29, sp
   4a600:	stp	x19, x20, [sp, #16]
   4a604:	mrs	x19, tpidr_el0
   4a608:	stp	x19, x1, [sp, #136]
   4a60c:	str	x0, [sp, #184]
   4a610:	mov	x0, x1
   4a614:	mov	x1, #0x1                   	// #1
   4a618:	stp	x21, x22, [sp, #32]
   4a61c:	stp	x23, x24, [sp, #48]
   4a620:	str	w2, [sp, #200]
   4a624:	mov	x2, #0x0                   	// #0
   4a628:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4a62c:	mov	w20, w0
   4a630:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4a634:	ldr	x1, [x0, #2576]
   4a638:	add	x0, x0, #0xa10
   4a63c:	blr	x1
   4a640:	mov	x1, x19
   4a644:	add	x19, x19, x0
   4a648:	ldr	w0, [x1, x0]
   4a64c:	str	w0, [sp, #204]
   4a650:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4a654:	ldr	x2, [x0, #2512]
   4a658:	add	x0, x0, #0x9d0
   4a65c:	blr	x2
   4a660:	add	x21, x1, x0
   4a664:	ldr	x0, [x1, x0]
   4a668:	str	x0, [sp, #216]
   4a66c:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   4a670:	str	x2, [x21]
   4a674:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4a678:	ldr	x3, [x0, #2544]
   4a67c:	add	x0, x0, #0x9f0
   4a680:	blr	x3
   4a684:	add	x22, x1, x0
   4a688:	mov	x3, x1
   4a68c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4a690:	ldr	x0, [x3, x0]
   4a694:	str	x1, [x22]
   4a698:	str	x0, [sp, #224]
   4a69c:	cbz	w20, 4ae0c <mpfr_lngamma@@Base+0x98c>
   4a6a0:	stp	x25, x26, [sp, #64]
   4a6a4:	cmp	w20, #0x0
   4a6a8:	stp	x27, x28, [sp, #80]
   4a6ac:	stp	d8, d9, [sp, #96]
   4a6b0:	str	d10, [sp, #112]
   4a6b4:	b.gt	4aaac <mpfr_lngamma@@Base+0x62c>
   4a6b8:	ldr	x0, [sp, #184]
   4a6bc:	ldr	x1, [sp, #144]
   4a6c0:	ldr	x0, [x0]
   4a6c4:	str	x0, [sp, #176]
   4a6c8:	ldr	x1, [x1, #16]
   4a6cc:	neg	x0, x0
   4a6d0:	cmp	x1, x0
   4a6d4:	b.le	4aaf0 <mpfr_lngamma@@Base+0x670>
   4a6d8:	add	x22, sp, #0x140
   4a6dc:	mov	x1, #0x1                   	// #1
   4a6e0:	mov	x0, x22
   4a6e4:	add	x24, sp, #0x160
   4a6e8:	bl	ca80 <mpfr_init2@plt>
   4a6ec:	add	x26, sp, #0x180
   4a6f0:	mov	x0, x24
   4a6f4:	mov	x1, #0x1                   	// #1
   4a6f8:	bl	ca80 <mpfr_init2@plt>
   4a6fc:	add	x27, sp, #0x1a0
   4a700:	mov	x0, x26
   4a704:	mov	x1, #0x1                   	// #1
   4a708:	bl	ca80 <mpfr_init2@plt>
   4a70c:	add	x28, sp, #0x1c0
   4a710:	mov	x0, x27
   4a714:	mov	x1, #0x1                   	// #1
   4a718:	bl	ca80 <mpfr_init2@plt>
   4a71c:	mov	x0, x28
   4a720:	mov	x1, #0x1                   	// #1
   4a724:	bl	ca80 <mpfr_init2@plt>
   4a728:	ldr	x0, [sp, #176]
   4a72c:	cmp	x0, #0x1
   4a730:	b.eq	4baac <mpfr_lngamma@@Base+0x162c>  // b.none
   4a734:	b.le	4bb20 <mpfr_lngamma@@Base+0x16a0>
   4a738:	sub	x1, x0, #0x1
   4a73c:	mov	x2, x0
   4a740:	clz	x1, x1
   4a744:	mov	w0, #0x40                  	// #64
   4a748:	sub	w0, w0, w1
   4a74c:	mov	w25, #0x4e                  	// #78
   4a750:	add	x0, x2, w0, sxtw
   4a754:	sub	x1, x0, #0x1
   4a758:	clz	x1, x1
   4a75c:	sub	w25, w25, w1
   4a760:	add	x25, x0, w25, sxtw
   4a764:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   4a768:	mov	x20, #0x40                  	// #64
   4a76c:	mov	x21, #0xffffffffffffffff    	// #-1
   4a770:	str	x28, [sp, #152]
   4a774:	ldr	d9, [x0, #1432]
   4a778:	mov	x28, x22
   4a77c:	mov	x22, x27
   4a780:	mov	x27, x25
   4a784:	ldr	x23, [sp, #144]
   4a788:	b	4a7b4 <mpfr_lngamma@@Base+0x334>
   4a78c:	add	x0, x25, #0x6
   4a790:	add	x27, x27, x0
   4a794:	mov	x0, #0xfffffffffffffeff    	// #-257
   4a798:	movk	x0, #0x7fff, lsl #48
   4a79c:	sub	x0, x0, x27
   4a7a0:	cmp	x0, x20
   4a7a4:	b.lt	4aec8 <mpfr_lngamma@@Base+0xa48>  // b.tstop
   4a7a8:	add	x27, x27, x20
   4a7ac:	add	x20, x27, x27, lsr #63
   4a7b0:	asr	x20, x20, #1
   4a7b4:	mov	x1, x27
   4a7b8:	mov	x0, x28
   4a7bc:	bl	bed0 <mpfr_set_prec@plt>
   4a7c0:	mov	x19, #0x1                   	// #1
   4a7c4:	mov	x1, x27
   4a7c8:	mov	x0, x24
   4a7cc:	bl	bed0 <mpfr_set_prec@plt>
   4a7d0:	mov	x1, x27
   4a7d4:	mov	x0, x26
   4a7d8:	bl	bed0 <mpfr_set_prec@plt>
   4a7dc:	mov	x1, x27
   4a7e0:	mov	x0, x22
   4a7e4:	bl	bed0 <mpfr_set_prec@plt>
   4a7e8:	mov	x1, #0x2                   	// #2
   4a7ec:	mov	w3, #0x3                   	// #3
   4a7f0:	mov	x2, x23
   4a7f4:	mov	x0, x28
   4a7f8:	bl	ca50 <mpfr_ui_sub@plt>
   4a7fc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4a800:	ldr	x1, [x0, #2624]
   4a804:	add	x0, x0, #0xa40
   4a808:	blr	x1
   4a80c:	mov	w2, #0x0                   	// #0
   4a810:	ldr	x1, [sp, #136]
   4a814:	add	x1, x1, x0
   4a818:	mov	x0, x24
   4a81c:	bl	c380 <mpfr_cache@plt>
   4a820:	mov	x1, x28
   4a824:	mov	x0, x26
   4a828:	mov	w2, #0x0                   	// #0
   4a82c:	bl	c600 <mpfr_lngamma@plt>
   4a830:	ldr	x1, [sp, #400]
   4a834:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4a838:	cmp	x1, x0
   4a83c:	b.eq	4a86c <mpfr_lngamma@@Base+0x3ec>  // b.none
   4a840:	ldr	d8, [sp, #336]
   4a844:	scvtf	d0, d8
   4a848:	fmul	d0, d0, d9
   4a84c:	bl	c950 <__gmpfr_ceil_log2@plt>
   4a850:	fmov	x2, d8
   4a854:	ldr	x1, [sp, #400]
   4a858:	add	x19, x2, x0
   4a85c:	add	x19, x19, #0x1
   4a860:	subs	x19, x19, x1
   4a864:	csel	x19, x19, x21, pl  // pl = nfrst
   4a868:	add	x19, x19, #0x1
   4a86c:	mov	w3, #0x0                   	// #0
   4a870:	mov	x2, x24
   4a874:	mov	x1, x28
   4a878:	mov	x0, x28
   4a87c:	bl	bd50 <mpfr_mul@plt>
   4a880:	mov	x1, x28
   4a884:	mov	w2, #0x0                   	// #0
   4a888:	mov	x0, x28
   4a88c:	ldr	x25, [sp, #336]
   4a890:	bl	c450 <mpfr_sin@plt>
   4a894:	ldr	x0, [sp, #336]
   4a898:	mov	x1, x23
   4a89c:	mov	w3, #0x0                   	// #0
   4a8a0:	mov	x2, #0x1                   	// #1
   4a8a4:	sub	x25, x25, x0
   4a8a8:	mov	x0, x22
   4a8ac:	adds	x25, x25, #0x3
   4a8b0:	csel	x25, x25, x21, pl  // pl = nfrst
   4a8b4:	bl	c530 <mpfr_sub_ui@plt>
   4a8b8:	mov	x2, x24
   4a8bc:	mov	x1, x22
   4a8c0:	mov	w3, #0x0                   	// #0
   4a8c4:	mov	x0, x22
   4a8c8:	bl	bd50 <mpfr_mul@plt>
   4a8cc:	mov	x2, x28
   4a8d0:	mov	x1, x22
   4a8d4:	mov	w3, #0x0                   	// #0
   4a8d8:	mov	x0, x22
   4a8dc:	bl	c620 <mpfr_div@plt>
   4a8e0:	mov	w3, #0x1                   	// #1
   4a8e4:	mov	x1, x22
   4a8e8:	mov	w2, #0x0                   	// #0
   4a8ec:	mov	x0, x22
   4a8f0:	bl	c6a0 <mpfr_set4@plt>
   4a8f4:	mov	x1, x22
   4a8f8:	mov	x0, x22
   4a8fc:	mov	w2, #0x0                   	// #0
   4a900:	bl	c090 <mpfr_log@plt>
   4a904:	add	x1, x25, #0x5
   4a908:	cmp	x1, x27
   4a90c:	b.ge	4a78c <mpfr_lngamma@@Base+0x30c>  // b.tcont
   4a910:	ldr	x2, [sp, #432]
   4a914:	add	x0, x25, #0x4
   4a918:	mov	x25, x1
   4a91c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4a920:	cmp	x2, x1
   4a924:	ldr	x1, [sp, #400]
   4a928:	str	x1, [sp, #144]
   4a92c:	b.eq	4a948 <mpfr_lngamma@@Base+0x4c8>  // b.none
   4a930:	mov	x1, #0x1                   	// #1
   4a934:	sub	x1, x1, x2
   4a938:	adds	x0, x1, x0
   4a93c:	csel	x0, x0, x21, pl  // pl = nfrst
   4a940:	add	x0, x0, #0x1
   4a944:	add	x25, x2, x0
   4a948:	mov	x1, x22
   4a94c:	mov	x2, x26
   4a950:	mov	x0, x28
   4a954:	mov	w3, #0x0                   	// #0
   4a958:	bl	bb70 <mpfr_sub@plt>
   4a95c:	ldr	x0, [sp, #336]
   4a960:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4a964:	cmp	x0, x1
   4a968:	b.le	4a794 <mpfr_lngamma@@Base+0x314>
   4a96c:	ldr	x1, [sp, #144]
   4a970:	mov	x2, #0x1                   	// #1
   4a974:	sub	x0, x2, x0
   4a978:	add	x1, x19, x1
   4a97c:	ldr	x2, [sp, #320]
   4a980:	cmp	x1, x25
   4a984:	csel	x1, x1, x25, ge  // ge = tcont
   4a988:	adds	x1, x0, x1
   4a98c:	sub	x7, x2, #0x1
   4a990:	ldr	w2, [sp, #200]
   4a994:	csel	x1, x1, x21, pl  // pl = nfrst
   4a998:	ldr	x0, [sp, #344]
   4a99c:	cmp	w2, #0x0
   4a9a0:	add	x2, x1, #0x1
   4a9a4:	ldr	x1, [sp, #176]
   4a9a8:	sub	x2, x27, x2
   4a9ac:	cinc	x3, x1, eq  // eq = none
   4a9b0:	asr	x1, x7, #6
   4a9b4:	add	x1, x1, #0x1
   4a9b8:	bl	c370 <mpfr_round_p@plt>
   4a9bc:	cbz	w0, 4a794 <mpfr_lngamma@@Base+0x314>
   4a9c0:	mov	x27, x22
   4a9c4:	mov	x22, x28
   4a9c8:	ldr	x28, [sp, #152]
   4a9cc:	mov	x1, x22
   4a9d0:	ldr	w3, [sp, #328]
   4a9d4:	ldr	w20, [sp, #200]
   4a9d8:	ldr	x19, [sp, #184]
   4a9dc:	mov	w2, w20
   4a9e0:	mov	x0, x19
   4a9e4:	bl	c6a0 <mpfr_set4@plt>
   4a9e8:	mov	w23, w0
   4a9ec:	mov	x0, x22
   4a9f0:	bl	c070 <mpfr_clear@plt>
   4a9f4:	mov	x0, x24
   4a9f8:	bl	c070 <mpfr_clear@plt>
   4a9fc:	mov	x0, x26
   4aa00:	bl	c070 <mpfr_clear@plt>
   4aa04:	mov	x0, x27
   4aa08:	bl	c070 <mpfr_clear@plt>
   4aa0c:	mov	x0, x28
   4aa10:	bl	c070 <mpfr_clear@plt>
   4aa14:	ldr	x3, [sp, #136]
   4aa18:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4aa1c:	ldr	x2, [x0, #2576]
   4aa20:	add	x0, x0, #0xa10
   4aa24:	blr	x2
   4aa28:	ldr	w2, [sp, #204]
   4aa2c:	str	w2, [x3, x0]
   4aa30:	add	x2, x3, x0
   4aa34:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4aa38:	ldr	x5, [x0, #2512]
   4aa3c:	add	x0, x0, #0x9d0
   4aa40:	blr	x5
   4aa44:	ldr	x5, [sp, #216]
   4aa48:	str	x5, [x3, x0]
   4aa4c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4aa50:	ldr	x6, [x0, #2544]
   4aa54:	add	x0, x0, #0x9f0
   4aa58:	blr	x6
   4aa5c:	ldr	x1, [x19, #16]
   4aa60:	ldr	x6, [sp, #224]
   4aa64:	str	x6, [x3, x0]
   4aa68:	cmp	x5, x1
   4aa6c:	ccmp	x6, x1, #0x1, le
   4aa70:	b.lt	4adc0 <mpfr_lngamma@@Base+0x940>  // b.tstop
   4aa74:	cbz	w23, 4aea0 <mpfr_lngamma@@Base+0xa20>
   4aa78:	ldr	w0, [sp, #204]
   4aa7c:	ldp	x25, x26, [sp, #64]
   4aa80:	orr	w0, w0, #0x8
   4aa84:	ldp	x27, x28, [sp, #80]
   4aa88:	ldp	d8, d9, [sp, #96]
   4aa8c:	ldr	d10, [sp, #112]
   4aa90:	str	w0, [x2]
   4aa94:	mov	w0, w23
   4aa98:	ldp	x19, x20, [sp, #16]
   4aa9c:	ldp	x21, x22, [sp, #32]
   4aaa0:	ldp	x23, x24, [sp, #48]
   4aaa4:	ldp	x29, x30, [sp], #480
   4aaa8:	ret
   4aaac:	ldr	x0, [sp, #144]
   4aab0:	mov	x2, #0x0                   	// #0
   4aab4:	mov	x1, #0x2                   	// #2
   4aab8:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4aabc:	cbz	w0, 4adfc <mpfr_lngamma@@Base+0x97c>
   4aac0:	ldr	x0, [sp, #184]
   4aac4:	ldr	x1, [x0]
   4aac8:	str	x1, [sp, #176]
   4aacc:	ldr	x0, [sp, #144]
   4aad0:	add	x1, x1, #0x1
   4aad4:	ldr	x0, [x0, #16]
   4aad8:	cmp	x1, x0
   4aadc:	b.lt	4b054 <mpfr_lngamma@@Base+0xbd4>  // b.tstop
   4aae0:	ldr	x1, [sp, #176]
   4aae4:	neg	x1, x1
   4aae8:	cmp	x1, x0
   4aaec:	b.lt	4b000 <mpfr_lngamma@@Base+0xb80>  // b.tstop
   4aaf0:	ldp	x0, x24, [sp, #176]
   4aaf4:	mov	x22, #0xfffffffffffffeff    	// #-257
   4aaf8:	ldr	w25, [sp, #200]
   4aafc:	add	x26, sp, #0x180
   4ab00:	add	x27, sp, #0x1a0
   4ab04:	add	x28, sp, #0x1c0
   4ab08:	mov	x21, #0x40                  	// #64
   4ab0c:	movk	x22, #0x7fff, lsl #48
   4ab10:	str	w20, [sp, #152]
   4ab14:	add	x19, x0, #0xe
   4ab18:	ldr	x20, [sp, #144]
   4ab1c:	b	4acc0 <mpfr_lngamma@@Base+0x840>
   4ab20:	mov	x1, x20
   4ab24:	mov	x0, x26
   4ab28:	mov	w2, #0x2                   	// #2
   4ab2c:	bl	c090 <mpfr_log@plt>
   4ab30:	ldr	x1, [sp, #384]
   4ab34:	mov	x0, x27
   4ab38:	bl	ca80 <mpfr_init2@plt>
   4ab3c:	mov	x1, x26
   4ab40:	mov	w2, #0x3                   	// #3
   4ab44:	mov	x0, x26
   4ab48:	bl	bd70 <mpfr_neg@plt>
   4ab4c:	ldr	w3, [sp, #392]
   4ab50:	mov	x1, x26
   4ab54:	mov	w2, #0x3                   	// #3
   4ab58:	mov	x0, x27
   4ab5c:	bl	c6a0 <mpfr_set4@plt>
   4ab60:	mov	x0, x27
   4ab64:	bl	c120 <mpfr_nextabove@plt>
   4ab68:	ldr	x1, [sp, #384]
   4ab6c:	mov	x0, x28
   4ab70:	bl	ca80 <mpfr_init2@plt>
   4ab74:	ldr	w0, [x20, #8]
   4ab78:	cmp	w0, #0x0
   4ab7c:	cset	w2, le
   4ab80:	add	w2, w2, #0x2
   4ab84:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ab88:	ldr	x1, [x0, #2608]
   4ab8c:	add	x0, x0, #0xa30
   4ab90:	blr	x1
   4ab94:	ldr	x1, [sp, #136]
   4ab98:	add	x23, x1, x0
   4ab9c:	mov	x0, x28
   4aba0:	mov	x1, x23
   4aba4:	bl	c380 <mpfr_cache@plt>
   4aba8:	mov	x2, x20
   4abac:	mov	x1, x28
   4abb0:	mov	w3, #0x3                   	// #3
   4abb4:	mov	x0, x28
   4abb8:	bl	bd50 <mpfr_mul@plt>
   4abbc:	mov	w3, #0x3                   	// #3
   4abc0:	mov	x2, x28
   4abc4:	mov	x1, x26
   4abc8:	mov	x0, x26
   4abcc:	bl	bb70 <mpfr_sub@plt>
   4abd0:	ldr	w2, [x20, #8]
   4abd4:	mov	x1, x23
   4abd8:	mov	x0, x28
   4abdc:	cmp	w2, #0x0
   4abe0:	cset	w2, gt
   4abe4:	add	w2, w2, #0x2
   4abe8:	bl	c380 <mpfr_cache@plt>
   4abec:	mov	x2, x20
   4abf0:	mov	x1, x28
   4abf4:	mov	w3, #0x2                   	// #2
   4abf8:	mov	x0, x28
   4abfc:	bl	bd50 <mpfr_mul@plt>
   4ac00:	mov	x2, x28
   4ac04:	mov	x1, x27
   4ac08:	mov	w3, #0x3                   	// #3
   4ac0c:	mov	x0, x27
   4ac10:	bl	bb70 <mpfr_sub@plt>
   4ac14:	mov	x2, x20
   4ac18:	mov	x1, x20
   4ac1c:	mov	w3, #0x2                   	// #2
   4ac20:	mov	x0, x28
   4ac24:	bl	bd50 <mpfr_mul@plt>
   4ac28:	mov	x2, x28
   4ac2c:	mov	x1, x27
   4ac30:	mov	w3, #0x2                   	// #2
   4ac34:	mov	x0, x27
   4ac38:	bl	c1a0 <mpfr_add@plt>
   4ac3c:	ldr	x1, [x24]
   4ac40:	mov	w2, w25
   4ac44:	mov	x0, x26
   4ac48:	bl	c970 <mpfr_prec_round@plt>
   4ac4c:	mov	w23, w0
   4ac50:	ldr	x1, [x24]
   4ac54:	mov	w2, w25
   4ac58:	mov	x0, x27
   4ac5c:	bl	c970 <mpfr_prec_round@plt>
   4ac60:	tbnz	w23, #31, 4ad14 <mpfr_lngamma@@Base+0x894>
   4ac64:	tbnz	w0, #31, 4ac80 <mpfr_lngamma@@Base+0x800>
   4ac68:	cmp	w23, #0x0
   4ac6c:	cset	w1, gt
   4ac70:	cmp	w0, #0x0
   4ac74:	cset	w0, gt
   4ac78:	cmp	w1, w0
   4ac7c:	b.eq	4ad18 <mpfr_lngamma@@Base+0x898>  // b.none
   4ac80:	mov	x0, x26
   4ac84:	bl	c070 <mpfr_clear@plt>
   4ac88:	mov	x0, x27
   4ac8c:	bl	c070 <mpfr_clear@plt>
   4ac90:	mov	x0, x28
   4ac94:	bl	c070 <mpfr_clear@plt>
   4ac98:	sub	x0, x22, x19
   4ac9c:	cmp	x0, x21
   4aca0:	b.lt	4ae88 <mpfr_lngamma@@Base+0xa08>  // b.tstop
   4aca4:	add	x19, x19, x21
   4aca8:	ldr	x0, [x20, #16]
   4acac:	add	x21, x19, x19, lsr #63
   4acb0:	neg	x0, x0
   4acb4:	asr	x21, x21, #1
   4acb8:	cmp	x0, x19
   4acbc:	b.lt	4aee0 <mpfr_lngamma@@Base+0xa60>  // b.tstop
   4acc0:	mov	x0, x26
   4acc4:	mov	x1, x19
   4acc8:	bl	ca80 <mpfr_init2@plt>
   4accc:	ldr	w0, [x20, #8]
   4acd0:	cmp	w0, #0x0
   4acd4:	b.gt	4ab20 <mpfr_lngamma@@Base+0x6a0>
   4acd8:	ldr	x1, [x20]
   4acdc:	mov	x0, x27
   4ace0:	bl	ca80 <mpfr_init2@plt>
   4ace4:	mov	x1, x20
   4ace8:	mov	x0, x27
   4acec:	mov	w2, #0x0                   	// #0
   4acf0:	bl	bd70 <mpfr_neg@plt>
   4acf4:	mov	x1, x27
   4acf8:	mov	x0, x26
   4acfc:	mov	w2, #0x2                   	// #2
   4ad00:	bl	c090 <mpfr_log@plt>
   4ad04:	ldr	x1, [sp, #384]
   4ad08:	mov	x0, x27
   4ad0c:	bl	bed0 <mpfr_set_prec@plt>
   4ad10:	b	4ab3c <mpfr_lngamma@@Base+0x6bc>
   4ad14:	tbz	w0, #31, 4ac80 <mpfr_lngamma@@Base+0x800>
   4ad18:	mov	x1, x27
   4ad1c:	mov	x0, x26
   4ad20:	mov	w2, #0x1                   	// #1
   4ad24:	bl	c9a0 <mpfr_cmp3@plt>
   4ad28:	cbnz	w0, 4ac80 <mpfr_lngamma@@Base+0x800>
   4ad2c:	ldr	w3, [sp, #424]
   4ad30:	mov	x1, x27
   4ad34:	ldr	w20, [sp, #200]
   4ad38:	ldr	x19, [sp, #184]
   4ad3c:	mov	w2, w20
   4ad40:	mov	x0, x19
   4ad44:	bl	c6a0 <mpfr_set4@plt>
   4ad48:	mov	x0, x26
   4ad4c:	bl	c070 <mpfr_clear@plt>
   4ad50:	mov	x0, x27
   4ad54:	bl	c070 <mpfr_clear@plt>
   4ad58:	mov	x0, x28
   4ad5c:	bl	c070 <mpfr_clear@plt>
   4ad60:	ldr	x3, [sp, #136]
   4ad64:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ad68:	ldr	x2, [x0, #2576]
   4ad6c:	add	x0, x0, #0xa10
   4ad70:	blr	x2
   4ad74:	ldr	w2, [sp, #204]
   4ad78:	str	w2, [x3, x0]
   4ad7c:	add	x2, x3, x0
   4ad80:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ad84:	ldr	x5, [x0, #2512]
   4ad88:	add	x0, x0, #0x9d0
   4ad8c:	blr	x5
   4ad90:	ldr	x5, [sp, #216]
   4ad94:	str	x5, [x3, x0]
   4ad98:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ad9c:	ldr	x6, [x0, #2544]
   4ada0:	add	x0, x0, #0x9f0
   4ada4:	blr	x6
   4ada8:	ldr	x1, [x19, #16]
   4adac:	ldr	x6, [sp, #224]
   4adb0:	str	x6, [x3, x0]
   4adb4:	cmp	x6, x1
   4adb8:	ccmp	x5, x1, #0x0, ge  // ge = tcont
   4adbc:	b.le	4aa74 <mpfr_lngamma@@Base+0x5f4>
   4adc0:	mov	w2, w20
   4adc4:	mov	w1, w23
   4adc8:	mov	x0, x19
   4adcc:	bl	cb30 <mpfr_check_range@plt>
   4add0:	ldp	x25, x26, [sp, #64]
   4add4:	mov	w23, w0
   4add8:	ldp	x27, x28, [sp, #80]
   4addc:	ldp	d8, d9, [sp, #96]
   4ade0:	ldr	d10, [sp, #112]
   4ade4:	mov	w0, w23
   4ade8:	ldp	x19, x20, [sp, #16]
   4adec:	ldp	x21, x22, [sp, #32]
   4adf0:	ldp	x23, x24, [sp, #48]
   4adf4:	ldp	x29, x30, [sp], #480
   4adf8:	ret
   4adfc:	ldp	x25, x26, [sp, #64]
   4ae00:	ldp	x27, x28, [sp, #80]
   4ae04:	ldp	d8, d9, [sp, #96]
   4ae08:	ldr	d10, [sp, #112]
   4ae0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ae10:	ldr	x1, [x0, #2576]
   4ae14:	add	x0, x0, #0xa10
   4ae18:	blr	x1
   4ae1c:	mov	w2, #0x1                   	// #1
   4ae20:	ldr	w1, [sp, #204]
   4ae24:	mov	w23, #0x0                   	// #0
   4ae28:	ldr	x3, [sp, #136]
   4ae2c:	ldr	x4, [sp, #224]
   4ae30:	str	w1, [x3, x0]
   4ae34:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ae38:	ldr	x1, [x0, #2512]
   4ae3c:	add	x0, x0, #0x9d0
   4ae40:	blr	x1
   4ae44:	ldr	x1, [sp, #216]
   4ae48:	str	x1, [x3, x0]
   4ae4c:	ldp	x19, x20, [sp, #16]
   4ae50:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ae54:	ldr	x1, [x0, #2544]
   4ae58:	add	x0, x0, #0x9f0
   4ae5c:	blr	x1
   4ae60:	str	x4, [x3, x0]
   4ae64:	ldr	x0, [sp, #184]
   4ae68:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4ae6c:	ldp	x21, x22, [sp, #32]
   4ae70:	str	w2, [x0, #8]
   4ae74:	str	x1, [x0, #16]
   4ae78:	mov	w0, w23
   4ae7c:	ldp	x23, x24, [sp, #48]
   4ae80:	ldp	x29, x30, [sp], #480
   4ae84:	ret
   4ae88:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   4ae8c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   4ae90:	add	x2, x2, #0xf80
   4ae94:	add	x0, x0, #0x4d8
   4ae98:	mov	w1, #0x131                 	// #305
   4ae9c:	bl	cb40 <mpfr_assert_fail@plt>
   4aea0:	mov	w0, w23
   4aea4:	ldr	d10, [sp, #112]
   4aea8:	ldp	x19, x20, [sp, #16]
   4aeac:	ldp	x21, x22, [sp, #32]
   4aeb0:	ldp	x23, x24, [sp, #48]
   4aeb4:	ldp	x25, x26, [sp, #64]
   4aeb8:	ldp	x27, x28, [sp, #80]
   4aebc:	ldp	d8, d9, [sp, #96]
   4aec0:	ldp	x29, x30, [sp], #480
   4aec4:	ret
   4aec8:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   4aecc:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   4aed0:	add	x2, x2, #0x610
   4aed4:	add	x0, x0, #0x4d8
   4aed8:	mov	w1, #0x1a5                 	// #421
   4aedc:	bl	cb40 <mpfr_assert_fail@plt>
   4aee0:	ldr	x2, [sp, #184]
   4aee4:	add	x22, sp, #0x140
   4aee8:	ldr	w20, [sp, #152]
   4aeec:	mov	x0, x22
   4aef0:	mov	x1, #0x1                   	// #1
   4aef4:	add	x24, sp, #0x160
   4aef8:	ldr	x2, [x2]
   4aefc:	str	x2, [sp, #176]
   4af00:	bl	ca80 <mpfr_init2@plt>
   4af04:	mov	x0, x24
   4af08:	mov	x1, #0x1                   	// #1
   4af0c:	bl	ca80 <mpfr_init2@plt>
   4af10:	mov	x0, x26
   4af14:	mov	x1, #0x1                   	// #1
   4af18:	bl	ca80 <mpfr_init2@plt>
   4af1c:	mov	x0, x27
   4af20:	mov	x1, #0x1                   	// #1
   4af24:	bl	ca80 <mpfr_init2@plt>
   4af28:	mov	x0, x28
   4af2c:	mov	x1, #0x1                   	// #1
   4af30:	bl	ca80 <mpfr_init2@plt>
   4af34:	tbnz	w20, #31, 4a728 <mpfr_lngamma@@Base+0x2a8>
   4af38:	ldr	x0, [sp, #176]
   4af3c:	cmp	x0, #0x1
   4af40:	b.eq	4ba8c <mpfr_lngamma@@Base+0x160c>  // b.none
   4af44:	b.le	4bb38 <mpfr_lngamma@@Base+0x16b8>
   4af48:	sub	x1, x0, #0x1
   4af4c:	mov	x3, x0
   4af50:	clz	x1, x1
   4af54:	mov	w0, #0x40                  	// #64
   4af58:	sub	w0, w0, w1
   4af5c:	mov	w2, #0x4d                  	// #77
   4af60:	add	x0, x3, w0, sxtw
   4af64:	sub	x1, x0, #0x1
   4af68:	clz	x1, x1
   4af6c:	sub	w1, w2, w1
   4af70:	add	x0, x0, w1, sxtw
   4af74:	str	x0, [sp, #160]
   4af78:	mov	x0, #0x4048000000000000    	// #4631952216750555136
   4af7c:	fmov	d8, x0
   4af80:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4af84:	mov	x1, #0x40                  	// #64
   4af88:	str	x22, [sp, #168]
   4af8c:	ldr	d10, [x0, #312]
   4af90:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4af94:	stp	x27, x1, [sp, #256]
   4af98:	ldr	d9, [x0, #320]
   4af9c:	mov	x0, x22
   4afa0:	mov	x1, #0x35                  	// #53
   4afa4:	bl	bed0 <mpfr_set_prec@plt>
   4afa8:	ldr	x0, [sp, #160]
   4afac:	cmp	x0, #0x64
   4afb0:	b.le	4b0fc <mpfr_lngamma@@Base+0xc7c>
   4afb4:	cmp	x0, #0x1f4
   4afb8:	b.le	4b930 <mpfr_lngamma@@Base+0x14b0>
   4afbc:	cmp	x0, #0x3e8
   4afc0:	b.le	4b9b4 <mpfr_lngamma@@Base+0x1534>
   4afc4:	cmp	x0, #0x7d0
   4afc8:	b.le	4b99c <mpfr_lngamma@@Base+0x151c>
   4afcc:	mov	x1, x0
   4afd0:	mov	x0, #0x1388                	// #5000
   4afd4:	cmp	x1, x0
   4afd8:	b.le	4b984 <mpfr_lngamma@@Base+0x1504>
   4afdc:	mov	x0, #0x2710                	// #10000
   4afe0:	mov	w3, #0x0                   	// #0
   4afe4:	cmp	x1, x0
   4afe8:	b.gt	4ba98 <mpfr_lngamma@@Base+0x1618>
   4afec:	ldr	x0, [sp, #168]
   4aff0:	mov	x2, #0xfffffffffffffff6    	// #-10
   4aff4:	mov	x1, #0xd9a                 	// #3482
   4aff8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4affc:	b	4b110 <mpfr_lngamma@@Base+0xc90>
   4b000:	add	x22, sp, #0x140
   4b004:	add	x24, sp, #0x160
   4b008:	mov	x0, x22
   4b00c:	mov	x1, #0x1                   	// #1
   4b010:	bl	ca80 <mpfr_init2@plt>
   4b014:	add	x26, sp, #0x180
   4b018:	mov	x0, x24
   4b01c:	mov	x1, #0x1                   	// #1
   4b020:	bl	ca80 <mpfr_init2@plt>
   4b024:	add	x27, sp, #0x1a0
   4b028:	mov	x0, x26
   4b02c:	mov	x1, #0x1                   	// #1
   4b030:	bl	ca80 <mpfr_init2@plt>
   4b034:	add	x28, sp, #0x1c0
   4b038:	mov	x0, x27
   4b03c:	mov	x1, #0x1                   	// #1
   4b040:	bl	ca80 <mpfr_init2@plt>
   4b044:	mov	x0, x28
   4b048:	mov	x1, #0x1                   	// #1
   4b04c:	bl	ca80 <mpfr_init2@plt>
   4b050:	b	4af38 <mpfr_lngamma@@Base+0xab8>
   4b054:	ldr	x0, [sp, #176]
   4b058:	add	x24, sp, #0x160
   4b05c:	mov	x1, #0x34                  	// #52
   4b060:	cmp	x0, #0x34
   4b064:	csel	x1, x0, x1, ge  // ge = tcont
   4b068:	mov	x0, x24
   4b06c:	add	x1, x1, #0xa
   4b070:	bl	ca80 <mpfr_init2@plt>
   4b074:	ldr	x23, [sp, #144]
   4b078:	mov	w2, #0x2                   	// #2
   4b07c:	mov	x0, x24
   4b080:	mov	x1, x23
   4b084:	bl	c090 <mpfr_log@plt>
   4b088:	mov	x1, x24
   4b08c:	mov	w3, #0x2                   	// #2
   4b090:	mov	x2, #0x1                   	// #1
   4b094:	mov	x0, x24
   4b098:	bl	c530 <mpfr_sub_ui@plt>
   4b09c:	mov	x1, x23
   4b0a0:	mov	x2, x24
   4b0a4:	mov	x0, x24
   4b0a8:	mov	w3, #0x2                   	// #2
   4b0ac:	bl	bd50 <mpfr_mul@plt>
   4b0b0:	ldr	x0, [sp, #368]
   4b0b4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4b0b8:	cmp	x0, x1
   4b0bc:	b.eq	4bad8 <mpfr_lngamma@@Base+0x1658>  // b.none
   4b0c0:	ldr	x2, [sp, #352]
   4b0c4:	mov	x1, #0x4                   	// #4
   4b0c8:	movk	x1, #0x8000, lsl #48
   4b0cc:	sub	x3, x0, x2
   4b0d0:	cmp	x3, #0x3d
   4b0d4:	ccmp	x0, x1, #0x1, gt
   4b0d8:	b.ge	4ba04 <mpfr_lngamma@@Base+0x1584>  // b.tcont
   4b0dc:	mov	x0, x24
   4b0e0:	bl	c070 <mpfr_clear@plt>
   4b0e4:	ldr	x0, [sp, #184]
   4b0e8:	ldr	x0, [x0]
   4b0ec:	str	x0, [sp, #176]
   4b0f0:	ldr	x0, [sp, #144]
   4b0f4:	ldr	x0, [x0, #16]
   4b0f8:	b	4aae0 <mpfr_lngamma@@Base+0x660>
   4b0fc:	ldr	x0, [sp, #168]
   4b100:	mov	w3, #0x0                   	// #0
   4b104:	mov	x2, #0xfffffffffffffff6    	// #-10
   4b108:	mov	x1, #0x266                 	// #614
   4b10c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4b110:	ldr	x19, [sp, #168]
   4b114:	mov	w3, #0x2                   	// #2
   4b118:	mov	x2, #0xfffffffffffffffc    	// #-4
   4b11c:	mov	x1, #0x4                   	// #4
   4b120:	mov	x0, x19
   4b124:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4b128:	ldr	x2, [sp, #160]
   4b12c:	mov	x0, #0x3                   	// #3
   4b130:	mov	x1, x19
   4b134:	mov	w3, #0x2                   	// #2
   4b138:	str	x0, [sp, #192]
   4b13c:	mov	x0, x19
   4b140:	bl	ba50 <mpfr_mul_ui@plt>
   4b144:	ldr	x0, [sp, #144]
   4b148:	mov	x1, x19
   4b14c:	mov	w2, #0x1                   	// #1
   4b150:	bl	c9a0 <mpfr_cmp3@plt>
   4b154:	tbnz	w0, #31, 4b8f8 <mpfr_lngamma@@Base+0x1478>
   4b158:	ldp	x20, x19, [sp, #160]
   4b15c:	mov	x1, x20
   4b160:	mov	x0, x19
   4b164:	bl	bed0 <mpfr_set_prec@plt>
   4b168:	mov	x1, x20
   4b16c:	mov	x0, x24
   4b170:	bl	bed0 <mpfr_set_prec@plt>
   4b174:	mov	x1, x20
   4b178:	mov	x0, x26
   4b17c:	bl	bed0 <mpfr_set_prec@plt>
   4b180:	ldr	x21, [sp, #256]
   4b184:	mov	x1, x20
   4b188:	mov	x0, x21
   4b18c:	bl	bed0 <mpfr_set_prec@plt>
   4b190:	mov	x1, x20
   4b194:	mov	x0, x28
   4b198:	bl	bed0 <mpfr_set_prec@plt>
   4b19c:	ldr	x1, [sp, #144]
   4b1a0:	mov	w3, #0x0                   	// #0
   4b1a4:	ldr	x2, [sp, #192]
   4b1a8:	mov	x0, x28
   4b1ac:	bl	c260 <mpfr_add_ui@plt>
   4b1b0:	mov	x1, x28
   4b1b4:	mov	w2, #0x0                   	// #0
   4b1b8:	mov	x0, x19
   4b1bc:	bl	c090 <mpfr_log@plt>
   4b1c0:	mov	x1, x28
   4b1c4:	mov	w3, #0x0                   	// #0
   4b1c8:	mov	x2, #0x1                   	// #1
   4b1cc:	mov	x0, x24
   4b1d0:	bl	c2c0 <mpfr_mul_2ui@plt>
   4b1d4:	mov	x1, x24
   4b1d8:	mov	w3, #0x0                   	// #0
   4b1dc:	mov	x2, #0x1                   	// #1
   4b1e0:	mov	x0, x24
   4b1e4:	bl	c530 <mpfr_sub_ui@plt>
   4b1e8:	mov	x2, x24
   4b1ec:	mov	x1, x19
   4b1f0:	mov	w3, #0x0                   	// #0
   4b1f4:	mov	x0, x19
   4b1f8:	bl	bd50 <mpfr_mul@plt>
   4b1fc:	mov	x1, x19
   4b200:	mov	w3, #0x0                   	// #0
   4b204:	mov	x2, #0x1                   	// #1
   4b208:	mov	x0, x19
   4b20c:	bl	c8f0 <mpfr_div_2ui@plt>
   4b210:	mov	x2, x28
   4b214:	mov	x1, x19
   4b218:	mov	w3, #0x0                   	// #0
   4b21c:	mov	x0, x19
   4b220:	bl	bb70 <mpfr_sub@plt>
   4b224:	mov	x2, x28
   4b228:	mov	w3, #0x0                   	// #0
   4b22c:	mov	x1, #0x1                   	// #1
   4b230:	mov	x0, x26
   4b234:	bl	c2f0 <mpfr_ui_div@plt>
   4b238:	mov	x1, x26
   4b23c:	mov	w3, #0x0                   	// #0
   4b240:	mov	x2, #0xc                   	// #12
   4b244:	mov	x0, x24
   4b248:	bl	cc60 <mpfr_div_ui@plt>
   4b24c:	ldr	w3, [sp, #360]
   4b250:	mov	x1, x24
   4b254:	mov	w2, #0x0                   	// #0
   4b258:	mov	x0, x21
   4b25c:	bl	c6a0 <mpfr_set4@plt>
   4b260:	str	x21, [sp, #256]
   4b264:	mov	x2, x21
   4b268:	mov	x1, x19
   4b26c:	mov	w3, #0x0                   	// #0
   4b270:	mov	x0, x19
   4b274:	bl	c1a0 <mpfr_add@plt>
   4b278:	mov	x1, x26
   4b27c:	mov	x2, x26
   4b280:	mov	x0, x26
   4b284:	mov	w3, #0x0                   	// #0
   4b288:	bl	bd50 <mpfr_mul@plt>
   4b28c:	ldr	x0, [sp, #432]
   4b290:	ldr	x1, [sp, #336]
   4b294:	add	x0, x20, x0
   4b298:	cmp	x1, x0
   4b29c:	b.gt	4b9f8 <mpfr_lngamma@@Base+0x1578>
   4b2a0:	mov	x19, #0x2                   	// #2
   4b2a4:	mov	x21, x24
   4b2a8:	mov	x20, #0xfffffffffffffff9    	// #-7
   4b2ac:	mov	x22, #0x80000000            	// #2147483648
   4b2b0:	mov	x23, #0xfffffffffffffffb    	// #-5
   4b2b4:	mov	x25, #0xfffffffffffffffa    	// #-6
   4b2b8:	mov	x27, #0xfffffffffffffffc    	// #-4
   4b2bc:	str	x26, [sp, #152]
   4b2c0:	mov	x26, x19
   4b2c4:	str	x28, [sp, #208]
   4b2c8:	ldr	x28, [sp, #256]
   4b2cc:	b	4b364 <mpfr_lngamma@@Base+0xee4>
   4b2d0:	mul	x2, x19, x2
   4b2d4:	add	x19, x19, #0x4
   4b2d8:	mov	x1, x21
   4b2dc:	mov	w3, #0x0                   	// #0
   4b2e0:	mov	x0, x21
   4b2e4:	mul	x24, x19, x26
   4b2e8:	bl	ba50 <mpfr_mul_ui@plt>
   4b2ec:	mov	x2, x24
   4b2f0:	mov	x1, x21
   4b2f4:	mov	w3, #0x0                   	// #0
   4b2f8:	mov	x0, x21
   4b2fc:	bl	cc60 <mpfr_div_ui@plt>
   4b300:	add	x2, x24, x26, lsl #2
   4b304:	mov	x1, x21
   4b308:	mov	x0, x21
   4b30c:	mov	w3, #0x0                   	// #0
   4b310:	bl	cc60 <mpfr_div_ui@plt>
   4b314:	mov	x0, x26
   4b318:	bl	c830 <mpfr_bernoulli_cache@plt>
   4b31c:	mov	x1, x21
   4b320:	mov	x2, x0
   4b324:	mov	w3, #0x0                   	// #0
   4b328:	mov	x0, x28
   4b32c:	bl	c4d0 <mpfr_mul_z@plt>
   4b330:	sub	x20, x20, #0x2
   4b334:	ldr	x0, [sp, #168]
   4b338:	mov	x2, x28
   4b33c:	mov	w3, #0x0                   	// #0
   4b340:	add	x26, x26, #0x1
   4b344:	mov	x1, x0
   4b348:	bl	c1a0 <mpfr_add@plt>
   4b34c:	ldr	x2, [sp, #160]
   4b350:	ldr	x0, [sp, #432]
   4b354:	ldr	x1, [sp, #336]
   4b358:	add	x0, x2, x0
   4b35c:	cmp	x0, x1
   4b360:	b.lt	4b40c <mpfr_lngamma@@Base+0xf8c>  // b.tstop
   4b364:	ldr	x2, [sp, #152]
   4b368:	mov	x1, x21
   4b36c:	mov	x0, x21
   4b370:	mov	w3, #0x0                   	// #0
   4b374:	lsl	x24, x26, #1
   4b378:	bl	bd50 <mpfr_mul@plt>
   4b37c:	cmp	x26, x22
   4b380:	sub	x2, x26, #0x1
   4b384:	b.ls	4b2d0 <mpfr_lngamma@@Base+0xe50>  // b.plast
   4b388:	sub	x2, x23, x20
   4b38c:	mov	x1, x21
   4b390:	mov	x0, x21
   4b394:	mov	w3, #0x0                   	// #0
   4b398:	bl	ba50 <mpfr_mul_ui@plt>
   4b39c:	add	x19, x19, #0x4
   4b3a0:	sub	x2, x25, x20
   4b3a4:	mov	x1, x21
   4b3a8:	mov	x0, x21
   4b3ac:	mov	w3, #0x0                   	// #0
   4b3b0:	bl	ba50 <mpfr_mul_ui@plt>
   4b3b4:	mov	x2, x24
   4b3b8:	mov	x1, x21
   4b3bc:	mov	x0, x21
   4b3c0:	mov	w3, #0x0                   	// #0
   4b3c4:	bl	cc60 <mpfr_div_ui@plt>
   4b3c8:	sub	x2, x27, x20
   4b3cc:	mov	x1, x21
   4b3d0:	mov	x0, x21
   4b3d4:	mov	w3, #0x0                   	// #0
   4b3d8:	bl	cc60 <mpfr_div_ui@plt>
   4b3dc:	mov	x2, x24
   4b3e0:	mov	x1, x21
   4b3e4:	mov	x0, x21
   4b3e8:	mov	w3, #0x0                   	// #0
   4b3ec:	bl	cc60 <mpfr_div_ui@plt>
   4b3f0:	mov	x0, #0xfffffffffffffffe    	// #-2
   4b3f4:	mov	x1, x21
   4b3f8:	sub	x2, x0, x20
   4b3fc:	mov	w3, #0x0                   	// #0
   4b400:	mov	x0, x21
   4b404:	bl	cc60 <mpfr_div_ui@plt>
   4b408:	b	4b314 <mpfr_lngamma@@Base+0xe94>
   4b40c:	str	x26, [sp, #288]
   4b410:	mov	x24, x21
   4b414:	ldr	x26, [sp, #152]
   4b418:	ldr	x28, [sp, #208]
   4b41c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4b420:	ldr	x1, [x0, #2624]
   4b424:	add	x0, x0, #0xa40
   4b428:	blr	x1
   4b42c:	ldr	x1, [sp, #136]
   4b430:	mov	w2, #0x0                   	// #0
   4b434:	ldr	x19, [sp, #256]
   4b438:	add	x1, x1, x0
   4b43c:	mov	x20, #0x2                   	// #2
   4b440:	mov	x0, x19
   4b444:	bl	c380 <mpfr_cache@plt>
   4b448:	mov	x1, x19
   4b44c:	mov	w3, #0x0                   	// #0
   4b450:	mov	x2, #0x1                   	// #1
   4b454:	mov	x0, x19
   4b458:	bl	c2c0 <mpfr_mul_2ui@plt>
   4b45c:	ldr	x1, [sp, #144]
   4b460:	mov	w2, #0x0                   	// #0
   4b464:	mov	x0, x24
   4b468:	ldr	w3, [x1, #8]
   4b46c:	bl	c6a0 <mpfr_set4@plt>
   4b470:	ldr	x2, [sp, #192]
   4b474:	mov	x0, x20
   4b478:	mov	x23, x0
   4b47c:	add	x0, x0, #0x1
   4b480:	mul	x1, x0, x0
   4b484:	cmp	x1, x2
   4b488:	b.cc	4b478 <mpfr_lngamma@@Base+0xff8>  // b.lo, b.ul, b.last
   4b48c:	str	x0, [sp, #152]
   4b490:	lsl	x0, x0, #5
   4b494:	str	x0, [sp, #304]
   4b498:	bl	ccf0 <mpfr_allocate_func@plt>
   4b49c:	str	x0, [sp, #248]
   4b4a0:	cmp	x23, #0x1
   4b4a4:	b.ls	4b9e0 <mpfr_lngamma@@Base+0x1560>  // b.plast
   4b4a8:	add	x20, x0, #0x40
   4b4ac:	add	x19, x0, x23, lsl #5
   4b4b0:	ldr	x22, [sp, #160]
   4b4b4:	mov	x21, x20
   4b4b8:	mov	x0, x21
   4b4bc:	mov	x1, x22
   4b4c0:	bl	ca80 <mpfr_init2@plt>
   4b4c4:	cmp	x19, x21
   4b4c8:	add	x21, x21, #0x20
   4b4cc:	b.ne	4b4b8 <mpfr_lngamma@@Base+0x1038>  // b.any
   4b4d0:	ldr	x1, [sp, #144]
   4b4d4:	mov	x0, x20
   4b4d8:	mov	w2, #0x0                   	// #0
   4b4dc:	str	x20, [sp, #272]
   4b4e0:	bl	c400 <mpfr_sqr@plt>
   4b4e4:	cmp	x23, #0x2
   4b4e8:	b.ls	4b528 <mpfr_lngamma@@Base+0x10a8>  // b.plast
   4b4ec:	ldr	x21, [sp, #248]
   4b4f0:	mov	x19, #0x3                   	// #3
   4b4f4:	ldr	x22, [sp, #144]
   4b4f8:	add	x20, x21, #0x60
   4b4fc:	nop
   4b500:	tbnz	w19, #0, 4b724 <mpfr_lngamma@@Base+0x12a4>
   4b504:	lsr	x1, x19, #1
   4b508:	mov	x0, x20
   4b50c:	mov	w2, #0x0                   	// #0
   4b510:	add	x1, x21, x1, lsl #5
   4b514:	bl	c400 <mpfr_sqr@plt>
   4b518:	cmp	x19, x23
   4b51c:	add	x20, x20, #0x20
   4b520:	add	x19, x19, #0x1
   4b524:	b.ne	4b500 <mpfr_lngamma@@Base+0x1080>  // b.any
   4b528:	ldr	x0, [sp, #152]
   4b52c:	lsl	x0, x0, #4
   4b530:	str	x0, [sp, #312]
   4b534:	bl	ccf0 <mpfr_allocate_func@plt>
   4b538:	mov	x19, x0
   4b53c:	add	x1, x23, #0x1
   4b540:	mov	x20, x0
   4b544:	str	x0, [sp, #280]
   4b548:	add	x21, x0, x1, lsl #4
   4b54c:	str	x21, [sp, #296]
   4b550:	mov	x0, x20
   4b554:	add	x20, x20, #0x10
   4b558:	bl	bf90 <mpfr_mpz_init@plt>
   4b55c:	cmp	x21, x20
   4b560:	b.ne	4b550 <mpfr_lngamma@@Base+0x10d0>  // b.any
   4b564:	ldr	x0, [sp, #152]
   4b568:	ldr	x1, [sp, #192]
   4b56c:	cmp	x0, x1
   4b570:	b.hi	4b9cc <mpfr_lngamma@@Base+0x154c>  // b.pmore
   4b574:	add	x0, x19, #0x10
   4b578:	str	x0, [sp, #232]
   4b57c:	ldr	x0, [sp, #248]
   4b580:	mov	x27, #0x1                   	// #1
   4b584:	mov	x1, #0x1                   	// #1
   4b588:	mov	x25, x27
   4b58c:	add	x0, x0, #0x20
   4b590:	str	x24, [sp, #208]
   4b594:	str	x0, [sp, #240]
   4b598:	mov	x0, x19
   4b59c:	bl	bcb0 <__gmpz_set_ui@plt>
   4b5a0:	cbz	x23, 4b710 <mpfr_lngamma@@Base+0x1290>
   4b5a4:	nop
   4b5a8:	ldr	x27, [sp, #232]
   4b5ac:	mov	x1, x19
   4b5b0:	sub	x25, x25, #0x1
   4b5b4:	mov	x21, #0x1                   	// #1
   4b5b8:	mov	x0, x27
   4b5bc:	bl	bfa0 <__gmpz_set@plt>
   4b5c0:	add	x2, x21, x25
   4b5c4:	mov	x1, x19
   4b5c8:	mov	x0, x19
   4b5cc:	bl	c100 <__gmpz_mul_ui@plt>
   4b5d0:	mov	x22, x27
   4b5d4:	cmp	x21, x23
   4b5d8:	b.eq	4b640 <mpfr_lngamma@@Base+0x11c0>  // b.none
   4b5dc:	nop
   4b5e0:	add	x21, x21, #0x1
   4b5e4:	add	x24, x27, #0x10
   4b5e8:	add	x20, x21, x25
   4b5ec:	mov	x0, x24
   4b5f0:	mov	x1, x27
   4b5f4:	bl	bfa0 <__gmpz_set@plt>
   4b5f8:	mov	x1, x27
   4b5fc:	mov	x0, x27
   4b600:	mov	x2, x20
   4b604:	bl	c100 <__gmpz_mul_ui@plt>
   4b608:	sub	x2, x27, #0x10
   4b60c:	mov	x1, x27
   4b610:	mov	x0, x27
   4b614:	mov	x27, x2
   4b618:	bl	c9c0 <__gmpz_add@plt>
   4b61c:	cmp	x19, x27
   4b620:	b.ne	4b5f8 <mpfr_lngamma@@Base+0x1178>  // b.any
   4b624:	add	x2, x21, x25
   4b628:	mov	x1, x19
   4b62c:	mov	x0, x19
   4b630:	bl	c100 <__gmpz_mul_ui@plt>
   4b634:	mov	x27, x24
   4b638:	cmp	x21, x23
   4b63c:	b.ne	4b5e0 <mpfr_lngamma@@Base+0x1160>  // b.any
   4b640:	mov	x1, x19
   4b644:	mov	x0, x26
   4b648:	mov	w2, #0x0                   	// #0
   4b64c:	bl	c240 <mpfr_set_z@plt>
   4b650:	ldr	x24, [sp, #144]
   4b654:	mov	x20, #0x0                   	// #0
   4b658:	ldr	x21, [sp, #240]
   4b65c:	nop
   4b660:	cbnz	x20, 4b69c <mpfr_lngamma@@Base+0x121c>
   4b664:	mov	x2, x22
   4b668:	mov	x1, x24
   4b66c:	mov	w3, #0x0                   	// #0
   4b670:	mov	x0, x28
   4b674:	bl	c4d0 <mpfr_mul_z@plt>
   4b678:	add	x22, x22, #0x10
   4b67c:	mov	x2, x28
   4b680:	mov	x1, x26
   4b684:	mov	x0, x26
   4b688:	mov	w3, #0x0                   	// #0
   4b68c:	bl	c1a0 <mpfr_add@plt>
   4b690:	cmp	x23, #0x1
   4b694:	b.eq	4b6d4 <mpfr_lngamma@@Base+0x1254>  // b.none
   4b698:	mov	x20, #0x1                   	// #1
   4b69c:	mov	x2, x22
   4b6a0:	add	x1, x21, x20, lsl #5
   4b6a4:	mov	w3, #0x0                   	// #0
   4b6a8:	mov	x0, x28
   4b6ac:	bl	c4d0 <mpfr_mul_z@plt>
   4b6b0:	add	x20, x20, #0x1
   4b6b4:	mov	x2, x28
   4b6b8:	mov	x1, x26
   4b6bc:	mov	x0, x26
   4b6c0:	mov	w3, #0x0                   	// #0
   4b6c4:	bl	c1a0 <mpfr_add@plt>
   4b6c8:	add	x22, x22, #0x10
   4b6cc:	cmp	x23, x20
   4b6d0:	b.ne	4b660 <mpfr_lngamma@@Base+0x11e0>  // b.any
   4b6d4:	ldr	x0, [sp, #208]
   4b6d8:	mov	x2, x26
   4b6dc:	mov	w3, #0x0                   	// #0
   4b6e0:	mov	x1, x0
   4b6e4:	bl	bd50 <mpfr_mul@plt>
   4b6e8:	ldr	x25, [sp, #152]
   4b6ec:	ldr	x1, [sp, #192]
   4b6f0:	add	x0, x25, x23
   4b6f4:	cmp	x0, x1
   4b6f8:	b.hi	4b73c <mpfr_lngamma@@Base+0x12bc>  // b.pmore
   4b6fc:	mov	x1, #0x1                   	// #1
   4b700:	str	x0, [sp, #152]
   4b704:	mov	x0, x19
   4b708:	bl	bcb0 <__gmpz_set_ui@plt>
   4b70c:	cbnz	x23, 4b5a8 <mpfr_lngamma@@Base+0x1128>
   4b710:	mov	x1, x19
   4b714:	mov	x0, x26
   4b718:	mov	w2, #0x0                   	// #0
   4b71c:	bl	c240 <mpfr_set_z@plt>
   4b720:	b	4b6d4 <mpfr_lngamma@@Base+0x1254>
   4b724:	mov	x2, x22
   4b728:	sub	x1, x20, #0x20
   4b72c:	mov	x0, x20
   4b730:	mov	w3, #0x0                   	// #0
   4b734:	bl	bd50 <mpfr_mul@plt>
   4b738:	b	4b518 <mpfr_lngamma@@Base+0x1098>
   4b73c:	ldr	x24, [sp, #208]
   4b740:	ldr	x20, [sp, #280]
   4b744:	ldr	x21, [sp, #296]
   4b748:	mov	x0, x20
   4b74c:	add	x20, x20, #0x10
   4b750:	bl	c170 <mpfr_mpz_clear@plt>
   4b754:	cmp	x20, x21
   4b758:	b.ne	4b748 <mpfr_lngamma@@Base+0x12c8>  // b.any
   4b75c:	ldr	x1, [sp, #312]
   4b760:	mov	x0, x19
   4b764:	bl	cc20 <mpfr_free_func@plt>
   4b768:	ldr	x0, [sp, #248]
   4b76c:	cmp	x23, #0x1
   4b770:	ldr	x20, [sp, #272]
   4b774:	add	x23, x0, x23, lsl #5
   4b778:	b.ls	4b794 <mpfr_lngamma@@Base+0x1314>  // b.plast
   4b77c:	nop
   4b780:	mov	x0, x20
   4b784:	bl	c070 <mpfr_clear@plt>
   4b788:	cmp	x20, x23
   4b78c:	add	x20, x20, #0x20
   4b790:	b.ne	4b780 <mpfr_lngamma@@Base+0x1300>  // b.any
   4b794:	ldr	x0, [sp, #248]
   4b798:	ldr	x1, [sp, #304]
   4b79c:	bl	cc20 <mpfr_free_func@plt>
   4b7a0:	ldr	x1, [sp, #152]
   4b7a4:	ldr	x0, [sp, #192]
   4b7a8:	cmp	x0, x1
   4b7ac:	b.ls	4b7f4 <mpfr_lngamma@@Base+0x1374>  // b.plast
   4b7b0:	ldr	x21, [sp, #144]
   4b7b4:	mov	x19, x1
   4b7b8:	mov	x20, x0
   4b7bc:	nop
   4b7c0:	mov	x2, x19
   4b7c4:	mov	x1, x21
   4b7c8:	mov	w3, #0x0                   	// #0
   4b7cc:	mov	x0, x26
   4b7d0:	bl	c260 <mpfr_add_ui@plt>
   4b7d4:	add	x19, x19, #0x1
   4b7d8:	mov	x2, x26
   4b7dc:	mov	x1, x24
   4b7e0:	mov	x0, x24
   4b7e4:	mov	w3, #0x0                   	// #0
   4b7e8:	bl	bd50 <mpfr_mul@plt>
   4b7ec:	cmp	x20, x19
   4b7f0:	b.ne	4b7c0 <mpfr_lngamma@@Base+0x1340>  // b.any
   4b7f4:	mov	x2, x24
   4b7f8:	mov	x1, x24
   4b7fc:	mov	w3, #0x0                   	// #0
   4b800:	mov	x0, x24
   4b804:	bl	bd50 <mpfr_mul@plt>
   4b808:	ldr	x19, [sp, #256]
   4b80c:	mov	w3, #0x0                   	// #0
   4b810:	mov	x2, x24
   4b814:	mov	x1, x19
   4b818:	mov	x0, x19
   4b81c:	bl	c620 <mpfr_div@plt>
   4b820:	mov	x1, x19
   4b824:	mov	w2, #0x0                   	// #0
   4b828:	mov	x0, x24
   4b82c:	bl	c090 <mpfr_log@plt>
   4b830:	mov	x1, x24
   4b834:	mov	w3, #0x0                   	// #0
   4b838:	mov	x2, #0x1                   	// #1
   4b83c:	mov	x0, x24
   4b840:	bl	c8f0 <mpfr_div_2ui@plt>
   4b844:	ldr	d0, [sp, #192]
   4b848:	ldr	x19, [sp, #368]
   4b84c:	ucvtf	d0, d0
   4b850:	fmadd	d0, d0, d10, d9
   4b854:	bl	c950 <__gmpfr_ceil_log2@plt>
   4b858:	add	x19, x19, x0
   4b85c:	ldr	d0, [sp, #288]
   4b860:	ldr	x20, [sp, #336]
   4b864:	ucvtf	d1, d0
   4b868:	fmov	d0, #2.000000000000000000e+00
   4b86c:	fmadd	d0, d1, d0, d8
   4b870:	bl	c950 <__gmpfr_ceil_log2@plt>
   4b874:	add	x20, x20, x0
   4b878:	ldr	x0, [sp, #168]
   4b87c:	mov	x2, x24
   4b880:	mov	w3, #0x0                   	// #0
   4b884:	mov	x1, x0
   4b888:	bl	c1a0 <mpfr_add@plt>
   4b88c:	ldr	x1, [sp, #336]
   4b890:	cmp	x19, x20
   4b894:	csel	x3, x19, x20, ge  // ge = tcont
   4b898:	add	x0, x19, #0x1
   4b89c:	csel	x0, x0, x3, eq  // eq = none
   4b8a0:	mov	x2, #0x1                   	// #1
   4b8a4:	sub	x2, x2, x1
   4b8a8:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   4b8ac:	add	x2, x2, x0
   4b8b0:	cmp	x1, x3
   4b8b4:	b.le	4b948 <mpfr_lngamma@@Base+0x14c8>
   4b8b8:	ldr	w0, [sp, #200]
   4b8bc:	ldr	x3, [sp, #160]
   4b8c0:	cmp	w0, #0x0
   4b8c4:	ldr	x1, [sp, #320]
   4b8c8:	sub	x2, x3, x2
   4b8cc:	ldr	x0, [sp, #344]
   4b8d0:	sub	x1, x1, #0x1
   4b8d4:	ldr	x3, [sp, #176]
   4b8d8:	asr	x1, x1, #6
   4b8dc:	add	x1, x1, #0x1
   4b8e0:	cinc	x3, x3, eq  // eq = none
   4b8e4:	bl	c370 <mpfr_round_p@plt>
   4b8e8:	cbz	w0, 4b948 <mpfr_lngamma@@Base+0x14c8>
   4b8ec:	ldr	x22, [sp, #168]
   4b8f0:	ldr	x27, [sp, #256]
   4b8f4:	b	4a9cc <mpfr_lngamma@@Base+0x54c>
   4b8f8:	ldr	x2, [sp, #144]
   4b8fc:	mov	w3, #0x2                   	// #2
   4b900:	ldr	x19, [sp, #168]
   4b904:	mov	x1, x19
   4b908:	mov	x0, x19
   4b90c:	bl	bb70 <mpfr_sub@plt>
   4b910:	mov	w1, #0x2                   	// #2
   4b914:	mov	x0, x19
   4b918:	bl	bca0 <mpfr_get_ui@plt>
   4b91c:	cmp	x0, #0x3
   4b920:	mov	x1, #0x3                   	// #3
   4b924:	csel	x0, x0, x1, cs  // cs = hs, nlast
   4b928:	str	x0, [sp, #192]
   4b92c:	b	4b158 <mpfr_lngamma@@Base+0xcd8>
   4b930:	ldr	x0, [sp, #168]
   4b934:	mov	w3, #0x0                   	// #0
   4b938:	mov	x2, #0xfffffffffffffff6    	// #-10
   4b93c:	mov	x1, #0x333                 	// #819
   4b940:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4b944:	b	4b110 <mpfr_lngamma@@Base+0xc90>
   4b948:	ldr	x1, [sp, #160]
   4b94c:	mov	x0, #0xfffffffffffffeff    	// #-257
   4b950:	movk	x0, #0x7fff, lsl #48
   4b954:	sub	x0, x0, x1
   4b958:	ldr	x1, [sp, #264]
   4b95c:	cmp	x0, x1
   4b960:	b.lt	4bb08 <mpfr_lngamma@@Base+0x1688>  // b.tstop
   4b964:	ldr	x0, [sp, #160]
   4b968:	add	x0, x0, x1
   4b96c:	str	x0, [sp, #160]
   4b970:	add	x0, x0, x0, lsr #63
   4b974:	asr	x0, x0, #1
   4b978:	str	x0, [sp, #264]
   4b97c:	ldr	x0, [sp, #168]
   4b980:	b	4afa0 <mpfr_lngamma@@Base+0xb20>
   4b984:	ldr	x0, [sp, #168]
   4b988:	mov	w3, #0x0                   	// #0
   4b98c:	mov	x2, #0xfffffffffffffff6    	// #-10
   4b990:	mov	x1, #0x8cd                 	// #2253
   4b994:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4b998:	b	4b110 <mpfr_lngamma@@Base+0xc90>
   4b99c:	ldr	x0, [sp, #168]
   4b9a0:	mov	w3, #0x0                   	// #0
   4b9a4:	mov	x2, #0xfffffffffffffff6    	// #-10
   4b9a8:	mov	x1, #0x6cd                 	// #1741
   4b9ac:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4b9b0:	b	4b110 <mpfr_lngamma@@Base+0xc90>
   4b9b4:	ldr	x0, [sp, #168]
   4b9b8:	mov	w3, #0x0                   	// #0
   4b9bc:	mov	x2, #0xfffffffffffffff6    	// #-10
   4b9c0:	mov	x1, #0x533                 	// #1331
   4b9c4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4b9c8:	b	4b110 <mpfr_lngamma@@Base+0xc90>
   4b9cc:	mov	x0, #0x1                   	// #1
   4b9d0:	str	x0, [sp, #152]
   4b9d4:	ldr	x20, [sp, #280]
   4b9d8:	ldr	x21, [sp, #296]
   4b9dc:	b	4b748 <mpfr_lngamma@@Base+0x12c8>
   4b9e0:	ldr	x1, [sp, #144]
   4b9e4:	add	x0, x0, #0x40
   4b9e8:	mov	w2, #0x0                   	// #0
   4b9ec:	str	x0, [sp, #272]
   4b9f0:	bl	c400 <mpfr_sqr@plt>
   4b9f4:	b	4b528 <mpfr_lngamma@@Base+0x10a8>
   4b9f8:	mov	x0, #0x2                   	// #2
   4b9fc:	str	x0, [sp, #288]
   4ba00:	b	4b41c <mpfr_lngamma@@Base+0xf9c>
   4ba04:	ldr	x3, [sp, #184]
   4ba08:	ldr	w1, [sp, #200]
   4ba0c:	ldr	x0, [sp, #376]
   4ba10:	cmp	w1, #0x0
   4ba14:	sub	x1, x2, #0x1
   4ba18:	sub	x2, x2, #0x3
   4ba1c:	ldr	x3, [x3]
   4ba20:	asr	x1, x1, #6
   4ba24:	add	x1, x1, #0x1
   4ba28:	cinc	x3, x3, eq  // eq = none
   4ba2c:	bl	c370 <mpfr_round_p@plt>
   4ba30:	cbz	w0, 4b0dc <mpfr_lngamma@@Base+0xc5c>
   4ba34:	ldr	w2, [sp, #200]
   4ba38:	mov	x1, x24
   4ba3c:	ldr	w3, [sp, #360]
   4ba40:	ldr	x20, [sp, #184]
   4ba44:	mov	x0, x20
   4ba48:	bl	c6a0 <mpfr_set4@plt>
   4ba4c:	mov	w23, w0
   4ba50:	mov	x0, x24
   4ba54:	bl	c070 <mpfr_clear@plt>
   4ba58:	ldp	x1, x2, [sp, #216]
   4ba5c:	str	x1, [x21]
   4ba60:	ldr	w0, [sp, #204]
   4ba64:	str	w0, [x19]
   4ba68:	ldr	x0, [x20, #16]
   4ba6c:	str	x2, [x22]
   4ba70:	cmp	x2, x0
   4ba74:	ccmp	x1, x0, #0x0, ge  // ge = tcont
   4ba78:	b.le	4bab4 <mpfr_lngamma@@Base+0x1634>
   4ba7c:	ldr	w2, [sp, #200]
   4ba80:	mov	w1, w23
   4ba84:	ldr	x0, [sp, #184]
   4ba88:	b	4adcc <mpfr_lngamma@@Base+0x94c>
   4ba8c:	mov	x0, #0xe                   	// #14
   4ba90:	str	x0, [sp, #160]
   4ba94:	b	4af78 <mpfr_lngamma@@Base+0xaf8>
   4ba98:	ldr	x0, [sp, #168]
   4ba9c:	mov	x2, #0xffffffffffffffff    	// #-1
   4baa0:	mov	x1, #0x9                   	// #9
   4baa4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4baa8:	b	4b110 <mpfr_lngamma@@Base+0xc90>
   4baac:	mov	x25, #0xf                   	// #15
   4bab0:	b	4a764 <mpfr_lngamma@@Base+0x2e4>
   4bab4:	cbz	w23, 4aea0 <mpfr_lngamma@@Base+0xa20>
   4bab8:	ldr	w0, [sp, #204]
   4babc:	ldp	x25, x26, [sp, #64]
   4bac0:	orr	w0, w0, #0x8
   4bac4:	ldp	x27, x28, [sp, #80]
   4bac8:	ldp	d8, d9, [sp, #96]
   4bacc:	ldr	d10, [sp, #112]
   4bad0:	str	w0, [x19]
   4bad4:	b	4ade4 <mpfr_lngamma@@Base+0x964>
   4bad8:	mov	x0, x24
   4badc:	bl	c070 <mpfr_clear@plt>
   4bae0:	ldp	w1, w3, [sp, #200]
   4bae4:	str	w3, [x19]
   4bae8:	ldr	x3, [sp, #216]
   4baec:	str	x3, [x21]
   4baf0:	ldr	x0, [sp, #184]
   4baf4:	mov	w2, #0x1                   	// #1
   4baf8:	ldr	x3, [sp, #224]
   4bafc:	str	x3, [x22]
   4bb00:	bl	bf40 <mpfr_overflow@plt>
   4bb04:	b	4add0 <mpfr_lngamma@@Base+0x950>
   4bb08:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   4bb0c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   4bb10:	add	x2, x2, #0x610
   4bb14:	add	x0, x0, #0x4d8
   4bb18:	mov	w1, #0x2b8                 	// #696
   4bb1c:	bl	cb40 <mpfr_assert_fail@plt>
   4bb20:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   4bb24:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   4bb28:	add	x2, x2, #0x1a8
   4bb2c:	add	x0, x0, #0x4d8
   4bb30:	mov	w1, #0x14a                 	// #330
   4bb34:	bl	cb40 <mpfr_assert_fail@plt>
   4bb38:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   4bb3c:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   4bb40:	add	x2, x2, #0x1a8
   4bb44:	add	x0, x0, #0x4d8
   4bb48:	mov	w1, #0x1b0                 	// #432
   4bb4c:	bl	cb40 <mpfr_assert_fail@plt>

000000000004bb50 <mpfr_lgamma@@Base>:
   4bb50:	stp	x29, x30, [sp, #-176]!
   4bb54:	mov	x29, sp
   4bb58:	stp	x19, x20, [sp, #16]
   4bb5c:	mov	x20, x2
   4bb60:	mov	x19, #0x8000000000000003    	// #-9223372036854775805
   4bb64:	stp	x21, x22, [sp, #32]
   4bb68:	mov	w21, #0x1                   	// #1
   4bb6c:	mov	x22, x0
   4bb70:	stp	x23, x24, [sp, #48]
   4bb74:	mov	x24, x1
   4bb78:	stp	x27, x28, [sp, #80]
   4bb7c:	ldr	x2, [x2, #16]
   4bb80:	str	w21, [x1]
   4bb84:	cmp	x2, x19
   4bb88:	b.le	4bed0 <mpfr_lgamma@@Base+0x380>
   4bb8c:	ldr	w0, [x20, #8]
   4bb90:	mov	w23, w3
   4bb94:	tbnz	w0, #31, 4bbc8 <mpfr_lgamma@@Base+0x78>
   4bb98:	mov	w2, w23
   4bb9c:	mov	x1, x20
   4bba0:	mov	x0, x22
   4bba4:	bl	4a5f8 <mpfr_lngamma@@Base+0x178>
   4bba8:	mov	w27, w0
   4bbac:	mov	w0, w27
   4bbb0:	ldp	x19, x20, [sp, #16]
   4bbb4:	ldp	x21, x22, [sp, #32]
   4bbb8:	ldp	x23, x24, [sp, #48]
   4bbbc:	ldp	x27, x28, [sp, #80]
   4bbc0:	ldp	x29, x30, [sp], #176
   4bbc4:	ret
   4bbc8:	mov	x0, x20
   4bbcc:	bl	c160 <mpfr_integer_p@plt>
   4bbd0:	cbnz	w0, 4be78 <mpfr_lgamma@@Base+0x328>
   4bbd4:	ldr	x1, [x20, #16]
   4bbd8:	cmp	x1, #0x0
   4bbdc:	b.le	4bdc0 <mpfr_lgamma@@Base+0x270>
   4bbe0:	ldr	x0, [x20]
   4bbe4:	cmp	x1, x0
   4bbe8:	b.gt	4bdc0 <mpfr_lgamma@@Base+0x270>
   4bbec:	sub	x0, x0, #0x1
   4bbf0:	and	x0, x0, #0xffffffffffffffc0
   4bbf4:	add	x0, x0, #0x40
   4bbf8:	subs	x0, x0, x1
   4bbfc:	add	x3, x0, #0x3f
   4bc00:	csel	x3, x3, x0, mi  // mi = first
   4bc04:	negs	x2, x0
   4bc08:	ldr	x4, [x20, #24]
   4bc0c:	asr	x3, x3, #6
   4bc10:	and	x2, x2, #0x3f
   4bc14:	and	x0, x0, #0x3f
   4bc18:	csneg	x0, x0, x2, mi  // mi = first
   4bc1c:	ldr	x2, [x4, x3, lsl #3]
   4bc20:	lsr	x0, x2, x0
   4bc24:	tbz	w0, #0, 4bdc0 <mpfr_lgamma@@Base+0x270>
   4bc28:	ldr	x5, [x22]
   4bc2c:	neg	x0, x5
   4bc30:	cmp	x0, x1
   4bc34:	b.le	4bb98 <mpfr_lgamma@@Base+0x48>
   4bc38:	mrs	x24, tpidr_el0
   4bc3c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4bc40:	ldr	x1, [x0, #2576]
   4bc44:	add	x0, x0, #0xa10
   4bc48:	blr	x1
   4bc4c:	stp	x25, x26, [sp, #64]
   4bc50:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4bc54:	add	x26, x5, #0xe
   4bc58:	ldr	w0, [x24, x0]
   4bc5c:	add	x21, sp, #0x70
   4bc60:	str	w0, [sp, #100]
   4bc64:	add	x19, sp, #0x90
   4bc68:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4bc6c:	mov	w25, #0x43                  	// #67
   4bc70:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4bc74:	ldr	x2, [x0, #2512]
   4bc78:	add	x0, x0, #0x9d0
   4bc7c:	blr	x2
   4bc80:	add	x2, x24, x0
   4bc84:	ldr	x28, [x24, x0]
   4bc88:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4bc8c:	ldr	x4, [x0, #2544]
   4bc90:	add	x0, x0, #0x9f0
   4bc94:	blr	x4
   4bc98:	str	x3, [x2]
   4bc9c:	ldr	x2, [x24, x0]
   4bca0:	str	x1, [x24, x0]
   4bca4:	str	x2, [sp, #104]
   4bca8:	mov	x1, x26
   4bcac:	mov	x0, x21
   4bcb0:	bl	ca80 <mpfr_init2@plt>
   4bcb4:	mov	x1, x26
   4bcb8:	mov	x0, x19
   4bcbc:	bl	ca80 <mpfr_init2@plt>
   4bcc0:	mov	x1, x20
   4bcc4:	mov	w2, #0x2                   	// #2
   4bcc8:	mov	x0, x21
   4bccc:	bl	bd70 <mpfr_neg@plt>
   4bcd0:	mov	x1, x21
   4bcd4:	mov	w2, #0x2                   	// #2
   4bcd8:	mov	x0, x21
   4bcdc:	bl	c090 <mpfr_log@plt>
   4bce0:	mov	x1, x21
   4bce4:	mov	w2, #0x3                   	// #3
   4bce8:	mov	x0, x21
   4bcec:	bl	bd70 <mpfr_neg@plt>
   4bcf0:	mov	x1, x20
   4bcf4:	mov	w2, #0x3                   	// #3
   4bcf8:	mov	x0, x19
   4bcfc:	bl	bd70 <mpfr_neg@plt>
   4bd00:	mov	x1, x19
   4bd04:	mov	w2, #0x3                   	// #3
   4bd08:	mov	x0, x19
   4bd0c:	bl	c090 <mpfr_log@plt>
   4bd10:	mov	x1, x19
   4bd14:	mov	w2, #0x2                   	// #2
   4bd18:	mov	x0, x19
   4bd1c:	bl	bd70 <mpfr_neg@plt>
   4bd20:	mov	x2, x20
   4bd24:	mov	x1, x19
   4bd28:	mov	w3, #0x2                   	// #2
   4bd2c:	mov	x0, x19
   4bd30:	bl	bb70 <mpfr_sub@plt>
   4bd34:	ldr	x1, [x22]
   4bd38:	mov	w2, w23
   4bd3c:	mov	x0, x21
   4bd40:	bl	c970 <mpfr_prec_round@plt>
   4bd44:	mov	w27, w0
   4bd48:	ldr	x1, [x22]
   4bd4c:	mov	w2, w23
   4bd50:	mov	x0, x19
   4bd54:	bl	c970 <mpfr_prec_round@plt>
   4bd58:	tbnz	w27, #31, 4bdcc <mpfr_lgamma@@Base+0x27c>
   4bd5c:	tbnz	w0, #31, 4bd78 <mpfr_lgamma@@Base+0x228>
   4bd60:	cmp	w27, #0x0
   4bd64:	cset	w1, gt
   4bd68:	cmp	w0, #0x0
   4bd6c:	cset	w0, gt
   4bd70:	cmp	w1, w0
   4bd74:	b.eq	4bdd0 <mpfr_lgamma@@Base+0x280>  // b.none
   4bd78:	mov	x0, x21
   4bd7c:	ldr	x27, [sp, #128]
   4bd80:	bl	c070 <mpfr_clear@plt>
   4bd84:	mov	x0, x19
   4bd88:	bl	c070 <mpfr_clear@plt>
   4bd8c:	ldr	x0, [x20, #16]
   4bd90:	add	x0, x26, x0
   4bd94:	cmp	x0, x27
   4bd98:	b.gt	4bf24 <mpfr_lgamma@@Base+0x3d4>
   4bd9c:	cmp	x26, #0x1
   4bda0:	b.eq	4bec4 <mpfr_lgamma@@Base+0x374>  // b.none
   4bda4:	b.le	4bf0c <mpfr_lgamma@@Base+0x3bc>
   4bda8:	sub	x0, x26, #0x1
   4bdac:	clz	x0, x0
   4bdb0:	sub	w0, w25, w0
   4bdb4:	sxtw	x0, w0
   4bdb8:	add	x26, x26, x0
   4bdbc:	b	4bca8 <mpfr_lgamma@@Base+0x158>
   4bdc0:	mov	w0, #0xffffffff            	// #-1
   4bdc4:	str	w0, [x24]
   4bdc8:	b	4bc28 <mpfr_lgamma@@Base+0xd8>
   4bdcc:	tbz	w0, #31, 4bd78 <mpfr_lgamma@@Base+0x228>
   4bdd0:	mov	x1, x19
   4bdd4:	mov	x0, x21
   4bdd8:	bl	ca60 <mpfr_equal_p@plt>
   4bddc:	cbz	w0, 4bd78 <mpfr_lgamma@@Base+0x228>
   4bde0:	ldr	w3, [sp, #152]
   4bde4:	mov	w2, w23
   4bde8:	mov	x1, x19
   4bdec:	mov	x0, x22
   4bdf0:	bl	c6a0 <mpfr_set4@plt>
   4bdf4:	mov	x0, x21
   4bdf8:	bl	c070 <mpfr_clear@plt>
   4bdfc:	mov	x0, x19
   4be00:	bl	c070 <mpfr_clear@plt>
   4be04:	ldr	x1, [x22, #16]
   4be08:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4be0c:	ldr	x2, [x0, #2576]
   4be10:	add	x0, x0, #0xa10
   4be14:	blr	x2
   4be18:	ldr	w2, [sp, #100]
   4be1c:	str	w2, [x24, x0]
   4be20:	add	x2, x24, x0
   4be24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4be28:	ldr	x3, [x0, #2512]
   4be2c:	add	x0, x0, #0x9d0
   4be30:	blr	x3
   4be34:	str	x28, [x24, x0]
   4be38:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4be3c:	ldr	x3, [x0, #2544]
   4be40:	add	x0, x0, #0x9f0
   4be44:	blr	x3
   4be48:	ldr	x3, [sp, #104]
   4be4c:	str	x3, [x24, x0]
   4be50:	cmp	x28, x1
   4be54:	ccmp	x3, x1, #0x1, le
   4be58:	b.ge	4bf70 <mpfr_lgamma@@Base+0x420>  // b.tcont
   4be5c:	mov	w1, w27
   4be60:	mov	w2, w23
   4be64:	mov	x0, x22
   4be68:	bl	cb30 <mpfr_check_range@plt>
   4be6c:	mov	w27, w0
   4be70:	ldp	x25, x26, [sp, #64]
   4be74:	b	4bbac <mpfr_lgamma@@Base+0x5c>
   4be78:	mrs	x1, tpidr_el0
   4be7c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4be80:	ldr	x2, [x0, #2576]
   4be84:	add	x0, x0, #0xa10
   4be88:	blr	x2
   4be8c:	add	x0, x1, x0
   4be90:	str	w21, [x22, #8]
   4be94:	str	x19, [x22, #16]
   4be98:	mov	w27, #0x0                   	// #0
   4be9c:	ldp	x19, x20, [sp, #16]
   4bea0:	ldr	w1, [x0]
   4bea4:	ldp	x21, x22, [sp, #32]
   4bea8:	orr	w1, w1, #0x20
   4beac:	str	w1, [x0]
   4beb0:	mov	w0, w27
   4beb4:	ldp	x23, x24, [sp, #48]
   4beb8:	ldp	x27, x28, [sp, #80]
   4bebc:	ldp	x29, x30, [sp], #176
   4bec0:	ret
   4bec4:	mov	x0, #0x3                   	// #3
   4bec8:	add	x26, x26, x0
   4becc:	b	4bca8 <mpfr_lgamma@@Base+0x158>
   4bed0:	mov	x0, #0x2                   	// #2
   4bed4:	movk	x0, #0x8000, lsl #48
   4bed8:	cmp	x2, x0
   4bedc:	b.eq	4bfb8 <mpfr_lgamma@@Base+0x468>  // b.none
   4bee0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4bee4:	cmp	x2, x0
   4bee8:	b.eq	4bf90 <mpfr_lgamma@@Base+0x440>  // b.none
   4beec:	ldr	w1, [x20, #8]
   4bef0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4bef4:	str	w1, [x24]
   4bef8:	mov	w27, #0x0                   	// #0
   4befc:	mov	w1, #0x1                   	// #1
   4bf00:	str	w1, [x22, #8]
   4bf04:	str	x0, [x22, #16]
   4bf08:	b	4bbac <mpfr_lgamma@@Base+0x5c>
   4bf0c:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   4bf10:	adrp	x0, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   4bf14:	add	x2, x2, #0x4b8
   4bf18:	add	x0, x0, #0x4d8
   4bf1c:	mov	w1, #0x35d                 	// #861
   4bf20:	bl	cb40 <mpfr_assert_fail@plt>
   4bf24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4bf28:	ldr	x1, [x0, #2576]
   4bf2c:	add	x0, x0, #0xa10
   4bf30:	blr	x1
   4bf34:	ldr	w1, [sp, #100]
   4bf38:	ldp	x25, x26, [sp, #64]
   4bf3c:	str	w1, [x24, x0]
   4bf40:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4bf44:	ldr	x1, [x0, #2512]
   4bf48:	add	x0, x0, #0x9d0
   4bf4c:	blr	x1
   4bf50:	str	x28, [x24, x0]
   4bf54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4bf58:	ldr	x1, [x0, #2544]
   4bf5c:	add	x0, x0, #0x9f0
   4bf60:	blr	x1
   4bf64:	ldr	x1, [sp, #104]
   4bf68:	str	x1, [x24, x0]
   4bf6c:	b	4bb98 <mpfr_lgamma@@Base+0x48>
   4bf70:	cbz	w27, 4bf88 <mpfr_lgamma@@Base+0x438>
   4bf74:	ldr	w0, [sp, #100]
   4bf78:	orr	w26, w0, #0x8
   4bf7c:	str	w26, [x2]
   4bf80:	ldp	x25, x26, [sp, #64]
   4bf84:	b	4bbac <mpfr_lgamma@@Base+0x5c>
   4bf88:	ldp	x25, x26, [sp, #64]
   4bf8c:	b	4bbac <mpfr_lgamma@@Base+0x5c>
   4bf90:	mrs	x1, tpidr_el0
   4bf94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4bf98:	ldr	x2, [x0, #2576]
   4bf9c:	add	x0, x0, #0xa10
   4bfa0:	blr	x2
   4bfa4:	add	x0, x1, x0
   4bfa8:	ldr	w1, [x0]
   4bfac:	orr	w1, w1, #0x20
   4bfb0:	str	w1, [x0]
   4bfb4:	b	4beec <mpfr_lgamma@@Base+0x39c>
   4bfb8:	mrs	x1, tpidr_el0
   4bfbc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4bfc0:	ldr	x3, [x0, #2576]
   4bfc4:	add	x0, x0, #0xa10
   4bfc8:	blr	x3
   4bfcc:	add	x0, x1, x0
   4bfd0:	mov	w27, #0x0                   	// #0
   4bfd4:	str	x2, [x22, #16]
   4bfd8:	ldr	w1, [x0]
   4bfdc:	orr	w1, w1, #0x4
   4bfe0:	str	w1, [x0]
   4bfe4:	b	4bbac <mpfr_lgamma@@Base+0x5c>

000000000004bfe8 <mpfr_zeta_ui@@Base>:
   4bfe8:	stp	x29, x30, [sp, #-304]!
   4bfec:	mov	x29, sp
   4bff0:	stp	x19, x20, [sp, #16]
   4bff4:	str	x0, [sp, #144]
   4bff8:	str	w2, [sp, #168]
   4bffc:	cbz	x1, 4c700 <mpfr_zeta_ui@@Base+0x718>
   4c000:	mrs	x2, tpidr_el0
   4c004:	stp	x27, x28, [sp, #80]
   4c008:	mov	x27, x1
   4c00c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c010:	ldr	x1, [x0, #2576]
   4c014:	add	x0, x0, #0xa10
   4c018:	blr	x1
   4c01c:	add	x1, x2, x0
   4c020:	ldr	w0, [x2, x0]
   4c024:	cmp	x27, #0x1
   4c028:	str	x2, [sp, #160]
   4c02c:	str	w0, [sp, #172]
   4c030:	b.eq	4c724 <mpfr_zeta_ui@@Base+0x73c>  // b.none
   4c034:	ldr	w1, [sp, #168]
   4c038:	mov	w0, #0x2                   	// #2
   4c03c:	mov	x4, x2
   4c040:	stp	x23, x24, [sp, #48]
   4c044:	cmp	w1, #0x4
   4c048:	csel	w0, w1, w0, ne  // ne = any
   4c04c:	str	w0, [sp, #168]
   4c050:	ldr	x0, [sp, #144]
   4c054:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4c058:	ldr	x23, [x0]
   4c05c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c060:	ldr	x1, [x0, #2512]
   4c064:	add	x0, x0, #0x9d0
   4c068:	blr	x1
   4c06c:	add	x2, x2, x0
   4c070:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4c074:	ldr	x0, [x4, x0]
   4c078:	str	x0, [sp, #184]
   4c07c:	str	x3, [x2]
   4c080:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c084:	ldr	x5, [x0, #2544]
   4c088:	add	x0, x0, #0x9f0
   4c08c:	blr	x5
   4c090:	ldr	x2, [x4, x0]
   4c094:	str	x1, [x4, x0]
   4c098:	str	x2, [sp, #192]
   4c09c:	cmp	x23, x27
   4c0a0:	b.ls	4c4ac <mpfr_zeta_ui@@Base+0x4c4>  // b.plast
   4c0a4:	add	x19, sp, #0x110
   4c0a8:	mov	x1, #0x1f                  	// #31
   4c0ac:	mov	x0, x19
   4c0b0:	str	x19, [sp, #176]
   4c0b4:	bl	ca80 <mpfr_init2@plt>
   4c0b8:	add	x0, x23, x23, lsr #63
   4c0bc:	cmp	x27, x0, asr #1
   4c0c0:	b.cc	4c0fc <mpfr_zeta_ui@@Base+0x114>  // b.lo, b.ul, b.last
   4c0c4:	mov	x0, x19
   4c0c8:	adrp	x1, 66000 <mpfr_bases@@Base+0x16f8>
   4c0cc:	add	x1, x1, #0x148
   4c0d0:	bl	c340 <mpfr_set_str_binary@plt>
   4c0d4:	mov	w3, #0x1                   	// #1
   4c0d8:	mov	x2, x27
   4c0dc:	mov	x1, x19
   4c0e0:	mov	x0, x19
   4c0e4:	bl	ba50 <mpfr_mul_ui@plt>
   4c0e8:	add	x1, x23, #0x2
   4c0ec:	mov	x0, x19
   4c0f0:	mov	x2, #0x0                   	// #0
   4c0f4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4c0f8:	tbz	w0, #31, 4c7ac <mpfr_zeta_ui@@Base+0x7c4>
   4c0fc:	stp	x21, x22, [sp, #32]
   4c100:	add	x21, sp, #0xf0
   4c104:	mov	x0, x21
   4c108:	add	x22, sp, #0xd0
   4c10c:	stp	x25, x26, [sp, #64]
   4c110:	add	x19, sp, #0xe0
   4c114:	str	d8, [sp, #96]
   4c118:	bl	bf90 <mpfr_mpz_init@plt>
   4c11c:	mov	x0, x22
   4c120:	bl	bf90 <mpfr_mpz_init@plt>
   4c124:	mov	x0, x19
   4c128:	add	x20, sp, #0x100
   4c12c:	bl	bf90 <mpfr_mpz_init@plt>
   4c130:	mov	x0, x20
   4c134:	bl	bf90 <mpfr_mpz_init@plt>
   4c138:	cmp	x23, #0x1
   4c13c:	b.eq	4c834 <mpfr_zeta_ui@@Base+0x84c>  // b.none
   4c140:	b.le	4c878 <mpfr_zeta_ui@@Base+0x890>
   4c144:	sub	x2, x23, #0x1
   4c148:	mov	w0, #0x40                  	// #64
   4c14c:	clz	x2, x2
   4c150:	mov	w1, #0x4f                  	// #79
   4c154:	sub	w0, w0, w2
   4c158:	add	x23, x23, w0, sxtw
   4c15c:	sub	x0, x23, #0x1
   4c160:	clz	x0, x0
   4c164:	sub	w0, w1, w0
   4c168:	add	x0, x23, w0, sxtw
   4c16c:	str	x0, [sp, #152]
   4c170:	mov	x0, #0x40                  	// #64
   4c174:	str	x0, [sp, #200]
   4c178:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4c17c:	sub	x25, x27, #0x1
   4c180:	ldr	d8, [x0, #408]
   4c184:	ldr	d0, [sp, #152]
   4c188:	ldr	x1, [sp, #152]
   4c18c:	scvtf	d0, d0
   4c190:	ldr	x0, [sp, #176]
   4c194:	fmul	d0, d0, d8
   4c198:	fcvtzu	d0, d0
   4c19c:	str	d0, [sp, #120]
   4c1a0:	bl	bed0 <mpfr_set_prec@plt>
   4c1a4:	mov	x0, x21
   4c1a8:	mov	x1, #0x0                   	// #0
   4c1ac:	bl	bcb0 <__gmpz_set_ui@plt>
   4c1b0:	ldr	x26, [sp, #120]
   4c1b4:	mov	x1, #0x1                   	// #1
   4c1b8:	mov	x0, x19
   4c1bc:	add	x24, x26, x1
   4c1c0:	str	x24, [sp, #136]
   4c1c4:	bl	bcb0 <__gmpz_set_ui@plt>
   4c1c8:	mov	x28, x24
   4c1cc:	lsl	x2, x24, #1
   4c1d0:	mov	x1, x19
   4c1d4:	mov	x0, x19
   4c1d8:	sub	x2, x2, #0x1
   4c1dc:	bl	c200 <__gmpz_mul_2exp@plt>
   4c1e0:	add	x23, x26, #0x5
   4c1e4:	add	x2, x26, #0x2
   4c1e8:	mov	x1, x19
   4c1ec:	mov	x0, x22
   4c1f0:	str	x2, [sp, #128]
   4c1f4:	bl	bfa0 <__gmpz_set@plt>
   4c1f8:	cbz	x24, 4c2dc <mpfr_zeta_ui@@Base+0x2f4>
   4c1fc:	nop
   4c200:	clz	x0, x28
   4c204:	mov	x1, #0x40                  	// #64
   4c208:	sub	x1, x1, x0
   4c20c:	mul	x1, x1, x27
   4c210:	cmp	x1, #0x80
   4c214:	b.ls	4c61c <mpfr_zeta_ui@@Base+0x634>  // b.plast
   4c218:	mov	x1, #0x3f                  	// #63
   4c21c:	sub	x24, x1, x0
   4c220:	mov	x0, x22
   4c224:	mov	w1, #0x2                   	// #2
   4c228:	bl	cb60 <__gmpz_sizeinbase@plt>
   4c22c:	mul	x24, x24, x27
   4c230:	add	x24, x24, #0x1
   4c234:	cmp	x0, x24
   4c238:	b.cs	4c668 <mpfr_zeta_ui@@Base+0x680>  // b.hs, b.nlast
   4c23c:	mov	x0, x20
   4c240:	mov	x1, #0x0                   	// #0
   4c244:	bl	bcb0 <__gmpz_set_ui@plt>
   4c248:	mov	x2, x20
   4c24c:	mov	x1, x21
   4c250:	mov	x0, x21
   4c254:	tbz	w28, #0, 4c660 <mpfr_zeta_ui@@Base+0x678>
   4c258:	bl	c9c0 <__gmpz_add@plt>
   4c25c:	lsl	x0, x28, #1
   4c260:	mov	x1, #0xf334                	// #62260
   4c264:	movk	x1, #0xb504, lsl #16
   4c268:	sub	x24, x0, #0x1
   4c26c:	cmp	x28, x1
   4c270:	b.hi	4c594 <mpfr_zeta_ui@@Base+0x5ac>  // b.pmore
   4c274:	mul	x2, x28, x24
   4c278:	mov	x1, x19
   4c27c:	ldr	x3, [sp, #120]
   4c280:	mov	x0, x19
   4c284:	add	x24, x3, x28
   4c288:	bl	c100 <__gmpz_mul_ui@plt>
   4c28c:	mov	x1, x19
   4c290:	mov	x0, x19
   4c294:	mov	x2, #0x1                   	// #1
   4c298:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4c29c:	ldr	x1, [sp, #128]
   4c2a0:	mov	x0, #0xffffffff            	// #4294967295
   4c2a4:	sub	x2, x1, x28
   4c2a8:	ldr	x1, [sp, #136]
   4c2ac:	cmp	x1, x0
   4c2b0:	b.hi	4c580 <mpfr_zeta_ui@@Base+0x598>  // b.pmore
   4c2b4:	mul	x2, x24, x2
   4c2b8:	mov	x1, x19
   4c2bc:	mov	x0, x19
   4c2c0:	bl	c570 <__gmpz_divexact_ui@plt>
   4c2c4:	mov	x2, x19
   4c2c8:	mov	x1, x22
   4c2cc:	mov	x0, x22
   4c2d0:	bl	c9c0 <__gmpz_add@plt>
   4c2d4:	subs	x28, x28, #0x1
   4c2d8:	b.ne	4c200 <mpfr_zeta_ui@@Base+0x218>  // b.any
   4c2dc:	mov	x2, x25
   4c2e0:	mov	x1, x21
   4c2e4:	mov	x0, x19
   4c2e8:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4c2ec:	nop
   4c2f0:	mov	x2, x19
   4c2f4:	mov	x1, x21
   4c2f8:	mov	x0, x21
   4c2fc:	bl	c9c0 <__gmpz_add@plt>
   4c300:	mov	x0, x19
   4c304:	mov	x2, x25
   4c308:	mov	x1, x19
   4c30c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4c310:	ldr	w0, [sp, #228]
   4c314:	mov	x24, x23
   4c318:	add	x23, x23, #0x1
   4c31c:	cmp	w0, #0x0
   4c320:	b.gt	4c2f0 <mpfr_zeta_ui@@Base+0x308>
   4c324:	ldr	x28, [sp, #152]
   4c328:	mov	x1, x21
   4c32c:	mov	x0, x21
   4c330:	mov	x2, x28
   4c334:	bl	c200 <__gmpz_mul_2exp@plt>
   4c338:	mov	x2, x22
   4c33c:	mov	x1, x21
   4c340:	mov	x0, x21
   4c344:	bl	bb30 <__gmpz_tdiv_q@plt>
   4c348:	ldr	x26, [sp, #176]
   4c34c:	mov	x1, x21
   4c350:	mov	w2, #0x0                   	// #0
   4c354:	mov	x0, x26
   4c358:	bl	c240 <mpfr_set_z@plt>
   4c35c:	mov	x2, x28
   4c360:	mov	x1, x26
   4c364:	mov	x0, x26
   4c368:	mov	w3, #0x0                   	// #0
   4c36c:	bl	c8f0 <mpfr_div_2ui@plt>
   4c370:	cmp	x23, #0x1
   4c374:	b.eq	4c814 <mpfr_zeta_ui@@Base+0x82c>  // b.none
   4c378:	b.ls	4c81c <mpfr_zeta_ui@@Base+0x834>  // b.plast
   4c37c:	clz	x24, x24
   4c380:	mov	w2, #0x40                  	// #64
   4c384:	sub	w24, w2, w24
   4c388:	sxtw	x2, w24
   4c38c:	ldr	x1, [sp, #288]
   4c390:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4c394:	cmp	x1, x0
   4c398:	b.le	4c758 <mpfr_zeta_ui@@Base+0x770>
   4c39c:	ldp	x3, x4, [sp, #144]
   4c3a0:	ldr	w0, [sp, #168]
   4c3a4:	ldr	x1, [sp, #272]
   4c3a8:	cmp	w0, #0x0
   4c3ac:	ldr	x0, [sp, #296]
   4c3b0:	sub	x1, x1, #0x1
   4c3b4:	ldr	x3, [x3]
   4c3b8:	asr	x1, x1, #6
   4c3bc:	sub	x2, x4, x2
   4c3c0:	add	x1, x1, #0x1
   4c3c4:	cinc	x3, x3, eq  // eq = none
   4c3c8:	bl	c370 <mpfr_round_p@plt>
   4c3cc:	cbz	w0, 4c758 <mpfr_zeta_ui@@Base+0x770>
   4c3d0:	mov	x0, x22
   4c3d4:	bl	c170 <mpfr_mpz_clear@plt>
   4c3d8:	mov	x0, x19
   4c3dc:	bl	c170 <mpfr_mpz_clear@plt>
   4c3e0:	mov	x0, x20
   4c3e4:	bl	c170 <mpfr_mpz_clear@plt>
   4c3e8:	mov	x0, x21
   4c3ec:	bl	c170 <mpfr_mpz_clear@plt>
   4c3f0:	ldr	x20, [sp, #176]
   4c3f4:	ldr	w2, [sp, #168]
   4c3f8:	ldr	w3, [sp, #280]
   4c3fc:	mov	x1, x20
   4c400:	ldr	x0, [sp, #144]
   4c404:	bl	c6a0 <mpfr_set4@plt>
   4c408:	mov	w19, w0
   4c40c:	mov	x0, x20
   4c410:	bl	c070 <mpfr_clear@plt>
   4c414:	ldp	x21, x22, [sp, #32]
   4c418:	ldp	x25, x26, [sp, #64]
   4c41c:	ldr	d8, [sp, #96]
   4c420:	ldr	x2, [sp, #160]
   4c424:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c428:	ldr	x1, [x0, #2576]
   4c42c:	add	x0, x0, #0xa10
   4c430:	blr	x1
   4c434:	ldr	w1, [sp, #172]
   4c438:	str	w1, [x2, x0]
   4c43c:	ldr	x0, [sp, #144]
   4c440:	ldr	x1, [x0, #16]
   4c444:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c448:	ldr	x3, [x0, #2512]
   4c44c:	add	x0, x0, #0x9d0
   4c450:	blr	x3
   4c454:	ldr	x3, [sp, #184]
   4c458:	str	x3, [x2, x0]
   4c45c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c460:	ldr	x4, [x0, #2544]
   4c464:	add	x0, x0, #0x9f0
   4c468:	blr	x4
   4c46c:	ldr	x4, [sp, #192]
   4c470:	str	x4, [x2, x0]
   4c474:	cmp	x3, x1
   4c478:	ccmp	x4, x1, #0x1, le
   4c47c:	b.ge	4c6e4 <mpfr_zeta_ui@@Base+0x6fc>  // b.tcont
   4c480:	ldr	w2, [sp, #168]
   4c484:	mov	w1, w19
   4c488:	ldr	x0, [sp, #144]
   4c48c:	bl	cb30 <mpfr_check_range@plt>
   4c490:	mov	w19, w0
   4c494:	mov	w0, w19
   4c498:	ldp	x19, x20, [sp, #16]
   4c49c:	ldp	x23, x24, [sp, #48]
   4c4a0:	ldp	x27, x28, [sp, #80]
   4c4a4:	ldp	x29, x30, [sp], #304
   4c4a8:	ret
   4c4ac:	cmp	x27, #0x2
   4c4b0:	b.eq	4c790 <mpfr_zeta_ui@@Base+0x7a8>  // b.none
   4c4b4:	ldr	w1, [sp, #168]
   4c4b8:	mov	x2, #0x0                   	// #0
   4c4bc:	ldr	w3, [sp, #168]
   4c4c0:	and	w0, w1, #0xfffffffd
   4c4c4:	cmp	w0, #0x1
   4c4c8:	b.eq	4c4d8 <mpfr_zeta_ui@@Base+0x4f0>  // b.none
   4c4cc:	cmp	w1, #0x0
   4c4d0:	ccmp	x23, x27, #0x2, eq  // eq = none
   4c4d4:	b.cs	4c840 <mpfr_zeta_ui@@Base+0x858>  // b.hs, b.nlast
   4c4d8:	ldr	x0, [sp, #144]
   4c4dc:	mov	x1, #0x1                   	// #1
   4c4e0:	mov	w19, #0xffffffff            	// #-1
   4c4e4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4c4e8:	ldr	x2, [sp, #160]
   4c4ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c4f0:	ldr	x1, [x0, #2576]
   4c4f4:	add	x0, x0, #0xa10
   4c4f8:	blr	x1
   4c4fc:	ldr	w1, [sp, #172]
   4c500:	str	w1, [x2, x0]
   4c504:	ldr	x0, [sp, #144]
   4c508:	ldr	x1, [x0, #16]
   4c50c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c510:	ldr	x3, [x0, #2512]
   4c514:	add	x0, x0, #0x9d0
   4c518:	blr	x3
   4c51c:	ldr	x3, [sp, #184]
   4c520:	str	x3, [x2, x0]
   4c524:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c528:	ldr	x4, [x0, #2544]
   4c52c:	add	x0, x0, #0x9f0
   4c530:	blr	x4
   4c534:	ldr	x4, [sp, #192]
   4c538:	str	x4, [x2, x0]
   4c53c:	cmp	x4, x1
   4c540:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   4c544:	b.gt	4c480 <mpfr_zeta_ui@@Base+0x498>
   4c548:	ldr	w0, [sp, #172]
   4c54c:	ldp	x23, x24, [sp, #48]
   4c550:	orr	w1, w0, #0x8
   4c554:	ldp	x27, x28, [sp, #80]
   4c558:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c55c:	ldr	x2, [x0, #2576]
   4c560:	add	x0, x0, #0xa10
   4c564:	blr	x2
   4c568:	ldr	x2, [sp, #160]
   4c56c:	str	w1, [x2, x0]
   4c570:	mov	w0, w19
   4c574:	ldp	x19, x20, [sp, #16]
   4c578:	ldp	x29, x30, [sp], #304
   4c57c:	ret
   4c580:	mov	x1, x19
   4c584:	mov	x0, x19
   4c588:	bl	c570 <__gmpz_divexact_ui@plt>
   4c58c:	mov	x2, x24
   4c590:	b	4c2b8 <mpfr_zeta_ui@@Base+0x2d0>
   4c594:	mov	x2, x28
   4c598:	mov	x1, x19
   4c59c:	mov	x0, x19
   4c5a0:	bl	c100 <__gmpz_mul_ui@plt>
   4c5a4:	mov	x2, x24
   4c5a8:	mov	x1, x19
   4c5ac:	mov	x0, x19
   4c5b0:	bl	c100 <__gmpz_mul_ui@plt>
   4c5b4:	mov	x1, x19
   4c5b8:	mov	x0, x19
   4c5bc:	mov	x2, #0x1                   	// #1
   4c5c0:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4c5c4:	ldp	x0, x1, [sp, #120]
   4c5c8:	sub	x2, x1, x28
   4c5cc:	add	x24, x0, x28
   4c5d0:	ldr	x1, [sp, #136]
   4c5d4:	mov	x0, #0xffffffff            	// #4294967295
   4c5d8:	cmp	x1, x0
   4c5dc:	b.hi	4c580 <mpfr_zeta_ui@@Base+0x598>  // b.pmore
   4c5e0:	mul	x2, x24, x2
   4c5e4:	mov	x1, x19
   4c5e8:	mov	x0, x19
   4c5ec:	sub	x28, x28, #0x1
   4c5f0:	bl	c570 <__gmpz_divexact_ui@plt>
   4c5f4:	mov	x1, x22
   4c5f8:	mov	x0, x22
   4c5fc:	mov	x2, x19
   4c600:	bl	c9c0 <__gmpz_add@plt>
   4c604:	clz	x0, x28
   4c608:	mov	x1, #0x40                  	// #64
   4c60c:	sub	x1, x1, x0
   4c610:	mul	x1, x1, x27
   4c614:	cmp	x1, #0x80
   4c618:	b.hi	4c218 <mpfr_zeta_ui@@Base+0x230>  // b.pmore
   4c61c:	mov	x0, #0xffffffffffffffff    	// #-1
   4c620:	mov	x24, x25
   4c624:	mov	x2, x28
   4c628:	udiv	x26, x0, x28
   4c62c:	nop
   4c630:	cmp	x26, x2
   4c634:	b.ls	4c68c <mpfr_zeta_ui@@Base+0x6a4>  // b.plast
   4c638:	mul	x2, x2, x28
   4c63c:	subs	x24, x24, #0x1
   4c640:	b.ne	4c630 <mpfr_zeta_ui@@Base+0x648>  // b.any
   4c644:	mov	x1, x22
   4c648:	mov	x0, x20
   4c64c:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4c650:	mov	x2, x20
   4c654:	mov	x1, x21
   4c658:	mov	x0, x21
   4c65c:	tbnz	w28, #0, 4c258 <mpfr_zeta_ui@@Base+0x270>
   4c660:	bl	bde0 <__gmpz_sub@plt>
   4c664:	b	4c25c <mpfr_zeta_ui@@Base+0x274>
   4c668:	mov	x2, x27
   4c66c:	mov	x1, x28
   4c670:	mov	x0, x20
   4c674:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   4c678:	mov	x2, x20
   4c67c:	mov	x1, x22
   4c680:	mov	x0, x20
   4c684:	bl	bb30 <__gmpz_tdiv_q@plt>
   4c688:	b	4c248 <mpfr_zeta_ui@@Base+0x260>
   4c68c:	mov	x1, x22
   4c690:	mov	x0, x20
   4c694:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4c698:	mov	x2, x28
   4c69c:	subs	x24, x24, #0x1
   4c6a0:	b.eq	4c6c4 <mpfr_zeta_ui@@Base+0x6dc>  // b.none
   4c6a4:	cmp	x26, x28
   4c6a8:	b.hi	4c6b8 <mpfr_zeta_ui@@Base+0x6d0>  // b.pmore
   4c6ac:	b	4c6d4 <mpfr_zeta_ui@@Base+0x6ec>
   4c6b0:	cmp	x26, x2
   4c6b4:	b.ls	4c6d4 <mpfr_zeta_ui@@Base+0x6ec>  // b.plast
   4c6b8:	mul	x2, x2, x28
   4c6bc:	subs	x24, x24, #0x1
   4c6c0:	b.ne	4c6b0 <mpfr_zeta_ui@@Base+0x6c8>  // b.any
   4c6c4:	mov	x1, x20
   4c6c8:	mov	x0, x20
   4c6cc:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4c6d0:	b	4c248 <mpfr_zeta_ui@@Base+0x260>
   4c6d4:	mov	x1, x20
   4c6d8:	mov	x0, x20
   4c6dc:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4c6e0:	b	4c698 <mpfr_zeta_ui@@Base+0x6b0>
   4c6e4:	cbnz	w19, 4c548 <mpfr_zeta_ui@@Base+0x560>
   4c6e8:	mov	w0, w19
   4c6ec:	ldp	x19, x20, [sp, #16]
   4c6f0:	ldp	x23, x24, [sp, #48]
   4c6f4:	ldp	x27, x28, [sp, #80]
   4c6f8:	ldp	x29, x30, [sp], #304
   4c6fc:	ret
   4c700:	mov	w3, w2
   4c704:	mov	x2, #0xffffffffffffffff    	// #-1
   4c708:	mov	x1, x2
   4c70c:	bl	ba80 <mpfr_set_si_2exp@plt>
   4c710:	mov	w19, w0
   4c714:	mov	w0, w19
   4c718:	ldp	x19, x20, [sp, #16]
   4c71c:	ldp	x29, x30, [sp], #304
   4c720:	ret
   4c724:	mov	w0, w0
   4c728:	mov	w19, #0x0                   	// #0
   4c72c:	orr	w2, w0, #0x20
   4c730:	str	w2, [x1]
   4c734:	ldr	x1, [sp, #144]
   4c738:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4c73c:	str	w27, [x1, #8]
   4c740:	str	x0, [x1, #16]
   4c744:	mov	w0, w19
   4c748:	ldp	x19, x20, [sp, #16]
   4c74c:	ldp	x27, x28, [sp, #80]
   4c750:	ldp	x29, x30, [sp], #304
   4c754:	ret
   4c758:	ldr	x1, [sp, #152]
   4c75c:	mov	x0, #0xfffffffffffffeff    	// #-257
   4c760:	movk	x0, #0x7fff, lsl #48
   4c764:	sub	x0, x0, x1
   4c768:	ldr	x1, [sp, #200]
   4c76c:	cmp	x0, x1
   4c770:	b.lt	4c860 <mpfr_zeta_ui@@Base+0x878>  // b.tstop
   4c774:	ldr	x0, [sp, #152]
   4c778:	add	x0, x0, x1
   4c77c:	str	x0, [sp, #152]
   4c780:	add	x0, x0, x0, lsr #63
   4c784:	asr	x0, x0, #1
   4c788:	str	x0, [sp, #200]
   4c78c:	b	4c184 <mpfr_zeta_ui@@Base+0x19c>
   4c790:	ldr	w3, [sp, #168]
   4c794:	mov	x2, #0xfffffffffffffffd    	// #-3
   4c798:	ldr	x0, [sp, #144]
   4c79c:	mov	x1, #0xd                   	// #13
   4c7a0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4c7a4:	mov	w19, w0
   4c7a8:	b	4c420 <mpfr_zeta_ui@@Base+0x438>
   4c7ac:	ldr	x0, [sp, #176]
   4c7b0:	mov	w19, #0xffffffff            	// #-1
   4c7b4:	bl	c070 <mpfr_clear@plt>
   4c7b8:	ldr	x20, [sp, #144]
   4c7bc:	mov	w3, #0x1                   	// #1
   4c7c0:	mov	x2, #0x0                   	// #0
   4c7c4:	mov	x1, #0x1                   	// #1
   4c7c8:	mov	x0, x20
   4c7cc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4c7d0:	mov	x2, x27
   4c7d4:	mov	x1, x20
   4c7d8:	mov	w3, #0x1                   	// #1
   4c7dc:	mov	x0, x20
   4c7e0:	bl	c8f0 <mpfr_div_2ui@plt>
   4c7e4:	mov	x1, x20
   4c7e8:	mov	x0, x20
   4c7ec:	mov	w3, #0x1                   	// #1
   4c7f0:	mov	x2, #0x1                   	// #1
   4c7f4:	bl	c260 <mpfr_add_ui@plt>
   4c7f8:	ldr	w0, [sp, #168]
   4c7fc:	cmp	w0, #0x2
   4c800:	b.ne	4c4e8 <mpfr_zeta_ui@@Base+0x500>  // b.any
   4c804:	ldr	x0, [sp, #144]
   4c808:	mov	w19, #0x1                   	// #1
   4c80c:	bl	c120 <mpfr_nextabove@plt>
   4c810:	b	4c4e8 <mpfr_zeta_ui@@Base+0x500>
   4c814:	mov	x2, #0x0                   	// #0
   4c818:	b	4c38c <mpfr_zeta_ui@@Base+0x3a4>
   4c81c:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4c820:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4c824:	add	x2, x2, #0x188
   4c828:	add	x0, x0, #0x178
   4c82c:	mov	w1, #0xdc                  	// #220
   4c830:	bl	cb40 <mpfr_assert_fail@plt>
   4c834:	mov	x0, #0x10                  	// #16
   4c838:	str	x0, [sp, #152]
   4c83c:	b	4c170 <mpfr_zeta_ui@@Base+0x188>
   4c840:	ldr	x20, [sp, #144]
   4c844:	mov	x1, #0x1                   	// #1
   4c848:	mov	w19, #0x1                   	// #1
   4c84c:	mov	x0, x20
   4c850:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4c854:	mov	x0, x20
   4c858:	bl	c120 <mpfr_nextabove@plt>
   4c85c:	b	4c4e8 <mpfr_zeta_ui@@Base+0x500>
   4c860:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   4c864:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4c868:	add	x2, x2, #0x358
   4c86c:	add	x0, x0, #0x178
   4c870:	mov	w1, #0xe1                  	// #225
   4c874:	bl	cb40 <mpfr_assert_fail@plt>
   4c878:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4c87c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4c880:	add	x2, x2, #0x170
   4c884:	add	x0, x0, #0x178
   4c888:	mov	w1, #0x6e                  	// #110
   4c88c:	bl	cb40 <mpfr_assert_fail@plt>

000000000004c890 <mpfr_jn@@Base>:
   4c890:	sub	sp, sp, #0x2a0
   4c894:	stp	x29, x30, [sp]
   4c898:	mov	x29, sp
   4c89c:	ldr	x6, [x2, #16]
   4c8a0:	stp	x19, x20, [sp, #16]
   4c8a4:	stp	x25, x26, [sp, #64]
   4c8a8:	stp	x2, x0, [sp, #112]
   4c8ac:	str	x1, [sp, #128]
   4c8b0:	str	w3, [sp, #148]
   4c8b4:	tbnz	x1, #63, 4cf9c <mpfr_jn@@Base+0x70c>
   4c8b8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4c8bc:	cmp	x6, x0
   4c8c0:	b.le	4da80 <mpfr_jn@@Base+0x11f0>
   4c8c4:	mrs	x5, tpidr_el0
   4c8c8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c8cc:	ldr	x1, [x0, #2576]
   4c8d0:	add	x0, x0, #0xa10
   4c8d4:	blr	x1
   4c8d8:	add	x4, x5, x0
   4c8dc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4c8e0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4c8e4:	str	x5, [sp, #136]
   4c8e8:	ldr	w0, [x5, x0]
   4c8ec:	str	w0, [sp, #208]
   4c8f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c8f4:	ldr	x2, [x0, #2512]
   4c8f8:	add	x0, x0, #0x9d0
   4c8fc:	blr	x2
   4c900:	add	x2, x5, x0
   4c904:	ldr	x0, [x5, x0]
   4c908:	str	x0, [sp, #168]
   4c90c:	str	x3, [x2]
   4c910:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4c914:	ldr	x7, [x0, #2544]
   4c918:	add	x0, x0, #0x9f0
   4c91c:	blr	x7
   4c920:	ldr	x2, [x5, x0]
   4c924:	str	x1, [x5, x0]
   4c928:	ldr	x0, [sp, #120]
   4c92c:	str	x2, [sp, #184]
   4c930:	ldr	x1, [x0]
   4c934:	ldr	x0, [sp, #128]
   4c938:	cbnz	x0, 4cd14 <mpfr_jn@@Base+0x484>
   4c93c:	neg	x0, x6, lsl #1
   4c940:	cmp	x0, #0x0
   4c944:	b.le	4d930 <mpfr_jn@@Base+0x10a0>
   4c948:	add	x2, x0, #0x2
   4c94c:	add	x0, x1, #0x1
   4c950:	cmp	x0, x2
   4c954:	mov	x25, #0x0                   	// #0
   4c958:	b.cc	4dc68 <mpfr_jn@@Base+0x13d8>  // b.lo, b.ul, b.last
   4c95c:	stp	x21, x22, [sp, #32]
   4c960:	stp	x23, x24, [sp, #48]
   4c964:	stp	x27, x28, [sp, #80]
   4c968:	add	x1, x1, x1, lsr #63
   4c96c:	ldr	x0, [sp, #112]
   4c970:	mov	w4, #0x1                   	// #1
   4c974:	asr	x1, x1, #1
   4c978:	mov	x2, #0x0                   	// #0
   4c97c:	add	x1, x1, #0x3
   4c980:	str	w4, [sp, #248]
   4c984:	ldr	x5, [x0]
   4c988:	str	x5, [sp, #240]
   4c98c:	ldr	x3, [x0, #24]
   4c990:	add	x0, sp, #0xf0
   4c994:	stp	x6, x3, [sp, #256]
   4c998:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4c99c:	cmp	w0, #0x0
   4c9a0:	b.gt	4d198 <mpfr_jn@@Base+0x908>
   4c9a4:	add	x28, sp, #0x170
   4c9a8:	add	x26, sp, #0x210
   4c9ac:	mov	x20, #0x20                  	// #32
   4c9b0:	add	x0, x26, #0x10
   4c9b4:	mov	w21, #0x1                   	// #1
   4c9b8:	add	x1, x26, #0x18
   4c9bc:	add	x26, x26, x20
   4c9c0:	str	x20, [sp, #368]
   4c9c4:	str	w21, [sp, #376]
   4c9c8:	stp	x0, x20, [sp, #392]
   4c9cc:	str	w21, [sp, #408]
   4c9d0:	stp	x1, x20, [sp, #424]
   4c9d4:	str	w21, [sp, #440]
   4c9d8:	str	x26, [sp, #456]
   4c9dc:	str	xzr, [sp, #528]
   4c9e0:	str	x0, [sp, #536]
   4c9e4:	cbnz	x25, 4d040 <mpfr_jn@@Base+0x7b0>
   4c9e8:	add	x19, sp, #0x1d0
   4c9ec:	mov	x1, x20
   4c9f0:	mov	x0, x19
   4c9f4:	add	x22, sp, #0x1f0
   4c9f8:	bl	ca80 <mpfr_init2@plt>
   4c9fc:	mov	x1, x20
   4ca00:	mov	x0, x22
   4ca04:	bl	ca80 <mpfr_init2@plt>
   4ca08:	ldr	x1, [sp, #112]
   4ca0c:	mov	w3, w21
   4ca10:	mov	x0, x19
   4ca14:	mov	w2, #0x0                   	// #0
   4ca18:	bl	c6a0 <mpfr_set4@plt>
   4ca1c:	mov	x0, x22
   4ca20:	adrp	x1, 65000 <mpfr_bases@@Base+0x6f8>
   4ca24:	add	x1, x1, #0x758
   4ca28:	bl	c340 <mpfr_set_str_binary@plt>
   4ca2c:	mov	x2, x22
   4ca30:	mov	w3, #0x0                   	// #0
   4ca34:	mov	x1, x19
   4ca38:	mov	x0, x19
   4ca3c:	bl	bd50 <mpfr_mul@plt>
   4ca40:	mov	x0, x19
   4ca44:	mov	w1, #0x0                   	// #0
   4ca48:	bl	be50 <mpfr_fits_ulong_p@plt>
   4ca4c:	cbnz	w0, 4d13c <mpfr_jn@@Base+0x8ac>
   4ca50:	mov	x1, #0xffffffffffffffff    	// #-1
   4ca54:	mov	x0, x19
   4ca58:	str	x1, [sp, #160]
   4ca5c:	bl	c070 <mpfr_clear@plt>
   4ca60:	mov	x0, x22
   4ca64:	bl	c070 <mpfr_clear@plt>
   4ca68:	ldr	x0, [sp, #120]
   4ca6c:	mov	x20, #0xfffffffffffffe7e    	// #-386
   4ca70:	movk	x20, #0x7fff, lsl #48
   4ca74:	ldr	x19, [x0]
   4ca78:	cmp	x19, #0x1
   4ca7c:	b.eq	4dc00 <mpfr_jn@@Base+0x1370>  // b.none
   4ca80:	cmp	x19, #0x1
   4ca84:	mov	x1, x19
   4ca88:	b.le	4db5c <mpfr_jn@@Base+0x12cc>
   4ca8c:	sub	x1, x1, #0x1
   4ca90:	mov	x0, #0xfffffffffffffeff    	// #-257
   4ca94:	clz	x2, x1
   4ca98:	mov	w1, #0x40                  	// #64
   4ca9c:	sub	w1, w1, w2
   4caa0:	movk	x0, #0x7fff, lsl #48
   4caa4:	str	x0, [sp, #96]
   4caa8:	mov	x2, #0xfffffffffffffefe    	// #-258
   4caac:	lsl	w1, w1, #1
   4cab0:	movk	x2, #0x7fff, lsl #48
   4cab4:	add	x1, x19, w1, sxtw
   4cab8:	add	x1, x1, #0x3
   4cabc:	add	x1, x1, x20
   4cac0:	cmp	x1, x2
   4cac4:	b.ls	4d190 <mpfr_jn@@Base+0x900>  // b.plast
   4cac8:	ldr	x1, [sp, #528]
   4cacc:	add	x27, sp, #0x190
   4cad0:	add	x24, sp, #0x1b0
   4cad4:	mov	x0, #0x40                  	// #64
   4cad8:	mov	x22, #0x8000000000000001    	// #-9223372036854775807
   4cadc:	mov	x21, #0xc000000000000001    	// #-4611686018427387903
   4cae0:	str	x0, [sp, #152]
   4cae4:	str	wzr, [sp, #176]
   4cae8:	ldr	x0, [sp, #96]
   4caec:	sub	x19, x0, #0x1
   4caf0:	asr	x19, x19, #6
   4caf4:	add	x19, x19, #0x1
   4caf8:	add	x2, x19, x19, lsl #1
   4cafc:	lsl	x2, x2, #3
   4cb00:	str	x2, [sp, #528]
   4cb04:	cbnz	x1, 4cf04 <mpfr_jn@@Base+0x674>
   4cb08:	mov	x0, x2
   4cb0c:	bl	ccf0 <mpfr_allocate_func@plt>
   4cb10:	mov	x1, x0
   4cb14:	str	x0, [sp, #536]
   4cb18:	ldr	x3, [sp, #96]
   4cb1c:	mov	w4, #0x1                   	// #1
   4cb20:	ldr	x5, [sp, #136]
   4cb24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4cb28:	ldr	x2, [x0, #2576]
   4cb2c:	add	x0, x0, #0xa10
   4cb30:	blr	x2
   4cb34:	ldr	x23, [sp, #112]
   4cb38:	add	x20, x5, x0
   4cb3c:	add	x2, x1, x19, lsl #3
   4cb40:	add	x19, x1, x19, lsl #4
   4cb44:	stp	x1, x3, [sp, #392]
   4cb48:	mov	x1, x3
   4cb4c:	str	wzr, [x5, x0]
   4cb50:	mov	x0, x24
   4cb54:	str	x3, [sp, #368]
   4cb58:	mov	w3, #0x0                   	// #0
   4cb5c:	str	w4, [sp, #376]
   4cb60:	str	w4, [sp, #408]
   4cb64:	str	x2, [sp, #424]
   4cb68:	mov	x2, x25
   4cb6c:	str	x1, [sp, #432]
   4cb70:	mov	x1, x23
   4cb74:	str	w4, [sp, #440]
   4cb78:	str	x19, [sp, #456]
   4cb7c:	bl	bf70 <mpfr_pow_ui@plt>
   4cb80:	mov	x2, x23
   4cb84:	mov	x1, x23
   4cb88:	mov	w3, #0x0                   	// #0
   4cb8c:	mov	x0, x28
   4cb90:	bl	bd50 <mpfr_mul@plt>
   4cb94:	ldr	w2, [x20]
   4cb98:	mov	w0, #0x2f                  	// #47
   4cb9c:	mov	w1, #0x2                   	// #2
   4cba0:	and	w2, w2, w0
   4cba4:	mov	x0, x28
   4cba8:	str	w2, [x20]
   4cbac:	bl	bca0 <mpfr_get_ui@plt>
   4cbb0:	str	x0, [sp, #104]
   4cbb4:	ldr	w1, [x20]
   4cbb8:	tbnz	w1, #4, 4da48 <mpfr_jn@@Base+0x11b8>
   4cbbc:	mov	w3, #0x0                   	// #0
   4cbc0:	mov	x1, x28
   4cbc4:	mov	x2, #0x2                   	// #2
   4cbc8:	mov	x0, x28
   4cbcc:	bl	c8f0 <mpfr_div_2ui@plt>
   4cbd0:	mov	x1, x25
   4cbd4:	mov	w2, #0x0                   	// #0
   4cbd8:	mov	x0, x27
   4cbdc:	bl	c6e0 <mpfr_fac_ui@plt>
   4cbe0:	mov	x2, x27
   4cbe4:	mov	x1, x24
   4cbe8:	mov	x0, x24
   4cbec:	mov	w3, #0x0                   	// #0
   4cbf0:	bl	c620 <mpfr_div@plt>
   4cbf4:	cbnz	x25, 4d028 <mpfr_jn@@Base+0x798>
   4cbf8:	ldr	w3, [sp, #440]
   4cbfc:	mov	x1, x24
   4cc00:	mov	w2, #0x0                   	// #0
   4cc04:	mov	x0, x27
   4cc08:	mov	x26, #0x1                   	// #1
   4cc0c:	bl	c6a0 <mpfr_set4@plt>
   4cc10:	ldr	x20, [sp, #416]
   4cc14:	mov	w3, #0x0                   	// #0
   4cc18:	mov	x2, x28
   4cc1c:	mov	x1, x24
   4cc20:	cmp	x20, x22
   4cc24:	mov	x0, x24
   4cc28:	csel	x20, x20, x21, ne  // ne = any
   4cc2c:	bl	bd50 <mpfr_mul@plt>
   4cc30:	mov	x1, x24
   4cc34:	mov	x0, x24
   4cc38:	mov	w2, #0x0                   	// #0
   4cc3c:	bl	bd70 <mpfr_neg@plt>
   4cc40:	add	x23, x26, x25
   4cc44:	umulh	x0, x23, x26
   4cc48:	cbnz	x0, 4dd44 <mpfr_jn@@Base+0x14b4>
   4cc4c:	mul	x2, x23, x26
   4cc50:	mov	x1, x24
   4cc54:	mov	x0, x24
   4cc58:	mov	w3, #0x0                   	// #0
   4cc5c:	bl	cc60 <mpfr_div_ui@plt>
   4cc60:	ldr	x0, [sp, #416]
   4cc64:	mov	x2, x24
   4cc68:	ldr	x19, [sp, #448]
   4cc6c:	cmp	x0, x22
   4cc70:	mov	x1, x27
   4cc74:	mov	w3, #0x0                   	// #0
   4cc78:	csel	x19, x19, x21, ne  // ne = any
   4cc7c:	mov	x0, x27
   4cc80:	bl	c1a0 <mpfr_add@plt>
   4cc84:	ldr	x2, [sp, #416]
   4cc88:	ldr	x3, [sp, #96]
   4cc8c:	cmp	x2, x22
   4cc90:	csel	x1, x2, x21, ne  // ne = any
   4cc94:	ldr	x0, [sp, #448]
   4cc98:	cmp	x19, x1
   4cc9c:	csel	x19, x19, x1, ge  // ge = tcont
   4cca0:	cmp	x20, x19
   4cca4:	add	x0, x3, x0
   4cca8:	csel	x20, x20, x19, ge  // ge = tcont
   4ccac:	cmp	x0, x1
   4ccb0:	b.gt	4ccc8 <mpfr_jn@@Base+0x438>
   4ccb4:	ldr	x3, [sp, #104]
   4ccb8:	lsl	x0, x26, #1
   4ccbc:	udiv	x0, x3, x0
   4ccc0:	cmp	x23, x0
   4ccc4:	b.hi	4cd50 <mpfr_jn@@Base+0x4c0>  // b.pmore
   4ccc8:	mov	w3, #0x0                   	// #0
   4cccc:	mov	x2, x28
   4ccd0:	mov	x1, x24
   4ccd4:	mov	x0, x24
   4ccd8:	bl	bd50 <mpfr_mul@plt>
   4ccdc:	add	x26, x26, #0x1
   4cce0:	mov	x1, x24
   4cce4:	mov	x0, x24
   4cce8:	mov	w2, #0x0                   	// #0
   4ccec:	bl	bd70 <mpfr_neg@plt>
   4ccf0:	mvn	x0, x26
   4ccf4:	cmp	x25, x0
   4ccf8:	b.ls	4cc40 <mpfr_jn@@Base+0x3b0>  // b.plast
   4ccfc:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4cd00:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4cd04:	add	x2, x2, #0x230
   4cd08:	add	x0, x0, #0x1b0
   4cd0c:	mov	w1, #0x10f                 	// #271
   4cd10:	bl	cb40 <mpfr_assert_fail@plt>
   4cd14:	stp	x21, x22, [sp, #32]
   4cd18:	cmp	x0, #0x1
   4cd1c:	b.ne	4ddf0 <mpfr_jn@@Base+0x1560>  // b.any
   4cd20:	str	wzr, [x4]
   4cd24:	neg	x0, x6, lsl #1
   4cd28:	cmp	x0, #0x0
   4cd2c:	b.le	4d920 <mpfr_jn@@Base+0x1090>
   4cd30:	add	x2, x0, #0x3
   4cd34:	add	x0, x1, #0x1
   4cd38:	cmp	x0, x2
   4cd3c:	ldr	x25, [sp, #128]
   4cd40:	b.cc	4dcf8 <mpfr_jn@@Base+0x1468>  // b.lo, b.ul, b.last
   4cd44:	stp	x23, x24, [sp, #48]
   4cd48:	stp	x27, x28, [sp, #80]
   4cd4c:	b	4c968 <mpfr_jn@@Base+0xd8>
   4cd50:	sub	x20, x20, x1
   4cd54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4cd58:	ldr	x3, [x0, #2576]
   4cd5c:	add	x0, x0, #0xa10
   4cd60:	blr	x3
   4cd64:	ldr	x1, [sp, #136]
   4cd68:	cmn	x26, #0x1
   4cd6c:	ldr	w23, [x1, x0]
   4cd70:	b.eq	4da38 <mpfr_jn@@Base+0x11a8>  // b.none
   4cd74:	cmn	x26, #0x2
   4cd78:	b.cs	4da64 <mpfr_jn@@Base+0x11d4>  // b.hs, b.nlast
   4cd7c:	add	x6, x26, #0x1
   4cd80:	mov	w19, #0x41                  	// #65
   4cd84:	clz	x6, x6
   4cd88:	mov	x0, #0xfffffffffffffeff    	// #-257
   4cd8c:	sub	w19, w19, w6
   4cd90:	movk	x0, #0x7fff, lsl #48
   4cd94:	lsl	w19, w19, #1
   4cd98:	sxtw	x19, w19
   4cd9c:	sub	x0, x0, x19
   4cda0:	tbnz	x20, #63, 4d898 <mpfr_jn@@Base+0x1008>
   4cda4:	cmp	x20, x0
   4cda8:	b.gt	4de4c <mpfr_jn@@Base+0x15bc>
   4cdac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4cdb0:	add	x20, x20, x19
   4cdb4:	cmp	x2, x0
   4cdb8:	b.le	4cf28 <mpfr_jn@@Base+0x698>
   4cdbc:	ldr	x2, [sp, #120]
   4cdc0:	ldr	w0, [sp, #148]
   4cdc4:	ldr	x1, [sp, #400]
   4cdc8:	cmp	w0, #0x0
   4cdcc:	ldr	x0, [sp, #424]
   4cdd0:	sub	x1, x1, #0x1
   4cdd4:	ldr	x3, [x2]
   4cdd8:	asr	x1, x1, #6
   4cddc:	ldr	x2, [sp, #96]
   4cde0:	add	x1, x1, #0x1
   4cde4:	cinc	x3, x3, eq  // eq = none
   4cde8:	sub	x2, x2, x20
   4cdec:	bl	c370 <mpfr_round_p@plt>
   4cdf0:	cbz	w0, 4cf28 <mpfr_jn@@Base+0x698>
   4cdf4:	tbnz	w23, #0, 4cf18 <mpfr_jn@@Base+0x688>
   4cdf8:	tbnz	w23, #1, 4cf18 <mpfr_jn@@Base+0x688>
   4cdfc:	ldr	x0, [sp, #128]
   4ce00:	tbz	x0, #63, 4ce08 <mpfr_jn@@Base+0x578>
   4ce04:	tbnz	w0, #0, 4da20 <mpfr_jn@@Base+0x1190>
   4ce08:	ldr	w2, [sp, #148]
   4ce0c:	mov	x1, x27
   4ce10:	ldr	w3, [sp, #408]
   4ce14:	ldr	x0, [sp, #120]
   4ce18:	bl	c6a0 <mpfr_set4@plt>
   4ce1c:	mov	w19, w0
   4ce20:	ldr	x1, [sp, #528]
   4ce24:	cbz	x1, 4ce30 <mpfr_jn@@Base+0x5a0>
   4ce28:	ldr	x0, [sp, #536]
   4ce2c:	bl	cc20 <mpfr_free_func@plt>
   4ce30:	ldr	x0, [sp, #120]
   4ce34:	ldp	x23, x24, [sp, #48]
   4ce38:	ldp	x27, x28, [sp, #80]
   4ce3c:	ldr	x1, [x0, #16]
   4ce40:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ce44:	ldr	x2, [x0, #2576]
   4ce48:	add	x0, x0, #0xa10
   4ce4c:	blr	x2
   4ce50:	ldr	w3, [sp, #208]
   4ce54:	ldr	x2, [sp, #136]
   4ce58:	ldp	x21, x22, [sp, #32]
   4ce5c:	str	w3, [x2, x0]
   4ce60:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ce64:	ldr	x3, [x0, #2512]
   4ce68:	add	x0, x0, #0x9d0
   4ce6c:	blr	x3
   4ce70:	ldr	x3, [sp, #168]
   4ce74:	str	x3, [x2, x0]
   4ce78:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ce7c:	ldr	x4, [x0, #2544]
   4ce80:	add	x0, x0, #0x9f0
   4ce84:	blr	x4
   4ce88:	ldr	x4, [sp, #184]
   4ce8c:	str	x4, [x2, x0]
   4ce90:	cmp	x1, x4
   4ce94:	ccmp	x1, x3, #0x1, le
   4ce98:	b.ge	4cec8 <mpfr_jn@@Base+0x638>  // b.tcont
   4ce9c:	ldr	w2, [sp, #148]
   4cea0:	mov	w1, w19
   4cea4:	ldr	x0, [sp, #120]
   4cea8:	bl	cb30 <mpfr_check_range@plt>
   4ceac:	mov	w19, w0
   4ceb0:	mov	w0, w19
   4ceb4:	ldp	x29, x30, [sp]
   4ceb8:	ldp	x19, x20, [sp, #16]
   4cebc:	ldp	x25, x26, [sp, #64]
   4cec0:	add	sp, sp, #0x2a0
   4cec4:	ret
   4cec8:	cbz	w19, 4ceb0 <mpfr_jn@@Base+0x620>
   4cecc:	ldr	w0, [sp, #208]
   4ced0:	ldp	x25, x26, [sp, #64]
   4ced4:	orr	w1, w0, #0x8
   4ced8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4cedc:	ldr	x2, [x0, #2576]
   4cee0:	add	x0, x0, #0xa10
   4cee4:	blr	x2
   4cee8:	ldr	x2, [sp, #136]
   4ceec:	ldp	x29, x30, [sp]
   4cef0:	str	w1, [x2, x0]
   4cef4:	mov	w0, w19
   4cef8:	ldp	x19, x20, [sp, #16]
   4cefc:	add	sp, sp, #0x2a0
   4cf00:	ret
   4cf04:	ldr	x0, [sp, #536]
   4cf08:	bl	c1c0 <mpfr_reallocate_func@plt>
   4cf0c:	mov	x1, x0
   4cf10:	str	x0, [sp, #536]
   4cf14:	b	4cb18 <mpfr_jn@@Base+0x288>
   4cf18:	ldr	w0, [sp, #176]
   4cf1c:	cbnz	w0, 4dce0 <mpfr_jn@@Base+0x1450>
   4cf20:	mov	w0, #0x1                   	// #1
   4cf24:	str	w0, [sp, #176]
   4cf28:	ldr	x0, [sp, #96]
   4cf2c:	mov	x1, #0xfffffffffffffeff    	// #-257
   4cf30:	ldr	x2, [sp, #160]
   4cf34:	movk	x1, #0x7fff, lsl #48
   4cf38:	sub	x0, x1, x0
   4cf3c:	cmp	x20, x2
   4cf40:	b.ls	4cf60 <mpfr_jn@@Base+0x6d0>  // b.plast
   4cf44:	sub	x20, x20, x2
   4cf48:	cmp	x20, x0
   4cf4c:	b.hi	4dbcc <mpfr_jn@@Base+0x133c>  // b.pmore
   4cf50:	ldr	x0, [sp, #96]
   4cf54:	add	x0, x0, x20
   4cf58:	str	x0, [sp, #96]
   4cf5c:	sub	x0, x1, x0
   4cf60:	ldr	x1, [sp, #152]
   4cf64:	cmp	x1, x0
   4cf68:	b.gt	4dc10 <mpfr_jn@@Base+0x1380>
   4cf6c:	ldr	x0, [sp, #96]
   4cf70:	add	x0, x0, x1
   4cf74:	mov	x1, x0
   4cf78:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4cf7c:	cmp	x1, x0
   4cf80:	str	x1, [sp, #96]
   4cf84:	add	x0, x1, x1, lsr #63
   4cf88:	ldr	x1, [sp, #528]
   4cf8c:	asr	x0, x0, #1
   4cf90:	str	x0, [sp, #152]
   4cf94:	b.lt	4cae8 <mpfr_jn@@Base+0x258>  // b.tstop
   4cf98:	bl	c8e0 <mpfr_abort_prec_max@plt>
   4cf9c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4cfa0:	neg	x25, x1
   4cfa4:	cmp	x6, x0
   4cfa8:	b.le	4da7c <mpfr_jn@@Base+0x11ec>
   4cfac:	mrs	x5, tpidr_el0
   4cfb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4cfb4:	ldr	x1, [x0, #2576]
   4cfb8:	add	x0, x0, #0xa10
   4cfbc:	blr	x1
   4cfc0:	ldr	x1, [sp, #120]
   4cfc4:	stp	x21, x22, [sp, #32]
   4cfc8:	ldr	w0, [x5, x0]
   4cfcc:	str	w0, [sp, #208]
   4cfd0:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   4cfd4:	stp	x23, x24, [sp, #48]
   4cfd8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   4cfdc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4cfe0:	ldr	x3, [x0, #2512]
   4cfe4:	add	x0, x0, #0x9d0
   4cfe8:	blr	x3
   4cfec:	add	x3, x5, x0
   4cff0:	ldr	x0, [x5, x0]
   4cff4:	stp	x27, x28, [sp, #80]
   4cff8:	str	x0, [sp, #168]
   4cffc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4d000:	ldr	x7, [x0, #2544]
   4d004:	add	x0, x0, #0x9f0
   4d008:	blr	x7
   4d00c:	str	x5, [sp, #136]
   4d010:	ldr	x1, [x1]
   4d014:	str	x4, [x3]
   4d018:	ldr	x3, [x5, x0]
   4d01c:	str	x2, [x5, x0]
   4d020:	str	x3, [sp, #184]
   4d024:	b	4c968 <mpfr_jn@@Base+0xd8>
   4d028:	mov	x2, x25
   4d02c:	mov	x1, x24
   4d030:	mov	x0, x24
   4d034:	mov	w3, #0x0                   	// #0
   4d038:	bl	c8f0 <mpfr_div_2ui@plt>
   4d03c:	b	4cbf8 <mpfr_jn@@Base+0x368>
   4d040:	mov	x0, x28
   4d044:	adrp	x1, 66000 <mpfr_bases@@Base+0x16f8>
   4d048:	add	x1, x1, #0x1e8
   4d04c:	bl	c340 <mpfr_set_str_binary@plt>
   4d050:	ldr	x2, [sp, #112]
   4d054:	ldr	w0, [x2, #8]
   4d058:	cmp	w0, #0x0
   4d05c:	b.le	4d9fc <mpfr_jn@@Base+0x116c>
   4d060:	mov	x1, x28
   4d064:	mov	x0, x28
   4d068:	mov	w3, #0x2                   	// #2
   4d06c:	bl	bd50 <mpfr_mul@plt>
   4d070:	mov	x2, x25
   4d074:	mov	x1, x28
   4d078:	mov	x0, x28
   4d07c:	mov	w3, #0x2                   	// #2
   4d080:	bl	cc60 <mpfr_div_ui@plt>
   4d084:	ldr	x0, [sp, #384]
   4d088:	tbnz	x0, #63, 4d944 <mpfr_jn@@Base+0x10b4>
   4d08c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4d090:	cmp	x25, x1
   4d094:	b.hi	4d0a8 <mpfr_jn@@Base+0x818>  // b.pmore
   4d098:	ldr	x1, [sp, #168]
   4d09c:	sdiv	x1, x1, x25
   4d0a0:	cmp	x0, x1
   4d0a4:	b.lt	4d954 <mpfr_jn@@Base+0x10c4>  // b.tstop
   4d0a8:	add	x19, sp, #0x1d0
   4d0ac:	add	x22, sp, #0x1f0
   4d0b0:	mov	x0, x19
   4d0b4:	mov	x1, #0x20                  	// #32
   4d0b8:	bl	ca80 <mpfr_init2@plt>
   4d0bc:	mov	x0, x22
   4d0c0:	mov	x1, #0x20                  	// #32
   4d0c4:	bl	ca80 <mpfr_init2@plt>
   4d0c8:	ldr	x1, [sp, #112]
   4d0cc:	mov	w3, #0x0                   	// #0
   4d0d0:	mov	x2, x25
   4d0d4:	mov	x0, x19
   4d0d8:	bl	cc60 <mpfr_div_ui@plt>
   4d0dc:	mov	x1, x19
   4d0e0:	mov	x0, x19
   4d0e4:	mov	w2, #0x0                   	// #0
   4d0e8:	bl	c400 <mpfr_sqr@plt>
   4d0ec:	mov	w3, #0x0                   	// #0
   4d0f0:	mov	x1, x19
   4d0f4:	mov	x0, x19
   4d0f8:	mov	x2, #0x1                   	// #1
   4d0fc:	bl	c260 <mpfr_add_ui@plt>
   4d100:	mov	x1, x19
   4d104:	mov	x0, x19
   4d108:	mov	w2, #0x0                   	// #0
   4d10c:	bl	c930 <mpfr_sqrt@plt>
   4d110:	mov	x1, x19
   4d114:	mov	x0, x19
   4d118:	mov	w3, #0x0                   	// #0
   4d11c:	mov	x2, #0x1                   	// #1
   4d120:	bl	c530 <mpfr_sub_ui@plt>
   4d124:	mov	x1, x19
   4d128:	mov	x0, x19
   4d12c:	mov	x2, x25
   4d130:	mov	w3, #0x0                   	// #0
   4d134:	bl	ba50 <mpfr_mul_ui@plt>
   4d138:	b	4ca1c <mpfr_jn@@Base+0x18c>
   4d13c:	mov	w1, #0x0                   	// #0
   4d140:	mov	x0, x19
   4d144:	bl	bca0 <mpfr_get_ui@plt>
   4d148:	mov	x20, x0
   4d14c:	mov	x0, x19
   4d150:	bl	c070 <mpfr_clear@plt>
   4d154:	mov	x0, x22
   4d158:	bl	c070 <mpfr_clear@plt>
   4d15c:	mov	x1, #0xfffffffffffffe7d    	// #-387
   4d160:	movk	x1, #0x7fff, lsl #48
   4d164:	cmp	x20, x1
   4d168:	b.hi	4db54 <mpfr_jn@@Base+0x12c4>  // b.pmore
   4d16c:	ldr	x0, [sp, #120]
   4d170:	ldr	x19, [x0]
   4d174:	cmp	x19, #0x1
   4d178:	b.eq	4d184 <mpfr_jn@@Base+0x8f4>  // b.none
   4d17c:	str	x20, [sp, #160]
   4d180:	b	4ca80 <mpfr_jn@@Base+0x1f0>
   4d184:	add	x1, x20, #0x4
   4d188:	str	x20, [sp, #160]
   4d18c:	nop
   4d190:	str	x1, [sp, #96]
   4d194:	b	4cac8 <mpfr_jn@@Base+0x238>
   4d198:	add	x0, sp, #0x130
   4d19c:	str	x0, [sp, #192]
   4d1a0:	bl	bbd0 <mpfr_init@plt>
   4d1a4:	ldr	x0, [sp, #120]
   4d1a8:	ldr	x28, [x0]
   4d1ac:	cmp	x28, #0x1
   4d1b0:	b.eq	4d1d0 <mpfr_jn@@Base+0x940>  // b.none
   4d1b4:	mov	x0, x28
   4d1b8:	b.le	4dc44 <mpfr_jn@@Base+0x13b4>
   4d1bc:	sub	x0, x0, #0x1
   4d1c0:	mov	w1, #0x40                  	// #64
   4d1c4:	clz	x0, x0
   4d1c8:	sub	w0, w1, w0
   4d1cc:	add	x28, x28, w0, sxtw
   4d1d0:	ldr	x0, [sp, #128]
   4d1d4:	add	x24, sp, #0x1b0
   4d1d8:	add	x1, x28, #0x4
   4d1dc:	add	x28, sp, #0x170
   4d1e0:	and	x2, x0, #0x1
   4d1e4:	str	x2, [sp, #200]
   4d1e8:	and	x2, x0, #0x2
   4d1ec:	lsl	x0, x0, #2
   4d1f0:	str	x24, [sp, #96]
   4d1f4:	add	x27, sp, #0x190
   4d1f8:	str	x0, [sp, #104]
   4d1fc:	add	x0, sp, #0x110
   4d200:	ldr	x24, [sp, #192]
   4d204:	add	x19, sp, #0x1d0
   4d208:	add	x22, sp, #0x1f0
   4d20c:	add	x26, sp, #0x210
   4d210:	str	x28, [sp, #160]
   4d214:	mov	x28, x1
   4d218:	str	x0, [sp, #176]
   4d21c:	add	x0, sp, #0x150
   4d220:	str	x0, [sp, #152]
   4d224:	mov	x0, #0x40                  	// #64
   4d228:	str	x2, [sp, #216]
   4d22c:	str	x25, [sp, #224]
   4d230:	str	x0, [sp, #232]
   4d234:	mov	x1, x28
   4d238:	mov	x0, x24
   4d23c:	bl	bed0 <mpfr_set_prec@plt>
   4d240:	ldr	x21, [sp, #176]
   4d244:	mov	x1, x28
   4d248:	mov	x0, x21
   4d24c:	bl	ca80 <mpfr_init2@plt>
   4d250:	ldr	x0, [sp, #152]
   4d254:	mov	x1, x28
   4d258:	bl	ca80 <mpfr_init2@plt>
   4d25c:	ldr	x0, [sp, #160]
   4d260:	mov	x1, x28
   4d264:	bl	ca80 <mpfr_init2@plt>
   4d268:	mov	x1, x28
   4d26c:	mov	x0, x27
   4d270:	bl	ca80 <mpfr_init2@plt>
   4d274:	ldr	x0, [sp, #96]
   4d278:	mov	x1, x28
   4d27c:	bl	ca80 <mpfr_init2@plt>
   4d280:	mov	x0, x19
   4d284:	mov	x1, #0x1f                  	// #31
   4d288:	bl	ca80 <mpfr_init2@plt>
   4d28c:	mov	x0, x22
   4d290:	mov	x1, #0x1f                  	// #31
   4d294:	bl	ca80 <mpfr_init2@plt>
   4d298:	mov	x0, x26
   4d29c:	mov	x1, #0x1f                  	// #31
   4d2a0:	bl	ca80 <mpfr_init2@plt>
   4d2a4:	ldr	x20, [sp, #112]
   4d2a8:	mov	x1, x24
   4d2ac:	mov	x0, x21
   4d2b0:	mov	w3, #0x0                   	// #0
   4d2b4:	mov	x2, x20
   4d2b8:	bl	cc40 <mpfr_sin_cos@plt>
   4d2bc:	ldr	w0, [x20, #8]
   4d2c0:	tbnz	w0, #31, 4db40 <mpfr_jn@@Base+0x12b0>
   4d2c4:	ldr	x21, [sp, #176]
   4d2c8:	mov	x2, x24
   4d2cc:	mov	w3, #0x0                   	// #0
   4d2d0:	mov	x0, x27
   4d2d4:	mov	x1, x21
   4d2d8:	bl	c1a0 <mpfr_add@plt>
   4d2dc:	mov	x2, x24
   4d2e0:	mov	w3, #0x0                   	// #0
   4d2e4:	mov	x1, x21
   4d2e8:	mov	x0, x24
   4d2ec:	bl	bb70 <mpfr_sub@plt>
   4d2f0:	mov	x20, #0x8000000000000001    	// #-9223372036854775807
   4d2f4:	mov	x0, x21
   4d2f8:	mov	x1, x27
   4d2fc:	bl	c4a0 <mpfr_swap@plt>
   4d300:	str	wzr, [sp, #212]
   4d304:	ldr	x2, [sp, #112]
   4d308:	mov	w3, #0x0                   	// #0
   4d30c:	ldr	x21, [sp, #96]
   4d310:	mov	w25, #0x0                   	// #0
   4d314:	ldr	w1, [x2, #8]
   4d318:	mov	x0, x21
   4d31c:	cmp	w1, #0x0
   4d320:	mov	x1, #0xffffffffffffffff    	// #-1
   4d324:	cneg	x1, x1, gt
   4d328:	bl	c8b0 <mpfr_si_div@plt>
   4d32c:	mov	x1, x21
   4d330:	mov	x0, x21
   4d334:	mov	w3, #0x0                   	// #0
   4d338:	mov	x2, #0x3                   	// #3
   4d33c:	bl	c8f0 <mpfr_div_2ui@plt>
   4d340:	mov	x21, #0x1                   	// #1
   4d344:	ldr	x0, [sp, #152]
   4d348:	mov	w3, #0x0                   	// #0
   4d34c:	mov	x2, #0x0                   	// #0
   4d350:	mov	x1, #0x1                   	// #1
   4d354:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4d358:	str	x20, [sp, #384]
   4d35c:	mov	w0, #0x1                   	// #1
   4d360:	mov	w3, #0x0                   	// #0
   4d364:	mov	x2, #0x0                   	// #0
   4d368:	mov	x1, #0x1                   	// #1
   4d36c:	str	w0, [sp, #376]
   4d370:	mov	x0, x27
   4d374:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4d378:	str	x20, [sp, #480]
   4d37c:	mov	w0, #0x1                   	// #1
   4d380:	str	w0, [sp, #472]
   4d384:	str	w0, [sp, #504]
   4d388:	str	x20, [sp, #512]
   4d38c:	nop
   4d390:	ldr	x0, [sp, #128]
   4d394:	add	x23, x21, x21, lsl #1
   4d398:	add	x20, x0, x21
   4d39c:	lsl	x23, x23, #1
   4d3a0:	lsl	x20, x20, #1
   4d3a4:	sub	x20, x20, #0x1
   4d3a8:	mov	x2, x20
   4d3ac:	mov	x1, x27
   4d3b0:	mov	w3, #0x0                   	// #0
   4d3b4:	mov	x0, x27
   4d3b8:	bl	c960 <mpfr_mul_si@plt>
   4d3bc:	ldr	x0, [sp, #104]
   4d3c0:	mov	x1, x27
   4d3c4:	mov	w3, #0x0                   	// #0
   4d3c8:	sub	x2, x0, x20
   4d3cc:	mov	x0, x27
   4d3d0:	bl	c960 <mpfr_mul_si@plt>
   4d3d4:	mov	x2, x21
   4d3d8:	mov	x1, x27
   4d3dc:	mov	w3, #0x0                   	// #0
   4d3e0:	mov	x0, x27
   4d3e4:	bl	cc60 <mpfr_div_ui@plt>
   4d3e8:	ldr	x2, [sp, #96]
   4d3ec:	mov	x1, x27
   4d3f0:	mov	w3, #0x0                   	// #0
   4d3f4:	mov	x0, x27
   4d3f8:	bl	bd50 <mpfr_mul@plt>
   4d3fc:	ldr	w0, [sp, #408]
   4d400:	mov	x2, x23
   4d404:	mov	x1, x27
   4d408:	cmp	w0, #0x0
   4d40c:	mov	x0, x19
   4d410:	cset	w3, le
   4d414:	add	w3, w3, #0x2
   4d418:	bl	ba50 <mpfr_mul_ui@plt>
   4d41c:	mov	x1, x19
   4d420:	mov	w3, #0x1                   	// #1
   4d424:	mov	w2, #0x0                   	// #0
   4d428:	mov	x0, x19
   4d42c:	bl	c6a0 <mpfr_set4@plt>
   4d430:	mov	x1, x27
   4d434:	mov	w3, #0x1                   	// #1
   4d438:	mov	w2, #0x2                   	// #2
   4d43c:	mov	x0, x26
   4d440:	bl	c6a0 <mpfr_set4@plt>
   4d444:	mov	x2, x28
   4d448:	mov	x1, x26
   4d44c:	mov	w3, #0x2                   	// #2
   4d450:	mov	x0, x26
   4d454:	bl	c2c0 <mpfr_mul_2ui@plt>
   4d458:	mov	x2, x19
   4d45c:	mov	x1, x26
   4d460:	mov	x0, x26
   4d464:	mov	w3, #0x2                   	// #2
   4d468:	bl	c1a0 <mpfr_add@plt>
   4d46c:	cmp	w25, #0x1
   4d470:	b.gt	4d528 <mpfr_jn@@Base+0xc98>
   4d474:	and	x0, x21, #0x2
   4d478:	mov	x2, x27
   4d47c:	mov	w3, #0x0                   	// #0
   4d480:	tbz	w21, #0, 4d598 <mpfr_jn@@Base+0xd08>
   4d484:	cbnz	x0, 4d5ec <mpfr_jn@@Base+0xd5c>
   4d488:	ldr	x0, [sp, #160]
   4d48c:	mov	x1, x0
   4d490:	bl	c1a0 <mpfr_add@plt>
   4d494:	ldr	x0, [sp, #384]
   4d498:	ldr	x1, [sp, #544]
   4d49c:	cmp	x1, x0
   4d4a0:	b.le	4d5b8 <mpfr_jn@@Base+0xd28>
   4d4a4:	mov	w25, #0x0                   	// #0
   4d4a8:	mov	x2, x19
   4d4ac:	mov	x1, x22
   4d4b0:	mov	x0, x22
   4d4b4:	mov	w3, #0x2                   	// #2
   4d4b8:	bl	c1a0 <mpfr_add@plt>
   4d4bc:	ldr	x3, [sp, #112]
   4d4c0:	add	x21, x21, #0x1
   4d4c4:	ldr	w0, [x3, #8]
   4d4c8:	cmp	w0, #0x0
   4d4cc:	b.gt	4d508 <mpfr_jn@@Base+0xc78>
   4d4d0:	tbz	w0, #31, 4d390 <mpfr_jn@@Base+0xb00>
   4d4d4:	ldr	x0, [sp, #112]
   4d4d8:	add	x1, x21, x21, lsr #63
   4d4dc:	mov	x2, #0x0                   	// #0
   4d4e0:	neg	x1, x1, asr #1
   4d4e4:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4d4e8:	cmp	w0, #0x0
   4d4ec:	b.le	4d390 <mpfr_jn@@Base+0xb00>
   4d4f0:	mov	w0, #0x1                   	// #1
   4d4f4:	add	x20, x20, #0x2
   4d4f8:	add	x23, x23, #0x6
   4d4fc:	mov	w25, #0x2                   	// #2
   4d500:	str	w0, [sp, #212]
   4d504:	b	4d3a8 <mpfr_jn@@Base+0xb18>
   4d508:	asr	x1, x21, #1
   4d50c:	mov	x0, x3
   4d510:	mov	x2, #0x0                   	// #0
   4d514:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4d518:	tbnz	w0, #31, 4d4f0 <mpfr_jn@@Base+0xc60>
   4d51c:	ldr	x3, [sp, #112]
   4d520:	ldr	w0, [x3, #8]
   4d524:	b	4d4d0 <mpfr_jn@@Base+0xc40>
   4d528:	mov	x2, x28
   4d52c:	mov	x1, x22
   4d530:	mov	w3, #0x2                   	// #2
   4d534:	mov	x0, x22
   4d538:	bl	c8f0 <mpfr_div_2ui@plt>
   4d53c:	ldr	w0, [sp, #408]
   4d540:	mov	x2, x27
   4d544:	mov	x1, x22
   4d548:	mov	w3, #0x2                   	// #2
   4d54c:	cmp	w0, #0x0
   4d550:	mov	x0, x22
   4d554:	b.le	4d5e4 <mpfr_jn@@Base+0xd54>
   4d558:	bl	c1a0 <mpfr_add@plt>
   4d55c:	mov	x2, x28
   4d560:	mov	x1, x22
   4d564:	mov	w3, #0x2                   	// #2
   4d568:	mov	x0, x22
   4d56c:	bl	c2c0 <mpfr_mul_2ui@plt>
   4d570:	mov	x2, x19
   4d574:	mov	x1, x22
   4d578:	mov	x0, x22
   4d57c:	mov	w3, #0x2                   	// #2
   4d580:	bl	c1a0 <mpfr_add@plt>
   4d584:	cmp	w25, #0x2
   4d588:	b.ne	4d60c <mpfr_jn@@Base+0xd7c>  // b.any
   4d58c:	add	x21, x21, #0x1
   4d590:	mov	w25, #0x3                   	// #3
   4d594:	b	4d390 <mpfr_jn@@Base+0xb00>
   4d598:	cbnz	x0, 4d5fc <mpfr_jn@@Base+0xd6c>
   4d59c:	ldr	x0, [sp, #152]
   4d5a0:	mov	x1, x0
   4d5a4:	bl	c1a0 <mpfr_add@plt>
   4d5a8:	ldr	x0, [sp, #352]
   4d5ac:	ldr	x1, [sp, #544]
   4d5b0:	cmp	x1, x0
   4d5b4:	b.gt	4d4a4 <mpfr_jn@@Base+0xc14>
   4d5b8:	add	w25, w25, #0x1
   4d5bc:	mov	x2, x19
   4d5c0:	mov	x1, x22
   4d5c4:	mov	x0, x22
   4d5c8:	mov	w3, #0x2                   	// #2
   4d5cc:	bl	c1a0 <mpfr_add@plt>
   4d5d0:	cmp	w25, #0x1
   4d5d4:	b.eq	4d4bc <mpfr_jn@@Base+0xc2c>  // b.none
   4d5d8:	add	x21, x21, #0x1
   4d5dc:	mov	w25, #0x2                   	// #2
   4d5e0:	b	4d390 <mpfr_jn@@Base+0xb00>
   4d5e4:	bl	bb70 <mpfr_sub@plt>
   4d5e8:	b	4d55c <mpfr_jn@@Base+0xccc>
   4d5ec:	ldr	x0, [sp, #160]
   4d5f0:	mov	x1, x0
   4d5f4:	bl	bb70 <mpfr_sub@plt>
   4d5f8:	b	4d494 <mpfr_jn@@Base+0xc04>
   4d5fc:	ldr	x0, [sp, #152]
   4d600:	mov	x1, x0
   4d604:	bl	bb70 <mpfr_sub@plt>
   4d608:	b	4d5a8 <mpfr_jn@@Base+0xd18>
   4d60c:	ldr	x0, [sp, #200]
   4d610:	mov	w3, #0x0                   	// #0
   4d614:	cbz	x0, 4d8b8 <mpfr_jn@@Base+0x1028>
   4d618:	ldr	x2, [sp, #152]
   4d61c:	mov	x1, x24
   4d620:	mov	x0, x24
   4d624:	bl	bd50 <mpfr_mul@plt>
   4d628:	ldr	x2, [sp, #160]
   4d62c:	mov	w3, #0x0                   	// #0
   4d630:	ldr	x21, [sp, #176]
   4d634:	mov	x1, x21
   4d638:	mov	x0, x21
   4d63c:	bl	bd50 <mpfr_mul@plt>
   4d640:	ldr	x20, [sp, #288]
   4d644:	mov	x2, x24
   4d648:	ldr	x5, [sp, #320]
   4d64c:	mov	x1, x21
   4d650:	mov	x0, x21
   4d654:	mov	w3, #0x0                   	// #0
   4d658:	cmp	x20, x5
   4d65c:	csel	x20, x20, x5, ge  // ge = tcont
   4d660:	bl	c1a0 <mpfr_add@plt>
   4d664:	ldr	x0, [sp, #216]
   4d668:	cbnz	x0, 4d90c <mpfr_jn@@Base+0x107c>
   4d66c:	ldr	x3, [sp, #288]
   4d670:	mov	w2, #0x0                   	// #0
   4d674:	ldr	x1, [sp, #352]
   4d678:	cmp	x3, x20
   4d67c:	ldr	x0, [sp, #384]
   4d680:	add	x6, x1, #0x2
   4d684:	ldr	x5, [sp, #512]
   4d688:	csel	x3, x3, x20, ge  // ge = tcont
   4d68c:	cmp	x1, x0
   4d690:	add	x1, x0, #0x2
   4d694:	csel	x1, x1, x6, lt  // lt = tstop
   4d698:	add	x0, x3, #0x2
   4d69c:	cmp	x3, x5
   4d6a0:	add	x5, x5, #0x2
   4d6a4:	csel	x0, x0, x5, gt
   4d6a8:	add	x20, x1, #0x1
   4d6ac:	cmp	x1, x0
   4d6b0:	csinc	x20, x20, x0, gt
   4d6b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4d6b8:	ldr	x1, [x0, #2624]
   4d6bc:	add	x0, x0, #0xa40
   4d6c0:	blr	x1
   4d6c4:	ldr	x1, [sp, #136]
   4d6c8:	add	x1, x1, x0
   4d6cc:	mov	x0, x24
   4d6d0:	bl	c380 <mpfr_cache@plt>
   4d6d4:	ldr	x21, [sp, #112]
   4d6d8:	mov	x1, x24
   4d6dc:	mov	w3, #0x0                   	// #0
   4d6e0:	mov	x0, x24
   4d6e4:	mov	x2, x21
   4d6e8:	bl	bd50 <mpfr_mul@plt>
   4d6ec:	ldr	w0, [x21, #8]
   4d6f0:	mov	w3, #0x0                   	// #0
   4d6f4:	mov	x2, x24
   4d6f8:	mov	x1, #0xffffffffffffffff    	// #-1
   4d6fc:	cmp	w0, #0x0
   4d700:	mov	x0, x24
   4d704:	cneg	x1, x1, gt
   4d708:	bl	c8b0 <mpfr_si_div@plt>
   4d70c:	mov	x1, x24
   4d710:	mov	w2, #0x0                   	// #0
   4d714:	mov	x0, x24
   4d718:	bl	c930 <mpfr_sqrt@plt>
   4d71c:	ldr	w5, [sp, #312]
   4d720:	mov	x1, x24
   4d724:	ldr	w3, [sp, #280]
   4d728:	mov	x0, x19
   4d72c:	ldr	x21, [sp, #176]
   4d730:	cmp	w5, w3
   4d734:	cset	w3, ne  // ne = any
   4d738:	add	w3, w3, #0x2
   4d73c:	mov	x2, x21
   4d740:	bl	bd50 <mpfr_mul@plt>
   4d744:	mov	x1, x19
   4d748:	mov	w3, #0x1                   	// #1
   4d74c:	mov	w2, #0x2                   	// #2
   4d750:	mov	x0, x19
   4d754:	bl	c6a0 <mpfr_set4@plt>
   4d758:	mov	x1, x19
   4d75c:	mov	w3, #0x2                   	// #2
   4d760:	mov	x2, #0x3                   	// #3
   4d764:	mov	x0, x19
   4d768:	bl	ba50 <mpfr_mul_ui@plt>
   4d76c:	ldr	x0, [sp, #320]
   4d770:	mov	x2, x21
   4d774:	mov	x1, x24
   4d778:	mov	w3, #0x0                   	// #0
   4d77c:	add	x20, x20, x0
   4d780:	mov	x0, x24
   4d784:	bl	bd50 <mpfr_mul@plt>
   4d788:	ldr	x2, [sp, #320]
   4d78c:	add	x3, x20, #0x1
   4d790:	ldr	x1, [sp, #480]
   4d794:	add	x5, x2, #0x1
   4d798:	mov	x0, x21
   4d79c:	cmp	x1, x2
   4d7a0:	csinc	x1, x5, x1, le
   4d7a4:	cmp	x20, x1
   4d7a8:	csinc	x20, x3, x1, gt
   4d7ac:	bl	c070 <mpfr_clear@plt>
   4d7b0:	ldr	x0, [sp, #152]
   4d7b4:	bl	c070 <mpfr_clear@plt>
   4d7b8:	ldr	x0, [sp, #160]
   4d7bc:	bl	c070 <mpfr_clear@plt>
   4d7c0:	mov	x0, x27
   4d7c4:	bl	c070 <mpfr_clear@plt>
   4d7c8:	ldr	x0, [sp, #96]
   4d7cc:	bl	c070 <mpfr_clear@plt>
   4d7d0:	mov	x0, x19
   4d7d4:	bl	c070 <mpfr_clear@plt>
   4d7d8:	mov	x0, x22
   4d7dc:	bl	c070 <mpfr_clear@plt>
   4d7e0:	mov	x0, x26
   4d7e4:	bl	c070 <mpfr_clear@plt>
   4d7e8:	ldr	x0, [sp, #320]
   4d7ec:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4d7f0:	sub	x20, x20, x0
   4d7f4:	cmp	x0, x1
   4d7f8:	b.le	4db80 <mpfr_jn@@Base+0x12f0>
   4d7fc:	ldr	x2, [sp, #120]
   4d800:	ldr	w0, [sp, #148]
   4d804:	ldr	x1, [sp, #304]
   4d808:	cmp	w0, #0x0
   4d80c:	ldr	x0, [sp, #328]
   4d810:	sub	x1, x1, #0x1
   4d814:	ldr	x3, [x2]
   4d818:	asr	x1, x1, #6
   4d81c:	add	x1, x1, #0x1
   4d820:	sub	x2, x28, x20
   4d824:	cinc	x3, x3, eq  // eq = none
   4d828:	bl	c370 <mpfr_round_p@plt>
   4d82c:	cbz	w0, 4db80 <mpfr_jn@@Base+0x12f0>
   4d830:	ldr	x0, [sp, #112]
   4d834:	ldr	x28, [sp, #160]
   4d838:	ldr	w1, [x0, #8]
   4d83c:	ldr	w0, [sp, #200]
   4d840:	cmp	w1, #0x0
   4d844:	cset	w1, gt
   4d848:	eor	w0, w0, #0x1
   4d84c:	orr	w0, w1, w0
   4d850:	ldr	x25, [sp, #224]
   4d854:	cbz	w0, 4dbb4 <mpfr_jn@@Base+0x1324>
   4d858:	ldr	w2, [sp, #148]
   4d85c:	ldr	w3, [sp, #312]
   4d860:	ldr	x0, [sp, #120]
   4d864:	ldr	x1, [sp, #192]
   4d868:	bl	c6a0 <mpfr_set4@plt>
   4d86c:	mov	w19, w0
   4d870:	ldr	x0, [sp, #192]
   4d874:	bl	c070 <mpfr_clear@plt>
   4d878:	ldr	w0, [sp, #148]
   4d87c:	cmp	w0, #0x5
   4d880:	b.eq	4dacc <mpfr_jn@@Base+0x123c>  // b.none
   4d884:	cbz	w19, 4c9ac <mpfr_jn@@Base+0x11c>
   4d888:	ldp	x21, x22, [sp, #32]
   4d88c:	ldp	x23, x24, [sp, #48]
   4d890:	ldp	x27, x28, [sp, #80]
   4d894:	b	4dadc <mpfr_jn@@Base+0x124c>
   4d898:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4d89c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4d8a0:	add	x2, x2, #0x2d0
   4d8a4:	add	x0, x0, #0x1b0
   4d8a8:	mov	w1, #0x12a                 	// #298
   4d8ac:	bl	cb40 <mpfr_assert_fail@plt>
   4d8b0:	ldr	x2, [sp, #416]
   4d8b4:	b	4cdac <mpfr_jn@@Base+0x51c>
   4d8b8:	ldr	x2, [sp, #160]
   4d8bc:	mov	x1, x24
   4d8c0:	mov	x0, x24
   4d8c4:	bl	bd50 <mpfr_mul@plt>
   4d8c8:	ldr	x2, [sp, #152]
   4d8cc:	mov	w3, #0x0                   	// #0
   4d8d0:	ldr	x21, [sp, #176]
   4d8d4:	mov	x1, x21
   4d8d8:	mov	x0, x21
   4d8dc:	bl	bd50 <mpfr_mul@plt>
   4d8e0:	ldr	x20, [sp, #288]
   4d8e4:	mov	x2, x24
   4d8e8:	ldr	x5, [sp, #320]
   4d8ec:	mov	x1, x21
   4d8f0:	mov	x0, x21
   4d8f4:	mov	w3, #0x0                   	// #0
   4d8f8:	cmp	x20, x5
   4d8fc:	csel	x20, x20, x5, ge  // ge = tcont
   4d900:	bl	bb70 <mpfr_sub@plt>
   4d904:	ldr	x0, [sp, #216]
   4d908:	cbz	x0, 4d66c <mpfr_jn@@Base+0xddc>
   4d90c:	ldr	x0, [sp, #176]
   4d910:	mov	w2, #0x0                   	// #0
   4d914:	mov	x1, x0
   4d918:	bl	bd70 <mpfr_neg@plt>
   4d91c:	b	4d66c <mpfr_jn@@Base+0xddc>
   4d920:	stp	x23, x24, [sp, #48]
   4d924:	stp	x27, x28, [sp, #80]
   4d928:	ldr	x25, [sp, #128]
   4d92c:	b	4c968 <mpfr_jn@@Base+0xd8>
   4d930:	mov	x25, #0x0                   	// #0
   4d934:	stp	x21, x22, [sp, #32]
   4d938:	stp	x23, x24, [sp, #48]
   4d93c:	stp	x27, x28, [sp, #80]
   4d940:	b	4c968 <mpfr_jn@@Base+0xd8>
   4d944:	ldr	x1, [sp, #168]
   4d948:	neg	x1, x1
   4d94c:	cmp	x1, x25
   4d950:	b.cs	4d08c <mpfr_jn@@Base+0x7fc>  // b.hs, b.nlast
   4d954:	ldr	x1, [sp, #528]
   4d958:	cbz	x1, 4d964 <mpfr_jn@@Base+0x10d4>
   4d95c:	ldr	x0, [sp, #536]
   4d960:	bl	cc20 <mpfr_free_func@plt>
   4d964:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4d968:	ldr	x1, [x0, #2576]
   4d96c:	add	x0, x0, #0xa10
   4d970:	blr	x1
   4d974:	ldr	w2, [sp, #208]
   4d978:	ldr	x1, [sp, #136]
   4d97c:	str	w2, [x1, x0]
   4d980:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4d984:	ldr	x2, [x0, #2512]
   4d988:	add	x0, x0, #0x9d0
   4d98c:	blr	x2
   4d990:	ldr	x2, [sp, #168]
   4d994:	str	x2, [x1, x0]
   4d998:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4d99c:	ldr	x2, [x0, #2544]
   4d9a0:	add	x0, x0, #0x9f0
   4d9a4:	blr	x2
   4d9a8:	ldr	x2, [sp, #184]
   4d9ac:	str	x2, [x1, x0]
   4d9b0:	ldr	w0, [sp, #148]
   4d9b4:	mov	w2, #0x1                   	// #1
   4d9b8:	cmp	w0, #0x0
   4d9bc:	csel	w0, w0, w2, ne  // ne = any
   4d9c0:	str	w0, [sp, #148]
   4d9c4:	ldr	x0, [sp, #128]
   4d9c8:	tbz	w0, #0, 4d9dc <mpfr_jn@@Base+0x114c>
   4d9cc:	cmp	x0, #0x0
   4d9d0:	ldr	x0, [sp, #112]
   4d9d4:	ldr	w2, [x0, #8]
   4d9d8:	b.le	4de84 <mpfr_jn@@Base+0x15f4>
   4d9dc:	ldr	w1, [sp, #148]
   4d9e0:	ldr	x0, [sp, #120]
   4d9e4:	bl	c3c0 <mpfr_underflow@plt>
   4d9e8:	mov	w19, w0
   4d9ec:	ldp	x21, x22, [sp, #32]
   4d9f0:	ldp	x23, x24, [sp, #48]
   4d9f4:	ldp	x27, x28, [sp, #80]
   4d9f8:	b	4ceb0 <mpfr_jn@@Base+0x620>
   4d9fc:	mov	w3, #0x3                   	// #3
   4da00:	mov	x1, x28
   4da04:	mov	x0, x28
   4da08:	bl	bd50 <mpfr_mul@plt>
   4da0c:	mov	x1, x28
   4da10:	mov	x0, x28
   4da14:	mov	w2, #0x2                   	// #2
   4da18:	bl	bd70 <mpfr_neg@plt>
   4da1c:	b	4d070 <mpfr_jn@@Base+0x7e0>
   4da20:	ldr	w2, [sp, #148]
   4da24:	mov	x1, x27
   4da28:	ldr	x0, [sp, #120]
   4da2c:	bl	bd70 <mpfr_neg@plt>
   4da30:	mov	w19, w0
   4da34:	b	4ce20 <mpfr_jn@@Base+0x590>
   4da38:	mov	x0, #0xfffffffffffffefd    	// #-259
   4da3c:	mov	x19, #0x2                   	// #2
   4da40:	movk	x0, #0x7fff, lsl #48
   4da44:	b	4cda0 <mpfr_jn@@Base+0x510>
   4da48:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4da4c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4da50:	add	x2, x2, #0x210
   4da54:	add	x0, x0, #0x1b0
   4da58:	mov	w1, #0xfc                  	// #252
   4da5c:	bl	cb40 <mpfr_assert_fail@plt>
   4da60:	b	4cbbc <mpfr_jn@@Base+0x32c>
   4da64:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4da68:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4da6c:	add	x2, x2, #0x260
   4da70:	add	x0, x0, #0x1b0
   4da74:	mov	w1, #0x128                 	// #296
   4da78:	bl	cb40 <mpfr_assert_fail@plt>
   4da7c:	mov	x1, x25
   4da80:	mov	x0, #0x2                   	// #2
   4da84:	movk	x0, #0x8000, lsl #48
   4da88:	cmp	x6, x0
   4da8c:	b.eq	4dcac <mpfr_jn@@Base+0x141c>  // b.none
   4da90:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4da94:	cmp	x6, x0
   4da98:	b.eq	4dc28 <mpfr_jn@@Base+0x1398>  // b.none
   4da9c:	ldr	x0, [sp, #128]
   4daa0:	cbz	x0, 4dbe4 <mpfr_jn@@Base+0x1354>
   4daa4:	tbz	w1, #0, 4dc28 <mpfr_jn@@Base+0x1398>
   4daa8:	cmp	x0, #0x0
   4daac:	b.le	4dd30 <mpfr_jn@@Base+0x14a0>
   4dab0:	ldr	x1, [sp, #112]
   4dab4:	ldr	w2, [sp, #148]
   4dab8:	ldr	x0, [sp, #120]
   4dabc:	ldr	w3, [x1, #8]
   4dac0:	bl	c6a0 <mpfr_set4@plt>
   4dac4:	mov	w19, w0
   4dac8:	b	4ceb0 <mpfr_jn@@Base+0x620>
   4dacc:	ldp	x21, x22, [sp, #32]
   4dad0:	mov	w19, #0x1                   	// #1
   4dad4:	ldp	x23, x24, [sp, #48]
   4dad8:	ldp	x27, x28, [sp, #80]
   4dadc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4dae0:	ldr	x1, [x0, #2576]
   4dae4:	add	x0, x0, #0xa10
   4dae8:	blr	x1
   4daec:	ldr	x2, [sp, #136]
   4daf0:	ldr	w1, [sp, #208]
   4daf4:	str	w1, [x2, x0]
   4daf8:	ldr	x0, [sp, #120]
   4dafc:	ldr	x1, [x0, #16]
   4db00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4db04:	ldr	x3, [x0, #2512]
   4db08:	add	x0, x0, #0x9d0
   4db0c:	blr	x3
   4db10:	ldr	x3, [sp, #168]
   4db14:	str	x3, [x2, x0]
   4db18:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4db1c:	ldr	x4, [x0, #2544]
   4db20:	add	x0, x0, #0x9f0
   4db24:	blr	x4
   4db28:	ldr	x4, [sp, #184]
   4db2c:	str	x4, [x2, x0]
   4db30:	cmp	x4, x1
   4db34:	ccmp	x1, x3, #0x1, ge  // ge = tcont
   4db38:	b.lt	4ce9c <mpfr_jn@@Base+0x60c>  // b.tstop
   4db3c:	b	4cecc <mpfr_jn@@Base+0x63c>
   4db40:	ldr	x0, [sp, #176]
   4db44:	mov	w2, #0x0                   	// #0
   4db48:	mov	x1, x0
   4db4c:	bl	bd70 <mpfr_neg@plt>
   4db50:	b	4d2c4 <mpfr_jn@@Base+0xa34>
   4db54:	str	x20, [sp, #160]
   4db58:	b	4ca68 <mpfr_jn@@Base+0x1d8>
   4db5c:	mov	w1, #0xed                  	// #237
   4db60:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4db64:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4db68:	add	x2, x2, #0x1b8
   4db6c:	add	x0, x0, #0x1b0
   4db70:	bl	cb40 <mpfr_assert_fail@plt>
   4db74:	ldr	x0, [sp, #120]
   4db78:	ldr	x1, [x0]
   4db7c:	b	4ca8c <mpfr_jn@@Base+0x1fc>
   4db80:	ldr	w0, [sp, #212]
   4db84:	cbnz	w0, 4dddc <mpfr_jn@@Base+0x154c>
   4db88:	ldr	x1, [sp, #232]
   4db8c:	mov	x0, #0xfffffffffffffeff    	// #-257
   4db90:	movk	x0, #0x7fff, lsl #48
   4db94:	sub	x0, x0, x28
   4db98:	cmp	x0, x1
   4db9c:	b.lt	4dd70 <mpfr_jn@@Base+0x14e0>  // b.tstop
   4dba0:	add	x28, x28, x1
   4dba4:	add	x0, x28, x28, lsr #63
   4dba8:	asr	x0, x0, #1
   4dbac:	str	x0, [sp, #232]
   4dbb0:	b	4d234 <mpfr_jn@@Base+0x9a4>
   4dbb4:	ldr	w2, [sp, #148]
   4dbb8:	ldr	x0, [sp, #120]
   4dbbc:	ldr	x1, [sp, #192]
   4dbc0:	bl	bd70 <mpfr_neg@plt>
   4dbc4:	mov	w19, w0
   4dbc8:	b	4d870 <mpfr_jn@@Base+0xfe0>
   4dbcc:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4dbd0:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4dbd4:	add	x2, x2, #0x280
   4dbd8:	add	x0, x0, #0x1b0
   4dbdc:	mov	w1, #0x13e                 	// #318
   4dbe0:	bl	cb40 <mpfr_assert_fail@plt>
   4dbe4:	ldr	w3, [sp, #148]
   4dbe8:	mov	x2, #0x0                   	// #0
   4dbec:	ldr	x0, [sp, #120]
   4dbf0:	mov	x1, #0x1                   	// #1
   4dbf4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4dbf8:	mov	w19, w0
   4dbfc:	b	4ceb0 <mpfr_jn@@Base+0x620>
   4dc00:	mov	x0, #0xfffffffffffffe82    	// #-382
   4dc04:	movk	x0, #0x7fff, lsl #48
   4dc08:	str	x0, [sp, #96]
   4dc0c:	b	4cac8 <mpfr_jn@@Base+0x238>
   4dc10:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   4dc14:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4dc18:	add	x2, x2, #0xf80
   4dc1c:	add	x0, x0, #0x1b0
   4dc20:	mov	w1, #0x13f                 	// #319
   4dc24:	bl	cb40 <mpfr_assert_fail@plt>
   4dc28:	ldr	x2, [sp, #120]
   4dc2c:	mov	w1, #0x1                   	// #1
   4dc30:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4dc34:	mov	w19, #0x0                   	// #0
   4dc38:	str	w1, [x2, #8]
   4dc3c:	str	x0, [x2, #16]
   4dc40:	b	4ceb0 <mpfr_jn@@Base+0x620>
   4dc44:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4dc48:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4dc4c:	add	x2, x2, #0x1b8
   4dc50:	add	x0, x0, #0x1d8
   4dc54:	mov	w1, #0x36                  	// #54
   4dc58:	bl	cb40 <mpfr_assert_fail@plt>
   4dc5c:	ldr	x0, [sp, #120]
   4dc60:	ldr	x0, [x0]
   4dc64:	b	4d1bc <mpfr_jn@@Base+0x92c>
   4dc68:	adrp	x1, 81000 <__gmpfr_l2b@@Base+0x200>
   4dc6c:	ldr	w4, [sp, #148]
   4dc70:	ldr	x20, [sp, #120]
   4dc74:	mov	w3, #0x0                   	// #0
   4dc78:	ldr	x1, [x1, #3928]
   4dc7c:	mov	x0, x20
   4dc80:	bl	c540 <mpfr_round_near_x@plt>
   4dc84:	mov	w19, w0
   4dc88:	cbnz	w0, 4dadc <mpfr_jn@@Base+0x124c>
   4dc8c:	ldr	x0, [sp, #112]
   4dc90:	stp	x21, x22, [sp, #32]
   4dc94:	stp	x23, x24, [sp, #48]
   4dc98:	stp	x27, x28, [sp, #80]
   4dc9c:	ldr	x1, [x20]
   4dca0:	ldr	x6, [x0, #16]
   4dca4:	ldr	x25, [sp, #128]
   4dca8:	b	4c968 <mpfr_jn@@Base+0xd8>
   4dcac:	mrs	x1, tpidr_el0
   4dcb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4dcb4:	ldr	x2, [x0, #2576]
   4dcb8:	add	x0, x0, #0xa10
   4dcbc:	blr	x2
   4dcc0:	add	x0, x1, x0
   4dcc4:	mov	w19, #0x0                   	// #0
   4dcc8:	ldr	x1, [sp, #120]
   4dccc:	str	x6, [x1, #16]
   4dcd0:	ldr	w1, [x0]
   4dcd4:	orr	w1, w1, #0x4
   4dcd8:	str	w1, [x0]
   4dcdc:	b	4ceb0 <mpfr_jn@@Base+0x620>
   4dce0:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4dce4:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4dce8:	add	x2, x2, #0x270
   4dcec:	add	x0, x0, #0x1b0
   4dcf0:	mov	w1, #0x137                 	// #311
   4dcf4:	bl	cb40 <mpfr_assert_fail@plt>
   4dcf8:	ldp	x21, x19, [sp, #112]
   4dcfc:	mov	w3, #0x0                   	// #0
   4dd00:	ldr	w4, [sp, #148]
   4dd04:	mov	x1, x21
   4dd08:	mov	x0, x19
   4dd0c:	bl	c540 <mpfr_round_near_x@plt>
   4dd10:	mov	w20, w0
   4dd14:	cbnz	w0, 4dd88 <mpfr_jn@@Base+0x14f8>
   4dd18:	stp	x23, x24, [sp, #48]
   4dd1c:	stp	x27, x28, [sp, #80]
   4dd20:	ldr	x1, [x19]
   4dd24:	ldr	x6, [x21, #16]
   4dd28:	ldr	x25, [sp, #128]
   4dd2c:	b	4c968 <mpfr_jn@@Base+0xd8>
   4dd30:	ldp	x1, x0, [sp, #112]
   4dd34:	ldr	w2, [sp, #148]
   4dd38:	bl	bd70 <mpfr_neg@plt>
   4dd3c:	mov	w19, w0
   4dd40:	b	4ceb0 <mpfr_jn@@Base+0x620>
   4dd44:	mov	x2, x26
   4dd48:	mov	x1, x24
   4dd4c:	mov	x0, x24
   4dd50:	mov	w3, #0x0                   	// #0
   4dd54:	bl	cc60 <mpfr_div_ui@plt>
   4dd58:	mov	x2, x23
   4dd5c:	mov	x1, x24
   4dd60:	mov	x0, x24
   4dd64:	mov	w3, #0x0                   	// #0
   4dd68:	bl	cc60 <mpfr_div_ui@plt>
   4dd6c:	b	4cc60 <mpfr_jn@@Base+0x3d0>
   4dd70:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   4dd74:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4dd78:	add	x2, x2, #0x610
   4dd7c:	add	x0, x0, #0x1d8
   4dd80:	mov	w1, #0x106                 	// #262
   4dd84:	bl	cb40 <mpfr_assert_fail@plt>
   4dd88:	ldp	x21, x2, [sp, #120]
   4dd8c:	ldr	w22, [sp, #148]
   4dd90:	mov	w3, w22
   4dd94:	mov	x1, x21
   4dd98:	mov	x0, x21
   4dd9c:	bl	c8f0 <mpfr_div_2ui@plt>
   4dda0:	mov	w19, w0
   4dda4:	cbz	w22, 4de00 <mpfr_jn@@Base+0x1570>
   4dda8:	ldr	x1, [x21, #16]
   4ddac:	cmp	w19, #0x0
   4ddb0:	csel	w19, w19, w20, ne  // ne = any
   4ddb4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ddb8:	ldr	x2, [x0, #2576]
   4ddbc:	add	x0, x0, #0xa10
   4ddc0:	blr	x2
   4ddc4:	ldr	x2, [sp, #136]
   4ddc8:	ldr	w0, [x2, x0]
   4ddcc:	ldr	w2, [sp, #208]
   4ddd0:	orr	w0, w2, w0
   4ddd4:	str	w0, [sp, #208]
   4ddd8:	b	4ce40 <mpfr_jn@@Base+0x5b0>
   4dddc:	ldr	x0, [sp, #192]
   4dde0:	ldr	x28, [sp, #160]
   4dde4:	ldr	x25, [sp, #224]
   4dde8:	bl	c070 <mpfr_clear@plt>
   4ddec:	b	4c9ac <mpfr_jn@@Base+0x11c>
   4ddf0:	mov	x25, x0
   4ddf4:	stp	x23, x24, [sp, #48]
   4ddf8:	stp	x27, x28, [sp, #80]
   4ddfc:	b	4c968 <mpfr_jn@@Base+0xd8>
   4de00:	ldr	x0, [sp, #120]
   4de04:	ldr	x1, [x0, #16]
   4de08:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4de0c:	cmp	x1, x0
   4de10:	b.ne	4ddac <mpfr_jn@@Base+0x151c>  // b.any
   4de14:	cbz	w19, 4de64 <mpfr_jn@@Base+0x15d4>
   4de18:	ldr	x0, [sp, #112]
   4de1c:	cmp	w20, #0x0
   4de20:	ldr	w2, [x0, #8]
   4de24:	mov	w0, #0x1                   	// #1
   4de28:	cneg	w0, w0, lt  // lt = tstop
   4de2c:	cmp	w2, w0
   4de30:	b.eq	4ddb4 <mpfr_jn@@Base+0x1524>  // b.none
   4de34:	ldr	x20, [sp, #120]
   4de38:	neg	w19, w19
   4de3c:	mov	x0, x20
   4de40:	bl	c670 <mpfr_nexttoinf@plt>
   4de44:	ldr	x1, [x20, #16]
   4de48:	b	4ddb4 <mpfr_jn@@Base+0x1524>
   4de4c:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4de50:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4de54:	add	x2, x2, #0x2d0
   4de58:	add	x0, x0, #0x1b0
   4de5c:	mov	w1, #0x12a                 	// #298
   4de60:	bl	cb40 <mpfr_assert_fail@plt>
   4de64:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4de68:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4de6c:	add	x2, x2, #0x1a0
   4de70:	add	x0, x0, #0x1b0
   4de74:	mov	w1, #0xa6                  	// #166
   4de78:	stp	x23, x24, [sp, #48]
   4de7c:	stp	x27, x28, [sp, #80]
   4de80:	bl	cb40 <mpfr_assert_fail@plt>
   4de84:	neg	w2, w2
   4de88:	b	4d9dc <mpfr_jn@@Base+0x114c>
   4de8c:	nop

000000000004de90 <mpfr_j0@@Base>:
   4de90:	mov	w3, w2
   4de94:	mov	x2, x1
   4de98:	mov	x1, #0x0                   	// #0
   4de9c:	b	cc10 <mpfr_jn@plt>

000000000004dea0 <mpfr_j1@@Base>:
   4dea0:	mov	w3, w2
   4dea4:	mov	x2, x1
   4dea8:	mov	x1, #0x1                   	// #1
   4deac:	b	cc10 <mpfr_jn@plt>

000000000004deb0 <mpfr_yn@@Base>:
   4deb0:	sub	sp, sp, #0x220
   4deb4:	cmp	x1, #0x0
   4deb8:	stp	x29, x30, [sp]
   4debc:	mov	x29, sp
   4dec0:	stp	x27, x28, [sp, #80]
   4dec4:	mov	x27, x2
   4dec8:	ldr	x2, [x2, #16]
   4decc:	stp	x21, x22, [sp, #32]
   4ded0:	mov	x22, #0x8000000000000003    	// #-9223372036854775805
   4ded4:	stp	x23, x24, [sp, #48]
   4ded8:	str	x0, [sp, #104]
   4dedc:	cneg	x0, x1, lt  // lt = tstop
   4dee0:	str	x0, [sp, #112]
   4dee4:	cmp	x2, x22
   4dee8:	str	x1, [sp, #120]
   4deec:	str	w3, [sp, #168]
   4def0:	b.le	4f364 <mpfr_yn@@Base+0x14b4>
   4def4:	mrs	x3, tpidr_el0
   4def8:	ldr	w1, [x27, #8]
   4defc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4df00:	ldr	x4, [x0, #2576]
   4df04:	add	x0, x0, #0xa10
   4df08:	blr	x4
   4df0c:	add	x24, x3, x0
   4df10:	str	x3, [sp, #136]
   4df14:	ldr	w0, [x3, x0]
   4df18:	str	w0, [sp, #172]
   4df1c:	tbnz	w1, #31, 4ee74 <mpfr_yn@@Base+0xfc4>
   4df20:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4df24:	ldr	x1, [x0, #2512]
   4df28:	add	x0, x0, #0x9d0
   4df2c:	blr	x1
   4df30:	add	x21, x3, x0
   4df34:	ldr	x0, [x3, x0]
   4df38:	mov	x4, x3
   4df3c:	stp	x19, x20, [sp, #16]
   4df40:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4df44:	str	x0, [sp, #184]
   4df48:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4df4c:	ldr	x3, [x0, #2544]
   4df50:	add	x0, x0, #0x9f0
   4df54:	blr	x3
   4df58:	add	x20, x4, x0
   4df5c:	stp	x25, x26, [sp, #64]
   4df60:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4df64:	ldr	x0, [x4, x0]
   4df68:	str	x0, [sp, #192]
   4df6c:	ldr	x0, [sp, #104]
   4df70:	str	x1, [x20]
   4df74:	str	x3, [x21]
   4df78:	ldr	x19, [x0]
   4df7c:	ldr	x0, [sp, #120]
   4df80:	cbnz	x0, 4e6a4 <mpfr_yn@@Base+0x7f4>
   4df84:	lsr	x1, x19, #63
   4df88:	add	x0, x1, x19
   4df8c:	neg	x0, x0, asr #1
   4df90:	cmp	x2, x0
   4df94:	b.lt	4f114 <mpfr_yn@@Base+0x1264>  // b.tstop
   4df98:	add	x21, sp, #0x1a0
   4df9c:	add	x20, sp, #0x1c0
   4dfa0:	add	x1, x1, x19
   4dfa4:	mov	x0, x27
   4dfa8:	mov	x2, #0x0                   	// #0
   4dfac:	asr	x1, x1, #1
   4dfb0:	add	x1, x1, #0x3
   4dfb4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4dfb8:	cmp	w0, #0x0
   4dfbc:	b.gt	4e6ec <mpfr_yn@@Base+0x83c>
   4dfc0:	add	x28, sp, #0x160
   4dfc4:	add	x19, sp, #0x180
   4dfc8:	mov	x0, x28
   4dfcc:	bl	bbd0 <mpfr_init@plt>
   4dfd0:	mov	x0, x19
   4dfd4:	bl	bbd0 <mpfr_init@plt>
   4dfd8:	mov	x0, x21
   4dfdc:	bl	bbd0 <mpfr_init@plt>
   4dfe0:	mov	x0, x20
   4dfe4:	bl	bbd0 <mpfr_init@plt>
   4dfe8:	ldr	x0, [sp, #104]
   4dfec:	ldr	x25, [x0]
   4dff0:	cmp	x25, #0x1
   4dff4:	b.eq	4e018 <mpfr_yn@@Base+0x168>  // b.none
   4dff8:	mov	x0, x25
   4dffc:	b.le	4f4a8 <mpfr_yn@@Base+0x15f8>
   4e000:	sub	x0, x0, #0x1
   4e004:	mov	w1, #0x40                  	// #64
   4e008:	clz	x0, x0
   4e00c:	sub	w0, w1, w0
   4e010:	lsl	w0, w0, #1
   4e014:	add	x25, x25, w0, sxtw
   4e018:	ldr	x0, [sp, #112]
   4e01c:	mov	x1, #0x40                  	// #64
   4e020:	str	x1, [sp, #248]
   4e024:	add	x1, x25, #0xd
   4e028:	add	x0, x0, #0x1
   4e02c:	str	x0, [sp, #224]
   4e030:	str	x1, [sp, #128]
   4e034:	mov	w1, #0x40                  	// #64
   4e038:	add	x0, x0, x0, lsl #1
   4e03c:	str	x0, [sp, #232]
   4e040:	sub	x0, x0, #0x1
   4e044:	add	x22, sp, #0x200
   4e048:	clz	x0, x0
   4e04c:	str	x27, [sp, #160]
   4e050:	sub	w0, w1, w0
   4e054:	sxtw	x0, w0
   4e058:	str	x0, [sp, #240]
   4e05c:	ldr	x23, [sp, #128]
   4e060:	mov	x0, x28
   4e064:	mov	x1, x23
   4e068:	bl	bed0 <mpfr_set_prec@plt>
   4e06c:	mov	x1, x23
   4e070:	mov	x0, x19
   4e074:	bl	bed0 <mpfr_set_prec@plt>
   4e078:	mov	x1, x23
   4e07c:	mov	x0, x21
   4e080:	bl	bed0 <mpfr_set_prec@plt>
   4e084:	mov	x1, x23
   4e088:	mov	x0, x20
   4e08c:	bl	bed0 <mpfr_set_prec@plt>
   4e090:	ldr	x23, [sp, #160]
   4e094:	mov	w3, #0x0                   	// #0
   4e098:	mov	x0, x28
   4e09c:	mov	x2, x23
   4e0a0:	mov	x1, x23
   4e0a4:	bl	bd50 <mpfr_mul@plt>
   4e0a8:	mov	x1, x28
   4e0ac:	mov	w3, #0x0                   	// #0
   4e0b0:	mov	x2, #0x2                   	// #2
   4e0b4:	mov	x0, x28
   4e0b8:	bl	c8f0 <mpfr_div_2ui@plt>
   4e0bc:	ldr	x24, [sp, #112]
   4e0c0:	mov	x1, x23
   4e0c4:	mov	w3, #0x0                   	// #0
   4e0c8:	mov	x0, x21
   4e0cc:	mov	x2, x24
   4e0d0:	bl	bf70 <mpfr_pow_ui@plt>
   4e0d4:	mov	x2, x24
   4e0d8:	mov	x1, x21
   4e0dc:	mov	x0, x21
   4e0e0:	mov	w3, #0x0                   	// #0
   4e0e4:	bl	c420 <mpfr_div_2si@plt>
   4e0e8:	ldr	x0, [sp, #120]
   4e0ec:	cbnz	x0, 4eeb0 <mpfr_yn@@Base+0x1000>
   4e0f0:	mov	w0, #0x1                   	// #1
   4e0f4:	mov	x23, #0x0                   	// #0
   4e0f8:	str	w0, [sp, #392]
   4e0fc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4e100:	str	x0, [sp, #400]
   4e104:	mov	x2, x21
   4e108:	mov	x1, x19
   4e10c:	mov	x0, x19
   4e110:	mov	w3, #0x0                   	// #0
   4e114:	bl	c620 <mpfr_div@plt>
   4e118:	ldr	x0, [sp, #232]
   4e11c:	cmp	x0, #0x1
   4e120:	b.eq	4e130 <mpfr_yn@@Base+0x280>  // b.none
   4e124:	b.ls	4f468 <mpfr_yn@@Base+0x15b8>  // b.plast
   4e128:	ldr	x0, [sp, #240]
   4e12c:	add	x23, x23, x0
   4e130:	mov	w2, #0x0                   	// #0
   4e134:	mov	x1, x28
   4e138:	mov	x0, x28
   4e13c:	bl	bd70 <mpfr_neg@plt>
   4e140:	mov	w1, #0x2                   	// #2
   4e144:	mov	x0, x28
   4e148:	bl	bca0 <mpfr_get_ui@plt>
   4e14c:	cmn	x0, #0x4
   4e150:	add	x1, x23, #0x1
   4e154:	str	x1, [sp, #200]
   4e158:	b.hi	4f420 <mpfr_yn@@Base+0x1570>  // b.pmore
   4e15c:	add	x27, sp, #0x120
   4e160:	add	x0, x0, #0x2
   4e164:	str	x0, [sp, #176]
   4e168:	mov	x0, x27
   4e16c:	bl	bf90 <mpfr_mpz_init@plt>
   4e170:	add	x23, sp, #0x140
   4e174:	mov	x1, #0x0                   	// #0
   4e178:	mov	x0, x27
   4e17c:	bl	bcb0 <__gmpz_set_ui@plt>
   4e180:	mov	x25, #0x1                   	// #1
   4e184:	mov	x0, x23
   4e188:	bl	bf90 <mpfr_mpz_init@plt>
   4e18c:	mov	x0, x23
   4e190:	mov	x1, #0x1                   	// #1
   4e194:	bl	bcb0 <__gmpz_set_ui@plt>
   4e198:	ldr	x0, [sp, #112]
   4e19c:	cbz	x0, 4e1e0 <mpfr_yn@@Base+0x330>
   4e1a0:	mov	x2, x25
   4e1a4:	mov	x1, x27
   4e1a8:	mov	x0, x27
   4e1ac:	bl	c100 <__gmpz_mul_ui@plt>
   4e1b0:	mov	x2, x23
   4e1b4:	mov	x1, x27
   4e1b8:	mov	x0, x27
   4e1bc:	bl	c9c0 <__gmpz_add@plt>
   4e1c0:	mov	x2, x25
   4e1c4:	mov	x0, x23
   4e1c8:	mov	x1, x23
   4e1cc:	bl	c100 <__gmpz_mul_ui@plt>
   4e1d0:	ldr	x0, [sp, #112]
   4e1d4:	add	x25, x25, #0x1
   4e1d8:	cmp	x0, x25
   4e1dc:	b.cs	4e1a0 <mpfr_yn@@Base+0x2f0>  // b.hs, b.nlast
   4e1e0:	ldr	x26, [sp, #112]
   4e1e4:	add	x24, sp, #0x1e0
   4e1e8:	ldr	x1, [sp, #448]
   4e1ec:	add	x2, x26, #0x2
   4e1f0:	mov	x0, x24
   4e1f4:	str	x2, [sp, #144]
   4e1f8:	bl	ca80 <mpfr_init2@plt>
   4e1fc:	ldr	x1, [sp, #448]
   4e200:	mov	x0, x22
   4e204:	ldr	x25, [sp, #224]
   4e208:	bl	ca80 <mpfr_init2@plt>
   4e20c:	mov	x1, x26
   4e210:	mov	w2, #0x0                   	// #0
   4e214:	mov	x0, x24
   4e218:	bl	c6e0 <mpfr_fac_ui@plt>
   4e21c:	mov	x1, x21
   4e220:	mov	x2, x24
   4e224:	mov	w3, #0x0                   	// #0
   4e228:	mov	x0, x24
   4e22c:	bl	c620 <mpfr_div@plt>
   4e230:	mov	x26, #0x1                   	// #1
   4e234:	mov	x1, x24
   4e238:	mov	x2, x27
   4e23c:	mov	w3, #0x0                   	// #0
   4e240:	mov	x0, x22
   4e244:	bl	c4d0 <mpfr_mul_z@plt>
   4e248:	mov	x0, x20
   4e24c:	mov	x2, x23
   4e250:	mov	x1, x22
   4e254:	mov	w3, #0x0                   	// #0
   4e258:	bl	cc80 <mpfr_div_z@plt>
   4e25c:	stp	x19, x21, [sp, #208]
   4e260:	ldr	x4, [sp, #464]
   4e264:	mov	x21, x4
   4e268:	mov	x4, x28
   4e26c:	mov	x28, x20
   4e270:	ldr	x20, [sp, #144]
   4e274:	b	4e284 <mpfr_yn@@Base+0x3d4>
   4e278:	add	x26, x26, #0x1
   4e27c:	add	x25, x25, #0x1
   4e280:	add	x20, x20, #0x2
   4e284:	mov	x2, x4
   4e288:	mov	x1, x24
   4e28c:	mov	w3, #0x0                   	// #0
   4e290:	mov	x0, x24
   4e294:	str	x4, [sp, #152]
   4e298:	bl	bd50 <mpfr_mul@plt>
   4e29c:	lsl	x6, x26, #1
   4e2a0:	mov	x2, x26
   4e2a4:	mov	x1, x24
   4e2a8:	mov	w3, #0x0                   	// #0
   4e2ac:	mov	x0, x24
   4e2b0:	str	x6, [sp, #144]
   4e2b4:	bl	cc60 <mpfr_div_ui@plt>
   4e2b8:	mov	w3, #0x0                   	// #0
   4e2bc:	mov	x2, x25
   4e2c0:	mov	x1, x24
   4e2c4:	mov	x0, x24
   4e2c8:	bl	cc60 <mpfr_div_ui@plt>
   4e2cc:	mov	x2, x26
   4e2d0:	mov	x1, x27
   4e2d4:	mov	x0, x27
   4e2d8:	bl	c100 <__gmpz_mul_ui@plt>
   4e2dc:	mov	x2, x25
   4e2e0:	mov	x1, x27
   4e2e4:	mov	x0, x27
   4e2e8:	bl	c100 <__gmpz_mul_ui@plt>
   4e2ec:	mov	x2, x20
   4e2f0:	mov	x1, x23
   4e2f4:	mov	x0, x27
   4e2f8:	bl	cc30 <__gmpz_addmul_ui@plt>
   4e2fc:	mov	x2, x26
   4e300:	mov	x1, x23
   4e304:	mov	x0, x23
   4e308:	bl	c100 <__gmpz_mul_ui@plt>
   4e30c:	mov	x2, x25
   4e310:	mov	x1, x23
   4e314:	mov	x0, x23
   4e318:	bl	c100 <__gmpz_mul_ui@plt>
   4e31c:	mov	x2, x27
   4e320:	mov	x1, x24
   4e324:	mov	w3, #0x0                   	// #0
   4e328:	mov	x0, x22
   4e32c:	bl	c4d0 <mpfr_mul_z@plt>
   4e330:	mov	x2, x23
   4e334:	mov	x1, x22
   4e338:	mov	w3, #0x0                   	// #0
   4e33c:	mov	x0, x22
   4e340:	bl	cc80 <mpfr_div_z@plt>
   4e344:	mov	x2, x22
   4e348:	mov	x1, x28
   4e34c:	mov	x0, x28
   4e350:	mov	w3, #0x0                   	// #0
   4e354:	ldr	x19, [sp, #528]
   4e358:	bl	c1a0 <mpfr_add@plt>
   4e35c:	ldr	x1, [sp, #464]
   4e360:	ldr	x2, [sp, #512]
   4e364:	cmp	x19, x1
   4e368:	ldr	x0, [sp, #528]
   4e36c:	csel	x19, x19, x1, ge  // ge = tcont
   4e370:	cmp	x21, x19
   4e374:	add	x0, x0, x2
   4e378:	csel	x21, x21, x19, ge  // ge = tcont
   4e37c:	cmp	x1, x0
   4e380:	ldr	x4, [sp, #152]
   4e384:	b.le	4e278 <mpfr_yn@@Base+0x3c8>
   4e388:	ldr	x6, [sp, #144]
   4e38c:	ldr	x0, [sp, #176]
   4e390:	udiv	x6, x0, x6
   4e394:	cmp	x6, x25
   4e398:	b.cs	4e278 <mpfr_yn@@Base+0x3c8>  // b.hs, b.nlast
   4e39c:	mov	x20, x28
   4e3a0:	mov	x28, x4
   4e3a4:	mov	x4, x21
   4e3a8:	mov	x0, x24
   4e3ac:	str	x4, [sp, #144]
   4e3b0:	ldp	x19, x21, [sp, #208]
   4e3b4:	bl	c070 <mpfr_clear@plt>
   4e3b8:	mov	x0, x22
   4e3bc:	bl	c070 <mpfr_clear@plt>
   4e3c0:	mov	x0, x27
   4e3c4:	bl	c170 <mpfr_mpz_clear@plt>
   4e3c8:	mov	x0, x23
   4e3cc:	bl	c170 <mpfr_mpz_clear@plt>
   4e3d0:	ldr	x4, [sp, #144]
   4e3d4:	cmn	x26, #0x1
   4e3d8:	ldr	x23, [sp, #464]
   4e3dc:	sub	x23, x4, x23
   4e3e0:	b.eq	4f418 <mpfr_yn@@Base+0x1568>  // b.none
   4e3e4:	cmn	x26, #0x2
   4e3e8:	b.cs	4f450 <mpfr_yn@@Base+0x15a0>  // b.hs, b.nlast
   4e3ec:	add	x4, x26, #0x1
   4e3f0:	mov	w0, #0x40                  	// #64
   4e3f4:	clz	x4, x4
   4e3f8:	sub	w4, w0, w4
   4e3fc:	lsl	w4, w4, #1
   4e400:	add	w4, w4, #0x3
   4e404:	sxtw	x4, w4
   4e408:	ldr	x0, [sp, #200]
   4e40c:	add	x23, x23, x4
   4e410:	ldr	x25, [sp, #400]
   4e414:	mov	x2, x20
   4e418:	mov	x1, x19
   4e41c:	mov	w3, #0x0                   	// #0
   4e420:	add	x25, x0, x25
   4e424:	mov	x0, x19
   4e428:	bl	c1a0 <mpfr_add@plt>
   4e42c:	ldr	x4, [sp, #464]
   4e430:	add	x1, x25, #0x1
   4e434:	ldr	x0, [sp, #400]
   4e438:	add	x23, x23, x4
   4e43c:	cmp	x25, x23
   4e440:	mov	w3, #0x0                   	// #0
   4e444:	csinc	x23, x1, x23, ge  // ge = tcont
   4e448:	mov	x2, #0x1                   	// #1
   4e44c:	subs	x23, x23, x0
   4e450:	mov	x0, x21
   4e454:	ldr	x26, [sp, #160]
   4e458:	csel	x23, x23, xzr, pl  // pl = nfrst
   4e45c:	add	x23, x23, x2
   4e460:	mov	x1, x26
   4e464:	bl	c8f0 <mpfr_div_2ui@plt>
   4e468:	mov	x1, x21
   4e46c:	mov	w2, #0x0                   	// #0
   4e470:	mov	x0, x21
   4e474:	bl	c090 <mpfr_log@plt>
   4e478:	ldr	x24, [sp, #136]
   4e47c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4e480:	ldr	x1, [x0, #2608]
   4e484:	add	x0, x0, #0xa30
   4e488:	blr	x1
   4e48c:	mov	w2, #0x0                   	// #0
   4e490:	add	x1, x24, x0
   4e494:	mov	x0, x20
   4e498:	bl	c380 <mpfr_cache@plt>
   4e49c:	ldr	x4, [sp, #432]
   4e4a0:	mov	x2, x20
   4e4a4:	ldr	x25, [sp, #464]
   4e4a8:	mov	x1, x21
   4e4ac:	mov	w3, #0x0                   	// #0
   4e4b0:	mov	x0, x21
   4e4b4:	cmp	x25, x4
   4e4b8:	csel	x25, x25, x4, ge  // ge = tcont
   4e4bc:	bl	c1a0 <mpfr_add@plt>
   4e4c0:	ldr	x0, [sp, #432]
   4e4c4:	mov	x1, x21
   4e4c8:	mov	w3, #0x0                   	// #0
   4e4cc:	mov	x2, #0x1                   	// #1
   4e4d0:	sub	x25, x25, x0
   4e4d4:	mov	x0, x21
   4e4d8:	bl	c2c0 <mpfr_mul_2ui@plt>
   4e4dc:	add	x25, x25, #0x4
   4e4e0:	ldr	x1, [sp, #112]
   4e4e4:	mov	x2, x26
   4e4e8:	mov	w3, #0x0                   	// #0
   4e4ec:	mov	x0, x20
   4e4f0:	bl	cc10 <mpfr_jn@plt>
   4e4f4:	mov	x2, x20
   4e4f8:	mov	x1, x21
   4e4fc:	mov	w3, #0x0                   	// #0
   4e500:	mov	x0, x21
   4e504:	bl	bd50 <mpfr_mul@plt>
   4e508:	ldr	x2, [sp, #400]
   4e50c:	mov	x1, x21
   4e510:	ldr	x0, [sp, #432]
   4e514:	add	x23, x23, x2
   4e518:	mov	w3, #0x0                   	// #0
   4e51c:	mov	x2, x19
   4e520:	add	x25, x25, x0
   4e524:	mov	x0, x21
   4e528:	bl	bb70 <mpfr_sub@plt>
   4e52c:	ldr	x0, [sp, #432]
   4e530:	add	x2, x25, #0x1
   4e534:	cmp	x23, x25
   4e538:	csinc	x23, x2, x23, le
   4e53c:	mov	w2, #0x0                   	// #0
   4e540:	subs	x23, x23, x0
   4e544:	csel	x23, x23, xzr, pl  // pl = nfrst
   4e548:	add	x23, x23, #0x2
   4e54c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4e550:	ldr	x1, [x0, #2624]
   4e554:	add	x0, x0, #0xa40
   4e558:	blr	x1
   4e55c:	add	x1, x24, x0
   4e560:	mov	x0, x28
   4e564:	bl	c380 <mpfr_cache@plt>
   4e568:	mov	x1, x21
   4e56c:	mov	x2, x28
   4e570:	mov	x0, x21
   4e574:	mov	w3, #0x0                   	// #0
   4e578:	bl	c620 <mpfr_div@plt>
   4e57c:	ldr	x1, [sp, #432]
   4e580:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4e584:	cmp	x1, x0
   4e588:	b.le	4f0dc <mpfr_yn@@Base+0x122c>
   4e58c:	ldr	x2, [sp, #104]
   4e590:	ldr	w0, [sp, #168]
   4e594:	ldr	x1, [sp, #416]
   4e598:	cmp	w0, #0x0
   4e59c:	ldr	x0, [sp, #440]
   4e5a0:	sub	x1, x1, #0x1
   4e5a4:	ldr	x3, [x2]
   4e5a8:	asr	x1, x1, #6
   4e5ac:	ldr	x2, [sp, #128]
   4e5b0:	add	x1, x1, #0x1
   4e5b4:	cinc	x3, x3, eq  // eq = none
   4e5b8:	sub	x2, x2, x23
   4e5bc:	bl	c370 <mpfr_round_p@plt>
   4e5c0:	cbz	w0, 4f0dc <mpfr_yn@@Base+0x122c>
   4e5c4:	ldr	x0, [sp, #120]
   4e5c8:	ldr	w3, [sp, #424]
   4e5cc:	tbz	x0, #63, 4e5d8 <mpfr_yn@@Base+0x728>
   4e5d0:	tst	x0, #0x1
   4e5d4:	cneg	w3, w3, ne  // ne = any
   4e5d8:	ldr	w2, [sp, #168]
   4e5dc:	mov	x1, x21
   4e5e0:	ldr	x0, [sp, #104]
   4e5e4:	bl	c6a0 <mpfr_set4@plt>
   4e5e8:	mov	w23, w0
   4e5ec:	mov	x0, x28
   4e5f0:	bl	c070 <mpfr_clear@plt>
   4e5f4:	mov	x0, x19
   4e5f8:	bl	c070 <mpfr_clear@plt>
   4e5fc:	mov	x0, x21
   4e600:	bl	c070 <mpfr_clear@plt>
   4e604:	mov	x0, x20
   4e608:	bl	c070 <mpfr_clear@plt>
   4e60c:	ldr	x2, [sp, #136]
   4e610:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4e614:	ldr	x1, [x0, #2576]
   4e618:	add	x0, x0, #0xa10
   4e61c:	blr	x1
   4e620:	ldr	w1, [sp, #172]
   4e624:	str	w1, [x2, x0]
   4e628:	ldr	x0, [sp, #104]
   4e62c:	ldr	x1, [x0, #16]
   4e630:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4e634:	ldr	x3, [x0, #2512]
   4e638:	add	x0, x0, #0x9d0
   4e63c:	blr	x3
   4e640:	ldr	x3, [sp, #184]
   4e644:	str	x3, [x2, x0]
   4e648:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4e64c:	ldr	x4, [x0, #2544]
   4e650:	add	x0, x0, #0x9f0
   4e654:	blr	x4
   4e658:	ldr	x4, [sp, #192]
   4e65c:	str	x4, [x2, x0]
   4e660:	cmp	x4, x1
   4e664:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   4e668:	b.le	4e6c4 <mpfr_yn@@Base+0x814>
   4e66c:	ldr	w2, [sp, #168]
   4e670:	mov	w1, w23
   4e674:	ldr	x0, [sp, #104]
   4e678:	bl	cb30 <mpfr_check_range@plt>
   4e67c:	mov	w23, w0
   4e680:	ldp	x19, x20, [sp, #16]
   4e684:	ldp	x25, x26, [sp, #64]
   4e688:	mov	w0, w23
   4e68c:	ldp	x29, x30, [sp]
   4e690:	ldp	x21, x22, [sp, #32]
   4e694:	ldp	x23, x24, [sp, #48]
   4e698:	ldp	x27, x28, [sp, #80]
   4e69c:	add	sp, sp, #0x220
   4e6a0:	ret
   4e6a4:	cmp	x0, #0x1
   4e6a8:	b.ne	4e6bc <mpfr_yn@@Base+0x80c>  // b.any
   4e6ac:	add	x2, x2, #0x1
   4e6b0:	neg	x0, x19
   4e6b4:	cmp	x2, x0
   4e6b8:	b.lt	4ef88 <mpfr_yn@@Base+0x10d8>  // b.tstop
   4e6bc:	lsr	x1, x19, #63
   4e6c0:	b	4df98 <mpfr_yn@@Base+0xe8>
   4e6c4:	cbnz	w23, 4ee30 <mpfr_yn@@Base+0xf80>
   4e6c8:	mov	w0, w23
   4e6cc:	ldp	x29, x30, [sp]
   4e6d0:	ldp	x19, x20, [sp, #16]
   4e6d4:	ldp	x21, x22, [sp, #32]
   4e6d8:	ldp	x23, x24, [sp, #48]
   4e6dc:	ldp	x25, x26, [sp, #64]
   4e6e0:	ldp	x27, x28, [sp, #80]
   4e6e4:	add	sp, sp, #0x220
   4e6e8:	ret
   4e6ec:	add	x26, sp, #0x120
   4e6f0:	mov	x0, x26
   4e6f4:	bl	bbd0 <mpfr_init@plt>
   4e6f8:	ldr	x0, [sp, #104]
   4e6fc:	ldr	x19, [x0]
   4e700:	cmp	x19, #0x1
   4e704:	b.eq	4e724 <mpfr_yn@@Base+0x874>  // b.none
   4e708:	mov	x0, x19
   4e70c:	b.le	4f508 <mpfr_yn@@Base+0x1658>
   4e710:	sub	x0, x0, #0x1
   4e714:	mov	w1, #0x40                  	// #64
   4e718:	clz	x0, x0
   4e71c:	sub	w0, w1, w0
   4e720:	add	x19, x19, w0, sxtw
   4e724:	ldr	x0, [sp, #120]
   4e728:	add	x1, x19, #0x4
   4e72c:	add	x28, sp, #0x160
   4e730:	add	x22, sp, #0x1e0
   4e734:	and	x2, x0, #0x1
   4e738:	str	x2, [sp, #200]
   4e73c:	and	x2, x0, #0x2
   4e740:	lsl	x0, x0, #2
   4e744:	add	x25, sp, #0x200
   4e748:	add	x24, sp, #0x100
   4e74c:	add	x19, sp, #0x180
   4e750:	str	x28, [sp, #160]
   4e754:	mov	x28, x1
   4e758:	str	x0, [sp, #176]
   4e75c:	add	x0, sp, #0x140
   4e760:	str	x27, [sp, #128]
   4e764:	str	x21, [sp, #144]
   4e768:	str	x0, [sp, #152]
   4e76c:	mov	x0, #0x40                  	// #64
   4e770:	str	x2, [sp, #224]
   4e774:	str	x0, [sp, #232]
   4e778:	mov	x1, x28
   4e77c:	mov	x0, x26
   4e780:	bl	bed0 <mpfr_set_prec@plt>
   4e784:	mov	x1, x28
   4e788:	mov	x0, x24
   4e78c:	bl	ca80 <mpfr_init2@plt>
   4e790:	ldr	x0, [sp, #152]
   4e794:	mov	x1, x28
   4e798:	bl	ca80 <mpfr_init2@plt>
   4e79c:	ldr	x0, [sp, #160]
   4e7a0:	mov	x1, x28
   4e7a4:	bl	ca80 <mpfr_init2@plt>
   4e7a8:	mov	x1, x28
   4e7ac:	mov	x0, x19
   4e7b0:	bl	ca80 <mpfr_init2@plt>
   4e7b4:	ldr	x0, [sp, #144]
   4e7b8:	mov	x1, x28
   4e7bc:	bl	ca80 <mpfr_init2@plt>
   4e7c0:	mov	x0, x20
   4e7c4:	mov	x1, #0x1f                  	// #31
   4e7c8:	bl	ca80 <mpfr_init2@plt>
   4e7cc:	mov	x0, x22
   4e7d0:	mov	x1, #0x1f                  	// #31
   4e7d4:	bl	ca80 <mpfr_init2@plt>
   4e7d8:	mov	x0, x25
   4e7dc:	mov	x1, #0x1f                  	// #31
   4e7e0:	bl	ca80 <mpfr_init2@plt>
   4e7e4:	ldr	x21, [sp, #128]
   4e7e8:	mov	x1, x26
   4e7ec:	mov	x0, x24
   4e7f0:	mov	w3, #0x0                   	// #0
   4e7f4:	mov	x2, x21
   4e7f8:	bl	cc40 <mpfr_sin_cos@plt>
   4e7fc:	ldr	w0, [x21, #8]
   4e800:	tbnz	w0, #31, 4f3d0 <mpfr_yn@@Base+0x1520>
   4e804:	mov	x1, x24
   4e808:	mov	x2, x26
   4e80c:	mov	w3, #0x0                   	// #0
   4e810:	mov	x0, x19
   4e814:	bl	c1a0 <mpfr_add@plt>
   4e818:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   4e81c:	mov	x2, x26
   4e820:	mov	w3, #0x0                   	// #0
   4e824:	mov	x1, x24
   4e828:	mov	x0, x26
   4e82c:	bl	bb70 <mpfr_sub@plt>
   4e830:	mov	w27, #0x0                   	// #0
   4e834:	mov	x0, x24
   4e838:	mov	x1, x19
   4e83c:	bl	c4a0 <mpfr_swap@plt>
   4e840:	str	wzr, [sp, #208]
   4e844:	ldr	x2, [sp, #128]
   4e848:	mov	w3, #0x0                   	// #0
   4e84c:	ldr	x21, [sp, #144]
   4e850:	ldr	w1, [x2, #8]
   4e854:	mov	x0, x21
   4e858:	cmp	w1, #0x0
   4e85c:	mov	x1, #0xffffffffffffffff    	// #-1
   4e860:	cneg	x1, x1, gt
   4e864:	bl	c8b0 <mpfr_si_div@plt>
   4e868:	mov	x1, x21
   4e86c:	mov	x0, x21
   4e870:	mov	w3, #0x0                   	// #0
   4e874:	mov	x2, #0x3                   	// #3
   4e878:	bl	c8f0 <mpfr_div_2ui@plt>
   4e87c:	mov	x21, #0x1                   	// #1
   4e880:	ldr	x0, [sp, #152]
   4e884:	mov	w3, #0x0                   	// #0
   4e888:	mov	x2, #0x0                   	// #0
   4e88c:	mov	x1, #0x1                   	// #1
   4e890:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4e894:	str	x23, [sp, #368]
   4e898:	mov	w0, #0x1                   	// #1
   4e89c:	mov	w3, #0x0                   	// #0
   4e8a0:	mov	x2, #0x0                   	// #0
   4e8a4:	mov	x1, #0x1                   	// #1
   4e8a8:	str	w0, [sp, #360]
   4e8ac:	mov	x0, x19
   4e8b0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4e8b4:	str	x24, [sp, #216]
   4e8b8:	mov	x24, x22
   4e8bc:	mov	w0, #0x1                   	// #1
   4e8c0:	str	w0, [sp, #456]
   4e8c4:	str	x23, [sp, #464]
   4e8c8:	str	w0, [sp, #488]
   4e8cc:	str	x23, [sp, #496]
   4e8d0:	ldr	x0, [sp, #120]
   4e8d4:	add	x22, x21, x21, lsl #1
   4e8d8:	add	x23, x0, x21
   4e8dc:	lsl	x22, x22, #1
   4e8e0:	lsl	x23, x23, #1
   4e8e4:	sub	x23, x23, #0x1
   4e8e8:	mov	x2, x23
   4e8ec:	mov	x1, x19
   4e8f0:	mov	w3, #0x0                   	// #0
   4e8f4:	mov	x0, x19
   4e8f8:	bl	c960 <mpfr_mul_si@plt>
   4e8fc:	ldr	x0, [sp, #176]
   4e900:	mov	x1, x19
   4e904:	mov	w3, #0x0                   	// #0
   4e908:	sub	x2, x0, x23
   4e90c:	mov	x0, x19
   4e910:	bl	c960 <mpfr_mul_si@plt>
   4e914:	mov	x2, x21
   4e918:	mov	x1, x19
   4e91c:	mov	w3, #0x0                   	// #0
   4e920:	mov	x0, x19
   4e924:	bl	cc60 <mpfr_div_ui@plt>
   4e928:	ldr	x2, [sp, #144]
   4e92c:	mov	x1, x19
   4e930:	mov	w3, #0x0                   	// #0
   4e934:	mov	x0, x19
   4e938:	bl	bd50 <mpfr_mul@plt>
   4e93c:	ldr	w0, [sp, #392]
   4e940:	mov	x2, x22
   4e944:	mov	x1, x19
   4e948:	cmp	w0, #0x0
   4e94c:	mov	x0, x20
   4e950:	cset	w3, le
   4e954:	add	w3, w3, #0x2
   4e958:	bl	ba50 <mpfr_mul_ui@plt>
   4e95c:	mov	x1, x20
   4e960:	mov	w3, #0x1                   	// #1
   4e964:	mov	w2, #0x0                   	// #0
   4e968:	mov	x0, x20
   4e96c:	bl	c6a0 <mpfr_set4@plt>
   4e970:	mov	x1, x19
   4e974:	mov	w3, #0x1                   	// #1
   4e978:	mov	w2, #0x2                   	// #2
   4e97c:	mov	x0, x25
   4e980:	bl	c6a0 <mpfr_set4@plt>
   4e984:	mov	x2, x28
   4e988:	mov	x1, x25
   4e98c:	mov	w3, #0x2                   	// #2
   4e990:	mov	x0, x25
   4e994:	bl	c2c0 <mpfr_mul_2ui@plt>
   4e998:	mov	x2, x20
   4e99c:	mov	x1, x25
   4e9a0:	mov	x0, x25
   4e9a4:	mov	w3, #0x2                   	// #2
   4e9a8:	bl	c1a0 <mpfr_add@plt>
   4e9ac:	cmp	w27, #0x1
   4e9b0:	b.gt	4ea68 <mpfr_yn@@Base+0xbb8>
   4e9b4:	and	x0, x21, #0x2
   4e9b8:	mov	x2, x19
   4e9bc:	mov	w3, #0x0                   	// #0
   4e9c0:	tbz	w21, #0, 4ead8 <mpfr_yn@@Base+0xc28>
   4e9c4:	cbnz	x0, 4eb2c <mpfr_yn@@Base+0xc7c>
   4e9c8:	ldr	x0, [sp, #160]
   4e9cc:	mov	x1, x0
   4e9d0:	bl	c1a0 <mpfr_add@plt>
   4e9d4:	ldr	x0, [sp, #368]
   4e9d8:	ldr	x1, [sp, #528]
   4e9dc:	cmp	x1, x0
   4e9e0:	b.le	4eaf8 <mpfr_yn@@Base+0xc48>
   4e9e4:	mov	w27, #0x0                   	// #0
   4e9e8:	mov	x2, x20
   4e9ec:	mov	x1, x24
   4e9f0:	mov	x0, x24
   4e9f4:	mov	w3, #0x2                   	// #2
   4e9f8:	bl	c1a0 <mpfr_add@plt>
   4e9fc:	ldr	x3, [sp, #128]
   4ea00:	add	x21, x21, #0x1
   4ea04:	ldr	w0, [x3, #8]
   4ea08:	cmp	w0, #0x0
   4ea0c:	b.gt	4ea48 <mpfr_yn@@Base+0xb98>
   4ea10:	tbz	w0, #31, 4e8d0 <mpfr_yn@@Base+0xa20>
   4ea14:	ldr	x0, [sp, #128]
   4ea18:	add	x1, x21, x21, lsr #63
   4ea1c:	mov	x2, #0x0                   	// #0
   4ea20:	neg	x1, x1, asr #1
   4ea24:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4ea28:	cmp	w0, #0x0
   4ea2c:	b.le	4e8d0 <mpfr_yn@@Base+0xa20>
   4ea30:	mov	w0, #0x1                   	// #1
   4ea34:	add	x23, x23, #0x2
   4ea38:	add	x22, x22, #0x6
   4ea3c:	mov	w27, #0x2                   	// #2
   4ea40:	str	w0, [sp, #208]
   4ea44:	b	4e8e8 <mpfr_yn@@Base+0xa38>
   4ea48:	asr	x1, x21, #1
   4ea4c:	mov	x0, x3
   4ea50:	mov	x2, #0x0                   	// #0
   4ea54:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4ea58:	tbnz	w0, #31, 4ea30 <mpfr_yn@@Base+0xb80>
   4ea5c:	ldr	x3, [sp, #128]
   4ea60:	ldr	w0, [x3, #8]
   4ea64:	b	4ea10 <mpfr_yn@@Base+0xb60>
   4ea68:	mov	x2, x28
   4ea6c:	mov	x1, x24
   4ea70:	mov	w3, #0x2                   	// #2
   4ea74:	mov	x0, x24
   4ea78:	bl	c8f0 <mpfr_div_2ui@plt>
   4ea7c:	ldr	w0, [sp, #392]
   4ea80:	mov	x2, x19
   4ea84:	mov	x1, x24
   4ea88:	mov	w3, #0x2                   	// #2
   4ea8c:	cmp	w0, #0x0
   4ea90:	mov	x0, x24
   4ea94:	b.le	4eb24 <mpfr_yn@@Base+0xc74>
   4ea98:	bl	c1a0 <mpfr_add@plt>
   4ea9c:	mov	x2, x28
   4eaa0:	mov	x1, x24
   4eaa4:	mov	w3, #0x2                   	// #2
   4eaa8:	mov	x0, x24
   4eaac:	bl	c2c0 <mpfr_mul_2ui@plt>
   4eab0:	mov	x2, x20
   4eab4:	mov	x1, x24
   4eab8:	mov	x0, x24
   4eabc:	mov	w3, #0x2                   	// #2
   4eac0:	bl	c1a0 <mpfr_add@plt>
   4eac4:	cmp	w27, #0x2
   4eac8:	b.ne	4eb4c <mpfr_yn@@Base+0xc9c>  // b.any
   4eacc:	add	x21, x21, #0x1
   4ead0:	mov	w27, #0x3                   	// #3
   4ead4:	b	4e8d0 <mpfr_yn@@Base+0xa20>
   4ead8:	cbnz	x0, 4eb3c <mpfr_yn@@Base+0xc8c>
   4eadc:	ldr	x0, [sp, #152]
   4eae0:	mov	x1, x0
   4eae4:	bl	c1a0 <mpfr_add@plt>
   4eae8:	ldr	x0, [sp, #336]
   4eaec:	ldr	x1, [sp, #528]
   4eaf0:	cmp	x1, x0
   4eaf4:	b.gt	4e9e4 <mpfr_yn@@Base+0xb34>
   4eaf8:	add	w27, w27, #0x1
   4eafc:	mov	x2, x20
   4eb00:	mov	x1, x24
   4eb04:	mov	x0, x24
   4eb08:	mov	w3, #0x2                   	// #2
   4eb0c:	bl	c1a0 <mpfr_add@plt>
   4eb10:	cmp	w27, #0x1
   4eb14:	b.eq	4e9fc <mpfr_yn@@Base+0xb4c>  // b.none
   4eb18:	add	x21, x21, #0x1
   4eb1c:	mov	w27, #0x2                   	// #2
   4eb20:	b	4e8d0 <mpfr_yn@@Base+0xa20>
   4eb24:	bl	bb70 <mpfr_sub@plt>
   4eb28:	b	4ea9c <mpfr_yn@@Base+0xbec>
   4eb2c:	ldr	x0, [sp, #160]
   4eb30:	mov	x1, x0
   4eb34:	bl	bb70 <mpfr_sub@plt>
   4eb38:	b	4e9d4 <mpfr_yn@@Base+0xb24>
   4eb3c:	ldr	x0, [sp, #152]
   4eb40:	mov	x1, x0
   4eb44:	bl	bb70 <mpfr_sub@plt>
   4eb48:	b	4eae8 <mpfr_yn@@Base+0xc38>
   4eb4c:	ldr	x0, [sp, #200]
   4eb50:	mov	x22, x24
   4eb54:	mov	w3, #0x0                   	// #0
   4eb58:	ldr	x24, [sp, #216]
   4eb5c:	cbnz	x0, 4f078 <mpfr_yn@@Base+0x11c8>
   4eb60:	ldr	x2, [sp, #152]
   4eb64:	mov	x1, x26
   4eb68:	mov	x0, x26
   4eb6c:	bl	bd50 <mpfr_mul@plt>
   4eb70:	ldr	x2, [sp, #160]
   4eb74:	mov	x1, x24
   4eb78:	mov	w3, #0x0                   	// #0
   4eb7c:	mov	x0, x24
   4eb80:	bl	bd50 <mpfr_mul@plt>
   4eb84:	ldr	x21, [sp, #272]
   4eb88:	mov	x2, x26
   4eb8c:	ldr	x4, [sp, #304]
   4eb90:	mov	x1, x24
   4eb94:	mov	x0, x24
   4eb98:	mov	w3, #0x0                   	// #0
   4eb9c:	cmp	x21, x4
   4eba0:	csel	x21, x21, x4, ge  // ge = tcont
   4eba4:	bl	c1a0 <mpfr_add@plt>
   4eba8:	ldr	x0, [sp, #224]
   4ebac:	cbnz	x0, 4f0c8 <mpfr_yn@@Base+0x1218>
   4ebb0:	ldr	x1, [sp, #272]
   4ebb4:	mov	w2, #0x0                   	// #0
   4ebb8:	ldr	x4, [sp, #336]
   4ebbc:	cmp	x1, x21
   4ebc0:	ldr	x0, [sp, #368]
   4ebc4:	add	x5, x4, #0x2
   4ebc8:	ldr	x3, [sp, #496]
   4ebcc:	csel	x1, x1, x21, ge  // ge = tcont
   4ebd0:	cmp	x4, x0
   4ebd4:	add	x0, x0, #0x2
   4ebd8:	csel	x0, x0, x5, lt  // lt = tstop
   4ebdc:	add	x21, x1, #0x2
   4ebe0:	cmp	x1, x3
   4ebe4:	add	x3, x3, #0x2
   4ebe8:	csel	x21, x21, x3, gt
   4ebec:	add	x1, x0, #0x1
   4ebf0:	cmp	x0, x21
   4ebf4:	csinc	x21, x1, x21, gt
   4ebf8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ebfc:	ldr	x1, [x0, #2624]
   4ec00:	add	x0, x0, #0xa40
   4ec04:	blr	x1
   4ec08:	ldr	x1, [sp, #136]
   4ec0c:	add	x1, x1, x0
   4ec10:	mov	x0, x26
   4ec14:	bl	c380 <mpfr_cache@plt>
   4ec18:	ldr	x23, [sp, #128]
   4ec1c:	mov	x1, x26
   4ec20:	mov	w3, #0x0                   	// #0
   4ec24:	mov	x0, x26
   4ec28:	mov	x2, x23
   4ec2c:	bl	bd50 <mpfr_mul@plt>
   4ec30:	ldr	w0, [x23, #8]
   4ec34:	mov	w3, #0x0                   	// #0
   4ec38:	mov	x2, x26
   4ec3c:	mov	x1, #0xffffffffffffffff    	// #-1
   4ec40:	cmp	w0, #0x0
   4ec44:	mov	x0, x26
   4ec48:	cneg	x1, x1, gt
   4ec4c:	bl	c8b0 <mpfr_si_div@plt>
   4ec50:	mov	x1, x26
   4ec54:	mov	w2, #0x0                   	// #0
   4ec58:	mov	x0, x26
   4ec5c:	bl	c930 <mpfr_sqrt@plt>
   4ec60:	ldr	w4, [sp, #296]
   4ec64:	mov	x2, x24
   4ec68:	ldr	w3, [sp, #264]
   4ec6c:	mov	x1, x26
   4ec70:	mov	x0, x20
   4ec74:	cmp	w4, w3
   4ec78:	cset	w3, ne  // ne = any
   4ec7c:	add	w3, w3, #0x2
   4ec80:	bl	bd50 <mpfr_mul@plt>
   4ec84:	mov	x1, x20
   4ec88:	mov	w3, #0x1                   	// #1
   4ec8c:	mov	w2, #0x2                   	// #2
   4ec90:	mov	x0, x20
   4ec94:	bl	c6a0 <mpfr_set4@plt>
   4ec98:	mov	x1, x20
   4ec9c:	mov	w3, #0x2                   	// #2
   4eca0:	mov	x2, #0x3                   	// #3
   4eca4:	mov	x0, x20
   4eca8:	bl	ba50 <mpfr_mul_ui@plt>
   4ecac:	ldr	x0, [sp, #304]
   4ecb0:	mov	x2, x24
   4ecb4:	mov	x1, x26
   4ecb8:	mov	w3, #0x0                   	// #0
   4ecbc:	add	x21, x21, x0
   4ecc0:	mov	x0, x26
   4ecc4:	bl	bd50 <mpfr_mul@plt>
   4ecc8:	ldr	x1, [sp, #304]
   4eccc:	add	x3, x21, #0x1
   4ecd0:	ldr	x2, [sp, #464]
   4ecd4:	add	x4, x1, #0x1
   4ecd8:	mov	x0, x24
   4ecdc:	cmp	x2, x1
   4ece0:	csinc	x2, x4, x2, le
   4ece4:	cmp	x21, x2
   4ece8:	csinc	x21, x3, x2, gt
   4ecec:	bl	c070 <mpfr_clear@plt>
   4ecf0:	ldr	x0, [sp, #152]
   4ecf4:	bl	c070 <mpfr_clear@plt>
   4ecf8:	ldr	x0, [sp, #160]
   4ecfc:	bl	c070 <mpfr_clear@plt>
   4ed00:	mov	x0, x19
   4ed04:	bl	c070 <mpfr_clear@plt>
   4ed08:	ldr	x0, [sp, #144]
   4ed0c:	bl	c070 <mpfr_clear@plt>
   4ed10:	mov	x0, x20
   4ed14:	bl	c070 <mpfr_clear@plt>
   4ed18:	mov	x0, x22
   4ed1c:	bl	c070 <mpfr_clear@plt>
   4ed20:	mov	x0, x25
   4ed24:	bl	c070 <mpfr_clear@plt>
   4ed28:	ldr	x0, [sp, #304]
   4ed2c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4ed30:	sub	x21, x21, x0
   4ed34:	cmp	x0, x1
   4ed38:	b.le	4f3e4 <mpfr_yn@@Base+0x1534>
   4ed3c:	ldr	x2, [sp, #104]
   4ed40:	ldr	w0, [sp, #168]
   4ed44:	ldr	x1, [sp, #288]
   4ed48:	cmp	w0, #0x0
   4ed4c:	ldr	x0, [sp, #312]
   4ed50:	sub	x1, x1, #0x1
   4ed54:	ldr	x3, [x2]
   4ed58:	asr	x1, x1, #6
   4ed5c:	add	x1, x1, #0x1
   4ed60:	sub	x2, x28, x21
   4ed64:	cinc	x3, x3, eq  // eq = none
   4ed68:	bl	c370 <mpfr_round_p@plt>
   4ed6c:	cbz	w0, 4f3e4 <mpfr_yn@@Base+0x1534>
   4ed70:	ldr	x27, [sp, #128]
   4ed74:	ldr	w0, [sp, #200]
   4ed78:	ldr	x21, [sp, #144]
   4ed7c:	eor	w0, w0, #0x1
   4ed80:	ldr	w1, [x27, #8]
   4ed84:	ldr	x28, [sp, #160]
   4ed88:	cmp	w1, #0x0
   4ed8c:	cset	w1, gt
   4ed90:	orr	w0, w1, w0
   4ed94:	cbz	w0, 4f438 <mpfr_yn@@Base+0x1588>
   4ed98:	ldr	w2, [sp, #168]
   4ed9c:	mov	x1, x26
   4eda0:	ldr	w3, [sp, #296]
   4eda4:	ldr	x0, [sp, #104]
   4eda8:	bl	c6a0 <mpfr_set4@plt>
   4edac:	mov	w23, w0
   4edb0:	mov	x0, x26
   4edb4:	bl	c070 <mpfr_clear@plt>
   4edb8:	ldr	w0, [sp, #168]
   4edbc:	cmp	w0, #0x5
   4edc0:	b.eq	4edcc <mpfr_yn@@Base+0xf1c>  // b.none
   4edc4:	cbz	w23, 4dfc8 <mpfr_yn@@Base+0x118>
   4edc8:	b	4edd0 <mpfr_yn@@Base+0xf20>
   4edcc:	mov	w23, #0x1                   	// #1
   4edd0:	ldr	x2, [sp, #136]
   4edd4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4edd8:	ldr	x1, [x0, #2576]
   4eddc:	add	x0, x0, #0xa10
   4ede0:	blr	x1
   4ede4:	ldr	w1, [sp, #172]
   4ede8:	str	w1, [x2, x0]
   4edec:	ldr	x0, [sp, #104]
   4edf0:	ldr	x1, [x0, #16]
   4edf4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4edf8:	ldr	x3, [x0, #2512]
   4edfc:	add	x0, x0, #0x9d0
   4ee00:	blr	x3
   4ee04:	ldr	x3, [sp, #184]
   4ee08:	str	x3, [x2, x0]
   4ee0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ee10:	ldr	x4, [x0, #2544]
   4ee14:	add	x0, x0, #0x9f0
   4ee18:	blr	x4
   4ee1c:	ldr	x4, [sp, #192]
   4ee20:	str	x4, [x2, x0]
   4ee24:	cmp	x4, x1
   4ee28:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   4ee2c:	b.gt	4e66c <mpfr_yn@@Base+0x7bc>
   4ee30:	ldr	w0, [sp, #172]
   4ee34:	ldp	x19, x20, [sp, #16]
   4ee38:	orr	w1, w0, #0x8
   4ee3c:	ldp	x25, x26, [sp, #64]
   4ee40:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ee44:	ldr	x2, [x0, #2576]
   4ee48:	add	x0, x0, #0xa10
   4ee4c:	blr	x2
   4ee50:	ldr	x2, [sp, #136]
   4ee54:	ldp	x29, x30, [sp]
   4ee58:	str	w1, [x2, x0]
   4ee5c:	mov	w0, w23
   4ee60:	ldp	x21, x22, [sp, #32]
   4ee64:	ldp	x23, x24, [sp, #48]
   4ee68:	ldp	x27, x28, [sp, #80]
   4ee6c:	add	sp, sp, #0x220
   4ee70:	ret
   4ee74:	mov	w0, w0
   4ee78:	mov	w23, #0x0                   	// #0
   4ee7c:	orr	w1, w0, #0x4
   4ee80:	str	w1, [x24]
   4ee84:	ldr	x1, [sp, #104]
   4ee88:	mov	x0, #0x2                   	// #2
   4ee8c:	movk	x0, #0x8000, lsl #48
   4ee90:	ldp	x29, x30, [sp]
   4ee94:	str	x0, [x1, #16]
   4ee98:	mov	w0, w23
   4ee9c:	ldp	x21, x22, [sp, #32]
   4eea0:	ldp	x23, x24, [sp, #48]
   4eea4:	ldp	x27, x28, [sp, #80]
   4eea8:	add	sp, sp, #0x220
   4eeac:	ret
   4eeb0:	mov	x0, x22
   4eeb4:	bl	bf90 <mpfr_mpz_init@plt>
   4eeb8:	mov	x0, x22
   4eebc:	mov	x1, #0x1                   	// #1
   4eec0:	bl	bcb0 <__gmpz_set_ui@plt>
   4eec4:	mov	x0, x19
   4eec8:	mov	w3, #0x0                   	// #0
   4eecc:	mov	x2, #0x0                   	// #0
   4eed0:	mov	x1, #0x1                   	// #1
   4eed4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4eed8:	ldr	x24, [sp, #112]
   4eedc:	ldr	x23, [sp, #400]
   4eee0:	cmp	x24, #0x1
   4eee4:	b.eq	4ef54 <mpfr_yn@@Base+0x10a4>  // b.none
   4eee8:	mov	x25, #0x1                   	// #1
   4eeec:	nop
   4eef0:	mov	w3, #0x0                   	// #0
   4eef4:	mov	x2, x28
   4eef8:	mov	x1, x19
   4eefc:	mov	x0, x19
   4ef00:	bl	bd50 <mpfr_mul@plt>
   4ef04:	sub	x26, x24, x25
   4ef08:	mov	x2, x25
   4ef0c:	mov	x1, x22
   4ef10:	mov	x0, x22
   4ef14:	bl	c100 <__gmpz_mul_ui@plt>
   4ef18:	mov	x2, x26
   4ef1c:	mov	x1, x22
   4ef20:	mov	x0, x22
   4ef24:	bl	c100 <__gmpz_mul_ui@plt>
   4ef28:	mov	x2, x22
   4ef2c:	mov	x1, x19
   4ef30:	mov	x0, x19
   4ef34:	mov	w3, #0x0                   	// #0
   4ef38:	bl	c480 <mpfr_add_z@plt>
   4ef3c:	add	x25, x25, #0x1
   4ef40:	ldr	x0, [sp, #400]
   4ef44:	cmp	x23, x0
   4ef48:	csel	x23, x23, x0, ge  // ge = tcont
   4ef4c:	cmp	x24, x25
   4ef50:	b.ne	4eef0 <mpfr_yn@@Base+0x1040>  // b.any
   4ef54:	mov	x1, x22
   4ef58:	mov	x0, x22
   4ef5c:	bl	bc60 <__gmpz_sqrt@plt>
   4ef60:	mov	x2, x22
   4ef64:	mov	x1, x19
   4ef68:	mov	w3, #0x0                   	// #0
   4ef6c:	mov	x0, x19
   4ef70:	bl	cc80 <mpfr_div_z@plt>
   4ef74:	mov	x0, x22
   4ef78:	bl	c170 <mpfr_mpz_clear@plt>
   4ef7c:	ldr	x0, [sp, #400]
   4ef80:	sub	x23, x23, x0
   4ef84:	b	4e104 <mpfr_yn@@Base+0x254>
   4ef88:	add	x25, sp, #0x200
   4ef8c:	add	x19, x19, #0xa
   4ef90:	mov	x1, x19
   4ef94:	mov	x0, x25
   4ef98:	bl	ca80 <mpfr_init2@plt>
   4ef9c:	mov	w2, #0x2                   	// #2
   4efa0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4efa4:	ldr	x1, [x0, #2624]
   4efa8:	add	x0, x0, #0xa40
   4efac:	blr	x1
   4efb0:	ldr	x1, [sp, #136]
   4efb4:	add	x1, x1, x0
   4efb8:	mov	x0, x25
   4efbc:	bl	c380 <mpfr_cache@plt>
   4efc0:	mov	x1, x25
   4efc4:	mov	x2, x27
   4efc8:	mov	w3, #0x2                   	// #2
   4efcc:	mov	x0, x25
   4efd0:	bl	bd50 <mpfr_mul@plt>
   4efd4:	str	wzr, [x24]
   4efd8:	ldr	w3, [sp, #120]
   4efdc:	mov	x2, x25
   4efe0:	mov	x0, x25
   4efe4:	mov	x1, #0x2                   	// #2
   4efe8:	bl	c2f0 <mpfr_ui_div@plt>
   4efec:	ldr	w0, [x24]
   4eff0:	tbnz	w0, #1, 4f5b0 <mpfr_yn@@Base+0x1700>
   4eff4:	mov	x1, x25
   4eff8:	mov	w2, #0x0                   	// #0
   4effc:	mov	x0, x25
   4f000:	bl	bd70 <mpfr_neg@plt>
   4f004:	ldr	x0, [sp, #528]
   4f008:	mov	x3, #0x3                   	// #3
   4f00c:	ldr	x1, [sp, #512]
   4f010:	add	x2, x0, #0x2
   4f014:	cmp	x2, x1
   4f018:	sub	x2, x1, x0
   4f01c:	csinc	x2, x3, x2, ge  // ge = tcont
   4f020:	cmp	x0, x22
   4f024:	b.le	4f058 <mpfr_yn@@Base+0x11a8>
   4f028:	ldr	w3, [sp, #168]
   4f02c:	sub	x1, x1, #0x1
   4f030:	ldr	x0, [sp, #536]
   4f034:	cmp	w3, #0x0
   4f038:	ldr	x3, [sp, #104]
   4f03c:	asr	x1, x1, #6
   4f040:	sub	x2, x19, x2
   4f044:	add	x1, x1, #0x1
   4f048:	ldr	x3, [x3]
   4f04c:	cinc	x3, x3, eq  // eq = none
   4f050:	bl	c370 <mpfr_round_p@plt>
   4f054:	cbnz	w0, 4f574 <mpfr_yn@@Base+0x16c4>
   4f058:	mov	x0, x25
   4f05c:	bl	c070 <mpfr_clear@plt>
   4f060:	ldr	x0, [sp, #104]
   4f064:	add	x21, sp, #0x1a0
   4f068:	add	x20, sp, #0x1c0
   4f06c:	ldr	x19, [x0]
   4f070:	lsr	x1, x19, #63
   4f074:	b	4dfa0 <mpfr_yn@@Base+0xf0>
   4f078:	ldr	x2, [sp, #160]
   4f07c:	mov	x1, x26
   4f080:	mov	x0, x26
   4f084:	bl	bd50 <mpfr_mul@plt>
   4f088:	ldr	x2, [sp, #152]
   4f08c:	mov	x1, x24
   4f090:	mov	w3, #0x0                   	// #0
   4f094:	mov	x0, x24
   4f098:	bl	bd50 <mpfr_mul@plt>
   4f09c:	ldr	x21, [sp, #272]
   4f0a0:	mov	x2, x24
   4f0a4:	ldr	x4, [sp, #304]
   4f0a8:	mov	x1, x26
   4f0ac:	mov	x0, x24
   4f0b0:	mov	w3, #0x0                   	// #0
   4f0b4:	cmp	x21, x4
   4f0b8:	csel	x21, x21, x4, ge  // ge = tcont
   4f0bc:	bl	bb70 <mpfr_sub@plt>
   4f0c0:	ldr	x0, [sp, #224]
   4f0c4:	cbz	x0, 4ebb0 <mpfr_yn@@Base+0xd00>
   4f0c8:	mov	x1, x24
   4f0cc:	mov	x0, x24
   4f0d0:	mov	w2, #0x0                   	// #0
   4f0d4:	bl	bd70 <mpfr_neg@plt>
   4f0d8:	b	4ebb0 <mpfr_yn@@Base+0xd00>
   4f0dc:	ldr	x1, [sp, #128]
   4f0e0:	mov	x0, #0xfffffffffffffeff    	// #-257
   4f0e4:	movk	x0, #0x7fff, lsl #48
   4f0e8:	sub	x0, x0, x1
   4f0ec:	ldr	x1, [sp, #248]
   4f0f0:	cmp	x0, x1
   4f0f4:	b.lt	4f598 <mpfr_yn@@Base+0x16e8>  // b.tstop
   4f0f8:	ldr	x0, [sp, #128]
   4f0fc:	add	x0, x0, x1
   4f100:	str	x0, [sp, #128]
   4f104:	add	x0, x0, x0, lsr #63
   4f108:	asr	x0, x0, #1
   4f10c:	str	x0, [sp, #248]
   4f110:	b	4e05c <mpfr_yn@@Base+0x1ac>
   4f114:	add	x21, sp, #0x1a0
   4f118:	add	x19, x19, #0xa
   4f11c:	add	x20, sp, #0x1c0
   4f120:	mov	x1, x19
   4f124:	mov	x0, x21
   4f128:	bl	ca80 <mpfr_init2@plt>
   4f12c:	add	x22, sp, #0x1e0
   4f130:	mov	x1, x19
   4f134:	mov	x0, x20
   4f138:	bl	ca80 <mpfr_init2@plt>
   4f13c:	add	x25, sp, #0x200
   4f140:	mov	x1, x19
   4f144:	mov	x0, x22
   4f148:	bl	ca80 <mpfr_init2@plt>
   4f14c:	mov	x1, x19
   4f150:	mov	x0, x25
   4f154:	bl	ca80 <mpfr_init2@plt>
   4f158:	mov	x1, x27
   4f15c:	mov	w2, #0x3                   	// #3
   4f160:	mov	x0, x25
   4f164:	bl	c090 <mpfr_log@plt>
   4f168:	ldr	w3, [sp, #520]
   4f16c:	mov	x1, x25
   4f170:	mov	w2, #0x2                   	// #2
   4f174:	mov	x0, x20
   4f178:	bl	c6a0 <mpfr_set4@plt>
   4f17c:	mov	x0, x20
   4f180:	bl	c120 <mpfr_nextabove@plt>
   4f184:	ldr	x19, [sp, #136]
   4f188:	mov	w2, #0x3                   	// #3
   4f18c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4f190:	ldr	x1, [x0, #2608]
   4f194:	add	x0, x0, #0xa30
   4f198:	blr	x1
   4f19c:	add	x1, x19, x0
   4f1a0:	mov	x0, x22
   4f1a4:	bl	c380 <mpfr_cache@plt>
   4f1a8:	mov	x2, x22
   4f1ac:	mov	x1, x25
   4f1b0:	mov	w3, #0x3                   	// #3
   4f1b4:	mov	x0, x21
   4f1b8:	bl	c1a0 <mpfr_add@plt>
   4f1bc:	mov	x0, x22
   4f1c0:	bl	c120 <mpfr_nextabove@plt>
   4f1c4:	mov	x1, x20
   4f1c8:	mov	w3, #0x2                   	// #2
   4f1cc:	mov	x2, x22
   4f1d0:	mov	x0, x20
   4f1d4:	bl	c1a0 <mpfr_add@plt>
   4f1d8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4f1dc:	ldr	x1, [x0, #2560]
   4f1e0:	add	x0, x0, #0xa00
   4f1e4:	blr	x1
   4f1e8:	mov	w2, #0x2                   	// #2
   4f1ec:	add	x1, x19, x0
   4f1f0:	mov	x0, x22
   4f1f4:	bl	c380 <mpfr_cache@plt>
   4f1f8:	mov	x2, x22
   4f1fc:	mov	x1, x21
   4f200:	mov	w3, #0x3                   	// #3
   4f204:	mov	x0, x21
   4f208:	bl	bb70 <mpfr_sub@plt>
   4f20c:	mov	x0, x22
   4f210:	bl	bdd0 <mpfr_nextbelow@plt>
   4f214:	mov	x1, x20
   4f218:	mov	w3, #0x2                   	// #2
   4f21c:	mov	x2, x22
   4f220:	mov	x0, x20
   4f224:	bl	bb70 <mpfr_sub@plt>
   4f228:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4f22c:	ldr	x1, [x0, #2624]
   4f230:	add	x0, x0, #0xa40
   4f234:	blr	x1
   4f238:	mov	w2, #0x2                   	// #2
   4f23c:	add	x1, x19, x0
   4f240:	mov	x0, x22
   4f244:	bl	c380 <mpfr_cache@plt>
   4f248:	mov	x2, x22
   4f24c:	mov	x1, x21
   4f250:	mov	w3, #0x3                   	// #3
   4f254:	mov	x0, x21
   4f258:	bl	c620 <mpfr_div@plt>
   4f25c:	mov	x0, x22
   4f260:	bl	bdd0 <mpfr_nextbelow@plt>
   4f264:	mov	x2, x22
   4f268:	mov	x1, x20
   4f26c:	mov	w3, #0x3                   	// #3
   4f270:	mov	x0, x20
   4f274:	bl	c620 <mpfr_div@plt>
   4f278:	mov	x1, x21
   4f27c:	mov	w3, #0x3                   	// #3
   4f280:	mov	x2, #0x1                   	// #1
   4f284:	mov	x0, x21
   4f288:	bl	c2c0 <mpfr_mul_2ui@plt>
   4f28c:	mov	x1, x20
   4f290:	mov	w3, #0x2                   	// #2
   4f294:	mov	x2, #0x1                   	// #1
   4f298:	mov	x0, x20
   4f29c:	bl	c2c0 <mpfr_mul_2ui@plt>
   4f2a0:	mov	w3, #0x2                   	// #2
   4f2a4:	mov	x2, x27
   4f2a8:	mov	x1, x27
   4f2ac:	mov	x0, x22
   4f2b0:	bl	bd50 <mpfr_mul@plt>
   4f2b4:	mov	x1, x22
   4f2b8:	mov	w2, #0x3                   	// #3
   4f2bc:	mov	x0, x22
   4f2c0:	bl	bd70 <mpfr_neg@plt>
   4f2c4:	mov	x1, x22
   4f2c8:	mov	w3, #0x3                   	// #3
   4f2cc:	mov	x2, #0x1                   	// #1
   4f2d0:	mov	x0, x22
   4f2d4:	bl	c8f0 <mpfr_div_2ui@plt>
   4f2d8:	mov	x2, x25
   4f2dc:	mov	x1, x22
   4f2e0:	mov	w3, #0x2                   	// #2
   4f2e4:	mov	x0, x22
   4f2e8:	bl	bd50 <mpfr_mul@plt>
   4f2ec:	mov	w3, #0x2                   	// #2
   4f2f0:	mov	x2, x22
   4f2f4:	mov	x1, x20
   4f2f8:	mov	x0, x20
   4f2fc:	bl	c1a0 <mpfr_add@plt>
   4f300:	ldr	w24, [sp, #168]
   4f304:	ldr	x19, [sp, #104]
   4f308:	mov	w2, w24
   4f30c:	mov	x0, x21
   4f310:	ldr	x1, [x19]
   4f314:	bl	c970 <mpfr_prec_round@plt>
   4f318:	mov	w23, w0
   4f31c:	ldr	x1, [x19]
   4f320:	mov	x0, x20
   4f324:	mov	w2, w24
   4f328:	bl	c970 <mpfr_prec_round@plt>
   4f32c:	cmp	w23, w0
   4f330:	b.eq	4f52c <mpfr_yn@@Base+0x167c>  // b.none
   4f334:	mov	x0, x21
   4f338:	bl	c070 <mpfr_clear@plt>
   4f33c:	mov	x0, x20
   4f340:	bl	c070 <mpfr_clear@plt>
   4f344:	mov	x0, x22
   4f348:	bl	c070 <mpfr_clear@plt>
   4f34c:	mov	x0, x25
   4f350:	bl	c070 <mpfr_clear@plt>
   4f354:	ldr	x0, [sp, #104]
   4f358:	ldr	x19, [x0]
   4f35c:	lsr	x1, x19, #63
   4f360:	b	4dfa0 <mpfr_yn@@Base+0xf0>
   4f364:	mov	x0, #0x2                   	// #2
   4f368:	movk	x0, #0x8000, lsl #48
   4f36c:	cmp	x2, x0
   4f370:	b.eq	4f4cc <mpfr_yn@@Base+0x161c>  // b.none
   4f374:	cmp	x2, x22
   4f378:	b.eq	4f480 <mpfr_yn@@Base+0x15d0>  // b.none
   4f37c:	ldr	x0, [sp, #104]
   4f380:	mov	w2, #0xffffffff            	// #-1
   4f384:	str	x22, [x0, #16]
   4f388:	ldr	x0, [sp, #120]
   4f38c:	tbz	x0, #63, 4f39c <mpfr_yn@@Base+0x14ec>
   4f390:	tst	x0, #0x1
   4f394:	mov	w2, #0x1                   	// #1
   4f398:	cneg	w2, w2, eq  // eq = none
   4f39c:	mrs	x1, tpidr_el0
   4f3a0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4f3a4:	ldr	x3, [x0, #2576]
   4f3a8:	add	x0, x0, #0xa10
   4f3ac:	blr	x3
   4f3b0:	add	x0, x1, x0
   4f3b4:	mov	w23, #0x0                   	// #0
   4f3b8:	ldr	x1, [sp, #104]
   4f3bc:	str	w2, [x1, #8]
   4f3c0:	ldr	w1, [x0]
   4f3c4:	orr	w1, w1, #0x20
   4f3c8:	str	w1, [x0]
   4f3cc:	b	4e688 <mpfr_yn@@Base+0x7d8>
   4f3d0:	mov	x1, x24
   4f3d4:	mov	x0, x24
   4f3d8:	mov	w2, #0x0                   	// #0
   4f3dc:	bl	bd70 <mpfr_neg@plt>
   4f3e0:	b	4e804 <mpfr_yn@@Base+0x954>
   4f3e4:	ldr	w0, [sp, #208]
   4f3e8:	cbnz	w0, 4f604 <mpfr_yn@@Base+0x1754>
   4f3ec:	ldr	x1, [sp, #232]
   4f3f0:	mov	x0, #0xfffffffffffffeff    	// #-257
   4f3f4:	movk	x0, #0x7fff, lsl #48
   4f3f8:	sub	x0, x0, x28
   4f3fc:	cmp	x0, x1
   4f400:	b.lt	4f5ec <mpfr_yn@@Base+0x173c>  // b.tstop
   4f404:	add	x28, x28, x1
   4f408:	add	x0, x28, x28, lsr #63
   4f40c:	asr	x0, x0, #1
   4f410:	str	x0, [sp, #232]
   4f414:	b	4e778 <mpfr_yn@@Base+0x8c8>
   4f418:	mov	x4, #0x3                   	// #3
   4f41c:	b	4e408 <mpfr_yn@@Base+0x558>
   4f420:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4f424:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4f428:	add	x2, x2, #0x350
   4f42c:	add	x0, x0, #0x330
   4f430:	mov	w1, #0x5d                  	// #93
   4f434:	bl	cb40 <mpfr_assert_fail@plt>
   4f438:	ldr	w2, [sp, #168]
   4f43c:	mov	x1, x26
   4f440:	ldr	x0, [sp, #104]
   4f444:	bl	bd70 <mpfr_neg@plt>
   4f448:	mov	w23, w0
   4f44c:	b	4edb0 <mpfr_yn@@Base+0xf00>
   4f450:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4f454:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4f458:	add	x2, x2, #0x260
   4f45c:	add	x0, x0, #0x330
   4f460:	mov	w1, #0x92                  	// #146
   4f464:	bl	cb40 <mpfr_assert_fail@plt>
   4f468:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4f46c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4f470:	add	x2, x2, #0x338
   4f474:	add	x0, x0, #0x330
   4f478:	mov	w1, #0x167                 	// #359
   4f47c:	bl	cb40 <mpfr_assert_fail@plt>
   4f480:	ldr	w0, [x27, #8]
   4f484:	cmp	w0, #0x0
   4f488:	b.le	4f4cc <mpfr_yn@@Base+0x161c>
   4f48c:	ldr	x2, [sp, #104]
   4f490:	mov	w1, #0x1                   	// #1
   4f494:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4f498:	mov	w23, #0x0                   	// #0
   4f49c:	str	w1, [x2, #8]
   4f4a0:	str	x0, [x2, #16]
   4f4a4:	b	4e688 <mpfr_yn@@Base+0x7d8>
   4f4a8:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4f4ac:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4f4b0:	add	x2, x2, #0x1b8
   4f4b4:	add	x0, x0, #0x330
   4f4b8:	mov	w1, #0x14c                 	// #332
   4f4bc:	bl	cb40 <mpfr_assert_fail@plt>
   4f4c0:	ldr	x0, [sp, #104]
   4f4c4:	ldr	x0, [x0]
   4f4c8:	b	4e000 <mpfr_yn@@Base+0x150>
   4f4cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4f4d0:	ldr	x2, [x0, #2576]
   4f4d4:	add	x0, x0, #0xa10
   4f4d8:	blr	x2
   4f4dc:	mrs	x1, tpidr_el0
   4f4e0:	ldr	x2, [sp, #104]
   4f4e4:	add	x0, x1, x0
   4f4e8:	mov	x1, #0x2                   	// #2
   4f4ec:	mov	w23, #0x0                   	// #0
   4f4f0:	movk	x1, #0x8000, lsl #48
   4f4f4:	str	x1, [x2, #16]
   4f4f8:	ldr	w1, [x0]
   4f4fc:	orr	w1, w1, #0x4
   4f500:	str	w1, [x0]
   4f504:	b	4e688 <mpfr_yn@@Base+0x7d8>
   4f508:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   4f50c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4f510:	add	x2, x2, #0x1b8
   4f514:	add	x0, x0, #0x1d8
   4f518:	mov	w1, #0x36                  	// #54
   4f51c:	bl	cb40 <mpfr_assert_fail@plt>
   4f520:	ldr	x0, [sp, #104]
   4f524:	ldr	x0, [x0]
   4f528:	b	4e710 <mpfr_yn@@Base+0x860>
   4f52c:	mov	x1, x20
   4f530:	mov	x0, x21
   4f534:	bl	ca60 <mpfr_equal_p@plt>
   4f538:	cbz	w0, 4f334 <mpfr_yn@@Base+0x1484>
   4f53c:	ldr	w2, [sp, #168]
   4f540:	mov	x1, x20
   4f544:	ldr	w3, [sp, #456]
   4f548:	ldr	x0, [sp, #104]
   4f54c:	bl	c6a0 <mpfr_set4@plt>
   4f550:	mov	x0, x21
   4f554:	bl	c070 <mpfr_clear@plt>
   4f558:	mov	x0, x20
   4f55c:	bl	c070 <mpfr_clear@plt>
   4f560:	mov	x0, x22
   4f564:	bl	c070 <mpfr_clear@plt>
   4f568:	mov	x0, x25
   4f56c:	bl	c070 <mpfr_clear@plt>
   4f570:	b	4e60c <mpfr_yn@@Base+0x75c>
   4f574:	ldr	w2, [sp, #168]
   4f578:	mov	x1, x25
   4f57c:	ldr	w3, [sp, #520]
   4f580:	ldr	x0, [sp, #104]
   4f584:	bl	c6a0 <mpfr_set4@plt>
   4f588:	mov	w23, w0
   4f58c:	mov	x0, x25
   4f590:	bl	c070 <mpfr_clear@plt>
   4f594:	b	4e60c <mpfr_yn@@Base+0x75c>
   4f598:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   4f59c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4f5a0:	add	x2, x2, #0xf80
   4f5a4:	add	x0, x0, #0x330
   4f5a8:	mov	w1, #0x196                 	// #406
   4f5ac:	bl	cb40 <mpfr_assert_fail@plt>
   4f5b0:	mov	x0, x25
   4f5b4:	bl	c070 <mpfr_clear@plt>
   4f5b8:	ldp	w1, w3, [sp, #168]
   4f5bc:	str	w3, [x24]
   4f5c0:	ldr	x3, [sp, #184]
   4f5c4:	str	x3, [x21]
   4f5c8:	ldr	x0, [sp, #104]
   4f5cc:	mov	w2, #0xffffffff            	// #-1
   4f5d0:	ldr	x3, [sp, #192]
   4f5d4:	str	x3, [x20]
   4f5d8:	bl	bf40 <mpfr_overflow@plt>
   4f5dc:	mov	w23, w0
   4f5e0:	ldp	x19, x20, [sp, #16]
   4f5e4:	ldp	x25, x26, [sp, #64]
   4f5e8:	b	4e688 <mpfr_yn@@Base+0x7d8>
   4f5ec:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   4f5f0:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   4f5f4:	add	x2, x2, #0x610
   4f5f8:	add	x0, x0, #0x1d8
   4f5fc:	mov	w1, #0x106                 	// #262
   4f600:	bl	cb40 <mpfr_assert_fail@plt>
   4f604:	mov	x0, x26
   4f608:	ldr	x27, [sp, #128]
   4f60c:	ldr	x21, [sp, #144]
   4f610:	ldr	x28, [sp, #160]
   4f614:	bl	c070 <mpfr_clear@plt>
   4f618:	b	4dfc8 <mpfr_yn@@Base+0x118>
   4f61c:	nop

000000000004f620 <mpfr_y0@@Base>:
   4f620:	mov	w3, w2
   4f624:	mov	x2, x1
   4f628:	mov	x1, #0x0                   	// #0
   4f62c:	b	c5c0 <mpfr_yn@plt>

000000000004f630 <mpfr_y1@@Base>:
   4f630:	mov	w3, w2
   4f634:	mov	x2, x1
   4f638:	mov	x1, #0x1                   	// #1
   4f63c:	b	c5c0 <mpfr_yn@plt>
   4f640:	stp	x29, x30, [sp, #-176]!
   4f644:	mov	x29, sp
   4f648:	stp	x21, x22, [sp, #32]
   4f64c:	mov	x21, x3
   4f650:	mov	x22, x1
   4f654:	stp	x27, x28, [sp, #80]
   4f658:	mov	x27, x4
   4f65c:	ldr	w28, [x3, #8]
   4f660:	ldr	x3, [x3, #16]
   4f664:	stp	x25, x26, [sp, #64]
   4f668:	mov	x25, x0
   4f66c:	str	w5, [sp, #108]
   4f670:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4f674:	cmp	x3, x0
   4f678:	b.le	4f9f0 <mpfr_y1@@Base+0x3c0>
   4f67c:	ldr	x1, [x4, #16]
   4f680:	cmp	x1, x0
   4f684:	b.le	4fa04 <mpfr_y1@@Base+0x3d4>
   4f688:	stp	x23, x24, [sp, #48]
   4f68c:	add	x23, sp, #0x80
   4f690:	mov	w26, w2
   4f694:	mov	x0, x23
   4f698:	stp	x19, x20, [sp, #16]
   4f69c:	bl	bf90 <mpfr_mpz_init@plt>
   4f6a0:	add	x19, sp, #0x90
   4f6a4:	add	x20, sp, #0xa0
   4f6a8:	mov	x0, x19
   4f6ac:	bl	bf90 <mpfr_mpz_init@plt>
   4f6b0:	mov	x0, x20
   4f6b4:	bl	bf90 <mpfr_mpz_init@plt>
   4f6b8:	mov	x1, x21
   4f6bc:	mov	x0, x23
   4f6c0:	bl	cac0 <mpfr_get_z_2exp@plt>
   4f6c4:	mov	x24, x0
   4f6c8:	mov	x1, x27
   4f6cc:	mov	x0, x19
   4f6d0:	bl	cac0 <mpfr_get_z_2exp@plt>
   4f6d4:	mov	x21, x0
   4f6d8:	ldr	w1, [x27, #8]
   4f6dc:	mov	x3, #0xffffffffffffffff    	// #-1
   4f6e0:	ldr	w2, [sp, #132]
   4f6e4:	mov	x0, x19
   4f6e8:	cmp	w1, w28
   4f6ec:	ldr	w1, [sp, #148]
   4f6f0:	cneg	x3, x3, eq  // eq = none
   4f6f4:	cmp	w2, #0x0
   4f6f8:	str	x3, [sp, #112]
   4f6fc:	cneg	w3, w2, lt  // lt = tstop
   4f700:	cmp	w1, #0x0
   4f704:	str	w3, [sp, #132]
   4f708:	cneg	w2, w1, lt  // lt = tstop
   4f70c:	mov	x1, #0x0                   	// #0
   4f710:	str	w2, [sp, #148]
   4f714:	bl	ba90 <__gmpz_scan1@plt>
   4f718:	mov	x2, x0
   4f71c:	add	x21, x21, x2
   4f720:	mov	x1, x19
   4f724:	mov	x0, x19
   4f728:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4f72c:	cmp	x24, x21
   4f730:	b.gt	4f838 <mpfr_y1@@Base+0x208>
   4f734:	mov	w1, #0x2                   	// #2
   4f738:	mov	x0, x23
   4f73c:	bl	cb60 <__gmpz_sizeinbase@plt>
   4f740:	add	x27, x0, x24
   4f744:	mov	w1, #0x2                   	// #2
   4f748:	mov	x0, x19
   4f74c:	bl	cb60 <__gmpz_sizeinbase@plt>
   4f750:	add	x0, x0, x21
   4f754:	cmp	x27, x0
   4f758:	b.ge	4f900 <mpfr_y1@@Base+0x2d0>  // b.tcont
   4f75c:	mov	x1, x23
   4f760:	mov	x0, x20
   4f764:	bl	bfa0 <__gmpz_set@plt>
   4f768:	mov	w0, #0x1                   	// #1
   4f76c:	mov	x1, #0x0                   	// #0
   4f770:	str	w0, [sp, #124]
   4f774:	mov	x0, x23
   4f778:	bl	bcb0 <__gmpz_set_ui@plt>
   4f77c:	str	wzr, [sp, #120]
   4f780:	cbnz	w26, 4f794 <mpfr_y1@@Base+0x164>
   4f784:	mov	x0, x23
   4f788:	mov	x1, #0x0                   	// #0
   4f78c:	bl	bfe0 <__gmpz_tstbit@plt>
   4f790:	str	w0, [sp, #120]
   4f794:	cbz	x22, 4f8cc <mpfr_y1@@Base+0x29c>
   4f798:	mov	x1, x23
   4f79c:	mov	x2, #0x3f                  	// #63
   4f7a0:	mov	x0, x23
   4f7a4:	bl	ba30 <__gmpz_tdiv_r_2exp@plt>
   4f7a8:	mov	x0, x23
   4f7ac:	bl	ba20 <__gmpz_get_si@plt>
   4f7b0:	ldr	w27, [sp, #164]
   4f7b4:	str	x0, [x22]
   4f7b8:	cbz	w27, 4f8d4 <mpfr_y1@@Base+0x2a4>
   4f7bc:	cbz	w26, 4f92c <mpfr_y1@@Base+0x2fc>
   4f7c0:	tbz	w28, #31, 4f7d0 <mpfr_y1@@Base+0x1a0>
   4f7c4:	ldr	w0, [sp, #164]
   4f7c8:	neg	w0, w0
   4f7cc:	str	w0, [sp, #164]
   4f7d0:	ldr	w3, [sp, #108]
   4f7d4:	cmp	x24, x21
   4f7d8:	csel	x2, x24, x21, le
   4f7dc:	mov	x0, x25
   4f7e0:	mov	x1, x20
   4f7e4:	bl	c4f0 <mpfr_set_z_2exp@plt>
   4f7e8:	mov	w27, w0
   4f7ec:	cbz	x22, 4f800 <mpfr_y1@@Base+0x1d0>
   4f7f0:	ldr	x0, [x22]
   4f7f4:	ldr	x1, [sp, #112]
   4f7f8:	mul	x0, x0, x1
   4f7fc:	str	x0, [x22]
   4f800:	mov	x0, x23
   4f804:	bl	c170 <mpfr_mpz_clear@plt>
   4f808:	mov	x0, x19
   4f80c:	bl	c170 <mpfr_mpz_clear@plt>
   4f810:	mov	x0, x20
   4f814:	bl	c170 <mpfr_mpz_clear@plt>
   4f818:	ldp	x19, x20, [sp, #16]
   4f81c:	ldp	x23, x24, [sp, #48]
   4f820:	mov	w0, w27
   4f824:	ldp	x21, x22, [sp, #32]
   4f828:	ldp	x25, x26, [sp, #64]
   4f82c:	ldp	x27, x28, [sp, #80]
   4f830:	ldp	x29, x30, [sp], #176
   4f834:	ret
   4f838:	sub	x27, x24, x21
   4f83c:	cbz	x22, 4f988 <mpfr_y1@@Base+0x358>
   4f840:	mov	x2, #0x3f                  	// #63
   4f844:	mov	x1, x19
   4f848:	mov	x0, x19
   4f84c:	bl	c200 <__gmpz_mul_2exp@plt>
   4f850:	mov	x0, x20
   4f854:	mov	x1, #0x2                   	// #2
   4f858:	bl	bcb0 <__gmpz_set_ui@plt>
   4f85c:	mov	x3, x19
   4f860:	mov	x2, x27
   4f864:	mov	x1, x20
   4f868:	mov	x0, x20
   4f86c:	bl	cbc0 <__gmpz_powm_ui@plt>
   4f870:	mov	x2, x23
   4f874:	mov	x1, x20
   4f878:	mov	x0, x20
   4f87c:	bl	bff0 <__gmpz_mul@plt>
   4f880:	mov	x2, x19
   4f884:	mov	x1, x20
   4f888:	mov	x0, x20
   4f88c:	bl	c8a0 <__gmpz_mod@plt>
   4f890:	mov	x1, x19
   4f894:	mov	x0, x19
   4f898:	mov	x2, #0x3f                  	// #63
   4f89c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4f8a0:	mov	x3, x19
   4f8a4:	mov	x2, x20
   4f8a8:	mov	x1, x20
   4f8ac:	mov	x0, x23
   4f8b0:	bl	bad0 <__gmpz_tdiv_qr@plt>
   4f8b4:	str	wzr, [sp, #124]
   4f8b8:	mov	x0, x23
   4f8bc:	bl	ba20 <__gmpz_get_si@plt>
   4f8c0:	str	x0, [x22]
   4f8c4:	and	w0, w0, #0x1
   4f8c8:	str	w0, [sp, #120]
   4f8cc:	ldr	w27, [sp, #164]
   4f8d0:	cbnz	w27, 4f7bc <mpfr_y1@@Base+0x18c>
   4f8d4:	mov	w1, #0x1                   	// #1
   4f8d8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4f8dc:	str	w1, [x25, #8]
   4f8e0:	str	x0, [x25, #16]
   4f8e4:	tbz	w28, #31, 4f7ec <mpfr_y1@@Base+0x1bc>
   4f8e8:	mov	x1, x25
   4f8ec:	mov	x0, x25
   4f8f0:	mov	w2, #0x0                   	// #0
   4f8f4:	mov	w27, #0x0                   	// #0
   4f8f8:	bl	bd70 <mpfr_neg@plt>
   4f8fc:	b	4f7ec <mpfr_y1@@Base+0x1bc>
   4f900:	sub	x2, x21, x24
   4f904:	mov	x1, x19
   4f908:	mov	x0, x19
   4f90c:	str	wzr, [sp, #124]
   4f910:	bl	c200 <__gmpz_mul_2exp@plt>
   4f914:	mov	x3, x19
   4f918:	mov	x2, x23
   4f91c:	mov	x1, x20
   4f920:	mov	x0, x23
   4f924:	bl	bad0 <__gmpz_tdiv_qr@plt>
   4f928:	b	4f77c <mpfr_y1@@Base+0x14c>
   4f92c:	mov	x0, x20
   4f930:	mov	x1, x20
   4f934:	mov	x2, #0x1                   	// #1
   4f938:	bl	c200 <__gmpz_mul_2exp@plt>
   4f93c:	ldr	w0, [sp, #124]
   4f940:	cbz	w0, 4fb08 <mpfr_y1@@Base+0x4d8>
   4f944:	mov	w1, #0x2                   	// #2
   4f948:	mov	x0, x20
   4f94c:	bl	cb60 <__gmpz_sizeinbase@plt>
   4f950:	add	x26, x0, x24
   4f954:	mov	w1, #0x2                   	// #2
   4f958:	mov	x0, x19
   4f95c:	bl	cb60 <__gmpz_sizeinbase@plt>
   4f960:	add	x0, x0, x21
   4f964:	cmp	x26, x0
   4f968:	b.ge	4fb78 <mpfr_y1@@Base+0x548>  // b.tcont
   4f96c:	mov	x1, x20
   4f970:	mov	x0, x20
   4f974:	mov	x2, #0x1                   	// #1
   4f978:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4f97c:	ldr	w0, [sp, #120]
   4f980:	cbnz	w0, 4fb30 <mpfr_y1@@Base+0x500>
   4f984:	b	4f7c0 <mpfr_y1@@Base+0x190>
   4f988:	cbz	w26, 4fa68 <mpfr_y1@@Base+0x438>
   4f98c:	mov	x0, x20
   4f990:	mov	x1, #0x2                   	// #2
   4f994:	bl	bcb0 <__gmpz_set_ui@plt>
   4f998:	mov	x3, x19
   4f99c:	mov	x2, x27
   4f9a0:	mov	x1, x20
   4f9a4:	mov	x0, x20
   4f9a8:	bl	cbc0 <__gmpz_powm_ui@plt>
   4f9ac:	mov	x2, x23
   4f9b0:	mov	x1, x20
   4f9b4:	mov	x0, x20
   4f9b8:	bl	bff0 <__gmpz_mul@plt>
   4f9bc:	mov	x0, x20
   4f9c0:	mov	x2, x19
   4f9c4:	mov	x1, x20
   4f9c8:	bl	c8a0 <__gmpz_mod@plt>
   4f9cc:	ldr	w0, [sp, #164]
   4f9d0:	cbnz	w0, 4f7c0 <mpfr_y1@@Base+0x190>
   4f9d4:	mov	w1, #0x1                   	// #1
   4f9d8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4f9dc:	str	w1, [x25, #8]
   4f9e0:	mov	w27, #0x0                   	// #0
   4f9e4:	str	x0, [x25, #16]
   4f9e8:	tbz	w28, #31, 4f800 <mpfr_y1@@Base+0x1d0>
   4f9ec:	b	4f8e8 <mpfr_y1@@Base+0x2b8>
   4f9f0:	mov	x0, #0x2                   	// #2
   4f9f4:	movk	x0, #0x8000, lsl #48
   4f9f8:	cmp	x3, x0
   4f9fc:	b.eq	4fa1c <mpfr_y1@@Base+0x3ec>  // b.none
   4fa00:	ldr	x1, [x4, #16]
   4fa04:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   4fa08:	add	x1, x1, x0
   4fa0c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4fa10:	cmp	x1, #0x1
   4fa14:	ccmp	x3, x0, #0x4, hi  // hi = pmore
   4fa18:	b.ne	4fb54 <mpfr_y1@@Base+0x524>  // b.any
   4fa1c:	mrs	x1, tpidr_el0
   4fa20:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4fa24:	ldr	x2, [x0, #2576]
   4fa28:	add	x0, x0, #0xa10
   4fa2c:	blr	x2
   4fa30:	add	x0, x1, x0
   4fa34:	mov	x1, #0x2                   	// #2
   4fa38:	movk	x1, #0x8000, lsl #48
   4fa3c:	str	x1, [x25, #16]
   4fa40:	mov	w27, #0x0                   	// #0
   4fa44:	ldr	w1, [x0]
   4fa48:	ldp	x21, x22, [sp, #32]
   4fa4c:	orr	w1, w1, #0x4
   4fa50:	str	w1, [x0]
   4fa54:	mov	w0, w27
   4fa58:	ldp	x25, x26, [sp, #64]
   4fa5c:	ldp	x27, x28, [sp, #80]
   4fa60:	ldp	x29, x30, [sp], #176
   4fa64:	ret
   4fa68:	mov	x2, #0x1                   	// #1
   4fa6c:	mov	x1, x19
   4fa70:	mov	x0, x19
   4fa74:	bl	c200 <__gmpz_mul_2exp@plt>
   4fa78:	mov	x0, x20
   4fa7c:	mov	x1, #0x2                   	// #2
   4fa80:	bl	bcb0 <__gmpz_set_ui@plt>
   4fa84:	mov	x3, x19
   4fa88:	mov	x2, x27
   4fa8c:	mov	x1, x20
   4fa90:	mov	x0, x20
   4fa94:	bl	cbc0 <__gmpz_powm_ui@plt>
   4fa98:	mov	x2, x23
   4fa9c:	mov	x1, x20
   4faa0:	mov	x0, x20
   4faa4:	bl	bff0 <__gmpz_mul@plt>
   4faa8:	mov	x2, x19
   4faac:	mov	x1, x20
   4fab0:	mov	x0, x20
   4fab4:	bl	c8a0 <__gmpz_mod@plt>
   4fab8:	mov	x2, #0x1                   	// #1
   4fabc:	mov	x1, x19
   4fac0:	mov	x0, x19
   4fac4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4fac8:	mov	x1, x19
   4facc:	mov	x0, x20
   4fad0:	bl	bee0 <__gmpz_cmpabs@plt>
   4fad4:	tbnz	w0, #31, 4faec <mpfr_y1@@Base+0x4bc>
   4fad8:	mov	x2, x19
   4fadc:	mov	x1, x20
   4fae0:	mov	x0, x20
   4fae4:	mov	w26, #0x1                   	// #1
   4fae8:	bl	bde0 <__gmpz_sub@plt>
   4faec:	ldr	w0, [sp, #164]
   4faf0:	cbz	w0, 4f9d4 <mpfr_y1@@Base+0x3a4>
   4faf4:	mov	x1, x20
   4faf8:	mov	x0, x20
   4fafc:	mov	x2, #0x1                   	// #1
   4fb00:	str	w26, [sp, #120]
   4fb04:	bl	c200 <__gmpz_mul_2exp@plt>
   4fb08:	mov	x1, x19
   4fb0c:	mov	x0, x20
   4fb10:	bl	bee0 <__gmpz_cmpabs@plt>
   4fb14:	mov	w26, w0
   4fb18:	mov	x1, x20
   4fb1c:	mov	x0, x20
   4fb20:	mov	x2, #0x1                   	// #1
   4fb24:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4fb28:	cmp	w26, #0x0
   4fb2c:	b.le	4fb9c <mpfr_y1@@Base+0x56c>
   4fb30:	mov	x2, x19
   4fb34:	mov	x1, x20
   4fb38:	mov	x0, x20
   4fb3c:	bl	bde0 <__gmpz_sub@plt>
   4fb40:	cbz	x22, 4f7c0 <mpfr_y1@@Base+0x190>
   4fb44:	ldr	x0, [x22]
   4fb48:	add	x0, x0, #0x1
   4fb4c:	str	x0, [x22]
   4fb50:	b	4f7c0 <mpfr_y1@@Base+0x190>
   4fb54:	cbz	x22, 4fb5c <mpfr_y1@@Base+0x52c>
   4fb58:	str	xzr, [x22]
   4fb5c:	ldr	w2, [sp, #108]
   4fb60:	mov	w3, w28
   4fb64:	mov	x1, x21
   4fb68:	mov	x0, x25
   4fb6c:	bl	c6a0 <mpfr_set4@plt>
   4fb70:	mov	w27, w0
   4fb74:	b	4f820 <mpfr_y1@@Base+0x1f0>
   4fb78:	sub	x2, x21, x24
   4fb7c:	mov	x1, x19
   4fb80:	mov	x0, x19
   4fb84:	bl	c200 <__gmpz_mul_2exp@plt>
   4fb88:	mov	x1, x19
   4fb8c:	mov	x0, x20
   4fb90:	bl	bee0 <__gmpz_cmpabs@plt>
   4fb94:	mov	w26, w0
   4fb98:	b	4fb18 <mpfr_y1@@Base+0x4e8>
   4fb9c:	b.ne	4f7c0 <mpfr_y1@@Base+0x190>  // b.any
   4fba0:	b	4f97c <mpfr_y1@@Base+0x34c>
   4fba4:	nop

000000000004fba8 <mpfr_remainder@@Base>:
   4fba8:	mov	x4, x2
   4fbac:	mov	w5, w3
   4fbb0:	mov	w2, #0x0                   	// #0
   4fbb4:	mov	x3, x1
   4fbb8:	mov	x1, #0x0                   	// #0
   4fbbc:	b	4f640 <mpfr_y1@@Base+0x10>

000000000004fbc0 <mpfr_remquo@@Base>:
   4fbc0:	mov	x6, x3
   4fbc4:	mov	w5, w4
   4fbc8:	mov	x3, x2
   4fbcc:	mov	x4, x6
   4fbd0:	mov	w2, #0x0                   	// #0
   4fbd4:	b	4f640 <mpfr_y1@@Base+0x10>

000000000004fbd8 <mpfr_fmod@@Base>:
   4fbd8:	mov	x4, x2
   4fbdc:	mov	w5, w3
   4fbe0:	mov	w2, #0x1                   	// #1
   4fbe4:	mov	x3, x1
   4fbe8:	mov	x1, #0x0                   	// #0
   4fbec:	b	4f640 <mpfr_y1@@Base+0x10>

000000000004fbf0 <mpfr_fmodquo@@Base>:
   4fbf0:	mov	x6, x3
   4fbf4:	mov	w5, w4
   4fbf8:	mov	x3, x2
   4fbfc:	mov	x4, x6
   4fc00:	mov	w2, #0x1                   	// #1
   4fc04:	b	4f640 <mpfr_y1@@Base+0x10>

000000000004fc08 <mpfr_get_patches@@Base>:
   4fc08:	adrp	x0, 5f000 <mpfr_free_pool@@Base+0x3558>
   4fc0c:	add	x0, x0, #0x450
   4fc10:	ret
   4fc14:	nop

000000000004fc18 <mpfr_add_d@@Base>:
   4fc18:	stp	x29, x30, [sp, #-144]!
   4fc1c:	mrs	x4, tpidr_el0
   4fc20:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   4fc24:	mov	x29, sp
   4fc28:	stp	x19, x20, [sp, #16]
   4fc2c:	mov	x19, x0
   4fc30:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4fc34:	ldr	x3, [x0, #2576]
   4fc38:	add	x0, x0, #0xa10
   4fc3c:	blr	x3
   4fc40:	stp	x21, x22, [sp, #32]
   4fc44:	mov	w20, w2
   4fc48:	ldr	w21, [x4, x0]
   4fc4c:	stp	x23, x24, [sp, #48]
   4fc50:	add	x23, x4, x0
   4fc54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4fc58:	ldr	x3, [x0, #2512]
   4fc5c:	add	x0, x0, #0x9d0
   4fc60:	blr	x3
   4fc64:	stp	x25, x26, [sp, #64]
   4fc68:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4fc6c:	mov	x7, #0x35                  	// #53
   4fc70:	stp	x27, x28, [sp, #80]
   4fc74:	add	x28, x4, x0
   4fc78:	mov	w6, #0x1                   	// #1
   4fc7c:	ldr	x25, [x4, x0]
   4fc80:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4fc84:	ldr	x2, [x0, #2544]
   4fc88:	add	x0, x0, #0x9f0
   4fc8c:	blr	x2
   4fc90:	add	x2, sp, #0x68
   4fc94:	add	x27, x4, x0
   4fc98:	add	x22, sp, #0x70
   4fc9c:	mov	x24, x1
   4fca0:	mov	w1, w20
   4fca4:	str	x5, [x28]
   4fca8:	str	x7, [sp, #112]
   4fcac:	str	w6, [sp, #120]
   4fcb0:	str	x2, [sp, #136]
   4fcb4:	ldr	x26, [x4, x0]
   4fcb8:	mov	x0, x22
   4fcbc:	str	x3, [x27]
   4fcc0:	bl	be40 <mpfr_set_d@plt>
   4fcc4:	mov	x1, x24
   4fcc8:	mov	x2, x22
   4fccc:	mov	w3, w20
   4fcd0:	mov	x0, x19
   4fcd4:	str	wzr, [x23]
   4fcd8:	bl	c1a0 <mpfr_add@plt>
   4fcdc:	ldr	w1, [x23]
   4fce0:	ldr	x2, [x19, #16]
   4fce4:	orr	w1, w21, w1
   4fce8:	str	x26, [x27]
   4fcec:	str	w1, [x23]
   4fcf0:	cmp	x26, x2
   4fcf4:	str	x25, [x28]
   4fcf8:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   4fcfc:	b.le	4fd2c <mpfr_add_d@@Base+0x114>
   4fd00:	mov	w1, w0
   4fd04:	mov	w2, w20
   4fd08:	mov	x0, x19
   4fd0c:	bl	cb30 <mpfr_check_range@plt>
   4fd10:	ldp	x19, x20, [sp, #16]
   4fd14:	ldp	x21, x22, [sp, #32]
   4fd18:	ldp	x23, x24, [sp, #48]
   4fd1c:	ldp	x25, x26, [sp, #64]
   4fd20:	ldp	x27, x28, [sp, #80]
   4fd24:	ldp	x29, x30, [sp], #144
   4fd28:	ret
   4fd2c:	cbz	w0, 4fd10 <mpfr_add_d@@Base+0xf8>
   4fd30:	orr	w1, w1, #0x8
   4fd34:	str	w1, [x23]
   4fd38:	ldp	x19, x20, [sp, #16]
   4fd3c:	ldp	x21, x22, [sp, #32]
   4fd40:	ldp	x23, x24, [sp, #48]
   4fd44:	ldp	x25, x26, [sp, #64]
   4fd48:	ldp	x27, x28, [sp, #80]
   4fd4c:	ldp	x29, x30, [sp], #144
   4fd50:	ret
   4fd54:	nop

000000000004fd58 <mpfr_sub_d@@Base>:
   4fd58:	stp	x29, x30, [sp, #-144]!
   4fd5c:	mrs	x4, tpidr_el0
   4fd60:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   4fd64:	mov	x29, sp
   4fd68:	stp	x19, x20, [sp, #16]
   4fd6c:	mov	x19, x0
   4fd70:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4fd74:	ldr	x3, [x0, #2576]
   4fd78:	add	x0, x0, #0xa10
   4fd7c:	blr	x3
   4fd80:	stp	x21, x22, [sp, #32]
   4fd84:	mov	w20, w2
   4fd88:	ldr	w21, [x4, x0]
   4fd8c:	stp	x23, x24, [sp, #48]
   4fd90:	add	x23, x4, x0
   4fd94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4fd98:	ldr	x3, [x0, #2512]
   4fd9c:	add	x0, x0, #0x9d0
   4fda0:	blr	x3
   4fda4:	stp	x25, x26, [sp, #64]
   4fda8:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4fdac:	mov	x7, #0x35                  	// #53
   4fdb0:	stp	x27, x28, [sp, #80]
   4fdb4:	add	x28, x4, x0
   4fdb8:	mov	w6, #0x1                   	// #1
   4fdbc:	ldr	x25, [x4, x0]
   4fdc0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4fdc4:	ldr	x2, [x0, #2544]
   4fdc8:	add	x0, x0, #0x9f0
   4fdcc:	blr	x2
   4fdd0:	add	x2, sp, #0x68
   4fdd4:	add	x27, x4, x0
   4fdd8:	add	x22, sp, #0x70
   4fddc:	mov	x24, x1
   4fde0:	mov	w1, w20
   4fde4:	str	x5, [x28]
   4fde8:	str	x7, [sp, #112]
   4fdec:	str	w6, [sp, #120]
   4fdf0:	str	x2, [sp, #136]
   4fdf4:	ldr	x26, [x4, x0]
   4fdf8:	mov	x0, x22
   4fdfc:	str	x3, [x27]
   4fe00:	bl	be40 <mpfr_set_d@plt>
   4fe04:	mov	x1, x24
   4fe08:	mov	x2, x22
   4fe0c:	mov	w3, w20
   4fe10:	mov	x0, x19
   4fe14:	str	wzr, [x23]
   4fe18:	bl	bb70 <mpfr_sub@plt>
   4fe1c:	ldr	w1, [x23]
   4fe20:	ldr	x2, [x19, #16]
   4fe24:	orr	w1, w21, w1
   4fe28:	str	x26, [x27]
   4fe2c:	str	w1, [x23]
   4fe30:	cmp	x26, x2
   4fe34:	str	x25, [x28]
   4fe38:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   4fe3c:	b.le	4fe6c <mpfr_sub_d@@Base+0x114>
   4fe40:	mov	w1, w0
   4fe44:	mov	w2, w20
   4fe48:	mov	x0, x19
   4fe4c:	bl	cb30 <mpfr_check_range@plt>
   4fe50:	ldp	x19, x20, [sp, #16]
   4fe54:	ldp	x21, x22, [sp, #32]
   4fe58:	ldp	x23, x24, [sp, #48]
   4fe5c:	ldp	x25, x26, [sp, #64]
   4fe60:	ldp	x27, x28, [sp, #80]
   4fe64:	ldp	x29, x30, [sp], #144
   4fe68:	ret
   4fe6c:	cbz	w0, 4fe50 <mpfr_sub_d@@Base+0xf8>
   4fe70:	orr	w1, w1, #0x8
   4fe74:	str	w1, [x23]
   4fe78:	ldp	x19, x20, [sp, #16]
   4fe7c:	ldp	x21, x22, [sp, #32]
   4fe80:	ldp	x23, x24, [sp, #48]
   4fe84:	ldp	x25, x26, [sp, #64]
   4fe88:	ldp	x27, x28, [sp, #80]
   4fe8c:	ldp	x29, x30, [sp], #144
   4fe90:	ret
   4fe94:	nop

000000000004fe98 <mpfr_d_sub@@Base>:
   4fe98:	stp	x29, x30, [sp, #-144]!
   4fe9c:	mrs	x4, tpidr_el0
   4fea0:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   4fea4:	mov	x29, sp
   4fea8:	stp	x19, x20, [sp, #16]
   4feac:	mov	x19, x0
   4feb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4feb4:	ldr	x3, [x0, #2576]
   4feb8:	add	x0, x0, #0xa10
   4febc:	blr	x3
   4fec0:	stp	x21, x22, [sp, #32]
   4fec4:	mov	w20, w2
   4fec8:	ldr	w21, [x4, x0]
   4fecc:	stp	x23, x24, [sp, #48]
   4fed0:	add	x23, x4, x0
   4fed4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4fed8:	ldr	x3, [x0, #2512]
   4fedc:	add	x0, x0, #0x9d0
   4fee0:	blr	x3
   4fee4:	stp	x25, x26, [sp, #64]
   4fee8:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4feec:	mov	x7, #0x35                  	// #53
   4fef0:	stp	x27, x28, [sp, #80]
   4fef4:	add	x28, x4, x0
   4fef8:	mov	w6, #0x1                   	// #1
   4fefc:	ldr	x25, [x4, x0]
   4ff00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4ff04:	ldr	x2, [x0, #2544]
   4ff08:	add	x0, x0, #0x9f0
   4ff0c:	blr	x2
   4ff10:	add	x2, sp, #0x68
   4ff14:	add	x27, x4, x0
   4ff18:	add	x22, sp, #0x70
   4ff1c:	mov	x24, x1
   4ff20:	mov	w1, w20
   4ff24:	str	x5, [x28]
   4ff28:	str	x7, [sp, #112]
   4ff2c:	str	w6, [sp, #120]
   4ff30:	str	x2, [sp, #136]
   4ff34:	ldr	x26, [x4, x0]
   4ff38:	mov	x0, x22
   4ff3c:	str	x3, [x27]
   4ff40:	bl	be40 <mpfr_set_d@plt>
   4ff44:	mov	x2, x24
   4ff48:	mov	x1, x22
   4ff4c:	mov	w3, w20
   4ff50:	mov	x0, x19
   4ff54:	str	wzr, [x23]
   4ff58:	bl	bb70 <mpfr_sub@plt>
   4ff5c:	ldr	w1, [x23]
   4ff60:	ldr	x2, [x19, #16]
   4ff64:	orr	w1, w21, w1
   4ff68:	str	x26, [x27]
   4ff6c:	str	w1, [x23]
   4ff70:	cmp	x26, x2
   4ff74:	str	x25, [x28]
   4ff78:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   4ff7c:	b.le	4ffac <mpfr_d_sub@@Base+0x114>
   4ff80:	mov	w1, w0
   4ff84:	mov	w2, w20
   4ff88:	mov	x0, x19
   4ff8c:	bl	cb30 <mpfr_check_range@plt>
   4ff90:	ldp	x19, x20, [sp, #16]
   4ff94:	ldp	x21, x22, [sp, #32]
   4ff98:	ldp	x23, x24, [sp, #48]
   4ff9c:	ldp	x25, x26, [sp, #64]
   4ffa0:	ldp	x27, x28, [sp, #80]
   4ffa4:	ldp	x29, x30, [sp], #144
   4ffa8:	ret
   4ffac:	cbz	w0, 4ff90 <mpfr_d_sub@@Base+0xf8>
   4ffb0:	orr	w1, w1, #0x8
   4ffb4:	str	w1, [x23]
   4ffb8:	ldp	x19, x20, [sp, #16]
   4ffbc:	ldp	x21, x22, [sp, #32]
   4ffc0:	ldp	x23, x24, [sp, #48]
   4ffc4:	ldp	x25, x26, [sp, #64]
   4ffc8:	ldp	x27, x28, [sp, #80]
   4ffcc:	ldp	x29, x30, [sp], #144
   4ffd0:	ret
   4ffd4:	nop

000000000004ffd8 <mpfr_mul_d@@Base>:
   4ffd8:	stp	x29, x30, [sp, #-144]!
   4ffdc:	mrs	x4, tpidr_el0
   4ffe0:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   4ffe4:	mov	x29, sp
   4ffe8:	stp	x19, x20, [sp, #16]
   4ffec:	mov	x19, x0
   4fff0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   4fff4:	ldr	x3, [x0, #2576]
   4fff8:	add	x0, x0, #0xa10
   4fffc:	blr	x3
   50000:	stp	x21, x22, [sp, #32]
   50004:	mov	w20, w2
   50008:	ldr	w21, [x4, x0]
   5000c:	stp	x23, x24, [sp, #48]
   50010:	add	x23, x4, x0
   50014:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50018:	ldr	x3, [x0, #2512]
   5001c:	add	x0, x0, #0x9d0
   50020:	blr	x3
   50024:	stp	x25, x26, [sp, #64]
   50028:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   5002c:	mov	x7, #0x35                  	// #53
   50030:	stp	x27, x28, [sp, #80]
   50034:	add	x28, x4, x0
   50038:	mov	w6, #0x1                   	// #1
   5003c:	ldr	x25, [x4, x0]
   50040:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50044:	ldr	x2, [x0, #2544]
   50048:	add	x0, x0, #0x9f0
   5004c:	blr	x2
   50050:	add	x2, sp, #0x68
   50054:	add	x27, x4, x0
   50058:	add	x22, sp, #0x70
   5005c:	mov	x24, x1
   50060:	mov	w1, w20
   50064:	str	x5, [x28]
   50068:	str	x7, [sp, #112]
   5006c:	str	w6, [sp, #120]
   50070:	str	x2, [sp, #136]
   50074:	ldr	x26, [x4, x0]
   50078:	mov	x0, x22
   5007c:	str	x3, [x27]
   50080:	bl	be40 <mpfr_set_d@plt>
   50084:	mov	x1, x24
   50088:	mov	x2, x22
   5008c:	mov	w3, w20
   50090:	mov	x0, x19
   50094:	str	wzr, [x23]
   50098:	bl	bd50 <mpfr_mul@plt>
   5009c:	ldr	w1, [x23]
   500a0:	ldr	x2, [x19, #16]
   500a4:	orr	w1, w21, w1
   500a8:	str	x26, [x27]
   500ac:	str	w1, [x23]
   500b0:	cmp	x26, x2
   500b4:	str	x25, [x28]
   500b8:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   500bc:	b.le	500ec <mpfr_mul_d@@Base+0x114>
   500c0:	mov	w1, w0
   500c4:	mov	w2, w20
   500c8:	mov	x0, x19
   500cc:	bl	cb30 <mpfr_check_range@plt>
   500d0:	ldp	x19, x20, [sp, #16]
   500d4:	ldp	x21, x22, [sp, #32]
   500d8:	ldp	x23, x24, [sp, #48]
   500dc:	ldp	x25, x26, [sp, #64]
   500e0:	ldp	x27, x28, [sp, #80]
   500e4:	ldp	x29, x30, [sp], #144
   500e8:	ret
   500ec:	cbz	w0, 500d0 <mpfr_mul_d@@Base+0xf8>
   500f0:	orr	w1, w1, #0x8
   500f4:	str	w1, [x23]
   500f8:	ldp	x19, x20, [sp, #16]
   500fc:	ldp	x21, x22, [sp, #32]
   50100:	ldp	x23, x24, [sp, #48]
   50104:	ldp	x25, x26, [sp, #64]
   50108:	ldp	x27, x28, [sp, #80]
   5010c:	ldp	x29, x30, [sp], #144
   50110:	ret
   50114:	nop

0000000000050118 <mpfr_div_d@@Base>:
   50118:	stp	x29, x30, [sp, #-144]!
   5011c:	mrs	x4, tpidr_el0
   50120:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   50124:	mov	x29, sp
   50128:	stp	x19, x20, [sp, #16]
   5012c:	mov	x19, x0
   50130:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50134:	ldr	x3, [x0, #2576]
   50138:	add	x0, x0, #0xa10
   5013c:	blr	x3
   50140:	stp	x21, x22, [sp, #32]
   50144:	mov	w20, w2
   50148:	ldr	w21, [x4, x0]
   5014c:	stp	x23, x24, [sp, #48]
   50150:	add	x23, x4, x0
   50154:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50158:	ldr	x3, [x0, #2512]
   5015c:	add	x0, x0, #0x9d0
   50160:	blr	x3
   50164:	stp	x25, x26, [sp, #64]
   50168:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   5016c:	mov	x7, #0x35                  	// #53
   50170:	stp	x27, x28, [sp, #80]
   50174:	add	x28, x4, x0
   50178:	mov	w6, #0x1                   	// #1
   5017c:	ldr	x25, [x4, x0]
   50180:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50184:	ldr	x2, [x0, #2544]
   50188:	add	x0, x0, #0x9f0
   5018c:	blr	x2
   50190:	add	x2, sp, #0x68
   50194:	add	x27, x4, x0
   50198:	add	x22, sp, #0x70
   5019c:	mov	x24, x1
   501a0:	mov	w1, w20
   501a4:	str	x5, [x28]
   501a8:	str	x7, [sp, #112]
   501ac:	str	w6, [sp, #120]
   501b0:	str	x2, [sp, #136]
   501b4:	ldr	x26, [x4, x0]
   501b8:	mov	x0, x22
   501bc:	str	x3, [x27]
   501c0:	bl	be40 <mpfr_set_d@plt>
   501c4:	mov	x1, x24
   501c8:	mov	x2, x22
   501cc:	mov	w3, w20
   501d0:	mov	x0, x19
   501d4:	str	wzr, [x23]
   501d8:	bl	c620 <mpfr_div@plt>
   501dc:	ldr	w1, [x23]
   501e0:	ldr	x2, [x19, #16]
   501e4:	orr	w1, w21, w1
   501e8:	str	x26, [x27]
   501ec:	str	w1, [x23]
   501f0:	cmp	x26, x2
   501f4:	str	x25, [x28]
   501f8:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   501fc:	b.le	5022c <mpfr_div_d@@Base+0x114>
   50200:	mov	w1, w0
   50204:	mov	w2, w20
   50208:	mov	x0, x19
   5020c:	bl	cb30 <mpfr_check_range@plt>
   50210:	ldp	x19, x20, [sp, #16]
   50214:	ldp	x21, x22, [sp, #32]
   50218:	ldp	x23, x24, [sp, #48]
   5021c:	ldp	x25, x26, [sp, #64]
   50220:	ldp	x27, x28, [sp, #80]
   50224:	ldp	x29, x30, [sp], #144
   50228:	ret
   5022c:	cbz	w0, 50210 <mpfr_div_d@@Base+0xf8>
   50230:	orr	w1, w1, #0x8
   50234:	str	w1, [x23]
   50238:	ldp	x19, x20, [sp, #16]
   5023c:	ldp	x21, x22, [sp, #32]
   50240:	ldp	x23, x24, [sp, #48]
   50244:	ldp	x25, x26, [sp, #64]
   50248:	ldp	x27, x28, [sp, #80]
   5024c:	ldp	x29, x30, [sp], #144
   50250:	ret
   50254:	nop

0000000000050258 <mpfr_d_div@@Base>:
   50258:	stp	x29, x30, [sp, #-144]!
   5025c:	mrs	x4, tpidr_el0
   50260:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   50264:	mov	x29, sp
   50268:	stp	x19, x20, [sp, #16]
   5026c:	mov	x19, x0
   50270:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50274:	ldr	x3, [x0, #2576]
   50278:	add	x0, x0, #0xa10
   5027c:	blr	x3
   50280:	stp	x21, x22, [sp, #32]
   50284:	mov	w20, w2
   50288:	ldr	w21, [x4, x0]
   5028c:	stp	x23, x24, [sp, #48]
   50290:	add	x23, x4, x0
   50294:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50298:	ldr	x3, [x0, #2512]
   5029c:	add	x0, x0, #0x9d0
   502a0:	blr	x3
   502a4:	stp	x25, x26, [sp, #64]
   502a8:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   502ac:	mov	x7, #0x35                  	// #53
   502b0:	stp	x27, x28, [sp, #80]
   502b4:	add	x28, x4, x0
   502b8:	mov	w6, #0x1                   	// #1
   502bc:	ldr	x25, [x4, x0]
   502c0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   502c4:	ldr	x2, [x0, #2544]
   502c8:	add	x0, x0, #0x9f0
   502cc:	blr	x2
   502d0:	add	x2, sp, #0x68
   502d4:	add	x27, x4, x0
   502d8:	add	x22, sp, #0x70
   502dc:	mov	x24, x1
   502e0:	mov	w1, w20
   502e4:	str	x5, [x28]
   502e8:	str	x7, [sp, #112]
   502ec:	str	w6, [sp, #120]
   502f0:	str	x2, [sp, #136]
   502f4:	ldr	x26, [x4, x0]
   502f8:	mov	x0, x22
   502fc:	str	x3, [x27]
   50300:	bl	be40 <mpfr_set_d@plt>
   50304:	mov	x2, x24
   50308:	mov	x1, x22
   5030c:	mov	w3, w20
   50310:	mov	x0, x19
   50314:	str	wzr, [x23]
   50318:	bl	c620 <mpfr_div@plt>
   5031c:	ldr	w1, [x23]
   50320:	ldr	x2, [x19, #16]
   50324:	orr	w1, w21, w1
   50328:	str	x26, [x27]
   5032c:	str	w1, [x23]
   50330:	cmp	x26, x2
   50334:	str	x25, [x28]
   50338:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   5033c:	b.le	5036c <mpfr_d_div@@Base+0x114>
   50340:	mov	w1, w0
   50344:	mov	w2, w20
   50348:	mov	x0, x19
   5034c:	bl	cb30 <mpfr_check_range@plt>
   50350:	ldp	x19, x20, [sp, #16]
   50354:	ldp	x21, x22, [sp, #32]
   50358:	ldp	x23, x24, [sp, #48]
   5035c:	ldp	x25, x26, [sp, #64]
   50360:	ldp	x27, x28, [sp, #80]
   50364:	ldp	x29, x30, [sp], #144
   50368:	ret
   5036c:	cbz	w0, 50350 <mpfr_d_div@@Base+0xf8>
   50370:	orr	w1, w1, #0x8
   50374:	str	w1, [x23]
   50378:	ldp	x19, x20, [sp, #16]
   5037c:	ldp	x21, x22, [sp, #32]
   50380:	ldp	x23, x24, [sp, #48]
   50384:	ldp	x25, x26, [sp, #64]
   50388:	ldp	x27, x28, [sp, #80]
   5038c:	ldp	x29, x30, [sp], #144
   50390:	ret
   50394:	nop
   50398:	stp	x29, x30, [sp, #-272]!
   5039c:	mov	x29, sp
   503a0:	str	x0, [sp, #136]
   503a4:	ldr	x0, [x0]
   503a8:	stp	x19, x20, [sp, #16]
   503ac:	stp	x21, x22, [sp, #32]
   503b0:	cmp	x0, #0x1
   503b4:	stp	x23, x24, [sp, #48]
   503b8:	stp	x25, x26, [sp, #64]
   503bc:	stp	x27, x28, [sp, #80]
   503c0:	str	x1, [sp, #112]
   503c4:	str	x0, [sp, #120]
   503c8:	str	w2, [sp, #132]
   503cc:	b.eq	5068c <mpfr_d_div@@Base+0x434>  // b.none
   503d0:	b.le	50694 <mpfr_d_div@@Base+0x43c>
   503d4:	mov	x1, x0
   503d8:	sub	x0, x0, #0x1
   503dc:	clz	x0, x0
   503e0:	mov	w22, #0x40                  	// #64
   503e4:	sub	w22, w22, w0
   503e8:	add	x22, x1, w22, sxtw
   503ec:	add	x22, x22, #0x4
   503f0:	add	x20, sp, #0x90
   503f4:	mov	x1, x22
   503f8:	mov	x0, x20
   503fc:	add	x24, sp, #0xb0
   50400:	bl	ca80 <mpfr_init2@plt>
   50404:	mov	x1, x22
   50408:	mov	x0, x24
   5040c:	bl	ca80 <mpfr_init2@plt>
   50410:	add	x28, sp, #0xd0
   50414:	mov	x0, #0x40                  	// #64
   50418:	mov	x1, x22
   5041c:	add	x21, sp, #0xf0
   50420:	str	x0, [sp, #104]
   50424:	mov	x0, x28
   50428:	bl	ca80 <mpfr_init2@plt>
   5042c:	mov	x1, x22
   50430:	mov	x0, x21
   50434:	bl	ca80 <mpfr_init2@plt>
   50438:	ldr	x23, [sp, #112]
   5043c:	mov	w2, #0x2                   	// #2
   50440:	mov	x0, x24
   50444:	mov	x27, #0x1                   	// #1
   50448:	mov	x1, x23
   5044c:	bl	c400 <mpfr_sqr@plt>
   50450:	ldr	w3, [x23, #8]
   50454:	mov	x1, x23
   50458:	mov	w2, #0x2                   	// #2
   5045c:	mov	x0, x28
   50460:	mov	x19, #0x2                   	// #2
   50464:	mov	x25, #0x0                   	// #0
   50468:	bl	c6a0 <mpfr_set4@plt>
   5046c:	ldr	w3, [x23, #8]
   50470:	mov	x1, x23
   50474:	mov	x0, x20
   50478:	mov	w2, #0x2                   	// #2
   5047c:	bl	c6a0 <mpfr_set4@plt>
   50480:	ldr	x26, [sp, #160]
   50484:	nop
   50488:	mov	x2, x28
   5048c:	mov	x1, x24
   50490:	mov	w3, #0x2                   	// #2
   50494:	mov	x0, x28
   50498:	bl	bd50 <mpfr_mul@plt>
   5049c:	mov	x2, x19
   504a0:	mov	x1, x28
   504a4:	mov	w3, #0x2                   	// #2
   504a8:	mov	x0, x28
   504ac:	bl	cc60 <mpfr_div_ui@plt>
   504b0:	add	x23, x19, #0x1
   504b4:	mov	x2, x19
   504b8:	mov	x1, x28
   504bc:	mov	w3, #0x2                   	// #2
   504c0:	mov	x0, x28
   504c4:	bl	cc60 <mpfr_div_ui@plt>
   504c8:	str	w27, [sp, #100]
   504cc:	mov	x2, x23
   504d0:	mov	x1, x28
   504d4:	mov	w3, #0x2                   	// #2
   504d8:	mov	x0, x28
   504dc:	bl	cc60 <mpfr_div_ui@plt>
   504e0:	str	w19, [sp, #128]
   504e4:	mov	x2, x23
   504e8:	mov	x1, x28
   504ec:	mov	w3, #0x2                   	// #2
   504f0:	mov	x0, x28
   504f4:	bl	cc60 <mpfr_div_ui@plt>
   504f8:	add	x19, x19, #0x2
   504fc:	mov	x0, x27
   50500:	bl	c830 <mpfr_bernoulli_cache@plt>
   50504:	mov	x1, x28
   50508:	mov	x2, x0
   5050c:	mov	w3, #0x0                   	// #0
   50510:	mov	x0, x21
   50514:	bl	c4d0 <mpfr_mul_z@plt>
   50518:	mov	x2, x21
   5051c:	mov	x1, x20
   50520:	mov	x0, x20
   50524:	mov	w3, #0x0                   	// #0
   50528:	bl	c1a0 <mpfr_add@plt>
   5052c:	ldr	x1, [sp, #256]
   50530:	add	x0, x27, x27, lsl #2
   50534:	add	x0, x0, #0x8
   50538:	add	x2, x26, x25
   5053c:	add	x0, x0, x1
   50540:	add	x27, x27, #0x1
   50544:	ldr	x26, [sp, #160]
   50548:	cmp	x0, x2
   5054c:	csel	x0, x0, x2, ge  // ge = tcont
   50550:	subs	x0, x0, x26
   50554:	sub	x2, x26, x22
   50558:	csinv	x0, x0, xzr, pl  // pl = nfrst
   5055c:	cmp	x1, x2
   50560:	add	x25, x0, #0x2
   50564:	b.gt	50488 <mpfr_d_div@@Base+0x230>
   50568:	ldr	w1, [sp, #100]
   5056c:	add	x0, x0, #0x3
   50570:	add	w23, w1, w1, lsl #1
   50574:	ldr	x1, [sp, #112]
   50578:	lsl	w23, w23, #1
   5057c:	ldr	x2, [x1, #16]
   50580:	sub	x23, x2, w23, sxtw
   50584:	sub	x23, x23, #0x4
   50588:	cmp	x23, x25
   5058c:	csel	x23, x0, x23, le
   50590:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   50594:	cmp	x26, x0
   50598:	b.le	505cc <mpfr_d_div@@Base+0x374>
   5059c:	ldr	w0, [sp, #132]
   505a0:	sub	x2, x22, x23
   505a4:	ldr	x1, [sp, #144]
   505a8:	cmp	w0, #0x0
   505ac:	ldr	x0, [sp, #168]
   505b0:	sub	x1, x1, #0x1
   505b4:	ldr	x3, [sp, #120]
   505b8:	asr	x1, x1, #6
   505bc:	add	x1, x1, #0x1
   505c0:	cinc	x3, x3, eq  // eq = none
   505c4:	bl	c370 <mpfr_round_p@plt>
   505c8:	cbnz	w0, 50640 <mpfr_d_div@@Base+0x3e8>
   505cc:	ldr	x1, [sp, #104]
   505d0:	mov	x0, #0xfffffffffffffeff    	// #-257
   505d4:	movk	x0, #0x7fff, lsl #48
   505d8:	sub	x0, x0, x22
   505dc:	cmp	x0, x1
   505e0:	b.lt	50628 <mpfr_d_div@@Base+0x3d0>  // b.tstop
   505e4:	add	x22, x22, x1
   505e8:	mov	x0, x20
   505ec:	mov	x1, x22
   505f0:	add	x2, x22, x22, lsr #63
   505f4:	asr	x2, x2, #1
   505f8:	str	x2, [sp, #104]
   505fc:	bl	bed0 <mpfr_set_prec@plt>
   50600:	mov	x1, x22
   50604:	mov	x0, x24
   50608:	bl	bed0 <mpfr_set_prec@plt>
   5060c:	mov	x1, x22
   50610:	mov	x0, x28
   50614:	bl	bed0 <mpfr_set_prec@plt>
   50618:	mov	x1, x22
   5061c:	mov	x0, x21
   50620:	bl	bed0 <mpfr_set_prec@plt>
   50624:	b	50438 <mpfr_d_div@@Base+0x1e0>
   50628:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   5062c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   50630:	add	x2, x2, #0x358
   50634:	add	x0, x0, #0x390
   50638:	mov	w1, #0x5e                  	// #94
   5063c:	bl	cb40 <mpfr_assert_fail@plt>
   50640:	ldr	w2, [sp, #132]
   50644:	mov	x1, x20
   50648:	ldr	w3, [sp, #152]
   5064c:	ldr	x0, [sp, #136]
   50650:	bl	c6a0 <mpfr_set4@plt>
   50654:	mov	x3, x21
   50658:	mov	x2, x28
   5065c:	mov	x1, x24
   50660:	mov	x0, x20
   50664:	mov	x4, #0x0                   	// #0
   50668:	bl	c1b0 <mpfr_clears@plt>
   5066c:	ldr	w0, [sp, #128]
   50670:	ldp	x19, x20, [sp, #16]
   50674:	ldp	x21, x22, [sp, #32]
   50678:	ldp	x23, x24, [sp, #48]
   5067c:	ldp	x25, x26, [sp, #64]
   50680:	ldp	x27, x28, [sp, #80]
   50684:	ldp	x29, x30, [sp], #272
   50688:	ret
   5068c:	mov	x22, x0
   50690:	b	503ec <mpfr_d_div@@Base+0x194>
   50694:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   50698:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5069c:	add	x2, x2, #0x380
   506a0:	add	x0, x0, #0x390
   506a4:	mov	w1, #0x31                  	// #49
   506a8:	bl	cb40 <mpfr_assert_fail@plt>
   506ac:	nop

00000000000506b0 <mpfr_li2@@Base>:
   506b0:	stp	x29, x30, [sp, #-432]!
   506b4:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   506b8:	mov	x29, sp
   506bc:	str	w2, [sp, #208]
   506c0:	ldr	x2, [x1, #16]
   506c4:	stp	x21, x22, [sp, #32]
   506c8:	str	x1, [sp, #176]
   506cc:	cmp	x2, x3
   506d0:	str	x0, [sp, #192]
   506d4:	b.le	50f3c <mpfr_li2@@Base+0x88c>
   506d8:	ldr	x4, [sp, #192]
   506dc:	ldr	w3, [x1, #8]
   506e0:	ldr	x4, [x4]
   506e4:	str	x4, [sp, #184]
   506e8:	cmp	w3, #0x0
   506ec:	b.le	50e0c <mpfr_li2@@Base+0x75c>
   506f0:	tbnz	x2, #63, 50dd8 <mpfr_li2@@Base+0x728>
   506f4:	mrs	x4, tpidr_el0
   506f8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   506fc:	ldr	x1, [x0, #2576]
   50700:	add	x0, x0, #0xa10
   50704:	blr	x1
   50708:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   5070c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   50710:	str	x4, [sp, #200]
   50714:	ldr	w0, [x4, x0]
   50718:	str	w0, [sp, #212]
   5071c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50720:	ldr	x2, [x0, #2512]
   50724:	add	x0, x0, #0x9d0
   50728:	blr	x2
   5072c:	add	x2, x4, x0
   50730:	ldr	x0, [x4, x0]
   50734:	str	x0, [sp, #216]
   50738:	str	x3, [x2]
   5073c:	ldr	x2, [sp, #184]
   50740:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50744:	ldr	x5, [x0, #2544]
   50748:	add	x0, x0, #0x9f0
   5074c:	blr	x5
   50750:	cmp	x2, #0x1
   50754:	ldr	x2, [x4, x0]
   50758:	str	x1, [x4, x0]
   5075c:	stp	x19, x20, [sp, #16]
   50760:	str	x2, [sp, #224]
   50764:	b.eq	50f70 <mpfr_li2@@Base+0x8c0>  // b.none
   50768:	b.le	525f8 <mpfr_li2@@Base+0x1f48>
   5076c:	ldr	x2, [sp, #184]
   50770:	mov	w0, #0x40                  	// #64
   50774:	stp	x27, x28, [sp, #80]
   50778:	sub	x1, x2, #0x1
   5077c:	clz	x1, x1
   50780:	sub	w0, w0, w1
   50784:	add	x0, x2, w0, sxtw
   50788:	ldr	x19, [sp, #176]
   5078c:	add	x27, x0, #0xd
   50790:	mov	x0, x19
   50794:	bl	c710 <mpfr_sgn@plt>
   50798:	cmp	w0, #0x0
   5079c:	b.le	50e3c <mpfr_li2@@Base+0x78c>
   507a0:	mov	x0, x19
   507a4:	mov	x2, #0xffffffffffffffff    	// #-1
   507a8:	mov	x1, #0x1                   	// #1
   507ac:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   507b0:	cmp	w0, #0x0
   507b4:	b.gt	50e3c <mpfr_li2@@Base+0x78c>
   507b8:	mov	x0, #0x40                  	// #64
   507bc:	add	x20, sp, #0x110
   507c0:	mov	x1, x27
   507c4:	add	x28, sp, #0xf0
   507c8:	stp	x23, x24, [sp, #48]
   507cc:	add	x19, sp, #0x170
   507d0:	stp	x25, x26, [sp, #64]
   507d4:	add	x25, sp, #0x130
   507d8:	add	x26, sp, #0x150
   507dc:	str	x0, [sp, #112]
   507e0:	mov	x0, x20
   507e4:	str	x28, [sp, #232]
   507e8:	bl	ca80 <mpfr_init2@plt>
   507ec:	mov	x0, x28
   507f0:	mov	x1, x27
   507f4:	bl	ca80 <mpfr_init2@plt>
   507f8:	ldr	x2, [sp, #176]
   507fc:	mov	w3, #0x0                   	// #0
   50800:	mov	x1, #0x1                   	// #1
   50804:	mov	x0, x20
   50808:	bl	ca50 <mpfr_ui_sub@plt>
   5080c:	mov	x1, x20
   50810:	mov	x0, x20
   50814:	mov	w2, #0x2                   	// #2
   50818:	bl	c090 <mpfr_log@plt>
   5081c:	ldr	x1, [sp, #288]
   50820:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   50824:	cmp	x1, x0
   50828:	b.eq	50bb0 <mpfr_li2@@Base+0x500>  // b.none
   5082c:	mov	x1, x20
   50830:	mov	x0, x20
   50834:	mov	w2, #0x0                   	// #0
   50838:	bl	bd70 <mpfr_neg@plt>
   5083c:	ldr	x0, [sp, #240]
   50840:	str	x0, [sp, #120]
   50844:	ldr	x1, [sp, #288]
   50848:	str	x1, [sp, #152]
   5084c:	cmp	x0, #0x1
   50850:	b.eq	50cd0 <mpfr_li2@@Base+0x620>  // b.none
   50854:	b.le	50cd8 <mpfr_li2@@Base+0x628>
   50858:	mov	x1, x0
   5085c:	sub	x0, x0, #0x1
   50860:	clz	x0, x0
   50864:	mov	w4, #0x40                  	// #64
   50868:	sub	w4, w4, w0
   5086c:	add	x4, x1, w4, sxtw
   50870:	add	x24, x4, #0x4
   50874:	mov	x0, #0x40                  	// #64
   50878:	mov	x1, x24
   5087c:	str	x0, [sp, #104]
   50880:	mov	x0, x25
   50884:	bl	ca80 <mpfr_init2@plt>
   50888:	mov	x1, x24
   5088c:	mov	x0, x26
   50890:	bl	ca80 <mpfr_init2@plt>
   50894:	add	x23, sp, #0x190
   50898:	mov	x0, x19
   5089c:	mov	x1, x24
   508a0:	bl	ca80 <mpfr_init2@plt>
   508a4:	mov	x1, x24
   508a8:	mov	x0, x23
   508ac:	bl	ca80 <mpfr_init2@plt>
   508b0:	stp	x27, x28, [sp, #160]
   508b4:	mov	x27, x19
   508b8:	mov	x19, x24
   508bc:	nop
   508c0:	mov	x1, x20
   508c4:	mov	x0, x26
   508c8:	mov	w2, #0x2                   	// #2
   508cc:	bl	c400 <mpfr_sqr@plt>
   508d0:	ldr	w3, [sp, #280]
   508d4:	mov	x9, #0xd                   	// #13
   508d8:	mov	x1, x20
   508dc:	mov	w2, #0x2                   	// #2
   508e0:	mov	x0, x27
   508e4:	str	x9, [sp, #136]
   508e8:	mov	x21, #0x1                   	// #1
   508ec:	mov	x22, #0x0                   	// #0
   508f0:	bl	c6a0 <mpfr_set4@plt>
   508f4:	ldr	w3, [sp, #280]
   508f8:	mov	x1, x20
   508fc:	mov	x0, x25
   50900:	mov	w2, #0x2                   	// #2
   50904:	bl	c6a0 <mpfr_set4@plt>
   50908:	str	x20, [sp, #128]
   5090c:	ldr	x9, [sp, #136]
   50910:	mov	x4, x26
   50914:	ldr	x28, [sp, #320]
   50918:	mov	x26, x19
   5091c:	mov	x19, x9
   50920:	mov	x1, x4
   50924:	lsl	x24, x21, #1
   50928:	mov	x2, x27
   5092c:	mov	w3, #0x2                   	// #2
   50930:	mov	x0, x27
   50934:	str	x4, [sp, #144]
   50938:	bl	bd50 <mpfr_mul@plt>
   5093c:	add	x20, x24, #0x1
   50940:	mov	x2, x24
   50944:	mov	x1, x27
   50948:	mov	w3, #0x2                   	// #2
   5094c:	mov	x0, x27
   50950:	bl	cc60 <mpfr_div_ui@plt>
   50954:	str	w21, [sp, #136]
   50958:	mov	x2, x24
   5095c:	mov	x1, x27
   50960:	mov	w3, #0x2                   	// #2
   50964:	mov	x0, x27
   50968:	bl	cc60 <mpfr_div_ui@plt>
   5096c:	add	x22, x28, x22
   50970:	mov	x2, x20
   50974:	mov	x1, x27
   50978:	mov	w3, #0x2                   	// #2
   5097c:	mov	x0, x27
   50980:	bl	cc60 <mpfr_div_ui@plt>
   50984:	mov	x2, x20
   50988:	mov	x1, x27
   5098c:	mov	w3, #0x2                   	// #2
   50990:	mov	x0, x27
   50994:	bl	cc60 <mpfr_div_ui@plt>
   50998:	mov	x0, x21
   5099c:	bl	c830 <mpfr_bernoulli_cache@plt>
   509a0:	mov	x1, x27
   509a4:	mov	x2, x0
   509a8:	mov	w3, #0x0                   	// #0
   509ac:	mov	x0, x23
   509b0:	bl	c4d0 <mpfr_mul_z@plt>
   509b4:	add	x21, x21, #0x1
   509b8:	mov	x2, x23
   509bc:	mov	x1, x25
   509c0:	mov	x0, x25
   509c4:	mov	w3, #0x0                   	// #0
   509c8:	bl	c1a0 <mpfr_add@plt>
   509cc:	ldr	x1, [sp, #416]
   509d0:	ldr	x28, [sp, #320]
   509d4:	add	x0, x19, x1
   509d8:	cmp	x0, x22
   509dc:	ldr	w8, [sp, #136]
   509e0:	csel	x0, x0, x22, ge  // ge = tcont
   509e4:	sub	x2, x28, x26
   509e8:	subs	x0, x0, x28
   509ec:	add	x19, x19, #0x5
   509f0:	csinv	x0, x0, xzr, pl  // pl = nfrst
   509f4:	cmp	x1, x2
   509f8:	add	x22, x0, #0x2
   509fc:	ldr	x4, [sp, #144]
   50a00:	b.gt	50920 <mpfr_li2@@Base+0x270>
   50a04:	add	w8, w8, w8, lsl #1
   50a08:	add	x0, x0, #0x3
   50a0c:	ldr	x2, [sp, #288]
   50a10:	lsl	w8, w8, #1
   50a14:	mov	x19, x26
   50a18:	mov	x26, x4
   50a1c:	ldr	x20, [sp, #128]
   50a20:	sub	x2, x2, w8, sxtw
   50a24:	sub	x2, x2, #0x4
   50a28:	cmp	x22, x2
   50a2c:	csel	x2, x0, x2, ge  // ge = tcont
   50a30:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   50a34:	cmp	x28, x0
   50a38:	b.le	50a60 <mpfr_li2@@Base+0x3b0>
   50a3c:	ldr	x1, [sp, #304]
   50a40:	sub	x2, x19, x2
   50a44:	ldr	x3, [sp, #120]
   50a48:	sub	x1, x1, #0x1
   50a4c:	ldr	x0, [sp, #328]
   50a50:	asr	x1, x1, #6
   50a54:	add	x1, x1, #0x1
   50a58:	bl	c370 <mpfr_round_p@plt>
   50a5c:	cbnz	w0, 50ad4 <mpfr_li2@@Base+0x424>
   50a60:	ldr	x1, [sp, #104]
   50a64:	mov	x0, #0xfffffffffffffeff    	// #-257
   50a68:	movk	x0, #0x7fff, lsl #48
   50a6c:	sub	x0, x0, x19
   50a70:	cmp	x0, x1
   50a74:	b.lt	50abc <mpfr_li2@@Base+0x40c>  // b.tstop
   50a78:	add	x19, x19, x1
   50a7c:	mov	x0, x25
   50a80:	mov	x1, x19
   50a84:	add	x22, x19, x19, lsr #63
   50a88:	asr	x2, x22, #1
   50a8c:	str	x2, [sp, #104]
   50a90:	bl	bed0 <mpfr_set_prec@plt>
   50a94:	mov	x1, x19
   50a98:	mov	x0, x26
   50a9c:	bl	bed0 <mpfr_set_prec@plt>
   50aa0:	mov	x1, x19
   50aa4:	mov	x0, x27
   50aa8:	bl	bed0 <mpfr_set_prec@plt>
   50aac:	mov	x1, x19
   50ab0:	mov	x0, x23
   50ab4:	bl	bed0 <mpfr_set_prec@plt>
   50ab8:	b	508c0 <mpfr_li2@@Base+0x210>
   50abc:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   50ac0:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   50ac4:	add	x2, x2, #0x358
   50ac8:	add	x0, x0, #0x390
   50acc:	mov	w1, #0x5e                  	// #94
   50ad0:	bl	cb40 <mpfr_assert_fail@plt>
   50ad4:	mov	x19, x27
   50ad8:	ldr	w3, [sp, #312]
   50adc:	ldp	x27, x28, [sp, #160]
   50ae0:	mov	x1, x25
   50ae4:	mov	w2, #0x2                   	// #2
   50ae8:	mov	x0, x28
   50aec:	bl	c6a0 <mpfr_set4@plt>
   50af0:	mov	x3, x23
   50af4:	mov	x4, #0x0                   	// #0
   50af8:	mov	x2, x19
   50afc:	mov	x1, x26
   50b00:	mov	x0, x25
   50b04:	bl	c1b0 <mpfr_clears@plt>
   50b08:	mov	x1, x20
   50b0c:	mov	w2, #0x2                   	// #2
   50b10:	mov	x0, x20
   50b14:	bl	c400 <mpfr_sqr@plt>
   50b18:	mov	x1, x20
   50b1c:	mov	w3, #0x2                   	// #2
   50b20:	mov	x2, #0x2                   	// #2
   50b24:	mov	x0, x20
   50b28:	bl	c8f0 <mpfr_div_2ui@plt>
   50b2c:	mov	x2, x20
   50b30:	mov	x1, x28
   50b34:	mov	w3, #0x0                   	// #0
   50b38:	mov	x0, x28
   50b3c:	bl	bb70 <mpfr_sub@plt>
   50b40:	ldr	x2, [sp, #152]
   50b44:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   50b48:	ldr	x0, [sp, #256]
   50b4c:	cmp	x2, #0x0
   50b50:	csinv	x3, xzr, x2, ge  // ge = tcont
   50b54:	cmp	x0, x1
   50b58:	b.le	50bb0 <mpfr_li2@@Base+0x500>
   50b5c:	clz	x22, x24
   50b60:	mov	w2, #0x41                  	// #65
   50b64:	sub	w2, w2, w22
   50b68:	ldr	x1, [sp, #240]
   50b6c:	sxtw	x2, w2
   50b70:	cmp	x2, x3
   50b74:	csel	x2, x2, x3, ge  // ge = tcont
   50b78:	ldr	w3, [sp, #208]
   50b7c:	subs	x2, x2, x0
   50b80:	sub	x1, x1, #0x1
   50b84:	ldr	x0, [sp, #264]
   50b88:	csinv	x2, x2, xzr, pl  // pl = nfrst
   50b8c:	cmp	w3, #0x0
   50b90:	add	x2, x2, #0x2
   50b94:	ldr	x3, [sp, #184]
   50b98:	asr	x1, x1, #6
   50b9c:	sub	x2, x27, x2
   50ba0:	add	x1, x1, #0x1
   50ba4:	cinc	x3, x3, eq  // eq = none
   50ba8:	bl	c370 <mpfr_round_p@plt>
   50bac:	cbnz	w0, 50bf4 <mpfr_li2@@Base+0x544>
   50bb0:	ldr	x1, [sp, #112]
   50bb4:	mov	x0, #0xfffffffffffffeff    	// #-257
   50bb8:	movk	x0, #0x7fff, lsl #48
   50bbc:	sub	x0, x0, x27
   50bc0:	cmp	x0, x1
   50bc4:	b.lt	50cb8 <mpfr_li2@@Base+0x608>  // b.tstop
   50bc8:	add	x27, x27, x1
   50bcc:	mov	x0, x20
   50bd0:	mov	x1, x27
   50bd4:	add	x2, x27, x27, lsr #63
   50bd8:	asr	x2, x2, #1
   50bdc:	str	x2, [sp, #112]
   50be0:	bl	bed0 <mpfr_set_prec@plt>
   50be4:	mov	x1, x27
   50be8:	mov	x0, x28
   50bec:	bl	bed0 <mpfr_set_prec@plt>
   50bf0:	b	507f8 <mpfr_li2@@Base+0x148>
   50bf4:	ldr	x21, [sp, #232]
   50bf8:	ldr	w2, [sp, #208]
   50bfc:	ldr	w3, [sp, #248]
   50c00:	mov	x1, x21
   50c04:	ldr	x19, [sp, #192]
   50c08:	mov	x0, x19
   50c0c:	bl	c6a0 <mpfr_set4@plt>
   50c10:	mov	w22, w0
   50c14:	mov	x0, x20
   50c18:	bl	c070 <mpfr_clear@plt>
   50c1c:	mov	x0, x21
   50c20:	bl	c070 <mpfr_clear@plt>
   50c24:	ldr	x3, [sp, #200]
   50c28:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50c2c:	ldr	x2, [x0, #2576]
   50c30:	add	x0, x0, #0xa10
   50c34:	blr	x2
   50c38:	ldr	w2, [sp, #212]
   50c3c:	str	w2, [x3, x0]
   50c40:	add	x2, x3, x0
   50c44:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50c48:	ldr	x4, [x0, #2512]
   50c4c:	add	x0, x0, #0x9d0
   50c50:	blr	x4
   50c54:	ldr	x4, [sp, #216]
   50c58:	str	x4, [x3, x0]
   50c5c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50c60:	ldr	x5, [x0, #2544]
   50c64:	add	x0, x0, #0x9f0
   50c68:	blr	x5
   50c6c:	ldr	x1, [x19, #16]
   50c70:	ldr	x5, [sp, #224]
   50c74:	str	x5, [x3, x0]
   50c78:	cmp	x4, x1
   50c7c:	ccmp	x5, x1, #0x1, le
   50c80:	b.ge	50d88 <mpfr_li2@@Base+0x6d8>  // b.tcont
   50c84:	ldr	w2, [sp, #208]
   50c88:	mov	w1, w22
   50c8c:	ldr	x0, [sp, #192]
   50c90:	bl	cb30 <mpfr_check_range@plt>
   50c94:	ldp	x19, x20, [sp, #16]
   50c98:	mov	w22, w0
   50c9c:	ldp	x23, x24, [sp, #48]
   50ca0:	ldp	x25, x26, [sp, #64]
   50ca4:	ldp	x27, x28, [sp, #80]
   50ca8:	mov	w0, w22
   50cac:	ldp	x21, x22, [sp, #32]
   50cb0:	ldp	x29, x30, [sp], #432
   50cb4:	ret
   50cb8:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   50cbc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   50cc0:	add	x2, x2, #0x218
   50cc4:	add	x0, x0, #0x390
   50cc8:	mov	w1, #0x12a                 	// #298
   50ccc:	bl	cb40 <mpfr_assert_fail@plt>
   50cd0:	mov	x4, x0
   50cd4:	b	50870 <mpfr_li2@@Base+0x1c0>
   50cd8:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   50cdc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   50ce0:	add	x2, x2, #0x380
   50ce4:	add	x0, x0, #0x390
   50ce8:	mov	w1, #0x31                  	// #49
   50cec:	bl	cb40 <mpfr_assert_fail@plt>
   50cf0:	ldr	w3, [sp, #312]
   50cf4:	mov	x1, x26
   50cf8:	ldr	x20, [sp, #192]
   50cfc:	ldr	w23, [sp, #208]
   50d00:	mov	x0, x20
   50d04:	mov	w2, w23
   50d08:	bl	c6a0 <mpfr_set4@plt>
   50d0c:	mov	x3, x21
   50d10:	mov	w22, w0
   50d14:	mov	x2, x28
   50d18:	mov	x0, x26
   50d1c:	mov	x1, x24
   50d20:	mov	x4, #0x0                   	// #0
   50d24:	bl	c1b0 <mpfr_clears@plt>
   50d28:	ldr	x3, [sp, #200]
   50d2c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50d30:	ldr	x1, [x0, #2576]
   50d34:	add	x0, x0, #0xa10
   50d38:	blr	x1
   50d3c:	ldr	w1, [sp, #212]
   50d40:	add	x2, x3, x0
   50d44:	str	w1, [x3, x0]
   50d48:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50d4c:	ldr	x5, [x0, #2512]
   50d50:	add	x0, x0, #0x9d0
   50d54:	blr	x5
   50d58:	ldr	x5, [sp, #216]
   50d5c:	str	x5, [x3, x0]
   50d60:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50d64:	ldr	x6, [x0, #2544]
   50d68:	add	x0, x0, #0x9f0
   50d6c:	blr	x6
   50d70:	ldr	x1, [x20, #16]
   50d74:	ldr	x6, [sp, #224]
   50d78:	str	x6, [x3, x0]
   50d7c:	cmp	x6, x1
   50d80:	ccmp	x5, x1, #0x0, ge  // ge = tcont
   50d84:	b.gt	518f8 <mpfr_li2@@Base+0x1248>
   50d88:	cbz	w22, 50db8 <mpfr_li2@@Base+0x708>
   50d8c:	ldr	w0, [sp, #212]
   50d90:	ldp	x19, x20, [sp, #16]
   50d94:	orr	w0, w0, #0x8
   50d98:	ldp	x23, x24, [sp, #48]
   50d9c:	ldp	x25, x26, [sp, #64]
   50da0:	ldp	x27, x28, [sp, #80]
   50da4:	str	w0, [x2]
   50da8:	mov	w0, w22
   50dac:	ldp	x21, x22, [sp, #32]
   50db0:	ldp	x29, x30, [sp], #432
   50db4:	ret
   50db8:	mov	w0, w22
   50dbc:	ldp	x19, x20, [sp, #16]
   50dc0:	ldp	x21, x22, [sp, #32]
   50dc4:	ldp	x23, x24, [sp, #48]
   50dc8:	ldp	x25, x26, [sp, #64]
   50dcc:	ldp	x27, x28, [sp, #80]
   50dd0:	ldp	x29, x30, [sp], #432
   50dd4:	ret
   50dd8:	mov	x3, #0x1                   	// #1
   50ddc:	add	x4, x4, x3
   50de0:	sub	x2, x3, x2
   50de4:	cmp	x4, x2
   50de8:	b.cs	506f4 <mpfr_li2@@Base+0x44>  // b.hs, b.nlast
   50dec:	ldr	w4, [sp, #208]
   50df0:	bl	c540 <mpfr_round_near_x@plt>
   50df4:	mov	w22, w0
   50df8:	cbnz	w0, 50ca8 <mpfr_li2@@Base+0x5f8>
   50dfc:	ldr	x0, [sp, #192]
   50e00:	ldr	x0, [x0]
   50e04:	str	x0, [sp, #184]
   50e08:	b	506f4 <mpfr_li2@@Base+0x44>
   50e0c:	tbz	x2, #63, 506f4 <mpfr_li2@@Base+0x44>
   50e10:	add	x4, x4, #0x1
   50e14:	mov	x3, #0x2                   	// #2
   50e18:	sub	x2, x3, x2
   50e1c:	cmp	x4, x2
   50e20:	b.cs	506f4 <mpfr_li2@@Base+0x44>  // b.hs, b.nlast
   50e24:	ldr	w4, [sp, #208]
   50e28:	mov	w3, #0x0                   	// #0
   50e2c:	bl	c540 <mpfr_round_near_x@plt>
   50e30:	mov	w22, w0
   50e34:	cbz	w0, 50dfc <mpfr_li2@@Base+0x74c>
   50e38:	b	50ca8 <mpfr_li2@@Base+0x5f8>
   50e3c:	ldr	x0, [sp, #176]
   50e40:	mov	x2, #0x0                   	// #0
   50e44:	mov	x1, #0x1                   	// #1
   50e48:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   50e4c:	cbnz	w0, 50f7c <mpfr_li2@@Base+0x8cc>
   50e50:	add	x21, sp, #0x190
   50e54:	mov	x22, #0xfffffffffffffeff    	// #-257
   50e58:	mov	x0, x21
   50e5c:	mov	x1, x27
   50e60:	mov	x19, #0x40                  	// #64
   50e64:	mov	x20, #0x8000000000000003    	// #-9223372036854775805
   50e68:	movk	x22, #0x7fff, lsl #48
   50e6c:	stp	x23, x24, [sp, #48]
   50e70:	stp	x25, x26, [sp, #64]
   50e74:	bl	ca80 <mpfr_init2@plt>
   50e78:	ldr	w25, [sp, #208]
   50e7c:	ldr	x24, [sp, #184]
   50e80:	ldr	x23, [sp, #200]
   50e84:	b	50ea0 <mpfr_li2@@Base+0x7f0>
   50e88:	add	x27, x27, x19
   50e8c:	mov	x0, x21
   50e90:	mov	x1, x27
   50e94:	add	x19, x27, x27, lsr #63
   50e98:	asr	x19, x19, #1
   50e9c:	bl	bed0 <mpfr_set_prec@plt>
   50ea0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   50ea4:	ldr	x1, [x0, #2624]
   50ea8:	add	x0, x0, #0xa40
   50eac:	blr	x1
   50eb0:	mov	w2, #0x2                   	// #2
   50eb4:	add	x1, x23, x0
   50eb8:	mov	x0, x21
   50ebc:	bl	c380 <mpfr_cache@plt>
   50ec0:	mov	x1, x21
   50ec4:	mov	w2, #0x0                   	// #0
   50ec8:	mov	x0, x21
   50ecc:	bl	c400 <mpfr_sqr@plt>
   50ed0:	mov	x1, x21
   50ed4:	mov	x0, x21
   50ed8:	mov	w3, #0x0                   	// #0
   50edc:	mov	x2, #0x6                   	// #6
   50ee0:	bl	cc60 <mpfr_div_ui@plt>
   50ee4:	ldr	x0, [sp, #416]
   50ee8:	cmp	x0, x20
   50eec:	b.le	50f18 <mpfr_li2@@Base+0x868>
   50ef0:	ldr	x1, [sp, #400]
   50ef4:	cmp	w25, #0x0
   50ef8:	ldr	x0, [sp, #424]
   50efc:	sub	x1, x1, #0x1
   50f00:	cinc	x3, x24, eq  // eq = none
   50f04:	sub	x2, x27, #0x4
   50f08:	asr	x1, x1, #6
   50f0c:	add	x1, x1, #0x1
   50f10:	bl	c370 <mpfr_round_p@plt>
   50f14:	cbnz	w0, 513b0 <mpfr_li2@@Base+0xd00>
   50f18:	sub	x0, x22, x27
   50f1c:	cmp	x0, x19
   50f20:	b.ge	50e88 <mpfr_li2@@Base+0x7d8>  // b.tcont
   50f24:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   50f28:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   50f2c:	add	x2, x2, #0x218
   50f30:	add	x0, x0, #0x390
   50f34:	mov	w1, #0x147                 	// #327
   50f38:	bl	cb40 <mpfr_assert_fail@plt>
   50f3c:	mov	x0, #0x2                   	// #2
   50f40:	movk	x0, #0x8000, lsl #48
   50f44:	cmp	x2, x0
   50f48:	b.eq	51818 <mpfr_li2@@Base+0x1168>  // b.none
   50f4c:	cmp	x2, x3
   50f50:	b.eq	51800 <mpfr_li2@@Base+0x1150>  // b.none
   50f54:	ldr	x2, [sp, #192]
   50f58:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   50f5c:	ldr	w1, [x1, #8]
   50f60:	mov	w22, #0x0                   	// #0
   50f64:	str	w1, [x2, #8]
   50f68:	str	x0, [x2, #16]
   50f6c:	b	50ca8 <mpfr_li2@@Base+0x5f8>
   50f70:	stp	x27, x28, [sp, #80]
   50f74:	ldr	x0, [sp, #184]
   50f78:	b	50788 <mpfr_li2@@Base+0xd8>
   50f7c:	ldr	x19, [sp, #176]
   50f80:	mov	x2, #0x0                   	// #0
   50f84:	mov	x1, #0x2                   	// #2
   50f88:	mov	x0, x19
   50f8c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   50f90:	tbnz	w0, #31, 51448 <mpfr_li2@@Base+0xd98>
   50f94:	mov	x0, x19
   50f98:	mov	x2, #0x0                   	// #0
   50f9c:	mov	x1, #0x26                  	// #38
   50fa0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   50fa4:	tbnz	w0, #31, 5184c <mpfr_li2@@Base+0x119c>
   50fa8:	ldr	x0, [sp, #192]
   50fac:	mov	x2, #0x0                   	// #0
   50fb0:	mov	x1, #0x26                  	// #38
   50fb4:	ldr	x20, [x0]
   50fb8:	ldr	x0, [sp, #176]
   50fbc:	add	x19, x20, #0x14
   50fc0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   50fc4:	tbnz	w0, #31, 52344 <mpfr_li2@@Base+0x1c94>
   50fc8:	add	x28, sp, #0x170
   50fcc:	add	x21, sp, #0x190
   50fd0:	mov	x1, x19
   50fd4:	mov	x0, x28
   50fd8:	bl	ca80 <mpfr_init2@plt>
   50fdc:	mov	x0, x21
   50fe0:	mov	x1, x19
   50fe4:	bl	ca80 <mpfr_init2@plt>
   50fe8:	ldr	x1, [sp, #176]
   50fec:	mov	w2, #0x0                   	// #0
   50ff0:	mov	x0, x28
   50ff4:	bl	c090 <mpfr_log@plt>
   50ff8:	mov	x1, x28
   50ffc:	mov	w2, #0x0                   	// #0
   51000:	mov	x0, x28
   51004:	bl	c400 <mpfr_sqr@plt>
   51008:	mov	x1, x28
   5100c:	mov	w3, #0x0                   	// #0
   51010:	mov	x2, #0x1                   	// #1
   51014:	mov	x0, x28
   51018:	bl	c8f0 <mpfr_div_2ui@plt>
   5101c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   51020:	ldr	x1, [x0, #2624]
   51024:	add	x0, x0, #0xa40
   51028:	blr	x1
   5102c:	mov	w2, #0x0                   	// #0
   51030:	ldr	x1, [sp, #200]
   51034:	add	x1, x1, x0
   51038:	mov	x0, x21
   5103c:	bl	c380 <mpfr_cache@plt>
   51040:	mov	x1, x21
   51044:	mov	w2, #0x0                   	// #0
   51048:	mov	x0, x21
   5104c:	bl	c400 <mpfr_sqr@plt>
   51050:	mov	x1, x21
   51054:	mov	x0, x21
   51058:	mov	w3, #0x0                   	// #0
   5105c:	mov	x2, #0x3                   	// #3
   51060:	bl	cc60 <mpfr_div_ui@plt>
   51064:	ldr	x1, [sp, #384]
   51068:	ldr	x0, [sp, #416]
   5106c:	cmp	x1, x0
   51070:	b.le	52314 <mpfr_li2@@Base+0x1c64>
   51074:	mov	x1, x21
   51078:	mov	x2, x28
   5107c:	mov	x0, x28
   51080:	mov	w3, #0x0                   	// #0
   51084:	bl	bb70 <mpfr_sub@plt>
   51088:	ldr	x1, [sp, #176]
   5108c:	ldr	x0, [sp, #384]
   51090:	ldr	x1, [x1, #16]
   51094:	sub	x19, x19, x0
   51098:	cmp	x1, x19
   5109c:	b.lt	510e0 <mpfr_li2@@Base+0xa30>  // b.tstop
   510a0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   510a4:	cmp	x0, x1
   510a8:	b.le	510e0 <mpfr_li2@@Base+0xa30>
   510ac:	ldr	x2, [sp, #192]
   510b0:	ldr	w0, [sp, #208]
   510b4:	ldr	x1, [sp, #368]
   510b8:	cmp	w0, #0x0
   510bc:	ldr	x0, [sp, #392]
   510c0:	sub	x1, x1, #0x1
   510c4:	ldr	x3, [x2]
   510c8:	asr	x1, x1, #6
   510cc:	add	x1, x1, #0x1
   510d0:	add	x2, x20, #0x10
   510d4:	cinc	x3, x3, eq  // eq = none
   510d8:	bl	c370 <mpfr_round_p@plt>
   510dc:	cbnz	w0, 51e08 <mpfr_li2@@Base+0x1758>
   510e0:	mov	x0, x28
   510e4:	stp	x23, x24, [sp, #48]
   510e8:	stp	x25, x26, [sp, #64]
   510ec:	bl	c070 <mpfr_clear@plt>
   510f0:	mov	x0, x21
   510f4:	bl	c070 <mpfr_clear@plt>
   510f8:	mov	x0, x28
   510fc:	mov	x1, x27
   51100:	add	x19, sp, #0x150
   51104:	bl	ca80 <mpfr_init2@plt>
   51108:	mov	x0, x19
   5110c:	mov	x1, x27
   51110:	bl	ca80 <mpfr_init2@plt>
   51114:	mov	x23, x28
   51118:	mov	x1, x27
   5111c:	mov	x0, x21
   51120:	mov	x24, #0x40                  	// #64
   51124:	bl	ca80 <mpfr_init2@plt>
   51128:	ldr	x28, [sp, #176]
   5112c:	b	51334 <mpfr_li2@@Base+0xc84>
   51130:	b.le	516cc <mpfr_li2@@Base+0x101c>
   51134:	clz	x20, x20
   51138:	mov	w0, #0x41                  	// #65
   5113c:	sub	w20, w0, w20
   51140:	sxtw	x20, w20
   51144:	mov	x1, x23
   51148:	mov	w2, #0x0                   	// #0
   5114c:	mov	x0, x23
   51150:	bl	c400 <mpfr_sqr@plt>
   51154:	mov	x1, x23
   51158:	mov	w3, #0x0                   	// #0
   5115c:	mov	x2, #0x2                   	// #2
   51160:	mov	x0, x23
   51164:	bl	c8f0 <mpfr_div_2ui@plt>
   51168:	mov	x26, #0x3                   	// #3
   5116c:	mov	x2, x23
   51170:	mov	x1, x19
   51174:	mov	w3, #0x0                   	// #0
   51178:	mov	x0, x19
   5117c:	bl	c1a0 <mpfr_add@plt>
   51180:	ldr	x3, [sp, #384]
   51184:	cmp	x22, #0x0
   51188:	sub	x1, x26, x22
   5118c:	mov	x0, #0x4                   	// #4
   51190:	csel	x0, x1, x0, lt  // lt = tstop
   51194:	mov	w2, #0x2                   	// #2
   51198:	mov	x1, x28
   5119c:	str	x3, [sp, #104]
   511a0:	str	x0, [sp, #120]
   511a4:	mov	x0, x23
   511a8:	ldr	x25, [sp, #352]
   511ac:	bl	c090 <mpfr_log@plt>
   511b0:	mov	x1, x23
   511b4:	mov	w2, #0x0                   	// #0
   511b8:	mov	x0, x23
   511bc:	bl	c400 <mpfr_sqr@plt>
   511c0:	mov	x1, x23
   511c4:	mov	w3, #0x0                   	// #0
   511c8:	mov	x2, #0x1                   	// #1
   511cc:	mov	x0, x23
   511d0:	bl	c8f0 <mpfr_div_2ui@plt>
   511d4:	mov	x1, x19
   511d8:	mov	x2, x23
   511dc:	mov	w3, #0x0                   	// #0
   511e0:	mov	x0, x19
   511e4:	bl	bb70 <mpfr_sub@plt>
   511e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   511ec:	ldr	x1, [x0, #2624]
   511f0:	add	x0, x0, #0xa40
   511f4:	blr	x1
   511f8:	mov	w2, #0x2                   	// #2
   511fc:	ldr	x3, [sp, #384]
   51200:	str	x3, [sp, #112]
   51204:	ldr	x1, [sp, #200]
   51208:	ldr	x22, [sp, #352]
   5120c:	add	x1, x1, x0
   51210:	mov	x0, x23
   51214:	bl	c380 <mpfr_cache@plt>
   51218:	mov	x1, x23
   5121c:	mov	w2, #0x0                   	// #0
   51220:	mov	x0, x23
   51224:	bl	c400 <mpfr_sqr@plt>
   51228:	mov	x2, x26
   5122c:	mov	x1, x23
   51230:	mov	w3, #0x0                   	// #0
   51234:	mov	x0, x23
   51238:	bl	cc60 <mpfr_div_ui@plt>
   5123c:	mov	x2, x23
   51240:	mov	x1, x19
   51244:	mov	x0, x19
   51248:	mov	w3, #0x0                   	// #0
   5124c:	bl	c1a0 <mpfr_add@plt>
   51250:	ldr	x2, [sp, #352]
   51254:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   51258:	cmp	x2, x0
   5125c:	b.le	512f0 <mpfr_li2@@Base+0xc40>
   51260:	ldr	x0, [sp, #104]
   51264:	mov	x3, #0xffffffffffffffff    	// #-1
   51268:	ldr	x1, [sp, #120]
   5126c:	mov	x5, #0x2                   	// #2
   51270:	add	x1, x0, x1
   51274:	cmp	x1, x20
   51278:	csel	x1, x1, x20, ge  // ge = tcont
   5127c:	subs	x1, x1, x25
   51280:	ldr	x0, [sp, #112]
   51284:	csel	x1, x1, x3, pl  // pl = nfrst
   51288:	add	x1, x1, x5
   5128c:	add	x1, x25, x1
   51290:	add	x0, x0, #0x3
   51294:	cmp	x0, x1
   51298:	csel	x0, x0, x1, ge  // ge = tcont
   5129c:	subs	x0, x0, x22
   512a0:	csel	x0, x0, x3, pl  // pl = nfrst
   512a4:	add	x0, x0, x5
   512a8:	add	x22, x22, x0
   512ac:	cmp	x22, x5
   512b0:	csel	x22, x22, x5, ge  // ge = tcont
   512b4:	ldr	x1, [sp, #336]
   512b8:	subs	x22, x22, x2
   512bc:	ldr	w2, [sp, #208]
   512c0:	csel	x22, x22, x3, pl  // pl = nfrst
   512c4:	ldr	x0, [sp, #360]
   512c8:	cmp	w2, #0x0
   512cc:	add	x1, x1, x3
   512d0:	add	x22, x22, x5
   512d4:	ldr	x2, [sp, #184]
   512d8:	asr	x1, x1, #6
   512dc:	add	x1, x1, #0x1
   512e0:	cinc	x3, x2, eq  // eq = none
   512e4:	sub	x2, x27, x22
   512e8:	bl	c370 <mpfr_round_p@plt>
   512ec:	cbnz	w0, 516e4 <mpfr_li2@@Base+0x1034>
   512f0:	mov	x0, #0xfffffffffffffeff    	// #-257
   512f4:	movk	x0, #0x7fff, lsl #48
   512f8:	sub	x0, x0, x27
   512fc:	cmp	x0, x24
   51300:	b.lt	516b4 <mpfr_li2@@Base+0x1004>  // b.tstop
   51304:	add	x27, x27, x24
   51308:	mov	x0, x23
   5130c:	mov	x1, x27
   51310:	bl	bed0 <mpfr_set_prec@plt>
   51314:	add	x24, x27, x27, lsr #63
   51318:	mov	x1, x27
   5131c:	mov	x0, x19
   51320:	bl	bed0 <mpfr_set_prec@plt>
   51324:	asr	x24, x24, #1
   51328:	mov	x1, x27
   5132c:	mov	x0, x21
   51330:	bl	bed0 <mpfr_set_prec@plt>
   51334:	mov	w3, #0x0                   	// #0
   51338:	mov	x2, x28
   5133c:	mov	x1, #0x1                   	// #1
   51340:	mov	x0, x21
   51344:	bl	c2f0 <mpfr_ui_div@plt>
   51348:	mov	x1, x21
   5134c:	mov	w2, #0x0                   	// #0
   51350:	mov	x0, x21
   51354:	bl	bd70 <mpfr_neg@plt>
   51358:	mov	x1, x21
   5135c:	mov	w2, #0x3                   	// #3
   51360:	mov	x0, x23
   51364:	bl	c700 <mpfr_log1p@plt>
   51368:	mov	x1, x23
   5136c:	mov	w2, #0x2                   	// #2
   51370:	mov	x0, x23
   51374:	bl	bd70 <mpfr_neg@plt>
   51378:	mov	x1, x23
   5137c:	mov	w2, #0x0                   	// #0
   51380:	mov	x0, x19
   51384:	ldr	x22, [sp, #384]
   51388:	bl	50398 <mpfr_d_div@@Base+0x140>
   5138c:	mov	x1, x19
   51390:	sxtw	x20, w0
   51394:	mov	w2, #0x0                   	// #0
   51398:	mov	x0, x19
   5139c:	bl	bd70 <mpfr_neg@plt>
   513a0:	cmp	w20, #0x0
   513a4:	cbnz	w20, 51130 <mpfr_li2@@Base+0xa80>
   513a8:	mov	x20, #0x1                   	// #1
   513ac:	b	51144 <mpfr_li2@@Base+0xa94>
   513b0:	ldr	w3, [sp, #408]
   513b4:	mov	x1, x21
   513b8:	ldr	w20, [sp, #208]
   513bc:	ldr	x19, [sp, #192]
   513c0:	mov	w2, w20
   513c4:	mov	x0, x19
   513c8:	bl	c6a0 <mpfr_set4@plt>
   513cc:	mov	w22, w0
   513d0:	mov	x0, x21
   513d4:	bl	c070 <mpfr_clear@plt>
   513d8:	ldr	x3, [sp, #200]
   513dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   513e0:	ldr	x2, [x0, #2576]
   513e4:	add	x0, x0, #0xa10
   513e8:	blr	x2
   513ec:	ldr	w2, [sp, #212]
   513f0:	ldr	x1, [x19, #16]
   513f4:	str	w2, [x3, x0]
   513f8:	add	x2, x3, x0
   513fc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   51400:	ldr	x5, [x0, #2512]
   51404:	add	x0, x0, #0x9d0
   51408:	blr	x5
   5140c:	ldr	x5, [sp, #216]
   51410:	str	x5, [x3, x0]
   51414:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   51418:	ldr	x6, [x0, #2544]
   5141c:	add	x0, x0, #0x9f0
   51420:	blr	x6
   51424:	ldr	x6, [sp, #224]
   51428:	str	x6, [x3, x0]
   5142c:	cmp	x5, x1
   51430:	ccmp	x6, x1, #0x1, le
   51434:	b.ge	50d88 <mpfr_li2@@Base+0x6d8>  // b.tcont
   51438:	mov	w2, w20
   5143c:	mov	w1, w22
   51440:	mov	x0, x19
   51444:	b	50c90 <mpfr_li2@@Base+0x5e0>
   51448:	stp	x23, x24, [sp, #48]
   5144c:	mov	x2, #0x0                   	// #0
   51450:	mov	x1, #0x1                   	// #1
   51454:	ldr	x23, [sp, #176]
   51458:	mov	x0, x23
   5145c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   51460:	cmp	w0, #0x0
   51464:	b.le	51908 <mpfr_li2@@Base+0x1258>
   51468:	stp	x25, x26, [sp, #64]
   5146c:	add	x26, sp, #0x130
   51470:	mov	x1, x27
   51474:	mov	x0, x26
   51478:	add	x19, sp, #0x150
   5147c:	bl	ca80 <mpfr_init2@plt>
   51480:	add	x28, sp, #0x170
   51484:	mov	x0, x19
   51488:	mov	x1, x27
   5148c:	bl	ca80 <mpfr_init2@plt>
   51490:	add	x21, sp, #0x190
   51494:	mov	x0, x28
   51498:	mov	x1, x27
   5149c:	bl	ca80 <mpfr_init2@plt>
   514a0:	mov	x25, x27
   514a4:	mov	x0, x21
   514a8:	mov	x1, x27
   514ac:	mov	x20, #0x40                  	// #64
   514b0:	mov	x22, #0x1                   	// #1
   514b4:	bl	ca80 <mpfr_init2@plt>
   514b8:	b	51584 <mpfr_li2@@Base+0xed4>
   514bc:	b.le	517e8 <mpfr_li2@@Base+0x1138>
   514c0:	sxtw	x1, w27
   514c4:	mov	w0, #0x41                  	// #65
   514c8:	clz	x1, x1
   514cc:	sub	x2, x22, x24
   514d0:	sub	w0, w0, w1
   514d4:	sxtw	x0, w0
   514d8:	sub	x0, x0, x7
   514dc:	cmp	x0, x2
   514e0:	csel	x1, x0, x2, ge  // ge = tcont
   514e4:	ldr	x2, [sp, #320]
   514e8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   514ec:	cmp	x2, x0
   514f0:	b.le	51534 <mpfr_li2@@Base+0xe84>
   514f4:	ldr	w0, [sp, #208]
   514f8:	ldr	x2, [sp, #184]
   514fc:	cmp	w0, #0x0
   51500:	ldr	x6, [sp, #304]
   51504:	cinc	x3, x2, eq  // eq = none
   51508:	ldr	x0, [sp, #328]
   5150c:	sub	x6, x6, #0x1
   51510:	cmp	x1, #0x5
   51514:	mov	x2, #0x5                   	// #5
   51518:	csel	x1, x1, x2, ge  // ge = tcont
   5151c:	add	x2, x1, #0x2
   51520:	asr	x1, x6, #6
   51524:	sub	x2, x25, x2
   51528:	add	x1, x1, #0x1
   5152c:	bl	c370 <mpfr_round_p@plt>
   51530:	cbnz	w0, 51860 <mpfr_li2@@Base+0x11b0>
   51534:	mov	x0, #0xfffffffffffffeff    	// #-257
   51538:	movk	x0, #0x7fff, lsl #48
   5153c:	sub	x0, x0, x25
   51540:	cmp	x0, x20
   51544:	b.lt	517d0 <mpfr_li2@@Base+0x1120>  // b.tstop
   51548:	add	x25, x25, x20
   5154c:	mov	x0, x26
   51550:	mov	x1, x25
   51554:	bl	bed0 <mpfr_set_prec@plt>
   51558:	mov	x1, x25
   5155c:	mov	x0, x19
   51560:	add	x20, x25, x25, lsr #63
   51564:	bl	bed0 <mpfr_set_prec@plt>
   51568:	mov	x1, x25
   5156c:	mov	x0, x28
   51570:	bl	bed0 <mpfr_set_prec@plt>
   51574:	asr	x20, x20, #1
   51578:	mov	x1, x25
   5157c:	mov	x0, x21
   51580:	bl	bed0 <mpfr_set_prec@plt>
   51584:	mov	x1, x23
   51588:	mov	w2, #0x2                   	// #2
   5158c:	mov	x0, x28
   51590:	bl	c090 <mpfr_log@plt>
   51594:	mov	x1, x28
   51598:	mov	w2, #0x0                   	// #0
   5159c:	mov	x0, x26
   515a0:	bl	50398 <mpfr_d_div@@Base+0x140>
   515a4:	ldr	x7, [sp, #320]
   515a8:	mov	w27, w0
   515ac:	mov	x1, x28
   515b0:	mov	w2, #0x0                   	// #0
   515b4:	mov	x0, x19
   515b8:	str	x7, [sp, #104]
   515bc:	bl	c400 <mpfr_sqr@plt>
   515c0:	mov	x1, x19
   515c4:	mov	w3, #0x0                   	// #0
   515c8:	mov	x2, #0x2                   	// #2
   515cc:	mov	x0, x19
   515d0:	bl	c8f0 <mpfr_div_2ui@plt>
   515d4:	mov	x2, x19
   515d8:	mov	x1, x26
   515dc:	mov	w3, #0x0                   	// #0
   515e0:	mov	x0, x26
   515e4:	bl	c1a0 <mpfr_add@plt>
   515e8:	mov	w3, #0x0                   	// #0
   515ec:	mov	x1, x23
   515f0:	mov	x2, #0x1                   	// #1
   515f4:	mov	x0, x21
   515f8:	bl	c530 <mpfr_sub_ui@plt>
   515fc:	mov	x1, x21
   51600:	mov	w2, #0x2                   	// #2
   51604:	mov	x0, x19
   51608:	bl	c090 <mpfr_log@plt>
   5160c:	mov	x2, x19
   51610:	mov	x1, x28
   51614:	mov	w3, #0x0                   	// #0
   51618:	mov	x0, x19
   5161c:	ldr	x24, [sp, #352]
   51620:	bl	bd50 <mpfr_mul@plt>
   51624:	mov	x1, x26
   51628:	mov	w3, #0x0                   	// #0
   5162c:	mov	x2, x19
   51630:	mov	x0, x26
   51634:	bl	bb70 <mpfr_sub@plt>
   51638:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5163c:	ldr	x1, [x0, #2624]
   51640:	add	x0, x0, #0xa40
   51644:	blr	x1
   51648:	mov	w2, #0x2                   	// #2
   5164c:	ldr	x1, [sp, #200]
   51650:	add	x1, x1, x0
   51654:	mov	x0, x19
   51658:	bl	c380 <mpfr_cache@plt>
   5165c:	mov	x1, x19
   51660:	mov	w2, #0x0                   	// #0
   51664:	mov	x0, x19
   51668:	bl	c400 <mpfr_sqr@plt>
   5166c:	mov	x1, x19
   51670:	mov	w3, #0x0                   	// #0
   51674:	mov	x2, #0x6                   	// #6
   51678:	mov	x0, x19
   5167c:	bl	cc60 <mpfr_div_ui@plt>
   51680:	mov	x2, x19
   51684:	mov	x1, x26
   51688:	mov	x0, x26
   5168c:	mov	w3, #0x0                   	// #0
   51690:	bl	c1a0 <mpfr_add@plt>
   51694:	cmp	w27, #0x0
   51698:	ldr	x7, [sp, #104]
   5169c:	cbnz	w27, 514bc <mpfr_li2@@Base+0xe0c>
   516a0:	cmp	x7, x24
   516a4:	sub	x1, x22, x7
   516a8:	sub	x0, x22, x24
   516ac:	csel	x1, x0, x1, ge  // ge = tcont
   516b0:	b	514e4 <mpfr_li2@@Base+0xe34>
   516b4:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   516b8:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   516bc:	add	x2, x2, #0x218
   516c0:	add	x0, x0, #0x390
   516c4:	mov	w1, #0x189                 	// #393
   516c8:	bl	cb40 <mpfr_assert_fail@plt>
   516cc:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   516d0:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   516d4:	add	x2, x2, #0x440
   516d8:	add	x0, x0, #0x390
   516dc:	mov	w1, #0x16d                 	// #365
   516e0:	bl	cb40 <mpfr_assert_fail@plt>
   516e4:	ldr	w2, [sp, #208]
   516e8:	mov	x1, x19
   516ec:	ldr	w3, [sp, #344]
   516f0:	ldr	x20, [sp, #192]
   516f4:	mov	x0, x20
   516f8:	bl	c6a0 <mpfr_set4@plt>
   516fc:	mov	x1, x23
   51700:	mov	x3, #0x0                   	// #0
   51704:	mov	x2, x21
   51708:	mov	w22, w0
   5170c:	mov	x0, x19
   51710:	bl	c1b0 <mpfr_clears@plt>
   51714:	ldr	x2, [sp, #200]
   51718:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5171c:	ldr	x1, [x0, #2576]
   51720:	add	x0, x0, #0xa10
   51724:	blr	x1
   51728:	ldr	w1, [sp, #212]
   5172c:	str	w1, [x2, x0]
   51730:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   51734:	ldr	x3, [x0, #2512]
   51738:	add	x0, x0, #0x9d0
   5173c:	blr	x3
   51740:	ldr	x3, [sp, #216]
   51744:	str	x3, [x2, x0]
   51748:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5174c:	ldr	x4, [x0, #2544]
   51750:	add	x0, x0, #0x9f0
   51754:	blr	x4
   51758:	ldr	x1, [x20, #16]
   5175c:	ldr	x4, [sp, #224]
   51760:	str	x4, [x2, x0]
   51764:	cmp	x4, x1
   51768:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   5176c:	b.le	51798 <mpfr_li2@@Base+0x10e8>
   51770:	ldp	x23, x24, [sp, #48]
   51774:	ldp	x25, x26, [sp, #64]
   51778:	mov	w1, w22
   5177c:	ldr	w2, [sp, #208]
   51780:	ldr	x0, [sp, #192]
   51784:	bl	cb30 <mpfr_check_range@plt>
   51788:	mov	w22, w0
   5178c:	ldp	x19, x20, [sp, #16]
   51790:	ldp	x27, x28, [sp, #80]
   51794:	b	50ca8 <mpfr_li2@@Base+0x5f8>
   51798:	cbz	w22, 50db8 <mpfr_li2@@Base+0x708>
   5179c:	ldp	x23, x24, [sp, #48]
   517a0:	ldp	x25, x26, [sp, #64]
   517a4:	ldr	w0, [sp, #212]
   517a8:	ldp	x19, x20, [sp, #16]
   517ac:	orr	w1, w0, #0x8
   517b0:	ldp	x27, x28, [sp, #80]
   517b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   517b8:	ldr	x2, [x0, #2576]
   517bc:	add	x0, x0, #0xa10
   517c0:	blr	x2
   517c4:	ldr	x2, [sp, #200]
   517c8:	str	w1, [x2, x0]
   517cc:	b	50ca8 <mpfr_li2@@Base+0x5f8>
   517d0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   517d4:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   517d8:	add	x2, x2, #0x218
   517dc:	add	x0, x0, #0x390
   517e0:	mov	w1, #0x1bd                 	// #445
   517e4:	bl	cb40 <mpfr_assert_fail@plt>
   517e8:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   517ec:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   517f0:	add	x2, x2, #0x440
   517f4:	add	x0, x0, #0x390
   517f8:	mov	w1, #0x1b8                 	// #440
   517fc:	bl	cb40 <mpfr_assert_fail@plt>
   51800:	ldr	x1, [sp, #192]
   51804:	mov	w0, #0xffffffff            	// #-1
   51808:	mov	w22, #0x0                   	// #0
   5180c:	str	w0, [x1, #8]
   51810:	str	x2, [x1, #16]
   51814:	b	50ca8 <mpfr_li2@@Base+0x5f8>
   51818:	mrs	x1, tpidr_el0
   5181c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   51820:	ldr	x3, [x0, #2576]
   51824:	add	x0, x0, #0xa10
   51828:	blr	x3
   5182c:	add	x0, x1, x0
   51830:	mov	w22, #0x0                   	// #0
   51834:	ldr	x1, [sp, #192]
   51838:	str	x2, [x1, #16]
   5183c:	ldr	w1, [x0]
   51840:	orr	w1, w1, #0x4
   51844:	str	w1, [x0]
   51848:	b	50ca8 <mpfr_li2@@Base+0x5f8>
   5184c:	add	x28, sp, #0x170
   51850:	add	x21, sp, #0x190
   51854:	stp	x23, x24, [sp, #48]
   51858:	stp	x25, x26, [sp, #64]
   5185c:	b	510f8 <mpfr_li2@@Base+0xa48>
   51860:	ldr	w3, [sp, #312]
   51864:	mov	x1, x26
   51868:	ldr	x20, [sp, #192]
   5186c:	ldr	w23, [sp, #208]
   51870:	mov	x0, x20
   51874:	mov	w2, w23
   51878:	bl	c6a0 <mpfr_set4@plt>
   5187c:	mov	x1, x19
   51880:	mov	x3, x21
   51884:	mov	x2, x28
   51888:	mov	w22, w0
   5188c:	mov	x4, #0x0                   	// #0
   51890:	mov	x0, x26
   51894:	bl	c1b0 <mpfr_clears@plt>
   51898:	ldr	x3, [sp, #200]
   5189c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   518a0:	ldr	x1, [x0, #2576]
   518a4:	add	x0, x0, #0xa10
   518a8:	blr	x1
   518ac:	ldr	w1, [sp, #212]
   518b0:	add	x2, x3, x0
   518b4:	str	w1, [x3, x0]
   518b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   518bc:	ldr	x5, [x0, #2512]
   518c0:	add	x0, x0, #0x9d0
   518c4:	blr	x5
   518c8:	ldr	x5, [sp, #216]
   518cc:	str	x5, [x3, x0]
   518d0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   518d4:	ldr	x6, [x0, #2544]
   518d8:	add	x0, x0, #0x9f0
   518dc:	blr	x6
   518e0:	ldr	x1, [x20, #16]
   518e4:	ldr	x6, [sp, #224]
   518e8:	str	x6, [x3, x0]
   518ec:	cmp	x5, x1
   518f0:	ccmp	x6, x1, #0x1, le
   518f4:	b.ge	50d88 <mpfr_li2@@Base+0x6d8>  // b.tcont
   518f8:	mov	w2, w23
   518fc:	mov	w1, w22
   51900:	mov	x0, x20
   51904:	b	50c90 <mpfr_li2@@Base+0x5e0>
   51908:	ldr	x20, [sp, #176]
   5190c:	mov	x2, #0xffffffffffffffff    	// #-1
   51910:	mov	x1, #0x1                   	// #1
   51914:	mov	x0, x20
   51918:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5191c:	cmp	w0, #0x0
   51920:	b.le	51c04 <mpfr_li2@@Base+0x1554>
   51924:	stp	x25, x26, [sp, #64]
   51928:	add	x26, sp, #0x130
   5192c:	add	x19, sp, #0x150
   51930:	mov	x1, x27
   51934:	mov	x0, x26
   51938:	bl	ca80 <mpfr_init2@plt>
   5193c:	add	x28, sp, #0x170
   51940:	mov	x0, x19
   51944:	mov	x1, x27
   51948:	bl	ca80 <mpfr_init2@plt>
   5194c:	add	x21, sp, #0x190
   51950:	mov	x0, x28
   51954:	mov	x1, x27
   51958:	bl	ca80 <mpfr_init2@plt>
   5195c:	mov	x24, x19
   51960:	mov	x0, x21
   51964:	mov	x1, x27
   51968:	mov	x19, x20
   5196c:	mov	x25, #0x40                  	// #64
   51970:	bl	ca80 <mpfr_init2@plt>
   51974:	b	51b80 <mpfr_li2@@Base+0x14d0>
   51978:	b.le	51bd4 <mpfr_li2@@Base+0x1524>
   5197c:	clz	x20, x20
   51980:	mov	w0, #0x41                  	// #65
   51984:	sub	w20, w0, w20
   51988:	sxtw	x20, w20
   5198c:	ldr	x4, [sp, #320]
   51990:	mov	w3, #0x0                   	// #0
   51994:	mov	x2, x19
   51998:	mov	x1, #0x1                   	// #1
   5199c:	mov	x0, x21
   519a0:	str	x4, [sp, #104]
   519a4:	bl	ca50 <mpfr_ui_sub@plt>
   519a8:	mov	x1, x21
   519ac:	mov	w2, #0x2                   	// #2
   519b0:	mov	x0, x28
   519b4:	bl	c090 <mpfr_log@plt>
   519b8:	mov	x2, x24
   519bc:	mov	x1, x28
   519c0:	mov	w3, #0x0                   	// #0
   519c4:	mov	x0, x28
   519c8:	bl	bd50 <mpfr_mul@plt>
   519cc:	mov	x2, x28
   519d0:	mov	x1, x26
   519d4:	mov	w3, #0x0                   	// #0
   519d8:	mov	x0, x26
   519dc:	bl	c1a0 <mpfr_add@plt>
   519e0:	ldr	x3, [sp, #320]
   519e4:	mov	x1, x24
   519e8:	mov	w2, #0x0                   	// #0
   519ec:	mov	x0, x24
   519f0:	str	x3, [sp, #112]
   519f4:	ldr	x23, [sp, #384]
   519f8:	bl	c400 <mpfr_sqr@plt>
   519fc:	mov	x1, x24
   51a00:	mov	w3, #0x0                   	// #0
   51a04:	mov	x2, #0x2                   	// #2
   51a08:	mov	x0, x24
   51a0c:	bl	c8f0 <mpfr_div_2ui@plt>
   51a10:	mov	x1, x26
   51a14:	mov	x2, x24
   51a18:	mov	w3, #0x0                   	// #0
   51a1c:	mov	x0, x26
   51a20:	bl	c1a0 <mpfr_add@plt>
   51a24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   51a28:	ldr	x1, [x0, #2624]
   51a2c:	add	x0, x0, #0xa40
   51a30:	blr	x1
   51a34:	mov	w2, #0x2                   	// #2
   51a38:	ldr	x3, [sp, #352]
   51a3c:	str	x3, [sp, #120]
   51a40:	ldr	x1, [sp, #200]
   51a44:	ldr	x22, [sp, #320]
   51a48:	add	x1, x1, x0
   51a4c:	mov	x0, x24
   51a50:	bl	c380 <mpfr_cache@plt>
   51a54:	mov	x1, x24
   51a58:	mov	w2, #0x0                   	// #0
   51a5c:	mov	x0, x24
   51a60:	bl	c400 <mpfr_sqr@plt>
   51a64:	mov	x1, x24
   51a68:	mov	w3, #0x0                   	// #0
   51a6c:	mov	x2, #0x6                   	// #6
   51a70:	mov	x0, x24
   51a74:	bl	cc60 <mpfr_div_ui@plt>
   51a78:	mov	x1, x26
   51a7c:	mov	x2, x24
   51a80:	mov	x0, x26
   51a84:	mov	w3, #0x0                   	// #0
   51a88:	bl	c1a0 <mpfr_add@plt>
   51a8c:	ldr	x1, [sp, #320]
   51a90:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   51a94:	cmp	x1, x0
   51a98:	b.le	51b30 <mpfr_li2@@Base+0x1480>
   51a9c:	mov	x0, #0x1                   	// #1
   51aa0:	sub	x23, x0, x23
   51aa4:	ldp	x0, x4, [sp, #104]
   51aa8:	cmp	x23, #0x3
   51aac:	mov	x6, #0x3                   	// #3
   51ab0:	csel	x23, x23, x6, ge  // ge = tcont
   51ab4:	ldr	x2, [sp, #120]
   51ab8:	mov	x3, #0xffffffffffffffff    	// #-1
   51abc:	sub	x0, x20, x0
   51ac0:	add	x2, x2, #0x2
   51ac4:	cmp	x23, x0
   51ac8:	csel	x0, x23, x0, ge  // ge = tcont
   51acc:	add	x0, x0, #0x2
   51ad0:	sub	x0, x0, x4
   51ad4:	cmp	x2, x0
   51ad8:	csel	x0, x2, x0, ge  // ge = tcont
   51adc:	subs	x0, x0, x22
   51ae0:	csel	x0, x0, x3, pl  // pl = nfrst
   51ae4:	add	x0, x0, #0x2
   51ae8:	add	x22, x22, x0
   51aec:	ldr	x2, [sp, #304]
   51af0:	cmp	x22, x6
   51af4:	csel	x22, x22, x6, ge  // ge = tcont
   51af8:	subs	x22, x22, x1
   51afc:	add	x1, x2, x3
   51b00:	ldr	w2, [sp, #208]
   51b04:	csel	x22, x22, x3, pl  // pl = nfrst
   51b08:	ldr	x0, [sp, #328]
   51b0c:	cmp	w2, #0x0
   51b10:	ldr	x2, [sp, #184]
   51b14:	add	x22, x22, #0x2
   51b18:	asr	x1, x1, #6
   51b1c:	cinc	x3, x2, eq  // eq = none
   51b20:	add	x1, x1, #0x1
   51b24:	sub	x2, x27, x22
   51b28:	bl	c370 <mpfr_round_p@plt>
   51b2c:	cbnz	w0, 50cf0 <mpfr_li2@@Base+0x640>
   51b30:	mov	x0, #0xfffffffffffffeff    	// #-257
   51b34:	movk	x0, #0x7fff, lsl #48
   51b38:	sub	x0, x0, x27
   51b3c:	cmp	x0, x25
   51b40:	b.lt	51bec <mpfr_li2@@Base+0x153c>  // b.tstop
   51b44:	add	x27, x27, x25
   51b48:	mov	x0, x26
   51b4c:	mov	x1, x27
   51b50:	bl	bed0 <mpfr_set_prec@plt>
   51b54:	mov	x1, x27
   51b58:	mov	x0, x24
   51b5c:	add	x25, x27, x27, lsr #63
   51b60:	bl	bed0 <mpfr_set_prec@plt>
   51b64:	mov	x1, x27
   51b68:	mov	x0, x28
   51b6c:	bl	bed0 <mpfr_set_prec@plt>
   51b70:	asr	x25, x25, #1
   51b74:	mov	x1, x27
   51b78:	mov	x0, x21
   51b7c:	bl	bed0 <mpfr_set_prec@plt>
   51b80:	mov	x1, x19
   51b84:	mov	w2, #0x3                   	// #3
   51b88:	mov	x0, x24
   51b8c:	bl	c090 <mpfr_log@plt>
   51b90:	mov	x1, x24
   51b94:	mov	w2, #0x0                   	// #0
   51b98:	mov	x0, x24
   51b9c:	bl	bd70 <mpfr_neg@plt>
   51ba0:	mov	x1, x24
   51ba4:	mov	w2, #0x0                   	// #0
   51ba8:	mov	x0, x26
   51bac:	bl	50398 <mpfr_d_div@@Base+0x140>
   51bb0:	mov	x1, x26
   51bb4:	sxtw	x20, w0
   51bb8:	mov	w2, #0x0                   	// #0
   51bbc:	mov	x0, x26
   51bc0:	bl	bd70 <mpfr_neg@plt>
   51bc4:	cmp	w20, #0x0
   51bc8:	cbnz	w20, 51978 <mpfr_li2@@Base+0x12c8>
   51bcc:	mov	x20, #0x1                   	// #1
   51bd0:	b	5198c <mpfr_li2@@Base+0x12dc>
   51bd4:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   51bd8:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   51bdc:	add	x2, x2, #0x440
   51be0:	add	x0, x0, #0x390
   51be4:	mov	w1, #0x1dc                 	// #476
   51be8:	bl	cb40 <mpfr_assert_fail@plt>
   51bec:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   51bf0:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   51bf4:	add	x2, x2, #0x218
   51bf8:	add	x0, x0, #0x390
   51bfc:	mov	w1, #0x1f5                 	// #501
   51c00:	bl	cb40 <mpfr_assert_fail@plt>
   51c04:	ldr	x0, [sp, #176]
   51c08:	mov	x2, #0x0                   	// #0
   51c0c:	mov	x1, #0xffffffffffffffff    	// #-1
   51c10:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   51c14:	tbnz	w0, #31, 51ea4 <mpfr_li2@@Base+0x17f4>
   51c18:	add	x19, sp, #0x150
   51c1c:	mov	x1, x27
   51c20:	mov	x0, x19
   51c24:	add	x28, sp, #0x170
   51c28:	stp	x25, x26, [sp, #64]
   51c2c:	bl	ca80 <mpfr_init2@plt>
   51c30:	mov	x0, x28
   51c34:	mov	x1, x27
   51c38:	add	x21, sp, #0x190
   51c3c:	bl	ca80 <mpfr_init2@plt>
   51c40:	mov	x22, #0x40                  	// #64
   51c44:	mov	x0, x21
   51c48:	mov	x1, x27
   51c4c:	mov	w26, #0x41                  	// #65
   51c50:	mov	x25, #0x8000000000000003    	// #-9223372036854775805
   51c54:	bl	ca80 <mpfr_init2@plt>
   51c58:	b	51d48 <mpfr_li2@@Base+0x1698>
   51c5c:	b.le	51db8 <mpfr_li2@@Base+0x1708>
   51c60:	clz	x20, x20
   51c64:	sub	w20, w26, w20
   51c68:	sxtw	x20, w20
   51c6c:	mov	x1, x28
   51c70:	mov	w2, #0x0                   	// #0
   51c74:	mov	x0, x28
   51c78:	ldr	x24, [sp, #352]
   51c7c:	bl	c400 <mpfr_sqr@plt>
   51c80:	mov	x1, x28
   51c84:	mov	w3, #0x0                   	// #0
   51c88:	mov	x2, #0x2                   	// #2
   51c8c:	mov	x0, x28
   51c90:	bl	c8f0 <mpfr_div_2ui@plt>
   51c94:	mov	x2, x28
   51c98:	mov	x1, x19
   51c9c:	mov	x0, x19
   51ca0:	mov	w3, #0x0                   	// #0
   51ca4:	bl	bb70 <mpfr_sub@plt>
   51ca8:	ldr	x0, [sp, #352]
   51cac:	cmp	x0, x25
   51cb0:	b.le	51d04 <mpfr_li2@@Base+0x1654>
   51cb4:	neg	x23, x23
   51cb8:	sub	x2, x20, x24
   51cbc:	cmp	x23, #0x3
   51cc0:	mov	x0, #0x3                   	// #3
   51cc4:	csel	x23, x23, x0, ge  // ge = tcont
   51cc8:	cmp	x23, x2
   51ccc:	ldr	x1, [sp, #336]
   51cd0:	csel	x23, x23, x2, ge  // ge = tcont
   51cd4:	ldr	w2, [sp, #208]
   51cd8:	ldr	x0, [sp, #360]
   51cdc:	cmp	w2, #0x0
   51ce0:	sub	x1, x1, #0x1
   51ce4:	add	x2, x23, #0x2
   51ce8:	ldr	x3, [sp, #184]
   51cec:	asr	x1, x1, #6
   51cf0:	sub	x2, x27, x2
   51cf4:	add	x1, x1, #0x1
   51cf8:	cinc	x3, x3, eq  // eq = none
   51cfc:	bl	c370 <mpfr_round_p@plt>
   51d00:	cbnz	w0, 51dd0 <mpfr_li2@@Base+0x1720>
   51d04:	mov	x0, #0xfffffffffffffeff    	// #-257
   51d08:	movk	x0, #0x7fff, lsl #48
   51d0c:	sub	x0, x0, x27
   51d10:	cmp	x0, x22
   51d14:	b.lt	51da0 <mpfr_li2@@Base+0x16f0>  // b.tstop
   51d18:	add	x27, x27, x22
   51d1c:	mov	x0, x19
   51d20:	mov	x1, x27
   51d24:	bl	bed0 <mpfr_set_prec@plt>
   51d28:	add	x22, x27, x27, lsr #63
   51d2c:	mov	x1, x27
   51d30:	mov	x0, x28
   51d34:	bl	bed0 <mpfr_set_prec@plt>
   51d38:	asr	x22, x22, #1
   51d3c:	mov	x1, x27
   51d40:	mov	x0, x21
   51d44:	bl	bed0 <mpfr_set_prec@plt>
   51d48:	ldr	x1, [sp, #176]
   51d4c:	mov	w2, #0x0                   	// #0
   51d50:	mov	x0, x21
   51d54:	bl	bd70 <mpfr_neg@plt>
   51d58:	mov	x1, x21
   51d5c:	mov	w2, #0x0                   	// #0
   51d60:	mov	x0, x28
   51d64:	bl	c700 <mpfr_log1p@plt>
   51d68:	mov	x1, x28
   51d6c:	mov	w2, #0x0                   	// #0
   51d70:	mov	x0, x19
   51d74:	bl	50398 <mpfr_d_div@@Base+0x140>
   51d78:	mov	x1, x19
   51d7c:	sxtw	x20, w0
   51d80:	mov	w2, #0x0                   	// #0
   51d84:	mov	x0, x19
   51d88:	bl	bd70 <mpfr_neg@plt>
   51d8c:	cmp	w20, #0x0
   51d90:	ldr	x23, [sp, #384]
   51d94:	cbnz	w20, 51c5c <mpfr_li2@@Base+0x15ac>
   51d98:	mov	x20, #0x1                   	// #1
   51d9c:	b	51c6c <mpfr_li2@@Base+0x15bc>
   51da0:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   51da4:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   51da8:	add	x2, x2, #0x218
   51dac:	add	x0, x0, #0x390
   51db0:	mov	w1, #0x21e                 	// #542
   51db4:	bl	cb40 <mpfr_assert_fail@plt>
   51db8:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   51dbc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   51dc0:	add	x2, x2, #0x440
   51dc4:	add	x0, x0, #0x390
   51dc8:	mov	w1, #0x214                 	// #532
   51dcc:	bl	cb40 <mpfr_assert_fail@plt>
   51dd0:	ldr	w3, [sp, #344]
   51dd4:	mov	x1, x19
   51dd8:	ldr	x20, [sp, #192]
   51ddc:	ldr	w23, [sp, #208]
   51de0:	mov	x0, x20
   51de4:	mov	w2, w23
   51de8:	bl	c6a0 <mpfr_set4@plt>
   51dec:	mov	x2, x21
   51df0:	mov	w22, w0
   51df4:	mov	x1, x28
   51df8:	mov	x0, x19
   51dfc:	mov	x3, #0x0                   	// #0
   51e00:	bl	c1b0 <mpfr_clears@plt>
   51e04:	b	50d28 <mpfr_li2@@Base+0x678>
   51e08:	ldr	w3, [sp, #376]
   51e0c:	mov	x1, x28
   51e10:	ldr	x0, [sp, #192]
   51e14:	ldr	w19, [sp, #208]
   51e18:	mov	w2, w19
   51e1c:	bl	c6a0 <mpfr_set4@plt>
   51e20:	cmp	w19, #0x5
   51e24:	mov	w22, w0
   51e28:	mov	x0, x28
   51e2c:	b.eq	52330 <mpfr_li2@@Base+0x1c80>  // b.none
   51e30:	bl	c070 <mpfr_clear@plt>
   51e34:	mov	x0, x21
   51e38:	bl	c070 <mpfr_clear@plt>
   51e3c:	cbz	w22, 52398 <mpfr_li2@@Base+0x1ce8>
   51e40:	ldr	x2, [sp, #200]
   51e44:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   51e48:	ldr	x1, [x0, #2576]
   51e4c:	add	x0, x0, #0xa10
   51e50:	blr	x1
   51e54:	ldr	w1, [sp, #212]
   51e58:	str	w1, [x2, x0]
   51e5c:	ldr	x0, [sp, #192]
   51e60:	ldr	x1, [x0, #16]
   51e64:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   51e68:	ldr	x3, [x0, #2512]
   51e6c:	add	x0, x0, #0x9d0
   51e70:	blr	x3
   51e74:	ldr	x3, [sp, #216]
   51e78:	str	x3, [x2, x0]
   51e7c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   51e80:	ldr	x4, [x0, #2544]
   51e84:	add	x0, x0, #0x9f0
   51e88:	blr	x4
   51e8c:	ldr	x4, [sp, #224]
   51e90:	str	x4, [x2, x0]
   51e94:	cmp	x4, x1
   51e98:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   51e9c:	b.gt	51778 <mpfr_li2@@Base+0x10c8>
   51ea0:	b	517a4 <mpfr_li2@@Base+0x10f4>
   51ea4:	ldr	x0, [sp, #176]
   51ea8:	mov	x2, #0x0                   	// #0
   51eac:	mov	x1, #0xfffffffffffffff9    	// #-7
   51eb0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   51eb4:	cmp	w0, #0x0
   51eb8:	b.le	523a4 <mpfr_li2@@Base+0x1cf4>
   51ebc:	add	x28, sp, #0x170
   51ec0:	add	x21, sp, #0x190
   51ec4:	stp	x25, x26, [sp, #64]
   51ec8:	add	x20, sp, #0x110
   51ecc:	mov	x1, x27
   51ed0:	mov	x0, x20
   51ed4:	add	x26, sp, #0x130
   51ed8:	bl	ca80 <mpfr_init2@plt>
   51edc:	mov	x0, x26
   51ee0:	mov	x1, x27
   51ee4:	add	x19, sp, #0x150
   51ee8:	bl	ca80 <mpfr_init2@plt>
   51eec:	mov	x0, x19
   51ef0:	mov	x1, x27
   51ef4:	bl	ca80 <mpfr_init2@plt>
   51ef8:	mov	x25, x20
   51efc:	mov	x1, x27
   51f00:	mov	x0, x28
   51f04:	bl	ca80 <mpfr_init2@plt>
   51f08:	mov	x24, #0x40                  	// #64
   51f0c:	mov	x1, x27
   51f10:	mov	x0, x21
   51f14:	bl	ca80 <mpfr_init2@plt>
   51f18:	ldr	x23, [sp, #176]
   51f1c:	mov	w3, #0x0                   	// #0
   51f20:	mov	x2, x23
   51f24:	mov	x1, #0x1                   	// #1
   51f28:	mov	x0, x21
   51f2c:	bl	c2f0 <mpfr_ui_div@plt>
   51f30:	mov	x1, x21
   51f34:	mov	w2, #0x0                   	// #0
   51f38:	mov	x0, x21
   51f3c:	bl	bd70 <mpfr_neg@plt>
   51f40:	mov	x1, x21
   51f44:	mov	w2, #0x0                   	// #0
   51f48:	mov	x0, x26
   51f4c:	bl	c700 <mpfr_log1p@plt>
   51f50:	mov	x1, x26
   51f54:	mov	w2, #0x0                   	// #0
   51f58:	mov	x0, x25
   51f5c:	bl	50398 <mpfr_d_div@@Base+0x140>
   51f60:	mov	w3, #0x0                   	// #0
   51f64:	mov	w22, w0
   51f68:	mov	x2, x23
   51f6c:	mov	x1, #0x1                   	// #1
   51f70:	mov	x0, x21
   51f74:	bl	ca50 <mpfr_ui_sub@plt>
   51f78:	mov	x1, x21
   51f7c:	mov	w2, #0x2                   	// #2
   51f80:	mov	x0, x26
   51f84:	bl	c090 <mpfr_log@plt>
   51f88:	mov	x1, x23
   51f8c:	mov	w2, #0x0                   	// #0
   51f90:	mov	x0, x21
   51f94:	bl	bd70 <mpfr_neg@plt>
   51f98:	mov	x1, x21
   51f9c:	mov	w2, #0x2                   	// #2
   51fa0:	mov	x0, x19
   51fa4:	bl	c090 <mpfr_log@plt>
   51fa8:	mov	x2, x26
   51fac:	mov	x1, x19
   51fb0:	mov	w3, #0x0                   	// #0
   51fb4:	mov	x0, x28
   51fb8:	bl	bd50 <mpfr_mul@plt>
   51fbc:	mov	x1, x28
   51fc0:	mov	w3, #0x0                   	// #0
   51fc4:	mov	x2, #0x1                   	// #1
   51fc8:	mov	x0, x28
   51fcc:	bl	c8f0 <mpfr_div_2ui@plt>
   51fd0:	mov	x2, x28
   51fd4:	mov	x1, x25
   51fd8:	mov	x0, x25
   51fdc:	mov	w3, #0x0                   	// #0
   51fe0:	bl	bb70 <mpfr_sub@plt>
   51fe4:	cmp	w22, #0x0
   51fe8:	cbz	w22, 52224 <mpfr_li2@@Base+0x1b74>
   51fec:	b.le	5220c <mpfr_li2@@Base+0x1b5c>
   51ff0:	sxtw	x0, w22
   51ff4:	mov	w1, #0x41                  	// #65
   51ff8:	clz	x0, x0
   51ffc:	mov	x20, #0x4                   	// #4
   52000:	sub	w0, w1, w0
   52004:	ldr	x22, [sp, #288]
   52008:	sxtw	x0, w0
   5200c:	sub	x0, x0, x22
   52010:	cmp	x0, #0x2
   52014:	b.le	5201c <mpfr_li2@@Base+0x196c>
   52018:	add	x20, x0, #0x1
   5201c:	mov	x1, x19
   52020:	mov	w2, #0x0                   	// #0
   52024:	mov	x0, x28
   52028:	bl	c400 <mpfr_sqr@plt>
   5202c:	mov	x1, x28
   52030:	mov	w3, #0x0                   	// #0
   52034:	mov	x2, #0x2                   	// #2
   52038:	mov	x0, x28
   5203c:	bl	c8f0 <mpfr_div_2ui@plt>
   52040:	mov	x2, x28
   52044:	mov	x1, x25
   52048:	mov	w3, #0x0                   	// #0
   5204c:	mov	x0, x25
   52050:	bl	bb70 <mpfr_sub@plt>
   52054:	ldr	x6, [sp, #288]
   52058:	mov	x1, x26
   5205c:	ldr	x3, [sp, #384]
   52060:	mov	w2, #0x0                   	// #0
   52064:	mov	x0, x28
   52068:	stp	x6, x3, [sp, #112]
   5206c:	bl	c400 <mpfr_sqr@plt>
   52070:	mov	x1, x28
   52074:	mov	w3, #0x0                   	// #0
   52078:	mov	x2, #0x2                   	// #2
   5207c:	mov	x0, x28
   52080:	bl	c8f0 <mpfr_div_2ui@plt>
   52084:	mov	x1, x25
   52088:	mov	x2, x28
   5208c:	mov	w3, #0x0                   	// #0
   52090:	mov	x0, x25
   52094:	bl	c1a0 <mpfr_add@plt>
   52098:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5209c:	ldr	x1, [x0, #2624]
   520a0:	add	x0, x0, #0xa40
   520a4:	blr	x1
   520a8:	mov	w2, #0x2                   	// #2
   520ac:	ldr	x5, [sp, #288]
   520b0:	str	x5, [sp, #104]
   520b4:	ldr	x3, [sp, #384]
   520b8:	str	x3, [sp, #128]
   520bc:	ldr	x1, [sp, #200]
   520c0:	add	x1, x1, x0
   520c4:	mov	x0, x28
   520c8:	bl	c380 <mpfr_cache@plt>
   520cc:	mov	x1, x28
   520d0:	mov	w2, #0x0                   	// #0
   520d4:	mov	x0, x28
   520d8:	bl	c400 <mpfr_sqr@plt>
   520dc:	mov	x1, x28
   520e0:	mov	w3, #0x0                   	// #0
   520e4:	mov	x2, #0x6                   	// #6
   520e8:	mov	x0, x28
   520ec:	bl	cc60 <mpfr_div_ui@plt>
   520f0:	mov	x2, x28
   520f4:	mov	x1, x25
   520f8:	mov	x0, x25
   520fc:	mov	w3, #0x0                   	// #0
   52100:	bl	bb70 <mpfr_sub@plt>
   52104:	ldr	x2, [sp, #288]
   52108:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5210c:	ldp	x5, x6, [sp, #104]
   52110:	cmp	x2, x0
   52114:	b.le	521ac <mpfr_li2@@Base+0x1afc>
   52118:	ldr	x0, [sp, #120]
   5211c:	add	x7, x20, x22
   52120:	mov	x3, #0xffffffffffffffff    	// #-1
   52124:	add	x1, x0, #0x3
   52128:	cmp	x1, x7
   5212c:	csel	x1, x1, x7, ge  // ge = tcont
   52130:	mov	x7, #0x3                   	// #3
   52134:	subs	x1, x1, x6
   52138:	ldr	x0, [sp, #128]
   5213c:	csel	x1, x1, x3, pl  // pl = nfrst
   52140:	add	x1, x1, #0x2
   52144:	add	x1, x6, x1
   52148:	add	x0, x0, #0x3
   5214c:	cmp	x0, x1
   52150:	csel	x0, x0, x1, ge  // ge = tcont
   52154:	subs	x0, x0, x5
   52158:	csel	x0, x0, x3, pl  // pl = nfrst
   5215c:	add	x0, x0, #0x2
   52160:	add	x0, x5, x0
   52164:	cmp	x0, x7
   52168:	ldr	x5, [sp, #272]
   5216c:	csel	x0, x0, x7, ge  // ge = tcont
   52170:	subs	x1, x0, x2
   52174:	csel	x1, x1, x3, pl  // pl = nfrst
   52178:	add	x5, x5, x3
   5217c:	ldr	w3, [sp, #208]
   52180:	add	x1, x1, #0x2
   52184:	ldr	x0, [sp, #296]
   52188:	cmp	w3, #0x0
   5218c:	ldr	x3, [sp, #184]
   52190:	add	x2, x2, x1
   52194:	asr	x1, x5, #6
   52198:	sub	x2, x27, x2
   5219c:	add	x1, x1, #0x1
   521a0:	cinc	x3, x3, eq  // eq = none
   521a4:	bl	c370 <mpfr_round_p@plt>
   521a8:	cbnz	w0, 52258 <mpfr_li2@@Base+0x1ba8>
   521ac:	mov	x0, #0xfffffffffffffeff    	// #-257
   521b0:	movk	x0, #0x7fff, lsl #48
   521b4:	sub	x0, x0, x27
   521b8:	cmp	x0, x24
   521bc:	b.lt	52240 <mpfr_li2@@Base+0x1b90>  // b.tstop
   521c0:	add	x27, x27, x24
   521c4:	mov	x0, x25
   521c8:	mov	x1, x27
   521cc:	bl	bed0 <mpfr_set_prec@plt>
   521d0:	mov	x1, x27
   521d4:	mov	x0, x26
   521d8:	bl	bed0 <mpfr_set_prec@plt>
   521dc:	add	x24, x27, x27, lsr #63
   521e0:	mov	x1, x27
   521e4:	mov	x0, x19
   521e8:	bl	bed0 <mpfr_set_prec@plt>
   521ec:	asr	x24, x24, #1
   521f0:	mov	x1, x27
   521f4:	mov	x0, x28
   521f8:	bl	bed0 <mpfr_set_prec@plt>
   521fc:	mov	x1, x27
   52200:	mov	x0, x21
   52204:	bl	bed0 <mpfr_set_prec@plt>
   52208:	b	51f1c <mpfr_li2@@Base+0x186c>
   5220c:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   52210:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   52214:	add	x2, x2, #0x598
   52218:	add	x0, x0, #0x390
   5221c:	mov	w1, #0x24d                 	// #589
   52220:	bl	cb40 <mpfr_assert_fail@plt>
   52224:	ldr	x22, [sp, #288]
   52228:	mov	x0, #0x1                   	// #1
   5222c:	mov	x20, #0x4                   	// #4
   52230:	sub	x0, x0, x22
   52234:	cmp	x0, #0x2
   52238:	b.gt	52018 <mpfr_li2@@Base+0x1968>
   5223c:	b	5201c <mpfr_li2@@Base+0x196c>
   52240:	adrp	x2, 64000 <mpfr_l2b_2_0__tab@@Base+0x3a10>
   52244:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   52248:	add	x2, x2, #0x218
   5224c:	add	x0, x0, #0x390
   52250:	mov	w1, #0x266                 	// #614
   52254:	bl	cb40 <mpfr_assert_fail@plt>
   52258:	ldr	w2, [sp, #208]
   5225c:	mov	x1, x25
   52260:	ldr	w3, [sp, #280]
   52264:	ldr	x23, [sp, #192]
   52268:	mov	x0, x23
   5226c:	bl	c6a0 <mpfr_set4@plt>
   52270:	mov	x4, x21
   52274:	mov	x3, x28
   52278:	mov	x1, x26
   5227c:	mov	x2, x19
   52280:	mov	w22, w0
   52284:	mov	x5, #0x0                   	// #0
   52288:	mov	x0, x25
   5228c:	bl	c1b0 <mpfr_clears@plt>
   52290:	ldr	x2, [sp, #200]
   52294:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   52298:	ldr	x1, [x0, #2576]
   5229c:	add	x0, x0, #0xa10
   522a0:	blr	x1
   522a4:	ldr	w1, [sp, #212]
   522a8:	str	w1, [x2, x0]
   522ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   522b0:	ldr	x3, [x0, #2512]
   522b4:	add	x0, x0, #0x9d0
   522b8:	blr	x3
   522bc:	ldr	x3, [sp, #216]
   522c0:	str	x3, [x2, x0]
   522c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   522c8:	ldr	x4, [x0, #2544]
   522cc:	add	x0, x0, #0x9f0
   522d0:	blr	x4
   522d4:	ldr	x1, [x23, #16]
   522d8:	ldr	x4, [sp, #224]
   522dc:	str	x4, [x2, x0]
   522e0:	cmp	x4, x1
   522e4:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   522e8:	b.le	52360 <mpfr_li2@@Base+0x1cb0>
   522ec:	ldp	x25, x26, [sp, #64]
   522f0:	mov	w1, w22
   522f4:	ldr	w2, [sp, #208]
   522f8:	ldr	x0, [sp, #192]
   522fc:	bl	cb30 <mpfr_check_range@plt>
   52300:	mov	w22, w0
   52304:	ldp	x19, x20, [sp, #16]
   52308:	ldp	x23, x24, [sp, #48]
   5230c:	ldp	x27, x28, [sp, #80]
   52310:	b	50ca8 <mpfr_li2@@Base+0x5f8>
   52314:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   52318:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5231c:	add	x2, x2, #0x418
   52320:	add	x0, x0, #0x390
   52324:	mov	w1, #0x90                  	// #144
   52328:	bl	cb40 <mpfr_assert_fail@plt>
   5232c:	b	51074 <mpfr_li2@@Base+0x9c4>
   52330:	bl	c070 <mpfr_clear@plt>
   52334:	mov	w22, #0x1                   	// #1
   52338:	mov	x0, x21
   5233c:	bl	c070 <mpfr_clear@plt>
   52340:	b	51e40 <mpfr_li2@@Base+0x1790>
   52344:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   52348:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5234c:	add	x2, x2, #0x3a8
   52350:	add	x0, x0, #0x390
   52354:	mov	w1, #0x82                  	// #130
   52358:	bl	cb40 <mpfr_assert_fail@plt>
   5235c:	b	50fc8 <mpfr_li2@@Base+0x918>
   52360:	cbz	w22, 50db8 <mpfr_li2@@Base+0x708>
   52364:	ldp	x25, x26, [sp, #64]
   52368:	ldr	w0, [sp, #212]
   5236c:	ldp	x19, x20, [sp, #16]
   52370:	orr	w1, w0, #0x8
   52374:	ldp	x23, x24, [sp, #48]
   52378:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5237c:	ldr	x2, [x0, #2576]
   52380:	add	x0, x0, #0xa10
   52384:	blr	x2
   52388:	ldr	x2, [sp, #200]
   5238c:	ldp	x27, x28, [sp, #80]
   52390:	str	w1, [x2, x0]
   52394:	b	50ca8 <mpfr_li2@@Base+0x5f8>
   52398:	stp	x23, x24, [sp, #48]
   5239c:	stp	x25, x26, [sp, #64]
   523a0:	b	510f8 <mpfr_li2@@Base+0xa48>
   523a4:	ldr	x0, [sp, #192]
   523a8:	mov	x2, #0x0                   	// #0
   523ac:	mov	x1, #0xfffffffffffffff9    	// #-7
   523b0:	ldr	x19, [x0]
   523b4:	ldr	x0, [sp, #176]
   523b8:	add	x20, x19, #0x14
   523bc:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   523c0:	cmp	w0, #0x0
   523c4:	b.gt	524d8 <mpfr_li2@@Base+0x1e28>
   523c8:	add	x28, sp, #0x170
   523cc:	add	x21, sp, #0x190
   523d0:	mov	x1, x20
   523d4:	mov	x0, x28
   523d8:	bl	ca80 <mpfr_init2@plt>
   523dc:	mov	x1, x20
   523e0:	mov	x0, x21
   523e4:	bl	ca80 <mpfr_init2@plt>
   523e8:	ldr	x1, [sp, #176]
   523ec:	mov	w2, #0x0                   	// #0
   523f0:	mov	x0, x28
   523f4:	bl	bd70 <mpfr_neg@plt>
   523f8:	mov	x1, x28
   523fc:	mov	w2, #0x0                   	// #0
   52400:	mov	x0, x28
   52404:	bl	c090 <mpfr_log@plt>
   52408:	mov	x1, x28
   5240c:	mov	w2, #0x0                   	// #0
   52410:	mov	x0, x28
   52414:	bl	c400 <mpfr_sqr@plt>
   52418:	mov	x1, x28
   5241c:	mov	w3, #0x0                   	// #0
   52420:	mov	x2, #0x1                   	// #1
   52424:	mov	x0, x28
   52428:	bl	c8f0 <mpfr_div_2ui@plt>
   5242c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   52430:	ldr	x1, [x0, #2624]
   52434:	add	x0, x0, #0xa40
   52438:	blr	x1
   5243c:	mov	w2, #0x0                   	// #0
   52440:	ldr	x1, [sp, #200]
   52444:	add	x1, x1, x0
   52448:	mov	x0, x21
   5244c:	bl	c380 <mpfr_cache@plt>
   52450:	mov	x1, x21
   52454:	mov	w2, #0x0                   	// #0
   52458:	mov	x0, x21
   5245c:	bl	c400 <mpfr_sqr@plt>
   52460:	mov	x1, x21
   52464:	mov	x0, x21
   52468:	mov	w3, #0x0                   	// #0
   5246c:	mov	x2, #0x6                   	// #6
   52470:	bl	cc60 <mpfr_div_ui@plt>
   52474:	ldr	x1, [sp, #384]
   52478:	ldr	x0, [sp, #416]
   5247c:	cmp	x1, x0
   52480:	b.lt	525c0 <mpfr_li2@@Base+0x1f10>  // b.tstop
   52484:	mov	x2, x21
   52488:	mov	x1, x28
   5248c:	mov	w3, #0x0                   	// #0
   52490:	mov	x0, x28
   52494:	bl	c1a0 <mpfr_add@plt>
   52498:	ldr	x3, [sp, #176]
   5249c:	add	x0, x19, #0x12
   524a0:	ldr	x1, [sp, #384]
   524a4:	mov	x2, #0x4                   	// #4
   524a8:	ldr	x3, [x3, #16]
   524ac:	sub	x0, x0, x1
   524b0:	movk	x2, #0x8000, lsl #48
   524b4:	cmp	x3, x0
   524b8:	ccmp	x1, x2, #0x1, ge  // ge = tcont
   524bc:	b.ge	524f4 <mpfr_li2@@Base+0x1e44>  // b.tcont
   524c0:	mov	x0, x28
   524c4:	stp	x25, x26, [sp, #64]
   524c8:	bl	c070 <mpfr_clear@plt>
   524cc:	mov	x0, x21
   524d0:	bl	c070 <mpfr_clear@plt>
   524d4:	b	51ec8 <mpfr_li2@@Base+0x1818>
   524d8:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   524dc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   524e0:	add	x2, x2, #0x450
   524e4:	add	x0, x0, #0x390
   524e8:	mov	w1, #0xb4                  	// #180
   524ec:	bl	cb40 <mpfr_assert_fail@plt>
   524f0:	b	523c8 <mpfr_li2@@Base+0x1d18>
   524f4:	ldr	x2, [sp, #192]
   524f8:	ldr	w0, [sp, #208]
   524fc:	ldr	x1, [sp, #368]
   52500:	cmp	w0, #0x0
   52504:	ldr	x0, [sp, #392]
   52508:	sub	x1, x1, #0x1
   5250c:	ldr	x3, [x2]
   52510:	asr	x1, x1, #6
   52514:	add	x1, x1, #0x1
   52518:	add	x2, x19, #0x10
   5251c:	cinc	x3, x3, eq  // eq = none
   52520:	bl	c370 <mpfr_round_p@plt>
   52524:	cbz	w0, 524c0 <mpfr_li2@@Base+0x1e10>
   52528:	ldr	x0, [sp, #192]
   5252c:	mov	x1, x28
   52530:	ldr	w19, [sp, #208]
   52534:	mov	w2, w19
   52538:	bl	bd70 <mpfr_neg@plt>
   5253c:	cmp	w19, #0x5
   52540:	mov	w22, w0
   52544:	mov	x0, x28
   52548:	b.eq	525e4 <mpfr_li2@@Base+0x1f34>  // b.none
   5254c:	bl	c070 <mpfr_clear@plt>
   52550:	mov	x0, x21
   52554:	bl	c070 <mpfr_clear@plt>
   52558:	cbz	w22, 525dc <mpfr_li2@@Base+0x1f2c>
   5255c:	ldr	x2, [sp, #200]
   52560:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   52564:	ldr	x1, [x0, #2576]
   52568:	add	x0, x0, #0xa10
   5256c:	blr	x1
   52570:	ldr	w1, [sp, #212]
   52574:	str	w1, [x2, x0]
   52578:	ldr	x0, [sp, #192]
   5257c:	ldr	x1, [x0, #16]
   52580:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   52584:	ldr	x3, [x0, #2512]
   52588:	add	x0, x0, #0x9d0
   5258c:	blr	x3
   52590:	ldr	x3, [sp, #216]
   52594:	str	x3, [x2, x0]
   52598:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5259c:	ldr	x4, [x0, #2544]
   525a0:	add	x0, x0, #0x9f0
   525a4:	blr	x4
   525a8:	ldr	x4, [sp, #224]
   525ac:	str	x4, [x2, x0]
   525b0:	cmp	x3, x1
   525b4:	ccmp	x4, x1, #0x1, le
   525b8:	b.lt	522f0 <mpfr_li2@@Base+0x1c40>  // b.tstop
   525bc:	b	52368 <mpfr_li2@@Base+0x1cb8>
   525c0:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   525c4:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   525c8:	add	x2, x2, #0x570
   525cc:	add	x0, x0, #0x390
   525d0:	mov	w1, #0xc0                  	// #192
   525d4:	bl	cb40 <mpfr_assert_fail@plt>
   525d8:	b	52484 <mpfr_li2@@Base+0x1dd4>
   525dc:	stp	x25, x26, [sp, #64]
   525e0:	b	51ec8 <mpfr_li2@@Base+0x1818>
   525e4:	bl	c070 <mpfr_clear@plt>
   525e8:	mov	w22, #0x1                   	// #1
   525ec:	mov	x0, x21
   525f0:	bl	c070 <mpfr_clear@plt>
   525f4:	b	5255c <mpfr_li2@@Base+0x1eac>
   525f8:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   525fc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   52600:	add	x2, x2, #0x398
   52604:	add	x0, x0, #0x390
   52608:	mov	w1, #0x106                 	// #262
   5260c:	stp	x23, x24, [sp, #48]
   52610:	stp	x25, x26, [sp, #64]
   52614:	stp	x27, x28, [sp, #80]
   52618:	bl	cb40 <mpfr_assert_fail@plt>
   5261c:	nop
   52620:	stp	x29, x30, [sp, #-192]!
   52624:	mov	x12, x2
   52628:	mov	w9, w4
   5262c:	mov	x29, sp
   52630:	stp	x23, x24, [sp, #48]
   52634:	mov	x23, x1
   52638:	sub	x1, x3, #0x1
   5263c:	sub	x6, x23, #0x1
   52640:	stp	x19, x20, [sp, #16]
   52644:	asr	x1, x1, #6
   52648:	stp	x21, x22, [sp, #32]
   5264c:	add	x14, x1, #0x1
   52650:	mov	x19, x0
   52654:	stp	x25, x26, [sp, #64]
   52658:	asr	x25, x6, #6
   5265c:	mov	x2, x14
   52660:	stp	x27, x28, [sp, #80]
   52664:	cmp	x25, x1
   52668:	add	x24, x25, #0x1
   5266c:	b.lt	52d58 <mpfr_li2@@Base+0x26a8>  // b.tstop
   52670:	cmp	x23, #0xb
   52674:	b.eq	5297c <mpfr_li2@@Base+0x22cc>  // b.none
   52678:	cmp	x23, #0x11
   5267c:	b.gt	528e4 <mpfr_li2@@Base+0x2234>
   52680:	mov	x0, #0x2                   	// #2
   52684:	mov	x15, #0x1                   	// #1
   52688:	mov	x21, #0xc                   	// #12
   5268c:	mov	x28, #0x16                  	// #22
   52690:	mov	x1, #0xb                   	// #11
   52694:	str	x0, [x29, #96]
   52698:	mov	x0, #0x17                  	// #23
   5269c:	stp	x15, x25, [x29, #160]
   526a0:	sxtw	x20, w9
   526a4:	ldr	x3, [x29, #168]
   526a8:	add	x21, x20, x21
   526ac:	add	x20, x20, x0
   526b0:	stp	x15, x14, [x29, #104]
   526b4:	sub	x20, x20, #0x1
   526b8:	lsl	x4, x3, #3
   526bc:	sub	x3, x21, #0x1
   526c0:	asr	x0, x20, #6
   526c4:	add	x22, x19, x4
   526c8:	asr	x3, x3, #6
   526cc:	add	x27, x0, #0x1
   526d0:	add	x3, x3, #0x1
   526d4:	sub	x21, x21, #0x3
   526d8:	cmp	x14, x3
   526dc:	str	x12, [x29, #120]
   526e0:	csel	x3, x14, x3, le
   526e4:	str	w9, [x29, #128]
   526e8:	sub	x2, x2, x3
   526ec:	stp	x0, x4, [x29, #144]
   526f0:	lsl	x3, x3, #6
   526f4:	add	x2, x12, x2, lsl #3
   526f8:	mov	x0, x22
   526fc:	mov	w4, w9
   52700:	bl	52620 <mpfr_li2@@Base+0x1f70>
   52704:	ldr	x0, [x29, #160]
   52708:	asr	x21, x21, #6
   5270c:	sub	x26, x27, x21
   52710:	str	xzr, [x29, #184]
   52714:	add	x0, x26, x0
   52718:	str	x0, [x29, #136]
   5271c:	ldr	w9, [x29, #128]
   52720:	lsl	x1, x0, #3
   52724:	cmp	x1, #0x4, lsl #12
   52728:	ldp	x15, x14, [x29, #104]
   5272c:	ldr	x12, [x29, #120]
   52730:	b.hi	52d74 <mpfr_li2@@Base+0x26c4>  // b.pmore
   52734:	add	x1, x1, #0xf
   52738:	and	x1, x1, #0xfffffffffffffff0
   5273c:	sub	sp, sp, x1
   52740:	mov	x20, sp
   52744:	cmp	x28, #0x40
   52748:	b.gt	529e4 <mpfr_li2@@Base+0x2334>
   5274c:	ldr	w0, [x19, #4]
   52750:	add	x28, x20, #0x8
   52754:	mul	x0, x0, x0
   52758:	str	x0, [x20, #8]
   5275c:	add	x10, x14, x15
   52760:	lsl	x1, x10, #3
   52764:	cmp	x1, #0x4, lsl #12
   52768:	b.hi	52d9c <mpfr_li2@@Base+0x26ec>  // b.pmore
   5276c:	add	x1, x1, #0xf
   52770:	and	x1, x1, #0xfffffffffffffff0
   52774:	sub	sp, sp, x1
   52778:	mov	x13, sp
   5277c:	cmp	x15, #0x1
   52780:	b.eq	52bf4 <mpfr_li2@@Base+0x2544>  // b.none
   52784:	mov	x0, x13
   52788:	mov	x4, x14
   5278c:	mov	x3, x12
   52790:	mov	x2, x15
   52794:	mov	x1, x28
   52798:	str	w9, [x29, #112]
   5279c:	stp	x10, x13, [x29, #120]
   527a0:	bl	c7a0 <__gmpn_mul@plt>
   527a4:	ldr	w9, [x29, #112]
   527a8:	ldp	x10, x13, [x29, #120]
   527ac:	sub	x4, x10, x27
   527b0:	lsl	x3, x27, #3
   527b4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   527b8:	sub	x3, x3, #0x8
   527bc:	add	x1, x13, x4, lsl #3
   527c0:	lsr	x2, x0, x9
   527c4:	ldr	x0, [x1, x3]
   527c8:	ands	x28, x0, x2
   527cc:	b.ne	52b04 <mpfr_li2@@Base+0x2454>  // b.any
   527d0:	orr	x0, x0, x2
   527d4:	orr	x0, x0, #0x8000000000000000
   527d8:	str	x0, [x1, x3]
   527dc:	ldr	x0, [x29, #144]
   527e0:	cbz	x0, 52df0 <mpfr_li2@@Base+0x2740>
   527e4:	sub	x0, x10, x0
   527e8:	lsr	x3, x27, #1
   527ec:	mov	x2, #0x0                   	// #0
   527f0:	add	x0, x13, x0, lsl #3
   527f4:	lsl	x3, x3, #4
   527f8:	sub	x0, x0, #0x8
   527fc:	nop
   52800:	ldr	q0, [x0, x2]
   52804:	mvn	v0.16b, v0.16b
   52808:	str	q0, [x0, x2]
   5280c:	add	x2, x2, #0x10
   52810:	cmp	x3, x2
   52814:	b.ne	52800 <mpfr_li2@@Base+0x2150>  // b.any
   52818:	and	x0, x27, #0xfffffffffffffffe
   5281c:	tbz	w27, #0, 5282c <mpfr_li2@@Base+0x217c>
   52820:	ldr	x2, [x1, x0, lsl #3]
   52824:	mvn	x2, x2
   52828:	str	x2, [x1, x0, lsl #3]
   5282c:	cmp	x26, #0x1
   52830:	b.ne	52b48 <mpfr_li2@@Base+0x2498>  // b.any
   52834:	ldr	x0, [x1]
   52838:	sub	x26, x24, x21
   5283c:	ldr	x1, [x29, #152]
   52840:	cmp	w9, #0x1
   52844:	ldr	x1, [x19, x1]
   52848:	umulh	x2, x0, x1
   5284c:	mul	x0, x0, x1
   52850:	stp	x0, x2, [x20]
   52854:	ldr	x0, [x29, #136]
   52858:	sub	x27, x0, x26
   5285c:	add	x27, x20, x27, lsl #3
   52860:	b.eq	52b7c <mpfr_li2@@Base+0x24cc>  // b.none
   52864:	lsl	x1, x24, #6
   52868:	sub	x8, x1, x23
   5286c:	cmp	x8, #0x0
   52870:	ldr	x1, [x27]
   52874:	b.le	52ba4 <mpfr_li2@@Base+0x24f4>
   52878:	sub	w3, w8, #0x1
   5287c:	mov	x0, #0x1                   	// #1
   52880:	lsl	x2, x0, x8
   52884:	neg	x4, x2
   52888:	lsl	x0, x0, x3
   5288c:	and	x0, x0, x1
   52890:	adds	x0, x0, x1
   52894:	b.cc	52928 <mpfr_li2@@Base+0x2278>  // b.lo, b.ul, b.last
   52898:	mov	x2, x27
   5289c:	add	x3, x27, x26, lsl #3
   528a0:	str	x0, [x2], #8
   528a4:	b	528b8 <mpfr_li2@@Base+0x2208>
   528a8:	ldr	x1, [x2]
   528ac:	add	x1, x1, #0x1
   528b0:	str	x1, [x2], #8
   528b4:	cbnz	x1, 52924 <mpfr_li2@@Base+0x2274>
   528b8:	cmp	x3, x2
   528bc:	b.ne	528a8 <mpfr_li2@@Base+0x21f8>  // b.any
   528c0:	ldr	x1, [x27]
   528c4:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   528c8:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   528cc:	add	x2, x2, #0x5a8
   528d0:	and	x1, x1, x4
   528d4:	str	x1, [x27]
   528d8:	add	x0, x0, #0x5b0
   528dc:	mov	w1, #0x17e                 	// #382
   528e0:	bl	cb40 <mpfr_assert_fail@plt>
   528e4:	asr	x21, x23, #1
   528e8:	add	x1, x21, #0x2
   528ec:	add	x22, x21, #0x1
   528f0:	add	x21, x21, #0x3
   528f4:	lsl	x28, x1, #1
   528f8:	asr	x22, x22, #6
   528fc:	sub	x15, x28, #0x1
   52900:	add	x3, x22, #0x1
   52904:	sub	x0, x25, x22
   52908:	stp	x3, x0, [x29, #160]
   5290c:	asr	x15, x15, #6
   52910:	lsl	x3, x3, #1
   52914:	add	x15, x15, #0x1
   52918:	add	x0, x28, #0x1
   5291c:	str	x3, [x29, #96]
   52920:	b	526a0 <mpfr_li2@@Base+0x1ff0>
   52924:	ldr	x0, [x27]
   52928:	and	x0, x0, x4
   5292c:	str	x0, [x27]
   52930:	ldr	x2, [x29, #152]
   52934:	ldr	x0, [x29, #168]
   52938:	add	x23, x27, x2
   5293c:	sub	x26, x26, x0
   52940:	cbnz	x28, 52a0c <mpfr_li2@@Base+0x235c>
   52944:	cmp	x0, #0x0
   52948:	ccmp	x19, x27, #0x4, gt
   5294c:	b.ne	52c4c <mpfr_li2@@Base+0x259c>  // b.any
   52950:	cbnz	x26, 52c64 <mpfr_li2@@Base+0x25b4>
   52954:	ldr	x0, [x29, #184]
   52958:	cbnz	x0, 52d6c <mpfr_li2@@Base+0x26bc>
   5295c:	mov	sp, x29
   52960:	ldp	x19, x20, [sp, #16]
   52964:	ldp	x21, x22, [sp, #32]
   52968:	ldp	x23, x24, [sp, #48]
   5296c:	ldp	x25, x26, [sp, #64]
   52970:	ldp	x27, x28, [sp, #80]
   52974:	ldp	x29, x30, [sp], #192
   52978:	ret
   5297c:	add	x2, x12, x2, lsl #3
   52980:	mov	w0, #0x34                  	// #52
   52984:	sub	w9, w0, w9
   52988:	adrp	x1, 66000 <mpfr_bases@@Base+0x16f8>
   5298c:	add	x1, x1, #0x5c0
   52990:	ldur	x0, [x2, #-8]
   52994:	lsr	x0, x0, x9
   52998:	and	x3, x0, #0xf
   5299c:	lsr	x0, x0, #4
   529a0:	and	x2, x0, #0x3f0
   529a4:	orr	x2, x2, x3
   529a8:	add	x0, x1, x0, lsl #1
   529ac:	add	x1, x1, x2
   529b0:	ldrsh	x2, [x0, #128]
   529b4:	ldurb	w0, [x1, #-128]
   529b8:	add	x0, x0, x2
   529bc:	lsl	x0, x0, #53
   529c0:	str	x0, [x19]
   529c4:	mov	sp, x29
   529c8:	ldp	x19, x20, [sp, #16]
   529cc:	ldp	x21, x22, [sp, #32]
   529d0:	ldp	x23, x24, [sp, #48]
   529d4:	ldp	x25, x26, [sp, #64]
   529d8:	ldp	x27, x28, [sp, #80]
   529dc:	ldp	x29, x30, [sp], #192
   529e0:	ret
   529e4:	ldr	x0, [x29, #160]
   529e8:	cmp	x0, #0x1
   529ec:	b.ne	52c0c <mpfr_li2@@Base+0x255c>  // b.any
   529f0:	ldr	x0, [x29, #152]
   529f4:	mov	x28, x20
   529f8:	ldr	x0, [x19, x0]
   529fc:	umulh	x1, x0, x0
   52a00:	mul	x0, x0, x0
   52a04:	stp	x0, x1, [x20]
   52a08:	b	5275c <mpfr_li2@@Base+0x20ac>
   52a0c:	cbnz	x26, 52d1c <mpfr_li2@@Base+0x266c>
   52a10:	ldr	x0, [x29, #168]
   52a14:	cmp	x0, #0x0
   52a18:	b.le	52954 <mpfr_li2@@Base+0x22a4>
   52a1c:	mov	x4, x0
   52a20:	add	x2, x19, #0x10
   52a24:	ldr	x0, [x29, #144]
   52a28:	sub	x1, x0, x21
   52a2c:	sub	x21, x25, x21
   52a30:	ldr	x0, [x29, #160]
   52a34:	add	x1, x1, x0
   52a38:	sub	x0, x4, #0x1
   52a3c:	sub	x1, x1, x21
   52a40:	add	x3, x1, #0x2
   52a44:	add	x1, x20, x1, lsl #3
   52a48:	add	x7, x20, x3, lsl #3
   52a4c:	cmp	x19, x7
   52a50:	ccmp	x1, x2, #0x2, cc  // cc = lo, ul, last
   52a54:	ccmp	x0, #0x6, #0x0, cs  // cs = hs, nlast
   52a58:	b.ls	52dcc <mpfr_li2@@Base+0x271c>  // b.plast
   52a5c:	lsr	x2, x4, #1
   52a60:	mov	x0, #0x0                   	// #0
   52a64:	lsl	x2, x2, #4
   52a68:	ldr	q0, [x1, x0]
   52a6c:	mvn	v0.16b, v0.16b
   52a70:	str	q0, [x19, x0]
   52a74:	add	x0, x0, #0x10
   52a78:	cmp	x0, x2
   52a7c:	b.ne	52a68 <mpfr_li2@@Base+0x23b8>  // b.any
   52a80:	ldr	x0, [x29, #168]
   52a84:	and	x1, x0, #0xfffffffffffffffe
   52a88:	tbz	w0, #0, 52a98 <mpfr_li2@@Base+0x23e8>
   52a8c:	ldr	x0, [x27, x1, lsl #3]
   52a90:	mvn	x0, x0
   52a94:	str	x0, [x19, x1, lsl #3]
   52a98:	ldr	x0, [x19]
   52a9c:	add	x0, x0, #0x1
   52aa0:	str	x0, [x19]
   52aa4:	cbnz	x0, 52cd4 <mpfr_li2@@Base+0x2624>
   52aa8:	mov	x0, #0x1                   	// #1
   52aac:	b	52ac4 <mpfr_li2@@Base+0x2414>
   52ab0:	ldr	x1, [x19, x0, lsl #3]
   52ab4:	add	x1, x1, #0x1
   52ab8:	str	x1, [x19, x0, lsl #3]
   52abc:	add	x0, x0, #0x1
   52ac0:	cbnz	x1, 52cd4 <mpfr_li2@@Base+0x2624>
   52ac4:	cmp	x24, x0
   52ac8:	b.gt	52ab0 <mpfr_li2@@Base+0x2400>
   52acc:	ldr	x2, [x29, #152]
   52ad0:	ldr	x0, [x19, x2]
   52ad4:	sub	x1, x0, #0x1
   52ad8:	str	x1, [x19, x2]
   52adc:	cbz	x0, 52dc4 <mpfr_li2@@Base+0x2714>
   52ae0:	mov	x2, #0x1                   	// #1
   52ae4:	ldr	x1, [x19]
   52ae8:	mov	x0, #0x1                   	// #1
   52aec:	lsl	x8, x0, x8
   52af0:	sub	x3, x1, x8
   52af4:	str	x3, [x19]
   52af8:	cmp	x8, x1
   52afc:	b.hi	52cc4 <mpfr_li2@@Base+0x2614>  // b.pmore
   52b00:	b	528e4 <mpfr_li2@@Base+0x2234>
   52b04:	eor	x0, x0, x28
   52b08:	str	x0, [x1, x3]
   52b0c:	ldr	x0, [x13, x4, lsl #3]
   52b10:	add	x0, x0, #0x1
   52b14:	str	x0, [x13, x4, lsl #3]
   52b18:	cbnz	x0, 5282c <mpfr_li2@@Base+0x217c>
   52b1c:	ldr	x0, [x29, #144]
   52b20:	mov	x2, x1
   52b24:	add	x3, x1, x0, lsl #3
   52b28:	b	52b3c <mpfr_li2@@Base+0x248c>
   52b2c:	ldr	x0, [x2, #8]
   52b30:	add	x0, x0, #0x1
   52b34:	str	x0, [x2, #8]!
   52b38:	cbnz	x0, 5282c <mpfr_li2@@Base+0x217c>
   52b3c:	cmp	x3, x2
   52b40:	b.ne	52b2c <mpfr_li2@@Base+0x247c>  // b.any
   52b44:	b	5282c <mpfr_li2@@Base+0x217c>
   52b48:	ldr	x4, [x29, #160]
   52b4c:	mov	x2, x26
   52b50:	mov	x3, x22
   52b54:	mov	x0, x20
   52b58:	str	w9, [x29, #128]
   52b5c:	sub	x26, x24, x21
   52b60:	bl	c7a0 <__gmpn_mul@plt>
   52b64:	ldr	x0, [x29, #136]
   52b68:	ldr	w9, [x29, #128]
   52b6c:	sub	x27, x0, x26
   52b70:	cmp	w9, #0x1
   52b74:	add	x27, x20, x27, lsl #3
   52b78:	b.ne	52864 <mpfr_li2@@Base+0x21b4>  // b.any
   52b7c:	sub	x1, x27, #0x8
   52b80:	mov	w3, w9
   52b84:	mov	x0, x1
   52b88:	add	x2, x26, #0x1
   52b8c:	bl	bcc0 <__gmpn_lshift@plt>
   52b90:	lsl	x1, x24, #6
   52b94:	sub	x8, x1, x23
   52b98:	cmp	x8, #0x0
   52b9c:	ldr	x1, [x27]
   52ba0:	b.gt	52878 <mpfr_li2@@Base+0x21c8>
   52ba4:	ldur	x0, [x27, #-8]
   52ba8:	lsr	x0, x0, #63
   52bac:	adds	x0, x0, x1
   52bb0:	str	x0, [x27]
   52bb4:	b.cc	52930 <mpfr_li2@@Base+0x2280>  // b.lo, b.ul, b.last
   52bb8:	add	x1, x27, #0x8
   52bbc:	add	x2, x27, x26, lsl #3
   52bc0:	b	52bd4 <mpfr_li2@@Base+0x2524>
   52bc4:	ldr	x0, [x1]
   52bc8:	add	x0, x0, #0x1
   52bcc:	str	x0, [x1], #8
   52bd0:	cbnz	x0, 52930 <mpfr_li2@@Base+0x2280>
   52bd4:	cmp	x2, x1
   52bd8:	b.ne	52bc4 <mpfr_li2@@Base+0x2514>  // b.any
   52bdc:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   52be0:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   52be4:	add	x2, x2, #0x5a8
   52be8:	add	x0, x0, #0x5b0
   52bec:	mov	w1, #0x17e                 	// #382
   52bf0:	bl	cb40 <mpfr_assert_fail@plt>
   52bf4:	ldr	x1, [x12]
   52bf8:	ldr	x0, [x28]
   52bfc:	umulh	x2, x0, x1
   52c00:	mul	x0, x0, x1
   52c04:	stp	x0, x2, [x13]
   52c08:	b	527ac <mpfr_li2@@Base+0x20fc>
   52c0c:	mov	x3, x0
   52c10:	mov	x1, x22
   52c14:	mov	x0, x20
   52c18:	mov	x2, x22
   52c1c:	str	w9, [x29, #104]
   52c20:	stp	x12, x15, [x29, #112]
   52c24:	str	x14, [x29, #128]
   52c28:	bl	c470 <__gmpn_mul_n@plt>
   52c2c:	ldp	x12, x15, [x29, #112]
   52c30:	add	x0, x20, #0x8
   52c34:	ldr	x1, [x29, #96]
   52c38:	ldr	w9, [x29, #104]
   52c3c:	ldr	x14, [x29, #128]
   52c40:	cmp	x1, x15
   52c44:	csel	x28, x0, x20, gt
   52c48:	b	5275c <mpfr_li2@@Base+0x20ac>
   52c4c:	mov	x1, x27
   52c50:	mov	x0, x19
   52c54:	str	x8, [x29, #168]
   52c58:	bl	ba10 <memcpy@plt>
   52c5c:	ldr	x8, [x29, #168]
   52c60:	cbz	x26, 52954 <mpfr_li2@@Base+0x22a4>
   52c64:	mov	x2, x23
   52c68:	mov	x3, x26
   52c6c:	mov	x1, x22
   52c70:	mov	x0, x22
   52c74:	str	x8, [x29, #168]
   52c78:	bl	c5a0 <__gmpn_add_n@plt>
   52c7c:	cbz	x0, 52954 <mpfr_li2@@Base+0x22a4>
   52c80:	mov	x3, x26
   52c84:	ldr	x8, [x29, #168]
   52c88:	b	52ca0 <mpfr_li2@@Base+0x25f0>
   52c8c:	ldr	x0, [x22, x3, lsl #3]
   52c90:	add	x0, x0, #0x1
   52c94:	str	x0, [x22, x3, lsl #3]
   52c98:	add	x3, x3, #0x1
   52c9c:	cbnz	x0, 52954 <mpfr_li2@@Base+0x22a4>
   52ca0:	ldr	x0, [x29, #160]
   52ca4:	cmp	x3, x0
   52ca8:	b.lt	52c8c <mpfr_li2@@Base+0x25dc>  // b.tstop
   52cac:	b	52ae0 <mpfr_li2@@Base+0x2430>
   52cb0:	ldr	x1, [x19, x0, lsl #3]
   52cb4:	sub	x3, x1, #0x1
   52cb8:	str	x3, [x19, x0, lsl #3]
   52cbc:	add	x0, x0, #0x1
   52cc0:	cbnz	x1, 528e4 <mpfr_li2@@Base+0x2234>
   52cc4:	cmp	x24, x0
   52cc8:	b.gt	52cb0 <mpfr_li2@@Base+0x2600>
   52ccc:	cmp	x2, #0x1
   52cd0:	b.eq	52954 <mpfr_li2@@Base+0x22a4>  // b.none
   52cd4:	ldr	x1, [x29, #152]
   52cd8:	ldr	x2, [x19, x1]
   52cdc:	sub	x0, x2, #0x1
   52ce0:	str	x0, [x19, x1]
   52ce4:	cbnz	x2, 52954 <mpfr_li2@@Base+0x22a4>
   52ce8:	ldr	x0, [x29, #160]
   52cec:	add	x5, x22, #0x8
   52cf0:	add	x23, x22, x0, lsl #3
   52cf4:	b	52d08 <mpfr_li2@@Base+0x2658>
   52cf8:	ldr	x0, [x5]
   52cfc:	sub	x1, x0, #0x1
   52d00:	str	x1, [x5], #8
   52d04:	cbnz	x0, 52d14 <mpfr_li2@@Base+0x2664>
   52d08:	cmp	x5, x23
   52d0c:	b.ne	52cf8 <mpfr_li2@@Base+0x2648>  // b.any
   52d10:	sub	x2, x2, #0x1
   52d14:	cbnz	x2, 52ae4 <mpfr_li2@@Base+0x2434>
   52d18:	b	52954 <mpfr_li2@@Base+0x22a4>
   52d1c:	mov	x2, x23
   52d20:	mov	x3, x26
   52d24:	mov	x1, x22
   52d28:	mov	x0, x22
   52d2c:	str	x8, [x29, #136]
   52d30:	bl	be60 <__gmpn_sub_n@plt>
   52d34:	ldr	x8, [x29, #136]
   52d38:	cbz	x0, 52a10 <mpfr_li2@@Base+0x2360>
   52d3c:	mov	x3, x26
   52d40:	ldr	x0, [x22, x3, lsl #3]
   52d44:	sub	x1, x0, #0x1
   52d48:	str	x1, [x22, x3, lsl #3]
   52d4c:	add	x3, x3, #0x1
   52d50:	cbz	x0, 52d40 <mpfr_li2@@Base+0x2690>
   52d54:	b	52a10 <mpfr_li2@@Base+0x2360>
   52d58:	sub	x1, x1, x25
   52d5c:	mov	x2, x24
   52d60:	mov	x14, x24
   52d64:	add	x12, x12, x1, lsl #3
   52d68:	b	52670 <mpfr_li2@@Base+0x1fc0>
   52d6c:	bl	c410 <mpfr_tmp_free@plt>
   52d70:	b	5295c <mpfr_li2@@Base+0x22ac>
   52d74:	add	x0, x29, #0xb8
   52d78:	str	w9, [x29, #104]
   52d7c:	stp	x12, x15, [x29, #112]
   52d80:	str	x14, [x29, #128]
   52d84:	bl	bdc0 <mpfr_tmp_allocate@plt>
   52d88:	ldr	w9, [x29, #104]
   52d8c:	mov	x20, x0
   52d90:	ldp	x12, x15, [x29, #112]
   52d94:	ldr	x14, [x29, #128]
   52d98:	b	52744 <mpfr_li2@@Base+0x2094>
   52d9c:	add	x0, x29, #0xb8
   52da0:	str	w9, [x29, #96]
   52da4:	stp	x12, x15, [x29, #104]
   52da8:	stp	x14, x10, [x29, #120]
   52dac:	bl	bdc0 <mpfr_tmp_allocate@plt>
   52db0:	ldr	w9, [x29, #96]
   52db4:	mov	x13, x0
   52db8:	ldp	x12, x15, [x29, #104]
   52dbc:	ldp	x14, x10, [x29, #120]
   52dc0:	b	5277c <mpfr_li2@@Base+0x20cc>
   52dc4:	mov	x2, #0x1                   	// #1
   52dc8:	b	52ce8 <mpfr_li2@@Base+0x2638>
   52dcc:	mov	x0, #0x0                   	// #0
   52dd0:	ldr	x1, [x27, x0, lsl #3]
   52dd4:	mvn	x1, x1
   52dd8:	str	x1, [x19, x0, lsl #3]
   52ddc:	ldr	x1, [x29, #168]
   52de0:	add	x0, x0, #0x1
   52de4:	cmp	x1, x0
   52de8:	b.ne	52dd0 <mpfr_li2@@Base+0x2720>  // b.any
   52dec:	b	52a98 <mpfr_li2@@Base+0x23e8>
   52df0:	mov	x0, #0x0                   	// #0
   52df4:	b	52820 <mpfr_li2@@Base+0x2170>

0000000000052df8 <mpfr_rec_sqrt@@Base>:
   52df8:	stp	x29, x30, [sp, #-160]!
   52dfc:	mov	x29, sp
   52e00:	stp	x21, x22, [sp, #32]
   52e04:	ldr	x22, [x1, #16]
   52e08:	stp	x19, x20, [sp, #16]
   52e0c:	mov	x20, x0
   52e10:	stp	x23, x24, [sp, #48]
   52e14:	stp	x25, x26, [sp, #64]
   52e18:	stp	x27, x28, [sp, #80]
   52e1c:	mov	w28, w2
   52e20:	mov	x27, x1
   52e24:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   52e28:	cmp	x22, x2
   52e2c:	b.le	53000 <mpfr_rec_sqrt@@Base+0x208>
   52e30:	ldr	w0, [x1, #8]
   52e34:	tbnz	w0, #31, 53028 <mpfr_rec_sqrt@@Base+0x230>
   52e38:	ldr	x9, [x20]
   52e3c:	and	x0, x22, #0x1
   52e40:	eor	x1, x0, #0x1
   52e44:	str	x1, [x29, #96]
   52e48:	sub	x8, x9, #0x1
   52e4c:	mov	w19, w1
   52e50:	mov	w1, #0x1                   	// #1
   52e54:	asr	x22, x8, #6
   52e58:	add	x2, x22, #0x1
   52e5c:	stp	x2, x0, [x29, #112]
   52e60:	add	x0, x29, #0x98
   52e64:	lsl	x6, x2, #6
   52e68:	str	x0, [x29, #104]
   52e6c:	add	x0, x9, #0xb
   52e70:	cmp	x6, x0
   52e74:	csel	x26, x6, x0, ge  // ge = tcont
   52e78:	cmp	x27, x20
   52e7c:	cset	w0, eq  // eq = none
   52e80:	cmp	w28, #0x0
   52e84:	cinc	x25, x9, eq  // eq = none
   52e88:	str	w0, [x29, #132]
   52e8c:	ldr	x24, [x27]
   52e90:	str	w1, [x20, #8]
   52e94:	ldr	w0, [x29, #132]
   52e98:	sub	x21, x26, #0x1
   52e9c:	str	xzr, [x29, #152]
   52ea0:	asr	x21, x21, #6
   52ea4:	cmp	w0, #0x0
   52ea8:	ccmp	x22, x21, #0x1, eq  // eq = none
   52eac:	add	x21, x21, #0x1
   52eb0:	b.lt	52fb8 <mpfr_rec_sqrt@@Base+0x1c0>  // b.tstop
   52eb4:	ldr	x23, [x20, #24]
   52eb8:	mov	w4, w19
   52ebc:	ldr	x2, [x27, #24]
   52ec0:	mov	x3, x24
   52ec4:	mov	x1, x26
   52ec8:	mov	x0, x23
   52ecc:	str	x9, [x29, #136]
   52ed0:	bl	52620 <mpfr_li2@@Base+0x1f70>
   52ed4:	cmp	x26, x24
   52ed8:	mov	x3, x25
   52edc:	cset	x2, lt  // lt = tstop
   52ee0:	mov	x1, x21
   52ee4:	sub	x2, x26, x2
   52ee8:	mov	x0, x23
   52eec:	bl	c370 <mpfr_round_p@plt>
   52ef0:	ldr	x9, [x29, #136]
   52ef4:	cbz	w0, 53060 <mpfr_rec_sqrt@@Base+0x268>
   52ef8:	ldr	x0, [x20, #24]
   52efc:	mov	x1, x23
   52f00:	mov	x4, x9
   52f04:	mov	x2, x26
   52f08:	add	x6, x29, #0x94
   52f0c:	mov	w5, w28
   52f10:	mov	w3, #0x0                   	// #0
   52f14:	bl	ca20 <mpfr_round_raw@plt>
   52f18:	ldr	x1, [x27, #16]
   52f1c:	sxtw	x19, w19
   52f20:	sub	x1, x1, #0x1
   52f24:	sub	x19, x19, x1
   52f28:	add	x19, x19, x19, lsr #63
   52f2c:	asr	x19, x19, #1
   52f30:	str	x19, [x20, #16]
   52f34:	cbnz	w0, 53080 <mpfr_rec_sqrt@@Base+0x288>
   52f38:	ldr	x0, [x29, #152]
   52f3c:	cbnz	x0, 53078 <mpfr_rec_sqrt@@Base+0x280>
   52f40:	mrs	x2, tpidr_el0
   52f44:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   52f48:	ldr	x1, [x0, #2512]
   52f4c:	add	x0, x0, #0x9d0
   52f50:	blr	x1
   52f54:	ldr	x3, [x20, #16]
   52f58:	ldr	x0, [x2, x0]
   52f5c:	ldr	w1, [x29, #148]
   52f60:	cmp	x3, x0
   52f64:	b.lt	52f84 <mpfr_rec_sqrt@@Base+0x18c>  // b.tstop
   52f68:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   52f6c:	ldr	x4, [x0, #2544]
   52f70:	add	x0, x0, #0x9f0
   52f74:	blr	x4
   52f78:	ldr	x0, [x2, x0]
   52f7c:	cmp	x3, x0
   52f80:	b.le	52fd8 <mpfr_rec_sqrt@@Base+0x1e0>
   52f84:	mov	w2, w28
   52f88:	mov	x0, x20
   52f8c:	bl	cb30 <mpfr_check_range@plt>
   52f90:	mov	w1, w0
   52f94:	mov	sp, x29
   52f98:	mov	w0, w1
   52f9c:	ldp	x19, x20, [sp, #16]
   52fa0:	ldp	x21, x22, [sp, #32]
   52fa4:	ldp	x23, x24, [sp, #48]
   52fa8:	ldp	x25, x26, [sp, #64]
   52fac:	ldp	x27, x28, [sp, #80]
   52fb0:	ldp	x29, x30, [sp], #160
   52fb4:	ret
   52fb8:	lsl	x1, x21, #3
   52fbc:	cmp	x1, #0x4, lsl #12
   52fc0:	b.hi	530c8 <mpfr_rec_sqrt@@Base+0x2d0>  // b.pmore
   52fc4:	add	x1, x1, #0xf
   52fc8:	and	x1, x1, #0xfffffffffffffff0
   52fcc:	sub	sp, sp, x1
   52fd0:	mov	x23, sp
   52fd4:	b	52eb8 <mpfr_rec_sqrt@@Base+0xc0>
   52fd8:	cbz	w1, 52f94 <mpfr_rec_sqrt@@Base+0x19c>
   52fdc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   52fe0:	ldr	x3, [x0, #2576]
   52fe4:	add	x0, x0, #0xa10
   52fe8:	blr	x3
   52fec:	add	x0, x2, x0
   52ff0:	ldr	w2, [x0]
   52ff4:	orr	w2, w2, #0x8
   52ff8:	str	w2, [x0]
   52ffc:	b	52f94 <mpfr_rec_sqrt@@Base+0x19c>
   53000:	mov	x0, #0x2                   	// #2
   53004:	movk	x0, #0x8000, lsl #48
   53008:	cmp	x22, x0
   5300c:	b.eq	53028 <mpfr_rec_sqrt@@Base+0x230>  // b.none
   53010:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   53014:	cmp	x22, x0
   53018:	b.eq	53154 <mpfr_rec_sqrt@@Base+0x35c>  // b.none
   5301c:	ldr	w1, [x1, #8]
   53020:	tbz	w1, #31, 530a0 <mpfr_rec_sqrt@@Base+0x2a8>
   53024:	nop
   53028:	mrs	x1, tpidr_el0
   5302c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53030:	ldr	x2, [x0, #2576]
   53034:	add	x0, x0, #0xa10
   53038:	blr	x2
   5303c:	add	x0, x1, x0
   53040:	mov	x2, #0x2                   	// #2
   53044:	movk	x2, #0x8000, lsl #48
   53048:	str	x2, [x20, #16]
   5304c:	mov	w1, #0x0                   	// #0
   53050:	ldr	w2, [x0]
   53054:	orr	w2, w2, #0x4
   53058:	str	w2, [x0]
   5305c:	b	52f94 <mpfr_rec_sqrt@@Base+0x19c>
   53060:	ldr	x0, [x29, #120]
   53064:	cbnz	x0, 530e0 <mpfr_rec_sqrt@@Base+0x2e8>
   53068:	ldr	x0, [x29, #152]
   5306c:	cbnz	x0, 530b4 <mpfr_rec_sqrt@@Base+0x2bc>
   53070:	add	x26, x26, #0x40
   53074:	b	52e94 <mpfr_rec_sqrt@@Base+0x9c>
   53078:	bl	c410 <mpfr_tmp_free@plt>
   5307c:	b	52f40 <mpfr_rec_sqrt@@Base+0x148>
   53080:	ldr	x1, [x20, #24]
   53084:	add	x19, x19, #0x1
   53088:	ldr	x2, [x29, #112]
   5308c:	str	x19, [x20, #16]
   53090:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   53094:	add	x23, x1, x2, lsl #3
   53098:	stur	x0, [x23, #-8]
   5309c:	b	52f38 <mpfr_rec_sqrt@@Base+0x140>
   530a0:	mov	w2, #0x1                   	// #1
   530a4:	mov	w1, #0x0                   	// #0
   530a8:	str	w2, [x20, #8]
   530ac:	str	x0, [x20, #16]
   530b0:	b	52f94 <mpfr_rec_sqrt@@Base+0x19c>
   530b4:	str	x9, [x29, #136]
   530b8:	bl	c410 <mpfr_tmp_free@plt>
   530bc:	add	x26, x26, #0x40
   530c0:	ldr	x9, [x29, #136]
   530c4:	b	52e94 <mpfr_rec_sqrt@@Base+0x9c>
   530c8:	ldr	x0, [x29, #104]
   530cc:	str	x9, [x29, #136]
   530d0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   530d4:	mov	x23, x0
   530d8:	ldr	x9, [x29, #136]
   530dc:	b	52eb8 <mpfr_rec_sqrt@@Base+0xc0>
   530e0:	ldr	x2, [x27, #16]
   530e4:	mov	x0, x27
   530e8:	mov	x1, #0x1                   	// #1
   530ec:	sub	x2, x2, #0x1
   530f0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   530f4:	ldr	x9, [x29, #136]
   530f8:	cbnz	w0, 53068 <mpfr_rec_sqrt@@Base+0x270>
   530fc:	lsl	x1, x21, #6
   53100:	mov	x0, #0x1                   	// #1
   53104:	ldr	x2, [x23]
   53108:	sub	x1, x1, x26
   5310c:	lsl	x1, x0, x1
   53110:	adds	x1, x1, x2
   53114:	str	x1, [x23]
   53118:	b.cs	53148 <mpfr_rec_sqrt@@Base+0x350>  // b.hs, b.nlast
   5311c:	add	x21, x23, x21, lsl #3
   53120:	ldr	w0, [x29, #96]
   53124:	add	w19, w0, #0x2
   53128:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   5312c:	stur	x0, [x21, #-8]
   53130:	b	52ef8 <mpfr_rec_sqrt@@Base+0x100>
   53134:	ldr	x1, [x23, x0, lsl #3]
   53138:	add	x1, x1, #0x1
   5313c:	str	x1, [x23, x0, lsl #3]
   53140:	add	x0, x0, #0x1
   53144:	cbnz	x1, 5311c <mpfr_rec_sqrt@@Base+0x324>
   53148:	cmp	x21, x0
   5314c:	b.gt	53134 <mpfr_rec_sqrt@@Base+0x33c>
   53150:	b	5311c <mpfr_rec_sqrt@@Base+0x324>
   53154:	mrs	x1, tpidr_el0
   53158:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5315c:	ldr	x3, [x0, #2576]
   53160:	add	x0, x0, #0xa10
   53164:	blr	x3
   53168:	add	x0, x1, x0
   5316c:	str	x2, [x20, #16]
   53170:	mov	w3, #0x1                   	// #1
   53174:	mov	w1, #0x0                   	// #0
   53178:	str	w3, [x20, #8]
   5317c:	ldr	w2, [x0]
   53180:	orr	w2, w2, #0x20
   53184:	str	w2, [x0]
   53188:	b	52f94 <mpfr_rec_sqrt@@Base+0x19c>
   5318c:	nop

0000000000053190 <mpfr_min_prec@@Base>:
   53190:	stp	x29, x30, [sp, #-32]!
   53194:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   53198:	mov	x29, sp
   5319c:	str	x19, [sp, #16]
   531a0:	mov	x19, x0
   531a4:	ldr	x0, [x0, #16]
   531a8:	cmp	x0, x1
   531ac:	b.le	531dc <mpfr_min_prec@@Base+0x4c>
   531b0:	ldr	x0, [x19, #24]
   531b4:	mov	x1, #0x0                   	// #0
   531b8:	bl	caa0 <__gmpn_scan1@plt>
   531bc:	ldr	x1, [x19]
   531c0:	ldr	x19, [sp, #16]
   531c4:	sub	x1, x1, #0x1
   531c8:	and	x1, x1, #0xffffffffffffffc0
   531cc:	add	x1, x1, #0x40
   531d0:	sub	x0, x1, x0
   531d4:	ldp	x29, x30, [sp], #32
   531d8:	ret
   531dc:	mov	x0, #0x0                   	// #0
   531e0:	ldr	x19, [sp, #16]
   531e4:	ldp	x29, x30, [sp], #32
   531e8:	ret
   531ec:	nop

00000000000531f0 <mpfr_buildopt_tls_p@@Base>:
   531f0:	mov	w0, #0x1                   	// #1
   531f4:	ret

00000000000531f8 <mpfr_buildopt_float128_p@@Base>:
   531f8:	mov	w0, #0x0                   	// #0
   531fc:	ret

0000000000053200 <mpfr_buildopt_decimal_p@@Base>:
   53200:	mov	w0, #0x0                   	// #0
   53204:	ret

0000000000053208 <mpfr_buildopt_gmpinternals_p@@Base>:
   53208:	mov	w0, #0x0                   	// #0
   5320c:	ret

0000000000053210 <mpfr_buildopt_sharedcache_p@@Base>:
   53210:	mov	w0, #0x0                   	// #0
   53214:	ret

0000000000053218 <mpfr_buildopt_tune_case@@Base>:
   53218:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5321c:	add	x0, x0, #0xa40
   53220:	ret
   53224:	nop

0000000000053228 <mpfr_digamma@@Base>:
   53228:	stp	x29, x30, [sp, #-400]!
   5322c:	mov	x29, sp
   53230:	str	x1, [sp, #96]
   53234:	ldr	x1, [x1, #16]
   53238:	stp	x19, x20, [sp, #16]
   5323c:	stp	x27, x28, [sp, #80]
   53240:	mov	x28, x0
   53244:	str	w2, [sp, #136]
   53248:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   5324c:	cmp	x1, x2
   53250:	b.le	53a14 <mpfr_digamma@@Base+0x7ec>
   53254:	ldr	x0, [sp, #96]
   53258:	ldr	w20, [x0, #8]
   5325c:	tbnz	w20, #31, 53384 <mpfr_digamma@@Base+0x15c>
   53260:	mrs	x5, tpidr_el0
   53264:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53268:	ldr	x2, [x0, #2576]
   5326c:	add	x0, x0, #0xa10
   53270:	blr	x2
   53274:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   53278:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   5327c:	str	x5, [sp, #144]
   53280:	ldr	w0, [x5, x0]
   53284:	str	w0, [sp, #140]
   53288:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5328c:	ldr	x3, [x0, #2512]
   53290:	add	x0, x0, #0x9d0
   53294:	blr	x3
   53298:	add	x3, x5, x0
   5329c:	ldr	x0, [x5, x0]
   532a0:	str	x0, [sp, #184]
   532a4:	str	x4, [x3]
   532a8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   532ac:	ldr	x6, [x0, #2544]
   532b0:	add	x0, x0, #0x9f0
   532b4:	blr	x6
   532b8:	ldr	x3, [x5, x0]
   532bc:	str	x2, [x5, x0]
   532c0:	str	x3, [sp, #176]
   532c4:	cmn	x1, #0x2
   532c8:	b.ge	53408 <mpfr_digamma@@Base+0x1e0>  // b.tcont
   532cc:	ldr	x0, [sp, #96]
   532d0:	ldr	x2, [x0]
   532d4:	ldr	x0, [x28]
   532d8:	cmp	x0, x2
   532dc:	csel	x0, x0, x2, ge  // ge = tcont
   532e0:	neg	x0, x0, lsl #1
   532e4:	cmp	x0, x1
   532e8:	b.ge	53a4c <mpfr_digamma@@Base+0x824>  // b.tcont
   532ec:	ldr	w2, [sp, #136]
   532f0:	mov	x0, x28
   532f4:	ldr	x1, [sp, #96]
   532f8:	bl	53bc0 <mpfr_digamma@@Base+0x998>
   532fc:	mov	w19, w0
   53300:	ldr	x2, [sp, #144]
   53304:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53308:	ldr	x1, [x0, #2576]
   5330c:	add	x0, x0, #0xa10
   53310:	blr	x1
   53314:	ldr	w1, [sp, #140]
   53318:	str	w1, [x2, x0]
   5331c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53320:	ldr	x3, [x0, #2512]
   53324:	add	x0, x0, #0x9d0
   53328:	blr	x3
   5332c:	ldr	x3, [sp, #184]
   53330:	str	x3, [x2, x0]
   53334:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53338:	ldr	x4, [x0, #2544]
   5333c:	add	x0, x0, #0x9f0
   53340:	blr	x4
   53344:	ldr	x1, [x28, #16]
   53348:	ldr	x4, [sp, #176]
   5334c:	str	x4, [x2, x0]
   53350:	cmp	x1, x4
   53354:	ccmp	x1, x3, #0x1, le
   53358:	b.ge	53784 <mpfr_digamma@@Base+0x55c>  // b.tcont
   5335c:	ldr	w2, [sp, #136]
   53360:	mov	w1, w19
   53364:	mov	x0, x28
   53368:	bl	cb30 <mpfr_check_range@plt>
   5336c:	mov	w19, w0
   53370:	mov	w0, w19
   53374:	ldp	x19, x20, [sp, #16]
   53378:	ldp	x27, x28, [sp, #80]
   5337c:	ldp	x29, x30, [sp], #400
   53380:	ret
   53384:	mov	x19, x0
   53388:	bl	c160 <mpfr_integer_p@plt>
   5338c:	cbnz	w0, 53830 <mpfr_digamma@@Base+0x608>
   53390:	mrs	x5, tpidr_el0
   53394:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53398:	ldr	x1, [x0, #2576]
   5339c:	add	x0, x0, #0xa10
   533a0:	blr	x1
   533a4:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   533a8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   533ac:	ldr	x1, [x19, #16]
   533b0:	str	x5, [sp, #144]
   533b4:	ldr	w0, [x5, x0]
   533b8:	str	w0, [sp, #140]
   533bc:	ldr	w20, [x19, #8]
   533c0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   533c4:	ldr	x3, [x0, #2512]
   533c8:	add	x0, x0, #0x9d0
   533cc:	blr	x3
   533d0:	add	x3, x5, x0
   533d4:	ldr	x0, [x5, x0]
   533d8:	str	x0, [sp, #184]
   533dc:	str	x4, [x3]
   533e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   533e4:	ldr	x7, [x0, #2544]
   533e8:	add	x0, x0, #0x9f0
   533ec:	blr	x7
   533f0:	ldr	x3, [x5, x0]
   533f4:	str	x2, [x5, x0]
   533f8:	str	x3, [sp, #176]
   533fc:	cmn	x1, #0x2
   53400:	b.lt	532cc <mpfr_digamma@@Base+0xa4>  // b.tstop
   53404:	tbnz	w20, #31, 532ec <mpfr_digamma@@Base+0xc4>
   53408:	tbnz	x1, #63, 532ec <mpfr_digamma@@Base+0xc4>
   5340c:	ldr	x0, [sp, #96]
   53410:	stp	x21, x22, [sp, #32]
   53414:	ldr	x20, [x28]
   53418:	ldr	x0, [x0]
   5341c:	add	x20, x20, #0xa
   53420:	cmp	x0, x1
   53424:	csinc	x0, x1, x0, lt  // lt = tstop
   53428:	str	x0, [sp, #128]
   5342c:	cmp	x20, x1
   53430:	b.lt	537bc <mpfr_digamma@@Base+0x594>  // b.tstop
   53434:	add	x22, sp, #0xd0
   53438:	stp	x23, x24, [sp, #48]
   5343c:	stp	x25, x26, [sp, #64]
   53440:	add	x2, sp, #0xf0
   53444:	ldr	x1, [sp, #128]
   53448:	add	x21, sp, #0x110
   5344c:	mov	x19, x2
   53450:	mov	x0, x21
   53454:	str	x2, [sp, #112]
   53458:	add	x25, sp, #0x150
   5345c:	bl	ca80 <mpfr_init2@plt>
   53460:	add	x27, sp, #0x170
   53464:	mov	x1, x20
   53468:	mov	x0, x22
   5346c:	bl	ca80 <mpfr_init2@plt>
   53470:	mov	x0, x19
   53474:	mov	x1, x20
   53478:	bl	ca80 <mpfr_init2@plt>
   5347c:	add	x19, sp, #0x130
   53480:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   53484:	add	x0, x0, #0xa48
   53488:	stp	x28, x0, [sp, #192]
   5348c:	mov	x0, #0x40                  	// #64
   53490:	str	x0, [sp, #120]
   53494:	nop
   53498:	ldr	x1, [sp, #96]
   5349c:	adds	x0, x20, #0x3
   534a0:	add	x23, x20, #0x6
   534a4:	mov	w2, #0x0                   	// #0
   534a8:	csel	x23, x23, x0, mi  // mi = first
   534ac:	mov	x0, #0x2                   	// #2
   534b0:	ldr	w3, [x1, #8]
   534b4:	cmp	x23, #0x7
   534b8:	asr	x23, x23, #2
   534bc:	mov	x24, #0x0                   	// #0
   534c0:	csel	x23, x23, x0, hi  // hi = pmore
   534c4:	mov	x0, x21
   534c8:	bl	c6a0 <mpfr_set4@plt>
   534cc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   534d0:	mov	w1, #0x1                   	// #1
   534d4:	str	w1, [sp, #248]
   534d8:	str	x0, [sp, #256]
   534dc:	nop
   534e0:	mov	x1, x23
   534e4:	mov	x0, x21
   534e8:	mov	x2, #0x0                   	// #0
   534ec:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   534f0:	tbz	w0, #31, 53570 <mpfr_digamma@@Base+0x348>
   534f4:	mov	x2, x21
   534f8:	mov	w3, #0x0                   	// #0
   534fc:	mov	x1, #0x1                   	// #1
   53500:	mov	x0, x22
   53504:	bl	c2f0 <mpfr_ui_div@plt>
   53508:	add	x24, x24, #0x1
   5350c:	ldr	x0, [sp, #112]
   53510:	mov	x2, x22
   53514:	mov	w3, #0x0                   	// #0
   53518:	mov	x1, x0
   5351c:	bl	c1a0 <mpfr_add@plt>
   53520:	mov	x1, x21
   53524:	mov	x0, x21
   53528:	mov	w3, #0x1                   	// #1
   5352c:	mov	x2, #0x1                   	// #1
   53530:	bl	c260 <mpfr_add_ui@plt>
   53534:	cbz	w0, 534e0 <mpfr_digamma@@Base+0x2b8>
   53538:	ldr	x0, [sp, #128]
   5353c:	mov	w2, #0x1                   	// #1
   53540:	add	x0, x0, #0x1
   53544:	str	x0, [sp, #128]
   53548:	mov	x1, x0
   5354c:	mov	x0, x21
   53550:	bl	c970 <mpfr_prec_round@plt>
   53554:	mov	x0, x21
   53558:	bl	c120 <mpfr_nextabove@plt>
   5355c:	mov	x1, x23
   53560:	mov	x0, x21
   53564:	mov	x2, #0x0                   	// #0
   53568:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5356c:	tbnz	w0, #31, 534f4 <mpfr_digamma@@Base+0x2cc>
   53570:	cmp	x24, #0x1
   53574:	mov	x23, #0x0                   	// #0
   53578:	b.ls	53594 <mpfr_digamma@@Base+0x36c>  // b.plast
   5357c:	nop
   53580:	add	x24, x24, #0x1
   53584:	add	x23, x23, #0x1
   53588:	cmp	x24, #0x3
   5358c:	lsr	x24, x24, #1
   53590:	b.hi	53580 <mpfr_digamma@@Base+0x358>  // b.pmore
   53594:	ldr	w0, [sp, #280]
   53598:	ldr	x26, [sp, #208]
   5359c:	cmp	w0, #0x0
   535a0:	b.le	539a0 <mpfr_digamma@@Base+0x778>
   535a4:	ldr	x0, [sp, #288]
   535a8:	cmp	x0, #0x1
   535ac:	b.le	539a0 <mpfr_digamma@@Base+0x778>
   535b0:	mov	x1, x26
   535b4:	mov	x0, x19
   535b8:	bl	ca80 <mpfr_init2@plt>
   535bc:	mov	x24, #0x2                   	// #2
   535c0:	mov	x1, x26
   535c4:	mov	x0, x25
   535c8:	bl	ca80 <mpfr_init2@plt>
   535cc:	mov	x28, x24
   535d0:	mov	x1, x26
   535d4:	mov	x0, x27
   535d8:	bl	ca80 <mpfr_init2@plt>
   535dc:	mov	x1, x21
   535e0:	mov	x0, x22
   535e4:	mov	w2, #0x0                   	// #0
   535e8:	bl	c090 <mpfr_log@plt>
   535ec:	mov	x2, x21
   535f0:	mov	x0, x19
   535f4:	mov	w3, #0x0                   	// #0
   535f8:	mov	x1, #0x1                   	// #1
   535fc:	bl	c2f0 <mpfr_ui_div@plt>
   53600:	mov	x1, x19
   53604:	mov	x0, x19
   53608:	mov	w3, #0x0                   	// #0
   5360c:	mov	x2, #0x1                   	// #1
   53610:	bl	c8f0 <mpfr_div_2ui@plt>
   53614:	mov	x0, #0xe                   	// #14
   53618:	mov	x2, x19
   5361c:	mov	x1, x22
   53620:	mov	w3, #0x0                   	// #0
   53624:	str	x0, [sp, #104]
   53628:	mov	x0, x22
   5362c:	bl	bb70 <mpfr_sub@plt>
   53630:	mov	x2, x21
   53634:	mov	x1, x21
   53638:	mov	w3, #0x1                   	// #1
   5363c:	mov	x0, x27
   53640:	bl	bd50 <mpfr_mul@plt>
   53644:	mov	x2, x27
   53648:	mov	w3, #0x2                   	// #2
   5364c:	mov	x1, #0x1                   	// #1
   53650:	mov	x0, x27
   53654:	bl	c2f0 <mpfr_ui_div@plt>
   53658:	mov	x0, x19
   5365c:	mov	x1, #0x1                   	// #1
   53660:	mov	w3, #0x0                   	// #0
   53664:	mov	x2, #0x0                   	// #0
   53668:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5366c:	str	x20, [sp, #152]
   53670:	mov	x1, x21
   53674:	mov	x0, x19
   53678:	mov	x21, x22
   5367c:	mov	x19, x25
   53680:	mov	x22, x1
   53684:	mov	x25, x0
   53688:	mov	x20, x26
   5368c:	mov	x26, #0x1                   	// #1
   53690:	mov	x2, x27
   53694:	mov	x1, x25
   53698:	mov	w3, #0x2                   	// #2
   5369c:	mov	x0, x25
   536a0:	bl	bd50 <mpfr_mul@plt>
   536a4:	mov	x2, x24
   536a8:	mov	x1, x25
   536ac:	mov	w3, #0x2                   	// #2
   536b0:	mov	x0, x25
   536b4:	bl	cc60 <mpfr_div_ui@plt>
   536b8:	add	x2, x24, #0x1
   536bc:	mov	x1, x25
   536c0:	mov	w3, #0x2                   	// #2
   536c4:	mov	x0, x25
   536c8:	bl	cc60 <mpfr_div_ui@plt>
   536cc:	mov	x2, x24
   536d0:	mov	x1, x25
   536d4:	mov	w3, #0x2                   	// #2
   536d8:	mov	x0, x19
   536dc:	bl	cc60 <mpfr_div_ui@plt>
   536e0:	mov	x0, x26
   536e4:	bl	c830 <mpfr_bernoulli_cache@plt>
   536e8:	mov	x1, x19
   536ec:	mov	x2, x0
   536f0:	mov	w3, #0x2                   	// #2
   536f4:	mov	x0, x19
   536f8:	bl	c4d0 <mpfr_mul_z@plt>
   536fc:	ldr	x5, [sp, #224]
   53700:	ldr	x4, [sp, #352]
   53704:	stp	x4, x5, [sp, #160]
   53708:	sub	x0, x5, x20
   5370c:	cmp	x4, x0
   53710:	b.lt	53878 <mpfr_digamma@@Base+0x650>  // b.tstop
   53714:	mov	x2, x19
   53718:	mov	x1, x21
   5371c:	mov	x0, x21
   53720:	mov	w3, #0x0                   	// #0
   53724:	bl	bb70 <mpfr_sub@plt>
   53728:	ldp	x4, x5, [sp, #160]
   5372c:	ldr	x2, [sp, #224]
   53730:	ldr	x0, [sp, #104]
   53734:	sub	w1, w5, w2
   53738:	cmp	x5, x2
   5373c:	lsl	x1, x28, x1
   53740:	csel	x28, x1, x28, gt
   53744:	add	x28, x28, #0x1
   53748:	cmp	x5, x4
   5374c:	b.le	53768 <mpfr_digamma@@Base+0x540>
   53750:	add	x0, x0, #0x1
   53754:	add	x4, x4, #0x1
   53758:	cmp	x5, x4
   5375c:	add	x0, x0, x0, lsr #63
   53760:	asr	x0, x0, #1
   53764:	b.ne	53750 <mpfr_digamma@@Base+0x528>  // b.any
   53768:	add	x28, x0, x28
   5376c:	add	x26, x26, #0x1
   53770:	ldr	x0, [sp, #104]
   53774:	add	x24, x24, #0x2
   53778:	add	x0, x0, #0xa
   5377c:	str	x0, [sp, #104]
   53780:	b	53690 <mpfr_digamma@@Base+0x468>
   53784:	cbz	w19, 53370 <mpfr_digamma@@Base+0x148>
   53788:	ldr	w0, [sp, #140]
   5378c:	ldp	x27, x28, [sp, #80]
   53790:	orr	w1, w0, #0x8
   53794:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53798:	ldr	x2, [x0, #2576]
   5379c:	add	x0, x0, #0xa10
   537a0:	blr	x2
   537a4:	ldr	x2, [sp, #144]
   537a8:	str	w1, [x2, x0]
   537ac:	mov	w0, w19
   537b0:	ldp	x19, x20, [sp, #16]
   537b4:	ldp	x29, x30, [sp], #400
   537b8:	ret
   537bc:	add	x22, sp, #0xd0
   537c0:	mov	x1, x20
   537c4:	mov	x0, x22
   537c8:	bl	ca80 <mpfr_init2@plt>
   537cc:	ldr	x1, [sp, #96]
   537d0:	mov	x0, x22
   537d4:	mov	w2, #0x1                   	// #1
   537d8:	bl	c090 <mpfr_log@plt>
   537dc:	ldr	x1, [sp, #224]
   537e0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   537e4:	cmp	x1, x0
   537e8:	b.le	5381c <mpfr_digamma@@Base+0x5f4>
   537ec:	ldr	w0, [sp, #136]
   537f0:	ldr	x1, [sp, #208]
   537f4:	cmp	w0, #0x0
   537f8:	ldr	x0, [sp, #232]
   537fc:	sub	x1, x1, #0x1
   53800:	ldr	x2, [x28]
   53804:	asr	x1, x1, #6
   53808:	add	x1, x1, #0x1
   5380c:	cinc	x3, x2, eq  // eq = none
   53810:	add	x2, x2, #0xa
   53814:	bl	c370 <mpfr_round_p@plt>
   53818:	cbnz	w0, 53b60 <mpfr_digamma@@Base+0x938>
   5381c:	mov	x0, x22
   53820:	stp	x23, x24, [sp, #48]
   53824:	stp	x25, x26, [sp, #64]
   53828:	bl	c070 <mpfr_clear@plt>
   5382c:	b	53440 <mpfr_digamma@@Base+0x218>
   53830:	mrs	x1, tpidr_el0
   53834:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53838:	ldr	x2, [x0, #2576]
   5383c:	add	x0, x0, #0xa10
   53840:	blr	x2
   53844:	add	x0, x1, x0
   53848:	mov	x1, #0x2                   	// #2
   5384c:	movk	x1, #0x8000, lsl #48
   53850:	str	x1, [x28, #16]
   53854:	mov	w19, #0x0                   	// #0
   53858:	ldr	w1, [x0]
   5385c:	ldp	x27, x28, [sp, #80]
   53860:	orr	w1, w1, #0x4
   53864:	str	w1, [x0]
   53868:	mov	w0, w19
   5386c:	ldp	x19, x20, [sp, #16]
   53870:	ldp	x29, x30, [sp], #400
   53874:	ret
   53878:	mov	x1, x22
   5387c:	mov	x0, x25
   53880:	mov	x22, x21
   53884:	mov	x25, x19
   53888:	mov	x21, x1
   5388c:	mov	x19, x0
   53890:	ldr	x20, [sp, #152]
   53894:	bl	c070 <mpfr_clear@plt>
   53898:	mov	x0, x25
   5389c:	bl	c070 <mpfr_clear@plt>
   538a0:	mov	x0, x27
   538a4:	bl	c070 <mpfr_clear@plt>
   538a8:	cmp	x28, #0x1
   538ac:	mov	x24, #0x0                   	// #0
   538b0:	b.le	538cc <mpfr_digamma@@Base+0x6a4>
   538b4:	nop
   538b8:	add	x28, x28, #0x1
   538bc:	add	x24, x24, #0x1
   538c0:	asr	x28, x28, #1
   538c4:	cmp	x28, #0x1
   538c8:	b.ne	538b8 <mpfr_digamma@@Base+0x690>  // b.any
   538cc:	ldr	x2, [sp, #112]
   538d0:	mov	x1, x22
   538d4:	mov	w3, #0x0                   	// #0
   538d8:	mov	x0, x22
   538dc:	ldr	x26, [sp, #224]
   538e0:	bl	bb70 <mpfr_sub@plt>
   538e4:	ldr	x0, [sp, #224]
   538e8:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   538ec:	ldr	x3, [sp, #256]
   538f0:	subs	x2, x26, x0
   538f4:	add	x2, x24, x2
   538f8:	sub	x1, x3, x0
   538fc:	csel	x24, x2, x24, gt
   53900:	add	x1, x23, x1
   53904:	cmp	x0, x3
   53908:	csel	x23, x1, x23, lt  // lt = tstop
   5390c:	add	x2, x24, #0x2
   53910:	cmp	x24, x23
   53914:	add	x1, x24, #0x1
   53918:	csinc	x2, x2, x23, eq  // eq = none
   5391c:	csel	x2, x2, x1, le
   53920:	cmp	x0, x4
   53924:	b.le	5395c <mpfr_digamma@@Base+0x734>
   53928:	ldr	x3, [sp, #192]
   5392c:	sub	x2, x20, x2
   53930:	ldr	w0, [sp, #136]
   53934:	ldr	x1, [sp, #208]
   53938:	cmp	w0, #0x0
   5393c:	ldr	x0, [sp, #232]
   53940:	sub	x1, x1, #0x1
   53944:	ldr	x3, [x3]
   53948:	asr	x1, x1, #6
   5394c:	add	x1, x1, #0x1
   53950:	cinc	x3, x3, eq  // eq = none
   53954:	bl	c370 <mpfr_round_p@plt>
   53958:	cbnz	w0, 539d0 <mpfr_digamma@@Base+0x7a8>
   5395c:	ldr	x1, [sp, #120]
   53960:	mov	x0, #0xfffffffffffffeff    	// #-257
   53964:	movk	x0, #0x7fff, lsl #48
   53968:	sub	x0, x0, x20
   5396c:	cmp	x0, x1
   53970:	b.lt	539b8 <mpfr_digamma@@Base+0x790>  // b.tstop
   53974:	add	x20, x20, x1
   53978:	mov	x0, x22
   5397c:	mov	x1, x20
   53980:	add	x2, x20, x20, lsr #63
   53984:	asr	x2, x2, #1
   53988:	str	x2, [sp, #120]
   5398c:	bl	bed0 <mpfr_set_prec@plt>
   53990:	ldr	x0, [sp, #112]
   53994:	mov	x1, x20
   53998:	bl	bed0 <mpfr_set_prec@plt>
   5399c:	b	53498 <mpfr_digamma@@Base+0x270>
   539a0:	ldr	x2, [sp, #200]
   539a4:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   539a8:	mov	w1, #0x27                  	// #39
   539ac:	add	x0, x0, #0xa80
   539b0:	bl	cb40 <mpfr_assert_fail@plt>
   539b4:	b	535b0 <mpfr_digamma@@Base+0x388>
   539b8:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   539bc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   539c0:	add	x2, x2, #0x358
   539c4:	add	x0, x0, #0xa80
   539c8:	mov	w1, #0x11a                 	// #282
   539cc:	bl	cb40 <mpfr_assert_fail@plt>
   539d0:	ldr	w2, [sp, #136]
   539d4:	mov	x1, x22
   539d8:	ldr	w3, [sp, #216]
   539dc:	ldr	x28, [sp, #192]
   539e0:	mov	x0, x28
   539e4:	bl	c6a0 <mpfr_set4@plt>
   539e8:	mov	w19, w0
   539ec:	mov	x0, x22
   539f0:	bl	c070 <mpfr_clear@plt>
   539f4:	ldr	x0, [sp, #112]
   539f8:	bl	c070 <mpfr_clear@plt>
   539fc:	mov	x0, x21
   53a00:	bl	c070 <mpfr_clear@plt>
   53a04:	ldp	x21, x22, [sp, #32]
   53a08:	ldp	x23, x24, [sp, #48]
   53a0c:	ldp	x25, x26, [sp, #64]
   53a10:	b	53300 <mpfr_digamma@@Base+0xd8>
   53a14:	mov	x0, #0x2                   	// #2
   53a18:	movk	x0, #0x8000, lsl #48
   53a1c:	cmp	x1, x0
   53a20:	b.eq	53830 <mpfr_digamma@@Base+0x608>  // b.none
   53a24:	ldr	x0, [sp, #96]
   53a28:	cmp	x1, x2
   53a2c:	ldr	w3, [x0, #8]
   53a30:	b.ne	53b28 <mpfr_digamma@@Base+0x900>  // b.any
   53a34:	cmp	w3, #0x0
   53a38:	b.le	53830 <mpfr_digamma@@Base+0x608>
   53a3c:	mov	w19, #0x0                   	// #0
   53a40:	str	w3, [x28, #8]
   53a44:	str	x1, [x28, #16]
   53a48:	b	53370 <mpfr_digamma@@Base+0x148>
   53a4c:	ldr	x2, [sp, #96]
   53a50:	stp	x21, x22, [sp, #32]
   53a54:	ldr	w21, [sp, #136]
   53a58:	mov	x0, x28
   53a5c:	mov	x1, #0xffffffffffffffff    	// #-1
   53a60:	mov	w3, w21
   53a64:	bl	c8b0 <mpfr_si_div@plt>
   53a68:	mov	w19, w0
   53a6c:	cbnz	w0, 53ab8 <mpfr_digamma@@Base+0x890>
   53a70:	cmp	w21, #0x4
   53a74:	b.eq	53b88 <mpfr_digamma@@Base+0x960>  // b.none
   53a78:	ldr	w0, [sp, #136]
   53a7c:	cmp	w0, #0x1
   53a80:	b.eq	53ba0 <mpfr_digamma@@Base+0x978>  // b.none
   53a84:	ldr	w0, [sp, #136]
   53a88:	cmp	w0, #0x2
   53a8c:	b.eq	53bb8 <mpfr_digamma@@Base+0x990>  // b.none
   53a90:	cmp	w0, #0x3
   53a94:	mov	w19, #0x1                   	// #1
   53a98:	b.ne	53ab8 <mpfr_digamma@@Base+0x890>  // b.any
   53a9c:	nop
   53aa0:	mov	x0, x28
   53aa4:	bl	bdd0 <mpfr_nextbelow@plt>
   53aa8:	mov	w0, #0x3                   	// #3
   53aac:	mov	w19, #0xffffffff            	// #-1
   53ab0:	str	w0, [sp, #136]
   53ab4:	nop
   53ab8:	ldr	x3, [sp, #144]
   53abc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53ac0:	ldr	x1, [x0, #2576]
   53ac4:	add	x0, x0, #0xa10
   53ac8:	blr	x1
   53acc:	ldr	w4, [sp, #140]
   53ad0:	ldp	x21, x22, [sp, #32]
   53ad4:	ldr	w2, [x3, x0]
   53ad8:	ldr	x1, [x28, #16]
   53adc:	orr	w2, w4, w2
   53ae0:	str	w2, [x3, x0]
   53ae4:	str	w2, [sp, #140]
   53ae8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53aec:	ldr	x2, [x0, #2512]
   53af0:	add	x0, x0, #0x9d0
   53af4:	blr	x2
   53af8:	ldr	x2, [sp, #184]
   53afc:	str	x2, [x3, x0]
   53b00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53b04:	ldr	x4, [x0, #2544]
   53b08:	add	x0, x0, #0x9f0
   53b0c:	blr	x4
   53b10:	ldr	x4, [sp, #176]
   53b14:	str	x4, [x3, x0]
   53b18:	cmp	x1, x4
   53b1c:	ccmp	x1, x2, #0x1, le
   53b20:	b.lt	5335c <mpfr_digamma@@Base+0x134>  // b.tstop
   53b24:	b	53788 <mpfr_digamma@@Base+0x560>
   53b28:	mrs	x1, tpidr_el0
   53b2c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53b30:	ldr	x4, [x0, #2576]
   53b34:	add	x0, x0, #0xa10
   53b38:	blr	x4
   53b3c:	add	x0, x1, x0
   53b40:	neg	w3, w3
   53b44:	mov	w19, #0x0                   	// #0
   53b48:	str	w3, [x28, #8]
   53b4c:	str	x2, [x28, #16]
   53b50:	ldr	w1, [x0]
   53b54:	orr	w1, w1, #0x20
   53b58:	str	w1, [x0]
   53b5c:	b	53370 <mpfr_digamma@@Base+0x148>
   53b60:	ldr	w2, [sp, #136]
   53b64:	mov	x1, x22
   53b68:	ldr	w3, [sp, #216]
   53b6c:	mov	x0, x28
   53b70:	bl	c6a0 <mpfr_set4@plt>
   53b74:	mov	w19, w0
   53b78:	mov	x0, x22
   53b7c:	bl	c070 <mpfr_clear@plt>
   53b80:	ldp	x21, x22, [sp, #32]
   53b84:	b	53300 <mpfr_digamma@@Base+0xd8>
   53b88:	cmp	w20, #0x0
   53b8c:	b.gt	53aa0 <mpfr_digamma@@Base+0x878>
   53b90:	mov	w0, #0x2                   	// #2
   53b94:	mov	w19, #0x1                   	// #1
   53b98:	str	w0, [sp, #136]
   53b9c:	b	53ab8 <mpfr_digamma@@Base+0x890>
   53ba0:	mov	x19, x0
   53ba4:	mov	w0, #0x2                   	// #2
   53ba8:	str	w0, [sp, #136]
   53bac:	cmp	w20, #0x0
   53bb0:	b.gt	53ab8 <mpfr_digamma@@Base+0x890>
   53bb4:	b	53aa0 <mpfr_digamma@@Base+0x878>
   53bb8:	mov	w19, #0x1                   	// #1
   53bbc:	b	53ab8 <mpfr_digamma@@Base+0x890>
   53bc0:	stp	x29, x30, [sp, #-208]!
   53bc4:	mov	x29, sp
   53bc8:	stp	x23, x24, [sp, #48]
   53bcc:	mov	x24, x1
   53bd0:	ldr	x1, [x1, #16]
   53bd4:	stp	x19, x20, [sp, #16]
   53bd8:	stp	x27, x28, [sp, #80]
   53bdc:	mov	x28, x0
   53be0:	str	w2, [sp, #108]
   53be4:	ldr	x19, [x0]
   53be8:	ldr	x0, [x24]
   53bec:	tbnz	x1, #63, 53e40 <mpfr_digamma@@Base+0xc18>
   53bf0:	cmp	x1, x0
   53bf4:	csinc	x1, x1, x0, gt
   53bf8:	add	x23, sp, #0x90
   53bfc:	mov	x0, x23
   53c00:	bl	ca80 <mpfr_init2@plt>
   53c04:	mov	x0, x23
   53c08:	mov	x2, x24
   53c0c:	mov	w3, #0x0                   	// #0
   53c10:	mov	x1, #0x1                   	// #1
   53c14:	bl	ca50 <mpfr_ui_sub@plt>
   53c18:	cbnz	w0, 53e80 <mpfr_digamma@@Base+0xc58>
   53c1c:	mov	x1, x23
   53c20:	mov	w3, #0x0                   	// #0
   53c24:	mov	x2, #0x1                   	// #1
   53c28:	mov	x0, x23
   53c2c:	bl	c2c0 <mpfr_mul_2ui@plt>
   53c30:	mov	x0, x23
   53c34:	bl	c160 <mpfr_integer_p@plt>
   53c38:	mov	x1, x23
   53c3c:	mov	w20, w0
   53c40:	mov	w3, #0x0                   	// #0
   53c44:	mov	x0, x23
   53c48:	mov	x2, #0x1                   	// #1
   53c4c:	bl	c8f0 <mpfr_div_2ui@plt>
   53c50:	cbnz	w20, 53e4c <mpfr_digamma@@Base+0xc24>
   53c54:	add	x19, x19, #0xa
   53c58:	stp	x21, x22, [sp, #32]
   53c5c:	add	x21, sp, #0x70
   53c60:	mov	x1, x19
   53c64:	mov	x0, x21
   53c68:	add	x20, sp, #0xb0
   53c6c:	stp	x25, x26, [sp, #64]
   53c70:	bl	ca80 <mpfr_init2@plt>
   53c74:	mrs	x26, tpidr_el0
   53c78:	mov	x1, x19
   53c7c:	mov	x0, x20
   53c80:	mov	x22, #0x40                  	// #64
   53c84:	bl	ca80 <mpfr_init2@plt>
   53c88:	b	53cb0 <mpfr_digamma@@Base+0xa88>
   53c8c:	add	x19, x19, x22
   53c90:	mov	x0, x21
   53c94:	mov	x1, x19
   53c98:	bl	bed0 <mpfr_set_prec@plt>
   53c9c:	add	x22, x19, x19, lsr #63
   53ca0:	mov	x1, x19
   53ca4:	mov	x0, x20
   53ca8:	asr	x22, x22, #1
   53cac:	bl	bed0 <mpfr_set_prec@plt>
   53cb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   53cb4:	ldr	x1, [x0, #2624]
   53cb8:	add	x0, x0, #0xa40
   53cbc:	blr	x1
   53cc0:	mov	w2, #0x0                   	// #0
   53cc4:	add	x1, x26, x0
   53cc8:	mov	x0, x20
   53ccc:	bl	c380 <mpfr_cache@plt>
   53cd0:	mov	w3, #0x0                   	// #0
   53cd4:	mov	x2, x24
   53cd8:	mov	x1, x20
   53cdc:	mov	x0, x21
   53ce0:	bl	bd50 <mpfr_mul@plt>
   53ce4:	ldr	x5, [sp, #128]
   53ce8:	mov	x1, x21
   53cec:	mov	w2, #0x0                   	// #0
   53cf0:	mov	x0, x21
   53cf4:	sub	x25, x5, x19
   53cf8:	bl	ba70 <mpfr_cot@plt>
   53cfc:	ldr	x0, [sp, #128]
   53d00:	add	x6, x25, #0x2
   53d04:	mov	w3, #0x0                   	// #0
   53d08:	mov	x2, x20
   53d0c:	cmp	x0, #0x0
   53d10:	sub	x4, x19, x0
   53d14:	add	x0, x25, x0, lsl #1
   53d18:	mov	x1, x21
   53d1c:	add	x5, x0, #0x2
   53d20:	mov	x0, x21
   53d24:	csel	x5, x6, x5, le
   53d28:	add	x25, x4, x5
   53d2c:	bl	bd50 <mpfr_mul@plt>
   53d30:	mov	x1, x23
   53d34:	mov	w2, #0x0                   	// #0
   53d38:	mov	x0, x20
   53d3c:	bl	c9f0 <mpfr_digamma@plt>
   53d40:	mov	x1, x20
   53d44:	mov	w3, #0x0                   	// #0
   53d48:	mov	x2, x21
   53d4c:	mov	x0, x20
   53d50:	ldr	x27, [sp, #192]
   53d54:	bl	bb70 <mpfr_sub@plt>
   53d58:	ldr	x6, [sp, #128]
   53d5c:	add	x0, x25, #0x1
   53d60:	ldr	x1, [sp, #192]
   53d64:	sub	x3, x6, x1
   53d68:	sub	x5, x27, x1
   53d6c:	cmp	x1, x6
   53d70:	add	x3, x0, x3
   53d74:	csel	x0, x3, x0, lt  // lt = tstop
   53d78:	sub	x3, x5, #0x1
   53d7c:	cmp	x3, x0
   53d80:	add	x0, x0, #0x2
   53d84:	csel	x5, x5, x0, gt
   53d88:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   53d8c:	cmp	x1, x0
   53d90:	b.le	53dc4 <mpfr_digamma@@Base+0xb9c>
   53d94:	ldr	w0, [sp, #108]
   53d98:	sub	x2, x19, x5
   53d9c:	ldr	x1, [sp, #176]
   53da0:	cmp	w0, #0x0
   53da4:	ldr	x0, [sp, #200]
   53da8:	sub	x1, x1, #0x1
   53dac:	ldr	x3, [x28]
   53db0:	asr	x1, x1, #6
   53db4:	add	x1, x1, #0x1
   53db8:	cinc	x3, x3, eq  // eq = none
   53dbc:	bl	c370 <mpfr_round_p@plt>
   53dc0:	cbnz	w0, 53df0 <mpfr_digamma@@Base+0xbc8>
   53dc4:	mov	x0, #0xfffffffffffffeff    	// #-257
   53dc8:	movk	x0, #0x7fff, lsl #48
   53dcc:	sub	x0, x0, x19
   53dd0:	cmp	x0, x22
   53dd4:	b.ge	53c8c <mpfr_digamma@@Base+0xa64>  // b.tcont
   53dd8:	adrp	x2, 5e000 <mpfr_free_pool@@Base+0x2558>
   53ddc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   53de0:	add	x2, x2, #0x358
   53de4:	add	x0, x0, #0xa80
   53de8:	mov	w1, #0xb4                  	// #180
   53dec:	bl	cb40 <mpfr_assert_fail@plt>
   53df0:	ldr	w2, [sp, #108]
   53df4:	mov	x1, x20
   53df8:	ldr	w3, [sp, #184]
   53dfc:	mov	x0, x28
   53e00:	bl	c6a0 <mpfr_set4@plt>
   53e04:	mov	w19, w0
   53e08:	mov	x0, x21
   53e0c:	bl	c070 <mpfr_clear@plt>
   53e10:	mov	x0, x20
   53e14:	bl	c070 <mpfr_clear@plt>
   53e18:	mov	x0, x23
   53e1c:	ldp	x21, x22, [sp, #32]
   53e20:	ldp	x25, x26, [sp, #64]
   53e24:	bl	c070 <mpfr_clear@plt>
   53e28:	mov	w0, w19
   53e2c:	ldp	x19, x20, [sp, #16]
   53e30:	ldp	x23, x24, [sp, #48]
   53e34:	ldp	x27, x28, [sp, #80]
   53e38:	ldp	x29, x30, [sp], #208
   53e3c:	ret
   53e40:	add	x0, x0, #0x1
   53e44:	sub	x1, x0, x1
   53e48:	b	53bf8 <mpfr_digamma@@Base+0x9d0>
   53e4c:	ldr	w2, [sp, #108]
   53e50:	mov	x1, x23
   53e54:	mov	x0, x28
   53e58:	bl	c9f0 <mpfr_digamma@plt>
   53e5c:	mov	w19, w0
   53e60:	mov	x0, x23
   53e64:	bl	c070 <mpfr_clear@plt>
   53e68:	mov	w0, w19
   53e6c:	ldp	x19, x20, [sp, #16]
   53e70:	ldp	x23, x24, [sp, #48]
   53e74:	ldp	x27, x28, [sp, #80]
   53e78:	ldp	x29, x30, [sp], #208
   53e7c:	ret
   53e80:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   53e84:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   53e88:	add	x2, x2, #0xa90
   53e8c:	add	x0, x0, #0xa80
   53e90:	mov	w1, #0x88                  	// #136
   53e94:	stp	x21, x22, [sp, #32]
   53e98:	stp	x25, x26, [sp, #64]
   53e9c:	bl	cb40 <mpfr_assert_fail@plt>
   53ea0:	sub	sp, sp, #0x220
   53ea4:	mov	x2, #0x108                 	// #264
   53ea8:	stp	x29, x30, [sp]
   53eac:	mov	x29, sp
   53eb0:	stp	x19, x20, [sp, #16]
   53eb4:	mov	x20, x1
   53eb8:	adrp	x1, 66000 <mpfr_bases@@Base+0x16f8>
   53ebc:	add	x1, x1, #0xaa0
   53ec0:	stp	x21, x22, [sp, #32]
   53ec4:	add	x22, sp, #0x118
   53ec8:	mov	x19, x0
   53ecc:	stp	x25, x26, [sp, #64]
   53ed0:	add	x25, x0, x20, lsl #4
   53ed4:	mov	x0, x22
   53ed8:	bl	ba10 <memcpy@plt>
   53edc:	mov	x0, x25
   53ee0:	bl	bf90 <mpfr_mpz_init@plt>
   53ee4:	cbz	x20, 544e0 <mpfr_digamma@@Base+0x12b8>
   53ee8:	add	x26, sp, #0xc8
   53eec:	lsl	x21, x20, #1
   53ef0:	mov	x0, x26
   53ef4:	stp	x23, x24, [sp, #48]
   53ef8:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   53efc:	stp	x27, x28, [sp, #80]
   53f00:	bl	bf90 <mpfr_mpz_init@plt>
   53f04:	add	x2, x21, #0x1
   53f08:	mov	x19, x2
   53f0c:	mov	x0, x26
   53f10:	mov	x1, #0x6                   	// #6
   53f14:	str	x2, [sp, #104]
   53f18:	bl	bcb0 <__gmpz_set_ui@plt>
   53f1c:	movk	x24, #0xaaab
   53f20:	cmp	x19, #0x4
   53f24:	mov	x23, #0x5555555555555555    	// #6148914691236517205
   53f28:	mov	x19, #0x5                   	// #5
   53f2c:	b.hi	53f44 <mpfr_digamma@@Base+0xd1c>  // b.pmore
   53f30:	b	53fb0 <mpfr_digamma@@Base+0xd88>
   53f34:	ldr	x0, [sp, #104]
   53f38:	add	x19, x19, #0x2
   53f3c:	cmp	x0, x19
   53f40:	b.cc	53fb0 <mpfr_digamma@@Base+0xd88>  // b.lo, b.ul, b.last
   53f44:	sub	x1, x19, #0x1
   53f48:	udiv	x0, x21, x1
   53f4c:	msub	x0, x0, x1, x21
   53f50:	cbnz	x0, 53f34 <mpfr_digamma@@Base+0xd0c>
   53f54:	cmp	x19, #0x8
   53f58:	b.ls	53f8c <mpfr_digamma@@Base+0xd64>  // b.plast
   53f5c:	mul	x0, x19, x24
   53f60:	cmp	x0, x23
   53f64:	b.ls	53f34 <mpfr_digamma@@Base+0xd0c>  // b.plast
   53f68:	mov	x0, #0x3                   	// #3
   53f6c:	b	53f7c <mpfr_digamma@@Base+0xd54>
   53f70:	udiv	x2, x19, x0
   53f74:	msub	x2, x2, x0, x19
   53f78:	cbz	x2, 53f34 <mpfr_digamma@@Base+0xd0c>
   53f7c:	add	x0, x0, #0x2
   53f80:	mul	x1, x0, x0
   53f84:	cmp	x19, x1
   53f88:	b.cs	53f70 <mpfr_digamma@@Base+0xd48>  // b.hs, b.nlast
   53f8c:	mov	x2, x19
   53f90:	mov	x0, x26
   53f94:	mov	x1, x26
   53f98:	bl	c100 <__gmpz_mul_ui@plt>
   53f9c:	ldr	x0, [sp, #104]
   53fa0:	add	x19, x19, #0x2
   53fa4:	cmp	x0, x19
   53fa8:	b.cs	53f44 <mpfr_digamma@@Base+0xd1c>  // b.hs, b.nlast
   53fac:	nop
   53fb0:	cmp	x21, #0x40
   53fb4:	b.hi	54300 <mpfr_digamma@@Base+0x10d8>  // b.pmore
   53fb8:	lsr	x0, x21, #1
   53fbc:	add	x23, sp, #0xf8
   53fc0:	ldr	x22, [x22, x0, lsl #3]
   53fc4:	lsl	x20, x20, #2
   53fc8:	and	x0, x21, #0x2
   53fcc:	str	x0, [sp, #120]
   53fd0:	add	x0, x20, #0x3
   53fd4:	add	x19, sp, #0x98
   53fd8:	add	x28, sp, #0xa8
   53fdc:	add	x24, sp, #0xd8
   53fe0:	add	x20, sp, #0xb8
   53fe4:	str	x0, [sp, #112]
   53fe8:	sub	x0, x21, #0x1
   53fec:	str	x0, [sp, #96]
   53ff0:	mrs	x0, tpidr_el0
   53ff4:	str	x0, [sp, #128]
   53ff8:	mov	x0, x19
   53ffc:	bl	bf90 <mpfr_mpz_init@plt>
   54000:	mov	x0, x28
   54004:	bl	bf90 <mpfr_mpz_init@plt>
   54008:	mov	x0, x20
   5400c:	bl	bf90 <mpfr_mpz_init@plt>
   54010:	mov	x0, x20
   54014:	mov	x1, #0x1                   	// #1
   54018:	bl	bcb0 <__gmpz_set_ui@plt>
   5401c:	mov	x27, #0x4                   	// #4
   54020:	mov	x2, x22
   54024:	mov	x1, x20
   54028:	mov	x0, x20
   5402c:	bl	c200 <__gmpz_mul_2exp@plt>
   54030:	mov	x2, x21
   54034:	mov	x0, x28
   54038:	mov	x1, #0x3                   	// #3
   5403c:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   54040:	mov	x0, x19
   54044:	mov	x2, x28
   54048:	mov	x1, x20
   5404c:	bl	be30 <__gmpz_fdiv_q@plt>
   54050:	ldr	w0, [sp, #172]
   54054:	cmp	w0, #0x0
   54058:	b.le	540a0 <mpfr_digamma@@Base+0xe78>
   5405c:	nop
   54060:	mov	x1, x27
   54064:	mov	x2, x21
   54068:	mov	x0, x28
   5406c:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   54070:	mov	x2, x28
   54074:	mov	x1, x20
   54078:	mov	x0, x28
   5407c:	bl	be30 <__gmpz_fdiv_q@plt>
   54080:	mov	x0, x19
   54084:	mov	x2, x28
   54088:	mov	x1, x19
   5408c:	bl	c9c0 <__gmpz_add@plt>
   54090:	ldr	w0, [sp, #172]
   54094:	add	x27, x27, #0x1
   54098:	cmp	w0, #0x0
   5409c:	b.gt	54060 <mpfr_digamma@@Base+0xe38>
   540a0:	ldr	x2, [sp, #96]
   540a4:	mov	x1, x27
   540a8:	mov	x0, x28
   540ac:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   540b0:	ldr	x2, [sp, #96]
   540b4:	mov	x1, x28
   540b8:	mov	x0, x28
   540bc:	bl	c100 <__gmpz_mul_ui@plt>
   540c0:	mov	x2, x28
   540c4:	mov	x1, x20
   540c8:	mov	x0, x28
   540cc:	bl	c770 <__gmpz_cdiv_q@plt>
   540d0:	mov	x2, x28
   540d4:	mov	x1, x19
   540d8:	mov	x0, x19
   540dc:	bl	c9c0 <__gmpz_add@plt>
   540e0:	mov	x2, x20
   540e4:	mov	x1, x19
   540e8:	mov	x0, x19
   540ec:	bl	c9c0 <__gmpz_add@plt>
   540f0:	mov	x2, x21
   540f4:	mov	x1, x20
   540f8:	mov	x0, x20
   540fc:	bl	bb60 <__gmpz_cdiv_q_2exp@plt>
   54100:	mov	x2, x20
   54104:	mov	x1, x19
   54108:	mov	x0, x19
   5410c:	bl	c9c0 <__gmpz_add@plt>
   54110:	mov	x1, x21
   54114:	mov	x0, x28
   54118:	bl	bfc0 <__gmpz_fac_ui@plt>
   5411c:	mov	x2, x28
   54120:	mov	x1, x19
   54124:	mov	x0, x19
   54128:	bl	bff0 <__gmpz_mul@plt>
   5412c:	mov	x2, x26
   54130:	mov	x1, x19
   54134:	mov	x0, x19
   54138:	bl	bff0 <__gmpz_mul@plt>
   5413c:	mov	x2, #0x1                   	// #1
   54140:	mov	x1, x19
   54144:	mov	x0, x19
   54148:	bl	c200 <__gmpz_mul_2exp@plt>
   5414c:	mov	x1, x22
   54150:	mov	x0, x23
   54154:	bl	ca80 <mpfr_init2@plt>
   54158:	mov	x1, x19
   5415c:	mov	w2, #0x1                   	// #1
   54160:	mov	x0, x23
   54164:	bl	c240 <mpfr_set_z@plt>
   54168:	mov	w3, #0x1                   	// #1
   5416c:	mov	x2, x22
   54170:	mov	x1, x23
   54174:	mov	x0, x23
   54178:	bl	c8f0 <mpfr_div_2ui@plt>
   5417c:	mov	x1, x22
   54180:	mov	x0, x24
   54184:	bl	ca80 <mpfr_init2@plt>
   54188:	mov	w2, #0x2                   	// #2
   5418c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54190:	ldr	x1, [x0, #2624]
   54194:	add	x0, x0, #0xa40
   54198:	blr	x1
   5419c:	ldr	x1, [sp, #128]
   541a0:	add	x1, x1, x0
   541a4:	mov	x0, x24
   541a8:	bl	c380 <mpfr_cache@plt>
   541ac:	mov	x1, x24
   541b0:	mov	w3, #0x2                   	// #2
   541b4:	mov	x2, #0x1                   	// #1
   541b8:	mov	x0, x24
   541bc:	bl	c2c0 <mpfr_mul_2ui@plt>
   541c0:	mov	x2, x21
   541c4:	mov	x1, x24
   541c8:	mov	w3, #0x2                   	// #2
   541cc:	mov	x0, x24
   541d0:	bl	bf70 <mpfr_pow_ui@plt>
   541d4:	mov	x1, x23
   541d8:	mov	x2, x24
   541dc:	mov	x0, x23
   541e0:	mov	w3, #0x1                   	// #1
   541e4:	bl	c620 <mpfr_div@plt>
   541e8:	ldr	x0, [sp, #112]
   541ec:	mov	x1, #0x0                   	// #0
   541f0:	add	x4, x0, x27
   541f4:	cmp	x4, #0x1
   541f8:	b.ls	54214 <mpfr_digamma@@Base+0xfec>  // b.plast
   541fc:	nop
   54200:	add	x4, x4, #0x1
   54204:	add	x1, x1, #0x1
   54208:	cmp	x4, #0x3
   5420c:	lsr	x4, x4, #1
   54210:	b.hi	54200 <mpfr_digamma@@Base+0xfd8>  // b.pmore
   54214:	cmp	x22, x1
   54218:	b.ls	543ac <mpfr_digamma@@Base+0x1184>  // b.plast
   5421c:	ldr	x3, [sp, #248]
   54220:	ldr	x0, [sp, #272]
   54224:	sub	x3, x3, #0x1
   54228:	and	x3, x3, #0xffffffffffffffc0
   5422c:	add	x3, x3, #0x40
   54230:	str	x3, [sp, #136]
   54234:	sub	x2, x3, x22
   54238:	add	x1, x2, x1
   5423c:	bl	caa0 <__gmpn_scan1@plt>
   54240:	ldr	x3, [sp, #136]
   54244:	mov	x1, x23
   54248:	mov	w2, #0x2                   	// #2
   5424c:	sub	x0, x3, x0
   54250:	str	x0, [sp, #136]
   54254:	mov	x0, x25
   54258:	ldr	x27, [sp, #264]
   5425c:	bl	be00 <mpfr_get_z@plt>
   54260:	ldr	x1, [sp, #120]
   54264:	cbnz	x1, 5442c <mpfr_digamma@@Base+0x1204>
   54268:	ldr	w3, [x25, #4]
   5426c:	mov	x1, x28
   54270:	ldr	x2, [sp, #104]
   54274:	neg	w3, w3
   54278:	str	w3, [x25, #4]
   5427c:	mov	x0, x28
   54280:	bl	c100 <__gmpz_mul_ui@plt>
   54284:	mov	x2, x26
   54288:	mov	x1, x28
   5428c:	mov	x0, x28
   54290:	bl	bf60 <__gmpz_divexact@plt>
   54294:	mov	x2, x28
   54298:	mov	x1, x25
   5429c:	mov	x0, x25
   542a0:	bl	bff0 <__gmpz_mul@plt>
   542a4:	mov	x1, #0x1                   	// #1
   542a8:	mov	x0, x26
   542ac:	bl	bcb0 <__gmpz_set_ui@plt>
   542b0:	mov	x0, x24
   542b4:	bl	c070 <mpfr_clear@plt>
   542b8:	mov	x0, x23
   542bc:	bl	c070 <mpfr_clear@plt>
   542c0:	mov	x0, x19
   542c4:	bl	c170 <mpfr_mpz_clear@plt>
   542c8:	mov	x0, x28
   542cc:	bl	c170 <mpfr_mpz_clear@plt>
   542d0:	mov	x0, x20
   542d4:	bl	c170 <mpfr_mpz_clear@plt>
   542d8:	ldr	x0, [sp, #136]
   542dc:	cmp	x27, x0
   542e0:	b.cc	5449c <mpfr_digamma@@Base+0x1274>  // b.lo, b.ul, b.last
   542e4:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   542e8:	movk	x0, #0x6667
   542ec:	smulh	x0, x22, x0
   542f0:	asr	x0, x0, #2
   542f4:	sub	x0, x0, x22, asr #63
   542f8:	add	x22, x22, x0
   542fc:	b	53ff8 <mpfr_digamma@@Base+0xdd0>
   54300:	ucvtf	d0, x21
   54304:	fmov	d1, #7.000000000000000000e+00
   54308:	add	x23, sp, #0xf8
   5430c:	fmul	d0, d0, d1
   54310:	bl	c950 <__gmpfr_ceil_log2@plt>
   54314:	add	x19, x0, #0x1
   54318:	mov	x1, #0x35                  	// #53
   5431c:	mov	x0, x23
   54320:	bl	ca80 <mpfr_init2@plt>
   54324:	asr	x19, x19, #1
   54328:	mov	x1, #0x1f2c                	// #7980
   5432c:	mov	w3, #0x2                   	// #2
   54330:	movk	x1, #0xefd, lsl #16
   54334:	mov	x2, #0xffffffffffffffe0    	// #-32
   54338:	mov	x0, x23
   5433c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   54340:	mov	w3, #0x2                   	// #2
   54344:	mov	x1, x23
   54348:	mov	x2, x21
   5434c:	mov	x0, x23
   54350:	bl	ba50 <mpfr_mul_ui@plt>
   54354:	add	x19, x19, #0xe
   54358:	mov	x1, x23
   5435c:	mov	w2, #0x2                   	// #2
   54360:	mov	x0, x23
   54364:	bl	c1d0 <mpfr_log2@plt>
   54368:	mov	x2, x21
   5436c:	mov	w3, #0x2                   	// #2
   54370:	mov	x1, x23
   54374:	mov	x0, x23
   54378:	bl	ba50 <mpfr_mul_ui@plt>
   5437c:	mov	w1, #0x2                   	// #2
   54380:	mov	x0, x23
   54384:	bl	bca0 <mpfr_get_ui@plt>
   54388:	mov	x22, x0
   5438c:	mov	x0, x23
   54390:	bl	c070 <mpfr_clear@plt>
   54394:	mov	x0, x26
   54398:	mov	w1, #0x2                   	// #2
   5439c:	bl	cb60 <__gmpz_sizeinbase@plt>
   543a0:	add	x22, x0, x22
   543a4:	add	x22, x19, x22
   543a8:	b	53fc4 <mpfr_digamma@@Base+0xd9c>
   543ac:	mov	x1, x23
   543b0:	mov	x0, x25
   543b4:	mov	w2, #0x2                   	// #2
   543b8:	bl	be00 <mpfr_get_z@plt>
   543bc:	ldr	x0, [sp, #120]
   543c0:	cbz	x0, 544c4 <mpfr_digamma@@Base+0x129c>
   543c4:	ldr	x2, [sp, #104]
   543c8:	mov	x1, x28
   543cc:	mov	x0, x28
   543d0:	bl	c100 <__gmpz_mul_ui@plt>
   543d4:	mov	x2, x26
   543d8:	mov	x1, x28
   543dc:	mov	x0, x28
   543e0:	bl	bf60 <__gmpz_divexact@plt>
   543e4:	mov	x2, x28
   543e8:	mov	x1, x25
   543ec:	mov	x0, x25
   543f0:	bl	bff0 <__gmpz_mul@plt>
   543f4:	mov	x1, #0x1                   	// #1
   543f8:	mov	x0, x26
   543fc:	bl	bcb0 <__gmpz_set_ui@plt>
   54400:	mov	x0, x24
   54404:	bl	c070 <mpfr_clear@plt>
   54408:	mov	x0, x23
   5440c:	bl	c070 <mpfr_clear@plt>
   54410:	mov	x0, x19
   54414:	bl	c170 <mpfr_mpz_clear@plt>
   54418:	mov	x0, x28
   5441c:	bl	c170 <mpfr_mpz_clear@plt>
   54420:	mov	x0, x20
   54424:	bl	c170 <mpfr_mpz_clear@plt>
   54428:	b	542e4 <mpfr_digamma@@Base+0x10bc>
   5442c:	ldr	x2, [sp, #104]
   54430:	mov	x1, x28
   54434:	mov	x0, x28
   54438:	bl	c100 <__gmpz_mul_ui@plt>
   5443c:	mov	x2, x26
   54440:	mov	x1, x28
   54444:	mov	x0, x28
   54448:	bl	bf60 <__gmpz_divexact@plt>
   5444c:	mov	x2, x28
   54450:	mov	x1, x25
   54454:	mov	x0, x25
   54458:	bl	bff0 <__gmpz_mul@plt>
   5445c:	mov	x1, #0x1                   	// #1
   54460:	mov	x0, x26
   54464:	bl	bcb0 <__gmpz_set_ui@plt>
   54468:	mov	x0, x24
   5446c:	bl	c070 <mpfr_clear@plt>
   54470:	mov	x0, x23
   54474:	bl	c070 <mpfr_clear@plt>
   54478:	mov	x0, x19
   5447c:	bl	c170 <mpfr_mpz_clear@plt>
   54480:	mov	x0, x28
   54484:	bl	c170 <mpfr_mpz_clear@plt>
   54488:	mov	x0, x20
   5448c:	bl	c170 <mpfr_mpz_clear@plt>
   54490:	ldr	x1, [sp, #136]
   54494:	cmp	x27, x1
   54498:	b.cs	542e4 <mpfr_digamma@@Base+0x10bc>  // b.hs, b.nlast
   5449c:	mov	x0, x26
   544a0:	bl	c170 <mpfr_mpz_clear@plt>
   544a4:	ldp	x29, x30, [sp]
   544a8:	ldp	x19, x20, [sp, #16]
   544ac:	ldp	x21, x22, [sp, #32]
   544b0:	ldp	x23, x24, [sp, #48]
   544b4:	ldp	x25, x26, [sp, #64]
   544b8:	ldp	x27, x28, [sp, #80]
   544bc:	add	sp, sp, #0x220
   544c0:	ret
   544c4:	ldr	w3, [x25, #4]
   544c8:	mov	x1, x28
   544cc:	mov	x0, x28
   544d0:	neg	w3, w3
   544d4:	str	w3, [x25, #4]
   544d8:	ldr	x2, [sp, #104]
   544dc:	b	543d0 <mpfr_digamma@@Base+0x11a8>
   544e0:	mov	x0, x19
   544e4:	mov	x1, #0x1                   	// #1
   544e8:	bl	bcb0 <__gmpz_set_ui@plt>
   544ec:	ldp	x29, x30, [sp]
   544f0:	ldp	x19, x20, [sp, #16]
   544f4:	ldp	x21, x22, [sp, #32]
   544f8:	ldp	x25, x26, [sp, #64]
   544fc:	add	sp, sp, #0x220
   54500:	ret
   54504:	nop

0000000000054508 <mpfr_bernoulli_cache@@Base>:
   54508:	stp	x29, x30, [sp, #-64]!
   5450c:	mov	x29, sp
   54510:	stp	x21, x22, [sp, #32]
   54514:	mrs	x21, tpidr_el0
   54518:	stp	x19, x20, [sp, #16]
   5451c:	mov	x20, x0
   54520:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54524:	ldr	x1, [x0, #2480]
   54528:	add	x0, x0, #0x9b0
   5452c:	blr	x1
   54530:	ldr	x19, [x21, x0]
   54534:	add	x22, x21, x0
   54538:	cmp	x19, x20
   5453c:	b.hi	54594 <mpfr_bernoulli_cache@@Base+0x8c>  // b.pmore
   54540:	ldr	x1, [x22, #8]
   54544:	cbz	x1, 545c0 <mpfr_bernoulli_cache@@Base+0xb8>
   54548:	cmp	x1, x20
   5454c:	b.ls	545ec <mpfr_bernoulli_cache@@Base+0xe4>  // b.plast
   54550:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54554:	ldr	x1, [x0, #2480]
   54558:	add	x0, x0, #0x9b0
   5455c:	blr	x1
   54560:	add	x0, x21, x0
   54564:	ldr	x0, [x0, #16]
   54568:	mov	x1, x19
   5456c:	add	x19, x19, #0x1
   54570:	bl	53ea0 <mpfr_digamma@@Base+0xc78>
   54574:	cmp	x20, x19
   54578:	b.cs	54550 <mpfr_bernoulli_cache@@Base+0x48>  // b.hs, b.nlast
   5457c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54580:	ldr	x1, [x0, #2480]
   54584:	add	x0, x0, #0x9b0
   54588:	blr	x1
   5458c:	add	x1, x20, #0x1
   54590:	str	x1, [x21, x0]
   54594:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54598:	ldr	x1, [x0, #2480]
   5459c:	add	x0, x0, #0x9b0
   545a0:	blr	x1
   545a4:	add	x0, x21, x0
   545a8:	ldp	x21, x22, [sp, #32]
   545ac:	ldr	x0, [x0, #16]
   545b0:	add	x0, x0, x20, lsl #4
   545b4:	ldp	x19, x20, [sp, #16]
   545b8:	ldp	x29, x30, [sp], #64
   545bc:	ret
   545c0:	add	x0, x20, x20, lsr #2
   545c4:	mov	x1, #0x10                  	// #16
   545c8:	cmp	x0, x1
   545cc:	mov	x19, #0x0                   	// #0
   545d0:	csel	x0, x0, x1, cs  // cs = hs, nlast
   545d4:	str	x0, [x22, #8]
   545d8:	lsl	x0, x0, #4
   545dc:	bl	ccf0 <mpfr_allocate_func@plt>
   545e0:	str	xzr, [x22]
   545e4:	str	x0, [x22, #16]
   545e8:	b	54568 <mpfr_bernoulli_cache@@Base+0x60>
   545ec:	ldr	x0, [x22, #16]
   545f0:	str	x23, [sp, #48]
   545f4:	add	x23, x20, x20, lsr #2
   545f8:	lsl	x1, x1, #4
   545fc:	lsl	x2, x23, #4
   54600:	bl	c1c0 <mpfr_reallocate_func@plt>
   54604:	ldr	x19, [x22]
   54608:	stp	x23, x0, [x22, #8]
   5460c:	cmp	x20, x19
   54610:	ldr	x23, [sp, #48]
   54614:	b.cs	54550 <mpfr_bernoulli_cache@@Base+0x48>  // b.hs, b.nlast
   54618:	b	5457c <mpfr_bernoulli_cache@@Base+0x74>
   5461c:	nop

0000000000054620 <mpfr_bernoulli_freecache@@Base>:
   54620:	stp	x29, x30, [sp, #-32]!
   54624:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54628:	ldr	x1, [x0, #2480]
   5462c:	add	x0, x0, #0x9b0
   54630:	blr	x1
   54634:	mov	x29, sp
   54638:	stp	x19, x20, [sp, #16]
   5463c:	mrs	x20, tpidr_el0
   54640:	add	x0, x20, x0
   54644:	ldr	x1, [x0, #16]
   54648:	cbz	x1, 546b4 <mpfr_bernoulli_freecache@@Base+0x94>
   5464c:	ldr	x0, [x0]
   54650:	cbz	x0, 54688 <mpfr_bernoulli_freecache@@Base+0x68>
   54654:	mov	x19, #0x0                   	// #0
   54658:	add	x0, x1, x19, lsl #4
   5465c:	bl	c170 <mpfr_mpz_clear@plt>
   54660:	add	x19, x19, #0x1
   54664:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54668:	ldr	x1, [x0, #2480]
   5466c:	add	x0, x0, #0x9b0
   54670:	blr	x1
   54674:	add	x1, x20, x0
   54678:	ldr	x0, [x20, x0]
   5467c:	ldr	x1, [x1, #16]
   54680:	cmp	x0, x19
   54684:	b.hi	54658 <mpfr_bernoulli_freecache@@Base+0x38>  // b.pmore
   54688:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5468c:	ldr	x2, [x0, #2480]
   54690:	add	x0, x0, #0x9b0
   54694:	blr	x2
   54698:	add	x20, x20, x0
   5469c:	mov	x0, x1
   546a0:	ldr	x1, [x20, #8]
   546a4:	lsl	x1, x1, #4
   546a8:	bl	cc20 <mpfr_free_func@plt>
   546ac:	stp	xzr, xzr, [x20]
   546b0:	str	xzr, [x20, #16]
   546b4:	ldp	x19, x20, [sp, #16]
   546b8:	ldp	x29, x30, [sp], #32
   546bc:	ret

00000000000546c0 <mpfr_regular_p@@Base>:
   546c0:	ldr	x0, [x0, #16]
   546c4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   546c8:	cmp	x0, x1
   546cc:	cset	w0, gt
   546d0:	ret
   546d4:	nop

00000000000546d8 <mpfr_set_flt@@Base>:
   546d8:	fcvt	d0, s0
   546dc:	b	be40 <mpfr_set_d@plt>

00000000000546e0 <mpfr_get_flt@@Base>:
   546e0:	stp	x29, x30, [sp, #-48]!
   546e4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   546e8:	mov	x29, sp
   546ec:	stp	x19, x20, [sp, #16]
   546f0:	ldr	x19, [x0, #16]
   546f4:	cmp	x19, x2
   546f8:	b.le	54780 <mpfr_get_flt@@Base+0xa0>
   546fc:	ldr	w20, [x0, #8]
   54700:	mov	x4, x0
   54704:	mov	w5, w1
   54708:	cmp	w1, #0x4
   5470c:	lsr	w3, w20, #31
   54710:	b.eq	54794 <mpfr_get_flt@@Base+0xb4>  // b.none
   54714:	cmn	x19, #0x94
   54718:	b.lt	547b0 <mpfr_get_flt@@Base+0xd0>  // b.tstop
   5471c:	cmp	x19, #0x80
   54720:	b.gt	547c8 <mpfr_get_flt@@Base+0xe8>
   54724:	ldr	x2, [x4]
   54728:	cmn	x19, #0x7d
   5472c:	ldr	x1, [x4, #24]
   54730:	mov	x6, #0x18                  	// #24
   54734:	add	w4, w19, #0x95
   54738:	add	x0, sp, #0x28
   5473c:	csel	x4, x4, x6, lt  // lt = tstop
   54740:	bl	c720 <mpfr_round_raw_4@plt>
   54744:	cbnz	w0, 547f0 <mpfr_get_flt@@Base+0x110>
   54748:	ldr	d0, [sp, #40]
   5474c:	mov	x0, #0x3bf0000000000000    	// #4318952042648305664
   54750:	fmov	d1, x0
   54754:	ucvtf	d0, d0
   54758:	fmul	d0, d0, d1
   5475c:	mov	w0, w19
   54760:	bl	cba0 <mpfr_scale2@plt>
   54764:	fneg	d1, d0
   54768:	cmp	w20, #0x0
   5476c:	fcsel	d0, d1, d0, lt  // lt = tstop
   54770:	fcvt	s0, d0
   54774:	ldp	x19, x20, [sp, #16]
   54778:	ldp	x29, x30, [sp], #48
   5477c:	ret
   54780:	bl	bd30 <mpfr_get_d@plt>
   54784:	fcvt	s0, d0
   54788:	ldp	x19, x20, [sp, #16]
   5478c:	ldp	x29, x30, [sp], #48
   54790:	ret
   54794:	tbnz	w20, #31, 54864 <mpfr_get_flt@@Base+0x184>
   54798:	cmn	x19, #0x94
   5479c:	b.lt	5483c <mpfr_get_flt@@Base+0x15c>  // b.tstop
   547a0:	cmp	x19, #0x80
   547a4:	b.gt	547e0 <mpfr_get_flt@@Base+0x100>
   547a8:	mov	w5, #0x2                   	// #2
   547ac:	b	54724 <mpfr_get_flt@@Base+0x44>
   547b0:	tbnz	w20, #31, 547f8 <mpfr_get_flt@@Base+0x118>
   547b4:	cmp	w1, #0x2
   547b8:	b.eq	5483c <mpfr_get_flt@@Base+0x15c>  // b.none
   547bc:	cbz	w1, 54828 <mpfr_get_flt@@Base+0x148>
   547c0:	movi	v0.2s, #0x0
   547c4:	b	54774 <mpfr_get_flt@@Base+0x94>
   547c8:	tbnz	w20, #31, 5480c <mpfr_get_flt@@Base+0x12c>
   547cc:	and	w5, w1, #0xfffffffd
   547d0:	mov	w0, #0x7f7fffff            	// #2139095039
   547d4:	cmp	w5, #0x1
   547d8:	fmov	s0, w0
   547dc:	b.eq	54774 <mpfr_get_flt@@Base+0x94>  // b.none
   547e0:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   547e4:	ldr	d0, [x0, #2992]
   547e8:	fcvt	s0, d0
   547ec:	b	54774 <mpfr_get_flt@@Base+0x94>
   547f0:	fmov	d0, #1.000000000000000000e+00
   547f4:	b	5475c <mpfr_get_flt@@Base+0x7c>
   547f8:	cmp	w1, #0x3
   547fc:	b.eq	54858 <mpfr_get_flt@@Base+0x178>  // b.none
   54800:	cbz	w1, 54844 <mpfr_get_flt@@Base+0x164>
   54804:	movi	v0.2s, #0x80, lsl #24
   54808:	b	54774 <mpfr_get_flt@@Base+0x94>
   5480c:	sub	w5, w1, #0x1
   54810:	cmp	w5, #0x1
   54814:	b.ls	5487c <mpfr_get_flt@@Base+0x19c>  // b.plast
   54818:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5481c:	ldr	d0, [x0, #2984]
   54820:	fcvt	s0, d0
   54824:	b	54774 <mpfr_get_flt@@Base+0x94>
   54828:	mov	x2, #0xffffffffffffff6a    	// #-150
   5482c:	mov	x1, #0x1                   	// #1
   54830:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   54834:	cmp	w0, #0x0
   54838:	b.le	547c0 <mpfr_get_flt@@Base+0xe0>
   5483c:	movi	v0.2s, #0x1
   54840:	b	54774 <mpfr_get_flt@@Base+0x94>
   54844:	mov	x2, #0xffffffffffffff6a    	// #-150
   54848:	mov	x1, #0xffffffffffffffff    	// #-1
   5484c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   54850:	tbz	w0, #31, 54804 <mpfr_get_flt@@Base+0x124>
   54854:	nop
   54858:	mov	w0, #0x80000001            	// #-2147483647
   5485c:	fmov	s0, w0
   54860:	b	54774 <mpfr_get_flt@@Base+0x94>
   54864:	cmn	x19, #0x94
   54868:	b.lt	54858 <mpfr_get_flt@@Base+0x178>  // b.tstop
   5486c:	cmp	x19, #0x80
   54870:	b.gt	54818 <mpfr_get_flt@@Base+0x138>
   54874:	mov	w5, #0x3                   	// #3
   54878:	b	54724 <mpfr_get_flt@@Base+0x44>
   5487c:	mvni	v0.2s, #0x80, lsl #16
   54880:	b	54774 <mpfr_get_flt@@Base+0x94>
   54884:	nop

0000000000054888 <mpfr_scale2@@Base>:
   54888:	fmov	d1, #1.000000000000000000e+00
   5488c:	fcmp	d0, d1
   54890:	b.eq	548b8 <mpfr_scale2@@Base+0x30>  // b.none
   54894:	cmn	w0, #0x3fd
   54898:	fmov	x1, d0
   5489c:	and	w0, w0, #0xffff
   548a0:	b.lt	548d0 <mpfr_scale2@@Base+0x48>  // b.tstop
   548a4:	ubfx	x2, x1, #52, #11
   548a8:	add	w0, w0, w2
   548ac:	bfi	x1, x0, #52, #11
   548b0:	fmov	d0, x1
   548b4:	ret
   548b8:	fmov	d0, #5.000000000000000000e-01
   548bc:	add	w0, w0, #0x1
   548c0:	cmn	w0, #0x3fd
   548c4:	and	w0, w0, #0xffff
   548c8:	fmov	x1, d0
   548cc:	b.ge	548a4 <mpfr_scale2@@Base+0x1c>  // b.tcont
   548d0:	ubfx	x3, x1, #52, #11
   548d4:	mov	x2, #0x3cb0000000000000    	// #4372995238176751616
   548d8:	add	w3, w3, #0x34
   548dc:	fmov	d0, x2
   548e0:	add	w0, w0, w3
   548e4:	bfi	x1, x0, #52, #11
   548e8:	fmov	d1, x1
   548ec:	fmul	d0, d1, d0
   548f0:	fmov	x1, d0
   548f4:	fmov	d0, x1
   548f8:	ret
   548fc:	nop

0000000000054900 <mpfr_set_z_2exp@@Base>:
   54900:	stp	x29, x30, [sp, #-128]!
   54904:	mov	x29, sp
   54908:	ldr	w4, [x1, #4]
   5490c:	stp	x19, x20, [sp, #16]
   54910:	mov	x19, x0
   54914:	cmp	w4, #0x0
   54918:	stp	x25, x26, [sp, #64]
   5491c:	mov	w25, w3
   54920:	b.lt	54b14 <mpfr_set_z_2exp@@Base+0x214>  // b.tstop
   54924:	str	wzr, [sp, #124]
   54928:	mov	w26, #0x1                   	// #1
   5492c:	b.eq	54b44 <mpfr_set_z_2exp@@Base+0x244>  // b.none
   54930:	cmp	w4, #0x0
   54934:	cneg	w4, w4, lt  // lt = tstop
   54938:	sxtw	x7, w4
   5493c:	tbnz	x2, #63, 54950 <mpfr_set_z_2exp@@Base+0x50>
   54940:	add	x3, x7, x2, asr #6
   54944:	mov	x0, #0x100000000000000     	// #72057594037927936
   54948:	cmp	x3, x0
   5494c:	b.gt	54ddc <mpfr_set_z_2exp@@Base+0x4dc>
   54950:	ldr	x6, [x1, #8]
   54954:	stp	x23, x24, [sp, #48]
   54958:	mrs	x23, tpidr_el0
   5495c:	ldr	x3, [x19]
   54960:	add	x1, x6, w4, sxtw #3
   54964:	mov	w8, #0x40                  	// #64
   54968:	stp	x21, x22, [sp, #32]
   5496c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54970:	ldr	x5, [x0, #2544]
   54974:	add	x0, x0, #0x9f0
   54978:	blr	x5
   5497c:	ldur	x22, [x1, #-8]
   54980:	stp	x27, x28, [sp, #80]
   54984:	sub	x27, x3, #0x1
   54988:	smaddl	x4, w4, w8, x2
   5498c:	clz	x20, x22
   54990:	ldr	x0, [x23, x0]
   54994:	asr	x27, x27, #6
   54998:	mov	x22, x20
   5499c:	add	x2, x27, #0x1
   549a0:	sub	x20, x4, x20
   549a4:	sub	x21, x7, x2
   549a8:	cmp	x0, x20
   549ac:	ldr	x24, [x19, #24]
   549b0:	b.lt	54db4 <mpfr_set_z_2exp@@Base+0x4b4>  // b.tstop
   549b4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   549b8:	ldr	x1, [x0, #2512]
   549bc:	add	x0, x0, #0x9d0
   549c0:	blr	x1
   549c4:	add	x28, x20, #0x1
   549c8:	ldr	x0, [x23, x0]
   549cc:	cmp	x28, x0
   549d0:	b.lt	54dec <mpfr_set_z_2exp@@Base+0x4ec>  // b.tstop
   549d4:	lsl	x1, x21, #3
   549d8:	tbnz	x21, #63, 54b90 <mpfr_set_z_2exp@@Base+0x290>
   549dc:	add	x1, x6, x1
   549e0:	cbz	x22, 54c00 <mpfr_set_z_2exp@@Base+0x300>
   549e4:	mov	w3, w22
   549e8:	mov	x0, x24
   549ec:	stp	x1, x6, [sp, #104]
   549f0:	bl	bcc0 <__gmpn_lshift@plt>
   549f4:	mov	w8, #0x40                  	// #64
   549f8:	ldp	x1, x6, [sp, #104]
   549fc:	cbnz	x21, 54cf0 <mpfr_set_z_2exp@@Base+0x3f0>
   54a00:	ldr	x0, [x19]
   54a04:	neg	w0, w0
   54a08:	ands	w0, w0, #0x3f
   54a0c:	b.eq	54cc8 <mpfr_set_z_2exp@@Base+0x3c8>  // b.none
   54a10:	sub	w0, w0, #0x1
   54a14:	mov	x3, #0x1                   	// #1
   54a18:	ldr	x1, [x24]
   54a1c:	mov	x2, #0x2                   	// #2
   54a20:	lsl	x2, x2, x0
   54a24:	neg	x4, x2
   54a28:	lsl	x0, x3, x0
   54a2c:	sub	x3, x0, #0x1
   54a30:	and	x4, x4, x1
   54a34:	and	x3, x3, x1
   54a38:	and	x1, x1, x0
   54a3c:	str	x4, [x24]
   54a40:	cbnz	w25, 54ca8 <mpfr_set_z_2exp@@Base+0x3a8>
   54a44:	cbz	x1, 54b64 <mpfr_set_z_2exp@@Base+0x264>
   54a48:	ldr	x0, [x24]
   54a4c:	cbz	x3, 54d58 <mpfr_set_z_2exp@@Base+0x458>
   54a50:	adds	x2, x2, x0
   54a54:	str	x2, [x24]
   54a58:	b.cc	54aa8 <mpfr_set_z_2exp@@Base+0x1a8>  // b.lo, b.ul, b.last
   54a5c:	mov	x2, x24
   54a60:	add	x0, x24, x27, lsl #3
   54a64:	b	54a78 <mpfr_set_z_2exp@@Base+0x178>
   54a68:	ldr	x1, [x2, #8]
   54a6c:	add	x1, x1, #0x1
   54a70:	str	x1, [x2, #8]!
   54a74:	cbnz	x1, 54aa8 <mpfr_set_z_2exp@@Base+0x1a8>
   54a78:	cmp	x2, x0
   54a7c:	b.ne	54a68 <mpfr_set_z_2exp@@Base+0x168>  // b.any
   54a80:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54a84:	ldr	x1, [x0, #2544]
   54a88:	add	x0, x0, #0x9f0
   54a8c:	blr	x1
   54a90:	ldr	x0, [x23, x0]
   54a94:	cmp	x0, x20
   54a98:	b.eq	54db4 <mpfr_set_z_2exp@@Base+0x4b4>  // b.none
   54a9c:	mov	x20, x28
   54aa0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   54aa4:	str	x0, [x24, x27, lsl #3]
   54aa8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54aac:	ldr	x1, [x0, #2512]
   54ab0:	add	x0, x0, #0x9d0
   54ab4:	blr	x1
   54ab8:	ldr	x0, [x23, x0]
   54abc:	cmp	x0, x20
   54ac0:	b.gt	54bd8 <mpfr_set_z_2exp@@Base+0x2d8>
   54ac4:	mov	w4, w26
   54ac8:	str	w26, [x19, #8]
   54acc:	str	x20, [x19, #16]
   54ad0:	cbz	w4, 54b24 <mpfr_set_z_2exp@@Base+0x224>
   54ad4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54ad8:	ldr	x1, [x0, #2576]
   54adc:	add	x0, x0, #0xa10
   54ae0:	blr	x1
   54ae4:	add	x0, x23, x0
   54ae8:	ldp	x21, x22, [sp, #32]
   54aec:	ldr	w1, [x0]
   54af0:	ldp	x23, x24, [sp, #48]
   54af4:	orr	w1, w1, #0x8
   54af8:	ldp	x27, x28, [sp, #80]
   54afc:	str	w1, [x0]
   54b00:	mov	w0, w4
   54b04:	ldp	x19, x20, [sp, #16]
   54b08:	ldp	x25, x26, [sp, #64]
   54b0c:	ldp	x29, x30, [sp], #128
   54b10:	ret
   54b14:	mov	w0, #0x1                   	// #1
   54b18:	mov	w26, #0xffffffff            	// #-1
   54b1c:	str	w0, [sp, #124]
   54b20:	b	54930 <mpfr_set_z_2exp@@Base+0x30>
   54b24:	mov	w0, w4
   54b28:	ldp	x19, x20, [sp, #16]
   54b2c:	ldp	x21, x22, [sp, #32]
   54b30:	ldp	x23, x24, [sp, #48]
   54b34:	ldp	x25, x26, [sp, #64]
   54b38:	ldp	x27, x28, [sp, #80]
   54b3c:	ldp	x29, x30, [sp], #128
   54b40:	ret
   54b44:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   54b48:	str	w26, [x19, #8]
   54b4c:	str	x0, [x19, #16]
   54b50:	mov	w0, w4
   54b54:	ldp	x19, x20, [sp, #16]
   54b58:	ldp	x25, x26, [sp, #64]
   54b5c:	ldp	x29, x30, [sp], #128
   54b60:	ret
   54b64:	cmp	x3, #0x0
   54b68:	csetm	w1, ne  // ne = any
   54b6c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54b70:	ldr	x2, [x0, #2512]
   54b74:	add	x0, x0, #0x9d0
   54b78:	blr	x2
   54b7c:	ldr	x0, [x23, x0]
   54b80:	cmp	x0, x20
   54b84:	b.gt	54bc0 <mpfr_set_z_2exp@@Base+0x2c0>
   54b88:	mul	w4, w1, w26
   54b8c:	b	54ac8 <mpfr_set_z_2exp@@Base+0x1c8>
   54b90:	sub	x0, x24, x1
   54b94:	cbz	x22, 54d68 <mpfr_set_z_2exp@@Base+0x468>
   54b98:	mov	w3, w22
   54b9c:	mov	x2, x7
   54ba0:	mov	x1, x6
   54ba4:	bl	bcc0 <__gmpn_lshift@plt>
   54ba8:	neg	x2, x21, lsl #3
   54bac:	mov	x0, x24
   54bb0:	mov	w1, #0x0                   	// #0
   54bb4:	bl	c110 <memset@plt>
   54bb8:	mov	w1, #0x0                   	// #0
   54bbc:	b	54b6c <mpfr_set_z_2exp@@Base+0x26c>
   54bc0:	orr	w4, w1, w25
   54bc4:	cbnz	w4, 54bd8 <mpfr_set_z_2exp@@Base+0x2d8>
   54bc8:	mov	x0, x19
   54bcc:	bl	bf00 <mpfr_powerof2_raw@plt>
   54bd0:	cmp	w0, #0x0
   54bd4:	cset	w25, ne  // ne = any
   54bd8:	mov	w2, w26
   54bdc:	mov	w1, w25
   54be0:	mov	x0, x19
   54be4:	ldp	x19, x20, [sp, #16]
   54be8:	ldp	x21, x22, [sp, #32]
   54bec:	ldp	x23, x24, [sp, #48]
   54bf0:	ldp	x25, x26, [sp, #64]
   54bf4:	ldp	x27, x28, [sp, #80]
   54bf8:	ldp	x29, x30, [sp], #128
   54bfc:	b	c3c0 <mpfr_underflow@plt>
   54c00:	cmp	x1, x24
   54c04:	b.eq	54c20 <mpfr_set_z_2exp@@Base+0x320>  // b.none
   54c08:	lsl	x2, x2, #3
   54c0c:	mov	x0, x24
   54c10:	str	x6, [sp, #104]
   54c14:	bl	ba10 <memcpy@plt>
   54c18:	ldr	x3, [x19]
   54c1c:	ldr	x6, [sp, #104]
   54c20:	neg	w1, w3
   54c24:	ands	w1, w1, #0x3f
   54c28:	b.eq	54cc0 <mpfr_set_z_2exp@@Base+0x3c0>  // b.none
   54c2c:	ldr	x4, [x24]
   54c30:	sub	w0, w1, #0x1
   54c34:	mov	x2, #0x2                   	// #2
   54c38:	mov	x1, #0x1                   	// #1
   54c3c:	lsl	x2, x2, x0
   54c40:	neg	x3, x2
   54c44:	lsl	x1, x1, x0
   54c48:	and	x0, x3, x4
   54c4c:	sub	x3, x1, #0x1
   54c50:	str	x0, [x24]
   54c54:	ands	x3, x3, x4
   54c58:	and	x1, x1, x4
   54c5c:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   54c60:	b.le	54a40 <mpfr_set_z_2exp@@Base+0x140>
   54c64:	sub	x5, x21, #0x1
   54c68:	neg	w3, w22
   54c6c:	mov	x0, #0xffffffffffffffff    	// #-1
   54c70:	cmp	x22, #0x0
   54c74:	lsl	x0, x0, x3
   54c78:	ldr	x3, [x6, x5, lsl #3]
   54c7c:	bic	x0, x3, x0
   54c80:	csel	x3, x0, x3, ne  // ne = any
   54c84:	cbnz	x3, 54a40 <mpfr_set_z_2exp@@Base+0x140>
   54c88:	cbz	x5, 54d4c <mpfr_set_z_2exp@@Base+0x44c>
   54c8c:	nop
   54c90:	sub	x5, x5, #0x1
   54c94:	cmp	x5, #0x0
   54c98:	ldr	x3, [x6, x5, lsl #3]
   54c9c:	ccmp	x3, #0x0, #0x0, gt
   54ca0:	b.eq	54c90 <mpfr_set_z_2exp@@Base+0x390>  // b.none
   54ca4:	b	54a40 <mpfr_set_z_2exp@@Base+0x140>
   54ca8:	orr	x1, x1, x3
   54cac:	cmp	w25, #0x1
   54cb0:	b.ne	54d80 <mpfr_set_z_2exp@@Base+0x480>  // b.any
   54cb4:	cmp	x1, #0x0
   54cb8:	csetm	w1, ne  // ne = any
   54cbc:	b	54b6c <mpfr_set_z_2exp@@Base+0x26c>
   54cc0:	cbnz	x21, 54d18 <mpfr_set_z_2exp@@Base+0x418>
   54cc4:	nop
   54cc8:	cbz	w25, 54bb8 <mpfr_set_z_2exp@@Base+0x2b8>
   54ccc:	cmp	w25, #0x1
   54cd0:	mov	x1, #0x0                   	// #0
   54cd4:	b.eq	54cb4 <mpfr_set_z_2exp@@Base+0x3b4>  // b.none
   54cd8:	ldr	w0, [sp, #124]
   54cdc:	add	w21, w25, w0
   54ce0:	cmp	w21, #0x3
   54ce4:	b.eq	54cb4 <mpfr_set_z_2exp@@Base+0x3b4>  // b.none
   54ce8:	mov	w1, #0x0                   	// #0
   54cec:	b	54b6c <mpfr_set_z_2exp@@Base+0x26c>
   54cf0:	ldur	x0, [x1, #-8]
   54cf4:	sub	w8, w8, w22
   54cf8:	ldr	x4, [x24]
   54cfc:	lsr	x8, x0, x8
   54d00:	orr	x4, x4, x8
   54d04:	str	x4, [x24]
   54d08:	ldr	x0, [x19]
   54d0c:	neg	w0, w0
   54d10:	ands	w1, w0, #0x3f
   54d14:	b.ne	54c30 <mpfr_set_z_2exp@@Base+0x330>  // b.any
   54d18:	sub	x0, x21, #0x1
   54d1c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   54d20:	lsr	x22, x1, x22
   54d24:	sub	x3, x22, #0x1
   54d28:	cmp	x0, #0x0
   54d2c:	lsl	x2, x0, #3
   54d30:	ldr	x1, [x6, x0, lsl #3]
   54d34:	and	x3, x3, x1
   54d38:	and	x1, x1, x22
   54d3c:	ccmp	x3, #0x0, #0x0, gt
   54d40:	b.eq	54d9c <mpfr_set_z_2exp@@Base+0x49c>  // b.none
   54d44:	mov	x2, #0x1                   	// #1
   54d48:	b	54a40 <mpfr_set_z_2exp@@Base+0x140>
   54d4c:	cbnz	w25, 54cac <mpfr_set_z_2exp@@Base+0x3ac>
   54d50:	cbz	x1, 54bb8 <mpfr_set_z_2exp@@Base+0x2b8>
   54d54:	ldr	x0, [x24]
   54d58:	tst	x0, x2
   54d5c:	b.ne	54a50 <mpfr_set_z_2exp@@Base+0x150>  // b.any
   54d60:	mov	w1, #0xffffffff            	// #-1
   54d64:	b	54b6c <mpfr_set_z_2exp@@Base+0x26c>
   54d68:	cmp	x6, x0
   54d6c:	b.eq	54ba8 <mpfr_set_z_2exp@@Base+0x2a8>  // b.none
   54d70:	lsl	x2, x7, #3
   54d74:	mov	x1, x6
   54d78:	bl	ba10 <memcpy@plt>
   54d7c:	b	54ba8 <mpfr_set_z_2exp@@Base+0x2a8>
   54d80:	ldr	w0, [sp, #124]
   54d84:	add	w21, w25, w0
   54d88:	cmp	w21, #0x3
   54d8c:	b.eq	54cb4 <mpfr_set_z_2exp@@Base+0x3b4>  // b.none
   54d90:	cbz	x1, 54bb8 <mpfr_set_z_2exp@@Base+0x2b8>
   54d94:	ldr	x0, [x24]
   54d98:	b	54a50 <mpfr_set_z_2exp@@Base+0x150>
   54d9c:	add	x0, x6, x2
   54da0:	sub	x5, x21, #0x2
   54da4:	mov	x2, #0x1                   	// #1
   54da8:	ldur	x3, [x0, #-8]
   54dac:	cbnz	x3, 54a40 <mpfr_set_z_2exp@@Base+0x140>
   54db0:	b	54c88 <mpfr_set_z_2exp@@Base+0x388>
   54db4:	ldp	x21, x22, [sp, #32]
   54db8:	mov	w2, w26
   54dbc:	ldp	x23, x24, [sp, #48]
   54dc0:	mov	w1, w25
   54dc4:	ldp	x27, x28, [sp, #80]
   54dc8:	mov	x0, x19
   54dcc:	ldp	x19, x20, [sp, #16]
   54dd0:	ldp	x25, x26, [sp, #64]
   54dd4:	ldp	x29, x30, [sp], #128
   54dd8:	b	bf40 <mpfr_overflow@plt>
   54ddc:	mov	w2, w26
   54de0:	mov	w1, w25
   54de4:	mov	x0, x19
   54de8:	b	54dcc <mpfr_set_z_2exp@@Base+0x4cc>
   54dec:	cmp	w25, #0x0
   54df0:	mov	w2, w26
   54df4:	csinc	w1, w25, wzr, ne  // ne = any
   54df8:	b	54be0 <mpfr_set_z_2exp@@Base+0x2e0>
   54dfc:	nop

0000000000054e00 <mpfr_ai@@Base>:
   54e00:	sub	sp, sp, #0x2a0
   54e04:	stp	x29, x30, [sp]
   54e08:	mov	x29, sp
   54e0c:	stp	x27, x28, [sp, #80]
   54e10:	mov	x28, x1
   54e14:	ldr	x1, [x1, #16]
   54e18:	stp	x19, x20, [sp, #16]
   54e1c:	str	x0, [sp, #104]
   54e20:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   54e24:	str	w2, [sp, #144]
   54e28:	cmp	x1, x0
   54e2c:	b.le	560ac <mpfr_ai@@Base+0x12ac>
   54e30:	mrs	x5, tpidr_el0
   54e34:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54e38:	ldr	x1, [x0, #2576]
   54e3c:	add	x0, x0, #0xa10
   54e40:	blr	x1
   54e44:	stp	x21, x22, [sp, #32]
   54e48:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   54e4c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   54e50:	ldr	w0, [x5, x0]
   54e54:	add	x19, sp, #0x160
   54e58:	str	w0, [sp, #148]
   54e5c:	add	x20, sp, #0x180
   54e60:	stp	x23, x24, [sp, #48]
   54e64:	mov	x1, #0x20                  	// #32
   54e68:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54e6c:	ldr	x3, [x0, #2512]
   54e70:	add	x0, x0, #0x9d0
   54e74:	blr	x3
   54e78:	add	x3, x5, x0
   54e7c:	ldr	x0, [x5, x0]
   54e80:	stp	x25, x26, [sp, #64]
   54e84:	str	x4, [x3]
   54e88:	str	x0, [sp, #232]
   54e8c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54e90:	ldr	x6, [x0, #2544]
   54e94:	add	x0, x0, #0x9f0
   54e98:	blr	x6
   54e9c:	ldr	x3, [x5, x0]
   54ea0:	str	x2, [x5, x0]
   54ea4:	mov	x0, x19
   54ea8:	str	x5, [sp, #152]
   54eac:	str	x3, [sp, #184]
   54eb0:	bl	ca80 <mpfr_init2@plt>
   54eb4:	mov	x0, x20
   54eb8:	mov	x1, #0x20                  	// #32
   54ebc:	bl	ca80 <mpfr_init2@plt>
   54ec0:	ldr	w3, [x28, #8]
   54ec4:	mov	x1, x28
   54ec8:	mov	w2, #0x0                   	// #0
   54ecc:	mov	x0, x19
   54ed0:	bl	c6a0 <mpfr_set4@plt>
   54ed4:	mov	w3, #0x0                   	// #0
   54ed8:	mov	x2, #0x0                   	// #0
   54edc:	mov	x1, #0x51f                 	// #1311
   54ee0:	mov	x0, x20
   54ee4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   54ee8:	ldr	x0, [sp, #104]
   54eec:	mov	w3, #0x0                   	// #0
   54ef0:	mov	x1, x20
   54ef4:	ldr	x2, [x0]
   54ef8:	mov	x0, x20
   54efc:	bl	ba50 <mpfr_mul_ui@plt>
   54f00:	ldr	w0, [x28, #8]
   54f04:	mov	w3, #0x0                   	// #0
   54f08:	tbnz	w0, #31, 55f3c <mpfr_ai@@Base+0x113c>
   54f0c:	mov	x1, x19
   54f10:	mov	x0, x19
   54f14:	mov	x2, #0x4ccd                	// #19661
   54f18:	bl	ba50 <mpfr_mul_ui@plt>
   54f1c:	mov	x1, x19
   54f20:	mov	x2, x20
   54f24:	mov	w3, #0x0                   	// #0
   54f28:	mov	x0, x19
   54f2c:	bl	c1a0 <mpfr_add@plt>
   54f30:	mov	x0, x20
   54f34:	bl	c070 <mpfr_clear@plt>
   54f38:	mov	x1, #0x100000              	// #1048576
   54f3c:	mov	x2, #0x0                   	// #0
   54f40:	mov	x0, x19
   54f44:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   54f48:	mov	w1, w0
   54f4c:	mov	x0, x19
   54f50:	mov	w19, w1
   54f54:	bl	c070 <mpfr_clear@plt>
   54f58:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54f5c:	ldr	x1, [x0, #2576]
   54f60:	add	x0, x0, #0xa10
   54f64:	blr	x1
   54f68:	ldr	w1, [sp, #148]
   54f6c:	ldr	x5, [sp, #152]
   54f70:	str	w1, [x5, x0]
   54f74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54f78:	ldr	x1, [x0, #2544]
   54f7c:	add	x0, x0, #0x9f0
   54f80:	blr	x1
   54f84:	ldr	x1, [sp, #184]
   54f88:	str	x1, [x5, x0]
   54f8c:	cmp	w19, #0x0
   54f90:	add	x2, x5, x0
   54f94:	b.le	55940 <mpfr_ai@@Base+0xb40>
   54f98:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   54f9c:	str	x3, [x2]
   54fa0:	ldr	x2, [sp, #104]
   54fa4:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   54fa8:	add	x20, sp, #0x220
   54fac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   54fb0:	ldr	x1, [x0, #2512]
   54fb4:	add	x0, x0, #0x9d0
   54fb8:	blr	x1
   54fbc:	add	x22, sp, #0x240
   54fc0:	mov	x1, #0x20                  	// #32
   54fc4:	ldr	x19, [x2]
   54fc8:	str	x4, [x5, x0]
   54fcc:	mov	x0, x20
   54fd0:	str	x22, [sp, #224]
   54fd4:	str	x20, [sp, #240]
   54fd8:	bl	ca80 <mpfr_init2@plt>
   54fdc:	mov	x0, x22
   54fe0:	mov	x1, #0x20                  	// #32
   54fe4:	bl	ca80 <mpfr_init2@plt>
   54fe8:	mov	x21, #0x6                   	// #6
   54fec:	add	x0, x19, #0xb
   54ff0:	mov	x1, x28
   54ff4:	mov	w3, #0x1                   	// #1
   54ff8:	mov	w2, #0x2                   	// #2
   54ffc:	str	x0, [sp, #128]
   55000:	mov	x0, x20
   55004:	bl	c6a0 <mpfr_set4@plt>
   55008:	str	xzr, [sp, #312]
   5500c:	mov	w3, #0x2                   	// #2
   55010:	mov	x1, x20
   55014:	mov	x0, x20
   55018:	mov	x2, #0x3                   	// #3
   5501c:	bl	bf70 <mpfr_pow_ui@plt>
   55020:	mov	x1, x20
   55024:	mov	x0, x20
   55028:	mov	w2, #0x2                   	// #2
   5502c:	bl	c930 <mpfr_sqrt@plt>
   55030:	mov	w3, #0x2                   	// #2
   55034:	mov	w2, #0xa                   	// #10
   55038:	mov	x0, x22
   5503c:	adrp	x1, 66000 <mpfr_bases@@Base+0x16f8>
   55040:	add	x1, x1, #0xbb8
   55044:	bl	c6c0 <mpfr_set_str@plt>
   55048:	mov	x1, x20
   5504c:	mov	x2, x22
   55050:	mov	x0, x22
   55054:	mov	w3, #0x2                   	// #2
   55058:	bl	bd50 <mpfr_mul@plt>
   5505c:	ldr	x20, [x28, #16]
   55060:	cmp	x20, #0x0
   55064:	b.gt	558fc <mpfr_ai@@Base+0xafc>
   55068:	mov	x1, #0x2                   	// #2
   5506c:	str	x1, [sp, #216]
   55070:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   55074:	cmp	x20, x0
   55078:	b.eq	550a0 <mpfr_ai@@Base+0x2a0>  // b.none
   5507c:	ldr	w0, [x28, #8]
   55080:	mov	x1, #0xa                   	// #10
   55084:	str	x1, [sp, #216]
   55088:	cmp	w0, #0x0
   5508c:	b.le	550a0 <mpfr_ai@@Base+0x2a0>
   55090:	mov	x0, #0x3                   	// #3
   55094:	str	x0, [sp, #216]
   55098:	cmp	x20, #0x0
   5509c:	b.gt	55f9c <mpfr_ai@@Base+0x119c>
   550a0:	add	x0, x19, #0xb
   550a4:	cmp	x0, #0x1
   550a8:	b.eq	5617c <mpfr_ai@@Base+0x137c>  // b.none
   550ac:	b.le	56538 <mpfr_ai@@Base+0x1738>
   550b0:	add	x19, x19, #0xa
   550b4:	mov	w0, #0x40                  	// #64
   550b8:	clz	x19, x19
   550bc:	sub	w19, w0, w19
   550c0:	ldr	x0, [sp, #128]
   550c4:	add	x19, x0, w19, sxtw
   550c8:	ldr	x0, [sp, #216]
   550cc:	add	x21, x0, x21
   550d0:	ldr	x0, [sp, #128]
   550d4:	add	x1, x21, x19
   550d8:	mov	x21, x1
   550dc:	bl	bf20 <__gmpfr_isqrt@plt>
   550e0:	add	x19, x0, #0x1
   550e4:	str	x0, [sp, #120]
   550e8:	lsl	x19, x19, #5
   550ec:	mov	x0, x19
   550f0:	bl	ccf0 <mpfr_allocate_func@plt>
   550f4:	str	x0, [sp, #112]
   550f8:	cbz	x0, 56520 <mpfr_ai@@Base+0x1720>
   550fc:	sub	x19, x19, #0x20
   55100:	mov	x20, x0
   55104:	add	x19, x19, x0
   55108:	mov	x0, x20
   5510c:	bl	bbd0 <mpfr_init@plt>
   55110:	cmp	x19, x20
   55114:	add	x20, x20, #0x20
   55118:	b.ne	55108 <mpfr_ai@@Base+0x308>  // b.any
   5511c:	add	x27, sp, #0x1a0
   55120:	add	x26, sp, #0x1c0
   55124:	mov	x0, x27
   55128:	bl	bbd0 <mpfr_init@plt>
   5512c:	mov	x0, x26
   55130:	add	x22, sp, #0x1e0
   55134:	bl	bbd0 <mpfr_init@plt>
   55138:	add	x25, sp, #0x200
   5513c:	mov	x0, x22
   55140:	bl	bbd0 <mpfr_init@plt>
   55144:	add	x19, sp, #0x260
   55148:	mov	x0, x25
   5514c:	str	x19, [sp, #168]
   55150:	bl	bbd0 <mpfr_init@plt>
   55154:	add	x1, sp, #0x280
   55158:	mov	x0, #0x40                  	// #64
   5515c:	str	x1, [sp, #176]
   55160:	mov	x24, x21
   55164:	str	x0, [sp, #344]
   55168:	mov	x0, x19
   5516c:	mov	x19, x1
   55170:	bl	bbd0 <mpfr_init@plt>
   55174:	mov	x0, x19
   55178:	bl	bbd0 <mpfr_init@plt>
   5517c:	ldp	x19, x0, [sp, #112]
   55180:	str	x19, [sp, #336]
   55184:	lsl	x0, x0, #5
   55188:	str	x0, [sp, #208]
   5518c:	add	x0, x0, x19
   55190:	str	x0, [sp, #160]
   55194:	nop
   55198:	mov	x0, x19
   5519c:	mov	x1, x24
   551a0:	bl	bed0 <mpfr_set_prec@plt>
   551a4:	ldr	x1, [sp, #160]
   551a8:	mov	x0, x19
   551ac:	add	x19, x19, #0x20
   551b0:	cmp	x1, x0
   551b4:	b.ne	55198 <mpfr_ai@@Base+0x398>  // b.any
   551b8:	mov	x1, x24
   551bc:	mov	x0, x27
   551c0:	bl	bed0 <mpfr_set_prec@plt>
   551c4:	mov	x1, x24
   551c8:	mov	x0, x26
   551cc:	bl	bed0 <mpfr_set_prec@plt>
   551d0:	mov	x1, x24
   551d4:	mov	x0, x22
   551d8:	bl	bed0 <mpfr_set_prec@plt>
   551dc:	mov	x1, x24
   551e0:	mov	x0, x25
   551e4:	bl	bed0 <mpfr_set_prec@plt>
   551e8:	mov	w3, #0x0                   	// #0
   551ec:	mov	x2, #0x0                   	// #0
   551f0:	mov	x1, #0x1                   	// #1
   551f4:	mov	x0, x26
   551f8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   551fc:	ldr	w3, [x28, #8]
   55200:	mov	x1, x28
   55204:	ldr	x20, [sp, #112]
   55208:	mov	w2, #0x0                   	// #0
   5520c:	mov	x0, x22
   55210:	bl	c6a0 <mpfr_set4@plt>
   55214:	add	x19, x20, #0x20
   55218:	mov	w3, #0x2                   	// #2
   5521c:	mov	x2, #0x0                   	// #0
   55220:	mov	x1, #0x1                   	// #1
   55224:	mov	x0, x20
   55228:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5522c:	mov	x1, x22
   55230:	mov	w2, #0x2                   	// #2
   55234:	mov	x0, x19
   55238:	bl	c400 <mpfr_sqr@plt>
   5523c:	ldr	w3, [x28, #8]
   55240:	mov	x1, x19
   55244:	mov	x0, x19
   55248:	mov	x2, x28
   5524c:	cmp	w3, #0x0
   55250:	cset	w3, le
   55254:	add	w3, w3, #0x2
   55258:	bl	bd50 <mpfr_mul@plt>
   5525c:	ldr	w0, [x28, #8]
   55260:	tbnz	w0, #31, 558d4 <mpfr_ai@@Base+0xad4>
   55264:	mov	w1, #0x2                   	// #2
   55268:	mov	x0, x19
   5526c:	bl	bca0 <mpfr_get_ui@plt>
   55270:	str	x0, [sp, #248]
   55274:	ldr	w1, [x28, #8]
   55278:	tbnz	w1, #31, 558ac <mpfr_ai@@Base+0xaac>
   5527c:	ldr	x0, [sp, #120]
   55280:	mov	x20, #0x2                   	// #2
   55284:	cmp	x0, #0x1
   55288:	ldr	x0, [sp, #112]
   5528c:	add	x21, x0, #0x40
   55290:	b.ls	552c8 <mpfr_ai@@Base+0x4c8>  // b.plast
   55294:	nop
   55298:	tbnz	w20, #0, 5565c <mpfr_ai@@Base+0x85c>
   5529c:	ldr	x3, [sp, #112]
   552a0:	lsr	x1, x20, #1
   552a4:	mov	x0, x21
   552a8:	mov	w2, #0x0                   	// #0
   552ac:	add	x1, x3, x1, lsl #5
   552b0:	bl	c400 <mpfr_sqr@plt>
   552b4:	ldr	x0, [sp, #120]
   552b8:	add	x21, x21, #0x20
   552bc:	cmp	x20, x0
   552c0:	add	x20, x20, #0x1
   552c4:	b.ne	55298 <mpfr_ai@@Base+0x498>  // b.any
   552c8:	ldp	x21, x23, [sp, #168]
   552cc:	mov	x2, x24
   552d0:	mov	x1, x23
   552d4:	mov	x0, x21
   552d8:	bl	bba0 <mpfr_gamma_one_and_two_third@plt>
   552dc:	mov	w3, #0x0                   	// #0
   552e0:	mov	x2, #0x0                   	// #0
   552e4:	mov	x1, #0x9                   	// #9
   552e8:	mov	x0, x26
   552ec:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   552f0:	ldr	x19, [sp, #120]
   552f4:	mov	x1, x26
   552f8:	mov	w2, #0x0                   	// #0
   552fc:	mov	x0, x26
   55300:	sub	x3, x19, x19, lsl #2
   55304:	str	x3, [sp, #264]
   55308:	mov	x20, x3
   5530c:	bl	cd20 <mpfr_cbrt@plt>
   55310:	mov	x2, x23
   55314:	mov	x1, x26
   55318:	mov	w3, #0x0                   	// #0
   5531c:	mov	x0, x26
   55320:	bl	bd50 <mpfr_mul@plt>
   55324:	add	x0, x20, #0x3
   55328:	mov	x2, x26
   5532c:	mov	x20, x19
   55330:	mov	w3, #0x0                   	// #0
   55334:	mov	x1, #0x1                   	// #1
   55338:	str	x0, [sp, #288]
   5533c:	mov	x0, x26
   55340:	bl	c2f0 <mpfr_ui_div@plt>
   55344:	sub	x0, x20, #0x1
   55348:	mov	w3, #0x0                   	// #0
   5534c:	mov	x2, #0x0                   	// #0
   55350:	mov	x1, #0x3                   	// #3
   55354:	str	x0, [sp, #256]
   55358:	mov	x0, x22
   5535c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   55360:	mov	x19, #0x0                   	// #0
   55364:	mov	x1, x22
   55368:	mov	w2, #0x0                   	// #0
   5536c:	mov	x0, x22
   55370:	bl	cd20 <mpfr_cbrt@plt>
   55374:	mov	w3, #0x0                   	// #0
   55378:	mov	x2, x21
   5537c:	mov	x1, x22
   55380:	mov	x0, x22
   55384:	bl	bd50 <mpfr_mul@plt>
   55388:	str	xzr, [sp, #136]
   5538c:	mov	x1, x22
   55390:	mov	w2, #0x0                   	// #0
   55394:	mov	x0, x22
   55398:	bl	bd70 <mpfr_neg@plt>
   5539c:	mov	x1, x28
   553a0:	mov	x2, x22
   553a4:	mov	x0, x22
   553a8:	mov	w3, #0x0                   	// #0
   553ac:	bl	c620 <mpfr_div@plt>
   553b0:	stp	x24, x28, [sp, #320]
   553b4:	add	x0, x20, x20, lsl #1
   553b8:	ldr	x2, [sp, #208]
   553bc:	sub	x1, x20, #0x2
   553c0:	ldr	x28, [sp, #160]
   553c4:	sub	x20, x2, #0x20
   553c8:	ldr	x2, [sp, #112]
   553cc:	add	x20, x2, x20
   553d0:	add	x1, x2, x1, lsl #5
   553d4:	str	x1, [sp, #200]
   553d8:	sub	x1, x0, #0x3
   553dc:	str	x1, [sp, #192]
   553e0:	add	x1, x0, #0x3
   553e4:	str	x1, [sp, #304]
   553e8:	sub	x1, x0, #0x1
   553ec:	str	x1, [sp, #296]
   553f0:	mov	x1, #0x3                   	// #3
   553f4:	sub	x1, x1, x0
   553f8:	str	x1, [sp, #272]
   553fc:	mov	x1, #0x4                   	// #4
   55400:	sub	x0, x1, x0
   55404:	str	x0, [sp, #280]
   55408:	mov	w0, #0x1                   	// #1
   5540c:	str	w0, [sp, #520]
   55410:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   55414:	str	x0, [sp, #528]
   55418:	ldp	x0, x23, [sp, #192]
   5541c:	mov	x1, x20
   55420:	ldr	w3, [x20, #8]
   55424:	mov	w2, #0x0                   	// #0
   55428:	add	x19, x19, x0
   5542c:	ldr	x0, [sp, #272]
   55430:	mov	x21, x19
   55434:	add	x24, x0, x19
   55438:	mov	x0, x27
   5543c:	bl	c6a0 <mpfr_set4@plt>
   55440:	mov	w4, #0x0                   	// #0
   55444:	mov	x3, x21
   55448:	sub	x2, x21, #0x1
   5544c:	mov	x1, x27
   55450:	mov	x0, x27
   55454:	bl	be80 <mpfr_div_ui2@plt>
   55458:	mov	x2, x23
   5545c:	sub	x21, x21, #0x3
   55460:	mov	x1, x27
   55464:	mov	x0, x27
   55468:	mov	w3, #0x0                   	// #0
   5546c:	bl	c1a0 <mpfr_add@plt>
   55470:	sub	x23, x23, #0x20
   55474:	cmp	x21, x24
   55478:	b.ne	55440 <mpfr_ai@@Base+0x640>  // b.any
   5547c:	ldr	x0, [sp, #288]
   55480:	mov	x2, x26
   55484:	mov	x1, x27
   55488:	mov	w3, #0x0                   	// #0
   5548c:	add	x19, x0, x19
   55490:	mov	x0, x27
   55494:	bl	bd50 <mpfr_mul@plt>
   55498:	mov	x21, #0x0                   	// #0
   5549c:	mov	x2, x27
   554a0:	mov	x1, x25
   554a4:	mov	w3, #0x0                   	// #0
   554a8:	mov	x0, x25
   554ac:	bl	c1a0 <mpfr_add@plt>
   554b0:	mov	x2, x28
   554b4:	mov	x1, x26
   554b8:	mov	x0, x26
   554bc:	mov	w3, #0x0                   	// #0
   554c0:	bl	bd50 <mpfr_mul@plt>
   554c4:	nop
   554c8:	add	x2, x19, #0x2
   554cc:	mov	x23, x19
   554d0:	add	x19, x19, #0x3
   554d4:	mov	x0, x26
   554d8:	mov	x3, x19
   554dc:	mov	x1, x26
   554e0:	mov	w4, #0x0                   	// #0
   554e4:	bl	be80 <mpfr_div_ui2@plt>
   554e8:	ldr	x0, [sp, #256]
   554ec:	add	x21, x21, #0x1
   554f0:	cmp	x21, x0
   554f4:	b.ls	554c8 <mpfr_ai@@Base+0x6c8>  // b.plast
   554f8:	ldr	w3, [x20, #8]
   554fc:	add	x19, x23, #0x1
   55500:	ldr	x0, [sp, #280]
   55504:	mov	x21, x19
   55508:	mov	x1, x20
   5550c:	mov	w2, #0x0                   	// #0
   55510:	add	x23, x0, x23
   55514:	mov	x0, x27
   55518:	ldr	x24, [sp, #200]
   5551c:	bl	c6a0 <mpfr_set4@plt>
   55520:	mov	w4, #0x0                   	// #0
   55524:	mov	x3, x21
   55528:	sub	x2, x21, #0x1
   5552c:	mov	x1, x27
   55530:	mov	x0, x27
   55534:	bl	be80 <mpfr_div_ui2@plt>
   55538:	mov	x2, x24
   5553c:	sub	x21, x21, #0x3
   55540:	mov	x1, x27
   55544:	mov	x0, x27
   55548:	mov	w3, #0x0                   	// #0
   5554c:	bl	c1a0 <mpfr_add@plt>
   55550:	sub	x24, x24, #0x20
   55554:	cmp	x21, x23
   55558:	b.ne	55520 <mpfr_ai@@Base+0x720>  // b.any
   5555c:	ldr	x0, [sp, #264]
   55560:	mov	x2, x22
   55564:	mov	x1, x27
   55568:	mov	w3, #0x0                   	// #0
   5556c:	add	x19, x19, x0
   55570:	ldr	x0, [sp, #304]
   55574:	add	x21, x19, #0x3
   55578:	mov	x23, x21
   5557c:	add	x19, x0, x19
   55580:	mov	x0, x27
   55584:	bl	bd50 <mpfr_mul@plt>
   55588:	mov	x2, x27
   5558c:	mov	x1, x25
   55590:	mov	w3, #0x0                   	// #0
   55594:	mov	x0, x25
   55598:	bl	c1a0 <mpfr_add@plt>
   5559c:	mov	x2, x28
   555a0:	mov	x1, x22
   555a4:	mov	x0, x22
   555a8:	mov	w3, #0x0                   	// #0
   555ac:	bl	bd50 <mpfr_mul@plt>
   555b0:	add	x2, x23, #0x2
   555b4:	add	x23, x23, #0x3
   555b8:	mov	x3, x23
   555bc:	mov	x1, x22
   555c0:	mov	x0, x22
   555c4:	mov	w4, #0x0                   	// #0
   555c8:	bl	be80 <mpfr_div_ui2@plt>
   555cc:	cmp	x23, x19
   555d0:	b.ne	555b0 <mpfr_ai@@Base+0x7b0>  // b.any
   555d4:	ldr	x1, [sp, #296]
   555d8:	ldr	x0, [sp, #464]
   555dc:	add	x19, x1, x21
   555e0:	ldr	x1, [sp, #192]
   555e4:	add	x21, x1, x21
   555e8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   555ec:	cmp	x0, x1
   555f0:	b.eq	5560c <mpfr_ai@@Base+0x80c>  // b.none
   555f4:	ldr	x2, [sp, #128]
   555f8:	ldr	x1, [sp, #528]
   555fc:	add	x0, x0, x2
   55600:	add	x0, x0, #0x3
   55604:	cmp	x0, x1
   55608:	b.ge	5564c <mpfr_ai@@Base+0x84c>  // b.tcont
   5560c:	ldr	x0, [sp, #496]
   55610:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   55614:	cmp	x0, x1
   55618:	b.eq	55634 <mpfr_ai@@Base+0x834>  // b.none
   5561c:	ldr	x2, [sp, #128]
   55620:	ldr	x1, [sp, #528]
   55624:	add	x0, x2, x0
   55628:	add	x0, x0, #0x3
   5562c:	cmp	x0, x1
   55630:	b.ge	5564c <mpfr_ai@@Base+0x84c>  // b.tcont
   55634:	add	x1, x21, #0x5
   55638:	add	x0, x21, #0x4
   5563c:	mul	x0, x0, x1
   55640:	ldr	x1, [sp, #248]
   55644:	cmp	x1, x0, lsr #1
   55648:	b.ls	55674 <mpfr_ai@@Base+0x874>  // b.plast
   5564c:	ldr	x0, [sp, #136]
   55650:	add	x0, x0, #0x1
   55654:	str	x0, [sp, #136]
   55658:	b	55418 <mpfr_ai@@Base+0x618>
   5565c:	mov	x2, x19
   55660:	sub	x1, x21, #0x20
   55664:	mov	x0, x21
   55668:	mov	w3, #0x0                   	// #0
   5566c:	bl	bd50 <mpfr_mul@plt>
   55670:	b	552b4 <mpfr_ai@@Base+0x4b4>
   55674:	ldr	x1, [sp, #120]
   55678:	mov	w20, #0x45                  	// #69
   5567c:	ldp	x24, x28, [sp, #320]
   55680:	clz	x0, x1
   55684:	sub	w20, w20, w0
   55688:	cmp	x1, #0x0
   5568c:	mov	w0, #0x5                   	// #5
   55690:	csel	w20, w20, w0, ne  // ne = any
   55694:	ldr	x0, [sp, #136]
   55698:	cbz	x0, 556b8 <mpfr_ai@@Base+0x8b8>
   5569c:	add	x0, x0, #0x1
   556a0:	cmp	x0, #0x1
   556a4:	b.ls	56164 <mpfr_ai@@Base+0x1364>  // b.plast
   556a8:	ldr	x0, [sp, #136]
   556ac:	clz	x0, x0
   556b0:	sub	w20, w20, w0
   556b4:	add	w20, w20, #0x40
   556b8:	ldr	x1, [sp, #312]
   556bc:	mov	x23, #0x0                   	// #0
   556c0:	ldr	x0, [sp, #528]
   556c4:	sub	x1, x1, x0
   556c8:	add	x20, x1, w20, sxtw
   556cc:	cmp	x24, x20
   556d0:	b.gt	55890 <mpfr_ai@@Base+0xa90>
   556d4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   556d8:	cmp	x0, x1
   556dc:	b.le	55fd4 <mpfr_ai@@Base+0x11d4>
   556e0:	ldr	x2, [sp, #104]
   556e4:	ldr	w0, [sp, #144]
   556e8:	ldr	x1, [sp, #512]
   556ec:	cmp	w0, #0x0
   556f0:	ldr	x0, [sp, #536]
   556f4:	sub	x1, x1, #0x1
   556f8:	ldr	x3, [x2]
   556fc:	asr	x1, x1, #6
   55700:	add	x1, x1, #0x1
   55704:	mov	x2, x23
   55708:	cinc	x3, x3, eq  // eq = none
   5570c:	bl	c370 <mpfr_round_p@plt>
   55710:	cbz	w0, 55fd4 <mpfr_ai@@Base+0x11d4>
   55714:	ldr	w2, [sp, #144]
   55718:	mov	x1, x25
   5571c:	ldr	w3, [sp, #520]
   55720:	ldr	x0, [sp, #104]
   55724:	bl	c6a0 <mpfr_set4@plt>
   55728:	mov	w19, w0
   5572c:	ldr	x0, [sp, #240]
   55730:	bl	c070 <mpfr_clear@plt>
   55734:	ldr	x0, [sp, #224]
   55738:	bl	c070 <mpfr_clear@plt>
   5573c:	ldr	x21, [sp, #160]
   55740:	ldr	x20, [sp, #336]
   55744:	nop
   55748:	mov	x0, x20
   5574c:	bl	c070 <mpfr_clear@plt>
   55750:	cmp	x20, x21
   55754:	add	x20, x20, #0x20
   55758:	b.ne	55748 <mpfr_ai@@Base+0x948>  // b.any
   5575c:	ldr	x0, [sp, #208]
   55760:	add	x1, x0, #0x20
   55764:	ldr	x0, [sp, #112]
   55768:	bl	cc20 <mpfr_free_func@plt>
   5576c:	mov	x0, x27
   55770:	bl	c070 <mpfr_clear@plt>
   55774:	mov	x0, x26
   55778:	bl	c070 <mpfr_clear@plt>
   5577c:	mov	x0, x22
   55780:	bl	c070 <mpfr_clear@plt>
   55784:	mov	x0, x25
   55788:	bl	c070 <mpfr_clear@plt>
   5578c:	ldr	x0, [sp, #168]
   55790:	bl	c070 <mpfr_clear@plt>
   55794:	ldr	x0, [sp, #176]
   55798:	bl	c070 <mpfr_clear@plt>
   5579c:	ldr	x0, [sp, #104]
   557a0:	ldr	x3, [sp, #152]
   557a4:	ldr	x1, [x0, #16]
   557a8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   557ac:	ldr	x2, [x0, #2576]
   557b0:	add	x0, x0, #0xa10
   557b4:	blr	x2
   557b8:	ldr	w2, [sp, #148]
   557bc:	str	w2, [x3, x0]
   557c0:	add	x2, x3, x0
   557c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   557c8:	ldr	x4, [x0, #2512]
   557cc:	add	x0, x0, #0x9d0
   557d0:	blr	x4
   557d4:	ldr	x4, [sp, #232]
   557d8:	str	x4, [x3, x0]
   557dc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   557e0:	ldr	x5, [x0, #2544]
   557e4:	add	x0, x0, #0x9f0
   557e8:	blr	x5
   557ec:	ldr	x5, [sp, #184]
   557f0:	str	x5, [x3, x0]
   557f4:	cmp	x5, x1
   557f8:	ccmp	x4, x1, #0x0, ge  // ge = tcont
   557fc:	b.le	55838 <mpfr_ai@@Base+0xa38>
   55800:	ldr	w2, [sp, #144]
   55804:	mov	w1, w19
   55808:	ldr	x0, [sp, #104]
   5580c:	bl	cb30 <mpfr_check_range@plt>
   55810:	ldp	x21, x22, [sp, #32]
   55814:	mov	w19, w0
   55818:	ldp	x23, x24, [sp, #48]
   5581c:	ldp	x25, x26, [sp, #64]
   55820:	mov	w0, w19
   55824:	ldp	x29, x30, [sp]
   55828:	ldp	x19, x20, [sp, #16]
   5582c:	ldp	x27, x28, [sp, #80]
   55830:	add	sp, sp, #0x2a0
   55834:	ret
   55838:	cbz	w19, 5586c <mpfr_ai@@Base+0xa6c>
   5583c:	ldr	w0, [sp, #148]
   55840:	ldp	x21, x22, [sp, #32]
   55844:	orr	w0, w0, #0x8
   55848:	ldp	x23, x24, [sp, #48]
   5584c:	ldp	x25, x26, [sp, #64]
   55850:	str	w0, [x2]
   55854:	mov	w0, w19
   55858:	ldp	x29, x30, [sp]
   5585c:	ldp	x19, x20, [sp, #16]
   55860:	ldp	x27, x28, [sp, #80]
   55864:	add	sp, sp, #0x2a0
   55868:	ret
   5586c:	mov	w0, w19
   55870:	ldp	x29, x30, [sp]
   55874:	ldp	x19, x20, [sp, #16]
   55878:	ldp	x21, x22, [sp, #32]
   5587c:	ldp	x23, x24, [sp, #48]
   55880:	ldp	x25, x26, [sp, #64]
   55884:	ldp	x27, x28, [sp, #80]
   55888:	add	sp, sp, #0x2a0
   5588c:	ret
   55890:	ldr	x2, [sp, #128]
   55894:	sub	x23, x24, x20
   55898:	sub	x23, x23, #0x1
   5589c:	add	x1, x2, x20
   558a0:	cmp	x24, x1
   558a4:	csel	x23, x23, x2, le
   558a8:	b	556d4 <mpfr_ai@@Base+0x8d4>
   558ac:	ldr	w0, [x19, #8]
   558b0:	mov	x20, #0x2                   	// #2
   558b4:	neg	w0, w0
   558b8:	str	w0, [x19, #8]
   558bc:	ldr	x0, [sp, #120]
   558c0:	cmp	x0, #0x1
   558c4:	ldr	x0, [sp, #112]
   558c8:	add	x21, x0, #0x40
   558cc:	b.hi	55298 <mpfr_ai@@Base+0x498>  // b.pmore
   558d0:	b	552c8 <mpfr_ai@@Base+0x4c8>
   558d4:	ldr	w0, [x19, #8]
   558d8:	mov	w1, #0x2                   	// #2
   558dc:	neg	w0, w0
   558e0:	str	w0, [x19, #8]
   558e4:	mov	x0, x19
   558e8:	bl	bca0 <mpfr_get_ui@plt>
   558ec:	str	x0, [sp, #248]
   558f0:	ldr	w1, [x28, #8]
   558f4:	tbz	w1, #31, 5527c <mpfr_ai@@Base+0x47c>
   558f8:	b	558ac <mpfr_ai@@Base+0xaac>
   558fc:	mov	w1, #0x2                   	// #2
   55900:	mov	x0, x22
   55904:	bl	bca0 <mpfr_get_ui@plt>
   55908:	ldr	x20, [x28, #16]
   5590c:	subs	x2, x20, #0x1
   55910:	add	x1, x20, #0x2
   55914:	csel	x1, x1, x2, mi  // mi = first
   55918:	mvn	x1, x1, asr #2
   5591c:	add	x0, x1, x0
   55920:	mov	x1, #0x2                   	// #2
   55924:	str	x1, [sp, #216]
   55928:	add	x21, x0, x21
   5592c:	str	x0, [sp, #312]
   55930:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   55934:	cmp	x20, x0
   55938:	b.ne	5507c <mpfr_ai@@Base+0x27c>  // b.any
   5593c:	b	550a0 <mpfr_ai@@Base+0x2a0>
   55940:	ldr	x0, [sp, #104]
   55944:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   55948:	ldr	x3, [x28, #16]
   5594c:	ldr	x19, [x0]
   55950:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   55954:	ldr	x1, [x0, #2512]
   55958:	add	x0, x0, #0x9d0
   5595c:	blr	x1
   55960:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   55964:	str	x4, [x5, x0]
   55968:	str	x1, [x2]
   5596c:	mov	x0, #0xfffffffffffffeff    	// #-257
   55970:	movk	x0, #0x7fff, lsl #48
   55974:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   55978:	sub	x0, x0, x19
   5597c:	cmp	x3, x1
   55980:	b.eq	561b0 <mpfr_ai@@Base+0x13b0>  // b.none
   55984:	cmp	x0, #0xa
   55988:	b.le	56350 <mpfr_ai@@Base+0x1550>
   5598c:	add	x20, sp, #0x220
   55990:	add	x22, sp, #0x240
   55994:	mov	x0, x20
   55998:	mov	x1, #0x20                  	// #32
   5599c:	str	x22, [sp, #224]
   559a0:	add	x21, x19, #0xb
   559a4:	str	x20, [sp, #240]
   559a8:	bl	ca80 <mpfr_init2@plt>
   559ac:	mov	x0, x22
   559b0:	mov	x1, #0x20                  	// #32
   559b4:	bl	ca80 <mpfr_init2@plt>
   559b8:	mov	x0, x20
   559bc:	mov	x1, x28
   559c0:	mov	w3, #0x1                   	// #1
   559c4:	mov	w2, #0x2                   	// #2
   559c8:	bl	c6a0 <mpfr_set4@plt>
   559cc:	str	xzr, [sp, #120]
   559d0:	mov	w3, #0x2                   	// #2
   559d4:	mov	x1, x20
   559d8:	mov	x0, x20
   559dc:	mov	x2, #0x3                   	// #3
   559e0:	bl	bf70 <mpfr_pow_ui@plt>
   559e4:	mov	x1, x20
   559e8:	mov	x0, x20
   559ec:	mov	w2, #0x2                   	// #2
   559f0:	bl	c930 <mpfr_sqrt@plt>
   559f4:	mov	w3, #0x2                   	// #2
   559f8:	mov	w2, #0xa                   	// #10
   559fc:	mov	x0, x22
   55a00:	adrp	x1, 66000 <mpfr_bases@@Base+0x16f8>
   55a04:	add	x1, x1, #0xbb8
   55a08:	bl	c6c0 <mpfr_set_str@plt>
   55a0c:	mov	x1, x20
   55a10:	mov	x2, x22
   55a14:	mov	x0, x22
   55a18:	mov	w3, #0x2                   	// #2
   55a1c:	bl	bd50 <mpfr_mul@plt>
   55a20:	ldr	x20, [x28, #16]
   55a24:	cmp	x20, #0x0
   55a28:	b.le	55a54 <mpfr_ai@@Base+0xc54>
   55a2c:	mov	w1, #0x2                   	// #2
   55a30:	mov	x0, x22
   55a34:	bl	bca0 <mpfr_get_ui@plt>
   55a38:	ldr	x20, [x28, #16]
   55a3c:	add	x25, x20, #0x2
   55a40:	subs	x1, x20, #0x1
   55a44:	csel	x25, x25, x1, mi  // mi = first
   55a48:	mvn	x25, x25, asr #2
   55a4c:	add	x0, x25, x0
   55a50:	str	x0, [sp, #120]
   55a54:	mov	x1, #0x2                   	// #2
   55a58:	str	x1, [sp, #128]
   55a5c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   55a60:	cmp	x20, x0
   55a64:	b.eq	55aa8 <mpfr_ai@@Base+0xca8>  // b.none
   55a68:	ldr	w0, [x28, #8]
   55a6c:	mov	x1, #0xa                   	// #10
   55a70:	str	x1, [sp, #128]
   55a74:	cmp	w0, #0x0
   55a78:	b.le	55aa8 <mpfr_ai@@Base+0xca8>
   55a7c:	mov	x0, #0x3                   	// #3
   55a80:	str	x0, [sp, #128]
   55a84:	cmp	x20, #0x0
   55a88:	b.le	55aa8 <mpfr_ai@@Base+0xca8>
   55a8c:	ldr	x0, [sp, #224]
   55a90:	asr	x20, x20, #2
   55a94:	add	x20, x20, #0x3
   55a98:	mov	w1, #0x2                   	// #2
   55a9c:	bl	bca0 <mpfr_get_ui@plt>
   55aa0:	add	x0, x20, x0
   55aa4:	str	x0, [sp, #128]
   55aa8:	cmp	x21, #0x1
   55aac:	b.eq	56374 <mpfr_ai@@Base+0x1574>  // b.none
   55ab0:	b.le	56568 <mpfr_ai@@Base+0x1768>
   55ab4:	add	x19, x19, #0xa
   55ab8:	mov	w20, #0x45                  	// #69
   55abc:	clz	x19, x19
   55ac0:	sub	w19, w20, w19
   55ac4:	sxtw	x19, w19
   55ac8:	ldp	x0, x1, [sp, #120]
   55acc:	mov	x23, #0xfffffffffffffeff    	// #-257
   55ad0:	movk	x23, #0x7fff, lsl #48
   55ad4:	add	x20, x0, x1
   55ad8:	sub	x0, x23, x21
   55adc:	add	x20, x20, x19
   55ae0:	cmp	x20, x0
   55ae4:	b.gt	56550 <mpfr_ai@@Base+0x1750>
   55ae8:	add	x26, sp, #0x1c0
   55aec:	add	x22, sp, #0x1e0
   55af0:	mov	x0, x26
   55af4:	bl	bbd0 <mpfr_init@plt>
   55af8:	add	x19, sp, #0x260
   55afc:	mov	x0, x22
   55b00:	str	x19, [sp, #168]
   55b04:	bl	bbd0 <mpfr_init@plt>
   55b08:	add	x1, sp, #0x280
   55b0c:	mov	x0, x19
   55b10:	mov	x19, x1
   55b14:	str	x23, [sp, #160]
   55b18:	str	x1, [sp, #176]
   55b1c:	add	x25, sp, #0x200
   55b20:	bl	bbd0 <mpfr_init@plt>
   55b24:	add	x27, sp, #0x1a0
   55b28:	mov	x0, x19
   55b2c:	bl	bbd0 <mpfr_init@plt>
   55b30:	mov	x0, #0x40                  	// #64
   55b34:	str	x0, [sp, #136]
   55b38:	mov	x0, x25
   55b3c:	bl	bbd0 <mpfr_init@plt>
   55b40:	mov	x0, x27
   55b44:	bl	bbd0 <mpfr_init@plt>
   55b48:	mov	x0, x22
   55b4c:	add	x20, x21, x20
   55b50:	mov	x22, x26
   55b54:	mov	x26, x0
   55b58:	mov	x1, x20
   55b5c:	mov	x0, x22
   55b60:	bl	bed0 <mpfr_set_prec@plt>
   55b64:	mov	x1, x20
   55b68:	mov	x0, x26
   55b6c:	bl	bed0 <mpfr_set_prec@plt>
   55b70:	mov	x1, x20
   55b74:	mov	x0, x25
   55b78:	bl	bed0 <mpfr_set_prec@plt>
   55b7c:	mov	x1, x20
   55b80:	mov	x0, x27
   55b84:	bl	bed0 <mpfr_set_prec@plt>
   55b88:	mov	x1, x28
   55b8c:	mov	w2, #0x2                   	// #2
   55b90:	mov	x0, x25
   55b94:	bl	c400 <mpfr_sqr@plt>
   55b98:	ldr	w3, [x28, #8]
   55b9c:	mov	x2, x28
   55ba0:	mov	x1, x25
   55ba4:	mov	x0, x25
   55ba8:	cmp	w3, #0x0
   55bac:	cset	w3, le
   55bb0:	add	w3, w3, #0x2
   55bb4:	bl	bd50 <mpfr_mul@plt>
   55bb8:	ldr	w0, [x28, #8]
   55bbc:	tbz	w0, #31, 55bcc <mpfr_ai@@Base+0xdcc>
   55bc0:	ldr	w0, [sp, #520]
   55bc4:	neg	w0, w0
   55bc8:	str	w0, [sp, #520]
   55bcc:	mov	w1, #0x2                   	// #2
   55bd0:	mov	x0, x25
   55bd4:	bl	bca0 <mpfr_get_ui@plt>
   55bd8:	str	x0, [sp, #112]
   55bdc:	ldr	w1, [x28, #8]
   55be0:	tbz	w1, #31, 55bf0 <mpfr_ai@@Base+0xdf0>
   55be4:	ldr	w0, [sp, #520]
   55be8:	neg	w0, w0
   55bec:	str	w0, [sp, #520]
   55bf0:	ldp	x23, x24, [sp, #168]
   55bf4:	mov	x2, x20
   55bf8:	mov	x19, #0x2                   	// #2
   55bfc:	mov	x1, x24
   55c00:	mov	x0, x23
   55c04:	bl	bba0 <mpfr_gamma_one_and_two_third@plt>
   55c08:	mov	w3, #0x0                   	// #0
   55c0c:	mov	x2, #0x0                   	// #0
   55c10:	mov	x1, #0x9                   	// #9
   55c14:	mov	x0, x22
   55c18:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   55c1c:	mov	x1, x22
   55c20:	mov	w2, #0x0                   	// #0
   55c24:	mov	x0, x22
   55c28:	bl	cd20 <mpfr_cbrt@plt>
   55c2c:	mov	x2, x24
   55c30:	mov	x1, x22
   55c34:	mov	w3, #0x0                   	// #0
   55c38:	mov	x0, x22
   55c3c:	bl	bd50 <mpfr_mul@plt>
   55c40:	mov	x24, x25
   55c44:	mov	x2, x22
   55c48:	mov	w3, #0x0                   	// #0
   55c4c:	mov	x1, #0x1                   	// #1
   55c50:	mov	x0, x22
   55c54:	bl	c2f0 <mpfr_ui_div@plt>
   55c58:	mov	x25, x21
   55c5c:	mov	w3, #0x0                   	// #0
   55c60:	mov	x2, #0x0                   	// #0
   55c64:	mov	x1, #0x3                   	// #3
   55c68:	mov	x0, x26
   55c6c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   55c70:	mov	x1, x26
   55c74:	mov	w2, #0x0                   	// #0
   55c78:	mov	x0, x26
   55c7c:	bl	cd20 <mpfr_cbrt@plt>
   55c80:	mov	w3, #0x0                   	// #0
   55c84:	mov	x2, x23
   55c88:	mov	x1, x26
   55c8c:	mov	x0, x26
   55c90:	bl	bd50 <mpfr_mul@plt>
   55c94:	mov	x1, x26
   55c98:	mov	w2, #0x0                   	// #0
   55c9c:	mov	x0, x26
   55ca0:	bl	bd70 <mpfr_neg@plt>
   55ca4:	mov	x2, x26
   55ca8:	mov	x1, x28
   55cac:	mov	w3, #0x0                   	// #0
   55cb0:	mov	x0, x26
   55cb4:	bl	c620 <mpfr_div@plt>
   55cb8:	mov	x2, x26
   55cbc:	mov	x1, x22
   55cc0:	mov	x0, x27
   55cc4:	mov	w3, #0x0                   	// #0
   55cc8:	bl	c1a0 <mpfr_add@plt>
   55ccc:	nop
   55cd0:	mov	x2, x24
   55cd4:	mov	x1, x22
   55cd8:	mov	w3, #0x0                   	// #0
   55cdc:	mov	x0, x22
   55ce0:	bl	bd50 <mpfr_mul@plt>
   55ce4:	add	x21, x19, #0x1
   55ce8:	mov	x2, x24
   55cec:	mov	x1, x26
   55cf0:	mov	w3, #0x0                   	// #0
   55cf4:	mov	x0, x26
   55cf8:	bl	bd50 <mpfr_mul@plt>
   55cfc:	add	x23, x19, #0x2
   55d00:	mov	x3, x21
   55d04:	mov	x2, x19
   55d08:	mov	x1, x22
   55d0c:	mov	x0, x22
   55d10:	mov	w4, #0x0                   	// #0
   55d14:	bl	be80 <mpfr_div_ui2@plt>
   55d18:	mov	w4, #0x0                   	// #0
   55d1c:	mov	x2, x21
   55d20:	mov	x3, x23
   55d24:	mov	x1, x26
   55d28:	mov	x0, x26
   55d2c:	bl	be80 <mpfr_div_ui2@plt>
   55d30:	mov	x2, x22
   55d34:	mov	x1, x27
   55d38:	mov	w3, #0x0                   	// #0
   55d3c:	mov	x0, x27
   55d40:	bl	c1a0 <mpfr_add@plt>
   55d44:	add	x21, x19, #0x3
   55d48:	mov	x1, x27
   55d4c:	mov	x2, x26
   55d50:	mov	x0, x27
   55d54:	mov	w3, #0x0                   	// #0
   55d58:	bl	c1a0 <mpfr_add@plt>
   55d5c:	ldr	x0, [sp, #464]
   55d60:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   55d64:	cmp	x0, x1
   55d68:	b.eq	55f34 <mpfr_ai@@Base+0x1134>  // b.none
   55d6c:	ldr	x1, [sp, #432]
   55d70:	add	x0, x0, x25
   55d74:	add	x0, x0, #0x2
   55d78:	cmp	x0, x1
   55d7c:	ldr	x0, [sp, #496]
   55d80:	b.ge	55db8 <mpfr_ai@@Base+0xfb8>  // b.tcont
   55d84:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   55d88:	cmp	x0, x1
   55d8c:	b.eq	55da4 <mpfr_ai@@Base+0xfa4>  // b.none
   55d90:	ldr	x1, [sp, #432]
   55d94:	add	x0, x0, x25
   55d98:	add	x0, x0, #0x2
   55d9c:	cmp	x0, x1
   55da0:	b.ge	55db8 <mpfr_ai@@Base+0xfb8>  // b.tcont
   55da4:	add	x19, x19, #0x4
   55da8:	ldr	x0, [sp, #112]
   55dac:	mul	x19, x19, x21
   55db0:	cmp	x0, x19, lsr #1
   55db4:	b.ls	55dc0 <mpfr_ai@@Base+0xfc0>  // b.plast
   55db8:	mov	x19, x21
   55dbc:	b	55cd0 <mpfr_ai@@Base+0xed0>
   55dc0:	mov	x0, x24
   55dc4:	mov	x24, x21
   55dc8:	cmp	x24, #0x1
   55dcc:	mov	x21, x25
   55dd0:	mov	x25, x0
   55dd4:	b.eq	56190 <mpfr_ai@@Base+0x1390>  // b.none
   55dd8:	b.ls	56198 <mpfr_ai@@Base+0x1398>  // b.plast
   55ddc:	clz	x1, x23
   55de0:	mov	w0, #0x44                  	// #68
   55de4:	sub	w0, w0, w1
   55de8:	sxtw	x0, w0
   55dec:	ldr	x2, [sp, #120]
   55df0:	ldr	x1, [sp, #432]
   55df4:	sub	x19, x2, x1
   55df8:	add	x19, x19, x0
   55dfc:	cmp	x20, x19
   55e00:	b.le	55f50 <mpfr_ai@@Base+0x1150>
   55e04:	add	x0, x21, x19
   55e08:	sub	x2, x20, x19
   55e0c:	cmp	x20, x0
   55e10:	sub	x20, x2, #0x1
   55e14:	csel	x20, x20, x21, le
   55e18:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   55e1c:	cmp	x1, x0
   55e20:	b.le	55fbc <mpfr_ai@@Base+0x11bc>
   55e24:	ldr	x2, [sp, #104]
   55e28:	ldr	w0, [sp, #144]
   55e2c:	ldr	x1, [sp, #416]
   55e30:	cmp	w0, #0x0
   55e34:	ldr	x0, [sp, #440]
   55e38:	sub	x1, x1, #0x1
   55e3c:	ldr	x3, [x2]
   55e40:	asr	x1, x1, #6
   55e44:	add	x1, x1, #0x1
   55e48:	mov	x2, x20
   55e4c:	cinc	x3, x3, eq  // eq = none
   55e50:	bl	c370 <mpfr_round_p@plt>
   55e54:	cbz	w0, 55fbc <mpfr_ai@@Base+0x11bc>
   55e58:	ldr	w3, [sp, #424]
   55e5c:	mov	x1, x27
   55e60:	ldr	w21, [sp, #144]
   55e64:	mov	x0, x26
   55e68:	ldr	x20, [sp, #104]
   55e6c:	mov	w2, w21
   55e70:	mov	x26, x22
   55e74:	mov	x22, x0
   55e78:	mov	x0, x20
   55e7c:	bl	c6a0 <mpfr_set4@plt>
   55e80:	mov	w19, w0
   55e84:	mov	x0, x26
   55e88:	bl	c070 <mpfr_clear@plt>
   55e8c:	mov	x0, x22
   55e90:	bl	c070 <mpfr_clear@plt>
   55e94:	ldr	x0, [sp, #168]
   55e98:	bl	c070 <mpfr_clear@plt>
   55e9c:	ldr	x0, [sp, #176]
   55ea0:	bl	c070 <mpfr_clear@plt>
   55ea4:	mov	x0, x25
   55ea8:	bl	c070 <mpfr_clear@plt>
   55eac:	mov	x0, x27
   55eb0:	bl	c070 <mpfr_clear@plt>
   55eb4:	ldr	x0, [sp, #240]
   55eb8:	bl	c070 <mpfr_clear@plt>
   55ebc:	ldr	x0, [sp, #224]
   55ec0:	bl	c070 <mpfr_clear@plt>
   55ec4:	ldr	x3, [sp, #152]
   55ec8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   55ecc:	ldr	x2, [x0, #2576]
   55ed0:	add	x0, x0, #0xa10
   55ed4:	blr	x2
   55ed8:	ldr	w2, [sp, #148]
   55edc:	ldr	x1, [x20, #16]
   55ee0:	str	w2, [x3, x0]
   55ee4:	add	x2, x3, x0
   55ee8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   55eec:	ldr	x5, [x0, #2512]
   55ef0:	add	x0, x0, #0x9d0
   55ef4:	blr	x5
   55ef8:	ldr	x5, [sp, #232]
   55efc:	str	x5, [x3, x0]
   55f00:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   55f04:	ldr	x6, [x0, #2544]
   55f08:	add	x0, x0, #0x9f0
   55f0c:	blr	x6
   55f10:	ldr	x6, [sp, #184]
   55f14:	str	x6, [x3, x0]
   55f18:	cmp	x5, x1
   55f1c:	ccmp	x6, x1, #0x1, le
   55f20:	b.ge	55838 <mpfr_ai@@Base+0xa38>  // b.tcont
   55f24:	mov	w2, w21
   55f28:	mov	w1, w19
   55f2c:	mov	x0, x20
   55f30:	b	5580c <mpfr_ai@@Base+0xa0c>
   55f34:	ldr	x0, [sp, #496]
   55f38:	b	55d84 <mpfr_ai@@Base+0xf84>
   55f3c:	mov	x1, x19
   55f40:	mov	x0, x19
   55f44:	mov	x2, #0xffffffffffffcccd    	// #-13107
   55f48:	bl	c960 <mpfr_mul_si@plt>
   55f4c:	b	54f1c <mpfr_ai@@Base+0x11c>
   55f50:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   55f54:	mov	x20, #0x0                   	// #0
   55f58:	cmp	x1, x0
   55f5c:	b.gt	55e24 <mpfr_ai@@Base+0x1024>
   55f60:	ldr	x0, [sp, #128]
   55f64:	cmp	x24, #0x1
   55f68:	lsl	x0, x0, #1
   55f6c:	str	x0, [sp, #128]
   55f70:	add	x0, x21, #0x5
   55f74:	b.eq	55f8c <mpfr_ai@@Base+0x118c>  // b.none
   55f78:	b.ls	56480 <mpfr_ai@@Base+0x1680>  // b.plast
   55f7c:	clz	x23, x23
   55f80:	mov	w1, #0x40                  	// #64
   55f84:	sub	w23, w1, w23
   55f88:	add	x0, x0, w23, sxtw
   55f8c:	ldp	x1, x2, [sp, #120]
   55f90:	add	x20, x1, x2
   55f94:	add	x20, x20, x0
   55f98:	b	55b58 <mpfr_ai@@Base+0xd58>
   55f9c:	ldr	x0, [sp, #224]
   55fa0:	asr	x20, x20, #2
   55fa4:	add	x20, x20, #0x3
   55fa8:	mov	w1, #0x2                   	// #2
   55fac:	bl	bca0 <mpfr_get_ui@plt>
   55fb0:	add	x0, x20, x0
   55fb4:	str	x0, [sp, #216]
   55fb8:	b	550a0 <mpfr_ai@@Base+0x2a0>
   55fbc:	cbz	x20, 55f60 <mpfr_ai@@Base+0x1160>
   55fc0:	cmp	x21, x20
   55fc4:	b.le	563b0 <mpfr_ai@@Base+0x15b0>
   55fc8:	add	x0, x21, x19
   55fcc:	add	x20, x0, #0x1
   55fd0:	b	55b58 <mpfr_ai@@Base+0xd58>
   55fd4:	str	x19, [sp, #120]
   55fd8:	ldr	x24, [sp, #160]
   55fdc:	ldr	x19, [sp, #336]
   55fe0:	mov	x0, x19
   55fe4:	bl	c070 <mpfr_clear@plt>
   55fe8:	cmp	x24, x19
   55fec:	add	x19, x19, #0x20
   55ff0:	b.ne	55fe0 <mpfr_ai@@Base+0x11e0>  // b.any
   55ff4:	ldr	x0, [sp, #208]
   55ff8:	ldr	x19, [sp, #120]
   55ffc:	add	x1, x0, #0x20
   56000:	ldr	x0, [sp, #112]
   56004:	bl	cc20 <mpfr_free_func@plt>
   56008:	mov	x0, x19
   5600c:	bl	bf20 <__gmpfr_isqrt@plt>
   56010:	add	x24, x0, #0x1
   56014:	str	x0, [sp, #120]
   56018:	lsl	x24, x24, #5
   5601c:	mov	x0, x24
   56020:	bl	ccf0 <mpfr_allocate_func@plt>
   56024:	str	x0, [sp, #112]
   56028:	cbz	x0, 56410 <mpfr_ai@@Base+0x1610>
   5602c:	mov	x1, x0
   56030:	sub	x0, x24, #0x20
   56034:	add	x0, x0, x1
   56038:	str	x19, [sp, #136]
   5603c:	mov	x24, x0
   56040:	mov	x19, x1
   56044:	nop
   56048:	mov	x0, x19
   5604c:	bl	bbd0 <mpfr_init@plt>
   56050:	cmp	x24, x19
   56054:	add	x19, x19, #0x20
   56058:	b.ne	56048 <mpfr_ai@@Base+0x1248>  // b.any
   5605c:	ldr	x19, [sp, #136]
   56060:	cbnz	x23, 560e0 <mpfr_ai@@Base+0x12e0>
   56064:	ldr	x0, [sp, #216]
   56068:	cmp	x19, #0x1
   5606c:	lsl	x0, x0, #1
   56070:	str	x0, [sp, #216]
   56074:	ldr	x0, [sp, #128]
   56078:	add	x0, x0, #0x6
   5607c:	b.eq	56098 <mpfr_ai@@Base+0x1298>  // b.none
   56080:	b.ls	56444 <mpfr_ai@@Base+0x1644>  // b.plast
   56084:	add	x21, x21, #0x1
   56088:	mov	w1, #0x40                  	// #64
   5608c:	clz	x21, x21
   56090:	sub	w1, w1, w21
   56094:	add	x0, x0, w1, sxtw
   56098:	ldr	x2, [sp, #216]
   5609c:	ldr	x1, [sp, #312]
   560a0:	add	x1, x1, x2
   560a4:	add	x24, x1, x0
   560a8:	b	5517c <mpfr_ai@@Base+0x37c>
   560ac:	mov	x2, #0x2                   	// #2
   560b0:	movk	x2, #0x8000, lsl #48
   560b4:	cmp	x1, x2
   560b8:	b.eq	5637c <mpfr_ai@@Base+0x157c>  // b.none
   560bc:	cmp	x1, x0
   560c0:	b.ne	54e30 <mpfr_ai@@Base+0x30>  // b.any
   560c4:	ldr	x2, [sp, #104]
   560c8:	mov	w1, #0x1                   	// #1
   560cc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   560d0:	mov	w19, #0x0                   	// #0
   560d4:	str	w1, [x2, #8]
   560d8:	str	x0, [x2, #16]
   560dc:	b	55820 <mpfr_ai@@Base+0xa20>
   560e0:	ldr	x0, [sp, #128]
   560e4:	cmp	x0, x23
   560e8:	b.gt	56184 <mpfr_ai@@Base+0x1384>
   560ec:	mov	x1, x0
   560f0:	mov	x0, #0xfffffffffffffeff    	// #-257
   560f4:	movk	x0, #0x7fff, lsl #48
   560f8:	sub	x0, x0, x1
   560fc:	ldr	x1, [sp, #344]
   56100:	cmp	x0, x1
   56104:	b.lt	564a0 <mpfr_ai@@Base+0x16a0>  // b.tstop
   56108:	ldr	x0, [sp, #128]
   5610c:	cmp	x19, #0x1
   56110:	add	x0, x0, x1
   56114:	str	x0, [sp, #128]
   56118:	add	x0, x0, x0, lsr #63
   5611c:	asr	x0, x0, #1
   56120:	str	x0, [sp, #344]
   56124:	b.eq	56498 <mpfr_ai@@Base+0x1698>  // b.none
   56128:	b.ls	564b8 <mpfr_ai@@Base+0x16b8>  // b.plast
   5612c:	add	x1, x21, #0x1
   56130:	mov	w0, #0x42                  	// #66
   56134:	clz	x1, x1
   56138:	sub	w0, w0, w1
   5613c:	sxtw	x0, w0
   56140:	ldr	x1, [sp, #128]
   56144:	ldr	x2, [sp, #528]
   56148:	add	x0, x1, x0
   5614c:	ldr	x1, [sp, #312]
   56150:	add	x0, x0, x1
   56154:	mov	x1, #0x6                   	// #6
   56158:	sub	x1, x1, x2
   5615c:	add	x24, x1, x0
   56160:	b	5517c <mpfr_ai@@Base+0x37c>
   56164:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   56168:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5616c:	add	x2, x2, #0xbf0
   56170:	add	x0, x0, #0xbd0
   56174:	mov	w1, #0x206                 	// #518
   56178:	bl	cb40 <mpfr_assert_fail@plt>
   5617c:	ldr	x19, [sp, #128]
   56180:	b	550c8 <mpfr_ai@@Base+0x2c8>
   56184:	add	x20, x0, x20
   56188:	add	x24, x20, #0x1
   5618c:	b	5517c <mpfr_ai@@Base+0x37c>
   56190:	mov	x0, #0x4                   	// #4
   56194:	b	55dec <mpfr_ai@@Base+0xfec>
   56198:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   5619c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   561a0:	add	x2, x2, #0xcf8
   561a4:	add	x0, x0, #0xbd0
   561a8:	mov	w1, #0xf0                  	// #240
   561ac:	bl	cb40 <mpfr_assert_fail@plt>
   561b0:	cmp	x0, #0x2
   561b4:	b.le	5645c <mpfr_ai@@Base+0x165c>
   561b8:	add	x19, x19, #0x3
   561bc:	add	x23, sp, #0x260
   561c0:	mov	x1, x19
   561c4:	mov	x0, x23
   561c8:	add	x24, sp, #0x280
   561cc:	stp	x23, x24, [sp, #168]
   561d0:	bl	ca80 <mpfr_init2@plt>
   561d4:	mov	x1, x19
   561d8:	mov	x0, x24
   561dc:	bl	ca80 <mpfr_init2@plt>
   561e0:	mov	x22, #0xfffffffffffffeff    	// #-257
   561e4:	ldr	x25, [sp, #104]
   561e8:	mov	x21, #0x40                  	// #64
   561ec:	mov	x20, #0x8000000000000003    	// #-9223372036854775805
   561f0:	movk	x22, #0x7fff, lsl #48
   561f4:	mov	x2, x19
   561f8:	mov	x1, x24
   561fc:	mov	x0, x23
   56200:	bl	bba0 <mpfr_gamma_one_and_two_third@plt>
   56204:	mov	w3, #0x0                   	// #0
   56208:	mov	x2, #0x0                   	// #0
   5620c:	mov	x1, #0x9                   	// #9
   56210:	mov	x0, x23
   56214:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   56218:	mov	x1, x23
   5621c:	mov	w2, #0x0                   	// #0
   56220:	mov	x0, x23
   56224:	bl	cd20 <mpfr_cbrt@plt>
   56228:	mov	x2, x24
   5622c:	mov	x1, x23
   56230:	mov	w3, #0x0                   	// #0
   56234:	mov	x0, x23
   56238:	bl	bd50 <mpfr_mul@plt>
   5623c:	mov	x2, x23
   56240:	mov	x0, x23
   56244:	mov	w3, #0x0                   	// #0
   56248:	mov	x1, #0x1                   	// #1
   5624c:	bl	c2f0 <mpfr_ui_div@plt>
   56250:	ldr	x0, [sp, #624]
   56254:	cmp	x0, x20
   56258:	b.le	56428 <mpfr_ai@@Base+0x1628>
   5625c:	ldr	w0, [sp, #144]
   56260:	sub	x2, x19, #0x3
   56264:	ldr	x1, [sp, #608]
   56268:	cmp	w0, #0x0
   5626c:	ldr	x0, [sp, #632]
   56270:	sub	x1, x1, #0x1
   56274:	ldr	x3, [x25]
   56278:	asr	x1, x1, #6
   5627c:	add	x1, x1, #0x1
   56280:	cinc	x3, x3, eq  // eq = none
   56284:	bl	c370 <mpfr_round_p@plt>
   56288:	cbz	w0, 56428 <mpfr_ai@@Base+0x1628>
   5628c:	ldr	x24, [sp, #168]
   56290:	ldr	w3, [sp, #616]
   56294:	ldr	w2, [sp, #144]
   56298:	mov	x1, x24
   5629c:	ldr	x23, [sp, #104]
   562a0:	mov	x0, x23
   562a4:	bl	c6a0 <mpfr_set4@plt>
   562a8:	mov	w19, w0
   562ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   562b0:	ldr	x1, [x0, #2576]
   562b4:	add	x0, x0, #0xa10
   562b8:	blr	x1
   562bc:	ldr	w1, [sp, #148]
   562c0:	ldr	x2, [sp, #152]
   562c4:	add	x22, x2, x0
   562c8:	str	w1, [x2, x0]
   562cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   562d0:	ldr	x1, [x0, #2512]
   562d4:	add	x0, x0, #0x9d0
   562d8:	blr	x1
   562dc:	ldr	x1, [sp, #232]
   562e0:	add	x21, x2, x0
   562e4:	str	x1, [x2, x0]
   562e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   562ec:	ldr	x1, [x0, #2544]
   562f0:	add	x0, x0, #0x9f0
   562f4:	blr	x1
   562f8:	add	x20, x2, x0
   562fc:	ldr	x1, [sp, #184]
   56300:	str	x1, [x2, x0]
   56304:	mov	x0, x24
   56308:	bl	c070 <mpfr_clear@plt>
   5630c:	ldr	x0, [sp, #176]
   56310:	bl	c070 <mpfr_clear@plt>
   56314:	ldr	x1, [x21]
   56318:	ldr	x0, [x23, #16]
   5631c:	cmp	x0, x1
   56320:	b.lt	55800 <mpfr_ai@@Base+0xa00>  // b.tstop
   56324:	ldr	x1, [x20]
   56328:	cmp	x0, x1
   5632c:	b.gt	55800 <mpfr_ai@@Base+0xa00>
   56330:	cbz	w19, 5586c <mpfr_ai@@Base+0xa6c>
   56334:	ldr	w0, [x22]
   56338:	ldp	x23, x24, [sp, #48]
   5633c:	orr	w0, w0, #0x8
   56340:	ldp	x25, x26, [sp, #64]
   56344:	str	w0, [x22]
   56348:	ldp	x21, x22, [sp, #32]
   5634c:	b	55820 <mpfr_ai@@Base+0xa20>
   56350:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   56354:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   56358:	add	x2, x2, #0xc58
   5635c:	add	x0, x0, #0xbd0
   56360:	mov	w1, #0x7c                  	// #124
   56364:	bl	cb40 <mpfr_assert_fail@plt>
   56368:	ldr	x0, [sp, #104]
   5636c:	ldr	x19, [x0]
   56370:	b	5598c <mpfr_ai@@Base+0xb8c>
   56374:	mov	x19, #0x5                   	// #5
   56378:	b	55ac8 <mpfr_ai@@Base+0xcc8>
   5637c:	mrs	x2, tpidr_el0
   56380:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   56384:	ldr	x3, [x0, #2576]
   56388:	add	x0, x0, #0xa10
   5638c:	blr	x3
   56390:	add	x0, x2, x0
   56394:	mov	w19, #0x0                   	// #0
   56398:	ldr	x2, [sp, #104]
   5639c:	str	x1, [x2, #16]
   563a0:	ldr	w1, [x0]
   563a4:	orr	w1, w1, #0x4
   563a8:	str	w1, [x0]
   563ac:	b	55820 <mpfr_ai@@Base+0xa20>
   563b0:	ldr	x0, [sp, #160]
   563b4:	ldr	x1, [sp, #136]
   563b8:	sub	x0, x0, x21
   563bc:	cmp	x0, x1
   563c0:	b.lt	564d8 <mpfr_ai@@Base+0x16d8>  // b.tstop
   563c4:	add	x21, x21, x1
   563c8:	cmp	x24, #0x1
   563cc:	add	x0, x21, x21, lsr #63
   563d0:	asr	x0, x0, #1
   563d4:	str	x0, [sp, #136]
   563d8:	b.eq	564d0 <mpfr_ai@@Base+0x16d0>  // b.none
   563dc:	b.ls	564f0 <mpfr_ai@@Base+0x16f0>  // b.plast
   563e0:	clz	x23, x23
   563e4:	mov	w0, #0x42                  	// #66
   563e8:	sub	w0, w0, w23
   563ec:	sxtw	x0, w0
   563f0:	ldr	x2, [sp, #120]
   563f4:	add	x0, x21, x0
   563f8:	ldr	x1, [sp, #432]
   563fc:	add	x0, x0, x2
   56400:	mov	x20, #0x5                   	// #5
   56404:	sub	x20, x20, x1
   56408:	add	x20, x20, x0
   5640c:	b	55b58 <mpfr_ai@@Base+0xd58>
   56410:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   56414:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   56418:	add	x2, x2, #0xbd8
   5641c:	add	x0, x0, #0xbd0
   56420:	mov	w1, #0x222                 	// #546
   56424:	bl	cb40 <mpfr_assert_fail@plt>
   56428:	sub	x0, x22, x19
   5642c:	cmp	x0, x21
   56430:	b.lt	56508 <mpfr_ai@@Base+0x1708>  // b.tstop
   56434:	add	x19, x19, x21
   56438:	add	x21, x19, x19, lsr #63
   5643c:	asr	x21, x21, #1
   56440:	b	561f4 <mpfr_ai@@Base+0x13f4>
   56444:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   56448:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5644c:	add	x2, x2, #0xc00
   56450:	add	x0, x0, #0xbd0
   56454:	mov	w1, #0x22b                 	// #555
   56458:	bl	cb40 <mpfr_assert_fail@plt>
   5645c:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   56460:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   56464:	add	x2, x2, #0xc08
   56468:	add	x0, x0, #0xbd0
   5646c:	mov	w1, #0x52                  	// #82
   56470:	bl	cb40 <mpfr_assert_fail@plt>
   56474:	ldr	x0, [sp, #104]
   56478:	ldr	x19, [x0]
   5647c:	b	561b8 <mpfr_ai@@Base+0x13b8>
   56480:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   56484:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   56488:	add	x2, x2, #0xcf8
   5648c:	add	x0, x0, #0xbd0
   56490:	mov	w1, #0x109                 	// #265
   56494:	bl	cb40 <mpfr_assert_fail@plt>
   56498:	mov	x0, #0x2                   	// #2
   5649c:	b	56140 <mpfr_ai@@Base+0x1340>
   564a0:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   564a4:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   564a8:	add	x2, x2, #0xf80
   564ac:	add	x0, x0, #0xbd0
   564b0:	mov	w1, #0x238                 	// #568
   564b4:	bl	cb40 <mpfr_assert_fail@plt>
   564b8:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   564bc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   564c0:	add	x2, x2, #0xc00
   564c4:	add	x0, x0, #0xbd0
   564c8:	mov	w1, #0x23c                 	// #572
   564cc:	bl	cb40 <mpfr_assert_fail@plt>
   564d0:	mov	x0, #0x2                   	// #2
   564d4:	b	563f0 <mpfr_ai@@Base+0x15f0>
   564d8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   564dc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   564e0:	add	x2, x2, #0xf80
   564e4:	add	x0, x0, #0xbd0
   564e8:	mov	w1, #0x116                 	// #278
   564ec:	bl	cb40 <mpfr_assert_fail@plt>
   564f0:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   564f4:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   564f8:	add	x2, x2, #0xcf8
   564fc:	add	x0, x0, #0xbd0
   56500:	mov	w1, #0x11a                 	// #282
   56504:	bl	cb40 <mpfr_assert_fail@plt>
   56508:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   5650c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   56510:	add	x2, x2, #0xf80
   56514:	add	x0, x0, #0xbd0
   56518:	mov	w1, #0x63                  	// #99
   5651c:	bl	cb40 <mpfr_assert_fail@plt>
   56520:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   56524:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   56528:	add	x2, x2, #0xbd8
   5652c:	add	x0, x0, #0xbd0
   56530:	mov	w1, #0x189                 	// #393
   56534:	bl	cb40 <mpfr_assert_fail@plt>
   56538:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   5653c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   56540:	add	x2, x2, #0xf70
   56544:	add	x0, x0, #0xbd0
   56548:	mov	w1, #0x182                 	// #386
   5654c:	bl	cb40 <mpfr_assert_fail@plt>
   56550:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   56554:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   56558:	add	x2, x2, #0xcb0
   5655c:	add	x0, x0, #0xbd0
   56560:	mov	w1, #0xac                  	// #172
   56564:	bl	cb40 <mpfr_assert_fail@plt>
   56568:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   5656c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   56570:	add	x2, x2, #0xf70
   56574:	add	x0, x0, #0xbd0
   56578:	mov	w1, #0xab                  	// #171
   5657c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000056580 <mpfr_div_ui2@@Base>:
   56580:	stp	x29, x30, [sp, #-48]!
   56584:	mov	x29, sp
   56588:	stp	x19, x20, [sp, #16]
   5658c:	mov	x19, x3
   56590:	ldr	w3, [x1, #8]
   56594:	stp	x21, x22, [sp, #32]
   56598:	mov	x21, x2
   5659c:	mov	w20, w4
   565a0:	mov	w2, w4
   565a4:	mov	x22, x0
   565a8:	bl	c6a0 <mpfr_set4@plt>
   565ac:	umulh	x0, x19, x21
   565b0:	cbnz	x0, 565d8 <mpfr_div_ui2@@Base+0x58>
   565b4:	mul	x19, x19, x21
   565b8:	mov	w3, w20
   565bc:	mov	x2, x19
   565c0:	mov	x1, x22
   565c4:	mov	x0, x22
   565c8:	ldp	x19, x20, [sp, #16]
   565cc:	ldp	x21, x22, [sp, #32]
   565d0:	ldp	x29, x30, [sp], #48
   565d4:	b	cc60 <mpfr_div_ui@plt>
   565d8:	mov	x2, x21
   565dc:	mov	w3, w20
   565e0:	mov	x1, x22
   565e4:	mov	x0, x22
   565e8:	bl	cc60 <mpfr_div_ui@plt>
   565ec:	b	565b8 <mpfr_div_ui2@@Base+0x38>

00000000000565f0 <mpfr_gamma_one_and_two_third@@Base>:
   565f0:	stp	x29, x30, [sp, #-304]!
   565f4:	mov	x29, sp
   565f8:	stp	x19, x20, [sp, #16]
   565fc:	add	x19, x2, #0x4
   56600:	add	x20, sp, #0xd0
   56604:	stp	x21, x22, [sp, #32]
   56608:	add	x22, sp, #0x90
   5660c:	mov	x21, x2
   56610:	stp	x23, x24, [sp, #48]
   56614:	mov	x23, x0
   56618:	mov	x24, x1
   5661c:	mov	x1, x19
   56620:	stp	x25, x26, [sp, #64]
   56624:	add	x26, x2, #0xd
   56628:	stp	x27, x28, [sp, #80]
   5662c:	add	x28, sp, #0xf0
   56630:	mrs	x25, tpidr_el0
   56634:	str	x0, [sp, #104]
   56638:	mov	x0, x22
   5663c:	bl	ca80 <mpfr_init2@plt>
   56640:	mov	x1, x19
   56644:	mov	x0, x24
   56648:	add	x19, sp, #0xb0
   5664c:	bl	bed0 <mpfr_set_prec@plt>
   56650:	mov	x1, x26
   56654:	mov	x0, x19
   56658:	bl	ca80 <mpfr_init2@plt>
   5665c:	mov	x1, x26
   56660:	mov	x0, x20
   56664:	bl	ca80 <mpfr_init2@plt>
   56668:	add	x1, x21, #0x8
   5666c:	mov	x0, x28
   56670:	bl	ca80 <mpfr_init2@plt>
   56674:	str	x25, [sp, #112]
   56678:	add	x1, x21, #0x6
   5667c:	mov	x0, x23
   56680:	bl	bed0 <mpfr_set_prec@plt>
   56684:	add	x23, x21, #0x17
   56688:	mov	w2, #0x0                   	// #0
   5668c:	add	x21, x21, #0x20
   56690:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   56694:	ldr	x1, [x0, #2624]
   56698:	add	x0, x0, #0xa40
   5669c:	blr	x1
   566a0:	add	x1, x25, x0
   566a4:	mov	x0, x19
   566a8:	bl	c380 <mpfr_cache@plt>
   566ac:	mov	x1, x19
   566b0:	mov	w2, #0x0                   	// #0
   566b4:	mov	x0, x19
   566b8:	bl	c400 <mpfr_sqr@plt>
   566bc:	mov	x1, x19
   566c0:	mov	w2, #0x0                   	// #0
   566c4:	mov	x0, x19
   566c8:	bl	c400 <mpfr_sqr@plt>
   566cc:	mov	x1, x19
   566d0:	mov	x0, x19
   566d4:	mov	w3, #0x0                   	// #0
   566d8:	mov	x2, #0xc                   	// #12
   566dc:	bl	ba50 <mpfr_mul_ui@plt>
   566e0:	cmp	x21, #0x9
   566e4:	b.ls	56718 <mpfr_gamma_one_and_two_third@@Base+0x128>  // b.plast
   566e8:	cmn	x26, #0x9
   566ec:	b.lt	56b68 <mpfr_gamma_one_and_two_third@@Base+0x578>  // b.tstop
   566f0:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   566f4:	mov	w1, #0x40                  	// #64
   566f8:	movk	x0, #0x6667
   566fc:	smulh	x0, x26, x0
   56700:	asr	x0, x0, #2
   56704:	sub	x0, x0, x26, asr #63
   56708:	add	x0, x0, #0x1
   5670c:	clz	x0, x0
   56710:	sub	w0, w1, w0
   56714:	add	x23, x23, w0, sxtw
   56718:	add	x27, sp, #0x110
   5671c:	mov	x1, x23
   56720:	mov	x0, x27
   56724:	bl	ca80 <mpfr_init2@plt>
   56728:	mov	x1, x23
   5672c:	mov	x0, x20
   56730:	bl	bed0 <mpfr_set_prec@plt>
   56734:	mov	x21, #0x2                   	// #2
   56738:	mov	w3, #0x0                   	// #0
   5673c:	mov	x2, #0x0                   	// #0
   56740:	mov	x1, #0x1                   	// #1
   56744:	mov	x0, x27
   56748:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5674c:	mov	x23, x21
   56750:	ldr	w3, [sp, #280]
   56754:	mov	x1, x27
   56758:	mov	x0, x20
   5675c:	mov	x25, #0x1                   	// #1
   56760:	mov	w2, #0x0                   	// #0
   56764:	bl	c6a0 <mpfr_set4@plt>
   56768:	ldr	w3, [sp, #280]
   5676c:	sub	x5, x23, #0x1
   56770:	add	x7, x23, #0x1
   56774:	mov	x1, x27
   56778:	mov	x0, x27
   5677c:	mov	w2, #0x0                   	// #0
   56780:	stp	x7, x5, [sp, #120]
   56784:	bl	c6a0 <mpfr_set4@plt>
   56788:	ldp	x7, x5, [sp, #120]
   5678c:	lsl	x6, x21, #1
   56790:	add	x8, x23, #0x3
   56794:	umulh	x0, x23, x5
   56798:	cbnz	x0, 56a00 <mpfr_gamma_one_and_two_third@@Base+0x410>
   5679c:	mul	x5, x23, x5
   567a0:	umulh	x0, x7, x5
   567a4:	cbnz	x0, 56b10 <mpfr_gamma_one_and_two_third@@Base+0x520>
   567a8:	mul	x7, x7, x5
   567ac:	umulh	x0, x6, x7
   567b0:	cbnz	x0, 56af0 <mpfr_gamma_one_and_two_third@@Base+0x500>
   567b4:	mul	x6, x6, x7
   567b8:	umulh	x0, x8, x6
   567bc:	cbnz	x0, 56ad0 <mpfr_gamma_one_and_two_third@@Base+0x4e0>
   567c0:	mul	x8, x8, x6
   567c4:	mov	x2, x8
   567c8:	mov	x1, x27
   567cc:	mov	w3, #0x0                   	// #0
   567d0:	mov	x0, x27
   567d4:	bl	ba50 <mpfr_mul_ui@plt>
   567d8:	ldr	w3, [sp, #280]
   567dc:	add	x5, x21, #0x1
   567e0:	sub	x6, x21, #0x1
   567e4:	mov	x1, x27
   567e8:	mov	x0, x27
   567ec:	mov	w2, #0x0                   	// #0
   567f0:	stp	x6, x5, [sp, #120]
   567f4:	bl	c6a0 <mpfr_set4@plt>
   567f8:	umulh	x0, x25, x25
   567fc:	ldp	x6, x5, [sp, #120]
   56800:	cbnz	x0, 56aac <mpfr_gamma_one_and_two_third@@Base+0x4bc>
   56804:	mul	x2, x25, x25
   56808:	umulh	x0, x6, x2
   5680c:	cbnz	x0, 56a90 <mpfr_gamma_one_and_two_third@@Base+0x4a0>
   56810:	mul	x6, x6, x2
   56814:	umulh	x0, x21, x6
   56818:	cbnz	x0, 56a6c <mpfr_gamma_one_and_two_third@@Base+0x47c>
   5681c:	mul	x6, x6, x21
   56820:	umulh	x0, x5, x6
   56824:	cbnz	x0, 56a4c <mpfr_gamma_one_and_two_third@@Base+0x45c>
   56828:	mul	x5, x5, x6
   5682c:	mov	x0, #0x50                  	// #80
   56830:	umulh	x0, x5, x0
   56834:	cbnz	x0, 56a2c <mpfr_gamma_one_and_two_third@@Base+0x43c>
   56838:	add	x2, x5, x5, lsl #2
   5683c:	mov	x0, #0xa0                  	// #160
   56840:	lsl	x2, x2, #4
   56844:	umulh	x0, x2, x0
   56848:	cbnz	x0, 56b38 <mpfr_gamma_one_and_two_third@@Base+0x548>
   5684c:	add	x2, x5, x5, lsl #1
   56850:	mov	x0, #0xa0                  	// #160
   56854:	add	x2, x5, x2, lsl #3
   56858:	lsl	x2, x2, #9
   5685c:	umulh	x0, x2, x0
   56860:	cbnz	x0, 56b50 <mpfr_gamma_one_and_two_third@@Base+0x560>
   56864:	lsl	x2, x5, #5
   56868:	sub	x2, x2, x5
   5686c:	add	x2, x5, x2, lsl #2
   56870:	lsl	x2, x2, #14
   56874:	mov	x1, x27
   56878:	mov	w3, #0x0                   	// #0
   5687c:	mov	x0, x27
   56880:	bl	cc60 <mpfr_div_ui@plt>
   56884:	ldr	w5, [sp, #280]
   56888:	mov	x1, x20
   5688c:	mov	x2, x27
   56890:	mov	x0, x20
   56894:	neg	w5, w5
   56898:	mov	w3, #0x0                   	// #0
   5689c:	str	w5, [sp, #280]
   568a0:	add	x25, x25, #0x1
   568a4:	add	x23, x23, #0x6
   568a8:	add	x21, x21, #0x3
   568ac:	bl	c1a0 <mpfr_add@plt>
   568b0:	ldr	x0, [sp, #224]
   568b4:	ldr	x1, [sp, #288]
   568b8:	add	x0, x0, #0x7
   568bc:	add	x1, x26, x1
   568c0:	cmp	x1, x0
   568c4:	b.gt	56768 <mpfr_gamma_one_and_two_third@@Base+0x178>
   568c8:	mov	x0, x27
   568cc:	bl	c070 <mpfr_clear@plt>
   568d0:	mov	x2, x20
   568d4:	mov	x1, x19
   568d8:	mov	x0, x19
   568dc:	mov	w3, #0x0                   	// #0
   568e0:	bl	bd50 <mpfr_mul@plt>
   568e4:	mov	w3, #0x0                   	// #0
   568e8:	mov	x0, x20
   568ec:	mov	x2, #0x0                   	// #0
   568f0:	mov	x1, #0xa                   	// #10
   568f4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   568f8:	mov	x1, x20
   568fc:	mov	x0, x20
   56900:	mov	w2, #0x0                   	// #0
   56904:	bl	c930 <mpfr_sqrt@plt>
   56908:	mov	w3, #0x0                   	// #0
   5690c:	mov	x2, x20
   56910:	mov	x1, x19
   56914:	mov	x0, x19
   56918:	bl	c620 <mpfr_div@plt>
   5691c:	mov	x1, x19
   56920:	mov	x0, x28
   56924:	mov	w2, #0x0                   	// #0
   56928:	bl	c930 <mpfr_sqrt@plt>
   5692c:	ldr	x21, [sp, #104]
   56930:	mov	x1, x28
   56934:	mov	w2, #0x0                   	// #0
   56938:	mov	x0, x21
   5693c:	bl	cd20 <mpfr_cbrt@plt>
   56940:	mov	x0, x19
   56944:	bl	c070 <mpfr_clear@plt>
   56948:	mov	x0, x20
   5694c:	bl	c070 <mpfr_clear@plt>
   56950:	mov	x0, x28
   56954:	bl	c070 <mpfr_clear@plt>
   56958:	mov	w3, #0x0                   	// #0
   5695c:	mov	x0, x22
   56960:	mov	x2, #0x0                   	// #0
   56964:	mov	x1, #0x3                   	// #3
   56968:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5696c:	mov	x1, x22
   56970:	mov	x0, x22
   56974:	mov	w2, #0x0                   	// #0
   56978:	bl	c930 <mpfr_sqrt@plt>
   5697c:	mov	x1, x21
   56980:	mov	x2, x22
   56984:	mov	w3, #0x0                   	// #0
   56988:	mov	x0, x22
   5698c:	bl	bd50 <mpfr_mul@plt>
   56990:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   56994:	ldr	x1, [x0, #2624]
   56998:	add	x0, x0, #0xa40
   5699c:	blr	x1
   569a0:	mov	w2, #0x0                   	// #0
   569a4:	ldr	x1, [sp, #112]
   569a8:	add	x1, x1, x0
   569ac:	mov	x0, x24
   569b0:	bl	c380 <mpfr_cache@plt>
   569b4:	mov	x1, x24
   569b8:	mov	x0, x24
   569bc:	mov	w3, #0x0                   	// #0
   569c0:	mov	x2, #0x1                   	// #1
   569c4:	bl	c2c0 <mpfr_mul_2ui@plt>
   569c8:	mov	x2, x22
   569cc:	mov	x1, x24
   569d0:	mov	w3, #0x0                   	// #0
   569d4:	mov	x0, x24
   569d8:	bl	c620 <mpfr_div@plt>
   569dc:	mov	x0, x22
   569e0:	bl	c070 <mpfr_clear@plt>
   569e4:	ldp	x19, x20, [sp, #16]
   569e8:	ldp	x21, x22, [sp, #32]
   569ec:	ldp	x23, x24, [sp, #48]
   569f0:	ldp	x25, x26, [sp, #64]
   569f4:	ldp	x27, x28, [sp, #80]
   569f8:	ldp	x29, x30, [sp], #304
   569fc:	ret
   56a00:	mov	x2, x5
   56a04:	mov	x1, x27
   56a08:	mov	x0, x27
   56a0c:	mov	w3, #0x0                   	// #0
   56a10:	stp	x7, x6, [sp, #120]
   56a14:	str	x8, [sp, #136]
   56a18:	bl	ba50 <mpfr_mul_ui@plt>
   56a1c:	mov	x5, x23
   56a20:	ldp	x7, x6, [sp, #120]
   56a24:	ldr	x8, [sp, #136]
   56a28:	b	567a0 <mpfr_gamma_one_and_two_third@@Base+0x1b0>
   56a2c:	mov	x2, x5
   56a30:	mov	x1, x27
   56a34:	mov	x0, x27
   56a38:	mov	w3, #0x0                   	// #0
   56a3c:	bl	cc60 <mpfr_div_ui@plt>
   56a40:	mov	x2, #0x4000                	// #16384
   56a44:	movk	x2, #0x1f, lsl #16
   56a48:	b	56874 <mpfr_gamma_one_and_two_third@@Base+0x284>
   56a4c:	mov	x2, x6
   56a50:	mov	x1, x27
   56a54:	mov	x0, x27
   56a58:	mov	w3, #0x0                   	// #0
   56a5c:	str	x5, [sp, #120]
   56a60:	bl	cc60 <mpfr_div_ui@plt>
   56a64:	ldr	x5, [sp, #120]
   56a68:	b	5682c <mpfr_gamma_one_and_two_third@@Base+0x23c>
   56a6c:	mov	x2, x6
   56a70:	mov	x1, x27
   56a74:	mov	x0, x27
   56a78:	mov	w3, #0x0                   	// #0
   56a7c:	str	x5, [sp, #120]
   56a80:	bl	cc60 <mpfr_div_ui@plt>
   56a84:	mov	x6, x21
   56a88:	ldr	x5, [sp, #120]
   56a8c:	b	56820 <mpfr_gamma_one_and_two_third@@Base+0x230>
   56a90:	mov	x1, x27
   56a94:	mov	x0, x27
   56a98:	mov	w3, #0x0                   	// #0
   56a9c:	stp	x6, x5, [sp, #120]
   56aa0:	bl	cc60 <mpfr_div_ui@plt>
   56aa4:	ldp	x6, x5, [sp, #120]
   56aa8:	b	56814 <mpfr_gamma_one_and_two_third@@Base+0x224>
   56aac:	mov	x2, x25
   56ab0:	mov	x1, x27
   56ab4:	mov	x0, x27
   56ab8:	mov	w3, #0x0                   	// #0
   56abc:	stp	x6, x5, [sp, #120]
   56ac0:	bl	cc60 <mpfr_div_ui@plt>
   56ac4:	mov	x2, x25
   56ac8:	ldp	x6, x5, [sp, #120]
   56acc:	b	56808 <mpfr_gamma_one_and_two_third@@Base+0x218>
   56ad0:	mov	x2, x6
   56ad4:	mov	x1, x27
   56ad8:	mov	x0, x27
   56adc:	mov	w3, #0x0                   	// #0
   56ae0:	str	x8, [sp, #120]
   56ae4:	bl	ba50 <mpfr_mul_ui@plt>
   56ae8:	ldr	x8, [sp, #120]
   56aec:	b	567c4 <mpfr_gamma_one_and_two_third@@Base+0x1d4>
   56af0:	mov	x2, x7
   56af4:	mov	x1, x27
   56af8:	mov	x0, x27
   56afc:	mov	w3, #0x0                   	// #0
   56b00:	stp	x6, x8, [sp, #120]
   56b04:	bl	ba50 <mpfr_mul_ui@plt>
   56b08:	ldp	x6, x8, [sp, #120]
   56b0c:	b	567b8 <mpfr_gamma_one_and_two_third@@Base+0x1c8>
   56b10:	mov	x2, x5
   56b14:	mov	x1, x27
   56b18:	mov	x0, x27
   56b1c:	mov	w3, #0x0                   	// #0
   56b20:	stp	x7, x6, [sp, #120]
   56b24:	str	x8, [sp, #136]
   56b28:	bl	ba50 <mpfr_mul_ui@plt>
   56b2c:	ldp	x7, x6, [sp, #120]
   56b30:	ldr	x8, [sp, #136]
   56b34:	b	567ac <mpfr_gamma_one_and_two_third@@Base+0x1bc>
   56b38:	mov	x1, x27
   56b3c:	mov	x0, x27
   56b40:	mov	w3, #0x0                   	// #0
   56b44:	bl	cc60 <mpfr_div_ui@plt>
   56b48:	mov	x2, #0x6400                	// #25600
   56b4c:	b	56874 <mpfr_gamma_one_and_two_third@@Base+0x284>
   56b50:	mov	x1, x27
   56b54:	mov	x0, x27
   56b58:	mov	w3, #0x0                   	// #0
   56b5c:	bl	cc60 <mpfr_div_ui@plt>
   56b60:	mov	x2, #0xa0                  	// #160
   56b64:	b	56874 <mpfr_gamma_one_and_two_third@@Base+0x284>
   56b68:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   56b6c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   56b70:	add	x2, x2, #0xd00
   56b74:	add	x0, x0, #0xd18
   56b78:	mov	w1, #0x69                  	// #105
   56b7c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000056b80 <mpfr_grandom@@Base>:
   56b80:	stp	x29, x30, [sp, #-432]!
   56b84:	mov	x29, sp
   56b88:	stp	x19, x20, [sp, #16]
   56b8c:	stp	x21, x22, [sp, #32]
   56b90:	stp	x23, x24, [sp, #48]
   56b94:	stp	x25, x26, [sp, #64]
   56b98:	stp	x27, x28, [sp, #80]
   56b9c:	mov	x27, x2
   56ba0:	stp	x0, x1, [sp, #144]
   56ba4:	str	w3, [sp, #164]
   56ba8:	ldr	x2, [x0]
   56bac:	cbz	x1, 57408 <mpfr_grandom@@Base+0x888>
   56bb0:	ldr	x1, [x1]
   56bb4:	add	x28, sp, #0xd0
   56bb8:	add	x19, sp, #0xb0
   56bbc:	add	x21, sp, #0xc0
   56bc0:	cmp	x1, x2
   56bc4:	mov	x0, x28
   56bc8:	csel	x1, x1, x2, ge  // ge = tcont
   56bcc:	add	x20, sp, #0xe0
   56bd0:	add	x1, x1, #0xb
   56bd4:	str	x1, [sp, #120]
   56bd8:	add	x1, sp, #0xf0
   56bdc:	stp	x19, x21, [sp, #96]
   56be0:	mov	x22, x1
   56be4:	str	x1, [sp, #168]
   56be8:	add	x25, sp, #0x120
   56bec:	bl	bf90 <mpfr_mpz_init@plt>
   56bf0:	add	x23, sp, #0x110
   56bf4:	mov	x0, x20
   56bf8:	bl	bf90 <mpfr_mpz_init@plt>
   56bfc:	mov	x0, x19
   56c00:	bl	bf90 <mpfr_mpz_init@plt>
   56c04:	mov	x0, x21
   56c08:	bl	bf90 <mpfr_mpz_init@plt>
   56c0c:	mov	x0, x22
   56c10:	bl	bf90 <mpfr_mpz_init@plt>
   56c14:	mov	x0, x25
   56c18:	add	x22, sp, #0x100
   56c1c:	bl	bf90 <mpfr_mpz_init@plt>
   56c20:	add	x24, sp, #0x130
   56c24:	mov	x0, x22
   56c28:	bl	bf90 <mpfr_mpz_init@plt>
   56c2c:	mov	x0, x23
   56c30:	bl	bf90 <mpfr_mpz_init@plt>
   56c34:	mov	x0, x24
   56c38:	mov	x1, #0x1                   	// #1
   56c3c:	add	x19, sp, #0x150
   56c40:	bl	ca80 <mpfr_init2@plt>
   56c44:	mov	x0, x19
   56c48:	mov	x1, #0x1                   	// #1
   56c4c:	add	x26, sp, #0x170
   56c50:	bl	ca80 <mpfr_init2@plt>
   56c54:	mov	x0, x26
   56c58:	mov	x1, #0x1                   	// #1
   56c5c:	bl	ca80 <mpfr_init2@plt>
   56c60:	add	x0, sp, #0x190
   56c64:	mov	x1, #0x1                   	// #1
   56c68:	bl	ca80 <mpfr_init2@plt>
   56c6c:	ldr	x0, [sp, #120]
   56c70:	mov	x1, #0x0                   	// #0
   56c74:	lsl	x0, x0, #1
   56c78:	str	x0, [sp, #128]
   56c7c:	mov	x0, x28
   56c80:	bl	bcb0 <__gmpz_set_ui@plt>
   56c84:	mov	x0, x20
   56c88:	mov	x1, #0x0                   	// #0
   56c8c:	bl	bcb0 <__gmpz_set_ui@plt>
   56c90:	ldr	x21, [sp, #120]
   56c94:	mov	x1, x27
   56c98:	mov	x0, x28
   56c9c:	mov	x2, x21
   56ca0:	bl	cd00 <__gmpz_urandomb@plt>
   56ca4:	mov	x2, x21
   56ca8:	mov	x1, x27
   56cac:	mov	x0, x20
   56cb0:	bl	cd00 <__gmpz_urandomb@plt>
   56cb4:	mov	x2, x28
   56cb8:	mov	x1, x28
   56cbc:	mov	x0, x22
   56cc0:	bl	bff0 <__gmpz_mul@plt>
   56cc4:	mov	x2, x20
   56cc8:	mov	x1, x20
   56ccc:	mov	x0, x23
   56cd0:	bl	bff0 <__gmpz_mul@plt>
   56cd4:	mov	x2, x23
   56cd8:	mov	x1, x22
   56cdc:	mov	x0, x25
   56ce0:	bl	c9c0 <__gmpz_add@plt>
   56ce4:	mov	w1, #0x2                   	// #2
   56ce8:	mov	x0, x25
   56cec:	bl	cb60 <__gmpz_sizeinbase@plt>
   56cf0:	ldr	x1, [sp, #128]
   56cf4:	cmp	x0, x1
   56cf8:	b.hi	56c90 <mpfr_grandom@@Base+0x110>  // b.pmore
   56cfc:	mov	x3, x1
   56d00:	ldr	x21, [sp, #120]
   56d04:	b	56dd4 <mpfr_grandom@@Base+0x254>
   56d08:	cmp	x2, x5
   56d0c:	b.ne	56d20 <mpfr_grandom@@Base+0x1a0>  // b.any
   56d10:	bl	ba90 <__gmpz_scan1@plt>
   56d14:	ldr	x3, [sp, #112]
   56d18:	cmp	x0, x3
   56d1c:	b.eq	56e50 <mpfr_grandom@@Base+0x2d0>  // b.none
   56d20:	add	x3, x3, #0x40
   56d24:	mov	x1, x28
   56d28:	mov	x0, x28
   56d2c:	mov	x2, #0x20                  	// #32
   56d30:	str	x3, [sp, #112]
   56d34:	add	x21, x21, #0x20
   56d38:	bl	c200 <__gmpz_mul_2exp@plt>
   56d3c:	mov	x1, x20
   56d40:	mov	x0, x20
   56d44:	mov	x2, #0x20                  	// #32
   56d48:	bl	c200 <__gmpz_mul_2exp@plt>
   56d4c:	ldr	x0, [sp, #96]
   56d50:	mov	x1, x27
   56d54:	mov	x2, #0x20                  	// #32
   56d58:	bl	cd00 <__gmpz_urandomb@plt>
   56d5c:	ldr	x0, [sp, #104]
   56d60:	mov	x1, x27
   56d64:	mov	x2, #0x20                  	// #32
   56d68:	bl	cd00 <__gmpz_urandomb@plt>
   56d6c:	ldr	x2, [sp, #96]
   56d70:	mov	x1, x28
   56d74:	mov	x0, x28
   56d78:	bl	c9c0 <__gmpz_add@plt>
   56d7c:	ldr	x2, [sp, #104]
   56d80:	mov	x1, x20
   56d84:	mov	x0, x20
   56d88:	bl	c9c0 <__gmpz_add@plt>
   56d8c:	mov	x2, x28
   56d90:	mov	x1, x28
   56d94:	mov	x0, x22
   56d98:	bl	bff0 <__gmpz_mul@plt>
   56d9c:	mov	x2, x20
   56da0:	mov	x1, x20
   56da4:	mov	x0, x23
   56da8:	bl	bff0 <__gmpz_mul@plt>
   56dac:	mov	x2, x23
   56db0:	mov	x1, x22
   56db4:	mov	x0, x25
   56db8:	bl	c9c0 <__gmpz_add@plt>
   56dbc:	mov	x0, x25
   56dc0:	mov	w1, #0x2                   	// #2
   56dc4:	bl	cb60 <__gmpz_sizeinbase@plt>
   56dc8:	ldr	x3, [sp, #112]
   56dcc:	cmp	x0, x3
   56dd0:	b.hi	56c90 <mpfr_grandom@@Base+0x110>  // b.pmore
   56dd4:	mov	x1, x28
   56dd8:	mov	x0, x22
   56ddc:	mov	x2, #0x1                   	// #1
   56de0:	str	x3, [sp, #112]
   56de4:	bl	c360 <__gmpz_add_ui@plt>
   56de8:	mov	x1, x20
   56dec:	mov	x0, x23
   56df0:	mov	x2, #0x1                   	// #1
   56df4:	bl	c360 <__gmpz_add_ui@plt>
   56df8:	mov	x2, x22
   56dfc:	mov	x1, x22
   56e00:	mov	x0, x22
   56e04:	bl	bff0 <__gmpz_mul@plt>
   56e08:	mov	x2, x23
   56e0c:	mov	x1, x23
   56e10:	mov	x0, x23
   56e14:	bl	bff0 <__gmpz_mul@plt>
   56e18:	mov	x2, x23
   56e1c:	mov	x1, x22
   56e20:	mov	x0, x25
   56e24:	bl	c9c0 <__gmpz_add@plt>
   56e28:	mov	w1, #0x2                   	// #2
   56e2c:	mov	x0, x25
   56e30:	bl	cb60 <__gmpz_sizeinbase@plt>
   56e34:	mov	x2, x0
   56e38:	ldr	x3, [sp, #112]
   56e3c:	mov	x0, x25
   56e40:	mov	x1, #0x0                   	// #0
   56e44:	add	x5, x3, #0x1
   56e48:	cmp	x2, x3
   56e4c:	b.hi	56d08 <mpfr_grandom@@Base+0x188>  // b.pmore
   56e50:	mov	x2, x28
   56e54:	mov	x1, x28
   56e58:	mov	x0, x22
   56e5c:	bl	bff0 <__gmpz_mul@plt>
   56e60:	mov	x2, x20
   56e64:	mov	x1, x20
   56e68:	mov	x0, x23
   56e6c:	bl	bff0 <__gmpz_mul@plt>
   56e70:	mov	x2, x23
   56e74:	mov	x1, x22
   56e78:	mov	x0, x25
   56e7c:	bl	c9c0 <__gmpz_add@plt>
   56e80:	ldr	x0, [sp, #96]
   56e84:	mov	x2, #0x2                   	// #2
   56e88:	mov	x1, x27
   56e8c:	bl	cd00 <__gmpz_urandomb@plt>
   56e90:	ldr	x0, [sp, #96]
   56e94:	mov	x1, #0x0                   	// #0
   56e98:	bl	bfe0 <__gmpz_tstbit@plt>
   56e9c:	str	w0, [sp, #120]
   56ea0:	ldr	x0, [sp, #96]
   56ea4:	mov	x1, #0x1                   	// #1
   56ea8:	bl	bfe0 <__gmpz_tstbit@plt>
   56eac:	str	w0, [sp, #160]
   56eb0:	ldr	w1, [sp, #164]
   56eb4:	cmp	w1, #0x0
   56eb8:	cset	x0, eq  // eq = none
   56ebc:	str	x0, [sp, #128]
   56ec0:	add	x0, sp, #0x190
   56ec4:	str	x0, [sp, #112]
   56ec8:	b	57024 <mpfr_grandom@@Base+0x4a4>
   56ecc:	ldr	x0, [sp, #384]
   56ed0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   56ed4:	cmp	x0, x1
   56ed8:	b.le	56f90 <mpfr_grandom@@Base+0x410>
   56edc:	ldr	x3, [sp, #144]
   56ee0:	sub	x2, x21, #0x2
   56ee4:	ldr	x1, [sp, #368]
   56ee8:	str	x2, [sp, #136]
   56eec:	ldr	x4, [sp, #128]
   56ef0:	sub	x1, x1, #0x1
   56ef4:	ldr	x0, [sp, #392]
   56ef8:	asr	x1, x1, #6
   56efc:	ldr	x3, [x3]
   56f00:	add	x1, x1, #0x1
   56f04:	add	x3, x4, x3
   56f08:	bl	c370 <mpfr_round_p@plt>
   56f0c:	cbz	w0, 56f90 <mpfr_grandom@@Base+0x410>
   56f10:	ldr	x0, [sp, #152]
   56f14:	cbz	x0, 57270 <mpfr_grandom@@Base+0x6f0>
   56f18:	ldr	x0, [sp, #112]
   56f1c:	mov	x1, x21
   56f20:	bl	bed0 <mpfr_set_prec@plt>
   56f24:	ldr	x0, [sp, #112]
   56f28:	mov	x2, x20
   56f2c:	mov	x1, x19
   56f30:	mov	w3, #0x0                   	// #0
   56f34:	bl	c4d0 <mpfr_mul_z@plt>
   56f38:	ldr	x0, [sp, #112]
   56f3c:	mov	x2, x21
   56f40:	mov	w3, #0x0                   	// #0
   56f44:	mov	x1, x0
   56f48:	bl	c8f0 <mpfr_div_2ui@plt>
   56f4c:	ldr	w0, [sp, #160]
   56f50:	cbnz	w0, 57108 <mpfr_grandom@@Base+0x588>
   56f54:	ldr	x0, [sp, #416]
   56f58:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   56f5c:	cmp	x0, x1
   56f60:	b.le	56f90 <mpfr_grandom@@Base+0x410>
   56f64:	ldr	x3, [sp, #152]
   56f68:	ldp	x4, x2, [sp, #128]
   56f6c:	ldr	x1, [sp, #400]
   56f70:	ldr	x0, [sp, #424]
   56f74:	sub	x1, x1, #0x1
   56f78:	ldr	x3, [x3]
   56f7c:	asr	x1, x1, #6
   56f80:	add	x1, x1, #0x1
   56f84:	add	x3, x4, x3
   56f88:	bl	c370 <mpfr_round_p@plt>
   56f8c:	cbnz	w0, 5711c <mpfr_grandom@@Base+0x59c>
   56f90:	mov	x1, x28
   56f94:	mov	x0, x28
   56f98:	mov	x2, #0x20                  	// #32
   56f9c:	bl	c200 <__gmpz_mul_2exp@plt>
   56fa0:	mov	x1, x20
   56fa4:	mov	x0, x20
   56fa8:	mov	x2, #0x20                  	// #32
   56fac:	bl	c200 <__gmpz_mul_2exp@plt>
   56fb0:	ldr	x0, [sp, #96]
   56fb4:	mov	x1, x27
   56fb8:	mov	x2, #0x20                  	// #32
   56fbc:	add	x21, x21, #0x20
   56fc0:	bl	cd00 <__gmpz_urandomb@plt>
   56fc4:	ldr	x0, [sp, #104]
   56fc8:	mov	x1, x27
   56fcc:	mov	x2, #0x20                  	// #32
   56fd0:	bl	cd00 <__gmpz_urandomb@plt>
   56fd4:	ldr	x2, [sp, #96]
   56fd8:	mov	x1, x28
   56fdc:	mov	x0, x28
   56fe0:	bl	c9c0 <__gmpz_add@plt>
   56fe4:	ldr	x2, [sp, #104]
   56fe8:	mov	x1, x20
   56fec:	mov	x0, x20
   56ff0:	bl	c9c0 <__gmpz_add@plt>
   56ff4:	mov	x2, x28
   56ff8:	mov	x1, x28
   56ffc:	mov	x0, x22
   57000:	bl	bff0 <__gmpz_mul@plt>
   57004:	mov	x2, x20
   57008:	mov	x1, x20
   5700c:	mov	x0, x23
   57010:	bl	bff0 <__gmpz_mul@plt>
   57014:	mov	x2, x23
   57018:	mov	x1, x22
   5701c:	mov	x0, x25
   57020:	bl	c9c0 <__gmpz_add@plt>
   57024:	lsl	x1, x21, #1
   57028:	mov	x0, x24
   5702c:	bl	bed0 <mpfr_set_prec@plt>
   57030:	mov	x1, x21
   57034:	mov	x0, x19
   57038:	bl	bed0 <mpfr_set_prec@plt>
   5703c:	mov	x1, x25
   57040:	mov	w2, #0x0                   	// #0
   57044:	mov	x0, x24
   57048:	bl	c240 <mpfr_set_z@plt>
   5704c:	mov	w3, #0x0                   	// #0
   57050:	neg	x2, x21, lsl #1
   57054:	mov	x1, x24
   57058:	mov	x0, x24
   5705c:	bl	bb90 <mpfr_mul_2si@plt>
   57060:	mov	x1, x24
   57064:	mov	w2, #0x0                   	// #0
   57068:	mov	x0, x19
   5706c:	bl	c090 <mpfr_log@plt>
   57070:	mov	x1, x19
   57074:	mov	w2, #0x0                   	// #0
   57078:	mov	x0, x19
   5707c:	bl	bd70 <mpfr_neg@plt>
   57080:	mov	x1, x19
   57084:	mov	w3, #0x0                   	// #0
   57088:	mov	x2, #0x1                   	// #1
   5708c:	mov	x0, x19
   57090:	bl	bb90 <mpfr_mul_2si@plt>
   57094:	mov	w3, #0x0                   	// #0
   57098:	mov	x2, x24
   5709c:	mov	x1, x19
   570a0:	mov	x0, x19
   570a4:	bl	c620 <mpfr_div@plt>
   570a8:	mov	w2, #0x0                   	// #0
   570ac:	mov	x1, x19
   570b0:	mov	x0, x19
   570b4:	bl	c930 <mpfr_sqrt@plt>
   570b8:	mov	x1, x21
   570bc:	mov	x0, x26
   570c0:	bl	bed0 <mpfr_set_prec@plt>
   570c4:	mov	x2, x28
   570c8:	mov	x1, x19
   570cc:	mov	w3, #0x0                   	// #0
   570d0:	mov	x0, x26
   570d4:	bl	c4d0 <mpfr_mul_z@plt>
   570d8:	mov	x2, x21
   570dc:	mov	x1, x26
   570e0:	mov	x0, x26
   570e4:	mov	w3, #0x0                   	// #0
   570e8:	bl	c8f0 <mpfr_div_2ui@plt>
   570ec:	ldr	w0, [sp, #120]
   570f0:	cbz	w0, 56ecc <mpfr_grandom@@Base+0x34c>
   570f4:	mov	x1, x26
   570f8:	mov	x0, x26
   570fc:	mov	w2, #0x0                   	// #0
   57100:	bl	bd70 <mpfr_neg@plt>
   57104:	b	56ecc <mpfr_grandom@@Base+0x34c>
   57108:	ldr	x0, [sp, #112]
   5710c:	mov	w2, #0x0                   	// #0
   57110:	mov	x1, x0
   57114:	bl	bd70 <mpfr_neg@plt>
   57118:	b	56f54 <mpfr_grandom@@Base+0x3d4>
   5711c:	ldr	w3, [sp, #376]
   57120:	mrs	x5, tpidr_el0
   57124:	ldr	x0, [sp, #144]
   57128:	mov	x1, x26
   5712c:	ldr	w27, [sp, #164]
   57130:	str	x5, [sp, #120]
   57134:	mov	w2, w27
   57138:	bl	c6a0 <mpfr_set4@plt>
   5713c:	ldr	w3, [sp, #408]
   57140:	mov	w21, w0
   57144:	ldr	x1, [sp, #112]
   57148:	mov	w2, w27
   5714c:	ldr	x0, [sp, #152]
   57150:	bl	c6a0 <mpfr_set4@plt>
   57154:	mov	w27, w0
   57158:	ldr	x5, [sp, #120]
   5715c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57160:	ldr	x1, [x0, #2512]
   57164:	add	x0, x0, #0x9d0
   57168:	blr	x1
   5716c:	ldr	x1, [x5, x0]
   57170:	ldr	x0, [sp, #152]
   57174:	ldr	x2, [x0, #16]
   57178:	cmp	x2, x1
   5717c:	b.ge	57208 <mpfr_grandom@@Base+0x688>  // b.tcont
   57180:	ldr	w2, [sp, #164]
   57184:	mov	w1, w27
   57188:	ldr	x0, [sp, #152]
   5718c:	str	x5, [sp, #120]
   57190:	bl	cb30 <mpfr_check_range@plt>
   57194:	mov	w27, w0
   57198:	ldr	x5, [sp, #120]
   5719c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   571a0:	ldr	x1, [x0, #2512]
   571a4:	add	x0, x0, #0x9d0
   571a8:	blr	x1
   571ac:	ldr	x1, [x5, x0]
   571b0:	ldr	x0, [sp, #144]
   571b4:	ldr	x2, [x0, #16]
   571b8:	cmp	x1, x2
   571bc:	b.gt	57254 <mpfr_grandom@@Base+0x6d4>
   571c0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   571c4:	ldr	x1, [x0, #2544]
   571c8:	add	x0, x0, #0x9f0
   571cc:	blr	x1
   571d0:	ldr	x0, [x5, x0]
   571d4:	cmp	x0, x2
   571d8:	b.lt	574c8 <mpfr_grandom@@Base+0x948>  // b.tstop
   571dc:	cbz	w21, 57264 <mpfr_grandom@@Base+0x6e4>
   571e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   571e4:	ldr	x1, [x0, #2576]
   571e8:	add	x0, x0, #0xa10
   571ec:	blr	x1
   571f0:	ldr	w1, [x5, x0]
   571f4:	orr	w1, w1, #0x8
   571f8:	str	w1, [x5, x0]
   571fc:	ldr	x0, [sp, #152]
   57200:	cbnz	x0, 57264 <mpfr_grandom@@Base+0x6e4>
   57204:	b	57398 <mpfr_grandom@@Base+0x818>
   57208:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5720c:	ldr	x3, [x0, #2544]
   57210:	add	x0, x0, #0x9f0
   57214:	blr	x3
   57218:	ldr	x0, [x5, x0]
   5721c:	cmp	x2, x0
   57220:	b.gt	57180 <mpfr_grandom@@Base+0x600>
   57224:	cbz	w27, 571b0 <mpfr_grandom@@Base+0x630>
   57228:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5722c:	ldr	x2, [x0, #2576]
   57230:	add	x0, x0, #0xa10
   57234:	blr	x2
   57238:	ldr	w2, [x5, x0]
   5723c:	orr	w2, w2, #0x8
   57240:	str	w2, [x5, x0]
   57244:	ldr	x0, [sp, #144]
   57248:	ldr	x2, [x0, #16]
   5724c:	cmp	x1, x2
   57250:	b.le	571c0 <mpfr_grandom@@Base+0x640>
   57254:	ldr	w2, [sp, #164]
   57258:	mov	w1, w21
   5725c:	bl	cb30 <mpfr_check_range@plt>
   57260:	mov	w21, w0
   57264:	ldr	x0, [sp, #112]
   57268:	bl	c070 <mpfr_clear@plt>
   5726c:	b	572e4 <mpfr_grandom@@Base+0x764>
   57270:	ldr	w2, [sp, #164]
   57274:	mov	x1, x26
   57278:	ldr	w3, [sp, #376]
   5727c:	ldr	x27, [sp, #144]
   57280:	mov	x0, x27
   57284:	bl	c6a0 <mpfr_set4@plt>
   57288:	mrs	x1, tpidr_el0
   5728c:	mov	w21, w0
   57290:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57294:	ldr	x2, [x0, #2512]
   57298:	add	x0, x0, #0x9d0
   5729c:	blr	x2
   572a0:	ldr	x2, [x27, #16]
   572a4:	ldr	x0, [x1, x0]
   572a8:	cmp	x0, x2
   572ac:	b.gt	572cc <mpfr_grandom@@Base+0x74c>
   572b0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   572b4:	ldr	x3, [x0, #2544]
   572b8:	add	x0, x0, #0x9f0
   572bc:	blr	x3
   572c0:	ldr	x0, [x1, x0]
   572c4:	cmp	x0, x2
   572c8:	b.ge	57374 <mpfr_grandom@@Base+0x7f4>  // b.tcont
   572cc:	ldr	w2, [sp, #164]
   572d0:	mov	w1, w21
   572d4:	ldr	x0, [sp, #144]
   572d8:	mov	w27, #0x0                   	// #0
   572dc:	bl	cb30 <mpfr_check_range@plt>
   572e0:	mov	w21, w0
   572e4:	mov	x0, x26
   572e8:	bl	c070 <mpfr_clear@plt>
   572ec:	mov	x0, x19
   572f0:	bl	c070 <mpfr_clear@plt>
   572f4:	mov	x0, x24
   572f8:	bl	c070 <mpfr_clear@plt>
   572fc:	mov	x0, x23
   57300:	bl	c170 <mpfr_mpz_clear@plt>
   57304:	mov	x0, x22
   57308:	bl	c170 <mpfr_mpz_clear@plt>
   5730c:	mov	x0, x25
   57310:	bl	c170 <mpfr_mpz_clear@plt>
   57314:	ldr	x0, [sp, #168]
   57318:	bl	c170 <mpfr_mpz_clear@plt>
   5731c:	ldr	x0, [sp, #104]
   57320:	bl	c170 <mpfr_mpz_clear@plt>
   57324:	ldr	x0, [sp, #96]
   57328:	bl	c170 <mpfr_mpz_clear@plt>
   5732c:	mov	x0, x20
   57330:	bl	c170 <mpfr_mpz_clear@plt>
   57334:	mov	x0, x28
   57338:	bl	c170 <mpfr_mpz_clear@plt>
   5733c:	cbnz	w21, 573f0 <mpfr_grandom@@Base+0x870>
   57340:	mov	w0, #0x8                   	// #8
   57344:	mov	w1, #0x4                   	// #4
   57348:	cmp	w27, #0x0
   5734c:	csel	w1, w1, w0, gt
   57350:	csel	w21, w1, w21, ne  // ne = any
   57354:	mov	w0, w21
   57358:	ldp	x19, x20, [sp, #16]
   5735c:	ldp	x21, x22, [sp, #32]
   57360:	ldp	x23, x24, [sp, #48]
   57364:	ldp	x25, x26, [sp, #64]
   57368:	ldp	x27, x28, [sp, #80]
   5736c:	ldp	x29, x30, [sp], #432
   57370:	ret
   57374:	cbz	w21, 574e0 <mpfr_grandom@@Base+0x960>
   57378:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5737c:	ldr	x2, [x0, #2576]
   57380:	add	x0, x0, #0xa10
   57384:	blr	x2
   57388:	ldr	w2, [x1, x0]
   5738c:	mov	w27, #0x0                   	// #0
   57390:	orr	w2, w2, #0x8
   57394:	str	w2, [x1, x0]
   57398:	mov	x0, x26
   5739c:	bl	c070 <mpfr_clear@plt>
   573a0:	mov	x0, x19
   573a4:	bl	c070 <mpfr_clear@plt>
   573a8:	mov	x0, x24
   573ac:	bl	c070 <mpfr_clear@plt>
   573b0:	mov	x0, x23
   573b4:	bl	c170 <mpfr_mpz_clear@plt>
   573b8:	mov	x0, x22
   573bc:	bl	c170 <mpfr_mpz_clear@plt>
   573c0:	mov	x0, x25
   573c4:	bl	c170 <mpfr_mpz_clear@plt>
   573c8:	ldr	x0, [sp, #168]
   573cc:	bl	c170 <mpfr_mpz_clear@plt>
   573d0:	ldr	x0, [sp, #104]
   573d4:	bl	c170 <mpfr_mpz_clear@plt>
   573d8:	ldr	x0, [sp, #96]
   573dc:	bl	c170 <mpfr_mpz_clear@plt>
   573e0:	mov	x0, x20
   573e4:	bl	c170 <mpfr_mpz_clear@plt>
   573e8:	mov	x0, x28
   573ec:	bl	c170 <mpfr_mpz_clear@plt>
   573f0:	cmp	w21, #0x0
   573f4:	b.le	574b8 <mpfr_grandom@@Base+0x938>
   573f8:	mov	w0, #0x9                   	// #9
   573fc:	mov	w1, #0x5                   	// #5
   57400:	mov	w21, #0x1                   	// #1
   57404:	b	57348 <mpfr_grandom@@Base+0x7c8>
   57408:	add	x0, x2, #0xb
   5740c:	add	x28, sp, #0xd0
   57410:	str	x0, [sp, #120]
   57414:	mov	x0, x28
   57418:	bl	bf90 <mpfr_mpz_init@plt>
   5741c:	add	x20, sp, #0xe0
   57420:	add	x0, sp, #0xb0
   57424:	add	x25, sp, #0x120
   57428:	mov	x19, x0
   5742c:	mov	x0, x20
   57430:	str	x19, [sp, #96]
   57434:	bl	bf90 <mpfr_mpz_init@plt>
   57438:	mov	x0, x19
   5743c:	add	x19, sp, #0xc0
   57440:	str	x19, [sp, #104]
   57444:	bl	bf90 <mpfr_mpz_init@plt>
   57448:	add	x0, sp, #0xf0
   5744c:	add	x22, sp, #0x100
   57450:	mov	x21, x0
   57454:	mov	x0, x19
   57458:	str	x21, [sp, #168]
   5745c:	bl	bf90 <mpfr_mpz_init@plt>
   57460:	mov	x0, x21
   57464:	bl	bf90 <mpfr_mpz_init@plt>
   57468:	mov	x0, x25
   5746c:	bl	bf90 <mpfr_mpz_init@plt>
   57470:	mov	x0, x22
   57474:	add	x23, sp, #0x110
   57478:	bl	bf90 <mpfr_mpz_init@plt>
   5747c:	add	x24, sp, #0x130
   57480:	mov	x0, x23
   57484:	bl	bf90 <mpfr_mpz_init@plt>
   57488:	mov	x0, x24
   5748c:	add	x19, sp, #0x150
   57490:	mov	x1, #0x1                   	// #1
   57494:	bl	ca80 <mpfr_init2@plt>
   57498:	mov	x0, x19
   5749c:	add	x26, sp, #0x170
   574a0:	mov	x1, #0x1                   	// #1
   574a4:	bl	ca80 <mpfr_init2@plt>
   574a8:	mov	x0, x26
   574ac:	mov	x1, #0x1                   	// #1
   574b0:	bl	ca80 <mpfr_init2@plt>
   574b4:	b	56c6c <mpfr_grandom@@Base+0xec>
   574b8:	mov	w0, #0xa                   	// #10
   574bc:	mov	w1, #0x6                   	// #6
   574c0:	mov	w21, #0x2                   	// #2
   574c4:	b	57348 <mpfr_grandom@@Base+0x7c8>
   574c8:	ldr	w2, [sp, #164]
   574cc:	mov	w1, w21
   574d0:	ldr	x0, [sp, #144]
   574d4:	bl	cb30 <mpfr_check_range@plt>
   574d8:	mov	w21, w0
   574dc:	b	57264 <mpfr_grandom@@Base+0x6e4>
   574e0:	mov	x0, x26
   574e4:	bl	c070 <mpfr_clear@plt>
   574e8:	mov	x0, x19
   574ec:	bl	c070 <mpfr_clear@plt>
   574f0:	mov	x0, x24
   574f4:	bl	c070 <mpfr_clear@plt>
   574f8:	mov	x0, x23
   574fc:	bl	c170 <mpfr_mpz_clear@plt>
   57500:	mov	x0, x22
   57504:	bl	c170 <mpfr_mpz_clear@plt>
   57508:	mov	x0, x25
   5750c:	bl	c170 <mpfr_mpz_clear@plt>
   57510:	ldr	x0, [sp, #168]
   57514:	bl	c170 <mpfr_mpz_clear@plt>
   57518:	ldr	x0, [sp, #104]
   5751c:	bl	c170 <mpfr_mpz_clear@plt>
   57520:	ldr	x0, [sp, #96]
   57524:	bl	c170 <mpfr_mpz_clear@plt>
   57528:	mov	x0, x20
   5752c:	bl	c170 <mpfr_mpz_clear@plt>
   57530:	mov	x0, x28
   57534:	bl	c170 <mpfr_mpz_clear@plt>
   57538:	mov	w0, w21
   5753c:	ldp	x19, x20, [sp, #16]
   57540:	ldp	x21, x22, [sp, #32]
   57544:	ldp	x23, x24, [sp, #48]
   57548:	ldp	x25, x26, [sp, #64]
   5754c:	ldp	x27, x28, [sp, #80]
   57550:	ldp	x29, x30, [sp], #432
   57554:	ret

0000000000057558 <__gmpfr_fpif_export@@Base>:
   57558:	cbz	x0, 579a0 <__gmpfr_fpif_export@@Base+0x448>
   5755c:	stp	x29, x30, [sp, #-96]!
   57560:	mov	x29, sp
   57564:	stp	x19, x20, [sp, #16]
   57568:	ldr	x19, [x1]
   5756c:	stp	x23, x24, [sp, #48]
   57570:	mov	x24, x0
   57574:	cmp	x19, #0xf8
   57578:	stp	x21, x22, [sp, #32]
   5757c:	cset	x0, gt
   57580:	asr	x19, x19, #3
   57584:	mov	x21, x1
   57588:	add	x19, x19, #0xb
   5758c:	add	x19, x19, x0, lsl #3
   57590:	mov	x0, x19
   57594:	bl	ccf0 <mpfr_allocate_func@plt>
   57598:	mov	x23, x0
   5759c:	cbz	x0, 57998 <__gmpfr_fpif_export@@Base+0x440>
   575a0:	ldr	x22, [x21]
   575a4:	stp	x25, x26, [sp, #64]
   575a8:	str	x22, [sp, #88]
   575ac:	cmp	x22, #0xf8
   575b0:	b.gt	577f8 <__gmpfr_fpif_export@@Base+0x2a0>
   575b4:	cbnz	x19, 575cc <__gmpfr_fpif_export@@Base+0x74>
   575b8:	mov	x2, #0x1                   	// #1
   575bc:	mov	x1, #0x0                   	// #0
   575c0:	bl	c1c0 <mpfr_reallocate_func@plt>
   575c4:	mov	x23, x0
   575c8:	cbz	x0, 57970 <__gmpfr_fpif_export@@Base+0x418>
   575cc:	cmp	x19, #0x0
   575d0:	mov	x20, #0x1                   	// #1
   575d4:	csel	x19, x19, x20, ne  // ne = any
   575d8:	add	w0, w22, #0x7
   575dc:	strb	w0, [x23]
   575e0:	mov	x1, x20
   575e4:	mov	x3, x24
   575e8:	mov	x0, x23
   575ec:	mov	x2, #0x1                   	// #1
   575f0:	bl	c8c0 <fwrite@plt>
   575f4:	cmp	w0, #0x1
   575f8:	b.ne	57958 <__gmpfr_fpif_export@@Base+0x400>  // b.any
   575fc:	ldr	x0, [x21, #16]
   57600:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   57604:	cmp	x0, x1
   57608:	b.gt	57864 <__gmpfr_fpif_export@@Base+0x30c>
   5760c:	cbnz	x19, 5790c <__gmpfr_fpif_export@@Base+0x3b4>
   57610:	mov	x25, #0x0                   	// #0
   57614:	mov	x22, #0x1                   	// #1
   57618:	mov	x2, x22
   5761c:	mov	x1, x19
   57620:	mov	x0, x23
   57624:	bl	c1c0 <mpfr_reallocate_func@plt>
   57628:	mov	x20, x0
   5762c:	cbz	x0, 57958 <__gmpfr_fpif_export@@Base+0x400>
   57630:	ldr	x0, [x21, #16]
   57634:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   57638:	cmp	x0, x1
   5763c:	b.gt	578cc <__gmpfr_fpif_export@@Base+0x374>
   57640:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   57644:	cmp	x0, x1
   57648:	b.eq	57920 <__gmpfr_fpif_export@@Base+0x3c8>  // b.none
   5764c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   57650:	cmp	x0, x1
   57654:	b.eq	57948 <__gmpfr_fpif_export@@Base+0x3f0>  // b.none
   57658:	mov	w0, #0x79                  	// #121
   5765c:	mov	w26, #0x79                  	// #121
   57660:	strb	w0, [x20]
   57664:	ldr	w0, [x21, #8]
   57668:	tbz	w0, #31, 57674 <__gmpfr_fpif_export@@Base+0x11c>
   5766c:	orr	w26, w26, #0xffffff80
   57670:	strb	w26, [x20]
   57674:	cmp	x22, x19
   57678:	mov	x1, x22
   5767c:	csel	x19, x22, x19, cs  // cs = hs, nlast
   57680:	mov	x3, x24
   57684:	mov	x0, x20
   57688:	mov	x2, #0x1                   	// #1
   5768c:	bl	c8c0 <fwrite@plt>
   57690:	cmp	w0, #0x1
   57694:	b.ne	57980 <__gmpfr_fpif_export@@Base+0x428>  // b.any
   57698:	ldr	x1, [x21, #16]
   5769c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   576a0:	cmp	x1, x0
   576a4:	b.le	577d0 <__gmpfr_fpif_export@@Base+0x278>
   576a8:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   576ac:	ldr	x23, [x21]
   576b0:	ldr	x0, [x0, #4032]
   576b4:	add	x23, x23, #0x7
   576b8:	asr	x23, x23, #3
   576bc:	ldr	w25, [x0]
   576c0:	cmp	x19, x23
   576c4:	asr	w25, w25, #3
   576c8:	sxtw	x25, w25
   576cc:	sub	x26, x25, #0x1
   576d0:	add	x26, x26, x23
   576d4:	udiv	x22, x23, x25
   576d8:	udiv	x26, x26, x25
   576dc:	msub	x22, x22, x25, x23
   576e0:	b.cs	576fc <__gmpfr_fpif_export@@Base+0x1a4>  // b.hs, b.nlast
   576e4:	mov	x0, x20
   576e8:	mov	x2, x23
   576ec:	mov	x1, x19
   576f0:	bl	c1c0 <mpfr_reallocate_func@plt>
   576f4:	mov	x20, x0
   576f8:	cbz	x0, 57978 <__gmpfr_fpif_export@@Base+0x420>
   576fc:	ldr	x0, [x21, #24]
   57700:	cbz	x22, 5777c <__gmpfr_fpif_export@@Base+0x224>
   57704:	ldrb	w1, [x0, #7]
   57708:	cmp	x22, #0x1
   5770c:	strb	w1, [x20]
   57710:	b.eq	5777c <__gmpfr_fpif_export@@Base+0x224>  // b.none
   57714:	ldrb	w1, [x0, #6]
   57718:	cmp	x22, #0x2
   5771c:	strb	w1, [x20, #1]
   57720:	b.eq	5777c <__gmpfr_fpif_export@@Base+0x224>  // b.none
   57724:	ldrb	w1, [x0, #5]
   57728:	cmp	x22, #0x3
   5772c:	strb	w1, [x20, #2]
   57730:	b.eq	5777c <__gmpfr_fpif_export@@Base+0x224>  // b.none
   57734:	ldrb	w1, [x0, #4]
   57738:	cmp	x22, #0x4
   5773c:	strb	w1, [x20, #3]
   57740:	b.eq	5777c <__gmpfr_fpif_export@@Base+0x224>  // b.none
   57744:	ldrb	w1, [x0, #3]
   57748:	cmp	x22, #0x5
   5774c:	strb	w1, [x20, #4]
   57750:	b.eq	5777c <__gmpfr_fpif_export@@Base+0x224>  // b.none
   57754:	ldrb	w1, [x0, #2]
   57758:	cmp	x22, #0x6
   5775c:	strb	w1, [x20, #5]
   57760:	b.eq	5777c <__gmpfr_fpif_export@@Base+0x224>  // b.none
   57764:	ldrb	w1, [x0, #1]
   57768:	cmp	x22, #0x8
   5776c:	strb	w1, [x20, #6]
   57770:	b.ne	5777c <__gmpfr_fpif_export@@Base+0x224>  // b.any
   57774:	ldrb	w0, [x0]
   57778:	strb	w0, [x20, #7]
   5777c:	cmp	x22, #0x0
   57780:	cset	x0, ne  // ne = any
   57784:	cmp	x19, x23
   57788:	csel	x19, x19, x23, cs  // cs = hs, nlast
   5778c:	cmp	x26, x0
   57790:	b.ls	577b4 <__gmpfr_fpif_export@@Base+0x25c>  // b.plast
   57794:	nop
   57798:	ldr	x1, [x21, #24]
   5779c:	ldr	x1, [x1, x0, lsl #3]
   577a0:	str	x1, [x20, x22]
   577a4:	add	x0, x0, #0x1
   577a8:	add	x22, x22, x25
   577ac:	cmp	x26, x0
   577b0:	b.ne	57798 <__gmpfr_fpif_export@@Base+0x240>  // b.any
   577b4:	mov	x3, x24
   577b8:	mov	x1, x23
   577bc:	mov	x0, x20
   577c0:	mov	x2, #0x1                   	// #1
   577c4:	bl	c8c0 <fwrite@plt>
   577c8:	cmp	w0, #0x1
   577cc:	b.ne	57980 <__gmpfr_fpif_export@@Base+0x428>  // b.any
   577d0:	mov	x0, x20
   577d4:	mov	x1, x19
   577d8:	bl	cc20 <mpfr_free_func@plt>
   577dc:	ldp	x25, x26, [sp, #64]
   577e0:	mov	w0, #0x0                   	// #0
   577e4:	ldp	x19, x20, [sp, #16]
   577e8:	ldp	x21, x22, [sp, #32]
   577ec:	ldp	x23, x24, [sp, #48]
   577f0:	ldp	x29, x30, [sp], #96
   577f4:	ret
   577f8:	sub	x22, x22, #0xf9
   577fc:	mov	x25, #0x0                   	// #0
   57800:	mov	x0, x22
   57804:	nop
   57808:	mov	x20, x25
   5780c:	lsr	x0, x0, #8
   57810:	add	x25, x25, #0x1
   57814:	cbnz	x0, 57808 <__gmpfr_fpif_export@@Base+0x2b0>
   57818:	add	x20, x20, #0x2
   5781c:	cmp	x19, x20
   57820:	b.cs	5783c <__gmpfr_fpif_export@@Base+0x2e4>  // b.hs, b.nlast
   57824:	mov	x0, x23
   57828:	mov	x2, x20
   5782c:	mov	x1, x19
   57830:	bl	c1c0 <mpfr_reallocate_func@plt>
   57834:	mov	x23, x0
   57838:	cbz	x0, 57970 <__gmpfr_fpif_export@@Base+0x418>
   5783c:	mov	x0, x23
   57840:	sub	w3, w25, #0x1
   57844:	mov	x2, x25
   57848:	add	x1, sp, #0x58
   5784c:	str	x22, [sp, #88]
   57850:	strb	w3, [x0], #1
   57854:	bl	ba10 <memcpy@plt>
   57858:	cmp	x19, x20
   5785c:	csel	x19, x19, x20, cs  // cs = hs, nlast
   57860:	b	575e0 <__gmpfr_fpif_export@@Base+0x88>
   57864:	add	x26, x0, #0x2f
   57868:	cmp	x26, #0x5e
   5786c:	b.ls	578f0 <__gmpfr_fpif_export@@Base+0x398>  // b.plast
   57870:	mov	x1, #0xffffffffffffffd1    	// #-47
   57874:	cmp	x0, #0x0
   57878:	add	x2, x0, x1
   5787c:	sub	x1, x1, x0
   57880:	csel	x2, x2, x1, ge  // ge = tcont
   57884:	mov	x25, #0x0                   	// #0
   57888:	str	x2, [sp, #88]
   5788c:	lsl	x1, x2, #1
   57890:	mov	x22, x25
   57894:	lsr	x1, x1, #8
   57898:	add	x25, x25, #0x1
   5789c:	cbnz	x1, 57890 <__gmpfr_fpif_export@@Base+0x338>
   578a0:	cmp	x25, #0x10
   578a4:	b.hi	579a8 <__gmpfr_fpif_export@@Base+0x450>  // b.pmore
   578a8:	lsl	w1, w25, #3
   578ac:	mov	x3, #0x1                   	// #1
   578b0:	sub	w1, w1, #0x1
   578b4:	lsl	x1, x3, x1
   578b8:	tbnz	x0, #63, 57930 <__gmpfr_fpif_export@@Base+0x3d8>
   578bc:	add	x22, x22, #0x2
   578c0:	mov	x20, x23
   578c4:	cmp	x19, x22
   578c8:	b.cc	57618 <__gmpfr_fpif_export@@Base+0xc0>  // b.lo, b.ul, b.last
   578cc:	cbz	x25, 5793c <__gmpfr_fpif_export@@Base+0x3e4>
   578d0:	mov	x0, x20
   578d4:	add	w26, w25, #0x5e
   578d8:	and	w26, w26, #0xff
   578dc:	mov	x2, x25
   578e0:	add	x1, sp, #0x58
   578e4:	strb	w26, [x0], #1
   578e8:	bl	ba10 <memcpy@plt>
   578ec:	b	57664 <__gmpfr_fpif_export@@Base+0x10c>
   578f0:	str	x26, [sp, #88]
   578f4:	cbz	x19, 57610 <__gmpfr_fpif_export@@Base+0xb8>
   578f8:	mov	x22, #0x1                   	// #1
   578fc:	and	w26, w26, #0xff
   57900:	mov	x20, x23
   57904:	strb	w26, [x23]
   57908:	b	57664 <__gmpfr_fpif_export@@Base+0x10c>
   5790c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   57910:	mov	x20, x23
   57914:	cmp	x0, x1
   57918:	mov	x22, #0x1                   	// #1
   5791c:	b.ne	5764c <__gmpfr_fpif_export@@Base+0xf4>  // b.any
   57920:	mov	w0, #0x77                  	// #119
   57924:	mov	w26, #0x77                  	// #119
   57928:	strb	w0, [x20]
   5792c:	b	57664 <__gmpfr_fpif_export@@Base+0x10c>
   57930:	orr	x2, x2, x1
   57934:	str	x2, [sp, #88]
   57938:	b	578bc <__gmpfr_fpif_export@@Base+0x364>
   5793c:	mov	x23, x20
   57940:	ldr	x26, [sp, #88]
   57944:	b	578fc <__gmpfr_fpif_export@@Base+0x3a4>
   57948:	mov	w0, #0x78                  	// #120
   5794c:	mov	w26, #0x78                  	// #120
   57950:	strb	w0, [x20]
   57954:	b	57664 <__gmpfr_fpif_export@@Base+0x10c>
   57958:	mov	x0, x23
   5795c:	mov	x1, x19
   57960:	bl	cc20 <mpfr_free_func@plt>
   57964:	mov	w0, #0xffffffff            	// #-1
   57968:	ldp	x25, x26, [sp, #64]
   5796c:	b	577e4 <__gmpfr_fpif_export@@Base+0x28c>
   57970:	mov	x20, #0x0                   	// #0
   57974:	b	575e0 <__gmpfr_fpif_export@@Base+0x88>
   57978:	mov	x23, #0x0                   	// #0
   5797c:	b	577b4 <__gmpfr_fpif_export@@Base+0x25c>
   57980:	mov	x0, x20
   57984:	mov	x1, x19
   57988:	bl	cc20 <mpfr_free_func@plt>
   5798c:	mov	w0, #0xffffffff            	// #-1
   57990:	ldp	x25, x26, [sp, #64]
   57994:	b	577e4 <__gmpfr_fpif_export@@Base+0x28c>
   57998:	mov	w0, #0xffffffff            	// #-1
   5799c:	b	577e4 <__gmpfr_fpif_export@@Base+0x28c>
   579a0:	mov	w0, #0xffffffff            	// #-1
   579a4:	ret
   579a8:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   579ac:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   579b0:	add	x2, x2, #0xd28
   579b4:	add	x0, x0, #0xd40
   579b8:	mov	w1, #0x139                 	// #313
   579bc:	bl	cb40 <mpfr_assert_fail@plt>

00000000000579c0 <__gmpfr_fpif_import@@Base>:
   579c0:	cbz	x1, 57a6c <__gmpfr_fpif_import@@Base+0xac>
   579c4:	stp	x29, x30, [sp, #-80]!
   579c8:	mov	x2, #0x1                   	// #1
   579cc:	mov	x29, sp
   579d0:	stp	x21, x22, [sp, #32]
   579d4:	mov	x21, x1
   579d8:	mov	x22, x0
   579dc:	stp	x23, x24, [sp, #48]
   579e0:	add	x23, sp, #0x48
   579e4:	mov	x0, x23
   579e8:	mov	x1, x2
   579ec:	mov	x3, x21
   579f0:	bl	c660 <fread@plt>
   579f4:	cmp	x0, #0x1
   579f8:	b.eq	57a10 <__gmpfr_fpif_import@@Base+0x50>  // b.none
   579fc:	mov	w0, #0xffffffff            	// #-1
   57a00:	ldp	x21, x22, [sp, #32]
   57a04:	ldp	x23, x24, [sp, #48]
   57a08:	ldp	x29, x30, [sp], #80
   57a0c:	ret
   57a10:	stp	x19, x20, [sp, #16]
   57a14:	ldrb	w20, [sp, #72]
   57a18:	cmp	x20, #0x7
   57a1c:	b.ls	57a74 <__gmpfr_fpif_import@@Base+0xb4>  // b.plast
   57a20:	sub	x20, x20, #0x7
   57a24:	mov	x1, x20
   57a28:	mov	x0, x22
   57a2c:	bl	bed0 <mpfr_set_prec@plt>
   57a30:	mov	x2, #0x1                   	// #1
   57a34:	mov	x3, x21
   57a38:	mov	x0, x23
   57a3c:	mov	x1, x2
   57a40:	bl	c660 <fread@plt>
   57a44:	cmp	x0, #0x1
   57a48:	b.eq	57ad4 <__gmpfr_fpif_import@@Base+0x114>  // b.none
   57a4c:	mov	x0, x22
   57a50:	bl	bb50 <mpfr_set_nan@plt>
   57a54:	mov	w0, #0xffffffff            	// #-1
   57a58:	ldp	x19, x20, [sp, #16]
   57a5c:	ldp	x21, x22, [sp, #32]
   57a60:	ldp	x23, x24, [sp, #48]
   57a64:	ldp	x29, x30, [sp], #80
   57a68:	ret
   57a6c:	mov	w0, #0xffffffff            	// #-1
   57a70:	ret
   57a74:	add	x20, x20, #0x1
   57a78:	mov	x2, x0
   57a7c:	mov	x1, x20
   57a80:	mov	x3, x21
   57a84:	mov	x0, x23
   57a88:	bl	c660 <fread@plt>
   57a8c:	cmp	x0, #0x1
   57a90:	b.ne	57cb4 <__gmpfr_fpif_import@@Base+0x2f4>  // b.any
   57a94:	cmp	x20, #0x8
   57a98:	b.ne	57aa4 <__gmpfr_fpif_import@@Base+0xe4>  // b.any
   57a9c:	ldrsb	w0, [sp, #79]
   57aa0:	tbnz	w0, #31, 57cb4 <__gmpfr_fpif_import@@Base+0x2f4>
   57aa4:	mov	x2, x20
   57aa8:	mov	x1, x23
   57aac:	add	x0, sp, #0x40
   57ab0:	str	xzr, [sp, #64]
   57ab4:	bl	ba10 <memcpy@plt>
   57ab8:	ldr	x20, [sp, #64]
   57abc:	adds	x20, x20, #0xf9
   57ac0:	b.eq	57a54 <__gmpfr_fpif_import@@Base+0x94>  // b.none
   57ac4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   57ac8:	cmp	x20, x0
   57acc:	b.lt	57a24 <__gmpfr_fpif_import@@Base+0x64>  // b.tstop
   57ad0:	b	57a54 <__gmpfr_fpif_import@@Base+0x94>
   57ad4:	ldrb	w2, [sp, #72]
   57ad8:	and	x1, x2, #0x7f
   57adc:	and	w4, w2, #0x7f
   57ae0:	tst	x2, #0x80
   57ae4:	sub	x2, x1, #0x5f
   57ae8:	cneg	w3, w0, ne  // ne = any
   57aec:	str	w3, [x22, #8]
   57af0:	cmp	x2, #0x17
   57af4:	b.hi	57c5c <__gmpfr_fpif_import@@Base+0x29c>  // b.pmore
   57af8:	sub	x19, x1, #0x5e
   57afc:	cmp	x19, #0x8
   57b00:	b.hi	57a4c <__gmpfr_fpif_import@@Base+0x8c>  // b.pmore
   57b04:	mov	x2, x0
   57b08:	mov	x3, x21
   57b0c:	mov	x1, x19
   57b10:	mov	x0, x23
   57b14:	bl	c660 <fread@plt>
   57b18:	mov	x24, x0
   57b1c:	cmp	x0, #0x1
   57b20:	b.ne	57a4c <__gmpfr_fpif_import@@Base+0x8c>  // b.any
   57b24:	mov	x1, x23
   57b28:	mov	x2, x19
   57b2c:	add	x0, sp, #0x40
   57b30:	str	xzr, [sp, #64]
   57b34:	bl	ba10 <memcpy@plt>
   57b38:	lsl	w1, w19, #3
   57b3c:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   57b40:	ldr	x2, [sp, #64]
   57b44:	sub	w1, w1, #0x1
   57b48:	lsl	x1, x24, x1
   57b4c:	bic	x0, x2, x1
   57b50:	add	x0, x0, #0x2f
   57b54:	and	x1, x1, x2
   57b58:	cmp	x0, x3
   57b5c:	b.hi	57a4c <__gmpfr_fpif_import@@Base+0x8c>  // b.pmore
   57b60:	cmp	x1, #0x0
   57b64:	mrs	x2, tpidr_el0
   57b68:	cneg	x1, x0, ne  // ne = any
   57b6c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57b70:	ldr	x3, [x0, #2512]
   57b74:	add	x0, x0, #0x9d0
   57b78:	blr	x3
   57b7c:	ldr	x0, [x2, x0]
   57b80:	cmp	x0, x1
   57b84:	b.gt	57a4c <__gmpfr_fpif_import@@Base+0x8c>
   57b88:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57b8c:	ldr	x3, [x0, #2544]
   57b90:	add	x0, x0, #0x9f0
   57b94:	blr	x3
   57b98:	ldr	x0, [x2, x0]
   57b9c:	cmp	x1, x0
   57ba0:	b.gt	57a4c <__gmpfr_fpif_import@@Base+0x8c>
   57ba4:	add	x20, x20, #0x7
   57ba8:	str	x1, [x22, #16]
   57bac:	asr	x20, x20, #3
   57bb0:	mov	x0, x20
   57bb4:	bl	ccf0 <mpfr_allocate_func@plt>
   57bb8:	mov	x19, x0
   57bbc:	cbz	x0, 57a4c <__gmpfr_fpif_import@@Base+0x8c>
   57bc0:	mov	x3, x21
   57bc4:	mov	x1, x20
   57bc8:	mov	x2, #0x1                   	// #1
   57bcc:	bl	c660 <fread@plt>
   57bd0:	cmp	w0, #0x1
   57bd4:	b.ne	57d84 <__gmpfr_fpif_import@@Base+0x3c4>  // b.any
   57bd8:	ldr	x1, [x22]
   57bdc:	add	x1, x1, #0x7
   57be0:	cmp	x20, x1, asr #3
   57be4:	asr	x1, x1, #3
   57be8:	b.cc	57ca4 <__gmpfr_fpif_import@@Base+0x2e4>  // b.lo, b.ul, b.last
   57bec:	adrp	x0, 81000 <__gmpfr_l2b@@Base+0x200>
   57bf0:	ldr	x0, [x0, #4032]
   57bf4:	ldr	w3, [x0]
   57bf8:	asr	w3, w3, #3
   57bfc:	sxtw	x3, w3
   57c00:	udiv	x2, x1, x3
   57c04:	msub	x2, x2, x3, x1
   57c08:	cbnz	x2, 57cd0 <__gmpfr_fpif_import@@Base+0x310>
   57c0c:	cmp	x2, #0x0
   57c10:	cset	x0, ne  // ne = any
   57c14:	cmp	x1, x2
   57c18:	lsl	x0, x0, #3
   57c1c:	b.ls	57c3c <__gmpfr_fpif_import@@Base+0x27c>  // b.plast
   57c20:	ldr	x4, [x22, #24]
   57c24:	ldr	x5, [x19, x2]
   57c28:	add	x2, x2, x3
   57c2c:	str	x5, [x4, x0]
   57c30:	cmp	x1, x2
   57c34:	add	x0, x0, #0x8
   57c38:	b.hi	57c20 <__gmpfr_fpif_import@@Base+0x260>  // b.pmore
   57c3c:	mov	x0, x19
   57c40:	bl	cc20 <mpfr_free_func@plt>
   57c44:	mov	w0, #0x0                   	// #0
   57c48:	ldp	x19, x20, [sp, #16]
   57c4c:	ldp	x21, x22, [sp, #32]
   57c50:	ldp	x23, x24, [sp, #48]
   57c54:	ldp	x29, x30, [sp], #80
   57c58:	ret
   57c5c:	cmp	w4, #0x77
   57c60:	b.eq	57cbc <__gmpfr_fpif_import@@Base+0x2fc>  // b.none
   57c64:	cmp	x1, #0x78
   57c68:	b.eq	57d70 <__gmpfr_fpif_import@@Base+0x3b0>  // b.none
   57c6c:	cmp	x1, #0x79
   57c70:	b.eq	57d58 <__gmpfr_fpif_import@@Base+0x398>  // b.none
   57c74:	cmp	x1, #0x5e
   57c78:	b.gt	57a4c <__gmpfr_fpif_import@@Base+0x8c>
   57c7c:	mrs	x2, tpidr_el0
   57c80:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57c84:	ldr	x3, [x0, #2512]
   57c88:	add	x0, x0, #0x9d0
   57c8c:	blr	x3
   57c90:	sub	x1, x1, #0x2f
   57c94:	ldr	x0, [x2, x0]
   57c98:	cmp	x1, x0
   57c9c:	b.lt	57a4c <__gmpfr_fpif_import@@Base+0x8c>  // b.tstop
   57ca0:	b	57b88 <__gmpfr_fpif_import@@Base+0x1c8>
   57ca4:	mov	x1, #0x0                   	// #0
   57ca8:	mov	x0, x19
   57cac:	bl	cc20 <mpfr_free_func@plt>
   57cb0:	b	57a4c <__gmpfr_fpif_import@@Base+0x8c>
   57cb4:	ldp	x19, x20, [sp, #16]
   57cb8:	b	579fc <__gmpfr_fpif_import@@Base+0x3c>
   57cbc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   57cc0:	mov	w0, #0x0                   	// #0
   57cc4:	ldp	x19, x20, [sp, #16]
   57cc8:	str	x1, [x22, #16]
   57ccc:	b	57a00 <__gmpfr_fpif_import@@Base+0x40>
   57cd0:	ldr	x0, [x22, #24]
   57cd4:	cmp	x2, #0x1
   57cd8:	str	xzr, [x0]
   57cdc:	ldr	x0, [x22, #24]
   57ce0:	ldrb	w4, [x19]
   57ce4:	strb	w4, [x0, #7]
   57ce8:	b.eq	57c0c <__gmpfr_fpif_import@@Base+0x24c>  // b.none
   57cec:	ldrb	w4, [x19, #1]
   57cf0:	cmp	x2, #0x2
   57cf4:	strb	w4, [x0, #6]
   57cf8:	b.eq	57c0c <__gmpfr_fpif_import@@Base+0x24c>  // b.none
   57cfc:	ldrb	w4, [x19, #2]
   57d00:	cmp	x2, #0x3
   57d04:	strb	w4, [x0, #5]
   57d08:	b.eq	57c0c <__gmpfr_fpif_import@@Base+0x24c>  // b.none
   57d0c:	ldrb	w4, [x19, #3]
   57d10:	cmp	x2, #0x4
   57d14:	strb	w4, [x0, #4]
   57d18:	b.eq	57c0c <__gmpfr_fpif_import@@Base+0x24c>  // b.none
   57d1c:	ldrb	w4, [x19, #4]
   57d20:	cmp	x2, #0x5
   57d24:	strb	w4, [x0, #3]
   57d28:	b.eq	57c0c <__gmpfr_fpif_import@@Base+0x24c>  // b.none
   57d2c:	ldrb	w4, [x19, #5]
   57d30:	cmp	x2, #0x6
   57d34:	strb	w4, [x0, #2]
   57d38:	b.eq	57c0c <__gmpfr_fpif_import@@Base+0x24c>  // b.none
   57d3c:	ldrb	w4, [x19, #6]
   57d40:	cmp	x2, #0x8
   57d44:	strb	w4, [x0, #1]
   57d48:	b.ne	57c0c <__gmpfr_fpif_import@@Base+0x24c>  // b.any
   57d4c:	ldrb	w4, [x19, #7]
   57d50:	strb	w4, [x0]
   57d54:	b	57c0c <__gmpfr_fpif_import@@Base+0x24c>
   57d58:	mov	x1, #0x2                   	// #2
   57d5c:	mov	w0, #0x0                   	// #0
   57d60:	movk	x1, #0x8000, lsl #48
   57d64:	ldp	x19, x20, [sp, #16]
   57d68:	str	x1, [x22, #16]
   57d6c:	b	57a00 <__gmpfr_fpif_import@@Base+0x40>
   57d70:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   57d74:	mov	w0, #0x0                   	// #0
   57d78:	ldp	x19, x20, [sp, #16]
   57d7c:	str	x1, [x22, #16]
   57d80:	b	57a00 <__gmpfr_fpif_import@@Base+0x40>
   57d84:	mov	x1, x20
   57d88:	b	57ca8 <__gmpfr_fpif_import@@Base+0x2e8>
   57d8c:	nop

0000000000057d90 <mpfr_round_nearest_away_begin@@Base>:
   57d90:	stp	x29, x30, [sp, #-112]!
   57d94:	mov	x29, sp
   57d98:	stp	x21, x22, [sp, #32]
   57d9c:	mrs	x21, tpidr_el0
   57da0:	stp	x19, x20, [sp, #16]
   57da4:	mov	x19, x0
   57da8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57dac:	ldr	x1, [x0, #2512]
   57db0:	add	x0, x0, #0x9d0
   57db4:	blr	x1
   57db8:	ldr	x22, [x21, x0]
   57dbc:	stp	x23, x24, [sp, #48]
   57dc0:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   57dc4:	str	x25, [sp, #64]
   57dc8:	add	x20, x21, x0
   57dcc:	cmp	x22, x1
   57dd0:	b.le	57ecc <mpfr_round_nearest_away_begin@@Base+0x13c>
   57dd4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57dd8:	ldr	x1, [x0, #2576]
   57ddc:	add	x0, x0, #0xa10
   57de0:	blr	x1
   57de4:	ldr	w25, [x21, x0]
   57de8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57dec:	ldr	x1, [x0, #2544]
   57df0:	add	x0, x0, #0x9f0
   57df4:	blr	x1
   57df8:	add	x3, x21, x0
   57dfc:	ldr	x1, [x19]
   57e00:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   57e04:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   57e08:	ldr	x24, [x21, x0]
   57e0c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57e10:	ldr	x5, [x0, #2512]
   57e14:	add	x0, x0, #0x9d0
   57e18:	blr	x5
   57e1c:	str	x4, [x3]
   57e20:	add	x23, x1, #0x1
   57e24:	str	x2, [x21, x0]
   57e28:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   57e2c:	cmp	x23, x0
   57e30:	b.ge	57eec <mpfr_round_nearest_away_begin@@Base+0x15c>  // b.tcont
   57e34:	cmp	x1, #0x0
   57e38:	add	x20, x1, #0x3f
   57e3c:	csel	x20, x20, x1, lt  // lt = tstop
   57e40:	asr	x20, x20, #6
   57e44:	add	x0, x20, #0x9
   57e48:	add	x20, x20, #0x1
   57e4c:	lsl	x0, x0, #3
   57e50:	bl	ccf0 <mpfr_allocate_func@plt>
   57e54:	ldp	x2, x4, [x19, #16]
   57e58:	mov	x5, #0x2                   	// #2
   57e5c:	ldr	w3, [x19, #8]
   57e60:	mov	w6, #0x1                   	// #1
   57e64:	ldr	x1, [x19]
   57e68:	stp	x20, x4, [x0]
   57e6c:	add	x4, x0, #0x40
   57e70:	movk	x5, #0x8000, lsl #48
   57e74:	str	x2, [x0, #16]
   57e78:	str	w3, [x0, #24]
   57e7c:	mov	w2, #0x0                   	// #0
   57e80:	str	x1, [x0, #32]
   57e84:	mov	x1, x19
   57e88:	str	w25, [x0, #40]
   57e8c:	stp	x22, x24, [x0, #48]
   57e90:	add	x0, sp, #0x50
   57e94:	str	x23, [sp, #80]
   57e98:	str	w6, [sp, #88]
   57e9c:	stp	x5, x4, [sp, #96]
   57ea0:	bl	c6a0 <mpfr_set4@plt>
   57ea4:	ldp	x0, x1, [sp, #80]
   57ea8:	stp	x0, x1, [x19]
   57eac:	ldp	x0, x1, [sp, #96]
   57eb0:	stp	x0, x1, [x19, #16]
   57eb4:	ldp	x19, x20, [sp, #16]
   57eb8:	ldp	x21, x22, [sp, #32]
   57ebc:	ldp	x23, x24, [sp, #48]
   57ec0:	ldr	x25, [sp, #64]
   57ec4:	ldp	x29, x30, [sp], #112
   57ec8:	ret
   57ecc:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   57ed0:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   57ed4:	add	x2, x2, #0xd48
   57ed8:	add	x0, x0, #0xda8
   57edc:	mov	w1, #0x4d                  	// #77
   57ee0:	bl	cb40 <mpfr_assert_fail@plt>
   57ee4:	ldr	x22, [x20]
   57ee8:	b	57dd4 <mpfr_round_nearest_away_begin@@Base+0x44>
   57eec:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   57ef0:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   57ef4:	add	x2, x2, #0xdb0
   57ef8:	add	x0, x0, #0xda8
   57efc:	mov	w1, #0x54                  	// #84
   57f00:	bl	cb40 <mpfr_assert_fail@plt>
   57f04:	nop

0000000000057f08 <mpfr_round_nearest_away_end@@Base>:
   57f08:	stp	x29, x30, [sp, #-144]!
   57f0c:	mov	x7, #0x8000000000000003    	// #-9223372036854775805
   57f10:	mov	x29, sp
   57f14:	ldp	x3, x2, [x0, #16]
   57f18:	stp	x19, x20, [sp, #16]
   57f1c:	mov	w20, w1
   57f20:	ldp	x4, x5, [x0]
   57f24:	stp	x21, x22, [sp, #32]
   57f28:	mov	x19, x0
   57f2c:	ldur	w8, [x2, #-40]
   57f30:	cmp	x7, x3
   57f34:	stp	x23, x24, [sp, #48]
   57f38:	add	x1, sp, #0x70
   57f3c:	ldur	w24, [x2, #-24]
   57f40:	stp	x25, x26, [sp, #64]
   57f44:	sub	x23, x2, #0x40
   57f48:	stp	x4, x5, [sp, #112]
   57f4c:	ldp	x22, x5, [x2, #-64]
   57f50:	ldur	x6, [x2, #-48]
   57f54:	ldur	x4, [x2, #-32]
   57f58:	ldp	x26, x25, [x2, #-16]
   57f5c:	str	x27, [sp, #80]
   57f60:	str	x4, [x0]
   57f64:	str	w8, [x0, #8]
   57f68:	stp	x6, x5, [x0, #16]
   57f6c:	stp	x3, x2, [sp, #128]
   57f70:	ldr	w3, [sp, #120]
   57f74:	b.ge	58114 <mpfr_round_nearest_away_end@@Base+0x20c>  // b.tcont
   57f78:	ldr	x2, [x2]
   57f7c:	mvn	w4, w4
   57f80:	lsr	x4, x2, x4
   57f84:	tbz	w4, #0, 58114 <mpfr_round_nearest_away_end@@Base+0x20c>
   57f88:	cmp	w20, #0x0
   57f8c:	cbz	w20, 58134 <mpfr_round_nearest_away_end@@Base+0x22c>
   57f90:	cset	w2, gt
   57f94:	add	w2, w2, #0x2
   57f98:	bl	c6a0 <mpfr_set4@plt>
   57f9c:	mov	w20, w0
   57fa0:	mrs	x21, tpidr_el0
   57fa4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57fa8:	ldr	x1, [x0, #2576]
   57fac:	add	x0, x0, #0xa10
   57fb0:	blr	x1
   57fb4:	add	x2, x21, x0
   57fb8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57fbc:	ldr	x1, [x0, #2512]
   57fc0:	add	x0, x0, #0x9d0
   57fc4:	blr	x1
   57fc8:	add	x27, x21, x0
   57fcc:	str	x26, [x21, x0]
   57fd0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   57fd4:	ldr	x1, [x0, #2544]
   57fd8:	add	x0, x0, #0x9f0
   57fdc:	blr	x1
   57fe0:	ldr	w1, [x2]
   57fe4:	str	x25, [x21, x0]
   57fe8:	orr	w1, w1, w24
   57fec:	str	w1, [x2]
   57ff0:	cbnz	w20, 58050 <mpfr_round_nearest_away_end@@Base+0x148>
   57ff4:	ldr	x0, [x19, #16]
   57ff8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   57ffc:	cmp	x0, x1
   58000:	b.ge	58120 <mpfr_round_nearest_away_end@@Base+0x218>  // b.tcont
   58004:	mov	x2, #0x2                   	// #2
   58008:	mov	x1, #0xffffffffffffffff    	// #-1
   5800c:	movk	x2, #0x8000, lsl #48
   58010:	cmp	x0, x2
   58014:	b.eq	58150 <mpfr_round_nearest_away_end@@Base+0x248>  // b.none
   58018:	sub	x2, x26, #0x2
   5801c:	mov	x0, x19
   58020:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   58024:	cbnz	w0, 58050 <mpfr_round_nearest_away_end@@Base+0x148>
   58028:	ldr	x0, [x19, #16]
   5802c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   58030:	cmp	x0, x1
   58034:	b.ge	58144 <mpfr_round_nearest_away_end@@Base+0x23c>  // b.tcont
   58038:	mov	x1, #0x2                   	// #2
   5803c:	mov	w20, #0x0                   	// #0
   58040:	movk	x1, #0x8000, lsl #48
   58044:	cmp	x0, x1
   58048:	b.eq	58164 <mpfr_round_nearest_away_end@@Base+0x25c>  // b.none
   5804c:	nop
   58050:	add	x1, x22, #0x8
   58054:	mov	x0, x23
   58058:	lsl	x1, x1, #3
   5805c:	bl	cc20 <mpfr_free_func@plt>
   58060:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   58064:	ldr	x1, [x0, #2512]
   58068:	add	x0, x0, #0x9d0
   5806c:	blr	x1
   58070:	ldr	x0, [x21, x0]
   58074:	ldr	x1, [x19, #16]
   58078:	cmp	x1, x0
   5807c:	b.lt	5809c <mpfr_round_nearest_away_end@@Base+0x194>  // b.tstop
   58080:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   58084:	ldr	x2, [x0, #2544]
   58088:	add	x0, x0, #0x9f0
   5808c:	blr	x2
   58090:	ldr	x0, [x21, x0]
   58094:	cmp	x1, x0
   58098:	b.le	580d0 <mpfr_round_nearest_away_end@@Base+0x1c8>
   5809c:	mov	w1, w20
   580a0:	mov	x0, x19
   580a4:	mov	w2, #0x0                   	// #0
   580a8:	bl	cb30 <mpfr_check_range@plt>
   580ac:	mov	w20, w0
   580b0:	mov	w0, w20
   580b4:	ldp	x19, x20, [sp, #16]
   580b8:	ldp	x21, x22, [sp, #32]
   580bc:	ldp	x23, x24, [sp, #48]
   580c0:	ldp	x25, x26, [sp, #64]
   580c4:	ldr	x27, [sp, #80]
   580c8:	ldp	x29, x30, [sp], #144
   580cc:	ret
   580d0:	cbz	w20, 580b0 <mpfr_round_nearest_away_end@@Base+0x1a8>
   580d4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   580d8:	ldr	x1, [x0, #2576]
   580dc:	add	x0, x0, #0xa10
   580e0:	blr	x1
   580e4:	add	x0, x21, x0
   580e8:	ldp	x21, x22, [sp, #32]
   580ec:	ldr	w1, [x0]
   580f0:	ldp	x23, x24, [sp, #48]
   580f4:	orr	w1, w1, #0x8
   580f8:	str	w1, [x0]
   580fc:	mov	w0, w20
   58100:	ldp	x19, x20, [sp, #16]
   58104:	ldp	x25, x26, [sp, #64]
   58108:	ldr	x27, [sp, #80]
   5810c:	ldp	x29, x30, [sp], #144
   58110:	ret
   58114:	mov	w2, #0x0                   	// #0
   58118:	bl	c6a0 <mpfr_set4@plt>
   5811c:	b	57fa0 <mpfr_round_nearest_away_end@@Base+0x98>
   58120:	ldr	w0, [x19, #8]
   58124:	mov	x1, #0xffffffffffffffff    	// #-1
   58128:	cmp	w0, #0x0
   5812c:	cneg	x1, x1, gt
   58130:	b	58018 <mpfr_round_nearest_away_end@@Base+0x110>
   58134:	mov	w2, #0x4                   	// #4
   58138:	bl	c6a0 <mpfr_set4@plt>
   5813c:	mov	w20, w0
   58140:	b	57fa0 <mpfr_round_nearest_away_end@@Base+0x98>
   58144:	ldr	w20, [x19, #8]
   58148:	neg	w20, w20
   5814c:	b	58050 <mpfr_round_nearest_away_end@@Base+0x148>
   58150:	str	x1, [sp, #104]
   58154:	bl	bc90 <mpfr_set_erangeflag@plt>
   58158:	ldr	x26, [x27]
   5815c:	ldr	x1, [sp, #104]
   58160:	b	58018 <mpfr_round_nearest_away_end@@Base+0x110>
   58164:	bl	bc90 <mpfr_set_erangeflag@plt>
   58168:	b	58050 <mpfr_round_nearest_away_end@@Base+0x148>
   5816c:	nop

0000000000058170 <mpfr_nrandom@@Base>:
   58170:	stp	x29, x30, [sp, #-208]!
   58174:	mov	x29, sp
   58178:	stp	x25, x26, [sp, #64]
   5817c:	add	x26, sp, #0x70
   58180:	stp	x19, x20, [sp, #16]
   58184:	add	x19, sp, #0x90
   58188:	add	x20, sp, #0xb0
   5818c:	stp	x21, x22, [sp, #32]
   58190:	mov	x21, x1
   58194:	stp	x23, x24, [sp, #48]
   58198:	stp	x27, x28, [sp, #80]
   5819c:	str	x0, [sp, #96]
   581a0:	mov	x0, x26
   581a4:	str	w2, [sp, #108]
   581a8:	bl	c150 <mpfr_random_deviate_init@plt>
   581ac:	mov	x0, x19
   581b0:	bl	c150 <mpfr_random_deviate_init@plt>
   581b4:	mov	x0, x20
   581b8:	bl	c150 <mpfr_random_deviate_init@plt>
   581bc:	nop
   581c0:	mov	x22, #0x0                   	// #0
   581c4:	nop
   581c8:	mov	x0, x19
   581cc:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   581d0:	mov	x2, x21
   581d4:	mov	x0, x19
   581d8:	mov	x1, #0x1                   	// #1
   581dc:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   581e0:	cbz	w0, 58204 <mpfr_nrandom@@Base+0x94>
   581e4:	b	582a4 <mpfr_nrandom@@Base+0x134>
   581e8:	mov	x0, x19
   581ec:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   581f0:	mov	x2, x21
   581f4:	mov	x1, x20
   581f8:	mov	x0, x19
   581fc:	bl	ca30 <mpfr_random_deviate_less@plt>
   58200:	cbz	w0, 582a4 <mpfr_nrandom@@Base+0x134>
   58204:	mov	x0, x20
   58208:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   5820c:	mov	x2, x21
   58210:	mov	x1, x19
   58214:	mov	x0, x20
   58218:	bl	ca30 <mpfr_random_deviate_less@plt>
   5821c:	cbnz	w0, 581e8 <mpfr_nrandom@@Base+0x78>
   58220:	sub	x24, x22, #0x1
   58224:	cbz	x22, 582d0 <mpfr_nrandom@@Base+0x160>
   58228:	sub	x27, x22, #0x2
   5822c:	mov	x25, x24
   58230:	mov	x23, x27
   58234:	cbz	x24, 582c4 <mpfr_nrandom@@Base+0x154>
   58238:	mov	x0, x19
   5823c:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58240:	mov	x2, x21
   58244:	mov	x0, x19
   58248:	mov	x1, #0x1                   	// #1
   5824c:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   58250:	cbz	w0, 58274 <mpfr_nrandom@@Base+0x104>
   58254:	b	58294 <mpfr_nrandom@@Base+0x124>
   58258:	mov	x0, x19
   5825c:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58260:	mov	x2, x21
   58264:	mov	x1, x20
   58268:	mov	x0, x19
   5826c:	bl	ca30 <mpfr_random_deviate_less@plt>
   58270:	cbz	w0, 58294 <mpfr_nrandom@@Base+0x124>
   58274:	mov	x0, x20
   58278:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   5827c:	mov	x2, x21
   58280:	mov	x1, x19
   58284:	mov	x0, x20
   58288:	bl	ca30 <mpfr_random_deviate_less@plt>
   5828c:	cbnz	w0, 58258 <mpfr_nrandom@@Base+0xe8>
   58290:	b	581c0 <mpfr_nrandom@@Base+0x50>
   58294:	sub	x0, x23, #0x1
   58298:	cbz	x23, 582c4 <mpfr_nrandom@@Base+0x154>
   5829c:	mov	x23, x0
   582a0:	b	58238 <mpfr_nrandom@@Base+0xc8>
   582a4:	adds	x22, x22, #0x1
   582a8:	b.ne	581c8 <mpfr_nrandom@@Base+0x58>  // b.any
   582ac:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   582b0:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   582b4:	add	x2, x2, #0xde8
   582b8:	add	x0, x0, #0xdf8
   582bc:	mov	w1, #0x5b                  	// #91
   582c0:	bl	cb40 <mpfr_assert_fail@plt>
   582c4:	sub	x25, x25, #0x1
   582c8:	cmn	x25, #0x1
   582cc:	b.ne	58230 <mpfr_nrandom@@Base+0xc0>  // b.any
   582d0:	add	x27, x22, #0x1
   582d4:	mov	x24, #0x0                   	// #0
   582d8:	mov	x0, x26
   582dc:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   582e0:	lsl	x27, x27, #1
   582e4:	nop
   582e8:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   582ec:	cmp	x22, x0
   582f0:	b.hi	5846c <mpfr_nrandom@@Base+0x2fc>  // b.pmore
   582f4:	cbz	x22, 583e0 <mpfr_nrandom@@Base+0x270>
   582f8:	mov	x0, x20
   582fc:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58300:	mov	x1, x26
   58304:	mov	w23, #0x0                   	// #0
   58308:	b	5834c <mpfr_nrandom@@Base+0x1dc>
   5830c:	cmp	x0, #0x1
   58310:	b.ne	58330 <mpfr_nrandom@@Base+0x1c0>  // b.any
   58314:	mov	x0, x19
   58318:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   5831c:	mov	x2, x21
   58320:	mov	x1, x26
   58324:	mov	x0, x19
   58328:	bl	ca30 <mpfr_random_deviate_less@plt>
   5832c:	cbz	w0, 58370 <mpfr_nrandom@@Base+0x200>
   58330:	mov	x1, x20
   58334:	mov	x0, x19
   58338:	bl	c590 <mpfr_random_deviate_swap@plt>
   5833c:	add	w23, w23, #0x1
   58340:	mov	x0, x20
   58344:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58348:	mov	x1, x19
   5834c:	mov	x2, x21
   58350:	mov	x0, x20
   58354:	bl	ca30 <mpfr_random_deviate_less@plt>
   58358:	cbz	w0, 58370 <mpfr_nrandom@@Base+0x200>
   5835c:	mov	x1, x27
   58360:	mov	x0, x21
   58364:	bl	c2d0 <__gmp_urandomm_ui@plt>
   58368:	cbnz	x0, 5830c <mpfr_nrandom@@Base+0x19c>
   5836c:	nop
   58370:	tbnz	w23, #0, 581c0 <mpfr_nrandom@@Base+0x50>
   58374:	add	x24, x24, #0x1
   58378:	cmp	x24, x22
   5837c:	b.ls	582e8 <mpfr_nrandom@@Base+0x178>  // b.plast
   58380:	mov	x0, x20
   58384:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   58388:	mov	x0, x19
   5838c:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   58390:	mov	x0, x21
   58394:	mov	x1, #0x1                   	// #1
   58398:	bl	cb10 <__gmp_urandomb_ui@plt>
   5839c:	ldr	w5, [sp, #108]
   583a0:	mov	x4, x21
   583a4:	ldr	x3, [sp, #96]
   583a8:	mov	x2, x26
   583ac:	mov	x1, x22
   583b0:	bl	baa0 <mpfr_random_deviate_value@plt>
   583b4:	mov	w19, w0
   583b8:	mov	x0, x26
   583bc:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   583c0:	mov	w0, w19
   583c4:	ldp	x19, x20, [sp, #16]
   583c8:	ldp	x21, x22, [sp, #32]
   583cc:	ldp	x23, x24, [sp, #48]
   583d0:	ldp	x25, x26, [sp, #64]
   583d4:	ldp	x27, x28, [sp, #80]
   583d8:	ldp	x29, x30, [sp], #208
   583dc:	ret
   583e0:	mov	x1, x27
   583e4:	mov	x0, x21
   583e8:	mov	w25, #0x1                   	// #1
   583ec:	bl	c2d0 <__gmp_urandomm_ui@plt>
   583f0:	mov	w23, #0x0                   	// #0
   583f4:	mov	x28, x0
   583f8:	cbz	x0, 58370 <mpfr_nrandom@@Base+0x200>
   583fc:	mov	x0, x20
   58400:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58404:	cmp	w25, #0x0
   58408:	mov	x2, x21
   5840c:	csel	x1, x19, x26, eq  // eq = none
   58410:	mov	x0, x20
   58414:	bl	ca30 <mpfr_random_deviate_less@plt>
   58418:	cbz	w0, 58370 <mpfr_nrandom@@Base+0x200>
   5841c:	cmp	x28, #0x1
   58420:	b.ne	58440 <mpfr_nrandom@@Base+0x2d0>  // b.any
   58424:	mov	x0, x19
   58428:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   5842c:	mov	x2, x21
   58430:	mov	x1, x26
   58434:	mov	x0, x19
   58438:	bl	ca30 <mpfr_random_deviate_less@plt>
   5843c:	cbz	w0, 58370 <mpfr_nrandom@@Base+0x200>
   58440:	mov	x1, x20
   58444:	mov	x0, x19
   58448:	bl	c590 <mpfr_random_deviate_swap@plt>
   5844c:	add	w23, w23, #0x1
   58450:	mov	x1, x27
   58454:	mov	x0, x21
   58458:	mov	w25, #0x0                   	// #0
   5845c:	bl	c2d0 <__gmp_urandomm_ui@plt>
   58460:	mov	x28, x0
   58464:	cbz	x0, 58370 <mpfr_nrandom@@Base+0x200>
   58468:	b	583fc <mpfr_nrandom@@Base+0x28c>
   5846c:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   58470:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   58474:	add	x2, x2, #0xe08
   58478:	add	x0, x0, #0xdf8
   5847c:	mov	w1, #0x8b                  	// #139
   58480:	bl	cb40 <mpfr_assert_fail@plt>
   58484:	nop
   58488:	stp	x29, x30, [sp, #-64]!
   5848c:	cmn	x1, #0x21
   58490:	mov	x29, sp
   58494:	stp	x19, x20, [sp, #16]
   58498:	stp	x21, x22, [sp, #32]
   5849c:	b.hi	58610 <mpfr_nrandom@@Base+0x4a0>  // b.pmore
   584a0:	mov	x22, x2
   584a4:	mov	x20, x1
   584a8:	ldr	x2, [x0]
   584ac:	mov	x19, x0
   584b0:	cmp	x2, x1
   584b4:	b.cs	584fc <mpfr_nrandom@@Base+0x38c>  // b.hs, b.nlast
   584b8:	mov	x21, x3
   584bc:	cbz	x2, 5850c <mpfr_nrandom@@Base+0x39c>
   584c0:	cbz	x3, 58580 <mpfr_nrandom@@Base+0x410>
   584c4:	add	x20, x20, #0x1f
   584c8:	cmp	x2, #0x20
   584cc:	and	x20, x20, #0xffffffffffffffe0
   584d0:	mov	x0, x21
   584d4:	sub	x20, x20, x2
   584d8:	b.eq	58538 <mpfr_nrandom@@Base+0x3c8>  // b.none
   584dc:	mov	x2, x20
   584e0:	mov	x1, x22
   584e4:	bl	cd00 <__gmpz_urandomb@plt>
   584e8:	ldr	x2, [x19]
   584ec:	cmp	x2, #0x20
   584f0:	b.hi	58554 <mpfr_nrandom@@Base+0x3e4>  // b.pmore
   584f4:	add	x2, x2, x20
   584f8:	str	x2, [x19]
   584fc:	ldp	x19, x20, [sp, #16]
   58500:	ldp	x21, x22, [sp, #32]
   58504:	ldp	x29, x30, [sp], #64
   58508:	ret
   5850c:	mov	x1, #0x20                  	// #32
   58510:	mov	x0, x22
   58514:	bl	cb10 <__gmp_urandomb_ui@plt>
   58518:	mov	x1, #0x20                  	// #32
   5851c:	stp	x1, x0, [x19]
   58520:	cmp	x20, x1
   58524:	b.ls	584fc <mpfr_nrandom@@Base+0x38c>  // b.plast
   58528:	cbz	x21, 58580 <mpfr_nrandom@@Base+0x410>
   5852c:	add	x20, x20, #0x1f
   58530:	and	x2, x20, #0xffffffffffffffe0
   58534:	sub	x20, x2, #0x20
   58538:	mov	x2, x20
   5853c:	add	x0, x19, #0x10
   58540:	mov	x1, x22
   58544:	bl	cd00 <__gmpz_urandomb@plt>
   58548:	ldr	x2, [x19]
   5854c:	cmp	x2, #0x20
   58550:	b.ls	584f4 <mpfr_nrandom@@Base+0x384>  // b.plast
   58554:	add	x22, x19, #0x10
   58558:	mov	x2, x20
   5855c:	mov	x1, x22
   58560:	mov	x0, x22
   58564:	bl	c200 <__gmpz_mul_2exp@plt>
   58568:	mov	x2, x21
   5856c:	mov	x1, x22
   58570:	mov	x0, x22
   58574:	bl	c9c0 <__gmpz_add@plt>
   58578:	ldr	x2, [x19]
   5857c:	b	584f4 <mpfr_nrandom@@Base+0x384>
   58580:	str	x23, [sp, #48]
   58584:	add	x23, x19, #0x10
   58588:	b	585c0 <mpfr_nrandom@@Base+0x450>
   5858c:	mov	x1, x23
   58590:	mov	x0, x23
   58594:	mov	x2, #0x20                  	// #32
   58598:	bl	c200 <__gmpz_mul_2exp@plt>
   5859c:	mov	x0, x23
   585a0:	mov	x2, x21
   585a4:	mov	x1, x23
   585a8:	bl	c360 <__gmpz_add_ui@plt>
   585ac:	ldr	x0, [x19]
   585b0:	add	x0, x0, #0x20
   585b4:	str	x0, [x19]
   585b8:	cmp	x20, x0
   585bc:	b.ls	585fc <mpfr_nrandom@@Base+0x48c>  // b.plast
   585c0:	mov	x1, #0x20                  	// #32
   585c4:	mov	x0, x22
   585c8:	bl	cb10 <__gmp_urandomb_ui@plt>
   585cc:	mov	x21, x0
   585d0:	ldr	x1, [x19]
   585d4:	cmp	x1, #0x20
   585d8:	b.ne	5858c <mpfr_nrandom@@Base+0x41c>  // b.any
   585dc:	mov	x1, x0
   585e0:	mov	x0, x23
   585e4:	bl	bcb0 <__gmpz_set_ui@plt>
   585e8:	ldr	x0, [x19]
   585ec:	add	x0, x0, #0x20
   585f0:	str	x0, [x19]
   585f4:	cmp	x20, x0
   585f8:	b.hi	585c0 <mpfr_nrandom@@Base+0x450>  // b.pmore
   585fc:	ldp	x19, x20, [sp, #16]
   58600:	ldp	x21, x22, [sp, #32]
   58604:	ldr	x23, [sp, #48]
   58608:	ldp	x29, x30, [sp], #64
   5860c:	ret
   58610:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   58614:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   58618:	add	x2, x2, #0xe28
   5861c:	add	x0, x0, #0xe58
   58620:	mov	w1, #0x82                  	// #130
   58624:	str	x23, [sp, #48]
   58628:	bl	cb40 <mpfr_assert_fail@plt>
   5862c:	nop

0000000000058630 <mpfr_random_deviate_init@@Base>:
   58630:	stp	x29, x30, [sp, #-32]!
   58634:	mov	x29, sp
   58638:	str	x19, [sp, #16]
   5863c:	mov	x19, x0
   58640:	add	x0, x0, #0x10
   58644:	bl	bf90 <mpfr_mpz_init@plt>
   58648:	str	xzr, [x19]
   5864c:	ldr	x19, [sp, #16]
   58650:	ldp	x29, x30, [sp], #32
   58654:	ret

0000000000058658 <mpfr_random_deviate_reset@@Base>:
   58658:	str	xzr, [x0]
   5865c:	ret

0000000000058660 <mpfr_random_deviate_clear@@Base>:
   58660:	add	x0, x0, #0x10
   58664:	b	c170 <mpfr_mpz_clear@plt>

0000000000058668 <mpfr_random_deviate_swap@@Base>:
   58668:	mov	x2, x1
   5866c:	mov	x3, x0
   58670:	add	x1, x1, #0x10
   58674:	add	x0, x0, #0x10
   58678:	ldr	x5, [x2]
   5867c:	ldr	x4, [x3]
   58680:	str	x5, [x3]
   58684:	str	x4, [x2]
   58688:	ldr	x5, [x2, #8]
   5868c:	ldr	x4, [x3, #8]
   58690:	str	x5, [x3, #8]
   58694:	str	x4, [x2, #8]
   58698:	b	c0e0 <__gmpz_swap@plt>
   5869c:	nop

00000000000586a0 <mpfr_random_deviate_tstbit@@Base>:
   586a0:	cbnz	x1, 586ac <mpfr_random_deviate_tstbit@@Base+0xc>
   586a4:	mov	w0, #0x0                   	// #0
   586a8:	ret
   586ac:	stp	x29, x30, [sp, #-64]!
   586b0:	cmn	x1, #0x21
   586b4:	mov	x29, sp
   586b8:	stp	x19, x20, [sp, #16]
   586bc:	mov	x20, x1
   586c0:	b.hi	587c4 <mpfr_random_deviate_tstbit@@Base+0x124>  // b.pmore
   586c4:	ldr	x3, [x0]
   586c8:	mov	x19, x0
   586cc:	cmp	x1, x3
   586d0:	b.ls	58764 <mpfr_random_deviate_tstbit@@Base+0xc4>  // b.plast
   586d4:	str	x23, [sp, #48]
   586d8:	mov	x23, x2
   586dc:	cbz	x3, 587a0 <mpfr_random_deviate_tstbit@@Base+0x100>
   586e0:	stp	x21, x22, [sp, #32]
   586e4:	add	x21, x19, #0x10
   586e8:	b	58720 <mpfr_random_deviate_tstbit@@Base+0x80>
   586ec:	mov	x1, x21
   586f0:	mov	x0, x21
   586f4:	mov	x2, #0x20                  	// #32
   586f8:	bl	c200 <__gmpz_mul_2exp@plt>
   586fc:	mov	x2, x22
   58700:	mov	x1, x21
   58704:	mov	x0, x21
   58708:	bl	c360 <__gmpz_add_ui@plt>
   5870c:	ldr	x3, [x19]
   58710:	add	x3, x3, #0x20
   58714:	str	x3, [x19]
   58718:	cmp	x20, x3
   5871c:	b.ls	5875c <mpfr_random_deviate_tstbit@@Base+0xbc>  // b.plast
   58720:	mov	x1, #0x20                  	// #32
   58724:	mov	x0, x23
   58728:	bl	cb10 <__gmp_urandomb_ui@plt>
   5872c:	mov	x22, x0
   58730:	ldr	x1, [x19]
   58734:	cmp	x1, #0x20
   58738:	b.ne	586ec <mpfr_random_deviate_tstbit@@Base+0x4c>  // b.any
   5873c:	mov	x1, x0
   58740:	mov	x0, x21
   58744:	bl	bcb0 <__gmpz_set_ui@plt>
   58748:	ldr	x3, [x19]
   5874c:	add	x3, x3, #0x20
   58750:	str	x3, [x19]
   58754:	cmp	x20, x3
   58758:	b.hi	58720 <mpfr_random_deviate_tstbit@@Base+0x80>  // b.pmore
   5875c:	ldp	x21, x22, [sp, #32]
   58760:	ldr	x23, [sp, #48]
   58764:	cmp	x20, #0x20
   58768:	b.ls	58780 <mpfr_random_deviate_tstbit@@Base+0xe0>  // b.plast
   5876c:	sub	x1, x3, x20
   58770:	add	x0, x19, #0x10
   58774:	ldp	x19, x20, [sp, #16]
   58778:	ldp	x29, x30, [sp], #64
   5877c:	b	bfe0 <__gmpz_tstbit@plt>
   58780:	ldr	x0, [x19, #8]
   58784:	mov	w1, #0x20                  	// #32
   58788:	sub	w20, w1, w20
   5878c:	lsr	x0, x0, x20
   58790:	and	w0, w0, #0x1
   58794:	ldp	x19, x20, [sp, #16]
   58798:	ldp	x29, x30, [sp], #64
   5879c:	ret
   587a0:	mov	x1, #0x20                  	// #32
   587a4:	mov	x0, x2
   587a8:	bl	cb10 <__gmp_urandomb_ui@plt>
   587ac:	mov	x1, #0x20                  	// #32
   587b0:	stp	x1, x0, [x19]
   587b4:	cmp	x20, x1
   587b8:	b.hi	586e0 <mpfr_random_deviate_tstbit@@Base+0x40>  // b.pmore
   587bc:	ldr	x23, [sp, #48]
   587c0:	b	58784 <mpfr_random_deviate_tstbit@@Base+0xe4>
   587c4:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   587c8:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   587cc:	add	x2, x2, #0xe28
   587d0:	add	x0, x0, #0xe58
   587d4:	mov	w1, #0x82                  	// #130
   587d8:	stp	x21, x22, [sp, #32]
   587dc:	str	x23, [sp, #48]
   587e0:	bl	cb40 <mpfr_assert_fail@plt>
   587e4:	nop

00000000000587e8 <mpfr_random_deviate_less@@Base>:
   587e8:	cmp	x0, x1
   587ec:	b.eq	58998 <mpfr_random_deviate_less@@Base+0x1b0>  // b.none
   587f0:	stp	x29, x30, [sp, #-64]!
   587f4:	mov	x29, sp
   587f8:	stp	x19, x20, [sp, #16]
   587fc:	mov	x19, x0
   58800:	mov	x20, x1
   58804:	ldr	x0, [x0]
   58808:	stp	x21, x22, [sp, #32]
   5880c:	mov	x21, x2
   58810:	str	x23, [sp, #48]
   58814:	cmp	x0, #0x1f
   58818:	b.hi	58898 <mpfr_random_deviate_less@@Base+0xb0>  // b.pmore
   5881c:	add	x23, x19, #0x10
   58820:	cbnz	x0, 58850 <mpfr_random_deviate_less@@Base+0x68>
   58824:	b	589b8 <mpfr_random_deviate_less@@Base+0x1d0>
   58828:	bl	c200 <__gmpz_mul_2exp@plt>
   5882c:	mov	x0, x23
   58830:	mov	x2, x22
   58834:	mov	x1, x23
   58838:	bl	c360 <__gmpz_add_ui@plt>
   5883c:	ldr	x0, [x19]
   58840:	add	x0, x0, #0x20
   58844:	str	x0, [x19]
   58848:	cmp	x0, #0x1f
   5884c:	b.hi	58898 <mpfr_random_deviate_less@@Base+0xb0>  // b.pmore
   58850:	mov	x1, #0x20                  	// #32
   58854:	mov	x0, x21
   58858:	bl	cb10 <__gmp_urandomb_ui@plt>
   5885c:	mov	x22, x0
   58860:	ldr	x3, [x19]
   58864:	mov	x2, #0x20                  	// #32
   58868:	mov	x1, x23
   5886c:	mov	x0, x23
   58870:	cmp	x3, x2
   58874:	b.ne	58828 <mpfr_random_deviate_less@@Base+0x40>  // b.any
   58878:	mov	x1, x22
   5887c:	bl	bcb0 <__gmpz_set_ui@plt>
   58880:	ldr	x0, [x19]
   58884:	add	x0, x0, #0x20
   58888:	str	x0, [x19]
   5888c:	cmp	x0, #0x1f
   58890:	b.ls	58850 <mpfr_random_deviate_less@@Base+0x68>  // b.plast
   58894:	nop
   58898:	ldr	x0, [x20]
   5889c:	cmp	x0, #0x1f
   588a0:	b.hi	58920 <mpfr_random_deviate_less@@Base+0x138>  // b.pmore
   588a4:	add	x23, x20, #0x10
   588a8:	cbnz	x0, 588d8 <mpfr_random_deviate_less@@Base+0xf0>
   588ac:	b	589a0 <mpfr_random_deviate_less@@Base+0x1b8>
   588b0:	bl	c200 <__gmpz_mul_2exp@plt>
   588b4:	mov	x0, x23
   588b8:	mov	x2, x22
   588bc:	mov	x1, x23
   588c0:	bl	c360 <__gmpz_add_ui@plt>
   588c4:	ldr	x0, [x20]
   588c8:	add	x0, x0, #0x20
   588cc:	str	x0, [x20]
   588d0:	cmp	x0, #0x1f
   588d4:	b.hi	58920 <mpfr_random_deviate_less@@Base+0x138>  // b.pmore
   588d8:	mov	x1, #0x20                  	// #32
   588dc:	mov	x0, x21
   588e0:	bl	cb10 <__gmp_urandomb_ui@plt>
   588e4:	mov	x22, x0
   588e8:	ldr	x3, [x20]
   588ec:	mov	x2, #0x20                  	// #32
   588f0:	mov	x1, x23
   588f4:	mov	x0, x23
   588f8:	cmp	x3, x2
   588fc:	b.ne	588b0 <mpfr_random_deviate_less@@Base+0xc8>  // b.any
   58900:	mov	x1, x22
   58904:	bl	bcb0 <__gmpz_set_ui@plt>
   58908:	ldr	x0, [x20]
   5890c:	add	x0, x0, #0x20
   58910:	str	x0, [x20]
   58914:	cmp	x0, #0x1f
   58918:	b.ls	588d8 <mpfr_random_deviate_less@@Base+0xf0>  // b.plast
   5891c:	nop
   58920:	ldr	x0, [x20, #8]
   58924:	ldr	x1, [x19, #8]
   58928:	cmp	x1, x0
   5892c:	b.eq	58948 <mpfr_random_deviate_less@@Base+0x160>  // b.none
   58930:	cset	w0, cc  // cc = lo, ul, last
   58934:	ldp	x19, x20, [sp, #16]
   58938:	ldp	x21, x22, [sp, #32]
   5893c:	ldr	x23, [sp, #48]
   58940:	ldp	x29, x30, [sp], #64
   58944:	ret
   58948:	mov	x22, #0x21                  	// #33
   5894c:	nop
   58950:	mov	x1, x22
   58954:	mov	x2, x21
   58958:	mov	x0, x19
   5895c:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   58960:	mov	w23, w0
   58964:	mov	x1, x22
   58968:	mov	x2, x21
   5896c:	mov	x0, x20
   58970:	add	x22, x22, #0x1
   58974:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   58978:	cmp	w23, w0
   5897c:	b.eq	58950 <mpfr_random_deviate_less@@Base+0x168>  // b.none
   58980:	cset	w0, lt  // lt = tstop
   58984:	ldp	x19, x20, [sp, #16]
   58988:	ldp	x21, x22, [sp, #32]
   5898c:	ldr	x23, [sp, #48]
   58990:	ldp	x29, x30, [sp], #64
   58994:	ret
   58998:	mov	w0, #0x0                   	// #0
   5899c:	ret
   589a0:	mov	x1, #0x20                  	// #32
   589a4:	mov	x0, x21
   589a8:	bl	cb10 <__gmp_urandomb_ui@plt>
   589ac:	mov	x1, #0x20                  	// #32
   589b0:	stp	x1, x0, [x20]
   589b4:	b	58924 <mpfr_random_deviate_less@@Base+0x13c>
   589b8:	mov	x1, #0x20                  	// #32
   589bc:	mov	x0, x2
   589c0:	bl	cb10 <__gmp_urandomb_ui@plt>
   589c4:	mov	x1, #0x20                  	// #32
   589c8:	stp	x1, x0, [x19]
   589cc:	ldr	x0, [x20]
   589d0:	cmp	x0, #0x1f
   589d4:	b.ls	588a4 <mpfr_random_deviate_less@@Base+0xbc>  // b.plast
   589d8:	b	58920 <mpfr_random_deviate_less@@Base+0x138>
   589dc:	nop

00000000000589e0 <mpfr_random_deviate_value@@Base>:
   589e0:	stp	x29, x30, [sp, #-112]!
   589e4:	mov	x29, sp
   589e8:	stp	x19, x20, [sp, #16]
   589ec:	mov	x19, x2
   589f0:	stp	x21, x22, [sp, #32]
   589f4:	mov	x22, x3
   589f8:	stp	x23, x24, [sp, #48]
   589fc:	mov	x23, x4
   58a00:	stp	x25, x26, [sp, #64]
   58a04:	mov	w26, w0
   58a08:	ldr	x24, [x3]
   58a0c:	str	x27, [sp, #80]
   58a10:	mov	w27, w5
   58a14:	cbz	x1, 58ad0 <mpfr_random_deviate_value@@Base+0xf0>
   58a18:	mov	x21, x1
   58a1c:	clz	x1, x1
   58a20:	mov	w25, #0x3f                  	// #63
   58a24:	sub	w25, w25, w1
   58a28:	add	x20, sp, #0x60
   58a2c:	add	x24, x24, #0x1
   58a30:	mov	x0, x20
   58a34:	sxtw	x25, w25
   58a38:	bl	bf90 <mpfr_mpz_init@plt>
   58a3c:	cmp	x24, x25
   58a40:	b.ls	58a58 <mpfr_random_deviate_value@@Base+0x78>  // b.plast
   58a44:	mov	x2, x23
   58a48:	sub	x1, x24, x25
   58a4c:	mov	x3, x20
   58a50:	mov	x0, x19
   58a54:	bl	58488 <mpfr_nrandom@@Base+0x318>
   58a58:	mov	x0, x20
   58a5c:	mov	x1, x21
   58a60:	bl	bcb0 <__gmpz_set_ui@plt>
   58a64:	ldr	x0, [x19]
   58a68:	cbnz	x0, 58b60 <mpfr_random_deviate_value@@Base+0x180>
   58a6c:	mov	x0, x20
   58a70:	mov	x1, #0x0                   	// #0
   58a74:	bl	bf10 <__gmpz_setbit@plt>
   58a78:	cbz	w26, 58a88 <mpfr_random_deviate_value@@Base+0xa8>
   58a7c:	ldr	w0, [sp, #100]
   58a80:	neg	w0, w0
   58a84:	str	w0, [sp, #100]
   58a88:	ldr	x2, [x19]
   58a8c:	tbnz	x2, #63, 58bfc <mpfr_random_deviate_value@@Base+0x21c>
   58a90:	mov	w3, w27
   58a94:	mov	x1, x20
   58a98:	neg	x2, x2
   58a9c:	mov	x0, x22
   58aa0:	bl	c4f0 <mpfr_set_z_2exp@plt>
   58aa4:	mov	w19, w0
   58aa8:	mov	x0, x20
   58aac:	bl	c170 <mpfr_mpz_clear@plt>
   58ab0:	mov	w0, w19
   58ab4:	ldp	x19, x20, [sp, #16]
   58ab8:	ldp	x21, x22, [sp, #32]
   58abc:	ldp	x23, x24, [sp, #48]
   58ac0:	ldp	x25, x26, [sp, #64]
   58ac4:	ldr	x27, [sp, #80]
   58ac8:	ldp	x29, x30, [sp], #112
   58acc:	ret
   58ad0:	mov	x0, x19
   58ad4:	mov	x2, x4
   58ad8:	mov	x3, #0x0                   	// #0
   58adc:	mov	x1, #0x20                  	// #32
   58ae0:	bl	58488 <mpfr_nrandom@@Base+0x318>
   58ae4:	ldr	x0, [x19, #8]
   58ae8:	cbz	x0, 58b84 <mpfr_random_deviate_value@@Base+0x1a4>
   58aec:	clz	x21, x0
   58af0:	add	x20, sp, #0x60
   58af4:	sub	w21, w21, #0x1f
   58af8:	mov	x0, x20
   58afc:	sxtw	x21, w21
   58b00:	bl	bf90 <mpfr_mpz_init@plt>
   58b04:	add	x21, x24, x21
   58b08:	cmn	x21, #0x1
   58b0c:	b.eq	58b24 <mpfr_random_deviate_value@@Base+0x144>  // b.none
   58b10:	mov	x2, x23
   58b14:	add	x1, x21, #0x1
   58b18:	mov	x3, x20
   58b1c:	mov	x0, x19
   58b20:	bl	58488 <mpfr_nrandom@@Base+0x318>
   58b24:	ldr	x1, [x19, #8]
   58b28:	mov	x0, x20
   58b2c:	bl	bcb0 <__gmpz_set_ui@plt>
   58b30:	ldr	x2, [x19]
   58b34:	cmp	x2, #0x20
   58b38:	b.ls	58a6c <mpfr_random_deviate_value@@Base+0x8c>  // b.plast
   58b3c:	mov	x1, x20
   58b40:	mov	x0, x20
   58b44:	sub	x2, x2, #0x20
   58b48:	bl	c200 <__gmpz_mul_2exp@plt>
   58b4c:	add	x2, x19, #0x10
   58b50:	mov	x1, x20
   58b54:	mov	x0, x20
   58b58:	bl	c9c0 <__gmpz_add@plt>
   58b5c:	b	58a6c <mpfr_random_deviate_value@@Base+0x8c>
   58b60:	mov	x1, x20
   58b64:	mov	x0, x20
   58b68:	mov	x2, #0x20                  	// #32
   58b6c:	bl	c200 <__gmpz_mul_2exp@plt>
   58b70:	ldr	x2, [x19, #8]
   58b74:	mov	x1, x20
   58b78:	mov	x0, x20
   58b7c:	bl	c360 <__gmpz_add_ui@plt>
   58b80:	b	58b30 <mpfr_random_deviate_value@@Base+0x150>
   58b84:	mov	x0, x19
   58b88:	mov	x2, x23
   58b8c:	mov	x3, #0x0                   	// #0
   58b90:	mov	x1, #0x40                  	// #64
   58b94:	bl	58488 <mpfr_nrandom@@Base+0x318>
   58b98:	ldr	w0, [x19, #20]
   58b9c:	cbnz	w0, 58bc0 <mpfr_random_deviate_value@@Base+0x1e0>
   58ba0:	ldr	x1, [x19]
   58ba4:	mov	x0, x19
   58ba8:	mov	x2, x23
   58bac:	mov	x3, #0x0                   	// #0
   58bb0:	add	x1, x1, #0x1
   58bb4:	bl	58488 <mpfr_nrandom@@Base+0x318>
   58bb8:	ldr	w0, [x19, #20]
   58bbc:	cbz	w0, 58ba0 <mpfr_random_deviate_value@@Base+0x1c0>
   58bc0:	mov	w1, #0x2                   	// #2
   58bc4:	add	x0, x19, #0x10
   58bc8:	bl	cb60 <__gmpz_sizeinbase@plt>
   58bcc:	ldr	x21, [x19]
   58bd0:	mov	x1, #0x100                 	// #256
   58bd4:	movk	x1, #0x8000, lsl #48
   58bd8:	sub	x21, x21, x0
   58bdc:	add	x0, x21, #0x2
   58be0:	add	x21, x21, #0x1
   58be4:	cmp	x0, x1
   58be8:	b.hi	58c1c <mpfr_random_deviate_value@@Base+0x23c>  // b.pmore
   58bec:	add	x20, sp, #0x60
   58bf0:	mov	x0, x20
   58bf4:	bl	bf90 <mpfr_mpz_init@plt>
   58bf8:	b	58b04 <mpfr_random_deviate_value@@Base+0x124>
   58bfc:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   58c00:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   58c04:	add	x2, x2, #0xec8
   58c08:	add	x0, x0, #0xe58
   58c0c:	mov	w1, #0x177                 	// #375
   58c10:	bl	cb40 <mpfr_assert_fail@plt>
   58c14:	ldr	x2, [x19]
   58c18:	b	58a90 <mpfr_random_deviate_value@@Base+0xb0>
   58c1c:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   58c20:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   58c24:	add	x2, x2, #0xe70
   58c28:	add	x0, x0, #0xe58
   58c2c:	mov	w1, #0xf1                  	// #241
   58c30:	bl	cb40 <mpfr_assert_fail@plt>
   58c34:	nop

0000000000058c38 <mpfr_erandom@@Base>:
   58c38:	stp	x29, x30, [sp, #-176]!
   58c3c:	mov	x29, sp
   58c40:	stp	x23, x24, [sp, #48]
   58c44:	add	x23, sp, #0x50
   58c48:	mov	x24, x0
   58c4c:	mov	x0, x23
   58c50:	stp	x19, x20, [sp, #16]
   58c54:	mov	x20, x1
   58c58:	add	x19, sp, #0x70
   58c5c:	stp	x21, x22, [sp, #32]
   58c60:	add	x21, sp, #0x90
   58c64:	str	x25, [sp, #64]
   58c68:	mov	w25, w2
   58c6c:	bl	c150 <mpfr_random_deviate_init@plt>
   58c70:	mov	x22, #0x0                   	// #0
   58c74:	mov	x0, x19
   58c78:	bl	c150 <mpfr_random_deviate_init@plt>
   58c7c:	mov	x0, x21
   58c80:	bl	c150 <mpfr_random_deviate_init@plt>
   58c84:	mov	x0, x19
   58c88:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58c8c:	mov	x2, x20
   58c90:	mov	x1, x23
   58c94:	mov	x0, x19
   58c98:	bl	ca30 <mpfr_random_deviate_less@plt>
   58c9c:	cbnz	w0, 58cc0 <mpfr_erandom@@Base+0x88>
   58ca0:	b	58d0c <mpfr_erandom@@Base+0xd4>
   58ca4:	mov	x0, x19
   58ca8:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58cac:	mov	x2, x20
   58cb0:	mov	x1, x21
   58cb4:	mov	x0, x19
   58cb8:	bl	ca30 <mpfr_random_deviate_less@plt>
   58cbc:	cbz	w0, 58d0c <mpfr_erandom@@Base+0xd4>
   58cc0:	mov	x0, x21
   58cc4:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58cc8:	mov	x2, x20
   58ccc:	mov	x1, x19
   58cd0:	mov	x0, x21
   58cd4:	bl	ca30 <mpfr_random_deviate_less@plt>
   58cd8:	cbnz	w0, 58ca4 <mpfr_erandom@@Base+0x6c>
   58cdc:	cmn	x22, #0x1
   58ce0:	b.eq	58d60 <mpfr_erandom@@Base+0x128>  // b.none
   58ce4:	mov	x0, x23
   58ce8:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58cec:	mov	x0, x19
   58cf0:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   58cf4:	add	x22, x22, #0x1
   58cf8:	mov	x2, x20
   58cfc:	mov	x1, x23
   58d00:	mov	x0, x19
   58d04:	bl	ca30 <mpfr_random_deviate_less@plt>
   58d08:	cbnz	w0, 58cc0 <mpfr_erandom@@Base+0x88>
   58d0c:	mov	x0, x21
   58d10:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   58d14:	mov	x0, x19
   58d18:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   58d1c:	mov	w5, w25
   58d20:	mov	x4, x20
   58d24:	mov	x3, x24
   58d28:	mov	x2, x23
   58d2c:	mov	x1, x22
   58d30:	mov	w0, #0x0                   	// #0
   58d34:	bl	baa0 <mpfr_random_deviate_value@plt>
   58d38:	mov	w19, w0
   58d3c:	mov	x0, x23
   58d40:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   58d44:	mov	w0, w19
   58d48:	ldp	x19, x20, [sp, #16]
   58d4c:	ldp	x21, x22, [sp, #32]
   58d50:	ldp	x23, x24, [sp, #48]
   58d54:	ldr	x25, [sp, #64]
   58d58:	ldp	x29, x30, [sp], #176
   58d5c:	ret
   58d60:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   58d64:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   58d68:	add	x2, x2, #0xee8
   58d6c:	add	x0, x0, #0xef8
   58d70:	mov	w1, #0x61                  	// #97
   58d74:	bl	cb40 <mpfr_assert_fail@plt>
   58d78:	stp	x29, x30, [sp, #-272]!
   58d7c:	mov	x29, sp
   58d80:	stp	x21, x22, [sp, #32]
   58d84:	mov	x21, x1
   58d88:	mov	x22, x2
   58d8c:	ldr	x1, [x2]
   58d90:	stp	x19, x20, [sp, #16]
   58d94:	ldr	x20, [x21]
   58d98:	sub	x1, x1, #0x1
   58d9c:	ldr	x7, [x4]
   58da0:	sub	x20, x20, #0x1
   58da4:	ldr	x19, [x3]
   58da8:	asr	x1, x1, #6
   58dac:	sub	x7, x7, #0x1
   58db0:	add	x20, x1, x20, asr #6
   58db4:	sub	x19, x19, #0x1
   58db8:	add	x20, x20, #0x2
   58dbc:	asr	x7, x7, #6
   58dc0:	stp	x23, x24, [sp, #48]
   58dc4:	add	x19, x7, x19, asr #6
   58dc8:	stp	x25, x26, [sp, #64]
   58dcc:	mov	x24, x3
   58dd0:	lsl	x3, x20, #3
   58dd4:	stp	x27, x28, [sp, #80]
   58dd8:	mov	x25, x4
   58ddc:	mov	w27, w5
   58de0:	str	w6, [x29, #124]
   58de4:	mov	x26, x0
   58de8:	str	xzr, [x29, #136]
   58dec:	add	x19, x19, #0x2
   58df0:	cmp	x3, #0x4, lsl #12
   58df4:	ldr	x5, [x0]
   58df8:	b.hi	58fcc <mpfr_erandom@@Base+0x394>  // b.pmore
   58dfc:	add	x0, x3, #0xf
   58e00:	lsl	x2, x20, #6
   58e04:	and	x0, x0, #0xfffffffffffffff0
   58e08:	mov	w1, #0x1                   	// #1
   58e0c:	sub	sp, sp, x0
   58e10:	str	x2, [x29, #176]
   58e14:	mov	x0, sp
   58e18:	str	w1, [x29, #184]
   58e1c:	str	x0, [x29, #200]
   58e20:	lsl	x7, x19, #3
   58e24:	cmp	x7, #0x4, lsl #12
   58e28:	b.hi	59000 <mpfr_erandom@@Base+0x3c8>  // b.pmore
   58e2c:	add	x7, x7, #0xf
   58e30:	and	x7, x7, #0xfffffffffffffff0
   58e34:	sub	sp, sp, x7
   58e38:	mov	x6, sp
   58e3c:	mov	w7, #0x1                   	// #1
   58e40:	add	x23, x29, #0xb0
   58e44:	mov	x0, x23
   58e48:	mov	x2, x22
   58e4c:	mov	x1, x21
   58e50:	lsl	x19, x19, #6
   58e54:	add	x28, x29, #0xe0
   58e58:	stp	x5, x3, [x29, #104]
   58e5c:	str	x19, [x29, #224]
   58e60:	str	w7, [x29, #232]
   58e64:	str	x6, [x29, #248]
   58e68:	bl	bf80 <mpfr_ubf_mul_exact@plt>
   58e6c:	mov	x0, x28
   58e70:	mov	x2, x25
   58e74:	mov	x1, x24
   58e78:	bl	bf80 <mpfr_ubf_mul_exact@plt>
   58e7c:	ldr	w0, [x29, #124]
   58e80:	ldp	x5, x3, [x29, #104]
   58e84:	cbz	w0, 58e94 <mpfr_erandom@@Base+0x25c>
   58e88:	ldr	w0, [x29, #232]
   58e8c:	neg	w0, w0
   58e90:	str	w0, [x29, #232]
   58e94:	ldr	x0, [x21]
   58e98:	cmp	x0, x5
   58e9c:	b.ne	58eac <mpfr_erandom@@Base+0x274>  // b.any
   58ea0:	ldr	x0, [x22]
   58ea4:	cmp	x0, x5
   58ea8:	b.eq	58f3c <mpfr_erandom@@Base+0x304>  // b.none
   58eac:	mov	w3, w27
   58eb0:	mov	x0, x26
   58eb4:	mov	x2, x28
   58eb8:	mov	x1, x23
   58ebc:	bl	c1a0 <mpfr_add@plt>
   58ec0:	mov	w19, w0
   58ec4:	ldr	x1, [x29, #192]
   58ec8:	mov	x0, #0x4                   	// #4
   58ecc:	movk	x0, #0x8000, lsl #48
   58ed0:	cmp	x1, x0
   58ed4:	b.eq	58f30 <mpfr_erandom@@Base+0x2f8>  // b.none
   58ed8:	ldr	x1, [x29, #240]
   58edc:	mov	x0, #0x4                   	// #4
   58ee0:	movk	x0, #0x8000, lsl #48
   58ee4:	cmp	x1, x0
   58ee8:	b.eq	58f18 <mpfr_erandom@@Base+0x2e0>  // b.none
   58eec:	ldr	x0, [x29, #136]
   58ef0:	cbnz	x0, 58f28 <mpfr_erandom@@Base+0x2f0>
   58ef4:	mov	sp, x29
   58ef8:	mov	w0, w19
   58efc:	ldp	x19, x20, [sp, #16]
   58f00:	ldp	x21, x22, [sp, #32]
   58f04:	ldp	x23, x24, [sp, #48]
   58f08:	ldp	x25, x26, [sp, #64]
   58f0c:	ldp	x27, x28, [sp, #80]
   58f10:	ldp	x29, x30, [sp], #272
   58f14:	ret
   58f18:	add	x0, x28, #0x20
   58f1c:	bl	c170 <mpfr_mpz_clear@plt>
   58f20:	ldr	x0, [x29, #136]
   58f24:	cbz	x0, 58ef4 <mpfr_erandom@@Base+0x2bc>
   58f28:	bl	c410 <mpfr_tmp_free@plt>
   58f2c:	b	58ef4 <mpfr_erandom@@Base+0x2bc>
   58f30:	add	x0, x23, #0x20
   58f34:	bl	c170 <mpfr_mpz_clear@plt>
   58f38:	b	58ed8 <mpfr_erandom@@Base+0x2a0>
   58f3c:	ldr	x0, [x24]
   58f40:	cmp	x0, x5
   58f44:	b.ne	58eac <mpfr_erandom@@Base+0x274>  // b.any
   58f48:	ldr	x0, [x25]
   58f4c:	cmp	x0, x5
   58f50:	b.ne	58eac <mpfr_erandom@@Base+0x274>  // b.any
   58f54:	lsl	x19, x5, #1
   58f58:	sub	x0, x19, #0x1
   58f5c:	asr	x0, x0, #6
   58f60:	add	x0, x0, #0x1
   58f64:	cmp	x0, x20
   58f68:	b.ne	58eac <mpfr_erandom@@Base+0x274>  // b.any
   58f6c:	cmp	x3, #0x4, lsl #12
   58f70:	b.hi	5901c <mpfr_erandom@@Base+0x3e4>  // b.pmore
   58f74:	add	x0, x3, #0xf
   58f78:	and	x0, x0, #0xfffffffffffffff0
   58f7c:	sub	sp, sp, x0
   58f80:	mov	x5, sp
   58f84:	mov	w6, #0x1                   	// #1
   58f88:	add	x20, x29, #0x90
   58f8c:	mov	w3, w27
   58f90:	mov	x2, x28
   58f94:	mov	x1, x23
   58f98:	mov	x0, x20
   58f9c:	str	x19, [x29, #144]
   58fa0:	str	w6, [x29, #152]
   58fa4:	stp	x5, x19, [x29, #168]
   58fa8:	str	x19, [x29, #224]
   58fac:	bl	c1a0 <mpfr_add@plt>
   58fb0:	mov	w2, w27
   58fb4:	mov	w3, w0
   58fb8:	mov	x1, x20
   58fbc:	mov	x0, x26
   58fc0:	bl	cae0 <mpfr_set_1_2@plt>
   58fc4:	mov	w19, w0
   58fc8:	b	58ec4 <mpfr_erandom@@Base+0x28c>
   58fcc:	mov	x1, x3
   58fd0:	add	x0, x29, #0x88
   58fd4:	stp	x5, x3, [x29, #104]
   58fd8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   58fdc:	lsl	x2, x20, #6
   58fe0:	mov	w1, #0x1                   	// #1
   58fe4:	str	x2, [x29, #176]
   58fe8:	str	w1, [x29, #184]
   58fec:	lsl	x7, x19, #3
   58ff0:	str	x0, [x29, #200]
   58ff4:	cmp	x7, #0x4, lsl #12
   58ff8:	ldp	x5, x3, [x29, #104]
   58ffc:	b.ls	58e2c <mpfr_erandom@@Base+0x1f4>  // b.plast
   59000:	mov	x1, x7
   59004:	add	x0, x29, #0x88
   59008:	stp	x5, x3, [x29, #104]
   5900c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   59010:	mov	x6, x0
   59014:	ldp	x5, x3, [x29, #104]
   59018:	b	58e3c <mpfr_erandom@@Base+0x204>
   5901c:	mov	x1, x3
   59020:	add	x0, x29, #0x88
   59024:	bl	bdc0 <mpfr_tmp_allocate@plt>
   59028:	mov	x5, x0
   5902c:	b	58f84 <mpfr_erandom@@Base+0x34c>

0000000000059030 <mpfr_fmma@@Base>:
   59030:	mov	w6, #0x0                   	// #0
   59034:	b	58d78 <mpfr_erandom@@Base+0x140>

0000000000059038 <mpfr_fmms@@Base>:
   59038:	mov	w6, #0x1                   	// #1
   5903c:	b	58d78 <mpfr_erandom@@Base+0x140>
   59040:	sub	sp, sp, #0x80
   59044:	stp	x29, x30, [sp, #16]
   59048:	add	x29, sp, #0x10
   5904c:	stp	x19, x20, [sp, #32]
   59050:	mov	x19, x4
   59054:	mov	x20, x3
   59058:	stp	x21, x22, [sp, #48]
   5905c:	mov	x22, x0
   59060:	mov	x21, x2
   59064:	stp	x23, x24, [sp, #64]
   59068:	mov	x23, x1
   5906c:	stp	x25, x26, [sp, #80]
   59070:	mov	x26, x6
   59074:	ldr	w25, [sp, #128]
   59078:	stp	x27, x28, [sp, #96]
   5907c:	mov	x28, x5
   59080:	add	x5, x4, #0x1
   59084:	cmp	x28, x5
   59088:	mov	x27, x7
   5908c:	b.eq	59190 <mpfr_fmms@@Base+0x158>  // b.none
   59090:	lsr	x8, x4, #1
   59094:	and	x19, x4, x28
   59098:	add	x8, x8, x28, lsr #1
   5909c:	mov	w5, #0x1                   	// #1
   590a0:	and	x19, x19, #0x1
   590a4:	str	w5, [sp]
   590a8:	add	x19, x8, x19
   590ac:	add	x24, x3, #0x10
   590b0:	mov	x5, x19
   590b4:	bl	59040 <mpfr_fmms@@Base+0x8>
   590b8:	mov	x4, x19
   590bc:	mov	x6, x26
   590c0:	mov	x7, x27
   590c4:	mov	x5, x28
   590c8:	mov	x3, x24
   590cc:	str	w25, [sp]
   590d0:	add	x19, x21, #0x10
   590d4:	add	x26, x22, #0x10
   590d8:	mov	x0, x26
   590dc:	mov	x2, x19
   590e0:	add	x1, sp, #0x78
   590e4:	bl	59040 <mpfr_fmms@@Base+0x8>
   590e8:	mov	x2, x22
   590ec:	mov	x1, x24
   590f0:	mov	x0, x24
   590f4:	bl	bff0 <__gmpz_mul@plt>
   590f8:	mov	x2, x21
   590fc:	mov	x1, x24
   59100:	mov	x0, x24
   59104:	bl	bff0 <__gmpz_mul@plt>
   59108:	mov	x2, x19
   5910c:	mov	x1, x20
   59110:	mov	x0, x20
   59114:	bl	bff0 <__gmpz_mul@plt>
   59118:	ldr	x2, [sp, #120]
   5911c:	mov	x1, x20
   59120:	mov	x0, x20
   59124:	bl	c200 <__gmpz_mul_2exp@plt>
   59128:	mov	x2, x24
   5912c:	mov	x1, x20
   59130:	mov	x0, x20
   59134:	bl	c9c0 <__gmpz_add@plt>
   59138:	cbnz	w25, 5917c <mpfr_fmms@@Base+0x144>
   5913c:	ldr	x3, [x23]
   59140:	mov	x2, x19
   59144:	ldr	x4, [sp, #120]
   59148:	mov	x1, x21
   5914c:	mov	x0, x21
   59150:	add	x3, x3, x4
   59154:	str	x3, [x23]
   59158:	bl	bff0 <__gmpz_mul@plt>
   5915c:	ldp	x29, x30, [sp, #16]
   59160:	ldp	x19, x20, [sp, #32]
   59164:	ldp	x21, x22, [sp, #48]
   59168:	ldp	x23, x24, [sp, #64]
   5916c:	ldp	x25, x26, [sp, #80]
   59170:	ldp	x27, x28, [sp, #96]
   59174:	add	sp, sp, #0x80
   59178:	ret
   5917c:	mov	x2, x26
   59180:	mov	x1, x22
   59184:	mov	x0, x22
   59188:	bl	bff0 <__gmpz_mul@plt>
   5918c:	b	5913c <mpfr_fmms@@Base+0x104>
   59190:	cmp	x4, #0x1
   59194:	cneg	x1, x6, ne  // ne = any
   59198:	bl	cb70 <__gmpz_set_si@plt>
   5919c:	str	x27, [x23]
   591a0:	mov	x1, x19
   591a4:	mov	x0, x21
   591a8:	bl	bcb0 <__gmpz_set_ui@plt>
   591ac:	mov	x1, x22
   591b0:	mov	x0, x20
   591b4:	bl	bfa0 <__gmpz_set@plt>
   591b8:	ldp	x29, x30, [sp, #16]
   591bc:	ldp	x19, x20, [sp, #32]
   591c0:	ldp	x21, x22, [sp, #48]
   591c4:	ldp	x23, x24, [sp, #64]
   591c8:	ldp	x25, x26, [sp, #80]
   591cc:	ldp	x27, x28, [sp, #96]
   591d0:	add	sp, sp, #0x80
   591d4:	ret

00000000000591d8 <mpfr_log_ui@@Base>:
   591d8:	stp	x29, x30, [sp, #-480]!
   591dc:	cmp	x1, #0x2
   591e0:	mov	x29, sp
   591e4:	stp	x19, x20, [sp, #16]
   591e8:	mov	x19, x1
   591ec:	stp	x21, x22, [sp, #32]
   591f0:	stp	x23, x24, [sp, #48]
   591f4:	mov	x24, x0
   591f8:	stp	x25, x26, [sp, #64]
   591fc:	stp	x27, x28, [sp, #80]
   59200:	sub	sp, sp, #0x10
   59204:	str	w2, [x29, #204]
   59208:	b.hi	59288 <mpfr_log_ui@@Base+0xb0>  // b.pmore
   5920c:	cbz	x1, 5924c <mpfr_log_ui@@Base+0x74>
   59210:	cmp	x1, #0x1
   59214:	b.ne	596e8 <mpfr_log_ui@@Base+0x510>  // b.any
   59218:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5921c:	mov	w20, #0x0                   	// #0
   59220:	str	w1, [x24, #8]
   59224:	str	x0, [x24, #16]
   59228:	mov	sp, x29
   5922c:	mov	w0, w20
   59230:	ldp	x19, x20, [sp, #16]
   59234:	ldp	x21, x22, [sp, #32]
   59238:	ldp	x23, x24, [sp, #48]
   5923c:	ldp	x25, x26, [sp, #64]
   59240:	ldp	x27, x28, [sp, #80]
   59244:	ldp	x29, x30, [sp], #480
   59248:	ret
   5924c:	mrs	x1, tpidr_el0
   59250:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59254:	ldr	x2, [x0, #2576]
   59258:	add	x0, x0, #0xa10
   5925c:	blr	x2
   59260:	add	x0, x1, x0
   59264:	mov	w1, #0xffffffff            	// #-1
   59268:	str	w1, [x24, #8]
   5926c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   59270:	mov	w20, #0x0                   	// #0
   59274:	str	x2, [x24, #16]
   59278:	ldr	w1, [x0]
   5927c:	orr	w1, w1, #0x20
   59280:	str	w1, [x0]
   59284:	b	59228 <mpfr_log_ui@@Base+0x50>
   59288:	add	x20, x29, #0xe0
   5928c:	mov	x0, x20
   59290:	bl	bf90 <mpfr_mpz_init@plt>
   59294:	mov	x1, x19
   59298:	mov	x0, x20
   5929c:	bl	bcb0 <__gmpz_set_ui@plt>
   592a0:	mov	x2, #0x3                   	// #3
   592a4:	mov	x1, x20
   592a8:	mov	x0, x20
   592ac:	bl	c100 <__gmpz_mul_ui@plt>
   592b0:	mov	x0, x20
   592b4:	mov	w1, #0x2                   	// #2
   592b8:	bl	cb60 <__gmpz_sizeinbase@plt>
   592bc:	mov	x21, x0
   592c0:	sub	x1, x21, #0x2
   592c4:	mov	x0, x20
   592c8:	mov	x20, x1
   592cc:	str	x1, [x29, #192]
   592d0:	bl	c170 <mpfr_mpz_clear@plt>
   592d4:	mov	x0, #0x1                   	// #1
   592d8:	cmp	x20, #0x40
   592dc:	lsl	x0, x0, x20
   592e0:	sub	x0, x19, x0
   592e4:	ldr	x20, [x24]
   592e8:	csel	x19, x0, x19, cc  // cc = lo, ul, last
   592ec:	mov	x25, x19
   592f0:	cmp	x20, #0x1
   592f4:	b.eq	59814 <mpfr_log_ui@@Base+0x63c>  // b.none
   592f8:	b.le	59820 <mpfr_log_ui@@Base+0x648>
   592fc:	sub	x0, x20, #0x1
   59300:	mov	w1, #0x40                  	// #64
   59304:	clz	x0, x0
   59308:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   5930c:	sub	w1, w1, w0
   59310:	add	x1, x20, w1, sxtw
   59314:	add	x0, x1, #0xa
   59318:	mov	x22, x0
   5931c:	cmp	x0, x2
   59320:	b.ge	59884 <mpfr_log_ui@@Base+0x6ac>  // b.tcont
   59324:	add	x20, x1, #0x48
   59328:	adds	x1, x1, #0x9
   5932c:	csel	x20, x20, x1, mi  // mi = first
   59330:	asr	x20, x20, #6
   59334:	add	x20, x20, #0x1
   59338:	lsl	x0, x20, #1
   5933c:	cmp	x0, #0x10
   59340:	b.gt	5973c <mpfr_log_ui@@Base+0x564>
   59344:	add	x0, x29, #0x160
   59348:	stp	xzr, x0, [x29, #336]
   5934c:	mov	x1, x0
   59350:	mrs	x4, tpidr_el0
   59354:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59358:	ldr	x2, [x0, #2576]
   5935c:	add	x0, x0, #0xa10
   59360:	blr	x2
   59364:	str	x4, [x29, #176]
   59368:	mov	w2, #0x1                   	// #1
   5936c:	str	w2, [x29, #248]
   59370:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   59374:	ldr	w0, [x4, x0]
   59378:	add	x20, x1, x20, lsl #3
   5937c:	str	w0, [x29, #200]
   59380:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   59384:	str	w2, [x29, #280]
   59388:	str	x22, [x29, #240]
   5938c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59390:	ldr	x6, [x0, #2512]
   59394:	add	x0, x0, #0x9d0
   59398:	blr	x6
   5939c:	stp	x1, x22, [x29, #264]
   593a0:	mov	x6, x4
   593a4:	add	x4, x4, x0
   593a8:	str	x20, [x29, #296]
   593ac:	ldr	x0, [x6, x0]
   593b0:	str	x0, [x29, #120]
   593b4:	str	x5, [x4]
   593b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   593bc:	ldr	x2, [x0, #2544]
   593c0:	add	x0, x0, #0x9f0
   593c4:	blr	x2
   593c8:	ldr	x2, [x6, x0]
   593cc:	str	x3, [x6, x0]
   593d0:	ldr	x0, [x29, #192]
   593d4:	str	x2, [x29, #112]
   593d8:	str	x0, [x29, #184]
   593dc:	cbnz	x19, 59710 <mpfr_log_ui@@Base+0x538>
   593e0:	str	xzr, [x29, #144]
   593e4:	add	x0, x21, #0x3
   593e8:	add	x1, x21, #0x4
   593ec:	clz	x0, x0
   593f0:	str	x1, [x29, #136]
   593f4:	mov	w1, #0x41                  	// #65
   593f8:	sub	w0, w1, w0
   593fc:	add	x26, x29, #0x130
   59400:	add	x28, x29, #0xf0
   59404:	add	x27, x29, #0x110
   59408:	str	w0, [x29, #132]
   5940c:	add	x0, x29, #0xd8
   59410:	str	x24, [x29, #168]
   59414:	mov	x24, x22
   59418:	str	x25, [x29, #152]
   5941c:	str	x0, [x29, #160]
   59420:	mov	x0, #0x40                  	// #64
   59424:	str	x0, [x29, #104]
   59428:	mov	x0, x26
   5942c:	mov	x1, #0x20                  	// #32
   59430:	bl	ca80 <mpfr_init2@plt>
   59434:	mov	x19, #0x0                   	// #0
   59438:	ldr	x1, [x29, #144]
   5943c:	mov	w3, #0x2                   	// #2
   59440:	mov	x2, #0x0                   	// #0
   59444:	mov	x0, x26
   59448:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5944c:	mov	x1, x26
   59450:	mov	w2, #0x2                   	// #2
   59454:	mov	x0, x26
   59458:	bl	c1d0 <mpfr_log2@plt>
   5945c:	ldr	x1, [x29, #184]
   59460:	mov	x2, x26
   59464:	mov	w3, #0x3                   	// #3
   59468:	mov	x0, x26
   5946c:	bl	ca50 <mpfr_ui_sub@plt>
   59470:	mov	x2, x26
   59474:	mov	w3, #0x2                   	// #2
   59478:	mov	x1, x24
   5947c:	mov	x0, x26
   59480:	bl	c2f0 <mpfr_ui_div@plt>
   59484:	mov	w1, #0x2                   	// #2
   59488:	mov	x0, x26
   5948c:	bl	bca0 <mpfr_get_ui@plt>
   59490:	mov	x25, x0
   59494:	mov	x1, #0x2                   	// #2
   59498:	cmp	x0, x1
   5949c:	csel	x25, x25, x1, cs  // cs = hs, nlast
   594a0:	mov	w1, #0x41                  	// #65
   594a4:	sub	x20, x25, #0x1
   594a8:	mov	x0, x26
   594ac:	clz	x20, x20
   594b0:	sub	w20, w1, w20
   594b4:	bl	c070 <mpfr_clear@plt>
   594b8:	mov	x1, sp
   594bc:	mov	w0, #0x30                  	// #48
   594c0:	sbfiz	x23, x20, #4, #32
   594c4:	smsubl	x0, w20, w0, x1
   594c8:	mov	sp, x0
   594cc:	add	x22, sp, #0x10
   594d0:	add	x20, x22, x23
   594d4:	add	x21, x20, x23
   594d8:	add	x0, x22, x19
   594dc:	bl	bf90 <mpfr_mpz_init@plt>
   594e0:	add	x0, x20, x19
   594e4:	bl	bf90 <mpfr_mpz_init@plt>
   594e8:	add	x0, x21, x19
   594ec:	add	x19, x19, #0x10
   594f0:	bl	bf90 <mpfr_mpz_init@plt>
   594f4:	cmp	x23, x19
   594f8:	b.ne	594d8 <mpfr_log_ui@@Base+0x300>  // b.any
   594fc:	ldr	x6, [x29, #152]
   59500:	mov	x5, x25
   59504:	ldr	x7, [x29, #184]
   59508:	str	wzr, [sp]
   5950c:	mov	x3, x21
   59510:	mov	x4, #0x1                   	// #1
   59514:	ldr	x1, [x29, #160]
   59518:	mov	x2, x20
   5951c:	mov	x0, x22
   59520:	mov	x19, #0x0                   	// #0
   59524:	bl	59040 <mpfr_fmms@@Base+0x8>
   59528:	mov	x1, x21
   5952c:	mov	w2, #0x0                   	// #0
   59530:	mov	x0, x28
   59534:	bl	c240 <mpfr_set_z@plt>
   59538:	mov	x1, x20
   5953c:	mov	w2, #0x0                   	// #0
   59540:	mov	x0, x27
   59544:	bl	c240 <mpfr_set_z@plt>
   59548:	ldr	x2, [x29, #216]
   5954c:	mov	x1, x27
   59550:	mov	w3, #0x0                   	// #0
   59554:	mov	x0, x27
   59558:	bl	c2c0 <mpfr_mul_2ui@plt>
   5955c:	mov	x1, x28
   59560:	mov	w3, #0x0                   	// #0
   59564:	mov	x2, x27
   59568:	mov	x0, x28
   5956c:	bl	c620 <mpfr_div@plt>
   59570:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59574:	ldr	x1, [x0, #2560]
   59578:	add	x0, x0, #0xa00
   5957c:	blr	x1
   59580:	mov	w2, #0x0                   	// #0
   59584:	ldr	x1, [x29, #176]
   59588:	add	x1, x1, x0
   5958c:	mov	x0, x27
   59590:	bl	c380 <mpfr_cache@plt>
   59594:	ldr	x2, [x29, #192]
   59598:	mov	x1, x27
   5959c:	mov	w3, #0x0                   	// #0
   595a0:	mov	x0, x27
   595a4:	bl	ba50 <mpfr_mul_ui@plt>
   595a8:	mov	x2, x27
   595ac:	mov	x1, x28
   595b0:	mov	x0, x28
   595b4:	mov	w3, #0x0                   	// #0
   595b8:	bl	c1a0 <mpfr_add@plt>
   595bc:	nop
   595c0:	add	x0, x22, x19
   595c4:	bl	c170 <mpfr_mpz_clear@plt>
   595c8:	add	x0, x20, x19
   595cc:	bl	c170 <mpfr_mpz_clear@plt>
   595d0:	add	x0, x21, x19
   595d4:	add	x19, x19, #0x10
   595d8:	bl	c170 <mpfr_mpz_clear@plt>
   595dc:	cmp	x23, x19
   595e0:	b.ne	595c0 <mpfr_log_ui@@Base+0x3e8>  // b.any
   595e4:	ldr	x0, [x29, #192]
   595e8:	cmn	x0, #0x5
   595ec:	b.eq	597f4 <mpfr_log_ui@@Base+0x61c>  // b.none
   595f0:	ldr	x0, [x29, #136]
   595f4:	cmp	x0, #0x1
   595f8:	b.ls	597fc <mpfr_log_ui@@Base+0x624>  // b.plast
   595fc:	ldr	w2, [x29, #132]
   59600:	ldr	x1, [x29, #256]
   59604:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   59608:	cmp	x1, x0
   5960c:	b.le	59768 <mpfr_log_ui@@Base+0x590>
   59610:	ldr	x3, [x29, #168]
   59614:	sub	x2, x24, w2, uxtw
   59618:	ldr	w0, [x29, #204]
   5961c:	ldr	x1, [x29, #240]
   59620:	cmp	w0, #0x0
   59624:	ldr	x0, [x29, #264]
   59628:	sub	x1, x1, #0x1
   5962c:	ldr	x3, [x3]
   59630:	asr	x1, x1, #6
   59634:	add	x1, x1, #0x1
   59638:	cinc	x3, x3, eq  // eq = none
   5963c:	bl	c370 <mpfr_round_p@plt>
   59640:	cbz	w0, 59768 <mpfr_log_ui@@Base+0x590>
   59644:	ldr	w2, [x29, #204]
   59648:	mov	x1, x28
   5964c:	ldr	w3, [x29, #248]
   59650:	ldr	x24, [x29, #168]
   59654:	mov	x0, x24
   59658:	bl	c6a0 <mpfr_set4@plt>
   5965c:	ldr	x1, [x29, #336]
   59660:	mov	w20, w0
   59664:	cbz	x1, 59670 <mpfr_log_ui@@Base+0x498>
   59668:	ldr	x0, [x29, #344]
   5966c:	bl	cc20 <mpfr_free_func@plt>
   59670:	ldr	x3, [x29, #176]
   59674:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59678:	ldr	x1, [x0, #2576]
   5967c:	add	x0, x0, #0xa10
   59680:	blr	x1
   59684:	ldr	w1, [x29, #200]
   59688:	add	x2, x3, x0
   5968c:	str	w1, [x3, x0]
   59690:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59694:	ldr	x4, [x0, #2512]
   59698:	add	x0, x0, #0x9d0
   5969c:	blr	x4
   596a0:	ldr	x4, [x29, #120]
   596a4:	str	x4, [x3, x0]
   596a8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   596ac:	ldr	x5, [x0, #2544]
   596b0:	add	x0, x0, #0x9f0
   596b4:	blr	x5
   596b8:	ldr	x1, [x24, #16]
   596bc:	ldr	x5, [x29, #112]
   596c0:	str	x5, [x3, x0]
   596c4:	cmp	x4, x1
   596c8:	ccmp	x5, x1, #0x1, le
   596cc:	b.ge	59754 <mpfr_log_ui@@Base+0x57c>  // b.tcont
   596d0:	ldr	w2, [x29, #204]
   596d4:	mov	w1, w20
   596d8:	mov	x0, x24
   596dc:	bl	cb30 <mpfr_check_range@plt>
   596e0:	mov	w20, w0
   596e4:	b	59228 <mpfr_log_ui@@Base+0x50>
   596e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   596ec:	ldr	x1, [x0, #2560]
   596f0:	add	x0, x0, #0xa00
   596f4:	blr	x1
   596f8:	mrs	x1, tpidr_el0
   596fc:	add	x1, x1, x0
   59700:	mov	x0, x24
   59704:	bl	c380 <mpfr_cache@plt>
   59708:	mov	w20, w0
   5970c:	b	59228 <mpfr_log_ui@@Base+0x50>
   59710:	mov	x1, x0
   59714:	tbnz	w19, #0, 5985c <mpfr_log_ui@@Base+0x684>
   59718:	add	x0, x25, x25, lsr #63
   5971c:	sub	x1, x1, #0x1
   59720:	asr	x25, x0, #1
   59724:	tbz	w0, #1, 59718 <mpfr_log_ui@@Base+0x540>
   59728:	cmp	x25, #0x0
   5972c:	str	x1, [x29, #184]
   59730:	cneg	x0, x25, lt  // lt = tstop
   59734:	str	x0, [x29, #144]
   59738:	b	593e4 <mpfr_log_ui@@Base+0x20c>
   5973c:	lsl	x0, x20, #4
   59740:	str	x0, [x29, #336]
   59744:	bl	ccf0 <mpfr_allocate_func@plt>
   59748:	mov	x1, x0
   5974c:	str	x0, [x29, #344]
   59750:	b	59350 <mpfr_log_ui@@Base+0x178>
   59754:	cbz	w20, 59228 <mpfr_log_ui@@Base+0x50>
   59758:	ldr	w0, [x29, #200]
   5975c:	orr	w0, w0, #0x8
   59760:	str	w0, [x2]
   59764:	b	59228 <mpfr_log_ui@@Base+0x50>
   59768:	ldr	x1, [x29, #104]
   5976c:	mov	x0, #0xfffffffffffffeff    	// #-257
   59770:	movk	x0, #0x7fff, lsl #48
   59774:	sub	x0, x0, x24
   59778:	cmp	x0, x1
   5977c:	b.lt	5986c <mpfr_log_ui@@Base+0x694>  // b.tstop
   59780:	add	x24, x24, x1
   59784:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   59788:	cmp	x24, x0
   5978c:	add	x0, x24, x24, lsr #63
   59790:	ldr	x1, [x29, #336]
   59794:	asr	x0, x0, #1
   59798:	str	x0, [x29, #104]
   5979c:	b.ge	59884 <mpfr_log_ui@@Base+0x6ac>  // b.tcont
   597a0:	sub	x19, x24, #0x1
   597a4:	asr	x19, x19, #6
   597a8:	add	x19, x19, #0x1
   597ac:	lsl	x2, x19, #4
   597b0:	str	x2, [x29, #336]
   597b4:	cbz	x1, 597e4 <mpfr_log_ui@@Base+0x60c>
   597b8:	ldr	x0, [x29, #344]
   597bc:	bl	c1c0 <mpfr_reallocate_func@plt>
   597c0:	str	x0, [x29, #344]
   597c4:	add	x19, x0, x19, lsl #3
   597c8:	str	x24, [x29, #240]
   597cc:	stp	x0, x24, [x29, #264]
   597d0:	mov	w0, #0x1                   	// #1
   597d4:	str	w0, [x29, #248]
   597d8:	str	w0, [x29, #280]
   597dc:	str	x19, [x29, #296]
   597e0:	b	59428 <mpfr_log_ui@@Base+0x250>
   597e4:	mov	x0, x2
   597e8:	bl	ccf0 <mpfr_allocate_func@plt>
   597ec:	str	x0, [x29, #344]
   597f0:	b	597c4 <mpfr_log_ui@@Base+0x5ec>
   597f4:	mov	w2, #0x1                   	// #1
   597f8:	b	59600 <mpfr_log_ui@@Base+0x428>
   597fc:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   59800:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   59804:	add	x2, x2, #0xf18
   59808:	add	x0, x0, #0xf08
   5980c:	mov	w1, #0xda                  	// #218
   59810:	bl	cb40 <mpfr_assert_fail@plt>
   59814:	mov	x0, #0xb                   	// #11
   59818:	mov	x22, x0
   5981c:	b	59344 <mpfr_log_ui@@Base+0x16c>
   59820:	mov	w1, #0x95                  	// #149
   59824:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   59828:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5982c:	add	x2, x2, #0x508
   59830:	add	x0, x0, #0xf08
   59834:	bl	cb40 <mpfr_assert_fail@plt>
   59838:	ldr	x0, [x24]
   5983c:	mov	w1, #0x40                  	// #64
   59840:	sub	x0, x0, #0x1
   59844:	clz	x0, x0
   59848:	sub	w0, w1, w0
   5984c:	add	x1, x20, w0, sxtw
   59850:	add	x0, x1, #0xa
   59854:	mov	x22, x0
   59858:	b	59324 <mpfr_log_ui@@Base+0x14c>
   5985c:	cmp	x19, #0x0
   59860:	cneg	x0, x19, lt  // lt = tstop
   59864:	str	x0, [x29, #144]
   59868:	b	593e4 <mpfr_log_ui@@Base+0x20c>
   5986c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   59870:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   59874:	add	x2, x2, #0x610
   59878:	add	x0, x0, #0xf08
   5987c:	mov	w1, #0xde                  	// #222
   59880:	bl	cb40 <mpfr_assert_fail@plt>
   59884:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000059888 <mpfr_gamma_inc@@Base>:
   59888:	sub	sp, sp, #0x2c0
   5988c:	stp	x29, x30, [sp]
   59890:	mov	x29, sp
   59894:	stp	x19, x20, [sp, #16]
   59898:	ldr	x19, [x1, #16]
   5989c:	stp	x21, x22, [sp, #32]
   598a0:	mov	x21, x1
   598a4:	stp	x23, x24, [sp, #48]
   598a8:	mov	x23, x2
   598ac:	str	x0, [sp, #104]
   598b0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   598b4:	str	w3, [sp, #120]
   598b8:	cmp	x19, x0
   598bc:	b.le	59f0c <mpfr_gamma_inc@@Base+0x684>
   598c0:	ldr	x1, [x2, #16]
   598c4:	cmp	x1, x0
   598c8:	b.le	59f20 <mpfr_gamma_inc@@Base+0x698>
   598cc:	ldr	w0, [x23, #8]
   598d0:	tbnz	w0, #31, 59b48 <mpfr_gamma_inc@@Base+0x2c0>
   598d4:	mov	x0, x21
   598d8:	stp	x25, x26, [sp, #64]
   598dc:	stp	x27, x28, [sp, #80]
   598e0:	bl	c160 <mpfr_integer_p@plt>
   598e4:	cbz	w0, 59e50 <mpfr_gamma_inc@@Base+0x5c8>
   598e8:	mrs	x3, tpidr_el0
   598ec:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   598f0:	ldr	x1, [x0, #2576]
   598f4:	add	x0, x0, #0xa10
   598f8:	blr	x1
   598fc:	ldr	w2, [x21, #8]
   59900:	ldr	x1, [sp, #104]
   59904:	str	x3, [sp, #112]
   59908:	ldr	w0, [x3, x0]
   5990c:	str	w0, [sp, #124]
   59910:	ldr	x1, [x1]
   59914:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59918:	ldr	x4, [x0, #2512]
   5991c:	add	x0, x0, #0x9d0
   59920:	blr	x4
   59924:	add	x4, x3, x0
   59928:	ldr	x0, [x3, x0]
   5992c:	str	x0, [sp, #136]
   59930:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59934:	ldr	x5, [x0, #2544]
   59938:	add	x0, x0, #0x9f0
   5993c:	blr	x5
   59940:	mov	x5, x3
   59944:	add	x3, x3, x0
   59948:	ldr	x0, [x5, x0]
   5994c:	str	x0, [sp, #128]
   59950:	tbnz	w2, #31, 5a1a0 <mpfr_gamma_inc@@Base+0x918>
   59954:	ldr	x3, [sp, #112]
   59958:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5995c:	ldr	x2, [x0, #2512]
   59960:	add	x0, x0, #0x9d0
   59964:	blr	x2
   59968:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   5996c:	add	x25, x1, #0xd
   59970:	str	x2, [x3, x0]
   59974:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59978:	ldr	x4, [x0, #2544]
   5997c:	add	x0, x0, #0x9f0
   59980:	blr	x4
   59984:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   59988:	str	x2, [x3, x0]
   5998c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   59990:	cmp	x25, x0
   59994:	b.ge	5a724 <mpfr_gamma_inc@@Base+0xe9c>  // b.tcont
   59998:	add	x19, x1, #0x4b
   5999c:	adds	x1, x1, #0xc
   599a0:	csel	x19, x19, x1, mi  // mi = first
   599a4:	asr	x19, x19, #6
   599a8:	add	x19, x19, #0x1
   599ac:	lsl	x0, x19, #1
   599b0:	cmp	x0, #0x10
   599b4:	b.gt	59f8c <mpfr_gamma_inc@@Base+0x704>
   599b8:	add	x0, sp, #0x1b0
   599bc:	stp	xzr, x0, [sp, #416]
   599c0:	mov	x1, x0
   599c4:	mov	w2, #0x1                   	// #1
   599c8:	mov	x0, #0x40                  	// #64
   599cc:	add	x20, sp, #0xe0
   599d0:	add	x19, x1, x19, lsl #3
   599d4:	add	x28, sp, #0xc0
   599d8:	add	x22, sp, #0xa0
   599dc:	add	x27, sp, #0x100
   599e0:	str	x0, [sp, #144]
   599e4:	mov	x0, x20
   599e8:	str	x25, [sp, #160]
   599ec:	str	w2, [sp, #168]
   599f0:	stp	x1, x25, [sp, #184]
   599f4:	mov	x1, #0x2                   	// #2
   599f8:	str	w2, [sp, #200]
   599fc:	str	x19, [sp, #216]
   59a00:	bl	ca80 <mpfr_init2@plt>
   59a04:	ldr	x2, [x21]
   59a08:	ldr	x0, [x21, #16]
   59a0c:	cmp	x0, x2
   59a10:	csel	x1, x0, x2, ge  // ge = tcont
   59a14:	cmp	x0, #0x0
   59a18:	b.le	59eac <mpfr_gamma_inc@@Base+0x624>
   59a1c:	add	x1, x1, #0x1
   59a20:	mov	x0, x20
   59a24:	bl	bed0 <mpfr_set_prec@plt>
   59a28:	ldr	x24, [x21, #16]
   59a2c:	mov	x1, #0x1                   	// #1
   59a30:	mov	x2, x21
   59a34:	mov	w3, #0x4                   	// #4
   59a38:	cmp	x24, #0x0
   59a3c:	mov	x0, x28
   59a40:	csel	x24, x24, x1, gt
   59a44:	bl	c2f0 <mpfr_ui_div@plt>
   59a48:	ldr	w3, [sp, #200]
   59a4c:	mov	x1, x28
   59a50:	mov	x0, x22
   59a54:	mov	w2, #0x4                   	// #4
   59a58:	bl	c6a0 <mpfr_set4@plt>
   59a5c:	ldr	w0, [x21, #8]
   59a60:	tbnz	w0, #31, 59fbc <mpfr_gamma_inc@@Base+0x734>
   59a64:	mov	x19, #0x1                   	// #1
   59a68:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   59a6c:	nop
   59a70:	mov	x2, x23
   59a74:	mov	x1, x28
   59a78:	mov	w3, #0x2                   	// #2
   59a7c:	mov	x0, x28
   59a80:	bl	bd50 <mpfr_mul@plt>
   59a84:	mov	x2, x19
   59a88:	mov	x1, x21
   59a8c:	mov	w3, #0x1                   	// #1
   59a90:	mov	x0, x20
   59a94:	bl	c260 <mpfr_add_ui@plt>
   59a98:	mov	x2, x20
   59a9c:	mov	x1, x28
   59aa0:	mov	w3, #0x4                   	// #4
   59aa4:	mov	x0, x28
   59aa8:	bl	c620 <mpfr_div@plt>
   59aac:	mov	x1, x22
   59ab0:	mov	x2, x28
   59ab4:	mov	x0, x22
   59ab8:	mov	w3, #0x1                   	// #1
   59abc:	bl	c1a0 <mpfr_add@plt>
   59ac0:	ldr	x5, [sp, #176]
   59ac4:	ldr	w0, [x21, #8]
   59ac8:	cmp	x5, x26
   59acc:	ldr	x1, [sp, #208]
   59ad0:	csel	x5, x1, x5, eq  // eq = none
   59ad4:	tbnz	w0, #31, 59b9c <mpfr_gamma_inc@@Base+0x314>
   59ad8:	ldr	x0, [sp, #208]
   59adc:	ldr	x1, [sp, #240]
   59ae0:	add	x0, x25, x0
   59ae4:	cmp	x0, x5
   59ae8:	b.gt	59b08 <mpfr_gamma_inc@@Base+0x280>
   59aec:	ldr	w0, [sp, #232]
   59af0:	cmp	w0, #0x0
   59af4:	b.le	59b08 <mpfr_gamma_inc@@Base+0x280>
   59af8:	ldr	x0, [x23, #16]
   59afc:	add	x0, x0, #0x1
   59b00:	cmp	x0, x1
   59b04:	b.lt	59bd4 <mpfr_gamma_inc@@Base+0x34c>  // b.tstop
   59b08:	cmp	x24, x1
   59b0c:	b.ge	59b24 <mpfr_gamma_inc@@Base+0x29c>  // b.tcont
   59b10:	mov	x24, x1
   59b14:	mov	x0, x20
   59b18:	ldr	x1, [sp, #224]
   59b1c:	add	x1, x1, #0x1
   59b20:	bl	bed0 <mpfr_set_prec@plt>
   59b24:	add	x19, x19, #0x1
   59b28:	b	59a70 <mpfr_gamma_inc@@Base+0x1e8>
   59b2c:	ldr	w1, [x21, #8]
   59b30:	ldr	w0, [x23, #8]
   59b34:	cmp	w1, #0x0
   59b38:	b.le	5a6ac <mpfr_gamma_inc@@Base+0xe24>
   59b3c:	cmp	w0, #0x0
   59b40:	b.le	5a6ac <mpfr_gamma_inc@@Base+0xe24>
   59b44:	nop
   59b48:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59b4c:	ldr	x2, [x0, #2576]
   59b50:	add	x0, x0, #0xa10
   59b54:	blr	x2
   59b58:	mrs	x1, tpidr_el0
   59b5c:	ldr	x2, [sp, #104]
   59b60:	add	x0, x1, x0
   59b64:	mov	x1, #0x2                   	// #2
   59b68:	mov	w19, #0x0                   	// #0
   59b6c:	movk	x1, #0x8000, lsl #48
   59b70:	str	x1, [x2, #16]
   59b74:	ldr	w1, [x0]
   59b78:	orr	w1, w1, #0x4
   59b7c:	str	w1, [x0]
   59b80:	mov	w0, w19
   59b84:	ldp	x29, x30, [sp]
   59b88:	ldp	x19, x20, [sp, #16]
   59b8c:	ldp	x21, x22, [sp, #32]
   59b90:	ldp	x23, x24, [sp, #48]
   59b94:	add	sp, sp, #0x2c0
   59b98:	ret
   59b9c:	ldr	w0, [sp, #200]
   59ba0:	mov	x2, x28
   59ba4:	str	x5, [sp, #96]
   59ba8:	mov	x1, x27
   59bac:	cmp	w0, #0x0
   59bb0:	mov	w3, #0x2                   	// #2
   59bb4:	mov	x0, x27
   59bb8:	b.le	59bc8 <mpfr_gamma_inc@@Base+0x340>
   59bbc:	bl	c1a0 <mpfr_add@plt>
   59bc0:	ldr	x5, [sp, #96]
   59bc4:	b	59ad8 <mpfr_gamma_inc@@Base+0x250>
   59bc8:	bl	bb70 <mpfr_sub@plt>
   59bcc:	ldr	x5, [sp, #96]
   59bd0:	b	59ad8 <mpfr_gamma_inc@@Base+0x250>
   59bd4:	ldr	w0, [x21, #8]
   59bd8:	mov	x24, #0x0                   	// #0
   59bdc:	tbnz	w0, #31, 59fa4 <mpfr_gamma_inc@@Base+0x71c>
   59be0:	mov	x1, x23
   59be4:	mov	w2, #0x1                   	// #1
   59be8:	mov	x0, x28
   59bec:	bl	c750 <mpfr_exp@plt>
   59bf0:	mov	x2, x28
   59bf4:	mov	x1, x22
   59bf8:	mov	w3, #0x1                   	// #1
   59bfc:	mov	x0, x22
   59c00:	bl	c620 <mpfr_div@plt>
   59c04:	mov	x2, x21
   59c08:	mov	x1, x23
   59c0c:	mov	w3, #0x1                   	// #1
   59c10:	mov	x0, x28
   59c14:	bl	bd90 <mpfr_pow@plt>
   59c18:	mov	x1, x22
   59c1c:	mov	x2, x28
   59c20:	mov	w3, #0x1                   	// #1
   59c24:	mov	x0, x22
   59c28:	bl	bd50 <mpfr_mul@plt>
   59c2c:	ldr	x3, [sp, #112]
   59c30:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59c34:	ldr	x1, [x0, #2576]
   59c38:	add	x0, x0, #0xa10
   59c3c:	blr	x1
   59c40:	mov	x1, x21
   59c44:	mov	w2, #0x1                   	// #1
   59c48:	add	x26, x3, x0
   59c4c:	str	wzr, [x3, x0]
   59c50:	mov	x0, x28
   59c54:	bl	c7b0 <mpfr_gamma@plt>
   59c58:	ldr	w0, [x26]
   59c5c:	tbnz	w0, #1, 5a05c <mpfr_gamma_inc@@Base+0x7d4>
   59c60:	ldr	x5, [sp, #176]
   59c64:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   59c68:	ldr	x26, [sp, #208]
   59c6c:	cmp	x5, x0
   59c70:	b.ne	59c8c <mpfr_gamma_inc@@Base+0x404>  // b.any
   59c74:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59c78:	ldr	x1, [x0, #2512]
   59c7c:	add	x0, x0, #0x9d0
   59c80:	blr	x1
   59c84:	ldr	x1, [sp, #112]
   59c88:	ldr	x5, [x1, x0]
   59c8c:	mov	x1, x28
   59c90:	mov	w3, #0x1                   	// #1
   59c94:	mov	x2, x22
   59c98:	mov	x0, x22
   59c9c:	str	x5, [sp, #96]
   59ca0:	bl	bb70 <mpfr_sub@plt>
   59ca4:	lsl	x19, x19, #1
   59ca8:	ldr	x3, [sp, #176]
   59cac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   59cb0:	add	x24, x24, #0x1
   59cb4:	cmp	x3, x0
   59cb8:	csel	x1, x26, x3, eq  // eq = none
   59cbc:	cmn	x19, #0x6
   59cc0:	ldr	x5, [sp, #96]
   59cc4:	b.eq	59ce8 <mpfr_gamma_inc@@Base+0x460>  // b.none
   59cc8:	add	x0, x19, #0x7
   59ccc:	cmp	x0, #0x1
   59cd0:	b.ls	5a188 <mpfr_gamma_inc@@Base+0x900>  // b.plast
   59cd4:	add	x19, x19, #0x6
   59cd8:	mov	w2, #0x40                  	// #64
   59cdc:	clz	x0, x19
   59ce0:	sub	w0, w2, w0
   59ce4:	add	x24, x24, w0, sxtw
   59ce8:	add	x24, x5, x24
   59cec:	cmp	x26, x24
   59cf0:	b.eq	59f00 <mpfr_gamma_inc@@Base+0x678>  // b.none
   59cf4:	csel	x26, x26, x24, ge  // ge = tcont
   59cf8:	cmp	x1, #0x0
   59cfc:	ccmp	x1, x26, #0x0, le
   59d00:	b.ge	59e0c <mpfr_gamma_inc@@Base+0x584>  // b.tcont
   59d04:	sub	x26, x26, x1
   59d08:	add	x2, x26, #0x1
   59d0c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   59d10:	cmp	x3, x0
   59d14:	b.le	59fe0 <mpfr_gamma_inc@@Base+0x758>
   59d18:	ldr	x3, [sp, #104]
   59d1c:	sub	x2, x25, x2
   59d20:	ldr	w0, [sp, #120]
   59d24:	ldr	x1, [sp, #160]
   59d28:	cmp	w0, #0x0
   59d2c:	ldr	x0, [sp, #184]
   59d30:	sub	x1, x1, #0x1
   59d34:	ldr	x3, [x3]
   59d38:	asr	x1, x1, #6
   59d3c:	add	x1, x1, #0x1
   59d40:	cinc	x3, x3, eq  // eq = none
   59d44:	bl	c370 <mpfr_round_p@plt>
   59d48:	cbz	w0, 59fe0 <mpfr_gamma_inc@@Base+0x758>
   59d4c:	mov	x0, x20
   59d50:	bl	c070 <mpfr_clear@plt>
   59d54:	ldr	w2, [sp, #120]
   59d58:	mov	x1, x22
   59d5c:	ldr	w3, [sp, #168]
   59d60:	ldr	x0, [sp, #104]
   59d64:	bl	c6a0 <mpfr_set4@plt>
   59d68:	mov	w19, w0
   59d6c:	ldr	x1, [sp, #416]
   59d70:	cbnz	x1, 59ed0 <mpfr_gamma_inc@@Base+0x648>
   59d74:	ldp	x6, x3, [sp, #104]
   59d78:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59d7c:	ldr	x1, [x0, #2576]
   59d80:	add	x0, x0, #0xa10
   59d84:	blr	x1
   59d88:	ldr	w1, [sp, #124]
   59d8c:	add	x2, x3, x0
   59d90:	str	w1, [x3, x0]
   59d94:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59d98:	ldr	x4, [x0, #2512]
   59d9c:	add	x0, x0, #0x9d0
   59da0:	blr	x4
   59da4:	ldr	x4, [sp, #136]
   59da8:	str	x4, [x3, x0]
   59dac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59db0:	ldr	x5, [x0, #2544]
   59db4:	add	x0, x0, #0x9f0
   59db8:	blr	x5
   59dbc:	ldr	x1, [x6, #16]
   59dc0:	ldr	x5, [sp, #128]
   59dc4:	str	x5, [x3, x0]
   59dc8:	cmp	x1, x5
   59dcc:	ccmp	x1, x4, #0x1, le
   59dd0:	b.ge	59e1c <mpfr_gamma_inc@@Base+0x594>  // b.tcont
   59dd4:	ldr	w2, [sp, #120]
   59dd8:	mov	w1, w19
   59ddc:	mov	x0, x6
   59de0:	bl	cb30 <mpfr_check_range@plt>
   59de4:	mov	w19, w0
   59de8:	mov	w0, w19
   59dec:	ldp	x29, x30, [sp]
   59df0:	ldp	x19, x20, [sp, #16]
   59df4:	ldp	x21, x22, [sp, #32]
   59df8:	ldp	x23, x24, [sp, #48]
   59dfc:	ldp	x25, x26, [sp, #64]
   59e00:	ldp	x27, x28, [sp, #80]
   59e04:	add	sp, sp, #0x2c0
   59e08:	ret
   59e0c:	cmp	x1, x26
   59e10:	mov	x2, #0x2                   	// #2
   59e14:	b.ge	59d0c <mpfr_gamma_inc@@Base+0x484>  // b.tcont
   59e18:	b	59d04 <mpfr_gamma_inc@@Base+0x47c>
   59e1c:	cbz	w19, 59edc <mpfr_gamma_inc@@Base+0x654>
   59e20:	ldr	w0, [sp, #124]
   59e24:	ldp	x25, x26, [sp, #64]
   59e28:	orr	w0, w0, #0x8
   59e2c:	ldp	x27, x28, [sp, #80]
   59e30:	str	w0, [x2]
   59e34:	mov	w0, w19
   59e38:	ldp	x29, x30, [sp]
   59e3c:	ldp	x19, x20, [sp, #16]
   59e40:	ldp	x21, x22, [sp, #32]
   59e44:	ldp	x23, x24, [sp, #48]
   59e48:	add	sp, sp, #0x2c0
   59e4c:	ret
   59e50:	mrs	x2, tpidr_el0
   59e54:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59e58:	ldr	x1, [x0, #2576]
   59e5c:	add	x0, x0, #0xa10
   59e60:	blr	x1
   59e64:	ldr	x1, [sp, #104]
   59e68:	str	x2, [sp, #112]
   59e6c:	ldr	w0, [x2, x0]
   59e70:	str	w0, [sp, #124]
   59e74:	ldr	x1, [x1]
   59e78:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59e7c:	ldr	x3, [x0, #2512]
   59e80:	add	x0, x0, #0x9d0
   59e84:	blr	x3
   59e88:	ldr	x0, [x2, x0]
   59e8c:	str	x0, [sp, #136]
   59e90:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   59e94:	ldr	x3, [x0, #2544]
   59e98:	add	x0, x0, #0x9f0
   59e9c:	blr	x3
   59ea0:	ldr	x0, [x2, x0]
   59ea4:	str	x0, [sp, #128]
   59ea8:	b	59954 <mpfr_gamma_inc@@Base+0xcc>
   59eac:	mov	x1, #0x1                   	// #1
   59eb0:	sub	x0, x1, x0
   59eb4:	mov	x1, #0xfffffffffffffeff    	// #-257
   59eb8:	movk	x1, #0x7fff, lsl #48
   59ebc:	sub	x1, x1, x2
   59ec0:	cmp	x0, x1
   59ec4:	b.gt	5a11c <mpfr_gamma_inc@@Base+0x894>
   59ec8:	add	x1, x0, x2
   59ecc:	b	59a1c <mpfr_gamma_inc@@Base+0x194>
   59ed0:	ldr	x0, [sp, #424]
   59ed4:	bl	cc20 <mpfr_free_func@plt>
   59ed8:	b	59d74 <mpfr_gamma_inc@@Base+0x4ec>
   59edc:	mov	w0, w19
   59ee0:	ldp	x29, x30, [sp]
   59ee4:	ldp	x19, x20, [sp, #16]
   59ee8:	ldp	x21, x22, [sp, #32]
   59eec:	ldp	x23, x24, [sp, #48]
   59ef0:	ldp	x25, x26, [sp, #64]
   59ef4:	ldp	x27, x28, [sp, #80]
   59ef8:	add	sp, sp, #0x2c0
   59efc:	ret
   59f00:	sub	x26, x26, x1
   59f04:	add	x2, x26, #0x2
   59f08:	b	59d0c <mpfr_gamma_inc@@Base+0x484>
   59f0c:	mov	x0, #0x2                   	// #2
   59f10:	movk	x0, #0x8000, lsl #48
   59f14:	cmp	x19, x0
   59f18:	b.eq	59b48 <mpfr_gamma_inc@@Base+0x2c0>  // b.none
   59f1c:	ldr	x1, [x2, #16]
   59f20:	mov	x20, #0x2                   	// #2
   59f24:	movk	x20, #0x8000, lsl #48
   59f28:	cmp	x1, x20
   59f2c:	b.eq	59b48 <mpfr_gamma_inc@@Base+0x2c0>  // b.none
   59f30:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   59f34:	cmp	x1, x0
   59f38:	cset	w2, eq  // eq = none
   59f3c:	cmp	x19, x0
   59f40:	cset	w3, eq  // eq = none
   59f44:	cmp	w3, #0x0
   59f48:	ccmp	w2, #0x0, #0x0, eq  // eq = none
   59f4c:	b.eq	5a074 <mpfr_gamma_inc@@Base+0x7ec>  // b.none
   59f50:	cmp	w3, #0x0
   59f54:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   59f58:	b.ne	59b2c <mpfr_gamma_inc@@Base+0x2a4>  // b.any
   59f5c:	cmp	x19, x0
   59f60:	b.eq	5a14c <mpfr_gamma_inc@@Base+0x8c4>  // b.none
   59f64:	ldr	w0, [x23, #8]
   59f68:	cmp	w0, #0x0
   59f6c:	b.le	59b48 <mpfr_gamma_inc@@Base+0x2c0>
   59f70:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   59f74:	ldr	x2, [sp, #104]
   59f78:	mov	w1, #0x1                   	// #1
   59f7c:	mov	w19, #0x0                   	// #0
   59f80:	str	w1, [x2, #8]
   59f84:	str	x0, [x2, #16]
   59f88:	b	59b80 <mpfr_gamma_inc@@Base+0x2f8>
   59f8c:	lsl	x0, x19, #4
   59f90:	str	x0, [sp, #416]
   59f94:	bl	ccf0 <mpfr_allocate_func@plt>
   59f98:	mov	x1, x0
   59f9c:	str	x0, [sp, #424]
   59fa0:	b	599c4 <mpfr_gamma_inc@@Base+0x13c>
   59fa4:	ldr	x1, [sp, #272]
   59fa8:	mov	x0, x27
   59fac:	ldr	x24, [sp, #176]
   59fb0:	sub	x24, x1, x24
   59fb4:	bl	c070 <mpfr_clear@plt>
   59fb8:	b	59be0 <mpfr_gamma_inc@@Base+0x358>
   59fbc:	mov	x0, x27
   59fc0:	mov	x1, #0x20                  	// #32
   59fc4:	bl	ca80 <mpfr_init2@plt>
   59fc8:	mov	x1, x22
   59fcc:	mov	x0, x27
   59fd0:	mov	w3, #0x1                   	// #1
   59fd4:	mov	w2, #0x2                   	// #2
   59fd8:	bl	c6a0 <mpfr_set4@plt>
   59fdc:	b	59a64 <mpfr_gamma_inc@@Base+0x1dc>
   59fe0:	ldr	x1, [sp, #144]
   59fe4:	mov	x0, #0xfffffffffffffeff    	// #-257
   59fe8:	movk	x0, #0x7fff, lsl #48
   59fec:	sub	x0, x0, x25
   59ff0:	cmp	x0, x1
   59ff4:	b.lt	5a694 <mpfr_gamma_inc@@Base+0xe0c>  // b.tstop
   59ff8:	add	x25, x25, x1
   59ffc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5a000:	cmp	x25, x0
   5a004:	add	x0, x25, x25, lsr #63
   5a008:	ldr	x1, [sp, #416]
   5a00c:	asr	x0, x0, #1
   5a010:	str	x0, [sp, #144]
   5a014:	b.ge	5a724 <mpfr_gamma_inc@@Base+0xe9c>  // b.tcont
   5a018:	sub	x19, x25, #0x1
   5a01c:	asr	x19, x19, #6
   5a020:	add	x19, x19, #0x1
   5a024:	lsl	x2, x19, #4
   5a028:	str	x2, [sp, #416]
   5a02c:	cbz	x1, 5a10c <mpfr_gamma_inc@@Base+0x884>
   5a030:	ldr	x0, [sp, #424]
   5a034:	bl	c1c0 <mpfr_reallocate_func@plt>
   5a038:	str	x0, [sp, #424]
   5a03c:	mov	w1, #0x1                   	// #1
   5a040:	add	x19, x0, x19, lsl #3
   5a044:	str	x25, [sp, #160]
   5a048:	str	w1, [sp, #168]
   5a04c:	stp	x0, x25, [sp, #184]
   5a050:	str	w1, [sp, #200]
   5a054:	str	x19, [sp, #216]
   5a058:	b	59a04 <mpfr_gamma_inc@@Base+0x17c>
   5a05c:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   5a060:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5a064:	add	x2, x2, #0xfa8
   5a068:	add	x0, x0, #0xf30
   5a06c:	mov	w1, #0x122                 	// #290
   5a070:	bl	cb40 <mpfr_assert_fail@plt>
   5a074:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5a078:	cmp	x1, x0
   5a07c:	ccmp	x19, x0, #0x4, ne  // ne = any
   5a080:	b.ne	598cc <mpfr_gamma_inc@@Base+0x44>  // b.any
   5a084:	cmp	x19, x0
   5a088:	b.ne	5a640 <mpfr_gamma_inc@@Base+0xdb8>  // b.any
   5a08c:	mov	x0, x23
   5a090:	bl	c710 <mpfr_sgn@plt>
   5a094:	tbnz	w0, #31, 5a6b4 <mpfr_gamma_inc@@Base+0xe2c>
   5a098:	ldr	x1, [x23, #16]
   5a09c:	cmp	x1, x19
   5a0a0:	b.eq	5a640 <mpfr_gamma_inc@@Base+0xdb8>  // b.none
   5a0a4:	ldr	w0, [x23, #8]
   5a0a8:	ldr	x3, [x23]
   5a0ac:	neg	w0, w0
   5a0b0:	ldr	x2, [x23, #24]
   5a0b4:	str	x3, [sp, #560]
   5a0b8:	ldr	w4, [sp, #120]
   5a0bc:	str	w0, [sp, #568]
   5a0c0:	str	x1, [sp, #576]
   5a0c4:	cmp	w4, #0x2
   5a0c8:	str	x2, [sp, #584]
   5a0cc:	b.eq	5a700 <mpfr_gamma_inc@@Base+0xe78>  // b.none
   5a0d0:	cmp	w4, #0x3
   5a0d4:	mov	w0, #0x2                   	// #2
   5a0d8:	csel	w0, w4, w0, ne  // ne = any
   5a0dc:	str	w0, [sp, #120]
   5a0e0:	ldr	w2, [sp, #120]
   5a0e4:	add	x1, sp, #0x230
   5a0e8:	ldr	x19, [sp, #104]
   5a0ec:	mov	x0, x19
   5a0f0:	bl	c9e0 <mpfr_eint@plt>
   5a0f4:	mov	x2, x19
   5a0f8:	neg	w19, w0
   5a0fc:	ldr	w1, [x2, #8]
   5a100:	neg	w1, w1
   5a104:	str	w1, [x2, #8]
   5a108:	b	59b80 <mpfr_gamma_inc@@Base+0x2f8>
   5a10c:	mov	x0, x2
   5a110:	bl	ccf0 <mpfr_allocate_func@plt>
   5a114:	str	x0, [sp, #424]
   5a118:	b	5a03c <mpfr_gamma_inc@@Base+0x7b4>
   5a11c:	mov	w1, #0xd2                  	// #210
   5a120:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   5a124:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5a128:	add	x2, x2, #0xf40
   5a12c:	add	x0, x0, #0xf30
   5a130:	bl	cb40 <mpfr_assert_fail@plt>
   5a134:	ldr	x0, [x21, #16]
   5a138:	mov	x1, #0x1                   	// #1
   5a13c:	ldr	x2, [x21]
   5a140:	sub	x0, x1, x0
   5a144:	add	x1, x0, x2
   5a148:	b	59a1c <mpfr_gamma_inc@@Base+0x194>
   5a14c:	ldr	w0, [x21, #8]
   5a150:	cmp	w0, #0x0
   5a154:	b.le	5a160 <mpfr_gamma_inc@@Base+0x8d8>
   5a158:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5a15c:	b	59f74 <mpfr_gamma_inc@@Base+0x6ec>
   5a160:	mov	x0, x23
   5a164:	bl	c710 <mpfr_sgn@plt>
   5a168:	tbnz	w0, #31, 5a6b4 <mpfr_gamma_inc@@Base+0xe2c>
   5a16c:	mov	x0, x23
   5a170:	mov	x2, #0x0                   	// #0
   5a174:	mov	x1, #0x1                   	// #1
   5a178:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5a17c:	tbz	w0, #31, 59f70 <mpfr_gamma_inc@@Base+0x6e8>
   5a180:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5a184:	b	59f74 <mpfr_gamma_inc@@Base+0x6ec>
   5a188:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   5a18c:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5a190:	add	x2, x2, #0xfd8
   5a194:	add	x0, x0, #0xf30
   5a198:	mov	w1, #0x12e                 	// #302
   5a19c:	bl	cb40 <mpfr_assert_fail@plt>
   5a1a0:	ldr	x8, [x21]
   5a1a4:	mov	w7, #0x1                   	// #1
   5a1a8:	ldp	x2, x6, [x21, #16]
   5a1ac:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   5a1b0:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   5a1b4:	str	x5, [x4]
   5a1b8:	str	x0, [x3]
   5a1bc:	str	x8, [sp, #352]
   5a1c0:	add	x8, x1, #0xa
   5a1c4:	str	x8, [sp, #96]
   5a1c8:	str	w7, [sp, #360]
   5a1cc:	mov	x7, #0x7fffffffffffff00    	// #9223372036854775552
   5a1d0:	stp	x2, x6, [sp, #368]
   5a1d4:	cmp	x8, x7
   5a1d8:	b.ge	5a724 <mpfr_gamma_inc@@Base+0xe9c>  // b.tcont
   5a1dc:	add	x19, x1, #0x48
   5a1e0:	adds	x1, x1, #0x9
   5a1e4:	csel	x1, x19, x1, mi  // mi = first
   5a1e8:	asr	x19, x1, #6
   5a1ec:	add	x19, x19, #0x1
   5a1f0:	lsl	x0, x19, #1
   5a1f4:	cmp	x0, #0x10
   5a1f8:	b.gt	5a66c <mpfr_gamma_inc@@Base+0xde4>
   5a1fc:	add	x1, sp, #0x240
   5a200:	str	xzr, [sp, #560]
   5a204:	mov	x0, x1
   5a208:	str	x1, [sp, #568]
   5a20c:	mov	x3, #0x40                  	// #64
   5a210:	add	x1, sp, #0x180
   5a214:	add	x28, sp, #0x140
   5a218:	add	x24, sp, #0x120
   5a21c:	add	x26, sp, #0x160
   5a220:	stp	x1, x3, [sp, #144]
   5a224:	add	x19, x0, x19, lsl #3
   5a228:	ldr	x3, [sp, #96]
   5a22c:	mov	w1, #0x1                   	// #1
   5a230:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   5a234:	str	x3, [sp, #288]
   5a238:	str	w1, [sp, #296]
   5a23c:	str	x0, [sp, #312]
   5a240:	str	x3, [sp, #320]
   5a244:	str	w1, [sp, #328]
   5a248:	str	x19, [sp, #344]
   5a24c:	add	x1, x2, #0x2
   5a250:	add	x0, x2, #0x3
   5a254:	ldr	x2, [sp, #96]
   5a258:	mov	w3, #0x0                   	// #0
   5a25c:	mov	x19, #0x1                   	// #1
   5a260:	cmp	x1, x2
   5a264:	mov	x1, #0x1                   	// #1
   5a268:	csel	x0, x0, x2, ge  // ge = tcont
   5a26c:	mov	x2, x23
   5a270:	str	x0, [sp, #96]
   5a274:	mov	x0, x28
   5a278:	bl	c2f0 <mpfr_ui_div@plt>
   5a27c:	ldr	w3, [sp, #328]
   5a280:	mov	x1, x28
   5a284:	mov	x0, x24
   5a288:	mov	w2, #0x0                   	// #0
   5a28c:	bl	c6a0 <mpfr_set4@plt>
   5a290:	ldr	x27, [sp, #304]
   5a294:	mov	x20, x27
   5a298:	mov	x22, x27
   5a29c:	b	5a31c <mpfr_gamma_inc@@Base+0xa94>
   5a2a0:	mov	w3, #0x0                   	// #0
   5a2a4:	mov	x2, x19
   5a2a8:	mov	x1, x28
   5a2ac:	mov	x0, x28
   5a2b0:	bl	ba50 <mpfr_mul_ui@plt>
   5a2b4:	mov	x1, x28
   5a2b8:	mov	w2, #0x0                   	// #0
   5a2bc:	mov	x0, x28
   5a2c0:	bl	bd70 <mpfr_neg@plt>
   5a2c4:	mov	x2, x23
   5a2c8:	mov	x1, x28
   5a2cc:	mov	x0, x28
   5a2d0:	mov	w3, #0x0                   	// #0
   5a2d4:	bl	c620 <mpfr_div@plt>
   5a2d8:	ldr	x0, [sp, #336]
   5a2dc:	cmp	x0, x25
   5a2e0:	b.eq	5a334 <mpfr_gamma_inc@@Base+0xaac>  // b.none
   5a2e4:	cmp	x20, x0
   5a2e8:	mov	x2, x28
   5a2ec:	csel	x20, x20, x0, ge  // ge = tcont
   5a2f0:	mov	x1, x24
   5a2f4:	mov	x0, x24
   5a2f8:	mov	w3, #0x0                   	// #0
   5a2fc:	bl	c1a0 <mpfr_add@plt>
   5a300:	add	x19, x19, #0x1
   5a304:	ldr	x27, [sp, #304]
   5a308:	ldr	x0, [sp, #336]
   5a30c:	cmp	x27, x25
   5a310:	csel	x27, x0, x27, eq  // eq = none
   5a314:	cmp	x22, x27
   5a318:	csel	x22, x22, x27, ge  // ge = tcont
   5a31c:	mov	x1, x19
   5a320:	mov	x0, x26
   5a324:	mov	x2, #0x0                   	// #0
   5a328:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5a32c:	cmp	w0, #0x0
   5a330:	b.gt	5a2a0 <mpfr_gamma_inc@@Base+0xa18>
   5a334:	mov	x1, x19
   5a338:	cmp	x19, #0x1
   5a33c:	mov	x0, #0xffffffffffffffff    	// #-1
   5a340:	b.eq	5a368 <mpfr_gamma_inc@@Base+0xae0>  // b.none
   5a344:	b.ls	5a6e8 <mpfr_gamma_inc@@Base+0xe60>  // b.plast
   5a348:	sub	x0, x19, #0x1
   5a34c:	mov	w1, #0x40                  	// #64
   5a350:	clz	x0, x0
   5a354:	mov	x2, #0x1                   	// #1
   5a358:	sub	w1, w1, w0
   5a35c:	sxtw	x0, w1
   5a360:	add	x1, x2, w1, sxtw #1
   5a364:	sub	x0, x0, #0x1
   5a368:	ldp	x6, x3, [x23, #16]
   5a36c:	add	x20, x1, x20
   5a370:	ldr	x1, [x23]
   5a374:	add	x22, x0, x22
   5a378:	str	x1, [sp, #384]
   5a37c:	cmp	x22, x20
   5a380:	ldr	x1, [sp, #144]
   5a384:	add	x20, x20, #0x1
   5a388:	ldr	w0, [x23, #8]
   5a38c:	csinc	x22, x20, x22, lt  // lt = tstop
   5a390:	mov	w2, #0x0                   	// #0
   5a394:	stp	x6, x3, [sp, #400]
   5a398:	neg	w0, w0
   5a39c:	str	w0, [sp, #392]
   5a3a0:	mov	x0, x28
   5a3a4:	bl	c750 <mpfr_exp@plt>
   5a3a8:	sub	x19, x22, x27
   5a3ac:	mov	x2, x28
   5a3b0:	mov	x1, x24
   5a3b4:	mov	x0, x24
   5a3b8:	mov	w3, #0x0                   	// #0
   5a3bc:	bl	bd50 <mpfr_mul@plt>
   5a3c0:	ldr	x0, [sp, #304]
   5a3c4:	cmp	x0, x25
   5a3c8:	b.ne	5a3d4 <mpfr_gamma_inc@@Base+0xb4c>  // b.any
   5a3cc:	ldr	x0, [sp, #336]
   5a3d0:	add	x27, x27, x0
   5a3d4:	ldr	x1, [sp, #144]
   5a3d8:	cmp	x19, #0x2
   5a3dc:	mov	x0, #0x2                   	// #2
   5a3e0:	csel	x19, x19, x0, ge  // ge = tcont
   5a3e4:	mov	w2, #0x0                   	// #0
   5a3e8:	add	x19, x19, x0
   5a3ec:	mov	x0, x28
   5a3f0:	bl	c9e0 <mpfr_eint@plt>
   5a3f4:	mov	x1, x28
   5a3f8:	mov	w2, #0x0                   	// #0
   5a3fc:	mov	x0, x28
   5a400:	bl	bd70 <mpfr_neg@plt>
   5a404:	ldr	x6, [sp, #304]
   5a408:	mov	x2, x24
   5a40c:	mov	x1, x28
   5a410:	mov	x0, x24
   5a414:	cmp	x6, x25
   5a418:	mov	w3, #0x0                   	// #0
   5a41c:	csel	x27, x27, x6, eq  // eq = none
   5a420:	ldr	x20, [sp, #336]
   5a424:	bl	bb70 <mpfr_sub@plt>
   5a428:	ldr	x0, [sp, #304]
   5a42c:	cmp	x0, x25
   5a430:	b.eq	5a5b0 <mpfr_gamma_inc@@Base+0xd28>  // b.none
   5a434:	add	x5, x19, x27
   5a438:	sub	x1, x20, #0x1
   5a43c:	cmp	x5, x1
   5a440:	mov	w2, #0x0                   	// #0
   5a444:	csinc	x20, x20, x5, lt  // lt = tstop
   5a448:	mov	x1, x26
   5a44c:	sub	x19, x20, x0
   5a450:	mov	x0, x28
   5a454:	bl	c7b0 <mpfr_gamma@plt>
   5a458:	mov	x2, x26
   5a45c:	mov	x1, x28
   5a460:	mov	w3, #0x0                   	// #0
   5a464:	mov	x0, x28
   5a468:	bl	bd50 <mpfr_mul@plt>
   5a46c:	mov	x2, x28
   5a470:	mov	x1, x24
   5a474:	mov	w3, #0x0                   	// #0
   5a478:	mov	x0, x24
   5a47c:	bl	c620 <mpfr_div@plt>
   5a480:	cmp	x19, #0x1
   5a484:	mov	x0, #0x4                   	// #4
   5a488:	mov	w3, #0x0                   	// #0
   5a48c:	csinc	x19, x0, x19, le
   5a490:	mov	x2, #0x0                   	// #0
   5a494:	mov	x1, #0xffffffffffffffff    	// #-1
   5a498:	mov	x0, x28
   5a49c:	bl	ba80 <mpfr_set_si_2exp@plt>
   5a4a0:	mov	x2, x26
   5a4a4:	mov	x1, x28
   5a4a8:	mov	x0, x28
   5a4ac:	mov	w3, #0x0                   	// #0
   5a4b0:	bl	bd90 <mpfr_pow@plt>
   5a4b4:	ldr	w0, [sp, #328]
   5a4b8:	tbnz	w0, #31, 5a658 <mpfr_gamma_inc@@Base+0xdd0>
   5a4bc:	ldr	x1, [sp, #304]
   5a4c0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5a4c4:	cmp	x1, x0
   5a4c8:	b.le	5a5b0 <mpfr_gamma_inc@@Base+0xd28>
   5a4cc:	ldr	x2, [sp, #104]
   5a4d0:	ldr	w0, [sp, #120]
   5a4d4:	ldr	x1, [sp, #288]
   5a4d8:	cmp	w0, #0x0
   5a4dc:	ldr	x0, [sp, #312]
   5a4e0:	sub	x1, x1, #0x1
   5a4e4:	ldr	x3, [x2]
   5a4e8:	asr	x1, x1, #6
   5a4ec:	ldr	x2, [sp, #96]
   5a4f0:	add	x1, x1, #0x1
   5a4f4:	cinc	x3, x3, eq  // eq = none
   5a4f8:	sub	x2, x2, x19
   5a4fc:	bl	c370 <mpfr_round_p@plt>
   5a500:	cbz	w0, 5a5b0 <mpfr_gamma_inc@@Base+0xd28>
   5a504:	ldr	w2, [sp, #120]
   5a508:	mov	x1, x24
   5a50c:	ldr	w3, [sp, #296]
   5a510:	ldr	x0, [sp, #104]
   5a514:	bl	c6a0 <mpfr_set4@plt>
   5a518:	mov	w19, w0
   5a51c:	ldr	x1, [sp, #560]
   5a520:	cbz	x1, 5a52c <mpfr_gamma_inc@@Base+0xca4>
   5a524:	ldr	x0, [sp, #568]
   5a528:	bl	cc20 <mpfr_free_func@plt>
   5a52c:	ldr	x3, [sp, #112]
   5a530:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5a534:	ldr	x1, [x0, #2576]
   5a538:	add	x0, x0, #0xa10
   5a53c:	blr	x1
   5a540:	ldr	w1, [sp, #124]
   5a544:	add	x2, x3, x0
   5a548:	str	w1, [x3, x0]
   5a54c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5a550:	ldr	x4, [x0, #2512]
   5a554:	add	x0, x0, #0x9d0
   5a558:	blr	x4
   5a55c:	ldr	x1, [sp, #104]
   5a560:	ldr	x4, [sp, #136]
   5a564:	str	x4, [x3, x0]
   5a568:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5a56c:	ldr	x5, [x0, #2544]
   5a570:	add	x0, x0, #0x9f0
   5a574:	blr	x5
   5a578:	ldr	x1, [x1, #16]
   5a57c:	ldr	x5, [sp, #128]
   5a580:	str	x5, [x3, x0]
   5a584:	cmp	x5, x1
   5a588:	ccmp	x4, x1, #0x0, ge  // ge = tcont
   5a58c:	b.le	59e1c <mpfr_gamma_inc@@Base+0x594>
   5a590:	ldr	w2, [sp, #120]
   5a594:	mov	w1, w19
   5a598:	ldr	x0, [sp, #104]
   5a59c:	bl	cb30 <mpfr_check_range@plt>
   5a5a0:	mov	w19, w0
   5a5a4:	ldp	x25, x26, [sp, #64]
   5a5a8:	ldp	x27, x28, [sp, #80]
   5a5ac:	b	59b80 <mpfr_gamma_inc@@Base+0x2f8>
   5a5b0:	ldr	x1, [sp, #96]
   5a5b4:	mov	x0, #0xfffffffffffffeff    	// #-257
   5a5b8:	movk	x0, #0x7fff, lsl #48
   5a5bc:	sub	x0, x0, x1
   5a5c0:	ldr	x1, [sp, #152]
   5a5c4:	cmp	x0, x1
   5a5c8:	b.lt	5a70c <mpfr_gamma_inc@@Base+0xe84>  // b.tstop
   5a5cc:	ldr	x0, [sp, #96]
   5a5d0:	add	x2, x0, x1
   5a5d4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5a5d8:	cmp	x2, x0
   5a5dc:	str	x2, [sp, #96]
   5a5e0:	add	x0, x2, x2, lsr #63
   5a5e4:	ldr	x1, [sp, #560]
   5a5e8:	asr	x0, x0, #1
   5a5ec:	str	x0, [sp, #152]
   5a5f0:	b.ge	5a724 <mpfr_gamma_inc@@Base+0xe9c>  // b.tcont
   5a5f4:	sub	x19, x2, #0x1
   5a5f8:	asr	x19, x19, #6
   5a5fc:	add	x19, x19, #0x1
   5a600:	lsl	x2, x19, #4
   5a604:	str	x2, [sp, #560]
   5a608:	cbnz	x1, 5a684 <mpfr_gamma_inc@@Base+0xdfc>
   5a60c:	mov	x0, x2
   5a610:	bl	ccf0 <mpfr_allocate_func@plt>
   5a614:	str	x0, [sp, #568]
   5a618:	ldr	x2, [sp, #96]
   5a61c:	mov	w1, #0x1                   	// #1
   5a620:	add	x19, x0, x19, lsl #3
   5a624:	str	x2, [sp, #288]
   5a628:	str	w1, [sp, #296]
   5a62c:	stp	x0, x2, [sp, #312]
   5a630:	str	w1, [sp, #328]
   5a634:	str	x19, [sp, #344]
   5a638:	ldr	x2, [x21, #16]
   5a63c:	b	5a24c <mpfr_gamma_inc@@Base+0x9c4>
   5a640:	ldr	w2, [sp, #120]
   5a644:	mov	x1, x21
   5a648:	ldr	x0, [sp, #104]
   5a64c:	bl	c7b0 <mpfr_gamma@plt>
   5a650:	mov	w19, w0
   5a654:	b	59b80 <mpfr_gamma_inc@@Base+0x2f8>
   5a658:	mov	x1, x24
   5a65c:	mov	x0, x24
   5a660:	mov	w2, #0x0                   	// #0
   5a664:	bl	bd70 <mpfr_neg@plt>
   5a668:	b	5a4bc <mpfr_gamma_inc@@Base+0xc34>
   5a66c:	lsl	x0, x19, #4
   5a670:	str	x0, [sp, #560]
   5a674:	bl	ccf0 <mpfr_allocate_func@plt>
   5a678:	str	x0, [sp, #568]
   5a67c:	ldr	x2, [x21, #16]
   5a680:	b	5a20c <mpfr_gamma_inc@@Base+0x984>
   5a684:	ldr	x0, [sp, #568]
   5a688:	bl	c1c0 <mpfr_reallocate_func@plt>
   5a68c:	str	x0, [sp, #568]
   5a690:	b	5a618 <mpfr_gamma_inc@@Base+0xd90>
   5a694:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   5a698:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5a69c:	add	x2, x2, #0x610
   5a6a0:	add	x0, x0, #0xf30
   5a6a4:	mov	w1, #0x148                 	// #328
   5a6a8:	bl	cb40 <mpfr_assert_fail@plt>
   5a6ac:	tbz	w0, #31, 59f70 <mpfr_gamma_inc@@Base+0x6e8>
   5a6b0:	b	59b48 <mpfr_gamma_inc@@Base+0x2c0>
   5a6b4:	mrs	x1, tpidr_el0
   5a6b8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5a6bc:	ldr	x2, [x0, #2576]
   5a6c0:	add	x0, x0, #0xa10
   5a6c4:	blr	x2
   5a6c8:	add	x0, x1, x0
   5a6cc:	mov	w19, #0x0                   	// #0
   5a6d0:	ldr	x1, [sp, #104]
   5a6d4:	str	x20, [x1, #16]
   5a6d8:	ldr	w1, [x0]
   5a6dc:	orr	w1, w1, #0x4
   5a6e0:	str	w1, [x0]
   5a6e4:	b	59b80 <mpfr_gamma_inc@@Base+0x2f8>
   5a6e8:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   5a6ec:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5a6f0:	add	x2, x2, #0xf28
   5a6f4:	add	x0, x0, #0xf30
   5a6f8:	mov	w1, #0x1a2                 	// #418
   5a6fc:	bl	cb40 <mpfr_assert_fail@plt>
   5a700:	mov	w0, #0x3                   	// #3
   5a704:	str	w0, [sp, #120]
   5a708:	b	5a0e0 <mpfr_gamma_inc@@Base+0x858>
   5a70c:	adrp	x2, 60000 <mpfr_free_pool@@Base+0x4558>
   5a710:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5a714:	add	x2, x2, #0x610
   5a718:	add	x0, x0, #0xf30
   5a71c:	mov	w1, #0x1ee                 	// #494
   5a720:	bl	cb40 <mpfr_assert_fail@plt>
   5a724:	bl	c8e0 <mpfr_abort_prec_max@plt>
   5a728:	stp	x29, x30, [sp, #-128]!
   5a72c:	mov	x29, sp
   5a730:	stp	x19, x20, [sp, #16]
   5a734:	mov	x19, x1
   5a738:	mov	x20, x0
   5a73c:	bl	bf90 <mpfr_mpz_init@plt>
   5a740:	ldr	x1, [x19, #16]
   5a744:	mov	x0, #0x4                   	// #4
   5a748:	movk	x0, #0x8000, lsl #48
   5a74c:	cmp	x1, x0
   5a750:	b.eq	5a81c <mpfr_gamma_inc@@Base+0xf94>  // b.none
   5a754:	mrs	x4, tpidr_el0
   5a758:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5a75c:	ldr	x2, [x0, #2576]
   5a760:	add	x0, x0, #0xa10
   5a764:	blr	x2
   5a768:	stp	x25, x26, [sp, #64]
   5a76c:	add	x25, x4, x0
   5a770:	add	x5, sp, #0x58
   5a774:	ldr	w26, [x4, x0]
   5a778:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5a77c:	ldr	x2, [x0, #2512]
   5a780:	add	x0, x0, #0x9d0
   5a784:	blr	x2
   5a788:	stp	x21, x22, [sp, #32]
   5a78c:	add	x22, x4, x0
   5a790:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   5a794:	stp	x23, x24, [sp, #48]
   5a798:	mov	x6, #0x3fffffffffffffff    	// #4611686018427387903
   5a79c:	mov	x9, #0x40                  	// #64
   5a7a0:	ldr	x24, [x4, x0]
   5a7a4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5a7a8:	ldr	x2, [x0, #2544]
   5a7ac:	add	x0, x0, #0x9f0
   5a7b0:	blr	x2
   5a7b4:	add	x21, x4, x0
   5a7b8:	mov	w8, #0x1                   	// #1
   5a7bc:	add	x19, sp, #0x60
   5a7c0:	mov	w3, #0x0                   	// #0
   5a7c4:	mov	x2, #0x0                   	// #0
   5a7c8:	str	x7, [x22]
   5a7cc:	str	x9, [sp, #96]
   5a7d0:	str	w8, [sp, #104]
   5a7d4:	str	x5, [sp, #120]
   5a7d8:	ldr	x23, [x4, x0]
   5a7dc:	mov	x0, x19
   5a7e0:	str	x6, [x21]
   5a7e4:	bl	ba80 <mpfr_set_si_2exp@plt>
   5a7e8:	mov	x1, x19
   5a7ec:	mov	x0, x20
   5a7f0:	mov	w2, #0x0                   	// #0
   5a7f4:	bl	be00 <mpfr_get_z@plt>
   5a7f8:	str	x23, [x21]
   5a7fc:	str	x24, [x22]
   5a800:	ldp	x21, x22, [sp, #32]
   5a804:	ldp	x23, x24, [sp, #48]
   5a808:	str	w26, [x25]
   5a80c:	ldp	x19, x20, [sp, #16]
   5a810:	ldp	x25, x26, [sp, #64]
   5a814:	ldp	x29, x30, [sp], #128
   5a818:	ret
   5a81c:	add	x1, x19, #0x20
   5a820:	mov	x0, x20
   5a824:	bl	bfa0 <__gmpz_set@plt>
   5a828:	ldp	x19, x20, [sp, #16]
   5a82c:	ldp	x29, x30, [sp], #128
   5a830:	ret
   5a834:	nop

000000000005a838 <mpfr_ubf_mul_exact@@Base>:
   5a838:	stp	x29, x30, [sp, #-96]!
   5a83c:	mov	x29, sp
   5a840:	stp	x19, x20, [sp, #16]
   5a844:	mov	x19, x1
   5a848:	ldr	w3, [x2, #8]
   5a84c:	stp	x21, x22, [sp, #32]
   5a850:	mov	x22, x0
   5a854:	ldr	w0, [x19, #8]
   5a858:	mov	x20, x2
   5a85c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   5a860:	ldr	x2, [x19, #16]
   5a864:	mul	w0, w0, w3
   5a868:	str	w0, [x22, #8]
   5a86c:	cmp	x2, x1
   5a870:	b.le	5aa44 <mpfr_ubf_mul_exact@@Base+0x20c>
   5a874:	ldr	x0, [x20, #16]
   5a878:	cmp	x0, x1
   5a87c:	b.le	5aa70 <mpfr_ubf_mul_exact@@Base+0x238>
   5a880:	ldr	x2, [x19]
   5a884:	stp	x23, x24, [sp, #48]
   5a888:	ldr	x0, [x20]
   5a88c:	sub	x2, x2, #0x1
   5a890:	ldr	x4, [x19, #24]
   5a894:	sub	x0, x0, #0x1
   5a898:	asr	x2, x2, #6
   5a89c:	asr	x0, x0, #6
   5a8a0:	orr	x3, x2, x0
   5a8a4:	ldr	x1, [x20, #24]
   5a8a8:	ldr	x23, [x22, #24]
   5a8ac:	cbnz	x3, 5a9bc <mpfr_ubf_mul_exact@@Base+0x184>
   5a8b0:	ldr	x2, [x1]
   5a8b4:	ldr	x0, [x4]
   5a8b8:	umulh	x1, x0, x2
   5a8bc:	mul	x0, x0, x2
   5a8c0:	stp	x0, x1, [x23]
   5a8c4:	tbnz	x1, #63, 5a9e8 <mpfr_ubf_mul_exact@@Base+0x1b0>
   5a8c8:	mov	x24, #0x1                   	// #1
   5a8cc:	mov	x3, x24
   5a8d0:	extr	x1, x1, x0, #63
   5a8d4:	lsl	x0, x0, #1
   5a8d8:	stp	x0, x1, [x23]
   5a8dc:	mov	x0, #0x4                   	// #4
   5a8e0:	ldr	x1, [x19, #16]
   5a8e4:	movk	x0, #0x8000, lsl #48
   5a8e8:	cmp	x1, x0
   5a8ec:	b.eq	5a940 <mpfr_ubf_mul_exact@@Base+0x108>  // b.none
   5a8f0:	ldr	x2, [x20, #16]
   5a8f4:	cmp	x2, x0
   5a8f8:	b.eq	5a940 <mpfr_ubf_mul_exact@@Base+0x108>  // b.none
   5a8fc:	mrs	x4, tpidr_el0
   5a900:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5a904:	ldr	x5, [x0, #2512]
   5a908:	add	x0, x0, #0x9d0
   5a90c:	blr	x5
   5a910:	add	x1, x1, x2
   5a914:	sub	x1, x1, x3
   5a918:	ldr	x0, [x4, x0]
   5a91c:	cmp	x0, x1
   5a920:	b.gt	5a940 <mpfr_ubf_mul_exact@@Base+0x108>
   5a924:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5a928:	ldr	x2, [x0, #2544]
   5a92c:	add	x0, x0, #0x9f0
   5a930:	blr	x2
   5a934:	ldr	x0, [x4, x0]
   5a938:	cmp	x0, x1
   5a93c:	b.ge	5aa2c <mpfr_ubf_mul_exact@@Base+0x1f4>  // b.tcont
   5a940:	add	x23, x22, #0x20
   5a944:	add	x21, sp, #0x40
   5a948:	mov	x0, x23
   5a94c:	bl	bf90 <mpfr_mpz_init@plt>
   5a950:	mov	x1, x19
   5a954:	mov	x0, x21
   5a958:	add	x19, sp, #0x50
   5a95c:	bl	5a728 <mpfr_gamma_inc@@Base+0xea0>
   5a960:	mov	x1, x20
   5a964:	mov	x0, x19
   5a968:	bl	5a728 <mpfr_gamma_inc@@Base+0xea0>
   5a96c:	mov	x2, x19
   5a970:	mov	x1, x21
   5a974:	mov	x0, x23
   5a978:	bl	c9c0 <__gmpz_add@plt>
   5a97c:	mov	x0, x21
   5a980:	bl	c170 <mpfr_mpz_clear@plt>
   5a984:	mov	x0, x19
   5a988:	bl	c170 <mpfr_mpz_clear@plt>
   5a98c:	mov	x0, x23
   5a990:	mov	x2, x24
   5a994:	mov	x1, x23
   5a998:	bl	bc30 <__gmpz_sub_ui@plt>
   5a99c:	mov	x0, #0x4                   	// #4
   5a9a0:	movk	x0, #0x8000, lsl #48
   5a9a4:	ldp	x23, x24, [sp, #48]
   5a9a8:	str	x0, [x22, #16]
   5a9ac:	ldp	x19, x20, [sp, #16]
   5a9b0:	ldp	x21, x22, [sp, #32]
   5a9b4:	ldp	x29, x30, [sp], #96
   5a9b8:	ret
   5a9bc:	add	x24, x0, #0x1
   5a9c0:	cmp	x2, x0
   5a9c4:	add	x21, x2, #0x1
   5a9c8:	b.lt	5a9f4 <mpfr_ubf_mul_exact@@Base+0x1bc>  // b.tstop
   5a9cc:	mov	x3, x1
   5a9d0:	mov	x2, x21
   5a9d4:	mov	x1, x4
   5a9d8:	mov	x0, x23
   5a9dc:	mov	x4, x24
   5a9e0:	bl	c7a0 <__gmpn_mul@plt>
   5a9e4:	tbz	x0, #63, 5aa0c <mpfr_ubf_mul_exact@@Base+0x1d4>
   5a9e8:	mov	x24, #0x0                   	// #0
   5a9ec:	mov	x3, #0x0                   	// #0
   5a9f0:	b	5a8dc <mpfr_ubf_mul_exact@@Base+0xa4>
   5a9f4:	mov	x3, x4
   5a9f8:	mov	x2, x24
   5a9fc:	mov	x4, x21
   5aa00:	mov	x0, x23
   5aa04:	bl	c7a0 <__gmpn_mul@plt>
   5aa08:	tbnz	x0, #63, 5a9e8 <mpfr_ubf_mul_exact@@Base+0x1b0>
   5aa0c:	add	x2, x21, x24
   5aa10:	mov	w3, #0x1                   	// #1
   5aa14:	mov	x1, x23
   5aa18:	mov	x0, x23
   5aa1c:	bl	bcc0 <__gmpn_lshift@plt>
   5aa20:	mov	x24, #0x1                   	// #1
   5aa24:	mov	x3, x24
   5aa28:	b	5a8dc <mpfr_ubf_mul_exact@@Base+0xa4>
   5aa2c:	ldp	x23, x24, [sp, #48]
   5aa30:	str	x1, [x22, #16]
   5aa34:	ldp	x19, x20, [sp, #16]
   5aa38:	ldp	x21, x22, [sp, #32]
   5aa3c:	ldp	x29, x30, [sp], #96
   5aa40:	ret
   5aa44:	mov	x0, #0x2                   	// #2
   5aa48:	movk	x0, #0x8000, lsl #48
   5aa4c:	cmp	x2, x0
   5aa50:	b.ne	5aa94 <mpfr_ubf_mul_exact@@Base+0x25c>  // b.any
   5aa54:	mov	x0, #0x2                   	// #2
   5aa58:	movk	x0, #0x8000, lsl #48
   5aa5c:	str	x0, [x22, #16]
   5aa60:	ldp	x19, x20, [sp, #16]
   5aa64:	ldp	x21, x22, [sp, #32]
   5aa68:	ldp	x29, x30, [sp], #96
   5aa6c:	ret
   5aa70:	mov	x2, #0x2                   	// #2
   5aa74:	movk	x2, #0x8000, lsl #48
   5aa78:	cmp	x0, x2
   5aa7c:	b.eq	5aa54 <mpfr_ubf_mul_exact@@Base+0x21c>  // b.none
   5aa80:	cmp	x0, x1
   5aa84:	b.eq	5aab4 <mpfr_ubf_mul_exact@@Base+0x27c>  // b.none
   5aa88:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5aa8c:	str	x0, [x22, #16]
   5aa90:	b	5a9ac <mpfr_ubf_mul_exact@@Base+0x174>
   5aa94:	ldr	x3, [x20, #16]
   5aa98:	cmp	x3, x0
   5aa9c:	b.eq	5aa54 <mpfr_ubf_mul_exact@@Base+0x21c>  // b.none
   5aaa0:	cmp	x2, x1
   5aaa4:	b.ne	5aac0 <mpfr_ubf_mul_exact@@Base+0x288>  // b.any
   5aaa8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5aaac:	cmp	x3, x0
   5aab0:	b.eq	5aa54 <mpfr_ubf_mul_exact@@Base+0x21c>  // b.none
   5aab4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5aab8:	str	x0, [x22, #16]
   5aabc:	b	5a9ac <mpfr_ubf_mul_exact@@Base+0x174>
   5aac0:	cmp	x3, x1
   5aac4:	b.ne	5aa88 <mpfr_ubf_mul_exact@@Base+0x250>  // b.any
   5aac8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5aacc:	cmp	x2, x0
   5aad0:	b.eq	5aa54 <mpfr_ubf_mul_exact@@Base+0x21c>  // b.none
   5aad4:	b	5aab4 <mpfr_ubf_mul_exact@@Base+0x27c>

000000000005aad8 <mpfr_ubf_exp_less_p@@Base>:
   5aad8:	stp	x29, x30, [sp, #-80]!
   5aadc:	mov	x29, sp
   5aae0:	stp	x19, x20, [sp, #16]
   5aae4:	add	x20, sp, #0x30
   5aae8:	add	x19, sp, #0x40
   5aaec:	str	x21, [sp, #32]
   5aaf0:	mov	x21, x1
   5aaf4:	mov	x1, x0
   5aaf8:	mov	x0, x20
   5aafc:	bl	5a728 <mpfr_gamma_inc@@Base+0xea0>
   5ab00:	mov	x1, x21
   5ab04:	mov	x0, x19
   5ab08:	bl	5a728 <mpfr_gamma_inc@@Base+0xea0>
   5ab0c:	mov	x1, x19
   5ab10:	mov	x0, x20
   5ab14:	bl	c8d0 <__gmpz_cmp@plt>
   5ab18:	mov	w1, w0
   5ab1c:	mov	x0, x20
   5ab20:	mov	w20, w1
   5ab24:	bl	c170 <mpfr_mpz_clear@plt>
   5ab28:	mov	x0, x19
   5ab2c:	bl	c170 <mpfr_mpz_clear@plt>
   5ab30:	lsr	w0, w20, #31
   5ab34:	ldp	x19, x20, [sp, #16]
   5ab38:	ldr	x21, [sp, #32]
   5ab3c:	ldp	x29, x30, [sp], #80
   5ab40:	ret
   5ab44:	nop

000000000005ab48 <mpfr_ubf_zexp2exp@@Base>:
   5ab48:	stp	x29, x30, [sp, #-112]!
   5ab4c:	mov	x29, sp
   5ab50:	ldr	w1, [x0, #4]
   5ab54:	stp	x19, x20, [sp, #16]
   5ab58:	mov	x19, #0x0                   	// #0
   5ab5c:	cbz	w1, 5ac24 <mpfr_ubf_zexp2exp@@Base+0xdc>
   5ab60:	mrs	x2, tpidr_el0
   5ab64:	mov	x19, x0
   5ab68:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5ab6c:	ldr	x3, [x0, #2576]
   5ab70:	add	x0, x0, #0xa10
   5ab74:	blr	x3
   5ab78:	stp	x25, x26, [sp, #64]
   5ab7c:	add	x25, x2, x0
   5ab80:	ldr	w26, [x2, x0]
   5ab84:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5ab88:	ldr	x5, [x0, #2512]
   5ab8c:	add	x0, x0, #0x9d0
   5ab90:	blr	x5
   5ab94:	stp	x21, x22, [sp, #32]
   5ab98:	add	x22, x2, x0
   5ab9c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   5aba0:	stp	x23, x24, [sp, #48]
   5aba4:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   5aba8:	add	x20, sp, #0x50
   5abac:	ldr	x24, [x2, x0]
   5abb0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5abb4:	ldr	x5, [x0, #2544]
   5abb8:	add	x0, x0, #0x9f0
   5abbc:	blr	x5
   5abc0:	cmp	w1, #0x0
   5abc4:	add	x21, x2, x0
   5abc8:	cneg	w1, w1, lt  // lt = tstop
   5abcc:	str	x4, [x22]
   5abd0:	ldr	x23, [x2, x0]
   5abd4:	sbfiz	x1, x1, #6, #32
   5abd8:	mov	x0, x20
   5abdc:	str	x3, [x21]
   5abe0:	bl	ca80 <mpfr_init2@plt>
   5abe4:	mov	x1, x19
   5abe8:	mov	w2, #0x0                   	// #0
   5abec:	mov	x0, x20
   5abf0:	bl	c240 <mpfr_set_z@plt>
   5abf4:	mov	w1, #0x1                   	// #1
   5abf8:	mov	x0, x20
   5abfc:	bl	c190 <mpfr_get_si@plt>
   5ac00:	mov	x19, x0
   5ac04:	mov	x0, x20
   5ac08:	bl	c070 <mpfr_clear@plt>
   5ac0c:	str	x23, [x21]
   5ac10:	str	x24, [x22]
   5ac14:	ldp	x21, x22, [sp, #32]
   5ac18:	ldp	x23, x24, [sp, #48]
   5ac1c:	str	w26, [x25]
   5ac20:	ldp	x25, x26, [sp, #64]
   5ac24:	mov	x0, x19
   5ac28:	ldp	x19, x20, [sp, #16]
   5ac2c:	ldp	x29, x30, [sp], #112
   5ac30:	ret
   5ac34:	nop

000000000005ac38 <mpfr_ubf_diff_exp@@Base>:
   5ac38:	stp	x29, x30, [sp, #-80]!
   5ac3c:	mov	x29, sp
   5ac40:	stp	x19, x20, [sp, #16]
   5ac44:	add	x19, sp, #0x30
   5ac48:	add	x20, sp, #0x40
   5ac4c:	str	x21, [sp, #32]
   5ac50:	mov	x21, x1
   5ac54:	mov	x1, x0
   5ac58:	mov	x0, x19
   5ac5c:	bl	5a728 <mpfr_gamma_inc@@Base+0xea0>
   5ac60:	mov	x1, x21
   5ac64:	mov	x0, x20
   5ac68:	bl	5a728 <mpfr_gamma_inc@@Base+0xea0>
   5ac6c:	mov	x2, x20
   5ac70:	mov	x1, x19
   5ac74:	mov	x0, x19
   5ac78:	bl	bde0 <__gmpz_sub@plt>
   5ac7c:	mov	x0, x20
   5ac80:	bl	c170 <mpfr_mpz_clear@plt>
   5ac84:	mov	x0, x19
   5ac88:	bl	bc40 <mpfr_ubf_zexp2exp@plt>
   5ac8c:	mov	x20, x0
   5ac90:	mov	x0, x19
   5ac94:	bl	c170 <mpfr_mpz_clear@plt>
   5ac98:	mov	x0, x20
   5ac9c:	ldp	x19, x20, [sp, #16]
   5aca0:	ldr	x21, [sp, #32]
   5aca4:	ldp	x29, x30, [sp], #80
   5aca8:	ret
   5acac:	nop

000000000005acb0 <mpfr_beta@@Base>:
   5acb0:	stp	x29, x30, [sp, #-400]!
   5acb4:	mov	x29, sp
   5acb8:	stp	x27, x28, [sp, #80]
   5acbc:	mov	x27, x1
   5acc0:	mov	x1, x2
   5acc4:	stp	x19, x20, [sp, #16]
   5acc8:	mov	x20, x0
   5accc:	mov	x0, x27
   5acd0:	stp	x21, x22, [sp, #32]
   5acd4:	mov	w22, w3
   5acd8:	stp	x23, x24, [sp, #48]
   5acdc:	mov	x23, x2
   5ace0:	bl	ca00 <mpfr_less_p@plt>
   5ace4:	cbnz	w0, 5b11c <mpfr_beta@@Base+0x46c>
   5ace8:	ldr	x21, [x27, #16]
   5acec:	mov	w19, w0
   5acf0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5acf4:	cmp	x21, x0
   5acf8:	b.le	5b204 <mpfr_beta@@Base+0x554>
   5acfc:	ldr	x1, [x23, #16]
   5ad00:	cmp	x1, x0
   5ad04:	b.le	5b218 <mpfr_beta@@Base+0x568>
   5ad08:	mov	x0, x23
   5ad0c:	bl	c160 <mpfr_integer_p@plt>
   5ad10:	mov	w24, w0
   5ad14:	cbz	w0, 5ad20 <mpfr_beta@@Base+0x70>
   5ad18:	ldr	w0, [x23, #8]
   5ad1c:	tbnz	w0, #31, 5b150 <mpfr_beta@@Base+0x4a0>
   5ad20:	mov	x0, x27
   5ad24:	bl	c160 <mpfr_integer_p@plt>
   5ad28:	cbnz	w0, 5ae1c <mpfr_beta@@Base+0x16c>
   5ad2c:	mrs	x21, tpidr_el0
   5ad30:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5ad34:	ldr	x1, [x0, #2576]
   5ad38:	add	x0, x0, #0xa10
   5ad3c:	blr	x1
   5ad40:	stp	x25, x26, [sp, #64]
   5ad44:	ldr	w0, [x21, x0]
   5ad48:	str	w0, [sp, #96]
   5ad4c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5ad50:	ldr	x1, [x0, #2512]
   5ad54:	add	x0, x0, #0x9d0
   5ad58:	blr	x1
   5ad5c:	add	x28, x21, x0
   5ad60:	ldr	x2, [x23]
   5ad64:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   5ad68:	ldr	x3, [x27]
   5ad6c:	ldr	x1, [x23, #16]
   5ad70:	ldr	x6, [x27, #16]
   5ad74:	sub	x2, x1, x2
   5ad78:	ldr	x4, [x21, x0]
   5ad7c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5ad80:	ldr	x5, [x0, #2544]
   5ad84:	add	x0, x0, #0x9f0
   5ad88:	blr	x5
   5ad8c:	sub	x3, x6, x3
   5ad90:	cmp	x1, x6
   5ad94:	add	x26, x21, x0
   5ad98:	csel	x1, x1, x6, ge  // ge = tcont
   5ad9c:	cmp	x2, x3
   5ada0:	add	x1, x1, #0x1
   5ada4:	csel	x2, x2, x3, le
   5ada8:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   5adac:	sub	x1, x1, x2
   5adb0:	str	x8, [x28]
   5adb4:	ldr	x2, [x21, x0]
   5adb8:	str	x3, [x26]
   5adbc:	stp	x4, x2, [sp, #104]
   5adc0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5adc4:	cmp	x1, x0
   5adc8:	b.cc	5ae4c <mpfr_beta@@Base+0x19c>  // b.lo, b.ul, b.last
   5adcc:	ldr	w0, [sp, #96]
   5add0:	str	x2, [x26]
   5add4:	orr	w23, w0, #0x4
   5add8:	ldp	x25, x26, [sp, #64]
   5addc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5ade0:	ldr	x1, [x0, #2576]
   5ade4:	add	x0, x0, #0xa10
   5ade8:	blr	x1
   5adec:	mov	x1, #0x2                   	// #2
   5adf0:	str	w23, [x21, x0]
   5adf4:	movk	x1, #0x8000, lsl #48
   5adf8:	str	x4, [x28]
   5adfc:	str	x1, [x20, #16]
   5ae00:	mov	w0, w19
   5ae04:	ldp	x19, x20, [sp, #16]
   5ae08:	ldp	x21, x22, [sp, #32]
   5ae0c:	ldp	x23, x24, [sp, #48]
   5ae10:	ldp	x27, x28, [sp, #80]
   5ae14:	ldp	x29, x30, [sp], #400
   5ae18:	ret
   5ae1c:	mrs	x21, tpidr_el0
   5ae20:	ldr	w1, [x27, #8]
   5ae24:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5ae28:	ldr	x2, [x0, #2576]
   5ae2c:	add	x0, x0, #0xa10
   5ae30:	blr	x2
   5ae34:	add	x2, x21, x0
   5ae38:	ldr	w0, [x21, x0]
   5ae3c:	str	w0, [sp, #96]
   5ae40:	tbnz	w1, #31, 5b1b8 <mpfr_beta@@Base+0x508>
   5ae44:	stp	x25, x26, [sp, #64]
   5ae48:	b	5ad4c <mpfr_beta@@Base+0x9c>
   5ae4c:	add	x25, sp, #0xa0
   5ae50:	mov	x0, x25
   5ae54:	bl	ca80 <mpfr_init2@plt>
   5ae58:	mov	x1, x27
   5ae5c:	mov	x0, x25
   5ae60:	mov	x2, x23
   5ae64:	mov	w3, #0x0                   	// #0
   5ae68:	bl	c1a0 <mpfr_add@plt>
   5ae6c:	mov	w19, w0
   5ae70:	ldr	x1, [sp, #176]
   5ae74:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5ae78:	cmp	x1, x0
   5ae7c:	b.eq	5b87c <mpfr_beta@@Base+0xbcc>  // b.none
   5ae80:	cbnz	w19, 5b8c8 <mpfr_beta@@Base+0xc18>
   5ae84:	mov	x0, x25
   5ae88:	bl	c710 <mpfr_sgn@plt>
   5ae8c:	cmp	w0, #0x0
   5ae90:	ccmp	w24, #0x0, #0x0, le
   5ae94:	b.eq	5b2b8 <mpfr_beta@@Base+0x608>  // b.none
   5ae98:	ldr	x28, [x20]
   5ae9c:	cmp	x28, #0x1
   5aea0:	b.eq	5b340 <mpfr_beta@@Base+0x690>  // b.none
   5aea4:	b.le	5b8f8 <mpfr_beta@@Base+0xc48>
   5aea8:	sub	x1, x28, #0x1
   5aeac:	mov	w0, #0x40                  	// #64
   5aeb0:	clz	x1, x1
   5aeb4:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   5aeb8:	sub	w0, w0, w1
   5aebc:	add	x28, x28, w0, sxtw
   5aec0:	cmp	x28, x2
   5aec4:	b.ge	5b910 <mpfr_beta@@Base+0xc60>  // b.tcont
   5aec8:	sub	x3, x28, #0x1
   5aecc:	asr	x2, x3, #6
   5aed0:	add	x2, x2, #0x1
   5aed4:	lsl	x0, x2, #1
   5aed8:	cmp	x0, #0x10
   5aedc:	b.gt	5b298 <mpfr_beta@@Base+0x5e8>
   5aee0:	add	x7, sp, #0x110
   5aee4:	mov	x1, #0x0                   	// #0
   5aee8:	mov	x0, x7
   5aeec:	str	x7, [sp, #264]
   5aef0:	adrp	x8, 66000 <mpfr_bases@@Base+0x16f8>
   5aef4:	add	x4, x8, #0xff0
   5aef8:	adrp	x7, 66000 <mpfr_bases@@Base+0x16f8>
   5aefc:	add	x26, sp, #0xe0
   5af00:	add	x24, sp, #0xc0
   5af04:	str	x4, [sp, #144]
   5af08:	add	x4, x7, #0xfe8
   5af0c:	add	x2, x0, x2, lsl #3
   5af10:	mov	w7, #0x1                   	// #1
   5af14:	str	x4, [sp, #152]
   5af18:	mov	x4, #0x40                  	// #64
   5af1c:	str	x4, [sp, #136]
   5af20:	str	x28, [sp, #192]
   5af24:	str	w7, [sp, #200]
   5af28:	stp	x0, x28, [sp, #216]
   5af2c:	str	w7, [sp, #232]
   5af30:	str	x2, [sp, #248]
   5af34:	asr	x3, x3, #6
   5af38:	add	x3, x3, #0x1
   5af3c:	str	x3, [sp, #120]
   5af40:	lsl	x2, x3, #4
   5af44:	str	x2, [sp, #256]
   5af48:	cbnz	x1, 5b1ec <mpfr_beta@@Base+0x53c>
   5af4c:	mov	x0, x2
   5af50:	bl	ccf0 <mpfr_allocate_func@plt>
   5af54:	ldr	x3, [sp, #120]
   5af58:	mov	x7, x0
   5af5c:	str	x0, [sp, #264]
   5af60:	add	x3, x7, x3, lsl #3
   5af64:	mov	w8, #0x1                   	// #1
   5af68:	mov	x1, x27
   5af6c:	mov	w2, #0x0                   	// #0
   5af70:	mov	x0, x24
   5af74:	str	x28, [sp, #192]
   5af78:	str	w8, [sp, #200]
   5af7c:	stp	x7, x28, [sp, #216]
   5af80:	str	w8, [sp, #232]
   5af84:	str	x3, [sp, #248]
   5af88:	bl	c7b0 <mpfr_gamma@plt>
   5af8c:	mov	w8, w0
   5af90:	mov	x1, x23
   5af94:	mov	w2, #0x0                   	// #0
   5af98:	mov	x0, x26
   5af9c:	str	w8, [sp, #120]
   5afa0:	bl	c7b0 <mpfr_gamma@plt>
   5afa4:	ldr	w8, [sp, #120]
   5afa8:	mov	w3, #0x0                   	// #0
   5afac:	mov	x2, x26
   5afb0:	mov	x1, x24
   5afb4:	orr	w8, w0, w8
   5afb8:	mov	x0, x24
   5afbc:	str	w8, [sp, #128]
   5afc0:	bl	bd50 <mpfr_mul@plt>
   5afc4:	mov	w7, w0
   5afc8:	mov	x1, x25
   5afcc:	mov	w2, #0x0                   	// #0
   5afd0:	mov	x0, x26
   5afd4:	str	w7, [sp, #120]
   5afd8:	bl	c7b0 <mpfr_gamma@plt>
   5afdc:	ldr	w7, [sp, #120]
   5afe0:	mov	x1, x24
   5afe4:	ldr	w8, [sp, #128]
   5afe8:	mov	x2, x26
   5afec:	orr	w7, w7, w0
   5aff0:	mov	w3, #0x0                   	// #0
   5aff4:	orr	w7, w7, w8
   5aff8:	mov	x0, x24
   5affc:	str	w7, [sp, #120]
   5b000:	bl	c620 <mpfr_div@plt>
   5b004:	ldr	w7, [sp, #120]
   5b008:	ldr	x1, [sp, #208]
   5b00c:	orr	w7, w0, w7
   5b010:	mov	x0, #0x2                   	// #2
   5b014:	movk	x0, #0x8000, lsl #48
   5b018:	cmp	x1, x0
   5b01c:	b.eq	5b6bc <mpfr_beta@@Base+0xa0c>  // b.none
   5b020:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5b024:	cmp	x1, x0
   5b028:	b.le	5b30c <mpfr_beta@@Base+0x65c>
   5b02c:	cbz	w7, 5b05c <mpfr_beta@@Base+0x3ac>
   5b030:	ldr	x1, [sp, #192]
   5b034:	cmp	w22, #0x0
   5b038:	ldr	x0, [sp, #216]
   5b03c:	sub	x1, x1, #0x1
   5b040:	ldr	x3, [x20]
   5b044:	asr	x1, x1, #6
   5b048:	sub	x2, x28, #0x3
   5b04c:	add	x1, x1, #0x1
   5b050:	cinc	x3, x3, eq  // eq = none
   5b054:	bl	c370 <mpfr_round_p@plt>
   5b058:	cbz	w0, 5b34c <mpfr_beta@@Base+0x69c>
   5b05c:	ldr	w3, [sp, #200]
   5b060:	mov	x1, x24
   5b064:	mov	w2, w22
   5b068:	mov	x0, x20
   5b06c:	bl	c6a0 <mpfr_set4@plt>
   5b070:	mov	w19, w0
   5b074:	ldr	x1, [sp, #256]
   5b078:	cbz	x1, 5b084 <mpfr_beta@@Base+0x3d4>
   5b07c:	ldr	x0, [sp, #264]
   5b080:	bl	cc20 <mpfr_free_func@plt>
   5b084:	mov	x0, x25
   5b088:	bl	c070 <mpfr_clear@plt>
   5b08c:	ldr	x1, [x20, #16]
   5b090:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b094:	ldr	x2, [x0, #2576]
   5b098:	add	x0, x0, #0xa10
   5b09c:	blr	x2
   5b0a0:	ldr	w2, [sp, #96]
   5b0a4:	str	w2, [x21, x0]
   5b0a8:	add	x2, x21, x0
   5b0ac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b0b0:	ldr	x3, [x0, #2512]
   5b0b4:	add	x0, x0, #0x9d0
   5b0b8:	blr	x3
   5b0bc:	ldr	x3, [sp, #104]
   5b0c0:	str	x3, [x21, x0]
   5b0c4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b0c8:	ldr	x4, [x0, #2544]
   5b0cc:	add	x0, x0, #0x9f0
   5b0d0:	blr	x4
   5b0d4:	ldr	x4, [sp, #112]
   5b0d8:	str	x4, [x21, x0]
   5b0dc:	cmp	x4, x1
   5b0e0:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   5b0e4:	b.le	5b1d4 <mpfr_beta@@Base+0x524>
   5b0e8:	mov	w1, w19
   5b0ec:	mov	w2, w22
   5b0f0:	mov	x0, x20
   5b0f4:	bl	cb30 <mpfr_check_range@plt>
   5b0f8:	mov	w19, w0
   5b0fc:	ldp	x25, x26, [sp, #64]
   5b100:	mov	w0, w19
   5b104:	ldp	x19, x20, [sp, #16]
   5b108:	ldp	x21, x22, [sp, #32]
   5b10c:	ldp	x23, x24, [sp, #48]
   5b110:	ldp	x27, x28, [sp, #80]
   5b114:	ldp	x29, x30, [sp], #400
   5b118:	ret
   5b11c:	mov	w3, w22
   5b120:	mov	x2, x27
   5b124:	mov	x1, x23
   5b128:	mov	x0, x20
   5b12c:	bl	5acb0 <mpfr_beta@@Base>
   5b130:	mov	w19, w0
   5b134:	mov	w0, w19
   5b138:	ldp	x19, x20, [sp, #16]
   5b13c:	ldp	x21, x22, [sp, #32]
   5b140:	ldp	x23, x24, [sp, #48]
   5b144:	ldp	x27, x28, [sp, #80]
   5b148:	ldp	x29, x30, [sp], #400
   5b14c:	ret
   5b150:	ldr	w0, [x27, #8]
   5b154:	tbnz	w0, #31, 5b16c <mpfr_beta@@Base+0x4bc>
   5b158:	mov	x1, x23
   5b15c:	mov	x0, x27
   5b160:	bl	c9b0 <mpfr_cmpabs@plt>
   5b164:	cmp	w0, #0x0
   5b168:	b.le	5b418 <mpfr_beta@@Base+0x768>
   5b16c:	mrs	x1, tpidr_el0
   5b170:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b174:	ldr	x2, [x0, #2576]
   5b178:	add	x0, x0, #0xa10
   5b17c:	blr	x2
   5b180:	add	x0, x1, x0
   5b184:	mov	x1, #0x2                   	// #2
   5b188:	movk	x1, #0x8000, lsl #48
   5b18c:	str	x1, [x20, #16]
   5b190:	ldp	x21, x22, [sp, #32]
   5b194:	ldr	w1, [x0]
   5b198:	ldp	x23, x24, [sp, #48]
   5b19c:	orr	w1, w1, #0x4
   5b1a0:	str	w1, [x0]
   5b1a4:	mov	w0, w19
   5b1a8:	ldp	x19, x20, [sp, #16]
   5b1ac:	ldp	x27, x28, [sp, #80]
   5b1b0:	ldp	x29, x30, [sp], #400
   5b1b4:	ret
   5b1b8:	mov	w0, w0
   5b1bc:	orr	w23, w0, #0x4
   5b1c0:	mov	x0, #0x2                   	// #2
   5b1c4:	movk	x0, #0x8000, lsl #48
   5b1c8:	str	w23, [x2]
   5b1cc:	str	x0, [x20, #16]
   5b1d0:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b1d4:	cbz	w19, 5b0fc <mpfr_beta@@Base+0x44c>
   5b1d8:	ldr	w0, [sp, #96]
   5b1dc:	ldp	x25, x26, [sp, #64]
   5b1e0:	orr	w23, w0, #0x8
   5b1e4:	str	w23, [x2]
   5b1e8:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b1ec:	ldr	x0, [sp, #264]
   5b1f0:	bl	c1c0 <mpfr_reallocate_func@plt>
   5b1f4:	mov	x7, x0
   5b1f8:	str	x0, [sp, #264]
   5b1fc:	ldr	x3, [sp, #120]
   5b200:	b	5af60 <mpfr_beta@@Base+0x2b0>
   5b204:	mov	x0, #0x2                   	// #2
   5b208:	movk	x0, #0x8000, lsl #48
   5b20c:	cmp	x21, x0
   5b210:	b.eq	5b16c <mpfr_beta@@Base+0x4bc>  // b.none
   5b214:	ldr	x1, [x23, #16]
   5b218:	mov	x24, #0x2                   	// #2
   5b21c:	movk	x24, #0x8000, lsl #48
   5b220:	cmp	x1, x24
   5b224:	b.eq	5b16c <mpfr_beta@@Base+0x4bc>  // b.none
   5b228:	stp	x25, x26, [sp, #64]
   5b22c:	mov	x25, #0x8000000000000003    	// #-9223372036854775805
   5b230:	cmp	x1, x25
   5b234:	ccmp	x21, x25, #0x4, ne  // ne = any
   5b238:	b.ne	5b4d8 <mpfr_beta@@Base+0x828>  // b.any
   5b23c:	cmp	x21, x25
   5b240:	b.eq	5b324 <mpfr_beta@@Base+0x674>  // b.none
   5b244:	mov	x0, x27
   5b248:	bl	c710 <mpfr_sgn@plt>
   5b24c:	cmp	w0, #0x0
   5b250:	b.le	5b260 <mpfr_beta@@Base+0x5b0>
   5b254:	mov	x0, x27
   5b258:	bl	c160 <mpfr_integer_p@plt>
   5b25c:	cbnz	w0, 5b7ec <mpfr_beta@@Base+0xb3c>
   5b260:	mrs	x1, tpidr_el0
   5b264:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b268:	ldr	x2, [x0, #2576]
   5b26c:	add	x0, x0, #0xa10
   5b270:	blr	x2
   5b274:	add	x0, x1, x0
   5b278:	mov	x1, #0x2                   	// #2
   5b27c:	movk	x1, #0x8000, lsl #48
   5b280:	ldp	x25, x26, [sp, #64]
   5b284:	str	x1, [x20, #16]
   5b288:	ldr	w1, [x0]
   5b28c:	orr	w1, w1, #0x4
   5b290:	str	w1, [x0]
   5b294:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b298:	lsl	x0, x2, #4
   5b29c:	stp	x2, x3, [sp, #120]
   5b2a0:	str	x0, [sp, #256]
   5b2a4:	bl	ccf0 <mpfr_allocate_func@plt>
   5b2a8:	str	x0, [sp, #264]
   5b2ac:	ldp	x2, x3, [sp, #120]
   5b2b0:	ldr	x1, [sp, #256]
   5b2b4:	b	5aef0 <mpfr_beta@@Base+0x240>
   5b2b8:	mov	x0, x25
   5b2bc:	bl	c160 <mpfr_integer_p@plt>
   5b2c0:	cbz	w0, 5ae98 <mpfr_beta@@Base+0x1e8>
   5b2c4:	mov	x0, x25
   5b2c8:	bl	c070 <mpfr_clear@plt>
   5b2cc:	ldr	x0, [sp, #104]
   5b2d0:	str	x0, [x28]
   5b2d4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   5b2d8:	mov	w2, #0x1                   	// #1
   5b2dc:	str	w2, [x20, #8]
   5b2e0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b2e4:	ldr	x3, [x0, #2576]
   5b2e8:	add	x0, x0, #0xa10
   5b2ec:	blr	x3
   5b2f0:	str	x1, [x20, #16]
   5b2f4:	ldr	x3, [sp, #112]
   5b2f8:	str	x3, [x26]
   5b2fc:	ldr	w3, [sp, #96]
   5b300:	ldp	x25, x26, [sp, #64]
   5b304:	str	w3, [x21, x0]
   5b308:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b30c:	ldp	x2, x0, [sp, #144]
   5b310:	mov	w1, #0x129                 	// #297
   5b314:	str	w7, [sp, #120]
   5b318:	bl	cb40 <mpfr_assert_fail@plt>
   5b31c:	ldr	w7, [sp, #120]
   5b320:	b	5b02c <mpfr_beta@@Base+0x37c>
   5b324:	ldr	w0, [x27, #8]
   5b328:	cmp	w0, #0x0
   5b32c:	b.gt	5b598 <mpfr_beta@@Base+0x8e8>
   5b330:	cmp	x1, x21
   5b334:	b.eq	5b244 <mpfr_beta@@Base+0x594>  // b.none
   5b338:	ldp	x25, x26, [sp, #64]
   5b33c:	b	5ad08 <mpfr_beta@@Base+0x58>
   5b340:	mov	x2, x28
   5b344:	mov	x3, #0x0                   	// #0
   5b348:	b	5aee0 <mpfr_beta@@Base+0x230>
   5b34c:	mov	x0, x27
   5b350:	mov	x2, #0x0                   	// #0
   5b354:	mov	x1, #0x1                   	// #1
   5b358:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5b35c:	cbnz	w0, 5b398 <mpfr_beta@@Base+0x6e8>
   5b360:	ldr	x0, [x23, #16]
   5b364:	mov	x1, #0x1                   	// #1
   5b368:	mov	x2, x0
   5b36c:	mov	x0, x23
   5b370:	str	x2, [sp, #128]
   5b374:	sub	x2, x2, #0x1
   5b378:	str	x2, [sp, #120]
   5b37c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5b380:	ldr	x2, [sp, #120]
   5b384:	cbz	w0, 5b824 <mpfr_beta@@Base+0xb74>
   5b388:	mov	x0, x23
   5b38c:	mov	x1, #0xffffffffffffffff    	// #-1
   5b390:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   5b394:	cbz	w0, 5b840 <mpfr_beta@@Base+0xb90>
   5b398:	mov	x0, x23
   5b39c:	mov	x2, #0x0                   	// #0
   5b3a0:	mov	x1, #0x1                   	// #1
   5b3a4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5b3a8:	cbnz	w0, 5b3c4 <mpfr_beta@@Base+0x714>
   5b3ac:	ldr	x2, [x27, #16]
   5b3b0:	mov	x0, x27
   5b3b4:	mov	x1, #0x1                   	// #1
   5b3b8:	sub	x2, x2, #0x1
   5b3bc:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5b3c0:	cbz	w0, 5b860 <mpfr_beta@@Base+0xbb0>
   5b3c4:	mov	x0, x27
   5b3c8:	mov	x2, #0x0                   	// #0
   5b3cc:	mov	x1, #0x2                   	// #2
   5b3d0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   5b3d4:	cbz	w0, 5b56c <mpfr_beta@@Base+0x8bc>
   5b3d8:	ldr	x1, [sp, #136]
   5b3dc:	mov	x0, #0xfffffffffffffeff    	// #-257
   5b3e0:	movk	x0, #0x7fff, lsl #48
   5b3e4:	sub	x0, x0, x28
   5b3e8:	cmp	x1, x0
   5b3ec:	b.gt	5b794 <mpfr_beta@@Base+0xae4>
   5b3f0:	add	x28, x28, x1
   5b3f4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5b3f8:	cmp	x28, x0
   5b3fc:	add	x0, x28, x28, lsr #63
   5b400:	ldr	x1, [sp, #256]
   5b404:	asr	x0, x0, #1
   5b408:	str	x0, [sp, #136]
   5b40c:	b.ge	5b910 <mpfr_beta@@Base+0xc60>  // b.tcont
   5b410:	sub	x3, x28, #0x1
   5b414:	b	5af34 <mpfr_beta@@Base+0x284>
   5b418:	mov	x0, x27
   5b41c:	bl	c160 <mpfr_integer_p@plt>
   5b420:	cbz	w0, 5b16c <mpfr_beta@@Base+0x4bc>
   5b424:	mov	x1, x23
   5b428:	mov	x0, x27
   5b42c:	bl	c9b0 <mpfr_cmpabs@plt>
   5b430:	cbz	w0, 5b6a0 <mpfr_beta@@Base+0x9f0>
   5b434:	ldr	x2, [x23, #16]
   5b438:	stp	x25, x26, [sp, #64]
   5b43c:	add	x25, sp, #0xa0
   5b440:	ldr	x1, [x27, #16]
   5b444:	mov	x0, x25
   5b448:	cmp	x2, x1
   5b44c:	csel	x1, x2, x1, ge  // ge = tcont
   5b450:	bl	ca80 <mpfr_init2@plt>
   5b454:	mov	x2, x23
   5b458:	mov	x0, x25
   5b45c:	mov	x1, x27
   5b460:	mov	w3, #0x0                   	// #0
   5b464:	bl	c1a0 <mpfr_add@plt>
   5b468:	cbnz	w0, 5b8e0 <mpfr_beta@@Base+0xc30>
   5b46c:	mov	x2, x25
   5b470:	mov	x0, x25
   5b474:	mov	w3, #0x0                   	// #0
   5b478:	mov	x1, #0x1                   	// #1
   5b47c:	bl	ca50 <mpfr_ui_sub@plt>
   5b480:	cbnz	w0, 5b914 <mpfr_beta@@Base+0xc64>
   5b484:	mov	x0, x27
   5b488:	bl	cca0 <mpfr_odd_p@plt>
   5b48c:	cbz	w0, 5b778 <mpfr_beta@@Base+0xac8>
   5b490:	cmp	w22, #0x2
   5b494:	b.eq	5b7dc <mpfr_beta@@Base+0xb2c>  // b.none
   5b498:	cmp	w22, #0x3
   5b49c:	mov	w0, #0x2                   	// #2
   5b4a0:	csel	w22, w22, w0, ne  // ne = any
   5b4a4:	mov	x1, x27
   5b4a8:	mov	w3, w22
   5b4ac:	mov	x2, x25
   5b4b0:	mov	x0, x20
   5b4b4:	bl	5acb0 <mpfr_beta@@Base>
   5b4b8:	neg	w19, w0
   5b4bc:	ldr	w1, [x20, #8]
   5b4c0:	neg	w1, w1
   5b4c4:	str	w1, [x20, #8]
   5b4c8:	mov	x0, x25
   5b4cc:	bl	c070 <mpfr_clear@plt>
   5b4d0:	ldp	x25, x26, [sp, #64]
   5b4d4:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b4d8:	mov	x0, x27
   5b4dc:	bl	c710 <mpfr_sgn@plt>
   5b4e0:	cbz	w0, 5b51c <mpfr_beta@@Base+0x86c>
   5b4e4:	mrs	x1, tpidr_el0
   5b4e8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b4ec:	ldr	x2, [x0, #2576]
   5b4f0:	add	x0, x0, #0xa10
   5b4f4:	blr	x2
   5b4f8:	add	x0, x1, x0
   5b4fc:	ldr	w1, [x23, #8]
   5b500:	str	w1, [x20, #8]
   5b504:	ldr	w1, [x0]
   5b508:	str	x25, [x20, #16]
   5b50c:	orr	w1, w1, #0x20
   5b510:	str	w1, [x0]
   5b514:	ldp	x25, x26, [sp, #64]
   5b518:	b	5b100 <mpfr_beta@@Base+0x450>
   5b51c:	mov	x0, x23
   5b520:	bl	c710 <mpfr_sgn@plt>
   5b524:	mov	w19, w0
   5b528:	cbnz	w0, 5b734 <mpfr_beta@@Base+0xa84>
   5b52c:	mrs	x1, tpidr_el0
   5b530:	ldr	w3, [x23, #8]
   5b534:	ldr	w2, [x27, #8]
   5b538:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b53c:	ldr	x4, [x0, #2576]
   5b540:	add	x0, x0, #0xa10
   5b544:	blr	x4
   5b548:	add	x4, x1, x0
   5b54c:	cmp	w2, w3
   5b550:	ldr	w0, [x1, x0]
   5b554:	b.eq	5b7c4 <mpfr_beta@@Base+0xb14>  // b.none
   5b558:	orr	w0, w0, #0x4
   5b55c:	ldp	x25, x26, [sp, #64]
   5b560:	str	w0, [x4]
   5b564:	str	x24, [x20, #16]
   5b568:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b56c:	mov	x2, #0xffffffffffffffff    	// #-1
   5b570:	mov	x0, x23
   5b574:	mov	x1, x2
   5b578:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   5b57c:	cbnz	w0, 5b3d8 <mpfr_beta@@Base+0x728>
   5b580:	mov	x0, x24
   5b584:	mov	w3, #0x0                   	// #0
   5b588:	mov	x2, #0x2                   	// #2
   5b58c:	mov	x1, #0xffffffffffffffff    	// #-1
   5b590:	bl	ba80 <mpfr_set_si_2exp@plt>
   5b594:	b	5b05c <mpfr_beta@@Base+0x3ac>
   5b598:	mov	x0, x23
   5b59c:	bl	c710 <mpfr_sgn@plt>
   5b5a0:	cmp	w0, #0x0
   5b5a4:	b.gt	5b7ac <mpfr_beta@@Base+0xafc>
   5b5a8:	ldr	x0, [x23, #16]
   5b5ac:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   5b5b0:	and	x0, x0, #0xfffffffffffffffd
   5b5b4:	cmp	x0, x1
   5b5b8:	b.eq	5b260 <mpfr_beta@@Base+0x5b0>  // b.none
   5b5bc:	mov	x0, x23
   5b5c0:	bl	c160 <mpfr_integer_p@plt>
   5b5c4:	cbnz	w0, 5b260 <mpfr_beta@@Base+0x5b0>
   5b5c8:	mrs	x2, tpidr_el0
   5b5cc:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b5d0:	ldr	x1, [x0, #2576]
   5b5d4:	add	x0, x0, #0xa10
   5b5d8:	blr	x1
   5b5dc:	add	x27, x2, x0
   5b5e0:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   5b5e4:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   5b5e8:	add	x22, sp, #0x100
   5b5ec:	ldr	w28, [x2, x0]
   5b5f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b5f4:	ldr	x1, [x0, #2512]
   5b5f8:	add	x0, x0, #0x9d0
   5b5fc:	blr	x1
   5b600:	add	x24, x2, x0
   5b604:	mov	x1, #0x1                   	// #1
   5b608:	ldr	x26, [x2, x0]
   5b60c:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b610:	ldr	x4, [x0, #2544]
   5b614:	add	x0, x0, #0x9f0
   5b618:	blr	x4
   5b61c:	add	x6, x2, x0
   5b620:	str	x5, [x24]
   5b624:	str	x6, [sp, #96]
   5b628:	mov	w19, #0x0                   	// #0
   5b62c:	ldr	x25, [x2, x0]
   5b630:	mov	x0, x22
   5b634:	str	x3, [x6]
   5b638:	bl	ca80 <mpfr_init2@plt>
   5b63c:	mov	w3, #0x0                   	// #0
   5b640:	mov	x2, #0x0                   	// #0
   5b644:	mov	x1, #0x1                   	// #1
   5b648:	mov	x0, x22
   5b64c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5b650:	add	x1, sp, #0xe0
   5b654:	mov	x2, x23
   5b658:	mov	x3, x22
   5b65c:	mov	w4, #0x3                   	// #3
   5b660:	mov	x0, x22
   5b664:	bl	cc70 <mpfr_fmodquo@plt>
   5b668:	mov	x0, x22
   5b66c:	bl	c070 <mpfr_clear@plt>
   5b670:	str	x26, [x24]
   5b674:	ldr	x1, [sp, #224]
   5b678:	mov	w0, #0x1                   	// #1
   5b67c:	ldr	x6, [sp, #96]
   5b680:	str	x21, [x20, #16]
   5b684:	tst	x1, #0x1
   5b688:	cneg	w0, w0, ne  // ne = any
   5b68c:	str	w0, [x20, #8]
   5b690:	str	x25, [x6]
   5b694:	ldp	x25, x26, [sp, #64]
   5b698:	str	w28, [x27]
   5b69c:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b6a0:	mov	w3, w22
   5b6a4:	mov	x2, x27
   5b6a8:	mov	x0, x20
   5b6ac:	mov	x1, #0x1                   	// #1
   5b6b0:	bl	c2f0 <mpfr_ui_div@plt>
   5b6b4:	mov	w19, w0
   5b6b8:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b6bc:	mov	x0, x25
   5b6c0:	bl	c070 <mpfr_clear@plt>
   5b6c4:	ldr	x1, [sp, #256]
   5b6c8:	cbz	x1, 5b6d4 <mpfr_beta@@Base+0xa24>
   5b6cc:	ldr	x0, [sp, #264]
   5b6d0:	bl	cc20 <mpfr_free_func@plt>
   5b6d4:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b6d8:	ldr	x1, [x0, #2512]
   5b6dc:	add	x0, x0, #0x9d0
   5b6e0:	blr	x1
   5b6e4:	ldr	x1, [sp, #104]
   5b6e8:	ldp	x25, x26, [sp, #64]
   5b6ec:	str	x1, [x21, x0]
   5b6f0:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b6f4:	ldr	x1, [x0, #2544]
   5b6f8:	add	x0, x0, #0x9f0
   5b6fc:	blr	x1
   5b700:	ldr	x1, [sp, #112]
   5b704:	str	x1, [x21, x0]
   5b708:	ldr	w0, [sp, #96]
   5b70c:	orr	w23, w0, #0x4
   5b710:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b714:	ldr	x1, [x0, #2576]
   5b718:	add	x0, x0, #0xa10
   5b71c:	blr	x1
   5b720:	str	w23, [x21, x0]
   5b724:	mov	x1, #0x2                   	// #2
   5b728:	movk	x1, #0x8000, lsl #48
   5b72c:	str	x1, [x20, #16]
   5b730:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b734:	mov	x0, x23
   5b738:	bl	c160 <mpfr_integer_p@plt>
   5b73c:	mrs	x1, tpidr_el0
   5b740:	mov	w19, w0
   5b744:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b748:	ldr	x2, [x0, #2576]
   5b74c:	add	x0, x0, #0xa10
   5b750:	blr	x2
   5b754:	add	x0, x1, x0
   5b758:	cbz	w19, 5b7e4 <mpfr_beta@@Base+0xb34>
   5b75c:	ldr	w1, [x0]
   5b760:	mov	w19, #0x0                   	// #0
   5b764:	ldp	x25, x26, [sp, #64]
   5b768:	orr	w1, w1, #0x4
   5b76c:	str	w1, [x0]
   5b770:	str	x24, [x20, #16]
   5b774:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b778:	mov	w3, w22
   5b77c:	mov	x1, x27
   5b780:	mov	x0, x20
   5b784:	mov	x2, x25
   5b788:	bl	5acb0 <mpfr_beta@@Base>
   5b78c:	mov	w19, w0
   5b790:	b	5b4c8 <mpfr_beta@@Base+0x818>
   5b794:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   5b798:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5b79c:	add	x2, x2, #0xf80
   5b7a0:	add	x0, x0, #0xfe8
   5b7a4:	mov	w1, #0x151                 	// #337
   5b7a8:	bl	cb40 <mpfr_assert_fail@plt>
   5b7ac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5b7b0:	mov	w1, #0x1                   	// #1
   5b7b4:	ldp	x25, x26, [sp, #64]
   5b7b8:	str	w1, [x20, #8]
   5b7bc:	str	x0, [x20, #16]
   5b7c0:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b7c4:	orr	w0, w0, #0x20
   5b7c8:	str	w0, [x4]
   5b7cc:	str	w2, [x20, #8]
   5b7d0:	str	x25, [x20, #16]
   5b7d4:	ldp	x25, x26, [sp, #64]
   5b7d8:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b7dc:	mov	w22, #0x3                   	// #3
   5b7e0:	b	5b4a4 <mpfr_beta@@Base+0x7f4>
   5b7e4:	ldr	w1, [x27, #8]
   5b7e8:	b	5b500 <mpfr_beta@@Base+0x850>
   5b7ec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5b7f0:	str	x0, [x20, #16]
   5b7f4:	mov	x0, x27
   5b7f8:	bl	cca0 <mpfr_odd_p@plt>
   5b7fc:	cbz	w0, 5b810 <mpfr_beta@@Base+0xb60>
   5b800:	mov	w0, #0xffffffff            	// #-1
   5b804:	ldp	x25, x26, [sp, #64]
   5b808:	str	w0, [x20, #8]
   5b80c:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b810:	mov	w0, #0x1                   	// #1
   5b814:	mov	w19, #0x0                   	// #0
   5b818:	ldp	x25, x26, [sp, #64]
   5b81c:	str	w0, [x20, #8]
   5b820:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b824:	ldr	x0, [sp, #128]
   5b828:	mov	x1, #0x1                   	// #1
   5b82c:	mov	w3, #0x0                   	// #0
   5b830:	sub	x2, x1, x0
   5b834:	mov	x0, x24
   5b838:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5b83c:	b	5b05c <mpfr_beta@@Base+0x3ac>
   5b840:	ldr	x0, [sp, #128]
   5b844:	mov	x2, #0x1                   	// #1
   5b848:	mov	w3, #0x0                   	// #0
   5b84c:	mov	x1, #0xffffffffffffffff    	// #-1
   5b850:	sub	x2, x2, x0
   5b854:	mov	x0, x24
   5b858:	bl	ba80 <mpfr_set_si_2exp@plt>
   5b85c:	b	5b05c <mpfr_beta@@Base+0x3ac>
   5b860:	ldr	x2, [x27, #16]
   5b864:	mov	x1, #0x1                   	// #1
   5b868:	mov	x0, x24
   5b86c:	mov	w3, #0x0                   	// #0
   5b870:	sub	x2, x1, x2
   5b874:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5b878:	b	5b05c <mpfr_beta@@Base+0x3ac>
   5b87c:	mov	x0, x25
   5b880:	bl	c070 <mpfr_clear@plt>
   5b884:	ldr	x0, [sp, #104]
   5b888:	str	x0, [x28]
   5b88c:	mov	w1, w22
   5b890:	mov	w2, #0x1                   	// #1
   5b894:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5b898:	ldr	x3, [x0, #2576]
   5b89c:	add	x0, x0, #0xa10
   5b8a0:	blr	x3
   5b8a4:	ldr	x3, [sp, #112]
   5b8a8:	str	x3, [x26]
   5b8ac:	ldr	w3, [sp, #96]
   5b8b0:	str	w3, [x21, x0]
   5b8b4:	mov	x0, x20
   5b8b8:	bl	c3c0 <mpfr_underflow@plt>
   5b8bc:	mov	w19, w0
   5b8c0:	ldp	x25, x26, [sp, #64]
   5b8c4:	b	5ae00 <mpfr_beta@@Base+0x150>
   5b8c8:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   5b8cc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5b8d0:	add	x2, x2, #0xa90
   5b8d4:	add	x0, x0, #0xfe8
   5b8d8:	mov	w1, #0xf7                  	// #247
   5b8dc:	bl	cb40 <mpfr_assert_fail@plt>
   5b8e0:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   5b8e4:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5b8e8:	add	x2, x2, #0xa90
   5b8ec:	add	x0, x0, #0xfe8
   5b8f0:	mov	w1, #0xc6                  	// #198
   5b8f4:	bl	cb40 <mpfr_assert_fail@plt>
   5b8f8:	adrp	x2, 5f000 <mpfr_free_pool@@Base+0x3558>
   5b8fc:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5b900:	add	x2, x2, #0xf70
   5b904:	add	x0, x0, #0xfe8
   5b908:	mov	w1, #0x108                 	// #264
   5b90c:	bl	cb40 <mpfr_assert_fail@plt>
   5b910:	bl	c8e0 <mpfr_abort_prec_max@plt>
   5b914:	adrp	x2, 66000 <mpfr_bases@@Base+0x16f8>
   5b918:	adrp	x0, 66000 <mpfr_bases@@Base+0x16f8>
   5b91c:	add	x2, x2, #0xa90
   5b920:	add	x0, x0, #0xfe8
   5b924:	mov	w1, #0xc8                  	// #200
   5b928:	bl	cb40 <mpfr_assert_fail@plt>
   5b92c:	nop

000000000005b930 <mpfr_odd_p@@Base>:
   5b930:	ldr	x3, [x0, #16]
   5b934:	cmp	x3, #0x0
   5b938:	b.le	5b9a8 <mpfr_odd_p@@Base+0x78>
   5b93c:	ldr	x1, [x0]
   5b940:	cmp	x3, x1
   5b944:	b.gt	5b9a8 <mpfr_odd_p@@Base+0x78>
   5b948:	sub	x2, x1, #0x1
   5b94c:	and	x2, x2, #0xffffffffffffffc0
   5b950:	add	x2, x2, #0x40
   5b954:	subs	x2, x2, x3
   5b958:	add	x1, x2, #0x3f
   5b95c:	csel	x1, x1, x2, mi  // mi = first
   5b960:	cmn	x2, #0x3f
   5b964:	asr	x1, x1, #6
   5b968:	b.lt	5b9d0 <mpfr_odd_p@@Base+0xa0>  // b.tstop
   5b96c:	ldr	x2, [x0, #24]
   5b970:	ands	x3, x3, #0x3f
   5b974:	ldr	x0, [x2, x1, lsl #3]
   5b978:	b.ne	5b9b0 <mpfr_odd_p@@Base+0x80>  // b.any
   5b97c:	mvn	x3, x0
   5b980:	mov	w0, #0x0                   	// #0
   5b984:	and	w3, w3, #0x1
   5b988:	cbz	w3, 5b998 <mpfr_odd_p@@Base+0x68>
   5b98c:	b	5b9cc <mpfr_odd_p@@Base+0x9c>
   5b990:	ldr	x0, [x2, x1, lsl #3]
   5b994:	cbnz	x0, 5b9a8 <mpfr_odd_p@@Base+0x78>
   5b998:	subs	x1, x1, #0x1
   5b99c:	b.pl	5b990 <mpfr_odd_p@@Base+0x60>  // b.nfrst
   5b9a0:	mov	w0, #0x1                   	// #1
   5b9a4:	ret
   5b9a8:	mov	w0, #0x0                   	// #0
   5b9ac:	ret
   5b9b0:	sub	w3, w3, #0x1
   5b9b4:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   5b9b8:	lsl	x3, x0, x3
   5b9bc:	cmp	x3, x4
   5b9c0:	cset	w3, ne  // ne = any
   5b9c4:	mov	w0, #0x0                   	// #0
   5b9c8:	cbz	w3, 5b998 <mpfr_odd_p@@Base+0x68>
   5b9cc:	ret
   5b9d0:	stp	x29, x30, [sp, #-16]!
   5b9d4:	adrp	x2, 67000 <mpfr_bases@@Base+0x26f8>
   5b9d8:	adrp	x0, 67000 <mpfr_bases@@Base+0x26f8>
   5b9dc:	mov	x29, sp
   5b9e0:	add	x2, x2, #0x38
   5b9e4:	add	x0, x0, #0x40
   5b9e8:	mov	w1, #0x3c                  	// #60
   5b9ec:	bl	cb40 <mpfr_assert_fail@plt>

000000000005b9f0 <mpfr_get_q@@Base>:
   5b9f0:	stp	x29, x30, [sp, #-32]!
   5b9f4:	mov	x29, sp
   5b9f8:	stp	x19, x20, [sp, #16]
   5b9fc:	mov	x20, x1
   5ba00:	mov	x19, x0
   5ba04:	mov	x1, #0x1                   	// #1
   5ba08:	add	x0, x0, #0x10
   5ba0c:	bl	bcb0 <__gmpz_set_ui@plt>
   5ba10:	ldr	x0, [x20, #16]
   5ba14:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   5ba18:	cmp	x0, x1
   5ba1c:	b.le	5ba60 <mpfr_get_q@@Base+0x70>
   5ba20:	mov	x1, x20
   5ba24:	mov	x0, x19
   5ba28:	bl	cac0 <mpfr_get_z_2exp@plt>
   5ba2c:	mov	x2, x0
   5ba30:	tbnz	x0, #63, 5ba48 <mpfr_get_q@@Base+0x58>
   5ba34:	mov	x1, x19
   5ba38:	mov	x0, x19
   5ba3c:	ldp	x19, x20, [sp, #16]
   5ba40:	ldp	x29, x30, [sp], #32
   5ba44:	b	c200 <__gmpz_mul_2exp@plt>
   5ba48:	neg	x2, x0
   5ba4c:	mov	x1, x19
   5ba50:	mov	x0, x19
   5ba54:	ldp	x19, x20, [sp, #16]
   5ba58:	ldp	x29, x30, [sp], #32
   5ba5c:	b	caf0 <__gmpq_div_2exp@plt>
   5ba60:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   5ba64:	cmp	x0, x1
   5ba68:	b.ne	5ba80 <mpfr_get_q@@Base+0x90>  // b.any
   5ba6c:	mov	x0, x19
   5ba70:	mov	x1, #0x0                   	// #0
   5ba74:	ldp	x19, x20, [sp, #16]
   5ba78:	ldp	x29, x30, [sp], #32
   5ba7c:	b	bcb0 <__gmpz_set_ui@plt>
   5ba80:	mrs	x1, tpidr_el0
   5ba84:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5ba88:	ldr	x2, [x0, #2576]
   5ba8c:	add	x0, x0, #0xa10
   5ba90:	blr	x2
   5ba94:	add	x0, x1, x0
   5ba98:	ldr	w1, [x0]
   5ba9c:	orr	w1, w1, #0x10
   5baa0:	str	w1, [x0]
   5baa4:	b	5ba6c <mpfr_get_q@@Base+0x7c>

000000000005baa8 <mpfr_free_pool@@Base>:
   5baa8:	stp	x29, x30, [sp, #-48]!
   5baac:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5bab0:	ldr	x1, [x0, #2496]
   5bab4:	add	x0, x0, #0x9c0
   5bab8:	blr	x1
   5babc:	mov	x29, sp
   5bac0:	str	x21, [sp, #32]
   5bac4:	mrs	x21, tpidr_el0
   5bac8:	stp	x19, x20, [sp, #16]
   5bacc:	add	x19, x21, x0
   5bad0:	ldr	w0, [x21, x0]
   5bad4:	cmp	w0, #0x0
   5bad8:	b.le	5bb14 <mpfr_free_pool@@Base+0x6c>
   5badc:	add	x19, x19, #0x8
   5bae0:	mov	w20, #0x0                   	// #0
   5bae4:	nop
   5bae8:	mov	x0, x19
   5baec:	bl	c640 <__gmpz_clear@plt>
   5baf0:	add	w20, w20, #0x1
   5baf4:	add	x19, x19, #0x10
   5baf8:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5bafc:	ldr	x1, [x0, #2496]
   5bb00:	add	x0, x0, #0x9c0
   5bb04:	blr	x1
   5bb08:	ldr	w0, [x21, x0]
   5bb0c:	cmp	w0, w20
   5bb10:	b.gt	5bae8 <mpfr_free_pool@@Base+0x40>
   5bb14:	adrp	x0, 82000 <mpfr_agm@@Base+0x6b130>
   5bb18:	ldr	x1, [x0, #2496]
   5bb1c:	add	x0, x0, #0x9c0
   5bb20:	blr	x1
   5bb24:	str	wzr, [x21, x0]
   5bb28:	ldp	x19, x20, [sp, #16]
   5bb2c:	ldr	x21, [sp, #32]
   5bb30:	ldp	x29, x30, [sp], #48
   5bb34:	ret
   5bb38:	stp	x29, x30, [sp, #-48]!
   5bb3c:	mov	x29, sp
   5bb40:	str	q0, [sp, #16]
   5bb44:	str	q1, [sp, #32]
   5bb48:	ldp	x6, x1, [sp, #16]
   5bb4c:	ldp	x0, x3, [sp, #32]
   5bb50:	mrs	x15, fpcr
   5bb54:	lsr	x7, x1, #63
   5bb58:	mov	x10, x0
   5bb5c:	ubfiz	x4, x3, #3, #48
   5bb60:	lsr	x5, x3, #63
   5bb64:	mov	x12, x7
   5bb68:	ubfiz	x2, x1, #3, #48
   5bb6c:	orr	x4, x4, x0, lsr #61
   5bb70:	ubfx	x8, x1, #48, #15
   5bb74:	ubfx	x0, x3, #48, #15
   5bb78:	and	w7, w7, #0xff
   5bb7c:	mov	x16, x12
   5bb80:	cmp	x12, x5
   5bb84:	and	w11, w5, #0xff
   5bb88:	orr	x2, x2, x6, lsr #61
   5bb8c:	mov	x1, x8
   5bb90:	lsl	x9, x6, #3
   5bb94:	mov	x3, x0
   5bb98:	lsl	x13, x10, #3
   5bb9c:	b.eq	5bd48 <mpfr_free_pool@@Base+0x2a0>  // b.none
   5bba0:	sub	w0, w8, w0
   5bba4:	cmp	w0, #0x0
   5bba8:	b.le	5bcf4 <mpfr_free_pool@@Base+0x24c>
   5bbac:	cbz	x3, 5bda8 <mpfr_free_pool@@Base+0x300>
   5bbb0:	orr	x4, x4, #0x8000000000000
   5bbb4:	mov	x3, #0x7fff                	// #32767
   5bbb8:	cmp	x1, x3
   5bbbc:	b.eq	5bfac <mpfr_free_pool@@Base+0x504>  // b.none
   5bbc0:	cmp	w0, #0x74
   5bbc4:	b.gt	5c030 <mpfr_free_pool@@Base+0x588>
   5bbc8:	cmp	w0, #0x3f
   5bbcc:	b.gt	5c190 <mpfr_free_pool@@Base+0x6e8>
   5bbd0:	mov	w3, #0x40                  	// #64
   5bbd4:	sub	w3, w3, w0
   5bbd8:	lsr	x6, x13, x0
   5bbdc:	lsl	x13, x13, x3
   5bbe0:	cmp	x13, #0x0
   5bbe4:	cset	x5, ne  // ne = any
   5bbe8:	lsl	x3, x4, x3
   5bbec:	orr	x3, x3, x6
   5bbf0:	lsr	x0, x4, x0
   5bbf4:	orr	x3, x3, x5
   5bbf8:	sub	x2, x2, x0
   5bbfc:	subs	x9, x9, x3
   5bc00:	sbc	x2, x2, xzr
   5bc04:	and	x3, x2, #0x7ffffffffffff
   5bc08:	tbz	x2, #51, 5bde8 <mpfr_free_pool@@Base+0x340>
   5bc0c:	cbz	x3, 5c014 <mpfr_free_pool@@Base+0x56c>
   5bc10:	clz	x0, x3
   5bc14:	sub	w0, w0, #0xc
   5bc18:	neg	w2, w0
   5bc1c:	lsl	x4, x3, x0
   5bc20:	lsl	x3, x9, x0
   5bc24:	lsr	x9, x9, x2
   5bc28:	orr	x2, x9, x4
   5bc2c:	cmp	x1, w0, sxtw
   5bc30:	sxtw	x4, w0
   5bc34:	b.gt	5bff4 <mpfr_free_pool@@Base+0x54c>
   5bc38:	sub	w1, w0, w1
   5bc3c:	add	w0, w1, #0x1
   5bc40:	cmp	w0, #0x3f
   5bc44:	b.gt	5c158 <mpfr_free_pool@@Base+0x6b0>
   5bc48:	mov	w1, #0x40                  	// #64
   5bc4c:	sub	w1, w1, w0
   5bc50:	lsr	x4, x3, x0
   5bc54:	lsl	x3, x3, x1
   5bc58:	cmp	x3, #0x0
   5bc5c:	lsl	x9, x2, x1
   5bc60:	cset	x1, ne  // ne = any
   5bc64:	orr	x9, x9, x4
   5bc68:	lsr	x2, x2, x0
   5bc6c:	orr	x9, x9, x1
   5bc70:	orr	x8, x9, x2
   5bc74:	cbz	x8, 5bdfc <mpfr_free_pool@@Base+0x354>
   5bc78:	and	x0, x9, #0x7
   5bc7c:	mov	x1, #0x0                   	// #0
   5bc80:	mov	w5, #0x1                   	// #1
   5bc84:	cbz	x0, 5c040 <mpfr_free_pool@@Base+0x598>
   5bc88:	and	x3, x15, #0xc00000
   5bc8c:	cmp	x3, #0x400, lsl #12
   5bc90:	b.eq	5bf84 <mpfr_free_pool@@Base+0x4dc>  // b.none
   5bc94:	cmp	x3, #0x800, lsl #12
   5bc98:	b.eq	5bf64 <mpfr_free_pool@@Base+0x4bc>  // b.none
   5bc9c:	cbz	x3, 5bf90 <mpfr_free_pool@@Base+0x4e8>
   5bca0:	and	x3, x2, #0x8000000000000
   5bca4:	mov	w0, #0x10                  	// #16
   5bca8:	cbz	w5, 5bcb0 <mpfr_free_pool@@Base+0x208>
   5bcac:	orr	w0, w0, #0x8
   5bcb0:	cbz	x3, 5bfc8 <mpfr_free_pool@@Base+0x520>
   5bcb4:	add	x1, x1, #0x1
   5bcb8:	mov	x3, #0x7fff                	// #32767
   5bcbc:	cmp	x1, x3
   5bcc0:	b.eq	5beac <mpfr_free_pool@@Base+0x404>  // b.none
   5bcc4:	and	w1, w1, #0x7fff
   5bcc8:	extr	x8, x2, x9, #3
   5bccc:	ubfx	x2, x2, #3, #48
   5bcd0:	mov	x5, #0x0                   	// #0
   5bcd4:	orr	w1, w1, w7, lsl #15
   5bcd8:	bfxil	x5, x2, #0, #48
   5bcdc:	fmov	d0, x8
   5bce0:	bfi	x5, x1, #48, #16
   5bce4:	fmov	v0.d[1], x5
   5bce8:	cbnz	w0, 5bf08 <mpfr_free_pool@@Base+0x460>
   5bcec:	ldp	x29, x30, [sp], #48
   5bcf0:	ret
   5bcf4:	mov	x14, x5
   5bcf8:	b.eq	5be14 <mpfr_free_pool@@Base+0x36c>  // b.none
   5bcfc:	cbnz	x8, 5c098 <mpfr_free_pool@@Base+0x5f0>
   5bd00:	orr	x1, x2, x9
   5bd04:	cbz	x1, 5bdc4 <mpfr_free_pool@@Base+0x31c>
   5bd08:	cmn	w0, #0x1
   5bd0c:	b.eq	5c4b4 <mpfr_free_pool@@Base+0xa0c>  // b.none
   5bd10:	mov	x1, #0x7fff                	// #32767
   5bd14:	mvn	w0, w0
   5bd18:	cmp	x3, x1
   5bd1c:	b.ne	5c0ac <mpfr_free_pool@@Base+0x604>  // b.any
   5bd20:	orr	x0, x4, x13
   5bd24:	cbnz	x0, 5c40c <mpfr_free_pool@@Base+0x964>
   5bd28:	mov	x16, x14
   5bd2c:	nop
   5bd30:	mov	x4, #0x0                   	// #0
   5bd34:	fmov	d0, x4
   5bd38:	lsl	x16, x16, #63
   5bd3c:	orr	x5, x16, #0x7fff000000000000
   5bd40:	fmov	v0.d[1], x5
   5bd44:	b	5bcec <mpfr_free_pool@@Base+0x244>
   5bd48:	sub	w5, w8, w0
   5bd4c:	cmp	w5, #0x0
   5bd50:	b.le	5bf1c <mpfr_free_pool@@Base+0x474>
   5bd54:	cbz	x0, 5be5c <mpfr_free_pool@@Base+0x3b4>
   5bd58:	orr	x4, x4, #0x8000000000000
   5bd5c:	mov	x0, #0x7fff                	// #32767
   5bd60:	cmp	x1, x0
   5bd64:	b.eq	5bfac <mpfr_free_pool@@Base+0x504>  // b.none
   5bd68:	cmp	w5, #0x74
   5bd6c:	b.gt	5c140 <mpfr_free_pool@@Base+0x698>
   5bd70:	cmp	w5, #0x3f
   5bd74:	b.gt	5c240 <mpfr_free_pool@@Base+0x798>
   5bd78:	mov	w0, #0x40                  	// #64
   5bd7c:	sub	w0, w0, w5
   5bd80:	lsr	x6, x13, x5
   5bd84:	lsl	x13, x13, x0
   5bd88:	cmp	x13, #0x0
   5bd8c:	lsl	x0, x4, x0
   5bd90:	cset	x3, ne  // ne = any
   5bd94:	orr	x0, x0, x6
   5bd98:	lsr	x4, x4, x5
   5bd9c:	orr	x0, x0, x3
   5bda0:	add	x2, x2, x4
   5bda4:	b	5c14c <mpfr_free_pool@@Base+0x6a4>
   5bda8:	orr	x3, x4, x13
   5bdac:	cbz	x3, 5c11c <mpfr_free_pool@@Base+0x674>
   5bdb0:	subs	w0, w0, #0x1
   5bdb4:	b.ne	5bbb4 <mpfr_free_pool@@Base+0x10c>  // b.any
   5bdb8:	subs	x9, x9, x13
   5bdbc:	sbc	x2, x2, x4
   5bdc0:	b	5bc04 <mpfr_free_pool@@Base+0x15c>
   5bdc4:	mov	x0, #0x7fff                	// #32767
   5bdc8:	cmp	x3, x0
   5bdcc:	b.eq	5c500 <mpfr_free_pool@@Base+0xa58>  // b.none
   5bdd0:	mov	w7, w11
   5bdd4:	mov	x2, x4
   5bdd8:	mov	x9, x13
   5bddc:	mov	x1, x3
   5bde0:	mov	x12, x5
   5bde4:	nop
   5bde8:	orr	x8, x9, x2
   5bdec:	and	x0, x9, #0x7
   5bdf0:	mov	w5, #0x0                   	// #0
   5bdf4:	cbnz	x1, 5bc84 <mpfr_free_pool@@Base+0x1dc>
   5bdf8:	cbnz	x8, 5bc78 <mpfr_free_pool@@Base+0x1d0>
   5bdfc:	mov	x2, #0x0                   	// #0
   5be00:	mov	x1, #0x0                   	// #0
   5be04:	mov	w0, #0x0                   	// #0
   5be08:	and	x2, x2, #0xffffffffffff
   5be0c:	and	w1, w1, #0x7fff
   5be10:	b	5bcd0 <mpfr_free_pool@@Base+0x228>
   5be14:	add	x5, x8, #0x1
   5be18:	tst	x5, #0x7ffe
   5be1c:	b.ne	5c0ec <mpfr_free_pool@@Base+0x644>  // b.any
   5be20:	orr	x5, x2, x9
   5be24:	orr	x8, x4, x13
   5be28:	cbnz	x1, 5c2ac <mpfr_free_pool@@Base+0x804>
   5be2c:	cbz	x5, 5c354 <mpfr_free_pool@@Base+0x8ac>
   5be30:	cbz	x8, 5c368 <mpfr_free_pool@@Base+0x8c0>
   5be34:	subs	x5, x9, x13
   5be38:	cmp	x9, x13
   5be3c:	sbc	x3, x2, x4
   5be40:	tbz	x3, #51, 5c534 <mpfr_free_pool@@Base+0xa8c>
   5be44:	subs	x9, x13, x9
   5be48:	mov	w7, w11
   5be4c:	sbc	x2, x4, x2
   5be50:	mov	x12, x14
   5be54:	orr	x8, x9, x2
   5be58:	b	5bc74 <mpfr_free_pool@@Base+0x1cc>
   5be5c:	orr	x0, x4, x13
   5be60:	cbz	x0, 5c334 <mpfr_free_pool@@Base+0x88c>
   5be64:	subs	w5, w5, #0x1
   5be68:	b.ne	5bd5c <mpfr_free_pool@@Base+0x2b4>  // b.any
   5be6c:	adds	x9, x9, x13
   5be70:	adc	x2, x4, x2
   5be74:	nop
   5be78:	tbz	x2, #51, 5bde8 <mpfr_free_pool@@Base+0x340>
   5be7c:	add	x1, x1, #0x1
   5be80:	mov	x0, #0x7fff                	// #32767
   5be84:	cmp	x1, x0
   5be88:	b.eq	5c374 <mpfr_free_pool@@Base+0x8cc>  // b.none
   5be8c:	and	x0, x9, #0x1
   5be90:	and	x3, x2, #0xfff7ffffffffffff
   5be94:	orr	x9, x0, x9, lsr #1
   5be98:	mov	w5, #0x0                   	// #0
   5be9c:	orr	x9, x9, x2, lsl #63
   5bea0:	lsr	x2, x3, #1
   5bea4:	and	x0, x9, #0x7
   5bea8:	b	5bc84 <mpfr_free_pool@@Base+0x1dc>
   5beac:	and	x3, x15, #0xc00000
   5beb0:	cbz	x3, 5bee8 <mpfr_free_pool@@Base+0x440>
   5beb4:	cmp	x3, #0x400, lsl #12
   5beb8:	b.eq	5bee0 <mpfr_free_pool@@Base+0x438>  // b.none
   5bebc:	cmp	x3, #0x800, lsl #12
   5bec0:	csel	w12, w12, wzr, eq  // eq = none
   5bec4:	cbnz	w12, 5bee8 <mpfr_free_pool@@Base+0x440>
   5bec8:	mov	w1, #0x14                  	// #20
   5becc:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5bed0:	orr	w0, w0, w1
   5bed4:	mov	x8, #0xffffffffffffffff    	// #-1
   5bed8:	mov	x1, #0x7ffe                	// #32766
   5bedc:	b	5be08 <mpfr_free_pool@@Base+0x360>
   5bee0:	cbnz	x12, 5bec8 <mpfr_free_pool@@Base+0x420>
   5bee4:	nop
   5bee8:	mov	w1, #0x14                  	// #20
   5beec:	and	x16, x7, #0xff
   5bef0:	orr	w0, w0, w1
   5bef4:	mov	x4, #0x0                   	// #0
   5bef8:	fmov	d0, x4
   5befc:	lsl	x16, x16, #63
   5bf00:	orr	x5, x16, #0x7fff000000000000
   5bf04:	fmov	v0.d[1], x5
   5bf08:	str	q0, [sp, #16]
   5bf0c:	bl	5e118 <mpfr_free_pool@@Base+0x2670>
   5bf10:	ldr	q0, [sp, #16]
   5bf14:	ldp	x29, x30, [sp], #48
   5bf18:	ret
   5bf1c:	b.eq	5c05c <mpfr_free_pool@@Base+0x5b4>  // b.none
   5bf20:	cbnz	x8, 5c1e0 <mpfr_free_pool@@Base+0x738>
   5bf24:	orr	x0, x2, x9
   5bf28:	cbz	x0, 5c44c <mpfr_free_pool@@Base+0x9a4>
   5bf2c:	cmn	w5, #0x1
   5bf30:	b.eq	5c5ac <mpfr_free_pool@@Base+0xb04>  // b.none
   5bf34:	mov	x0, #0x7fff                	// #32767
   5bf38:	mvn	w5, w5
   5bf3c:	cmp	x3, x0
   5bf40:	b.ne	5c1f4 <mpfr_free_pool@@Base+0x74c>  // b.any
   5bf44:	orr	x0, x4, x13
   5bf48:	cbz	x0, 5bd30 <mpfr_free_pool@@Base+0x288>
   5bf4c:	lsr	x5, x4, #50
   5bf50:	mov	x9, x13
   5bf54:	eor	x5, x5, #0x1
   5bf58:	mov	x2, x4
   5bf5c:	and	w5, w5, #0x1
   5bf60:	b	5bfc0 <mpfr_free_pool@@Base+0x518>
   5bf64:	mov	w0, #0x10                  	// #16
   5bf68:	cbz	x12, 5bf74 <mpfr_free_pool@@Base+0x4cc>
   5bf6c:	adds	x9, x9, #0x8
   5bf70:	cinc	x2, x2, cs  // cs = hs, nlast
   5bf74:	and	x3, x2, #0x8000000000000
   5bf78:	cbz	w5, 5bcb0 <mpfr_free_pool@@Base+0x208>
   5bf7c:	orr	w0, w0, #0x8
   5bf80:	b	5bcb0 <mpfr_free_pool@@Base+0x208>
   5bf84:	mov	w0, #0x10                  	// #16
   5bf88:	cbnz	x12, 5bf74 <mpfr_free_pool@@Base+0x4cc>
   5bf8c:	b	5bf6c <mpfr_free_pool@@Base+0x4c4>
   5bf90:	and	x3, x9, #0xf
   5bf94:	mov	w0, #0x10                  	// #16
   5bf98:	cmp	x3, #0x4
   5bf9c:	b.eq	5bf74 <mpfr_free_pool@@Base+0x4cc>  // b.none
   5bfa0:	adds	x9, x9, #0x4
   5bfa4:	cinc	x2, x2, cs  // cs = hs, nlast
   5bfa8:	b	5bf74 <mpfr_free_pool@@Base+0x4cc>
   5bfac:	orr	x0, x2, x9
   5bfb0:	cbz	x0, 5bd30 <mpfr_free_pool@@Base+0x288>
   5bfb4:	lsr	x5, x2, #50
   5bfb8:	eor	x5, x5, #0x1
   5bfbc:	and	w5, w5, #0x1
   5bfc0:	mov	w0, w5
   5bfc4:	mov	x1, #0x7fff                	// #32767
   5bfc8:	mov	x3, #0x7fff                	// #32767
   5bfcc:	extr	x8, x2, x9, #3
   5bfd0:	cmp	x1, x3
   5bfd4:	lsr	x2, x2, #3
   5bfd8:	b.ne	5be08 <mpfr_free_pool@@Base+0x360>  // b.any
   5bfdc:	orr	x1, x8, x2
   5bfe0:	cbz	x1, 5c64c <mpfr_free_pool@@Base+0xba4>
   5bfe4:	orr	x2, x2, #0x800000000000
   5bfe8:	mov	w1, #0x7fff                	// #32767
   5bfec:	and	x2, x2, #0xffffffffffff
   5bff0:	b	5bcd0 <mpfr_free_pool@@Base+0x228>
   5bff4:	mov	x9, x3
   5bff8:	and	x2, x2, #0xfff7ffffffffffff
   5bffc:	sub	x1, x1, x4
   5c000:	orr	x8, x9, x2
   5c004:	and	x0, x9, #0x7
   5c008:	mov	w5, #0x0                   	// #0
   5c00c:	cbz	x1, 5bdf8 <mpfr_free_pool@@Base+0x350>
   5c010:	b	5bc84 <mpfr_free_pool@@Base+0x1dc>
   5c014:	clz	x2, x9
   5c018:	add	w0, w2, #0x34
   5c01c:	cmp	w0, #0x3f
   5c020:	b.le	5bc18 <mpfr_free_pool@@Base+0x170>
   5c024:	sub	w2, w2, #0xc
   5c028:	lsl	x2, x9, x2
   5c02c:	b	5bc2c <mpfr_free_pool@@Base+0x184>
   5c030:	orr	x4, x4, x13
   5c034:	cmp	x4, #0x0
   5c038:	cset	x3, ne  // ne = any
   5c03c:	b	5bbfc <mpfr_free_pool@@Base+0x154>
   5c040:	and	x3, x2, #0x8000000000000
   5c044:	mov	w0, #0x0                   	// #0
   5c048:	cbz	w5, 5bcb0 <mpfr_free_pool@@Base+0x208>
   5c04c:	mov	w0, #0x0                   	// #0
   5c050:	tbz	w15, #11, 5bcb0 <mpfr_free_pool@@Base+0x208>
   5c054:	orr	w0, w0, #0x8
   5c058:	b	5bcb0 <mpfr_free_pool@@Base+0x208>
   5c05c:	add	x0, x8, #0x1
   5c060:	tst	x0, #0x7ffe
   5c064:	b.ne	5c26c <mpfr_free_pool@@Base+0x7c4>  // b.any
   5c068:	orr	x0, x2, x9
   5c06c:	cbnz	x8, 5c428 <mpfr_free_pool@@Base+0x980>
   5c070:	orr	x8, x4, x13
   5c074:	cbz	x0, 5c47c <mpfr_free_pool@@Base+0x9d4>
   5c078:	cbz	x8, 5c368 <mpfr_free_pool@@Base+0x8c0>
   5c07c:	adds	x9, x9, x13
   5c080:	adc	x2, x4, x2
   5c084:	tbz	x2, #51, 5be54 <mpfr_free_pool@@Base+0x3ac>
   5c088:	and	x2, x2, #0xfff7ffffffffffff
   5c08c:	and	x0, x9, #0x7
   5c090:	mov	x1, #0x1                   	// #1
   5c094:	b	5bc84 <mpfr_free_pool@@Base+0x1dc>
   5c098:	mov	x1, #0x7fff                	// #32767
   5c09c:	neg	w0, w0
   5c0a0:	orr	x2, x2, #0x8000000000000
   5c0a4:	cmp	x3, x1
   5c0a8:	b.eq	5bd20 <mpfr_free_pool@@Base+0x278>  // b.none
   5c0ac:	cmp	w0, #0x74
   5c0b0:	b.gt	5c1bc <mpfr_free_pool@@Base+0x714>
   5c0b4:	cmp	w0, #0x3f
   5c0b8:	b.gt	5c3d8 <mpfr_free_pool@@Base+0x930>
   5c0bc:	mov	w1, #0x40                  	// #64
   5c0c0:	sub	w1, w1, w0
   5c0c4:	lsr	x5, x9, x0
   5c0c8:	lsl	x9, x9, x1
   5c0cc:	cmp	x9, #0x0
   5c0d0:	lsl	x9, x2, x1
   5c0d4:	cset	x1, ne  // ne = any
   5c0d8:	orr	x9, x9, x5
   5c0dc:	lsr	x0, x2, x0
   5c0e0:	orr	x9, x9, x1
   5c0e4:	sub	x4, x4, x0
   5c0e8:	b	5c1c8 <mpfr_free_pool@@Base+0x720>
   5c0ec:	subs	x5, x9, x13
   5c0f0:	cmp	x9, x13
   5c0f4:	sbc	x3, x2, x4
   5c0f8:	tbnz	x3, #51, 5c294 <mpfr_free_pool@@Base+0x7ec>
   5c0fc:	orr	x8, x5, x3
   5c100:	cbnz	x8, 5c3c0 <mpfr_free_pool@@Base+0x918>
   5c104:	and	x15, x15, #0xc00000
   5c108:	mov	x2, #0x0                   	// #0
   5c10c:	cmp	x15, #0x800, lsl #12
   5c110:	mov	x1, #0x0                   	// #0
   5c114:	cset	w7, eq  // eq = none
   5c118:	b	5be08 <mpfr_free_pool@@Base+0x360>
   5c11c:	mov	x0, #0x7fff                	// #32767
   5c120:	cmp	x8, x0
   5c124:	b.ne	5bde8 <mpfr_free_pool@@Base+0x340>  // b.any
   5c128:	orr	x0, x2, x9
   5c12c:	cbnz	x0, 5bfb4 <mpfr_free_pool@@Base+0x50c>
   5c130:	mov	x2, #0x0                   	// #0
   5c134:	mov	x8, #0x0                   	// #0
   5c138:	mov	w0, #0x0                   	// #0
   5c13c:	b	5bfdc <mpfr_free_pool@@Base+0x534>
   5c140:	orr	x4, x4, x13
   5c144:	cmp	x4, #0x0
   5c148:	cset	x0, ne  // ne = any
   5c14c:	adds	x9, x0, x9
   5c150:	cinc	x2, x2, cs  // cs = hs, nlast
   5c154:	b	5be78 <mpfr_free_pool@@Base+0x3d0>
   5c158:	mov	w4, #0x80                  	// #128
   5c15c:	sub	w4, w4, w0
   5c160:	cmp	w0, #0x40
   5c164:	sub	w9, w1, #0x3f
   5c168:	lsl	x0, x2, x4
   5c16c:	orr	x0, x3, x0
   5c170:	csel	x3, x0, x3, ne  // ne = any
   5c174:	lsr	x9, x2, x9
   5c178:	cmp	x3, #0x0
   5c17c:	mov	x2, #0x0                   	// #0
   5c180:	cset	x0, ne  // ne = any
   5c184:	orr	x9, x0, x9
   5c188:	mov	x8, x9
   5c18c:	b	5bc74 <mpfr_free_pool@@Base+0x1cc>
   5c190:	mov	w5, #0x80                  	// #128
   5c194:	sub	w5, w5, w0
   5c198:	subs	w0, w0, #0x40
   5c19c:	lsl	x5, x4, x5
   5c1a0:	orr	x5, x13, x5
   5c1a4:	csel	x13, x5, x13, ne  // ne = any
   5c1a8:	lsr	x4, x4, x0
   5c1ac:	cmp	x13, #0x0
   5c1b0:	cset	x3, ne  // ne = any
   5c1b4:	orr	x3, x3, x4
   5c1b8:	b	5bbfc <mpfr_free_pool@@Base+0x154>
   5c1bc:	orr	x2, x2, x9
   5c1c0:	cmp	x2, #0x0
   5c1c4:	cset	x9, ne  // ne = any
   5c1c8:	subs	x9, x13, x9
   5c1cc:	mov	w7, w11
   5c1d0:	sbc	x2, x4, xzr
   5c1d4:	mov	x1, x3
   5c1d8:	mov	x12, x14
   5c1dc:	b	5bc04 <mpfr_free_pool@@Base+0x15c>
   5c1e0:	mov	x0, #0x7fff                	// #32767
   5c1e4:	neg	w5, w5
   5c1e8:	orr	x2, x2, #0x8000000000000
   5c1ec:	cmp	x3, x0
   5c1f0:	b.eq	5bf44 <mpfr_free_pool@@Base+0x49c>  // b.none
   5c1f4:	cmp	w5, #0x74
   5c1f8:	b.gt	5c3c8 <mpfr_free_pool@@Base+0x920>
   5c1fc:	cmp	w5, #0x3f
   5c200:	b.gt	5c488 <mpfr_free_pool@@Base+0x9e0>
   5c204:	mov	w1, #0x40                  	// #64
   5c208:	sub	w1, w1, w5
   5c20c:	lsr	x6, x9, x5
   5c210:	lsl	x9, x9, x1
   5c214:	cmp	x9, #0x0
   5c218:	cset	x0, ne  // ne = any
   5c21c:	lsl	x9, x2, x1
   5c220:	orr	x9, x9, x6
   5c224:	lsr	x5, x2, x5
   5c228:	orr	x9, x9, x0
   5c22c:	add	x4, x4, x5
   5c230:	adds	x9, x9, x13
   5c234:	mov	x1, x3
   5c238:	cinc	x2, x4, cs  // cs = hs, nlast
   5c23c:	b	5be78 <mpfr_free_pool@@Base+0x3d0>
   5c240:	mov	w0, #0x80                  	// #128
   5c244:	sub	w0, w0, w5
   5c248:	subs	w5, w5, #0x40
   5c24c:	lsl	x0, x4, x0
   5c250:	orr	x0, x13, x0
   5c254:	csel	x13, x0, x13, ne  // ne = any
   5c258:	lsr	x4, x4, x5
   5c25c:	cmp	x13, #0x0
   5c260:	cset	x0, ne  // ne = any
   5c264:	orr	x0, x0, x4
   5c268:	b	5c14c <mpfr_free_pool@@Base+0x6a4>
   5c26c:	mov	x1, #0x7fff                	// #32767
   5c270:	cmp	x0, x1
   5c274:	b.eq	5c4d0 <mpfr_free_pool@@Base+0xa28>  // b.none
   5c278:	adds	x9, x9, x13
   5c27c:	mov	x1, x0
   5c280:	adc	x2, x4, x2
   5c284:	ubfx	x0, x9, #1, #3
   5c288:	extr	x9, x2, x9, #1
   5c28c:	lsr	x2, x2, #1
   5c290:	b	5bc84 <mpfr_free_pool@@Base+0x1dc>
   5c294:	cmp	x13, x9
   5c298:	mov	w7, w11
   5c29c:	sbc	x3, x4, x2
   5c2a0:	sub	x9, x13, x9
   5c2a4:	mov	x12, x14
   5c2a8:	b	5bc0c <mpfr_free_pool@@Base+0x164>
   5c2ac:	mov	x12, #0x7fff                	// #32767
   5c2b0:	cmp	x1, x12
   5c2b4:	b.eq	5c2e0 <mpfr_free_pool@@Base+0x838>  // b.none
   5c2b8:	cmp	x3, x12
   5c2bc:	b.eq	5c510 <mpfr_free_pool@@Base+0xa68>  // b.none
   5c2c0:	cbnz	x5, 5c2f8 <mpfr_free_pool@@Base+0x850>
   5c2c4:	mov	w5, w0
   5c2c8:	cbnz	x8, 5c5f0 <mpfr_free_pool@@Base+0xb48>
   5c2cc:	mov	w7, #0x0                   	// #0
   5c2d0:	mov	x2, #0xffffffffffff        	// #281474976710655
   5c2d4:	mov	w0, #0x1                   	// #1
   5c2d8:	mov	x8, #0xffffffffffffffff    	// #-1
   5c2dc:	b	5bfe4 <mpfr_free_pool@@Base+0x53c>
   5c2e0:	cbz	x5, 5c60c <mpfr_free_pool@@Base+0xb64>
   5c2e4:	lsr	x0, x2, #50
   5c2e8:	cmp	x3, x1
   5c2ec:	eor	x0, x0, #0x1
   5c2f0:	and	w0, w0, #0x1
   5c2f4:	b.eq	5c510 <mpfr_free_pool@@Base+0xa68>  // b.none
   5c2f8:	cbz	x8, 5c52c <mpfr_free_pool@@Base+0xa84>
   5c2fc:	bfi	x6, x2, #61, #3
   5c300:	lsr	x3, x2, #3
   5c304:	tbz	x2, #50, 5c320 <mpfr_free_pool@@Base+0x878>
   5c308:	lsr	x1, x4, #3
   5c30c:	tbnz	x4, #50, 5c320 <mpfr_free_pool@@Base+0x878>
   5c310:	mov	x6, x10
   5c314:	mov	w7, w11
   5c318:	bfi	x6, x4, #61, #3
   5c31c:	mov	x3, x1
   5c320:	extr	x2, x3, x6, #61
   5c324:	bfi	x6, x2, #61, #3
   5c328:	lsr	x2, x2, #3
   5c32c:	mov	x8, x6
   5c330:	b	5bfdc <mpfr_free_pool@@Base+0x534>
   5c334:	mov	x0, #0x7fff                	// #32767
   5c338:	cmp	x8, x0
   5c33c:	b.ne	5bde8 <mpfr_free_pool@@Base+0x340>  // b.any
   5c340:	orr	x0, x2, x9
   5c344:	cbz	x0, 5c130 <mpfr_free_pool@@Base+0x688>
   5c348:	lsr	x5, x2, #50
   5c34c:	eor	w5, w5, #0x1
   5c350:	b	5bfc0 <mpfr_free_pool@@Base+0x518>
   5c354:	cbz	x8, 5c468 <mpfr_free_pool@@Base+0x9c0>
   5c358:	mov	w7, w11
   5c35c:	mov	x2, x4
   5c360:	mov	x9, x13
   5c364:	mov	x12, x14
   5c368:	mov	x1, #0x0                   	// #0
   5c36c:	mov	x3, #0x0                   	// #0
   5c370:	b	5c04c <mpfr_free_pool@@Base+0x5a4>
   5c374:	ands	x3, x15, #0xc00000
   5c378:	b.eq	5c404 <mpfr_free_pool@@Base+0x95c>  // b.none
   5c37c:	cmp	x3, #0x400, lsl #12
   5c380:	eor	w0, w7, #0x1
   5c384:	cset	w1, eq  // eq = none
   5c388:	tst	w1, w0
   5c38c:	b.ne	5c628 <mpfr_free_pool@@Base+0xb80>  // b.any
   5c390:	cmp	x3, #0x800, lsl #12
   5c394:	b.eq	5c5d4 <mpfr_free_pool@@Base+0xb2c>  // b.none
   5c398:	cmp	x3, #0x400, lsl #12
   5c39c:	mov	w0, #0x14                  	// #20
   5c3a0:	b.ne	5beb0 <mpfr_free_pool@@Base+0x408>  // b.any
   5c3a4:	mov	x2, #0xffffffffffffffff    	// #-1
   5c3a8:	mov	x1, #0x7ffe                	// #32766
   5c3ac:	mov	x9, x2
   5c3b0:	mov	w5, #0x0                   	// #0
   5c3b4:	mov	w0, #0x14                  	// #20
   5c3b8:	cbnz	x12, 5bf74 <mpfr_free_pool@@Base+0x4cc>
   5c3bc:	b	5bf6c <mpfr_free_pool@@Base+0x4c4>
   5c3c0:	mov	x9, x5
   5c3c4:	b	5bc0c <mpfr_free_pool@@Base+0x164>
   5c3c8:	orr	x2, x2, x9
   5c3cc:	cmp	x2, #0x0
   5c3d0:	cset	x9, ne  // ne = any
   5c3d4:	b	5c230 <mpfr_free_pool@@Base+0x788>
   5c3d8:	mov	w1, #0x80                  	// #128
   5c3dc:	sub	w1, w1, w0
   5c3e0:	subs	w0, w0, #0x40
   5c3e4:	lsl	x1, x2, x1
   5c3e8:	orr	x1, x9, x1
   5c3ec:	csel	x9, x1, x9, ne  // ne = any
   5c3f0:	lsr	x2, x2, x0
   5c3f4:	cmp	x9, #0x0
   5c3f8:	cset	x9, ne  // ne = any
   5c3fc:	orr	x9, x9, x2
   5c400:	b	5c1c8 <mpfr_free_pool@@Base+0x720>
   5c404:	mov	w0, #0x14                  	// #20
   5c408:	b	5bef4 <mpfr_free_pool@@Base+0x44c>
   5c40c:	lsr	x5, x4, #50
   5c410:	mov	w7, w11
   5c414:	eor	x5, x5, #0x1
   5c418:	mov	x9, x13
   5c41c:	and	w5, w5, #0x1
   5c420:	mov	x2, x4
   5c424:	b	5bfc0 <mpfr_free_pool@@Base+0x518>
   5c428:	mov	x8, #0x7fff                	// #32767
   5c42c:	cmp	x1, x8
   5c430:	b.eq	5c550 <mpfr_free_pool@@Base+0xaa8>  // b.none
   5c434:	cmp	x3, x8
   5c438:	b.eq	5c5c4 <mpfr_free_pool@@Base+0xb1c>  // b.none
   5c43c:	cbnz	x0, 5c568 <mpfr_free_pool@@Base+0xac0>
   5c440:	mov	x2, x4
   5c444:	mov	x9, x13
   5c448:	b	5bfc0 <mpfr_free_pool@@Base+0x518>
   5c44c:	mov	x0, #0x7fff                	// #32767
   5c450:	cmp	x3, x0
   5c454:	b.eq	5c600 <mpfr_free_pool@@Base+0xb58>  // b.none
   5c458:	mov	x2, x4
   5c45c:	mov	x9, x13
   5c460:	mov	x1, x3
   5c464:	b	5bde8 <mpfr_free_pool@@Base+0x340>
   5c468:	and	x15, x15, #0xc00000
   5c46c:	mov	x2, #0x0                   	// #0
   5c470:	cmp	x15, #0x800, lsl #12
   5c474:	cset	w7, eq  // eq = none
   5c478:	b	5be08 <mpfr_free_pool@@Base+0x360>
   5c47c:	mov	x2, x4
   5c480:	mov	x9, x13
   5c484:	b	5bc74 <mpfr_free_pool@@Base+0x1cc>
   5c488:	mov	w0, #0x80                  	// #128
   5c48c:	sub	w0, w0, w5
   5c490:	subs	w5, w5, #0x40
   5c494:	lsl	x0, x2, x0
   5c498:	orr	x0, x9, x0
   5c49c:	csel	x9, x0, x9, ne  // ne = any
   5c4a0:	lsr	x2, x2, x5
   5c4a4:	cmp	x9, #0x0
   5c4a8:	cset	x9, ne  // ne = any
   5c4ac:	orr	x9, x9, x2
   5c4b0:	b	5c230 <mpfr_free_pool@@Base+0x788>
   5c4b4:	cmp	x13, x9
   5c4b8:	mov	w7, w11
   5c4bc:	sbc	x2, x4, x2
   5c4c0:	sub	x9, x13, x9
   5c4c4:	mov	x1, x3
   5c4c8:	mov	x12, x5
   5c4cc:	b	5bc04 <mpfr_free_pool@@Base+0x15c>
   5c4d0:	ands	x3, x15, #0xc00000
   5c4d4:	b.eq	5c404 <mpfr_free_pool@@Base+0x95c>  // b.none
   5c4d8:	cmp	x3, #0x400, lsl #12
   5c4dc:	eor	w0, w7, #0x1
   5c4e0:	csel	w0, w0, wzr, eq  // eq = none
   5c4e4:	cbnz	w0, 5c628 <mpfr_free_pool@@Base+0xb80>
   5c4e8:	cmp	x3, #0x800, lsl #12
   5c4ec:	b.ne	5c398 <mpfr_free_pool@@Base+0x8f0>  // b.any
   5c4f0:	cbz	x12, 5c5d8 <mpfr_free_pool@@Base+0xb30>
   5c4f4:	mov	w0, #0x14                  	// #20
   5c4f8:	mov	x16, #0x1                   	// #1
   5c4fc:	b	5bef4 <mpfr_free_pool@@Base+0x44c>
   5c500:	orr	x0, x4, x13
   5c504:	cbnz	x0, 5c40c <mpfr_free_pool@@Base+0x964>
   5c508:	mov	w7, w11
   5c50c:	b	5c130 <mpfr_free_pool@@Base+0x688>
   5c510:	cbz	x8, 5c61c <mpfr_free_pool@@Base+0xb74>
   5c514:	tst	x4, #0x4000000000000
   5c518:	csinc	w0, w0, wzr, ne  // ne = any
   5c51c:	cbnz	x5, 5c2fc <mpfr_free_pool@@Base+0x854>
   5c520:	mov	w7, w11
   5c524:	mov	x2, x4
   5c528:	mov	x9, x13
   5c52c:	mov	w5, w0
   5c530:	b	5bfc0 <mpfr_free_pool@@Base+0x518>
   5c534:	orr	x8, x5, x3
   5c538:	cbz	x8, 5c468 <mpfr_free_pool@@Base+0x9c0>
   5c53c:	and	x0, x5, #0x7
   5c540:	mov	x9, x5
   5c544:	mov	x2, x3
   5c548:	mov	w5, #0x1                   	// #1
   5c54c:	b	5bc84 <mpfr_free_pool@@Base+0x1dc>
   5c550:	cbz	x0, 5c5bc <mpfr_free_pool@@Base+0xb14>
   5c554:	lsr	x5, x2, #50
   5c558:	cmp	x3, x1
   5c55c:	eor	x5, x5, #0x1
   5c560:	and	w5, w5, #0x1
   5c564:	b.eq	5c634 <mpfr_free_pool@@Base+0xb8c>  // b.none
   5c568:	orr	x13, x4, x13
   5c56c:	cbz	x13, 5bfc0 <mpfr_free_pool@@Base+0x518>
   5c570:	bfi	x6, x2, #61, #3
   5c574:	lsr	x0, x2, #3
   5c578:	tbz	x2, #50, 5c594 <mpfr_free_pool@@Base+0xaec>
   5c57c:	lsr	x1, x4, #3
   5c580:	tbnz	x4, #50, 5c594 <mpfr_free_pool@@Base+0xaec>
   5c584:	and	x6, x10, #0x1fffffffffffffff
   5c588:	mov	w7, w11
   5c58c:	orr	x6, x6, x4, lsl #61
   5c590:	mov	x0, x1
   5c594:	extr	x2, x0, x6, #61
   5c598:	mov	w0, w5
   5c59c:	bfi	x6, x2, #61, #3
   5c5a0:	lsr	x2, x2, #3
   5c5a4:	mov	x8, x6
   5c5a8:	b	5bfdc <mpfr_free_pool@@Base+0x534>
   5c5ac:	adds	x9, x9, x13
   5c5b0:	mov	x1, x3
   5c5b4:	adc	x2, x4, x2
   5c5b8:	b	5be78 <mpfr_free_pool@@Base+0x3d0>
   5c5bc:	cmp	x3, x1
   5c5c0:	b.ne	5c440 <mpfr_free_pool@@Base+0x998>  // b.any
   5c5c4:	orr	x1, x4, x13
   5c5c8:	cbnz	x1, 5c63c <mpfr_free_pool@@Base+0xb94>
   5c5cc:	cbz	x0, 5c130 <mpfr_free_pool@@Base+0x688>
   5c5d0:	b	5bfc0 <mpfr_free_pool@@Base+0x518>
   5c5d4:	cbnz	x16, 5c4f4 <mpfr_free_pool@@Base+0xa4c>
   5c5d8:	mov	x2, #0xffffffffffffffff    	// #-1
   5c5dc:	mov	w7, #0x0                   	// #0
   5c5e0:	mov	x9, x2
   5c5e4:	mov	x1, #0x7ffe                	// #32766
   5c5e8:	mov	w0, #0x14                  	// #20
   5c5ec:	b	5bcb4 <mpfr_free_pool@@Base+0x20c>
   5c5f0:	mov	w7, w11
   5c5f4:	mov	x2, x4
   5c5f8:	mov	x9, x13
   5c5fc:	b	5bfc0 <mpfr_free_pool@@Base+0x518>
   5c600:	orr	x0, x4, x13
   5c604:	cbz	x0, 5c130 <mpfr_free_pool@@Base+0x688>
   5c608:	b	5bf4c <mpfr_free_pool@@Base+0x4a4>
   5c60c:	cmp	x3, x1
   5c610:	b.eq	5c510 <mpfr_free_pool@@Base+0xa68>  // b.none
   5c614:	mov	w5, #0x0                   	// #0
   5c618:	b	5c2c8 <mpfr_free_pool@@Base+0x820>
   5c61c:	cbnz	x5, 5c52c <mpfr_free_pool@@Base+0xa84>
   5c620:	mov	w5, w0
   5c624:	b	5c2c8 <mpfr_free_pool@@Base+0x820>
   5c628:	mov	w0, #0x14                  	// #20
   5c62c:	mov	x16, #0x0                   	// #0
   5c630:	b	5bef4 <mpfr_free_pool@@Base+0x44c>
   5c634:	orr	x1, x4, x13
   5c638:	cbz	x1, 5bfc0 <mpfr_free_pool@@Base+0x518>
   5c63c:	tst	x4, #0x4000000000000
   5c640:	csinc	w5, w5, wzr, ne  // ne = any
   5c644:	cbnz	x0, 5c570 <mpfr_free_pool@@Base+0xac8>
   5c648:	b	5c440 <mpfr_free_pool@@Base+0x998>
   5c64c:	mov	x8, #0x0                   	// #0
   5c650:	mov	w1, #0x7fff                	// #32767
   5c654:	mov	x2, #0x0                   	// #0
   5c658:	b	5bcd0 <mpfr_free_pool@@Base+0x228>
   5c65c:	nop
   5c660:	stp	x29, x30, [sp, #-48]!
   5c664:	mov	x29, sp
   5c668:	str	q0, [sp, #16]
   5c66c:	str	q1, [sp, #32]
   5c670:	ldp	x6, x1, [sp, #16]
   5c674:	ldp	x7, x0, [sp, #32]
   5c678:	mrs	x2, fpcr
   5c67c:	ubfx	x4, x1, #48, #15
   5c680:	lsr	x2, x1, #63
   5c684:	lsr	x3, x0, #63
   5c688:	ubfx	x9, x0, #0, #48
   5c68c:	mov	x5, #0x7fff                	// #32767
   5c690:	mov	x10, x6
   5c694:	cmp	x4, x5
   5c698:	and	w2, w2, #0xff
   5c69c:	ubfx	x1, x1, #0, #48
   5c6a0:	and	w3, w3, #0xff
   5c6a4:	ubfx	x0, x0, #48, #15
   5c6a8:	b.eq	5c6dc <mpfr_free_pool@@Base+0xc34>  // b.none
   5c6ac:	cmp	x0, x5
   5c6b0:	b.eq	5c6c8 <mpfr_free_pool@@Base+0xc20>  // b.none
   5c6b4:	cmp	x4, x0
   5c6b8:	mov	w0, #0x1                   	// #1
   5c6bc:	b.eq	5c6f4 <mpfr_free_pool@@Base+0xc4c>  // b.none
   5c6c0:	ldp	x29, x30, [sp], #48
   5c6c4:	ret
   5c6c8:	orr	x8, x9, x7
   5c6cc:	cbnz	x8, 5c758 <mpfr_free_pool@@Base+0xcb0>
   5c6d0:	mov	w0, #0x1                   	// #1
   5c6d4:	ldp	x29, x30, [sp], #48
   5c6d8:	ret
   5c6dc:	orr	x5, x1, x6
   5c6e0:	cbnz	x5, 5c728 <mpfr_free_pool@@Base+0xc80>
   5c6e4:	cmp	x0, x4
   5c6e8:	b.ne	5c6d0 <mpfr_free_pool@@Base+0xc28>  // b.any
   5c6ec:	orr	x8, x9, x7
   5c6f0:	cbnz	x8, 5c758 <mpfr_free_pool@@Base+0xcb0>
   5c6f4:	cmp	x1, x9
   5c6f8:	mov	w0, #0x1                   	// #1
   5c6fc:	ccmp	x6, x7, #0x0, eq  // eq = none
   5c700:	b.ne	5c6c0 <mpfr_free_pool@@Base+0xc18>  // b.any
   5c704:	cmp	w2, w3
   5c708:	mov	w0, #0x0                   	// #0
   5c70c:	b.eq	5c6c0 <mpfr_free_pool@@Base+0xc18>  // b.none
   5c710:	mov	w0, #0x1                   	// #1
   5c714:	cbnz	x4, 5c6c0 <mpfr_free_pool@@Base+0xc18>
   5c718:	orr	x1, x1, x10
   5c71c:	cmp	x1, #0x0
   5c720:	cset	w0, ne  // ne = any
   5c724:	b	5c6c0 <mpfr_free_pool@@Base+0xc18>
   5c728:	tst	x1, #0x800000000000
   5c72c:	b.ne	5c744 <mpfr_free_pool@@Base+0xc9c>  // b.any
   5c730:	mov	w0, #0x1                   	// #1
   5c734:	bl	5e118 <mpfr_free_pool@@Base+0x2670>
   5c738:	mov	w0, #0x1                   	// #1
   5c73c:	ldp	x29, x30, [sp], #48
   5c740:	ret
   5c744:	cmp	x0, x4
   5c748:	mov	w0, #0x1                   	// #1
   5c74c:	b.ne	5c6c0 <mpfr_free_pool@@Base+0xc18>  // b.any
   5c750:	orr	x8, x9, x7
   5c754:	cbz	x8, 5c6c0 <mpfr_free_pool@@Base+0xc18>
   5c758:	tst	x9, #0x800000000000
   5c75c:	b.eq	5c730 <mpfr_free_pool@@Base+0xc88>  // b.none
   5c760:	b	5c6d0 <mpfr_free_pool@@Base+0xc28>
   5c764:	nop
   5c768:	stp	x29, x30, [sp, #-48]!
   5c76c:	mov	x29, sp
   5c770:	str	q0, [sp, #16]
   5c774:	str	q1, [sp, #32]
   5c778:	ldp	x8, x1, [sp, #16]
   5c77c:	ldp	x9, x0, [sp, #32]
   5c780:	mrs	x2, fpcr
   5c784:	ubfx	x4, x1, #48, #15
   5c788:	ubfx	x10, x1, #0, #48
   5c78c:	lsr	x2, x1, #63
   5c790:	mov	x7, #0x7fff                	// #32767
   5c794:	mov	x5, x8
   5c798:	cmp	x4, x7
   5c79c:	ubfx	x11, x0, #0, #48
   5c7a0:	ubfx	x6, x0, #48, #15
   5c7a4:	lsr	x1, x0, #63
   5c7a8:	mov	x3, x9
   5c7ac:	b.eq	5c7e8 <mpfr_free_pool@@Base+0xd40>  // b.none
   5c7b0:	cmp	x6, x7
   5c7b4:	b.eq	5c7f8 <mpfr_free_pool@@Base+0xd50>  // b.none
   5c7b8:	cbnz	x4, 5c820 <mpfr_free_pool@@Base+0xd78>
   5c7bc:	orr	x5, x10, x8
   5c7c0:	cmp	x5, #0x0
   5c7c4:	cset	w0, eq  // eq = none
   5c7c8:	cbnz	x6, 5c7d4 <mpfr_free_pool@@Base+0xd2c>
   5c7cc:	orr	x3, x11, x9
   5c7d0:	cbz	x3, 5c840 <mpfr_free_pool@@Base+0xd98>
   5c7d4:	cbz	w0, 5c804 <mpfr_free_pool@@Base+0xd5c>
   5c7d8:	cmp	x1, #0x0
   5c7dc:	csinv	w0, w0, wzr, ne  // ne = any
   5c7e0:	ldp	x29, x30, [sp], #48
   5c7e4:	ret
   5c7e8:	orr	x0, x10, x8
   5c7ec:	cbnz	x0, 5c84c <mpfr_free_pool@@Base+0xda4>
   5c7f0:	cmp	x6, x4
   5c7f4:	b.ne	5c820 <mpfr_free_pool@@Base+0xd78>  // b.any
   5c7f8:	orr	x3, x11, x3
   5c7fc:	cbnz	x3, 5c84c <mpfr_free_pool@@Base+0xda4>
   5c800:	cbz	x4, 5c830 <mpfr_free_pool@@Base+0xd88>
   5c804:	cmp	x2, x1
   5c808:	b.eq	5c860 <mpfr_free_pool@@Base+0xdb8>  // b.none
   5c80c:	cmp	x2, #0x0
   5c810:	mov	w0, #0xffffffff            	// #-1
   5c814:	cneg	w0, w0, eq  // eq = none
   5c818:	ldp	x29, x30, [sp], #48
   5c81c:	ret
   5c820:	cbnz	x6, 5c804 <mpfr_free_pool@@Base+0xd5c>
   5c824:	orr	x3, x11, x3
   5c828:	cbnz	x3, 5c804 <mpfr_free_pool@@Base+0xd5c>
   5c82c:	b	5c80c <mpfr_free_pool@@Base+0xd64>
   5c830:	orr	x5, x10, x5
   5c834:	cmp	x5, #0x0
   5c838:	cset	w0, eq  // eq = none
   5c83c:	b	5c7d4 <mpfr_free_pool@@Base+0xd2c>
   5c840:	mov	w0, #0x0                   	// #0
   5c844:	cbz	x5, 5c7e0 <mpfr_free_pool@@Base+0xd38>
   5c848:	b	5c80c <mpfr_free_pool@@Base+0xd64>
   5c84c:	mov	w0, #0x1                   	// #1
   5c850:	bl	5e118 <mpfr_free_pool@@Base+0x2670>
   5c854:	mov	w0, #0xfffffffe            	// #-2
   5c858:	ldp	x29, x30, [sp], #48
   5c85c:	ret
   5c860:	cmp	x4, x6
   5c864:	b.gt	5c80c <mpfr_free_pool@@Base+0xd64>
   5c868:	b.lt	5c8a0 <mpfr_free_pool@@Base+0xdf8>  // b.tstop
   5c86c:	cmp	x10, x11
   5c870:	b.hi	5c80c <mpfr_free_pool@@Base+0xd64>  // b.pmore
   5c874:	cset	w0, eq  // eq = none
   5c878:	cmp	w0, #0x0
   5c87c:	ccmp	x8, x9, #0x0, ne  // ne = any
   5c880:	b.hi	5c80c <mpfr_free_pool@@Base+0xd64>  // b.pmore
   5c884:	cmp	x10, x11
   5c888:	b.cc	5c8a0 <mpfr_free_pool@@Base+0xdf8>  // b.lo, b.ul, b.last
   5c88c:	cmp	w0, #0x0
   5c890:	mov	w0, #0x0                   	// #0
   5c894:	ccmp	x8, x9, #0x2, ne  // ne = any
   5c898:	b.cs	5c7e0 <mpfr_free_pool@@Base+0xd38>  // b.hs, b.nlast
   5c89c:	nop
   5c8a0:	cmp	x2, #0x0
   5c8a4:	mov	w0, #0x1                   	// #1
   5c8a8:	cneg	w0, w0, eq  // eq = none
   5c8ac:	b	5c7e0 <mpfr_free_pool@@Base+0xd38>
   5c8b0:	stp	x29, x30, [sp, #-48]!
   5c8b4:	mov	x29, sp
   5c8b8:	str	q0, [sp, #16]
   5c8bc:	str	q1, [sp, #32]
   5c8c0:	ldp	x8, x1, [sp, #16]
   5c8c4:	ldp	x9, x0, [sp, #32]
   5c8c8:	mrs	x2, fpcr
   5c8cc:	ubfx	x4, x1, #48, #15
   5c8d0:	ubfx	x10, x1, #0, #48
   5c8d4:	lsr	x2, x1, #63
   5c8d8:	mov	x5, #0x7fff                	// #32767
   5c8dc:	mov	x6, x8
   5c8e0:	cmp	x4, x5
   5c8e4:	ubfx	x11, x0, #0, #48
   5c8e8:	ubfx	x7, x0, #48, #15
   5c8ec:	lsr	x1, x0, #63
   5c8f0:	mov	x3, x9
   5c8f4:	b.eq	5c92c <mpfr_free_pool@@Base+0xe84>  // b.none
   5c8f8:	cmp	x7, x5
   5c8fc:	b.eq	5c93c <mpfr_free_pool@@Base+0xe94>  // b.none
   5c900:	cbnz	x4, 5c968 <mpfr_free_pool@@Base+0xec0>
   5c904:	orr	x6, x10, x8
   5c908:	cmp	x6, #0x0
   5c90c:	cset	w0, eq  // eq = none
   5c910:	cbnz	x7, 5c954 <mpfr_free_pool@@Base+0xeac>
   5c914:	orr	x3, x11, x9
   5c918:	cbnz	x3, 5c954 <mpfr_free_pool@@Base+0xeac>
   5c91c:	mov	w0, #0x0                   	// #0
   5c920:	cbnz	x6, 5c97c <mpfr_free_pool@@Base+0xed4>
   5c924:	ldp	x29, x30, [sp], #48
   5c928:	ret
   5c92c:	orr	x0, x10, x8
   5c930:	cbnz	x0, 5c990 <mpfr_free_pool@@Base+0xee8>
   5c934:	cmp	x7, x4
   5c938:	b.ne	5c968 <mpfr_free_pool@@Base+0xec0>  // b.any
   5c93c:	orr	x3, x11, x3
   5c940:	cbnz	x3, 5c990 <mpfr_free_pool@@Base+0xee8>
   5c944:	cbnz	x4, 5c974 <mpfr_free_pool@@Base+0xecc>
   5c948:	orr	x6, x10, x6
   5c94c:	cmp	x6, #0x0
   5c950:	cset	w0, eq  // eq = none
   5c954:	cbz	w0, 5c974 <mpfr_free_pool@@Base+0xecc>
   5c958:	cmp	x1, #0x0
   5c95c:	csinv	w0, w0, wzr, ne  // ne = any
   5c960:	ldp	x29, x30, [sp], #48
   5c964:	ret
   5c968:	cbnz	x7, 5c974 <mpfr_free_pool@@Base+0xecc>
   5c96c:	orr	x3, x11, x3
   5c970:	cbz	x3, 5c97c <mpfr_free_pool@@Base+0xed4>
   5c974:	cmp	x2, x1
   5c978:	b.eq	5c9a4 <mpfr_free_pool@@Base+0xefc>  // b.none
   5c97c:	cmp	x2, #0x0
   5c980:	mov	w0, #0xffffffff            	// #-1
   5c984:	cneg	w0, w0, eq  // eq = none
   5c988:	ldp	x29, x30, [sp], #48
   5c98c:	ret
   5c990:	mov	w0, #0x1                   	// #1
   5c994:	bl	5e118 <mpfr_free_pool@@Base+0x2670>
   5c998:	mov	w0, #0x2                   	// #2
   5c99c:	ldp	x29, x30, [sp], #48
   5c9a0:	ret
   5c9a4:	cmp	x4, x7
   5c9a8:	b.gt	5c97c <mpfr_free_pool@@Base+0xed4>
   5c9ac:	b.lt	5c9e0 <mpfr_free_pool@@Base+0xf38>  // b.tstop
   5c9b0:	cmp	x10, x11
   5c9b4:	b.hi	5c97c <mpfr_free_pool@@Base+0xed4>  // b.pmore
   5c9b8:	cset	w0, eq  // eq = none
   5c9bc:	cmp	w0, #0x0
   5c9c0:	ccmp	x8, x9, #0x0, ne  // ne = any
   5c9c4:	b.hi	5c97c <mpfr_free_pool@@Base+0xed4>  // b.pmore
   5c9c8:	cmp	x10, x11
   5c9cc:	b.cc	5c9e0 <mpfr_free_pool@@Base+0xf38>  // b.lo, b.ul, b.last
   5c9d0:	cmp	w0, #0x0
   5c9d4:	mov	w0, #0x0                   	// #0
   5c9d8:	ccmp	x8, x9, #0x2, ne  // ne = any
   5c9dc:	b.cs	5c924 <mpfr_free_pool@@Base+0xe7c>  // b.hs, b.nlast
   5c9e0:	cmp	x2, #0x0
   5c9e4:	mov	w0, #0x1                   	// #1
   5c9e8:	cneg	w0, w0, eq  // eq = none
   5c9ec:	b	5c924 <mpfr_free_pool@@Base+0xe7c>
   5c9f0:	stp	x29, x30, [sp, #-80]!
   5c9f4:	mov	x29, sp
   5c9f8:	str	q0, [sp, #48]
   5c9fc:	str	q1, [sp, #64]
   5ca00:	ldp	x1, x0, [sp, #48]
   5ca04:	ldp	x6, x2, [sp, #64]
   5ca08:	mrs	x11, fpcr
   5ca0c:	lsr	x3, x0, #63
   5ca10:	ubfx	x7, x0, #0, #48
   5ca14:	and	w12, w3, #0xff
   5ca18:	mov	x14, x3
   5ca1c:	ubfx	x3, x0, #48, #15
   5ca20:	cbz	w3, 5cdc8 <mpfr_free_pool@@Base+0x1320>
   5ca24:	mov	w4, #0x7fff                	// #32767
   5ca28:	cmp	w3, w4
   5ca2c:	b.eq	5ce6c <mpfr_free_pool@@Base+0x13c4>  // b.none
   5ca30:	and	x3, x3, #0xffff
   5ca34:	extr	x4, x7, x1, #61
   5ca38:	mov	x18, #0xffffffffffffc001    	// #-16383
   5ca3c:	orr	x7, x4, #0x8000000000000
   5ca40:	add	x3, x3, x18
   5ca44:	lsl	x5, x1, #3
   5ca48:	mov	x16, #0x0                   	// #0
   5ca4c:	mov	x1, #0x0                   	// #0
   5ca50:	mov	w0, #0x0                   	// #0
   5ca54:	lsr	x8, x2, #63
   5ca58:	ubfx	x4, x2, #0, #48
   5ca5c:	and	w15, w8, #0xff
   5ca60:	mov	x13, x8
   5ca64:	ubfx	x9, x2, #48, #15
   5ca68:	cbz	w9, 5ce28 <mpfr_free_pool@@Base+0x1380>
   5ca6c:	mov	w8, #0x7fff                	// #32767
   5ca70:	cmp	w9, w8
   5ca74:	b.eq	5caf8 <mpfr_free_pool@@Base+0x1050>  // b.none
   5ca78:	and	x9, x9, #0xffff
   5ca7c:	mov	x17, #0xffffffffffffc001    	// #-16383
   5ca80:	add	x9, x9, x17
   5ca84:	extr	x2, x4, x6, #61
   5ca88:	add	x9, x9, x3
   5ca8c:	lsl	x6, x6, #3
   5ca90:	orr	x4, x2, #0x8000000000000
   5ca94:	mov	x2, #0x0                   	// #0
   5ca98:	eor	w8, w12, w15
   5ca9c:	cmp	x1, #0xa
   5caa0:	and	w10, w8, #0xff
   5caa4:	add	x3, x9, #0x1
   5caa8:	and	x8, x8, #0xff
   5caac:	b.le	5cb30 <mpfr_free_pool@@Base+0x1088>
   5cab0:	cmp	x1, #0xb
   5cab4:	b.eq	5d1c8 <mpfr_free_pool@@Base+0x1720>  // b.none
   5cab8:	mov	w15, w12
   5cabc:	mov	x13, x14
   5cac0:	mov	w10, w15
   5cac4:	cmp	x16, #0x2
   5cac8:	b.eq	5ce8c <mpfr_free_pool@@Base+0x13e4>  // b.none
   5cacc:	mov	x4, x7
   5cad0:	mov	x6, x5
   5cad4:	mov	x2, x16
   5cad8:	mov	x8, x13
   5cadc:	cmp	x2, #0x3
   5cae0:	b.ne	5cb4c <mpfr_free_pool@@Base+0x10a4>  // b.any
   5cae4:	orr	x4, x4, #0x800000000000
   5cae8:	mov	x5, x6
   5caec:	and	x4, x4, #0xffffffffffff
   5caf0:	mov	w1, #0x7fff                	// #32767
   5caf4:	b	5cb60 <mpfr_free_pool@@Base+0x10b8>
   5caf8:	mov	x8, #0x7fff                	// #32767
   5cafc:	orr	x2, x4, x6
   5cb00:	add	x9, x3, x8
   5cb04:	cbnz	x2, 5cb84 <mpfr_free_pool@@Base+0x10dc>
   5cb08:	eor	w8, w12, w15
   5cb0c:	orr	x1, x1, #0x2
   5cb10:	and	w10, w8, #0xff
   5cb14:	cmp	x1, #0xa
   5cb18:	add	x3, x3, #0x8, lsl #12
   5cb1c:	and	x8, x8, #0xff
   5cb20:	mov	x6, #0x0                   	// #0
   5cb24:	b.gt	5d13c <mpfr_free_pool@@Base+0x1694>
   5cb28:	mov	x4, #0x0                   	// #0
   5cb2c:	mov	x2, #0x2                   	// #2
   5cb30:	cmp	x1, #0x2
   5cb34:	b.gt	5cbac <mpfr_free_pool@@Base+0x1104>
   5cb38:	sub	x1, x1, #0x1
   5cb3c:	cmp	x1, #0x1
   5cb40:	b.hi	5cbe8 <mpfr_free_pool@@Base+0x1140>  // b.pmore
   5cb44:	cmp	x2, #0x2
   5cb48:	b.eq	5ce8c <mpfr_free_pool@@Base+0x13e4>  // b.none
   5cb4c:	cmp	x2, #0x1
   5cb50:	b.ne	5cd48 <mpfr_free_pool@@Base+0x12a0>  // b.any
   5cb54:	mov	w1, #0x0                   	// #0
   5cb58:	mov	x4, #0x0                   	// #0
   5cb5c:	mov	x5, #0x0                   	// #0
   5cb60:	mov	x3, #0x0                   	// #0
   5cb64:	orr	w1, w1, w10, lsl #15
   5cb68:	bfxil	x3, x4, #0, #48
   5cb6c:	fmov	d0, x5
   5cb70:	bfi	x3, x1, #48, #16
   5cb74:	fmov	v0.d[1], x3
   5cb78:	cbnz	w0, 5cfb8 <mpfr_free_pool@@Base+0x1510>
   5cb7c:	ldp	x29, x30, [sp], #80
   5cb80:	ret
   5cb84:	tst	x4, #0x800000000000
   5cb88:	eor	w8, w12, w15
   5cb8c:	orr	x1, x1, #0x3
   5cb90:	csinc	w0, w0, wzr, ne  // ne = any
   5cb94:	and	w10, w8, #0xff
   5cb98:	add	x3, x3, #0x8, lsl #12
   5cb9c:	cmp	x1, #0xa
   5cba0:	and	x8, x8, #0xff
   5cba4:	mov	x2, #0x3                   	// #3
   5cba8:	b.gt	5d1bc <mpfr_free_pool@@Base+0x1714>
   5cbac:	mov	x12, #0x1                   	// #1
   5cbb0:	mov	x14, #0x530                 	// #1328
   5cbb4:	lsl	x1, x12, x1
   5cbb8:	tst	x1, x14
   5cbbc:	b.ne	5cdbc <mpfr_free_pool@@Base+0x1314>  // b.any
   5cbc0:	mov	x14, #0x240                 	// #576
   5cbc4:	tst	x1, x14
   5cbc8:	b.ne	5cda4 <mpfr_free_pool@@Base+0x12fc>  // b.any
   5cbcc:	mov	x12, #0x88                  	// #136
   5cbd0:	tst	x1, x12
   5cbd4:	b.eq	5cbe8 <mpfr_free_pool@@Base+0x1140>  // b.none
   5cbd8:	mov	x7, x4
   5cbdc:	mov	x5, x6
   5cbe0:	mov	x16, x2
   5cbe4:	b	5cac0 <mpfr_free_pool@@Base+0x1018>
   5cbe8:	lsr	x13, x5, #32
   5cbec:	and	x12, x6, #0xffffffff
   5cbf0:	and	x15, x5, #0xffffffff
   5cbf4:	lsr	x6, x6, #32
   5cbf8:	and	x18, x4, #0xffffffff
   5cbfc:	lsr	x2, x4, #32
   5cc00:	mul	x4, x13, x12
   5cc04:	stp	x21, x22, [sp, #32]
   5cc08:	lsr	x22, x7, #32
   5cc0c:	and	x5, x7, #0xffffffff
   5cc10:	mul	x16, x12, x15
   5cc14:	madd	x7, x6, x15, x4
   5cc18:	stp	x19, x20, [sp, #16]
   5cc1c:	mul	x1, x13, x18
   5cc20:	mul	x17, x15, x18
   5cc24:	and	x30, x16, #0xffffffff
   5cc28:	madd	x15, x2, x15, x1
   5cc2c:	add	x16, x7, x16, lsr #32
   5cc30:	mul	x21, x22, x12
   5cc34:	cmp	x4, x16
   5cc38:	mul	x20, x22, x18
   5cc3c:	mov	x14, #0x100000000           	// #4294967296
   5cc40:	mul	x19, x13, x6
   5cc44:	add	x15, x15, x17, lsr #32
   5cc48:	mul	x12, x12, x5
   5cc4c:	and	x17, x17, #0xffffffff
   5cc50:	mul	x18, x5, x18
   5cc54:	add	x4, x19, x14
   5cc58:	madd	x7, x6, x5, x21
   5cc5c:	csel	x19, x4, x19, hi  // hi = pmore
   5cc60:	madd	x5, x2, x5, x20
   5cc64:	cmp	x1, x15
   5cc68:	mul	x13, x13, x2
   5cc6c:	add	x17, x17, x15, lsl #32
   5cc70:	mul	x6, x6, x22
   5cc74:	add	x7, x7, x12, lsr #32
   5cc78:	add	x5, x5, x18, lsr #32
   5cc7c:	add	x4, x13, x14
   5cc80:	mul	x2, x2, x22
   5cc84:	csel	x13, x4, x13, hi  // hi = pmore
   5cc88:	and	x1, x18, #0xffffffff
   5cc8c:	cmp	x21, x7
   5cc90:	add	x4, x6, x14
   5cc94:	add	x30, x30, x16, lsl #32
   5cc98:	csel	x6, x4, x6, hi  // hi = pmore
   5cc9c:	add	x13, x13, x15, lsr #32
   5cca0:	cmp	x20, x5
   5cca4:	add	x1, x1, x5, lsl #32
   5cca8:	add	x16, x17, x16, lsr #32
   5ccac:	add	x14, x2, x14
   5ccb0:	csel	x2, x14, x2, hi  // hi = pmore
   5ccb4:	add	x16, x19, x16
   5ccb8:	adds	x1, x1, x13
   5ccbc:	and	x12, x12, #0xffffffff
   5ccc0:	cset	x13, cs  // cs = hs, nlast
   5ccc4:	cmp	x16, x17
   5ccc8:	cset	x4, cc  // cc = lo, ul, last
   5cccc:	add	x12, x12, x7, lsl #32
   5ccd0:	adds	x1, x1, x4
   5ccd4:	lsr	x5, x5, #32
   5ccd8:	cset	x4, cs  // cs = hs, nlast
   5ccdc:	cmp	x13, #0x0
   5cce0:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   5cce4:	add	x7, x6, x7, lsr #32
   5cce8:	cinc	x5, x5, ne  // ne = any
   5ccec:	adds	x6, x16, x12
   5ccf0:	cset	x4, cs  // cs = hs, nlast
   5ccf4:	adds	x1, x1, x7
   5ccf8:	cset	x7, cs  // cs = hs, nlast
   5ccfc:	adds	x4, x1, x4
   5cd00:	cset	x1, cs  // cs = hs, nlast
   5cd04:	cmp	x7, #0x0
   5cd08:	orr	x30, x30, x6, lsl #13
   5cd0c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   5cd10:	cinc	x1, x2, ne  // ne = any
   5cd14:	cmp	x30, #0x0
   5cd18:	add	x1, x1, x5
   5cd1c:	cset	x2, ne  // ne = any
   5cd20:	orr	x6, x2, x6, lsr #51
   5cd24:	orr	x6, x6, x4, lsl #13
   5cd28:	extr	x4, x1, x4, #51
   5cd2c:	tbz	x1, #39, 5d040 <mpfr_free_pool@@Base+0x1598>
   5cd30:	ldp	x19, x20, [sp, #16]
   5cd34:	and	x1, x6, #0x1
   5cd38:	ldp	x21, x22, [sp, #32]
   5cd3c:	orr	x6, x1, x6, lsr #1
   5cd40:	orr	x6, x6, x4, lsl #63
   5cd44:	lsr	x4, x4, #1
   5cd48:	mov	x1, #0x3fff                	// #16383
   5cd4c:	add	x2, x3, x1
   5cd50:	cmp	x2, #0x0
   5cd54:	b.le	5ceec <mpfr_free_pool@@Base+0x1444>
   5cd58:	tst	x6, #0x7
   5cd5c:	b.eq	5cd7c <mpfr_free_pool@@Base+0x12d4>  // b.none
   5cd60:	and	x1, x11, #0xc00000
   5cd64:	orr	w0, w0, #0x10
   5cd68:	cmp	x1, #0x400, lsl #12
   5cd6c:	b.eq	5d134 <mpfr_free_pool@@Base+0x168c>  // b.none
   5cd70:	cmp	x1, #0x800, lsl #12
   5cd74:	b.eq	5d0dc <mpfr_free_pool@@Base+0x1634>  // b.none
   5cd78:	cbz	x1, 5d0c4 <mpfr_free_pool@@Base+0x161c>
   5cd7c:	tbz	x4, #52, 5cd88 <mpfr_free_pool@@Base+0x12e0>
   5cd80:	and	x4, x4, #0xffefffffffffffff
   5cd84:	add	x2, x3, #0x4, lsl #12
   5cd88:	mov	x1, #0x7ffe                	// #32766
   5cd8c:	cmp	x2, x1
   5cd90:	b.gt	5d014 <mpfr_free_pool@@Base+0x156c>
   5cd94:	and	w1, w2, #0x7fff
   5cd98:	extr	x5, x4, x6, #3
   5cd9c:	ubfx	x4, x4, #3, #48
   5cda0:	b	5cb60 <mpfr_free_pool@@Base+0x10b8>
   5cda4:	mov	w0, w12
   5cda8:	mov	w10, #0x0                   	// #0
   5cdac:	mov	x4, #0xffffffffffff        	// #281474976710655
   5cdb0:	mov	x5, #0xffffffffffffffff    	// #-1
   5cdb4:	mov	w1, #0x7fff                	// #32767
   5cdb8:	b	5cb60 <mpfr_free_pool@@Base+0x10b8>
   5cdbc:	mov	w15, w10
   5cdc0:	mov	x13, x8
   5cdc4:	b	5cac0 <mpfr_free_pool@@Base+0x1018>
   5cdc8:	orr	x5, x7, x1
   5cdcc:	cbz	x5, 5ced4 <mpfr_free_pool@@Base+0x142c>
   5cdd0:	cbz	x7, 5cff0 <mpfr_free_pool@@Base+0x1548>
   5cdd4:	clz	x0, x7
   5cdd8:	sub	x4, x0, #0xf
   5cddc:	add	w5, w4, #0x3
   5cde0:	mov	w3, #0x3d                  	// #61
   5cde4:	sub	w3, w3, w4
   5cde8:	lsl	x4, x7, x5
   5cdec:	lsr	x3, x1, x3
   5cdf0:	orr	x7, x3, x4
   5cdf4:	lsl	x5, x1, x5
   5cdf8:	lsr	x8, x2, #63
   5cdfc:	mov	x3, #0xffffffffffffc011    	// #-16367
   5ce00:	ubfx	x4, x2, #0, #48
   5ce04:	sub	x3, x3, x0
   5ce08:	and	w15, w8, #0xff
   5ce0c:	mov	x13, x8
   5ce10:	ubfx	x9, x2, #48, #15
   5ce14:	mov	x1, #0x0                   	// #0
   5ce18:	mov	x16, #0x0                   	// #0
   5ce1c:	mov	w0, #0x0                   	// #0
   5ce20:	cbnz	w9, 5ca6c <mpfr_free_pool@@Base+0xfc4>
   5ce24:	nop
   5ce28:	orr	x2, x4, x6
   5ce2c:	cbz	x2, 5ce9c <mpfr_free_pool@@Base+0x13f4>
   5ce30:	cbz	x4, 5cfcc <mpfr_free_pool@@Base+0x1524>
   5ce34:	clz	x9, x4
   5ce38:	sub	x2, x9, #0xf
   5ce3c:	add	w10, w2, #0x3
   5ce40:	mov	w8, #0x3d                  	// #61
   5ce44:	sub	w8, w8, w2
   5ce48:	lsl	x2, x4, x10
   5ce4c:	lsr	x8, x6, x8
   5ce50:	orr	x4, x8, x2
   5ce54:	lsl	x6, x6, x10
   5ce58:	sub	x9, x3, x9
   5ce5c:	mov	x10, #0xffffffffffffc011    	// #-16367
   5ce60:	mov	x2, #0x0                   	// #0
   5ce64:	add	x9, x9, x10
   5ce68:	b	5ca98 <mpfr_free_pool@@Base+0xff0>
   5ce6c:	orr	x5, x7, x1
   5ce70:	cbnz	x5, 5ceb4 <mpfr_free_pool@@Base+0x140c>
   5ce74:	mov	x7, #0x0                   	// #0
   5ce78:	mov	x1, #0x8                   	// #8
   5ce7c:	mov	x3, #0x7fff                	// #32767
   5ce80:	mov	x16, #0x2                   	// #2
   5ce84:	mov	w0, #0x0                   	// #0
   5ce88:	b	5ca54 <mpfr_free_pool@@Base+0xfac>
   5ce8c:	mov	w1, #0x7fff                	// #32767
   5ce90:	mov	x4, #0x0                   	// #0
   5ce94:	mov	x5, #0x0                   	// #0
   5ce98:	b	5cb60 <mpfr_free_pool@@Base+0x10b8>
   5ce9c:	orr	x1, x1, #0x1
   5cea0:	mov	x9, x3
   5cea4:	mov	x4, #0x0                   	// #0
   5cea8:	mov	x6, #0x0                   	// #0
   5ceac:	mov	x2, #0x1                   	// #1
   5ceb0:	b	5ca98 <mpfr_free_pool@@Base+0xff0>
   5ceb4:	lsr	x0, x7, #47
   5ceb8:	mov	x5, x1
   5cebc:	eor	x0, x0, #0x1
   5cec0:	mov	x1, #0xc                   	// #12
   5cec4:	and	w0, w0, #0x1
   5cec8:	mov	x3, #0x7fff                	// #32767
   5cecc:	mov	x16, #0x3                   	// #3
   5ced0:	b	5ca54 <mpfr_free_pool@@Base+0xfac>
   5ced4:	mov	x7, #0x0                   	// #0
   5ced8:	mov	x1, #0x4                   	// #4
   5cedc:	mov	x3, #0x0                   	// #0
   5cee0:	mov	x16, #0x1                   	// #1
   5cee4:	mov	w0, #0x0                   	// #0
   5cee8:	b	5ca54 <mpfr_free_pool@@Base+0xfac>
   5ceec:	mov	x1, #0x1                   	// #1
   5cef0:	sub	x2, x1, x2
   5cef4:	cmp	x2, #0x74
   5cef8:	b.gt	5cf70 <mpfr_free_pool@@Base+0x14c8>
   5cefc:	cmp	x2, #0x3f
   5cf00:	b.le	5d050 <mpfr_free_pool@@Base+0x15a8>
   5cf04:	mov	w1, #0x80                  	// #128
   5cf08:	sub	w1, w1, w2
   5cf0c:	cmp	x2, #0x40
   5cf10:	sub	w2, w2, #0x40
   5cf14:	lsl	x1, x4, x1
   5cf18:	orr	x1, x6, x1
   5cf1c:	csel	x6, x1, x6, ne  // ne = any
   5cf20:	lsr	x2, x4, x2
   5cf24:	cmp	x6, #0x0
   5cf28:	cset	x5, ne  // ne = any
   5cf2c:	orr	x5, x5, x2
   5cf30:	ands	x2, x5, #0x7
   5cf34:	b.eq	5d084 <mpfr_free_pool@@Base+0x15dc>  // b.none
   5cf38:	mov	x2, #0x0                   	// #0
   5cf3c:	and	x11, x11, #0xc00000
   5cf40:	orr	w0, w0, #0x10
   5cf44:	cmp	x11, #0x400, lsl #12
   5cf48:	b.eq	5d194 <mpfr_free_pool@@Base+0x16ec>  // b.none
   5cf4c:	cmp	x11, #0x800, lsl #12
   5cf50:	b.eq	5d1a8 <mpfr_free_pool@@Base+0x1700>  // b.none
   5cf54:	cbz	x11, 5d0ec <mpfr_free_pool@@Base+0x1644>
   5cf58:	tbnz	x2, #51, 5d104 <mpfr_free_pool@@Base+0x165c>
   5cf5c:	ubfx	x4, x2, #3, #48
   5cf60:	extr	x5, x2, x5, #3
   5cf64:	orr	w0, w0, #0x8
   5cf68:	mov	w1, #0x0                   	// #0
   5cf6c:	b	5cfa0 <mpfr_free_pool@@Base+0x14f8>
   5cf70:	orr	x5, x6, x4
   5cf74:	cbz	x5, 5cf94 <mpfr_free_pool@@Base+0x14ec>
   5cf78:	and	x11, x11, #0xc00000
   5cf7c:	orr	w0, w0, #0x10
   5cf80:	cmp	x11, #0x400, lsl #12
   5cf84:	sub	x5, x1, x8
   5cf88:	b.eq	5cf94 <mpfr_free_pool@@Base+0x14ec>  // b.none
   5cf8c:	cmp	x11, #0x800, lsl #12
   5cf90:	csel	x5, x8, xzr, eq  // eq = none
   5cf94:	orr	w0, w0, #0x8
   5cf98:	mov	w1, #0x0                   	// #0
   5cf9c:	mov	x4, #0x0                   	// #0
   5cfa0:	mov	x3, #0x0                   	// #0
   5cfa4:	fmov	d0, x5
   5cfa8:	bfxil	x3, x4, #0, #48
   5cfac:	bfi	x3, x1, #48, #15
   5cfb0:	bfi	x3, x10, #63, #1
   5cfb4:	fmov	v0.d[1], x3
   5cfb8:	str	q0, [sp, #48]
   5cfbc:	bl	5e118 <mpfr_free_pool@@Base+0x2670>
   5cfc0:	ldr	q0, [sp, #48]
   5cfc4:	ldp	x29, x30, [sp], #80
   5cfc8:	ret
   5cfcc:	clz	x9, x6
   5cfd0:	add	x2, x9, #0x31
   5cfd4:	add	x9, x9, #0x40
   5cfd8:	cmp	x2, #0x3c
   5cfdc:	b.le	5ce3c <mpfr_free_pool@@Base+0x1394>
   5cfe0:	sub	w2, w2, #0x3d
   5cfe4:	lsl	x4, x6, x2
   5cfe8:	mov	x6, #0x0                   	// #0
   5cfec:	b	5ce58 <mpfr_free_pool@@Base+0x13b0>
   5cff0:	clz	x3, x1
   5cff4:	add	x4, x3, #0x31
   5cff8:	add	x0, x3, #0x40
   5cffc:	cmp	x4, #0x3c
   5d000:	b.le	5cddc <mpfr_free_pool@@Base+0x1334>
   5d004:	sub	w4, w4, #0x3d
   5d008:	mov	x5, #0x0                   	// #0
   5d00c:	lsl	x7, x1, x4
   5d010:	b	5cdf8 <mpfr_free_pool@@Base+0x1350>
   5d014:	and	x5, x11, #0xc00000
   5d018:	cmp	x5, #0x400, lsl #12
   5d01c:	b.eq	5d118 <mpfr_free_pool@@Base+0x1670>  // b.none
   5d020:	cmp	x5, #0x800, lsl #12
   5d024:	b.eq	5d0a8 <mpfr_free_pool@@Base+0x1600>  // b.none
   5d028:	cbz	x5, 5d09c <mpfr_free_pool@@Base+0x15f4>
   5d02c:	mov	x4, #0xffffffffffff        	// #281474976710655
   5d030:	mov	x5, #0xffffffffffffffff    	// #-1
   5d034:	mov	w2, #0x14                  	// #20
   5d038:	orr	w0, w0, w2
   5d03c:	b	5cfa0 <mpfr_free_pool@@Base+0x14f8>
   5d040:	mov	x3, x9
   5d044:	ldp	x19, x20, [sp, #16]
   5d048:	ldp	x21, x22, [sp, #32]
   5d04c:	b	5cd48 <mpfr_free_pool@@Base+0x12a0>
   5d050:	mov	w1, #0x40                  	// #64
   5d054:	sub	w1, w1, w2
   5d058:	lsr	x3, x6, x2
   5d05c:	lsl	x6, x6, x1
   5d060:	cmp	x6, #0x0
   5d064:	lsl	x5, x4, x1
   5d068:	cset	x1, ne  // ne = any
   5d06c:	orr	x5, x5, x3
   5d070:	lsr	x2, x4, x2
   5d074:	orr	x5, x5, x1
   5d078:	tst	x5, #0x7
   5d07c:	b.ne	5cf3c <mpfr_free_pool@@Base+0x1494>  // b.any
   5d080:	tbnz	x2, #51, 5d1b4 <mpfr_free_pool@@Base+0x170c>
   5d084:	ubfx	x4, x2, #3, #48
   5d088:	extr	x5, x2, x5, #3
   5d08c:	mov	w1, #0x0                   	// #0
   5d090:	tbz	w11, #11, 5cb60 <mpfr_free_pool@@Base+0x10b8>
   5d094:	orr	w0, w0, #0x8
   5d098:	b	5cfa0 <mpfr_free_pool@@Base+0x14f8>
   5d09c:	mov	w1, #0x7fff                	// #32767
   5d0a0:	mov	x4, #0x0                   	// #0
   5d0a4:	b	5d034 <mpfr_free_pool@@Base+0x158c>
   5d0a8:	cmp	x8, #0x0
   5d0ac:	mov	w2, #0x7fff                	// #32767
   5d0b0:	mov	x4, #0xffffffffffff        	// #281474976710655
   5d0b4:	csel	w1, w1, w2, eq  // eq = none
   5d0b8:	csel	x4, x4, xzr, eq  // eq = none
   5d0bc:	csetm	x5, eq  // eq = none
   5d0c0:	b	5d034 <mpfr_free_pool@@Base+0x158c>
   5d0c4:	and	x1, x6, #0xf
   5d0c8:	cmp	x1, #0x4
   5d0cc:	b.eq	5cd7c <mpfr_free_pool@@Base+0x12d4>  // b.none
   5d0d0:	adds	x6, x6, #0x4
   5d0d4:	cinc	x4, x4, cs  // cs = hs, nlast
   5d0d8:	b	5cd7c <mpfr_free_pool@@Base+0x12d4>
   5d0dc:	cbz	x8, 5cd7c <mpfr_free_pool@@Base+0x12d4>
   5d0e0:	adds	x6, x6, #0x8
   5d0e4:	cinc	x4, x4, cs  // cs = hs, nlast
   5d0e8:	b	5cd7c <mpfr_free_pool@@Base+0x12d4>
   5d0ec:	and	x1, x5, #0xf
   5d0f0:	cmp	x1, #0x4
   5d0f4:	b.eq	5d100 <mpfr_free_pool@@Base+0x1658>  // b.none
   5d0f8:	adds	x5, x5, #0x4
   5d0fc:	cinc	x2, x2, cs  // cs = hs, nlast
   5d100:	tbz	x2, #51, 5cf5c <mpfr_free_pool@@Base+0x14b4>
   5d104:	orr	w0, w0, #0x8
   5d108:	mov	w1, #0x1                   	// #1
   5d10c:	mov	x4, #0x0                   	// #0
   5d110:	mov	x5, #0x0                   	// #0
   5d114:	b	5cfa0 <mpfr_free_pool@@Base+0x14f8>
   5d118:	cmp	x8, #0x0
   5d11c:	mov	w2, #0x7fff                	// #32767
   5d120:	mov	x4, #0xffffffffffff        	// #281474976710655
   5d124:	csel	w1, w1, w2, ne  // ne = any
   5d128:	csel	x4, x4, xzr, ne  // ne = any
   5d12c:	csetm	x5, ne  // ne = any
   5d130:	b	5d034 <mpfr_free_pool@@Base+0x158c>
   5d134:	cbnz	x8, 5cd7c <mpfr_free_pool@@Base+0x12d4>
   5d138:	b	5d0e0 <mpfr_free_pool@@Base+0x1638>
   5d13c:	mov	x4, #0x2                   	// #2
   5d140:	cmp	x1, #0xf
   5d144:	b.ne	5d168 <mpfr_free_pool@@Base+0x16c0>  // b.any
   5d148:	tbz	x7, #47, 5d180 <mpfr_free_pool@@Base+0x16d8>
   5d14c:	tbnz	x2, #47, 5d180 <mpfr_free_pool@@Base+0x16d8>
   5d150:	orr	x4, x2, #0x800000000000
   5d154:	mov	w10, w15
   5d158:	and	x4, x4, #0xffffffffffff
   5d15c:	mov	x5, x6
   5d160:	mov	w1, #0x7fff                	// #32767
   5d164:	b	5cb60 <mpfr_free_pool@@Base+0x10b8>
   5d168:	cmp	x1, #0xb
   5d16c:	b.ne	5cab8 <mpfr_free_pool@@Base+0x1010>  // b.any
   5d170:	mov	x7, x2
   5d174:	mov	x5, x6
   5d178:	mov	x16, x4
   5d17c:	b	5cac0 <mpfr_free_pool@@Base+0x1018>
   5d180:	orr	x4, x7, #0x800000000000
   5d184:	mov	w10, w12
   5d188:	and	x4, x4, #0xffffffffffff
   5d18c:	mov	w1, #0x7fff                	// #32767
   5d190:	b	5cb60 <mpfr_free_pool@@Base+0x10b8>
   5d194:	cbnz	x8, 5d100 <mpfr_free_pool@@Base+0x1658>
   5d198:	adds	x5, x5, #0x8
   5d19c:	cinc	x2, x2, cs  // cs = hs, nlast
   5d1a0:	tbnz	x2, #51, 5d104 <mpfr_free_pool@@Base+0x165c>
   5d1a4:	b	5cf5c <mpfr_free_pool@@Base+0x14b4>
   5d1a8:	cbnz	x8, 5d198 <mpfr_free_pool@@Base+0x16f0>
   5d1ac:	tbnz	x2, #51, 5d104 <mpfr_free_pool@@Base+0x165c>
   5d1b0:	b	5cf5c <mpfr_free_pool@@Base+0x14b4>
   5d1b4:	orr	w0, w0, #0x10
   5d1b8:	b	5d104 <mpfr_free_pool@@Base+0x165c>
   5d1bc:	mov	x2, x4
   5d1c0:	mov	x4, #0x3                   	// #3
   5d1c4:	b	5d140 <mpfr_free_pool@@Base+0x1698>
   5d1c8:	mov	w10, w15
   5d1cc:	mov	x8, x13
   5d1d0:	b	5cadc <mpfr_free_pool@@Base+0x1034>
   5d1d4:	nop
   5d1d8:	stp	x29, x30, [sp, #-48]!
   5d1dc:	mov	x29, sp
   5d1e0:	str	q0, [sp, #16]
   5d1e4:	str	q1, [sp, #32]
   5d1e8:	ldp	x5, x1, [sp, #16]
   5d1ec:	ldp	x0, x2, [sp, #32]
   5d1f0:	mrs	x12, fpcr
   5d1f4:	mov	x9, x0
   5d1f8:	ubfx	x0, x2, #48, #15
   5d1fc:	lsr	x6, x1, #63
   5d200:	ubfx	x7, x1, #48, #15
   5d204:	ubfiz	x3, x1, #3, #48
   5d208:	mov	x13, x0
   5d20c:	lsr	x4, x2, #63
   5d210:	ubfiz	x2, x2, #3, #48
   5d214:	mov	x11, x6
   5d218:	and	w8, w6, #0xff
   5d21c:	mov	x14, x6
   5d220:	sub	w0, w7, w0
   5d224:	mov	x1, x7
   5d228:	orr	x3, x3, x5, lsr #61
   5d22c:	mov	x7, #0x7fff                	// #32767
   5d230:	and	w4, w4, #0xff
   5d234:	cmp	x13, x7
   5d238:	orr	x2, x2, x9, lsr #61
   5d23c:	lsl	x6, x5, #3
   5d240:	lsl	x10, x9, #3
   5d244:	b.eq	5d3b4 <mpfr_free_pool@@Base+0x190c>  // b.none
   5d248:	eor	w4, w4, #0x1
   5d24c:	and	x4, x4, #0xff
   5d250:	cmp	x11, x4
   5d254:	b.eq	5d44c <mpfr_free_pool@@Base+0x19a4>  // b.none
   5d258:	cmp	w0, #0x0
   5d25c:	b.le	5d3d0 <mpfr_free_pool@@Base+0x1928>
   5d260:	cbnz	x13, 5d53c <mpfr_free_pool@@Base+0x1a94>
   5d264:	orr	x4, x2, x10
   5d268:	cbz	x4, 5d71c <mpfr_free_pool@@Base+0x1c74>
   5d26c:	subs	w0, w0, #0x1
   5d270:	b.eq	5d9f0 <mpfr_free_pool@@Base+0x1f48>  // b.none
   5d274:	mov	x4, #0x7fff                	// #32767
   5d278:	cmp	x1, x4
   5d27c:	b.eq	5d6f0 <mpfr_free_pool@@Base+0x1c48>  // b.none
   5d280:	cmp	w0, #0x74
   5d284:	b.gt	5d70c <mpfr_free_pool@@Base+0x1c64>
   5d288:	cmp	w0, #0x3f
   5d28c:	b.gt	5d8b4 <mpfr_free_pool@@Base+0x1e0c>
   5d290:	mov	w4, #0x40                  	// #64
   5d294:	sub	w4, w4, w0
   5d298:	lsr	x7, x10, x0
   5d29c:	lsl	x10, x10, x4
   5d2a0:	cmp	x10, #0x0
   5d2a4:	lsl	x4, x2, x4
   5d2a8:	cset	x5, ne  // ne = any
   5d2ac:	orr	x4, x4, x7
   5d2b0:	lsr	x2, x2, x0
   5d2b4:	orr	x4, x4, x5
   5d2b8:	sub	x3, x3, x2
   5d2bc:	subs	x6, x6, x4
   5d2c0:	sbc	x3, x3, xzr
   5d2c4:	and	x5, x3, #0x7ffffffffffff
   5d2c8:	tbz	x3, #51, 5d4c8 <mpfr_free_pool@@Base+0x1a20>
   5d2cc:	cbz	x5, 5d6d4 <mpfr_free_pool@@Base+0x1c2c>
   5d2d0:	clz	x0, x5
   5d2d4:	sub	w0, w0, #0xc
   5d2d8:	neg	w3, w0
   5d2dc:	lsl	x2, x5, x0
   5d2e0:	lsl	x5, x6, x0
   5d2e4:	lsr	x6, x6, x3
   5d2e8:	orr	x3, x6, x2
   5d2ec:	cmp	x1, w0, sxtw
   5d2f0:	sxtw	x2, w0
   5d2f4:	b.gt	5d6b4 <mpfr_free_pool@@Base+0x1c0c>
   5d2f8:	sub	w1, w0, w1
   5d2fc:	add	w0, w1, #0x1
   5d300:	cmp	w0, #0x3f
   5d304:	b.gt	5d87c <mpfr_free_pool@@Base+0x1dd4>
   5d308:	mov	w1, #0x40                  	// #64
   5d30c:	sub	w1, w1, w0
   5d310:	lsr	x2, x5, x0
   5d314:	lsl	x5, x5, x1
   5d318:	cmp	x5, #0x0
   5d31c:	lsl	x6, x3, x1
   5d320:	cset	x1, ne  // ne = any
   5d324:	orr	x6, x6, x2
   5d328:	lsr	x3, x3, x0
   5d32c:	orr	x6, x6, x1
   5d330:	orr	x7, x6, x3
   5d334:	cbz	x7, 5d4dc <mpfr_free_pool@@Base+0x1a34>
   5d338:	and	x0, x6, #0x7
   5d33c:	mov	x1, #0x0                   	// #0
   5d340:	mov	w4, #0x1                   	// #1
   5d344:	cbz	x0, 5d740 <mpfr_free_pool@@Base+0x1c98>
   5d348:	and	x2, x12, #0xc00000
   5d34c:	cmp	x2, #0x400, lsl #12
   5d350:	b.eq	5d68c <mpfr_free_pool@@Base+0x1be4>  // b.none
   5d354:	cmp	x2, #0x800, lsl #12
   5d358:	b.eq	5d66c <mpfr_free_pool@@Base+0x1bc4>  // b.none
   5d35c:	cbz	x2, 5d698 <mpfr_free_pool@@Base+0x1bf0>
   5d360:	and	x2, x3, #0x8000000000000
   5d364:	mov	w0, #0x10                  	// #16
   5d368:	cbz	w4, 5d370 <mpfr_free_pool@@Base+0x18c8>
   5d36c:	orr	w0, w0, #0x8
   5d370:	cbz	x2, 5d420 <mpfr_free_pool@@Base+0x1978>
   5d374:	add	x1, x1, #0x1
   5d378:	mov	x2, #0x7fff                	// #32767
   5d37c:	cmp	x1, x2
   5d380:	b.eq	5d594 <mpfr_free_pool@@Base+0x1aec>  // b.none
   5d384:	ubfx	x7, x3, #3, #48
   5d388:	extr	x5, x3, x6, #3
   5d38c:	and	w1, w1, #0x7fff
   5d390:	mov	x3, #0x0                   	// #0
   5d394:	orr	w1, w1, w8, lsl #15
   5d398:	bfxil	x3, x7, #0, #48
   5d39c:	fmov	d0, x5
   5d3a0:	bfi	x3, x1, #48, #16
   5d3a4:	fmov	v0.d[1], x3
   5d3a8:	cbnz	w0, 5d5f0 <mpfr_free_pool@@Base+0x1b48>
   5d3ac:	ldp	x29, x30, [sp], #48
   5d3b0:	ret
   5d3b4:	orr	x7, x2, x10
   5d3b8:	cbz	x7, 5d248 <mpfr_free_pool@@Base+0x17a0>
   5d3bc:	and	x4, x4, #0xff
   5d3c0:	cmp	x11, x4
   5d3c4:	b.eq	5d604 <mpfr_free_pool@@Base+0x1b5c>  // b.none
   5d3c8:	cmp	w0, #0x0
   5d3cc:	b.gt	5d53c <mpfr_free_pool@@Base+0x1a94>
   5d3d0:	cbz	w0, 5d4f4 <mpfr_free_pool@@Base+0x1a4c>
   5d3d4:	mov	w8, w4
   5d3d8:	cbnz	x1, 5d810 <mpfr_free_pool@@Base+0x1d68>
   5d3dc:	orr	x1, x3, x6
   5d3e0:	cbz	x1, 5d4a8 <mpfr_free_pool@@Base+0x1a00>
   5d3e4:	cmn	w0, #0x1
   5d3e8:	b.eq	5db50 <mpfr_free_pool@@Base+0x20a8>  // b.none
   5d3ec:	mov	x1, #0x7fff                	// #32767
   5d3f0:	mvn	w0, w0
   5d3f4:	cmp	x13, x1
   5d3f8:	b.ne	5d824 <mpfr_free_pool@@Base+0x1d7c>  // b.any
   5d3fc:	orr	x0, x2, x10
   5d400:	and	x11, x8, #0xff
   5d404:	cbz	x0, 5d788 <mpfr_free_pool@@Base+0x1ce0>
   5d408:	lsr	x0, x2, #50
   5d40c:	mov	x6, x10
   5d410:	eor	x0, x0, #0x1
   5d414:	mov	x3, x2
   5d418:	and	w0, w0, #0x1
   5d41c:	mov	x1, #0x7fff                	// #32767
   5d420:	mov	x2, #0x7fff                	// #32767
   5d424:	extr	x5, x3, x6, #3
   5d428:	lsr	x7, x3, #3
   5d42c:	cmp	x1, x2
   5d430:	b.ne	5d4e8 <mpfr_free_pool@@Base+0x1a40>  // b.any
   5d434:	orr	x1, x7, x5
   5d438:	cbz	x1, 5dca4 <mpfr_free_pool@@Base+0x21fc>
   5d43c:	orr	x7, x7, #0x800000000000
   5d440:	mov	w1, #0x7fff                	// #32767
   5d444:	and	x7, x7, #0xffffffffffff
   5d448:	b	5d390 <mpfr_free_pool@@Base+0x18e8>
   5d44c:	cmp	w0, #0x0
   5d450:	b.le	5d604 <mpfr_free_pool@@Base+0x1b5c>
   5d454:	cbz	x13, 5d544 <mpfr_free_pool@@Base+0x1a9c>
   5d458:	orr	x2, x2, #0x8000000000000
   5d45c:	mov	x4, #0x7fff                	// #32767
   5d460:	cmp	x1, x4
   5d464:	b.eq	5d6f0 <mpfr_free_pool@@Base+0x1c48>  // b.none
   5d468:	cmp	w0, #0x74
   5d46c:	b.gt	5d864 <mpfr_free_pool@@Base+0x1dbc>
   5d470:	cmp	w0, #0x3f
   5d474:	b.gt	5d900 <mpfr_free_pool@@Base+0x1e58>
   5d478:	mov	w4, #0x40                  	// #64
   5d47c:	sub	w4, w4, w0
   5d480:	lsr	x7, x10, x0
   5d484:	lsl	x10, x10, x4
   5d488:	cmp	x10, #0x0
   5d48c:	lsl	x4, x2, x4
   5d490:	cset	x5, ne  // ne = any
   5d494:	orr	x4, x4, x7
   5d498:	lsr	x2, x2, x0
   5d49c:	orr	x0, x4, x5
   5d4a0:	add	x3, x3, x2
   5d4a4:	b	5d870 <mpfr_free_pool@@Base+0x1dc8>
   5d4a8:	mov	x0, #0x7fff                	// #32767
   5d4ac:	cmp	x13, x0
   5d4b0:	b.eq	5dadc <mpfr_free_pool@@Base+0x2034>  // b.none
   5d4b4:	mov	x3, x2
   5d4b8:	mov	x6, x10
   5d4bc:	mov	x1, x13
   5d4c0:	mov	x14, x4
   5d4c4:	nop
   5d4c8:	orr	x7, x6, x3
   5d4cc:	and	x0, x6, #0x7
   5d4d0:	mov	w4, #0x0                   	// #0
   5d4d4:	cbnz	x1, 5d344 <mpfr_free_pool@@Base+0x189c>
   5d4d8:	cbnz	x7, 5d338 <mpfr_free_pool@@Base+0x1890>
   5d4dc:	mov	x5, #0x0                   	// #0
   5d4e0:	mov	x1, #0x0                   	// #0
   5d4e4:	mov	w0, #0x0                   	// #0
   5d4e8:	and	x7, x7, #0xffffffffffff
   5d4ec:	and	w1, w1, #0x7fff
   5d4f0:	b	5d390 <mpfr_free_pool@@Base+0x18e8>
   5d4f4:	add	x7, x1, #0x1
   5d4f8:	tst	x7, #0x7ffe
   5d4fc:	b.ne	5d7e0 <mpfr_free_pool@@Base+0x1d38>  // b.any
   5d500:	orr	x11, x3, x6
   5d504:	orr	x7, x2, x10
   5d508:	cbnz	x1, 5d970 <mpfr_free_pool@@Base+0x1ec8>
   5d50c:	cbz	x11, 5d9fc <mpfr_free_pool@@Base+0x1f54>
   5d510:	cbz	x7, 5da10 <mpfr_free_pool@@Base+0x1f68>
   5d514:	subs	x9, x6, x10
   5d518:	cmp	x6, x10
   5d51c:	sbc	x5, x3, x2
   5d520:	tbz	x5, #51, 5dbb8 <mpfr_free_pool@@Base+0x2110>
   5d524:	subs	x6, x10, x6
   5d528:	mov	w8, w4
   5d52c:	sbc	x3, x2, x3
   5d530:	mov	x14, x4
   5d534:	orr	x7, x6, x3
   5d538:	b	5d334 <mpfr_free_pool@@Base+0x188c>
   5d53c:	orr	x2, x2, #0x8000000000000
   5d540:	b	5d274 <mpfr_free_pool@@Base+0x17cc>
   5d544:	orr	x4, x2, x10
   5d548:	cbz	x4, 5d71c <mpfr_free_pool@@Base+0x1c74>
   5d54c:	subs	w0, w0, #0x1
   5d550:	b.ne	5d45c <mpfr_free_pool@@Base+0x19b4>  // b.any
   5d554:	adds	x6, x6, x10
   5d558:	adc	x3, x2, x3
   5d55c:	nop
   5d560:	tbz	x3, #51, 5d4c8 <mpfr_free_pool@@Base+0x1a20>
   5d564:	add	x1, x1, #0x1
   5d568:	mov	x0, #0x7fff                	// #32767
   5d56c:	cmp	x1, x0
   5d570:	b.eq	5da1c <mpfr_free_pool@@Base+0x1f74>  // b.none
   5d574:	and	x0, x6, #0x1
   5d578:	and	x2, x3, #0xfff7ffffffffffff
   5d57c:	orr	x6, x0, x6, lsr #1
   5d580:	mov	w4, #0x0                   	// #0
   5d584:	orr	x6, x6, x3, lsl #63
   5d588:	lsr	x3, x2, #1
   5d58c:	and	x0, x6, #0x7
   5d590:	b	5d344 <mpfr_free_pool@@Base+0x189c>
   5d594:	and	x2, x12, #0xc00000
   5d598:	cbz	x2, 5d5d0 <mpfr_free_pool@@Base+0x1b28>
   5d59c:	cmp	x2, #0x400, lsl #12
   5d5a0:	b.eq	5d5cc <mpfr_free_pool@@Base+0x1b24>  // b.none
   5d5a4:	cmp	x2, #0x800, lsl #12
   5d5a8:	and	w14, w14, #0x1
   5d5ac:	csel	w14, w14, wzr, eq  // eq = none
   5d5b0:	cbnz	w14, 5d5d0 <mpfr_free_pool@@Base+0x1b28>
   5d5b4:	mov	w1, #0x14                  	// #20
   5d5b8:	mov	x5, #0xffffffffffffffff    	// #-1
   5d5bc:	orr	w0, w0, w1
   5d5c0:	mov	x7, #0x1fffffffffffffff    	// #2305843009213693951
   5d5c4:	mov	x1, #0x7ffe                	// #32766
   5d5c8:	b	5d4e8 <mpfr_free_pool@@Base+0x1a40>
   5d5cc:	cbnz	x14, 5d5b4 <mpfr_free_pool@@Base+0x1b0c>
   5d5d0:	mov	w1, #0x14                  	// #20
   5d5d4:	and	x11, x8, #0xff
   5d5d8:	orr	w0, w0, w1
   5d5dc:	mov	x2, #0x0                   	// #0
   5d5e0:	fmov	d0, x2
   5d5e4:	lsl	x11, x11, #63
   5d5e8:	orr	x3, x11, #0x7fff000000000000
   5d5ec:	fmov	v0.d[1], x3
   5d5f0:	str	q0, [sp, #16]
   5d5f4:	bl	5e118 <mpfr_free_pool@@Base+0x2670>
   5d5f8:	ldr	q0, [sp, #16]
   5d5fc:	ldp	x29, x30, [sp], #48
   5d600:	ret
   5d604:	cbz	w0, 5d7a0 <mpfr_free_pool@@Base+0x1cf8>
   5d608:	cbz	x1, 5d75c <mpfr_free_pool@@Base+0x1cb4>
   5d60c:	mov	x1, #0x7fff                	// #32767
   5d610:	neg	w0, w0
   5d614:	orr	x3, x3, #0x8000000000000
   5d618:	cmp	x13, x1
   5d61c:	b.eq	5d77c <mpfr_free_pool@@Base+0x1cd4>  // b.none
   5d620:	cmp	w0, #0x74
   5d624:	b.gt	5da70 <mpfr_free_pool@@Base+0x1fc8>
   5d628:	cmp	w0, #0x3f
   5d62c:	b.gt	5db24 <mpfr_free_pool@@Base+0x207c>
   5d630:	mov	w1, #0x40                  	// #64
   5d634:	sub	w1, w1, w0
   5d638:	lsr	x4, x6, x0
   5d63c:	lsl	x6, x6, x1
   5d640:	cmp	x6, #0x0
   5d644:	lsl	x6, x3, x1
   5d648:	cset	x1, ne  // ne = any
   5d64c:	orr	x6, x6, x4
   5d650:	lsr	x0, x3, x0
   5d654:	orr	x6, x6, x1
   5d658:	add	x2, x2, x0
   5d65c:	adds	x6, x6, x10
   5d660:	mov	x1, x13
   5d664:	cinc	x3, x2, cs  // cs = hs, nlast
   5d668:	b	5d560 <mpfr_free_pool@@Base+0x1ab8>
   5d66c:	mov	w0, #0x10                  	// #16
   5d670:	cbz	x14, 5d67c <mpfr_free_pool@@Base+0x1bd4>
   5d674:	adds	x6, x6, #0x8
   5d678:	cinc	x3, x3, cs  // cs = hs, nlast
   5d67c:	and	x2, x3, #0x8000000000000
   5d680:	cbz	w4, 5d370 <mpfr_free_pool@@Base+0x18c8>
   5d684:	orr	w0, w0, #0x8
   5d688:	b	5d370 <mpfr_free_pool@@Base+0x18c8>
   5d68c:	mov	w0, #0x10                  	// #16
   5d690:	cbnz	x14, 5d67c <mpfr_free_pool@@Base+0x1bd4>
   5d694:	b	5d674 <mpfr_free_pool@@Base+0x1bcc>
   5d698:	and	x2, x6, #0xf
   5d69c:	mov	w0, #0x10                  	// #16
   5d6a0:	cmp	x2, #0x4
   5d6a4:	b.eq	5d67c <mpfr_free_pool@@Base+0x1bd4>  // b.none
   5d6a8:	adds	x6, x6, #0x4
   5d6ac:	cinc	x3, x3, cs  // cs = hs, nlast
   5d6b0:	b	5d67c <mpfr_free_pool@@Base+0x1bd4>
   5d6b4:	mov	x6, x5
   5d6b8:	and	x3, x3, #0xfff7ffffffffffff
   5d6bc:	sub	x1, x1, x2
   5d6c0:	orr	x7, x6, x3
   5d6c4:	and	x0, x6, #0x7
   5d6c8:	mov	w4, #0x0                   	// #0
   5d6cc:	cbz	x1, 5d4d8 <mpfr_free_pool@@Base+0x1a30>
   5d6d0:	b	5d344 <mpfr_free_pool@@Base+0x189c>
   5d6d4:	clz	x3, x6
   5d6d8:	add	w0, w3, #0x34
   5d6dc:	cmp	w0, #0x3f
   5d6e0:	b.le	5d2d8 <mpfr_free_pool@@Base+0x1830>
   5d6e4:	sub	w3, w3, #0xc
   5d6e8:	lsl	x3, x6, x3
   5d6ec:	b	5d2ec <mpfr_free_pool@@Base+0x1844>
   5d6f0:	orr	x0, x3, x6
   5d6f4:	cbz	x0, 5d788 <mpfr_free_pool@@Base+0x1ce0>
   5d6f8:	lsr	x0, x3, #50
   5d6fc:	mov	x1, #0x7fff                	// #32767
   5d700:	eor	x0, x0, #0x1
   5d704:	and	w0, w0, #0x1
   5d708:	b	5d420 <mpfr_free_pool@@Base+0x1978>
   5d70c:	orr	x2, x2, x10
   5d710:	cmp	x2, #0x0
   5d714:	cset	x4, ne  // ne = any
   5d718:	b	5d2bc <mpfr_free_pool@@Base+0x1814>
   5d71c:	mov	x0, #0x7fff                	// #32767
   5d720:	cmp	x1, x0
   5d724:	b.ne	5d4c8 <mpfr_free_pool@@Base+0x1a20>  // b.any
   5d728:	orr	x0, x3, x6
   5d72c:	cbnz	x0, 5d6f8 <mpfr_free_pool@@Base+0x1c50>
   5d730:	mov	x5, #0x0                   	// #0
   5d734:	mov	x7, #0x0                   	// #0
   5d738:	mov	w0, #0x0                   	// #0
   5d73c:	b	5d434 <mpfr_free_pool@@Base+0x198c>
   5d740:	and	x2, x3, #0x8000000000000
   5d744:	mov	w0, #0x0                   	// #0
   5d748:	cbz	w4, 5d370 <mpfr_free_pool@@Base+0x18c8>
   5d74c:	mov	w0, #0x0                   	// #0
   5d750:	tbz	w12, #11, 5d370 <mpfr_free_pool@@Base+0x18c8>
   5d754:	orr	w0, w0, #0x8
   5d758:	b	5d370 <mpfr_free_pool@@Base+0x18c8>
   5d75c:	orr	x1, x3, x6
   5d760:	cbz	x1, 5dae8 <mpfr_free_pool@@Base+0x2040>
   5d764:	cmn	w0, #0x1
   5d768:	b.eq	5dc38 <mpfr_free_pool@@Base+0x2190>  // b.none
   5d76c:	mov	x1, #0x7fff                	// #32767
   5d770:	mvn	w0, w0
   5d774:	cmp	x13, x1
   5d778:	b.ne	5d620 <mpfr_free_pool@@Base+0x1b78>  // b.any
   5d77c:	orr	x0, x2, x10
   5d780:	cbnz	x0, 5d408 <mpfr_free_pool@@Base+0x1960>
   5d784:	nop
   5d788:	mov	x2, #0x0                   	// #0
   5d78c:	fmov	d0, x2
   5d790:	lsl	x0, x11, #63
   5d794:	orr	x3, x0, #0x7fff000000000000
   5d798:	fmov	v0.d[1], x3
   5d79c:	b	5d3ac <mpfr_free_pool@@Base+0x1904>
   5d7a0:	add	x7, x1, #0x1
   5d7a4:	tst	x7, #0x7ffe
   5d7a8:	b.ne	5d92c <mpfr_free_pool@@Base+0x1e84>  // b.any
   5d7ac:	orr	x11, x3, x6
   5d7b0:	cbnz	x1, 5dab4 <mpfr_free_pool@@Base+0x200c>
   5d7b4:	orr	x7, x2, x10
   5d7b8:	cbz	x11, 5db18 <mpfr_free_pool@@Base+0x2070>
   5d7bc:	cbz	x7, 5da10 <mpfr_free_pool@@Base+0x1f68>
   5d7c0:	adds	x6, x6, x10
   5d7c4:	adc	x3, x2, x3
   5d7c8:	tbz	x3, #51, 5d330 <mpfr_free_pool@@Base+0x1888>
   5d7cc:	and	x3, x3, #0xfff7ffffffffffff
   5d7d0:	and	x0, x6, #0x7
   5d7d4:	mov	w4, #0x0                   	// #0
   5d7d8:	mov	x1, #0x1                   	// #1
   5d7dc:	b	5d344 <mpfr_free_pool@@Base+0x189c>
   5d7e0:	subs	x9, x6, x10
   5d7e4:	cmp	x6, x10
   5d7e8:	sbc	x5, x3, x2
   5d7ec:	tbnz	x5, #51, 5d958 <mpfr_free_pool@@Base+0x1eb0>
   5d7f0:	orr	x7, x9, x5
   5d7f4:	cbnz	x7, 5da68 <mpfr_free_pool@@Base+0x1fc0>
   5d7f8:	and	x12, x12, #0xc00000
   5d7fc:	mov	x5, #0x0                   	// #0
   5d800:	cmp	x12, #0x800, lsl #12
   5d804:	mov	x1, #0x0                   	// #0
   5d808:	cset	w8, eq  // eq = none
   5d80c:	b	5d4e8 <mpfr_free_pool@@Base+0x1a40>
   5d810:	mov	x1, #0x7fff                	// #32767
   5d814:	neg	w0, w0
   5d818:	orr	x3, x3, #0x8000000000000
   5d81c:	cmp	x13, x1
   5d820:	b.eq	5d3fc <mpfr_free_pool@@Base+0x1954>  // b.none
   5d824:	cmp	w0, #0x74
   5d828:	b.gt	5d8e0 <mpfr_free_pool@@Base+0x1e38>
   5d82c:	cmp	w0, #0x3f
   5d830:	b.gt	5da80 <mpfr_free_pool@@Base+0x1fd8>
   5d834:	mov	w1, #0x40                  	// #64
   5d838:	sub	w1, w1, w0
   5d83c:	lsr	x5, x6, x0
   5d840:	lsl	x6, x6, x1
   5d844:	cmp	x6, #0x0
   5d848:	lsl	x6, x3, x1
   5d84c:	cset	x1, ne  // ne = any
   5d850:	orr	x6, x6, x5
   5d854:	lsr	x0, x3, x0
   5d858:	orr	x6, x6, x1
   5d85c:	sub	x2, x2, x0
   5d860:	b	5d8ec <mpfr_free_pool@@Base+0x1e44>
   5d864:	orr	x2, x2, x10
   5d868:	cmp	x2, #0x0
   5d86c:	cset	x0, ne  // ne = any
   5d870:	adds	x6, x0, x6
   5d874:	cinc	x3, x3, cs  // cs = hs, nlast
   5d878:	b	5d560 <mpfr_free_pool@@Base+0x1ab8>
   5d87c:	mov	w2, #0x80                  	// #128
   5d880:	sub	w2, w2, w0
   5d884:	cmp	w0, #0x40
   5d888:	sub	w6, w1, #0x3f
   5d88c:	lsl	x0, x3, x2
   5d890:	orr	x0, x5, x0
   5d894:	csel	x5, x0, x5, ne  // ne = any
   5d898:	lsr	x6, x3, x6
   5d89c:	cmp	x5, #0x0
   5d8a0:	mov	x3, #0x0                   	// #0
   5d8a4:	cset	x0, ne  // ne = any
   5d8a8:	orr	x6, x0, x6
   5d8ac:	mov	x7, x6
   5d8b0:	b	5d334 <mpfr_free_pool@@Base+0x188c>
   5d8b4:	mov	w5, #0x80                  	// #128
   5d8b8:	sub	w5, w5, w0
   5d8bc:	subs	w0, w0, #0x40
   5d8c0:	lsl	x5, x2, x5
   5d8c4:	orr	x5, x10, x5
   5d8c8:	csel	x10, x5, x10, ne  // ne = any
   5d8cc:	lsr	x2, x2, x0
   5d8d0:	cmp	x10, #0x0
   5d8d4:	cset	x4, ne  // ne = any
   5d8d8:	orr	x4, x4, x2
   5d8dc:	b	5d2bc <mpfr_free_pool@@Base+0x1814>
   5d8e0:	orr	x3, x3, x6
   5d8e4:	cmp	x3, #0x0
   5d8e8:	cset	x6, ne  // ne = any
   5d8ec:	subs	x6, x10, x6
   5d8f0:	mov	x1, x13
   5d8f4:	sbc	x3, x2, xzr
   5d8f8:	mov	x14, x4
   5d8fc:	b	5d2c4 <mpfr_free_pool@@Base+0x181c>
   5d900:	mov	w4, #0x80                  	// #128
   5d904:	sub	w4, w4, w0
   5d908:	subs	w0, w0, #0x40
   5d90c:	lsl	x4, x2, x4
   5d910:	orr	x4, x10, x4
   5d914:	csel	x10, x4, x10, ne  // ne = any
   5d918:	lsr	x2, x2, x0
   5d91c:	cmp	x10, #0x0
   5d920:	cset	x0, ne  // ne = any
   5d924:	orr	x0, x0, x2
   5d928:	b	5d870 <mpfr_free_pool@@Base+0x1dc8>
   5d92c:	mov	x0, #0x7fff                	// #32767
   5d930:	cmp	x7, x0
   5d934:	b.eq	5db68 <mpfr_free_pool@@Base+0x20c0>  // b.none
   5d938:	adds	x6, x6, x10
   5d93c:	mov	x1, x7
   5d940:	adc	x3, x2, x3
   5d944:	mov	w4, #0x0                   	// #0
   5d948:	ubfx	x0, x6, #1, #3
   5d94c:	extr	x6, x3, x6, #1
   5d950:	lsr	x3, x3, #1
   5d954:	b	5d344 <mpfr_free_pool@@Base+0x189c>
   5d958:	cmp	x10, x6
   5d95c:	mov	w8, w4
   5d960:	sbc	x5, x2, x3
   5d964:	sub	x6, x10, x6
   5d968:	mov	x14, x4
   5d96c:	b	5d2cc <mpfr_free_pool@@Base+0x1824>
   5d970:	mov	x12, #0x7fff                	// #32767
   5d974:	cmp	x1, x12
   5d978:	b.eq	5d9a0 <mpfr_free_pool@@Base+0x1ef8>  // b.none
   5d97c:	cmp	x13, x12
   5d980:	b.eq	5db94 <mpfr_free_pool@@Base+0x20ec>  // b.none
   5d984:	cbnz	x11, 5d9b8 <mpfr_free_pool@@Base+0x1f10>
   5d988:	cbnz	x7, 5dba4 <mpfr_free_pool@@Base+0x20fc>
   5d98c:	mov	x5, #0xffffffffffffffff    	// #-1
   5d990:	mov	x7, #0xffffffffffff        	// #281474976710655
   5d994:	mov	w0, #0x1                   	// #1
   5d998:	mov	w8, #0x0                   	// #0
   5d99c:	b	5d43c <mpfr_free_pool@@Base+0x1994>
   5d9a0:	cbz	x11, 5db8c <mpfr_free_pool@@Base+0x20e4>
   5d9a4:	lsr	x0, x3, #50
   5d9a8:	cmp	x13, x1
   5d9ac:	eor	x0, x0, #0x1
   5d9b0:	and	w0, w0, #0x1
   5d9b4:	b.eq	5db94 <mpfr_free_pool@@Base+0x20ec>  // b.none
   5d9b8:	cbz	x7, 5d41c <mpfr_free_pool@@Base+0x1974>
   5d9bc:	bfi	x5, x3, #61, #3
   5d9c0:	lsr	x7, x3, #3
   5d9c4:	tbz	x3, #50, 5d9e0 <mpfr_free_pool@@Base+0x1f38>
   5d9c8:	lsr	x1, x2, #3
   5d9cc:	tbnz	x2, #50, 5d9e0 <mpfr_free_pool@@Base+0x1f38>
   5d9d0:	mov	x5, x9
   5d9d4:	mov	w8, w4
   5d9d8:	bfi	x5, x2, #61, #3
   5d9dc:	mov	x7, x1
   5d9e0:	extr	x7, x7, x5, #61
   5d9e4:	bfi	x5, x7, #61, #3
   5d9e8:	lsr	x7, x7, #3
   5d9ec:	b	5d434 <mpfr_free_pool@@Base+0x198c>
   5d9f0:	subs	x6, x6, x10
   5d9f4:	sbc	x3, x3, x2
   5d9f8:	b	5d2c4 <mpfr_free_pool@@Base+0x181c>
   5d9fc:	cbz	x7, 5db04 <mpfr_free_pool@@Base+0x205c>
   5da00:	mov	x3, x2
   5da04:	mov	x6, x10
   5da08:	mov	w8, w4
   5da0c:	mov	x14, x4
   5da10:	mov	x1, #0x0                   	// #0
   5da14:	mov	x2, #0x0                   	// #0
   5da18:	b	5d74c <mpfr_free_pool@@Base+0x1ca4>
   5da1c:	ands	x2, x12, #0xc00000
   5da20:	b.eq	5daac <mpfr_free_pool@@Base+0x2004>  // b.none
   5da24:	cmp	x2, #0x400, lsl #12
   5da28:	eor	w0, w8, #0x1
   5da2c:	cset	w1, eq  // eq = none
   5da30:	tst	w1, w0
   5da34:	b.ne	5db80 <mpfr_free_pool@@Base+0x20d8>  // b.any
   5da38:	cmp	x2, #0x800, lsl #12
   5da3c:	b.eq	5dbd4 <mpfr_free_pool@@Base+0x212c>  // b.none
   5da40:	cmp	x2, #0x400, lsl #12
   5da44:	mov	w0, #0x14                  	// #20
   5da48:	b.ne	5d598 <mpfr_free_pool@@Base+0x1af0>  // b.any
   5da4c:	mov	x3, #0xffffffffffffffff    	// #-1
   5da50:	mov	x1, #0x7ffe                	// #32766
   5da54:	mov	x6, x3
   5da58:	mov	w4, #0x0                   	// #0
   5da5c:	mov	w0, #0x14                  	// #20
   5da60:	cbnz	x14, 5d67c <mpfr_free_pool@@Base+0x1bd4>
   5da64:	b	5d674 <mpfr_free_pool@@Base+0x1bcc>
   5da68:	mov	x6, x9
   5da6c:	b	5d2cc <mpfr_free_pool@@Base+0x1824>
   5da70:	orr	x3, x3, x6
   5da74:	cmp	x3, #0x0
   5da78:	cset	x6, ne  // ne = any
   5da7c:	b	5d65c <mpfr_free_pool@@Base+0x1bb4>
   5da80:	mov	w1, #0x80                  	// #128
   5da84:	sub	w1, w1, w0
   5da88:	subs	w0, w0, #0x40
   5da8c:	lsl	x1, x3, x1
   5da90:	orr	x1, x6, x1
   5da94:	csel	x6, x1, x6, ne  // ne = any
   5da98:	lsr	x3, x3, x0
   5da9c:	cmp	x6, #0x0
   5daa0:	cset	x6, ne  // ne = any
   5daa4:	orr	x6, x6, x3
   5daa8:	b	5d8ec <mpfr_free_pool@@Base+0x1e44>
   5daac:	mov	w0, #0x14                  	// #20
   5dab0:	b	5d5dc <mpfr_free_pool@@Base+0x1b34>
   5dab4:	mov	x7, #0x7fff                	// #32767
   5dab8:	cmp	x1, x7
   5dabc:	b.eq	5dbf0 <mpfr_free_pool@@Base+0x2148>  // b.none
   5dac0:	cmp	x13, x7
   5dac4:	b.eq	5dc54 <mpfr_free_pool@@Base+0x21ac>  // b.none
   5dac8:	cbnz	x11, 5dc08 <mpfr_free_pool@@Base+0x2160>
   5dacc:	mov	x3, x2
   5dad0:	mov	x6, x10
   5dad4:	mov	x1, #0x7fff                	// #32767
   5dad8:	b	5d420 <mpfr_free_pool@@Base+0x1978>
   5dadc:	orr	x0, x2, x10
   5dae0:	cbz	x0, 5d730 <mpfr_free_pool@@Base+0x1c88>
   5dae4:	b	5d408 <mpfr_free_pool@@Base+0x1960>
   5dae8:	mov	x0, #0x7fff                	// #32767
   5daec:	cmp	x13, x0
   5daf0:	b.eq	5dadc <mpfr_free_pool@@Base+0x2034>  // b.none
   5daf4:	mov	x3, x2
   5daf8:	mov	x6, x10
   5dafc:	mov	x1, x13
   5db00:	b	5d4c8 <mpfr_free_pool@@Base+0x1a20>
   5db04:	and	x12, x12, #0xc00000
   5db08:	mov	x5, #0x0                   	// #0
   5db0c:	cmp	x12, #0x800, lsl #12
   5db10:	cset	w8, eq  // eq = none
   5db14:	b	5d4e8 <mpfr_free_pool@@Base+0x1a40>
   5db18:	mov	x3, x2
   5db1c:	mov	x6, x10
   5db20:	b	5d334 <mpfr_free_pool@@Base+0x188c>
   5db24:	mov	w1, #0x80                  	// #128
   5db28:	sub	w1, w1, w0
   5db2c:	subs	w0, w0, #0x40
   5db30:	lsl	x1, x3, x1
   5db34:	orr	x1, x6, x1
   5db38:	csel	x6, x1, x6, ne  // ne = any
   5db3c:	lsr	x3, x3, x0
   5db40:	cmp	x6, #0x0
   5db44:	cset	x6, ne  // ne = any
   5db48:	orr	x6, x6, x3
   5db4c:	b	5d65c <mpfr_free_pool@@Base+0x1bb4>
   5db50:	cmp	x10, x6
   5db54:	mov	x1, x13
   5db58:	sbc	x3, x2, x3
   5db5c:	sub	x6, x10, x6
   5db60:	mov	x14, x4
   5db64:	b	5d2c4 <mpfr_free_pool@@Base+0x181c>
   5db68:	ands	x2, x12, #0xc00000
   5db6c:	b.eq	5daac <mpfr_free_pool@@Base+0x2004>  // b.none
   5db70:	cmp	x2, #0x400, lsl #12
   5db74:	eor	w0, w8, #0x1
   5db78:	csel	w0, w0, wzr, eq  // eq = none
   5db7c:	cbz	w0, 5da38 <mpfr_free_pool@@Base+0x1f90>
   5db80:	mov	w0, #0x14                  	// #20
   5db84:	mov	x11, #0x0                   	// #0
   5db88:	b	5d5dc <mpfr_free_pool@@Base+0x1b34>
   5db8c:	cmp	x13, x1
   5db90:	b.ne	5d988 <mpfr_free_pool@@Base+0x1ee0>  // b.any
   5db94:	cbz	x7, 5dc48 <mpfr_free_pool@@Base+0x21a0>
   5db98:	tst	x2, #0x4000000000000
   5db9c:	csinc	w0, w0, wzr, ne  // ne = any
   5dba0:	cbnz	x11, 5d9bc <mpfr_free_pool@@Base+0x1f14>
   5dba4:	mov	w8, w4
   5dba8:	mov	x3, x2
   5dbac:	mov	x6, x10
   5dbb0:	mov	x1, #0x7fff                	// #32767
   5dbb4:	b	5d420 <mpfr_free_pool@@Base+0x1978>
   5dbb8:	orr	x7, x9, x5
   5dbbc:	cbz	x7, 5db04 <mpfr_free_pool@@Base+0x205c>
   5dbc0:	mov	x3, x5
   5dbc4:	and	x0, x9, #0x7
   5dbc8:	mov	x6, x9
   5dbcc:	mov	w4, #0x1                   	// #1
   5dbd0:	b	5d344 <mpfr_free_pool@@Base+0x189c>
   5dbd4:	cbnz	x11, 5dc68 <mpfr_free_pool@@Base+0x21c0>
   5dbd8:	mov	x3, #0xffffffffffffffff    	// #-1
   5dbdc:	mov	w8, #0x0                   	// #0
   5dbe0:	mov	x6, x3
   5dbe4:	mov	x1, #0x7ffe                	// #32766
   5dbe8:	mov	w0, #0x14                  	// #20
   5dbec:	b	5d374 <mpfr_free_pool@@Base+0x18cc>
   5dbf0:	cbz	x11, 5dc74 <mpfr_free_pool@@Base+0x21cc>
   5dbf4:	lsr	x0, x3, #50
   5dbf8:	cmp	x13, x1
   5dbfc:	eor	x0, x0, #0x1
   5dc00:	and	w0, w0, #0x1
   5dc04:	b.eq	5dc94 <mpfr_free_pool@@Base+0x21ec>  // b.none
   5dc08:	orr	x10, x2, x10
   5dc0c:	cbz	x10, 5d41c <mpfr_free_pool@@Base+0x1974>
   5dc10:	bfi	x5, x3, #61, #3
   5dc14:	lsr	x7, x3, #3
   5dc18:	tbz	x3, #50, 5d9e0 <mpfr_free_pool@@Base+0x1f38>
   5dc1c:	lsr	x1, x2, #3
   5dc20:	tbnz	x2, #50, 5d9e0 <mpfr_free_pool@@Base+0x1f38>
   5dc24:	and	x5, x9, #0x1fffffffffffffff
   5dc28:	mov	w8, w4
   5dc2c:	orr	x5, x5, x2, lsl #61
   5dc30:	mov	x7, x1
   5dc34:	b	5d9e0 <mpfr_free_pool@@Base+0x1f38>
   5dc38:	adds	x6, x6, x10
   5dc3c:	mov	x1, x13
   5dc40:	adc	x3, x2, x3
   5dc44:	b	5d560 <mpfr_free_pool@@Base+0x1ab8>
   5dc48:	cbz	x11, 5d98c <mpfr_free_pool@@Base+0x1ee4>
   5dc4c:	mov	x1, #0x7fff                	// #32767
   5dc50:	b	5d420 <mpfr_free_pool@@Base+0x1978>
   5dc54:	orr	x1, x2, x10
   5dc58:	cbnz	x1, 5dc84 <mpfr_free_pool@@Base+0x21dc>
   5dc5c:	cbz	x11, 5d730 <mpfr_free_pool@@Base+0x1c88>
   5dc60:	mov	x1, #0x7fff                	// #32767
   5dc64:	b	5d420 <mpfr_free_pool@@Base+0x1978>
   5dc68:	mov	w0, #0x14                  	// #20
   5dc6c:	mov	x11, #0x1                   	// #1
   5dc70:	b	5d5dc <mpfr_free_pool@@Base+0x1b34>
   5dc74:	cmp	x13, x1
   5dc78:	b.ne	5dacc <mpfr_free_pool@@Base+0x2024>  // b.any
   5dc7c:	orr	x1, x2, x10
   5dc80:	cbz	x1, 5d730 <mpfr_free_pool@@Base+0x1c88>
   5dc84:	tst	x2, #0x4000000000000
   5dc88:	csinc	w0, w0, wzr, ne  // ne = any
   5dc8c:	cbnz	x11, 5dc10 <mpfr_free_pool@@Base+0x2168>
   5dc90:	b	5dacc <mpfr_free_pool@@Base+0x2024>
   5dc94:	orr	x1, x2, x10
   5dc98:	cbnz	x1, 5dc84 <mpfr_free_pool@@Base+0x21dc>
   5dc9c:	mov	x1, #0x7fff                	// #32767
   5dca0:	b	5d420 <mpfr_free_pool@@Base+0x1978>
   5dca4:	mov	x5, #0x0                   	// #0
   5dca8:	mov	w1, #0x7fff                	// #32767
   5dcac:	mov	x7, #0x0                   	// #0
   5dcb0:	b	5d390 <mpfr_free_pool@@Base+0x18e8>
   5dcb4:	nop
   5dcb8:	mrs	x0, fpcr
   5dcbc:	fmov	x0, d0
   5dcc0:	ubfx	x1, x0, #52, #11
   5dcc4:	lsr	x4, x0, #63
   5dcc8:	add	x2, x1, #0x1
   5dccc:	and	w4, w4, #0xff
   5dcd0:	tst	x2, #0x7fe
   5dcd4:	ubfx	x0, x0, #0, #52
   5dcd8:	b.eq	5dd0c <mpfr_free_pool@@Base+0x2264>  // b.none
   5dcdc:	lsr	x5, x0, #4
   5dce0:	mov	x3, #0x0                   	// #0
   5dce4:	and	x5, x5, #0xffffffffffff
   5dce8:	mov	w2, #0x3c00                	// #15360
   5dcec:	add	w1, w1, w2
   5dcf0:	lsl	x0, x0, #60
   5dcf4:	bfxil	x3, x5, #0, #48
   5dcf8:	fmov	d0, x0
   5dcfc:	bfi	x3, x1, #48, #15
   5dd00:	bfi	x3, x4, #63, #1
   5dd04:	fmov	v0.d[1], x3
   5dd08:	ret
   5dd0c:	cbnz	x1, 5dd60 <mpfr_free_pool@@Base+0x22b8>
   5dd10:	cbz	x0, 5ddac <mpfr_free_pool@@Base+0x2304>
   5dd14:	clz	x2, x0
   5dd18:	cmp	w2, #0xe
   5dd1c:	b.gt	5ddf8 <mpfr_free_pool@@Base+0x2350>
   5dd20:	add	w1, w2, #0x31
   5dd24:	mov	w5, #0xf                   	// #15
   5dd28:	sub	w5, w5, w2
   5dd2c:	lsr	x5, x0, x5
   5dd30:	lsl	x0, x0, x1
   5dd34:	and	x5, x5, #0xffffffffffff
   5dd38:	mov	w1, #0x3c0c                	// #15372
   5dd3c:	mov	x3, #0x0                   	// #0
   5dd40:	sub	w1, w1, w2
   5dd44:	and	w1, w1, #0x7fff
   5dd48:	bfxil	x3, x5, #0, #48
   5dd4c:	fmov	d0, x0
   5dd50:	bfi	x3, x1, #48, #15
   5dd54:	bfi	x3, x4, #63, #1
   5dd58:	fmov	v0.d[1], x3
   5dd5c:	ret
   5dd60:	cbz	x0, 5ddd0 <mpfr_free_pool@@Base+0x2328>
   5dd64:	lsr	x1, x0, #4
   5dd68:	mov	x3, #0x0                   	// #0
   5dd6c:	orr	x1, x1, #0x800000000000
   5dd70:	lsl	x2, x0, #60
   5dd74:	fmov	d0, x2
   5dd78:	bfxil	x3, x1, #0, #48
   5dd7c:	orr	x3, x3, #0x7fff000000000000
   5dd80:	bfi	x3, x4, #63, #1
   5dd84:	fmov	v0.d[1], x3
   5dd88:	tbnz	x0, #51, 5ddf4 <mpfr_free_pool@@Base+0x234c>
   5dd8c:	stp	x29, x30, [sp, #-32]!
   5dd90:	mov	w0, #0x1                   	// #1
   5dd94:	mov	x29, sp
   5dd98:	str	q0, [sp, #16]
   5dd9c:	bl	5e118 <mpfr_free_pool@@Base+0x2670>
   5dda0:	ldr	q0, [sp, #16]
   5dda4:	ldp	x29, x30, [sp], #32
   5dda8:	ret
   5ddac:	mov	x5, #0x0                   	// #0
   5ddb0:	mov	x3, #0x0                   	// #0
   5ddb4:	bfxil	x3, x5, #0, #48
   5ddb8:	mov	w1, #0x0                   	// #0
   5ddbc:	fmov	d0, x0
   5ddc0:	bfi	x3, x1, #48, #15
   5ddc4:	bfi	x3, x4, #63, #1
   5ddc8:	fmov	v0.d[1], x3
   5ddcc:	ret
   5ddd0:	mov	x5, #0x0                   	// #0
   5ddd4:	mov	x3, #0x0                   	// #0
   5ddd8:	bfxil	x3, x5, #0, #48
   5dddc:	mov	w1, #0x7fff                	// #32767
   5dde0:	fmov	d0, x0
   5dde4:	bfi	x3, x1, #48, #15
   5dde8:	bfi	x3, x4, #63, #1
   5ddec:	fmov	v0.d[1], x3
   5ddf0:	ret
   5ddf4:	ret
   5ddf8:	sub	w5, w2, #0xf
   5ddfc:	lsl	x5, x0, x5
   5de00:	mov	x0, #0x0                   	// #0
   5de04:	b	5dd34 <mpfr_free_pool@@Base+0x228c>
   5de08:	stp	x29, x30, [sp, #-48]!
   5de0c:	mov	x29, sp
   5de10:	str	x19, [sp, #16]
   5de14:	str	q0, [sp, #32]
   5de18:	ldp	x3, x0, [sp, #32]
   5de1c:	mrs	x6, fpcr
   5de20:	ubfx	x2, x0, #48, #15
   5de24:	lsr	x4, x0, #63
   5de28:	add	x1, x2, #0x1
   5de2c:	ubfiz	x0, x0, #3, #48
   5de30:	tst	x1, #0x7ffe
   5de34:	and	w4, w4, #0xff
   5de38:	orr	x0, x0, x3, lsr #61
   5de3c:	lsl	x5, x3, #3
   5de40:	b.eq	5dec0 <mpfr_free_pool@@Base+0x2418>  // b.none
   5de44:	mov	x1, #0xffffffffffffc400    	// #-15360
   5de48:	add	x2, x2, x1
   5de4c:	cmp	x2, #0x7fe
   5de50:	b.le	5df04 <mpfr_free_pool@@Base+0x245c>
   5de54:	ands	x0, x6, #0xc00000
   5de58:	b.eq	5df9c <mpfr_free_pool@@Base+0x24f4>  // b.none
   5de5c:	cmp	x0, #0x400, lsl #12
   5de60:	b.eq	5e0d0 <mpfr_free_pool@@Base+0x2628>  // b.none
   5de64:	cmp	x0, #0x800, lsl #12
   5de68:	csel	w7, w4, wzr, eq  // eq = none
   5de6c:	cbnz	w7, 5df9c <mpfr_free_pool@@Base+0x24f4>
   5de70:	mov	x1, #0xffffffffffffffff    	// #-1
   5de74:	mov	x2, #0x7fe                 	// #2046
   5de78:	mov	w0, #0x14                  	// #20
   5de7c:	b.ne	5df48 <mpfr_free_pool@@Base+0x24a0>  // b.any
   5de80:	cmp	w4, #0x0
   5de84:	add	x3, x1, #0x8
   5de88:	csel	x1, x3, x1, ne  // ne = any
   5de8c:	and	x3, x1, #0x80000000000000
   5de90:	cbnz	w7, 5df50 <mpfr_free_pool@@Base+0x24a8>
   5de94:	cbnz	x3, 5df58 <mpfr_free_pool@@Base+0x24b0>
   5de98:	lsr	x1, x1, #3
   5de9c:	and	w3, w2, #0x7ff
   5dea0:	and	x4, x4, #0xff
   5dea4:	bfi	x1, x3, #52, #12
   5dea8:	orr	x19, x1, x4, lsl #63
   5deac:	bl	5e118 <mpfr_free_pool@@Base+0x2670>
   5deb0:	fmov	d0, x19
   5deb4:	ldr	x19, [sp, #16]
   5deb8:	ldp	x29, x30, [sp], #48
   5debc:	ret
   5dec0:	orr	x1, x0, x5
   5dec4:	cbnz	x2, 5def8 <mpfr_free_pool@@Base+0x2450>
   5dec8:	cbnz	x1, 5df74 <mpfr_free_pool@@Base+0x24cc>
   5decc:	mov	w0, #0x0                   	// #0
   5ded0:	and	w2, w2, #0x7ff
   5ded4:	mov	x1, #0x0                   	// #0
   5ded8:	and	x4, x4, #0xff
   5dedc:	bfi	x1, x2, #52, #12
   5dee0:	orr	x19, x1, x4, lsl #63
   5dee4:	cbnz	w0, 5deac <mpfr_free_pool@@Base+0x2404>
   5dee8:	fmov	d0, x19
   5deec:	ldr	x19, [sp, #16]
   5def0:	ldp	x29, x30, [sp], #48
   5def4:	ret
   5def8:	cbnz	x1, 5dfa8 <mpfr_free_pool@@Base+0x2500>
   5defc:	mov	x2, #0x7ff                 	// #2047
   5df00:	b	5decc <mpfr_free_pool@@Base+0x2424>
   5df04:	cmp	x2, #0x0
   5df08:	b.le	5dfd0 <mpfr_free_pool@@Base+0x2528>
   5df0c:	cmp	xzr, x3, lsl #7
   5df10:	mov	w7, #0x0                   	// #0
   5df14:	cset	x1, ne  // ne = any
   5df18:	orr	x5, x1, x5, lsr #60
   5df1c:	orr	x1, x5, x0, lsl #4
   5df20:	mov	w0, #0x0                   	// #0
   5df24:	tst	x5, #0x7
   5df28:	b.eq	5e088 <mpfr_free_pool@@Base+0x25e0>  // b.none
   5df2c:	and	x3, x6, #0xc00000
   5df30:	cmp	x3, #0x400, lsl #12
   5df34:	b.eq	5df8c <mpfr_free_pool@@Base+0x24e4>  // b.none
   5df38:	cmp	x3, #0x800, lsl #12
   5df3c:	mov	w0, #0x10                  	// #16
   5df40:	b.eq	5de80 <mpfr_free_pool@@Base+0x23d8>  // b.none
   5df44:	cbz	x3, 5e094 <mpfr_free_pool@@Base+0x25ec>
   5df48:	and	x3, x1, #0x80000000000000
   5df4c:	cbz	w7, 5df54 <mpfr_free_pool@@Base+0x24ac>
   5df50:	orr	w0, w0, #0x8
   5df54:	cbz	x3, 5e088 <mpfr_free_pool@@Base+0x25e0>
   5df58:	cmp	x2, #0x7fe
   5df5c:	add	x2, x2, #0x1
   5df60:	b.eq	5e030 <mpfr_free_pool@@Base+0x2588>  // b.none
   5df64:	mov	x3, #0x1fefffffffffffff    	// #2301339409586323455
   5df68:	and	w2, w2, #0x7ff
   5df6c:	and	x1, x3, x1, lsr #3
   5df70:	b	5ded8 <mpfr_free_pool@@Base+0x2430>
   5df74:	and	x3, x6, #0xc00000
   5df78:	mov	w7, #0x1                   	// #1
   5df7c:	cmp	x3, #0x400, lsl #12
   5df80:	mov	x2, #0x0                   	// #0
   5df84:	mov	x1, #0x1                   	// #1
   5df88:	b.ne	5df38 <mpfr_free_pool@@Base+0x2490>  // b.any
   5df8c:	cbnz	w4, 5df94 <mpfr_free_pool@@Base+0x24ec>
   5df90:	add	x1, x1, #0x8
   5df94:	mov	w0, #0x10                  	// #16
   5df98:	b	5de8c <mpfr_free_pool@@Base+0x23e4>
   5df9c:	mov	x2, #0x7ff                 	// #2047
   5dfa0:	mov	w0, #0x14                  	// #20
   5dfa4:	b	5ded0 <mpfr_free_pool@@Base+0x2428>
   5dfa8:	mov	x3, #0x7fff                	// #32767
   5dfac:	extr	x1, x0, x5, #60
   5dfb0:	lsr	x0, x0, #50
   5dfb4:	cmp	x2, x3
   5dfb8:	lsr	x1, x1, #3
   5dfbc:	eor	w0, w0, #0x1
   5dfc0:	orr	x1, x1, #0x8000000000000
   5dfc4:	csel	w0, w0, wzr, eq  // eq = none
   5dfc8:	mov	w2, #0x7ff                 	// #2047
   5dfcc:	b	5ded8 <mpfr_free_pool@@Base+0x2430>
   5dfd0:	cmn	x2, #0x34
   5dfd4:	b.lt	5df74 <mpfr_free_pool@@Base+0x24cc>  // b.tstop
   5dfd8:	mov	x3, #0x3d                  	// #61
   5dfdc:	sub	x7, x3, x2
   5dfe0:	orr	x0, x0, #0x8000000000000
   5dfe4:	cmp	x7, #0x3f
   5dfe8:	b.le	5e0a8 <mpfr_free_pool@@Base+0x2600>
   5dfec:	add	w1, w2, #0x43
   5dff0:	cmp	x7, #0x40
   5dff4:	mov	w3, #0xfffffffd            	// #-3
   5dff8:	sub	w2, w3, w2
   5dffc:	lsl	x1, x0, x1
   5e000:	orr	x1, x5, x1
   5e004:	csel	x5, x1, x5, ne  // ne = any
   5e008:	lsr	x0, x0, x2
   5e00c:	cmp	x5, #0x0
   5e010:	cset	x1, ne  // ne = any
   5e014:	orr	x1, x1, x0
   5e018:	cmp	x1, #0x0
   5e01c:	cset	w7, ne  // ne = any
   5e020:	tst	x1, #0x7
   5e024:	b.eq	5e06c <mpfr_free_pool@@Base+0x25c4>  // b.none
   5e028:	mov	x2, #0x0                   	// #0
   5e02c:	b	5df2c <mpfr_free_pool@@Base+0x2484>
   5e030:	mov	w3, w2
   5e034:	ands	x1, x6, #0xc00000
   5e038:	b.eq	5e060 <mpfr_free_pool@@Base+0x25b8>  // b.none
   5e03c:	cmp	x1, #0x400, lsl #12
   5e040:	b.eq	5e0e8 <mpfr_free_pool@@Base+0x2640>  // b.none
   5e044:	cmp	x1, #0x800, lsl #12
   5e048:	mov	w5, #0x7fe                 	// #2046
   5e04c:	csel	w1, w4, wzr, eq  // eq = none
   5e050:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5e054:	cmp	w1, #0x0
   5e058:	csel	w3, w3, w5, ne  // ne = any
   5e05c:	csel	x1, xzr, x2, ne  // ne = any
   5e060:	mov	w2, #0x14                  	// #20
   5e064:	orr	w0, w0, w2
   5e068:	b	5dea0 <mpfr_free_pool@@Base+0x23f8>
   5e06c:	and	x3, x1, #0x80000000000000
   5e070:	cbnz	x1, 5e100 <mpfr_free_pool@@Base+0x2658>
   5e074:	nop
   5e078:	mov	w0, #0x0                   	// #0
   5e07c:	mov	x2, #0x1                   	// #1
   5e080:	cbnz	x3, 5df64 <mpfr_free_pool@@Base+0x24bc>
   5e084:	mov	x2, #0x0                   	// #0
   5e088:	lsr	x1, x1, #3
   5e08c:	and	w2, w2, #0x7ff
   5e090:	b	5ded8 <mpfr_free_pool@@Base+0x2430>
   5e094:	and	x3, x1, #0xf
   5e098:	cmp	x3, #0x4
   5e09c:	add	x3, x1, #0x4
   5e0a0:	csel	x1, x3, x1, ne  // ne = any
   5e0a4:	b	5de8c <mpfr_free_pool@@Base+0x23e4>
   5e0a8:	add	w1, w2, #0x3
   5e0ac:	sub	w2, w3, w2
   5e0b0:	lsl	x3, x5, x1
   5e0b4:	cmp	x3, #0x0
   5e0b8:	cset	x3, ne  // ne = any
   5e0bc:	lsr	x2, x5, x2
   5e0c0:	orr	x2, x2, x3
   5e0c4:	lsl	x0, x0, x1
   5e0c8:	orr	x1, x0, x2
   5e0cc:	b	5e018 <mpfr_free_pool@@Base+0x2570>
   5e0d0:	cbz	w4, 5df9c <mpfr_free_pool@@Base+0x24f4>
   5e0d4:	mov	x1, #0xffffffffffffffff    	// #-1
   5e0d8:	mov	x2, #0x7fe                 	// #2046
   5e0dc:	mov	w7, #0x0                   	// #0
   5e0e0:	mov	w0, #0x14                  	// #20
   5e0e4:	b	5de8c <mpfr_free_pool@@Base+0x23e4>
   5e0e8:	cmp	w4, #0x0
   5e0ec:	mov	w1, #0x7fe                 	// #2046
   5e0f0:	csel	w3, w2, w1, eq  // eq = none
   5e0f4:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5e0f8:	csel	x1, xzr, x2, eq  // eq = none
   5e0fc:	b	5e060 <mpfr_free_pool@@Base+0x25b8>
   5e100:	tbz	w6, #11, 5e078 <mpfr_free_pool@@Base+0x25d0>
   5e104:	mov	w0, #0x0                   	// #0
   5e108:	mov	x2, #0x0                   	// #0
   5e10c:	orr	w0, w0, #0x8
   5e110:	b	5df54 <mpfr_free_pool@@Base+0x24ac>
   5e114:	nop
   5e118:	tbz	w0, #0, 5e128 <mpfr_free_pool@@Base+0x2680>
   5e11c:	movi	v1.2s, #0x0
   5e120:	fdiv	s0, s1, s1
   5e124:	mrs	x1, fpsr
   5e128:	tbz	w0, #1, 5e13c <mpfr_free_pool@@Base+0x2694>
   5e12c:	fmov	s1, #1.000000000000000000e+00
   5e130:	movi	v2.2s, #0x0
   5e134:	fdiv	s0, s1, s2
   5e138:	mrs	x1, fpsr
   5e13c:	tbz	w0, #2, 5e15c <mpfr_free_pool@@Base+0x26b4>
   5e140:	mov	w2, #0xc5ae                	// #50606
   5e144:	mov	w1, #0x7f7fffff            	// #2139095039
   5e148:	movk	w2, #0x749d, lsl #16
   5e14c:	fmov	s1, w1
   5e150:	fmov	s2, w2
   5e154:	fadd	s0, s1, s2
   5e158:	mrs	x1, fpsr
   5e15c:	tbz	w0, #3, 5e16c <mpfr_free_pool@@Base+0x26c4>
   5e160:	movi	v1.2s, #0x80, lsl #16
   5e164:	fmul	s0, s1, s1
   5e168:	mrs	x1, fpsr
   5e16c:	tbz	w0, #4, 5e184 <mpfr_free_pool@@Base+0x26dc>
   5e170:	mov	w0, #0x7f7fffff            	// #2139095039
   5e174:	fmov	s2, #1.000000000000000000e+00
   5e178:	fmov	s1, w0
   5e17c:	fsub	s0, s1, s2
   5e180:	mrs	x0, fpsr
   5e184:	ret

Disassembly of section .fini:

000000000005e188 <.fini>:
   5e188:	stp	x29, x30, [sp, #-16]!
   5e18c:	mov	x29, sp
   5e190:	ldp	x29, x30, [sp], #16
   5e194:	ret
