
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//jpeg.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_jpeg_get_byte>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	strb	wzr, [sp, #31]
       c:	mov	x2, #0x1                   	// #1
      10:	add	x1, sp, #0x1f
      14:	ldr	x0, [x0]
      18:	bl	0 <grub_file_read>
      1c:	ldrb	w0, [sp, #31]
      20:	ldp	x29, x30, [sp], #32
      24:	ret

0000000000000028 <grub_jpeg_get_marker>:
      28:	stp	x29, x30, [sp, #-32]!
      2c:	mov	x29, sp
      30:	str	x19, [sp, #16]
      34:	mov	x19, x0
      38:	bl	0 <grub_jpeg_get_byte>
      3c:	and	w1, w0, #0xff
      40:	cmp	w1, #0xff
      44:	b.eq	68 <grub_jpeg_get_marker+0x40>  // b.none
      48:	adrp	x0, 0 <grub_jpeg_get_byte>
      4c:	ldr	x1, [x0]
      50:	mov	w0, #0x4                   	// #4
      54:	bl	0 <grub_error>
      58:	mov	w0, #0x0                   	// #0
      5c:	ldr	x19, [sp, #16]
      60:	ldp	x29, x30, [sp], #32
      64:	ret
      68:	mov	x0, x19
      6c:	bl	0 <grub_jpeg_get_byte>
      70:	and	w0, w0, #0xff
      74:	b	5c <grub_jpeg_get_marker+0x34>
	...

0000000000000080 <grub_jpeg_get_bit>:
      80:	stp	x29, x30, [sp, #-32]!
      84:	mov	x29, sp
      88:	stp	x19, x20, [sp, #16]
      8c:	mov	x19, x0
      90:	ldr	w20, [x0, #2308]
      94:	cbz	w20, c0 <grub_jpeg_get_bit+0x40>
      98:	ldr	w0, [x19, #2308]
      9c:	ldr	w1, [x19, #2312]
      a0:	tst	w0, w1
      a4:	cset	w20, ne  // ne = any
      a8:	asr	w0, w0, #1
      ac:	str	w0, [x19, #2308]
      b0:	mov	w0, w20
      b4:	ldp	x19, x20, [sp, #16]
      b8:	ldp	x29, x30, [sp], #32
      bc:	ret
      c0:	bl	0 <grub_jpeg_get_byte>
      c4:	and	w0, w0, #0xff
      c8:	str	w0, [x19, #2312]
      cc:	cmp	w0, #0xff
      d0:	b.eq	e0 <grub_jpeg_get_bit+0x60>  // b.none
      d4:	mov	w0, #0x80                  	// #128
      d8:	str	w0, [x19, #2308]
      dc:	b	98 <grub_jpeg_get_bit+0x18>
      e0:	mov	x0, x19
      e4:	bl	0 <grub_jpeg_get_byte>
      e8:	and	w0, w0, #0xff
      ec:	cbz	w0, d4 <grub_jpeg_get_bit+0x54>
      f0:	adrp	x0, 0 <grub_jpeg_get_byte>
      f4:	ldr	x1, [x0]
      f8:	mov	w0, #0x4                   	// #4
      fc:	bl	0 <grub_error>
     100:	b	b0 <grub_jpeg_get_bit+0x30>
     104:	nop
	...

0000000000000110 <grub_jpeg_get_huff_code>:
     110:	stp	x29, x30, [sp, #-64]!
     114:	mov	x29, sp
     118:	stp	x19, x20, [sp, #16]
     11c:	stp	x21, x22, [sp, #32]
     120:	stp	x23, x24, [sp, #48]
     124:	mov	x22, x0
     128:	mov	w24, w1
     12c:	sbfiz	x21, x1, #6, #32
     130:	add	x21, x21, #0x140
     134:	add	x21, x0, x21
     138:	mov	x20, #0x0                   	// #0
     13c:	mov	w19, #0x0                   	// #0
     140:	lsl	w19, w19, #1
     144:	mov	x0, x22
     148:	bl	80 <grub_jpeg_get_bit>
     14c:	cmp	w0, #0x0
     150:	cinc	w19, w19, ne  // ne = any
     154:	ldr	w2, [x21, x20, lsl #2]
     158:	cmp	w2, w19
     15c:	b.gt	194 <grub_jpeg_get_huff_code+0x84>
     160:	add	x20, x20, #0x1
     164:	cmp	x20, #0x10
     168:	b.ne	140 <grub_jpeg_get_huff_code+0x30>  // b.any
     16c:	adrp	x0, 0 <grub_jpeg_get_byte>
     170:	ldr	x1, [x0]
     174:	mov	w0, #0x4                   	// #4
     178:	bl	0 <grub_error>
     17c:	mov	w0, #0x0                   	// #0
     180:	ldp	x19, x20, [sp, #16]
     184:	ldp	x21, x22, [sp, #32]
     188:	ldp	x23, x24, [sp, #48]
     18c:	ldp	x29, x30, [sp], #64
     190:	ret
     194:	sxtw	x24, w24
     198:	add	x0, x24, #0x4
     19c:	lsl	x24, x24, #4
     1a0:	add	x23, x24, w20, uxtw
     1a4:	add	x23, x23, #0x10
     1a8:	ldr	w1, [x22, x23, lsl #2]
     1ac:	add	w19, w19, w1
     1b0:	ldr	x0, [x22, x0, lsl #3]
     1b4:	ldrb	w0, [x0, w19, sxtw]
     1b8:	b	180 <grub_jpeg_get_huff_code+0x70>
     1bc:	nop
	...

00000000000001c8 <grub_jpeg_get_number>:
     1c8:	stp	x29, x30, [sp, #-64]!
     1cc:	mov	x29, sp
     1d0:	stp	x21, x22, [sp, #32]
     1d4:	mov	w21, w1
     1d8:	cbnz	w1, 1ec <grub_jpeg_get_number+0x24>
     1dc:	mov	w0, w21
     1e0:	ldp	x21, x22, [sp, #32]
     1e4:	ldp	x29, x30, [sp], #64
     1e8:	ret
     1ec:	str	x23, [sp, #48]
     1f0:	mov	x22, x0
     1f4:	bl	80 <grub_jpeg_get_bit>
     1f8:	mov	w23, w0
     1fc:	cmp	w21, #0x1
     200:	b.le	254 <grub_jpeg_get_number+0x8c>
     204:	stp	x19, x20, [sp, #16]
     208:	mov	w2, w0
     20c:	mov	w20, #0x1                   	// #1
     210:	lsl	w19, w2, #1
     214:	mov	x0, x22
     218:	bl	80 <grub_jpeg_get_bit>
     21c:	cmp	w0, #0x0
     220:	cinc	w2, w19, ne  // ne = any
     224:	add	w20, w20, #0x1
     228:	cmp	w21, w20
     22c:	b.ne	210 <grub_jpeg_get_number+0x48>  // b.any
     230:	ldp	x19, x20, [sp, #16]
     234:	mov	w1, #0x1                   	// #1
     238:	lsl	w21, w1, w21
     23c:	sub	w21, w1, w21
     240:	add	w21, w21, w2
     244:	cmp	w23, #0x0
     248:	csel	w21, w21, w2, eq  // eq = none
     24c:	ldr	x23, [sp, #48]
     250:	b	1dc <grub_jpeg_get_number+0x14>
     254:	mov	w2, w0
     258:	b	234 <grub_jpeg_get_number+0x6c>

000000000000025c <grub_jpeg_get_word>:
     25c:	stp	x29, x30, [sp, #-32]!
     260:	mov	x29, sp
     264:	strh	wzr, [sp, #30]
     268:	mov	x2, #0x2                   	// #2
     26c:	add	x1, sp, #0x1e
     270:	ldr	x0, [x0]
     274:	bl	0 <grub_file_read>
     278:	ldrh	w0, [sp, #30]
     27c:	lsr	w1, w0, #8
     280:	orr	w0, w1, w0, lsl #8
     284:	ldp	x29, x30, [sp], #32
     288:	ret

000000000000028c <grub_jpeg_decode_du>:
     28c:	stp	x29, x30, [sp, #-96]!
     290:	mov	x29, sp
     294:	stp	x19, x20, [sp, #16]
     298:	stp	x21, x22, [sp, #32]
     29c:	stp	x23, x24, [sp, #48]
     2a0:	stp	x25, x26, [sp, #64]
     2a4:	str	x27, [sp, #80]
     2a8:	mov	x21, x0
     2ac:	mov	w20, w1
     2b0:	mov	x19, x2
     2b4:	mov	x2, #0x100                 	// #256
     2b8:	mov	w1, #0x0                   	// #0
     2bc:	mov	x0, x19
     2c0:	bl	0 <grub_memset>
     2c4:	sxtw	x24, w20
     2c8:	sbfiz	x0, x20, #1, #32
     2cc:	add	x1, x0, x24
     2d0:	add	x1, x21, x1, lsl #2
     2d4:	ldr	w22, [x1, #704]
     2d8:	add	x1, x0, x24
     2dc:	add	x1, x21, x1, lsl #2
     2e0:	ldr	w23, [x1, #712]
     2e4:	ldr	w1, [x1, #708]
     2e8:	mov	x0, x21
     2ec:	bl	110 <grub_jpeg_get_huff_code>
     2f0:	mov	w1, w0
     2f4:	mov	x0, x21
     2f8:	bl	1c8 <grub_jpeg_get_number>
     2fc:	add	x24, x21, x24, lsl #2
     300:	ldr	w1, [x24, #2292]
     304:	add	w0, w0, w1
     308:	str	w0, [x24, #2292]
     30c:	sxtw	x1, w22
     310:	add	x1, x21, x1, lsl #6
     314:	ldrb	w1, [x1, #576]
     318:	mul	w0, w1, w0
     31c:	str	w0, [x19]
     320:	mov	w25, #0x1                   	// #1
     324:	adrp	x24, 0 <grub_jpeg_get_byte>
     328:	sbfiz	x22, x22, #6, #32
     32c:	add	x22, x21, x22
     330:	mov	w1, w23
     334:	mov	x0, x21
     338:	bl	110 <grub_jpeg_get_huff_code>
     33c:	mov	w20, w0
     340:	cbz	w0, 378 <grub_jpeg_decode_du+0xec>
     344:	and	w1, w0, #0xf
     348:	mov	x0, x21
     34c:	bl	1c8 <grub_jpeg_get_number>
     350:	add	w20, w25, w20, asr #4
     354:	ldr	x1, [x24]
     358:	ldrb	w2, [x1, w20, uxtw]
     35c:	add	x1, x22, w20, uxtw
     360:	ldrb	w1, [x1, #576]
     364:	mul	w1, w1, w0
     368:	str	w1, [x19, x2, lsl #2]
     36c:	add	w25, w20, #0x1
     370:	cmp	w25, #0x3f
     374:	b.ls	330 <grub_jpeg_decode_du+0xa4>  // b.plast
     378:	add	x7, x19, #0x20
     37c:	mov	x0, x19
     380:	mov	w18, #0x8b                  	// #139
     384:	mov	w17, #0xfffffe27            	// #-473
     388:	mov	w16, #0xc4                  	// #196
     38c:	mov	w15, #0x12d                 	// #301
     390:	mov	w14, #0xe6                  	// #230
     394:	mov	w13, #0x290                 	// #656
     398:	mov	w12, #0x1f6                 	// #502
     39c:	mov	w11, #0x64                  	// #100
     3a0:	mov	w10, #0x4c                  	// #76
     3a4:	mov	w9, #0x20e                 	// #526
     3a8:	mov	w8, #0x313                 	// #787
     3ac:	b	494 <grub_jpeg_decode_du+0x208>
     3b0:	ldr	w2, [x0]
     3b4:	add	w4, w21, w3
     3b8:	mul	w4, w4, w18
     3bc:	add	w20, w22, w2
     3c0:	lsl	w20, w20, #8
     3c4:	sub	w2, w2, w22
     3c8:	lsl	w2, w2, #8
     3cc:	madd	w3, w3, w17, w4
     3d0:	madd	w21, w21, w16, w4
     3d4:	add	w22, w20, w21
     3d8:	sub	w20, w20, w21
     3dc:	add	w21, w2, w3
     3e0:	sub	w2, w2, w3
     3e4:	add	w24, w1, w26
     3e8:	add	w3, w5, w6
     3ec:	add	w30, w5, w26
     3f0:	add	w27, w1, w6
     3f4:	add	w23, w30, w27
     3f8:	mul	w4, w23, w15
     3fc:	mul	w24, w24, w14
     400:	mul	w25, w3, w13
     404:	mul	w30, w30, w12
     408:	sub	w30, w30, w4
     40c:	mul	w23, w27, w11
     410:	sub	w23, w23, w4
     414:	mul	w4, w26, w10
     418:	sub	w4, w4, w24
     41c:	sub	w4, w4, w30
     420:	mul	w6, w6, w9
     424:	sub	w6, w6, w25
     428:	sub	w6, w6, w23
     42c:	mul	w3, w5, w8
     430:	sub	w3, w3, w25
     434:	sub	w3, w3, w30
     438:	add	w1, w1, w1, lsl #1
     43c:	lsl	w1, w1, #7
     440:	sub	w1, w1, w24
     444:	sub	w1, w1, w23
     448:	add	w5, w22, w1
     44c:	str	w5, [x0]
     450:	sub	w1, w22, w1
     454:	str	w1, [x0, #224]
     458:	add	w1, w21, w3
     45c:	str	w1, [x0, #32]
     460:	sub	w3, w21, w3
     464:	str	w3, [x0, #192]
     468:	add	w1, w2, w6
     46c:	str	w1, [x0, #64]
     470:	sub	w2, w2, w6
     474:	str	w2, [x0, #160]
     478:	add	w1, w20, w4
     47c:	str	w1, [x0, #96]
     480:	sub	w4, w20, w4
     484:	str	w4, [x0, #128]
     488:	add	x0, x0, #0x4
     48c:	cmp	x0, x7
     490:	b.eq	4f8 <grub_jpeg_decode_du+0x26c>  // b.none
     494:	ldr	w1, [x0, #32]
     498:	ldr	w21, [x0, #64]
     49c:	ldr	w5, [x0, #96]
     4a0:	ldr	w22, [x0, #128]
     4a4:	ldr	w6, [x0, #160]
     4a8:	ldr	w3, [x0, #192]
     4ac:	ldr	w26, [x0, #224]
     4b0:	orr	w4, w1, w21
     4b4:	orr	w2, w5, w22
     4b8:	orr	w4, w4, w2
     4bc:	orr	w2, w6, w3
     4c0:	orr	w4, w4, w2
     4c4:	orr	w4, w4, w26
     4c8:	cbnz	w4, 3b0 <grub_jpeg_decode_du+0x124>
     4cc:	ldr	w1, [x0]
     4d0:	lsl	w1, w1, #8
     4d4:	str	w1, [x0]
     4d8:	str	w1, [x0, #224]
     4dc:	str	w1, [x0, #192]
     4e0:	str	w1, [x0, #160]
     4e4:	str	w1, [x0, #128]
     4e8:	str	w1, [x0, #96]
     4ec:	str	w1, [x0, #64]
     4f0:	str	w1, [x0, #32]
     4f4:	b	488 <grub_jpeg_decode_du+0x1fc>
     4f8:	add	x7, x19, #0x100
     4fc:	mov	x0, x19
     500:	mov	w18, #0x8b                  	// #139
     504:	mov	w17, #0xfffffe27            	// #-473
     508:	mov	w16, #0xc4                  	// #196
     50c:	mov	w15, #0x12d                 	// #301
     510:	mov	w14, #0xe6                  	// #230
     514:	mov	w13, #0x290                 	// #656
     518:	mov	w12, #0x1f6                 	// #502
     51c:	mov	w11, #0x64                  	// #100
     520:	mov	w10, #0x4c                  	// #76
     524:	mov	w9, #0x20e                 	// #526
     528:	mov	w8, #0x313                 	// #787
     52c:	b	564 <grub_jpeg_decode_du+0x2d8>
     530:	ldr	w1, [x0]
     534:	asr	w1, w1, #11
     538:	str	w1, [x0]
     53c:	str	w1, [x0, #28]
     540:	str	w1, [x0, #24]
     544:	str	w1, [x0, #20]
     548:	str	w1, [x0, #16]
     54c:	str	w1, [x0, #12]
     550:	str	w1, [x0, #8]
     554:	str	w1, [x0, #4]
     558:	add	x0, x0, #0x20
     55c:	cmp	x0, x7
     560:	b.eq	698 <grub_jpeg_decode_du+0x40c>  // b.none
     564:	ldr	w1, [x0, #4]
     568:	ldr	w22, [x0, #8]
     56c:	ldr	w4, [x0, #12]
     570:	ldr	w21, [x0, #16]
     574:	ldr	w6, [x0, #20]
     578:	ldr	w20, [x0, #24]
     57c:	ldr	w3, [x0, #28]
     580:	orr	w5, w4, w21
     584:	orr	w2, w1, w22
     588:	orr	w5, w5, w2
     58c:	orr	w2, w6, w20
     590:	orr	w5, w5, w2
     594:	orr	w5, w5, w3
     598:	cbz	w5, 530 <grub_jpeg_decode_du+0x2a4>
     59c:	add	w23, w22, w20
     5a0:	mul	w23, w23, w18
     5a4:	ldr	w2, [x0]
     5a8:	add	w5, w21, w2
     5ac:	lsl	w5, w5, #8
     5b0:	sub	w2, w2, w21
     5b4:	lsl	w2, w2, #8
     5b8:	madd	w21, w20, w17, w23
     5bc:	madd	w22, w22, w16, w23
     5c0:	add	w30, w5, w22
     5c4:	sub	w5, w5, w22
     5c8:	add	w20, w2, w21
     5cc:	sub	w2, w2, w21
     5d0:	add	w22, w1, w3
     5d4:	add	w24, w4, w6
     5d8:	add	w23, w4, w3
     5dc:	add	w26, w1, w6
     5e0:	add	w21, w23, w26
     5e4:	mul	w25, w21, w15
     5e8:	mul	w22, w22, w14
     5ec:	mul	w24, w24, w13
     5f0:	mul	w23, w23, w12
     5f4:	sub	w23, w23, w25
     5f8:	mul	w21, w26, w11
     5fc:	sub	w21, w21, w25
     600:	mul	w3, w3, w10
     604:	sub	w3, w3, w22
     608:	sub	w3, w3, w23
     60c:	mul	w6, w6, w9
     610:	sub	w6, w6, w24
     614:	sub	w6, w6, w21
     618:	mul	w4, w4, w8
     61c:	sub	w4, w4, w24
     620:	sub	w4, w4, w23
     624:	add	w1, w1, w1, lsl #1
     628:	lsl	w1, w1, #7
     62c:	sub	w1, w1, w22
     630:	sub	w1, w1, w21
     634:	add	w21, w30, w1
     638:	asr	w21, w21, #19
     63c:	str	w21, [x0]
     640:	sub	w1, w30, w1
     644:	asr	w1, w1, #19
     648:	str	w1, [x0, #28]
     64c:	add	w1, w20, w4
     650:	asr	w1, w1, #19
     654:	str	w1, [x0, #4]
     658:	sub	w4, w20, w4
     65c:	asr	w4, w4, #19
     660:	str	w4, [x0, #24]
     664:	add	w1, w2, w6
     668:	asr	w1, w1, #19
     66c:	str	w1, [x0, #8]
     670:	sub	w2, w2, w6
     674:	asr	w2, w2, #19
     678:	str	w2, [x0, #20]
     67c:	add	w1, w5, w3
     680:	asr	w1, w1, #19
     684:	str	w1, [x0, #12]
     688:	sub	w3, w5, w3
     68c:	asr	w3, w3, #19
     690:	str	w3, [x0, #16]
     694:	b	558 <grub_jpeg_decode_du+0x2cc>
     698:	mov	x0, x19
     69c:	add	x19, x19, #0x100
     6a0:	mov	w4, #0xff                  	// #255
     6a4:	b	6c0 <grub_jpeg_decode_du+0x434>
     6a8:	cmp	w1, #0x100
     6ac:	csel	w1, w1, w4, lt  // lt = tstop
     6b0:	str	w1, [x2]
     6b4:	add	x0, x0, #0x4
     6b8:	cmp	x0, x19
     6bc:	b.eq	6e0 <grub_jpeg_decode_du+0x454>  // b.none
     6c0:	mov	x2, x0
     6c4:	ldr	w3, [x0]
     6c8:	add	w3, w3, #0x80
     6cc:	str	w3, [x0]
     6d0:	mov	w1, #0x0                   	// #0
     6d4:	tbnz	w3, #31, 6a8 <grub_jpeg_decode_du+0x41c>
     6d8:	mov	w1, w3
     6dc:	b	6a8 <grub_jpeg_decode_du+0x41c>
     6e0:	ldp	x19, x20, [sp, #16]
     6e4:	ldp	x21, x22, [sp, #32]
     6e8:	ldp	x23, x24, [sp, #48]
     6ec:	ldp	x25, x26, [sp, #64]
     6f0:	ldr	x27, [sp, #80]
     6f4:	ldp	x29, x30, [sp], #96
     6f8:	ret
     6fc:	nop
	...

0000000000000708 <grub_video_reader_jpeg>:
     708:	stp	x29, x30, [sp, #-160]!
     70c:	mov	x29, sp
     710:	str	x0, [sp, #128]
     714:	mov	x0, x1
     718:	mov	x2, #0x0                   	// #0
     71c:	mov	w1, #0x31                  	// #49
     720:	bl	0 <grub_buffile_open>
     724:	str	x0, [sp, #120]
     728:	cbz	x0, 788 <grub_video_reader_jpeg+0x80>
     72c:	stp	x27, x28, [sp, #80]
     730:	mov	x0, #0x910                 	// #2320
     734:	bl	0 <grub_zalloc>
     738:	mov	x27, x0
     73c:	cbz	x0, 7ec <grub_video_reader_jpeg+0xe4>
     740:	stp	x19, x20, [sp, #16]
     744:	ldr	x0, [sp, #120]
     748:	str	x0, [x27]
     74c:	ldr	x0, [sp, #128]
     750:	str	x0, [x27, #8]
     754:	mov	x0, x27
     758:	bl	28 <grub_jpeg_get_marker>
     75c:	and	w0, w0, #0xff
     760:	cmp	w0, #0xd8
     764:	b.ne	798 <grub_video_reader_jpeg+0x90>  // b.any
     768:	adrp	x0, 0 <grub_jpeg_get_byte>
     76c:	ldr	x0, [x0]
     770:	ldr	w0, [x0]
     774:	cbnz	w0, 7c8 <grub_video_reader_jpeg+0xc0>
     778:	stp	x21, x22, [sp, #32]
     77c:	stp	x23, x24, [sp, #48]
     780:	stp	x25, x26, [sp, #64]
     784:	b	107c <grub_video_reader_jpeg+0x974>
     788:	adrp	x0, 0 <grub_jpeg_get_byte>
     78c:	ldr	x0, [x0]
     790:	ldr	w0, [x0]
     794:	b	814 <grub_video_reader_jpeg+0x10c>
     798:	adrp	x0, 0 <grub_jpeg_get_byte>
     79c:	ldr	x1, [x0]
     7a0:	mov	w0, #0x4                   	// #4
     7a4:	bl	0 <grub_error>
     7a8:	b	7c8 <grub_video_reader_jpeg+0xc0>
     7ac:	ldp	x21, x22, [sp, #32]
     7b0:	ldp	x23, x24, [sp, #48]
     7b4:	ldp	x25, x26, [sp, #64]
     7b8:	b	7c8 <grub_video_reader_jpeg+0xc0>
     7bc:	ldp	x21, x22, [sp, #32]
     7c0:	ldp	x23, x24, [sp, #48]
     7c4:	ldp	x25, x26, [sp, #64]
     7c8:	add	x19, x27, #0x20
     7cc:	add	x20, x27, #0x40
     7d0:	ldr	x0, [x19], #8
     7d4:	bl	0 <grub_free>
     7d8:	cmp	x20, x19
     7dc:	b.ne	7d0 <grub_video_reader_jpeg+0xc8>  // b.any
     7e0:	mov	x0, x27
     7e4:	bl	0 <grub_free>
     7e8:	ldp	x19, x20, [sp, #16]
     7ec:	adrp	x0, 0 <grub_jpeg_get_byte>
     7f0:	ldr	x0, [x0]
     7f4:	ldr	w0, [x0]
     7f8:	cbnz	w0, 119c <grub_video_reader_jpeg+0xa94>
     7fc:	ldr	x0, [sp, #120]
     800:	bl	0 <grub_file_close>
     804:	adrp	x0, 0 <grub_jpeg_get_byte>
     808:	ldr	x0, [x0]
     80c:	ldr	w0, [x0]
     810:	ldp	x27, x28, [sp, #80]
     814:	ldp	x29, x30, [sp], #160
     818:	ret
     81c:	ldp	x21, x22, [sp, #32]
     820:	ldp	x23, x24, [sp, #48]
     824:	ldp	x25, x26, [sp, #64]
     828:	b	7c8 <grub_video_reader_jpeg+0xc0>
     82c:	cmp	w19, #0xc0
     830:	b.ne	1158 <grub_video_reader_jpeg+0xa50>  // b.any
     834:	ldr	x0, [x27]
     838:	ldr	x23, [x0, #24]
     83c:	mov	x0, x27
     840:	bl	25c <grub_jpeg_get_word>
     844:	and	w21, w0, #0xffff
     848:	mov	x0, x27
     84c:	bl	0 <grub_jpeg_get_byte>
     850:	and	w0, w0, #0xff
     854:	cmp	w0, #0x8
     858:	b.eq	b7c <grub_video_reader_jpeg+0x474>  // b.none
     85c:	adrp	x0, 0 <grub_jpeg_get_byte>
     860:	ldr	x1, [x0]
     864:	mov	w0, #0x4                   	// #4
     868:	bl	0 <grub_error>
     86c:	b	106c <grub_video_reader_jpeg+0x964>
     870:	cmp	w19, #0xdb
     874:	b.eq	acc <grub_video_reader_jpeg+0x3c4>  // b.none
     878:	cmp	w19, #0xdd
     87c:	b.ne	8a8 <grub_video_reader_jpeg+0x1a0>  // b.any
     880:	mov	x0, x27
     884:	bl	25c <grub_jpeg_get_word>
     888:	and	w0, w0, #0xffff
     88c:	cmp	w0, #0x4
     890:	b.eq	cfc <grub_video_reader_jpeg+0x5f4>  // b.none
     894:	adrp	x0, 0 <grub_jpeg_get_byte>
     898:	ldr	x1, [x0]
     89c:	mov	w0, #0x4                   	// #4
     8a0:	bl	0 <grub_error>
     8a4:	b	106c <grub_video_reader_jpeg+0x964>
     8a8:	cmp	w19, #0xda
     8ac:	b.ne	1158 <grub_video_reader_jpeg+0xa50>  // b.any
     8b0:	ldr	x0, [x27]
     8b4:	ldr	x24, [x0, #24]
     8b8:	mov	x0, x27
     8bc:	bl	25c <grub_jpeg_get_word>
     8c0:	and	w22, w0, #0xffff
     8c4:	mov	x0, x27
     8c8:	bl	0 <grub_jpeg_get_byte>
     8cc:	and	w21, w0, #0xff
     8d0:	and	w0, w21, #0xfffffffd
     8d4:	and	w0, w0, #0xff
     8d8:	cmp	w0, #0x1
     8dc:	b.ne	d10 <grub_video_reader_jpeg+0x608>  // b.any
     8e0:	str	w21, [x27, #2304]
     8e4:	cbz	w21, 93c <grub_video_reader_jpeg+0x234>
     8e8:	mov	w20, #0x0                   	// #0
     8ec:	mov	x0, x27
     8f0:	bl	0 <grub_jpeg_get_byte>
     8f4:	and	w19, w0, #0xff
     8f8:	sub	w19, w19, #0x1
     8fc:	cmp	w19, #0x2
     900:	b.hi	d24 <grub_video_reader_jpeg+0x61c>  // b.pmore
     904:	mov	x0, x27
     908:	bl	0 <grub_jpeg_get_byte>
     90c:	sxtw	x2, w19
     910:	sbfiz	x19, x19, #1, #32
     914:	add	x1, x19, x2
     918:	add	x1, x27, x1, lsl #2
     91c:	ubfx	x3, x0, #4, #4
     920:	str	w3, [x1, #708]
     924:	and	w0, w0, #0xf
     928:	add	w0, w0, #0x2
     92c:	str	w0, [x1, #712]
     930:	add	w20, w20, #0x1
     934:	cmp	w21, w20
     938:	b.ne	8ec <grub_video_reader_jpeg+0x1e4>  // b.any
     93c:	mov	x0, x27
     940:	bl	0 <grub_jpeg_get_byte>
     944:	mov	x0, x27
     948:	bl	25c <grub_jpeg_get_word>
     94c:	ldr	x0, [x27]
     950:	add	w22, w22, w24
     954:	ldr	x0, [x0, #24]
     958:	cmp	x0, x22
     95c:	b.eq	d3c <grub_video_reader_jpeg+0x634>  // b.none
     960:	adrp	x0, 0 <grub_jpeg_get_byte>
     964:	ldr	x1, [x0]
     968:	mov	w0, #0x4                   	// #4
     96c:	bl	0 <grub_error>
     970:	b	d34 <grub_video_reader_jpeg+0x62c>
     974:	ldr	x0, [x27]
     978:	ldr	x20, [x0, #24]
     97c:	mov	x0, x27
     980:	bl	25c <grub_jpeg_get_word>
     984:	ldr	x1, [x27]
     988:	ldr	x1, [x1, #24]
     98c:	add	w20, w20, w0, uxth
     990:	add	x0, x1, #0x11
     994:	cmp	x20, x0
     998:	b.cc	ab0 <grub_video_reader_jpeg+0x3a8>  // b.lo, b.ul, b.last
     99c:	mov	x22, #0x10                  	// #16
     9a0:	add	x21, sp, #0xa0
     9a4:	adrp	x23, 0 <grub_jpeg_get_byte>
     9a8:	mov	w24, #0x0                   	// #0
     9ac:	b	9d8 <grub_video_reader_jpeg+0x2d0>
     9b0:	adrp	x0, 0 <grub_jpeg_get_byte>
     9b4:	ldr	x1, [x0]
     9b8:	mov	w0, #0x4                   	// #4
     9bc:	bl	0 <grub_error>
     9c0:	b	106c <grub_video_reader_jpeg+0x964>
     9c4:	ldr	x0, [x27]
     9c8:	ldr	x1, [x0, #24]
     9cc:	add	x0, x1, #0x11
     9d0:	cmp	x0, x20
     9d4:	b.hi	ab0 <grub_video_reader_jpeg+0x3a8>  // b.pmore
     9d8:	mov	x0, x27
     9dc:	bl	0 <grub_jpeg_get_byte>
     9e0:	ubfx	x19, x0, #4, #1
     9e4:	and	w26, w0, #0xf
     9e8:	cmp	w26, #0x1
     9ec:	b.gt	9b0 <grub_video_reader_jpeg+0x2a8>
     9f0:	mov	x2, x22
     9f4:	add	x1, sp, #0x90
     9f8:	ldr	x0, [x27]
     9fc:	bl	0 <grub_file_read>
     a00:	cmp	x0, #0x10
     a04:	b.ne	106c <grub_video_reader_jpeg+0x964>  // b.any
     a08:	add	x1, sp, #0x90
     a0c:	mov	w25, #0x0                   	// #0
     a10:	ldrb	w0, [x1], #1
     a14:	add	w25, w25, w0
     a18:	cmp	x21, x1
     a1c:	b.ne	a10 <grub_video_reader_jpeg+0x308>  // b.any
     a20:	add	w19, w26, w19, lsl #1
     a24:	sxtw	x26, w25
     a28:	mov	x0, x26
     a2c:	bl	0 <grub_malloc>
     a30:	mov	x1, x0
     a34:	add	x0, x27, w19, sxtw #3
     a38:	str	x1, [x0, #32]
     a3c:	ldr	x0, [x23]
     a40:	ldr	w0, [x0]
     a44:	cbnz	w0, 106c <grub_video_reader_jpeg+0x964>
     a48:	mov	x2, x26
     a4c:	ldr	x0, [x27]
     a50:	bl	0 <grub_file_read>
     a54:	cmp	x0, w25, sxtw
     a58:	b.ne	106c <grub_video_reader_jpeg+0x964>  // b.any
     a5c:	sbfiz	x19, x19, #6, #32
     a60:	add	x19, x27, x19
     a64:	add	x6, x19, #0x13c
     a68:	add	x19, x19, #0x3c
     a6c:	mov	x0, #0x1                   	// #1
     a70:	mov	w3, #0x0                   	// #0
     a74:	mov	w2, w24
     a78:	add	x1, sp, #0x90
     a7c:	add	x1, x0, x1
     a80:	ldurb	w5, [x1, #-1]
     a84:	add	w4, w5, w2
     a88:	mov	w1, w3
     a8c:	add	w3, w3, w5
     a90:	str	w4, [x6, x0, lsl #2]
     a94:	sub	w1, w1, w2
     a98:	str	w1, [x19, x0, lsl #2]
     a9c:	lsl	w2, w4, #1
     aa0:	add	x0, x0, #0x1
     aa4:	cmp	x0, #0x11
     aa8:	b.ne	a78 <grub_video_reader_jpeg+0x370>  // b.any
     aac:	b	9c4 <grub_video_reader_jpeg+0x2bc>
     ab0:	cmp	x20, x1
     ab4:	b.eq	106c <grub_video_reader_jpeg+0x964>  // b.none
     ab8:	adrp	x0, 0 <grub_jpeg_get_byte>
     abc:	ldr	x1, [x0]
     ac0:	mov	w0, #0x4                   	// #4
     ac4:	bl	0 <grub_error>
     ac8:	b	106c <grub_video_reader_jpeg+0x964>
     acc:	ldr	x0, [x27]
     ad0:	ldr	x19, [x0, #24]
     ad4:	mov	x0, x27
     ad8:	bl	25c <grub_jpeg_get_word>
     adc:	add	w19, w19, w0, uxth
     ae0:	mov	x20, #0x40                  	// #64
     ae4:	ldr	x0, [x27]
     ae8:	ldr	x1, [x0, #24]
     aec:	add	x0, x1, #0x41
     af0:	cmp	x0, x19
     af4:	b.hi	b60 <grub_video_reader_jpeg+0x458>  // b.pmore
     af8:	mov	x0, x27
     afc:	bl	0 <grub_jpeg_get_byte>
     b00:	and	w1, w0, #0xff
     b04:	cmp	w1, #0xf
     b08:	b.gt	b38 <grub_video_reader_jpeg+0x430>
     b0c:	cmp	w1, #0x1
     b10:	b.gt	b4c <grub_video_reader_jpeg+0x444>
     b14:	ubfiz	x0, x0, #6, #8
     b18:	add	x1, x0, #0x240
     b1c:	mov	x2, x20
     b20:	add	x1, x27, x1
     b24:	ldr	x0, [x27]
     b28:	bl	0 <grub_file_read>
     b2c:	cmp	x0, #0x40
     b30:	b.eq	ae4 <grub_video_reader_jpeg+0x3dc>  // b.none
     b34:	b	106c <grub_video_reader_jpeg+0x964>
     b38:	adrp	x0, 0 <grub_jpeg_get_byte>
     b3c:	ldr	x1, [x0]
     b40:	mov	w0, #0x4                   	// #4
     b44:	bl	0 <grub_error>
     b48:	b	106c <grub_video_reader_jpeg+0x964>
     b4c:	adrp	x0, 0 <grub_jpeg_get_byte>
     b50:	ldr	x1, [x0]
     b54:	mov	w0, #0x4                   	// #4
     b58:	bl	0 <grub_error>
     b5c:	b	106c <grub_video_reader_jpeg+0x964>
     b60:	cmp	x1, x19
     b64:	b.eq	106c <grub_video_reader_jpeg+0x964>  // b.none
     b68:	adrp	x0, 0 <grub_jpeg_get_byte>
     b6c:	ldr	x1, [x0]
     b70:	mov	w0, #0x4                   	// #4
     b74:	bl	0 <grub_error>
     b78:	b	106c <grub_video_reader_jpeg+0x964>
     b7c:	mov	x0, x27
     b80:	bl	25c <grub_jpeg_get_word>
     b84:	and	w0, w0, #0xffff
     b88:	str	w0, [x27, #28]
     b8c:	mov	x0, x27
     b90:	bl	25c <grub_jpeg_get_word>
     b94:	and	w0, w0, #0xffff
     b98:	str	w0, [x27, #24]
     b9c:	ldr	w1, [x27, #28]
     ba0:	cmp	w1, #0x0
     ba4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     ba8:	b.ne	bc0 <grub_video_reader_jpeg+0x4b8>  // b.any
     bac:	adrp	x0, 0 <grub_jpeg_get_byte>
     bb0:	ldr	x1, [x0]
     bb4:	mov	w0, #0x4                   	// #4
     bb8:	bl	0 <grub_error>
     bbc:	b	106c <grub_video_reader_jpeg+0x964>
     bc0:	mov	x0, x27
     bc4:	bl	0 <grub_jpeg_get_byte>
     bc8:	and	w22, w0, #0xff
     bcc:	and	w0, w22, #0xfffffffd
     bd0:	and	w0, w0, #0xff
     bd4:	cmp	w0, #0x1
     bd8:	b.ne	bec <grub_video_reader_jpeg+0x4e4>  // b.any
     bdc:	str	w22, [x27, #2304]
     be0:	cbz	w22, cd4 <grub_video_reader_jpeg+0x5cc>
     be4:	mov	w20, #0x0                   	// #0
     be8:	b	c58 <grub_video_reader_jpeg+0x550>
     bec:	adrp	x0, 0 <grub_jpeg_get_byte>
     bf0:	ldr	x1, [x0]
     bf4:	mov	w0, #0x4                   	// #4
     bf8:	bl	0 <grub_error>
     bfc:	b	106c <grub_video_reader_jpeg+0x964>
     c00:	adrp	x0, 0 <grub_jpeg_get_byte>
     c04:	ldr	x1, [x0]
     c08:	mov	w0, #0x4                   	// #4
     c0c:	bl	0 <grub_error>
     c10:	b	106c <grub_video_reader_jpeg+0x964>
     c14:	adrp	x0, 0 <grub_jpeg_get_byte>
     c18:	ldr	x1, [x0]
     c1c:	mov	w0, #0x4                   	// #4
     c20:	bl	0 <grub_error>
     c24:	b	106c <grub_video_reader_jpeg+0x964>
     c28:	cmp	w0, #0x11
     c2c:	b.ne	cc0 <grub_video_reader_jpeg+0x5b8>  // b.any
     c30:	mov	x0, x27
     c34:	bl	0 <grub_jpeg_get_byte>
     c38:	and	w0, w0, #0xff
     c3c:	sbfiz	x1, x19, #1, #32
     c40:	add	x19, x1, w19, sxtw
     c44:	add	x19, x27, x19, lsl #2
     c48:	str	w0, [x19, #704]
     c4c:	add	w20, w20, #0x1
     c50:	cmp	w22, w20
     c54:	b.eq	cd4 <grub_video_reader_jpeg+0x5cc>  // b.none
     c58:	mov	x0, x27
     c5c:	bl	0 <grub_jpeg_get_byte>
     c60:	and	w19, w0, #0xff
     c64:	sub	w19, w19, #0x1
     c68:	cmp	w19, #0x2
     c6c:	b.hi	c00 <grub_video_reader_jpeg+0x4f8>  // b.pmore
     c70:	mov	x0, x27
     c74:	bl	0 <grub_jpeg_get_byte>
     c78:	and	w0, w0, #0xff
     c7c:	cbnz	w19, c28 <grub_video_reader_jpeg+0x520>
     c80:	and	w3, w0, #0xf
     c84:	lsr	w0, w0, #4
     c88:	sub	w2, w0, #0x1
     c8c:	and	w2, w2, #0xff
     c90:	sub	w1, w3, #0x1
     c94:	and	w1, w1, #0xff
     c98:	cmp	w2, #0x1
     c9c:	ccmp	w1, #0x1, #0x2, ls  // ls = plast
     ca0:	b.hi	c14 <grub_video_reader_jpeg+0x50c>  // b.pmore
     ca4:	cmp	w3, #0x2
     ca8:	cset	w1, eq  // eq = none
     cac:	str	w1, [x27, #2276]
     cb0:	cmp	w0, #0x2
     cb4:	cset	w0, eq  // eq = none
     cb8:	str	w0, [x27, #2280]
     cbc:	b	c30 <grub_video_reader_jpeg+0x528>
     cc0:	adrp	x0, 0 <grub_jpeg_get_byte>
     cc4:	ldr	x1, [x0]
     cc8:	mov	w0, #0x4                   	// #4
     ccc:	bl	0 <grub_error>
     cd0:	b	106c <grub_video_reader_jpeg+0x964>
     cd4:	ldr	x0, [x27]
     cd8:	add	w21, w21, w23
     cdc:	ldr	x0, [x0, #24]
     ce0:	cmp	x0, x21
     ce4:	b.eq	106c <grub_video_reader_jpeg+0x964>  // b.none
     ce8:	adrp	x0, 0 <grub_jpeg_get_byte>
     cec:	ldr	x1, [x0]
     cf0:	mov	w0, #0x4                   	// #4
     cf4:	bl	0 <grub_error>
     cf8:	b	106c <grub_video_reader_jpeg+0x964>
     cfc:	mov	x0, x27
     d00:	bl	25c <grub_jpeg_get_word>
     d04:	and	w0, w0, #0xffff
     d08:	str	w0, [x27, #2284]
     d0c:	b	106c <grub_video_reader_jpeg+0x964>
     d10:	adrp	x0, 0 <grub_jpeg_get_byte>
     d14:	ldr	x1, [x0]
     d18:	mov	w0, #0x4                   	// #4
     d1c:	bl	0 <grub_error>
     d20:	b	d34 <grub_video_reader_jpeg+0x62c>
     d24:	adrp	x0, 0 <grub_jpeg_get_byte>
     d28:	ldr	x1, [x0]
     d2c:	mov	w0, #0x4                   	// #4
     d30:	bl	0 <grub_error>
     d34:	cbnz	w0, 106c <grub_video_reader_jpeg+0x964>
     d38:	b	10e4 <grub_video_reader_jpeg+0x9dc>
     d3c:	mov	w3, #0x4                   	// #4
     d40:	ldr	w2, [x27, #28]
     d44:	ldr	w1, [x27, #24]
     d48:	ldr	x0, [x27, #8]
     d4c:	bl	0 <grub_video_bitmap_create>
     d50:	cbnz	w0, d68 <grub_video_reader_jpeg+0x660>
     d54:	ldr	x0, [x27, #8]
     d58:	ldr	x0, [x0]
     d5c:	ldr	x0, [x0, #80]
     d60:	str	x0, [x27, #16]
     d64:	b	10e4 <grub_video_reader_jpeg+0x9dc>
     d68:	adrp	x0, 0 <grub_jpeg_get_byte>
     d6c:	ldr	x0, [x0]
     d70:	ldr	w0, [x0]
     d74:	b	d34 <grub_video_reader_jpeg+0x62c>
     d78:	add	w21, w21, #0x1
     d7c:	ldr	w0, [x27, #2276]
     d80:	lsl	w0, w20, w0
     d84:	cmp	w21, w0
     d88:	b.cs	f60 <grub_video_reader_jpeg+0x858>  // b.hs, b.nlast
     d8c:	ldr	w0, [x27, #2280]
     d90:	lsl	w0, w20, w0
     d94:	lsl	w24, w21, #1
     d98:	ldr	w22, [sp, #96]
     d9c:	cbz	w0, d78 <grub_video_reader_jpeg+0x670>
     da0:	add	w2, w24, w22
     da4:	add	x2, x27, x2, lsl #8
     da8:	add	x2, x2, #0x2e4
     dac:	mov	w1, #0x0                   	// #0
     db0:	mov	x0, x27
     db4:	bl	28c <grub_jpeg_decode_du>
     db8:	add	w22, w22, #0x1
     dbc:	ldr	w0, [x27, #2280]
     dc0:	lsl	w0, w20, w0
     dc4:	cmp	w22, w0
     dc8:	b.cc	da0 <grub_video_reader_jpeg+0x698>  // b.lo, b.ul, b.last
     dcc:	b	d78 <grub_video_reader_jpeg+0x670>
     dd0:	add	x2, x27, #0x7e4
     dd4:	mov	w1, w20
     dd8:	mov	x0, x27
     ddc:	bl	28c <grub_jpeg_decode_du>
     de0:	add	x2, x27, #0x6e4
     de4:	mov	w1, #0x2                   	// #2
     de8:	mov	x0, x27
     dec:	bl	28c <grub_jpeg_decode_du>
     df0:	b	f6c <grub_video_reader_jpeg+0x864>
     df4:	ldr	w8, [x27, #28]
     df8:	ldr	w1, [sp, #100]
     dfc:	msub	w8, w1, w0, w8
     e00:	b	f90 <grub_video_reader_jpeg+0x888>
     e04:	ldr	w4, [x27, #24]
     e08:	sub	w4, w4, w23
     e0c:	b	fa8 <grub_video_reader_jpeg+0x8a0>
     e10:	ldr	w1, [x27, #2276]
     e14:	lsr	w1, w5, w1
     e18:	ldr	w0, [x27, #2280]
     e1c:	lsr	w0, w3, w0
     e20:	add	w1, w0, w1, lsl #3
     e24:	add	x1, x27, x1, lsl #2
     e28:	ldr	w0, [x1, #1764]
     e2c:	sub	w0, w0, #0x80
     e30:	ldr	w1, [x1, #2020]
     e34:	sub	w1, w1, #0x80
     e38:	mov	w17, #0x167                 	// #359
     e3c:	mul	w17, w0, w17
     e40:	add	w17, w16, w17, asr #8
     e44:	cmp	w17, #0xff
     e48:	csel	w17, w17, w10, le
     e4c:	cmp	w17, #0x0
     e50:	csel	w17, w17, wzr, ge  // ge = tcont
     e54:	strb	w17, [x2]
     e58:	mul	w0, w0, w14
     e5c:	madd	w0, w1, w15, w0
     e60:	sub	w0, w16, w0, asr #8
     e64:	cmp	w0, #0xff
     e68:	csel	w0, w0, w10, le
     e6c:	cmp	w0, #0x0
     e70:	csel	w0, w0, wzr, ge  // ge = tcont
     e74:	strb	w0, [x2, #1]
     e78:	mul	w0, w1, w13
     e7c:	add	w0, w16, w0, asr #8
     e80:	cmp	w0, #0xff
     e84:	csel	w0, w0, w10, le
     e88:	cmp	w0, #0x0
     e8c:	csel	w0, w0, wzr, ge  // ge = tcont
     e90:	strb	w0, [x2, #2]
     e94:	add	w3, w3, #0x1
     e98:	add	x2, x2, #0x3
     e9c:	cmp	w3, w4
     ea0:	b.eq	ee4 <grub_video_reader_jpeg+0x7dc>  // b.none
     ea4:	and	w0, w3, #0x7
     ea8:	add	w0, w0, w12
     eac:	mov	w1, w0
     eb0:	add	w0, w7, w3, lsr #3
     eb4:	ubfiz	x0, x0, #6, #31
     eb8:	add	x0, x0, x1
     ebc:	add	x0, x27, x0, lsl #2
     ec0:	ldr	w16, [x0, #740]
     ec4:	ldr	w0, [x27, #2304]
     ec8:	cmp	w0, #0x2
     ecc:	b.gt	e10 <grub_video_reader_jpeg+0x708>
     ed0:	and	w0, w16, #0xff
     ed4:	strb	w0, [x2]
     ed8:	strb	w0, [x2, #1]
     edc:	strb	w0, [x2, #2]
     ee0:	b	e94 <grub_video_reader_jpeg+0x78c>
     ee4:	add	x9, x9, x6
     ee8:	add	w5, w5, #0x1
     eec:	ldr	w0, [x27, #24]
     ef0:	sub	w0, w0, w4
     ef4:	add	w0, w0, w0, lsl #1
     ef8:	add	x9, x9, x0
     efc:	cmp	w5, w8
     f00:	b.eq	f20 <grub_video_reader_jpeg+0x818>  // b.none
     f04:	cbz	w4, ee8 <grub_video_reader_jpeg+0x7e0>
     f08:	lsr	w7, w5, #3
     f0c:	lsl	w7, w7, #1
     f10:	ubfiz	w12, w5, #3, #3
     f14:	mov	x2, x9
     f18:	mov	w3, w11
     f1c:	b	ea4 <grub_video_reader_jpeg+0x79c>
     f20:	sub	w19, w19, #0x1
     f24:	ldr	x0, [x27, #16]
     f28:	ldr	x1, [sp, #104]
     f2c:	add	x0, x0, x1
     f30:	str	x0, [x27, #16]
     f34:	cmp	w19, w25
     f38:	b.eq	fd4 <grub_video_reader_jpeg+0x8cc>  // b.none
     f3c:	add	w23, w23, w26
     f40:	ldr	w0, [x27, #2284]
     f44:	cmp	w0, #0x0
     f48:	ccmp	w19, #0x0, #0x0, ne  // ne = any
     f4c:	b.eq	104c <grub_video_reader_jpeg+0x944>  // b.none
     f50:	ldr	w0, [x27, #2276]
     f54:	lsl	w0, w20, w0
     f58:	ldr	w21, [sp, #96]
     f5c:	cbnz	w0, d8c <grub_video_reader_jpeg+0x684>
     f60:	ldr	w0, [x27, #2304]
     f64:	cmp	w0, #0x2
     f68:	b.gt	dd0 <grub_video_reader_jpeg+0x6c8>
     f6c:	adrp	x0, 0 <grub_jpeg_get_byte>
     f70:	ldr	x0, [x0]
     f74:	ldr	w11, [x0]
     f78:	cbnz	w11, 105c <grub_video_reader_jpeg+0x954>
     f7c:	ldr	w0, [x27, #2288]
     f80:	ldr	w8, [sp, #100]
     f84:	ldr	w1, [sp, #116]
     f88:	cmp	w0, w1
     f8c:	b.eq	df4 <grub_video_reader_jpeg+0x6ec>  // b.none
     f90:	ldr	w0, [sp, #112]
     f94:	sub	w1, w0, w19
     f98:	sub	w0, w28, #0x1
     f9c:	mov	w4, w26
     fa0:	cmp	w1, w0
     fa4:	b.eq	e04 <grub_video_reader_jpeg+0x6fc>  // b.none
     fa8:	ldr	x9, [x27, #16]
     fac:	cbz	w8, f20 <grub_video_reader_jpeg+0x818>
     fb0:	sub	w6, w4, #0x1
     fb4:	add	x6, x6, #0x1
     fb8:	add	x6, x6, x6, lsl #1
     fbc:	mov	w5, w11
     fc0:	mov	w10, #0xff                  	// #255
     fc4:	mov	w15, #0x58                  	// #88
     fc8:	mov	w14, #0xb7                  	// #183
     fcc:	mov	w13, #0x1c6                 	// #454
     fd0:	b	f04 <grub_video_reader_jpeg+0x7fc>
     fd4:	mov	w19, w25
     fd8:	ldr	w1, [x27, #2288]
     fdc:	add	w1, w1, #0x1
     fe0:	str	w1, [x27, #2288]
     fe4:	ldr	w0, [x27, #24]
     fe8:	ldr	w2, [sp, #100]
     fec:	mul	w0, w2, w0
     ff0:	ldr	w2, [sp, #140]
     ff4:	sub	w0, w0, w2
     ff8:	add	w0, w0, w0, lsl #1
     ffc:	ldr	x2, [x27, #16]
    1000:	add	x0, x2, x0
    1004:	str	x0, [x27, #16]
    1008:	ldr	w0, [sp, #136]
    100c:	cmp	w0, w1
    1010:	b.ls	105c <grub_video_reader_jpeg+0x954>  // b.plast
    1014:	ldr	w0, [x27, #2284]
    1018:	cmp	w0, #0x0
    101c:	ccmp	w19, #0x0, #0x0, ne  // ne = any
    1020:	b.eq	105c <grub_video_reader_jpeg+0x954>  // b.none
    1024:	cbz	w28, fd8 <grub_video_reader_jpeg+0x8d0>
    1028:	ldr	w0, [x27, #2284]
    102c:	cmp	w0, #0x0
    1030:	ccmp	w19, #0x0, #0x0, ne  // ne = any
    1034:	b.eq	1054 <grub_video_reader_jpeg+0x94c>  // b.none
    1038:	str	w19, [sp, #112]
    103c:	sub	w25, w19, w28
    1040:	ldr	w23, [sp, #96]
    1044:	mov	w20, #0x1                   	// #1
    1048:	b	f50 <grub_video_reader_jpeg+0x848>
    104c:	mov	w19, #0x0                   	// #0
    1050:	b	fd8 <grub_video_reader_jpeg+0x8d0>
    1054:	mov	w19, #0x0                   	// #0
    1058:	b	fd8 <grub_video_reader_jpeg+0x8d0>
    105c:	str	wzr, [x27, #2308]
    1060:	str	wzr, [x27, #2292]
    1064:	str	wzr, [x27, #2296]
    1068:	str	wzr, [x27, #2300]
    106c:	adrp	x0, 0 <grub_jpeg_get_byte>
    1070:	ldr	x0, [x0]
    1074:	ldr	w0, [x0]
    1078:	cbnz	w0, 118c <grub_video_reader_jpeg+0xa84>
    107c:	mov	x0, x27
    1080:	bl	28 <grub_jpeg_get_marker>
    1084:	and	w19, w0, #0xff
    1088:	adrp	x0, 0 <grub_jpeg_get_byte>
    108c:	ldr	x0, [x0]
    1090:	ldr	w23, [x0]
    1094:	cbnz	w23, 7ac <grub_video_reader_jpeg+0xa4>
    1098:	mov	w4, w19
    109c:	adrp	x0, 0 <grub_jpeg_get_byte>
    10a0:	ldr	x3, [x0]
    10a4:	adrp	x0, 0 <grub_jpeg_get_byte>
    10a8:	ldr	x2, [x0]
    10ac:	mov	w1, #0x2d0                 	// #720
    10b0:	adrp	x0, 0 <grub_jpeg_get_byte>
    10b4:	ldr	x0, [x0]
    10b8:	bl	0 <grub_real_dprintf>
    10bc:	cmp	w19, #0xd9
    10c0:	b.eq	7bc <grub_video_reader_jpeg+0xb4>  // b.none
    10c4:	b.hi	870 <grub_video_reader_jpeg+0x168>  // b.pmore
    10c8:	cmp	w19, #0xc4
    10cc:	b.eq	974 <grub_video_reader_jpeg+0x26c>  // b.none
    10d0:	b.ls	82c <grub_video_reader_jpeg+0x124>  // b.plast
    10d4:	add	w19, w19, #0x30
    10d8:	and	w19, w19, #0xff
    10dc:	cmp	w19, #0x7
    10e0:	b.hi	1158 <grub_video_reader_jpeg+0xa50>  // b.pmore
    10e4:	ldr	w19, [x27, #2284]
    10e8:	ldr	w2, [x27, #2276]
    10ec:	mov	w0, #0x8                   	// #8
    10f0:	lsl	w3, w0, w2
    10f4:	str	w3, [sp, #100]
    10f8:	ldr	w1, [x27, #2280]
    10fc:	lsl	w26, w0, w1
    1100:	ldr	w0, [x27, #28]
    1104:	sub	w0, w0, #0x1
    1108:	add	w0, w0, w3
    110c:	add	w2, w2, #0x3
    1110:	lsr	w2, w0, w2
    1114:	str	w2, [sp, #136]
    1118:	ldr	w0, [x27, #24]
    111c:	sub	w0, w0, #0x1
    1120:	add	w0, w0, w26
    1124:	add	w1, w1, #0x3
    1128:	lsr	w28, w0, w1
    112c:	ldr	w0, [x27, #2288]
    1130:	cmp	w0, w2
    1134:	b.cs	105c <grub_video_reader_jpeg+0x954>  // b.hs, b.nlast
    1138:	add	w0, w26, w26, lsl #1
    113c:	str	x0, [sp, #104]
    1140:	mul	w0, w26, w28
    1144:	str	w0, [sp, #140]
    1148:	sub	w0, w2, #0x1
    114c:	str	w0, [sp, #116]
    1150:	str	w23, [sp, #96]
    1154:	b	1024 <grub_video_reader_jpeg+0x91c>
    1158:	mov	x0, x27
    115c:	bl	25c <grub_jpeg_get_word>
    1160:	mov	w1, w0
    1164:	adrp	x0, 0 <grub_jpeg_get_byte>
    1168:	ldr	x0, [x0]
    116c:	ldr	w0, [x0]
    1170:	cbnz	w0, 81c <grub_video_reader_jpeg+0x114>
    1174:	ldr	x0, [x27]
    1178:	ldr	x2, [x0, #24]
    117c:	sub	x2, x2, #0x2
    1180:	add	x1, x2, w1, uxth
    1184:	bl	0 <grub_file_seek>
    1188:	b	106c <grub_video_reader_jpeg+0x964>
    118c:	ldp	x21, x22, [sp, #32]
    1190:	ldp	x23, x24, [sp, #48]
    1194:	ldp	x25, x26, [sp, #64]
    1198:	b	7c8 <grub_video_reader_jpeg+0xc0>
    119c:	stp	x19, x20, [sp, #16]
    11a0:	ldr	x19, [sp, #128]
    11a4:	ldr	x0, [x19]
    11a8:	bl	0 <grub_video_bitmap_destroy>
    11ac:	str	xzr, [x19]
    11b0:	ldp	x19, x20, [sp, #16]
    11b4:	b	7fc <grub_video_reader_jpeg+0xf4>
	...

0000000000001240 <grub_mod_init>:
    1240:	stp	x29, x30, [sp, #-32]!
    1244:	mov	x29, sp
    1248:	str	x19, [sp, #16]
    124c:	adrp	x0, 0 <grub_jpeg_get_byte>
    1250:	ldr	x19, [x0]
    1254:	mov	x0, x19
    1258:	bl	0 <grub_video_bitmap_reader_register>
    125c:	add	x0, x19, #0x18
    1260:	bl	0 <grub_video_bitmap_reader_register>
    1264:	ldr	x19, [sp, #16]
    1268:	ldp	x29, x30, [sp], #32
    126c:	ret
	...

0000000000001278 <grub_mod_fini>:
    1278:	stp	x29, x30, [sp, #-32]!
    127c:	mov	x29, sp
    1280:	str	x19, [sp, #16]
    1284:	adrp	x0, 0 <grub_jpeg_get_byte>
    1288:	ldr	x19, [x0]
    128c:	add	x0, x19, #0x18
    1290:	bl	0 <grub_video_bitmap_reader_unregister>
    1294:	mov	x0, x19
    1298:	bl	0 <grub_video_bitmap_reader_unregister>
    129c:	ldr	x19, [sp, #16]
    12a0:	ldp	x29, x30, [sp], #32
    12a4:	ret
	...
