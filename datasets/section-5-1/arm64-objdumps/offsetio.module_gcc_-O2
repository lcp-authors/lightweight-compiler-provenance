
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//offsetio.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_offset_close>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #80]
  14:	ldr	x0, [x0]
  18:	cbz	x0, 20 <grub_offset_close+0x20>
  1c:	bl	0 <grub_file_close>
  20:	str	xzr, [x19, #8]
  24:	mov	w0, #0x0                   	// #0
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret
  34:	nop

0000000000000038 <grub_offset_read>:
  38:	stp	x29, x30, [sp, #-48]!
  3c:	mov	x29, sp
  40:	stp	x19, x20, [sp, #16]
  44:	mov	x19, x1
  48:	mov	x20, x2
  4c:	ldr	x1, [x0, #24]
  50:	str	x21, [sp, #32]
  54:	ldr	x21, [x0, #80]
  58:	ldp	x0, x2, [x21]
  5c:	add	x1, x2, x1
  60:	bl	0 <grub_file_seek>
  64:	cmn	x0, #0x1
  68:	b.eq	88 <grub_offset_read+0x50>  // b.none
  6c:	mov	x2, x20
  70:	mov	x1, x19
  74:	ldr	x0, [x21]
  78:	ldp	x19, x20, [sp, #16]
  7c:	ldr	x21, [sp, #32]
  80:	ldp	x29, x30, [sp], #48
  84:	b	0 <grub_file_read>
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

0000000000000098 <grub_file_offset_close>:
  98:	ldr	x1, [x0, #80]
  9c:	str	xzr, [x1]
  a0:	b	0 <grub_file_close>
  a4:	nop

00000000000000a8 <grub_file_offset_open>:
  a8:	stp	x29, x30, [sp, #-80]!
  ac:	mov	x29, sp
  b0:	stp	x19, x20, [sp, #16]
  b4:	stp	x21, x22, [sp, #32]
  b8:	mov	w22, w1
  bc:	stp	x23, x24, [sp, #48]
  c0:	mov	x24, x3
  c4:	mov	x23, x0
  c8:	mov	x0, #0x68                  	// #104
  cc:	stp	x25, x26, [sp, #64]
  d0:	mov	x26, x2
  d4:	bl	0 <grub_zalloc>
  d8:	mov	x19, x0
  dc:	mov	x0, #0x10                  	// #16
  e0:	bl	0 <grub_zalloc>
  e4:	cmp	x19, #0x0
  e8:	mov	x21, x0
  ec:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  f0:	b.eq	178 <grub_file_offset_open+0xd0>  // b.none
  f4:	adrp	x1, 0 <grub_offset_close>
  f8:	adrp	x0, 0 <grub_offset_close>
  fc:	mov	x20, #0x2                   	// #2
 100:	mov	x3, #0x0                   	// #0
 104:	ldr	x25, [x1]
 108:	ldr	x0, [x0]
 10c:	ldr	x1, [x23, #8]
 110:	stp	x23, x26, [x21]
 114:	stp	x1, x0, [x19, #8]
 118:	str	x24, [x19, #64]
 11c:	str	x21, [x19, #80]
 120:	ldr	x2, [x25, x20, lsl #3]
 124:	mov	x0, x19
 128:	mov	w1, w22
 12c:	cbz	x2, 13c <grub_file_offset_open+0x94>
 130:	blr	x2
 134:	mov	x3, x19
 138:	mov	x19, x0
 13c:	cmp	x19, #0x0
 140:	cset	w1, ne  // ne = any
 144:	cmp	w20, #0x3
 148:	cset	w0, ls  // ls = plast
 14c:	add	x20, x20, #0x1
 150:	tst	w1, w0
 154:	b.ne	120 <grub_file_offset_open+0x78>  // b.any
 158:	cbz	x19, 190 <grub_file_offset_open+0xe8>
 15c:	mov	x0, x19
 160:	ldp	x19, x20, [sp, #16]
 164:	ldp	x21, x22, [sp, #32]
 168:	ldp	x23, x24, [sp, #48]
 16c:	ldp	x25, x26, [sp, #64]
 170:	ldp	x29, x30, [sp], #80
 174:	ret
 178:	mov	x0, x19
 17c:	bl	0 <grub_free>
 180:	mov	x0, x21
 184:	mov	x19, #0x0                   	// #0
 188:	bl	0 <grub_free>
 18c:	b	15c <grub_file_offset_open+0xb4>
 190:	str	xzr, [x21]
 194:	mov	x0, x3
 198:	bl	0 <grub_file_close>
 19c:	b	15c <grub_file_offset_open+0xb4>
	...
