
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sort_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402838 <.init>:
  402838:	stp	x29, x30, [sp, #-16]!
  40283c:	mov	x29, sp
  402840:	bl	403060 <ferror@plt+0x60>
  402844:	ldp	x29, x30, [sp], #16
  402848:	ret

Disassembly of section .plt:

0000000000402850 <mbrtowc@plt-0x20>:
  402850:	stp	x16, x30, [sp, #-16]!
  402854:	adrp	x16, 432000 <_obstack_memory_used@@Base+0x17b64>
  402858:	ldr	x17, [x16, #4088]
  40285c:	add	x16, x16, #0xff8
  402860:	br	x17
  402864:	nop
  402868:	nop
  40286c:	nop

0000000000402870 <mbrtowc@plt>:
  402870:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16]
  402878:	add	x16, x16, #0x0
  40287c:	br	x17

0000000000402880 <memcpy@plt>:
  402880:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #8]
  402888:	add	x16, x16, #0x8
  40288c:	br	x17

0000000000402890 <memmove@plt>:
  402890:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #16]
  402898:	add	x16, x16, #0x10
  40289c:	br	x17

00000000004028a0 <pthread_sigmask@plt>:
  4028a0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #24]
  4028a8:	add	x16, x16, #0x18
  4028ac:	br	x17

00000000004028b0 <ngettext@plt>:
  4028b0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #32]
  4028b8:	add	x16, x16, #0x20
  4028bc:	br	x17

00000000004028c0 <_exit@plt>:
  4028c0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #40]
  4028c8:	add	x16, x16, #0x28
  4028cc:	br	x17

00000000004028d0 <fwrite_unlocked@plt>:
  4028d0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #48]
  4028d8:	add	x16, x16, #0x30
  4028dc:	br	x17

00000000004028e0 <strtoul@plt>:
  4028e0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #56]
  4028e8:	add	x16, x16, #0x38
  4028ec:	br	x17

00000000004028f0 <strlen@plt>:
  4028f0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #64]
  4028f8:	add	x16, x16, #0x40
  4028fc:	br	x17

0000000000402900 <exit@plt>:
  402900:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #72]
  402908:	add	x16, x16, #0x48
  40290c:	br	x17

0000000000402910 <raise@plt>:
  402910:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #80]
  402918:	add	x16, x16, #0x50
  40291c:	br	x17

0000000000402920 <error@plt>:
  402920:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #88]
  402928:	add	x16, x16, #0x58
  40292c:	br	x17

0000000000402930 <sysinfo@plt>:
  402930:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #96]
  402938:	add	x16, x16, #0x60
  40293c:	br	x17

0000000000402940 <ferror_unlocked@plt>:
  402940:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #104]
  402948:	add	x16, x16, #0x68
  40294c:	br	x17

0000000000402950 <getuid@plt>:
  402950:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #112]
  402958:	add	x16, x16, #0x70
  40295c:	br	x17

0000000000402960 <pipe@plt>:
  402960:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #120]
  402968:	add	x16, x16, #0x78
  40296c:	br	x17

0000000000402970 <__cxa_atexit@plt>:
  402970:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #128]
  402978:	add	x16, x16, #0x80
  40297c:	br	x17

0000000000402980 <iswcntrl@plt>:
  402980:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #136]
  402988:	add	x16, x16, #0x88
  40298c:	br	x17

0000000000402990 <qsort@plt>:
  402990:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #144]
  402998:	add	x16, x16, #0x90
  40299c:	br	x17

00000000004029a0 <setvbuf@plt>:
  4029a0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #152]
  4029a8:	add	x16, x16, #0x98
  4029ac:	br	x17

00000000004029b0 <euidaccess@plt>:
  4029b0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #160]
  4029b8:	add	x16, x16, #0xa0
  4029bc:	br	x17

00000000004029c0 <fork@plt>:
  4029c0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #168]
  4029c8:	add	x16, x16, #0xa8
  4029cc:	br	x17

00000000004029d0 <lseek@plt>:
  4029d0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #176]
  4029d8:	add	x16, x16, #0xb0
  4029dc:	br	x17

00000000004029e0 <__fpending@plt>:
  4029e0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #184]
  4029e8:	add	x16, x16, #0xb8
  4029ec:	br	x17

00000000004029f0 <localeconv@plt>:
  4029f0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #192]
  4029f8:	add	x16, x16, #0xc0
  4029fc:	br	x17

0000000000402a00 <stpcpy@plt>:
  402a00:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #200]
  402a08:	add	x16, x16, #0xc8
  402a0c:	br	x17

0000000000402a10 <fileno@plt>:
  402a10:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #208]
  402a18:	add	x16, x16, #0xd0
  402a1c:	br	x17

0000000000402a20 <putc_unlocked@plt>:
  402a20:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #216]
  402a28:	add	x16, x16, #0xd8
  402a2c:	br	x17

0000000000402a30 <signal@plt>:
  402a30:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #224]
  402a38:	add	x16, x16, #0xe0
  402a3c:	br	x17

0000000000402a40 <fclose@plt>:
  402a40:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #232]
  402a48:	add	x16, x16, #0xe8
  402a4c:	br	x17

0000000000402a50 <getpid@plt>:
  402a50:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #240]
  402a58:	add	x16, x16, #0xf0
  402a5c:	br	x17

0000000000402a60 <nl_langinfo@plt>:
  402a60:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #248]
  402a68:	add	x16, x16, #0xf8
  402a6c:	br	x17

0000000000402a70 <fopen@plt>:
  402a70:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #256]
  402a78:	add	x16, x16, #0x100
  402a7c:	br	x17

0000000000402a80 <malloc@plt>:
  402a80:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #264]
  402a88:	add	x16, x16, #0x108
  402a8c:	br	x17

0000000000402a90 <toupper@plt>:
  402a90:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #272]
  402a98:	add	x16, x16, #0x110
  402a9c:	br	x17

0000000000402aa0 <wcwidth@plt>:
  402aa0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #280]
  402aa8:	add	x16, x16, #0x118
  402aac:	br	x17

0000000000402ab0 <open@plt>:
  402ab0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #288]
  402ab8:	add	x16, x16, #0x120
  402abc:	br	x17

0000000000402ac0 <getppid@plt>:
  402ac0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #296]
  402ac8:	add	x16, x16, #0x128
  402acc:	br	x17

0000000000402ad0 <sigemptyset@plt>:
  402ad0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #304]
  402ad8:	add	x16, x16, #0x130
  402adc:	br	x17

0000000000402ae0 <pthread_cond_signal@plt>:
  402ae0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #312]
  402ae8:	add	x16, x16, #0x138
  402aec:	br	x17

0000000000402af0 <strncmp@plt>:
  402af0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #320]
  402af8:	add	x16, x16, #0x140
  402afc:	br	x17

0000000000402b00 <bindtextdomain@plt>:
  402b00:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #328]
  402b08:	add	x16, x16, #0x148
  402b0c:	br	x17

0000000000402b10 <__libc_start_main@plt>:
  402b10:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #336]
  402b18:	add	x16, x16, #0x150
  402b1c:	br	x17

0000000000402b20 <fgetc@plt>:
  402b20:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #344]
  402b28:	add	x16, x16, #0x158
  402b2c:	br	x17

0000000000402b30 <memset@plt>:
  402b30:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #352]
  402b38:	add	x16, x16, #0x160
  402b3c:	br	x17

0000000000402b40 <fdopen@plt>:
  402b40:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #360]
  402b48:	add	x16, x16, #0x168
  402b4c:	br	x17

0000000000402b50 <gettimeofday@plt>:
  402b50:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #368]
  402b58:	add	x16, x16, #0x170
  402b5c:	br	x17

0000000000402b60 <putchar_unlocked@plt>:
  402b60:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #376]
  402b68:	add	x16, x16, #0x178
  402b6c:	br	x17

0000000000402b70 <calloc@plt>:
  402b70:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #384]
  402b78:	add	x16, x16, #0x180
  402b7c:	br	x17

0000000000402b80 <realloc@plt>:
  402b80:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #392]
  402b88:	add	x16, x16, #0x188
  402b8c:	br	x17

0000000000402b90 <pthread_mutex_init@plt>:
  402b90:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #400]
  402b98:	add	x16, x16, #0x190
  402b9c:	br	x17

0000000000402ba0 <close@plt>:
  402ba0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #408]
  402ba8:	add	x16, x16, #0x198
  402bac:	br	x17

0000000000402bb0 <sigaction@plt>:
  402bb0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #416]
  402bb8:	add	x16, x16, #0x1a0
  402bbc:	br	x17

0000000000402bc0 <strrchr@plt>:
  402bc0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #424]
  402bc8:	add	x16, x16, #0x1a8
  402bcc:	br	x17

0000000000402bd0 <pthread_create@plt>:
  402bd0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #432]
  402bd8:	add	x16, x16, #0x1b0
  402bdc:	br	x17

0000000000402be0 <__gmon_start__@plt>:
  402be0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #440]
  402be8:	add	x16, x16, #0x1b8
  402bec:	br	x17

0000000000402bf0 <write@plt>:
  402bf0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #448]
  402bf8:	add	x16, x16, #0x1c0
  402bfc:	br	x17

0000000000402c00 <strtoumax@plt>:
  402c00:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #456]
  402c08:	add	x16, x16, #0x1c8
  402c0c:	br	x17

0000000000402c10 <pthread_join@plt>:
  402c10:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #464]
  402c18:	add	x16, x16, #0x1d0
  402c1c:	br	x17

0000000000402c20 <abort@plt>:
  402c20:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #472]
  402c28:	add	x16, x16, #0x1d8
  402c2c:	br	x17

0000000000402c30 <mkostemp@plt>:
  402c30:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #480]
  402c38:	add	x16, x16, #0x1e0
  402c3c:	br	x17

0000000000402c40 <sched_getaffinity@plt>:
  402c40:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #488]
  402c48:	add	x16, x16, #0x1e8
  402c4c:	br	x17

0000000000402c50 <posix_fadvise@plt>:
  402c50:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #496]
  402c58:	add	x16, x16, #0x1f0
  402c5c:	br	x17

0000000000402c60 <mbsinit@plt>:
  402c60:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #504]
  402c68:	add	x16, x16, #0x1f8
  402c6c:	br	x17

0000000000402c70 <pipe2@plt>:
  402c70:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #512]
  402c78:	add	x16, x16, #0x200
  402c7c:	br	x17

0000000000402c80 <fread_unlocked@plt>:
  402c80:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #520]
  402c88:	add	x16, x16, #0x208
  402c8c:	br	x17

0000000000402c90 <memcmp@plt>:
  402c90:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #528]
  402c98:	add	x16, x16, #0x210
  402c9c:	br	x17

0000000000402ca0 <textdomain@plt>:
  402ca0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #536]
  402ca8:	add	x16, x16, #0x218
  402cac:	br	x17

0000000000402cb0 <getopt_long@plt>:
  402cb0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #544]
  402cb8:	add	x16, x16, #0x220
  402cbc:	br	x17

0000000000402cc0 <sigismember@plt>:
  402cc0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #552]
  402cc8:	add	x16, x16, #0x228
  402ccc:	br	x17

0000000000402cd0 <strcmp@plt>:
  402cd0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #560]
  402cd8:	add	x16, x16, #0x230
  402cdc:	br	x17

0000000000402ce0 <__ctype_b_loc@plt>:
  402ce0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #568]
  402ce8:	add	x16, x16, #0x238
  402cec:	br	x17

0000000000402cf0 <strtol@plt>:
  402cf0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #576]
  402cf8:	add	x16, x16, #0x240
  402cfc:	br	x17

0000000000402d00 <fseeko@plt>:
  402d00:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #584]
  402d08:	add	x16, x16, #0x248
  402d0c:	br	x17

0000000000402d10 <strtold@plt>:
  402d10:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #592]
  402d18:	add	x16, x16, #0x250
  402d1c:	br	x17

0000000000402d20 <free@plt>:
  402d20:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #600]
  402d28:	add	x16, x16, #0x258
  402d2c:	br	x17

0000000000402d30 <__ctype_get_mb_cur_max@plt>:
  402d30:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #608]
  402d38:	add	x16, x16, #0x260
  402d3c:	br	x17

0000000000402d40 <getgid@plt>:
  402d40:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #616]
  402d48:	add	x16, x16, #0x268
  402d4c:	br	x17

0000000000402d50 <pthread_cond_wait@plt>:
  402d50:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #624]
  402d58:	add	x16, x16, #0x270
  402d5c:	br	x17

0000000000402d60 <nanosleep@plt>:
  402d60:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #632]
  402d68:	add	x16, x16, #0x278
  402d6c:	br	x17

0000000000402d70 <strchr@plt>:
  402d70:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #640]
  402d78:	add	x16, x16, #0x280
  402d7c:	br	x17

0000000000402d80 <feof_unlocked@plt>:
  402d80:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #648]
  402d88:	add	x16, x16, #0x288
  402d8c:	br	x17

0000000000402d90 <fwrite@plt>:
  402d90:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #656]
  402d98:	add	x16, x16, #0x290
  402d9c:	br	x17

0000000000402da0 <fflush_unlocked@plt>:
  402da0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #664]
  402da8:	add	x16, x16, #0x298
  402dac:	br	x17

0000000000402db0 <__sched_cpucount@plt>:
  402db0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #672]
  402db8:	add	x16, x16, #0x2a0
  402dbc:	br	x17

0000000000402dc0 <fcntl@plt>:
  402dc0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #680]
  402dc8:	add	x16, x16, #0x2a8
  402dcc:	br	x17

0000000000402dd0 <strxfrm@plt>:
  402dd0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #688]
  402dd8:	add	x16, x16, #0x2b0
  402ddc:	br	x17

0000000000402de0 <fflush@plt>:
  402de0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #696]
  402de8:	add	x16, x16, #0x2b8
  402dec:	br	x17

0000000000402df0 <pthread_mutex_destroy@plt>:
  402df0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #704]
  402df8:	add	x16, x16, #0x2c0
  402dfc:	br	x17

0000000000402e00 <strcpy@plt>:
  402e00:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #712]
  402e08:	add	x16, x16, #0x2c8
  402e0c:	br	x17

0000000000402e10 <pthread_cond_init@plt>:
  402e10:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #720]
  402e18:	add	x16, x16, #0x2d0
  402e1c:	br	x17

0000000000402e20 <getrlimit@plt>:
  402e20:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #728]
  402e28:	add	x16, x16, #0x2d8
  402e2c:	br	x17

0000000000402e30 <clearerr_unlocked@plt>:
  402e30:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #736]
  402e38:	add	x16, x16, #0x2e0
  402e3c:	br	x17

0000000000402e40 <read@plt>:
  402e40:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402e44:	ldr	x17, [x16, #744]
  402e48:	add	x16, x16, #0x2e8
  402e4c:	br	x17

0000000000402e50 <memchr@plt>:
  402e50:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402e54:	ldr	x17, [x16, #752]
  402e58:	add	x16, x16, #0x2f0
  402e5c:	br	x17

0000000000402e60 <mkstemp@plt>:
  402e60:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402e64:	ldr	x17, [x16, #760]
  402e68:	add	x16, x16, #0x2f8
  402e6c:	br	x17

0000000000402e70 <sysconf@plt>:
  402e70:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402e74:	ldr	x17, [x16, #768]
  402e78:	add	x16, x16, #0x300
  402e7c:	br	x17

0000000000402e80 <fputc_unlocked@plt>:
  402e80:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402e84:	ldr	x17, [x16, #776]
  402e88:	add	x16, x16, #0x308
  402e8c:	br	x17

0000000000402e90 <__fxstat@plt>:
  402e90:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402e94:	ldr	x17, [x16, #784]
  402e98:	add	x16, x16, #0x310
  402e9c:	br	x17

0000000000402ea0 <explicit_bzero@plt>:
  402ea0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ea4:	ldr	x17, [x16, #792]
  402ea8:	add	x16, x16, #0x318
  402eac:	br	x17

0000000000402eb0 <fputs_unlocked@plt>:
  402eb0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402eb4:	ldr	x17, [x16, #800]
  402eb8:	add	x16, x16, #0x320
  402ebc:	br	x17

0000000000402ec0 <strcoll@plt>:
  402ec0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ec4:	ldr	x17, [x16, #808]
  402ec8:	add	x16, x16, #0x328
  402ecc:	br	x17

0000000000402ed0 <__freading@plt>:
  402ed0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ed4:	ldr	x17, [x16, #816]
  402ed8:	add	x16, x16, #0x330
  402edc:	br	x17

0000000000402ee0 <ftruncate@plt>:
  402ee0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ee4:	ldr	x17, [x16, #824]
  402ee8:	add	x16, x16, #0x338
  402eec:	br	x17

0000000000402ef0 <dup2@plt>:
  402ef0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ef4:	ldr	x17, [x16, #832]
  402ef8:	add	x16, x16, #0x340
  402efc:	br	x17

0000000000402f00 <sigaddset@plt>:
  402f00:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402f04:	ldr	x17, [x16, #840]
  402f08:	add	x16, x16, #0x348
  402f0c:	br	x17

0000000000402f10 <pthread_cond_destroy@plt>:
  402f10:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402f14:	ldr	x17, [x16, #848]
  402f18:	add	x16, x16, #0x350
  402f1c:	br	x17

0000000000402f20 <iswprint@plt>:
  402f20:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402f24:	ldr	x17, [x16, #856]
  402f28:	add	x16, x16, #0x358
  402f2c:	br	x17

0000000000402f30 <printf@plt>:
  402f30:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402f34:	ldr	x17, [x16, #864]
  402f38:	add	x16, x16, #0x360
  402f3c:	br	x17

0000000000402f40 <__assert_fail@plt>:
  402f40:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402f44:	ldr	x17, [x16, #872]
  402f48:	add	x16, x16, #0x368
  402f4c:	br	x17

0000000000402f50 <__errno_location@plt>:
  402f50:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402f54:	ldr	x17, [x16, #880]
  402f58:	add	x16, x16, #0x370
  402f5c:	br	x17

0000000000402f60 <execlp@plt>:
  402f60:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402f64:	ldr	x17, [x16, #888]
  402f68:	add	x16, x16, #0x378
  402f6c:	br	x17

0000000000402f70 <getenv@plt>:
  402f70:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402f74:	ldr	x17, [x16, #896]
  402f78:	add	x16, x16, #0x380
  402f7c:	br	x17

0000000000402f80 <__xstat@plt>:
  402f80:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402f84:	ldr	x17, [x16, #904]
  402f88:	add	x16, x16, #0x388
  402f8c:	br	x17

0000000000402f90 <pthread_mutex_lock@plt>:
  402f90:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402f94:	ldr	x17, [x16, #912]
  402f98:	add	x16, x16, #0x390
  402f9c:	br	x17

0000000000402fa0 <pthread_mutex_unlock@plt>:
  402fa0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402fa4:	ldr	x17, [x16, #920]
  402fa8:	add	x16, x16, #0x398
  402fac:	br	x17

0000000000402fb0 <waitpid@plt>:
  402fb0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402fb4:	ldr	x17, [x16, #928]
  402fb8:	add	x16, x16, #0x3a0
  402fbc:	br	x17

0000000000402fc0 <unlink@plt>:
  402fc0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402fc4:	ldr	x17, [x16, #936]
  402fc8:	add	x16, x16, #0x3a8
  402fcc:	br	x17

0000000000402fd0 <gettext@plt>:
  402fd0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402fd4:	ldr	x17, [x16, #944]
  402fd8:	add	x16, x16, #0x3b0
  402fdc:	br	x17

0000000000402fe0 <fprintf@plt>:
  402fe0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402fe4:	ldr	x17, [x16, #952]
  402fe8:	add	x16, x16, #0x3b8
  402fec:	br	x17

0000000000402ff0 <setlocale@plt>:
  402ff0:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  402ff4:	ldr	x17, [x16, #960]
  402ff8:	add	x16, x16, #0x3c0
  402ffc:	br	x17

0000000000403000 <ferror@plt>:
  403000:	adrp	x16, 433000 <mbrtowc@GLIBC_2.17>
  403004:	ldr	x17, [x16, #968]
  403008:	add	x16, x16, #0x3c8
  40300c:	br	x17

Disassembly of section .text:

0000000000403010 <_obstack_begin@@Base-0x17044>:
  403010:	mov	x29, #0x0                   	// #0
  403014:	mov	x30, #0x0                   	// #0
  403018:	mov	x5, x0
  40301c:	ldr	x1, [sp]
  403020:	add	x2, sp, #0x8
  403024:	mov	x6, sp
  403028:	movz	x0, #0x0, lsl #48
  40302c:	movk	x0, #0x0, lsl #32
  403030:	movk	x0, #0x40, lsl #16
  403034:	movk	x0, #0xc0e4
  403038:	movz	x3, #0x0, lsl #48
  40303c:	movk	x3, #0x0, lsl #32
  403040:	movk	x3, #0x41, lsl #16
  403044:	movk	x3, #0xbd18
  403048:	movz	x4, #0x0, lsl #48
  40304c:	movk	x4, #0x0, lsl #32
  403050:	movk	x4, #0x41, lsl #16
  403054:	movk	x4, #0xbd98
  403058:	bl	402b10 <__libc_start_main@plt>
  40305c:	bl	402c20 <abort@plt>
  403060:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x17b64>
  403064:	ldr	x0, [x0, #4064]
  403068:	cbz	x0, 403070 <ferror@plt+0x70>
  40306c:	b	402be0 <__gmon_start__@plt>
  403070:	ret
  403074:	stp	x29, x30, [sp, #-32]!
  403078:	mov	x29, sp
  40307c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403080:	add	x0, x0, #0x550
  403084:	str	x0, [sp, #24]
  403088:	ldr	x0, [sp, #24]
  40308c:	str	x0, [sp, #24]
  403090:	ldr	x1, [sp, #24]
  403094:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403098:	add	x0, x0, #0x550
  40309c:	cmp	x1, x0
  4030a0:	b.eq	4030dc <ferror@plt+0xdc>  // b.none
  4030a4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  4030a8:	add	x0, x0, #0xde8
  4030ac:	ldr	x0, [x0]
  4030b0:	str	x0, [sp, #16]
  4030b4:	ldr	x0, [sp, #16]
  4030b8:	str	x0, [sp, #16]
  4030bc:	ldr	x0, [sp, #16]
  4030c0:	cmp	x0, #0x0
  4030c4:	b.eq	4030e0 <ferror@plt+0xe0>  // b.none
  4030c8:	ldr	x1, [sp, #16]
  4030cc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4030d0:	add	x0, x0, #0x550
  4030d4:	blr	x1
  4030d8:	b	4030e0 <ferror@plt+0xe0>
  4030dc:	nop
  4030e0:	ldp	x29, x30, [sp], #32
  4030e4:	ret
  4030e8:	stp	x29, x30, [sp, #-48]!
  4030ec:	mov	x29, sp
  4030f0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4030f4:	add	x0, x0, #0x550
  4030f8:	str	x0, [sp, #40]
  4030fc:	ldr	x0, [sp, #40]
  403100:	str	x0, [sp, #40]
  403104:	ldr	x1, [sp, #40]
  403108:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40310c:	add	x0, x0, #0x550
  403110:	sub	x0, x1, x0
  403114:	asr	x0, x0, #3
  403118:	lsr	x1, x0, #63
  40311c:	add	x0, x1, x0
  403120:	asr	x0, x0, #1
  403124:	str	x0, [sp, #32]
  403128:	ldr	x0, [sp, #32]
  40312c:	cmp	x0, #0x0
  403130:	b.eq	403170 <ferror@plt+0x170>  // b.none
  403134:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  403138:	add	x0, x0, #0xdf0
  40313c:	ldr	x0, [x0]
  403140:	str	x0, [sp, #24]
  403144:	ldr	x0, [sp, #24]
  403148:	str	x0, [sp, #24]
  40314c:	ldr	x0, [sp, #24]
  403150:	cmp	x0, #0x0
  403154:	b.eq	403174 <ferror@plt+0x174>  // b.none
  403158:	ldr	x2, [sp, #24]
  40315c:	ldr	x1, [sp, #32]
  403160:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403164:	add	x0, x0, #0x550
  403168:	blr	x2
  40316c:	b	403174 <ferror@plt+0x174>
  403170:	nop
  403174:	ldp	x29, x30, [sp], #48
  403178:	ret
  40317c:	stp	x29, x30, [sp, #-16]!
  403180:	mov	x29, sp
  403184:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403188:	add	x0, x0, #0x588
  40318c:	ldrb	w0, [x0]
  403190:	and	x0, x0, #0xff
  403194:	cmp	x0, #0x0
  403198:	b.ne	4031b4 <ferror@plt+0x1b4>  // b.any
  40319c:	bl	403074 <ferror@plt+0x74>
  4031a0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4031a4:	add	x0, x0, #0x588
  4031a8:	mov	w1, #0x1                   	// #1
  4031ac:	strb	w1, [x0]
  4031b0:	b	4031b8 <ferror@plt+0x1b8>
  4031b4:	nop
  4031b8:	ldp	x29, x30, [sp], #16
  4031bc:	ret
  4031c0:	stp	x29, x30, [sp, #-16]!
  4031c4:	mov	x29, sp
  4031c8:	bl	4030e8 <ferror@plt+0xe8>
  4031cc:	nop
  4031d0:	ldp	x29, x30, [sp], #16
  4031d4:	ret
  4031d8:	sub	sp, sp, #0x10
  4031dc:	str	w0, [sp, #12]
  4031e0:	ldr	w0, [sp, #12]
  4031e4:	cmp	w0, #0x1
  4031e8:	b.eq	4031fc <ferror@plt+0x1fc>  // b.none
  4031ec:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4031f0:	add	x0, x0, #0x4e8
  4031f4:	ldr	w1, [sp, #12]
  4031f8:	str	w1, [x0]
  4031fc:	nop
  403200:	add	sp, sp, #0x10
  403204:	ret
  403208:	sub	sp, sp, #0x10
  40320c:	strb	w0, [sp, #15]
  403210:	ldrb	w0, [sp, #15]
  403214:	add	sp, sp, #0x10
  403218:	ret
  40321c:	stp	x29, x30, [sp, #-32]!
  403220:	mov	x29, sp
  403224:	strb	w0, [sp, #31]
  403228:	bl	402ce0 <__ctype_b_loc@plt>
  40322c:	ldr	x1, [x0]
  403230:	ldrb	w0, [sp, #31]
  403234:	lsl	x0, x0, #1
  403238:	add	x0, x1, x0
  40323c:	ldrh	w0, [x0]
  403240:	and	w0, w0, #0x1
  403244:	cmp	w0, #0x0
  403248:	b.ne	403258 <ferror@plt+0x258>  // b.any
  40324c:	ldrb	w0, [sp, #31]
  403250:	cmp	w0, #0xa
  403254:	b.ne	403260 <ferror@plt+0x260>  // b.any
  403258:	mov	w0, #0x1                   	// #1
  40325c:	b	403264 <ferror@plt+0x264>
  403260:	mov	w0, #0x0                   	// #0
  403264:	and	w0, w0, #0x1
  403268:	and	w0, w0, #0xff
  40326c:	ldp	x29, x30, [sp], #32
  403270:	ret
  403274:	sub	sp, sp, #0x10
  403278:	str	x0, [sp, #8]
  40327c:	ldr	x0, [sp, #8]
  403280:	add	sp, sp, #0x10
  403284:	ret
  403288:	stp	x29, x30, [sp, #-16]!
  40328c:	mov	x29, sp
  403290:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  403294:	add	x0, x0, #0xe88
  403298:	bl	402fd0 <gettext@plt>
  40329c:	mov	x2, x0
  4032a0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4032a4:	add	x0, x0, #0x570
  4032a8:	ldr	x0, [x0]
  4032ac:	mov	x1, x0
  4032b0:	mov	x0, x2
  4032b4:	bl	402eb0 <fputs_unlocked@plt>
  4032b8:	nop
  4032bc:	ldp	x29, x30, [sp], #16
  4032c0:	ret
  4032c4:	stp	x29, x30, [sp, #-16]!
  4032c8:	mov	x29, sp
  4032cc:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  4032d0:	add	x0, x0, #0xec0
  4032d4:	bl	402fd0 <gettext@plt>
  4032d8:	mov	x2, x0
  4032dc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4032e0:	add	x0, x0, #0x570
  4032e4:	ldr	x0, [x0]
  4032e8:	mov	x1, x0
  4032ec:	mov	x0, x2
  4032f0:	bl	402eb0 <fputs_unlocked@plt>
  4032f4:	nop
  4032f8:	ldp	x29, x30, [sp], #16
  4032fc:	ret
  403300:	stp	x29, x30, [sp, #-176]!
  403304:	mov	x29, sp
  403308:	str	x0, [sp, #24]
  40330c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403310:	add	x1, x0, #0x20
  403314:	add	x0, sp, #0x28
  403318:	ldp	x2, x3, [x1]
  40331c:	stp	x2, x3, [x0]
  403320:	ldp	x2, x3, [x1, #16]
  403324:	stp	x2, x3, [x0, #16]
  403328:	ldp	x2, x3, [x1, #32]
  40332c:	stp	x2, x3, [x0, #32]
  403330:	ldp	x2, x3, [x1, #48]
  403334:	stp	x2, x3, [x0, #48]
  403338:	ldp	x2, x3, [x1, #64]
  40333c:	stp	x2, x3, [x0, #64]
  403340:	ldp	x2, x3, [x1, #80]
  403344:	stp	x2, x3, [x0, #80]
  403348:	ldp	x2, x3, [x1, #96]
  40334c:	stp	x2, x3, [x0, #96]
  403350:	ldr	x0, [sp, #24]
  403354:	str	x0, [sp, #168]
  403358:	add	x0, sp, #0x28
  40335c:	str	x0, [sp, #160]
  403360:	b	403370 <ferror@plt+0x370>
  403364:	ldr	x0, [sp, #160]
  403368:	add	x0, x0, #0x10
  40336c:	str	x0, [sp, #160]
  403370:	ldr	x0, [sp, #160]
  403374:	ldr	x0, [x0]
  403378:	cmp	x0, #0x0
  40337c:	b.eq	40339c <ferror@plt+0x39c>  // b.none
  403380:	ldr	x0, [sp, #160]
  403384:	ldr	x0, [x0]
  403388:	mov	x1, x0
  40338c:	ldr	x0, [sp, #24]
  403390:	bl	402cd0 <strcmp@plt>
  403394:	cmp	w0, #0x0
  403398:	b.ne	403364 <ferror@plt+0x364>  // b.any
  40339c:	ldr	x0, [sp, #160]
  4033a0:	ldr	x0, [x0, #8]
  4033a4:	cmp	x0, #0x0
  4033a8:	b.eq	4033b8 <ferror@plt+0x3b8>  // b.none
  4033ac:	ldr	x0, [sp, #160]
  4033b0:	ldr	x0, [x0, #8]
  4033b4:	str	x0, [sp, #168]
  4033b8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  4033bc:	add	x0, x0, #0xf10
  4033c0:	bl	402fd0 <gettext@plt>
  4033c4:	mov	x3, x0
  4033c8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  4033cc:	add	x2, x0, #0xf28
  4033d0:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  4033d4:	add	x1, x0, #0xf50
  4033d8:	mov	x0, x3
  4033dc:	bl	402f30 <printf@plt>
  4033e0:	mov	x1, #0x0                   	// #0
  4033e4:	mov	w0, #0x5                   	// #5
  4033e8:	bl	402ff0 <setlocale@plt>
  4033ec:	str	x0, [sp, #152]
  4033f0:	ldr	x0, [sp, #152]
  4033f4:	cmp	x0, #0x0
  4033f8:	b.eq	403440 <ferror@plt+0x440>  // b.none
  4033fc:	mov	x2, #0x3                   	// #3
  403400:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  403404:	add	x1, x0, #0xf60
  403408:	ldr	x0, [sp, #152]
  40340c:	bl	402af0 <strncmp@plt>
  403410:	cmp	w0, #0x0
  403414:	b.eq	403440 <ferror@plt+0x440>  // b.none
  403418:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  40341c:	add	x0, x0, #0xf68
  403420:	bl	402fd0 <gettext@plt>
  403424:	mov	x2, x0
  403428:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40342c:	add	x0, x0, #0x570
  403430:	ldr	x0, [x0]
  403434:	mov	x1, x0
  403438:	mov	x0, x2
  40343c:	bl	402eb0 <fputs_unlocked@plt>
  403440:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  403444:	add	x0, x0, #0xfb0
  403448:	bl	402fd0 <gettext@plt>
  40344c:	mov	x3, x0
  403450:	ldr	x2, [sp, #24]
  403454:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  403458:	add	x1, x0, #0xf28
  40345c:	mov	x0, x3
  403460:	bl	402f30 <printf@plt>
  403464:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  403468:	add	x0, x0, #0xfd0
  40346c:	bl	402fd0 <gettext@plt>
  403470:	mov	x3, x0
  403474:	ldr	x1, [sp, #168]
  403478:	ldr	x0, [sp, #24]
  40347c:	cmp	x1, x0
  403480:	b.ne	403490 <ferror@plt+0x490>  // b.any
  403484:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403488:	add	x0, x0, #0x8
  40348c:	b	403498 <ferror@plt+0x498>
  403490:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403494:	add	x0, x0, #0x18
  403498:	mov	x2, x0
  40349c:	ldr	x1, [sp, #168]
  4034a0:	mov	x0, x3
  4034a4:	bl	402f30 <printf@plt>
  4034a8:	nop
  4034ac:	ldp	x29, x30, [sp], #176
  4034b0:	ret
  4034b4:	stp	x29, x30, [sp, #-96]!
  4034b8:	mov	x29, sp
  4034bc:	str	w0, [sp, #28]
  4034c0:	str	x1, [sp, #16]
  4034c4:	ldr	x0, [sp, #16]
  4034c8:	bl	4028f0 <strlen@plt>
  4034cc:	mov	x2, x0
  4034d0:	ldr	x1, [sp, #16]
  4034d4:	mov	w0, #0x2                   	// #2
  4034d8:	bl	402bf0 <write@plt>
  4034dc:	str	x0, [sp, #88]
  4034e0:	ldr	w0, [sp, #28]
  4034e4:	cmp	w0, #0x0
  4034e8:	b.eq	403534 <ferror@plt+0x534>  // b.none
  4034ec:	add	x0, sp, #0x28
  4034f0:	mov	x1, x0
  4034f4:	ldr	w0, [sp, #28]
  4034f8:	bl	412314 <ferror@plt+0xf314>
  4034fc:	str	x0, [sp, #80]
  403500:	mov	x2, #0x8                   	// #8
  403504:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403508:	add	x1, x0, #0xf0
  40350c:	mov	w0, #0x2                   	// #2
  403510:	bl	402bf0 <write@plt>
  403514:	str	x0, [sp, #72]
  403518:	ldr	x0, [sp, #80]
  40351c:	bl	4028f0 <strlen@plt>
  403520:	mov	x2, x0
  403524:	ldr	x1, [sp, #80]
  403528:	mov	w0, #0x2                   	// #2
  40352c:	bl	402bf0 <write@plt>
  403530:	str	x0, [sp, #64]
  403534:	mov	x2, #0x1                   	// #1
  403538:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  40353c:	add	x1, x0, #0x100
  403540:	mov	w0, #0x2                   	// #2
  403544:	bl	402bf0 <write@plt>
  403548:	str	x0, [sp, #56]
  40354c:	mov	w0, #0x2                   	// #2
  403550:	bl	4028c0 <_exit@plt>
  403554:	stp	x29, x30, [sp, #-48]!
  403558:	mov	x29, sp
  40355c:	str	x19, [sp, #16]
  403560:	str	x0, [sp, #40]
  403564:	str	x1, [sp, #32]
  403568:	bl	402f50 <__errno_location@plt>
  40356c:	ldr	w19, [x0]
  403570:	ldr	x0, [sp, #32]
  403574:	cmp	x0, #0x0
  403578:	b.ne	40358c <ferror@plt+0x58c>  // b.any
  40357c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403580:	add	x0, x0, #0x108
  403584:	bl	402fd0 <gettext@plt>
  403588:	b	403590 <ferror@plt+0x590>
  40358c:	ldr	x0, [sp, #32]
  403590:	mov	x2, x0
  403594:	mov	w1, #0x3                   	// #3
  403598:	mov	w0, #0x0                   	// #0
  40359c:	bl	41513c <ferror@plt+0x1213c>
  4035a0:	mov	x4, x0
  4035a4:	ldr	x3, [sp, #40]
  4035a8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  4035ac:	add	x2, x0, #0x118
  4035b0:	mov	w1, w19
  4035b4:	mov	w0, #0x2                   	// #2
  4035b8:	bl	402920 <error@plt>
  4035bc:	stp	x29, x30, [sp, #-48]!
  4035c0:	mov	x29, sp
  4035c4:	str	x19, [sp, #16]
  4035c8:	str	w0, [sp, #44]
  4035cc:	ldr	w0, [sp, #44]
  4035d0:	cmp	w0, #0x0
  4035d4:	b.eq	403610 <ferror@plt+0x610>  // b.none
  4035d8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4035dc:	add	x0, x0, #0x558
  4035e0:	ldr	x19, [x0]
  4035e4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  4035e8:	add	x0, x0, #0x120
  4035ec:	bl	402fd0 <gettext@plt>
  4035f0:	mov	x1, x0
  4035f4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4035f8:	add	x0, x0, #0xbe0
  4035fc:	ldr	x0, [x0]
  403600:	mov	x2, x0
  403604:	mov	x0, x19
  403608:	bl	402fe0 <fprintf@plt>
  40360c:	b	403948 <ferror@plt+0x948>
  403610:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403614:	add	x0, x0, #0x148
  403618:	bl	402fd0 <gettext@plt>
  40361c:	mov	x3, x0
  403620:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403624:	add	x0, x0, #0xbe0
  403628:	ldr	x1, [x0]
  40362c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403630:	add	x0, x0, #0xbe0
  403634:	ldr	x0, [x0]
  403638:	mov	x2, x0
  40363c:	mov	x0, x3
  403640:	bl	402f30 <printf@plt>
  403644:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403648:	add	x0, x0, #0x190
  40364c:	bl	402fd0 <gettext@plt>
  403650:	mov	x2, x0
  403654:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403658:	add	x0, x0, #0x570
  40365c:	ldr	x0, [x0]
  403660:	mov	x1, x0
  403664:	mov	x0, x2
  403668:	bl	402eb0 <fputs_unlocked@plt>
  40366c:	bl	403288 <ferror@plt+0x288>
  403670:	bl	4032c4 <ferror@plt+0x2c4>
  403674:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403678:	add	x0, x0, #0x1d0
  40367c:	bl	402fd0 <gettext@plt>
  403680:	mov	x2, x0
  403684:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403688:	add	x0, x0, #0x570
  40368c:	ldr	x0, [x0]
  403690:	mov	x1, x0
  403694:	mov	x0, x2
  403698:	bl	402eb0 <fputs_unlocked@plt>
  40369c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  4036a0:	add	x0, x0, #0x1e8
  4036a4:	bl	402fd0 <gettext@plt>
  4036a8:	mov	x2, x0
  4036ac:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4036b0:	add	x0, x0, #0x570
  4036b4:	ldr	x0, [x0]
  4036b8:	mov	x1, x0
  4036bc:	mov	x0, x2
  4036c0:	bl	402eb0 <fputs_unlocked@plt>
  4036c4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  4036c8:	add	x0, x0, #0x2b8
  4036cc:	bl	402fd0 <gettext@plt>
  4036d0:	mov	x2, x0
  4036d4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4036d8:	add	x0, x0, #0x570
  4036dc:	ldr	x0, [x0]
  4036e0:	mov	x1, x0
  4036e4:	mov	x0, x2
  4036e8:	bl	402eb0 <fputs_unlocked@plt>
  4036ec:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  4036f0:	add	x0, x0, #0x390
  4036f4:	bl	402fd0 <gettext@plt>
  4036f8:	mov	x2, x0
  4036fc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403700:	add	x0, x0, #0x570
  403704:	ldr	x0, [x0]
  403708:	mov	x1, x0
  40370c:	mov	x0, x2
  403710:	bl	402eb0 <fputs_unlocked@plt>
  403714:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403718:	add	x0, x0, #0x3e0
  40371c:	bl	402fd0 <gettext@plt>
  403720:	mov	x2, x0
  403724:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403728:	add	x0, x0, #0x570
  40372c:	ldr	x0, [x0]
  403730:	mov	x1, x0
  403734:	mov	x0, x2
  403738:	bl	402eb0 <fputs_unlocked@plt>
  40373c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403740:	add	x0, x0, #0x4f8
  403744:	bl	402fd0 <gettext@plt>
  403748:	mov	x2, x0
  40374c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403750:	add	x0, x0, #0x570
  403754:	ldr	x0, [x0]
  403758:	mov	x1, x0
  40375c:	mov	x0, x2
  403760:	bl	402eb0 <fputs_unlocked@plt>
  403764:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403768:	add	x0, x0, #0x610
  40376c:	bl	402fd0 <gettext@plt>
  403770:	mov	x2, x0
  403774:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403778:	add	x0, x0, #0x570
  40377c:	ldr	x0, [x0]
  403780:	mov	x1, x0
  403784:	mov	x0, x2
  403788:	bl	402eb0 <fputs_unlocked@plt>
  40378c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403790:	add	x0, x0, #0x628
  403794:	bl	402fd0 <gettext@plt>
  403798:	mov	x2, x0
  40379c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4037a0:	add	x0, x0, #0x570
  4037a4:	ldr	x0, [x0]
  4037a8:	mov	x1, x0
  4037ac:	mov	x0, x2
  4037b0:	bl	402eb0 <fputs_unlocked@plt>
  4037b4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  4037b8:	add	x0, x0, #0x6a0
  4037bc:	bl	402fd0 <gettext@plt>
  4037c0:	mov	x2, x0
  4037c4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4037c8:	add	x0, x0, #0x570
  4037cc:	ldr	x0, [x0]
  4037d0:	mov	x1, x0
  4037d4:	mov	x0, x2
  4037d8:	bl	402eb0 <fputs_unlocked@plt>
  4037dc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  4037e0:	add	x0, x0, #0x7b8
  4037e4:	bl	402fd0 <gettext@plt>
  4037e8:	mov	x2, x0
  4037ec:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4037f0:	add	x0, x0, #0x570
  4037f4:	ldr	x0, [x0]
  4037f8:	mov	x1, x0
  4037fc:	mov	x0, x2
  403800:	bl	402eb0 <fputs_unlocked@plt>
  403804:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403808:	add	x0, x0, #0x918
  40380c:	bl	402fd0 <gettext@plt>
  403810:	mov	x2, x0
  403814:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403818:	add	x0, x0, #0x570
  40381c:	ldr	x0, [x0]
  403820:	mov	x1, x0
  403824:	mov	x0, x2
  403828:	bl	402eb0 <fputs_unlocked@plt>
  40382c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403830:	add	x0, x0, #0x9a8
  403834:	bl	402fd0 <gettext@plt>
  403838:	mov	x2, x0
  40383c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403840:	add	x0, x0, #0x570
  403844:	ldr	x0, [x0]
  403848:	mov	x1, x0
  40384c:	mov	x0, x2
  403850:	bl	402eb0 <fputs_unlocked@plt>
  403854:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403858:	add	x0, x0, #0xa80
  40385c:	bl	402fd0 <gettext@plt>
  403860:	mov	x2, x0
  403864:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403868:	add	x1, x0, #0xc48
  40386c:	mov	x0, x2
  403870:	bl	402f30 <printf@plt>
  403874:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403878:	add	x0, x0, #0xc50
  40387c:	bl	402fd0 <gettext@plt>
  403880:	mov	x2, x0
  403884:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403888:	add	x0, x0, #0x570
  40388c:	ldr	x0, [x0]
  403890:	mov	x1, x0
  403894:	mov	x0, x2
  403898:	bl	402eb0 <fputs_unlocked@plt>
  40389c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  4038a0:	add	x0, x0, #0xc90
  4038a4:	bl	402fd0 <gettext@plt>
  4038a8:	mov	x2, x0
  4038ac:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4038b0:	add	x0, x0, #0x570
  4038b4:	ldr	x0, [x0]
  4038b8:	mov	x1, x0
  4038bc:	mov	x0, x2
  4038c0:	bl	402eb0 <fputs_unlocked@plt>
  4038c4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  4038c8:	add	x0, x0, #0xcc0
  4038cc:	bl	402fd0 <gettext@plt>
  4038d0:	mov	x2, x0
  4038d4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4038d8:	add	x0, x0, #0x570
  4038dc:	ldr	x0, [x0]
  4038e0:	mov	x1, x0
  4038e4:	mov	x0, x2
  4038e8:	bl	402eb0 <fputs_unlocked@plt>
  4038ec:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  4038f0:	add	x0, x0, #0xcf8
  4038f4:	bl	402fd0 <gettext@plt>
  4038f8:	mov	x2, x0
  4038fc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403900:	add	x0, x0, #0x570
  403904:	ldr	x0, [x0]
  403908:	mov	x1, x0
  40390c:	mov	x0, x2
  403910:	bl	402eb0 <fputs_unlocked@plt>
  403914:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  403918:	add	x0, x0, #0xf58
  40391c:	bl	402fd0 <gettext@plt>
  403920:	mov	x2, x0
  403924:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403928:	add	x0, x0, #0x570
  40392c:	ldr	x0, [x0]
  403930:	mov	x1, x0
  403934:	mov	x0, x2
  403938:	bl	402eb0 <fputs_unlocked@plt>
  40393c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  403940:	add	x0, x0, #0x40
  403944:	bl	403300 <ferror@plt+0x300>
  403948:	ldr	w0, [sp, #44]
  40394c:	bl	402900 <exit@plt>
  403950:	stp	x29, x30, [sp, #-48]!
  403954:	mov	x29, sp
  403958:	str	x0, [sp, #24]
  40395c:	ldr	x0, [sp, #24]
  403960:	add	x0, x0, #0x8
  403964:	mov	x2, x0
  403968:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40396c:	add	x1, x0, #0xa00
  403970:	mov	w0, #0x0                   	// #0
  403974:	bl	4028a0 <pthread_sigmask@plt>
  403978:	str	w0, [sp, #44]
  40397c:	ldr	w0, [sp, #44]
  403980:	cmp	w0, #0x0
  403984:	cset	w0, eq  // eq = none
  403988:	and	w1, w0, #0xff
  40398c:	ldr	x0, [sp, #24]
  403990:	strb	w1, [x0]
  403994:	nop
  403998:	ldp	x29, x30, [sp], #48
  40399c:	ret
  4039a0:	stp	x29, x30, [sp, #-32]!
  4039a4:	mov	x29, sp
  4039a8:	str	x0, [sp, #24]
  4039ac:	ldr	x0, [sp, #24]
  4039b0:	ldrb	w0, [x0]
  4039b4:	cmp	w0, #0x0
  4039b8:	b.eq	4039d4 <ferror@plt+0x9d4>  // b.none
  4039bc:	ldr	x0, [sp, #24]
  4039c0:	add	x0, x0, #0x8
  4039c4:	mov	x2, #0x0                   	// #0
  4039c8:	mov	x1, x0
  4039cc:	mov	w0, #0x2                   	// #2
  4039d0:	bl	4028a0 <pthread_sigmask@plt>
  4039d4:	nop
  4039d8:	ldp	x29, x30, [sp], #32
  4039dc:	ret
  4039e0:	sub	sp, sp, #0x20
  4039e4:	str	x0, [sp, #8]
  4039e8:	str	x1, [sp]
  4039ec:	ldr	x0, [sp, #8]
  4039f0:	str	x0, [sp, #24]
  4039f4:	ldr	x0, [sp, #24]
  4039f8:	ldr	w0, [x0, #8]
  4039fc:	sxtw	x0, w0
  403a00:	ldr	x1, [sp]
  403a04:	udiv	x2, x0, x1
  403a08:	ldr	x1, [sp]
  403a0c:	mul	x1, x2, x1
  403a10:	sub	x0, x0, x1
  403a14:	add	sp, sp, #0x20
  403a18:	ret
  403a1c:	sub	sp, sp, #0x20
  403a20:	str	x0, [sp, #8]
  403a24:	str	x1, [sp]
  403a28:	ldr	x0, [sp, #8]
  403a2c:	str	x0, [sp, #24]
  403a30:	ldr	x0, [sp]
  403a34:	str	x0, [sp, #16]
  403a38:	ldr	x0, [sp, #24]
  403a3c:	ldr	w1, [x0, #8]
  403a40:	ldr	x0, [sp, #16]
  403a44:	ldr	w0, [x0, #8]
  403a48:	cmp	w1, w0
  403a4c:	cset	w0, eq  // eq = none
  403a50:	and	w0, w0, #0xff
  403a54:	add	sp, sp, #0x20
  403a58:	ret
  403a5c:	stp	x29, x30, [sp, #-64]!
  403a60:	mov	x29, sp
  403a64:	stp	x19, x20, [sp, #16]
  403a68:	str	w0, [sp, #44]
  403a6c:	ldr	w0, [sp, #44]
  403a70:	cmp	w0, #0x0
  403a74:	b.eq	403a80 <ferror@plt+0xa80>  // b.none
  403a78:	ldr	w0, [sp, #44]
  403a7c:	b	403a84 <ferror@plt+0xa84>
  403a80:	mov	w0, #0xffffffff            	// #-1
  403a84:	ldr	w1, [sp, #44]
  403a88:	cmp	w1, #0x0
  403a8c:	cset	w1, eq  // eq = none
  403a90:	and	w1, w1, #0xff
  403a94:	mov	w2, w1
  403a98:	add	x1, sp, #0x38
  403a9c:	bl	402fb0 <waitpid@plt>
  403aa0:	str	w0, [sp, #60]
  403aa4:	ldr	w0, [sp, #60]
  403aa8:	cmp	w0, #0x0
  403aac:	b.ge	403af4 <ferror@plt+0xaf4>  // b.tcont
  403ab0:	bl	402f50 <__errno_location@plt>
  403ab4:	ldr	w19, [x0]
  403ab8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  403abc:	add	x0, x0, #0x6c0
  403ac0:	bl	402fd0 <gettext@plt>
  403ac4:	mov	x20, x0
  403ac8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403acc:	add	x0, x0, #0x9f0
  403ad0:	ldr	x0, [x0]
  403ad4:	mov	x1, x0
  403ad8:	mov	w0, #0x4                   	// #4
  403adc:	bl	415004 <ferror@plt+0x12004>
  403ae0:	mov	x3, x0
  403ae4:	mov	x2, x20
  403ae8:	mov	w1, w19
  403aec:	mov	w0, #0x2                   	// #2
  403af0:	bl	402920 <error@plt>
  403af4:	ldr	w0, [sp, #60]
  403af8:	cmp	w0, #0x0
  403afc:	b.le	403b9c <ferror@plt+0xb9c>
  403b00:	ldr	w0, [sp, #44]
  403b04:	cmp	w0, #0x0
  403b08:	b.gt	403b20 <ferror@plt+0xb20>
  403b0c:	ldr	w0, [sp, #60]
  403b10:	bl	403c4c <ferror@plt+0xc4c>
  403b14:	and	w0, w0, #0xff
  403b18:	cmp	w0, #0x0
  403b1c:	b.eq	403b9c <ferror@plt+0xb9c>  // b.none
  403b20:	ldr	w0, [sp, #56]
  403b24:	and	w0, w0, #0x7f
  403b28:	cmp	w0, #0x0
  403b2c:	b.ne	403b44 <ferror@plt+0xb44>  // b.any
  403b30:	ldr	w0, [sp, #56]
  403b34:	asr	w0, w0, #8
  403b38:	and	w0, w0, #0xff
  403b3c:	cmp	w0, #0x0
  403b40:	b.eq	403b80 <ferror@plt+0xb80>  // b.none
  403b44:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  403b48:	add	x0, x0, #0x6d8
  403b4c:	bl	402fd0 <gettext@plt>
  403b50:	mov	x19, x0
  403b54:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403b58:	add	x0, x0, #0x9f0
  403b5c:	ldr	x0, [x0]
  403b60:	mov	x1, x0
  403b64:	mov	w0, #0x4                   	// #4
  403b68:	bl	415004 <ferror@plt+0x12004>
  403b6c:	mov	x3, x0
  403b70:	mov	x2, x19
  403b74:	mov	w1, #0x0                   	// #0
  403b78:	mov	w0, #0x2                   	// #2
  403b7c:	bl	402920 <error@plt>
  403b80:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403b84:	add	x0, x0, #0xa90
  403b88:	ldr	w0, [x0]
  403b8c:	sub	w1, w0, #0x1
  403b90:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403b94:	add	x0, x0, #0xa90
  403b98:	str	w1, [x0]
  403b9c:	ldr	w0, [sp, #60]
  403ba0:	ldp	x19, x20, [sp, #16]
  403ba4:	ldp	x29, x30, [sp], #64
  403ba8:	ret
  403bac:	stp	x29, x30, [sp, #-32]!
  403bb0:	mov	x29, sp
  403bb4:	str	x0, [sp, #24]
  403bb8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403bbc:	add	x0, x0, #0xa88
  403bc0:	ldr	x0, [x0]
  403bc4:	cmp	x0, #0x0
  403bc8:	b.ne	403c14 <ferror@plt+0xc14>  // b.any
  403bcc:	mov	x4, #0x0                   	// #0
  403bd0:	adrp	x0, 403000 <ferror@plt>
  403bd4:	add	x3, x0, #0xa1c
  403bd8:	adrp	x0, 403000 <ferror@plt>
  403bdc:	add	x2, x0, #0x9e0
  403be0:	mov	x1, #0x0                   	// #0
  403be4:	mov	x0, #0x2f                  	// #47
  403be8:	bl	411040 <ferror@plt+0xe040>
  403bec:	mov	x1, x0
  403bf0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403bf4:	add	x0, x0, #0xa88
  403bf8:	str	x1, [x0]
  403bfc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403c00:	add	x0, x0, #0xa88
  403c04:	ldr	x0, [x0]
  403c08:	cmp	x0, #0x0
  403c0c:	b.ne	403c14 <ferror@plt+0xc14>  // b.any
  403c10:	bl	4185bc <ferror@plt+0x155bc>
  403c14:	ldr	x0, [sp, #24]
  403c18:	mov	w1, #0x1                   	// #1
  403c1c:	strb	w1, [x0, #12]
  403c20:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403c24:	add	x0, x0, #0xa88
  403c28:	ldr	x0, [x0]
  403c2c:	ldr	x1, [sp, #24]
  403c30:	bl	411cc0 <ferror@plt+0xecc0>
  403c34:	cmp	x0, #0x0
  403c38:	b.ne	403c40 <ferror@plt+0xc40>  // b.any
  403c3c:	bl	4185bc <ferror@plt+0x155bc>
  403c40:	nop
  403c44:	ldp	x29, x30, [sp], #32
  403c48:	ret
  403c4c:	stp	x29, x30, [sp, #-64]!
  403c50:	mov	x29, sp
  403c54:	str	w0, [sp, #28]
  403c58:	ldr	w0, [sp, #28]
  403c5c:	str	w0, [sp, #48]
  403c60:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403c64:	add	x0, x0, #0xa88
  403c68:	ldr	x0, [x0]
  403c6c:	add	x1, sp, #0x28
  403c70:	bl	411d1c <ferror@plt+0xed1c>
  403c74:	str	x0, [sp, #56]
  403c78:	ldr	x0, [sp, #56]
  403c7c:	cmp	x0, #0x0
  403c80:	b.ne	403c8c <ferror@plt+0xc8c>  // b.any
  403c84:	mov	w0, #0x0                   	// #0
  403c88:	b	403c9c <ferror@plt+0xc9c>
  403c8c:	ldr	x0, [sp, #56]
  403c90:	mov	w1, #0x2                   	// #2
  403c94:	strb	w1, [x0, #12]
  403c98:	mov	w0, #0x1                   	// #1
  403c9c:	ldp	x29, x30, [sp], #64
  403ca0:	ret
  403ca4:	stp	x29, x30, [sp, #-32]!
  403ca8:	mov	x29, sp
  403cac:	str	w0, [sp, #28]
  403cb0:	ldr	w0, [sp, #28]
  403cb4:	bl	403c4c <ferror@plt+0xc4c>
  403cb8:	and	w0, w0, #0xff
  403cbc:	cmp	w0, #0x0
  403cc0:	b.eq	403ccc <ferror@plt+0xccc>  // b.none
  403cc4:	ldr	w0, [sp, #28]
  403cc8:	bl	403a5c <ferror@plt+0xa5c>
  403ccc:	nop
  403cd0:	ldp	x29, x30, [sp], #32
  403cd4:	ret
  403cd8:	stp	x29, x30, [sp, #-16]!
  403cdc:	mov	x29, sp
  403ce0:	b	403ce8 <ferror@plt+0xce8>
  403ce4:	nop
  403ce8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403cec:	add	x0, x0, #0xa90
  403cf0:	ldr	w0, [x0]
  403cf4:	cmp	w0, #0x0
  403cf8:	b.le	403d0c <ferror@plt+0xd0c>
  403cfc:	mov	w0, #0x0                   	// #0
  403d00:	bl	403a5c <ferror@plt+0xa5c>
  403d04:	cmp	w0, #0x0
  403d08:	b.ne	403ce4 <ferror@plt+0xce4>  // b.any
  403d0c:	nop
  403d10:	ldp	x29, x30, [sp], #16
  403d14:	ret
  403d18:	stp	x29, x30, [sp, #-16]!
  403d1c:	mov	x29, sp
  403d20:	mov	w0, #0xffffffff            	// #-1
  403d24:	bl	403a5c <ferror@plt+0xa5c>
  403d28:	bl	403cd8 <ferror@plt+0xcd8>
  403d2c:	nop
  403d30:	ldp	x29, x30, [sp], #16
  403d34:	ret
  403d38:	stp	x29, x30, [sp, #-16]!
  403d3c:	mov	x29, sp
  403d40:	b	403d4c <ferror@plt+0xd4c>
  403d44:	mov	w0, #0xffffffff            	// #-1
  403d48:	bl	403a5c <ferror@plt+0xa5c>
  403d4c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403d50:	add	x0, x0, #0xa90
  403d54:	ldr	w0, [x0]
  403d58:	cmp	w0, #0x0
  403d5c:	b.gt	403d44 <ferror@plt+0xd44>
  403d60:	nop
  403d64:	nop
  403d68:	ldp	x29, x30, [sp], #16
  403d6c:	ret
  403d70:	stp	x29, x30, [sp, #-32]!
  403d74:	mov	x29, sp
  403d78:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403d7c:	add	x0, x0, #0xa80
  403d80:	ldr	x0, [x0]
  403d84:	str	x0, [sp, #24]
  403d88:	b	403da4 <ferror@plt+0xda4>
  403d8c:	ldr	x0, [sp, #24]
  403d90:	add	x0, x0, #0xd
  403d94:	bl	402fc0 <unlink@plt>
  403d98:	ldr	x0, [sp, #24]
  403d9c:	ldr	x0, [x0]
  403da0:	str	x0, [sp, #24]
  403da4:	ldr	x0, [sp, #24]
  403da8:	cmp	x0, #0x0
  403dac:	b.ne	403d8c <ferror@plt+0xd8c>  // b.any
  403db0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403db4:	add	x0, x0, #0xa80
  403db8:	str	xzr, [x0]
  403dbc:	nop
  403dc0:	ldp	x29, x30, [sp], #32
  403dc4:	ret
  403dc8:	stp	x29, x30, [sp, #-160]!
  403dcc:	mov	x29, sp
  403dd0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403dd4:	add	x0, x0, #0xa80
  403dd8:	ldr	x0, [x0]
  403ddc:	cmp	x0, #0x0
  403de0:	b.eq	403df8 <ferror@plt+0xdf8>  // b.none
  403de4:	add	x0, sp, #0x18
  403de8:	bl	403950 <ferror@plt+0x950>
  403dec:	bl	403d70 <ferror@plt+0xd70>
  403df0:	add	x0, sp, #0x18
  403df4:	bl	4039a0 <ferror@plt+0x9a0>
  403df8:	bl	40ddac <ferror@plt+0xadac>
  403dfc:	nop
  403e00:	ldp	x29, x30, [sp], #160
  403e04:	ret
  403e08:	stp	x29, x30, [sp, #-224]!
  403e0c:	mov	x29, sp
  403e10:	stp	x19, x20, [sp, #16]
  403e14:	str	x0, [sp, #40]
  403e18:	strb	w1, [sp, #39]
  403e1c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403e20:	add	x0, x0, #0x9c8
  403e24:	ldr	x1, [x0]
  403e28:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403e2c:	add	x0, x0, #0xb38
  403e30:	ldr	x0, [x0]
  403e34:	lsl	x0, x0, #3
  403e38:	add	x0, x1, x0
  403e3c:	ldr	x0, [x0]
  403e40:	str	x0, [sp, #208]
  403e44:	ldr	x0, [sp, #208]
  403e48:	bl	4028f0 <strlen@plt>
  403e4c:	str	x0, [sp, #200]
  403e50:	ldr	x0, [sp, #200]
  403e54:	add	x0, x0, #0x20
  403e58:	and	x0, x0, #0xfffffffffffffff8
  403e5c:	bl	4183dc <ferror@plt+0x153dc>
  403e60:	str	x0, [sp, #216]
  403e64:	ldr	x0, [sp, #216]
  403e68:	add	x0, x0, #0xd
  403e6c:	str	x0, [sp, #192]
  403e70:	ldr	x2, [sp, #200]
  403e74:	ldr	x1, [sp, #208]
  403e78:	ldr	x0, [sp, #192]
  403e7c:	bl	402880 <memcpy@plt>
  403e80:	ldr	x1, [sp, #192]
  403e84:	ldr	x0, [sp, #200]
  403e88:	add	x2, x1, x0
  403e8c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  403e90:	add	x1, x0, #0x3c8
  403e94:	mov	x0, x2
  403e98:	ldr	x2, [x1]
  403e9c:	str	x2, [x0]
  403ea0:	ldr	w1, [x1, #8]
  403ea4:	str	w1, [x0, #8]
  403ea8:	ldr	x0, [sp, #216]
  403eac:	str	xzr, [x0]
  403eb0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403eb4:	add	x0, x0, #0xb38
  403eb8:	ldr	x0, [x0]
  403ebc:	add	x1, x0, #0x1
  403ec0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403ec4:	add	x0, x0, #0xb38
  403ec8:	str	x1, [x0]
  403ecc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403ed0:	add	x0, x0, #0xb38
  403ed4:	ldr	x1, [x0]
  403ed8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403edc:	add	x0, x0, #0x9d0
  403ee0:	ldr	x0, [x0]
  403ee4:	cmp	x1, x0
  403ee8:	b.ne	403ef8 <ferror@plt+0xef8>  // b.any
  403eec:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403ef0:	add	x0, x0, #0xb38
  403ef4:	str	xzr, [x0]
  403ef8:	add	x0, sp, #0x30
  403efc:	bl	403950 <ferror@plt+0x950>
  403f00:	mov	w1, #0x80000               	// #524288
  403f04:	ldr	x0, [sp, #192]
  403f08:	bl	41703c <ferror@plt+0x1403c>
  403f0c:	str	w0, [sp, #188]
  403f10:	ldr	w0, [sp, #188]
  403f14:	cmp	w0, #0x0
  403f18:	b.lt	403f40 <ferror@plt+0xf40>  // b.tstop
  403f1c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403f20:	add	x0, x0, #0x4b8
  403f24:	ldr	x0, [x0]
  403f28:	ldr	x1, [sp, #216]
  403f2c:	str	x1, [x0]
  403f30:	ldr	x1, [sp, #216]
  403f34:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  403f38:	add	x0, x0, #0x4b8
  403f3c:	str	x1, [x0]
  403f40:	bl	402f50 <__errno_location@plt>
  403f44:	ldr	w0, [x0]
  403f48:	str	w0, [sp, #184]
  403f4c:	add	x0, sp, #0x30
  403f50:	bl	4039a0 <ferror@plt+0x9a0>
  403f54:	bl	402f50 <__errno_location@plt>
  403f58:	mov	x1, x0
  403f5c:	ldr	w0, [sp, #184]
  403f60:	str	w0, [x1]
  403f64:	ldr	w0, [sp, #188]
  403f68:	cmp	w0, #0x0
  403f6c:	b.ge	403fd8 <ferror@plt+0xfd8>  // b.tcont
  403f70:	ldrb	w0, [sp, #39]
  403f74:	eor	w0, w0, #0x1
  403f78:	and	w0, w0, #0xff
  403f7c:	cmp	w0, #0x0
  403f80:	b.ne	403f94 <ferror@plt+0xf94>  // b.any
  403f84:	bl	402f50 <__errno_location@plt>
  403f88:	ldr	w0, [x0]
  403f8c:	cmp	w0, #0x18
  403f90:	b.eq	403fcc <ferror@plt+0xfcc>  // b.none
  403f94:	bl	402f50 <__errno_location@plt>
  403f98:	ldr	w19, [x0]
  403f9c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  403fa0:	add	x0, x0, #0x6f8
  403fa4:	bl	402fd0 <gettext@plt>
  403fa8:	mov	x20, x0
  403fac:	ldr	x1, [sp, #208]
  403fb0:	mov	w0, #0x4                   	// #4
  403fb4:	bl	415004 <ferror@plt+0x12004>
  403fb8:	mov	x3, x0
  403fbc:	mov	x2, x20
  403fc0:	mov	w1, w19
  403fc4:	mov	w0, #0x2                   	// #2
  403fc8:	bl	402920 <error@plt>
  403fcc:	ldr	x0, [sp, #216]
  403fd0:	bl	402d20 <free@plt>
  403fd4:	str	xzr, [sp, #216]
  403fd8:	ldr	x0, [sp, #40]
  403fdc:	ldr	w1, [sp, #188]
  403fe0:	str	w1, [x0]
  403fe4:	ldr	x0, [sp, #216]
  403fe8:	ldp	x19, x20, [sp, #16]
  403fec:	ldp	x29, x30, [sp], #224
  403ff0:	ret
  403ff4:	stp	x29, x30, [sp, #-16]!
  403ff8:	mov	x29, sp
  403ffc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404000:	add	x0, x0, #0xb40
  404004:	ldr	w0, [x0]
  404008:	cmp	w0, #0x0
  40400c:	b.ne	404044 <ferror@plt+0x1044>  // b.any
  404010:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404014:	add	x1, x0, #0xb48
  404018:	mov	w0, #0x1                   	// #1
  40401c:	bl	41bdc0 <_obstack_memory_used@@Base+0x1924>
  404020:	cmp	w0, #0x0
  404024:	b.eq	404034 <ferror@plt+0x1034>  // b.none
  404028:	bl	402f50 <__errno_location@plt>
  40402c:	ldr	w0, [x0]
  404030:	b	404038 <ferror@plt+0x1038>
  404034:	mov	w0, #0xffffffff            	// #-1
  404038:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  40403c:	add	x1, x1, #0xb40
  404040:	str	w0, [x1]
  404044:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404048:	add	x0, x0, #0xb40
  40404c:	ldr	w0, [x0]
  404050:	cmp	w0, #0x0
  404054:	b.ge	404064 <ferror@plt+0x1064>  // b.tcont
  404058:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40405c:	add	x0, x0, #0xb48
  404060:	b	404068 <ferror@plt+0x1068>
  404064:	mov	x0, #0x0                   	// #0
  404068:	ldp	x29, x30, [sp], #16
  40406c:	ret
  404070:	stp	x29, x30, [sp, #-80]!
  404074:	mov	x29, sp
  404078:	str	x19, [sp, #16]
  40407c:	str	x0, [sp, #40]
  404080:	str	x1, [sp, #32]
  404084:	ldr	x0, [sp, #32]
  404088:	ldrb	w0, [x0]
  40408c:	cmp	w0, #0x72
  404090:	b.ne	404114 <ferror@plt+0x1114>  // b.any
  404094:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404098:	add	x1, x0, #0x720
  40409c:	ldr	x0, [sp, #40]
  4040a0:	bl	402cd0 <strcmp@plt>
  4040a4:	cmp	w0, #0x0
  4040a8:	b.ne	4040d0 <ferror@plt+0x10d0>  // b.any
  4040ac:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4040b0:	add	x0, x0, #0x9e3
  4040b4:	mov	w1, #0x1                   	// #1
  4040b8:	strb	w1, [x0]
  4040bc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4040c0:	add	x0, x0, #0x578
  4040c4:	ldr	x0, [x0]
  4040c8:	str	x0, [sp, #72]
  4040cc:	b	404104 <ferror@plt+0x1104>
  4040d0:	mov	w1, #0x80000               	// #524288
  4040d4:	ldr	x0, [sp, #40]
  4040d8:	bl	402ab0 <open@plt>
  4040dc:	str	w0, [sp, #52]
  4040e0:	ldr	w0, [sp, #52]
  4040e4:	cmp	w0, #0x0
  4040e8:	b.lt	4040fc <ferror@plt+0x10fc>  // b.tstop
  4040ec:	ldr	x1, [sp, #32]
  4040f0:	ldr	w0, [sp, #52]
  4040f4:	bl	402b40 <fdopen@plt>
  4040f8:	b	404100 <ferror@plt+0x1100>
  4040fc:	mov	x0, #0x0                   	// #0
  404100:	str	x0, [sp, #72]
  404104:	mov	w1, #0x2                   	// #2
  404108:	ldr	x0, [sp, #72]
  40410c:	bl	40fea4 <ferror@plt+0xcea4>
  404110:	b	4041e0 <ferror@plt+0x11e0>
  404114:	ldr	x0, [sp, #32]
  404118:	ldrb	w0, [x0]
  40411c:	cmp	w0, #0x77
  404120:	b.ne	4041c0 <ferror@plt+0x11c0>  // b.any
  404124:	ldr	x0, [sp, #40]
  404128:	cmp	x0, #0x0
  40412c:	b.eq	4041ac <ferror@plt+0x11ac>  // b.none
  404130:	mov	x1, #0x0                   	// #0
  404134:	mov	w0, #0x1                   	// #1
  404138:	bl	402ee0 <ftruncate@plt>
  40413c:	cmp	w0, #0x0
  404140:	b.eq	4041ac <ferror@plt+0x11ac>  // b.none
  404144:	bl	402f50 <__errno_location@plt>
  404148:	ldr	w0, [x0]
  40414c:	str	w0, [sp, #68]
  404150:	bl	403ff4 <ferror@plt+0xff4>
  404154:	str	x0, [sp, #56]
  404158:	ldr	x0, [sp, #56]
  40415c:	cmp	x0, #0x0
  404160:	b.eq	404178 <ferror@plt+0x1178>  // b.none
  404164:	ldr	x0, [sp, #56]
  404168:	ldr	w0, [x0, #16]
  40416c:	and	w0, w0, #0xf000
  404170:	cmp	w0, #0x8, lsl #12
  404174:	b.ne	4041ac <ferror@plt+0x11ac>  // b.any
  404178:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40417c:	add	x0, x0, #0x728
  404180:	bl	402fd0 <gettext@plt>
  404184:	mov	x19, x0
  404188:	ldr	x2, [sp, #40]
  40418c:	mov	w1, #0x3                   	// #3
  404190:	mov	w0, #0x0                   	// #0
  404194:	bl	41513c <ferror@plt+0x1213c>
  404198:	mov	x3, x0
  40419c:	mov	x2, x19
  4041a0:	ldr	w1, [sp, #68]
  4041a4:	mov	w0, #0x2                   	// #2
  4041a8:	bl	402920 <error@plt>
  4041ac:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4041b0:	add	x0, x0, #0x570
  4041b4:	ldr	x0, [x0]
  4041b8:	str	x0, [sp, #72]
  4041bc:	b	4041e0 <ferror@plt+0x11e0>
  4041c0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4041c4:	add	x3, x0, #0x3d8
  4041c8:	mov	w2, #0x3d6                 	// #982
  4041cc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4041d0:	add	x1, x0, #0x740
  4041d4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4041d8:	add	x0, x0, #0x750
  4041dc:	bl	402f40 <__assert_fail@plt>
  4041e0:	ldr	x0, [sp, #72]
  4041e4:	ldr	x19, [sp, #16]
  4041e8:	ldp	x29, x30, [sp], #80
  4041ec:	ret
  4041f0:	stp	x29, x30, [sp, #-48]!
  4041f4:	mov	x29, sp
  4041f8:	str	x0, [sp, #24]
  4041fc:	str	x1, [sp, #16]
  404200:	ldr	x1, [sp, #16]
  404204:	ldr	x0, [sp, #24]
  404208:	bl	404070 <ferror@plt+0x1070>
  40420c:	str	x0, [sp, #40]
  404210:	ldr	x0, [sp, #40]
  404214:	cmp	x0, #0x0
  404218:	b.ne	404230 <ferror@plt+0x1230>  // b.any
  40421c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404220:	add	x0, x0, #0x780
  404224:	bl	402fd0 <gettext@plt>
  404228:	ldr	x1, [sp, #24]
  40422c:	bl	403554 <ferror@plt+0x554>
  404230:	ldr	x0, [sp, #40]
  404234:	ldp	x29, x30, [sp], #48
  404238:	ret
  40423c:	stp	x29, x30, [sp, #-32]!
  404240:	mov	x29, sp
  404244:	str	x0, [sp, #24]
  404248:	str	x1, [sp, #16]
  40424c:	ldr	x0, [sp, #24]
  404250:	bl	402a10 <fileno@plt>
  404254:	cmp	w0, #0x0
  404258:	b.eq	404268 <ferror@plt+0x1268>  // b.none
  40425c:	cmp	w0, #0x1
  404260:	b.eq	404284 <ferror@plt+0x1284>  // b.none
  404264:	b	4042a8 <ferror@plt+0x12a8>
  404268:	ldr	x0, [sp, #24]
  40426c:	bl	402d80 <feof_unlocked@plt>
  404270:	cmp	w0, #0x0
  404274:	b.eq	4042cc <ferror@plt+0x12cc>  // b.none
  404278:	ldr	x0, [sp, #24]
  40427c:	bl	402e30 <clearerr_unlocked@plt>
  404280:	b	4042cc <ferror@plt+0x12cc>
  404284:	ldr	x0, [sp, #24]
  404288:	bl	402da0 <fflush_unlocked@plt>
  40428c:	cmp	w0, #0x0
  404290:	b.eq	4042d4 <ferror@plt+0x12d4>  // b.none
  404294:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404298:	add	x0, x0, #0x790
  40429c:	bl	402fd0 <gettext@plt>
  4042a0:	ldr	x1, [sp, #16]
  4042a4:	bl	403554 <ferror@plt+0x554>
  4042a8:	ldr	x0, [sp, #24]
  4042ac:	bl	4195f0 <ferror@plt+0x165f0>
  4042b0:	cmp	w0, #0x0
  4042b4:	b.eq	4042dc <ferror@plt+0x12dc>  // b.none
  4042b8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4042bc:	add	x0, x0, #0x7a0
  4042c0:	bl	402fd0 <gettext@plt>
  4042c4:	ldr	x1, [sp, #16]
  4042c8:	bl	403554 <ferror@plt+0x554>
  4042cc:	nop
  4042d0:	b	4042e0 <ferror@plt+0x12e0>
  4042d4:	nop
  4042d8:	b	4042e0 <ferror@plt+0x12e0>
  4042dc:	nop
  4042e0:	nop
  4042e4:	ldp	x29, x30, [sp], #32
  4042e8:	ret
  4042ec:	stp	x29, x30, [sp, #-32]!
  4042f0:	mov	x29, sp
  4042f4:	str	w0, [sp, #28]
  4042f8:	str	w1, [sp, #24]
  4042fc:	ldr	w1, [sp, #28]
  404300:	ldr	w0, [sp, #24]
  404304:	cmp	w1, w0
  404308:	b.eq	404320 <ferror@plt+0x1320>  // b.none
  40430c:	ldr	w1, [sp, #24]
  404310:	ldr	w0, [sp, #28]
  404314:	bl	402ef0 <dup2@plt>
  404318:	ldr	w0, [sp, #28]
  40431c:	bl	402ba0 <close@plt>
  404320:	nop
  404324:	ldp	x29, x30, [sp], #32
  404328:	ret
  40432c:	stp	x29, x30, [sp, #-208]!
  404330:	mov	x29, sp
  404334:	str	x0, [sp, #24]
  404338:	str	x1, [sp, #16]
  40433c:	fmov	d0, #2.500000000000000000e-01
  404340:	str	d0, [sp, #200]
  404344:	mov	w1, #0x80000               	// #524288
  404348:	ldr	x0, [sp, #24]
  40434c:	bl	412ce8 <ferror@plt+0xfce8>
  404350:	cmp	w0, #0x0
  404354:	b.ge	404360 <ferror@plt+0x1360>  // b.tcont
  404358:	mov	w0, #0xffffffff            	// #-1
  40435c:	b	4044c8 <ferror@plt+0x14c8>
  404360:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404364:	add	x0, x0, #0x4b4
  404368:	ldr	w0, [x0]
  40436c:	add	w0, w0, #0x1
  404370:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  404374:	add	x1, x1, #0xa90
  404378:	ldr	w1, [x1]
  40437c:	cmp	w0, w1
  404380:	b.cs	40442c <ferror@plt+0x142c>  // b.hs, b.nlast
  404384:	bl	403d18 <ferror@plt+0xd18>
  404388:	b	40442c <ferror@plt+0x142c>
  40438c:	add	x0, sp, #0x28
  404390:	bl	403950 <ferror@plt+0x950>
  404394:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404398:	add	x0, x0, #0xa80
  40439c:	ldr	x0, [x0]
  4043a0:	str	x0, [sp, #184]
  4043a4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4043a8:	add	x0, x0, #0xa80
  4043ac:	str	xzr, [x0]
  4043b0:	bl	4029c0 <fork@plt>
  4043b4:	str	w0, [sp, #196]
  4043b8:	bl	402f50 <__errno_location@plt>
  4043bc:	ldr	w0, [x0]
  4043c0:	str	w0, [sp, #180]
  4043c4:	ldr	w0, [sp, #196]
  4043c8:	cmp	w0, #0x0
  4043cc:	b.eq	4043e0 <ferror@plt+0x13e0>  // b.none
  4043d0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4043d4:	add	x0, x0, #0xa80
  4043d8:	ldr	x1, [sp, #184]
  4043dc:	str	x1, [x0]
  4043e0:	add	x0, sp, #0x28
  4043e4:	bl	4039a0 <ferror@plt+0x9a0>
  4043e8:	bl	402f50 <__errno_location@plt>
  4043ec:	mov	x1, x0
  4043f0:	ldr	w0, [sp, #180]
  4043f4:	str	w0, [x1]
  4043f8:	ldr	w0, [sp, #196]
  4043fc:	cmp	w0, #0x0
  404400:	b.ge	404440 <ferror@plt+0x1440>  // b.tcont
  404404:	bl	402f50 <__errno_location@plt>
  404408:	ldr	w0, [x0]
  40440c:	cmp	w0, #0xb
  404410:	b.ne	404440 <ferror@plt+0x1440>  // b.any
  404414:	ldr	d0, [sp, #200]
  404418:	bl	4187b4 <ferror@plt+0x157b4>
  40441c:	ldr	d0, [sp, #200]
  404420:	fadd	d0, d0, d0
  404424:	str	d0, [sp, #200]
  404428:	bl	403cd8 <ferror@plt+0xcd8>
  40442c:	ldr	x0, [sp, #16]
  404430:	sub	x1, x0, #0x1
  404434:	str	x1, [sp, #16]
  404438:	cmp	x0, #0x0
  40443c:	b.ne	40438c <ferror@plt+0x138c>  // b.any
  404440:	ldr	w0, [sp, #196]
  404444:	cmp	w0, #0x0
  404448:	b.ge	404488 <ferror@plt+0x1488>  // b.tcont
  40444c:	bl	402f50 <__errno_location@plt>
  404450:	ldr	w0, [x0]
  404454:	str	w0, [sp, #180]
  404458:	ldr	x0, [sp, #24]
  40445c:	ldr	w0, [x0]
  404460:	bl	402ba0 <close@plt>
  404464:	ldr	x0, [sp, #24]
  404468:	add	x0, x0, #0x4
  40446c:	ldr	w0, [x0]
  404470:	bl	402ba0 <close@plt>
  404474:	bl	402f50 <__errno_location@plt>
  404478:	mov	x1, x0
  40447c:	ldr	w0, [sp, #180]
  404480:	str	w0, [x1]
  404484:	b	4044c4 <ferror@plt+0x14c4>
  404488:	ldr	w0, [sp, #196]
  40448c:	cmp	w0, #0x0
  404490:	b.ne	4044a8 <ferror@plt+0x14a8>  // b.any
  404494:	mov	w0, #0x0                   	// #0
  404498:	bl	402ba0 <close@plt>
  40449c:	mov	w0, #0x1                   	// #1
  4044a0:	bl	402ba0 <close@plt>
  4044a4:	b	4044c4 <ferror@plt+0x14c4>
  4044a8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4044ac:	add	x0, x0, #0xa90
  4044b0:	ldr	w0, [x0]
  4044b4:	add	w1, w0, #0x1
  4044b8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4044bc:	add	x0, x0, #0xa90
  4044c0:	str	w1, [x0]
  4044c4:	ldr	w0, [sp, #196]
  4044c8:	ldp	x29, x30, [sp], #208
  4044cc:	ret
  4044d0:	stp	x29, x30, [sp, #-64]!
  4044d4:	mov	x29, sp
  4044d8:	str	x0, [sp, #24]
  4044dc:	strb	w1, [sp, #23]
  4044e0:	add	x0, sp, #0x34
  4044e4:	ldrb	w1, [sp, #23]
  4044e8:	bl	403e08 <ferror@plt+0xe08>
  4044ec:	str	x0, [sp, #56]
  4044f0:	ldr	x0, [sp, #56]
  4044f4:	cmp	x0, #0x0
  4044f8:	b.ne	404504 <ferror@plt+0x1504>  // b.any
  4044fc:	mov	x0, #0x0                   	// #0
  404500:	b	404634 <ferror@plt+0x1634>
  404504:	ldr	x0, [sp, #56]
  404508:	strb	wzr, [x0, #12]
  40450c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404510:	add	x0, x0, #0x9f0
  404514:	ldr	x0, [x0]
  404518:	cmp	x0, #0x0
  40451c:	b.eq	4045dc <ferror@plt+0x15dc>  // b.none
  404520:	add	x0, sp, #0x28
  404524:	mov	x1, #0x4                   	// #4
  404528:	bl	40432c <ferror@plt+0x132c>
  40452c:	mov	w1, w0
  404530:	ldr	x0, [sp, #56]
  404534:	str	w1, [x0, #8]
  404538:	ldr	x0, [sp, #56]
  40453c:	ldr	w0, [x0, #8]
  404540:	cmp	w0, #0x0
  404544:	b.le	40456c <ferror@plt+0x156c>
  404548:	ldr	w0, [sp, #52]
  40454c:	bl	402ba0 <close@plt>
  404550:	ldr	w0, [sp, #40]
  404554:	bl	402ba0 <close@plt>
  404558:	ldr	w0, [sp, #44]
  40455c:	str	w0, [sp, #52]
  404560:	ldr	x0, [sp, #56]
  404564:	bl	403bac <ferror@plt+0xbac>
  404568:	b	4045dc <ferror@plt+0x15dc>
  40456c:	ldr	x0, [sp, #56]
  404570:	ldr	w0, [x0, #8]
  404574:	cmp	w0, #0x0
  404578:	b.ne	4045dc <ferror@plt+0x15dc>  // b.any
  40457c:	ldr	w0, [sp, #44]
  404580:	bl	402ba0 <close@plt>
  404584:	ldr	w0, [sp, #52]
  404588:	mov	w1, #0x1                   	// #1
  40458c:	bl	4042ec <ferror@plt+0x12ec>
  404590:	ldr	w0, [sp, #40]
  404594:	mov	w1, #0x0                   	// #0
  404598:	bl	4042ec <ferror@plt+0x12ec>
  40459c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4045a0:	add	x0, x0, #0x9f0
  4045a4:	ldr	x3, [x0]
  4045a8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4045ac:	add	x0, x0, #0x9f0
  4045b0:	ldr	x0, [x0]
  4045b4:	mov	x2, #0x0                   	// #0
  4045b8:	mov	x1, x0
  4045bc:	mov	x0, x3
  4045c0:	bl	402f60 <execlp@plt>
  4045c4:	bl	402f50 <__errno_location@plt>
  4045c8:	ldr	w2, [x0]
  4045cc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4045d0:	add	x1, x0, #0x7b0
  4045d4:	mov	w0, w2
  4045d8:	bl	4034b4 <ferror@plt+0x4b4>
  4045dc:	ldr	w2, [sp, #52]
  4045e0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4045e4:	add	x1, x0, #0x7d8
  4045e8:	mov	w0, w2
  4045ec:	bl	402b40 <fdopen@plt>
  4045f0:	mov	x1, x0
  4045f4:	ldr	x0, [sp, #24]
  4045f8:	str	x1, [x0]
  4045fc:	ldr	x0, [sp, #24]
  404600:	ldr	x0, [x0]
  404604:	cmp	x0, #0x0
  404608:	b.ne	404630 <ferror@plt+0x1630>  // b.any
  40460c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404610:	add	x0, x0, #0x7e0
  404614:	bl	402fd0 <gettext@plt>
  404618:	mov	x2, x0
  40461c:	ldr	x0, [sp, #56]
  404620:	add	x0, x0, #0xd
  404624:	mov	x1, x0
  404628:	mov	x0, x2
  40462c:	bl	403554 <ferror@plt+0x554>
  404630:	ldr	x0, [sp, #56]
  404634:	ldp	x29, x30, [sp], #64
  404638:	ret
  40463c:	stp	x29, x30, [sp, #-32]!
  404640:	mov	x29, sp
  404644:	str	x0, [sp, #24]
  404648:	mov	w1, #0x0                   	// #0
  40464c:	ldr	x0, [sp, #24]
  404650:	bl	4044d0 <ferror@plt+0x14d0>
  404654:	ldp	x29, x30, [sp], #32
  404658:	ret
  40465c:	stp	x29, x30, [sp, #-80]!
  404660:	mov	x29, sp
  404664:	stp	x19, x20, [sp, #16]
  404668:	str	x0, [sp, #40]
  40466c:	str	xzr, [sp, #72]
  404670:	ldr	x0, [sp, #40]
  404674:	ldrb	w0, [x0, #12]
  404678:	cmp	w0, #0x1
  40467c:	b.ne	40468c <ferror@plt+0x168c>  // b.any
  404680:	ldr	x0, [sp, #40]
  404684:	ldr	w0, [x0, #8]
  404688:	bl	403ca4 <ferror@plt+0xca4>
  40468c:	ldr	x0, [sp, #40]
  404690:	add	x0, x0, #0xd
  404694:	mov	w1, #0x0                   	// #0
  404698:	bl	402ab0 <open@plt>
  40469c:	str	w0, [sp, #68]
  4046a0:	ldr	w0, [sp, #68]
  4046a4:	cmp	w0, #0x0
  4046a8:	b.ge	4046b4 <ferror@plt+0x16b4>  // b.tcont
  4046ac:	mov	x0, #0x0                   	// #0
  4046b0:	b	404828 <ferror@plt+0x1828>
  4046b4:	add	x0, sp, #0x30
  4046b8:	mov	x1, #0x9                   	// #9
  4046bc:	bl	40432c <ferror@plt+0x132c>
  4046c0:	str	w0, [sp, #64]
  4046c4:	ldr	w0, [sp, #64]
  4046c8:	cmn	w0, #0x1
  4046cc:	b.eq	4046e0 <ferror@plt+0x16e0>  // b.none
  4046d0:	ldr	w0, [sp, #64]
  4046d4:	cmp	w0, #0x0
  4046d8:	b.eq	404750 <ferror@plt+0x1750>  // b.none
  4046dc:	b	4047b4 <ferror@plt+0x17b4>
  4046e0:	bl	402f50 <__errno_location@plt>
  4046e4:	ldr	w0, [x0]
  4046e8:	cmp	w0, #0x18
  4046ec:	b.eq	404734 <ferror@plt+0x1734>  // b.none
  4046f0:	bl	402f50 <__errno_location@plt>
  4046f4:	ldr	w19, [x0]
  4046f8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4046fc:	add	x0, x0, #0x800
  404700:	bl	402fd0 <gettext@plt>
  404704:	mov	x20, x0
  404708:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40470c:	add	x0, x0, #0x9f0
  404710:	ldr	x0, [x0]
  404714:	mov	x1, x0
  404718:	mov	w0, #0x4                   	// #4
  40471c:	bl	415004 <ferror@plt+0x12004>
  404720:	mov	x3, x0
  404724:	mov	x2, x20
  404728:	mov	w1, w19
  40472c:	mov	w0, #0x2                   	// #2
  404730:	bl	402920 <error@plt>
  404734:	ldr	w0, [sp, #68]
  404738:	bl	402ba0 <close@plt>
  40473c:	bl	402f50 <__errno_location@plt>
  404740:	mov	x1, x0
  404744:	mov	w0, #0x18                  	// #24
  404748:	str	w0, [x1]
  40474c:	b	404824 <ferror@plt+0x1824>
  404750:	ldr	w0, [sp, #48]
  404754:	bl	402ba0 <close@plt>
  404758:	mov	w1, #0x0                   	// #0
  40475c:	ldr	w0, [sp, #68]
  404760:	bl	4042ec <ferror@plt+0x12ec>
  404764:	ldr	w0, [sp, #52]
  404768:	mov	w1, #0x1                   	// #1
  40476c:	bl	4042ec <ferror@plt+0x12ec>
  404770:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404774:	add	x0, x0, #0x9f0
  404778:	ldr	x4, [x0]
  40477c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404780:	add	x0, x0, #0x9f0
  404784:	ldr	x1, [x0]
  404788:	mov	x3, #0x0                   	// #0
  40478c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404790:	add	x2, x0, #0x828
  404794:	mov	x0, x4
  404798:	bl	402f60 <execlp@plt>
  40479c:	bl	402f50 <__errno_location@plt>
  4047a0:	ldr	w2, [x0]
  4047a4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4047a8:	add	x1, x0, #0x830
  4047ac:	mov	w0, w2
  4047b0:	bl	4034b4 <ferror@plt+0x4b4>
  4047b4:	ldr	x0, [sp, #40]
  4047b8:	ldr	w1, [sp, #64]
  4047bc:	str	w1, [x0, #8]
  4047c0:	ldr	x0, [sp, #40]
  4047c4:	bl	403bac <ferror@plt+0xbac>
  4047c8:	ldr	w0, [sp, #68]
  4047cc:	bl	402ba0 <close@plt>
  4047d0:	ldr	w0, [sp, #52]
  4047d4:	bl	402ba0 <close@plt>
  4047d8:	ldr	w2, [sp, #48]
  4047dc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4047e0:	add	x1, x0, #0x860
  4047e4:	mov	w0, w2
  4047e8:	bl	402b40 <fdopen@plt>
  4047ec:	str	x0, [sp, #72]
  4047f0:	ldr	x0, [sp, #72]
  4047f4:	cmp	x0, #0x0
  4047f8:	b.ne	404820 <ferror@plt+0x1820>  // b.any
  4047fc:	bl	402f50 <__errno_location@plt>
  404800:	ldr	w0, [x0]
  404804:	str	w0, [sp, #60]
  404808:	ldr	w0, [sp, #48]
  40480c:	bl	402ba0 <close@plt>
  404810:	bl	402f50 <__errno_location@plt>
  404814:	mov	x1, x0
  404818:	ldr	w0, [sp, #60]
  40481c:	str	w0, [x1]
  404820:	nop
  404824:	ldr	x0, [sp, #72]
  404828:	ldp	x19, x20, [sp, #16]
  40482c:	ldp	x29, x30, [sp], #80
  404830:	ret
  404834:	stp	x29, x30, [sp, #-32]!
  404838:	mov	x29, sp
  40483c:	str	x0, [sp, #24]
  404840:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404844:	add	x0, x0, #0x9d0
  404848:	ldr	x1, [x0]
  40484c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404850:	add	x0, x0, #0x9d8
  404854:	ldr	x0, [x0]
  404858:	cmp	x1, x0
  40485c:	b.ne	404890 <ferror@plt+0x1890>  // b.any
  404860:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404864:	add	x0, x0, #0x9c8
  404868:	ldr	x3, [x0]
  40486c:	mov	x2, #0x8                   	// #8
  404870:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404874:	add	x1, x0, #0x9d8
  404878:	mov	x0, x3
  40487c:	bl	4182a4 <ferror@plt+0x152a4>
  404880:	mov	x1, x0
  404884:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404888:	add	x0, x0, #0x9c8
  40488c:	str	x1, [x0]
  404890:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404894:	add	x0, x0, #0x9c8
  404898:	ldr	x1, [x0]
  40489c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4048a0:	add	x0, x0, #0x9d0
  4048a4:	ldr	x0, [x0]
  4048a8:	add	x3, x0, #0x1
  4048ac:	adrp	x2, 433000 <_obstack_memory_used@@Base+0x18b64>
  4048b0:	add	x2, x2, #0x9d0
  4048b4:	str	x3, [x2]
  4048b8:	lsl	x0, x0, #3
  4048bc:	add	x0, x1, x0
  4048c0:	ldr	x1, [sp, #24]
  4048c4:	str	x1, [x0]
  4048c8:	nop
  4048cc:	ldp	x29, x30, [sp], #32
  4048d0:	ret
  4048d4:	stp	x29, x30, [sp, #-224]!
  4048d8:	mov	x29, sp
  4048dc:	str	x19, [sp, #16]
  4048e0:	str	x0, [sp, #40]
  4048e4:	str	wzr, [sp, #212]
  4048e8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4048ec:	add	x0, x0, #0xa80
  4048f0:	str	x0, [sp, #216]
  4048f4:	b	404900 <ferror@plt+0x1900>
  4048f8:	ldr	x0, [sp, #200]
  4048fc:	str	x0, [sp, #216]
  404900:	ldr	x0, [sp, #216]
  404904:	ldr	x0, [x0]
  404908:	str	x0, [sp, #200]
  40490c:	ldr	x0, [sp, #200]
  404910:	add	x0, x0, #0xd
  404914:	ldr	x1, [sp, #40]
  404918:	cmp	x1, x0
  40491c:	b.ne	4048f8 <ferror@plt+0x18f8>  // b.any
  404920:	ldr	x0, [sp, #200]
  404924:	ldrb	w0, [x0, #12]
  404928:	cmp	w0, #0x1
  40492c:	b.ne	40493c <ferror@plt+0x193c>  // b.any
  404930:	ldr	x0, [sp, #200]
  404934:	ldr	w0, [x0, #8]
  404938:	bl	403ca4 <ferror@plt+0xca4>
  40493c:	ldr	x0, [sp, #200]
  404940:	ldr	x0, [x0]
  404944:	str	x0, [sp, #192]
  404948:	add	x0, sp, #0x30
  40494c:	bl	403950 <ferror@plt+0x950>
  404950:	ldr	x0, [sp, #40]
  404954:	bl	402fc0 <unlink@plt>
  404958:	str	w0, [sp, #188]
  40495c:	bl	402f50 <__errno_location@plt>
  404960:	ldr	w0, [x0]
  404964:	str	w0, [sp, #212]
  404968:	ldr	x0, [sp, #216]
  40496c:	ldr	x1, [sp, #192]
  404970:	str	x1, [x0]
  404974:	add	x0, sp, #0x30
  404978:	bl	4039a0 <ferror@plt+0x9a0>
  40497c:	ldr	w0, [sp, #188]
  404980:	cmp	w0, #0x0
  404984:	b.eq	4049bc <ferror@plt+0x19bc>  // b.none
  404988:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40498c:	add	x0, x0, #0x868
  404990:	bl	402fd0 <gettext@plt>
  404994:	mov	x19, x0
  404998:	ldr	x2, [sp, #40]
  40499c:	mov	w1, #0x3                   	// #3
  4049a0:	mov	w0, #0x0                   	// #0
  4049a4:	bl	41513c <ferror@plt+0x1213c>
  4049a8:	mov	x3, x0
  4049ac:	mov	x2, x19
  4049b0:	ldr	w1, [sp, #212]
  4049b4:	mov	w0, #0x0                   	// #0
  4049b8:	bl	402920 <error@plt>
  4049bc:	ldr	x0, [sp, #192]
  4049c0:	cmp	x0, #0x0
  4049c4:	b.ne	4049d8 <ferror@plt+0x19d8>  // b.any
  4049c8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4049cc:	add	x0, x0, #0x4b8
  4049d0:	ldr	x1, [sp, #216]
  4049d4:	str	x1, [x0]
  4049d8:	ldr	x0, [sp, #200]
  4049dc:	bl	402d20 <free@plt>
  4049e0:	nop
  4049e4:	ldr	x19, [sp, #16]
  4049e8:	ldp	x29, x30, [sp], #224
  4049ec:	ret
  4049f0:	stp	x29, x30, [sp, #-48]!
  4049f4:	mov	x29, sp
  4049f8:	str	x0, [sp, #24]
  4049fc:	str	x1, [sp, #16]
  404a00:	ldr	x0, [sp, #24]
  404a04:	str	x0, [sp, #40]
  404a08:	ldr	x0, [sp, #16]
  404a0c:	str	x0, [sp, #32]
  404a10:	ldr	x0, [sp, #40]
  404a14:	ldr	x2, [x0]
  404a18:	ldr	x0, [sp, #32]
  404a1c:	ldr	x0, [x0]
  404a20:	mov	x1, x0
  404a24:	mov	x0, x2
  404a28:	bl	402cd0 <strcmp@plt>
  404a2c:	ldp	x29, x30, [sp], #48
  404a30:	ret
  404a34:	stp	x29, x30, [sp, #-80]!
  404a38:	mov	x29, sp
  404a3c:	str	x19, [sp, #16]
  404a40:	str	xzr, [sp, #72]
  404a44:	b	404b58 <ferror@plt+0x1b58>
  404a48:	ldr	x0, [sp, #72]
  404a4c:	and	w0, w0, #0xff
  404a50:	bl	40321c <ferror@plt+0x21c>
  404a54:	and	w2, w0, #0xff
  404a58:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404a5c:	add	x1, x0, #0x5c0
  404a60:	ldr	x0, [sp, #72]
  404a64:	add	x0, x1, x0
  404a68:	mov	w1, w2
  404a6c:	strb	w1, [x0]
  404a70:	bl	402ce0 <__ctype_b_loc@plt>
  404a74:	ldr	x1, [x0]
  404a78:	ldr	x0, [sp, #72]
  404a7c:	sxtw	x0, w0
  404a80:	lsl	x0, x0, #1
  404a84:	add	x0, x1, x0
  404a88:	ldrh	w0, [x0]
  404a8c:	and	w0, w0, #0x4000
  404a90:	cmp	w0, #0x0
  404a94:	cset	w0, eq  // eq = none
  404a98:	and	w2, w0, #0xff
  404a9c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404aa0:	add	x1, x0, #0x6c0
  404aa4:	ldr	x0, [sp, #72]
  404aa8:	add	x0, x1, x0
  404aac:	mov	w1, w2
  404ab0:	strb	w1, [x0]
  404ab4:	bl	402ce0 <__ctype_b_loc@plt>
  404ab8:	ldr	x1, [x0]
  404abc:	ldr	x0, [sp, #72]
  404ac0:	sxtw	x0, w0
  404ac4:	lsl	x0, x0, #1
  404ac8:	add	x0, x1, x0
  404acc:	ldrh	w0, [x0]
  404ad0:	and	w0, w0, #0x8
  404ad4:	cmp	w0, #0x0
  404ad8:	b.ne	404b04 <ferror@plt+0x1b04>  // b.any
  404adc:	ldr	x0, [sp, #72]
  404ae0:	and	w0, w0, #0xff
  404ae4:	bl	40321c <ferror@plt+0x21c>
  404ae8:	and	w0, w0, #0xff
  404aec:	eor	w0, w0, #0x1
  404af0:	and	w0, w0, #0xff
  404af4:	cmp	w0, #0x0
  404af8:	b.eq	404b04 <ferror@plt+0x1b04>  // b.none
  404afc:	mov	w0, #0x1                   	// #1
  404b00:	b	404b08 <ferror@plt+0x1b08>
  404b04:	mov	w0, #0x0                   	// #0
  404b08:	and	w0, w0, #0x1
  404b0c:	and	w2, w0, #0xff
  404b10:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404b14:	add	x1, x0, #0x7c0
  404b18:	ldr	x0, [sp, #72]
  404b1c:	add	x0, x1, x0
  404b20:	mov	w1, w2
  404b24:	strb	w1, [x0]
  404b28:	ldr	x0, [sp, #72]
  404b2c:	bl	402a90 <toupper@plt>
  404b30:	and	w2, w0, #0xff
  404b34:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404b38:	add	x1, x0, #0x8c0
  404b3c:	ldr	x0, [sp, #72]
  404b40:	add	x0, x1, x0
  404b44:	mov	w1, w2
  404b48:	strb	w1, [x0]
  404b4c:	ldr	x0, [sp, #72]
  404b50:	add	x0, x0, #0x1
  404b54:	str	x0, [sp, #72]
  404b58:	ldr	x0, [sp, #72]
  404b5c:	cmp	x0, #0xff
  404b60:	b.ls	404a48 <ferror@plt+0x1a48>  // b.plast
  404b64:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404b68:	add	x0, x0, #0x599
  404b6c:	ldrb	w0, [x0]
  404b70:	cmp	w0, #0x0
  404b74:	b.eq	404ce8 <ferror@plt+0x1ce8>  // b.none
  404b78:	str	xzr, [sp, #72]
  404b7c:	b	404cc0 <ferror@plt+0x1cc0>
  404b80:	ldr	x0, [sp, #72]
  404b84:	mov	w1, w0
  404b88:	mov	w0, #0xe                   	// #14
  404b8c:	movk	w0, #0x2, lsl #16
  404b90:	add	w0, w1, w0
  404b94:	bl	402a60 <nl_langinfo@plt>
  404b98:	str	x0, [sp, #48]
  404b9c:	ldr	x0, [sp, #48]
  404ba0:	bl	4028f0 <strlen@plt>
  404ba4:	str	x0, [sp, #40]
  404ba8:	ldr	x0, [sp, #40]
  404bac:	add	x0, x0, #0x1
  404bb0:	bl	4183dc <ferror@plt+0x153dc>
  404bb4:	str	x0, [sp, #32]
  404bb8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404bbc:	add	x1, x0, #0x3e8
  404bc0:	ldr	x0, [sp, #72]
  404bc4:	lsl	x0, x0, #4
  404bc8:	add	x0, x1, x0
  404bcc:	ldr	x1, [sp, #32]
  404bd0:	str	x1, [x0]
  404bd4:	ldr	x0, [sp, #72]
  404bd8:	add	w0, w0, #0x1
  404bdc:	mov	w2, w0
  404be0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404be4:	add	x1, x0, #0x3e8
  404be8:	ldr	x0, [sp, #72]
  404bec:	lsl	x0, x0, #4
  404bf0:	add	x0, x1, x0
  404bf4:	str	w2, [x0, #8]
  404bf8:	str	xzr, [sp, #56]
  404bfc:	ldr	x0, [sp, #56]
  404c00:	str	x0, [sp, #64]
  404c04:	b	404c94 <ferror@plt+0x1c94>
  404c08:	bl	402ce0 <__ctype_b_loc@plt>
  404c0c:	ldr	x19, [x0]
  404c10:	ldr	x1, [sp, #48]
  404c14:	ldr	x0, [sp, #64]
  404c18:	add	x0, x1, x0
  404c1c:	ldrb	w0, [x0]
  404c20:	bl	403208 <ferror@plt+0x208>
  404c24:	and	w0, w0, #0xff
  404c28:	and	x0, x0, #0xff
  404c2c:	lsl	x0, x0, #1
  404c30:	add	x0, x19, x0
  404c34:	ldrh	w0, [x0]
  404c38:	and	w0, w0, #0x1
  404c3c:	cmp	w0, #0x0
  404c40:	b.ne	404c88 <ferror@plt+0x1c88>  // b.any
  404c44:	ldr	x1, [sp, #48]
  404c48:	ldr	x0, [sp, #64]
  404c4c:	add	x0, x1, x0
  404c50:	ldrb	w0, [x0]
  404c54:	bl	403208 <ferror@plt+0x208>
  404c58:	and	w0, w0, #0xff
  404c5c:	mov	w3, w0
  404c60:	ldr	x0, [sp, #56]
  404c64:	add	x1, x0, #0x1
  404c68:	str	x1, [sp, #56]
  404c6c:	ldr	x1, [sp, #32]
  404c70:	add	x0, x1, x0
  404c74:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  404c78:	add	x2, x1, #0x8c0
  404c7c:	sxtw	x1, w3
  404c80:	ldrb	w1, [x2, x1]
  404c84:	strb	w1, [x0]
  404c88:	ldr	x0, [sp, #64]
  404c8c:	add	x0, x0, #0x1
  404c90:	str	x0, [sp, #64]
  404c94:	ldr	x1, [sp, #64]
  404c98:	ldr	x0, [sp, #40]
  404c9c:	cmp	x1, x0
  404ca0:	b.cc	404c08 <ferror@plt+0x1c08>  // b.lo, b.ul, b.last
  404ca4:	ldr	x1, [sp, #32]
  404ca8:	ldr	x0, [sp, #56]
  404cac:	add	x0, x1, x0
  404cb0:	strb	wzr, [x0]
  404cb4:	ldr	x0, [sp, #72]
  404cb8:	add	x0, x0, #0x1
  404cbc:	str	x0, [sp, #72]
  404cc0:	ldr	x0, [sp, #72]
  404cc4:	cmp	x0, #0xb
  404cc8:	b.ls	404b80 <ferror@plt+0x1b80>  // b.plast
  404ccc:	adrp	x0, 404000 <ferror@plt+0x1000>
  404cd0:	add	x3, x0, #0x9f0
  404cd4:	mov	x2, #0x10                  	// #16
  404cd8:	mov	x1, #0xc                   	// #12
  404cdc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404ce0:	add	x0, x0, #0x3e8
  404ce4:	bl	402990 <qsort@plt>
  404ce8:	nop
  404cec:	ldr	x19, [sp, #16]
  404cf0:	ldp	x29, x30, [sp], #80
  404cf4:	ret
  404cf8:	stp	x29, x30, [sp, #-96]!
  404cfc:	mov	x29, sp
  404d00:	stp	x19, x20, [sp, #16]
  404d04:	str	w0, [sp, #44]
  404d08:	strb	w1, [sp, #43]
  404d0c:	str	x2, [sp, #32]
  404d10:	add	x0, sp, #0x50
  404d14:	mov	x4, #0x0                   	// #0
  404d18:	mov	x3, x0
  404d1c:	mov	w2, #0xa                   	// #10
  404d20:	mov	x1, #0x0                   	// #0
  404d24:	ldr	x0, [sp, #32]
  404d28:	bl	419084 <ferror@plt+0x16084>
  404d2c:	str	w0, [sp, #92]
  404d30:	add	x0, sp, #0x40
  404d34:	mov	x1, x0
  404d38:	mov	w0, #0x7                   	// #7
  404d3c:	bl	402e20 <getrlimit@plt>
  404d40:	cmp	w0, #0x0
  404d44:	b.ne	404d54 <ferror@plt+0x1d54>  // b.any
  404d48:	ldr	x0, [sp, #64]
  404d4c:	sub	w0, w0, #0x3
  404d50:	b	404d58 <ferror@plt+0x1d58>
  404d54:	mov	w0, #0x11                  	// #17
  404d58:	str	w0, [sp, #88]
  404d5c:	ldr	w0, [sp, #92]
  404d60:	cmp	w0, #0x0
  404d64:	b.ne	404e6c <ferror@plt+0x1e6c>  // b.any
  404d68:	ldr	x0, [sp, #80]
  404d6c:	mov	w1, w0
  404d70:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404d74:	add	x0, x0, #0x4b4
  404d78:	str	w1, [x0]
  404d7c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404d80:	add	x0, x0, #0x4b4
  404d84:	ldr	w0, [x0]
  404d88:	mov	w1, w0
  404d8c:	ldr	x0, [sp, #80]
  404d90:	cmp	x1, x0
  404d94:	b.eq	404da4 <ferror@plt+0x1da4>  // b.none
  404d98:	mov	w0, #0x1                   	// #1
  404d9c:	str	w0, [sp, #92]
  404da0:	b	404e6c <ferror@plt+0x1e6c>
  404da4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404da8:	add	x0, x0, #0x4b4
  404dac:	ldr	w0, [x0]
  404db0:	cmp	w0, #0x1
  404db4:	b.hi	404e4c <ferror@plt+0x1e4c>  // b.pmore
  404db8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404dbc:	add	x0, x0, #0x888
  404dc0:	bl	402fd0 <gettext@plt>
  404dc4:	mov	x20, x0
  404dc8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404dcc:	add	x1, x0, #0x220
  404dd0:	ldrsw	x0, [sp, #44]
  404dd4:	lsl	x0, x0, #5
  404dd8:	add	x0, x1, x0
  404ddc:	ldr	x19, [x0]
  404de0:	ldr	x0, [sp, #32]
  404de4:	bl	415354 <ferror@plt+0x12354>
  404de8:	mov	x4, x0
  404dec:	mov	x3, x19
  404df0:	mov	x2, x20
  404df4:	mov	w1, #0x0                   	// #0
  404df8:	mov	w0, #0x0                   	// #0
  404dfc:	bl	402920 <error@plt>
  404e00:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404e04:	add	x0, x0, #0x8a8
  404e08:	bl	402fd0 <gettext@plt>
  404e0c:	mov	x20, x0
  404e10:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404e14:	add	x1, x0, #0x220
  404e18:	ldrsw	x0, [sp, #44]
  404e1c:	lsl	x0, x0, #5
  404e20:	add	x0, x1, x0
  404e24:	ldr	x19, [x0]
  404e28:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404e2c:	add	x0, x0, #0x8c8
  404e30:	bl	415354 <ferror@plt+0x12354>
  404e34:	mov	x4, x0
  404e38:	mov	x3, x19
  404e3c:	mov	x2, x20
  404e40:	mov	w1, #0x0                   	// #0
  404e44:	mov	w0, #0x2                   	// #2
  404e48:	bl	402920 <error@plt>
  404e4c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  404e50:	add	x0, x0, #0x4b4
  404e54:	ldr	w0, [x0]
  404e58:	ldr	w1, [sp, #88]
  404e5c:	cmp	w1, w0
  404e60:	b.cs	404f2c <ferror@plt+0x1f2c>  // b.hs, b.nlast
  404e64:	mov	w0, #0x1                   	// #1
  404e68:	str	w0, [sp, #92]
  404e6c:	ldr	w0, [sp, #92]
  404e70:	cmp	w0, #0x1
  404e74:	b.ne	404f10 <ferror@plt+0x1f10>  // b.any
  404e78:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404e7c:	add	x0, x0, #0x8d0
  404e80:	bl	402fd0 <gettext@plt>
  404e84:	mov	x20, x0
  404e88:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404e8c:	add	x1, x0, #0x220
  404e90:	ldrsw	x0, [sp, #44]
  404e94:	lsl	x0, x0, #5
  404e98:	add	x0, x1, x0
  404e9c:	ldr	x19, [x0]
  404ea0:	ldr	x0, [sp, #32]
  404ea4:	bl	415354 <ferror@plt+0x12354>
  404ea8:	mov	x4, x0
  404eac:	mov	x3, x19
  404eb0:	mov	x2, x20
  404eb4:	mov	w1, #0x0                   	// #0
  404eb8:	mov	w0, #0x0                   	// #0
  404ebc:	bl	402920 <error@plt>
  404ec0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404ec4:	add	x0, x0, #0x8f0
  404ec8:	bl	402fd0 <gettext@plt>
  404ecc:	mov	x20, x0
  404ed0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404ed4:	add	x1, x0, #0x220
  404ed8:	ldrsw	x0, [sp, #44]
  404edc:	lsl	x0, x0, #5
  404ee0:	add	x0, x1, x0
  404ee4:	ldr	x19, [x0]
  404ee8:	add	x0, sp, #0x30
  404eec:	mov	x1, x0
  404ef0:	ldr	w0, [sp, #88]
  404ef4:	bl	412474 <ferror@plt+0xf474>
  404ef8:	mov	x4, x0
  404efc:	mov	x3, x19
  404f00:	mov	x2, x20
  404f04:	mov	w1, #0x0                   	// #0
  404f08:	mov	w0, #0x2                   	// #2
  404f0c:	bl	402920 <error@plt>
  404f10:	ldr	x4, [sp, #32]
  404f14:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404f18:	add	x3, x0, #0x220
  404f1c:	ldrb	w2, [sp, #43]
  404f20:	ldr	w1, [sp, #44]
  404f24:	ldr	w0, [sp, #92]
  404f28:	bl	418f74 <ferror@plt+0x15f74>
  404f2c:	nop
  404f30:	ldp	x19, x20, [sp, #16]
  404f34:	ldp	x29, x30, [sp], #96
  404f38:	ret
  404f3c:	stp	x29, x30, [sp, #-64]!
  404f40:	mov	x29, sp
  404f44:	str	w0, [sp, #28]
  404f48:	strb	w1, [sp, #27]
  404f4c:	str	x2, [sp, #16]
  404f50:	add	x2, sp, #0x28
  404f54:	add	x1, sp, #0x20
  404f58:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  404f5c:	add	x4, x0, #0x920
  404f60:	mov	x3, x2
  404f64:	mov	w2, #0xa                   	// #10
  404f68:	ldr	x0, [sp, #16]
  404f6c:	bl	419084 <ferror@plt+0x16084>
  404f70:	str	w0, [sp, #60]
  404f74:	ldr	w0, [sp, #60]
  404f78:	cmp	w0, #0x0
  404f7c:	b.ne	404fc0 <ferror@plt+0x1fc0>  // b.any
  404f80:	ldr	x0, [sp, #32]
  404f84:	sub	x0, x0, #0x1
  404f88:	ldrb	w0, [x0]
  404f8c:	sub	w0, w0, #0x30
  404f90:	cmp	w0, #0x9
  404f94:	b.hi	404fc0 <ferror@plt+0x1fc0>  // b.pmore
  404f98:	ldr	x1, [sp, #40]
  404f9c:	mov	x0, #0x3fffffffffffff      	// #18014398509481983
  404fa0:	cmp	x1, x0
  404fa4:	b.hi	404fb8 <ferror@plt+0x1fb8>  // b.pmore
  404fa8:	ldr	x0, [sp, #40]
  404fac:	lsl	x0, x0, #10
  404fb0:	str	x0, [sp, #40]
  404fb4:	b	404fc0 <ferror@plt+0x1fc0>
  404fb8:	mov	w0, #0x1                   	// #1
  404fbc:	str	w0, [sp, #60]
  404fc0:	ldr	w0, [sp, #60]
  404fc4:	cmp	w0, #0x2
  404fc8:	b.ne	405070 <ferror@plt+0x2070>  // b.any
  404fcc:	ldr	x0, [sp, #32]
  404fd0:	sub	x0, x0, #0x1
  404fd4:	ldrb	w0, [x0]
  404fd8:	sub	w0, w0, #0x30
  404fdc:	cmp	w0, #0x9
  404fe0:	b.hi	405070 <ferror@plt+0x2070>  // b.pmore
  404fe4:	ldr	x0, [sp, #32]
  404fe8:	add	x0, x0, #0x1
  404fec:	ldrb	w0, [x0]
  404ff0:	cmp	w0, #0x0
  404ff4:	b.ne	405070 <ferror@plt+0x2070>  // b.any
  404ff8:	ldr	x0, [sp, #32]
  404ffc:	ldrb	w0, [x0]
  405000:	cmp	w0, #0x25
  405004:	b.eq	405018 <ferror@plt+0x2018>  // b.none
  405008:	cmp	w0, #0x62
  40500c:	b.ne	405074 <ferror@plt+0x2074>  // b.any
  405010:	str	wzr, [sp, #60]
  405014:	b	405074 <ferror@plt+0x2074>
  405018:	bl	412bc4 <ferror@plt+0xfbc4>
  40501c:	fmov	d1, d0
  405020:	ldr	d0, [sp, #40]
  405024:	ucvtf	d0, d0
  405028:	fmul	d0, d1, d0
  40502c:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  405030:	fmov	d1, x0
  405034:	fdiv	d0, d0, d1
  405038:	str	d0, [sp, #48]
  40503c:	ldr	d0, [sp, #48]
  405040:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  405044:	fmov	d1, x0
  405048:	fcmpe	d0, d1
  40504c:	b.pl	405064 <ferror@plt+0x2064>  // b.nfrst
  405050:	ldr	d0, [sp, #48]
  405054:	fcvtzu	d0, d0
  405058:	str	d0, [sp, #40]
  40505c:	str	wzr, [sp, #60]
  405060:	b	405074 <ferror@plt+0x2074>
  405064:	mov	w0, #0x1                   	// #1
  405068:	str	w0, [sp, #60]
  40506c:	b	405074 <ferror@plt+0x2074>
  405070:	nop
  405074:	ldr	w0, [sp, #60]
  405078:	cmp	w0, #0x0
  40507c:	b.ne	405110 <ferror@plt+0x2110>  // b.any
  405080:	ldr	x1, [sp, #40]
  405084:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405088:	add	x0, x0, #0x9c0
  40508c:	ldr	x0, [x0]
  405090:	cmp	x1, x0
  405094:	b.cc	40512c <ferror@plt+0x212c>  // b.lo, b.ul, b.last
  405098:	ldr	x1, [sp, #40]
  40509c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4050a0:	add	x0, x0, #0x9c0
  4050a4:	str	x1, [x0]
  4050a8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4050ac:	add	x0, x0, #0x9c0
  4050b0:	ldr	x1, [x0]
  4050b4:	ldr	x0, [sp, #40]
  4050b8:	cmp	x1, x0
  4050bc:	b.ne	405108 <ferror@plt+0x2108>  // b.any
  4050c0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4050c4:	add	x0, x0, #0x4b4
  4050c8:	ldr	w0, [x0]
  4050cc:	mov	w1, w0
  4050d0:	mov	x0, x1
  4050d4:	lsl	x0, x0, #4
  4050d8:	add	x0, x0, x1
  4050dc:	lsl	x0, x0, #1
  4050e0:	mov	x1, x0
  4050e4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4050e8:	add	x0, x0, #0x9c0
  4050ec:	ldr	x0, [x0]
  4050f0:	cmp	x1, x0
  4050f4:	csel	x1, x1, x0, cs  // cs = hs, nlast
  4050f8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4050fc:	add	x0, x0, #0x9c0
  405100:	str	x1, [x0]
  405104:	b	405130 <ferror@plt+0x2130>
  405108:	mov	w0, #0x1                   	// #1
  40510c:	str	w0, [sp, #60]
  405110:	ldr	x4, [sp, #16]
  405114:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  405118:	add	x3, x0, #0x220
  40511c:	ldrb	w2, [sp, #27]
  405120:	ldr	w1, [sp, #28]
  405124:	ldr	w0, [sp, #60]
  405128:	bl	418f74 <ferror@plt+0x15f74>
  40512c:	nop
  405130:	ldp	x29, x30, [sp], #64
  405134:	ret
  405138:	stp	x29, x30, [sp, #-48]!
  40513c:	mov	x29, sp
  405140:	str	w0, [sp, #28]
  405144:	strb	w1, [sp, #27]
  405148:	str	x2, [sp, #16]
  40514c:	add	x1, sp, #0x20
  405150:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  405154:	add	x4, x0, #0x18
  405158:	mov	x3, x1
  40515c:	mov	w2, #0xa                   	// #10
  405160:	mov	x1, #0x0                   	// #0
  405164:	ldr	x0, [sp, #16]
  405168:	bl	4188e8 <ferror@plt+0x158e8>
  40516c:	str	w0, [sp, #44]
  405170:	ldr	w0, [sp, #44]
  405174:	cmp	w0, #0x1
  405178:	b.ne	405184 <ferror@plt+0x2184>  // b.any
  40517c:	mov	x0, #0xffffffffffffffff    	// #-1
  405180:	b	4051d8 <ferror@plt+0x21d8>
  405184:	ldr	w0, [sp, #44]
  405188:	cmp	w0, #0x0
  40518c:	b.eq	4051ac <ferror@plt+0x21ac>  // b.none
  405190:	ldr	x4, [sp, #16]
  405194:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  405198:	add	x3, x0, #0x220
  40519c:	ldrb	w2, [sp, #27]
  4051a0:	ldr	w1, [sp, #28]
  4051a4:	ldr	w0, [sp, #44]
  4051a8:	bl	418f74 <ferror@plt+0x15f74>
  4051ac:	ldr	x0, [sp, #32]
  4051b0:	cmp	x0, #0x0
  4051b4:	b.ne	4051d4 <ferror@plt+0x21d4>  // b.any
  4051b8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4051bc:	add	x0, x0, #0x930
  4051c0:	bl	402fd0 <gettext@plt>
  4051c4:	mov	x2, x0
  4051c8:	mov	w1, #0x0                   	// #0
  4051cc:	mov	w0, #0x2                   	// #2
  4051d0:	bl	402920 <error@plt>
  4051d4:	ldr	x0, [sp, #32]
  4051d8:	ldp	x29, x30, [sp], #48
  4051dc:	ret
  4051e0:	stp	x29, x30, [sp, #-64]!
  4051e4:	mov	x29, sp
  4051e8:	mov	x0, #0xffffffffffffffff    	// #-1
  4051ec:	str	x0, [sp, #56]
  4051f0:	add	x0, sp, #0x10
  4051f4:	mov	x1, x0
  4051f8:	mov	w0, #0x2                   	// #2
  4051fc:	bl	402e20 <getrlimit@plt>
  405200:	cmp	w0, #0x0
  405204:	b.ne	405220 <ferror@plt+0x2220>  // b.any
  405208:	ldr	x0, [sp, #16]
  40520c:	ldr	x1, [sp, #56]
  405210:	cmp	x1, x0
  405214:	b.ls	405220 <ferror@plt+0x2220>  // b.plast
  405218:	ldr	x0, [sp, #16]
  40521c:	str	x0, [sp, #56]
  405220:	add	x0, sp, #0x10
  405224:	mov	x1, x0
  405228:	mov	w0, #0x9                   	// #9
  40522c:	bl	402e20 <getrlimit@plt>
  405230:	cmp	w0, #0x0
  405234:	b.ne	405250 <ferror@plt+0x2250>  // b.any
  405238:	ldr	x0, [sp, #16]
  40523c:	ldr	x1, [sp, #56]
  405240:	cmp	x1, x0
  405244:	b.ls	405250 <ferror@plt+0x2250>  // b.plast
  405248:	ldr	x0, [sp, #16]
  40524c:	str	x0, [sp, #56]
  405250:	ldr	x0, [sp, #56]
  405254:	lsr	x0, x0, #1
  405258:	str	x0, [sp, #56]
  40525c:	add	x0, sp, #0x10
  405260:	mov	x1, x0
  405264:	mov	w0, #0x5                   	// #5
  405268:	bl	402e20 <getrlimit@plt>
  40526c:	cmp	w0, #0x0
  405270:	b.ne	4052ac <ferror@plt+0x22ac>  // b.any
  405274:	ldr	x0, [sp, #16]
  405278:	lsr	x1, x0, #4
  40527c:	mov	x0, x1
  405280:	lsl	x0, x0, #4
  405284:	sub	x0, x0, x1
  405288:	ldr	x1, [sp, #56]
  40528c:	cmp	x1, x0
  405290:	b.ls	4052ac <ferror@plt+0x22ac>  // b.plast
  405294:	ldr	x0, [sp, #16]
  405298:	lsr	x1, x0, #4
  40529c:	mov	x0, x1
  4052a0:	lsl	x0, x0, #4
  4052a4:	sub	x0, x0, x1
  4052a8:	str	x0, [sp, #56]
  4052ac:	bl	412c4c <ferror@plt+0xfc4c>
  4052b0:	str	d0, [sp, #48]
  4052b4:	bl	412bc4 <ferror@plt+0xfbc4>
  4052b8:	str	d0, [sp, #40]
  4052bc:	fmov	d0, #8.000000000000000000e+00
  4052c0:	ldr	d1, [sp, #40]
  4052c4:	fdiv	d0, d1, d0
  4052c8:	ldr	d1, [sp, #48]
  4052cc:	fcmpe	d1, d0
  4052d0:	b.le	4052dc <ferror@plt+0x22dc>
  4052d4:	ldr	d0, [sp, #48]
  4052d8:	b	4052e8 <ferror@plt+0x22e8>
  4052dc:	fmov	d0, #8.000000000000000000e+00
  4052e0:	ldr	d1, [sp, #40]
  4052e4:	fdiv	d0, d1, d0
  4052e8:	str	d0, [sp, #32]
  4052ec:	ldr	d1, [sp, #40]
  4052f0:	fmov	d0, #7.500000000000000000e-01
  4052f4:	fmul	d1, d1, d0
  4052f8:	ldr	d0, [sp, #56]
  4052fc:	ucvtf	d0, d0
  405300:	fcmpe	d1, d0
  405304:	b.pl	40531c <ferror@plt+0x231c>  // b.nfrst
  405308:	ldr	d1, [sp, #40]
  40530c:	fmov	d0, #7.500000000000000000e-01
  405310:	fmul	d0, d1, d0
  405314:	fcvtzu	d0, d0
  405318:	str	d0, [sp, #56]
  40531c:	ldr	d0, [sp, #56]
  405320:	ucvtf	d0, d0
  405324:	ldr	d1, [sp, #32]
  405328:	fcmpe	d1, d0
  40532c:	b.pl	40533c <ferror@plt+0x233c>  // b.nfrst
  405330:	ldr	d0, [sp, #32]
  405334:	fcvtzu	d0, d0
  405338:	str	d0, [sp, #56]
  40533c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405340:	add	x0, x0, #0x4b4
  405344:	ldr	w0, [x0]
  405348:	mov	w1, w0
  40534c:	mov	x0, x1
  405350:	lsl	x0, x0, #4
  405354:	add	x0, x0, x1
  405358:	lsl	x0, x0, #1
  40535c:	ldr	x2, [sp, #56]
  405360:	ldr	x1, [sp, #56]
  405364:	cmp	x2, x0
  405368:	csel	x0, x1, x0, cs  // cs = hs, nlast
  40536c:	ldp	x29, x30, [sp], #64
  405370:	ret
  405374:	stp	x29, x30, [sp, #-240]!
  405378:	mov	x29, sp
  40537c:	str	x0, [sp, #56]
  405380:	str	x1, [sp, #48]
  405384:	str	x2, [sp, #40]
  405388:	str	x3, [sp, #32]
  40538c:	str	x4, [sp, #24]
  405390:	ldr	x0, [sp, #24]
  405394:	add	x0, x0, #0x1
  405398:	str	x0, [sp, #208]
  40539c:	ldr	x0, [sp, #208]
  4053a0:	add	x0, x0, #0x1
  4053a4:	str	x0, [sp, #232]
  4053a8:	str	xzr, [sp, #224]
  4053ac:	b	4055bc <ferror@plt+0x25bc>
  4053b0:	ldr	x1, [sp, #224]
  4053b4:	ldr	x0, [sp, #48]
  4053b8:	cmp	x1, x0
  4053bc:	b.cs	4053fc <ferror@plt+0x23fc>  // b.hs, b.nlast
  4053c0:	ldr	x0, [sp, #224]
  4053c4:	lsl	x0, x0, #3
  4053c8:	ldr	x1, [sp, #56]
  4053cc:	add	x0, x1, x0
  4053d0:	ldr	x0, [x0]
  4053d4:	bl	402a10 <fileno@plt>
  4053d8:	mov	w2, w0
  4053dc:	add	x0, sp, #0x48
  4053e0:	mov	x1, x0
  4053e4:	mov	w0, w2
  4053e8:	bl	41bdc0 <_obstack_memory_used@@Base+0x1924>
  4053ec:	cmp	w0, #0x0
  4053f0:	cset	w0, ne  // ne = any
  4053f4:	and	w0, w0, #0xff
  4053f8:	b	405470 <ferror@plt+0x2470>
  4053fc:	ldr	x0, [sp, #224]
  405400:	lsl	x0, x0, #3
  405404:	ldr	x1, [sp, #40]
  405408:	add	x0, x1, x0
  40540c:	ldr	x2, [x0]
  405410:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  405414:	add	x1, x0, #0x720
  405418:	mov	x0, x2
  40541c:	bl	402cd0 <strcmp@plt>
  405420:	cmp	w0, #0x0
  405424:	b.ne	405448 <ferror@plt+0x2448>  // b.any
  405428:	add	x0, sp, #0x48
  40542c:	mov	x1, x0
  405430:	mov	w0, #0x0                   	// #0
  405434:	bl	41bdc0 <_obstack_memory_used@@Base+0x1924>
  405438:	cmp	w0, #0x0
  40543c:	cset	w0, ne  // ne = any
  405440:	and	w0, w0, #0xff
  405444:	b	405470 <ferror@plt+0x2470>
  405448:	ldr	x0, [sp, #224]
  40544c:	lsl	x0, x0, #3
  405450:	ldr	x1, [sp, #40]
  405454:	add	x0, x1, x0
  405458:	ldr	x0, [x0]
  40545c:	add	x1, sp, #0x48
  405460:	bl	41bdb0 <_obstack_memory_used@@Base+0x1914>
  405464:	cmp	w0, #0x0
  405468:	cset	w0, ne  // ne = any
  40546c:	and	w0, w0, #0xff
  405470:	cmp	w0, #0x0
  405474:	b.eq	4054a8 <ferror@plt+0x24a8>  // b.none
  405478:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40547c:	add	x0, x0, #0x958
  405480:	bl	402fd0 <gettext@plt>
  405484:	mov	x2, x0
  405488:	ldr	x0, [sp, #224]
  40548c:	lsl	x0, x0, #3
  405490:	ldr	x1, [sp, #40]
  405494:	add	x0, x1, x0
  405498:	ldr	x0, [x0]
  40549c:	mov	x1, x0
  4054a0:	mov	x0, x2
  4054a4:	bl	403554 <ferror@plt+0x554>
  4054a8:	ldr	w0, [sp, #88]
  4054ac:	and	w0, w0, #0xf000
  4054b0:	cmp	w0, #0x8, lsl #12
  4054b4:	b.ne	4054c4 <ferror@plt+0x24c4>  // b.any
  4054b8:	ldr	x0, [sp, #120]
  4054bc:	str	x0, [sp, #216]
  4054c0:	b	4054f0 <ferror@plt+0x24f0>
  4054c4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4054c8:	add	x0, x0, #0x9c0
  4054cc:	ldr	x0, [x0]
  4054d0:	cmp	x0, #0x0
  4054d4:	b.eq	4054e8 <ferror@plt+0x24e8>  // b.none
  4054d8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4054dc:	add	x0, x0, #0x9c0
  4054e0:	ldr	x0, [x0]
  4054e4:	b	4055d0 <ferror@plt+0x25d0>
  4054e8:	mov	x0, #0x20000               	// #131072
  4054ec:	str	x0, [sp, #216]
  4054f0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4054f4:	add	x0, x0, #0xbc8
  4054f8:	ldr	x0, [x0]
  4054fc:	cmp	x0, #0x0
  405500:	b.ne	405544 <ferror@plt+0x2544>  // b.any
  405504:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405508:	add	x0, x0, #0x9c0
  40550c:	ldr	x1, [x0]
  405510:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405514:	add	x0, x0, #0xbc8
  405518:	str	x1, [x0]
  40551c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405520:	add	x0, x0, #0xbc8
  405524:	ldr	x0, [x0]
  405528:	cmp	x0, #0x0
  40552c:	b.ne	405544 <ferror@plt+0x2544>  // b.any
  405530:	bl	4051e0 <ferror@plt+0x21e0>
  405534:	mov	x1, x0
  405538:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40553c:	add	x0, x0, #0xbc8
  405540:	str	x1, [x0]
  405544:	ldr	x1, [sp, #216]
  405548:	ldr	x0, [sp, #208]
  40554c:	mul	x0, x1, x0
  405550:	add	x0, x0, #0x1
  405554:	str	x0, [sp, #200]
  405558:	ldr	x1, [sp, #200]
  40555c:	ldr	x0, [sp, #208]
  405560:	udiv	x1, x1, x0
  405564:	ldr	x0, [sp, #216]
  405568:	cmp	x1, x0
  40556c:	b.ne	405590 <ferror@plt+0x2590>  // b.any
  405570:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405574:	add	x0, x0, #0xbc8
  405578:	ldr	x1, [x0]
  40557c:	ldr	x0, [sp, #232]
  405580:	sub	x0, x1, x0
  405584:	ldr	x1, [sp, #200]
  405588:	cmp	x1, x0
  40558c:	b.cc	4055a0 <ferror@plt+0x25a0>  // b.lo, b.ul, b.last
  405590:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405594:	add	x0, x0, #0xbc8
  405598:	ldr	x0, [x0]
  40559c:	b	4055d0 <ferror@plt+0x25d0>
  4055a0:	ldr	x1, [sp, #232]
  4055a4:	ldr	x0, [sp, #200]
  4055a8:	add	x0, x1, x0
  4055ac:	str	x0, [sp, #232]
  4055b0:	ldr	x0, [sp, #224]
  4055b4:	add	x0, x0, #0x1
  4055b8:	str	x0, [sp, #224]
  4055bc:	ldr	x1, [sp, #224]
  4055c0:	ldr	x0, [sp, #32]
  4055c4:	cmp	x1, x0
  4055c8:	b.cc	4053b0 <ferror@plt+0x23b0>  // b.lo, b.ul, b.last
  4055cc:	ldr	x0, [sp, #232]
  4055d0:	ldp	x29, x30, [sp], #240
  4055d4:	ret
  4055d8:	stp	x29, x30, [sp, #-48]!
  4055dc:	mov	x29, sp
  4055e0:	str	x0, [sp, #40]
  4055e4:	str	x1, [sp, #32]
  4055e8:	str	x2, [sp, #24]
  4055ec:	ldr	x0, [sp, #24]
  4055f0:	and	x0, x0, #0xffffffffffffffe0
  4055f4:	add	x0, x0, #0x20
  4055f8:	str	x0, [sp, #24]
  4055fc:	ldr	x0, [sp, #24]
  405600:	bl	402a80 <malloc@plt>
  405604:	mov	x1, x0
  405608:	ldr	x0, [sp, #40]
  40560c:	str	x1, [x0]
  405610:	ldr	x0, [sp, #40]
  405614:	ldr	x0, [x0]
  405618:	cmp	x0, #0x0
  40561c:	b.ne	405644 <ferror@plt+0x2644>  // b.any
  405620:	ldr	x0, [sp, #24]
  405624:	lsr	x0, x0, #1
  405628:	str	x0, [sp, #24]
  40562c:	ldr	x0, [sp, #32]
  405630:	add	x0, x0, #0x1
  405634:	ldr	x1, [sp, #24]
  405638:	cmp	x1, x0
  40563c:	b.hi	4055ec <ferror@plt+0x25ec>  // b.pmore
  405640:	bl	4185bc <ferror@plt+0x155bc>
  405644:	nop
  405648:	ldr	x0, [sp, #40]
  40564c:	ldr	x1, [sp, #32]
  405650:	str	x1, [x0, #40]
  405654:	ldr	x0, [sp, #40]
  405658:	ldr	x1, [sp, #24]
  40565c:	str	x1, [x0, #24]
  405660:	ldr	x0, [sp, #40]
  405664:	str	xzr, [x0, #16]
  405668:	ldr	x0, [sp, #40]
  40566c:	ldr	x1, [x0, #16]
  405670:	ldr	x0, [sp, #40]
  405674:	str	x1, [x0, #32]
  405678:	ldr	x0, [sp, #40]
  40567c:	ldr	x1, [x0, #32]
  405680:	ldr	x0, [sp, #40]
  405684:	str	x1, [x0, #8]
  405688:	ldr	x0, [sp, #40]
  40568c:	strb	wzr, [x0, #48]
  405690:	nop
  405694:	ldp	x29, x30, [sp], #48
  405698:	ret
  40569c:	sub	sp, sp, #0x20
  4056a0:	str	x0, [sp, #8]
  4056a4:	ldr	x0, [sp, #8]
  4056a8:	ldr	x1, [x0]
  4056ac:	ldr	x0, [sp, #8]
  4056b0:	ldr	x0, [x0, #24]
  4056b4:	add	x0, x1, x0
  4056b8:	str	x0, [sp, #24]
  4056bc:	ldr	x0, [sp, #24]
  4056c0:	add	sp, sp, #0x20
  4056c4:	ret
  4056c8:	stp	x29, x30, [sp, #-64]!
  4056cc:	mov	x29, sp
  4056d0:	str	x0, [sp, #24]
  4056d4:	str	x1, [sp, #16]
  4056d8:	ldr	x0, [sp, #24]
  4056dc:	ldr	x0, [x0]
  4056e0:	str	x0, [sp, #56]
  4056e4:	ldr	x0, [sp, #24]
  4056e8:	ldr	x0, [x0, #8]
  4056ec:	sub	x0, x0, #0x1
  4056f0:	ldr	x1, [sp, #56]
  4056f4:	add	x0, x1, x0
  4056f8:	str	x0, [sp, #40]
  4056fc:	ldr	x0, [sp, #16]
  405700:	ldr	x0, [x0]
  405704:	str	x0, [sp, #48]
  405708:	ldr	x0, [sp, #16]
  40570c:	ldr	x0, [x0, #8]
  405710:	str	x0, [sp, #32]
  405714:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405718:	add	x0, x0, #0x4b0
  40571c:	ldr	w0, [x0]
  405720:	cmp	w0, #0x100
  405724:	b.eq	405848 <ferror@plt+0x2848>  // b.none
  405728:	b	405784 <ferror@plt+0x2784>
  40572c:	ldr	x0, [sp, #56]
  405730:	add	x0, x0, #0x1
  405734:	str	x0, [sp, #56]
  405738:	ldr	x1, [sp, #56]
  40573c:	ldr	x0, [sp, #40]
  405740:	cmp	x1, x0
  405744:	b.cs	405768 <ferror@plt+0x2768>  // b.hs, b.nlast
  405748:	ldr	x0, [sp, #56]
  40574c:	ldrb	w0, [x0]
  405750:	mov	w1, w0
  405754:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405758:	add	x0, x0, #0x4b0
  40575c:	ldr	w0, [x0]
  405760:	cmp	w1, w0
  405764:	b.ne	40572c <ferror@plt+0x272c>  // b.any
  405768:	ldr	x1, [sp, #56]
  40576c:	ldr	x0, [sp, #40]
  405770:	cmp	x1, x0
  405774:	b.cs	405784 <ferror@plt+0x2784>  // b.hs, b.nlast
  405778:	ldr	x0, [sp, #56]
  40577c:	add	x0, x0, #0x1
  405780:	str	x0, [sp, #56]
  405784:	ldr	x1, [sp, #56]
  405788:	ldr	x0, [sp, #40]
  40578c:	cmp	x1, x0
  405790:	b.cs	40586c <ferror@plt+0x286c>  // b.hs, b.nlast
  405794:	ldr	x0, [sp, #48]
  405798:	sub	x1, x0, #0x1
  40579c:	str	x1, [sp, #48]
  4057a0:	cmp	x0, #0x0
  4057a4:	b.ne	405738 <ferror@plt+0x2738>  // b.any
  4057a8:	b	40586c <ferror@plt+0x286c>
  4057ac:	ldr	x0, [sp, #56]
  4057b0:	add	x0, x0, #0x1
  4057b4:	str	x0, [sp, #56]
  4057b8:	ldr	x1, [sp, #56]
  4057bc:	ldr	x0, [sp, #40]
  4057c0:	cmp	x1, x0
  4057c4:	b.cs	405804 <ferror@plt+0x2804>  // b.hs, b.nlast
  4057c8:	ldr	x0, [sp, #56]
  4057cc:	ldrb	w0, [x0]
  4057d0:	bl	403208 <ferror@plt+0x208>
  4057d4:	and	w0, w0, #0xff
  4057d8:	mov	w2, w0
  4057dc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4057e0:	add	x1, x0, #0x5c0
  4057e4:	sxtw	x0, w2
  4057e8:	ldrb	w0, [x1, x0]
  4057ec:	cmp	w0, #0x0
  4057f0:	b.ne	4057ac <ferror@plt+0x27ac>  // b.any
  4057f4:	b	405804 <ferror@plt+0x2804>
  4057f8:	ldr	x0, [sp, #56]
  4057fc:	add	x0, x0, #0x1
  405800:	str	x0, [sp, #56]
  405804:	ldr	x1, [sp, #56]
  405808:	ldr	x0, [sp, #40]
  40580c:	cmp	x1, x0
  405810:	b.cs	405848 <ferror@plt+0x2848>  // b.hs, b.nlast
  405814:	ldr	x0, [sp, #56]
  405818:	ldrb	w0, [x0]
  40581c:	bl	403208 <ferror@plt+0x208>
  405820:	and	w0, w0, #0xff
  405824:	mov	w2, w0
  405828:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40582c:	add	x1, x0, #0x5c0
  405830:	sxtw	x0, w2
  405834:	ldrb	w0, [x1, x0]
  405838:	eor	w0, w0, #0x1
  40583c:	and	w0, w0, #0xff
  405840:	cmp	w0, #0x0
  405844:	b.ne	4057f8 <ferror@plt+0x27f8>  // b.any
  405848:	ldr	x1, [sp, #56]
  40584c:	ldr	x0, [sp, #40]
  405850:	cmp	x1, x0
  405854:	b.cs	40586c <ferror@plt+0x286c>  // b.hs, b.nlast
  405858:	ldr	x0, [sp, #48]
  40585c:	sub	x1, x0, #0x1
  405860:	str	x1, [sp, #48]
  405864:	cmp	x0, #0x0
  405868:	b.ne	4057b8 <ferror@plt+0x27b8>  // b.any
  40586c:	ldr	x0, [sp, #16]
  405870:	ldrb	w0, [x0, #48]
  405874:	cmp	w0, #0x0
  405878:	b.eq	4058c8 <ferror@plt+0x28c8>  // b.none
  40587c:	b	40588c <ferror@plt+0x288c>
  405880:	ldr	x0, [sp, #56]
  405884:	add	x0, x0, #0x1
  405888:	str	x0, [sp, #56]
  40588c:	ldr	x1, [sp, #56]
  405890:	ldr	x0, [sp, #40]
  405894:	cmp	x1, x0
  405898:	b.cs	4058c8 <ferror@plt+0x28c8>  // b.hs, b.nlast
  40589c:	ldr	x0, [sp, #56]
  4058a0:	ldrb	w0, [x0]
  4058a4:	bl	403208 <ferror@plt+0x208>
  4058a8:	and	w0, w0, #0xff
  4058ac:	mov	w2, w0
  4058b0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4058b4:	add	x1, x0, #0x5c0
  4058b8:	sxtw	x0, w2
  4058bc:	ldrb	w0, [x1, x0]
  4058c0:	cmp	w0, #0x0
  4058c4:	b.ne	405880 <ferror@plt+0x2880>  // b.any
  4058c8:	ldr	x1, [sp, #56]
  4058cc:	ldr	x0, [sp, #32]
  4058d0:	add	x0, x1, x0
  4058d4:	ldr	x2, [sp, #40]
  4058d8:	ldr	x1, [sp, #40]
  4058dc:	cmp	x2, x0
  4058e0:	csel	x0, x1, x0, ls  // ls = plast
  4058e4:	str	x0, [sp, #56]
  4058e8:	ldr	x0, [sp, #56]
  4058ec:	ldp	x29, x30, [sp], #64
  4058f0:	ret
  4058f4:	stp	x29, x30, [sp, #-64]!
  4058f8:	mov	x29, sp
  4058fc:	str	x0, [sp, #24]
  405900:	str	x1, [sp, #16]
  405904:	ldr	x0, [sp, #24]
  405908:	ldr	x0, [x0]
  40590c:	str	x0, [sp, #56]
  405910:	ldr	x0, [sp, #24]
  405914:	ldr	x0, [x0, #8]
  405918:	sub	x0, x0, #0x1
  40591c:	ldr	x1, [sp, #56]
  405920:	add	x0, x1, x0
  405924:	str	x0, [sp, #40]
  405928:	ldr	x0, [sp, #16]
  40592c:	ldr	x0, [x0, #16]
  405930:	str	x0, [sp, #48]
  405934:	ldr	x0, [sp, #16]
  405938:	ldr	x0, [x0, #24]
  40593c:	str	x0, [sp, #32]
  405940:	ldr	x0, [sp, #32]
  405944:	cmp	x0, #0x0
  405948:	b.ne	405958 <ferror@plt+0x2958>  // b.any
  40594c:	ldr	x0, [sp, #48]
  405950:	add	x0, x0, #0x1
  405954:	str	x0, [sp, #48]
  405958:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40595c:	add	x0, x0, #0x4b0
  405960:	ldr	w0, [x0]
  405964:	cmp	w0, #0x100
  405968:	b.eq	405aa4 <ferror@plt+0x2aa4>  // b.none
  40596c:	b	4059e0 <ferror@plt+0x29e0>
  405970:	ldr	x0, [sp, #56]
  405974:	add	x0, x0, #0x1
  405978:	str	x0, [sp, #56]
  40597c:	ldr	x1, [sp, #56]
  405980:	ldr	x0, [sp, #40]
  405984:	cmp	x1, x0
  405988:	b.cs	4059ac <ferror@plt+0x29ac>  // b.hs, b.nlast
  40598c:	ldr	x0, [sp, #56]
  405990:	ldrb	w0, [x0]
  405994:	mov	w1, w0
  405998:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40599c:	add	x0, x0, #0x4b0
  4059a0:	ldr	w0, [x0]
  4059a4:	cmp	w1, w0
  4059a8:	b.ne	405970 <ferror@plt+0x2970>  // b.any
  4059ac:	ldr	x1, [sp, #56]
  4059b0:	ldr	x0, [sp, #40]
  4059b4:	cmp	x1, x0
  4059b8:	b.cs	4059e0 <ferror@plt+0x29e0>  // b.hs, b.nlast
  4059bc:	ldr	x0, [sp, #48]
  4059c0:	cmp	x0, #0x0
  4059c4:	b.ne	4059d4 <ferror@plt+0x29d4>  // b.any
  4059c8:	ldr	x0, [sp, #32]
  4059cc:	cmp	x0, #0x0
  4059d0:	b.eq	4059e0 <ferror@plt+0x29e0>  // b.none
  4059d4:	ldr	x0, [sp, #56]
  4059d8:	add	x0, x0, #0x1
  4059dc:	str	x0, [sp, #56]
  4059e0:	ldr	x1, [sp, #56]
  4059e4:	ldr	x0, [sp, #40]
  4059e8:	cmp	x1, x0
  4059ec:	b.cs	405ac8 <ferror@plt+0x2ac8>  // b.hs, b.nlast
  4059f0:	ldr	x0, [sp, #48]
  4059f4:	sub	x1, x0, #0x1
  4059f8:	str	x1, [sp, #48]
  4059fc:	cmp	x0, #0x0
  405a00:	b.ne	40597c <ferror@plt+0x297c>  // b.any
  405a04:	b	405ac8 <ferror@plt+0x2ac8>
  405a08:	ldr	x0, [sp, #56]
  405a0c:	add	x0, x0, #0x1
  405a10:	str	x0, [sp, #56]
  405a14:	ldr	x1, [sp, #56]
  405a18:	ldr	x0, [sp, #40]
  405a1c:	cmp	x1, x0
  405a20:	b.cs	405a60 <ferror@plt+0x2a60>  // b.hs, b.nlast
  405a24:	ldr	x0, [sp, #56]
  405a28:	ldrb	w0, [x0]
  405a2c:	bl	403208 <ferror@plt+0x208>
  405a30:	and	w0, w0, #0xff
  405a34:	mov	w2, w0
  405a38:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405a3c:	add	x1, x0, #0x5c0
  405a40:	sxtw	x0, w2
  405a44:	ldrb	w0, [x1, x0]
  405a48:	cmp	w0, #0x0
  405a4c:	b.ne	405a08 <ferror@plt+0x2a08>  // b.any
  405a50:	b	405a60 <ferror@plt+0x2a60>
  405a54:	ldr	x0, [sp, #56]
  405a58:	add	x0, x0, #0x1
  405a5c:	str	x0, [sp, #56]
  405a60:	ldr	x1, [sp, #56]
  405a64:	ldr	x0, [sp, #40]
  405a68:	cmp	x1, x0
  405a6c:	b.cs	405aa4 <ferror@plt+0x2aa4>  // b.hs, b.nlast
  405a70:	ldr	x0, [sp, #56]
  405a74:	ldrb	w0, [x0]
  405a78:	bl	403208 <ferror@plt+0x208>
  405a7c:	and	w0, w0, #0xff
  405a80:	mov	w2, w0
  405a84:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405a88:	add	x1, x0, #0x5c0
  405a8c:	sxtw	x0, w2
  405a90:	ldrb	w0, [x1, x0]
  405a94:	eor	w0, w0, #0x1
  405a98:	and	w0, w0, #0xff
  405a9c:	cmp	w0, #0x0
  405aa0:	b.ne	405a54 <ferror@plt+0x2a54>  // b.any
  405aa4:	ldr	x1, [sp, #56]
  405aa8:	ldr	x0, [sp, #40]
  405aac:	cmp	x1, x0
  405ab0:	b.cs	405ac8 <ferror@plt+0x2ac8>  // b.hs, b.nlast
  405ab4:	ldr	x0, [sp, #48]
  405ab8:	sub	x1, x0, #0x1
  405abc:	str	x1, [sp, #48]
  405ac0:	cmp	x0, #0x0
  405ac4:	b.ne	405a14 <ferror@plt+0x2a14>  // b.any
  405ac8:	ldr	x0, [sp, #32]
  405acc:	cmp	x0, #0x0
  405ad0:	b.eq	405b50 <ferror@plt+0x2b50>  // b.none
  405ad4:	ldr	x0, [sp, #16]
  405ad8:	ldrb	w0, [x0, #49]
  405adc:	cmp	w0, #0x0
  405ae0:	b.eq	405b30 <ferror@plt+0x2b30>  // b.none
  405ae4:	b	405af4 <ferror@plt+0x2af4>
  405ae8:	ldr	x0, [sp, #56]
  405aec:	add	x0, x0, #0x1
  405af0:	str	x0, [sp, #56]
  405af4:	ldr	x1, [sp, #56]
  405af8:	ldr	x0, [sp, #40]
  405afc:	cmp	x1, x0
  405b00:	b.cs	405b30 <ferror@plt+0x2b30>  // b.hs, b.nlast
  405b04:	ldr	x0, [sp, #56]
  405b08:	ldrb	w0, [x0]
  405b0c:	bl	403208 <ferror@plt+0x208>
  405b10:	and	w0, w0, #0xff
  405b14:	mov	w2, w0
  405b18:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405b1c:	add	x1, x0, #0x5c0
  405b20:	sxtw	x0, w2
  405b24:	ldrb	w0, [x1, x0]
  405b28:	cmp	w0, #0x0
  405b2c:	b.ne	405ae8 <ferror@plt+0x2ae8>  // b.any
  405b30:	ldr	x1, [sp, #56]
  405b34:	ldr	x0, [sp, #32]
  405b38:	add	x0, x1, x0
  405b3c:	ldr	x2, [sp, #40]
  405b40:	ldr	x1, [sp, #40]
  405b44:	cmp	x2, x0
  405b48:	csel	x0, x1, x0, ls  // ls = plast
  405b4c:	str	x0, [sp, #56]
  405b50:	ldr	x0, [sp, #56]
  405b54:	ldp	x29, x30, [sp], #64
  405b58:	ret
  405b5c:	stp	x29, x30, [sp, #-160]!
  405b60:	mov	x29, sp
  405b64:	str	x0, [sp, #40]
  405b68:	str	x1, [sp, #32]
  405b6c:	str	x2, [sp, #24]
  405b70:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405b74:	add	x0, x0, #0x9e8
  405b78:	ldr	x0, [x0]
  405b7c:	str	x0, [sp, #104]
  405b80:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405b84:	add	x0, x0, #0x3e0
  405b88:	ldrb	w0, [x0]
  405b8c:	strb	w0, [sp, #103]
  405b90:	ldr	x0, [sp, #40]
  405b94:	ldr	x0, [x0, #40]
  405b98:	str	x0, [sp, #88]
  405b9c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405ba0:	add	x0, x0, #0x4a8
  405ba4:	ldr	x0, [x0]
  405ba8:	sub	x0, x0, #0x22
  405bac:	str	x0, [sp, #152]
  405bb0:	ldr	x0, [sp, #40]
  405bb4:	ldrb	w0, [x0, #48]
  405bb8:	cmp	w0, #0x0
  405bbc:	b.eq	405bc8 <ferror@plt+0x2bc8>  // b.none
  405bc0:	mov	w0, #0x0                   	// #0
  405bc4:	b	406030 <ferror@plt+0x3030>
  405bc8:	ldr	x0, [sp, #40]
  405bcc:	ldr	x1, [x0, #8]
  405bd0:	ldr	x0, [sp, #40]
  405bd4:	ldr	x0, [x0, #32]
  405bd8:	cmp	x1, x0
  405bdc:	b.eq	405c34 <ferror@plt+0x2c34>  // b.none
  405be0:	ldr	x0, [sp, #40]
  405be4:	ldr	x3, [x0]
  405be8:	ldr	x0, [sp, #40]
  405bec:	ldr	x1, [x0]
  405bf0:	ldr	x0, [sp, #40]
  405bf4:	ldr	x2, [x0, #8]
  405bf8:	ldr	x0, [sp, #40]
  405bfc:	ldr	x0, [x0, #32]
  405c00:	sub	x0, x2, x0
  405c04:	add	x1, x1, x0
  405c08:	ldr	x0, [sp, #40]
  405c0c:	ldr	x0, [x0, #32]
  405c10:	mov	x2, x0
  405c14:	mov	x0, x3
  405c18:	bl	402890 <memmove@plt>
  405c1c:	ldr	x0, [sp, #40]
  405c20:	ldr	x1, [x0, #32]
  405c24:	ldr	x0, [sp, #40]
  405c28:	str	x1, [x0, #8]
  405c2c:	ldr	x0, [sp, #40]
  405c30:	str	xzr, [x0, #16]
  405c34:	ldr	x0, [sp, #40]
  405c38:	ldr	x1, [x0]
  405c3c:	ldr	x0, [sp, #40]
  405c40:	ldr	x0, [x0, #8]
  405c44:	add	x0, x1, x0
  405c48:	str	x0, [sp, #144]
  405c4c:	ldr	x0, [sp, #40]
  405c50:	bl	40569c <ferror@plt+0x269c>
  405c54:	str	x0, [sp, #80]
  405c58:	ldr	x0, [sp, #40]
  405c5c:	ldr	x0, [x0, #16]
  405c60:	lsl	x0, x0, #5
  405c64:	neg	x0, x0
  405c68:	ldr	x1, [sp, #80]
  405c6c:	add	x0, x1, x0
  405c70:	str	x0, [sp, #136]
  405c74:	ldr	x0, [sp, #40]
  405c78:	ldr	x1, [x0, #16]
  405c7c:	ldr	x0, [sp, #88]
  405c80:	mul	x0, x1, x0
  405c84:	neg	x0, x0
  405c88:	ldr	x1, [sp, #80]
  405c8c:	add	x1, x1, x0
  405c90:	ldr	x0, [sp, #144]
  405c94:	sub	x0, x1, x0
  405c98:	str	x0, [sp, #128]
  405c9c:	ldr	x0, [sp, #40]
  405ca0:	ldr	x0, [x0, #16]
  405ca4:	cmp	x0, #0x0
  405ca8:	b.eq	405cc4 <ferror@plt+0x2cc4>  // b.none
  405cac:	ldr	x0, [sp, #136]
  405cb0:	ldr	x1, [x0]
  405cb4:	ldr	x0, [sp, #136]
  405cb8:	ldr	x0, [x0, #8]
  405cbc:	add	x0, x1, x0
  405cc0:	b	405ccc <ferror@plt+0x2ccc>
  405cc4:	ldr	x0, [sp, #40]
  405cc8:	ldr	x0, [x0]
  405ccc:	str	x0, [sp, #120]
  405cd0:	b	405f4c <ferror@plt+0x2f4c>
  405cd4:	ldr	x0, [sp, #128]
  405cd8:	sub	x1, x0, #0x1
  405cdc:	ldr	x0, [sp, #88]
  405ce0:	add	x0, x0, #0x1
  405ce4:	udiv	x0, x1, x0
  405ce8:	str	x0, [sp, #72]
  405cec:	ldr	x3, [sp, #32]
  405cf0:	ldr	x2, [sp, #72]
  405cf4:	mov	x1, #0x1                   	// #1
  405cf8:	ldr	x0, [sp, #144]
  405cfc:	bl	402c80 <fread_unlocked@plt>
  405d00:	str	x0, [sp, #64]
  405d04:	ldr	x1, [sp, #144]
  405d08:	ldr	x0, [sp, #64]
  405d0c:	add	x0, x1, x0
  405d10:	str	x0, [sp, #112]
  405d14:	ldr	x1, [sp, #128]
  405d18:	ldr	x0, [sp, #64]
  405d1c:	sub	x0, x1, x0
  405d20:	str	x0, [sp, #128]
  405d24:	ldr	x1, [sp, #64]
  405d28:	ldr	x0, [sp, #72]
  405d2c:	cmp	x1, x0
  405d30:	b.eq	405f04 <ferror@plt+0x2f04>  // b.none
  405d34:	ldr	x0, [sp, #32]
  405d38:	bl	402940 <ferror_unlocked@plt>
  405d3c:	cmp	w0, #0x0
  405d40:	b.eq	405d58 <ferror@plt+0x2d58>  // b.none
  405d44:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  405d48:	add	x0, x0, #0x968
  405d4c:	bl	402fd0 <gettext@plt>
  405d50:	ldr	x1, [sp, #24]
  405d54:	bl	403554 <ferror@plt+0x554>
  405d58:	ldr	x0, [sp, #32]
  405d5c:	bl	402d80 <feof_unlocked@plt>
  405d60:	cmp	w0, #0x0
  405d64:	b.eq	405f04 <ferror@plt+0x2f04>  // b.none
  405d68:	ldr	x0, [sp, #40]
  405d6c:	mov	w1, #0x1                   	// #1
  405d70:	strb	w1, [x0, #48]
  405d74:	ldr	x0, [sp, #40]
  405d78:	ldr	x0, [x0]
  405d7c:	ldr	x1, [sp, #112]
  405d80:	cmp	x1, x0
  405d84:	b.ne	405d90 <ferror@plt+0x2d90>  // b.any
  405d88:	mov	w0, #0x0                   	// #0
  405d8c:	b	406030 <ferror@plt+0x3030>
  405d90:	ldr	x1, [sp, #120]
  405d94:	ldr	x0, [sp, #112]
  405d98:	cmp	x1, x0
  405d9c:	b.eq	405f04 <ferror@plt+0x2f04>  // b.none
  405da0:	ldr	x0, [sp, #112]
  405da4:	sub	x0, x0, #0x1
  405da8:	ldrb	w0, [x0]
  405dac:	ldrb	w1, [sp, #103]
  405db0:	cmp	w1, w0
  405db4:	b.eq	405f04 <ferror@plt+0x2f04>  // b.none
  405db8:	ldr	x0, [sp, #112]
  405dbc:	add	x1, x0, #0x1
  405dc0:	str	x1, [sp, #112]
  405dc4:	ldrb	w1, [sp, #103]
  405dc8:	strb	w1, [x0]
  405dcc:	b	405f04 <ferror@plt+0x2f04>
  405dd0:	ldr	x0, [sp, #56]
  405dd4:	strb	wzr, [x0]
  405dd8:	ldr	x0, [sp, #56]
  405ddc:	add	x0, x0, #0x1
  405de0:	str	x0, [sp, #144]
  405de4:	ldr	x0, [sp, #136]
  405de8:	sub	x0, x0, #0x20
  405dec:	str	x0, [sp, #136]
  405df0:	ldr	x0, [sp, #136]
  405df4:	ldr	x1, [sp, #120]
  405df8:	str	x1, [x0]
  405dfc:	ldr	x1, [sp, #144]
  405e00:	ldr	x0, [sp, #120]
  405e04:	sub	x0, x1, x0
  405e08:	mov	x1, x0
  405e0c:	ldr	x0, [sp, #136]
  405e10:	str	x1, [x0, #8]
  405e14:	ldr	x0, [sp, #136]
  405e18:	ldr	x0, [x0, #8]
  405e1c:	ldr	x2, [sp, #152]
  405e20:	ldr	x1, [sp, #152]
  405e24:	cmp	x2, x0
  405e28:	csel	x0, x1, x0, cs  // cs = hs, nlast
  405e2c:	str	x0, [sp, #152]
  405e30:	ldr	x1, [sp, #128]
  405e34:	ldr	x0, [sp, #88]
  405e38:	sub	x0, x1, x0
  405e3c:	str	x0, [sp, #128]
  405e40:	ldr	x0, [sp, #104]
  405e44:	cmp	x0, #0x0
  405e48:	b.eq	405efc <ferror@plt+0x2efc>  // b.none
  405e4c:	ldr	x0, [sp, #104]
  405e50:	ldr	x0, [x0, #16]
  405e54:	cmn	x0, #0x1
  405e58:	b.eq	405e6c <ferror@plt+0x2e6c>  // b.none
  405e5c:	ldr	x1, [sp, #104]
  405e60:	ldr	x0, [sp, #136]
  405e64:	bl	4058f4 <ferror@plt+0x28f4>
  405e68:	b	405e70 <ferror@plt+0x2e70>
  405e6c:	ldr	x0, [sp, #56]
  405e70:	ldr	x1, [sp, #136]
  405e74:	str	x0, [x1, #24]
  405e78:	ldr	x0, [sp, #104]
  405e7c:	ldr	x0, [x0]
  405e80:	cmn	x0, #0x1
  405e84:	b.eq	405ea4 <ferror@plt+0x2ea4>  // b.none
  405e88:	ldr	x1, [sp, #104]
  405e8c:	ldr	x0, [sp, #136]
  405e90:	bl	4056c8 <ferror@plt+0x26c8>
  405e94:	mov	x1, x0
  405e98:	ldr	x0, [sp, #136]
  405e9c:	str	x1, [x0, #16]
  405ea0:	b	405efc <ferror@plt+0x2efc>
  405ea4:	ldr	x0, [sp, #104]
  405ea8:	ldrb	w0, [x0, #48]
  405eac:	cmp	w0, #0x0
  405eb0:	b.eq	405ef0 <ferror@plt+0x2ef0>  // b.none
  405eb4:	b	405ec4 <ferror@plt+0x2ec4>
  405eb8:	ldr	x0, [sp, #120]
  405ebc:	add	x0, x0, #0x1
  405ec0:	str	x0, [sp, #120]
  405ec4:	ldr	x0, [sp, #120]
  405ec8:	ldrb	w0, [x0]
  405ecc:	bl	403208 <ferror@plt+0x208>
  405ed0:	and	w0, w0, #0xff
  405ed4:	mov	w2, w0
  405ed8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405edc:	add	x1, x0, #0x5c0
  405ee0:	sxtw	x0, w2
  405ee4:	ldrb	w0, [x1, x0]
  405ee8:	cmp	w0, #0x0
  405eec:	b.ne	405eb8 <ferror@plt+0x2eb8>  // b.any
  405ef0:	ldr	x0, [sp, #136]
  405ef4:	ldr	x1, [sp, #120]
  405ef8:	str	x1, [x0, #16]
  405efc:	ldr	x0, [sp, #144]
  405f00:	str	x0, [sp, #120]
  405f04:	ldrb	w3, [sp, #103]
  405f08:	ldr	x1, [sp, #112]
  405f0c:	ldr	x0, [sp, #144]
  405f10:	sub	x0, x1, x0
  405f14:	mov	x2, x0
  405f18:	mov	w1, w3
  405f1c:	ldr	x0, [sp, #144]
  405f20:	bl	402e50 <memchr@plt>
  405f24:	str	x0, [sp, #56]
  405f28:	ldr	x0, [sp, #56]
  405f2c:	cmp	x0, #0x0
  405f30:	b.ne	405dd0 <ferror@plt+0x2dd0>  // b.any
  405f34:	ldr	x0, [sp, #112]
  405f38:	str	x0, [sp, #144]
  405f3c:	ldr	x0, [sp, #40]
  405f40:	ldrb	w0, [x0, #48]
  405f44:	cmp	w0, #0x0
  405f48:	b.ne	405f64 <ferror@plt+0x2f64>  // b.any
  405f4c:	ldr	x0, [sp, #88]
  405f50:	add	x0, x0, #0x1
  405f54:	ldr	x1, [sp, #128]
  405f58:	cmp	x1, x0
  405f5c:	b.hi	405cd4 <ferror@plt+0x2cd4>  // b.pmore
  405f60:	b	405f68 <ferror@plt+0x2f68>
  405f64:	nop
  405f68:	ldr	x0, [sp, #40]
  405f6c:	ldr	x0, [x0]
  405f70:	ldr	x1, [sp, #144]
  405f74:	sub	x0, x1, x0
  405f78:	mov	x1, x0
  405f7c:	ldr	x0, [sp, #40]
  405f80:	str	x1, [x0, #8]
  405f84:	ldr	x0, [sp, #40]
  405f88:	bl	40569c <ferror@plt+0x269c>
  405f8c:	mov	x1, x0
  405f90:	ldr	x0, [sp, #136]
  405f94:	sub	x0, x1, x0
  405f98:	asr	x0, x0, #5
  405f9c:	mov	x1, x0
  405fa0:	ldr	x0, [sp, #40]
  405fa4:	str	x1, [x0, #16]
  405fa8:	ldr	x0, [sp, #40]
  405fac:	ldr	x0, [x0, #16]
  405fb0:	cmp	x0, #0x0
  405fb4:	b.eq	405fec <ferror@plt+0x2fec>  // b.none
  405fb8:	ldr	x1, [sp, #144]
  405fbc:	ldr	x0, [sp, #120]
  405fc0:	sub	x0, x1, x0
  405fc4:	mov	x1, x0
  405fc8:	ldr	x0, [sp, #40]
  405fcc:	str	x1, [x0, #32]
  405fd0:	ldr	x0, [sp, #152]
  405fd4:	add	x1, x0, #0x22
  405fd8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  405fdc:	add	x0, x0, #0x4a8
  405fe0:	str	x1, [x0]
  405fe4:	mov	w0, #0x1                   	// #1
  405fe8:	b	406030 <ferror@plt+0x3030>
  405fec:	ldr	x0, [sp, #40]
  405ff0:	ldr	x0, [x0, #24]
  405ff4:	lsr	x0, x0, #5
  405ff8:	str	x0, [sp, #48]
  405ffc:	ldr	x0, [sp, #40]
  406000:	ldr	x0, [x0]
  406004:	add	x1, sp, #0x30
  406008:	mov	x2, #0x20                  	// #32
  40600c:	bl	4182a4 <ferror@plt+0x152a4>
  406010:	mov	x1, x0
  406014:	ldr	x0, [sp, #40]
  406018:	str	x1, [x0]
  40601c:	ldr	x0, [sp, #48]
  406020:	lsl	x1, x0, #5
  406024:	ldr	x0, [sp, #40]
  406028:	str	x1, [x0, #24]
  40602c:	b	405c34 <ferror@plt+0x2c34>
  406030:	ldp	x29, x30, [sp], #160
  406034:	ret
  406038:	sub	sp, sp, #0x20
  40603c:	str	x0, [sp, #8]
  406040:	ldr	x0, [sp, #8]
  406044:	ldr	x0, [x0]
  406048:	str	x0, [sp, #24]
  40604c:	strb	wzr, [sp, #23]
  406050:	strb	wzr, [sp, #22]
  406054:	b	4060ac <ferror@plt+0x30ac>
  406058:	ldrb	w1, [sp, #23]
  40605c:	ldrb	w0, [sp, #21]
  406060:	cmp	w1, w0
  406064:	b.cs	406070 <ferror@plt+0x3070>  // b.hs, b.nlast
  406068:	ldrb	w0, [sp, #21]
  40606c:	strb	w0, [sp, #23]
  406070:	ldr	x0, [sp, #24]
  406074:	ldrb	w0, [x0]
  406078:	mov	w1, w0
  40607c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  406080:	add	x0, x0, #0x594
  406084:	ldr	w0, [x0]
  406088:	cmp	w1, w0
  40608c:	cset	w0, eq  // eq = none
  406090:	strb	w0, [sp, #22]
  406094:	ldrb	w0, [sp, #22]
  406098:	cmp	w0, #0x0
  40609c:	b.eq	4060ac <ferror@plt+0x30ac>  // b.none
  4060a0:	ldr	x0, [sp, #24]
  4060a4:	add	x0, x0, #0x1
  4060a8:	str	x0, [sp, #24]
  4060ac:	ldr	x0, [sp, #24]
  4060b0:	add	x1, x0, #0x1
  4060b4:	str	x1, [sp, #24]
  4060b8:	ldrb	w0, [x0]
  4060bc:	strb	w0, [sp, #21]
  4060c0:	ldrb	w0, [sp, #21]
  4060c4:	sub	w0, w0, #0x30
  4060c8:	cmp	w0, #0x9
  4060cc:	b.ls	406058 <ferror@plt+0x3058>  // b.plast
  4060d0:	ldrb	w0, [sp, #22]
  4060d4:	cmp	w0, #0x0
  4060d8:	b.eq	4060f4 <ferror@plt+0x30f4>  // b.none
  4060dc:	ldr	x0, [sp, #24]
  4060e0:	sub	x1, x0, #0x2
  4060e4:	ldr	x0, [sp, #8]
  4060e8:	str	x1, [x0]
  4060ec:	ldrb	w0, [sp, #23]
  4060f0:	b	406160 <ferror@plt+0x3160>
  4060f4:	ldrb	w1, [sp, #21]
  4060f8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4060fc:	add	x0, x0, #0x590
  406100:	ldr	w0, [x0]
  406104:	cmp	w1, w0
  406108:	b.ne	40614c <ferror@plt+0x314c>  // b.any
  40610c:	b	406128 <ferror@plt+0x3128>
  406110:	ldrb	w1, [sp, #23]
  406114:	ldrb	w0, [sp, #21]
  406118:	cmp	w1, w0
  40611c:	b.cs	406128 <ferror@plt+0x3128>  // b.hs, b.nlast
  406120:	ldrb	w0, [sp, #21]
  406124:	strb	w0, [sp, #23]
  406128:	ldr	x0, [sp, #24]
  40612c:	add	x1, x0, #0x1
  406130:	str	x1, [sp, #24]
  406134:	ldrb	w0, [x0]
  406138:	strb	w0, [sp, #21]
  40613c:	ldrb	w0, [sp, #21]
  406140:	sub	w0, w0, #0x30
  406144:	cmp	w0, #0x9
  406148:	b.ls	406110 <ferror@plt+0x3110>  // b.plast
  40614c:	ldr	x0, [sp, #24]
  406150:	sub	x1, x0, #0x1
  406154:	ldr	x0, [sp, #8]
  406158:	str	x1, [x0]
  40615c:	ldrb	w0, [sp, #23]
  406160:	add	sp, sp, #0x20
  406164:	ret
  406168:	stp	x29, x30, [sp, #-48]!
  40616c:	mov	x29, sp
  406170:	str	x0, [sp, #24]
  406174:	ldr	x0, [sp, #24]
  406178:	ldrb	w0, [x0]
  40617c:	cmp	w0, #0x2d
  406180:	cset	w0, eq  // eq = none
  406184:	strb	w0, [sp, #47]
  406188:	ldrb	w0, [sp, #47]
  40618c:	ldr	x1, [sp, #24]
  406190:	add	x0, x1, x0
  406194:	str	x0, [sp, #32]
  406198:	add	x0, sp, #0x20
  40619c:	bl	406038 <ferror@plt+0x3038>
  4061a0:	strb	w0, [sp, #46]
  4061a4:	ldrb	w0, [sp, #46]
  4061a8:	cmp	w0, #0x30
  4061ac:	b.ls	4061f4 <ferror@plt+0x31f4>  // b.plast
  4061b0:	ldr	x0, [sp, #32]
  4061b4:	ldrb	w0, [x0]
  4061b8:	strb	w0, [sp, #45]
  4061bc:	ldrb	w2, [sp, #45]
  4061c0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4061c4:	add	x1, x0, #0x978
  4061c8:	sxtw	x0, w2
  4061cc:	ldrb	w0, [x1, x0]
  4061d0:	str	w0, [sp, #40]
  4061d4:	ldrb	w0, [sp, #47]
  4061d8:	cmp	w0, #0x0
  4061dc:	b.eq	4061ec <ferror@plt+0x31ec>  // b.none
  4061e0:	ldr	w0, [sp, #40]
  4061e4:	neg	w0, w0
  4061e8:	b	4061f8 <ferror@plt+0x31f8>
  4061ec:	ldr	w0, [sp, #40]
  4061f0:	b	4061f8 <ferror@plt+0x31f8>
  4061f4:	mov	w0, #0x0                   	// #0
  4061f8:	ldp	x29, x30, [sp], #48
  4061fc:	ret
  406200:	stp	x29, x30, [sp, #-64]!
  406204:	mov	x29, sp
  406208:	str	x19, [sp, #16]
  40620c:	str	x0, [sp, #40]
  406210:	str	x1, [sp, #32]
  406214:	b	406224 <ferror@plt+0x3224>
  406218:	ldr	x0, [sp, #40]
  40621c:	add	x0, x0, #0x1
  406220:	str	x0, [sp, #40]
  406224:	ldr	x0, [sp, #40]
  406228:	ldrb	w0, [x0]
  40622c:	bl	403208 <ferror@plt+0x208>
  406230:	and	w0, w0, #0xff
  406234:	mov	w2, w0
  406238:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40623c:	add	x1, x0, #0x5c0
  406240:	sxtw	x0, w2
  406244:	ldrb	w0, [x1, x0]
  406248:	cmp	w0, #0x0
  40624c:	b.ne	406218 <ferror@plt+0x3218>  // b.any
  406250:	b	406260 <ferror@plt+0x3260>
  406254:	ldr	x0, [sp, #32]
  406258:	add	x0, x0, #0x1
  40625c:	str	x0, [sp, #32]
  406260:	ldr	x0, [sp, #32]
  406264:	ldrb	w0, [x0]
  406268:	bl	403208 <ferror@plt+0x208>
  40626c:	and	w0, w0, #0xff
  406270:	mov	w2, w0
  406274:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  406278:	add	x1, x0, #0x5c0
  40627c:	sxtw	x0, w2
  406280:	ldrb	w0, [x1, x0]
  406284:	cmp	w0, #0x0
  406288:	b.ne	406254 <ferror@plt+0x3254>  // b.any
  40628c:	ldr	x0, [sp, #40]
  406290:	bl	406168 <ferror@plt+0x3168>
  406294:	mov	w19, w0
  406298:	ldr	x0, [sp, #32]
  40629c:	bl	406168 <ferror@plt+0x3168>
  4062a0:	sub	w0, w19, w0
  4062a4:	str	w0, [sp, #60]
  4062a8:	ldr	w0, [sp, #60]
  4062ac:	cmp	w0, #0x0
  4062b0:	b.ne	4062e4 <ferror@plt+0x32e4>  // b.any
  4062b4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4062b8:	add	x0, x0, #0x590
  4062bc:	ldr	w1, [x0]
  4062c0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4062c4:	add	x0, x0, #0x594
  4062c8:	ldr	w0, [x0]
  4062cc:	mov	w3, w0
  4062d0:	mov	w2, w1
  4062d4:	ldr	x1, [sp, #32]
  4062d8:	ldr	x0, [sp, #40]
  4062dc:	bl	4178b8 <ferror@plt+0x148b8>
  4062e0:	b	4062e8 <ferror@plt+0x32e8>
  4062e4:	ldr	w0, [sp, #60]
  4062e8:	ldr	x19, [sp, #16]
  4062ec:	ldp	x29, x30, [sp], #64
  4062f0:	ret
  4062f4:	stp	x29, x30, [sp, #-32]!
  4062f8:	mov	x29, sp
  4062fc:	str	x0, [sp, #24]
  406300:	str	x1, [sp, #16]
  406304:	b	406314 <ferror@plt+0x3314>
  406308:	ldr	x0, [sp, #24]
  40630c:	add	x0, x0, #0x1
  406310:	str	x0, [sp, #24]
  406314:	ldr	x0, [sp, #24]
  406318:	ldrb	w0, [x0]
  40631c:	bl	403208 <ferror@plt+0x208>
  406320:	and	w0, w0, #0xff
  406324:	mov	w2, w0
  406328:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40632c:	add	x1, x0, #0x5c0
  406330:	sxtw	x0, w2
  406334:	ldrb	w0, [x1, x0]
  406338:	cmp	w0, #0x0
  40633c:	b.ne	406308 <ferror@plt+0x3308>  // b.any
  406340:	b	406350 <ferror@plt+0x3350>
  406344:	ldr	x0, [sp, #16]
  406348:	add	x0, x0, #0x1
  40634c:	str	x0, [sp, #16]
  406350:	ldr	x0, [sp, #16]
  406354:	ldrb	w0, [x0]
  406358:	bl	403208 <ferror@plt+0x208>
  40635c:	and	w0, w0, #0xff
  406360:	mov	w2, w0
  406364:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  406368:	add	x1, x0, #0x5c0
  40636c:	sxtw	x0, w2
  406370:	ldrb	w0, [x1, x0]
  406374:	cmp	w0, #0x0
  406378:	b.ne	406344 <ferror@plt+0x3344>  // b.any
  40637c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  406380:	add	x0, x0, #0x590
  406384:	ldr	w1, [x0]
  406388:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40638c:	add	x0, x0, #0x594
  406390:	ldr	w0, [x0]
  406394:	mov	w3, w0
  406398:	mov	w2, w1
  40639c:	ldr	x1, [sp, #16]
  4063a0:	ldr	x0, [sp, #24]
  4063a4:	bl	4178b8 <ferror@plt+0x148b8>
  4063a8:	ldp	x29, x30, [sp], #32
  4063ac:	ret
  4063b0:	stp	x29, x30, [sp, #-64]!
  4063b4:	mov	x29, sp
  4063b8:	str	x0, [sp, #24]
  4063bc:	str	x1, [sp, #16]
  4063c0:	add	x0, sp, #0x30
  4063c4:	mov	x2, #0x10                  	// #16
  4063c8:	mov	w1, #0x0                   	// #0
  4063cc:	bl	402b30 <memset@plt>
  4063d0:	mov	x1, #0x0                   	// #0
  4063d4:	ldr	x0, [sp, #24]
  4063d8:	bl	402d10 <strtold@plt>
  4063dc:	str	q0, [sp, #48]
  4063e0:	add	x0, sp, #0x20
  4063e4:	mov	x2, #0x10                  	// #16
  4063e8:	mov	w1, #0x0                   	// #0
  4063ec:	bl	402b30 <memset@plt>
  4063f0:	mov	x1, #0x0                   	// #0
  4063f4:	ldr	x0, [sp, #16]
  4063f8:	bl	402d10 <strtold@plt>
  4063fc:	str	q0, [sp, #32]
  406400:	add	x1, sp, #0x20
  406404:	add	x0, sp, #0x30
  406408:	mov	x2, #0x10                  	// #16
  40640c:	bl	402c90 <memcmp@plt>
  406410:	ldp	x29, x30, [sp], #64
  406414:	ret
  406418:	stp	x29, x30, [sp, #-80]!
  40641c:	mov	x29, sp
  406420:	str	x0, [sp, #24]
  406424:	str	x1, [sp, #16]
  406428:	add	x0, sp, #0x28
  40642c:	mov	x1, x0
  406430:	ldr	x0, [sp, #24]
  406434:	bl	402d10 <strtold@plt>
  406438:	str	q0, [sp, #64]
  40643c:	add	x0, sp, #0x20
  406440:	mov	x1, x0
  406444:	ldr	x0, [sp, #16]
  406448:	bl	402d10 <strtold@plt>
  40644c:	str	q0, [sp, #48]
  406450:	ldr	x0, [sp, #40]
  406454:	ldr	x1, [sp, #24]
  406458:	cmp	x1, x0
  40645c:	b.ne	406480 <ferror@plt+0x3480>  // b.any
  406460:	ldr	x0, [sp, #32]
  406464:	ldr	x1, [sp, #16]
  406468:	cmp	x1, x0
  40646c:	b.ne	406478 <ferror@plt+0x3478>  // b.any
  406470:	mov	w0, #0x0                   	// #0
  406474:	b	406534 <ferror@plt+0x3534>
  406478:	mov	w0, #0xffffffff            	// #-1
  40647c:	b	406534 <ferror@plt+0x3534>
  406480:	ldr	x0, [sp, #32]
  406484:	ldr	x1, [sp, #16]
  406488:	cmp	x1, x0
  40648c:	b.ne	406498 <ferror@plt+0x3498>  // b.any
  406490:	mov	w0, #0x1                   	// #1
  406494:	b	406534 <ferror@plt+0x3534>
  406498:	ldr	q1, [sp, #48]
  40649c:	ldr	q0, [sp, #64]
  4064a0:	bl	41b8f0 <_obstack_memory_used@@Base+0x1454>
  4064a4:	cmp	w0, #0x0
  4064a8:	b.ge	4064b4 <ferror@plt+0x34b4>  // b.tcont
  4064ac:	mov	w0, #0xffffffff            	// #-1
  4064b0:	b	406530 <ferror@plt+0x3530>
  4064b4:	ldr	q1, [sp, #48]
  4064b8:	ldr	q0, [sp, #64]
  4064bc:	bl	41b5bc <_obstack_memory_used@@Base+0x1120>
  4064c0:	cmp	w0, #0x0
  4064c4:	b.le	4064d0 <ferror@plt+0x34d0>
  4064c8:	mov	w0, #0x1                   	// #1
  4064cc:	b	406530 <ferror@plt+0x3530>
  4064d0:	ldr	q1, [sp, #48]
  4064d4:	ldr	q0, [sp, #64]
  4064d8:	bl	41b384 <_obstack_memory_used@@Base+0xee8>
  4064dc:	cmp	w0, #0x0
  4064e0:	b.eq	40652c <ferror@plt+0x352c>  // b.none
  4064e4:	ldr	q1, [sp, #48]
  4064e8:	ldr	q0, [sp, #48]
  4064ec:	bl	41b384 <_obstack_memory_used@@Base+0xee8>
  4064f0:	cmp	w0, #0x0
  4064f4:	b.eq	406524 <ferror@plt+0x3524>  // b.none
  4064f8:	ldr	q1, [sp, #64]
  4064fc:	ldr	q0, [sp, #64]
  406500:	bl	41b384 <_obstack_memory_used@@Base+0xee8>
  406504:	cmp	w0, #0x0
  406508:	b.eq	40651c <ferror@plt+0x351c>  // b.none
  40650c:	ldr	x1, [sp, #16]
  406510:	ldr	x0, [sp, #24]
  406514:	bl	4063b0 <ferror@plt+0x33b0>
  406518:	b	406530 <ferror@plt+0x3530>
  40651c:	mov	w0, #0x1                   	// #1
  406520:	b	406530 <ferror@plt+0x3530>
  406524:	mov	w0, #0xffffffff            	// #-1
  406528:	b	406530 <ferror@plt+0x3530>
  40652c:	mov	w0, #0x0                   	// #0
  406530:	nop
  406534:	ldp	x29, x30, [sp], #80
  406538:	ret
  40653c:	stp	x29, x30, [sp, #-96]!
  406540:	mov	x29, sp
  406544:	str	x19, [sp, #16]
  406548:	str	x0, [sp, #40]
  40654c:	str	x1, [sp, #32]
  406550:	str	xzr, [sp, #88]
  406554:	mov	x0, #0xc                   	// #12
  406558:	str	x0, [sp, #80]
  40655c:	b	40656c <ferror@plt+0x356c>
  406560:	ldr	x0, [sp, #40]
  406564:	add	x0, x0, #0x1
  406568:	str	x0, [sp, #40]
  40656c:	ldr	x0, [sp, #40]
  406570:	ldrb	w0, [x0]
  406574:	bl	403208 <ferror@plt+0x208>
  406578:	and	w0, w0, #0xff
  40657c:	mov	w2, w0
  406580:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  406584:	add	x1, x0, #0x5c0
  406588:	sxtw	x0, w2
  40658c:	ldrb	w0, [x1, x0]
  406590:	cmp	w0, #0x0
  406594:	b.ne	406560 <ferror@plt+0x3560>  // b.any
  406598:	ldr	x1, [sp, #88]
  40659c:	ldr	x0, [sp, #80]
  4065a0:	add	x0, x1, x0
  4065a4:	lsr	x0, x0, #1
  4065a8:	str	x0, [sp, #56]
  4065ac:	ldr	x0, [sp, #40]
  4065b0:	str	x0, [sp, #72]
  4065b4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4065b8:	add	x1, x0, #0x3e8
  4065bc:	ldr	x0, [sp, #56]
  4065c0:	lsl	x0, x0, #4
  4065c4:	add	x0, x1, x0
  4065c8:	ldr	x0, [x0]
  4065cc:	str	x0, [sp, #64]
  4065d0:	ldr	x0, [sp, #64]
  4065d4:	ldrb	w0, [x0]
  4065d8:	cmp	w0, #0x0
  4065dc:	b.ne	406614 <ferror@plt+0x3614>  // b.any
  4065e0:	ldr	x0, [sp, #32]
  4065e4:	cmp	x0, #0x0
  4065e8:	b.eq	4065f8 <ferror@plt+0x35f8>  // b.none
  4065ec:	ldr	x0, [sp, #32]
  4065f0:	ldr	x1, [sp, #72]
  4065f4:	str	x1, [x0]
  4065f8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4065fc:	add	x1, x0, #0x3e8
  406600:	ldr	x0, [sp, #56]
  406604:	lsl	x0, x0, #4
  406608:	add	x0, x1, x0
  40660c:	ldr	w0, [x0, #8]
  406610:	b	4066e8 <ferror@plt+0x36e8>
  406614:	ldr	x0, [sp, #72]
  406618:	ldrb	w0, [x0]
  40661c:	bl	403208 <ferror@plt+0x208>
  406620:	and	w0, w0, #0xff
  406624:	mov	w2, w0
  406628:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40662c:	add	x1, x0, #0x8c0
  406630:	sxtw	x0, w2
  406634:	ldrb	w0, [x1, x0]
  406638:	bl	403208 <ferror@plt+0x208>
  40663c:	and	w19, w0, #0xff
  406640:	ldr	x0, [sp, #64]
  406644:	ldrb	w0, [x0]
  406648:	bl	403208 <ferror@plt+0x208>
  40664c:	and	w0, w0, #0xff
  406650:	cmp	w19, w0
  406654:	b.cs	406664 <ferror@plt+0x3664>  // b.hs, b.nlast
  406658:	ldr	x0, [sp, #56]
  40665c:	str	x0, [sp, #80]
  406660:	b	4066d4 <ferror@plt+0x36d4>
  406664:	ldr	x0, [sp, #72]
  406668:	ldrb	w0, [x0]
  40666c:	bl	403208 <ferror@plt+0x208>
  406670:	and	w0, w0, #0xff
  406674:	mov	w2, w0
  406678:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40667c:	add	x1, x0, #0x8c0
  406680:	sxtw	x0, w2
  406684:	ldrb	w0, [x1, x0]
  406688:	bl	403208 <ferror@plt+0x208>
  40668c:	and	w19, w0, #0xff
  406690:	ldr	x0, [sp, #64]
  406694:	ldrb	w0, [x0]
  406698:	bl	403208 <ferror@plt+0x208>
  40669c:	and	w0, w0, #0xff
  4066a0:	cmp	w19, w0
  4066a4:	b.ls	4066b8 <ferror@plt+0x36b8>  // b.plast
  4066a8:	ldr	x0, [sp, #56]
  4066ac:	add	x0, x0, #0x1
  4066b0:	str	x0, [sp, #88]
  4066b4:	b	4066d4 <ferror@plt+0x36d4>
  4066b8:	ldr	x0, [sp, #72]
  4066bc:	add	x0, x0, #0x1
  4066c0:	str	x0, [sp, #72]
  4066c4:	ldr	x0, [sp, #64]
  4066c8:	add	x0, x0, #0x1
  4066cc:	str	x0, [sp, #64]
  4066d0:	b	4065d0 <ferror@plt+0x35d0>
  4066d4:	ldr	x1, [sp, #88]
  4066d8:	ldr	x0, [sp, #80]
  4066dc:	cmp	x1, x0
  4066e0:	b.cc	406598 <ferror@plt+0x3598>  // b.lo, b.ul, b.last
  4066e4:	mov	w0, #0x0                   	// #0
  4066e8:	ldr	x19, [sp, #16]
  4066ec:	ldp	x29, x30, [sp], #96
  4066f0:	ret
  4066f4:	stp	x29, x30, [sp, #-64]!
  4066f8:	mov	x29, sp
  4066fc:	str	x0, [sp, #24]
  406700:	mov	x1, #0x10                  	// #16
  406704:	ldr	x0, [sp, #24]
  406708:	bl	4156a8 <ferror@plt+0x126a8>
  40670c:	str	x0, [sp, #56]
  406710:	ldr	x0, [sp, #56]
  406714:	cmp	x0, #0x0
  406718:	b.ne	406730 <ferror@plt+0x3730>  // b.any
  40671c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  406720:	add	x0, x0, #0x780
  406724:	bl	402fd0 <gettext@plt>
  406728:	ldr	x1, [sp, #24]
  40672c:	bl	403554 <ferror@plt+0x554>
  406730:	add	x0, sp, #0x28
  406734:	mov	x2, #0x10                  	// #16
  406738:	mov	x1, x0
  40673c:	ldr	x0, [sp, #56]
  406740:	bl	4159fc <ferror@plt+0x129fc>
  406744:	ldr	x0, [sp, #56]
  406748:	bl	415a54 <ferror@plt+0x12a54>
  40674c:	cmp	w0, #0x0
  406750:	b.eq	406768 <ferror@plt+0x3768>  // b.none
  406754:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  406758:	add	x0, x0, #0x7a0
  40675c:	bl	402fd0 <gettext@plt>
  406760:	ldr	x1, [sp, #24]
  406764:	bl	403554 <ferror@plt+0x554>
  406768:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40676c:	add	x0, x0, #0xa98
  406770:	bl	40debc <ferror@plt+0xaebc>
  406774:	add	x3, sp, #0x28
  406778:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40677c:	add	x2, x0, #0xa98
  406780:	mov	x1, #0x10                  	// #16
  406784:	mov	x0, x3
  406788:	bl	40e2ec <ferror@plt+0xb2ec>
  40678c:	nop
  406790:	ldp	x29, x30, [sp], #64
  406794:	ret
  406798:	stp	x29, x30, [sp, #-80]!
  40679c:	mov	x29, sp
  4067a0:	str	x19, [sp, #16]
  4067a4:	str	x0, [sp, #56]
  4067a8:	str	x1, [sp, #48]
  4067ac:	str	x2, [sp, #40]
  4067b0:	bl	402f50 <__errno_location@plt>
  4067b4:	str	wzr, [x0]
  4067b8:	ldr	x2, [sp, #40]
  4067bc:	ldr	x1, [sp, #48]
  4067c0:	ldr	x0, [sp, #56]
  4067c4:	bl	402dd0 <strxfrm@plt>
  4067c8:	str	x0, [sp, #72]
  4067cc:	bl	402f50 <__errno_location@plt>
  4067d0:	ldr	w0, [x0]
  4067d4:	cmp	w0, #0x0
  4067d8:	b.eq	406850 <ferror@plt+0x3850>  // b.none
  4067dc:	bl	402f50 <__errno_location@plt>
  4067e0:	ldr	w19, [x0]
  4067e4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4067e8:	add	x0, x0, #0xa78
  4067ec:	bl	402fd0 <gettext@plt>
  4067f0:	mov	x2, x0
  4067f4:	mov	w1, w19
  4067f8:	mov	w0, #0x0                   	// #0
  4067fc:	bl	402920 <error@plt>
  406800:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  406804:	add	x0, x0, #0xa98
  406808:	bl	402fd0 <gettext@plt>
  40680c:	mov	x2, x0
  406810:	mov	w1, #0x0                   	// #0
  406814:	mov	w0, #0x0                   	// #0
  406818:	bl	402920 <error@plt>
  40681c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  406820:	add	x0, x0, #0xac8
  406824:	bl	402fd0 <gettext@plt>
  406828:	mov	x19, x0
  40682c:	ldr	x2, [sp, #48]
  406830:	mov	w1, #0x8                   	// #8
  406834:	mov	w0, #0x0                   	// #0
  406838:	bl	414f78 <ferror@plt+0x11f78>
  40683c:	mov	x3, x0
  406840:	mov	x2, x19
  406844:	mov	w1, #0x0                   	// #0
  406848:	mov	w0, #0x2                   	// #2
  40684c:	bl	402920 <error@plt>
  406850:	ldr	x0, [sp, #72]
  406854:	ldr	x19, [sp, #16]
  406858:	ldp	x29, x30, [sp], #80
  40685c:	ret
  406860:	mov	x12, #0x1180                	// #4480
  406864:	sub	sp, sp, x12
  406868:	stp	x29, x30, [sp]
  40686c:	mov	x29, sp
  406870:	str	x0, [sp, #40]
  406874:	str	x1, [sp, #32]
  406878:	str	x2, [sp, #24]
  40687c:	str	x3, [sp, #16]
  406880:	str	wzr, [sp, #4476]
  406884:	add	x0, sp, #0x188
  406888:	str	x0, [sp, #4464]
  40688c:	mov	x0, #0xfa0                 	// #4000
  406890:	str	x0, [sp, #4456]
  406894:	str	xzr, [sp, #4448]
  406898:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40689c:	add	x1, x0, #0xa98
  4068a0:	add	x0, sp, #0xcc
  4068a4:	mov	x3, x1
  4068a8:	mov	x1, #0x9c                  	// #156
  4068ac:	mov	x2, x1
  4068b0:	mov	x1, x3
  4068b4:	bl	402880 <memcpy@plt>
  4068b8:	add	x0, sp, #0x30
  4068bc:	add	x1, sp, #0xcc
  4068c0:	mov	x2, #0x9c                  	// #156
  4068c4:	bl	402880 <memcpy@plt>
  4068c8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4068cc:	add	x0, x0, #0x598
  4068d0:	ldrb	w0, [x0]
  4068d4:	cmp	w0, #0x0
  4068d8:	b.eq	406c6c <ferror@plt+0x3c6c>  // b.none
  4068dc:	ldr	x1, [sp, #40]
  4068e0:	ldr	x0, [sp, #32]
  4068e4:	add	x0, x1, x0
  4068e8:	str	x0, [sp, #4432]
  4068ec:	ldr	x1, [sp, #24]
  4068f0:	ldr	x0, [sp, #16]
  4068f4:	add	x0, x1, x0
  4068f8:	str	x0, [sp, #4424]
  4068fc:	ldr	x1, [sp, #32]
  406900:	ldr	x0, [sp, #16]
  406904:	add	x1, x1, x0
  406908:	mov	x0, x1
  40690c:	lsl	x0, x0, #1
  406910:	add	x0, x0, x1
  406914:	add	x0, x0, #0x2
  406918:	str	x0, [sp, #4416]
  40691c:	ldr	x1, [sp, #4456]
  406920:	ldr	x0, [sp, #4416]
  406924:	cmp	x1, x0
  406928:	b.cs	40698c <ferror@plt+0x398c>  // b.hs, b.nlast
  40692c:	ldr	x1, [sp, #4456]
  406930:	mov	x0, x1
  406934:	lsl	x0, x0, #1
  406938:	add	x0, x0, x1
  40693c:	lsr	x0, x0, #1
  406940:	ldr	x2, [sp, #4416]
  406944:	ldr	x1, [sp, #4416]
  406948:	cmp	x2, x0
  40694c:	csel	x0, x1, x0, cs  // cs = hs, nlast
  406950:	str	x0, [sp, #4456]
  406954:	ldr	x0, [sp, #4448]
  406958:	bl	402d20 <free@plt>
  40695c:	ldr	x0, [sp, #4456]
  406960:	bl	402a80 <malloc@plt>
  406964:	str	x0, [sp, #4448]
  406968:	ldr	x0, [sp, #4448]
  40696c:	str	x0, [sp, #4464]
  406970:	ldr	x0, [sp, #4464]
  406974:	cmp	x0, #0x0
  406978:	b.ne	40698c <ferror@plt+0x398c>  // b.any
  40697c:	add	x0, sp, #0x188
  406980:	str	x0, [sp, #4464]
  406984:	mov	x0, #0xfa0                 	// #4000
  406988:	str	x0, [sp, #4456]
  40698c:	ldr	x1, [sp, #40]
  406990:	ldr	x0, [sp, #4432]
  406994:	cmp	x1, x0
  406998:	b.cs	4069b4 <ferror@plt+0x39b4>  // b.hs, b.nlast
  40699c:	ldr	x2, [sp, #4456]
  4069a0:	ldr	x1, [sp, #40]
  4069a4:	ldr	x0, [sp, #4464]
  4069a8:	bl	406798 <ferror@plt+0x3798>
  4069ac:	add	x0, x0, #0x1
  4069b0:	b	4069b8 <ferror@plt+0x39b8>
  4069b4:	mov	x0, #0x0                   	// #0
  4069b8:	str	x0, [sp, #4408]
  4069bc:	ldr	x1, [sp, #4408]
  4069c0:	ldr	x0, [sp, #4456]
  4069c4:	cmp	x1, x0
  4069c8:	cset	w0, ls  // ls = plast
  4069cc:	add	x1, sp, #0x1, lsl #12
  4069d0:	strb	w0, [x1, #311]
  4069d4:	ldr	x1, [sp, #24]
  4069d8:	ldr	x0, [sp, #4424]
  4069dc:	cmp	x1, x0
  4069e0:	b.cs	406a40 <ferror@plt+0x3a40>  // b.hs, b.nlast
  4069e4:	add	x0, sp, #0x1, lsl #12
  4069e8:	ldrb	w0, [x0, #311]
  4069ec:	cmp	w0, #0x0
  4069f0:	b.eq	406a04 <ferror@plt+0x3a04>  // b.none
  4069f4:	ldr	x1, [sp, #4464]
  4069f8:	ldr	x0, [sp, #4408]
  4069fc:	add	x0, x1, x0
  406a00:	b	406a08 <ferror@plt+0x3a08>
  406a04:	mov	x0, #0x0                   	// #0
  406a08:	add	x1, sp, #0x1, lsl #12
  406a0c:	ldrb	w1, [x1, #311]
  406a10:	cmp	w1, #0x0
  406a14:	b.eq	406a28 <ferror@plt+0x3a28>  // b.none
  406a18:	ldr	x2, [sp, #4456]
  406a1c:	ldr	x1, [sp, #4408]
  406a20:	sub	x1, x2, x1
  406a24:	b	406a2c <ferror@plt+0x3a2c>
  406a28:	mov	x1, #0x0                   	// #0
  406a2c:	mov	x2, x1
  406a30:	ldr	x1, [sp, #24]
  406a34:	bl	406798 <ferror@plt+0x3798>
  406a38:	add	x0, x0, #0x1
  406a3c:	b	406a44 <ferror@plt+0x3a44>
  406a40:	mov	x0, #0x0                   	// #0
  406a44:	str	x0, [sp, #4392]
  406a48:	add	x0, sp, #0x1, lsl #12
  406a4c:	ldrb	w0, [x0, #311]
  406a50:	eor	w0, w0, #0x1
  406a54:	and	w0, w0, #0xff
  406a58:	cmp	w0, #0x0
  406a5c:	b.ne	406a78 <ferror@plt+0x3a78>  // b.any
  406a60:	ldr	x1, [sp, #4408]
  406a64:	ldr	x0, [sp, #4392]
  406a68:	add	x0, x1, x0
  406a6c:	ldr	x1, [sp, #4456]
  406a70:	cmp	x1, x0
  406a74:	b.cs	406b14 <ferror@plt+0x3b14>  // b.hs, b.nlast
  406a78:	ldr	x1, [sp, #4408]
  406a7c:	ldr	x0, [sp, #4392]
  406a80:	add	x0, x1, x0
  406a84:	str	x0, [sp, #4456]
  406a88:	ldr	x1, [sp, #4456]
  406a8c:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  406a90:	cmp	x1, x0
  406a94:	b.cs	406ab0 <ferror@plt+0x3ab0>  // b.hs, b.nlast
  406a98:	ldr	x1, [sp, #4456]
  406a9c:	mov	x0, x1
  406aa0:	lsl	x0, x0, #1
  406aa4:	add	x0, x0, x1
  406aa8:	lsr	x0, x0, #1
  406aac:	str	x0, [sp, #4456]
  406ab0:	ldr	x0, [sp, #4448]
  406ab4:	bl	402d20 <free@plt>
  406ab8:	ldr	x0, [sp, #4456]
  406abc:	bl	4183dc <ferror@plt+0x153dc>
  406ac0:	str	x0, [sp, #4448]
  406ac4:	ldr	x0, [sp, #4448]
  406ac8:	str	x0, [sp, #4464]
  406acc:	ldr	x1, [sp, #40]
  406ad0:	ldr	x0, [sp, #4432]
  406ad4:	cmp	x1, x0
  406ad8:	b.cs	406aec <ferror@plt+0x3aec>  // b.hs, b.nlast
  406adc:	ldr	x2, [sp, #4408]
  406ae0:	ldr	x1, [sp, #40]
  406ae4:	ldr	x0, [sp, #4464]
  406ae8:	bl	402dd0 <strxfrm@plt>
  406aec:	ldr	x1, [sp, #24]
  406af0:	ldr	x0, [sp, #4424]
  406af4:	cmp	x1, x0
  406af8:	b.cs	406b14 <ferror@plt+0x3b14>  // b.hs, b.nlast
  406afc:	ldr	x1, [sp, #4464]
  406b00:	ldr	x0, [sp, #4408]
  406b04:	add	x0, x1, x0
  406b08:	ldr	x2, [sp, #4392]
  406b0c:	ldr	x1, [sp, #24]
  406b10:	bl	402dd0 <strxfrm@plt>
  406b14:	ldr	x1, [sp, #40]
  406b18:	ldr	x0, [sp, #4432]
  406b1c:	cmp	x1, x0
  406b20:	b.cs	406b3c <ferror@plt+0x3b3c>  // b.hs, b.nlast
  406b24:	ldr	x0, [sp, #40]
  406b28:	bl	4028f0 <strlen@plt>
  406b2c:	add	x0, x0, #0x1
  406b30:	ldr	x1, [sp, #40]
  406b34:	add	x0, x1, x0
  406b38:	str	x0, [sp, #40]
  406b3c:	ldr	x1, [sp, #24]
  406b40:	ldr	x0, [sp, #4424]
  406b44:	cmp	x1, x0
  406b48:	b.cs	406b64 <ferror@plt+0x3b64>  // b.hs, b.nlast
  406b4c:	ldr	x0, [sp, #24]
  406b50:	bl	4028f0 <strlen@plt>
  406b54:	add	x0, x0, #0x1
  406b58:	ldr	x1, [sp, #24]
  406b5c:	add	x0, x1, x0
  406b60:	str	x0, [sp, #24]
  406b64:	ldr	x1, [sp, #40]
  406b68:	ldr	x0, [sp, #4432]
  406b6c:	cmp	x1, x0
  406b70:	b.cc	406bb0 <ferror@plt+0x3bb0>  // b.lo, b.ul, b.last
  406b74:	ldr	x1, [sp, #24]
  406b78:	ldr	x0, [sp, #4424]
  406b7c:	cmp	x1, x0
  406b80:	b.cc	406bb0 <ferror@plt+0x3bb0>  // b.lo, b.ul, b.last
  406b84:	ldr	x0, [sp, #4408]
  406b88:	str	x0, [sp, #32]
  406b8c:	ldr	x0, [sp, #4464]
  406b90:	str	x0, [sp, #40]
  406b94:	ldr	x0, [sp, #4392]
  406b98:	str	x0, [sp, #16]
  406b9c:	ldr	x1, [sp, #4464]
  406ba0:	ldr	x0, [sp, #4408]
  406ba4:	add	x0, x1, x0
  406ba8:	str	x0, [sp, #24]
  406bac:	b	406c6c <ferror@plt+0x3c6c>
  406bb0:	add	x0, sp, #0x30
  406bb4:	mov	x2, x0
  406bb8:	ldr	x1, [sp, #4408]
  406bbc:	ldr	x0, [sp, #4464]
  406bc0:	bl	40e2ec <ferror@plt+0xb2ec>
  406bc4:	ldr	x1, [sp, #4464]
  406bc8:	ldr	x0, [sp, #4408]
  406bcc:	add	x3, x1, x0
  406bd0:	add	x0, sp, #0x30
  406bd4:	add	x0, x0, #0x9c
  406bd8:	mov	x2, x0
  406bdc:	ldr	x1, [sp, #4392]
  406be0:	mov	x0, x3
  406be4:	bl	40e2ec <ferror@plt+0xb2ec>
  406be8:	ldr	w0, [sp, #4476]
  406bec:	cmp	w0, #0x0
  406bf0:	b.ne	4068fc <ferror@plt+0x38fc>  // b.any
  406bf4:	ldr	x1, [sp, #4464]
  406bf8:	ldr	x0, [sp, #4408]
  406bfc:	add	x3, x1, x0
  406c00:	ldr	x0, [sp, #4408]
  406c04:	ldr	x2, [sp, #4392]
  406c08:	ldr	x1, [sp, #4392]
  406c0c:	cmp	x2, x0
  406c10:	csel	x0, x1, x0, ls  // ls = plast
  406c14:	mov	x2, x0
  406c18:	mov	x1, x3
  406c1c:	ldr	x0, [sp, #4464]
  406c20:	bl	402c90 <memcmp@plt>
  406c24:	str	w0, [sp, #4476]
  406c28:	ldr	w0, [sp, #4476]
  406c2c:	cmp	w0, #0x0
  406c30:	b.ne	4068fc <ferror@plt+0x38fc>  // b.any
  406c34:	ldr	x1, [sp, #4408]
  406c38:	ldr	x0, [sp, #4392]
  406c3c:	cmp	x1, x0
  406c40:	cset	w0, hi  // hi = pmore
  406c44:	and	w0, w0, #0xff
  406c48:	mov	w2, w0
  406c4c:	ldr	x1, [sp, #4408]
  406c50:	ldr	x0, [sp, #4392]
  406c54:	cmp	x1, x0
  406c58:	cset	w0, cc  // cc = lo, ul, last
  406c5c:	and	w0, w0, #0xff
  406c60:	sub	w0, w2, w0
  406c64:	str	w0, [sp, #4476]
  406c68:	b	4068fc <ferror@plt+0x38fc>
  406c6c:	add	x0, sp, #0x30
  406c70:	mov	x2, x0
  406c74:	ldr	x1, [sp, #32]
  406c78:	ldr	x0, [sp, #40]
  406c7c:	bl	40e2ec <ferror@plt+0xb2ec>
  406c80:	add	x1, sp, #0x168
  406c84:	add	x0, sp, #0x30
  406c88:	bl	40dfe0 <ferror@plt+0xafe0>
  406c8c:	add	x0, sp, #0x30
  406c90:	add	x0, x0, #0x9c
  406c94:	mov	x2, x0
  406c98:	ldr	x1, [sp, #16]
  406c9c:	ldr	x0, [sp, #24]
  406ca0:	bl	40e2ec <ferror@plt+0xb2ec>
  406ca4:	add	x0, sp, #0x168
  406ca8:	add	x1, x0, #0x10
  406cac:	add	x0, sp, #0x30
  406cb0:	add	x0, x0, #0x9c
  406cb4:	bl	40dfe0 <ferror@plt+0xafe0>
  406cb8:	add	x0, sp, #0x168
  406cbc:	add	x1, x0, #0x10
  406cc0:	add	x0, sp, #0x168
  406cc4:	mov	x2, #0x10                  	// #16
  406cc8:	bl	402c90 <memcmp@plt>
  406ccc:	str	w0, [sp, #4444]
  406cd0:	ldr	w0, [sp, #4444]
  406cd4:	cmp	w0, #0x0
  406cd8:	b.ne	406d58 <ferror@plt+0x3d58>  // b.any
  406cdc:	ldr	w0, [sp, #4476]
  406ce0:	cmp	w0, #0x0
  406ce4:	b.ne	406d50 <ferror@plt+0x3d50>  // b.any
  406ce8:	ldr	x0, [sp, #32]
  406cec:	ldr	x2, [sp, #16]
  406cf0:	ldr	x1, [sp, #16]
  406cf4:	cmp	x2, x0
  406cf8:	csel	x0, x1, x0, ls  // ls = plast
  406cfc:	mov	x2, x0
  406d00:	ldr	x1, [sp, #24]
  406d04:	ldr	x0, [sp, #40]
  406d08:	bl	402c90 <memcmp@plt>
  406d0c:	str	w0, [sp, #4476]
  406d10:	ldr	w0, [sp, #4476]
  406d14:	cmp	w0, #0x0
  406d18:	b.ne	406d50 <ferror@plt+0x3d50>  // b.any
  406d1c:	ldr	x1, [sp, #32]
  406d20:	ldr	x0, [sp, #16]
  406d24:	cmp	x1, x0
  406d28:	cset	w0, hi  // hi = pmore
  406d2c:	and	w0, w0, #0xff
  406d30:	mov	w2, w0
  406d34:	ldr	x1, [sp, #32]
  406d38:	ldr	x0, [sp, #16]
  406d3c:	cmp	x1, x0
  406d40:	cset	w0, cc  // cc = lo, ul, last
  406d44:	and	w0, w0, #0xff
  406d48:	sub	w0, w2, w0
  406d4c:	str	w0, [sp, #4476]
  406d50:	ldr	w0, [sp, #4476]
  406d54:	str	w0, [sp, #4444]
  406d58:	ldr	x0, [sp, #4448]
  406d5c:	bl	402d20 <free@plt>
  406d60:	ldr	w0, [sp, #4444]
  406d64:	ldp	x29, x30, [sp]
  406d68:	mov	x12, #0x1180                	// #4480
  406d6c:	add	sp, sp, x12
  406d70:	ret
  406d74:	stp	x29, x30, [sp, #-48]!
  406d78:	mov	x29, sp
  406d7c:	str	x0, [sp, #24]
  406d80:	str	x1, [sp, #16]
  406d84:	ldr	x1, [sp, #16]
  406d88:	ldr	x0, [sp, #24]
  406d8c:	sub	x0, x1, x0
  406d90:	mov	w2, #0x0                   	// #0
  406d94:	mov	x1, x0
  406d98:	ldr	x0, [sp, #24]
  406d9c:	bl	4125dc <ferror@plt+0xf5dc>
  406da0:	sxtw	x0, w0
  406da4:	str	x0, [sp, #40]
  406da8:	b	406dd8 <ferror@plt+0x3dd8>
  406dac:	ldr	x0, [sp, #24]
  406db0:	add	x1, x0, #0x1
  406db4:	str	x1, [sp, #24]
  406db8:	ldrb	w0, [x0]
  406dbc:	cmp	w0, #0x9
  406dc0:	cset	w0, eq  // eq = none
  406dc4:	and	w0, w0, #0xff
  406dc8:	sxtw	x0, w0
  406dcc:	ldr	x1, [sp, #40]
  406dd0:	add	x0, x1, x0
  406dd4:	str	x0, [sp, #40]
  406dd8:	ldr	x1, [sp, #24]
  406ddc:	ldr	x0, [sp, #16]
  406de0:	cmp	x1, x0
  406de4:	b.cc	406dac <ferror@plt+0x3dac>  // b.lo, b.ul, b.last
  406de8:	ldr	x0, [sp, #40]
  406dec:	ldp	x29, x30, [sp], #48
  406df0:	ret
  406df4:	stp	x29, x30, [sp, #-32]!
  406df8:	mov	x29, sp
  406dfc:	str	x0, [sp, #24]
  406e00:	str	x1, [sp, #16]
  406e04:	b	406e10 <ferror@plt+0x3e10>
  406e08:	mov	w0, #0x20                  	// #32
  406e0c:	bl	402b60 <putchar_unlocked@plt>
  406e10:	ldr	x0, [sp, #24]
  406e14:	sub	x1, x0, #0x1
  406e18:	str	x1, [sp, #24]
  406e1c:	cmp	x0, #0x0
  406e20:	b.ne	406e08 <ferror@plt+0x3e08>  // b.any
  406e24:	ldr	x0, [sp, #16]
  406e28:	cmp	x0, #0x0
  406e2c:	b.ne	406e44 <ferror@plt+0x3e44>  // b.any
  406e30:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  406e34:	add	x0, x0, #0xae8
  406e38:	bl	402fd0 <gettext@plt>
  406e3c:	bl	402f30 <printf@plt>
  406e40:	b	406e6c <ferror@plt+0x3e6c>
  406e44:	mov	w0, #0x5f                  	// #95
  406e48:	bl	402b60 <putchar_unlocked@plt>
  406e4c:	ldr	x0, [sp, #16]
  406e50:	sub	x0, x0, #0x1
  406e54:	str	x0, [sp, #16]
  406e58:	ldr	x0, [sp, #16]
  406e5c:	cmp	x0, #0x0
  406e60:	b.ne	406e44 <ferror@plt+0x3e44>  // b.any
  406e64:	mov	w0, #0xa                   	// #10
  406e68:	bl	402b60 <putchar_unlocked@plt>
  406e6c:	nop
  406e70:	ldp	x29, x30, [sp], #32
  406e74:	ret
  406e78:	sub	sp, sp, #0x10
  406e7c:	str	x0, [sp, #8]
  406e80:	ldr	x0, [sp, #8]
  406e84:	ldrb	w0, [x0, #50]
  406e88:	cmp	w0, #0x0
  406e8c:	b.ne	406eb0 <ferror@plt+0x3eb0>  // b.any
  406e90:	ldr	x0, [sp, #8]
  406e94:	ldrb	w0, [x0, #52]
  406e98:	cmp	w0, #0x0
  406e9c:	b.ne	406eb0 <ferror@plt+0x3eb0>  // b.any
  406ea0:	ldr	x0, [sp, #8]
  406ea4:	ldrb	w0, [x0, #53]
  406ea8:	cmp	w0, #0x0
  406eac:	b.eq	406eb8 <ferror@plt+0x3eb8>  // b.none
  406eb0:	mov	w0, #0x1                   	// #1
  406eb4:	b	406ebc <ferror@plt+0x3ebc>
  406eb8:	mov	w0, #0x0                   	// #0
  406ebc:	and	w0, w0, #0x1
  406ec0:	and	w0, w0, #0xff
  406ec4:	add	sp, sp, #0x10
  406ec8:	ret
  406ecc:	stp	x29, x30, [sp, #-112]!
  406ed0:	mov	x29, sp
  406ed4:	str	x0, [sp, #24]
  406ed8:	str	x1, [sp, #16]
  406edc:	ldr	x0, [sp, #24]
  406ee0:	ldr	x0, [x0]
  406ee4:	str	x0, [sp, #88]
  406ee8:	ldr	x0, [sp, #88]
  406eec:	str	x0, [sp, #104]
  406ef0:	ldr	x0, [sp, #24]
  406ef4:	ldr	x0, [x0, #8]
  406ef8:	sub	x0, x0, #0x1
  406efc:	ldr	x1, [sp, #88]
  406f00:	add	x0, x1, x0
  406f04:	str	x0, [sp, #96]
  406f08:	ldr	x0, [sp, #16]
  406f0c:	cmp	x0, #0x0
  406f10:	b.eq	407148 <ferror@plt+0x4148>  // b.none
  406f14:	ldr	x0, [sp, #16]
  406f18:	ldr	x0, [x0]
  406f1c:	cmn	x0, #0x1
  406f20:	b.eq	406f34 <ferror@plt+0x3f34>  // b.none
  406f24:	ldr	x1, [sp, #16]
  406f28:	ldr	x0, [sp, #24]
  406f2c:	bl	4056c8 <ferror@plt+0x26c8>
  406f30:	str	x0, [sp, #104]
  406f34:	ldr	x0, [sp, #16]
  406f38:	ldr	x0, [x0, #16]
  406f3c:	cmn	x0, #0x1
  406f40:	b.eq	406f54 <ferror@plt+0x3f54>  // b.none
  406f44:	ldr	x1, [sp, #16]
  406f48:	ldr	x0, [sp, #24]
  406f4c:	bl	4058f4 <ferror@plt+0x28f4>
  406f50:	str	x0, [sp, #96]
  406f54:	ldr	x0, [sp, #16]
  406f58:	ldrb	w0, [x0, #48]
  406f5c:	cmp	w0, #0x0
  406f60:	b.eq	406f74 <ferror@plt+0x3f74>  // b.none
  406f64:	ldr	x0, [sp, #16]
  406f68:	ldr	x0, [x0]
  406f6c:	cmn	x0, #0x1
  406f70:	b.eq	406f98 <ferror@plt+0x3f98>  // b.none
  406f74:	ldr	x0, [sp, #16]
  406f78:	ldrb	w0, [x0, #54]
  406f7c:	cmp	w0, #0x0
  406f80:	b.ne	406f98 <ferror@plt+0x3f98>  // b.any
  406f84:	ldr	x0, [sp, #16]
  406f88:	bl	406e78 <ferror@plt+0x3e78>
  406f8c:	and	w0, w0, #0xff
  406f90:	cmp	w0, #0x0
  406f94:	b.eq	407148 <ferror@plt+0x4148>  // b.none
  406f98:	ldr	x0, [sp, #96]
  406f9c:	ldrb	w0, [x0]
  406fa0:	strb	w0, [sp, #87]
  406fa4:	ldr	x0, [sp, #96]
  406fa8:	strb	wzr, [x0]
  406fac:	b	406fbc <ferror@plt+0x3fbc>
  406fb0:	ldr	x0, [sp, #104]
  406fb4:	add	x0, x0, #0x1
  406fb8:	str	x0, [sp, #104]
  406fbc:	ldr	x0, [sp, #104]
  406fc0:	ldrb	w0, [x0]
  406fc4:	bl	403208 <ferror@plt+0x208>
  406fc8:	and	w0, w0, #0xff
  406fcc:	mov	w2, w0
  406fd0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  406fd4:	add	x1, x0, #0x5c0
  406fd8:	sxtw	x0, w2
  406fdc:	ldrb	w0, [x1, x0]
  406fe0:	cmp	w0, #0x0
  406fe4:	b.ne	406fb0 <ferror@plt+0x3fb0>  // b.any
  406fe8:	ldr	x0, [sp, #104]
  406fec:	str	x0, [sp, #40]
  406ff0:	ldr	x1, [sp, #96]
  406ff4:	ldr	x0, [sp, #104]
  406ff8:	cmp	x1, x0
  406ffc:	b.cs	40700c <ferror@plt+0x400c>  // b.hs, b.nlast
  407000:	ldr	x0, [sp, #96]
  407004:	str	x0, [sp, #40]
  407008:	b	407134 <ferror@plt+0x4134>
  40700c:	ldr	x0, [sp, #16]
  407010:	ldrb	w0, [x0, #54]
  407014:	cmp	w0, #0x0
  407018:	b.eq	407030 <ferror@plt+0x4030>  // b.none
  40701c:	add	x0, sp, #0x28
  407020:	mov	x1, x0
  407024:	ldr	x0, [sp, #104]
  407028:	bl	40653c <ferror@plt+0x353c>
  40702c:	b	407134 <ferror@plt+0x4134>
  407030:	ldr	x0, [sp, #16]
  407034:	ldrb	w0, [x0, #52]
  407038:	cmp	w0, #0x0
  40703c:	b.eq	407058 <ferror@plt+0x4058>  // b.none
  407040:	add	x0, sp, #0x28
  407044:	mov	x1, x0
  407048:	ldr	x0, [sp, #104]
  40704c:	bl	402d10 <strtold@plt>
  407050:	str	q0, [sp, #64]
  407054:	b	407134 <ferror@plt+0x4134>
  407058:	ldr	x0, [sp, #16]
  40705c:	ldrb	w0, [x0, #50]
  407060:	cmp	w0, #0x0
  407064:	b.ne	407078 <ferror@plt+0x4078>  // b.any
  407068:	ldr	x0, [sp, #16]
  40706c:	ldrb	w0, [x0, #53]
  407070:	cmp	w0, #0x0
  407074:	b.eq	407124 <ferror@plt+0x4124>  // b.none
  407078:	ldr	x1, [sp, #104]
  40707c:	ldr	x0, [sp, #96]
  407080:	cmp	x1, x0
  407084:	b.cs	4070a0 <ferror@plt+0x40a0>  // b.hs, b.nlast
  407088:	ldr	x0, [sp, #104]
  40708c:	ldrb	w0, [x0]
  407090:	cmp	w0, #0x2d
  407094:	b.ne	4070a0 <ferror@plt+0x40a0>  // b.any
  407098:	mov	w0, #0x1                   	// #1
  40709c:	b	4070a4 <ferror@plt+0x40a4>
  4070a0:	mov	w0, #0x0                   	// #0
  4070a4:	sxtw	x0, w0
  4070a8:	ldr	x1, [sp, #104]
  4070ac:	add	x0, x1, x0
  4070b0:	str	x0, [sp, #32]
  4070b4:	add	x0, sp, #0x20
  4070b8:	bl	406038 <ferror@plt+0x3038>
  4070bc:	strb	w0, [sp, #86]
  4070c0:	ldrb	w0, [sp, #86]
  4070c4:	cmp	w0, #0x2f
  4070c8:	b.ls	407130 <ferror@plt+0x4130>  // b.plast
  4070cc:	ldr	x0, [sp, #32]
  4070d0:	ldrb	w0, [x0]
  4070d4:	strb	w0, [sp, #85]
  4070d8:	ldr	x1, [sp, #32]
  4070dc:	ldr	x0, [sp, #16]
  4070e0:	ldrb	w0, [x0, #53]
  4070e4:	cmp	w0, #0x0
  4070e8:	b.eq	407110 <ferror@plt+0x4110>  // b.none
  4070ec:	ldrb	w3, [sp, #85]
  4070f0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4070f4:	add	x2, x0, #0x978
  4070f8:	sxtw	x0, w3
  4070fc:	ldrb	w0, [x2, x0]
  407100:	cmp	w0, #0x0
  407104:	b.eq	407110 <ferror@plt+0x4110>  // b.none
  407108:	mov	w0, #0x1                   	// #1
  40710c:	b	407114 <ferror@plt+0x4114>
  407110:	mov	w0, #0x0                   	// #0
  407114:	sxtw	x0, w0
  407118:	add	x0, x1, x0
  40711c:	str	x0, [sp, #40]
  407120:	b	407130 <ferror@plt+0x4130>
  407124:	ldr	x0, [sp, #96]
  407128:	str	x0, [sp, #40]
  40712c:	b	407134 <ferror@plt+0x4134>
  407130:	nop
  407134:	ldr	x0, [sp, #96]
  407138:	ldrb	w1, [sp, #87]
  40713c:	strb	w1, [x0]
  407140:	ldr	x0, [sp, #40]
  407144:	str	x0, [sp, #96]
  407148:	ldr	x1, [sp, #104]
  40714c:	ldr	x0, [sp, #88]
  407150:	bl	406d74 <ferror@plt+0x3d74>
  407154:	str	x0, [sp, #56]
  407158:	ldr	x1, [sp, #96]
  40715c:	ldr	x0, [sp, #104]
  407160:	bl	406d74 <ferror@plt+0x3d74>
  407164:	str	x0, [sp, #48]
  407168:	ldr	x1, [sp, #48]
  40716c:	ldr	x0, [sp, #56]
  407170:	bl	406df4 <ferror@plt+0x3df4>
  407174:	nop
  407178:	ldp	x29, x30, [sp], #112
  40717c:	ret
  407180:	stp	x29, x30, [sp, #-48]!
  407184:	mov	x29, sp
  407188:	str	x0, [sp, #24]
  40718c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407190:	add	x0, x0, #0x9e8
  407194:	ldr	x0, [x0]
  407198:	str	x0, [sp, #40]
  40719c:	ldr	x1, [sp, #40]
  4071a0:	ldr	x0, [sp, #24]
  4071a4:	bl	406ecc <ferror@plt+0x3ecc>
  4071a8:	ldr	x0, [sp, #40]
  4071ac:	cmp	x0, #0x0
  4071b0:	b.eq	407204 <ferror@plt+0x4204>  // b.none
  4071b4:	ldr	x0, [sp, #40]
  4071b8:	ldr	x0, [x0, #64]
  4071bc:	str	x0, [sp, #40]
  4071c0:	ldr	x0, [sp, #40]
  4071c4:	cmp	x0, #0x0
  4071c8:	b.ne	40719c <ferror@plt+0x419c>  // b.any
  4071cc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4071d0:	add	x0, x0, #0x9e2
  4071d4:	ldrb	w0, [x0]
  4071d8:	eor	w0, w0, #0x1
  4071dc:	and	w0, w0, #0xff
  4071e0:	cmp	w0, #0x0
  4071e4:	b.eq	407204 <ferror@plt+0x4204>  // b.none
  4071e8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4071ec:	add	x0, x0, #0x9e1
  4071f0:	ldrb	w0, [x0]
  4071f4:	eor	w0, w0, #0x1
  4071f8:	and	w0, w0, #0xff
  4071fc:	cmp	w0, #0x0
  407200:	b.ne	40719c <ferror@plt+0x419c>  // b.any
  407204:	nop
  407208:	ldp	x29, x30, [sp], #48
  40720c:	ret
  407210:	stp	x29, x30, [sp, #-32]!
  407214:	mov	x29, sp
  407218:	str	x0, [sp, #24]
  40721c:	ldr	x0, [sp, #24]
  407220:	ldr	x0, [x0, #32]
  407224:	cmp	x0, #0x0
  407228:	b.ne	4072d8 <ferror@plt+0x42d8>  // b.any
  40722c:	ldr	x0, [sp, #24]
  407230:	ldr	x0, [x0, #40]
  407234:	cmp	x0, #0x0
  407238:	b.ne	4072d8 <ferror@plt+0x42d8>  // b.any
  40723c:	ldr	x0, [sp, #24]
  407240:	ldrb	w0, [x0, #48]
  407244:	eor	w0, w0, #0x1
  407248:	and	w0, w0, #0xff
  40724c:	cmp	w0, #0x0
  407250:	b.eq	4072d8 <ferror@plt+0x42d8>  // b.none
  407254:	ldr	x0, [sp, #24]
  407258:	ldrb	w0, [x0, #49]
  40725c:	eor	w0, w0, #0x1
  407260:	and	w0, w0, #0xff
  407264:	cmp	w0, #0x0
  407268:	b.eq	4072d8 <ferror@plt+0x42d8>  // b.none
  40726c:	ldr	x0, [sp, #24]
  407270:	bl	406e78 <ferror@plt+0x3e78>
  407274:	and	w0, w0, #0xff
  407278:	eor	w0, w0, #0x1
  40727c:	and	w0, w0, #0xff
  407280:	cmp	w0, #0x0
  407284:	b.eq	4072d8 <ferror@plt+0x42d8>  // b.none
  407288:	ldr	x0, [sp, #24]
  40728c:	ldrb	w0, [x0, #54]
  407290:	eor	w0, w0, #0x1
  407294:	and	w0, w0, #0xff
  407298:	cmp	w0, #0x0
  40729c:	b.eq	4072d8 <ferror@plt+0x42d8>  // b.none
  4072a0:	ldr	x0, [sp, #24]
  4072a4:	ldrb	w0, [x0, #56]
  4072a8:	eor	w0, w0, #0x1
  4072ac:	and	w0, w0, #0xff
  4072b0:	cmp	w0, #0x0
  4072b4:	b.eq	4072d8 <ferror@plt+0x42d8>  // b.none
  4072b8:	ldr	x0, [sp, #24]
  4072bc:	ldrb	w0, [x0, #51]
  4072c0:	eor	w0, w0, #0x1
  4072c4:	and	w0, w0, #0xff
  4072c8:	cmp	w0, #0x0
  4072cc:	b.eq	4072d8 <ferror@plt+0x42d8>  // b.none
  4072d0:	mov	w0, #0x1                   	// #1
  4072d4:	b	4072dc <ferror@plt+0x42dc>
  4072d8:	mov	w0, #0x0                   	// #0
  4072dc:	and	w0, w0, #0x1
  4072e0:	and	w0, w0, #0xff
  4072e4:	ldp	x29, x30, [sp], #32
  4072e8:	ret
  4072ec:	sub	sp, sp, #0x10
  4072f0:	str	x0, [sp, #8]
  4072f4:	str	x1, [sp]
  4072f8:	ldr	x0, [sp, #8]
  4072fc:	ldrb	w0, [x0, #48]
  407300:	cmp	w0, #0x0
  407304:	b.ne	407318 <ferror@plt+0x4318>  // b.any
  407308:	ldr	x0, [sp, #8]
  40730c:	ldrb	w0, [x0, #49]
  407310:	cmp	w0, #0x0
  407314:	b.eq	40732c <ferror@plt+0x432c>  // b.none
  407318:	ldr	x0, [sp]
  40731c:	add	x1, x0, #0x1
  407320:	str	x1, [sp]
  407324:	mov	w1, #0x62                  	// #98
  407328:	strb	w1, [x0]
  40732c:	ldr	x0, [sp, #8]
  407330:	ldr	x1, [x0, #32]
  407334:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407338:	add	x0, x0, #0x7c0
  40733c:	cmp	x1, x0
  407340:	b.ne	407358 <ferror@plt+0x4358>  // b.any
  407344:	ldr	x0, [sp]
  407348:	add	x1, x0, #0x1
  40734c:	str	x1, [sp]
  407350:	mov	w1, #0x64                  	// #100
  407354:	strb	w1, [x0]
  407358:	ldr	x0, [sp, #8]
  40735c:	ldr	x0, [x0, #40]
  407360:	cmp	x0, #0x0
  407364:	b.eq	40737c <ferror@plt+0x437c>  // b.none
  407368:	ldr	x0, [sp]
  40736c:	add	x1, x0, #0x1
  407370:	str	x1, [sp]
  407374:	mov	w1, #0x66                  	// #102
  407378:	strb	w1, [x0]
  40737c:	ldr	x0, [sp, #8]
  407380:	ldrb	w0, [x0, #52]
  407384:	cmp	w0, #0x0
  407388:	b.eq	4073a0 <ferror@plt+0x43a0>  // b.none
  40738c:	ldr	x0, [sp]
  407390:	add	x1, x0, #0x1
  407394:	str	x1, [sp]
  407398:	mov	w1, #0x67                  	// #103
  40739c:	strb	w1, [x0]
  4073a0:	ldr	x0, [sp, #8]
  4073a4:	ldrb	w0, [x0, #53]
  4073a8:	cmp	w0, #0x0
  4073ac:	b.eq	4073c4 <ferror@plt+0x43c4>  // b.none
  4073b0:	ldr	x0, [sp]
  4073b4:	add	x1, x0, #0x1
  4073b8:	str	x1, [sp]
  4073bc:	mov	w1, #0x68                  	// #104
  4073c0:	strb	w1, [x0]
  4073c4:	ldr	x0, [sp, #8]
  4073c8:	ldr	x1, [x0, #32]
  4073cc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4073d0:	add	x0, x0, #0x6c0
  4073d4:	cmp	x1, x0
  4073d8:	b.ne	4073f0 <ferror@plt+0x43f0>  // b.any
  4073dc:	ldr	x0, [sp]
  4073e0:	add	x1, x0, #0x1
  4073e4:	str	x1, [sp]
  4073e8:	mov	w1, #0x69                  	// #105
  4073ec:	strb	w1, [x0]
  4073f0:	ldr	x0, [sp, #8]
  4073f4:	ldrb	w0, [x0, #54]
  4073f8:	cmp	w0, #0x0
  4073fc:	b.eq	407414 <ferror@plt+0x4414>  // b.none
  407400:	ldr	x0, [sp]
  407404:	add	x1, x0, #0x1
  407408:	str	x1, [sp]
  40740c:	mov	w1, #0x4d                  	// #77
  407410:	strb	w1, [x0]
  407414:	ldr	x0, [sp, #8]
  407418:	ldrb	w0, [x0, #50]
  40741c:	cmp	w0, #0x0
  407420:	b.eq	407438 <ferror@plt+0x4438>  // b.none
  407424:	ldr	x0, [sp]
  407428:	add	x1, x0, #0x1
  40742c:	str	x1, [sp]
  407430:	mov	w1, #0x6e                  	// #110
  407434:	strb	w1, [x0]
  407438:	ldr	x0, [sp, #8]
  40743c:	ldrb	w0, [x0, #51]
  407440:	cmp	w0, #0x0
  407444:	b.eq	40745c <ferror@plt+0x445c>  // b.none
  407448:	ldr	x0, [sp]
  40744c:	add	x1, x0, #0x1
  407450:	str	x1, [sp]
  407454:	mov	w1, #0x52                  	// #82
  407458:	strb	w1, [x0]
  40745c:	ldr	x0, [sp, #8]
  407460:	ldrb	w0, [x0, #55]
  407464:	cmp	w0, #0x0
  407468:	b.eq	407480 <ferror@plt+0x4480>  // b.none
  40746c:	ldr	x0, [sp]
  407470:	add	x1, x0, #0x1
  407474:	str	x1, [sp]
  407478:	mov	w1, #0x72                  	// #114
  40747c:	strb	w1, [x0]
  407480:	ldr	x0, [sp, #8]
  407484:	ldrb	w0, [x0, #56]
  407488:	cmp	w0, #0x0
  40748c:	b.eq	4074a4 <ferror@plt+0x44a4>  // b.none
  407490:	ldr	x0, [sp]
  407494:	add	x1, x0, #0x1
  407498:	str	x1, [sp]
  40749c:	mov	w1, #0x56                  	// #86
  4074a0:	strb	w1, [x0]
  4074a4:	ldr	x0, [sp]
  4074a8:	strb	wzr, [x0]
  4074ac:	nop
  4074b0:	add	sp, sp, #0x10
  4074b4:	ret
  4074b8:	stp	x29, x30, [sp, #-352]!
  4074bc:	mov	x29, sp
  4074c0:	stp	x19, x20, [sp, #16]
  4074c4:	str	x0, [sp, #40]
  4074c8:	strb	w1, [sp, #39]
  4074cc:	ldr	x1, [sp, #40]
  4074d0:	add	x0, sp, #0xc8
  4074d4:	ldp	x2, x3, [x1]
  4074d8:	stp	x2, x3, [x0]
  4074dc:	ldp	x2, x3, [x1, #16]
  4074e0:	stp	x2, x3, [x0, #16]
  4074e4:	ldp	x2, x3, [x1, #32]
  4074e8:	stp	x2, x3, [x0, #32]
  4074ec:	ldp	x2, x3, [x1, #48]
  4074f0:	stp	x2, x3, [x0, #48]
  4074f4:	ldr	x1, [x1, #64]
  4074f8:	str	x1, [x0, #64]
  4074fc:	mov	x0, #0x1                   	// #1
  407500:	str	x0, [sp, #336]
  407504:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407508:	add	x0, x0, #0x9e8
  40750c:	ldr	x0, [x0]
  407510:	str	x0, [sp, #344]
  407514:	b	407b20 <ferror@plt+0x4b20>
  407518:	ldr	x0, [sp, #344]
  40751c:	ldrb	w0, [x0, #57]
  407520:	cmp	w0, #0x0
  407524:	b.eq	4076c0 <ferror@plt+0x46c0>  // b.none
  407528:	ldr	x0, [sp, #344]
  40752c:	ldr	x0, [x0]
  407530:	str	x0, [sp, #328]
  407534:	ldr	x0, [sp, #344]
  407538:	ldr	x0, [x0, #16]
  40753c:	str	x0, [sp, #304]
  407540:	add	x0, sp, #0x30
  407544:	str	x0, [sp, #296]
  407548:	add	x0, sp, #0x60
  40754c:	str	x0, [sp, #288]
  407550:	ldr	x0, [sp, #328]
  407554:	cmn	x0, #0x1
  407558:	b.ne	407568 <ferror@plt+0x4568>  // b.any
  40755c:	ldr	x0, [sp, #328]
  407560:	add	x0, x0, #0x1
  407564:	str	x0, [sp, #328]
  407568:	ldr	x0, [sp, #296]
  40756c:	mov	w1, #0x2b                  	// #43
  407570:	strh	w1, [x0]
  407574:	ldr	x0, [sp, #296]
  407578:	add	x19, x0, #0x1
  40757c:	add	x0, sp, #0xb0
  407580:	mov	x1, x0
  407584:	ldr	x0, [sp, #328]
  407588:	bl	412514 <ferror@plt+0xf514>
  40758c:	mov	x1, x0
  407590:	mov	x0, x19
  407594:	bl	402a00 <stpcpy@plt>
  407598:	str	x0, [sp, #296]
  40759c:	ldr	x0, [sp, #288]
  4075a0:	mov	w1, #0x6b2d                	// #27437
  4075a4:	movk	w1, #0x20, lsl #16
  4075a8:	str	w1, [x0]
  4075ac:	ldr	x0, [sp, #288]
  4075b0:	add	x19, x0, #0x3
  4075b4:	ldr	x0, [sp, #328]
  4075b8:	add	x0, x0, #0x1
  4075bc:	add	x1, sp, #0xb0
  4075c0:	bl	412514 <ferror@plt+0xf514>
  4075c4:	mov	x1, x0
  4075c8:	mov	x0, x19
  4075cc:	bl	402a00 <stpcpy@plt>
  4075d0:	str	x0, [sp, #288]
  4075d4:	ldr	x0, [sp, #344]
  4075d8:	ldr	x0, [x0, #16]
  4075dc:	cmn	x0, #0x1
  4075e0:	b.eq	407674 <ferror@plt+0x4674>  // b.none
  4075e4:	ldr	x2, [sp, #296]
  4075e8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  4075ec:	add	x1, x0, #0xb00
  4075f0:	mov	x0, x2
  4075f4:	ldrh	w2, [x1]
  4075f8:	strh	w2, [x0]
  4075fc:	ldrb	w1, [x1, #2]
  407600:	strb	w1, [x0, #2]
  407604:	ldr	x0, [sp, #296]
  407608:	add	x19, x0, #0x2
  40760c:	ldr	x0, [sp, #304]
  407610:	add	x0, x0, #0x1
  407614:	add	x1, sp, #0xb0
  407618:	bl	412514 <ferror@plt+0xf514>
  40761c:	mov	x1, x0
  407620:	mov	x0, x19
  407624:	bl	402e00 <strcpy@plt>
  407628:	ldr	x0, [sp, #288]
  40762c:	mov	w1, #0x2c                  	// #44
  407630:	strh	w1, [x0]
  407634:	ldr	x0, [sp, #288]
  407638:	add	x19, x0, #0x1
  40763c:	ldr	x0, [sp, #344]
  407640:	ldr	x0, [x0, #24]
  407644:	cmn	x0, #0x1
  407648:	cset	w0, eq  // eq = none
  40764c:	and	w0, w0, #0xff
  407650:	and	x1, x0, #0xff
  407654:	ldr	x0, [sp, #304]
  407658:	add	x0, x1, x0
  40765c:	add	x0, x0, #0x1
  407660:	add	x1, sp, #0xb0
  407664:	bl	412514 <ferror@plt+0xf514>
  407668:	mov	x1, x0
  40766c:	mov	x0, x19
  407670:	bl	402e00 <strcpy@plt>
  407674:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  407678:	add	x0, x0, #0xb08
  40767c:	bl	402fd0 <gettext@plt>
  407680:	mov	x19, x0
  407684:	add	x0, sp, #0x30
  407688:	mov	x1, x0
  40768c:	mov	w0, #0x0                   	// #0
  407690:	bl	41532c <ferror@plt+0x1232c>
  407694:	mov	x20, x0
  407698:	add	x0, sp, #0x60
  40769c:	mov	x1, x0
  4076a0:	mov	w0, #0x1                   	// #1
  4076a4:	bl	41532c <ferror@plt+0x1232c>
  4076a8:	mov	x4, x0
  4076ac:	mov	x3, x20
  4076b0:	mov	x2, x19
  4076b4:	mov	w1, #0x0                   	// #0
  4076b8:	mov	w0, #0x0                   	// #0
  4076bc:	bl	402920 <error@plt>
  4076c0:	ldr	x0, [sp, #344]
  4076c4:	ldr	x0, [x0]
  4076c8:	cmn	x0, #0x1
  4076cc:	b.eq	4076f0 <ferror@plt+0x46f0>  // b.none
  4076d0:	ldr	x0, [sp, #344]
  4076d4:	ldr	x1, [x0, #16]
  4076d8:	ldr	x0, [sp, #344]
  4076dc:	ldr	x0, [x0]
  4076e0:	cmp	x1, x0
  4076e4:	b.cs	4076f0 <ferror@plt+0x46f0>  // b.hs, b.nlast
  4076e8:	mov	w0, #0x1                   	// #1
  4076ec:	b	4076f4 <ferror@plt+0x46f4>
  4076f0:	mov	w0, #0x0                   	// #0
  4076f4:	strb	w0, [sp, #287]
  4076f8:	ldrb	w0, [sp, #287]
  4076fc:	and	w0, w0, #0x1
  407700:	strb	w0, [sp, #287]
  407704:	ldrb	w0, [sp, #287]
  407708:	cmp	w0, #0x0
  40770c:	b.eq	407730 <ferror@plt+0x4730>  // b.none
  407710:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  407714:	add	x0, x0, #0xb38
  407718:	bl	402fd0 <gettext@plt>
  40771c:	ldr	x3, [sp, #336]
  407720:	mov	x2, x0
  407724:	mov	w1, #0x0                   	// #0
  407728:	mov	w0, #0x0                   	// #0
  40772c:	bl	402920 <error@plt>
  407730:	ldr	x0, [sp, #344]
  407734:	bl	406e78 <ferror@plt+0x3e78>
  407738:	and	w0, w0, #0xff
  40773c:	cmp	w0, #0x0
  407740:	b.ne	407754 <ferror@plt+0x4754>  // b.any
  407744:	ldr	x0, [sp, #344]
  407748:	ldrb	w0, [x0, #54]
  40774c:	cmp	w0, #0x0
  407750:	b.eq	40775c <ferror@plt+0x475c>  // b.none
  407754:	mov	w0, #0x1                   	// #1
  407758:	b	407760 <ferror@plt+0x4760>
  40775c:	mov	w0, #0x0                   	// #0
  407760:	strb	w0, [sp, #286]
  407764:	ldrb	w0, [sp, #286]
  407768:	and	w0, w0, #0x1
  40776c:	strb	w0, [sp, #286]
  407770:	ldr	x0, [sp, #344]
  407774:	ldr	x0, [x0, #16]
  407778:	cmp	x0, #0x0
  40777c:	b.ne	407798 <ferror@plt+0x4798>  // b.any
  407780:	ldr	x0, [sp, #344]
  407784:	ldr	x0, [x0, #24]
  407788:	cmp	x0, #0x0
  40778c:	b.eq	407798 <ferror@plt+0x4798>  // b.none
  407790:	mov	w0, #0x1                   	// #1
  407794:	b	40779c <ferror@plt+0x479c>
  407798:	mov	w0, #0x0                   	// #0
  40779c:	strb	w0, [sp, #285]
  4077a0:	ldrb	w0, [sp, #285]
  4077a4:	and	w0, w0, #0x1
  4077a8:	strb	w0, [sp, #285]
  4077ac:	ldrb	w0, [sp, #287]
  4077b0:	eor	w0, w0, #0x1
  4077b4:	and	w0, w0, #0xff
  4077b8:	cmp	w0, #0x0
  4077bc:	b.eq	407898 <ferror@plt+0x4898>  // b.none
  4077c0:	ldrb	w0, [sp, #39]
  4077c4:	eor	w0, w0, #0x1
  4077c8:	and	w0, w0, #0xff
  4077cc:	cmp	w0, #0x0
  4077d0:	b.eq	407898 <ferror@plt+0x4898>  // b.none
  4077d4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4077d8:	add	x0, x0, #0x4b0
  4077dc:	ldr	w0, [x0]
  4077e0:	cmp	w0, #0x100
  4077e4:	b.ne	407898 <ferror@plt+0x4898>  // b.any
  4077e8:	ldrb	w0, [sp, #285]
  4077ec:	eor	w0, w0, #0x1
  4077f0:	and	w0, w0, #0xff
  4077f4:	cmp	w0, #0x0
  4077f8:	b.eq	407898 <ferror@plt+0x4898>  // b.none
  4077fc:	ldr	x0, [sp, #344]
  407800:	ldrb	w0, [x0, #48]
  407804:	eor	w0, w0, #0x1
  407808:	and	w0, w0, #0xff
  40780c:	cmp	w0, #0x0
  407810:	b.eq	407828 <ferror@plt+0x4828>  // b.none
  407814:	ldrb	w0, [sp, #286]
  407818:	eor	w0, w0, #0x1
  40781c:	and	w0, w0, #0xff
  407820:	cmp	w0, #0x0
  407824:	b.ne	407878 <ferror@plt+0x4878>  // b.any
  407828:	ldr	x0, [sp, #344]
  40782c:	ldrb	w0, [x0, #48]
  407830:	eor	w0, w0, #0x1
  407834:	and	w0, w0, #0xff
  407838:	cmp	w0, #0x0
  40783c:	b.eq	407850 <ferror@plt+0x4850>  // b.none
  407840:	ldr	x0, [sp, #344]
  407844:	ldr	x0, [x0, #8]
  407848:	cmp	x0, #0x0
  40784c:	b.ne	407878 <ferror@plt+0x4878>  // b.any
  407850:	ldr	x0, [sp, #344]
  407854:	ldrb	w0, [x0, #49]
  407858:	eor	w0, w0, #0x1
  40785c:	and	w0, w0, #0xff
  407860:	cmp	w0, #0x0
  407864:	b.eq	407898 <ferror@plt+0x4898>  // b.none
  407868:	ldr	x0, [sp, #344]
  40786c:	ldr	x0, [x0, #24]
  407870:	cmp	x0, #0x0
  407874:	b.eq	407898 <ferror@plt+0x4898>  // b.none
  407878:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40787c:	add	x0, x0, #0xb68
  407880:	bl	402fd0 <gettext@plt>
  407884:	ldr	x3, [sp, #336]
  407888:	mov	x2, x0
  40788c:	mov	w1, #0x0                   	// #0
  407890:	mov	w0, #0x0                   	// #0
  407894:	bl	402920 <error@plt>
  407898:	ldrb	w0, [sp, #39]
  40789c:	eor	w0, w0, #0x1
  4078a0:	and	w0, w0, #0xff
  4078a4:	cmp	w0, #0x0
  4078a8:	b.eq	407934 <ferror@plt+0x4934>  // b.none
  4078ac:	ldr	x0, [sp, #344]
  4078b0:	bl	406e78 <ferror@plt+0x3e78>
  4078b4:	and	w0, w0, #0xff
  4078b8:	cmp	w0, #0x0
  4078bc:	b.eq	407934 <ferror@plt+0x4934>  // b.none
  4078c0:	ldr	x0, [sp, #344]
  4078c4:	ldr	x0, [x0]
  4078c8:	add	x0, x0, #0x1
  4078cc:	str	x0, [sp, #320]
  4078d0:	ldr	x0, [sp, #344]
  4078d4:	ldr	x0, [x0, #16]
  4078d8:	add	x0, x0, #0x1
  4078dc:	str	x0, [sp, #272]
  4078e0:	ldr	x0, [sp, #320]
  4078e4:	cmp	x0, #0x0
  4078e8:	b.ne	4078f8 <ferror@plt+0x48f8>  // b.any
  4078ec:	ldr	x0, [sp, #320]
  4078f0:	add	x0, x0, #0x1
  4078f4:	str	x0, [sp, #320]
  4078f8:	ldr	x0, [sp, #272]
  4078fc:	cmp	x0, #0x0
  407900:	b.eq	407914 <ferror@plt+0x4914>  // b.none
  407904:	ldr	x1, [sp, #320]
  407908:	ldr	x0, [sp, #272]
  40790c:	cmp	x1, x0
  407910:	b.cs	407934 <ferror@plt+0x4934>  // b.hs, b.nlast
  407914:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  407918:	add	x0, x0, #0xbb0
  40791c:	bl	402fd0 <gettext@plt>
  407920:	ldr	x3, [sp, #336]
  407924:	mov	x2, x0
  407928:	mov	w1, #0x0                   	// #0
  40792c:	mov	w0, #0x0                   	// #0
  407930:	bl	402920 <error@plt>
  407934:	ldr	x0, [sp, #232]
  407938:	cmp	x0, #0x0
  40793c:	b.eq	407958 <ferror@plt+0x4958>  // b.none
  407940:	ldr	x1, [sp, #232]
  407944:	ldr	x0, [sp, #344]
  407948:	ldr	x0, [x0, #32]
  40794c:	cmp	x1, x0
  407950:	b.ne	407958 <ferror@plt+0x4958>  // b.any
  407954:	str	xzr, [sp, #232]
  407958:	ldr	x0, [sp, #240]
  40795c:	cmp	x0, #0x0
  407960:	b.eq	40797c <ferror@plt+0x497c>  // b.none
  407964:	ldr	x1, [sp, #240]
  407968:	ldr	x0, [sp, #344]
  40796c:	ldr	x0, [x0, #40]
  407970:	cmp	x1, x0
  407974:	b.ne	40797c <ferror@plt+0x497c>  // b.any
  407978:	str	xzr, [sp, #240]
  40797c:	ldrb	w0, [sp, #248]
  407980:	mov	w1, w0
  407984:	ldr	x0, [sp, #344]
  407988:	ldrb	w0, [x0, #48]
  40798c:	eor	w0, w0, #0x1
  407990:	and	w0, w0, #0xff
  407994:	and	w0, w1, w0
  407998:	cmp	w0, #0x0
  40799c:	cset	w0, ne  // ne = any
  4079a0:	and	w0, w0, #0xff
  4079a4:	strb	w0, [sp, #248]
  4079a8:	ldrb	w0, [sp, #249]
  4079ac:	mov	w1, w0
  4079b0:	ldr	x0, [sp, #344]
  4079b4:	ldrb	w0, [x0, #49]
  4079b8:	eor	w0, w0, #0x1
  4079bc:	and	w0, w0, #0xff
  4079c0:	and	w0, w1, w0
  4079c4:	cmp	w0, #0x0
  4079c8:	cset	w0, ne  // ne = any
  4079cc:	and	w0, w0, #0xff
  4079d0:	strb	w0, [sp, #249]
  4079d4:	ldrb	w0, [sp, #254]
  4079d8:	mov	w1, w0
  4079dc:	ldr	x0, [sp, #344]
  4079e0:	ldrb	w0, [x0, #54]
  4079e4:	eor	w0, w0, #0x1
  4079e8:	and	w0, w0, #0xff
  4079ec:	and	w0, w1, w0
  4079f0:	cmp	w0, #0x0
  4079f4:	cset	w0, ne  // ne = any
  4079f8:	and	w0, w0, #0xff
  4079fc:	strb	w0, [sp, #254]
  407a00:	ldrb	w0, [sp, #250]
  407a04:	mov	w1, w0
  407a08:	ldr	x0, [sp, #344]
  407a0c:	ldrb	w0, [x0, #50]
  407a10:	eor	w0, w0, #0x1
  407a14:	and	w0, w0, #0xff
  407a18:	and	w0, w1, w0
  407a1c:	cmp	w0, #0x0
  407a20:	cset	w0, ne  // ne = any
  407a24:	and	w0, w0, #0xff
  407a28:	strb	w0, [sp, #250]
  407a2c:	ldrb	w0, [sp, #252]
  407a30:	mov	w1, w0
  407a34:	ldr	x0, [sp, #344]
  407a38:	ldrb	w0, [x0, #52]
  407a3c:	eor	w0, w0, #0x1
  407a40:	and	w0, w0, #0xff
  407a44:	and	w0, w1, w0
  407a48:	cmp	w0, #0x0
  407a4c:	cset	w0, ne  // ne = any
  407a50:	and	w0, w0, #0xff
  407a54:	strb	w0, [sp, #252]
  407a58:	ldrb	w0, [sp, #253]
  407a5c:	mov	w1, w0
  407a60:	ldr	x0, [sp, #344]
  407a64:	ldrb	w0, [x0, #53]
  407a68:	eor	w0, w0, #0x1
  407a6c:	and	w0, w0, #0xff
  407a70:	and	w0, w1, w0
  407a74:	cmp	w0, #0x0
  407a78:	cset	w0, ne  // ne = any
  407a7c:	and	w0, w0, #0xff
  407a80:	strb	w0, [sp, #253]
  407a84:	ldrb	w0, [sp, #251]
  407a88:	mov	w1, w0
  407a8c:	ldr	x0, [sp, #344]
  407a90:	ldrb	w0, [x0, #51]
  407a94:	eor	w0, w0, #0x1
  407a98:	and	w0, w0, #0xff
  407a9c:	and	w0, w1, w0
  407aa0:	cmp	w0, #0x0
  407aa4:	cset	w0, ne  // ne = any
  407aa8:	and	w0, w0, #0xff
  407aac:	strb	w0, [sp, #251]
  407ab0:	ldrb	w0, [sp, #256]
  407ab4:	mov	w1, w0
  407ab8:	ldr	x0, [sp, #344]
  407abc:	ldrb	w0, [x0, #56]
  407ac0:	eor	w0, w0, #0x1
  407ac4:	and	w0, w0, #0xff
  407ac8:	and	w0, w1, w0
  407acc:	cmp	w0, #0x0
  407ad0:	cset	w0, ne  // ne = any
  407ad4:	and	w0, w0, #0xff
  407ad8:	strb	w0, [sp, #256]
  407adc:	ldrb	w0, [sp, #255]
  407ae0:	mov	w1, w0
  407ae4:	ldr	x0, [sp, #344]
  407ae8:	ldrb	w0, [x0, #55]
  407aec:	eor	w0, w0, #0x1
  407af0:	and	w0, w0, #0xff
  407af4:	and	w0, w1, w0
  407af8:	cmp	w0, #0x0
  407afc:	cset	w0, ne  // ne = any
  407b00:	and	w0, w0, #0xff
  407b04:	strb	w0, [sp, #255]
  407b08:	ldr	x0, [sp, #344]
  407b0c:	ldr	x0, [x0, #64]
  407b10:	str	x0, [sp, #344]
  407b14:	ldr	x0, [sp, #336]
  407b18:	add	x0, x0, #0x1
  407b1c:	str	x0, [sp, #336]
  407b20:	ldr	x0, [sp, #344]
  407b24:	cmp	x0, #0x0
  407b28:	b.ne	407518 <ferror@plt+0x4518>  // b.any
  407b2c:	add	x0, sp, #0xc8
  407b30:	bl	407210 <ferror@plt+0x4210>
  407b34:	and	w0, w0, #0xff
  407b38:	eor	w0, w0, #0x1
  407b3c:	and	w0, w0, #0xff
  407b40:	cmp	w0, #0x0
  407b44:	b.ne	407b90 <ferror@plt+0x4b90>  // b.any
  407b48:	ldrb	w0, [sp, #255]
  407b4c:	cmp	w0, #0x0
  407b50:	b.eq	407c28 <ferror@plt+0x4c28>  // b.none
  407b54:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407b58:	add	x0, x0, #0x9e1
  407b5c:	ldrb	w0, [x0]
  407b60:	cmp	w0, #0x0
  407b64:	b.ne	407b7c <ferror@plt+0x4b7c>  // b.any
  407b68:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407b6c:	add	x0, x0, #0x9e2
  407b70:	ldrb	w0, [x0]
  407b74:	cmp	w0, #0x0
  407b78:	b.eq	407c28 <ferror@plt+0x4c28>  // b.none
  407b7c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407b80:	add	x0, x0, #0x9e8
  407b84:	ldr	x0, [x0]
  407b88:	cmp	x0, #0x0
  407b8c:	b.eq	407c28 <ferror@plt+0x4c28>  // b.none
  407b90:	ldrb	w0, [sp, #255]
  407b94:	strb	w0, [sp, #319]
  407b98:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407b9c:	add	x0, x0, #0x9e1
  407ba0:	ldrb	w0, [x0]
  407ba4:	eor	w0, w0, #0x1
  407ba8:	and	w0, w0, #0xff
  407bac:	cmp	w0, #0x0
  407bb0:	b.eq	407bd4 <ferror@plt+0x4bd4>  // b.none
  407bb4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407bb8:	add	x0, x0, #0x9e2
  407bbc:	ldrb	w0, [x0]
  407bc0:	eor	w0, w0, #0x1
  407bc4:	and	w0, w0, #0xff
  407bc8:	cmp	w0, #0x0
  407bcc:	b.eq	407bd4 <ferror@plt+0x4bd4>  // b.none
  407bd0:	strb	wzr, [sp, #255]
  407bd4:	add	x1, sp, #0x90
  407bd8:	add	x0, sp, #0xc8
  407bdc:	bl	4072ec <ferror@plt+0x42ec>
  407be0:	add	x0, sp, #0x90
  407be4:	bl	4028f0 <strlen@plt>
  407be8:	bl	403274 <ferror@plt+0x274>
  407bec:	mov	x2, x0
  407bf0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  407bf4:	add	x1, x0, #0xbe0
  407bf8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  407bfc:	add	x0, x0, #0xc00
  407c00:	bl	4028b0 <ngettext@plt>
  407c04:	mov	x1, x0
  407c08:	add	x0, sp, #0x90
  407c0c:	mov	x3, x0
  407c10:	mov	x2, x1
  407c14:	mov	w1, #0x0                   	// #0
  407c18:	mov	w0, #0x0                   	// #0
  407c1c:	bl	402920 <error@plt>
  407c20:	ldrb	w0, [sp, #319]
  407c24:	strb	w0, [sp, #255]
  407c28:	ldrb	w0, [sp, #255]
  407c2c:	cmp	w0, #0x0
  407c30:	b.eq	407c9c <ferror@plt+0x4c9c>  // b.none
  407c34:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407c38:	add	x0, x0, #0x9e1
  407c3c:	ldrb	w0, [x0]
  407c40:	eor	w0, w0, #0x1
  407c44:	and	w0, w0, #0xff
  407c48:	cmp	w0, #0x0
  407c4c:	b.eq	407c9c <ferror@plt+0x4c9c>  // b.none
  407c50:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407c54:	add	x0, x0, #0x9e2
  407c58:	ldrb	w0, [x0]
  407c5c:	eor	w0, w0, #0x1
  407c60:	and	w0, w0, #0xff
  407c64:	cmp	w0, #0x0
  407c68:	b.eq	407c9c <ferror@plt+0x4c9c>  // b.none
  407c6c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407c70:	add	x0, x0, #0x9e8
  407c74:	ldr	x0, [x0]
  407c78:	cmp	x0, #0x0
  407c7c:	b.eq	407c9c <ferror@plt+0x4c9c>  // b.none
  407c80:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  407c84:	add	x0, x0, #0xc18
  407c88:	bl	402fd0 <gettext@plt>
  407c8c:	mov	x2, x0
  407c90:	mov	w1, #0x0                   	// #0
  407c94:	mov	w0, #0x0                   	// #0
  407c98:	bl	402920 <error@plt>
  407c9c:	nop
  407ca0:	ldp	x19, x20, [sp, #16]
  407ca4:	ldp	x29, x30, [sp], #352
  407ca8:	ret
  407cac:	mov	x12, #0x1060                	// #4192
  407cb0:	sub	sp, sp, x12
  407cb4:	stp	x29, x30, [sp]
  407cb8:	mov	x29, sp
  407cbc:	str	x19, [sp, #16]
  407cc0:	str	x0, [sp, #40]
  407cc4:	str	x1, [sp, #32]
  407cc8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407ccc:	add	x0, x0, #0x9e8
  407cd0:	ldr	x0, [x0]
  407cd4:	str	x0, [sp, #4184]
  407cd8:	ldr	x0, [sp, #40]
  407cdc:	ldr	x0, [x0, #16]
  407ce0:	str	x0, [sp, #4176]
  407ce4:	ldr	x0, [sp, #32]
  407ce8:	ldr	x0, [x0, #16]
  407cec:	str	x0, [sp, #4168]
  407cf0:	ldr	x0, [sp, #40]
  407cf4:	ldr	x0, [x0, #24]
  407cf8:	str	x0, [sp, #4160]
  407cfc:	ldr	x0, [sp, #32]
  407d00:	ldr	x0, [x0, #24]
  407d04:	str	x0, [sp, #4152]
  407d08:	ldr	x0, [sp, #4184]
  407d0c:	ldr	x0, [x0, #40]
  407d10:	str	x0, [sp, #4080]
  407d14:	ldr	x0, [sp, #4184]
  407d18:	ldr	x0, [x0, #32]
  407d1c:	str	x0, [sp, #4072]
  407d20:	ldr	x0, [sp, #4176]
  407d24:	ldr	x2, [sp, #4160]
  407d28:	ldr	x1, [sp, #4160]
  407d2c:	cmp	x2, x0
  407d30:	csel	x0, x1, x0, cs  // cs = hs, nlast
  407d34:	str	x0, [sp, #4160]
  407d38:	ldr	x0, [sp, #4168]
  407d3c:	ldr	x2, [sp, #4152]
  407d40:	ldr	x1, [sp, #4152]
  407d44:	cmp	x2, x0
  407d48:	csel	x0, x1, x0, cs  // cs = hs, nlast
  407d4c:	str	x0, [sp, #4152]
  407d50:	ldr	x1, [sp, #4160]
  407d54:	ldr	x0, [sp, #4176]
  407d58:	sub	x0, x1, x0
  407d5c:	str	x0, [sp, #4064]
  407d60:	ldr	x1, [sp, #4152]
  407d64:	ldr	x0, [sp, #4168]
  407d68:	sub	x0, x1, x0
  407d6c:	str	x0, [sp, #4056]
  407d70:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  407d74:	add	x0, x0, #0x598
  407d78:	ldrb	w0, [x0]
  407d7c:	cmp	w0, #0x0
  407d80:	b.ne	407dc8 <ferror@plt+0x4dc8>  // b.any
  407d84:	ldr	x0, [sp, #4184]
  407d88:	bl	406e78 <ferror@plt+0x3e78>
  407d8c:	and	w0, w0, #0xff
  407d90:	cmp	w0, #0x0
  407d94:	b.ne	407dc8 <ferror@plt+0x4dc8>  // b.any
  407d98:	ldr	x0, [sp, #4184]
  407d9c:	ldrb	w0, [x0, #54]
  407da0:	cmp	w0, #0x0
  407da4:	b.ne	407dc8 <ferror@plt+0x4dc8>  // b.any
  407da8:	ldr	x0, [sp, #4184]
  407dac:	ldrb	w0, [x0, #51]
  407db0:	cmp	w0, #0x0
  407db4:	b.ne	407dc8 <ferror@plt+0x4dc8>  // b.any
  407db8:	ldr	x0, [sp, #4184]
  407dbc:	ldrb	w0, [x0, #56]
  407dc0:	cmp	w0, #0x0
  407dc4:	b.eq	40821c <ferror@plt+0x521c>  // b.none
  407dc8:	ldr	x0, [sp, #4072]
  407dcc:	cmp	x0, #0x0
  407dd0:	b.ne	407de0 <ferror@plt+0x4de0>  // b.any
  407dd4:	ldr	x0, [sp, #4080]
  407dd8:	cmp	x0, #0x0
  407ddc:	b.eq	407ffc <ferror@plt+0x4ffc>  // b.none
  407de0:	ldr	x1, [sp, #4064]
  407de4:	ldr	x0, [sp, #4056]
  407de8:	add	x0, x1, x0
  407dec:	add	x0, x0, #0x2
  407df0:	str	x0, [sp, #4048]
  407df4:	ldr	x0, [sp, #4048]
  407df8:	cmp	x0, #0xfa0
  407dfc:	b.hi	407e10 <ferror@plt+0x4e10>  // b.pmore
  407e00:	add	x0, sp, #0x30
  407e04:	str	x0, [sp, #4136]
  407e08:	str	xzr, [sp, #4096]
  407e0c:	b	407e24 <ferror@plt+0x4e24>
  407e10:	ldr	x0, [sp, #4048]
  407e14:	bl	4183dc <ferror@plt+0x153dc>
  407e18:	str	x0, [sp, #4096]
  407e1c:	ldr	x0, [sp, #4096]
  407e20:	str	x0, [sp, #4136]
  407e24:	ldr	x0, [sp, #4064]
  407e28:	add	x0, x0, #0x1
  407e2c:	ldr	x1, [sp, #4136]
  407e30:	add	x0, x1, x0
  407e34:	str	x0, [sp, #4128]
  407e38:	str	xzr, [sp, #4088]
  407e3c:	ldr	x0, [sp, #4088]
  407e40:	str	x0, [sp, #4120]
  407e44:	b	407ef8 <ferror@plt+0x4ef8>
  407e48:	ldr	x0, [sp, #4072]
  407e4c:	cmp	x0, #0x0
  407e50:	b.eq	407e8c <ferror@plt+0x4e8c>  // b.none
  407e54:	ldr	x1, [sp, #4176]
  407e58:	ldr	x0, [sp, #4088]
  407e5c:	add	x0, x1, x0
  407e60:	ldrb	w0, [x0]
  407e64:	bl	403208 <ferror@plt+0x208>
  407e68:	and	w0, w0, #0xff
  407e6c:	and	x0, x0, #0xff
  407e70:	ldr	x1, [sp, #4072]
  407e74:	add	x0, x1, x0
  407e78:	ldrb	w0, [x0]
  407e7c:	eor	w0, w0, #0x1
  407e80:	and	w0, w0, #0xff
  407e84:	cmp	w0, #0x0
  407e88:	b.eq	407eec <ferror@plt+0x4eec>  // b.none
  407e8c:	ldr	x0, [sp, #4080]
  407e90:	cmp	x0, #0x0
  407e94:	b.eq	407ec4 <ferror@plt+0x4ec4>  // b.none
  407e98:	ldr	x1, [sp, #4176]
  407e9c:	ldr	x0, [sp, #4088]
  407ea0:	add	x0, x1, x0
  407ea4:	ldrb	w0, [x0]
  407ea8:	bl	403208 <ferror@plt+0x208>
  407eac:	and	w0, w0, #0xff
  407eb0:	and	x0, x0, #0xff
  407eb4:	ldr	x1, [sp, #4080]
  407eb8:	add	x0, x1, x0
  407ebc:	ldrb	w1, [x0]
  407ec0:	b	407ed4 <ferror@plt+0x4ed4>
  407ec4:	ldr	x1, [sp, #4176]
  407ec8:	ldr	x0, [sp, #4088]
  407ecc:	add	x0, x1, x0
  407ed0:	ldrb	w1, [x0]
  407ed4:	ldr	x0, [sp, #4120]
  407ed8:	add	x2, x0, #0x1
  407edc:	str	x2, [sp, #4120]
  407ee0:	ldr	x2, [sp, #4136]
  407ee4:	add	x0, x2, x0
  407ee8:	strb	w1, [x0]
  407eec:	ldr	x0, [sp, #4088]
  407ef0:	add	x0, x0, #0x1
  407ef4:	str	x0, [sp, #4088]
  407ef8:	ldr	x1, [sp, #4088]
  407efc:	ldr	x0, [sp, #4064]
  407f00:	cmp	x1, x0
  407f04:	b.cc	407e48 <ferror@plt+0x4e48>  // b.lo, b.ul, b.last
  407f08:	ldr	x1, [sp, #4136]
  407f0c:	ldr	x0, [sp, #4120]
  407f10:	add	x0, x1, x0
  407f14:	strb	wzr, [x0]
  407f18:	str	xzr, [sp, #4088]
  407f1c:	ldr	x0, [sp, #4088]
  407f20:	str	x0, [sp, #4112]
  407f24:	b	407fd8 <ferror@plt+0x4fd8>
  407f28:	ldr	x0, [sp, #4072]
  407f2c:	cmp	x0, #0x0
  407f30:	b.eq	407f6c <ferror@plt+0x4f6c>  // b.none
  407f34:	ldr	x1, [sp, #4168]
  407f38:	ldr	x0, [sp, #4088]
  407f3c:	add	x0, x1, x0
  407f40:	ldrb	w0, [x0]
  407f44:	bl	403208 <ferror@plt+0x208>
  407f48:	and	w0, w0, #0xff
  407f4c:	and	x0, x0, #0xff
  407f50:	ldr	x1, [sp, #4072]
  407f54:	add	x0, x1, x0
  407f58:	ldrb	w0, [x0]
  407f5c:	eor	w0, w0, #0x1
  407f60:	and	w0, w0, #0xff
  407f64:	cmp	w0, #0x0
  407f68:	b.eq	407fcc <ferror@plt+0x4fcc>  // b.none
  407f6c:	ldr	x0, [sp, #4080]
  407f70:	cmp	x0, #0x0
  407f74:	b.eq	407fa4 <ferror@plt+0x4fa4>  // b.none
  407f78:	ldr	x1, [sp, #4168]
  407f7c:	ldr	x0, [sp, #4088]
  407f80:	add	x0, x1, x0
  407f84:	ldrb	w0, [x0]
  407f88:	bl	403208 <ferror@plt+0x208>
  407f8c:	and	w0, w0, #0xff
  407f90:	and	x0, x0, #0xff
  407f94:	ldr	x1, [sp, #4080]
  407f98:	add	x0, x1, x0
  407f9c:	ldrb	w1, [x0]
  407fa0:	b	407fb4 <ferror@plt+0x4fb4>
  407fa4:	ldr	x1, [sp, #4168]
  407fa8:	ldr	x0, [sp, #4088]
  407fac:	add	x0, x1, x0
  407fb0:	ldrb	w1, [x0]
  407fb4:	ldr	x0, [sp, #4112]
  407fb8:	add	x2, x0, #0x1
  407fbc:	str	x2, [sp, #4112]
  407fc0:	ldr	x2, [sp, #4128]
  407fc4:	add	x0, x2, x0
  407fc8:	strb	w1, [x0]
  407fcc:	ldr	x0, [sp, #4088]
  407fd0:	add	x0, x0, #0x1
  407fd4:	str	x0, [sp, #4088]
  407fd8:	ldr	x1, [sp, #4088]
  407fdc:	ldr	x0, [sp, #4056]
  407fe0:	cmp	x1, x0
  407fe4:	b.cc	407f28 <ferror@plt+0x4f28>  // b.lo, b.ul, b.last
  407fe8:	ldr	x1, [sp, #4128]
  407fec:	ldr	x0, [sp, #4112]
  407ff0:	add	x0, x1, x0
  407ff4:	strb	wzr, [x0]
  407ff8:	b	40806c <ferror@plt+0x506c>
  407ffc:	ldr	x0, [sp, #4176]
  408000:	str	x0, [sp, #4136]
  408004:	ldr	x0, [sp, #4064]
  408008:	str	x0, [sp, #4120]
  40800c:	ldr	x1, [sp, #4136]
  408010:	ldr	x0, [sp, #4120]
  408014:	add	x0, x1, x0
  408018:	ldrb	w0, [x0]
  40801c:	add	x1, sp, #0x1, lsl #12
  408020:	strb	w0, [x1, #15]
  408024:	ldr	x1, [sp, #4136]
  408028:	ldr	x0, [sp, #4120]
  40802c:	add	x0, x1, x0
  408030:	strb	wzr, [x0]
  408034:	ldr	x0, [sp, #4168]
  408038:	str	x0, [sp, #4128]
  40803c:	ldr	x0, [sp, #4056]
  408040:	str	x0, [sp, #4112]
  408044:	ldr	x1, [sp, #4128]
  408048:	ldr	x0, [sp, #4112]
  40804c:	add	x0, x1, x0
  408050:	ldrb	w0, [x0]
  408054:	add	x1, sp, #0x1, lsl #12
  408058:	strb	w0, [x1, #14]
  40805c:	ldr	x1, [sp, #4128]
  408060:	ldr	x0, [sp, #4112]
  408064:	add	x0, x1, x0
  408068:	strb	wzr, [x0]
  40806c:	ldr	x0, [sp, #4184]
  408070:	ldrb	w0, [x0, #50]
  408074:	cmp	w0, #0x0
  408078:	b.eq	408090 <ferror@plt+0x5090>  // b.none
  40807c:	ldr	x1, [sp, #4128]
  408080:	ldr	x0, [sp, #4136]
  408084:	bl	4062f4 <ferror@plt+0x32f4>
  408088:	str	w0, [sp, #4148]
  40808c:	b	4081c4 <ferror@plt+0x51c4>
  408090:	ldr	x0, [sp, #4184]
  408094:	ldrb	w0, [x0, #52]
  408098:	cmp	w0, #0x0
  40809c:	b.eq	4080b4 <ferror@plt+0x50b4>  // b.none
  4080a0:	ldr	x1, [sp, #4128]
  4080a4:	ldr	x0, [sp, #4136]
  4080a8:	bl	406418 <ferror@plt+0x3418>
  4080ac:	str	w0, [sp, #4148]
  4080b0:	b	4081c4 <ferror@plt+0x51c4>
  4080b4:	ldr	x0, [sp, #4184]
  4080b8:	ldrb	w0, [x0, #53]
  4080bc:	cmp	w0, #0x0
  4080c0:	b.eq	4080d8 <ferror@plt+0x50d8>  // b.none
  4080c4:	ldr	x1, [sp, #4128]
  4080c8:	ldr	x0, [sp, #4136]
  4080cc:	bl	406200 <ferror@plt+0x3200>
  4080d0:	str	w0, [sp, #4148]
  4080d4:	b	4081c4 <ferror@plt+0x51c4>
  4080d8:	ldr	x0, [sp, #4184]
  4080dc:	ldrb	w0, [x0, #54]
  4080e0:	cmp	w0, #0x0
  4080e4:	b.eq	408110 <ferror@plt+0x5110>  // b.none
  4080e8:	mov	x1, #0x0                   	// #0
  4080ec:	ldr	x0, [sp, #4136]
  4080f0:	bl	40653c <ferror@plt+0x353c>
  4080f4:	mov	w19, w0
  4080f8:	mov	x1, #0x0                   	// #0
  4080fc:	ldr	x0, [sp, #4128]
  408100:	bl	40653c <ferror@plt+0x353c>
  408104:	sub	w0, w19, w0
  408108:	str	w0, [sp, #4148]
  40810c:	b	4081c4 <ferror@plt+0x51c4>
  408110:	ldr	x0, [sp, #4184]
  408114:	ldrb	w0, [x0, #51]
  408118:	cmp	w0, #0x0
  40811c:	b.eq	40813c <ferror@plt+0x513c>  // b.none
  408120:	ldr	x3, [sp, #4112]
  408124:	ldr	x2, [sp, #4128]
  408128:	ldr	x1, [sp, #4120]
  40812c:	ldr	x0, [sp, #4136]
  408130:	bl	406860 <ferror@plt+0x3860>
  408134:	str	w0, [sp, #4148]
  408138:	b	4081c4 <ferror@plt+0x51c4>
  40813c:	ldr	x0, [sp, #4184]
  408140:	ldrb	w0, [x0, #56]
  408144:	cmp	w0, #0x0
  408148:	b.eq	408160 <ferror@plt+0x5160>  // b.none
  40814c:	ldr	x1, [sp, #4128]
  408150:	ldr	x0, [sp, #4136]
  408154:	bl	410304 <ferror@plt+0xd304>
  408158:	str	w0, [sp, #4148]
  40815c:	b	4081c4 <ferror@plt+0x51c4>
  408160:	ldr	x0, [sp, #4120]
  408164:	cmp	x0, #0x0
  408168:	b.ne	408188 <ferror@plt+0x5188>  // b.any
  40816c:	ldr	x0, [sp, #4112]
  408170:	cmp	x0, #0x0
  408174:	cset	w0, ne  // ne = any
  408178:	and	w0, w0, #0xff
  40817c:	neg	w0, w0
  408180:	str	w0, [sp, #4148]
  408184:	b	4081c4 <ferror@plt+0x51c4>
  408188:	ldr	x0, [sp, #4112]
  40818c:	cmp	x0, #0x0
  408190:	b.ne	4081a0 <ferror@plt+0x51a0>  // b.any
  408194:	mov	w0, #0x1                   	// #1
  408198:	str	w0, [sp, #4148]
  40819c:	b	4081c4 <ferror@plt+0x51c4>
  4081a0:	ldr	x0, [sp, #4120]
  4081a4:	add	x1, x0, #0x1
  4081a8:	ldr	x0, [sp, #4112]
  4081ac:	add	x0, x0, #0x1
  4081b0:	mov	x3, x0
  4081b4:	ldr	x2, [sp, #4128]
  4081b8:	ldr	x0, [sp, #4136]
  4081bc:	bl	418738 <ferror@plt+0x15738>
  4081c0:	str	w0, [sp, #4148]
  4081c4:	ldr	x0, [sp, #4072]
  4081c8:	cmp	x0, #0x0
  4081cc:	b.ne	4081dc <ferror@plt+0x51dc>  // b.any
  4081d0:	ldr	x0, [sp, #4080]
  4081d4:	cmp	x0, #0x0
  4081d8:	b.eq	4081e8 <ferror@plt+0x51e8>  // b.none
  4081dc:	ldr	x0, [sp, #4096]
  4081e0:	bl	402d20 <free@plt>
  4081e4:	b	40861c <ferror@plt+0x561c>
  4081e8:	ldr	x1, [sp, #4136]
  4081ec:	ldr	x0, [sp, #4120]
  4081f0:	add	x0, x1, x0
  4081f4:	add	x1, sp, #0x1, lsl #12
  4081f8:	ldrb	w1, [x1, #15]
  4081fc:	strb	w1, [x0]
  408200:	ldr	x1, [sp, #4128]
  408204:	ldr	x0, [sp, #4112]
  408208:	add	x0, x1, x0
  40820c:	add	x1, sp, #0x1, lsl #12
  408210:	ldrb	w1, [x1, #14]
  408214:	strb	w1, [x0]
  408218:	b	40861c <ferror@plt+0x561c>
  40821c:	ldr	x0, [sp, #4072]
  408220:	cmp	x0, #0x0
  408224:	b.eq	4084d8 <ferror@plt+0x54d8>  // b.none
  408228:	ldr	x0, [sp, #4080]
  40822c:	cmp	x0, #0x0
  408230:	b.eq	4083ac <ferror@plt+0x53ac>  // b.none
  408234:	b	408244 <ferror@plt+0x5244>
  408238:	ldr	x0, [sp, #4176]
  40823c:	add	x0, x0, #0x1
  408240:	str	x0, [sp, #4176]
  408244:	ldr	x1, [sp, #4176]
  408248:	ldr	x0, [sp, #4160]
  40824c:	cmp	x1, x0
  408250:	b.cs	40828c <ferror@plt+0x528c>  // b.hs, b.nlast
  408254:	ldr	x0, [sp, #4176]
  408258:	ldrb	w0, [x0]
  40825c:	bl	403208 <ferror@plt+0x208>
  408260:	and	w0, w0, #0xff
  408264:	and	x0, x0, #0xff
  408268:	ldr	x1, [sp, #4072]
  40826c:	add	x0, x1, x0
  408270:	ldrb	w0, [x0]
  408274:	cmp	w0, #0x0
  408278:	b.ne	408238 <ferror@plt+0x5238>  // b.any
  40827c:	b	40828c <ferror@plt+0x528c>
  408280:	ldr	x0, [sp, #4168]
  408284:	add	x0, x0, #0x1
  408288:	str	x0, [sp, #4168]
  40828c:	ldr	x1, [sp, #4168]
  408290:	ldr	x0, [sp, #4152]
  408294:	cmp	x1, x0
  408298:	b.cs	4082c4 <ferror@plt+0x52c4>  // b.hs, b.nlast
  40829c:	ldr	x0, [sp, #4168]
  4082a0:	ldrb	w0, [x0]
  4082a4:	bl	403208 <ferror@plt+0x208>
  4082a8:	and	w0, w0, #0xff
  4082ac:	and	x0, x0, #0xff
  4082b0:	ldr	x1, [sp, #4072]
  4082b4:	add	x0, x1, x0
  4082b8:	ldrb	w0, [x0]
  4082bc:	cmp	w0, #0x0
  4082c0:	b.ne	408280 <ferror@plt+0x5280>  // b.any
  4082c4:	ldr	x1, [sp, #4176]
  4082c8:	ldr	x0, [sp, #4160]
  4082cc:	cmp	x1, x0
  4082d0:	b.cs	408368 <ferror@plt+0x5368>  // b.hs, b.nlast
  4082d4:	ldr	x1, [sp, #4168]
  4082d8:	ldr	x0, [sp, #4152]
  4082dc:	cmp	x1, x0
  4082e0:	b.cs	408368 <ferror@plt+0x5368>  // b.hs, b.nlast
  4082e4:	ldr	x0, [sp, #4176]
  4082e8:	ldrb	w0, [x0]
  4082ec:	bl	403208 <ferror@plt+0x208>
  4082f0:	and	w0, w0, #0xff
  4082f4:	and	x0, x0, #0xff
  4082f8:	ldr	x1, [sp, #4080]
  4082fc:	add	x0, x1, x0
  408300:	ldrb	w0, [x0]
  408304:	bl	403208 <ferror@plt+0x208>
  408308:	and	w0, w0, #0xff
  40830c:	mov	w19, w0
  408310:	ldr	x0, [sp, #4168]
  408314:	ldrb	w0, [x0]
  408318:	bl	403208 <ferror@plt+0x208>
  40831c:	and	w0, w0, #0xff
  408320:	and	x0, x0, #0xff
  408324:	ldr	x1, [sp, #4080]
  408328:	add	x0, x1, x0
  40832c:	ldrb	w0, [x0]
  408330:	bl	403208 <ferror@plt+0x208>
  408334:	and	w0, w0, #0xff
  408338:	sub	w0, w19, w0
  40833c:	str	w0, [sp, #4148]
  408340:	ldr	w0, [sp, #4148]
  408344:	cmp	w0, #0x0
  408348:	b.ne	4087c0 <ferror@plt+0x57c0>  // b.any
  40834c:	ldr	x0, [sp, #4176]
  408350:	add	x0, x0, #0x1
  408354:	str	x0, [sp, #4176]
  408358:	ldr	x0, [sp, #4168]
  40835c:	add	x0, x0, #0x1
  408360:	str	x0, [sp, #4168]
  408364:	b	408244 <ferror@plt+0x5244>
  408368:	ldr	x1, [sp, #4176]
  40836c:	ldr	x0, [sp, #4160]
  408370:	cmp	x1, x0
  408374:	cset	w0, cc  // cc = lo, ul, last
  408378:	and	w0, w0, #0xff
  40837c:	mov	w2, w0
  408380:	ldr	x1, [sp, #4168]
  408384:	ldr	x0, [sp, #4152]
  408388:	cmp	x1, x0
  40838c:	cset	w0, cc  // cc = lo, ul, last
  408390:	and	w0, w0, #0xff
  408394:	sub	w0, w2, w0
  408398:	str	w0, [sp, #4148]
  40839c:	b	40861c <ferror@plt+0x561c>
  4083a0:	ldr	x0, [sp, #4176]
  4083a4:	add	x0, x0, #0x1
  4083a8:	str	x0, [sp, #4176]
  4083ac:	ldr	x1, [sp, #4176]
  4083b0:	ldr	x0, [sp, #4160]
  4083b4:	cmp	x1, x0
  4083b8:	b.cs	4083f4 <ferror@plt+0x53f4>  // b.hs, b.nlast
  4083bc:	ldr	x0, [sp, #4176]
  4083c0:	ldrb	w0, [x0]
  4083c4:	bl	403208 <ferror@plt+0x208>
  4083c8:	and	w0, w0, #0xff
  4083cc:	and	x0, x0, #0xff
  4083d0:	ldr	x1, [sp, #4072]
  4083d4:	add	x0, x1, x0
  4083d8:	ldrb	w0, [x0]
  4083dc:	cmp	w0, #0x0
  4083e0:	b.ne	4083a0 <ferror@plt+0x53a0>  // b.any
  4083e4:	b	4083f4 <ferror@plt+0x53f4>
  4083e8:	ldr	x0, [sp, #4168]
  4083ec:	add	x0, x0, #0x1
  4083f0:	str	x0, [sp, #4168]
  4083f4:	ldr	x1, [sp, #4168]
  4083f8:	ldr	x0, [sp, #4152]
  4083fc:	cmp	x1, x0
  408400:	b.cs	40842c <ferror@plt+0x542c>  // b.hs, b.nlast
  408404:	ldr	x0, [sp, #4168]
  408408:	ldrb	w0, [x0]
  40840c:	bl	403208 <ferror@plt+0x208>
  408410:	and	w0, w0, #0xff
  408414:	and	x0, x0, #0xff
  408418:	ldr	x1, [sp, #4072]
  40841c:	add	x0, x1, x0
  408420:	ldrb	w0, [x0]
  408424:	cmp	w0, #0x0
  408428:	b.ne	4083e8 <ferror@plt+0x53e8>  // b.any
  40842c:	ldr	x1, [sp, #4176]
  408430:	ldr	x0, [sp, #4160]
  408434:	cmp	x1, x0
  408438:	b.cs	4084a0 <ferror@plt+0x54a0>  // b.hs, b.nlast
  40843c:	ldr	x1, [sp, #4168]
  408440:	ldr	x0, [sp, #4152]
  408444:	cmp	x1, x0
  408448:	b.cs	4084a0 <ferror@plt+0x54a0>  // b.hs, b.nlast
  40844c:	ldr	x0, [sp, #4176]
  408450:	ldrb	w0, [x0]
  408454:	bl	403208 <ferror@plt+0x208>
  408458:	and	w0, w0, #0xff
  40845c:	mov	w19, w0
  408460:	ldr	x0, [sp, #4168]
  408464:	ldrb	w0, [x0]
  408468:	bl	403208 <ferror@plt+0x208>
  40846c:	and	w0, w0, #0xff
  408470:	sub	w0, w19, w0
  408474:	str	w0, [sp, #4148]
  408478:	ldr	w0, [sp, #4148]
  40847c:	cmp	w0, #0x0
  408480:	b.ne	4087c8 <ferror@plt+0x57c8>  // b.any
  408484:	ldr	x0, [sp, #4176]
  408488:	add	x0, x0, #0x1
  40848c:	str	x0, [sp, #4176]
  408490:	ldr	x0, [sp, #4168]
  408494:	add	x0, x0, #0x1
  408498:	str	x0, [sp, #4168]
  40849c:	b	4083ac <ferror@plt+0x53ac>
  4084a0:	ldr	x1, [sp, #4176]
  4084a4:	ldr	x0, [sp, #4160]
  4084a8:	cmp	x1, x0
  4084ac:	cset	w0, cc  // cc = lo, ul, last
  4084b0:	and	w0, w0, #0xff
  4084b4:	mov	w2, w0
  4084b8:	ldr	x1, [sp, #4168]
  4084bc:	ldr	x0, [sp, #4152]
  4084c0:	cmp	x1, x0
  4084c4:	cset	w0, cc  // cc = lo, ul, last
  4084c8:	and	w0, w0, #0xff
  4084cc:	sub	w0, w2, w0
  4084d0:	str	w0, [sp, #4148]
  4084d4:	b	40861c <ferror@plt+0x561c>
  4084d8:	ldr	x0, [sp, #4064]
  4084dc:	cmp	x0, #0x0
  4084e0:	b.ne	408500 <ferror@plt+0x5500>  // b.any
  4084e4:	ldr	x0, [sp, #4056]
  4084e8:	cmp	x0, #0x0
  4084ec:	cset	w0, ne  // ne = any
  4084f0:	and	w0, w0, #0xff
  4084f4:	neg	w0, w0
  4084f8:	str	w0, [sp, #4148]
  4084fc:	b	40861c <ferror@plt+0x561c>
  408500:	ldr	x0, [sp, #4056]
  408504:	cmp	x0, #0x0
  408508:	b.eq	4087b0 <ferror@plt+0x57b0>  // b.none
  40850c:	ldr	x0, [sp, #4080]
  408510:	cmp	x0, #0x0
  408514:	b.eq	4085b8 <ferror@plt+0x55b8>  // b.none
  408518:	b	408594 <ferror@plt+0x5594>
  40851c:	ldr	x0, [sp, #4176]
  408520:	add	x1, x0, #0x1
  408524:	str	x1, [sp, #4176]
  408528:	ldrb	w0, [x0]
  40852c:	bl	403208 <ferror@plt+0x208>
  408530:	and	w0, w0, #0xff
  408534:	and	x0, x0, #0xff
  408538:	ldr	x1, [sp, #4080]
  40853c:	add	x0, x1, x0
  408540:	ldrb	w0, [x0]
  408544:	bl	403208 <ferror@plt+0x208>
  408548:	and	w0, w0, #0xff
  40854c:	mov	w19, w0
  408550:	ldr	x0, [sp, #4168]
  408554:	add	x1, x0, #0x1
  408558:	str	x1, [sp, #4168]
  40855c:	ldrb	w0, [x0]
  408560:	bl	403208 <ferror@plt+0x208>
  408564:	and	w0, w0, #0xff
  408568:	and	x0, x0, #0xff
  40856c:	ldr	x1, [sp, #4080]
  408570:	add	x0, x1, x0
  408574:	ldrb	w0, [x0]
  408578:	bl	403208 <ferror@plt+0x208>
  40857c:	and	w0, w0, #0xff
  408580:	sub	w0, w19, w0
  408584:	str	w0, [sp, #4148]
  408588:	ldr	w0, [sp, #4148]
  40858c:	cmp	w0, #0x0
  408590:	b.ne	4087d0 <ferror@plt+0x57d0>  // b.any
  408594:	ldr	x1, [sp, #4176]
  408598:	ldr	x0, [sp, #4160]
  40859c:	cmp	x1, x0
  4085a0:	b.cs	4085ec <ferror@plt+0x55ec>  // b.hs, b.nlast
  4085a4:	ldr	x1, [sp, #4168]
  4085a8:	ldr	x0, [sp, #4152]
  4085ac:	cmp	x1, x0
  4085b0:	b.cc	40851c <ferror@plt+0x551c>  // b.lo, b.ul, b.last
  4085b4:	b	4085ec <ferror@plt+0x55ec>
  4085b8:	ldr	x0, [sp, #4064]
  4085bc:	ldr	x2, [sp, #4056]
  4085c0:	ldr	x1, [sp, #4056]
  4085c4:	cmp	x2, x0
  4085c8:	csel	x0, x1, x0, ls  // ls = plast
  4085cc:	mov	x2, x0
  4085d0:	ldr	x1, [sp, #4168]
  4085d4:	ldr	x0, [sp, #4176]
  4085d8:	bl	402c90 <memcmp@plt>
  4085dc:	str	w0, [sp, #4148]
  4085e0:	ldr	w0, [sp, #4148]
  4085e4:	cmp	w0, #0x0
  4085e8:	b.ne	4087d8 <ferror@plt+0x57d8>  // b.any
  4085ec:	ldr	x1, [sp, #4064]
  4085f0:	ldr	x0, [sp, #4056]
  4085f4:	cmp	x1, x0
  4085f8:	b.cc	408614 <ferror@plt+0x5614>  // b.lo, b.ul, b.last
  4085fc:	ldr	x1, [sp, #4064]
  408600:	ldr	x0, [sp, #4056]
  408604:	cmp	x1, x0
  408608:	cset	w0, ne  // ne = any
  40860c:	and	w0, w0, #0xff
  408610:	b	408618 <ferror@plt+0x5618>
  408614:	mov	w0, #0xffffffff            	// #-1
  408618:	str	w0, [sp, #4148]
  40861c:	ldr	w0, [sp, #4148]
  408620:	cmp	w0, #0x0
  408624:	b.ne	4087e0 <ferror@plt+0x57e0>  // b.any
  408628:	ldr	x0, [sp, #4184]
  40862c:	ldr	x0, [x0, #64]
  408630:	str	x0, [sp, #4184]
  408634:	ldr	x0, [sp, #4184]
  408638:	cmp	x0, #0x0
  40863c:	b.eq	4087a4 <ferror@plt+0x57a4>  // b.none
  408640:	ldr	x0, [sp, #4184]
  408644:	ldr	x0, [x0, #16]
  408648:	cmn	x0, #0x1
  40864c:	b.eq	408674 <ferror@plt+0x5674>  // b.none
  408650:	ldr	x1, [sp, #4184]
  408654:	ldr	x0, [sp, #40]
  408658:	bl	4058f4 <ferror@plt+0x28f4>
  40865c:	str	x0, [sp, #4160]
  408660:	ldr	x1, [sp, #4184]
  408664:	ldr	x0, [sp, #32]
  408668:	bl	4058f4 <ferror@plt+0x28f4>
  40866c:	str	x0, [sp, #4152]
  408670:	b	4086ac <ferror@plt+0x56ac>
  408674:	ldr	x0, [sp, #40]
  408678:	ldr	x1, [x0]
  40867c:	ldr	x0, [sp, #40]
  408680:	ldr	x0, [x0, #8]
  408684:	sub	x0, x0, #0x1
  408688:	add	x0, x1, x0
  40868c:	str	x0, [sp, #4160]
  408690:	ldr	x0, [sp, #32]
  408694:	ldr	x1, [x0]
  408698:	ldr	x0, [sp, #32]
  40869c:	ldr	x0, [x0, #8]
  4086a0:	sub	x0, x0, #0x1
  4086a4:	add	x0, x1, x0
  4086a8:	str	x0, [sp, #4152]
  4086ac:	ldr	x0, [sp, #4184]
  4086b0:	ldr	x0, [x0]
  4086b4:	cmn	x0, #0x1
  4086b8:	b.eq	4086e0 <ferror@plt+0x56e0>  // b.none
  4086bc:	ldr	x1, [sp, #4184]
  4086c0:	ldr	x0, [sp, #40]
  4086c4:	bl	4056c8 <ferror@plt+0x26c8>
  4086c8:	str	x0, [sp, #4176]
  4086cc:	ldr	x1, [sp, #4184]
  4086d0:	ldr	x0, [sp, #32]
  4086d4:	bl	4056c8 <ferror@plt+0x26c8>
  4086d8:	str	x0, [sp, #4168]
  4086dc:	b	407d08 <ferror@plt+0x4d08>
  4086e0:	ldr	x0, [sp, #40]
  4086e4:	ldr	x0, [x0]
  4086e8:	str	x0, [sp, #4176]
  4086ec:	ldr	x0, [sp, #32]
  4086f0:	ldr	x0, [x0]
  4086f4:	str	x0, [sp, #4168]
  4086f8:	ldr	x0, [sp, #4184]
  4086fc:	ldrb	w0, [x0, #48]
  408700:	cmp	w0, #0x0
  408704:	b.eq	407d08 <ferror@plt+0x4d08>  // b.none
  408708:	b	408718 <ferror@plt+0x5718>
  40870c:	ldr	x0, [sp, #4176]
  408710:	add	x0, x0, #0x1
  408714:	str	x0, [sp, #4176]
  408718:	ldr	x1, [sp, #4176]
  40871c:	ldr	x0, [sp, #4160]
  408720:	cmp	x1, x0
  408724:	b.cs	408764 <ferror@plt+0x5764>  // b.hs, b.nlast
  408728:	ldr	x0, [sp, #4176]
  40872c:	ldrb	w0, [x0]
  408730:	bl	403208 <ferror@plt+0x208>
  408734:	and	w0, w0, #0xff
  408738:	mov	w2, w0
  40873c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  408740:	add	x1, x0, #0x5c0
  408744:	sxtw	x0, w2
  408748:	ldrb	w0, [x1, x0]
  40874c:	cmp	w0, #0x0
  408750:	b.ne	40870c <ferror@plt+0x570c>  // b.any
  408754:	b	408764 <ferror@plt+0x5764>
  408758:	ldr	x0, [sp, #4168]
  40875c:	add	x0, x0, #0x1
  408760:	str	x0, [sp, #4168]
  408764:	ldr	x1, [sp, #4168]
  408768:	ldr	x0, [sp, #4152]
  40876c:	cmp	x1, x0
  408770:	b.cs	407d08 <ferror@plt+0x4d08>  // b.hs, b.nlast
  408774:	ldr	x0, [sp, #4168]
  408778:	ldrb	w0, [x0]
  40877c:	bl	403208 <ferror@plt+0x208>
  408780:	and	w0, w0, #0xff
  408784:	mov	w2, w0
  408788:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40878c:	add	x1, x0, #0x5c0
  408790:	sxtw	x0, w2
  408794:	ldrb	w0, [x1, x0]
  408798:	cmp	w0, #0x0
  40879c:	b.ne	408758 <ferror@plt+0x5758>  // b.any
  4087a0:	b	407d08 <ferror@plt+0x4d08>
  4087a4:	nop
  4087a8:	mov	w0, #0x0                   	// #0
  4087ac:	b	408804 <ferror@plt+0x5804>
  4087b0:	nop
  4087b4:	mov	w0, #0x1                   	// #1
  4087b8:	str	w0, [sp, #4148]
  4087bc:	b	4087e4 <ferror@plt+0x57e4>
  4087c0:	nop
  4087c4:	b	4087e4 <ferror@plt+0x57e4>
  4087c8:	nop
  4087cc:	b	4087e4 <ferror@plt+0x57e4>
  4087d0:	nop
  4087d4:	b	4087e4 <ferror@plt+0x57e4>
  4087d8:	nop
  4087dc:	b	4087e4 <ferror@plt+0x57e4>
  4087e0:	nop
  4087e4:	ldr	x0, [sp, #4184]
  4087e8:	ldrb	w0, [x0, #55]
  4087ec:	cmp	w0, #0x0
  4087f0:	b.eq	408800 <ferror@plt+0x5800>  // b.none
  4087f4:	ldr	w0, [sp, #4148]
  4087f8:	neg	w0, w0
  4087fc:	b	408804 <ferror@plt+0x5804>
  408800:	ldr	w0, [sp, #4148]
  408804:	ldr	x19, [sp, #16]
  408808:	ldp	x29, x30, [sp]
  40880c:	mov	x12, #0x1060                	// #4192
  408810:	add	sp, sp, x12
  408814:	ret
  408818:	stp	x29, x30, [sp, #-64]!
  40881c:	mov	x29, sp
  408820:	str	x0, [sp, #24]
  408824:	str	x1, [sp, #16]
  408828:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40882c:	add	x0, x0, #0x9e8
  408830:	ldr	x0, [x0]
  408834:	cmp	x0, #0x0
  408838:	b.eq	408888 <ferror@plt+0x5888>  // b.none
  40883c:	ldr	x1, [sp, #16]
  408840:	ldr	x0, [sp, #24]
  408844:	bl	407cac <ferror@plt+0x4cac>
  408848:	str	w0, [sp, #60]
  40884c:	ldr	w0, [sp, #60]
  408850:	cmp	w0, #0x0
  408854:	b.ne	408880 <ferror@plt+0x5880>  // b.any
  408858:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40885c:	add	x0, x0, #0x9e2
  408860:	ldrb	w0, [x0]
  408864:	cmp	w0, #0x0
  408868:	b.ne	408880 <ferror@plt+0x5880>  // b.any
  40886c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  408870:	add	x0, x0, #0x9e1
  408874:	ldrb	w0, [x0]
  408878:	cmp	w0, #0x0
  40887c:	b.eq	408888 <ferror@plt+0x5888>  // b.none
  408880:	ldr	w0, [sp, #60]
  408884:	b	4089c8 <ferror@plt+0x59c8>
  408888:	ldr	x0, [sp, #24]
  40888c:	ldr	x0, [x0, #8]
  408890:	sub	x0, x0, #0x1
  408894:	str	x0, [sp, #48]
  408898:	ldr	x0, [sp, #16]
  40889c:	ldr	x0, [x0, #8]
  4088a0:	sub	x0, x0, #0x1
  4088a4:	str	x0, [sp, #40]
  4088a8:	ldr	x0, [sp, #48]
  4088ac:	cmp	x0, #0x0
  4088b0:	b.ne	4088d0 <ferror@plt+0x58d0>  // b.any
  4088b4:	ldr	x0, [sp, #40]
  4088b8:	cmp	x0, #0x0
  4088bc:	cset	w0, ne  // ne = any
  4088c0:	and	w0, w0, #0xff
  4088c4:	neg	w0, w0
  4088c8:	str	w0, [sp, #60]
  4088cc:	b	4089a4 <ferror@plt+0x59a4>
  4088d0:	ldr	x0, [sp, #40]
  4088d4:	cmp	x0, #0x0
  4088d8:	b.ne	4088e8 <ferror@plt+0x58e8>  // b.any
  4088dc:	mov	w0, #0x1                   	// #1
  4088e0:	str	w0, [sp, #60]
  4088e4:	b	4089a4 <ferror@plt+0x59a4>
  4088e8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4088ec:	add	x0, x0, #0x598
  4088f0:	ldrb	w0, [x0]
  4088f4:	cmp	w0, #0x0
  4088f8:	b.eq	408930 <ferror@plt+0x5930>  // b.none
  4088fc:	ldr	x0, [sp, #24]
  408900:	ldr	x4, [x0]
  408904:	ldr	x0, [sp, #48]
  408908:	add	x1, x0, #0x1
  40890c:	ldr	x0, [sp, #16]
  408910:	ldr	x2, [x0]
  408914:	ldr	x0, [sp, #40]
  408918:	add	x0, x0, #0x1
  40891c:	mov	x3, x0
  408920:	mov	x0, x4
  408924:	bl	418738 <ferror@plt+0x15738>
  408928:	str	w0, [sp, #60]
  40892c:	b	4089a4 <ferror@plt+0x59a4>
  408930:	ldr	x0, [sp, #24]
  408934:	ldr	x3, [x0]
  408938:	ldr	x0, [sp, #16]
  40893c:	ldr	x4, [x0]
  408940:	ldr	x0, [sp, #48]
  408944:	ldr	x2, [sp, #40]
  408948:	ldr	x1, [sp, #40]
  40894c:	cmp	x2, x0
  408950:	csel	x0, x1, x0, ls  // ls = plast
  408954:	mov	x2, x0
  408958:	mov	x1, x4
  40895c:	mov	x0, x3
  408960:	bl	402c90 <memcmp@plt>
  408964:	str	w0, [sp, #60]
  408968:	ldr	w0, [sp, #60]
  40896c:	cmp	w0, #0x0
  408970:	b.ne	4089a4 <ferror@plt+0x59a4>  // b.any
  408974:	ldr	x1, [sp, #48]
  408978:	ldr	x0, [sp, #40]
  40897c:	cmp	x1, x0
  408980:	b.cc	40899c <ferror@plt+0x599c>  // b.lo, b.ul, b.last
  408984:	ldr	x1, [sp, #48]
  408988:	ldr	x0, [sp, #40]
  40898c:	cmp	x1, x0
  408990:	cset	w0, ne  // ne = any
  408994:	and	w0, w0, #0xff
  408998:	b	4089a0 <ferror@plt+0x59a0>
  40899c:	mov	w0, #0xffffffff            	// #-1
  4089a0:	str	w0, [sp, #60]
  4089a4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4089a8:	add	x0, x0, #0x9e0
  4089ac:	ldrb	w0, [x0]
  4089b0:	cmp	w0, #0x0
  4089b4:	b.eq	4089c4 <ferror@plt+0x59c4>  // b.none
  4089b8:	ldr	w0, [sp, #60]
  4089bc:	neg	w0, w0
  4089c0:	b	4089c8 <ferror@plt+0x59c8>
  4089c4:	ldr	w0, [sp, #60]
  4089c8:	ldp	x29, x30, [sp], #64
  4089cc:	ret
  4089d0:	stp	x29, x30, [sp, #-96]!
  4089d4:	mov	x29, sp
  4089d8:	str	x0, [sp, #40]
  4089dc:	str	x1, [sp, #32]
  4089e0:	str	x2, [sp, #24]
  4089e4:	ldr	x0, [sp, #40]
  4089e8:	ldr	x0, [x0]
  4089ec:	str	x0, [sp, #72]
  4089f0:	ldr	x0, [sp, #40]
  4089f4:	ldr	x0, [x0, #8]
  4089f8:	str	x0, [sp, #64]
  4089fc:	ldr	x1, [sp, #72]
  408a00:	ldr	x0, [sp, #64]
  408a04:	add	x0, x1, x0
  408a08:	str	x0, [sp, #56]
  408a0c:	ldr	x0, [sp, #24]
  408a10:	cmp	x0, #0x0
  408a14:	b.ne	408ac0 <ferror@plt+0x5ac0>  // b.any
  408a18:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  408a1c:	add	x0, x0, #0x9f8
  408a20:	ldrb	w0, [x0]
  408a24:	cmp	w0, #0x0
  408a28:	b.eq	408ac0 <ferror@plt+0x5ac0>  // b.none
  408a2c:	ldr	x0, [sp, #72]
  408a30:	str	x0, [sp, #88]
  408a34:	b	408aa4 <ferror@plt+0x5aa4>
  408a38:	ldr	x0, [sp, #88]
  408a3c:	add	x1, x0, #0x1
  408a40:	str	x1, [sp, #88]
  408a44:	ldrb	w0, [x0]
  408a48:	strb	w0, [sp, #87]
  408a4c:	ldrb	w0, [sp, #87]
  408a50:	cmp	w0, #0x9
  408a54:	b.ne	408a64 <ferror@plt+0x5a64>  // b.any
  408a58:	mov	w0, #0x3e                  	// #62
  408a5c:	strb	w0, [sp, #87]
  408a60:	b	408a7c <ferror@plt+0x5a7c>
  408a64:	ldr	x1, [sp, #88]
  408a68:	ldr	x0, [sp, #56]
  408a6c:	cmp	x1, x0
  408a70:	b.ne	408a7c <ferror@plt+0x5a7c>  // b.any
  408a74:	mov	w0, #0xa                   	// #10
  408a78:	strb	w0, [sp, #87]
  408a7c:	ldrb	w0, [sp, #87]
  408a80:	ldr	x1, [sp, #32]
  408a84:	bl	402e80 <fputc_unlocked@plt>
  408a88:	cmn	w0, #0x1
  408a8c:	b.ne	408aa4 <ferror@plt+0x5aa4>  // b.any
  408a90:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  408a94:	add	x0, x0, #0xc50
  408a98:	bl	402fd0 <gettext@plt>
  408a9c:	ldr	x1, [sp, #24]
  408aa0:	bl	403554 <ferror@plt+0x554>
  408aa4:	ldr	x1, [sp, #88]
  408aa8:	ldr	x0, [sp, #56]
  408aac:	cmp	x1, x0
  408ab0:	b.cc	408a38 <ferror@plt+0x5a38>  // b.lo, b.ul, b.last
  408ab4:	ldr	x0, [sp, #40]
  408ab8:	bl	407180 <ferror@plt+0x4180>
  408abc:	b	408b20 <ferror@plt+0x5b20>
  408ac0:	ldr	x0, [sp, #56]
  408ac4:	sub	x0, x0, #0x1
  408ac8:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  408acc:	add	x1, x1, #0x3e0
  408ad0:	ldrb	w1, [x1]
  408ad4:	strb	w1, [x0]
  408ad8:	ldr	x3, [sp, #32]
  408adc:	ldr	x2, [sp, #64]
  408ae0:	mov	x1, #0x1                   	// #1
  408ae4:	ldr	x0, [sp, #72]
  408ae8:	bl	4028d0 <fwrite_unlocked@plt>
  408aec:	mov	x1, x0
  408af0:	ldr	x0, [sp, #64]
  408af4:	cmp	x0, x1
  408af8:	b.eq	408b10 <ferror@plt+0x5b10>  // b.none
  408afc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  408b00:	add	x0, x0, #0xc50
  408b04:	bl	402fd0 <gettext@plt>
  408b08:	ldr	x1, [sp, #24]
  408b0c:	bl	403554 <ferror@plt+0x554>
  408b10:	ldr	x0, [sp, #56]
  408b14:	sub	x0, x0, #0x1
  408b18:	strb	wzr, [x0]
  408b1c:	nop
  408b20:	nop
  408b24:	ldp	x29, x30, [sp], #96
  408b28:	ret
  408b2c:	stp	x29, x30, [sp, #-256]!
  408b30:	mov	x29, sp
  408b34:	stp	x19, x20, [sp, #16]
  408b38:	str	x21, [sp, #32]
  408b3c:	str	x0, [sp, #56]
  408b40:	strb	w1, [sp, #55]
  408b44:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  408b48:	add	x1, x0, #0x860
  408b4c:	ldr	x0, [sp, #56]
  408b50:	bl	4041f0 <ferror@plt+0x11f0>
  408b54:	str	x0, [sp, #216]
  408b58:	str	xzr, [sp, #248]
  408b5c:	str	xzr, [sp, #240]
  408b60:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  408b64:	add	x0, x0, #0x9e8
  408b68:	ldr	x0, [x0]
  408b6c:	str	x0, [sp, #208]
  408b70:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  408b74:	add	x0, x0, #0x9e2
  408b78:	ldrb	w0, [x0]
  408b7c:	cmp	w0, #0x0
  408b80:	cset	w0, ne  // ne = any
  408b84:	and	w0, w0, #0xff
  408b88:	eor	w0, w0, #0x1
  408b8c:	and	w0, w0, #0xff
  408b90:	strb	w0, [sp, #207]
  408b94:	ldrb	w0, [sp, #207]
  408b98:	and	w0, w0, #0x1
  408b9c:	strb	w0, [sp, #207]
  408ba0:	mov	w0, #0x1                   	// #1
  408ba4:	strb	w0, [sp, #239]
  408ba8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  408bac:	add	x0, x0, #0x9c0
  408bb0:	ldr	x1, [x0]
  408bb4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  408bb8:	add	x0, x0, #0x4a8
  408bbc:	ldr	x0, [x0]
  408bc0:	cmp	x1, x0
  408bc4:	csel	x1, x1, x0, cs  // cs = hs, nlast
  408bc8:	add	x0, sp, #0x78
  408bcc:	mov	x2, x1
  408bd0:	mov	x1, #0x20                  	// #32
  408bd4:	bl	4055d8 <ferror@plt+0x25d8>
  408bd8:	str	xzr, [sp, #88]
  408bdc:	b	408e20 <ferror@plt+0x5e20>
  408be0:	add	x0, sp, #0x78
  408be4:	bl	40569c <ferror@plt+0x269c>
  408be8:	str	x0, [sp, #224]
  408bec:	ldr	x0, [sp, #136]
  408bf0:	lsl	x0, x0, #5
  408bf4:	neg	x0, x0
  408bf8:	ldr	x1, [sp, #224]
  408bfc:	add	x0, x1, x0
  408c00:	str	x0, [sp, #192]
  408c04:	ldr	x0, [sp, #248]
  408c08:	cmp	x0, #0x0
  408c0c:	b.eq	408d18 <ferror@plt+0x5d18>  // b.none
  408c10:	ldrb	w19, [sp, #207]
  408c14:	ldr	x0, [sp, #224]
  408c18:	sub	x1, x0, #0x20
  408c1c:	add	x0, sp, #0x58
  408c20:	bl	408818 <ferror@plt+0x5818>
  408c24:	cmp	w19, w0
  408c28:	b.gt	408d18 <ferror@plt+0x5d18>
  408c2c:	nop
  408c30:	b	408c38 <ferror@plt+0x5c38>
  408c34:	nop
  408c38:	ldrb	w0, [sp, #55]
  408c3c:	cmp	w0, #0x63
  408c40:	b.ne	408cf0 <ferror@plt+0x5cf0>  // b.any
  408c44:	ldr	x0, [sp, #224]
  408c48:	sub	x0, x0, #0x20
  408c4c:	str	x0, [sp, #184]
  408c50:	add	x0, sp, #0x78
  408c54:	bl	40569c <ferror@plt+0x269c>
  408c58:	mov	x1, x0
  408c5c:	ldr	x0, [sp, #184]
  408c60:	sub	x0, x1, x0
  408c64:	asr	x0, x0, #5
  408c68:	mov	x1, x0
  408c6c:	ldr	x0, [sp, #240]
  408c70:	add	x0, x0, x1
  408c74:	str	x0, [sp, #176]
  408c78:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  408c7c:	add	x0, x0, #0x558
  408c80:	ldr	x19, [x0]
  408c84:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  408c88:	add	x0, x0, #0xc60
  408c8c:	bl	402fd0 <gettext@plt>
  408c90:	mov	x21, x0
  408c94:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  408c98:	add	x0, x0, #0xbe0
  408c9c:	ldr	x20, [x0]
  408ca0:	add	x0, sp, #0x40
  408ca4:	mov	x1, x0
  408ca8:	ldr	x0, [sp, #176]
  408cac:	bl	412514 <ferror@plt+0xf514>
  408cb0:	mov	x4, x0
  408cb4:	ldr	x3, [sp, #56]
  408cb8:	mov	x2, x20
  408cbc:	mov	x1, x21
  408cc0:	mov	x0, x19
  408cc4:	bl	402fe0 <fprintf@plt>
  408cc8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  408ccc:	add	x0, x0, #0x558
  408cd0:	ldr	x19, [x0]
  408cd4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  408cd8:	add	x0, x0, #0xc78
  408cdc:	bl	402fd0 <gettext@plt>
  408ce0:	mov	x2, x0
  408ce4:	mov	x1, x19
  408ce8:	ldr	x0, [sp, #184]
  408cec:	bl	4089d0 <ferror@plt+0x59d0>
  408cf0:	strb	wzr, [sp, #239]
  408cf4:	b	408e3c <ferror@plt+0x5e3c>
  408cf8:	ldrb	w19, [sp, #207]
  408cfc:	ldr	x0, [sp, #224]
  408d00:	sub	x0, x0, #0x20
  408d04:	mov	x1, x0
  408d08:	ldr	x0, [sp, #224]
  408d0c:	bl	408818 <ferror@plt+0x5818>
  408d10:	cmp	w19, w0
  408d14:	b.le	408c34 <ferror@plt+0x5c34>
  408d18:	ldr	x0, [sp, #224]
  408d1c:	sub	x0, x0, #0x20
  408d20:	str	x0, [sp, #224]
  408d24:	ldr	x1, [sp, #224]
  408d28:	ldr	x0, [sp, #192]
  408d2c:	cmp	x1, x0
  408d30:	b.hi	408cf8 <ferror@plt+0x5cf8>  // b.pmore
  408d34:	ldr	x0, [sp, #136]
  408d38:	ldr	x1, [sp, #240]
  408d3c:	add	x0, x1, x0
  408d40:	str	x0, [sp, #240]
  408d44:	ldr	x0, [sp, #224]
  408d48:	ldr	x0, [x0, #8]
  408d4c:	ldr	x1, [sp, #248]
  408d50:	cmp	x1, x0
  408d54:	b.cs	408da8 <ferror@plt+0x5da8>  // b.hs, b.nlast
  408d58:	ldr	x0, [sp, #248]
  408d5c:	lsl	x0, x0, #1
  408d60:	str	x0, [sp, #248]
  408d64:	ldr	x0, [sp, #248]
  408d68:	cmp	x0, #0x0
  408d6c:	b.ne	408d80 <ferror@plt+0x5d80>  // b.any
  408d70:	ldr	x0, [sp, #224]
  408d74:	ldr	x0, [x0, #8]
  408d78:	str	x0, [sp, #248]
  408d7c:	b	408d94 <ferror@plt+0x5d94>
  408d80:	ldr	x0, [sp, #224]
  408d84:	ldr	x0, [x0, #8]
  408d88:	ldr	x1, [sp, #248]
  408d8c:	cmp	x1, x0
  408d90:	b.cc	408d58 <ferror@plt+0x5d58>  // b.lo, b.ul, b.last
  408d94:	ldr	x0, [sp, #88]
  408d98:	bl	402d20 <free@plt>
  408d9c:	ldr	x0, [sp, #248]
  408da0:	bl	4183dc <ferror@plt+0x153dc>
  408da4:	str	x0, [sp, #88]
  408da8:	ldr	x3, [sp, #88]
  408dac:	ldr	x0, [sp, #224]
  408db0:	ldr	x1, [x0]
  408db4:	ldr	x0, [sp, #224]
  408db8:	ldr	x0, [x0, #8]
  408dbc:	mov	x2, x0
  408dc0:	mov	x0, x3
  408dc4:	bl	402880 <memcpy@plt>
  408dc8:	ldr	x0, [sp, #224]
  408dcc:	ldr	x0, [x0, #8]
  408dd0:	str	x0, [sp, #96]
  408dd4:	ldr	x0, [sp, #208]
  408dd8:	cmp	x0, #0x0
  408ddc:	b.eq	408e20 <ferror@plt+0x5e20>  // b.none
  408de0:	ldr	x0, [sp, #88]
  408de4:	ldr	x1, [sp, #224]
  408de8:	ldr	x2, [x1, #16]
  408dec:	ldr	x1, [sp, #224]
  408df0:	ldr	x1, [x1]
  408df4:	sub	x1, x2, x1
  408df8:	add	x0, x0, x1
  408dfc:	str	x0, [sp, #104]
  408e00:	ldr	x0, [sp, #88]
  408e04:	ldr	x1, [sp, #224]
  408e08:	ldr	x2, [x1, #24]
  408e0c:	ldr	x1, [sp, #224]
  408e10:	ldr	x1, [x1]
  408e14:	sub	x1, x2, x1
  408e18:	add	x0, x0, x1
  408e1c:	str	x0, [sp, #112]
  408e20:	add	x0, sp, #0x78
  408e24:	ldr	x2, [sp, #56]
  408e28:	ldr	x1, [sp, #216]
  408e2c:	bl	405b5c <ferror@plt+0x2b5c>
  408e30:	and	w0, w0, #0xff
  408e34:	cmp	w0, #0x0
  408e38:	b.ne	408be0 <ferror@plt+0x5be0>  // b.any
  408e3c:	ldr	x1, [sp, #56]
  408e40:	ldr	x0, [sp, #216]
  408e44:	bl	40423c <ferror@plt+0x123c>
  408e48:	ldr	x0, [sp, #120]
  408e4c:	bl	402d20 <free@plt>
  408e50:	ldr	x0, [sp, #88]
  408e54:	bl	402d20 <free@plt>
  408e58:	ldrb	w0, [sp, #239]
  408e5c:	ldp	x19, x20, [sp, #16]
  408e60:	ldr	x21, [sp, #32]
  408e64:	ldp	x29, x30, [sp], #256
  408e68:	ret
  408e6c:	stp	x29, x30, [sp, #-64]!
  408e70:	mov	x29, sp
  408e74:	str	x0, [sp, #40]
  408e78:	str	x1, [sp, #32]
  408e7c:	str	x2, [sp, #24]
  408e80:	mov	x1, #0x8                   	// #8
  408e84:	ldr	x0, [sp, #32]
  408e88:	bl	4181a8 <ferror@plt+0x151a8>
  408e8c:	mov	x1, x0
  408e90:	ldr	x0, [sp, #24]
  408e94:	str	x1, [x0]
  408e98:	ldr	x0, [sp, #24]
  408e9c:	ldr	x0, [x0]
  408ea0:	str	x0, [sp, #48]
  408ea4:	str	wzr, [sp, #60]
  408ea8:	b	408f64 <ferror@plt+0x5f64>
  408eac:	ldrsw	x0, [sp, #60]
  408eb0:	lsl	x0, x0, #4
  408eb4:	ldr	x1, [sp, #40]
  408eb8:	add	x0, x1, x0
  408ebc:	ldr	x0, [x0, #8]
  408ec0:	cmp	x0, #0x0
  408ec4:	b.eq	408f04 <ferror@plt+0x5f04>  // b.none
  408ec8:	ldrsw	x0, [sp, #60]
  408ecc:	lsl	x0, x0, #4
  408ed0:	ldr	x1, [sp, #40]
  408ed4:	add	x0, x1, x0
  408ed8:	ldr	x0, [x0, #8]
  408edc:	ldrb	w0, [x0, #12]
  408ee0:	cmp	w0, #0x0
  408ee4:	b.eq	408f04 <ferror@plt+0x5f04>  // b.none
  408ee8:	ldrsw	x0, [sp, #60]
  408eec:	lsl	x0, x0, #4
  408ef0:	ldr	x1, [sp, #40]
  408ef4:	add	x0, x1, x0
  408ef8:	ldr	x0, [x0, #8]
  408efc:	bl	40465c <ferror@plt+0x165c>
  408f00:	b	408f28 <ferror@plt+0x5f28>
  408f04:	ldrsw	x0, [sp, #60]
  408f08:	lsl	x0, x0, #4
  408f0c:	ldr	x1, [sp, #40]
  408f10:	add	x0, x1, x0
  408f14:	ldr	x2, [x0]
  408f18:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  408f1c:	add	x1, x0, #0x860
  408f20:	mov	x0, x2
  408f24:	bl	404070 <ferror@plt+0x1070>
  408f28:	ldrsw	x1, [sp, #60]
  408f2c:	lsl	x1, x1, #3
  408f30:	ldr	x2, [sp, #48]
  408f34:	add	x1, x2, x1
  408f38:	str	x0, [x1]
  408f3c:	ldrsw	x0, [sp, #60]
  408f40:	lsl	x0, x0, #3
  408f44:	ldr	x1, [sp, #48]
  408f48:	add	x0, x1, x0
  408f4c:	ldr	x0, [x0]
  408f50:	cmp	x0, #0x0
  408f54:	b.eq	408f78 <ferror@plt+0x5f78>  // b.none
  408f58:	ldr	w0, [sp, #60]
  408f5c:	add	w0, w0, #0x1
  408f60:	str	w0, [sp, #60]
  408f64:	ldrsw	x0, [sp, #60]
  408f68:	ldr	x1, [sp, #32]
  408f6c:	cmp	x1, x0
  408f70:	b.hi	408eac <ferror@plt+0x5eac>  // b.pmore
  408f74:	b	408f7c <ferror@plt+0x5f7c>
  408f78:	nop
  408f7c:	ldrsw	x0, [sp, #60]
  408f80:	ldp	x29, x30, [sp], #64
  408f84:	ret
  408f88:	stp	x29, x30, [sp, #-256]!
  408f8c:	mov	x29, sp
  408f90:	str	x0, [sp, #56]
  408f94:	str	x1, [sp, #48]
  408f98:	str	x2, [sp, #40]
  408f9c:	str	x3, [sp, #32]
  408fa0:	str	x4, [sp, #24]
  408fa4:	str	x5, [sp, #16]
  408fa8:	mov	x1, #0x38                  	// #56
  408fac:	ldr	x0, [sp, #40]
  408fb0:	bl	4181a8 <ferror@plt+0x151a8>
  408fb4:	str	x0, [sp, #192]
  408fb8:	str	xzr, [sp, #248]
  408fbc:	str	xzr, [sp, #240]
  408fc0:	mov	x1, #0x8                   	// #8
  408fc4:	ldr	x0, [sp, #40]
  408fc8:	bl	4181a8 <ferror@plt+0x151a8>
  408fcc:	str	x0, [sp, #184]
  408fd0:	mov	x1, #0x8                   	// #8
  408fd4:	ldr	x0, [sp, #40]
  408fd8:	bl	4181a8 <ferror@plt+0x151a8>
  408fdc:	str	x0, [sp, #176]
  408fe0:	mov	x1, #0x8                   	// #8
  408fe4:	ldr	x0, [sp, #40]
  408fe8:	bl	4181a8 <ferror@plt+0x151a8>
  408fec:	str	x0, [sp, #168]
  408ff0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  408ff4:	add	x0, x0, #0x9e8
  408ff8:	ldr	x0, [x0]
  408ffc:	str	x0, [sp, #160]
  409000:	str	xzr, [sp, #72]
  409004:	str	xzr, [sp, #232]
  409008:	b	409280 <ferror@plt+0x6280>
  40900c:	ldr	x1, [sp, #232]
  409010:	mov	x0, x1
  409014:	lsl	x0, x0, #3
  409018:	sub	x0, x0, x1
  40901c:	lsl	x0, x0, #3
  409020:	mov	x1, x0
  409024:	ldr	x0, [sp, #192]
  409028:	add	x3, x0, x1
  40902c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  409030:	add	x0, x0, #0x9c0
  409034:	ldr	x1, [x0]
  409038:	ldr	x0, [sp, #40]
  40903c:	udiv	x1, x1, x0
  409040:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  409044:	add	x0, x0, #0x4a8
  409048:	ldr	x0, [x0]
  40904c:	cmp	x1, x0
  409050:	csel	x0, x1, x0, cs  // cs = hs, nlast
  409054:	mov	x2, x0
  409058:	mov	x1, #0x20                  	// #32
  40905c:	mov	x0, x3
  409060:	bl	4055d8 <ferror@plt+0x25d8>
  409064:	ldr	x1, [sp, #232]
  409068:	mov	x0, x1
  40906c:	lsl	x0, x0, #3
  409070:	sub	x0, x0, x1
  409074:	lsl	x0, x0, #3
  409078:	mov	x1, x0
  40907c:	ldr	x0, [sp, #192]
  409080:	add	x3, x0, x1
  409084:	ldr	x0, [sp, #232]
  409088:	lsl	x0, x0, #3
  40908c:	ldr	x1, [sp, #16]
  409090:	add	x0, x1, x0
  409094:	ldr	x4, [x0]
  409098:	ldr	x0, [sp, #232]
  40909c:	lsl	x0, x0, #4
  4090a0:	ldr	x1, [sp, #56]
  4090a4:	add	x0, x1, x0
  4090a8:	ldr	x0, [x0]
  4090ac:	mov	x2, x0
  4090b0:	mov	x1, x4
  4090b4:	mov	x0, x3
  4090b8:	bl	405b5c <ferror@plt+0x2b5c>
  4090bc:	and	w0, w0, #0xff
  4090c0:	cmp	w0, #0x0
  4090c4:	b.eq	409164 <ferror@plt+0x6164>  // b.none
  4090c8:	ldr	x1, [sp, #232]
  4090cc:	mov	x0, x1
  4090d0:	lsl	x0, x0, #3
  4090d4:	sub	x0, x0, x1
  4090d8:	lsl	x0, x0, #3
  4090dc:	mov	x1, x0
  4090e0:	ldr	x0, [sp, #192]
  4090e4:	add	x0, x0, x1
  4090e8:	bl	40569c <ferror@plt+0x269c>
  4090ec:	str	x0, [sp, #104]
  4090f0:	ldr	x0, [sp, #232]
  4090f4:	lsl	x0, x0, #3
  4090f8:	ldr	x1, [sp, #184]
  4090fc:	add	x0, x1, x0
  409100:	ldr	x1, [sp, #104]
  409104:	sub	x1, x1, #0x20
  409108:	str	x1, [x0]
  40910c:	ldr	x1, [sp, #232]
  409110:	mov	x0, x1
  409114:	lsl	x0, x0, #3
  409118:	sub	x0, x0, x1
  40911c:	lsl	x0, x0, #3
  409120:	mov	x1, x0
  409124:	ldr	x0, [sp, #192]
  409128:	add	x0, x0, x1
  40912c:	ldr	x0, [x0, #16]
  409130:	lsl	x0, x0, #5
  409134:	neg	x1, x0
  409138:	ldr	x0, [sp, #232]
  40913c:	lsl	x0, x0, #3
  409140:	ldr	x2, [sp, #176]
  409144:	add	x0, x2, x0
  409148:	ldr	x2, [sp, #104]
  40914c:	add	x1, x2, x1
  409150:	str	x1, [x0]
  409154:	ldr	x0, [sp, #232]
  409158:	add	x0, x0, #0x1
  40915c:	str	x0, [sp, #232]
  409160:	b	409280 <ferror@plt+0x6280>
  409164:	ldr	x0, [sp, #232]
  409168:	lsl	x0, x0, #3
  40916c:	ldr	x1, [sp, #16]
  409170:	add	x0, x1, x0
  409174:	ldr	x2, [x0]
  409178:	ldr	x0, [sp, #232]
  40917c:	lsl	x0, x0, #4
  409180:	ldr	x1, [sp, #56]
  409184:	add	x0, x1, x0
  409188:	ldr	x0, [x0]
  40918c:	mov	x1, x0
  409190:	mov	x0, x2
  409194:	bl	40423c <ferror@plt+0x123c>
  409198:	ldr	x1, [sp, #232]
  40919c:	ldr	x0, [sp, #48]
  4091a0:	cmp	x1, x0
  4091a4:	b.cs	4091cc <ferror@plt+0x61cc>  // b.hs, b.nlast
  4091a8:	ldr	x0, [sp, #48]
  4091ac:	sub	x0, x0, #0x1
  4091b0:	str	x0, [sp, #48]
  4091b4:	ldr	x0, [sp, #232]
  4091b8:	lsl	x0, x0, #4
  4091bc:	ldr	x1, [sp, #56]
  4091c0:	add	x0, x1, x0
  4091c4:	ldr	x0, [x0]
  4091c8:	bl	4048d4 <ferror@plt+0x18d4>
  4091cc:	ldr	x1, [sp, #232]
  4091d0:	mov	x0, x1
  4091d4:	lsl	x0, x0, #3
  4091d8:	sub	x0, x0, x1
  4091dc:	lsl	x0, x0, #3
  4091e0:	mov	x1, x0
  4091e4:	ldr	x0, [sp, #192]
  4091e8:	add	x0, x0, x1
  4091ec:	ldr	x0, [x0]
  4091f0:	bl	402d20 <free@plt>
  4091f4:	ldr	x0, [sp, #40]
  4091f8:	sub	x0, x0, #0x1
  4091fc:	str	x0, [sp, #40]
  409200:	ldr	x0, [sp, #232]
  409204:	str	x0, [sp, #224]
  409208:	b	409270 <ferror@plt+0x6270>
  40920c:	ldr	x0, [sp, #224]
  409210:	add	x0, x0, #0x1
  409214:	lsl	x0, x0, #4
  409218:	ldr	x1, [sp, #56]
  40921c:	add	x0, x1, x0
  409220:	ldr	x1, [sp, #224]
  409224:	lsl	x1, x1, #4
  409228:	ldr	x2, [sp, #56]
  40922c:	add	x2, x2, x1
  409230:	ldp	x0, x1, [x0]
  409234:	stp	x0, x1, [x2]
  409238:	ldr	x0, [sp, #224]
  40923c:	add	x0, x0, #0x1
  409240:	lsl	x0, x0, #3
  409244:	ldr	x1, [sp, #16]
  409248:	add	x1, x1, x0
  40924c:	ldr	x0, [sp, #224]
  409250:	lsl	x0, x0, #3
  409254:	ldr	x2, [sp, #16]
  409258:	add	x0, x2, x0
  40925c:	ldr	x1, [x1]
  409260:	str	x1, [x0]
  409264:	ldr	x0, [sp, #224]
  409268:	add	x0, x0, #0x1
  40926c:	str	x0, [sp, #224]
  409270:	ldr	x1, [sp, #224]
  409274:	ldr	x0, [sp, #40]
  409278:	cmp	x1, x0
  40927c:	b.cc	40920c <ferror@plt+0x620c>  // b.lo, b.ul, b.last
  409280:	ldr	x1, [sp, #232]
  409284:	ldr	x0, [sp, #40]
  409288:	cmp	x1, x0
  40928c:	b.cc	40900c <ferror@plt+0x600c>  // b.lo, b.ul, b.last
  409290:	str	xzr, [sp, #232]
  409294:	b	4092bc <ferror@plt+0x62bc>
  409298:	ldr	x0, [sp, #232]
  40929c:	lsl	x0, x0, #3
  4092a0:	ldr	x1, [sp, #168]
  4092a4:	add	x0, x1, x0
  4092a8:	ldr	x1, [sp, #232]
  4092ac:	str	x1, [x0]
  4092b0:	ldr	x0, [sp, #232]
  4092b4:	add	x0, x0, #0x1
  4092b8:	str	x0, [sp, #232]
  4092bc:	ldr	x1, [sp, #232]
  4092c0:	ldr	x0, [sp, #40]
  4092c4:	cmp	x1, x0
  4092c8:	b.cc	409298 <ferror@plt+0x6298>  // b.lo, b.ul, b.last
  4092cc:	mov	x0, #0x1                   	// #1
  4092d0:	str	x0, [sp, #232]
  4092d4:	b	4093a8 <ferror@plt+0x63a8>
  4092d8:	ldr	x0, [sp, #232]
  4092dc:	lsl	x0, x0, #3
  4092e0:	sub	x0, x0, #0x8
  4092e4:	ldr	x1, [sp, #168]
  4092e8:	add	x0, x1, x0
  4092ec:	ldr	x0, [x0]
  4092f0:	lsl	x0, x0, #3
  4092f4:	ldr	x1, [sp, #184]
  4092f8:	add	x0, x1, x0
  4092fc:	ldr	x2, [x0]
  409300:	ldr	x0, [sp, #232]
  409304:	lsl	x0, x0, #3
  409308:	ldr	x1, [sp, #168]
  40930c:	add	x0, x1, x0
  409310:	ldr	x0, [x0]
  409314:	lsl	x0, x0, #3
  409318:	ldr	x1, [sp, #184]
  40931c:	add	x0, x1, x0
  409320:	ldr	x0, [x0]
  409324:	mov	x1, x0
  409328:	mov	x0, x2
  40932c:	bl	408818 <ferror@plt+0x5818>
  409330:	cmp	w0, #0x0
  409334:	b.le	40939c <ferror@plt+0x639c>
  409338:	ldr	x0, [sp, #232]
  40933c:	lsl	x0, x0, #3
  409340:	sub	x0, x0, #0x8
  409344:	ldr	x1, [sp, #168]
  409348:	add	x0, x1, x0
  40934c:	ldr	x0, [x0]
  409350:	str	x0, [sp, #112]
  409354:	ldr	x0, [sp, #232]
  409358:	lsl	x0, x0, #3
  40935c:	ldr	x1, [sp, #168]
  409360:	add	x1, x1, x0
  409364:	ldr	x0, [sp, #232]
  409368:	lsl	x0, x0, #3
  40936c:	sub	x0, x0, #0x8
  409370:	ldr	x2, [sp, #168]
  409374:	add	x0, x2, x0
  409378:	ldr	x1, [x1]
  40937c:	str	x1, [x0]
  409380:	ldr	x0, [sp, #232]
  409384:	lsl	x0, x0, #3
  409388:	ldr	x1, [sp, #168]
  40938c:	add	x0, x1, x0
  409390:	ldr	x1, [sp, #112]
  409394:	str	x1, [x0]
  409398:	str	xzr, [sp, #232]
  40939c:	ldr	x0, [sp, #232]
  4093a0:	add	x0, x0, #0x1
  4093a4:	str	x0, [sp, #232]
  4093a8:	ldr	x1, [sp, #232]
  4093ac:	ldr	x0, [sp, #40]
  4093b0:	cmp	x1, x0
  4093b4:	b.cc	4092d8 <ferror@plt+0x62d8>  // b.lo, b.ul, b.last
  4093b8:	b	409a84 <ferror@plt+0x6a84>
  4093bc:	ldr	x0, [sp, #168]
  4093c0:	ldr	x0, [x0]
  4093c4:	lsl	x0, x0, #3
  4093c8:	ldr	x1, [sp, #184]
  4093cc:	add	x0, x1, x0
  4093d0:	ldr	x0, [x0]
  4093d4:	str	x0, [sp, #152]
  4093d8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4093dc:	add	x0, x0, #0x9e2
  4093e0:	ldrb	w0, [x0]
  4093e4:	cmp	w0, #0x0
  4093e8:	b.eq	409514 <ferror@plt+0x6514>  // b.none
  4093ec:	ldr	x0, [sp, #248]
  4093f0:	cmp	x0, #0x0
  4093f4:	b.eq	409420 <ferror@plt+0x6420>  // b.none
  4093f8:	ldr	x1, [sp, #152]
  4093fc:	ldr	x0, [sp, #248]
  409400:	bl	408818 <ferror@plt+0x5818>
  409404:	cmp	w0, #0x0
  409408:	b.eq	409420 <ferror@plt+0x6420>  // b.none
  40940c:	str	xzr, [sp, #248]
  409410:	add	x0, sp, #0x48
  409414:	ldr	x2, [sp, #24]
  409418:	ldr	x1, [sp, #32]
  40941c:	bl	4089d0 <ferror@plt+0x59d0>
  409420:	ldr	x0, [sp, #248]
  409424:	cmp	x0, #0x0
  409428:	b.ne	409524 <ferror@plt+0x6524>  // b.any
  40942c:	add	x0, sp, #0x48
  409430:	str	x0, [sp, #248]
  409434:	ldr	x0, [sp, #152]
  409438:	ldr	x0, [x0, #8]
  40943c:	ldr	x1, [sp, #240]
  409440:	cmp	x1, x0
  409444:	b.cs	409498 <ferror@plt+0x6498>  // b.hs, b.nlast
  409448:	ldr	x0, [sp, #240]
  40944c:	cmp	x0, #0x0
  409450:	b.ne	409464 <ferror@plt+0x6464>  // b.any
  409454:	ldr	x0, [sp, #152]
  409458:	ldr	x0, [x0, #8]
  40945c:	str	x0, [sp, #240]
  409460:	b	409484 <ferror@plt+0x6484>
  409464:	ldr	x0, [sp, #240]
  409468:	lsl	x0, x0, #1
  40946c:	str	x0, [sp, #240]
  409470:	ldr	x0, [sp, #152]
  409474:	ldr	x0, [x0, #8]
  409478:	ldr	x1, [sp, #240]
  40947c:	cmp	x1, x0
  409480:	b.cc	409448 <ferror@plt+0x6448>  // b.lo, b.ul, b.last
  409484:	ldr	x0, [sp, #72]
  409488:	bl	402d20 <free@plt>
  40948c:	ldr	x0, [sp, #240]
  409490:	bl	4183dc <ferror@plt+0x153dc>
  409494:	str	x0, [sp, #72]
  409498:	ldr	x0, [sp, #152]
  40949c:	ldr	x0, [x0, #8]
  4094a0:	str	x0, [sp, #80]
  4094a4:	ldr	x3, [sp, #72]
  4094a8:	ldr	x0, [sp, #152]
  4094ac:	ldr	x0, [x0]
  4094b0:	ldr	x1, [sp, #80]
  4094b4:	mov	x2, x1
  4094b8:	mov	x1, x0
  4094bc:	mov	x0, x3
  4094c0:	bl	402880 <memcpy@plt>
  4094c4:	ldr	x0, [sp, #160]
  4094c8:	cmp	x0, #0x0
  4094cc:	b.eq	409524 <ferror@plt+0x6524>  // b.none
  4094d0:	ldr	x0, [sp, #72]
  4094d4:	ldr	x1, [sp, #152]
  4094d8:	ldr	x2, [x1, #16]
  4094dc:	ldr	x1, [sp, #152]
  4094e0:	ldr	x1, [x1]
  4094e4:	sub	x1, x2, x1
  4094e8:	add	x0, x0, x1
  4094ec:	str	x0, [sp, #88]
  4094f0:	ldr	x0, [sp, #72]
  4094f4:	ldr	x1, [sp, #152]
  4094f8:	ldr	x2, [x1, #24]
  4094fc:	ldr	x1, [sp, #152]
  409500:	ldr	x1, [x1]
  409504:	sub	x1, x2, x1
  409508:	add	x0, x0, x1
  40950c:	str	x0, [sp, #96]
  409510:	b	409524 <ferror@plt+0x6524>
  409514:	ldr	x2, [sp, #24]
  409518:	ldr	x1, [sp, #32]
  40951c:	ldr	x0, [sp, #152]
  409520:	bl	4089d0 <ferror@plt+0x59d0>
  409524:	ldr	x0, [sp, #168]
  409528:	ldr	x0, [x0]
  40952c:	lsl	x0, x0, #3
  409530:	ldr	x1, [sp, #176]
  409534:	add	x0, x1, x0
  409538:	ldr	x0, [x0]
  40953c:	ldr	x1, [sp, #152]
  409540:	cmp	x1, x0
  409544:	b.ls	40956c <ferror@plt+0x656c>  // b.plast
  409548:	ldr	x0, [sp, #168]
  40954c:	ldr	x0, [x0]
  409550:	lsl	x0, x0, #3
  409554:	ldr	x1, [sp, #184]
  409558:	add	x0, x1, x0
  40955c:	ldr	x1, [sp, #152]
  409560:	sub	x1, x1, #0x20
  409564:	str	x1, [x0]
  409568:	b	40992c <ferror@plt+0x692c>
  40956c:	ldr	x0, [sp, #168]
  409570:	ldr	x1, [x0]
  409574:	mov	x0, x1
  409578:	lsl	x0, x0, #3
  40957c:	sub	x0, x0, x1
  409580:	lsl	x0, x0, #3
  409584:	mov	x1, x0
  409588:	ldr	x0, [sp, #192]
  40958c:	add	x3, x0, x1
  409590:	ldr	x0, [sp, #168]
  409594:	ldr	x0, [x0]
  409598:	lsl	x0, x0, #3
  40959c:	ldr	x1, [sp, #16]
  4095a0:	add	x0, x1, x0
  4095a4:	ldr	x4, [x0]
  4095a8:	ldr	x0, [sp, #168]
  4095ac:	ldr	x0, [x0]
  4095b0:	lsl	x0, x0, #4
  4095b4:	ldr	x1, [sp, #56]
  4095b8:	add	x0, x1, x0
  4095bc:	ldr	x0, [x0]
  4095c0:	mov	x2, x0
  4095c4:	mov	x1, x4
  4095c8:	mov	x0, x3
  4095cc:	bl	405b5c <ferror@plt+0x2b5c>
  4095d0:	and	w0, w0, #0xff
  4095d4:	cmp	w0, #0x0
  4095d8:	b.eq	40967c <ferror@plt+0x667c>  // b.none
  4095dc:	ldr	x0, [sp, #168]
  4095e0:	ldr	x1, [x0]
  4095e4:	mov	x0, x1
  4095e8:	lsl	x0, x0, #3
  4095ec:	sub	x0, x0, x1
  4095f0:	lsl	x0, x0, #3
  4095f4:	mov	x1, x0
  4095f8:	ldr	x0, [sp, #192]
  4095fc:	add	x0, x0, x1
  409600:	bl	40569c <ferror@plt+0x269c>
  409604:	str	x0, [sp, #144]
  409608:	ldr	x0, [sp, #168]
  40960c:	ldr	x0, [x0]
  409610:	lsl	x0, x0, #3
  409614:	ldr	x1, [sp, #184]
  409618:	add	x0, x1, x0
  40961c:	ldr	x1, [sp, #144]
  409620:	sub	x1, x1, #0x20
  409624:	str	x1, [x0]
  409628:	ldr	x0, [sp, #168]
  40962c:	ldr	x1, [x0]
  409630:	mov	x0, x1
  409634:	lsl	x0, x0, #3
  409638:	sub	x0, x0, x1
  40963c:	lsl	x0, x0, #3
  409640:	mov	x1, x0
  409644:	ldr	x0, [sp, #192]
  409648:	add	x0, x0, x1
  40964c:	ldr	x0, [x0, #16]
  409650:	lsl	x0, x0, #5
  409654:	neg	x1, x0
  409658:	ldr	x0, [sp, #168]
  40965c:	ldr	x0, [x0]
  409660:	lsl	x0, x0, #3
  409664:	ldr	x2, [sp, #176]
  409668:	add	x0, x2, x0
  40966c:	ldr	x2, [sp, #144]
  409670:	add	x1, x2, x1
  409674:	str	x1, [x0]
  409678:	b	40992c <ferror@plt+0x692c>
  40967c:	mov	x0, #0x1                   	// #1
  409680:	str	x0, [sp, #232]
  409684:	b	4096d4 <ferror@plt+0x66d4>
  409688:	ldr	x0, [sp, #232]
  40968c:	lsl	x0, x0, #3
  409690:	ldr	x1, [sp, #168]
  409694:	add	x0, x1, x0
  409698:	ldr	x1, [x0]
  40969c:	ldr	x0, [sp, #168]
  4096a0:	ldr	x0, [x0]
  4096a4:	cmp	x1, x0
  4096a8:	b.ls	4096c8 <ferror@plt+0x66c8>  // b.plast
  4096ac:	ldr	x0, [sp, #232]
  4096b0:	lsl	x0, x0, #3
  4096b4:	ldr	x1, [sp, #168]
  4096b8:	add	x0, x1, x0
  4096bc:	ldr	x1, [x0]
  4096c0:	sub	x1, x1, #0x1
  4096c4:	str	x1, [x0]
  4096c8:	ldr	x0, [sp, #232]
  4096cc:	add	x0, x0, #0x1
  4096d0:	str	x0, [sp, #232]
  4096d4:	ldr	x1, [sp, #232]
  4096d8:	ldr	x0, [sp, #40]
  4096dc:	cmp	x1, x0
  4096e0:	b.cc	409688 <ferror@plt+0x6688>  // b.lo, b.ul, b.last
  4096e4:	ldr	x0, [sp, #40]
  4096e8:	sub	x0, x0, #0x1
  4096ec:	str	x0, [sp, #40]
  4096f0:	ldr	x0, [sp, #168]
  4096f4:	ldr	x0, [x0]
  4096f8:	lsl	x0, x0, #3
  4096fc:	ldr	x1, [sp, #16]
  409700:	add	x0, x1, x0
  409704:	ldr	x2, [x0]
  409708:	ldr	x0, [sp, #168]
  40970c:	ldr	x0, [x0]
  409710:	lsl	x0, x0, #4
  409714:	ldr	x1, [sp, #56]
  409718:	add	x0, x1, x0
  40971c:	ldr	x0, [x0]
  409720:	mov	x1, x0
  409724:	mov	x0, x2
  409728:	bl	40423c <ferror@plt+0x123c>
  40972c:	ldr	x0, [sp, #168]
  409730:	ldr	x0, [x0]
  409734:	ldr	x1, [sp, #48]
  409738:	cmp	x1, x0
  40973c:	b.ls	409768 <ferror@plt+0x6768>  // b.plast
  409740:	ldr	x0, [sp, #48]
  409744:	sub	x0, x0, #0x1
  409748:	str	x0, [sp, #48]
  40974c:	ldr	x0, [sp, #168]
  409750:	ldr	x0, [x0]
  409754:	lsl	x0, x0, #4
  409758:	ldr	x1, [sp, #56]
  40975c:	add	x0, x1, x0
  409760:	ldr	x0, [x0]
  409764:	bl	4048d4 <ferror@plt+0x18d4>
  409768:	ldr	x0, [sp, #168]
  40976c:	ldr	x1, [x0]
  409770:	mov	x0, x1
  409774:	lsl	x0, x0, #3
  409778:	sub	x0, x0, x1
  40977c:	lsl	x0, x0, #3
  409780:	mov	x1, x0
  409784:	ldr	x0, [sp, #192]
  409788:	add	x0, x0, x1
  40978c:	ldr	x0, [x0]
  409790:	bl	402d20 <free@plt>
  409794:	ldr	x0, [sp, #168]
  409798:	ldr	x0, [x0]
  40979c:	str	x0, [sp, #232]
  4097a0:	b	4098c8 <ferror@plt+0x68c8>
  4097a4:	ldr	x0, [sp, #232]
  4097a8:	add	x0, x0, #0x1
  4097ac:	lsl	x0, x0, #3
  4097b0:	ldr	x1, [sp, #16]
  4097b4:	add	x1, x1, x0
  4097b8:	ldr	x0, [sp, #232]
  4097bc:	lsl	x0, x0, #3
  4097c0:	ldr	x2, [sp, #16]
  4097c4:	add	x0, x2, x0
  4097c8:	ldr	x1, [x1]
  4097cc:	str	x1, [x0]
  4097d0:	ldr	x0, [sp, #232]
  4097d4:	add	x0, x0, #0x1
  4097d8:	lsl	x0, x0, #4
  4097dc:	ldr	x1, [sp, #56]
  4097e0:	add	x0, x1, x0
  4097e4:	ldr	x1, [sp, #232]
  4097e8:	lsl	x1, x1, #4
  4097ec:	ldr	x2, [sp, #56]
  4097f0:	add	x2, x2, x1
  4097f4:	ldp	x0, x1, [x0]
  4097f8:	stp	x0, x1, [x2]
  4097fc:	ldr	x0, [sp, #232]
  409800:	add	x1, x0, #0x1
  409804:	mov	x0, x1
  409808:	lsl	x0, x0, #3
  40980c:	sub	x0, x0, x1
  409810:	lsl	x0, x0, #3
  409814:	mov	x1, x0
  409818:	ldr	x0, [sp, #192]
  40981c:	add	x2, x0, x1
  409820:	ldr	x1, [sp, #232]
  409824:	mov	x0, x1
  409828:	lsl	x0, x0, #3
  40982c:	sub	x0, x0, x1
  409830:	lsl	x0, x0, #3
  409834:	mov	x1, x0
  409838:	ldr	x0, [sp, #192]
  40983c:	add	x0, x0, x1
  409840:	mov	x1, x2
  409844:	ldp	x2, x3, [x1]
  409848:	stp	x2, x3, [x0]
  40984c:	ldp	x2, x3, [x1, #16]
  409850:	stp	x2, x3, [x0, #16]
  409854:	ldp	x2, x3, [x1, #32]
  409858:	stp	x2, x3, [x0, #32]
  40985c:	ldr	x1, [x1, #48]
  409860:	str	x1, [x0, #48]
  409864:	ldr	x0, [sp, #232]
  409868:	add	x0, x0, #0x1
  40986c:	lsl	x0, x0, #3
  409870:	ldr	x1, [sp, #184]
  409874:	add	x1, x1, x0
  409878:	ldr	x0, [sp, #232]
  40987c:	lsl	x0, x0, #3
  409880:	ldr	x2, [sp, #184]
  409884:	add	x0, x2, x0
  409888:	ldr	x1, [x1]
  40988c:	str	x1, [x0]
  409890:	ldr	x0, [sp, #232]
  409894:	add	x0, x0, #0x1
  409898:	lsl	x0, x0, #3
  40989c:	ldr	x1, [sp, #176]
  4098a0:	add	x1, x1, x0
  4098a4:	ldr	x0, [sp, #232]
  4098a8:	lsl	x0, x0, #3
  4098ac:	ldr	x2, [sp, #176]
  4098b0:	add	x0, x2, x0
  4098b4:	ldr	x1, [x1]
  4098b8:	str	x1, [x0]
  4098bc:	ldr	x0, [sp, #232]
  4098c0:	add	x0, x0, #0x1
  4098c4:	str	x0, [sp, #232]
  4098c8:	ldr	x1, [sp, #232]
  4098cc:	ldr	x0, [sp, #40]
  4098d0:	cmp	x1, x0
  4098d4:	b.cc	4097a4 <ferror@plt+0x67a4>  // b.lo, b.ul, b.last
  4098d8:	str	xzr, [sp, #232]
  4098dc:	b	409918 <ferror@plt+0x6918>
  4098e0:	ldr	x0, [sp, #232]
  4098e4:	add	x0, x0, #0x1
  4098e8:	lsl	x0, x0, #3
  4098ec:	ldr	x1, [sp, #168]
  4098f0:	add	x1, x1, x0
  4098f4:	ldr	x0, [sp, #232]
  4098f8:	lsl	x0, x0, #3
  4098fc:	ldr	x2, [sp, #168]
  409900:	add	x0, x2, x0
  409904:	ldr	x1, [x1]
  409908:	str	x1, [x0]
  40990c:	ldr	x0, [sp, #232]
  409910:	add	x0, x0, #0x1
  409914:	str	x0, [sp, #232]
  409918:	ldr	x1, [sp, #232]
  40991c:	ldr	x0, [sp, #40]
  409920:	cmp	x1, x0
  409924:	b.cc	4098e0 <ferror@plt+0x68e0>  // b.lo, b.ul, b.last
  409928:	b	409a84 <ferror@plt+0x6a84>
  40992c:	mov	x0, #0x1                   	// #1
  409930:	str	x0, [sp, #216]
  409934:	ldr	x0, [sp, #40]
  409938:	str	x0, [sp, #208]
  40993c:	ldr	x0, [sp, #216]
  409940:	str	x0, [sp, #200]
  409944:	ldr	x0, [sp, #168]
  409948:	ldr	x0, [x0]
  40994c:	str	x0, [sp, #136]
  409950:	b	409a00 <ferror@plt+0x6a00>
  409954:	ldr	x0, [sp, #136]
  409958:	lsl	x0, x0, #3
  40995c:	ldr	x1, [sp, #184]
  409960:	add	x0, x1, x0
  409964:	ldr	x2, [x0]
  409968:	ldr	x0, [sp, #200]
  40996c:	lsl	x0, x0, #3
  409970:	ldr	x1, [sp, #168]
  409974:	add	x0, x1, x0
  409978:	ldr	x0, [x0]
  40997c:	lsl	x0, x0, #3
  409980:	ldr	x1, [sp, #184]
  409984:	add	x0, x1, x0
  409988:	ldr	x0, [x0]
  40998c:	mov	x1, x0
  409990:	mov	x0, x2
  409994:	bl	408818 <ferror@plt+0x5818>
  409998:	str	w0, [sp, #124]
  40999c:	ldr	w0, [sp, #124]
  4099a0:	cmp	w0, #0x0
  4099a4:	b.lt	4099d4 <ferror@plt+0x69d4>  // b.tstop
  4099a8:	ldr	w0, [sp, #124]
  4099ac:	cmp	w0, #0x0
  4099b0:	b.ne	4099e0 <ferror@plt+0x69e0>  // b.any
  4099b4:	ldr	x0, [sp, #200]
  4099b8:	lsl	x0, x0, #3
  4099bc:	ldr	x1, [sp, #168]
  4099c0:	add	x0, x1, x0
  4099c4:	ldr	x0, [x0]
  4099c8:	ldr	x1, [sp, #136]
  4099cc:	cmp	x1, x0
  4099d0:	b.cs	4099e0 <ferror@plt+0x69e0>  // b.hs, b.nlast
  4099d4:	ldr	x0, [sp, #200]
  4099d8:	str	x0, [sp, #208]
  4099dc:	b	4099ec <ferror@plt+0x69ec>
  4099e0:	ldr	x0, [sp, #200]
  4099e4:	add	x0, x0, #0x1
  4099e8:	str	x0, [sp, #216]
  4099ec:	ldr	x1, [sp, #216]
  4099f0:	ldr	x0, [sp, #208]
  4099f4:	add	x0, x1, x0
  4099f8:	lsr	x0, x0, #1
  4099fc:	str	x0, [sp, #200]
  409a00:	ldr	x1, [sp, #216]
  409a04:	ldr	x0, [sp, #208]
  409a08:	cmp	x1, x0
  409a0c:	b.cc	409954 <ferror@plt+0x6954>  // b.lo, b.ul, b.last
  409a10:	ldr	x0, [sp, #216]
  409a14:	sub	x0, x0, #0x1
  409a18:	str	x0, [sp, #128]
  409a1c:	str	xzr, [sp, #224]
  409a20:	b	409a5c <ferror@plt+0x6a5c>
  409a24:	ldr	x0, [sp, #224]
  409a28:	add	x0, x0, #0x1
  409a2c:	lsl	x0, x0, #3
  409a30:	ldr	x1, [sp, #168]
  409a34:	add	x1, x1, x0
  409a38:	ldr	x0, [sp, #224]
  409a3c:	lsl	x0, x0, #3
  409a40:	ldr	x2, [sp, #168]
  409a44:	add	x0, x2, x0
  409a48:	ldr	x1, [x1]
  409a4c:	str	x1, [x0]
  409a50:	ldr	x0, [sp, #224]
  409a54:	add	x0, x0, #0x1
  409a58:	str	x0, [sp, #224]
  409a5c:	ldr	x1, [sp, #224]
  409a60:	ldr	x0, [sp, #128]
  409a64:	cmp	x1, x0
  409a68:	b.cc	409a24 <ferror@plt+0x6a24>  // b.lo, b.ul, b.last
  409a6c:	ldr	x0, [sp, #128]
  409a70:	lsl	x0, x0, #3
  409a74:	ldr	x1, [sp, #168]
  409a78:	add	x0, x1, x0
  409a7c:	ldr	x1, [sp, #136]
  409a80:	str	x1, [x0]
  409a84:	ldr	x0, [sp, #40]
  409a88:	cmp	x0, #0x0
  409a8c:	b.ne	4093bc <ferror@plt+0x63bc>  // b.any
  409a90:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  409a94:	add	x0, x0, #0x9e2
  409a98:	ldrb	w0, [x0]
  409a9c:	cmp	w0, #0x0
  409aa0:	b.eq	409ac8 <ferror@plt+0x6ac8>  // b.none
  409aa4:	ldr	x0, [sp, #248]
  409aa8:	cmp	x0, #0x0
  409aac:	b.eq	409ac8 <ferror@plt+0x6ac8>  // b.none
  409ab0:	add	x0, sp, #0x48
  409ab4:	ldr	x2, [sp, #24]
  409ab8:	ldr	x1, [sp, #32]
  409abc:	bl	4089d0 <ferror@plt+0x59d0>
  409ac0:	ldr	x0, [sp, #72]
  409ac4:	bl	402d20 <free@plt>
  409ac8:	ldr	x1, [sp, #24]
  409acc:	ldr	x0, [sp, #32]
  409ad0:	bl	40423c <ferror@plt+0x123c>
  409ad4:	ldr	x0, [sp, #16]
  409ad8:	bl	402d20 <free@plt>
  409adc:	ldr	x0, [sp, #192]
  409ae0:	bl	402d20 <free@plt>
  409ae4:	ldr	x0, [sp, #168]
  409ae8:	bl	402d20 <free@plt>
  409aec:	ldr	x0, [sp, #176]
  409af0:	bl	402d20 <free@plt>
  409af4:	ldr	x0, [sp, #184]
  409af8:	bl	402d20 <free@plt>
  409afc:	nop
  409b00:	ldp	x29, x30, [sp], #256
  409b04:	ret
  409b08:	stp	x29, x30, [sp, #-80]!
  409b0c:	mov	x29, sp
  409b10:	str	x0, [sp, #56]
  409b14:	str	x1, [sp, #48]
  409b18:	str	x2, [sp, #40]
  409b1c:	str	x3, [sp, #32]
  409b20:	str	x4, [sp, #24]
  409b24:	add	x0, sp, #0x40
  409b28:	mov	x2, x0
  409b2c:	ldr	x1, [sp, #40]
  409b30:	ldr	x0, [sp, #56]
  409b34:	bl	408e6c <ferror@plt+0x5e6c>
  409b38:	str	x0, [sp, #72]
  409b3c:	ldr	x1, [sp, #72]
  409b40:	ldr	x0, [sp, #40]
  409b44:	cmp	x1, x0
  409b48:	b.cs	409b88 <ferror@plt+0x6b88>  // b.hs, b.nlast
  409b4c:	ldr	x0, [sp, #72]
  409b50:	cmp	x0, #0x1
  409b54:	b.hi	409b88 <ferror@plt+0x6b88>  // b.pmore
  409b58:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  409b5c:	add	x0, x0, #0x780
  409b60:	bl	402fd0 <gettext@plt>
  409b64:	mov	x2, x0
  409b68:	ldr	x0, [sp, #72]
  409b6c:	lsl	x0, x0, #4
  409b70:	ldr	x1, [sp, #56]
  409b74:	add	x0, x1, x0
  409b78:	ldr	x0, [x0]
  409b7c:	mov	x1, x0
  409b80:	mov	x0, x2
  409b84:	bl	403554 <ferror@plt+0x554>
  409b88:	ldr	x0, [sp, #64]
  409b8c:	mov	x5, x0
  409b90:	ldr	x4, [sp, #24]
  409b94:	ldr	x3, [sp, #32]
  409b98:	ldr	x2, [sp, #72]
  409b9c:	ldr	x1, [sp, #48]
  409ba0:	ldr	x0, [sp, #56]
  409ba4:	bl	408f88 <ferror@plt+0x5f88>
  409ba8:	ldr	x0, [sp, #72]
  409bac:	ldp	x29, x30, [sp], #80
  409bb0:	ret
  409bb4:	stp	x29, x30, [sp, #-80]!
  409bb8:	mov	x29, sp
  409bbc:	str	x0, [sp, #40]
  409bc0:	str	x1, [sp, #32]
  409bc4:	str	x2, [sp, #24]
  409bc8:	ldr	x0, [sp, #32]
  409bcc:	lsr	x0, x0, #1
  409bd0:	str	x0, [sp, #72]
  409bd4:	ldr	x1, [sp, #32]
  409bd8:	ldr	x0, [sp, #72]
  409bdc:	sub	x0, x1, x0
  409be0:	str	x0, [sp, #64]
  409be4:	ldr	x0, [sp, #72]
  409be8:	lsl	x0, x0, #5
  409bec:	neg	x0, x0
  409bf0:	ldr	x1, [sp, #40]
  409bf4:	add	x0, x1, x0
  409bf8:	str	x0, [sp, #56]
  409bfc:	ldr	x0, [sp, #24]
  409c00:	sub	x2, x0, #0x20
  409c04:	ldr	x0, [sp, #56]
  409c08:	sub	x0, x0, #0x20
  409c0c:	mov	x1, x0
  409c10:	mov	x0, x2
  409c14:	bl	408818 <ferror@plt+0x5818>
  409c18:	cmp	w0, #0x0
  409c1c:	b.gt	409c74 <ferror@plt+0x6c74>
  409c20:	ldr	x0, [sp, #24]
  409c24:	sub	x0, x0, #0x20
  409c28:	str	x0, [sp, #24]
  409c2c:	ldr	x0, [sp, #40]
  409c30:	sub	x0, x0, #0x20
  409c34:	str	x0, [sp, #40]
  409c38:	ldr	x1, [sp, #40]
  409c3c:	ldr	x0, [sp, #24]
  409c40:	mov	x2, x1
  409c44:	mov	x3, x0
  409c48:	ldp	x0, x1, [x3]
  409c4c:	stp	x0, x1, [x2]
  409c50:	ldp	x0, x1, [x3, #16]
  409c54:	stp	x0, x1, [x2, #16]
  409c58:	ldr	x0, [sp, #72]
  409c5c:	sub	x0, x0, #0x1
  409c60:	str	x0, [sp, #72]
  409c64:	ldr	x0, [sp, #72]
  409c68:	cmp	x0, #0x0
  409c6c:	b.ne	409bfc <ferror@plt+0x6bfc>  // b.any
  409c70:	b	409d14 <ferror@plt+0x6d14>
  409c74:	ldr	x0, [sp, #56]
  409c78:	sub	x0, x0, #0x20
  409c7c:	str	x0, [sp, #56]
  409c80:	ldr	x0, [sp, #40]
  409c84:	sub	x0, x0, #0x20
  409c88:	str	x0, [sp, #40]
  409c8c:	ldr	x1, [sp, #40]
  409c90:	ldr	x0, [sp, #56]
  409c94:	mov	x2, x1
  409c98:	mov	x3, x0
  409c9c:	ldp	x0, x1, [x3]
  409ca0:	stp	x0, x1, [x2]
  409ca4:	ldp	x0, x1, [x3, #16]
  409ca8:	stp	x0, x1, [x2, #16]
  409cac:	ldr	x0, [sp, #64]
  409cb0:	sub	x0, x0, #0x1
  409cb4:	str	x0, [sp, #64]
  409cb8:	ldr	x0, [sp, #64]
  409cbc:	cmp	x0, #0x0
  409cc0:	b.ne	409bfc <ferror@plt+0x6bfc>  // b.any
  409cc4:	ldr	x0, [sp, #24]
  409cc8:	sub	x0, x0, #0x20
  409ccc:	str	x0, [sp, #24]
  409cd0:	ldr	x0, [sp, #40]
  409cd4:	sub	x0, x0, #0x20
  409cd8:	str	x0, [sp, #40]
  409cdc:	ldr	x1, [sp, #40]
  409ce0:	ldr	x0, [sp, #24]
  409ce4:	mov	x2, x1
  409ce8:	mov	x3, x0
  409cec:	ldp	x0, x1, [x3]
  409cf0:	stp	x0, x1, [x2]
  409cf4:	ldp	x0, x1, [x3, #16]
  409cf8:	stp	x0, x1, [x2, #16]
  409cfc:	ldr	x0, [sp, #72]
  409d00:	sub	x0, x0, #0x1
  409d04:	str	x0, [sp, #72]
  409d08:	ldr	x0, [sp, #72]
  409d0c:	cmp	x0, #0x0
  409d10:	b.ne	409cc4 <ferror@plt+0x6cc4>  // b.any
  409d14:	ldp	x29, x30, [sp], #80
  409d18:	ret
  409d1c:	stp	x29, x30, [sp, #-112]!
  409d20:	mov	x29, sp
  409d24:	str	x0, [sp, #40]
  409d28:	str	x1, [sp, #32]
  409d2c:	str	x2, [sp, #24]
  409d30:	strb	w3, [sp, #23]
  409d34:	ldr	x0, [sp, #32]
  409d38:	cmp	x0, #0x2
  409d3c:	b.ne	409e74 <ferror@plt+0x6e74>  // b.any
  409d40:	ldr	x0, [sp, #40]
  409d44:	sub	x2, x0, #0x20
  409d48:	ldr	x0, [sp, #40]
  409d4c:	sub	x0, x0, #0x40
  409d50:	mov	x1, x0
  409d54:	mov	x0, x2
  409d58:	bl	408818 <ferror@plt+0x5818>
  409d5c:	cmp	w0, #0x0
  409d60:	cset	w0, gt
  409d64:	and	w0, w0, #0xff
  409d68:	str	w0, [sp, #60]
  409d6c:	ldrb	w0, [sp, #23]
  409d70:	cmp	w0, #0x0
  409d74:	b.eq	409dec <ferror@plt+0x6dec>  // b.none
  409d78:	ldr	w0, [sp, #60]
  409d7c:	mvn	w0, w0
  409d80:	sxtw	x0, w0
  409d84:	lsl	x0, x0, #5
  409d88:	ldr	x1, [sp, #40]
  409d8c:	add	x1, x1, x0
  409d90:	ldr	x0, [sp, #24]
  409d94:	sub	x0, x0, #0x20
  409d98:	mov	x2, x0
  409d9c:	mov	x3, x1
  409da0:	ldp	x0, x1, [x3]
  409da4:	stp	x0, x1, [x2]
  409da8:	ldp	x0, x1, [x3, #16]
  409dac:	stp	x0, x1, [x2, #16]
  409db0:	ldr	w0, [sp, #60]
  409db4:	sub	w0, w0, #0x2
  409db8:	sxtw	x0, w0
  409dbc:	lsl	x0, x0, #5
  409dc0:	ldr	x1, [sp, #40]
  409dc4:	add	x1, x1, x0
  409dc8:	ldr	x0, [sp, #24]
  409dcc:	sub	x0, x0, #0x40
  409dd0:	mov	x2, x0
  409dd4:	mov	x3, x1
  409dd8:	ldp	x0, x1, [x3]
  409ddc:	stp	x0, x1, [x2]
  409de0:	ldp	x0, x1, [x3, #16]
  409de4:	stp	x0, x1, [x2, #16]
  409de8:	b	409fac <ferror@plt+0x6fac>
  409dec:	ldr	w0, [sp, #60]
  409df0:	cmp	w0, #0x0
  409df4:	b.eq	409fac <ferror@plt+0x6fac>  // b.none
  409df8:	ldr	x0, [sp, #24]
  409dfc:	sub	x1, x0, #0x20
  409e00:	ldr	x0, [sp, #40]
  409e04:	sub	x0, x0, #0x20
  409e08:	mov	x2, x1
  409e0c:	mov	x3, x0
  409e10:	ldp	x0, x1, [x3]
  409e14:	stp	x0, x1, [x2]
  409e18:	ldp	x0, x1, [x3, #16]
  409e1c:	stp	x0, x1, [x2, #16]
  409e20:	ldr	x0, [sp, #40]
  409e24:	sub	x1, x0, #0x20
  409e28:	ldr	x0, [sp, #40]
  409e2c:	sub	x0, x0, #0x40
  409e30:	mov	x2, x1
  409e34:	mov	x3, x0
  409e38:	ldp	x0, x1, [x3]
  409e3c:	stp	x0, x1, [x2]
  409e40:	ldp	x0, x1, [x3, #16]
  409e44:	stp	x0, x1, [x2, #16]
  409e48:	ldr	x0, [sp, #40]
  409e4c:	sub	x1, x0, #0x40
  409e50:	ldr	x0, [sp, #24]
  409e54:	sub	x0, x0, #0x20
  409e58:	mov	x2, x1
  409e5c:	mov	x3, x0
  409e60:	ldp	x0, x1, [x3]
  409e64:	stp	x0, x1, [x2]
  409e68:	ldp	x0, x1, [x3, #16]
  409e6c:	stp	x0, x1, [x2, #16]
  409e70:	b	409fac <ferror@plt+0x6fac>
  409e74:	ldr	x0, [sp, #32]
  409e78:	lsr	x0, x0, #1
  409e7c:	str	x0, [sp, #88]
  409e80:	ldr	x1, [sp, #32]
  409e84:	ldr	x0, [sp, #88]
  409e88:	sub	x0, x1, x0
  409e8c:	str	x0, [sp, #80]
  409e90:	ldr	x0, [sp, #40]
  409e94:	str	x0, [sp, #72]
  409e98:	ldr	x0, [sp, #88]
  409e9c:	lsl	x0, x0, #5
  409ea0:	neg	x0, x0
  409ea4:	ldr	x1, [sp, #40]
  409ea8:	add	x0, x1, x0
  409eac:	str	x0, [sp, #64]
  409eb0:	ldrb	w0, [sp, #23]
  409eb4:	cmp	w0, #0x0
  409eb8:	b.eq	409ecc <ferror@plt+0x6ecc>  // b.none
  409ebc:	ldr	x0, [sp, #88]
  409ec0:	lsl	x0, x0, #5
  409ec4:	neg	x0, x0
  409ec8:	b	409ed0 <ferror@plt+0x6ed0>
  409ecc:	mov	x0, #0x0                   	// #0
  409ed0:	ldr	x1, [sp, #24]
  409ed4:	add	x0, x1, x0
  409ed8:	ldrb	w3, [sp, #23]
  409edc:	mov	x2, x0
  409ee0:	ldr	x1, [sp, #80]
  409ee4:	ldr	x0, [sp, #64]
  409ee8:	bl	409d1c <ferror@plt+0x6d1c>
  409eec:	ldr	x0, [sp, #88]
  409ef0:	cmp	x0, #0x1
  409ef4:	b.ls	409f30 <ferror@plt+0x6f30>  // b.plast
  409ef8:	ldrb	w0, [sp, #23]
  409efc:	cmp	w0, #0x0
  409f00:	cset	w0, ne  // ne = any
  409f04:	and	w0, w0, #0xff
  409f08:	eor	w0, w0, #0x1
  409f0c:	and	w0, w0, #0xff
  409f10:	and	w0, w0, #0x1
  409f14:	and	w0, w0, #0xff
  409f18:	mov	w3, w0
  409f1c:	ldr	x2, [sp, #24]
  409f20:	ldr	x1, [sp, #88]
  409f24:	ldr	x0, [sp, #72]
  409f28:	bl	409d1c <ferror@plt+0x6d1c>
  409f2c:	b	409f6c <ferror@plt+0x6f6c>
  409f30:	ldrb	w0, [sp, #23]
  409f34:	eor	w0, w0, #0x1
  409f38:	and	w0, w0, #0xff
  409f3c:	cmp	w0, #0x0
  409f40:	b.eq	409f6c <ferror@plt+0x6f6c>  // b.none
  409f44:	ldr	x0, [sp, #24]
  409f48:	sub	x1, x0, #0x20
  409f4c:	ldr	x0, [sp, #72]
  409f50:	sub	x0, x0, #0x20
  409f54:	mov	x2, x1
  409f58:	mov	x3, x0
  409f5c:	ldp	x0, x1, [x3]
  409f60:	stp	x0, x1, [x2]
  409f64:	ldp	x0, x1, [x3, #16]
  409f68:	stp	x0, x1, [x2, #16]
  409f6c:	ldrb	w0, [sp, #23]
  409f70:	cmp	w0, #0x0
  409f74:	b.eq	409f8c <ferror@plt+0x6f8c>  // b.none
  409f78:	ldr	x0, [sp, #24]
  409f7c:	str	x0, [sp, #104]
  409f80:	ldr	x0, [sp, #40]
  409f84:	str	x0, [sp, #96]
  409f88:	b	409f9c <ferror@plt+0x6f9c>
  409f8c:	ldr	x0, [sp, #40]
  409f90:	str	x0, [sp, #104]
  409f94:	ldr	x0, [sp, #24]
  409f98:	str	x0, [sp, #96]
  409f9c:	ldr	x2, [sp, #96]
  409fa0:	ldr	x1, [sp, #32]
  409fa4:	ldr	x0, [sp, #104]
  409fa8:	bl	409bb4 <ferror@plt+0x6bb4>
  409fac:	nop
  409fb0:	ldp	x29, x30, [sp], #112
  409fb4:	ret
  409fb8:	stp	x29, x30, [sp, #-64]!
  409fbc:	mov	x29, sp
  409fc0:	str	x0, [sp, #40]
  409fc4:	str	x1, [sp, #32]
  409fc8:	str	x2, [sp, #24]
  409fcc:	ldr	x1, [sp, #40]
  409fd0:	mov	x0, x1
  409fd4:	lsl	x0, x0, #4
  409fd8:	add	x0, x0, x1
  409fdc:	lsl	x0, x0, #4
  409fe0:	bl	4183dc <ferror@plt+0x153dc>
  409fe4:	str	x0, [sp, #56]
  409fe8:	ldr	x0, [sp, #56]
  409fec:	str	x0, [sp, #48]
  409ff0:	ldr	x0, [sp, #48]
  409ff4:	str	xzr, [x0, #24]
  409ff8:	ldr	x0, [sp, #48]
  409ffc:	ldr	x1, [x0, #24]
  40a000:	ldr	x0, [sp, #48]
  40a004:	str	x1, [x0, #16]
  40a008:	ldr	x0, [sp, #48]
  40a00c:	ldr	x1, [x0, #16]
  40a010:	ldr	x0, [sp, #48]
  40a014:	str	x1, [x0, #8]
  40a018:	ldr	x0, [sp, #48]
  40a01c:	ldr	x1, [x0, #8]
  40a020:	ldr	x0, [sp, #48]
  40a024:	str	x1, [x0]
  40a028:	ldr	x0, [sp, #48]
  40a02c:	str	xzr, [x0, #32]
  40a030:	ldr	x0, [sp, #48]
  40a034:	ldr	x1, [sp, #32]
  40a038:	str	x1, [x0, #48]
  40a03c:	ldr	x0, [sp, #48]
  40a040:	ldr	x1, [x0, #48]
  40a044:	ldr	x0, [sp, #48]
  40a048:	str	x1, [x0, #40]
  40a04c:	ldr	x0, [sp, #48]
  40a050:	str	xzr, [x0, #56]
  40a054:	ldr	x0, [sp, #48]
  40a058:	str	wzr, [x0, #80]
  40a05c:	ldr	x0, [sp, #48]
  40a060:	strb	wzr, [x0, #84]
  40a064:	ldr	x0, [sp, #48]
  40a068:	add	x0, x0, #0x58
  40a06c:	mov	x1, #0x0                   	// #0
  40a070:	bl	402b90 <pthread_mutex_init@plt>
  40a074:	ldr	x0, [sp, #48]
  40a078:	add	x0, x0, #0x88
  40a07c:	mov	w5, #0x0                   	// #0
  40a080:	ldr	x4, [sp, #32]
  40a084:	ldr	x3, [sp, #40]
  40a088:	ldr	x2, [sp, #24]
  40a08c:	mov	x1, x0
  40a090:	ldr	x0, [sp, #48]
  40a094:	bl	40a10c <ferror@plt+0x710c>
  40a098:	ldr	x0, [sp, #56]
  40a09c:	ldp	x29, x30, [sp], #64
  40a0a0:	ret
  40a0a4:	stp	x29, x30, [sp, #-48]!
  40a0a8:	mov	x29, sp
  40a0ac:	str	x0, [sp, #24]
  40a0b0:	str	x1, [sp, #16]
  40a0b4:	ldr	x0, [sp, #24]
  40a0b8:	lsl	x0, x0, #1
  40a0bc:	str	x0, [sp, #40]
  40a0c0:	ldr	x0, [sp, #16]
  40a0c4:	str	x0, [sp, #32]
  40a0c8:	b	40a0e4 <ferror@plt+0x70e4>
  40a0cc:	ldr	x0, [sp, #32]
  40a0d0:	add	x0, x0, #0x58
  40a0d4:	bl	402df0 <pthread_mutex_destroy@plt>
  40a0d8:	ldr	x0, [sp, #32]
  40a0dc:	add	x0, x0, #0x88
  40a0e0:	str	x0, [sp, #32]
  40a0e4:	ldr	x0, [sp, #40]
  40a0e8:	sub	x1, x0, #0x1
  40a0ec:	str	x1, [sp, #40]
  40a0f0:	cmp	x0, #0x0
  40a0f4:	b.ne	40a0cc <ferror@plt+0x70cc>  // b.any
  40a0f8:	ldr	x0, [sp, #16]
  40a0fc:	bl	402d20 <free@plt>
  40a100:	nop
  40a104:	ldp	x29, x30, [sp], #48
  40a108:	ret
  40a10c:	stp	x29, x30, [sp, #-144]!
  40a110:	mov	x29, sp
  40a114:	str	x0, [sp, #56]
  40a118:	str	x1, [sp, #48]
  40a11c:	str	x2, [sp, #40]
  40a120:	str	x3, [sp, #32]
  40a124:	str	x4, [sp, #24]
  40a128:	strb	w5, [sp, #23]
  40a12c:	ldrb	w0, [sp, #23]
  40a130:	cmp	w0, #0x0
  40a134:	b.eq	40a144 <ferror@plt+0x7144>  // b.none
  40a138:	ldr	x0, [sp, #56]
  40a13c:	ldr	x0, [x0, #40]
  40a140:	b	40a14c <ferror@plt+0x714c>
  40a144:	ldr	x0, [sp, #56]
  40a148:	ldr	x0, [x0, #48]
  40a14c:	str	x0, [sp, #136]
  40a150:	ldr	x0, [sp, #136]
  40a154:	lsr	x0, x0, #1
  40a158:	str	x0, [sp, #128]
  40a15c:	ldr	x1, [sp, #136]
  40a160:	ldr	x0, [sp, #128]
  40a164:	sub	x0, x1, x0
  40a168:	str	x0, [sp, #120]
  40a16c:	ldr	x0, [sp, #24]
  40a170:	lsl	x0, x0, #5
  40a174:	neg	x0, x0
  40a178:	ldr	x1, [sp, #40]
  40a17c:	add	x0, x1, x0
  40a180:	str	x0, [sp, #112]
  40a184:	ldr	x0, [sp, #128]
  40a188:	lsl	x0, x0, #5
  40a18c:	neg	x0, x0
  40a190:	ldr	x1, [sp, #112]
  40a194:	add	x0, x1, x0
  40a198:	str	x0, [sp, #104]
  40a19c:	ldrb	w0, [sp, #23]
  40a1a0:	cmp	w0, #0x0
  40a1a4:	b.eq	40a1b4 <ferror@plt+0x71b4>  // b.none
  40a1a8:	ldr	x0, [sp, #56]
  40a1ac:	add	x0, x0, #0x10
  40a1b0:	b	40a1bc <ferror@plt+0x71bc>
  40a1b4:	ldr	x0, [sp, #56]
  40a1b8:	add	x0, x0, #0x18
  40a1bc:	str	x0, [sp, #96]
  40a1c0:	ldr	x0, [sp, #48]
  40a1c4:	add	x1, x0, #0x88
  40a1c8:	str	x1, [sp, #48]
  40a1cc:	str	x0, [sp, #88]
  40a1d0:	ldr	x0, [sp, #88]
  40a1d4:	ldr	x1, [sp, #112]
  40a1d8:	str	x1, [x0, #16]
  40a1dc:	ldr	x0, [sp, #88]
  40a1e0:	ldr	x1, [x0, #16]
  40a1e4:	ldr	x0, [sp, #88]
  40a1e8:	str	x1, [x0]
  40a1ec:	ldr	x0, [sp, #88]
  40a1f0:	ldr	x1, [sp, #104]
  40a1f4:	str	x1, [x0, #24]
  40a1f8:	ldr	x0, [sp, #88]
  40a1fc:	ldr	x1, [x0, #24]
  40a200:	ldr	x0, [sp, #88]
  40a204:	str	x1, [x0, #8]
  40a208:	ldr	x0, [sp, #88]
  40a20c:	ldr	x1, [sp, #96]
  40a210:	str	x1, [x0, #32]
  40a214:	ldr	x0, [sp, #88]
  40a218:	ldr	x1, [sp, #128]
  40a21c:	str	x1, [x0, #40]
  40a220:	ldr	x0, [sp, #88]
  40a224:	ldr	x1, [sp, #120]
  40a228:	str	x1, [x0, #48]
  40a22c:	ldr	x0, [sp, #88]
  40a230:	ldr	x1, [sp, #56]
  40a234:	str	x1, [x0, #56]
  40a238:	ldr	x0, [sp, #56]
  40a23c:	ldr	w0, [x0, #80]
  40a240:	add	w1, w0, #0x1
  40a244:	ldr	x0, [sp, #88]
  40a248:	str	w1, [x0, #80]
  40a24c:	ldr	x0, [sp, #88]
  40a250:	strb	wzr, [x0, #84]
  40a254:	ldr	x0, [sp, #88]
  40a258:	add	x0, x0, #0x58
  40a25c:	mov	x1, #0x0                   	// #0
  40a260:	bl	402b90 <pthread_mutex_init@plt>
  40a264:	ldr	x0, [sp, #32]
  40a268:	cmp	x0, #0x1
  40a26c:	b.ls	40a2e8 <ferror@plt+0x72e8>  // b.plast
  40a270:	ldr	x0, [sp, #32]
  40a274:	lsr	x0, x0, #1
  40a278:	str	x0, [sp, #80]
  40a27c:	ldr	x1, [sp, #32]
  40a280:	ldr	x0, [sp, #80]
  40a284:	sub	x0, x1, x0
  40a288:	str	x0, [sp, #72]
  40a28c:	ldr	x0, [sp, #88]
  40a290:	ldr	x1, [sp, #48]
  40a294:	str	x1, [x0, #64]
  40a298:	mov	w5, #0x1                   	// #1
  40a29c:	ldr	x4, [sp, #24]
  40a2a0:	ldr	x3, [sp, #80]
  40a2a4:	ldr	x2, [sp, #112]
  40a2a8:	ldr	x1, [sp, #48]
  40a2ac:	ldr	x0, [sp, #88]
  40a2b0:	bl	40a10c <ferror@plt+0x710c>
  40a2b4:	str	x0, [sp, #48]
  40a2b8:	ldr	x0, [sp, #88]
  40a2bc:	ldr	x1, [sp, #48]
  40a2c0:	str	x1, [x0, #72]
  40a2c4:	mov	w5, #0x0                   	// #0
  40a2c8:	ldr	x4, [sp, #24]
  40a2cc:	ldr	x3, [sp, #72]
  40a2d0:	ldr	x2, [sp, #104]
  40a2d4:	ldr	x1, [sp, #48]
  40a2d8:	ldr	x0, [sp, #88]
  40a2dc:	bl	40a10c <ferror@plt+0x710c>
  40a2e0:	str	x0, [sp, #48]
  40a2e4:	b	40a2f8 <ferror@plt+0x72f8>
  40a2e8:	ldr	x0, [sp, #88]
  40a2ec:	str	xzr, [x0, #64]
  40a2f0:	ldr	x0, [sp, #88]
  40a2f4:	str	xzr, [x0, #72]
  40a2f8:	ldr	x0, [sp, #48]
  40a2fc:	ldp	x29, x30, [sp], #144
  40a300:	ret
  40a304:	sub	sp, sp, #0x20
  40a308:	str	x0, [sp, #8]
  40a30c:	str	x1, [sp]
  40a310:	ldr	x0, [sp, #8]
  40a314:	str	x0, [sp, #24]
  40a318:	ldr	x0, [sp]
  40a31c:	str	x0, [sp, #16]
  40a320:	ldr	x0, [sp, #24]
  40a324:	ldr	w1, [x0, #80]
  40a328:	ldr	x0, [sp, #16]
  40a32c:	ldr	w0, [x0, #80]
  40a330:	cmp	w1, w0
  40a334:	b.ne	40a370 <ferror@plt+0x7370>  // b.any
  40a338:	ldr	x0, [sp, #24]
  40a33c:	ldr	x1, [x0, #40]
  40a340:	ldr	x0, [sp, #24]
  40a344:	ldr	x0, [x0, #48]
  40a348:	add	x1, x1, x0
  40a34c:	ldr	x0, [sp, #16]
  40a350:	ldr	x2, [x0, #40]
  40a354:	ldr	x0, [sp, #16]
  40a358:	ldr	x0, [x0, #48]
  40a35c:	add	x0, x2, x0
  40a360:	cmp	x1, x0
  40a364:	cset	w0, cc  // cc = lo, ul, last
  40a368:	and	w0, w0, #0xff
  40a36c:	b	40a38c <ferror@plt+0x738c>
  40a370:	ldr	x0, [sp, #24]
  40a374:	ldr	w1, [x0, #80]
  40a378:	ldr	x0, [sp, #16]
  40a37c:	ldr	w0, [x0, #80]
  40a380:	cmp	w1, w0
  40a384:	cset	w0, cc  // cc = lo, ul, last
  40a388:	and	w0, w0, #0xff
  40a38c:	add	sp, sp, #0x20
  40a390:	ret
  40a394:	stp	x29, x30, [sp, #-32]!
  40a398:	mov	x29, sp
  40a39c:	str	x0, [sp, #24]
  40a3a0:	ldr	x0, [sp, #24]
  40a3a4:	add	x0, x0, #0x58
  40a3a8:	bl	402f90 <pthread_mutex_lock@plt>
  40a3ac:	nop
  40a3b0:	ldp	x29, x30, [sp], #32
  40a3b4:	ret
  40a3b8:	stp	x29, x30, [sp, #-32]!
  40a3bc:	mov	x29, sp
  40a3c0:	str	x0, [sp, #24]
  40a3c4:	ldr	x0, [sp, #24]
  40a3c8:	add	x0, x0, #0x58
  40a3cc:	bl	402fa0 <pthread_mutex_unlock@plt>
  40a3d0:	nop
  40a3d4:	ldp	x29, x30, [sp], #32
  40a3d8:	ret
  40a3dc:	stp	x29, x30, [sp, #-32]!
  40a3e0:	mov	x29, sp
  40a3e4:	str	x0, [sp, #24]
  40a3e8:	ldr	x0, [sp, #24]
  40a3ec:	ldr	x0, [x0]
  40a3f0:	bl	411f80 <ferror@plt+0xef80>
  40a3f4:	ldr	x0, [sp, #24]
  40a3f8:	add	x0, x0, #0x38
  40a3fc:	bl	402f10 <pthread_cond_destroy@plt>
  40a400:	ldr	x0, [sp, #24]
  40a404:	add	x0, x0, #0x8
  40a408:	bl	402df0 <pthread_mutex_destroy@plt>
  40a40c:	nop
  40a410:	ldp	x29, x30, [sp], #32
  40a414:	ret
  40a418:	stp	x29, x30, [sp, #-32]!
  40a41c:	mov	x29, sp
  40a420:	str	x0, [sp, #24]
  40a424:	str	x1, [sp, #16]
  40a428:	ldr	x0, [sp, #16]
  40a42c:	lsl	x0, x0, #1
  40a430:	mov	x1, x0
  40a434:	adrp	x0, 40a000 <ferror@plt+0x7000>
  40a438:	add	x0, x0, #0x304
  40a43c:	bl	411ed0 <ferror@plt+0xeed0>
  40a440:	mov	x1, x0
  40a444:	ldr	x0, [sp, #24]
  40a448:	str	x1, [x0]
  40a44c:	ldr	x0, [sp, #24]
  40a450:	add	x0, x0, #0x8
  40a454:	mov	x1, #0x0                   	// #0
  40a458:	bl	402b90 <pthread_mutex_init@plt>
  40a45c:	ldr	x0, [sp, #24]
  40a460:	add	x0, x0, #0x38
  40a464:	mov	x1, #0x0                   	// #0
  40a468:	bl	402e10 <pthread_cond_init@plt>
  40a46c:	nop
  40a470:	ldp	x29, x30, [sp], #32
  40a474:	ret
  40a478:	stp	x29, x30, [sp, #-32]!
  40a47c:	mov	x29, sp
  40a480:	str	x0, [sp, #24]
  40a484:	str	x1, [sp, #16]
  40a488:	ldr	x0, [sp, #24]
  40a48c:	add	x0, x0, #0x8
  40a490:	bl	402f90 <pthread_mutex_lock@plt>
  40a494:	ldr	x0, [sp, #24]
  40a498:	ldr	x0, [x0]
  40a49c:	ldr	x1, [sp, #16]
  40a4a0:	bl	411fac <ferror@plt+0xefac>
  40a4a4:	ldr	x0, [sp, #16]
  40a4a8:	mov	w1, #0x1                   	// #1
  40a4ac:	strb	w1, [x0, #84]
  40a4b0:	ldr	x0, [sp, #24]
  40a4b4:	add	x0, x0, #0x38
  40a4b8:	bl	402ae0 <pthread_cond_signal@plt>
  40a4bc:	ldr	x0, [sp, #24]
  40a4c0:	add	x0, x0, #0x8
  40a4c4:	bl	402fa0 <pthread_mutex_unlock@plt>
  40a4c8:	nop
  40a4cc:	ldp	x29, x30, [sp], #32
  40a4d0:	ret
  40a4d4:	stp	x29, x30, [sp, #-48]!
  40a4d8:	mov	x29, sp
  40a4dc:	str	x0, [sp, #24]
  40a4e0:	ldr	x0, [sp, #24]
  40a4e4:	add	x0, x0, #0x8
  40a4e8:	bl	402f90 <pthread_mutex_lock@plt>
  40a4ec:	b	40a50c <ferror@plt+0x750c>
  40a4f0:	ldr	x0, [sp, #24]
  40a4f4:	add	x2, x0, #0x38
  40a4f8:	ldr	x0, [sp, #24]
  40a4fc:	add	x0, x0, #0x8
  40a500:	mov	x1, x0
  40a504:	mov	x0, x2
  40a508:	bl	402d50 <pthread_cond_wait@plt>
  40a50c:	ldr	x0, [sp, #24]
  40a510:	ldr	x0, [x0]
  40a514:	bl	412068 <ferror@plt+0xf068>
  40a518:	str	x0, [sp, #40]
  40a51c:	ldr	x0, [sp, #40]
  40a520:	cmp	x0, #0x0
  40a524:	b.eq	40a4f0 <ferror@plt+0x74f0>  // b.none
  40a528:	ldr	x0, [sp, #24]
  40a52c:	add	x0, x0, #0x8
  40a530:	bl	402fa0 <pthread_mutex_unlock@plt>
  40a534:	ldr	x0, [sp, #40]
  40a538:	bl	40a394 <ferror@plt+0x7394>
  40a53c:	ldr	x0, [sp, #40]
  40a540:	strb	wzr, [x0, #84]
  40a544:	ldr	x0, [sp, #40]
  40a548:	ldp	x29, x30, [sp], #48
  40a54c:	ret
  40a550:	stp	x29, x30, [sp, #-48]!
  40a554:	mov	x29, sp
  40a558:	str	x0, [sp, #40]
  40a55c:	str	x1, [sp, #32]
  40a560:	str	x2, [sp, #24]
  40a564:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40a568:	add	x0, x0, #0x9e2
  40a56c:	ldrb	w0, [x0]
  40a570:	cmp	w0, #0x0
  40a574:	b.eq	40a5c8 <ferror@plt+0x75c8>  // b.none
  40a578:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40a57c:	add	x0, x0, #0x5a0
  40a580:	ldr	x0, [x0]
  40a584:	cmp	x0, #0x0
  40a588:	b.eq	40a5a4 <ferror@plt+0x75a4>  // b.none
  40a58c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40a590:	add	x1, x0, #0x5a0
  40a594:	ldr	x0, [sp, #40]
  40a598:	bl	408818 <ferror@plt+0x5818>
  40a59c:	cmp	w0, #0x0
  40a5a0:	b.eq	40a5dc <ferror@plt+0x75dc>  // b.none
  40a5a4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40a5a8:	add	x1, x0, #0x5a0
  40a5ac:	ldr	x0, [sp, #40]
  40a5b0:	mov	x2, x1
  40a5b4:	mov	x3, x0
  40a5b8:	ldp	x0, x1, [x3]
  40a5bc:	stp	x0, x1, [x2]
  40a5c0:	ldp	x0, x1, [x3, #16]
  40a5c4:	stp	x0, x1, [x2, #16]
  40a5c8:	ldr	x2, [sp, #24]
  40a5cc:	ldr	x1, [sp, #32]
  40a5d0:	ldr	x0, [sp, #40]
  40a5d4:	bl	4089d0 <ferror@plt+0x59d0>
  40a5d8:	b	40a5e0 <ferror@plt+0x75e0>
  40a5dc:	nop
  40a5e0:	ldp	x29, x30, [sp], #48
  40a5e4:	ret
  40a5e8:	stp	x29, x30, [sp, #-96]!
  40a5ec:	mov	x29, sp
  40a5f0:	str	x0, [sp, #40]
  40a5f4:	str	x1, [sp, #32]
  40a5f8:	str	x2, [sp, #24]
  40a5fc:	str	x3, [sp, #16]
  40a600:	ldr	x0, [sp, #40]
  40a604:	ldr	x0, [x0]
  40a608:	str	x0, [sp, #72]
  40a60c:	ldr	x0, [sp, #40]
  40a610:	ldr	x0, [x0, #8]
  40a614:	str	x0, [sp, #64]
  40a618:	ldr	x0, [sp, #40]
  40a61c:	ldr	w0, [x0, #80]
  40a620:	add	w0, w0, #0x1
  40a624:	lsl	w0, w0, #1
  40a628:	ldr	x1, [sp, #32]
  40a62c:	lsr	x0, x1, x0
  40a630:	add	x0, x0, #0x1
  40a634:	str	x0, [sp, #88]
  40a638:	ldr	x0, [sp, #40]
  40a63c:	ldr	w0, [x0, #80]
  40a640:	cmp	w0, #0x1
  40a644:	b.ls	40a930 <ferror@plt+0x7930>  // b.plast
  40a648:	ldr	x0, [sp, #40]
  40a64c:	ldr	x0, [x0, #32]
  40a650:	ldr	x0, [x0]
  40a654:	str	x0, [sp, #80]
  40a658:	b	40a714 <ferror@plt+0x7714>
  40a65c:	ldr	x0, [sp, #40]
  40a660:	ldr	x0, [x0]
  40a664:	sub	x2, x0, #0x20
  40a668:	ldr	x0, [sp, #40]
  40a66c:	ldr	x0, [x0, #8]
  40a670:	sub	x0, x0, #0x20
  40a674:	mov	x1, x0
  40a678:	mov	x0, x2
  40a67c:	bl	408818 <ferror@plt+0x5818>
  40a680:	cmp	w0, #0x0
  40a684:	b.gt	40a6d0 <ferror@plt+0x76d0>
  40a688:	ldr	x0, [sp, #40]
  40a68c:	ldr	x0, [x0]
  40a690:	sub	x1, x0, #0x20
  40a694:	ldr	x0, [sp, #40]
  40a698:	str	x1, [x0]
  40a69c:	ldr	x0, [sp, #40]
  40a6a0:	ldr	x1, [x0]
  40a6a4:	ldr	x0, [sp, #80]
  40a6a8:	sub	x0, x0, #0x20
  40a6ac:	str	x0, [sp, #80]
  40a6b0:	ldr	x0, [sp, #80]
  40a6b4:	mov	x2, x0
  40a6b8:	mov	x3, x1
  40a6bc:	ldp	x0, x1, [x3]
  40a6c0:	stp	x0, x1, [x2]
  40a6c4:	ldp	x0, x1, [x3, #16]
  40a6c8:	stp	x0, x1, [x2, #16]
  40a6cc:	b	40a714 <ferror@plt+0x7714>
  40a6d0:	ldr	x0, [sp, #40]
  40a6d4:	ldr	x0, [x0, #8]
  40a6d8:	sub	x1, x0, #0x20
  40a6dc:	ldr	x0, [sp, #40]
  40a6e0:	str	x1, [x0, #8]
  40a6e4:	ldr	x0, [sp, #40]
  40a6e8:	ldr	x1, [x0, #8]
  40a6ec:	ldr	x0, [sp, #80]
  40a6f0:	sub	x0, x0, #0x20
  40a6f4:	str	x0, [sp, #80]
  40a6f8:	ldr	x0, [sp, #80]
  40a6fc:	mov	x2, x0
  40a700:	mov	x3, x1
  40a704:	ldp	x0, x1, [x3]
  40a708:	stp	x0, x1, [x2]
  40a70c:	ldp	x0, x1, [x3, #16]
  40a710:	stp	x0, x1, [x2, #16]
  40a714:	ldr	x0, [sp, #40]
  40a718:	ldr	x1, [x0]
  40a71c:	ldr	x0, [sp, #40]
  40a720:	ldr	x0, [x0, #16]
  40a724:	cmp	x1, x0
  40a728:	b.eq	40a758 <ferror@plt+0x7758>  // b.none
  40a72c:	ldr	x0, [sp, #40]
  40a730:	ldr	x1, [x0, #8]
  40a734:	ldr	x0, [sp, #40]
  40a738:	ldr	x0, [x0, #24]
  40a73c:	cmp	x1, x0
  40a740:	b.eq	40a758 <ferror@plt+0x7758>  // b.none
  40a744:	ldr	x0, [sp, #88]
  40a748:	sub	x1, x0, #0x1
  40a74c:	str	x1, [sp, #88]
  40a750:	cmp	x0, #0x0
  40a754:	b.ne	40a65c <ferror@plt+0x765c>  // b.any
  40a758:	ldr	x0, [sp, #40]
  40a75c:	ldr	x0, [x0]
  40a760:	ldr	x1, [sp, #72]
  40a764:	sub	x0, x1, x0
  40a768:	asr	x0, x0, #5
  40a76c:	str	x0, [sp, #56]
  40a770:	ldr	x0, [sp, #40]
  40a774:	ldr	x0, [x0, #8]
  40a778:	ldr	x1, [sp, #64]
  40a77c:	sub	x0, x1, x0
  40a780:	asr	x0, x0, #5
  40a784:	str	x0, [sp, #48]
  40a788:	ldr	x0, [sp, #40]
  40a78c:	ldr	x0, [x0, #48]
  40a790:	ldr	x1, [sp, #48]
  40a794:	cmp	x1, x0
  40a798:	b.ne	40a814 <ferror@plt+0x7814>  // b.any
  40a79c:	b	40a7e4 <ferror@plt+0x77e4>
  40a7a0:	ldr	x0, [sp, #40]
  40a7a4:	ldr	x0, [x0]
  40a7a8:	sub	x1, x0, #0x20
  40a7ac:	ldr	x0, [sp, #40]
  40a7b0:	str	x1, [x0]
  40a7b4:	ldr	x0, [sp, #40]
  40a7b8:	ldr	x1, [x0]
  40a7bc:	ldr	x0, [sp, #80]
  40a7c0:	sub	x0, x0, #0x20
  40a7c4:	str	x0, [sp, #80]
  40a7c8:	ldr	x0, [sp, #80]
  40a7cc:	mov	x2, x0
  40a7d0:	mov	x3, x1
  40a7d4:	ldp	x0, x1, [x3]
  40a7d8:	stp	x0, x1, [x2]
  40a7dc:	ldp	x0, x1, [x3, #16]
  40a7e0:	stp	x0, x1, [x2, #16]
  40a7e4:	ldr	x0, [sp, #40]
  40a7e8:	ldr	x1, [x0]
  40a7ec:	ldr	x0, [sp, #40]
  40a7f0:	ldr	x0, [x0, #16]
  40a7f4:	cmp	x1, x0
  40a7f8:	b.eq	40a89c <ferror@plt+0x789c>  // b.none
  40a7fc:	ldr	x0, [sp, #88]
  40a800:	sub	x1, x0, #0x1
  40a804:	str	x1, [sp, #88]
  40a808:	cmp	x0, #0x0
  40a80c:	b.ne	40a7a0 <ferror@plt+0x77a0>  // b.any
  40a810:	b	40a89c <ferror@plt+0x789c>
  40a814:	ldr	x0, [sp, #40]
  40a818:	ldr	x0, [x0, #40]
  40a81c:	ldr	x1, [sp, #56]
  40a820:	cmp	x1, x0
  40a824:	b.ne	40a89c <ferror@plt+0x789c>  // b.any
  40a828:	b	40a870 <ferror@plt+0x7870>
  40a82c:	ldr	x0, [sp, #40]
  40a830:	ldr	x0, [x0, #8]
  40a834:	sub	x1, x0, #0x20
  40a838:	ldr	x0, [sp, #40]
  40a83c:	str	x1, [x0, #8]
  40a840:	ldr	x0, [sp, #40]
  40a844:	ldr	x1, [x0, #8]
  40a848:	ldr	x0, [sp, #80]
  40a84c:	sub	x0, x0, #0x20
  40a850:	str	x0, [sp, #80]
  40a854:	ldr	x0, [sp, #80]
  40a858:	mov	x2, x0
  40a85c:	mov	x3, x1
  40a860:	ldp	x0, x1, [x3]
  40a864:	stp	x0, x1, [x2]
  40a868:	ldp	x0, x1, [x3, #16]
  40a86c:	stp	x0, x1, [x2, #16]
  40a870:	ldr	x0, [sp, #40]
  40a874:	ldr	x1, [x0, #8]
  40a878:	ldr	x0, [sp, #40]
  40a87c:	ldr	x0, [x0, #24]
  40a880:	cmp	x1, x0
  40a884:	b.eq	40a89c <ferror@plt+0x789c>  // b.none
  40a888:	ldr	x0, [sp, #88]
  40a88c:	sub	x1, x0, #0x1
  40a890:	str	x1, [sp, #88]
  40a894:	cmp	x0, #0x0
  40a898:	b.ne	40a82c <ferror@plt+0x782c>  // b.any
  40a89c:	ldr	x0, [sp, #40]
  40a8a0:	ldr	x0, [x0, #32]
  40a8a4:	ldr	x1, [sp, #80]
  40a8a8:	str	x1, [x0]
  40a8ac:	b	40aa80 <ferror@plt+0x7a80>
  40a8b0:	ldr	x0, [sp, #40]
  40a8b4:	ldr	x0, [x0]
  40a8b8:	sub	x2, x0, #0x20
  40a8bc:	ldr	x0, [sp, #40]
  40a8c0:	ldr	x0, [x0, #8]
  40a8c4:	sub	x0, x0, #0x20
  40a8c8:	mov	x1, x0
  40a8cc:	mov	x0, x2
  40a8d0:	bl	408818 <ferror@plt+0x5818>
  40a8d4:	cmp	w0, #0x0
  40a8d8:	b.gt	40a908 <ferror@plt+0x7908>
  40a8dc:	ldr	x0, [sp, #40]
  40a8e0:	ldr	x0, [x0]
  40a8e4:	sub	x1, x0, #0x20
  40a8e8:	ldr	x0, [sp, #40]
  40a8ec:	str	x1, [x0]
  40a8f0:	ldr	x0, [sp, #40]
  40a8f4:	ldr	x0, [x0]
  40a8f8:	ldr	x2, [sp, #16]
  40a8fc:	ldr	x1, [sp, #24]
  40a900:	bl	40a550 <ferror@plt+0x7550>
  40a904:	b	40a930 <ferror@plt+0x7930>
  40a908:	ldr	x0, [sp, #40]
  40a90c:	ldr	x0, [x0, #8]
  40a910:	sub	x1, x0, #0x20
  40a914:	ldr	x0, [sp, #40]
  40a918:	str	x1, [x0, #8]
  40a91c:	ldr	x0, [sp, #40]
  40a920:	ldr	x0, [x0, #8]
  40a924:	ldr	x2, [sp, #16]
  40a928:	ldr	x1, [sp, #24]
  40a92c:	bl	40a550 <ferror@plt+0x7550>
  40a930:	ldr	x0, [sp, #40]
  40a934:	ldr	x1, [x0]
  40a938:	ldr	x0, [sp, #40]
  40a93c:	ldr	x0, [x0, #16]
  40a940:	cmp	x1, x0
  40a944:	b.eq	40a974 <ferror@plt+0x7974>  // b.none
  40a948:	ldr	x0, [sp, #40]
  40a94c:	ldr	x1, [x0, #8]
  40a950:	ldr	x0, [sp, #40]
  40a954:	ldr	x0, [x0, #24]
  40a958:	cmp	x1, x0
  40a95c:	b.eq	40a974 <ferror@plt+0x7974>  // b.none
  40a960:	ldr	x0, [sp, #88]
  40a964:	sub	x1, x0, #0x1
  40a968:	str	x1, [sp, #88]
  40a96c:	cmp	x0, #0x0
  40a970:	b.ne	40a8b0 <ferror@plt+0x78b0>  // b.any
  40a974:	ldr	x0, [sp, #40]
  40a978:	ldr	x0, [x0]
  40a97c:	ldr	x1, [sp, #72]
  40a980:	sub	x0, x1, x0
  40a984:	asr	x0, x0, #5
  40a988:	str	x0, [sp, #56]
  40a98c:	ldr	x0, [sp, #40]
  40a990:	ldr	x0, [x0, #8]
  40a994:	ldr	x1, [sp, #64]
  40a998:	sub	x0, x1, x0
  40a99c:	asr	x0, x0, #5
  40a9a0:	str	x0, [sp, #48]
  40a9a4:	ldr	x0, [sp, #40]
  40a9a8:	ldr	x0, [x0, #48]
  40a9ac:	ldr	x1, [sp, #48]
  40a9b0:	cmp	x1, x0
  40a9b4:	b.ne	40aa14 <ferror@plt+0x7a14>  // b.any
  40a9b8:	b	40a9e4 <ferror@plt+0x79e4>
  40a9bc:	ldr	x0, [sp, #40]
  40a9c0:	ldr	x0, [x0]
  40a9c4:	sub	x1, x0, #0x20
  40a9c8:	ldr	x0, [sp, #40]
  40a9cc:	str	x1, [x0]
  40a9d0:	ldr	x0, [sp, #40]
  40a9d4:	ldr	x0, [x0]
  40a9d8:	ldr	x2, [sp, #16]
  40a9dc:	ldr	x1, [sp, #24]
  40a9e0:	bl	40a550 <ferror@plt+0x7550>
  40a9e4:	ldr	x0, [sp, #40]
  40a9e8:	ldr	x1, [x0]
  40a9ec:	ldr	x0, [sp, #40]
  40a9f0:	ldr	x0, [x0, #16]
  40a9f4:	cmp	x1, x0
  40a9f8:	b.eq	40aa80 <ferror@plt+0x7a80>  // b.none
  40a9fc:	ldr	x0, [sp, #88]
  40aa00:	sub	x1, x0, #0x1
  40aa04:	str	x1, [sp, #88]
  40aa08:	cmp	x0, #0x0
  40aa0c:	b.ne	40a9bc <ferror@plt+0x79bc>  // b.any
  40aa10:	b	40aa80 <ferror@plt+0x7a80>
  40aa14:	ldr	x0, [sp, #40]
  40aa18:	ldr	x0, [x0, #40]
  40aa1c:	ldr	x1, [sp, #56]
  40aa20:	cmp	x1, x0
  40aa24:	b.ne	40aa80 <ferror@plt+0x7a80>  // b.any
  40aa28:	b	40aa54 <ferror@plt+0x7a54>
  40aa2c:	ldr	x0, [sp, #40]
  40aa30:	ldr	x0, [x0, #8]
  40aa34:	sub	x1, x0, #0x20
  40aa38:	ldr	x0, [sp, #40]
  40aa3c:	str	x1, [x0, #8]
  40aa40:	ldr	x0, [sp, #40]
  40aa44:	ldr	x0, [x0, #8]
  40aa48:	ldr	x2, [sp, #16]
  40aa4c:	ldr	x1, [sp, #24]
  40aa50:	bl	40a550 <ferror@plt+0x7550>
  40aa54:	ldr	x0, [sp, #40]
  40aa58:	ldr	x1, [x0, #8]
  40aa5c:	ldr	x0, [sp, #40]
  40aa60:	ldr	x0, [x0, #24]
  40aa64:	cmp	x1, x0
  40aa68:	b.eq	40aa80 <ferror@plt+0x7a80>  // b.none
  40aa6c:	ldr	x0, [sp, #88]
  40aa70:	sub	x1, x0, #0x1
  40aa74:	str	x1, [sp, #88]
  40aa78:	cmp	x0, #0x0
  40aa7c:	b.ne	40aa2c <ferror@plt+0x7a2c>  // b.any
  40aa80:	ldr	x0, [sp, #40]
  40aa84:	ldr	x0, [x0]
  40aa88:	ldr	x1, [sp, #72]
  40aa8c:	sub	x0, x1, x0
  40aa90:	asr	x0, x0, #5
  40aa94:	str	x0, [sp, #56]
  40aa98:	ldr	x0, [sp, #40]
  40aa9c:	ldr	x0, [x0, #8]
  40aaa0:	ldr	x1, [sp, #64]
  40aaa4:	sub	x0, x1, x0
  40aaa8:	asr	x0, x0, #5
  40aaac:	str	x0, [sp, #48]
  40aab0:	ldr	x0, [sp, #40]
  40aab4:	ldr	x1, [x0, #40]
  40aab8:	ldr	x0, [sp, #56]
  40aabc:	sub	x1, x1, x0
  40aac0:	ldr	x0, [sp, #40]
  40aac4:	str	x1, [x0, #40]
  40aac8:	ldr	x0, [sp, #40]
  40aacc:	ldr	x1, [x0, #48]
  40aad0:	ldr	x0, [sp, #48]
  40aad4:	sub	x1, x1, x0
  40aad8:	ldr	x0, [sp, #40]
  40aadc:	str	x1, [x0, #48]
  40aae0:	nop
  40aae4:	ldp	x29, x30, [sp], #96
  40aae8:	ret
  40aaec:	stp	x29, x30, [sp, #-48]!
  40aaf0:	mov	x29, sp
  40aaf4:	str	x0, [sp, #24]
  40aaf8:	str	x1, [sp, #16]
  40aafc:	ldr	x0, [sp, #16]
  40ab00:	ldrb	w0, [x0, #84]
  40ab04:	eor	w0, w0, #0x1
  40ab08:	and	w0, w0, #0xff
  40ab0c:	cmp	w0, #0x0
  40ab10:	b.eq	40abd0 <ferror@plt+0x7bd0>  // b.none
  40ab14:	ldr	x0, [sp, #16]
  40ab18:	ldr	x1, [x0]
  40ab1c:	ldr	x0, [sp, #16]
  40ab20:	ldr	x0, [x0, #16]
  40ab24:	cmp	x1, x0
  40ab28:	cset	w0, ne  // ne = any
  40ab2c:	strb	w0, [sp, #47]
  40ab30:	ldr	x0, [sp, #16]
  40ab34:	ldr	x1, [x0, #8]
  40ab38:	ldr	x0, [sp, #16]
  40ab3c:	ldr	x0, [x0, #24]
  40ab40:	cmp	x1, x0
  40ab44:	cset	w0, ne  // ne = any
  40ab48:	strb	w0, [sp, #46]
  40ab4c:	ldrb	w0, [sp, #47]
  40ab50:	cmp	w0, #0x0
  40ab54:	b.eq	40ab8c <ferror@plt+0x7b8c>  // b.none
  40ab58:	ldrb	w0, [sp, #46]
  40ab5c:	cmp	w0, #0x0
  40ab60:	b.ne	40ab74 <ferror@plt+0x7b74>  // b.any
  40ab64:	ldr	x0, [sp, #16]
  40ab68:	ldr	x0, [x0, #48]
  40ab6c:	cmp	x0, #0x0
  40ab70:	b.ne	40ab7c <ferror@plt+0x7b7c>  // b.any
  40ab74:	mov	w0, #0x1                   	// #1
  40ab78:	b	40ab80 <ferror@plt+0x7b80>
  40ab7c:	mov	w0, #0x0                   	// #0
  40ab80:	and	w0, w0, #0x1
  40ab84:	and	w0, w0, #0xff
  40ab88:	b	40abbc <ferror@plt+0x7bbc>
  40ab8c:	ldrb	w0, [sp, #46]
  40ab90:	cmp	w0, #0x0
  40ab94:	b.eq	40abb0 <ferror@plt+0x7bb0>  // b.none
  40ab98:	ldr	x0, [sp, #16]
  40ab9c:	ldr	x0, [x0, #40]
  40aba0:	cmp	x0, #0x0
  40aba4:	b.ne	40abb0 <ferror@plt+0x7bb0>  // b.any
  40aba8:	mov	w0, #0x1                   	// #1
  40abac:	b	40abb4 <ferror@plt+0x7bb4>
  40abb0:	mov	w0, #0x0                   	// #0
  40abb4:	and	w0, w0, #0x1
  40abb8:	and	w0, w0, #0xff
  40abbc:	cmp	w0, #0x0
  40abc0:	b.eq	40abd0 <ferror@plt+0x7bd0>  // b.none
  40abc4:	ldr	x1, [sp, #16]
  40abc8:	ldr	x0, [sp, #24]
  40abcc:	bl	40a478 <ferror@plt+0x7478>
  40abd0:	nop
  40abd4:	ldp	x29, x30, [sp], #48
  40abd8:	ret
  40abdc:	stp	x29, x30, [sp, #-32]!
  40abe0:	mov	x29, sp
  40abe4:	str	x0, [sp, #24]
  40abe8:	str	x1, [sp, #16]
  40abec:	ldr	x0, [sp, #16]
  40abf0:	ldr	w0, [x0, #80]
  40abf4:	cmp	w0, #0x1
  40abf8:	b.ls	40ac2c <ferror@plt+0x7c2c>  // b.plast
  40abfc:	ldr	x0, [sp, #16]
  40ac00:	ldr	x0, [x0, #56]
  40ac04:	bl	40a394 <ferror@plt+0x7394>
  40ac08:	ldr	x0, [sp, #16]
  40ac0c:	ldr	x0, [x0, #56]
  40ac10:	mov	x1, x0
  40ac14:	ldr	x0, [sp, #24]
  40ac18:	bl	40aaec <ferror@plt+0x7aec>
  40ac1c:	ldr	x0, [sp, #16]
  40ac20:	ldr	x0, [x0, #56]
  40ac24:	bl	40a3b8 <ferror@plt+0x73b8>
  40ac28:	b	40ac5c <ferror@plt+0x7c5c>
  40ac2c:	ldr	x0, [sp, #16]
  40ac30:	ldr	x1, [x0, #40]
  40ac34:	ldr	x0, [sp, #16]
  40ac38:	ldr	x0, [x0, #48]
  40ac3c:	add	x0, x1, x0
  40ac40:	cmp	x0, #0x0
  40ac44:	b.ne	40ac5c <ferror@plt+0x7c5c>  // b.any
  40ac48:	ldr	x0, [sp, #16]
  40ac4c:	ldr	x0, [x0, #56]
  40ac50:	mov	x1, x0
  40ac54:	ldr	x0, [sp, #24]
  40ac58:	bl	40a478 <ferror@plt+0x7478>
  40ac5c:	nop
  40ac60:	ldp	x29, x30, [sp], #32
  40ac64:	ret
  40ac68:	stp	x29, x30, [sp, #-64]!
  40ac6c:	mov	x29, sp
  40ac70:	str	x0, [sp, #40]
  40ac74:	str	x1, [sp, #32]
  40ac78:	str	x2, [sp, #24]
  40ac7c:	str	x3, [sp, #16]
  40ac80:	ldr	x0, [sp, #40]
  40ac84:	bl	40a4d4 <ferror@plt+0x74d4>
  40ac88:	str	x0, [sp, #56]
  40ac8c:	ldr	x0, [sp, #56]
  40ac90:	ldr	w0, [x0, #80]
  40ac94:	cmp	w0, #0x0
  40ac98:	b.ne	40acb4 <ferror@plt+0x7cb4>  // b.any
  40ac9c:	ldr	x0, [sp, #56]
  40aca0:	bl	40a3b8 <ferror@plt+0x73b8>
  40aca4:	ldr	x1, [sp, #56]
  40aca8:	ldr	x0, [sp, #40]
  40acac:	bl	40a478 <ferror@plt+0x7478>
  40acb0:	b	40acec <ferror@plt+0x7cec>
  40acb4:	ldr	x3, [sp, #16]
  40acb8:	ldr	x2, [sp, #24]
  40acbc:	ldr	x1, [sp, #32]
  40acc0:	ldr	x0, [sp, #56]
  40acc4:	bl	40a5e8 <ferror@plt+0x75e8>
  40acc8:	ldr	x1, [sp, #56]
  40accc:	ldr	x0, [sp, #40]
  40acd0:	bl	40aaec <ferror@plt+0x7aec>
  40acd4:	ldr	x1, [sp, #56]
  40acd8:	ldr	x0, [sp, #40]
  40acdc:	bl	40abdc <ferror@plt+0x7bdc>
  40ace0:	ldr	x0, [sp, #56]
  40ace4:	bl	40a3b8 <ferror@plt+0x73b8>
  40ace8:	b	40ac80 <ferror@plt+0x7c80>
  40acec:	nop
  40acf0:	ldp	x29, x30, [sp], #64
  40acf4:	ret
  40acf8:	stp	x29, x30, [sp, #-48]!
  40acfc:	mov	x29, sp
  40ad00:	str	x0, [sp, #24]
  40ad04:	ldr	x0, [sp, #24]
  40ad08:	str	x0, [sp, #40]
  40ad0c:	ldr	x0, [sp, #40]
  40ad10:	ldr	x7, [x0]
  40ad14:	ldr	x0, [sp, #40]
  40ad18:	ldr	x1, [x0, #8]
  40ad1c:	ldr	x0, [sp, #40]
  40ad20:	ldr	x2, [x0, #16]
  40ad24:	ldr	x0, [sp, #40]
  40ad28:	ldr	x3, [x0, #24]
  40ad2c:	ldr	x0, [sp, #40]
  40ad30:	ldr	x4, [x0, #32]
  40ad34:	ldr	x0, [sp, #40]
  40ad38:	ldr	x5, [x0, #40]
  40ad3c:	ldr	x0, [sp, #40]
  40ad40:	ldr	x0, [x0, #48]
  40ad44:	mov	x6, x0
  40ad48:	mov	x0, x7
  40ad4c:	bl	40ad5c <ferror@plt+0x7d5c>
  40ad50:	mov	x0, #0x0                   	// #0
  40ad54:	ldp	x29, x30, [sp], #48
  40ad58:	ret
  40ad5c:	stp	x29, x30, [sp, #-192]!
  40ad60:	mov	x29, sp
  40ad64:	str	x0, [sp, #72]
  40ad68:	str	x1, [sp, #64]
  40ad6c:	str	x2, [sp, #56]
  40ad70:	str	x3, [sp, #48]
  40ad74:	str	x4, [sp, #40]
  40ad78:	str	x5, [sp, #32]
  40ad7c:	str	x6, [sp, #24]
  40ad80:	ldr	x0, [sp, #48]
  40ad84:	ldr	x1, [x0, #40]
  40ad88:	ldr	x0, [sp, #48]
  40ad8c:	ldr	x0, [x0, #48]
  40ad90:	add	x0, x1, x0
  40ad94:	str	x0, [sp, #184]
  40ad98:	ldr	x0, [sp, #64]
  40ad9c:	lsr	x0, x0, #1
  40ada0:	str	x0, [sp, #176]
  40ada4:	ldr	x1, [sp, #64]
  40ada8:	ldr	x0, [sp, #176]
  40adac:	sub	x0, x1, x0
  40adb0:	str	x0, [sp, #168]
  40adb4:	ldr	x0, [sp, #72]
  40adb8:	str	x0, [sp, #80]
  40adbc:	ldr	x0, [sp, #176]
  40adc0:	str	x0, [sp, #88]
  40adc4:	ldr	x0, [sp, #56]
  40adc8:	str	x0, [sp, #96]
  40adcc:	ldr	x0, [sp, #48]
  40add0:	ldr	x0, [x0, #64]
  40add4:	str	x0, [sp, #104]
  40add8:	ldr	x0, [sp, #40]
  40addc:	str	x0, [sp, #112]
  40ade0:	ldr	x0, [sp, #32]
  40ade4:	str	x0, [sp, #120]
  40ade8:	ldr	x0, [sp, #24]
  40adec:	str	x0, [sp, #128]
  40adf0:	ldr	x0, [sp, #64]
  40adf4:	cmp	x0, #0x1
  40adf8:	b.ls	40ae84 <ferror@plt+0x7e84>  // b.plast
  40adfc:	ldr	x1, [sp, #184]
  40ae00:	mov	x0, #0x1ffff               	// #131071
  40ae04:	cmp	x1, x0
  40ae08:	b.ls	40ae84 <ferror@plt+0x7e84>  // b.plast
  40ae0c:	add	x0, sp, #0x50
  40ae10:	add	x4, sp, #0x88
  40ae14:	mov	x3, x0
  40ae18:	adrp	x0, 40a000 <ferror@plt+0x7000>
  40ae1c:	add	x2, x0, #0xcf8
  40ae20:	mov	x1, #0x0                   	// #0
  40ae24:	mov	x0, x4
  40ae28:	bl	402bd0 <pthread_create@plt>
  40ae2c:	cmp	w0, #0x0
  40ae30:	b.ne	40ae84 <ferror@plt+0x7e84>  // b.any
  40ae34:	ldr	x0, [sp, #48]
  40ae38:	ldr	x0, [x0, #40]
  40ae3c:	lsl	x0, x0, #5
  40ae40:	neg	x0, x0
  40ae44:	ldr	x1, [sp, #72]
  40ae48:	add	x7, x1, x0
  40ae4c:	ldr	x0, [sp, #48]
  40ae50:	ldr	x0, [x0, #72]
  40ae54:	ldr	x6, [sp, #24]
  40ae58:	ldr	x5, [sp, #32]
  40ae5c:	ldr	x4, [sp, #40]
  40ae60:	mov	x3, x0
  40ae64:	ldr	x2, [sp, #56]
  40ae68:	ldr	x1, [sp, #168]
  40ae6c:	mov	x0, x7
  40ae70:	bl	40ad5c <ferror@plt+0x7d5c>
  40ae74:	ldr	x0, [sp, #136]
  40ae78:	mov	x1, #0x0                   	// #0
  40ae7c:	bl	402c10 <pthread_join@plt>
  40ae80:	b	40afb0 <ferror@plt+0x7fb0>
  40ae84:	ldr	x0, [sp, #48]
  40ae88:	ldr	x0, [x0, #40]
  40ae8c:	str	x0, [sp, #160]
  40ae90:	ldr	x0, [sp, #48]
  40ae94:	ldr	x0, [x0, #48]
  40ae98:	str	x0, [sp, #152]
  40ae9c:	ldr	x0, [sp, #56]
  40aea0:	lsl	x0, x0, #5
  40aea4:	neg	x0, x0
  40aea8:	ldr	x1, [sp, #72]
  40aeac:	add	x0, x1, x0
  40aeb0:	str	x0, [sp, #144]
  40aeb4:	ldr	x0, [sp, #152]
  40aeb8:	cmp	x0, #0x1
  40aebc:	b.ls	40af00 <ferror@plt+0x7f00>  // b.plast
  40aec0:	ldr	x0, [sp, #160]
  40aec4:	lsl	x0, x0, #5
  40aec8:	neg	x0, x0
  40aecc:	ldr	x1, [sp, #72]
  40aed0:	add	x4, x1, x0
  40aed4:	ldr	x0, [sp, #160]
  40aed8:	lsr	x0, x0, #1
  40aedc:	lsl	x0, x0, #5
  40aee0:	neg	x0, x0
  40aee4:	ldr	x1, [sp, #144]
  40aee8:	add	x0, x1, x0
  40aeec:	mov	w3, #0x0                   	// #0
  40aef0:	mov	x2, x0
  40aef4:	ldr	x1, [sp, #152]
  40aef8:	mov	x0, x4
  40aefc:	bl	409d1c <ferror@plt+0x6d1c>
  40af00:	ldr	x0, [sp, #160]
  40af04:	cmp	x0, #0x1
  40af08:	b.ls	40af20 <ferror@plt+0x7f20>  // b.plast
  40af0c:	mov	w3, #0x0                   	// #0
  40af10:	ldr	x2, [sp, #144]
  40af14:	ldr	x1, [sp, #160]
  40af18:	ldr	x0, [sp, #72]
  40af1c:	bl	409d1c <ferror@plt+0x6d1c>
  40af20:	ldr	x0, [sp, #48]
  40af24:	ldr	x1, [sp, #72]
  40af28:	str	x1, [x0]
  40af2c:	ldr	x0, [sp, #160]
  40af30:	lsl	x0, x0, #5
  40af34:	neg	x0, x0
  40af38:	ldr	x1, [sp, #72]
  40af3c:	add	x1, x1, x0
  40af40:	ldr	x0, [sp, #48]
  40af44:	str	x1, [x0, #8]
  40af48:	ldr	x0, [sp, #160]
  40af4c:	lsl	x0, x0, #5
  40af50:	neg	x0, x0
  40af54:	ldr	x1, [sp, #72]
  40af58:	add	x1, x1, x0
  40af5c:	ldr	x0, [sp, #48]
  40af60:	str	x1, [x0, #16]
  40af64:	ldr	x0, [sp, #160]
  40af68:	lsl	x0, x0, #5
  40af6c:	neg	x1, x0
  40af70:	ldr	x0, [sp, #152]
  40af74:	lsl	x0, x0, #5
  40af78:	sub	x0, x1, x0
  40af7c:	ldr	x1, [sp, #72]
  40af80:	add	x1, x1, x0
  40af84:	ldr	x0, [sp, #48]
  40af88:	str	x1, [x0, #24]
  40af8c:	ldr	x1, [sp, #48]
  40af90:	ldr	x0, [sp, #40]
  40af94:	bl	40a478 <ferror@plt+0x7478>
  40af98:	ldr	x3, [sp, #24]
  40af9c:	ldr	x2, [sp, #32]
  40afa0:	ldr	x1, [sp, #56]
  40afa4:	ldr	x0, [sp, #40]
  40afa8:	bl	40ac68 <ferror@plt+0x7c68>
  40afac:	nop
  40afb0:	nop
  40afb4:	ldp	x29, x30, [sp], #192
  40afb8:	ret
  40afbc:	stp	x29, x30, [sp, #-224]!
  40afc0:	mov	x29, sp
  40afc4:	str	x0, [sp, #40]
  40afc8:	str	x1, [sp, #32]
  40afcc:	str	x2, [sp, #24]
  40afd0:	str	x3, [sp, #16]
  40afd4:	str	xzr, [sp, #216]
  40afd8:	ldr	x0, [sp, #32]
  40afdc:	str	x0, [sp, #208]
  40afe0:	b	40b1b0 <ferror@plt+0x81b0>
  40afe4:	ldr	x0, [sp, #208]
  40afe8:	lsl	x0, x0, #4
  40afec:	ldr	x1, [sp, #40]
  40aff0:	add	x0, x1, x0
  40aff4:	ldr	x2, [x0]
  40aff8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40affc:	add	x1, x0, #0x720
  40b000:	mov	x0, x2
  40b004:	bl	402cd0 <strcmp@plt>
  40b008:	cmp	w0, #0x0
  40b00c:	cset	w0, eq  // eq = none
  40b010:	strb	w0, [sp, #206]
  40b014:	ldr	x0, [sp, #16]
  40b018:	cmp	x0, #0x0
  40b01c:	b.eq	40b068 <ferror@plt+0x8068>  // b.none
  40b020:	ldr	x0, [sp, #208]
  40b024:	lsl	x0, x0, #4
  40b028:	ldr	x1, [sp, #40]
  40b02c:	add	x0, x1, x0
  40b030:	ldr	x0, [x0]
  40b034:	mov	x1, x0
  40b038:	ldr	x0, [sp, #16]
  40b03c:	bl	402cd0 <strcmp@plt>
  40b040:	cmp	w0, #0x0
  40b044:	b.ne	40b068 <ferror@plt+0x8068>  // b.any
  40b048:	ldrb	w0, [sp, #206]
  40b04c:	eor	w0, w0, #0x1
  40b050:	and	w0, w0, #0xff
  40b054:	cmp	w0, #0x0
  40b058:	b.eq	40b068 <ferror@plt+0x8068>  // b.none
  40b05c:	mov	w0, #0x1                   	// #1
  40b060:	strb	w0, [sp, #207]
  40b064:	b	40b10c <ferror@plt+0x810c>
  40b068:	bl	403ff4 <ferror@plt+0xff4>
  40b06c:	str	x0, [sp, #192]
  40b070:	ldr	x0, [sp, #192]
  40b074:	cmp	x0, #0x0
  40b078:	b.eq	40b1a8 <ferror@plt+0x81a8>  // b.none
  40b07c:	ldrb	w0, [sp, #206]
  40b080:	cmp	w0, #0x0
  40b084:	b.eq	40b0a4 <ferror@plt+0x80a4>  // b.none
  40b088:	add	x0, sp, #0x38
  40b08c:	mov	x1, x0
  40b090:	mov	w0, #0x0                   	// #0
  40b094:	bl	41bdc0 <_obstack_memory_used@@Base+0x1924>
  40b098:	cmp	w0, #0x0
  40b09c:	b.eq	40b0c8 <ferror@plt+0x80c8>  // b.none
  40b0a0:	b	40b0f8 <ferror@plt+0x80f8>
  40b0a4:	ldr	x0, [sp, #208]
  40b0a8:	lsl	x0, x0, #4
  40b0ac:	ldr	x1, [sp, #40]
  40b0b0:	add	x0, x1, x0
  40b0b4:	ldr	x0, [x0]
  40b0b8:	add	x1, sp, #0x38
  40b0bc:	bl	41bdb0 <_obstack_memory_used@@Base+0x1914>
  40b0c0:	cmp	w0, #0x0
  40b0c4:	b.ne	40b0f8 <ferror@plt+0x80f8>  // b.any
  40b0c8:	ldr	x1, [sp, #64]
  40b0cc:	ldr	x0, [sp, #192]
  40b0d0:	ldr	x0, [x0, #8]
  40b0d4:	cmp	x1, x0
  40b0d8:	b.ne	40b0f8 <ferror@plt+0x80f8>  // b.any
  40b0dc:	ldr	x1, [sp, #56]
  40b0e0:	ldr	x0, [sp, #192]
  40b0e4:	ldr	x0, [x0]
  40b0e8:	cmp	x1, x0
  40b0ec:	b.ne	40b0f8 <ferror@plt+0x80f8>  // b.any
  40b0f0:	mov	w0, #0x1                   	// #1
  40b0f4:	b	40b0fc <ferror@plt+0x80fc>
  40b0f8:	mov	w0, #0x0                   	// #0
  40b0fc:	strb	w0, [sp, #207]
  40b100:	ldrb	w0, [sp, #207]
  40b104:	and	w0, w0, #0x1
  40b108:	strb	w0, [sp, #207]
  40b10c:	ldrb	w0, [sp, #207]
  40b110:	cmp	w0, #0x0
  40b114:	b.eq	40b198 <ferror@plt+0x8198>  // b.none
  40b118:	ldr	x0, [sp, #216]
  40b11c:	cmp	x0, #0x0
  40b120:	b.ne	40b164 <ferror@plt+0x8164>  // b.any
  40b124:	add	x0, sp, #0xb8
  40b128:	bl	40463c <ferror@plt+0x163c>
  40b12c:	str	x0, [sp, #216]
  40b130:	ldr	x0, [sp, #208]
  40b134:	lsl	x0, x0, #4
  40b138:	ldr	x1, [sp, #40]
  40b13c:	add	x5, x1, x0
  40b140:	ldr	x1, [sp, #184]
  40b144:	ldr	x0, [sp, #216]
  40b148:	add	x0, x0, #0xd
  40b14c:	mov	x4, x0
  40b150:	mov	x3, x1
  40b154:	mov	x2, #0x1                   	// #1
  40b158:	mov	x1, #0x0                   	// #0
  40b15c:	mov	x0, x5
  40b160:	bl	409b08 <ferror@plt+0x6b08>
  40b164:	ldr	x0, [sp, #208]
  40b168:	lsl	x0, x0, #4
  40b16c:	ldr	x1, [sp, #40]
  40b170:	add	x0, x1, x0
  40b174:	ldr	x1, [sp, #216]
  40b178:	add	x1, x1, #0xd
  40b17c:	str	x1, [x0]
  40b180:	ldr	x0, [sp, #208]
  40b184:	lsl	x0, x0, #4
  40b188:	ldr	x1, [sp, #40]
  40b18c:	add	x0, x1, x0
  40b190:	ldr	x1, [sp, #216]
  40b194:	str	x1, [x0, #8]
  40b198:	ldr	x0, [sp, #208]
  40b19c:	add	x0, x0, #0x1
  40b1a0:	str	x0, [sp, #208]
  40b1a4:	b	40b1b0 <ferror@plt+0x81b0>
  40b1a8:	nop
  40b1ac:	b	40b1c0 <ferror@plt+0x81c0>
  40b1b0:	ldr	x1, [sp, #208]
  40b1b4:	ldr	x0, [sp, #24]
  40b1b8:	cmp	x1, x0
  40b1bc:	b.cc	40afe4 <ferror@plt+0x7fe4>  // b.lo, b.ul, b.last
  40b1c0:	nop
  40b1c4:	ldp	x29, x30, [sp], #224
  40b1c8:	ret
  40b1cc:	stp	x29, x30, [sp, #-48]!
  40b1d0:	mov	x29, sp
  40b1d4:	str	x0, [sp, #24]
  40b1d8:	str	x1, [sp, #16]
  40b1dc:	str	xzr, [sp, #40]
  40b1e0:	b	40b274 <ferror@plt+0x8274>
  40b1e4:	ldr	x0, [sp, #40]
  40b1e8:	lsl	x0, x0, #3
  40b1ec:	ldr	x1, [sp, #24]
  40b1f0:	add	x0, x1, x0
  40b1f4:	ldr	x2, [x0]
  40b1f8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40b1fc:	add	x1, x0, #0x720
  40b200:	mov	x0, x2
  40b204:	bl	402cd0 <strcmp@plt>
  40b208:	cmp	w0, #0x0
  40b20c:	b.eq	40b264 <ferror@plt+0x8264>  // b.none
  40b210:	ldr	x0, [sp, #40]
  40b214:	lsl	x0, x0, #3
  40b218:	ldr	x1, [sp, #24]
  40b21c:	add	x0, x1, x0
  40b220:	ldr	x0, [x0]
  40b224:	mov	w1, #0x4                   	// #4
  40b228:	bl	4029b0 <euidaccess@plt>
  40b22c:	cmp	w0, #0x0
  40b230:	b.eq	40b268 <ferror@plt+0x8268>  // b.none
  40b234:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40b238:	add	x0, x0, #0xc88
  40b23c:	bl	402fd0 <gettext@plt>
  40b240:	mov	x2, x0
  40b244:	ldr	x0, [sp, #40]
  40b248:	lsl	x0, x0, #3
  40b24c:	ldr	x1, [sp, #24]
  40b250:	add	x0, x1, x0
  40b254:	ldr	x0, [x0]
  40b258:	mov	x1, x0
  40b25c:	mov	x0, x2
  40b260:	bl	403554 <ferror@plt+0x554>
  40b264:	nop
  40b268:	ldr	x0, [sp, #40]
  40b26c:	add	x0, x0, #0x1
  40b270:	str	x0, [sp, #40]
  40b274:	ldr	x1, [sp, #40]
  40b278:	ldr	x0, [sp, #16]
  40b27c:	cmp	x1, x0
  40b280:	b.cc	40b1e4 <ferror@plt+0x81e4>  // b.lo, b.ul, b.last
  40b284:	nop
  40b288:	nop
  40b28c:	ldp	x29, x30, [sp], #48
  40b290:	ret
  40b294:	stp	x29, x30, [sp, #-48]!
  40b298:	mov	x29, sp
  40b29c:	str	x0, [sp, #24]
  40b2a0:	ldr	x0, [sp, #24]
  40b2a4:	cmp	x0, #0x0
  40b2a8:	b.eq	40b2f8 <ferror@plt+0x82f8>  // b.none
  40b2ac:	mov	w0, #0x41                  	// #65
  40b2b0:	movk	w0, #0x8, lsl #16
  40b2b4:	str	w0, [sp, #44]
  40b2b8:	mov	w2, #0x1b6                 	// #438
  40b2bc:	ldr	w1, [sp, #44]
  40b2c0:	ldr	x0, [sp, #24]
  40b2c4:	bl	402ab0 <open@plt>
  40b2c8:	str	w0, [sp, #40]
  40b2cc:	ldr	w0, [sp, #40]
  40b2d0:	cmp	w0, #0x0
  40b2d4:	b.ge	40b2ec <ferror@plt+0x82ec>  // b.tcont
  40b2d8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40b2dc:	add	x0, x0, #0x780
  40b2e0:	bl	402fd0 <gettext@plt>
  40b2e4:	ldr	x1, [sp, #24]
  40b2e8:	bl	403554 <ferror@plt+0x554>
  40b2ec:	mov	w1, #0x1                   	// #1
  40b2f0:	ldr	w0, [sp, #40]
  40b2f4:	bl	4042ec <ferror@plt+0x12ec>
  40b2f8:	nop
  40b2fc:	ldp	x29, x30, [sp], #48
  40b300:	ret
  40b304:	stp	x29, x30, [sp, #-176]!
  40b308:	mov	x29, sp
  40b30c:	str	x0, [sp, #40]
  40b310:	str	x1, [sp, #32]
  40b314:	str	x2, [sp, #24]
  40b318:	str	x3, [sp, #16]
  40b31c:	b	40b5c0 <ferror@plt+0x85c0>
  40b320:	str	xzr, [sp, #168]
  40b324:	ldr	x0, [sp, #168]
  40b328:	str	x0, [sp, #160]
  40b32c:	b	40b408 <ferror@plt+0x8408>
  40b330:	add	x0, sp, #0x48
  40b334:	bl	40463c <ferror@plt+0x163c>
  40b338:	str	x0, [sp, #88]
  40b33c:	ldr	x0, [sp, #168]
  40b340:	lsl	x0, x0, #4
  40b344:	ldr	x1, [sp, #40]
  40b348:	add	x5, x1, x0
  40b34c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40b350:	add	x0, x0, #0x4b4
  40b354:	ldr	w0, [x0]
  40b358:	mov	w0, w0
  40b35c:	ldr	x2, [sp, #32]
  40b360:	ldr	x1, [sp, #32]
  40b364:	cmp	x2, x0
  40b368:	csel	x1, x1, x0, ls  // ls = plast
  40b36c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40b370:	add	x0, x0, #0x4b4
  40b374:	ldr	w0, [x0]
  40b378:	mov	w2, w0
  40b37c:	ldr	x3, [sp, #72]
  40b380:	ldr	x0, [sp, #88]
  40b384:	add	x0, x0, #0xd
  40b388:	mov	x4, x0
  40b38c:	mov	x0, x5
  40b390:	bl	409b08 <ferror@plt+0x6b08>
  40b394:	str	x0, [sp, #80]
  40b398:	ldr	x0, [sp, #32]
  40b39c:	ldr	x2, [sp, #80]
  40b3a0:	ldr	x1, [sp, #80]
  40b3a4:	cmp	x2, x0
  40b3a8:	csel	x0, x1, x0, ls  // ls = plast
  40b3ac:	ldr	x1, [sp, #32]
  40b3b0:	sub	x0, x1, x0
  40b3b4:	str	x0, [sp, #32]
  40b3b8:	ldr	x0, [sp, #160]
  40b3bc:	lsl	x0, x0, #4
  40b3c0:	ldr	x1, [sp, #40]
  40b3c4:	add	x0, x1, x0
  40b3c8:	ldr	x1, [sp, #88]
  40b3cc:	add	x1, x1, #0xd
  40b3d0:	str	x1, [x0]
  40b3d4:	ldr	x0, [sp, #160]
  40b3d8:	lsl	x0, x0, #4
  40b3dc:	ldr	x1, [sp, #40]
  40b3e0:	add	x0, x1, x0
  40b3e4:	ldr	x1, [sp, #88]
  40b3e8:	str	x1, [x0, #8]
  40b3ec:	ldr	x1, [sp, #168]
  40b3f0:	ldr	x0, [sp, #80]
  40b3f4:	add	x0, x1, x0
  40b3f8:	str	x0, [sp, #168]
  40b3fc:	ldr	x0, [sp, #160]
  40b400:	add	x0, x0, #0x1
  40b404:	str	x0, [sp, #160]
  40b408:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40b40c:	add	x0, x0, #0x4b4
  40b410:	ldr	w0, [x0]
  40b414:	mov	w1, w0
  40b418:	ldr	x2, [sp, #24]
  40b41c:	ldr	x0, [sp, #168]
  40b420:	sub	x0, x2, x0
  40b424:	cmp	x1, x0
  40b428:	b.ls	40b330 <ferror@plt+0x8330>  // b.plast
  40b42c:	ldr	x1, [sp, #24]
  40b430:	ldr	x0, [sp, #168]
  40b434:	sub	x0, x1, x0
  40b438:	str	x0, [sp, #128]
  40b43c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40b440:	add	x0, x0, #0x4b4
  40b444:	ldr	w0, [x0]
  40b448:	mov	w2, w0
  40b44c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40b450:	add	x0, x0, #0x4b4
  40b454:	ldr	w0, [x0]
  40b458:	mov	w1, w0
  40b45c:	ldr	x0, [sp, #160]
  40b460:	udiv	x3, x0, x1
  40b464:	mul	x1, x3, x1
  40b468:	sub	x0, x0, x1
  40b46c:	sub	x0, x2, x0
  40b470:	str	x0, [sp, #120]
  40b474:	ldr	x1, [sp, #120]
  40b478:	ldr	x0, [sp, #128]
  40b47c:	cmp	x1, x0
  40b480:	b.cs	40b558 <ferror@plt+0x8558>  // b.hs, b.nlast
  40b484:	ldr	x1, [sp, #128]
  40b488:	ldr	x0, [sp, #120]
  40b48c:	sub	x0, x1, x0
  40b490:	add	x0, x0, #0x1
  40b494:	str	x0, [sp, #112]
  40b498:	add	x0, sp, #0x40
  40b49c:	bl	40463c <ferror@plt+0x163c>
  40b4a0:	str	x0, [sp, #104]
  40b4a4:	ldr	x0, [sp, #168]
  40b4a8:	lsl	x0, x0, #4
  40b4ac:	ldr	x1, [sp, #40]
  40b4b0:	add	x5, x1, x0
  40b4b4:	ldr	x0, [sp, #32]
  40b4b8:	ldr	x2, [sp, #112]
  40b4bc:	ldr	x1, [sp, #112]
  40b4c0:	cmp	x2, x0
  40b4c4:	csel	x1, x1, x0, ls  // ls = plast
  40b4c8:	ldr	x2, [sp, #64]
  40b4cc:	ldr	x0, [sp, #104]
  40b4d0:	add	x0, x0, #0xd
  40b4d4:	mov	x4, x0
  40b4d8:	mov	x3, x2
  40b4dc:	ldr	x2, [sp, #112]
  40b4e0:	mov	x0, x5
  40b4e4:	bl	409b08 <ferror@plt+0x6b08>
  40b4e8:	str	x0, [sp, #96]
  40b4ec:	ldr	x0, [sp, #32]
  40b4f0:	ldr	x2, [sp, #96]
  40b4f4:	ldr	x1, [sp, #96]
  40b4f8:	cmp	x2, x0
  40b4fc:	csel	x0, x1, x0, ls  // ls = plast
  40b500:	ldr	x1, [sp, #32]
  40b504:	sub	x0, x1, x0
  40b508:	str	x0, [sp, #32]
  40b50c:	ldr	x0, [sp, #160]
  40b510:	lsl	x0, x0, #4
  40b514:	ldr	x1, [sp, #40]
  40b518:	add	x0, x1, x0
  40b51c:	ldr	x1, [sp, #104]
  40b520:	add	x1, x1, #0xd
  40b524:	str	x1, [x0]
  40b528:	ldr	x0, [sp, #160]
  40b52c:	add	x1, x0, #0x1
  40b530:	str	x1, [sp, #160]
  40b534:	lsl	x0, x0, #4
  40b538:	ldr	x1, [sp, #40]
  40b53c:	add	x0, x1, x0
  40b540:	ldr	x1, [sp, #104]
  40b544:	str	x1, [x0, #8]
  40b548:	ldr	x1, [sp, #168]
  40b54c:	ldr	x0, [sp, #96]
  40b550:	add	x0, x1, x0
  40b554:	str	x0, [sp, #168]
  40b558:	ldr	x0, [sp, #160]
  40b55c:	lsl	x0, x0, #4
  40b560:	ldr	x1, [sp, #40]
  40b564:	add	x3, x1, x0
  40b568:	ldr	x0, [sp, #168]
  40b56c:	lsl	x0, x0, #4
  40b570:	ldr	x1, [sp, #40]
  40b574:	add	x4, x1, x0
  40b578:	ldr	x1, [sp, #24]
  40b57c:	ldr	x0, [sp, #168]
  40b580:	sub	x0, x1, x0
  40b584:	lsl	x0, x0, #4
  40b588:	mov	x2, x0
  40b58c:	mov	x1, x4
  40b590:	mov	x0, x3
  40b594:	bl	402890 <memmove@plt>
  40b598:	ldr	x1, [sp, #32]
  40b59c:	ldr	x0, [sp, #160]
  40b5a0:	add	x0, x1, x0
  40b5a4:	str	x0, [sp, #32]
  40b5a8:	ldr	x1, [sp, #160]
  40b5ac:	ldr	x0, [sp, #168]
  40b5b0:	sub	x0, x1, x0
  40b5b4:	ldr	x1, [sp, #24]
  40b5b8:	add	x0, x1, x0
  40b5bc:	str	x0, [sp, #24]
  40b5c0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40b5c4:	add	x0, x0, #0x4b4
  40b5c8:	ldr	w0, [x0]
  40b5cc:	mov	w0, w0
  40b5d0:	ldr	x1, [sp, #24]
  40b5d4:	cmp	x1, x0
  40b5d8:	b.hi	40b320 <ferror@plt+0x8320>  // b.pmore
  40b5dc:	ldr	x3, [sp, #16]
  40b5e0:	ldr	x2, [sp, #24]
  40b5e4:	ldr	x1, [sp, #32]
  40b5e8:	ldr	x0, [sp, #40]
  40b5ec:	bl	40afbc <ferror@plt+0x7fbc>
  40b5f0:	add	x0, sp, #0x38
  40b5f4:	mov	x2, x0
  40b5f8:	ldr	x1, [sp, #24]
  40b5fc:	ldr	x0, [sp, #40]
  40b600:	bl	408e6c <ferror@plt+0x5e6c>
  40b604:	str	x0, [sp, #152]
  40b608:	ldr	x1, [sp, #152]
  40b60c:	ldr	x0, [sp, #24]
  40b610:	cmp	x1, x0
  40b614:	b.ne	40b68c <ferror@plt+0x868c>  // b.any
  40b618:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40b61c:	add	x1, x0, #0x7d8
  40b620:	ldr	x0, [sp, #16]
  40b624:	bl	404070 <ferror@plt+0x1070>
  40b628:	str	x0, [sp, #144]
  40b62c:	ldr	x0, [sp, #144]
  40b630:	cmp	x0, #0x0
  40b634:	b.eq	40b65c <ferror@plt+0x865c>  // b.none
  40b638:	ldr	x0, [sp, #56]
  40b63c:	mov	x5, x0
  40b640:	ldr	x4, [sp, #16]
  40b644:	ldr	x3, [sp, #144]
  40b648:	ldr	x2, [sp, #24]
  40b64c:	ldr	x1, [sp, #32]
  40b650:	ldr	x0, [sp, #40]
  40b654:	bl	408f88 <ferror@plt+0x5f88>
  40b658:	b	40b804 <ferror@plt+0x8804>
  40b65c:	bl	402f50 <__errno_location@plt>
  40b660:	ldr	w0, [x0]
  40b664:	cmp	w0, #0x18
  40b668:	b.ne	40b678 <ferror@plt+0x8678>  // b.any
  40b66c:	ldr	x0, [sp, #152]
  40b670:	cmp	x0, #0x2
  40b674:	b.hi	40b6c8 <ferror@plt+0x86c8>  // b.pmore
  40b678:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40b67c:	add	x0, x0, #0x780
  40b680:	bl	402fd0 <gettext@plt>
  40b684:	ldr	x1, [sp, #16]
  40b688:	bl	403554 <ferror@plt+0x554>
  40b68c:	ldr	x0, [sp, #152]
  40b690:	cmp	x0, #0x2
  40b694:	b.hi	40b6c8 <ferror@plt+0x86c8>  // b.pmore
  40b698:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40b69c:	add	x0, x0, #0x780
  40b6a0:	bl	402fd0 <gettext@plt>
  40b6a4:	mov	x2, x0
  40b6a8:	ldr	x0, [sp, #152]
  40b6ac:	lsl	x0, x0, #4
  40b6b0:	ldr	x1, [sp, #40]
  40b6b4:	add	x0, x1, x0
  40b6b8:	ldr	x0, [x0]
  40b6bc:	mov	x1, x0
  40b6c0:	mov	x0, x2
  40b6c4:	bl	403554 <ferror@plt+0x554>
  40b6c8:	ldr	x0, [sp, #152]
  40b6cc:	sub	x0, x0, #0x1
  40b6d0:	str	x0, [sp, #152]
  40b6d4:	ldr	x1, [sp, #56]
  40b6d8:	ldr	x0, [sp, #152]
  40b6dc:	lsl	x0, x0, #3
  40b6e0:	add	x0, x1, x0
  40b6e4:	ldr	x2, [x0]
  40b6e8:	ldr	x0, [sp, #152]
  40b6ec:	lsl	x0, x0, #4
  40b6f0:	ldr	x1, [sp, #40]
  40b6f4:	add	x0, x1, x0
  40b6f8:	ldr	x0, [x0]
  40b6fc:	mov	x1, x0
  40b700:	mov	x0, x2
  40b704:	bl	40423c <ferror@plt+0x123c>
  40b708:	ldr	x0, [sp, #152]
  40b70c:	cmp	x0, #0x2
  40b710:	cset	w0, hi  // hi = pmore
  40b714:	and	w1, w0, #0xff
  40b718:	add	x0, sp, #0x30
  40b71c:	bl	4044d0 <ferror@plt+0x14d0>
  40b720:	str	x0, [sp, #136]
  40b724:	ldr	x0, [sp, #136]
  40b728:	cmp	x0, #0x0
  40b72c:	b.eq	40b6c8 <ferror@plt+0x86c8>  // b.none
  40b730:	ldr	x0, [sp, #32]
  40b734:	ldr	x2, [sp, #152]
  40b738:	ldr	x1, [sp, #152]
  40b73c:	cmp	x2, x0
  40b740:	csel	x1, x1, x0, ls  // ls = plast
  40b744:	ldr	x2, [sp, #48]
  40b748:	ldr	x0, [sp, #136]
  40b74c:	add	x0, x0, #0xd
  40b750:	ldr	x3, [sp, #56]
  40b754:	mov	x5, x3
  40b758:	mov	x4, x0
  40b75c:	mov	x3, x2
  40b760:	ldr	x2, [sp, #152]
  40b764:	ldr	x0, [sp, #40]
  40b768:	bl	408f88 <ferror@plt+0x5f88>
  40b76c:	ldr	x0, [sp, #32]
  40b770:	ldr	x2, [sp, #152]
  40b774:	ldr	x1, [sp, #152]
  40b778:	cmp	x2, x0
  40b77c:	csel	x0, x1, x0, ls  // ls = plast
  40b780:	ldr	x1, [sp, #32]
  40b784:	sub	x0, x1, x0
  40b788:	str	x0, [sp, #32]
  40b78c:	ldr	x0, [sp, #136]
  40b790:	add	x1, x0, #0xd
  40b794:	ldr	x0, [sp, #40]
  40b798:	str	x1, [x0]
  40b79c:	ldr	x0, [sp, #40]
  40b7a0:	ldr	x1, [sp, #136]
  40b7a4:	str	x1, [x0, #8]
  40b7a8:	ldr	x0, [sp, #40]
  40b7ac:	add	x3, x0, #0x10
  40b7b0:	ldr	x0, [sp, #152]
  40b7b4:	lsl	x0, x0, #4
  40b7b8:	ldr	x1, [sp, #40]
  40b7bc:	add	x4, x1, x0
  40b7c0:	ldr	x1, [sp, #24]
  40b7c4:	ldr	x0, [sp, #152]
  40b7c8:	sub	x0, x1, x0
  40b7cc:	lsl	x0, x0, #4
  40b7d0:	mov	x2, x0
  40b7d4:	mov	x1, x4
  40b7d8:	mov	x0, x3
  40b7dc:	bl	402890 <memmove@plt>
  40b7e0:	ldr	x0, [sp, #32]
  40b7e4:	add	x0, x0, #0x1
  40b7e8:	str	x0, [sp, #32]
  40b7ec:	ldr	x1, [sp, #24]
  40b7f0:	ldr	x0, [sp, #152]
  40b7f4:	sub	x0, x1, x0
  40b7f8:	add	x0, x0, #0x1
  40b7fc:	str	x0, [sp, #24]
  40b800:	b	40b5f0 <ferror@plt+0x85f0>
  40b804:	nop
  40b808:	ldp	x29, x30, [sp], #176
  40b80c:	ret
  40b810:	stp	x29, x30, [sp, #-320]!
  40b814:	mov	x29, sp
  40b818:	str	x0, [sp, #40]
  40b81c:	str	x1, [sp, #32]
  40b820:	str	x2, [sp, #24]
  40b824:	str	x3, [sp, #16]
  40b828:	str	xzr, [sp, #312]
  40b82c:	strb	wzr, [sp, #311]
  40b830:	str	xzr, [sp, #192]
  40b834:	b	40bab4 <ferror@plt+0x8ab4>
  40b838:	ldr	x0, [sp, #40]
  40b83c:	ldr	x0, [x0]
  40b840:	str	x0, [sp, #248]
  40b844:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40b848:	add	x1, x0, #0x860
  40b84c:	ldr	x0, [sp, #248]
  40b850:	bl	4041f0 <ferror@plt+0x11f0>
  40b854:	str	x0, [sp, #160]
  40b858:	ldr	x0, [sp, #16]
  40b85c:	cmp	x0, #0x1
  40b860:	b.ls	40b8b0 <ferror@plt+0x88b0>  // b.plast
  40b864:	mov	x0, #0x1                   	// #1
  40b868:	str	x0, [sp, #280]
  40b86c:	mov	x0, #0x1                   	// #1
  40b870:	str	x0, [sp, #272]
  40b874:	b	40b890 <ferror@plt+0x8890>
  40b878:	ldr	x0, [sp, #280]
  40b87c:	lsl	x0, x0, #1
  40b880:	str	x0, [sp, #280]
  40b884:	ldr	x0, [sp, #272]
  40b888:	add	x0, x0, #0x1
  40b88c:	str	x0, [sp, #272]
  40b890:	ldr	x1, [sp, #280]
  40b894:	ldr	x0, [sp, #16]
  40b898:	cmp	x1, x0
  40b89c:	b.cc	40b878 <ferror@plt+0x8878>  // b.lo, b.ul, b.last
  40b8a0:	ldr	x0, [sp, #272]
  40b8a4:	lsl	x0, x0, #5
  40b8a8:	str	x0, [sp, #288]
  40b8ac:	b	40b8b8 <ferror@plt+0x88b8>
  40b8b0:	mov	x0, #0x30                  	// #48
  40b8b4:	str	x0, [sp, #288]
  40b8b8:	ldr	x0, [sp, #192]
  40b8bc:	cmp	x0, #0x0
  40b8c0:	b.ne	40b8f0 <ferror@plt+0x88f0>  // b.any
  40b8c4:	add	x0, sp, #0xa0
  40b8c8:	ldr	x4, [sp, #288]
  40b8cc:	ldr	x3, [sp, #32]
  40b8d0:	ldr	x2, [sp, #40]
  40b8d4:	mov	x1, #0x1                   	// #1
  40b8d8:	bl	405374 <ferror@plt+0x2374>
  40b8dc:	mov	x1, x0
  40b8e0:	add	x0, sp, #0xa8
  40b8e4:	mov	x2, x1
  40b8e8:	ldr	x1, [sp, #288]
  40b8ec:	bl	4055d8 <ferror@plt+0x25d8>
  40b8f0:	strb	wzr, [sp, #216]
  40b8f4:	ldr	x0, [sp, #40]
  40b8f8:	add	x0, x0, #0x8
  40b8fc:	str	x0, [sp, #40]
  40b900:	ldr	x0, [sp, #32]
  40b904:	sub	x0, x0, #0x1
  40b908:	str	x0, [sp, #32]
  40b90c:	b	40ba8c <ferror@plt+0x8a8c>
  40b910:	ldrb	w0, [sp, #216]
  40b914:	cmp	w0, #0x0
  40b918:	b.eq	40b960 <ferror@plt+0x8960>  // b.none
  40b91c:	ldr	x0, [sp, #32]
  40b920:	cmp	x0, #0x0
  40b924:	b.eq	40b960 <ferror@plt+0x8960>  // b.none
  40b928:	ldr	x0, [sp, #288]
  40b92c:	add	x1, x0, #0x1
  40b930:	ldr	x2, [sp, #192]
  40b934:	ldr	x0, [sp, #176]
  40b938:	sub	x2, x2, x0
  40b93c:	ldr	x3, [sp, #184]
  40b940:	ldr	x0, [sp, #288]
  40b944:	mul	x0, x3, x0
  40b948:	sub	x0, x2, x0
  40b94c:	cmp	x1, x0
  40b950:	b.cs	40b960 <ferror@plt+0x8960>  // b.hs, b.nlast
  40b954:	ldr	x0, [sp, #176]
  40b958:	str	x0, [sp, #200]
  40b95c:	b	40baa8 <ferror@plt+0x8aa8>
  40b960:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40b964:	add	x0, x0, #0x5a0
  40b968:	str	xzr, [x0]
  40b96c:	add	x0, sp, #0xa8
  40b970:	bl	40569c <ferror@plt+0x269c>
  40b974:	str	x0, [sp, #240]
  40b978:	ldrb	w0, [sp, #216]
  40b97c:	cmp	w0, #0x0
  40b980:	b.eq	40b9dc <ferror@plt+0x89dc>  // b.none
  40b984:	ldr	x0, [sp, #32]
  40b988:	cmp	x0, #0x0
  40b98c:	b.ne	40b9dc <ferror@plt+0x89dc>  // b.any
  40b990:	ldr	x0, [sp, #312]
  40b994:	cmp	x0, #0x0
  40b998:	b.ne	40b9dc <ferror@plt+0x89dc>  // b.any
  40b99c:	ldr	x0, [sp, #200]
  40b9a0:	cmp	x0, #0x0
  40b9a4:	b.ne	40b9dc <ferror@plt+0x89dc>  // b.any
  40b9a8:	ldr	x0, [sp, #160]
  40b9ac:	ldr	x1, [sp, #248]
  40b9b0:	bl	40423c <ferror@plt+0x123c>
  40b9b4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40b9b8:	add	x1, x0, #0x7d8
  40b9bc:	ldr	x0, [sp, #24]
  40b9c0:	bl	4041f0 <ferror@plt+0x11f0>
  40b9c4:	str	x0, [sp, #152]
  40b9c8:	ldr	x0, [sp, #24]
  40b9cc:	str	x0, [sp, #296]
  40b9d0:	mov	w0, #0x1                   	// #1
  40b9d4:	strb	w0, [sp, #311]
  40b9d8:	b	40b9f8 <ferror@plt+0x89f8>
  40b9dc:	ldr	x0, [sp, #312]
  40b9e0:	add	x0, x0, #0x1
  40b9e4:	str	x0, [sp, #312]
  40b9e8:	add	x0, sp, #0x98
  40b9ec:	bl	40463c <ferror@plt+0x163c>
  40b9f0:	add	x0, x0, #0xd
  40b9f4:	str	x0, [sp, #296]
  40b9f8:	ldr	x0, [sp, #184]
  40b9fc:	cmp	x0, #0x1
  40ba00:	b.ls	40ba60 <ferror@plt+0x8a60>  // b.plast
  40ba04:	add	x0, sp, #0x30
  40ba08:	ldr	x1, [sp, #16]
  40ba0c:	bl	40a418 <ferror@plt+0x7418>
  40ba10:	ldr	x0, [sp, #184]
  40ba14:	ldr	x2, [sp, #240]
  40ba18:	mov	x1, x0
  40ba1c:	ldr	x0, [sp, #16]
  40ba20:	bl	409fb8 <ferror@plt+0x6fb8>
  40ba24:	str	x0, [sp, #232]
  40ba28:	ldr	x1, [sp, #184]
  40ba2c:	ldr	x0, [sp, #232]
  40ba30:	add	x0, x0, #0x88
  40ba34:	ldr	x3, [sp, #152]
  40ba38:	add	x2, sp, #0x30
  40ba3c:	ldr	x6, [sp, #296]
  40ba40:	mov	x5, x3
  40ba44:	mov	x4, x2
  40ba48:	mov	x3, x0
  40ba4c:	mov	x2, x1
  40ba50:	ldr	x1, [sp, #16]
  40ba54:	ldr	x0, [sp, #240]
  40ba58:	bl	40ad5c <ferror@plt+0x7d5c>
  40ba5c:	b	40ba74 <ferror@plt+0x8a74>
  40ba60:	ldr	x0, [sp, #240]
  40ba64:	sub	x0, x0, #0x20
  40ba68:	ldr	x1, [sp, #152]
  40ba6c:	ldr	x2, [sp, #296]
  40ba70:	bl	40a550 <ferror@plt+0x7550>
  40ba74:	ldr	x0, [sp, #152]
  40ba78:	ldr	x1, [sp, #296]
  40ba7c:	bl	40423c <ferror@plt+0x123c>
  40ba80:	ldrb	w0, [sp, #311]
  40ba84:	cmp	w0, #0x0
  40ba88:	b.ne	40bac4 <ferror@plt+0x8ac4>  // b.any
  40ba8c:	ldr	x1, [sp, #160]
  40ba90:	add	x0, sp, #0xa8
  40ba94:	ldr	x2, [sp, #248]
  40ba98:	bl	405b5c <ferror@plt+0x2b5c>
  40ba9c:	and	w0, w0, #0xff
  40baa0:	cmp	w0, #0x0
  40baa4:	b.ne	40b910 <ferror@plt+0x8910>  // b.any
  40baa8:	ldr	x0, [sp, #160]
  40baac:	ldr	x1, [sp, #248]
  40bab0:	bl	40423c <ferror@plt+0x123c>
  40bab4:	ldr	x0, [sp, #32]
  40bab8:	cmp	x0, #0x0
  40babc:	b.ne	40b838 <ferror@plt+0x8838>  // b.any
  40bac0:	b	40bac8 <ferror@plt+0x8ac8>
  40bac4:	nop
  40bac8:	ldr	x0, [sp, #168]
  40bacc:	bl	402d20 <free@plt>
  40bad0:	ldrb	w0, [sp, #311]
  40bad4:	eor	w0, w0, #0x1
  40bad8:	and	w0, w0, #0xff
  40badc:	cmp	w0, #0x0
  40bae0:	b.eq	40bb80 <ferror@plt+0x8b80>  // b.none
  40bae4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40bae8:	add	x0, x0, #0xa80
  40baec:	ldr	x0, [x0]
  40baf0:	str	x0, [sp, #264]
  40baf4:	mov	x1, #0x10                  	// #16
  40baf8:	ldr	x0, [sp, #312]
  40bafc:	bl	4181a8 <ferror@plt+0x151a8>
  40bb00:	str	x0, [sp, #224]
  40bb04:	str	xzr, [sp, #256]
  40bb08:	b	40bb58 <ferror@plt+0x8b58>
  40bb0c:	ldr	x0, [sp, #256]
  40bb10:	lsl	x0, x0, #4
  40bb14:	ldr	x1, [sp, #224]
  40bb18:	add	x0, x1, x0
  40bb1c:	ldr	x1, [sp, #264]
  40bb20:	add	x1, x1, #0xd
  40bb24:	str	x1, [x0]
  40bb28:	ldr	x0, [sp, #256]
  40bb2c:	lsl	x0, x0, #4
  40bb30:	ldr	x1, [sp, #224]
  40bb34:	add	x0, x1, x0
  40bb38:	ldr	x1, [sp, #264]
  40bb3c:	str	x1, [x0, #8]
  40bb40:	ldr	x0, [sp, #264]
  40bb44:	ldr	x0, [x0]
  40bb48:	str	x0, [sp, #264]
  40bb4c:	ldr	x0, [sp, #256]
  40bb50:	add	x0, x0, #0x1
  40bb54:	str	x0, [sp, #256]
  40bb58:	ldr	x0, [sp, #264]
  40bb5c:	cmp	x0, #0x0
  40bb60:	b.ne	40bb0c <ferror@plt+0x8b0c>  // b.any
  40bb64:	ldr	x3, [sp, #24]
  40bb68:	ldr	x2, [sp, #312]
  40bb6c:	ldr	x1, [sp, #312]
  40bb70:	ldr	x0, [sp, #224]
  40bb74:	bl	40b304 <ferror@plt+0x8304>
  40bb78:	ldr	x0, [sp, #224]
  40bb7c:	bl	402d20 <free@plt>
  40bb80:	bl	403d38 <ferror@plt+0xd38>
  40bb84:	nop
  40bb88:	ldp	x29, x30, [sp], #320
  40bb8c:	ret
  40bb90:	stp	x29, x30, [sp, #-48]!
  40bb94:	mov	x29, sp
  40bb98:	str	x0, [sp, #24]
  40bb9c:	mov	x1, #0x48                  	// #72
  40bba0:	ldr	x0, [sp, #24]
  40bba4:	bl	418564 <ferror@plt+0x15564>
  40bba8:	str	x0, [sp, #32]
  40bbac:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40bbb0:	add	x0, x0, #0x9e8
  40bbb4:	str	x0, [sp, #40]
  40bbb8:	b	40bbcc <ferror@plt+0x8bcc>
  40bbbc:	ldr	x0, [sp, #40]
  40bbc0:	ldr	x0, [x0]
  40bbc4:	add	x0, x0, #0x40
  40bbc8:	str	x0, [sp, #40]
  40bbcc:	ldr	x0, [sp, #40]
  40bbd0:	ldr	x0, [x0]
  40bbd4:	cmp	x0, #0x0
  40bbd8:	b.ne	40bbbc <ferror@plt+0x8bbc>  // b.any
  40bbdc:	ldr	x0, [sp, #40]
  40bbe0:	ldr	x1, [sp, #32]
  40bbe4:	str	x1, [x0]
  40bbe8:	ldr	x0, [sp, #32]
  40bbec:	str	xzr, [x0, #64]
  40bbf0:	nop
  40bbf4:	ldp	x29, x30, [sp], #48
  40bbf8:	ret
  40bbfc:	stp	x29, x30, [sp, #-48]!
  40bc00:	mov	x29, sp
  40bc04:	stp	x19, x20, [sp, #16]
  40bc08:	str	x0, [sp, #40]
  40bc0c:	str	x1, [sp, #32]
  40bc10:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40bc14:	add	x0, x0, #0xc98
  40bc18:	bl	402fd0 <gettext@plt>
  40bc1c:	mov	x19, x0
  40bc20:	ldr	x0, [sp, #32]
  40bc24:	bl	402fd0 <gettext@plt>
  40bc28:	mov	x20, x0
  40bc2c:	ldr	x0, [sp, #40]
  40bc30:	bl	415354 <ferror@plt+0x12354>
  40bc34:	mov	x4, x0
  40bc38:	mov	x3, x20
  40bc3c:	mov	x2, x19
  40bc40:	mov	w1, #0x0                   	// #0
  40bc44:	mov	w0, #0x2                   	// #2
  40bc48:	bl	402920 <error@plt>
  40bc4c:	stp	x29, x30, [sp, #-32]!
  40bc50:	mov	x29, sp
  40bc54:	str	x0, [sp, #24]
  40bc58:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40bc5c:	add	x0, x0, #0xcc0
  40bc60:	bl	402fd0 <gettext@plt>
  40bc64:	ldr	x3, [sp, #24]
  40bc68:	mov	x2, x0
  40bc6c:	mov	w1, #0x0                   	// #0
  40bc70:	mov	w0, #0x2                   	// #2
  40bc74:	bl	402920 <error@plt>
  40bc78:	stp	x29, x30, [sp, #-64]!
  40bc7c:	mov	x29, sp
  40bc80:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40bc84:	add	x0, x0, #0x9e8
  40bc88:	ldr	x0, [x0]
  40bc8c:	str	x0, [sp, #56]
  40bc90:	b	40bd50 <ferror@plt+0x8d50>
  40bc94:	ldr	x0, [sp, #56]
  40bc98:	ldrb	w0, [x0, #50]
  40bc9c:	mov	w1, w0
  40bca0:	ldr	x0, [sp, #56]
  40bca4:	ldrb	w0, [x0, #52]
  40bca8:	add	w0, w1, w0
  40bcac:	ldr	x1, [sp, #56]
  40bcb0:	ldrb	w1, [x1, #53]
  40bcb4:	add	w0, w0, w1
  40bcb8:	ldr	x1, [sp, #56]
  40bcbc:	ldrb	w1, [x1, #54]
  40bcc0:	add	w1, w0, w1
  40bcc4:	ldr	x0, [sp, #56]
  40bcc8:	ldrb	w2, [x0, #56]
  40bccc:	ldr	x0, [sp, #56]
  40bcd0:	ldrb	w0, [x0, #51]
  40bcd4:	orr	w0, w2, w0
  40bcd8:	and	w0, w0, #0xff
  40bcdc:	mov	w2, w0
  40bce0:	ldr	x0, [sp, #56]
  40bce4:	ldr	x0, [x0, #32]
  40bce8:	cmp	x0, #0x0
  40bcec:	cset	w0, ne  // ne = any
  40bcf0:	and	w0, w0, #0xff
  40bcf4:	orr	w0, w2, w0
  40bcf8:	add	w0, w1, w0
  40bcfc:	cmp	w0, #0x1
  40bd00:	b.le	40bd44 <ferror@plt+0x8d44>
  40bd04:	ldr	x0, [sp, #56]
  40bd08:	strb	wzr, [x0, #55]
  40bd0c:	ldr	x0, [sp, #56]
  40bd10:	ldrb	w1, [x0, #55]
  40bd14:	ldr	x0, [sp, #56]
  40bd18:	strb	w1, [x0, #49]
  40bd1c:	ldr	x0, [sp, #56]
  40bd20:	ldrb	w1, [x0, #49]
  40bd24:	ldr	x0, [sp, #56]
  40bd28:	strb	w1, [x0, #48]
  40bd2c:	add	x0, sp, #0x18
  40bd30:	mov	x1, x0
  40bd34:	ldr	x0, [sp, #56]
  40bd38:	bl	4072ec <ferror@plt+0x42ec>
  40bd3c:	add	x0, sp, #0x18
  40bd40:	bl	40bc4c <ferror@plt+0x8c4c>
  40bd44:	ldr	x0, [sp, #56]
  40bd48:	ldr	x0, [x0, #64]
  40bd4c:	str	x0, [sp, #56]
  40bd50:	ldr	x0, [sp, #56]
  40bd54:	cmp	x0, #0x0
  40bd58:	b.ne	40bc94 <ferror@plt+0x8c94>  // b.any
  40bd5c:	nop
  40bd60:	nop
  40bd64:	ldp	x29, x30, [sp], #64
  40bd68:	ret
  40bd6c:	stp	x29, x30, [sp, #-80]!
  40bd70:	mov	x29, sp
  40bd74:	stp	x19, x20, [sp, #16]
  40bd78:	str	x0, [sp, #56]
  40bd7c:	str	x1, [sp, #48]
  40bd80:	str	x2, [sp, #40]
  40bd84:	add	x2, sp, #0x40
  40bd88:	add	x1, sp, #0x48
  40bd8c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  40bd90:	add	x4, x0, #0x18
  40bd94:	mov	x3, x2
  40bd98:	mov	w2, #0xa                   	// #10
  40bd9c:	ldr	x0, [sp, #56]
  40bda0:	bl	419084 <ferror@plt+0x16084>
  40bda4:	cmp	w0, #0x4
  40bda8:	b.eq	40be18 <ferror@plt+0x8e18>  // b.none
  40bdac:	cmp	w0, #0x4
  40bdb0:	b.hi	40be6c <ferror@plt+0x8e6c>  // b.pmore
  40bdb4:	cmp	w0, #0x3
  40bdb8:	b.eq	40be08 <ferror@plt+0x8e08>  // b.none
  40bdbc:	cmp	w0, #0x3
  40bdc0:	b.hi	40be6c <ferror@plt+0x8e6c>  // b.pmore
  40bdc4:	cmp	w0, #0x2
  40bdc8:	b.eq	40bde8 <ferror@plt+0x8de8>  // b.none
  40bdcc:	cmp	w0, #0x2
  40bdd0:	b.hi	40be6c <ferror@plt+0x8e6c>  // b.pmore
  40bdd4:	cmp	w0, #0x0
  40bdd8:	b.eq	40bde8 <ferror@plt+0x8de8>  // b.none
  40bddc:	cmp	w0, #0x1
  40bde0:	b.eq	40be08 <ferror@plt+0x8e08>  // b.none
  40bde4:	b	40be6c <ferror@plt+0x8e6c>
  40bde8:	ldr	x1, [sp, #64]
  40bdec:	ldr	x0, [sp, #48]
  40bdf0:	str	x1, [x0]
  40bdf4:	ldr	x0, [sp, #48]
  40bdf8:	ldr	x1, [x0]
  40bdfc:	ldr	x0, [sp, #64]
  40be00:	cmp	x1, x0
  40be04:	b.eq	40be68 <ferror@plt+0x8e68>  // b.none
  40be08:	ldr	x0, [sp, #48]
  40be0c:	mov	x1, #0xffffffffffffffff    	// #-1
  40be10:	str	x1, [x0]
  40be14:	b	40be6c <ferror@plt+0x8e6c>
  40be18:	ldr	x0, [sp, #40]
  40be1c:	cmp	x0, #0x0
  40be20:	b.eq	40be60 <ferror@plt+0x8e60>  // b.none
  40be24:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40be28:	add	x0, x0, #0xce0
  40be2c:	bl	402fd0 <gettext@plt>
  40be30:	mov	x19, x0
  40be34:	ldr	x0, [sp, #40]
  40be38:	bl	402fd0 <gettext@plt>
  40be3c:	mov	x20, x0
  40be40:	ldr	x0, [sp, #56]
  40be44:	bl	415354 <ferror@plt+0x12354>
  40be48:	mov	x4, x0
  40be4c:	mov	x3, x20
  40be50:	mov	x2, x19
  40be54:	mov	w1, #0x0                   	// #0
  40be58:	mov	w0, #0x2                   	// #2
  40be5c:	bl	402920 <error@plt>
  40be60:	mov	x0, #0x0                   	// #0
  40be64:	b	40be70 <ferror@plt+0x8e70>
  40be68:	nop
  40be6c:	ldr	x0, [sp, #72]
  40be70:	ldp	x19, x20, [sp, #16]
  40be74:	ldp	x29, x30, [sp], #80
  40be78:	ret
  40be7c:	stp	x29, x30, [sp, #-32]!
  40be80:	mov	x29, sp
  40be84:	str	w0, [sp, #28]
  40be88:	bl	403d70 <ferror@plt+0xd70>
  40be8c:	mov	x1, #0x0                   	// #0
  40be90:	ldr	w0, [sp, #28]
  40be94:	bl	402a30 <signal@plt>
  40be98:	ldr	w0, [sp, #28]
  40be9c:	bl	402910 <raise@plt>
  40bea0:	nop
  40bea4:	ldp	x29, x30, [sp], #32
  40bea8:	ret
  40beac:	sub	sp, sp, #0x20
  40beb0:	str	x0, [sp, #24]
  40beb4:	str	x1, [sp, #16]
  40beb8:	str	w2, [sp, #12]
  40bebc:	b	40c094 <ferror@plt+0x9094>
  40bec0:	ldr	x0, [sp, #24]
  40bec4:	ldrb	w0, [x0]
  40bec8:	cmp	w0, #0x72
  40becc:	b.eq	40c054 <ferror@plt+0x9054>  // b.none
  40bed0:	cmp	w0, #0x72
  40bed4:	b.gt	40c074 <ferror@plt+0x9074>
  40bed8:	cmp	w0, #0x6e
  40bedc:	b.eq	40c034 <ferror@plt+0x9034>  // b.none
  40bee0:	cmp	w0, #0x6e
  40bee4:	b.gt	40c074 <ferror@plt+0x9074>
  40bee8:	cmp	w0, #0x69
  40beec:	b.eq	40c000 <ferror@plt+0x9000>  // b.none
  40bef0:	cmp	w0, #0x69
  40bef4:	b.gt	40c074 <ferror@plt+0x9074>
  40bef8:	cmp	w0, #0x68
  40befc:	b.eq	40bff0 <ferror@plt+0x8ff0>  // b.none
  40bf00:	cmp	w0, #0x68
  40bf04:	b.gt	40c074 <ferror@plt+0x9074>
  40bf08:	cmp	w0, #0x67
  40bf0c:	b.eq	40bfe0 <ferror@plt+0x8fe0>  // b.none
  40bf10:	cmp	w0, #0x67
  40bf14:	b.gt	40c074 <ferror@plt+0x9074>
  40bf18:	cmp	w0, #0x66
  40bf1c:	b.eq	40bfcc <ferror@plt+0x8fcc>  // b.none
  40bf20:	cmp	w0, #0x66
  40bf24:	b.gt	40c074 <ferror@plt+0x9074>
  40bf28:	cmp	w0, #0x64
  40bf2c:	b.eq	40bfb8 <ferror@plt+0x8fb8>  // b.none
  40bf30:	cmp	w0, #0x64
  40bf34:	b.gt	40c074 <ferror@plt+0x9074>
  40bf38:	cmp	w0, #0x62
  40bf3c:	b.eq	40bf6c <ferror@plt+0x8f6c>  // b.none
  40bf40:	cmp	w0, #0x62
  40bf44:	b.gt	40c074 <ferror@plt+0x9074>
  40bf48:	cmp	w0, #0x56
  40bf4c:	b.eq	40c064 <ferror@plt+0x9064>  // b.none
  40bf50:	cmp	w0, #0x56
  40bf54:	b.gt	40c074 <ferror@plt+0x9074>
  40bf58:	cmp	w0, #0x4d
  40bf5c:	b.eq	40c024 <ferror@plt+0x9024>  // b.none
  40bf60:	cmp	w0, #0x52
  40bf64:	b.eq	40c044 <ferror@plt+0x9044>  // b.none
  40bf68:	b	40c074 <ferror@plt+0x9074>
  40bf6c:	ldr	w0, [sp, #12]
  40bf70:	cmp	w0, #0x0
  40bf74:	b.eq	40bf84 <ferror@plt+0x8f84>  // b.none
  40bf78:	ldr	w0, [sp, #12]
  40bf7c:	cmp	w0, #0x2
  40bf80:	b.ne	40bf90 <ferror@plt+0x8f90>  // b.any
  40bf84:	ldr	x0, [sp, #16]
  40bf88:	mov	w1, #0x1                   	// #1
  40bf8c:	strb	w1, [x0, #48]
  40bf90:	ldr	w0, [sp, #12]
  40bf94:	cmp	w0, #0x1
  40bf98:	b.eq	40bfa8 <ferror@plt+0x8fa8>  // b.none
  40bf9c:	ldr	w0, [sp, #12]
  40bfa0:	cmp	w0, #0x2
  40bfa4:	b.ne	40c07c <ferror@plt+0x907c>  // b.any
  40bfa8:	ldr	x0, [sp, #16]
  40bfac:	mov	w1, #0x1                   	// #1
  40bfb0:	strb	w1, [x0, #49]
  40bfb4:	b	40c07c <ferror@plt+0x907c>
  40bfb8:	ldr	x0, [sp, #16]
  40bfbc:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  40bfc0:	add	x1, x1, #0x7c0
  40bfc4:	str	x1, [x0, #32]
  40bfc8:	b	40c088 <ferror@plt+0x9088>
  40bfcc:	ldr	x0, [sp, #16]
  40bfd0:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  40bfd4:	add	x1, x1, #0x8c0
  40bfd8:	str	x1, [x0, #40]
  40bfdc:	b	40c088 <ferror@plt+0x9088>
  40bfe0:	ldr	x0, [sp, #16]
  40bfe4:	mov	w1, #0x1                   	// #1
  40bfe8:	strb	w1, [x0, #52]
  40bfec:	b	40c088 <ferror@plt+0x9088>
  40bff0:	ldr	x0, [sp, #16]
  40bff4:	mov	w1, #0x1                   	// #1
  40bff8:	strb	w1, [x0, #53]
  40bffc:	b	40c088 <ferror@plt+0x9088>
  40c000:	ldr	x0, [sp, #16]
  40c004:	ldr	x0, [x0, #32]
  40c008:	cmp	x0, #0x0
  40c00c:	b.ne	40c084 <ferror@plt+0x9084>  // b.any
  40c010:	ldr	x0, [sp, #16]
  40c014:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c018:	add	x1, x1, #0x6c0
  40c01c:	str	x1, [x0, #32]
  40c020:	b	40c084 <ferror@plt+0x9084>
  40c024:	ldr	x0, [sp, #16]
  40c028:	mov	w1, #0x1                   	// #1
  40c02c:	strb	w1, [x0, #54]
  40c030:	b	40c088 <ferror@plt+0x9088>
  40c034:	ldr	x0, [sp, #16]
  40c038:	mov	w1, #0x1                   	// #1
  40c03c:	strb	w1, [x0, #50]
  40c040:	b	40c088 <ferror@plt+0x9088>
  40c044:	ldr	x0, [sp, #16]
  40c048:	mov	w1, #0x1                   	// #1
  40c04c:	strb	w1, [x0, #51]
  40c050:	b	40c088 <ferror@plt+0x9088>
  40c054:	ldr	x0, [sp, #16]
  40c058:	mov	w1, #0x1                   	// #1
  40c05c:	strb	w1, [x0, #55]
  40c060:	b	40c088 <ferror@plt+0x9088>
  40c064:	ldr	x0, [sp, #16]
  40c068:	mov	w1, #0x1                   	// #1
  40c06c:	strb	w1, [x0, #56]
  40c070:	b	40c088 <ferror@plt+0x9088>
  40c074:	ldr	x0, [sp, #24]
  40c078:	b	40c0a8 <ferror@plt+0x90a8>
  40c07c:	nop
  40c080:	b	40c088 <ferror@plt+0x9088>
  40c084:	nop
  40c088:	ldr	x0, [sp, #24]
  40c08c:	add	x0, x0, #0x1
  40c090:	str	x0, [sp, #24]
  40c094:	ldr	x0, [sp, #24]
  40c098:	ldrb	w0, [x0]
  40c09c:	cmp	w0, #0x0
  40c0a0:	b.ne	40bec0 <ferror@plt+0x8ec0>  // b.any
  40c0a4:	ldr	x0, [sp, #24]
  40c0a8:	add	sp, sp, #0x20
  40c0ac:	ret
  40c0b0:	stp	x29, x30, [sp, #-32]!
  40c0b4:	mov	x29, sp
  40c0b8:	str	x0, [sp, #24]
  40c0bc:	mov	x2, #0x48                  	// #72
  40c0c0:	mov	w1, #0x0                   	// #0
  40c0c4:	ldr	x0, [sp, #24]
  40c0c8:	bl	402b30 <memset@plt>
  40c0cc:	ldr	x0, [sp, #24]
  40c0d0:	mov	x1, #0xffffffffffffffff    	// #-1
  40c0d4:	str	x1, [x0, #16]
  40c0d8:	ldr	x0, [sp, #24]
  40c0dc:	ldp	x29, x30, [sp], #32
  40c0e0:	ret
  40c0e4:	sub	sp, sp, #0x360
  40c0e8:	stp	x29, x30, [sp]
  40c0ec:	mov	x29, sp
  40c0f0:	str	x19, [sp, #16]
  40c0f4:	str	w0, [sp, #44]
  40c0f8:	str	x1, [sp, #32]
  40c0fc:	strb	wzr, [sp, #855]
  40c100:	str	wzr, [sp, #836]
  40c104:	strb	wzr, [sp, #835]
  40c108:	strb	wzr, [sp, #834]
  40c10c:	str	xzr, [sp, #824]
  40c110:	strb	wzr, [sp, #823]
  40c114:	str	xzr, [sp, #808]
  40c118:	str	xzr, [sp, #800]
  40c11c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c120:	add	x0, x0, #0xd08
  40c124:	bl	402f70 <getenv@plt>
  40c128:	cmp	x0, #0x0
  40c12c:	cset	w0, ne  // ne = any
  40c130:	strb	w0, [sp, #719]
  40c134:	bl	412f94 <ferror@plt+0xff94>
  40c138:	str	w0, [sp, #712]
  40c13c:	ldr	w1, [sp, #712]
  40c140:	mov	w0, #0xdaf                 	// #3503
  40c144:	movk	w0, #0x3, lsl #16
  40c148:	cmp	w1, w0
  40c14c:	b.le	40c164 <ferror@plt+0x9164>
  40c150:	ldr	w1, [sp, #712]
  40c154:	mov	w0, #0x1068                	// #4200
  40c158:	movk	w0, #0x3, lsl #16
  40c15c:	cmp	w1, w0
  40c160:	b.le	40c16c <ferror@plt+0x916c>
  40c164:	mov	w0, #0x1                   	// #1
  40c168:	b	40c170 <ferror@plt+0x9170>
  40c16c:	mov	w0, #0x0                   	// #0
  40c170:	strb	w0, [sp, #799]
  40c174:	ldrb	w0, [sp, #799]
  40c178:	and	w0, w0, #0x1
  40c17c:	strb	w0, [sp, #799]
  40c180:	str	xzr, [sp, #776]
  40c184:	str	xzr, [sp, #768]
  40c188:	ldr	x0, [sp, #32]
  40c18c:	ldr	x0, [x0]
  40c190:	bl	41303c <ferror@plt+0x1003c>
  40c194:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  40c198:	add	x1, x0, #0x18
  40c19c:	mov	w0, #0x6                   	// #6
  40c1a0:	bl	402ff0 <setlocale@plt>
  40c1a4:	cmp	x0, #0x0
  40c1a8:	cset	w0, ne  // ne = any
  40c1ac:	strb	w0, [sp, #767]
  40c1b0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c1b4:	add	x1, x0, #0xd18
  40c1b8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  40c1bc:	add	x0, x0, #0xe10
  40c1c0:	bl	402b00 <bindtextdomain@plt>
  40c1c4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  40c1c8:	add	x0, x0, #0xe10
  40c1cc:	bl	402ca0 <textdomain@plt>
  40c1d0:	mov	w0, #0x2                   	// #2
  40c1d4:	bl	4031d8 <ferror@plt+0x1d8>
  40c1d8:	mov	w0, #0x3                   	// #3
  40c1dc:	bl	410578 <ferror@plt+0xd578>
  40c1e0:	and	w1, w0, #0xff
  40c1e4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c1e8:	add	x0, x0, #0x598
  40c1ec:	strb	w1, [x0]
  40c1f0:	mov	w0, #0x2                   	// #2
  40c1f4:	bl	410578 <ferror@plt+0xd578>
  40c1f8:	and	w1, w0, #0xff
  40c1fc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c200:	add	x0, x0, #0x599
  40c204:	strb	w1, [x0]
  40c208:	bl	4029f0 <localeconv@plt>
  40c20c:	str	x0, [sp, #704]
  40c210:	ldr	x0, [sp, #704]
  40c214:	ldr	x0, [x0]
  40c218:	ldrb	w0, [x0]
  40c21c:	bl	403208 <ferror@plt+0x208>
  40c220:	and	w0, w0, #0xff
  40c224:	mov	w1, w0
  40c228:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c22c:	add	x0, x0, #0x590
  40c230:	str	w1, [x0]
  40c234:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c238:	add	x0, x0, #0x590
  40c23c:	ldr	w0, [x0]
  40c240:	cmp	w0, #0x0
  40c244:	b.eq	40c260 <ferror@plt+0x9260>  // b.none
  40c248:	ldr	x0, [sp, #704]
  40c24c:	ldr	x0, [x0]
  40c250:	add	x0, x0, #0x1
  40c254:	ldrb	w0, [x0]
  40c258:	cmp	w0, #0x0
  40c25c:	b.eq	40c270 <ferror@plt+0x9270>  // b.none
  40c260:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c264:	add	x0, x0, #0x590
  40c268:	mov	w1, #0x2e                  	// #46
  40c26c:	str	w1, [x0]
  40c270:	ldr	x0, [sp, #704]
  40c274:	ldr	x0, [x0, #8]
  40c278:	ldrb	w0, [x0]
  40c27c:	bl	403208 <ferror@plt+0x208>
  40c280:	and	w0, w0, #0xff
  40c284:	mov	w1, w0
  40c288:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c28c:	add	x0, x0, #0x594
  40c290:	str	w1, [x0]
  40c294:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c298:	add	x0, x0, #0x594
  40c29c:	ldr	w0, [x0]
  40c2a0:	cmp	w0, #0x0
  40c2a4:	b.eq	40c2c0 <ferror@plt+0x92c0>  // b.none
  40c2a8:	ldr	x0, [sp, #704]
  40c2ac:	ldr	x0, [x0, #8]
  40c2b0:	add	x0, x0, #0x1
  40c2b4:	ldrb	w0, [x0]
  40c2b8:	cmp	w0, #0x0
  40c2bc:	b.eq	40c2d0 <ferror@plt+0x92d0>  // b.none
  40c2c0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c2c4:	add	x0, x0, #0x594
  40c2c8:	mov	w1, #0xffffffff            	// #-1
  40c2cc:	str	w1, [x0]
  40c2d0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c2d4:	add	x0, x0, #0x9e3
  40c2d8:	strb	wzr, [x0]
  40c2dc:	bl	404a34 <ferror@plt+0x1a34>
  40c2e0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c2e4:	add	x0, x0, #0xa00
  40c2e8:	bl	402ad0 <sigemptyset@plt>
  40c2ec:	str	xzr, [sp, #752]
  40c2f0:	b	40c34c <ferror@plt+0x934c>
  40c2f4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40c2f8:	add	x0, x0, #0x3e8
  40c2fc:	ldr	x1, [sp, #752]
  40c300:	ldr	w0, [x0, x1, lsl #2]
  40c304:	add	x1, sp, #0x30
  40c308:	mov	x2, x1
  40c30c:	mov	x1, #0x0                   	// #0
  40c310:	bl	402bb0 <sigaction@plt>
  40c314:	ldr	x0, [sp, #48]
  40c318:	cmp	x0, #0x1
  40c31c:	b.eq	40c340 <ferror@plt+0x9340>  // b.none
  40c320:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40c324:	add	x0, x0, #0x3e8
  40c328:	ldr	x1, [sp, #752]
  40c32c:	ldr	w0, [x0, x1, lsl #2]
  40c330:	mov	w1, w0
  40c334:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c338:	add	x0, x0, #0xa00
  40c33c:	bl	402f00 <sigaddset@plt>
  40c340:	ldr	x0, [sp, #752]
  40c344:	add	x0, x0, #0x1
  40c348:	str	x0, [sp, #752]
  40c34c:	ldr	x0, [sp, #752]
  40c350:	cmp	x0, #0xa
  40c354:	b.ls	40c2f4 <ferror@plt+0x92f4>  // b.plast
  40c358:	adrp	x0, 40b000 <ferror@plt+0x8000>
  40c35c:	add	x0, x0, #0xe7c
  40c360:	str	x0, [sp, #48]
  40c364:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c368:	add	x1, x0, #0xa00
  40c36c:	add	x0, sp, #0x38
  40c370:	ldp	x2, x3, [x1]
  40c374:	stp	x2, x3, [x0]
  40c378:	ldp	x2, x3, [x1, #16]
  40c37c:	stp	x2, x3, [x0, #16]
  40c380:	ldp	x2, x3, [x1, #32]
  40c384:	stp	x2, x3, [x0, #32]
  40c388:	ldp	x2, x3, [x1, #48]
  40c38c:	stp	x2, x3, [x0, #48]
  40c390:	ldp	x2, x3, [x1, #64]
  40c394:	stp	x2, x3, [x0, #64]
  40c398:	ldp	x2, x3, [x1, #80]
  40c39c:	stp	x2, x3, [x0, #80]
  40c3a0:	ldp	x2, x3, [x1, #96]
  40c3a4:	stp	x2, x3, [x0, #96]
  40c3a8:	ldp	x2, x3, [x1, #112]
  40c3ac:	stp	x2, x3, [x0, #112]
  40c3b0:	str	wzr, [sp, #184]
  40c3b4:	str	xzr, [sp, #752]
  40c3b8:	b	40c40c <ferror@plt+0x940c>
  40c3bc:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40c3c0:	add	x0, x0, #0x3e8
  40c3c4:	ldr	x1, [sp, #752]
  40c3c8:	ldr	w0, [x0, x1, lsl #2]
  40c3cc:	mov	w1, w0
  40c3d0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c3d4:	add	x0, x0, #0xa00
  40c3d8:	bl	402cc0 <sigismember@plt>
  40c3dc:	cmp	w0, #0x0
  40c3e0:	b.eq	40c400 <ferror@plt+0x9400>  // b.none
  40c3e4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40c3e8:	add	x0, x0, #0x3e8
  40c3ec:	ldr	x1, [sp, #752]
  40c3f0:	ldr	w0, [x0, x1, lsl #2]
  40c3f4:	add	x1, sp, #0x30
  40c3f8:	mov	x2, #0x0                   	// #0
  40c3fc:	bl	402bb0 <sigaction@plt>
  40c400:	ldr	x0, [sp, #752]
  40c404:	add	x0, x0, #0x1
  40c408:	str	x0, [sp, #752]
  40c40c:	ldr	x0, [sp, #752]
  40c410:	cmp	x0, #0xa
  40c414:	b.ls	40c3bc <ferror@plt+0x93bc>  // b.plast
  40c418:	mov	x1, #0x0                   	// #0
  40c41c:	mov	w0, #0x11                  	// #17
  40c420:	bl	402a30 <signal@plt>
  40c424:	adrp	x0, 403000 <ferror@plt>
  40c428:	add	x0, x0, #0xdc8
  40c42c:	bl	41bda0 <_obstack_memory_used@@Base+0x1904>
  40c430:	add	x0, sp, #0x1f0
  40c434:	bl	40c0b0 <ferror@plt+0x90b0>
  40c438:	mov	x0, #0xffffffffffffffff    	// #-1
  40c43c:	str	x0, [sp, #496]
  40c440:	ldrsw	x0, [sp, #44]
  40c444:	mov	x1, #0x8                   	// #8
  40c448:	bl	4181a8 <ferror@plt+0x151a8>
  40c44c:	str	x0, [sp, #784]
  40c450:	mov	w0, #0xffffffff            	// #-1
  40c454:	str	w0, [sp, #204]
  40c458:	ldr	w0, [sp, #836]
  40c45c:	cmn	w0, #0x1
  40c460:	b.eq	40c590 <ferror@plt+0x9590>  // b.none
  40c464:	ldrb	w0, [sp, #719]
  40c468:	cmp	w0, #0x0
  40c46c:	b.eq	40c55c <ferror@plt+0x955c>  // b.none
  40c470:	ldr	x0, [sp, #800]
  40c474:	cmp	x0, #0x0
  40c478:	b.eq	40c55c <ferror@plt+0x955c>  // b.none
  40c47c:	ldrb	w0, [sp, #799]
  40c480:	eor	w0, w0, #0x1
  40c484:	and	w0, w0, #0xff
  40c488:	cmp	w0, #0x0
  40c48c:	b.ne	40c590 <ferror@plt+0x9590>  // b.any
  40c490:	ldrb	w0, [sp, #835]
  40c494:	cmp	w0, #0x0
  40c498:	b.ne	40c590 <ferror@plt+0x9590>  // b.any
  40c49c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c4a0:	add	x0, x0, #0x568
  40c4a4:	ldr	w0, [x0]
  40c4a8:	ldr	w1, [sp, #44]
  40c4ac:	cmp	w1, w0
  40c4b0:	b.eq	40c590 <ferror@plt+0x9590>  // b.none
  40c4b4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c4b8:	add	x0, x0, #0x568
  40c4bc:	ldr	w0, [x0]
  40c4c0:	sxtw	x0, w0
  40c4c4:	lsl	x0, x0, #3
  40c4c8:	ldr	x1, [sp, #32]
  40c4cc:	add	x0, x1, x0
  40c4d0:	ldr	x0, [x0]
  40c4d4:	ldrb	w0, [x0]
  40c4d8:	cmp	w0, #0x2d
  40c4dc:	b.ne	40c590 <ferror@plt+0x9590>  // b.any
  40c4e0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c4e4:	add	x0, x0, #0x568
  40c4e8:	ldr	w0, [x0]
  40c4ec:	sxtw	x0, w0
  40c4f0:	lsl	x0, x0, #3
  40c4f4:	ldr	x1, [sp, #32]
  40c4f8:	add	x0, x1, x0
  40c4fc:	ldr	x0, [x0]
  40c500:	add	x0, x0, #0x1
  40c504:	ldrb	w0, [x0]
  40c508:	cmp	w0, #0x6f
  40c50c:	b.ne	40c590 <ferror@plt+0x9590>  // b.any
  40c510:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c514:	add	x0, x0, #0x568
  40c518:	ldr	w0, [x0]
  40c51c:	sxtw	x0, w0
  40c520:	lsl	x0, x0, #3
  40c524:	ldr	x1, [sp, #32]
  40c528:	add	x0, x1, x0
  40c52c:	ldr	x0, [x0]
  40c530:	add	x0, x0, #0x2
  40c534:	ldrb	w0, [x0]
  40c538:	cmp	w0, #0x0
  40c53c:	b.ne	40c55c <ferror@plt+0x955c>  // b.any
  40c540:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c544:	add	x0, x0, #0x568
  40c548:	ldr	w0, [x0]
  40c54c:	add	w0, w0, #0x1
  40c550:	ldr	w1, [sp, #44]
  40c554:	cmp	w1, w0
  40c558:	b.eq	40c590 <ferror@plt+0x9590>  // b.none
  40c55c:	add	x0, sp, #0xcc
  40c560:	mov	x4, x0
  40c564:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c568:	add	x3, x0, #0x220
  40c56c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c570:	add	x2, x0, #0x48
  40c574:	ldr	x1, [sp, #32]
  40c578:	ldr	w0, [sp, #44]
  40c57c:	bl	402cb0 <getopt_long@plt>
  40c580:	str	w0, [sp, #836]
  40c584:	ldr	w0, [sp, #836]
  40c588:	cmn	w0, #0x1
  40c58c:	b.ne	40c608 <ferror@plt+0x9608>  // b.any
  40c590:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c594:	add	x0, x0, #0x568
  40c598:	ldr	w0, [x0]
  40c59c:	ldr	w1, [sp, #44]
  40c5a0:	cmp	w1, w0
  40c5a4:	b.gt	40c5b8 <ferror@plt+0x95b8>
  40c5a8:	ldr	x0, [sp, #776]
  40c5ac:	cmp	x0, #0x0
  40c5b0:	b.ne	40d12c <ferror@plt+0xa12c>  // b.any
  40c5b4:	b	40d370 <ferror@plt+0xa370>
  40c5b8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c5bc:	add	x0, x0, #0x568
  40c5c0:	ldr	w0, [x0]
  40c5c4:	add	w2, w0, #0x1
  40c5c8:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c5cc:	add	x1, x1, #0x568
  40c5d0:	str	w2, [x1]
  40c5d4:	sxtw	x0, w0
  40c5d8:	lsl	x0, x0, #3
  40c5dc:	ldr	x1, [sp, #32]
  40c5e0:	add	x1, x1, x0
  40c5e4:	ldr	x0, [sp, #800]
  40c5e8:	add	x2, x0, #0x1
  40c5ec:	str	x2, [sp, #800]
  40c5f0:	lsl	x0, x0, #3
  40c5f4:	ldr	x2, [sp, #784]
  40c5f8:	add	x0, x2, x0
  40c5fc:	ldr	x1, [x1]
  40c600:	str	x1, [x0]
  40c604:	b	40d128 <ferror@plt+0xa128>
  40c608:	ldr	w0, [sp, #836]
  40c60c:	cmp	w0, #0x107
  40c610:	b.gt	40d114 <ferror@plt+0xa114>
  40c614:	ldr	w0, [sp, #836]
  40c618:	cmp	w0, #0x43
  40c61c:	b.ge	40c654 <ferror@plt+0x9654>  // b.tcont
  40c620:	ldr	w0, [sp, #836]
  40c624:	cmp	w0, #0x1
  40c628:	b.eq	40c67c <ferror@plt+0x967c>  // b.none
  40c62c:	ldr	w0, [sp, #836]
  40c630:	cmp	w0, #0x1
  40c634:	b.gt	40d114 <ferror@plt+0xa114>
  40c638:	ldr	w0, [sp, #836]
  40c63c:	cmn	w0, #0x3
  40c640:	b.eq	40d0c4 <ferror@plt+0xa0c4>  // b.none
  40c644:	ldr	w0, [sp, #836]
  40c648:	cmn	w0, #0x2
  40c64c:	b.eq	40d0bc <ferror@plt+0xa0bc>  // b.none
  40c650:	b	40d114 <ferror@plt+0xa114>
  40c654:	ldr	w0, [sp, #836]
  40c658:	sub	w0, w0, #0x43
  40c65c:	cmp	w0, #0xc4
  40c660:	b.hi	40d114 <ferror@plt+0xa114>  // b.pmore
  40c664:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40c668:	add	x1, x1, #0xb0
  40c66c:	ldr	w0, [x1, w0, uxtw #2]
  40c670:	adr	x1, 40c67c <ferror@plt+0x967c>
  40c674:	add	x0, x1, w0, sxtw #2
  40c678:	br	x0
  40c67c:	str	xzr, [sp, #856]
  40c680:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c684:	add	x0, x0, #0x560
  40c688:	ldr	x0, [x0]
  40c68c:	ldrb	w0, [x0]
  40c690:	cmp	w0, #0x2b
  40c694:	b.ne	40c978 <ferror@plt+0x9978>  // b.any
  40c698:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c69c:	add	x0, x0, #0x568
  40c6a0:	ldr	w0, [x0]
  40c6a4:	ldr	w1, [sp, #44]
  40c6a8:	cmp	w1, w0
  40c6ac:	b.eq	40c718 <ferror@plt+0x9718>  // b.none
  40c6b0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c6b4:	add	x0, x0, #0x568
  40c6b8:	ldr	w0, [x0]
  40c6bc:	sxtw	x0, w0
  40c6c0:	lsl	x0, x0, #3
  40c6c4:	ldr	x1, [sp, #32]
  40c6c8:	add	x0, x1, x0
  40c6cc:	ldr	x0, [x0]
  40c6d0:	ldrb	w0, [x0]
  40c6d4:	cmp	w0, #0x2d
  40c6d8:	b.ne	40c718 <ferror@plt+0x9718>  // b.any
  40c6dc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c6e0:	add	x0, x0, #0x568
  40c6e4:	ldr	w0, [x0]
  40c6e8:	sxtw	x0, w0
  40c6ec:	lsl	x0, x0, #3
  40c6f0:	ldr	x1, [sp, #32]
  40c6f4:	add	x0, x1, x0
  40c6f8:	ldr	x0, [x0]
  40c6fc:	add	x0, x0, #0x1
  40c700:	ldrb	w0, [x0]
  40c704:	sub	w0, w0, #0x30
  40c708:	cmp	w0, #0x9
  40c70c:	b.hi	40c718 <ferror@plt+0x9718>  // b.pmore
  40c710:	mov	w0, #0x1                   	// #1
  40c714:	b	40c71c <ferror@plt+0x971c>
  40c718:	mov	w0, #0x0                   	// #0
  40c71c:	strb	w0, [sp, #703]
  40c720:	ldrb	w0, [sp, #703]
  40c724:	and	w0, w0, #0x1
  40c728:	strb	w0, [sp, #703]
  40c72c:	ldrb	w1, [sp, #799]
  40c730:	ldrb	w0, [sp, #703]
  40c734:	cmp	w0, #0x0
  40c738:	b.eq	40c758 <ferror@plt+0x9758>  // b.none
  40c73c:	ldrb	w0, [sp, #719]
  40c740:	eor	w0, w0, #0x1
  40c744:	and	w0, w0, #0xff
  40c748:	cmp	w0, #0x0
  40c74c:	b.eq	40c758 <ferror@plt+0x9758>  // b.none
  40c750:	mov	w0, #0x1                   	// #1
  40c754:	b	40c75c <ferror@plt+0x975c>
  40c758:	mov	w0, #0x0                   	// #0
  40c75c:	orr	w0, w0, w1
  40c760:	cmp	w0, #0x0
  40c764:	cset	w0, ne  // ne = any
  40c768:	strb	w0, [sp, #799]
  40c76c:	ldrb	w0, [sp, #799]
  40c770:	cmp	w0, #0x0
  40c774:	b.eq	40c978 <ferror@plt+0x9978>  // b.none
  40c778:	add	x0, sp, #0x238
  40c77c:	bl	40c0b0 <ferror@plt+0x90b0>
  40c780:	str	x0, [sp, #856]
  40c784:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c788:	add	x0, x0, #0x560
  40c78c:	ldr	x0, [x0]
  40c790:	add	x0, x0, #0x1
  40c794:	ldr	x1, [sp, #856]
  40c798:	mov	x2, #0x0                   	// #0
  40c79c:	bl	40bd6c <ferror@plt+0x8d6c>
  40c7a0:	str	x0, [sp, #840]
  40c7a4:	ldr	x0, [sp, #840]
  40c7a8:	cmp	x0, #0x0
  40c7ac:	b.eq	40c7e4 <ferror@plt+0x97e4>  // b.none
  40c7b0:	ldr	x0, [sp, #840]
  40c7b4:	ldrb	w0, [x0]
  40c7b8:	cmp	w0, #0x2e
  40c7bc:	b.ne	40c7e4 <ferror@plt+0x97e4>  // b.any
  40c7c0:	ldr	x0, [sp, #840]
  40c7c4:	add	x3, x0, #0x1
  40c7c8:	ldr	x0, [sp, #856]
  40c7cc:	add	x0, x0, #0x8
  40c7d0:	mov	x2, #0x0                   	// #0
  40c7d4:	mov	x1, x0
  40c7d8:	mov	x0, x3
  40c7dc:	bl	40bd6c <ferror@plt+0x8d6c>
  40c7e0:	str	x0, [sp, #840]
  40c7e4:	ldr	x0, [sp, #856]
  40c7e8:	ldr	x0, [x0]
  40c7ec:	cmp	x0, #0x0
  40c7f0:	b.ne	40c810 <ferror@plt+0x9810>  // b.any
  40c7f4:	ldr	x0, [sp, #856]
  40c7f8:	ldr	x0, [x0, #8]
  40c7fc:	cmp	x0, #0x0
  40c800:	b.ne	40c810 <ferror@plt+0x9810>  // b.any
  40c804:	ldr	x0, [sp, #856]
  40c808:	mov	x1, #0xffffffffffffffff    	// #-1
  40c80c:	str	x1, [x0]
  40c810:	ldr	x0, [sp, #840]
  40c814:	cmp	x0, #0x0
  40c818:	b.eq	40c838 <ferror@plt+0x9838>  // b.none
  40c81c:	mov	w2, #0x0                   	// #0
  40c820:	ldr	x1, [sp, #856]
  40c824:	ldr	x0, [sp, #840]
  40c828:	bl	40beac <ferror@plt+0x8eac>
  40c82c:	ldrb	w0, [x0]
  40c830:	cmp	w0, #0x0
  40c834:	b.eq	40c840 <ferror@plt+0x9840>  // b.none
  40c838:	str	xzr, [sp, #856]
  40c83c:	b	40c978 <ferror@plt+0x9978>
  40c840:	ldrb	w0, [sp, #703]
  40c844:	cmp	w0, #0x0
  40c848:	b.eq	40c964 <ferror@plt+0x9964>  // b.none
  40c84c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c850:	add	x0, x0, #0x568
  40c854:	ldr	w0, [x0]
  40c858:	add	w2, w0, #0x1
  40c85c:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c860:	add	x1, x1, #0x568
  40c864:	str	w2, [x1]
  40c868:	sxtw	x0, w0
  40c86c:	lsl	x0, x0, #3
  40c870:	ldr	x1, [sp, #32]
  40c874:	add	x0, x1, x0
  40c878:	ldr	x0, [x0]
  40c87c:	str	x0, [sp, #688]
  40c880:	ldr	x0, [sp, #688]
  40c884:	add	x3, x0, #0x1
  40c888:	ldr	x0, [sp, #856]
  40c88c:	add	x1, x0, #0x10
  40c890:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c894:	add	x2, x0, #0xd30
  40c898:	mov	x0, x3
  40c89c:	bl	40bd6c <ferror@plt+0x8d6c>
  40c8a0:	str	x0, [sp, #840]
  40c8a4:	ldr	x0, [sp, #840]
  40c8a8:	cmp	x0, #0x0
  40c8ac:	b.ne	40c8d0 <ferror@plt+0x98d0>  // b.any
  40c8b0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40c8b4:	add	x3, x0, #0x418
  40c8b8:	mov	w2, #0x1112                	// #4370
  40c8bc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c8c0:	add	x1, x0, #0x740
  40c8c4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c8c8:	add	x0, x0, #0xd50
  40c8cc:	bl	402f40 <__assert_fail@plt>
  40c8d0:	ldr	x0, [sp, #840]
  40c8d4:	ldrb	w0, [x0]
  40c8d8:	cmp	w0, #0x2e
  40c8dc:	b.ne	40c904 <ferror@plt+0x9904>  // b.any
  40c8e0:	ldr	x0, [sp, #840]
  40c8e4:	add	x3, x0, #0x1
  40c8e8:	ldr	x0, [sp, #856]
  40c8ec:	add	x1, x0, #0x18
  40c8f0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c8f4:	add	x2, x0, #0xd58
  40c8f8:	mov	x0, x3
  40c8fc:	bl	40bd6c <ferror@plt+0x8d6c>
  40c900:	str	x0, [sp, #840]
  40c904:	ldr	x0, [sp, #856]
  40c908:	ldr	x0, [x0, #24]
  40c90c:	cmp	x0, #0x0
  40c910:	b.ne	40c938 <ferror@plt+0x9938>  // b.any
  40c914:	ldr	x0, [sp, #856]
  40c918:	ldr	x0, [x0, #16]
  40c91c:	cmp	x0, #0x0
  40c920:	b.eq	40c938 <ferror@plt+0x9938>  // b.none
  40c924:	ldr	x0, [sp, #856]
  40c928:	ldr	x0, [x0, #16]
  40c92c:	sub	x1, x0, #0x1
  40c930:	ldr	x0, [sp, #856]
  40c934:	str	x1, [x0, #16]
  40c938:	mov	w2, #0x1                   	// #1
  40c93c:	ldr	x1, [sp, #856]
  40c940:	ldr	x0, [sp, #840]
  40c944:	bl	40beac <ferror@plt+0x8eac>
  40c948:	ldrb	w0, [x0]
  40c94c:	cmp	w0, #0x0
  40c950:	b.eq	40c964 <ferror@plt+0x9964>  // b.none
  40c954:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c958:	add	x1, x0, #0xd78
  40c95c:	ldr	x0, [sp, #688]
  40c960:	bl	40bbfc <ferror@plt+0x8bfc>
  40c964:	ldr	x0, [sp, #856]
  40c968:	mov	w1, #0x1                   	// #1
  40c96c:	strb	w1, [x0, #57]
  40c970:	ldr	x0, [sp, #856]
  40c974:	bl	40bb90 <ferror@plt+0x8b90>
  40c978:	ldr	x0, [sp, #856]
  40c97c:	cmp	x0, #0x0
  40c980:	b.ne	40d11c <ferror@plt+0xa11c>  // b.any
  40c984:	ldr	x0, [sp, #800]
  40c988:	add	x1, x0, #0x1
  40c98c:	str	x1, [sp, #800]
  40c990:	lsl	x0, x0, #3
  40c994:	ldr	x1, [sp, #784]
  40c998:	add	x0, x1, x0
  40c99c:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c9a0:	add	x1, x1, #0x560
  40c9a4:	ldr	x1, [x1]
  40c9a8:	str	x1, [x0]
  40c9ac:	b	40d11c <ferror@plt+0xa11c>
  40c9b0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c9b4:	add	x0, x0, #0x560
  40c9b8:	ldr	x1, [x0]
  40c9bc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40c9c0:	add	x0, x0, #0x4e0
  40c9c4:	ldr	x0, [x0]
  40c9c8:	mov	x5, x0
  40c9cc:	mov	x4, #0x1                   	// #1
  40c9d0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c9d4:	add	x3, x0, #0x6b8
  40c9d8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c9dc:	add	x2, x0, #0x680
  40c9e0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c9e4:	add	x0, x0, #0xd98
  40c9e8:	bl	40dc4c <ferror@plt+0xac4c>
  40c9ec:	mov	x1, x0
  40c9f0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40c9f4:	add	x0, x0, #0x6b8
  40c9f8:	ldrb	w0, [x0, x1]
  40c9fc:	str	w0, [sp, #836]
  40ca00:	ldr	w0, [sp, #836]
  40ca04:	and	w0, w0, #0xff
  40ca08:	strb	w0, [sp, #200]
  40ca0c:	strb	wzr, [sp, #201]
  40ca10:	add	x1, sp, #0x1f0
  40ca14:	add	x0, sp, #0xc8
  40ca18:	mov	w2, #0x2                   	// #2
  40ca1c:	bl	40beac <ferror@plt+0x8eac>
  40ca20:	b	40d128 <ferror@plt+0xa128>
  40ca24:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40ca28:	add	x0, x0, #0x560
  40ca2c:	ldr	x0, [x0]
  40ca30:	cmp	x0, #0x0
  40ca34:	b.eq	40ca88 <ferror@plt+0x9a88>  // b.none
  40ca38:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40ca3c:	add	x0, x0, #0x560
  40ca40:	ldr	x1, [x0]
  40ca44:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40ca48:	add	x0, x0, #0x4e0
  40ca4c:	ldr	x0, [x0]
  40ca50:	mov	x5, x0
  40ca54:	mov	x4, #0x1                   	// #1
  40ca58:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40ca5c:	add	x3, x0, #0x640
  40ca60:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40ca64:	add	x2, x0, #0x620
  40ca68:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40ca6c:	add	x0, x0, #0xda0
  40ca70:	bl	40dc4c <ferror@plt+0xac4c>
  40ca74:	mov	x1, x0
  40ca78:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40ca7c:	add	x0, x0, #0x640
  40ca80:	ldrb	w0, [x0, x1]
  40ca84:	b	40ca8c <ferror@plt+0x9a8c>
  40ca88:	mov	w0, #0x63                  	// #99
  40ca8c:	str	w0, [sp, #836]
  40ca90:	ldrb	w0, [sp, #835]
  40ca94:	cmp	w0, #0x0
  40ca98:	b.eq	40cab8 <ferror@plt+0x9ab8>  // b.none
  40ca9c:	ldrb	w0, [sp, #835]
  40caa0:	ldr	w1, [sp, #836]
  40caa4:	cmp	w1, w0
  40caa8:	b.eq	40cab8 <ferror@plt+0x9ab8>  // b.none
  40caac:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cab0:	add	x0, x0, #0xda8
  40cab4:	bl	40bc4c <ferror@plt+0x8c4c>
  40cab8:	ldr	w0, [sp, #836]
  40cabc:	strb	w0, [sp, #835]
  40cac0:	b	40d128 <ferror@plt+0xa128>
  40cac4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cac8:	add	x0, x0, #0x9f0
  40cacc:	ldr	x0, [x0]
  40cad0:	cmp	x0, #0x0
  40cad4:	b.eq	40cb20 <ferror@plt+0x9b20>  // b.none
  40cad8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cadc:	add	x0, x0, #0x9f0
  40cae0:	ldr	x2, [x0]
  40cae4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cae8:	add	x0, x0, #0x560
  40caec:	ldr	x0, [x0]
  40caf0:	mov	x1, x0
  40caf4:	mov	x0, x2
  40caf8:	bl	402cd0 <strcmp@plt>
  40cafc:	cmp	w0, #0x0
  40cb00:	b.eq	40cb20 <ferror@plt+0x9b20>  // b.none
  40cb04:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cb08:	add	x0, x0, #0xdb0
  40cb0c:	bl	402fd0 <gettext@plt>
  40cb10:	mov	x2, x0
  40cb14:	mov	w1, #0x0                   	// #0
  40cb18:	mov	w0, #0x2                   	// #2
  40cb1c:	bl	402920 <error@plt>
  40cb20:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cb24:	add	x0, x0, #0x560
  40cb28:	ldr	x1, [x0]
  40cb2c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cb30:	add	x0, x0, #0x9f0
  40cb34:	str	x1, [x0]
  40cb38:	b	40d128 <ferror@plt+0xa128>
  40cb3c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cb40:	add	x0, x0, #0x9f8
  40cb44:	mov	w1, #0x1                   	// #1
  40cb48:	strb	w1, [x0]
  40cb4c:	b	40d128 <ferror@plt+0xa128>
  40cb50:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cb54:	add	x0, x0, #0x560
  40cb58:	ldr	x0, [x0]
  40cb5c:	str	x0, [sp, #776]
  40cb60:	b	40d128 <ferror@plt+0xa128>
  40cb64:	add	x0, sp, #0x238
  40cb68:	bl	40c0b0 <ferror@plt+0x90b0>
  40cb6c:	str	x0, [sp, #856]
  40cb70:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cb74:	add	x0, x0, #0x560
  40cb78:	ldr	x3, [x0]
  40cb7c:	ldr	x1, [sp, #856]
  40cb80:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cb84:	add	x2, x0, #0xdd8
  40cb88:	mov	x0, x3
  40cb8c:	bl	40bd6c <ferror@plt+0x8d6c>
  40cb90:	str	x0, [sp, #840]
  40cb94:	ldr	x0, [sp, #856]
  40cb98:	ldr	x0, [x0]
  40cb9c:	sub	x2, x0, #0x1
  40cba0:	ldr	x1, [sp, #856]
  40cba4:	str	x2, [x1]
  40cba8:	cmp	x0, #0x0
  40cbac:	b.ne	40cbcc <ferror@plt+0x9bcc>  // b.any
  40cbb0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cbb4:	add	x0, x0, #0x560
  40cbb8:	ldr	x2, [x0]
  40cbbc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cbc0:	add	x1, x0, #0xdf8
  40cbc4:	mov	x0, x2
  40cbc8:	bl	40bbfc <ferror@plt+0x8bfc>
  40cbcc:	ldr	x0, [sp, #840]
  40cbd0:	ldrb	w0, [x0]
  40cbd4:	cmp	w0, #0x2e
  40cbd8:	b.ne	40cc38 <ferror@plt+0x9c38>  // b.any
  40cbdc:	ldr	x0, [sp, #840]
  40cbe0:	add	x3, x0, #0x1
  40cbe4:	ldr	x0, [sp, #856]
  40cbe8:	add	x1, x0, #0x8
  40cbec:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cbf0:	add	x2, x0, #0xd58
  40cbf4:	mov	x0, x3
  40cbf8:	bl	40bd6c <ferror@plt+0x8d6c>
  40cbfc:	str	x0, [sp, #840]
  40cc00:	ldr	x0, [sp, #856]
  40cc04:	ldr	x0, [x0, #8]
  40cc08:	sub	x2, x0, #0x1
  40cc0c:	ldr	x1, [sp, #856]
  40cc10:	str	x2, [x1, #8]
  40cc14:	cmp	x0, #0x0
  40cc18:	b.ne	40cc38 <ferror@plt+0x9c38>  // b.any
  40cc1c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cc20:	add	x0, x0, #0x560
  40cc24:	ldr	x2, [x0]
  40cc28:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cc2c:	add	x1, x0, #0xe10
  40cc30:	mov	x0, x2
  40cc34:	bl	40bbfc <ferror@plt+0x8bfc>
  40cc38:	ldr	x0, [sp, #856]
  40cc3c:	ldr	x0, [x0]
  40cc40:	cmp	x0, #0x0
  40cc44:	b.ne	40cc64 <ferror@plt+0x9c64>  // b.any
  40cc48:	ldr	x0, [sp, #856]
  40cc4c:	ldr	x0, [x0, #8]
  40cc50:	cmp	x0, #0x0
  40cc54:	b.ne	40cc64 <ferror@plt+0x9c64>  // b.any
  40cc58:	ldr	x0, [sp, #856]
  40cc5c:	mov	x1, #0xffffffffffffffff    	// #-1
  40cc60:	str	x1, [x0]
  40cc64:	mov	w2, #0x0                   	// #0
  40cc68:	ldr	x1, [sp, #856]
  40cc6c:	ldr	x0, [sp, #840]
  40cc70:	bl	40beac <ferror@plt+0x8eac>
  40cc74:	str	x0, [sp, #840]
  40cc78:	ldr	x0, [sp, #840]
  40cc7c:	ldrb	w0, [x0]
  40cc80:	cmp	w0, #0x2c
  40cc84:	b.eq	40cca0 <ferror@plt+0x9ca0>  // b.none
  40cc88:	ldr	x0, [sp, #856]
  40cc8c:	mov	x1, #0xffffffffffffffff    	// #-1
  40cc90:	str	x1, [x0, #16]
  40cc94:	ldr	x0, [sp, #856]
  40cc98:	str	xzr, [x0, #24]
  40cc9c:	b	40cd44 <ferror@plt+0x9d44>
  40cca0:	ldr	x0, [sp, #840]
  40cca4:	add	x3, x0, #0x1
  40cca8:	ldr	x0, [sp, #856]
  40ccac:	add	x1, x0, #0x10
  40ccb0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40ccb4:	add	x2, x0, #0xe30
  40ccb8:	mov	x0, x3
  40ccbc:	bl	40bd6c <ferror@plt+0x8d6c>
  40ccc0:	str	x0, [sp, #840]
  40ccc4:	ldr	x0, [sp, #856]
  40ccc8:	ldr	x0, [x0, #16]
  40cccc:	sub	x2, x0, #0x1
  40ccd0:	ldr	x1, [sp, #856]
  40ccd4:	str	x2, [x1, #16]
  40ccd8:	cmp	x0, #0x0
  40ccdc:	b.ne	40ccfc <ferror@plt+0x9cfc>  // b.any
  40cce0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cce4:	add	x0, x0, #0x560
  40cce8:	ldr	x2, [x0]
  40ccec:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40ccf0:	add	x1, x0, #0xdf8
  40ccf4:	mov	x0, x2
  40ccf8:	bl	40bbfc <ferror@plt+0x8bfc>
  40ccfc:	ldr	x0, [sp, #840]
  40cd00:	ldrb	w0, [x0]
  40cd04:	cmp	w0, #0x2e
  40cd08:	b.ne	40cd30 <ferror@plt+0x9d30>  // b.any
  40cd0c:	ldr	x0, [sp, #840]
  40cd10:	add	x3, x0, #0x1
  40cd14:	ldr	x0, [sp, #856]
  40cd18:	add	x1, x0, #0x18
  40cd1c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cd20:	add	x2, x0, #0xd58
  40cd24:	mov	x0, x3
  40cd28:	bl	40bd6c <ferror@plt+0x8d6c>
  40cd2c:	str	x0, [sp, #840]
  40cd30:	mov	w2, #0x1                   	// #1
  40cd34:	ldr	x1, [sp, #856]
  40cd38:	ldr	x0, [sp, #840]
  40cd3c:	bl	40beac <ferror@plt+0x8eac>
  40cd40:	str	x0, [sp, #840]
  40cd44:	ldr	x0, [sp, #840]
  40cd48:	ldrb	w0, [x0]
  40cd4c:	cmp	w0, #0x0
  40cd50:	b.eq	40cd70 <ferror@plt+0x9d70>  // b.none
  40cd54:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cd58:	add	x0, x0, #0x560
  40cd5c:	ldr	x2, [x0]
  40cd60:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cd64:	add	x1, x0, #0xd78
  40cd68:	mov	x0, x2
  40cd6c:	bl	40bbfc <ferror@plt+0x8bfc>
  40cd70:	ldr	x0, [sp, #856]
  40cd74:	bl	40bb90 <ferror@plt+0x8b90>
  40cd78:	b	40d128 <ferror@plt+0xa128>
  40cd7c:	mov	w0, #0x1                   	// #1
  40cd80:	strb	w0, [sp, #834]
  40cd84:	b	40d128 <ferror@plt+0xa128>
  40cd88:	ldr	w3, [sp, #204]
  40cd8c:	ldr	w0, [sp, #836]
  40cd90:	and	w1, w0, #0xff
  40cd94:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cd98:	add	x0, x0, #0x560
  40cd9c:	ldr	x0, [x0]
  40cda0:	mov	x2, x0
  40cda4:	mov	w0, w3
  40cda8:	bl	404cf8 <ferror@plt+0x1cf8>
  40cdac:	b	40d128 <ferror@plt+0xa128>
  40cdb0:	ldr	x0, [sp, #768]
  40cdb4:	cmp	x0, #0x0
  40cdb8:	b.eq	40cdf8 <ferror@plt+0x9df8>  // b.none
  40cdbc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cdc0:	add	x0, x0, #0x560
  40cdc4:	ldr	x0, [x0]
  40cdc8:	mov	x1, x0
  40cdcc:	ldr	x0, [sp, #768]
  40cdd0:	bl	402cd0 <strcmp@plt>
  40cdd4:	cmp	w0, #0x0
  40cdd8:	b.eq	40cdf8 <ferror@plt+0x9df8>  // b.none
  40cddc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cde0:	add	x0, x0, #0xe50
  40cde4:	bl	402fd0 <gettext@plt>
  40cde8:	mov	x2, x0
  40cdec:	mov	w1, #0x0                   	// #0
  40cdf0:	mov	w0, #0x2                   	// #2
  40cdf4:	bl	402920 <error@plt>
  40cdf8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cdfc:	add	x0, x0, #0x560
  40ce00:	ldr	x0, [x0]
  40ce04:	str	x0, [sp, #768]
  40ce08:	b	40d128 <ferror@plt+0xa128>
  40ce0c:	ldr	x0, [sp, #824]
  40ce10:	cmp	x0, #0x0
  40ce14:	b.eq	40ce54 <ferror@plt+0x9e54>  // b.none
  40ce18:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40ce1c:	add	x0, x0, #0x560
  40ce20:	ldr	x0, [x0]
  40ce24:	mov	x1, x0
  40ce28:	ldr	x0, [sp, #824]
  40ce2c:	bl	402cd0 <strcmp@plt>
  40ce30:	cmp	w0, #0x0
  40ce34:	b.eq	40ce54 <ferror@plt+0x9e54>  // b.none
  40ce38:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40ce3c:	add	x0, x0, #0xe70
  40ce40:	bl	402fd0 <gettext@plt>
  40ce44:	mov	x2, x0
  40ce48:	mov	w1, #0x0                   	// #0
  40ce4c:	mov	w0, #0x2                   	// #2
  40ce50:	bl	402920 <error@plt>
  40ce54:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40ce58:	add	x0, x0, #0x560
  40ce5c:	ldr	x0, [x0]
  40ce60:	str	x0, [sp, #824]
  40ce64:	b	40d128 <ferror@plt+0xa128>
  40ce68:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40ce6c:	add	x0, x0, #0x9e1
  40ce70:	mov	w1, #0x1                   	// #1
  40ce74:	strb	w1, [x0]
  40ce78:	b	40d128 <ferror@plt+0xa128>
  40ce7c:	ldr	w3, [sp, #204]
  40ce80:	ldr	w0, [sp, #836]
  40ce84:	and	w1, w0, #0xff
  40ce88:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40ce8c:	add	x0, x0, #0x560
  40ce90:	ldr	x0, [x0]
  40ce94:	mov	x2, x0
  40ce98:	mov	w0, w3
  40ce9c:	bl	404f3c <ferror@plt+0x1f3c>
  40cea0:	b	40d128 <ferror@plt+0xa128>
  40cea4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cea8:	add	x0, x0, #0x560
  40ceac:	ldr	x0, [x0]
  40ceb0:	ldrb	w0, [x0]
  40ceb4:	strb	w0, [sp, #751]
  40ceb8:	ldrb	w0, [sp, #751]
  40cebc:	cmp	w0, #0x0
  40cec0:	b.ne	40cee0 <ferror@plt+0x9ee0>  // b.any
  40cec4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cec8:	add	x0, x0, #0xe98
  40cecc:	bl	402fd0 <gettext@plt>
  40ced0:	mov	x2, x0
  40ced4:	mov	w1, #0x0                   	// #0
  40ced8:	mov	w0, #0x2                   	// #2
  40cedc:	bl	402920 <error@plt>
  40cee0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cee4:	add	x0, x0, #0x560
  40cee8:	ldr	x0, [x0]
  40ceec:	add	x0, x0, #0x1
  40cef0:	ldrb	w0, [x0]
  40cef4:	cmp	w0, #0x0
  40cef8:	b.eq	40cf5c <ferror@plt+0x9f5c>  // b.none
  40cefc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cf00:	add	x0, x0, #0x560
  40cf04:	ldr	x2, [x0]
  40cf08:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cf0c:	add	x1, x0, #0xea8
  40cf10:	mov	x0, x2
  40cf14:	bl	402cd0 <strcmp@plt>
  40cf18:	cmp	w0, #0x0
  40cf1c:	b.ne	40cf28 <ferror@plt+0x9f28>  // b.any
  40cf20:	strb	wzr, [sp, #751]
  40cf24:	b	40cf5c <ferror@plt+0x9f5c>
  40cf28:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cf2c:	add	x0, x0, #0xeb0
  40cf30:	bl	402fd0 <gettext@plt>
  40cf34:	mov	x19, x0
  40cf38:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cf3c:	add	x0, x0, #0x560
  40cf40:	ldr	x0, [x0]
  40cf44:	bl	415354 <ferror@plt+0x12354>
  40cf48:	mov	x3, x0
  40cf4c:	mov	x2, x19
  40cf50:	mov	w1, #0x0                   	// #0
  40cf54:	mov	w0, #0x2                   	// #2
  40cf58:	bl	402920 <error@plt>
  40cf5c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cf60:	add	x0, x0, #0x4b0
  40cf64:	ldr	w0, [x0]
  40cf68:	cmp	w0, #0x100
  40cf6c:	b.eq	40cfa4 <ferror@plt+0x9fa4>  // b.none
  40cf70:	ldrb	w1, [sp, #751]
  40cf74:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cf78:	add	x0, x0, #0x4b0
  40cf7c:	ldr	w0, [x0]
  40cf80:	cmp	w1, w0
  40cf84:	b.eq	40cfa4 <ferror@plt+0x9fa4>  // b.none
  40cf88:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40cf8c:	add	x0, x0, #0xec8
  40cf90:	bl	402fd0 <gettext@plt>
  40cf94:	mov	x2, x0
  40cf98:	mov	w1, #0x0                   	// #0
  40cf9c:	mov	w0, #0x2                   	// #2
  40cfa0:	bl	402920 <error@plt>
  40cfa4:	ldrb	w1, [sp, #751]
  40cfa8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cfac:	add	x0, x0, #0x4b0
  40cfb0:	str	w1, [x0]
  40cfb4:	b	40d128 <ferror@plt+0xa128>
  40cfb8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cfbc:	add	x0, x0, #0x560
  40cfc0:	ldr	x0, [x0]
  40cfc4:	bl	404834 <ferror@plt+0x1834>
  40cfc8:	b	40d128 <ferror@plt+0xa128>
  40cfcc:	ldr	w3, [sp, #204]
  40cfd0:	ldr	w0, [sp, #836]
  40cfd4:	and	w1, w0, #0xff
  40cfd8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cfdc:	add	x0, x0, #0x560
  40cfe0:	ldr	x0, [x0]
  40cfe4:	mov	x2, x0
  40cfe8:	mov	w0, w3
  40cfec:	bl	405138 <ferror@plt+0x2138>
  40cff0:	str	x0, [sp, #808]
  40cff4:	b	40d128 <ferror@plt+0xa128>
  40cff8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40cffc:	add	x0, x0, #0x9e2
  40d000:	mov	w1, #0x1                   	// #1
  40d004:	strb	w1, [x0]
  40d008:	b	40d128 <ferror@plt+0xa128>
  40d00c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d010:	add	x0, x0, #0x568
  40d014:	ldr	w0, [x0]
  40d018:	sxtw	x0, w0
  40d01c:	lsl	x0, x0, #3
  40d020:	sub	x0, x0, #0x8
  40d024:	ldr	x1, [sp, #32]
  40d028:	add	x0, x1, x0
  40d02c:	ldr	x1, [x0]
  40d030:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d034:	add	x0, x0, #0x560
  40d038:	ldr	x0, [x0]
  40d03c:	cmp	x1, x0
  40d040:	b.ne	40d124 <ferror@plt+0xa124>  // b.any
  40d044:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d048:	add	x0, x0, #0x560
  40d04c:	ldr	x0, [x0]
  40d050:	str	x0, [sp, #736]
  40d054:	b	40d064 <ferror@plt+0xa064>
  40d058:	ldr	x0, [sp, #736]
  40d05c:	add	x0, x0, #0x1
  40d060:	str	x0, [sp, #736]
  40d064:	ldr	x0, [sp, #736]
  40d068:	ldrb	w0, [x0]
  40d06c:	sub	w0, w0, #0x30
  40d070:	cmp	w0, #0x9
  40d074:	b.ls	40d058 <ferror@plt+0xa058>  // b.plast
  40d078:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d07c:	add	x0, x0, #0x568
  40d080:	ldr	w0, [x0]
  40d084:	ldr	x1, [sp, #736]
  40d088:	ldrb	w1, [x1]
  40d08c:	cmp	w1, #0x0
  40d090:	cset	w1, ne  // ne = any
  40d094:	and	w1, w1, #0xff
  40d098:	sub	w1, w0, w1
  40d09c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d0a0:	add	x0, x0, #0x568
  40d0a4:	str	w1, [x0]
  40d0a8:	b	40d124 <ferror@plt+0xa124>
  40d0ac:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d0b0:	add	x0, x0, #0x3e0
  40d0b4:	strb	wzr, [x0]
  40d0b8:	b	40d128 <ferror@plt+0xa128>
  40d0bc:	mov	w0, #0x0                   	// #0
  40d0c0:	bl	4035bc <ferror@plt+0x5bc>
  40d0c4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d0c8:	add	x0, x0, #0x570
  40d0cc:	ldr	x7, [x0]
  40d0d0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d0d4:	add	x0, x0, #0x4d8
  40d0d8:	ldr	x1, [x0]
  40d0dc:	mov	x6, #0x0                   	// #0
  40d0e0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d0e4:	add	x5, x0, #0xee0
  40d0e8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d0ec:	add	x4, x0, #0xef0
  40d0f0:	mov	x3, x1
  40d0f4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xb64>
  40d0f8:	add	x2, x0, #0xf50
  40d0fc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d100:	add	x1, x0, #0x40
  40d104:	mov	x0, x7
  40d108:	bl	418074 <ferror@plt+0x15074>
  40d10c:	mov	w0, #0x0                   	// #0
  40d110:	bl	402900 <exit@plt>
  40d114:	mov	w0, #0x2                   	// #2
  40d118:	bl	4035bc <ferror@plt+0x5bc>
  40d11c:	nop
  40d120:	b	40c450 <ferror@plt+0x9450>
  40d124:	nop
  40d128:	b	40c450 <ferror@plt+0x9450>
  40d12c:	ldr	x0, [sp, #800]
  40d130:	cmp	x0, #0x0
  40d134:	b.eq	40d1a4 <ferror@plt+0xa1a4>  // b.none
  40d138:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d13c:	add	x0, x0, #0xf00
  40d140:	bl	402fd0 <gettext@plt>
  40d144:	mov	x19, x0
  40d148:	ldr	x0, [sp, #784]
  40d14c:	ldr	x0, [x0]
  40d150:	mov	x1, x0
  40d154:	mov	w0, #0x4                   	// #4
  40d158:	bl	415004 <ferror@plt+0x12004>
  40d15c:	mov	x3, x0
  40d160:	mov	x2, x19
  40d164:	mov	w1, #0x0                   	// #0
  40d168:	mov	w0, #0x0                   	// #0
  40d16c:	bl	402920 <error@plt>
  40d170:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d174:	add	x0, x0, #0x558
  40d178:	ldr	x19, [x0]
  40d17c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d180:	add	x0, x0, #0xf18
  40d184:	bl	402fd0 <gettext@plt>
  40d188:	mov	x2, x0
  40d18c:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d190:	add	x1, x0, #0xf50
  40d194:	mov	x0, x19
  40d198:	bl	402fe0 <fprintf@plt>
  40d19c:	mov	w0, #0x2                   	// #2
  40d1a0:	bl	4035bc <ferror@plt+0x5bc>
  40d1a4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d1a8:	add	x1, x0, #0x860
  40d1ac:	ldr	x0, [sp, #776]
  40d1b0:	bl	4041f0 <ferror@plt+0x11f0>
  40d1b4:	str	x0, [sp, #680]
  40d1b8:	add	x0, sp, #0xd0
  40d1bc:	bl	4168cc <ferror@plt+0x138cc>
  40d1c0:	add	x0, sp, #0xd0
  40d1c4:	mov	x1, x0
  40d1c8:	ldr	x0, [sp, #680]
  40d1cc:	bl	416cc4 <ferror@plt+0x13cc4>
  40d1d0:	and	w0, w0, #0xff
  40d1d4:	eor	w0, w0, #0x1
  40d1d8:	and	w0, w0, #0xff
  40d1dc:	cmp	w0, #0x0
  40d1e0:	b.eq	40d214 <ferror@plt+0xa214>  // b.none
  40d1e4:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d1e8:	add	x0, x0, #0xf58
  40d1ec:	bl	402fd0 <gettext@plt>
  40d1f0:	mov	x19, x0
  40d1f4:	ldr	x1, [sp, #776]
  40d1f8:	mov	w0, #0x4                   	// #4
  40d1fc:	bl	415004 <ferror@plt+0x12004>
  40d200:	mov	x3, x0
  40d204:	mov	x2, x19
  40d208:	mov	w1, #0x0                   	// #0
  40d20c:	mov	w0, #0x2                   	// #2
  40d210:	bl	402920 <error@plt>
  40d214:	ldr	x1, [sp, #776]
  40d218:	ldr	x0, [sp, #680]
  40d21c:	bl	40423c <ferror@plt+0x123c>
  40d220:	ldr	x0, [sp, #208]
  40d224:	cmp	x0, #0x0
  40d228:	b.eq	40d340 <ferror@plt+0xa340>  // b.none
  40d22c:	ldr	x0, [sp, #784]
  40d230:	bl	402d20 <free@plt>
  40d234:	ldr	x0, [sp, #216]
  40d238:	str	x0, [sp, #784]
  40d23c:	ldr	x0, [sp, #208]
  40d240:	str	x0, [sp, #800]
  40d244:	str	xzr, [sp, #728]
  40d248:	b	40d32c <ferror@plt+0xa32c>
  40d24c:	ldr	x0, [sp, #728]
  40d250:	lsl	x0, x0, #3
  40d254:	ldr	x1, [sp, #784]
  40d258:	add	x0, x1, x0
  40d25c:	ldr	x2, [x0]
  40d260:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d264:	add	x1, x0, #0x720
  40d268:	mov	x0, x2
  40d26c:	bl	402cd0 <strcmp@plt>
  40d270:	cmp	w0, #0x0
  40d274:	b.ne	40d2bc <ferror@plt+0xa2bc>  // b.any
  40d278:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d27c:	add	x0, x0, #0xf78
  40d280:	bl	402fd0 <gettext@plt>
  40d284:	mov	x19, x0
  40d288:	ldr	x0, [sp, #728]
  40d28c:	lsl	x0, x0, #3
  40d290:	ldr	x1, [sp, #784]
  40d294:	add	x0, x1, x0
  40d298:	ldr	x0, [x0]
  40d29c:	mov	x1, x0
  40d2a0:	mov	w0, #0x4                   	// #4
  40d2a4:	bl	415004 <ferror@plt+0x12004>
  40d2a8:	mov	x3, x0
  40d2ac:	mov	x2, x19
  40d2b0:	mov	w1, #0x0                   	// #0
  40d2b4:	mov	w0, #0x2                   	// #2
  40d2b8:	bl	402920 <error@plt>
  40d2bc:	ldr	x0, [sp, #728]
  40d2c0:	lsl	x0, x0, #3
  40d2c4:	ldr	x1, [sp, #784]
  40d2c8:	add	x0, x1, x0
  40d2cc:	ldr	x0, [x0]
  40d2d0:	ldrb	w0, [x0]
  40d2d4:	cmp	w0, #0x0
  40d2d8:	b.ne	40d320 <ferror@plt+0xa320>  // b.any
  40d2dc:	ldr	x0, [sp, #728]
  40d2e0:	add	x0, x0, #0x1
  40d2e4:	str	x0, [sp, #672]
  40d2e8:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d2ec:	add	x0, x0, #0xfb8
  40d2f0:	bl	402fd0 <gettext@plt>
  40d2f4:	mov	x19, x0
  40d2f8:	ldr	x2, [sp, #776]
  40d2fc:	mov	w1, #0x3                   	// #3
  40d300:	mov	w0, #0x0                   	// #0
  40d304:	bl	41513c <ferror@plt+0x1213c>
  40d308:	ldr	x4, [sp, #672]
  40d30c:	mov	x3, x0
  40d310:	mov	x2, x19
  40d314:	mov	w1, #0x0                   	// #0
  40d318:	mov	w0, #0x2                   	// #2
  40d31c:	bl	402920 <error@plt>
  40d320:	ldr	x0, [sp, #728]
  40d324:	add	x0, x0, #0x1
  40d328:	str	x0, [sp, #728]
  40d32c:	ldr	x1, [sp, #728]
  40d330:	ldr	x0, [sp, #800]
  40d334:	cmp	x1, x0
  40d338:	b.cc	40d24c <ferror@plt+0xa24c>  // b.lo, b.ul, b.last
  40d33c:	b	40d370 <ferror@plt+0xa370>
  40d340:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d344:	add	x0, x0, #0xfe0
  40d348:	bl	402fd0 <gettext@plt>
  40d34c:	mov	x19, x0
  40d350:	ldr	x1, [sp, #776]
  40d354:	mov	w0, #0x4                   	// #4
  40d358:	bl	415004 <ferror@plt+0x12004>
  40d35c:	mov	x3, x0
  40d360:	mov	x2, x19
  40d364:	mov	w1, #0x0                   	// #0
  40d368:	mov	w0, #0x2                   	// #2
  40d36c:	bl	402920 <error@plt>
  40d370:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d374:	add	x0, x0, #0x9e8
  40d378:	ldr	x0, [x0]
  40d37c:	str	x0, [sp, #856]
  40d380:	b	40d460 <ferror@plt+0xa460>
  40d384:	ldr	x0, [sp, #856]
  40d388:	bl	407210 <ferror@plt+0x4210>
  40d38c:	and	w0, w0, #0xff
  40d390:	cmp	w0, #0x0
  40d394:	b.eq	40d434 <ferror@plt+0xa434>  // b.none
  40d398:	ldr	x0, [sp, #856]
  40d39c:	ldrb	w0, [x0, #55]
  40d3a0:	eor	w0, w0, #0x1
  40d3a4:	and	w0, w0, #0xff
  40d3a8:	cmp	w0, #0x0
  40d3ac:	b.eq	40d434 <ferror@plt+0xa434>  // b.none
  40d3b0:	ldr	x1, [sp, #528]
  40d3b4:	ldr	x0, [sp, #856]
  40d3b8:	str	x1, [x0, #32]
  40d3bc:	ldr	x1, [sp, #536]
  40d3c0:	ldr	x0, [sp, #856]
  40d3c4:	str	x1, [x0, #40]
  40d3c8:	ldrb	w1, [sp, #544]
  40d3cc:	ldr	x0, [sp, #856]
  40d3d0:	strb	w1, [x0, #48]
  40d3d4:	ldrb	w1, [sp, #545]
  40d3d8:	ldr	x0, [sp, #856]
  40d3dc:	strb	w1, [x0, #49]
  40d3e0:	ldrb	w1, [sp, #550]
  40d3e4:	ldr	x0, [sp, #856]
  40d3e8:	strb	w1, [x0, #54]
  40d3ec:	ldrb	w1, [sp, #546]
  40d3f0:	ldr	x0, [sp, #856]
  40d3f4:	strb	w1, [x0, #50]
  40d3f8:	ldrb	w1, [sp, #548]
  40d3fc:	ldr	x0, [sp, #856]
  40d400:	strb	w1, [x0, #52]
  40d404:	ldrb	w1, [sp, #549]
  40d408:	ldr	x0, [sp, #856]
  40d40c:	strb	w1, [x0, #53]
  40d410:	ldrb	w1, [sp, #552]
  40d414:	ldr	x0, [sp, #856]
  40d418:	strb	w1, [x0, #56]
  40d41c:	ldrb	w1, [sp, #547]
  40d420:	ldr	x0, [sp, #856]
  40d424:	strb	w1, [x0, #51]
  40d428:	ldrb	w1, [sp, #551]
  40d42c:	ldr	x0, [sp, #856]
  40d430:	strb	w1, [x0, #55]
  40d434:	ldr	x0, [sp, #856]
  40d438:	ldrb	w1, [x0, #51]
  40d43c:	ldrb	w0, [sp, #823]
  40d440:	orr	w0, w1, w0
  40d444:	and	w0, w0, #0xff
  40d448:	cmp	w0, #0x0
  40d44c:	cset	w0, ne  // ne = any
  40d450:	strb	w0, [sp, #823]
  40d454:	ldr	x0, [sp, #856]
  40d458:	ldr	x0, [x0, #64]
  40d45c:	str	x0, [sp, #856]
  40d460:	ldr	x0, [sp, #856]
  40d464:	cmp	x0, #0x0
  40d468:	b.ne	40d384 <ferror@plt+0xa384>  // b.any
  40d46c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d470:	add	x0, x0, #0x9e8
  40d474:	ldr	x0, [x0]
  40d478:	cmp	x0, #0x0
  40d47c:	b.ne	40d4c8 <ferror@plt+0xa4c8>  // b.any
  40d480:	add	x0, sp, #0x1f0
  40d484:	bl	407210 <ferror@plt+0x4210>
  40d488:	and	w0, w0, #0xff
  40d48c:	eor	w0, w0, #0x1
  40d490:	and	w0, w0, #0xff
  40d494:	cmp	w0, #0x0
  40d498:	b.eq	40d4c8 <ferror@plt+0xa4c8>  // b.none
  40d49c:	mov	w0, #0x1                   	// #1
  40d4a0:	strb	w0, [sp, #855]
  40d4a4:	add	x0, sp, #0x1f0
  40d4a8:	bl	40bb90 <ferror@plt+0x8b90>
  40d4ac:	ldrb	w1, [sp, #547]
  40d4b0:	ldrb	w0, [sp, #823]
  40d4b4:	orr	w0, w1, w0
  40d4b8:	and	w0, w0, #0xff
  40d4bc:	cmp	w0, #0x0
  40d4c0:	cset	w0, ne  // ne = any
  40d4c4:	strb	w0, [sp, #823]
  40d4c8:	bl	40bc78 <ferror@plt+0x8c78>
  40d4cc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d4d0:	add	x0, x0, #0x9f8
  40d4d4:	ldrb	w0, [x0]
  40d4d8:	cmp	w0, #0x0
  40d4dc:	b.eq	40d604 <ferror@plt+0xa604>  // b.none
  40d4e0:	ldrb	w0, [sp, #835]
  40d4e4:	cmp	w0, #0x0
  40d4e8:	b.ne	40d4f8 <ferror@plt+0xa4f8>  // b.any
  40d4ec:	ldr	x0, [sp, #768]
  40d4f0:	cmp	x0, #0x0
  40d4f4:	b.eq	40d528 <ferror@plt+0xa528>  // b.none
  40d4f8:	ldrb	w0, [sp, #835]
  40d4fc:	cmp	w0, #0x0
  40d500:	b.eq	40d50c <ferror@plt+0xa50c>  // b.none
  40d504:	ldrb	w0, [sp, #835]
  40d508:	b	40d510 <ferror@plt+0xa510>
  40d50c:	mov	w0, #0x6f                  	// #111
  40d510:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d514:	add	x1, x1, #0x4c0
  40d518:	strb	w0, [x1]
  40d51c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d520:	add	x0, x0, #0x4c0
  40d524:	bl	40bc4c <ferror@plt+0x8c4c>
  40d528:	ldrb	w0, [sp, #767]
  40d52c:	cmp	w0, #0x0
  40d530:	b.eq	40d550 <ferror@plt+0xa550>  // b.none
  40d534:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  40d538:	add	x1, x0, #0x18
  40d53c:	mov	w0, #0x3                   	// #3
  40d540:	bl	402ff0 <setlocale@plt>
  40d544:	cmp	x0, #0x0
  40d548:	cset	w0, ne  // ne = any
  40d54c:	strb	w0, [sp, #767]
  40d550:	ldrb	w0, [sp, #767]
  40d554:	eor	w0, w0, #0x1
  40d558:	and	w0, w0, #0xff
  40d55c:	cmp	w0, #0x0
  40d560:	b.eq	40d588 <ferror@plt+0xa588>  // b.none
  40d564:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d568:	add	x0, x0, #0xff8
  40d56c:	bl	402fd0 <gettext@plt>
  40d570:	mov	x3, x0
  40d574:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40d578:	add	x2, x0, #0x10
  40d57c:	mov	w1, #0x0                   	// #0
  40d580:	mov	w0, #0x0                   	// #0
  40d584:	bl	402920 <error@plt>
  40d588:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d58c:	add	x0, x0, #0x598
  40d590:	ldrb	w0, [x0]
  40d594:	cmp	w0, #0x0
  40d598:	b.eq	40d5d4 <ferror@plt+0xa5d4>  // b.none
  40d59c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40d5a0:	add	x0, x0, #0x18
  40d5a4:	bl	402fd0 <gettext@plt>
  40d5a8:	mov	x19, x0
  40d5ac:	mov	x1, #0x0                   	// #0
  40d5b0:	mov	w0, #0x3                   	// #3
  40d5b4:	bl	402ff0 <setlocale@plt>
  40d5b8:	bl	415354 <ferror@plt+0x12354>
  40d5bc:	mov	x3, x0
  40d5c0:	mov	x2, x19
  40d5c4:	mov	w1, #0x0                   	// #0
  40d5c8:	mov	w0, #0x0                   	// #0
  40d5cc:	bl	402920 <error@plt>
  40d5d0:	b	40d5f8 <ferror@plt+0xa5f8>
  40d5d4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40d5d8:	add	x0, x0, #0x48
  40d5dc:	bl	402fd0 <gettext@plt>
  40d5e0:	mov	x3, x0
  40d5e4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40d5e8:	add	x2, x0, #0x10
  40d5ec:	mov	w1, #0x0                   	// #0
  40d5f0:	mov	w0, #0x0                   	// #0
  40d5f4:	bl	402920 <error@plt>
  40d5f8:	add	x0, sp, #0x1f0
  40d5fc:	ldrb	w1, [sp, #855]
  40d600:	bl	4074b8 <ferror@plt+0x44b8>
  40d604:	ldrb	w1, [sp, #551]
  40d608:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d60c:	add	x0, x0, #0x9e0
  40d610:	strb	w1, [x0]
  40d614:	ldrb	w0, [sp, #823]
  40d618:	cmp	w0, #0x0
  40d61c:	b.eq	40d628 <ferror@plt+0xa628>  // b.none
  40d620:	ldr	x0, [sp, #824]
  40d624:	bl	4066f4 <ferror@plt+0x36f4>
  40d628:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d62c:	add	x0, x0, #0x9d0
  40d630:	ldr	x0, [x0]
  40d634:	cmp	x0, #0x0
  40d638:	b.ne	40d66c <ferror@plt+0xa66c>  // b.any
  40d63c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40d640:	add	x0, x0, #0x80
  40d644:	bl	402f70 <getenv@plt>
  40d648:	str	x0, [sp, #664]
  40d64c:	ldr	x0, [sp, #664]
  40d650:	cmp	x0, #0x0
  40d654:	b.eq	40d660 <ferror@plt+0xa660>  // b.none
  40d658:	ldr	x0, [sp, #664]
  40d65c:	b	40d668 <ferror@plt+0xa668>
  40d660:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0x1b64>
  40d664:	add	x0, x0, #0xc48
  40d668:	bl	404834 <ferror@plt+0x1834>
  40d66c:	ldr	x0, [sp, #800]
  40d670:	cmp	x0, #0x0
  40d674:	b.ne	40d6a4 <ferror@plt+0xa6a4>  // b.any
  40d678:	mov	x0, #0x1                   	// #1
  40d67c:	str	x0, [sp, #800]
  40d680:	ldr	x0, [sp, #784]
  40d684:	bl	402d20 <free@plt>
  40d688:	mov	x0, #0x8                   	// #8
  40d68c:	bl	4183dc <ferror@plt+0x153dc>
  40d690:	str	x0, [sp, #784]
  40d694:	ldr	x0, [sp, #784]
  40d698:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d69c:	add	x1, x1, #0x720
  40d6a0:	str	x1, [x0]
  40d6a4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d6a8:	add	x0, x0, #0x9c0
  40d6ac:	ldr	x0, [x0]
  40d6b0:	cmp	x0, #0x0
  40d6b4:	b.eq	40d6fc <ferror@plt+0xa6fc>  // b.none
  40d6b8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d6bc:	add	x0, x0, #0x4b4
  40d6c0:	ldr	w0, [x0]
  40d6c4:	mov	w1, w0
  40d6c8:	mov	x0, x1
  40d6cc:	lsl	x0, x0, #4
  40d6d0:	add	x0, x0, x1
  40d6d4:	lsl	x0, x0, #1
  40d6d8:	mov	x1, x0
  40d6dc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d6e0:	add	x0, x0, #0x9c0
  40d6e4:	ldr	x0, [x0]
  40d6e8:	cmp	x1, x0
  40d6ec:	csel	x1, x1, x0, cs  // cs = hs, nlast
  40d6f0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d6f4:	add	x0, x0, #0x9c0
  40d6f8:	str	x1, [x0]
  40d6fc:	ldrb	w0, [sp, #835]
  40d700:	cmp	w0, #0x0
  40d704:	b.eq	40d7a4 <ferror@plt+0xa7a4>  // b.none
  40d708:	ldr	x0, [sp, #800]
  40d70c:	cmp	x0, #0x1
  40d710:	b.ls	40d75c <ferror@plt+0xa75c>  // b.plast
  40d714:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40d718:	add	x0, x0, #0x88
  40d71c:	bl	402fd0 <gettext@plt>
  40d720:	mov	x19, x0
  40d724:	ldr	x0, [sp, #784]
  40d728:	add	x0, x0, #0x8
  40d72c:	ldr	x0, [x0]
  40d730:	mov	x1, x0
  40d734:	mov	w0, #0x4                   	// #4
  40d738:	bl	415004 <ferror@plt+0x12004>
  40d73c:	mov	x1, x0
  40d740:	ldrb	w0, [sp, #835]
  40d744:	mov	w4, w0
  40d748:	mov	x3, x1
  40d74c:	mov	x2, x19
  40d750:	mov	w1, #0x0                   	// #0
  40d754:	mov	w0, #0x2                   	// #2
  40d758:	bl	402920 <error@plt>
  40d75c:	ldr	x0, [sp, #768]
  40d760:	cmp	x0, #0x0
  40d764:	b.eq	40d784 <ferror@plt+0xa784>  // b.none
  40d768:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d76c:	add	x0, x0, #0x4d0
  40d770:	ldrb	w1, [sp, #835]
  40d774:	strb	w1, [x0]
  40d778:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d77c:	add	x0, x0, #0x4d0
  40d780:	bl	40bc4c <ferror@plt+0x8c4c>
  40d784:	ldr	x0, [sp, #784]
  40d788:	ldr	x0, [x0]
  40d78c:	ldrb	w1, [sp, #835]
  40d790:	bl	408b2c <ferror@plt+0x5b2c>
  40d794:	and	w0, w0, #0xff
  40d798:	eor	w0, w0, #0x1
  40d79c:	and	w0, w0, #0xff
  40d7a0:	b	40d8f0 <ferror@plt+0xa8f0>
  40d7a4:	ldr	x1, [sp, #800]
  40d7a8:	ldr	x0, [sp, #784]
  40d7ac:	bl	40b1cc <ferror@plt+0x81cc>
  40d7b0:	ldr	x0, [sp, #768]
  40d7b4:	bl	40b294 <ferror@plt+0x8294>
  40d7b8:	ldrb	w0, [sp, #834]
  40d7bc:	cmp	w0, #0x0
  40d7c0:	b.eq	40d838 <ferror@plt+0xa838>  // b.none
  40d7c4:	mov	x1, #0x10                  	// #16
  40d7c8:	ldr	x0, [sp, #800]
  40d7cc:	bl	4184dc <ferror@plt+0x154dc>
  40d7d0:	str	x0, [sp, #640]
  40d7d4:	str	xzr, [sp, #720]
  40d7d8:	b	40d810 <ferror@plt+0xa810>
  40d7dc:	ldr	x0, [sp, #720]
  40d7e0:	lsl	x0, x0, #3
  40d7e4:	ldr	x1, [sp, #784]
  40d7e8:	add	x1, x1, x0
  40d7ec:	ldr	x0, [sp, #720]
  40d7f0:	lsl	x0, x0, #4
  40d7f4:	ldr	x2, [sp, #640]
  40d7f8:	add	x0, x2, x0
  40d7fc:	ldr	x1, [x1]
  40d800:	str	x1, [x0]
  40d804:	ldr	x0, [sp, #720]
  40d808:	add	x0, x0, #0x1
  40d80c:	str	x0, [sp, #720]
  40d810:	ldr	x1, [sp, #720]
  40d814:	ldr	x0, [sp, #800]
  40d818:	cmp	x1, x0
  40d81c:	b.cc	40d7dc <ferror@plt+0xa7dc>  // b.lo, b.ul, b.last
  40d820:	ldr	x3, [sp, #768]
  40d824:	ldr	x2, [sp, #800]
  40d828:	mov	x1, #0x0                   	// #0
  40d82c:	ldr	x0, [sp, #640]
  40d830:	bl	40b304 <ferror@plt+0x8304>
  40d834:	b	40d8a0 <ferror@plt+0xa8a0>
  40d838:	ldr	x0, [sp, #808]
  40d83c:	cmp	x0, #0x0
  40d840:	b.ne	40d868 <ferror@plt+0xa868>  // b.any
  40d844:	mov	w0, #0x2                   	// #2
  40d848:	bl	412b14 <ferror@plt+0xfb14>
  40d84c:	str	x0, [sp, #656]
  40d850:	ldr	x2, [sp, #656]
  40d854:	ldr	x1, [sp, #656]
  40d858:	mov	x0, #0x8                   	// #8
  40d85c:	cmp	x2, #0x8
  40d860:	csel	x0, x1, x0, ls  // ls = plast
  40d864:	str	x0, [sp, #808]
  40d868:	mov	x0, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  40d86c:	movk	x0, #0xf0, lsl #48
  40d870:	str	x0, [sp, #648]
  40d874:	ldr	x0, [sp, #808]
  40d878:	ldr	x2, [sp, #648]
  40d87c:	ldr	x1, [sp, #648]
  40d880:	cmp	x2, x0
  40d884:	csel	x0, x1, x0, ls  // ls = plast
  40d888:	str	x0, [sp, #808]
  40d88c:	ldr	x3, [sp, #808]
  40d890:	ldr	x2, [sp, #768]
  40d894:	ldr	x1, [sp, #800]
  40d898:	ldr	x0, [sp, #784]
  40d89c:	bl	40b810 <ferror@plt+0x8810>
  40d8a0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d8a4:	add	x0, x0, #0x9e3
  40d8a8:	ldrb	w0, [x0]
  40d8ac:	cmp	w0, #0x0
  40d8b0:	b.eq	40d8ec <ferror@plt+0xa8ec>  // b.none
  40d8b4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40d8b8:	add	x0, x0, #0x578
  40d8bc:	ldr	x0, [x0]
  40d8c0:	bl	4195f0 <ferror@plt+0x165f0>
  40d8c4:	cmn	w0, #0x1
  40d8c8:	b.ne	40d8ec <ferror@plt+0xa8ec>  // b.any
  40d8cc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d8d0:	add	x0, x0, #0x7a0
  40d8d4:	bl	402fd0 <gettext@plt>
  40d8d8:	mov	x2, x0
  40d8dc:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0x2b64>
  40d8e0:	add	x1, x0, #0x720
  40d8e4:	mov	x0, x2
  40d8e8:	bl	403554 <ferror@plt+0x554>
  40d8ec:	mov	w0, #0x0                   	// #0
  40d8f0:	ldr	x19, [sp, #16]
  40d8f4:	ldp	x29, x30, [sp]
  40d8f8:	add	sp, sp, #0x360
  40d8fc:	ret
  40d900:	stp	x29, x30, [sp, #-16]!
  40d904:	mov	x29, sp
  40d908:	mov	w0, #0x1                   	// #1
  40d90c:	bl	4035bc <ferror@plt+0x5bc>
  40d910:	nop
  40d914:	ldp	x29, x30, [sp], #16
  40d918:	ret
  40d91c:	stp	x29, x30, [sp, #-80]!
  40d920:	mov	x29, sp
  40d924:	str	x0, [sp, #40]
  40d928:	str	x1, [sp, #32]
  40d92c:	str	x2, [sp, #24]
  40d930:	str	x3, [sp, #16]
  40d934:	mov	x0, #0xffffffffffffffff    	// #-1
  40d938:	str	x0, [sp, #64]
  40d93c:	strb	wzr, [sp, #63]
  40d940:	ldr	x0, [sp, #40]
  40d944:	bl	4028f0 <strlen@plt>
  40d948:	str	x0, [sp, #48]
  40d94c:	str	xzr, [sp, #72]
  40d950:	b	40da24 <ferror@plt+0xaa24>
  40d954:	ldr	x0, [sp, #72]
  40d958:	lsl	x0, x0, #3
  40d95c:	ldr	x1, [sp, #32]
  40d960:	add	x0, x1, x0
  40d964:	ldr	x0, [x0]
  40d968:	ldr	x2, [sp, #48]
  40d96c:	ldr	x1, [sp, #40]
  40d970:	bl	402af0 <strncmp@plt>
  40d974:	cmp	w0, #0x0
  40d978:	b.ne	40da18 <ferror@plt+0xaa18>  // b.any
  40d97c:	ldr	x0, [sp, #72]
  40d980:	lsl	x0, x0, #3
  40d984:	ldr	x1, [sp, #32]
  40d988:	add	x0, x1, x0
  40d98c:	ldr	x0, [x0]
  40d990:	bl	4028f0 <strlen@plt>
  40d994:	mov	x1, x0
  40d998:	ldr	x0, [sp, #48]
  40d99c:	cmp	x0, x1
  40d9a0:	b.ne	40d9ac <ferror@plt+0xa9ac>  // b.any
  40d9a4:	ldr	x0, [sp, #72]
  40d9a8:	b	40da58 <ferror@plt+0xaa58>
  40d9ac:	ldr	x0, [sp, #64]
  40d9b0:	cmn	x0, #0x1
  40d9b4:	b.ne	40d9c4 <ferror@plt+0xa9c4>  // b.any
  40d9b8:	ldr	x0, [sp, #72]
  40d9bc:	str	x0, [sp, #64]
  40d9c0:	b	40da18 <ferror@plt+0xaa18>
  40d9c4:	ldr	x0, [sp, #24]
  40d9c8:	cmp	x0, #0x0
  40d9cc:	b.eq	40da10 <ferror@plt+0xaa10>  // b.none
  40d9d0:	ldr	x1, [sp, #64]
  40d9d4:	ldr	x0, [sp, #16]
  40d9d8:	mul	x0, x1, x0
  40d9dc:	ldr	x1, [sp, #24]
  40d9e0:	add	x3, x1, x0
  40d9e4:	ldr	x1, [sp, #16]
  40d9e8:	ldr	x0, [sp, #72]
  40d9ec:	mul	x0, x1, x0
  40d9f0:	ldr	x1, [sp, #24]
  40d9f4:	add	x0, x1, x0
  40d9f8:	ldr	x2, [sp, #16]
  40d9fc:	mov	x1, x0
  40da00:	mov	x0, x3
  40da04:	bl	402c90 <memcmp@plt>
  40da08:	cmp	w0, #0x0
  40da0c:	b.eq	40da18 <ferror@plt+0xaa18>  // b.none
  40da10:	mov	w0, #0x1                   	// #1
  40da14:	strb	w0, [sp, #63]
  40da18:	ldr	x0, [sp, #72]
  40da1c:	add	x0, x0, #0x1
  40da20:	str	x0, [sp, #72]
  40da24:	ldr	x0, [sp, #72]
  40da28:	lsl	x0, x0, #3
  40da2c:	ldr	x1, [sp, #32]
  40da30:	add	x0, x1, x0
  40da34:	ldr	x0, [x0]
  40da38:	cmp	x0, #0x0
  40da3c:	b.ne	40d954 <ferror@plt+0xa954>  // b.any
  40da40:	ldrb	w0, [sp, #63]
  40da44:	cmp	w0, #0x0
  40da48:	b.eq	40da54 <ferror@plt+0xaa54>  // b.none
  40da4c:	mov	x0, #0xfffffffffffffffe    	// #-2
  40da50:	b	40da58 <ferror@plt+0xaa58>
  40da54:	ldr	x0, [sp, #64]
  40da58:	ldp	x29, x30, [sp], #80
  40da5c:	ret
  40da60:	stp	x29, x30, [sp, #-80]!
  40da64:	mov	x29, sp
  40da68:	str	x19, [sp, #16]
  40da6c:	str	x0, [sp, #56]
  40da70:	str	x1, [sp, #48]
  40da74:	str	x2, [sp, #40]
  40da78:	ldr	x0, [sp, #40]
  40da7c:	cmn	x0, #0x1
  40da80:	b.ne	40da94 <ferror@plt+0xaa94>  // b.any
  40da84:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40da88:	add	x0, x0, #0x428
  40da8c:	bl	402fd0 <gettext@plt>
  40da90:	b	40daa0 <ferror@plt+0xaaa0>
  40da94:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40da98:	add	x0, x0, #0x448
  40da9c:	bl	402fd0 <gettext@plt>
  40daa0:	str	x0, [sp, #72]
  40daa4:	ldr	x2, [sp, #48]
  40daa8:	mov	w1, #0x8                   	// #8
  40daac:	mov	w0, #0x0                   	// #0
  40dab0:	bl	414f78 <ferror@plt+0x11f78>
  40dab4:	mov	x19, x0
  40dab8:	ldr	x1, [sp, #56]
  40dabc:	mov	w0, #0x1                   	// #1
  40dac0:	bl	41532c <ferror@plt+0x1232c>
  40dac4:	mov	x4, x0
  40dac8:	mov	x3, x19
  40dacc:	ldr	x2, [sp, #72]
  40dad0:	mov	w1, #0x0                   	// #0
  40dad4:	mov	w0, #0x0                   	// #0
  40dad8:	bl	402920 <error@plt>
  40dadc:	nop
  40dae0:	ldr	x19, [sp, #16]
  40dae4:	ldp	x29, x30, [sp], #80
  40dae8:	ret
  40daec:	stp	x29, x30, [sp, #-80]!
  40daf0:	mov	x29, sp
  40daf4:	str	x19, [sp, #16]
  40daf8:	str	x0, [sp, #56]
  40dafc:	str	x1, [sp, #48]
  40db00:	str	x2, [sp, #40]
  40db04:	str	xzr, [sp, #64]
  40db08:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40db0c:	add	x0, x0, #0x468
  40db10:	bl	402fd0 <gettext@plt>
  40db14:	mov	x2, x0
  40db18:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40db1c:	add	x0, x0, #0x558
  40db20:	ldr	x0, [x0]
  40db24:	mov	x1, x0
  40db28:	mov	x0, x2
  40db2c:	bl	402eb0 <fputs_unlocked@plt>
  40db30:	str	xzr, [sp, #72]
  40db34:	b	40dc08 <ferror@plt+0xac08>
  40db38:	ldr	x0, [sp, #72]
  40db3c:	cmp	x0, #0x0
  40db40:	b.eq	40db70 <ferror@plt+0xab70>  // b.none
  40db44:	ldr	x1, [sp, #40]
  40db48:	ldr	x0, [sp, #72]
  40db4c:	mul	x0, x1, x0
  40db50:	ldr	x1, [sp, #48]
  40db54:	add	x0, x1, x0
  40db58:	ldr	x2, [sp, #40]
  40db5c:	mov	x1, x0
  40db60:	ldr	x0, [sp, #64]
  40db64:	bl	402c90 <memcmp@plt>
  40db68:	cmp	w0, #0x0
  40db6c:	b.eq	40dbc4 <ferror@plt+0xabc4>  // b.none
  40db70:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40db74:	add	x0, x0, #0x558
  40db78:	ldr	x19, [x0]
  40db7c:	ldr	x0, [sp, #72]
  40db80:	lsl	x0, x0, #3
  40db84:	ldr	x1, [sp, #56]
  40db88:	add	x0, x1, x0
  40db8c:	ldr	x0, [x0]
  40db90:	bl	415354 <ferror@plt+0x12354>
  40db94:	mov	x2, x0
  40db98:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40db9c:	add	x1, x0, #0x480
  40dba0:	mov	x0, x19
  40dba4:	bl	402fe0 <fprintf@plt>
  40dba8:	ldr	x1, [sp, #40]
  40dbac:	ldr	x0, [sp, #72]
  40dbb0:	mul	x0, x1, x0
  40dbb4:	ldr	x1, [sp, #48]
  40dbb8:	add	x0, x1, x0
  40dbbc:	str	x0, [sp, #64]
  40dbc0:	b	40dbfc <ferror@plt+0xabfc>
  40dbc4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40dbc8:	add	x0, x0, #0x558
  40dbcc:	ldr	x19, [x0]
  40dbd0:	ldr	x0, [sp, #72]
  40dbd4:	lsl	x0, x0, #3
  40dbd8:	ldr	x1, [sp, #56]
  40dbdc:	add	x0, x1, x0
  40dbe0:	ldr	x0, [x0]
  40dbe4:	bl	415354 <ferror@plt+0x12354>
  40dbe8:	mov	x2, x0
  40dbec:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40dbf0:	add	x1, x0, #0x488
  40dbf4:	mov	x0, x19
  40dbf8:	bl	402fe0 <fprintf@plt>
  40dbfc:	ldr	x0, [sp, #72]
  40dc00:	add	x0, x0, #0x1
  40dc04:	str	x0, [sp, #72]
  40dc08:	ldr	x0, [sp, #72]
  40dc0c:	lsl	x0, x0, #3
  40dc10:	ldr	x1, [sp, #56]
  40dc14:	add	x0, x1, x0
  40dc18:	ldr	x0, [x0]
  40dc1c:	cmp	x0, #0x0
  40dc20:	b.ne	40db38 <ferror@plt+0xab38>  // b.any
  40dc24:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40dc28:	add	x0, x0, #0x558
  40dc2c:	ldr	x0, [x0]
  40dc30:	mov	x1, x0
  40dc34:	mov	w0, #0xa                   	// #10
  40dc38:	bl	402a20 <putc_unlocked@plt>
  40dc3c:	nop
  40dc40:	ldr	x19, [sp, #16]
  40dc44:	ldp	x29, x30, [sp], #80
  40dc48:	ret
  40dc4c:	stp	x29, x30, [sp, #-80]!
  40dc50:	mov	x29, sp
  40dc54:	str	x0, [sp, #56]
  40dc58:	str	x1, [sp, #48]
  40dc5c:	str	x2, [sp, #40]
  40dc60:	str	x3, [sp, #32]
  40dc64:	str	x4, [sp, #24]
  40dc68:	str	x5, [sp, #16]
  40dc6c:	ldr	x3, [sp, #24]
  40dc70:	ldr	x2, [sp, #32]
  40dc74:	ldr	x1, [sp, #40]
  40dc78:	ldr	x0, [sp, #48]
  40dc7c:	bl	40d91c <ferror@plt+0xa91c>
  40dc80:	str	x0, [sp, #72]
  40dc84:	ldr	x0, [sp, #72]
  40dc88:	cmp	x0, #0x0
  40dc8c:	b.lt	40dc98 <ferror@plt+0xac98>  // b.tstop
  40dc90:	ldr	x0, [sp, #72]
  40dc94:	b	40dcc4 <ferror@plt+0xacc4>
  40dc98:	ldr	x2, [sp, #72]
  40dc9c:	ldr	x1, [sp, #48]
  40dca0:	ldr	x0, [sp, #56]
  40dca4:	bl	40da60 <ferror@plt+0xaa60>
  40dca8:	ldr	x2, [sp, #24]
  40dcac:	ldr	x1, [sp, #32]
  40dcb0:	ldr	x0, [sp, #40]
  40dcb4:	bl	40daec <ferror@plt+0xaaec>
  40dcb8:	ldr	x0, [sp, #16]
  40dcbc:	blr	x0
  40dcc0:	mov	x0, #0xffffffffffffffff    	// #-1
  40dcc4:	ldp	x29, x30, [sp], #80
  40dcc8:	ret
  40dccc:	stp	x29, x30, [sp, #-64]!
  40dcd0:	mov	x29, sp
  40dcd4:	str	x0, [sp, #40]
  40dcd8:	str	x1, [sp, #32]
  40dcdc:	str	x2, [sp, #24]
  40dce0:	str	x3, [sp, #16]
  40dce4:	str	xzr, [sp, #56]
  40dce8:	b	40dd3c <ferror@plt+0xad3c>
  40dcec:	ldr	x1, [sp, #16]
  40dcf0:	ldr	x0, [sp, #56]
  40dcf4:	mul	x0, x1, x0
  40dcf8:	ldr	x1, [sp, #24]
  40dcfc:	add	x0, x1, x0
  40dd00:	ldr	x2, [sp, #16]
  40dd04:	mov	x1, x0
  40dd08:	ldr	x0, [sp, #40]
  40dd0c:	bl	402c90 <memcmp@plt>
  40dd10:	cmp	w0, #0x0
  40dd14:	b.ne	40dd30 <ferror@plt+0xad30>  // b.any
  40dd18:	ldr	x0, [sp, #56]
  40dd1c:	lsl	x0, x0, #3
  40dd20:	ldr	x1, [sp, #32]
  40dd24:	add	x0, x1, x0
  40dd28:	ldr	x0, [x0]
  40dd2c:	b	40dd5c <ferror@plt+0xad5c>
  40dd30:	ldr	x0, [sp, #56]
  40dd34:	add	x0, x0, #0x1
  40dd38:	str	x0, [sp, #56]
  40dd3c:	ldr	x0, [sp, #56]
  40dd40:	lsl	x0, x0, #3
  40dd44:	ldr	x1, [sp, #32]
  40dd48:	add	x0, x1, x0
  40dd4c:	ldr	x0, [x0]
  40dd50:	cmp	x0, #0x0
  40dd54:	b.ne	40dcec <ferror@plt+0xacec>  // b.any
  40dd58:	mov	x0, #0x0                   	// #0
  40dd5c:	ldp	x29, x30, [sp], #64
  40dd60:	ret
  40dd64:	sub	sp, sp, #0x10
  40dd68:	str	x0, [sp, #8]
  40dd6c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40dd70:	add	x0, x0, #0xbd0
  40dd74:	ldr	x1, [sp, #8]
  40dd78:	str	x1, [x0]
  40dd7c:	nop
  40dd80:	add	sp, sp, #0x10
  40dd84:	ret
  40dd88:	sub	sp, sp, #0x10
  40dd8c:	strb	w0, [sp, #15]
  40dd90:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40dd94:	add	x0, x0, #0xbd8
  40dd98:	ldrb	w1, [sp, #15]
  40dd9c:	strb	w1, [x0]
  40dda0:	nop
  40dda4:	add	sp, sp, #0x10
  40dda8:	ret
  40ddac:	stp	x29, x30, [sp, #-48]!
  40ddb0:	mov	x29, sp
  40ddb4:	str	x19, [sp, #16]
  40ddb8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40ddbc:	add	x0, x0, #0x570
  40ddc0:	ldr	x0, [x0]
  40ddc4:	bl	41ab8c <_obstack_memory_used@@Base+0x6f0>
  40ddc8:	cmp	w0, #0x0
  40ddcc:	b.eq	40de84 <ferror@plt+0xae84>  // b.none
  40ddd0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40ddd4:	add	x0, x0, #0xbd8
  40ddd8:	ldrb	w0, [x0]
  40dddc:	eor	w0, w0, #0x1
  40dde0:	and	w0, w0, #0xff
  40dde4:	cmp	w0, #0x0
  40dde8:	b.ne	40ddfc <ferror@plt+0xadfc>  // b.any
  40ddec:	bl	402f50 <__errno_location@plt>
  40ddf0:	ldr	w0, [x0]
  40ddf4:	cmp	w0, #0x20
  40ddf8:	b.eq	40de84 <ferror@plt+0xae84>  // b.none
  40ddfc:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40de00:	add	x0, x0, #0x490
  40de04:	bl	402fd0 <gettext@plt>
  40de08:	str	x0, [sp, #40]
  40de0c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40de10:	add	x0, x0, #0xbd0
  40de14:	ldr	x0, [x0]
  40de18:	cmp	x0, #0x0
  40de1c:	b.eq	40de58 <ferror@plt+0xae58>  // b.none
  40de20:	bl	402f50 <__errno_location@plt>
  40de24:	ldr	w19, [x0]
  40de28:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40de2c:	add	x0, x0, #0xbd0
  40de30:	ldr	x0, [x0]
  40de34:	bl	4150f4 <ferror@plt+0x120f4>
  40de38:	ldr	x4, [sp, #40]
  40de3c:	mov	x3, x0
  40de40:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40de44:	add	x2, x0, #0x4a0
  40de48:	mov	w1, w19
  40de4c:	mov	w0, #0x0                   	// #0
  40de50:	bl	402920 <error@plt>
  40de54:	b	40de74 <ferror@plt+0xae74>
  40de58:	bl	402f50 <__errno_location@plt>
  40de5c:	ldr	w1, [x0]
  40de60:	ldr	x3, [sp, #40]
  40de64:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40de68:	add	x2, x0, #0x4a8
  40de6c:	mov	w0, #0x0                   	// #0
  40de70:	bl	402920 <error@plt>
  40de74:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40de78:	add	x0, x0, #0x4e8
  40de7c:	ldr	w0, [x0]
  40de80:	bl	4028c0 <_exit@plt>
  40de84:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40de88:	add	x0, x0, #0x558
  40de8c:	ldr	x0, [x0]
  40de90:	bl	41ab8c <_obstack_memory_used@@Base+0x6f0>
  40de94:	cmp	w0, #0x0
  40de98:	b.eq	40deac <ferror@plt+0xaeac>  // b.none
  40de9c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  40dea0:	add	x0, x0, #0x4e8
  40dea4:	ldr	w0, [x0]
  40dea8:	bl	4028c0 <_exit@plt>
  40deac:	nop
  40deb0:	ldr	x19, [sp, #16]
  40deb4:	ldp	x29, x30, [sp], #48
  40deb8:	ret
  40debc:	sub	sp, sp, #0x10
  40dec0:	str	x0, [sp, #8]
  40dec4:	ldr	x0, [sp, #8]
  40dec8:	mov	w1, #0x2301                	// #8961
  40decc:	movk	w1, #0x6745, lsl #16
  40ded0:	str	w1, [x0]
  40ded4:	ldr	x0, [sp, #8]
  40ded8:	mov	w1, #0xab89                	// #43913
  40dedc:	movk	w1, #0xefcd, lsl #16
  40dee0:	str	w1, [x0, #4]
  40dee4:	ldr	x0, [sp, #8]
  40dee8:	mov	w1, #0xdcfe                	// #56574
  40deec:	movk	w1, #0x98ba, lsl #16
  40def0:	str	w1, [x0, #8]
  40def4:	ldr	x0, [sp, #8]
  40def8:	mov	w1, #0x5476                	// #21622
  40defc:	movk	w1, #0x1032, lsl #16
  40df00:	str	w1, [x0, #12]
  40df04:	ldr	x0, [sp, #8]
  40df08:	str	wzr, [x0, #20]
  40df0c:	ldr	x0, [sp, #8]
  40df10:	ldr	w1, [x0, #20]
  40df14:	ldr	x0, [sp, #8]
  40df18:	str	w1, [x0, #16]
  40df1c:	ldr	x0, [sp, #8]
  40df20:	str	wzr, [x0, #24]
  40df24:	nop
  40df28:	add	sp, sp, #0x10
  40df2c:	ret
  40df30:	sub	sp, sp, #0x10
  40df34:	str	x0, [sp, #8]
  40df38:	str	w1, [sp, #4]
  40df3c:	ldr	w1, [sp, #4]
  40df40:	ldr	x0, [sp, #8]
  40df44:	str	w1, [x0]
  40df48:	nop
  40df4c:	add	sp, sp, #0x10
  40df50:	ret
  40df54:	stp	x29, x30, [sp, #-48]!
  40df58:	mov	x29, sp
  40df5c:	str	x0, [sp, #24]
  40df60:	str	x1, [sp, #16]
  40df64:	ldr	x0, [sp, #16]
  40df68:	str	x0, [sp, #40]
  40df6c:	ldr	x0, [sp, #24]
  40df70:	ldr	w0, [x0]
  40df74:	mov	w1, w0
  40df78:	ldr	x0, [sp, #40]
  40df7c:	bl	40df30 <ferror@plt+0xaf30>
  40df80:	ldr	x0, [sp, #40]
  40df84:	add	x2, x0, #0x4
  40df88:	ldr	x0, [sp, #24]
  40df8c:	ldr	w0, [x0, #4]
  40df90:	mov	w1, w0
  40df94:	mov	x0, x2
  40df98:	bl	40df30 <ferror@plt+0xaf30>
  40df9c:	ldr	x0, [sp, #40]
  40dfa0:	add	x2, x0, #0x8
  40dfa4:	ldr	x0, [sp, #24]
  40dfa8:	ldr	w0, [x0, #8]
  40dfac:	mov	w1, w0
  40dfb0:	mov	x0, x2
  40dfb4:	bl	40df30 <ferror@plt+0xaf30>
  40dfb8:	ldr	x0, [sp, #40]
  40dfbc:	add	x2, x0, #0xc
  40dfc0:	ldr	x0, [sp, #24]
  40dfc4:	ldr	w0, [x0, #12]
  40dfc8:	mov	w1, w0
  40dfcc:	mov	x0, x2
  40dfd0:	bl	40df30 <ferror@plt+0xaf30>
  40dfd4:	ldr	x0, [sp, #16]
  40dfd8:	ldp	x29, x30, [sp], #48
  40dfdc:	ret
  40dfe0:	stp	x29, x30, [sp, #-48]!
  40dfe4:	mov	x29, sp
  40dfe8:	str	x0, [sp, #24]
  40dfec:	str	x1, [sp, #16]
  40dff0:	ldr	x0, [sp, #24]
  40dff4:	ldr	w0, [x0, #24]
  40dff8:	str	w0, [sp, #44]
  40dffc:	ldr	w0, [sp, #44]
  40e000:	cmp	w0, #0x37
  40e004:	b.hi	40e010 <ferror@plt+0xb010>  // b.pmore
  40e008:	mov	x0, #0x10                  	// #16
  40e00c:	b	40e014 <ferror@plt+0xb014>
  40e010:	mov	x0, #0x20                  	// #32
  40e014:	str	x0, [sp, #32]
  40e018:	ldr	x0, [sp, #24]
  40e01c:	ldr	w1, [x0, #16]
  40e020:	ldr	w0, [sp, #44]
  40e024:	add	w1, w1, w0
  40e028:	ldr	x0, [sp, #24]
  40e02c:	str	w1, [x0, #16]
  40e030:	ldr	x0, [sp, #24]
  40e034:	ldr	w0, [x0, #16]
  40e038:	ldr	w1, [sp, #44]
  40e03c:	cmp	w1, w0
  40e040:	b.ls	40e058 <ferror@plt+0xb058>  // b.plast
  40e044:	ldr	x0, [sp, #24]
  40e048:	ldr	w0, [x0, #20]
  40e04c:	add	w1, w0, #0x1
  40e050:	ldr	x0, [sp, #24]
  40e054:	str	w1, [x0, #20]
  40e058:	ldr	x0, [sp, #24]
  40e05c:	ldr	w1, [x0, #16]
  40e060:	ldr	x0, [sp, #32]
  40e064:	sub	x0, x0, #0x2
  40e068:	lsl	w1, w1, #3
  40e06c:	ldr	x2, [sp, #24]
  40e070:	add	x0, x0, #0x4
  40e074:	lsl	x0, x0, #2
  40e078:	add	x0, x2, x0
  40e07c:	str	w1, [x0, #12]
  40e080:	ldr	x0, [sp, #24]
  40e084:	ldr	w0, [x0, #20]
  40e088:	lsl	w2, w0, #3
  40e08c:	ldr	x0, [sp, #24]
  40e090:	ldr	w0, [x0, #16]
  40e094:	lsr	w1, w0, #29
  40e098:	ldr	x0, [sp, #32]
  40e09c:	sub	x0, x0, #0x1
  40e0a0:	orr	w1, w2, w1
  40e0a4:	ldr	x2, [sp, #24]
  40e0a8:	add	x0, x0, #0x4
  40e0ac:	lsl	x0, x0, #2
  40e0b0:	add	x0, x2, x0
  40e0b4:	str	w1, [x0, #12]
  40e0b8:	ldr	x0, [sp, #24]
  40e0bc:	add	x1, x0, #0x1c
  40e0c0:	ldr	w0, [sp, #44]
  40e0c4:	add	x3, x1, x0
  40e0c8:	ldr	x0, [sp, #32]
  40e0cc:	sub	x0, x0, #0x2
  40e0d0:	lsl	x1, x0, #2
  40e0d4:	ldr	w0, [sp, #44]
  40e0d8:	sub	x0, x1, x0
  40e0dc:	mov	x2, x0
  40e0e0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40e0e4:	add	x1, x0, #0x4b0
  40e0e8:	mov	x0, x3
  40e0ec:	bl	402880 <memcpy@plt>
  40e0f0:	ldr	x0, [sp, #24]
  40e0f4:	add	x3, x0, #0x1c
  40e0f8:	ldr	x0, [sp, #32]
  40e0fc:	lsl	x0, x0, #2
  40e100:	ldr	x2, [sp, #24]
  40e104:	mov	x1, x0
  40e108:	mov	x0, x3
  40e10c:	bl	40e56c <ferror@plt+0xb56c>
  40e110:	ldr	x1, [sp, #16]
  40e114:	ldr	x0, [sp, #24]
  40e118:	bl	40df54 <ferror@plt+0xaf54>
  40e11c:	ldp	x29, x30, [sp], #48
  40e120:	ret
  40e124:	sub	sp, sp, #0x20
  40e128:	str	x0, [sp, #24]
  40e12c:	str	x1, [sp, #16]
  40e130:	str	x2, [sp, #8]
  40e134:	str	x3, [sp]
  40e138:	mov	w0, #0xffffff9f            	// #-97
  40e13c:	add	sp, sp, #0x20
  40e140:	ret
  40e144:	stp	x29, x30, [sp, #-224]!
  40e148:	mov	x29, sp
  40e14c:	str	x0, [sp, #24]
  40e150:	str	x1, [sp, #16]
  40e154:	mov	x3, #0x10                  	// #16
  40e158:	ldr	x2, [sp, #16]
  40e15c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  40e160:	add	x1, x0, #0x4f0
  40e164:	ldr	x0, [sp, #24]
  40e168:	bl	40e124 <ferror@plt+0xb124>
  40e16c:	cmn	w0, #0x5
  40e170:	b.eq	40e184 <ferror@plt+0xb184>  // b.none
  40e174:	cmp	w0, #0x0
  40e178:	b.ne	40e18c <ferror@plt+0xb18c>  // b.any
  40e17c:	mov	w0, #0x0                   	// #0
  40e180:	b	40e2a0 <ferror@plt+0xb2a0>
  40e184:	mov	w0, #0x1                   	// #1
  40e188:	b	40e2a0 <ferror@plt+0xb2a0>
  40e18c:	mov	x0, #0x8048                	// #32840
  40e190:	bl	402a80 <malloc@plt>
  40e194:	str	x0, [sp, #208]
  40e198:	ldr	x0, [sp, #208]
  40e19c:	cmp	x0, #0x0
  40e1a0:	b.ne	40e1ac <ferror@plt+0xb1ac>  // b.any
  40e1a4:	mov	w0, #0x1                   	// #1
  40e1a8:	b	40e2a0 <ferror@plt+0xb2a0>
  40e1ac:	add	x0, sp, #0x28
  40e1b0:	bl	40debc <ferror@plt+0xaebc>
  40e1b4:	str	xzr, [sp, #216]
  40e1b8:	ldr	x0, [sp, #24]
  40e1bc:	bl	402d80 <feof_unlocked@plt>
  40e1c0:	cmp	w0, #0x0
  40e1c4:	b.ne	40e25c <ferror@plt+0xb25c>  // b.any
  40e1c8:	ldr	x1, [sp, #208]
  40e1cc:	ldr	x0, [sp, #216]
  40e1d0:	add	x4, x1, x0
  40e1d4:	mov	x1, #0x8000                	// #32768
  40e1d8:	ldr	x0, [sp, #216]
  40e1dc:	sub	x0, x1, x0
  40e1e0:	ldr	x3, [sp, #24]
  40e1e4:	mov	x2, x0
  40e1e8:	mov	x1, #0x1                   	// #1
  40e1ec:	mov	x0, x4
  40e1f0:	bl	402c80 <fread_unlocked@plt>
  40e1f4:	str	x0, [sp, #200]
  40e1f8:	ldr	x1, [sp, #216]
  40e1fc:	ldr	x0, [sp, #200]
  40e200:	add	x0, x1, x0
  40e204:	str	x0, [sp, #216]
  40e208:	ldr	x0, [sp, #216]
  40e20c:	cmp	x0, #0x8, lsl #12
  40e210:	b.eq	40e240 <ferror@plt+0xb240>  // b.none
  40e214:	ldr	x0, [sp, #200]
  40e218:	cmp	x0, #0x0
  40e21c:	b.ne	40e1b8 <ferror@plt+0xb1b8>  // b.any
  40e220:	ldr	x0, [sp, #24]
  40e224:	bl	402940 <ferror_unlocked@plt>
  40e228:	cmp	w0, #0x0
  40e22c:	b.eq	40e264 <ferror@plt+0xb264>  // b.none
  40e230:	ldr	x0, [sp, #208]
  40e234:	bl	402d20 <free@plt>
  40e238:	mov	w0, #0x1                   	// #1
  40e23c:	b	40e2a0 <ferror@plt+0xb2a0>
  40e240:	nop
  40e244:	add	x0, sp, #0x28
  40e248:	mov	x2, x0
  40e24c:	mov	x1, #0x8000                	// #32768
  40e250:	ldr	x0, [sp, #208]
  40e254:	bl	40e56c <ferror@plt+0xb56c>
  40e258:	b	40e1b4 <ferror@plt+0xb1b4>
  40e25c:	nop
  40e260:	b	40e268 <ferror@plt+0xb268>
  40e264:	nop
  40e268:	ldr	x0, [sp, #216]
  40e26c:	cmp	x0, #0x0
  40e270:	b.eq	40e288 <ferror@plt+0xb288>  // b.none
  40e274:	add	x0, sp, #0x28
  40e278:	mov	x2, x0
  40e27c:	ldr	x1, [sp, #216]
  40e280:	ldr	x0, [sp, #208]
  40e284:	bl	40e2ec <ferror@plt+0xb2ec>
  40e288:	add	x0, sp, #0x28
  40e28c:	ldr	x1, [sp, #16]
  40e290:	bl	40dfe0 <ferror@plt+0xafe0>
  40e294:	ldr	x0, [sp, #208]
  40e298:	bl	402d20 <free@plt>
  40e29c:	mov	w0, #0x0                   	// #0
  40e2a0:	ldp	x29, x30, [sp], #224
  40e2a4:	ret
  40e2a8:	stp	x29, x30, [sp, #-208]!
  40e2ac:	mov	x29, sp
  40e2b0:	str	x0, [sp, #40]
  40e2b4:	str	x1, [sp, #32]
  40e2b8:	str	x2, [sp, #24]
  40e2bc:	add	x0, sp, #0x30
  40e2c0:	bl	40debc <ferror@plt+0xaebc>
  40e2c4:	add	x0, sp, #0x30
  40e2c8:	mov	x2, x0
  40e2cc:	ldr	x1, [sp, #32]
  40e2d0:	ldr	x0, [sp, #40]
  40e2d4:	bl	40e2ec <ferror@plt+0xb2ec>
  40e2d8:	add	x0, sp, #0x30
  40e2dc:	ldr	x1, [sp, #24]
  40e2e0:	bl	40dfe0 <ferror@plt+0xafe0>
  40e2e4:	ldp	x29, x30, [sp], #208
  40e2e8:	ret
  40e2ec:	stp	x29, x30, [sp, #-80]!
  40e2f0:	mov	x29, sp
  40e2f4:	str	x0, [sp, #40]
  40e2f8:	str	x1, [sp, #32]
  40e2fc:	str	x2, [sp, #24]
  40e300:	ldr	x0, [sp, #24]
  40e304:	ldr	w0, [x0, #24]
  40e308:	cmp	w0, #0x0
  40e30c:	b.eq	40e41c <ferror@plt+0xb41c>  // b.none
  40e310:	ldr	x0, [sp, #24]
  40e314:	ldr	w0, [x0, #24]
  40e318:	mov	w0, w0
  40e31c:	str	x0, [sp, #64]
  40e320:	mov	x1, #0x80                  	// #128
  40e324:	ldr	x0, [sp, #64]
  40e328:	sub	x0, x1, x0
  40e32c:	ldr	x2, [sp, #32]
  40e330:	ldr	x1, [sp, #32]
  40e334:	cmp	x2, x0
  40e338:	csel	x0, x1, x0, ls  // ls = plast
  40e33c:	str	x0, [sp, #56]
  40e340:	ldr	x0, [sp, #24]
  40e344:	add	x1, x0, #0x1c
  40e348:	ldr	x0, [sp, #64]
  40e34c:	add	x0, x1, x0
  40e350:	ldr	x2, [sp, #56]
  40e354:	ldr	x1, [sp, #40]
  40e358:	bl	402880 <memcpy@plt>
  40e35c:	ldr	x0, [sp, #24]
  40e360:	ldr	w0, [x0, #24]
  40e364:	ldr	x1, [sp, #56]
  40e368:	add	w1, w0, w1
  40e36c:	ldr	x0, [sp, #24]
  40e370:	str	w1, [x0, #24]
  40e374:	ldr	x0, [sp, #24]
  40e378:	ldr	w0, [x0, #24]
  40e37c:	cmp	w0, #0x40
  40e380:	b.ls	40e3fc <ferror@plt+0xb3fc>  // b.plast
  40e384:	ldr	x0, [sp, #24]
  40e388:	add	x3, x0, #0x1c
  40e38c:	ldr	x0, [sp, #24]
  40e390:	ldr	w0, [x0, #24]
  40e394:	mov	w0, w0
  40e398:	and	x0, x0, #0xffffffc0
  40e39c:	ldr	x2, [sp, #24]
  40e3a0:	mov	x1, x0
  40e3a4:	mov	x0, x3
  40e3a8:	bl	40e56c <ferror@plt+0xb56c>
  40e3ac:	ldr	x0, [sp, #24]
  40e3b0:	ldr	w0, [x0, #24]
  40e3b4:	and	w1, w0, #0x3f
  40e3b8:	ldr	x0, [sp, #24]
  40e3bc:	str	w1, [x0, #24]
  40e3c0:	ldr	x0, [sp, #24]
  40e3c4:	add	x3, x0, #0x1c
  40e3c8:	ldr	x0, [sp, #24]
  40e3cc:	add	x1, x0, #0x1c
  40e3d0:	ldr	x2, [sp, #64]
  40e3d4:	ldr	x0, [sp, #56]
  40e3d8:	add	x0, x2, x0
  40e3dc:	and	x0, x0, #0xffffffffffffffc0
  40e3e0:	add	x1, x1, x0
  40e3e4:	ldr	x0, [sp, #24]
  40e3e8:	ldr	w0, [x0, #24]
  40e3ec:	mov	w0, w0
  40e3f0:	mov	x2, x0
  40e3f4:	mov	x0, x3
  40e3f8:	bl	402880 <memcpy@plt>
  40e3fc:	ldr	x1, [sp, #40]
  40e400:	ldr	x0, [sp, #56]
  40e404:	add	x0, x1, x0
  40e408:	str	x0, [sp, #40]
  40e40c:	ldr	x1, [sp, #32]
  40e410:	ldr	x0, [sp, #56]
  40e414:	sub	x0, x1, x0
  40e418:	str	x0, [sp, #32]
  40e41c:	ldr	x0, [sp, #32]
  40e420:	cmp	x0, #0x3f
  40e424:	b.ls	40e4bc <ferror@plt+0xb4bc>  // b.plast
  40e428:	ldr	x0, [sp, #40]
  40e42c:	and	x0, x0, #0x3
  40e430:	cmp	x0, #0x0
  40e434:	b.eq	40e484 <ferror@plt+0xb484>  // b.none
  40e438:	b	40e474 <ferror@plt+0xb474>
  40e43c:	ldr	x0, [sp, #24]
  40e440:	add	x0, x0, #0x1c
  40e444:	mov	x2, #0x40                  	// #64
  40e448:	ldr	x1, [sp, #40]
  40e44c:	bl	402880 <memcpy@plt>
  40e450:	ldr	x2, [sp, #24]
  40e454:	mov	x1, #0x40                  	// #64
  40e458:	bl	40e56c <ferror@plt+0xb56c>
  40e45c:	ldr	x0, [sp, #40]
  40e460:	add	x0, x0, #0x40
  40e464:	str	x0, [sp, #40]
  40e468:	ldr	x0, [sp, #32]
  40e46c:	sub	x0, x0, #0x40
  40e470:	str	x0, [sp, #32]
  40e474:	ldr	x0, [sp, #32]
  40e478:	cmp	x0, #0x40
  40e47c:	b.hi	40e43c <ferror@plt+0xb43c>  // b.pmore
  40e480:	b	40e4bc <ferror@plt+0xb4bc>
  40e484:	ldr	x0, [sp, #32]
  40e488:	and	x0, x0, #0xffffffffffffffc0
  40e48c:	ldr	x2, [sp, #24]
  40e490:	mov	x1, x0
  40e494:	ldr	x0, [sp, #40]
  40e498:	bl	40e56c <ferror@plt+0xb56c>
  40e49c:	ldr	x0, [sp, #32]
  40e4a0:	and	x0, x0, #0xffffffffffffffc0
  40e4a4:	ldr	x1, [sp, #40]
  40e4a8:	add	x0, x1, x0
  40e4ac:	str	x0, [sp, #40]
  40e4b0:	ldr	x0, [sp, #32]
  40e4b4:	and	x0, x0, #0x3f
  40e4b8:	str	x0, [sp, #32]
  40e4bc:	ldr	x0, [sp, #32]
  40e4c0:	cmp	x0, #0x0
  40e4c4:	b.eq	40e560 <ferror@plt+0xb560>  // b.none
  40e4c8:	ldr	x0, [sp, #24]
  40e4cc:	ldr	w0, [x0, #24]
  40e4d0:	mov	w0, w0
  40e4d4:	str	x0, [sp, #72]
  40e4d8:	ldr	x0, [sp, #24]
  40e4dc:	add	x1, x0, #0x1c
  40e4e0:	ldr	x0, [sp, #72]
  40e4e4:	add	x0, x1, x0
  40e4e8:	ldr	x2, [sp, #32]
  40e4ec:	ldr	x1, [sp, #40]
  40e4f0:	bl	402880 <memcpy@plt>
  40e4f4:	ldr	x1, [sp, #72]
  40e4f8:	ldr	x0, [sp, #32]
  40e4fc:	add	x0, x1, x0
  40e500:	str	x0, [sp, #72]
  40e504:	ldr	x0, [sp, #72]
  40e508:	cmp	x0, #0x3f
  40e50c:	b.ls	40e550 <ferror@plt+0xb550>  // b.plast
  40e510:	ldr	x0, [sp, #24]
  40e514:	add	x0, x0, #0x1c
  40e518:	ldr	x2, [sp, #24]
  40e51c:	mov	x1, #0x40                  	// #64
  40e520:	bl	40e56c <ferror@plt+0xb56c>
  40e524:	ldr	x0, [sp, #72]
  40e528:	sub	x0, x0, #0x40
  40e52c:	str	x0, [sp, #72]
  40e530:	ldr	x0, [sp, #24]
  40e534:	add	x3, x0, #0x1c
  40e538:	ldr	x0, [sp, #24]
  40e53c:	add	x0, x0, #0x5c
  40e540:	ldr	x2, [sp, #72]
  40e544:	mov	x1, x0
  40e548:	mov	x0, x3
  40e54c:	bl	402880 <memcpy@plt>
  40e550:	ldr	x0, [sp, #72]
  40e554:	mov	w1, w0
  40e558:	ldr	x0, [sp, #24]
  40e55c:	str	w1, [x0, #24]
  40e560:	nop
  40e564:	ldp	x29, x30, [sp], #80
  40e568:	ret
  40e56c:	sub	sp, sp, #0xb0
  40e570:	str	x0, [sp, #24]
  40e574:	str	x1, [sp, #16]
  40e578:	str	x2, [sp, #8]
  40e57c:	ldr	x0, [sp, #24]
  40e580:	str	x0, [sp, #168]
  40e584:	ldr	x0, [sp, #16]
  40e588:	lsr	x0, x0, #2
  40e58c:	str	x0, [sp, #144]
  40e590:	ldr	x0, [sp, #144]
  40e594:	lsl	x0, x0, #2
  40e598:	ldr	x1, [sp, #168]
  40e59c:	add	x0, x1, x0
  40e5a0:	str	x0, [sp, #136]
  40e5a4:	ldr	x0, [sp, #8]
  40e5a8:	ldr	w0, [x0]
  40e5ac:	str	w0, [sp, #164]
  40e5b0:	ldr	x0, [sp, #8]
  40e5b4:	ldr	w0, [x0, #4]
  40e5b8:	str	w0, [sp, #160]
  40e5bc:	ldr	x0, [sp, #8]
  40e5c0:	ldr	w0, [x0, #8]
  40e5c4:	str	w0, [sp, #156]
  40e5c8:	ldr	x0, [sp, #8]
  40e5cc:	ldr	w0, [x0, #12]
  40e5d0:	str	w0, [sp, #152]
  40e5d4:	ldr	x0, [sp, #16]
  40e5d8:	str	w0, [sp, #132]
  40e5dc:	ldr	x0, [sp, #8]
  40e5e0:	ldr	w1, [x0, #16]
  40e5e4:	ldr	w0, [sp, #132]
  40e5e8:	add	w1, w1, w0
  40e5ec:	ldr	x0, [sp, #8]
  40e5f0:	str	w1, [x0, #16]
  40e5f4:	ldr	x0, [sp, #8]
  40e5f8:	ldr	w1, [x0, #20]
  40e5fc:	ldr	x0, [sp, #16]
  40e600:	lsr	x0, x0, #32
  40e604:	mov	w3, w0
  40e608:	ldr	x0, [sp, #8]
  40e60c:	ldr	w0, [x0, #16]
  40e610:	ldr	w2, [sp, #132]
  40e614:	cmp	w2, w0
  40e618:	cset	w0, hi  // hi = pmore
  40e61c:	and	w0, w0, #0xff
  40e620:	add	w0, w3, w0
  40e624:	add	w1, w1, w0
  40e628:	ldr	x0, [sp, #8]
  40e62c:	str	w1, [x0, #20]
  40e630:	b	40fe18 <ferror@plt+0xce18>
  40e634:	add	x0, sp, #0x28
  40e638:	str	x0, [sp, #120]
  40e63c:	ldr	w0, [sp, #164]
  40e640:	str	w0, [sp, #116]
  40e644:	ldr	w0, [sp, #160]
  40e648:	str	w0, [sp, #112]
  40e64c:	ldr	w0, [sp, #156]
  40e650:	str	w0, [sp, #108]
  40e654:	ldr	w0, [sp, #152]
  40e658:	str	w0, [sp, #104]
  40e65c:	ldr	w1, [sp, #156]
  40e660:	ldr	w0, [sp, #152]
  40e664:	eor	w1, w1, w0
  40e668:	ldr	w0, [sp, #160]
  40e66c:	and	w1, w1, w0
  40e670:	ldr	w0, [sp, #152]
  40e674:	eor	w1, w1, w0
  40e678:	ldr	x0, [sp, #120]
  40e67c:	add	x2, x0, #0x4
  40e680:	str	x2, [sp, #120]
  40e684:	ldr	x2, [sp, #168]
  40e688:	ldr	w2, [x2]
  40e68c:	str	w2, [x0]
  40e690:	ldr	w0, [x0]
  40e694:	add	w1, w1, w0
  40e698:	mov	w0, #0xa478                	// #42104
  40e69c:	movk	w0, #0xd76a, lsl #16
  40e6a0:	add	w0, w1, w0
  40e6a4:	ldr	w1, [sp, #164]
  40e6a8:	add	w0, w1, w0
  40e6ac:	str	w0, [sp, #164]
  40e6b0:	ldr	x0, [sp, #168]
  40e6b4:	add	x0, x0, #0x4
  40e6b8:	str	x0, [sp, #168]
  40e6bc:	ldr	w0, [sp, #164]
  40e6c0:	ror	w0, w0, #25
  40e6c4:	str	w0, [sp, #164]
  40e6c8:	ldr	w1, [sp, #164]
  40e6cc:	ldr	w0, [sp, #160]
  40e6d0:	add	w0, w1, w0
  40e6d4:	str	w0, [sp, #164]
  40e6d8:	ldr	w1, [sp, #160]
  40e6dc:	ldr	w0, [sp, #156]
  40e6e0:	eor	w1, w1, w0
  40e6e4:	ldr	w0, [sp, #164]
  40e6e8:	and	w1, w1, w0
  40e6ec:	ldr	w0, [sp, #156]
  40e6f0:	eor	w1, w1, w0
  40e6f4:	ldr	x0, [sp, #120]
  40e6f8:	add	x2, x0, #0x4
  40e6fc:	str	x2, [sp, #120]
  40e700:	ldr	x2, [sp, #168]
  40e704:	ldr	w2, [x2]
  40e708:	str	w2, [x0]
  40e70c:	ldr	w0, [x0]
  40e710:	add	w1, w1, w0
  40e714:	mov	w0, #0xb756                	// #46934
  40e718:	movk	w0, #0xe8c7, lsl #16
  40e71c:	add	w0, w1, w0
  40e720:	ldr	w1, [sp, #152]
  40e724:	add	w0, w1, w0
  40e728:	str	w0, [sp, #152]
  40e72c:	ldr	x0, [sp, #168]
  40e730:	add	x0, x0, #0x4
  40e734:	str	x0, [sp, #168]
  40e738:	ldr	w0, [sp, #152]
  40e73c:	ror	w0, w0, #20
  40e740:	str	w0, [sp, #152]
  40e744:	ldr	w1, [sp, #152]
  40e748:	ldr	w0, [sp, #164]
  40e74c:	add	w0, w1, w0
  40e750:	str	w0, [sp, #152]
  40e754:	ldr	w1, [sp, #164]
  40e758:	ldr	w0, [sp, #160]
  40e75c:	eor	w1, w1, w0
  40e760:	ldr	w0, [sp, #152]
  40e764:	and	w1, w1, w0
  40e768:	ldr	w0, [sp, #160]
  40e76c:	eor	w1, w1, w0
  40e770:	ldr	x0, [sp, #120]
  40e774:	add	x2, x0, #0x4
  40e778:	str	x2, [sp, #120]
  40e77c:	ldr	x2, [sp, #168]
  40e780:	ldr	w2, [x2]
  40e784:	str	w2, [x0]
  40e788:	ldr	w0, [x0]
  40e78c:	add	w1, w1, w0
  40e790:	mov	w0, #0x70db                	// #28891
  40e794:	movk	w0, #0x2420, lsl #16
  40e798:	add	w0, w1, w0
  40e79c:	ldr	w1, [sp, #156]
  40e7a0:	add	w0, w1, w0
  40e7a4:	str	w0, [sp, #156]
  40e7a8:	ldr	x0, [sp, #168]
  40e7ac:	add	x0, x0, #0x4
  40e7b0:	str	x0, [sp, #168]
  40e7b4:	ldr	w0, [sp, #156]
  40e7b8:	ror	w0, w0, #15
  40e7bc:	str	w0, [sp, #156]
  40e7c0:	ldr	w1, [sp, #156]
  40e7c4:	ldr	w0, [sp, #152]
  40e7c8:	add	w0, w1, w0
  40e7cc:	str	w0, [sp, #156]
  40e7d0:	ldr	w1, [sp, #152]
  40e7d4:	ldr	w0, [sp, #164]
  40e7d8:	eor	w1, w1, w0
  40e7dc:	ldr	w0, [sp, #156]
  40e7e0:	and	w1, w1, w0
  40e7e4:	ldr	w0, [sp, #164]
  40e7e8:	eor	w1, w1, w0
  40e7ec:	ldr	x0, [sp, #120]
  40e7f0:	add	x2, x0, #0x4
  40e7f4:	str	x2, [sp, #120]
  40e7f8:	ldr	x2, [sp, #168]
  40e7fc:	ldr	w2, [x2]
  40e800:	str	w2, [x0]
  40e804:	ldr	w0, [x0]
  40e808:	add	w1, w1, w0
  40e80c:	mov	w0, #0xceee                	// #52974
  40e810:	movk	w0, #0xc1bd, lsl #16
  40e814:	add	w0, w1, w0
  40e818:	ldr	w1, [sp, #160]
  40e81c:	add	w0, w1, w0
  40e820:	str	w0, [sp, #160]
  40e824:	ldr	x0, [sp, #168]
  40e828:	add	x0, x0, #0x4
  40e82c:	str	x0, [sp, #168]
  40e830:	ldr	w0, [sp, #160]
  40e834:	ror	w0, w0, #10
  40e838:	str	w0, [sp, #160]
  40e83c:	ldr	w1, [sp, #160]
  40e840:	ldr	w0, [sp, #156]
  40e844:	add	w0, w1, w0
  40e848:	str	w0, [sp, #160]
  40e84c:	ldr	w1, [sp, #156]
  40e850:	ldr	w0, [sp, #152]
  40e854:	eor	w1, w1, w0
  40e858:	ldr	w0, [sp, #160]
  40e85c:	and	w1, w1, w0
  40e860:	ldr	w0, [sp, #152]
  40e864:	eor	w1, w1, w0
  40e868:	ldr	x0, [sp, #120]
  40e86c:	add	x2, x0, #0x4
  40e870:	str	x2, [sp, #120]
  40e874:	ldr	x2, [sp, #168]
  40e878:	ldr	w2, [x2]
  40e87c:	str	w2, [x0]
  40e880:	ldr	w0, [x0]
  40e884:	add	w1, w1, w0
  40e888:	mov	w0, #0xfaf                 	// #4015
  40e88c:	movk	w0, #0xf57c, lsl #16
  40e890:	add	w0, w1, w0
  40e894:	ldr	w1, [sp, #164]
  40e898:	add	w0, w1, w0
  40e89c:	str	w0, [sp, #164]
  40e8a0:	ldr	x0, [sp, #168]
  40e8a4:	add	x0, x0, #0x4
  40e8a8:	str	x0, [sp, #168]
  40e8ac:	ldr	w0, [sp, #164]
  40e8b0:	ror	w0, w0, #25
  40e8b4:	str	w0, [sp, #164]
  40e8b8:	ldr	w1, [sp, #164]
  40e8bc:	ldr	w0, [sp, #160]
  40e8c0:	add	w0, w1, w0
  40e8c4:	str	w0, [sp, #164]
  40e8c8:	ldr	w1, [sp, #160]
  40e8cc:	ldr	w0, [sp, #156]
  40e8d0:	eor	w1, w1, w0
  40e8d4:	ldr	w0, [sp, #164]
  40e8d8:	and	w1, w1, w0
  40e8dc:	ldr	w0, [sp, #156]
  40e8e0:	eor	w1, w1, w0
  40e8e4:	ldr	x0, [sp, #120]
  40e8e8:	add	x2, x0, #0x4
  40e8ec:	str	x2, [sp, #120]
  40e8f0:	ldr	x2, [sp, #168]
  40e8f4:	ldr	w2, [x2]
  40e8f8:	str	w2, [x0]
  40e8fc:	ldr	w0, [x0]
  40e900:	add	w1, w1, w0
  40e904:	mov	w0, #0xc62a                	// #50730
  40e908:	movk	w0, #0x4787, lsl #16
  40e90c:	add	w0, w1, w0
  40e910:	ldr	w1, [sp, #152]
  40e914:	add	w0, w1, w0
  40e918:	str	w0, [sp, #152]
  40e91c:	ldr	x0, [sp, #168]
  40e920:	add	x0, x0, #0x4
  40e924:	str	x0, [sp, #168]
  40e928:	ldr	w0, [sp, #152]
  40e92c:	ror	w0, w0, #20
  40e930:	str	w0, [sp, #152]
  40e934:	ldr	w1, [sp, #152]
  40e938:	ldr	w0, [sp, #164]
  40e93c:	add	w0, w1, w0
  40e940:	str	w0, [sp, #152]
  40e944:	ldr	w1, [sp, #164]
  40e948:	ldr	w0, [sp, #160]
  40e94c:	eor	w1, w1, w0
  40e950:	ldr	w0, [sp, #152]
  40e954:	and	w1, w1, w0
  40e958:	ldr	w0, [sp, #160]
  40e95c:	eor	w1, w1, w0
  40e960:	ldr	x0, [sp, #120]
  40e964:	add	x2, x0, #0x4
  40e968:	str	x2, [sp, #120]
  40e96c:	ldr	x2, [sp, #168]
  40e970:	ldr	w2, [x2]
  40e974:	str	w2, [x0]
  40e978:	ldr	w0, [x0]
  40e97c:	add	w1, w1, w0
  40e980:	mov	w0, #0x4613                	// #17939
  40e984:	movk	w0, #0xa830, lsl #16
  40e988:	add	w0, w1, w0
  40e98c:	ldr	w1, [sp, #156]
  40e990:	add	w0, w1, w0
  40e994:	str	w0, [sp, #156]
  40e998:	ldr	x0, [sp, #168]
  40e99c:	add	x0, x0, #0x4
  40e9a0:	str	x0, [sp, #168]
  40e9a4:	ldr	w0, [sp, #156]
  40e9a8:	ror	w0, w0, #15
  40e9ac:	str	w0, [sp, #156]
  40e9b0:	ldr	w1, [sp, #156]
  40e9b4:	ldr	w0, [sp, #152]
  40e9b8:	add	w0, w1, w0
  40e9bc:	str	w0, [sp, #156]
  40e9c0:	ldr	w1, [sp, #152]
  40e9c4:	ldr	w0, [sp, #164]
  40e9c8:	eor	w1, w1, w0
  40e9cc:	ldr	w0, [sp, #156]
  40e9d0:	and	w1, w1, w0
  40e9d4:	ldr	w0, [sp, #164]
  40e9d8:	eor	w1, w1, w0
  40e9dc:	ldr	x0, [sp, #120]
  40e9e0:	add	x2, x0, #0x4
  40e9e4:	str	x2, [sp, #120]
  40e9e8:	ldr	x2, [sp, #168]
  40e9ec:	ldr	w2, [x2]
  40e9f0:	str	w2, [x0]
  40e9f4:	ldr	w0, [x0]
  40e9f8:	add	w1, w1, w0
  40e9fc:	mov	w0, #0x9501                	// #38145
  40ea00:	movk	w0, #0xfd46, lsl #16
  40ea04:	add	w0, w1, w0
  40ea08:	ldr	w1, [sp, #160]
  40ea0c:	add	w0, w1, w0
  40ea10:	str	w0, [sp, #160]
  40ea14:	ldr	x0, [sp, #168]
  40ea18:	add	x0, x0, #0x4
  40ea1c:	str	x0, [sp, #168]
  40ea20:	ldr	w0, [sp, #160]
  40ea24:	ror	w0, w0, #10
  40ea28:	str	w0, [sp, #160]
  40ea2c:	ldr	w1, [sp, #160]
  40ea30:	ldr	w0, [sp, #156]
  40ea34:	add	w0, w1, w0
  40ea38:	str	w0, [sp, #160]
  40ea3c:	ldr	w1, [sp, #156]
  40ea40:	ldr	w0, [sp, #152]
  40ea44:	eor	w1, w1, w0
  40ea48:	ldr	w0, [sp, #160]
  40ea4c:	and	w1, w1, w0
  40ea50:	ldr	w0, [sp, #152]
  40ea54:	eor	w1, w1, w0
  40ea58:	ldr	x0, [sp, #120]
  40ea5c:	add	x2, x0, #0x4
  40ea60:	str	x2, [sp, #120]
  40ea64:	ldr	x2, [sp, #168]
  40ea68:	ldr	w2, [x2]
  40ea6c:	str	w2, [x0]
  40ea70:	ldr	w0, [x0]
  40ea74:	add	w1, w1, w0
  40ea78:	mov	w0, #0x98d8                	// #39128
  40ea7c:	movk	w0, #0x6980, lsl #16
  40ea80:	add	w0, w1, w0
  40ea84:	ldr	w1, [sp, #164]
  40ea88:	add	w0, w1, w0
  40ea8c:	str	w0, [sp, #164]
  40ea90:	ldr	x0, [sp, #168]
  40ea94:	add	x0, x0, #0x4
  40ea98:	str	x0, [sp, #168]
  40ea9c:	ldr	w0, [sp, #164]
  40eaa0:	ror	w0, w0, #25
  40eaa4:	str	w0, [sp, #164]
  40eaa8:	ldr	w1, [sp, #164]
  40eaac:	ldr	w0, [sp, #160]
  40eab0:	add	w0, w1, w0
  40eab4:	str	w0, [sp, #164]
  40eab8:	ldr	w1, [sp, #160]
  40eabc:	ldr	w0, [sp, #156]
  40eac0:	eor	w1, w1, w0
  40eac4:	ldr	w0, [sp, #164]
  40eac8:	and	w1, w1, w0
  40eacc:	ldr	w0, [sp, #156]
  40ead0:	eor	w1, w1, w0
  40ead4:	ldr	x0, [sp, #120]
  40ead8:	add	x2, x0, #0x4
  40eadc:	str	x2, [sp, #120]
  40eae0:	ldr	x2, [sp, #168]
  40eae4:	ldr	w2, [x2]
  40eae8:	str	w2, [x0]
  40eaec:	ldr	w0, [x0]
  40eaf0:	add	w1, w1, w0
  40eaf4:	mov	w0, #0xf7af                	// #63407
  40eaf8:	movk	w0, #0x8b44, lsl #16
  40eafc:	add	w0, w1, w0
  40eb00:	ldr	w1, [sp, #152]
  40eb04:	add	w0, w1, w0
  40eb08:	str	w0, [sp, #152]
  40eb0c:	ldr	x0, [sp, #168]
  40eb10:	add	x0, x0, #0x4
  40eb14:	str	x0, [sp, #168]
  40eb18:	ldr	w0, [sp, #152]
  40eb1c:	ror	w0, w0, #20
  40eb20:	str	w0, [sp, #152]
  40eb24:	ldr	w1, [sp, #152]
  40eb28:	ldr	w0, [sp, #164]
  40eb2c:	add	w0, w1, w0
  40eb30:	str	w0, [sp, #152]
  40eb34:	ldr	w1, [sp, #164]
  40eb38:	ldr	w0, [sp, #160]
  40eb3c:	eor	w1, w1, w0
  40eb40:	ldr	w0, [sp, #152]
  40eb44:	and	w1, w1, w0
  40eb48:	ldr	w0, [sp, #160]
  40eb4c:	eor	w1, w1, w0
  40eb50:	ldr	x0, [sp, #120]
  40eb54:	add	x2, x0, #0x4
  40eb58:	str	x2, [sp, #120]
  40eb5c:	ldr	x2, [sp, #168]
  40eb60:	ldr	w2, [x2]
  40eb64:	str	w2, [x0]
  40eb68:	ldr	w0, [x0]
  40eb6c:	add	w1, w1, w0
  40eb70:	mov	w0, #0xffff5bb1            	// #-42063
  40eb74:	add	w0, w1, w0
  40eb78:	ldr	w1, [sp, #156]
  40eb7c:	add	w0, w1, w0
  40eb80:	str	w0, [sp, #156]
  40eb84:	ldr	x0, [sp, #168]
  40eb88:	add	x0, x0, #0x4
  40eb8c:	str	x0, [sp, #168]
  40eb90:	ldr	w0, [sp, #156]
  40eb94:	ror	w0, w0, #15
  40eb98:	str	w0, [sp, #156]
  40eb9c:	ldr	w1, [sp, #156]
  40eba0:	ldr	w0, [sp, #152]
  40eba4:	add	w0, w1, w0
  40eba8:	str	w0, [sp, #156]
  40ebac:	ldr	w1, [sp, #152]
  40ebb0:	ldr	w0, [sp, #164]
  40ebb4:	eor	w1, w1, w0
  40ebb8:	ldr	w0, [sp, #156]
  40ebbc:	and	w1, w1, w0
  40ebc0:	ldr	w0, [sp, #164]
  40ebc4:	eor	w1, w1, w0
  40ebc8:	ldr	x0, [sp, #120]
  40ebcc:	add	x2, x0, #0x4
  40ebd0:	str	x2, [sp, #120]
  40ebd4:	ldr	x2, [sp, #168]
  40ebd8:	ldr	w2, [x2]
  40ebdc:	str	w2, [x0]
  40ebe0:	ldr	w0, [x0]
  40ebe4:	add	w1, w1, w0
  40ebe8:	mov	w0, #0xd7be                	// #55230
  40ebec:	movk	w0, #0x895c, lsl #16
  40ebf0:	add	w0, w1, w0
  40ebf4:	ldr	w1, [sp, #160]
  40ebf8:	add	w0, w1, w0
  40ebfc:	str	w0, [sp, #160]
  40ec00:	ldr	x0, [sp, #168]
  40ec04:	add	x0, x0, #0x4
  40ec08:	str	x0, [sp, #168]
  40ec0c:	ldr	w0, [sp, #160]
  40ec10:	ror	w0, w0, #10
  40ec14:	str	w0, [sp, #160]
  40ec18:	ldr	w1, [sp, #160]
  40ec1c:	ldr	w0, [sp, #156]
  40ec20:	add	w0, w1, w0
  40ec24:	str	w0, [sp, #160]
  40ec28:	ldr	w1, [sp, #156]
  40ec2c:	ldr	w0, [sp, #152]
  40ec30:	eor	w1, w1, w0
  40ec34:	ldr	w0, [sp, #160]
  40ec38:	and	w1, w1, w0
  40ec3c:	ldr	w0, [sp, #152]
  40ec40:	eor	w1, w1, w0
  40ec44:	ldr	x0, [sp, #120]
  40ec48:	add	x2, x0, #0x4
  40ec4c:	str	x2, [sp, #120]
  40ec50:	ldr	x2, [sp, #168]
  40ec54:	ldr	w2, [x2]
  40ec58:	str	w2, [x0]
  40ec5c:	ldr	w0, [x0]
  40ec60:	add	w1, w1, w0
  40ec64:	mov	w0, #0x1122                	// #4386
  40ec68:	movk	w0, #0x6b90, lsl #16
  40ec6c:	add	w0, w1, w0
  40ec70:	ldr	w1, [sp, #164]
  40ec74:	add	w0, w1, w0
  40ec78:	str	w0, [sp, #164]
  40ec7c:	ldr	x0, [sp, #168]
  40ec80:	add	x0, x0, #0x4
  40ec84:	str	x0, [sp, #168]
  40ec88:	ldr	w0, [sp, #164]
  40ec8c:	ror	w0, w0, #25
  40ec90:	str	w0, [sp, #164]
  40ec94:	ldr	w1, [sp, #164]
  40ec98:	ldr	w0, [sp, #160]
  40ec9c:	add	w0, w1, w0
  40eca0:	str	w0, [sp, #164]
  40eca4:	ldr	w1, [sp, #160]
  40eca8:	ldr	w0, [sp, #156]
  40ecac:	eor	w1, w1, w0
  40ecb0:	ldr	w0, [sp, #164]
  40ecb4:	and	w1, w1, w0
  40ecb8:	ldr	w0, [sp, #156]
  40ecbc:	eor	w1, w1, w0
  40ecc0:	ldr	x0, [sp, #120]
  40ecc4:	add	x2, x0, #0x4
  40ecc8:	str	x2, [sp, #120]
  40eccc:	ldr	x2, [sp, #168]
  40ecd0:	ldr	w2, [x2]
  40ecd4:	str	w2, [x0]
  40ecd8:	ldr	w0, [x0]
  40ecdc:	add	w1, w1, w0
  40ece0:	mov	w0, #0x7193                	// #29075
  40ece4:	movk	w0, #0xfd98, lsl #16
  40ece8:	add	w0, w1, w0
  40ecec:	ldr	w1, [sp, #152]
  40ecf0:	add	w0, w1, w0
  40ecf4:	str	w0, [sp, #152]
  40ecf8:	ldr	x0, [sp, #168]
  40ecfc:	add	x0, x0, #0x4
  40ed00:	str	x0, [sp, #168]
  40ed04:	ldr	w0, [sp, #152]
  40ed08:	ror	w0, w0, #20
  40ed0c:	str	w0, [sp, #152]
  40ed10:	ldr	w1, [sp, #152]
  40ed14:	ldr	w0, [sp, #164]
  40ed18:	add	w0, w1, w0
  40ed1c:	str	w0, [sp, #152]
  40ed20:	ldr	w1, [sp, #164]
  40ed24:	ldr	w0, [sp, #160]
  40ed28:	eor	w1, w1, w0
  40ed2c:	ldr	w0, [sp, #152]
  40ed30:	and	w1, w1, w0
  40ed34:	ldr	w0, [sp, #160]
  40ed38:	eor	w1, w1, w0
  40ed3c:	ldr	x0, [sp, #120]
  40ed40:	add	x2, x0, #0x4
  40ed44:	str	x2, [sp, #120]
  40ed48:	ldr	x2, [sp, #168]
  40ed4c:	ldr	w2, [x2]
  40ed50:	str	w2, [x0]
  40ed54:	ldr	w0, [x0]
  40ed58:	add	w1, w1, w0
  40ed5c:	mov	w0, #0x438e                	// #17294
  40ed60:	movk	w0, #0xa679, lsl #16
  40ed64:	add	w0, w1, w0
  40ed68:	ldr	w1, [sp, #156]
  40ed6c:	add	w0, w1, w0
  40ed70:	str	w0, [sp, #156]
  40ed74:	ldr	x0, [sp, #168]
  40ed78:	add	x0, x0, #0x4
  40ed7c:	str	x0, [sp, #168]
  40ed80:	ldr	w0, [sp, #156]
  40ed84:	ror	w0, w0, #15
  40ed88:	str	w0, [sp, #156]
  40ed8c:	ldr	w1, [sp, #156]
  40ed90:	ldr	w0, [sp, #152]
  40ed94:	add	w0, w1, w0
  40ed98:	str	w0, [sp, #156]
  40ed9c:	ldr	w1, [sp, #152]
  40eda0:	ldr	w0, [sp, #164]
  40eda4:	eor	w1, w1, w0
  40eda8:	ldr	w0, [sp, #156]
  40edac:	and	w1, w1, w0
  40edb0:	ldr	w0, [sp, #164]
  40edb4:	eor	w1, w1, w0
  40edb8:	ldr	x0, [sp, #120]
  40edbc:	add	x2, x0, #0x4
  40edc0:	str	x2, [sp, #120]
  40edc4:	ldr	x2, [sp, #168]
  40edc8:	ldr	w2, [x2]
  40edcc:	str	w2, [x0]
  40edd0:	ldr	w0, [x0]
  40edd4:	add	w1, w1, w0
  40edd8:	mov	w0, #0x821                 	// #2081
  40eddc:	movk	w0, #0x49b4, lsl #16
  40ede0:	add	w0, w1, w0
  40ede4:	ldr	w1, [sp, #160]
  40ede8:	add	w0, w1, w0
  40edec:	str	w0, [sp, #160]
  40edf0:	ldr	x0, [sp, #168]
  40edf4:	add	x0, x0, #0x4
  40edf8:	str	x0, [sp, #168]
  40edfc:	ldr	w0, [sp, #160]
  40ee00:	ror	w0, w0, #10
  40ee04:	str	w0, [sp, #160]
  40ee08:	ldr	w1, [sp, #160]
  40ee0c:	ldr	w0, [sp, #156]
  40ee10:	add	w0, w1, w0
  40ee14:	str	w0, [sp, #160]
  40ee18:	ldr	w1, [sp, #160]
  40ee1c:	ldr	w0, [sp, #156]
  40ee20:	eor	w1, w1, w0
  40ee24:	ldr	w0, [sp, #152]
  40ee28:	and	w1, w1, w0
  40ee2c:	ldr	w0, [sp, #156]
  40ee30:	eor	w1, w1, w0
  40ee34:	ldr	w0, [sp, #44]
  40ee38:	add	w1, w1, w0
  40ee3c:	ldr	w0, [sp, #164]
  40ee40:	add	w1, w1, w0
  40ee44:	mov	w0, #0x2562                	// #9570
  40ee48:	movk	w0, #0xf61e, lsl #16
  40ee4c:	add	w0, w1, w0
  40ee50:	str	w0, [sp, #164]
  40ee54:	ldr	w0, [sp, #164]
  40ee58:	ror	w0, w0, #27
  40ee5c:	str	w0, [sp, #164]
  40ee60:	ldr	w1, [sp, #164]
  40ee64:	ldr	w0, [sp, #160]
  40ee68:	add	w0, w1, w0
  40ee6c:	str	w0, [sp, #164]
  40ee70:	ldr	w1, [sp, #164]
  40ee74:	ldr	w0, [sp, #160]
  40ee78:	eor	w1, w1, w0
  40ee7c:	ldr	w0, [sp, #156]
  40ee80:	and	w1, w1, w0
  40ee84:	ldr	w0, [sp, #160]
  40ee88:	eor	w1, w1, w0
  40ee8c:	ldr	w0, [sp, #64]
  40ee90:	add	w1, w1, w0
  40ee94:	ldr	w0, [sp, #152]
  40ee98:	add	w1, w1, w0
  40ee9c:	mov	w0, #0xb340                	// #45888
  40eea0:	movk	w0, #0xc040, lsl #16
  40eea4:	add	w0, w1, w0
  40eea8:	str	w0, [sp, #152]
  40eeac:	ldr	w0, [sp, #152]
  40eeb0:	ror	w0, w0, #23
  40eeb4:	str	w0, [sp, #152]
  40eeb8:	ldr	w1, [sp, #152]
  40eebc:	ldr	w0, [sp, #164]
  40eec0:	add	w0, w1, w0
  40eec4:	str	w0, [sp, #152]
  40eec8:	ldr	w1, [sp, #152]
  40eecc:	ldr	w0, [sp, #164]
  40eed0:	eor	w1, w1, w0
  40eed4:	ldr	w0, [sp, #160]
  40eed8:	and	w1, w1, w0
  40eedc:	ldr	w0, [sp, #164]
  40eee0:	eor	w1, w1, w0
  40eee4:	ldr	w0, [sp, #84]
  40eee8:	add	w1, w1, w0
  40eeec:	ldr	w0, [sp, #156]
  40eef0:	add	w1, w1, w0
  40eef4:	mov	w0, #0x5a51                	// #23121
  40eef8:	movk	w0, #0x265e, lsl #16
  40eefc:	add	w0, w1, w0
  40ef00:	str	w0, [sp, #156]
  40ef04:	ldr	w0, [sp, #156]
  40ef08:	ror	w0, w0, #18
  40ef0c:	str	w0, [sp, #156]
  40ef10:	ldr	w1, [sp, #156]
  40ef14:	ldr	w0, [sp, #152]
  40ef18:	add	w0, w1, w0
  40ef1c:	str	w0, [sp, #156]
  40ef20:	ldr	w1, [sp, #156]
  40ef24:	ldr	w0, [sp, #152]
  40ef28:	eor	w1, w1, w0
  40ef2c:	ldr	w0, [sp, #164]
  40ef30:	and	w1, w1, w0
  40ef34:	ldr	w0, [sp, #152]
  40ef38:	eor	w1, w1, w0
  40ef3c:	ldr	w0, [sp, #40]
  40ef40:	add	w1, w1, w0
  40ef44:	ldr	w0, [sp, #160]
  40ef48:	add	w1, w1, w0
  40ef4c:	mov	w0, #0xc7aa                	// #51114
  40ef50:	movk	w0, #0xe9b6, lsl #16
  40ef54:	add	w0, w1, w0
  40ef58:	str	w0, [sp, #160]
  40ef5c:	ldr	w0, [sp, #160]
  40ef60:	ror	w0, w0, #12
  40ef64:	str	w0, [sp, #160]
  40ef68:	ldr	w1, [sp, #160]
  40ef6c:	ldr	w0, [sp, #156]
  40ef70:	add	w0, w1, w0
  40ef74:	str	w0, [sp, #160]
  40ef78:	ldr	w1, [sp, #160]
  40ef7c:	ldr	w0, [sp, #156]
  40ef80:	eor	w1, w1, w0
  40ef84:	ldr	w0, [sp, #152]
  40ef88:	and	w1, w1, w0
  40ef8c:	ldr	w0, [sp, #156]
  40ef90:	eor	w1, w1, w0
  40ef94:	ldr	w0, [sp, #60]
  40ef98:	add	w1, w1, w0
  40ef9c:	ldr	w0, [sp, #164]
  40efa0:	add	w1, w1, w0
  40efa4:	mov	w0, #0x105d                	// #4189
  40efa8:	movk	w0, #0xd62f, lsl #16
  40efac:	add	w0, w1, w0
  40efb0:	str	w0, [sp, #164]
  40efb4:	ldr	w0, [sp, #164]
  40efb8:	ror	w0, w0, #27
  40efbc:	str	w0, [sp, #164]
  40efc0:	ldr	w1, [sp, #164]
  40efc4:	ldr	w0, [sp, #160]
  40efc8:	add	w0, w1, w0
  40efcc:	str	w0, [sp, #164]
  40efd0:	ldr	w1, [sp, #164]
  40efd4:	ldr	w0, [sp, #160]
  40efd8:	eor	w1, w1, w0
  40efdc:	ldr	w0, [sp, #156]
  40efe0:	and	w1, w1, w0
  40efe4:	ldr	w0, [sp, #160]
  40efe8:	eor	w1, w1, w0
  40efec:	ldr	w0, [sp, #80]
  40eff0:	add	w1, w1, w0
  40eff4:	ldr	w0, [sp, #152]
  40eff8:	add	w1, w1, w0
  40effc:	mov	w0, #0x1453                	// #5203
  40f000:	movk	w0, #0x244, lsl #16
  40f004:	add	w0, w1, w0
  40f008:	str	w0, [sp, #152]
  40f00c:	ldr	w0, [sp, #152]
  40f010:	ror	w0, w0, #23
  40f014:	str	w0, [sp, #152]
  40f018:	ldr	w1, [sp, #152]
  40f01c:	ldr	w0, [sp, #164]
  40f020:	add	w0, w1, w0
  40f024:	str	w0, [sp, #152]
  40f028:	ldr	w1, [sp, #152]
  40f02c:	ldr	w0, [sp, #164]
  40f030:	eor	w1, w1, w0
  40f034:	ldr	w0, [sp, #160]
  40f038:	and	w1, w1, w0
  40f03c:	ldr	w0, [sp, #164]
  40f040:	eor	w1, w1, w0
  40f044:	ldr	w0, [sp, #100]
  40f048:	add	w1, w1, w0
  40f04c:	ldr	w0, [sp, #156]
  40f050:	add	w1, w1, w0
  40f054:	mov	w0, #0xe681                	// #59009
  40f058:	movk	w0, #0xd8a1, lsl #16
  40f05c:	add	w0, w1, w0
  40f060:	str	w0, [sp, #156]
  40f064:	ldr	w0, [sp, #156]
  40f068:	ror	w0, w0, #18
  40f06c:	str	w0, [sp, #156]
  40f070:	ldr	w1, [sp, #156]
  40f074:	ldr	w0, [sp, #152]
  40f078:	add	w0, w1, w0
  40f07c:	str	w0, [sp, #156]
  40f080:	ldr	w1, [sp, #156]
  40f084:	ldr	w0, [sp, #152]
  40f088:	eor	w1, w1, w0
  40f08c:	ldr	w0, [sp, #164]
  40f090:	and	w1, w1, w0
  40f094:	ldr	w0, [sp, #152]
  40f098:	eor	w1, w1, w0
  40f09c:	ldr	w0, [sp, #56]
  40f0a0:	add	w1, w1, w0
  40f0a4:	ldr	w0, [sp, #160]
  40f0a8:	add	w1, w1, w0
  40f0ac:	mov	w0, #0xfbc8                	// #64456
  40f0b0:	movk	w0, #0xe7d3, lsl #16
  40f0b4:	add	w0, w1, w0
  40f0b8:	str	w0, [sp, #160]
  40f0bc:	ldr	w0, [sp, #160]
  40f0c0:	ror	w0, w0, #12
  40f0c4:	str	w0, [sp, #160]
  40f0c8:	ldr	w1, [sp, #160]
  40f0cc:	ldr	w0, [sp, #156]
  40f0d0:	add	w0, w1, w0
  40f0d4:	str	w0, [sp, #160]
  40f0d8:	ldr	w1, [sp, #160]
  40f0dc:	ldr	w0, [sp, #156]
  40f0e0:	eor	w1, w1, w0
  40f0e4:	ldr	w0, [sp, #152]
  40f0e8:	and	w1, w1, w0
  40f0ec:	ldr	w0, [sp, #156]
  40f0f0:	eor	w1, w1, w0
  40f0f4:	ldr	w0, [sp, #76]
  40f0f8:	add	w1, w1, w0
  40f0fc:	ldr	w0, [sp, #164]
  40f100:	add	w1, w1, w0
  40f104:	mov	w0, #0xcde6                	// #52710
  40f108:	movk	w0, #0x21e1, lsl #16
  40f10c:	add	w0, w1, w0
  40f110:	str	w0, [sp, #164]
  40f114:	ldr	w0, [sp, #164]
  40f118:	ror	w0, w0, #27
  40f11c:	str	w0, [sp, #164]
  40f120:	ldr	w1, [sp, #164]
  40f124:	ldr	w0, [sp, #160]
  40f128:	add	w0, w1, w0
  40f12c:	str	w0, [sp, #164]
  40f130:	ldr	w1, [sp, #164]
  40f134:	ldr	w0, [sp, #160]
  40f138:	eor	w1, w1, w0
  40f13c:	ldr	w0, [sp, #156]
  40f140:	and	w1, w1, w0
  40f144:	ldr	w0, [sp, #160]
  40f148:	eor	w1, w1, w0
  40f14c:	ldr	w0, [sp, #96]
  40f150:	add	w1, w1, w0
  40f154:	ldr	w0, [sp, #152]
  40f158:	add	w1, w1, w0
  40f15c:	mov	w0, #0x7d6                 	// #2006
  40f160:	movk	w0, #0xc337, lsl #16
  40f164:	add	w0, w1, w0
  40f168:	str	w0, [sp, #152]
  40f16c:	ldr	w0, [sp, #152]
  40f170:	ror	w0, w0, #23
  40f174:	str	w0, [sp, #152]
  40f178:	ldr	w1, [sp, #152]
  40f17c:	ldr	w0, [sp, #164]
  40f180:	add	w0, w1, w0
  40f184:	str	w0, [sp, #152]
  40f188:	ldr	w1, [sp, #152]
  40f18c:	ldr	w0, [sp, #164]
  40f190:	eor	w1, w1, w0
  40f194:	ldr	w0, [sp, #160]
  40f198:	and	w1, w1, w0
  40f19c:	ldr	w0, [sp, #164]
  40f1a0:	eor	w1, w1, w0
  40f1a4:	ldr	w0, [sp, #52]
  40f1a8:	add	w1, w1, w0
  40f1ac:	ldr	w0, [sp, #156]
  40f1b0:	add	w1, w1, w0
  40f1b4:	mov	w0, #0xd87                 	// #3463
  40f1b8:	movk	w0, #0xf4d5, lsl #16
  40f1bc:	add	w0, w1, w0
  40f1c0:	str	w0, [sp, #156]
  40f1c4:	ldr	w0, [sp, #156]
  40f1c8:	ror	w0, w0, #18
  40f1cc:	str	w0, [sp, #156]
  40f1d0:	ldr	w1, [sp, #156]
  40f1d4:	ldr	w0, [sp, #152]
  40f1d8:	add	w0, w1, w0
  40f1dc:	str	w0, [sp, #156]
  40f1e0:	ldr	w1, [sp, #156]
  40f1e4:	ldr	w0, [sp, #152]
  40f1e8:	eor	w1, w1, w0
  40f1ec:	ldr	w0, [sp, #164]
  40f1f0:	and	w1, w1, w0
  40f1f4:	ldr	w0, [sp, #152]
  40f1f8:	eor	w1, w1, w0
  40f1fc:	ldr	w0, [sp, #72]
  40f200:	add	w1, w1, w0
  40f204:	ldr	w0, [sp, #160]
  40f208:	add	w1, w1, w0
  40f20c:	mov	w0, #0x14ed                	// #5357
  40f210:	movk	w0, #0x455a, lsl #16
  40f214:	add	w0, w1, w0
  40f218:	str	w0, [sp, #160]
  40f21c:	ldr	w0, [sp, #160]
  40f220:	ror	w0, w0, #12
  40f224:	str	w0, [sp, #160]
  40f228:	ldr	w1, [sp, #160]
  40f22c:	ldr	w0, [sp, #156]
  40f230:	add	w0, w1, w0
  40f234:	str	w0, [sp, #160]
  40f238:	ldr	w1, [sp, #160]
  40f23c:	ldr	w0, [sp, #156]
  40f240:	eor	w1, w1, w0
  40f244:	ldr	w0, [sp, #152]
  40f248:	and	w1, w1, w0
  40f24c:	ldr	w0, [sp, #156]
  40f250:	eor	w1, w1, w0
  40f254:	ldr	w0, [sp, #92]
  40f258:	add	w1, w1, w0
  40f25c:	ldr	w0, [sp, #164]
  40f260:	add	w1, w1, w0
  40f264:	mov	w0, #0xe905                	// #59653
  40f268:	movk	w0, #0xa9e3, lsl #16
  40f26c:	add	w0, w1, w0
  40f270:	str	w0, [sp, #164]
  40f274:	ldr	w0, [sp, #164]
  40f278:	ror	w0, w0, #27
  40f27c:	str	w0, [sp, #164]
  40f280:	ldr	w1, [sp, #164]
  40f284:	ldr	w0, [sp, #160]
  40f288:	add	w0, w1, w0
  40f28c:	str	w0, [sp, #164]
  40f290:	ldr	w1, [sp, #164]
  40f294:	ldr	w0, [sp, #160]
  40f298:	eor	w1, w1, w0
  40f29c:	ldr	w0, [sp, #156]
  40f2a0:	and	w1, w1, w0
  40f2a4:	ldr	w0, [sp, #160]
  40f2a8:	eor	w1, w1, w0
  40f2ac:	ldr	w0, [sp, #48]
  40f2b0:	add	w1, w1, w0
  40f2b4:	ldr	w0, [sp, #152]
  40f2b8:	add	w1, w1, w0
  40f2bc:	mov	w0, #0xa3f8                	// #41976
  40f2c0:	movk	w0, #0xfcef, lsl #16
  40f2c4:	add	w0, w1, w0
  40f2c8:	str	w0, [sp, #152]
  40f2cc:	ldr	w0, [sp, #152]
  40f2d0:	ror	w0, w0, #23
  40f2d4:	str	w0, [sp, #152]
  40f2d8:	ldr	w1, [sp, #152]
  40f2dc:	ldr	w0, [sp, #164]
  40f2e0:	add	w0, w1, w0
  40f2e4:	str	w0, [sp, #152]
  40f2e8:	ldr	w1, [sp, #152]
  40f2ec:	ldr	w0, [sp, #164]
  40f2f0:	eor	w1, w1, w0
  40f2f4:	ldr	w0, [sp, #160]
  40f2f8:	and	w1, w1, w0
  40f2fc:	ldr	w0, [sp, #164]
  40f300:	eor	w1, w1, w0
  40f304:	ldr	w0, [sp, #68]
  40f308:	add	w1, w1, w0
  40f30c:	ldr	w0, [sp, #156]
  40f310:	add	w1, w1, w0
  40f314:	mov	w0, #0x2d9                 	// #729
  40f318:	movk	w0, #0x676f, lsl #16
  40f31c:	add	w0, w1, w0
  40f320:	str	w0, [sp, #156]
  40f324:	ldr	w0, [sp, #156]
  40f328:	ror	w0, w0, #18
  40f32c:	str	w0, [sp, #156]
  40f330:	ldr	w1, [sp, #156]
  40f334:	ldr	w0, [sp, #152]
  40f338:	add	w0, w1, w0
  40f33c:	str	w0, [sp, #156]
  40f340:	ldr	w1, [sp, #156]
  40f344:	ldr	w0, [sp, #152]
  40f348:	eor	w1, w1, w0
  40f34c:	ldr	w0, [sp, #164]
  40f350:	and	w1, w1, w0
  40f354:	ldr	w0, [sp, #152]
  40f358:	eor	w1, w1, w0
  40f35c:	ldr	w0, [sp, #88]
  40f360:	add	w1, w1, w0
  40f364:	ldr	w0, [sp, #160]
  40f368:	add	w1, w1, w0
  40f36c:	mov	w0, #0x4c8a                	// #19594
  40f370:	movk	w0, #0x8d2a, lsl #16
  40f374:	add	w0, w1, w0
  40f378:	str	w0, [sp, #160]
  40f37c:	ldr	w0, [sp, #160]
  40f380:	ror	w0, w0, #12
  40f384:	str	w0, [sp, #160]
  40f388:	ldr	w1, [sp, #160]
  40f38c:	ldr	w0, [sp, #156]
  40f390:	add	w0, w1, w0
  40f394:	str	w0, [sp, #160]
  40f398:	ldr	w1, [sp, #160]
  40f39c:	ldr	w0, [sp, #156]
  40f3a0:	eor	w1, w1, w0
  40f3a4:	ldr	w0, [sp, #152]
  40f3a8:	eor	w1, w1, w0
  40f3ac:	ldr	w0, [sp, #60]
  40f3b0:	add	w1, w1, w0
  40f3b4:	ldr	w0, [sp, #164]
  40f3b8:	add	w1, w1, w0
  40f3bc:	mov	w0, #0x3942                	// #14658
  40f3c0:	movk	w0, #0xfffa, lsl #16
  40f3c4:	add	w0, w1, w0
  40f3c8:	str	w0, [sp, #164]
  40f3cc:	ldr	w0, [sp, #164]
  40f3d0:	ror	w0, w0, #28
  40f3d4:	str	w0, [sp, #164]
  40f3d8:	ldr	w1, [sp, #164]
  40f3dc:	ldr	w0, [sp, #160]
  40f3e0:	add	w0, w1, w0
  40f3e4:	str	w0, [sp, #164]
  40f3e8:	ldr	w1, [sp, #164]
  40f3ec:	ldr	w0, [sp, #160]
  40f3f0:	eor	w1, w1, w0
  40f3f4:	ldr	w0, [sp, #156]
  40f3f8:	eor	w1, w1, w0
  40f3fc:	ldr	w0, [sp, #72]
  40f400:	add	w1, w1, w0
  40f404:	ldr	w0, [sp, #152]
  40f408:	add	w1, w1, w0
  40f40c:	mov	w0, #0xf681                	// #63105
  40f410:	movk	w0, #0x8771, lsl #16
  40f414:	add	w0, w1, w0
  40f418:	str	w0, [sp, #152]
  40f41c:	ldr	w0, [sp, #152]
  40f420:	ror	w0, w0, #21
  40f424:	str	w0, [sp, #152]
  40f428:	ldr	w1, [sp, #152]
  40f42c:	ldr	w0, [sp, #164]
  40f430:	add	w0, w1, w0
  40f434:	str	w0, [sp, #152]
  40f438:	ldr	w1, [sp, #152]
  40f43c:	ldr	w0, [sp, #164]
  40f440:	eor	w1, w1, w0
  40f444:	ldr	w0, [sp, #160]
  40f448:	eor	w1, w1, w0
  40f44c:	ldr	w0, [sp, #84]
  40f450:	add	w1, w1, w0
  40f454:	ldr	w0, [sp, #156]
  40f458:	add	w1, w1, w0
  40f45c:	mov	w0, #0x6122                	// #24866
  40f460:	movk	w0, #0x6d9d, lsl #16
  40f464:	add	w0, w1, w0
  40f468:	str	w0, [sp, #156]
  40f46c:	ldr	w0, [sp, #156]
  40f470:	ror	w0, w0, #16
  40f474:	str	w0, [sp, #156]
  40f478:	ldr	w1, [sp, #156]
  40f47c:	ldr	w0, [sp, #152]
  40f480:	add	w0, w1, w0
  40f484:	str	w0, [sp, #156]
  40f488:	ldr	w1, [sp, #156]
  40f48c:	ldr	w0, [sp, #152]
  40f490:	eor	w1, w1, w0
  40f494:	ldr	w0, [sp, #164]
  40f498:	eor	w1, w1, w0
  40f49c:	ldr	w0, [sp, #96]
  40f4a0:	add	w1, w1, w0
  40f4a4:	ldr	w0, [sp, #160]
  40f4a8:	add	w1, w1, w0
  40f4ac:	mov	w0, #0x380c                	// #14348
  40f4b0:	movk	w0, #0xfde5, lsl #16
  40f4b4:	add	w0, w1, w0
  40f4b8:	str	w0, [sp, #160]
  40f4bc:	ldr	w0, [sp, #160]
  40f4c0:	ror	w0, w0, #9
  40f4c4:	str	w0, [sp, #160]
  40f4c8:	ldr	w1, [sp, #160]
  40f4cc:	ldr	w0, [sp, #156]
  40f4d0:	add	w0, w1, w0
  40f4d4:	str	w0, [sp, #160]
  40f4d8:	ldr	w1, [sp, #160]
  40f4dc:	ldr	w0, [sp, #156]
  40f4e0:	eor	w1, w1, w0
  40f4e4:	ldr	w0, [sp, #152]
  40f4e8:	eor	w1, w1, w0
  40f4ec:	ldr	w0, [sp, #44]
  40f4f0:	add	w1, w1, w0
  40f4f4:	ldr	w0, [sp, #164]
  40f4f8:	add	w1, w1, w0
  40f4fc:	mov	w0, #0xea44                	// #59972
  40f500:	movk	w0, #0xa4be, lsl #16
  40f504:	add	w0, w1, w0
  40f508:	str	w0, [sp, #164]
  40f50c:	ldr	w0, [sp, #164]
  40f510:	ror	w0, w0, #28
  40f514:	str	w0, [sp, #164]
  40f518:	ldr	w1, [sp, #164]
  40f51c:	ldr	w0, [sp, #160]
  40f520:	add	w0, w1, w0
  40f524:	str	w0, [sp, #164]
  40f528:	ldr	w1, [sp, #164]
  40f52c:	ldr	w0, [sp, #160]
  40f530:	eor	w1, w1, w0
  40f534:	ldr	w0, [sp, #156]
  40f538:	eor	w1, w1, w0
  40f53c:	ldr	w0, [sp, #56]
  40f540:	add	w1, w1, w0
  40f544:	ldr	w0, [sp, #152]
  40f548:	add	w1, w1, w0
  40f54c:	mov	w0, #0xcfa9                	// #53161
  40f550:	movk	w0, #0x4bde, lsl #16
  40f554:	add	w0, w1, w0
  40f558:	str	w0, [sp, #152]
  40f55c:	ldr	w0, [sp, #152]
  40f560:	ror	w0, w0, #21
  40f564:	str	w0, [sp, #152]
  40f568:	ldr	w1, [sp, #152]
  40f56c:	ldr	w0, [sp, #164]
  40f570:	add	w0, w1, w0
  40f574:	str	w0, [sp, #152]
  40f578:	ldr	w1, [sp, #152]
  40f57c:	ldr	w0, [sp, #164]
  40f580:	eor	w1, w1, w0
  40f584:	ldr	w0, [sp, #160]
  40f588:	eor	w1, w1, w0
  40f58c:	ldr	w0, [sp, #68]
  40f590:	add	w1, w1, w0
  40f594:	ldr	w0, [sp, #156]
  40f598:	add	w1, w1, w0
  40f59c:	mov	w0, #0x4b60                	// #19296
  40f5a0:	movk	w0, #0xf6bb, lsl #16
  40f5a4:	add	w0, w1, w0
  40f5a8:	str	w0, [sp, #156]
  40f5ac:	ldr	w0, [sp, #156]
  40f5b0:	ror	w0, w0, #16
  40f5b4:	str	w0, [sp, #156]
  40f5b8:	ldr	w1, [sp, #156]
  40f5bc:	ldr	w0, [sp, #152]
  40f5c0:	add	w0, w1, w0
  40f5c4:	str	w0, [sp, #156]
  40f5c8:	ldr	w1, [sp, #156]
  40f5cc:	ldr	w0, [sp, #152]
  40f5d0:	eor	w1, w1, w0
  40f5d4:	ldr	w0, [sp, #164]
  40f5d8:	eor	w1, w1, w0
  40f5dc:	ldr	w0, [sp, #80]
  40f5e0:	add	w1, w1, w0
  40f5e4:	ldr	w0, [sp, #160]
  40f5e8:	add	w1, w1, w0
  40f5ec:	mov	w0, #0xbc70                	// #48240
  40f5f0:	movk	w0, #0xbebf, lsl #16
  40f5f4:	add	w0, w1, w0
  40f5f8:	str	w0, [sp, #160]
  40f5fc:	ldr	w0, [sp, #160]
  40f600:	ror	w0, w0, #9
  40f604:	str	w0, [sp, #160]
  40f608:	ldr	w1, [sp, #160]
  40f60c:	ldr	w0, [sp, #156]
  40f610:	add	w0, w1, w0
  40f614:	str	w0, [sp, #160]
  40f618:	ldr	w1, [sp, #160]
  40f61c:	ldr	w0, [sp, #156]
  40f620:	eor	w1, w1, w0
  40f624:	ldr	w0, [sp, #152]
  40f628:	eor	w1, w1, w0
  40f62c:	ldr	w0, [sp, #92]
  40f630:	add	w1, w1, w0
  40f634:	ldr	w0, [sp, #164]
  40f638:	add	w1, w1, w0
  40f63c:	mov	w0, #0x7ec6                	// #32454
  40f640:	movk	w0, #0x289b, lsl #16
  40f644:	add	w0, w1, w0
  40f648:	str	w0, [sp, #164]
  40f64c:	ldr	w0, [sp, #164]
  40f650:	ror	w0, w0, #28
  40f654:	str	w0, [sp, #164]
  40f658:	ldr	w1, [sp, #164]
  40f65c:	ldr	w0, [sp, #160]
  40f660:	add	w0, w1, w0
  40f664:	str	w0, [sp, #164]
  40f668:	ldr	w1, [sp, #164]
  40f66c:	ldr	w0, [sp, #160]
  40f670:	eor	w1, w1, w0
  40f674:	ldr	w0, [sp, #156]
  40f678:	eor	w1, w1, w0
  40f67c:	ldr	w0, [sp, #40]
  40f680:	add	w1, w1, w0
  40f684:	ldr	w0, [sp, #152]
  40f688:	add	w1, w1, w0
  40f68c:	mov	w0, #0x27fa                	// #10234
  40f690:	movk	w0, #0xeaa1, lsl #16
  40f694:	add	w0, w1, w0
  40f698:	str	w0, [sp, #152]
  40f69c:	ldr	w0, [sp, #152]
  40f6a0:	ror	w0, w0, #21
  40f6a4:	str	w0, [sp, #152]
  40f6a8:	ldr	w1, [sp, #152]
  40f6ac:	ldr	w0, [sp, #164]
  40f6b0:	add	w0, w1, w0
  40f6b4:	str	w0, [sp, #152]
  40f6b8:	ldr	w1, [sp, #152]
  40f6bc:	ldr	w0, [sp, #164]
  40f6c0:	eor	w1, w1, w0
  40f6c4:	ldr	w0, [sp, #160]
  40f6c8:	eor	w1, w1, w0
  40f6cc:	ldr	w0, [sp, #52]
  40f6d0:	add	w1, w1, w0
  40f6d4:	ldr	w0, [sp, #156]
  40f6d8:	add	w1, w1, w0
  40f6dc:	mov	w0, #0x3085                	// #12421
  40f6e0:	movk	w0, #0xd4ef, lsl #16
  40f6e4:	add	w0, w1, w0
  40f6e8:	str	w0, [sp, #156]
  40f6ec:	ldr	w0, [sp, #156]
  40f6f0:	ror	w0, w0, #16
  40f6f4:	str	w0, [sp, #156]
  40f6f8:	ldr	w1, [sp, #156]
  40f6fc:	ldr	w0, [sp, #152]
  40f700:	add	w0, w1, w0
  40f704:	str	w0, [sp, #156]
  40f708:	ldr	w1, [sp, #156]
  40f70c:	ldr	w0, [sp, #152]
  40f710:	eor	w1, w1, w0
  40f714:	ldr	w0, [sp, #164]
  40f718:	eor	w1, w1, w0
  40f71c:	ldr	w0, [sp, #64]
  40f720:	add	w1, w1, w0
  40f724:	ldr	w0, [sp, #160]
  40f728:	add	w1, w1, w0
  40f72c:	mov	w0, #0x1d05                	// #7429
  40f730:	movk	w0, #0x488, lsl #16
  40f734:	add	w0, w1, w0
  40f738:	str	w0, [sp, #160]
  40f73c:	ldr	w0, [sp, #160]
  40f740:	ror	w0, w0, #9
  40f744:	str	w0, [sp, #160]
  40f748:	ldr	w1, [sp, #160]
  40f74c:	ldr	w0, [sp, #156]
  40f750:	add	w0, w1, w0
  40f754:	str	w0, [sp, #160]
  40f758:	ldr	w1, [sp, #160]
  40f75c:	ldr	w0, [sp, #156]
  40f760:	eor	w1, w1, w0
  40f764:	ldr	w0, [sp, #152]
  40f768:	eor	w1, w1, w0
  40f76c:	ldr	w0, [sp, #76]
  40f770:	add	w1, w1, w0
  40f774:	ldr	w0, [sp, #164]
  40f778:	add	w1, w1, w0
  40f77c:	mov	w0, #0xd039                	// #53305
  40f780:	movk	w0, #0xd9d4, lsl #16
  40f784:	add	w0, w1, w0
  40f788:	str	w0, [sp, #164]
  40f78c:	ldr	w0, [sp, #164]
  40f790:	ror	w0, w0, #28
  40f794:	str	w0, [sp, #164]
  40f798:	ldr	w1, [sp, #164]
  40f79c:	ldr	w0, [sp, #160]
  40f7a0:	add	w0, w1, w0
  40f7a4:	str	w0, [sp, #164]
  40f7a8:	ldr	w1, [sp, #164]
  40f7ac:	ldr	w0, [sp, #160]
  40f7b0:	eor	w1, w1, w0
  40f7b4:	ldr	w0, [sp, #156]
  40f7b8:	eor	w1, w1, w0
  40f7bc:	ldr	w0, [sp, #88]
  40f7c0:	add	w1, w1, w0
  40f7c4:	ldr	w0, [sp, #152]
  40f7c8:	add	w1, w1, w0
  40f7cc:	mov	w0, #0x99e5                	// #39397
  40f7d0:	movk	w0, #0xe6db, lsl #16
  40f7d4:	add	w0, w1, w0
  40f7d8:	str	w0, [sp, #152]
  40f7dc:	ldr	w0, [sp, #152]
  40f7e0:	ror	w0, w0, #21
  40f7e4:	str	w0, [sp, #152]
  40f7e8:	ldr	w1, [sp, #152]
  40f7ec:	ldr	w0, [sp, #164]
  40f7f0:	add	w0, w1, w0
  40f7f4:	str	w0, [sp, #152]
  40f7f8:	ldr	w1, [sp, #152]
  40f7fc:	ldr	w0, [sp, #164]
  40f800:	eor	w1, w1, w0
  40f804:	ldr	w0, [sp, #160]
  40f808:	eor	w1, w1, w0
  40f80c:	ldr	w0, [sp, #100]
  40f810:	add	w1, w1, w0
  40f814:	ldr	w0, [sp, #156]
  40f818:	add	w1, w1, w0
  40f81c:	mov	w0, #0x7cf8                	// #31992
  40f820:	movk	w0, #0x1fa2, lsl #16
  40f824:	add	w0, w1, w0
  40f828:	str	w0, [sp, #156]
  40f82c:	ldr	w0, [sp, #156]
  40f830:	ror	w0, w0, #16
  40f834:	str	w0, [sp, #156]
  40f838:	ldr	w1, [sp, #156]
  40f83c:	ldr	w0, [sp, #152]
  40f840:	add	w0, w1, w0
  40f844:	str	w0, [sp, #156]
  40f848:	ldr	w1, [sp, #156]
  40f84c:	ldr	w0, [sp, #152]
  40f850:	eor	w1, w1, w0
  40f854:	ldr	w0, [sp, #164]
  40f858:	eor	w1, w1, w0
  40f85c:	ldr	w0, [sp, #48]
  40f860:	add	w1, w1, w0
  40f864:	ldr	w0, [sp, #160]
  40f868:	add	w1, w1, w0
  40f86c:	mov	w0, #0x5665                	// #22117
  40f870:	movk	w0, #0xc4ac, lsl #16
  40f874:	add	w0, w1, w0
  40f878:	str	w0, [sp, #160]
  40f87c:	ldr	w0, [sp, #160]
  40f880:	ror	w0, w0, #9
  40f884:	str	w0, [sp, #160]
  40f888:	ldr	w1, [sp, #160]
  40f88c:	ldr	w0, [sp, #156]
  40f890:	add	w0, w1, w0
  40f894:	str	w0, [sp, #160]
  40f898:	ldr	w0, [sp, #152]
  40f89c:	mvn	w1, w0
  40f8a0:	ldr	w0, [sp, #160]
  40f8a4:	orr	w1, w1, w0
  40f8a8:	ldr	w0, [sp, #156]
  40f8ac:	eor	w1, w1, w0
  40f8b0:	ldr	w0, [sp, #40]
  40f8b4:	add	w1, w1, w0
  40f8b8:	ldr	w0, [sp, #164]
  40f8bc:	add	w1, w1, w0
  40f8c0:	mov	w0, #0x2244                	// #8772
  40f8c4:	movk	w0, #0xf429, lsl #16
  40f8c8:	add	w0, w1, w0
  40f8cc:	str	w0, [sp, #164]
  40f8d0:	ldr	w0, [sp, #164]
  40f8d4:	ror	w0, w0, #26
  40f8d8:	str	w0, [sp, #164]
  40f8dc:	ldr	w1, [sp, #164]
  40f8e0:	ldr	w0, [sp, #160]
  40f8e4:	add	w0, w1, w0
  40f8e8:	str	w0, [sp, #164]
  40f8ec:	ldr	w0, [sp, #156]
  40f8f0:	mvn	w1, w0
  40f8f4:	ldr	w0, [sp, #164]
  40f8f8:	orr	w1, w1, w0
  40f8fc:	ldr	w0, [sp, #160]
  40f900:	eor	w1, w1, w0
  40f904:	ldr	w0, [sp, #68]
  40f908:	add	w1, w1, w0
  40f90c:	ldr	w0, [sp, #152]
  40f910:	add	w1, w1, w0
  40f914:	mov	w0, #0xff97                	// #65431
  40f918:	movk	w0, #0x432a, lsl #16
  40f91c:	add	w0, w1, w0
  40f920:	str	w0, [sp, #152]
  40f924:	ldr	w0, [sp, #152]
  40f928:	ror	w0, w0, #22
  40f92c:	str	w0, [sp, #152]
  40f930:	ldr	w1, [sp, #152]
  40f934:	ldr	w0, [sp, #164]
  40f938:	add	w0, w1, w0
  40f93c:	str	w0, [sp, #152]
  40f940:	ldr	w0, [sp, #160]
  40f944:	mvn	w1, w0
  40f948:	ldr	w0, [sp, #152]
  40f94c:	orr	w1, w1, w0
  40f950:	ldr	w0, [sp, #164]
  40f954:	eor	w1, w1, w0
  40f958:	ldr	w0, [sp, #96]
  40f95c:	add	w1, w1, w0
  40f960:	ldr	w0, [sp, #156]
  40f964:	add	w1, w1, w0
  40f968:	mov	w0, #0x23a7                	// #9127
  40f96c:	movk	w0, #0xab94, lsl #16
  40f970:	add	w0, w1, w0
  40f974:	str	w0, [sp, #156]
  40f978:	ldr	w0, [sp, #156]
  40f97c:	ror	w0, w0, #17
  40f980:	str	w0, [sp, #156]
  40f984:	ldr	w1, [sp, #156]
  40f988:	ldr	w0, [sp, #152]
  40f98c:	add	w0, w1, w0
  40f990:	str	w0, [sp, #156]
  40f994:	ldr	w0, [sp, #164]
  40f998:	mvn	w1, w0
  40f99c:	ldr	w0, [sp, #156]
  40f9a0:	orr	w1, w1, w0
  40f9a4:	ldr	w0, [sp, #152]
  40f9a8:	eor	w1, w1, w0
  40f9ac:	ldr	w0, [sp, #60]
  40f9b0:	add	w1, w1, w0
  40f9b4:	ldr	w0, [sp, #160]
  40f9b8:	add	w1, w1, w0
  40f9bc:	mov	w0, #0xa039                	// #41017
  40f9c0:	movk	w0, #0xfc93, lsl #16
  40f9c4:	add	w0, w1, w0
  40f9c8:	str	w0, [sp, #160]
  40f9cc:	ldr	w0, [sp, #160]
  40f9d0:	ror	w0, w0, #11
  40f9d4:	str	w0, [sp, #160]
  40f9d8:	ldr	w1, [sp, #160]
  40f9dc:	ldr	w0, [sp, #156]
  40f9e0:	add	w0, w1, w0
  40f9e4:	str	w0, [sp, #160]
  40f9e8:	ldr	w0, [sp, #152]
  40f9ec:	mvn	w1, w0
  40f9f0:	ldr	w0, [sp, #160]
  40f9f4:	orr	w1, w1, w0
  40f9f8:	ldr	w0, [sp, #156]
  40f9fc:	eor	w1, w1, w0
  40fa00:	ldr	w0, [sp, #88]
  40fa04:	add	w1, w1, w0
  40fa08:	ldr	w0, [sp, #164]
  40fa0c:	add	w1, w1, w0
  40fa10:	mov	w0, #0x59c3                	// #22979
  40fa14:	movk	w0, #0x655b, lsl #16
  40fa18:	add	w0, w1, w0
  40fa1c:	str	w0, [sp, #164]
  40fa20:	ldr	w0, [sp, #164]
  40fa24:	ror	w0, w0, #26
  40fa28:	str	w0, [sp, #164]
  40fa2c:	ldr	w1, [sp, #164]
  40fa30:	ldr	w0, [sp, #160]
  40fa34:	add	w0, w1, w0
  40fa38:	str	w0, [sp, #164]
  40fa3c:	ldr	w0, [sp, #156]
  40fa40:	mvn	w1, w0
  40fa44:	ldr	w0, [sp, #164]
  40fa48:	orr	w1, w1, w0
  40fa4c:	ldr	w0, [sp, #160]
  40fa50:	eor	w1, w1, w0
  40fa54:	ldr	w0, [sp, #52]
  40fa58:	add	w1, w1, w0
  40fa5c:	ldr	w0, [sp, #152]
  40fa60:	add	w1, w1, w0
  40fa64:	mov	w0, #0xcc92                	// #52370
  40fa68:	movk	w0, #0x8f0c, lsl #16
  40fa6c:	add	w0, w1, w0
  40fa70:	str	w0, [sp, #152]
  40fa74:	ldr	w0, [sp, #152]
  40fa78:	ror	w0, w0, #22
  40fa7c:	str	w0, [sp, #152]
  40fa80:	ldr	w1, [sp, #152]
  40fa84:	ldr	w0, [sp, #164]
  40fa88:	add	w0, w1, w0
  40fa8c:	str	w0, [sp, #152]
  40fa90:	ldr	w0, [sp, #160]
  40fa94:	mvn	w1, w0
  40fa98:	ldr	w0, [sp, #152]
  40fa9c:	orr	w1, w1, w0
  40faa0:	ldr	w0, [sp, #164]
  40faa4:	eor	w1, w1, w0
  40faa8:	ldr	w0, [sp, #80]
  40faac:	add	w1, w1, w0
  40fab0:	ldr	w0, [sp, #156]
  40fab4:	add	w1, w1, w0
  40fab8:	mov	w0, #0xf47d                	// #62589
  40fabc:	movk	w0, #0xffef, lsl #16
  40fac0:	add	w0, w1, w0
  40fac4:	str	w0, [sp, #156]
  40fac8:	ldr	w0, [sp, #156]
  40facc:	ror	w0, w0, #17
  40fad0:	str	w0, [sp, #156]
  40fad4:	ldr	w1, [sp, #156]
  40fad8:	ldr	w0, [sp, #152]
  40fadc:	add	w0, w1, w0
  40fae0:	str	w0, [sp, #156]
  40fae4:	ldr	w0, [sp, #164]
  40fae8:	mvn	w1, w0
  40faec:	ldr	w0, [sp, #156]
  40faf0:	orr	w1, w1, w0
  40faf4:	ldr	w0, [sp, #152]
  40faf8:	eor	w1, w1, w0
  40fafc:	ldr	w0, [sp, #44]
  40fb00:	add	w1, w1, w0
  40fb04:	ldr	w0, [sp, #160]
  40fb08:	add	w1, w1, w0
  40fb0c:	mov	w0, #0x5dd1                	// #24017
  40fb10:	movk	w0, #0x8584, lsl #16
  40fb14:	add	w0, w1, w0
  40fb18:	str	w0, [sp, #160]
  40fb1c:	ldr	w0, [sp, #160]
  40fb20:	ror	w0, w0, #11
  40fb24:	str	w0, [sp, #160]
  40fb28:	ldr	w1, [sp, #160]
  40fb2c:	ldr	w0, [sp, #156]
  40fb30:	add	w0, w1, w0
  40fb34:	str	w0, [sp, #160]
  40fb38:	ldr	w0, [sp, #152]
  40fb3c:	mvn	w1, w0
  40fb40:	ldr	w0, [sp, #160]
  40fb44:	orr	w1, w1, w0
  40fb48:	ldr	w0, [sp, #156]
  40fb4c:	eor	w1, w1, w0
  40fb50:	ldr	w0, [sp, #72]
  40fb54:	add	w1, w1, w0
  40fb58:	ldr	w0, [sp, #164]
  40fb5c:	add	w1, w1, w0
  40fb60:	mov	w0, #0x7e4f                	// #32335
  40fb64:	movk	w0, #0x6fa8, lsl #16
  40fb68:	add	w0, w1, w0
  40fb6c:	str	w0, [sp, #164]
  40fb70:	ldr	w0, [sp, #164]
  40fb74:	ror	w0, w0, #26
  40fb78:	str	w0, [sp, #164]
  40fb7c:	ldr	w1, [sp, #164]
  40fb80:	ldr	w0, [sp, #160]
  40fb84:	add	w0, w1, w0
  40fb88:	str	w0, [sp, #164]
  40fb8c:	ldr	w0, [sp, #156]
  40fb90:	mvn	w1, w0
  40fb94:	ldr	w0, [sp, #164]
  40fb98:	orr	w1, w1, w0
  40fb9c:	ldr	w0, [sp, #160]
  40fba0:	eor	w1, w1, w0
  40fba4:	ldr	w0, [sp, #100]
  40fba8:	add	w1, w1, w0
  40fbac:	ldr	w0, [sp, #152]
  40fbb0:	add	w1, w1, w0
  40fbb4:	mov	w0, #0xe6e0                	// #59104
  40fbb8:	movk	w0, #0xfe2c, lsl #16
  40fbbc:	add	w0, w1, w0
  40fbc0:	str	w0, [sp, #152]
  40fbc4:	ldr	w0, [sp, #152]
  40fbc8:	ror	w0, w0, #22
  40fbcc:	str	w0, [sp, #152]
  40fbd0:	ldr	w1, [sp, #152]
  40fbd4:	ldr	w0, [sp, #164]
  40fbd8:	add	w0, w1, w0
  40fbdc:	str	w0, [sp, #152]
  40fbe0:	ldr	w0, [sp, #160]
  40fbe4:	mvn	w1, w0
  40fbe8:	ldr	w0, [sp, #152]
  40fbec:	orr	w1, w1, w0
  40fbf0:	ldr	w0, [sp, #164]
  40fbf4:	eor	w1, w1, w0
  40fbf8:	ldr	w0, [sp, #64]
  40fbfc:	add	w1, w1, w0
  40fc00:	ldr	w0, [sp, #156]
  40fc04:	add	w1, w1, w0
  40fc08:	mov	w0, #0x4314                	// #17172
  40fc0c:	movk	w0, #0xa301, lsl #16
  40fc10:	add	w0, w1, w0
  40fc14:	str	w0, [sp, #156]
  40fc18:	ldr	w0, [sp, #156]
  40fc1c:	ror	w0, w0, #17
  40fc20:	str	w0, [sp, #156]
  40fc24:	ldr	w1, [sp, #156]
  40fc28:	ldr	w0, [sp, #152]
  40fc2c:	add	w0, w1, w0
  40fc30:	str	w0, [sp, #156]
  40fc34:	ldr	w0, [sp, #164]
  40fc38:	mvn	w1, w0
  40fc3c:	ldr	w0, [sp, #156]
  40fc40:	orr	w1, w1, w0
  40fc44:	ldr	w0, [sp, #152]
  40fc48:	eor	w1, w1, w0
  40fc4c:	ldr	w0, [sp, #92]
  40fc50:	add	w1, w1, w0
  40fc54:	ldr	w0, [sp, #160]
  40fc58:	add	w1, w1, w0
  40fc5c:	mov	w0, #0x11a1                	// #4513
  40fc60:	movk	w0, #0x4e08, lsl #16
  40fc64:	add	w0, w1, w0
  40fc68:	str	w0, [sp, #160]
  40fc6c:	ldr	w0, [sp, #160]
  40fc70:	ror	w0, w0, #11
  40fc74:	str	w0, [sp, #160]
  40fc78:	ldr	w1, [sp, #160]
  40fc7c:	ldr	w0, [sp, #156]
  40fc80:	add	w0, w1, w0
  40fc84:	str	w0, [sp, #160]
  40fc88:	ldr	w0, [sp, #152]
  40fc8c:	mvn	w1, w0
  40fc90:	ldr	w0, [sp, #160]
  40fc94:	orr	w1, w1, w0
  40fc98:	ldr	w0, [sp, #156]
  40fc9c:	eor	w1, w1, w0
  40fca0:	ldr	w0, [sp, #56]
  40fca4:	add	w1, w1, w0
  40fca8:	ldr	w0, [sp, #164]
  40fcac:	add	w1, w1, w0
  40fcb0:	mov	w0, #0x7e82                	// #32386
  40fcb4:	movk	w0, #0xf753, lsl #16
  40fcb8:	add	w0, w1, w0
  40fcbc:	str	w0, [sp, #164]
  40fcc0:	ldr	w0, [sp, #164]
  40fcc4:	ror	w0, w0, #26
  40fcc8:	str	w0, [sp, #164]
  40fccc:	ldr	w1, [sp, #164]
  40fcd0:	ldr	w0, [sp, #160]
  40fcd4:	add	w0, w1, w0
  40fcd8:	str	w0, [sp, #164]
  40fcdc:	ldr	w0, [sp, #156]
  40fce0:	mvn	w1, w0
  40fce4:	ldr	w0, [sp, #164]
  40fce8:	orr	w1, w1, w0
  40fcec:	ldr	w0, [sp, #160]
  40fcf0:	eor	w1, w1, w0
  40fcf4:	ldr	w0, [sp, #84]
  40fcf8:	add	w1, w1, w0
  40fcfc:	ldr	w0, [sp, #152]
  40fd00:	add	w1, w1, w0
  40fd04:	mov	w0, #0xf235                	// #62005
  40fd08:	movk	w0, #0xbd3a, lsl #16
  40fd0c:	add	w0, w1, w0
  40fd10:	str	w0, [sp, #152]
  40fd14:	ldr	w0, [sp, #152]
  40fd18:	ror	w0, w0, #22
  40fd1c:	str	w0, [sp, #152]
  40fd20:	ldr	w1, [sp, #152]
  40fd24:	ldr	w0, [sp, #164]
  40fd28:	add	w0, w1, w0
  40fd2c:	str	w0, [sp, #152]
  40fd30:	ldr	w0, [sp, #160]
  40fd34:	mvn	w1, w0
  40fd38:	ldr	w0, [sp, #152]
  40fd3c:	orr	w1, w1, w0
  40fd40:	ldr	w0, [sp, #164]
  40fd44:	eor	w1, w1, w0
  40fd48:	ldr	w0, [sp, #48]
  40fd4c:	add	w1, w1, w0
  40fd50:	ldr	w0, [sp, #156]
  40fd54:	add	w1, w1, w0
  40fd58:	mov	w0, #0xd2bb                	// #53947
  40fd5c:	movk	w0, #0x2ad7, lsl #16
  40fd60:	add	w0, w1, w0
  40fd64:	str	w0, [sp, #156]
  40fd68:	ldr	w0, [sp, #156]
  40fd6c:	ror	w0, w0, #17
  40fd70:	str	w0, [sp, #156]
  40fd74:	ldr	w1, [sp, #156]
  40fd78:	ldr	w0, [sp, #152]
  40fd7c:	add	w0, w1, w0
  40fd80:	str	w0, [sp, #156]
  40fd84:	ldr	w0, [sp, #164]
  40fd88:	mvn	w1, w0
  40fd8c:	ldr	w0, [sp, #156]
  40fd90:	orr	w1, w1, w0
  40fd94:	ldr	w0, [sp, #152]
  40fd98:	eor	w1, w1, w0
  40fd9c:	ldr	w0, [sp, #76]
  40fda0:	add	w1, w1, w0
  40fda4:	ldr	w0, [sp, #160]
  40fda8:	add	w1, w1, w0
  40fdac:	mov	w0, #0xd391                	// #54161
  40fdb0:	movk	w0, #0xeb86, lsl #16
  40fdb4:	add	w0, w1, w0
  40fdb8:	str	w0, [sp, #160]
  40fdbc:	ldr	w0, [sp, #160]
  40fdc0:	ror	w0, w0, #11
  40fdc4:	str	w0, [sp, #160]
  40fdc8:	ldr	w1, [sp, #160]
  40fdcc:	ldr	w0, [sp, #156]
  40fdd0:	add	w0, w1, w0
  40fdd4:	str	w0, [sp, #160]
  40fdd8:	ldr	w1, [sp, #164]
  40fddc:	ldr	w0, [sp, #116]
  40fde0:	add	w0, w1, w0
  40fde4:	str	w0, [sp, #164]
  40fde8:	ldr	w1, [sp, #160]
  40fdec:	ldr	w0, [sp, #112]
  40fdf0:	add	w0, w1, w0
  40fdf4:	str	w0, [sp, #160]
  40fdf8:	ldr	w1, [sp, #156]
  40fdfc:	ldr	w0, [sp, #108]
  40fe00:	add	w0, w1, w0
  40fe04:	str	w0, [sp, #156]
  40fe08:	ldr	w1, [sp, #152]
  40fe0c:	ldr	w0, [sp, #104]
  40fe10:	add	w0, w1, w0
  40fe14:	str	w0, [sp, #152]
  40fe18:	ldr	x1, [sp, #168]
  40fe1c:	ldr	x0, [sp, #136]
  40fe20:	cmp	x1, x0
  40fe24:	b.cc	40e634 <ferror@plt+0xb634>  // b.lo, b.ul, b.last
  40fe28:	ldr	x0, [sp, #8]
  40fe2c:	ldr	w1, [sp, #164]
  40fe30:	str	w1, [x0]
  40fe34:	ldr	x0, [sp, #8]
  40fe38:	ldr	w1, [sp, #160]
  40fe3c:	str	w1, [x0, #4]
  40fe40:	ldr	x0, [sp, #8]
  40fe44:	ldr	w1, [sp, #156]
  40fe48:	str	w1, [x0, #8]
  40fe4c:	ldr	x0, [sp, #8]
  40fe50:	ldr	w1, [sp, #152]
  40fe54:	str	w1, [x0, #12]
  40fe58:	nop
  40fe5c:	add	sp, sp, #0xb0
  40fe60:	ret
  40fe64:	stp	x29, x30, [sp, #-64]!
  40fe68:	mov	x29, sp
  40fe6c:	str	w0, [sp, #44]
  40fe70:	str	x1, [sp, #32]
  40fe74:	str	x2, [sp, #24]
  40fe78:	str	w3, [sp, #40]
  40fe7c:	ldr	w0, [sp, #40]
  40fe80:	mov	w3, w0
  40fe84:	ldr	x2, [sp, #24]
  40fe88:	ldr	x1, [sp, #32]
  40fe8c:	ldr	w0, [sp, #44]
  40fe90:	bl	402c50 <posix_fadvise@plt>
  40fe94:	str	w0, [sp, #60]
  40fe98:	nop
  40fe9c:	ldp	x29, x30, [sp], #64
  40fea0:	ret
  40fea4:	stp	x29, x30, [sp, #-32]!
  40fea8:	mov	x29, sp
  40feac:	str	x0, [sp, #24]
  40feb0:	str	w1, [sp, #20]
  40feb4:	ldr	x0, [sp, #24]
  40feb8:	cmp	x0, #0x0
  40febc:	b.eq	40fed8 <ferror@plt+0xced8>  // b.none
  40fec0:	ldr	x0, [sp, #24]
  40fec4:	bl	402a10 <fileno@plt>
  40fec8:	ldr	w3, [sp, #20]
  40fecc:	mov	x2, #0x0                   	// #0
  40fed0:	mov	x1, #0x0                   	// #0
  40fed4:	bl	40fe64 <ferror@plt+0xce64>
  40fed8:	nop
  40fedc:	ldp	x29, x30, [sp], #32
  40fee0:	ret
  40fee4:	stp	x29, x30, [sp, #-48]!
  40fee8:	mov	x29, sp
  40feec:	str	x0, [sp, #24]
  40fef0:	str	xzr, [sp, #40]
  40fef4:	strb	wzr, [sp, #39]
  40fef8:	b	40ffd4 <ferror@plt+0xcfd4>
  40fefc:	ldrb	w0, [sp, #39]
  40ff00:	cmp	w0, #0x0
  40ff04:	b.eq	40ff4c <ferror@plt+0xcf4c>  // b.none
  40ff08:	strb	wzr, [sp, #39]
  40ff0c:	ldr	x0, [sp, #24]
  40ff10:	ldr	x0, [x0]
  40ff14:	ldrb	w0, [x0]
  40ff18:	bl	41a7bc <_obstack_memory_used@@Base+0x320>
  40ff1c:	and	w0, w0, #0xff
  40ff20:	eor	w0, w0, #0x1
  40ff24:	and	w0, w0, #0xff
  40ff28:	cmp	w0, #0x0
  40ff2c:	b.eq	40ffc0 <ferror@plt+0xcfc0>  // b.none
  40ff30:	ldr	x0, [sp, #24]
  40ff34:	ldr	x0, [x0]
  40ff38:	ldrb	w0, [x0]
  40ff3c:	cmp	w0, #0x7e
  40ff40:	b.eq	40ffc0 <ferror@plt+0xcfc0>  // b.none
  40ff44:	str	xzr, [sp, #40]
  40ff48:	b	40ffc0 <ferror@plt+0xcfc0>
  40ff4c:	ldr	x0, [sp, #24]
  40ff50:	ldr	x0, [x0]
  40ff54:	ldrb	w0, [x0]
  40ff58:	cmp	w0, #0x2e
  40ff5c:	b.ne	40ff84 <ferror@plt+0xcf84>  // b.any
  40ff60:	mov	w0, #0x1                   	// #1
  40ff64:	strb	w0, [sp, #39]
  40ff68:	ldr	x0, [sp, #40]
  40ff6c:	cmp	x0, #0x0
  40ff70:	b.ne	40ffc0 <ferror@plt+0xcfc0>  // b.any
  40ff74:	ldr	x0, [sp, #24]
  40ff78:	ldr	x0, [x0]
  40ff7c:	str	x0, [sp, #40]
  40ff80:	b	40ffc0 <ferror@plt+0xcfc0>
  40ff84:	ldr	x0, [sp, #24]
  40ff88:	ldr	x0, [x0]
  40ff8c:	ldrb	w0, [x0]
  40ff90:	bl	41a75c <_obstack_memory_used@@Base+0x2c0>
  40ff94:	and	w0, w0, #0xff
  40ff98:	eor	w0, w0, #0x1
  40ff9c:	and	w0, w0, #0xff
  40ffa0:	cmp	w0, #0x0
  40ffa4:	b.eq	40ffc0 <ferror@plt+0xcfc0>  // b.none
  40ffa8:	ldr	x0, [sp, #24]
  40ffac:	ldr	x0, [x0]
  40ffb0:	ldrb	w0, [x0]
  40ffb4:	cmp	w0, #0x7e
  40ffb8:	b.eq	40ffc0 <ferror@plt+0xcfc0>  // b.none
  40ffbc:	str	xzr, [sp, #40]
  40ffc0:	ldr	x0, [sp, #24]
  40ffc4:	ldr	x0, [x0]
  40ffc8:	add	x1, x0, #0x1
  40ffcc:	ldr	x0, [sp, #24]
  40ffd0:	str	x1, [x0]
  40ffd4:	ldr	x0, [sp, #24]
  40ffd8:	ldr	x0, [x0]
  40ffdc:	ldrb	w0, [x0]
  40ffe0:	cmp	w0, #0x0
  40ffe4:	b.ne	40fefc <ferror@plt+0xcefc>  // b.any
  40ffe8:	ldr	x0, [sp, #40]
  40ffec:	ldp	x29, x30, [sp], #48
  40fff0:	ret
  40fff4:	stp	x29, x30, [sp, #-32]!
  40fff8:	mov	x29, sp
  40fffc:	strb	w0, [sp, #31]
  410000:	ldrb	w0, [sp, #31]
  410004:	bl	41a8ac <_obstack_memory_used@@Base+0x410>
  410008:	and	w0, w0, #0xff
  41000c:	cmp	w0, #0x0
  410010:	b.eq	41001c <ferror@plt+0xd01c>  // b.none
  410014:	mov	w0, #0x0                   	// #0
  410018:	b	410054 <ferror@plt+0xd054>
  41001c:	ldrb	w0, [sp, #31]
  410020:	bl	41a7bc <_obstack_memory_used@@Base+0x320>
  410024:	and	w0, w0, #0xff
  410028:	cmp	w0, #0x0
  41002c:	b.eq	410038 <ferror@plt+0xd038>  // b.none
  410030:	ldrb	w0, [sp, #31]
  410034:	b	410054 <ferror@plt+0xd054>
  410038:	ldrb	w0, [sp, #31]
  41003c:	cmp	w0, #0x7e
  410040:	b.ne	41004c <ferror@plt+0xd04c>  // b.any
  410044:	mov	w0, #0xffffffff            	// #-1
  410048:	b	410054 <ferror@plt+0xd054>
  41004c:	ldrb	w0, [sp, #31]
  410050:	add	w0, w0, #0x100
  410054:	ldp	x29, x30, [sp], #32
  410058:	ret
  41005c:	stp	x29, x30, [sp, #-80]!
  410060:	mov	x29, sp
  410064:	str	x0, [sp, #40]
  410068:	str	x1, [sp, #32]
  41006c:	str	x2, [sp, #24]
  410070:	str	x3, [sp, #16]
  410074:	str	xzr, [sp, #72]
  410078:	str	xzr, [sp, #64]
  41007c:	b	4102d8 <ferror@plt+0xd2d8>
  410080:	str	wzr, [sp, #60]
  410084:	b	410120 <ferror@plt+0xd120>
  410088:	ldr	x1, [sp, #72]
  41008c:	ldr	x0, [sp, #32]
  410090:	cmp	x1, x0
  410094:	b.eq	4100b0 <ferror@plt+0xd0b0>  // b.none
  410098:	ldr	x1, [sp, #40]
  41009c:	ldr	x0, [sp, #72]
  4100a0:	add	x0, x1, x0
  4100a4:	ldrb	w0, [x0]
  4100a8:	bl	40fff4 <ferror@plt+0xcff4>
  4100ac:	b	4100b4 <ferror@plt+0xd0b4>
  4100b0:	mov	w0, #0x0                   	// #0
  4100b4:	str	w0, [sp, #56]
  4100b8:	ldr	x1, [sp, #64]
  4100bc:	ldr	x0, [sp, #16]
  4100c0:	cmp	x1, x0
  4100c4:	b.eq	4100e0 <ferror@plt+0xd0e0>  // b.none
  4100c8:	ldr	x1, [sp, #24]
  4100cc:	ldr	x0, [sp, #64]
  4100d0:	add	x0, x1, x0
  4100d4:	ldrb	w0, [x0]
  4100d8:	bl	40fff4 <ferror@plt+0xcff4>
  4100dc:	b	4100e4 <ferror@plt+0xd0e4>
  4100e0:	mov	w0, #0x0                   	// #0
  4100e4:	str	w0, [sp, #52]
  4100e8:	ldr	w1, [sp, #56]
  4100ec:	ldr	w0, [sp, #52]
  4100f0:	cmp	w1, w0
  4100f4:	b.eq	410108 <ferror@plt+0xd108>  // b.none
  4100f8:	ldr	w1, [sp, #56]
  4100fc:	ldr	w0, [sp, #52]
  410100:	sub	w0, w1, w0
  410104:	b	4102fc <ferror@plt+0xd2fc>
  410108:	ldr	x0, [sp, #72]
  41010c:	add	x0, x0, #0x1
  410110:	str	x0, [sp, #72]
  410114:	ldr	x0, [sp, #64]
  410118:	add	x0, x0, #0x1
  41011c:	str	x0, [sp, #64]
  410120:	ldr	x1, [sp, #72]
  410124:	ldr	x0, [sp, #32]
  410128:	cmp	x1, x0
  41012c:	b.cs	410158 <ferror@plt+0xd158>  // b.hs, b.nlast
  410130:	ldr	x1, [sp, #40]
  410134:	ldr	x0, [sp, #72]
  410138:	add	x0, x1, x0
  41013c:	ldrb	w0, [x0]
  410140:	bl	41a8ac <_obstack_memory_used@@Base+0x410>
  410144:	and	w0, w0, #0xff
  410148:	eor	w0, w0, #0x1
  41014c:	and	w0, w0, #0xff
  410150:	cmp	w0, #0x0
  410154:	b.ne	410088 <ferror@plt+0xd088>  // b.any
  410158:	ldr	x1, [sp, #64]
  41015c:	ldr	x0, [sp, #16]
  410160:	cmp	x1, x0
  410164:	b.cs	4101a0 <ferror@plt+0xd1a0>  // b.hs, b.nlast
  410168:	ldr	x1, [sp, #24]
  41016c:	ldr	x0, [sp, #64]
  410170:	add	x0, x1, x0
  410174:	ldrb	w0, [x0]
  410178:	bl	41a8ac <_obstack_memory_used@@Base+0x410>
  41017c:	and	w0, w0, #0xff
  410180:	eor	w0, w0, #0x1
  410184:	and	w0, w0, #0xff
  410188:	cmp	w0, #0x0
  41018c:	b.ne	410088 <ferror@plt+0xd088>  // b.any
  410190:	b	4101a0 <ferror@plt+0xd1a0>
  410194:	ldr	x0, [sp, #72]
  410198:	add	x0, x0, #0x1
  41019c:	str	x0, [sp, #72]
  4101a0:	ldr	x1, [sp, #40]
  4101a4:	ldr	x0, [sp, #72]
  4101a8:	add	x0, x1, x0
  4101ac:	ldrb	w0, [x0]
  4101b0:	cmp	w0, #0x30
  4101b4:	b.eq	410194 <ferror@plt+0xd194>  // b.none
  4101b8:	b	4101c8 <ferror@plt+0xd1c8>
  4101bc:	ldr	x0, [sp, #64]
  4101c0:	add	x0, x0, #0x1
  4101c4:	str	x0, [sp, #64]
  4101c8:	ldr	x1, [sp, #24]
  4101cc:	ldr	x0, [sp, #64]
  4101d0:	add	x0, x1, x0
  4101d4:	ldrb	w0, [x0]
  4101d8:	cmp	w0, #0x30
  4101dc:	b.eq	4101bc <ferror@plt+0xd1bc>  // b.none
  4101e0:	b	410234 <ferror@plt+0xd234>
  4101e4:	ldr	w0, [sp, #60]
  4101e8:	cmp	w0, #0x0
  4101ec:	b.ne	41021c <ferror@plt+0xd21c>  // b.any
  4101f0:	ldr	x1, [sp, #40]
  4101f4:	ldr	x0, [sp, #72]
  4101f8:	add	x0, x1, x0
  4101fc:	ldrb	w0, [x0]
  410200:	mov	w2, w0
  410204:	ldr	x1, [sp, #24]
  410208:	ldr	x0, [sp, #64]
  41020c:	add	x0, x1, x0
  410210:	ldrb	w0, [x0]
  410214:	sub	w0, w2, w0
  410218:	str	w0, [sp, #60]
  41021c:	ldr	x0, [sp, #72]
  410220:	add	x0, x0, #0x1
  410224:	str	x0, [sp, #72]
  410228:	ldr	x0, [sp, #64]
  41022c:	add	x0, x0, #0x1
  410230:	str	x0, [sp, #64]
  410234:	ldr	x1, [sp, #40]
  410238:	ldr	x0, [sp, #72]
  41023c:	add	x0, x1, x0
  410240:	ldrb	w0, [x0]
  410244:	bl	41a8ac <_obstack_memory_used@@Base+0x410>
  410248:	and	w0, w0, #0xff
  41024c:	cmp	w0, #0x0
  410250:	b.eq	410274 <ferror@plt+0xd274>  // b.none
  410254:	ldr	x1, [sp, #24]
  410258:	ldr	x0, [sp, #64]
  41025c:	add	x0, x1, x0
  410260:	ldrb	w0, [x0]
  410264:	bl	41a8ac <_obstack_memory_used@@Base+0x410>
  410268:	and	w0, w0, #0xff
  41026c:	cmp	w0, #0x0
  410270:	b.ne	4101e4 <ferror@plt+0xd1e4>  // b.any
  410274:	ldr	x1, [sp, #40]
  410278:	ldr	x0, [sp, #72]
  41027c:	add	x0, x1, x0
  410280:	ldrb	w0, [x0]
  410284:	bl	41a8ac <_obstack_memory_used@@Base+0x410>
  410288:	and	w0, w0, #0xff
  41028c:	cmp	w0, #0x0
  410290:	b.eq	41029c <ferror@plt+0xd29c>  // b.none
  410294:	mov	w0, #0x1                   	// #1
  410298:	b	4102fc <ferror@plt+0xd2fc>
  41029c:	ldr	x1, [sp, #24]
  4102a0:	ldr	x0, [sp, #64]
  4102a4:	add	x0, x1, x0
  4102a8:	ldrb	w0, [x0]
  4102ac:	bl	41a8ac <_obstack_memory_used@@Base+0x410>
  4102b0:	and	w0, w0, #0xff
  4102b4:	cmp	w0, #0x0
  4102b8:	b.eq	4102c4 <ferror@plt+0xd2c4>  // b.none
  4102bc:	mov	w0, #0xffffffff            	// #-1
  4102c0:	b	4102fc <ferror@plt+0xd2fc>
  4102c4:	ldr	w0, [sp, #60]
  4102c8:	cmp	w0, #0x0
  4102cc:	b.eq	4102d8 <ferror@plt+0xd2d8>  // b.none
  4102d0:	ldr	w0, [sp, #60]
  4102d4:	b	4102fc <ferror@plt+0xd2fc>
  4102d8:	ldr	x1, [sp, #72]
  4102dc:	ldr	x0, [sp, #32]
  4102e0:	cmp	x1, x0
  4102e4:	b.cc	410080 <ferror@plt+0xd080>  // b.lo, b.ul, b.last
  4102e8:	ldr	x1, [sp, #64]
  4102ec:	ldr	x0, [sp, #16]
  4102f0:	cmp	x1, x0
  4102f4:	b.cc	410080 <ferror@plt+0xd080>  // b.lo, b.ul, b.last
  4102f8:	mov	w0, #0x0                   	// #0
  4102fc:	ldp	x29, x30, [sp], #80
  410300:	ret
  410304:	stp	x29, x30, [sp, #-96]!
  410308:	mov	x29, sp
  41030c:	str	x0, [sp, #24]
  410310:	str	x1, [sp, #16]
  410314:	ldr	x1, [sp, #16]
  410318:	ldr	x0, [sp, #24]
  41031c:	bl	402cd0 <strcmp@plt>
  410320:	str	w0, [sp, #76]
  410324:	ldr	w0, [sp, #76]
  410328:	cmp	w0, #0x0
  41032c:	b.ne	410338 <ferror@plt+0xd338>  // b.any
  410330:	mov	w0, #0x0                   	// #0
  410334:	b	410570 <ferror@plt+0xd570>
  410338:	ldr	x0, [sp, #24]
  41033c:	ldrb	w0, [x0]
  410340:	cmp	w0, #0x0
  410344:	b.ne	410350 <ferror@plt+0xd350>  // b.any
  410348:	mov	w0, #0xffffffff            	// #-1
  41034c:	b	410570 <ferror@plt+0xd570>
  410350:	ldr	x0, [sp, #16]
  410354:	ldrb	w0, [x0]
  410358:	cmp	w0, #0x0
  41035c:	b.ne	410368 <ferror@plt+0xd368>  // b.any
  410360:	mov	w0, #0x1                   	// #1
  410364:	b	410570 <ferror@plt+0xd570>
  410368:	ldr	x1, [sp, #24]
  41036c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  410370:	add	x0, x0, #0x4f8
  410374:	bl	402cd0 <strcmp@plt>
  410378:	cmp	w0, #0x0
  41037c:	b.ne	410388 <ferror@plt+0xd388>  // b.any
  410380:	mov	w0, #0xffffffff            	// #-1
  410384:	b	410570 <ferror@plt+0xd570>
  410388:	ldr	x1, [sp, #16]
  41038c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  410390:	add	x0, x0, #0x4f8
  410394:	bl	402cd0 <strcmp@plt>
  410398:	cmp	w0, #0x0
  41039c:	b.ne	4103a8 <ferror@plt+0xd3a8>  // b.any
  4103a0:	mov	w0, #0x1                   	// #1
  4103a4:	b	410570 <ferror@plt+0xd570>
  4103a8:	ldr	x1, [sp, #24]
  4103ac:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4103b0:	add	x0, x0, #0x500
  4103b4:	bl	402cd0 <strcmp@plt>
  4103b8:	cmp	w0, #0x0
  4103bc:	b.ne	4103c8 <ferror@plt+0xd3c8>  // b.any
  4103c0:	mov	w0, #0xffffffff            	// #-1
  4103c4:	b	410570 <ferror@plt+0xd570>
  4103c8:	ldr	x1, [sp, #16]
  4103cc:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4103d0:	add	x0, x0, #0x500
  4103d4:	bl	402cd0 <strcmp@plt>
  4103d8:	cmp	w0, #0x0
  4103dc:	b.ne	4103e8 <ferror@plt+0xd3e8>  // b.any
  4103e0:	mov	w0, #0x1                   	// #1
  4103e4:	b	410570 <ferror@plt+0xd570>
  4103e8:	ldr	x0, [sp, #24]
  4103ec:	ldrb	w0, [x0]
  4103f0:	cmp	w0, #0x2e
  4103f4:	b.ne	410410 <ferror@plt+0xd410>  // b.any
  4103f8:	ldr	x0, [sp, #16]
  4103fc:	ldrb	w0, [x0]
  410400:	cmp	w0, #0x2e
  410404:	b.eq	410410 <ferror@plt+0xd410>  // b.none
  410408:	mov	w0, #0xffffffff            	// #-1
  41040c:	b	410570 <ferror@plt+0xd570>
  410410:	ldr	x0, [sp, #24]
  410414:	ldrb	w0, [x0]
  410418:	cmp	w0, #0x2e
  41041c:	b.eq	410438 <ferror@plt+0xd438>  // b.none
  410420:	ldr	x0, [sp, #16]
  410424:	ldrb	w0, [x0]
  410428:	cmp	w0, #0x2e
  41042c:	b.ne	410438 <ferror@plt+0xd438>  // b.any
  410430:	mov	w0, #0x1                   	// #1
  410434:	b	410570 <ferror@plt+0xd570>
  410438:	ldr	x0, [sp, #24]
  41043c:	ldrb	w0, [x0]
  410440:	cmp	w0, #0x2e
  410444:	b.ne	410470 <ferror@plt+0xd470>  // b.any
  410448:	ldr	x0, [sp, #16]
  41044c:	ldrb	w0, [x0]
  410450:	cmp	w0, #0x2e
  410454:	b.ne	410470 <ferror@plt+0xd470>  // b.any
  410458:	ldr	x0, [sp, #24]
  41045c:	add	x0, x0, #0x1
  410460:	str	x0, [sp, #24]
  410464:	ldr	x0, [sp, #16]
  410468:	add	x0, x0, #0x1
  41046c:	str	x0, [sp, #16]
  410470:	ldr	x0, [sp, #24]
  410474:	str	x0, [sp, #40]
  410478:	ldr	x0, [sp, #16]
  41047c:	str	x0, [sp, #32]
  410480:	add	x0, sp, #0x28
  410484:	bl	40fee4 <ferror@plt+0xcee4>
  410488:	str	x0, [sp, #64]
  41048c:	add	x0, sp, #0x20
  410490:	bl	40fee4 <ferror@plt+0xcee4>
  410494:	str	x0, [sp, #56]
  410498:	ldr	x0, [sp, #64]
  41049c:	cmp	x0, #0x0
  4104a0:	b.eq	4104ac <ferror@plt+0xd4ac>  // b.none
  4104a4:	ldr	x0, [sp, #64]
  4104a8:	b	4104b0 <ferror@plt+0xd4b0>
  4104ac:	ldr	x0, [sp, #40]
  4104b0:	ldr	x1, [sp, #24]
  4104b4:	sub	x0, x0, x1
  4104b8:	str	x0, [sp, #88]
  4104bc:	ldr	x0, [sp, #56]
  4104c0:	cmp	x0, #0x0
  4104c4:	b.eq	4104d0 <ferror@plt+0xd4d0>  // b.none
  4104c8:	ldr	x0, [sp, #56]
  4104cc:	b	4104d4 <ferror@plt+0xd4d4>
  4104d0:	ldr	x0, [sp, #32]
  4104d4:	ldr	x1, [sp, #16]
  4104d8:	sub	x0, x0, x1
  4104dc:	str	x0, [sp, #80]
  4104e0:	ldr	x0, [sp, #64]
  4104e4:	cmp	x0, #0x0
  4104e8:	b.ne	4104f8 <ferror@plt+0xd4f8>  // b.any
  4104ec:	ldr	x0, [sp, #56]
  4104f0:	cmp	x0, #0x0
  4104f4:	b.eq	410540 <ferror@plt+0xd540>  // b.none
  4104f8:	ldr	x1, [sp, #88]
  4104fc:	ldr	x0, [sp, #80]
  410500:	cmp	x1, x0
  410504:	b.ne	410540 <ferror@plt+0xd540>  // b.any
  410508:	ldr	x2, [sp, #88]
  41050c:	ldr	x1, [sp, #16]
  410510:	ldr	x0, [sp, #24]
  410514:	bl	402af0 <strncmp@plt>
  410518:	cmp	w0, #0x0
  41051c:	b.ne	410540 <ferror@plt+0xd540>  // b.any
  410520:	ldr	x1, [sp, #40]
  410524:	ldr	x0, [sp, #24]
  410528:	sub	x0, x1, x0
  41052c:	str	x0, [sp, #88]
  410530:	ldr	x1, [sp, #32]
  410534:	ldr	x0, [sp, #16]
  410538:	sub	x0, x1, x0
  41053c:	str	x0, [sp, #80]
  410540:	ldr	x3, [sp, #80]
  410544:	ldr	x2, [sp, #16]
  410548:	ldr	x1, [sp, #88]
  41054c:	ldr	x0, [sp, #24]
  410550:	bl	41005c <ferror@plt+0xd05c>
  410554:	str	w0, [sp, #52]
  410558:	ldr	w0, [sp, #52]
  41055c:	cmp	w0, #0x0
  410560:	b.ne	41056c <ferror@plt+0xd56c>  // b.any
  410564:	ldr	w0, [sp, #76]
  410568:	b	410570 <ferror@plt+0xd570>
  41056c:	ldr	w0, [sp, #52]
  410570:	ldp	x29, x30, [sp], #96
  410574:	ret
  410578:	stp	x29, x30, [sp, #-48]!
  41057c:	mov	x29, sp
  410580:	str	w0, [sp, #28]
  410584:	mov	w0, #0x1                   	// #1
  410588:	strb	w0, [sp, #47]
  41058c:	mov	x1, #0x0                   	// #0
  410590:	ldr	w0, [sp, #28]
  410594:	bl	402ff0 <setlocale@plt>
  410598:	str	x0, [sp, #32]
  41059c:	ldr	x0, [sp, #32]
  4105a0:	cmp	x0, #0x0
  4105a4:	b.eq	4105dc <ferror@plt+0xd5dc>  // b.none
  4105a8:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4105ac:	add	x1, x0, #0x508
  4105b0:	ldr	x0, [sp, #32]
  4105b4:	bl	402cd0 <strcmp@plt>
  4105b8:	cmp	w0, #0x0
  4105bc:	b.eq	4105d8 <ferror@plt+0xd5d8>  // b.none
  4105c0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4105c4:	add	x1, x0, #0x510
  4105c8:	ldr	x0, [sp, #32]
  4105cc:	bl	402cd0 <strcmp@plt>
  4105d0:	cmp	w0, #0x0
  4105d4:	b.ne	4105dc <ferror@plt+0xd5dc>  // b.any
  4105d8:	strb	wzr, [sp, #47]
  4105dc:	ldrb	w0, [sp, #47]
  4105e0:	ldp	x29, x30, [sp], #48
  4105e4:	ret
  4105e8:	sub	sp, sp, #0x10
  4105ec:	str	x0, [sp, #8]
  4105f0:	ldr	x0, [sp, #8]
  4105f4:	ldr	x0, [x0, #16]
  4105f8:	add	sp, sp, #0x10
  4105fc:	ret
  410600:	sub	sp, sp, #0x10
  410604:	str	x0, [sp, #8]
  410608:	ldr	x0, [sp, #8]
  41060c:	ldr	x0, [x0, #24]
  410610:	add	sp, sp, #0x10
  410614:	ret
  410618:	sub	sp, sp, #0x10
  41061c:	str	x0, [sp, #8]
  410620:	ldr	x0, [sp, #8]
  410624:	ldr	x0, [x0, #32]
  410628:	add	sp, sp, #0x10
  41062c:	ret
  410630:	sub	sp, sp, #0x30
  410634:	str	x0, [sp, #8]
  410638:	str	xzr, [sp, #32]
  41063c:	ldr	x0, [sp, #8]
  410640:	ldr	x0, [x0]
  410644:	str	x0, [sp, #40]
  410648:	b	4106b8 <ferror@plt+0xd6b8>
  41064c:	ldr	x0, [sp, #40]
  410650:	ldr	x0, [x0]
  410654:	cmp	x0, #0x0
  410658:	b.eq	4106ac <ferror@plt+0xd6ac>  // b.none
  41065c:	ldr	x0, [sp, #40]
  410660:	str	x0, [sp, #24]
  410664:	mov	x0, #0x1                   	// #1
  410668:	str	x0, [sp, #16]
  41066c:	b	41067c <ferror@plt+0xd67c>
  410670:	ldr	x0, [sp, #16]
  410674:	add	x0, x0, #0x1
  410678:	str	x0, [sp, #16]
  41067c:	ldr	x0, [sp, #24]
  410680:	ldr	x0, [x0, #8]
  410684:	str	x0, [sp, #24]
  410688:	ldr	x0, [sp, #24]
  41068c:	cmp	x0, #0x0
  410690:	b.ne	410670 <ferror@plt+0xd670>  // b.any
  410694:	ldr	x1, [sp, #16]
  410698:	ldr	x0, [sp, #32]
  41069c:	cmp	x1, x0
  4106a0:	b.ls	4106ac <ferror@plt+0xd6ac>  // b.plast
  4106a4:	ldr	x0, [sp, #16]
  4106a8:	str	x0, [sp, #32]
  4106ac:	ldr	x0, [sp, #40]
  4106b0:	add	x0, x0, #0x10
  4106b4:	str	x0, [sp, #40]
  4106b8:	ldr	x0, [sp, #8]
  4106bc:	ldr	x0, [x0, #8]
  4106c0:	ldr	x1, [sp, #40]
  4106c4:	cmp	x1, x0
  4106c8:	b.cc	41064c <ferror@plt+0xd64c>  // b.lo, b.ul, b.last
  4106cc:	ldr	x0, [sp, #32]
  4106d0:	add	sp, sp, #0x30
  4106d4:	ret
  4106d8:	sub	sp, sp, #0x30
  4106dc:	str	x0, [sp, #8]
  4106e0:	str	xzr, [sp, #32]
  4106e4:	str	xzr, [sp, #24]
  4106e8:	ldr	x0, [sp, #8]
  4106ec:	ldr	x0, [x0]
  4106f0:	str	x0, [sp, #40]
  4106f4:	b	41075c <ferror@plt+0xd75c>
  4106f8:	ldr	x0, [sp, #40]
  4106fc:	ldr	x0, [x0]
  410700:	cmp	x0, #0x0
  410704:	b.eq	410750 <ferror@plt+0xd750>  // b.none
  410708:	ldr	x0, [sp, #40]
  41070c:	str	x0, [sp, #16]
  410710:	ldr	x0, [sp, #32]
  410714:	add	x0, x0, #0x1
  410718:	str	x0, [sp, #32]
  41071c:	ldr	x0, [sp, #24]
  410720:	add	x0, x0, #0x1
  410724:	str	x0, [sp, #24]
  410728:	b	410738 <ferror@plt+0xd738>
  41072c:	ldr	x0, [sp, #24]
  410730:	add	x0, x0, #0x1
  410734:	str	x0, [sp, #24]
  410738:	ldr	x0, [sp, #16]
  41073c:	ldr	x0, [x0, #8]
  410740:	str	x0, [sp, #16]
  410744:	ldr	x0, [sp, #16]
  410748:	cmp	x0, #0x0
  41074c:	b.ne	41072c <ferror@plt+0xd72c>  // b.any
  410750:	ldr	x0, [sp, #40]
  410754:	add	x0, x0, #0x10
  410758:	str	x0, [sp, #40]
  41075c:	ldr	x0, [sp, #8]
  410760:	ldr	x0, [x0, #8]
  410764:	ldr	x1, [sp, #40]
  410768:	cmp	x1, x0
  41076c:	b.cc	4106f8 <ferror@plt+0xd6f8>  // b.lo, b.ul, b.last
  410770:	ldr	x0, [sp, #8]
  410774:	ldr	x0, [x0, #24]
  410778:	ldr	x1, [sp, #32]
  41077c:	cmp	x1, x0
  410780:	b.ne	4107a0 <ferror@plt+0xd7a0>  // b.any
  410784:	ldr	x0, [sp, #8]
  410788:	ldr	x0, [x0, #32]
  41078c:	ldr	x1, [sp, #24]
  410790:	cmp	x1, x0
  410794:	b.ne	4107a0 <ferror@plt+0xd7a0>  // b.any
  410798:	mov	w0, #0x1                   	// #1
  41079c:	b	4107a4 <ferror@plt+0xd7a4>
  4107a0:	mov	w0, #0x0                   	// #0
  4107a4:	add	sp, sp, #0x30
  4107a8:	ret
  4107ac:	stp	x29, x30, [sp, #-64]!
  4107b0:	mov	x29, sp
  4107b4:	str	x0, [sp, #24]
  4107b8:	str	x1, [sp, #16]
  4107bc:	ldr	x0, [sp, #24]
  4107c0:	bl	410618 <ferror@plt+0xd618>
  4107c4:	str	x0, [sp, #56]
  4107c8:	ldr	x0, [sp, #24]
  4107cc:	bl	4105e8 <ferror@plt+0xd5e8>
  4107d0:	str	x0, [sp, #48]
  4107d4:	ldr	x0, [sp, #24]
  4107d8:	bl	410600 <ferror@plt+0xd600>
  4107dc:	str	x0, [sp, #40]
  4107e0:	ldr	x0, [sp, #24]
  4107e4:	bl	410630 <ferror@plt+0xd630>
  4107e8:	str	x0, [sp, #32]
  4107ec:	ldr	x2, [sp, #56]
  4107f0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4107f4:	add	x1, x0, #0x530
  4107f8:	ldr	x0, [sp, #16]
  4107fc:	bl	402fe0 <fprintf@plt>
  410800:	ldr	x2, [sp, #48]
  410804:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  410808:	add	x1, x0, #0x548
  41080c:	ldr	x0, [sp, #16]
  410810:	bl	402fe0 <fprintf@plt>
  410814:	ldr	d0, [sp, #40]
  410818:	ucvtf	d0, d0
  41081c:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  410820:	fmov	d1, x0
  410824:	fmul	d1, d0, d1
  410828:	ldr	d0, [sp, #48]
  41082c:	ucvtf	d0, d0
  410830:	fdiv	d0, d1, d0
  410834:	ldr	x2, [sp, #40]
  410838:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  41083c:	add	x1, x0, #0x560
  410840:	ldr	x0, [sp, #16]
  410844:	bl	402fe0 <fprintf@plt>
  410848:	ldr	x2, [sp, #32]
  41084c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  410850:	add	x1, x0, #0x588
  410854:	ldr	x0, [sp, #16]
  410858:	bl	402fe0 <fprintf@plt>
  41085c:	nop
  410860:	ldp	x29, x30, [sp], #64
  410864:	ret
  410868:	stp	x29, x30, [sp, #-48]!
  41086c:	mov	x29, sp
  410870:	str	x0, [sp, #24]
  410874:	str	x1, [sp, #16]
  410878:	ldr	x0, [sp, #24]
  41087c:	ldr	x2, [x0, #48]
  410880:	ldr	x0, [sp, #24]
  410884:	ldr	x0, [x0, #16]
  410888:	mov	x1, x0
  41088c:	ldr	x0, [sp, #16]
  410890:	blr	x2
  410894:	str	x0, [sp, #40]
  410898:	ldr	x0, [sp, #24]
  41089c:	ldr	x0, [x0, #16]
  4108a0:	ldr	x1, [sp, #40]
  4108a4:	cmp	x1, x0
  4108a8:	b.cc	4108b0 <ferror@plt+0xd8b0>  // b.lo, b.ul, b.last
  4108ac:	bl	402c20 <abort@plt>
  4108b0:	ldr	x0, [sp, #24]
  4108b4:	ldr	x1, [x0]
  4108b8:	ldr	x0, [sp, #40]
  4108bc:	lsl	x0, x0, #4
  4108c0:	add	x0, x1, x0
  4108c4:	ldp	x29, x30, [sp], #48
  4108c8:	ret
  4108cc:	stp	x29, x30, [sp, #-48]!
  4108d0:	mov	x29, sp
  4108d4:	str	x0, [sp, #24]
  4108d8:	str	x1, [sp, #16]
  4108dc:	ldr	x1, [sp, #16]
  4108e0:	ldr	x0, [sp, #24]
  4108e4:	bl	410868 <ferror@plt+0xd868>
  4108e8:	str	x0, [sp, #32]
  4108ec:	ldr	x0, [sp, #32]
  4108f0:	ldr	x0, [x0]
  4108f4:	cmp	x0, #0x0
  4108f8:	b.ne	410904 <ferror@plt+0xd904>  // b.any
  4108fc:	mov	x0, #0x0                   	// #0
  410900:	b	410974 <ferror@plt+0xd974>
  410904:	ldr	x0, [sp, #32]
  410908:	str	x0, [sp, #40]
  41090c:	b	410964 <ferror@plt+0xd964>
  410910:	ldr	x0, [sp, #40]
  410914:	ldr	x0, [x0]
  410918:	ldr	x1, [sp, #16]
  41091c:	cmp	x1, x0
  410920:	b.eq	41094c <ferror@plt+0xd94c>  // b.none
  410924:	ldr	x0, [sp, #24]
  410928:	ldr	x2, [x0, #56]
  41092c:	ldr	x0, [sp, #40]
  410930:	ldr	x0, [x0]
  410934:	mov	x1, x0
  410938:	ldr	x0, [sp, #16]
  41093c:	blr	x2
  410940:	and	w0, w0, #0xff
  410944:	cmp	w0, #0x0
  410948:	b.eq	410958 <ferror@plt+0xd958>  // b.none
  41094c:	ldr	x0, [sp, #40]
  410950:	ldr	x0, [x0]
  410954:	b	410974 <ferror@plt+0xd974>
  410958:	ldr	x0, [sp, #40]
  41095c:	ldr	x0, [x0, #8]
  410960:	str	x0, [sp, #40]
  410964:	ldr	x0, [sp, #40]
  410968:	cmp	x0, #0x0
  41096c:	b.ne	410910 <ferror@plt+0xd910>  // b.any
  410970:	mov	x0, #0x0                   	// #0
  410974:	ldp	x29, x30, [sp], #48
  410978:	ret
  41097c:	stp	x29, x30, [sp, #-48]!
  410980:	mov	x29, sp
  410984:	str	x0, [sp, #24]
  410988:	ldr	x0, [sp, #24]
  41098c:	ldr	x0, [x0, #32]
  410990:	cmp	x0, #0x0
  410994:	b.ne	4109a0 <ferror@plt+0xd9a0>  // b.any
  410998:	mov	x0, #0x0                   	// #0
  41099c:	b	4109f0 <ferror@plt+0xd9f0>
  4109a0:	ldr	x0, [sp, #24]
  4109a4:	ldr	x0, [x0]
  4109a8:	str	x0, [sp, #40]
  4109ac:	ldr	x0, [sp, #24]
  4109b0:	ldr	x0, [x0, #8]
  4109b4:	ldr	x1, [sp, #40]
  4109b8:	cmp	x1, x0
  4109bc:	b.cc	4109c4 <ferror@plt+0xd9c4>  // b.lo, b.ul, b.last
  4109c0:	bl	402c20 <abort@plt>
  4109c4:	ldr	x0, [sp, #40]
  4109c8:	ldr	x0, [x0]
  4109cc:	cmp	x0, #0x0
  4109d0:	b.eq	4109e0 <ferror@plt+0xd9e0>  // b.none
  4109d4:	ldr	x0, [sp, #40]
  4109d8:	ldr	x0, [x0]
  4109dc:	b	4109f0 <ferror@plt+0xd9f0>
  4109e0:	ldr	x0, [sp, #40]
  4109e4:	add	x0, x0, #0x10
  4109e8:	str	x0, [sp, #40]
  4109ec:	b	4109ac <ferror@plt+0xd9ac>
  4109f0:	ldp	x29, x30, [sp], #48
  4109f4:	ret
  4109f8:	stp	x29, x30, [sp, #-48]!
  4109fc:	mov	x29, sp
  410a00:	str	x0, [sp, #24]
  410a04:	str	x1, [sp, #16]
  410a08:	ldr	x1, [sp, #16]
  410a0c:	ldr	x0, [sp, #24]
  410a10:	bl	410868 <ferror@plt+0xd868>
  410a14:	str	x0, [sp, #40]
  410a18:	ldr	x0, [sp, #40]
  410a1c:	str	x0, [sp, #32]
  410a20:	ldr	x0, [sp, #32]
  410a24:	ldr	x0, [x0]
  410a28:	ldr	x1, [sp, #16]
  410a2c:	cmp	x1, x0
  410a30:	b.ne	410a54 <ferror@plt+0xda54>  // b.any
  410a34:	ldr	x0, [sp, #32]
  410a38:	ldr	x0, [x0, #8]
  410a3c:	cmp	x0, #0x0
  410a40:	b.eq	410a54 <ferror@plt+0xda54>  // b.none
  410a44:	ldr	x0, [sp, #32]
  410a48:	ldr	x0, [x0, #8]
  410a4c:	ldr	x0, [x0]
  410a50:	b	410ab0 <ferror@plt+0xdab0>
  410a54:	ldr	x0, [sp, #32]
  410a58:	ldr	x0, [x0, #8]
  410a5c:	str	x0, [sp, #32]
  410a60:	ldr	x0, [sp, #32]
  410a64:	cmp	x0, #0x0
  410a68:	b.ne	410a20 <ferror@plt+0xda20>  // b.any
  410a6c:	b	410a8c <ferror@plt+0xda8c>
  410a70:	ldr	x0, [sp, #40]
  410a74:	ldr	x0, [x0]
  410a78:	cmp	x0, #0x0
  410a7c:	b.eq	410a8c <ferror@plt+0xda8c>  // b.none
  410a80:	ldr	x0, [sp, #40]
  410a84:	ldr	x0, [x0]
  410a88:	b	410ab0 <ferror@plt+0xdab0>
  410a8c:	ldr	x0, [sp, #40]
  410a90:	add	x0, x0, #0x10
  410a94:	str	x0, [sp, #40]
  410a98:	ldr	x0, [sp, #24]
  410a9c:	ldr	x0, [x0, #8]
  410aa0:	ldr	x1, [sp, #40]
  410aa4:	cmp	x1, x0
  410aa8:	b.cc	410a70 <ferror@plt+0xda70>  // b.lo, b.ul, b.last
  410aac:	mov	x0, #0x0                   	// #0
  410ab0:	ldp	x29, x30, [sp], #48
  410ab4:	ret
  410ab8:	sub	sp, sp, #0x40
  410abc:	str	x0, [sp, #24]
  410ac0:	str	x1, [sp, #16]
  410ac4:	str	x2, [sp, #8]
  410ac8:	str	xzr, [sp, #56]
  410acc:	ldr	x0, [sp, #24]
  410ad0:	ldr	x0, [x0]
  410ad4:	str	x0, [sp, #48]
  410ad8:	b	410b58 <ferror@plt+0xdb58>
  410adc:	ldr	x0, [sp, #48]
  410ae0:	ldr	x0, [x0]
  410ae4:	cmp	x0, #0x0
  410ae8:	b.eq	410b4c <ferror@plt+0xdb4c>  // b.none
  410aec:	ldr	x0, [sp, #48]
  410af0:	str	x0, [sp, #40]
  410af4:	b	410b40 <ferror@plt+0xdb40>
  410af8:	ldr	x1, [sp, #56]
  410afc:	ldr	x0, [sp, #8]
  410b00:	cmp	x1, x0
  410b04:	b.cc	410b10 <ferror@plt+0xdb10>  // b.lo, b.ul, b.last
  410b08:	ldr	x0, [sp, #56]
  410b0c:	b	410b70 <ferror@plt+0xdb70>
  410b10:	ldr	x0, [sp, #56]
  410b14:	add	x1, x0, #0x1
  410b18:	str	x1, [sp, #56]
  410b1c:	lsl	x0, x0, #3
  410b20:	ldr	x1, [sp, #16]
  410b24:	add	x0, x1, x0
  410b28:	ldr	x1, [sp, #40]
  410b2c:	ldr	x1, [x1]
  410b30:	str	x1, [x0]
  410b34:	ldr	x0, [sp, #40]
  410b38:	ldr	x0, [x0, #8]
  410b3c:	str	x0, [sp, #40]
  410b40:	ldr	x0, [sp, #40]
  410b44:	cmp	x0, #0x0
  410b48:	b.ne	410af8 <ferror@plt+0xdaf8>  // b.any
  410b4c:	ldr	x0, [sp, #48]
  410b50:	add	x0, x0, #0x10
  410b54:	str	x0, [sp, #48]
  410b58:	ldr	x0, [sp, #24]
  410b5c:	ldr	x0, [x0, #8]
  410b60:	ldr	x1, [sp, #48]
  410b64:	cmp	x1, x0
  410b68:	b.cc	410adc <ferror@plt+0xdadc>  // b.lo, b.ul, b.last
  410b6c:	ldr	x0, [sp, #56]
  410b70:	add	sp, sp, #0x40
  410b74:	ret
  410b78:	stp	x29, x30, [sp, #-80]!
  410b7c:	mov	x29, sp
  410b80:	str	x0, [sp, #40]
  410b84:	str	x1, [sp, #32]
  410b88:	str	x2, [sp, #24]
  410b8c:	str	xzr, [sp, #72]
  410b90:	ldr	x0, [sp, #40]
  410b94:	ldr	x0, [x0]
  410b98:	str	x0, [sp, #64]
  410b9c:	b	410c1c <ferror@plt+0xdc1c>
  410ba0:	ldr	x0, [sp, #64]
  410ba4:	ldr	x0, [x0]
  410ba8:	cmp	x0, #0x0
  410bac:	b.eq	410c10 <ferror@plt+0xdc10>  // b.none
  410bb0:	ldr	x0, [sp, #64]
  410bb4:	str	x0, [sp, #56]
  410bb8:	b	410c04 <ferror@plt+0xdc04>
  410bbc:	ldr	x0, [sp, #56]
  410bc0:	ldr	x0, [x0]
  410bc4:	ldr	x2, [sp, #32]
  410bc8:	ldr	x1, [sp, #24]
  410bcc:	blr	x2
  410bd0:	and	w0, w0, #0xff
  410bd4:	eor	w0, w0, #0x1
  410bd8:	and	w0, w0, #0xff
  410bdc:	cmp	w0, #0x0
  410be0:	b.eq	410bec <ferror@plt+0xdbec>  // b.none
  410be4:	ldr	x0, [sp, #72]
  410be8:	b	410c34 <ferror@plt+0xdc34>
  410bec:	ldr	x0, [sp, #72]
  410bf0:	add	x0, x0, #0x1
  410bf4:	str	x0, [sp, #72]
  410bf8:	ldr	x0, [sp, #56]
  410bfc:	ldr	x0, [x0, #8]
  410c00:	str	x0, [sp, #56]
  410c04:	ldr	x0, [sp, #56]
  410c08:	cmp	x0, #0x0
  410c0c:	b.ne	410bbc <ferror@plt+0xdbbc>  // b.any
  410c10:	ldr	x0, [sp, #64]
  410c14:	add	x0, x0, #0x10
  410c18:	str	x0, [sp, #64]
  410c1c:	ldr	x0, [sp, #40]
  410c20:	ldr	x0, [x0, #8]
  410c24:	ldr	x1, [sp, #64]
  410c28:	cmp	x1, x0
  410c2c:	b.cc	410ba0 <ferror@plt+0xdba0>  // b.lo, b.ul, b.last
  410c30:	ldr	x0, [sp, #72]
  410c34:	ldp	x29, x30, [sp], #80
  410c38:	ret
  410c3c:	sub	sp, sp, #0x20
  410c40:	str	x0, [sp, #8]
  410c44:	str	x1, [sp]
  410c48:	str	xzr, [sp, #24]
  410c4c:	b	410c8c <ferror@plt+0xdc8c>
  410c50:	ldr	x1, [sp, #24]
  410c54:	mov	x0, x1
  410c58:	lsl	x0, x0, #5
  410c5c:	sub	x1, x0, x1
  410c60:	ldrb	w0, [sp, #23]
  410c64:	add	x0, x1, x0
  410c68:	ldr	x1, [sp]
  410c6c:	udiv	x2, x0, x1
  410c70:	ldr	x1, [sp]
  410c74:	mul	x1, x2, x1
  410c78:	sub	x0, x0, x1
  410c7c:	str	x0, [sp, #24]
  410c80:	ldr	x0, [sp, #8]
  410c84:	add	x0, x0, #0x1
  410c88:	str	x0, [sp, #8]
  410c8c:	ldr	x0, [sp, #8]
  410c90:	ldrb	w0, [x0]
  410c94:	strb	w0, [sp, #23]
  410c98:	ldrb	w0, [sp, #23]
  410c9c:	cmp	w0, #0x0
  410ca0:	b.ne	410c50 <ferror@plt+0xdc50>  // b.any
  410ca4:	ldr	x0, [sp, #24]
  410ca8:	add	sp, sp, #0x20
  410cac:	ret
  410cb0:	sub	sp, sp, #0x20
  410cb4:	str	x0, [sp, #8]
  410cb8:	mov	x0, #0x3                   	// #3
  410cbc:	str	x0, [sp, #24]
  410cc0:	ldr	x0, [sp, #24]
  410cc4:	mul	x0, x0, x0
  410cc8:	str	x0, [sp, #16]
  410ccc:	b	410cfc <ferror@plt+0xdcfc>
  410cd0:	ldr	x0, [sp, #24]
  410cd4:	add	x0, x0, #0x1
  410cd8:	str	x0, [sp, #24]
  410cdc:	ldr	x0, [sp, #24]
  410ce0:	lsl	x0, x0, #2
  410ce4:	ldr	x1, [sp, #16]
  410ce8:	add	x0, x1, x0
  410cec:	str	x0, [sp, #16]
  410cf0:	ldr	x0, [sp, #24]
  410cf4:	add	x0, x0, #0x1
  410cf8:	str	x0, [sp, #24]
  410cfc:	ldr	x1, [sp, #16]
  410d00:	ldr	x0, [sp, #8]
  410d04:	cmp	x1, x0
  410d08:	b.cs	410d2c <ferror@plt+0xdd2c>  // b.hs, b.nlast
  410d0c:	ldr	x0, [sp, #8]
  410d10:	ldr	x1, [sp, #24]
  410d14:	udiv	x2, x0, x1
  410d18:	ldr	x1, [sp, #24]
  410d1c:	mul	x1, x2, x1
  410d20:	sub	x0, x0, x1
  410d24:	cmp	x0, #0x0
  410d28:	b.ne	410cd0 <ferror@plt+0xdcd0>  // b.any
  410d2c:	ldr	x0, [sp, #8]
  410d30:	ldr	x1, [sp, #24]
  410d34:	udiv	x2, x0, x1
  410d38:	ldr	x1, [sp, #24]
  410d3c:	mul	x1, x2, x1
  410d40:	sub	x0, x0, x1
  410d44:	cmp	x0, #0x0
  410d48:	cset	w0, ne  // ne = any
  410d4c:	and	w0, w0, #0xff
  410d50:	add	sp, sp, #0x20
  410d54:	ret
  410d58:	stp	x29, x30, [sp, #-32]!
  410d5c:	mov	x29, sp
  410d60:	str	x0, [sp, #24]
  410d64:	ldr	x0, [sp, #24]
  410d68:	cmp	x0, #0x9
  410d6c:	b.hi	410d78 <ferror@plt+0xdd78>  // b.pmore
  410d70:	mov	x0, #0xa                   	// #10
  410d74:	str	x0, [sp, #24]
  410d78:	ldr	x0, [sp, #24]
  410d7c:	orr	x0, x0, #0x1
  410d80:	str	x0, [sp, #24]
  410d84:	b	410d94 <ferror@plt+0xdd94>
  410d88:	ldr	x0, [sp, #24]
  410d8c:	add	x0, x0, #0x2
  410d90:	str	x0, [sp, #24]
  410d94:	ldr	x0, [sp, #24]
  410d98:	cmn	x0, #0x1
  410d9c:	b.eq	410dbc <ferror@plt+0xddbc>  // b.none
  410da0:	ldr	x0, [sp, #24]
  410da4:	bl	410cb0 <ferror@plt+0xdcb0>
  410da8:	and	w0, w0, #0xff
  410dac:	eor	w0, w0, #0x1
  410db0:	and	w0, w0, #0xff
  410db4:	cmp	w0, #0x0
  410db8:	b.ne	410d88 <ferror@plt+0xdd88>  // b.any
  410dbc:	ldr	x0, [sp, #24]
  410dc0:	ldp	x29, x30, [sp], #32
  410dc4:	ret
  410dc8:	sub	sp, sp, #0x10
  410dcc:	str	x0, [sp, #8]
  410dd0:	ldr	x1, [sp, #8]
  410dd4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  410dd8:	add	x0, x0, #0x518
  410ddc:	mov	x2, x1
  410de0:	mov	x3, x0
  410de4:	ldp	x0, x1, [x3]
  410de8:	stp	x0, x1, [x2]
  410dec:	ldr	w0, [x3, #16]
  410df0:	str	w0, [x2, #16]
  410df4:	nop
  410df8:	add	sp, sp, #0x10
  410dfc:	ret
  410e00:	stp	x29, x30, [sp, #-48]!
  410e04:	mov	x29, sp
  410e08:	str	x0, [sp, #24]
  410e0c:	str	x1, [sp, #16]
  410e10:	ldr	x0, [sp, #24]
  410e14:	mov	w1, #0x3                   	// #3
  410e18:	bl	41a604 <_obstack_memory_used@@Base+0x168>
  410e1c:	str	x0, [sp, #40]
  410e20:	ldr	x0, [sp, #40]
  410e24:	ldr	x1, [sp, #16]
  410e28:	udiv	x2, x0, x1
  410e2c:	ldr	x1, [sp, #16]
  410e30:	mul	x1, x2, x1
  410e34:	sub	x0, x0, x1
  410e38:	ldp	x29, x30, [sp], #48
  410e3c:	ret
  410e40:	sub	sp, sp, #0x10
  410e44:	str	x0, [sp, #8]
  410e48:	str	x1, [sp]
  410e4c:	ldr	x1, [sp, #8]
  410e50:	ldr	x0, [sp]
  410e54:	cmp	x1, x0
  410e58:	cset	w0, eq  // eq = none
  410e5c:	and	w0, w0, #0xff
  410e60:	add	sp, sp, #0x10
  410e64:	ret
  410e68:	sub	sp, sp, #0x20
  410e6c:	str	x0, [sp, #8]
  410e70:	ldr	x0, [sp, #8]
  410e74:	ldr	x0, [x0, #40]
  410e78:	str	x0, [sp, #24]
  410e7c:	ldr	x1, [sp, #24]
  410e80:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  410e84:	add	x0, x0, #0x518
  410e88:	cmp	x1, x0
  410e8c:	b.ne	410e98 <ferror@plt+0xde98>  // b.any
  410e90:	mov	w0, #0x1                   	// #1
  410e94:	b	410f74 <ferror@plt+0xdf74>
  410e98:	mov	w0, #0xcccd                	// #52429
  410e9c:	movk	w0, #0x3dcc, lsl #16
  410ea0:	fmov	s0, w0
  410ea4:	str	s0, [sp, #20]
  410ea8:	ldr	x0, [sp, #24]
  410eac:	ldr	s0, [x0, #8]
  410eb0:	ldr	s1, [sp, #20]
  410eb4:	fcmpe	s1, s0
  410eb8:	b.pl	410f60 <ferror@plt+0xdf60>  // b.nfrst
  410ebc:	ldr	x0, [sp, #24]
  410ec0:	ldr	s1, [x0, #8]
  410ec4:	fmov	s2, #1.000000000000000000e+00
  410ec8:	ldr	s0, [sp, #20]
  410ecc:	fsub	s0, s2, s0
  410ed0:	fcmpe	s1, s0
  410ed4:	b.pl	410f60 <ferror@plt+0xdf60>  // b.nfrst
  410ed8:	ldr	s1, [sp, #20]
  410edc:	fmov	s0, #1.000000000000000000e+00
  410ee0:	fadd	s1, s1, s0
  410ee4:	ldr	x0, [sp, #24]
  410ee8:	ldr	s0, [x0, #12]
  410eec:	fcmpe	s1, s0
  410ef0:	b.pl	410f60 <ferror@plt+0xdf60>  // b.nfrst
  410ef4:	ldr	x0, [sp, #24]
  410ef8:	ldr	s0, [x0]
  410efc:	fcmpe	s0, #0.0
  410f00:	b.lt	410f60 <ferror@plt+0xdf60>  // b.tstop
  410f04:	ldr	x0, [sp, #24]
  410f08:	ldr	s1, [x0]
  410f0c:	ldr	s0, [sp, #20]
  410f10:	fadd	s1, s1, s0
  410f14:	ldr	x0, [sp, #24]
  410f18:	ldr	s0, [x0, #4]
  410f1c:	fcmpe	s1, s0
  410f20:	b.pl	410f60 <ferror@plt+0xdf60>  // b.nfrst
  410f24:	ldr	x0, [sp, #24]
  410f28:	ldr	s1, [x0, #4]
  410f2c:	fmov	s0, #1.000000000000000000e+00
  410f30:	fcmpe	s1, s0
  410f34:	b.hi	410f60 <ferror@plt+0xdf60>  // b.pmore
  410f38:	ldr	x0, [sp, #24]
  410f3c:	ldr	s1, [x0]
  410f40:	ldr	s0, [sp, #20]
  410f44:	fadd	s1, s1, s0
  410f48:	ldr	x0, [sp, #24]
  410f4c:	ldr	s0, [x0, #8]
  410f50:	fcmpe	s1, s0
  410f54:	b.pl	410f60 <ferror@plt+0xdf60>  // b.nfrst
  410f58:	mov	w0, #0x1                   	// #1
  410f5c:	b	410f74 <ferror@plt+0xdf74>
  410f60:	ldr	x0, [sp, #8]
  410f64:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x3b64>
  410f68:	add	x1, x1, #0x518
  410f6c:	str	x1, [x0, #40]
  410f70:	mov	w0, #0x0                   	// #0
  410f74:	add	sp, sp, #0x20
  410f78:	ret
  410f7c:	stp	x29, x30, [sp, #-48]!
  410f80:	mov	x29, sp
  410f84:	str	x0, [sp, #24]
  410f88:	str	x1, [sp, #16]
  410f8c:	ldr	x0, [sp, #16]
  410f90:	ldrb	w0, [x0, #16]
  410f94:	eor	w0, w0, #0x1
  410f98:	and	w0, w0, #0xff
  410f9c:	cmp	w0, #0x0
  410fa0:	b.eq	410fe4 <ferror@plt+0xdfe4>  // b.none
  410fa4:	ldr	x0, [sp, #24]
  410fa8:	ucvtf	s1, x0
  410fac:	ldr	x0, [sp, #16]
  410fb0:	ldr	s0, [x0, #8]
  410fb4:	fdiv	s0, s1, s0
  410fb8:	str	s0, [sp, #44]
  410fbc:	ldr	s0, [sp, #44]
  410fc0:	mov	w0, #0x5f800000            	// #1602224128
  410fc4:	fmov	s1, w0
  410fc8:	fcmpe	s0, s1
  410fcc:	b.lt	410fd8 <ferror@plt+0xdfd8>  // b.tstop
  410fd0:	mov	x0, #0x0                   	// #0
  410fd4:	b	411038 <ferror@plt+0xe038>
  410fd8:	ldr	s0, [sp, #44]
  410fdc:	fcvtzu	x0, s0
  410fe0:	str	x0, [sp, #24]
  410fe4:	ldr	x0, [sp, #24]
  410fe8:	bl	410d58 <ferror@plt+0xdd58>
  410fec:	str	x0, [sp, #24]
  410ff0:	mov	x0, #0x0                   	// #0
  410ff4:	ldr	x1, [sp, #24]
  410ff8:	lsl	x1, x1, #3
  410ffc:	ldr	x2, [sp, #24]
  411000:	lsr	x2, x2, #61
  411004:	cmp	x2, #0x0
  411008:	b.eq	411010 <ferror@plt+0xe010>  // b.none
  41100c:	mov	x0, #0x1                   	// #1
  411010:	cmp	x1, #0x0
  411014:	b.ge	41101c <ferror@plt+0xe01c>  // b.tcont
  411018:	mov	x0, #0x1                   	// #1
  41101c:	and	w0, w0, #0x1
  411020:	and	w0, w0, #0xff
  411024:	cmp	w0, #0x0
  411028:	b.eq	411034 <ferror@plt+0xe034>  // b.none
  41102c:	mov	x0, #0x0                   	// #0
  411030:	b	411038 <ferror@plt+0xe038>
  411034:	ldr	x0, [sp, #24]
  411038:	ldp	x29, x30, [sp], #48
  41103c:	ret
  411040:	stp	x29, x30, [sp, #-80]!
  411044:	mov	x29, sp
  411048:	str	x0, [sp, #56]
  41104c:	str	x1, [sp, #48]
  411050:	str	x2, [sp, #40]
  411054:	str	x3, [sp, #32]
  411058:	str	x4, [sp, #24]
  41105c:	ldr	x0, [sp, #40]
  411060:	cmp	x0, #0x0
  411064:	b.ne	411074 <ferror@plt+0xe074>  // b.any
  411068:	adrp	x0, 410000 <ferror@plt+0xd000>
  41106c:	add	x0, x0, #0xe00
  411070:	str	x0, [sp, #40]
  411074:	ldr	x0, [sp, #32]
  411078:	cmp	x0, #0x0
  41107c:	b.ne	41108c <ferror@plt+0xe08c>  // b.any
  411080:	adrp	x0, 410000 <ferror@plt+0xd000>
  411084:	add	x0, x0, #0xe40
  411088:	str	x0, [sp, #32]
  41108c:	mov	x0, #0x50                  	// #80
  411090:	bl	402a80 <malloc@plt>
  411094:	str	x0, [sp, #72]
  411098:	ldr	x0, [sp, #72]
  41109c:	cmp	x0, #0x0
  4110a0:	b.ne	4110ac <ferror@plt+0xe0ac>  // b.any
  4110a4:	mov	x0, #0x0                   	// #0
  4110a8:	b	4111c4 <ferror@plt+0xe1c4>
  4110ac:	ldr	x0, [sp, #48]
  4110b0:	cmp	x0, #0x0
  4110b4:	b.ne	4110c4 <ferror@plt+0xe0c4>  // b.any
  4110b8:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4110bc:	add	x0, x0, #0x518
  4110c0:	str	x0, [sp, #48]
  4110c4:	ldr	x0, [sp, #72]
  4110c8:	ldr	x1, [sp, #48]
  4110cc:	str	x1, [x0, #40]
  4110d0:	ldr	x0, [sp, #72]
  4110d4:	bl	410e68 <ferror@plt+0xde68>
  4110d8:	and	w0, w0, #0xff
  4110dc:	eor	w0, w0, #0x1
  4110e0:	and	w0, w0, #0xff
  4110e4:	cmp	w0, #0x0
  4110e8:	b.ne	4111a4 <ferror@plt+0xe1a4>  // b.any
  4110ec:	ldr	x1, [sp, #48]
  4110f0:	ldr	x0, [sp, #56]
  4110f4:	bl	410f7c <ferror@plt+0xdf7c>
  4110f8:	mov	x1, x0
  4110fc:	ldr	x0, [sp, #72]
  411100:	str	x1, [x0, #16]
  411104:	ldr	x0, [sp, #72]
  411108:	ldr	x0, [x0, #16]
  41110c:	cmp	x0, #0x0
  411110:	b.eq	4111ac <ferror@plt+0xe1ac>  // b.none
  411114:	ldr	x0, [sp, #72]
  411118:	ldr	x0, [x0, #16]
  41111c:	mov	x1, #0x10                  	// #16
  411120:	bl	402b70 <calloc@plt>
  411124:	mov	x1, x0
  411128:	ldr	x0, [sp, #72]
  41112c:	str	x1, [x0]
  411130:	ldr	x0, [sp, #72]
  411134:	ldr	x0, [x0]
  411138:	cmp	x0, #0x0
  41113c:	b.eq	4111b4 <ferror@plt+0xe1b4>  // b.none
  411140:	ldr	x0, [sp, #72]
  411144:	ldr	x1, [x0]
  411148:	ldr	x0, [sp, #72]
  41114c:	ldr	x0, [x0, #16]
  411150:	lsl	x0, x0, #4
  411154:	add	x1, x1, x0
  411158:	ldr	x0, [sp, #72]
  41115c:	str	x1, [x0, #8]
  411160:	ldr	x0, [sp, #72]
  411164:	str	xzr, [x0, #24]
  411168:	ldr	x0, [sp, #72]
  41116c:	str	xzr, [x0, #32]
  411170:	ldr	x0, [sp, #72]
  411174:	ldr	x1, [sp, #40]
  411178:	str	x1, [x0, #48]
  41117c:	ldr	x0, [sp, #72]
  411180:	ldr	x1, [sp, #32]
  411184:	str	x1, [x0, #56]
  411188:	ldr	x0, [sp, #72]
  41118c:	ldr	x1, [sp, #24]
  411190:	str	x1, [x0, #64]
  411194:	ldr	x0, [sp, #72]
  411198:	str	xzr, [x0, #72]
  41119c:	ldr	x0, [sp, #72]
  4111a0:	b	4111c4 <ferror@plt+0xe1c4>
  4111a4:	nop
  4111a8:	b	4111b8 <ferror@plt+0xe1b8>
  4111ac:	nop
  4111b0:	b	4111b8 <ferror@plt+0xe1b8>
  4111b4:	nop
  4111b8:	ldr	x0, [sp, #72]
  4111bc:	bl	402d20 <free@plt>
  4111c0:	mov	x0, #0x0                   	// #0
  4111c4:	ldp	x29, x30, [sp], #80
  4111c8:	ret
  4111cc:	stp	x29, x30, [sp, #-64]!
  4111d0:	mov	x29, sp
  4111d4:	str	x0, [sp, #24]
  4111d8:	ldr	x0, [sp, #24]
  4111dc:	ldr	x0, [x0]
  4111e0:	str	x0, [sp, #56]
  4111e4:	b	4112b0 <ferror@plt+0xe2b0>
  4111e8:	ldr	x0, [sp, #56]
  4111ec:	ldr	x0, [x0]
  4111f0:	cmp	x0, #0x0
  4111f4:	b.eq	4112a4 <ferror@plt+0xe2a4>  // b.none
  4111f8:	ldr	x0, [sp, #56]
  4111fc:	ldr	x0, [x0, #8]
  411200:	str	x0, [sp, #48]
  411204:	b	411264 <ferror@plt+0xe264>
  411208:	ldr	x0, [sp, #24]
  41120c:	ldr	x0, [x0, #64]
  411210:	cmp	x0, #0x0
  411214:	b.eq	41122c <ferror@plt+0xe22c>  // b.none
  411218:	ldr	x0, [sp, #24]
  41121c:	ldr	x1, [x0, #64]
  411220:	ldr	x0, [sp, #48]
  411224:	ldr	x0, [x0]
  411228:	blr	x1
  41122c:	ldr	x0, [sp, #48]
  411230:	str	xzr, [x0]
  411234:	ldr	x0, [sp, #48]
  411238:	ldr	x0, [x0, #8]
  41123c:	str	x0, [sp, #40]
  411240:	ldr	x0, [sp, #24]
  411244:	ldr	x1, [x0, #72]
  411248:	ldr	x0, [sp, #48]
  41124c:	str	x1, [x0, #8]
  411250:	ldr	x0, [sp, #24]
  411254:	ldr	x1, [sp, #48]
  411258:	str	x1, [x0, #72]
  41125c:	ldr	x0, [sp, #40]
  411260:	str	x0, [sp, #48]
  411264:	ldr	x0, [sp, #48]
  411268:	cmp	x0, #0x0
  41126c:	b.ne	411208 <ferror@plt+0xe208>  // b.any
  411270:	ldr	x0, [sp, #24]
  411274:	ldr	x0, [x0, #64]
  411278:	cmp	x0, #0x0
  41127c:	b.eq	411294 <ferror@plt+0xe294>  // b.none
  411280:	ldr	x0, [sp, #24]
  411284:	ldr	x1, [x0, #64]
  411288:	ldr	x0, [sp, #56]
  41128c:	ldr	x0, [x0]
  411290:	blr	x1
  411294:	ldr	x0, [sp, #56]
  411298:	str	xzr, [x0]
  41129c:	ldr	x0, [sp, #56]
  4112a0:	str	xzr, [x0, #8]
  4112a4:	ldr	x0, [sp, #56]
  4112a8:	add	x0, x0, #0x10
  4112ac:	str	x0, [sp, #56]
  4112b0:	ldr	x0, [sp, #24]
  4112b4:	ldr	x0, [x0, #8]
  4112b8:	ldr	x1, [sp, #56]
  4112bc:	cmp	x1, x0
  4112c0:	b.cc	4111e8 <ferror@plt+0xe1e8>  // b.lo, b.ul, b.last
  4112c4:	ldr	x0, [sp, #24]
  4112c8:	str	xzr, [x0, #24]
  4112cc:	ldr	x0, [sp, #24]
  4112d0:	str	xzr, [x0, #32]
  4112d4:	nop
  4112d8:	ldp	x29, x30, [sp], #64
  4112dc:	ret
  4112e0:	stp	x29, x30, [sp, #-64]!
  4112e4:	mov	x29, sp
  4112e8:	str	x0, [sp, #24]
  4112ec:	ldr	x0, [sp, #24]
  4112f0:	ldr	x0, [x0, #64]
  4112f4:	cmp	x0, #0x0
  4112f8:	b.eq	411384 <ferror@plt+0xe384>  // b.none
  4112fc:	ldr	x0, [sp, #24]
  411300:	ldr	x0, [x0, #32]
  411304:	cmp	x0, #0x0
  411308:	b.eq	411384 <ferror@plt+0xe384>  // b.none
  41130c:	ldr	x0, [sp, #24]
  411310:	ldr	x0, [x0]
  411314:	str	x0, [sp, #56]
  411318:	b	411370 <ferror@plt+0xe370>
  41131c:	ldr	x0, [sp, #56]
  411320:	ldr	x0, [x0]
  411324:	cmp	x0, #0x0
  411328:	b.eq	411364 <ferror@plt+0xe364>  // b.none
  41132c:	ldr	x0, [sp, #56]
  411330:	str	x0, [sp, #48]
  411334:	b	411358 <ferror@plt+0xe358>
  411338:	ldr	x0, [sp, #24]
  41133c:	ldr	x1, [x0, #64]
  411340:	ldr	x0, [sp, #48]
  411344:	ldr	x0, [x0]
  411348:	blr	x1
  41134c:	ldr	x0, [sp, #48]
  411350:	ldr	x0, [x0, #8]
  411354:	str	x0, [sp, #48]
  411358:	ldr	x0, [sp, #48]
  41135c:	cmp	x0, #0x0
  411360:	b.ne	411338 <ferror@plt+0xe338>  // b.any
  411364:	ldr	x0, [sp, #56]
  411368:	add	x0, x0, #0x10
  41136c:	str	x0, [sp, #56]
  411370:	ldr	x0, [sp, #24]
  411374:	ldr	x0, [x0, #8]
  411378:	ldr	x1, [sp, #56]
  41137c:	cmp	x1, x0
  411380:	b.cc	41131c <ferror@plt+0xe31c>  // b.lo, b.ul, b.last
  411384:	ldr	x0, [sp, #24]
  411388:	ldr	x0, [x0]
  41138c:	str	x0, [sp, #56]
  411390:	b	4113d8 <ferror@plt+0xe3d8>
  411394:	ldr	x0, [sp, #56]
  411398:	ldr	x0, [x0, #8]
  41139c:	str	x0, [sp, #48]
  4113a0:	b	4113c0 <ferror@plt+0xe3c0>
  4113a4:	ldr	x0, [sp, #48]
  4113a8:	ldr	x0, [x0, #8]
  4113ac:	str	x0, [sp, #40]
  4113b0:	ldr	x0, [sp, #48]
  4113b4:	bl	402d20 <free@plt>
  4113b8:	ldr	x0, [sp, #40]
  4113bc:	str	x0, [sp, #48]
  4113c0:	ldr	x0, [sp, #48]
  4113c4:	cmp	x0, #0x0
  4113c8:	b.ne	4113a4 <ferror@plt+0xe3a4>  // b.any
  4113cc:	ldr	x0, [sp, #56]
  4113d0:	add	x0, x0, #0x10
  4113d4:	str	x0, [sp, #56]
  4113d8:	ldr	x0, [sp, #24]
  4113dc:	ldr	x0, [x0, #8]
  4113e0:	ldr	x1, [sp, #56]
  4113e4:	cmp	x1, x0
  4113e8:	b.cc	411394 <ferror@plt+0xe394>  // b.lo, b.ul, b.last
  4113ec:	ldr	x0, [sp, #24]
  4113f0:	ldr	x0, [x0, #72]
  4113f4:	str	x0, [sp, #48]
  4113f8:	b	411418 <ferror@plt+0xe418>
  4113fc:	ldr	x0, [sp, #48]
  411400:	ldr	x0, [x0, #8]
  411404:	str	x0, [sp, #40]
  411408:	ldr	x0, [sp, #48]
  41140c:	bl	402d20 <free@plt>
  411410:	ldr	x0, [sp, #40]
  411414:	str	x0, [sp, #48]
  411418:	ldr	x0, [sp, #48]
  41141c:	cmp	x0, #0x0
  411420:	b.ne	4113fc <ferror@plt+0xe3fc>  // b.any
  411424:	ldr	x0, [sp, #24]
  411428:	ldr	x0, [x0]
  41142c:	bl	402d20 <free@plt>
  411430:	ldr	x0, [sp, #24]
  411434:	bl	402d20 <free@plt>
  411438:	nop
  41143c:	ldp	x29, x30, [sp], #64
  411440:	ret
  411444:	stp	x29, x30, [sp, #-48]!
  411448:	mov	x29, sp
  41144c:	str	x0, [sp, #24]
  411450:	ldr	x0, [sp, #24]
  411454:	ldr	x0, [x0, #72]
  411458:	cmp	x0, #0x0
  41145c:	b.eq	411480 <ferror@plt+0xe480>  // b.none
  411460:	ldr	x0, [sp, #24]
  411464:	ldr	x0, [x0, #72]
  411468:	str	x0, [sp, #40]
  41146c:	ldr	x0, [sp, #40]
  411470:	ldr	x1, [x0, #8]
  411474:	ldr	x0, [sp, #24]
  411478:	str	x1, [x0, #72]
  41147c:	b	41148c <ferror@plt+0xe48c>
  411480:	mov	x0, #0x10                  	// #16
  411484:	bl	402a80 <malloc@plt>
  411488:	str	x0, [sp, #40]
  41148c:	ldr	x0, [sp, #40]
  411490:	ldp	x29, x30, [sp], #48
  411494:	ret
  411498:	sub	sp, sp, #0x10
  41149c:	str	x0, [sp, #8]
  4114a0:	str	x1, [sp]
  4114a4:	ldr	x0, [sp]
  4114a8:	str	xzr, [x0]
  4114ac:	ldr	x0, [sp, #8]
  4114b0:	ldr	x1, [x0, #72]
  4114b4:	ldr	x0, [sp]
  4114b8:	str	x1, [x0, #8]
  4114bc:	ldr	x0, [sp, #8]
  4114c0:	ldr	x1, [sp]
  4114c4:	str	x1, [x0, #72]
  4114c8:	nop
  4114cc:	add	sp, sp, #0x10
  4114d0:	ret
  4114d4:	stp	x29, x30, [sp, #-96]!
  4114d8:	mov	x29, sp
  4114dc:	str	x0, [sp, #40]
  4114e0:	str	x1, [sp, #32]
  4114e4:	str	x2, [sp, #24]
  4114e8:	strb	w3, [sp, #23]
  4114ec:	ldr	x1, [sp, #32]
  4114f0:	ldr	x0, [sp, #40]
  4114f4:	bl	410868 <ferror@plt+0xd868>
  4114f8:	str	x0, [sp, #80]
  4114fc:	ldr	x0, [sp, #24]
  411500:	ldr	x1, [sp, #80]
  411504:	str	x1, [x0]
  411508:	ldr	x0, [sp, #80]
  41150c:	ldr	x0, [x0]
  411510:	cmp	x0, #0x0
  411514:	b.ne	411520 <ferror@plt+0xe520>  // b.any
  411518:	mov	x0, #0x0                   	// #0
  41151c:	b	41167c <ferror@plt+0xe67c>
  411520:	ldr	x0, [sp, #80]
  411524:	ldr	x0, [x0]
  411528:	ldr	x1, [sp, #32]
  41152c:	cmp	x1, x0
  411530:	b.eq	41155c <ferror@plt+0xe55c>  // b.none
  411534:	ldr	x0, [sp, #40]
  411538:	ldr	x2, [x0, #56]
  41153c:	ldr	x0, [sp, #80]
  411540:	ldr	x0, [x0]
  411544:	mov	x1, x0
  411548:	ldr	x0, [sp, #32]
  41154c:	blr	x2
  411550:	and	w0, w0, #0xff
  411554:	cmp	w0, #0x0
  411558:	b.eq	4115c0 <ferror@plt+0xe5c0>  // b.none
  41155c:	ldr	x0, [sp, #80]
  411560:	ldr	x0, [x0]
  411564:	str	x0, [sp, #56]
  411568:	ldrb	w0, [sp, #23]
  41156c:	cmp	w0, #0x0
  411570:	b.eq	4115b8 <ferror@plt+0xe5b8>  // b.none
  411574:	ldr	x0, [sp, #80]
  411578:	ldr	x0, [x0, #8]
  41157c:	cmp	x0, #0x0
  411580:	b.eq	4115b0 <ferror@plt+0xe5b0>  // b.none
  411584:	ldr	x0, [sp, #80]
  411588:	ldr	x0, [x0, #8]
  41158c:	str	x0, [sp, #48]
  411590:	ldr	x2, [sp, #80]
  411594:	ldr	x0, [sp, #48]
  411598:	ldp	x0, x1, [x0]
  41159c:	stp	x0, x1, [x2]
  4115a0:	ldr	x1, [sp, #48]
  4115a4:	ldr	x0, [sp, #40]
  4115a8:	bl	411498 <ferror@plt+0xe498>
  4115ac:	b	4115b8 <ferror@plt+0xe5b8>
  4115b0:	ldr	x0, [sp, #80]
  4115b4:	str	xzr, [x0]
  4115b8:	ldr	x0, [sp, #56]
  4115bc:	b	41167c <ferror@plt+0xe67c>
  4115c0:	ldr	x0, [sp, #80]
  4115c4:	str	x0, [sp, #88]
  4115c8:	b	411668 <ferror@plt+0xe668>
  4115cc:	ldr	x0, [sp, #88]
  4115d0:	ldr	x0, [x0, #8]
  4115d4:	ldr	x0, [x0]
  4115d8:	ldr	x1, [sp, #32]
  4115dc:	cmp	x1, x0
  4115e0:	b.eq	411610 <ferror@plt+0xe610>  // b.none
  4115e4:	ldr	x0, [sp, #40]
  4115e8:	ldr	x2, [x0, #56]
  4115ec:	ldr	x0, [sp, #88]
  4115f0:	ldr	x0, [x0, #8]
  4115f4:	ldr	x0, [x0]
  4115f8:	mov	x1, x0
  4115fc:	ldr	x0, [sp, #32]
  411600:	blr	x2
  411604:	and	w0, w0, #0xff
  411608:	cmp	w0, #0x0
  41160c:	b.eq	41165c <ferror@plt+0xe65c>  // b.none
  411610:	ldr	x0, [sp, #88]
  411614:	ldr	x0, [x0, #8]
  411618:	ldr	x0, [x0]
  41161c:	str	x0, [sp, #72]
  411620:	ldrb	w0, [sp, #23]
  411624:	cmp	w0, #0x0
  411628:	b.eq	411654 <ferror@plt+0xe654>  // b.none
  41162c:	ldr	x0, [sp, #88]
  411630:	ldr	x0, [x0, #8]
  411634:	str	x0, [sp, #64]
  411638:	ldr	x0, [sp, #64]
  41163c:	ldr	x1, [x0, #8]
  411640:	ldr	x0, [sp, #88]
  411644:	str	x1, [x0, #8]
  411648:	ldr	x1, [sp, #64]
  41164c:	ldr	x0, [sp, #40]
  411650:	bl	411498 <ferror@plt+0xe498>
  411654:	ldr	x0, [sp, #72]
  411658:	b	41167c <ferror@plt+0xe67c>
  41165c:	ldr	x0, [sp, #88]
  411660:	ldr	x0, [x0, #8]
  411664:	str	x0, [sp, #88]
  411668:	ldr	x0, [sp, #88]
  41166c:	ldr	x0, [x0, #8]
  411670:	cmp	x0, #0x0
  411674:	b.ne	4115cc <ferror@plt+0xe5cc>  // b.any
  411678:	mov	x0, #0x0                   	// #0
  41167c:	ldp	x29, x30, [sp], #96
  411680:	ret
  411684:	stp	x29, x30, [sp, #-96]!
  411688:	mov	x29, sp
  41168c:	str	x0, [sp, #40]
  411690:	str	x1, [sp, #32]
  411694:	strb	w2, [sp, #31]
  411698:	ldr	x0, [sp, #32]
  41169c:	ldr	x0, [x0]
  4116a0:	str	x0, [sp, #88]
  4116a4:	b	41183c <ferror@plt+0xe83c>
  4116a8:	ldr	x0, [sp, #88]
  4116ac:	ldr	x0, [x0]
  4116b0:	cmp	x0, #0x0
  4116b4:	b.eq	411830 <ferror@plt+0xe830>  // b.none
  4116b8:	ldr	x0, [sp, #88]
  4116bc:	ldr	x0, [x0, #8]
  4116c0:	str	x0, [sp, #80]
  4116c4:	b	411754 <ferror@plt+0xe754>
  4116c8:	ldr	x0, [sp, #80]
  4116cc:	ldr	x0, [x0]
  4116d0:	str	x0, [sp, #72]
  4116d4:	ldr	x1, [sp, #72]
  4116d8:	ldr	x0, [sp, #40]
  4116dc:	bl	410868 <ferror@plt+0xd868>
  4116e0:	str	x0, [sp, #64]
  4116e4:	ldr	x0, [sp, #80]
  4116e8:	ldr	x0, [x0, #8]
  4116ec:	str	x0, [sp, #48]
  4116f0:	ldr	x0, [sp, #64]
  4116f4:	ldr	x0, [x0]
  4116f8:	cmp	x0, #0x0
  4116fc:	b.eq	411720 <ferror@plt+0xe720>  // b.none
  411700:	ldr	x0, [sp, #64]
  411704:	ldr	x1, [x0, #8]
  411708:	ldr	x0, [sp, #80]
  41170c:	str	x1, [x0, #8]
  411710:	ldr	x0, [sp, #64]
  411714:	ldr	x1, [sp, #80]
  411718:	str	x1, [x0, #8]
  41171c:	b	41174c <ferror@plt+0xe74c>
  411720:	ldr	x0, [sp, #64]
  411724:	ldr	x1, [sp, #72]
  411728:	str	x1, [x0]
  41172c:	ldr	x0, [sp, #40]
  411730:	ldr	x0, [x0, #24]
  411734:	add	x1, x0, #0x1
  411738:	ldr	x0, [sp, #40]
  41173c:	str	x1, [x0, #24]
  411740:	ldr	x1, [sp, #80]
  411744:	ldr	x0, [sp, #40]
  411748:	bl	411498 <ferror@plt+0xe498>
  41174c:	ldr	x0, [sp, #48]
  411750:	str	x0, [sp, #80]
  411754:	ldr	x0, [sp, #80]
  411758:	cmp	x0, #0x0
  41175c:	b.ne	4116c8 <ferror@plt+0xe6c8>  // b.any
  411760:	ldr	x0, [sp, #88]
  411764:	ldr	x0, [x0]
  411768:	str	x0, [sp, #72]
  41176c:	ldr	x0, [sp, #88]
  411770:	str	xzr, [x0, #8]
  411774:	ldrb	w0, [sp, #31]
  411778:	cmp	w0, #0x0
  41177c:	b.ne	41182c <ferror@plt+0xe82c>  // b.any
  411780:	ldr	x1, [sp, #72]
  411784:	ldr	x0, [sp, #40]
  411788:	bl	410868 <ferror@plt+0xd868>
  41178c:	str	x0, [sp, #64]
  411790:	ldr	x0, [sp, #64]
  411794:	ldr	x0, [x0]
  411798:	cmp	x0, #0x0
  41179c:	b.eq	4117ec <ferror@plt+0xe7ec>  // b.none
  4117a0:	ldr	x0, [sp, #40]
  4117a4:	bl	411444 <ferror@plt+0xe444>
  4117a8:	str	x0, [sp, #56]
  4117ac:	ldr	x0, [sp, #56]
  4117b0:	cmp	x0, #0x0
  4117b4:	b.ne	4117c0 <ferror@plt+0xe7c0>  // b.any
  4117b8:	mov	w0, #0x0                   	// #0
  4117bc:	b	411854 <ferror@plt+0xe854>
  4117c0:	ldr	x0, [sp, #56]
  4117c4:	ldr	x1, [sp, #72]
  4117c8:	str	x1, [x0]
  4117cc:	ldr	x0, [sp, #64]
  4117d0:	ldr	x1, [x0, #8]
  4117d4:	ldr	x0, [sp, #56]
  4117d8:	str	x1, [x0, #8]
  4117dc:	ldr	x0, [sp, #64]
  4117e0:	ldr	x1, [sp, #56]
  4117e4:	str	x1, [x0, #8]
  4117e8:	b	41180c <ferror@plt+0xe80c>
  4117ec:	ldr	x0, [sp, #64]
  4117f0:	ldr	x1, [sp, #72]
  4117f4:	str	x1, [x0]
  4117f8:	ldr	x0, [sp, #40]
  4117fc:	ldr	x0, [x0, #24]
  411800:	add	x1, x0, #0x1
  411804:	ldr	x0, [sp, #40]
  411808:	str	x1, [x0, #24]
  41180c:	ldr	x0, [sp, #88]
  411810:	str	xzr, [x0]
  411814:	ldr	x0, [sp, #32]
  411818:	ldr	x0, [x0, #24]
  41181c:	sub	x1, x0, #0x1
  411820:	ldr	x0, [sp, #32]
  411824:	str	x1, [x0, #24]
  411828:	b	411830 <ferror@plt+0xe830>
  41182c:	nop
  411830:	ldr	x0, [sp, #88]
  411834:	add	x0, x0, #0x10
  411838:	str	x0, [sp, #88]
  41183c:	ldr	x0, [sp, #32]
  411840:	ldr	x0, [x0, #8]
  411844:	ldr	x1, [sp, #88]
  411848:	cmp	x1, x0
  41184c:	b.cc	4116a8 <ferror@plt+0xe6a8>  // b.lo, b.ul, b.last
  411850:	mov	w0, #0x1                   	// #1
  411854:	ldp	x29, x30, [sp], #96
  411858:	ret
  41185c:	stp	x29, x30, [sp, #-128]!
  411860:	mov	x29, sp
  411864:	str	x0, [sp, #24]
  411868:	str	x1, [sp, #16]
  41186c:	ldr	x0, [sp, #24]
  411870:	ldr	x0, [x0, #40]
  411874:	mov	x1, x0
  411878:	ldr	x0, [sp, #16]
  41187c:	bl	410f7c <ferror@plt+0xdf7c>
  411880:	str	x0, [sp, #120]
  411884:	ldr	x0, [sp, #120]
  411888:	cmp	x0, #0x0
  41188c:	b.ne	411898 <ferror@plt+0xe898>  // b.any
  411890:	mov	w0, #0x0                   	// #0
  411894:	b	411a60 <ferror@plt+0xea60>
  411898:	ldr	x0, [sp, #24]
  41189c:	ldr	x0, [x0, #16]
  4118a0:	ldr	x1, [sp, #120]
  4118a4:	cmp	x1, x0
  4118a8:	b.ne	4118b4 <ferror@plt+0xe8b4>  // b.any
  4118ac:	mov	w0, #0x1                   	// #1
  4118b0:	b	411a60 <ferror@plt+0xea60>
  4118b4:	add	x0, sp, #0x20
  4118b8:	str	x0, [sp, #112]
  4118bc:	mov	x1, #0x10                  	// #16
  4118c0:	ldr	x0, [sp, #120]
  4118c4:	bl	402b70 <calloc@plt>
  4118c8:	mov	x1, x0
  4118cc:	ldr	x0, [sp, #112]
  4118d0:	str	x1, [x0]
  4118d4:	ldr	x0, [sp, #112]
  4118d8:	ldr	x0, [x0]
  4118dc:	cmp	x0, #0x0
  4118e0:	b.ne	4118ec <ferror@plt+0xe8ec>  // b.any
  4118e4:	mov	w0, #0x0                   	// #0
  4118e8:	b	411a60 <ferror@plt+0xea60>
  4118ec:	ldr	x0, [sp, #112]
  4118f0:	ldr	x1, [sp, #120]
  4118f4:	str	x1, [x0, #16]
  4118f8:	ldr	x0, [sp, #112]
  4118fc:	ldr	x1, [x0]
  411900:	ldr	x0, [sp, #120]
  411904:	lsl	x0, x0, #4
  411908:	add	x1, x1, x0
  41190c:	ldr	x0, [sp, #112]
  411910:	str	x1, [x0, #8]
  411914:	ldr	x0, [sp, #112]
  411918:	str	xzr, [x0, #24]
  41191c:	ldr	x0, [sp, #112]
  411920:	str	xzr, [x0, #32]
  411924:	ldr	x0, [sp, #24]
  411928:	ldr	x1, [x0, #40]
  41192c:	ldr	x0, [sp, #112]
  411930:	str	x1, [x0, #40]
  411934:	ldr	x0, [sp, #24]
  411938:	ldr	x1, [x0, #48]
  41193c:	ldr	x0, [sp, #112]
  411940:	str	x1, [x0, #48]
  411944:	ldr	x0, [sp, #24]
  411948:	ldr	x1, [x0, #56]
  41194c:	ldr	x0, [sp, #112]
  411950:	str	x1, [x0, #56]
  411954:	ldr	x0, [sp, #24]
  411958:	ldr	x1, [x0, #64]
  41195c:	ldr	x0, [sp, #112]
  411960:	str	x1, [x0, #64]
  411964:	ldr	x0, [sp, #24]
  411968:	ldr	x1, [x0, #72]
  41196c:	ldr	x0, [sp, #112]
  411970:	str	x1, [x0, #72]
  411974:	mov	w2, #0x0                   	// #0
  411978:	ldr	x1, [sp, #24]
  41197c:	ldr	x0, [sp, #112]
  411980:	bl	411684 <ferror@plt+0xe684>
  411984:	and	w0, w0, #0xff
  411988:	cmp	w0, #0x0
  41198c:	b.eq	4119f4 <ferror@plt+0xe9f4>  // b.none
  411990:	ldr	x0, [sp, #24]
  411994:	ldr	x0, [x0]
  411998:	bl	402d20 <free@plt>
  41199c:	ldr	x0, [sp, #112]
  4119a0:	ldr	x1, [x0]
  4119a4:	ldr	x0, [sp, #24]
  4119a8:	str	x1, [x0]
  4119ac:	ldr	x0, [sp, #112]
  4119b0:	ldr	x1, [x0, #8]
  4119b4:	ldr	x0, [sp, #24]
  4119b8:	str	x1, [x0, #8]
  4119bc:	ldr	x0, [sp, #112]
  4119c0:	ldr	x1, [x0, #16]
  4119c4:	ldr	x0, [sp, #24]
  4119c8:	str	x1, [x0, #16]
  4119cc:	ldr	x0, [sp, #112]
  4119d0:	ldr	x1, [x0, #24]
  4119d4:	ldr	x0, [sp, #24]
  4119d8:	str	x1, [x0, #24]
  4119dc:	ldr	x0, [sp, #112]
  4119e0:	ldr	x1, [x0, #72]
  4119e4:	ldr	x0, [sp, #24]
  4119e8:	str	x1, [x0, #72]
  4119ec:	mov	w0, #0x1                   	// #1
  4119f0:	b	411a60 <ferror@plt+0xea60>
  4119f4:	ldr	x0, [sp, #112]
  4119f8:	ldr	x1, [x0, #72]
  4119fc:	ldr	x0, [sp, #24]
  411a00:	str	x1, [x0, #72]
  411a04:	mov	w2, #0x1                   	// #1
  411a08:	ldr	x1, [sp, #112]
  411a0c:	ldr	x0, [sp, #24]
  411a10:	bl	411684 <ferror@plt+0xe684>
  411a14:	and	w0, w0, #0xff
  411a18:	eor	w0, w0, #0x1
  411a1c:	and	w0, w0, #0xff
  411a20:	cmp	w0, #0x0
  411a24:	b.ne	411a4c <ferror@plt+0xea4c>  // b.any
  411a28:	mov	w2, #0x0                   	// #0
  411a2c:	ldr	x1, [sp, #112]
  411a30:	ldr	x0, [sp, #24]
  411a34:	bl	411684 <ferror@plt+0xe684>
  411a38:	and	w0, w0, #0xff
  411a3c:	eor	w0, w0, #0x1
  411a40:	and	w0, w0, #0xff
  411a44:	cmp	w0, #0x0
  411a48:	b.eq	411a50 <ferror@plt+0xea50>  // b.none
  411a4c:	bl	402c20 <abort@plt>
  411a50:	ldr	x0, [sp, #112]
  411a54:	ldr	x0, [x0]
  411a58:	bl	402d20 <free@plt>
  411a5c:	mov	w0, #0x0                   	// #0
  411a60:	ldp	x29, x30, [sp], #128
  411a64:	ret
  411a68:	stp	x29, x30, [sp, #-96]!
  411a6c:	mov	x29, sp
  411a70:	str	x0, [sp, #40]
  411a74:	str	x1, [sp, #32]
  411a78:	str	x2, [sp, #24]
  411a7c:	ldr	x0, [sp, #32]
  411a80:	cmp	x0, #0x0
  411a84:	b.ne	411a8c <ferror@plt+0xea8c>  // b.any
  411a88:	bl	402c20 <abort@plt>
  411a8c:	add	x0, sp, #0x38
  411a90:	mov	w3, #0x0                   	// #0
  411a94:	mov	x2, x0
  411a98:	ldr	x1, [sp, #32]
  411a9c:	ldr	x0, [sp, #40]
  411aa0:	bl	4114d4 <ferror@plt+0xe4d4>
  411aa4:	str	x0, [sp, #88]
  411aa8:	ldr	x0, [sp, #88]
  411aac:	cmp	x0, #0x0
  411ab0:	b.eq	411ad4 <ferror@plt+0xead4>  // b.none
  411ab4:	ldr	x0, [sp, #24]
  411ab8:	cmp	x0, #0x0
  411abc:	b.eq	411acc <ferror@plt+0xeacc>  // b.none
  411ac0:	ldr	x0, [sp, #24]
  411ac4:	ldr	x1, [sp, #88]
  411ac8:	str	x1, [x0]
  411acc:	mov	w0, #0x0                   	// #0
  411ad0:	b	411cb8 <ferror@plt+0xecb8>
  411ad4:	ldr	x0, [sp, #40]
  411ad8:	ldr	x0, [x0, #24]
  411adc:	ucvtf	s1, x0
  411ae0:	ldr	x0, [sp, #40]
  411ae4:	ldr	x0, [x0, #40]
  411ae8:	ldr	s2, [x0, #8]
  411aec:	ldr	x0, [sp, #40]
  411af0:	ldr	x0, [x0, #16]
  411af4:	ucvtf	s0, x0
  411af8:	fmul	s0, s2, s0
  411afc:	fcmpe	s1, s0
  411b00:	b.le	411c0c <ferror@plt+0xec0c>
  411b04:	ldr	x0, [sp, #40]
  411b08:	bl	410e68 <ferror@plt+0xde68>
  411b0c:	ldr	x0, [sp, #40]
  411b10:	ldr	x0, [x0, #24]
  411b14:	ucvtf	s1, x0
  411b18:	ldr	x0, [sp, #40]
  411b1c:	ldr	x0, [x0, #40]
  411b20:	ldr	s2, [x0, #8]
  411b24:	ldr	x0, [sp, #40]
  411b28:	ldr	x0, [x0, #16]
  411b2c:	ucvtf	s0, x0
  411b30:	fmul	s0, s2, s0
  411b34:	fcmpe	s1, s0
  411b38:	b.le	411c0c <ferror@plt+0xec0c>
  411b3c:	ldr	x0, [sp, #40]
  411b40:	ldr	x0, [x0, #40]
  411b44:	str	x0, [sp, #80]
  411b48:	ldr	x0, [sp, #80]
  411b4c:	ldrb	w0, [x0, #16]
  411b50:	cmp	w0, #0x0
  411b54:	b.eq	411b74 <ferror@plt+0xeb74>  // b.none
  411b58:	ldr	x0, [sp, #40]
  411b5c:	ldr	x0, [x0, #16]
  411b60:	ucvtf	s1, x0
  411b64:	ldr	x0, [sp, #80]
  411b68:	ldr	s0, [x0, #12]
  411b6c:	fmul	s0, s1, s0
  411b70:	b	411b98 <ferror@plt+0xeb98>
  411b74:	ldr	x0, [sp, #40]
  411b78:	ldr	x0, [x0, #16]
  411b7c:	ucvtf	s1, x0
  411b80:	ldr	x0, [sp, #80]
  411b84:	ldr	s0, [x0, #12]
  411b88:	fmul	s1, s1, s0
  411b8c:	ldr	x0, [sp, #80]
  411b90:	ldr	s0, [x0, #8]
  411b94:	fmul	s0, s1, s0
  411b98:	str	s0, [sp, #76]
  411b9c:	ldr	s0, [sp, #76]
  411ba0:	mov	w0, #0x5f800000            	// #1602224128
  411ba4:	fmov	s1, w0
  411ba8:	fcmpe	s0, s1
  411bac:	b.lt	411bb8 <ferror@plt+0xebb8>  // b.tstop
  411bb0:	mov	w0, #0xffffffff            	// #-1
  411bb4:	b	411cb8 <ferror@plt+0xecb8>
  411bb8:	ldr	s0, [sp, #76]
  411bbc:	fcvtzu	x0, s0
  411bc0:	mov	x1, x0
  411bc4:	ldr	x0, [sp, #40]
  411bc8:	bl	41185c <ferror@plt+0xe85c>
  411bcc:	and	w0, w0, #0xff
  411bd0:	eor	w0, w0, #0x1
  411bd4:	and	w0, w0, #0xff
  411bd8:	cmp	w0, #0x0
  411bdc:	b.eq	411be8 <ferror@plt+0xebe8>  // b.none
  411be0:	mov	w0, #0xffffffff            	// #-1
  411be4:	b	411cb8 <ferror@plt+0xecb8>
  411be8:	add	x0, sp, #0x38
  411bec:	mov	w3, #0x0                   	// #0
  411bf0:	mov	x2, x0
  411bf4:	ldr	x1, [sp, #32]
  411bf8:	ldr	x0, [sp, #40]
  411bfc:	bl	4114d4 <ferror@plt+0xe4d4>
  411c00:	cmp	x0, #0x0
  411c04:	b.eq	411c0c <ferror@plt+0xec0c>  // b.none
  411c08:	bl	402c20 <abort@plt>
  411c0c:	ldr	x0, [sp, #56]
  411c10:	ldr	x0, [x0]
  411c14:	cmp	x0, #0x0
  411c18:	b.eq	411c80 <ferror@plt+0xec80>  // b.none
  411c1c:	ldr	x0, [sp, #40]
  411c20:	bl	411444 <ferror@plt+0xe444>
  411c24:	str	x0, [sp, #64]
  411c28:	ldr	x0, [sp, #64]
  411c2c:	cmp	x0, #0x0
  411c30:	b.ne	411c3c <ferror@plt+0xec3c>  // b.any
  411c34:	mov	w0, #0xffffffff            	// #-1
  411c38:	b	411cb8 <ferror@plt+0xecb8>
  411c3c:	ldr	x0, [sp, #64]
  411c40:	ldr	x1, [sp, #32]
  411c44:	str	x1, [x0]
  411c48:	ldr	x0, [sp, #56]
  411c4c:	ldr	x1, [x0, #8]
  411c50:	ldr	x0, [sp, #64]
  411c54:	str	x1, [x0, #8]
  411c58:	ldr	x0, [sp, #56]
  411c5c:	ldr	x1, [sp, #64]
  411c60:	str	x1, [x0, #8]
  411c64:	ldr	x0, [sp, #40]
  411c68:	ldr	x0, [x0, #32]
  411c6c:	add	x1, x0, #0x1
  411c70:	ldr	x0, [sp, #40]
  411c74:	str	x1, [x0, #32]
  411c78:	mov	w0, #0x1                   	// #1
  411c7c:	b	411cb8 <ferror@plt+0xecb8>
  411c80:	ldr	x0, [sp, #56]
  411c84:	ldr	x1, [sp, #32]
  411c88:	str	x1, [x0]
  411c8c:	ldr	x0, [sp, #40]
  411c90:	ldr	x0, [x0, #32]
  411c94:	add	x1, x0, #0x1
  411c98:	ldr	x0, [sp, #40]
  411c9c:	str	x1, [x0, #32]
  411ca0:	ldr	x0, [sp, #40]
  411ca4:	ldr	x0, [x0, #24]
  411ca8:	add	x1, x0, #0x1
  411cac:	ldr	x0, [sp, #40]
  411cb0:	str	x1, [x0, #24]
  411cb4:	mov	w0, #0x1                   	// #1
  411cb8:	ldp	x29, x30, [sp], #96
  411cbc:	ret
  411cc0:	stp	x29, x30, [sp, #-48]!
  411cc4:	mov	x29, sp
  411cc8:	str	x0, [sp, #24]
  411ccc:	str	x1, [sp, #16]
  411cd0:	add	x0, sp, #0x20
  411cd4:	mov	x2, x0
  411cd8:	ldr	x1, [sp, #16]
  411cdc:	ldr	x0, [sp, #24]
  411ce0:	bl	411a68 <ferror@plt+0xea68>
  411ce4:	str	w0, [sp, #44]
  411ce8:	ldr	w0, [sp, #44]
  411cec:	cmn	w0, #0x1
  411cf0:	b.eq	411d10 <ferror@plt+0xed10>  // b.none
  411cf4:	ldr	w0, [sp, #44]
  411cf8:	cmp	w0, #0x0
  411cfc:	b.ne	411d08 <ferror@plt+0xed08>  // b.any
  411d00:	ldr	x0, [sp, #32]
  411d04:	b	411d14 <ferror@plt+0xed14>
  411d08:	ldr	x0, [sp, #16]
  411d0c:	b	411d14 <ferror@plt+0xed14>
  411d10:	mov	x0, #0x0                   	// #0
  411d14:	ldp	x29, x30, [sp], #48
  411d18:	ret
  411d1c:	stp	x29, x30, [sp, #-80]!
  411d20:	mov	x29, sp
  411d24:	str	x0, [sp, #24]
  411d28:	str	x1, [sp, #16]
  411d2c:	add	x0, sp, #0x20
  411d30:	mov	w3, #0x1                   	// #1
  411d34:	mov	x2, x0
  411d38:	ldr	x1, [sp, #16]
  411d3c:	ldr	x0, [sp, #24]
  411d40:	bl	4114d4 <ferror@plt+0xe4d4>
  411d44:	str	x0, [sp, #64]
  411d48:	ldr	x0, [sp, #64]
  411d4c:	cmp	x0, #0x0
  411d50:	b.ne	411d5c <ferror@plt+0xed5c>  // b.any
  411d54:	mov	x0, #0x0                   	// #0
  411d58:	b	411ec8 <ferror@plt+0xeec8>
  411d5c:	ldr	x0, [sp, #24]
  411d60:	ldr	x0, [x0, #32]
  411d64:	sub	x1, x0, #0x1
  411d68:	ldr	x0, [sp, #24]
  411d6c:	str	x1, [x0, #32]
  411d70:	ldr	x0, [sp, #32]
  411d74:	ldr	x0, [x0]
  411d78:	cmp	x0, #0x0
  411d7c:	b.ne	411ec4 <ferror@plt+0xeec4>  // b.any
  411d80:	ldr	x0, [sp, #24]
  411d84:	ldr	x0, [x0, #24]
  411d88:	sub	x1, x0, #0x1
  411d8c:	ldr	x0, [sp, #24]
  411d90:	str	x1, [x0, #24]
  411d94:	ldr	x0, [sp, #24]
  411d98:	ldr	x0, [x0, #24]
  411d9c:	ucvtf	s1, x0
  411da0:	ldr	x0, [sp, #24]
  411da4:	ldr	x0, [x0, #40]
  411da8:	ldr	s2, [x0]
  411dac:	ldr	x0, [sp, #24]
  411db0:	ldr	x0, [x0, #16]
  411db4:	ucvtf	s0, x0
  411db8:	fmul	s0, s2, s0
  411dbc:	fcmpe	s1, s0
  411dc0:	b.pl	411ec4 <ferror@plt+0xeec4>  // b.nfrst
  411dc4:	ldr	x0, [sp, #24]
  411dc8:	bl	410e68 <ferror@plt+0xde68>
  411dcc:	ldr	x0, [sp, #24]
  411dd0:	ldr	x0, [x0, #24]
  411dd4:	ucvtf	s1, x0
  411dd8:	ldr	x0, [sp, #24]
  411ddc:	ldr	x0, [x0, #40]
  411de0:	ldr	s2, [x0]
  411de4:	ldr	x0, [sp, #24]
  411de8:	ldr	x0, [x0, #16]
  411dec:	ucvtf	s0, x0
  411df0:	fmul	s0, s2, s0
  411df4:	fcmpe	s1, s0
  411df8:	b.pl	411ec4 <ferror@plt+0xeec4>  // b.nfrst
  411dfc:	ldr	x0, [sp, #24]
  411e00:	ldr	x0, [x0, #40]
  411e04:	str	x0, [sp, #56]
  411e08:	ldr	x0, [sp, #56]
  411e0c:	ldrb	w0, [x0, #16]
  411e10:	cmp	w0, #0x0
  411e14:	b.eq	411e38 <ferror@plt+0xee38>  // b.none
  411e18:	ldr	x0, [sp, #24]
  411e1c:	ldr	x0, [x0, #16]
  411e20:	ucvtf	s1, x0
  411e24:	ldr	x0, [sp, #56]
  411e28:	ldr	s0, [x0, #4]
  411e2c:	fmul	s0, s1, s0
  411e30:	fcvtzu	x0, s0
  411e34:	b	411e60 <ferror@plt+0xee60>
  411e38:	ldr	x0, [sp, #24]
  411e3c:	ldr	x0, [x0, #16]
  411e40:	ucvtf	s1, x0
  411e44:	ldr	x0, [sp, #56]
  411e48:	ldr	s0, [x0, #4]
  411e4c:	fmul	s1, s1, s0
  411e50:	ldr	x0, [sp, #56]
  411e54:	ldr	s0, [x0, #8]
  411e58:	fmul	s0, s1, s0
  411e5c:	fcvtzu	x0, s0
  411e60:	str	x0, [sp, #48]
  411e64:	ldr	x1, [sp, #48]
  411e68:	ldr	x0, [sp, #24]
  411e6c:	bl	41185c <ferror@plt+0xe85c>
  411e70:	and	w0, w0, #0xff
  411e74:	eor	w0, w0, #0x1
  411e78:	and	w0, w0, #0xff
  411e7c:	cmp	w0, #0x0
  411e80:	b.eq	411ec4 <ferror@plt+0xeec4>  // b.none
  411e84:	ldr	x0, [sp, #24]
  411e88:	ldr	x0, [x0, #72]
  411e8c:	str	x0, [sp, #72]
  411e90:	b	411eb0 <ferror@plt+0xeeb0>
  411e94:	ldr	x0, [sp, #72]
  411e98:	ldr	x0, [x0, #8]
  411e9c:	str	x0, [sp, #40]
  411ea0:	ldr	x0, [sp, #72]
  411ea4:	bl	402d20 <free@plt>
  411ea8:	ldr	x0, [sp, #40]
  411eac:	str	x0, [sp, #72]
  411eb0:	ldr	x0, [sp, #72]
  411eb4:	cmp	x0, #0x0
  411eb8:	b.ne	411e94 <ferror@plt+0xee94>  // b.any
  411ebc:	ldr	x0, [sp, #24]
  411ec0:	str	xzr, [x0, #72]
  411ec4:	ldr	x0, [sp, #64]
  411ec8:	ldp	x29, x30, [sp], #80
  411ecc:	ret
  411ed0:	stp	x29, x30, [sp, #-48]!
  411ed4:	mov	x29, sp
  411ed8:	str	x0, [sp, #24]
  411edc:	str	x1, [sp, #16]
  411ee0:	mov	x0, #0x20                  	// #32
  411ee4:	bl	4183dc <ferror@plt+0x153dc>
  411ee8:	str	x0, [sp, #40]
  411eec:	ldr	x0, [sp, #16]
  411ef0:	cmp	x0, #0x0
  411ef4:	b.ne	411f00 <ferror@plt+0xef00>  // b.any
  411ef8:	mov	x0, #0x1                   	// #1
  411efc:	str	x0, [sp, #16]
  411f00:	mov	x1, #0x8                   	// #8
  411f04:	ldr	x0, [sp, #16]
  411f08:	bl	4181a8 <ferror@plt+0x151a8>
  411f0c:	mov	x1, x0
  411f10:	ldr	x0, [sp, #40]
  411f14:	str	x1, [x0]
  411f18:	ldr	x0, [sp, #40]
  411f1c:	ldr	x0, [x0]
  411f20:	str	xzr, [x0]
  411f24:	ldr	x0, [sp, #40]
  411f28:	ldr	x1, [sp, #16]
  411f2c:	str	x1, [x0, #8]
  411f30:	ldr	x0, [sp, #40]
  411f34:	str	xzr, [x0, #16]
  411f38:	ldr	x0, [sp, #24]
  411f3c:	cmp	x0, #0x0
  411f40:	b.eq	411f4c <ferror@plt+0xef4c>  // b.none
  411f44:	ldr	x0, [sp, #24]
  411f48:	b	411f54 <ferror@plt+0xef54>
  411f4c:	adrp	x0, 411000 <ferror@plt+0xe000>
  411f50:	add	x0, x0, #0xf68
  411f54:	ldr	x1, [sp, #40]
  411f58:	str	x0, [x1, #24]
  411f5c:	ldr	x0, [sp, #40]
  411f60:	ldp	x29, x30, [sp], #48
  411f64:	ret
  411f68:	sub	sp, sp, #0x10
  411f6c:	str	x0, [sp, #8]
  411f70:	str	x1, [sp]
  411f74:	mov	w0, #0x0                   	// #0
  411f78:	add	sp, sp, #0x10
  411f7c:	ret
  411f80:	stp	x29, x30, [sp, #-32]!
  411f84:	mov	x29, sp
  411f88:	str	x0, [sp, #24]
  411f8c:	ldr	x0, [sp, #24]
  411f90:	ldr	x0, [x0]
  411f94:	bl	402d20 <free@plt>
  411f98:	ldr	x0, [sp, #24]
  411f9c:	bl	402d20 <free@plt>
  411fa0:	nop
  411fa4:	ldp	x29, x30, [sp], #32
  411fa8:	ret
  411fac:	stp	x29, x30, [sp, #-32]!
  411fb0:	mov	x29, sp
  411fb4:	str	x0, [sp, #24]
  411fb8:	str	x1, [sp, #16]
  411fbc:	ldr	x0, [sp, #24]
  411fc0:	ldr	x0, [x0, #8]
  411fc4:	sub	x1, x0, #0x1
  411fc8:	ldr	x0, [sp, #24]
  411fcc:	ldr	x0, [x0, #16]
  411fd0:	cmp	x1, x0
  411fd4:	b.hi	412004 <ferror@plt+0xf004>  // b.pmore
  411fd8:	ldr	x0, [sp, #24]
  411fdc:	ldr	x3, [x0]
  411fe0:	ldr	x0, [sp, #24]
  411fe4:	add	x0, x0, #0x8
  411fe8:	mov	x2, #0x8                   	// #8
  411fec:	mov	x1, x0
  411ff0:	mov	x0, x3
  411ff4:	bl	4182a4 <ferror@plt+0x152a4>
  411ff8:	mov	x1, x0
  411ffc:	ldr	x0, [sp, #24]
  412000:	str	x1, [x0]
  412004:	ldr	x0, [sp, #24]
  412008:	ldr	x1, [x0]
  41200c:	ldr	x0, [sp, #24]
  412010:	ldr	x0, [x0, #16]
  412014:	add	x2, x0, #0x1
  412018:	ldr	x0, [sp, #24]
  41201c:	str	x2, [x0, #16]
  412020:	ldr	x0, [sp, #24]
  412024:	ldr	x0, [x0, #16]
  412028:	lsl	x0, x0, #3
  41202c:	add	x0, x1, x0
  412030:	ldr	x1, [sp, #16]
  412034:	str	x1, [x0]
  412038:	ldr	x0, [sp, #24]
  41203c:	ldr	x3, [x0]
  412040:	ldr	x0, [sp, #24]
  412044:	ldr	x1, [x0, #16]
  412048:	ldr	x0, [sp, #24]
  41204c:	ldr	x0, [x0, #24]
  412050:	mov	x2, x0
  412054:	mov	x0, x3
  412058:	bl	412248 <ferror@plt+0xf248>
  41205c:	mov	w0, #0x0                   	// #0
  412060:	ldp	x29, x30, [sp], #32
  412064:	ret
  412068:	stp	x29, x30, [sp, #-48]!
  41206c:	mov	x29, sp
  412070:	str	x0, [sp, #24]
  412074:	ldr	x0, [sp, #24]
  412078:	ldr	x0, [x0, #16]
  41207c:	cmp	x0, #0x0
  412080:	b.ne	41208c <ferror@plt+0xf08c>  // b.any
  412084:	mov	x0, #0x0                   	// #0
  412088:	b	412100 <ferror@plt+0xf100>
  41208c:	ldr	x0, [sp, #24]
  412090:	ldr	x0, [x0]
  412094:	ldr	x0, [x0, #8]
  412098:	str	x0, [sp, #40]
  41209c:	ldr	x0, [sp, #24]
  4120a0:	ldr	x1, [x0]
  4120a4:	ldr	x0, [sp, #24]
  4120a8:	ldr	x0, [x0, #16]
  4120ac:	sub	x3, x0, #0x1
  4120b0:	ldr	x2, [sp, #24]
  4120b4:	str	x3, [x2, #16]
  4120b8:	lsl	x0, x0, #3
  4120bc:	add	x1, x1, x0
  4120c0:	ldr	x0, [sp, #24]
  4120c4:	ldr	x0, [x0]
  4120c8:	add	x0, x0, #0x8
  4120cc:	ldr	x1, [x1]
  4120d0:	str	x1, [x0]
  4120d4:	ldr	x0, [sp, #24]
  4120d8:	ldr	x4, [x0]
  4120dc:	ldr	x0, [sp, #24]
  4120e0:	ldr	x1, [x0, #16]
  4120e4:	ldr	x0, [sp, #24]
  4120e8:	ldr	x0, [x0, #24]
  4120ec:	mov	x3, x0
  4120f0:	mov	x2, #0x1                   	// #1
  4120f4:	mov	x0, x4
  4120f8:	bl	412108 <ferror@plt+0xf108>
  4120fc:	ldr	x0, [sp, #40]
  412100:	ldp	x29, x30, [sp], #48
  412104:	ret
  412108:	stp	x29, x30, [sp, #-80]!
  41210c:	mov	x29, sp
  412110:	str	x0, [sp, #40]
  412114:	str	x1, [sp, #32]
  412118:	str	x2, [sp, #24]
  41211c:	str	x3, [sp, #16]
  412120:	ldr	x0, [sp, #24]
  412124:	lsl	x0, x0, #3
  412128:	ldr	x1, [sp, #40]
  41212c:	add	x0, x1, x0
  412130:	ldr	x0, [x0]
  412134:	str	x0, [sp, #56]
  412138:	ldr	x0, [sp, #24]
  41213c:	str	x0, [sp, #72]
  412140:	b	412208 <ferror@plt+0xf208>
  412144:	ldr	x0, [sp, #72]
  412148:	lsl	x0, x0, #1
  41214c:	str	x0, [sp, #64]
  412150:	ldr	x1, [sp, #64]
  412154:	ldr	x0, [sp, #32]
  412158:	cmp	x1, x0
  41215c:	b.cs	4121b0 <ferror@plt+0xf1b0>  // b.hs, b.nlast
  412160:	ldr	x0, [sp, #64]
  412164:	lsl	x0, x0, #3
  412168:	ldr	x1, [sp, #40]
  41216c:	add	x0, x1, x0
  412170:	ldr	x3, [x0]
  412174:	ldr	x0, [sp, #64]
  412178:	add	x0, x0, #0x1
  41217c:	lsl	x0, x0, #3
  412180:	ldr	x1, [sp, #40]
  412184:	add	x0, x1, x0
  412188:	ldr	x0, [x0]
  41218c:	ldr	x2, [sp, #16]
  412190:	mov	x1, x0
  412194:	mov	x0, x3
  412198:	blr	x2
  41219c:	cmp	w0, #0x0
  4121a0:	b.ge	4121b0 <ferror@plt+0xf1b0>  // b.tcont
  4121a4:	ldr	x0, [sp, #64]
  4121a8:	add	x0, x0, #0x1
  4121ac:	str	x0, [sp, #64]
  4121b0:	ldr	x0, [sp, #64]
  4121b4:	lsl	x0, x0, #3
  4121b8:	ldr	x1, [sp, #40]
  4121bc:	add	x0, x1, x0
  4121c0:	ldr	x0, [x0]
  4121c4:	ldr	x2, [sp, #16]
  4121c8:	ldr	x1, [sp, #56]
  4121cc:	blr	x2
  4121d0:	cmp	w0, #0x0
  4121d4:	b.le	412220 <ferror@plt+0xf220>
  4121d8:	ldr	x0, [sp, #64]
  4121dc:	lsl	x0, x0, #3
  4121e0:	ldr	x1, [sp, #40]
  4121e4:	add	x1, x1, x0
  4121e8:	ldr	x0, [sp, #72]
  4121ec:	lsl	x0, x0, #3
  4121f0:	ldr	x2, [sp, #40]
  4121f4:	add	x0, x2, x0
  4121f8:	ldr	x1, [x1]
  4121fc:	str	x1, [x0]
  412200:	ldr	x0, [sp, #64]
  412204:	str	x0, [sp, #72]
  412208:	ldr	x0, [sp, #32]
  41220c:	lsr	x0, x0, #1
  412210:	ldr	x1, [sp, #72]
  412214:	cmp	x1, x0
  412218:	b.ls	412144 <ferror@plt+0xf144>  // b.plast
  41221c:	b	412224 <ferror@plt+0xf224>
  412220:	nop
  412224:	ldr	x0, [sp, #72]
  412228:	lsl	x0, x0, #3
  41222c:	ldr	x1, [sp, #40]
  412230:	add	x0, x1, x0
  412234:	ldr	x1, [sp, #56]
  412238:	str	x1, [x0]
  41223c:	ldr	x0, [sp, #72]
  412240:	ldp	x29, x30, [sp], #80
  412244:	ret
  412248:	stp	x29, x30, [sp, #-64]!
  41224c:	mov	x29, sp
  412250:	str	x0, [sp, #40]
  412254:	str	x1, [sp, #32]
  412258:	str	x2, [sp, #24]
  41225c:	ldr	x0, [sp, #32]
  412260:	str	x0, [sp, #56]
  412264:	ldr	x0, [sp, #56]
  412268:	lsl	x0, x0, #3
  41226c:	ldr	x1, [sp, #40]
  412270:	add	x0, x1, x0
  412274:	ldr	x0, [x0]
  412278:	str	x0, [sp, #48]
  41227c:	b	4122b8 <ferror@plt+0xf2b8>
  412280:	ldr	x0, [sp, #56]
  412284:	lsr	x0, x0, #1
  412288:	lsl	x0, x0, #3
  41228c:	ldr	x1, [sp, #40]
  412290:	add	x1, x1, x0
  412294:	ldr	x0, [sp, #56]
  412298:	lsl	x0, x0, #3
  41229c:	ldr	x2, [sp, #40]
  4122a0:	add	x0, x2, x0
  4122a4:	ldr	x1, [x1]
  4122a8:	str	x1, [x0]
  4122ac:	ldr	x0, [sp, #56]
  4122b0:	lsr	x0, x0, #1
  4122b4:	str	x0, [sp, #56]
  4122b8:	ldr	x0, [sp, #56]
  4122bc:	cmp	x0, #0x1
  4122c0:	b.eq	4122f0 <ferror@plt+0xf2f0>  // b.none
  4122c4:	ldr	x0, [sp, #56]
  4122c8:	lsr	x0, x0, #1
  4122cc:	lsl	x0, x0, #3
  4122d0:	ldr	x1, [sp, #40]
  4122d4:	add	x0, x1, x0
  4122d8:	ldr	x0, [x0]
  4122dc:	ldr	x2, [sp, #24]
  4122e0:	ldr	x1, [sp, #48]
  4122e4:	blr	x2
  4122e8:	cmp	w0, #0x0
  4122ec:	b.le	412280 <ferror@plt+0xf280>
  4122f0:	ldr	x0, [sp, #56]
  4122f4:	lsl	x0, x0, #3
  4122f8:	ldr	x1, [sp, #40]
  4122fc:	add	x0, x1, x0
  412300:	ldr	x1, [sp, #48]
  412304:	str	x1, [x0]
  412308:	nop
  41230c:	ldp	x29, x30, [sp], #64
  412310:	ret
  412314:	sub	sp, sp, #0x20
  412318:	str	w0, [sp, #12]
  41231c:	str	x1, [sp]
  412320:	ldr	x0, [sp]
  412324:	add	x0, x0, #0xb
  412328:	str	x0, [sp, #24]
  41232c:	ldr	x0, [sp, #24]
  412330:	strb	wzr, [x0]
  412334:	ldr	w0, [sp, #12]
  412338:	cmp	w0, #0x0
  41233c:	b.ge	4123e4 <ferror@plt+0xf3e4>  // b.tcont
  412340:	ldr	w1, [sp, #12]
  412344:	mov	w0, #0x6667                	// #26215
  412348:	movk	w0, #0x6666, lsl #16
  41234c:	smull	x0, w1, w0
  412350:	lsr	x0, x0, #32
  412354:	asr	w2, w0, #2
  412358:	asr	w0, w1, #31
  41235c:	sub	w2, w2, w0
  412360:	mov	w0, w2
  412364:	lsl	w0, w0, #2
  412368:	add	w0, w0, w2
  41236c:	lsl	w0, w0, #1
  412370:	sub	w2, w1, w0
  412374:	and	w0, w2, #0xff
  412378:	ldr	x1, [sp, #24]
  41237c:	sub	x1, x1, #0x1
  412380:	str	x1, [sp, #24]
  412384:	mov	w1, #0x30                  	// #48
  412388:	sub	w0, w1, w0
  41238c:	and	w1, w0, #0xff
  412390:	ldr	x0, [sp, #24]
  412394:	strb	w1, [x0]
  412398:	ldr	w0, [sp, #12]
  41239c:	mov	w1, #0x6667                	// #26215
  4123a0:	movk	w1, #0x6666, lsl #16
  4123a4:	smull	x1, w0, w1
  4123a8:	lsr	x1, x1, #32
  4123ac:	asr	w1, w1, #2
  4123b0:	asr	w0, w0, #31
  4123b4:	sub	w0, w1, w0
  4123b8:	str	w0, [sp, #12]
  4123bc:	ldr	w0, [sp, #12]
  4123c0:	cmp	w0, #0x0
  4123c4:	b.ne	412340 <ferror@plt+0xf340>  // b.any
  4123c8:	ldr	x0, [sp, #24]
  4123cc:	sub	x0, x0, #0x1
  4123d0:	str	x0, [sp, #24]
  4123d4:	ldr	x0, [sp, #24]
  4123d8:	mov	w1, #0x2d                  	// #45
  4123dc:	strb	w1, [x0]
  4123e0:	b	412468 <ferror@plt+0xf468>
  4123e4:	ldr	w1, [sp, #12]
  4123e8:	mov	w0, #0x6667                	// #26215
  4123ec:	movk	w0, #0x6666, lsl #16
  4123f0:	smull	x0, w1, w0
  4123f4:	lsr	x0, x0, #32
  4123f8:	asr	w2, w0, #2
  4123fc:	asr	w0, w1, #31
  412400:	sub	w2, w2, w0
  412404:	mov	w0, w2
  412408:	lsl	w0, w0, #2
  41240c:	add	w0, w0, w2
  412410:	lsl	w0, w0, #1
  412414:	sub	w2, w1, w0
  412418:	and	w0, w2, #0xff
  41241c:	ldr	x1, [sp, #24]
  412420:	sub	x1, x1, #0x1
  412424:	str	x1, [sp, #24]
  412428:	add	w0, w0, #0x30
  41242c:	and	w1, w0, #0xff
  412430:	ldr	x0, [sp, #24]
  412434:	strb	w1, [x0]
  412438:	ldr	w0, [sp, #12]
  41243c:	mov	w1, #0x6667                	// #26215
  412440:	movk	w1, #0x6666, lsl #16
  412444:	smull	x1, w0, w1
  412448:	lsr	x1, x1, #32
  41244c:	asr	w1, w1, #2
  412450:	asr	w0, w0, #31
  412454:	sub	w0, w1, w0
  412458:	str	w0, [sp, #12]
  41245c:	ldr	w0, [sp, #12]
  412460:	cmp	w0, #0x0
  412464:	b.ne	4123e4 <ferror@plt+0xf3e4>  // b.any
  412468:	ldr	x0, [sp, #24]
  41246c:	add	sp, sp, #0x20
  412470:	ret
  412474:	sub	sp, sp, #0x20
  412478:	str	w0, [sp, #12]
  41247c:	str	x1, [sp]
  412480:	ldr	x0, [sp]
  412484:	add	x0, x0, #0xa
  412488:	str	x0, [sp, #24]
  41248c:	ldr	x0, [sp, #24]
  412490:	strb	wzr, [x0]
  412494:	ldr	w2, [sp, #12]
  412498:	mov	w0, #0xcccd                	// #52429
  41249c:	movk	w0, #0xcccc, lsl #16
  4124a0:	umull	x0, w2, w0
  4124a4:	lsr	x0, x0, #32
  4124a8:	lsr	w1, w0, #3
  4124ac:	mov	w0, w1
  4124b0:	lsl	w0, w0, #2
  4124b4:	add	w0, w0, w1
  4124b8:	lsl	w0, w0, #1
  4124bc:	sub	w1, w2, w0
  4124c0:	and	w0, w1, #0xff
  4124c4:	ldr	x1, [sp, #24]
  4124c8:	sub	x1, x1, #0x1
  4124cc:	str	x1, [sp, #24]
  4124d0:	add	w0, w0, #0x30
  4124d4:	and	w1, w0, #0xff
  4124d8:	ldr	x0, [sp, #24]
  4124dc:	strb	w1, [x0]
  4124e0:	ldr	w1, [sp, #12]
  4124e4:	mov	w0, #0xcccd                	// #52429
  4124e8:	movk	w0, #0xcccc, lsl #16
  4124ec:	umull	x0, w1, w0
  4124f0:	lsr	x0, x0, #32
  4124f4:	lsr	w0, w0, #3
  4124f8:	str	w0, [sp, #12]
  4124fc:	ldr	w0, [sp, #12]
  412500:	cmp	w0, #0x0
  412504:	b.ne	412494 <ferror@plt+0xf494>  // b.any
  412508:	ldr	x0, [sp, #24]
  41250c:	add	sp, sp, #0x20
  412510:	ret
  412514:	sub	sp, sp, #0x20
  412518:	str	x0, [sp, #8]
  41251c:	str	x1, [sp]
  412520:	ldr	x0, [sp]
  412524:	add	x0, x0, #0x14
  412528:	str	x0, [sp, #24]
  41252c:	ldr	x0, [sp, #24]
  412530:	strb	wzr, [x0]
  412534:	ldr	x2, [sp, #8]
  412538:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  41253c:	movk	x0, #0xcccd
  412540:	umulh	x0, x2, x0
  412544:	lsr	x1, x0, #3
  412548:	mov	x0, x1
  41254c:	lsl	x0, x0, #2
  412550:	add	x0, x0, x1
  412554:	lsl	x0, x0, #1
  412558:	sub	x1, x2, x0
  41255c:	and	w0, w1, #0xff
  412560:	ldr	x1, [sp, #24]
  412564:	sub	x1, x1, #0x1
  412568:	str	x1, [sp, #24]
  41256c:	add	w0, w0, #0x30
  412570:	and	w1, w0, #0xff
  412574:	ldr	x0, [sp, #24]
  412578:	strb	w1, [x0]
  41257c:	ldr	x1, [sp, #8]
  412580:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  412584:	movk	x0, #0xcccd
  412588:	umulh	x0, x1, x0
  41258c:	lsr	x0, x0, #3
  412590:	str	x0, [sp, #8]
  412594:	ldr	x0, [sp, #8]
  412598:	cmp	x0, #0x0
  41259c:	b.ne	412534 <ferror@plt+0xf534>  // b.any
  4125a0:	ldr	x0, [sp, #24]
  4125a4:	add	sp, sp, #0x20
  4125a8:	ret
  4125ac:	stp	x29, x30, [sp, #-32]!
  4125b0:	mov	x29, sp
  4125b4:	str	x0, [sp, #24]
  4125b8:	str	w1, [sp, #20]
  4125bc:	ldr	x0, [sp, #24]
  4125c0:	bl	4028f0 <strlen@plt>
  4125c4:	ldr	w2, [sp, #20]
  4125c8:	mov	x1, x0
  4125cc:	ldr	x0, [sp, #24]
  4125d0:	bl	4125dc <ferror@plt+0xf5dc>
  4125d4:	ldp	x29, x30, [sp], #32
  4125d8:	ret
  4125dc:	stp	x29, x30, [sp, #-112]!
  4125e0:	mov	x29, sp
  4125e4:	str	x0, [sp, #40]
  4125e8:	str	x1, [sp, #32]
  4125ec:	str	w2, [sp, #28]
  4125f0:	ldr	x0, [sp, #40]
  4125f4:	str	x0, [sp, #104]
  4125f8:	ldr	x1, [sp, #104]
  4125fc:	ldr	x0, [sp, #32]
  412600:	add	x0, x1, x0
  412604:	str	x0, [sp, #80]
  412608:	str	wzr, [sp, #100]
  41260c:	bl	402d30 <__ctype_get_mb_cur_max@plt>
  412610:	cmp	x0, #0x1
  412614:	b.ls	4128c4 <ferror@plt+0xf8c4>  // b.plast
  412618:	b	4127f8 <ferror@plt+0xf7f8>
  41261c:	ldr	x0, [sp, #104]
  412620:	ldrb	w0, [x0]
  412624:	cmp	w0, #0x7e
  412628:	b.gt	412680 <ferror@plt+0xf680>
  41262c:	cmp	w0, #0x61
  412630:	b.ge	412664 <ferror@plt+0xf664>  // b.tcont
  412634:	cmp	w0, #0x5f
  412638:	b.gt	412680 <ferror@plt+0xf680>
  41263c:	cmp	w0, #0x41
  412640:	b.ge	412664 <ferror@plt+0xf664>  // b.tcont
  412644:	cmp	w0, #0x23
  412648:	b.gt	412658 <ferror@plt+0xf658>
  41264c:	cmp	w0, #0x20
  412650:	b.ge	412664 <ferror@plt+0xf664>  // b.tcont
  412654:	b	412680 <ferror@plt+0xf680>
  412658:	sub	w0, w0, #0x25
  41265c:	cmp	w0, #0x1a
  412660:	b.hi	412680 <ferror@plt+0xf680>  // b.pmore
  412664:	ldr	x0, [sp, #104]
  412668:	add	x0, x0, #0x1
  41266c:	str	x0, [sp, #104]
  412670:	ldr	w0, [sp, #100]
  412674:	add	w0, w0, #0x1
  412678:	str	w0, [sp, #100]
  41267c:	b	4127f8 <ferror@plt+0xf7f8>
  412680:	add	x0, sp, #0x40
  412684:	mov	x2, #0x8                   	// #8
  412688:	mov	w1, #0x0                   	// #0
  41268c:	bl	402b30 <memset@plt>
  412690:	ldr	x1, [sp, #80]
  412694:	ldr	x0, [sp, #104]
  412698:	sub	x0, x1, x0
  41269c:	mov	x2, x0
  4126a0:	add	x1, sp, #0x40
  4126a4:	add	x0, sp, #0x3c
  4126a8:	mov	x3, x1
  4126ac:	ldr	x1, [sp, #104]
  4126b0:	bl	419c9c <ferror@plt+0x16c9c>
  4126b4:	str	x0, [sp, #88]
  4126b8:	ldr	x0, [sp, #88]
  4126bc:	cmn	x0, #0x1
  4126c0:	b.ne	4126f8 <ferror@plt+0xf6f8>  // b.any
  4126c4:	ldr	w0, [sp, #28]
  4126c8:	and	w0, w0, #0x1
  4126cc:	cmp	w0, #0x0
  4126d0:	b.ne	4126f0 <ferror@plt+0xf6f0>  // b.any
  4126d4:	ldr	x0, [sp, #104]
  4126d8:	add	x0, x0, #0x1
  4126dc:	str	x0, [sp, #104]
  4126e0:	ldr	w0, [sp, #100]
  4126e4:	add	w0, w0, #0x1
  4126e8:	str	w0, [sp, #100]
  4126ec:	b	4127f4 <ferror@plt+0xf7f4>
  4126f0:	mov	w0, #0xffffffff            	// #-1
  4126f4:	b	4128fc <ferror@plt+0xf8fc>
  4126f8:	ldr	x0, [sp, #88]
  4126fc:	cmn	x0, #0x2
  412700:	b.ne	412734 <ferror@plt+0xf734>  // b.any
  412704:	ldr	w0, [sp, #28]
  412708:	and	w0, w0, #0x1
  41270c:	cmp	w0, #0x0
  412710:	b.ne	41272c <ferror@plt+0xf72c>  // b.any
  412714:	ldr	x0, [sp, #80]
  412718:	str	x0, [sp, #104]
  41271c:	ldr	w0, [sp, #100]
  412720:	add	w0, w0, #0x1
  412724:	str	w0, [sp, #100]
  412728:	b	4127f4 <ferror@plt+0xf7f4>
  41272c:	mov	w0, #0xffffffff            	// #-1
  412730:	b	4128fc <ferror@plt+0xf8fc>
  412734:	ldr	x0, [sp, #88]
  412738:	cmp	x0, #0x0
  41273c:	b.ne	412748 <ferror@plt+0xf748>  // b.any
  412740:	mov	x0, #0x1                   	// #1
  412744:	str	x0, [sp, #88]
  412748:	ldr	w0, [sp, #60]
  41274c:	bl	402aa0 <wcwidth@plt>
  412750:	str	w0, [sp, #72]
  412754:	ldr	w0, [sp, #72]
  412758:	cmp	w0, #0x0
  41275c:	b.lt	41278c <ferror@plt+0xf78c>  // b.tstop
  412760:	mov	w1, #0x7fffffff            	// #2147483647
  412764:	ldr	w0, [sp, #100]
  412768:	sub	w0, w1, w0
  41276c:	ldr	w1, [sp, #72]
  412770:	cmp	w1, w0
  412774:	b.gt	4128dc <ferror@plt+0xf8dc>
  412778:	ldr	w1, [sp, #100]
  41277c:	ldr	w0, [sp, #72]
  412780:	add	w0, w1, w0
  412784:	str	w0, [sp, #100]
  412788:	b	4127d4 <ferror@plt+0xf7d4>
  41278c:	ldr	w0, [sp, #28]
  412790:	and	w0, w0, #0x2
  412794:	cmp	w0, #0x0
  412798:	b.ne	4127cc <ferror@plt+0xf7cc>  // b.any
  41279c:	ldr	w0, [sp, #60]
  4127a0:	bl	402980 <iswcntrl@plt>
  4127a4:	cmp	w0, #0x0
  4127a8:	b.ne	4127d4 <ferror@plt+0xf7d4>  // b.any
  4127ac:	ldr	w1, [sp, #100]
  4127b0:	mov	w0, #0x7fffffff            	// #2147483647
  4127b4:	cmp	w1, w0
  4127b8:	b.eq	4128e4 <ferror@plt+0xf8e4>  // b.none
  4127bc:	ldr	w0, [sp, #100]
  4127c0:	add	w0, w0, #0x1
  4127c4:	str	w0, [sp, #100]
  4127c8:	b	4127d4 <ferror@plt+0xf7d4>
  4127cc:	mov	w0, #0xffffffff            	// #-1
  4127d0:	b	4128fc <ferror@plt+0xf8fc>
  4127d4:	ldr	x1, [sp, #104]
  4127d8:	ldr	x0, [sp, #88]
  4127dc:	add	x0, x1, x0
  4127e0:	str	x0, [sp, #104]
  4127e4:	add	x0, sp, #0x40
  4127e8:	bl	402c60 <mbsinit@plt>
  4127ec:	cmp	w0, #0x0
  4127f0:	b.eq	412690 <ferror@plt+0xf690>  // b.none
  4127f4:	nop
  4127f8:	ldr	x1, [sp, #104]
  4127fc:	ldr	x0, [sp, #80]
  412800:	cmp	x1, x0
  412804:	b.cc	41261c <ferror@plt+0xf61c>  // b.lo, b.ul, b.last
  412808:	ldr	w0, [sp, #100]
  41280c:	b	4128fc <ferror@plt+0xf8fc>
  412810:	ldr	x0, [sp, #104]
  412814:	add	x1, x0, #0x1
  412818:	str	x1, [sp, #104]
  41281c:	ldrb	w0, [x0]
  412820:	strb	w0, [sp, #79]
  412824:	bl	402ce0 <__ctype_b_loc@plt>
  412828:	ldr	x1, [x0]
  41282c:	ldrb	w0, [sp, #79]
  412830:	lsl	x0, x0, #1
  412834:	add	x0, x1, x0
  412838:	ldrh	w0, [x0]
  41283c:	and	w0, w0, #0x4000
  412840:	cmp	w0, #0x0
  412844:	b.eq	412868 <ferror@plt+0xf868>  // b.none
  412848:	ldr	w1, [sp, #100]
  41284c:	mov	w0, #0x7fffffff            	// #2147483647
  412850:	cmp	w1, w0
  412854:	b.eq	4128ec <ferror@plt+0xf8ec>  // b.none
  412858:	ldr	w0, [sp, #100]
  41285c:	add	w0, w0, #0x1
  412860:	str	w0, [sp, #100]
  412864:	b	4128c4 <ferror@plt+0xf8c4>
  412868:	ldr	w0, [sp, #28]
  41286c:	and	w0, w0, #0x2
  412870:	cmp	w0, #0x0
  412874:	b.ne	4128bc <ferror@plt+0xf8bc>  // b.any
  412878:	bl	402ce0 <__ctype_b_loc@plt>
  41287c:	ldr	x1, [x0]
  412880:	ldrb	w0, [sp, #79]
  412884:	lsl	x0, x0, #1
  412888:	add	x0, x1, x0
  41288c:	ldrh	w0, [x0]
  412890:	and	w0, w0, #0x2
  412894:	cmp	w0, #0x0
  412898:	b.ne	4128c4 <ferror@plt+0xf8c4>  // b.any
  41289c:	ldr	w1, [sp, #100]
  4128a0:	mov	w0, #0x7fffffff            	// #2147483647
  4128a4:	cmp	w1, w0
  4128a8:	b.eq	4128f4 <ferror@plt+0xf8f4>  // b.none
  4128ac:	ldr	w0, [sp, #100]
  4128b0:	add	w0, w0, #0x1
  4128b4:	str	w0, [sp, #100]
  4128b8:	b	4128c4 <ferror@plt+0xf8c4>
  4128bc:	mov	w0, #0xffffffff            	// #-1
  4128c0:	b	4128fc <ferror@plt+0xf8fc>
  4128c4:	ldr	x1, [sp, #104]
  4128c8:	ldr	x0, [sp, #80]
  4128cc:	cmp	x1, x0
  4128d0:	b.cc	412810 <ferror@plt+0xf810>  // b.lo, b.ul, b.last
  4128d4:	ldr	w0, [sp, #100]
  4128d8:	b	4128fc <ferror@plt+0xf8fc>
  4128dc:	nop
  4128e0:	b	4128f8 <ferror@plt+0xf8f8>
  4128e4:	nop
  4128e8:	b	4128f8 <ferror@plt+0xf8f8>
  4128ec:	nop
  4128f0:	b	4128f8 <ferror@plt+0xf8f8>
  4128f4:	nop
  4128f8:	mov	w0, #0x7fffffff            	// #2147483647
  4128fc:	ldp	x29, x30, [sp], #112
  412900:	ret
  412904:	stp	x29, x30, [sp, #-160]!
  412908:	mov	x29, sp
  41290c:	add	x0, sp, #0x18
  412910:	mov	x2, x0
  412914:	mov	x1, #0x80                  	// #128
  412918:	mov	w0, #0x0                   	// #0
  41291c:	bl	402c40 <sched_getaffinity@plt>
  412920:	cmp	w0, #0x0
  412924:	b.ne	412954 <ferror@plt+0xf954>  // b.any
  412928:	add	x0, sp, #0x18
  41292c:	mov	x1, x0
  412930:	mov	x0, #0x80                  	// #128
  412934:	bl	402db0 <__sched_cpucount@plt>
  412938:	sxtw	x0, w0
  41293c:	str	x0, [sp, #152]
  412940:	ldr	x0, [sp, #152]
  412944:	cmp	x0, #0x0
  412948:	b.eq	412954 <ferror@plt+0xf954>  // b.none
  41294c:	ldr	x0, [sp, #152]
  412950:	b	412958 <ferror@plt+0xf958>
  412954:	mov	x0, #0x0                   	// #0
  412958:	ldp	x29, x30, [sp], #160
  41295c:	ret
  412960:	stp	x29, x30, [sp, #-64]!
  412964:	mov	x29, sp
  412968:	str	w0, [sp, #28]
  41296c:	ldr	w0, [sp, #28]
  412970:	cmp	w0, #0x1
  412974:	b.ne	4129b4 <ferror@plt+0xf9b4>  // b.any
  412978:	bl	412904 <ferror@plt+0xf904>
  41297c:	str	x0, [sp, #40]
  412980:	ldr	x0, [sp, #40]
  412984:	cmp	x0, #0x0
  412988:	b.eq	412994 <ferror@plt+0xf994>  // b.none
  41298c:	ldr	x0, [sp, #40]
  412990:	b	412a00 <ferror@plt+0xfa00>
  412994:	mov	w0, #0x54                  	// #84
  412998:	bl	402e70 <sysconf@plt>
  41299c:	str	x0, [sp, #32]
  4129a0:	ldr	x0, [sp, #32]
  4129a4:	cmp	x0, #0x0
  4129a8:	b.le	4129fc <ferror@plt+0xf9fc>
  4129ac:	ldr	x0, [sp, #32]
  4129b0:	b	412a00 <ferror@plt+0xfa00>
  4129b4:	mov	w0, #0x53                  	// #83
  4129b8:	bl	402e70 <sysconf@plt>
  4129bc:	str	x0, [sp, #56]
  4129c0:	ldr	x0, [sp, #56]
  4129c4:	cmp	x0, #0x1
  4129c8:	b.ne	4129e8 <ferror@plt+0xf9e8>  // b.any
  4129cc:	bl	412904 <ferror@plt+0xf904>
  4129d0:	str	x0, [sp, #48]
  4129d4:	ldr	x0, [sp, #48]
  4129d8:	cmp	x0, #0x0
  4129dc:	b.eq	4129e8 <ferror@plt+0xf9e8>  // b.none
  4129e0:	ldr	x0, [sp, #48]
  4129e4:	str	x0, [sp, #56]
  4129e8:	ldr	x0, [sp, #56]
  4129ec:	cmp	x0, #0x0
  4129f0:	b.le	4129fc <ferror@plt+0xf9fc>
  4129f4:	ldr	x0, [sp, #56]
  4129f8:	b	412a00 <ferror@plt+0xfa00>
  4129fc:	mov	x0, #0x1                   	// #1
  412a00:	ldp	x29, x30, [sp], #64
  412a04:	ret
  412a08:	stp	x29, x30, [sp, #-64]!
  412a0c:	mov	x29, sp
  412a10:	str	x0, [sp, #24]
  412a14:	str	xzr, [sp, #56]
  412a18:	ldr	x0, [sp, #24]
  412a1c:	cmp	x0, #0x0
  412a20:	b.ne	412a38 <ferror@plt+0xfa38>  // b.any
  412a24:	ldr	x0, [sp, #56]
  412a28:	b	412b0c <ferror@plt+0xfb0c>
  412a2c:	ldr	x0, [sp, #24]
  412a30:	add	x0, x0, #0x1
  412a34:	str	x0, [sp, #24]
  412a38:	ldr	x0, [sp, #24]
  412a3c:	ldrb	w0, [x0]
  412a40:	cmp	w0, #0x0
  412a44:	b.eq	412a60 <ferror@plt+0xfa60>  // b.none
  412a48:	ldr	x0, [sp, #24]
  412a4c:	ldrb	w0, [x0]
  412a50:	bl	41a9d4 <_obstack_memory_used@@Base+0x538>
  412a54:	and	w0, w0, #0xff
  412a58:	cmp	w0, #0x0
  412a5c:	b.ne	412a2c <ferror@plt+0xfa2c>  // b.any
  412a60:	ldr	x0, [sp, #24]
  412a64:	ldrb	w0, [x0]
  412a68:	bl	41a8ac <_obstack_memory_used@@Base+0x410>
  412a6c:	and	w0, w0, #0xff
  412a70:	cmp	w0, #0x0
  412a74:	b.eq	412b08 <ferror@plt+0xfb08>  // b.none
  412a78:	str	xzr, [sp, #40]
  412a7c:	add	x0, sp, #0x28
  412a80:	mov	w2, #0xa                   	// #10
  412a84:	mov	x1, x0
  412a88:	ldr	x0, [sp, #24]
  412a8c:	bl	4028e0 <strtoul@plt>
  412a90:	str	x0, [sp, #48]
  412a94:	ldr	x0, [sp, #40]
  412a98:	cmp	x0, #0x0
  412a9c:	b.eq	412b08 <ferror@plt+0xfb08>  // b.none
  412aa0:	b	412ab0 <ferror@plt+0xfab0>
  412aa4:	ldr	x0, [sp, #40]
  412aa8:	add	x0, x0, #0x1
  412aac:	str	x0, [sp, #40]
  412ab0:	ldr	x0, [sp, #40]
  412ab4:	ldrb	w0, [x0]
  412ab8:	cmp	w0, #0x0
  412abc:	b.eq	412ad8 <ferror@plt+0xfad8>  // b.none
  412ac0:	ldr	x0, [sp, #40]
  412ac4:	ldrb	w0, [x0]
  412ac8:	bl	41a9d4 <_obstack_memory_used@@Base+0x538>
  412acc:	and	w0, w0, #0xff
  412ad0:	cmp	w0, #0x0
  412ad4:	b.ne	412aa4 <ferror@plt+0xfaa4>  // b.any
  412ad8:	ldr	x0, [sp, #40]
  412adc:	ldrb	w0, [x0]
  412ae0:	cmp	w0, #0x0
  412ae4:	b.ne	412af0 <ferror@plt+0xfaf0>  // b.any
  412ae8:	ldr	x0, [sp, #48]
  412aec:	b	412b0c <ferror@plt+0xfb0c>
  412af0:	ldr	x0, [sp, #40]
  412af4:	ldrb	w0, [x0]
  412af8:	cmp	w0, #0x2c
  412afc:	b.ne	412b08 <ferror@plt+0xfb08>  // b.any
  412b00:	ldr	x0, [sp, #48]
  412b04:	b	412b0c <ferror@plt+0xfb0c>
  412b08:	ldr	x0, [sp, #56]
  412b0c:	ldp	x29, x30, [sp], #64
  412b10:	ret
  412b14:	stp	x29, x30, [sp, #-64]!
  412b18:	mov	x29, sp
  412b1c:	str	w0, [sp, #28]
  412b20:	mov	x0, #0xffffffffffffffff    	// #-1
  412b24:	str	x0, [sp, #56]
  412b28:	ldr	w0, [sp, #28]
  412b2c:	cmp	w0, #0x2
  412b30:	b.ne	412b9c <ferror@plt+0xfb9c>  // b.any
  412b34:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  412b38:	add	x0, x0, #0x5a0
  412b3c:	bl	402f70 <getenv@plt>
  412b40:	bl	412a08 <ferror@plt+0xfa08>
  412b44:	str	x0, [sp, #48]
  412b48:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  412b4c:	add	x0, x0, #0x5b0
  412b50:	bl	402f70 <getenv@plt>
  412b54:	bl	412a08 <ferror@plt+0xfa08>
  412b58:	str	x0, [sp, #56]
  412b5c:	ldr	x0, [sp, #56]
  412b60:	cmp	x0, #0x0
  412b64:	b.ne	412b70 <ferror@plt+0xfb70>  // b.any
  412b68:	mov	x0, #0xffffffffffffffff    	// #-1
  412b6c:	str	x0, [sp, #56]
  412b70:	ldr	x0, [sp, #48]
  412b74:	cmp	x0, #0x0
  412b78:	b.eq	412b94 <ferror@plt+0xfb94>  // b.none
  412b7c:	ldr	x0, [sp, #48]
  412b80:	ldr	x2, [sp, #56]
  412b84:	ldr	x1, [sp, #56]
  412b88:	cmp	x2, x0
  412b8c:	csel	x0, x1, x0, ls  // ls = plast
  412b90:	b	412bbc <ferror@plt+0xfbbc>
  412b94:	mov	w0, #0x1                   	// #1
  412b98:	str	w0, [sp, #28]
  412b9c:	ldr	w0, [sp, #28]
  412ba0:	bl	412960 <ferror@plt+0xf960>
  412ba4:	str	x0, [sp, #40]
  412ba8:	ldr	x0, [sp, #40]
  412bac:	ldr	x2, [sp, #56]
  412bb0:	ldr	x1, [sp, #56]
  412bb4:	cmp	x2, x0
  412bb8:	csel	x0, x1, x0, ls  // ls = plast
  412bbc:	ldp	x29, x30, [sp], #64
  412bc0:	ret
  412bc4:	stp	x29, x30, [sp, #-144]!
  412bc8:	mov	x29, sp
  412bcc:	mov	w0, #0x55                  	// #85
  412bd0:	bl	402e70 <sysconf@plt>
  412bd4:	scvtf	d0, x0
  412bd8:	str	d0, [sp, #136]
  412bdc:	mov	w0, #0x1e                  	// #30
  412be0:	bl	402e70 <sysconf@plt>
  412be4:	scvtf	d0, x0
  412be8:	str	d0, [sp, #128]
  412bec:	ldr	d0, [sp, #136]
  412bf0:	fcmpe	d0, #0.0
  412bf4:	b.lt	412c14 <ferror@plt+0xfc14>  // b.tstop
  412bf8:	ldr	d0, [sp, #128]
  412bfc:	fcmpe	d0, #0.0
  412c00:	b.lt	412c14 <ferror@plt+0xfc14>  // b.tstop
  412c04:	ldr	d1, [sp, #136]
  412c08:	ldr	d0, [sp, #128]
  412c0c:	fmul	d0, d1, d0
  412c10:	b	412c44 <ferror@plt+0xfc44>
  412c14:	add	x0, sp, #0x10
  412c18:	bl	402930 <sysinfo@plt>
  412c1c:	cmp	w0, #0x0
  412c20:	b.ne	412c3c <ferror@plt+0xfc3c>  // b.any
  412c24:	ldr	d0, [sp, #48]
  412c28:	ucvtf	d1, d0
  412c2c:	ldr	w0, [sp, #120]
  412c30:	ucvtf	d0, w0
  412c34:	fmul	d0, d1, d0
  412c38:	b	412c44 <ferror@plt+0xfc44>
  412c3c:	mov	x0, #0x4190000000000000    	// #4724276009111650304
  412c40:	fmov	d0, x0
  412c44:	ldp	x29, x30, [sp], #144
  412c48:	ret
  412c4c:	stp	x29, x30, [sp, #-144]!
  412c50:	mov	x29, sp
  412c54:	mov	w0, #0x56                  	// #86
  412c58:	bl	402e70 <sysconf@plt>
  412c5c:	scvtf	d0, x0
  412c60:	str	d0, [sp, #136]
  412c64:	mov	w0, #0x1e                  	// #30
  412c68:	bl	402e70 <sysconf@plt>
  412c6c:	scvtf	d0, x0
  412c70:	str	d0, [sp, #128]
  412c74:	ldr	d0, [sp, #136]
  412c78:	fcmpe	d0, #0.0
  412c7c:	b.lt	412c9c <ferror@plt+0xfc9c>  // b.tstop
  412c80:	ldr	d0, [sp, #128]
  412c84:	fcmpe	d0, #0.0
  412c88:	b.lt	412c9c <ferror@plt+0xfc9c>  // b.tstop
  412c8c:	ldr	d1, [sp, #136]
  412c90:	ldr	d0, [sp, #128]
  412c94:	fmul	d0, d1, d0
  412c98:	b	412ce0 <ferror@plt+0xfce0>
  412c9c:	add	x0, sp, #0x10
  412ca0:	bl	402930 <sysinfo@plt>
  412ca4:	cmp	w0, #0x0
  412ca8:	b.ne	412cd0 <ferror@plt+0xfcd0>  // b.any
  412cac:	ldr	d0, [sp, #56]
  412cb0:	ucvtf	d1, d0
  412cb4:	ldr	d0, [sp, #72]
  412cb8:	ucvtf	d0, d0
  412cbc:	fadd	d1, d1, d0
  412cc0:	ldr	w0, [sp, #120]
  412cc4:	ucvtf	d0, w0
  412cc8:	fmul	d0, d1, d0
  412ccc:	b	412ce0 <ferror@plt+0xfce0>
  412cd0:	bl	412bc4 <ferror@plt+0xfbc4>
  412cd4:	fmov	d1, d0
  412cd8:	fmov	d0, #4.000000000000000000e+00
  412cdc:	fdiv	d0, d1, d0
  412ce0:	ldp	x29, x30, [sp], #144
  412ce4:	ret
  412ce8:	stp	x29, x30, [sp, #-64]!
  412cec:	mov	x29, sp
  412cf0:	str	x0, [sp, #24]
  412cf4:	str	w1, [sp, #20]
  412cf8:	ldr	x0, [sp, #24]
  412cfc:	ldr	w0, [x0]
  412d00:	str	w0, [sp, #40]
  412d04:	ldr	x0, [sp, #24]
  412d08:	ldr	w0, [x0, #4]
  412d0c:	str	w0, [sp, #44]
  412d10:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  412d14:	add	x0, x0, #0xbdc
  412d18:	ldr	w0, [x0]
  412d1c:	cmp	w0, #0x0
  412d20:	b.lt	412d78 <ferror@plt+0xfd78>  // b.tstop
  412d24:	ldr	w1, [sp, #20]
  412d28:	ldr	x0, [sp, #24]
  412d2c:	bl	402c70 <pipe2@plt>
  412d30:	str	w0, [sp, #60]
  412d34:	ldr	w0, [sp, #60]
  412d38:	cmp	w0, #0x0
  412d3c:	b.ge	412d50 <ferror@plt+0xfd50>  // b.tcont
  412d40:	bl	402f50 <__errno_location@plt>
  412d44:	ldr	w0, [x0]
  412d48:	cmp	w0, #0x26
  412d4c:	b.eq	412d68 <ferror@plt+0xfd68>  // b.none
  412d50:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  412d54:	add	x0, x0, #0xbdc
  412d58:	mov	w1, #0x1                   	// #1
  412d5c:	str	w1, [x0]
  412d60:	ldr	w0, [sp, #60]
  412d64:	b	412f8c <ferror@plt+0xff8c>
  412d68:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  412d6c:	add	x0, x0, #0xbdc
  412d70:	mov	w1, #0xffffffff            	// #-1
  412d74:	str	w1, [x0]
  412d78:	ldr	w1, [sp, #20]
  412d7c:	mov	w0, #0xf7ff                	// #63487
  412d80:	movk	w0, #0xfff7, lsl #16
  412d84:	and	w0, w1, w0
  412d88:	cmp	w0, #0x0
  412d8c:	b.eq	412da8 <ferror@plt+0xfda8>  // b.none
  412d90:	bl	402f50 <__errno_location@plt>
  412d94:	mov	x1, x0
  412d98:	mov	w0, #0x16                  	// #22
  412d9c:	str	w0, [x1]
  412da0:	mov	w0, #0xffffffff            	// #-1
  412da4:	b	412f8c <ferror@plt+0xff8c>
  412da8:	ldr	x0, [sp, #24]
  412dac:	bl	402960 <pipe@plt>
  412db0:	cmp	w0, #0x0
  412db4:	b.ge	412dc0 <ferror@plt+0xfdc0>  // b.tcont
  412db8:	mov	w0, #0xffffffff            	// #-1
  412dbc:	b	412f8c <ferror@plt+0xff8c>
  412dc0:	ldr	w0, [sp, #20]
  412dc4:	and	w0, w0, #0x800
  412dc8:	cmp	w0, #0x0
  412dcc:	b.eq	412e70 <ferror@plt+0xfe70>  // b.none
  412dd0:	ldr	x0, [sp, #24]
  412dd4:	add	x0, x0, #0x4
  412dd8:	ldr	w0, [x0]
  412ddc:	mov	w2, #0x0                   	// #0
  412de0:	mov	w1, #0x3                   	// #3
  412de4:	bl	4196ac <ferror@plt+0x166ac>
  412de8:	str	w0, [sp, #56]
  412dec:	ldr	w0, [sp, #56]
  412df0:	cmp	w0, #0x0
  412df4:	b.lt	412f28 <ferror@plt+0xff28>  // b.tstop
  412df8:	ldr	x0, [sp, #24]
  412dfc:	add	x0, x0, #0x4
  412e00:	ldr	w3, [x0]
  412e04:	ldr	w0, [sp, #56]
  412e08:	orr	w0, w0, #0x800
  412e0c:	mov	w2, w0
  412e10:	mov	w1, #0x4                   	// #4
  412e14:	mov	w0, w3
  412e18:	bl	4196ac <ferror@plt+0x166ac>
  412e1c:	cmn	w0, #0x1
  412e20:	b.eq	412f28 <ferror@plt+0xff28>  // b.none
  412e24:	ldr	x0, [sp, #24]
  412e28:	ldr	w0, [x0]
  412e2c:	mov	w2, #0x0                   	// #0
  412e30:	mov	w1, #0x3                   	// #3
  412e34:	bl	4196ac <ferror@plt+0x166ac>
  412e38:	str	w0, [sp, #56]
  412e3c:	ldr	w0, [sp, #56]
  412e40:	cmp	w0, #0x0
  412e44:	b.lt	412f28 <ferror@plt+0xff28>  // b.tstop
  412e48:	ldr	x0, [sp, #24]
  412e4c:	ldr	w3, [x0]
  412e50:	ldr	w0, [sp, #56]
  412e54:	orr	w0, w0, #0x800
  412e58:	mov	w2, w0
  412e5c:	mov	w1, #0x4                   	// #4
  412e60:	mov	w0, w3
  412e64:	bl	4196ac <ferror@plt+0x166ac>
  412e68:	cmn	w0, #0x1
  412e6c:	b.eq	412f28 <ferror@plt+0xff28>  // b.none
  412e70:	ldr	w0, [sp, #20]
  412e74:	and	w0, w0, #0x80000
  412e78:	cmp	w0, #0x0
  412e7c:	b.eq	412f20 <ferror@plt+0xff20>  // b.none
  412e80:	ldr	x0, [sp, #24]
  412e84:	add	x0, x0, #0x4
  412e88:	ldr	w0, [x0]
  412e8c:	mov	w2, #0x0                   	// #0
  412e90:	mov	w1, #0x1                   	// #1
  412e94:	bl	4196ac <ferror@plt+0x166ac>
  412e98:	str	w0, [sp, #52]
  412e9c:	ldr	w0, [sp, #52]
  412ea0:	cmp	w0, #0x0
  412ea4:	b.lt	412f30 <ferror@plt+0xff30>  // b.tstop
  412ea8:	ldr	x0, [sp, #24]
  412eac:	add	x0, x0, #0x4
  412eb0:	ldr	w3, [x0]
  412eb4:	ldr	w0, [sp, #52]
  412eb8:	orr	w0, w0, #0x1
  412ebc:	mov	w2, w0
  412ec0:	mov	w1, #0x2                   	// #2
  412ec4:	mov	w0, w3
  412ec8:	bl	4196ac <ferror@plt+0x166ac>
  412ecc:	cmn	w0, #0x1
  412ed0:	b.eq	412f30 <ferror@plt+0xff30>  // b.none
  412ed4:	ldr	x0, [sp, #24]
  412ed8:	ldr	w0, [x0]
  412edc:	mov	w2, #0x0                   	// #0
  412ee0:	mov	w1, #0x1                   	// #1
  412ee4:	bl	4196ac <ferror@plt+0x166ac>
  412ee8:	str	w0, [sp, #52]
  412eec:	ldr	w0, [sp, #52]
  412ef0:	cmp	w0, #0x0
  412ef4:	b.lt	412f30 <ferror@plt+0xff30>  // b.tstop
  412ef8:	ldr	x0, [sp, #24]
  412efc:	ldr	w3, [x0]
  412f00:	ldr	w0, [sp, #52]
  412f04:	orr	w0, w0, #0x1
  412f08:	mov	w2, w0
  412f0c:	mov	w1, #0x2                   	// #2
  412f10:	mov	w0, w3
  412f14:	bl	4196ac <ferror@plt+0x166ac>
  412f18:	cmn	w0, #0x1
  412f1c:	b.eq	412f30 <ferror@plt+0xff30>  // b.none
  412f20:	mov	w0, #0x0                   	// #0
  412f24:	b	412f8c <ferror@plt+0xff8c>
  412f28:	nop
  412f2c:	b	412f34 <ferror@plt+0xff34>
  412f30:	nop
  412f34:	bl	402f50 <__errno_location@plt>
  412f38:	ldr	w0, [x0]
  412f3c:	str	w0, [sp, #48]
  412f40:	ldr	x0, [sp, #24]
  412f44:	ldr	w0, [x0]
  412f48:	bl	402ba0 <close@plt>
  412f4c:	ldr	x0, [sp, #24]
  412f50:	add	x0, x0, #0x4
  412f54:	ldr	w0, [x0]
  412f58:	bl	402ba0 <close@plt>
  412f5c:	ldr	w1, [sp, #40]
  412f60:	ldr	x0, [sp, #24]
  412f64:	str	w1, [x0]
  412f68:	ldr	x0, [sp, #24]
  412f6c:	add	x0, x0, #0x4
  412f70:	ldr	w1, [sp, #44]
  412f74:	str	w1, [x0]
  412f78:	bl	402f50 <__errno_location@plt>
  412f7c:	mov	x1, x0
  412f80:	ldr	w0, [sp, #48]
  412f84:	str	w0, [x1]
  412f88:	mov	w0, #0xffffffff            	// #-1
  412f8c:	ldp	x29, x30, [sp], #64
  412f90:	ret
  412f94:	stp	x29, x30, [sp, #-48]!
  412f98:	mov	x29, sp
  412f9c:	mov	x0, #0x1069                	// #4201
  412fa0:	movk	x0, #0x3, lsl #16
  412fa4:	str	x0, [sp, #40]
  412fa8:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  412fac:	add	x0, x0, #0x5c8
  412fb0:	bl	402f70 <getenv@plt>
  412fb4:	str	x0, [sp, #32]
  412fb8:	ldr	x0, [sp, #32]
  412fbc:	cmp	x0, #0x0
  412fc0:	b.eq	413004 <ferror@plt+0x10004>  // b.none
  412fc4:	ldr	x0, [sp, #32]
  412fc8:	ldrb	w0, [x0]
  412fcc:	cmp	w0, #0x0
  412fd0:	b.eq	413004 <ferror@plt+0x10004>  // b.none
  412fd4:	add	x0, sp, #0x10
  412fd8:	mov	w2, #0xa                   	// #10
  412fdc:	mov	x1, x0
  412fe0:	ldr	x0, [sp, #32]
  412fe4:	bl	402cf0 <strtol@plt>
  412fe8:	str	x0, [sp, #24]
  412fec:	ldr	x0, [sp, #16]
  412ff0:	ldrb	w0, [x0]
  412ff4:	cmp	w0, #0x0
  412ff8:	b.ne	413004 <ferror@plt+0x10004>  // b.any
  412ffc:	ldr	x0, [sp, #24]
  413000:	str	x0, [sp, #40]
  413004:	ldr	x1, [sp, #40]
  413008:	mov	x0, #0xffffffff80000000    	// #-2147483648
  41300c:	cmp	x1, x0
  413010:	b.lt	413030 <ferror@plt+0x10030>  // b.tstop
  413014:	ldr	x3, [sp, #40]
  413018:	mov	x2, #0x7fffffff            	// #2147483647
  41301c:	ldr	x1, [sp, #40]
  413020:	mov	x0, #0x7fffffff            	// #2147483647
  413024:	cmp	x3, x2
  413028:	csel	x0, x1, x0, le
  41302c:	b	413034 <ferror@plt+0x10034>
  413030:	mov	w0, #0x80000000            	// #-2147483648
  413034:	ldp	x29, x30, [sp], #48
  413038:	ret
  41303c:	stp	x29, x30, [sp, #-48]!
  413040:	mov	x29, sp
  413044:	str	x0, [sp, #24]
  413048:	ldr	x0, [sp, #24]
  41304c:	cmp	x0, #0x0
  413050:	b.ne	41307c <ferror@plt+0x1007c>  // b.any
  413054:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  413058:	add	x0, x0, #0x558
  41305c:	ldr	x0, [x0]
  413060:	mov	x3, x0
  413064:	mov	x2, #0x37                  	// #55
  413068:	mov	x1, #0x1                   	// #1
  41306c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  413070:	add	x0, x0, #0x5d8
  413074:	bl	402d90 <fwrite@plt>
  413078:	bl	402c20 <abort@plt>
  41307c:	mov	w1, #0x2f                  	// #47
  413080:	ldr	x0, [sp, #24]
  413084:	bl	402bc0 <strrchr@plt>
  413088:	str	x0, [sp, #40]
  41308c:	ldr	x0, [sp, #40]
  413090:	cmp	x0, #0x0
  413094:	b.eq	4130a4 <ferror@plt+0x100a4>  // b.none
  413098:	ldr	x0, [sp, #40]
  41309c:	add	x0, x0, #0x1
  4130a0:	b	4130a8 <ferror@plt+0x100a8>
  4130a4:	ldr	x0, [sp, #24]
  4130a8:	str	x0, [sp, #32]
  4130ac:	ldr	x1, [sp, #32]
  4130b0:	ldr	x0, [sp, #24]
  4130b4:	sub	x0, x1, x0
  4130b8:	cmp	x0, #0x6
  4130bc:	b.le	413124 <ferror@plt+0x10124>
  4130c0:	ldr	x0, [sp, #32]
  4130c4:	sub	x3, x0, #0x7
  4130c8:	mov	x2, #0x7                   	// #7
  4130cc:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4130d0:	add	x1, x0, #0x610
  4130d4:	mov	x0, x3
  4130d8:	bl	402af0 <strncmp@plt>
  4130dc:	cmp	w0, #0x0
  4130e0:	b.ne	413124 <ferror@plt+0x10124>  // b.any
  4130e4:	ldr	x0, [sp, #32]
  4130e8:	str	x0, [sp, #24]
  4130ec:	mov	x2, #0x3                   	// #3
  4130f0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4130f4:	add	x1, x0, #0x618
  4130f8:	ldr	x0, [sp, #32]
  4130fc:	bl	402af0 <strncmp@plt>
  413100:	cmp	w0, #0x0
  413104:	b.ne	413124 <ferror@plt+0x10124>  // b.any
  413108:	ldr	x0, [sp, #32]
  41310c:	add	x0, x0, #0x3
  413110:	str	x0, [sp, #24]
  413114:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  413118:	add	x0, x0, #0x580
  41311c:	ldr	x1, [sp, #24]
  413120:	str	x1, [x0]
  413124:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  413128:	add	x0, x0, #0xbe0
  41312c:	ldr	x1, [sp, #24]
  413130:	str	x1, [x0]
  413134:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  413138:	add	x0, x0, #0x550
  41313c:	ldr	x1, [sp, #24]
  413140:	str	x1, [x0]
  413144:	nop
  413148:	ldp	x29, x30, [sp], #48
  41314c:	ret
  413150:	stp	x29, x30, [sp, #-48]!
  413154:	mov	x29, sp
  413158:	str	x0, [sp, #24]
  41315c:	bl	402f50 <__errno_location@plt>
  413160:	ldr	w0, [x0]
  413164:	str	w0, [sp, #44]
  413168:	ldr	x0, [sp, #24]
  41316c:	cmp	x0, #0x0
  413170:	b.eq	41317c <ferror@plt+0x1017c>  // b.none
  413174:	ldr	x0, [sp, #24]
  413178:	b	413184 <ferror@plt+0x10184>
  41317c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  413180:	add	x0, x0, #0xbe8
  413184:	mov	x1, #0x38                  	// #56
  413188:	bl	418564 <ferror@plt+0x15564>
  41318c:	str	x0, [sp, #32]
  413190:	bl	402f50 <__errno_location@plt>
  413194:	mov	x1, x0
  413198:	ldr	w0, [sp, #44]
  41319c:	str	w0, [x1]
  4131a0:	ldr	x0, [sp, #32]
  4131a4:	ldp	x29, x30, [sp], #48
  4131a8:	ret
  4131ac:	sub	sp, sp, #0x10
  4131b0:	str	x0, [sp, #8]
  4131b4:	ldr	x0, [sp, #8]
  4131b8:	cmp	x0, #0x0
  4131bc:	b.eq	4131c8 <ferror@plt+0x101c8>  // b.none
  4131c0:	ldr	x0, [sp, #8]
  4131c4:	b	4131d0 <ferror@plt+0x101d0>
  4131c8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4131cc:	add	x0, x0, #0xbe8
  4131d0:	ldr	w0, [x0]
  4131d4:	add	sp, sp, #0x10
  4131d8:	ret
  4131dc:	sub	sp, sp, #0x10
  4131e0:	str	x0, [sp, #8]
  4131e4:	str	w1, [sp, #4]
  4131e8:	ldr	x0, [sp, #8]
  4131ec:	cmp	x0, #0x0
  4131f0:	b.eq	4131fc <ferror@plt+0x101fc>  // b.none
  4131f4:	ldr	x0, [sp, #8]
  4131f8:	b	413204 <ferror@plt+0x10204>
  4131fc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  413200:	add	x0, x0, #0xbe8
  413204:	ldr	w1, [sp, #4]
  413208:	str	w1, [x0]
  41320c:	nop
  413210:	add	sp, sp, #0x10
  413214:	ret
  413218:	sub	sp, sp, #0x30
  41321c:	str	x0, [sp, #8]
  413220:	strb	w1, [sp, #7]
  413224:	str	w2, [sp]
  413228:	ldrb	w0, [sp, #7]
  41322c:	strb	w0, [sp, #47]
  413230:	ldr	x0, [sp, #8]
  413234:	cmp	x0, #0x0
  413238:	b.eq	413244 <ferror@plt+0x10244>  // b.none
  41323c:	ldr	x0, [sp, #8]
  413240:	b	41324c <ferror@plt+0x1024c>
  413244:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  413248:	add	x0, x0, #0xbe8
  41324c:	add	x1, x0, #0x8
  413250:	ldrb	w0, [sp, #47]
  413254:	lsr	w0, w0, #5
  413258:	and	w0, w0, #0xff
  41325c:	and	x0, x0, #0xff
  413260:	lsl	x0, x0, #2
  413264:	add	x0, x1, x0
  413268:	str	x0, [sp, #32]
  41326c:	ldrb	w0, [sp, #47]
  413270:	and	w0, w0, #0x1f
  413274:	str	w0, [sp, #28]
  413278:	ldr	x0, [sp, #32]
  41327c:	ldr	w1, [x0]
  413280:	ldr	w0, [sp, #28]
  413284:	lsr	w0, w1, w0
  413288:	and	w0, w0, #0x1
  41328c:	str	w0, [sp, #24]
  413290:	ldr	x0, [sp, #32]
  413294:	ldr	w0, [x0]
  413298:	ldr	w1, [sp]
  41329c:	and	w2, w1, #0x1
  4132a0:	ldr	w1, [sp, #24]
  4132a4:	eor	w2, w2, w1
  4132a8:	ldr	w1, [sp, #28]
  4132ac:	lsl	w1, w2, w1
  4132b0:	eor	w1, w0, w1
  4132b4:	ldr	x0, [sp, #32]
  4132b8:	str	w1, [x0]
  4132bc:	ldr	w0, [sp, #24]
  4132c0:	add	sp, sp, #0x30
  4132c4:	ret
  4132c8:	sub	sp, sp, #0x20
  4132cc:	str	x0, [sp, #8]
  4132d0:	str	w1, [sp, #4]
  4132d4:	ldr	x0, [sp, #8]
  4132d8:	cmp	x0, #0x0
  4132dc:	b.ne	4132ec <ferror@plt+0x102ec>  // b.any
  4132e0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4132e4:	add	x0, x0, #0xbe8
  4132e8:	str	x0, [sp, #8]
  4132ec:	ldr	x0, [sp, #8]
  4132f0:	ldr	w0, [x0, #4]
  4132f4:	str	w0, [sp, #28]
  4132f8:	ldr	x0, [sp, #8]
  4132fc:	ldr	w1, [sp, #4]
  413300:	str	w1, [x0, #4]
  413304:	ldr	w0, [sp, #28]
  413308:	add	sp, sp, #0x20
  41330c:	ret
  413310:	stp	x29, x30, [sp, #-48]!
  413314:	mov	x29, sp
  413318:	str	x0, [sp, #40]
  41331c:	str	x1, [sp, #32]
  413320:	str	x2, [sp, #24]
  413324:	ldr	x0, [sp, #40]
  413328:	cmp	x0, #0x0
  41332c:	b.ne	41333c <ferror@plt+0x1033c>  // b.any
  413330:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  413334:	add	x0, x0, #0xbe8
  413338:	str	x0, [sp, #40]
  41333c:	ldr	x0, [sp, #40]
  413340:	mov	w1, #0xa                   	// #10
  413344:	str	w1, [x0]
  413348:	ldr	x0, [sp, #32]
  41334c:	cmp	x0, #0x0
  413350:	b.eq	413360 <ferror@plt+0x10360>  // b.none
  413354:	ldr	x0, [sp, #24]
  413358:	cmp	x0, #0x0
  41335c:	b.ne	413364 <ferror@plt+0x10364>  // b.any
  413360:	bl	402c20 <abort@plt>
  413364:	ldr	x0, [sp, #40]
  413368:	ldr	x1, [sp, #32]
  41336c:	str	x1, [x0, #40]
  413370:	ldr	x0, [sp, #40]
  413374:	ldr	x1, [sp, #24]
  413378:	str	x1, [x0, #48]
  41337c:	nop
  413380:	ldp	x29, x30, [sp], #48
  413384:	ret
  413388:	stp	x29, x30, [sp, #-96]!
  41338c:	mov	x29, sp
  413390:	mov	x1, x8
  413394:	str	w0, [sp, #28]
  413398:	stp	xzr, xzr, [sp, #40]
  41339c:	stp	xzr, xzr, [sp, #56]
  4133a0:	stp	xzr, xzr, [sp, #72]
  4133a4:	str	xzr, [sp, #88]
  4133a8:	ldr	w0, [sp, #28]
  4133ac:	cmp	w0, #0xa
  4133b0:	b.ne	4133b8 <ferror@plt+0x103b8>  // b.any
  4133b4:	bl	402c20 <abort@plt>
  4133b8:	ldr	w0, [sp, #28]
  4133bc:	str	w0, [sp, #40]
  4133c0:	add	x0, sp, #0x28
  4133c4:	ldp	x2, x3, [x0]
  4133c8:	stp	x2, x3, [x1]
  4133cc:	ldp	x2, x3, [x0, #16]
  4133d0:	stp	x2, x3, [x1, #16]
  4133d4:	ldp	x2, x3, [x0, #32]
  4133d8:	stp	x2, x3, [x1, #32]
  4133dc:	ldr	x0, [x0, #48]
  4133e0:	str	x0, [x1, #48]
  4133e4:	ldp	x29, x30, [sp], #96
  4133e8:	ret
  4133ec:	stp	x29, x30, [sp, #-48]!
  4133f0:	mov	x29, sp
  4133f4:	str	x0, [sp, #24]
  4133f8:	str	w1, [sp, #20]
  4133fc:	ldr	x0, [sp, #24]
  413400:	bl	402fd0 <gettext@plt>
  413404:	str	x0, [sp, #40]
  413408:	ldr	x1, [sp, #40]
  41340c:	ldr	x0, [sp, #24]
  413410:	cmp	x1, x0
  413414:	b.eq	413420 <ferror@plt+0x10420>  // b.none
  413418:	ldr	x0, [sp, #40]
  41341c:	b	4134c8 <ferror@plt+0x104c8>
  413420:	bl	41af70 <_obstack_memory_used@@Base+0xad4>
  413424:	str	x0, [sp, #32]
  413428:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  41342c:	add	x1, x0, #0x710
  413430:	ldr	x0, [sp, #32]
  413434:	bl	41ab04 <_obstack_memory_used@@Base+0x668>
  413438:	cmp	w0, #0x0
  41343c:	b.ne	413468 <ferror@plt+0x10468>  // b.any
  413440:	ldr	x0, [sp, #24]
  413444:	ldrb	w0, [x0]
  413448:	cmp	w0, #0x60
  41344c:	b.ne	41345c <ferror@plt+0x1045c>  // b.any
  413450:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  413454:	add	x0, x0, #0x718
  413458:	b	4134c8 <ferror@plt+0x104c8>
  41345c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  413460:	add	x0, x0, #0x720
  413464:	b	4134c8 <ferror@plt+0x104c8>
  413468:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  41346c:	add	x1, x0, #0x728
  413470:	ldr	x0, [sp, #32]
  413474:	bl	41ab04 <_obstack_memory_used@@Base+0x668>
  413478:	cmp	w0, #0x0
  41347c:	b.ne	4134a8 <ferror@plt+0x104a8>  // b.any
  413480:	ldr	x0, [sp, #24]
  413484:	ldrb	w0, [x0]
  413488:	cmp	w0, #0x60
  41348c:	b.ne	41349c <ferror@plt+0x1049c>  // b.any
  413490:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  413494:	add	x0, x0, #0x730
  413498:	b	4134c8 <ferror@plt+0x104c8>
  41349c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4134a0:	add	x0, x0, #0x738
  4134a4:	b	4134c8 <ferror@plt+0x104c8>
  4134a8:	ldr	w0, [sp, #20]
  4134ac:	cmp	w0, #0x9
  4134b0:	b.ne	4134c0 <ferror@plt+0x104c0>  // b.any
  4134b4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4134b8:	add	x0, x0, #0x740
  4134bc:	b	4134c8 <ferror@plt+0x104c8>
  4134c0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4134c4:	add	x0, x0, #0x748
  4134c8:	ldp	x29, x30, [sp], #48
  4134cc:	ret
  4134d0:	sub	sp, sp, #0xf0
  4134d4:	stp	x29, x30, [sp, #16]
  4134d8:	add	x29, sp, #0x10
  4134dc:	str	x19, [sp, #32]
  4134e0:	str	x0, [sp, #104]
  4134e4:	str	x1, [sp, #96]
  4134e8:	str	x2, [sp, #88]
  4134ec:	str	x3, [sp, #80]
  4134f0:	str	w4, [sp, #76]
  4134f4:	str	w5, [sp, #72]
  4134f8:	str	x6, [sp, #64]
  4134fc:	str	x7, [sp, #56]
  413500:	str	xzr, [sp, #224]
  413504:	str	xzr, [sp, #216]
  413508:	str	xzr, [sp, #208]
  41350c:	str	xzr, [sp, #200]
  413510:	strb	wzr, [sp, #199]
  413514:	bl	402d30 <__ctype_get_mb_cur_max@plt>
  413518:	cmp	x0, #0x1
  41351c:	cset	w0, eq  // eq = none
  413520:	strb	w0, [sp, #159]
  413524:	ldr	w0, [sp, #72]
  413528:	and	w0, w0, #0x2
  41352c:	cmp	w0, #0x0
  413530:	cset	w0, ne  // ne = any
  413534:	strb	w0, [sp, #198]
  413538:	strb	wzr, [sp, #197]
  41353c:	strb	wzr, [sp, #196]
  413540:	mov	w0, #0x1                   	// #1
  413544:	strb	w0, [sp, #195]
  413548:	ldr	w0, [sp, #76]
  41354c:	cmp	w0, #0xa
  413550:	b.hi	4137ec <ferror@plt+0x107ec>  // b.pmore
  413554:	ldr	w0, [sp, #76]
  413558:	cmp	w0, #0x8
  41355c:	b.cs	413690 <ferror@plt+0x10690>  // b.hs, b.nlast
  413560:	ldr	w0, [sp, #76]
  413564:	cmp	w0, #0x7
  413568:	b.eq	413680 <ferror@plt+0x10680>  // b.none
  41356c:	ldr	w0, [sp, #76]
  413570:	cmp	w0, #0x7
  413574:	b.hi	4137ec <ferror@plt+0x107ec>  // b.pmore
  413578:	ldr	w0, [sp, #76]
  41357c:	cmp	w0, #0x6
  413580:	b.eq	41360c <ferror@plt+0x1060c>  // b.none
  413584:	ldr	w0, [sp, #76]
  413588:	cmp	w0, #0x6
  41358c:	b.hi	4137ec <ferror@plt+0x107ec>  // b.pmore
  413590:	ldr	w0, [sp, #76]
  413594:	cmp	w0, #0x5
  413598:	b.eq	41361c <ferror@plt+0x1061c>  // b.none
  41359c:	ldr	w0, [sp, #76]
  4135a0:	cmp	w0, #0x5
  4135a4:	b.hi	4137ec <ferror@plt+0x107ec>  // b.pmore
  4135a8:	ldr	w0, [sp, #76]
  4135ac:	cmp	w0, #0x4
  4135b0:	b.eq	413764 <ferror@plt+0x10764>  // b.none
  4135b4:	ldr	w0, [sp, #76]
  4135b8:	cmp	w0, #0x4
  4135bc:	b.hi	4137ec <ferror@plt+0x107ec>  // b.pmore
  4135c0:	ldr	w0, [sp, #76]
  4135c4:	cmp	w0, #0x3
  4135c8:	b.eq	413754 <ferror@plt+0x10754>  // b.none
  4135cc:	ldr	w0, [sp, #76]
  4135d0:	cmp	w0, #0x3
  4135d4:	b.hi	4137ec <ferror@plt+0x107ec>  // b.pmore
  4135d8:	ldr	w0, [sp, #76]
  4135dc:	cmp	w0, #0x2
  4135e0:	b.eq	413780 <ferror@plt+0x10780>  // b.none
  4135e4:	ldr	w0, [sp, #76]
  4135e8:	cmp	w0, #0x2
  4135ec:	b.hi	4137ec <ferror@plt+0x107ec>  // b.pmore
  4135f0:	ldr	w0, [sp, #76]
  4135f4:	cmp	w0, #0x0
  4135f8:	b.eq	4137e4 <ferror@plt+0x107e4>  // b.none
  4135fc:	ldr	w0, [sp, #76]
  413600:	cmp	w0, #0x1
  413604:	b.eq	41375c <ferror@plt+0x1075c>  // b.none
  413608:	b	4137ec <ferror@plt+0x107ec>
  41360c:	mov	w0, #0x5                   	// #5
  413610:	str	w0, [sp, #76]
  413614:	mov	w0, #0x1                   	// #1
  413618:	strb	w0, [sp, #198]
  41361c:	ldrb	w0, [sp, #198]
  413620:	eor	w0, w0, #0x1
  413624:	and	w0, w0, #0xff
  413628:	cmp	w0, #0x0
  41362c:	b.eq	413660 <ferror@plt+0x10660>  // b.none
  413630:	ldr	x1, [sp, #224]
  413634:	ldr	x0, [sp, #96]
  413638:	cmp	x1, x0
  41363c:	b.cs	413654 <ferror@plt+0x10654>  // b.hs, b.nlast
  413640:	ldr	x1, [sp, #104]
  413644:	ldr	x0, [sp, #224]
  413648:	add	x0, x1, x0
  41364c:	mov	w1, #0x22                  	// #34
  413650:	strb	w1, [x0]
  413654:	ldr	x0, [sp, #224]
  413658:	add	x0, x0, #0x1
  41365c:	str	x0, [sp, #224]
  413660:	mov	w0, #0x1                   	// #1
  413664:	strb	w0, [sp, #199]
  413668:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  41366c:	add	x0, x0, #0x740
  413670:	str	x0, [sp, #208]
  413674:	mov	x0, #0x1                   	// #1
  413678:	str	x0, [sp, #200]
  41367c:	b	4137f0 <ferror@plt+0x107f0>
  413680:	mov	w0, #0x1                   	// #1
  413684:	strb	w0, [sp, #199]
  413688:	strb	wzr, [sp, #198]
  41368c:	b	4137f0 <ferror@plt+0x107f0>
  413690:	ldr	w0, [sp, #76]
  413694:	cmp	w0, #0xa
  413698:	b.eq	4136c4 <ferror@plt+0x106c4>  // b.none
  41369c:	ldr	w1, [sp, #76]
  4136a0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4136a4:	add	x0, x0, #0x750
  4136a8:	bl	4133ec <ferror@plt+0x103ec>
  4136ac:	str	x0, [sp, #56]
  4136b0:	ldr	w1, [sp, #76]
  4136b4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4136b8:	add	x0, x0, #0x748
  4136bc:	bl	4133ec <ferror@plt+0x103ec>
  4136c0:	str	x0, [sp, #240]
  4136c4:	ldrb	w0, [sp, #198]
  4136c8:	eor	w0, w0, #0x1
  4136cc:	and	w0, w0, #0xff
  4136d0:	cmp	w0, #0x0
  4136d4:	b.eq	413734 <ferror@plt+0x10734>  // b.none
  4136d8:	ldr	x0, [sp, #56]
  4136dc:	str	x0, [sp, #208]
  4136e0:	b	413724 <ferror@plt+0x10724>
  4136e4:	ldr	x1, [sp, #224]
  4136e8:	ldr	x0, [sp, #96]
  4136ec:	cmp	x1, x0
  4136f0:	b.cs	41370c <ferror@plt+0x1070c>  // b.hs, b.nlast
  4136f4:	ldr	x1, [sp, #104]
  4136f8:	ldr	x0, [sp, #224]
  4136fc:	add	x0, x1, x0
  413700:	ldr	x1, [sp, #208]
  413704:	ldrb	w1, [x1]
  413708:	strb	w1, [x0]
  41370c:	ldr	x0, [sp, #224]
  413710:	add	x0, x0, #0x1
  413714:	str	x0, [sp, #224]
  413718:	ldr	x0, [sp, #208]
  41371c:	add	x0, x0, #0x1
  413720:	str	x0, [sp, #208]
  413724:	ldr	x0, [sp, #208]
  413728:	ldrb	w0, [x0]
  41372c:	cmp	w0, #0x0
  413730:	b.ne	4136e4 <ferror@plt+0x106e4>  // b.any
  413734:	mov	w0, #0x1                   	// #1
  413738:	strb	w0, [sp, #199]
  41373c:	ldr	x0, [sp, #240]
  413740:	str	x0, [sp, #208]
  413744:	ldr	x0, [sp, #208]
  413748:	bl	4028f0 <strlen@plt>
  41374c:	str	x0, [sp, #200]
  413750:	b	4137f0 <ferror@plt+0x107f0>
  413754:	mov	w0, #0x1                   	// #1
  413758:	strb	w0, [sp, #199]
  41375c:	mov	w0, #0x1                   	// #1
  413760:	strb	w0, [sp, #198]
  413764:	ldrb	w0, [sp, #198]
  413768:	eor	w0, w0, #0x1
  41376c:	and	w0, w0, #0xff
  413770:	cmp	w0, #0x0
  413774:	b.eq	413780 <ferror@plt+0x10780>  // b.none
  413778:	mov	w0, #0x1                   	// #1
  41377c:	strb	w0, [sp, #199]
  413780:	mov	w0, #0x2                   	// #2
  413784:	str	w0, [sp, #76]
  413788:	ldrb	w0, [sp, #198]
  41378c:	eor	w0, w0, #0x1
  413790:	and	w0, w0, #0xff
  413794:	cmp	w0, #0x0
  413798:	b.eq	4137cc <ferror@plt+0x107cc>  // b.none
  41379c:	ldr	x1, [sp, #224]
  4137a0:	ldr	x0, [sp, #96]
  4137a4:	cmp	x1, x0
  4137a8:	b.cs	4137c0 <ferror@plt+0x107c0>  // b.hs, b.nlast
  4137ac:	ldr	x1, [sp, #104]
  4137b0:	ldr	x0, [sp, #224]
  4137b4:	add	x0, x1, x0
  4137b8:	mov	w1, #0x27                  	// #39
  4137bc:	strb	w1, [x0]
  4137c0:	ldr	x0, [sp, #224]
  4137c4:	add	x0, x0, #0x1
  4137c8:	str	x0, [sp, #224]
  4137cc:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4137d0:	add	x0, x0, #0x748
  4137d4:	str	x0, [sp, #208]
  4137d8:	mov	x0, #0x1                   	// #1
  4137dc:	str	x0, [sp, #200]
  4137e0:	b	4137f0 <ferror@plt+0x107f0>
  4137e4:	strb	wzr, [sp, #198]
  4137e8:	b	4137f0 <ferror@plt+0x107f0>
  4137ec:	bl	402c20 <abort@plt>
  4137f0:	str	xzr, [sp, #232]
  4137f4:	b	4146ac <ferror@plt+0x116ac>
  4137f8:	strb	wzr, [sp, #192]
  4137fc:	strb	wzr, [sp, #191]
  413800:	strb	wzr, [sp, #190]
  413804:	ldrb	w0, [sp, #199]
  413808:	cmp	w0, #0x0
  41380c:	b.eq	4138a0 <ferror@plt+0x108a0>  // b.none
  413810:	ldr	w0, [sp, #76]
  413814:	cmp	w0, #0x2
  413818:	b.eq	4138a0 <ferror@plt+0x108a0>  // b.none
  41381c:	ldr	x0, [sp, #200]
  413820:	cmp	x0, #0x0
  413824:	b.eq	4138a0 <ferror@plt+0x108a0>  // b.none
  413828:	ldr	x1, [sp, #232]
  41382c:	ldr	x0, [sp, #200]
  413830:	add	x19, x1, x0
  413834:	ldr	x0, [sp, #80]
  413838:	cmn	x0, #0x1
  41383c:	b.ne	413860 <ferror@plt+0x10860>  // b.any
  413840:	ldr	x0, [sp, #200]
  413844:	cmp	x0, #0x1
  413848:	b.ls	413860 <ferror@plt+0x10860>  // b.plast
  41384c:	ldr	x0, [sp, #88]
  413850:	bl	4028f0 <strlen@plt>
  413854:	str	x0, [sp, #80]
  413858:	ldr	x0, [sp, #80]
  41385c:	b	413864 <ferror@plt+0x10864>
  413860:	ldr	x0, [sp, #80]
  413864:	cmp	x0, x19
  413868:	b.cc	4138a0 <ferror@plt+0x108a0>  // b.lo, b.ul, b.last
  41386c:	ldr	x1, [sp, #88]
  413870:	ldr	x0, [sp, #232]
  413874:	add	x0, x1, x0
  413878:	ldr	x2, [sp, #200]
  41387c:	ldr	x1, [sp, #208]
  413880:	bl	402c90 <memcmp@plt>
  413884:	cmp	w0, #0x0
  413888:	b.ne	4138a0 <ferror@plt+0x108a0>  // b.any
  41388c:	ldrb	w0, [sp, #198]
  413890:	cmp	w0, #0x0
  413894:	b.ne	414844 <ferror@plt+0x11844>  // b.any
  413898:	mov	w0, #0x1                   	// #1
  41389c:	strb	w0, [sp, #192]
  4138a0:	ldr	x1, [sp, #88]
  4138a4:	ldr	x0, [sp, #232]
  4138a8:	add	x0, x1, x0
  4138ac:	ldrb	w0, [x0]
  4138b0:	strb	w0, [sp, #194]
  4138b4:	ldrb	w0, [sp, #194]
  4138b8:	cmp	w0, #0x7e
  4138bc:	b.hi	413eb4 <ferror@plt+0x10eb4>  // b.pmore
  4138c0:	adrp	x1, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4138c4:	add	x1, x1, #0x754
  4138c8:	ldr	w0, [x1, w0, uxtw #2]
  4138cc:	adr	x1, 4138d8 <ferror@plt+0x108d8>
  4138d0:	add	x0, x1, w0, sxtw #2
  4138d4:	br	x0
  4138d8:	ldrb	w0, [sp, #199]
  4138dc:	cmp	w0, #0x0
  4138e0:	b.eq	413aa4 <ferror@plt+0x10aa4>  // b.none
  4138e4:	ldrb	w0, [sp, #198]
  4138e8:	cmp	w0, #0x0
  4138ec:	b.ne	41484c <ferror@plt+0x1184c>  // b.any
  4138f0:	mov	w0, #0x1                   	// #1
  4138f4:	strb	w0, [sp, #191]
  4138f8:	ldr	w0, [sp, #76]
  4138fc:	cmp	w0, #0x2
  413900:	b.ne	4139b0 <ferror@plt+0x109b0>  // b.any
  413904:	ldrb	w0, [sp, #197]
  413908:	eor	w0, w0, #0x1
  41390c:	and	w0, w0, #0xff
  413910:	cmp	w0, #0x0
  413914:	b.eq	4139b0 <ferror@plt+0x109b0>  // b.none
  413918:	ldr	x1, [sp, #224]
  41391c:	ldr	x0, [sp, #96]
  413920:	cmp	x1, x0
  413924:	b.cs	41393c <ferror@plt+0x1093c>  // b.hs, b.nlast
  413928:	ldr	x1, [sp, #104]
  41392c:	ldr	x0, [sp, #224]
  413930:	add	x0, x1, x0
  413934:	mov	w1, #0x27                  	// #39
  413938:	strb	w1, [x0]
  41393c:	ldr	x0, [sp, #224]
  413940:	add	x0, x0, #0x1
  413944:	str	x0, [sp, #224]
  413948:	ldr	x1, [sp, #224]
  41394c:	ldr	x0, [sp, #96]
  413950:	cmp	x1, x0
  413954:	b.cs	41396c <ferror@plt+0x1096c>  // b.hs, b.nlast
  413958:	ldr	x1, [sp, #104]
  41395c:	ldr	x0, [sp, #224]
  413960:	add	x0, x1, x0
  413964:	mov	w1, #0x24                  	// #36
  413968:	strb	w1, [x0]
  41396c:	ldr	x0, [sp, #224]
  413970:	add	x0, x0, #0x1
  413974:	str	x0, [sp, #224]
  413978:	ldr	x1, [sp, #224]
  41397c:	ldr	x0, [sp, #96]
  413980:	cmp	x1, x0
  413984:	b.cs	41399c <ferror@plt+0x1099c>  // b.hs, b.nlast
  413988:	ldr	x1, [sp, #104]
  41398c:	ldr	x0, [sp, #224]
  413990:	add	x0, x1, x0
  413994:	mov	w1, #0x27                  	// #39
  413998:	strb	w1, [x0]
  41399c:	ldr	x0, [sp, #224]
  4139a0:	add	x0, x0, #0x1
  4139a4:	str	x0, [sp, #224]
  4139a8:	mov	w0, #0x1                   	// #1
  4139ac:	strb	w0, [sp, #197]
  4139b0:	ldr	x1, [sp, #224]
  4139b4:	ldr	x0, [sp, #96]
  4139b8:	cmp	x1, x0
  4139bc:	b.cs	4139d4 <ferror@plt+0x109d4>  // b.hs, b.nlast
  4139c0:	ldr	x1, [sp, #104]
  4139c4:	ldr	x0, [sp, #224]
  4139c8:	add	x0, x1, x0
  4139cc:	mov	w1, #0x5c                  	// #92
  4139d0:	strb	w1, [x0]
  4139d4:	ldr	x0, [sp, #224]
  4139d8:	add	x0, x0, #0x1
  4139dc:	str	x0, [sp, #224]
  4139e0:	ldr	w0, [sp, #76]
  4139e4:	cmp	w0, #0x2
  4139e8:	b.eq	413a98 <ferror@plt+0x10a98>  // b.none
  4139ec:	ldr	x0, [sp, #232]
  4139f0:	add	x0, x0, #0x1
  4139f4:	ldr	x1, [sp, #80]
  4139f8:	cmp	x1, x0
  4139fc:	b.ls	413a98 <ferror@plt+0x10a98>  // b.plast
  413a00:	ldr	x0, [sp, #232]
  413a04:	add	x0, x0, #0x1
  413a08:	ldr	x1, [sp, #88]
  413a0c:	add	x0, x1, x0
  413a10:	ldrb	w0, [x0]
  413a14:	cmp	w0, #0x2f
  413a18:	b.ls	413a98 <ferror@plt+0x10a98>  // b.plast
  413a1c:	ldr	x0, [sp, #232]
  413a20:	add	x0, x0, #0x1
  413a24:	ldr	x1, [sp, #88]
  413a28:	add	x0, x1, x0
  413a2c:	ldrb	w0, [x0]
  413a30:	cmp	w0, #0x39
  413a34:	b.hi	413a98 <ferror@plt+0x10a98>  // b.pmore
  413a38:	ldr	x1, [sp, #224]
  413a3c:	ldr	x0, [sp, #96]
  413a40:	cmp	x1, x0
  413a44:	b.cs	413a5c <ferror@plt+0x10a5c>  // b.hs, b.nlast
  413a48:	ldr	x1, [sp, #104]
  413a4c:	ldr	x0, [sp, #224]
  413a50:	add	x0, x1, x0
  413a54:	mov	w1, #0x30                  	// #48
  413a58:	strb	w1, [x0]
  413a5c:	ldr	x0, [sp, #224]
  413a60:	add	x0, x0, #0x1
  413a64:	str	x0, [sp, #224]
  413a68:	ldr	x1, [sp, #224]
  413a6c:	ldr	x0, [sp, #96]
  413a70:	cmp	x1, x0
  413a74:	b.cs	413a8c <ferror@plt+0x10a8c>  // b.hs, b.nlast
  413a78:	ldr	x1, [sp, #104]
  413a7c:	ldr	x0, [sp, #224]
  413a80:	add	x0, x1, x0
  413a84:	mov	w1, #0x30                  	// #48
  413a88:	strb	w1, [x0]
  413a8c:	ldr	x0, [sp, #224]
  413a90:	add	x0, x0, #0x1
  413a94:	str	x0, [sp, #224]
  413a98:	mov	w0, #0x30                  	// #48
  413a9c:	strb	w0, [sp, #194]
  413aa0:	b	414404 <ferror@plt+0x11404>
  413aa4:	ldr	w0, [sp, #72]
  413aa8:	and	w0, w0, #0x1
  413aac:	cmp	w0, #0x0
  413ab0:	b.eq	414404 <ferror@plt+0x11404>  // b.none
  413ab4:	b	4146a0 <ferror@plt+0x116a0>
  413ab8:	ldr	w0, [sp, #76]
  413abc:	cmp	w0, #0x2
  413ac0:	b.eq	413ad4 <ferror@plt+0x10ad4>  // b.none
  413ac4:	ldr	w0, [sp, #76]
  413ac8:	cmp	w0, #0x5
  413acc:	b.eq	413ae4 <ferror@plt+0x10ae4>  // b.none
  413ad0:	b	413c7c <ferror@plt+0x10c7c>
  413ad4:	ldrb	w0, [sp, #198]
  413ad8:	cmp	w0, #0x0
  413adc:	b.eq	413c70 <ferror@plt+0x10c70>  // b.none
  413ae0:	b	414880 <ferror@plt+0x11880>
  413ae4:	ldr	w0, [sp, #72]
  413ae8:	and	w0, w0, #0x4
  413aec:	cmp	w0, #0x0
  413af0:	b.eq	413c78 <ferror@plt+0x10c78>  // b.none
  413af4:	ldr	x0, [sp, #232]
  413af8:	add	x0, x0, #0x2
  413afc:	ldr	x1, [sp, #80]
  413b00:	cmp	x1, x0
  413b04:	b.ls	413c78 <ferror@plt+0x10c78>  // b.plast
  413b08:	ldr	x0, [sp, #232]
  413b0c:	add	x0, x0, #0x1
  413b10:	ldr	x1, [sp, #88]
  413b14:	add	x0, x1, x0
  413b18:	ldrb	w0, [x0]
  413b1c:	cmp	w0, #0x3f
  413b20:	b.ne	413c78 <ferror@plt+0x10c78>  // b.any
  413b24:	ldr	x0, [sp, #232]
  413b28:	add	x0, x0, #0x2
  413b2c:	ldr	x1, [sp, #88]
  413b30:	add	x0, x1, x0
  413b34:	ldrb	w0, [x0]
  413b38:	cmp	w0, #0x3e
  413b3c:	cset	w1, hi  // hi = pmore
  413b40:	and	w1, w1, #0xff
  413b44:	cmp	w1, #0x0
  413b48:	b.ne	413c68 <ferror@plt+0x10c68>  // b.any
  413b4c:	mov	x1, #0x1                   	// #1
  413b50:	lsl	x1, x1, x0
  413b54:	mov	x0, #0xa38200000000        	// #179778741075968
  413b58:	movk	x0, #0x7000, lsl #48
  413b5c:	and	x0, x1, x0
  413b60:	cmp	x0, #0x0
  413b64:	cset	w0, ne  // ne = any
  413b68:	and	w0, w0, #0xff
  413b6c:	cmp	w0, #0x0
  413b70:	b.eq	413c68 <ferror@plt+0x10c68>  // b.none
  413b74:	ldrb	w0, [sp, #198]
  413b78:	cmp	w0, #0x0
  413b7c:	b.ne	414854 <ferror@plt+0x11854>  // b.any
  413b80:	ldr	x0, [sp, #232]
  413b84:	add	x0, x0, #0x2
  413b88:	ldr	x1, [sp, #88]
  413b8c:	add	x0, x1, x0
  413b90:	ldrb	w0, [x0]
  413b94:	strb	w0, [sp, #194]
  413b98:	ldr	x0, [sp, #232]
  413b9c:	add	x0, x0, #0x2
  413ba0:	str	x0, [sp, #232]
  413ba4:	ldr	x1, [sp, #224]
  413ba8:	ldr	x0, [sp, #96]
  413bac:	cmp	x1, x0
  413bb0:	b.cs	413bc8 <ferror@plt+0x10bc8>  // b.hs, b.nlast
  413bb4:	ldr	x1, [sp, #104]
  413bb8:	ldr	x0, [sp, #224]
  413bbc:	add	x0, x1, x0
  413bc0:	mov	w1, #0x3f                  	// #63
  413bc4:	strb	w1, [x0]
  413bc8:	ldr	x0, [sp, #224]
  413bcc:	add	x0, x0, #0x1
  413bd0:	str	x0, [sp, #224]
  413bd4:	ldr	x1, [sp, #224]
  413bd8:	ldr	x0, [sp, #96]
  413bdc:	cmp	x1, x0
  413be0:	b.cs	413bf8 <ferror@plt+0x10bf8>  // b.hs, b.nlast
  413be4:	ldr	x1, [sp, #104]
  413be8:	ldr	x0, [sp, #224]
  413bec:	add	x0, x1, x0
  413bf0:	mov	w1, #0x22                  	// #34
  413bf4:	strb	w1, [x0]
  413bf8:	ldr	x0, [sp, #224]
  413bfc:	add	x0, x0, #0x1
  413c00:	str	x0, [sp, #224]
  413c04:	ldr	x1, [sp, #224]
  413c08:	ldr	x0, [sp, #96]
  413c0c:	cmp	x1, x0
  413c10:	b.cs	413c28 <ferror@plt+0x10c28>  // b.hs, b.nlast
  413c14:	ldr	x1, [sp, #104]
  413c18:	ldr	x0, [sp, #224]
  413c1c:	add	x0, x1, x0
  413c20:	mov	w1, #0x22                  	// #34
  413c24:	strb	w1, [x0]
  413c28:	ldr	x0, [sp, #224]
  413c2c:	add	x0, x0, #0x1
  413c30:	str	x0, [sp, #224]
  413c34:	ldr	x1, [sp, #224]
  413c38:	ldr	x0, [sp, #96]
  413c3c:	cmp	x1, x0
  413c40:	b.cs	413c58 <ferror@plt+0x10c58>  // b.hs, b.nlast
  413c44:	ldr	x1, [sp, #104]
  413c48:	ldr	x0, [sp, #224]
  413c4c:	add	x0, x1, x0
  413c50:	mov	w1, #0x3f                  	// #63
  413c54:	strb	w1, [x0]
  413c58:	ldr	x0, [sp, #224]
  413c5c:	add	x0, x0, #0x1
  413c60:	str	x0, [sp, #224]
  413c64:	b	413c6c <ferror@plt+0x10c6c>
  413c68:	nop
  413c6c:	b	413c78 <ferror@plt+0x10c78>
  413c70:	nop
  413c74:	b	414430 <ferror@plt+0x11430>
  413c78:	nop
  413c7c:	b	414430 <ferror@plt+0x11430>
  413c80:	mov	w0, #0x61                  	// #97
  413c84:	strb	w0, [sp, #193]
  413c88:	b	413d3c <ferror@plt+0x10d3c>
  413c8c:	mov	w0, #0x62                  	// #98
  413c90:	strb	w0, [sp, #193]
  413c94:	b	413d3c <ferror@plt+0x10d3c>
  413c98:	mov	w0, #0x66                  	// #102
  413c9c:	strb	w0, [sp, #193]
  413ca0:	b	413d3c <ferror@plt+0x10d3c>
  413ca4:	mov	w0, #0x6e                  	// #110
  413ca8:	strb	w0, [sp, #193]
  413cac:	b	413d20 <ferror@plt+0x10d20>
  413cb0:	mov	w0, #0x72                  	// #114
  413cb4:	strb	w0, [sp, #193]
  413cb8:	b	413d20 <ferror@plt+0x10d20>
  413cbc:	mov	w0, #0x74                  	// #116
  413cc0:	strb	w0, [sp, #193]
  413cc4:	b	413d20 <ferror@plt+0x10d20>
  413cc8:	mov	w0, #0x76                  	// #118
  413ccc:	strb	w0, [sp, #193]
  413cd0:	b	413d3c <ferror@plt+0x10d3c>
  413cd4:	ldrb	w0, [sp, #194]
  413cd8:	strb	w0, [sp, #193]
  413cdc:	ldr	w0, [sp, #76]
  413ce0:	cmp	w0, #0x2
  413ce4:	b.ne	413cf8 <ferror@plt+0x10cf8>  // b.any
  413ce8:	ldrb	w0, [sp, #198]
  413cec:	cmp	w0, #0x0
  413cf0:	b.eq	4145c0 <ferror@plt+0x115c0>  // b.none
  413cf4:	b	414880 <ferror@plt+0x11880>
  413cf8:	ldrb	w0, [sp, #199]
  413cfc:	cmp	w0, #0x0
  413d00:	b.eq	413d1c <ferror@plt+0x10d1c>  // b.none
  413d04:	ldrb	w0, [sp, #198]
  413d08:	cmp	w0, #0x0
  413d0c:	b.eq	413d1c <ferror@plt+0x10d1c>  // b.none
  413d10:	ldr	x0, [sp, #200]
  413d14:	cmp	x0, #0x0
  413d18:	b.ne	4145c8 <ferror@plt+0x115c8>  // b.any
  413d1c:	nop
  413d20:	ldr	w0, [sp, #76]
  413d24:	cmp	w0, #0x2
  413d28:	b.ne	413d38 <ferror@plt+0x10d38>  // b.any
  413d2c:	ldrb	w0, [sp, #198]
  413d30:	cmp	w0, #0x0
  413d34:	b.ne	41485c <ferror@plt+0x1185c>  // b.any
  413d38:	nop
  413d3c:	ldrb	w0, [sp, #199]
  413d40:	cmp	w0, #0x0
  413d44:	b.eq	41440c <ferror@plt+0x1140c>  // b.none
  413d48:	ldrb	w0, [sp, #193]
  413d4c:	strb	w0, [sp, #194]
  413d50:	b	4144c0 <ferror@plt+0x114c0>
  413d54:	ldr	x0, [sp, #80]
  413d58:	cmn	x0, #0x1
  413d5c:	b.ne	413d7c <ferror@plt+0x10d7c>  // b.any
  413d60:	ldr	x0, [sp, #88]
  413d64:	add	x0, x0, #0x1
  413d68:	ldrb	w0, [x0]
  413d6c:	cmp	w0, #0x0
  413d70:	cset	w0, ne  // ne = any
  413d74:	and	w0, w0, #0xff
  413d78:	b	413d8c <ferror@plt+0x10d8c>
  413d7c:	ldr	x0, [sp, #80]
  413d80:	cmp	x0, #0x1
  413d84:	cset	w0, ne  // ne = any
  413d88:	and	w0, w0, #0xff
  413d8c:	cmp	w0, #0x0
  413d90:	b.ne	414414 <ferror@plt+0x11414>  // b.any
  413d94:	ldr	x0, [sp, #232]
  413d98:	cmp	x0, #0x0
  413d9c:	b.ne	41441c <ferror@plt+0x1141c>  // b.any
  413da0:	mov	w0, #0x1                   	// #1
  413da4:	strb	w0, [sp, #190]
  413da8:	ldr	w0, [sp, #76]
  413dac:	cmp	w0, #0x2
  413db0:	b.ne	414424 <ferror@plt+0x11424>  // b.any
  413db4:	ldrb	w0, [sp, #198]
  413db8:	cmp	w0, #0x0
  413dbc:	b.eq	414424 <ferror@plt+0x11424>  // b.none
  413dc0:	b	414880 <ferror@plt+0x11880>
  413dc4:	mov	w0, #0x1                   	// #1
  413dc8:	strb	w0, [sp, #196]
  413dcc:	mov	w0, #0x1                   	// #1
  413dd0:	strb	w0, [sp, #190]
  413dd4:	ldr	w0, [sp, #76]
  413dd8:	cmp	w0, #0x2
  413ddc:	b.ne	41442c <ferror@plt+0x1142c>  // b.any
  413de0:	ldrb	w0, [sp, #198]
  413de4:	cmp	w0, #0x0
  413de8:	b.ne	414864 <ferror@plt+0x11864>  // b.any
  413dec:	ldr	x0, [sp, #96]
  413df0:	cmp	x0, #0x0
  413df4:	b.eq	413e10 <ferror@plt+0x10e10>  // b.none
  413df8:	ldr	x0, [sp, #216]
  413dfc:	cmp	x0, #0x0
  413e00:	b.ne	413e10 <ferror@plt+0x10e10>  // b.any
  413e04:	ldr	x0, [sp, #96]
  413e08:	str	x0, [sp, #216]
  413e0c:	str	xzr, [sp, #96]
  413e10:	ldr	x1, [sp, #224]
  413e14:	ldr	x0, [sp, #96]
  413e18:	cmp	x1, x0
  413e1c:	b.cs	413e34 <ferror@plt+0x10e34>  // b.hs, b.nlast
  413e20:	ldr	x1, [sp, #104]
  413e24:	ldr	x0, [sp, #224]
  413e28:	add	x0, x1, x0
  413e2c:	mov	w1, #0x27                  	// #39
  413e30:	strb	w1, [x0]
  413e34:	ldr	x0, [sp, #224]
  413e38:	add	x0, x0, #0x1
  413e3c:	str	x0, [sp, #224]
  413e40:	ldr	x1, [sp, #224]
  413e44:	ldr	x0, [sp, #96]
  413e48:	cmp	x1, x0
  413e4c:	b.cs	413e64 <ferror@plt+0x10e64>  // b.hs, b.nlast
  413e50:	ldr	x1, [sp, #104]
  413e54:	ldr	x0, [sp, #224]
  413e58:	add	x0, x1, x0
  413e5c:	mov	w1, #0x5c                  	// #92
  413e60:	strb	w1, [x0]
  413e64:	ldr	x0, [sp, #224]
  413e68:	add	x0, x0, #0x1
  413e6c:	str	x0, [sp, #224]
  413e70:	ldr	x1, [sp, #224]
  413e74:	ldr	x0, [sp, #96]
  413e78:	cmp	x1, x0
  413e7c:	b.cs	413e94 <ferror@plt+0x10e94>  // b.hs, b.nlast
  413e80:	ldr	x1, [sp, #104]
  413e84:	ldr	x0, [sp, #224]
  413e88:	add	x0, x1, x0
  413e8c:	mov	w1, #0x27                  	// #39
  413e90:	strb	w1, [x0]
  413e94:	ldr	x0, [sp, #224]
  413e98:	add	x0, x0, #0x1
  413e9c:	str	x0, [sp, #224]
  413ea0:	strb	wzr, [sp, #197]
  413ea4:	b	41442c <ferror@plt+0x1142c>
  413ea8:	mov	w0, #0x1                   	// #1
  413eac:	strb	w0, [sp, #190]
  413eb0:	b	414430 <ferror@plt+0x11430>
  413eb4:	ldrb	w0, [sp, #159]
  413eb8:	cmp	w0, #0x0
  413ebc:	b.eq	413ef4 <ferror@plt+0x10ef4>  // b.none
  413ec0:	mov	x0, #0x1                   	// #1
  413ec4:	str	x0, [sp, #176]
  413ec8:	bl	402ce0 <__ctype_b_loc@plt>
  413ecc:	ldr	x1, [x0]
  413ed0:	ldrb	w0, [sp, #194]
  413ed4:	lsl	x0, x0, #1
  413ed8:	add	x0, x1, x0
  413edc:	ldrh	w0, [x0]
  413ee0:	and	w0, w0, #0x4000
  413ee4:	cmp	w0, #0x0
  413ee8:	cset	w0, ne  // ne = any
  413eec:	strb	w0, [sp, #175]
  413ef0:	b	4140d0 <ferror@plt+0x110d0>
  413ef4:	add	x0, sp, #0x80
  413ef8:	mov	x2, #0x8                   	// #8
  413efc:	mov	w1, #0x0                   	// #0
  413f00:	bl	402b30 <memset@plt>
  413f04:	str	xzr, [sp, #176]
  413f08:	mov	w0, #0x1                   	// #1
  413f0c:	strb	w0, [sp, #175]
  413f10:	ldr	x0, [sp, #80]
  413f14:	cmn	x0, #0x1
  413f18:	b.ne	413f28 <ferror@plt+0x10f28>  // b.any
  413f1c:	ldr	x0, [sp, #88]
  413f20:	bl	4028f0 <strlen@plt>
  413f24:	str	x0, [sp, #80]
  413f28:	ldr	x1, [sp, #232]
  413f2c:	ldr	x0, [sp, #176]
  413f30:	add	x0, x1, x0
  413f34:	ldr	x1, [sp, #88]
  413f38:	add	x4, x1, x0
  413f3c:	ldr	x1, [sp, #232]
  413f40:	ldr	x0, [sp, #176]
  413f44:	add	x0, x1, x0
  413f48:	ldr	x1, [sp, #80]
  413f4c:	sub	x1, x1, x0
  413f50:	add	x2, sp, #0x80
  413f54:	add	x0, sp, #0x7c
  413f58:	mov	x3, x2
  413f5c:	mov	x2, x1
  413f60:	mov	x1, x4
  413f64:	bl	419c9c <ferror@plt+0x16c9c>
  413f68:	str	x0, [sp, #144]
  413f6c:	ldr	x0, [sp, #144]
  413f70:	cmp	x0, #0x0
  413f74:	b.eq	4140c4 <ferror@plt+0x110c4>  // b.none
  413f78:	ldr	x0, [sp, #144]
  413f7c:	cmn	x0, #0x1
  413f80:	b.ne	413f8c <ferror@plt+0x10f8c>  // b.any
  413f84:	strb	wzr, [sp, #175]
  413f88:	b	4140d0 <ferror@plt+0x110d0>
  413f8c:	ldr	x0, [sp, #144]
  413f90:	cmn	x0, #0x2
  413f94:	b.ne	413fe8 <ferror@plt+0x10fe8>  // b.any
  413f98:	strb	wzr, [sp, #175]
  413f9c:	b	413fac <ferror@plt+0x10fac>
  413fa0:	ldr	x0, [sp, #176]
  413fa4:	add	x0, x0, #0x1
  413fa8:	str	x0, [sp, #176]
  413fac:	ldr	x1, [sp, #232]
  413fb0:	ldr	x0, [sp, #176]
  413fb4:	add	x0, x1, x0
  413fb8:	ldr	x1, [sp, #80]
  413fbc:	cmp	x1, x0
  413fc0:	b.ls	4140cc <ferror@plt+0x110cc>  // b.plast
  413fc4:	ldr	x1, [sp, #232]
  413fc8:	ldr	x0, [sp, #176]
  413fcc:	add	x0, x1, x0
  413fd0:	ldr	x1, [sp, #88]
  413fd4:	add	x0, x1, x0
  413fd8:	ldrb	w0, [x0]
  413fdc:	cmp	w0, #0x0
  413fe0:	b.ne	413fa0 <ferror@plt+0x10fa0>  // b.any
  413fe4:	b	4140cc <ferror@plt+0x110cc>
  413fe8:	ldrb	w0, [sp, #198]
  413fec:	cmp	w0, #0x0
  413ff0:	b.eq	41408c <ferror@plt+0x1108c>  // b.none
  413ff4:	ldr	w0, [sp, #76]
  413ff8:	cmp	w0, #0x2
  413ffc:	b.ne	41408c <ferror@plt+0x1108c>  // b.any
  414000:	mov	x0, #0x1                   	// #1
  414004:	str	x0, [sp, #160]
  414008:	b	41407c <ferror@plt+0x1107c>
  41400c:	ldr	x1, [sp, #232]
  414010:	ldr	x0, [sp, #176]
  414014:	add	x1, x1, x0
  414018:	ldr	x0, [sp, #160]
  41401c:	add	x0, x1, x0
  414020:	ldr	x1, [sp, #88]
  414024:	add	x0, x1, x0
  414028:	ldrb	w0, [x0]
  41402c:	sub	w0, w0, #0x5b
  414030:	cmp	w0, #0x21
  414034:	cset	w1, hi  // hi = pmore
  414038:	and	w1, w1, #0xff
  41403c:	cmp	w1, #0x0
  414040:	b.ne	41406c <ferror@plt+0x1106c>  // b.any
  414044:	mov	x1, #0x1                   	// #1
  414048:	lsl	x1, x1, x0
  41404c:	mov	x0, #0x2b                  	// #43
  414050:	movk	x0, #0x2, lsl #32
  414054:	and	x0, x1, x0
  414058:	cmp	x0, #0x0
  41405c:	cset	w0, ne  // ne = any
  414060:	and	w0, w0, #0xff
  414064:	cmp	w0, #0x0
  414068:	b.ne	414880 <ferror@plt+0x11880>  // b.any
  41406c:	nop
  414070:	ldr	x0, [sp, #160]
  414074:	add	x0, x0, #0x1
  414078:	str	x0, [sp, #160]
  41407c:	ldr	x1, [sp, #160]
  414080:	ldr	x0, [sp, #144]
  414084:	cmp	x1, x0
  414088:	b.cc	41400c <ferror@plt+0x1100c>  // b.lo, b.ul, b.last
  41408c:	ldr	w0, [sp, #124]
  414090:	bl	402f20 <iswprint@plt>
  414094:	cmp	w0, #0x0
  414098:	b.ne	4140a0 <ferror@plt+0x110a0>  // b.any
  41409c:	strb	wzr, [sp, #175]
  4140a0:	ldr	x1, [sp, #176]
  4140a4:	ldr	x0, [sp, #144]
  4140a8:	add	x0, x1, x0
  4140ac:	str	x0, [sp, #176]
  4140b0:	add	x0, sp, #0x80
  4140b4:	bl	402c60 <mbsinit@plt>
  4140b8:	cmp	w0, #0x0
  4140bc:	b.eq	413f28 <ferror@plt+0x10f28>  // b.none
  4140c0:	b	4140d0 <ferror@plt+0x110d0>
  4140c4:	nop
  4140c8:	b	4140d0 <ferror@plt+0x110d0>
  4140cc:	nop
  4140d0:	ldrb	w0, [sp, #175]
  4140d4:	strb	w0, [sp, #190]
  4140d8:	ldr	x0, [sp, #176]
  4140dc:	cmp	x0, #0x1
  4140e0:	b.hi	414104 <ferror@plt+0x11104>  // b.pmore
  4140e4:	ldrb	w0, [sp, #199]
  4140e8:	cmp	w0, #0x0
  4140ec:	b.eq	414430 <ferror@plt+0x11430>  // b.none
  4140f0:	ldrb	w0, [sp, #175]
  4140f4:	eor	w0, w0, #0x1
  4140f8:	and	w0, w0, #0xff
  4140fc:	cmp	w0, #0x0
  414100:	b.eq	414430 <ferror@plt+0x11430>  // b.none
  414104:	ldr	x1, [sp, #232]
  414108:	ldr	x0, [sp, #176]
  41410c:	add	x0, x1, x0
  414110:	str	x0, [sp, #136]
  414114:	ldrb	w0, [sp, #199]
  414118:	cmp	w0, #0x0
  41411c:	b.eq	4142d0 <ferror@plt+0x112d0>  // b.none
  414120:	ldrb	w0, [sp, #175]
  414124:	eor	w0, w0, #0x1
  414128:	and	w0, w0, #0xff
  41412c:	cmp	w0, #0x0
  414130:	b.eq	4142d0 <ferror@plt+0x112d0>  // b.none
  414134:	ldrb	w0, [sp, #198]
  414138:	cmp	w0, #0x0
  41413c:	b.ne	41486c <ferror@plt+0x1186c>  // b.any
  414140:	mov	w0, #0x1                   	// #1
  414144:	strb	w0, [sp, #191]
  414148:	ldr	w0, [sp, #76]
  41414c:	cmp	w0, #0x2
  414150:	b.ne	414200 <ferror@plt+0x11200>  // b.any
  414154:	ldrb	w0, [sp, #197]
  414158:	eor	w0, w0, #0x1
  41415c:	and	w0, w0, #0xff
  414160:	cmp	w0, #0x0
  414164:	b.eq	414200 <ferror@plt+0x11200>  // b.none
  414168:	ldr	x1, [sp, #224]
  41416c:	ldr	x0, [sp, #96]
  414170:	cmp	x1, x0
  414174:	b.cs	41418c <ferror@plt+0x1118c>  // b.hs, b.nlast
  414178:	ldr	x1, [sp, #104]
  41417c:	ldr	x0, [sp, #224]
  414180:	add	x0, x1, x0
  414184:	mov	w1, #0x27                  	// #39
  414188:	strb	w1, [x0]
  41418c:	ldr	x0, [sp, #224]
  414190:	add	x0, x0, #0x1
  414194:	str	x0, [sp, #224]
  414198:	ldr	x1, [sp, #224]
  41419c:	ldr	x0, [sp, #96]
  4141a0:	cmp	x1, x0
  4141a4:	b.cs	4141bc <ferror@plt+0x111bc>  // b.hs, b.nlast
  4141a8:	ldr	x1, [sp, #104]
  4141ac:	ldr	x0, [sp, #224]
  4141b0:	add	x0, x1, x0
  4141b4:	mov	w1, #0x24                  	// #36
  4141b8:	strb	w1, [x0]
  4141bc:	ldr	x0, [sp, #224]
  4141c0:	add	x0, x0, #0x1
  4141c4:	str	x0, [sp, #224]
  4141c8:	ldr	x1, [sp, #224]
  4141cc:	ldr	x0, [sp, #96]
  4141d0:	cmp	x1, x0
  4141d4:	b.cs	4141ec <ferror@plt+0x111ec>  // b.hs, b.nlast
  4141d8:	ldr	x1, [sp, #104]
  4141dc:	ldr	x0, [sp, #224]
  4141e0:	add	x0, x1, x0
  4141e4:	mov	w1, #0x27                  	// #39
  4141e8:	strb	w1, [x0]
  4141ec:	ldr	x0, [sp, #224]
  4141f0:	add	x0, x0, #0x1
  4141f4:	str	x0, [sp, #224]
  4141f8:	mov	w0, #0x1                   	// #1
  4141fc:	strb	w0, [sp, #197]
  414200:	ldr	x1, [sp, #224]
  414204:	ldr	x0, [sp, #96]
  414208:	cmp	x1, x0
  41420c:	b.cs	414224 <ferror@plt+0x11224>  // b.hs, b.nlast
  414210:	ldr	x1, [sp, #104]
  414214:	ldr	x0, [sp, #224]
  414218:	add	x0, x1, x0
  41421c:	mov	w1, #0x5c                  	// #92
  414220:	strb	w1, [x0]
  414224:	ldr	x0, [sp, #224]
  414228:	add	x0, x0, #0x1
  41422c:	str	x0, [sp, #224]
  414230:	ldr	x1, [sp, #224]
  414234:	ldr	x0, [sp, #96]
  414238:	cmp	x1, x0
  41423c:	b.cs	414264 <ferror@plt+0x11264>  // b.hs, b.nlast
  414240:	ldrb	w0, [sp, #194]
  414244:	lsr	w0, w0, #6
  414248:	and	w1, w0, #0xff
  41424c:	ldr	x2, [sp, #104]
  414250:	ldr	x0, [sp, #224]
  414254:	add	x0, x2, x0
  414258:	add	w1, w1, #0x30
  41425c:	and	w1, w1, #0xff
  414260:	strb	w1, [x0]
  414264:	ldr	x0, [sp, #224]
  414268:	add	x0, x0, #0x1
  41426c:	str	x0, [sp, #224]
  414270:	ldr	x1, [sp, #224]
  414274:	ldr	x0, [sp, #96]
  414278:	cmp	x1, x0
  41427c:	b.cs	4142ac <ferror@plt+0x112ac>  // b.hs, b.nlast
  414280:	ldrb	w0, [sp, #194]
  414284:	lsr	w0, w0, #3
  414288:	and	w0, w0, #0xff
  41428c:	and	w0, w0, #0x7
  414290:	and	w1, w0, #0xff
  414294:	ldr	x2, [sp, #104]
  414298:	ldr	x0, [sp, #224]
  41429c:	add	x0, x2, x0
  4142a0:	add	w1, w1, #0x30
  4142a4:	and	w1, w1, #0xff
  4142a8:	strb	w1, [x0]
  4142ac:	ldr	x0, [sp, #224]
  4142b0:	add	x0, x0, #0x1
  4142b4:	str	x0, [sp, #224]
  4142b8:	ldrb	w0, [sp, #194]
  4142bc:	and	w0, w0, #0x7
  4142c0:	and	w0, w0, #0xff
  4142c4:	add	w0, w0, #0x30
  4142c8:	strb	w0, [sp, #194]
  4142cc:	b	414310 <ferror@plt+0x11310>
  4142d0:	ldrb	w0, [sp, #192]
  4142d4:	cmp	w0, #0x0
  4142d8:	b.eq	414310 <ferror@plt+0x11310>  // b.none
  4142dc:	ldr	x1, [sp, #224]
  4142e0:	ldr	x0, [sp, #96]
  4142e4:	cmp	x1, x0
  4142e8:	b.cs	414300 <ferror@plt+0x11300>  // b.hs, b.nlast
  4142ec:	ldr	x1, [sp, #104]
  4142f0:	ldr	x0, [sp, #224]
  4142f4:	add	x0, x1, x0
  4142f8:	mov	w1, #0x5c                  	// #92
  4142fc:	strb	w1, [x0]
  414300:	ldr	x0, [sp, #224]
  414304:	add	x0, x0, #0x1
  414308:	str	x0, [sp, #224]
  41430c:	strb	wzr, [sp, #192]
  414310:	ldr	x0, [sp, #232]
  414314:	add	x0, x0, #0x1
  414318:	ldr	x1, [sp, #136]
  41431c:	cmp	x1, x0
  414320:	b.ls	4143fc <ferror@plt+0x113fc>  // b.plast
  414324:	ldrb	w0, [sp, #197]
  414328:	cmp	w0, #0x0
  41432c:	b.eq	4143a8 <ferror@plt+0x113a8>  // b.none
  414330:	ldrb	w0, [sp, #191]
  414334:	eor	w0, w0, #0x1
  414338:	and	w0, w0, #0xff
  41433c:	cmp	w0, #0x0
  414340:	b.eq	4143a8 <ferror@plt+0x113a8>  // b.none
  414344:	ldr	x1, [sp, #224]
  414348:	ldr	x0, [sp, #96]
  41434c:	cmp	x1, x0
  414350:	b.cs	414368 <ferror@plt+0x11368>  // b.hs, b.nlast
  414354:	ldr	x1, [sp, #104]
  414358:	ldr	x0, [sp, #224]
  41435c:	add	x0, x1, x0
  414360:	mov	w1, #0x27                  	// #39
  414364:	strb	w1, [x0]
  414368:	ldr	x0, [sp, #224]
  41436c:	add	x0, x0, #0x1
  414370:	str	x0, [sp, #224]
  414374:	ldr	x1, [sp, #224]
  414378:	ldr	x0, [sp, #96]
  41437c:	cmp	x1, x0
  414380:	b.cs	414398 <ferror@plt+0x11398>  // b.hs, b.nlast
  414384:	ldr	x1, [sp, #104]
  414388:	ldr	x0, [sp, #224]
  41438c:	add	x0, x1, x0
  414390:	mov	w1, #0x27                  	// #39
  414394:	strb	w1, [x0]
  414398:	ldr	x0, [sp, #224]
  41439c:	add	x0, x0, #0x1
  4143a0:	str	x0, [sp, #224]
  4143a4:	strb	wzr, [sp, #197]
  4143a8:	ldr	x1, [sp, #224]
  4143ac:	ldr	x0, [sp, #96]
  4143b0:	cmp	x1, x0
  4143b4:	b.cs	4143cc <ferror@plt+0x113cc>  // b.hs, b.nlast
  4143b8:	ldr	x1, [sp, #104]
  4143bc:	ldr	x0, [sp, #224]
  4143c0:	add	x0, x1, x0
  4143c4:	ldrb	w1, [sp, #194]
  4143c8:	strb	w1, [x0]
  4143cc:	ldr	x0, [sp, #224]
  4143d0:	add	x0, x0, #0x1
  4143d4:	str	x0, [sp, #224]
  4143d8:	ldr	x0, [sp, #232]
  4143dc:	add	x0, x0, #0x1
  4143e0:	str	x0, [sp, #232]
  4143e4:	ldr	x1, [sp, #88]
  4143e8:	ldr	x0, [sp, #232]
  4143ec:	add	x0, x1, x0
  4143f0:	ldrb	w0, [x0]
  4143f4:	strb	w0, [sp, #194]
  4143f8:	b	414114 <ferror@plt+0x11114>
  4143fc:	nop
  414400:	b	4145d4 <ferror@plt+0x115d4>
  414404:	nop
  414408:	b	414430 <ferror@plt+0x11430>
  41440c:	nop
  414410:	b	414430 <ferror@plt+0x11430>
  414414:	nop
  414418:	b	414430 <ferror@plt+0x11430>
  41441c:	nop
  414420:	b	414430 <ferror@plt+0x11430>
  414424:	nop
  414428:	b	414430 <ferror@plt+0x11430>
  41442c:	nop
  414430:	ldrb	w0, [sp, #199]
  414434:	eor	w0, w0, #0x1
  414438:	and	w0, w0, #0xff
  41443c:	cmp	w0, #0x0
  414440:	b.ne	414450 <ferror@plt+0x11450>  // b.any
  414444:	ldr	w0, [sp, #76]
  414448:	cmp	w0, #0x2
  41444c:	b.ne	414464 <ferror@plt+0x11464>  // b.any
  414450:	ldrb	w0, [sp, #198]
  414454:	eor	w0, w0, #0x1
  414458:	and	w0, w0, #0xff
  41445c:	cmp	w0, #0x0
  414460:	b.ne	4144a8 <ferror@plt+0x114a8>  // b.any
  414464:	ldr	x0, [sp, #64]
  414468:	cmp	x0, #0x0
  41446c:	b.eq	4144a8 <ferror@plt+0x114a8>  // b.none
  414470:	ldrb	w0, [sp, #194]
  414474:	lsr	w0, w0, #5
  414478:	and	w0, w0, #0xff
  41447c:	and	x0, x0, #0xff
  414480:	lsl	x0, x0, #2
  414484:	ldr	x1, [sp, #64]
  414488:	add	x0, x1, x0
  41448c:	ldr	w1, [x0]
  414490:	ldrb	w0, [sp, #194]
  414494:	and	w0, w0, #0x1f
  414498:	lsr	w0, w1, w0
  41449c:	and	w0, w0, #0x1
  4144a0:	cmp	w0, #0x0
  4144a4:	b.ne	4144bc <ferror@plt+0x114bc>  // b.any
  4144a8:	ldrb	w0, [sp, #192]
  4144ac:	eor	w0, w0, #0x1
  4144b0:	and	w0, w0, #0xff
  4144b4:	cmp	w0, #0x0
  4144b8:	b.ne	4145d0 <ferror@plt+0x115d0>  // b.any
  4144bc:	nop
  4144c0:	ldrb	w0, [sp, #198]
  4144c4:	cmp	w0, #0x0
  4144c8:	b.ne	414874 <ferror@plt+0x11874>  // b.any
  4144cc:	mov	w0, #0x1                   	// #1
  4144d0:	strb	w0, [sp, #191]
  4144d4:	ldr	w0, [sp, #76]
  4144d8:	cmp	w0, #0x2
  4144dc:	b.ne	41458c <ferror@plt+0x1158c>  // b.any
  4144e0:	ldrb	w0, [sp, #197]
  4144e4:	eor	w0, w0, #0x1
  4144e8:	and	w0, w0, #0xff
  4144ec:	cmp	w0, #0x0
  4144f0:	b.eq	41458c <ferror@plt+0x1158c>  // b.none
  4144f4:	ldr	x1, [sp, #224]
  4144f8:	ldr	x0, [sp, #96]
  4144fc:	cmp	x1, x0
  414500:	b.cs	414518 <ferror@plt+0x11518>  // b.hs, b.nlast
  414504:	ldr	x1, [sp, #104]
  414508:	ldr	x0, [sp, #224]
  41450c:	add	x0, x1, x0
  414510:	mov	w1, #0x27                  	// #39
  414514:	strb	w1, [x0]
  414518:	ldr	x0, [sp, #224]
  41451c:	add	x0, x0, #0x1
  414520:	str	x0, [sp, #224]
  414524:	ldr	x1, [sp, #224]
  414528:	ldr	x0, [sp, #96]
  41452c:	cmp	x1, x0
  414530:	b.cs	414548 <ferror@plt+0x11548>  // b.hs, b.nlast
  414534:	ldr	x1, [sp, #104]
  414538:	ldr	x0, [sp, #224]
  41453c:	add	x0, x1, x0
  414540:	mov	w1, #0x24                  	// #36
  414544:	strb	w1, [x0]
  414548:	ldr	x0, [sp, #224]
  41454c:	add	x0, x0, #0x1
  414550:	str	x0, [sp, #224]
  414554:	ldr	x1, [sp, #224]
  414558:	ldr	x0, [sp, #96]
  41455c:	cmp	x1, x0
  414560:	b.cs	414578 <ferror@plt+0x11578>  // b.hs, b.nlast
  414564:	ldr	x1, [sp, #104]
  414568:	ldr	x0, [sp, #224]
  41456c:	add	x0, x1, x0
  414570:	mov	w1, #0x27                  	// #39
  414574:	strb	w1, [x0]
  414578:	ldr	x0, [sp, #224]
  41457c:	add	x0, x0, #0x1
  414580:	str	x0, [sp, #224]
  414584:	mov	w0, #0x1                   	// #1
  414588:	strb	w0, [sp, #197]
  41458c:	ldr	x1, [sp, #224]
  414590:	ldr	x0, [sp, #96]
  414594:	cmp	x1, x0
  414598:	b.cs	4145b0 <ferror@plt+0x115b0>  // b.hs, b.nlast
  41459c:	ldr	x1, [sp, #104]
  4145a0:	ldr	x0, [sp, #224]
  4145a4:	add	x0, x1, x0
  4145a8:	mov	w1, #0x5c                  	// #92
  4145ac:	strb	w1, [x0]
  4145b0:	ldr	x0, [sp, #224]
  4145b4:	add	x0, x0, #0x1
  4145b8:	str	x0, [sp, #224]
  4145bc:	b	4145d4 <ferror@plt+0x115d4>
  4145c0:	nop
  4145c4:	b	4145d4 <ferror@plt+0x115d4>
  4145c8:	nop
  4145cc:	b	4145d4 <ferror@plt+0x115d4>
  4145d0:	nop
  4145d4:	ldrb	w0, [sp, #197]
  4145d8:	cmp	w0, #0x0
  4145dc:	b.eq	414658 <ferror@plt+0x11658>  // b.none
  4145e0:	ldrb	w0, [sp, #191]
  4145e4:	eor	w0, w0, #0x1
  4145e8:	and	w0, w0, #0xff
  4145ec:	cmp	w0, #0x0
  4145f0:	b.eq	414658 <ferror@plt+0x11658>  // b.none
  4145f4:	ldr	x1, [sp, #224]
  4145f8:	ldr	x0, [sp, #96]
  4145fc:	cmp	x1, x0
  414600:	b.cs	414618 <ferror@plt+0x11618>  // b.hs, b.nlast
  414604:	ldr	x1, [sp, #104]
  414608:	ldr	x0, [sp, #224]
  41460c:	add	x0, x1, x0
  414610:	mov	w1, #0x27                  	// #39
  414614:	strb	w1, [x0]
  414618:	ldr	x0, [sp, #224]
  41461c:	add	x0, x0, #0x1
  414620:	str	x0, [sp, #224]
  414624:	ldr	x1, [sp, #224]
  414628:	ldr	x0, [sp, #96]
  41462c:	cmp	x1, x0
  414630:	b.cs	414648 <ferror@plt+0x11648>  // b.hs, b.nlast
  414634:	ldr	x1, [sp, #104]
  414638:	ldr	x0, [sp, #224]
  41463c:	add	x0, x1, x0
  414640:	mov	w1, #0x27                  	// #39
  414644:	strb	w1, [x0]
  414648:	ldr	x0, [sp, #224]
  41464c:	add	x0, x0, #0x1
  414650:	str	x0, [sp, #224]
  414654:	strb	wzr, [sp, #197]
  414658:	ldr	x1, [sp, #224]
  41465c:	ldr	x0, [sp, #96]
  414660:	cmp	x1, x0
  414664:	b.cs	41467c <ferror@plt+0x1167c>  // b.hs, b.nlast
  414668:	ldr	x1, [sp, #104]
  41466c:	ldr	x0, [sp, #224]
  414670:	add	x0, x1, x0
  414674:	ldrb	w1, [sp, #194]
  414678:	strb	w1, [x0]
  41467c:	ldr	x0, [sp, #224]
  414680:	add	x0, x0, #0x1
  414684:	str	x0, [sp, #224]
  414688:	ldrb	w0, [sp, #190]
  41468c:	eor	w0, w0, #0x1
  414690:	and	w0, w0, #0xff
  414694:	cmp	w0, #0x0
  414698:	b.eq	4146a0 <ferror@plt+0x116a0>  // b.none
  41469c:	strb	wzr, [sp, #195]
  4146a0:	ldr	x0, [sp, #232]
  4146a4:	add	x0, x0, #0x1
  4146a8:	str	x0, [sp, #232]
  4146ac:	ldr	x0, [sp, #80]
  4146b0:	cmn	x0, #0x1
  4146b4:	b.ne	4146d8 <ferror@plt+0x116d8>  // b.any
  4146b8:	ldr	x1, [sp, #88]
  4146bc:	ldr	x0, [sp, #232]
  4146c0:	add	x0, x1, x0
  4146c4:	ldrb	w0, [x0]
  4146c8:	cmp	w0, #0x0
  4146cc:	cset	w0, ne  // ne = any
  4146d0:	and	w0, w0, #0xff
  4146d4:	b	4146ec <ferror@plt+0x116ec>
  4146d8:	ldr	x1, [sp, #232]
  4146dc:	ldr	x0, [sp, #80]
  4146e0:	cmp	x1, x0
  4146e4:	cset	w0, ne  // ne = any
  4146e8:	and	w0, w0, #0xff
  4146ec:	cmp	w0, #0x0
  4146f0:	b.ne	4137f8 <ferror@plt+0x107f8>  // b.any
  4146f4:	ldr	x0, [sp, #224]
  4146f8:	cmp	x0, #0x0
  4146fc:	b.ne	414718 <ferror@plt+0x11718>  // b.any
  414700:	ldr	w0, [sp, #76]
  414704:	cmp	w0, #0x2
  414708:	b.ne	414718 <ferror@plt+0x11718>  // b.any
  41470c:	ldrb	w0, [sp, #198]
  414710:	cmp	w0, #0x0
  414714:	b.ne	41487c <ferror@plt+0x1187c>  // b.any
  414718:	ldr	w0, [sp, #76]
  41471c:	cmp	w0, #0x2
  414720:	b.ne	4147a8 <ferror@plt+0x117a8>  // b.any
  414724:	ldrb	w0, [sp, #198]
  414728:	eor	w0, w0, #0x1
  41472c:	and	w0, w0, #0xff
  414730:	cmp	w0, #0x0
  414734:	b.eq	4147a8 <ferror@plt+0x117a8>  // b.none
  414738:	ldrb	w0, [sp, #196]
  41473c:	cmp	w0, #0x0
  414740:	b.eq	4147a8 <ferror@plt+0x117a8>  // b.none
  414744:	ldrb	w0, [sp, #195]
  414748:	cmp	w0, #0x0
  41474c:	b.eq	414780 <ferror@plt+0x11780>  // b.none
  414750:	ldr	x0, [sp, #240]
  414754:	str	x0, [sp]
  414758:	ldr	x7, [sp, #56]
  41475c:	ldr	x6, [sp, #64]
  414760:	ldr	w5, [sp, #72]
  414764:	mov	w4, #0x5                   	// #5
  414768:	ldr	x3, [sp, #80]
  41476c:	ldr	x2, [sp, #88]
  414770:	ldr	x1, [sp, #216]
  414774:	ldr	x0, [sp, #104]
  414778:	bl	4134d0 <ferror@plt+0x104d0>
  41477c:	b	4148d4 <ferror@plt+0x118d4>
  414780:	ldr	x0, [sp, #96]
  414784:	cmp	x0, #0x0
  414788:	b.ne	4147a8 <ferror@plt+0x117a8>  // b.any
  41478c:	ldr	x0, [sp, #216]
  414790:	cmp	x0, #0x0
  414794:	b.eq	4147a8 <ferror@plt+0x117a8>  // b.none
  414798:	ldr	x0, [sp, #216]
  41479c:	str	x0, [sp, #96]
  4147a0:	str	xzr, [sp, #224]
  4147a4:	b	413548 <ferror@plt+0x10548>
  4147a8:	ldr	x0, [sp, #208]
  4147ac:	cmp	x0, #0x0
  4147b0:	b.eq	41481c <ferror@plt+0x1181c>  // b.none
  4147b4:	ldrb	w0, [sp, #198]
  4147b8:	eor	w0, w0, #0x1
  4147bc:	and	w0, w0, #0xff
  4147c0:	cmp	w0, #0x0
  4147c4:	b.eq	41481c <ferror@plt+0x1181c>  // b.none
  4147c8:	b	41480c <ferror@plt+0x1180c>
  4147cc:	ldr	x1, [sp, #224]
  4147d0:	ldr	x0, [sp, #96]
  4147d4:	cmp	x1, x0
  4147d8:	b.cs	4147f4 <ferror@plt+0x117f4>  // b.hs, b.nlast
  4147dc:	ldr	x1, [sp, #104]
  4147e0:	ldr	x0, [sp, #224]
  4147e4:	add	x0, x1, x0
  4147e8:	ldr	x1, [sp, #208]
  4147ec:	ldrb	w1, [x1]
  4147f0:	strb	w1, [x0]
  4147f4:	ldr	x0, [sp, #224]
  4147f8:	add	x0, x0, #0x1
  4147fc:	str	x0, [sp, #224]
  414800:	ldr	x0, [sp, #208]
  414804:	add	x0, x0, #0x1
  414808:	str	x0, [sp, #208]
  41480c:	ldr	x0, [sp, #208]
  414810:	ldrb	w0, [x0]
  414814:	cmp	w0, #0x0
  414818:	b.ne	4147cc <ferror@plt+0x117cc>  // b.any
  41481c:	ldr	x1, [sp, #224]
  414820:	ldr	x0, [sp, #96]
  414824:	cmp	x1, x0
  414828:	b.cs	41483c <ferror@plt+0x1183c>  // b.hs, b.nlast
  41482c:	ldr	x1, [sp, #104]
  414830:	ldr	x0, [sp, #224]
  414834:	add	x0, x1, x0
  414838:	strb	wzr, [x0]
  41483c:	ldr	x0, [sp, #224]
  414840:	b	4148d4 <ferror@plt+0x118d4>
  414844:	nop
  414848:	b	414880 <ferror@plt+0x11880>
  41484c:	nop
  414850:	b	414880 <ferror@plt+0x11880>
  414854:	nop
  414858:	b	414880 <ferror@plt+0x11880>
  41485c:	nop
  414860:	b	414880 <ferror@plt+0x11880>
  414864:	nop
  414868:	b	414880 <ferror@plt+0x11880>
  41486c:	nop
  414870:	b	414880 <ferror@plt+0x11880>
  414874:	nop
  414878:	b	414880 <ferror@plt+0x11880>
  41487c:	nop
  414880:	ldr	w0, [sp, #76]
  414884:	cmp	w0, #0x2
  414888:	b.ne	4148a0 <ferror@plt+0x118a0>  // b.any
  41488c:	ldrb	w0, [sp, #199]
  414890:	cmp	w0, #0x0
  414894:	b.eq	4148a0 <ferror@plt+0x118a0>  // b.none
  414898:	mov	w0, #0x4                   	// #4
  41489c:	str	w0, [sp, #76]
  4148a0:	ldr	w0, [sp, #72]
  4148a4:	and	w1, w0, #0xfffffffd
  4148a8:	ldr	x0, [sp, #240]
  4148ac:	str	x0, [sp]
  4148b0:	ldr	x7, [sp, #56]
  4148b4:	mov	x6, #0x0                   	// #0
  4148b8:	mov	w5, w1
  4148bc:	ldr	w4, [sp, #76]
  4148c0:	ldr	x3, [sp, #80]
  4148c4:	ldr	x2, [sp, #88]
  4148c8:	ldr	x1, [sp, #96]
  4148cc:	ldr	x0, [sp, #104]
  4148d0:	bl	4134d0 <ferror@plt+0x104d0>
  4148d4:	ldr	x19, [sp, #32]
  4148d8:	ldp	x29, x30, [sp, #16]
  4148dc:	add	sp, sp, #0xf0
  4148e0:	ret
  4148e4:	sub	sp, sp, #0x70
  4148e8:	stp	x29, x30, [sp, #16]
  4148ec:	add	x29, sp, #0x10
  4148f0:	str	x0, [sp, #72]
  4148f4:	str	x1, [sp, #64]
  4148f8:	str	x2, [sp, #56]
  4148fc:	str	x3, [sp, #48]
  414900:	str	x4, [sp, #40]
  414904:	ldr	x0, [sp, #40]
  414908:	cmp	x0, #0x0
  41490c:	b.eq	414918 <ferror@plt+0x11918>  // b.none
  414910:	ldr	x0, [sp, #40]
  414914:	b	414920 <ferror@plt+0x11920>
  414918:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  41491c:	add	x0, x0, #0xbe8
  414920:	str	x0, [sp, #104]
  414924:	bl	402f50 <__errno_location@plt>
  414928:	ldr	w0, [x0]
  41492c:	str	w0, [sp, #100]
  414930:	ldr	x0, [sp, #104]
  414934:	ldr	w1, [x0]
  414938:	ldr	x0, [sp, #104]
  41493c:	ldr	w2, [x0, #4]
  414940:	ldr	x0, [sp, #104]
  414944:	add	x3, x0, #0x8
  414948:	ldr	x0, [sp, #104]
  41494c:	ldr	x4, [x0, #40]
  414950:	ldr	x0, [sp, #104]
  414954:	ldr	x0, [x0, #48]
  414958:	str	x0, [sp]
  41495c:	mov	x7, x4
  414960:	mov	x6, x3
  414964:	mov	w5, w2
  414968:	mov	w4, w1
  41496c:	ldr	x3, [sp, #48]
  414970:	ldr	x2, [sp, #56]
  414974:	ldr	x1, [sp, #64]
  414978:	ldr	x0, [sp, #72]
  41497c:	bl	4134d0 <ferror@plt+0x104d0>
  414980:	str	x0, [sp, #88]
  414984:	bl	402f50 <__errno_location@plt>
  414988:	mov	x1, x0
  41498c:	ldr	w0, [sp, #100]
  414990:	str	w0, [x1]
  414994:	ldr	x0, [sp, #88]
  414998:	ldp	x29, x30, [sp, #16]
  41499c:	add	sp, sp, #0x70
  4149a0:	ret
  4149a4:	stp	x29, x30, [sp, #-48]!
  4149a8:	mov	x29, sp
  4149ac:	str	x0, [sp, #40]
  4149b0:	str	x1, [sp, #32]
  4149b4:	str	x2, [sp, #24]
  4149b8:	ldr	x3, [sp, #24]
  4149bc:	mov	x2, #0x0                   	// #0
  4149c0:	ldr	x1, [sp, #32]
  4149c4:	ldr	x0, [sp, #40]
  4149c8:	bl	4149d4 <ferror@plt+0x119d4>
  4149cc:	ldp	x29, x30, [sp], #48
  4149d0:	ret
  4149d4:	sub	sp, sp, #0x60
  4149d8:	stp	x29, x30, [sp, #16]
  4149dc:	add	x29, sp, #0x10
  4149e0:	str	x0, [sp, #56]
  4149e4:	str	x1, [sp, #48]
  4149e8:	str	x2, [sp, #40]
  4149ec:	str	x3, [sp, #32]
  4149f0:	ldr	x0, [sp, #32]
  4149f4:	cmp	x0, #0x0
  4149f8:	b.eq	414a04 <ferror@plt+0x11a04>  // b.none
  4149fc:	ldr	x0, [sp, #32]
  414a00:	b	414a0c <ferror@plt+0x11a0c>
  414a04:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414a08:	add	x0, x0, #0xbe8
  414a0c:	str	x0, [sp, #88]
  414a10:	bl	402f50 <__errno_location@plt>
  414a14:	ldr	w0, [x0]
  414a18:	str	w0, [sp, #84]
  414a1c:	ldr	x0, [sp, #88]
  414a20:	ldr	w0, [x0, #4]
  414a24:	ldr	x1, [sp, #40]
  414a28:	cmp	x1, #0x0
  414a2c:	cset	w1, eq  // eq = none
  414a30:	and	w1, w1, #0xff
  414a34:	orr	w0, w0, w1
  414a38:	str	w0, [sp, #80]
  414a3c:	ldr	x0, [sp, #88]
  414a40:	ldr	w1, [x0]
  414a44:	ldr	x0, [sp, #88]
  414a48:	add	x2, x0, #0x8
  414a4c:	ldr	x0, [sp, #88]
  414a50:	ldr	x3, [x0, #40]
  414a54:	ldr	x0, [sp, #88]
  414a58:	ldr	x0, [x0, #48]
  414a5c:	str	x0, [sp]
  414a60:	mov	x7, x3
  414a64:	mov	x6, x2
  414a68:	ldr	w5, [sp, #80]
  414a6c:	mov	w4, w1
  414a70:	ldr	x3, [sp, #48]
  414a74:	ldr	x2, [sp, #56]
  414a78:	mov	x1, #0x0                   	// #0
  414a7c:	mov	x0, #0x0                   	// #0
  414a80:	bl	4134d0 <ferror@plt+0x104d0>
  414a84:	add	x0, x0, #0x1
  414a88:	str	x0, [sp, #72]
  414a8c:	ldr	x0, [sp, #72]
  414a90:	bl	4183c0 <ferror@plt+0x153c0>
  414a94:	str	x0, [sp, #64]
  414a98:	ldr	x0, [sp, #88]
  414a9c:	ldr	w1, [x0]
  414aa0:	ldr	x0, [sp, #88]
  414aa4:	add	x2, x0, #0x8
  414aa8:	ldr	x0, [sp, #88]
  414aac:	ldr	x3, [x0, #40]
  414ab0:	ldr	x0, [sp, #88]
  414ab4:	ldr	x0, [x0, #48]
  414ab8:	str	x0, [sp]
  414abc:	mov	x7, x3
  414ac0:	mov	x6, x2
  414ac4:	ldr	w5, [sp, #80]
  414ac8:	mov	w4, w1
  414acc:	ldr	x3, [sp, #48]
  414ad0:	ldr	x2, [sp, #56]
  414ad4:	ldr	x1, [sp, #72]
  414ad8:	ldr	x0, [sp, #64]
  414adc:	bl	4134d0 <ferror@plt+0x104d0>
  414ae0:	bl	402f50 <__errno_location@plt>
  414ae4:	mov	x1, x0
  414ae8:	ldr	w0, [sp, #84]
  414aec:	str	w0, [x1]
  414af0:	ldr	x0, [sp, #40]
  414af4:	cmp	x0, #0x0
  414af8:	b.eq	414b0c <ferror@plt+0x11b0c>  // b.none
  414afc:	ldr	x0, [sp, #72]
  414b00:	sub	x1, x0, #0x1
  414b04:	ldr	x0, [sp, #40]
  414b08:	str	x1, [x0]
  414b0c:	ldr	x0, [sp, #64]
  414b10:	ldp	x29, x30, [sp, #16]
  414b14:	add	sp, sp, #0x60
  414b18:	ret
  414b1c:	stp	x29, x30, [sp, #-32]!
  414b20:	mov	x29, sp
  414b24:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414b28:	add	x0, x0, #0x508
  414b2c:	ldr	x0, [x0]
  414b30:	str	x0, [sp, #16]
  414b34:	mov	w0, #0x1                   	// #1
  414b38:	str	w0, [sp, #28]
  414b3c:	b	414b64 <ferror@plt+0x11b64>
  414b40:	ldrsw	x0, [sp, #28]
  414b44:	lsl	x0, x0, #4
  414b48:	ldr	x1, [sp, #16]
  414b4c:	add	x0, x1, x0
  414b50:	ldr	x0, [x0, #8]
  414b54:	bl	402d20 <free@plt>
  414b58:	ldr	w0, [sp, #28]
  414b5c:	add	w0, w0, #0x1
  414b60:	str	w0, [sp, #28]
  414b64:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414b68:	add	x0, x0, #0x4f0
  414b6c:	ldr	w0, [x0]
  414b70:	ldr	w1, [sp, #28]
  414b74:	cmp	w1, w0
  414b78:	b.lt	414b40 <ferror@plt+0x11b40>  // b.tstop
  414b7c:	ldr	x0, [sp, #16]
  414b80:	ldr	x1, [x0, #8]
  414b84:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414b88:	add	x0, x0, #0xc20
  414b8c:	cmp	x1, x0
  414b90:	b.eq	414bc4 <ferror@plt+0x11bc4>  // b.none
  414b94:	ldr	x0, [sp, #16]
  414b98:	ldr	x0, [x0, #8]
  414b9c:	bl	402d20 <free@plt>
  414ba0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414ba4:	add	x0, x0, #0x4f8
  414ba8:	mov	x1, #0x100                 	// #256
  414bac:	str	x1, [x0]
  414bb0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414bb4:	add	x0, x0, #0x4f8
  414bb8:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  414bbc:	add	x1, x1, #0xc20
  414bc0:	str	x1, [x0, #8]
  414bc4:	ldr	x1, [sp, #16]
  414bc8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414bcc:	add	x0, x0, #0x4f8
  414bd0:	cmp	x1, x0
  414bd4:	b.eq	414bf4 <ferror@plt+0x11bf4>  // b.none
  414bd8:	ldr	x0, [sp, #16]
  414bdc:	bl	402d20 <free@plt>
  414be0:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414be4:	add	x0, x0, #0x508
  414be8:	adrp	x1, 433000 <_obstack_memory_used@@Base+0x18b64>
  414bec:	add	x1, x1, #0x4f8
  414bf0:	str	x1, [x0]
  414bf4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414bf8:	add	x0, x0, #0x4f0
  414bfc:	mov	w1, #0x1                   	// #1
  414c00:	str	w1, [x0]
  414c04:	nop
  414c08:	ldp	x29, x30, [sp], #32
  414c0c:	ret
  414c10:	sub	sp, sp, #0x80
  414c14:	stp	x29, x30, [sp, #16]
  414c18:	add	x29, sp, #0x10
  414c1c:	str	w0, [sp, #60]
  414c20:	str	x1, [sp, #48]
  414c24:	str	x2, [sp, #40]
  414c28:	str	x3, [sp, #32]
  414c2c:	bl	402f50 <__errno_location@plt>
  414c30:	ldr	w0, [x0]
  414c34:	str	w0, [sp, #108]
  414c38:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414c3c:	add	x0, x0, #0x508
  414c40:	ldr	x0, [x0]
  414c44:	str	x0, [sp, #120]
  414c48:	ldr	w0, [sp, #60]
  414c4c:	cmp	w0, #0x0
  414c50:	b.ge	414c58 <ferror@plt+0x11c58>  // b.tcont
  414c54:	bl	402c20 <abort@plt>
  414c58:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414c5c:	add	x0, x0, #0x4f0
  414c60:	ldr	w0, [x0]
  414c64:	ldr	w1, [sp, #60]
  414c68:	cmp	w1, w0
  414c6c:	b.lt	414d64 <ferror@plt+0x11d64>  // b.tstop
  414c70:	ldr	x1, [sp, #120]
  414c74:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414c78:	add	x0, x0, #0x4f8
  414c7c:	cmp	x1, x0
  414c80:	cset	w0, eq  // eq = none
  414c84:	strb	w0, [sp, #107]
  414c88:	mov	w0, #0x7ffffffe            	// #2147483646
  414c8c:	str	w0, [sp, #100]
  414c90:	ldr	w1, [sp, #100]
  414c94:	ldr	w0, [sp, #60]
  414c98:	cmp	w1, w0
  414c9c:	b.ge	414ca4 <ferror@plt+0x11ca4>  // b.tcont
  414ca0:	bl	4185bc <ferror@plt+0x155bc>
  414ca4:	ldrb	w0, [sp, #107]
  414ca8:	cmp	w0, #0x0
  414cac:	b.eq	414cb8 <ferror@plt+0x11cb8>  // b.none
  414cb0:	mov	x0, #0x0                   	// #0
  414cb4:	b	414cbc <ferror@plt+0x11cbc>
  414cb8:	ldr	x0, [sp, #120]
  414cbc:	ldr	w1, [sp, #60]
  414cc0:	add	w1, w1, #0x1
  414cc4:	sxtw	x1, w1
  414cc8:	lsl	x1, x1, #4
  414ccc:	bl	41841c <ferror@plt+0x1541c>
  414cd0:	str	x0, [sp, #120]
  414cd4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414cd8:	add	x0, x0, #0x508
  414cdc:	ldr	x1, [sp, #120]
  414ce0:	str	x1, [x0]
  414ce4:	ldrb	w0, [sp, #107]
  414ce8:	cmp	w0, #0x0
  414cec:	b.eq	414d04 <ferror@plt+0x11d04>  // b.none
  414cf0:	ldr	x2, [sp, #120]
  414cf4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414cf8:	add	x0, x0, #0x4f8
  414cfc:	ldp	x0, x1, [x0]
  414d00:	stp	x0, x1, [x2]
  414d04:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414d08:	add	x0, x0, #0x4f0
  414d0c:	ldr	w0, [x0]
  414d10:	sxtw	x0, w0
  414d14:	lsl	x0, x0, #4
  414d18:	ldr	x1, [sp, #120]
  414d1c:	add	x3, x1, x0
  414d20:	ldr	w0, [sp, #60]
  414d24:	add	w1, w0, #0x1
  414d28:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414d2c:	add	x0, x0, #0x4f0
  414d30:	ldr	w0, [x0]
  414d34:	sub	w0, w1, w0
  414d38:	sxtw	x0, w0
  414d3c:	lsl	x0, x0, #4
  414d40:	mov	x2, x0
  414d44:	mov	w1, #0x0                   	// #0
  414d48:	mov	x0, x3
  414d4c:	bl	402b30 <memset@plt>
  414d50:	ldr	w0, [sp, #60]
  414d54:	add	w1, w0, #0x1
  414d58:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414d5c:	add	x0, x0, #0x4f0
  414d60:	str	w1, [x0]
  414d64:	ldrsw	x0, [sp, #60]
  414d68:	lsl	x0, x0, #4
  414d6c:	ldr	x1, [sp, #120]
  414d70:	add	x0, x1, x0
  414d74:	ldr	x0, [x0]
  414d78:	str	x0, [sp, #88]
  414d7c:	ldrsw	x0, [sp, #60]
  414d80:	lsl	x0, x0, #4
  414d84:	ldr	x1, [sp, #120]
  414d88:	add	x0, x1, x0
  414d8c:	ldr	x0, [x0, #8]
  414d90:	str	x0, [sp, #112]
  414d94:	ldr	x0, [sp, #32]
  414d98:	ldr	w0, [x0, #4]
  414d9c:	orr	w0, w0, #0x1
  414da0:	str	w0, [sp, #84]
  414da4:	ldr	x0, [sp, #32]
  414da8:	ldr	w1, [x0]
  414dac:	ldr	x0, [sp, #32]
  414db0:	add	x2, x0, #0x8
  414db4:	ldr	x0, [sp, #32]
  414db8:	ldr	x3, [x0, #40]
  414dbc:	ldr	x0, [sp, #32]
  414dc0:	ldr	x0, [x0, #48]
  414dc4:	str	x0, [sp]
  414dc8:	mov	x7, x3
  414dcc:	mov	x6, x2
  414dd0:	ldr	w5, [sp, #84]
  414dd4:	mov	w4, w1
  414dd8:	ldr	x3, [sp, #40]
  414ddc:	ldr	x2, [sp, #48]
  414de0:	ldr	x1, [sp, #88]
  414de4:	ldr	x0, [sp, #112]
  414de8:	bl	4134d0 <ferror@plt+0x104d0>
  414dec:	str	x0, [sp, #72]
  414df0:	ldr	x1, [sp, #88]
  414df4:	ldr	x0, [sp, #72]
  414df8:	cmp	x1, x0
  414dfc:	b.hi	414eac <ferror@plt+0x11eac>  // b.pmore
  414e00:	ldr	x0, [sp, #72]
  414e04:	add	x0, x0, #0x1
  414e08:	str	x0, [sp, #88]
  414e0c:	ldrsw	x0, [sp, #60]
  414e10:	lsl	x0, x0, #4
  414e14:	ldr	x1, [sp, #120]
  414e18:	add	x0, x1, x0
  414e1c:	ldr	x1, [sp, #88]
  414e20:	str	x1, [x0]
  414e24:	ldr	x1, [sp, #112]
  414e28:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414e2c:	add	x0, x0, #0xc20
  414e30:	cmp	x1, x0
  414e34:	b.eq	414e40 <ferror@plt+0x11e40>  // b.none
  414e38:	ldr	x0, [sp, #112]
  414e3c:	bl	402d20 <free@plt>
  414e40:	ldr	x0, [sp, #88]
  414e44:	bl	4183c0 <ferror@plt+0x153c0>
  414e48:	str	x0, [sp, #112]
  414e4c:	ldrsw	x0, [sp, #60]
  414e50:	lsl	x0, x0, #4
  414e54:	ldr	x1, [sp, #120]
  414e58:	add	x0, x1, x0
  414e5c:	ldr	x1, [sp, #112]
  414e60:	str	x1, [x0, #8]
  414e64:	ldr	x0, [sp, #32]
  414e68:	ldr	w1, [x0]
  414e6c:	ldr	x0, [sp, #32]
  414e70:	add	x2, x0, #0x8
  414e74:	ldr	x0, [sp, #32]
  414e78:	ldr	x3, [x0, #40]
  414e7c:	ldr	x0, [sp, #32]
  414e80:	ldr	x0, [x0, #48]
  414e84:	str	x0, [sp]
  414e88:	mov	x7, x3
  414e8c:	mov	x6, x2
  414e90:	ldr	w5, [sp, #84]
  414e94:	mov	w4, w1
  414e98:	ldr	x3, [sp, #40]
  414e9c:	ldr	x2, [sp, #48]
  414ea0:	ldr	x1, [sp, #88]
  414ea4:	ldr	x0, [sp, #112]
  414ea8:	bl	4134d0 <ferror@plt+0x104d0>
  414eac:	bl	402f50 <__errno_location@plt>
  414eb0:	mov	x1, x0
  414eb4:	ldr	w0, [sp, #108]
  414eb8:	str	w0, [x1]
  414ebc:	ldr	x0, [sp, #112]
  414ec0:	ldp	x29, x30, [sp, #16]
  414ec4:	add	sp, sp, #0x80
  414ec8:	ret
  414ecc:	stp	x29, x30, [sp, #-32]!
  414ed0:	mov	x29, sp
  414ed4:	str	w0, [sp, #28]
  414ed8:	str	x1, [sp, #16]
  414edc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414ee0:	add	x3, x0, #0xbe8
  414ee4:	mov	x2, #0xffffffffffffffff    	// #-1
  414ee8:	ldr	x1, [sp, #16]
  414eec:	ldr	w0, [sp, #28]
  414ef0:	bl	414c10 <ferror@plt+0x11c10>
  414ef4:	ldp	x29, x30, [sp], #32
  414ef8:	ret
  414efc:	stp	x29, x30, [sp, #-48]!
  414f00:	mov	x29, sp
  414f04:	str	w0, [sp, #44]
  414f08:	str	x1, [sp, #32]
  414f0c:	str	x2, [sp, #24]
  414f10:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  414f14:	add	x3, x0, #0xbe8
  414f18:	ldr	x2, [sp, #24]
  414f1c:	ldr	x1, [sp, #32]
  414f20:	ldr	w0, [sp, #44]
  414f24:	bl	414c10 <ferror@plt+0x11c10>
  414f28:	ldp	x29, x30, [sp], #48
  414f2c:	ret
  414f30:	stp	x29, x30, [sp, #-32]!
  414f34:	mov	x29, sp
  414f38:	str	x0, [sp, #24]
  414f3c:	ldr	x1, [sp, #24]
  414f40:	mov	w0, #0x0                   	// #0
  414f44:	bl	414ecc <ferror@plt+0x11ecc>
  414f48:	ldp	x29, x30, [sp], #32
  414f4c:	ret
  414f50:	stp	x29, x30, [sp, #-32]!
  414f54:	mov	x29, sp
  414f58:	str	x0, [sp, #24]
  414f5c:	str	x1, [sp, #16]
  414f60:	ldr	x2, [sp, #16]
  414f64:	ldr	x1, [sp, #24]
  414f68:	mov	w0, #0x0                   	// #0
  414f6c:	bl	414efc <ferror@plt+0x11efc>
  414f70:	ldp	x29, x30, [sp], #32
  414f74:	ret
  414f78:	stp	x29, x30, [sp, #-96]!
  414f7c:	mov	x29, sp
  414f80:	str	w0, [sp, #28]
  414f84:	str	w1, [sp, #24]
  414f88:	str	x2, [sp, #16]
  414f8c:	add	x0, sp, #0x28
  414f90:	mov	x8, x0
  414f94:	ldr	w0, [sp, #24]
  414f98:	bl	413388 <ferror@plt+0x10388>
  414f9c:	add	x0, sp, #0x28
  414fa0:	mov	x3, x0
  414fa4:	mov	x2, #0xffffffffffffffff    	// #-1
  414fa8:	ldr	x1, [sp, #16]
  414fac:	ldr	w0, [sp, #28]
  414fb0:	bl	414c10 <ferror@plt+0x11c10>
  414fb4:	ldp	x29, x30, [sp], #96
  414fb8:	ret
  414fbc:	stp	x29, x30, [sp, #-112]!
  414fc0:	mov	x29, sp
  414fc4:	str	w0, [sp, #44]
  414fc8:	str	w1, [sp, #40]
  414fcc:	str	x2, [sp, #32]
  414fd0:	str	x3, [sp, #24]
  414fd4:	add	x0, sp, #0x38
  414fd8:	mov	x8, x0
  414fdc:	ldr	w0, [sp, #40]
  414fe0:	bl	413388 <ferror@plt+0x10388>
  414fe4:	add	x0, sp, #0x38
  414fe8:	mov	x3, x0
  414fec:	ldr	x2, [sp, #24]
  414ff0:	ldr	x1, [sp, #32]
  414ff4:	ldr	w0, [sp, #44]
  414ff8:	bl	414c10 <ferror@plt+0x11c10>
  414ffc:	ldp	x29, x30, [sp], #112
  415000:	ret
  415004:	stp	x29, x30, [sp, #-32]!
  415008:	mov	x29, sp
  41500c:	str	w0, [sp, #28]
  415010:	str	x1, [sp, #16]
  415014:	ldr	x2, [sp, #16]
  415018:	ldr	w1, [sp, #28]
  41501c:	mov	w0, #0x0                   	// #0
  415020:	bl	414f78 <ferror@plt+0x11f78>
  415024:	ldp	x29, x30, [sp], #32
  415028:	ret
  41502c:	stp	x29, x30, [sp, #-48]!
  415030:	mov	x29, sp
  415034:	str	w0, [sp, #44]
  415038:	str	x1, [sp, #32]
  41503c:	str	x2, [sp, #24]
  415040:	ldr	x3, [sp, #24]
  415044:	ldr	x2, [sp, #32]
  415048:	ldr	w1, [sp, #44]
  41504c:	mov	w0, #0x0                   	// #0
  415050:	bl	414fbc <ferror@plt+0x11fbc>
  415054:	ldp	x29, x30, [sp], #48
  415058:	ret
  41505c:	stp	x29, x30, [sp, #-112]!
  415060:	mov	x29, sp
  415064:	str	x0, [sp, #40]
  415068:	str	x1, [sp, #32]
  41506c:	strb	w2, [sp, #31]
  415070:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  415074:	add	x1, x0, #0xbe8
  415078:	add	x0, sp, #0x38
  41507c:	ldp	x2, x3, [x1]
  415080:	stp	x2, x3, [x0]
  415084:	ldp	x2, x3, [x1, #16]
  415088:	stp	x2, x3, [x0, #16]
  41508c:	ldp	x2, x3, [x1, #32]
  415090:	stp	x2, x3, [x0, #32]
  415094:	ldr	x1, [x1, #48]
  415098:	str	x1, [x0, #48]
  41509c:	add	x0, sp, #0x38
  4150a0:	mov	w2, #0x1                   	// #1
  4150a4:	ldrb	w1, [sp, #31]
  4150a8:	bl	413218 <ferror@plt+0x10218>
  4150ac:	add	x0, sp, #0x38
  4150b0:	mov	x3, x0
  4150b4:	ldr	x2, [sp, #32]
  4150b8:	ldr	x1, [sp, #40]
  4150bc:	mov	w0, #0x0                   	// #0
  4150c0:	bl	414c10 <ferror@plt+0x11c10>
  4150c4:	ldp	x29, x30, [sp], #112
  4150c8:	ret
  4150cc:	stp	x29, x30, [sp, #-32]!
  4150d0:	mov	x29, sp
  4150d4:	str	x0, [sp, #24]
  4150d8:	strb	w1, [sp, #23]
  4150dc:	ldrb	w2, [sp, #23]
  4150e0:	mov	x1, #0xffffffffffffffff    	// #-1
  4150e4:	ldr	x0, [sp, #24]
  4150e8:	bl	41505c <ferror@plt+0x1205c>
  4150ec:	ldp	x29, x30, [sp], #32
  4150f0:	ret
  4150f4:	stp	x29, x30, [sp, #-32]!
  4150f8:	mov	x29, sp
  4150fc:	str	x0, [sp, #24]
  415100:	mov	w1, #0x3a                  	// #58
  415104:	ldr	x0, [sp, #24]
  415108:	bl	4150cc <ferror@plt+0x120cc>
  41510c:	ldp	x29, x30, [sp], #32
  415110:	ret
  415114:	stp	x29, x30, [sp, #-32]!
  415118:	mov	x29, sp
  41511c:	str	x0, [sp, #24]
  415120:	str	x1, [sp, #16]
  415124:	mov	w2, #0x3a                  	// #58
  415128:	ldr	x1, [sp, #16]
  41512c:	ldr	x0, [sp, #24]
  415130:	bl	41505c <ferror@plt+0x1205c>
  415134:	ldp	x29, x30, [sp], #32
  415138:	ret
  41513c:	stp	x29, x30, [sp, #-160]!
  415140:	mov	x29, sp
  415144:	str	w0, [sp, #92]
  415148:	str	w1, [sp, #88]
  41514c:	str	x2, [sp, #80]
  415150:	add	x0, sp, #0x10
  415154:	mov	x8, x0
  415158:	ldr	w0, [sp, #88]
  41515c:	bl	413388 <ferror@plt+0x10388>
  415160:	add	x0, sp, #0x68
  415164:	add	x1, sp, #0x10
  415168:	ldp	x2, x3, [x1]
  41516c:	stp	x2, x3, [x0]
  415170:	ldp	x2, x3, [x1, #16]
  415174:	stp	x2, x3, [x0, #16]
  415178:	ldp	x2, x3, [x1, #32]
  41517c:	stp	x2, x3, [x0, #32]
  415180:	ldr	x1, [x1, #48]
  415184:	str	x1, [x0, #48]
  415188:	add	x0, sp, #0x68
  41518c:	mov	w2, #0x1                   	// #1
  415190:	mov	w1, #0x3a                  	// #58
  415194:	bl	413218 <ferror@plt+0x10218>
  415198:	add	x0, sp, #0x68
  41519c:	mov	x3, x0
  4151a0:	mov	x2, #0xffffffffffffffff    	// #-1
  4151a4:	ldr	x1, [sp, #80]
  4151a8:	ldr	w0, [sp, #92]
  4151ac:	bl	414c10 <ferror@plt+0x11c10>
  4151b0:	ldp	x29, x30, [sp], #160
  4151b4:	ret
  4151b8:	stp	x29, x30, [sp, #-48]!
  4151bc:	mov	x29, sp
  4151c0:	str	w0, [sp, #44]
  4151c4:	str	x1, [sp, #32]
  4151c8:	str	x2, [sp, #24]
  4151cc:	str	x3, [sp, #16]
  4151d0:	mov	x4, #0xffffffffffffffff    	// #-1
  4151d4:	ldr	x3, [sp, #16]
  4151d8:	ldr	x2, [sp, #24]
  4151dc:	ldr	x1, [sp, #32]
  4151e0:	ldr	w0, [sp, #44]
  4151e4:	bl	4151f0 <ferror@plt+0x121f0>
  4151e8:	ldp	x29, x30, [sp], #48
  4151ec:	ret
  4151f0:	stp	x29, x30, [sp, #-128]!
  4151f4:	mov	x29, sp
  4151f8:	str	w0, [sp, #60]
  4151fc:	str	x1, [sp, #48]
  415200:	str	x2, [sp, #40]
  415204:	str	x3, [sp, #32]
  415208:	str	x4, [sp, #24]
  41520c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  415210:	add	x1, x0, #0xbe8
  415214:	add	x0, sp, #0x48
  415218:	ldp	x2, x3, [x1]
  41521c:	stp	x2, x3, [x0]
  415220:	ldp	x2, x3, [x1, #16]
  415224:	stp	x2, x3, [x0, #16]
  415228:	ldp	x2, x3, [x1, #32]
  41522c:	stp	x2, x3, [x0, #32]
  415230:	ldr	x1, [x1, #48]
  415234:	str	x1, [x0, #48]
  415238:	add	x0, sp, #0x48
  41523c:	ldr	x2, [sp, #40]
  415240:	ldr	x1, [sp, #48]
  415244:	bl	413310 <ferror@plt+0x10310>
  415248:	add	x0, sp, #0x48
  41524c:	mov	x3, x0
  415250:	ldr	x2, [sp, #24]
  415254:	ldr	x1, [sp, #32]
  415258:	ldr	w0, [sp, #60]
  41525c:	bl	414c10 <ferror@plt+0x11c10>
  415260:	ldp	x29, x30, [sp], #128
  415264:	ret
  415268:	stp	x29, x30, [sp, #-48]!
  41526c:	mov	x29, sp
  415270:	str	x0, [sp, #40]
  415274:	str	x1, [sp, #32]
  415278:	str	x2, [sp, #24]
  41527c:	ldr	x3, [sp, #24]
  415280:	ldr	x2, [sp, #32]
  415284:	ldr	x1, [sp, #40]
  415288:	mov	w0, #0x0                   	// #0
  41528c:	bl	4151b8 <ferror@plt+0x121b8>
  415290:	ldp	x29, x30, [sp], #48
  415294:	ret
  415298:	stp	x29, x30, [sp, #-48]!
  41529c:	mov	x29, sp
  4152a0:	str	x0, [sp, #40]
  4152a4:	str	x1, [sp, #32]
  4152a8:	str	x2, [sp, #24]
  4152ac:	str	x3, [sp, #16]
  4152b0:	ldr	x4, [sp, #16]
  4152b4:	ldr	x3, [sp, #24]
  4152b8:	ldr	x2, [sp, #32]
  4152bc:	ldr	x1, [sp, #40]
  4152c0:	mov	w0, #0x0                   	// #0
  4152c4:	bl	4151f0 <ferror@plt+0x121f0>
  4152c8:	ldp	x29, x30, [sp], #48
  4152cc:	ret
  4152d0:	stp	x29, x30, [sp, #-48]!
  4152d4:	mov	x29, sp
  4152d8:	str	w0, [sp, #44]
  4152dc:	str	x1, [sp, #32]
  4152e0:	str	x2, [sp, #24]
  4152e4:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4152e8:	add	x3, x0, #0x510
  4152ec:	ldr	x2, [sp, #24]
  4152f0:	ldr	x1, [sp, #32]
  4152f4:	ldr	w0, [sp, #44]
  4152f8:	bl	414c10 <ferror@plt+0x11c10>
  4152fc:	ldp	x29, x30, [sp], #48
  415300:	ret
  415304:	stp	x29, x30, [sp, #-32]!
  415308:	mov	x29, sp
  41530c:	str	x0, [sp, #24]
  415310:	str	x1, [sp, #16]
  415314:	ldr	x2, [sp, #16]
  415318:	ldr	x1, [sp, #24]
  41531c:	mov	w0, #0x0                   	// #0
  415320:	bl	4152d0 <ferror@plt+0x122d0>
  415324:	ldp	x29, x30, [sp], #32
  415328:	ret
  41532c:	stp	x29, x30, [sp, #-32]!
  415330:	mov	x29, sp
  415334:	str	w0, [sp, #28]
  415338:	str	x1, [sp, #16]
  41533c:	mov	x2, #0xffffffffffffffff    	// #-1
  415340:	ldr	x1, [sp, #16]
  415344:	ldr	w0, [sp, #28]
  415348:	bl	4152d0 <ferror@plt+0x122d0>
  41534c:	ldp	x29, x30, [sp], #32
  415350:	ret
  415354:	stp	x29, x30, [sp, #-32]!
  415358:	mov	x29, sp
  41535c:	str	x0, [sp, #24]
  415360:	ldr	x1, [sp, #24]
  415364:	mov	w0, #0x0                   	// #0
  415368:	bl	41532c <ferror@plt+0x1232c>
  41536c:	ldp	x29, x30, [sp], #32
  415370:	ret
  415374:	stp	x29, x30, [sp, #-64]!
  415378:	mov	x29, sp
  41537c:	stp	x19, x20, [sp, #16]
  415380:	str	x21, [sp, #32]
  415384:	str	x0, [sp, #56]
  415388:	ldr	x0, [sp, #56]
  41538c:	cmp	x0, #0x0
  415390:	b.eq	4153f8 <ferror@plt+0x123f8>  // b.none
  415394:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  415398:	add	x0, x0, #0x4e8
  41539c:	ldr	w20, [x0]
  4153a0:	bl	402f50 <__errno_location@plt>
  4153a4:	ldr	w21, [x0]
  4153a8:	bl	402f50 <__errno_location@plt>
  4153ac:	ldr	w0, [x0]
  4153b0:	cmp	w0, #0x0
  4153b4:	b.ne	4153cc <ferror@plt+0x123cc>  // b.any
  4153b8:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4153bc:	add	x0, x0, #0x950
  4153c0:	bl	402fd0 <gettext@plt>
  4153c4:	mov	x19, x0
  4153c8:	b	4153dc <ferror@plt+0x123dc>
  4153cc:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4153d0:	add	x0, x0, #0x960
  4153d4:	bl	402fd0 <gettext@plt>
  4153d8:	mov	x19, x0
  4153dc:	ldr	x0, [sp, #56]
  4153e0:	bl	415354 <ferror@plt+0x12354>
  4153e4:	mov	x3, x0
  4153e8:	mov	x2, x19
  4153ec:	mov	w1, w21
  4153f0:	mov	w0, w20
  4153f4:	bl	402920 <error@plt>
  4153f8:	bl	402c20 <abort@plt>
  4153fc:	stp	x29, x30, [sp, #-48]!
  415400:	mov	x29, sp
  415404:	str	x0, [sp, #24]
  415408:	str	x1, [sp, #16]
  41540c:	mov	x0, #0x1038                	// #4152
  415410:	bl	4183dc <ferror@plt+0x153dc>
  415414:	str	x0, [sp, #40]
  415418:	ldr	x0, [sp, #40]
  41541c:	ldr	x1, [sp, #24]
  415420:	str	x1, [x0]
  415424:	ldr	x0, [sp, #40]
  415428:	adrp	x1, 415000 <ferror@plt+0x12000>
  41542c:	add	x1, x1, #0x374
  415430:	str	x1, [x0, #8]
  415434:	ldr	x0, [sp, #40]
  415438:	ldr	x1, [sp, #16]
  41543c:	str	x1, [x0, #16]
  415440:	ldr	x0, [sp, #40]
  415444:	ldp	x29, x30, [sp], #48
  415448:	ret
  41544c:	stp	x29, x30, [sp, #-144]!
  415450:	mov	x29, sp
  415454:	str	x0, [sp, #40]
  415458:	str	x1, [sp, #32]
  41545c:	str	x2, [sp, #24]
  415460:	ldr	x0, [sp, #40]
  415464:	str	x0, [sp, #128]
  415468:	str	xzr, [sp, #136]
  41546c:	mov	w1, #0x0                   	// #0
  415470:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  415474:	add	x0, x0, #0x970
  415478:	bl	402ab0 <open@plt>
  41547c:	str	w0, [sp, #124]
  415480:	ldr	w0, [sp, #124]
  415484:	cmp	w0, #0x0
  415488:	b.lt	4154cc <ferror@plt+0x124cc>  // b.tstop
  41548c:	ldr	x0, [sp, #32]
  415490:	ldr	x2, [sp, #24]
  415494:	ldr	x1, [sp, #24]
  415498:	cmp	x2, x0
  41549c:	csel	x0, x1, x0, ls  // ls = plast
  4154a0:	mov	x2, x0
  4154a4:	ldr	x1, [sp, #128]
  4154a8:	ldr	w0, [sp, #124]
  4154ac:	bl	402e40 <read@plt>
  4154b0:	str	x0, [sp, #136]
  4154b4:	ldr	x0, [sp, #136]
  4154b8:	cmp	x0, #0x0
  4154bc:	b.ge	4154c4 <ferror@plt+0x124c4>  // b.tcont
  4154c0:	str	xzr, [sp, #136]
  4154c4:	ldr	w0, [sp, #124]
  4154c8:	bl	402ba0 <close@plt>
  4154cc:	ldr	x0, [sp, #136]
  4154d0:	ldr	x1, [sp, #32]
  4154d4:	cmp	x1, x0
  4154d8:	b.ls	41552c <ferror@plt+0x1252c>  // b.plast
  4154dc:	ldr	x0, [sp, #136]
  4154e0:	ldr	x1, [sp, #32]
  4154e4:	sub	x0, x1, x0
  4154e8:	mov	x1, #0x10                  	// #16
  4154ec:	cmp	x0, #0x10
  4154f0:	csel	x0, x0, x1, ls  // ls = plast
  4154f4:	str	x0, [sp, #112]
  4154f8:	add	x0, sp, #0x40
  4154fc:	mov	x1, #0x0                   	// #0
  415500:	bl	402b50 <gettimeofday@plt>
  415504:	ldr	x0, [sp, #136]
  415508:	ldr	x1, [sp, #128]
  41550c:	add	x0, x1, x0
  415510:	add	x1, sp, #0x40
  415514:	ldr	x2, [sp, #112]
  415518:	bl	402880 <memcpy@plt>
  41551c:	ldr	x1, [sp, #136]
  415520:	ldr	x0, [sp, #112]
  415524:	add	x0, x1, x0
  415528:	str	x0, [sp, #136]
  41552c:	ldr	x0, [sp, #136]
  415530:	ldr	x1, [sp, #32]
  415534:	cmp	x1, x0
  415538:	b.ls	415588 <ferror@plt+0x12588>  // b.plast
  41553c:	ldr	x0, [sp, #136]
  415540:	ldr	x1, [sp, #32]
  415544:	sub	x0, x1, x0
  415548:	mov	x1, #0x4                   	// #4
  41554c:	cmp	x0, #0x4
  415550:	csel	x0, x0, x1, ls  // ls = plast
  415554:	str	x0, [sp, #104]
  415558:	bl	402a50 <getpid@plt>
  41555c:	str	w0, [sp, #60]
  415560:	ldr	x0, [sp, #136]
  415564:	ldr	x1, [sp, #128]
  415568:	add	x0, x1, x0
  41556c:	add	x1, sp, #0x3c
  415570:	ldr	x2, [sp, #104]
  415574:	bl	402880 <memcpy@plt>
  415578:	ldr	x1, [sp, #136]
  41557c:	ldr	x0, [sp, #104]
  415580:	add	x0, x1, x0
  415584:	str	x0, [sp, #136]
  415588:	ldr	x0, [sp, #136]
  41558c:	ldr	x1, [sp, #32]
  415590:	cmp	x1, x0
  415594:	b.ls	4155e4 <ferror@plt+0x125e4>  // b.plast
  415598:	ldr	x0, [sp, #136]
  41559c:	ldr	x1, [sp, #32]
  4155a0:	sub	x0, x1, x0
  4155a4:	mov	x1, #0x4                   	// #4
  4155a8:	cmp	x0, #0x4
  4155ac:	csel	x0, x0, x1, ls  // ls = plast
  4155b0:	str	x0, [sp, #96]
  4155b4:	bl	402ac0 <getppid@plt>
  4155b8:	str	w0, [sp, #56]
  4155bc:	ldr	x0, [sp, #136]
  4155c0:	ldr	x1, [sp, #128]
  4155c4:	add	x0, x1, x0
  4155c8:	add	x1, sp, #0x38
  4155cc:	ldr	x2, [sp, #96]
  4155d0:	bl	402880 <memcpy@plt>
  4155d4:	ldr	x1, [sp, #136]
  4155d8:	ldr	x0, [sp, #96]
  4155dc:	add	x0, x1, x0
  4155e0:	str	x0, [sp, #136]
  4155e4:	ldr	x0, [sp, #136]
  4155e8:	ldr	x1, [sp, #32]
  4155ec:	cmp	x1, x0
  4155f0:	b.ls	415640 <ferror@plt+0x12640>  // b.plast
  4155f4:	ldr	x0, [sp, #136]
  4155f8:	ldr	x1, [sp, #32]
  4155fc:	sub	x0, x1, x0
  415600:	mov	x1, #0x4                   	// #4
  415604:	cmp	x0, #0x4
  415608:	csel	x0, x0, x1, ls  // ls = plast
  41560c:	str	x0, [sp, #88]
  415610:	bl	402950 <getuid@plt>
  415614:	str	w0, [sp, #52]
  415618:	ldr	x0, [sp, #136]
  41561c:	ldr	x1, [sp, #128]
  415620:	add	x0, x1, x0
  415624:	add	x1, sp, #0x34
  415628:	ldr	x2, [sp, #88]
  41562c:	bl	402880 <memcpy@plt>
  415630:	ldr	x1, [sp, #136]
  415634:	ldr	x0, [sp, #88]
  415638:	add	x0, x1, x0
  41563c:	str	x0, [sp, #136]
  415640:	ldr	x0, [sp, #136]
  415644:	ldr	x1, [sp, #32]
  415648:	cmp	x1, x0
  41564c:	b.ls	41569c <ferror@plt+0x1269c>  // b.plast
  415650:	ldr	x0, [sp, #136]
  415654:	ldr	x1, [sp, #32]
  415658:	sub	x0, x1, x0
  41565c:	mov	x1, #0x4                   	// #4
  415660:	cmp	x0, #0x4
  415664:	csel	x0, x0, x1, ls  // ls = plast
  415668:	str	x0, [sp, #80]
  41566c:	bl	402d40 <getgid@plt>
  415670:	str	w0, [sp, #48]
  415674:	ldr	x0, [sp, #136]
  415678:	ldr	x1, [sp, #128]
  41567c:	add	x0, x1, x0
  415680:	add	x1, sp, #0x30
  415684:	ldr	x2, [sp, #80]
  415688:	bl	402880 <memcpy@plt>
  41568c:	ldr	x1, [sp, #136]
  415690:	ldr	x0, [sp, #80]
  415694:	add	x0, x1, x0
  415698:	str	x0, [sp, #136]
  41569c:	nop
  4156a0:	ldp	x29, x30, [sp], #144
  4156a4:	ret
  4156a8:	stp	x29, x30, [sp, #-48]!
  4156ac:	mov	x29, sp
  4156b0:	str	x0, [sp, #24]
  4156b4:	str	x1, [sp, #16]
  4156b8:	ldr	x0, [sp, #16]
  4156bc:	cmp	x0, #0x0
  4156c0:	b.ne	4156d4 <ferror@plt+0x126d4>  // b.any
  4156c4:	mov	x1, #0x0                   	// #0
  4156c8:	mov	x0, #0x0                   	// #0
  4156cc:	bl	4153fc <ferror@plt+0x123fc>
  4156d0:	b	415788 <ferror@plt+0x12788>
  4156d4:	str	xzr, [sp, #40]
  4156d8:	ldr	x0, [sp, #24]
  4156dc:	cmp	x0, #0x0
  4156e0:	b.eq	41570c <ferror@plt+0x1270c>  // b.none
  4156e4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4156e8:	add	x1, x0, #0x980
  4156ec:	ldr	x0, [sp, #24]
  4156f0:	bl	41ae78 <_obstack_memory_used@@Base+0x9dc>
  4156f4:	str	x0, [sp, #40]
  4156f8:	ldr	x0, [sp, #40]
  4156fc:	cmp	x0, #0x0
  415700:	b.ne	41570c <ferror@plt+0x1270c>  // b.any
  415704:	mov	x0, #0x0                   	// #0
  415708:	b	415788 <ferror@plt+0x12788>
  41570c:	ldr	x1, [sp, #24]
  415710:	ldr	x0, [sp, #40]
  415714:	bl	4153fc <ferror@plt+0x123fc>
  415718:	str	x0, [sp, #32]
  41571c:	ldr	x0, [sp, #40]
  415720:	cmp	x0, #0x0
  415724:	b.eq	41575c <ferror@plt+0x1275c>  // b.none
  415728:	ldr	x0, [sp, #32]
  41572c:	add	x4, x0, #0x18
  415730:	ldr	x2, [sp, #16]
  415734:	ldr	x1, [sp, #16]
  415738:	mov	x0, #0x1000                	// #4096
  41573c:	cmp	x2, #0x1, lsl #12
  415740:	csel	x0, x1, x0, ls  // ls = plast
  415744:	mov	x3, x0
  415748:	mov	w2, #0x0                   	// #0
  41574c:	mov	x1, x4
  415750:	ldr	x0, [sp, #40]
  415754:	bl	4029a0 <setvbuf@plt>
  415758:	b	415784 <ferror@plt+0x12784>
  41575c:	ldr	x0, [sp, #32]
  415760:	str	xzr, [x0, #24]
  415764:	ldr	x0, [sp, #32]
  415768:	add	x0, x0, #0x20
  41576c:	ldr	x2, [sp, #16]
  415770:	mov	x1, #0x800                 	// #2048
  415774:	bl	41544c <ferror@plt+0x1244c>
  415778:	ldr	x0, [sp, #32]
  41577c:	add	x0, x0, #0x20
  415780:	bl	4160ec <ferror@plt+0x130ec>
  415784:	ldr	x0, [sp, #32]
  415788:	ldp	x29, x30, [sp], #48
  41578c:	ret
  415790:	sub	sp, sp, #0x10
  415794:	str	x0, [sp, #8]
  415798:	str	x1, [sp]
  41579c:	ldr	x0, [sp, #8]
  4157a0:	ldr	x1, [sp]
  4157a4:	str	x1, [x0, #8]
  4157a8:	nop
  4157ac:	add	sp, sp, #0x10
  4157b0:	ret
  4157b4:	sub	sp, sp, #0x10
  4157b8:	str	x0, [sp, #8]
  4157bc:	str	x1, [sp]
  4157c0:	ldr	x0, [sp, #8]
  4157c4:	ldr	x1, [sp]
  4157c8:	str	x1, [x0, #16]
  4157cc:	nop
  4157d0:	add	sp, sp, #0x10
  4157d4:	ret
  4157d8:	stp	x29, x30, [sp, #-80]!
  4157dc:	mov	x29, sp
  4157e0:	str	x19, [sp, #16]
  4157e4:	str	x0, [sp, #56]
  4157e8:	str	x1, [sp, #48]
  4157ec:	str	x2, [sp, #40]
  4157f0:	ldr	x0, [sp, #56]
  4157f4:	ldr	x0, [x0]
  4157f8:	mov	x3, x0
  4157fc:	ldr	x2, [sp, #40]
  415800:	mov	x1, #0x1                   	// #1
  415804:	ldr	x0, [sp, #48]
  415808:	bl	402c80 <fread_unlocked@plt>
  41580c:	str	x0, [sp, #72]
  415810:	bl	402f50 <__errno_location@plt>
  415814:	ldr	w0, [x0]
  415818:	str	w0, [sp, #68]
  41581c:	ldr	x1, [sp, #48]
  415820:	ldr	x0, [sp, #72]
  415824:	add	x0, x1, x0
  415828:	str	x0, [sp, #48]
  41582c:	ldr	x1, [sp, #40]
  415830:	ldr	x0, [sp, #72]
  415834:	sub	x0, x1, x0
  415838:	str	x0, [sp, #40]
  41583c:	ldr	x0, [sp, #40]
  415840:	cmp	x0, #0x0
  415844:	b.eq	415888 <ferror@plt+0x12888>  // b.none
  415848:	ldr	x0, [sp, #56]
  41584c:	ldr	x0, [x0]
  415850:	bl	402940 <ferror_unlocked@plt>
  415854:	cmp	w0, #0x0
  415858:	b.eq	415864 <ferror@plt+0x12864>  // b.none
  41585c:	ldr	w19, [sp, #68]
  415860:	b	415868 <ferror@plt+0x12868>
  415864:	mov	w19, #0x0                   	// #0
  415868:	bl	402f50 <__errno_location@plt>
  41586c:	str	w19, [x0]
  415870:	ldr	x0, [sp, #56]
  415874:	ldr	x1, [x0, #8]
  415878:	ldr	x0, [sp, #56]
  41587c:	ldr	x0, [x0, #16]
  415880:	blr	x1
  415884:	b	4157f0 <ferror@plt+0x127f0>
  415888:	nop
  41588c:	nop
  415890:	ldr	x19, [sp, #16]
  415894:	ldp	x29, x30, [sp], #80
  415898:	ret
  41589c:	stp	x29, x30, [sp, #-80]!
  4158a0:	mov	x29, sp
  4158a4:	str	x0, [sp, #40]
  4158a8:	str	x1, [sp, #32]
  4158ac:	str	x2, [sp, #24]
  4158b0:	ldr	x0, [sp, #40]
  4158b4:	ldr	x0, [x0]
  4158b8:	str	x0, [sp, #72]
  4158bc:	ldr	x0, [sp, #32]
  4158c0:	str	x0, [sp, #56]
  4158c4:	ldr	x1, [sp, #24]
  4158c8:	ldr	x0, [sp, #72]
  4158cc:	cmp	x1, x0
  4158d0:	b.hi	415914 <ferror@plt+0x12914>  // b.pmore
  4158d4:	ldr	x0, [sp, #40]
  4158d8:	add	x1, x0, #0x820
  4158dc:	mov	x2, #0x800                 	// #2048
  4158e0:	ldr	x0, [sp, #72]
  4158e4:	sub	x0, x2, x0
  4158e8:	add	x0, x1, x0
  4158ec:	ldr	x2, [sp, #24]
  4158f0:	mov	x1, x0
  4158f4:	ldr	x0, [sp, #32]
  4158f8:	bl	402880 <memcpy@plt>
  4158fc:	ldr	x1, [sp, #72]
  415900:	ldr	x0, [sp, #24]
  415904:	sub	x1, x1, x0
  415908:	ldr	x0, [sp, #40]
  41590c:	str	x1, [x0]
  415910:	b	4159f4 <ferror@plt+0x129f4>
  415914:	ldr	x0, [sp, #40]
  415918:	add	x1, x0, #0x820
  41591c:	mov	x2, #0x800                 	// #2048
  415920:	ldr	x0, [sp, #72]
  415924:	sub	x0, x2, x0
  415928:	add	x0, x1, x0
  41592c:	ldr	x2, [sp, #72]
  415930:	mov	x1, x0
  415934:	ldr	x0, [sp, #32]
  415938:	bl	402880 <memcpy@plt>
  41593c:	ldr	x1, [sp, #56]
  415940:	ldr	x0, [sp, #72]
  415944:	add	x0, x1, x0
  415948:	str	x0, [sp, #32]
  41594c:	ldr	x1, [sp, #24]
  415950:	ldr	x0, [sp, #72]
  415954:	sub	x0, x1, x0
  415958:	str	x0, [sp, #24]
  41595c:	ldr	x0, [sp, #32]
  415960:	and	x0, x0, #0x7
  415964:	cmp	x0, #0x0
  415968:	b.ne	4159cc <ferror@plt+0x129cc>  // b.any
  41596c:	ldr	x0, [sp, #32]
  415970:	str	x0, [sp, #64]
  415974:	b	4159b8 <ferror@plt+0x129b8>
  415978:	ldr	x0, [sp, #40]
  41597c:	add	x0, x0, #0x8
  415980:	ldr	x1, [sp, #64]
  415984:	bl	415b10 <ferror@plt+0x12b10>
  415988:	ldr	x0, [sp, #64]
  41598c:	add	x0, x0, #0x800
  415990:	str	x0, [sp, #64]
  415994:	ldr	x0, [sp, #24]
  415998:	sub	x0, x0, #0x800
  41599c:	str	x0, [sp, #24]
  4159a0:	ldr	x0, [sp, #24]
  4159a4:	cmp	x0, #0x0
  4159a8:	b.ne	4159b8 <ferror@plt+0x129b8>  // b.any
  4159ac:	ldr	x0, [sp, #40]
  4159b0:	str	xzr, [x0]
  4159b4:	b	4159f4 <ferror@plt+0x129f4>
  4159b8:	ldr	x0, [sp, #24]
  4159bc:	cmp	x0, #0x7ff
  4159c0:	b.hi	415978 <ferror@plt+0x12978>  // b.pmore
  4159c4:	ldr	x0, [sp, #64]
  4159c8:	str	x0, [sp, #32]
  4159cc:	ldr	x0, [sp, #40]
  4159d0:	add	x2, x0, #0x8
  4159d4:	ldr	x0, [sp, #40]
  4159d8:	add	x0, x0, #0x820
  4159dc:	mov	x1, x0
  4159e0:	mov	x0, x2
  4159e4:	bl	415b10 <ferror@plt+0x12b10>
  4159e8:	mov	x0, #0x800                 	// #2048
  4159ec:	str	x0, [sp, #72]
  4159f0:	b	4158bc <ferror@plt+0x128bc>
  4159f4:	ldp	x29, x30, [sp], #80
  4159f8:	ret
  4159fc:	stp	x29, x30, [sp, #-48]!
  415a00:	mov	x29, sp
  415a04:	str	x0, [sp, #40]
  415a08:	str	x1, [sp, #32]
  415a0c:	str	x2, [sp, #24]
  415a10:	ldr	x0, [sp, #40]
  415a14:	ldr	x0, [x0]
  415a18:	cmp	x0, #0x0
  415a1c:	b.eq	415a34 <ferror@plt+0x12a34>  // b.none
  415a20:	ldr	x2, [sp, #24]
  415a24:	ldr	x1, [sp, #32]
  415a28:	ldr	x0, [sp, #40]
  415a2c:	bl	4157d8 <ferror@plt+0x127d8>
  415a30:	b	415a48 <ferror@plt+0x12a48>
  415a34:	ldr	x0, [sp, #40]
  415a38:	add	x0, x0, #0x18
  415a3c:	ldr	x2, [sp, #24]
  415a40:	ldr	x1, [sp, #32]
  415a44:	bl	41589c <ferror@plt+0x1289c>
  415a48:	nop
  415a4c:	ldp	x29, x30, [sp], #48
  415a50:	ret
  415a54:	stp	x29, x30, [sp, #-48]!
  415a58:	mov	x29, sp
  415a5c:	str	x0, [sp, #24]
  415a60:	ldr	x0, [sp, #24]
  415a64:	ldr	x0, [x0]
  415a68:	str	x0, [sp, #40]
  415a6c:	mov	x1, #0x1038                	// #4152
  415a70:	ldr	x0, [sp, #24]
  415a74:	bl	402ea0 <explicit_bzero@plt>
  415a78:	ldr	x0, [sp, #24]
  415a7c:	bl	402d20 <free@plt>
  415a80:	ldr	x0, [sp, #40]
  415a84:	cmp	x0, #0x0
  415a88:	b.eq	415a98 <ferror@plt+0x12a98>  // b.none
  415a8c:	ldr	x0, [sp, #40]
  415a90:	bl	4195f0 <ferror@plt+0x165f0>
  415a94:	b	415a9c <ferror@plt+0x12a9c>
  415a98:	mov	w0, #0x0                   	// #0
  415a9c:	ldp	x29, x30, [sp], #48
  415aa0:	ret
  415aa4:	sub	sp, sp, #0x20
  415aa8:	str	x0, [sp, #8]
  415aac:	mov	x0, #0xffffffffffffffff    	// #-1
  415ab0:	str	x0, [sp, #24]
  415ab4:	ldr	x1, [sp, #8]
  415ab8:	ldr	x0, [sp, #24]
  415abc:	and	x0, x1, x0
  415ac0:	add	sp, sp, #0x20
  415ac4:	ret
  415ac8:	sub	sp, sp, #0x30
  415acc:	str	x0, [sp, #8]
  415ad0:	str	x1, [sp]
  415ad4:	ldr	x0, [sp, #8]
  415ad8:	str	x0, [sp, #40]
  415adc:	ldr	x0, [sp, #40]
  415ae0:	str	x0, [sp, #32]
  415ae4:	ldr	x0, [sp]
  415ae8:	and	x0, x0, #0x7f8
  415aec:	ldr	x1, [sp, #32]
  415af0:	add	x0, x1, x0
  415af4:	str	x0, [sp, #24]
  415af8:	ldr	x0, [sp, #24]
  415afc:	str	x0, [sp, #16]
  415b00:	ldr	x0, [sp, #16]
  415b04:	ldr	x0, [x0]
  415b08:	add	sp, sp, #0x30
  415b0c:	ret
  415b10:	stp	x29, x30, [sp, #-192]!
  415b14:	mov	x29, sp
  415b18:	str	x0, [sp, #24]
  415b1c:	str	x1, [sp, #16]
  415b20:	ldr	x0, [sp, #24]
  415b24:	ldr	x0, [x0, #2048]
  415b28:	str	x0, [sp, #184]
  415b2c:	ldr	x0, [sp, #24]
  415b30:	ldr	x1, [x0, #2056]
  415b34:	ldr	x0, [sp, #24]
  415b38:	ldr	x0, [x0, #2064]
  415b3c:	add	x2, x0, #0x1
  415b40:	ldr	x0, [sp, #24]
  415b44:	str	x2, [x0, #2064]
  415b48:	ldr	x0, [sp, #24]
  415b4c:	ldr	x0, [x0, #2064]
  415b50:	add	x0, x1, x0
  415b54:	str	x0, [sp, #176]
  415b58:	ldr	x0, [sp, #24]
  415b5c:	str	x0, [sp, #168]
  415b60:	ldr	x0, [sp, #16]
  415b64:	str	x0, [sp, #160]
  415b68:	ldr	x0, [sp, #168]
  415b6c:	add	x0, x0, #0x400
  415b70:	ldr	x1, [x0]
  415b74:	ldr	x0, [sp, #184]
  415b78:	lsl	x2, x0, #21
  415b7c:	ldr	x0, [sp, #184]
  415b80:	eor	x0, x2, x0
  415b84:	sub	x0, x1, x0
  415b88:	sub	x0, x0, #0x1
  415b8c:	str	x0, [sp, #184]
  415b90:	ldr	x0, [sp, #168]
  415b94:	ldr	x0, [x0]
  415b98:	str	x0, [sp, #152]
  415b9c:	ldr	x0, [sp, #24]
  415ba0:	ldr	x1, [sp, #152]
  415ba4:	bl	415ac8 <ferror@plt+0x12ac8>
  415ba8:	mov	x1, x0
  415bac:	ldr	x0, [sp, #184]
  415bb0:	add	x0, x1, x0
  415bb4:	ldr	x1, [sp, #176]
  415bb8:	add	x0, x1, x0
  415bbc:	str	x0, [sp, #144]
  415bc0:	ldr	x0, [sp, #168]
  415bc4:	ldr	x1, [sp, #144]
  415bc8:	str	x1, [x0]
  415bcc:	ldr	x2, [sp, #24]
  415bd0:	ldr	x0, [sp, #144]
  415bd4:	lsr	x0, x0, #8
  415bd8:	mov	x1, x0
  415bdc:	mov	x0, x2
  415be0:	bl	415ac8 <ferror@plt+0x12ac8>
  415be4:	mov	x1, x0
  415be8:	ldr	x0, [sp, #152]
  415bec:	add	x0, x1, x0
  415bf0:	bl	415aa4 <ferror@plt+0x12aa4>
  415bf4:	str	x0, [sp, #176]
  415bf8:	ldr	x0, [sp, #160]
  415bfc:	ldr	x1, [sp, #176]
  415c00:	str	x1, [x0]
  415c04:	ldr	x0, [sp, #184]
  415c08:	bl	415aa4 <ferror@plt+0x12aa4>
  415c0c:	lsr	x1, x0, #5
  415c10:	ldr	x0, [sp, #184]
  415c14:	eor	x1, x1, x0
  415c18:	ldr	x0, [sp, #168]
  415c1c:	add	x0, x0, #0x408
  415c20:	ldr	x0, [x0]
  415c24:	add	x0, x1, x0
  415c28:	str	x0, [sp, #184]
  415c2c:	ldr	x0, [sp, #168]
  415c30:	ldr	x0, [x0, #8]
  415c34:	str	x0, [sp, #136]
  415c38:	ldr	x0, [sp, #24]
  415c3c:	ldr	x1, [sp, #136]
  415c40:	bl	415ac8 <ferror@plt+0x12ac8>
  415c44:	mov	x1, x0
  415c48:	ldr	x0, [sp, #184]
  415c4c:	add	x0, x1, x0
  415c50:	ldr	x1, [sp, #176]
  415c54:	add	x0, x1, x0
  415c58:	str	x0, [sp, #128]
  415c5c:	ldr	x0, [sp, #168]
  415c60:	add	x0, x0, #0x8
  415c64:	ldr	x1, [sp, #128]
  415c68:	str	x1, [x0]
  415c6c:	ldr	x2, [sp, #24]
  415c70:	ldr	x0, [sp, #128]
  415c74:	lsr	x0, x0, #8
  415c78:	mov	x1, x0
  415c7c:	mov	x0, x2
  415c80:	bl	415ac8 <ferror@plt+0x12ac8>
  415c84:	mov	x1, x0
  415c88:	ldr	x0, [sp, #136]
  415c8c:	add	x0, x1, x0
  415c90:	bl	415aa4 <ferror@plt+0x12aa4>
  415c94:	str	x0, [sp, #176]
  415c98:	ldr	x0, [sp, #160]
  415c9c:	add	x0, x0, #0x8
  415ca0:	ldr	x1, [sp, #176]
  415ca4:	str	x1, [x0]
  415ca8:	ldr	x0, [sp, #184]
  415cac:	lsl	x1, x0, #12
  415cb0:	ldr	x0, [sp, #184]
  415cb4:	eor	x1, x1, x0
  415cb8:	ldr	x0, [sp, #168]
  415cbc:	add	x0, x0, #0x410
  415cc0:	ldr	x0, [x0]
  415cc4:	add	x0, x1, x0
  415cc8:	str	x0, [sp, #184]
  415ccc:	ldr	x0, [sp, #168]
  415cd0:	ldr	x0, [x0, #16]
  415cd4:	str	x0, [sp, #120]
  415cd8:	ldr	x0, [sp, #24]
  415cdc:	ldr	x1, [sp, #120]
  415ce0:	bl	415ac8 <ferror@plt+0x12ac8>
  415ce4:	mov	x1, x0
  415ce8:	ldr	x0, [sp, #184]
  415cec:	add	x0, x1, x0
  415cf0:	ldr	x1, [sp, #176]
  415cf4:	add	x0, x1, x0
  415cf8:	str	x0, [sp, #112]
  415cfc:	ldr	x0, [sp, #168]
  415d00:	add	x0, x0, #0x10
  415d04:	ldr	x1, [sp, #112]
  415d08:	str	x1, [x0]
  415d0c:	ldr	x2, [sp, #24]
  415d10:	ldr	x0, [sp, #112]
  415d14:	lsr	x0, x0, #8
  415d18:	mov	x1, x0
  415d1c:	mov	x0, x2
  415d20:	bl	415ac8 <ferror@plt+0x12ac8>
  415d24:	mov	x1, x0
  415d28:	ldr	x0, [sp, #120]
  415d2c:	add	x0, x1, x0
  415d30:	bl	415aa4 <ferror@plt+0x12aa4>
  415d34:	str	x0, [sp, #176]
  415d38:	ldr	x0, [sp, #160]
  415d3c:	add	x0, x0, #0x10
  415d40:	ldr	x1, [sp, #176]
  415d44:	str	x1, [x0]
  415d48:	ldr	x0, [sp, #184]
  415d4c:	bl	415aa4 <ferror@plt+0x12aa4>
  415d50:	lsr	x1, x0, #33
  415d54:	ldr	x0, [sp, #184]
  415d58:	eor	x1, x1, x0
  415d5c:	ldr	x0, [sp, #168]
  415d60:	add	x0, x0, #0x418
  415d64:	ldr	x0, [x0]
  415d68:	add	x0, x1, x0
  415d6c:	str	x0, [sp, #184]
  415d70:	ldr	x0, [sp, #168]
  415d74:	ldr	x0, [x0, #24]
  415d78:	str	x0, [sp, #104]
  415d7c:	ldr	x0, [sp, #24]
  415d80:	ldr	x1, [sp, #104]
  415d84:	bl	415ac8 <ferror@plt+0x12ac8>
  415d88:	mov	x1, x0
  415d8c:	ldr	x0, [sp, #184]
  415d90:	add	x0, x1, x0
  415d94:	ldr	x1, [sp, #176]
  415d98:	add	x0, x1, x0
  415d9c:	str	x0, [sp, #96]
  415da0:	ldr	x0, [sp, #168]
  415da4:	add	x0, x0, #0x18
  415da8:	ldr	x1, [sp, #96]
  415dac:	str	x1, [x0]
  415db0:	ldr	x2, [sp, #24]
  415db4:	ldr	x0, [sp, #96]
  415db8:	lsr	x0, x0, #8
  415dbc:	mov	x1, x0
  415dc0:	mov	x0, x2
  415dc4:	bl	415ac8 <ferror@plt+0x12ac8>
  415dc8:	mov	x1, x0
  415dcc:	ldr	x0, [sp, #104]
  415dd0:	add	x0, x1, x0
  415dd4:	bl	415aa4 <ferror@plt+0x12aa4>
  415dd8:	str	x0, [sp, #176]
  415ddc:	ldr	x0, [sp, #160]
  415de0:	add	x0, x0, #0x18
  415de4:	ldr	x1, [sp, #176]
  415de8:	str	x1, [x0]
  415dec:	ldr	x0, [sp, #160]
  415df0:	add	x0, x0, #0x20
  415df4:	str	x0, [sp, #160]
  415df8:	ldr	x0, [sp, #168]
  415dfc:	add	x0, x0, #0x20
  415e00:	str	x0, [sp, #168]
  415e04:	ldr	x0, [sp, #24]
  415e08:	add	x0, x0, #0x400
  415e0c:	ldr	x1, [sp, #168]
  415e10:	cmp	x1, x0
  415e14:	b.cc	415b68 <ferror@plt+0x12b68>  // b.lo, b.ul, b.last
  415e18:	ldr	x0, [sp, #168]
  415e1c:	sub	x0, x0, #0x400
  415e20:	ldr	x1, [x0]
  415e24:	ldr	x0, [sp, #184]
  415e28:	lsl	x2, x0, #21
  415e2c:	ldr	x0, [sp, #184]
  415e30:	eor	x0, x2, x0
  415e34:	sub	x0, x1, x0
  415e38:	sub	x0, x0, #0x1
  415e3c:	str	x0, [sp, #184]
  415e40:	ldr	x0, [sp, #168]
  415e44:	ldr	x0, [x0]
  415e48:	str	x0, [sp, #88]
  415e4c:	ldr	x0, [sp, #24]
  415e50:	ldr	x1, [sp, #88]
  415e54:	bl	415ac8 <ferror@plt+0x12ac8>
  415e58:	mov	x1, x0
  415e5c:	ldr	x0, [sp, #184]
  415e60:	add	x0, x1, x0
  415e64:	ldr	x1, [sp, #176]
  415e68:	add	x0, x1, x0
  415e6c:	str	x0, [sp, #80]
  415e70:	ldr	x0, [sp, #168]
  415e74:	ldr	x1, [sp, #80]
  415e78:	str	x1, [x0]
  415e7c:	ldr	x2, [sp, #24]
  415e80:	ldr	x0, [sp, #80]
  415e84:	lsr	x0, x0, #8
  415e88:	mov	x1, x0
  415e8c:	mov	x0, x2
  415e90:	bl	415ac8 <ferror@plt+0x12ac8>
  415e94:	mov	x1, x0
  415e98:	ldr	x0, [sp, #88]
  415e9c:	add	x0, x1, x0
  415ea0:	bl	415aa4 <ferror@plt+0x12aa4>
  415ea4:	str	x0, [sp, #176]
  415ea8:	ldr	x0, [sp, #160]
  415eac:	ldr	x1, [sp, #176]
  415eb0:	str	x1, [x0]
  415eb4:	ldr	x0, [sp, #184]
  415eb8:	bl	415aa4 <ferror@plt+0x12aa4>
  415ebc:	lsr	x1, x0, #5
  415ec0:	ldr	x0, [sp, #184]
  415ec4:	eor	x1, x1, x0
  415ec8:	ldr	x0, [sp, #168]
  415ecc:	sub	x0, x0, #0x3f8
  415ed0:	ldr	x0, [x0]
  415ed4:	add	x0, x1, x0
  415ed8:	str	x0, [sp, #184]
  415edc:	ldr	x0, [sp, #168]
  415ee0:	ldr	x0, [x0, #8]
  415ee4:	str	x0, [sp, #72]
  415ee8:	ldr	x0, [sp, #24]
  415eec:	ldr	x1, [sp, #72]
  415ef0:	bl	415ac8 <ferror@plt+0x12ac8>
  415ef4:	mov	x1, x0
  415ef8:	ldr	x0, [sp, #184]
  415efc:	add	x0, x1, x0
  415f00:	ldr	x1, [sp, #176]
  415f04:	add	x0, x1, x0
  415f08:	str	x0, [sp, #64]
  415f0c:	ldr	x0, [sp, #168]
  415f10:	add	x0, x0, #0x8
  415f14:	ldr	x1, [sp, #64]
  415f18:	str	x1, [x0]
  415f1c:	ldr	x2, [sp, #24]
  415f20:	ldr	x0, [sp, #64]
  415f24:	lsr	x0, x0, #8
  415f28:	mov	x1, x0
  415f2c:	mov	x0, x2
  415f30:	bl	415ac8 <ferror@plt+0x12ac8>
  415f34:	mov	x1, x0
  415f38:	ldr	x0, [sp, #72]
  415f3c:	add	x0, x1, x0
  415f40:	bl	415aa4 <ferror@plt+0x12aa4>
  415f44:	str	x0, [sp, #176]
  415f48:	ldr	x0, [sp, #160]
  415f4c:	add	x0, x0, #0x8
  415f50:	ldr	x1, [sp, #176]
  415f54:	str	x1, [x0]
  415f58:	ldr	x0, [sp, #184]
  415f5c:	lsl	x1, x0, #12
  415f60:	ldr	x0, [sp, #184]
  415f64:	eor	x1, x1, x0
  415f68:	ldr	x0, [sp, #168]
  415f6c:	sub	x0, x0, #0x3f0
  415f70:	ldr	x0, [x0]
  415f74:	add	x0, x1, x0
  415f78:	str	x0, [sp, #184]
  415f7c:	ldr	x0, [sp, #168]
  415f80:	ldr	x0, [x0, #16]
  415f84:	str	x0, [sp, #56]
  415f88:	ldr	x0, [sp, #24]
  415f8c:	ldr	x1, [sp, #56]
  415f90:	bl	415ac8 <ferror@plt+0x12ac8>
  415f94:	mov	x1, x0
  415f98:	ldr	x0, [sp, #184]
  415f9c:	add	x0, x1, x0
  415fa0:	ldr	x1, [sp, #176]
  415fa4:	add	x0, x1, x0
  415fa8:	str	x0, [sp, #48]
  415fac:	ldr	x0, [sp, #168]
  415fb0:	add	x0, x0, #0x10
  415fb4:	ldr	x1, [sp, #48]
  415fb8:	str	x1, [x0]
  415fbc:	ldr	x2, [sp, #24]
  415fc0:	ldr	x0, [sp, #48]
  415fc4:	lsr	x0, x0, #8
  415fc8:	mov	x1, x0
  415fcc:	mov	x0, x2
  415fd0:	bl	415ac8 <ferror@plt+0x12ac8>
  415fd4:	mov	x1, x0
  415fd8:	ldr	x0, [sp, #56]
  415fdc:	add	x0, x1, x0
  415fe0:	bl	415aa4 <ferror@plt+0x12aa4>
  415fe4:	str	x0, [sp, #176]
  415fe8:	ldr	x0, [sp, #160]
  415fec:	add	x0, x0, #0x10
  415ff0:	ldr	x1, [sp, #176]
  415ff4:	str	x1, [x0]
  415ff8:	ldr	x0, [sp, #184]
  415ffc:	bl	415aa4 <ferror@plt+0x12aa4>
  416000:	lsr	x1, x0, #33
  416004:	ldr	x0, [sp, #184]
  416008:	eor	x1, x1, x0
  41600c:	ldr	x0, [sp, #168]
  416010:	sub	x0, x0, #0x3e8
  416014:	ldr	x0, [x0]
  416018:	add	x0, x1, x0
  41601c:	str	x0, [sp, #184]
  416020:	ldr	x0, [sp, #168]
  416024:	ldr	x0, [x0, #24]
  416028:	str	x0, [sp, #40]
  41602c:	ldr	x0, [sp, #24]
  416030:	ldr	x1, [sp, #40]
  416034:	bl	415ac8 <ferror@plt+0x12ac8>
  416038:	mov	x1, x0
  41603c:	ldr	x0, [sp, #184]
  416040:	add	x0, x1, x0
  416044:	ldr	x1, [sp, #176]
  416048:	add	x0, x1, x0
  41604c:	str	x0, [sp, #32]
  416050:	ldr	x0, [sp, #168]
  416054:	add	x0, x0, #0x18
  416058:	ldr	x1, [sp, #32]
  41605c:	str	x1, [x0]
  416060:	ldr	x2, [sp, #24]
  416064:	ldr	x0, [sp, #32]
  416068:	lsr	x0, x0, #8
  41606c:	mov	x1, x0
  416070:	mov	x0, x2
  416074:	bl	415ac8 <ferror@plt+0x12ac8>
  416078:	mov	x1, x0
  41607c:	ldr	x0, [sp, #40]
  416080:	add	x0, x1, x0
  416084:	bl	415aa4 <ferror@plt+0x12aa4>
  416088:	str	x0, [sp, #176]
  41608c:	ldr	x0, [sp, #160]
  416090:	add	x0, x0, #0x18
  416094:	ldr	x1, [sp, #176]
  416098:	str	x1, [x0]
  41609c:	ldr	x0, [sp, #160]
  4160a0:	add	x0, x0, #0x20
  4160a4:	str	x0, [sp, #160]
  4160a8:	ldr	x0, [sp, #168]
  4160ac:	add	x0, x0, #0x20
  4160b0:	str	x0, [sp, #168]
  4160b4:	ldr	x0, [sp, #24]
  4160b8:	add	x0, x0, #0x800
  4160bc:	ldr	x1, [sp, #168]
  4160c0:	cmp	x1, x0
  4160c4:	b.cc	415e18 <ferror@plt+0x12e18>  // b.lo, b.ul, b.last
  4160c8:	ldr	x0, [sp, #24]
  4160cc:	ldr	x1, [sp, #184]
  4160d0:	str	x1, [x0, #2048]
  4160d4:	ldr	x0, [sp, #24]
  4160d8:	ldr	x1, [sp, #176]
  4160dc:	str	x1, [x0, #2056]
  4160e0:	nop
  4160e4:	ldp	x29, x30, [sp], #192
  4160e8:	ret
  4160ec:	stp	x29, x30, [sp, #-112]!
  4160f0:	mov	x29, sp
  4160f4:	str	x0, [sp, #24]
  4160f8:	mov	x0, #0x4b7c                	// #19324
  4160fc:	movk	x0, #0xa288, lsl #16
  416100:	movk	x0, #0x4677, lsl #32
  416104:	movk	x0, #0x647c, lsl #48
  416108:	str	x0, [sp, #104]
  41610c:	mov	x0, #0xc862                	// #51298
  416110:	movk	x0, #0xc73a, lsl #16
  416114:	movk	x0, #0xb322, lsl #32
  416118:	movk	x0, #0xb9f8, lsl #48
  41611c:	str	x0, [sp, #96]
  416120:	mov	x0, #0x12a0                	// #4768
  416124:	movk	x0, #0x3d47, lsl #16
  416128:	movk	x0, #0xa505, lsl #32
  41612c:	movk	x0, #0x8c0e, lsl #48
  416130:	str	x0, [sp, #88]
  416134:	mov	x0, #0x5524                	// #21796
  416138:	movk	x0, #0x4a59, lsl #16
  41613c:	movk	x0, #0x2e82, lsl #32
  416140:	movk	x0, #0xb29b, lsl #48
  416144:	str	x0, [sp, #80]
  416148:	mov	x0, #0xe0ce                	// #57550
  41614c:	movk	x0, #0x8355, lsl #16
  416150:	movk	x0, #0x53db, lsl #32
  416154:	movk	x0, #0x82f0, lsl #48
  416158:	str	x0, [sp, #72]
  41615c:	mov	x0, #0x9315                	// #37653
  416160:	movk	x0, #0xa5a0, lsl #16
  416164:	movk	x0, #0x4a0f, lsl #32
  416168:	movk	x0, #0x48fe, lsl #48
  41616c:	str	x0, [sp, #64]
  416170:	mov	x0, #0x89ed                	// #35309
  416174:	movk	x0, #0xcbfc, lsl #16
  416178:	movk	x0, #0x5bf2, lsl #32
  41617c:	movk	x0, #0xae98, lsl #48
  416180:	str	x0, [sp, #56]
  416184:	mov	x0, #0xc0ab                	// #49323
  416188:	movk	x0, #0x6c44, lsl #16
  41618c:	movk	x0, #0x704f, lsl #32
  416190:	movk	x0, #0x98f5, lsl #48
  416194:	str	x0, [sp, #48]
  416198:	str	wzr, [sp, #44]
  41619c:	b	41650c <ferror@plt+0x1350c>
  4161a0:	ldr	x0, [sp, #24]
  4161a4:	ldrsw	x1, [sp, #44]
  4161a8:	ldr	x0, [x0, x1, lsl #3]
  4161ac:	ldr	x1, [sp, #104]
  4161b0:	add	x0, x1, x0
  4161b4:	str	x0, [sp, #104]
  4161b8:	ldr	w0, [sp, #44]
  4161bc:	add	w1, w0, #0x1
  4161c0:	ldr	x0, [sp, #24]
  4161c4:	sxtw	x1, w1
  4161c8:	ldr	x0, [x0, x1, lsl #3]
  4161cc:	ldr	x1, [sp, #96]
  4161d0:	add	x0, x1, x0
  4161d4:	str	x0, [sp, #96]
  4161d8:	ldr	w0, [sp, #44]
  4161dc:	add	w1, w0, #0x2
  4161e0:	ldr	x0, [sp, #24]
  4161e4:	sxtw	x1, w1
  4161e8:	ldr	x0, [x0, x1, lsl #3]
  4161ec:	ldr	x1, [sp, #88]
  4161f0:	add	x0, x1, x0
  4161f4:	str	x0, [sp, #88]
  4161f8:	ldr	w0, [sp, #44]
  4161fc:	add	w1, w0, #0x3
  416200:	ldr	x0, [sp, #24]
  416204:	sxtw	x1, w1
  416208:	ldr	x0, [x0, x1, lsl #3]
  41620c:	ldr	x1, [sp, #80]
  416210:	add	x0, x1, x0
  416214:	str	x0, [sp, #80]
  416218:	ldr	w0, [sp, #44]
  41621c:	add	w1, w0, #0x4
  416220:	ldr	x0, [sp, #24]
  416224:	sxtw	x1, w1
  416228:	ldr	x0, [x0, x1, lsl #3]
  41622c:	ldr	x1, [sp, #72]
  416230:	add	x0, x1, x0
  416234:	str	x0, [sp, #72]
  416238:	ldr	w0, [sp, #44]
  41623c:	add	w1, w0, #0x5
  416240:	ldr	x0, [sp, #24]
  416244:	sxtw	x1, w1
  416248:	ldr	x0, [x0, x1, lsl #3]
  41624c:	ldr	x1, [sp, #64]
  416250:	add	x0, x1, x0
  416254:	str	x0, [sp, #64]
  416258:	ldr	w0, [sp, #44]
  41625c:	add	w1, w0, #0x6
  416260:	ldr	x0, [sp, #24]
  416264:	sxtw	x1, w1
  416268:	ldr	x0, [x0, x1, lsl #3]
  41626c:	ldr	x1, [sp, #56]
  416270:	add	x0, x1, x0
  416274:	str	x0, [sp, #56]
  416278:	ldr	w0, [sp, #44]
  41627c:	add	w1, w0, #0x7
  416280:	ldr	x0, [sp, #24]
  416284:	sxtw	x1, w1
  416288:	ldr	x0, [x0, x1, lsl #3]
  41628c:	ldr	x1, [sp, #48]
  416290:	add	x0, x1, x0
  416294:	str	x0, [sp, #48]
  416298:	ldr	x1, [sp, #104]
  41629c:	ldr	x0, [sp, #72]
  4162a0:	sub	x0, x1, x0
  4162a4:	str	x0, [sp, #104]
  4162a8:	ldr	x0, [sp, #48]
  4162ac:	bl	415aa4 <ferror@plt+0x12aa4>
  4162b0:	lsr	x0, x0, #9
  4162b4:	ldr	x1, [sp, #64]
  4162b8:	eor	x0, x1, x0
  4162bc:	str	x0, [sp, #64]
  4162c0:	ldr	x1, [sp, #48]
  4162c4:	ldr	x0, [sp, #104]
  4162c8:	add	x0, x1, x0
  4162cc:	str	x0, [sp, #48]
  4162d0:	ldr	x1, [sp, #96]
  4162d4:	ldr	x0, [sp, #64]
  4162d8:	sub	x0, x1, x0
  4162dc:	str	x0, [sp, #96]
  4162e0:	ldr	x0, [sp, #104]
  4162e4:	lsl	x0, x0, #9
  4162e8:	ldr	x1, [sp, #56]
  4162ec:	eor	x0, x1, x0
  4162f0:	str	x0, [sp, #56]
  4162f4:	ldr	x1, [sp, #104]
  4162f8:	ldr	x0, [sp, #96]
  4162fc:	add	x0, x1, x0
  416300:	str	x0, [sp, #104]
  416304:	ldr	x1, [sp, #88]
  416308:	ldr	x0, [sp, #56]
  41630c:	sub	x0, x1, x0
  416310:	str	x0, [sp, #88]
  416314:	ldr	x0, [sp, #96]
  416318:	bl	415aa4 <ferror@plt+0x12aa4>
  41631c:	lsr	x0, x0, #23
  416320:	ldr	x1, [sp, #48]
  416324:	eor	x0, x1, x0
  416328:	str	x0, [sp, #48]
  41632c:	ldr	x1, [sp, #96]
  416330:	ldr	x0, [sp, #88]
  416334:	add	x0, x1, x0
  416338:	str	x0, [sp, #96]
  41633c:	ldr	x1, [sp, #80]
  416340:	ldr	x0, [sp, #48]
  416344:	sub	x0, x1, x0
  416348:	str	x0, [sp, #80]
  41634c:	ldr	x0, [sp, #88]
  416350:	lsl	x0, x0, #15
  416354:	ldr	x1, [sp, #104]
  416358:	eor	x0, x1, x0
  41635c:	str	x0, [sp, #104]
  416360:	ldr	x1, [sp, #88]
  416364:	ldr	x0, [sp, #80]
  416368:	add	x0, x1, x0
  41636c:	str	x0, [sp, #88]
  416370:	ldr	x1, [sp, #72]
  416374:	ldr	x0, [sp, #104]
  416378:	sub	x0, x1, x0
  41637c:	str	x0, [sp, #72]
  416380:	ldr	x0, [sp, #80]
  416384:	bl	415aa4 <ferror@plt+0x12aa4>
  416388:	lsr	x0, x0, #14
  41638c:	ldr	x1, [sp, #96]
  416390:	eor	x0, x1, x0
  416394:	str	x0, [sp, #96]
  416398:	ldr	x1, [sp, #80]
  41639c:	ldr	x0, [sp, #72]
  4163a0:	add	x0, x1, x0
  4163a4:	str	x0, [sp, #80]
  4163a8:	ldr	x1, [sp, #64]
  4163ac:	ldr	x0, [sp, #96]
  4163b0:	sub	x0, x1, x0
  4163b4:	str	x0, [sp, #64]
  4163b8:	ldr	x0, [sp, #72]
  4163bc:	lsl	x0, x0, #20
  4163c0:	ldr	x1, [sp, #88]
  4163c4:	eor	x0, x1, x0
  4163c8:	str	x0, [sp, #88]
  4163cc:	ldr	x1, [sp, #72]
  4163d0:	ldr	x0, [sp, #64]
  4163d4:	add	x0, x1, x0
  4163d8:	str	x0, [sp, #72]
  4163dc:	ldr	x1, [sp, #56]
  4163e0:	ldr	x0, [sp, #88]
  4163e4:	sub	x0, x1, x0
  4163e8:	str	x0, [sp, #56]
  4163ec:	ldr	x0, [sp, #64]
  4163f0:	bl	415aa4 <ferror@plt+0x12aa4>
  4163f4:	lsr	x0, x0, #17
  4163f8:	ldr	x1, [sp, #80]
  4163fc:	eor	x0, x1, x0
  416400:	str	x0, [sp, #80]
  416404:	ldr	x1, [sp, #64]
  416408:	ldr	x0, [sp, #56]
  41640c:	add	x0, x1, x0
  416410:	str	x0, [sp, #64]
  416414:	ldr	x1, [sp, #48]
  416418:	ldr	x0, [sp, #80]
  41641c:	sub	x0, x1, x0
  416420:	str	x0, [sp, #48]
  416424:	ldr	x0, [sp, #56]
  416428:	lsl	x0, x0, #14
  41642c:	ldr	x1, [sp, #72]
  416430:	eor	x0, x1, x0
  416434:	str	x0, [sp, #72]
  416438:	ldr	x1, [sp, #56]
  41643c:	ldr	x0, [sp, #48]
  416440:	add	x0, x1, x0
  416444:	str	x0, [sp, #56]
  416448:	ldr	x0, [sp, #24]
  41644c:	ldrsw	x1, [sp, #44]
  416450:	ldr	x2, [sp, #104]
  416454:	str	x2, [x0, x1, lsl #3]
  416458:	ldr	w0, [sp, #44]
  41645c:	add	w1, w0, #0x1
  416460:	ldr	x0, [sp, #24]
  416464:	sxtw	x1, w1
  416468:	ldr	x2, [sp, #96]
  41646c:	str	x2, [x0, x1, lsl #3]
  416470:	ldr	w0, [sp, #44]
  416474:	add	w1, w0, #0x2
  416478:	ldr	x0, [sp, #24]
  41647c:	sxtw	x1, w1
  416480:	ldr	x2, [sp, #88]
  416484:	str	x2, [x0, x1, lsl #3]
  416488:	ldr	w0, [sp, #44]
  41648c:	add	w1, w0, #0x3
  416490:	ldr	x0, [sp, #24]
  416494:	sxtw	x1, w1
  416498:	ldr	x2, [sp, #80]
  41649c:	str	x2, [x0, x1, lsl #3]
  4164a0:	ldr	w0, [sp, #44]
  4164a4:	add	w1, w0, #0x4
  4164a8:	ldr	x0, [sp, #24]
  4164ac:	sxtw	x1, w1
  4164b0:	ldr	x2, [sp, #72]
  4164b4:	str	x2, [x0, x1, lsl #3]
  4164b8:	ldr	w0, [sp, #44]
  4164bc:	add	w1, w0, #0x5
  4164c0:	ldr	x0, [sp, #24]
  4164c4:	sxtw	x1, w1
  4164c8:	ldr	x2, [sp, #64]
  4164cc:	str	x2, [x0, x1, lsl #3]
  4164d0:	ldr	w0, [sp, #44]
  4164d4:	add	w1, w0, #0x6
  4164d8:	ldr	x0, [sp, #24]
  4164dc:	sxtw	x1, w1
  4164e0:	ldr	x2, [sp, #56]
  4164e4:	str	x2, [x0, x1, lsl #3]
  4164e8:	ldr	w0, [sp, #44]
  4164ec:	add	w1, w0, #0x7
  4164f0:	ldr	x0, [sp, #24]
  4164f4:	sxtw	x1, w1
  4164f8:	ldr	x2, [sp, #48]
  4164fc:	str	x2, [x0, x1, lsl #3]
  416500:	ldr	w0, [sp, #44]
  416504:	add	w0, w0, #0x8
  416508:	str	w0, [sp, #44]
  41650c:	ldr	w0, [sp, #44]
  416510:	cmp	w0, #0xff
  416514:	b.le	4161a0 <ferror@plt+0x131a0>
  416518:	str	wzr, [sp, #40]
  41651c:	b	41688c <ferror@plt+0x1388c>
  416520:	ldr	x0, [sp, #24]
  416524:	ldrsw	x1, [sp, #40]
  416528:	ldr	x0, [x0, x1, lsl #3]
  41652c:	ldr	x1, [sp, #104]
  416530:	add	x0, x1, x0
  416534:	str	x0, [sp, #104]
  416538:	ldr	w0, [sp, #40]
  41653c:	add	w1, w0, #0x1
  416540:	ldr	x0, [sp, #24]
  416544:	sxtw	x1, w1
  416548:	ldr	x0, [x0, x1, lsl #3]
  41654c:	ldr	x1, [sp, #96]
  416550:	add	x0, x1, x0
  416554:	str	x0, [sp, #96]
  416558:	ldr	w0, [sp, #40]
  41655c:	add	w1, w0, #0x2
  416560:	ldr	x0, [sp, #24]
  416564:	sxtw	x1, w1
  416568:	ldr	x0, [x0, x1, lsl #3]
  41656c:	ldr	x1, [sp, #88]
  416570:	add	x0, x1, x0
  416574:	str	x0, [sp, #88]
  416578:	ldr	w0, [sp, #40]
  41657c:	add	w1, w0, #0x3
  416580:	ldr	x0, [sp, #24]
  416584:	sxtw	x1, w1
  416588:	ldr	x0, [x0, x1, lsl #3]
  41658c:	ldr	x1, [sp, #80]
  416590:	add	x0, x1, x0
  416594:	str	x0, [sp, #80]
  416598:	ldr	w0, [sp, #40]
  41659c:	add	w1, w0, #0x4
  4165a0:	ldr	x0, [sp, #24]
  4165a4:	sxtw	x1, w1
  4165a8:	ldr	x0, [x0, x1, lsl #3]
  4165ac:	ldr	x1, [sp, #72]
  4165b0:	add	x0, x1, x0
  4165b4:	str	x0, [sp, #72]
  4165b8:	ldr	w0, [sp, #40]
  4165bc:	add	w1, w0, #0x5
  4165c0:	ldr	x0, [sp, #24]
  4165c4:	sxtw	x1, w1
  4165c8:	ldr	x0, [x0, x1, lsl #3]
  4165cc:	ldr	x1, [sp, #64]
  4165d0:	add	x0, x1, x0
  4165d4:	str	x0, [sp, #64]
  4165d8:	ldr	w0, [sp, #40]
  4165dc:	add	w1, w0, #0x6
  4165e0:	ldr	x0, [sp, #24]
  4165e4:	sxtw	x1, w1
  4165e8:	ldr	x0, [x0, x1, lsl #3]
  4165ec:	ldr	x1, [sp, #56]
  4165f0:	add	x0, x1, x0
  4165f4:	str	x0, [sp, #56]
  4165f8:	ldr	w0, [sp, #40]
  4165fc:	add	w1, w0, #0x7
  416600:	ldr	x0, [sp, #24]
  416604:	sxtw	x1, w1
  416608:	ldr	x0, [x0, x1, lsl #3]
  41660c:	ldr	x1, [sp, #48]
  416610:	add	x0, x1, x0
  416614:	str	x0, [sp, #48]
  416618:	ldr	x1, [sp, #104]
  41661c:	ldr	x0, [sp, #72]
  416620:	sub	x0, x1, x0
  416624:	str	x0, [sp, #104]
  416628:	ldr	x0, [sp, #48]
  41662c:	bl	415aa4 <ferror@plt+0x12aa4>
  416630:	lsr	x0, x0, #9
  416634:	ldr	x1, [sp, #64]
  416638:	eor	x0, x1, x0
  41663c:	str	x0, [sp, #64]
  416640:	ldr	x1, [sp, #48]
  416644:	ldr	x0, [sp, #104]
  416648:	add	x0, x1, x0
  41664c:	str	x0, [sp, #48]
  416650:	ldr	x1, [sp, #96]
  416654:	ldr	x0, [sp, #64]
  416658:	sub	x0, x1, x0
  41665c:	str	x0, [sp, #96]
  416660:	ldr	x0, [sp, #104]
  416664:	lsl	x0, x0, #9
  416668:	ldr	x1, [sp, #56]
  41666c:	eor	x0, x1, x0
  416670:	str	x0, [sp, #56]
  416674:	ldr	x1, [sp, #104]
  416678:	ldr	x0, [sp, #96]
  41667c:	add	x0, x1, x0
  416680:	str	x0, [sp, #104]
  416684:	ldr	x1, [sp, #88]
  416688:	ldr	x0, [sp, #56]
  41668c:	sub	x0, x1, x0
  416690:	str	x0, [sp, #88]
  416694:	ldr	x0, [sp, #96]
  416698:	bl	415aa4 <ferror@plt+0x12aa4>
  41669c:	lsr	x0, x0, #23
  4166a0:	ldr	x1, [sp, #48]
  4166a4:	eor	x0, x1, x0
  4166a8:	str	x0, [sp, #48]
  4166ac:	ldr	x1, [sp, #96]
  4166b0:	ldr	x0, [sp, #88]
  4166b4:	add	x0, x1, x0
  4166b8:	str	x0, [sp, #96]
  4166bc:	ldr	x1, [sp, #80]
  4166c0:	ldr	x0, [sp, #48]
  4166c4:	sub	x0, x1, x0
  4166c8:	str	x0, [sp, #80]
  4166cc:	ldr	x0, [sp, #88]
  4166d0:	lsl	x0, x0, #15
  4166d4:	ldr	x1, [sp, #104]
  4166d8:	eor	x0, x1, x0
  4166dc:	str	x0, [sp, #104]
  4166e0:	ldr	x1, [sp, #88]
  4166e4:	ldr	x0, [sp, #80]
  4166e8:	add	x0, x1, x0
  4166ec:	str	x0, [sp, #88]
  4166f0:	ldr	x1, [sp, #72]
  4166f4:	ldr	x0, [sp, #104]
  4166f8:	sub	x0, x1, x0
  4166fc:	str	x0, [sp, #72]
  416700:	ldr	x0, [sp, #80]
  416704:	bl	415aa4 <ferror@plt+0x12aa4>
  416708:	lsr	x0, x0, #14
  41670c:	ldr	x1, [sp, #96]
  416710:	eor	x0, x1, x0
  416714:	str	x0, [sp, #96]
  416718:	ldr	x1, [sp, #80]
  41671c:	ldr	x0, [sp, #72]
  416720:	add	x0, x1, x0
  416724:	str	x0, [sp, #80]
  416728:	ldr	x1, [sp, #64]
  41672c:	ldr	x0, [sp, #96]
  416730:	sub	x0, x1, x0
  416734:	str	x0, [sp, #64]
  416738:	ldr	x0, [sp, #72]
  41673c:	lsl	x0, x0, #20
  416740:	ldr	x1, [sp, #88]
  416744:	eor	x0, x1, x0
  416748:	str	x0, [sp, #88]
  41674c:	ldr	x1, [sp, #72]
  416750:	ldr	x0, [sp, #64]
  416754:	add	x0, x1, x0
  416758:	str	x0, [sp, #72]
  41675c:	ldr	x1, [sp, #56]
  416760:	ldr	x0, [sp, #88]
  416764:	sub	x0, x1, x0
  416768:	str	x0, [sp, #56]
  41676c:	ldr	x0, [sp, #64]
  416770:	bl	415aa4 <ferror@plt+0x12aa4>
  416774:	lsr	x0, x0, #17
  416778:	ldr	x1, [sp, #80]
  41677c:	eor	x0, x1, x0
  416780:	str	x0, [sp, #80]
  416784:	ldr	x1, [sp, #64]
  416788:	ldr	x0, [sp, #56]
  41678c:	add	x0, x1, x0
  416790:	str	x0, [sp, #64]
  416794:	ldr	x1, [sp, #48]
  416798:	ldr	x0, [sp, #80]
  41679c:	sub	x0, x1, x0
  4167a0:	str	x0, [sp, #48]
  4167a4:	ldr	x0, [sp, #56]
  4167a8:	lsl	x0, x0, #14
  4167ac:	ldr	x1, [sp, #72]
  4167b0:	eor	x0, x1, x0
  4167b4:	str	x0, [sp, #72]
  4167b8:	ldr	x1, [sp, #56]
  4167bc:	ldr	x0, [sp, #48]
  4167c0:	add	x0, x1, x0
  4167c4:	str	x0, [sp, #56]
  4167c8:	ldr	x0, [sp, #24]
  4167cc:	ldrsw	x1, [sp, #40]
  4167d0:	ldr	x2, [sp, #104]
  4167d4:	str	x2, [x0, x1, lsl #3]
  4167d8:	ldr	w0, [sp, #40]
  4167dc:	add	w1, w0, #0x1
  4167e0:	ldr	x0, [sp, #24]
  4167e4:	sxtw	x1, w1
  4167e8:	ldr	x2, [sp, #96]
  4167ec:	str	x2, [x0, x1, lsl #3]
  4167f0:	ldr	w0, [sp, #40]
  4167f4:	add	w1, w0, #0x2
  4167f8:	ldr	x0, [sp, #24]
  4167fc:	sxtw	x1, w1
  416800:	ldr	x2, [sp, #88]
  416804:	str	x2, [x0, x1, lsl #3]
  416808:	ldr	w0, [sp, #40]
  41680c:	add	w1, w0, #0x3
  416810:	ldr	x0, [sp, #24]
  416814:	sxtw	x1, w1
  416818:	ldr	x2, [sp, #80]
  41681c:	str	x2, [x0, x1, lsl #3]
  416820:	ldr	w0, [sp, #40]
  416824:	add	w1, w0, #0x4
  416828:	ldr	x0, [sp, #24]
  41682c:	sxtw	x1, w1
  416830:	ldr	x2, [sp, #72]
  416834:	str	x2, [x0, x1, lsl #3]
  416838:	ldr	w0, [sp, #40]
  41683c:	add	w1, w0, #0x5
  416840:	ldr	x0, [sp, #24]
  416844:	sxtw	x1, w1
  416848:	ldr	x2, [sp, #64]
  41684c:	str	x2, [x0, x1, lsl #3]
  416850:	ldr	w0, [sp, #40]
  416854:	add	w1, w0, #0x6
  416858:	ldr	x0, [sp, #24]
  41685c:	sxtw	x1, w1
  416860:	ldr	x2, [sp, #56]
  416864:	str	x2, [x0, x1, lsl #3]
  416868:	ldr	w0, [sp, #40]
  41686c:	add	w1, w0, #0x7
  416870:	ldr	x0, [sp, #24]
  416874:	sxtw	x1, w1
  416878:	ldr	x2, [sp, #48]
  41687c:	str	x2, [x0, x1, lsl #3]
  416880:	ldr	w0, [sp, #40]
  416884:	add	w0, w0, #0x8
  416888:	str	w0, [sp, #40]
  41688c:	ldr	w0, [sp, #40]
  416890:	cmp	w0, #0xff
  416894:	b.le	416520 <ferror@plt+0x13520>
  416898:	ldr	x0, [sp, #24]
  41689c:	str	xzr, [x0, #2064]
  4168a0:	ldr	x0, [sp, #24]
  4168a4:	ldr	x1, [x0, #2064]
  4168a8:	ldr	x0, [sp, #24]
  4168ac:	str	x1, [x0, #2056]
  4168b0:	ldr	x0, [sp, #24]
  4168b4:	ldr	x1, [x0, #2056]
  4168b8:	ldr	x0, [sp, #24]
  4168bc:	str	x1, [x0, #2048]
  4168c0:	nop
  4168c4:	ldp	x29, x30, [sp], #112
  4168c8:	ret
  4168cc:	stp	x29, x30, [sp, #-32]!
  4168d0:	mov	x29, sp
  4168d4:	str	x0, [sp, #24]
  4168d8:	ldr	x0, [sp, #24]
  4168dc:	str	xzr, [x0]
  4168e0:	ldr	x0, [sp, #24]
  4168e4:	str	xzr, [x0, #8]
  4168e8:	ldr	x0, [sp, #24]
  4168ec:	str	xzr, [x0, #16]
  4168f0:	ldr	x0, [sp, #24]
  4168f4:	add	x5, x0, #0x18
  4168f8:	adrp	x0, 402000 <mbrtowc@plt-0x870>
  4168fc:	add	x4, x0, #0xd20
  416900:	adrp	x0, 402000 <mbrtowc@plt-0x870>
  416904:	add	x3, x0, #0xa80
  416908:	mov	x2, #0x0                   	// #0
  41690c:	mov	x1, #0x0                   	// #0
  416910:	mov	x0, x5
  416914:	bl	41a054 <_obstack_begin@@Base>
  416918:	ldr	x0, [sp, #24]
  41691c:	add	x5, x0, #0x70
  416920:	adrp	x0, 402000 <mbrtowc@plt-0x870>
  416924:	add	x4, x0, #0xd20
  416928:	adrp	x0, 402000 <mbrtowc@plt-0x870>
  41692c:	add	x3, x0, #0xa80
  416930:	mov	x2, #0x0                   	// #0
  416934:	mov	x1, #0x0                   	// #0
  416938:	mov	x0, x5
  41693c:	bl	41a054 <_obstack_begin@@Base>
  416940:	ldr	x0, [sp, #24]
  416944:	add	x5, x0, #0xc8
  416948:	adrp	x0, 402000 <mbrtowc@plt-0x870>
  41694c:	add	x4, x0, #0xd20
  416950:	adrp	x0, 402000 <mbrtowc@plt-0x870>
  416954:	add	x3, x0, #0xa80
  416958:	mov	x2, #0x0                   	// #0
  41695c:	mov	x1, #0x0                   	// #0
  416960:	mov	x0, x5
  416964:	bl	41a054 <_obstack_begin@@Base>
  416968:	nop
  41696c:	ldp	x29, x30, [sp], #32
  416970:	ret
  416974:	stp	x29, x30, [sp, #-80]!
  416978:	mov	x29, sp
  41697c:	str	x0, [sp, #24]
  416980:	ldr	x0, [sp, #24]
  416984:	add	x0, x0, #0x18
  416988:	str	x0, [sp, #72]
  41698c:	str	xzr, [sp, #64]
  416990:	ldr	x0, [sp, #72]
  416994:	ldr	x0, [x0, #8]
  416998:	ldr	x1, [sp, #64]
  41699c:	cmp	x1, x0
  4169a0:	b.ls	4169d8 <ferror@plt+0x139d8>  // b.plast
  4169a4:	ldr	x0, [sp, #72]
  4169a8:	ldr	x0, [x0, #32]
  4169ac:	ldr	x1, [sp, #64]
  4169b0:	cmp	x1, x0
  4169b4:	b.cs	4169d8 <ferror@plt+0x139d8>  // b.hs, b.nlast
  4169b8:	ldr	x0, [sp, #72]
  4169bc:	ldr	x1, [sp, #64]
  4169c0:	str	x1, [x0, #16]
  4169c4:	ldr	x0, [sp, #72]
  4169c8:	ldr	x1, [x0, #16]
  4169cc:	ldr	x0, [sp, #72]
  4169d0:	str	x1, [x0, #24]
  4169d4:	b	4169e4 <ferror@plt+0x139e4>
  4169d8:	ldr	x1, [sp, #64]
  4169dc:	ldr	x0, [sp, #72]
  4169e0:	bl	41a3b8 <_obstack_free@@Base>
  4169e4:	ldr	x0, [sp, #24]
  4169e8:	add	x0, x0, #0x70
  4169ec:	str	x0, [sp, #56]
  4169f0:	str	xzr, [sp, #48]
  4169f4:	ldr	x0, [sp, #56]
  4169f8:	ldr	x0, [x0, #8]
  4169fc:	ldr	x1, [sp, #48]
  416a00:	cmp	x1, x0
  416a04:	b.ls	416a3c <ferror@plt+0x13a3c>  // b.plast
  416a08:	ldr	x0, [sp, #56]
  416a0c:	ldr	x0, [x0, #32]
  416a10:	ldr	x1, [sp, #48]
  416a14:	cmp	x1, x0
  416a18:	b.cs	416a3c <ferror@plt+0x13a3c>  // b.hs, b.nlast
  416a1c:	ldr	x0, [sp, #56]
  416a20:	ldr	x1, [sp, #48]
  416a24:	str	x1, [x0, #16]
  416a28:	ldr	x0, [sp, #56]
  416a2c:	ldr	x1, [x0, #16]
  416a30:	ldr	x0, [sp, #56]
  416a34:	str	x1, [x0, #24]
  416a38:	b	416a48 <ferror@plt+0x13a48>
  416a3c:	ldr	x1, [sp, #48]
  416a40:	ldr	x0, [sp, #56]
  416a44:	bl	41a3b8 <_obstack_free@@Base>
  416a48:	ldr	x0, [sp, #24]
  416a4c:	add	x0, x0, #0xc8
  416a50:	str	x0, [sp, #40]
  416a54:	str	xzr, [sp, #32]
  416a58:	ldr	x0, [sp, #40]
  416a5c:	ldr	x0, [x0, #8]
  416a60:	ldr	x1, [sp, #32]
  416a64:	cmp	x1, x0
  416a68:	b.ls	416aa0 <ferror@plt+0x13aa0>  // b.plast
  416a6c:	ldr	x0, [sp, #40]
  416a70:	ldr	x0, [x0, #32]
  416a74:	ldr	x1, [sp, #32]
  416a78:	cmp	x1, x0
  416a7c:	b.cs	416aa0 <ferror@plt+0x13aa0>  // b.hs, b.nlast
  416a80:	ldr	x0, [sp, #40]
  416a84:	ldr	x1, [sp, #32]
  416a88:	str	x1, [x0, #16]
  416a8c:	ldr	x0, [sp, #40]
  416a90:	ldr	x1, [x0, #16]
  416a94:	ldr	x0, [sp, #40]
  416a98:	str	x1, [x0, #24]
  416a9c:	b	416ab0 <ferror@plt+0x13ab0>
  416aa0:	ldr	x1, [sp, #32]
  416aa4:	ldr	x0, [sp, #40]
  416aa8:	bl	41a3b8 <_obstack_free@@Base>
  416aac:	nop
  416ab0:	nop
  416ab4:	ldp	x29, x30, [sp], #80
  416ab8:	ret
  416abc:	stp	x29, x30, [sp, #-128]!
  416ac0:	mov	x29, sp
  416ac4:	str	x0, [sp, #24]
  416ac8:	ldr	x0, [sp, #24]
  416acc:	add	x0, x0, #0x18
  416ad0:	str	x0, [sp, #120]
  416ad4:	ldr	x0, [sp, #120]
  416ad8:	ldr	x1, [x0, #24]
  416adc:	ldr	x0, [sp, #120]
  416ae0:	ldr	x0, [x0, #16]
  416ae4:	sub	x0, x1, x0
  416ae8:	sub	x0, x0, #0x1
  416aec:	str	x0, [sp, #32]
  416af0:	ldr	x0, [sp, #24]
  416af4:	add	x0, x0, #0x18
  416af8:	str	x0, [sp, #112]
  416afc:	ldr	x0, [sp, #112]
  416b00:	ldr	x0, [x0, #16]
  416b04:	str	x0, [sp, #104]
  416b08:	ldr	x0, [sp, #112]
  416b0c:	ldr	x0, [x0, #24]
  416b10:	ldr	x1, [sp, #104]
  416b14:	cmp	x1, x0
  416b18:	b.ne	416b2c <ferror@plt+0x13b2c>  // b.any
  416b1c:	ldr	x0, [sp, #112]
  416b20:	ldrb	w1, [x0, #80]
  416b24:	orr	w1, w1, #0x2
  416b28:	strb	w1, [x0, #80]
  416b2c:	ldr	x0, [sp, #112]
  416b30:	ldr	x0, [x0, #24]
  416b34:	mov	x1, x0
  416b38:	ldr	x0, [sp, #112]
  416b3c:	ldr	x0, [x0, #48]
  416b40:	add	x1, x1, x0
  416b44:	ldr	x0, [sp, #112]
  416b48:	ldr	x0, [x0, #48]
  416b4c:	mvn	x0, x0
  416b50:	and	x0, x1, x0
  416b54:	mov	x1, x0
  416b58:	ldr	x0, [sp, #112]
  416b5c:	str	x1, [x0, #24]
  416b60:	ldr	x0, [sp, #112]
  416b64:	ldr	x1, [x0, #24]
  416b68:	ldr	x0, [sp, #112]
  416b6c:	ldr	x0, [x0, #8]
  416b70:	sub	x0, x1, x0
  416b74:	mov	x2, x0
  416b78:	ldr	x0, [sp, #112]
  416b7c:	ldr	x1, [x0, #32]
  416b80:	ldr	x0, [sp, #112]
  416b84:	ldr	x0, [x0, #8]
  416b88:	sub	x0, x1, x0
  416b8c:	cmp	x2, x0
  416b90:	b.ls	416ba4 <ferror@plt+0x13ba4>  // b.plast
  416b94:	ldr	x0, [sp, #112]
  416b98:	ldr	x1, [x0, #32]
  416b9c:	ldr	x0, [sp, #112]
  416ba0:	str	x1, [x0, #24]
  416ba4:	ldr	x0, [sp, #112]
  416ba8:	ldr	x1, [x0, #24]
  416bac:	ldr	x0, [sp, #112]
  416bb0:	str	x1, [x0, #16]
  416bb4:	ldr	x0, [sp, #104]
  416bb8:	str	x0, [sp, #96]
  416bbc:	ldr	x0, [sp, #24]
  416bc0:	add	x0, x0, #0x70
  416bc4:	str	x0, [sp, #88]
  416bc8:	ldr	x0, [sp, #88]
  416bcc:	str	x0, [sp, #80]
  416bd0:	ldr	x0, [sp, #80]
  416bd4:	ldr	x1, [x0, #32]
  416bd8:	ldr	x0, [sp, #80]
  416bdc:	ldr	x0, [x0, #24]
  416be0:	sub	x0, x1, x0
  416be4:	cmp	x0, #0x7
  416be8:	b.hi	416bf8 <ferror@plt+0x13bf8>  // b.pmore
  416bec:	mov	x1, #0x8                   	// #8
  416bf0:	ldr	x0, [sp, #88]
  416bf4:	bl	41a11c <_obstack_newchunk@@Base>
  416bf8:	ldr	x0, [sp, #88]
  416bfc:	str	x0, [sp, #72]
  416c00:	ldr	x0, [sp, #72]
  416c04:	ldr	x0, [x0, #24]
  416c08:	str	x0, [sp, #64]
  416c0c:	ldr	x0, [sp, #64]
  416c10:	ldr	x1, [sp, #96]
  416c14:	str	x1, [x0]
  416c18:	ldr	x0, [sp, #72]
  416c1c:	ldr	x0, [x0, #24]
  416c20:	add	x1, x0, #0x8
  416c24:	ldr	x0, [sp, #72]
  416c28:	str	x1, [x0, #24]
  416c2c:	ldr	x0, [sp, #24]
  416c30:	add	x0, x0, #0xc8
  416c34:	str	x0, [sp, #56]
  416c38:	mov	x0, #0x8                   	// #8
  416c3c:	str	x0, [sp, #48]
  416c40:	ldr	x0, [sp, #56]
  416c44:	str	x0, [sp, #40]
  416c48:	ldr	x0, [sp, #40]
  416c4c:	ldr	x1, [x0, #32]
  416c50:	ldr	x0, [sp, #40]
  416c54:	ldr	x0, [x0, #24]
  416c58:	sub	x0, x1, x0
  416c5c:	mov	x1, x0
  416c60:	ldr	x0, [sp, #48]
  416c64:	cmp	x1, x0
  416c68:	b.cs	416c78 <ferror@plt+0x13c78>  // b.hs, b.nlast
  416c6c:	ldr	x1, [sp, #48]
  416c70:	ldr	x0, [sp, #56]
  416c74:	bl	41a11c <_obstack_newchunk@@Base>
  416c78:	ldr	x0, [sp, #56]
  416c7c:	ldr	x0, [x0, #24]
  416c80:	add	x1, sp, #0x20
  416c84:	ldr	x2, [sp, #48]
  416c88:	bl	402880 <memcpy@plt>
  416c8c:	ldr	x0, [sp, #56]
  416c90:	ldr	x1, [x0, #24]
  416c94:	ldr	x0, [sp, #48]
  416c98:	add	x1, x1, x0
  416c9c:	ldr	x0, [sp, #56]
  416ca0:	str	x1, [x0, #24]
  416ca4:	ldr	x0, [sp, #24]
  416ca8:	ldr	x0, [x0]
  416cac:	add	x1, x0, #0x1
  416cb0:	ldr	x0, [sp, #24]
  416cb4:	str	x1, [x0]
  416cb8:	nop
  416cbc:	ldp	x29, x30, [sp], #128
  416cc0:	ret
  416cc4:	stp	x29, x30, [sp, #-160]!
  416cc8:	mov	x29, sp
  416ccc:	str	x0, [sp, #24]
  416cd0:	str	x1, [sp, #16]
  416cd4:	ldr	x0, [sp, #24]
  416cd8:	bl	402b20 <fgetc@plt>
  416cdc:	str	w0, [sp, #156]
  416ce0:	ldr	w0, [sp, #156]
  416ce4:	cmn	w0, #0x1
  416ce8:	b.ne	416d7c <ferror@plt+0x13d7c>  // b.any
  416cec:	ldr	x0, [sp, #16]
  416cf0:	add	x0, x0, #0x18
  416cf4:	str	x0, [sp, #128]
  416cf8:	ldr	x0, [sp, #128]
  416cfc:	ldr	x1, [x0, #24]
  416d00:	ldr	x0, [sp, #128]
  416d04:	ldr	x0, [x0, #16]
  416d08:	sub	x0, x1, x0
  416d0c:	str	x0, [sp, #120]
  416d10:	ldr	x0, [sp, #120]
  416d14:	cmp	x0, #0x0
  416d18:	b.eq	416df0 <ferror@plt+0x13df0>  // b.none
  416d1c:	ldr	x0, [sp, #16]
  416d20:	add	x0, x0, #0x18
  416d24:	str	x0, [sp, #112]
  416d28:	ldr	x0, [sp, #112]
  416d2c:	str	x0, [sp, #104]
  416d30:	ldr	x0, [sp, #104]
  416d34:	ldr	x1, [x0, #32]
  416d38:	ldr	x0, [sp, #104]
  416d3c:	ldr	x0, [x0, #24]
  416d40:	sub	x0, x1, x0
  416d44:	cmp	x0, #0x0
  416d48:	b.ne	416d58 <ferror@plt+0x13d58>  // b.any
  416d4c:	mov	x1, #0x1                   	// #1
  416d50:	ldr	x0, [sp, #112]
  416d54:	bl	41a11c <_obstack_newchunk@@Base>
  416d58:	ldr	x0, [sp, #112]
  416d5c:	ldr	x0, [x0, #24]
  416d60:	add	x2, x0, #0x1
  416d64:	ldr	x1, [sp, #112]
  416d68:	str	x2, [x1, #24]
  416d6c:	strb	wzr, [x0]
  416d70:	ldr	x0, [sp, #16]
  416d74:	bl	416abc <ferror@plt+0x13abc>
  416d78:	b	416df0 <ferror@plt+0x13df0>
  416d7c:	ldr	x0, [sp, #16]
  416d80:	add	x0, x0, #0x18
  416d84:	str	x0, [sp, #144]
  416d88:	ldr	x0, [sp, #144]
  416d8c:	str	x0, [sp, #136]
  416d90:	ldr	x0, [sp, #136]
  416d94:	ldr	x1, [x0, #32]
  416d98:	ldr	x0, [sp, #136]
  416d9c:	ldr	x0, [x0, #24]
  416da0:	sub	x0, x1, x0
  416da4:	cmp	x0, #0x0
  416da8:	b.ne	416db8 <ferror@plt+0x13db8>  // b.any
  416dac:	mov	x1, #0x1                   	// #1
  416db0:	ldr	x0, [sp, #144]
  416db4:	bl	41a11c <_obstack_newchunk@@Base>
  416db8:	ldr	x0, [sp, #144]
  416dbc:	ldr	x0, [x0, #24]
  416dc0:	add	x2, x0, #0x1
  416dc4:	ldr	x1, [sp, #144]
  416dc8:	str	x2, [x1, #24]
  416dcc:	ldr	w1, [sp, #156]
  416dd0:	and	w1, w1, #0xff
  416dd4:	strb	w1, [x0]
  416dd8:	ldr	w0, [sp, #156]
  416ddc:	cmp	w0, #0x0
  416de0:	b.ne	416cd4 <ferror@plt+0x13cd4>  // b.any
  416de4:	ldr	x0, [sp, #16]
  416de8:	bl	416abc <ferror@plt+0x13abc>
  416dec:	b	416cd4 <ferror@plt+0x13cd4>
  416df0:	nop
  416df4:	ldr	x0, [sp, #16]
  416df8:	add	x0, x0, #0x70
  416dfc:	str	x0, [sp, #96]
  416e00:	ldr	x0, [sp, #96]
  416e04:	str	x0, [sp, #88]
  416e08:	ldr	x0, [sp, #88]
  416e0c:	ldr	x1, [x0, #32]
  416e10:	ldr	x0, [sp, #88]
  416e14:	ldr	x0, [x0, #24]
  416e18:	sub	x0, x1, x0
  416e1c:	cmp	x0, #0x7
  416e20:	b.hi	416e30 <ferror@plt+0x13e30>  // b.pmore
  416e24:	mov	x1, #0x8                   	// #8
  416e28:	ldr	x0, [sp, #96]
  416e2c:	bl	41a11c <_obstack_newchunk@@Base>
  416e30:	ldr	x0, [sp, #96]
  416e34:	str	x0, [sp, #80]
  416e38:	ldr	x0, [sp, #80]
  416e3c:	ldr	x0, [x0, #24]
  416e40:	str	x0, [sp, #72]
  416e44:	ldr	x0, [sp, #72]
  416e48:	str	xzr, [x0]
  416e4c:	ldr	x0, [sp, #80]
  416e50:	ldr	x0, [x0, #24]
  416e54:	add	x1, x0, #0x8
  416e58:	ldr	x0, [sp, #80]
  416e5c:	str	x1, [x0, #24]
  416e60:	ldr	x0, [sp, #16]
  416e64:	add	x0, x0, #0x70
  416e68:	str	x0, [sp, #64]
  416e6c:	ldr	x0, [sp, #64]
  416e70:	ldr	x0, [x0, #16]
  416e74:	str	x0, [sp, #56]
  416e78:	ldr	x0, [sp, #64]
  416e7c:	ldr	x0, [x0, #24]
  416e80:	ldr	x1, [sp, #56]
  416e84:	cmp	x1, x0
  416e88:	b.ne	416e9c <ferror@plt+0x13e9c>  // b.any
  416e8c:	ldr	x0, [sp, #64]
  416e90:	ldrb	w1, [x0, #80]
  416e94:	orr	w1, w1, #0x2
  416e98:	strb	w1, [x0, #80]
  416e9c:	ldr	x0, [sp, #64]
  416ea0:	ldr	x0, [x0, #24]
  416ea4:	mov	x1, x0
  416ea8:	ldr	x0, [sp, #64]
  416eac:	ldr	x0, [x0, #48]
  416eb0:	add	x1, x1, x0
  416eb4:	ldr	x0, [sp, #64]
  416eb8:	ldr	x0, [x0, #48]
  416ebc:	mvn	x0, x0
  416ec0:	and	x0, x1, x0
  416ec4:	mov	x1, x0
  416ec8:	ldr	x0, [sp, #64]
  416ecc:	str	x1, [x0, #24]
  416ed0:	ldr	x0, [sp, #64]
  416ed4:	ldr	x1, [x0, #24]
  416ed8:	ldr	x0, [sp, #64]
  416edc:	ldr	x0, [x0, #8]
  416ee0:	sub	x0, x1, x0
  416ee4:	mov	x2, x0
  416ee8:	ldr	x0, [sp, #64]
  416eec:	ldr	x1, [x0, #32]
  416ef0:	ldr	x0, [sp, #64]
  416ef4:	ldr	x0, [x0, #8]
  416ef8:	sub	x0, x1, x0
  416efc:	cmp	x2, x0
  416f00:	b.ls	416f14 <ferror@plt+0x13f14>  // b.plast
  416f04:	ldr	x0, [sp, #64]
  416f08:	ldr	x1, [x0, #32]
  416f0c:	ldr	x0, [sp, #64]
  416f10:	str	x1, [x0, #24]
  416f14:	ldr	x0, [sp, #64]
  416f18:	ldr	x1, [x0, #24]
  416f1c:	ldr	x0, [sp, #64]
  416f20:	str	x1, [x0, #16]
  416f24:	ldr	x1, [sp, #56]
  416f28:	ldr	x0, [sp, #16]
  416f2c:	str	x1, [x0, #8]
  416f30:	ldr	x0, [sp, #16]
  416f34:	add	x0, x0, #0xc8
  416f38:	str	x0, [sp, #48]
  416f3c:	ldr	x0, [sp, #48]
  416f40:	ldr	x0, [x0, #16]
  416f44:	str	x0, [sp, #40]
  416f48:	ldr	x0, [sp, #48]
  416f4c:	ldr	x0, [x0, #24]
  416f50:	ldr	x1, [sp, #40]
  416f54:	cmp	x1, x0
  416f58:	b.ne	416f6c <ferror@plt+0x13f6c>  // b.any
  416f5c:	ldr	x0, [sp, #48]
  416f60:	ldrb	w1, [x0, #80]
  416f64:	orr	w1, w1, #0x2
  416f68:	strb	w1, [x0, #80]
  416f6c:	ldr	x0, [sp, #48]
  416f70:	ldr	x0, [x0, #24]
  416f74:	mov	x1, x0
  416f78:	ldr	x0, [sp, #48]
  416f7c:	ldr	x0, [x0, #48]
  416f80:	add	x1, x1, x0
  416f84:	ldr	x0, [sp, #48]
  416f88:	ldr	x0, [x0, #48]
  416f8c:	mvn	x0, x0
  416f90:	and	x0, x1, x0
  416f94:	mov	x1, x0
  416f98:	ldr	x0, [sp, #48]
  416f9c:	str	x1, [x0, #24]
  416fa0:	ldr	x0, [sp, #48]
  416fa4:	ldr	x1, [x0, #24]
  416fa8:	ldr	x0, [sp, #48]
  416fac:	ldr	x0, [x0, #8]
  416fb0:	sub	x0, x1, x0
  416fb4:	mov	x2, x0
  416fb8:	ldr	x0, [sp, #48]
  416fbc:	ldr	x1, [x0, #32]
  416fc0:	ldr	x0, [sp, #48]
  416fc4:	ldr	x0, [x0, #8]
  416fc8:	sub	x0, x1, x0
  416fcc:	cmp	x2, x0
  416fd0:	b.ls	416fe4 <ferror@plt+0x13fe4>  // b.plast
  416fd4:	ldr	x0, [sp, #48]
  416fd8:	ldr	x1, [x0, #32]
  416fdc:	ldr	x0, [sp, #48]
  416fe0:	str	x1, [x0, #24]
  416fe4:	ldr	x0, [sp, #48]
  416fe8:	ldr	x1, [x0, #24]
  416fec:	ldr	x0, [sp, #48]
  416ff0:	str	x1, [x0, #16]
  416ff4:	ldr	x1, [sp, #40]
  416ff8:	ldr	x0, [sp, #16]
  416ffc:	str	x1, [x0, #16]
  417000:	ldr	x0, [sp, #24]
  417004:	bl	403000 <ferror@plt>
  417008:	cmp	w0, #0x0
  41700c:	cset	w0, eq  // eq = none
  417010:	and	w0, w0, #0xff
  417014:	ldp	x29, x30, [sp], #160
  417018:	ret
  41701c:	stp	x29, x30, [sp, #-32]!
  417020:	mov	x29, sp
  417024:	str	x0, [sp, #24]
  417028:	ldr	x0, [sp, #24]
  41702c:	bl	402e60 <mkstemp@plt>
  417030:	bl	4178ec <ferror@plt+0x148ec>
  417034:	ldp	x29, x30, [sp], #32
  417038:	ret
  41703c:	stp	x29, x30, [sp, #-32]!
  417040:	mov	x29, sp
  417044:	str	x0, [sp, #24]
  417048:	str	w1, [sp, #20]
  41704c:	ldr	w1, [sp, #20]
  417050:	ldr	x0, [sp, #24]
  417054:	bl	402c30 <mkostemp@plt>
  417058:	ldr	w1, [sp, #20]
  41705c:	bl	41adc4 <_obstack_memory_used@@Base+0x928>
  417060:	ldp	x29, x30, [sp], #32
  417064:	ret
  417068:	sub	sp, sp, #0x20
  41706c:	str	x0, [sp, #24]
  417070:	str	x1, [sp, #16]
  417074:	strb	w2, [sp, #15]
  417078:	ldr	x0, [sp, #24]
  41707c:	ldrb	w0, [x0]
  417080:	ldrb	w1, [sp, #15]
  417084:	cmp	w1, w0
  417088:	b.ne	417164 <ferror@plt+0x14164>  // b.any
  41708c:	ldr	x0, [sp, #16]
  417090:	ldrb	w0, [x0]
  417094:	ldrb	w1, [sp, #15]
  417098:	cmp	w1, w0
  41709c:	b.ne	417164 <ferror@plt+0x14164>  // b.any
  4170a0:	b	4170c0 <ferror@plt+0x140c0>
  4170a4:	ldr	x0, [sp, #24]
  4170a8:	ldrb	w0, [x0]
  4170ac:	sub	w0, w0, #0x30
  4170b0:	cmp	w0, #0x9
  4170b4:	b.ls	4170c0 <ferror@plt+0x140c0>  // b.plast
  4170b8:	mov	w0, #0x0                   	// #0
  4170bc:	b	41722c <ferror@plt+0x1422c>
  4170c0:	ldr	x0, [sp, #24]
  4170c4:	add	x0, x0, #0x1
  4170c8:	str	x0, [sp, #24]
  4170cc:	ldr	x0, [sp, #24]
  4170d0:	ldrb	w1, [x0]
  4170d4:	ldr	x0, [sp, #16]
  4170d8:	add	x0, x0, #0x1
  4170dc:	str	x0, [sp, #16]
  4170e0:	ldr	x0, [sp, #16]
  4170e4:	ldrb	w0, [x0]
  4170e8:	cmp	w1, w0
  4170ec:	b.eq	4170a4 <ferror@plt+0x140a4>  // b.none
  4170f0:	ldr	x0, [sp, #24]
  4170f4:	ldrb	w0, [x0]
  4170f8:	sub	w0, w0, #0x30
  4170fc:	cmp	w0, #0x9
  417100:	b.hi	417134 <ferror@plt+0x14134>  // b.pmore
  417104:	ldr	x0, [sp, #16]
  417108:	ldrb	w0, [x0]
  41710c:	sub	w0, w0, #0x30
  417110:	cmp	w0, #0x9
  417114:	b.hi	417134 <ferror@plt+0x14134>  // b.pmore
  417118:	ldr	x0, [sp, #24]
  41711c:	ldrb	w0, [x0]
  417120:	mov	w1, w0
  417124:	ldr	x0, [sp, #16]
  417128:	ldrb	w0, [x0]
  41712c:	sub	w0, w1, w0
  417130:	b	41722c <ferror@plt+0x1422c>
  417134:	ldr	x0, [sp, #24]
  417138:	ldrb	w0, [x0]
  41713c:	sub	w0, w0, #0x30
  417140:	cmp	w0, #0x9
  417144:	b.ls	417184 <ferror@plt+0x14184>  // b.plast
  417148:	ldr	x0, [sp, #16]
  41714c:	ldrb	w0, [x0]
  417150:	sub	w0, w0, #0x30
  417154:	cmp	w0, #0x9
  417158:	b.ls	4171e4 <ferror@plt+0x141e4>  // b.plast
  41715c:	mov	w0, #0x0                   	// #0
  417160:	b	41722c <ferror@plt+0x1422c>
  417164:	ldr	x0, [sp, #24]
  417168:	add	x1, x0, #0x1
  41716c:	str	x1, [sp, #24]
  417170:	ldrb	w0, [x0]
  417174:	ldrb	w1, [sp, #15]
  417178:	cmp	w1, w0
  41717c:	b.ne	4171c4 <ferror@plt+0x141c4>  // b.any
  417180:	b	417188 <ferror@plt+0x14188>
  417184:	nop
  417188:	b	417198 <ferror@plt+0x14198>
  41718c:	ldr	x0, [sp, #24]
  417190:	add	x0, x0, #0x1
  417194:	str	x0, [sp, #24]
  417198:	ldr	x0, [sp, #24]
  41719c:	ldrb	w0, [x0]
  4171a0:	cmp	w0, #0x30
  4171a4:	b.eq	41718c <ferror@plt+0x1418c>  // b.none
  4171a8:	ldr	x0, [sp, #24]
  4171ac:	ldrb	w0, [x0]
  4171b0:	sub	w0, w0, #0x30
  4171b4:	cmp	w0, #0x9
  4171b8:	cset	w0, ls  // ls = plast
  4171bc:	and	w0, w0, #0xff
  4171c0:	b	41722c <ferror@plt+0x1422c>
  4171c4:	ldr	x0, [sp, #16]
  4171c8:	add	x1, x0, #0x1
  4171cc:	str	x1, [sp, #16]
  4171d0:	ldrb	w0, [x0]
  4171d4:	ldrb	w1, [sp, #15]
  4171d8:	cmp	w1, w0
  4171dc:	b.ne	417228 <ferror@plt+0x14228>  // b.any
  4171e0:	b	4171e8 <ferror@plt+0x141e8>
  4171e4:	nop
  4171e8:	b	4171f8 <ferror@plt+0x141f8>
  4171ec:	ldr	x0, [sp, #16]
  4171f0:	add	x0, x0, #0x1
  4171f4:	str	x0, [sp, #16]
  4171f8:	ldr	x0, [sp, #16]
  4171fc:	ldrb	w0, [x0]
  417200:	cmp	w0, #0x30
  417204:	b.eq	4171ec <ferror@plt+0x141ec>  // b.none
  417208:	ldr	x0, [sp, #16]
  41720c:	ldrb	w0, [x0]
  417210:	sub	w0, w0, #0x30
  417214:	cmp	w0, #0x9
  417218:	cset	w0, ls  // ls = plast
  41721c:	and	w0, w0, #0xff
  417220:	neg	w0, w0
  417224:	b	41722c <ferror@plt+0x1422c>
  417228:	mov	w0, #0x0                   	// #0
  41722c:	add	sp, sp, #0x20
  417230:	ret
  417234:	stp	x29, x30, [sp, #-80]!
  417238:	mov	x29, sp
  41723c:	str	x0, [sp, #40]
  417240:	str	x1, [sp, #32]
  417244:	str	w2, [sp, #28]
  417248:	str	w3, [sp, #24]
  41724c:	ldr	x0, [sp, #40]
  417250:	ldrb	w0, [x0]
  417254:	strb	w0, [sp, #79]
  417258:	ldr	x0, [sp, #32]
  41725c:	ldrb	w0, [x0]
  417260:	strb	w0, [sp, #78]
  417264:	ldrb	w0, [sp, #79]
  417268:	cmp	w0, #0x2d
  41726c:	b.ne	417578 <ferror@plt+0x14578>  // b.any
  417270:	ldr	x0, [sp, #40]
  417274:	add	x0, x0, #0x1
  417278:	str	x0, [sp, #40]
  41727c:	ldr	x0, [sp, #40]
  417280:	ldrb	w0, [x0]
  417284:	strb	w0, [sp, #79]
  417288:	ldrb	w0, [sp, #79]
  41728c:	cmp	w0, #0x30
  417290:	b.eq	417270 <ferror@plt+0x14270>  // b.none
  417294:	ldrb	w0, [sp, #79]
  417298:	ldr	w1, [sp, #24]
  41729c:	cmp	w1, w0
  4172a0:	b.eq	417270 <ferror@plt+0x14270>  // b.none
  4172a4:	ldrb	w0, [sp, #78]
  4172a8:	cmp	w0, #0x2d
  4172ac:	b.eq	417380 <ferror@plt+0x14380>  // b.none
  4172b0:	ldrb	w0, [sp, #79]
  4172b4:	ldr	w1, [sp, #28]
  4172b8:	cmp	w1, w0
  4172bc:	b.ne	4172e4 <ferror@plt+0x142e4>  // b.any
  4172c0:	ldr	x0, [sp, #40]
  4172c4:	add	x0, x0, #0x1
  4172c8:	str	x0, [sp, #40]
  4172cc:	ldr	x0, [sp, #40]
  4172d0:	ldrb	w0, [x0]
  4172d4:	strb	w0, [sp, #79]
  4172d8:	ldrb	w0, [sp, #79]
  4172dc:	cmp	w0, #0x30
  4172e0:	b.eq	4172c0 <ferror@plt+0x142c0>  // b.none
  4172e4:	ldrb	w0, [sp, #79]
  4172e8:	sub	w0, w0, #0x30
  4172ec:	cmp	w0, #0x9
  4172f0:	b.hi	417314 <ferror@plt+0x14314>  // b.pmore
  4172f4:	mov	w0, #0xffffffff            	// #-1
  4172f8:	b	4178b0 <ferror@plt+0x148b0>
  4172fc:	ldr	x0, [sp, #32]
  417300:	add	x0, x0, #0x1
  417304:	str	x0, [sp, #32]
  417308:	ldr	x0, [sp, #32]
  41730c:	ldrb	w0, [x0]
  417310:	strb	w0, [sp, #78]
  417314:	ldrb	w0, [sp, #78]
  417318:	cmp	w0, #0x30
  41731c:	b.eq	4172fc <ferror@plt+0x142fc>  // b.none
  417320:	ldrb	w0, [sp, #78]
  417324:	ldr	w1, [sp, #24]
  417328:	cmp	w1, w0
  41732c:	b.eq	4172fc <ferror@plt+0x142fc>  // b.none
  417330:	ldrb	w0, [sp, #78]
  417334:	ldr	w1, [sp, #28]
  417338:	cmp	w1, w0
  41733c:	b.ne	417364 <ferror@plt+0x14364>  // b.any
  417340:	ldr	x0, [sp, #32]
  417344:	add	x0, x0, #0x1
  417348:	str	x0, [sp, #32]
  41734c:	ldr	x0, [sp, #32]
  417350:	ldrb	w0, [x0]
  417354:	strb	w0, [sp, #78]
  417358:	ldrb	w0, [sp, #78]
  41735c:	cmp	w0, #0x30
  417360:	b.eq	417340 <ferror@plt+0x14340>  // b.none
  417364:	ldrb	w0, [sp, #78]
  417368:	sub	w0, w0, #0x30
  41736c:	cmp	w0, #0x9
  417370:	cset	w0, ls  // ls = plast
  417374:	and	w0, w0, #0xff
  417378:	neg	w0, w0
  41737c:	b	4178b0 <ferror@plt+0x148b0>
  417380:	ldr	x0, [sp, #32]
  417384:	add	x0, x0, #0x1
  417388:	str	x0, [sp, #32]
  41738c:	ldr	x0, [sp, #32]
  417390:	ldrb	w0, [x0]
  417394:	strb	w0, [sp, #78]
  417398:	ldrb	w0, [sp, #78]
  41739c:	cmp	w0, #0x30
  4173a0:	b.eq	417380 <ferror@plt+0x14380>  // b.none
  4173a4:	ldrb	w0, [sp, #78]
  4173a8:	ldr	w1, [sp, #24]
  4173ac:	cmp	w1, w0
  4173b0:	b.eq	417380 <ferror@plt+0x14380>  // b.none
  4173b4:	b	417408 <ferror@plt+0x14408>
  4173b8:	ldr	x0, [sp, #40]
  4173bc:	add	x0, x0, #0x1
  4173c0:	str	x0, [sp, #40]
  4173c4:	ldr	x0, [sp, #40]
  4173c8:	ldrb	w0, [x0]
  4173cc:	strb	w0, [sp, #79]
  4173d0:	ldrb	w0, [sp, #79]
  4173d4:	ldr	w1, [sp, #24]
  4173d8:	cmp	w1, w0
  4173dc:	b.eq	4173b8 <ferror@plt+0x143b8>  // b.none
  4173e0:	ldr	x0, [sp, #32]
  4173e4:	add	x0, x0, #0x1
  4173e8:	str	x0, [sp, #32]
  4173ec:	ldr	x0, [sp, #32]
  4173f0:	ldrb	w0, [x0]
  4173f4:	strb	w0, [sp, #78]
  4173f8:	ldrb	w0, [sp, #78]
  4173fc:	ldr	w1, [sp, #24]
  417400:	cmp	w1, w0
  417404:	b.eq	4173e0 <ferror@plt+0x143e0>  // b.none
  417408:	ldrb	w1, [sp, #79]
  41740c:	ldrb	w0, [sp, #78]
  417410:	cmp	w1, w0
  417414:	b.ne	417428 <ferror@plt+0x14428>  // b.any
  417418:	ldrb	w0, [sp, #79]
  41741c:	sub	w0, w0, #0x30
  417420:	cmp	w0, #0x9
  417424:	b.ls	4173b8 <ferror@plt+0x143b8>  // b.plast
  417428:	ldrb	w0, [sp, #79]
  41742c:	ldr	w1, [sp, #28]
  417430:	cmp	w1, w0
  417434:	b.ne	417448 <ferror@plt+0x14448>  // b.any
  417438:	ldrb	w0, [sp, #78]
  41743c:	sub	w0, w0, #0x30
  417440:	cmp	w0, #0x9
  417444:	b.hi	417468 <ferror@plt+0x14468>  // b.pmore
  417448:	ldrb	w0, [sp, #78]
  41744c:	ldr	w1, [sp, #28]
  417450:	cmp	w1, w0
  417454:	b.ne	417484 <ferror@plt+0x14484>  // b.any
  417458:	ldrb	w0, [sp, #79]
  41745c:	sub	w0, w0, #0x30
  417460:	cmp	w0, #0x9
  417464:	b.ls	417484 <ferror@plt+0x14484>  // b.plast
  417468:	ldr	w0, [sp, #28]
  41746c:	and	w0, w0, #0xff
  417470:	mov	w2, w0
  417474:	ldr	x1, [sp, #40]
  417478:	ldr	x0, [sp, #32]
  41747c:	bl	417068 <ferror@plt+0x14068>
  417480:	b	4178b0 <ferror@plt+0x148b0>
  417484:	ldrb	w1, [sp, #78]
  417488:	ldrb	w0, [sp, #79]
  41748c:	sub	w0, w1, w0
  417490:	str	w0, [sp, #52]
  417494:	str	xzr, [sp, #64]
  417498:	b	4174d0 <ferror@plt+0x144d0>
  41749c:	ldr	x0, [sp, #40]
  4174a0:	add	x0, x0, #0x1
  4174a4:	str	x0, [sp, #40]
  4174a8:	ldr	x0, [sp, #40]
  4174ac:	ldrb	w0, [x0]
  4174b0:	strb	w0, [sp, #79]
  4174b4:	ldrb	w0, [sp, #79]
  4174b8:	ldr	w1, [sp, #24]
  4174bc:	cmp	w1, w0
  4174c0:	b.eq	41749c <ferror@plt+0x1449c>  // b.none
  4174c4:	ldr	x0, [sp, #64]
  4174c8:	add	x0, x0, #0x1
  4174cc:	str	x0, [sp, #64]
  4174d0:	ldrb	w0, [sp, #79]
  4174d4:	sub	w0, w0, #0x30
  4174d8:	cmp	w0, #0x9
  4174dc:	b.ls	41749c <ferror@plt+0x1449c>  // b.plast
  4174e0:	str	xzr, [sp, #56]
  4174e4:	b	41751c <ferror@plt+0x1451c>
  4174e8:	ldr	x0, [sp, #32]
  4174ec:	add	x0, x0, #0x1
  4174f0:	str	x0, [sp, #32]
  4174f4:	ldr	x0, [sp, #32]
  4174f8:	ldrb	w0, [x0]
  4174fc:	strb	w0, [sp, #78]
  417500:	ldrb	w0, [sp, #78]
  417504:	ldr	w1, [sp, #24]
  417508:	cmp	w1, w0
  41750c:	b.eq	4174e8 <ferror@plt+0x144e8>  // b.none
  417510:	ldr	x0, [sp, #56]
  417514:	add	x0, x0, #0x1
  417518:	str	x0, [sp, #56]
  41751c:	ldrb	w0, [sp, #78]
  417520:	sub	w0, w0, #0x30
  417524:	cmp	w0, #0x9
  417528:	b.ls	4174e8 <ferror@plt+0x144e8>  // b.plast
  41752c:	ldr	x1, [sp, #64]
  417530:	ldr	x0, [sp, #56]
  417534:	cmp	x1, x0
  417538:	b.eq	41755c <ferror@plt+0x1455c>  // b.none
  41753c:	ldr	x1, [sp, #64]
  417540:	ldr	x0, [sp, #56]
  417544:	cmp	x1, x0
  417548:	b.cs	417554 <ferror@plt+0x14554>  // b.hs, b.nlast
  41754c:	mov	w0, #0x1                   	// #1
  417550:	b	4178b0 <ferror@plt+0x148b0>
  417554:	mov	w0, #0xffffffff            	// #-1
  417558:	b	4178b0 <ferror@plt+0x148b0>
  41755c:	ldr	x0, [sp, #64]
  417560:	cmp	x0, #0x0
  417564:	b.ne	417570 <ferror@plt+0x14570>  // b.any
  417568:	mov	w0, #0x0                   	// #0
  41756c:	b	4178b0 <ferror@plt+0x148b0>
  417570:	ldr	w0, [sp, #52]
  417574:	b	4178b0 <ferror@plt+0x148b0>
  417578:	ldrb	w0, [sp, #78]
  41757c:	cmp	w0, #0x2d
  417580:	b.ne	41769c <ferror@plt+0x1469c>  // b.any
  417584:	ldr	x0, [sp, #32]
  417588:	add	x0, x0, #0x1
  41758c:	str	x0, [sp, #32]
  417590:	ldr	x0, [sp, #32]
  417594:	ldrb	w0, [x0]
  417598:	strb	w0, [sp, #78]
  41759c:	ldrb	w0, [sp, #78]
  4175a0:	cmp	w0, #0x30
  4175a4:	b.eq	417584 <ferror@plt+0x14584>  // b.none
  4175a8:	ldrb	w0, [sp, #78]
  4175ac:	ldr	w1, [sp, #24]
  4175b0:	cmp	w1, w0
  4175b4:	b.eq	417584 <ferror@plt+0x14584>  // b.none
  4175b8:	ldrb	w0, [sp, #78]
  4175bc:	ldr	w1, [sp, #28]
  4175c0:	cmp	w1, w0
  4175c4:	b.ne	4175ec <ferror@plt+0x145ec>  // b.any
  4175c8:	ldr	x0, [sp, #32]
  4175cc:	add	x0, x0, #0x1
  4175d0:	str	x0, [sp, #32]
  4175d4:	ldr	x0, [sp, #32]
  4175d8:	ldrb	w0, [x0]
  4175dc:	strb	w0, [sp, #78]
  4175e0:	ldrb	w0, [sp, #78]
  4175e4:	cmp	w0, #0x30
  4175e8:	b.eq	4175c8 <ferror@plt+0x145c8>  // b.none
  4175ec:	ldrb	w0, [sp, #78]
  4175f0:	sub	w0, w0, #0x30
  4175f4:	cmp	w0, #0x9
  4175f8:	b.hi	41761c <ferror@plt+0x1461c>  // b.pmore
  4175fc:	mov	w0, #0x1                   	// #1
  417600:	b	4178b0 <ferror@plt+0x148b0>
  417604:	ldr	x0, [sp, #40]
  417608:	add	x0, x0, #0x1
  41760c:	str	x0, [sp, #40]
  417610:	ldr	x0, [sp, #40]
  417614:	ldrb	w0, [x0]
  417618:	strb	w0, [sp, #79]
  41761c:	ldrb	w0, [sp, #79]
  417620:	cmp	w0, #0x30
  417624:	b.eq	417604 <ferror@plt+0x14604>  // b.none
  417628:	ldrb	w0, [sp, #79]
  41762c:	ldr	w1, [sp, #24]
  417630:	cmp	w1, w0
  417634:	b.eq	417604 <ferror@plt+0x14604>  // b.none
  417638:	ldrb	w0, [sp, #79]
  41763c:	ldr	w1, [sp, #28]
  417640:	cmp	w1, w0
  417644:	b.ne	41766c <ferror@plt+0x1466c>  // b.any
  417648:	ldr	x0, [sp, #40]
  41764c:	add	x0, x0, #0x1
  417650:	str	x0, [sp, #40]
  417654:	ldr	x0, [sp, #40]
  417658:	ldrb	w0, [x0]
  41765c:	strb	w0, [sp, #79]
  417660:	ldrb	w0, [sp, #79]
  417664:	cmp	w0, #0x30
  417668:	b.eq	417648 <ferror@plt+0x14648>  // b.none
  41766c:	ldrb	w0, [sp, #79]
  417670:	sub	w0, w0, #0x30
  417674:	cmp	w0, #0x9
  417678:	cset	w0, ls  // ls = plast
  41767c:	and	w0, w0, #0xff
  417680:	b	4178b0 <ferror@plt+0x148b0>
  417684:	ldr	x0, [sp, #40]
  417688:	add	x0, x0, #0x1
  41768c:	str	x0, [sp, #40]
  417690:	ldr	x0, [sp, #40]
  417694:	ldrb	w0, [x0]
  417698:	strb	w0, [sp, #79]
  41769c:	ldrb	w0, [sp, #79]
  4176a0:	cmp	w0, #0x30
  4176a4:	b.eq	417684 <ferror@plt+0x14684>  // b.none
  4176a8:	ldrb	w0, [sp, #79]
  4176ac:	ldr	w1, [sp, #24]
  4176b0:	cmp	w1, w0
  4176b4:	b.eq	417684 <ferror@plt+0x14684>  // b.none
  4176b8:	b	4176d4 <ferror@plt+0x146d4>
  4176bc:	ldr	x0, [sp, #32]
  4176c0:	add	x0, x0, #0x1
  4176c4:	str	x0, [sp, #32]
  4176c8:	ldr	x0, [sp, #32]
  4176cc:	ldrb	w0, [x0]
  4176d0:	strb	w0, [sp, #78]
  4176d4:	ldrb	w0, [sp, #78]
  4176d8:	cmp	w0, #0x30
  4176dc:	b.eq	4176bc <ferror@plt+0x146bc>  // b.none
  4176e0:	ldrb	w0, [sp, #78]
  4176e4:	ldr	w1, [sp, #24]
  4176e8:	cmp	w1, w0
  4176ec:	b.eq	4176bc <ferror@plt+0x146bc>  // b.none
  4176f0:	b	417744 <ferror@plt+0x14744>
  4176f4:	ldr	x0, [sp, #40]
  4176f8:	add	x0, x0, #0x1
  4176fc:	str	x0, [sp, #40]
  417700:	ldr	x0, [sp, #40]
  417704:	ldrb	w0, [x0]
  417708:	strb	w0, [sp, #79]
  41770c:	ldrb	w0, [sp, #79]
  417710:	ldr	w1, [sp, #24]
  417714:	cmp	w1, w0
  417718:	b.eq	4176f4 <ferror@plt+0x146f4>  // b.none
  41771c:	ldr	x0, [sp, #32]
  417720:	add	x0, x0, #0x1
  417724:	str	x0, [sp, #32]
  417728:	ldr	x0, [sp, #32]
  41772c:	ldrb	w0, [x0]
  417730:	strb	w0, [sp, #78]
  417734:	ldrb	w0, [sp, #78]
  417738:	ldr	w1, [sp, #24]
  41773c:	cmp	w1, w0
  417740:	b.eq	41771c <ferror@plt+0x1471c>  // b.none
  417744:	ldrb	w1, [sp, #79]
  417748:	ldrb	w0, [sp, #78]
  41774c:	cmp	w1, w0
  417750:	b.ne	417764 <ferror@plt+0x14764>  // b.any
  417754:	ldrb	w0, [sp, #79]
  417758:	sub	w0, w0, #0x30
  41775c:	cmp	w0, #0x9
  417760:	b.ls	4176f4 <ferror@plt+0x146f4>  // b.plast
  417764:	ldrb	w0, [sp, #79]
  417768:	ldr	w1, [sp, #28]
  41776c:	cmp	w1, w0
  417770:	b.ne	417784 <ferror@plt+0x14784>  // b.any
  417774:	ldrb	w0, [sp, #78]
  417778:	sub	w0, w0, #0x30
  41777c:	cmp	w0, #0x9
  417780:	b.hi	4177a4 <ferror@plt+0x147a4>  // b.pmore
  417784:	ldrb	w0, [sp, #78]
  417788:	ldr	w1, [sp, #28]
  41778c:	cmp	w1, w0
  417790:	b.ne	4177c0 <ferror@plt+0x147c0>  // b.any
  417794:	ldrb	w0, [sp, #79]
  417798:	sub	w0, w0, #0x30
  41779c:	cmp	w0, #0x9
  4177a0:	b.ls	4177c0 <ferror@plt+0x147c0>  // b.plast
  4177a4:	ldr	w0, [sp, #28]
  4177a8:	and	w0, w0, #0xff
  4177ac:	mov	w2, w0
  4177b0:	ldr	x1, [sp, #32]
  4177b4:	ldr	x0, [sp, #40]
  4177b8:	bl	417068 <ferror@plt+0x14068>
  4177bc:	b	4178b0 <ferror@plt+0x148b0>
  4177c0:	ldrb	w1, [sp, #79]
  4177c4:	ldrb	w0, [sp, #78]
  4177c8:	sub	w0, w1, w0
  4177cc:	str	w0, [sp, #52]
  4177d0:	str	xzr, [sp, #64]
  4177d4:	b	41780c <ferror@plt+0x1480c>
  4177d8:	ldr	x0, [sp, #40]
  4177dc:	add	x0, x0, #0x1
  4177e0:	str	x0, [sp, #40]
  4177e4:	ldr	x0, [sp, #40]
  4177e8:	ldrb	w0, [x0]
  4177ec:	strb	w0, [sp, #79]
  4177f0:	ldrb	w0, [sp, #79]
  4177f4:	ldr	w1, [sp, #24]
  4177f8:	cmp	w1, w0
  4177fc:	b.eq	4177d8 <ferror@plt+0x147d8>  // b.none
  417800:	ldr	x0, [sp, #64]
  417804:	add	x0, x0, #0x1
  417808:	str	x0, [sp, #64]
  41780c:	ldrb	w0, [sp, #79]
  417810:	sub	w0, w0, #0x30
  417814:	cmp	w0, #0x9
  417818:	b.ls	4177d8 <ferror@plt+0x147d8>  // b.plast
  41781c:	str	xzr, [sp, #56]
  417820:	b	417858 <ferror@plt+0x14858>
  417824:	ldr	x0, [sp, #32]
  417828:	add	x0, x0, #0x1
  41782c:	str	x0, [sp, #32]
  417830:	ldr	x0, [sp, #32]
  417834:	ldrb	w0, [x0]
  417838:	strb	w0, [sp, #78]
  41783c:	ldrb	w0, [sp, #78]
  417840:	ldr	w1, [sp, #24]
  417844:	cmp	w1, w0
  417848:	b.eq	417824 <ferror@plt+0x14824>  // b.none
  41784c:	ldr	x0, [sp, #56]
  417850:	add	x0, x0, #0x1
  417854:	str	x0, [sp, #56]
  417858:	ldrb	w0, [sp, #78]
  41785c:	sub	w0, w0, #0x30
  417860:	cmp	w0, #0x9
  417864:	b.ls	417824 <ferror@plt+0x14824>  // b.plast
  417868:	ldr	x1, [sp, #64]
  41786c:	ldr	x0, [sp, #56]
  417870:	cmp	x1, x0
  417874:	b.eq	417898 <ferror@plt+0x14898>  // b.none
  417878:	ldr	x1, [sp, #64]
  41787c:	ldr	x0, [sp, #56]
  417880:	cmp	x1, x0
  417884:	b.cs	417890 <ferror@plt+0x14890>  // b.hs, b.nlast
  417888:	mov	w0, #0xffffffff            	// #-1
  41788c:	b	4178b0 <ferror@plt+0x148b0>
  417890:	mov	w0, #0x1                   	// #1
  417894:	b	4178b0 <ferror@plt+0x148b0>
  417898:	ldr	x0, [sp, #64]
  41789c:	cmp	x0, #0x0
  4178a0:	b.ne	4178ac <ferror@plt+0x148ac>  // b.any
  4178a4:	mov	w0, #0x0                   	// #0
  4178a8:	b	4178b0 <ferror@plt+0x148b0>
  4178ac:	ldr	w0, [sp, #52]
  4178b0:	ldp	x29, x30, [sp], #80
  4178b4:	ret
  4178b8:	stp	x29, x30, [sp, #-48]!
  4178bc:	mov	x29, sp
  4178c0:	str	x0, [sp, #40]
  4178c4:	str	x1, [sp, #32]
  4178c8:	str	w2, [sp, #28]
  4178cc:	str	w3, [sp, #24]
  4178d0:	ldr	w3, [sp, #24]
  4178d4:	ldr	w2, [sp, #28]
  4178d8:	ldr	x1, [sp, #32]
  4178dc:	ldr	x0, [sp, #40]
  4178e0:	bl	417234 <ferror@plt+0x14234>
  4178e4:	ldp	x29, x30, [sp], #48
  4178e8:	ret
  4178ec:	stp	x29, x30, [sp, #-48]!
  4178f0:	mov	x29, sp
  4178f4:	str	w0, [sp, #28]
  4178f8:	ldr	w0, [sp, #28]
  4178fc:	cmp	w0, #0x0
  417900:	b.lt	417948 <ferror@plt+0x14948>  // b.tstop
  417904:	ldr	w0, [sp, #28]
  417908:	cmp	w0, #0x2
  41790c:	b.gt	417948 <ferror@plt+0x14948>
  417910:	ldr	w0, [sp, #28]
  417914:	bl	41b360 <_obstack_memory_used@@Base+0xec4>
  417918:	str	w0, [sp, #44]
  41791c:	bl	402f50 <__errno_location@plt>
  417920:	ldr	w0, [x0]
  417924:	str	w0, [sp, #40]
  417928:	ldr	w0, [sp, #28]
  41792c:	bl	402ba0 <close@plt>
  417930:	bl	402f50 <__errno_location@plt>
  417934:	mov	x1, x0
  417938:	ldr	w0, [sp, #40]
  41793c:	str	w0, [x1]
  417940:	ldr	w0, [sp, #44]
  417944:	str	w0, [sp, #28]
  417948:	ldr	w0, [sp, #28]
  41794c:	ldp	x29, x30, [sp], #48
  417950:	ret
  417954:	sub	sp, sp, #0x60
  417958:	stp	x29, x30, [sp, #32]
  41795c:	add	x29, sp, #0x20
  417960:	str	x0, [sp, #88]
  417964:	str	x1, [sp, #80]
  417968:	str	x2, [sp, #72]
  41796c:	str	x3, [sp, #64]
  417970:	str	x4, [sp, #56]
  417974:	str	x5, [sp, #48]
  417978:	ldr	x0, [sp, #80]
  41797c:	cmp	x0, #0x0
  417980:	b.eq	4179a4 <ferror@plt+0x149a4>  // b.none
  417984:	ldr	x4, [sp, #64]
  417988:	ldr	x3, [sp, #72]
  41798c:	ldr	x2, [sp, #80]
  417990:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  417994:	add	x1, x0, #0x988
  417998:	ldr	x0, [sp, #88]
  41799c:	bl	402fe0 <fprintf@plt>
  4179a0:	b	4179bc <ferror@plt+0x149bc>
  4179a4:	ldr	x3, [sp, #64]
  4179a8:	ldr	x2, [sp, #72]
  4179ac:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4179b0:	add	x1, x0, #0x998
  4179b4:	ldr	x0, [sp, #88]
  4179b8:	bl	402fe0 <fprintf@plt>
  4179bc:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4179c0:	add	x0, x0, #0x9a0
  4179c4:	bl	402fd0 <gettext@plt>
  4179c8:	mov	w3, #0x7e3                 	// #2019
  4179cc:	mov	x2, x0
  4179d0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4179d4:	add	x1, x0, #0xcd0
  4179d8:	ldr	x0, [sp, #88]
  4179dc:	bl	402fe0 <fprintf@plt>
  4179e0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4179e4:	add	x0, x0, #0x9a8
  4179e8:	bl	402fd0 <gettext@plt>
  4179ec:	ldr	x1, [sp, #88]
  4179f0:	bl	402eb0 <fputs_unlocked@plt>
  4179f4:	ldr	x0, [sp, #48]
  4179f8:	cmp	x0, #0x9
  4179fc:	b.eq	417dd0 <ferror@plt+0x14dd0>  // b.none
  417a00:	ldr	x0, [sp, #48]
  417a04:	cmp	x0, #0x9
  417a08:	b.hi	417e68 <ferror@plt+0x14e68>  // b.pmore
  417a0c:	ldr	x0, [sp, #48]
  417a10:	cmp	x0, #0x8
  417a14:	b.eq	417d4c <ferror@plt+0x14d4c>  // b.none
  417a18:	ldr	x0, [sp, #48]
  417a1c:	cmp	x0, #0x8
  417a20:	b.hi	417e68 <ferror@plt+0x14e68>  // b.pmore
  417a24:	ldr	x0, [sp, #48]
  417a28:	cmp	x0, #0x7
  417a2c:	b.eq	417cc0 <ferror@plt+0x14cc0>  // b.none
  417a30:	ldr	x0, [sp, #48]
  417a34:	cmp	x0, #0x7
  417a38:	b.hi	417e68 <ferror@plt+0x14e68>  // b.pmore
  417a3c:	ldr	x0, [sp, #48]
  417a40:	cmp	x0, #0x6
  417a44:	b.eq	417c44 <ferror@plt+0x14c44>  // b.none
  417a48:	ldr	x0, [sp, #48]
  417a4c:	cmp	x0, #0x6
  417a50:	b.hi	417e68 <ferror@plt+0x14e68>  // b.pmore
  417a54:	ldr	x0, [sp, #48]
  417a58:	cmp	x0, #0x5
  417a5c:	b.eq	417bd8 <ferror@plt+0x14bd8>  // b.none
  417a60:	ldr	x0, [sp, #48]
  417a64:	cmp	x0, #0x5
  417a68:	b.hi	417e68 <ferror@plt+0x14e68>  // b.pmore
  417a6c:	ldr	x0, [sp, #48]
  417a70:	cmp	x0, #0x4
  417a74:	b.eq	417b7c <ferror@plt+0x14b7c>  // b.none
  417a78:	ldr	x0, [sp, #48]
  417a7c:	cmp	x0, #0x4
  417a80:	b.hi	417e68 <ferror@plt+0x14e68>  // b.pmore
  417a84:	ldr	x0, [sp, #48]
  417a88:	cmp	x0, #0x3
  417a8c:	b.eq	417b30 <ferror@plt+0x14b30>  // b.none
  417a90:	ldr	x0, [sp, #48]
  417a94:	cmp	x0, #0x3
  417a98:	b.hi	417e68 <ferror@plt+0x14e68>  // b.pmore
  417a9c:	ldr	x0, [sp, #48]
  417aa0:	cmp	x0, #0x2
  417aa4:	b.eq	417af4 <ferror@plt+0x14af4>  // b.none
  417aa8:	ldr	x0, [sp, #48]
  417aac:	cmp	x0, #0x2
  417ab0:	b.hi	417e68 <ferror@plt+0x14e68>  // b.pmore
  417ab4:	ldr	x0, [sp, #48]
  417ab8:	cmp	x0, #0x0
  417abc:	b.eq	417f00 <ferror@plt+0x14f00>  // b.none
  417ac0:	ldr	x0, [sp, #48]
  417ac4:	cmp	x0, #0x1
  417ac8:	b.ne	417e68 <ferror@plt+0x14e68>  // b.any
  417acc:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  417ad0:	add	x0, x0, #0xa78
  417ad4:	bl	402fd0 <gettext@plt>
  417ad8:	mov	x1, x0
  417adc:	ldr	x0, [sp, #56]
  417ae0:	ldr	x0, [x0]
  417ae4:	mov	x2, x0
  417ae8:	ldr	x0, [sp, #88]
  417aec:	bl	402fe0 <fprintf@plt>
  417af0:	b	417f04 <ferror@plt+0x14f04>
  417af4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  417af8:	add	x0, x0, #0xa88
  417afc:	bl	402fd0 <gettext@plt>
  417b00:	mov	x4, x0
  417b04:	ldr	x0, [sp, #56]
  417b08:	ldr	x1, [x0]
  417b0c:	ldr	x0, [sp, #56]
  417b10:	add	x0, x0, #0x8
  417b14:	ldr	x0, [x0]
  417b18:	mov	x3, x0
  417b1c:	mov	x2, x1
  417b20:	mov	x1, x4
  417b24:	ldr	x0, [sp, #88]
  417b28:	bl	402fe0 <fprintf@plt>
  417b2c:	b	417f04 <ferror@plt+0x14f04>
  417b30:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  417b34:	add	x0, x0, #0xaa0
  417b38:	bl	402fd0 <gettext@plt>
  417b3c:	mov	x5, x0
  417b40:	ldr	x0, [sp, #56]
  417b44:	ldr	x1, [x0]
  417b48:	ldr	x0, [sp, #56]
  417b4c:	add	x0, x0, #0x8
  417b50:	ldr	x2, [x0]
  417b54:	ldr	x0, [sp, #56]
  417b58:	add	x0, x0, #0x10
  417b5c:	ldr	x0, [x0]
  417b60:	mov	x4, x0
  417b64:	mov	x3, x2
  417b68:	mov	x2, x1
  417b6c:	mov	x1, x5
  417b70:	ldr	x0, [sp, #88]
  417b74:	bl	402fe0 <fprintf@plt>
  417b78:	b	417f04 <ferror@plt+0x14f04>
  417b7c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  417b80:	add	x0, x0, #0xac0
  417b84:	bl	402fd0 <gettext@plt>
  417b88:	mov	x6, x0
  417b8c:	ldr	x0, [sp, #56]
  417b90:	ldr	x1, [x0]
  417b94:	ldr	x0, [sp, #56]
  417b98:	add	x0, x0, #0x8
  417b9c:	ldr	x2, [x0]
  417ba0:	ldr	x0, [sp, #56]
  417ba4:	add	x0, x0, #0x10
  417ba8:	ldr	x3, [x0]
  417bac:	ldr	x0, [sp, #56]
  417bb0:	add	x0, x0, #0x18
  417bb4:	ldr	x0, [x0]
  417bb8:	mov	x5, x0
  417bbc:	mov	x4, x3
  417bc0:	mov	x3, x2
  417bc4:	mov	x2, x1
  417bc8:	mov	x1, x6
  417bcc:	ldr	x0, [sp, #88]
  417bd0:	bl	402fe0 <fprintf@plt>
  417bd4:	b	417f04 <ferror@plt+0x14f04>
  417bd8:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  417bdc:	add	x0, x0, #0xae0
  417be0:	bl	402fd0 <gettext@plt>
  417be4:	mov	x7, x0
  417be8:	ldr	x0, [sp, #56]
  417bec:	ldr	x1, [x0]
  417bf0:	ldr	x0, [sp, #56]
  417bf4:	add	x0, x0, #0x8
  417bf8:	ldr	x2, [x0]
  417bfc:	ldr	x0, [sp, #56]
  417c00:	add	x0, x0, #0x10
  417c04:	ldr	x3, [x0]
  417c08:	ldr	x0, [sp, #56]
  417c0c:	add	x0, x0, #0x18
  417c10:	ldr	x4, [x0]
  417c14:	ldr	x0, [sp, #56]
  417c18:	add	x0, x0, #0x20
  417c1c:	ldr	x0, [x0]
  417c20:	mov	x6, x0
  417c24:	mov	x5, x4
  417c28:	mov	x4, x3
  417c2c:	mov	x3, x2
  417c30:	mov	x2, x1
  417c34:	mov	x1, x7
  417c38:	ldr	x0, [sp, #88]
  417c3c:	bl	402fe0 <fprintf@plt>
  417c40:	b	417f04 <ferror@plt+0x14f04>
  417c44:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  417c48:	add	x0, x0, #0xb08
  417c4c:	bl	402fd0 <gettext@plt>
  417c50:	mov	x8, x0
  417c54:	ldr	x0, [sp, #56]
  417c58:	ldr	x1, [x0]
  417c5c:	ldr	x0, [sp, #56]
  417c60:	add	x0, x0, #0x8
  417c64:	ldr	x2, [x0]
  417c68:	ldr	x0, [sp, #56]
  417c6c:	add	x0, x0, #0x10
  417c70:	ldr	x3, [x0]
  417c74:	ldr	x0, [sp, #56]
  417c78:	add	x0, x0, #0x18
  417c7c:	ldr	x4, [x0]
  417c80:	ldr	x0, [sp, #56]
  417c84:	add	x0, x0, #0x20
  417c88:	ldr	x5, [x0]
  417c8c:	ldr	x0, [sp, #56]
  417c90:	add	x0, x0, #0x28
  417c94:	ldr	x0, [x0]
  417c98:	mov	x7, x0
  417c9c:	mov	x6, x5
  417ca0:	mov	x5, x4
  417ca4:	mov	x4, x3
  417ca8:	mov	x3, x2
  417cac:	mov	x2, x1
  417cb0:	mov	x1, x8
  417cb4:	ldr	x0, [sp, #88]
  417cb8:	bl	402fe0 <fprintf@plt>
  417cbc:	b	417f04 <ferror@plt+0x14f04>
  417cc0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  417cc4:	add	x0, x0, #0xb30
  417cc8:	bl	402fd0 <gettext@plt>
  417ccc:	mov	x8, x0
  417cd0:	ldr	x0, [sp, #56]
  417cd4:	ldr	x1, [x0]
  417cd8:	ldr	x0, [sp, #56]
  417cdc:	add	x0, x0, #0x8
  417ce0:	ldr	x2, [x0]
  417ce4:	ldr	x0, [sp, #56]
  417ce8:	add	x0, x0, #0x10
  417cec:	ldr	x3, [x0]
  417cf0:	ldr	x0, [sp, #56]
  417cf4:	add	x0, x0, #0x18
  417cf8:	ldr	x4, [x0]
  417cfc:	ldr	x0, [sp, #56]
  417d00:	add	x0, x0, #0x20
  417d04:	ldr	x5, [x0]
  417d08:	ldr	x0, [sp, #56]
  417d0c:	add	x0, x0, #0x28
  417d10:	ldr	x6, [x0]
  417d14:	ldr	x0, [sp, #56]
  417d18:	add	x0, x0, #0x30
  417d1c:	ldr	x0, [x0]
  417d20:	str	x0, [sp]
  417d24:	mov	x7, x6
  417d28:	mov	x6, x5
  417d2c:	mov	x5, x4
  417d30:	mov	x4, x3
  417d34:	mov	x3, x2
  417d38:	mov	x2, x1
  417d3c:	mov	x1, x8
  417d40:	ldr	x0, [sp, #88]
  417d44:	bl	402fe0 <fprintf@plt>
  417d48:	b	417f04 <ferror@plt+0x14f04>
  417d4c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  417d50:	add	x0, x0, #0xb60
  417d54:	bl	402fd0 <gettext@plt>
  417d58:	mov	x8, x0
  417d5c:	ldr	x0, [sp, #56]
  417d60:	ldr	x2, [x0]
  417d64:	ldr	x0, [sp, #56]
  417d68:	add	x0, x0, #0x8
  417d6c:	ldr	x3, [x0]
  417d70:	ldr	x0, [sp, #56]
  417d74:	add	x0, x0, #0x10
  417d78:	ldr	x4, [x0]
  417d7c:	ldr	x0, [sp, #56]
  417d80:	add	x0, x0, #0x18
  417d84:	ldr	x5, [x0]
  417d88:	ldr	x0, [sp, #56]
  417d8c:	add	x0, x0, #0x20
  417d90:	ldr	x6, [x0]
  417d94:	ldr	x0, [sp, #56]
  417d98:	add	x0, x0, #0x28
  417d9c:	ldr	x7, [x0]
  417da0:	ldr	x0, [sp, #56]
  417da4:	add	x0, x0, #0x30
  417da8:	ldr	x0, [x0]
  417dac:	ldr	x1, [sp, #56]
  417db0:	add	x1, x1, #0x38
  417db4:	ldr	x1, [x1]
  417db8:	str	x1, [sp, #8]
  417dbc:	str	x0, [sp]
  417dc0:	mov	x1, x8
  417dc4:	ldr	x0, [sp, #88]
  417dc8:	bl	402fe0 <fprintf@plt>
  417dcc:	b	417f04 <ferror@plt+0x14f04>
  417dd0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  417dd4:	add	x0, x0, #0xb90
  417dd8:	bl	402fd0 <gettext@plt>
  417ddc:	mov	x9, x0
  417de0:	ldr	x0, [sp, #56]
  417de4:	ldr	x8, [x0]
  417de8:	ldr	x0, [sp, #56]
  417dec:	add	x0, x0, #0x8
  417df0:	ldr	x3, [x0]
  417df4:	ldr	x0, [sp, #56]
  417df8:	add	x0, x0, #0x10
  417dfc:	ldr	x4, [x0]
  417e00:	ldr	x0, [sp, #56]
  417e04:	add	x0, x0, #0x18
  417e08:	ldr	x5, [x0]
  417e0c:	ldr	x0, [sp, #56]
  417e10:	add	x0, x0, #0x20
  417e14:	ldr	x6, [x0]
  417e18:	ldr	x0, [sp, #56]
  417e1c:	add	x0, x0, #0x28
  417e20:	ldr	x7, [x0]
  417e24:	ldr	x0, [sp, #56]
  417e28:	add	x0, x0, #0x30
  417e2c:	ldr	x0, [x0]
  417e30:	ldr	x1, [sp, #56]
  417e34:	add	x1, x1, #0x38
  417e38:	ldr	x1, [x1]
  417e3c:	ldr	x2, [sp, #56]
  417e40:	add	x2, x2, #0x40
  417e44:	ldr	x2, [x2]
  417e48:	str	x2, [sp, #16]
  417e4c:	str	x1, [sp, #8]
  417e50:	str	x0, [sp]
  417e54:	mov	x2, x8
  417e58:	mov	x1, x9
  417e5c:	ldr	x0, [sp, #88]
  417e60:	bl	402fe0 <fprintf@plt>
  417e64:	b	417f04 <ferror@plt+0x14f04>
  417e68:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  417e6c:	add	x0, x0, #0xbc8
  417e70:	bl	402fd0 <gettext@plt>
  417e74:	mov	x9, x0
  417e78:	ldr	x0, [sp, #56]
  417e7c:	ldr	x8, [x0]
  417e80:	ldr	x0, [sp, #56]
  417e84:	add	x0, x0, #0x8
  417e88:	ldr	x3, [x0]
  417e8c:	ldr	x0, [sp, #56]
  417e90:	add	x0, x0, #0x10
  417e94:	ldr	x4, [x0]
  417e98:	ldr	x0, [sp, #56]
  417e9c:	add	x0, x0, #0x18
  417ea0:	ldr	x5, [x0]
  417ea4:	ldr	x0, [sp, #56]
  417ea8:	add	x0, x0, #0x20
  417eac:	ldr	x6, [x0]
  417eb0:	ldr	x0, [sp, #56]
  417eb4:	add	x0, x0, #0x28
  417eb8:	ldr	x7, [x0]
  417ebc:	ldr	x0, [sp, #56]
  417ec0:	add	x0, x0, #0x30
  417ec4:	ldr	x0, [x0]
  417ec8:	ldr	x1, [sp, #56]
  417ecc:	add	x1, x1, #0x38
  417ed0:	ldr	x1, [x1]
  417ed4:	ldr	x2, [sp, #56]
  417ed8:	add	x2, x2, #0x40
  417edc:	ldr	x2, [x2]
  417ee0:	str	x2, [sp, #16]
  417ee4:	str	x1, [sp, #8]
  417ee8:	str	x0, [sp]
  417eec:	mov	x2, x8
  417ef0:	mov	x1, x9
  417ef4:	ldr	x0, [sp, #88]
  417ef8:	bl	402fe0 <fprintf@plt>
  417efc:	b	417f04 <ferror@plt+0x14f04>
  417f00:	nop
  417f04:	nop
  417f08:	ldp	x29, x30, [sp, #32]
  417f0c:	add	sp, sp, #0x60
  417f10:	ret
  417f14:	stp	x29, x30, [sp, #-80]!
  417f18:	mov	x29, sp
  417f1c:	str	x0, [sp, #56]
  417f20:	str	x1, [sp, #48]
  417f24:	str	x2, [sp, #40]
  417f28:	str	x3, [sp, #32]
  417f2c:	str	x4, [sp, #24]
  417f30:	str	xzr, [sp, #72]
  417f34:	b	417f44 <ferror@plt+0x14f44>
  417f38:	ldr	x0, [sp, #72]
  417f3c:	add	x0, x0, #0x1
  417f40:	str	x0, [sp, #72]
  417f44:	ldr	x0, [sp, #72]
  417f48:	lsl	x0, x0, #3
  417f4c:	ldr	x1, [sp, #24]
  417f50:	add	x0, x1, x0
  417f54:	ldr	x0, [x0]
  417f58:	cmp	x0, #0x0
  417f5c:	b.ne	417f38 <ferror@plt+0x14f38>  // b.any
  417f60:	ldr	x5, [sp, #72]
  417f64:	ldr	x4, [sp, #24]
  417f68:	ldr	x3, [sp, #32]
  417f6c:	ldr	x2, [sp, #40]
  417f70:	ldr	x1, [sp, #48]
  417f74:	ldr	x0, [sp, #56]
  417f78:	bl	417954 <ferror@plt+0x14954>
  417f7c:	nop
  417f80:	ldp	x29, x30, [sp], #80
  417f84:	ret
  417f88:	stp	x29, x30, [sp, #-160]!
  417f8c:	mov	x29, sp
  417f90:	str	x19, [sp, #16]
  417f94:	str	x0, [sp, #56]
  417f98:	str	x1, [sp, #48]
  417f9c:	str	x2, [sp, #40]
  417fa0:	str	x3, [sp, #32]
  417fa4:	mov	x19, x4
  417fa8:	str	xzr, [sp, #152]
  417fac:	b	417fbc <ferror@plt+0x14fbc>
  417fb0:	ldr	x0, [sp, #152]
  417fb4:	add	x0, x0, #0x1
  417fb8:	str	x0, [sp, #152]
  417fbc:	ldr	x0, [sp, #152]
  417fc0:	cmp	x0, #0x9
  417fc4:	b.hi	418044 <ferror@plt+0x15044>  // b.pmore
  417fc8:	ldr	w1, [x19, #24]
  417fcc:	ldr	x0, [x19]
  417fd0:	cmp	w1, #0x0
  417fd4:	b.lt	417fe8 <ferror@plt+0x14fe8>  // b.tstop
  417fd8:	add	x1, x0, #0xf
  417fdc:	and	x1, x1, #0xfffffffffffffff8
  417fe0:	str	x1, [x19]
  417fe4:	b	418018 <ferror@plt+0x15018>
  417fe8:	add	w2, w1, #0x8
  417fec:	str	w2, [x19, #24]
  417ff0:	ldr	w2, [x19, #24]
  417ff4:	cmp	w2, #0x0
  417ff8:	b.le	41800c <ferror@plt+0x1500c>
  417ffc:	add	x1, x0, #0xf
  418000:	and	x1, x1, #0xfffffffffffffff8
  418004:	str	x1, [x19]
  418008:	b	418018 <ferror@plt+0x15018>
  41800c:	ldr	x2, [x19, #8]
  418010:	sxtw	x0, w1
  418014:	add	x0, x2, x0
  418018:	ldr	x2, [x0]
  41801c:	ldr	x0, [sp, #152]
  418020:	lsl	x0, x0, #3
  418024:	add	x1, sp, #0x48
  418028:	str	x2, [x1, x0]
  41802c:	ldr	x0, [sp, #152]
  418030:	lsl	x0, x0, #3
  418034:	add	x1, sp, #0x48
  418038:	ldr	x0, [x1, x0]
  41803c:	cmp	x0, #0x0
  418040:	b.ne	417fb0 <ferror@plt+0x14fb0>  // b.any
  418044:	add	x0, sp, #0x48
  418048:	ldr	x5, [sp, #152]
  41804c:	mov	x4, x0
  418050:	ldr	x3, [sp, #32]
  418054:	ldr	x2, [sp, #40]
  418058:	ldr	x1, [sp, #48]
  41805c:	ldr	x0, [sp, #56]
  418060:	bl	417954 <ferror@plt+0x14954>
  418064:	nop
  418068:	ldr	x19, [sp, #16]
  41806c:	ldp	x29, x30, [sp], #160
  418070:	ret
  418074:	stp	x29, x30, [sp, #-272]!
  418078:	mov	x29, sp
  41807c:	str	x0, [sp, #72]
  418080:	str	x1, [sp, #64]
  418084:	str	x2, [sp, #56]
  418088:	str	x3, [sp, #48]
  41808c:	str	x4, [sp, #240]
  418090:	str	x5, [sp, #248]
  418094:	str	x6, [sp, #256]
  418098:	str	x7, [sp, #264]
  41809c:	str	q0, [sp, #112]
  4180a0:	str	q1, [sp, #128]
  4180a4:	str	q2, [sp, #144]
  4180a8:	str	q3, [sp, #160]
  4180ac:	str	q4, [sp, #176]
  4180b0:	str	q5, [sp, #192]
  4180b4:	str	q6, [sp, #208]
  4180b8:	str	q7, [sp, #224]
  4180bc:	add	x0, sp, #0x110
  4180c0:	str	x0, [sp, #80]
  4180c4:	add	x0, sp, #0x110
  4180c8:	str	x0, [sp, #88]
  4180cc:	add	x0, sp, #0xf0
  4180d0:	str	x0, [sp, #96]
  4180d4:	mov	w0, #0xffffffe0            	// #-32
  4180d8:	str	w0, [sp, #104]
  4180dc:	mov	w0, #0xffffff80            	// #-128
  4180e0:	str	w0, [sp, #108]
  4180e4:	add	x2, sp, #0x10
  4180e8:	add	x3, sp, #0x50
  4180ec:	ldp	x0, x1, [x3]
  4180f0:	stp	x0, x1, [x2]
  4180f4:	ldp	x0, x1, [x3, #16]
  4180f8:	stp	x0, x1, [x2, #16]
  4180fc:	add	x0, sp, #0x10
  418100:	mov	x4, x0
  418104:	ldr	x3, [sp, #48]
  418108:	ldr	x2, [sp, #56]
  41810c:	ldr	x1, [sp, #64]
  418110:	ldr	x0, [sp, #72]
  418114:	bl	417f88 <ferror@plt+0x14f88>
  418118:	nop
  41811c:	ldp	x29, x30, [sp], #272
  418120:	ret
  418124:	stp	x29, x30, [sp, #-16]!
  418128:	mov	x29, sp
  41812c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418130:	add	x0, x0, #0xc08
  418134:	bl	402fd0 <gettext@plt>
  418138:	mov	x2, x0
  41813c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418140:	add	x1, x0, #0xc20
  418144:	mov	x0, x2
  418148:	bl	402f30 <printf@plt>
  41814c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418150:	add	x0, x0, #0xc38
  418154:	bl	402fd0 <gettext@plt>
  418158:	mov	x3, x0
  41815c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418160:	add	x2, x0, #0xc50
  418164:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418168:	add	x1, x0, #0xc78
  41816c:	mov	x0, x3
  418170:	bl	402f30 <printf@plt>
  418174:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418178:	add	x0, x0, #0xc88
  41817c:	bl	402fd0 <gettext@plt>
  418180:	mov	x2, x0
  418184:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  418188:	add	x0, x0, #0x570
  41818c:	ldr	x0, [x0]
  418190:	mov	x1, x0
  418194:	mov	x0, x2
  418198:	bl	402eb0 <fputs_unlocked@plt>
  41819c:	nop
  4181a0:	ldp	x29, x30, [sp], #16
  4181a4:	ret
  4181a8:	stp	x29, x30, [sp, #-32]!
  4181ac:	mov	x29, sp
  4181b0:	str	x0, [sp, #24]
  4181b4:	str	x1, [sp, #16]
  4181b8:	mov	x0, #0x0                   	// #0
  4181bc:	ldr	x6, [sp, #24]
  4181c0:	ldr	x1, [sp, #16]
  4181c4:	mul	x7, x6, x1
  4181c8:	umulh	x1, x6, x1
  4181cc:	mov	x2, x7
  4181d0:	mov	x3, x1
  4181d4:	mov	x4, x3
  4181d8:	mov	x5, #0x0                   	// #0
  4181dc:	cmp	x4, #0x0
  4181e0:	b.eq	4181e8 <ferror@plt+0x151e8>  // b.none
  4181e4:	mov	x0, #0x1                   	// #1
  4181e8:	cmp	x2, #0x0
  4181ec:	b.ge	4181f4 <ferror@plt+0x151f4>  // b.tcont
  4181f0:	mov	x0, #0x1                   	// #1
  4181f4:	and	w0, w0, #0x1
  4181f8:	and	w0, w0, #0xff
  4181fc:	cmp	w0, #0x0
  418200:	b.eq	418208 <ferror@plt+0x15208>  // b.none
  418204:	bl	4185bc <ferror@plt+0x155bc>
  418208:	ldr	x1, [sp, #24]
  41820c:	ldr	x0, [sp, #16]
  418210:	mul	x0, x1, x0
  418214:	bl	4183dc <ferror@plt+0x153dc>
  418218:	ldp	x29, x30, [sp], #32
  41821c:	ret
  418220:	stp	x29, x30, [sp, #-48]!
  418224:	mov	x29, sp
  418228:	str	x0, [sp, #40]
  41822c:	str	x1, [sp, #32]
  418230:	str	x2, [sp, #24]
  418234:	mov	x0, #0x0                   	// #0
  418238:	ldr	x2, [sp, #32]
  41823c:	ldr	x1, [sp, #24]
  418240:	mul	x3, x2, x1
  418244:	umulh	x1, x2, x1
  418248:	mov	x4, x3
  41824c:	mov	x5, x1
  418250:	mov	x6, x5
  418254:	mov	x7, #0x0                   	// #0
  418258:	cmp	x6, #0x0
  41825c:	b.eq	418264 <ferror@plt+0x15264>  // b.none
  418260:	mov	x0, #0x1                   	// #1
  418264:	cmp	x4, #0x0
  418268:	b.ge	418270 <ferror@plt+0x15270>  // b.tcont
  41826c:	mov	x0, #0x1                   	// #1
  418270:	and	w0, w0, #0x1
  418274:	and	w0, w0, #0xff
  418278:	cmp	w0, #0x0
  41827c:	b.eq	418284 <ferror@plt+0x15284>  // b.none
  418280:	bl	4185bc <ferror@plt+0x155bc>
  418284:	ldr	x1, [sp, #32]
  418288:	ldr	x0, [sp, #24]
  41828c:	mul	x0, x1, x0
  418290:	mov	x1, x0
  418294:	ldr	x0, [sp, #40]
  418298:	bl	41841c <ferror@plt+0x1541c>
  41829c:	ldp	x29, x30, [sp], #48
  4182a0:	ret
  4182a4:	stp	x29, x30, [sp, #-64]!
  4182a8:	mov	x29, sp
  4182ac:	str	x0, [sp, #40]
  4182b0:	str	x1, [sp, #32]
  4182b4:	str	x2, [sp, #24]
  4182b8:	ldr	x0, [sp, #32]
  4182bc:	ldr	x0, [x0]
  4182c0:	str	x0, [sp, #56]
  4182c4:	ldr	x0, [sp, #40]
  4182c8:	cmp	x0, #0x0
  4182cc:	b.ne	41835c <ferror@plt+0x1535c>  // b.any
  4182d0:	ldr	x0, [sp, #56]
  4182d4:	cmp	x0, #0x0
  4182d8:	b.ne	41830c <ferror@plt+0x1530c>  // b.any
  4182dc:	mov	x1, #0x80                  	// #128
  4182e0:	ldr	x0, [sp, #24]
  4182e4:	udiv	x0, x1, x0
  4182e8:	str	x0, [sp, #56]
  4182ec:	ldr	x0, [sp, #56]
  4182f0:	cmp	x0, #0x0
  4182f4:	cset	w0, eq  // eq = none
  4182f8:	and	w0, w0, #0xff
  4182fc:	and	x0, x0, #0xff
  418300:	ldr	x1, [sp, #56]
  418304:	add	x0, x1, x0
  418308:	str	x0, [sp, #56]
  41830c:	mov	x0, #0x0                   	// #0
  418310:	ldr	x2, [sp, #56]
  418314:	ldr	x1, [sp, #24]
  418318:	mul	x3, x2, x1
  41831c:	umulh	x1, x2, x1
  418320:	mov	x4, x3
  418324:	mov	x5, x1
  418328:	mov	x6, x5
  41832c:	mov	x7, #0x0                   	// #0
  418330:	cmp	x6, #0x0
  418334:	b.eq	41833c <ferror@plt+0x1533c>  // b.none
  418338:	mov	x0, #0x1                   	// #1
  41833c:	cmp	x4, #0x0
  418340:	b.ge	418348 <ferror@plt+0x15348>  // b.tcont
  418344:	mov	x0, #0x1                   	// #1
  418348:	and	w0, w0, #0x1
  41834c:	and	w0, w0, #0xff
  418350:	cmp	w0, #0x0
  418354:	b.eq	418394 <ferror@plt+0x15394>  // b.none
  418358:	bl	4185bc <ferror@plt+0x155bc>
  41835c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  418360:	movk	x1, #0x5554
  418364:	ldr	x0, [sp, #24]
  418368:	udiv	x0, x1, x0
  41836c:	ldr	x1, [sp, #56]
  418370:	cmp	x1, x0
  418374:	b.cc	41837c <ferror@plt+0x1537c>  // b.lo, b.ul, b.last
  418378:	bl	4185bc <ferror@plt+0x155bc>
  41837c:	ldr	x0, [sp, #56]
  418380:	lsr	x1, x0, #1
  418384:	ldr	x0, [sp, #56]
  418388:	add	x0, x1, x0
  41838c:	add	x0, x0, #0x1
  418390:	str	x0, [sp, #56]
  418394:	ldr	x0, [sp, #32]
  418398:	ldr	x1, [sp, #56]
  41839c:	str	x1, [x0]
  4183a0:	ldr	x1, [sp, #56]
  4183a4:	ldr	x0, [sp, #24]
  4183a8:	mul	x0, x1, x0
  4183ac:	mov	x1, x0
  4183b0:	ldr	x0, [sp, #40]
  4183b4:	bl	41841c <ferror@plt+0x1541c>
  4183b8:	ldp	x29, x30, [sp], #64
  4183bc:	ret
  4183c0:	stp	x29, x30, [sp, #-32]!
  4183c4:	mov	x29, sp
  4183c8:	str	x0, [sp, #24]
  4183cc:	ldr	x0, [sp, #24]
  4183d0:	bl	4183dc <ferror@plt+0x153dc>
  4183d4:	ldp	x29, x30, [sp], #32
  4183d8:	ret
  4183dc:	stp	x29, x30, [sp, #-48]!
  4183e0:	mov	x29, sp
  4183e4:	str	x0, [sp, #24]
  4183e8:	ldr	x0, [sp, #24]
  4183ec:	bl	402a80 <malloc@plt>
  4183f0:	str	x0, [sp, #40]
  4183f4:	ldr	x0, [sp, #40]
  4183f8:	cmp	x0, #0x0
  4183fc:	b.ne	418410 <ferror@plt+0x15410>  // b.any
  418400:	ldr	x0, [sp, #24]
  418404:	cmp	x0, #0x0
  418408:	b.eq	418410 <ferror@plt+0x15410>  // b.none
  41840c:	bl	4185bc <ferror@plt+0x155bc>
  418410:	ldr	x0, [sp, #40]
  418414:	ldp	x29, x30, [sp], #48
  418418:	ret
  41841c:	stp	x29, x30, [sp, #-32]!
  418420:	mov	x29, sp
  418424:	str	x0, [sp, #24]
  418428:	str	x1, [sp, #16]
  41842c:	ldr	x0, [sp, #16]
  418430:	cmp	x0, #0x0
  418434:	b.ne	418454 <ferror@plt+0x15454>  // b.any
  418438:	ldr	x0, [sp, #24]
  41843c:	cmp	x0, #0x0
  418440:	b.eq	418454 <ferror@plt+0x15454>  // b.none
  418444:	ldr	x0, [sp, #24]
  418448:	bl	402d20 <free@plt>
  41844c:	mov	x0, #0x0                   	// #0
  418450:	b	418484 <ferror@plt+0x15484>
  418454:	ldr	x1, [sp, #16]
  418458:	ldr	x0, [sp, #24]
  41845c:	bl	402b80 <realloc@plt>
  418460:	str	x0, [sp, #24]
  418464:	ldr	x0, [sp, #24]
  418468:	cmp	x0, #0x0
  41846c:	b.ne	418480 <ferror@plt+0x15480>  // b.any
  418470:	ldr	x0, [sp, #16]
  418474:	cmp	x0, #0x0
  418478:	b.eq	418480 <ferror@plt+0x15480>  // b.none
  41847c:	bl	4185bc <ferror@plt+0x155bc>
  418480:	ldr	x0, [sp, #24]
  418484:	ldp	x29, x30, [sp], #32
  418488:	ret
  41848c:	stp	x29, x30, [sp, #-32]!
  418490:	mov	x29, sp
  418494:	str	x0, [sp, #24]
  418498:	str	x1, [sp, #16]
  41849c:	mov	x2, #0x1                   	// #1
  4184a0:	ldr	x1, [sp, #16]
  4184a4:	ldr	x0, [sp, #24]
  4184a8:	bl	4182a4 <ferror@plt+0x152a4>
  4184ac:	ldp	x29, x30, [sp], #32
  4184b0:	ret
  4184b4:	stp	x29, x30, [sp, #-32]!
  4184b8:	mov	x29, sp
  4184bc:	str	x0, [sp, #24]
  4184c0:	ldr	x0, [sp, #24]
  4184c4:	bl	4183dc <ferror@plt+0x153dc>
  4184c8:	ldr	x2, [sp, #24]
  4184cc:	mov	w1, #0x0                   	// #0
  4184d0:	bl	402b30 <memset@plt>
  4184d4:	ldp	x29, x30, [sp], #32
  4184d8:	ret
  4184dc:	stp	x29, x30, [sp, #-48]!
  4184e0:	mov	x29, sp
  4184e4:	str	x0, [sp, #24]
  4184e8:	str	x1, [sp, #16]
  4184ec:	mov	x0, #0x0                   	// #0
  4184f0:	ldr	x6, [sp, #24]
  4184f4:	ldr	x1, [sp, #16]
  4184f8:	mul	x7, x6, x1
  4184fc:	umulh	x1, x6, x1
  418500:	mov	x2, x7
  418504:	mov	x3, x1
  418508:	mov	x4, x3
  41850c:	mov	x5, #0x0                   	// #0
  418510:	cmp	x4, #0x0
  418514:	b.eq	41851c <ferror@plt+0x1551c>  // b.none
  418518:	mov	x0, #0x1                   	// #1
  41851c:	cmp	x2, #0x0
  418520:	b.ge	418528 <ferror@plt+0x15528>  // b.tcont
  418524:	mov	x0, #0x1                   	// #1
  418528:	and	w0, w0, #0x1
  41852c:	and	w0, w0, #0xff
  418530:	cmp	w0, #0x0
  418534:	b.ne	418554 <ferror@plt+0x15554>  // b.any
  418538:	ldr	x1, [sp, #16]
  41853c:	ldr	x0, [sp, #24]
  418540:	bl	402b70 <calloc@plt>
  418544:	str	x0, [sp, #40]
  418548:	ldr	x0, [sp, #40]
  41854c:	cmp	x0, #0x0
  418550:	b.ne	418558 <ferror@plt+0x15558>  // b.any
  418554:	bl	4185bc <ferror@plt+0x155bc>
  418558:	ldr	x0, [sp, #40]
  41855c:	ldp	x29, x30, [sp], #48
  418560:	ret
  418564:	stp	x29, x30, [sp, #-32]!
  418568:	mov	x29, sp
  41856c:	str	x0, [sp, #24]
  418570:	str	x1, [sp, #16]
  418574:	ldr	x0, [sp, #16]
  418578:	bl	4183dc <ferror@plt+0x153dc>
  41857c:	ldr	x2, [sp, #16]
  418580:	ldr	x1, [sp, #24]
  418584:	bl	402880 <memcpy@plt>
  418588:	ldp	x29, x30, [sp], #32
  41858c:	ret
  418590:	stp	x29, x30, [sp, #-32]!
  418594:	mov	x29, sp
  418598:	str	x0, [sp, #24]
  41859c:	ldr	x0, [sp, #24]
  4185a0:	bl	4028f0 <strlen@plt>
  4185a4:	add	x0, x0, #0x1
  4185a8:	mov	x1, x0
  4185ac:	ldr	x0, [sp, #24]
  4185b0:	bl	418564 <ferror@plt+0x15564>
  4185b4:	ldp	x29, x30, [sp], #32
  4185b8:	ret
  4185bc:	stp	x29, x30, [sp, #-32]!
  4185c0:	mov	x29, sp
  4185c4:	str	x19, [sp, #16]
  4185c8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  4185cc:	add	x0, x0, #0x4e8
  4185d0:	ldr	w19, [x0]
  4185d4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4185d8:	add	x0, x0, #0xd00
  4185dc:	bl	402fd0 <gettext@plt>
  4185e0:	mov	x3, x0
  4185e4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4185e8:	add	x2, x0, #0xd18
  4185ec:	mov	w1, #0x0                   	// #0
  4185f0:	mov	w0, w19
  4185f4:	bl	402920 <error@plt>
  4185f8:	bl	402c20 <abort@plt>
  4185fc:	stp	x29, x30, [sp, #-96]!
  418600:	mov	x29, sp
  418604:	stp	x19, x20, [sp, #16]
  418608:	str	x21, [sp, #32]
  41860c:	str	w0, [sp, #92]
  418610:	str	x1, [sp, #80]
  418614:	str	x2, [sp, #72]
  418618:	str	x3, [sp, #64]
  41861c:	str	x4, [sp, #56]
  418620:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418624:	add	x0, x0, #0xd20
  418628:	bl	402fd0 <gettext@plt>
  41862c:	mov	x2, x0
  418630:	ldr	w1, [sp, #92]
  418634:	mov	w0, #0x0                   	// #0
  418638:	bl	402920 <error@plt>
  41863c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418640:	add	x0, x0, #0xd40
  418644:	bl	402fd0 <gettext@plt>
  418648:	mov	x2, x0
  41864c:	mov	w1, #0x0                   	// #0
  418650:	mov	w0, #0x0                   	// #0
  418654:	bl	402920 <error@plt>
  418658:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  41865c:	add	x0, x0, #0x4e8
  418660:	ldr	w19, [x0]
  418664:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418668:	add	x0, x0, #0xd70
  41866c:	bl	402fd0 <gettext@plt>
  418670:	mov	x20, x0
  418674:	ldr	x3, [sp, #72]
  418678:	ldr	x2, [sp, #80]
  41867c:	mov	w1, #0x8                   	// #8
  418680:	mov	w0, #0x0                   	// #0
  418684:	bl	414fbc <ferror@plt+0x11fbc>
  418688:	mov	x21, x0
  41868c:	ldr	x3, [sp, #56]
  418690:	ldr	x2, [sp, #64]
  418694:	mov	w1, #0x8                   	// #8
  418698:	mov	w0, #0x1                   	// #1
  41869c:	bl	414fbc <ferror@plt+0x11fbc>
  4186a0:	mov	x4, x0
  4186a4:	mov	x3, x21
  4186a8:	mov	x2, x20
  4186ac:	mov	w1, #0x0                   	// #0
  4186b0:	mov	w0, w19
  4186b4:	bl	402920 <error@plt>
  4186b8:	nop
  4186bc:	ldp	x19, x20, [sp, #16]
  4186c0:	ldr	x21, [sp, #32]
  4186c4:	ldp	x29, x30, [sp], #96
  4186c8:	ret
  4186cc:	stp	x29, x30, [sp, #-64]!
  4186d0:	mov	x29, sp
  4186d4:	str	x0, [sp, #40]
  4186d8:	str	x1, [sp, #32]
  4186dc:	str	x2, [sp, #24]
  4186e0:	str	x3, [sp, #16]
  4186e4:	ldr	x3, [sp, #16]
  4186e8:	ldr	x2, [sp, #24]
  4186ec:	ldr	x1, [sp, #32]
  4186f0:	ldr	x0, [sp, #40]
  4186f4:	bl	41b0cc <_obstack_memory_used@@Base+0xc30>
  4186f8:	str	w0, [sp, #60]
  4186fc:	bl	402f50 <__errno_location@plt>
  418700:	ldr	w0, [x0]
  418704:	str	w0, [sp, #56]
  418708:	ldr	w0, [sp, #56]
  41870c:	cmp	w0, #0x0
  418710:	b.eq	41872c <ferror@plt+0x1572c>  // b.none
  418714:	ldr	x4, [sp, #16]
  418718:	ldr	x3, [sp, #24]
  41871c:	ldr	x2, [sp, #32]
  418720:	ldr	x1, [sp, #40]
  418724:	ldr	w0, [sp, #56]
  418728:	bl	4185fc <ferror@plt+0x155fc>
  41872c:	ldr	w0, [sp, #60]
  418730:	ldp	x29, x30, [sp], #64
  418734:	ret
  418738:	stp	x29, x30, [sp, #-64]!
  41873c:	mov	x29, sp
  418740:	str	x0, [sp, #40]
  418744:	str	x1, [sp, #32]
  418748:	str	x2, [sp, #24]
  41874c:	str	x3, [sp, #16]
  418750:	ldr	x3, [sp, #16]
  418754:	ldr	x2, [sp, #24]
  418758:	ldr	x1, [sp, #32]
  41875c:	ldr	x0, [sp, #40]
  418760:	bl	41b1bc <_obstack_memory_used@@Base+0xd20>
  418764:	str	w0, [sp, #60]
  418768:	bl	402f50 <__errno_location@plt>
  41876c:	ldr	w0, [x0]
  418770:	str	w0, [sp, #56]
  418774:	ldr	w0, [sp, #56]
  418778:	cmp	w0, #0x0
  41877c:	b.eq	4187a8 <ferror@plt+0x157a8>  // b.none
  418780:	ldr	x0, [sp, #32]
  418784:	sub	x1, x0, #0x1
  418788:	ldr	x0, [sp, #16]
  41878c:	sub	x0, x0, #0x1
  418790:	mov	x4, x0
  418794:	ldr	x3, [sp, #24]
  418798:	mov	x2, x1
  41879c:	ldr	x1, [sp, #40]
  4187a0:	ldr	w0, [sp, #56]
  4187a4:	bl	4185fc <ferror@plt+0x155fc>
  4187a8:	ldr	w0, [sp, #60]
  4187ac:	ldp	x29, x30, [sp], #64
  4187b0:	ret
  4187b4:	stp	x29, x30, [sp, #-48]!
  4187b8:	mov	x29, sp
  4187bc:	str	d0, [sp, #24]
  4187c0:	ldr	d0, [sp, #24]
  4187c4:	bl	41ac38 <_obstack_memory_used@@Base+0x79c>
  4187c8:	stp	x0, x1, [sp, #32]
  4187cc:	bl	402f50 <__errno_location@plt>
  4187d0:	str	wzr, [x0]
  4187d4:	add	x0, sp, #0x20
  4187d8:	mov	x1, #0x0                   	// #0
  4187dc:	bl	419d40 <ferror@plt+0x16d40>
  4187e0:	cmp	w0, #0x0
  4187e4:	b.eq	418810 <ferror@plt+0x15810>  // b.none
  4187e8:	bl	402f50 <__errno_location@plt>
  4187ec:	ldr	w0, [x0]
  4187f0:	cmp	w0, #0x4
  4187f4:	b.eq	4187cc <ferror@plt+0x157cc>  // b.none
  4187f8:	bl	402f50 <__errno_location@plt>
  4187fc:	ldr	w0, [x0]
  418800:	cmp	w0, #0x0
  418804:	b.eq	4187cc <ferror@plt+0x157cc>  // b.none
  418808:	mov	w0, #0xffffffff            	// #-1
  41880c:	b	418818 <ferror@plt+0x15818>
  418810:	nop
  418814:	mov	w0, #0x0                   	// #0
  418818:	ldp	x29, x30, [sp], #48
  41881c:	ret
  418820:	sub	sp, sp, #0x10
  418824:	str	x0, [sp, #8]
  418828:	str	w1, [sp, #4]
  41882c:	ldr	x0, [sp, #8]
  418830:	ldr	x1, [x0]
  418834:	ldrsw	x0, [sp, #4]
  418838:	mov	x2, #0x0                   	// #0
  41883c:	umulh	x0, x1, x0
  418840:	cmp	x0, #0x0
  418844:	b.eq	41884c <ferror@plt+0x1584c>  // b.none
  418848:	mov	x2, #0x1                   	// #1
  41884c:	mov	x0, x2
  418850:	cmp	x0, #0x0
  418854:	b.eq	41886c <ferror@plt+0x1586c>  // b.none
  418858:	ldr	x0, [sp, #8]
  41885c:	mov	x1, #0xffffffffffffffff    	// #-1
  418860:	str	x1, [x0]
  418864:	mov	w0, #0x1                   	// #1
  418868:	b	418888 <ferror@plt+0x15888>
  41886c:	ldr	x0, [sp, #8]
  418870:	ldr	x1, [x0]
  418874:	ldrsw	x0, [sp, #4]
  418878:	mul	x1, x1, x0
  41887c:	ldr	x0, [sp, #8]
  418880:	str	x1, [x0]
  418884:	mov	w0, #0x0                   	// #0
  418888:	add	sp, sp, #0x10
  41888c:	ret
  418890:	stp	x29, x30, [sp, #-48]!
  418894:	mov	x29, sp
  418898:	str	x0, [sp, #24]
  41889c:	str	w1, [sp, #20]
  4188a0:	str	w2, [sp, #16]
  4188a4:	str	wzr, [sp, #44]
  4188a8:	b	4188c8 <ferror@plt+0x158c8>
  4188ac:	ldr	w1, [sp, #20]
  4188b0:	ldr	x0, [sp, #24]
  4188b4:	bl	418820 <ferror@plt+0x15820>
  4188b8:	mov	w1, w0
  4188bc:	ldr	w0, [sp, #44]
  4188c0:	orr	w0, w0, w1
  4188c4:	str	w0, [sp, #44]
  4188c8:	ldr	w0, [sp, #16]
  4188cc:	sub	w1, w0, #0x1
  4188d0:	str	w1, [sp, #16]
  4188d4:	cmp	w0, #0x0
  4188d8:	b.ne	4188ac <ferror@plt+0x158ac>  // b.any
  4188dc:	ldr	w0, [sp, #44]
  4188e0:	ldp	x29, x30, [sp], #48
  4188e4:	ret
  4188e8:	stp	x29, x30, [sp, #-128]!
  4188ec:	mov	x29, sp
  4188f0:	str	x0, [sp, #56]
  4188f4:	str	x1, [sp, #48]
  4188f8:	str	w2, [sp, #44]
  4188fc:	str	x3, [sp, #32]
  418900:	str	x4, [sp, #24]
  418904:	str	wzr, [sp, #124]
  418908:	ldr	w0, [sp, #44]
  41890c:	cmp	w0, #0x0
  418910:	b.lt	418920 <ferror@plt+0x15920>  // b.tstop
  418914:	ldr	w0, [sp, #44]
  418918:	cmp	w0, #0x24
  41891c:	b.le	418940 <ferror@plt+0x15940>
  418920:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418924:	add	x3, x0, #0xdd0
  418928:	mov	w2, #0x54                  	// #84
  41892c:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418930:	add	x1, x0, #0xd98
  418934:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418938:	add	x0, x0, #0xda8
  41893c:	bl	402f40 <__assert_fail@plt>
  418940:	ldr	x0, [sp, #48]
  418944:	cmp	x0, #0x0
  418948:	b.ne	418954 <ferror@plt+0x15954>  // b.any
  41894c:	add	x0, sp, #0x50
  418950:	b	418958 <ferror@plt+0x15958>
  418954:	ldr	x0, [sp, #48]
  418958:	str	x0, [sp, #88]
  41895c:	bl	402f50 <__errno_location@plt>
  418960:	str	wzr, [x0]
  418964:	ldr	x0, [sp, #56]
  418968:	str	x0, [sp, #112]
  41896c:	ldr	x0, [sp, #112]
  418970:	ldrb	w0, [x0]
  418974:	strb	w0, [sp, #111]
  418978:	b	418994 <ferror@plt+0x15994>
  41897c:	ldr	x0, [sp, #112]
  418980:	add	x0, x0, #0x1
  418984:	str	x0, [sp, #112]
  418988:	ldr	x0, [sp, #112]
  41898c:	ldrb	w0, [x0]
  418990:	strb	w0, [sp, #111]
  418994:	bl	402ce0 <__ctype_b_loc@plt>
  418998:	ldr	x1, [x0]
  41899c:	ldrb	w0, [sp, #111]
  4189a0:	lsl	x0, x0, #1
  4189a4:	add	x0, x1, x0
  4189a8:	ldrh	w0, [x0]
  4189ac:	and	w0, w0, #0x2000
  4189b0:	cmp	w0, #0x0
  4189b4:	b.ne	41897c <ferror@plt+0x1597c>  // b.any
  4189b8:	ldrb	w0, [sp, #111]
  4189bc:	cmp	w0, #0x2d
  4189c0:	b.ne	4189cc <ferror@plt+0x159cc>  // b.any
  4189c4:	mov	w0, #0x4                   	// #4
  4189c8:	b	418e4c <ferror@plt+0x15e4c>
  4189cc:	ldr	w2, [sp, #44]
  4189d0:	ldr	x1, [sp, #88]
  4189d4:	ldr	x0, [sp, #56]
  4189d8:	bl	4028e0 <strtoul@plt>
  4189dc:	str	x0, [sp, #72]
  4189e0:	ldr	x0, [sp, #88]
  4189e4:	ldr	x0, [x0]
  4189e8:	ldr	x1, [sp, #56]
  4189ec:	cmp	x1, x0
  4189f0:	b.ne	418a48 <ferror@plt+0x15a48>  // b.any
  4189f4:	ldr	x0, [sp, #24]
  4189f8:	cmp	x0, #0x0
  4189fc:	b.eq	418a40 <ferror@plt+0x15a40>  // b.none
  418a00:	ldr	x0, [sp, #88]
  418a04:	ldr	x0, [x0]
  418a08:	ldrb	w0, [x0]
  418a0c:	cmp	w0, #0x0
  418a10:	b.eq	418a40 <ferror@plt+0x15a40>  // b.none
  418a14:	ldr	x0, [sp, #88]
  418a18:	ldr	x0, [x0]
  418a1c:	ldrb	w0, [x0]
  418a20:	mov	w1, w0
  418a24:	ldr	x0, [sp, #24]
  418a28:	bl	402d70 <strchr@plt>
  418a2c:	cmp	x0, #0x0
  418a30:	b.eq	418a40 <ferror@plt+0x15a40>  // b.none
  418a34:	mov	x0, #0x1                   	// #1
  418a38:	str	x0, [sp, #72]
  418a3c:	b	418a78 <ferror@plt+0x15a78>
  418a40:	mov	w0, #0x4                   	// #4
  418a44:	b	418e4c <ferror@plt+0x15e4c>
  418a48:	bl	402f50 <__errno_location@plt>
  418a4c:	ldr	w0, [x0]
  418a50:	cmp	w0, #0x0
  418a54:	b.eq	418a78 <ferror@plt+0x15a78>  // b.none
  418a58:	bl	402f50 <__errno_location@plt>
  418a5c:	ldr	w0, [x0]
  418a60:	cmp	w0, #0x22
  418a64:	b.eq	418a70 <ferror@plt+0x15a70>  // b.none
  418a68:	mov	w0, #0x4                   	// #4
  418a6c:	b	418e4c <ferror@plt+0x15e4c>
  418a70:	mov	w0, #0x1                   	// #1
  418a74:	str	w0, [sp, #124]
  418a78:	ldr	x0, [sp, #24]
  418a7c:	cmp	x0, #0x0
  418a80:	b.ne	418a98 <ferror@plt+0x15a98>  // b.any
  418a84:	ldr	x1, [sp, #72]
  418a88:	ldr	x0, [sp, #32]
  418a8c:	str	x1, [x0]
  418a90:	ldr	w0, [sp, #124]
  418a94:	b	418e4c <ferror@plt+0x15e4c>
  418a98:	ldr	x0, [sp, #88]
  418a9c:	ldr	x0, [x0]
  418aa0:	ldrb	w0, [x0]
  418aa4:	cmp	w0, #0x0
  418aa8:	b.eq	418e3c <ferror@plt+0x15e3c>  // b.none
  418aac:	mov	w0, #0x400                 	// #1024
  418ab0:	str	w0, [sp, #104]
  418ab4:	mov	w0, #0x1                   	// #1
  418ab8:	str	w0, [sp, #100]
  418abc:	ldr	x0, [sp, #88]
  418ac0:	ldr	x0, [x0]
  418ac4:	ldrb	w0, [x0]
  418ac8:	mov	w1, w0
  418acc:	ldr	x0, [sp, #24]
  418ad0:	bl	402d70 <strchr@plt>
  418ad4:	cmp	x0, #0x0
  418ad8:	b.ne	418af4 <ferror@plt+0x15af4>  // b.any
  418adc:	ldr	x1, [sp, #72]
  418ae0:	ldr	x0, [sp, #32]
  418ae4:	str	x1, [x0]
  418ae8:	ldr	w0, [sp, #124]
  418aec:	orr	w0, w0, #0x2
  418af0:	b	418e4c <ferror@plt+0x15e4c>
  418af4:	ldr	x0, [sp, #88]
  418af8:	ldr	x0, [x0]
  418afc:	ldrb	w0, [x0]
  418b00:	sub	w0, w0, #0x45
  418b04:	cmp	w0, #0x2f
  418b08:	cset	w1, hi  // hi = pmore
  418b0c:	and	w1, w1, #0xff
  418b10:	cmp	w1, #0x0
  418b14:	b.ne	418bd8 <ferror@plt+0x15bd8>  // b.any
  418b18:	mov	x1, #0x1                   	// #1
  418b1c:	lsl	x1, x1, x0
  418b20:	mov	x0, #0x8945                	// #35141
  418b24:	movk	x0, #0x30, lsl #16
  418b28:	movk	x0, #0x8144, lsl #32
  418b2c:	and	x0, x1, x0
  418b30:	cmp	x0, #0x0
  418b34:	cset	w0, ne  // ne = any
  418b38:	and	w0, w0, #0xff
  418b3c:	cmp	w0, #0x0
  418b40:	b.eq	418bd8 <ferror@plt+0x15bd8>  // b.none
  418b44:	mov	w1, #0x30                  	// #48
  418b48:	ldr	x0, [sp, #24]
  418b4c:	bl	402d70 <strchr@plt>
  418b50:	cmp	x0, #0x0
  418b54:	b.eq	418bcc <ferror@plt+0x15bcc>  // b.none
  418b58:	ldr	x0, [sp, #88]
  418b5c:	ldr	x0, [x0]
  418b60:	add	x0, x0, #0x1
  418b64:	ldrb	w0, [x0]
  418b68:	cmp	w0, #0x69
  418b6c:	b.eq	418b8c <ferror@plt+0x15b8c>  // b.none
  418b70:	cmp	w0, #0x69
  418b74:	b.gt	418bd8 <ferror@plt+0x15bd8>
  418b78:	cmp	w0, #0x42
  418b7c:	b.eq	418bb4 <ferror@plt+0x15bb4>  // b.none
  418b80:	cmp	w0, #0x44
  418b84:	b.eq	418bb4 <ferror@plt+0x15bb4>  // b.none
  418b88:	b	418bd8 <ferror@plt+0x15bd8>
  418b8c:	ldr	x0, [sp, #88]
  418b90:	ldr	x0, [x0]
  418b94:	add	x0, x0, #0x2
  418b98:	ldrb	w0, [x0]
  418b9c:	cmp	w0, #0x42
  418ba0:	b.ne	418bd4 <ferror@plt+0x15bd4>  // b.any
  418ba4:	ldr	w0, [sp, #100]
  418ba8:	add	w0, w0, #0x2
  418bac:	str	w0, [sp, #100]
  418bb0:	b	418bd4 <ferror@plt+0x15bd4>
  418bb4:	mov	w0, #0x3e8                 	// #1000
  418bb8:	str	w0, [sp, #104]
  418bbc:	ldr	w0, [sp, #100]
  418bc0:	add	w0, w0, #0x1
  418bc4:	str	w0, [sp, #100]
  418bc8:	b	418bd8 <ferror@plt+0x15bd8>
  418bcc:	nop
  418bd0:	b	418bd8 <ferror@plt+0x15bd8>
  418bd4:	nop
  418bd8:	ldr	x0, [sp, #88]
  418bdc:	ldr	x0, [x0]
  418be0:	ldrb	w0, [x0]
  418be4:	cmp	w0, #0x77
  418be8:	b.eq	418d98 <ferror@plt+0x15d98>  // b.none
  418bec:	cmp	w0, #0x77
  418bf0:	b.gt	418ddc <ferror@plt+0x15ddc>
  418bf4:	cmp	w0, #0x74
  418bf8:	b.eq	418d80 <ferror@plt+0x15d80>  // b.none
  418bfc:	cmp	w0, #0x74
  418c00:	b.gt	418ddc <ferror@plt+0x15ddc>
  418c04:	cmp	w0, #0x6d
  418c08:	b.eq	418d50 <ferror@plt+0x15d50>  // b.none
  418c0c:	cmp	w0, #0x6d
  418c10:	b.gt	418ddc <ferror@plt+0x15ddc>
  418c14:	cmp	w0, #0x6b
  418c18:	b.eq	418d38 <ferror@plt+0x15d38>  // b.none
  418c1c:	cmp	w0, #0x6b
  418c20:	b.gt	418ddc <ferror@plt+0x15ddc>
  418c24:	cmp	w0, #0x67
  418c28:	b.eq	418d20 <ferror@plt+0x15d20>  // b.none
  418c2c:	cmp	w0, #0x67
  418c30:	b.gt	418ddc <ferror@plt+0x15ddc>
  418c34:	cmp	w0, #0x63
  418c38:	b.eq	418d00 <ferror@plt+0x15d00>  // b.none
  418c3c:	cmp	w0, #0x63
  418c40:	b.gt	418ddc <ferror@plt+0x15ddc>
  418c44:	cmp	w0, #0x62
  418c48:	b.eq	418cd8 <ferror@plt+0x15cd8>  // b.none
  418c4c:	cmp	w0, #0x62
  418c50:	b.gt	418ddc <ferror@plt+0x15ddc>
  418c54:	cmp	w0, #0x5a
  418c58:	b.eq	418dc4 <ferror@plt+0x15dc4>  // b.none
  418c5c:	cmp	w0, #0x5a
  418c60:	b.gt	418ddc <ferror@plt+0x15ddc>
  418c64:	cmp	w0, #0x59
  418c68:	b.eq	418dac <ferror@plt+0x15dac>  // b.none
  418c6c:	cmp	w0, #0x59
  418c70:	b.gt	418ddc <ferror@plt+0x15ddc>
  418c74:	cmp	w0, #0x54
  418c78:	b.eq	418d80 <ferror@plt+0x15d80>  // b.none
  418c7c:	cmp	w0, #0x54
  418c80:	b.gt	418ddc <ferror@plt+0x15ddc>
  418c84:	cmp	w0, #0x50
  418c88:	b.eq	418d68 <ferror@plt+0x15d68>  // b.none
  418c8c:	cmp	w0, #0x50
  418c90:	b.gt	418ddc <ferror@plt+0x15ddc>
  418c94:	cmp	w0, #0x4d
  418c98:	b.eq	418d50 <ferror@plt+0x15d50>  // b.none
  418c9c:	cmp	w0, #0x4d
  418ca0:	b.gt	418ddc <ferror@plt+0x15ddc>
  418ca4:	cmp	w0, #0x4b
  418ca8:	b.eq	418d38 <ferror@plt+0x15d38>  // b.none
  418cac:	cmp	w0, #0x4b
  418cb0:	b.gt	418ddc <ferror@plt+0x15ddc>
  418cb4:	cmp	w0, #0x47
  418cb8:	b.eq	418d20 <ferror@plt+0x15d20>  // b.none
  418cbc:	cmp	w0, #0x47
  418cc0:	b.gt	418ddc <ferror@plt+0x15ddc>
  418cc4:	cmp	w0, #0x42
  418cc8:	b.eq	418cec <ferror@plt+0x15cec>  // b.none
  418ccc:	cmp	w0, #0x45
  418cd0:	b.eq	418d08 <ferror@plt+0x15d08>  // b.none
  418cd4:	b	418ddc <ferror@plt+0x15ddc>
  418cd8:	add	x0, sp, #0x48
  418cdc:	mov	w1, #0x200                 	// #512
  418ce0:	bl	418820 <ferror@plt+0x15820>
  418ce4:	str	w0, [sp, #96]
  418ce8:	b	418df4 <ferror@plt+0x15df4>
  418cec:	add	x0, sp, #0x48
  418cf0:	mov	w1, #0x400                 	// #1024
  418cf4:	bl	418820 <ferror@plt+0x15820>
  418cf8:	str	w0, [sp, #96]
  418cfc:	b	418df4 <ferror@plt+0x15df4>
  418d00:	str	wzr, [sp, #96]
  418d04:	b	418df4 <ferror@plt+0x15df4>
  418d08:	add	x0, sp, #0x48
  418d0c:	mov	w2, #0x6                   	// #6
  418d10:	ldr	w1, [sp, #104]
  418d14:	bl	418890 <ferror@plt+0x15890>
  418d18:	str	w0, [sp, #96]
  418d1c:	b	418df4 <ferror@plt+0x15df4>
  418d20:	add	x0, sp, #0x48
  418d24:	mov	w2, #0x3                   	// #3
  418d28:	ldr	w1, [sp, #104]
  418d2c:	bl	418890 <ferror@plt+0x15890>
  418d30:	str	w0, [sp, #96]
  418d34:	b	418df4 <ferror@plt+0x15df4>
  418d38:	add	x0, sp, #0x48
  418d3c:	mov	w2, #0x1                   	// #1
  418d40:	ldr	w1, [sp, #104]
  418d44:	bl	418890 <ferror@plt+0x15890>
  418d48:	str	w0, [sp, #96]
  418d4c:	b	418df4 <ferror@plt+0x15df4>
  418d50:	add	x0, sp, #0x48
  418d54:	mov	w2, #0x2                   	// #2
  418d58:	ldr	w1, [sp, #104]
  418d5c:	bl	418890 <ferror@plt+0x15890>
  418d60:	str	w0, [sp, #96]
  418d64:	b	418df4 <ferror@plt+0x15df4>
  418d68:	add	x0, sp, #0x48
  418d6c:	mov	w2, #0x5                   	// #5
  418d70:	ldr	w1, [sp, #104]
  418d74:	bl	418890 <ferror@plt+0x15890>
  418d78:	str	w0, [sp, #96]
  418d7c:	b	418df4 <ferror@plt+0x15df4>
  418d80:	add	x0, sp, #0x48
  418d84:	mov	w2, #0x4                   	// #4
  418d88:	ldr	w1, [sp, #104]
  418d8c:	bl	418890 <ferror@plt+0x15890>
  418d90:	str	w0, [sp, #96]
  418d94:	b	418df4 <ferror@plt+0x15df4>
  418d98:	add	x0, sp, #0x48
  418d9c:	mov	w1, #0x2                   	// #2
  418da0:	bl	418820 <ferror@plt+0x15820>
  418da4:	str	w0, [sp, #96]
  418da8:	b	418df4 <ferror@plt+0x15df4>
  418dac:	add	x0, sp, #0x48
  418db0:	mov	w2, #0x8                   	// #8
  418db4:	ldr	w1, [sp, #104]
  418db8:	bl	418890 <ferror@plt+0x15890>
  418dbc:	str	w0, [sp, #96]
  418dc0:	b	418df4 <ferror@plt+0x15df4>
  418dc4:	add	x0, sp, #0x48
  418dc8:	mov	w2, #0x7                   	// #7
  418dcc:	ldr	w1, [sp, #104]
  418dd0:	bl	418890 <ferror@plt+0x15890>
  418dd4:	str	w0, [sp, #96]
  418dd8:	b	418df4 <ferror@plt+0x15df4>
  418ddc:	ldr	x1, [sp, #72]
  418de0:	ldr	x0, [sp, #32]
  418de4:	str	x1, [x0]
  418de8:	ldr	w0, [sp, #124]
  418dec:	orr	w0, w0, #0x2
  418df0:	b	418e4c <ferror@plt+0x15e4c>
  418df4:	ldr	w1, [sp, #124]
  418df8:	ldr	w0, [sp, #96]
  418dfc:	orr	w0, w1, w0
  418e00:	str	w0, [sp, #124]
  418e04:	ldr	x0, [sp, #88]
  418e08:	ldr	x1, [x0]
  418e0c:	ldrsw	x0, [sp, #100]
  418e10:	add	x1, x1, x0
  418e14:	ldr	x0, [sp, #88]
  418e18:	str	x1, [x0]
  418e1c:	ldr	x0, [sp, #88]
  418e20:	ldr	x0, [x0]
  418e24:	ldrb	w0, [x0]
  418e28:	cmp	w0, #0x0
  418e2c:	b.eq	418e3c <ferror@plt+0x15e3c>  // b.none
  418e30:	ldr	w0, [sp, #124]
  418e34:	orr	w0, w0, #0x2
  418e38:	str	w0, [sp, #124]
  418e3c:	ldr	x1, [sp, #72]
  418e40:	ldr	x0, [sp, #32]
  418e44:	str	x1, [x0]
  418e48:	ldr	w0, [sp, #124]
  418e4c:	ldp	x29, x30, [sp], #128
  418e50:	ret
  418e54:	stp	x29, x30, [sp, #-80]!
  418e58:	mov	x29, sp
  418e5c:	str	w0, [sp, #44]
  418e60:	str	w1, [sp, #40]
  418e64:	strb	w2, [sp, #39]
  418e68:	str	x3, [sp, #24]
  418e6c:	str	x4, [sp, #16]
  418e70:	str	w5, [sp, #32]
  418e74:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418e78:	add	x0, x0, #0xde0
  418e7c:	str	x0, [sp, #72]
  418e80:	ldr	w0, [sp, #44]
  418e84:	cmp	w0, #0x4
  418e88:	b.eq	418ec4 <ferror@plt+0x15ec4>  // b.none
  418e8c:	ldr	w0, [sp, #44]
  418e90:	cmp	w0, #0x4
  418e94:	b.hi	418ec0 <ferror@plt+0x15ec0>  // b.pmore
  418e98:	ldr	w0, [sp, #44]
  418e9c:	cmp	w0, #0x1
  418ea0:	b.eq	418ee4 <ferror@plt+0x15ee4>  // b.none
  418ea4:	ldr	w0, [sp, #44]
  418ea8:	cmp	w0, #0x0
  418eac:	b.eq	418ec0 <ferror@plt+0x15ec0>  // b.none
  418eb0:	ldr	w0, [sp, #44]
  418eb4:	sub	w0, w0, #0x2
  418eb8:	cmp	w0, #0x1
  418ebc:	b.ls	418ed4 <ferror@plt+0x15ed4>  // b.plast
  418ec0:	bl	402c20 <abort@plt>
  418ec4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418ec8:	add	x0, x0, #0xde8
  418ecc:	str	x0, [sp, #64]
  418ed0:	b	418ef4 <ferror@plt+0x15ef4>
  418ed4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418ed8:	add	x0, x0, #0xe08
  418edc:	str	x0, [sp, #64]
  418ee0:	b	418ef4 <ferror@plt+0x15ef4>
  418ee4:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  418ee8:	add	x0, x0, #0xe30
  418eec:	str	x0, [sp, #64]
  418ef0:	nop
  418ef4:	ldr	w0, [sp, #40]
  418ef8:	cmp	w0, #0x0
  418efc:	b.ge	418f2c <ferror@plt+0x15f2c>  // b.tcont
  418f00:	ldrsw	x0, [sp, #40]
  418f04:	neg	x0, x0
  418f08:	ldr	x1, [sp, #72]
  418f0c:	add	x0, x1, x0
  418f10:	str	x0, [sp, #72]
  418f14:	ldrb	w0, [sp, #39]
  418f18:	strb	w0, [sp, #48]
  418f1c:	strb	wzr, [sp, #49]
  418f20:	add	x0, sp, #0x30
  418f24:	str	x0, [sp, #56]
  418f28:	b	418f44 <ferror@plt+0x15f44>
  418f2c:	ldrsw	x0, [sp, #40]
  418f30:	lsl	x0, x0, #5
  418f34:	ldr	x1, [sp, #24]
  418f38:	add	x0, x1, x0
  418f3c:	ldr	x0, [x0]
  418f40:	str	x0, [sp, #56]
  418f44:	ldr	x0, [sp, #64]
  418f48:	bl	402fd0 <gettext@plt>
  418f4c:	ldr	x5, [sp, #16]
  418f50:	ldr	x4, [sp, #56]
  418f54:	ldr	x3, [sp, #72]
  418f58:	mov	x2, x0
  418f5c:	mov	w1, #0x0                   	// #0
  418f60:	ldr	w0, [sp, #32]
  418f64:	bl	402920 <error@plt>
  418f68:	nop
  418f6c:	ldp	x29, x30, [sp], #80
  418f70:	ret
  418f74:	stp	x29, x30, [sp, #-48]!
  418f78:	mov	x29, sp
  418f7c:	str	w0, [sp, #44]
  418f80:	str	w1, [sp, #40]
  418f84:	strb	w2, [sp, #39]
  418f88:	str	x3, [sp, #24]
  418f8c:	str	x4, [sp, #16]
  418f90:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  418f94:	add	x0, x0, #0x4e8
  418f98:	ldr	w0, [x0]
  418f9c:	mov	w5, w0
  418fa0:	ldr	x4, [sp, #16]
  418fa4:	ldr	x3, [sp, #24]
  418fa8:	ldrb	w2, [sp, #39]
  418fac:	ldr	w1, [sp, #40]
  418fb0:	ldr	w0, [sp, #44]
  418fb4:	bl	418e54 <ferror@plt+0x15e54>
  418fb8:	bl	402c20 <abort@plt>
  418fbc:	sub	sp, sp, #0x10
  418fc0:	str	x0, [sp, #8]
  418fc4:	str	w1, [sp, #4]
  418fc8:	ldr	x0, [sp, #8]
  418fcc:	ldr	x1, [x0]
  418fd0:	ldrsw	x0, [sp, #4]
  418fd4:	mov	x2, #0x0                   	// #0
  418fd8:	umulh	x0, x1, x0
  418fdc:	cmp	x0, #0x0
  418fe0:	b.eq	418fe8 <ferror@plt+0x15fe8>  // b.none
  418fe4:	mov	x2, #0x1                   	// #1
  418fe8:	mov	x0, x2
  418fec:	cmp	x0, #0x0
  418ff0:	b.eq	419008 <ferror@plt+0x16008>  // b.none
  418ff4:	ldr	x0, [sp, #8]
  418ff8:	mov	x1, #0xffffffffffffffff    	// #-1
  418ffc:	str	x1, [x0]
  419000:	mov	w0, #0x1                   	// #1
  419004:	b	419024 <ferror@plt+0x16024>
  419008:	ldr	x0, [sp, #8]
  41900c:	ldr	x1, [x0]
  419010:	ldrsw	x0, [sp, #4]
  419014:	mul	x1, x1, x0
  419018:	ldr	x0, [sp, #8]
  41901c:	str	x1, [x0]
  419020:	mov	w0, #0x0                   	// #0
  419024:	add	sp, sp, #0x10
  419028:	ret
  41902c:	stp	x29, x30, [sp, #-48]!
  419030:	mov	x29, sp
  419034:	str	x0, [sp, #24]
  419038:	str	w1, [sp, #20]
  41903c:	str	w2, [sp, #16]
  419040:	str	wzr, [sp, #44]
  419044:	b	419064 <ferror@plt+0x16064>
  419048:	ldr	w1, [sp, #20]
  41904c:	ldr	x0, [sp, #24]
  419050:	bl	418fbc <ferror@plt+0x15fbc>
  419054:	mov	w1, w0
  419058:	ldr	w0, [sp, #44]
  41905c:	orr	w0, w0, w1
  419060:	str	w0, [sp, #44]
  419064:	ldr	w0, [sp, #16]
  419068:	sub	w1, w0, #0x1
  41906c:	str	w1, [sp, #16]
  419070:	cmp	w0, #0x0
  419074:	b.ne	419048 <ferror@plt+0x16048>  // b.any
  419078:	ldr	w0, [sp, #44]
  41907c:	ldp	x29, x30, [sp], #48
  419080:	ret
  419084:	stp	x29, x30, [sp, #-128]!
  419088:	mov	x29, sp
  41908c:	str	x0, [sp, #56]
  419090:	str	x1, [sp, #48]
  419094:	str	w2, [sp, #44]
  419098:	str	x3, [sp, #32]
  41909c:	str	x4, [sp, #24]
  4190a0:	str	wzr, [sp, #124]
  4190a4:	ldr	w0, [sp, #44]
  4190a8:	cmp	w0, #0x0
  4190ac:	b.lt	4190bc <ferror@plt+0x160bc>  // b.tstop
  4190b0:	ldr	w0, [sp, #44]
  4190b4:	cmp	w0, #0x24
  4190b8:	b.le	4190dc <ferror@plt+0x160dc>
  4190bc:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4190c0:	add	x3, x0, #0xe88
  4190c4:	mov	w2, #0x54                  	// #84
  4190c8:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4190cc:	add	x1, x0, #0xe50
  4190d0:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  4190d4:	add	x0, x0, #0xe60
  4190d8:	bl	402f40 <__assert_fail@plt>
  4190dc:	ldr	x0, [sp, #48]
  4190e0:	cmp	x0, #0x0
  4190e4:	b.ne	4190f0 <ferror@plt+0x160f0>  // b.any
  4190e8:	add	x0, sp, #0x50
  4190ec:	b	4190f4 <ferror@plt+0x160f4>
  4190f0:	ldr	x0, [sp, #48]
  4190f4:	str	x0, [sp, #88]
  4190f8:	bl	402f50 <__errno_location@plt>
  4190fc:	str	wzr, [x0]
  419100:	ldr	x0, [sp, #56]
  419104:	str	x0, [sp, #112]
  419108:	ldr	x0, [sp, #112]
  41910c:	ldrb	w0, [x0]
  419110:	strb	w0, [sp, #111]
  419114:	b	419130 <ferror@plt+0x16130>
  419118:	ldr	x0, [sp, #112]
  41911c:	add	x0, x0, #0x1
  419120:	str	x0, [sp, #112]
  419124:	ldr	x0, [sp, #112]
  419128:	ldrb	w0, [x0]
  41912c:	strb	w0, [sp, #111]
  419130:	bl	402ce0 <__ctype_b_loc@plt>
  419134:	ldr	x1, [x0]
  419138:	ldrb	w0, [sp, #111]
  41913c:	lsl	x0, x0, #1
  419140:	add	x0, x1, x0
  419144:	ldrh	w0, [x0]
  419148:	and	w0, w0, #0x2000
  41914c:	cmp	w0, #0x0
  419150:	b.ne	419118 <ferror@plt+0x16118>  // b.any
  419154:	ldrb	w0, [sp, #111]
  419158:	cmp	w0, #0x2d
  41915c:	b.ne	419168 <ferror@plt+0x16168>  // b.any
  419160:	mov	w0, #0x4                   	// #4
  419164:	b	4195e8 <ferror@plt+0x165e8>
  419168:	ldr	w2, [sp, #44]
  41916c:	ldr	x1, [sp, #88]
  419170:	ldr	x0, [sp, #56]
  419174:	bl	402c00 <strtoumax@plt>
  419178:	str	x0, [sp, #72]
  41917c:	ldr	x0, [sp, #88]
  419180:	ldr	x0, [x0]
  419184:	ldr	x1, [sp, #56]
  419188:	cmp	x1, x0
  41918c:	b.ne	4191e4 <ferror@plt+0x161e4>  // b.any
  419190:	ldr	x0, [sp, #24]
  419194:	cmp	x0, #0x0
  419198:	b.eq	4191dc <ferror@plt+0x161dc>  // b.none
  41919c:	ldr	x0, [sp, #88]
  4191a0:	ldr	x0, [x0]
  4191a4:	ldrb	w0, [x0]
  4191a8:	cmp	w0, #0x0
  4191ac:	b.eq	4191dc <ferror@plt+0x161dc>  // b.none
  4191b0:	ldr	x0, [sp, #88]
  4191b4:	ldr	x0, [x0]
  4191b8:	ldrb	w0, [x0]
  4191bc:	mov	w1, w0
  4191c0:	ldr	x0, [sp, #24]
  4191c4:	bl	402d70 <strchr@plt>
  4191c8:	cmp	x0, #0x0
  4191cc:	b.eq	4191dc <ferror@plt+0x161dc>  // b.none
  4191d0:	mov	x0, #0x1                   	// #1
  4191d4:	str	x0, [sp, #72]
  4191d8:	b	419214 <ferror@plt+0x16214>
  4191dc:	mov	w0, #0x4                   	// #4
  4191e0:	b	4195e8 <ferror@plt+0x165e8>
  4191e4:	bl	402f50 <__errno_location@plt>
  4191e8:	ldr	w0, [x0]
  4191ec:	cmp	w0, #0x0
  4191f0:	b.eq	419214 <ferror@plt+0x16214>  // b.none
  4191f4:	bl	402f50 <__errno_location@plt>
  4191f8:	ldr	w0, [x0]
  4191fc:	cmp	w0, #0x22
  419200:	b.eq	41920c <ferror@plt+0x1620c>  // b.none
  419204:	mov	w0, #0x4                   	// #4
  419208:	b	4195e8 <ferror@plt+0x165e8>
  41920c:	mov	w0, #0x1                   	// #1
  419210:	str	w0, [sp, #124]
  419214:	ldr	x0, [sp, #24]
  419218:	cmp	x0, #0x0
  41921c:	b.ne	419234 <ferror@plt+0x16234>  // b.any
  419220:	ldr	x1, [sp, #72]
  419224:	ldr	x0, [sp, #32]
  419228:	str	x1, [x0]
  41922c:	ldr	w0, [sp, #124]
  419230:	b	4195e8 <ferror@plt+0x165e8>
  419234:	ldr	x0, [sp, #88]
  419238:	ldr	x0, [x0]
  41923c:	ldrb	w0, [x0]
  419240:	cmp	w0, #0x0
  419244:	b.eq	4195d8 <ferror@plt+0x165d8>  // b.none
  419248:	mov	w0, #0x400                 	// #1024
  41924c:	str	w0, [sp, #104]
  419250:	mov	w0, #0x1                   	// #1
  419254:	str	w0, [sp, #100]
  419258:	ldr	x0, [sp, #88]
  41925c:	ldr	x0, [x0]
  419260:	ldrb	w0, [x0]
  419264:	mov	w1, w0
  419268:	ldr	x0, [sp, #24]
  41926c:	bl	402d70 <strchr@plt>
  419270:	cmp	x0, #0x0
  419274:	b.ne	419290 <ferror@plt+0x16290>  // b.any
  419278:	ldr	x1, [sp, #72]
  41927c:	ldr	x0, [sp, #32]
  419280:	str	x1, [x0]
  419284:	ldr	w0, [sp, #124]
  419288:	orr	w0, w0, #0x2
  41928c:	b	4195e8 <ferror@plt+0x165e8>
  419290:	ldr	x0, [sp, #88]
  419294:	ldr	x0, [x0]
  419298:	ldrb	w0, [x0]
  41929c:	sub	w0, w0, #0x45
  4192a0:	cmp	w0, #0x2f
  4192a4:	cset	w1, hi  // hi = pmore
  4192a8:	and	w1, w1, #0xff
  4192ac:	cmp	w1, #0x0
  4192b0:	b.ne	419374 <ferror@plt+0x16374>  // b.any
  4192b4:	mov	x1, #0x1                   	// #1
  4192b8:	lsl	x1, x1, x0
  4192bc:	mov	x0, #0x8945                	// #35141
  4192c0:	movk	x0, #0x30, lsl #16
  4192c4:	movk	x0, #0x8144, lsl #32
  4192c8:	and	x0, x1, x0
  4192cc:	cmp	x0, #0x0
  4192d0:	cset	w0, ne  // ne = any
  4192d4:	and	w0, w0, #0xff
  4192d8:	cmp	w0, #0x0
  4192dc:	b.eq	419374 <ferror@plt+0x16374>  // b.none
  4192e0:	mov	w1, #0x30                  	// #48
  4192e4:	ldr	x0, [sp, #24]
  4192e8:	bl	402d70 <strchr@plt>
  4192ec:	cmp	x0, #0x0
  4192f0:	b.eq	419368 <ferror@plt+0x16368>  // b.none
  4192f4:	ldr	x0, [sp, #88]
  4192f8:	ldr	x0, [x0]
  4192fc:	add	x0, x0, #0x1
  419300:	ldrb	w0, [x0]
  419304:	cmp	w0, #0x69
  419308:	b.eq	419328 <ferror@plt+0x16328>  // b.none
  41930c:	cmp	w0, #0x69
  419310:	b.gt	419374 <ferror@plt+0x16374>
  419314:	cmp	w0, #0x42
  419318:	b.eq	419350 <ferror@plt+0x16350>  // b.none
  41931c:	cmp	w0, #0x44
  419320:	b.eq	419350 <ferror@plt+0x16350>  // b.none
  419324:	b	419374 <ferror@plt+0x16374>
  419328:	ldr	x0, [sp, #88]
  41932c:	ldr	x0, [x0]
  419330:	add	x0, x0, #0x2
  419334:	ldrb	w0, [x0]
  419338:	cmp	w0, #0x42
  41933c:	b.ne	419370 <ferror@plt+0x16370>  // b.any
  419340:	ldr	w0, [sp, #100]
  419344:	add	w0, w0, #0x2
  419348:	str	w0, [sp, #100]
  41934c:	b	419370 <ferror@plt+0x16370>
  419350:	mov	w0, #0x3e8                 	// #1000
  419354:	str	w0, [sp, #104]
  419358:	ldr	w0, [sp, #100]
  41935c:	add	w0, w0, #0x1
  419360:	str	w0, [sp, #100]
  419364:	b	419374 <ferror@plt+0x16374>
  419368:	nop
  41936c:	b	419374 <ferror@plt+0x16374>
  419370:	nop
  419374:	ldr	x0, [sp, #88]
  419378:	ldr	x0, [x0]
  41937c:	ldrb	w0, [x0]
  419380:	cmp	w0, #0x77
  419384:	b.eq	419534 <ferror@plt+0x16534>  // b.none
  419388:	cmp	w0, #0x77
  41938c:	b.gt	419578 <ferror@plt+0x16578>
  419390:	cmp	w0, #0x74
  419394:	b.eq	41951c <ferror@plt+0x1651c>  // b.none
  419398:	cmp	w0, #0x74
  41939c:	b.gt	419578 <ferror@plt+0x16578>
  4193a0:	cmp	w0, #0x6d
  4193a4:	b.eq	4194ec <ferror@plt+0x164ec>  // b.none
  4193a8:	cmp	w0, #0x6d
  4193ac:	b.gt	419578 <ferror@plt+0x16578>
  4193b0:	cmp	w0, #0x6b
  4193b4:	b.eq	4194d4 <ferror@plt+0x164d4>  // b.none
  4193b8:	cmp	w0, #0x6b
  4193bc:	b.gt	419578 <ferror@plt+0x16578>
  4193c0:	cmp	w0, #0x67
  4193c4:	b.eq	4194bc <ferror@plt+0x164bc>  // b.none
  4193c8:	cmp	w0, #0x67
  4193cc:	b.gt	419578 <ferror@plt+0x16578>
  4193d0:	cmp	w0, #0x63
  4193d4:	b.eq	41949c <ferror@plt+0x1649c>  // b.none
  4193d8:	cmp	w0, #0x63
  4193dc:	b.gt	419578 <ferror@plt+0x16578>
  4193e0:	cmp	w0, #0x62
  4193e4:	b.eq	419474 <ferror@plt+0x16474>  // b.none
  4193e8:	cmp	w0, #0x62
  4193ec:	b.gt	419578 <ferror@plt+0x16578>
  4193f0:	cmp	w0, #0x5a
  4193f4:	b.eq	419560 <ferror@plt+0x16560>  // b.none
  4193f8:	cmp	w0, #0x5a
  4193fc:	b.gt	419578 <ferror@plt+0x16578>
  419400:	cmp	w0, #0x59
  419404:	b.eq	419548 <ferror@plt+0x16548>  // b.none
  419408:	cmp	w0, #0x59
  41940c:	b.gt	419578 <ferror@plt+0x16578>
  419410:	cmp	w0, #0x54
  419414:	b.eq	41951c <ferror@plt+0x1651c>  // b.none
  419418:	cmp	w0, #0x54
  41941c:	b.gt	419578 <ferror@plt+0x16578>
  419420:	cmp	w0, #0x50
  419424:	b.eq	419504 <ferror@plt+0x16504>  // b.none
  419428:	cmp	w0, #0x50
  41942c:	b.gt	419578 <ferror@plt+0x16578>
  419430:	cmp	w0, #0x4d
  419434:	b.eq	4194ec <ferror@plt+0x164ec>  // b.none
  419438:	cmp	w0, #0x4d
  41943c:	b.gt	419578 <ferror@plt+0x16578>
  419440:	cmp	w0, #0x4b
  419444:	b.eq	4194d4 <ferror@plt+0x164d4>  // b.none
  419448:	cmp	w0, #0x4b
  41944c:	b.gt	419578 <ferror@plt+0x16578>
  419450:	cmp	w0, #0x47
  419454:	b.eq	4194bc <ferror@plt+0x164bc>  // b.none
  419458:	cmp	w0, #0x47
  41945c:	b.gt	419578 <ferror@plt+0x16578>
  419460:	cmp	w0, #0x42
  419464:	b.eq	419488 <ferror@plt+0x16488>  // b.none
  419468:	cmp	w0, #0x45
  41946c:	b.eq	4194a4 <ferror@plt+0x164a4>  // b.none
  419470:	b	419578 <ferror@plt+0x16578>
  419474:	add	x0, sp, #0x48
  419478:	mov	w1, #0x200                 	// #512
  41947c:	bl	418fbc <ferror@plt+0x15fbc>
  419480:	str	w0, [sp, #96]
  419484:	b	419590 <ferror@plt+0x16590>
  419488:	add	x0, sp, #0x48
  41948c:	mov	w1, #0x400                 	// #1024
  419490:	bl	418fbc <ferror@plt+0x15fbc>
  419494:	str	w0, [sp, #96]
  419498:	b	419590 <ferror@plt+0x16590>
  41949c:	str	wzr, [sp, #96]
  4194a0:	b	419590 <ferror@plt+0x16590>
  4194a4:	add	x0, sp, #0x48
  4194a8:	mov	w2, #0x6                   	// #6
  4194ac:	ldr	w1, [sp, #104]
  4194b0:	bl	41902c <ferror@plt+0x1602c>
  4194b4:	str	w0, [sp, #96]
  4194b8:	b	419590 <ferror@plt+0x16590>
  4194bc:	add	x0, sp, #0x48
  4194c0:	mov	w2, #0x3                   	// #3
  4194c4:	ldr	w1, [sp, #104]
  4194c8:	bl	41902c <ferror@plt+0x1602c>
  4194cc:	str	w0, [sp, #96]
  4194d0:	b	419590 <ferror@plt+0x16590>
  4194d4:	add	x0, sp, #0x48
  4194d8:	mov	w2, #0x1                   	// #1
  4194dc:	ldr	w1, [sp, #104]
  4194e0:	bl	41902c <ferror@plt+0x1602c>
  4194e4:	str	w0, [sp, #96]
  4194e8:	b	419590 <ferror@plt+0x16590>
  4194ec:	add	x0, sp, #0x48
  4194f0:	mov	w2, #0x2                   	// #2
  4194f4:	ldr	w1, [sp, #104]
  4194f8:	bl	41902c <ferror@plt+0x1602c>
  4194fc:	str	w0, [sp, #96]
  419500:	b	419590 <ferror@plt+0x16590>
  419504:	add	x0, sp, #0x48
  419508:	mov	w2, #0x5                   	// #5
  41950c:	ldr	w1, [sp, #104]
  419510:	bl	41902c <ferror@plt+0x1602c>
  419514:	str	w0, [sp, #96]
  419518:	b	419590 <ferror@plt+0x16590>
  41951c:	add	x0, sp, #0x48
  419520:	mov	w2, #0x4                   	// #4
  419524:	ldr	w1, [sp, #104]
  419528:	bl	41902c <ferror@plt+0x1602c>
  41952c:	str	w0, [sp, #96]
  419530:	b	419590 <ferror@plt+0x16590>
  419534:	add	x0, sp, #0x48
  419538:	mov	w1, #0x2                   	// #2
  41953c:	bl	418fbc <ferror@plt+0x15fbc>
  419540:	str	w0, [sp, #96]
  419544:	b	419590 <ferror@plt+0x16590>
  419548:	add	x0, sp, #0x48
  41954c:	mov	w2, #0x8                   	// #8
  419550:	ldr	w1, [sp, #104]
  419554:	bl	41902c <ferror@plt+0x1602c>
  419558:	str	w0, [sp, #96]
  41955c:	b	419590 <ferror@plt+0x16590>
  419560:	add	x0, sp, #0x48
  419564:	mov	w2, #0x7                   	// #7
  419568:	ldr	w1, [sp, #104]
  41956c:	bl	41902c <ferror@plt+0x1602c>
  419570:	str	w0, [sp, #96]
  419574:	b	419590 <ferror@plt+0x16590>
  419578:	ldr	x1, [sp, #72]
  41957c:	ldr	x0, [sp, #32]
  419580:	str	x1, [x0]
  419584:	ldr	w0, [sp, #124]
  419588:	orr	w0, w0, #0x2
  41958c:	b	4195e8 <ferror@plt+0x165e8>
  419590:	ldr	w1, [sp, #124]
  419594:	ldr	w0, [sp, #96]
  419598:	orr	w0, w1, w0
  41959c:	str	w0, [sp, #124]
  4195a0:	ldr	x0, [sp, #88]
  4195a4:	ldr	x1, [x0]
  4195a8:	ldrsw	x0, [sp, #100]
  4195ac:	add	x1, x1, x0
  4195b0:	ldr	x0, [sp, #88]
  4195b4:	str	x1, [x0]
  4195b8:	ldr	x0, [sp, #88]
  4195bc:	ldr	x0, [x0]
  4195c0:	ldrb	w0, [x0]
  4195c4:	cmp	w0, #0x0
  4195c8:	b.eq	4195d8 <ferror@plt+0x165d8>  // b.none
  4195cc:	ldr	w0, [sp, #124]
  4195d0:	orr	w0, w0, #0x2
  4195d4:	str	w0, [sp, #124]
  4195d8:	ldr	x1, [sp, #72]
  4195dc:	ldr	x0, [sp, #32]
  4195e0:	str	x1, [x0]
  4195e4:	ldr	w0, [sp, #124]
  4195e8:	ldp	x29, x30, [sp], #128
  4195ec:	ret
  4195f0:	stp	x29, x30, [sp, #-48]!
  4195f4:	mov	x29, sp
  4195f8:	str	x0, [sp, #24]
  4195fc:	str	wzr, [sp, #44]
  419600:	str	wzr, [sp, #40]
  419604:	ldr	x0, [sp, #24]
  419608:	bl	402a10 <fileno@plt>
  41960c:	str	w0, [sp, #36]
  419610:	ldr	w0, [sp, #36]
  419614:	cmp	w0, #0x0
  419618:	b.ge	419628 <ferror@plt+0x16628>  // b.tcont
  41961c:	ldr	x0, [sp, #24]
  419620:	bl	402a40 <fclose@plt>
  419624:	b	4196a4 <ferror@plt+0x166a4>
  419628:	ldr	x0, [sp, #24]
  41962c:	bl	402ed0 <__freading@plt>
  419630:	cmp	w0, #0x0
  419634:	b.eq	419654 <ferror@plt+0x16654>  // b.none
  419638:	ldr	x0, [sp, #24]
  41963c:	bl	402a10 <fileno@plt>
  419640:	mov	w2, #0x1                   	// #1
  419644:	mov	x1, #0x0                   	// #0
  419648:	bl	4029d0 <lseek@plt>
  41964c:	cmn	x0, #0x1
  419650:	b.eq	419670 <ferror@plt+0x16670>  // b.none
  419654:	ldr	x0, [sp, #24]
  419658:	bl	419b90 <ferror@plt+0x16b90>
  41965c:	cmp	w0, #0x0
  419660:	b.eq	419670 <ferror@plt+0x16670>  // b.none
  419664:	bl	402f50 <__errno_location@plt>
  419668:	ldr	w0, [x0]
  41966c:	str	w0, [sp, #44]
  419670:	ldr	x0, [sp, #24]
  419674:	bl	402a40 <fclose@plt>
  419678:	str	w0, [sp, #40]
  41967c:	ldr	w0, [sp, #44]
  419680:	cmp	w0, #0x0
  419684:	b.eq	4196a0 <ferror@plt+0x166a0>  // b.none
  419688:	bl	402f50 <__errno_location@plt>
  41968c:	mov	x1, x0
  419690:	ldr	w0, [sp, #44]
  419694:	str	w0, [x1]
  419698:	mov	w0, #0xffffffff            	// #-1
  41969c:	str	w0, [sp, #40]
  4196a0:	ldr	w0, [sp, #40]
  4196a4:	ldp	x29, x30, [sp], #48
  4196a8:	ret
  4196ac:	stp	x29, x30, [sp, #-272]!
  4196b0:	mov	x29, sp
  4196b4:	str	w0, [sp, #28]
  4196b8:	str	w1, [sp, #24]
  4196bc:	str	x2, [sp, #224]
  4196c0:	str	x3, [sp, #232]
  4196c4:	str	x4, [sp, #240]
  4196c8:	str	x5, [sp, #248]
  4196cc:	str	x6, [sp, #256]
  4196d0:	str	x7, [sp, #264]
  4196d4:	str	q0, [sp, #96]
  4196d8:	str	q1, [sp, #112]
  4196dc:	str	q2, [sp, #128]
  4196e0:	str	q3, [sp, #144]
  4196e4:	str	q4, [sp, #160]
  4196e8:	str	q5, [sp, #176]
  4196ec:	str	q6, [sp, #192]
  4196f0:	str	q7, [sp, #208]
  4196f4:	mov	w0, #0xffffffff            	// #-1
  4196f8:	str	w0, [sp, #92]
  4196fc:	add	x0, sp, #0x110
  419700:	str	x0, [sp, #40]
  419704:	add	x0, sp, #0x110
  419708:	str	x0, [sp, #48]
  41970c:	add	x0, sp, #0xe0
  419710:	str	x0, [sp, #56]
  419714:	mov	w0, #0xffffffd0            	// #-48
  419718:	str	w0, [sp, #64]
  41971c:	mov	w0, #0xffffff80            	// #-128
  419720:	str	w0, [sp, #68]
  419724:	ldr	w0, [sp, #24]
  419728:	cmp	w0, #0x0
  41972c:	b.eq	419740 <ferror@plt+0x16740>  // b.none
  419730:	ldr	w0, [sp, #24]
  419734:	cmp	w0, #0x406
  419738:	b.eq	4197ac <ferror@plt+0x167ac>  // b.none
  41973c:	b	419818 <ferror@plt+0x16818>
  419740:	ldr	w1, [sp, #64]
  419744:	ldr	x0, [sp, #40]
  419748:	cmp	w1, #0x0
  41974c:	b.lt	419760 <ferror@plt+0x16760>  // b.tstop
  419750:	add	x1, x0, #0xb
  419754:	and	x1, x1, #0xfffffffffffffff8
  419758:	str	x1, [sp, #40]
  41975c:	b	419790 <ferror@plt+0x16790>
  419760:	add	w2, w1, #0x8
  419764:	str	w2, [sp, #64]
  419768:	ldr	w2, [sp, #64]
  41976c:	cmp	w2, #0x0
  419770:	b.le	419784 <ferror@plt+0x16784>
  419774:	add	x1, x0, #0xb
  419778:	and	x1, x1, #0xfffffffffffffff8
  41977c:	str	x1, [sp, #40]
  419780:	b	419790 <ferror@plt+0x16790>
  419784:	ldr	x2, [sp, #48]
  419788:	sxtw	x0, w1
  41978c:	add	x0, x2, x0
  419790:	ldr	w0, [x0]
  419794:	str	w0, [sp, #84]
  419798:	ldr	w1, [sp, #84]
  41979c:	ldr	w0, [sp, #28]
  4197a0:	bl	4199e8 <ferror@plt+0x169e8>
  4197a4:	str	w0, [sp, #92]
  4197a8:	b	4199dc <ferror@plt+0x169dc>
  4197ac:	ldr	w1, [sp, #64]
  4197b0:	ldr	x0, [sp, #40]
  4197b4:	cmp	w1, #0x0
  4197b8:	b.lt	4197cc <ferror@plt+0x167cc>  // b.tstop
  4197bc:	add	x1, x0, #0xb
  4197c0:	and	x1, x1, #0xfffffffffffffff8
  4197c4:	str	x1, [sp, #40]
  4197c8:	b	4197fc <ferror@plt+0x167fc>
  4197cc:	add	w2, w1, #0x8
  4197d0:	str	w2, [sp, #64]
  4197d4:	ldr	w2, [sp, #64]
  4197d8:	cmp	w2, #0x0
  4197dc:	b.le	4197f0 <ferror@plt+0x167f0>
  4197e0:	add	x1, x0, #0xb
  4197e4:	and	x1, x1, #0xfffffffffffffff8
  4197e8:	str	x1, [sp, #40]
  4197ec:	b	4197fc <ferror@plt+0x167fc>
  4197f0:	ldr	x2, [sp, #48]
  4197f4:	sxtw	x0, w1
  4197f8:	add	x0, x2, x0
  4197fc:	ldr	w0, [x0]
  419800:	str	w0, [sp, #88]
  419804:	ldr	w1, [sp, #88]
  419808:	ldr	w0, [sp, #28]
  41980c:	bl	419a18 <ferror@plt+0x16a18>
  419810:	str	w0, [sp, #92]
  419814:	b	4199dc <ferror@plt+0x169dc>
  419818:	ldr	w0, [sp, #24]
  41981c:	cmp	w0, #0xb
  419820:	b.gt	4198c8 <ferror@plt+0x168c8>
  419824:	ldr	w0, [sp, #24]
  419828:	cmp	w0, #0x0
  41982c:	b.ge	419880 <ferror@plt+0x16880>  // b.tcont
  419830:	b	419968 <ferror@plt+0x16968>
  419834:	ldr	w0, [sp, #24]
  419838:	sub	w0, w0, #0x400
  41983c:	mov	x1, #0x1                   	// #1
  419840:	lsl	x0, x1, x0
  419844:	mov	x1, #0x2c5                 	// #709
  419848:	and	x1, x0, x1
  41984c:	cmp	x1, #0x0
  419850:	cset	w1, ne  // ne = any
  419854:	and	w1, w1, #0xff
  419858:	cmp	w1, #0x0
  41985c:	b.ne	4198f8 <ferror@plt+0x168f8>  // b.any
  419860:	mov	x1, #0x502                 	// #1282
  419864:	and	x0, x0, x1
  419868:	cmp	x0, #0x0
  41986c:	cset	w0, ne  // ne = any
  419870:	and	w0, w0, #0xff
  419874:	cmp	w0, #0x0
  419878:	b.ne	4198e4 <ferror@plt+0x168e4>  // b.any
  41987c:	b	419968 <ferror@plt+0x16968>
  419880:	ldr	w0, [sp, #24]
  419884:	mov	x1, #0x1                   	// #1
  419888:	lsl	x0, x1, x0
  41988c:	mov	x1, #0x515                 	// #1301
  419890:	and	x1, x0, x1
  419894:	cmp	x1, #0x0
  419898:	cset	w1, ne  // ne = any
  41989c:	and	w1, w1, #0xff
  4198a0:	cmp	w1, #0x0
  4198a4:	b.ne	4198f8 <ferror@plt+0x168f8>  // b.any
  4198a8:	mov	x1, #0xa0a                 	// #2570
  4198ac:	and	x0, x0, x1
  4198b0:	cmp	x0, #0x0
  4198b4:	cset	w0, ne  // ne = any
  4198b8:	and	w0, w0, #0xff
  4198bc:	cmp	w0, #0x0
  4198c0:	b.ne	4198e4 <ferror@plt+0x168e4>  // b.any
  4198c4:	b	419968 <ferror@plt+0x16968>
  4198c8:	ldr	w0, [sp, #24]
  4198cc:	cmp	w0, #0x40a
  4198d0:	b.gt	419968 <ferror@plt+0x16968>
  4198d4:	ldr	w0, [sp, #24]
  4198d8:	cmp	w0, #0x400
  4198dc:	b.ge	419834 <ferror@plt+0x16834>  // b.tcont
  4198e0:	b	419968 <ferror@plt+0x16968>
  4198e4:	ldr	w1, [sp, #24]
  4198e8:	ldr	w0, [sp, #28]
  4198ec:	bl	402dc0 <fcntl@plt>
  4198f0:	str	w0, [sp, #92]
  4198f4:	b	4199d8 <ferror@plt+0x169d8>
  4198f8:	ldr	w1, [sp, #64]
  4198fc:	ldr	x0, [sp, #40]
  419900:	cmp	w1, #0x0
  419904:	b.lt	419918 <ferror@plt+0x16918>  // b.tstop
  419908:	add	x1, x0, #0xb
  41990c:	and	x1, x1, #0xfffffffffffffff8
  419910:	str	x1, [sp, #40]
  419914:	b	419948 <ferror@plt+0x16948>
  419918:	add	w2, w1, #0x8
  41991c:	str	w2, [sp, #64]
  419920:	ldr	w2, [sp, #64]
  419924:	cmp	w2, #0x0
  419928:	b.le	41993c <ferror@plt+0x1693c>
  41992c:	add	x1, x0, #0xb
  419930:	and	x1, x1, #0xfffffffffffffff8
  419934:	str	x1, [sp, #40]
  419938:	b	419948 <ferror@plt+0x16948>
  41993c:	ldr	x2, [sp, #48]
  419940:	sxtw	x0, w1
  419944:	add	x0, x2, x0
  419948:	ldr	w0, [x0]
  41994c:	str	w0, [sp, #80]
  419950:	ldr	w2, [sp, #80]
  419954:	ldr	w1, [sp, #24]
  419958:	ldr	w0, [sp, #28]
  41995c:	bl	402dc0 <fcntl@plt>
  419960:	str	w0, [sp, #92]
  419964:	b	4199d8 <ferror@plt+0x169d8>
  419968:	ldr	w1, [sp, #64]
  41996c:	ldr	x0, [sp, #40]
  419970:	cmp	w1, #0x0
  419974:	b.lt	419988 <ferror@plt+0x16988>  // b.tstop
  419978:	add	x1, x0, #0xf
  41997c:	and	x1, x1, #0xfffffffffffffff8
  419980:	str	x1, [sp, #40]
  419984:	b	4199b8 <ferror@plt+0x169b8>
  419988:	add	w2, w1, #0x8
  41998c:	str	w2, [sp, #64]
  419990:	ldr	w2, [sp, #64]
  419994:	cmp	w2, #0x0
  419998:	b.le	4199ac <ferror@plt+0x169ac>
  41999c:	add	x1, x0, #0xf
  4199a0:	and	x1, x1, #0xfffffffffffffff8
  4199a4:	str	x1, [sp, #40]
  4199a8:	b	4199b8 <ferror@plt+0x169b8>
  4199ac:	ldr	x2, [sp, #48]
  4199b0:	sxtw	x0, w1
  4199b4:	add	x0, x2, x0
  4199b8:	ldr	x0, [x0]
  4199bc:	str	x0, [sp, #72]
  4199c0:	ldr	x2, [sp, #72]
  4199c4:	ldr	w1, [sp, #24]
  4199c8:	ldr	w0, [sp, #28]
  4199cc:	bl	402dc0 <fcntl@plt>
  4199d0:	str	w0, [sp, #92]
  4199d4:	nop
  4199d8:	nop
  4199dc:	ldr	w0, [sp, #92]
  4199e0:	ldp	x29, x30, [sp], #272
  4199e4:	ret
  4199e8:	stp	x29, x30, [sp, #-48]!
  4199ec:	mov	x29, sp
  4199f0:	str	w0, [sp, #28]
  4199f4:	str	w1, [sp, #24]
  4199f8:	ldr	w2, [sp, #24]
  4199fc:	mov	w1, #0x0                   	// #0
  419a00:	ldr	w0, [sp, #28]
  419a04:	bl	402dc0 <fcntl@plt>
  419a08:	str	w0, [sp, #44]
  419a0c:	ldr	w0, [sp, #44]
  419a10:	ldp	x29, x30, [sp], #48
  419a14:	ret
  419a18:	stp	x29, x30, [sp, #-48]!
  419a1c:	mov	x29, sp
  419a20:	str	w0, [sp, #28]
  419a24:	str	w1, [sp, #24]
  419a28:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  419a2c:	add	x0, x0, #0xd20
  419a30:	ldr	w0, [x0]
  419a34:	cmp	w0, #0x0
  419a38:	b.lt	419ab0 <ferror@plt+0x16ab0>  // b.tstop
  419a3c:	ldr	w2, [sp, #24]
  419a40:	mov	w1, #0x406                 	// #1030
  419a44:	ldr	w0, [sp, #28]
  419a48:	bl	402dc0 <fcntl@plt>
  419a4c:	str	w0, [sp, #44]
  419a50:	ldr	w0, [sp, #44]
  419a54:	cmp	w0, #0x0
  419a58:	b.ge	419a6c <ferror@plt+0x16a6c>  // b.tcont
  419a5c:	bl	402f50 <__errno_location@plt>
  419a60:	ldr	w0, [x0]
  419a64:	cmp	w0, #0x16
  419a68:	b.eq	419a80 <ferror@plt+0x16a80>  // b.none
  419a6c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  419a70:	add	x0, x0, #0xd20
  419a74:	mov	w1, #0x1                   	// #1
  419a78:	str	w1, [x0]
  419a7c:	b	419ac0 <ferror@plt+0x16ac0>
  419a80:	ldr	w1, [sp, #24]
  419a84:	ldr	w0, [sp, #28]
  419a88:	bl	4199e8 <ferror@plt+0x169e8>
  419a8c:	str	w0, [sp, #44]
  419a90:	ldr	w0, [sp, #44]
  419a94:	cmp	w0, #0x0
  419a98:	b.lt	419ac0 <ferror@plt+0x16ac0>  // b.tstop
  419a9c:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  419aa0:	add	x0, x0, #0xd20
  419aa4:	mov	w1, #0xffffffff            	// #-1
  419aa8:	str	w1, [x0]
  419aac:	b	419ac0 <ferror@plt+0x16ac0>
  419ab0:	ldr	w1, [sp, #24]
  419ab4:	ldr	w0, [sp, #28]
  419ab8:	bl	4199e8 <ferror@plt+0x169e8>
  419abc:	str	w0, [sp, #44]
  419ac0:	ldr	w0, [sp, #44]
  419ac4:	cmp	w0, #0x0
  419ac8:	b.lt	419b48 <ferror@plt+0x16b48>  // b.tstop
  419acc:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  419ad0:	add	x0, x0, #0xd20
  419ad4:	ldr	w0, [x0]
  419ad8:	cmn	w0, #0x1
  419adc:	b.ne	419b48 <ferror@plt+0x16b48>  // b.any
  419ae0:	mov	w1, #0x1                   	// #1
  419ae4:	ldr	w0, [sp, #44]
  419ae8:	bl	402dc0 <fcntl@plt>
  419aec:	str	w0, [sp, #40]
  419af0:	ldr	w0, [sp, #40]
  419af4:	cmp	w0, #0x0
  419af8:	b.lt	419b1c <ferror@plt+0x16b1c>  // b.tstop
  419afc:	ldr	w0, [sp, #40]
  419b00:	orr	w0, w0, #0x1
  419b04:	mov	w2, w0
  419b08:	mov	w1, #0x2                   	// #2
  419b0c:	ldr	w0, [sp, #44]
  419b10:	bl	402dc0 <fcntl@plt>
  419b14:	cmn	w0, #0x1
  419b18:	b.ne	419b48 <ferror@plt+0x16b48>  // b.any
  419b1c:	bl	402f50 <__errno_location@plt>
  419b20:	ldr	w0, [x0]
  419b24:	str	w0, [sp, #36]
  419b28:	ldr	w0, [sp, #44]
  419b2c:	bl	402ba0 <close@plt>
  419b30:	bl	402f50 <__errno_location@plt>
  419b34:	mov	x1, x0
  419b38:	ldr	w0, [sp, #36]
  419b3c:	str	w0, [x1]
  419b40:	mov	w0, #0xffffffff            	// #-1
  419b44:	str	w0, [sp, #44]
  419b48:	ldr	w0, [sp, #44]
  419b4c:	ldp	x29, x30, [sp], #48
  419b50:	ret
  419b54:	stp	x29, x30, [sp, #-32]!
  419b58:	mov	x29, sp
  419b5c:	str	x0, [sp, #24]
  419b60:	ldr	x0, [sp, #24]
  419b64:	ldr	w0, [x0]
  419b68:	and	w0, w0, #0x100
  419b6c:	cmp	w0, #0x0
  419b70:	b.eq	419b84 <ferror@plt+0x16b84>  // b.none
  419b74:	mov	w2, #0x1                   	// #1
  419b78:	mov	x1, #0x0                   	// #0
  419b7c:	ldr	x0, [sp, #24]
  419b80:	bl	419bdc <ferror@plt+0x16bdc>
  419b84:	nop
  419b88:	ldp	x29, x30, [sp], #32
  419b8c:	ret
  419b90:	stp	x29, x30, [sp, #-32]!
  419b94:	mov	x29, sp
  419b98:	str	x0, [sp, #24]
  419b9c:	ldr	x0, [sp, #24]
  419ba0:	cmp	x0, #0x0
  419ba4:	b.eq	419bb8 <ferror@plt+0x16bb8>  // b.none
  419ba8:	ldr	x0, [sp, #24]
  419bac:	bl	402ed0 <__freading@plt>
  419bb0:	cmp	w0, #0x0
  419bb4:	b.ne	419bc4 <ferror@plt+0x16bc4>  // b.any
  419bb8:	ldr	x0, [sp, #24]
  419bbc:	bl	402de0 <fflush@plt>
  419bc0:	b	419bd4 <ferror@plt+0x16bd4>
  419bc4:	ldr	x0, [sp, #24]
  419bc8:	bl	419b54 <ferror@plt+0x16b54>
  419bcc:	ldr	x0, [sp, #24]
  419bd0:	bl	402de0 <fflush@plt>
  419bd4:	ldp	x29, x30, [sp], #32
  419bd8:	ret
  419bdc:	stp	x29, x30, [sp, #-64]!
  419be0:	mov	x29, sp
  419be4:	str	x0, [sp, #40]
  419be8:	str	x1, [sp, #32]
  419bec:	str	w2, [sp, #28]
  419bf0:	ldr	x0, [sp, #40]
  419bf4:	ldr	x1, [x0, #16]
  419bf8:	ldr	x0, [sp, #40]
  419bfc:	ldr	x0, [x0, #8]
  419c00:	cmp	x1, x0
  419c04:	b.ne	419c84 <ferror@plt+0x16c84>  // b.any
  419c08:	ldr	x0, [sp, #40]
  419c0c:	ldr	x1, [x0, #40]
  419c10:	ldr	x0, [sp, #40]
  419c14:	ldr	x0, [x0, #32]
  419c18:	cmp	x1, x0
  419c1c:	b.ne	419c84 <ferror@plt+0x16c84>  // b.any
  419c20:	ldr	x0, [sp, #40]
  419c24:	ldr	x0, [x0, #72]
  419c28:	cmp	x0, #0x0
  419c2c:	b.ne	419c84 <ferror@plt+0x16c84>  // b.any
  419c30:	ldr	x0, [sp, #40]
  419c34:	bl	402a10 <fileno@plt>
  419c38:	ldr	w2, [sp, #28]
  419c3c:	ldr	x1, [sp, #32]
  419c40:	bl	4029d0 <lseek@plt>
  419c44:	str	x0, [sp, #56]
  419c48:	ldr	x0, [sp, #56]
  419c4c:	cmn	x0, #0x1
  419c50:	b.ne	419c5c <ferror@plt+0x16c5c>  // b.any
  419c54:	mov	w0, #0xffffffff            	// #-1
  419c58:	b	419c94 <ferror@plt+0x16c94>
  419c5c:	ldr	x0, [sp, #40]
  419c60:	ldr	w0, [x0]
  419c64:	and	w1, w0, #0xffffffef
  419c68:	ldr	x0, [sp, #40]
  419c6c:	str	w1, [x0]
  419c70:	ldr	x0, [sp, #40]
  419c74:	ldr	x1, [sp, #56]
  419c78:	str	x1, [x0, #144]
  419c7c:	mov	w0, #0x0                   	// #0
  419c80:	b	419c94 <ferror@plt+0x16c94>
  419c84:	ldr	w2, [sp, #28]
  419c88:	ldr	x1, [sp, #32]
  419c8c:	ldr	x0, [sp, #40]
  419c90:	bl	402d00 <fseeko@plt>
  419c94:	ldp	x29, x30, [sp], #64
  419c98:	ret
  419c9c:	stp	x29, x30, [sp, #-64]!
  419ca0:	mov	x29, sp
  419ca4:	str	x0, [sp, #40]
  419ca8:	str	x1, [sp, #32]
  419cac:	str	x2, [sp, #24]
  419cb0:	str	x3, [sp, #16]
  419cb4:	ldr	x0, [sp, #40]
  419cb8:	cmp	x0, #0x0
  419cbc:	b.ne	419cc8 <ferror@plt+0x16cc8>  // b.any
  419cc0:	add	x0, sp, #0x30
  419cc4:	str	x0, [sp, #40]
  419cc8:	ldr	x3, [sp, #16]
  419ccc:	ldr	x2, [sp, #24]
  419cd0:	ldr	x1, [sp, #32]
  419cd4:	ldr	x0, [sp, #40]
  419cd8:	bl	402870 <mbrtowc@plt>
  419cdc:	str	x0, [sp, #56]
  419ce0:	ldr	x0, [sp, #56]
  419ce4:	cmn	x0, #0x3
  419ce8:	b.ls	419d34 <ferror@plt+0x16d34>  // b.plast
  419cec:	ldr	x0, [sp, #24]
  419cf0:	cmp	x0, #0x0
  419cf4:	b.eq	419d34 <ferror@plt+0x16d34>  // b.none
  419cf8:	mov	w0, #0x0                   	// #0
  419cfc:	bl	410578 <ferror@plt+0xd578>
  419d00:	and	w0, w0, #0xff
  419d04:	eor	w0, w0, #0x1
  419d08:	and	w0, w0, #0xff
  419d0c:	cmp	w0, #0x0
  419d10:	b.eq	419d34 <ferror@plt+0x16d34>  // b.none
  419d14:	ldr	x0, [sp, #32]
  419d18:	ldrb	w0, [x0]
  419d1c:	strb	w0, [sp, #55]
  419d20:	ldrb	w1, [sp, #55]
  419d24:	ldr	x0, [sp, #40]
  419d28:	str	w1, [x0]
  419d2c:	mov	x0, #0x1                   	// #1
  419d30:	b	419d38 <ferror@plt+0x16d38>
  419d34:	ldr	x0, [sp, #56]
  419d38:	ldp	x29, x30, [sp], #64
  419d3c:	ret
  419d40:	stp	x29, x30, [sp, #-80]!
  419d44:	mov	x29, sp
  419d48:	str	x0, [sp, #24]
  419d4c:	str	x1, [sp, #16]
  419d50:	ldr	x0, [sp, #24]
  419d54:	ldr	x0, [x0, #8]
  419d58:	cmp	x0, #0x0
  419d5c:	b.lt	419d78 <ferror@plt+0x16d78>  // b.tstop
  419d60:	ldr	x0, [sp, #24]
  419d64:	ldr	x1, [x0, #8]
  419d68:	mov	x0, #0xc9ff                	// #51711
  419d6c:	movk	x0, #0x3b9a, lsl #16
  419d70:	cmp	x1, x0
  419d74:	b.le	419d90 <ferror@plt+0x16d90>
  419d78:	bl	402f50 <__errno_location@plt>
  419d7c:	mov	x1, x0
  419d80:	mov	w0, #0x16                  	// #22
  419d84:	str	w0, [x1]
  419d88:	mov	w0, #0xffffffff            	// #-1
  419d8c:	b	419e40 <ferror@plt+0x16e40>
  419d90:	mov	x0, #0xa400                	// #41984
  419d94:	movk	x0, #0x1f, lsl #16
  419d98:	str	x0, [sp, #64]
  419d9c:	ldr	x0, [sp, #24]
  419da0:	ldr	x0, [x0]
  419da4:	str	x0, [sp, #72]
  419da8:	ldr	x0, [sp, #24]
  419dac:	ldr	x0, [x0, #8]
  419db0:	str	x0, [sp, #48]
  419db4:	b	419e1c <ferror@plt+0x16e1c>
  419db8:	ldr	x0, [sp, #64]
  419dbc:	str	x0, [sp, #40]
  419dc0:	add	x0, sp, #0x28
  419dc4:	ldr	x1, [sp, #16]
  419dc8:	bl	402d60 <nanosleep@plt>
  419dcc:	str	w0, [sp, #60]
  419dd0:	ldr	x1, [sp, #72]
  419dd4:	ldr	x0, [sp, #64]
  419dd8:	sub	x0, x1, x0
  419ddc:	str	x0, [sp, #72]
  419de0:	ldr	w0, [sp, #60]
  419de4:	cmp	w0, #0x0
  419de8:	b.eq	419e18 <ferror@plt+0x16e18>  // b.none
  419dec:	ldr	x0, [sp, #16]
  419df0:	cmp	x0, #0x0
  419df4:	b.eq	419e10 <ferror@plt+0x16e10>  // b.none
  419df8:	ldr	x0, [sp, #16]
  419dfc:	ldr	x1, [x0]
  419e00:	ldr	x0, [sp, #72]
  419e04:	add	x1, x1, x0
  419e08:	ldr	x0, [sp, #16]
  419e0c:	str	x1, [x0]
  419e10:	ldr	w0, [sp, #60]
  419e14:	b	419e40 <ferror@plt+0x16e40>
  419e18:	str	xzr, [sp, #48]
  419e1c:	ldr	x1, [sp, #64]
  419e20:	ldr	x0, [sp, #72]
  419e24:	cmp	x1, x0
  419e28:	b.lt	419db8 <ferror@plt+0x16db8>  // b.tstop
  419e2c:	ldr	x0, [sp, #72]
  419e30:	str	x0, [sp, #40]
  419e34:	add	x0, sp, #0x28
  419e38:	ldr	x1, [sp, #16]
  419e3c:	bl	402d60 <nanosleep@plt>
  419e40:	ldp	x29, x30, [sp], #80
  419e44:	ret
  419e48:	stp	x29, x30, [sp, #-32]!
  419e4c:	mov	x29, sp
  419e50:	str	x0, [sp, #24]
  419e54:	str	x1, [sp, #16]
  419e58:	ldr	x0, [sp, #24]
  419e5c:	ldrb	w0, [x0, #80]
  419e60:	and	w0, w0, #0x1
  419e64:	and	w0, w0, #0xff
  419e68:	cmp	w0, #0x0
  419e6c:	b.eq	419e8c <ferror@plt+0x16e8c>  // b.none
  419e70:	ldr	x0, [sp, #24]
  419e74:	ldr	x2, [x0, #56]
  419e78:	ldr	x0, [sp, #24]
  419e7c:	ldr	x0, [x0, #72]
  419e80:	ldr	x1, [sp, #16]
  419e84:	blr	x2
  419e88:	b	419e9c <ferror@plt+0x16e9c>
  419e8c:	ldr	x0, [sp, #24]
  419e90:	ldr	x1, [x0, #56]
  419e94:	ldr	x0, [sp, #16]
  419e98:	blr	x1
  419e9c:	ldp	x29, x30, [sp], #32
  419ea0:	ret
  419ea4:	stp	x29, x30, [sp, #-32]!
  419ea8:	mov	x29, sp
  419eac:	str	x0, [sp, #24]
  419eb0:	str	x1, [sp, #16]
  419eb4:	ldr	x0, [sp, #24]
  419eb8:	ldrb	w0, [x0, #80]
  419ebc:	and	w0, w0, #0x1
  419ec0:	and	w0, w0, #0xff
  419ec4:	cmp	w0, #0x0
  419ec8:	b.eq	419ee8 <ferror@plt+0x16ee8>  // b.none
  419ecc:	ldr	x0, [sp, #24]
  419ed0:	ldr	x2, [x0, #64]
  419ed4:	ldr	x0, [sp, #24]
  419ed8:	ldr	x0, [x0, #72]
  419edc:	ldr	x1, [sp, #16]
  419ee0:	blr	x2
  419ee4:	b	419ef8 <ferror@plt+0x16ef8>
  419ee8:	ldr	x0, [sp, #24]
  419eec:	ldr	x1, [x0, #64]
  419ef0:	ldr	x0, [sp, #16]
  419ef4:	blr	x1
  419ef8:	nop
  419efc:	ldp	x29, x30, [sp], #32
  419f00:	ret
  419f04:	stp	x29, x30, [sp, #-64]!
  419f08:	mov	x29, sp
  419f0c:	str	x0, [sp, #40]
  419f10:	str	x1, [sp, #32]
  419f14:	str	x2, [sp, #24]
  419f18:	ldr	x0, [sp, #24]
  419f1c:	cmp	x0, #0x0
  419f20:	b.ne	419f2c <ferror@plt+0x16f2c>  // b.any
  419f24:	mov	x0, #0x10                  	// #16
  419f28:	str	x0, [sp, #24]
  419f2c:	ldr	x0, [sp, #32]
  419f30:	cmp	x0, #0x0
  419f34:	b.ne	419f54 <ferror@plt+0x16f54>  // b.any
  419f38:	mov	w0, #0x20                  	// #32
  419f3c:	str	w0, [sp, #60]
  419f40:	mov	w1, #0x1000                	// #4096
  419f44:	ldr	w0, [sp, #60]
  419f48:	sub	w0, w1, w0
  419f4c:	sxtw	x0, w0
  419f50:	str	x0, [sp, #32]
  419f54:	ldr	x0, [sp, #40]
  419f58:	ldr	x1, [sp, #32]
  419f5c:	str	x1, [x0]
  419f60:	ldr	x0, [sp, #24]
  419f64:	sub	x1, x0, #0x1
  419f68:	ldr	x0, [sp, #40]
  419f6c:	str	x1, [x0, #48]
  419f70:	ldr	x0, [sp, #40]
  419f74:	ldr	x0, [x0]
  419f78:	mov	x1, x0
  419f7c:	ldr	x0, [sp, #40]
  419f80:	bl	419e48 <ferror@plt+0x16e48>
  419f84:	mov	x1, x0
  419f88:	ldr	x0, [sp, #40]
  419f8c:	str	x1, [x0, #8]
  419f90:	ldr	x0, [sp, #40]
  419f94:	ldr	x0, [x0, #8]
  419f98:	str	x0, [sp, #48]
  419f9c:	ldr	x0, [sp, #48]
  419fa0:	cmp	x0, #0x0
  419fa4:	b.ne	419fb8 <ferror@plt+0x16fb8>  // b.any
  419fa8:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  419fac:	add	x0, x0, #0x548
  419fb0:	ldr	x0, [x0]
  419fb4:	blr	x0
  419fb8:	ldr	x0, [sp, #48]
  419fbc:	add	x0, x0, #0x10
  419fc0:	mov	x1, x0
  419fc4:	ldr	x0, [sp, #24]
  419fc8:	add	x0, x1, x0
  419fcc:	sub	x1, x0, #0x1
  419fd0:	ldr	x0, [sp, #24]
  419fd4:	neg	x0, x0
  419fd8:	and	x0, x1, x0
  419fdc:	mov	x1, x0
  419fe0:	ldr	x0, [sp, #40]
  419fe4:	str	x1, [x0, #16]
  419fe8:	ldr	x0, [sp, #40]
  419fec:	ldr	x1, [x0, #16]
  419ff0:	ldr	x0, [sp, #40]
  419ff4:	str	x1, [x0, #24]
  419ff8:	ldr	x0, [sp, #40]
  419ffc:	ldr	x0, [x0]
  41a000:	ldr	x1, [sp, #48]
  41a004:	add	x1, x1, x0
  41a008:	ldr	x0, [sp, #48]
  41a00c:	str	x1, [x0]
  41a010:	ldr	x0, [sp, #48]
  41a014:	ldr	x1, [x0]
  41a018:	ldr	x0, [sp, #40]
  41a01c:	str	x1, [x0, #32]
  41a020:	ldr	x0, [sp, #48]
  41a024:	str	xzr, [x0, #8]
  41a028:	ldr	x0, [sp, #40]
  41a02c:	ldrb	w1, [x0, #80]
  41a030:	and	w1, w1, #0xfffffffd
  41a034:	strb	w1, [x0, #80]
  41a038:	ldr	x0, [sp, #40]
  41a03c:	ldrb	w1, [x0, #80]
  41a040:	and	w1, w1, #0xfffffffb
  41a044:	strb	w1, [x0, #80]
  41a048:	mov	w0, #0x1                   	// #1
  41a04c:	ldp	x29, x30, [sp], #64
  41a050:	ret

000000000041a054 <_obstack_begin@@Base>:
  41a054:	stp	x29, x30, [sp, #-64]!
  41a058:	mov	x29, sp
  41a05c:	str	x0, [sp, #56]
  41a060:	str	x1, [sp, #48]
  41a064:	str	x2, [sp, #40]
  41a068:	str	x3, [sp, #32]
  41a06c:	str	x4, [sp, #24]
  41a070:	ldr	x0, [sp, #56]
  41a074:	ldr	x1, [sp, #32]
  41a078:	str	x1, [x0, #56]
  41a07c:	ldr	x0, [sp, #56]
  41a080:	ldr	x1, [sp, #24]
  41a084:	str	x1, [x0, #64]
  41a088:	ldr	x0, [sp, #56]
  41a08c:	ldrb	w1, [x0, #80]
  41a090:	and	w1, w1, #0xfffffffe
  41a094:	strb	w1, [x0, #80]
  41a098:	ldr	x2, [sp, #40]
  41a09c:	ldr	x1, [sp, #48]
  41a0a0:	ldr	x0, [sp, #56]
  41a0a4:	bl	419f04 <ferror@plt+0x16f04>
  41a0a8:	ldp	x29, x30, [sp], #64
  41a0ac:	ret

000000000041a0b0 <_obstack_begin_1@@Base>:
  41a0b0:	stp	x29, x30, [sp, #-64]!
  41a0b4:	mov	x29, sp
  41a0b8:	str	x0, [sp, #56]
  41a0bc:	str	x1, [sp, #48]
  41a0c0:	str	x2, [sp, #40]
  41a0c4:	str	x3, [sp, #32]
  41a0c8:	str	x4, [sp, #24]
  41a0cc:	str	x5, [sp, #16]
  41a0d0:	ldr	x0, [sp, #56]
  41a0d4:	ldr	x1, [sp, #32]
  41a0d8:	str	x1, [x0, #56]
  41a0dc:	ldr	x0, [sp, #56]
  41a0e0:	ldr	x1, [sp, #24]
  41a0e4:	str	x1, [x0, #64]
  41a0e8:	ldr	x0, [sp, #56]
  41a0ec:	ldr	x1, [sp, #16]
  41a0f0:	str	x1, [x0, #72]
  41a0f4:	ldr	x0, [sp, #56]
  41a0f8:	ldrb	w1, [x0, #80]
  41a0fc:	orr	w1, w1, #0x1
  41a100:	strb	w1, [x0, #80]
  41a104:	ldr	x2, [sp, #40]
  41a108:	ldr	x1, [sp, #48]
  41a10c:	ldr	x0, [sp, #56]
  41a110:	bl	419f04 <ferror@plt+0x16f04>
  41a114:	ldp	x29, x30, [sp], #64
  41a118:	ret

000000000041a11c <_obstack_newchunk@@Base>:
  41a11c:	stp	x29, x30, [sp, #-96]!
  41a120:	mov	x29, sp
  41a124:	str	x0, [sp, #24]
  41a128:	str	x1, [sp, #16]
  41a12c:	ldr	x0, [sp, #24]
  41a130:	ldr	x0, [x0, #8]
  41a134:	str	x0, [sp, #72]
  41a138:	str	xzr, [sp, #88]
  41a13c:	ldr	x0, [sp, #24]
  41a140:	ldr	x1, [x0, #24]
  41a144:	ldr	x0, [sp, #24]
  41a148:	ldr	x0, [x0, #16]
  41a14c:	sub	x0, x1, x0
  41a150:	str	x0, [sp, #64]
  41a154:	ldr	x1, [sp, #64]
  41a158:	ldr	x0, [sp, #16]
  41a15c:	add	x0, x1, x0
  41a160:	str	x0, [sp, #56]
  41a164:	ldr	x0, [sp, #24]
  41a168:	ldr	x0, [x0, #48]
  41a16c:	ldr	x1, [sp, #56]
  41a170:	add	x0, x1, x0
  41a174:	str	x0, [sp, #48]
  41a178:	ldr	x0, [sp, #64]
  41a17c:	lsr	x1, x0, #3
  41a180:	ldr	x0, [sp, #48]
  41a184:	add	x0, x1, x0
  41a188:	add	x0, x0, #0x64
  41a18c:	str	x0, [sp, #80]
  41a190:	ldr	x1, [sp, #80]
  41a194:	ldr	x0, [sp, #48]
  41a198:	cmp	x1, x0
  41a19c:	b.cs	41a1a8 <_obstack_newchunk@@Base+0x8c>  // b.hs, b.nlast
  41a1a0:	ldr	x0, [sp, #48]
  41a1a4:	str	x0, [sp, #80]
  41a1a8:	ldr	x0, [sp, #24]
  41a1ac:	ldr	x0, [x0]
  41a1b0:	ldr	x1, [sp, #80]
  41a1b4:	cmp	x1, x0
  41a1b8:	b.cs	41a1c8 <_obstack_newchunk@@Base+0xac>  // b.hs, b.nlast
  41a1bc:	ldr	x0, [sp, #24]
  41a1c0:	ldr	x0, [x0]
  41a1c4:	str	x0, [sp, #80]
  41a1c8:	ldr	x1, [sp, #64]
  41a1cc:	ldr	x0, [sp, #56]
  41a1d0:	cmp	x1, x0
  41a1d4:	b.hi	41a1f8 <_obstack_newchunk@@Base+0xdc>  // b.pmore
  41a1d8:	ldr	x1, [sp, #56]
  41a1dc:	ldr	x0, [sp, #48]
  41a1e0:	cmp	x1, x0
  41a1e4:	b.hi	41a1f8 <_obstack_newchunk@@Base+0xdc>  // b.pmore
  41a1e8:	ldr	x1, [sp, #80]
  41a1ec:	ldr	x0, [sp, #24]
  41a1f0:	bl	419e48 <ferror@plt+0x16e48>
  41a1f4:	str	x0, [sp, #88]
  41a1f8:	ldr	x0, [sp, #88]
  41a1fc:	cmp	x0, #0x0
  41a200:	b.ne	41a214 <_obstack_newchunk@@Base+0xf8>  // b.any
  41a204:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  41a208:	add	x0, x0, #0x548
  41a20c:	ldr	x0, [x0]
  41a210:	blr	x0
  41a214:	ldr	x0, [sp, #24]
  41a218:	ldr	x1, [sp, #88]
  41a21c:	str	x1, [x0, #8]
  41a220:	ldr	x0, [sp, #88]
  41a224:	ldr	x1, [sp, #72]
  41a228:	str	x1, [x0, #8]
  41a22c:	ldr	x1, [sp, #88]
  41a230:	ldr	x0, [sp, #80]
  41a234:	add	x1, x1, x0
  41a238:	ldr	x0, [sp, #24]
  41a23c:	str	x1, [x0, #32]
  41a240:	ldr	x0, [sp, #24]
  41a244:	ldr	x1, [x0, #32]
  41a248:	ldr	x0, [sp, #88]
  41a24c:	str	x1, [x0]
  41a250:	ldr	x0, [sp, #88]
  41a254:	add	x0, x0, #0x10
  41a258:	mov	x1, x0
  41a25c:	ldr	x0, [sp, #24]
  41a260:	ldr	x0, [x0, #48]
  41a264:	add	x1, x1, x0
  41a268:	ldr	x0, [sp, #24]
  41a26c:	ldr	x0, [x0, #48]
  41a270:	mvn	x0, x0
  41a274:	and	x0, x1, x0
  41a278:	str	x0, [sp, #40]
  41a27c:	ldr	x0, [sp, #24]
  41a280:	ldr	x0, [x0, #16]
  41a284:	ldr	x2, [sp, #64]
  41a288:	mov	x1, x0
  41a28c:	ldr	x0, [sp, #40]
  41a290:	bl	402880 <memcpy@plt>
  41a294:	ldr	x0, [sp, #24]
  41a298:	ldrb	w0, [x0, #80]
  41a29c:	and	w0, w0, #0x2
  41a2a0:	and	w0, w0, #0xff
  41a2a4:	cmp	w0, #0x0
  41a2a8:	b.ne	41a300 <_obstack_newchunk@@Base+0x1e4>  // b.any
  41a2ac:	ldr	x0, [sp, #24]
  41a2b0:	ldr	x0, [x0, #16]
  41a2b4:	ldr	x1, [sp, #72]
  41a2b8:	add	x1, x1, #0x10
  41a2bc:	mov	x2, x1
  41a2c0:	ldr	x1, [sp, #24]
  41a2c4:	ldr	x1, [x1, #48]
  41a2c8:	add	x2, x2, x1
  41a2cc:	ldr	x1, [sp, #24]
  41a2d0:	ldr	x1, [x1, #48]
  41a2d4:	mvn	x1, x1
  41a2d8:	and	x1, x2, x1
  41a2dc:	cmp	x0, x1
  41a2e0:	b.ne	41a300 <_obstack_newchunk@@Base+0x1e4>  // b.any
  41a2e4:	ldr	x0, [sp, #72]
  41a2e8:	ldr	x1, [x0, #8]
  41a2ec:	ldr	x0, [sp, #88]
  41a2f0:	str	x1, [x0, #8]
  41a2f4:	ldr	x1, [sp, #72]
  41a2f8:	ldr	x0, [sp, #24]
  41a2fc:	bl	419ea4 <ferror@plt+0x16ea4>
  41a300:	ldr	x0, [sp, #24]
  41a304:	ldr	x1, [sp, #40]
  41a308:	str	x1, [x0, #16]
  41a30c:	ldr	x0, [sp, #24]
  41a310:	ldr	x1, [x0, #16]
  41a314:	ldr	x0, [sp, #64]
  41a318:	add	x1, x1, x0
  41a31c:	ldr	x0, [sp, #24]
  41a320:	str	x1, [x0, #24]
  41a324:	ldr	x0, [sp, #24]
  41a328:	ldrb	w1, [x0, #80]
  41a32c:	and	w1, w1, #0xfffffffd
  41a330:	strb	w1, [x0, #80]
  41a334:	nop
  41a338:	ldp	x29, x30, [sp], #96
  41a33c:	ret

000000000041a340 <_obstack_allocated_p@@Base>:
  41a340:	sub	sp, sp, #0x20
  41a344:	str	x0, [sp, #8]
  41a348:	str	x1, [sp]
  41a34c:	ldr	x0, [sp, #8]
  41a350:	ldr	x0, [x0, #8]
  41a354:	str	x0, [sp, #24]
  41a358:	b	41a370 <_obstack_allocated_p@@Base+0x30>
  41a35c:	ldr	x0, [sp, #24]
  41a360:	ldr	x0, [x0, #8]
  41a364:	str	x0, [sp, #16]
  41a368:	ldr	x0, [sp, #16]
  41a36c:	str	x0, [sp, #24]
  41a370:	ldr	x0, [sp, #24]
  41a374:	cmp	x0, #0x0
  41a378:	b.eq	41a3a0 <_obstack_allocated_p@@Base+0x60>  // b.none
  41a37c:	ldr	x1, [sp, #24]
  41a380:	ldr	x0, [sp]
  41a384:	cmp	x1, x0
  41a388:	b.cs	41a35c <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  41a38c:	ldr	x0, [sp, #24]
  41a390:	ldr	x0, [x0]
  41a394:	ldr	x1, [sp]
  41a398:	cmp	x1, x0
  41a39c:	b.hi	41a35c <_obstack_allocated_p@@Base+0x1c>  // b.pmore
  41a3a0:	ldr	x0, [sp, #24]
  41a3a4:	cmp	x0, #0x0
  41a3a8:	cset	w0, ne  // ne = any
  41a3ac:	and	w0, w0, #0xff
  41a3b0:	add	sp, sp, #0x20
  41a3b4:	ret

000000000041a3b8 <_obstack_free@@Base>:
  41a3b8:	stp	x29, x30, [sp, #-48]!
  41a3bc:	mov	x29, sp
  41a3c0:	str	x0, [sp, #24]
  41a3c4:	str	x1, [sp, #16]
  41a3c8:	ldr	x0, [sp, #24]
  41a3cc:	ldr	x0, [x0, #8]
  41a3d0:	str	x0, [sp, #40]
  41a3d4:	b	41a408 <_obstack_free@@Base+0x50>
  41a3d8:	ldr	x0, [sp, #40]
  41a3dc:	ldr	x0, [x0, #8]
  41a3e0:	str	x0, [sp, #32]
  41a3e4:	ldr	x1, [sp, #40]
  41a3e8:	ldr	x0, [sp, #24]
  41a3ec:	bl	419ea4 <ferror@plt+0x16ea4>
  41a3f0:	ldr	x0, [sp, #32]
  41a3f4:	str	x0, [sp, #40]
  41a3f8:	ldr	x0, [sp, #24]
  41a3fc:	ldrb	w1, [x0, #80]
  41a400:	orr	w1, w1, #0x2
  41a404:	strb	w1, [x0, #80]
  41a408:	ldr	x0, [sp, #40]
  41a40c:	cmp	x0, #0x0
  41a410:	b.eq	41a438 <_obstack_free@@Base+0x80>  // b.none
  41a414:	ldr	x1, [sp, #40]
  41a418:	ldr	x0, [sp, #16]
  41a41c:	cmp	x1, x0
  41a420:	b.cs	41a3d8 <_obstack_free@@Base+0x20>  // b.hs, b.nlast
  41a424:	ldr	x0, [sp, #40]
  41a428:	ldr	x0, [x0]
  41a42c:	ldr	x1, [sp, #16]
  41a430:	cmp	x1, x0
  41a434:	b.hi	41a3d8 <_obstack_free@@Base+0x20>  // b.pmore
  41a438:	ldr	x0, [sp, #40]
  41a43c:	cmp	x0, #0x0
  41a440:	b.eq	41a480 <_obstack_free@@Base+0xc8>  // b.none
  41a444:	ldr	x0, [sp, #24]
  41a448:	ldr	x1, [sp, #16]
  41a44c:	str	x1, [x0, #24]
  41a450:	ldr	x0, [sp, #24]
  41a454:	ldr	x1, [x0, #24]
  41a458:	ldr	x0, [sp, #24]
  41a45c:	str	x1, [x0, #16]
  41a460:	ldr	x0, [sp, #40]
  41a464:	ldr	x1, [x0]
  41a468:	ldr	x0, [sp, #24]
  41a46c:	str	x1, [x0, #32]
  41a470:	ldr	x0, [sp, #24]
  41a474:	ldr	x1, [sp, #40]
  41a478:	str	x1, [x0, #8]
  41a47c:	b	41a490 <_obstack_free@@Base+0xd8>
  41a480:	ldr	x0, [sp, #16]
  41a484:	cmp	x0, #0x0
  41a488:	b.eq	41a490 <_obstack_free@@Base+0xd8>  // b.none
  41a48c:	bl	402c20 <abort@plt>
  41a490:	nop
  41a494:	ldp	x29, x30, [sp], #48
  41a498:	ret

000000000041a49c <_obstack_memory_used@@Base>:
  41a49c:	sub	sp, sp, #0x20
  41a4a0:	str	x0, [sp, #8]
  41a4a4:	str	xzr, [sp, #16]
  41a4a8:	ldr	x0, [sp, #8]
  41a4ac:	ldr	x0, [x0, #8]
  41a4b0:	str	x0, [sp, #24]
  41a4b4:	b	41a4e4 <_obstack_memory_used@@Base+0x48>
  41a4b8:	ldr	x0, [sp, #24]
  41a4bc:	ldr	x1, [x0]
  41a4c0:	ldr	x0, [sp, #24]
  41a4c4:	sub	x0, x1, x0
  41a4c8:	mov	x1, x0
  41a4cc:	ldr	x0, [sp, #16]
  41a4d0:	add	x0, x0, x1
  41a4d4:	str	x0, [sp, #16]
  41a4d8:	ldr	x0, [sp, #24]
  41a4dc:	ldr	x0, [x0, #8]
  41a4e0:	str	x0, [sp, #24]
  41a4e4:	ldr	x0, [sp, #24]
  41a4e8:	cmp	x0, #0x0
  41a4ec:	b.ne	41a4b8 <_obstack_memory_used@@Base+0x1c>  // b.any
  41a4f0:	ldr	x0, [sp, #16]
  41a4f4:	add	sp, sp, #0x20
  41a4f8:	ret
  41a4fc:	stp	x29, x30, [sp, #-32]!
  41a500:	mov	x29, sp
  41a504:	str	x19, [sp, #16]
  41a508:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  41a50c:	add	x0, x0, #0x558
  41a510:	ldr	x19, [x0]
  41a514:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  41a518:	add	x0, x0, #0xe98
  41a51c:	bl	402fd0 <gettext@plt>
  41a520:	mov	x2, x0
  41a524:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  41a528:	add	x1, x0, #0xeb0
  41a52c:	mov	x0, x19
  41a530:	bl	402fe0 <fprintf@plt>
  41a534:	adrp	x0, 433000 <_obstack_memory_used@@Base+0x18b64>
  41a538:	add	x0, x0, #0x4e8
  41a53c:	ldr	w0, [x0]
  41a540:	bl	402900 <exit@plt>
  41a544:	sub	sp, sp, #0x10
  41a548:	str	x0, [sp, #8]
  41a54c:	str	w1, [sp, #4]
  41a550:	ldr	w0, [sp, #4]
  41a554:	ldr	x1, [sp, #8]
  41a558:	neg	w0, w0
  41a55c:	ror	x0, x1, x0
  41a560:	add	sp, sp, #0x10
  41a564:	ret
  41a568:	sub	sp, sp, #0x10
  41a56c:	str	x0, [sp, #8]
  41a570:	str	w1, [sp, #4]
  41a574:	ldr	w0, [sp, #4]
  41a578:	ldr	x1, [sp, #8]
  41a57c:	ror	x0, x1, x0
  41a580:	add	sp, sp, #0x10
  41a584:	ret
  41a588:	sub	sp, sp, #0x10
  41a58c:	str	w0, [sp, #12]
  41a590:	str	w1, [sp, #8]
  41a594:	ldr	w0, [sp, #8]
  41a598:	ldr	w1, [sp, #12]
  41a59c:	neg	w0, w0
  41a5a0:	ror	w0, w1, w0
  41a5a4:	add	sp, sp, #0x10
  41a5a8:	ret
  41a5ac:	sub	sp, sp, #0x10
  41a5b0:	str	w0, [sp, #12]
  41a5b4:	str	w1, [sp, #8]
  41a5b8:	ldr	w0, [sp, #8]
  41a5bc:	ldr	w1, [sp, #12]
  41a5c0:	ror	w0, w1, w0
  41a5c4:	add	sp, sp, #0x10
  41a5c8:	ret
  41a5cc:	sub	sp, sp, #0x10
  41a5d0:	str	x0, [sp, #8]
  41a5d4:	str	w1, [sp, #4]
  41a5d8:	ldr	w0, [sp, #4]
  41a5dc:	ldr	x1, [sp, #8]
  41a5e0:	lsl	x1, x1, x0
  41a5e4:	ldr	w0, [sp, #4]
  41a5e8:	mov	w2, #0x40                  	// #64
  41a5ec:	sub	w0, w2, w0
  41a5f0:	ldr	x2, [sp, #8]
  41a5f4:	lsr	x0, x2, x0
  41a5f8:	orr	x0, x1, x0
  41a5fc:	add	sp, sp, #0x10
  41a600:	ret
  41a604:	sub	sp, sp, #0x10
  41a608:	str	x0, [sp, #8]
  41a60c:	str	w1, [sp, #4]
  41a610:	ldr	w0, [sp, #4]
  41a614:	ldr	x1, [sp, #8]
  41a618:	lsr	x1, x1, x0
  41a61c:	ldr	w0, [sp, #4]
  41a620:	mov	w2, #0x40                  	// #64
  41a624:	sub	w0, w2, w0
  41a628:	ldr	x2, [sp, #8]
  41a62c:	lsl	x0, x2, x0
  41a630:	orr	x0, x1, x0
  41a634:	add	sp, sp, #0x10
  41a638:	ret
  41a63c:	sub	sp, sp, #0x10
  41a640:	strh	w0, [sp, #14]
  41a644:	str	w1, [sp, #8]
  41a648:	ldrh	w1, [sp, #14]
  41a64c:	ldr	w0, [sp, #8]
  41a650:	lsl	w0, w1, w0
  41a654:	sxth	w1, w0
  41a658:	ldrh	w2, [sp, #14]
  41a65c:	mov	w3, #0x10                  	// #16
  41a660:	ldr	w0, [sp, #8]
  41a664:	sub	w0, w3, w0
  41a668:	asr	w0, w2, w0
  41a66c:	sxth	w0, w0
  41a670:	orr	w0, w1, w0
  41a674:	sxth	w0, w0
  41a678:	and	w0, w0, #0xffff
  41a67c:	add	sp, sp, #0x10
  41a680:	ret
  41a684:	sub	sp, sp, #0x10
  41a688:	strh	w0, [sp, #14]
  41a68c:	str	w1, [sp, #8]
  41a690:	ldrh	w1, [sp, #14]
  41a694:	ldr	w0, [sp, #8]
  41a698:	asr	w0, w1, w0
  41a69c:	sxth	w1, w0
  41a6a0:	ldrh	w2, [sp, #14]
  41a6a4:	mov	w3, #0x10                  	// #16
  41a6a8:	ldr	w0, [sp, #8]
  41a6ac:	sub	w0, w3, w0
  41a6b0:	lsl	w0, w2, w0
  41a6b4:	sxth	w0, w0
  41a6b8:	orr	w0, w1, w0
  41a6bc:	sxth	w0, w0
  41a6c0:	and	w0, w0, #0xffff
  41a6c4:	add	sp, sp, #0x10
  41a6c8:	ret
  41a6cc:	sub	sp, sp, #0x10
  41a6d0:	strb	w0, [sp, #15]
  41a6d4:	str	w1, [sp, #8]
  41a6d8:	ldrb	w1, [sp, #15]
  41a6dc:	ldr	w0, [sp, #8]
  41a6e0:	lsl	w0, w1, w0
  41a6e4:	sxtb	w1, w0
  41a6e8:	ldrb	w2, [sp, #15]
  41a6ec:	mov	w3, #0x8                   	// #8
  41a6f0:	ldr	w0, [sp, #8]
  41a6f4:	sub	w0, w3, w0
  41a6f8:	asr	w0, w2, w0
  41a6fc:	sxtb	w0, w0
  41a700:	orr	w0, w1, w0
  41a704:	sxtb	w0, w0
  41a708:	and	w0, w0, #0xff
  41a70c:	add	sp, sp, #0x10
  41a710:	ret
  41a714:	sub	sp, sp, #0x10
  41a718:	strb	w0, [sp, #15]
  41a71c:	str	w1, [sp, #8]
  41a720:	ldrb	w1, [sp, #15]
  41a724:	ldr	w0, [sp, #8]
  41a728:	asr	w0, w1, w0
  41a72c:	sxtb	w1, w0
  41a730:	ldrb	w2, [sp, #15]
  41a734:	mov	w3, #0x8                   	// #8
  41a738:	ldr	w0, [sp, #8]
  41a73c:	sub	w0, w3, w0
  41a740:	lsl	w0, w2, w0
  41a744:	sxtb	w0, w0
  41a748:	orr	w0, w1, w0
  41a74c:	sxtb	w0, w0
  41a750:	and	w0, w0, #0xff
  41a754:	add	sp, sp, #0x10
  41a758:	ret
  41a75c:	sub	sp, sp, #0x10
  41a760:	str	w0, [sp, #12]
  41a764:	ldr	w0, [sp, #12]
  41a768:	cmp	w0, #0x7a
  41a76c:	b.gt	41a7b0 <_obstack_memory_used@@Base+0x314>
  41a770:	ldr	w0, [sp, #12]
  41a774:	cmp	w0, #0x61
  41a778:	b.ge	41a7a8 <_obstack_memory_used@@Base+0x30c>  // b.tcont
  41a77c:	ldr	w0, [sp, #12]
  41a780:	cmp	w0, #0x39
  41a784:	b.gt	41a798 <_obstack_memory_used@@Base+0x2fc>
  41a788:	ldr	w0, [sp, #12]
  41a78c:	cmp	w0, #0x30
  41a790:	b.ge	41a7a8 <_obstack_memory_used@@Base+0x30c>  // b.tcont
  41a794:	b	41a7b0 <_obstack_memory_used@@Base+0x314>
  41a798:	ldr	w0, [sp, #12]
  41a79c:	sub	w0, w0, #0x41
  41a7a0:	cmp	w0, #0x19
  41a7a4:	b.hi	41a7b0 <_obstack_memory_used@@Base+0x314>  // b.pmore
  41a7a8:	mov	w0, #0x1                   	// #1
  41a7ac:	b	41a7b4 <_obstack_memory_used@@Base+0x318>
  41a7b0:	mov	w0, #0x0                   	// #0
  41a7b4:	add	sp, sp, #0x10
  41a7b8:	ret
  41a7bc:	sub	sp, sp, #0x10
  41a7c0:	str	w0, [sp, #12]
  41a7c4:	ldr	w0, [sp, #12]
  41a7c8:	cmp	w0, #0x5a
  41a7cc:	b.gt	41a7e0 <_obstack_memory_used@@Base+0x344>
  41a7d0:	ldr	w0, [sp, #12]
  41a7d4:	cmp	w0, #0x41
  41a7d8:	b.ge	41a7f0 <_obstack_memory_used@@Base+0x354>  // b.tcont
  41a7dc:	b	41a7f8 <_obstack_memory_used@@Base+0x35c>
  41a7e0:	ldr	w0, [sp, #12]
  41a7e4:	sub	w0, w0, #0x61
  41a7e8:	cmp	w0, #0x19
  41a7ec:	b.hi	41a7f8 <_obstack_memory_used@@Base+0x35c>  // b.pmore
  41a7f0:	mov	w0, #0x1                   	// #1
  41a7f4:	b	41a7fc <_obstack_memory_used@@Base+0x360>
  41a7f8:	mov	w0, #0x0                   	// #0
  41a7fc:	add	sp, sp, #0x10
  41a800:	ret
  41a804:	sub	sp, sp, #0x10
  41a808:	str	w0, [sp, #12]
  41a80c:	ldr	w0, [sp, #12]
  41a810:	cmp	w0, #0x7f
  41a814:	b.hi	41a820 <_obstack_memory_used@@Base+0x384>  // b.pmore
  41a818:	mov	w0, #0x1                   	// #1
  41a81c:	b	41a824 <_obstack_memory_used@@Base+0x388>
  41a820:	mov	w0, #0x0                   	// #0
  41a824:	add	sp, sp, #0x10
  41a828:	ret
  41a82c:	sub	sp, sp, #0x10
  41a830:	str	w0, [sp, #12]
  41a834:	ldr	w0, [sp, #12]
  41a838:	cmp	w0, #0x20
  41a83c:	b.eq	41a84c <_obstack_memory_used@@Base+0x3b0>  // b.none
  41a840:	ldr	w0, [sp, #12]
  41a844:	cmp	w0, #0x9
  41a848:	b.ne	41a854 <_obstack_memory_used@@Base+0x3b8>  // b.any
  41a84c:	mov	w0, #0x1                   	// #1
  41a850:	b	41a858 <_obstack_memory_used@@Base+0x3bc>
  41a854:	mov	w0, #0x0                   	// #0
  41a858:	and	w0, w0, #0x1
  41a85c:	and	w0, w0, #0xff
  41a860:	add	sp, sp, #0x10
  41a864:	ret
  41a868:	sub	sp, sp, #0x10
  41a86c:	str	w0, [sp, #12]
  41a870:	ldr	w0, [sp, #12]
  41a874:	cmp	w0, #0x1f
  41a878:	b.gt	41a88c <_obstack_memory_used@@Base+0x3f0>
  41a87c:	ldr	w0, [sp, #12]
  41a880:	cmp	w0, #0x0
  41a884:	b.ge	41a898 <_obstack_memory_used@@Base+0x3fc>  // b.tcont
  41a888:	b	41a8a0 <_obstack_memory_used@@Base+0x404>
  41a88c:	ldr	w0, [sp, #12]
  41a890:	cmp	w0, #0x7f
  41a894:	b.ne	41a8a0 <_obstack_memory_used@@Base+0x404>  // b.any
  41a898:	mov	w0, #0x1                   	// #1
  41a89c:	b	41a8a4 <_obstack_memory_used@@Base+0x408>
  41a8a0:	mov	w0, #0x0                   	// #0
  41a8a4:	add	sp, sp, #0x10
  41a8a8:	ret
  41a8ac:	sub	sp, sp, #0x10
  41a8b0:	str	w0, [sp, #12]
  41a8b4:	ldr	w0, [sp, #12]
  41a8b8:	sub	w0, w0, #0x30
  41a8bc:	cmp	w0, #0x9
  41a8c0:	b.hi	41a8cc <_obstack_memory_used@@Base+0x430>  // b.pmore
  41a8c4:	mov	w0, #0x1                   	// #1
  41a8c8:	b	41a8d0 <_obstack_memory_used@@Base+0x434>
  41a8cc:	mov	w0, #0x0                   	// #0
  41a8d0:	add	sp, sp, #0x10
  41a8d4:	ret
  41a8d8:	sub	sp, sp, #0x10
  41a8dc:	str	w0, [sp, #12]
  41a8e0:	ldr	w0, [sp, #12]
  41a8e4:	sub	w0, w0, #0x21
  41a8e8:	cmp	w0, #0x5d
  41a8ec:	b.hi	41a8f8 <_obstack_memory_used@@Base+0x45c>  // b.pmore
  41a8f0:	mov	w0, #0x1                   	// #1
  41a8f4:	b	41a8fc <_obstack_memory_used@@Base+0x460>
  41a8f8:	mov	w0, #0x0                   	// #0
  41a8fc:	add	sp, sp, #0x10
  41a900:	ret
  41a904:	sub	sp, sp, #0x10
  41a908:	str	w0, [sp, #12]
  41a90c:	ldr	w0, [sp, #12]
  41a910:	sub	w0, w0, #0x61
  41a914:	cmp	w0, #0x19
  41a918:	b.hi	41a924 <_obstack_memory_used@@Base+0x488>  // b.pmore
  41a91c:	mov	w0, #0x1                   	// #1
  41a920:	b	41a928 <_obstack_memory_used@@Base+0x48c>
  41a924:	mov	w0, #0x0                   	// #0
  41a928:	add	sp, sp, #0x10
  41a92c:	ret
  41a930:	sub	sp, sp, #0x10
  41a934:	str	w0, [sp, #12]
  41a938:	ldr	w0, [sp, #12]
  41a93c:	sub	w0, w0, #0x20
  41a940:	cmp	w0, #0x5e
  41a944:	b.hi	41a950 <_obstack_memory_used@@Base+0x4b4>  // b.pmore
  41a948:	mov	w0, #0x1                   	// #1
  41a94c:	b	41a954 <_obstack_memory_used@@Base+0x4b8>
  41a950:	mov	w0, #0x0                   	// #0
  41a954:	add	sp, sp, #0x10
  41a958:	ret
  41a95c:	sub	sp, sp, #0x10
  41a960:	str	w0, [sp, #12]
  41a964:	ldr	w0, [sp, #12]
  41a968:	cmp	w0, #0x7e
  41a96c:	b.gt	41a9c8 <_obstack_memory_used@@Base+0x52c>
  41a970:	ldr	w0, [sp, #12]
  41a974:	cmp	w0, #0x7b
  41a978:	b.ge	41a9c0 <_obstack_memory_used@@Base+0x524>  // b.tcont
  41a97c:	ldr	w0, [sp, #12]
  41a980:	cmp	w0, #0x60
  41a984:	b.gt	41a9c8 <_obstack_memory_used@@Base+0x52c>
  41a988:	ldr	w0, [sp, #12]
  41a98c:	cmp	w0, #0x5b
  41a990:	b.ge	41a9c0 <_obstack_memory_used@@Base+0x524>  // b.tcont
  41a994:	ldr	w0, [sp, #12]
  41a998:	cmp	w0, #0x2f
  41a99c:	b.gt	41a9b0 <_obstack_memory_used@@Base+0x514>
  41a9a0:	ldr	w0, [sp, #12]
  41a9a4:	cmp	w0, #0x21
  41a9a8:	b.ge	41a9c0 <_obstack_memory_used@@Base+0x524>  // b.tcont
  41a9ac:	b	41a9c8 <_obstack_memory_used@@Base+0x52c>
  41a9b0:	ldr	w0, [sp, #12]
  41a9b4:	sub	w0, w0, #0x3a
  41a9b8:	cmp	w0, #0x6
  41a9bc:	b.hi	41a9c8 <_obstack_memory_used@@Base+0x52c>  // b.pmore
  41a9c0:	mov	w0, #0x1                   	// #1
  41a9c4:	b	41a9cc <_obstack_memory_used@@Base+0x530>
  41a9c8:	mov	w0, #0x0                   	// #0
  41a9cc:	add	sp, sp, #0x10
  41a9d0:	ret
  41a9d4:	sub	sp, sp, #0x10
  41a9d8:	str	w0, [sp, #12]
  41a9dc:	ldr	w0, [sp, #12]
  41a9e0:	cmp	w0, #0xd
  41a9e4:	b.gt	41a9f8 <_obstack_memory_used@@Base+0x55c>
  41a9e8:	ldr	w0, [sp, #12]
  41a9ec:	cmp	w0, #0x9
  41a9f0:	b.ge	41aa04 <_obstack_memory_used@@Base+0x568>  // b.tcont
  41a9f4:	b	41aa0c <_obstack_memory_used@@Base+0x570>
  41a9f8:	ldr	w0, [sp, #12]
  41a9fc:	cmp	w0, #0x20
  41aa00:	b.ne	41aa0c <_obstack_memory_used@@Base+0x570>  // b.any
  41aa04:	mov	w0, #0x1                   	// #1
  41aa08:	b	41aa10 <_obstack_memory_used@@Base+0x574>
  41aa0c:	mov	w0, #0x0                   	// #0
  41aa10:	add	sp, sp, #0x10
  41aa14:	ret
  41aa18:	sub	sp, sp, #0x10
  41aa1c:	str	w0, [sp, #12]
  41aa20:	ldr	w0, [sp, #12]
  41aa24:	sub	w0, w0, #0x41
  41aa28:	cmp	w0, #0x19
  41aa2c:	b.hi	41aa38 <_obstack_memory_used@@Base+0x59c>  // b.pmore
  41aa30:	mov	w0, #0x1                   	// #1
  41aa34:	b	41aa3c <_obstack_memory_used@@Base+0x5a0>
  41aa38:	mov	w0, #0x0                   	// #0
  41aa3c:	add	sp, sp, #0x10
  41aa40:	ret
  41aa44:	sub	sp, sp, #0x10
  41aa48:	str	w0, [sp, #12]
  41aa4c:	ldr	w0, [sp, #12]
  41aa50:	sub	w0, w0, #0x30
  41aa54:	cmp	w0, #0x36
  41aa58:	cset	w1, hi  // hi = pmore
  41aa5c:	and	w1, w1, #0xff
  41aa60:	cmp	w1, #0x0
  41aa64:	b.ne	41aa98 <_obstack_memory_used@@Base+0x5fc>  // b.any
  41aa68:	mov	x1, #0x1                   	// #1
  41aa6c:	lsl	x1, x1, x0
  41aa70:	mov	x0, #0x7e0000007e0000      	// #35465847073800192
  41aa74:	movk	x0, #0x3ff
  41aa78:	and	x0, x1, x0
  41aa7c:	cmp	x0, #0x0
  41aa80:	cset	w0, ne  // ne = any
  41aa84:	and	w0, w0, #0xff
  41aa88:	cmp	w0, #0x0
  41aa8c:	b.eq	41aa98 <_obstack_memory_used@@Base+0x5fc>  // b.none
  41aa90:	mov	w0, #0x1                   	// #1
  41aa94:	b	41aa9c <_obstack_memory_used@@Base+0x600>
  41aa98:	mov	w0, #0x0                   	// #0
  41aa9c:	add	sp, sp, #0x10
  41aaa0:	ret
  41aaa4:	sub	sp, sp, #0x10
  41aaa8:	str	w0, [sp, #12]
  41aaac:	ldr	w0, [sp, #12]
  41aab0:	sub	w0, w0, #0x41
  41aab4:	cmp	w0, #0x19
  41aab8:	b.hi	41aac8 <_obstack_memory_used@@Base+0x62c>  // b.pmore
  41aabc:	ldr	w0, [sp, #12]
  41aac0:	add	w0, w0, #0x20
  41aac4:	b	41aacc <_obstack_memory_used@@Base+0x630>
  41aac8:	ldr	w0, [sp, #12]
  41aacc:	add	sp, sp, #0x10
  41aad0:	ret
  41aad4:	sub	sp, sp, #0x10
  41aad8:	str	w0, [sp, #12]
  41aadc:	ldr	w0, [sp, #12]
  41aae0:	sub	w0, w0, #0x61
  41aae4:	cmp	w0, #0x19
  41aae8:	b.hi	41aaf8 <_obstack_memory_used@@Base+0x65c>  // b.pmore
  41aaec:	ldr	w0, [sp, #12]
  41aaf0:	sub	w0, w0, #0x20
  41aaf4:	b	41aafc <_obstack_memory_used@@Base+0x660>
  41aaf8:	ldr	w0, [sp, #12]
  41aafc:	add	sp, sp, #0x10
  41ab00:	ret
  41ab04:	stp	x29, x30, [sp, #-64]!
  41ab08:	mov	x29, sp
  41ab0c:	stp	x19, x20, [sp, #16]
  41ab10:	str	x0, [sp, #40]
  41ab14:	str	x1, [sp, #32]
  41ab18:	ldr	x20, [sp, #40]
  41ab1c:	ldr	x19, [sp, #32]
  41ab20:	cmp	x20, x19
  41ab24:	b.ne	41ab30 <_obstack_memory_used@@Base+0x694>  // b.any
  41ab28:	mov	w0, #0x0                   	// #0
  41ab2c:	b	41ab80 <_obstack_memory_used@@Base+0x6e4>
  41ab30:	ldrb	w0, [x20]
  41ab34:	bl	41aaa4 <_obstack_memory_used@@Base+0x608>
  41ab38:	strb	w0, [sp, #63]
  41ab3c:	ldrb	w0, [x19]
  41ab40:	bl	41aaa4 <_obstack_memory_used@@Base+0x608>
  41ab44:	strb	w0, [sp, #62]
  41ab48:	ldrb	w0, [sp, #63]
  41ab4c:	cmp	w0, #0x0
  41ab50:	b.eq	41ab70 <_obstack_memory_used@@Base+0x6d4>  // b.none
  41ab54:	add	x20, x20, #0x1
  41ab58:	add	x19, x19, #0x1
  41ab5c:	ldrb	w1, [sp, #63]
  41ab60:	ldrb	w0, [sp, #62]
  41ab64:	cmp	w1, w0
  41ab68:	b.eq	41ab30 <_obstack_memory_used@@Base+0x694>  // b.none
  41ab6c:	b	41ab74 <_obstack_memory_used@@Base+0x6d8>
  41ab70:	nop
  41ab74:	ldrb	w1, [sp, #63]
  41ab78:	ldrb	w0, [sp, #62]
  41ab7c:	sub	w0, w1, w0
  41ab80:	ldp	x19, x20, [sp, #16]
  41ab84:	ldp	x29, x30, [sp], #64
  41ab88:	ret
  41ab8c:	stp	x29, x30, [sp, #-48]!
  41ab90:	mov	x29, sp
  41ab94:	str	x0, [sp, #24]
  41ab98:	ldr	x0, [sp, #24]
  41ab9c:	bl	4029e0 <__fpending@plt>
  41aba0:	cmp	x0, #0x0
  41aba4:	cset	w0, ne  // ne = any
  41aba8:	strb	w0, [sp, #47]
  41abac:	ldr	x0, [sp, #24]
  41abb0:	bl	402940 <ferror_unlocked@plt>
  41abb4:	cmp	w0, #0x0
  41abb8:	cset	w0, ne  // ne = any
  41abbc:	strb	w0, [sp, #46]
  41abc0:	ldr	x0, [sp, #24]
  41abc4:	bl	4195f0 <ferror@plt+0x165f0>
  41abc8:	cmp	w0, #0x0
  41abcc:	cset	w0, ne  // ne = any
  41abd0:	strb	w0, [sp, #45]
  41abd4:	ldrb	w0, [sp, #46]
  41abd8:	cmp	w0, #0x0
  41abdc:	b.ne	41ac08 <_obstack_memory_used@@Base+0x76c>  // b.any
  41abe0:	ldrb	w0, [sp, #45]
  41abe4:	cmp	w0, #0x0
  41abe8:	b.eq	41ac2c <_obstack_memory_used@@Base+0x790>  // b.none
  41abec:	ldrb	w0, [sp, #47]
  41abf0:	cmp	w0, #0x0
  41abf4:	b.ne	41ac08 <_obstack_memory_used@@Base+0x76c>  // b.any
  41abf8:	bl	402f50 <__errno_location@plt>
  41abfc:	ldr	w0, [x0]
  41ac00:	cmp	w0, #0x9
  41ac04:	b.eq	41ac2c <_obstack_memory_used@@Base+0x790>  // b.none
  41ac08:	ldrb	w0, [sp, #45]
  41ac0c:	eor	w0, w0, #0x1
  41ac10:	and	w0, w0, #0xff
  41ac14:	cmp	w0, #0x0
  41ac18:	b.eq	41ac24 <_obstack_memory_used@@Base+0x788>  // b.none
  41ac1c:	bl	402f50 <__errno_location@plt>
  41ac20:	str	wzr, [x0]
  41ac24:	mov	w0, #0xffffffff            	// #-1
  41ac28:	b	41ac30 <_obstack_memory_used@@Base+0x794>
  41ac2c:	mov	w0, #0x0                   	// #0
  41ac30:	ldp	x29, x30, [sp], #48
  41ac34:	ret
  41ac38:	stp	x29, x30, [sp, #-64]!
  41ac3c:	mov	x29, sp
  41ac40:	str	d0, [sp, #24]
  41ac44:	ldr	d0, [sp, #24]
  41ac48:	mov	x0, #0xc3e0000000000000    	// #-4332462841530417152
  41ac4c:	fmov	d1, x0
  41ac50:	fcmpe	d0, d1
  41ac54:	cset	w0, gt
  41ac58:	and	w0, w0, #0xff
  41ac5c:	eor	w0, w0, #0x1
  41ac60:	and	w0, w0, #0xff
  41ac64:	cmp	w0, #0x0
  41ac68:	b.eq	41ac7c <_obstack_memory_used@@Base+0x7e0>  // b.none
  41ac6c:	mov	x1, #0x0                   	// #0
  41ac70:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41ac74:	bl	41b228 <_obstack_memory_used@@Base+0xd8c>
  41ac78:	b	41adbc <_obstack_memory_used@@Base+0x920>
  41ac7c:	ldr	d0, [sp, #24]
  41ac80:	mov	x0, #0x43e0000000000000    	// #4890909195324358656
  41ac84:	fmov	d1, x0
  41ac88:	fcmpe	d0, d1
  41ac8c:	cset	w0, mi  // mi = first
  41ac90:	and	w0, w0, #0xff
  41ac94:	eor	w0, w0, #0x1
  41ac98:	and	w0, w0, #0xff
  41ac9c:	cmp	w0, #0x0
  41aca0:	b.eq	41acb8 <_obstack_memory_used@@Base+0x81c>  // b.none
  41aca4:	mov	x1, #0xc9ff                	// #51711
  41aca8:	movk	x1, #0x3b9a, lsl #16
  41acac:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  41acb0:	bl	41b228 <_obstack_memory_used@@Base+0xd8c>
  41acb4:	b	41adbc <_obstack_memory_used@@Base+0x920>
  41acb8:	ldr	d0, [sp, #24]
  41acbc:	fcvtzs	d0, d0
  41acc0:	str	d0, [sp, #56]
  41acc4:	ldr	d0, [sp, #56]
  41acc8:	scvtf	d0, d0
  41accc:	ldr	d1, [sp, #24]
  41acd0:	fsub	d0, d1, d0
  41acd4:	mov	x0, #0xcd6500000000        	// #225833675390976
  41acd8:	movk	x0, #0x41cd, lsl #48
  41acdc:	fmov	d1, x0
  41ace0:	fmul	d0, d0, d1
  41ace4:	str	d0, [sp, #40]
  41ace8:	ldr	d0, [sp, #40]
  41acec:	fcvtzs	d0, d0
  41acf0:	str	d0, [sp, #48]
  41acf4:	ldr	d0, [sp, #48]
  41acf8:	scvtf	d0, d0
  41acfc:	ldr	d1, [sp, #40]
  41ad00:	fcmpe	d1, d0
  41ad04:	cset	w0, gt
  41ad08:	and	w0, w0, #0xff
  41ad0c:	and	x0, x0, #0xff
  41ad10:	ldr	x1, [sp, #48]
  41ad14:	add	x0, x1, x0
  41ad18:	str	x0, [sp, #48]
  41ad1c:	ldr	x0, [sp, #48]
  41ad20:	mov	x1, #0x94b3                	// #38067
  41ad24:	movk	x1, #0x26d6, lsl #16
  41ad28:	movk	x1, #0xbe8, lsl #32
  41ad2c:	movk	x1, #0x112e, lsl #48
  41ad30:	smulh	x1, x0, x1
  41ad34:	asr	x1, x1, #26
  41ad38:	asr	x0, x0, #63
  41ad3c:	sub	x0, x1, x0
  41ad40:	ldr	x1, [sp, #56]
  41ad44:	add	x0, x1, x0
  41ad48:	str	x0, [sp, #56]
  41ad4c:	ldr	x0, [sp, #48]
  41ad50:	mov	x1, #0x94b3                	// #38067
  41ad54:	movk	x1, #0x26d6, lsl #16
  41ad58:	movk	x1, #0xbe8, lsl #32
  41ad5c:	movk	x1, #0x112e, lsl #48
  41ad60:	smulh	x1, x0, x1
  41ad64:	asr	x2, x1, #26
  41ad68:	asr	x1, x0, #63
  41ad6c:	sub	x2, x2, x1
  41ad70:	mov	x1, #0xca00                	// #51712
  41ad74:	movk	x1, #0x3b9a, lsl #16
  41ad78:	mul	x1, x2, x1
  41ad7c:	sub	x0, x0, x1
  41ad80:	str	x0, [sp, #48]
  41ad84:	ldr	x0, [sp, #48]
  41ad88:	cmp	x0, #0x0
  41ad8c:	b.ge	41adb0 <_obstack_memory_used@@Base+0x914>  // b.tcont
  41ad90:	ldr	x0, [sp, #56]
  41ad94:	sub	x0, x0, #0x1
  41ad98:	str	x0, [sp, #56]
  41ad9c:	ldr	x1, [sp, #48]
  41ada0:	mov	x0, #0xca00                	// #51712
  41ada4:	movk	x0, #0x3b9a, lsl #16
  41ada8:	add	x0, x1, x0
  41adac:	str	x0, [sp, #48]
  41adb0:	ldr	x1, [sp, #48]
  41adb4:	ldr	x0, [sp, #56]
  41adb8:	bl	41b228 <_obstack_memory_used@@Base+0xd8c>
  41adbc:	ldp	x29, x30, [sp], #64
  41adc0:	ret
  41adc4:	stp	x29, x30, [sp, #-48]!
  41adc8:	mov	x29, sp
  41adcc:	str	w0, [sp, #28]
  41add0:	str	w1, [sp, #24]
  41add4:	ldr	w0, [sp, #28]
  41add8:	cmp	w0, #0x0
  41addc:	b.lt	41ae28 <_obstack_memory_used@@Base+0x98c>  // b.tstop
  41ade0:	ldr	w0, [sp, #28]
  41ade4:	cmp	w0, #0x2
  41ade8:	b.gt	41ae28 <_obstack_memory_used@@Base+0x98c>
  41adec:	ldr	w1, [sp, #24]
  41adf0:	ldr	w0, [sp, #28]
  41adf4:	bl	41ae34 <_obstack_memory_used@@Base+0x998>
  41adf8:	str	w0, [sp, #44]
  41adfc:	bl	402f50 <__errno_location@plt>
  41ae00:	ldr	w0, [x0]
  41ae04:	str	w0, [sp, #40]
  41ae08:	ldr	w0, [sp, #28]
  41ae0c:	bl	402ba0 <close@plt>
  41ae10:	bl	402f50 <__errno_location@plt>
  41ae14:	mov	x1, x0
  41ae18:	ldr	w0, [sp, #40]
  41ae1c:	str	w0, [x1]
  41ae20:	ldr	w0, [sp, #44]
  41ae24:	str	w0, [sp, #28]
  41ae28:	ldr	w0, [sp, #28]
  41ae2c:	ldp	x29, x30, [sp], #48
  41ae30:	ret
  41ae34:	stp	x29, x30, [sp, #-32]!
  41ae38:	mov	x29, sp
  41ae3c:	str	w0, [sp, #28]
  41ae40:	str	w1, [sp, #24]
  41ae44:	ldr	w0, [sp, #24]
  41ae48:	and	w0, w0, #0x80000
  41ae4c:	cmp	w0, #0x0
  41ae50:	b.eq	41ae5c <_obstack_memory_used@@Base+0x9c0>  // b.none
  41ae54:	mov	w0, #0x406                 	// #1030
  41ae58:	b	41ae60 <_obstack_memory_used@@Base+0x9c4>
  41ae5c:	mov	w0, #0x0                   	// #0
  41ae60:	mov	w2, #0x3                   	// #3
  41ae64:	mov	w1, w0
  41ae68:	ldr	w0, [sp, #28]
  41ae6c:	bl	4196ac <ferror@plt+0x166ac>
  41ae70:	ldp	x29, x30, [sp], #32
  41ae74:	ret
  41ae78:	stp	x29, x30, [sp, #-64]!
  41ae7c:	mov	x29, sp
  41ae80:	str	x0, [sp, #24]
  41ae84:	str	x1, [sp, #16]
  41ae88:	ldr	x1, [sp, #16]
  41ae8c:	ldr	x0, [sp, #24]
  41ae90:	bl	402a70 <fopen@plt>
  41ae94:	str	x0, [sp, #56]
  41ae98:	ldr	x0, [sp, #56]
  41ae9c:	cmp	x0, #0x0
  41aea0:	b.eq	41af64 <_obstack_memory_used@@Base+0xac8>  // b.none
  41aea4:	ldr	x0, [sp, #56]
  41aea8:	bl	402a10 <fileno@plt>
  41aeac:	str	w0, [sp, #52]
  41aeb0:	ldr	w0, [sp, #52]
  41aeb4:	cmp	w0, #0x0
  41aeb8:	b.lt	41af64 <_obstack_memory_used@@Base+0xac8>  // b.tstop
  41aebc:	ldr	w0, [sp, #52]
  41aec0:	cmp	w0, #0x2
  41aec4:	b.gt	41af64 <_obstack_memory_used@@Base+0xac8>
  41aec8:	ldr	w0, [sp, #52]
  41aecc:	bl	41b360 <_obstack_memory_used@@Base+0xec4>
  41aed0:	str	w0, [sp, #48]
  41aed4:	ldr	w0, [sp, #48]
  41aed8:	cmp	w0, #0x0
  41aedc:	b.ge	41af0c <_obstack_memory_used@@Base+0xa70>  // b.tcont
  41aee0:	bl	402f50 <__errno_location@plt>
  41aee4:	ldr	w0, [x0]
  41aee8:	str	w0, [sp, #40]
  41aeec:	ldr	x0, [sp, #56]
  41aef0:	bl	4195f0 <ferror@plt+0x165f0>
  41aef4:	bl	402f50 <__errno_location@plt>
  41aef8:	mov	x1, x0
  41aefc:	ldr	w0, [sp, #40]
  41af00:	str	w0, [x1]
  41af04:	mov	x0, #0x0                   	// #0
  41af08:	b	41af68 <_obstack_memory_used@@Base+0xacc>
  41af0c:	ldr	x0, [sp, #56]
  41af10:	bl	4195f0 <ferror@plt+0x165f0>
  41af14:	cmp	w0, #0x0
  41af18:	b.ne	41af38 <_obstack_memory_used@@Base+0xa9c>  // b.any
  41af1c:	ldr	x1, [sp, #16]
  41af20:	ldr	w0, [sp, #48]
  41af24:	bl	402b40 <fdopen@plt>
  41af28:	str	x0, [sp, #56]
  41af2c:	ldr	x0, [sp, #56]
  41af30:	cmp	x0, #0x0
  41af34:	b.ne	41af64 <_obstack_memory_used@@Base+0xac8>  // b.any
  41af38:	bl	402f50 <__errno_location@plt>
  41af3c:	ldr	w0, [x0]
  41af40:	str	w0, [sp, #44]
  41af44:	ldr	w0, [sp, #48]
  41af48:	bl	402ba0 <close@plt>
  41af4c:	bl	402f50 <__errno_location@plt>
  41af50:	mov	x1, x0
  41af54:	ldr	w0, [sp, #44]
  41af58:	str	w0, [x1]
  41af5c:	mov	x0, #0x0                   	// #0
  41af60:	b	41af68 <_obstack_memory_used@@Base+0xacc>
  41af64:	ldr	x0, [sp, #56]
  41af68:	ldp	x29, x30, [sp], #64
  41af6c:	ret
  41af70:	stp	x29, x30, [sp, #-32]!
  41af74:	mov	x29, sp
  41af78:	mov	w0, #0xe                   	// #14
  41af7c:	bl	402a60 <nl_langinfo@plt>
  41af80:	str	x0, [sp, #24]
  41af84:	ldr	x0, [sp, #24]
  41af88:	cmp	x0, #0x0
  41af8c:	b.ne	41af9c <_obstack_memory_used@@Base+0xb00>  // b.any
  41af90:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  41af94:	add	x0, x0, #0xeb8
  41af98:	str	x0, [sp, #24]
  41af9c:	ldr	x0, [sp, #24]
  41afa0:	ldrb	w0, [x0]
  41afa4:	cmp	w0, #0x0
  41afa8:	b.ne	41afb8 <_obstack_memory_used@@Base+0xb1c>  // b.any
  41afac:	adrp	x0, 41e000 <_obstack_memory_used@@Base+0x3b64>
  41afb0:	add	x0, x0, #0xec0
  41afb4:	str	x0, [sp, #24]
  41afb8:	ldr	x0, [sp, #24]
  41afbc:	ldp	x29, x30, [sp], #32
  41afc0:	ret
  41afc4:	stp	x29, x30, [sp, #-80]!
  41afc8:	mov	x29, sp
  41afcc:	str	x0, [sp, #40]
  41afd0:	str	x1, [sp, #32]
  41afd4:	str	x2, [sp, #24]
  41afd8:	str	x3, [sp, #16]
  41afdc:	b	41b078 <_obstack_memory_used@@Base+0xbdc>
  41afe0:	ldr	x0, [sp, #40]
  41afe4:	bl	4028f0 <strlen@plt>
  41afe8:	add	x0, x0, #0x1
  41afec:	str	x0, [sp, #64]
  41aff0:	ldr	x0, [sp, #24]
  41aff4:	bl	4028f0 <strlen@plt>
  41aff8:	add	x0, x0, #0x1
  41affc:	str	x0, [sp, #56]
  41b000:	ldr	x1, [sp, #40]
  41b004:	ldr	x0, [sp, #64]
  41b008:	add	x0, x1, x0
  41b00c:	str	x0, [sp, #40]
  41b010:	ldr	x1, [sp, #24]
  41b014:	ldr	x0, [sp, #56]
  41b018:	add	x0, x1, x0
  41b01c:	str	x0, [sp, #24]
  41b020:	ldr	x1, [sp, #32]
  41b024:	ldr	x0, [sp, #64]
  41b028:	sub	x0, x1, x0
  41b02c:	str	x0, [sp, #32]
  41b030:	ldr	x1, [sp, #16]
  41b034:	ldr	x0, [sp, #56]
  41b038:	sub	x0, x1, x0
  41b03c:	str	x0, [sp, #16]
  41b040:	ldr	x0, [sp, #32]
  41b044:	cmp	x0, #0x0
  41b048:	b.ne	41b064 <_obstack_memory_used@@Base+0xbc8>  // b.any
  41b04c:	ldr	x0, [sp, #16]
  41b050:	cmp	x0, #0x0
  41b054:	cset	w0, ne  // ne = any
  41b058:	and	w0, w0, #0xff
  41b05c:	neg	w0, w0
  41b060:	b	41b0c4 <_obstack_memory_used@@Base+0xc28>
  41b064:	ldr	x0, [sp, #16]
  41b068:	cmp	x0, #0x0
  41b06c:	b.ne	41b078 <_obstack_memory_used@@Base+0xbdc>  // b.any
  41b070:	mov	w0, #0x1                   	// #1
  41b074:	b	41b0c4 <_obstack_memory_used@@Base+0xc28>
  41b078:	bl	402f50 <__errno_location@plt>
  41b07c:	str	wzr, [x0]
  41b080:	ldr	x1, [sp, #24]
  41b084:	ldr	x0, [sp, #40]
  41b088:	bl	402ec0 <strcoll@plt>
  41b08c:	str	w0, [sp, #76]
  41b090:	ldr	w0, [sp, #76]
  41b094:	cmp	w0, #0x0
  41b098:	b.ne	41b0ac <_obstack_memory_used@@Base+0xc10>  // b.any
  41b09c:	bl	402f50 <__errno_location@plt>
  41b0a0:	ldr	w0, [x0]
  41b0a4:	cmp	w0, #0x0
  41b0a8:	b.eq	41b0b4 <_obstack_memory_used@@Base+0xc18>  // b.none
  41b0ac:	mov	w0, #0x1                   	// #1
  41b0b0:	b	41b0b8 <_obstack_memory_used@@Base+0xc1c>
  41b0b4:	mov	w0, #0x0                   	// #0
  41b0b8:	cmp	w0, #0x0
  41b0bc:	b.eq	41afe0 <_obstack_memory_used@@Base+0xb44>  // b.none
  41b0c0:	ldr	w0, [sp, #76]
  41b0c4:	ldp	x29, x30, [sp], #80
  41b0c8:	ret
  41b0cc:	stp	x29, x30, [sp, #-64]!
  41b0d0:	mov	x29, sp
  41b0d4:	str	x0, [sp, #40]
  41b0d8:	str	x1, [sp, #32]
  41b0dc:	str	x2, [sp, #24]
  41b0e0:	str	x3, [sp, #16]
  41b0e4:	ldr	x1, [sp, #32]
  41b0e8:	ldr	x0, [sp, #16]
  41b0ec:	cmp	x1, x0
  41b0f0:	b.ne	41b11c <_obstack_memory_used@@Base+0xc80>  // b.any
  41b0f4:	ldr	x2, [sp, #32]
  41b0f8:	ldr	x1, [sp, #24]
  41b0fc:	ldr	x0, [sp, #40]
  41b100:	bl	402c90 <memcmp@plt>
  41b104:	cmp	w0, #0x0
  41b108:	b.ne	41b11c <_obstack_memory_used@@Base+0xc80>  // b.any
  41b10c:	bl	402f50 <__errno_location@plt>
  41b110:	str	wzr, [x0]
  41b114:	str	wzr, [sp, #60]
  41b118:	b	41b1b0 <_obstack_memory_used@@Base+0xd14>
  41b11c:	ldr	x1, [sp, #40]
  41b120:	ldr	x0, [sp, #32]
  41b124:	add	x0, x1, x0
  41b128:	ldrb	w0, [x0]
  41b12c:	strb	w0, [sp, #59]
  41b130:	ldr	x1, [sp, #24]
  41b134:	ldr	x0, [sp, #16]
  41b138:	add	x0, x1, x0
  41b13c:	ldrb	w0, [x0]
  41b140:	strb	w0, [sp, #58]
  41b144:	ldr	x1, [sp, #40]
  41b148:	ldr	x0, [sp, #32]
  41b14c:	add	x0, x1, x0
  41b150:	strb	wzr, [x0]
  41b154:	ldr	x1, [sp, #24]
  41b158:	ldr	x0, [sp, #16]
  41b15c:	add	x0, x1, x0
  41b160:	strb	wzr, [x0]
  41b164:	ldr	x0, [sp, #32]
  41b168:	add	x1, x0, #0x1
  41b16c:	ldr	x0, [sp, #16]
  41b170:	add	x0, x0, #0x1
  41b174:	mov	x3, x0
  41b178:	ldr	x2, [sp, #24]
  41b17c:	ldr	x0, [sp, #40]
  41b180:	bl	41afc4 <_obstack_memory_used@@Base+0xb28>
  41b184:	str	w0, [sp, #60]
  41b188:	ldr	x1, [sp, #40]
  41b18c:	ldr	x0, [sp, #32]
  41b190:	add	x0, x1, x0
  41b194:	ldrb	w1, [sp, #59]
  41b198:	strb	w1, [x0]
  41b19c:	ldr	x1, [sp, #24]
  41b1a0:	ldr	x0, [sp, #16]
  41b1a4:	add	x0, x1, x0
  41b1a8:	ldrb	w1, [sp, #58]
  41b1ac:	strb	w1, [x0]
  41b1b0:	ldr	w0, [sp, #60]
  41b1b4:	ldp	x29, x30, [sp], #64
  41b1b8:	ret
  41b1bc:	stp	x29, x30, [sp, #-48]!
  41b1c0:	mov	x29, sp
  41b1c4:	str	x0, [sp, #40]
  41b1c8:	str	x1, [sp, #32]
  41b1cc:	str	x2, [sp, #24]
  41b1d0:	str	x3, [sp, #16]
  41b1d4:	ldr	x1, [sp, #32]
  41b1d8:	ldr	x0, [sp, #16]
  41b1dc:	cmp	x1, x0
  41b1e0:	b.ne	41b20c <_obstack_memory_used@@Base+0xd70>  // b.any
  41b1e4:	ldr	x2, [sp, #32]
  41b1e8:	ldr	x1, [sp, #24]
  41b1ec:	ldr	x0, [sp, #40]
  41b1f0:	bl	402c90 <memcmp@plt>
  41b1f4:	cmp	w0, #0x0
  41b1f8:	b.ne	41b20c <_obstack_memory_used@@Base+0xd70>  // b.any
  41b1fc:	bl	402f50 <__errno_location@plt>
  41b200:	str	wzr, [x0]
  41b204:	mov	w0, #0x0                   	// #0
  41b208:	b	41b220 <_obstack_memory_used@@Base+0xd84>
  41b20c:	ldr	x3, [sp, #16]
  41b210:	ldr	x2, [sp, #24]
  41b214:	ldr	x1, [sp, #32]
  41b218:	ldr	x0, [sp, #40]
  41b21c:	bl	41afc4 <_obstack_memory_used@@Base+0xb28>
  41b220:	ldp	x29, x30, [sp], #48
  41b224:	ret
  41b228:	sub	sp, sp, #0x20
  41b22c:	str	x0, [sp, #8]
  41b230:	str	x1, [sp]
  41b234:	ldr	x0, [sp, #8]
  41b238:	str	x0, [sp, #16]
  41b23c:	ldr	x0, [sp]
  41b240:	str	x0, [sp, #24]
  41b244:	ldp	x0, x1, [sp, #16]
  41b248:	add	sp, sp, #0x20
  41b24c:	ret
  41b250:	sub	sp, sp, #0x20
  41b254:	stp	x0, x1, [sp, #16]
  41b258:	stp	x2, x3, [sp]
  41b25c:	ldr	x1, [sp, #16]
  41b260:	ldr	x0, [sp]
  41b264:	cmp	x1, x0
  41b268:	b.ge	41b274 <_obstack_memory_used@@Base+0xdd8>  // b.tcont
  41b26c:	mov	w0, #0xffffffff            	// #-1
  41b270:	b	41b2dc <_obstack_memory_used@@Base+0xe40>
  41b274:	ldr	x1, [sp, #16]
  41b278:	ldr	x0, [sp]
  41b27c:	cmp	x1, x0
  41b280:	b.le	41b28c <_obstack_memory_used@@Base+0xdf0>
  41b284:	mov	w0, #0x1                   	// #1
  41b288:	b	41b2dc <_obstack_memory_used@@Base+0xe40>
  41b28c:	ldr	x0, [sp, #24]
  41b290:	cmn	x0, #0x1
  41b294:	b.lt	41b2ac <_obstack_memory_used@@Base+0xe10>  // b.tstop
  41b298:	ldr	x1, [sp, #24]
  41b29c:	mov	x0, #0x9400                	// #37888
  41b2a0:	movk	x0, #0x7735, lsl #16
  41b2a4:	cmp	x1, x0
  41b2a8:	b.le	41b2ac <_obstack_memory_used@@Base+0xe10>
  41b2ac:	ldr	x0, [sp, #8]
  41b2b0:	cmn	x0, #0x1
  41b2b4:	b.lt	41b2cc <_obstack_memory_used@@Base+0xe30>  // b.tstop
  41b2b8:	ldr	x1, [sp, #8]
  41b2bc:	mov	x0, #0x9400                	// #37888
  41b2c0:	movk	x0, #0x7735, lsl #16
  41b2c4:	cmp	x1, x0
  41b2c8:	b.le	41b2cc <_obstack_memory_used@@Base+0xe30>
  41b2cc:	ldr	x0, [sp, #24]
  41b2d0:	mov	w1, w0
  41b2d4:	ldr	x0, [sp, #8]
  41b2d8:	sub	w0, w1, w0
  41b2dc:	add	sp, sp, #0x20
  41b2e0:	ret
  41b2e4:	sub	sp, sp, #0x10
  41b2e8:	stp	x0, x1, [sp]
  41b2ec:	ldr	x0, [sp]
  41b2f0:	cmp	x0, #0x0
  41b2f4:	b.lt	41b320 <_obstack_memory_used@@Base+0xe84>  // b.tstop
  41b2f8:	ldr	x0, [sp]
  41b2fc:	cmp	x0, #0x0
  41b300:	b.ne	41b310 <_obstack_memory_used@@Base+0xe74>  // b.any
  41b304:	ldr	x0, [sp, #8]
  41b308:	cmp	x0, #0x0
  41b30c:	b.eq	41b318 <_obstack_memory_used@@Base+0xe7c>  // b.none
  41b310:	mov	w0, #0x1                   	// #1
  41b314:	b	41b324 <_obstack_memory_used@@Base+0xe88>
  41b318:	mov	w0, #0x0                   	// #0
  41b31c:	b	41b324 <_obstack_memory_used@@Base+0xe88>
  41b320:	mov	w0, #0xffffffff            	// #-1
  41b324:	add	sp, sp, #0x10
  41b328:	ret
  41b32c:	sub	sp, sp, #0x10
  41b330:	stp	x0, x1, [sp]
  41b334:	ldr	d0, [sp]
  41b338:	scvtf	d1, d0
  41b33c:	ldr	d0, [sp, #8]
  41b340:	scvtf	d0, d0
  41b344:	mov	x0, #0xcd6500000000        	// #225833675390976
  41b348:	movk	x0, #0x41cd, lsl #48
  41b34c:	fmov	d2, x0
  41b350:	fdiv	d0, d0, d2
  41b354:	fadd	d0, d1, d0
  41b358:	add	sp, sp, #0x10
  41b35c:	ret
  41b360:	stp	x29, x30, [sp, #-32]!
  41b364:	mov	x29, sp
  41b368:	str	w0, [sp, #28]
  41b36c:	mov	w2, #0x3                   	// #3
  41b370:	mov	w1, #0x0                   	// #0
  41b374:	ldr	w0, [sp, #28]
  41b378:	bl	4196ac <ferror@plt+0x166ac>
  41b37c:	ldp	x29, x30, [sp], #32
  41b380:	ret
  41b384:	stp	x29, x30, [sp, #-176]!
  41b388:	mov	x29, sp
  41b38c:	str	q0, [sp, #32]
  41b390:	str	q1, [sp, #16]
  41b394:	str	wzr, [sp, #160]
  41b398:	str	xzr, [sp, #152]
  41b39c:	mrs	x0, fpcr
  41b3a0:	str	x0, [sp, #152]
  41b3a4:	ldr	q0, [sp, #32]
  41b3a8:	str	q0, [sp, #64]
  41b3ac:	ldr	x0, [sp, #64]
  41b3b0:	str	x0, [sp, #144]
  41b3b4:	ldr	x0, [sp, #72]
  41b3b8:	ubfx	x0, x0, #0, #48
  41b3bc:	str	x0, [sp, #136]
  41b3c0:	ldrh	w0, [sp, #78]
  41b3c4:	ubfx	x0, x0, #0, #15
  41b3c8:	and	w0, w0, #0xffff
  41b3cc:	and	x0, x0, #0xffff
  41b3d0:	str	x0, [sp, #128]
  41b3d4:	ldrb	w0, [sp, #79]
  41b3d8:	ubfx	x0, x0, #7, #1
  41b3dc:	and	w0, w0, #0xff
  41b3e0:	and	x0, x0, #0xff
  41b3e4:	str	x0, [sp, #120]
  41b3e8:	ldr	q0, [sp, #16]
  41b3ec:	str	q0, [sp, #48]
  41b3f0:	ldr	x0, [sp, #48]
  41b3f4:	str	x0, [sp, #112]
  41b3f8:	ldr	x0, [sp, #56]
  41b3fc:	ubfx	x0, x0, #0, #48
  41b400:	str	x0, [sp, #104]
  41b404:	ldrh	w0, [sp, #62]
  41b408:	ubfx	x0, x0, #0, #15
  41b40c:	and	w0, w0, #0xffff
  41b410:	and	x0, x0, #0xffff
  41b414:	str	x0, [sp, #96]
  41b418:	ldrb	w0, [sp, #63]
  41b41c:	ubfx	x0, x0, #7, #1
  41b420:	and	w0, w0, #0xff
  41b424:	and	x0, x0, #0xff
  41b428:	str	x0, [sp, #88]
  41b42c:	ldr	x1, [sp, #128]
  41b430:	mov	x0, #0x7fff                	// #32767
  41b434:	cmp	x1, x0
  41b438:	b.ne	41b450 <_obstack_memory_used@@Base+0xfb4>  // b.any
  41b43c:	ldr	x1, [sp, #136]
  41b440:	ldr	x0, [sp, #144]
  41b444:	orr	x0, x1, x0
  41b448:	cmp	x0, #0x0
  41b44c:	b.ne	41b474 <_obstack_memory_used@@Base+0xfd8>  // b.any
  41b450:	ldr	x1, [sp, #96]
  41b454:	mov	x0, #0x7fff                	// #32767
  41b458:	cmp	x1, x0
  41b45c:	b.ne	41b524 <_obstack_memory_used@@Base+0x1088>  // b.any
  41b460:	ldr	x1, [sp, #104]
  41b464:	ldr	x0, [sp, #112]
  41b468:	orr	x0, x1, x0
  41b46c:	cmp	x0, #0x0
  41b470:	b.eq	41b524 <_obstack_memory_used@@Base+0x1088>  // b.none
  41b474:	mov	w0, #0x1                   	// #1
  41b478:	str	w0, [sp, #164]
  41b47c:	str	wzr, [sp, #168]
  41b480:	ldr	x1, [sp, #128]
  41b484:	mov	x0, #0x7fff                	// #32767
  41b488:	cmp	x1, x0
  41b48c:	b.ne	41b4bc <_obstack_memory_used@@Base+0x1020>  // b.any
  41b490:	ldr	x1, [sp, #136]
  41b494:	ldr	x0, [sp, #144]
  41b498:	orr	x0, x1, x0
  41b49c:	cmp	x0, #0x0
  41b4a0:	b.eq	41b4bc <_obstack_memory_used@@Base+0x1020>  // b.none
  41b4a4:	ldr	x0, [sp, #136]
  41b4a8:	and	x0, x0, #0x800000000000
  41b4ac:	cmp	x0, #0x0
  41b4b0:	b.ne	41b4bc <_obstack_memory_used@@Base+0x1020>  // b.any
  41b4b4:	mov	w0, #0x1                   	// #1
  41b4b8:	str	w0, [sp, #168]
  41b4bc:	ldr	w0, [sp, #168]
  41b4c0:	cmp	w0, #0x0
  41b4c4:	b.ne	41b514 <_obstack_memory_used@@Base+0x1078>  // b.any
  41b4c8:	str	wzr, [sp, #172]
  41b4cc:	ldr	x1, [sp, #96]
  41b4d0:	mov	x0, #0x7fff                	// #32767
  41b4d4:	cmp	x1, x0
  41b4d8:	b.ne	41b508 <_obstack_memory_used@@Base+0x106c>  // b.any
  41b4dc:	ldr	x1, [sp, #104]
  41b4e0:	ldr	x0, [sp, #112]
  41b4e4:	orr	x0, x1, x0
  41b4e8:	cmp	x0, #0x0
  41b4ec:	b.eq	41b508 <_obstack_memory_used@@Base+0x106c>  // b.none
  41b4f0:	ldr	x0, [sp, #104]
  41b4f4:	and	x0, x0, #0x800000000000
  41b4f8:	cmp	x0, #0x0
  41b4fc:	b.ne	41b508 <_obstack_memory_used@@Base+0x106c>  // b.any
  41b500:	mov	w0, #0x1                   	// #1
  41b504:	str	w0, [sp, #172]
  41b508:	ldr	w0, [sp, #172]
  41b50c:	cmp	w0, #0x0
  41b510:	b.eq	41b598 <_obstack_memory_used@@Base+0x10fc>  // b.none
  41b514:	ldr	w0, [sp, #160]
  41b518:	orr	w0, w0, #0x1
  41b51c:	str	w0, [sp, #160]
  41b520:	b	41b598 <_obstack_memory_used@@Base+0x10fc>
  41b524:	ldr	x1, [sp, #128]
  41b528:	ldr	x0, [sp, #96]
  41b52c:	cmp	x1, x0
  41b530:	b.ne	41b584 <_obstack_memory_used@@Base+0x10e8>  // b.any
  41b534:	ldr	x1, [sp, #136]
  41b538:	ldr	x0, [sp, #104]
  41b53c:	cmp	x1, x0
  41b540:	b.ne	41b584 <_obstack_memory_used@@Base+0x10e8>  // b.any
  41b544:	ldr	x1, [sp, #144]
  41b548:	ldr	x0, [sp, #112]
  41b54c:	cmp	x1, x0
  41b550:	b.ne	41b584 <_obstack_memory_used@@Base+0x10e8>  // b.any
  41b554:	ldr	x1, [sp, #120]
  41b558:	ldr	x0, [sp, #88]
  41b55c:	cmp	x1, x0
  41b560:	b.eq	41b58c <_obstack_memory_used@@Base+0x10f0>  // b.none
  41b564:	ldr	x0, [sp, #128]
  41b568:	cmp	x0, #0x0
  41b56c:	b.ne	41b584 <_obstack_memory_used@@Base+0x10e8>  // b.any
  41b570:	ldr	x1, [sp, #136]
  41b574:	ldr	x0, [sp, #144]
  41b578:	orr	x0, x1, x0
  41b57c:	cmp	x0, #0x0
  41b580:	b.eq	41b58c <_obstack_memory_used@@Base+0x10f0>  // b.none
  41b584:	mov	w0, #0x1                   	// #1
  41b588:	b	41b590 <_obstack_memory_used@@Base+0x10f4>
  41b58c:	mov	w0, #0x0                   	// #0
  41b590:	str	w0, [sp, #164]
  41b594:	b	41b59c <_obstack_memory_used@@Base+0x1100>
  41b598:	nop
  41b59c:	ldrsw	x0, [sp, #160]
  41b5a0:	cmp	x0, #0x0
  41b5a4:	b.eq	41b5b0 <_obstack_memory_used@@Base+0x1114>  // b.none
  41b5a8:	ldr	w0, [sp, #160]
  41b5ac:	bl	41bc24 <_obstack_memory_used@@Base+0x1788>
  41b5b0:	ldr	w0, [sp, #164]
  41b5b4:	ldp	x29, x30, [sp], #176
  41b5b8:	ret
  41b5bc:	stp	x29, x30, [sp, #-176]!
  41b5c0:	mov	x29, sp
  41b5c4:	str	q0, [sp, #32]
  41b5c8:	str	q1, [sp, #16]
  41b5cc:	str	wzr, [sp, #168]
  41b5d0:	str	xzr, [sp, #160]
  41b5d4:	mrs	x0, fpcr
  41b5d8:	str	x0, [sp, #160]
  41b5dc:	ldr	q0, [sp, #32]
  41b5e0:	str	q0, [sp, #64]
  41b5e4:	ldr	x0, [sp, #64]
  41b5e8:	str	x0, [sp, #152]
  41b5ec:	ldr	x0, [sp, #72]
  41b5f0:	ubfx	x0, x0, #0, #48
  41b5f4:	str	x0, [sp, #144]
  41b5f8:	ldrh	w0, [sp, #78]
  41b5fc:	ubfx	x0, x0, #0, #15
  41b600:	and	w0, w0, #0xffff
  41b604:	and	x0, x0, #0xffff
  41b608:	str	x0, [sp, #136]
  41b60c:	ldrb	w0, [sp, #79]
  41b610:	ubfx	x0, x0, #7, #1
  41b614:	and	w0, w0, #0xff
  41b618:	and	x0, x0, #0xff
  41b61c:	str	x0, [sp, #128]
  41b620:	ldr	q0, [sp, #16]
  41b624:	str	q0, [sp, #48]
  41b628:	ldr	x0, [sp, #48]
  41b62c:	str	x0, [sp, #120]
  41b630:	ldr	x0, [sp, #56]
  41b634:	ubfx	x0, x0, #0, #48
  41b638:	str	x0, [sp, #112]
  41b63c:	ldrh	w0, [sp, #62]
  41b640:	ubfx	x0, x0, #0, #15
  41b644:	and	w0, w0, #0xffff
  41b648:	and	x0, x0, #0xffff
  41b64c:	str	x0, [sp, #104]
  41b650:	ldrb	w0, [sp, #63]
  41b654:	ubfx	x0, x0, #7, #1
  41b658:	and	w0, w0, #0xff
  41b65c:	and	x0, x0, #0xff
  41b660:	str	x0, [sp, #96]
  41b664:	ldr	x1, [sp, #136]
  41b668:	mov	x0, #0x7fff                	// #32767
  41b66c:	cmp	x1, x0
  41b670:	b.ne	41b688 <_obstack_memory_used@@Base+0x11ec>  // b.any
  41b674:	ldr	x1, [sp, #144]
  41b678:	ldr	x0, [sp, #152]
  41b67c:	orr	x0, x1, x0
  41b680:	cmp	x0, #0x0
  41b684:	b.ne	41b6ac <_obstack_memory_used@@Base+0x1210>  // b.any
  41b688:	ldr	x1, [sp, #104]
  41b68c:	mov	x0, #0x7fff                	// #32767
  41b690:	cmp	x1, x0
  41b694:	b.ne	41b6c4 <_obstack_memory_used@@Base+0x1228>  // b.any
  41b698:	ldr	x1, [sp, #112]
  41b69c:	ldr	x0, [sp, #120]
  41b6a0:	orr	x0, x1, x0
  41b6a4:	cmp	x0, #0x0
  41b6a8:	b.eq	41b6c4 <_obstack_memory_used@@Base+0x1228>  // b.none
  41b6ac:	mov	w0, #0xfffffffe            	// #-2
  41b6b0:	str	w0, [sp, #172]
  41b6b4:	ldr	w0, [sp, #168]
  41b6b8:	orr	w0, w0, #0x1
  41b6bc:	str	w0, [sp, #168]
  41b6c0:	b	41b8d0 <_obstack_memory_used@@Base+0x1434>
  41b6c4:	ldr	x0, [sp, #136]
  41b6c8:	cmp	x0, #0x0
  41b6cc:	b.ne	41b6ec <_obstack_memory_used@@Base+0x1250>  // b.any
  41b6d0:	ldr	x1, [sp, #144]
  41b6d4:	ldr	x0, [sp, #152]
  41b6d8:	orr	x0, x1, x0
  41b6dc:	cmp	x0, #0x0
  41b6e0:	b.ne	41b6ec <_obstack_memory_used@@Base+0x1250>  // b.any
  41b6e4:	mov	w0, #0x1                   	// #1
  41b6e8:	b	41b6f0 <_obstack_memory_used@@Base+0x1254>
  41b6ec:	mov	w0, #0x0                   	// #0
  41b6f0:	str	w0, [sp, #92]
  41b6f4:	ldr	x0, [sp, #104]
  41b6f8:	cmp	x0, #0x0
  41b6fc:	b.ne	41b71c <_obstack_memory_used@@Base+0x1280>  // b.any
  41b700:	ldr	x1, [sp, #112]
  41b704:	ldr	x0, [sp, #120]
  41b708:	orr	x0, x1, x0
  41b70c:	cmp	x0, #0x0
  41b710:	b.ne	41b71c <_obstack_memory_used@@Base+0x1280>  // b.any
  41b714:	mov	w0, #0x1                   	// #1
  41b718:	b	41b720 <_obstack_memory_used@@Base+0x1284>
  41b71c:	mov	w0, #0x0                   	// #0
  41b720:	str	w0, [sp, #88]
  41b724:	ldr	w0, [sp, #92]
  41b728:	cmp	w0, #0x0
  41b72c:	b.eq	41b744 <_obstack_memory_used@@Base+0x12a8>  // b.none
  41b730:	ldr	w0, [sp, #88]
  41b734:	cmp	w0, #0x0
  41b738:	b.eq	41b744 <_obstack_memory_used@@Base+0x12a8>  // b.none
  41b73c:	str	wzr, [sp, #172]
  41b740:	b	41b8d0 <_obstack_memory_used@@Base+0x1434>
  41b744:	ldr	w0, [sp, #92]
  41b748:	cmp	w0, #0x0
  41b74c:	b.eq	41b770 <_obstack_memory_used@@Base+0x12d4>  // b.none
  41b750:	ldr	x0, [sp, #96]
  41b754:	cmp	x0, #0x0
  41b758:	b.eq	41b764 <_obstack_memory_used@@Base+0x12c8>  // b.none
  41b75c:	mov	w0, #0x1                   	// #1
  41b760:	b	41b768 <_obstack_memory_used@@Base+0x12cc>
  41b764:	mov	w0, #0xffffffff            	// #-1
  41b768:	str	w0, [sp, #172]
  41b76c:	b	41b8d0 <_obstack_memory_used@@Base+0x1434>
  41b770:	ldr	w0, [sp, #88]
  41b774:	cmp	w0, #0x0
  41b778:	b.eq	41b79c <_obstack_memory_used@@Base+0x1300>  // b.none
  41b77c:	ldr	x0, [sp, #128]
  41b780:	cmp	x0, #0x0
  41b784:	b.eq	41b790 <_obstack_memory_used@@Base+0x12f4>  // b.none
  41b788:	mov	w0, #0xffffffff            	// #-1
  41b78c:	b	41b794 <_obstack_memory_used@@Base+0x12f8>
  41b790:	mov	w0, #0x1                   	// #1
  41b794:	str	w0, [sp, #172]
  41b798:	b	41b8d0 <_obstack_memory_used@@Base+0x1434>
  41b79c:	ldr	x1, [sp, #128]
  41b7a0:	ldr	x0, [sp, #96]
  41b7a4:	cmp	x1, x0
  41b7a8:	b.eq	41b7cc <_obstack_memory_used@@Base+0x1330>  // b.none
  41b7ac:	ldr	x0, [sp, #128]
  41b7b0:	cmp	x0, #0x0
  41b7b4:	b.eq	41b7c0 <_obstack_memory_used@@Base+0x1324>  // b.none
  41b7b8:	mov	w0, #0xffffffff            	// #-1
  41b7bc:	b	41b7c4 <_obstack_memory_used@@Base+0x1328>
  41b7c0:	mov	w0, #0x1                   	// #1
  41b7c4:	str	w0, [sp, #172]
  41b7c8:	b	41b8d0 <_obstack_memory_used@@Base+0x1434>
  41b7cc:	ldr	x1, [sp, #136]
  41b7d0:	ldr	x0, [sp, #104]
  41b7d4:	cmp	x1, x0
  41b7d8:	b.le	41b7fc <_obstack_memory_used@@Base+0x1360>
  41b7dc:	ldr	x0, [sp, #128]
  41b7e0:	cmp	x0, #0x0
  41b7e4:	b.eq	41b7f0 <_obstack_memory_used@@Base+0x1354>  // b.none
  41b7e8:	mov	w0, #0xffffffff            	// #-1
  41b7ec:	b	41b7f4 <_obstack_memory_used@@Base+0x1358>
  41b7f0:	mov	w0, #0x1                   	// #1
  41b7f4:	str	w0, [sp, #172]
  41b7f8:	b	41b8d0 <_obstack_memory_used@@Base+0x1434>
  41b7fc:	ldr	x1, [sp, #136]
  41b800:	ldr	x0, [sp, #104]
  41b804:	cmp	x1, x0
  41b808:	b.ge	41b82c <_obstack_memory_used@@Base+0x1390>  // b.tcont
  41b80c:	ldr	x0, [sp, #128]
  41b810:	cmp	x0, #0x0
  41b814:	b.eq	41b820 <_obstack_memory_used@@Base+0x1384>  // b.none
  41b818:	mov	w0, #0x1                   	// #1
  41b81c:	b	41b824 <_obstack_memory_used@@Base+0x1388>
  41b820:	mov	w0, #0xffffffff            	// #-1
  41b824:	str	w0, [sp, #172]
  41b828:	b	41b8d0 <_obstack_memory_used@@Base+0x1434>
  41b82c:	ldr	x1, [sp, #144]
  41b830:	ldr	x0, [sp, #112]
  41b834:	cmp	x1, x0
  41b838:	b.hi	41b85c <_obstack_memory_used@@Base+0x13c0>  // b.pmore
  41b83c:	ldr	x1, [sp, #144]
  41b840:	ldr	x0, [sp, #112]
  41b844:	cmp	x1, x0
  41b848:	b.ne	41b87c <_obstack_memory_used@@Base+0x13e0>  // b.any
  41b84c:	ldr	x1, [sp, #152]
  41b850:	ldr	x0, [sp, #120]
  41b854:	cmp	x1, x0
  41b858:	b.ls	41b87c <_obstack_memory_used@@Base+0x13e0>  // b.plast
  41b85c:	ldr	x0, [sp, #128]
  41b860:	cmp	x0, #0x0
  41b864:	b.eq	41b870 <_obstack_memory_used@@Base+0x13d4>  // b.none
  41b868:	mov	w0, #0xffffffff            	// #-1
  41b86c:	b	41b874 <_obstack_memory_used@@Base+0x13d8>
  41b870:	mov	w0, #0x1                   	// #1
  41b874:	str	w0, [sp, #172]
  41b878:	b	41b8d0 <_obstack_memory_used@@Base+0x1434>
  41b87c:	ldr	x1, [sp, #112]
  41b880:	ldr	x0, [sp, #144]
  41b884:	cmp	x1, x0
  41b888:	b.hi	41b8ac <_obstack_memory_used@@Base+0x1410>  // b.pmore
  41b88c:	ldr	x1, [sp, #112]
  41b890:	ldr	x0, [sp, #144]
  41b894:	cmp	x1, x0
  41b898:	b.ne	41b8cc <_obstack_memory_used@@Base+0x1430>  // b.any
  41b89c:	ldr	x1, [sp, #120]
  41b8a0:	ldr	x0, [sp, #152]
  41b8a4:	cmp	x1, x0
  41b8a8:	b.ls	41b8cc <_obstack_memory_used@@Base+0x1430>  // b.plast
  41b8ac:	ldr	x0, [sp, #128]
  41b8b0:	cmp	x0, #0x0
  41b8b4:	b.eq	41b8c0 <_obstack_memory_used@@Base+0x1424>  // b.none
  41b8b8:	mov	w0, #0x1                   	// #1
  41b8bc:	b	41b8c4 <_obstack_memory_used@@Base+0x1428>
  41b8c0:	mov	w0, #0xffffffff            	// #-1
  41b8c4:	str	w0, [sp, #172]
  41b8c8:	b	41b8d0 <_obstack_memory_used@@Base+0x1434>
  41b8cc:	str	wzr, [sp, #172]
  41b8d0:	ldrsw	x0, [sp, #168]
  41b8d4:	cmp	x0, #0x0
  41b8d8:	b.eq	41b8e4 <_obstack_memory_used@@Base+0x1448>  // b.none
  41b8dc:	ldr	w0, [sp, #168]
  41b8e0:	bl	41bc24 <_obstack_memory_used@@Base+0x1788>
  41b8e4:	ldr	w0, [sp, #172]
  41b8e8:	ldp	x29, x30, [sp], #176
  41b8ec:	ret
  41b8f0:	stp	x29, x30, [sp, #-176]!
  41b8f4:	mov	x29, sp
  41b8f8:	str	q0, [sp, #32]
  41b8fc:	str	q1, [sp, #16]
  41b900:	str	wzr, [sp, #168]
  41b904:	str	xzr, [sp, #160]
  41b908:	mrs	x0, fpcr
  41b90c:	str	x0, [sp, #160]
  41b910:	ldr	q0, [sp, #32]
  41b914:	str	q0, [sp, #64]
  41b918:	ldr	x0, [sp, #64]
  41b91c:	str	x0, [sp, #152]
  41b920:	ldr	x0, [sp, #72]
  41b924:	ubfx	x0, x0, #0, #48
  41b928:	str	x0, [sp, #144]
  41b92c:	ldrh	w0, [sp, #78]
  41b930:	ubfx	x0, x0, #0, #15
  41b934:	and	w0, w0, #0xffff
  41b938:	and	x0, x0, #0xffff
  41b93c:	str	x0, [sp, #136]
  41b940:	ldrb	w0, [sp, #79]
  41b944:	ubfx	x0, x0, #7, #1
  41b948:	and	w0, w0, #0xff
  41b94c:	and	x0, x0, #0xff
  41b950:	str	x0, [sp, #128]
  41b954:	ldr	q0, [sp, #16]
  41b958:	str	q0, [sp, #48]
  41b95c:	ldr	x0, [sp, #48]
  41b960:	str	x0, [sp, #120]
  41b964:	ldr	x0, [sp, #56]
  41b968:	ubfx	x0, x0, #0, #48
  41b96c:	str	x0, [sp, #112]
  41b970:	ldrh	w0, [sp, #62]
  41b974:	ubfx	x0, x0, #0, #15
  41b978:	and	w0, w0, #0xffff
  41b97c:	and	x0, x0, #0xffff
  41b980:	str	x0, [sp, #104]
  41b984:	ldrb	w0, [sp, #63]
  41b988:	ubfx	x0, x0, #7, #1
  41b98c:	and	w0, w0, #0xff
  41b990:	and	x0, x0, #0xff
  41b994:	str	x0, [sp, #96]
  41b998:	ldr	x1, [sp, #136]
  41b99c:	mov	x0, #0x7fff                	// #32767
  41b9a0:	cmp	x1, x0
  41b9a4:	b.ne	41b9bc <_obstack_memory_used@@Base+0x1520>  // b.any
  41b9a8:	ldr	x1, [sp, #144]
  41b9ac:	ldr	x0, [sp, #152]
  41b9b0:	orr	x0, x1, x0
  41b9b4:	cmp	x0, #0x0
  41b9b8:	b.ne	41b9e0 <_obstack_memory_used@@Base+0x1544>  // b.any
  41b9bc:	ldr	x1, [sp, #104]
  41b9c0:	mov	x0, #0x7fff                	// #32767
  41b9c4:	cmp	x1, x0
  41b9c8:	b.ne	41b9f8 <_obstack_memory_used@@Base+0x155c>  // b.any
  41b9cc:	ldr	x1, [sp, #112]
  41b9d0:	ldr	x0, [sp, #120]
  41b9d4:	orr	x0, x1, x0
  41b9d8:	cmp	x0, #0x0
  41b9dc:	b.eq	41b9f8 <_obstack_memory_used@@Base+0x155c>  // b.none
  41b9e0:	mov	w0, #0x2                   	// #2
  41b9e4:	str	w0, [sp, #172]
  41b9e8:	ldr	w0, [sp, #168]
  41b9ec:	orr	w0, w0, #0x1
  41b9f0:	str	w0, [sp, #168]
  41b9f4:	b	41bc04 <_obstack_memory_used@@Base+0x1768>
  41b9f8:	ldr	x0, [sp, #136]
  41b9fc:	cmp	x0, #0x0
  41ba00:	b.ne	41ba20 <_obstack_memory_used@@Base+0x1584>  // b.any
  41ba04:	ldr	x1, [sp, #144]
  41ba08:	ldr	x0, [sp, #152]
  41ba0c:	orr	x0, x1, x0
  41ba10:	cmp	x0, #0x0
  41ba14:	b.ne	41ba20 <_obstack_memory_used@@Base+0x1584>  // b.any
  41ba18:	mov	w0, #0x1                   	// #1
  41ba1c:	b	41ba24 <_obstack_memory_used@@Base+0x1588>
  41ba20:	mov	w0, #0x0                   	// #0
  41ba24:	str	w0, [sp, #92]
  41ba28:	ldr	x0, [sp, #104]
  41ba2c:	cmp	x0, #0x0
  41ba30:	b.ne	41ba50 <_obstack_memory_used@@Base+0x15b4>  // b.any
  41ba34:	ldr	x1, [sp, #112]
  41ba38:	ldr	x0, [sp, #120]
  41ba3c:	orr	x0, x1, x0
  41ba40:	cmp	x0, #0x0
  41ba44:	b.ne	41ba50 <_obstack_memory_used@@Base+0x15b4>  // b.any
  41ba48:	mov	w0, #0x1                   	// #1
  41ba4c:	b	41ba54 <_obstack_memory_used@@Base+0x15b8>
  41ba50:	mov	w0, #0x0                   	// #0
  41ba54:	str	w0, [sp, #88]
  41ba58:	ldr	w0, [sp, #92]
  41ba5c:	cmp	w0, #0x0
  41ba60:	b.eq	41ba78 <_obstack_memory_used@@Base+0x15dc>  // b.none
  41ba64:	ldr	w0, [sp, #88]
  41ba68:	cmp	w0, #0x0
  41ba6c:	b.eq	41ba78 <_obstack_memory_used@@Base+0x15dc>  // b.none
  41ba70:	str	wzr, [sp, #172]
  41ba74:	b	41bc04 <_obstack_memory_used@@Base+0x1768>
  41ba78:	ldr	w0, [sp, #92]
  41ba7c:	cmp	w0, #0x0
  41ba80:	b.eq	41baa4 <_obstack_memory_used@@Base+0x1608>  // b.none
  41ba84:	ldr	x0, [sp, #96]
  41ba88:	cmp	x0, #0x0
  41ba8c:	b.eq	41ba98 <_obstack_memory_used@@Base+0x15fc>  // b.none
  41ba90:	mov	w0, #0x1                   	// #1
  41ba94:	b	41ba9c <_obstack_memory_used@@Base+0x1600>
  41ba98:	mov	w0, #0xffffffff            	// #-1
  41ba9c:	str	w0, [sp, #172]
  41baa0:	b	41bc04 <_obstack_memory_used@@Base+0x1768>
  41baa4:	ldr	w0, [sp, #88]
  41baa8:	cmp	w0, #0x0
  41baac:	b.eq	41bad0 <_obstack_memory_used@@Base+0x1634>  // b.none
  41bab0:	ldr	x0, [sp, #128]
  41bab4:	cmp	x0, #0x0
  41bab8:	b.eq	41bac4 <_obstack_memory_used@@Base+0x1628>  // b.none
  41babc:	mov	w0, #0xffffffff            	// #-1
  41bac0:	b	41bac8 <_obstack_memory_used@@Base+0x162c>
  41bac4:	mov	w0, #0x1                   	// #1
  41bac8:	str	w0, [sp, #172]
  41bacc:	b	41bc04 <_obstack_memory_used@@Base+0x1768>
  41bad0:	ldr	x1, [sp, #128]
  41bad4:	ldr	x0, [sp, #96]
  41bad8:	cmp	x1, x0
  41badc:	b.eq	41bb00 <_obstack_memory_used@@Base+0x1664>  // b.none
  41bae0:	ldr	x0, [sp, #128]
  41bae4:	cmp	x0, #0x0
  41bae8:	b.eq	41baf4 <_obstack_memory_used@@Base+0x1658>  // b.none
  41baec:	mov	w0, #0xffffffff            	// #-1
  41baf0:	b	41baf8 <_obstack_memory_used@@Base+0x165c>
  41baf4:	mov	w0, #0x1                   	// #1
  41baf8:	str	w0, [sp, #172]
  41bafc:	b	41bc04 <_obstack_memory_used@@Base+0x1768>
  41bb00:	ldr	x1, [sp, #136]
  41bb04:	ldr	x0, [sp, #104]
  41bb08:	cmp	x1, x0
  41bb0c:	b.le	41bb30 <_obstack_memory_used@@Base+0x1694>
  41bb10:	ldr	x0, [sp, #128]
  41bb14:	cmp	x0, #0x0
  41bb18:	b.eq	41bb24 <_obstack_memory_used@@Base+0x1688>  // b.none
  41bb1c:	mov	w0, #0xffffffff            	// #-1
  41bb20:	b	41bb28 <_obstack_memory_used@@Base+0x168c>
  41bb24:	mov	w0, #0x1                   	// #1
  41bb28:	str	w0, [sp, #172]
  41bb2c:	b	41bc04 <_obstack_memory_used@@Base+0x1768>
  41bb30:	ldr	x1, [sp, #136]
  41bb34:	ldr	x0, [sp, #104]
  41bb38:	cmp	x1, x0
  41bb3c:	b.ge	41bb60 <_obstack_memory_used@@Base+0x16c4>  // b.tcont
  41bb40:	ldr	x0, [sp, #128]
  41bb44:	cmp	x0, #0x0
  41bb48:	b.eq	41bb54 <_obstack_memory_used@@Base+0x16b8>  // b.none
  41bb4c:	mov	w0, #0x1                   	// #1
  41bb50:	b	41bb58 <_obstack_memory_used@@Base+0x16bc>
  41bb54:	mov	w0, #0xffffffff            	// #-1
  41bb58:	str	w0, [sp, #172]
  41bb5c:	b	41bc04 <_obstack_memory_used@@Base+0x1768>
  41bb60:	ldr	x1, [sp, #144]
  41bb64:	ldr	x0, [sp, #112]
  41bb68:	cmp	x1, x0
  41bb6c:	b.hi	41bb90 <_obstack_memory_used@@Base+0x16f4>  // b.pmore
  41bb70:	ldr	x1, [sp, #144]
  41bb74:	ldr	x0, [sp, #112]
  41bb78:	cmp	x1, x0
  41bb7c:	b.ne	41bbb0 <_obstack_memory_used@@Base+0x1714>  // b.any
  41bb80:	ldr	x1, [sp, #152]
  41bb84:	ldr	x0, [sp, #120]
  41bb88:	cmp	x1, x0
  41bb8c:	b.ls	41bbb0 <_obstack_memory_used@@Base+0x1714>  // b.plast
  41bb90:	ldr	x0, [sp, #128]
  41bb94:	cmp	x0, #0x0
  41bb98:	b.eq	41bba4 <_obstack_memory_used@@Base+0x1708>  // b.none
  41bb9c:	mov	w0, #0xffffffff            	// #-1
  41bba0:	b	41bba8 <_obstack_memory_used@@Base+0x170c>
  41bba4:	mov	w0, #0x1                   	// #1
  41bba8:	str	w0, [sp, #172]
  41bbac:	b	41bc04 <_obstack_memory_used@@Base+0x1768>
  41bbb0:	ldr	x1, [sp, #112]
  41bbb4:	ldr	x0, [sp, #144]
  41bbb8:	cmp	x1, x0
  41bbbc:	b.hi	41bbe0 <_obstack_memory_used@@Base+0x1744>  // b.pmore
  41bbc0:	ldr	x1, [sp, #112]
  41bbc4:	ldr	x0, [sp, #144]
  41bbc8:	cmp	x1, x0
  41bbcc:	b.ne	41bc00 <_obstack_memory_used@@Base+0x1764>  // b.any
  41bbd0:	ldr	x1, [sp, #120]
  41bbd4:	ldr	x0, [sp, #152]
  41bbd8:	cmp	x1, x0
  41bbdc:	b.ls	41bc00 <_obstack_memory_used@@Base+0x1764>  // b.plast
  41bbe0:	ldr	x0, [sp, #128]
  41bbe4:	cmp	x0, #0x0
  41bbe8:	b.eq	41bbf4 <_obstack_memory_used@@Base+0x1758>  // b.none
  41bbec:	mov	w0, #0x1                   	// #1
  41bbf0:	b	41bbf8 <_obstack_memory_used@@Base+0x175c>
  41bbf4:	mov	w0, #0xffffffff            	// #-1
  41bbf8:	str	w0, [sp, #172]
  41bbfc:	b	41bc04 <_obstack_memory_used@@Base+0x1768>
  41bc00:	str	wzr, [sp, #172]
  41bc04:	ldrsw	x0, [sp, #168]
  41bc08:	cmp	x0, #0x0
  41bc0c:	b.eq	41bc18 <_obstack_memory_used@@Base+0x177c>  // b.none
  41bc10:	ldr	w0, [sp, #168]
  41bc14:	bl	41bc24 <_obstack_memory_used@@Base+0x1788>
  41bc18:	ldr	w0, [sp, #172]
  41bc1c:	ldp	x29, x30, [sp], #176
  41bc20:	ret
  41bc24:	sub	sp, sp, #0x30
  41bc28:	str	w0, [sp, #12]
  41bc2c:	mov	w0, #0x7f7fffff            	// #2139095039
  41bc30:	fmov	s0, w0
  41bc34:	str	s0, [sp, #44]
  41bc38:	movi	v0.2s, #0x80, lsl #16
  41bc3c:	str	s0, [sp, #40]
  41bc40:	mov	w0, #0xc5ae                	// #50606
  41bc44:	movk	w0, #0x749d, lsl #16
  41bc48:	fmov	s0, w0
  41bc4c:	str	s0, [sp, #36]
  41bc50:	str	wzr, [sp, #32]
  41bc54:	fmov	s0, #1.000000000000000000e+00
  41bc58:	str	s0, [sp, #28]
  41bc5c:	ldr	w0, [sp, #12]
  41bc60:	and	w0, w0, #0x1
  41bc64:	cmp	w0, #0x0
  41bc68:	b.eq	41bc7c <_obstack_memory_used@@Base+0x17e0>  // b.none
  41bc6c:	ldr	s1, [sp, #32]
  41bc70:	fdiv	s0, s1, s1
  41bc74:	mrs	x0, fpsr
  41bc78:	str	w0, [sp, #24]
  41bc7c:	ldr	w0, [sp, #12]
  41bc80:	and	w0, w0, #0x2
  41bc84:	cmp	w0, #0x0
  41bc88:	b.eq	41bca0 <_obstack_memory_used@@Base+0x1804>  // b.none
  41bc8c:	ldr	s1, [sp, #28]
  41bc90:	ldr	s2, [sp, #32]
  41bc94:	fdiv	s0, s1, s2
  41bc98:	mrs	x0, fpsr
  41bc9c:	str	w0, [sp, #24]
  41bca0:	ldr	w0, [sp, #12]
  41bca4:	and	w0, w0, #0x4
  41bca8:	cmp	w0, #0x0
  41bcac:	b.eq	41bcc4 <_obstack_memory_used@@Base+0x1828>  // b.none
  41bcb0:	ldr	s1, [sp, #44]
  41bcb4:	ldr	s2, [sp, #36]
  41bcb8:	fadd	s0, s1, s2
  41bcbc:	mrs	x0, fpsr
  41bcc0:	str	w0, [sp, #24]
  41bcc4:	ldr	w0, [sp, #12]
  41bcc8:	and	w0, w0, #0x8
  41bccc:	cmp	w0, #0x0
  41bcd0:	b.eq	41bce4 <_obstack_memory_used@@Base+0x1848>  // b.none
  41bcd4:	ldr	s1, [sp, #40]
  41bcd8:	fmul	s0, s1, s1
  41bcdc:	mrs	x0, fpsr
  41bce0:	str	w0, [sp, #24]
  41bce4:	ldr	w0, [sp, #12]
  41bce8:	and	w0, w0, #0x10
  41bcec:	cmp	w0, #0x0
  41bcf0:	b.eq	41bd08 <_obstack_memory_used@@Base+0x186c>  // b.none
  41bcf4:	ldr	s1, [sp, #44]
  41bcf8:	ldr	s2, [sp, #28]
  41bcfc:	fsub	s0, s1, s2
  41bd00:	mrs	x0, fpsr
  41bd04:	str	w0, [sp, #24]
  41bd08:	nop
  41bd0c:	add	sp, sp, #0x30
  41bd10:	ret
  41bd14:	nop
  41bd18:	stp	x29, x30, [sp, #-64]!
  41bd1c:	mov	x29, sp
  41bd20:	stp	x19, x20, [sp, #16]
  41bd24:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x17b64>
  41bd28:	add	x20, x20, #0xde0
  41bd2c:	stp	x21, x22, [sp, #32]
  41bd30:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x17b64>
  41bd34:	add	x21, x21, #0xdd8
  41bd38:	sub	x20, x20, x21
  41bd3c:	mov	w22, w0
  41bd40:	stp	x23, x24, [sp, #48]
  41bd44:	mov	x23, x1
  41bd48:	mov	x24, x2
  41bd4c:	bl	402838 <mbrtowc@plt-0x38>
  41bd50:	cmp	xzr, x20, asr #3
  41bd54:	b.eq	41bd80 <_obstack_memory_used@@Base+0x18e4>  // b.none
  41bd58:	asr	x20, x20, #3
  41bd5c:	mov	x19, #0x0                   	// #0
  41bd60:	ldr	x3, [x21, x19, lsl #3]
  41bd64:	mov	x2, x24
  41bd68:	add	x19, x19, #0x1
  41bd6c:	mov	x1, x23
  41bd70:	mov	w0, w22
  41bd74:	blr	x3
  41bd78:	cmp	x20, x19
  41bd7c:	b.ne	41bd60 <_obstack_memory_used@@Base+0x18c4>  // b.any
  41bd80:	ldp	x19, x20, [sp, #16]
  41bd84:	ldp	x21, x22, [sp, #32]
  41bd88:	ldp	x23, x24, [sp, #48]
  41bd8c:	ldp	x29, x30, [sp], #64
  41bd90:	ret
  41bd94:	nop
  41bd98:	ret
  41bd9c:	nop
  41bda0:	adrp	x2, 433000 <_obstack_memory_used@@Base+0x18b64>
  41bda4:	mov	x1, #0x0                   	// #0
  41bda8:	ldr	x2, [x2, #984]
  41bdac:	b	402970 <__cxa_atexit@plt>
  41bdb0:	mov	x2, x1
  41bdb4:	mov	x1, x0
  41bdb8:	mov	w0, #0x0                   	// #0
  41bdbc:	b	402f80 <__xstat@plt>
  41bdc0:	mov	x2, x1
  41bdc4:	mov	w1, w0
  41bdc8:	mov	w0, #0x0                   	// #0
  41bdcc:	b	402e90 <__fxstat@plt>

Disassembly of section .fini:

000000000041bdd0 <.fini>:
  41bdd0:	stp	x29, x30, [sp, #-16]!
  41bdd4:	mov	x29, sp
  41bdd8:	ldp	x29, x30, [sp], #16
  41bddc:	ret
