
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-modules-load_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401018 <_init>:
  401018:	stp	x29, x30, [sp, #-16]!
  40101c:	mov	x29, sp
  401020:	bl	4012d0 <call_weak_fn>
  401024:	ldp	x29, x30, [sp], #16
  401028:	ret

Disassembly of section .plt:

0000000000401030 <__libc_start_main@plt-0x20>:
  401030:	stp	x16, x30, [sp, #-16]!
  401034:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401038:	ldr	x17, [x16, #3808]
  40103c:	add	x16, x16, #0xee0
  401040:	br	x17
  401044:	nop
  401048:	nop
  40104c:	nop

0000000000401050 <__libc_start_main@plt>:
  401050:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401054:	ldr	x17, [x16, #3816]
  401058:	add	x16, x16, #0xee8
  40105c:	br	x17

0000000000401060 <abort@plt>:
  401060:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401064:	ldr	x17, [x16, #3824]
  401068:	add	x16, x16, #0xef0
  40106c:	br	x17

0000000000401070 <__gmon_start__@plt>:
  401070:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401074:	ldr	x17, [x16, #3832]
  401078:	add	x16, x16, #0xef8
  40107c:	br	x17

0000000000401080 <strv_free@plt>:
  401080:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401084:	ldr	x17, [x16, #3840]
  401088:	add	x16, x16, #0xf00
  40108c:	br	x17

0000000000401090 <getopt_long@plt>:
  401090:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401094:	ldr	x17, [x16, #3848]
  401098:	add	x16, x16, #0xf08
  40109c:	br	x17

00000000004010a0 <terminal_urlify_man@plt>:
  4010a0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4010a4:	ldr	x17, [x16, #3856]
  4010a8:	add	x16, x16, #0xf10
  4010ac:	br	x17

00000000004010b0 <printf@plt>:
  4010b0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4010b4:	ldr	x17, [x16, #3864]
  4010b8:	add	x16, x16, #0xf18
  4010bc:	br	x17

00000000004010c0 <version@plt>:
  4010c0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4010c4:	ldr	x17, [x16, #3872]
  4010c8:	add	x16, x16, #0xf20
  4010cc:	br	x17

00000000004010d0 <log_oom_internal@plt>:
  4010d0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4010d4:	ldr	x17, [x16, #3880]
  4010d8:	add	x16, x16, #0xf28
  4010dc:	br	x17

00000000004010e0 <free@plt>:
  4010e0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4010e4:	ldr	x17, [x16, #3888]
  4010e8:	add	x16, x16, #0xf30
  4010ec:	br	x17

00000000004010f0 <log_setup_service@plt>:
  4010f0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4010f4:	ldr	x17, [x16, #3896]
  4010f8:	add	x16, x16, #0xf38
  4010fc:	br	x17

0000000000401100 <umask@plt>:
  401100:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401104:	ldr	x17, [x16, #3904]
  401108:	add	x16, x16, #0xf40
  40110c:	br	x17

0000000000401110 <proc_cmdline_parse@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401114:	ldr	x17, [x16, #3912]
  401118:	add	x16, x16, #0xf48
  40111c:	br	x17

0000000000401120 <log_get_max_level_realm@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401124:	ldr	x17, [x16, #3920]
  401128:	add	x16, x16, #0xf50
  40112c:	br	x17

0000000000401130 <log_internal_realm@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401134:	ldr	x17, [x16, #3928]
  401138:	add	x16, x16, #0xf58
  40113c:	br	x17

0000000000401140 <kmod_new@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401144:	ldr	x17, [x16, #3936]
  401148:	add	x16, x16, #0xf60
  40114c:	br	x17

0000000000401150 <kmod_load_resources@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401154:	ldr	x17, [x16, #3944]
  401158:	add	x16, x16, #0xf68
  40115c:	br	x17

0000000000401160 <kmod_set_log_fn@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401164:	ldr	x17, [x16, #3952]
  401168:	add	x16, x16, #0xf70
  40116c:	br	x17

0000000000401170 <module_load_and_warn@plt>:
  401170:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401174:	ldr	x17, [x16, #3960]
  401178:	add	x16, x16, #0xf78
  40117c:	br	x17

0000000000401180 <conf_files_list_nulstr@plt>:
  401180:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401184:	ldr	x17, [x16, #3968]
  401188:	add	x16, x16, #0xf80
  40118c:	br	x17

0000000000401190 <kmod_unref@plt>:
  401190:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401194:	ldr	x17, [x16, #3976]
  401198:	add	x16, x16, #0xf88
  40119c:	br	x17

00000000004011a0 <ask_password_agent_close@plt>:
  4011a0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4011a4:	ldr	x17, [x16, #3984]
  4011a8:	add	x16, x16, #0xf90
  4011ac:	br	x17

00000000004011b0 <polkit_agent_close@plt>:
  4011b0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4011b4:	ldr	x17, [x16, #3992]
  4011b8:	add	x16, x16, #0xf98
  4011bc:	br	x17

00000000004011c0 <pager_close@plt>:
  4011c0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4011c4:	ldr	x17, [x16, #4000]
  4011c8:	add	x16, x16, #0xfa0
  4011cc:	br	x17

00000000004011d0 <mac_selinux_finish@plt>:
  4011d0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4011d4:	ldr	x17, [x16, #4008]
  4011d8:	add	x16, x16, #0xfa8
  4011dc:	br	x17

00000000004011e0 <log_assert_failed_realm@plt>:
  4011e0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4011e4:	ldr	x17, [x16, #4016]
  4011e8:	add	x16, x16, #0xfb0
  4011ec:	br	x17

00000000004011f0 <log_assert_failed_unreachable_realm@plt>:
  4011f0:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  4011f4:	ldr	x17, [x16, #4024]
  4011f8:	add	x16, x16, #0xfb8
  4011fc:	br	x17

0000000000401200 <proc_cmdline_key_streq@plt>:
  401200:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401204:	ldr	x17, [x16, #4032]
  401208:	add	x16, x16, #0xfc0
  40120c:	br	x17

0000000000401210 <strv_split_full@plt>:
  401210:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401214:	ldr	x17, [x16, #4040]
  401218:	add	x16, x16, #0xfc8
  40121c:	br	x17

0000000000401220 <strv_extend_strv@plt>:
  401220:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401224:	ldr	x17, [x16, #4048]
  401228:	add	x16, x16, #0xfd0
  40122c:	br	x17

0000000000401230 <log_internalv_realm@plt>:
  401230:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401234:	ldr	x17, [x16, #4056]
  401238:	add	x16, x16, #0xfd8
  40123c:	br	x17

0000000000401240 <search_and_fopen_nulstr@plt>:
  401240:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401244:	ldr	x17, [x16, #4064]
  401248:	add	x16, x16, #0xfe0
  40124c:	br	x17

0000000000401250 <read_line_full@plt>:
  401250:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401254:	ldr	x17, [x16, #4072]
  401258:	add	x16, x16, #0xfe8
  40125c:	br	x17

0000000000401260 <strstrip@plt>:
  401260:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401264:	ldr	x17, [x16, #4080]
  401268:	add	x16, x16, #0xff0
  40126c:	br	x17

0000000000401270 <safe_fclose@plt>:
  401270:	adrp	x16, 41f000 <__FRAME_END__+0x1cf48>
  401274:	ldr	x17, [x16, #4088]
  401278:	add	x16, x16, #0xff8
  40127c:	br	x17

Disassembly of section .text:

0000000000401280 <_start>:
  401280:	mov	x29, #0x0                   	// #0
  401284:	mov	x30, #0x0                   	// #0
  401288:	mov	x5, x0
  40128c:	ldr	x1, [sp]
  401290:	add	x2, sp, #0x8
  401294:	mov	x6, sp
  401298:	movz	x0, #0x0, lsl #48
  40129c:	movk	x0, #0x0, lsl #32
  4012a0:	movk	x0, #0x40, lsl #16
  4012a4:	movk	x0, #0x13bc
  4012a8:	movz	x3, #0x0, lsl #48
  4012ac:	movk	x3, #0x0, lsl #32
  4012b0:	movk	x3, #0x40, lsl #16
  4012b4:	movk	x3, #0x1b40
  4012b8:	movz	x4, #0x0, lsl #48
  4012bc:	movk	x4, #0x0, lsl #32
  4012c0:	movk	x4, #0x40, lsl #16
  4012c4:	movk	x4, #0x1bc0
  4012c8:	bl	401050 <__libc_start_main@plt>
  4012cc:	bl	401060 <abort@plt>

00000000004012d0 <call_weak_fn>:
  4012d0:	adrp	x0, 41f000 <__FRAME_END__+0x1cf48>
  4012d4:	ldr	x0, [x0, #3768]
  4012d8:	cbz	x0, 4012e0 <call_weak_fn+0x10>
  4012dc:	b	401070 <__gmon_start__@plt>
  4012e0:	ret

00000000004012e4 <deregister_tm_clones>:
  4012e4:	adrp	x0, 420000 <completed.8445>
  4012e8:	add	x1, x0, #0x0
  4012ec:	adrp	x0, 420000 <completed.8445>
  4012f0:	add	x0, x0, #0x0
  4012f4:	cmp	x1, x0
  4012f8:	b.eq	401324 <deregister_tm_clones+0x40>  // b.none
  4012fc:	sub	sp, sp, #0x10
  401300:	adrp	x1, 401000 <_init-0x18>
  401304:	ldr	x1, [x1, #3032]
  401308:	str	x1, [sp, #8]
  40130c:	cbz	x1, 40131c <deregister_tm_clones+0x38>
  401310:	mov	x16, x1
  401314:	add	sp, sp, #0x10
  401318:	br	x16
  40131c:	add	sp, sp, #0x10
  401320:	ret
  401324:	ret

0000000000401328 <register_tm_clones>:
  401328:	adrp	x0, 420000 <completed.8445>
  40132c:	add	x1, x0, #0x0
  401330:	adrp	x0, 420000 <completed.8445>
  401334:	add	x0, x0, #0x0
  401338:	sub	x1, x1, x0
  40133c:	mov	x2, #0x2                   	// #2
  401340:	asr	x1, x1, #3
  401344:	sdiv	x1, x1, x2
  401348:	cbz	x1, 401374 <register_tm_clones+0x4c>
  40134c:	sub	sp, sp, #0x10
  401350:	adrp	x2, 401000 <_init-0x18>
  401354:	ldr	x2, [x2, #3040]
  401358:	str	x2, [sp, #8]
  40135c:	cbz	x2, 40136c <register_tm_clones+0x44>
  401360:	mov	x16, x2
  401364:	add	sp, sp, #0x10
  401368:	br	x16
  40136c:	add	sp, sp, #0x10
  401370:	ret
  401374:	ret

0000000000401378 <__do_global_dtors_aux>:
  401378:	stp	x29, x30, [sp, #-32]!
  40137c:	mov	x29, sp
  401380:	str	x19, [sp, #16]
  401384:	adrp	x19, 420000 <completed.8445>
  401388:	ldrb	w0, [x19]
  40138c:	cbnz	w0, 40139c <__do_global_dtors_aux+0x24>
  401390:	bl	4012e4 <deregister_tm_clones>
  401394:	mov	w0, #0x1                   	// #1
  401398:	strb	w0, [x19]
  40139c:	ldr	x19, [sp, #16]
  4013a0:	ldp	x29, x30, [sp], #32
  4013a4:	ret

00000000004013a8 <frame_dummy>:
  4013a8:	b	401328 <register_tm_clones>

00000000004013ac <__unique_prefix_static_destructor_wrapper0>:
  4013ac:	ldr	x0, [x0]
  4013b0:	cbz	x0, 4013b8 <__unique_prefix_static_destructor_wrapper0+0xc>
  4013b4:	b	401080 <strv_free@plt>
  4013b8:	ret

00000000004013bc <main>:
  4013bc:	sub	sp, sp, #0x40
  4013c0:	adrp	x8, 420000 <completed.8445>
  4013c4:	adrp	x9, 420000 <completed.8445>
  4013c8:	stp	x29, x30, [sp, #16]
  4013cc:	stp	x22, x21, [sp, #32]
  4013d0:	stp	x20, x19, [sp, #48]
  4013d4:	add	x29, sp, #0x10
  4013d8:	str	w0, [x8, #16]
  4013dc:	str	x1, [x9, #24]
  4013e0:	tbnz	w0, #31, 40172c <main+0x370>
  4013e4:	mov	x21, x1
  4013e8:	cbz	x1, 40174c <main+0x390>
  4013ec:	adrp	x2, 401000 <_init-0x18>
  4013f0:	adrp	x3, 401000 <_init-0x18>
  4013f4:	add	x2, x2, #0xcd1
  4013f8:	add	x3, x3, #0xf60
  4013fc:	mov	x1, x21
  401400:	mov	x4, xzr
  401404:	mov	w22, w0
  401408:	bl	401090 <getopt_long@plt>
  40140c:	tbnz	w0, #31, 4014ac <main+0xf0>
  401410:	cmp	w0, #0x3f
  401414:	b.eq	401474 <main+0xb8>  // b.none
  401418:	cmp	w0, #0x100
  40141c:	b.eq	401468 <main+0xac>  // b.none
  401420:	cmp	w0, #0x68
  401424:	b.ne	401770 <main+0x3b4>  // b.any
  401428:	adrp	x0, 401000 <_init-0x18>
  40142c:	adrp	x1, 401000 <_init-0x18>
  401430:	add	x0, x0, #0xce4
  401434:	add	x1, x1, #0xd01
  401438:	add	x2, sp, #0x8
  40143c:	str	xzr, [sp, #8]
  401440:	bl	4010a0 <terminal_urlify_man@plt>
  401444:	tbnz	w0, #31, 40147c <main+0xc0>
  401448:	adrp	x8, 420000 <completed.8445>
  40144c:	ldr	x1, [x8, #32]
  401450:	ldr	x2, [sp, #8]
  401454:	adrp	x0, 401000 <_init-0x18>
  401458:	add	x0, x0, #0xd03
  40145c:	bl	4010b0 <printf@plt>
  401460:	mov	w19, wzr
  401464:	b	40149c <main+0xe0>
  401468:	bl	4010c0 <version@plt>
  40146c:	mov	w19, w0
  401470:	b	4014a4 <main+0xe8>
  401474:	mov	w19, #0xffffffea            	// #-22
  401478:	b	4016c4 <main+0x308>
  40147c:	adrp	x1, 401000 <_init-0x18>
  401480:	adrp	x3, 401000 <_init-0x18>
  401484:	add	x1, x1, #0xbeb
  401488:	add	x3, x3, #0xc98
  40148c:	mov	w2, #0x70                  	// #112
  401490:	mov	w0, wzr
  401494:	bl	4010d0 <log_oom_internal@plt>
  401498:	mov	w19, w0
  40149c:	ldr	x0, [sp, #8]
  4014a0:	bl	4010e0 <free@plt>
  4014a4:	cmp	w19, #0x1
  4014a8:	b.lt	4016c4 <main+0x308>  // b.tstop
  4014ac:	bl	4010f0 <log_setup_service@plt>
  4014b0:	mov	w0, #0x12                  	// #18
  4014b4:	bl	401100 <umask@plt>
  4014b8:	adrp	x0, 401000 <_init-0x18>
  4014bc:	add	x0, x0, #0x794
  4014c0:	mov	w2, #0x1                   	// #1
  4014c4:	mov	x1, xzr
  4014c8:	bl	401110 <proc_cmdline_parse@plt>
  4014cc:	tbz	w0, #31, 40150c <main+0x150>
  4014d0:	mov	w19, w0
  4014d4:	mov	w0, wzr
  4014d8:	bl	401120 <log_get_max_level_realm@plt>
  4014dc:	cmp	w0, #0x4
  4014e0:	b.lt	40150c <main+0x150>  // b.tstop
  4014e4:	adrp	x2, 401000 <_init-0x18>
  4014e8:	adrp	x4, 401000 <_init-0x18>
  4014ec:	adrp	x5, 401000 <_init-0x18>
  4014f0:	add	x2, x2, #0xbeb
  4014f4:	add	x4, x4, #0xc0b
  4014f8:	add	x5, x5, #0xc0f
  4014fc:	mov	w0, #0x4                   	// #4
  401500:	mov	w3, #0xaf                  	// #175
  401504:	mov	w1, w19
  401508:	bl	401130 <log_internal_realm@plt>
  40150c:	mov	x0, xzr
  401510:	mov	x1, xzr
  401514:	bl	401140 <kmod_new@plt>
  401518:	cbz	x0, 40157c <main+0x1c0>
  40151c:	mov	x20, x0
  401520:	bl	401150 <kmod_load_resources@plt>
  401524:	adrp	x1, 401000 <_init-0x18>
  401528:	add	x1, x1, #0x89c
  40152c:	mov	x0, x20
  401530:	mov	x2, xzr
  401534:	bl	401160 <kmod_set_log_fn@plt>
  401538:	adrp	x8, 420000 <completed.8445>
  40153c:	ldrsw	x8, [x8, #40]
  401540:	cmp	w8, w22
  401544:	b.ge	4015b8 <main+0x1fc>  // b.tcont
  401548:	mov	w19, wzr
  40154c:	sub	w22, w22, w8
  401550:	add	x21, x21, x8, lsl #3
  401554:	ldr	x1, [x21], #8
  401558:	mov	x0, x20
  40155c:	mov	w2, wzr
  401560:	bl	4018cc <apply_file>
  401564:	cmp	w0, #0x0
  401568:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
  40156c:	csel	w19, w0, w19, eq  // eq = none
  401570:	subs	w22, w22, #0x1
  401574:	b.ne	401554 <main+0x198>  // b.any
  401578:	b	4016bc <main+0x300>
  40157c:	bl	401120 <log_get_max_level_realm@plt>
  401580:	cmp	w0, #0x3
  401584:	b.lt	4015b0 <main+0x1f4>  // b.tstop
  401588:	adrp	x2, 401000 <_init-0x18>
  40158c:	adrp	x4, 401000 <_init-0x18>
  401590:	adrp	x5, 401000 <_init-0x18>
  401594:	add	x2, x2, #0xbeb
  401598:	add	x4, x4, #0xc0b
  40159c:	add	x5, x5, #0xc41
  4015a0:	mov	w0, #0x3                   	// #3
  4015a4:	mov	w3, #0xb3                  	// #179
  4015a8:	mov	w1, wzr
  4015ac:	bl	401130 <log_internal_realm@plt>
  4015b0:	mov	w19, #0xfffffff4            	// #-12
  4015b4:	b	4016c4 <main+0x308>
  4015b8:	adrp	x8, 420000 <completed.8445>
  4015bc:	ldr	x8, [x8, #8]
  4015c0:	str	xzr, [sp, #8]
  4015c4:	cbz	x8, 401604 <main+0x248>
  4015c8:	ldr	x1, [x8]
  4015cc:	cbz	x1, 401604 <main+0x248>
  4015d0:	mov	w19, wzr
  4015d4:	add	x21, x8, #0x8
  4015d8:	mov	w2, #0x1                   	// #1
  4015dc:	mov	x0, x20
  4015e0:	bl	401170 <module_load_and_warn@plt>
  4015e4:	cmp	w0, #0x0
  4015e8:	ldr	x1, [x21], #8
  4015ec:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
  4015f0:	csel	w8, w0, w19, eq  // eq = none
  4015f4:	cmn	w0, #0x2
  4015f8:	csel	w19, w19, w8, eq  // eq = none
  4015fc:	cbnz	x1, 4015d8 <main+0x21c>
  401600:	b	401608 <main+0x24c>
  401604:	mov	w19, wzr
  401608:	adrp	x1, 401000 <_init-0x18>
  40160c:	adrp	x4, 401000 <_init-0x18>
  401610:	add	x1, x1, #0xc65
  401614:	add	x4, x4, #0xee8
  401618:	add	x0, sp, #0x8
  40161c:	mov	x2, xzr
  401620:	mov	w3, wzr
  401624:	bl	401180 <conf_files_list_nulstr@plt>
  401628:	tbnz	w0, #31, 401668 <main+0x2ac>
  40162c:	ldr	x0, [sp, #8]
  401630:	cbz	x0, 4016bc <main+0x300>
  401634:	ldr	x1, [x0]
  401638:	cbz	x1, 4016b8 <main+0x2fc>
  40163c:	add	x21, x0, #0x8
  401640:	mov	w22, #0x1                   	// #1
  401644:	mov	w2, #0x1                   	// #1
  401648:	mov	x0, x20
  40164c:	bl	4018cc <apply_file>
  401650:	ldr	x1, [x21], #8
  401654:	cmp	w0, #0x0
  401658:	ccmp	w19, #0x0, #0x0, lt  // lt = tstop
  40165c:	csel	w19, w0, w19, eq  // eq = none
  401660:	cbnz	x1, 401644 <main+0x288>
  401664:	b	4016b0 <main+0x2f4>
  401668:	mov	w21, w0
  40166c:	mov	w0, wzr
  401670:	bl	401120 <log_get_max_level_realm@plt>
  401674:	cmp	w0, #0x3
  401678:	b.lt	4016a4 <main+0x2e8>  // b.tstop
  40167c:	adrp	x2, 401000 <_init-0x18>
  401680:	adrp	x4, 401000 <_init-0x18>
  401684:	adrp	x5, 401000 <_init-0x18>
  401688:	add	x2, x2, #0xbeb
  40168c:	add	x4, x4, #0xc0b
  401690:	add	x5, x5, #0xc6b
  401694:	mov	w0, #0x3                   	// #3
  401698:	mov	w3, #0xd3                  	// #211
  40169c:	mov	w1, w21
  4016a0:	bl	401130 <log_internal_realm@plt>
  4016a4:	cmp	w19, #0x0
  4016a8:	mov	w22, wzr
  4016ac:	csel	w19, w21, w19, eq  // eq = none
  4016b0:	ldr	x0, [sp, #8]
  4016b4:	cbz	x0, 4016bc <main+0x300>
  4016b8:	bl	401080 <strv_free@plt>
  4016bc:	mov	x0, x20
  4016c0:	bl	401190 <kmod_unref@plt>
  4016c4:	bl	4011a0 <ask_password_agent_close@plt>
  4016c8:	bl	4011b0 <polkit_agent_close@plt>
  4016cc:	bl	4011c0 <pager_close@plt>
  4016d0:	bl	4011d0 <mac_selinux_finish@plt>
  4016d4:	adrp	x8, 41f000 <__FRAME_END__+0x1cf48>
  4016d8:	ldr	x8, [x8, #3776]
  4016dc:	adrp	x20, 41f000 <__FRAME_END__+0x1cf48>
  4016e0:	ldr	x20, [x20, #3784]
  4016e4:	add	x9, x8, #0x7
  4016e8:	and	x21, x9, #0xfffffffffffffff8
  4016ec:	cmp	x21, x20
  4016f0:	cset	w9, cs  // cs = hs, nlast
  4016f4:	cmp	x8, #0x0
  4016f8:	cset	w8, eq  // eq = none
  4016fc:	orr	w8, w8, w9
  401700:	tbnz	w8, #0, 401714 <main+0x358>
  401704:	ldp	x0, x8, [x21], #16
  401708:	blr	x8
  40170c:	cmp	x21, x20
  401710:	b.cc	401704 <main+0x348>  // b.lo, b.ul, b.last
  401714:	lsr	w0, w19, #31
  401718:	ldp	x20, x19, [sp, #48]
  40171c:	ldp	x22, x21, [sp, #32]
  401720:	ldp	x29, x30, [sp, #16]
  401724:	add	sp, sp, #0x40
  401728:	ret
  40172c:	adrp	x1, 401000 <_init-0x18>
  401730:	adrp	x2, 401000 <_init-0x18>
  401734:	adrp	x4, 401000 <_init-0x18>
  401738:	add	x1, x1, #0xca5
  40173c:	add	x2, x2, #0xbeb
  401740:	add	x4, x4, #0xcaf
  401744:	mov	w3, #0x8b                  	// #139
  401748:	b	401768 <main+0x3ac>
  40174c:	adrp	x1, 401000 <_init-0x18>
  401750:	adrp	x2, 401000 <_init-0x18>
  401754:	adrp	x4, 401000 <_init-0x18>
  401758:	add	x1, x1, #0xccc
  40175c:	add	x2, x2, #0xbeb
  401760:	add	x4, x4, #0xcaf
  401764:	mov	w3, #0x8c                  	// #140
  401768:	mov	w0, wzr
  40176c:	bl	4011e0 <log_assert_failed_realm@plt>
  401770:	adrp	x1, 401000 <_init-0x18>
  401774:	adrp	x2, 401000 <_init-0x18>
  401778:	adrp	x4, 401000 <_init-0x18>
  40177c:	add	x1, x1, #0xcd3
  401780:	add	x2, x2, #0xbeb
  401784:	add	x4, x4, #0xcaf
  401788:	mov	w3, #0x9b                  	// #155
  40178c:	mov	w0, wzr
  401790:	bl	4011f0 <log_assert_failed_unreachable_realm@plt>

0000000000401794 <parse_proc_cmdline_item>:
  401794:	stp	x29, x30, [sp, #-32]!
  401798:	stp	x20, x19, [sp, #16]
  40179c:	mov	x20, x1
  4017a0:	adrp	x1, 401000 <_init-0x18>
  4017a4:	add	x1, x1, #0xdc7
  4017a8:	mov	x29, sp
  4017ac:	mov	x19, x0
  4017b0:	bl	401200 <proc_cmdline_key_streq@plt>
  4017b4:	tbz	w0, #0, 401888 <parse_proc_cmdline_item+0xf4>
  4017b8:	cbz	x20, 4017f8 <parse_proc_cmdline_item+0x64>
  4017bc:	adrp	x1, 401000 <_init-0x18>
  4017c0:	add	x1, x1, #0xe4a
  4017c4:	mov	x0, x20
  4017c8:	mov	w2, wzr
  4017cc:	bl	401210 <strv_split_full@plt>
  4017d0:	cbz	x0, 401838 <parse_proc_cmdline_item+0xa4>
  4017d4:	mov	x19, x0
  4017d8:	adrp	x0, 420000 <completed.8445>
  4017dc:	add	x0, x0, #0x8
  4017e0:	mov	w2, #0x1                   	// #1
  4017e4:	mov	x1, x19
  4017e8:	bl	401220 <strv_extend_strv@plt>
  4017ec:	tbnz	w0, #31, 40185c <parse_proc_cmdline_item+0xc8>
  4017f0:	mov	w20, wzr
  4017f4:	b	40187c <parse_proc_cmdline_item+0xe8>
  4017f8:	mov	w0, wzr
  4017fc:	bl	401120 <log_get_max_level_realm@plt>
  401800:	cmp	w0, #0x4
  401804:	b.lt	40188c <parse_proc_cmdline_item+0xf8>  // b.tstop
  401808:	adrp	x2, 401000 <_init-0x18>
  40180c:	adrp	x4, 401000 <_init-0x18>
  401810:	adrp	x5, 401000 <_init-0x18>
  401814:	add	x2, x2, #0xdd7
  401818:	add	x4, x4, #0xdf0
  40181c:	add	x5, x5, #0xe0b
  401820:	mov	w0, #0x4                   	// #4
  401824:	mov	w3, #0x21                  	// #33
  401828:	mov	w1, wzr
  40182c:	mov	x6, x19
  401830:	bl	401130 <log_internal_realm@plt>
  401834:	b	401888 <parse_proc_cmdline_item+0xf4>
  401838:	adrp	x1, 401000 <_init-0x18>
  40183c:	adrp	x3, 401000 <_init-0x18>
  401840:	add	x1, x1, #0xbeb
  401844:	add	x3, x3, #0xe4c
  401848:	mov	w2, #0x27                  	// #39
  40184c:	bl	4010d0 <log_oom_internal@plt>
  401850:	mov	w20, w0
  401854:	tbz	w20, #31, 401888 <parse_proc_cmdline_item+0xf4>
  401858:	b	40188c <parse_proc_cmdline_item+0xf8>
  40185c:	adrp	x1, 401000 <_init-0x18>
  401860:	adrp	x3, 401000 <_init-0x18>
  401864:	add	x1, x1, #0xbeb
  401868:	add	x3, x3, #0xe4c
  40186c:	mov	w2, #0x2a                  	// #42
  401870:	mov	w0, wzr
  401874:	bl	4010d0 <log_oom_internal@plt>
  401878:	mov	w20, w0
  40187c:	mov	x0, x19
  401880:	bl	401080 <strv_free@plt>
  401884:	tbnz	w20, #31, 40188c <parse_proc_cmdline_item+0xf8>
  401888:	mov	w20, wzr
  40188c:	mov	w0, w20
  401890:	ldp	x20, x19, [sp, #16]
  401894:	ldp	x29, x30, [sp], #32
  401898:	ret

000000000040189c <systemd_kmod_log>:
  40189c:	sub	sp, sp, #0x30
  4018a0:	stp	x29, x30, [sp, #32]
  4018a4:	ldp	q1, q0, [x6]
  4018a8:	mov	w0, w1
  4018ac:	mov	x6, sp
  4018b0:	mov	w1, wzr
  4018b4:	add	x29, sp, #0x20
  4018b8:	stp	q1, q0, [sp]
  4018bc:	bl	401230 <log_internalv_realm@plt>
  4018c0:	ldp	x29, x30, [sp, #32]
  4018c4:	add	sp, sp, #0x30
  4018c8:	ret

00000000004018cc <apply_file>:
  4018cc:	sub	sp, sp, #0x60
  4018d0:	stp	x29, x30, [sp, #16]
  4018d4:	add	x29, sp, #0x10
  4018d8:	str	x25, [sp, #32]
  4018dc:	stp	x24, x23, [sp, #48]
  4018e0:	stp	x22, x21, [sp, #64]
  4018e4:	stp	x20, x19, [sp, #80]
  4018e8:	str	xzr, [x29, #24]
  4018ec:	cbz	x0, 401af8 <apply_file+0x22c>
  4018f0:	mov	x19, x1
  4018f4:	cbz	x1, 401b18 <apply_file+0x24c>
  4018f8:	adrp	x1, 401000 <_init-0x18>
  4018fc:	adrp	x3, 401000 <_init-0x18>
  401900:	mov	w22, w2
  401904:	mov	x21, x0
  401908:	add	x1, x1, #0xe98
  40190c:	add	x3, x3, #0xee8
  401910:	add	x4, x29, #0x18
  401914:	mov	x0, x19
  401918:	mov	x2, xzr
  40191c:	bl	401240 <search_and_fopen_nulstr@plt>
  401920:	mov	w20, w0
  401924:	tbnz	w0, #31, 401a54 <apply_file+0x188>
  401928:	mov	w0, wzr
  40192c:	bl	401120 <log_get_max_level_realm@plt>
  401930:	cmp	w0, #0x7
  401934:	b.lt	401964 <apply_file+0x98>  // b.tstop
  401938:	adrp	x2, 401000 <_init-0x18>
  40193c:	adrp	x4, 401000 <_init-0x18>
  401940:	adrp	x5, 401000 <_init-0x18>
  401944:	add	x2, x2, #0xbeb
  401948:	add	x4, x4, #0xe9b
  40194c:	add	x5, x5, #0xebc
  401950:	mov	w0, #0x7                   	// #7
  401954:	mov	w3, #0x4e                  	// #78
  401958:	mov	w1, wzr
  40195c:	mov	x6, x19
  401960:	bl	401130 <log_internal_realm@plt>
  401964:	ldr	x0, [x29, #24]
  401968:	add	x3, sp, #0x8
  40196c:	mov	w1, #0x100000              	// #1048576
  401970:	mov	w2, wzr
  401974:	str	xzr, [sp, #8]
  401978:	bl	401250 <read_line_full@plt>
  40197c:	mov	w22, w0
  401980:	tbnz	w0, #31, 401a10 <apply_file+0x144>
  401984:	mov	x24, #0x1                   	// #1
  401988:	movk	x24, #0x8, lsl #32
  40198c:	mov	w23, #0x1                   	// #1
  401990:	movk	x24, #0x800, lsl #48
  401994:	mov	w25, #0xffffffff            	// #-1
  401998:	ldr	x0, [sp, #8]
  40199c:	cbz	w22, 401a78 <apply_file+0x1ac>
  4019a0:	bl	401260 <strstrip@plt>
  4019a4:	cbz	x0, 4019e8 <apply_file+0x11c>
  4019a8:	ldrb	w8, [x0]
  4019ac:	mov	x1, x0
  4019b0:	cbz	x8, 4019e8 <apply_file+0x11c>
  4019b4:	cmp	w8, #0x3f
  4019b8:	b.hi	4019c8 <apply_file+0xfc>  // b.pmore
  4019bc:	lsl	x8, x23, x8
  4019c0:	and	x8, x8, x24
  4019c4:	cbnz	x8, 4019e8 <apply_file+0x11c>
  4019c8:	mov	w2, #0x1                   	// #1
  4019cc:	mov	x0, x21
  4019d0:	bl	401170 <module_load_and_warn@plt>
  4019d4:	cmn	w0, #0x2
  4019d8:	b.eq	4019e8 <apply_file+0x11c>  // b.none
  4019dc:	cmp	w0, #0x0
  4019e0:	ccmp	w20, w25, #0x4, lt  // lt = tstop
  4019e4:	csel	w20, w0, w20, gt
  4019e8:	ldr	x0, [sp, #8]
  4019ec:	bl	4010e0 <free@plt>
  4019f0:	ldr	x0, [x29, #24]
  4019f4:	add	x3, sp, #0x8
  4019f8:	mov	w1, #0x100000              	// #1048576
  4019fc:	mov	w2, wzr
  401a00:	str	xzr, [sp, #8]
  401a04:	bl	401250 <read_line_full@plt>
  401a08:	mov	w22, w0
  401a0c:	tbz	w0, #31, 401998 <apply_file+0xcc>
  401a10:	mov	w0, wzr
  401a14:	bl	401120 <log_get_max_level_realm@plt>
  401a18:	cmp	w0, #0x3
  401a1c:	b.lt	401a68 <apply_file+0x19c>  // b.tstop
  401a20:	adrp	x2, 401000 <_init-0x18>
  401a24:	adrp	x4, 401000 <_init-0x18>
  401a28:	adrp	x5, 401000 <_init-0x18>
  401a2c:	add	x2, x2, #0xbeb
  401a30:	add	x4, x4, #0xe9b
  401a34:	add	x5, x5, #0xec6
  401a38:	mov	w0, #0x3                   	// #3
  401a3c:	mov	w3, #0x56                  	// #86
  401a40:	mov	w1, w22
  401a44:	mov	x6, x19
  401a48:	bl	401130 <log_internal_realm@plt>
  401a4c:	mov	w20, w0
  401a50:	b	401a74 <apply_file+0x1a8>
  401a54:	cmn	w20, #0x2
  401a58:	b.ne	401aa4 <apply_file+0x1d8>  // b.any
  401a5c:	tbz	w22, #0, 401aa4 <apply_file+0x1d8>
  401a60:	mov	w20, wzr
  401a64:	b	401a7c <apply_file+0x1b0>
  401a68:	mov	w8, wzr
  401a6c:	neg	w9, w22
  401a70:	sub	w20, w8, w9, uxtb
  401a74:	ldr	x0, [sp, #8]
  401a78:	bl	4010e0 <free@plt>
  401a7c:	ldr	x0, [x29, #24]
  401a80:	bl	401270 <safe_fclose@plt>
  401a84:	mov	w0, w20
  401a88:	ldp	x20, x19, [sp, #80]
  401a8c:	ldp	x22, x21, [sp, #64]
  401a90:	ldp	x24, x23, [sp, #48]
  401a94:	ldr	x25, [sp, #32]
  401a98:	ldp	x29, x30, [sp, #16]
  401a9c:	add	sp, sp, #0x60
  401aa0:	ret
  401aa4:	mov	w0, wzr
  401aa8:	bl	401120 <log_get_max_level_realm@plt>
  401aac:	cmp	w0, #0x3
  401ab0:	b.lt	401ae8 <apply_file+0x21c>  // b.tstop
  401ab4:	adrp	x2, 401000 <_init-0x18>
  401ab8:	adrp	x4, 401000 <_init-0x18>
  401abc:	adrp	x5, 401000 <_init-0x18>
  401ac0:	add	x2, x2, #0xbeb
  401ac4:	add	x4, x4, #0xe9b
  401ac8:	add	x5, x5, #0xea6
  401acc:	mov	w0, #0x3                   	// #3
  401ad0:	mov	w3, #0x4b                  	// #75
  401ad4:	mov	w1, w20
  401ad8:	mov	x6, x19
  401adc:	bl	401130 <log_internal_realm@plt>
  401ae0:	mov	w20, w0
  401ae4:	b	401a7c <apply_file+0x1b0>
  401ae8:	mov	w8, wzr
  401aec:	neg	w9, w20
  401af0:	sub	w20, w8, w9, uxtb
  401af4:	b	401a7c <apply_file+0x1b0>
  401af8:	adrp	x1, 401000 <_init-0x18>
  401afc:	adrp	x2, 401000 <_init-0x18>
  401b00:	adrp	x4, 401000 <_init-0x18>
  401b04:	add	x1, x1, #0xe58
  401b08:	add	x2, x2, #0xbeb
  401b0c:	add	x4, x4, #0xe5c
  401b10:	mov	w3, #0x43                  	// #67
  401b14:	bl	4011e0 <log_assert_failed_realm@plt>
  401b18:	adrp	x1, 401000 <_init-0x18>
  401b1c:	adrp	x2, 401000 <_init-0x18>
  401b20:	adrp	x4, 401000 <_init-0x18>
  401b24:	add	x1, x1, #0xe93
  401b28:	add	x2, x2, #0xbeb
  401b2c:	add	x4, x4, #0xe5c
  401b30:	mov	w3, #0x44                  	// #68
  401b34:	mov	w0, wzr
  401b38:	bl	4011e0 <log_assert_failed_realm@plt>
  401b3c:	udf	#0

0000000000401b40 <__libc_csu_init>:
  401b40:	stp	x29, x30, [sp, #-64]!
  401b44:	mov	x29, sp
  401b48:	stp	x19, x20, [sp, #16]
  401b4c:	adrp	x20, 41f000 <__FRAME_END__+0x1cf48>
  401b50:	add	x20, x20, #0xc80
  401b54:	stp	x21, x22, [sp, #32]
  401b58:	adrp	x21, 41f000 <__FRAME_END__+0x1cf48>
  401b5c:	add	x21, x21, #0xc78
  401b60:	sub	x20, x20, x21
  401b64:	mov	w22, w0
  401b68:	stp	x23, x24, [sp, #48]
  401b6c:	mov	x23, x1
  401b70:	mov	x24, x2
  401b74:	bl	401018 <_init>
  401b78:	cmp	xzr, x20, asr #3
  401b7c:	b.eq	401ba8 <__libc_csu_init+0x68>  // b.none
  401b80:	asr	x20, x20, #3
  401b84:	mov	x19, #0x0                   	// #0
  401b88:	ldr	x3, [x21, x19, lsl #3]
  401b8c:	mov	x2, x24
  401b90:	add	x19, x19, #0x1
  401b94:	mov	x1, x23
  401b98:	mov	w0, w22
  401b9c:	blr	x3
  401ba0:	cmp	x20, x19
  401ba4:	b.ne	401b88 <__libc_csu_init+0x48>  // b.any
  401ba8:	ldp	x19, x20, [sp, #16]
  401bac:	ldp	x21, x22, [sp, #32]
  401bb0:	ldp	x23, x24, [sp, #48]
  401bb4:	ldp	x29, x30, [sp], #64
  401bb8:	ret
  401bbc:	nop

0000000000401bc0 <__libc_csu_fini>:
  401bc0:	ret

Disassembly of section .fini:

0000000000401bc4 <_fini>:
  401bc4:	stp	x29, x30, [sp, #-16]!
  401bc8:	mov	x29, sp
  401bcc:	ldp	x29, x30, [sp], #16
  401bd0:	ret
