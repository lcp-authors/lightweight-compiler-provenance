
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sfs.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xbfc>:
   0:	mov	x3, #0x0                   	// #0
   4:	cmp	x2, x3
   8:	b.ne	10 <grub_mod_init-0xbec>  // b.any
   c:	ret
  10:	ldrsb	w5, [x1, x3]
  14:	ldrb	w4, [x1, x3]
  18:	tbnz	w5, #31, 28 <grub_mod_init-0xbd4>
  1c:	strb	w4, [x0], #1
  20:	add	x3, x3, #0x1
  24:	b	4 <grub_mod_init-0xbf8>
  28:	mov	x5, x0
  2c:	lsr	w4, w4, #6
  30:	orr	w4, w4, #0xffffffc0
  34:	strb	w4, [x5], #2
  38:	ldrb	w4, [x1, x3]
  3c:	and	w4, w4, #0x3f
  40:	orr	w4, w4, #0xffffff80
  44:	strb	w4, [x0, #1]
  48:	mov	x0, x5
  4c:	b	20 <grub_mod_init-0xbdc>
  50:	stp	x29, x30, [sp, #-48]!
  54:	mov	x29, sp
  58:	stp	x21, x22, [sp, #32]
  5c:	mov	x21, x0
  60:	ldr	x22, [x0]
  64:	stp	x19, x20, [sp, #16]
  68:	mov	w20, #0x200                 	// #512
  6c:	ldr	w0, [x22, #176]
  70:	lsl	w0, w20, w0
  74:	sxtw	x0, w0
  78:	bl	0 <grub_malloc>
  7c:	cbz	x0, c0 <grub_mod_init-0xb3c>
  80:	ldr	w1, [x21, #8]
  84:	mov	x4, x0
  88:	mov	x19, x0
  8c:	ldr	w0, [x22, #176]
  90:	mov	x2, #0x0                   	// #0
  94:	lsl	w3, w20, w0
  98:	lsl	x1, x1, x0
  9c:	sxtw	x3, w3
  a0:	ldr	x0, [x22, #168]
  a4:	bl	0 <grub_disk_read>
  a8:	adrp	x0, 0 <grub_mod_init-0xbfc>
  ac:	ldr	x0, [x0]
  b0:	ldr	w0, [x0]
  b4:	cbz	w0, c8 <grub_mod_init-0xb34>
  b8:	mov	x0, x19
  bc:	bl	0 <grub_free>
  c0:	mov	x21, #0x0                   	// #0
  c4:	b	f0 <grub_mod_init-0xb0c>
  c8:	ldr	w0, [x22, #176]
  cc:	lsl	w0, w20, w0
  d0:	lsl	w0, w0, #1
  d4:	sub	w0, w0, #0x2f
  d8:	sxtw	x0, w0
  dc:	bl	0 <grub_malloc>
  e0:	mov	x21, x0
  e4:	cbnz	x0, 104 <grub_mod_init-0xaf8>
  e8:	mov	x0, x19
  ec:	bl	0 <grub_free>
  f0:	mov	x0, x21
  f4:	ldp	x19, x20, [sp, #16]
  f8:	ldp	x21, x22, [sp, #32]
  fc:	ldp	x29, x30, [sp], #48
 100:	ret
 104:	ldr	w2, [x22, #176]
 108:	add	x1, x19, #0x18
 10c:	lsl	w2, w20, w2
 110:	sub	w2, w2, #0x18
 114:	sxtw	x2, w2
 118:	bl	0 <grub_mod_init-0xbfc>
 11c:	strb	wzr, [x0]
 120:	b	e8 <grub_mod_init-0xb14>
 124:	nop
	...
 130:	stp	x29, x30, [sp, #-64]!
 134:	mov	x29, sp
 138:	stp	x19, x20, [sp, #16]
 13c:	stp	x21, x22, [sp, #32]
 140:	mov	x21, x0
 144:	mov	x0, #0xc0                  	// #192
 148:	str	x23, [sp, #48]
 14c:	bl	0 <grub_malloc>
 150:	mov	x19, x0
 154:	cbz	x0, 2a8 <grub_mod_init-0x954>
 158:	mov	x4, x0
 15c:	mov	x3, #0x70                  	// #112
 160:	mov	x0, x21
 164:	mov	x2, #0x0                   	// #0
 168:	mov	x1, #0x0                   	// #0
 16c:	bl	0 <grub_disk_read>
 170:	adrp	x0, 0 <grub_mod_init-0xbfc>
 174:	ldr	x22, [x0]
 178:	ldr	w0, [x22]
 17c:	cbnz	w0, 1c8 <grub_mod_init-0xa34>
 180:	adrp	x0, 0 <grub_mod_init-0xbfc>
 184:	mov	x2, #0x4                   	// #4
 188:	ldr	x1, [x0]
 18c:	mov	x0, x19
 190:	bl	0 <grub_strncmp>
 194:	cbnz	w0, 1b8 <grub_mod_init-0xa44>
 198:	ldr	w1, [x19, #52]
 19c:	cbz	w1, 1b8 <grub_mod_init-0xa44>
 1a0:	sub	w0, w1, #0x1
 1a4:	mov	w2, #0xf0                  	// #240
 1a8:	movk	w2, #0xff01, lsl #16
 1ac:	orr	w0, w0, w2
 1b0:	tst	w0, w1
 1b4:	b.eq	200 <grub_mod_init-0x9fc>  // b.none
 1b8:	adrp	x0, 0 <grub_mod_init-0xbfc>
 1bc:	ldr	x1, [x0]
 1c0:	mov	w0, #0x9                   	// #9
 1c4:	bl	0 <grub_error>
 1c8:	mov	x20, #0x0                   	// #0
 1cc:	ldr	w0, [x22]
 1d0:	cmp	w0, #0xb
 1d4:	b.ne	1e8 <grub_mod_init-0xa14>  // b.any
 1d8:	adrp	x0, 0 <grub_mod_init-0xbfc>
 1dc:	ldr	x1, [x0]
 1e0:	mov	w0, #0x9                   	// #9
 1e4:	bl	0 <grub_error>
 1e8:	mov	x0, x19
 1ec:	bl	0 <grub_free>
 1f0:	mov	x0, x20
 1f4:	mov	x19, #0x0                   	// #0
 1f8:	bl	0 <grub_free>
 1fc:	b	2a8 <grub_mod_init-0x954>
 200:	mov	w0, #0x9                   	// #9
 204:	str	w0, [x19, #176]
 208:	rev	w0, w1
 20c:	mov	w3, #0x1                   	// #1
 210:	ldr	w1, [x19, #176]
 214:	lsl	w2, w3, w1
 218:	cmp	w2, w0
 21c:	b.cc	2c0 <grub_mod_init-0x93c>  // b.lo, b.ul, b.last
 220:	ldrsb	w0, [x19, #20]
 224:	sub	w1, w1, #0x9
 228:	mov	w23, #0x200                 	// #512
 22c:	cmp	w0, #0x0
 230:	mov	w0, #0x100                 	// #256
 234:	csel	w0, wzr, w0, lt  // lt = tstop
 238:	stp	w1, w0, [x19, #176]
 23c:	lsl	w1, w23, w1
 240:	sxtw	x0, w1
 244:	bl	0 <grub_malloc>
 248:	mov	x20, x0
 24c:	cbz	x0, 1c8 <grub_mod_init-0xa34>
 250:	ldr	w1, [x19, #176]
 254:	mov	x4, x0
 258:	ldr	w0, [x19, #104]
 25c:	mov	x2, #0x0                   	// #0
 260:	rev	w0, w0
 264:	lsl	w3, w23, w1
 268:	sxtw	x3, w3
 26c:	lsl	x1, x0, x1
 270:	mov	x0, x21
 274:	bl	0 <grub_disk_read>
 278:	ldr	w0, [x22]
 27c:	cbnz	w0, 1cc <grub_mod_init-0xa30>
 280:	ldr	w0, [x20, #40]
 284:	str	x19, [x19, #112]
 288:	rev	w0, w0
 28c:	stp	w0, wzr, [x19, #120]
 290:	stp	xzr, x21, [x19, #160]
 294:	add	x0, x20, #0x31
 298:	bl	0 <grub_strdup>
 29c:	str	x0, [x19, #184]
 2a0:	mov	x0, x20
 2a4:	bl	0 <grub_free>
 2a8:	mov	x0, x19
 2ac:	ldp	x19, x20, [sp, #16]
 2b0:	ldp	x21, x22, [sp, #32]
 2b4:	ldr	x23, [sp, #48]
 2b8:	ldp	x29, x30, [sp], #64
 2bc:	ret
 2c0:	add	w1, w1, #0x1
 2c4:	str	w1, [x19, #176]
 2c8:	b	210 <grub_mod_init-0x9ec>
 2cc:	nop
	...
 2f0:	stp	x29, x30, [sp, #-48]!
 2f4:	mov	x29, sp
 2f8:	ldr	x0, [x0]
 2fc:	stp	x19, x20, [sp, #16]
 300:	str	x21, [sp, #32]
 304:	mov	x21, x1
 308:	bl	130 <grub_mod_init-0xacc>
 30c:	mov	x19, x0
 310:	cbz	x0, 34c <grub_mod_init-0x8b0>
 314:	ldr	x0, [x0, #184]
 318:	bl	0 <grub_strlen>
 31c:	mov	x20, x0
 320:	lsl	x0, x0, #1
 324:	add	x0, x0, #0x1
 328:	bl	0 <grub_malloc>
 32c:	str	x0, [x21]
 330:	cbz	x0, 344 <grub_mod_init-0x8b8>
 334:	ldr	x1, [x19, #184]
 338:	mov	x2, x20
 33c:	bl	0 <grub_mod_init-0xbfc>
 340:	strb	wzr, [x0]
 344:	ldr	x0, [x19, #184]
 348:	bl	0 <grub_free>
 34c:	mov	x0, x19
 350:	bl	0 <grub_free>
 354:	adrp	x0, 0 <grub_mod_init-0xbfc>
 358:	ldp	x19, x20, [sp, #16]
 35c:	ldr	x0, [x0]
 360:	ldr	x21, [sp, #32]
 364:	ldr	w0, [x0]
 368:	ldp	x29, x30, [sp], #48
 36c:	ret
	...
 378:	stp	x29, x30, [sp, #-128]!
 37c:	mov	x29, sp
 380:	stp	x21, x22, [sp, #32]
 384:	mov	w22, #0x200                 	// #512
 388:	ldr	x21, [x0]
 38c:	stp	x19, x20, [sp, #16]
 390:	ldr	w20, [x0, #8]
 394:	stp	x23, x24, [sp, #48]
 398:	ldr	w0, [x21, #176]
 39c:	stp	x25, x26, [sp, #64]
 3a0:	lsl	w0, w22, w0
 3a4:	stp	x27, x28, [sp, #80]
 3a8:	sxtw	x0, w0
 3ac:	stp	x1, x2, [sp, #104]
 3b0:	bl	0 <grub_malloc>
 3b4:	mov	x19, x0
 3b8:	cbz	x0, 3c4 <grub_mod_init-0x838>
 3bc:	str	w22, [sp, #124]
 3c0:	cbnz	w20, 3ec <grub_mod_init-0x810>
 3c4:	mov	x0, x19
 3c8:	bl	0 <grub_free>
 3cc:	mov	w0, #0x0                   	// #0
 3d0:	ldp	x19, x20, [sp, #16]
 3d4:	ldp	x21, x22, [sp, #32]
 3d8:	ldp	x23, x24, [sp, #48]
 3dc:	ldp	x25, x26, [sp, #64]
 3e0:	ldp	x27, x28, [sp, #80]
 3e4:	ldp	x29, x30, [sp], #128
 3e8:	ret
 3ec:	ldr	w1, [x21, #176]
 3f0:	mov	w20, w20
 3f4:	ldr	w0, [sp, #124]
 3f8:	mov	x4, x19
 3fc:	mov	x2, #0x0                   	// #0
 400:	lsl	w3, w0, w1
 404:	ldr	x0, [x21, #168]
 408:	sxtw	x3, w3
 40c:	lsl	x1, x20, x1
 410:	bl	0 <grub_disk_read>
 414:	adrp	x0, 0 <grub_mod_init-0xbfc>
 418:	ldr	x0, [x0]
 41c:	ldr	w0, [x0]
 420:	cbnz	w0, 3c4 <grub_mod_init-0x838>
 424:	mov	w20, #0x18                  	// #24
 428:	ldr	w1, [x21, #176]
 42c:	mov	w28, w20
 430:	add	x0, x28, #0x1b
 434:	add	w1, w1, #0x9
 438:	lsr	x0, x0, x1
 43c:	cbz	x0, 44c <grub_mod_init-0x7b0>
 440:	ldr	w20, [x19, #16]
 444:	rev	w20, w20
 448:	b	3c0 <grub_mod_init-0x83c>
 44c:	add	x28, x19, x28
 450:	add	w20, w20, #0x1c
 454:	add	x23, x28, #0x19
 458:	mov	x0, x23
 45c:	bl	0 <grub_strlen>
 460:	mov	x24, x0
 464:	add	x0, x0, #0x1
 468:	add	x0, x23, x0
 46c:	bl	0 <grub_strlen>
 470:	add	x24, x24, x0
 474:	ldrb	w0, [x28, #25]
 478:	add	w20, w20, w24
 47c:	and	w20, w20, #0xfffffffe
 480:	cbz	w0, 428 <grub_mod_init-0x7d4>
 484:	ldrb	w0, [x28, #24]
 488:	tbnz	w0, #5, 428 <grub_mod_init-0x7d4>
 48c:	ldr	w24, [x28, #16]
 490:	rev	w1, w24
 494:	str	w1, [sp, #120]
 498:	tbnz	w0, #6, 4f8 <grub_mod_init-0x704>
 49c:	tbnz	w0, #7, 500 <grub_mod_init-0x6fc>
 4a0:	mov	w27, #0x1                   	// #1
 4a4:	ldr	w1, [x28, #12]
 4a8:	rev	w24, w1
 4ac:	ldr	w28, [x28, #20]
 4b0:	mov	x0, x23
 4b4:	bl	0 <grub_strlen>
 4b8:	mov	x26, x0
 4bc:	mov	x0, #0x38                  	// #56
 4c0:	bl	0 <grub_malloc>
 4c4:	mov	x22, x0
 4c8:	cbz	x0, 4e8 <grub_mod_init-0x714>
 4cc:	lsl	x0, x26, #1
 4d0:	add	x0, x0, #0x1
 4d4:	bl	0 <grub_malloc>
 4d8:	mov	x25, x0
 4dc:	cbnz	x0, 50c <grub_mod_init-0x6f0>
 4e0:	mov	x0, x22
 4e4:	bl	0 <grub_free>
 4e8:	mov	x0, x19
 4ec:	bl	0 <grub_free>
 4f0:	mov	w0, #0x1                   	// #1
 4f4:	b	3d0 <grub_mod_init-0x82c>
 4f8:	mov	w27, #0x3                   	// #3
 4fc:	b	4a4 <grub_mod_init-0x758>
 500:	ldr	w24, [sp, #120]
 504:	mov	w27, #0x2                   	// #2
 508:	b	4ac <grub_mod_init-0x750>
 50c:	ldr	w1, [sp, #120]
 510:	rev	w28, w28
 514:	str	x21, [x22]
 518:	mov	x2, x26
 51c:	stp	w24, w1, [x22, #8]
 520:	mov	x1, x23
 524:	stp	w28, wzr, [x22, #16]
 528:	str	w24, [x22, #24]
 52c:	stp	xzr, xzr, [x22, #32]
 530:	str	xzr, [x22, #48]
 534:	bl	0 <grub_mod_init-0xbfc>
 538:	strb	wzr, [x0]
 53c:	ldp	x4, x3, [sp, #104]
 540:	mov	x2, x22
 544:	ldr	w1, [x21, #180]
 548:	mov	x0, x25
 54c:	orr	w1, w27, w1
 550:	blr	x4
 554:	mov	w23, w0
 558:	mov	x0, x25
 55c:	bl	0 <grub_free>
 560:	cbz	w23, 428 <grub_mod_init-0x7d4>
 564:	b	4e8 <grub_mod_init-0x714>
	...
 570:	stp	x29, x30, [sp, #-32]!
 574:	mov	x29, sp
 578:	str	x19, [sp, #16]
 57c:	ldr	x19, [x0, #80]
 580:	ldr	x0, [x19, #160]
 584:	bl	0 <grub_free>
 588:	ldr	x0, [x19, #184]
 58c:	bl	0 <grub_free>
 590:	mov	x0, x19
 594:	bl	0 <grub_free>
 598:	adrp	x0, 0 <grub_mod_init-0xbfc>
 59c:	ldr	x0, [x0]
 5a0:	ldr	x0, [x0]
 5a4:	bl	0 <grub_dl_unref>
 5a8:	mov	w0, #0x0                   	// #0
 5ac:	ldr	x19, [sp, #16]
 5b0:	ldp	x29, x30, [sp], #32
 5b4:	ret
	...
 5c0:	sub	sp, sp, #0x30
 5c4:	mov	x5, x2
 5c8:	mov	x6, x1
 5cc:	stp	x29, x30, [sp, #32]
 5d0:	add	x29, sp, #0x20
 5d4:	ldr	x8, [x0, #80]
 5d8:	add	x1, x8, #0x70
 5dc:	ldr	x9, [x8, #112]
 5e0:	str	xzr, [sp, #16]
 5e4:	ldr	w3, [x9, #176]
 5e8:	str	w3, [sp, #8]
 5ec:	ldr	w3, [x8, #124]
 5f0:	str	x3, [sp]
 5f4:	adrp	x3, 0 <grub_mod_init-0xbfc>
 5f8:	ldr	x4, [x0, #24]
 5fc:	ldr	x7, [x3]
 600:	ldp	x2, x3, [x0, #88]
 604:	ldr	x0, [x9, #168]
 608:	bl	0 <grub_fshelp_read_file>
 60c:	ldp	x29, x30, [sp, #32]
 610:	add	sp, sp, #0x30
 614:	ret
	...
 620:	stp	x29, x30, [sp, #-112]!
 624:	mov	x29, sp
 628:	stp	x19, x20, [sp, #16]
 62c:	mov	x19, x0
 630:	stp	x21, x22, [sp, #32]
 634:	stp	x23, x24, [sp, #48]
 638:	stp	x25, x26, [sp, #64]
 63c:	stp	x27, x28, [sp, #80]
 640:	cbnz	x1, 664 <grub_mod_init-0x598>
 644:	ldr	w0, [x0, #8]
 648:	ldp	x19, x20, [sp, #16]
 64c:	ldp	x21, x22, [sp, #32]
 650:	ldp	x23, x24, [sp, #48]
 654:	ldp	x25, x26, [sp, #64]
 658:	ldp	x27, x28, [sp, #80]
 65c:	ldp	x29, x30, [sp], #112
 660:	ret
 664:	ldr	x0, [x0, #48]
 668:	mov	x22, x1
 66c:	cbnz	x0, 6c0 <grub_mod_init-0x53c>
 670:	ldr	x0, [x19]
 674:	ldr	w20, [x0, #176]
 678:	str	xzr, [x19, #40]
 67c:	add	w0, w20, #0x18
 680:	ldr	w20, [x19, #12]
 684:	lsr	w20, w20, w0
 688:	add	w20, w20, #0x3
 68c:	cmp	x20, #0x8
 690:	mov	x0, #0x8                   	// #8
 694:	csel	x20, x20, x0, cs  // cs = hs, nlast
 698:	ldr	w0, [x19, #8]
 69c:	stp	wzr, w0, [x19, #20]
 6a0:	lsl	x0, x20, #3
 6a4:	bl	0 <grub_malloc>
 6a8:	str	x0, [x19, #48]
 6ac:	cbnz	x0, 70c <grub_mod_init-0x4f0>
 6b0:	adrp	x0, 0 <grub_mod_init-0xbfc>
 6b4:	str	xzr, [x19, #32]
 6b8:	ldr	x0, [x0]
 6bc:	str	wzr, [x0]
 6c0:	ldr	w23, [x19, #20]
 6c4:	cmp	x23, x22
 6c8:	b.ls	750 <grub_mod_init-0x4ac>  // b.plast
 6cc:	ldr	x4, [x19, #40]
 6d0:	mov	w0, #0x0                   	// #0
 6d4:	lsr	x1, x4, x0
 6d8:	cbnz	x1, 71c <grub_mod_init-0x4e0>
 6dc:	ldr	x3, [x19, #48]
 6e0:	sub	w0, w0, #0x1
 6e4:	mov	w5, #0x1                   	// #1
 6e8:	cmn	w0, #0x1
 6ec:	b.ne	724 <grub_mod_init-0x4d8>  // b.any
 6f0:	ubfiz	x1, x1, #3, #32
 6f4:	add	x0, x3, x1
 6f8:	ldr	w20, [x3, x1]
 6fc:	ldr	w0, [x0, #4]
 700:	add	x0, x0, x22
 704:	sub	x0, x0, x20
 708:	b	648 <grub_mod_init-0x5b4>
 70c:	ldr	w1, [x19, #8]
 710:	str	x20, [x19, #32]
 714:	stp	wzr, w1, [x0]
 718:	b	6c0 <grub_mod_init-0x53c>
 71c:	add	w0, w0, #0x1
 720:	b	6d4 <grub_mod_init-0x528>
 724:	lsl	w2, w5, w0
 728:	orr	w6, w2, w1
 72c:	orr	w2, w2, w1
 730:	cmp	x4, x2
 734:	b.ls	748 <grub_mod_init-0x4b4>  // b.plast
 738:	lsl	x2, x2, #3
 73c:	ldr	w2, [x3, x2]
 740:	cmp	x2, x22
 744:	csel	w1, w1, w6, hi  // hi = pmore
 748:	sub	w0, w0, #0x1
 74c:	b	6e8 <grub_mod_init-0x514>
 750:	ldr	w20, [x19, #24]
 754:	mov	w24, #0x0                   	// #0
 758:	mov	w21, #0x0                   	// #0
 75c:	adrp	x27, 0 <grub_mod_init-0xbfc>
 760:	cbnz	w20, 77c <grub_mod_init-0x480>
 764:	adrp	x0, 0 <grub_mod_init-0xbfc>
 768:	ldr	x1, [x0]
 76c:	mov	w0, #0x6                   	// #6
 770:	bl	0 <grub_error>
 774:	mov	x0, #0x0                   	// #0
 778:	b	648 <grub_mod_init-0x5b4>
 77c:	ldr	x26, [x19]
 780:	mov	w0, #0x200                 	// #512
 784:	ldr	w3, [x26, #176]
 788:	lsl	w3, w0, w3
 78c:	sxtw	x28, w3
 790:	mov	x0, x28
 794:	bl	0 <grub_malloc>
 798:	ldr	x25, [x27]
 79c:	mov	x4, x0
 7a0:	cbnz	x0, 820 <grub_mod_init-0x3dc>
 7a4:	ldr	w0, [x25]
 7a8:	cbnz	w0, 774 <grub_mod_init-0x488>
 7ac:	ldr	x0, [x19, #48]
 7b0:	cbz	x0, 7dc <grub_mod_init-0x420>
 7b4:	ldp	x1, x2, [x19, #32]
 7b8:	cmp	x2, x1
 7bc:	b.cc	7dc <grub_mod_init-0x420>  // b.lo, b.ul, b.last
 7c0:	lsl	x1, x1, #4
 7c4:	bl	0 <grub_realloc>
 7c8:	cbnz	x0, 8f4 <grub_mod_init-0x308>
 7cc:	ldr	x0, [x19, #48]
 7d0:	str	wzr, [x25]
 7d4:	bl	0 <grub_free>
 7d8:	str	xzr, [x19, #48]
 7dc:	ldr	x1, [x19, #48]
 7e0:	cbz	x1, 808 <grub_mod_init-0x3f4>
 7e4:	add	w0, w21, w23
 7e8:	stp	w0, w24, [x19, #20]
 7ec:	ldr	x0, [x19, #40]
 7f0:	lsl	x3, x0, #3
 7f4:	add	x2, x1, x0, lsl #3
 7f8:	add	x0, x0, #0x1
 7fc:	str	w23, [x1, x3]
 800:	str	w20, [x2, #4]
 804:	str	x0, [x19, #40]
 808:	sub	x0, x22, x23
 80c:	mov	w1, w21
 810:	cmp	x0, w21, uxth
 814:	b.cs	908 <grub_mod_init-0x2f4>  // b.hs, b.nlast
 818:	add	x0, x0, w20, uxtw
 81c:	b	648 <grub_mod_init-0x5b4>
 820:	ldr	w5, [x26, #108]
 824:	rev	w5, w5
 828:	ldr	w0, [x26, #176]
 82c:	mov	w1, w5
 830:	mov	x3, x28
 834:	mov	x2, #0x0                   	// #0
 838:	str	x4, [sp, #96]
 83c:	lsl	x1, x1, x0
 840:	str	w5, [sp, #108]
 844:	ldr	x0, [x26, #168]
 848:	bl	0 <grub_disk_read>
 84c:	ldr	w0, [x25]
 850:	ldr	w5, [sp, #108]
 854:	ldr	x4, [sp, #96]
 858:	cbz	w0, 868 <grub_mod_init-0x394>
 85c:	mov	x0, x4
 860:	bl	0 <grub_free>
 864:	b	7a4 <grub_mod_init-0x458>
 868:	ldrb	w1, [x4, #13]
 86c:	ldrh	w0, [x4, #12]
 870:	ldrb	w2, [x4, #15]
 874:	orr	w0, w1, w0, lsl #8
 878:	and	w0, w0, #0xffff
 87c:	mul	w1, w2, w0
 880:	cmp	x28, x1
 884:	b.cc	8b0 <grub_mod_init-0x34c>  // b.lo, b.ul, b.last
 888:	sub	w1, w0, #0x1
 88c:	neg	w7, w2
 890:	ldrb	w8, [x4, #14]
 894:	sxtw	x7, w7
 898:	mul	w1, w1, w2
 89c:	sxtw	x1, w1
 8a0:	add	x1, x1, #0x10
 8a4:	add	x1, x4, x1
 8a8:	cbnz	w0, 8cc <grub_mod_init-0x330>
 8ac:	cbz	w8, 828 <grub_mod_init-0x3d4>
 8b0:	mov	x0, x4
 8b4:	bl	0 <grub_free>
 8b8:	adrp	x0, 0 <grub_mod_init-0xbfc>
 8bc:	ldr	x1, [x0]
 8c0:	mov	w0, #0x6                   	// #6
 8c4:	bl	0 <grub_error>
 8c8:	b	7a8 <grub_mod_init-0x454>
 8cc:	ldr	w2, [x1]
 8d0:	rev	w2, w2
 8d4:	cmp	w20, w2
 8d8:	b.cc	8e8 <grub_mod_init-0x314>  // b.lo, b.ul, b.last
 8dc:	cbnz	w8, 914 <grub_mod_init-0x2e8>
 8e0:	ldr	w5, [x1, #4]
 8e4:	b	824 <grub_mod_init-0x3d8>
 8e8:	sub	w0, w0, #0x1
 8ec:	add	x1, x1, x7
 8f0:	b	8a8 <grub_mod_init-0x354>
 8f4:	ldr	x1, [x19, #32]
 8f8:	str	x0, [x19, #48]
 8fc:	lsl	x1, x1, #1
 900:	str	x1, [x19, #32]
 904:	b	7dc <grub_mod_init-0x420>
 908:	add	x23, x23, x1
 90c:	mov	w20, w24
 910:	b	760 <grub_mod_init-0x49c>
 914:	b.ne	8e8 <grub_mod_init-0x314>  // b.any
 918:	ldrb	w0, [x1, #13]
 91c:	ldrh	w21, [x1, #12]
 920:	ldr	w24, [x1, #4]
 924:	orr	w21, w0, w21, lsl #8
 928:	rev	w24, w24
 92c:	and	w21, w21, #0xffff
 930:	mov	x0, x4
 934:	bl	0 <grub_free>
 938:	b	7ac <grub_mod_init-0x450>
 93c:	nop
	...
 958:	stp	x29, x30, [sp, #-96]!
 95c:	mov	x29, sp
 960:	stp	x19, x20, [sp, #16]
 964:	mov	x20, x0
 968:	adrp	x0, 0 <grub_mod_init-0xbfc>
 96c:	stp	x23, x24, [sp, #48]
 970:	ldr	x24, [x0]
 974:	stp	x21, x22, [sp, #32]
 978:	mov	x21, x1
 97c:	str	xzr, [sp, #88]
 980:	ldr	x0, [x24]
 984:	str	x25, [sp, #64]
 988:	bl	0 <grub_dl_ref>
 98c:	ldr	x0, [x20, #8]
 990:	ldr	x0, [x0]
 994:	bl	130 <grub_mod_init-0xacc>
 998:	mov	x19, x0
 99c:	adrp	x0, 0 <grub_mod_init-0xbfc>
 9a0:	ldr	x25, [x0]
 9a4:	cbz	x19, a38 <grub_mod_init-0x1c4>
 9a8:	adrp	x0, 0 <grub_mod_init-0xbfc>
 9ac:	add	x23, x19, #0x70
 9b0:	add	x2, sp, #0x58
 9b4:	mov	x1, x23
 9b8:	ldr	x4, [x0]
 9bc:	adrp	x0, 0 <grub_mod_init-0xbfc>
 9c0:	mov	w5, #0x1                   	// #1
 9c4:	ldr	x3, [x0]
 9c8:	mov	x0, x21
 9cc:	bl	0 <grub_fshelp_find_file>
 9d0:	ldr	w22, [x25]
 9d4:	ldr	x21, [sp, #88]
 9d8:	cbnz	w22, a20 <grub_mod_init-0x1dc>
 9dc:	ldr	w0, [x21, #12]
 9e0:	mov	x1, x21
 9e4:	str	x0, [x20, #64]
 9e8:	mov	x2, #0x38                  	// #56
 9ec:	mov	x0, x23
 9f0:	bl	0 <memcpy>
 9f4:	mov	x0, x21
 9f8:	bl	0 <grub_free>
 9fc:	str	xzr, [x20, #24]
 a00:	str	x19, [x20, #80]
 a04:	mov	w0, w22
 a08:	ldp	x19, x20, [sp, #16]
 a0c:	ldp	x21, x22, [sp, #32]
 a10:	ldp	x23, x24, [sp, #48]
 a14:	ldr	x25, [sp, #64]
 a18:	ldp	x29, x30, [sp], #96
 a1c:	ret
 a20:	cmp	x23, x21
 a24:	b.eq	a30 <grub_mod_init-0x1cc>  // b.none
 a28:	mov	x0, x21
 a2c:	bl	0 <grub_free>
 a30:	ldr	x0, [x19, #184]
 a34:	bl	0 <grub_free>
 a38:	mov	x0, x19
 a3c:	bl	0 <grub_free>
 a40:	ldr	x0, [x24]
 a44:	bl	0 <grub_dl_unref>
 a48:	ldr	w22, [x25]
 a4c:	b	a04 <grub_mod_init-0x1f8>
	...
 a70:	stp	x29, x30, [sp, #-96]!
 a74:	mov	x29, sp
 a78:	stp	x19, x20, [sp, #16]
 a7c:	mov	x19, x0
 a80:	adrp	x0, 0 <grub_mod_init-0xbfc>
 a84:	stp	x21, x22, [sp, #32]
 a88:	mov	x20, x1
 a8c:	ldr	x21, [x0]
 a90:	stp	xzr, x2, [sp, #72]
 a94:	str	x3, [sp, #88]
 a98:	ldr	x0, [x21]
 a9c:	str	x23, [sp, #48]
 aa0:	bl	0 <grub_dl_ref>
 aa4:	ldr	x0, [x19]
 aa8:	bl	130 <grub_mod_init-0xacc>
 aac:	mov	x19, x0
 ab0:	adrp	x0, 0 <grub_mod_init-0xbfc>
 ab4:	ldr	x22, [x0]
 ab8:	cbz	x19, b18 <grub_mod_init-0xe4>
 abc:	adrp	x0, 0 <grub_mod_init-0xbfc>
 ac0:	add	x23, x19, #0x70
 ac4:	add	x2, sp, #0x48
 ac8:	mov	x1, x23
 acc:	ldr	x4, [x0]
 ad0:	adrp	x0, 0 <grub_mod_init-0xbfc>
 ad4:	mov	w5, #0x2                   	// #2
 ad8:	ldr	x3, [x0]
 adc:	mov	x0, x20
 ae0:	bl	0 <grub_fshelp_find_file>
 ae4:	ldr	w0, [x22]
 ae8:	cbnz	w0, b00 <grub_mod_init-0xfc>
 aec:	adrp	x0, 0 <grub_mod_init-0xbfc>
 af0:	add	x2, sp, #0x50
 af4:	ldr	x1, [x0]
 af8:	ldr	x0, [sp, #72]
 afc:	bl	378 <grub_mod_init-0x884>
 b00:	ldr	x0, [sp, #72]
 b04:	cmp	x23, x0
 b08:	b.eq	b10 <grub_mod_init-0xec>  // b.none
 b0c:	bl	0 <grub_free>
 b10:	ldr	x0, [x19, #184]
 b14:	bl	0 <grub_free>
 b18:	mov	x0, x19
 b1c:	bl	0 <grub_free>
 b20:	ldr	x0, [x21]
 b24:	bl	0 <grub_dl_unref>
 b28:	ldr	w0, [x22]
 b2c:	ldp	x19, x20, [sp, #16]
 b30:	ldp	x21, x22, [sp, #32]
 b34:	ldr	x23, [sp, #48]
 b38:	ldp	x29, x30, [sp], #96
 b3c:	ret
	...
 b68:	stp	x29, x30, [sp, #-64]!
 b6c:	mov	x29, sp
 b70:	stp	x19, x20, [sp, #16]
 b74:	mov	x19, x2
 b78:	mov	w20, w1
 b7c:	mov	x2, #0x10                  	// #16
 b80:	mov	w1, #0x0                   	// #0
 b84:	stp	x21, x22, [sp, #32]
 b88:	mov	x21, x3
 b8c:	mov	x22, x0
 b90:	add	x0, sp, #0x30
 b94:	bl	0 <grub_memset>
 b98:	ldr	w0, [x19, #16]
 b9c:	mov	w1, #0x3f00                	// #16128
 ba0:	and	w20, w20, #0xff
 ba4:	movk	w1, #0xf0c, lsl #16
 ba8:	add	w0, w0, w1
 bac:	cmp	w20, #0x2
 bb0:	str	w0, [sp, #52]
 bb4:	cset	w1, eq  // eq = none
 bb8:	ldrb	w0, [sp, #48]
 bbc:	orr	w1, w1, #0x2
 bc0:	and	w0, w0, #0xfffffffc
 bc4:	orr	w1, w1, w0
 bc8:	strb	w1, [sp, #48]
 bcc:	ldr	x0, [x19, #48]
 bd0:	bl	0 <grub_free>
 bd4:	mov	x0, x19
 bd8:	bl	0 <grub_free>
 bdc:	ldp	x3, x2, [x21]
 be0:	add	x1, sp, #0x30
 be4:	mov	x0, x22
 be8:	blr	x3
 bec:	ldp	x19, x20, [sp, #16]
 bf0:	ldp	x21, x22, [sp, #32]
 bf4:	ldp	x29, x30, [sp], #64
 bf8:	ret

0000000000000bfc <grub_mod_init>:
 bfc:	stp	x29, x30, [sp, #-32]!
 c00:	mov	x29, sp
 c04:	str	x19, [sp, #16]
 c08:	mov	x19, x0
 c0c:	adrp	x0, 0 <grub_mod_init-0xbfc>
 c10:	ldr	x1, [x0]
 c14:	adrp	x0, 0 <grub_mod_init-0xbfc>
 c18:	ldr	x0, [x0]
 c1c:	bl	0 <grub_list_push>
 c20:	adrp	x0, 0 <grub_mod_init-0xbfc>
 c24:	ldr	x0, [x0]
 c28:	str	x19, [x0]
 c2c:	ldr	x19, [sp, #16]
 c30:	ldp	x29, x30, [sp], #32
 c34:	ret
	...

0000000000000c50 <grub_mod_fini>:
 c50:	adrp	x0, 0 <grub_mod_init-0xbfc>
 c54:	ldr	x0, [x0]
 c58:	b	0 <grub_list_remove>
 c5c:	nop
	...
