
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_heapq.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000aa0 <.init>:
 aa0:	stp	x29, x30, [sp, #-16]!
 aa4:	mov	x29, sp
 aa8:	bl	b90 <PyModule_AddObject@plt+0x10>
 aac:	ldp	x29, x30, [sp], #16
 ab0:	ret

Disassembly of section .plt:

0000000000000ac0 <__cxa_finalize@plt-0x20>:
 ac0:	stp	x16, x30, [sp, #-16]!
 ac4:	adrp	x16, 13000 <PyInit__heapq@@Base+0x1239c>
 ac8:	ldr	x17, [x16, #4088]
 acc:	add	x16, x16, #0xff8
 ad0:	br	x17
 ad4:	nop
 ad8:	nop
 adc:	nop

0000000000000ae0 <__cxa_finalize@plt>:
 ae0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 ae4:	ldr	x17, [x16]
 ae8:	add	x16, x16, #0x0
 aec:	br	x17

0000000000000af0 <PyList_SetSlice@plt>:
 af0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 af4:	ldr	x17, [x16, #8]
 af8:	add	x16, x16, #0x8
 afc:	br	x17

0000000000000b00 <_Py_Dealloc@plt>:
 b00:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b04:	ldr	x17, [x16, #16]
 b08:	add	x16, x16, #0x10
 b0c:	br	x17

0000000000000b10 <PyErr_SetString@plt>:
 b10:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b14:	ldr	x17, [x16, #24]
 b18:	add	x16, x16, #0x18
 b1c:	br	x17

0000000000000b20 <PyObject_RichCompareBool@plt>:
 b20:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b24:	ldr	x17, [x16, #32]
 b28:	add	x16, x16, #0x20
 b2c:	br	x17

0000000000000b30 <PyList_Append@plt>:
 b30:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b34:	ldr	x17, [x16, #40]
 b38:	add	x16, x16, #0x28
 b3c:	br	x17

0000000000000b40 <__gmon_start__@plt>:
 b40:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b44:	ldr	x17, [x16, #48]
 b48:	add	x16, x16, #0x30
 b4c:	br	x17

0000000000000b50 <_PyArg_CheckPositional@plt>:
 b50:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b54:	ldr	x17, [x16, #56]
 b58:	add	x16, x16, #0x38
 b5c:	br	x17

0000000000000b60 <PyModule_Create2@plt>:
 b60:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b64:	ldr	x17, [x16, #64]
 b68:	add	x16, x16, #0x40
 b6c:	br	x17

0000000000000b70 <PyUnicode_DecodeUTF8@plt>:
 b70:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b74:	ldr	x17, [x16, #72]
 b78:	add	x16, x16, #0x48
 b7c:	br	x17

0000000000000b80 <PyModule_AddObject@plt>:
 b80:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b84:	ldr	x17, [x16, #80]
 b88:	add	x16, x16, #0x50
 b8c:	br	x17

Disassembly of section .text:

0000000000000b90 <PyInit__heapq@@Base-0xd4>:
     b90:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
     b94:	ldr	x0, [x0, #4040]
     b98:	cbz	x0, ba0 <PyModule_AddObject@plt+0x20>
     b9c:	b	b40 <__gmon_start__@plt>
     ba0:	ret
     ba4:	nop
     ba8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     bac:	add	x0, x0, #0x1e8
     bb0:	adrp	x1, 14000 <PyInit__heapq@@Base+0x1339c>
     bb4:	add	x1, x1, #0x1e8
     bb8:	cmp	x1, x0
     bbc:	b.eq	bd4 <PyModule_AddObject@plt+0x54>  // b.none
     bc0:	adrp	x1, 13000 <PyInit__heapq@@Base+0x1239c>
     bc4:	ldr	x1, [x1, #4008]
     bc8:	cbz	x1, bd4 <PyModule_AddObject@plt+0x54>
     bcc:	mov	x16, x1
     bd0:	br	x16
     bd4:	ret
     bd8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     bdc:	add	x0, x0, #0x1e8
     be0:	adrp	x1, 14000 <PyInit__heapq@@Base+0x1339c>
     be4:	add	x1, x1, #0x1e8
     be8:	sub	x1, x1, x0
     bec:	lsr	x2, x1, #63
     bf0:	add	x1, x2, x1, asr #3
     bf4:	cmp	xzr, x1, asr #1
     bf8:	asr	x1, x1, #1
     bfc:	b.eq	c14 <PyModule_AddObject@plt+0x94>  // b.none
     c00:	adrp	x2, 13000 <PyInit__heapq@@Base+0x1239c>
     c04:	ldr	x2, [x2, #4064]
     c08:	cbz	x2, c14 <PyModule_AddObject@plt+0x94>
     c0c:	mov	x16, x2
     c10:	br	x16
     c14:	ret
     c18:	stp	x29, x30, [sp, #-32]!
     c1c:	mov	x29, sp
     c20:	str	x19, [sp, #16]
     c24:	adrp	x19, 14000 <PyInit__heapq@@Base+0x1339c>
     c28:	ldrb	w0, [x19, #488]
     c2c:	cbnz	w0, c54 <PyModule_AddObject@plt+0xd4>
     c30:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
     c34:	ldr	x0, [x0, #4016]
     c38:	cbz	x0, c48 <PyModule_AddObject@plt+0xc8>
     c3c:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     c40:	ldr	x0, [x0, #88]
     c44:	bl	ae0 <__cxa_finalize@plt>
     c48:	bl	ba8 <PyModule_AddObject@plt+0x28>
     c4c:	mov	w0, #0x1                   	// #1
     c50:	strb	w0, [x19, #488]
     c54:	ldr	x19, [sp, #16]
     c58:	ldp	x29, x30, [sp], #32
     c5c:	ret
     c60:	b	bd8 <PyModule_AddObject@plt+0x58>

0000000000000c64 <PyInit__heapq@@Base>:
     c64:	stp	x29, x30, [sp, #-32]!
     c68:	str	x19, [sp, #16]
     c6c:	mov	x29, sp
     c70:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     c74:	add	x0, x0, #0x60
     c78:	mov	w1, #0x3f5                 	// #1013
     c7c:	bl	b60 <PyModule_Create2@plt>
     c80:	mov	x19, x0
     c84:	cbz	x0, cb0 <PyInit__heapq@@Base+0x4c>
     c88:	adrp	x0, 1000 <PyInit__heapq@@Base+0x39c>
     c8c:	add	x0, x0, #0x7a8
     c90:	mov	w1, #0x126f                	// #4719
     c94:	mov	x2, xzr
     c98:	bl	b70 <PyUnicode_DecodeUTF8@plt>
     c9c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     ca0:	mov	x2, x0
     ca4:	add	x1, x1, #0x380
     ca8:	mov	x0, x19
     cac:	bl	b80 <PyModule_AddObject@plt>
     cb0:	mov	x0, x19
     cb4:	ldr	x19, [sp, #16]
     cb8:	ldp	x29, x30, [sp], #32
     cbc:	ret
     cc0:	stp	x29, x30, [sp, #-32]!
     cc4:	str	x19, [sp, #16]
     cc8:	mov	x29, sp
     ccc:	cmp	x2, #0x2
     cd0:	mov	x19, x1
     cd4:	b.eq	cf8 <PyInit__heapq@@Base+0x94>  // b.none
     cd8:	mov	x8, x2
     cdc:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     ce0:	add	x0, x0, #0x391
     ce4:	mov	w2, #0x2                   	// #2
     ce8:	mov	w3, #0x2                   	// #2
     cec:	mov	x1, x8
     cf0:	bl	b50 <_PyArg_CheckPositional@plt>
     cf4:	cbz	w0, d04 <PyInit__heapq@@Base+0xa0>
     cf8:	ldp	x0, x1, [x19]
     cfc:	bl	e90 <PyInit__heapq@@Base+0x22c>
     d00:	b	d08 <PyInit__heapq@@Base+0xa4>
     d04:	mov	x0, xzr
     d08:	ldr	x19, [sp, #16]
     d0c:	ldp	x29, x30, [sp], #32
     d10:	ret
     d14:	stp	x29, x30, [sp, #-32]!
     d18:	str	x19, [sp, #16]
     d1c:	mov	x29, sp
     d20:	cmp	x2, #0x2
     d24:	mov	x19, x1
     d28:	b.eq	d4c <PyInit__heapq@@Base+0xe8>  // b.none
     d2c:	mov	x8, x2
     d30:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     d34:	add	x0, x0, #0x39a
     d38:	mov	w2, #0x2                   	// #2
     d3c:	mov	w3, #0x2                   	// #2
     d40:	mov	x1, x8
     d44:	bl	b50 <_PyArg_CheckPositional@plt>
     d48:	cbz	w0, d58 <PyInit__heapq@@Base+0xf4>
     d4c:	ldp	x0, x1, [x19]
     d50:	bl	1000 <PyInit__heapq@@Base+0x39c>
     d54:	b	d5c <PyInit__heapq@@Base+0xf8>
     d58:	mov	x0, xzr
     d5c:	ldr	x19, [sp, #16]
     d60:	ldp	x29, x30, [sp], #32
     d64:	ret
     d68:	stp	x29, x30, [sp, #-16]!
     d6c:	mov	x29, sp
     d70:	mov	x0, x1
     d74:	adrp	x1, 1000 <PyInit__heapq@@Base+0x39c>
     d78:	add	x1, x1, #0xdc
     d7c:	bl	1214 <PyInit__heapq@@Base+0x5b0>
     d80:	ldp	x29, x30, [sp], #16
     d84:	ret
     d88:	stp	x29, x30, [sp, #-32]!
     d8c:	str	x19, [sp, #16]
     d90:	mov	x29, sp
     d94:	cmp	x2, #0x2
     d98:	mov	x19, x1
     d9c:	b.eq	dc0 <PyInit__heapq@@Base+0x15c>  // b.none
     da0:	mov	x8, x2
     da4:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     da8:	add	x0, x0, #0x3ae
     dac:	mov	w2, #0x2                   	// #2
     db0:	mov	w3, #0x2                   	// #2
     db4:	mov	x1, x8
     db8:	bl	b50 <_PyArg_CheckPositional@plt>
     dbc:	cbz	w0, dcc <PyInit__heapq@@Base+0x168>
     dc0:	ldp	x0, x1, [x19]
     dc4:	bl	12f8 <PyInit__heapq@@Base+0x694>
     dc8:	b	dd0 <PyInit__heapq@@Base+0x16c>
     dcc:	mov	x0, xzr
     dd0:	ldr	x19, [sp, #16]
     dd4:	ldp	x29, x30, [sp], #32
     dd8:	ret
     ddc:	stp	x29, x30, [sp, #-16]!
     de0:	mov	x29, sp
     de4:	mov	x0, x1
     de8:	adrp	x1, 1000 <PyInit__heapq@@Base+0x39c>
     dec:	add	x1, x1, #0xdc
     df0:	bl	13bc <PyInit__heapq@@Base+0x758>
     df4:	ldp	x29, x30, [sp], #16
     df8:	ret
     dfc:	stp	x29, x30, [sp, #-16]!
     e00:	mov	x29, sp
     e04:	mov	x0, x1
     e08:	adrp	x1, 1000 <PyInit__heapq@@Base+0x39c>
     e0c:	add	x1, x1, #0x598
     e10:	bl	1214 <PyInit__heapq@@Base+0x5b0>
     e14:	ldp	x29, x30, [sp], #16
     e18:	ret
     e1c:	stp	x29, x30, [sp, #-16]!
     e20:	mov	x29, sp
     e24:	mov	x0, x1
     e28:	adrp	x1, 1000 <PyInit__heapq@@Base+0x39c>
     e2c:	add	x1, x1, #0x598
     e30:	bl	13bc <PyInit__heapq@@Base+0x758>
     e34:	ldp	x29, x30, [sp], #16
     e38:	ret
     e3c:	stp	x29, x30, [sp, #-32]!
     e40:	str	x19, [sp, #16]
     e44:	mov	x29, sp
     e48:	cmp	x2, #0x2
     e4c:	mov	x19, x1
     e50:	b.eq	e74 <PyInit__heapq@@Base+0x210>  // b.none
     e54:	mov	x8, x2
     e58:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     e5c:	add	x0, x0, #0x3dc
     e60:	mov	w2, #0x2                   	// #2
     e64:	mov	w3, #0x2                   	// #2
     e68:	mov	x1, x8
     e6c:	bl	b50 <_PyArg_CheckPositional@plt>
     e70:	cbz	w0, e80 <PyInit__heapq@@Base+0x21c>
     e74:	ldp	x0, x1, [x19]
     e78:	bl	177c <PyInit__heapq@@Base+0xb18>
     e7c:	b	e84 <PyInit__heapq@@Base+0x220>
     e80:	mov	x0, xzr
     e84:	ldr	x19, [sp, #16]
     e88:	ldp	x29, x30, [sp], #32
     e8c:	ret
     e90:	stp	x29, x30, [sp, #-32]!
     e94:	str	x19, [sp, #16]
     e98:	mov	x29, sp
     e9c:	ldr	x8, [x0, #8]
     ea0:	ldrb	w8, [x8, #171]
     ea4:	tbnz	w8, #1, ec8 <PyInit__heapq@@Base+0x264>
     ea8:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     eac:	ldr	x8, [x8, #4032]
     eb0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     eb4:	add	x1, x1, #0x3ed
     eb8:	ldr	x0, [x8]
     ebc:	bl	b10 <PyErr_SetString@plt>
     ec0:	mov	x19, xzr
     ec4:	b	f08 <PyInit__heapq@@Base+0x2a4>
     ec8:	mov	x19, x0
     ecc:	bl	b30 <PyList_Append@plt>
     ed0:	cbz	w0, edc <PyInit__heapq@@Base+0x278>
     ed4:	mov	x19, xzr
     ed8:	b	f08 <PyInit__heapq@@Base+0x2a4>
     edc:	ldr	x8, [x19, #16]
     ee0:	mov	x0, x19
     ee4:	mov	x1, xzr
     ee8:	sub	x2, x8, #0x1
     eec:	bl	f18 <PyInit__heapq@@Base+0x2b4>
     ef0:	mov	x19, xzr
     ef4:	cbnz	w0, f08 <PyInit__heapq@@Base+0x2a4>
     ef8:	adrp	x19, 13000 <PyInit__heapq@@Base+0x1239c>
     efc:	ldr	x19, [x19, #4048]
     f00:	mov	x0, x19
     f04:	bl	ff0 <PyInit__heapq@@Base+0x38c>
     f08:	mov	x0, x19
     f0c:	ldr	x19, [sp, #16]
     f10:	ldp	x29, x30, [sp], #32
     f14:	ret
     f18:	stp	x29, x30, [sp, #-64]!
     f1c:	str	x23, [sp, #16]
     f20:	stp	x22, x21, [sp, #32]
     f24:	stp	x20, x19, [sp, #48]
     f28:	mov	x29, sp
     f2c:	ldr	x22, [x0, #16]
     f30:	cmp	x22, x2
     f34:	b.le	fac <PyInit__heapq@@Base+0x348>
     f38:	mov	x21, x2
     f3c:	mov	x20, x1
     f40:	cmp	x2, x1
     f44:	b.le	fa4 <PyInit__heapq@@Base+0x340>
     f48:	ldr	x8, [x0, #24]
     f4c:	mov	x19, x0
     f50:	ldr	x0, [x8, x21, lsl #3]
     f54:	sub	x9, x21, #0x1
     f58:	asr	x23, x9, #1
     f5c:	ldr	x1, [x8, x23, lsl #3]
     f60:	mov	w2, wzr
     f64:	bl	b20 <PyObject_RichCompareBool@plt>
     f68:	tbnz	w0, #31, fc4 <PyInit__heapq@@Base+0x360>
     f6c:	ldr	x8, [x19, #16]
     f70:	cmp	x22, x8
     f74:	b.ne	fdc <PyInit__heapq@@Base+0x378>  // b.any
     f78:	cbz	w0, fc8 <PyInit__heapq@@Base+0x364>
     f7c:	ldr	x8, [x19, #24]
     f80:	lsl	x9, x23, #3
     f84:	lsl	x10, x21, #3
     f88:	cmp	x23, x20
     f8c:	ldr	x0, [x8, x10]
     f90:	ldr	x11, [x8, x9]
     f94:	mov	x21, x23
     f98:	str	x0, [x8, x9]
     f9c:	str	x11, [x8, x10]
     fa0:	b.gt	f54 <PyInit__heapq@@Base+0x2f0>
     fa4:	mov	w0, wzr
     fa8:	b	fc8 <PyInit__heapq@@Base+0x364>
     fac:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     fb0:	ldr	x8, [x8, #4056]
     fb4:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     fb8:	add	x1, x1, #0x40a
     fbc:	ldr	x0, [x8]
     fc0:	bl	b10 <PyErr_SetString@plt>
     fc4:	mov	w0, #0xffffffff            	// #-1
     fc8:	ldp	x20, x19, [sp, #48]
     fcc:	ldp	x22, x21, [sp, #32]
     fd0:	ldr	x23, [sp, #16]
     fd4:	ldp	x29, x30, [sp], #64
     fd8:	ret
     fdc:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     fe0:	ldr	x8, [x8, #4024]
     fe4:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     fe8:	add	x1, x1, #0x41d
     fec:	b	fbc <PyInit__heapq@@Base+0x358>
     ff0:	ldr	x8, [x0]
     ff4:	add	x8, x8, #0x1
     ff8:	str	x8, [x0]
     ffc:	ret
    1000:	stp	x29, x30, [sp, #-48]!
    1004:	str	x21, [sp, #16]
    1008:	stp	x20, x19, [sp, #32]
    100c:	mov	x29, sp
    1010:	ldr	x8, [x0, #8]
    1014:	ldrb	w8, [x8, #171]
    1018:	tbnz	w8, #1, 103c <PyInit__heapq@@Base+0x3d8>
    101c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1020:	ldr	x8, [x8, #4032]
    1024:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1028:	add	x1, x1, #0x3ed
    102c:	ldr	x0, [x8]
    1030:	bl	b10 <PyErr_SetString@plt>
    1034:	mov	x19, xzr
    1038:	b	10ac <PyInit__heapq@@Base+0x448>
    103c:	ldr	x8, [x0, #16]
    1040:	mov	x20, x0
    1044:	mov	x19, x1
    1048:	cbz	x8, 10a4 <PyInit__heapq@@Base+0x440>
    104c:	ldr	x8, [x20, #24]
    1050:	mov	x1, x19
    1054:	mov	w2, wzr
    1058:	ldr	x0, [x8]
    105c:	bl	b20 <PyObject_RichCompareBool@plt>
    1060:	tbnz	w0, #31, 1034 <PyInit__heapq@@Base+0x3d0>
    1064:	cbz	w0, 10a4 <PyInit__heapq@@Base+0x440>
    1068:	ldr	x8, [x20, #16]
    106c:	cbz	x8, 10c0 <PyInit__heapq@@Base+0x45c>
    1070:	ldr	x8, [x20, #24]
    1074:	mov	x0, x19
    1078:	ldr	x21, [x8]
    107c:	bl	ff0 <PyInit__heapq@@Base+0x38c>
    1080:	ldr	x8, [x20, #24]
    1084:	mov	x0, x20
    1088:	mov	x1, xzr
    108c:	str	x19, [x8]
    1090:	bl	10dc <PyInit__heapq@@Base+0x478>
    1094:	cbz	w0, 10d4 <PyInit__heapq@@Base+0x470>
    1098:	mov	x0, x21
    109c:	bl	11e8 <PyInit__heapq@@Base+0x584>
    10a0:	b	1034 <PyInit__heapq@@Base+0x3d0>
    10a4:	mov	x0, x19
    10a8:	bl	ff0 <PyInit__heapq@@Base+0x38c>
    10ac:	mov	x0, x19
    10b0:	ldp	x20, x19, [sp, #32]
    10b4:	ldr	x21, [sp, #16]
    10b8:	ldp	x29, x30, [sp], #48
    10bc:	ret
    10c0:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    10c4:	ldr	x8, [x8, #4056]
    10c8:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    10cc:	add	x1, x1, #0x40a
    10d0:	b	102c <PyInit__heapq@@Base+0x3c8>
    10d4:	mov	x19, x21
    10d8:	b	10ac <PyInit__heapq@@Base+0x448>
    10dc:	stp	x29, x30, [sp, #-64]!
    10e0:	stp	x24, x23, [sp, #16]
    10e4:	stp	x22, x21, [sp, #32]
    10e8:	stp	x20, x19, [sp, #48]
    10ec:	mov	x29, sp
    10f0:	ldr	x22, [x0, #16]
    10f4:	cmp	x22, x1
    10f8:	b.le	1188 <PyInit__heapq@@Base+0x524>
    10fc:	asr	x23, x22, #1
    1100:	mov	x19, x0
    1104:	mov	x20, x1
    1108:	cmp	x23, x1
    110c:	mov	x21, x1
    1110:	b.le	11a8 <PyInit__heapq@@Base+0x544>
    1114:	ldr	x8, [x19, #24]
    1118:	mov	x24, x20
    111c:	b	1144 <PyInit__heapq@@Base+0x4e0>
    1120:	lsl	x9, x21, #3
    1124:	lsl	x10, x24, #3
    1128:	ldr	x11, [x8, x10]
    112c:	ldr	x12, [x8, x9]
    1130:	cmp	x21, x23
    1134:	mov	x24, x21
    1138:	str	x11, [x8, x9]
    113c:	str	x12, [x8, x10]
    1140:	b.ge	11a8 <PyInit__heapq@@Base+0x544>  // b.tcont
    1144:	mov	w21, #0x1                   	// #1
    1148:	bfi	x21, x24, #1, #63
    114c:	add	x9, x21, #0x1
    1150:	cmp	x9, x22
    1154:	b.ge	1120 <PyInit__heapq@@Base+0x4bc>  // b.tcont
    1158:	ldr	x0, [x8, x21, lsl #3]
    115c:	ldr	x1, [x8, x9, lsl #3]
    1160:	mov	w2, wzr
    1164:	bl	b20 <PyObject_RichCompareBool@plt>
    1168:	tbnz	w0, #31, 11cc <PyInit__heapq@@Base+0x568>
    116c:	ldr	x8, [x19, #16]
    1170:	cmp	x22, x8
    1174:	b.ne	11d4 <PyInit__heapq@@Base+0x570>  // b.any
    1178:	ldr	x8, [x19, #24]
    117c:	eor	w9, w0, #0x1
    1180:	add	x21, x21, x9
    1184:	b	1120 <PyInit__heapq@@Base+0x4bc>
    1188:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    118c:	ldr	x8, [x8, #4056]
    1190:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1194:	add	x1, x1, #0x40a
    1198:	ldr	x0, [x8]
    119c:	bl	b10 <PyErr_SetString@plt>
    11a0:	mov	w0, #0xffffffff            	// #-1
    11a4:	b	11b8 <PyInit__heapq@@Base+0x554>
    11a8:	mov	x0, x19
    11ac:	mov	x1, x20
    11b0:	mov	x2, x21
    11b4:	bl	f18 <PyInit__heapq@@Base+0x2b4>
    11b8:	ldp	x20, x19, [sp, #48]
    11bc:	ldp	x22, x21, [sp, #32]
    11c0:	ldp	x24, x23, [sp, #16]
    11c4:	ldp	x29, x30, [sp], #64
    11c8:	ret
    11cc:	mov	w0, #0xffffffff            	// #-1
    11d0:	b	11b8 <PyInit__heapq@@Base+0x554>
    11d4:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    11d8:	ldr	x8, [x8, #4024]
    11dc:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    11e0:	add	x1, x1, #0x41d
    11e4:	b	1198 <PyInit__heapq@@Base+0x534>
    11e8:	stp	x29, x30, [sp, #-16]!
    11ec:	mov	x29, sp
    11f0:	ldr	x8, [x0]
    11f4:	subs	x8, x8, #0x1
    11f8:	str	x8, [x0]
    11fc:	b.eq	1208 <PyInit__heapq@@Base+0x5a4>  // b.none
    1200:	ldp	x29, x30, [sp], #16
    1204:	ret
    1208:	bl	b00 <_Py_Dealloc@plt>
    120c:	ldp	x29, x30, [sp], #16
    1210:	ret
    1214:	stp	x29, x30, [sp, #-64]!
    1218:	str	x23, [sp, #16]
    121c:	stp	x22, x21, [sp, #32]
    1220:	stp	x20, x19, [sp, #48]
    1224:	mov	x29, sp
    1228:	ldr	x8, [x0, #8]
    122c:	ldrb	w8, [x8, #171]
    1230:	tbnz	w8, #1, 1248 <PyInit__heapq@@Base+0x5e4>
    1234:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1238:	ldr	x8, [x8, #4032]
    123c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1240:	add	x1, x1, #0x3ed
    1244:	b	12a0 <PyInit__heapq@@Base+0x63c>
    1248:	ldr	x22, [x0, #16]
    124c:	mov	x19, x0
    1250:	cbz	x22, 1290 <PyInit__heapq@@Base+0x62c>
    1254:	ldr	x8, [x19, #24]
    1258:	sub	x23, x22, #0x1
    125c:	mov	x21, x1
    1260:	ldr	x20, [x8, x23, lsl #3]
    1264:	mov	x0, x20
    1268:	bl	ff0 <PyInit__heapq@@Base+0x38c>
    126c:	mov	x0, x19
    1270:	mov	x1, x23
    1274:	mov	x2, x22
    1278:	mov	x3, xzr
    127c:	bl	af0 <PyList_SetSlice@plt>
    1280:	cbz	w0, 12c4 <PyInit__heapq@@Base+0x660>
    1284:	mov	x0, x20
    1288:	bl	11e8 <PyInit__heapq@@Base+0x584>
    128c:	b	12a8 <PyInit__heapq@@Base+0x644>
    1290:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1294:	ldr	x8, [x8, #4056]
    1298:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    129c:	add	x1, x1, #0x40a
    12a0:	ldr	x0, [x8]
    12a4:	bl	b10 <PyErr_SetString@plt>
    12a8:	mov	x20, xzr
    12ac:	mov	x0, x20
    12b0:	ldp	x20, x19, [sp, #48]
    12b4:	ldp	x22, x21, [sp, #32]
    12b8:	ldr	x23, [sp, #16]
    12bc:	ldp	x29, x30, [sp], #64
    12c0:	ret
    12c4:	cmp	x22, #0x1
    12c8:	b.eq	12ac <PyInit__heapq@@Base+0x648>  // b.none
    12cc:	ldr	x8, [x19, #24]
    12d0:	mov	x0, x19
    12d4:	mov	x1, xzr
    12d8:	ldr	x22, [x8]
    12dc:	str	x20, [x8]
    12e0:	blr	x21
    12e4:	cbz	w0, 12f0 <PyInit__heapq@@Base+0x68c>
    12e8:	mov	x0, x22
    12ec:	b	1288 <PyInit__heapq@@Base+0x624>
    12f0:	mov	x20, x22
    12f4:	b	12ac <PyInit__heapq@@Base+0x648>
    12f8:	stp	x29, x30, [sp, #-16]!
    12fc:	mov	x29, sp
    1300:	adrp	x2, 1000 <PyInit__heapq@@Base+0x39c>
    1304:	add	x2, x2, #0xdc
    1308:	bl	1314 <PyInit__heapq@@Base+0x6b0>
    130c:	ldp	x29, x30, [sp], #16
    1310:	ret
    1314:	stp	x29, x30, [sp, #-48]!
    1318:	stp	x22, x21, [sp, #16]
    131c:	stp	x20, x19, [sp, #32]
    1320:	mov	x29, sp
    1324:	ldr	x8, [x0, #8]
    1328:	ldrb	w8, [x8, #171]
    132c:	tbnz	w8, #1, 1344 <PyInit__heapq@@Base+0x6e0>
    1330:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1334:	ldr	x8, [x8, #4032]
    1338:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    133c:	add	x1, x1, #0x3ed
    1340:	b	139c <PyInit__heapq@@Base+0x738>
    1344:	ldr	x8, [x0, #16]
    1348:	mov	x21, x0
    134c:	cbz	x8, 138c <PyInit__heapq@@Base+0x728>
    1350:	ldr	x8, [x21, #24]
    1354:	mov	x0, x1
    1358:	mov	x20, x2
    135c:	mov	x22, x1
    1360:	ldr	x19, [x8]
    1364:	bl	ff0 <PyInit__heapq@@Base+0x38c>
    1368:	ldr	x8, [x21, #24]
    136c:	mov	x0, x21
    1370:	mov	x1, xzr
    1374:	str	x22, [x8]
    1378:	blr	x20
    137c:	cbz	w0, 13a8 <PyInit__heapq@@Base+0x744>
    1380:	mov	x0, x19
    1384:	bl	11e8 <PyInit__heapq@@Base+0x584>
    1388:	b	13a4 <PyInit__heapq@@Base+0x740>
    138c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1390:	ldr	x8, [x8, #4056]
    1394:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1398:	add	x1, x1, #0x40a
    139c:	ldr	x0, [x8]
    13a0:	bl	b10 <PyErr_SetString@plt>
    13a4:	mov	x19, xzr
    13a8:	mov	x0, x19
    13ac:	ldp	x20, x19, [sp, #32]
    13b0:	ldp	x22, x21, [sp, #16]
    13b4:	ldp	x29, x30, [sp], #48
    13b8:	ret
    13bc:	stp	x29, x30, [sp, #-48]!
    13c0:	str	x21, [sp, #16]
    13c4:	stp	x20, x19, [sp, #32]
    13c8:	mov	x29, sp
    13cc:	ldr	x8, [x0, #8]
    13d0:	ldrb	w8, [x8, #171]
    13d4:	tbnz	w8, #1, 13f8 <PyInit__heapq@@Base+0x794>
    13d8:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    13dc:	ldr	x8, [x8, #4032]
    13e0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    13e4:	add	x1, x1, #0x3ed
    13e8:	ldr	x0, [x8]
    13ec:	bl	b10 <PyErr_SetString@plt>
    13f0:	mov	x19, xzr
    13f4:	b	1454 <PyInit__heapq@@Base+0x7f0>
    13f8:	ldr	x8, [x0, #16]
    13fc:	mov	x19, x0
    1400:	mov	x20, x1
    1404:	cmp	x8, #0x9c5
    1408:	b.lt	1420 <PyInit__heapq@@Base+0x7bc>  // b.tstop
    140c:	mov	x0, x19
    1410:	mov	x1, x20
    1414:	bl	1468 <PyInit__heapq@@Base+0x804>
    1418:	mov	x19, x0
    141c:	b	1454 <PyInit__heapq@@Base+0x7f0>
    1420:	asr	x21, x8, #1
    1424:	subs	x21, x21, #0x1
    1428:	b.lt	1444 <PyInit__heapq@@Base+0x7e0>  // b.tstop
    142c:	mov	x0, x19
    1430:	mov	x1, x21
    1434:	blr	x20
    1438:	cbz	w0, 1424 <PyInit__heapq@@Base+0x7c0>
    143c:	mov	x19, xzr
    1440:	b	1454 <PyInit__heapq@@Base+0x7f0>
    1444:	adrp	x19, 13000 <PyInit__heapq@@Base+0x1239c>
    1448:	ldr	x19, [x19, #4048]
    144c:	mov	x0, x19
    1450:	bl	ff0 <PyInit__heapq@@Base+0x38c>
    1454:	mov	x0, x19
    1458:	ldp	x20, x19, [sp, #32]
    145c:	ldr	x21, [sp, #16]
    1460:	ldp	x29, x30, [sp], #48
    1464:	ret
    1468:	stp	x29, x30, [sp, #-80]!
    146c:	str	x25, [sp, #16]
    1470:	stp	x24, x23, [sp, #32]
    1474:	stp	x22, x21, [sp, #48]
    1478:	stp	x20, x19, [sp, #64]
    147c:	mov	x29, sp
    1480:	ldr	x22, [x0, #16]
    1484:	mov	x20, x0
    1488:	mov	x19, x1
    148c:	asr	x24, x22, #1
    1490:	add	x0, x24, #0x1
    1494:	bl	1568 <PyInit__heapq@@Base+0x904>
    1498:	mov	x21, x0
    149c:	asr	x25, x22, #2
    14a0:	sub	x22, x0, #0x2
    14a4:	cmp	x22, x25
    14a8:	b.lt	14e8 <PyInit__heapq@@Base+0x884>  // b.tstop
    14ac:	mov	x0, x20
    14b0:	mov	x1, x22
    14b4:	blr	x19
    14b8:	mov	x23, x22
    14bc:	cbnz	w0, 1548 <PyInit__heapq@@Base+0x8e4>
    14c0:	tbz	w23, #0, 14dc <PyInit__heapq@@Base+0x878>
    14c4:	asr	x23, x23, #1
    14c8:	mov	x0, x20
    14cc:	mov	x1, x23
    14d0:	blr	x19
    14d4:	cbz	w0, 14c0 <PyInit__heapq@@Base+0x85c>
    14d8:	b	1548 <PyInit__heapq@@Base+0x8e4>
    14dc:	sub	x22, x22, #0x1
    14e0:	cmp	x22, x25
    14e4:	b.ge	14ac <PyInit__heapq@@Base+0x848>  // b.tcont
    14e8:	sub	x23, x21, #0x1
    14ec:	cmp	x24, x23
    14f0:	b.le	1534 <PyInit__heapq@@Base+0x8d0>
    14f4:	sub	x21, x24, #0x1
    14f8:	mov	x0, x20
    14fc:	mov	x1, x21
    1500:	blr	x19
    1504:	mov	x22, x21
    1508:	cbnz	w0, 1548 <PyInit__heapq@@Base+0x8e4>
    150c:	tbz	w22, #0, 1528 <PyInit__heapq@@Base+0x8c4>
    1510:	asr	x22, x22, #1
    1514:	mov	x0, x20
    1518:	mov	x1, x22
    151c:	blr	x19
    1520:	cbz	w0, 150c <PyInit__heapq@@Base+0x8a8>
    1524:	b	1548 <PyInit__heapq@@Base+0x8e4>
    1528:	sub	x21, x21, #0x1
    152c:	cmp	x21, x23
    1530:	b.ge	14f8 <PyInit__heapq@@Base+0x894>  // b.tcont
    1534:	adrp	x19, 13000 <PyInit__heapq@@Base+0x1239c>
    1538:	ldr	x19, [x19, #4048]
    153c:	mov	x0, x19
    1540:	bl	ff0 <PyInit__heapq@@Base+0x38c>
    1544:	b	154c <PyInit__heapq@@Base+0x8e8>
    1548:	mov	x19, xzr
    154c:	mov	x0, x19
    1550:	ldp	x20, x19, [sp, #64]
    1554:	ldp	x22, x21, [sp, #48]
    1558:	ldp	x24, x23, [sp, #32]
    155c:	ldr	x25, [sp, #16]
    1560:	ldp	x29, x30, [sp], #80
    1564:	ret
    1568:	cmp	x0, #0x2
    156c:	b.lt	1590 <PyInit__heapq@@Base+0x92c>  // b.tstop
    1570:	mov	w8, wzr
    1574:	cmp	x0, #0x3
    1578:	asr	x0, x0, #1
    157c:	add	w8, w8, #0x1
    1580:	b.gt	1574 <PyInit__heapq@@Base+0x910>
    1584:	mov	w8, w8
    1588:	lsl	x0, x0, x8
    158c:	ret
    1590:	lsl	x0, x0, xzr
    1594:	ret
    1598:	stp	x29, x30, [sp, #-64]!
    159c:	stp	x24, x23, [sp, #16]
    15a0:	stp	x22, x21, [sp, #32]
    15a4:	stp	x20, x19, [sp, #48]
    15a8:	mov	x29, sp
    15ac:	ldr	x22, [x0, #16]
    15b0:	cmp	x22, x1
    15b4:	b.le	1644 <PyInit__heapq@@Base+0x9e0>
    15b8:	asr	x23, x22, #1
    15bc:	mov	x19, x0
    15c0:	mov	x20, x1
    15c4:	cmp	x23, x1
    15c8:	mov	x21, x1
    15cc:	b.le	1664 <PyInit__heapq@@Base+0xa00>
    15d0:	ldr	x8, [x19, #24]
    15d4:	mov	x24, x20
    15d8:	b	1600 <PyInit__heapq@@Base+0x99c>
    15dc:	lsl	x9, x21, #3
    15e0:	lsl	x10, x24, #3
    15e4:	ldr	x11, [x8, x10]
    15e8:	ldr	x12, [x8, x9]
    15ec:	cmp	x21, x23
    15f0:	mov	x24, x21
    15f4:	str	x11, [x8, x9]
    15f8:	str	x12, [x8, x10]
    15fc:	b.ge	1664 <PyInit__heapq@@Base+0xa00>  // b.tcont
    1600:	mov	w21, #0x1                   	// #1
    1604:	bfi	x21, x24, #1, #63
    1608:	add	x9, x21, #0x1
    160c:	cmp	x9, x22
    1610:	b.ge	15dc <PyInit__heapq@@Base+0x978>  // b.tcont
    1614:	ldr	x0, [x8, x9, lsl #3]
    1618:	ldr	x1, [x8, x21, lsl #3]
    161c:	mov	w2, wzr
    1620:	bl	b20 <PyObject_RichCompareBool@plt>
    1624:	tbnz	w0, #31, 1688 <PyInit__heapq@@Base+0xa24>
    1628:	ldr	x8, [x19, #16]
    162c:	cmp	x22, x8
    1630:	b.ne	1690 <PyInit__heapq@@Base+0xa2c>  // b.any
    1634:	ldr	x8, [x19, #24]
    1638:	eor	w9, w0, #0x1
    163c:	add	x21, x21, x9
    1640:	b	15dc <PyInit__heapq@@Base+0x978>
    1644:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1648:	ldr	x8, [x8, #4056]
    164c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1650:	add	x1, x1, #0x40a
    1654:	ldr	x0, [x8]
    1658:	bl	b10 <PyErr_SetString@plt>
    165c:	mov	w0, #0xffffffff            	// #-1
    1660:	b	1674 <PyInit__heapq@@Base+0xa10>
    1664:	mov	x0, x19
    1668:	mov	x1, x20
    166c:	mov	x2, x21
    1670:	bl	16a4 <PyInit__heapq@@Base+0xa40>
    1674:	ldp	x20, x19, [sp, #48]
    1678:	ldp	x22, x21, [sp, #32]
    167c:	ldp	x24, x23, [sp, #16]
    1680:	ldp	x29, x30, [sp], #64
    1684:	ret
    1688:	mov	w0, #0xffffffff            	// #-1
    168c:	b	1674 <PyInit__heapq@@Base+0xa10>
    1690:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1694:	ldr	x8, [x8, #4024]
    1698:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    169c:	add	x1, x1, #0x41d
    16a0:	b	1654 <PyInit__heapq@@Base+0x9f0>
    16a4:	stp	x29, x30, [sp, #-64]!
    16a8:	str	x23, [sp, #16]
    16ac:	stp	x22, x21, [sp, #32]
    16b0:	stp	x20, x19, [sp, #48]
    16b4:	mov	x29, sp
    16b8:	ldr	x22, [x0, #16]
    16bc:	cmp	x22, x2
    16c0:	b.le	1738 <PyInit__heapq@@Base+0xad4>
    16c4:	mov	x21, x2
    16c8:	mov	x20, x1
    16cc:	cmp	x2, x1
    16d0:	b.le	1730 <PyInit__heapq@@Base+0xacc>
    16d4:	ldr	x8, [x0, #24]
    16d8:	mov	x19, x0
    16dc:	ldr	x1, [x8, x21, lsl #3]
    16e0:	sub	x9, x21, #0x1
    16e4:	asr	x23, x9, #1
    16e8:	ldr	x0, [x8, x23, lsl #3]
    16ec:	mov	w2, wzr
    16f0:	bl	b20 <PyObject_RichCompareBool@plt>
    16f4:	tbnz	w0, #31, 1750 <PyInit__heapq@@Base+0xaec>
    16f8:	ldr	x8, [x19, #16]
    16fc:	cmp	x22, x8
    1700:	b.ne	1768 <PyInit__heapq@@Base+0xb04>  // b.any
    1704:	cbz	w0, 1754 <PyInit__heapq@@Base+0xaf0>
    1708:	ldr	x8, [x19, #24]
    170c:	lsl	x9, x23, #3
    1710:	lsl	x10, x21, #3
    1714:	cmp	x23, x20
    1718:	ldr	x1, [x8, x10]
    171c:	ldr	x11, [x8, x9]
    1720:	mov	x21, x23
    1724:	str	x1, [x8, x9]
    1728:	str	x11, [x8, x10]
    172c:	b.gt	16e0 <PyInit__heapq@@Base+0xa7c>
    1730:	mov	w0, wzr
    1734:	b	1754 <PyInit__heapq@@Base+0xaf0>
    1738:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    173c:	ldr	x8, [x8, #4056]
    1740:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1744:	add	x1, x1, #0x40a
    1748:	ldr	x0, [x8]
    174c:	bl	b10 <PyErr_SetString@plt>
    1750:	mov	w0, #0xffffffff            	// #-1
    1754:	ldp	x20, x19, [sp, #48]
    1758:	ldp	x22, x21, [sp, #32]
    175c:	ldr	x23, [sp, #16]
    1760:	ldp	x29, x30, [sp], #64
    1764:	ret
    1768:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    176c:	ldr	x8, [x8, #4024]
    1770:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1774:	add	x1, x1, #0x41d
    1778:	b	1748 <PyInit__heapq@@Base+0xae4>
    177c:	stp	x29, x30, [sp, #-16]!
    1780:	mov	x29, sp
    1784:	adrp	x2, 1000 <PyInit__heapq@@Base+0x39c>
    1788:	add	x2, x2, #0x598
    178c:	bl	1314 <PyInit__heapq@@Base+0x6b0>
    1790:	ldp	x29, x30, [sp], #16
    1794:	ret

Disassembly of section .fini:

0000000000001798 <.fini>:
    1798:	stp	x29, x30, [sp, #-16]!
    179c:	mov	x29, sp
    17a0:	ldp	x29, x30, [sp], #16
    17a4:	ret
