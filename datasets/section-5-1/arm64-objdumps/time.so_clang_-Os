
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//time.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006d0 <.init>:
 6d0:	stp	x29, x30, [sp, #-16]!
 6d4:	mov	x29, sp
 6d8:	bl	7a0 <fprintf@plt+0x10>
 6dc:	ldp	x29, x30, [sp], #16
 6e0:	ret

Disassembly of section .plt:

00000000000006f0 <exit@plt-0x20>:
 6f0:	stp	x16, x30, [sp, #-16]!
 6f4:	adrp	x16, 10000 <dl_load@@Base+0xf78c>
 6f8:	ldr	x17, [x16, #4088]
 6fc:	add	x16, x16, #0xff8
 700:	br	x17
 704:	nop
 708:	nop
 70c:	nop

0000000000000710 <exit@plt>:
 710:	adrp	x16, 11000 <exit@GLIBC_2.17>
 714:	ldr	x17, [x16]
 718:	add	x16, x16, #0x0
 71c:	br	x17

0000000000000720 <__cxa_finalize@plt>:
 720:	adrp	x16, 11000 <exit@GLIBC_2.17>
 724:	ldr	x17, [x16, #8]
 728:	add	x16, x16, #0x8
 72c:	br	x17

0000000000000730 <gettimeofday@plt>:
 730:	adrp	x16, 11000 <exit@GLIBC_2.17>
 734:	ldr	x17, [x16, #16]
 738:	add	x16, x16, #0x10
 73c:	br	x17

0000000000000740 <__gmon_start__@plt>:
 740:	adrp	x16, 11000 <exit@GLIBC_2.17>
 744:	ldr	x17, [x16, #24]
 748:	add	x16, x16, #0x18
 74c:	br	x17

0000000000000750 <nanosleep@plt>:
 750:	adrp	x16, 11000 <exit@GLIBC_2.17>
 754:	ldr	x17, [x16, #32]
 758:	add	x16, x16, #0x20
 75c:	br	x17

0000000000000760 <fwrite@plt>:
 760:	adrp	x16, 11000 <exit@GLIBC_2.17>
 764:	ldr	x17, [x16, #40]
 768:	add	x16, x16, #0x28
 76c:	br	x17

0000000000000770 <dcgettext@plt>:
 770:	adrp	x16, 11000 <exit@GLIBC_2.17>
 774:	ldr	x17, [x16, #48]
 778:	add	x16, x16, #0x30
 77c:	br	x17

0000000000000780 <__errno_location@plt>:
 780:	adrp	x16, 11000 <exit@GLIBC_2.17>
 784:	ldr	x17, [x16, #56]
 788:	add	x16, x16, #0x38
 78c:	br	x17

0000000000000790 <fprintf@plt>:
 790:	adrp	x16, 11000 <exit@GLIBC_2.17>
 794:	ldr	x17, [x16, #64]
 798:	add	x16, x16, #0x40
 79c:	br	x17

Disassembly of section .text:

00000000000007a0 <dl_load@@Base-0xd4>:
 7a0:	adrp	x0, 10000 <dl_load@@Base+0xf78c>
 7a4:	ldr	x0, [x0, #4056]
 7a8:	cbz	x0, 7b0 <fprintf@plt+0x20>
 7ac:	b	740 <__gmon_start__@plt>
 7b0:	ret
 7b4:	nop
 7b8:	adrp	x0, 11000 <dl_load@@Base+0x1078c>
 7bc:	add	x0, x0, #0xb0
 7c0:	adrp	x1, 11000 <dl_load@@Base+0x1078c>
 7c4:	add	x1, x1, #0xb0
 7c8:	cmp	x1, x0
 7cc:	b.eq	7e4 <fprintf@plt+0x54>  // b.none
 7d0:	adrp	x1, 10000 <dl_load@@Base+0xf78c>
 7d4:	ldr	x1, [x1, #4032]
 7d8:	cbz	x1, 7e4 <fprintf@plt+0x54>
 7dc:	mov	x16, x1
 7e0:	br	x16
 7e4:	ret
 7e8:	adrp	x0, 11000 <dl_load@@Base+0x1078c>
 7ec:	add	x0, x0, #0xb0
 7f0:	adrp	x1, 11000 <dl_load@@Base+0x1078c>
 7f4:	add	x1, x1, #0xb0
 7f8:	sub	x1, x1, x0
 7fc:	lsr	x2, x1, #63
 800:	add	x1, x2, x1, asr #3
 804:	cmp	xzr, x1, asr #1
 808:	asr	x1, x1, #1
 80c:	b.eq	824 <fprintf@plt+0x94>  // b.none
 810:	adrp	x2, 10000 <dl_load@@Base+0xf78c>
 814:	ldr	x2, [x2, #4064]
 818:	cbz	x2, 824 <fprintf@plt+0x94>
 81c:	mov	x16, x2
 820:	br	x16
 824:	ret
 828:	stp	x29, x30, [sp, #-32]!
 82c:	mov	x29, sp
 830:	str	x19, [sp, #16]
 834:	adrp	x19, 11000 <dl_load@@Base+0x1078c>
 838:	ldrb	w0, [x19, #176]
 83c:	cbnz	w0, 864 <fprintf@plt+0xd4>
 840:	adrp	x0, 10000 <dl_load@@Base+0xf78c>
 844:	ldr	x0, [x0, #4040]
 848:	cbz	x0, 858 <fprintf@plt+0xc8>
 84c:	adrp	x0, 11000 <dl_load@@Base+0x1078c>
 850:	ldr	x0, [x0, #72]
 854:	bl	720 <__cxa_finalize@plt>
 858:	bl	7b8 <fprintf@plt+0x28>
 85c:	mov	w0, #0x1                   	// #1
 860:	strb	w0, [x19, #176]
 864:	ldr	x19, [sp, #16]
 868:	ldp	x29, x30, [sp], #32
 86c:	ret
 870:	b	7e8 <fprintf@plt+0x58>

0000000000000874 <dl_load@@Base>:
 874:	stp	x29, x30, [sp, #-96]!
 878:	stp	x24, x23, [sp, #48]
 87c:	stp	x22, x21, [sp, #64]
 880:	adrp	x22, 11000 <dl_load@@Base+0x1078c>
 884:	adrp	x23, 11000 <dl_load@@Base+0x1078c>
 888:	stp	x26, x25, [sp, #32]
 88c:	stp	x20, x19, [sp, #80]
 890:	str	x0, [x22, #184]
 894:	str	x1, [x23, #192]
 898:	ldr	w8, [x0]
 89c:	str	x27, [sp, #16]
 8a0:	mov	x29, sp
 8a4:	cmp	w8, #0x2
 8a8:	b.ne	964 <dl_load@@Base+0xf0>  // b.any
 8ac:	ldr	w8, [x0, #4]
 8b0:	tbnz	w8, #31, 964 <dl_load@@Base+0xf0>
 8b4:	adrp	x26, 11000 <dl_load@@Base+0x1078c>
 8b8:	adrp	x19, 0 <exit@plt-0x710>
 8bc:	adrp	x20, 0 <exit@plt-0x710>
 8c0:	mov	w24, wzr
 8c4:	mov	x8, xzr
 8c8:	mov	w25, #0x30                  	// #48
 8cc:	add	x26, x26, #0x50
 8d0:	add	x19, x19, #0xb62
 8d4:	add	x20, x20, #0xb96
 8d8:	madd	x21, x8, x25, x26
 8dc:	mov	x27, x8
 8e0:	ldr	x8, [x21]
 8e4:	cbz	x8, 928 <dl_load@@Base+0xb4>
 8e8:	ldr	x8, [x22, #184]
 8ec:	ldr	x0, [x23, #192]
 8f0:	mov	x1, x19
 8f4:	mov	x2, x21
 8f8:	ldr	x8, [x8, #48]
 8fc:	blr	x8
 900:	cbnz	w0, 920 <dl_load@@Base+0xac>
 904:	ldr	x8, [x22, #184]
 908:	ldr	x0, [x23, #192]
 90c:	ldr	x2, [x21]
 910:	mov	x1, x20
 914:	ldr	x8, [x8, #104]
 918:	blr	x8
 91c:	add	w24, w24, #0x1
 920:	mov	w8, #0x1                   	// #1
 924:	cbz	x27, 8d8 <dl_load@@Base+0x64>
 928:	ldr	x8, [x22, #184]
 92c:	ldr	x0, [x23, #192]
 930:	adrp	x1, 0 <exit@plt-0x710>
 934:	add	x1, x1, #0xc05
 938:	ldr	x8, [x8, #88]
 93c:	blr	x8
 940:	cmp	w24, #0x0
 944:	ldp	x20, x19, [sp, #80]
 948:	ldp	x22, x21, [sp, #64]
 94c:	ldp	x24, x23, [sp, #48]
 950:	ldp	x26, x25, [sp, #32]
 954:	ldr	x27, [sp, #16]
 958:	cset	w0, eq  // eq = none
 95c:	ldp	x29, x30, [sp], #96
 960:	ret
 964:	adrp	x19, 10000 <dl_load@@Base+0xf78c>
 968:	ldr	x19, [x19, #4048]
 96c:	adrp	x0, 0 <exit@plt-0x710>
 970:	add	x0, x0, #0xb40
 974:	mov	w1, #0x22                  	// #34
 978:	ldr	x3, [x19]
 97c:	mov	w2, #0x1                   	// #1
 980:	bl	760 <fwrite@plt>
 984:	ldr	x8, [x22, #184]
 988:	ldr	x0, [x19]
 98c:	adrp	x1, 0 <exit@plt-0x710>
 990:	add	x1, x1, #0xb63
 994:	ldp	w4, w5, [x8]
 998:	mov	w2, #0x2                   	// #2
 99c:	mov	w3, wzr
 9a0:	bl	790 <fprintf@plt>
 9a4:	mov	w0, #0x1                   	// #1
 9a8:	bl	710 <exit@plt>
 9ac:	sub	sp, sp, #0x30
 9b0:	str	x19, [sp, #32]
 9b4:	mov	x19, x1
 9b8:	mov	x0, sp
 9bc:	mov	x1, xzr
 9c0:	stp	x29, x30, [sp, #16]
 9c4:	add	x29, sp, #0x10
 9c8:	bl	730 <gettimeofday@plt>
 9cc:	ldp	d0, d1, [sp]
 9d0:	adrp	x8, 0 <exit@plt-0x710>
 9d4:	ldr	d2, [x8, #2864]
 9d8:	mov	w9, #0x1                   	// #1
 9dc:	scvtf	d1, d1
 9e0:	scvtf	d0, d0
 9e4:	fdiv	d1, d1, d2
 9e8:	fadd	d0, d1, d0
 9ec:	str	w9, [x19]
 9f0:	str	d0, [x19, #8]
 9f4:	str	wzr, [x19, #16]
 9f8:	mov	x0, x19
 9fc:	ldr	x19, [sp, #32]
 a00:	ldp	x29, x30, [sp, #16]
 a04:	add	sp, sp, #0x30
 a08:	ret
 a0c:	sub	sp, sp, #0x60
 a10:	stp	x22, x21, [sp, #64]
 a14:	adrp	x22, 11000 <dl_load@@Base+0x1078c>
 a18:	ldr	x8, [x22, #184]
 a1c:	stp	x29, x30, [sp, #48]
 a20:	stp	x20, x19, [sp, #80]
 a24:	adrp	x21, 11000 <dl_load@@Base+0x1078c>
 a28:	ldr	x8, [x8, #152]
 a2c:	ldr	x0, [x21, #192]
 a30:	mov	x19, x1
 a34:	add	x3, sp, #0x10
 a38:	mov	w2, #0x1                   	// #1
 a3c:	mov	x1, xzr
 a40:	add	x29, sp, #0x30
 a44:	blr	x8
 a48:	cbz	w0, a6c <dl_load@@Base+0x1f8>
 a4c:	ldr	d0, [sp, #24]
 a50:	fcmp	d0, #0.0
 a54:	b.pl	aa0 <dl_load@@Base+0x22c>  // b.nfrst
 a58:	ldr	x8, [x22, #184]
 a5c:	ldr	x20, [x21, #192]
 a60:	adrp	x1, 0 <exit@plt-0x710>
 a64:	add	x1, x1, #0xbe9
 a68:	b	a7c <dl_load@@Base+0x208>
 a6c:	ldr	x8, [x22, #184]
 a70:	ldr	x20, [x21, #192]
 a74:	adrp	x1, 0 <exit@plt-0x710>
 a78:	add	x1, x1, #0xbc0
 a7c:	ldr	x22, [x8, #136]
 a80:	mov	w2, #0x5                   	// #5
 a84:	mov	x0, xzr
 a88:	bl	770 <dcgettext@plt>
 a8c:	mov	x1, x0
 a90:	mov	x0, x20
 a94:	blr	x22
 a98:	fmov	d0, #-1.000000000000000000e+00
 a9c:	b	af4 <dl_load@@Base+0x280>
 aa0:	adrp	x8, 0 <exit@plt-0x710>
 aa4:	ldr	d1, [x8, #2872]
 aa8:	fcvtzs	x8, d0
 aac:	scvtf	d2, x8
 ab0:	fsub	d0, d0, d2
 ab4:	fmul	d0, d0, d1
 ab8:	fcvtzs	x9, d0
 abc:	mov	x0, sp
 ac0:	mov	x1, xzr
 ac4:	stp	x8, x9, [sp]
 ac8:	bl	750 <nanosleep@plt>
 acc:	mov	w20, w0
 ad0:	tbz	w0, #31, af0 <dl_load@@Base+0x27c>
 ad4:	ldr	x8, [x22, #184]
 ad8:	ldr	x21, [x21, #192]
 adc:	ldr	x22, [x8, #128]
 ae0:	bl	780 <__errno_location@plt>
 ae4:	ldr	w1, [x0]
 ae8:	mov	x0, x21
 aec:	blr	x22
 af0:	scvtf	d0, w20
 af4:	mov	w8, #0x1                   	// #1
 af8:	str	d0, [x19, #8]
 afc:	str	w8, [x19]
 b00:	str	wzr, [x19, #16]
 b04:	mov	x0, x19
 b08:	ldp	x20, x19, [sp, #80]
 b0c:	ldp	x22, x21, [sp, #64]
 b10:	ldp	x29, x30, [sp, #48]
 b14:	add	sp, sp, #0x60
 b18:	ret

Disassembly of section .fini:

0000000000000b1c <.fini>:
 b1c:	stp	x29, x30, [sp, #-16]!
 b20:	mov	x29, sp
 b24:	ldp	x29, x30, [sp], #16
 b28:	ret
